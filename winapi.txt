ARC_STATUS None None.HalpCopyNVRamBuffer(IN PCHAR NvDestPtr,IN PCHAR NvSrcPtr,IN ULONG Length)
AssemblyBuilder None None.DefineDynamicAssembly(AssemblyName name None,AssemblyBuilderAccess access None,string dir None,Evidence evidence None,PermissionSet requiredPermissions None,PermissionSet optionalPermissions None,PermissionSet refusedPermissions None,bool isSynchronized None)
Assembly None None.Load(AssemblyName assemblyRef None)
Assembly None None.Load(byte[] rawAssembly None,byte[] rawSymbolStore None,Evidence securityEvidence None)
Assembly None None.Load(string assemblyString None,Evidence assemblySecurity None)
assembly None None.name(optional None None)
async Task None.TestWriter(Stream stream None)
ATOM WINAPI kernel32.AddAtom(_In_ LPCTSTR lpString)
ATOM WINAPI kernel32.AddAtomW(_In_ LPCTSTR lpString)
ATOM WINAPI kernel32.DeleteAtom(_In_ ATOM nAtom)
ATOM WINAPI kernel32.FindAtomA(_In_ LPCTSTR lpString)
ATOM WINAPI kernel32.FindAtom(_In_ LPCTSTR lpString)
ATOM WINAPI kernel32.FindAtomW(_In_ LPCTSTR lpString)
ATOM WINAPI kernel32.GlobalAddAtomA(_In_ LPCTSTR lpString)
ATOM WINAPI kernel32.GlobalAddAtom(_In_ LPCTSTR lpString)
ATOM WINAPI kernel32.GlobalAddAtomW(_In_ LPCTSTR lpString)
ATOM WINAPI kernel32.GlobalDeleteAtom(_In_ ATOM nAtom)
ATOM WINAPI kernel32.GlobalFindAtomA(_In_ LPCTSTR lpString)
ATOM WINAPI kernel32.GlobalFindAtom(_In_ LPCTSTR lpString)
ATOM WINAPI kernel32.GlobalFindAtomW(_In_ LPCTSTR lpString)
BOOL ACMDRIVERENUMCB None.acmDriverEnumCallback(HACMDRIVERID hadid None,DWORD_PTR dwInstance None,DWORD fdwSupport None)
BOOL ACMFILTERENUMCB None.acmFilterEnumCallback(HACMDRIVERID hadid None,LPACMFILTERDETAILS pafd None,DWORD_PTR dwInstance None,DWORD fdwSupport None)
BOOL ACMFORMATENUMCB None.acmFormatEnumCallback(HACMDRIVERID hadid None,LPACMFORMATDETAILS pafd None,DWORD_PTR dwInstance None,DWORD fdwSupport None)
BOOL APIENTRY faultrep.AddERExcludedApplicationA(_In_ LPCTSTR szApplication)
BOOL APIENTRY faultrep.AddERExcludedApplication(_In_ LPCTSTR szApplication)
BOOL APIENTRY faultrep.AddERExcludedApplicationW(_In_ LPCTSTR szApplication)
BOOL APIENTRY kernel32.CheckTokenMembershipEx(_In_opt_ HANDLE TokenHandle,_In_ PSID SidToCheck,_In_ DWORD Flags,_Out_ PBOOL IsMember)
BOOLAPI None wininet.CommitUrlCacheEntryA(_In_ LPCSTR lpszUrlName,_In_ LPCSTR lpszLocalFileName,_In_ FILETIME ExpireTime,_In_ FILETIME LastModifiedTime,_In_ DWORD CacheEntryType,_In_ LPBYTE lpHeaderInfo,_In_ DWORD cchHeaderInfo,_Reserved_ LPCSTR lpszFileExtension,_In_ LPCSTR lpszOriginalUrl)
BOOLAPI None wininet.CommitUrlCacheEntryW(_In_ LPCWSTR lpszUrlName,_In_ LPCWSTR lpszLocalFileName,_In_ FILETIME ExpireTime,_In_ FILETIME LastModifiedTime,_In_ DWORD CacheEntryType,_In_ LPCWSTR lpHeaderInfo,_In_ DWORD cchHeaderInfo,_Reserved_ LPCWSTR lpszFileExtension,_In_ LPCWSTR lpszOriginalUrl)
BOOLAPI None wininet.CreateUrlCacheContainer(_In_ LPCTSTR lpszName,_In_ LPCTSTR lpszCachePrefix,_In_opt_ LPCTSTR lpszCachePath,_In_ DWORD dwKBCacheLimit,_In_ DWORD dwContainerType,_In_ DWORD dwOptions,_Reserved_ LPVOID lpvReserved,_Reserved_ LPDWORD lpdwReserved)
BOOLAPI None wininet.CreateUrlCacheEntryA(_In_ LPCTSTR lpszUrlName,_In_ DWORD dwExpectedFileSize,_In_ LPCTSTR lpszFileExtension,_Out_ LPTSTR lpszFileName,_Reserved_ DWORD dwReserved)
BOOLAPI None wininet.CreateUrlCacheEntry(_In_ LPCTSTR lpszUrlName,_In_ DWORD dwExpectedFileSize,_In_ LPCTSTR lpszFileExtension,_Out_ LPTSTR lpszFileName,_Reserved_ DWORD dwReserved)
BOOLAPI None wininet.CreateUrlCacheEntryW(_In_ LPCTSTR lpszUrlName,_In_ DWORD dwExpectedFileSize,_In_ LPCTSTR lpszFileExtension,_Out_ LPTSTR lpszFileName,_Reserved_ DWORD dwReserved)
BOOLAPI None wininet.DeleteUrlCacheEntryA(_In_ LPCTSTR lpszUrlName)
BOOLAPI None wininet.DeleteUrlCacheEntry(_In_ LPCTSTR lpszUrlName)
BOOLAPI None wininet.DeleteUrlCacheEntryW(_In_ LPCTSTR lpszUrlName)
BOOLAPI None wininet.FindCloseUrlCache(_In_ HANDLE hEnumHandle)
BOOLAPI None wininet.FindNextUrlCacheEntryA(_In_ HANDLE hEnumHandle,_Out_ LPINTERNET_CACHE_ENTRY_INFO lpNextCacheEntryInfo,_Inout_ LPDWORD lpcbCacheEntryInfo)
BOOLAPI None wininet.FindNextUrlCacheEntry(_In_ HANDLE hEnumHandle,_Out_ LPINTERNET_CACHE_ENTRY_INFO lpNextCacheEntryInfo,_Inout_ LPDWORD lpcbCacheEntryInfo)
BOOLAPI None wininet.FindNextUrlCacheEntryW(_In_ HANDLE hEnumHandle,_Out_ LPINTERNET_CACHE_ENTRY_INFO lpNextCacheEntryInfo,_Inout_ LPDWORD lpcbCacheEntryInfo)
BOOLAPI None wininet.GetUrlCacheEntryInfoExA(_In_ LPCTSTR lpszUrl,_Inout_opt_ LPINTERNET_CACHE_ENTRY_INFO lpCacheEntryInfo,_Inout_opt_ LPDWORD lpcbCacheEntryInfo,_Reserved_ LPTSTR lpszRedirectUrl,_Reserved_ LPDWORD lpcbRedirectUrl,_Reserved_ LPVOID lpReserved,_In_ DWORD dwFlags)
BOOLAPI None wininet.GetUrlCacheEntryInfoEx(_In_ LPCTSTR lpszUrl,_Inout_opt_ LPINTERNET_CACHE_ENTRY_INFO lpCacheEntryInfo,_Inout_opt_ LPDWORD lpcbCacheEntryInfo,_Reserved_ LPTSTR lpszRedirectUrl,_Reserved_ LPDWORD lpcbRedirectUrl,_Reserved_ LPVOID lpReserved,_In_ DWORD dwFlags)
BOOLAPI None wininet.GetUrlCacheEntryInfoExW(_In_ LPCTSTR lpszUrl,_Inout_opt_ LPINTERNET_CACHE_ENTRY_INFO lpCacheEntryInfo,_Inout_opt_ LPDWORD lpcbCacheEntryInfo,_Reserved_ LPTSTR lpszRedirectUrl,_Reserved_ LPDWORD lpcbRedirectUrl,_Reserved_ LPVOID lpReserved,_In_ DWORD dwFlags)
BOOLAPI None wininet.InternetUnlockRequestFile(_In_ HANDLE hLockRequestInfo)
BOOLAPI None wininet.ReadUrlCacheEntryStream(_In_ HANDLE hUrlCacheStream,_In_ DWORD dwLocation,_Inout_ LPVOID lpBuffer,_Inout_ LPDWORD lpdwLen,_In_ DWORD dwReserved)
BOOLAPI None wininet.RetrieveUrlCacheEntryFileA(_In_ LPCTSTR lpszUrlName,_Out_ LPINTERNET_CACHE_ENTRY_INFO lpCacheEntryInfo,_Inout_ LPDWORD lpcbCacheEntryInfo,_In_ DWORD dwReserved)
BOOLAPI None wininet.RetrieveUrlCacheEntryFile(_In_ LPCTSTR lpszUrlName,_Out_ LPINTERNET_CACHE_ENTRY_INFO lpCacheEntryInfo,_Inout_ LPDWORD lpcbCacheEntryInfo,_In_ DWORD dwReserved)
BOOLAPI None wininet.RetrieveUrlCacheEntryFileW(_In_ LPCTSTR lpszUrlName,_Out_ LPINTERNET_CACHE_ENTRY_INFO lpCacheEntryInfo,_Inout_ LPDWORD lpcbCacheEntryInfo,_In_ DWORD dwReserved)
BOOLAPI None wininet.SetUrlCacheEntryGroupA(_In_ LPCTSTR lpszUrlName,_In_ DWORD dwFlags,_In_ GROUPID GroupId,_In_ LPBYTE pbGroupAttributes,_In_ DWORD cbGroupAttributes,_In_ LPVOID lpReserved)
BOOLAPI None wininet.SetUrlCacheEntryGroup(_In_ LPCTSTR lpszUrlName,_In_ DWORD dwFlags,_In_ GROUPID GroupId,_In_ LPBYTE pbGroupAttributes,_In_ DWORD cbGroupAttributes,_In_ LPVOID lpReserved)
BOOLAPI None wininet.SetUrlCacheEntryGroupW(_In_ LPCTSTR lpszUrlName,_In_ DWORD dwFlags,_In_ GROUPID GroupId,_In_ LPBYTE pbGroupAttributes,_In_ DWORD cbGroupAttributes,_In_ LPVOID lpReserved)
BOOLAPI None wininet.SetUrlCacheEntryInfoA(_In_ LPCTSTR lpszUrlName,_In_ LPINTERNET_CACHE_ENTRY_INFO lpCacheEntryInfo,_In_ DWORD dwFieldControl)
BOOLAPI None wininet.SetUrlCacheEntryInfo(_In_ LPCTSTR lpszUrlName,_In_ LPINTERNET_CACHE_ENTRY_INFO lpCacheEntryInfo,_In_ DWORD dwFieldControl)
BOOLAPI None wininet.SetUrlCacheEntryInfoW(_In_ LPCTSTR lpszUrlName,_In_ LPINTERNET_CACHE_ENTRY_INFO lpCacheEntryInfo,_In_ DWORD dwFieldControl)
BOOLAPI None wininet.UnlockUrlCacheEntryFileA(_In_ LPCTSTR lpszUrlName,_In_ DWORD dwReserved)
BOOLAPI None wininet.UnlockUrlCacheEntryFile(_In_ LPCTSTR lpszUrlName,_In_ DWORD dwReserved)
BOOLAPI None wininet.UnlockUrlCacheEntryFileW(_In_ LPCTSTR lpszUrlName,_In_ DWORD dwReserved)
BOOLAPI None wininet.UnlockUrlCacheEntryStream(_In_ HANDLE hUrlCacheStream,_In_ DWORD dwReserved)
BOOL CALLBACK input.InstallLayoutOrTip(_In_ LPCWSTR psz,_In_ DWORD dwFlags)
BOOL CALLBACK input.InstallLayoutOrTipUserReg(_In_opt_ LPCWSTR pszUserReg,_In_opt_ LPCWSTR pszSystemReg,_In_opt_ LPCWSTR pszSoftwareReg,_In_ LPCWSTR psz,_In_ DWORD dwFlags)
BOOL CALLBACK input.SaveDefaultUserInputSettings(_In_ HWND hwndParent,_In_ HKEY hSourceRegKey)
BOOL CALLBACK input.SaveSystemAcctInputSettings(_In_ HWND hwndParent,_In_ HKEY hSourceRegKey)
BOOL CALLBACK input.SetDefaultLayoutOrTipUserReg(_In_opt_ LPCWSTR pszUserReg,_In_opt_ LPCWSTR pszSystemReg,_In_opt_ LPCWSTR pszSoftwareReg,_In_ LPCWSTR psz,_In_ DWORD dwFlags)
BOOL CALLBACK None.AddPropSheetPageProc(HPROPSHEETPAGE hpage None,LPARAM lParam None)
BOOL CALLBACK None.AuthzAccessCheckCallback(_In_ AUTHZ_CLIENT_CONTEXT_HANDLE hAuthzClientContext,_In_ PACE_HEADER pAce,_In_opt_ PVOID pArgs,_Inout_ PBOOL pbAceApplicable)
BOOL CALLBACK None.AuthzComputeGroupsCallback(_In_ AUTHZ_CLIENT_CONTEXT_HANDLE hAuthzClientContext,_In_ PVOID Args,_Out_ PSID_AND_ATTRIBUTES *pSidAttrArray,_Out_ PDWORD pSidCount,_Out_ PSID_AND_ATTRIBUTES *pRestrictedSidAttrArray,_Out_ PDWORD pRestrictedSidCount)
BOOL CALLBACK None.AuthzFreeCentralAccessPolicyCallback(_In_ PVOID pCentralAccessPolicy)
BOOL CALLBACK None.AuthzGetCentralAccessPolicyCallback(_In_ AUTHZ_CLIENT_CONTEXT_HANDLE hAuthzClientContext,_In_ PSID capid,_In_opt_ PVOID pArgs,_Out_ PBOOL pCentralAccessPolicyApplicable,_Out_ PVOID ppCentralAccessPolicy)
BOOL CALLBACK None.BrushDlgProc(HWND hdlg None,UINT message None,LONG wParam None,LONG lParam None)
BOOL CALLBACK None.ClusterSetupProgressCallback(_In_opt_ PVOID pvCallbackArg,_In_ CLUSTER_SETUP_PHASE eSetupPhase,_In_ CLUSTER_SETUP_PHASE_TYPE ePhaseType,_In_ CLUSTER_SETUP_PHASE_SEVERITY ePhaseSeverity,_In_ DWORD dwPercentComplete,_In_opt_ PCWSTR lpszObjectName,_In_ DWORD dwStatus)
BOOL CALLBACK None.ClusterUpgradeProgressCallback(PVOID pvCallbackArg None,CLUSTER_UPGRADE_PHASE eUpgradePhase None)
BOOL CALLBACK None.EnumCalendarInfoProcExA(_In_ LPTSTR lpCalendarInfoString,_In_ CALID Calendar)
BOOL CALLBACK None.EnumCalendarInfoProcExEx(_In_ LPWSTR lpCalendarInfoString,_In_ CALID Calendar,_In_ LPWSTR lpReserved,_In_ LPARAM lParam)
BOOL CALLBACK None.EnumCalendarInfoProcEx(_In_ LPTSTR lpCalendarInfoString,_In_ CALID Calendar)
BOOL CALLBACK None.EnumCalendarInfoProcExW(_In_ LPTSTR lpCalendarInfoString,_In_ CALID Calendar)
BOOL CALLBACK None.EnumCalendarInfoProc(_In_ LPTSTR lpCalendarInfoString)
BOOL CALLBACK None.EnumChildProc(_In_ HWND hwnd,_In_ LPARAM lParam)
BOOL CALLBACK None.EnumCodePagesProc(_In_ LPTSTR lpCodePageString)
BOOL CALLBACK None.EnumDateFormatsProcExEx(_In_ LPWSTR lpDateFormatString,_In_ CALID CalendarID,_In_ LPARAM lParam)
BOOL CALLBACK None.EnumDateFormatsProcEx(_In_ LPTSTR lpDateFormatString,_In_ CALID CalendarID)
BOOL CALLBACK None.EnumDateFormatsProc(_In_ LPTSTR lpDateFormatString)
BOOL CALLBACK None.EnumDesktopProc(_In_ LPTSTR lpszDesktop,_In_ LPARAM lParam)
BOOL CALLBACK None.EnumDirTreeProc(_In_ PCTSTR FilePath,_In_opt_ PVOID CallerData)
BOOL CALLBACK None.EnumerateLoadedModulesProc64(_In_ PCTSTR ModuleName,_In_ DWORD64 ModuleBase,_In_ ULONG ModuleSize,_In_opt_ PVOID UserContext)
BOOL CALLBACK None.EnumGeoInfoProc(_In_ GEOID GeoId)
BOOL CALLBACK None.EnumInputContext(_In_ HIMC hIMC,_In_ LPARAM lParam)
BOOL CALLBACK None.EnumLanguageGroupLocalesProc(_In_ LGRPID LanguageGroup,_In_ LCID Locale,_In_ LPTSTR lpLocaleString,_In_ LONG_PTR lParam)
BOOL CALLBACK None.EnumLanguageGroupsProc(_In_ LGRPID LanguageGroup,_In_ LPTSTR lpLanguageGroupString,_In_ LPTSTR lpLanguageGroupNameString,_In_ DWORD dwFlags,_In_ LONG_PTR lParam)
BOOL CALLBACK None.EnumLocalesProcEx(_In_ LPWSTR lpLocaleString,_In_ DWORD dwFlags,_In_ LPARAM lParam)
BOOL CALLBACK None.EnumLocalesProc(_In_ LPTSTR lpLocaleString)
BOOL CALLBACK None.EnumModules(PCTSTR ModuleName None,DWORD64 BaseOfDll None,PVOID UserContext None)
BOOL CALLBACK None.EnumPageFilesProc(_In_ LPVOID pContext,_In_ PENUM_PAGE_FILE_INFORMATION pPageFileInfo,_In_ LPCTSTR lpFilename)
BOOL CALLBACK None.EnumResLangProcA(_In_opt_ HMODULE hModule,_In_ LPCTSTR lpszType,_In_ LPCTSTR lpszName,_In_ WORD wIDLanguage,_In_ LONG_PTR lParam)
BOOL CALLBACK None.EnumResLangProc(_In_opt_ HMODULE hModule,_In_ LPCTSTR lpszType,_In_ LPCTSTR lpszName,_In_ WORD wIDLanguage,_In_ LONG_PTR lParam)
BOOL CALLBACK None.EnumResLangProcW(_In_opt_ HMODULE hModule,_In_ LPCTSTR lpszType,_In_ LPCTSTR lpszName,_In_ WORD wIDLanguage,_In_ LONG_PTR lParam)
BOOL CALLBACK None.EnumResNameProcA(_In_opt_ HMODULE hModule,_In_ LPCTSTR lpszType,_In_ LPTSTR lpszName,_In_ LONG_PTR lParam)
BOOL CALLBACK None.EnumResNameProc(_In_opt_ HMODULE hModule,_In_ LPCTSTR lpszType,_In_ LPTSTR lpszName,_In_ LONG_PTR lParam)
BOOL CALLBACK None.EnumResNameProcW(_In_opt_ HMODULE hModule,_In_ LPCTSTR lpszType,_In_ LPTSTR lpszName,_In_ LONG_PTR lParam)
BOOL CALLBACK None.EnumResTypeProcA(_In_opt_ HMODULE hModule,_In_ LPTSTR lpszType,_In_ LONG_PTR lParam)
BOOL CALLBACK None.EnumResTypeProc(_In_opt_ HMODULE hModule,_In_ LPTSTR lpszType,_In_ LONG_PTR lParam)
BOOL CALLBACK None.EnumResTypeProcW(_In_opt_ HMODULE hModule,_In_ LPTSTR lpszType,_In_ LONG_PTR lParam)
BOOL CALLBACK None.EnumSymProc(PSYMBOL_INFO pSymInfo None,ULONG SymbolSize None,PVOID UserContext None)
BOOL CALLBACK None.EnumThreadWndProc(_In_ HWND hwnd,_In_ LPARAM lParam)
BOOL CALLBACK None.EnumTimeFormatsProcEx(_In_ LPWSTR lpTimeFormatString,_In_ LPARAM lParam)
BOOL CALLBACK None.EnumTimeFormatsProc(_In_ LPTSTR lpTimeFormatString)
BOOL CALLBACK None.EnumUILanguagesProc(_In_ LPTSTR lpUILanguageString,_In_ LONG_PTR lParam)
BOOL CALLBACK None.EnumWindowsProc(_In_ HWND hwnd,_In_ LPARAM lParam)
BOOL CALLBACK None.EnumWindowStationProc(_In_ LPTSTR lpszWindowStation,_In_ LPARAM lParam)
BOOL CALLBACK None.FaxSendCallback(__in HANDLE FaxHandle,__in HCALL CallHandle,__in DWORD Reserved1,__in DWORD Reserved2)
BOOL CALLBACK None.FindDebugInfoFileProc(_In_ HANDLE FileHandle,_In_ PCTSTR FileName,_In_ PVOID CallerData)
BOOL CALLBACK None.FindExecutableImageProc(_In_ HANDLE FileHandle,_In_ PCTSTR FileName,_In_ PVOID CallerData)
BOOL CALLBACK None.Geo_EnumNameProc(_In_ PWSTR GeoName,LPARAM data None)
BOOL CALLBACK None.InitOnceCallback(_Inout_ PINIT_ONCE InitOnce,_Inout_opt_ PVOID Parameter,_Out_opt_ PVOID *Context)
BOOL CALLBACK None.MainWndProc(HWND hwnd None,UINT uMsg None,WPARAM wParam None,LPARAM lParam None)
BOOL CALLBACK None.MprAdminAcceptNewConnection2(_In_ RAS_CONNECTION_0 *pRasConnection0,_In_ RAS_CONNECTION_1 *pRasConnection1,_In_ RAS_CONNECTION_2 *pRasConnection2)
BOOL CALLBACK None.MprAdminAcceptNewConnection3(_In_ RAS_CONNECTION_0 *pRasConnection0,_In_ RAS_CONNECTION_1 *pRasConnection1,_In_ RAS_CONNECTION_2 *pRasConnection2,_In_ RAS_CONNECTION_3 *pRasConnection3)
BOOL CALLBACK None.MprAdminAcceptNewConnectionEx(_In_ PRAS_CONNECTION_EX *pRasConn)
BOOL CALLBACK None.MprAdminAcceptNewConnection(_In_ RAS_CONNECTION_0 *pRasConnection0,_In_ RAS_CONNECTION_1 *pRasConnection1)
BOOL CALLBACK None.MprAdminAcceptNewLink(_In_ RAS_PORT_0 *pRasPort0,_In_ RAS_PORT_1 *pRasPort1)
BOOL CALLBACK None.MprAdminAcceptReauthenticationEx(_In_ RAS_CONNECTION_EX *pRasConn)
BOOL CALLBACK None.MprAdminAcceptReauthentication(_In_ RAS_CONNECTION_0 *pRasConnection0,_In_ RAS_CONNECTION_1 *pRasConnection1,_In_ RAS_CONNECTION_2 *pRasConnection2,_In_ RAS_CONNECTION_3 *pRasConnection3)
BOOL CALLBACK None.PaintHook(HWND hwndDlg None,UINT uMsg None,WPARAM wParam None,LPARAM lParam None)
BOOL CALLBACK None.PENUM_PAGE_FILE_CALLBACKA(_In_ LPVOID pContext,_In_ PENUM_PAGE_FILE_INFORMATION pPageFileInfo,_In_ LPCTSTR lpFilename)
BOOL CALLBACK None.PENUM_PAGE_FILE_CALLBACKW(_In_ LPVOID pContext,_In_ PENUM_PAGE_FILE_INFORMATION pPageFileInfo,_In_ LPCTSTR lpFilename)
BOOL CALLBACK None.PropEnumProcA(_In_ HWND hwnd,_In_ LPCTSTR lpszString,_In_ HANDLE hData)
BOOL CALLBACK None.PropEnumProcExA(_In_ HWND hwnd,_In_ LPTSTR lpszString,_In_ HANDLE hData,_In_ ULONG_PTR dwData)
BOOL CALLBACK None.PropEnumProcEx(_In_ HWND hwnd,_In_ LPTSTR lpszString,_In_ HANDLE hData,_In_ ULONG_PTR dwData)
BOOL CALLBACK None.PropEnumProcExW(_In_ HWND hwnd,_In_ LPTSTR lpszString,_In_ HANDLE hData,_In_ ULONG_PTR dwData)
BOOL CALLBACK None.PropEnumProc(_In_ HWND hwnd,_In_ LPCTSTR lpszString,_In_ HANDLE hData)
BOOL CALLBACK None.PropEnumProcW(_In_ HWND hwnd,_In_ LPCTSTR lpszString,_In_ HANDLE hData)
BOOL CALLBACK None.PSYM_ENUMERATESYMBOLS_CALLBACK(_In_ PSYMBOL_INFO pSymInfo,_In_ ULONG SymbolSize,_In_opt_ PVOID UserContext)
BOOL CALLBACK None.PSYM_ENUMERATESYMBOLS_CALLBACKW(_In_ PSYMBOL_INFO pSymInfo,_In_ ULONG SymbolSize,_In_opt_ PVOID UserContext)
BOOL CALLBACK None.ReadProcessMemoryProc64(_In_ HANDLE hProcess,_In_ DWORD64 lpBaseAddress,_Out_ PVOID lpBuffer,_In_ DWORD nSize,_Out_ LPDWORD lpNumberOfBytesRead)
BOOL CALLBACK None.SymEnumerateModulesProc64(_In_ PCTSTR ModuleName,_In_ DWORD64 BaseOfDll,_In_opt_ PVOID UserContext)
BOOL CALLBACK None.SymEnumerateSymbolsProc64(_In_ PCTSTR SymbolName,_In_ DWORD64 SymbolAddress,_In_ ULONG SymbolSize,_In_opt_ PVOID UserContext)
BOOL CALLBACK None.SymEnumLinesProc(_In_ PSRCCODEINFO LineInfo,_In_ PVOID UserContext)
BOOL CALLBACK None.SymEnumProcessesProc(_In_ HANDLE hProcess,_In_ PVOID UserContext)
BOOL CALLBACK None.SymEnumSourceFilesProc(_In_ PSOURCEFILE pSourceFile,_In_opt_ PVOID UserContext)
BOOL CALLBACK None.SymEnumSourceFileTokensProc(_In_ PVOID token,_In_ size_t size)
BOOL CALLBACK None.SymEnumSymbolsProc(_In_ PSYMBOL_INFO pSymInfo,_In_ ULONG SymbolSize,_In_opt_ PVOID UserContext)
BOOL CALLBACK None.SymFindFileInPathProc(_In_ PCTSTR fileName,_In_ PVOID context)
BOOL CALLBACK None.SymRegisterCallbackProc64(_In_ HANDLE hProcess,_In_ ULONG ActionCode,_In_opt_ ULONG64 CallbackData,_In_opt_ ULONG64 UserContext)
BOOL CALLBACK None.TranslateDispatchCallback(LPMSG lpmsg None)
BOOL CALLBACK None.WINSTAENUMPROCA(_In_ LPTSTR lpszWindowStation,_In_ LPARAM lParam)
BOOL CALLBACK None.WINSTAENUMPROCW(_In_ LPTSTR lpszWindowStation,_In_ LPARAM lParam)
BOOL __cdecl instrsa5.GetEncSChannel(_Out_ BYTE **pData,_Out_ DWORD *dwDecSize)
BOOL DHCP_API_FUNCTION dhcpsapi.DhcpHlprIsV4PolicySingleUC(_In_ LPDHCP_POLICY Policy)
BOOL DHCP_API_FUNCTION dhcpsapi.DhcpHlprIsV4PolicyWellFormed(_In_ LPDHCP_POLICY pPolicy)
BOOLEAN CALLBACK None.SecureMemoryCacheCallback(_In_ PVOID Addr,_In_ SIZE_T Range)
BOOLEAN _cdecl None.QUERYCLIENTCERT(_In_ PLDAP Connection,_In_ PSecPkgContext_IssuerListInfoEx trusted_CAs,_Inout_ PCCERT_CONTEXT *ppCertificate)
BOOLEAN _cdecl None.VERIFYSERVERCERT(PLDAP Connection None,PCCERT_CONTEXT *ppServerCert None)
Boolean None advapi32.EventEnabled(_In_ REGHANDLE RegHandle,_In_ PCEVENT_DESCRIPTOR EventDescriptor)
Boolean None advapi32.EventProviderEnabled(_In_ REGHANDLE RegHandle,_In_ UCHAR Level,_In_ ULONGLONG Keyword)
BOOLEAN None advapi32.RtlGenRandom(_Out_ PVOID RandomBuffer,_In_ ULONG RandomBufferLength)
boolean None cimwin32.GetEffectivePermission([in] uint32 Permissions)
boolean None None.BuildProjectFile(String projectFileName None,String[] targetNames None,IDictionary globalProperties None,IDictionary targetOutputs None)
BOOLEAN None None.CancelAdapterChannel(_In_ PDMA_ADAPTER DmaAdapter,_In_ PDEVICE_OBJECT DeviceObject,_In_ PVOID DmaTransferContext)
boolean None None.CanExecute(Object parameter None)
boolean None None.ContainsKey(TKey key None)
boolean None None.Contains(Object value None)
BOOLEAN None None.DeleteSharedMemory(_In_ PVOID SharedMem)
boolean None None.Equals(Object other None)
boolean None None.Equals(T other None)
BOOLEAN None None.ExAcquireResourceExclusiveLite(_Inout_ PERESOURCE Resource,_In_ BOOLEAN Wait)
BOOLEAN None None.ExAcquireResourceSharedLite(_Inout_ PERESOURCE Resource,_In_ BOOLEAN Wait)
BOOLEAN None None.ExAcquireRundownProtectionEx(_Inout_ PEX_RUNDOWN_REF RunRef,_In_ ULONG Count)
BOOLEAN None None.ExAcquireRundownProtection(_Inout_ PEX_RUNDOWN_REF RunRef)
BOOLEAN None None.ExAcquireSharedStarveExclusive(_Inout_ PERESOURCE Resource,_In_ BOOLEAN Wait)
BOOLEAN None None.ExAcquireSharedWaitForExclusive(_Inout_ PERESOURCE Resource,_In_ BOOLEAN Wait)
BOOLEAN None None.ExIsProcessorFeaturePresent(_In_ ULONG ProcessorFeature)
BOOLEAN None None.ExIsResourceAcquiredExclusiveLite(_In_ PERESOURCE Resource)
BOOLEAN None None.ExTryToAcquireFastMutex(_Inout_ PFAST_MUTEX FastMutex)
boolean None None.FilterEvents(IComponent component None,IDictionary events None)
BOOLEAN None None.FltCancelIo(_In_ PFLT_CALLBACK_DATA CallbackData)
BOOLEAN None None.FltCurrentBatchOplock(_In_ POPLOCK Oplock)
BOOLEAN None None.FltDoCompletionProcessingWhenSafe(_In_ PFLT_CALLBACK_DATA Data,_In_ PCFLT_RELATED_OBJECTS FltObjects,_In_opt_ PVOID CompletionContext,_In_ FLT_POST_OPERATION_FLAGS Flags,_In_ PFLT_POST_OPERATION_CALLBACK SafePostCallback,_Out_ PFLT_POSTOP_CALLBACK_STATUS RetPostOperationStatus)
BOOLEAN None None.FltIsCallbackDataDirty(_In_ PFLT_CALLBACK_DATA Data)
BOOLEAN None None.FltIsEcpAcknowledged(_In_ PFLT_FILTER Filter,_In_ PVOID EcpContext)
BOOLEAN None None.FltIsEcpFromUserMode(_In_ PFLT_FILTER Filter,_In_ PVOID EcpContext)
BOOLEAN None None.FLT_IS_FS_FILTER_OPERATION([in] PFLT_CALLBACK_DATA Data)
BOOLEAN None None.FLT_IS_IRP_OPERATION([in] PFLT_CALLBACK_DATA Data)
BOOLEAN None None.FLT_IS_REISSUED_IO([in] PFLT_CALLBACK_DATA Data)
BOOLEAN None None.FLT_IS_SYSTEM_BUFFER([in] PFLT_CALLBACK_DATA Data)
BOOLEAN None None.FltOplockIsFastIoPossible(_In_ POPLOCK Oplock)
BOOLEAN None None.FlushAdapterBuffers(_In_ PDMA_ADAPTER DmaAdapter,_In_ PMDL Mdl,_In_ PVOID MapRegisterBase,_In_ PVOID CurrentVa,_In_ ULONG Length,_In_ BOOLEAN WriteToDevice)
BOOLEAN None None.FsRtlAreThereCurrentFileLocks(_In_ PFILE_LOCK FileLock)
BOOLEAN None None.FsRtlCurrentBatchOplock(_In_ POPLOCK Oplock)
BOOLEAN None None.FsRtlOplockIsFastIoPossible(_In_ POPLOCK Oplock)
BOOLEAN None None.GetCallInfo(_Out_ PSECPKG_CALL_INFO Info)
boolean None None.GetDataPresent(String format None,boolean autoConvert None)
BOOLEAN None None.HwScsiAdapterState(_In_ PVOID HwDeviceExtension,_In_ PVOID Context,_In_ BOOLEAN SaveState)
BOOLEAN None None.HwScsiStartIo(_In_ PVOID DeviceExtension,_In_ PSCSI_REQUEST_BLOCK Srb)
BOOLEAN None None.InitializeChangeNotify(void None None)
BOOLEAN None None.IoCancelIrp(_In_ PIRP Irp)
BOOLEAN None None.IoIsOperationSynchronous(_In_ PIRP Irp)
BOOLEAN None None.IoIsWdmVersionAvailable(_In_ UCHAR MajorVersion,_In_ UCHAR MinorVersion)
BOOLEAN None None.IoRaiseInformationalHardError(_In_ NTSTATUS ErrorStatus,_In_opt_ PUNICODE_STRING String,_In_opt_ PKTHREAD Thread)
boolean None None.IsName(String szNameBuf None,int lHashVal None)
BOOLEAN None None.KeAreAllApcsDisabled(void None None)
BOOLEAN None None.KeAreApcsDisabled(void None None)
BOOLEAN None None.KeCancelTimer(_Inout_ PKTIMER Timer)
BOOLEAN None None.KeInsertByKeyDeviceQueue(_Inout_ PKDEVICE_QUEUE DeviceQueue,_Inout_ PKDEVICE_QUEUE_ENTRY DeviceQueueEntry,_In_ ULONG SortKey)
BOOLEAN None None.KeInsertDeviceQueue(_Inout_ PKDEVICE_QUEUE DeviceQueue,_Inout_ PKDEVICE_QUEUE_ENTRY DeviceQueueEntry)
BOOLEAN None None.KeInsertQueueDpc(_Inout_ PRKDPC Dpc,_In_opt_ PVOID SystemArgument1,_In_opt_ PVOID SystemArgument2)
BOOLEAN None None.KeReadStateTimer(_In_ PKTIMER Timer)
BOOLEAN None None.KeRemoveEntryDeviceQueue(_Inout_ PKDEVICE_QUEUE DeviceQueue,_Inout_ PKDEVICE_QUEUE_ENTRY DeviceQueueEntry)
BOOLEAN None None.KeRemoveQueueDpc(_Inout_ PRKDPC Dpc)
BOOLEAN None None.KeSetTimerEx(_Inout_ PKTIMER Timer,_In_ LARGE_INTEGER DueTime,_In_ LONG Period,_In_opt_ PKDPC Dpc)
BOOLEAN None None.KeSetTimer(_Inout_ PKTIMER Timer,_In_ LARGE_INTEGER DueTime,_In_opt_ PKDPC Dpc)
BOOLEAN None None.KeTestSpinLock(_In_ PKSPIN_LOCK SpinLock)
BOOLEAN None None.KeTryToAcquireGuardedMutex(_Inout_ PKGUARDED_MUTEX Mutex)
BOOLEAN None None.KeTryToAcquireSpinLockAtDpcLevel(_Inout_ PKSPIN_LOCK SpinLock)
boolean None None.LoadPostData(String postDataKey None,NameValueCollection postCollection None)
BOOLEAN None None.PasswordFilter(_In_ PUNICODE_STRING AccountName,_In_ PUNICODE_STRING FullName,_In_ PUNICODE_STRING Password,_In_ BOOLEAN SetOperation)
BOOLEAN None None.PsGetVersion(_Out_opt_ PULONG MajorVersion,_Out_opt_ PULONG MinorVersion,_Out_opt_ PULONG BuildNumber,_Out_opt_ PUNICODE_STRING CSDVersion)
BOOLEAN None None.RemoveEntryList(_In_ PLIST_ENTRY Entry)
boolean None None.Remove(TKey key None)
BOOLEAN None None.RtlEqualSid(_In_ PSID Sid1,_In_ PSID Sid2)
BOOLEAN None None.RtlIsNtDdiVersionAvailable(_In_ ULONG Version)
BOOLEAN None None.RtlValidSecurityDescriptor(_In_ PSECURITY_DESCRIPTOR SecurityDescriptor)
BOOLEAN None None.RtlValidSid(_In_ PSID Sid)
BOOLEAN None None.SeAccessCheck(_In_ PSECURITY_DESCRIPTOR SecurityDescriptor,_In_ PSECURITY_SUBJECT_CONTEXT SubjectSecurityContext,_In_ BOOLEAN SubjectContextLocked,_In_ ACCESS_MASK DesiredAccess,_In_ ACCESS_MASK PreviouslyGrantedAccess,_Out_ PPRIVILEGE_SET *Privileges,_In_ PGENERIC_MAPPING GenericMapping,_In_ KPROCESSOR_MODE AccessMode,_Out_ PACCESS_MASK GrantedAccess,_Out_ PNTSTATUS AccessStatus)
BOOLEAN None None.SeAuditingFileEvents(_In_ BOOLEAN AccessGranted,_In_ PSECURITY_DESCRIPTOR SecurityDescriptor)
BOOLEAN None None.SeAuditingFileOrGlobalEvents(_In_ BOOLEAN AccessGranted,_In_ PSECURITY_DESCRIPTOR SecurityDescriptor,_In_ PSECURITY_SUBJECT_CONTEXT SubjectSecurityContext)
BOOLEAN None None.SeSinglePrivilegeCheck(_In_ LUID PrivilegeValue,_In_ KPROCESSOR_MODE PreviousMode)
boolean None None.SetDocumentationFile(String documentationFile None)
BOOLEAN None None.SeTokenIsRestricted(_In_ PACCESS_TOKEN Token)
boolean None None.SetRootNamespace(String rootNamespace None)
BOOLEAN None None.SeValidSecurityDescriptor(_In_ ULONG Length,_In_ PSECURITY_DESCRIPTOR SecurityDescriptor)
boolean None None.TabInto(TraversalRequest request None)
boolean None None.ToBoolean(IFormatProvider provider None)
BOOLEAN None None.WdfChildListRequestChildEject(_In_ WDFCHILDLIST ChildList,_In_ PWDF_CHILD_IDENTIFICATION_DESCRIPTION_HEADER IdentificationDescription)
BOOLEAN None None.WdfDmaTransactionCancel(_In_ WDFDMATRANSACTION DmaTransaction)
BOOLEAN None None.WdfDmaTransactionDmaCompletedFinal(_In_ WDFDMATRANSACTION DmaTransaction,_In_ size_t FinalTransferredLength,_Out_ NTSTATUS *Status)
BOOLEAN None None.WdfDmaTransactionDmaCompleted(_In_ WDFDMATRANSACTION DmaTransaction,_Out_ NTSTATUS *Status)
BOOLEAN None None.WdfDmaTransactionDmaCompletedWithLength(_In_ WDFDMATRANSACTION DmaTransaction,_In_ size_t TransferredLength,_Out_ NTSTATUS *Status)
BOOLEAN None None.WdfDpcCancel(_In_ WDFDPC Dpc,_In_ BOOLEAN Wait)
BOOLEAN None None.WdfDpcEnqueue(_In_ WDFDPC Dpc)
BOOLEAN None None.WdfDriverIsVersionAvailable(_In_ WDFDRIVER Driver,_In_ PWDF_DRIVER_VERSION_AVAILABLE_PARAMS VersionAvailableParams)
BOOLEAN None None.WdfInterruptQueueDpcForIsr(_In_ WDFINTERRUPT Interrupt)
BOOLEAN None None.WdfInterruptQueueWorkItemForIsr(_In_ WDFINTERRUPT Interrupt)
BOOLEAN None None.WdfInterruptSynchronize(_In_ WDFINTERRUPT Interrupt,_In_ PFN_WDF_INTERRUPT_SYNCHRONIZE Callback,_In_ WDFCONTEXT Context)
BOOLEAN None None.WdfInterruptTryToAcquireLock(_In_ WDFINTERRUPT Interrupt)
BOOLEAN None None.WDF_IO_QUEUE_DRAINED(_In_ WDF_IO_QUEUE_STATE State)
BOOLEAN None None.WDF_IO_QUEUE_IDLE(_In_ WDF_IO_QUEUE_STATE State)
BOOLEAN None None.WDF_IO_QUEUE_PURGED(_In_ WDF_IO_QUEUE_STATE State)
BOOLEAN None None.WDF_IO_QUEUE_READY(_In_ WDF_IO_QUEUE_STATE State)
BOOLEAN None None.WDF_IO_QUEUE_STOPPED(_In_ WDF_IO_QUEUE_STATE State)
BOOLEAN None None.WdfRequestCancelSentRequest(_In_ WDFREQUEST Request)
BOOLEAN None None.WdfRequestIsCanceled(_In_ WDFREQUEST Request)
BOOLEAN None None.WdfRequestIsFrom32BitProcess(_In_ WDFREQUEST Request)
BOOLEAN None None.WdfRequestIsReserved(_In_ WDFREQUEST Request)
BOOLEAN None None.WdfRequestSend(_In_ WDFREQUEST Request,_In_ WDFIOTARGET Target,_In_opt_ PWDF_REQUEST_SEND_OPTIONS RequestOptions)
BOOLEAN None None.WdfTimerStart(_In_ WDFTIMER Timer,_In_ LONGLONG DueTime)
BOOLEAN None None.WdfTimerStop(_In_ WDFTIMER Timer,_In_ BOOLEAN Wait)
BOOLEAN None None.WDF_USB_PIPE_DIRECTION_IN(_In_ UCHAR EndpointAddress)
BOOLEAN None None.WDF_USB_PIPE_DIRECTION_OUT(_In_ UCHAR EndpointAddress)
BOOLEAN None None.WdfUsbTargetPipeIsInEndpoint(_In_ WDFUSBPIPE Pipe)
BOOLEAN None None.WdfUsbTargetPipeIsOutEndpoint(_In_ WDFUSBPIPE Pipe)
BOOLEAN None None.WdfWmiProviderIsEnabled(_In_ WDFWMIPROVIDER WmiProvider,_In_ WDF_WMI_PROVIDER_CONTROL ProviderControl)
BOOLEAN None ntdll.RtlEqualPrefixSid(_In_ PSID Sid1,_In_ PSID Sid2)
BOOLEAN None sspicli.SspiIsAuthIdentityEncrypted(_In_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE EncryptedAuthData)
BOOLEAN None wldap32.ldap_stop_tls_s(_In_ PLDAP ExternalHandle)
BOOLEAN WINAPI advapi32.AuditEnumerateCategories(_Out_ GUID **ppAuditCategoriesArray,_Out_ PULONG pCountReturned)
BOOLEAN WINAPI advapi32.AuditEnumeratePerUserPolicy(_Out_ PPOLICY_AUDIT_SID_ARRAY *ppAuditSidArray)
BOOLEAN WINAPI advapi32.AuditLookupCategoryGuidFromCategoryId(_In_ POLICY_AUDIT_EVENT_TYPE AuditCategoryId,_Out_ GUID *pAuditCategoryGuid)
BOOLEAN WINAPI advapi32.AuditQueryGlobalSaclA(_In_ PCWSTR ObjectTypeName,_Out_ PACL *Acl)
BOOLEAN WINAPI advapi32.AuditQueryGlobalSacl(_In_ PCWSTR ObjectTypeName,_Out_ PACL *Acl)
BOOLEAN WINAPI advapi32.AuditQueryGlobalSaclW(_In_ PCWSTR ObjectTypeName,_Out_ PACL *Acl)
BOOLEAN WINAPI advapi32.AuditQuerySecurity(_In_ SECURITY_INFORMATION SecurityInformation,_Out_ PSECURITY_DESCRIPTOR *ppSecurityDescriptor)
BOOLEAN WINAPI advapi32.AuditSetGlobalSaclA(_In_ PCWSTR ObjectTypeName,_In_opt_ PACL Acl)
BOOLEAN WINAPI advapi32.AuditSetGlobalSacl(_In_ PCWSTR ObjectTypeName,_In_opt_ PACL Acl)
BOOLEAN WINAPI advapi32.AuditSetGlobalSaclW(_In_ PCWSTR ObjectTypeName,_In_opt_ PACL Acl)
BOOLEAN WINAPI advapi32.AuditSetSecurity(_In_ SECURITY_INFORMATION SecurityInformation,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor)
BOOLEAN WINAPI advapi32.AuditSetSystemPolicy(_In_ PCAUDIT_POLICY_INFORMATION pAuditPolicy,_In_ ULONG PolicyCount)
BOOLEAN WINAPI kernel32.ClosePrivateNamespace(_In_ HANDLE Handle,_In_ ULONG Flags)
BOOLEAN WINAPI kernel32.CreateSymbolicLinkA(_In_ LPTSTR lpSymlinkFileName,_In_ LPTSTR lpTargetFileName,_In_ DWORD dwFlags)
BOOLEAN WINAPI kernel32.CreateSymbolicLink(_In_ LPTSTR lpSymlinkFileName,_In_ LPTSTR lpTargetFileName,_In_ DWORD dwFlags)
BOOLEAN WINAPI kernel32.CreateSymbolicLinkTransactedA(_In_ LPTSTR lpSymlinkFileName,_In_ LPTSTR lpTargetFileName,_In_ DWORD dwFlags,_In_ HANDLE hTransaction)
BOOLEAN WINAPI kernel32.CreateSymbolicLinkTransacted(_In_ LPTSTR lpSymlinkFileName,_In_ LPTSTR lpTargetFileName,_In_ DWORD dwFlags,_In_ HANDLE hTransaction)
BOOLEAN WINAPI kernel32.CreateSymbolicLinkTransactedW(_In_ LPTSTR lpSymlinkFileName,_In_ LPTSTR lpTargetFileName,_In_ DWORD dwFlags,_In_ HANDLE hTransaction)
BOOLEAN WINAPI kernel32.CreateSymbolicLinkW(_In_ LPTSTR lpSymlinkFileName,_In_ LPTSTR lpTargetFileName,_In_ DWORD dwFlags)
BOOLEAN WINAPI kernel32.RtlAddFunctionTable(_In_ PRUNTIME_FUNCTION FunctionTable,_In_ DWORD EntryCount,_In_ DWORD64 BaseAddress,_In_ ULONGLONG TargetGp)
BOOLEAN WINAPI kernel32.RtlDeleteFunctionTable(_In_ PRUNTIME_FUNCTION FunctionTable)
BOOLEAN WINAPI kernel32.RtlInstallFunctionTableCallback(_In_ DWORD64 TableIdentifier,_In_ DWORD64 BaseAddress,_In_ DWORD Length,_In_ PGET_RUNTIME_FUNCTION_CALLBACK Callback,_In_ PVOID Context,_In_ PCWSTR OutOfProcessCallbackDll)
BOOLEAN WINAPI kernel32.TryAcquireSRWLockExclusive(_Inout_ PSRWLOCK SRWLock)
BOOLEAN WINAPI kernel32.TryAcquireSRWLockShared(_Inout_ PSRWLOCK SRWLock)
BOOLEAN WINAPI kernel32.Wow64EnableWow64FsRedirection(_In_ BOOLEAN Wow64FsEnableRedirection)
BOOLEAN WINAPI ntdll.RtlTimeToSecondsSince1970(_In_ PLARGE_INTEGER Time,_Out_ PULONG ElapsedSeconds)
BOOLEAN WINAPI powrprof.CanUserWritePwrScheme(void None None)
BOOLEAN WINAPI powrprof.DeletePwrScheme(_In_ UINT uiIndex)
BOOLEAN WINAPI powrprof.DevicePowerClose(void None None)
BOOLEAN WINAPI powrprof.DevicePowerEnumDevices(_In_ ULONG QueryIndex,_In_ ULONG QueryInterpretationFlags,_In_ ULONG QueryFlags,_Out_opt_ PBYTE pReturnBuffer,_Inout_ PULONG pBufferSize)
BOOLEAN WINAPI powrprof.DevicePowerOpen(ULONG Flags None)
BOOLEAN WINAPI powrprof.EnumPwrSchemes(_In_ PWRSCHEMESENUMPROC lpfnPwrSchemesEnumProc,_In_ LPARAM lParam)
BOOLEAN WINAPI powrprof.GetActivePwrScheme(_Out_ PUINT puiID)
BOOLEAN WINAPI powrprof.GetCurrentPowerPolicies(_Out_ PGLOBAL_POWER_POLICY pGlobalPowerPolicy,_Out_ PPOWER_POLICY pPowerPolicy)
BOOLEAN WINAPI powrprof.GetPwrCapabilities(_Out_ PSYSTEM_POWER_CAPABILITIES lpSystemPowerCapabilities)
BOOLEAN WINAPI powrprof.GetPwrDiskSpindownRange(_Out_ PUINT RangeMax,_Out_ PUINT RangeMin)
BOOLEAN WINAPI powrprof.IsPwrHibernateAllowed(void None None)
BOOLEAN WINAPI powrprof.IsPwrShutdownAllowed(void None None)
BOOLEAN WINAPI powrprof.IsPwrSuspendAllowed(void None None)
BOOLEAN WINAPI powrprof.ReadGlobalPwrPolicy(_Out_ PGLOBAL_POWER_POLICY pGlobalPowerPolicy)
BOOLEAN WINAPI powrprof.ReadProcessorPwrScheme(_In_ UINT uiID,_Out_ PMACHINE_PROCESSOR_POWER_POLICY pMachineProcessorPowerPolicy)
BOOLEAN WINAPI powrprof.ReadPwrScheme(_In_ UINT uiID,_Out_ PPOWER_POLICY pPowerPolicy)
BOOLEAN WINAPI powrprof.SetActivePwrScheme(_In_ UINT uiID,_In_opt_ PGLOBAL_POWER_POLICY lpGlobalPowerPolicy,_In_opt_ PPOWER_POLICY lpPowerPolicy)
BOOLEAN WINAPI powrprof.SetSuspendState(_In_ BOOLEAN Hibernate,_In_ BOOLEAN ForceCritical,_In_ BOOLEAN DisableWakeEvent)
BOOLEAN WINAPI powrprof.WriteGlobalPwrPolicy(_In_ PGLOBAL_POWER_POLICY pGlobalPowerPolicy)
BOOLEAN WINAPI powrprof.WriteProcessorPwrScheme(_In_ UINT ID,_In_ PMACHINE_PROCESSOR_POWER_POLICY pMachineProcessorPowerPolicy)
BOOLEAN WINAPI powrprof.WritePwrScheme(_In_ PUINT puiID,_In_ LPWSTR lpszName,_In_opt_ LPWSTR lpszDescription,_In_ PPOWER_POLICY pPowerPolicy)
BOOLEAN WINAPI secur32.GetComputerObjectNameA(_In_ EXTENDED_NAME_FORMAT NameFormat,_Out_ LPTSTR lpNameBuffer,_Inout_ PULONG lpnSize)
BOOLEAN WINAPI secur32.GetComputerObjectName(_In_ EXTENDED_NAME_FORMAT NameFormat,_Out_ LPTSTR lpNameBuffer,_Inout_ PULONG lpnSize)
BOOLEAN WINAPI secur32.GetComputerObjectNameW(_In_ EXTENDED_NAME_FORMAT NameFormat,_Out_ LPTSTR lpNameBuffer,_Inout_ PULONG lpnSize)
BOOLEAN WINAPI secur32.GetUserNameExA(_In_ EXTENDED_NAME_FORMAT NameFormat,_Out_ LPTSTR lpNameBuffer,_Inout_ PULONG lpnSize)
BOOLEAN WINAPI secur32.GetUserNameEx(_In_ EXTENDED_NAME_FORMAT NameFormat,_Out_ LPTSTR lpNameBuffer,_Inout_ PULONG lpnSize)
BOOLEAN WINAPI secur32.GetUserNameExW(_In_ EXTENDED_NAME_FORMAT NameFormat,_Out_ LPTSTR lpNameBuffer,_Inout_ PULONG lpnSize)
BOOLEAN WINAPI secur32.TranslateNameA(_In_ LPCTSTR lpAccountName,_In_ EXTENDED_NAME_FORMAT AccountNameFormat,_In_ EXTENDED_NAME_FORMAT DesiredNameFormat,_Out_ LPTSTR lpTranslatedName,_Inout_ PULONG nSize)
BOOLEAN WINAPI secur32.TranslateName(_In_ LPCTSTR lpAccountName,_In_ EXTENDED_NAME_FORMAT AccountNameFormat,_In_ EXTENDED_NAME_FORMAT DesiredNameFormat,_Out_ LPTSTR lpTranslatedName,_Inout_ PULONG nSize)
BOOLEAN WINAPI secur32.TranslateNameW(_In_ LPCTSTR lpAccountName,_In_ EXTENDED_NAME_FORMAT AccountNameFormat,_In_ EXTENDED_NAME_FORMAT DesiredNameFormat,_Out_ LPTSTR lpTranslatedName,_Inout_ PULONG nSize)
BOOL IMAGEAPI dbghelp.StackWalkEx(_In_ DWORD MachineType,_In_ HANDLE hProcess,_In_ HANDLE hThread,_Inout_ LPSTACKFRAME_EX StackFrame,_Inout_ PVOID ContextRecord,_In_opt_ PREAD_PROCESS_MEMORY_ROUTINE64 ReadMemoryRoutine,_In_opt_ PFUNCTION_TABLE_ACCESS_ROUTINE64 FunctionTableAccessRoutine,_In_opt_ PGET_MODULE_BASE_ROUTINE64 GetModuleBaseRoutine,_In_opt_ PTRANSLATE_ADDRESS_ROUTINE64 TranslateAddress,_In_ DWORD Flags)
BOOL IMAGEAPI dbghelp.SymEnumSymbolsEx(_In_ HANDLE hProcess,_In_ ULONG64 BaseOfDll,_In_opt_ PCTSTR Mask,_In_ PSYM_ENUMERATESYMBOLS_CALLBACK EnumSymbolsCallback,_In_opt_ PVOID UserContext,_In_ DWORD Options)
BOOL IMAGEAPI dbghelp.SymEnumSymbolsExW(_In_ HANDLE hProcess,_In_ ULONG64 BaseOfDll,_In_opt_ PCTSTR Mask,_In_ PSYM_ENUMERATESYMBOLS_CALLBACK EnumSymbolsCallback,_In_opt_ PVOID UserContext,_In_ DWORD Options)
BOOL IMAGEAPI dbghelp.SymFromInlineContext(_In_ HANDLE hProcess,_In_ DWORD64 Address,_In_ ULONG InlineContext,_Out_opt_ PDWORD64 Displacement,_Inout_ PSYMBOL_INFOW Symbol)
BOOL IMAGEAPI dbghelp.SymFromInlineContextW(_In_ HANDLE hProcess,_In_ DWORD64 Address,_In_ ULONG InlineContext,_Out_opt_ PDWORD64 Displacement,_Inout_ PSYMBOL_INFOW Symbol)
BOOL IMAGEAPI dbghelp.SymGetExtendedOption(_In_ IMAGEHLP_EXTENDED_OPTIONS option)
BOOL IMAGEAPI dbghelp.SymGetLineFromInlineContext(_In_ HANDLE hProcess,_In_ DWORD64 dwAddr,_In_ ULONG InlineContext,_In_opt_ DWORD64 qwModuleBaseAddress,_Out_ PDWORD pdwDisplacement,_Out_ PIMAGEHLP_LINEW64 Line)
BOOL IMAGEAPI dbghelp.SymGetLineFromInlineContextW(_In_ HANDLE hProcess,_In_ DWORD64 dwAddr,_In_ ULONG InlineContext,_In_opt_ DWORD64 qwModuleBaseAddress,_Out_ PDWORD pdwDisplacement,_Out_ PIMAGEHLP_LINEW64 Line)
BOOL IMAGEAPI dbghelp.SymQueryInlineTrace(_In_ HANDLE hProcess,_In_ DWORD64 StartAddress,_In_ DWORD StartContext,_In_ DWORD64 StartRetAddress,_In_ DWORD64 CurAddress,_Out_ LPDWORD CurContext,_Out_ LPDWORD CurFrameIndex)
BOOL IMAGEAPI dbghelp.SymSetScopeFromInlineContext(_In_ HANDLE hProcess,_In_ ULONG64 Address,_In_ ULONG InlineContext)
BOOL __inline None.IDListContainerIsConsistent(_In_ PCUIDLIST_RELATIVE pidl,_In_ UINT cbAlloc)
BOOL None activeds.FreeADsMem(_In_ LPVOID pMem)
BOOL None advapi32.BackupEventLogA(_In_ HANDLE hEventLog,_In_ LPCTSTR lpBackupFileName)
BOOL None advapi32.BackupEventLog(_In_ HANDLE hEventLog,_In_ LPCTSTR lpBackupFileName)
BOOL None advapi32.BackupEventLogW(_In_ HANDLE hEventLog,_In_ LPCTSTR lpBackupFileName)
BOOL None advapi32.ClearEventLogA(_In_ HANDLE hEventLog,_In_ LPCTSTR lpBackupFileName)
BOOL None advapi32.ClearEventLog(_In_ HANDLE hEventLog,_In_ LPCTSTR lpBackupFileName)
BOOL None advapi32.ClearEventLogW(_In_ HANDLE hEventLog,_In_ LPCTSTR lpBackupFileName)
BOOL None advapi32.ConvertSidToStringSidA(_In_ PSID Sid,_Out_ LPTSTR *StringSid)
BOOL None advapi32.ConvertSidToStringSid(_In_ PSID Sid,_Out_ LPTSTR *StringSid)
BOOL None advapi32.ConvertSidToStringSidW(_In_ PSID Sid,_Out_ LPTSTR *StringSid)
BOOL None advapi32.CredDeleteA(_In_ LPCTSTR TargetName,_In_ DWORD Type,_In_ DWORD Flags)
BOOL None advapi32.CredDelete(_In_ LPCTSTR TargetName,_In_ DWORD Type,_In_ DWORD Flags)
BOOL None advapi32.CredDeleteW(_In_ LPCTSTR TargetName,_In_ DWORD Type,_In_ DWORD Flags)
BOOL None advapi32.CredEnumerateA(_In_ LPCTSTR Filter,_In_ DWORD Flags,_Out_ DWORD *Count,_Out_ PCREDENTIAL **Credentials)
BOOL None advapi32.CredEnumerate(_In_ LPCTSTR Filter,_In_ DWORD Flags,_Out_ DWORD *Count,_Out_ PCREDENTIAL **Credentials)
BOOL None advapi32.CredEnumerateW(_In_ LPCTSTR Filter,_In_ DWORD Flags,_Out_ DWORD *Count,_Out_ PCREDENTIAL **Credentials)
BOOL None advapi32.CredGetSessionTypes(_In_ DWORD MaximumPersistCount,_Out_ LPDWORD MaximumPersist)
BOOL None advapi32.CredGetTargetInfoA(_In_ LPCTSTR TargetName,_In_ DWORD Flags,_Out_ PCREDENTIAL_TARGET_INFORMATION *TargetInfo)
BOOL None advapi32.CredGetTargetInfo(_In_ LPCTSTR TargetName,_In_ DWORD Flags,_Out_ PCREDENTIAL_TARGET_INFORMATION *TargetInfo)
BOOL None advapi32.CredGetTargetInfoW(_In_ LPCTSTR TargetName,_In_ DWORD Flags,_Out_ PCREDENTIAL_TARGET_INFORMATION *TargetInfo)
BOOL None advapi32.CredIsMarshaledCredentialA(_In_ LPCTSTR MarshaledCredential)
BOOL None advapi32.CredIsMarshaledCredential(_In_ LPCTSTR MarshaledCredential)
BOOL None advapi32.CredIsMarshaledCredentialW(_In_ LPCTSTR MarshaledCredential)
BOOL None advapi32.CredMarshalCredentialA(_In_ CRED_MARSHAL_TYPE CredType,_In_ PVOID Credential,_Out_ LPTSTR *MarshaledCredential)
BOOL None advapi32.CredMarshalCredential(_In_ CRED_MARSHAL_TYPE CredType,_In_ PVOID Credential,_Out_ LPTSTR *MarshaledCredential)
BOOL None advapi32.CredMarshalCredentialW(_In_ CRED_MARSHAL_TYPE CredType,_In_ PVOID Credential,_Out_ LPTSTR *MarshaledCredential)
BOOL None advapi32.CredReadA(_In_ LPCTSTR TargetName,_In_ DWORD Type,_In_ DWORD Flags,_Out_ PCREDENTIAL *Credential)
BOOL None advapi32.CredReadDomainCredentialsA(_In_ PCREDENTIAL_TARGET_INFORMATION TargetInfo,_In_ DWORD Flags,_Out_ DWORD *Count,_Out_ PCREDENTIAL **Credentials)
BOOL None advapi32.CredReadDomainCredentials(_In_ PCREDENTIAL_TARGET_INFORMATION TargetInfo,_In_ DWORD Flags,_Out_ DWORD *Count,_Out_ PCREDENTIAL **Credentials)
BOOL None advapi32.CredReadDomainCredentialsW(_In_ PCREDENTIAL_TARGET_INFORMATION TargetInfo,_In_ DWORD Flags,_Out_ DWORD *Count,_Out_ PCREDENTIAL **Credentials)
BOOL None advapi32.CredRead(_In_ LPCTSTR TargetName,_In_ DWORD Type,_In_ DWORD Flags,_Out_ PCREDENTIAL *Credential)
BOOL None advapi32.CredReadW(_In_ LPCTSTR TargetName,_In_ DWORD Type,_In_ DWORD Flags,_Out_ PCREDENTIAL *Credential)
BOOL None advapi32.CredRenameA(_In_ LPCTSTR OldTargetName,_In_ LPCTSTR NewTargetName,_In_ DWORD Type,_In_ DWORD Flags)
BOOL None advapi32.CredRename(_In_ LPCTSTR OldTargetName,_In_ LPCTSTR NewTargetName,_In_ DWORD Type,_In_ DWORD Flags)
BOOL None advapi32.CredRenameW(_In_ LPCTSTR OldTargetName,_In_ LPCTSTR NewTargetName,_In_ DWORD Type,_In_ DWORD Flags)
BOOL None advapi32.CredUnmarshalCredentialA(_In_ LPCTSTR MarshaledCredential,_Out_ PCRED_MARSHAL_TYPE CredType,_Out_ PVOID *Credential)
BOOL None advapi32.CredUnmarshalCredential(_In_ LPCTSTR MarshaledCredential,_Out_ PCRED_MARSHAL_TYPE CredType,_Out_ PVOID *Credential)
BOOL None advapi32.CredUnmarshalCredentialW(_In_ LPCTSTR MarshaledCredential,_Out_ PCRED_MARSHAL_TYPE CredType,_Out_ PVOID *Credential)
BOOL None advapi32.CredWriteA(_In_ PCREDENTIAL Credential,_In_ DWORD Flags)
BOOL None advapi32.CredWriteDomainCredentialsA(_In_ PCREDENTIAL_TARGET_INFORMATION TargetInfo,_In_ PCREDENTIAL Credential,_In_ DWORD Flags)
BOOL None advapi32.CredWriteDomainCredentials(_In_ PCREDENTIAL_TARGET_INFORMATION TargetInfo,_In_ PCREDENTIAL Credential,_In_ DWORD Flags)
BOOL None advapi32.CredWriteDomainCredentialsW(_In_ PCREDENTIAL_TARGET_INFORMATION TargetInfo,_In_ PCREDENTIAL Credential,_In_ DWORD Flags)
BOOL None advapi32.CredWrite(_In_ PCREDENTIAL Credential,_In_ DWORD Flags)
BOOL None advapi32.CredWriteW(_In_ PCREDENTIAL Credential,_In_ DWORD Flags)
BOOL None advapi32.DeregisterEventSource(_Inout_ HANDLE hEventLog)
BOOL None advapi32.GetEventLogInformation(_In_ HANDLE hEventLog,_In_ DWORD dwInfoLevel,_Out_ LPVOID lpBuffer,_In_ DWORD cbBufSize,_Out_ LPDWORD pcbBytesNeeded)
BOOL None advapi32.GetNumberOfEventLogRecords(_In_ HANDLE hEventLog,_Out_ PDWORD NumberOfRecords)
BOOL None advapi32.GetOldestEventLogRecord(_In_ HANDLE hEventLog,_Out_ PDWORD OldestRecord)
BOOL None advapi32.LogonUserA(_In_ LPTSTR lpszUsername,_In_opt_ LPTSTR lpszDomain,_In_opt_ LPTSTR lpszPassword,_In_ DWORD dwLogonType,_In_ DWORD dwLogonProvider,_Out_ PHANDLE phToken)
BOOL None advapi32.LogonUserExA(_In_ LPTSTR lpszUsername,_In_opt_ LPTSTR lpszDomain,_In_opt_ LPTSTR lpszPassword,_In_ DWORD dwLogonType,_In_ DWORD dwLogonProvider,_Out_opt_ PHANDLE phToken,_Out_opt_ PSID *ppLogonSid,_Out_opt_ PVOID *ppProfileBuffer,_Out_opt_ LPDWORD pdwProfileLength,_Out_opt_ PQUOTA_LIMITS pQuotaLimits)
BOOL None advapi32.LogonUserEx(_In_ LPTSTR lpszUsername,_In_opt_ LPTSTR lpszDomain,_In_opt_ LPTSTR lpszPassword,_In_ DWORD dwLogonType,_In_ DWORD dwLogonProvider,_Out_opt_ PHANDLE phToken,_Out_opt_ PSID *ppLogonSid,_Out_opt_ PVOID *ppProfileBuffer,_Out_opt_ LPDWORD pdwProfileLength,_Out_opt_ PQUOTA_LIMITS pQuotaLimits)
BOOL None advapi32.LogonUserExW(_In_ LPTSTR lpszUsername,_In_opt_ LPTSTR lpszDomain,_In_opt_ LPTSTR lpszPassword,_In_ DWORD dwLogonType,_In_ DWORD dwLogonProvider,_Out_opt_ PHANDLE phToken,_Out_opt_ PSID *ppLogonSid,_Out_opt_ PVOID *ppProfileBuffer,_Out_opt_ LPDWORD pdwProfileLength,_Out_opt_ PQUOTA_LIMITS pQuotaLimits)
BOOL None advapi32.LogonUser(_In_ LPTSTR lpszUsername,_In_opt_ LPTSTR lpszDomain,_In_opt_ LPTSTR lpszPassword,_In_ DWORD dwLogonType,_In_ DWORD dwLogonProvider,_Out_ PHANDLE phToken)
BOOL None advapi32.LogonUserW(_In_ LPTSTR lpszUsername,_In_opt_ LPTSTR lpszDomain,_In_opt_ LPTSTR lpszPassword,_In_ DWORD dwLogonType,_In_ DWORD dwLogonProvider,_Out_ PHANDLE phToken)
BOOL None advapi32.NotifyChangeEventLog(_In_ HANDLE hEventLog,_In_ HANDLE hEvent)
BOOL None advapi32.OperationEnd(_In_ OPERATION_END_PARAMETERS *OperationParams)
BOOL None advapi32.OperationStart(_In_ OPERATION_START_PARAMETERS *OperationParams)
BOOL None advapi32.ReadEventLogA(_In_ HANDLE hEventLog,_In_ DWORD dwReadFlags,_In_ DWORD dwRecordOffset,_Out_ LPVOID lpBuffer,_In_ DWORD nNumberOfBytesToRead,_Out_ DWORD *pnBytesRead,_Out_ DWORD *pnMinNumberOfBytesNeeded)
BOOL None advapi32.ReadEventLog(_In_ HANDLE hEventLog,_In_ DWORD dwReadFlags,_In_ DWORD dwRecordOffset,_Out_ LPVOID lpBuffer,_In_ DWORD nNumberOfBytesToRead,_Out_ DWORD *pnBytesRead,_Out_ DWORD *pnMinNumberOfBytesNeeded)
BOOL None advapi32.ReadEventLogW(_In_ HANDLE hEventLog,_In_ DWORD dwReadFlags,_In_ DWORD dwRecordOffset,_Out_ LPVOID lpBuffer,_In_ DWORD nNumberOfBytesToRead,_Out_ DWORD *pnBytesRead,_Out_ DWORD *pnMinNumberOfBytesNeeded)
BOOL None advapi32.SaferiIsExecutableFileType(_In_ LPCWSTR szFullPath,_In_ BOOLEAN bFromShellExecute)
BOOL None bthprops.BluetoothDisplayDeviceProperties(HWND hwndParent None,BLUETOOTH_DEVICE_INFO *pbtdi None)
BOOL None bthprops.BluetoothEnableDiscovery(HANDLE hRadio None,BOOL fEnabled None)
BOOL None bthprops.BluetoothEnableIncomingConnections(HANDLE hRadio None,BOOL fEnabled None)
BOOL None bthprops.BluetoothFindDeviceClose(HBLUETOOTH_DEVICE_FIND hFind None)
BOOL None bthprops.BluetoothFindNextDevice(HBLUETOOTH_DEVICE_FIND hFind None,BLUETOOTH_DEVICE_INFO *pbtdi None)
BOOL None bthprops.BluetoothFindRadioClose(HBLUETOOTH_RADIO_FIND hFind None)
BOOL None bthprops.BluetoothIsConnectable(HANDLE hRadio None)
BOOL None bthprops.BluetoothIsDiscoverable(HANDLE hRadio None)
BOOL None bthprops.BluetoothSdpEnumAttributes(LPBYTE pSDPStream None,ULONG cbStreamSize None,PFN_BLUETOOTH_ENUM_ATTRIBUTES_CALLBACK pfnCallback None,LPVOID pvParam None)
BOOL None bthprops.BluetoothSelectDevices(BLUETOOTH_SELECT_DEVICE_PARAMS *pbtsdp None)
BOOL None bthprops.BluetoothSelectDevicesFree(BLUETOOTH_SELECT_DEVICE_PARAMS *pbtsdp None)
BOOL None bthprops.BluetoothUnregisterAuthentication(HBLUETOOTH_AUTHENTICATION_REGISTRATION hRegHandle None)
BOOL None cabinet.CloseCompressor(_In_ COMPRESSOR_HANDLE CompressorHandle)
BOOL None cabinet.Compress(_In_ COMPRESSOR_HANDLE CompressorHandle,_In_ PVOID UncompressedData,_In_ SIZE_T UncompressedDataSize,_Out_ PVOID CompressedBuffer,_In_ SIZE_T CompressedBufferSize,_Out_ PSIZE_T CompressedDataSize)
BOOL None cabinet.CreateDecompressor(_In_ DWORD Algorithm,_In_opt_ PCOMPRESS_ALLOCATION_ROUTINES AllocationRoutines,_Out_ PDECOMPRESSOR_HANDLE DecompressorHandle)
BOOL None cabinet.Decompress(_In_ DECOMPRESSOR_HANDLE DecompressorHandle,_In_ PVOID CompressedData,_In_ SIZE_T CompressedDataSize,_Out_ PVOID UncompressedBuffer,_In_ SIZE_T UncompressedBufferSize,_Out_ PSIZE_T UncompressedDataSize)
BOOL None cabinet.QueryCompressorInformation(_In_ COMPRESSOR_HANDLE CompressorHandle,_In_ COMPRESS_INFORMATION_CLASS CompressInformationClass,_Out_ PVOID CompressInformation,_In_ SIZE_T CompressInformationSize)
BOOL None cabinet.QueryDecompressorInformation(_In_ DECOMPRESSOR_HANDLE DecompressorHandle,_In_ COMPRESS_INFORMATION_CLASS CompressInformationClass,_Out_ PVOID CompressInformation,_In_ SIZE_T CompressInformationSize)
BOOL None cabinet.ResetCompressor(_In_ COMPRESSOR_HANDLE CompressorHandle)
BOOL None cabinet.ResetDecompressor(_In_ DECOMPRESSOR_HANDLE DecompressorHandle)
BOOL None comctl32.DestroyPropertySheetPage(HPROPSHEETPAGE hPSPage None)
BOOL None comctl32.DSA_DeleteAllItems(_In_ HDSA hdsa)
BOOL None comctl32.DSA_Sort(_In_ HDSA pdsa,_In_ PFNDACOMPARE pfnCompare,_In_ LPARAM lParam)
BOOL None comctl32.FlatSB_GetScrollInfo(HWND hwnd None,int fnBar None,LPSCROLLINFO lpsi None)
BOOL None comctl32.FlatSB_GetScrollPropPtr(HWND hwnd None,UINT index None,LPINT pValue None)
BOOL None comctl32.FlatSB_SetScrollProp(HWND hwnd None,UINT index None,INT_PTR newValue None,BOOL fRedraw None)
BOOL None comctl32.FlatSB_ShowScrollBar(HWND hwnd None,int code None,BOOL fShow None)
BOOL None comctl32.GetTextExtentPoint32Wrap(_In_ HDC hdc,_In_ LPCTSTR lpString,_In_ UINT cbCount,_Out_ LPSIZE lpSize)
BOOL None comctl32.GetWindowSubclass(_In_ HWND hWnd,_In_ SUBCLASSPROC pfnSubclass,_In_ UINT_PTR uIdSubclass,_Out_ DWORD_PTR *pdwRefData)
BOOL None comctl32.ImageList_BeginDrag(HIMAGELIST himlTrack None,int iTrack None,int dxHotspot None,int dyHotspot None)
BOOL None comctl32.ImageList_Copy(HIMAGELIST himlDst None,int iDst None,HIMAGELIST himlSrc None,int iSrc None,UINT uFlags None)
BOOL None comctl32.ImageList_Destroy(_In_opt_ HIMAGELIST himl)
BOOL None comctl32.ImageList_DragEnter(HWND hwndLock None,int x None,int y None)
BOOL None comctl32.ImageList_DragLeave(HWND hwndLock None)
BOOL None comctl32.ImageList_DragMove(int x None,int y None)
BOOL None comctl32.ImageList_DragShowNolock(BOOL fShow None)
BOOL None comctl32.ImageList_DrawEx(HIMAGELIST himl None,int i None,HDC hdcDst None,int x None,int y None,int dx None,int dy None,COLORREF rgbBk None,COLORREF rgbFg None,UINT fStyle None)
BOOL None comctl32.ImageList_Draw(HIMAGELIST himl None,int i None,HDC hdcDst None,int x None,int y None,UINT fStyle None)
BOOL None comctl32.ImageList_DrawIndirect(IMAGELISTDRAWPARAMS *pimldp None)
BOOL None comctl32.ImageList_GetIconSize(HIMAGELIST himl None,int *cx None,int *cy None)
BOOL None comctl32.ImageList_GetImageInfo(HIMAGELIST himl None,int i None,IMAGEINFO *pImageInfo None)
BOOL None comctl32.ImageList_Remove(HIMAGELIST himl None,int i None)
BOOL None comctl32.ImageList_Replace(HIMAGELIST himl None,int i None,HBITMAP hbmImage None,HBITMAP hbmMask None)
BOOL None comctl32.ImageList_SetDragCursorImage(HIMAGELIST himlDrag None,int iDrag None,int dxHotspot None,int dyHotspot None)
BOOL None comctl32.ImageList_SetImageCount(_In_ HIMAGELIST himl,_In_ UINT uNewCount)
BOOL None comctl32.ImageList_SetOverlayImage(_In_ HIMAGELIST himl,_In_ int iImage,_In_ int iOverlay)
BOOL None comctl32.ImageList_Write(HIMAGELIST himl None,LPSTREAM pstm None)
BOOL None comctl32.MakeDragList(HWND hLB None)
BOOL None comctl32.RemoveWindowSubclass(_In_ HWND hWnd,_In_ SUBCLASSPROC pfnSubclass,_In_ UINT_PTR uIdSubclass)
BOOL None comctl32.SetWindowSubclass(_In_ HWND hWnd,_In_ SUBCLASSPROC pfnSubclass,_In_ UINT_PTR uIdSubclass,_In_ DWORD_PTR dwRefData)
BOOL None comctl32.ShowHideMenuCtl(HWND hWnd None,UINT_PTR uFlags None,LPINT lpInfo None)
BOOL None crypt32.CertGetStoreProperty(_In_ HCERTSTORE hCertStore,_In_ DWORD dwPropId,_Out_ void *pvData,_Inout_ DWORD *pcbData)
BOOL None crypt32.CryptSIPAddProvider(_In_ SIP_ADD_NEWPROVIDER *psNewProv)
BOOL None crypt32.CryptSIPRemoveProvider(_In_ GUID *pgProv)
BOOL None cryptdlg.CertViewPropertiesA(_In_ CERT_VIEWPROPERTIES_STRUCT *pCertViewInfo)
BOOL None cryptdlg.CertViewProperties(_In_ CERT_VIEWPROPERTIES_STRUCT *pCertViewInfo)
BOOL None cryptdlg.CertViewPropertiesW(_In_ CERT_VIEWPROPERTIES_STRUCT *pCertViewInfo)
BOOL None d2d1.IsBufferPrecisionSupported(D2D1_BUFFER_PRECISION bufferPrecision None)
BOOL None d2d1.IsDxgiFormatSupported(format DXGI_FORMAT None)
BOOL None dnsapi.DnsNameCompare_A(_In_ PCTSTR pName1,_In_ PCTSTR pName2)
BOOL None dnsapi.DnsNameCompare(_In_ PCTSTR pName1,_In_ PCTSTR pName2)
BOOL None dnsapi.DnsNameCompare_W(_In_ PCTSTR pName1,_In_ PCTSTR pName2)
BOOL None dxgidebug.GetBreakOnCategory([in] DXGI_DEBUG_ID Producer,[in] DXGI_INFO_QUEUE_MESSAGE_CATEGORY Category)
BOOL None dxgidebug.GetBreakOnID([in] DXGI_DEBUG_ID Producer,[in] DXGI_INFO_QUEUE_MESSAGE_ID ID)
BOOL None dxgidebug.GetBreakOnSeverity([in] DXGI_DEBUG_ID Producer,[in] DXGI_INFO_QUEUE_MESSAGE_SEVERITY Severity)
BOOL None dxgidebug.GetMuteDebugOutput([in] DXGI_DEBUG_ID Producer)
BOOL None dxva2.DestroyPhysicalMonitor(_In_ HANDLE hMonitor)
BOOL None dxva2.DestroyPhysicalMonitors(_In_ DWORD dwPhysicalMonitorArraySize,_In_ LPPHYSICAL_MONITOR pPhysicalMonitorArray)
BOOL None dxva2.GetCapabilitiesStringLength(_In_ HANDLE hMonitor,_Out_ LPDWORD pdwCapabilitiesStringLengthInCharacters)
BOOL None dxva2.GetMonitorBrightness(_In_ HANDLE hMonitor,_Out_ LPDWORD pdwMinimumBrightness,_Out_ LPDWORD pdwCurrentBrightness,_Out_ LPDWORD pdwMaximumBrightness)
BOOL None dxva2.GetMonitorCapabilities(_In_ HANDLE hMonitor,_Out_ LPDWORD pdwMonitorCapabilities,_Out_ LPDWORD pdwSupportedColorTemperatures)
BOOL None dxva2.GetMonitorContrast(_In_ HANDLE hMonitor,_Out_ LPDWORD pdwMinimumContrast,_Out_ LPDWORD pdwCurrentContrast,_Out_ LPDWORD pdwMaximumContrast)
BOOL None dxva2.GetMonitorRedGreenOrBlueDrive(_In_ HANDLE hMonitor,_In_ MC_DRIVE_TYPE dtDriveType,_Out_ LPDWORD pdwMinimumDrive,_Out_ LPDWORD pdwCurrentDrive,_Out_ LPDWORD pdwMaximumDrive)
BOOL None dxva2.GetMonitorRedGreenOrBlueGain(_In_ HANDLE hMonitor,_In_ MC_GAIN_TYPE gtGainType,_Out_ LPDWORD pdwMinimumGain,_Out_ LPDWORD pdwCurrentGain,_Out_ LPDWORD pdwMaximumGain)
BOOL None dxva2.GetMonitorTechnologyType(_In_ HANDLE hMonitor,_Out_ LPMC_DISPLAY_TECHNOLOGY_TYPE pdtyDisplayTechnologyType)
BOOL None dxva2.GetPhysicalMonitorsFromHMONITOR(_In_ HMONITOR hMonitor,_In_ DWORD dwPhysicalMonitorArraySize,_Out_ LPPHYSICAL_MONITOR pPhysicalMonitorArray)
BOOL None dxva2.SaveCurrentSettings(_In_ HANDLE hMonitor)
BOOL None dxva2.SetMonitorContrast(_In_ HANDLE hMonitor,_In_ DWORD dwNewContrast)
BOOL None dxva2.SetMonitorDisplayAreaPosition(_In_ HANDLE hMonitor,_In_ MC_POSITION_TYPE ptPositionType,_In_ DWORD dwNewPosition)
BOOL None dxva2.SetMonitorRedGreenOrBlueDrive(_In_ HANDLE hMonitor,_In_ MC_DRIVE_TYPE dtDriveType,_In_ DWORD dwNewDrive)
BOOL None evr.MFIsFormatYUV(_In_ DWORD Format)
BOOL None gdi32.CreateScalableFontResourceA(_In_ DWORD fdwHidden,_In_ LPCTSTR lpszFontRes,_In_ LPCTSTR lpszFontFile,_In_ LPCTSTR lpszCurrentPath)
BOOL None gdi32.CreateScalableFontResource(_In_ DWORD fdwHidden,_In_ LPCTSTR lpszFontRes,_In_ LPCTSTR lpszFontFile,_In_ LPCTSTR lpszCurrentPath)
BOOL None gdi32.CreateScalableFontResourceW(_In_ DWORD fdwHidden,_In_ LPCTSTR lpszFontRes,_In_ LPCTSTR lpszFontFile,_In_ LPCTSTR lpszCurrentPath)
BOOL None gdi32.DeleteDC(_In_ HDC hdc)
BOOL None gdi32.DeleteEnhMetaFile(_In_ HENHMETAFILE hemf)
BOOL None gdi32.DeleteEnhMetaFileW(_In_ HENHMETAFILE hemf)
BOOL None gdi32.DeleteMetaFile(_In_ HMETAFILE hmf)
BOOL None gdi32.DeleteObject(_In_ HGDIOBJ hObject)
BOOL None gdi32.DeleteObjectW(_In_ HGDIOBJ hObject)
BOOL None gdi32.Ellipse(_In_ HDC hdc,_In_ int nLeftRect,_In_ int nTopRect,_In_ int nRightRect,_In_ int nBottomRect)
BOOL None gdi32.EnumMetaFile(_In_ HDC hdc,_In_ HMETAFILE hmf,_In_ MFENUMPROC lpMetaFunc,_In_ LPARAM lParam)
BOOL None gdi32.EqualRgn(_In_ HRGN hSrcRgn1,_In_ HRGN hSrcRgn2)
BOOL None gdi32.FillRgn(_In_ HDC hdc,_In_ HRGN hrgn,_In_ HBRUSH hbr)
BOOL None gdi32.GetBrushOrgEx(_In_ HDC hdc,_Out_ LPPOINT lppt)
BOOL None gdi32.GetCharABCWidthsA(_In_ HDC hdc,_In_ UINT uFirstChar,_In_ UINT uLastChar,_Out_ LPABC lpabc)
BOOL None gdi32.GetCharABCWidths(_In_ HDC hdc,_In_ UINT uFirstChar,_In_ UINT uLastChar,_Out_ LPABC lpabc)
BOOL None gdi32.GetCharABCWidthsW(_In_ HDC hdc,_In_ UINT uFirstChar,_In_ UINT uLastChar,_Out_ LPABC lpabc)
BOOL None gdi32.GetCharWidth32A(_In_ HDC hdc,_In_ UINT iFirstChar,_In_ UINT iLastChar,_Out_ LPINT lpBuffer)
BOOL None gdi32.GetCharWidth32(_In_ HDC hdc,_In_ UINT iFirstChar,_In_ UINT iLastChar,_Out_ LPINT lpBuffer)
BOOL None gdi32.GetCharWidth32W(_In_ HDC hdc,_In_ UINT iFirstChar,_In_ UINT iLastChar,_Out_ LPINT lpBuffer)
BOOL None gdi32.GetCharWidthI(_In_ HDC hdc,_In_ UINT giFirst,_In_ UINT cgi,_In_ LPWORD pgi,_Out_ LPINT lpBuffer)
BOOL None gdi32.GetColorAdjustment(_In_ HDC hdc,_Out_ LPCOLORADJUSTMENT lpca)
BOOL None gdi32.GetTextExtentPoint32A(_In_ HDC hdc,_In_ LPCTSTR lpString,_In_ int c,_Out_ LPSIZE lpSize)
BOOL None gdi32.GetTextExtentPoint32(_In_ HDC hdc,_In_ LPCTSTR lpString,_In_ int c,_Out_ LPSIZE lpSize)
BOOL None gdi32.GetTextExtentPoint32W(_In_ HDC hdc,_In_ LPCTSTR lpString,_In_ int c,_Out_ LPSIZE lpSize)
BOOL None gdi32.GetTextExtentPointA(_In_ HDC hdc,_In_ LPCTSTR lpString,_In_ int cbString,_Out_ LPSIZE lpSize)
BOOL None gdi32.GetTextExtentPoint(_In_ HDC hdc,_In_ LPCTSTR lpString,_In_ int cbString,_Out_ LPSIZE lpSize)
BOOL None gdi32.GetTextExtentPointW(_In_ HDC hdc,_In_ LPCTSTR lpString,_In_ int cbString,_Out_ LPSIZE lpSize)
BOOL None gdi32.GetViewportExtEx(_In_ HDC hdc,_Out_ LPSIZE lpSize)
BOOL None gdi32.GetWindowExtEx(_In_ HDC hdc,_Out_ LPSIZE lpSize)
BOOL None gdi32.GetWindowOrgEx(_In_ HDC hdc,_Out_ LPPOINT lpPoint)
BOOL None gdi32.GetWorldTransform(_In_ HDC hdc,_Out_ LPXFORM lpXform)
BOOL None gdi32.InvertRgn(_In_ HDC hdc,_In_ HRGN hrgn)
BOOL None gdi32.PaintRgn(_In_ HDC hdc,_In_ HRGN hrgn)
BOOL None gdi32.PatBlt(_In_ HDC hdc,_In_ int nXLeft,_In_ int nYLeft,_In_ int nWidth,_In_ int nHeight,_In_ DWORD dwRop)
BOOL None gdi32.PlayMetaFile(_In_ HDC hdc,_In_ HMETAFILE hmf)
BOOL None gdi32.PlayMetaFileRecord(_In_ HDC hdc,_In_ LPHANDLETABLE lpHandletable,_In_ LPMETARECORD lpMetaRecord,_In_ UINT nHandles)
BOOL None gdi32.RemoveFontResourceA(_In_ LPCTSTR lpFileName)
BOOL None gdi32.RemoveFontResource(_In_ LPCTSTR lpFileName)
BOOL None gdi32.RemoveFontResourceW(_In_ LPCTSTR lpFileName)
BOOL None gdi32.RestoreDC(_In_ HDC hdc,_In_ int nSavedDC)
BOOL None gdi32.ScaleViewportExtEx(_In_ HDC hdc,_In_ int Xnum,_In_ int Xdenom,_In_ int Ynum,_In_ int Ydenom,_Out_ LPSIZE lpSize)
BOOL None gdi32.SetViewportOrgEx(_In_ HDC hdc,_In_ int X,_In_ int Y,_Out_ LPPOINT lpPoint)
BOOL None gdi32.SetWindowExtEx(_In_ HDC hdc,_In_ int nXExtent,_In_ int nYExtent,_Out_ LPSIZE lpSize)
BOOL None gdi32.TextOutA(_In_ HDC hdc,_In_ int nXStart,_In_ int nYStart,_In_ LPCTSTR lpString,_In_ int cchString)
BOOL None gdi32.TextOut(_In_ HDC hdc,_In_ int nXStart,_In_ int nYStart,_In_ LPCTSTR lpString,_In_ int cchString)
BOOL None gdi32.TextOutW(_In_ HDC hdc,_In_ int nXStart,_In_ int nYStart,_In_ LPCTSTR lpString,_In_ int cchString)
BOOL None gdi32.UnrealizeObject(_In_ HGDIOBJ hgdiobj)
BOOL None idndl.DownlevelVerifyScripts(_In_ DWORD dwFlags,_In_ LPCWSTR lpLocaleScripts,_In_ int cchLocaleScripts,_In_ LPCWSTR lpTestScripts,_In_ int cchTestScripts)
BOOL None imm32.ImmAssociateContextEx(_In_ HWND hWnd,_In_ HIMC hIMC,_In_ DWORD dwFlags)
BOOL None imm32.ImmConfigureIMEA(_In_ HKL hKL,_In_ HWND hWnd,_In_ DWORD dwMode,_In_ LPVOID lpData)
BOOL None imm32.ImmConfigureIME(_In_ HKL hKL,_In_ HWND hWnd,_In_ DWORD dwMode,_In_ LPVOID lpData)
BOOL None imm32.ImmConfigureIMEW(_In_ HKL hKL,_In_ HWND hWnd,_In_ DWORD dwMode,_In_ LPVOID lpData)
BOOL None imm32.ImmDestroyContext(_In_ HIMC hIMC)
BOOL None imm32.ImmDisableIME(_In_ DWORD idThread)
BOOL None imm32.IMMDisableLegacyIME(void None None)
BOOL None imm32.ImmDisableTextFrameService(_In_ DWORD idThread)
BOOL None imm32.ImmEnumInputContext(_In_ DWORD idThread,_In_ IMCENUMPROC lpfn,_In_ LPARAM lParam)
BOOL None imm32.ImmGetCandidateWindow(_In_ HIMC hIMC,_In_ DWORD dwIndex,_Out_ LPCANDIDATEFORM lpCandidate)
BOOL None imm32.ImmGetCompositionFontA(_In_ HIMC hIMC,_Out_ LPLOGFONT lplf)
BOOL None imm32.ImmGetCompositionFont(_In_ HIMC hIMC,_Out_ LPLOGFONT lplf)
BOOL None imm32.ImmGetCompositionFontW(_In_ HIMC hIMC,_Out_ LPLOGFONT lplf)
BOOL None imm32.ImmGetCompositionWindow(_In_ HIMC hIMC,_Out_ LPCOMPOSITIONFORM lpCompForm)
BOOL None imm32.ImmGetConversionStatus(_In_ HIMC hIMC,_Out_opt_ LPDWORD lpfdwConversion,_Out_opt_ LPDWORD lpfdwSentence)
BOOL None imm32.ImmGetOpenStatus(_In_ HIMC hIMC)
BOOL None imm32.ImmGetStatusWindowPos(_In_ HIMC hIMC,_Out_ LPPOINT lpptPos)
BOOL None imm32.ImmIsIME(_In_ HKL hKL)
BOOL None imm32.ImmIsUIMessageA(_In_ HWND hWndIME,_In_ UINT msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
BOOL None imm32.ImmIsUIMessage(_In_ HWND hWndIME,_In_ UINT msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
BOOL None imm32.ImmIsUIMessageW(_In_ HWND hWndIME,_In_ UINT msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
BOOL None imm32.ImmNotifyIME(_In_ HIMC hIMC,_In_ DWORD dwAction,_In_ DWORD dwIndex,_In_ DWORD dwValue)
BOOL None imm32.ImmRegisterWordA(_In_ HKL hKL,_In_ LPCTSTR lpszReading,_In_ DWORD dwStyle,_In_ LPCTSTR lpszRegister)
BOOL None imm32.ImmRegisterWord(_In_ HKL hKL,_In_ LPCTSTR lpszReading,_In_ DWORD dwStyle,_In_ LPCTSTR lpszRegister)
BOOL None imm32.ImmRegisterWordW(_In_ HKL hKL,_In_ LPCTSTR lpszReading,_In_ DWORD dwStyle,_In_ LPCTSTR lpszRegister)
BOOL None imm32.ImmReleaseContext(_In_ HWND hWnd,_In_ HIMC hIMC)
BOOL None imm32.ImmSetCandidateWindow(_In_ HIMC hIMC,_In_ LPCANDIDATEFORM lpCandidate)
BOOL None imm32.ImmSetCompositionFontA(_In_ HIMC hIMC,_In_ LPLOGFONT lplf)
BOOL None imm32.ImmSetCompositionFont(_In_ HIMC hIMC,_In_ LPLOGFONT lplf)
BOOL None imm32.ImmSetCompositionFontW(_In_ HIMC hIMC,_In_ LPLOGFONT lplf)
BOOL None imm32.ImmSetCompositionStringA(_In_ HIMC hIMC,_In_ DWORD dwIndex,_In_opt_ LPVOID lpComp,_In_ DWORD dwCompLen,_In_opt_ LPVOID lpRead,_In_ DWORD dwReadLen)
BOOL None imm32.ImmSetCompositionString(_In_ HIMC hIMC,_In_ DWORD dwIndex,_In_opt_ LPVOID lpComp,_In_ DWORD dwCompLen,_In_opt_ LPVOID lpRead,_In_ DWORD dwReadLen)
BOOL None imm32.ImmSetCompositionStringW(_In_ HIMC hIMC,_In_ DWORD dwIndex,_In_opt_ LPVOID lpComp,_In_ DWORD dwCompLen,_In_opt_ LPVOID lpRead,_In_ DWORD dwReadLen)
BOOL None imm32.ImmSetCompositionWindow(_In_ HIMC hIMC,_In_ LPCOMPOSITIONFORM lpCompForm)
BOOL None imm32.ImmSetConversionStatus(_In_ HIMC hIMC,_In_ DWORD fdwConversion,_In_ DWORD fdwSentence)
BOOL None imm32.ImmSetOpenStatus(_In_ HIMC hIMC,_In_ BOOL fOpen)
BOOL None imm32.ImmSetStatusWindowPos(_In_ HIMC hIMC,_In_ LPPOINT lpptPos)
BOOL None imm32.ImmSimulateHotKey(_In_ HWND hWnd,_In_ DWORD dwHotKeyID)
BOOL None imm32.ImmUnregisterWordA(_In_ HKL hKL,_In_ LPCTSTR lpszReading,_In_ DWORD dwStyle,_In_ LPCTSTR lpszUnregister)
BOOL None imm32.ImmUnregisterWord(_In_ HKL hKL,_In_ LPCTSTR lpszReading,_In_ DWORD dwStyle,_In_ LPCTSTR lpszUnregister)
BOOL None imm32.ImmUnregisterWordW(_In_ HKL hKL,_In_ LPCTSTR lpszReading,_In_ DWORD dwStyle,_In_ LPCTSTR lpszUnregister)
BOOL None iphlpapi.GetRTTAndHopCount(_In_ IPAddr DestIpAddress,_Out_ PULONG HopCount,_In_ ULONG MaxHops,_Out_ PULONG RTT)
BOOL None iphlpapi.IcmpCloseHandle(_In_ HANDLE IcmpHandle)
BOOL None jsproxy.InternetDeInitializeAutoProxyDll(_In_ LPSTR lpszMime,_In_ DWORD dwReserved)
BOOL None jsproxy.InternetGetProxyInfo(_In_ LPCSTR lpszUrl,_In_ DWORD dwUrlLength,_In_ LPSTR lpszUrlHostName,_In_ DWORD dwUrlHostNameLength,_Out_ LPSTR *lplpszProxyHostName,_Out_ LPDWORD lpdwProxyHostNameLength)
BOOL None jsproxy.InternetInitializeAutoProxyDll(_In_ DWORD dwReserved)
BOOL None kernel32.ActivateActCtx(_In_ HANDLE hActCtx,_Out_ ULONG_PTR *lpCookie)
BOOL None kernel32.AdjustCalendarDate(_Inout_ LPCALDATETIME lpCalDateTime,_In_ CALDATETIME_DATEUNIT calUnit,_Out_ INT amount)
BOOL None kernel32.BackupRead(_In_ HANDLE hFile,_Out_ LPBYTE lpBuffer,_In_ DWORD nNumberOfBytesToRead,_Out_ LPDWORD lpNumberOfBytesRead,_In_ BOOL bAbort,_In_ BOOL bProcessSecurity,_Out_ LPVOID *lpContext)
BOOL None kernel32.BackupSeek(_In_ HANDLE hFile,_In_ DWORD dwLowBytesToSeek,_In_ DWORD dwHighBytesToSeek,_Out_ LPDWORD lpdwLowByteSeeked,_Out_ LPDWORD lpdwHighByteSeeked,_In_ LPVOID *lpContext)
BOOL None kernel32.BackupWrite(_In_ HANDLE hFile,_In_ LPBYTE lpBuffer,_In_ DWORD nNumberOfBytesToWrite,_Out_ LPDWORD lpNumberOfBytesWritten,_In_ BOOL bAbort,_In_ BOOL bProcessSecurity,_Out_ LPVOID *lpContext)
BOOL None kernel32.DeactivateActCtx(_In_ DWORD dwFlags,_In_ ULONG_PTR ulCookie)
BOOL None kernel32.EnumCalendarInfoA(_In_ CALINFO_ENUMPROC pCalInfoEnumProc,_In_ LCID Locale,_In_ CALID Calendar,_In_ CALTYPE CalType)
BOOL None kernel32.EnumCalendarInfoExA(_In_ CALINFO_ENUMPROCEX pCalInfoEnumProcEx,_In_ LCID Locale,_In_ CALID Calendar,_In_ CALTYPE CalType)
BOOL None kernel32.EnumCalendarInfoExEx(_In_ CALINFO_ENUMPROCEXEX pCalInfoEnumProcExEx,_In_opt_ LPCWSTR lpLocaleName,_In_ CALID Calendar,_In_opt_ LPCWSTR lpReserved,_In_ CALTYPE CalType,_In_ LPARAM lParam)
BOOL None kernel32.EnumCalendarInfoEx(_In_ CALINFO_ENUMPROCEX pCalInfoEnumProcEx,_In_ LCID Locale,_In_ CALID Calendar,_In_ CALTYPE CalType)
BOOL None kernel32.EnumCalendarInfoExW(_In_ CALINFO_ENUMPROCEX pCalInfoEnumProcEx,_In_ LCID Locale,_In_ CALID Calendar,_In_ CALTYPE CalType)
BOOL None kernel32.EnumCalendarInfo(_In_ CALINFO_ENUMPROC pCalInfoEnumProc,_In_ LCID Locale,_In_ CALID Calendar,_In_ CALTYPE CalType)
BOOL None kernel32.EnumCalendarInfoW(_In_ CALINFO_ENUMPROC pCalInfoEnumProc,_In_ LCID Locale,_In_ CALID Calendar,_In_ CALTYPE CalType)
BOOL None kernel32.EnumDateFormatsA(_In_ DATEFMT_ENUMPROC lpDateFmtEnumProc,_In_ LCID Locale,_In_ DWORD dwFlags)
BOOL None kernel32.EnumDateFormatsExA(_In_ DATEFMT_ENUMPROCEX lpDateFmtEnumProcEx,_In_ LCID Locale,_In_ DWORD dwFlags)
BOOL None kernel32.EnumDateFormatsExEx(_In_ DATEFMT_ENUMPROCEXEX lpDateFmtEnumProcExEx,_In_opt_ LPCWSTR lpLocaleName,_In_ DWORD dwFlags,_In_ LPARAM lParam)
BOOL None kernel32.EnumDateFormatsEx(_In_ DATEFMT_ENUMPROCEX lpDateFmtEnumProcEx,_In_ LCID Locale,_In_ DWORD dwFlags)
BOOL None kernel32.EnumDateFormatsExW(_In_ DATEFMT_ENUMPROCEX lpDateFmtEnumProcEx,_In_ LCID Locale,_In_ DWORD dwFlags)
BOOL None kernel32.EnumDateFormats(_In_ DATEFMT_ENUMPROC lpDateFmtEnumProc,_In_ LCID Locale,_In_ DWORD dwFlags)
BOOL None kernel32.EnumDateFormatsW(_In_ DATEFMT_ENUMPROC lpDateFmtEnumProc,_In_ LCID Locale,_In_ DWORD dwFlags)
BOOL None kernel32.EnumLanguageGroupLocalesA(_In_ LANGGROUPLOCALE_ENUMPROC lpLangGroupLocaleEnumProc,_In_ LGRPID LanguageGroup,_In_ DWORD dwFlags,_In_ LONG_PTR lParam)
BOOL None kernel32.EnumLanguageGroupLocales(_In_ LANGGROUPLOCALE_ENUMPROC lpLangGroupLocaleEnumProc,_In_ LGRPID LanguageGroup,_In_ DWORD dwFlags,_In_ LONG_PTR lParam)
BOOL None kernel32.EnumLanguageGroupLocalesW(_In_ LANGGROUPLOCALE_ENUMPROC lpLangGroupLocaleEnumProc,_In_ LGRPID LanguageGroup,_In_ DWORD dwFlags,_In_ LONG_PTR lParam)
BOOL None kernel32.EnumSystemCodePagesA(_In_ CODEPAGE_ENUMPROC lpCodePageEnumProc,_In_ DWORD dwFlags)
BOOL None kernel32.EnumSystemCodePages(_In_ CODEPAGE_ENUMPROC lpCodePageEnumProc,_In_ DWORD dwFlags)
BOOL None kernel32.EnumSystemCodePagesW(_In_ CODEPAGE_ENUMPROC lpCodePageEnumProc,_In_ DWORD dwFlags)
BOOL None kernel32.EnumSystemGeoID(_In_ GEOCLASS GeoClass,_In_ GEOID ParentGeoId,_In_ GEO_ENUMPROC lpGeoEnumProc)
BOOL None kernel32.EnumSystemLanguageGroupsA(_In_ LANGUAGEGROUP_ENUMPROC lpLanguageGroupEnumProc,_In_ DWORD dwFlags,_In_ LONG_PTR lParam)
BOOL None kernel32.EnumSystemLanguageGroups(_In_ LANGUAGEGROUP_ENUMPROC lpLanguageGroupEnumProc,_In_ DWORD dwFlags,_In_ LONG_PTR lParam)
BOOL None kernel32.EnumSystemLanguageGroupsW(_In_ LANGUAGEGROUP_ENUMPROC lpLanguageGroupEnumProc,_In_ DWORD dwFlags,_In_ LONG_PTR lParam)
BOOL None kernel32.EnumSystemLocalesA(_In_ LOCALE_ENUMPROC lpLocaleEnumProc,_In_ DWORD dwFlags)
BOOL None kernel32.EnumSystemLocalesEx(_In_ LOCALE_ENUMPROCEX lpLocaleEnumProcEx,_In_ DWORD dwFlags,_In_ LPARAM lParam,_In_opt_ LPVOID lpReserved)
BOOL None kernel32.EnumSystemLocales(_In_ LOCALE_ENUMPROC lpLocaleEnumProc,_In_ DWORD dwFlags)
BOOL None kernel32.EnumSystemLocalesW(_In_ LOCALE_ENUMPROC lpLocaleEnumProc,_In_ DWORD dwFlags)
BOOL None kernel32.EnumTimeFormatsA(_In_ TIMEFMT_ENUMPROC lpTimeFmtEnumProc,_In_ LCID Locale,_In_ DWORD dwFlags)
BOOL None kernel32.EnumTimeFormatsEx(_In_ TIMEFMT_ENUMPROCEX lpTimeFmtEnumProcEx,_In_opt_ LPCWSTR lpLocaleName,_In_ DWORD dwFlags,_In_ LPARAM lParam)
BOOL None kernel32.EnumTimeFormats(_In_ TIMEFMT_ENUMPROC lpTimeFmtEnumProc,_In_ LCID Locale,_In_ DWORD dwFlags)
BOOL None kernel32.EnumTimeFormatsW(_In_ TIMEFMT_ENUMPROC lpTimeFmtEnumProc,_In_ LCID Locale,_In_ DWORD dwFlags)
BOOL None kernel32.EnumUILanguagesA(_In_ UILANGUAGE_ENUMPROC lpUILanguageEnumProc,_In_ DWORD dwFlags,_In_ LONG_PTR lParam)
BOOL None kernel32.EnumUILanguages(_In_ UILANGUAGE_ENUMPROC lpUILanguageEnumProc,_In_ DWORD dwFlags,_In_ LONG_PTR lParam)
BOOL None kernel32.EnumUILanguagesW(_In_ UILANGUAGE_ENUMPROC lpUILanguageEnumProc,_In_ DWORD dwFlags,_In_ LONG_PTR lParam)
BOOL None kernel32.GetAppContainerNamedObjectPath(_In_opt_ HANDLE Token,_In_opt_ PSID AppContainerSid,_In_ ULONG ObjectPathLength,_Out_opt_ LPWSTR ObjectPath,_Out_ PULONG ReturnLength)
BOOL None kernel32.GetCalendarSupportedDateRange(_In_ CALID Calendar,_Out_ LPCALDATETIME lpCalMinDateTime,_Out_ LPCALDATETIME lpCalMaxDateTime)
BOOL None kernel32.GetCPInfoExA(_In_ UINT CodePage,_In_ DWORD dwFlags,_Out_ LPCPINFOEX lpCPInfoEx)
BOOL None kernel32.GetCPInfoEx(_In_ UINT CodePage,_In_ DWORD dwFlags,_Out_ LPCPINFOEX lpCPInfoEx)
BOOL None kernel32.GetCPInfoExW(_In_ UINT CodePage,_In_ DWORD dwFlags,_Out_ LPCPINFOEX lpCPInfoEx)
BOOL None kernel32.GetCPInfo(_In_ UINT CodePage,_Out_ LPCPINFO lpCPInfo)
BOOL None kernel32.GetCurrentActCtx(_Out_ HANDLE *lphActCtx)
BOOL None kernel32.GetFileMUIInfo(_In_ DWORD dwFlags,_In_ PCWSTR pcwszFilePath,_Inout_opt_ PFILEMUIINFO pFileMUIInfo,_Inout_ DWORD *pcbFileMUIInfo)
BOOL None kernel32.GetFileMUIPath(_In_ DWORD dwFlags,_In_ PCWSTR pcwszFilePath,_Inout_opt_ PWSTR pwszLanguage,_Inout_ PULONG pcchLanguage,_Out_opt_ PWSTR pwszFileMUIPath,_Inout_ PULONG pcchFileMUIPath,_Inout_ PULONGLONG pululEnumerator)
BOOL None kernel32.GetLogicalProcessorInformationEx(_In_ LOGICAL_PROCESSOR_RELATIONSHIP RelationshipType,_Out_opt_ PSYSTEM_LOGICAL_PROCESSOR_INFORMATION_EX Buffer,_Inout_ PDWORD ReturnedLength)
BOOL None kernel32.GetNLSVersionEx(_In_ NLS_FUNCTION function,_In_opt_ LPCWSTR lpLocaleName,_Inout_ LPNLSVERSIONINFOEX lpVersionInformation)
BOOL None kernel32.GetNLSVersion(_In_ NLS_FUNCTION Function,_In_ LCID Locale,_Inout_ LPNLSVERSIONINFO lpVersionInformation)
BOOL None kernel32.GetNumaAvailableMemoryNodeEx(_In_ USHORT Node,_Out_ PULONGLONG AvailableBytes)
BOOL None kernel32.GetNumaNodeNumberFromHandle(_In_ HANDLE hFile,_Out_ PUSHORT NodeNumber)
BOOL None kernel32.GetNumaNodeProcessorMaskEx(_In_ USHORT Node,_Out_ PGROUP_AFFINITY ProcessorMask)
BOOL None kernel32.GetNumaProcessorNodeEx(_In_ PPROCESSOR_NUMBER Processor,_Out_ PUSHORT NodeNumber)
BOOL None kernel32.GetNumaProximityNodeEx(_In_ ULONG ProximityId,_Out_ PUSHORT NodeNumber)
BOOL None kernel32.GetProcessGroupAffinity(_In_ HANDLE hProcess,_Inout_ PUSHORT GroupCount,_Out_ PUSHORT GroupArray)
BOOL None kernel32.GetProcessorSystemCycleTime(_In_ USHORT Group,_Out_ PSYSTEM_PROCESSOR_CYCLE_TIME_INFORMATION Buffer,_Inout_ PDWORD ReturnedLength)
BOOL None kernel32.GetProcessPreferredUILanguages(_In_ DWORD dwFlags,_Out_ PULONG pulNumLanguages,_Out_opt_ PZZWSTR pwszLanguagesBuffer,_Inout_ PULONG pcchLanguagesBuffer)
BOOL None kernel32.GetStringTypeA(_In_ LCID Locale,_In_ DWORD dwInfoType,_In_ LPCSTR lpSrcStr,_In_ int cchSrc,_Out_ LPWORD lpCharType)
BOOL None kernel32.GetStringTypeExA(_In_ LCID Locale,_In_ DWORD dwInfoType,_In_ LPCTSTR lpSrcStr,_In_ int cchSrc,_Out_ LPWORD lpCharType)
BOOL None kernel32.GetStringTypeEx(_In_ LCID Locale,_In_ DWORD dwInfoType,_In_ LPCTSTR lpSrcStr,_In_ int cchSrc,_Out_ LPWORD lpCharType)
BOOL None kernel32.GetStringTypeExW(_In_ LCID Locale,_In_ DWORD dwInfoType,_In_ LPCTSTR lpSrcStr,_In_ int cchSrc,_Out_ LPWORD lpCharType)
BOOL None kernel32.GetStringTypeW(_In_ DWORD dwInfoType,_In_ LPCWSTR lpSrcStr,_In_ int cchSrc,_Out_ LPWORD lpCharType)
BOOL None kernel32.GetSystemPreferredUILanguages(_In_ DWORD dwFlags,_Out_ PULONG pulNumLanguages,_Out_opt_ PZZWSTR pwszLanguagesBuffer,_Inout_ PULONG pcchLanguagesBuffer)
BOOL None kernel32.GetThreadGroupAffinity(_In_ HANDLE hThread,_Out_ PGROUP_AFFINITY GroupAffinity)
BOOL None kernel32.GetThreadIdealProcessorEx(_In_ HANDLE hThread,_Out_ PPROCESSOR_NUMBER lpIdealProcessor)
BOOL None kernel32.GetThreadInformation(_In_ HANDLE hThread,_In_ THREAD_INFORMATION_CLASS ThreadInformationClass,_Out_writes_bytes_ ThreadInformation None,_In_ DWORD ThreadInformationSize)
BOOL None kernel32.GetThreadPreferredUILanguages(_In_ DWORD dwFlags,_Out_ PULONG pulNumLanguages,_Out_opt_ PZZWSTR pwszLanguagesBuffer,_Inout_ PULONG pcchLanguagesBuffer)
BOOL None kernel32.GetUILanguageInfo(_In_ DWORD dwFlags,_In_ PCZZWSTR pwmszLanguage,_Out_opt_ PZZWSTR pwszFallbackLanguages,_Inout_opt_ PDWORD pcchFallbackLanguages,_Out_ PDWORD pdwAttributes)
BOOL None kernel32.GetUserPreferredUILanguages(_In_ DWORD dwFlags,_Out_ PULONG pulNumLanguages,_Out_opt_ PZZWSTR pwszLanguagesBuffer,_Inout_ PULONG pcchLanguagesBuffer)
BOOL None kernel32.IsCalendarLeapYear(_In_ CALID calId,_In_ UINT year,_In_ UINT era)
BOOL None kernel32.IsDBCSLeadByte(_In_ BYTE TestChar)
BOOL None kernel32.IsNLSDefinedString(_In_ NLS_FUNCTION Function,_In_ DWORD dwFlags,_In_ LPNLSVERSIONINFO lpVersionInformation,_In_ LPCWSTR lpString,_In_ INT cchStr)
BOOL None kernel32.IsValidCodePage(_In_ UINT CodePage)
BOOL None kernel32.IsValidLanguageGroup(_In_ LGRPID LanguageGroup,_In_ DWORD dwFlags)
BOOL None kernel32.IsValidLocale(_In_ LCID Locale,_In_ DWORD dwFlags)
BOOL None kernel32.IsValidLocaleName(_In_ LPCWSTR lpLocaleName)
BOOL None kernel32.PowerClearRequest(_In_ HANDLE PowerRequest,_In_ POWER_REQUEST_TYPE RequestType)
BOOL None kernel32.PowerSetRequest(_In_ HANDLE PowerRequest,_In_ POWER_REQUEST_TYPE RequestType)
BOOL None kernel32.ProcessIdToSessionId(_In_ DWORD dwProcessId,_Out_ DWORD *pSessionId)
BOOL None kernel32.QueryActCtxSettingsW(_In_opt_ DWORD dwFlags,_In_opt_ HANDLE hActCtx,_In_opt_ PCWSTR settingsNameSpace,_In_ PCWSTR settingName,_Out_ PWSTR pvBuffer,_In_ SIZE_T dwBuffer,_Out_opt_ SIZE_T *pdwWrittenOrRequired)
BOOL None kernel32.QueryActCtxW(_In_ DWORD dwFlags,_In_ HANDLE hActCtx,_In_opt_ PVOID pvSubInstance,_In_ ULONG ulInfoClass,_Out_ PVOID pvBuffer,_In_opt_ SIZE_T cbBuffer,_Out_opt_ SIZE_T *pcbWrittenOrRequired)
BOOL None kernel32.QueryIdleProcessorCycleTimeEx(_In_ USHORT Group,_Inout_ PULONG BufferLength,_Out_ PULONG64 ProcessorIdleCycleTime)
BOOL None kernel32.QueryThreadpoolStackInformation(_In_ PTP_POOL ptpp,_Out_ PTP_POOL_STACK_INFORMATION ptpsi)
BOOL None kernel32.QueryUnbiasedInterruptTime(_Out_ PULONGLONG lpUnbiasedInterruptTime)
BOOL None kernel32.RtlIsValidLocaleName(_In_ LPCWSTR LocaleName,_In_ ULONG Flags)
BOOL None kernel32.SetCalendarInfoA(_In_ LCID Locale,_In_ CALID Calendar,_In_ CALTYPE CalType,_In_ LPCTSTR lpCalData)
BOOL None kernel32.SetCalendarInfo(_In_ LCID Locale,_In_ CALID Calendar,_In_ CALTYPE CalType,_In_ LPCTSTR lpCalData)
BOOL None kernel32.SetCalendarInfoW(_In_ LCID Locale,_In_ CALID Calendar,_In_ CALTYPE CalType,_In_ LPCTSTR lpCalData)
BOOL None kernel32.SetLocaleInfoA(_In_ LCID Locale,_In_ LCTYPE LCType,_In_ LPCTSTR lpLCData)
BOOL None kernel32.SetLocaleInfo(_In_ LCID Locale,_In_ LCTYPE LCType,_In_ LPCTSTR lpLCData)
BOOL None kernel32.SetLocaleInfoW(_In_ LCID Locale,_In_ LCTYPE LCType,_In_ LPCTSTR lpLCData)
BOOL None kernel32.SetProcessPreferredUILanguages(_In_ DWORD dwFlags,_In_opt_ PCZZWSTR pwszLanguagesBuffer,_Out_opt_ PULONG pulNumLanguages)
BOOL None kernel32.SetThreadErrorMode(_In_ DWORD dwNewMode,_Out_ LPDWORD lpOldMode)
BOOL None kernel32.SetThreadIdealProcessorEx(_In_ HANDLE hThread,_In_ PPROCESSOR_NUMBER lpIdealProcessor,_Out_opt_ PPROCESSOR_NUMBER lpPreviousIdealProcessor)
BOOL None kernel32.SetThreadInformation(_In_ HANDLE hThread,_In_ THREAD_INFORMATION_CLASS ThreadInformationClass,_In_reads_bytes_ ThreadInformation None,_In_ DWORD ThreadInformationSize)
BOOL None kernel32.SetThreadLocale(_In_ LCID Locale)
BOOL None kernel32.SetThreadpoolStackInformation(_Inout_ PTP_POOL ptpp,_In_ PTP_POOL_STACK_INFORMATION ptpsi)
BOOL None kernel32.SetThreadPreferredUILanguages(_In_ DWORD dwFlags,_In_opt_ PCZZWSTR pwszLanguagesBuffer,_Out_opt_ PULONG pulNumLanguages)
BOOL None kernel32.SetUserGeoID(_In_ GEOID GeoId)
BOOL None kernel32.UpdateCalendarDayOfWeek(_Inout_ LPCALDATETIME lpCalDateTime)
BOOL None kernel32.VerifyScripts(_In_ DWORD dwFlags,_In_ LPCWSTR lpLocaleScripts,_In_ int cchLocaleScripts,_In_ LPCWSTR lpTestScripts,_In_ int cchTestScripts)
BOOL None kernel32.Wow64GetThreadSelectorEntry(_In_ HANDLE hThread,_In_ DWORD dwSelector,_Out_ PWOW64_LDT_ENTRY lpSelectorEntry)
BOOL None ktmw32.CommitEnlistment(_In_ HANDLE EnlistmentHandle,_In_ PLARGE_INTEGER TmVirtualClock)
BOOL None ktmw32.PrepareEnlistment(_In_ HANDLE EnlistmentHandle,_In_ PLARGE_INTEGER TmVirtualClock)
BOOL None ktmw32.PrePrepareEnlistment(_In_ HANDLE EnlistmentHandle,_In_ PLARGE_INTEGER TmVirtualClock)
BOOL None ktmw32.RenameTransactionManager(_In_ LPWSTR LogFileName,_In_ LPGUID ExistingTransactionManagerGuid)
BOOL None ktmw32.RollforwardTransactionManager(_In_ HANDLE TransactionManagerHandle,_In_ PLARGE_INTEGER TmVirtualClock)
BOOL None magnification.MagSetColorEffect(_In_ HWND hwnd,_In_ PMAGCOLOREFFECT pEffect)
BOOL None magnification.MagSetImageScalingCallback(_In_ HWND hwnd,_In_ MagImageScalingCallback callback)
BOOL None mfplat.MFCompareFullToPartialMediaType(IMFMediaType *pMFTypeFull None,IMFMediaType *pMFTypePartial None)
BOOL None mprapi.MprAdminIsServiceRunning(_In_ LPWSTR lpwsServerName)
BOOL None msftedit.TxClientToScreen([in] LPPOINT lppt)
BOOL None msftedit.TxCreateCaret([in] HBITMAP hbmp,[in] INT xWidth,[in] INT yHeight)
BOOL None msftedit.TxEnableScrollBar([in] INT fuSBFlags,[in] INT fuArrowflags)
BOOL None msftedit.TxScreenToClient([in] LPPOINT lppt)
BOOL None msftedit.TxSetCaretPos([in] INT x,[in] INT y)
BOOL None msftedit.TxSetScrollPos([in] INT fnBar,[in] INT nPos,[in] BOOL fRedraw)
BOOL None msftedit.TxShowCaret([in] BOOL fShow)
BOOL None msftedit.TxShowScrollBar([in] INT fnBar,[in] BOOL fShow)
BOOL None msimg32.AlphaBlend(_In_ HDC hdcDest,_In_ int xoriginDest,_In_ int yoriginDest,_In_ int wDest,_In_ int hDest,_In_ HDC hdcSrc,_In_ int xoriginSrc,_In_ int yoriginSrc,_In_ int wSrc,_In_ int hSrc,_In_ BLENDFUNCTION ftn)
BOOL None msimg32.GradientFill(_In_ HDC hdc,_In_ PTRIVERTEX pVertex,_In_ ULONG nVertex,_In_ PVOID pMesh,_In_ ULONG nMesh,_In_ ULONG ulMode)
BOOL None msimg32.TransparentBlt(_In_ HDC hdcDest,_In_ int xoriginDest,_In_ int yoriginDest,_In_ int wDest,_In_ int hDest,_In_ HDC hdcSrc,_In_ int xoriginSrc,_In_ int yoriginSrc,_In_ int wSrc,_In_ int hSrc,_In_ UINT crTransparent)
BOOL None msi.MsiGetMode(_In_ MSIHANDLE hInstall,_In_ MSIRUNMODE iRunMode)
BOOL None msvfw32.ICRemove(DWORD fccType None,DWORD fccHandler None,UINT wFlags None)
BOOL None msvfw32.MCIWndRegisterClass(HINSTANCE hInstance None)
BOOL None mswsock.AcceptEx(_In_ SOCKET sListenSocket,_In_ SOCKET sAcceptSocket,_In_ PVOID lpOutputBuffer,_In_ DWORD dwReceiveDataLength,_In_ DWORD dwLocalAddressLength,_In_ DWORD dwRemoteAddressLength,_Out_ LPDWORD lpdwBytesReceived,_In_ LPOVERLAPPED lpOverlapped)
BOOL None mswsock.RIOReceiveEx(_In_ RIO_RQ SocketQueue,_In_ PRIO_BUF pData,_In_ ULONG DataBufferCount,_In_ PRIO_BUF pLocalAddress,_In_ PRIO_BUF pRemoteAddress,_In_ PRIO_BUF pControlContext,_In_ PRIO_BUF pFlags,_In_ DWORD Flags,_In_ PVOID RequestContext)
BOOL None mswsock.RIOReceive(_In_ RIO_RQ SocketQueue,_In_ PRIO_BUF pData,_In_ ULONG DataBufferCount,_In_ DWORD Flags,_In_ PVOID RequestContext)
BOOL None mswsock.RIOResizeCompletionQueue(_In_ RIO_CQ CQ,_In_ DWORD QueueSize)
BOOL None mswsock.RIOResizeRequestQueue(_In_ RIO_RQ RQ,_In_ DWORD MaxOutstandingReceive,_In_ DWORD MaxOutstandingSend)
BOOL None mswsock.RIOSendEx(_In_ RIO_RQ SocketQueue,_In_ PRIO_BUF pData,_In_ ULONG DataBufferCount,_In_ PRIO_BUF pLocalAddress,_In_ PRIO_BUF pRemoteAddress,_In_ PRIO_BUF pControlContext,_In_ PRIO_BUF pFlags,_In_ DWORD Flags,_In_ PVOID RequestContext)
BOOL None mswsock.RIOSend(_In_ RIO_RQ SocketQueue,_In_ PRIO_BUF pData,_In_ ULONG DataBufferCount,_In_ DWORD Flags,_In_ PVOID RequestContext)
BOOL None nddeapi.NDdeIsValidAppTopicListA(_In_ LPTSTR targetTopic)
BOOL None nddeapi.NDdeIsValidAppTopicList(_In_ LPTSTR targetTopic)
BOOL None nddeapi.NDdeIsValidAppTopicListW(_In_ LPTSTR targetTopic)
BOOL None nddeapi.NDdeIsValidShareNameA(_In_ LPTSTR shareName)
BOOL None nddeapi.NDdeIsValidShareName(_In_ LPTSTR shareName)
BOOL None nddeapi.NDdeIsValidShareNameW(_In_ LPTSTR shareName)
BOOL None None.AddBefore(POSITION pos None,CBaseList *pList None)
BOOL None None.AddJobA(_In_ HANDLE hPrinter,_In_ DWORD Level,_Out_ LPBYTE pData,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded)
BOOL None None.AddJob(_In_ HANDLE hPrinter,_In_ DWORD Level,_Out_ LPBYTE pData,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded)
BOOL None None.AddJobW(_In_ HANDLE hPrinter,_In_ DWORD Level,_Out_ LPBYTE pData,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded)
BOOL None None.AddMonitorA(_In_ LPTSTR pName,_In_ DWORD Level,_In_ LPBYTE pMonitors)
BOOL None None.AddMonitor(_In_ LPTSTR pName,_In_ DWORD Level,_In_ LPBYTE pMonitors)
BOOL None None.AddMonitorW(_In_ LPTSTR pName,_In_ DWORD Level,_In_ LPBYTE pMonitors)
BOOL None None.AddPrinterConnection2(_In_ HWND hWnd,_In_ LPCTSTR pszName,DWORD dwLevel None,_In_ PVOID pConnectionInfo)
BOOL None None.AddPrinterConnection2W(_In_ HWND hWnd,_In_ LPCTSTR pszName,DWORD dwLevel None,_In_ PVOID pConnectionInfo)
BOOL None None.AddPrinterConnectionA(_In_ LPTSTR pName)
BOOL None None.AddPrinterConnection(_In_ LPTSTR pName)
BOOL None None.AddPrinterConnectionW(_In_ LPTSTR pName)
BOOL None None.AddPrinterDriverA(_In_ LPTSTR pName,_In_ DWORD Level,_In_ LPBYTE pDriverInfo)
BOOL None None.AddPrinterDriverExA(_In_ LPTSTR pName,_In_ DWORD Level,_Inout_ LPBYTE pDriverInfo,_In_ DWORD dwFileCopyFlags)
BOOL None None.AddPrinterDriverEx(_In_ LPTSTR pName,_In_ DWORD Level,_Inout_ LPBYTE pDriverInfo,_In_ DWORD dwFileCopyFlags)
BOOL None None.AddPrinterDriverExW(_In_ LPTSTR pName,_In_ DWORD Level,_Inout_ LPBYTE pDriverInfo,_In_ DWORD dwFileCopyFlags)
BOOL None None.AddPrinterDriver(_In_ LPTSTR pName,_In_ DWORD Level,_In_ LPBYTE pDriverInfo)
BOOL None None.AddPrinterDriverW(_In_ LPTSTR pName,_In_ DWORD Level,_In_ LPBYTE pDriverInfo)
BOOL None None.AddPrintProcessorA(_In_ LPTSTR pName,_In_ LPTSTR pEnvironment,_In_ LPTSTR pPathName,_In_ LPTSTR pPrintProcessorName)
BOOL None None.AddPrintProcessor(_In_ LPTSTR pName,_In_ LPTSTR pEnvironment,_In_ LPTSTR pPathName,_In_ LPTSTR pPrintProcessorName)
BOOL None None.AddPrintProcessorW(_In_ LPTSTR pName,_In_ LPTSTR pEnvironment,_In_ LPTSTR pPathName,_In_ LPTSTR pPrintProcessorName)
BOOL None None.AddPrintProvidorA(_In_ LPTSTR pName,_In_ DWORD Level,_In_ LPBYTE pProviderInfo)
BOOL None None.AddPrintProvidor(_In_ LPTSTR pName,_In_ DWORD Level,_In_ LPBYTE pProviderInfo)
BOOL None None.AddPrintProvidorW(_In_ LPTSTR pName,_In_ DWORD Level,_In_ LPBYTE pProviderInfo)
BOOL None None.AddSidsToContext(AUTHZ_CLIENT_CONTEXT_HANDLE *phClientContext None)
BOOL None None.AfxCheckMemory( None None)
BOOL None None.Animate_Close(HWND hwnd None)
BOOL None None.Animate_IsPlaying(HWND hwndAnim None)
BOOL None None.Animate_OpenEx(HWND hwndAnim None,HINSTANCE hinst None,LPTSTR lpszName None)
BOOL None None.Animate_Play(HWND hwndAnim None,UINT wFrom None,UINT wTo None,UINT cRepeat None)
BOOL None None.Animate_Seek(HWND hwndAnim None,UINT wFrame None)
BOOL None None.AuthzInitFromToken(AUTHZ_CLIENT_CONTEXT_HANDLE *phClientContext None)
BOOL None None.AVISaveOptions(HWND hwnd None,UINT uiFlags None,int nStreams None,PAVISTREAM * ppavi,LPAVICOMPRESSOPTIONS * plpOptions)
BOOL None None.Button_Enable(HWND hwndCtl None,BOOL fEnable None)
BOOL None None.Button_GetIdealSize(HWND hwnd None,SIZE *pSize None)
BOOL None None.Button_GetImageList(HWND hwnd None,PBUTTON_IMAGELIST pbuttonImageList None)
BOOL None None.Button_GetTextMargin(HWND hwnd None,RECT* pmargin None)
BOOL None None.Button_SetImageList(HWND hwnd None,PBUTTON_IMAGELIST pbuttonImageList None)
BOOL None None.Button_SetNote(HWND hwnd None,PCWSTR psz None)
BOOL None None.Button_SetTextMargin(HWND hwnd None,RECT *pmargin None)
BOOL None None.capDriverGetCaps(hwnd None None,psCaps None None,wSize None None)
BOOL None None.capFileSaveAs(hwnd None None,szName None None)
BOOL None None.capOverlay(hwnd None None,f None None)
BOOL None None.capSetCallbackOnStatus(hwnd None None,fpProc None None)
BOOL None None.capSetScrollPos(hwnd None None,lpP None None)
BOOL None None.capSetUserData(hwnd None None,lUser None None)
BOOL None None.CertChainFindByIssuerCallback(_In_ PCCERT_CONTEXT pCert,_In_ void *pvFindArg)
BOOL None None.CertStoreProvFreeFindCTL(_In_ HCERTSTOREPROV hStoreProv,_In_ PCCTL_CONTEXT pCtlContext,_In_ void *pvStoreProvFindInfo,_In_ DWORD dwFlags)
bool None None.CheckAccessFullyMapped(in uint_only status)
BOOL None None.CheckCachedAccess(AUTHZ_CLIENT_CONTEXT_HANDLE hClientContext None)
BOOL None None.CheckForSupportedDataFields(ISensor* pSensor None)
BOOL None None.CheckProductSuite(WORD wSuite None)
BOOL None None.CheckRequest(DWORD *pParam None)
BOOL None None.CloseSpoolFileHandle(_In_ HANDLE hPrinter,_In_ HANDLE hSpoolFile)
BOOL None None.ComboBox_Enable(HWND hwndCtl None,BOOL fEnable None)
BOOL None None.ComboBox_GetCueBannerText(HWND hwnd None,LPWSTR lpwText None,int cchText None)
BOOL None None.ComboBox_GetDroppedState(HWND hwndCtl None)
BOOL None None.ComboBox_SetCueBannerText(HWND hwnd None,LPCWSTR lpcwText None)
BOOL None None.ComboBox_SetMinVisible(HWND hwnd None,INT iMinVisible None)
BOOL None None.ComboBox_ShowDropdown(HWND hwndCtl None,BOOL fShow None)
BOOL None None.ConfigurePortA(_In_ LPTSTR pName,_In_ HWND hWnd,_In_ LPTSTR pPortName)
BOOL None None.ConfigurePort(_In_ LPTSTR pName,_In_ HWND hWnd,_In_ LPTSTR pPortName)
BOOL None None.ConfigurePortW(_In_ LPTSTR pName,_In_ HWND hWnd,_In_ LPTSTR pPortName)
bool None None.Contains(object key None)
bool None None.Contains(Object key None)
BOOL None None.DateTime_GetIdealSize([in] HWND hdp,[out] SIZE psize)
BOOL None None.DateTime_SetRange(HWND hwndDT None,DWORD flags None,LPSYSTEMTIME lpSysTimeArray None)
BOOL None None.DateTime_SetSystemtime(HWND hwndDT None,DWORD flag None,LPSYSTEMTIME lpSysTime None)
BOOL None None.DeleteFormA(_In_ HANDLE hPrinter,_In_ LPTSTR pFormName)
BOOL None None.DeleteForm(_In_ HANDLE hPrinter,_In_ LPTSTR pFormName)
BOOL None None.DeleteFormW(_In_ HANDLE hPrinter,_In_ LPTSTR pFormName)
BOOL None None.DeleteMonitorA(_In_ LPTSTR pName,_In_ LPTSTR pEnvironment,_In_ LPTSTR pMonitorName)
BOOL None None.DeleteMonitor(_In_ LPTSTR pName,_In_ LPTSTR pEnvironment,_In_ LPTSTR pMonitorName)
BOOL None None.DeleteMonitorW(_In_ LPTSTR pName,_In_ LPTSTR pEnvironment,_In_ LPTSTR pMonitorName)
BOOL None None.DeletePortA(_In_ LPTSTR pName,_In_ HWND hWnd,_In_ LPTSTR pPortName)
BOOL None None.DeletePort(_In_ LPTSTR pName,_In_ HWND hWnd,_In_ LPTSTR pPortName)
BOOL None None.DeletePortW(_In_ LPTSTR pName,_In_ HWND hWnd,_In_ LPTSTR pPortName)
BOOL None None.DeletePrinterConnectionA(_In_ LPTSTR pName)
BOOL None None.DeletePrinterConnection(_In_ LPTSTR pName)
BOOL None None.DeletePrinterConnectionW(_In_ LPTSTR pName)
BOOL None None.DeletePrinterDriverA(_In_ LPTSTR pName,_In_ LPTSTR pEnvironment,_In_ LPTSTR pDriverName)
BOOL None None.DeletePrinterDriverExA(_In_ LPTSTR pName,_In_ LPTSTR pEnvironment,_In_ LPTSTR pDriverName,_In_ DWORD dwDeleteFlag,_In_ DWORD dwVersionFlag)
BOOL None None.DeletePrinterDriverEx(_In_ LPTSTR pName,_In_ LPTSTR pEnvironment,_In_ LPTSTR pDriverName,_In_ DWORD dwDeleteFlag,_In_ DWORD dwVersionFlag)
BOOL None None.DeletePrinterDriverExW(_In_ LPTSTR pName,_In_ LPTSTR pEnvironment,_In_ LPTSTR pDriverName,_In_ DWORD dwDeleteFlag,_In_ DWORD dwVersionFlag)
BOOL None None.DeletePrinterDriver(_In_ LPTSTR pName,_In_ LPTSTR pEnvironment,_In_ LPTSTR pDriverName)
BOOL None None.DeletePrinterDriverW(_In_ LPTSTR pName,_In_ LPTSTR pEnvironment,_In_ LPTSTR pDriverName)
BOOL None None.DeletePrintProcessorA(_In_ LPTSTR pName,_In_ LPTSTR pEnvironment,_In_ LPTSTR pPrintProcessorName)
BOOL None None.DeletePrintProcessor(_In_ LPTSTR pName,_In_ LPTSTR pEnvironment,_In_ LPTSTR pPrintProcessorName)
BOOL None None.DeletePrintProcessorW(_In_ LPTSTR pName,_In_ LPTSTR pEnvironment,_In_ LPTSTR pPrintProcessorName)
BOOL None None.DeletePrintProvidorA(_In_ LPTSTR pName,_In_ LPTSTR pEnvironment,_In_ LPTSTR pPrintProviderName)
BOOL None None.DeletePrintProvidor(_In_ LPTSTR pName,_In_ LPTSTR pEnvironment,_In_ LPTSTR pPrintProviderName)
BOOL None None.DeletePrintProvidorW(_In_ LPTSTR pName,_In_ LPTSTR pEnvironment,_In_ LPTSTR pPrintProviderName)
BOOL None None.DisconnectEx(_In_ SOCKET hSocket,_In_ LPOVERLAPPED lpOverlapped,_In_ DWORD dwFlags,_In_ DWORD reserved)
BOOL None None.DoCancelableRead(HANDLE hFile None,LPVOID lpBuffer None,DWORD nNumberOfBytesToRead None,LPDWORD lpNumberOfBytesRead None,LPOVERLAPPED lpOverlapped None,DWORD dwTimeout None,LPBOOL pbCancelCalled None)
BOOL None None.DrawDibChangePalette(HDRAWDIB hdd None,int iStart None,int iLen None,LPPALETTEENTRY lppe None)
BOOL None None.DrawDibClose(HDRAWDIB hdd None)
BOOL None None.DrawDibDraw(HDRAWDIB hdd None,HDC hdc None,int xDst None,int yDst None,int dxDst None,int dyDst None,LPBITMAPINFOHEADER lpbi None,LPVOID lpBits None,int xSrc None,int ySrc None,int dxSrc None,int dySrc None,UINT wFlags None)
BOOL None None.DrawDibEnd(HDRAWDIB hdd None)
BOOL None None.DrawDibProfileDisplay(LPBITMAPINFOHEADER lpbi None)
BOOL None None.DrawDibStop(HDRAWDIB hdd None)
BOOL None None.DrawDibTime(HDRAWDIB hdd None,LPDRAWDIBTIME lpddtime None)
BOOL None None.DrawImage(IMediaSample *pMediaSample None)
BOOL None None.DrawVideoImageHere(HDC hdc None,IMediaSample *pMediaSample None,RECT *lprcSrc None,RECT *lprcDst None)
BOOL None None.DrvBitBlt(_Inout_ SURFOBJ *psoTrg,_In_opt_ SURFOBJ *psoSrc,_In_opt_ SURFOBJ *psoMask,_In_ CLIPOBJ *pco,_In_opt_ XLATEOBJ *pxlo,_In_ RECTL *prclTrg,_In_opt_ POINTL *pptlSrc,_In_opt_ POINTL *pptlMask,_In_opt_ BRUSHOBJ *pbo,_In_opt_ POINTL *pptlBrush,_In_ ROP4 rop4)
BOOL None None.DrvCopyBits(SURFOBJ *psoDest None,SURFOBJ *psoSrc None,CLIPOBJ *pco None,XLATEOBJ *pxlo None,RECTL *prclDest None,POINTL *pptlSrc None)
BOOL None None.DrvFillPath(_Inout_ SURFOBJ *pso,_In_ PATHOBJ *ppo,_In_ CLIPOBJ *pco,_In_ BRUSHOBJ *pbo,_In_ POINTL *pptlBrushOrg,_In_ MIX mix,_In_ FLONG flOptions)
BOOL None None.DrvGradientFill(_Inout_ SURFOBJ *psoDest,_In_ CLIPOBJ *pco,_In_opt_ XLATEOBJ *pxlo,_In_ TRIVERTEX *pVertex,_In_ ULONG nVertex,_In_ PVOID pMesh,_In_ ULONG nMesh,_In_ RECTL *prclExtents,_In_ POINTL *pptlDitherOrg,_In_ ULONG ulMode)
BOOL None None.DrvIcmDeleteColorTransform(_In_ DHPDEV dhpdev,_In_ HANDLE hcmXform)
BOOL None None.DrvPlgBlt(_Inout_ SURFOBJ *psoTrg,_Inout_ SURFOBJ *psoSrc,_In_opt_ SURFOBJ *psoMsk,_In_ CLIPOBJ *pco,_In_opt_ XLATEOBJ *pxlo,_In_opt_ COLORADJUSTMENT *pca,_In_opt_ POINTL *pptlBrushOrg,_In_ POINTFIX *pptfx,_In_ RECTL *prcl,_In_opt_ POINTL *pptl,_In_ ULONG iMode)
BOOL None None.DrvRealizeBrush(_In_ BRUSHOBJ *pbo,_Inout_ SURFOBJ *psoTarget,_In_ SURFOBJ *psoPattern,_In_opt_ SURFOBJ *psoMask,_In_ XLATEOBJ *pxlo,_In_ ULONG iHatch)
BOOL None None.DrvSetPalette(DHPDEV dhpdev None,PALOBJ *ppalo None,FLONG fl None,__range iStart None,__range cColors None)
BOOL None None.DrvSetPixelFormat(SURFOBJ *pso None,LONG iPixelFormat None,HWND hwnd None)
BOOL None None.DrvStretchBlt(_Inout_ SURFOBJ *psoDest,_Inout_ SURFOBJ *psoSrc,_In_opt_ SURFOBJ *psoMask,_In_ CLIPOBJ *pco,_In_opt_ XLATEOBJ *pxlo,_In_opt_ COLORADJUSTMENT *pca,_In_ POINTL *pptlHTOrg,_In_ RECTL *prclDest,_In_ RECTL *prclSrc,_In_opt_ POINTL *pptlMask,_In_ ULONG iMode)
BOOL None None.DrvStretchBltROP(_Inout_ SURFOBJ *psoDest,_Inout_ SURFOBJ *psoSrc,_In_opt_ SURFOBJ *psoMask,_In_ CLIPOBJ *pco,_In_opt_ XLATEOBJ *pxlo,_In_opt_ COLORADJUSTMENT *pca,_In_ POINTL *pptlHTOrg,_In_ RECTL *prclDest,_In_ RECTL *prclSrc,_In_opt_ POINTL *pptlMask,_In_ ULONG iMode,_In_ BRUSHOBJ *pbo,_In_ DWORD rop4)
BOOL None None.DrvStrokeAndFillPath(_Inout_ SURFOBJ *pso,_Inout_ PATHOBJ *ppo,_In_ CLIPOBJ *pco,_In_opt_ XFORMOBJ *pxo,_In_ BRUSHOBJ *pboStroke,_In_ LINEATTRS *plineattrs,_In_ BRUSHOBJ *pboFill,_In_ POINTL *pptlBrushOrg,_In_ MIX mixFill,_In_ FLONG flOptions)
BOOL None None.DrvStrokePath(_Inout_ SURFOBJ *pso,_In_ PATHOBJ *ppo,_In_ CLIPOBJ *pco,_In_opt_ XFORMOBJ *pxo,_In_ BRUSHOBJ *pbo,_In_ POINTL *pptlBrushOrg,_In_ LINEATTRS *plineattrs,_In_ MIX mix)
BOOL None None.DrvTextOut(SURFOBJ *pso None,STROBJ *pstro None,FONTOBJ *pfo None,CLIPOBJ *pco None,RECTL *prclExtra None,RECTL *prclOpaque None,BRUSHOBJ *pboFore None,BRUSHOBJ *pboOpaque None,POINTL *pptlOrg None,MIX mix None)
BOOL None None.DrvTransparentBlt(_Inout_ SURFOBJ *psoDst,_In_ SURFOBJ *psoSrc,_In_ CLIPOBJ *pco,_In_opt_ XLATEOBJ *pxlo,_In_ RECTL *prclDst,_In_ RECTL *prclSrc,_In_ ULONG iTransColor,_In_ ULONG ulReserved)
BOOL None None.DSEnumCallback(LPGUID lpGuid None,LPCSTR lpcstrDescription None,LPCSTR lpcstrModule None,LPVOID lpContext None)
BOOL None None.Edit_CanUndo(HWND hwndCtl None)
BOOL None None.Edit_Enable(HWND hwndCtl None,BOOL fEnable None)
BOOL None None.Edit_GetCueBannerText(HWND hwnd None,LPCWSTR lpcwText None,LONG cchText None)
BOOL None None.Edit_GetModify(HWND hwndCtl None)
BOOL None None.Edit_HideBalloonTip(HWND hwnd None)
BOOL None None.Edit_ScrollCaret(HWND hwndCtl None)
BOOL None None.Edit_SetCueBannerTextFocused(HWND hwnd None,LPCWSTR lpcwText None,BOOL fDrawFocused None)
BOOL None None.Edit_SetCueBannerText(HWND hwnd None,LPCWSTR lpcwText None)
BOOL None None.Edit_SetReadOnly(HWND hwndCtl None,BOOL fReadOnly None)
BOOL None None.Edit_ShowBalloonTip(HWND hwnd None,PEDITBALLOONTIP peditballoontip None)
BOOL None None.Edit_Undo(HWND hwndCtl None)
BOOL None None.EngAlphaBlend(SURFOBJ *psoDest None,SURFOBJ *psoSrc None,CLIPOBJ *pco None,XLATEOBJ *pxlo None,RECTL *prclDest None,RECTL *prclSrc None,BLENDOBJ *pBlendObj None)
BOOL None None.EngAssociateSurface(HSURF hsurf None,HDEV hdev None,FLONG flHooks None)
BOOL None None.EngDeletePalette(_In_ HPALETTE hpal)
BOOL None None.EngGradientFill(SURFOBJ *psoDest None,CLIPOBJ *pco None,XLATEOBJ *pxlo None,TRIVERTEX *pVertex None,ULONG nVertex None,PVOID pMesh None,ULONG nMesh None,RECTL *prclExtents None,POINTL *pptlDitherOrg None,_In_ ULONG ulMode)
BOOL None None.EngModifySurface(HSURF hsurf None,HDEV hdev None,FLONG flHooks None,FLONG flSurface None,DHSURF dhsurf None,VOID *pvScan0 None,LONG lDelta None,VOID *pvReserved None)
BOOL None None.EngPlgBlt(SURFOBJ *psoTrg None,SURFOBJ *psoSrc None,SURFOBJ *psoMsk None,CLIPOBJ *pco None,XLATEOBJ *pxlo None,COLORADJUSTMENT *pca None,POINTL *pptlBrushOrg None,POINTFIX *pptfx None,RECTL *prcl None,POINTL *pptl None,_In_ ULONG iMode)
BOOL None None.EngStretchBltROP(SURFOBJ *psoDest None,SURFOBJ *psoSrc None,SURFOBJ *psoMask None,CLIPOBJ *pco None,XLATEOBJ *pxlo None,COLORADJUSTMENT *pca None,POINTL *pptlHTOrg None,_In_ RECTL *prclDest,_In_ RECTL *prclSrc,POINTL *pptlMask None,_In_ ULONG iMode,BRUSHOBJ *pbo None,_In_ DWORD rop4)
BOOL None None.EngStretchBlt(SURFOBJ *psoDest None,SURFOBJ *psoSrc None,SURFOBJ *psoMask None,CLIPOBJ *pco None,XLATEOBJ *pxlo None,_In_ COLORADJUSTMENT *pca,_In_ POINTL *pptlHTOrg,_In_ RECTL *prclDest,_In_ RECTL *prclSrc,POINTL *pptlMask None,_In_ ULONG iMode)
BOOL None None.EngTransparentBlt(_In_ SURFOBJ *psoDst,_In_ SURFOBJ *psoSrc,_In_opt_ CLIPOBJ *pco,_In_opt_ XLATEOBJ *pxlo,_In_ RECTL *prclDst,_In_ RECTL *prclSrc,_In_ ULONG iTransColor,_In_ ULONG ulReserved)
BOOL None None.EnumFormsA(_In_ HANDLE hPrinter,_In_ DWORD Level,_Out_ LPBYTE pForm,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded,_Out_ LPDWORD pcReturned)
BOOL None None.EnumForms(_In_ HANDLE hPrinter,_In_ DWORD Level,_Out_ LPBYTE pForm,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded,_Out_ LPDWORD pcReturned)
BOOL None None.EnumFormsW(_In_ HANDLE hPrinter,_In_ DWORD Level,_Out_ LPBYTE pForm,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded,_Out_ LPDWORD pcReturned)
BOOL None None.EnumJobsA(_In_ HANDLE hPrinter,_In_ DWORD FirstJob,_In_ DWORD NoJobs,_In_ DWORD Level,_Out_ LPBYTE pJob,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded,_Out_ LPDWORD pcReturned)
BOOL None None.EnumJobs(_In_ HANDLE hPrinter,_In_ DWORD FirstJob,_In_ DWORD NoJobs,_In_ DWORD Level,_Out_ LPBYTE pJob,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded,_Out_ LPDWORD pcReturned)
BOOL None None.EnumJobsW(_In_ HANDLE hPrinter,_In_ DWORD FirstJob,_In_ DWORD NoJobs,_In_ DWORD Level,_Out_ LPBYTE pJob,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded,_Out_ LPDWORD pcReturned)
BOOL None None.EnumMonitorsA(_In_ LPTSTR pName,_In_ DWORD Level,_Out_ LPBYTE pMonitors,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded,_Out_ LPDWORD pcReturned)
BOOL None None.EnumMonitors(_In_ LPTSTR pName,_In_ DWORD Level,_Out_ LPBYTE pMonitors,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded,_Out_ LPDWORD pcReturned)
BOOL None None.EnumMonitorsW(_In_ LPTSTR pName,_In_ DWORD Level,_Out_ LPBYTE pMonitors,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded,_Out_ LPDWORD pcReturned)
BOOL None None.EnumPortsA(_In_ LPTSTR pName,_In_ DWORD Level,_Out_ LPBYTE pPorts,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded,_Out_ LPDWORD pcReturned)
BOOL None None.EnumPorts(_In_ LPTSTR pName,_In_ DWORD Level,_Out_ LPBYTE pPorts,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded,_Out_ LPDWORD pcReturned)
BOOL None None.EnumPortsW(_In_ LPTSTR pName,_In_ DWORD Level,_Out_ LPBYTE pPorts,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded,_Out_ LPDWORD pcReturned)
BOOL None None.EnumPrinterDriversA(_In_ LPTSTR pName,_In_ LPTSTR pEnvironment,_In_ DWORD Level,_Out_ LPBYTE pDriverInfo,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded,_Out_ LPDWORD pcReturned)
BOOL None None.EnumPrinterDrivers(_In_ LPTSTR pName,_In_ LPTSTR pEnvironment,_In_ DWORD Level,_Out_ LPBYTE pDriverInfo,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded,_Out_ LPDWORD pcReturned)
BOOL None None.EnumPrinterDriversW(_In_ LPTSTR pName,_In_ LPTSTR pEnvironment,_In_ DWORD Level,_Out_ LPBYTE pDriverInfo,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded,_Out_ LPDWORD pcReturned)
BOOL None None.EnumPrintersA(_In_ DWORD Flags,_In_ LPTSTR Name,_In_ DWORD Level,_Out_ LPBYTE pPrinterEnum,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded,_Out_ LPDWORD pcReturned)
BOOL None None.EnumPrinters(_In_ DWORD Flags,_In_ LPTSTR Name,_In_ DWORD Level,_Out_ LPBYTE pPrinterEnum,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded,_Out_ LPDWORD pcReturned)
BOOL None None.EnumPrintersW(_In_ DWORD Flags,_In_ LPTSTR Name,_In_ DWORD Level,_Out_ LPBYTE pPrinterEnum,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded,_Out_ LPDWORD pcReturned)
BOOL None None.EnumPrintProcessorDatatypesA(_In_ LPTSTR pName,_In_ LPTSTR pPrintProcessorName,_In_ DWORD Level,_Out_ LPBYTE pDatatypes,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded,_Out_ LPDWORD pcReturned)
BOOL None None.EnumPrintProcessorDatatypes(_In_ LPTSTR pName,_In_ LPTSTR pPrintProcessorName,_In_ DWORD Level,_Out_ LPBYTE pDatatypes,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded,_Out_ LPDWORD pcReturned)
BOOL None None.EnumPrintProcessorDatatypesW(_In_ LPTSTR pName,_In_ LPTSTR pPrintProcessorName,_In_ DWORD Level,_Out_ LPBYTE pDatatypes,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded,_Out_ LPDWORD pcReturned)
BOOL None None.EnumPrintProcessorsA(_In_ LPTSTR pName,_In_ LPTSTR pEnvironment,_In_ DWORD Level,_Out_ LPBYTE pPrintProcessorInfo,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded,_Out_ LPDWORD pcReturned)
BOOL None None.EnumPrintProcessors(_In_ LPTSTR pName,_In_ LPTSTR pEnvironment,_In_ DWORD Level,_Out_ LPBYTE pPrintProcessorInfo,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded,_Out_ LPDWORD pcReturned)
BOOL None None.EnumPrintProcessorsW(_In_ LPTSTR pName,_In_ LPTSTR pEnvironment,_In_ DWORD Level,_Out_ LPBYTE pPrintProcessorInfo,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded,_Out_ LPDWORD pcReturned)
bool None None.Equals(object other None)
bool None None.Equals(Object other None)
bool None None.Equals(object x None,object y None)
bool None None.Equals(T other None)
bool None None.Equals(T x None,T y None)
BOOL None None.FAILED(HRESULT hr None)
BOOL None None.FlushPrinter(_In_ HANDLE hPrinter,_In_ LPVOID pBuf,_In_ DWORD cbBuf,_Out_ LPDWORD pcWritten,_In_ DWORD cSleep)
BOOL None None.FreeMUILibrary(_In_ HMODULE hResModule)
BOOL None None.GetAccessPermissionsForLUAServer(SECURITY_DESCRIPTOR **ppSD None)
BOOL None None.GetAccountDomainInfo(LSA_HANDLE PolicyHandle None)
BOOL None None.GetColourMask(DWORD *pMaskRed None,DWORD *pMaskGreen None,DWORD *pMaskBlue None)
BOOL None None.GetDefaultPrinterA(_In_ LPTSTR pszBuffer,_Inout_ LPDWORD pcchBuffer)
BOOL None None.GetDefaultPrinter(_In_ LPTSTR pszBuffer,_Inout_ LPDWORD pcchBuffer)
BOOL None None.GetDefaultPrinterW(_In_ LPTSTR pszBuffer,_Inout_ LPDWORD pcchBuffer)
BOOL None None.GetFormA(_In_ HANDLE hPrinter,_In_ LPTSTR pFormName,_In_ DWORD Level,_Out_ LPBYTE pForm,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded)
BOOL None None.GetForm(_In_ HANDLE hPrinter,_In_ LPTSTR pFormName,_In_ DWORD Level,_Out_ LPBYTE pForm,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded)
BOOL None None.GetFormW(_In_ HANDLE hPrinter,_In_ LPTSTR pFormName,_In_ DWORD Level,_Out_ LPBYTE pForm,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded)
BOOL None None.GetJobA(_In_ HANDLE hPrinter,_In_ DWORD JobId,_In_ DWORD Level,_Out_ LPBYTE pJob,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded)
BOOL None None.GetJob(_In_ HANDLE hPrinter,_In_ DWORD JobId,_In_ DWORD Level,_Out_ LPBYTE pJob,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded)
BOOL None None.GetJobW(_In_ HANDLE hPrinter,_In_ DWORD JobId,_In_ DWORD Level,_Out_ LPBYTE pJob,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded)
BOOL None None.GetOpenFileNamePreview(LPOPENFILENAME lpofn None)
BOOL None None.GET_POINTERID_WPARAM(WPARAM wParam None)
BOOL None None.GetPrinterA(_In_ HANDLE hPrinter,_In_ DWORD Level,_Out_ LPBYTE pPrinter,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded)
BOOL None None.GetPrinterDriver2(_In_opt_ HWND hWnd,_In_ HANDLE hPrinter,_In_opt_ LPTSTR pEnvironment,_In_ DWORD Level,_Out_ LPBYTE pDriverInfo,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded)
BOOL None None.GetPrinterDriver2W(_In_opt_ HWND hWnd,_In_ HANDLE hPrinter,_In_opt_ LPTSTR pEnvironment,_In_ DWORD Level,_Out_ LPBYTE pDriverInfo,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded)
BOOL None None.GetPrinterDriverA(_In_ HANDLE hPrinter,_In_ LPTSTR pEnvironment,_In_ DWORD Level,_Out_ LPBYTE pDriverInfo,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded)
BOOL None None.GetPrinterDriverDirectoryA(_In_ LPTSTR pName,_In_ LPTSTR pEnvironment,_In_ DWORD Level,_Out_ LPBYTE pDriverDirectory,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded)
BOOL None None.GetPrinterDriverDirectory(_In_ LPTSTR pName,_In_ LPTSTR pEnvironment,_In_ DWORD Level,_Out_ LPBYTE pDriverDirectory,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded)
BOOL None None.GetPrinterDriverDirectoryW(_In_ LPTSTR pName,_In_ LPTSTR pEnvironment,_In_ DWORD Level,_Out_ LPBYTE pDriverDirectory,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded)
BOOL None None.GetPrinterDriver(_In_ HANDLE hPrinter,_In_ LPTSTR pEnvironment,_In_ DWORD Level,_Out_ LPBYTE pDriverInfo,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded)
BOOL None None.GetPrinterDriverW(_In_ HANDLE hPrinter,_In_ LPTSTR pEnvironment,_In_ DWORD Level,_Out_ LPBYTE pDriverInfo,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded)
BOOL None None.GetPrinter(_In_ HANDLE hPrinter,_In_ DWORD Level,_Out_ LPBYTE pPrinter,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded)
BOOL None None.GetPrinterW(_In_ HANDLE hPrinter,_In_ DWORD Level,_Out_ LPBYTE pPrinter,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded)
BOOL None None.GetPrintProcessorDirectoryA(_In_ LPTSTR pName,_In_ LPTSTR pEnvironment,_In_ DWORD Level,_Out_ LPBYTE pPrintProcessorInfo,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded)
BOOL None None.GetPrintProcessorDirectory(_In_ LPTSTR pName,_In_ LPTSTR pEnvironment,_In_ DWORD Level,_Out_ LPBYTE pPrintProcessorInfo,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded)
BOOL None None.GetPrintProcessorDirectoryW(_In_ LPTSTR pName,_In_ LPTSTR pEnvironment,_In_ DWORD Level,_Out_ LPBYTE pPrintProcessorInfo,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded)
BOOL None None.GetUILanguageFallbackList(_Out_opt_ PWSTR pFallbackList,_In_ ULONG cchFallbackList,_Out_opt_ PULONG pcchFallbackListOut)
BOOL None None.GopherAttributeEnumerator(LPGOPHER_ATTRIBUTE_TYPE lpAttributeInfo None,DWORD dwError None)
BOOL None None.HasOverlappedIoCompleted(LPOVERLAPPED lpOverlapped None)
BOOL None None.Header_GetItemDropDownRect([in] HWND hwnd,[in] int iItem,[in None None,out] LPRECT lpItemRect)
BOOL None None.Header_GetItem(HWND hwndHD None,int index None,LPHDITEM phdi None)
BOOL None None.Header_GetOrderArray(HWND hwndHD None,int iSize None,int *lpiArray None)
BOOL None None.Header_GetOverflowRect([in] HWND hwnd,[in None None,out] LPRECT lpItemRect)
BOOL None None.Header_GetStateImageList(HWND hwndHD None)
BOOL None None.Header_GetUnicodeFormat(HWND hwnd None)
BOOL None None.Header_Layout([in] HWND hwndHD,[out] LPHDLAYOUT playout)
BOOL None None.Header_SetFocusedItem([in] HWND hwndHD,[in] int iItem)
BOOL None None.Header_SetItem(HWND hwndHD None,int iIndex None,LPHDITEM phdItem None)
BOOL None None.Header_SetOrderArray(HWND hwndHD None,int iSize None,int *lpiArray None)
BOOL None None.Header_SetStateImageList(HWND hwndHD None,HIMAGELIST himl None)
BOOL None None.Header_SetUnicodeFormat(HWND hwnd None,BOOL fUnicode None)
BOOL None None.ICCompressorChoose(HWND hwnd None,UINT uiFlags None,LPVOID pvIn None,LPVOID lpData None,PCOMPVARS pc None,LPSTR lpszTitle None)
BOOL None None.ICInstall(DWORD fccType None,DWORD fccHandler None,LPARAM lParam None,LPSTR szDesc None,UINT wFlags None)
BOOL None None.ICRemove(DWORD fccType None,DWORD fccHandler None,UINT wFlags None)
BOOL None None.ICSeqCompressFrameStart(PCOMPVARS pc None,LPBITMAPINFO lpbiIn None)
BOOL None None.ILIsAligned(_In_ PCUIDLIST_RELATIVE pidl)
BOOL None None.ILIsChild(_In_ PCUIDLIST_RELATIVE pidl)
BOOL None None.ILIsEmpty(_In_ PCUID_RELATIVE pidl)
BOOL None None.ImageList_RemoveAll(HIMAGELIST himl None)
BOOL None None.InitInstance(HINSTANCE hinst None)
BOOL None None.InstallELAMCertificateInfo(_In_ HANDLE ELAMFile)
BOOL None None.IsBufferPrecisionSupported(D2D1_BUFFER_PRECISION bufferPrecision None)
BOOL None None.IsDaclCanonical([in] PACL pDacl)
BOOL None None.IsDepthFormatOk(D3DFORMAT DepthFormat None,D3DFORMAT AdapterFormat None,D3DFORMAT BackBufferFormat None)
BOOL None None.IsDigitalEndpoint(IMMDevice *pDevice None)
bool None None.IsDXVASubtype(AM_MEDIA_TYPE * pmt)
BOOL None None.IS_ERROR(HRESULT Status None)
bool None None.IS_HIGH_SURROGATE(WCHAR wch None)
BOOL None None.IS_INTRESOURCE(const void *p)
bool None None.IS_LOW_SURROGATE(WCHAR wch None)
BOOL None None.IS_POINTER_CANCELED_WPARAM(WPARAM wParam None)
BOOL None None.IS_POINTER_INRANGE_WPARAM(WPARAM wParam None)
BOOL None None.IS_POINTER_NEW_WPARAM(WPARAM wParam None)
BOOL None None.IS_POINTER_PRIMARYBUTTON_WPARAM(WPARAM wParam None)
BOOL None None.IS_POINTER_SECONDBUTTON_WPARAM(WPARAM wParam None)
BOOL None None.IsPropVariantString(_In_ REFPROPVARIANT propvar)
BOOL None None.IsPropVariantVector(_In_ REFPROPVARIANT propvar)
BOOL None None.IsShaderLoaded(REFGUID shaderId None)
BOOL None None.IsSpecialSample(IMediaSample *pSample None)
BOOL None None.IsTransformAsync(IMFTransform *pMFT None)
BOOL None None.IsValidDevmodeA(_In_ PDEVMODE pDevmode,size_t DevmodeSize None)
BOOL None None.IsValidDevmode(_In_ PDEVMODE pDevmode,size_t DevmodeSize None)
BOOL None None.IsValidDevmodeW(_In_ PDEVMODE pDevmode,size_t DevmodeSize None)
BOOL None None.IsVariantArray(_In_ REFVARIANT var)
BOOL None None.IsVariantString(_In_ REFVARIANT var)
BOOL None None.IsVarTypeFloat(_In_ VARTYPE vt)
BOOL None None.IsVarTypeInteger(_In_ VARTYPE vt)
BOOL None None.IsVarTypeNumber(_In_ VARTYPE vt)
BOOL None None.IsVarTypeSignedInteger(_In_ VARTYPE vt)
BOOL None None.IsVarTypeUnsignedInteger(_In_ VARTYPE vt)
BOOL None None.ListBox_Enable(HWND hwndCtl None,BOOL fEnable None)
BOOL None None.ListBox_ResetContent(HWND hwndCtl None)
BOOL None None.ListView_Arrange(HWND hwnd None,UINT code None)
BOOL None None.ListView_DeleteAllItems(HWND hwnd None)
BOOL None None.ListView_DeleteColumn(HWND hwnd None,int iCol None)
BOOL None None.ListView_DeleteItem(HWND hwnd None,int iItem None)
BOOL None None.ListView_EnsureVisible(HWND hwnd None,int i None,BOOL fPartialOK None)
BOOL None None.ListView_GetBkImage(HWND hwndLV None,LPLVBKIMAGE plvbki None)
BOOL None None.ListView_GetCheckState(HWND hwndLV None,UINT iIndex None)
BOOL None None.ListView_GetColumn(HWND hwnd None,int iCol None,LPLVCOLUMN pcol None)
BOOL None None.ListView_GetColumnOrderArray(HWND hwndLV None,int iCount None,int *lpiArray None)
BOOL None None.ListView_GetEmptyText([in] HWND hwnd,[in None None,out] PWSTR pszText,[in] UINT cchText)
BOOL None None.ListView_GetFooterInfo([in] HWND hwnd,[in None None,out] LPLVFOOTERINFO plvfi)
BOOL None None.ListView_GetFooterItem([in] HWND hwnd,[in] UINT iItem,[in None None,out] LVFOOTERITEM *pfi)
BOOL None None.ListView_GetFooterItemRect([in] HWND hwnd,[in] UINT iItem,[in None None,out] RECT *prc)
BOOL None None.ListView_GetFooterRect([in] HWND hwnd,[in None None,out] RECT *prc)
BOOL None None.ListView_GetGroupRect([in] HWND hwnd,[in] int iGroupId,[in] LONG type,[in None None,out] RECT *prc)
BOOL None None.ListView_GetInsertMark(HWND hwnd None,PLVINSERTMARK plvim None)
BOOL None None.ListView_GetISearchString(HWND hwnd None,LPSTR lpsz None)
BOOL None None.ListView_GetItem(HWND hwnd None,LPLVITEM pitem None)
BOOL None None.ListView_GetItemIndexRect([in] HWND hwnd,[in] LVITEMINDEX *plvii,[in] LONG iSubItem,[in] LONG code,[in None None,out] LPRECT prc)
BOOL None None.ListView_GetItemPosition(HWND hwnd None,int i None,POINT *ppt None)
BOOL None None.ListView_GetItemRect([in] HWND hwnd,[in] int i,[out] RECT *prc,[in] int code)
BOOL None None.ListView_GetNextItemIndex([in] HWND hwnd,[in None None,out] LVITEMINDEX *plvii,LPARAM flags None)
BOOL None None.ListView_GetNumberOfWorkAreas(HWND hwndLV None,LPUINT lpuWorkAreas None)
BOOL None None.ListView_GetOrigin(HWND hwnd None,LPPOINT lpptOrg None)
BOOL None None.ListView_GetSubItemRect(HWND hwndLV None,int iItem None,int iSubItem None,int code None,LPRECT lpRect None)
BOOL None None.ListView_GetUnicodeFormat(HWND hwnd None)
BOOL None None.ListView_GetViewRect(HWND hwnd None,RECT *prc None)
BOOL None None.ListView_HasGroup(HWND hwnd None,int dwGroupId None)
BOOL None None.ListView_InsertMarkHitTest(HWND hwnd None,LPPOINT point None,PLVINSERTMARK plvim None)
BOOL None None.ListView_IsGroupViewEnabled(HWND hwnd None)
BOOL None None.ListView_RedrawItems(HWND hwnd None,int iFirst None,int iLast None)
BOOL None None.ListView_Scroll(HWND hwnd None,int dx None,int dy None)
BOOL None None.ListView_SetBkColor(HWND hwnd None,COLORREF clrBk None)
BOOL None None.ListView_SetBkImage(HWND hwndLV None,LPLVBKIMAGE plvbki None)
BOOL None None.ListView_SetCallbackMask(HWND hwnd None,UINT mask None)
BOOL None None.ListView_SetColumn(HWND hwnd None,int iCol None,LPLVCOLUMN pcol None)
BOOL None None.ListView_SetColumnOrderArray(HWND hwndLV None,int iCount None,int *lpiArray None)
BOOL None None.ListView_SetColumnWidth(HWND hwnd None,int iCol None,int cx None)
BOOL None None.ListView_SetInfoTip(HWND hwnd None,PLVSETINFOTIP plvSetInfoTip None)
BOOL None None.ListView_SetInsertMark(HWND hwnd None,PLVINSERTMARK plvim None)
BOOL None None.ListView_SetItem(HWND hwnd None,const LPLVITEM pitem)
BOOL None None.ListView_SetItemPosition(HWND hwnd None,int i None,int x None,int y None)
BOOL None None.ListView_SetTextBkColor(HWND hwnd None,COLORREF clrText None)
BOOL None None.ListView_SetTextColor(HWND hwnd None,COLORREF clrText None)
BOOL None None.ListView_SetTileInfo(HWND hwnd None,PLVTILEINFO plvtinfo None)
BOOL None None.ListView_SetTileViewInfo(HWND hwnd None,PLVTILEVIEWINFO plvtvinfo None)
BOOL None None.ListView_SetUnicodeFormat(HWND hwnd None,BOOL fUnicode None)
BOOL None None.ListView_SortItemsEx(HWND hwnd None,PFNLVCOMPARE pfnCompare None,LPARAM lParamSort None)
BOOL None None.ListView_SortItems(HWND hwnd None,PFNLVCOMPARE pfnCompare None,LPARAM lParamSort None)
BOOL None None.ListView_Update(HWND hwnd None,int iItem None)
BOOL None None.LoadIPAddresses(const char* pConfig,const char* pVarName,DWORD** ppAddresses None,DWORD* pNumAddresses None)
BOOL None None.LoadIPXAddresses(const char* pConfig,const char* pVarName,IPX_ADDRESS** ppAddresses None,DWORD* pNumAddresses None)
BOOL None None.MatchesPartial(const CMediaType *ppartial)
BOOL None None.mciExecute(LPCSTR pszCommand None)
BOOL None None.mciGetErrorString(DWORD fdwError None,LPTSTR lpszErrorText None,UINT cchErrorText None)
BOOL None None.MCIWndRegisterClass(HINSTANCE hInstance None)
BOOL None None.mmTaskSignal(DWORD h None)
BOOL None None.MonthCal_GetCalendarGridInfo(HWND hmc None,MCGRIDINFO *pmcGridInfo None)
BOOL None None.MonthCal_GetCurSel(HWND hwndMC None,LPSYSTEMTIME lpSysTime None)
BOOL None None.MonthCal_GetMinReqRect(HWND hwndMC None,LPRECT lpRectInfo None)
BOOL None None.MonthCal_GetSelRange(HWND hwndMC None,LPSYSTEMTIME lprgSysTimeArray None)
BOOL None None.MonthCal_GetToday(HWND hwndMC None,LPSYSTEMTIME lpToday None)
BOOL None None.MonthCal_GetUnicodeFormat(HWND hwnd None)
BOOL None None.MonthCal_SetCurrentView(HWND hmc None,DWORD dwNewView None)
BOOL None None.MonthCal_SetCurSel(HWND hwndMC None,LPSYSTEMTIME lpSysTime None)
BOOL None None.MonthCal_SetDayState(HWND hwndMC None,INT iMonths None,LPMONTHDAYSTATE lpDayStateArray None)
BOOL None None.MonthCal_SetMaxSelCount(HWND hwndMC None,UINT iMax None)
BOOL None None.MonthCal_SetRange(HWND hwndMC None,DWORD fWhichLimit None,LPSYSTEMTIME lprgSysTimeArray None)
BOOL None None.MonthCal_SetSelRange(HWND hwndMC None,LPSYSTEMTIME lprgSysTimeArray None)
BOOL None None.MonthCal_SetUnicodeFormat(HWND hwnd None,BOOL fUnicode None)
BOOL None None.MoveToTail(POSITION pos None,CBaseList *pList None)
BOOL None None.OpenPrinterA(_In_ LPTSTR pPrinterName,_Out_ LPHANDLE phPrinter,_In_ LPPRINTER_DEFAULTS pDefault)
BOOL None None.OpenPrinter(_In_ LPTSTR pPrinterName,_Out_ LPHANDLE phPrinter,_In_ LPPRINTER_DEFAULTS pDefault)
BOOL None None.OpenPrinterW(_In_ LPTSTR pPrinterName,_Out_ LPHANDLE phPrinter,_In_ LPPRINTER_DEFAULTS pDefault)
BOOL None None.PathCchIsRoot(_In_opt_ PCWSTR pszPath)
BOOL None None.PathIsUNCEx(_In_ PCWSTR pszPath,_Out_opt_ PCWSTR *ppszServer)
BOOL None None.PATHOBJ_bEnumClipLines(PATHOBJ *ppo None,ULONG cb None,CLIPLINE *pcl None)
BOOL None None.PATHOBJ_bMoveTo(PATHOBJ *ppo None,POINTFIX ptfx None)
BOOL None None.PATHOBJ_bPolyLineTo(PATHOBJ *ppo None,POINTFIX *pptfx None,ULONG cptfx None)
BOOL None None.PFNCFILTERPROC(_In_ PCCERT_CONTEXT pCertContext,_In_ BOOL *pfInitialSelectedCert,_In_ void *pvCallbackData)
BOOL None None.PossiblyEatMessage(UINT uMsg None,WPARAM wParam None,LPARAM lParam None)
BOOL None None.PropSheet_AddPage(HWND hPropSheetDlg None,HPROPSHEETPAGE hpage None)
BOOL None None.PropSheet_Apply(HWND hPropSheetDlg None)
BOOL None None.PropSheet_Changed(HWND hPropSheetDlg None,HWND hwndPage None)
BOOL None None.PropSheet_InsertPage(HWND hPropSheetDlg None,HWND wParam None,HWND hpage None)
BOOL None None.PropSheet_IsDialogMessage(HWND hDlg None,LPMSG pMsg None)
BOOL None None.PropSheet_PressButton(HWND hPropSheetDlg None,int iButton None)
BOOL None None.PropSheet_RecalcPageSizes(HWND hPropSheetDlg None)
BOOL None None.PropSheet_SetCurSelByID(HWND hPropSheetDlg None,int id None)
BOOL None None.PropSheet_SetCurSel(HWND hPropSheetDlg None,HPROPSHEETPAGE hpage None,UINT index None)
BOOL None None.RegisterDialogClasses(HANDLE hInst None)
BOOL None None.ResetPrinterA(_In_ HANDLE hPrinter,_In_ LPPRINTER_DEFAULTS pDefault)
BOOL None None.ResetPrinter(_In_ HANDLE hPrinter,_In_ LPPRINTER_DEFAULTS pDefault)
BOOL None None.ResetPrinterW(_In_ HANDLE hPrinter,_In_ LPPRINTER_DEFAULTS pDefault)
BOOL None None.RpcAbnormalTermination(void None None)
BOOL None None.SafeDiv(INT32 dividend None,INT32 divisor None,INT32 *pResult None)
BOOL None None.ScreenSaverConfigureDialog(HWND hDlg None,UINT message None,WPARAM wParam None,LPARAM lParam None)
BOOL None None.SetDefaultPrinterA(_In_ LPCTSTR pszPrinter)
BOOL None None.SetDefaultPrinter(_In_ LPCTSTR pszPrinter)
BOOL None None.SetDefaultPrinterW(_In_ LPCTSTR pszPrinter)
BOOL None None.SetFormA(_In_ HANDLE hPrinter,_In_ LPTSTR pFormName,_In_ DWORD Level,_In_ LPTSTR pForm)
BOOL None None.SetFormat(BYTE *pFormat None,ULONG length None)
BOOL None None.SetForm(_In_ HANDLE hPrinter,_In_ LPTSTR pFormName,_In_ DWORD Level,_In_ LPTSTR pForm)
BOOL None None.SetFormW(_In_ HANDLE hPrinter,_In_ LPTSTR pFormName,_In_ DWORD Level,_In_ LPTSTR pForm)
BOOL None None.SetJobA(_In_ HANDLE hPrinter,_In_ DWORD JobId,_In_ DWORD Level,_In_ LPBYTE pJob,_In_ DWORD Command)
BOOL None None.SetJob(_In_ HANDLE hPrinter,_In_ DWORD JobId,_In_ DWORD Level,_In_ LPBYTE pJob,_In_ DWORD Command)
BOOL None None.SetJobW(_In_ HANDLE hPrinter,_In_ DWORD JobId,_In_ DWORD Level,_In_ LPBYTE pJob,_In_ DWORD Command)
BOOL None None.SetPortA(_In_ LPTSTR pName,_In_ LPTSTR pPortName,_In_ DWORD dwLevel,_In_ LPBYTE pPortInfo)
BOOL None None.SetPort(_In_ LPTSTR pName,_In_ LPTSTR pPortName,_In_ DWORD dwLevel,_In_ LPBYTE pPortInfo)
BOOL None None.SetPortW(_In_ LPTSTR pName,_In_ LPTSTR pPortName,_In_ DWORD dwLevel,_In_ LPBYTE pPortInfo)
BOOL None None.SetPrinterA(_In_ HANDLE hPrinter,_In_ DWORD Level,_In_ LPBYTE pPrinter,_In_ DWORD Command)
BOOL None None.SetPrinter(_In_ HANDLE hPrinter,_In_ DWORD Level,_In_ LPBYTE pPrinter,_In_ DWORD Command)
BOOL None None.SetPrinterW(_In_ HANDLE hPrinter,_In_ DWORD Level,_In_ LPBYTE pPrinter,_In_ DWORD Command)
BOOL None None.SetupDiOpenDeviceInterface(_In_ HDEVINFO DeviceInfoSet,_In_ PCTSTR DevicePath,_In_ DWORD OpenFlags,_Out_opt_ PSP_DEVICE_INTERFACE_DATA DeviceInterfaceData)
BOOL None None.SetWindowText(HWND hwnd None,LPCTSTR lpText None)
BOOL None None.ShowCursor([in] BOOL bShow)
BOOL None None.SHQueueUserWorkItem(LPTHREAD_START_ROUTINE pfnCallback None,LPVOID pContext None,LONG lPriority None,DWORD_PTR dwTag None,DWORD_PTR * pdwId,LPCSTR pszModule None,DWORD dwFlags None)
BOOL None None.SUCCEEDED(HRESULT hr None)
BOOL None None.SupportsDigestAlgorithm(__in LPCWSTR digestMethodToCheck)
BOOL None None.SupportsSignatureAlgorithm(__in LPCWSTR signingMethodToCheck,__in PCCERT_CONTEXT certificateToCheck)
BOOL None None.SyncUpdateProc(LPVOID pData None,PDS_REPSYNCALL_UPDATE pUpdate None)
BOOL None None.TabCtrl_DeleteAllItems(HWND hwnd None)
BOOL None None.TabCtrl_GetItem(HWND hwnd None,int iItem None,LPTCITEM pitem None)
BOOL None None.TabCtrl_GetItemRect(HWND hwnd None,int iItem None,RECT *prc None)
BOOL None None.TabCtrl_GetUnicodeFormat(HWND hwnd None)
BOOL None None.TabCtrl_HighlightItem(HWND hwndTab None,INT idItem None,WORD fHighlight None)
BOOL None None.TabCtrl_SetImageList(HWND hwnd None,HIMAGELIST himl None)
BOOL None None.TabCtrl_SetItemExtra(HWND hwnd None,int cb None)
BOOL None None.TabCtrl_SetItem(HWND hwnd None,int iItem None,LPTCITEM pitem None)
BOOL None None.TabCtrl_SetUnicodeFormat(HWND hwnd None,BOOL fUnicode None)
bool None None.ToBoolean(IFormatProvider provider None)
BOOL None None.TransformCopiesSampleAttributes(IMFTransform *pMFT None)
BOOL None None.TreeView_DeleteAllItems(HWND hwndTV None)
BOOL None None.TreeView_DeleteItem(HWND hwndTV None,HTREEITEM hitem None)
BOOL None None.TreeView_EndEditLabelNow(HWND hwndTV None,BOOL fCancel None)
BOOL None None.TreeView_EnsureVisible(HWND hwndTV None,HTREEITEM hitem None)
BOOL None None.TreeView_Expand(HWND hwndTV None,HTREEITEM hItem None,UINT flag None)
BOOL None None.TreeView_GetISearchString(HWND hwndTV None,LPTSTR lpsz None)
BOOL None None.TreeView_GetItem(HWND hwndTV None,LPTVITEM pitem None)
BOOL None None.TreeView_GetItemPartRect(HWND hwnd None,HTREEITEM hitem None,RECT *prc None,TVITEMPART *partid None)
BOOL None None.TreeView_GetItemRect(HWND hwndTV None,HTREEITEM hitem None,LPRECT prc None,BOOL fItemRect None)
BOOL None None.TreeView_GetUnicodeFormat(HWND hwnd None)
BOOL None None.TreeView_SelectDropTarget(HWND hwndTV None,HTREEITEM hitem None)
BOOL None None.TreeView_Select(HWND hwndTV None,HTREEITEM hitem None,UINT flag None)
BOOL None None.TreeView_SelectItem(HWND hwndTV None,HTREEITEM hitem None)
BOOL None None.TreeView_SelectSetFirstVisible(HWND hwndTV None,HTREEITEM hitem None)
BOOL None None.TreeView_SetIndent(HWND hwndTV None,INT indent None)
BOOL None None.TreeView_SetInsertMark(HWND hwndTV None,HTREEITEM htiInsert None,BOOL fAfter None)
BOOL None None.TreeView_SetItem(HWND hwndTV None,LPTVITEM pitem None)
BOOL None None.TreeView_SetUnicodeFormat(HWND hwnd None,BOOL fUnicode None)
BOOL None None.TreeView_SortChildrenCB(HWND hwndTV None,LPTVSORTCB psort None,BOOL fRecurse None)
BOOL None None.TreeView_SortChildren(HWND hwndTV None,HTREEITEM hitem None,BOOL fRecurse None)
bool None None.__uncaught_exception( None None)
BOOL None None.WIMSetTemporaryPath(HANDLE hWim None,PWSTR pszPath None)
BOOL None None.WlxActivateUserShell(_In_ PVOID pWlxContext,_In_ PWSTR pszDesktopName,_In_ PWSTR pszMprLogonScript,_In_ PVOID pEnvironment)
BOOL None None.WlxCloseUserDesktop(_In_ HANDLE hWlx,_In_ PWLX_DESKTOP pDesktop,_In_ HANDLE hToken)
BOOL None None.WlxCreateUserDesktop(_In_ HANDLE hWlx,_In_ HANDLE hToken,_In_ DWORD Flags,_In_ PWSTR pszDesktopName,_Out_ PWLX_DESKTOP *ppDesktop)
BOOL None None.WlxDisconnect(void None None)
BOOL None None.WlxDisplayStatusMessage(_In_ PVOID pWlxContext,_In_ HDESK hDesktop,_In_ DWORD dwOptions,_In_ PWSTR pTitle,_In_ PWSTR pMessage)
BOOL None None.WlxGetOption(_In_ HANDLE hWlx,_In_ DWORD Option,_Out_ ULONG_PTR *Value)
BOOL None None.WlxGetSourceDesktop(_In_ HANDLE hWlx,_Out_ PWLX_DESKTOP *ppDesktop)
BOOL None None.WlxGetStatusMessage(_In_ PVOID pWlxContext,_Out_ DWORD *pdwOptions,_Out_ PWSTR pMessage,_In_ DWORD dwBufferSize)
BOOL None None.WlxInitialize(_In_ LPWSTR lpWinsta,_In_ HANDLE hWlx,_In_ PVOID pvReserved,_In_ PVOID pWinlogonFunctions,_Out_ PVOID *pWlxContext)
BOOL None None.WlxIsLockOk(_In_ PVOID pWlxContext)
BOOL None None.WlxIsLogoffOk(_In_ PVOID pWlxContext)
BOOL None None.WlxNegotiate(_In_ DWORD dwWinLogonVersion,_Out_ PDWORD pdwDllVersion)
BOOL None None.WlxNetworkProviderLoad(_In_ PVOID pWlxContext,_Out_ PWLX_MPR_NOTIFY_INFO pNprNotifyInfo)
BOOL None None.WlxQueryClientCredentials(_Out_ PWLX_CLIENT_CREDENTIALS_INFO_V1_0 pCred)
BOOL None None.WlxQueryInetConnectorCredentials(_Out_ PWLX_CLIENT_CREDENTIALS_INFO_V1_0 pCred)
BOOL None None.WlxQueryTsLogonCredentials(_Out_ PWLX_CLIENT_CREDENTIALS_INFO_V2_0 pCred)
BOOL None None.WlxRemoveStatusMessage(_In_ PVOID pWlxContext)
BOOL None None.WlxScreenSaverNotify(_In_ PVOID pWlxContext,_Inout_ BOOL *pSecure)
BOOL None None.WlxSetOption(_In_ HANDLE hWlx,_In_ DWORD Option,_In_ ULONG_PTR Value,_Out_ ULONG_PTR *OldValue)
BOOL None None.WlxSetReturnDesktop(_In_ HANDLE hWlx,_In_ PWLX_DESKTOP pDesktop)
BOOL None None.WlxSetTimeout(_In_ HANDLE hWlx,_In_ DWORD Timeout)
BOOL None None.WlxStartApplication(_In_ PVOID pWlxContext,_In_ PWSTR pszDesktopName,_In_ PVOID pEnvironment,_In_ PWSTR pszCmdLine)
BOOL None None.WMPNotifySubscriptionPluginAddRemove(void None None)
BOOL None None.WPUCloseEvent(_In_ WSAEVENT hEvent,_Out_ LPINT lpErrno)
BOOL None None.WPUPostMessage(_In_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
BOOL None None.WPUResetEvent(_In_ WSAEVENT hEvent,_Out_ LPINT lpErrno)
BOOL None None.WPUSetEvent(_In_ WSAEVENT hEvent,_Out_ LPINT lpErrno)
BOOL None None.WSPGetOverlappedResult(_In_ SOCKET s,_In_ LPWSAOVERLAPPED lpOverlapped,_Out_ LPDWORD lpcbTransfer,_In_ BOOL fWait,_Out_ LPDWORD lpdwFlags,_Out_ LPINT lpErrno)
BOOL None None.WSPGetQOSByName(_In_ SOCKET s,_Inout_ LPWSABUF lpQOSName,_Out_ LPQOS lpQOS,_Out_ LPINT lpErrno)
BOOL None normaliz.IsNormalizedString(_In_ NORM_FORM NormForm,_In_ LPCWSTR lpString,_In_ int cwLength)
BOOL None npptools.IsRemoteNPP(_In_ HBLOB hBlob)
BOOL None ntdsapi.DsCrackUnquotedMangledRdnA(_In_ LPCTSTR pszRDN,_In_ DWORD cchRDN,_Out_opt_ GUID *pGuid,_Out_opt_ DS_MANGLE_FOR *peDsMangleFor)
BOOL None ntdsapi.DsCrackUnquotedMangledRdn(_In_ LPCTSTR pszRDN,_In_ DWORD cchRDN,_Out_opt_ GUID *pGuid,_Out_opt_ DS_MANGLE_FOR *peDsMangleFor)
BOOL None ntdsapi.DsCrackUnquotedMangledRdnW(_In_ LPCTSTR pszRDN,_In_ DWORD cchRDN,_Out_opt_ GUID *pGuid,_Out_opt_ DS_MANGLE_FOR *peDsMangleFor)
BOOL None ntdsapi.DsIsMangledDnA(_In_ LPCTSTR pszDn,_In_ DS_MANGLE_FOR eDsMangleFor)
BOOL None ntdsapi.DsIsMangledDn(_In_ LPCTSTR pszDn,_In_ DS_MANGLE_FOR eDsMangleFor)
BOOL None ntdsapi.DsIsMangledDnW(_In_ LPCTSTR pszDn,_In_ DS_MANGLE_FOR eDsMangleFor)
BOOL None ntdsapi.DsIsMangledRdnValueA(_In_ LPCTSTR pszRdn,_In_ DWORD cRdn,_In_ DS_MANGLE_FOR eDsMangleForDesired)
BOOL None ntdsapi.DsIsMangledRdnValue(_In_ LPCTSTR pszRdn,_In_ DWORD cRdn,_In_ DS_MANGLE_FOR eDsMangleForDesired)
BOOL None ntdsapi.DsIsMangledRdnValueW(_In_ LPCTSTR pszRdn,_In_ DWORD cRdn,_In_ DS_MANGLE_FOR eDsMangleForDesired)
BOOL None ole32.CoDosDateTimeToFileTime(_In_ WORD nDosDate,_In_ WORD nDosTime,_Out_ FILETIME *lpFileTime)
BOOL None ole32.CoFileTimeToDosDateTime(_In_ FILETIME *lpFileTime,_Out_ LPWORD lpDosDate,_Out_ LPWORD lpDosTime)
BOOL None ole32.CoIsHandlerConnected(_In_ LPUNKNOWN pUnk)
BOOL None ole32.CoIsOle1Class(_In_ REFCLSID rclsid)
BOOL None ole32.IsAccelerator(_In_ HACCEL hAccel,_In_ int cAccelEntries,_In_ LPMSG lpMsg,_Out_ WORD *lpwCmd)
BOOL None ole32.IsEqualCLSID(_In_ REFCLSID rclsid1,_In_ REFCLSID rclsid2)
BOOL None ole32.IsEqualGUID(_In_ REFGUID rguid1,_In_ REFGUID rguid2)
BOOL None ole32.IsEqualIID(_In_ REFGUID riid1,_In_ REFGUID riid2)
BOOL None ole32.OleIsRunning(_In_ LPOLEOBJECT pObject)
BOOL None oledlg.OleUIAddVerbMenuA(_In_opt_ LPOLEOBJECT lpOleObj,_In_opt_ LPCTSTR lpszShortType,_In_ HMENU hMenu,_In_ UINT uPos,_In_ UINT uIDVerbMin,_In_ UINT uIDVerbMax,_In_ BOOL bAddConvert,_In_ UINT idConvert,_Out_ HMENU *lphMenu)
BOOL None oledlg.OleUIAddVerbMenu(_In_opt_ LPOLEOBJECT lpOleObj,_In_opt_ LPCTSTR lpszShortType,_In_ HMENU hMenu,_In_ UINT uPos,_In_ UINT uIDVerbMin,_In_ UINT uIDVerbMax,_In_ BOOL bAddConvert,_In_ UINT idConvert,_Out_ HMENU *lphMenu)
BOOL None oledlg.OleUIAddVerbMenuW(_In_opt_ LPOLEOBJECT lpOleObj,_In_opt_ LPCTSTR lpszShortType,_In_ HMENU hMenu,_In_ UINT uPos,_In_ UINT uIDVerbMin,_In_ UINT uIDVerbMax,_In_ BOOL bAddConvert,_In_ UINT idConvert,_Out_ HMENU *lphMenu)
BOOL None oledlg.OleUICanConvertOrActivateAs(_In_ REFCLSID rClsid,_In_ BOOL fIsLinkedObject,_In_ WORD wFormat)
BOOL None oledlg.OleUIUpdateLinksA(_In_ LPOLEUILINKCONTAINERW lpOleUILinkCntr,_In_ HWND hwndParent,_In_ LPTSTR lpszTitle,_In_ int cLinks)
BOOL None oledlg.OleUIUpdateLinks(_In_ LPOLEUILINKCONTAINERW lpOleUILinkCntr,_In_ HWND hwndParent,_In_ LPTSTR lpszTitle,_In_ int cLinks)
BOOL None oledlg.OleUIUpdateLinksW(_In_ LPOLEUILINKCONTAINERW lpOleUILinkCntr,_In_ HWND hwndParent,_In_ LPTSTR lpszTitle,_In_ int cLinks)
BOOL None pdh.PdhIsRealTimeQuery(_In_ PDH_HQUERY hQuery)
BOOL None plotui.PrinterProperties(_In_ HWND hWnd,_In_ HANDLE hPrinter)
BOOL None propsys.PropVariantToBooleanWithDefault(_In_ REFPROPVARIANT propvarIn,_In_ BOOL fDefault)
BOOL None propsys.VariantToBooleanWithDefault(_In_ REFVARIANT varIn,_In_ BOOL fDefault)
BOOL None rasdlg.RasDialDlgA(_In_ LPTSTR lpszPhonebook,_In_ LPTSTR lpszEntry,_In_ LPTSTR lpszPhoneNumber,_In_ LPRASDIALDLG lpInfo)
BOOL None rasdlg.RasDialDlg(_In_ LPTSTR lpszPhonebook,_In_ LPTSTR lpszEntry,_In_ LPTSTR lpszPhoneNumber,_In_ LPRASDIALDLG lpInfo)
BOOL None rasdlg.RasDialDlgW(_In_ LPTSTR lpszPhonebook,_In_ LPTSTR lpszEntry,_In_ LPTSTR lpszPhoneNumber,_In_ LPRASDIALDLG lpInfo)
BOOL None rasdlg.RasEntryDlgA(_In_ LPTSTR lpszPhonebook,_In_ LPTSTR lpszEntry,_In_ LPRASENTRYDLG lpInfo)
BOOL None rasdlg.RasEntryDlg(_In_ LPTSTR lpszPhonebook,_In_ LPTSTR lpszEntry,_In_ LPRASENTRYDLG lpInfo)
BOOL None rasdlg.RasEntryDlgW(_In_ LPTSTR lpszPhonebook,_In_ LPTSTR lpszEntry,_In_ LPRASENTRYDLG lpInfo)
BOOL None rasdlg.RasMonitorDlgA(_In_ LPTSTR lpszDeviceName,_Inout_ LPRASMONITORDLG lpInfo)
BOOL None rasdlg.RasMonitorDlg(_In_ LPTSTR lpszDeviceName,_Inout_ LPRASMONITORDLG lpInfo)
BOOL None rasdlg.RasMonitorDlgW(_In_ LPTSTR lpszDeviceName,_Inout_ LPRASMONITORDLG lpInfo)
BOOL None rasdlg.RasPhonebookDlgA(_In_ LPTSTR lpszPhonebook,_In_ LPTSTR lpszEntry,_Inout_ LPRASPBDLG lpInfo)
BOOL None rasdlg.RasPhonebookDlg(_In_ LPTSTR lpszPhonebook,_In_ LPTSTR lpszEntry,_Inout_ LPRASPBDLG lpInfo)
BOOL None rasdlg.RasPhonebookDlgW(_In_ LPTSTR lpszPhonebook,_In_ LPTSTR lpszEntry,_Inout_ LPRASPBDLG lpInfo)
BOOL None schannel.SslCrackCertificate(_In_ PUCHAR pbCertificate,_In_ DWORD dwCertificate,_In_ DWORD dwFlags,_Out_ PX509Certificate *ppCertificate)
BOOL None schannel.SslEmptyCacheA(_In_ LPSTR pszTargetName,_In_ DWORD dwFlags)
BOOL None schannel.SslEmptyCache(_In_ LPSTR pszTargetName,_In_ DWORD dwFlags)
BOOL None schannel.SslEmptyCacheW(_In_ LPSTR pszTargetName,_In_ DWORD dwFlags)
Bool None sensapi.IsNetworkAlive(_Out_ LPDWORD lpdwFlags)
BOOL None setupapi.SetupAddInstallSectionToDiskSpaceListA(_In_ HDSKSPC DiskSpace,_In_ HINF InfHandle,_In_ HINF LayoutInfHandle,_In_ PCTSTR SectionName,_In_ PVOID Reserved1,_In_ UINT Reserved2)
BOOL None setupapi.SetupAddInstallSectionToDiskSpaceList(_In_ HDSKSPC DiskSpace,_In_ HINF InfHandle,_In_ HINF LayoutInfHandle,_In_ PCTSTR SectionName,_In_ PVOID Reserved1,_In_ UINT Reserved2)
BOOL None setupapi.SetupAddInstallSectionToDiskSpaceListW(_In_ HDSKSPC DiskSpace,_In_ HINF InfHandle,_In_ HINF LayoutInfHandle,_In_ PCTSTR SectionName,_In_ PVOID Reserved1,_In_ UINT Reserved2)
BOOL None setupapi.SetupAddSectionToDiskSpaceListA(_In_ HDSKSPC DiskSpace,_In_ HINF InfHandle,_In_ HINF ListInfHandle,_In_ PCTSTR SectionName,_In_ UINT Operation,_In_ PVOID Reserved1,_In_ UINT Reserved2)
BOOL None setupapi.SetupAddSectionToDiskSpaceList(_In_ HDSKSPC DiskSpace,_In_ HINF InfHandle,_In_ HINF ListInfHandle,_In_ PCTSTR SectionName,_In_ UINT Operation,_In_ PVOID Reserved1,_In_ UINT Reserved2)
BOOL None setupapi.SetupAddSectionToDiskSpaceListW(_In_ HDSKSPC DiskSpace,_In_ HINF InfHandle,_In_ HINF ListInfHandle,_In_ PCTSTR SectionName,_In_ UINT Operation,_In_ PVOID Reserved1,_In_ UINT Reserved2)
BOOL None setupapi.SetupAddToDiskSpaceListA(_In_ HDSKSPC DiskSpace,_In_ PCTSTR TargetFilespec,_In_ LONGLONG FileSize,_In_ UINT Operation,_In_ PVOID Reserved1,_In_ UINT Reserved2)
BOOL None setupapi.SetupAddToDiskSpaceList(_In_ HDSKSPC DiskSpace,_In_ PCTSTR TargetFilespec,_In_ LONGLONG FileSize,_In_ UINT Operation,_In_ PVOID Reserved1,_In_ UINT Reserved2)
BOOL None setupapi.SetupAddToDiskSpaceListW(_In_ HDSKSPC DiskSpace,_In_ PCTSTR TargetFilespec,_In_ LONGLONG FileSize,_In_ UINT Operation,_In_ PVOID Reserved1,_In_ UINT Reserved2)
BOOL None setupapi.SetupAddToSourceListA(_In_ DWORD Flags,_In_ PCTSTR Source)
BOOL None setupapi.SetupAddToSourceList(_In_ DWORD Flags,_In_ PCTSTR Source)
BOOL None setupapi.SetupAddToSourceListW(_In_ DWORD Flags,_In_ PCTSTR Source)
BOOL None setupapi.SetupCancelTemporarySourceList(void None None)
BOOL None setupapi.SetupCommitFileQueueA(_In_ HWND Owner,_In_ HSPFILEQ QueueHandle,_In_ PSP_FILE_CALLBACK MsgHandler,_In_ PVOID Context)
BOOL None setupapi.SetupCommitFileQueue(_In_ HWND Owner,_In_ HSPFILEQ QueueHandle,_In_ PSP_FILE_CALLBACK MsgHandler,_In_ PVOID Context)
BOOL None setupapi.SetupCommitFileQueueW(_In_ HWND Owner,_In_ HSPFILEQ QueueHandle,_In_ PSP_FILE_CALLBACK MsgHandler,_In_ PVOID Context)
BOOL None setupapi.SetupConfigureWmiFromInfSectionA(_In_ HINF InfHandle,_In_ PCWSTR SectionName,_In_ DWORD Flags)
BOOL None setupapi.SetupConfigureWmiFromInfSection(_In_ HINF InfHandle,_In_ PCWSTR SectionName,_In_ DWORD Flags)
BOOL None setupapi.SetupConfigureWmiFromInfSectionW(_In_ HINF InfHandle,_In_ PCWSTR SectionName,_In_ DWORD Flags)
BOOL None setupapi.SetupDestroyDiskSpaceList(_Inout_ HDSKSPC DiskSpace)
BOOL None setupapi.SetupDiDeleteDeviceInterfaceData(_In_ HDEVINFO DeviceInfoSet,_In_ PSP_DEVICE_INTERFACE_DATA DeviceInterfaceData)
BOOL None setupapi.SetupDiDestroyDeviceInfoList(_In_ HDEVINFO DeviceInfoSet)
BOOL None setupapi.SetupDiSetDeviceInterfaceDefault(_In_ HDEVINFO DeviceInfoSet,_Inout_ PSP_DEVICE_INTERFACE_DATA DeviceInterfaceData,_In_ DWORD Flags,_Reserved_ PVOID Reserved)
BOOL None setupapi.SetupFindFirstLineA(_In_ HINF InfHandle,_In_ PCTSTR Section,_In_ PCTSTR Key,_Inout_ PINFCONTEXT Context)
BOOL None setupapi.SetupFindFirstLine(_In_ HINF InfHandle,_In_ PCTSTR Section,_In_ PCTSTR Key,_Inout_ PINFCONTEXT Context)
BOOL None setupapi.SetupFindFirstLineW(_In_ HINF InfHandle,_In_ PCTSTR Section,_In_ PCTSTR Key,_Inout_ PINFCONTEXT Context)
BOOL None setupapi.SetupFindNextLine(_In_ PINFCONTEXT ContextIn,_Out_ PINFCONTEXT ContextOut)
BOOL None setupapi.SetupFindNextMatchLineA(_In_ PINFCONTEXT ContextIn,_In_ PCTSTR Key,_Inout_ PINFCONTEXT ContextOut)
BOOL None setupapi.SetupFindNextMatchLine(_In_ PINFCONTEXT ContextIn,_In_ PCTSTR Key,_Inout_ PINFCONTEXT ContextOut)
BOOL None setupapi.SetupFindNextMatchLineW(_In_ PINFCONTEXT ContextIn,_In_ PCTSTR Key,_Inout_ PINFCONTEXT ContextOut)
BOOL None setupapi.SetupFreeSourceListA(_Inout_ PCTSTR **List,_In_ UINT Count)
BOOL None setupapi.SetupFreeSourceList(_Inout_ PCTSTR **List,_In_ UINT Count)
BOOL None setupapi.SetupFreeSourceListW(_Inout_ PCTSTR **List,_In_ UINT Count)
BOOL None setupapi.SetupGetBinaryField(_In_ PINFCONTEXT Context,_In_ DWORD FieldIndex,_Inout_ BYTE *ReturnBuffer,_In_ DWORD ReturnBufferSize,_Inout_ LPDWORD RequiredSize)
BOOL None setupapi.SetupGetFileCompressionInfoExA(_In_ PCTSTR SourceFileName,_Inout_ PTSTR ActualSourceFileNameBuffer,_Inout_ DWORD ActualSourceFileNameLen,_Out_ PDWORD RequiredBufferLen,_Out_ PDWORD SourceFileSize,_Out_ PDWORD TargetFileSize,_Out_ PUINT CompressionType)
BOOL None setupapi.SetupGetFileCompressionInfoEx(_In_ PCTSTR SourceFileName,_Inout_ PTSTR ActualSourceFileNameBuffer,_Inout_ DWORD ActualSourceFileNameLen,_Out_ PDWORD RequiredBufferLen,_Out_ PDWORD SourceFileSize,_Out_ PDWORD TargetFileSize,_Out_ PUINT CompressionType)
BOOL None setupapi.SetupGetFileCompressionInfoExW(_In_ PCTSTR SourceFileName,_Inout_ PTSTR ActualSourceFileNameBuffer,_Inout_ DWORD ActualSourceFileNameLen,_Out_ PDWORD RequiredBufferLen,_Out_ PDWORD SourceFileSize,_Out_ PDWORD TargetFileSize,_Out_ PUINT CompressionType)
BOOL None setupapi.SetupGetFileQueueCount(_In_ HSPFILEQ FileQueue,_In_ UINT SubQueueFileOp,_Out_ PUINT NumOperations)
BOOL None setupapi.SetupGetFileQueueFlags(_In_ HSPFILEQ FileQueue,_Out_ PDWORD Flags)
BOOL None setupapi.SetupGetInfFileListA(_In_ PCTSTR DirectoryPath,_In_ DWORD InfStyle,_Inout_ PTSTR ReturnBuffer,_In_ DWORD ReturnBufferSize,_Inout_ PDWORD RequiredSize)
BOOL None setupapi.SetupGetInfFileList(_In_ PCTSTR DirectoryPath,_In_ DWORD InfStyle,_Inout_ PTSTR ReturnBuffer,_In_ DWORD ReturnBufferSize,_Inout_ PDWORD RequiredSize)
BOOL None setupapi.SetupGetInfFileListW(_In_ PCTSTR DirectoryPath,_In_ DWORD InfStyle,_Inout_ PTSTR ReturnBuffer,_In_ DWORD ReturnBufferSize,_Inout_ PDWORD RequiredSize)
BOOL None setupapi.SetupGetInfInformationA(_In_ LPCVOID InfSpec,_In_ DWORD SearchControl,_Inout_ PSP_INF_INFORMATION ReturnBuffer,_In_ DWORD ReturnBufferSize,_Inout_ PDWORD RequiredSize)
BOOL None setupapi.SetupGetInfInformation(_In_ LPCVOID InfSpec,_In_ DWORD SearchControl,_Inout_ PSP_INF_INFORMATION ReturnBuffer,_In_ DWORD ReturnBufferSize,_Inout_ PDWORD RequiredSize)
BOOL None setupapi.SetupGetInfInformationW(_In_ LPCVOID InfSpec,_In_ DWORD SearchControl,_Inout_ PSP_INF_INFORMATION ReturnBuffer,_In_ DWORD ReturnBufferSize,_Inout_ PDWORD RequiredSize)
BOOL None setupapi.SetupGetIntField(_In_ PINFCONTEXT Context,_In_ DWORD FieldIndex,_Out_ PINT IntegerValue)
BOOL None setupapi.SetupGetLineByIndexA(_In_ HINF InfHandle,_In_ PCTSTR Section,_In_ DWORD Index,_Inout_ PINFCONTEXT Context)
BOOL None setupapi.SetupGetLineByIndex(_In_ HINF InfHandle,_In_ PCTSTR Section,_In_ DWORD Index,_Inout_ PINFCONTEXT Context)
BOOL None setupapi.SetupGetLineByIndexW(_In_ HINF InfHandle,_In_ PCTSTR Section,_In_ DWORD Index,_Inout_ PINFCONTEXT Context)
BOOL None setupapi.SetupGetLineTextA(_In_ PINFCONTEXT Context,_In_ HINF InfHandle,_In_ PCTSTR Section,_In_ PCTSTR Key,_Inout_ PTSTR ReturnBuffer,_In_ DWORD ReturnBufferSize,_Inout_ PDWORD RequiredSize)
BOOL None setupapi.SetupGetLineText(_In_ PINFCONTEXT Context,_In_ HINF InfHandle,_In_ PCTSTR Section,_In_ PCTSTR Key,_Inout_ PTSTR ReturnBuffer,_In_ DWORD ReturnBufferSize,_Inout_ PDWORD RequiredSize)
BOOL None setupapi.SetupGetLineTextW(_In_ PINFCONTEXT Context,_In_ HINF InfHandle,_In_ PCTSTR Section,_In_ PCTSTR Key,_Inout_ PTSTR ReturnBuffer,_In_ DWORD ReturnBufferSize,_Inout_ PDWORD RequiredSize)
BOOL None setupapi.SetupGetMultiSzFieldA(_In_ PINFCONTEXT Context,_In_ DWORD FieldIndex,_Inout_ PTSTR ReturnBuffer,_In_ DWORD ReturnBufferSize,_In_ LPDWORD RequiredSize)
BOOL None setupapi.SetupGetMultiSzField(_In_ PINFCONTEXT Context,_In_ DWORD FieldIndex,_Inout_ PTSTR ReturnBuffer,_In_ DWORD ReturnBufferSize,_In_ LPDWORD RequiredSize)
BOOL None setupapi.SetupGetMultiSzFieldW(_In_ PINFCONTEXT Context,_In_ DWORD FieldIndex,_Inout_ PTSTR ReturnBuffer,_In_ DWORD ReturnBufferSize,_In_ LPDWORD RequiredSize)
BOOL None setupapi.SetupGetSourceFileLocationA(_In_ HINF InfHandle,_In_ PINFCONTEXT InfContext,_In_ PCTSTR FileName,_Inout_ PUINT SourceId,_Inout_ PTSTR ReturnBuffer,_Out_ DWORD ReturnBufferSize,_Inout_ PDWORD RequiredSize)
BOOL None setupapi.SetupGetSourceFileLocation(_In_ HINF InfHandle,_In_ PINFCONTEXT InfContext,_In_ PCTSTR FileName,_Inout_ PUINT SourceId,_Inout_ PTSTR ReturnBuffer,_Out_ DWORD ReturnBufferSize,_Inout_ PDWORD RequiredSize)
BOOL None setupapi.SetupGetSourceFileLocationW(_In_ HINF InfHandle,_In_ PINFCONTEXT InfContext,_In_ PCTSTR FileName,_Inout_ PUINT SourceId,_Inout_ PTSTR ReturnBuffer,_Out_ DWORD ReturnBufferSize,_Inout_ PDWORD RequiredSize)
BOOL None setupapi.SetupGetSourceFileSizeA(_In_ HINF InfHandle,_In_ PINFCONTEXT InfContext,_In_ PCTSTR FileName,_In_ PCTSTR Section,_Inout_ PDWORD FileSize,_In_ UINT RoundingFactor)
BOOL None setupapi.SetupGetSourceFileSize(_In_ HINF InfHandle,_In_ PINFCONTEXT InfContext,_In_ PCTSTR FileName,_In_ PCTSTR Section,_Inout_ PDWORD FileSize,_In_ UINT RoundingFactor)
BOOL None setupapi.SetupGetSourceFileSizeW(_In_ HINF InfHandle,_In_ PINFCONTEXT InfContext,_In_ PCTSTR FileName,_In_ PCTSTR Section,_Inout_ PDWORD FileSize,_In_ UINT RoundingFactor)
BOOL None setupapi.SetupGetSourceInfoA(_In_ HINF InfHandle,_In_ UINT SourceId,_In_ UINT InfoDesired,_Inout_ PTSTR ReturnBuffer,_In_ DWORD ReturnBufferSize,_Inout_ LPDWORD RequiredSize)
BOOL None setupapi.SetupGetSourceInfo(_In_ HINF InfHandle,_In_ UINT SourceId,_In_ UINT InfoDesired,_Inout_ PTSTR ReturnBuffer,_In_ DWORD ReturnBufferSize,_Inout_ LPDWORD RequiredSize)
BOOL None setupapi.SetupGetSourceInfoW(_In_ HINF InfHandle,_In_ UINT SourceId,_In_ UINT InfoDesired,_Inout_ PTSTR ReturnBuffer,_In_ DWORD ReturnBufferSize,_Inout_ LPDWORD RequiredSize)
BOOL None setupapi.SetupGetStringFieldA(_In_ PINFCONTEXT Context,_In_ DWORD FieldIndex,_Inout_ PTSTR ReturnBuffer,_In_ DWORD ReturnBufferSize,_Out_ PDWORD RequiredSize)
BOOL None setupapi.SetupGetStringField(_In_ PINFCONTEXT Context,_In_ DWORD FieldIndex,_Inout_ PTSTR ReturnBuffer,_In_ DWORD ReturnBufferSize,_Out_ PDWORD RequiredSize)
BOOL None setupapi.SetupGetStringFieldW(_In_ PINFCONTEXT Context,_In_ DWORD FieldIndex,_Inout_ PTSTR ReturnBuffer,_In_ DWORD ReturnBufferSize,_Out_ PDWORD RequiredSize)
BOOL None setupapi.SetupGetTargetPathA(_In_ HINF InfHandle,_In_ PINFCONTEXT InfContext,_In_ PCTSTR Section,_Inout_ PTSTR ReturnBuffer,_In_ DWORD ReturnBufferSize,_Inout_ PDWORD RequiredSize)
BOOL None setupapi.SetupGetTargetPath(_In_ HINF InfHandle,_In_ PINFCONTEXT InfContext,_In_ PCTSTR Section,_Inout_ PTSTR ReturnBuffer,_In_ DWORD ReturnBufferSize,_Inout_ PDWORD RequiredSize)
BOOL None setupapi.SetupGetTargetPathW(_In_ HINF InfHandle,_In_ PINFCONTEXT InfContext,_In_ PCTSTR Section,_Inout_ PTSTR ReturnBuffer,_In_ DWORD ReturnBufferSize,_Inout_ PDWORD RequiredSize)
BOOL None setupapi.SetupInstallFileA(_In_ HINF InfHandle,_In_ PINFCONTEXT InfContext,_In_ PCTSTR SourceFile,_In_ PCTSTR SourcePathRoot,_In_ PCTSTR DestinationName,_In_ DWORD CopyStyle,_In_ PSP_FILE_CALLBACK CopyMsgHandler,_In_ PVOID Context)
BOOL None setupapi.SetupInstallFileExA(_In_ HINF InfHandle,_In_ PINFCONTEXT InfContext,_In_ PCTSTR SourceFile,_In_ PCTSTR SourcePathRoot,_In_ PCTSTR DestinationName,_In_ DWORD CopyStyle,_In_ PSP_FILE_CALLBACK CopyMsgHandler,_In_ PVOID Context,_Out_ PBOOL FileWasInUse)
BOOL None setupapi.SetupInstallFileEx(_In_ HINF InfHandle,_In_ PINFCONTEXT InfContext,_In_ PCTSTR SourceFile,_In_ PCTSTR SourcePathRoot,_In_ PCTSTR DestinationName,_In_ DWORD CopyStyle,_In_ PSP_FILE_CALLBACK CopyMsgHandler,_In_ PVOID Context,_Out_ PBOOL FileWasInUse)
BOOL None setupapi.SetupInstallFileExW(_In_ HINF InfHandle,_In_ PINFCONTEXT InfContext,_In_ PCTSTR SourceFile,_In_ PCTSTR SourcePathRoot,_In_ PCTSTR DestinationName,_In_ DWORD CopyStyle,_In_ PSP_FILE_CALLBACK CopyMsgHandler,_In_ PVOID Context,_Out_ PBOOL FileWasInUse)
BOOL None setupapi.SetupInstallFile(_In_ HINF InfHandle,_In_ PINFCONTEXT InfContext,_In_ PCTSTR SourceFile,_In_ PCTSTR SourcePathRoot,_In_ PCTSTR DestinationName,_In_ DWORD CopyStyle,_In_ PSP_FILE_CALLBACK CopyMsgHandler,_In_ PVOID Context)
BOOL None setupapi.SetupInstallFilesFromInfSectionA(_In_ HINF InfHandle,_In_ HINF LayoutInfHandle,_In_ HSPFILEQ FileQueue,_In_ PCTSTR SectionName,_In_ PCTSTR SourceRootPath,_In_ UINT CopyFlags)
BOOL None setupapi.SetupInstallFilesFromInfSection(_In_ HINF InfHandle,_In_ HINF LayoutInfHandle,_In_ HSPFILEQ FileQueue,_In_ PCTSTR SectionName,_In_ PCTSTR SourceRootPath,_In_ UINT CopyFlags)
BOOL None setupapi.SetupInstallFilesFromInfSectionW(_In_ HINF InfHandle,_In_ HINF LayoutInfHandle,_In_ HSPFILEQ FileQueue,_In_ PCTSTR SectionName,_In_ PCTSTR SourceRootPath,_In_ UINT CopyFlags)
BOOL None setupapi.SetupInstallFileW(_In_ HINF InfHandle,_In_ PINFCONTEXT InfContext,_In_ PCTSTR SourceFile,_In_ PCTSTR SourcePathRoot,_In_ PCTSTR DestinationName,_In_ DWORD CopyStyle,_In_ PSP_FILE_CALLBACK CopyMsgHandler,_In_ PVOID Context)
BOOL None setupapi.SetupInstallFromInfSectionA(HWND Owner None,HINF InfHandle None,PCTSTR SectionName None,UINT Flags None,HKEY RelativeKeyRoot None,PCTSTR SourceRootPath None,UINT CopyFlags None,PSP_FILE_CALLBACK MsgHandler None,PVOID Context None,HDEVINFO DeviceInfoSet None,PSP_DEVINFO_DATA DeviceInfoData None)
BOOL None setupapi.SetupInstallFromInfSection(HWND Owner None,HINF InfHandle None,PCTSTR SectionName None,UINT Flags None,HKEY RelativeKeyRoot None,PCTSTR SourceRootPath None,UINT CopyFlags None,PSP_FILE_CALLBACK MsgHandler None,PVOID Context None,HDEVINFO DeviceInfoSet None,PSP_DEVINFO_DATA DeviceInfoData None)
BOOL None setupapi.SetupInstallFromInfSectionW(HWND Owner None,HINF InfHandle None,PCTSTR SectionName None,UINT Flags None,HKEY RelativeKeyRoot None,PCTSTR SourceRootPath None,UINT CopyFlags None,PSP_FILE_CALLBACK MsgHandler None,PVOID Context None,HDEVINFO DeviceInfoSet None,PSP_DEVINFO_DATA DeviceInfoData None)
BOOL None setupapi.SetupInstallServicesFromInfSectionA(_In_ HINF InfHandle,_In_ PCTSTR SectionName,_In_ DWORD Flags)
BOOL None setupapi.SetupInstallServicesFromInfSection(_In_ HINF InfHandle,_In_ PCTSTR SectionName,_In_ DWORD Flags)
BOOL None setupapi.SetupInstallServicesFromInfSectionW(_In_ HINF InfHandle,_In_ PCTSTR SectionName,_In_ DWORD Flags)
BOOL None setupapi.SetupIterateCabinetA(_In_ PCTSTR CabinetFile,_In_ DWORD Reserved,_In_ PSP_FILE_CALLBACK MsgHandler,_In_ PVOID Context)
BOOL None setupapi.SetupIterateCabinet(_In_ PCTSTR CabinetFile,_In_ DWORD Reserved,_In_ PSP_FILE_CALLBACK MsgHandler,_In_ PVOID Context)
BOOL None setupapi.SetupIterateCabinetW(_In_ PCTSTR CabinetFile,_In_ DWORD Reserved,_In_ PSP_FILE_CALLBACK MsgHandler,_In_ PVOID Context)
BOOL None setupapi.SetupLogErrorA(_In_ PCTSTR MessageString,_In_ LogSeverity Severity)
BOOL None setupapi.SetupLogError(_In_ PCTSTR MessageString,_In_ LogSeverity Severity)
BOOL None setupapi.SetupLogErrorW(_In_ PCTSTR MessageString,_In_ LogSeverity Severity)
BOOL None setupapi.SetupLogFileA(_In_ HSPFILELOG FileLogHandle,_In_ PCTSTR LogSectionName,_In_ PCTSTR SourceFileName,_In_ PCTSTR TargetFileName,_In_ DWORD Checksum,_In_ PCTSTR DiskTagfile,_In_ PCTSTR DiskDescription,_In_ PCTSTR OtherInfo,_In_ DWORD Flags)
BOOL None setupapi.SetupLogFile(_In_ HSPFILELOG FileLogHandle,_In_ PCTSTR LogSectionName,_In_ PCTSTR SourceFileName,_In_ PCTSTR TargetFileName,_In_ DWORD Checksum,_In_ PCTSTR DiskTagfile,_In_ PCTSTR DiskDescription,_In_ PCTSTR OtherInfo,_In_ DWORD Flags)
BOOL None setupapi.SetupLogFileW(_In_ HSPFILELOG FileLogHandle,_In_ PCTSTR LogSectionName,_In_ PCTSTR SourceFileName,_In_ PCTSTR TargetFileName,_In_ DWORD Checksum,_In_ PCTSTR DiskTagfile,_In_ PCTSTR DiskDescription,_In_ PCTSTR OtherInfo,_In_ DWORD Flags)
BOOL None setupapi.SetupQueryDrivesInDiskSpaceListA(_In_ HDSKSPC DiskSpace,_Inout_ PSTR ReturnBuffer,_In_ DWORD ReturnBufferSize,_Inout_ PDWORD RequiredSize)
BOOL None setupapi.SetupQueryDrivesInDiskSpaceList(_In_ HDSKSPC DiskSpace,_Inout_ PSTR ReturnBuffer,_In_ DWORD ReturnBufferSize,_Inout_ PDWORD RequiredSize)
BOOL None setupapi.SetupQueryDrivesInDiskSpaceListW(_In_ HDSKSPC DiskSpace,_Inout_ PSTR ReturnBuffer,_In_ DWORD ReturnBufferSize,_Inout_ PDWORD RequiredSize)
BOOL None setupapi.SetupQueryInfFileInformationA(_In_ PSP_INF_INFORMATION InfInformation,_In_ UINT InfIndex,_Inout_ PTSTR ReturnBuffer,_In_ DWORD ReturnBufferSize,_Inout_ PDWORD RequiredSize)
BOOL None setupapi.SetupQueryInfFileInformation(_In_ PSP_INF_INFORMATION InfInformation,_In_ UINT InfIndex,_Inout_ PTSTR ReturnBuffer,_In_ DWORD ReturnBufferSize,_Inout_ PDWORD RequiredSize)
BOOL None setupapi.SetupQueryInfFileInformationW(_In_ PSP_INF_INFORMATION InfInformation,_In_ UINT InfIndex,_Inout_ PTSTR ReturnBuffer,_In_ DWORD ReturnBufferSize,_Inout_ PDWORD RequiredSize)
BOOL None setupapi.SetupQuerySourceListA(_In_ DWORD Flags,_Inout_ PCTSTR **List,_Inout_ PUINT Count)
BOOL None setupapi.SetupQuerySourceList(_In_ DWORD Flags,_Inout_ PCTSTR **List,_Inout_ PUINT Count)
BOOL None setupapi.SetupQuerySourceListW(_In_ DWORD Flags,_Inout_ PCTSTR **List,_Inout_ PUINT Count)
BOOL None setupapi.SetupQuerySpaceRequiredOnDriveA(_In_ HDSKSPC DiskSpace,_In_ PCTSTR DriveSpec,_Out_ LONGLONG *SpaceRequired,_In_ PVOID Reserved1,_In_ UINT Reserved2)
BOOL None setupapi.SetupQuerySpaceRequiredOnDrive(_In_ HDSKSPC DiskSpace,_In_ PCTSTR DriveSpec,_Out_ LONGLONG *SpaceRequired,_In_ PVOID Reserved1,_In_ UINT Reserved2)
BOOL None setupapi.SetupQuerySpaceRequiredOnDriveW(_In_ HDSKSPC DiskSpace,_In_ PCTSTR DriveSpec,_Out_ LONGLONG *SpaceRequired,_In_ PVOID Reserved1,_In_ UINT Reserved2)
BOOL None setupapi.SetupQueueCopyA(_In_ HSPFILEQ QueueHandle,_In_ PCTSTR SourceRootPath,_In_ PCTSTR SourcePath,_In_ PCTSTR SourceFileName,_In_ PCTSTR SourceDescription,_In_ PCTSTR SourceTagFile,_In_ PCTSTR TargetDirectory,_In_ PCTSTR TargetFileName,_In_ DWORD CopyStyle)
BOOL None setupapi.SetupQueueCopy(_In_ HSPFILEQ QueueHandle,_In_ PCTSTR SourceRootPath,_In_ PCTSTR SourcePath,_In_ PCTSTR SourceFileName,_In_ PCTSTR SourceDescription,_In_ PCTSTR SourceTagFile,_In_ PCTSTR TargetDirectory,_In_ PCTSTR TargetFileName,_In_ DWORD CopyStyle)
BOOL None setupapi.SetupQueueCopySectionA(_In_ HSPFILEQ QueueHandle,_In_ PCTSTR SourceRootPath,_In_ HINF InfHandle,_In_ HINF ListInfHandle,_In_ PCTSTR Section,_In_ DWORD CopyStyle)
BOOL None setupapi.SetupQueueCopySection(_In_ HSPFILEQ QueueHandle,_In_ PCTSTR SourceRootPath,_In_ HINF InfHandle,_In_ HINF ListInfHandle,_In_ PCTSTR Section,_In_ DWORD CopyStyle)
BOOL None setupapi.SetupQueueCopySectionW(_In_ HSPFILEQ QueueHandle,_In_ PCTSTR SourceRootPath,_In_ HINF InfHandle,_In_ HINF ListInfHandle,_In_ PCTSTR Section,_In_ DWORD CopyStyle)
BOOL None setupapi.SetupQueueCopyW(_In_ HSPFILEQ QueueHandle,_In_ PCTSTR SourceRootPath,_In_ PCTSTR SourcePath,_In_ PCTSTR SourceFileName,_In_ PCTSTR SourceDescription,_In_ PCTSTR SourceTagFile,_In_ PCTSTR TargetDirectory,_In_ PCTSTR TargetFileName,_In_ DWORD CopyStyle)
BOOL None setupapi.SetupQueueDefaultCopyA(_In_ HSPFILE QueueHandle,_In_ HINF InfHandle,_In_ PCTSTR SourceRootPath,_In_ PCTSTR SourceFileName,_In_ PCTSTR TargetFileName,_In_ DWORD CopyStyle)
BOOL None setupapi.SetupQueueDefaultCopy(_In_ HSPFILE QueueHandle,_In_ HINF InfHandle,_In_ PCTSTR SourceRootPath,_In_ PCTSTR SourceFileName,_In_ PCTSTR TargetFileName,_In_ DWORD CopyStyle)
BOOL None setupapi.SetupQueueDefaultCopyW(_In_ HSPFILE QueueHandle,_In_ HINF InfHandle,_In_ PCTSTR SourceRootPath,_In_ PCTSTR SourceFileName,_In_ PCTSTR TargetFileName,_In_ DWORD CopyStyle)
BOOL None setupapi.SetupQueueDeleteA(_In_ HSPFILEQ QueueHandle,_In_ PCTSTR PathPart1,_In_ PCTSTR PathPart2)
BOOL None setupapi.SetupQueueDelete(_In_ HSPFILEQ QueueHandle,_In_ PCTSTR PathPart1,_In_ PCTSTR PathPart2)
BOOL None setupapi.SetupQueueDeleteSectionA(_In_ HSPFILEQ QueueHandle,_In_ HINF InfHandle,_In_ HINF ListInfHandle,_In_ PCTSTR Section)
BOOL None setupapi.SetupQueueDeleteSection(_In_ HSPFILEQ QueueHandle,_In_ HINF InfHandle,_In_ HINF ListInfHandle,_In_ PCTSTR Section)
BOOL None setupapi.SetupQueueDeleteSectionW(_In_ HSPFILEQ QueueHandle,_In_ HINF InfHandle,_In_ HINF ListInfHandle,_In_ PCTSTR Section)
BOOL None setupapi.SetupQueueDeleteW(_In_ HSPFILEQ QueueHandle,_In_ PCTSTR PathPart1,_In_ PCTSTR PathPart2)
BOOL None setupapi.SetupQueueRenameA(_In_ HSPFILEQ QueueHandle,_In_ PCTSTR SourcePath,_In_ PCTSTR SourceFileName,_In_ PCTSTR TargetPath,_In_ PCTSTR TargetFileName)
BOOL None setupapi.SetupQueueRename(_In_ HSPFILEQ QueueHandle,_In_ PCTSTR SourcePath,_In_ PCTSTR SourceFileName,_In_ PCTSTR TargetPath,_In_ PCTSTR TargetFileName)
BOOL None setupapi.SetupQueueRenameSectionA(_In_ HSPFILEQ QueueHandle,_In_ HINF InfHandle,_In_ HINF ListInfHandle,_In_ PCTSTR Section)
BOOL None setupapi.SetupQueueRenameSection(_In_ HSPFILEQ QueueHandle,_In_ HINF InfHandle,_In_ HINF ListInfHandle,_In_ PCTSTR Section)
BOOL None setupapi.SetupQueueRenameSectionW(_In_ HSPFILEQ QueueHandle,_In_ HINF InfHandle,_In_ HINF ListInfHandle,_In_ PCTSTR Section)
BOOL None setupapi.SetupQueueRenameW(_In_ HSPFILEQ QueueHandle,_In_ PCTSTR SourcePath,_In_ PCTSTR SourceFileName,_In_ PCTSTR TargetPath,_In_ PCTSTR TargetFileName)
BOOL None setupapi.SetupRemoveFileLogEntryA(_In_ HSPFILELOG FileLogHandle,_In_ PCTSTR LogSectionName,_In_ PCTSTR TargetFileName)
BOOL None setupapi.SetupRemoveFileLogEntry(_In_ HSPFILELOG FileLogHandle,_In_ PCTSTR LogSectionName,_In_ PCTSTR TargetFileName)
BOOL None setupapi.SetupRemoveFileLogEntryW(_In_ HSPFILELOG FileLogHandle,_In_ PCTSTR LogSectionName,_In_ PCTSTR TargetFileName)
BOOL None setupapi.SetupRemoveFromDiskSpaceListA(_In_ HDSKSPC DiskSpace,_In_ PCTSTR TargetFilespec,_In_ UINT Operation,_In_ PVOID Reserved1,_In_ UINT Reserved2)
BOOL None setupapi.SetupRemoveFromDiskSpaceList(_In_ HDSKSPC DiskSpace,_In_ PCTSTR TargetFilespec,_In_ UINT Operation,_In_ PVOID Reserved1,_In_ UINT Reserved2)
BOOL None setupapi.SetupRemoveFromDiskSpaceListW(_In_ HDSKSPC DiskSpace,_In_ PCTSTR TargetFilespec,_In_ UINT Operation,_In_ PVOID Reserved1,_In_ UINT Reserved2)
BOOL None setupapi.SetupRemoveFromSourceListA(_In_ DWORD Flags,_In_ PCTSTR Source)
BOOL None setupapi.SetupRemoveFromSourceList(_In_ DWORD Flags,_In_ PCTSTR Source)
BOOL None setupapi.SetupRemoveFromSourceListW(_In_ DWORD Flags,_In_ PCTSTR Source)
BOOL None setupapi.SetupRemoveInstallSectionFromDiskSpaceListA(_In_ HDSKSPC DiskSpace,_In_ HINF InfHandle,_In_ HINF LayoutInfHandle,_In_ PCTSTR SectionName,_In_ PVOID Reserved1,_In_ UINT Reserved2)
BOOL None setupapi.SetupRemoveInstallSectionFromDiskSpaceList(_In_ HDSKSPC DiskSpace,_In_ HINF InfHandle,_In_ HINF LayoutInfHandle,_In_ PCTSTR SectionName,_In_ PVOID Reserved1,_In_ UINT Reserved2)
BOOL None setupapi.SetupRemoveInstallSectionFromDiskSpaceListW(_In_ HDSKSPC DiskSpace,_In_ HINF InfHandle,_In_ HINF LayoutInfHandle,_In_ PCTSTR SectionName,_In_ PVOID Reserved1,_In_ UINT Reserved2)
BOOL None setupapi.SetupRemoveSectionFromDiskSpaceListA(_In_ HDSKSPC DiskSpace,_In_ HINF InfHandle,_In_ HINF ListInfHandle,_In_ PCTSTR SectionName,_In_ UINT Operation,_In_ PVOID Reserved1,_In_ UINT Reserved2)
BOOL None setupapi.SetupRemoveSectionFromDiskSpaceList(_In_ HDSKSPC DiskSpace,_In_ HINF InfHandle,_In_ HINF ListInfHandle,_In_ PCTSTR SectionName,_In_ UINT Operation,_In_ PVOID Reserved1,_In_ UINT Reserved2)
BOOL None setupapi.SetupRemoveSectionFromDiskSpaceListW(_In_ HDSKSPC DiskSpace,_In_ HINF InfHandle,_In_ HINF ListInfHandle,_In_ PCTSTR SectionName,_In_ UINT Operation,_In_ PVOID Reserved1,_In_ UINT Reserved2)
BOOL None setupapi.SetupScanFileQueueA(_In_ HSPFILEQ FileQueue,_In_ DWORD Flags,_In_ HWND Window,_In_ PSP_FILE_CALLBACK CallbackRoutine,_In_ PVOID CallbackContext,_Out_ PDWORD Result)
BOOL None setupapi.SetupScanFileQueue(_In_ HSPFILEQ FileQueue,_In_ DWORD Flags,_In_ HWND Window,_In_ PSP_FILE_CALLBACK CallbackRoutine,_In_ PVOID CallbackContext,_Out_ PDWORD Result)
BOOL None setupapi.SetupScanFileQueueW(_In_ HSPFILEQ FileQueue,_In_ DWORD Flags,_In_ HWND Window,_In_ PSP_FILE_CALLBACK CallbackRoutine,_In_ PVOID CallbackContext,_Out_ PDWORD Result)
BOOL None setupapi.SetupSetDirectoryIdA(_In_ HINF InfHandle,_In_ DWORD Id,_In_ PCTSTR Directory)
BOOL None setupapi.SetupSetDirectoryId(_In_ HINF InfHandle,_In_ DWORD Id,_In_ PCTSTR Directory)
BOOL None setupapi.SetupSetDirectoryIdW(_In_ HINF InfHandle,_In_ DWORD Id,_In_ PCTSTR Directory)
BOOL None setupapi.SetupSetFileQueueAlternatePlatformA(_In_ HSPFILEQ QueueHandle,_In_ PSP_ALTPLATFORM_INFO AlternatePlatformInfo,_In_ PCWSTR AlternateDefaultCatalogFile)
BOOL None setupapi.SetupSetFileQueueAlternatePlatform(_In_ HSPFILEQ QueueHandle,_In_ PSP_ALTPLATFORM_INFO AlternatePlatformInfo,_In_ PCWSTR AlternateDefaultCatalogFile)
BOOL None setupapi.SetupSetFileQueueAlternatePlatformW(_In_ HSPFILEQ QueueHandle,_In_ PSP_ALTPLATFORM_INFO AlternatePlatformInfo,_In_ PCWSTR AlternateDefaultCatalogFile)
BOOL None setupapi.SetupSetFileQueueFlags(_In_ HSPFILEQ FileQueue,_In_ DWORD FlagMask,_In_ DWORD Flags)
BOOL None setupapi.SetupSetPlatformPathOverrideA(_In_ PCTSTR Override)
BOOL None setupapi.SetupSetPlatformPathOverride(_In_ PCTSTR Override)
BOOL None setupapi.SetupSetPlatformPathOverrideW(_In_ PCTSTR Override)
BOOL None setupapi.SetupSetSourceListA(_In_ DWORD Flags,_In_ PCTSTR *SourceList,_In_ UINT SourceCount)
BOOL None setupapi.SetupSetSourceList(_In_ DWORD Flags,_In_ PCTSTR *SourceList,_In_ UINT SourceCount)
BOOL None setupapi.SetupSetSourceListW(_In_ DWORD Flags,_In_ PCTSTR *SourceList,_In_ UINT SourceCount)
BOOL None setupapi.SetupTerminateFileLog(_In_ HSPFILELOG FileLogHandle)
BOOL None setupapi.SetupVerifyInfFileA(_In_ PCWSTR InfName,_In_ PSP_ALTPLATFORM_FORM AltPlatformInfo,_Out_ PSP_INF_SIGNER_INFO_W InfFileName)
BOOL None setupapi.SetupVerifyInfFile(_In_ PCWSTR InfName,_In_ PSP_ALTPLATFORM_FORM AltPlatformInfo,_Out_ PSP_INF_SIGNER_INFO_W InfFileName)
BOOL None setupapi.SetupVerifyInfFileW(_In_ PCWSTR InfName,_In_ PSP_ALTPLATFORM_FORM AltPlatformInfo,_Out_ PSP_INF_SIGNER_INFO_W InfFileName)
BOOL None sfc.SfcGetNextProtectedFile(_In_ HANDLE RpcHandle,_Inout_ PPROTECTED_FILE_DATA ProtFileData)
BOOL None sfc.SfcIsFileProtected(_In_ HANDLE RpcHandle,_In_ LPCWSTR ProtFileName)
BOOL None shell32.DAD_DragEnterEx2(_In_ HWND hwndTarget,const POINT ptStart,_In_opt_ IDataObject *pdtObject)
BOOL None shell32.DAD_DragEnterEx(HWND hwndTarget None,const POINT ptStart)
BOOL None shell32.DAD_DragLeave(void None None)
BOOL None shell32.DAD_DragMove(POINT pt None)
BOOL None shell32.DAD_SetDragImage(HIMAGELIST him None,POINT *pptOffset None)
BOOL None shell32.DAD_ShowDragImage(BOOL fShow None)
BOOL None shell32.DragQueryPoint(_In_ HDROP hDrop,_Out_ POINT *lppt)
BOOL None shell32.FileIconInit(_In_ BOOL fRestoreCache)
BOOL None shell32.GetFileNameFromBrowse(_In_opt_ HWND hwnd,_Inout_ PWSTR pszFilePath,UINT cchFilePath None,_In_opt_ PCWSTR pszWorkingDir,_In_ PCWSTR pszDefExt,_In_opt_ PCWSTR pszFilters,_In_opt_ PCWSTR szTitle)
BOOL None shell32.GUIDFromStringA(_In_ LPCTSTR psz,_Out_ LPGUID pguid)
BOOL None shell32.GUIDFromString(_In_ LPCTSTR psz,_Out_ LPGUID pguid)
BOOL None shell32.GUIDFromStringW(_In_ LPCTSTR psz,_Out_ LPGUID pguid)
BOOL None shell32.ILIsEqual(_In_ PCIDLIST_ABSOLUTE pidl1,_In_ PCIDLIST_ABSOLUTE pidl2)
BOOL None shell32.ILIsParent(_In_ PCIDLIST_ABSOLUTE pidl1,_In_ PCIDLIST_ABSOLUTE pidl2,_In_ BOOL fImmediate)
BOOL None shell32.ILRemoveLastID(_Inout_opt_ PUIDLIST_RELATIVE pidl)
BOOL None shell32.InitNetworkAddressControl(void None None)
BOOL None shell32.IsUserAnAdmin(void None None)
BOOL None shell32.LinkWindow_RegisterClass(void None None)
BOOL None shell32.LinkWindow_UnregisterClass(void None None)
bool None shell32.ParseField(_In_ LPCTSTR *szData,_In_ int n,_In_ LPTSTR *szBuf,_In_ int iBufLen)
BOOL None shell32.PathIsExe(_In_ PCWSTR szfile)
BOOL None shell32.PathIsSlowA(_In_ LPCTSTR pszFile,DWORD dwFileAttr None)
BOOL None shell32.PathIsSlow(_In_ LPCTSTR pszFile,DWORD dwFileAttr None)
BOOL None shell32.PathIsSlowW(_In_ LPCTSTR pszFile,DWORD dwFileAttr None)
BOOL None shell32.PathMakeUniqueName(_Out_ PWSTR pszUniqueName,UINT cchMax None,_In_ PCWSTR pszTemplate,_In_opt_ PCWSTR pszLongPlate,_In_opt_ PCWSTR pszDir)
BOOL None shell32.PathYetAnotherMakeUniqueName(_Out_ PWSTR pszUniqueName,_In_ PCWSTR pszPath,_In_opt_ PCWSTR pszShort,_In_opt_ PCWSTR pszFileSpec)
BOOL None shell32.ReadCabinetState(_Out_ CABINETSTATE *pcs,_In_ int cLength)
BOOL None shell32.SHChangeNotification_Unlock(_In_ HANDLE hLock)
BOOL None shell32.SHChangeNotifyDeregister(ULONG ulID None)
BOOL None shell32.SHCreateProcessAsUserW(_Inout_ PSHCREATEPROCESSINFOW pscpi)
BOOL None shell32.ShellExecuteExA(_Inout_ SHELLEXECUTEINFO *pExecInfo)
BOOL None shell32.ShellExecuteEx(_Inout_ SHELLEXECUTEINFO *pExecInfo)
BOOL None shell32.ShellExecuteExW(_Inout_ SHELLEXECUTEINFO *pExecInfo)
BOOL None shell32.Shell_GetImageLists(_In_ HIMAGELIST *phiml,_In_ HIMAGELIST *phimlSmall)
BOOL None shell32.Shell_NotifyIconA(_In_ DWORD dwMessage,_In_ PNOTIFYICONDATA lpdata)
BOOL None shell32.Shell_NotifyIcon(_In_ DWORD dwMessage,_In_ PNOTIFYICONDATA lpdata)
BOOL None shell32.Shell_NotifyIconW(_In_ DWORD dwMessage,_In_ PNOTIFYICONDATA lpdata)
BOOL None shell32.SHFindFiles(_In_opt_ PCIDLIST_ABSOLUTE pidlFolder,_In_opt_ PCIDLIST_ABSOLUTE pidlSaveFile)
BOOL None shell32.SHGetDiskFreeSpaceExA(_In_ LPCTSTR pszDirectoryName,_Out_opt_ ULARGE_INTEGER *pulFreeBytesAvailableToCaller,_Out_opt_ ULARGE_INTEGER *pulTotalNumberOfBytes,_Out_opt_ ULARGE_INTEGER *pulTotalNumberOfFreeBytes)
BOOL None shell32.SHGetDiskFreeSpaceEx(_In_ LPCTSTR pszDirectoryName,_Out_opt_ ULARGE_INTEGER *pulFreeBytesAvailableToCaller,_Out_opt_ ULARGE_INTEGER *pulTotalNumberOfBytes,_Out_opt_ ULARGE_INTEGER *pulTotalNumberOfFreeBytes)
BOOL None shell32.SHGetDiskFreeSpaceExW(_In_ LPCTSTR pszDirectoryName,_Out_opt_ ULARGE_INTEGER *pulFreeBytesAvailableToCaller,_Out_opt_ ULARGE_INTEGER *pulTotalNumberOfBytes,_Out_opt_ ULARGE_INTEGER *pulTotalNumberOfFreeBytes)
BOOL None shell32.SHGetDiskFreeSpace(LPCTSTR pszVolume None,ULARGE_INTEGER *pqwFreeCaller None,ULARGE_INTEGER *pqwTot None,ULARGE_INTEGER *pqwFree None)
BOOL None shell32.SHGetNewLinkInfoA(_In_ LPCTSTR pszLinkTo,_In_ LPCTSTR pszDir,_Out_ LPTSTR pszName,_Out_ BOOL *pfMustCopy,_In_ UINT uFlags)
BOOL None shell32.SHGetNewLinkInfo(_In_ LPCTSTR pszLinkTo,_In_ LPCTSTR pszDir,_Out_ LPTSTR pszName,_Out_ BOOL *pfMustCopy,_In_ UINT uFlags)
BOOL None shell32.SHGetNewLinkInfoW(_In_ LPCTSTR pszLinkTo,_In_ LPCTSTR pszDir,_Out_ LPTSTR pszName,_Out_ BOOL *pfMustCopy,_In_ UINT uFlags)
BOOL None shell32.SHGetPathFromIDListA(_In_ PCIDLIST_ABSOLUTE pidl,_Out_ LPTSTR pszPath)
BOOL None shell32.SHGetPathFromIDListEx(_In_ PCIDLIST_ABSOLUTE pidl,_Out_ PWSTR pszPath,DWORD cchPath None,GPFIDL_FLAGS uOpts None)
BOOL None shell32.SHGetPathFromIDList(_In_ PCIDLIST_ABSOLUTE pidl,_Out_ LPTSTR pszPath)
BOOL None shell32.SHGetPathFromIDListW(_In_ PCIDLIST_ABSOLUTE pidl,_Out_ LPTSTR pszPath)
BOOL None shell32.SHGetSpecialFolderPathA(HWND hwndOwner None,_Out_ LPTSTR lpszPath,_In_ int csidl,_In_ BOOL fCreate)
BOOL None shell32.SHGetSpecialFolderPath(HWND hwndOwner None,_Out_ LPTSTR lpszPath,_In_ int csidl,_In_ BOOL fCreate)
BOOL None shell32.SHGetSpecialFolderPathW(HWND hwndOwner None,_Out_ LPTSTR lpszPath,_In_ int csidl,_In_ BOOL fCreate)
BOOL None shell32.SHInvokePrinterCommandA(_In_opt_ HWND hwnd,UINT uAction None,_In_ LPCTSTR lpBuf1,_In_opt_ LPCTSTR lpBuf2,BOOL fModal None)
BOOL None shell32.SHInvokePrinterCommand(_In_opt_ HWND hwnd,UINT uAction None,_In_ LPCTSTR lpBuf1,_In_opt_ LPCTSTR lpBuf2,BOOL fModal None)
BOOL None shell32.SHInvokePrinterCommandW(_In_opt_ HWND hwnd,UINT uAction None,_In_ LPCTSTR lpBuf1,_In_opt_ LPCTSTR lpBuf2,BOOL fModal None)
BOOL None shell32.SHObjectProperties(_In_ HWND hwnd,_In_ DWORD shopObjectType,_In_ PCWSTR pszObjectName,_In_ PCWSTR pszPropertyPage)
BOOL None shell32.SHRegGetBoolValueFromHKCUHKLM(PCWSTR pszKey None,_In_ PCWSTR pszValue,_In_ BOOL fDefault)
BOOL None shell32.SHRunControlPanel(_In_ PCWSTR lpcszCmdLine,_In_opt_ HWND hwndMsgParent)
BOOL None shell32.SHTestTokenMembership(_In_opt_ HANDLE hToken,ULONG ulRID None)
BOOL None shell32.SHValidateUNC(_In_opt_ HWND hwndOwner,_Inout_ PWSTR pszFile,UINT fConnect None)
BOOL None shell32.SignalFileOpen(_In_ PCIDLIST_ABSOLUTE pidl)
BOOL None shell32.StrRetToStrN(_Out_ LPTSTR pszOut,_In_ UINT cchOut,_Inout_ LPSTRRET pStrRet,_In_ LPCITEMIDLIST pidl)
BOOL None shell32.UpdateAllDesktopSubscriptions(IADesktopP2 *padp2 None)
BOOL None shell32.Win32DeleteFile(_In_ PCWSTR pszFileName)
BOOL None shell32.WriteCabinetState(_In_ CABINETSTATE *pcs)
BOOL None shlwapi.AssocIsDangerous(_In_ PCWSTR pszAssoc)
BOOL None shlwapi.ChrCmpIA(_In_ TCHAR w1,_In_ TCHAR w2)
BOOL None shlwapi.ChrCmpI(_In_ TCHAR w1,_In_ TCHAR w2)
BOOL None shlwapi.ChrCmpIW(_In_ TCHAR w1,_In_ TCHAR w2)
BOOL None shlwapi.IntlStrEqNA(_In_ LPCTSTR pszStr1,_In_ LPCTSTR pszStr2,_In_ int nChar)
BOOL None shlwapi.IntlStrEqNIA(_In_ LPCTSTR pszStr1,_In_ LPCTSTR pszStr2,_In_ int nChar)
BOOL None shlwapi.IntlStrEqNI(_In_ LPCTSTR pszStr1,_In_ LPCTSTR pszStr2,_In_ int nChar)
BOOL None shlwapi.IntlStrEqN(_In_ LPCTSTR pszStr1,_In_ LPCTSTR pszStr2,_In_ int nChar)
BOOL None shlwapi.IntlStrEqNIW(_In_ LPCTSTR pszStr1,_In_ LPCTSTR pszStr2,_In_ int nChar)
BOOL None shlwapi.IntlStrEqNW(_In_ LPCTSTR pszStr1,_In_ LPCTSTR pszStr2,_In_ int nChar)
BOOL None shlwapi.IntlStrEqWorkerA(_In_ BOOL fCaseSens,_In_ LPCTSTR pszStr1,_In_ LPCTSTR pszStr2,_In_ int nChar)
BOOL None shlwapi.IntlStrEqWorker(_In_ BOOL fCaseSens,_In_ LPCTSTR pszStr1,_In_ LPCTSTR pszStr2,_In_ int nChar)
BOOL None shlwapi.IntlStrEqWorkerW(_In_ BOOL fCaseSens,_In_ LPCTSTR pszStr1,_In_ LPCTSTR pszStr2,_In_ int nChar)
BOOL None shlwapi.IsCharAlphaNumericWrapW(_In_ WCHAR ch)
BOOL None shlwapi.IsCharSpaceA(_In_ TCHAR wch)
BOOL None shlwapi.IsCharSpace(_In_ TCHAR wch)
BOOL None shlwapi.IsCharSpaceW(_In_ TCHAR wch)
BOOL None shlwapi.IsInternetESCEnabled(void None None)
BOOL None shlwapi.IsOS(_In_ DWORD dwOS)
BOOL None shlwapi.MLFreeLibrary(_In_ HMODULE hModule)
BOOL None shlwapi.PathAddExtensionA(_Inout_ LPTSTR pszPath,_In_opt_ LPCTSTR pszExtension)
BOOL None shlwapi.PathAddExtension(_Inout_ LPTSTR pszPath,_In_opt_ LPCTSTR pszExtension)
BOOL None shlwapi.PathAddExtensionW(_Inout_ LPTSTR pszPath,_In_opt_ LPCTSTR pszExtension)
BOOL None shlwapi.PathAppendA(_Inout_ LPTSTR pszPath,_In_ LPCTSTR pszMore)
BOOL None shlwapi.PathAppend(_Inout_ LPTSTR pszPath,_In_ LPCTSTR pszMore)
BOOL None shlwapi.PathAppendW(_Inout_ LPTSTR pszPath,_In_ LPCTSTR pszMore)
BOOL None shlwapi.PathCanonicalizeA(_Out_ LPTSTR lpszDst,_In_ LPCTSTR lpszSrc)
BOOL None shlwapi.PathCanonicalize(_Out_ LPTSTR lpszDst,_In_ LPCTSTR lpszSrc)
BOOL None shlwapi.PathCanonicalizeW(_Out_ LPTSTR lpszDst,_In_ LPCTSTR lpszSrc)
BOOL None shlwapi.PathCompactPathA(_In_ HDC hDC,_Inout_ LPTSTR lpszPath,_In_ UINT dx)
BOOL None shlwapi.PathCompactPathExA(_Out_ LPTSTR pszOut,_In_ LPCTSTR pszSrc,_In_ UINT cchMax,_Reserved_ DWORD dwFlags)
BOOL None shlwapi.PathCompactPathEx(_Out_ LPTSTR pszOut,_In_ LPCTSTR pszSrc,_In_ UINT cchMax,_Reserved_ DWORD dwFlags)
BOOL None shlwapi.PathCompactPathExW(_Out_ LPTSTR pszOut,_In_ LPCTSTR pszSrc,_In_ UINT cchMax,_Reserved_ DWORD dwFlags)
BOOL None shlwapi.PathCompactPath(_In_ HDC hDC,_Inout_ LPTSTR lpszPath,_In_ UINT dx)
BOOL None shlwapi.PathCompactPathW(_In_ HDC hDC,_Inout_ LPTSTR lpszPath,_In_ UINT dx)
BOOL None shlwapi.PathFileExistsA(_In_ LPCTSTR pszPath)
BOOL None shlwapi.PathFileExists(_In_ LPCTSTR pszPath)
BOOL None shlwapi.PathFileExistsW(_In_ LPCTSTR pszPath)
BOOL None shlwapi.PathFindOnPathA(_Inout_ LPTSTR pszFile,_In_opt_ LPCTSTR *ppszOtherDirs)
BOOL None shlwapi.PathFindOnPath(_Inout_ LPTSTR pszFile,_In_opt_ LPCTSTR *ppszOtherDirs)
BOOL None shlwapi.PathFindOnPathW(_Inout_ LPTSTR pszFile,_In_opt_ LPCTSTR *ppszOtherDirs)
BOOL None shlwapi.PathIsContentTypeA(_In_ LPCTSTR pszPath,_In_ LPCTSTR pszContentType)
BOOL None shlwapi.PathIsContentType(_In_ LPCTSTR pszPath,_In_ LPCTSTR pszContentType)
BOOL None shlwapi.PathIsContentTypeW(_In_ LPCTSTR pszPath,_In_ LPCTSTR pszContentType)
BOOL None shlwapi.PathIsDirectoryA(_In_ LPCTSTR pszPath)
BOOL None shlwapi.PathIsDirectoryEmptyA(_In_ LPCTSTR pszPath)
BOOL None shlwapi.PathIsDirectoryEmpty(_In_ LPCTSTR pszPath)
BOOL None shlwapi.PathIsDirectoryEmptyW(_In_ LPCTSTR pszPath)
BOOL None shlwapi.PathIsDirectory(_In_ LPCTSTR pszPath)
BOOL None shlwapi.PathIsDirectoryW(_In_ LPCTSTR pszPath)
BOOL None shlwapi.PathIsFileSpecA(_In_ LPCTSTR lpszPath)
BOOL None shlwapi.PathIsFileSpec(_In_ LPCTSTR lpszPath)
BOOL None shlwapi.PathIsFileSpecW(_In_ LPCTSTR lpszPath)
BOOL None shlwapi.PathIsHTMLFileA(_In_ LPCTSTR pszFile)
BOOL None shlwapi.PathIsHTMLFile(_In_ LPCTSTR pszFile)
BOOL None shlwapi.PathIsHTMLFileW(_In_ LPCTSTR pszFile)
BOOL None shlwapi.PathIsLFNFileSpecA(_In_ LPCTSTR pszName)
BOOL None shlwapi.PathIsLFNFileSpec(_In_ LPCTSTR pszName)
BOOL None shlwapi.PathIsLFNFileSpecW(_In_ LPCTSTR pszName)
BOOL None shlwapi.PathIsNetworkPathA(_In_ LPCTSTR pszPath)
BOOL None shlwapi.PathIsNetworkPath(_In_ LPCTSTR pszPath)
BOOL None shlwapi.PathIsNetworkPathW(_In_ LPCTSTR pszPath)
BOOL None shlwapi.PathIsRelativeA(_In_ LPCTSTR lpszPath)
BOOL None shlwapi.PathIsRelative(_In_ LPCTSTR lpszPath)
BOOL None shlwapi.PathIsRelativeW(_In_ LPCTSTR lpszPath)
BOOL None shlwapi.PathIsRootA(_In_ LPCTSTR pPath)
BOOL None shlwapi.PathIsRoot(_In_ LPCTSTR pPath)
BOOL None shlwapi.PathIsRootW(_In_ LPCTSTR pPath)
BOOL None shlwapi.PathIsSameRootA(_In_ LPCTSTR pszPath1,_In_ LPCTSTR pszPath2)
BOOL None shlwapi.PathIsSameRoot(_In_ LPCTSTR pszPath1,_In_ LPCTSTR pszPath2)
BOOL None shlwapi.PathIsSameRootW(_In_ LPCTSTR pszPath1,_In_ LPCTSTR pszPath2)
BOOL None shlwapi.PathIsSystemFolderA(_In_opt_ LPCTSTR pszPath,_In_ DWORD dwAttrb)
BOOL None shlwapi.PathIsSystemFolder(_In_opt_ LPCTSTR pszPath,_In_ DWORD dwAttrb)
BOOL None shlwapi.PathIsSystemFolderW(_In_opt_ LPCTSTR pszPath,_In_ DWORD dwAttrb)
BOOL None shlwapi.PathIsUNCA(_In_ LPCTSTR pszPath)
BOOL None shlwapi.PathIsUNC(_In_ LPCTSTR pszPath)
BOOL None shlwapi.PathIsUNCServerA(_In_ LPCTSTR pszPath)
BOOL None shlwapi.PathIsUNCServer(_In_ LPCTSTR pszPath)
BOOL None shlwapi.PathIsUNCServerShareA(_In_ LPCTSTR pszPath)
BOOL None shlwapi.PathIsUNCServerShare(_In_ LPCTSTR pszPath)
BOOL None shlwapi.PathIsUNCServerShareW(_In_ LPCTSTR pszPath)
BOOL None shlwapi.PathIsUNCServerW(_In_ LPCTSTR pszPath)
BOOL None shlwapi.PathIsUNCW(_In_ LPCTSTR pszPath)
BOOL None shlwapi.PathIsURLA(_In_ LPCTSTR pszPath)
BOOL None shlwapi.PathIsURL(_In_ LPCTSTR pszPath)
BOOL None shlwapi.PathIsURLW(_In_ LPCTSTR pszPath)
BOOL None shlwapi.PathMakePrettyA(_Inout_ LPTSTR lpPath)
BOOL None shlwapi.PathMakePretty(_Inout_ LPTSTR lpPath)
BOOL None shlwapi.PathMakePrettyW(_Inout_ LPTSTR lpPath)
BOOL None shlwapi.PathMakeSystemFolderA(_In_ LPTSTR pszPath)
BOOL None shlwapi.PathMakeSystemFolder(_In_ LPTSTR pszPath)
BOOL None shlwapi.PathMakeSystemFolderW(_In_ LPTSTR pszPath)
BOOL None shlwapi.PathMatchSpecA(_In_ LPCSTR pszFile,_In_ LPCSTR pszSpec)
BOOL None shlwapi.PathMatchSpec(_In_ LPCSTR pszFile,_In_ LPCSTR pszSpec)
BOOL None shlwapi.PathMatchSpecW(_In_ LPCSTR pszFile,_In_ LPCSTR pszSpec)
BOOL None shlwapi.PathQuoteSpacesA(_Inout_ LPTSTR lpsz)
BOOL None shlwapi.PathQuoteSpaces(_Inout_ LPTSTR lpsz)
BOOL None shlwapi.PathQuoteSpacesW(_Inout_ LPTSTR lpsz)
BOOL None shlwapi.PathRelativePathToA(_Out_ LPTSTR pszPath,_In_ LPCTSTR pszFrom,_In_ DWORD dwAttrFrom,_In_ LPCTSTR pszTo,_In_ DWORD dwAttrTo)
BOOL None shlwapi.PathRelativePathTo(_Out_ LPTSTR pszPath,_In_ LPCTSTR pszFrom,_In_ DWORD dwAttrFrom,_In_ LPCTSTR pszTo,_In_ DWORD dwAttrTo)
BOOL None shlwapi.PathRelativePathToW(_Out_ LPTSTR pszPath,_In_ LPCTSTR pszFrom,_In_ DWORD dwAttrFrom,_In_ LPCTSTR pszTo,_In_ DWORD dwAttrTo)
BOOL None shlwapi.PathRemoveFileSpecA(_Inout_ LPTSTR pszPath)
BOOL None shlwapi.PathRemoveFileSpec(_Inout_ LPTSTR pszPath)
BOOL None shlwapi.PathRemoveFileSpecW(_Inout_ LPTSTR pszPath)
BOOL None shlwapi.PathRenameExtensionA(_Inout_ LPTSTR pszPath,_In_ LPCTSTR pszExt)
BOOL None shlwapi.PathRenameExtension(_Inout_ LPTSTR pszPath,_In_ LPCTSTR pszExt)
BOOL None shlwapi.PathRenameExtensionW(_Inout_ LPTSTR pszPath,_In_ LPCTSTR pszExt)
BOOL None shlwapi.PathSearchAndQualifyA(_In_ LPCTSTR pcszPath,_Out_ LPTSTR pszFullyQualifiedPath,_In_ UINT cchFullyQualifiedPath)
BOOL None shlwapi.PathSearchAndQualify(_In_ LPCTSTR pcszPath,_Out_ LPTSTR pszFullyQualifiedPath,_In_ UINT cchFullyQualifiedPath)
BOOL None shlwapi.PathSearchAndQualifyW(_In_ LPCTSTR pcszPath,_Out_ LPTSTR pszFullyQualifiedPath,_In_ UINT cchFullyQualifiedPath)
BOOL None shlwapi.PathStripToRootA(_Inout_ LPTSTR szRoot)
BOOL None shlwapi.PathStripToRoot(_Inout_ LPTSTR szRoot)
BOOL None shlwapi.PathStripToRootW(_Inout_ LPTSTR szRoot)
BOOL None shlwapi.PathUnExpandEnvStringsA(_In_ LPCTSTR pszPath,_Out_ LPTSTR pszBuf,_In_ UINT cchBuf)
BOOL None shlwapi.PathUnExpandEnvStrings(_In_ LPCTSTR pszPath,_Out_ LPTSTR pszBuf,_In_ UINT cchBuf)
BOOL None shlwapi.PathUnExpandEnvStringsW(_In_ LPCTSTR pszPath,_Out_ LPTSTR pszBuf,_In_ UINT cchBuf)
BOOL None shlwapi.PathUnmakeSystemFolderA(_In_ LPTSTR pszPath)
BOOL None shlwapi.PathUnmakeSystemFolder(_In_ LPTSTR pszPath)
BOOL None shlwapi.PathUnmakeSystemFolderW(_In_ LPTSTR pszPath)
BOOL None shlwapi.SHCreateThread(_In_ LPTHREAD_START_ROUTINE pfnThreadProc,_In_opt_ void *pData,_In_ SHCT_FLAGS dwFlags,_In_opt_ LPTHREAD_START_ROUTINE pfnCallback)
BOOL None shlwapi.SHCreateThreadWithHandle(_In_ LPTHREAD_START_ROUTINE pfnThreadProc,_In_opt_ void *pData,_In_ SHCT_FLAGS flags,_In_opt_ LPTHREAD_START_ROUTINE pfnCallback,_Out_opt_ HANDLE *pHandle)
BOOL None shlwapi.SHFreeShared(_In_ HANDLE hData,_In_ DWORD dwProcessId)
BOOL None shlwapi.SHRegGetBoolUSValueA(_In_ LPCTSTR pszSubKey,_In_opt_ LPCTSTR pszValue,_In_ BOOL fIgnoreHKCU,_In_ BOOL fDefault)
BOOL None shlwapi.SHRegGetBoolUSValue(_In_ LPCTSTR pszSubKey,_In_opt_ LPCTSTR pszValue,_In_ BOOL fIgnoreHKCU,_In_ BOOL fDefault)
BOOL None shlwapi.SHRegGetBoolUSValueW(_In_ LPCTSTR pszSubKey,_In_opt_ LPCTSTR pszValue,_In_ BOOL fIgnoreHKCU,_In_ BOOL fDefault)
BOOL None shlwapi.SHUnlockShared(_In_ void *pvData)
BOOL None shlwapi.StrIsIntlEqualA(BOOL fCaseSens None,_In_ PCTSTR pszString1,_In_ PCTSTR pszString2,int nChar None)
BOOL None shlwapi.StrIsIntlEqual(BOOL fCaseSens None,_In_ PCTSTR pszString1,_In_ PCTSTR pszString2,int nChar None)
BOOL None shlwapi.StrIsIntlEqualW(BOOL fCaseSens None,_In_ PCTSTR pszString1,_In_ PCTSTR pszString2,int nChar None)
BOOL None shlwapi.StrToInt64ExA(_In_ PCTSTR pszString,STIF_FLAGS dwFlags None,_Out_ LONGLONG *pllRet)
BOOL None shlwapi.StrToInt64Ex(_In_ PCTSTR pszString,STIF_FLAGS dwFlags None,_Out_ LONGLONG *pllRet)
BOOL None shlwapi.StrToInt64ExW(_In_ PCTSTR pszString,STIF_FLAGS dwFlags None,_Out_ LONGLONG *pllRet)
BOOL None shlwapi.StrToIntExA(_In_ PCTSTR pszString,STIF_FLAGS dwFlags None,_Out_ int *piRet)
BOOL None shlwapi.StrToIntEx(_In_ PCTSTR pszString,STIF_FLAGS dwFlags None,_Out_ int *piRet)
BOOL None shlwapi.StrToIntExW(_In_ PCTSTR pszString,STIF_FLAGS dwFlags None,_Out_ int *piRet)
BOOL None shlwapi.StrTrimA(_Inout_ PTSTR psz,_In_ PCTSTR pszTrimChars)
BOOL None shlwapi.StrTrim(_Inout_ PTSTR psz,_In_ PCTSTR pszTrimChars)
BOOL None shlwapi.StrTrimW(_Inout_ PTSTR psz,_In_ PCTSTR pszTrimChars)
BOOL None shlwapi.UrlIsA(_In_ PCTSTR pszUrl,URLIS UrlIs None)
BOOL None shlwapi.UrlIsFileUrlA(LPCTSTR pszUrl None)
BOOL None shlwapi.UrlIsFileUrl(LPCTSTR pszUrl None)
BOOL None shlwapi.UrlIsFileUrlW(LPCTSTR pszUrl None)
BOOL None shlwapi.UrlIs(_In_ PCTSTR pszUrl,URLIS UrlIs None)
BOOL None shlwapi.UrlIsNoHistoryA(_In_ PCTSTR pszURL)
BOOL None shlwapi.UrlIsNoHistory(_In_ PCTSTR pszURL)
BOOL None shlwapi.UrlIsNoHistoryW(_In_ PCTSTR pszURL)
BOOL None shlwapi.UrlIsOpaqueA(_In_ PCTSTR pszURL)
BOOL None shlwapi.UrlIsOpaque(_In_ PCTSTR pszURL)
BOOL None shlwapi.UrlIsOpaqueW(_In_ PCTSTR pszURL)
BOOL None shlwapi.UrlIsW(_In_ PCTSTR pszUrl,URLIS UrlIs None)
BOOL None sisbkup.SisCreateBackupStructure(_In_ PWCHAR volumeRoot,_Out_ PVOID *sisBackupStructure,_Out_ PWCHAR *commonStoreRootPathname,_Out_ PULONG countOfCommonStoreFilesToBackUp,_Out_ PWCHAR **commonStoreFilesToBackUp)
BOOL None sisbkup.SisCreateRestoreStructure(_In_ PWCHAR volumeRoot,_Out_ PVOID *sisRestoreStructure,_Out_ PWCHAR *commonStoreRootPathname,_Out_ PULONG countOfCommonStoreFilesToRestore,_Out_ PWCHAR **commonStoreFilesToRestore)
BOOL None sisbkup.SisCSFilesToBackupForLink(_In_ PVOID sisBackupStructure,_In_ PVOID reparseData,_In_ ULONG reparseDataSize,_Out_ PVOID thisFileContext,_Out_ PVOID *matchingFileContext,_Out_ PULONG countOfCommonStoreFilesToBackUp,_Out_ PWCHAR **commonStoreFilesToBackUp)
BOOL None sisbkup.SisFreeBackupStructure(_In_ PVOID sisBackupStructure)
BOOL None sisbkup.SisFreeRestoreStructure(_In_ PVOID sisRestoreStructure)
BOOL None sisbkup.SisRestoredCommonStoreFile(_In_ PVOID sisRestoreStructure,_In_ PWCHAR commonStoreFileName)
BOOL None sisbkup.SisRestoredLink(_In_ PVOID sisRestoreStructure,_In_ PWCHAR restoredFileName,_In_ PVOID reparseData,_In_ ULONG reparseDataSize,_Out_ PULONG countOfCommonStoreFilesToRestore,_Out_ PWCHAR **commonStoreFilesToRestore)
BOOL None spoolss.AbortPrinter(_In_ HANDLE hPrinter)
BOOL None spoolss.AddForm(_In_ HANDLE hPrinter,_In_ DWORD Level,_In_ LPBYTE pForm)
BOOL None spoolss.AddPortA(_In_ LPTSTR pName,_In_ HWND hWnd,_In_ LPTSTR pMonitorName)
BOOL None spoolss.AddPort(_In_ LPTSTR pName,_In_ HWND hWnd,_In_ LPTSTR pMonitorName)
BOOL None spoolss.AddPortW(_In_ LPTSTR pName,_In_ HWND hWnd,_In_ LPTSTR pMonitorName)
BOOL None spoolss.ClosePrinter(_In_ HANDLE hPrinter)
BOOL None spoolss.DeletePrinter(_Inout_ HANDLE hPrinter)
BOOL None spoolss.EndDocPrinter(_In_ HANDLE hPrinter)
BOOL None spoolss.EndPagePrinter(_In_ HANDLE hPrinter)
BOOL None spoolss.FindClosePrinterChangeNotification(_In_ HANDLE hChange)
BOOL None spoolss.FindNextPrinterChangeNotification(_In_ HANDLE hChange,_Out_opt_ PDWORD pdwChange,_In_opt_ LPVOID pPrinterNotifyOptions,_Out_opt_ LPVOID *ppPrinterNotifyInfo)
BOOL None spoolss.FreePrinterNotifyInfo(_In_ PPRINTER_NOTIFY_INFO pPrinterNotifyInfo)
BOOL None spoolss.OpenPrinter2A(_In_ LPCTSTR pPrinterName,_Out_ LPHANDLE phPrinter,_In_ LPPRINTER_DEFAULTS pDefault,_In_ PPRINTER_OPTIONS pOptions)
BOOL None spoolss.OpenPrinter2(_In_ LPCTSTR pPrinterName,_Out_ LPHANDLE phPrinter,_In_ LPPRINTER_DEFAULTS pDefault,_In_ PPRINTER_OPTIONS pOptions)
BOOL None spoolss.OpenPrinter2W(_In_ LPCTSTR pPrinterName,_Out_ LPHANDLE phPrinter,_In_ LPPRINTER_DEFAULTS pDefault,_In_ PPRINTER_OPTIONS pOptions)
BOOL None spoolss.ReadPrinter(_In_ HANDLE hPrinter,_Out_ LPVOID pBuf,_In_ DWORD cbBuf,_Out_ LPDWORD pNoBytesRead)
BOOL None spoolss.ScheduleJob(_In_ HANDLE hPrinter,_In_ DWORD dwJobID)
BOOL None spoolss.StartPagePrinter(_In_ HANDLE hPrinter)
BOOL None spoolss.WritePrinter(_In_ HANDLE hPrinter,_In_ LPVOID pBuf,_In_ DWORD cbBuf,_Out_ LPDWORD pcWritten)
BOOL None url.InetIsOffline(DWORD dwFlags None)
BOOL None user32.DlgDirSelectExA(_In_ HWND hDlg,_Out_ LPTSTR lpString,_In_ int nCount,_In_ int nIDListBox)
BOOL None user32.DlgDirSelectEx(_In_ HWND hDlg,_Out_ LPTSTR lpString,_In_ int nCount,_In_ int nIDListBox)
BOOL None user32.DlgDirSelectExW(_In_ HWND hDlg,_Out_ LPTSTR lpString,_In_ int nCount,_In_ int nIDListBox)
BOOL None user32.DrawFrameControl(_In_ HDC hdc,_In_ LPRECT lprc,_In_ UINT uType,_In_ UINT uState)
BOOL None user32.EnumDisplaySettingsA(_In_ LPCTSTR lpszDeviceName,_In_ DWORD iModeNum,_Out_ DEVMODE *lpDevMode)
BOOL None user32.EnumDisplaySettingsExA(_In_ LPCTSTR lpszDeviceName,_In_ DWORD iModeNum,_Out_ DEVMODE *lpDevMode,_In_ DWORD dwFlags)
BOOL None user32.EnumDisplaySettingsEx(_In_ LPCTSTR lpszDeviceName,_In_ DWORD iModeNum,_Out_ DEVMODE *lpDevMode,_In_ DWORD dwFlags)
BOOL None user32.EnumDisplaySettingsExW(_In_ LPCTSTR lpszDeviceName,_In_ DWORD iModeNum,_Out_ DEVMODE *lpDevMode,_In_ DWORD dwFlags)
BOOL None user32.EnumDisplaySettings(_In_ LPCTSTR lpszDeviceName,_In_ DWORD iModeNum,_Out_ DEVMODE *lpDevMode)
BOOL None user32.EnumDisplaySettingsW(_In_ LPCTSTR lpszDeviceName,_In_ DWORD iModeNum,_Out_ DEVMODE *lpDevMode)
BOOL None user32.GetMonitorInfoA(_In_ HMONITOR hMonitor,_Out_ LPMONITORINFO lpmi)
BOOL None user32.GetMonitorInfo(_In_ HMONITOR hMonitor,_Out_ LPMONITORINFO lpmi)
BOOL None user32.GetMonitorInfoW(_In_ HMONITOR hMonitor,_Out_ LPMONITORINFO lpmi)
BOOL None user32.GetScrollRange(_In_ HWND hWnd,_In_ int nBar,_Out_ LPINT lpMinPos,_Out_ LPINT lpMaxPos)
BOOL None user32.InvalidateRgn(_In_ HWND hWnd,_In_ HRGN hRgn,_In_ BOOL bErase)
BOOL None user32.LogicalToPhysicalPointForPerMonitorDPI(_In_ HWND hwnd,_Inout_ LPPOINT lpPoint)
BOOL None user32.PhysicalToLogicalPointForPerMonitorDPI(_In_ HWND hwnd,_Inout_ LPPOINT lpPoint)
BOOL None user32.PrintWindow(HWND hwnd None,HDC hdcBlt None,UINT nFlags None)
BOOL None user32.ScreenToClient(_In_ HWND hWnd,LPPOINT lpPoint None)
BOOL None user32.SetMenuContextHelpId(HMENU hmenu None,DWORD dwContextHelpId None)
BOOL None user32.SetWindowContextHelpId(HWND hwnd None,DWORD dwContextHelpId None)
BOOL None user32.ShowScrollBar(_In_ HWND hWnd,_In_ int wBar,_In_ BOOL bShow)
BOOL None user32.UpdateWindow(_In_ HWND hWnd)
BOOL None user32.ValidateRgn(_In_ HWND hWnd,_In_ HRGN hRgn)
BOOL None user32.WinHelpA(HWND hWndMain None,LPCTSTR lpszHelp None,UINT uCommand None,ULONG_PTR dwData None)
BOOL None user32.WinHelp(HWND hWndMain None,LPCTSTR lpszHelp None,UINT uCommand None,ULONG_PTR dwData None)
BOOL None user32.WinHelpW(HWND hWndMain None,LPCTSTR lpszHelp None,UINT uCommand None,ULONG_PTR dwData None)
BOOL None userenv.FreeGPOListA(_In_ PGROUP_POLICY_OBJECT pGPOList)
BOOL None userenv.FreeGPOList(_In_ PGROUP_POLICY_OBJECT pGPOList)
BOOL None userenv.FreeGPOListW(_In_ PGROUP_POLICY_OBJECT pGPOList)
BOOL None userenv.GetGPOListA(_In_ HANDLE hToken,_In_ LPCTSTR lpName,_In_ LPCTSTR lpHostName,_In_ LPCTSTR lpComputerName,_In_ DWORD dwFlags,_Out_ PGROUP_POLICY_OBJECT *pGPOList)
BOOL None userenv.GetGPOList(_In_ HANDLE hToken,_In_ LPCTSTR lpName,_In_ LPCTSTR lpHostName,_In_ LPCTSTR lpComputerName,_In_ DWORD dwFlags,_Out_ PGROUP_POLICY_OBJECT *pGPOList)
BOOL None userenv.GetGPOListW(_In_ HANDLE hToken,_In_ LPCTSTR lpName,_In_ LPCTSTR lpHostName,_In_ LPCTSTR lpComputerName,_In_ DWORD dwFlags,_Out_ PGROUP_POLICY_OBJECT *pGPOList)
BOOL None userenv.LeaveCriticalPolicySection(_In_ HANDLE hSection)
BOOL None userenv.RefreshPolicyEx(_In_ BOOL bMachine,_In_ DWORD dwOptions)
BOOL None userenv.RefreshPolicy(_In_ BOOL bMachine)
BOOL None userenv.RegisterGPNotification(_In_ HANDLE hEvent,_In_ BOOL bMachine)
BOOL None userenv.UnregisterGPNotification(_In_ HANDLE hEvent)
BOOL None uxtheme.BeginPanningFeedback(_In_ HWND hwnd)
BOOL None uxtheme.BufferedPaintRenderAnimation(HWND hwnd None,HDC hdcTarget None)
BOOL None uxtheme.EndPanningFeedback(_In_ HWND hwnd,_In_ BOOL fAnimateBack)
BOOL None uxtheme.GetThemeSysBool(_In_ HTHEME hTheme,_In_ int iBoolID)
BOOL None uxtheme.IsAppThemed(void None None)
BOOL None uxtheme.IsCompositionActive(void None None)
BOOL None uxtheme.IsThemeActive(void None None)
BOOL None uxtheme.IsThemeBackgroundPartiallyTransparent(_In_ HTHEME hTheme,_In_ int iPartId,_In_ int iStateId)
BOOL None uxtheme.IsThemeDialogTextureEnabled(_In_ HWND hwnd)
BOOL None uxtheme.IsThemePartDefined(_In_ HTHEME hTheme,_In_ int iPartId,_In_ int iStateId)
BOOL None uxtheme.UpdatePanningFeedback(_In_ HWND hwnd,_In_ LONG lTotalOverpanOffsetX,_In_ LONG lTotalOverpanOffsetY,_In_ BOOL fInInertia)
BOOL None winhttp.WinHttpCheckPlatform(void None None)
BOOL None wininet.CreateMD5SSOHash(_In_ PWSTR pszChallengeInfo,_In_ PWSTR pwszRealm,_In_ PWSTR pwszTarget,_Out_ PBYTE pbHexHash)
BOOL None wininet.DeleteUrlCacheGroup(_In_ GROUPID GroupId,_In_ DWORD dwFlags,_Reserved_ LPVOID lpReserved)
BOOL None wininet.DetectAutoProxyUrl(_Inout_ LPSTR lpszAutoProxyUrl,_In_ DWORD dwAutoProxyUrlLength,_In_ DWORD dwDetectFlags)
BOOL None wininet.FindNextUrlCacheEntryExA(_In_ HANDLE hEnumHandle,_Inout_ LPINTERNET_CACHE_ENTRY_INFO lpNextCacheEntryInfo,_Inout_ LPDWORD lpcbEntryInfo,_Reserved_ LPVOID lpGroupAttributes,_Reserved_ LPDWORD lpcbGroupAttributes,_Reserved_ LPVOID lpReserved)
BOOL None wininet.FindNextUrlCacheEntryEx(_In_ HANDLE hEnumHandle,_Inout_ LPINTERNET_CACHE_ENTRY_INFO lpNextCacheEntryInfo,_Inout_ LPDWORD lpcbEntryInfo,_Reserved_ LPVOID lpGroupAttributes,_Reserved_ LPDWORD lpcbGroupAttributes,_Reserved_ LPVOID lpReserved)
BOOL None wininet.FindNextUrlCacheEntryExW(_In_ HANDLE hEnumHandle,_Inout_ LPINTERNET_CACHE_ENTRY_INFO lpNextCacheEntryInfo,_Inout_ LPDWORD lpcbEntryInfo,_Reserved_ LPVOID lpGroupAttributes,_Reserved_ LPDWORD lpcbGroupAttributes,_Reserved_ LPVOID lpReserved)
BOOL None wininet.FindNextUrlCacheGroup(_In_ HANDLE hFind,_Out_ GROUPID *lpGroupId,_Reserved_ LPVOID lpReserved)
BOOL None wininet.FtpCommandA(_In_ HINTERNET hConnect,_In_ BOOL fExpectResponse,_In_ DWORD dwFlags,_In_ LPCTSTR lpszCommand,_In_ DWORD_PTR dwContext,_Out_ HINTERNET *phFtpCommand)
BOOL None wininet.FtpCommand(_In_ HINTERNET hConnect,_In_ BOOL fExpectResponse,_In_ DWORD dwFlags,_In_ LPCTSTR lpszCommand,_In_ DWORD_PTR dwContext,_Out_ HINTERNET *phFtpCommand)
BOOL None wininet.FtpCommandW(_In_ HINTERNET hConnect,_In_ BOOL fExpectResponse,_In_ DWORD dwFlags,_In_ LPCTSTR lpszCommand,_In_ DWORD_PTR dwContext,_Out_ HINTERNET *phFtpCommand)
BOOL None wininet.FtpCreateDirectoryA(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszDirectory)
BOOL None wininet.FtpCreateDirectory(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszDirectory)
BOOL None wininet.FtpCreateDirectoryW(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszDirectory)
BOOL None wininet.FtpDeleteFileA(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszFileName)
BOOL None wininet.FtpDeleteFile(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszFileName)
BOOL None wininet.FtpDeleteFileW(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszFileName)
BOOL None wininet.FtpGetCurrentDirectoryA(_In_ HINTERNET hConnect,_Out_ LPTSTR lpszCurrentDirectory,_Inout_ LPDWORD lpdwCurrentDirectory)
BOOL None wininet.FtpGetCurrentDirectory(_In_ HINTERNET hConnect,_Out_ LPTSTR lpszCurrentDirectory,_Inout_ LPDWORD lpdwCurrentDirectory)
BOOL None wininet.FtpGetCurrentDirectoryW(_In_ HINTERNET hConnect,_Out_ LPTSTR lpszCurrentDirectory,_Inout_ LPDWORD lpdwCurrentDirectory)
BOOL None wininet.FtpGetFileA(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszRemoteFile,_In_ LPCTSTR lpszNewFile,_In_ BOOL fFailIfExists,_In_ DWORD dwFlagsAndAttributes,_In_ DWORD dwFlags,_In_ DWORD_PTR dwContext)
BOOL None wininet.FtpGetFile(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszRemoteFile,_In_ LPCTSTR lpszNewFile,_In_ BOOL fFailIfExists,_In_ DWORD dwFlagsAndAttributes,_In_ DWORD dwFlags,_In_ DWORD_PTR dwContext)
BOOL None wininet.FtpGetFileW(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszRemoteFile,_In_ LPCTSTR lpszNewFile,_In_ BOOL fFailIfExists,_In_ DWORD dwFlagsAndAttributes,_In_ DWORD dwFlags,_In_ DWORD_PTR dwContext)
BOOL None wininet.FtpPutFileA(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszLocalFile,_In_ LPCTSTR lpszNewRemoteFile,_In_ DWORD dwFlags,_In_ DWORD_PTR dwContext)
BOOL None wininet.FtpPutFile(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszLocalFile,_In_ LPCTSTR lpszNewRemoteFile,_In_ DWORD dwFlags,_In_ DWORD_PTR dwContext)
BOOL None wininet.FtpPutFileW(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszLocalFile,_In_ LPCTSTR lpszNewRemoteFile,_In_ DWORD dwFlags,_In_ DWORD_PTR dwContext)
BOOL None wininet.FtpRemoveDirectoryA(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszDirectory)
BOOL None wininet.FtpRemoveDirectory(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszDirectory)
BOOL None wininet.FtpRemoveDirectoryW(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszDirectory)
BOOL None wininet.FtpRenameFileA(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszExisting,_In_ LPCTSTR lpszNew)
BOOL None wininet.FtpRenameFile(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszExisting,_In_ LPCTSTR lpszNew)
BOOL None wininet.FtpRenameFileW(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszExisting,_In_ LPCTSTR lpszNew)
BOOL None wininet.FtpSetCurrentDirectoryA(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszDirectory)
BOOL None wininet.FtpSetCurrentDirectory(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszDirectory)
BOOL None wininet.FtpSetCurrentDirectoryW(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszDirectory)
BOOL None wininet.GetUrlCacheEntryInfoA(_In_ LPCTSTR lpszUrlName,_Out_ LPINTERNET_CACHE_ENTRY_INFO lpCacheEntryInfo,_Inout_ LPDWORD lpcbCacheEntryInfo)
BOOL None wininet.GetUrlCacheEntryInfo(_In_ LPCTSTR lpszUrlName,_Out_ LPINTERNET_CACHE_ENTRY_INFO lpCacheEntryInfo,_Inout_ LPDWORD lpcbCacheEntryInfo)
BOOL None wininet.GetUrlCacheEntryInfoW(_In_ LPCTSTR lpszUrlName,_Out_ LPINTERNET_CACHE_ENTRY_INFO lpCacheEntryInfo,_Inout_ LPDWORD lpcbCacheEntryInfo)
BOOL None wininet.GetUrlCacheGroupAttributeA(_In_ GROUPID gid,_Reserved_ DWORD dwFlags,_In_ DWORD dwAttributes,_Out_ LPINTERNET_CACHE_GROUP_INFO lpGroupInfo,_Inout_ LPDWORD lpdwGroupInfo,_Reserved_ LPVOID lpReserved)
BOOL None wininet.GetUrlCacheGroupAttribute(_In_ GROUPID gid,_Reserved_ DWORD dwFlags,_In_ DWORD dwAttributes,_Out_ LPINTERNET_CACHE_GROUP_INFO lpGroupInfo,_Inout_ LPDWORD lpdwGroupInfo,_Reserved_ LPVOID lpReserved)
BOOL None wininet.GetUrlCacheGroupAttributeW(_In_ GROUPID gid,_Reserved_ DWORD dwFlags,_In_ DWORD dwAttributes,_Out_ LPINTERNET_CACHE_GROUP_INFO lpGroupInfo,_Inout_ LPDWORD lpdwGroupInfo,_Reserved_ LPVOID lpReserved)
BOOL None wininet.GopherCreateLocatorA(_In_ LPCTSTR lpszHost,_In_ INTERNET_PORT nServerPort,_In_ LPCTSTR lpszDisplayString,_In_ LPCTSTR lpszSelectorString,_In_ DWORD dwGopherType,_Out_ LPTSTR lpszLocator,_Inout_ LPDWORD lpdwBufferLength)
BOOL None wininet.GopherCreateLocator(_In_ LPCTSTR lpszHost,_In_ INTERNET_PORT nServerPort,_In_ LPCTSTR lpszDisplayString,_In_ LPCTSTR lpszSelectorString,_In_ DWORD dwGopherType,_Out_ LPTSTR lpszLocator,_Inout_ LPDWORD lpdwBufferLength)
BOOL None wininet.GopherCreateLocatorW(_In_ LPCTSTR lpszHost,_In_ INTERNET_PORT nServerPort,_In_ LPCTSTR lpszDisplayString,_In_ LPCTSTR lpszSelectorString,_In_ DWORD dwGopherType,_Out_ LPTSTR lpszLocator,_Inout_ LPDWORD lpdwBufferLength)
BOOL None wininet.GopherGetAttributeA(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszLocator,_In_ LPCTSTR lpszAttributeName,_Out_ LPBYTE lpBuffer,_In_ DWORD dwBufferLength,_Out_ LPDWORD lpdwCharactersReturned,_In_ GOPHER_ATTRIBUTE_ENUMERATOR lpfnEnumerator,_In_ DWORD_PTR dwContext)
BOOL None wininet.GopherGetAttribute(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszLocator,_In_ LPCTSTR lpszAttributeName,_Out_ LPBYTE lpBuffer,_In_ DWORD dwBufferLength,_Out_ LPDWORD lpdwCharactersReturned,_In_ GOPHER_ATTRIBUTE_ENUMERATOR lpfnEnumerator,_In_ DWORD_PTR dwContext)
BOOL None wininet.GopherGetAttributeW(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszLocator,_In_ LPCTSTR lpszAttributeName,_Out_ LPBYTE lpBuffer,_In_ DWORD dwBufferLength,_Out_ LPDWORD lpdwCharactersReturned,_In_ GOPHER_ATTRIBUTE_ENUMERATOR lpfnEnumerator,_In_ DWORD_PTR dwContext)
BOOL None wininet.GopherGetLocatorTypeA(_In_ LPCTSTR lpszLocator,_Out_ LPDWORD lpdwGopherType)
BOOL None wininet.GopherGetLocatorType(_In_ LPCTSTR lpszLocator,_Out_ LPDWORD lpdwGopherType)
BOOL None wininet.GopherGetLocatorTypeW(_In_ LPCTSTR lpszLocator,_Out_ LPDWORD lpdwGopherType)
BOOL None wininet.HttpAddRequestHeadersA(_In_ HINTERNET hRequest,_In_ LPCTSTR lpszHeaders,_In_ DWORD dwHeadersLength,_In_ DWORD dwModifiers)
BOOL None wininet.HttpAddRequestHeaders(_In_ HINTERNET hRequest,_In_ LPCTSTR lpszHeaders,_In_ DWORD dwHeadersLength,_In_ DWORD dwModifiers)
BOOL None wininet.HttpAddRequestHeadersW(_In_ HINTERNET hRequest,_In_ LPCTSTR lpszHeaders,_In_ DWORD dwHeadersLength,_In_ DWORD dwModifiers)
BOOL None wininet.HttpEndRequestA(_In_ HINTERNET hRequest,_Out_opt_ LPINTERNET_BUFFERS lpBuffersOut,_In_ DWORD dwFlags,_In_opt_ DWORD_PTR dwContext)
BOOL None wininet.HttpEndRequest(_In_ HINTERNET hRequest,_Out_opt_ LPINTERNET_BUFFERS lpBuffersOut,_In_ DWORD dwFlags,_In_opt_ DWORD_PTR dwContext)
BOOL None wininet.HttpEndRequestW(_In_ HINTERNET hRequest,_Out_opt_ LPINTERNET_BUFFERS lpBuffersOut,_In_ DWORD dwFlags,_In_opt_ DWORD_PTR dwContext)
BOOL None wininet.HttpQueryInfoA(_In_ HINTERNET hRequest,_In_ DWORD dwInfoLevel,_Inout_ LPVOID lpvBuffer,_Inout_ LPDWORD lpdwBufferLength,_Inout_ LPDWORD lpdwIndex)
BOOL None wininet.HttpQueryInfo(_In_ HINTERNET hRequest,_In_ DWORD dwInfoLevel,_Inout_ LPVOID lpvBuffer,_Inout_ LPDWORD lpdwBufferLength,_Inout_ LPDWORD lpdwIndex)
BOOL None wininet.HttpQueryInfoW(_In_ HINTERNET hRequest,_In_ DWORD dwInfoLevel,_Inout_ LPVOID lpvBuffer,_Inout_ LPDWORD lpdwBufferLength,_Inout_ LPDWORD lpdwIndex)
BOOL None wininet.HttpSendRequestA(_In_ HINTERNET hRequest,_In_ LPCTSTR lpszHeaders,_In_ DWORD dwHeadersLength,_In_ LPVOID lpOptional,_In_ DWORD dwOptionalLength)
BOOL None wininet.HttpSendRequestExA(_In_ HINTERNET hRequest,_In_ LPINTERNET_BUFFERS lpBuffersIn,_Out_ LPINTERNET_BUFFERS lpBuffersOut,_In_ DWORD dwFlags,_In_ DWORD_PTR dwContext)
BOOL None wininet.HttpSendRequestEx(_In_ HINTERNET hRequest,_In_ LPINTERNET_BUFFERS lpBuffersIn,_Out_ LPINTERNET_BUFFERS lpBuffersOut,_In_ DWORD dwFlags,_In_ DWORD_PTR dwContext)
BOOL None wininet.HttpSendRequestExW(_In_ HINTERNET hRequest,_In_ LPINTERNET_BUFFERS lpBuffersIn,_Out_ LPINTERNET_BUFFERS lpBuffersOut,_In_ DWORD dwFlags,_In_ DWORD_PTR dwContext)
BOOL None wininet.HttpSendRequest(_In_ HINTERNET hRequest,_In_ LPCTSTR lpszHeaders,_In_ DWORD dwHeadersLength,_In_ LPVOID lpOptional,_In_ DWORD dwOptionalLength)
BOOL None wininet.HttpSendRequestW(_In_ HINTERNET hRequest,_In_ LPCTSTR lpszHeaders,_In_ DWORD dwHeadersLength,_In_ LPVOID lpOptional,_In_ DWORD dwOptionalLength)
BOOL None wininet.InternetAutodialHangup(_In_ DWORD dwReserved)
BOOL None wininet.InternetAutodial(_In_ DWORD dwFlags,_In_ HWND hwndParent)
BOOL None wininet.InternetCanonicalizeUrlA(_In_ LPCTSTR lpszUrl,_Out_ LPTSTR lpszBuffer,_Inout_ LPDWORD lpdwBufferLength,_In_ DWORD dwFlags)
BOOL None wininet.InternetCanonicalizeUrl(_In_ LPCTSTR lpszUrl,_Out_ LPTSTR lpszBuffer,_Inout_ LPDWORD lpdwBufferLength,_In_ DWORD dwFlags)
BOOL None wininet.InternetCanonicalizeUrlW(_In_ LPCTSTR lpszUrl,_Out_ LPTSTR lpszBuffer,_Inout_ LPDWORD lpdwBufferLength,_In_ DWORD dwFlags)
BOOL None wininet.InternetCheckConnectionA(_In_ LPCTSTR lpszUrl,_In_ DWORD dwFlags,_In_ DWORD dwReserved)
BOOL None wininet.InternetCheckConnection(_In_ LPCTSTR lpszUrl,_In_ DWORD dwFlags,_In_ DWORD dwReserved)
BOOL None wininet.InternetCheckConnectionW(_In_ LPCTSTR lpszUrl,_In_ DWORD dwFlags,_In_ DWORD dwReserved)
BOOL None wininet.InternetCloseHandle(_In_ HINTERNET hInternet)
BOOL None wininet.InternetCombineUrlA(_In_ LPCTSTR lpszBaseUrl,_In_ LPCTSTR lpszRelativeUrl,_Out_ LPTSTR lpszBuffer,_Inout_ LPDWORD lpdwBufferLength,_In_ DWORD dwFlags)
BOOL None wininet.InternetCombineUrl(_In_ LPCTSTR lpszBaseUrl,_In_ LPCTSTR lpszRelativeUrl,_Out_ LPTSTR lpszBuffer,_Inout_ LPDWORD lpdwBufferLength,_In_ DWORD dwFlags)
BOOL None wininet.InternetCombineUrlW(_In_ LPCTSTR lpszBaseUrl,_In_ LPCTSTR lpszRelativeUrl,_Out_ LPTSTR lpszBuffer,_Inout_ LPDWORD lpdwBufferLength,_In_ DWORD dwFlags)
BOOL None wininet.InternetCrackUrlA(_In_ LPCTSTR lpszUrl,_In_ DWORD dwUrlLength,_In_ DWORD dwFlags,_Inout_ LPURL_COMPONENTS lpUrlComponents)
BOOL None wininet.InternetCrackUrl(_In_ LPCTSTR lpszUrl,_In_ DWORD dwUrlLength,_In_ DWORD dwFlags,_Inout_ LPURL_COMPONENTS lpUrlComponents)
BOOL None wininet.InternetCrackUrlW(_In_ LPCTSTR lpszUrl,_In_ DWORD dwUrlLength,_In_ DWORD dwFlags,_Inout_ LPURL_COMPONENTS lpUrlComponents)
BOOL None wininet.InternetCreateUrlA(_In_ LPURL_COMPONENTS lpUrlComponents,_In_ DWORD dwFlags,_Out_ LPTSTR lpszUrl,_Inout_ LPDWORD lpdwUrlLength)
BOOL None wininet.InternetCreateUrl(_In_ LPURL_COMPONENTS lpUrlComponents,_In_ DWORD dwFlags,_Out_ LPTSTR lpszUrl,_Inout_ LPDWORD lpdwUrlLength)
BOOL None wininet.InternetCreateUrlW(_In_ LPURL_COMPONENTS lpUrlComponents,_In_ DWORD dwFlags,_Out_ LPTSTR lpszUrl,_Inout_ LPDWORD lpdwUrlLength)
BOOL None wininet.InternetFindNextFileA(_In_ HINTERNET hFind,_Out_ LPVOID lpvFindData)
BOOL None wininet.InternetFindNextFile(_In_ HINTERNET hFind,_Out_ LPVOID lpvFindData)
BOOL None wininet.InternetFindNextFileW(_In_ HINTERNET hFind,_Out_ LPVOID lpvFindData)
BOOL None wininet.InternetGetConnectedStateExA(_Out_ LPDWORD lpdwFlags,_Out_ LPTSTR lpszConnectionName,_In_ DWORD dwNameLen,_In_ DWORD dwReserved)
BOOL None wininet.InternetGetConnectedStateEx(_Out_ LPDWORD lpdwFlags,_Out_ LPTSTR lpszConnectionName,_In_ DWORD dwNameLen,_In_ DWORD dwReserved)
BOOL None wininet.InternetGetConnectedStateExW(_Out_ LPDWORD lpdwFlags,_Out_ LPTSTR lpszConnectionName,_In_ DWORD dwNameLen,_In_ DWORD dwReserved)
BOOL None wininet.InternetGetConnectedState(_Out_ LPDWORD lpdwFlags,_In_ DWORD dwReserved)
BOOL None wininet.InternetGetCookieA(_In_ LPCTSTR lpszUrl,_In_ LPCTSTR lpszCookieName,_Out_ LPTSTR lpszCookieData,_Inout_ LPDWORD lpdwSize)
BOOL None wininet.InternetGetCookieExA(_In_ LPCTSTR lpszURL,_In_ LPCTSTR lpszCookieName,_Inout_opt_ LPTSTR lpszCookieData,_Inout_ LPDWORD lpdwSize,_In_ DWORD dwFlags,_In_ LPVOID lpReserved)
BOOL None wininet.InternetGetCookieEx(_In_ LPCTSTR lpszURL,_In_ LPCTSTR lpszCookieName,_Inout_opt_ LPTSTR lpszCookieData,_Inout_ LPDWORD lpdwSize,_In_ DWORD dwFlags,_In_ LPVOID lpReserved)
BOOL None wininet.InternetGetCookieExW(_In_ LPCTSTR lpszURL,_In_ LPCTSTR lpszCookieName,_Inout_opt_ LPTSTR lpszCookieData,_Inout_ LPDWORD lpdwSize,_In_ DWORD dwFlags,_In_ LPVOID lpReserved)
BOOL None wininet.InternetGetCookie(_In_ LPCTSTR lpszUrl,_In_ LPCTSTR lpszCookieName,_Out_ LPTSTR lpszCookieData,_Inout_ LPDWORD lpdwSize)
BOOL None wininet.InternetGetCookieW(_In_ LPCTSTR lpszUrl,_In_ LPCTSTR lpszCookieName,_Out_ LPTSTR lpszCookieData,_Inout_ LPDWORD lpdwSize)
BOOL None wininet.InternetGetLastResponseInfoA(_Out_ LPDWORD lpdwError,_Out_ LPTSTR lpszBuffer,_Inout_ LPDWORD lpdwBufferLength)
BOOL None wininet.InternetGetLastResponseInfo(_Out_ LPDWORD lpdwError,_Out_ LPTSTR lpszBuffer,_Inout_ LPDWORD lpdwBufferLength)
BOOL None wininet.InternetGetLastResponseInfoW(_Out_ LPDWORD lpdwError,_Out_ LPTSTR lpszBuffer,_Inout_ LPDWORD lpdwBufferLength)
BOOL None wininet.InternetGoOnlineA(_In_ LPTSTR lpszURL,_In_ HWND hwndParent,_In_ DWORD dwFlags)
BOOL None wininet.InternetGoOnline(_In_ LPTSTR lpszURL,_In_ HWND hwndParent,_In_ DWORD dwFlags)
BOOL None wininet.InternetGoOnlineW(_In_ LPTSTR lpszURL,_In_ HWND hwndParent,_In_ DWORD dwFlags)
BOOL None wininet.InternetLockRequestFile(_In_ HINTERNET hInternet,_Out_ HANDLE *lphLockReqHandle)
BOOL None wininet.InternetQueryDataAvailable(_In_ HINTERNET hFile,_Out_ LPDWORD lpdwNumberOfBytesAvailable,_In_ DWORD dwFlags,_In_ DWORD_PTR dwContext)
BOOL None wininet.InternetQueryOptionA(_In_ HINTERNET hInternet,_In_ DWORD dwOption,_Out_ LPVOID lpBuffer,_Inout_ LPDWORD lpdwBufferLength)
BOOL None wininet.InternetQueryOption(_In_ HINTERNET hInternet,_In_ DWORD dwOption,_Out_ LPVOID lpBuffer,_Inout_ LPDWORD lpdwBufferLength)
BOOL None wininet.InternetQueryOptionW(_In_ HINTERNET hInternet,_In_ DWORD dwOption,_Out_ LPVOID lpBuffer,_Inout_ LPDWORD lpdwBufferLength)
BOOL None wininet.InternetReadFileExA(_In_ HINTERNET hFile,_Out_ LPINTERNET_BUFFERS lpBuffersOut,_In_ DWORD dwFlags,_In_ DWORD_PTR dwContext)
BOOL None wininet.InternetReadFileEx(_In_ HINTERNET hFile,_Out_ LPINTERNET_BUFFERS lpBuffersOut,_In_ DWORD dwFlags,_In_ DWORD_PTR dwContext)
BOOL None wininet.InternetReadFileExW(_In_ HINTERNET hFile,_Out_ LPINTERNET_BUFFERS lpBuffersOut,_In_ DWORD dwFlags,_In_ DWORD_PTR dwContext)
BOOL None wininet.InternetReadFile(_In_ HINTERNET hFile,_Out_ LPVOID lpBuffer,_In_ DWORD dwNumberOfBytesToRead,_Out_ LPDWORD lpdwNumberOfBytesRead)
BOOL None wininet.InternetSetCookieA(_In_ LPCTSTR lpszUrl,_In_ LPCTSTR lpszCookieName,_In_ LPCTSTR lpszCookieData)
BOOL None wininet.InternetSetCookie(_In_ LPCTSTR lpszUrl,_In_ LPCTSTR lpszCookieName,_In_ LPCTSTR lpszCookieData)
BOOL None wininet.InternetSetCookieW(_In_ LPCTSTR lpszUrl,_In_ LPCTSTR lpszCookieName,_In_ LPCTSTR lpszCookieData)
BOOL None wininet.InternetSetOptionA(_In_ HINTERNET hInternet,_In_ DWORD dwOption,_In_ LPVOID lpBuffer,_In_ DWORD dwBufferLength)
BOOL None wininet.InternetSetOption(_In_ HINTERNET hInternet,_In_ DWORD dwOption,_In_ LPVOID lpBuffer,_In_ DWORD dwBufferLength)
BOOL None wininet.InternetSetOptionW(_In_ HINTERNET hInternet,_In_ DWORD dwOption,_In_ LPVOID lpBuffer,_In_ DWORD dwBufferLength)
BOOL None wininet.InternetTimeToSystemTimeA(_In_ LPCTSTR lpszTime,_Out_ SYSTEMTIME *pst,_In_ DWORD dwReserved)
BOOL None wininet.InternetTimeToSystemTime(_In_ LPCTSTR lpszTime,_Out_ SYSTEMTIME *pst,_In_ DWORD dwReserved)
BOOL None wininet.InternetTimeToSystemTimeW(_In_ LPCTSTR lpszTime,_Out_ SYSTEMTIME *pst,_In_ DWORD dwReserved)
BOOL None wininet.InternetWriteFile(_In_ HINTERNET hFile,_In_ LPCVOID lpBuffer,_In_ DWORD dwNumberOfBytesToWrite,_Out_ LPDWORD lpdwNumberOfBytesWritten)
BOOL None wininet.ResumeSuspendedDownload(_In_ HINTERNET hRequest,_In_ DWORD dwResultCode)
BOOL None wininet.SetUrlCacheGroupAttributeA(_In_ GROUPID gid,_In_ DWORD dwFlags,_In_ DWORD dwAttributes,_In_ LPINTERNET_CACHE_GROUP_INFO lpGroupInfo,_Inout_ LPVOID lpReserved)
BOOL None wininet.SetUrlCacheGroupAttribute(_In_ GROUPID gid,_In_ DWORD dwFlags,_In_ DWORD dwAttributes,_In_ LPINTERNET_CACHE_GROUP_INFO lpGroupInfo,_Inout_ LPVOID lpReserved)
BOOL None wininet.SetUrlCacheGroupAttributeW(_In_ GROUPID gid,_In_ DWORD dwFlags,_In_ DWORD dwAttributes,_In_ LPINTERNET_CACHE_GROUP_INFO lpGroupInfo,_Inout_ LPVOID lpReserved)
BOOL None winmm.mciGetErrorStringA(DWORD fdwError None,LPTSTR lpszErrorText None,UINT cchErrorText None)
BOOL None winmm.mciGetErrorString(DWORD fdwError None,LPTSTR lpszErrorText None,UINT cchErrorText None)
BOOL None winmm.mciGetErrorStringW(DWORD fdwError None,LPTSTR lpszErrorText None,UINT cchErrorText None)
BOOL None winmm.PlaySoundA(LPCTSTR pszSound None,HMODULE hmod None,DWORD fdwSound None)
BOOL None winmm.PlaySound(LPCTSTR pszSound None,HMODULE hmod None,DWORD fdwSound None)
BOOL None winmm.PlaySoundW(LPCTSTR pszSound None,HMODULE hmod None,DWORD fdwSound None)
BOOL None winmm.sndPlaySoundA(LPCTSTR lpszSound None,UINT fuSound None)
BOOL None winmm.sndPlaySound(LPCTSTR lpszSound None,UINT fuSound None)
BOOL None winmm.sndPlaySoundW(LPCTSTR lpszSound None,UINT fuSound None)
BOOL None wintrust.CryptCATAdminCalcHashFromFileHandle(_In_ HANDLE hFile,_Inout_ DWORD *pcbHash,_In_ BYTE *pbHash,_In_ DWORD dwFlags)
BOOL None wintrust.CryptCATAdminReleaseCatalogContext(_In_ HCATADMIN hCatAdmin,_In_ HCATINFO hCatInfo,_In_ DWORD dwFlags)
BOOL None wintrust.CryptCATAdminReleaseContext(_In_ HCATADMIN hCatAdmin,_In_ DWORD dwFlags)
BOOL None wintrust.CryptCATAdminRemoveCatalog(_In_ HCATADMIN hCatAdmin,_In_ LPCWSTR pwszCatalogFile,_In_ DWORD dwFlags)
BOOL None wintrust.CryptCATCatalogInfoFromContext(_In_ HCATINFO hCatInfo,_Inout_ CATALOG_INFO *psCatInfo,_In_ DWORD dwFlags)
BOOL None wintrust.CryptCATClose(_In_ HANDLE hCatalog)
BOOL None wintrust.WintrustAddActionID(_In_ GUID *pgActionID,_In_ DWORD fdwFlags,_In_ CRYPT_REGISTER_ACTIONID *psProvInfo)
BOOL None wintrust.WintrustLoadFunctionPointers(_In_ GUID *pgActionID,_Out_ CRYPT_PROVIDER_FUNCTIONS *pPfns)
BOOL None wintrust.WintrustRemoveActionID(_In_ GUID *pgActionID)
BOOL None ws2_32.WSACloseEvent(_In_ WSAEVENT hEvent)
BOOL None ws2_32.WSAGetQOSByName(_In_ SOCKET s,_Inout_ LPWSABUF lpQOSName,_Out_ LPQOS lpQOS)
BOOL None ws2_32.WSAResetEvent(_In_ WSAEVENT hEvent)
BOOL None ws2_32.WSASetEvent(_In_ WSAEVENT hEvent)
BOOL None wtsapi32.WTSDisconnectSession(_In_ HANDLE hServer,_In_ DWORD SessionId,_In_ BOOL bWait)
BOOL None wtsapi32.WTSEnumerateProcessesA(_In_ HANDLE hServer,_In_ DWORD Reserved,_In_ DWORD Version,_Out_ PWTS_PROCESS_INFO *ppProcessInfo,_Out_ DWORD *pCount)
BOOL None wtsapi32.WTSEnumerateProcesses(_In_ HANDLE hServer,_In_ DWORD Reserved,_In_ DWORD Version,_Out_ PWTS_PROCESS_INFO *ppProcessInfo,_Out_ DWORD *pCount)
BOOL None wtsapi32.WTSEnumerateProcessesW(_In_ HANDLE hServer,_In_ DWORD Reserved,_In_ DWORD Version,_Out_ PWTS_PROCESS_INFO *ppProcessInfo,_Out_ DWORD *pCount)
BOOL None wtsapi32.WTSEnumerateServersA(_In_ LPTSTR pDomainName,_In_ DWORD Reserved,_In_ DWORD Version,PWTS_SERVER_INFO *ppServerInfo None,DWORD *pCount None)
BOOL None wtsapi32.WTSEnumerateServers(_In_ LPTSTR pDomainName,_In_ DWORD Reserved,_In_ DWORD Version,PWTS_SERVER_INFO *ppServerInfo None,DWORD *pCount None)
BOOL None wtsapi32.WTSEnumerateServersW(_In_ LPTSTR pDomainName,_In_ DWORD Reserved,_In_ DWORD Version,PWTS_SERVER_INFO *ppServerInfo None,DWORD *pCount None)
BOOL None wtsapi32.WTSEnumerateSessionsA(_In_ HANDLE hServer,_In_ DWORD Reserved,_In_ DWORD Version,_Out_ PWTS_SESSION_INFO *ppSessionInfo,_Out_ DWORD *pCount)
BOOL None wtsapi32.WTSEnumerateSessions(_In_ HANDLE hServer,_In_ DWORD Reserved,_In_ DWORD Version,_Out_ PWTS_SESSION_INFO *ppSessionInfo,_Out_ DWORD *pCount)
BOOL None wtsapi32.WTSEnumerateSessionsW(_In_ HANDLE hServer,_In_ DWORD Reserved,_In_ DWORD Version,_Out_ PWTS_SESSION_INFO *ppSessionInfo,_Out_ DWORD *pCount)
BOOL None wtsapi32.WTSLogoffSession(_In_ HANDLE hServer,_In_ DWORD SessionId,_In_ BOOL bWait)
BOOL None wtsapi32.WTSQuerySessionInformationA(_In_ HANDLE hServer,_In_ DWORD SessionId,_In_ WTS_INFO_CLASS WTSInfoClass,_Out_ LPTSTR *ppBuffer,_Out_ DWORD *pBytesReturned)
BOOL None wtsapi32.WTSQuerySessionInformation(_In_ HANDLE hServer,_In_ DWORD SessionId,_In_ WTS_INFO_CLASS WTSInfoClass,_Out_ LPTSTR *ppBuffer,_Out_ DWORD *pBytesReturned)
BOOL None wtsapi32.WTSQuerySessionInformationW(_In_ HANDLE hServer,_In_ DWORD SessionId,_In_ WTS_INFO_CLASS WTSInfoClass,_Out_ LPTSTR *ppBuffer,_Out_ DWORD *pBytesReturned)
BOOL None wtsapi32.WTSQueryUserConfigA(_In_ LPTSTR pServerName,_In_ LPTSTR pUserName,_In_ WTS_CONFIG_CLASS WTSConfigClass,_Out_ LPTSTR *ppBuffer,_Out_ DWORD *pBytesReturned)
BOOL None wtsapi32.WTSQueryUserConfig(_In_ LPTSTR pServerName,_In_ LPTSTR pUserName,_In_ WTS_CONFIG_CLASS WTSConfigClass,_Out_ LPTSTR *ppBuffer,_Out_ DWORD *pBytesReturned)
BOOL None wtsapi32.WTSQueryUserConfigW(_In_ LPTSTR pServerName,_In_ LPTSTR pUserName,_In_ WTS_CONFIG_CLASS WTSConfigClass,_Out_ LPTSTR *ppBuffer,_Out_ DWORD *pBytesReturned)
BOOL None wtsapi32.WTSQueryUserToken(_In_ ULONG SessionId,_Out_ PHANDLE phToken)
BOOL None wtsapi32.WTSRegisterSessionNotificationEx(_In_ HANDLE hServer,_In_ HWND hWnd,_In_ DWORD dwFlags)
BOOL None wtsapi32.WTSRegisterSessionNotification(_In_ HWND hWnd,_In_ DWORD dwFlags)
BOOL None wtsapi32.WTSSendMessageA(_In_ HANDLE hServer,_In_ DWORD SessionId,_In_ LPTSTR pTitle,_In_ DWORD TitleLength,_In_ LPTSTR pMessage,_In_ DWORD MessageLength,_In_ DWORD Style,_In_ DWORD Timeout,_Out_ DWORD *pResponse,_In_ BOOL bWait)
BOOL None wtsapi32.WTSSendMessage(_In_ HANDLE hServer,_In_ DWORD SessionId,_In_ LPTSTR pTitle,_In_ DWORD TitleLength,_In_ LPTSTR pMessage,_In_ DWORD MessageLength,_In_ DWORD Style,_In_ DWORD Timeout,_Out_ DWORD *pResponse,_In_ BOOL bWait)
BOOL None wtsapi32.WTSSendMessageW(_In_ HANDLE hServer,_In_ DWORD SessionId,_In_ LPTSTR pTitle,_In_ DWORD TitleLength,_In_ LPTSTR pMessage,_In_ DWORD MessageLength,_In_ DWORD Style,_In_ DWORD Timeout,_Out_ DWORD *pResponse,_In_ BOOL bWait)
BOOL None wtsapi32.WTSSetUserConfigA(_In_ LPTSTR pServerName,_In_ LPTSTR pUserName,_In_ WTS_CONFIG_CLASS WTSConfigClass,_In_ LPTSTR pBuffer,_In_ DWORD DataLength)
BOOL None wtsapi32.WTSSetUserConfig(_In_ LPTSTR pServerName,_In_ LPTSTR pUserName,_In_ WTS_CONFIG_CLASS WTSConfigClass,_In_ LPTSTR pBuffer,_In_ DWORD DataLength)
BOOL None wtsapi32.WTSSetUserConfigW(_In_ LPTSTR pServerName,_In_ LPTSTR pUserName,_In_ WTS_CONFIG_CLASS WTSConfigClass,_In_ LPTSTR pBuffer,_In_ DWORD DataLength)
BOOL None wtsapi32.WTSShutdownSystem(_In_ HANDLE hServer,_In_ DWORD ShutdownFlag)
BOOL None wtsapi32.WTSTerminateProcess(_In_ HANDLE hServer,_In_ DWORD ProcessId,_In_ DWORD ExitCode)
BOOL None wtsapi32.WTSUnRegisterSessionNotificationEx(_In_ HANDLE hServer,_In_ HWND hWnd)
BOOL None wtsapi32.WTSUnRegisterSessionNotification(_In_ HWND hWnd)
BOOL None wtsapi32.WTSVirtualChannelClose(_In_ HANDLE hChannelHandle)
BOOL None wtsapi32.WTSVirtualChannelPurgeInput(_In_ HANDLE hChannelHandle)
BOOL None wtsapi32.WTSVirtualChannelPurgeOutput(_In_ HANDLE hChannelHandle)
BOOL None wtsapi32.WTSVirtualChannelQuery(_In_ HANDLE hChannelHandle,_In_ WTS_VIRTUAL_CLASS WtsVirtualClass,_Out_ PVOID *ppBuffer,_Out_ DWORD *pBytesReturned)
BOOL None wtsapi32.WTSVirtualChannelRead(_In_ HANDLE hChannelHandle,_In_ ULONG TimeOut,_Out_ PCHAR Buffer,_In_ ULONG BufferSize,_Out_ PULONG pBytesRead)
BOOL None wtsapi32.WTSVirtualChannelWrite(_In_ HANDLE hChannelHandle,_In_ PCHAR Buffer,_In_ ULONG Length,_Out_ PULONG pBytesWritten)
BOOL None wtsapi32.WTSWaitSystemEvent(_In_ HANDLE hServer,_In_ DWORD EventMask,_Out_ DWORD *pEventFlags)
BOOL PASCAL mswsock.TransmitFile(SOCKET hSocket None,HANDLE hFile None,DWORD nNumberOfBytesToWrite None,DWORD nNumberOfBytesPerSend None,LPOVERLAPPED lpOverlapped None,LPTRANSMIT_FILE_BUFFERS lpTransmitBuffers None,DWORD dwFlags None)
BOOL PASCAL None.TransmitPackets(SOCKET hSocket None,LPTRANSMIT_PACKETS_ELEMENT lpPacketArray None,DWORD nElementCount None,DWORD nSendSize None,LPOVERLAPPED lpOverlapped None,DWORD dwFlags None)
BOOL VFWAPI None.capGetDriverDescription(WORD wDriverIndex None,LPTSTR lpszName None,INT cbName None,LPTSTR lpszVer None,INT cbVer None)
BOOL WINAPI aclui.EditSecurity(_In_ HWND hwndOwner,_In_ LPSECURITYINFO psi)
BOOL WINAPI advapi32.AccessCheckAndAuditAlarmA(_In_ LPCTSTR SubsystemName,_In_opt_ LPVOID HandleId,_In_ LPTSTR ObjectTypeName,_In_opt_ LPTSTR ObjectName,_In_ PSECURITY_DESCRIPTOR SecurityDescriptor,_In_ DWORD DesiredAccess,_In_ PGENERIC_MAPPING GenericMapping,_In_ BOOL ObjectCreation,_Out_ LPDWORD GrantedAccess,_Out_ LPBOOL AccessStatus,_Out_ LPBOOL pfGenerateOnClose)
BOOL WINAPI advapi32.AccessCheckAndAuditAlarm(_In_ LPCTSTR SubsystemName,_In_opt_ LPVOID HandleId,_In_ LPTSTR ObjectTypeName,_In_opt_ LPTSTR ObjectName,_In_ PSECURITY_DESCRIPTOR SecurityDescriptor,_In_ DWORD DesiredAccess,_In_ PGENERIC_MAPPING GenericMapping,_In_ BOOL ObjectCreation,_Out_ LPDWORD GrantedAccess,_Out_ LPBOOL AccessStatus,_Out_ LPBOOL pfGenerateOnClose)
BOOL WINAPI advapi32.AccessCheckAndAuditAlarmW(_In_ LPCTSTR SubsystemName,_In_opt_ LPVOID HandleId,_In_ LPTSTR ObjectTypeName,_In_opt_ LPTSTR ObjectName,_In_ PSECURITY_DESCRIPTOR SecurityDescriptor,_In_ DWORD DesiredAccess,_In_ PGENERIC_MAPPING GenericMapping,_In_ BOOL ObjectCreation,_Out_ LPDWORD GrantedAccess,_Out_ LPBOOL AccessStatus,_Out_ LPBOOL pfGenerateOnClose)
BOOL WINAPI advapi32.AccessCheckByTypeAndAuditAlarmA(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ LPCTSTR ObjectTypeName,_In_opt_ LPCTSTR ObjectName,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_opt_ PSID PrincipalSelfSid,_In_ DWORD DesiredAccess,_In_ AUDIT_EVENT_TYPE AuditType,_In_ DWORD Flags,_Inout_opt_ POBJECT_TYPE_LIST ObjectTypeList,_In_ DWORD ObjectTypeListLength,_In_ PGENERIC_MAPPING GenericMapping,_In_ BOOL ObjectCreation,_Out_ LPDWORD GrantedAccess,_Out_ LPBOOL AccessStatus,_Out_ LPBOOL pfGenerateOnClose)
BOOL WINAPI advapi32.AccessCheckByTypeAndAuditAlarm(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ LPCTSTR ObjectTypeName,_In_opt_ LPCTSTR ObjectName,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_opt_ PSID PrincipalSelfSid,_In_ DWORD DesiredAccess,_In_ AUDIT_EVENT_TYPE AuditType,_In_ DWORD Flags,_Inout_opt_ POBJECT_TYPE_LIST ObjectTypeList,_In_ DWORD ObjectTypeListLength,_In_ PGENERIC_MAPPING GenericMapping,_In_ BOOL ObjectCreation,_Out_ LPDWORD GrantedAccess,_Out_ LPBOOL AccessStatus,_Out_ LPBOOL pfGenerateOnClose)
BOOL WINAPI advapi32.AccessCheckByTypeAndAuditAlarmW(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ LPCTSTR ObjectTypeName,_In_opt_ LPCTSTR ObjectName,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_opt_ PSID PrincipalSelfSid,_In_ DWORD DesiredAccess,_In_ AUDIT_EVENT_TYPE AuditType,_In_ DWORD Flags,_Inout_opt_ POBJECT_TYPE_LIST ObjectTypeList,_In_ DWORD ObjectTypeListLength,_In_ PGENERIC_MAPPING GenericMapping,_In_ BOOL ObjectCreation,_Out_ LPDWORD GrantedAccess,_Out_ LPBOOL AccessStatus,_Out_ LPBOOL pfGenerateOnClose)
BOOL WINAPI advapi32.AccessCheckByType(_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_opt_ PSID PrincipalSelfSid,_In_ HANDLE ClientToken,_In_ DWORD DesiredAccess,_Inout_opt_ POBJECT_TYPE_LIST ObjectTypeList,_In_ DWORD ObjectTypeListLength,_In_ PGENERIC_MAPPING GenericMapping,_Out_opt_ PPRIVILEGE_SET PrivilegeSet,_Inout_ LPDWORD PrivilegeSetLength,_Out_ LPDWORD GrantedAccess,_Out_ LPBOOL AccessStatus)
BOOL WINAPI advapi32.AccessCheckByTypeResultListAndAuditAlarmA(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ LPCTSTR ObjectTypeName,_In_opt_ LPCTSTR ObjectName,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_opt_ PSID PrincipalSelfSid,_In_ DWORD DesiredAccess,_In_ AUDIT_EVENT_TYPE AuditType,_In_ DWORD Flags,_Inout_opt_ POBJECT_TYPE_LIST ObjectTypeList,_In_ DWORD ObjectTypeListLength,_In_ PGENERIC_MAPPING GenericMapping,_In_ BOOL ObjectCreation,_Out_ LPDWORD GrantedAccess,_Out_ LPDWORD AccessStatusList,_Out_ LPBOOL pfGenerateOnClose)
BOOL WINAPI advapi32.AccessCheckByTypeResultListAndAuditAlarmByHandleA(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ HANDLE ClientToken,_In_ LPCTSTR ObjectTypeName,_In_opt_ LPCTSTR ObjectName,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_opt_ PSID PrincipalSelfSid,_In_ DWORD DesiredAccess,_In_ AUDIT_EVENT_TYPE AuditType,_In_ DWORD Flags,_Inout_opt_ POBJECT_TYPE_LIST ObjectTypeList,_In_ DWORD ObjectTypeListLength,_In_ PGENERIC_MAPPING GenericMapping,_In_ BOOL ObjectCreation,_Out_ LPDWORD GrantedAccess,_Out_ LPDWORD AccessStatusList,_Out_ LPBOOL pfGenerateOnClose)
BOOL WINAPI advapi32.AccessCheckByTypeResultListAndAuditAlarmByHandle(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ HANDLE ClientToken,_In_ LPCTSTR ObjectTypeName,_In_opt_ LPCTSTR ObjectName,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_opt_ PSID PrincipalSelfSid,_In_ DWORD DesiredAccess,_In_ AUDIT_EVENT_TYPE AuditType,_In_ DWORD Flags,_Inout_opt_ POBJECT_TYPE_LIST ObjectTypeList,_In_ DWORD ObjectTypeListLength,_In_ PGENERIC_MAPPING GenericMapping,_In_ BOOL ObjectCreation,_Out_ LPDWORD GrantedAccess,_Out_ LPDWORD AccessStatusList,_Out_ LPBOOL pfGenerateOnClose)
BOOL WINAPI advapi32.AccessCheckByTypeResultListAndAuditAlarmByHandleW(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ HANDLE ClientToken,_In_ LPCTSTR ObjectTypeName,_In_opt_ LPCTSTR ObjectName,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_opt_ PSID PrincipalSelfSid,_In_ DWORD DesiredAccess,_In_ AUDIT_EVENT_TYPE AuditType,_In_ DWORD Flags,_Inout_opt_ POBJECT_TYPE_LIST ObjectTypeList,_In_ DWORD ObjectTypeListLength,_In_ PGENERIC_MAPPING GenericMapping,_In_ BOOL ObjectCreation,_Out_ LPDWORD GrantedAccess,_Out_ LPDWORD AccessStatusList,_Out_ LPBOOL pfGenerateOnClose)
BOOL WINAPI advapi32.AccessCheckByTypeResultListAndAuditAlarm(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ LPCTSTR ObjectTypeName,_In_opt_ LPCTSTR ObjectName,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_opt_ PSID PrincipalSelfSid,_In_ DWORD DesiredAccess,_In_ AUDIT_EVENT_TYPE AuditType,_In_ DWORD Flags,_Inout_opt_ POBJECT_TYPE_LIST ObjectTypeList,_In_ DWORD ObjectTypeListLength,_In_ PGENERIC_MAPPING GenericMapping,_In_ BOOL ObjectCreation,_Out_ LPDWORD GrantedAccess,_Out_ LPDWORD AccessStatusList,_Out_ LPBOOL pfGenerateOnClose)
BOOL WINAPI advapi32.AccessCheckByTypeResultListAndAuditAlarmW(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ LPCTSTR ObjectTypeName,_In_opt_ LPCTSTR ObjectName,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_opt_ PSID PrincipalSelfSid,_In_ DWORD DesiredAccess,_In_ AUDIT_EVENT_TYPE AuditType,_In_ DWORD Flags,_Inout_opt_ POBJECT_TYPE_LIST ObjectTypeList,_In_ DWORD ObjectTypeListLength,_In_ PGENERIC_MAPPING GenericMapping,_In_ BOOL ObjectCreation,_Out_ LPDWORD GrantedAccess,_Out_ LPDWORD AccessStatusList,_Out_ LPBOOL pfGenerateOnClose)
BOOL WINAPI advapi32.AccessCheckByTypeResultList(_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_opt_ PSID PrincipalSelfSid,_In_ HANDLE ClientToken,_In_ DWORD DesiredAccess,_Inout_opt_ POBJECT_TYPE_LIST ObjectTypeList,_In_ DWORD ObjectTypeListLength,_Out_ PGENERIC_MAPPING GenericMapping,_Out_opt_ PPRIVILEGE_SET PrivilegeSet,_Inout_ LPDWORD PrivilegeSetLength,_Out_ LPDWORD GrantedAccessList,_Out_ LPDWORD AccessStatusList)
BOOL WINAPI advapi32.AccessCheck(_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_ HANDLE ClientToken,_In_ DWORD DesiredAccess,_In_ PGENERIC_MAPPING GenericMapping,_Out_opt_ PPRIVILEGE_SET PrivilegeSet,_Inout_ LPDWORD PrivilegeSetLength,_Out_ LPDWORD GrantedAccess,_Out_ LPBOOL AccessStatus)
BOOL WINAPI advapi32.AddAccessAllowedAceEx(_Inout_ PACL pAcl,_In_ DWORD dwAceRevision,_In_ DWORD AceFlags,_In_ DWORD AccessMask,_In_ PSID pSid)
BOOL WINAPI advapi32.AddAccessAllowedAce(_Inout_ PACL pAcl,_In_ DWORD dwAceRevision,_In_ DWORD AccessMask,_In_ PSID pSid)
BOOL WINAPI advapi32.AddAccessAllowedObjectAce(_Inout_ PACL pAcl,_In_ DWORD dwAceRevision,_In_ DWORD AceFlags,_In_ DWORD AccessMask,_In_opt_ GUID *ObjectTypeGuid,_In_opt_ GUID *InheritedObjectTypeGuid,_In_ PSID pSid)
BOOL WINAPI advapi32.AddAccessDeniedAceEx(_Inout_ PACL pAcl,_In_ DWORD dwAceRevision,_In_ DWORD AceFlags,_In_ DWORD AccessMask,_In_ PSID pSid)
BOOL WINAPI advapi32.AddAccessDeniedAce(_Inout_ PACL pAcl,_In_ DWORD dwAceRevision,_In_ DWORD AccessMask,_In_ PSID pSid)
BOOL WINAPI advapi32.AddAccessDeniedObjectAce(_Inout_ PACL pAcl,_In_ DWORD dwAceRevision,_In_ DWORD AceFlags,_In_ DWORD AccessMask,_In_opt_ GUID *ObjectTypeGuid,_In_opt_ GUID *InheritedObjectTypeGuid,_In_ PSID pSid)
BOOL WINAPI advapi32.AddAce(_Inout_ PACL pAcl,_In_ DWORD dwAceRevision,_In_ DWORD dwStartingAceIndex,_In_ LPVOID pAceList,_In_ DWORD nAceListLength)
BOOL WINAPI advapi32.AddAuditAccessAceEx(_Inout_ PACL pAcl,_In_ DWORD dwAceRevision,_In_ DWORD AceFlags,_In_ DWORD dwAccessMask,_In_ PSID pSid,_In_ BOOL bAuditSuccess,_In_ BOOL bAuditFailure)
BOOL WINAPI advapi32.AddAuditAccessAce(_Inout_ PACL pAcl,_In_ DWORD dwAceRevision,_In_ DWORD dwAccessMask,_In_ PSID pSid,_In_ BOOL bAuditSuccess,_In_ BOOL bAuditFailure)
BOOL WINAPI advapi32.AddAuditAccessObjectAce(_Inout_ PACL pAcl,_In_ DWORD dwAceRevision,_In_ DWORD AceFlags,_In_ DWORD AccessMask,_In_opt_ GUID *ObjectTypeGuid,_In_opt_ GUID *InheritedObjectTypeGuid,_In_ PSID pSid,_In_ BOOL bAuditSuccess,_In_ BOOL bAuditFailure)
BOOL WINAPI advapi32.AddConditionalAce(_Inout_ PACL pAcl,_In_ DWORD dwAceRevision,_In_ DWORD AceFlags,_In_ UCHAR AceType,_In_ DWORD AccessMask,_In_ PSID pSid,_In_ PWCHAR ConditionStr,_Out_ DWORD *ReturnLength)
BOOL WINAPI advapi32.AddMandatoryAce(_Inout_ PACL pAcl,_In_ DWORD dwAceRevision,_In_ DWORD AceFlags,_In_ DWORD MandatoryPolicy,_In_ PSID pLabelSid)
BOOL WINAPI advapi32.AdjustTokenGroups(_In_ HANDLE TokenHandle,_In_ BOOL ResetToDefault,_In_opt_ PTOKEN_GROUPS NewState,_In_ DWORD BufferLength,_Out_opt_ PTOKEN_GROUPS PreviousState,_Out_opt_ PDWORD ReturnLength)
BOOL WINAPI advapi32.AdjustTokenPrivileges(_In_ HANDLE TokenHandle,_In_ BOOL DisableAllPrivileges,_In_opt_ PTOKEN_PRIVILEGES NewState,_In_ DWORD BufferLength,_Out_opt_ PTOKEN_PRIVILEGES PreviousState,_Out_opt_ PDWORD ReturnLength)
BOOL WINAPI advapi32.AllocateAndInitializeSid(_In_ PSID_IDENTIFIER_AUTHORITY pIdentifierAuthority,_In_ BYTE nSubAuthorityCount,_In_ DWORD dwSubAuthority0,_In_ DWORD dwSubAuthority1,_In_ DWORD dwSubAuthority2,_In_ DWORD dwSubAuthority3,_In_ DWORD dwSubAuthority4,_In_ DWORD dwSubAuthority5,_In_ DWORD dwSubAuthority6,_In_ DWORD dwSubAuthority7,_Out_ PSID *pSid)
BOOL WINAPI advapi32.AllocateLocallyUniqueId(_Out_ PLUID Luid)
BOOL WINAPI advapi32.AreAllAccessesGranted(_In_ DWORD GrantedAccess,_In_ DWORD DesiredAccess)
BOOL WINAPI advapi32.AreAnyAccessesGranted(_In_ DWORD GrantedAccess,_In_ DWORD DesiredAccess)
BOOL WINAPI advapi32.ChangeServiceConfig2A(_In_ SC_HANDLE hService,_In_ DWORD dwInfoLevel,_In_opt_ LPVOID lpInfo)
BOOL WINAPI advapi32.ChangeServiceConfig2(_In_ SC_HANDLE hService,_In_ DWORD dwInfoLevel,_In_opt_ LPVOID lpInfo)
BOOL WINAPI advapi32.ChangeServiceConfig2W(_In_ SC_HANDLE hService,_In_ DWORD dwInfoLevel,_In_opt_ LPVOID lpInfo)
BOOL WINAPI advapi32.ChangeServiceConfigA(_In_ SC_HANDLE hService,_In_ DWORD dwServiceType,_In_ DWORD dwStartType,_In_ DWORD dwErrorControl,_In_opt_ LPCTSTR lpBinaryPathName,_In_opt_ LPCTSTR lpLoadOrderGroup,_Out_opt_ LPDWORD lpdwTagId,_In_opt_ LPCTSTR lpDependencies,_In_opt_ LPCTSTR lpServiceStartName,_In_opt_ LPCTSTR lpPassword,_In_opt_ LPCTSTR lpDisplayName)
BOOL WINAPI advapi32.ChangeServiceConfig(_In_ SC_HANDLE hService,_In_ DWORD dwServiceType,_In_ DWORD dwStartType,_In_ DWORD dwErrorControl,_In_opt_ LPCTSTR lpBinaryPathName,_In_opt_ LPCTSTR lpLoadOrderGroup,_Out_opt_ LPDWORD lpdwTagId,_In_opt_ LPCTSTR lpDependencies,_In_opt_ LPCTSTR lpServiceStartName,_In_opt_ LPCTSTR lpPassword,_In_opt_ LPCTSTR lpDisplayName)
BOOL WINAPI advapi32.ChangeServiceConfigW(_In_ SC_HANDLE hService,_In_ DWORD dwServiceType,_In_ DWORD dwStartType,_In_ DWORD dwErrorControl,_In_opt_ LPCTSTR lpBinaryPathName,_In_opt_ LPCTSTR lpLoadOrderGroup,_Out_opt_ LPDWORD lpdwTagId,_In_opt_ LPCTSTR lpDependencies,_In_opt_ LPCTSTR lpServiceStartName,_In_opt_ LPCTSTR lpPassword,_In_opt_ LPCTSTR lpDisplayName)
BOOL WINAPI advapi32.CheckTokenMembership(_In_opt_ HANDLE TokenHandle,_In_ PSID SidToCheck,_Out_ PBOOL IsMember)
BOOL WINAPI advapi32.CloseServiceHandle(_In_ SC_HANDLE hSCObject)
BOOL WINAPI advapi32.ControlServiceExA(_In_ SC_HANDLE hService,_In_ DWORD dwControl,_In_ DWORD dwInfoLevel,_Inout_ PVOID pControlParams)
BOOL WINAPI advapi32.ControlServiceEx(_In_ SC_HANDLE hService,_In_ DWORD dwControl,_In_ DWORD dwInfoLevel,_Inout_ PVOID pControlParams)
BOOL WINAPI advapi32.ControlServiceExW(_In_ SC_HANDLE hService,_In_ DWORD dwControl,_In_ DWORD dwInfoLevel,_Inout_ PVOID pControlParams)
BOOL WINAPI advapi32.ControlService(_In_ SC_HANDLE hService,_In_ DWORD dwControl,_Out_ LPSERVICE_STATUS lpServiceStatus)
BOOL WINAPI advapi32.ConvertSecurityDescriptorToStringSecurityDescriptorA(_In_ PSECURITY_DESCRIPTOR SecurityDescriptor,_In_ DWORD RequestedStringSDRevision,_In_ SECURITY_INFORMATION SecurityInformation,_Out_ LPTSTR *StringSecurityDescriptor,_Out_ PULONG StringSecurityDescriptorLen)
BOOL WINAPI advapi32.ConvertSecurityDescriptorToStringSecurityDescriptor(_In_ PSECURITY_DESCRIPTOR SecurityDescriptor,_In_ DWORD RequestedStringSDRevision,_In_ SECURITY_INFORMATION SecurityInformation,_Out_ LPTSTR *StringSecurityDescriptor,_Out_ PULONG StringSecurityDescriptorLen)
BOOL WINAPI advapi32.ConvertSecurityDescriptorToStringSecurityDescriptorW(_In_ PSECURITY_DESCRIPTOR SecurityDescriptor,_In_ DWORD RequestedStringSDRevision,_In_ SECURITY_INFORMATION SecurityInformation,_Out_ LPTSTR *StringSecurityDescriptor,_Out_ PULONG StringSecurityDescriptorLen)
BOOL WINAPI advapi32.ConvertStringSecurityDescriptorToSecurityDescriptorA(_In_ LPCTSTR StringSecurityDescriptor,_In_ DWORD StringSDRevision,_Out_ PSECURITY_DESCRIPTOR *SecurityDescriptor,_Out_ PULONG SecurityDescriptorSize)
BOOL WINAPI advapi32.ConvertStringSecurityDescriptorToSecurityDescriptor(_In_ LPCTSTR StringSecurityDescriptor,_In_ DWORD StringSDRevision,_Out_ PSECURITY_DESCRIPTOR *SecurityDescriptor,_Out_ PULONG SecurityDescriptorSize)
BOOL WINAPI advapi32.ConvertStringSecurityDescriptorToSecurityDescriptorW(_In_ LPCTSTR StringSecurityDescriptor,_In_ DWORD StringSDRevision,_Out_ PSECURITY_DESCRIPTOR *SecurityDescriptor,_Out_ PULONG SecurityDescriptorSize)
BOOL WINAPI advapi32.ConvertStringSidToSidA(_In_ LPCTSTR StringSid,_Out_ PSID *Sid)
BOOL WINAPI advapi32.ConvertStringSidToSid(_In_ LPCTSTR StringSid,_Out_ PSID *Sid)
BOOL WINAPI advapi32.ConvertStringSidToSidW(_In_ LPCTSTR StringSid,_Out_ PSID *Sid)
BOOL WINAPI advapi32.ConvertToAutoInheritPrivateObjectSecurity(_In_opt_ PSECURITY_DESCRIPTOR ParentDescriptor,_In_ PSECURITY_DESCRIPTOR CurrentSecurityDescriptor,_Out_ PSECURITY_DESCRIPTOR *NewSecurityDescriptor,_In_opt_ GUID *ObjectType,_In_ BOOLEAN IsDirectoryObject,_In_ PGENERIC_MAPPING GenericMapping)
BOOL WINAPI advapi32.CopySid(_In_ DWORD nDestinationSidLength,_Out_ PSID pDestinationSid,_In_ PSID pSourceSid)
BOOL WINAPI advapi32.CreatePrivateObjectSecurityEx(_In_opt_ PSECURITY_DESCRIPTOR ParentDescriptor,_In_opt_ PSECURITY_DESCRIPTOR CreatorDescriptor,_Out_ PSECURITY_DESCRIPTOR *NewDescriptor,_In_opt_ GUID *ObjectType,_In_ BOOL IsContainerObject,_In_ ULONG AutoInheritFlags,_In_opt_ HANDLE Token,_In_ PGENERIC_MAPPING GenericMapping)
BOOL WINAPI advapi32.CreatePrivateObjectSecurity(_In_opt_ PSECURITY_DESCRIPTOR ParentDescriptor,_In_opt_ PSECURITY_DESCRIPTOR CreatorDescriptor,_Out_ PSECURITY_DESCRIPTOR *NewDescriptor,_In_ BOOL IsDirectoryObject,_In_opt_ HANDLE Token,_In_ PGENERIC_MAPPING GenericMapping)
BOOL WINAPI advapi32.CreatePrivateObjectSecurityWithMultipleInheritance(_In_opt_ PSECURITY_DESCRIPTOR ParentDescriptor,_In_opt_ PSECURITY_DESCRIPTOR CreatorDescriptor,_Out_ PSECURITY_DESCRIPTOR *NewDescriptor,_In_opt_ GUID **ObjectTypes,_In_ ULONG GuidCount,_In_ BOOL IsContainerObject,_In_ ULONG AutoInheritFlags,_In_opt_ HANDLE Token,_In_ PGENERIC_MAPPING GenericMapping)
BOOL WINAPI advapi32.CreateProcessAsUserA(_In_opt_ HANDLE hToken,_In_opt_ LPCTSTR lpApplicationName,_Inout_opt_ LPTSTR lpCommandLine,_In_opt_ LPSECURITY_ATTRIBUTES lpProcessAttributes,_In_opt_ LPSECURITY_ATTRIBUTES lpThreadAttributes,_In_ BOOL bInheritHandles,_In_ DWORD dwCreationFlags,_In_opt_ LPVOID lpEnvironment,_In_opt_ LPCTSTR lpCurrentDirectory,_In_ LPSTARTUPINFO lpStartupInfo,_Out_ LPPROCESS_INFORMATION lpProcessInformation)
BOOL WINAPI advapi32.CreateProcessAsUser(_In_opt_ HANDLE hToken,_In_opt_ LPCTSTR lpApplicationName,_Inout_opt_ LPTSTR lpCommandLine,_In_opt_ LPSECURITY_ATTRIBUTES lpProcessAttributes,_In_opt_ LPSECURITY_ATTRIBUTES lpThreadAttributes,_In_ BOOL bInheritHandles,_In_ DWORD dwCreationFlags,_In_opt_ LPVOID lpEnvironment,_In_opt_ LPCTSTR lpCurrentDirectory,_In_ LPSTARTUPINFO lpStartupInfo,_Out_ LPPROCESS_INFORMATION lpProcessInformation)
BOOL WINAPI advapi32.CreateProcessAsUserW(_In_opt_ HANDLE hToken,_In_opt_ LPCTSTR lpApplicationName,_Inout_opt_ LPTSTR lpCommandLine,_In_opt_ LPSECURITY_ATTRIBUTES lpProcessAttributes,_In_opt_ LPSECURITY_ATTRIBUTES lpThreadAttributes,_In_ BOOL bInheritHandles,_In_ DWORD dwCreationFlags,_In_opt_ LPVOID lpEnvironment,_In_opt_ LPCTSTR lpCurrentDirectory,_In_ LPSTARTUPINFO lpStartupInfo,_Out_ LPPROCESS_INFORMATION lpProcessInformation)
BOOL WINAPI advapi32.CreateProcessWithLogonW(_In_ LPCWSTR lpUsername,_In_opt_ LPCWSTR lpDomain,_In_ LPCWSTR lpPassword,_In_ DWORD dwLogonFlags,_In_opt_ LPCWSTR lpApplicationName,_Inout_opt_ LPWSTR lpCommandLine,_In_ DWORD dwCreationFlags,_In_opt_ LPVOID lpEnvironment,_In_opt_ LPCWSTR lpCurrentDirectory,_In_ LPSTARTUPINFOW lpStartupInfo,_Out_ LPPROCESS_INFORMATION lpProcessInfo)
BOOL WINAPI advapi32.CreateProcessWithTokenW(_In_ HANDLE hToken,_In_ DWORD dwLogonFlags,_In_opt_ LPCWSTR lpApplicationName,_Inout_opt_ LPWSTR lpCommandLine,_In_ DWORD dwCreationFlags,_In_opt_ LPVOID lpEnvironment,_In_opt_ LPCWSTR lpCurrentDirectory,_In_ LPSTARTUPINFOW lpStartupInfo,_Out_ LPPROCESS_INFORMATION lpProcessInfo)
BOOL WINAPI advapi32.CreateRestrictedToken(_In_ HANDLE ExistingTokenHandle,_In_ DWORD Flags,_In_ DWORD DisableSidCount,_In_opt_ PSID_AND_ATTRIBUTES SidsToDisable,_In_ DWORD DeletePrivilegeCount,_In_opt_ PLUID_AND_ATTRIBUTES PrivilegesToDelete,_In_ DWORD RestrictedSidCount,_In_opt_ PSID_AND_ATTRIBUTES SidsToRestrict,_Out_ PHANDLE NewTokenHandle)
BOOL WINAPI advapi32.CreateWellKnownSid(_In_ WELL_KNOWN_SID_TYPE WellKnownSidType,_In_opt_ PSID DomainSid,_Out_opt_ PSID pSid,_Inout_ DWORD *cbSid)
BOOL WINAPI advapi32.CredFindBestCredentialA(_In_ LPCTSTR TargetName,_In_ DWORD Type,_In_ DWORD Flags,_Out_ PCREDENTIAL *Credential)
BOOL WINAPI advapi32.CredFindBestCredential(_In_ LPCTSTR TargetName,_In_ DWORD Type,_In_ DWORD Flags,_Out_ PCREDENTIAL *Credential)
BOOL WINAPI advapi32.CredFindBestCredentialW(_In_ LPCTSTR TargetName,_In_ DWORD Type,_In_ DWORD Flags,_Out_ PCREDENTIAL *Credential)
BOOL WINAPI advapi32.CredIsProtectedA(_In_ LPTSTR pszProtectedCredentials,_Out_ CRED_PROTECTION_TYPE *pProtectionType)
BOOL WINAPI advapi32.CredIsProtected(_In_ LPTSTR pszProtectedCredentials,_Out_ CRED_PROTECTION_TYPE *pProtectionType)
BOOL WINAPI advapi32.CredIsProtectedW(_In_ LPTSTR pszProtectedCredentials,_Out_ CRED_PROTECTION_TYPE *pProtectionType)
BOOL WINAPI advapi32.CredProtectA(_In_ BOOL fAsSelf,_In_ LPTSTR pszCredentials,_In_ DWORD cchCredentials,_Out_ LPTSTR pszProtectedCredentials,_Inout_ DWORD *pcchMaxChars,_Out_ CRED_PROTECTION_TYPE *ProtectionType)
BOOL WINAPI advapi32.CredProtect(_In_ BOOL fAsSelf,_In_ LPTSTR pszCredentials,_In_ DWORD cchCredentials,_Out_ LPTSTR pszProtectedCredentials,_Inout_ DWORD *pcchMaxChars,_Out_ CRED_PROTECTION_TYPE *ProtectionType)
BOOL WINAPI advapi32.CredProtectW(_In_ BOOL fAsSelf,_In_ LPTSTR pszCredentials,_In_ DWORD cchCredentials,_Out_ LPTSTR pszProtectedCredentials,_Inout_ DWORD *pcchMaxChars,_Out_ CRED_PROTECTION_TYPE *ProtectionType)
BOOL WINAPI advapi32.CredUnprotectA(_In_ BOOL fAsSelf,_In_ LPTSTR pszProtectedCredentials,_In_ DWORD cchCredentials,_Out_ LPTSTR pszCredentials,_Inout_ DWORD *pcchMaxChars)
BOOL WINAPI advapi32.CredUnprotect(_In_ BOOL fAsSelf,_In_ LPTSTR pszProtectedCredentials,_In_ DWORD cchCredentials,_Out_ LPTSTR pszCredentials,_Inout_ DWORD *pcchMaxChars)
BOOL WINAPI advapi32.CredUnprotectW(_In_ BOOL fAsSelf,_In_ LPTSTR pszProtectedCredentials,_In_ DWORD cchCredentials,_Out_ LPTSTR pszCredentials,_Inout_ DWORD *pcchMaxChars)
BOOL WINAPI advapi32.CryptAcquireContextA(_Out_ HCRYPTPROV *phProv,_In_ LPCTSTR pszContainer,_In_ LPCTSTR pszProvider,_In_ DWORD dwProvType,_In_ DWORD dwFlags)
BOOL WINAPI advapi32.CryptAcquireContext(_Out_ HCRYPTPROV *phProv,_In_ LPCTSTR pszContainer,_In_ LPCTSTR pszProvider,_In_ DWORD dwProvType,_In_ DWORD dwFlags)
BOOL WINAPI advapi32.CryptAcquireContextW(_Out_ HCRYPTPROV *phProv,_In_ LPCTSTR pszContainer,_In_ LPCTSTR pszProvider,_In_ DWORD dwProvType,_In_ DWORD dwFlags)
BOOL WINAPI advapi32.CryptContextAddRef(_In_ HCRYPTPROV hProv,_In_ DWORD *pdwReserved,_In_ DWORD dwFlags)
BOOL WINAPI advapi32.CryptCreateHash(_In_ HCRYPTPROV hProv,_In_ ALG_ID Algid,_In_ HCRYPTKEY hKey,_In_ DWORD dwFlags,_Out_ HCRYPTHASH *phHash)
BOOL WINAPI advapi32.CryptDecrypt(_In_ HCRYPTKEY hKey,_In_ HCRYPTHASH hHash,_In_ BOOL Final,_In_ DWORD dwFlags,_Inout_ BYTE *pbData,_Inout_ DWORD *pdwDataLen)
BOOL WINAPI advapi32.CryptDeriveKey(_In_ HCRYPTPROV hProv,_In_ ALG_ID Algid,_In_ HCRYPTHASH hBaseData,_In_ DWORD dwFlags,_Inout_ HCRYPTKEY *phKey)
BOOL WINAPI advapi32.CryptDestroyHash(_In_ HCRYPTHASH hHash)
BOOL WINAPI advapi32.CryptDestroyKey(_In_ HCRYPTKEY hKey)
BOOL WINAPI advapi32.CryptDuplicateHash(_In_ HCRYPTHASH hHash,_In_ DWORD *pdwReserved,_In_ DWORD dwFlags,_Out_ HCRYPTHASH *phHash)
BOOL WINAPI advapi32.CryptDuplicateKey(_In_ HCRYPTKEY hKey,_In_ DWORD *pdwReserved,_In_ DWORD dwFlags,_Out_ HCRYPTKEY *phKey)
BOOL WINAPI advapi32.CryptEncrypt(_In_ HCRYPTKEY hKey,_In_ HCRYPTHASH hHash,_In_ BOOL Final,_In_ DWORD dwFlags,_Inout_ BYTE *pbData,_Inout_ DWORD *pdwDataLen,_In_ DWORD dwBufLen)
BOOL WINAPI advapi32.CryptEnumProvidersA(_In_ DWORD dwIndex,_In_ DWORD *pdwReserved,_In_ DWORD dwFlags,_Out_ DWORD *pdwProvType,_Out_ LPTSTR pszProvName,_Inout_ DWORD *pcbProvName)
BOOL WINAPI advapi32.CryptEnumProviders(_In_ DWORD dwIndex,_In_ DWORD *pdwReserved,_In_ DWORD dwFlags,_Out_ DWORD *pdwProvType,_Out_ LPTSTR pszProvName,_Inout_ DWORD *pcbProvName)
BOOL WINAPI advapi32.CryptEnumProvidersW(_In_ DWORD dwIndex,_In_ DWORD *pdwReserved,_In_ DWORD dwFlags,_Out_ DWORD *pdwProvType,_Out_ LPTSTR pszProvName,_Inout_ DWORD *pcbProvName)
BOOL WINAPI advapi32.CryptEnumProviderTypesA(_In_ DWORD dwIndex,_In_ DWORD *pdwReserved,_In_ DWORD dwFlags,_Out_ DWORD *pdwProvType,_Out_ LPTSTR pszTypeName,_Inout_ DWORD *pcbTypeName)
BOOL WINAPI advapi32.CryptEnumProviderTypes(_In_ DWORD dwIndex,_In_ DWORD *pdwReserved,_In_ DWORD dwFlags,_Out_ DWORD *pdwProvType,_Out_ LPTSTR pszTypeName,_Inout_ DWORD *pcbTypeName)
BOOL WINAPI advapi32.CryptEnumProviderTypesW(_In_ DWORD dwIndex,_In_ DWORD *pdwReserved,_In_ DWORD dwFlags,_Out_ DWORD *pdwProvType,_Out_ LPTSTR pszTypeName,_Inout_ DWORD *pcbTypeName)
BOOL WINAPI advapi32.CryptExportKey(_In_ HCRYPTKEY hKey,_In_ HCRYPTKEY hExpKey,_In_ DWORD dwBlobType,_In_ DWORD dwFlags,_Out_ BYTE *pbData,_Inout_ DWORD *pdwDataLen)
BOOL WINAPI advapi32.CryptGenKey(_In_ HCRYPTPROV hProv,_In_ ALG_ID Algid,_In_ DWORD dwFlags,_Out_ HCRYPTKEY *phKey)
BOOL WINAPI advapi32.CryptGenRandom(_In_ HCRYPTPROV hProv,_In_ DWORD dwLen,_Inout_ BYTE *pbBuffer)
BOOL WINAPI advapi32.CryptGetDefaultProviderA(_In_ DWORD dwProvType,_In_ DWORD *pdwReserved,_In_ DWORD dwFlags,_Out_ LPTSTR pszProvName,_Inout_ DWORD *pcbProvName)
BOOL WINAPI advapi32.CryptGetDefaultProvider(_In_ DWORD dwProvType,_In_ DWORD *pdwReserved,_In_ DWORD dwFlags,_Out_ LPTSTR pszProvName,_Inout_ DWORD *pcbProvName)
BOOL WINAPI advapi32.CryptGetDefaultProviderW(_In_ DWORD dwProvType,_In_ DWORD *pdwReserved,_In_ DWORD dwFlags,_Out_ LPTSTR pszProvName,_Inout_ DWORD *pcbProvName)
BOOL WINAPI advapi32.CryptGetHashParam(_In_ HCRYPTHASH hHash,_In_ DWORD dwParam,_Out_ BYTE *pbData,_Inout_ DWORD *pdwDataLen,_In_ DWORD dwFlags)
BOOL WINAPI advapi32.CryptGetKeyParam(_In_ HCRYPTKEY hKey,_In_ DWORD dwParam,_Out_ BYTE *pbData,_Inout_ DWORD *pdwDataLen,_In_ DWORD dwFlags)
BOOL WINAPI advapi32.CryptGetProvParam(_In_ HCRYPTPROV hProv,_In_ DWORD dwParam,_Out_ BYTE *pbData,_Inout_ DWORD *pdwDataLen,_In_ DWORD dwFlags)
BOOL WINAPI advapi32.CryptGetUserKey(_In_ HCRYPTPROV hProv,_In_ DWORD dwKeySpec,_Out_ HCRYPTKEY *phUserKey)
BOOL WINAPI advapi32.CryptHashData(_In_ HCRYPTHASH hHash,_In_ BYTE *pbData,_In_ DWORD dwDataLen,_In_ DWORD dwFlags)
BOOL WINAPI advapi32.CryptHashSessionKey(_In_ HCRYPTHASH hHash,_In_ HCRYPTKEY hKey,_In_ DWORD dwFlags)
BOOL WINAPI advapi32.CryptImportKey(_In_ HCRYPTPROV hProv,_In_ BYTE *pbData,_In_ DWORD dwDataLen,_In_ HCRYPTKEY hPubKey,_In_ DWORD dwFlags,_Out_ HCRYPTKEY *phKey)
BOOL WINAPI advapi32.CryptReleaseContext(_In_ HCRYPTPROV hProv,_In_ DWORD dwFlags)
BOOL WINAPI advapi32.CryptSetProviderA(_In_ LPCTSTR pszProvName,_In_ DWORD dwProvType)
BOOL WINAPI advapi32.CryptSetProviderExA(_In_ LPCTSTR pszProvName,_In_ DWORD dwProvType,_In_ DWORD *pdwReserved,_In_ DWORD dwFlags)
BOOL WINAPI advapi32.CryptSetProviderEx(_In_ LPCTSTR pszProvName,_In_ DWORD dwProvType,_In_ DWORD *pdwReserved,_In_ DWORD dwFlags)
BOOL WINAPI advapi32.CryptSetProviderExW(_In_ LPCTSTR pszProvName,_In_ DWORD dwProvType,_In_ DWORD *pdwReserved,_In_ DWORD dwFlags)
BOOL WINAPI advapi32.CryptSetProvider(_In_ LPCTSTR pszProvName,_In_ DWORD dwProvType)
BOOL WINAPI advapi32.CryptSetProviderW(_In_ LPCTSTR pszProvName,_In_ DWORD dwProvType)
BOOL WINAPI advapi32.CryptSignHashA(_In_ HCRYPTHASH hHash,_In_ DWORD dwKeySpec,_In_ LPCTSTR sDescription,_In_ DWORD dwFlags,_Out_ BYTE *pbSignature,_Inout_ DWORD *pdwSigLen)
BOOL WINAPI advapi32.CryptSignHash(_In_ HCRYPTHASH hHash,_In_ DWORD dwKeySpec,_In_ LPCTSTR sDescription,_In_ DWORD dwFlags,_Out_ BYTE *pbSignature,_Inout_ DWORD *pdwSigLen)
BOOL WINAPI advapi32.CryptSignHashW(_In_ HCRYPTHASH hHash,_In_ DWORD dwKeySpec,_In_ LPCTSTR sDescription,_In_ DWORD dwFlags,_Out_ BYTE *pbSignature,_Inout_ DWORD *pdwSigLen)
BOOL WINAPI advapi32.CryptVerifySignatureA(_In_ HCRYPTHASH hHash,_In_ BYTE *pbSignature,_In_ DWORD dwSigLen,_In_ HCRYPTKEY hPubKey,_In_ LPCTSTR sDescription,_In_ DWORD dwFlags)
BOOL WINAPI advapi32.CryptVerifySignature(_In_ HCRYPTHASH hHash,_In_ BYTE *pbSignature,_In_ DWORD dwSigLen,_In_ HCRYPTKEY hPubKey,_In_ LPCTSTR sDescription,_In_ DWORD dwFlags)
BOOL WINAPI advapi32.CryptVerifySignatureW(_In_ HCRYPTHASH hHash,_In_ BYTE *pbSignature,_In_ DWORD dwSigLen,_In_ HCRYPTKEY hPubKey,_In_ LPCTSTR sDescription,_In_ DWORD dwFlags)
BOOL WINAPI advapi32.DecryptFileA(_In_ LPCTSTR lpFileName,_Reserved_ DWORD dwReserved)
BOOL WINAPI advapi32.DecryptFile(_In_ LPCTSTR lpFileName,_Reserved_ DWORD dwReserved)
BOOL WINAPI advapi32.DecryptFileW(_In_ LPCTSTR lpFileName,_Reserved_ DWORD dwReserved)
BOOL WINAPI advapi32.DeleteAce(_Inout_ PACL pAcl,_In_ DWORD dwAceIndex)
BOOL WINAPI advapi32.DeleteService(_In_ SC_HANDLE hService)
BOOL WINAPI advapi32.DestroyPrivateObjectSecurity(_Inout_ PSECURITY_DESCRIPTOR *ObjectDescriptor)
BOOL WINAPI advapi32.DuplicateTokenEx(_In_ HANDLE hExistingToken,_In_ DWORD dwDesiredAccess,_In_opt_ LPSECURITY_ATTRIBUTES lpTokenAttributes,_In_ SECURITY_IMPERSONATION_LEVEL ImpersonationLevel,_In_ TOKEN_TYPE TokenType,_Out_ PHANDLE phNewToken)
BOOL WINAPI advapi32.DuplicateToken(_In_ HANDLE ExistingTokenHandle,_In_ SECURITY_IMPERSONATION_LEVEL ImpersonationLevel,_Out_ PHANDLE DuplicateTokenHandle)
BOOL WINAPI advapi32.EncryptFileA(_In_ LPCTSTR lpFileName)
BOOL WINAPI advapi32.EncryptFile(_In_ LPCTSTR lpFileName)
BOOL WINAPI advapi32.EncryptFileW(_In_ LPCTSTR lpFileName)
BOOL WINAPI advapi32.EncryptionDisable(_In_ LPCWSTR DirPath,_In_ BOOL Disable)
BOOL WINAPI advapi32.EnumDependentServicesA(_In_ SC_HANDLE hService,_In_ DWORD dwServiceState,_Out_opt_ LPENUM_SERVICE_STATUS lpServices,_In_ DWORD cbBufSize,_Out_ LPDWORD pcbBytesNeeded,_Out_ LPDWORD lpServicesReturned)
BOOL WINAPI advapi32.EnumDependentServices(_In_ SC_HANDLE hService,_In_ DWORD dwServiceState,_Out_opt_ LPENUM_SERVICE_STATUS lpServices,_In_ DWORD cbBufSize,_Out_ LPDWORD pcbBytesNeeded,_Out_ LPDWORD lpServicesReturned)
BOOL WINAPI advapi32.EnumDependentServicesW(_In_ SC_HANDLE hService,_In_ DWORD dwServiceState,_Out_opt_ LPENUM_SERVICE_STATUS lpServices,_In_ DWORD cbBufSize,_Out_ LPDWORD pcbBytesNeeded,_Out_ LPDWORD lpServicesReturned)
BOOL WINAPI advapi32.EnumServicesStatusA(_In_ SC_HANDLE hSCManager,_In_ DWORD dwServiceType,_In_ DWORD dwServiceState,_Out_opt_ LPENUM_SERVICE_STATUS lpServices,_In_ DWORD cbBufSize,_Out_ LPDWORD pcbBytesNeeded,_Out_ LPDWORD lpServicesReturned,_Inout_opt_ LPDWORD lpResumeHandle)
BOOL WINAPI advapi32.EnumServicesStatusExA(_In_ SC_HANDLE hSCManager,_In_ SC_ENUM_TYPE InfoLevel,_In_ DWORD dwServiceType,_In_ DWORD dwServiceState,_Out_opt_ LPBYTE lpServices,_In_ DWORD cbBufSize,_Out_ LPDWORD pcbBytesNeeded,_Out_ LPDWORD lpServicesReturned,_Inout_opt_ LPDWORD lpResumeHandle,_In_opt_ LPCTSTR pszGroupName)
BOOL WINAPI advapi32.EnumServicesStatusEx(_In_ SC_HANDLE hSCManager,_In_ SC_ENUM_TYPE InfoLevel,_In_ DWORD dwServiceType,_In_ DWORD dwServiceState,_Out_opt_ LPBYTE lpServices,_In_ DWORD cbBufSize,_Out_ LPDWORD pcbBytesNeeded,_Out_ LPDWORD lpServicesReturned,_Inout_opt_ LPDWORD lpResumeHandle,_In_opt_ LPCTSTR pszGroupName)
BOOL WINAPI advapi32.EnumServicesStatusExW(_In_ SC_HANDLE hSCManager,_In_ SC_ENUM_TYPE InfoLevel,_In_ DWORD dwServiceType,_In_ DWORD dwServiceState,_Out_opt_ LPBYTE lpServices,_In_ DWORD cbBufSize,_Out_ LPDWORD pcbBytesNeeded,_Out_ LPDWORD lpServicesReturned,_Inout_opt_ LPDWORD lpResumeHandle,_In_opt_ LPCTSTR pszGroupName)
BOOL WINAPI advapi32.EnumServicesStatus(_In_ SC_HANDLE hSCManager,_In_ DWORD dwServiceType,_In_ DWORD dwServiceState,_Out_opt_ LPENUM_SERVICE_STATUS lpServices,_In_ DWORD cbBufSize,_Out_ LPDWORD pcbBytesNeeded,_Out_ LPDWORD lpServicesReturned,_Inout_opt_ LPDWORD lpResumeHandle)
BOOL WINAPI advapi32.EnumServicesStatusW(_In_ SC_HANDLE hSCManager,_In_ DWORD dwServiceType,_In_ DWORD dwServiceState,_Out_opt_ LPENUM_SERVICE_STATUS lpServices,_In_ DWORD cbBufSize,_Out_ LPDWORD pcbBytesNeeded,_Out_ LPDWORD lpServicesReturned,_Inout_opt_ LPDWORD lpResumeHandle)
BOOL WINAPI advapi32.EqualDomainSid(_In_ PSID pSid1,_In_ PSID pSid2,_Out_ BOOL *pfEqual)
BOOL WINAPI advapi32.EqualPrefixSid(_In_ PSID pSid1,_In_ PSID pSid2)
BOOL WINAPI advapi32.EqualSid(_In_ PSID pSid1,_In_ PSID pSid2)
BOOL WINAPI advapi32.FileEncryptionStatusA(_In_ LPCTSTR lpFileName,_Out_ LPDWORD lpStatus)
BOOL WINAPI advapi32.FileEncryptionStatus(_In_ LPCTSTR lpFileName,_Out_ LPDWORD lpStatus)
BOOL WINAPI advapi32.FileEncryptionStatusW(_In_ LPCTSTR lpFileName,_Out_ LPDWORD lpStatus)
BOOL WINAPI advapi32.FindFirstFreeAce(_In_ PACL pAcl,_Out_ LPVOID *pAce)
BOOL WINAPI advapi32.GetAce(_In_ PACL pAcl,_In_ DWORD dwAceIndex,_Out_ LPVOID *pAce)
BOOL WINAPI advapi32.GetAclInformation(_In_ PACL pAcl,_Out_ LPVOID pAclInformation,_In_ DWORD nAclInformationLength,_In_ ACL_INFORMATION_CLASS dwAclInformationClass)
BOOL WINAPI advapi32.GetCurrentHwProfileA(_Out_ LPHW_PROFILE_INFO lpHwProfileInfo)
BOOL WINAPI advapi32.GetCurrentHwProfile(_Out_ LPHW_PROFILE_INFO lpHwProfileInfo)
BOOL WINAPI advapi32.GetCurrentHwProfileW(_Out_ LPHW_PROFILE_INFO lpHwProfileInfo)
BOOL WINAPI advapi32.GetFileSecurityA(_In_ LPCTSTR lpFileName,_In_ SECURITY_INFORMATION RequestedInformation,_Out_opt_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_ DWORD nLength,_Out_ LPDWORD lpnLengthNeeded)
BOOL WINAPI advapi32.GetFileSecurity(_In_ LPCTSTR lpFileName,_In_ SECURITY_INFORMATION RequestedInformation,_Out_opt_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_ DWORD nLength,_Out_ LPDWORD lpnLengthNeeded)
BOOL WINAPI advapi32.GetFileSecurityW(_In_ LPCTSTR lpFileName,_In_ SECURITY_INFORMATION RequestedInformation,_Out_opt_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_ DWORD nLength,_Out_ LPDWORD lpnLengthNeeded)
BOOL WINAPI advapi32.GetKernelObjectSecurity(_In_ HANDLE Handle,_In_ SECURITY_INFORMATION RequestedInformation,_Out_opt_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_ DWORD nLength,_Out_ LPDWORD lpnLengthNeeded)
BOOL WINAPI advapi32.GetPrivateObjectSecurity(_In_ PSECURITY_DESCRIPTOR ObjectDescriptor,_In_ SECURITY_INFORMATION SecurityInformation,_Out_opt_ PSECURITY_DESCRIPTOR ResultantDescriptor,_In_ DWORD DescriptorLength,_Out_ PDWORD ReturnLength)
BOOL WINAPI advapi32.GetSecurityDescriptorControl(_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_Out_ PSECURITY_DESCRIPTOR_CONTROL pControl,_Out_ LPDWORD lpdwRevision)
BOOL WINAPI advapi32.GetSecurityDescriptorDacl(_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_Out_ LPBOOL lpbDaclPresent,_Out_ PACL *pDacl,_Out_ LPBOOL lpbDaclDefaulted)
BOOL WINAPI advapi32.GetSecurityDescriptorGroup(_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_Out_ PSID *pGroup,_Out_ LPBOOL lpbGroupDefaulted)
BOOL WINAPI advapi32.GetSecurityDescriptorOwner(_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_Out_ PSID *pOwner,_Out_ LPBOOL lpbOwnerDefaulted)
BOOL WINAPI advapi32.GetSecurityDescriptorSacl(_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_Out_ LPBOOL lpbSaclPresent,_Out_ PACL *pSacl,_Out_ LPBOOL lpbSaclDefaulted)
BOOL WINAPI advapi32.GetServiceDisplayNameA(_In_ SC_HANDLE hSCManager,_In_ LPCTSTR lpServiceName,_Out_opt_ LPTSTR lpDisplayName,_Inout_ LPDWORD lpcchBuffer)
BOOL WINAPI advapi32.GetServiceDisplayName(_In_ SC_HANDLE hSCManager,_In_ LPCTSTR lpServiceName,_Out_opt_ LPTSTR lpDisplayName,_Inout_ LPDWORD lpcchBuffer)
BOOL WINAPI advapi32.GetServiceDisplayNameW(_In_ SC_HANDLE hSCManager,_In_ LPCTSTR lpServiceName,_Out_opt_ LPTSTR lpDisplayName,_Inout_ LPDWORD lpcchBuffer)
BOOL WINAPI advapi32.GetServiceKeyNameA(_In_ SC_HANDLE hSCManager,_In_ LPCTSTR lpDisplayName,_Out_opt_ LPTSTR lpServiceName,_Inout_ LPDWORD lpcchBuffer)
BOOL WINAPI advapi32.GetServiceKeyName(_In_ SC_HANDLE hSCManager,_In_ LPCTSTR lpDisplayName,_Out_opt_ LPTSTR lpServiceName,_Inout_ LPDWORD lpcchBuffer)
BOOL WINAPI advapi32.GetServiceKeyNameW(_In_ SC_HANDLE hSCManager,_In_ LPCTSTR lpDisplayName,_Out_opt_ LPTSTR lpServiceName,_Inout_ LPDWORD lpcchBuffer)
BOOL WINAPI advapi32.GetThreadWaitChain(_In_ HWCT WctHandle,_In_opt_ DWORD_PTR Context,_In_ DWORD Flags,_In_ DWORD ThreadId,_Inout_ LPDWORD NodeCount,_Out_ PWAITCHAIN_NODE_INFO NodeInfoArray,_Out_ LPBOOL IsCycle)
BOOL WINAPI advapi32.GetTokenInformation(_In_ HANDLE TokenHandle,_In_ TOKEN_INFORMATION_CLASS TokenInformationClass,_Out_opt_ LPVOID TokenInformation,_In_ DWORD TokenInformationLength,_Out_ PDWORD ReturnLength)
BOOL WINAPI advapi32.GetUserNameA(_Out_ LPTSTR lpBuffer,_Inout_ LPDWORD lpnSize)
BOOL WINAPI advapi32.GetUserName(_Out_ LPTSTR lpBuffer,_Inout_ LPDWORD lpnSize)
BOOL WINAPI advapi32.GetUserNameW(_Out_ LPTSTR lpBuffer,_Inout_ LPDWORD lpnSize)
BOOL WINAPI advapi32.GetWindowsAccountDomainSid(_In_ PSID pSid,_Out_opt_ PSID ppDomainSid,_Inout_ DWORD *cbSid)
BOOL WINAPI advapi32.ImpersonateAnonymousToken(_In_ HANDLE ThreadHandle)
BOOL WINAPI advapi32.ImpersonateLoggedOnUser(_In_ HANDLE hToken)
BOOL WINAPI advapi32.ImpersonateNamedPipeClient(_In_ HANDLE hNamedPipe)
BOOL WINAPI advapi32.ImpersonateSelf(_In_ SECURITY_IMPERSONATION_LEVEL ImpersonationLevel)
BOOL WINAPI advapi32.InitializeAcl(_Out_ PACL pAcl,_In_ DWORD nAclLength,_In_ DWORD dwAclRevision)
BOOL WINAPI advapi32.InitializeSecurityDescriptor(_Out_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_ DWORD dwRevision)
BOOL WINAPI advapi32.InitializeSid(_Out_ PSID Sid,_In_ PSID_IDENTIFIER_AUTHORITY pIdentifierAuthority,_In_ BYTE nSubAuthorityCount)
BOOL WINAPI advapi32.InitiateSystemShutdownA(_In_opt_ LPTSTR lpMachineName,_In_opt_ LPTSTR lpMessage,_In_ DWORD dwTimeout,_In_ BOOL bForceAppsClosed,_In_ BOOL bRebootAfterShutdown)
BOOL WINAPI advapi32.InitiateSystemShutdownExA(_In_opt_ LPTSTR lpMachineName,_In_opt_ LPTSTR lpMessage,_In_ DWORD dwTimeout,_In_ BOOL bForceAppsClosed,_In_ BOOL bRebootAfterShutdown,_In_ DWORD dwReason)
BOOL WINAPI advapi32.InitiateSystemShutdownEx(_In_opt_ LPTSTR lpMachineName,_In_opt_ LPTSTR lpMessage,_In_ DWORD dwTimeout,_In_ BOOL bForceAppsClosed,_In_ BOOL bRebootAfterShutdown,_In_ DWORD dwReason)
BOOL WINAPI advapi32.InitiateSystemShutdownExW(_In_opt_ LPTSTR lpMachineName,_In_opt_ LPTSTR lpMessage,_In_ DWORD dwTimeout,_In_ BOOL bForceAppsClosed,_In_ BOOL bRebootAfterShutdown,_In_ DWORD dwReason)
BOOL WINAPI advapi32.InitiateSystemShutdown(_In_opt_ LPTSTR lpMachineName,_In_opt_ LPTSTR lpMessage,_In_ DWORD dwTimeout,_In_ BOOL bForceAppsClosed,_In_ BOOL bRebootAfterShutdown)
BOOL WINAPI advapi32.InitiateSystemShutdownW(_In_opt_ LPTSTR lpMachineName,_In_opt_ LPTSTR lpMessage,_In_ DWORD dwTimeout,_In_ BOOL bForceAppsClosed,_In_ BOOL bRebootAfterShutdown)
BOOL WINAPI advapi32.IsTokenRestricted(_In_ HANDLE TokenHandle)
BOOL WINAPI advapi32.IsValidAcl(_In_ PACL pAcl)
BOOL WINAPI advapi32.IsValidSecurityDescriptor(_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor)
BOOL WINAPI advapi32.IsValidSid(_In_ PSID pSid)
BOOL WINAPI advapi32.IsWellKnownSid(_In_ PSID pSid,_In_ WELL_KNOWN_SID_TYPE WellKnownSidType)
BOOL WINAPI advapi32.LogonUserExExW(_In_ LPTSTR lpszUsername,_In_opt_ LPTSTR lpszDomain,_In_opt_ LPTSTR lpszPassword,_In_ DWORD dwLogonType,_In_ DWORD dwLogonProvider,_In_opt_ PTOKEN_GROUPS pTokenGroups,_Out_opt_ PHANDLE phToken,_Out_opt_ PSID *ppLogonSid,_Out_opt_ PVOID *ppProfileBuffer,_Out_opt_ LPDWORD pdwProfileLength,_Out_opt_ PQUOTA_LIMITS pQuotaLimits)
BOOL WINAPI advapi32.LookupAccountNameA(_In_opt_ LPCTSTR lpSystemName,_In_ LPCTSTR lpAccountName,_Out_opt_ PSID Sid,_Inout_ LPDWORD cbSid,_Out_opt_ LPTSTR ReferencedDomainName,_Inout_ LPDWORD cchReferencedDomainName,_Out_ PSID_NAME_USE peUse)
BOOL WINAPI advapi32.LookupAccountName(_In_opt_ LPCTSTR lpSystemName,_In_ LPCTSTR lpAccountName,_Out_opt_ PSID Sid,_Inout_ LPDWORD cbSid,_Out_opt_ LPTSTR ReferencedDomainName,_Inout_ LPDWORD cchReferencedDomainName,_Out_ PSID_NAME_USE peUse)
BOOL WINAPI advapi32.LookupAccountNameW(_In_opt_ LPCTSTR lpSystemName,_In_ LPCTSTR lpAccountName,_Out_opt_ PSID Sid,_Inout_ LPDWORD cbSid,_Out_opt_ LPTSTR ReferencedDomainName,_Inout_ LPDWORD cchReferencedDomainName,_Out_ PSID_NAME_USE peUse)
BOOL WINAPI advapi32.LookupAccountSidA(_In_opt_ LPCTSTR lpSystemName,_In_ PSID lpSid,_Out_opt_ LPTSTR lpName,_Inout_ LPDWORD cchName,_Out_opt_ LPTSTR lpReferencedDomainName,_Inout_ LPDWORD cchReferencedDomainName,_Out_ PSID_NAME_USE peUse)
BOOL WINAPI advapi32.LookupAccountSid(_In_opt_ LPCTSTR lpSystemName,_In_ PSID lpSid,_Out_opt_ LPTSTR lpName,_Inout_ LPDWORD cchName,_Out_opt_ LPTSTR lpReferencedDomainName,_Inout_ LPDWORD cchReferencedDomainName,_Out_ PSID_NAME_USE peUse)
BOOL WINAPI advapi32.LookupAccountSid(_In_ PSID lpSid,_Out_opt_ LPTSTR lpName,_Inout_ LPDWORD cchName,_Out_opt_ LPTSTR lpReferencedDomainName,_Inout_ LPDWORD cchReferencedDomainName,_Out_ PSID_NAME_USE peUse)
BOOL WINAPI advapi32.LookupAccountSidLocalA(_In_ PSID lpSid,_Out_opt_ LPTSTR lpName,_Inout_ LPDWORD cchName,_Out_opt_ LPTSTR lpReferencedDomainName,_Inout_ LPDWORD cchReferencedDomainName,_Out_ PSID_NAME_USE peUse)
BOOL WINAPI advapi32.LookupAccountSidLocalW(_In_ PSID lpSid,_Out_opt_ LPTSTR lpName,_Inout_ LPDWORD cchName,_Out_opt_ LPTSTR lpReferencedDomainName,_Inout_ LPDWORD cchReferencedDomainName,_Out_ PSID_NAME_USE peUse)
BOOL WINAPI advapi32.LookupAccountSidW(_In_opt_ LPCTSTR lpSystemName,_In_ PSID lpSid,_Out_opt_ LPTSTR lpName,_Inout_ LPDWORD cchName,_Out_opt_ LPTSTR lpReferencedDomainName,_Inout_ LPDWORD cchReferencedDomainName,_Out_ PSID_NAME_USE peUse)
BOOL WINAPI advapi32.LookupPrivilegeDisplayNameA(_In_opt_ LPCTSTR lpSystemName,_In_ LPCTSTR lpName,_Out_opt_ LPTSTR lpDisplayName,_Inout_ LPDWORD cchDisplayName,_Out_ LPDWORD lpLanguageId)
BOOL WINAPI advapi32.LookupPrivilegeDisplayName(_In_opt_ LPCTSTR lpSystemName,_In_ LPCTSTR lpName,_Out_opt_ LPTSTR lpDisplayName,_Inout_ LPDWORD cchDisplayName,_Out_ LPDWORD lpLanguageId)
BOOL WINAPI advapi32.LookupPrivilegeDisplayNameW(_In_opt_ LPCTSTR lpSystemName,_In_ LPCTSTR lpName,_Out_opt_ LPTSTR lpDisplayName,_Inout_ LPDWORD cchDisplayName,_Out_ LPDWORD lpLanguageId)
BOOL WINAPI advapi32.LookupPrivilegeNameA(_In_opt_ LPCTSTR lpSystemName,_In_ PLUID lpLuid,_Out_opt_ LPTSTR lpName,_Inout_ LPDWORD cchName)
BOOL WINAPI advapi32.LookupPrivilegeName(_In_opt_ LPCTSTR lpSystemName,_In_ PLUID lpLuid,_Out_opt_ LPTSTR lpName,_Inout_ LPDWORD cchName)
BOOL WINAPI advapi32.LookupPrivilegeNameW(_In_opt_ LPCTSTR lpSystemName,_In_ PLUID lpLuid,_Out_opt_ LPTSTR lpName,_Inout_ LPDWORD cchName)
BOOL WINAPI advapi32.LookupPrivilegeValueA(_In_opt_ LPCTSTR lpSystemName,_In_ LPCTSTR lpName,_Out_ PLUID lpLuid)
BOOL WINAPI advapi32.LookupPrivilegeValue(_In_opt_ LPCTSTR lpSystemName,_In_ LPCTSTR lpName,_Out_ PLUID lpLuid)
BOOL WINAPI advapi32.LookupPrivilegeValueW(_In_opt_ LPCTSTR lpSystemName,_In_ LPCTSTR lpName,_Out_ PLUID lpLuid)
BOOL WINAPI advapi32.MakeAbsoluteSD(_In_ PSECURITY_DESCRIPTOR pSelfRelativeSD,_Out_opt_ PSECURITY_DESCRIPTOR pAbsoluteSD,_Inout_ LPDWORD lpdwAbsoluteSDSize,_Out_opt_ PACL pDacl,_Inout_ LPDWORD lpdwDaclSize,_Out_opt_ PACL pSacl,_Inout_ LPDWORD lpdwSaclSize,_Out_opt_ PSID pOwner,_Inout_ LPDWORD lpdwOwnerSize,_Out_opt_ PSID pPrimaryGroup,_Inout_ LPDWORD lpdwPrimaryGroupSize)
BOOL WINAPI advapi32.MakeSelfRelativeSD(_In_ PSECURITY_DESCRIPTOR pAbsoluteSD,_Out_opt_ PSECURITY_DESCRIPTOR pSelfRelativeSD,_Inout_ LPDWORD lpdwBufferLength)
BOOL WINAPI advapi32.NotifyBootConfigStatus(_In_ BOOL BootAcceptable)
BOOL WINAPI advapi32.ObjectCloseAuditAlarmA(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ BOOL GenerateOnClose)
BOOL WINAPI advapi32.ObjectCloseAuditAlarm(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ BOOL GenerateOnClose)
BOOL WINAPI advapi32.ObjectCloseAuditAlarmW(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ BOOL GenerateOnClose)
BOOL WINAPI advapi32.ObjectDeleteAuditAlarmA(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ BOOL GenerateOnClose)
BOOL WINAPI advapi32.ObjectDeleteAuditAlarm(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ BOOL GenerateOnClose)
BOOL WINAPI advapi32.ObjectDeleteAuditAlarmW(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ BOOL GenerateOnClose)
BOOL WINAPI advapi32.ObjectOpenAuditAlarmA(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ LPTSTR ObjectTypeName,_In_opt_ LPTSTR ObjectName,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_ HANDLE ClientToken,_In_ DWORD DesiredAccess,_In_ DWORD GrantedAccess,_In_opt_ PPRIVILEGE_SET Privileges,_In_ BOOL ObjectCreation,_In_ BOOL AccessGranted,_Out_ LPBOOL GenerateOnClose)
BOOL WINAPI advapi32.ObjectOpenAuditAlarm(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ LPTSTR ObjectTypeName,_In_opt_ LPTSTR ObjectName,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_ HANDLE ClientToken,_In_ DWORD DesiredAccess,_In_ DWORD GrantedAccess,_In_opt_ PPRIVILEGE_SET Privileges,_In_ BOOL ObjectCreation,_In_ BOOL AccessGranted,_Out_ LPBOOL GenerateOnClose)
BOOL WINAPI advapi32.ObjectOpenAuditAlarmW(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ LPTSTR ObjectTypeName,_In_opt_ LPTSTR ObjectName,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_ HANDLE ClientToken,_In_ DWORD DesiredAccess,_In_ DWORD GrantedAccess,_In_opt_ PPRIVILEGE_SET Privileges,_In_ BOOL ObjectCreation,_In_ BOOL AccessGranted,_Out_ LPBOOL GenerateOnClose)
BOOL WINAPI advapi32.ObjectPrivilegeAuditAlarmA(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ HANDLE ClientToken,_In_ DWORD DesiredAccess,_In_ PPRIVILEGE_SET Privileges,_In_ BOOL AccessGranted)
BOOL WINAPI advapi32.ObjectPrivilegeAuditAlarm(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ HANDLE ClientToken,_In_ DWORD DesiredAccess,_In_ PPRIVILEGE_SET Privileges,_In_ BOOL AccessGranted)
BOOL WINAPI advapi32.ObjectPrivilegeAuditAlarmW(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ HANDLE ClientToken,_In_ DWORD DesiredAccess,_In_ PPRIVILEGE_SET Privileges,_In_ BOOL AccessGranted)
BOOL WINAPI advapi32.OpenProcessToken(_In_ HANDLE ProcessHandle,_In_ DWORD DesiredAccess,_Out_ PHANDLE TokenHandle)
BOOL WINAPI advapi32.OpenThreadToken(_In_ HANDLE ThreadHandle,_In_ DWORD DesiredAccess,_In_ BOOL OpenAsSelf,_Out_ PHANDLE TokenHandle)
BOOL WINAPI advapi32.PrivilegeCheck(_In_ HANDLE ClientToken,_Inout_ PPRIVILEGE_SET RequiredPrivileges,_Out_ LPBOOL pfResult)
BOOL WINAPI advapi32.PrivilegedServiceAuditAlarmA(_In_ LPCTSTR SubsystemName,_In_ LPCTSTR ServiceName,_In_ HANDLE ClientToken,_In_ PPRIVILEGE_SET Privileges,_In_ BOOL AccessGranted)
BOOL WINAPI advapi32.PrivilegedServiceAuditAlarm(_In_ LPCTSTR SubsystemName,_In_ LPCTSTR ServiceName,_In_ HANDLE ClientToken,_In_ PPRIVILEGE_SET Privileges,_In_ BOOL AccessGranted)
BOOL WINAPI advapi32.PrivilegedServiceAuditAlarmW(_In_ LPCTSTR SubsystemName,_In_ LPCTSTR ServiceName,_In_ HANDLE ClientToken,_In_ PPRIVILEGE_SET Privileges,_In_ BOOL AccessGranted)
BOOL WINAPI advapi32.QueryServiceConfig2A(_In_ SC_HANDLE hService,_In_ DWORD dwInfoLevel,_Out_opt_ LPBYTE lpBuffer,_In_ DWORD cbBufSize,_Out_ LPDWORD pcbBytesNeeded)
BOOL WINAPI advapi32.QueryServiceConfig2(_In_ SC_HANDLE hService,_In_ DWORD dwInfoLevel,_Out_opt_ LPBYTE lpBuffer,_In_ DWORD cbBufSize,_Out_ LPDWORD pcbBytesNeeded)
BOOL WINAPI advapi32.QueryServiceConfig2W(_In_ SC_HANDLE hService,_In_ DWORD dwInfoLevel,_Out_opt_ LPBYTE lpBuffer,_In_ DWORD cbBufSize,_Out_ LPDWORD pcbBytesNeeded)
BOOL WINAPI advapi32.QueryServiceConfigA(_In_ SC_HANDLE hService,_Out_opt_ LPQUERY_SERVICE_CONFIG lpServiceConfig,_In_ DWORD cbBufSize,_Out_ LPDWORD pcbBytesNeeded)
BOOL WINAPI advapi32.QueryServiceConfig(_In_ SC_HANDLE hService,_Out_opt_ LPQUERY_SERVICE_CONFIG lpServiceConfig,_In_ DWORD cbBufSize,_Out_ LPDWORD pcbBytesNeeded)
BOOL WINAPI advapi32.QueryServiceConfigW(_In_ SC_HANDLE hService,_Out_opt_ LPQUERY_SERVICE_CONFIG lpServiceConfig,_In_ DWORD cbBufSize,_Out_ LPDWORD pcbBytesNeeded)
BOOL WINAPI advapi32.QueryServiceDynamicInformation(_In_ SERVICE_STATUS_HANDLE hServiceStatus,_In_ DWORD dwInfoLevel,_Outptr_ PVOID *ppDynamicInfo)
BOOL WINAPI advapi32.QueryServiceLockStatusA(_In_ SC_HANDLE hSCManager,_Out_opt_ LPQUERY_SERVICE_LOCK_STATUS lpLockStatus,_In_ DWORD cbBufSize,_Out_ LPDWORD pcbBytesNeeded)
BOOL WINAPI advapi32.QueryServiceLockStatus(_In_ SC_HANDLE hSCManager,_Out_opt_ LPQUERY_SERVICE_LOCK_STATUS lpLockStatus,_In_ DWORD cbBufSize,_Out_ LPDWORD pcbBytesNeeded)
BOOL WINAPI advapi32.QueryServiceLockStatusW(_In_ SC_HANDLE hSCManager,_Out_opt_ LPQUERY_SERVICE_LOCK_STATUS lpLockStatus,_In_ DWORD cbBufSize,_Out_ LPDWORD pcbBytesNeeded)
BOOL WINAPI advapi32.QueryServiceObjectSecurity(_In_ SC_HANDLE hService,_In_ SECURITY_INFORMATION dwSecurityInformation,_Out_opt_ PSECURITY_DESCRIPTOR lpSecurityDescriptor,_In_ DWORD cbBufSize,_Out_ LPDWORD pcbBytesNeeded)
BOOL WINAPI advapi32.QueryServiceStatusEx(_In_ SC_HANDLE hService,_In_ SC_STATUS_TYPE InfoLevel,_Out_opt_ LPBYTE lpBuffer,_In_ DWORD cbBufSize,_Out_ LPDWORD pcbBytesNeeded)
BOOL WINAPI advapi32.QueryServiceStatus(_In_ SC_HANDLE hService,_Out_ LPSERVICE_STATUS lpServiceStatus)
BOOL WINAPI advapi32.RevertToSelf(void None None)
BOOL WINAPI advapi32.SaferCloseLevel(_In_ SAFER_LEVEL_HANDLE hLevelHandle)
BOOL WINAPI advapi32.SaferComputeTokenFromLevel(_In_ SAFER_LEVEL_HANDLE LevelHandle,_In_opt_ HANDLE InAccessToken,_Out_ PHANDLE OutAccessToken,_In_ DWORD dwFlags,_Inout_opt_ LPVOID lpReserved)
BOOL WINAPI advapi32.SaferCreateLevel(_In_ DWORD dwScopeId,_In_ DWORD dwLevelId,_In_ DWORD OpenFlags,_Out_ SAFER_LEVEL_HANDLE *pLevelHandle,_Reserved_ LPVOID lpReserved)
BOOL WINAPI advapi32.SaferGetLevelInformation(_In_ SAFER_LEVEL_HANDLE LevelHandle,_In_ SAFER_OBJECT_INFO_CLASS dwInfoType,_Out_opt_ LPVOID lpQueryBuffer,_In_ DWORD dwInBufferSize,_Out_ LPDWORD lpdwOutBufferSize)
BOOL WINAPI advapi32.SaferGetPolicyInformation(_In_ DWORD dwScopeId,_In_ SAFER_POLICY_INFO_CLASS SaferPolicyInfoClass,_In_ DWORD InfoBufferSize,_Out_ PVOID InfoBuffer,_Out_ PDWORD InfoBufferRetSize,_Reserved_ LPVOID lpReserved)
BOOL WINAPI advapi32.SaferIdentifyLevel(_In_ DWORD dwNumProperties,_In_opt_ PSAFER_CODE_PROPERTIES pCodeProperties,_Out_ SAFER_LEVEL_HANDLE *pLevelHandle,_Reserved_ LPVOID lpReserved)
BOOL WINAPI advapi32.SaferRecordEventLogEntry(_In_ SAFER_LEVEL_HANDLE hLevel,_In_ LPCWSTR szTargetPath,_Reserved_ LPVOID lpReserved)
BOOL WINAPI advapi32.SaferSetLevelInformation(_In_ SAFER_LEVEL_HANDLE LevelHandle,_In_ SAFER_OBJECT_INFO_CLASS dwInfoType,_In_ LPVOID lpQueryBuffer,_In_ DWORD dwInBufferSize)
BOOL WINAPI advapi32.SaferSetPolicyInformation(_In_ DWORD dwScopeId,_In_ SAFER_POLICY_INFO_CLASS SaferPolicyInfoClass,_In_ DWORD InfoBufferSize,_In_ PVOID InfoBuffer,_Reserved_ LPVOID lpReserved)
BOOL WINAPI advapi32.SetAclInformation(_Inout_ PACL pAcl,_In_ LPVOID pAclInformation,_In_ DWORD nAclInformationLength,_In_ ACL_INFORMATION_CLASS dwAclInformationClass)
BOOL WINAPI advapi32.SetFileSecurityA(_In_ LPCTSTR lpFileName,_In_ SECURITY_INFORMATION SecurityInformation,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor)
BOOL WINAPI advapi32.SetFileSecurity(_In_ LPCTSTR lpFileName,_In_ SECURITY_INFORMATION SecurityInformation,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor)
BOOL WINAPI advapi32.SetFileSecurityW(_In_ LPCTSTR lpFileName,_In_ SECURITY_INFORMATION SecurityInformation,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor)
BOOL WINAPI advapi32.SetKernelObjectSecurity(_In_ HANDLE Handle,_In_ SECURITY_INFORMATION SecurityInformation,_In_ PSECURITY_DESCRIPTOR SecurityDescriptor)
BOOL WINAPI advapi32.SetPrivateObjectSecurityEx(_In_ SECURITY_INFORMATION SecurityInformation,_In_ PSECURITY_DESCRIPTOR ModificationDescriptor,_Inout_ PSECURITY_DESCRIPTOR *ObjectsSecurityDescriptor,_In_ ULONG AutoInheritFlags,_In_ PGENERIC_MAPPING GenericMapping,_In_opt_ HANDLE Token)
BOOL WINAPI advapi32.SetPrivateObjectSecurity(_In_ SECURITY_INFORMATION SecurityInformation,_In_ PSECURITY_DESCRIPTOR ModificationDescriptor,_Inout_ PSECURITY_DESCRIPTOR *ObjectsSecurityDescriptor,_In_ PGENERIC_MAPPING GenericMapping,_In_opt_ HANDLE Token)
BOOL WINAPI advapi32.SetSecurityDescriptorControl(_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_ SECURITY_DESCRIPTOR_CONTROL ControlBitsOfInterest,_In_ SECURITY_DESCRIPTOR_CONTROL ControlBitsToSet)
BOOL WINAPI advapi32.SetSecurityDescriptorDacl(_Inout_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_ BOOL bDaclPresent,_In_opt_ PACL pDacl,_In_ BOOL bDaclDefaulted)
BOOL WINAPI advapi32.SetSecurityDescriptorGroup(_Inout_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_opt_ PSID pGroup,_In_ BOOL bGroupDefaulted)
BOOL WINAPI advapi32.SetSecurityDescriptorOwner(_Inout_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_opt_ PSID pOwner,_In_ BOOL bOwnerDefaulted)
BOOL WINAPI advapi32.SetSecurityDescriptorSacl(_Inout_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_ BOOL bSaclPresent,_In_opt_ PACL pSacl,_In_ BOOL bSaclDefaulted)
BOOL WINAPI advapi32.SetServiceBits(_In_ SERVICE_STATUS_HANDLE hServiceStatus,_In_ DWORD dwServiceBits,_In_ BOOL bSetBitsOn,_In_ BOOL bUpdateImmediately)
BOOL WINAPI advapi32.SetServiceObjectSecurity(_In_ SC_HANDLE hService,_In_ SECURITY_INFORMATION dwSecurityInformation,_In_ PSECURITY_DESCRIPTOR lpSecurityDescriptor)
BOOL WINAPI advapi32.SetServiceStatus(_In_ SERVICE_STATUS_HANDLE hServiceStatus,_In_ LPSERVICE_STATUS lpServiceStatus)
BOOL WINAPI advapi32.SetThreadToken(_In_opt_ PHANDLE Thread,_In_opt_ HANDLE Token)
BOOL WINAPI advapi32.SetTokenInformation(_In_ HANDLE TokenHandle,_In_ TOKEN_INFORMATION_CLASS TokenInformationClass,_In_ LPVOID TokenInformation,_In_ DWORD TokenInformationLength)
BOOL WINAPI advapi32.StartServiceA(_In_ SC_HANDLE hService,_In_ DWORD dwNumServiceArgs,_In_opt_ LPCTSTR *lpServiceArgVectors)
BOOL WINAPI advapi32.StartService(_In_ SC_HANDLE hService,_In_ DWORD dwNumServiceArgs,_In_opt_ LPCTSTR *lpServiceArgVectors)
BOOL WINAPI advapi32.StartServiceW(_In_ SC_HANDLE hService,_In_ DWORD dwNumServiceArgs,_In_opt_ LPCTSTR *lpServiceArgVectors)
BOOL WINAPI advapi32.UnlockServiceDatabase(_In_ SC_LOCK ScLock)
BOOL WINAPI api-ms-win-core-apiquery-l1-1-0.ApiSetQueryApiSetPresence(_In_ PCUNICODE_STRING Namespace,_Out_ PBOOLEAN Present)
BOOL WINAPI api-ms-win-core-enclave-l1-1-0.InitializeEnclave(_In_ HANDLE hProcess,_In_ LPVOID lpAddress,_In_ LPVOID lpEnclaveInformation,_In_ DWORD dwInfoLength,_In_ LPDWORD lpEnclaveError)
BOOL WINAPI api-ms-win-core-enclave-l1-1-0.IsEnclaveTypeSupported(_In_ DWORD flEnclaveType)
BOOL WINAPI api-ms-win-core-enclave-l1-1-0.LoadEnclaveData(_In_ HANDLE hProcess,_In_ LPVOID lpAddress,_In_ LPCVOID lpBuffer,_In_ SIZE_T nSize,_In_ DWORD flProtect,_In_ LPCVOID lpPageInformation,_In_ DWORD dwInfoLength,_Out_ PSIZE_T lpNumberOfBytesWritten,_Out_opt_ LPDWORD lpEnclaveError)
BOOL WINAPI api-ms-win-core-libraryloader-l1-1-1.QueryOptionalDelayLoadedAPI(_In_ HMODULE hParentModule,_In_ LPCSTR lpDllName,_In_ LPCSTR lpProcName,_Reserved_ DWORD Reserved)
BOOL WINAPI api-ms-win-core-version-l1-1-0.GetFileVersionInfoA(_In_ LPCTSTR lptstrFilename,_Reserved_ DWORD dwHandle,_In_ DWORD dwLen,_Out_ LPVOID lpData)
BOOL WINAPI api-ms-win-core-version-l1-1-0.GetFileVersionInfoExA(_In_ DWORD dwFlags,_In_ LPCTSTR lptstrFilename,_Reserved_ DWORD dwHandle,_In_ DWORD dwLen,_Out_ LPVOID lpData)
BOOL WINAPI api-ms-win-core-version-l1-1-0.GetFileVersionInfoEx(_In_ DWORD dwFlags,_In_ LPCTSTR lptstrFilename,_Reserved_ DWORD dwHandle,_In_ DWORD dwLen,_Out_ LPVOID lpData)
BOOL WINAPI api-ms-win-core-version-l1-1-0.GetFileVersionInfoExW(_In_ DWORD dwFlags,_In_ LPCTSTR lptstrFilename,_Reserved_ DWORD dwHandle,_In_ DWORD dwLen,_Out_ LPVOID lpData)
BOOL WINAPI api-ms-win-core-version-l1-1-0.GetFileVersionInfo(_In_ LPCTSTR lptstrFilename,_Reserved_ DWORD dwHandle,_In_ DWORD dwLen,_Out_ LPVOID lpData)
BOOL WINAPI api-ms-win-core-version-l1-1-0.GetFileVersionInfoW(_In_ LPCTSTR lptstrFilename,_Reserved_ DWORD dwHandle,_In_ DWORD dwLen,_Out_ LPVOID lpData)
BOOL WINAPI api-ms-win-core-version-l1-1-0.VerQueryValueA(_In_ LPCVOID pBlock,_In_ LPCTSTR lpSubBlock,_Out_ LPVOID *lplpBuffer,_Out_ PUINT puLen)
BOOL WINAPI api-ms-win-core-version-l1-1-0.VerQueryValue(_In_ LPCVOID pBlock,_In_ LPCTSTR lpSubBlock,_Out_ LPVOID *lplpBuffer,_Out_ PUINT puLen)
BOOL WINAPI api-ms-win-core-version-l1-1-0.VerQueryValueW(_In_ LPCVOID pBlock,_In_ LPCTSTR lpSubBlock,_Out_ LPVOID *lplpBuffer,_Out_ PUINT puLen)
BOOL WINAPI authz.AuthzAccessCheck(_In_ DWORD flags,_In_ AUTHZ_CLIENT_CONTEXT_HANDLE hAuthzClientContext,_In_ PAUTHZ_ACCESS_REQUEST pRequest,_In_opt_ AUTHZ_AUDIT_EVENT_HANDLE AuditEvent,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_opt_ PSECURITY_DESCRIPTOR *OptionalSecurityDescriptorArray,_In_opt_ DWORD OptionalSecurityDescriptorCount,_Inout_ PAUTHZ_ACCESS_REPLY pReply,_Out_opt_ PAUTHZ_ACCESS_CHECK_RESULTS_HANDLE phAccessCheckResults)
BOOL WINAPI authz.AuthzAddSidsToContext(_In_ AUTHZ_CLIENT_CONTEXT_HANDLE OrigClientContext,_In_ PSID_AND_ATTRIBUTES Sids,_In_ DWORD SidCount,_In_ PSID_AND_ATTRIBUTES RestrictedSids,_In_ DWORD RestrictedSidCount,_Out_ PAUTHZ_CLIENT_CONTEXT_HANDLE pNewClientContext)
BOOL WINAPI authz.AuthzCachedAccessCheck(_In_ DWORD Flags,_In_ AUTHZ_ACCESS_CHECK_RESULTS_HANDLE AuthzHandle,_In_ PAUTHZ_ACCESS_REQUEST pRequest,_In_ AUTHZ_AUDIT_EVENT_HANDLE AuditInfo,_Out_ PAUTHZ_ACCESS_REPLY pReply)
BOOL WINAPI authz.AuthzEnumerateSecurityEventSources(_In_ DWORD dwFlags,_Out_ PAUTHZ_SOURCE_SCHEMA_REGISTRATION Buffer,_Out_ PDWORD pdwCount,_Inout_ PDWORD pdwLength)
BOOL WINAPI authz.AuthzFreeAuditEvent(_In_ AUTHZ_AUDIT_EVENT_HANDLE pAuditEventInfo)
BOOL WINAPI authz.AuthzFreeCentralAccessPolicyCache(void None None)
BOOL WINAPI authz.AuthzFreeContext(_In_ AUTHZ_CLIENT_CONTEXT_HANDLE AuthzClientContext)
BOOL WINAPI authz.AuthzFreeHandle(_In_ AUTHZ_ACCESS_CHECK_RESULTS_HANDLE AuthzHandle)
BOOL WINAPI authz.AuthzFreeResourceManager(_In_ AUTHZ_RESOURCE_MANAGER_HANDLE AuthzResourceManager)
BOOL WINAPI authz.AuthzGetInformationFromContext(_In_ AUTHZ_CLIENT_CONTEXT_HANDLE hAuthzClientContext,_In_ AUTHZ_CONTEXT_INFORMATION_CLASS InfoClass,_In_ DWORD BufferSize,_Out_ PDWORD pSizeRequired,_Out_ PVOID Buffer)
BOOL WINAPI authz.AuthzInitializeCompoundContext(_In_ AUTHZ_CLIENT_CONTEXT_HANDLE UserContext,_In_ AUTHZ_CLIENT_CONTEXT_HANDLE DeviceContext,_Out_ PAUTHZ_CLIENT_CONTEXT_HANDLE phCompoundContext)
BOOL WINAPI authz.AuthzInitializeContextFromAuthzContext(_In_ DWORD flags,_In_ AUTHZ_CLIENT_CONTEXT_HANDLE hAuthzClientContext,_In_opt_ PLARGE_INTEGER pExpirationTime,_In_ LUID Identifier,_In_ PVOID DynamicGroupArgs,_Out_ PAUTHZ_CLIENT_CONTEXT_HANDLE phNewAuthzClientContext)
BOOL WINAPI authz.AuthzInitializeContextFromSid(_In_ DWORD Flags,_In_ PSID UserSid,_In_opt_ AUTHZ_RESOURCE_MANAGER_HANDLE hAuthzResourceManager,_In_ PLARGE_INTEGER pExpirationTime,_In_ LUID Identifier,_In_opt_ PVOID DynamicGroupArgs,_Out_ PAUTHZ_CLIENT_CONTEXT_HANDLE pAuthzClientContext)
BOOL WINAPI authz.AuthzInitializeContextFromToken(_In_ DWORD Flags,_In_ HANDLE TokenHandle,_In_ AUTHZ_RESOURCE_MANAGER_HANDLE hAuthzResourceManager,_In_opt_ PLARGE_INTEGER pExpirationTime,_In_ LUID Identifier,_In_opt_ PVOID DynamicGroupArgs,_Out_ PAUTHZ_CLIENT_CONTEXT_HANDLE phAuthzClientContext)
BOOL WINAPI authz.AuthzInitializeObjectAccessAuditEvent2(_In_ DWORD Flags,_In_ AUTHZ_AUDIT_EVENT_TYPE_HANDLE hAuditEventType,_In_ PWSTR szOperationType,_In_ PWSTR szObjectType,_In_ PWSTR szObjectName,_In_ PWSTR szAdditionalInfo,_In_ PWSTR szAdditionalInfo2,_Out_ PAUTHZ_AUDIT_EVENT_HANDLE phAuditEvent,_In_ DWORD dwAdditionalParameterCount)
BOOL WINAPI authz.AuthzInitializeObjectAccessAuditEvent(_In_ DWORD Flags,_In_ AUTHZ_AUDIT_EVENT_TYPE_HANDLE hAuditEventType,_In_ PWSTR szOperationType,_In_ PWSTR szObjectType,_In_ PWSTR szObjectName,_In_ PWSTR szAdditionalInfo,_Out_ PAUTHZ_AUDIT_EVENT_HANDLE phAuditEvent,_In_ DWORD dwAdditionalParamCount)
BOOL WINAPI authz.AuthzInitializeRemoteResourceManager(_In_ PAUTHZ_RPC_INIT_INFO_CLIENT pRpcInitInfo,_Out_ PAUTHZ_RESOURCE_MANAGER_HANDLE phAuthzResourceManager)
BOOL WINAPI authz.AuthzInitializeResourceManagerEx(_In_opt_ DWORD Flags,_In_opt_ PVOID pAuthzInitInfo,_Out_ PAUTHZ_RESOURCE_MANAGER_HANDLE phAuthzResourceManager)
BOOL WINAPI authz.AuthzInitializeResourceManager(_In_ DWORD flags,_In_opt_ PFN_AUTHZ_DYNAMIC_ACCESS_CHECK pfnAccessCheck,_In_opt_ PFN_AUTHZ_COMPUTE_DYNAMIC_GROUPS pfnComputeDynamicGroups,_In_opt_ PFN_AUTHZ_FREE_DYNAMIC_GROUPS pfnFreeDynamicGroups,_In_ PCWSTR szResourceManagerName,_Out_ PAUTHZ_RESOURCE_MANAGER_HANDLE phAuthzResourceManager)
BOOL WINAPI authz.AuthzInstallSecurityEventSource(_In_ DWORD dwFlags,_In_ PAUTHZ_SOURCE_SCHEMA_REGISTRATION pRegistration)
BOOL WINAPI authz.AuthzModifyClaims(_In_ AUTHZ_CLIENT_CONTEXT_HANDLE hAuthzClientContext,_In_ AUTHZ_CONTEXT_INFORMATION_CLASS ClaimClass,_In_ PAUTHZ_SECURITY_ATTRIBUTE_OPERATION pClaimOperations,_In_opt_ PAUTHZ_SECURITY_ATTRIBUTES_INFORMATION pClaims)
BOOL WINAPI authz.AuthzModifySecurityAttributes(_In_ AUTHZ_CLIENT_CONTEXT_HANDLE hAuthzClientContext,_In_ PAUTHZ_SECURITY_ATTRIBUTE_OPERATION pOperations,_In_ PAUTHZ_SECURITY_ATTRUBUTES_INFORMATION pAttributes)
BOOL WINAPI authz.AuthzModifySids(_In_ AUTHZ_CLIENT_CONTEXT_HANDLE hAuthzClientContext,_In_ AUTHZ_CONTEXT_INFORMATION_CLASS SidClass,_In_ PAUTHZ_SID_OPERATION pSidOperations,_In_opt_ PTOKEN_GROUPS pSids)
BOOL WINAPI authz.AuthzOpenObjectAudit(_In_ DWORD Flags,_In_ AUTHZ_CLIENT_CONTEXT_HANDLE hAuthzClientContext,_In_ PAUTHZ_ACCESS_REQUEST pRequest,_In_ AUTHZ_AUDIT_EVENT_HANDLE hAuditEvent,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_ PSECURITY_DESCRIPTOR *SecurityDescriptorArray,_In_ DWORD SecurityDescriptorCount,_In_ PAUTHZ_ACCESS_REPLY pReply)
BOOL WINAPI authz.AuthzRegisterCapChangeNotification(_Out_ PAUTHZ_CAP_CHANGE_SUBSCRIPTION_HANDLE phCapChangeSubscription,_In_ LPTHREAD_START_ROUTINE pfnCapChangeCallback,_In_opt_ PVOID pCallbackContext)
BOOL WINAPI authz.AuthzRegisterSecurityEventSource(_In_ DWORD dwFlags,_In_ PCWSTR szEventSourceName,_Out_ PAUTHZ_SECURITY_EVENT_PROVIDER_HANDLE phEventProvider)
BOOL WINAPI authz.AuthzReportSecurityEventFromParams(_In_ DWORD dwFlags,_In_ AUTHZ_SECURITY_EVENT_PROVIDER_HANDLE hEventProvider,_In_ DWORD dwAuditId,_In_opt_ PSID pUserSid,_In_ PAUDIT_PARAMS pParams)
BOOL WINAPI authz.AuthzReportSecurityEvent(_In_ DWORD dwFlags,_Inout_ AUTHZ_SECURITY_EVENT_PROVIDER_HANDLE hEventProvider,_In_ DWORD dwAuditId,_In_opt_ PSID pUserSid,_In_ DWORD dwCount,_In_ ... None)
BOOL WINAPI authz.AuthzSetAppContainerInformation(_In_ AUTHZ_CLIENT_CONTEXT_HANDLE hAuthzClientContext,_In_ PSID pAppContainerSid,_In_ DWORD CapabilityCount,_In_opt_ PSID_AND_ATTRIBUTES pCapabilitySids[CapabilityCount])
BOOL WINAPI authz.AuthzUninstallSecurityEventSource(_In_ DWORD dwFlags,_In_ PCWSTR szEventSourceName)
BOOL WINAPI authz.AuthzUnregisterCapChangeNotification(_In_ AUTHZ_CAP_CHANGE_SUBSCRIPTION_HANDLE hCapChangeSubscription)
BOOL WINAPI authz.AuthzUnregisterSecurityEventSource(_In_ DWORD dwFlags,_Inout_ PAUTHZ_SECURITY_EVENT_PROVIDER_HANDLE phEventProvider)
BOOL WINAPI avrt.AvQuerySystemResponsiveness(_In_ HANDLE AvrtHandle,_Out_ PULONG SystemResponsivenessValue)
BOOL WINAPI avrt.AvRevertMmThreadCharacteristics(_In_ HANDLE AvrtHandle)
BOOL WINAPI avrt.AvRtCreateThreadOrderingGroupExA(_Out_ PHANDLE Context,_In_ PLARGE_INTEGER Period,_Inout_ GUID *ThreadOrderingGuid,_In_opt_ PLARGE_INTEGER Timeout,_In_ LPCTSTR TaskName)
BOOL WINAPI avrt.AvRtCreateThreadOrderingGroupEx(_Out_ PHANDLE Context,_In_ PLARGE_INTEGER Period,_Inout_ GUID *ThreadOrderingGuid,_In_opt_ PLARGE_INTEGER Timeout,_In_ LPCTSTR TaskName)
BOOL WINAPI avrt.AvRtCreateThreadOrderingGroupExW(_Out_ PHANDLE Context,_In_ PLARGE_INTEGER Period,_Inout_ GUID *ThreadOrderingGuid,_In_opt_ PLARGE_INTEGER Timeout,_In_ LPCTSTR TaskName)
BOOL WINAPI avrt.AvRtCreateThreadOrderingGroup(_Out_ PHANDLE Context,_In_ PLARGE_INTEGER Period,_Inout_ GUID *ThreadOrderingGuid,_In_opt_ PLARGE_INTEGER Timeout)
BOOL WINAPI avrt.AvRtDeleteThreadOrderingGroup(_In_ HANDLE Context)
BOOL WINAPI avrt.AvRtJoinThreadOrderingGroup(_Out_ PHANDLE Context,_In_ GUID *ThreadOrderingGuid,_In_ BOOL Before)
BOOL WINAPI avrt.AvRtLeaveThreadOrderingGroup(_In_ HANDLE Context)
BOOL WINAPI avrt.AvRtWaitOnThreadOrderingGroup(_In_ HANDLE Context)
BOOL WINAPI avrt.AvSetMmThreadPriority(_In_ HANDLE AvrtHandle,_In_ AVRT_PRIORITY Priority)
BOOL WINAPI clfsw32.AddLogContainer(_In_ HANDLE hLog,_In_opt_ PULONGLONG pcbContainer,_In_ LPWSTR pwszContainerPath,_Inout_opt_ LPVOID pReserved)
BOOL WINAPI clfsw32.AddLogContainerSet(_In_ HANDLE hLog,_In_ USHORT cContainers,_In_opt_ PULONGLONG pcbContainer,_In_ LPWSTR *rgwszContainerPath,_Inout_opt_ PVOID Reserved)
BOOL WINAPI clfsw32.AdvanceLogBase(_Inout_ PVOID pvMarshal,_In_ PCLFS_LSN plsnBase,_In_ ULONG fFlags,_Inout_opt_ LPOVERLAPPED pOverlapped)
BOOL WINAPI clfsw32.AlignReservedLog(_Inout_ PVOID pvMarshal,_In_ ULONG cReservedRecords,_In_ LONGLONG rgcbReservation,_Out_ PLONGLONG pcbAlignReservation)
BOOL WINAPI clfsw32.AllocReservedLog(_Inout_ PVOID pvMarshal,_In_ ULONG cReservedRecords,_Inout_ PLONGLONG pcbAdjustment)
BOOL WINAPI clfsw32.CloseAndResetLogFile(_In_ HANDLE hLog)
BOOL WINAPI clfsw32.CreateLogMarshallingArea(_In_ HANDLE hLog,_In_opt_ CLFS_BLOCK_ALLOCATION pfnAllocBuffer,_In_opt_ CLFS_BLOCK_DEALLOCATION pfnFreeBuffer,_In_opt_ PVOID pvBlockAllocContext,_In_ ULONG cbMarshallingBuffer,_In_ ULONG cMaxWriteBuffers,_In_ ULONG cMaxReadBuffers,_Out_ PVOID *ppvMarshal)
BOOL WINAPI clfsw32.DeleteLogByHandle(_In_ HANDLE hLog)
BOOL WINAPI clfsw32.DeleteLogFile(_In_ LPCWSTR pszLogFileName,_In_opt_ PVOID pvReserved)
BOOL WINAPI clfsw32.DeleteLogMarshallingArea(_In_ PVOID pvMarshal)
BOOL WINAPI clfsw32.DumpLogRecords(_In_ PWSTR pwszLogFileName,_In_ CLFS_RECORD_TYPE fRecordType,_In_opt_ PCLFS_LSN plsnStart,_In_opt_ PCLFS_LSN plsnEnd,_In_opt_ PFILE pstrmOut,_In_opt_ CLFS_PRINT_RECORD_ROUTINE pfnPrintRecord,_In_opt_ CLFS_BLOCK_ALLOCATION pfnAllocBlock,_In_opt_ CLFS_BLOCK_DEALLOCATION pfnFreeBlock,_In_opt_ PVOID pvBlockAllocContext,_In_ ULONG cbBlock,_In_ ULONG cMaxBlocks)
BOOL WINAPI clfsw32.FlushLogBuffers(_In_ PVOID pvMarshal,_Inout_opt_ LPOVERLAPPED pOverlapped)
BOOL WINAPI clfsw32.FlushLogToLsn(_In_ PVOID pvMarshalContext,_In_ PCLFS_LSN plsnFlush,_Out_opt_ PCLFS_LSN plsnLastFlushed,_Inout_opt_ LPOVERLAPPED pOverlapped)
BOOL WINAPI clfsw32.FreeReservedLog(_Inout_ PVOID pvMarshal,_In_ ULONG cReservedRecords,_Inout_ PLONGLONG pcbAdjustment)
BOOL WINAPI clfsw32.GetLogContainerName(_In_ HANDLE hLog,_In_ CLFS_CONTAINER_ID cidLogicalContainer,_Inout_ LPCWSTR pwstrContainerName,_In_ ULONG cLenContainerName,_Inout_opt_ PULONG pcActualLenContainerName)
BOOL WINAPI clfsw32.GetLogFileInformation(_In_ HANDLE hLog,_Inout_ PCLFS_INFORMATION pinfoBuffer,_Inout_ PULONG cbBuffer)
BOOL WINAPI clfsw32.GetLogIoStatistics(_In_ HANDLE hLog,_Inout_ PVOID pvStatsBuffer,_In_ ULONG cbStatsBuffer,_In_ CLFS_IOSTATS_CLASS eStatsClass,_Out_opt_ PULONG pcbStatsWritten)
BOOL WINAPI clfsw32.GetNextLogArchiveExtent(_In_ CLFS_LOG_ARCHIVE_CONTEXT pvArchiveContext,_Inout_ CLFS_ARCHIVE_DESCRIPTOR rgadExtent[],_In_ ULONG cDescriptors,_Out_ PULONG pcDescriptorsReturned)
BOOL WINAPI clfsw32.HandleLogFull(_In_ HANDLE hLog)
BOOL WINAPI clfsw32.ReadLogArchiveMetadata(_In_ CLFS_LOG_ARCHIVE_CONTEXT pvArchiveContext,_In_ ULONG cbOffset,_In_ ULONG cbBytesToRead,_Inout_ PBYTE pbReadBuffer,_Out_ PULONG pcbBytesRead)
BOOL WINAPI clfsw32.ReadLogRecord(_In_ PVOID pvMarshal,_In_ PCLFS_LSN plsnFirst,_In_ CLFS_CONTEXT_MODE eContextMode,_Out_ PVOID *ppvReadBuffer,_Out_ PULONG pcbReadBuffer,_Out_ PCLFS_RECORD_TYPE peRecordType,_Out_ PCLFS_LSN plsnUndoNext,_Out_ PCLFS_LSN plsnPrevious,_Out_ PVOID *ppvReadContext,_Inout_opt_ LPOVERLAPPED pOverlapped)
BOOL WINAPI clfsw32.ReadLogRestartArea(_In_ PVOID pvMarshal,_Out_ PVOID *ppvRestartBuffer,_Out_ PULONG pcbRestartBuffer,_Out_ PCLFS_LSN plsn,_Out_ PVOID *ppvContext,_Inout_opt_ LPOVERLAPPED pOverlapped)
BOOL WINAPI clfsw32.ReadNextLogRecord(_Inout_ PVOID pvReadContext,_Out_ PVOID *ppvBuffer,_Out_ PULONG pcbBuffer,_Inout_ PCLFS_RECORD_TYPE peRecordType,_In_opt_ PCLFS_LSN plsnUser,_Out_ PCLFS_LSN plsnUndoNext,_Out_ PCLFS_LSN plsnPrevious,_Out_ PCLFS_LSN plsnRecord,_Inout_opt_ LPOVERLAPPED pOverlapped)
BOOL WINAPI clfsw32.ReadPreviousLogRestartArea(_In_ PVOID pvReadContext,_Out_ PVOID *ppvRestartBuffer,_Out_ PULONG pcbRestartBuffer,_Out_ PCLFS_LSN plsnRestart,_Inout_opt_ LPOVERLAPPED pOverlapped)
BOOL WINAPI clfsw32.RemoveLogContainer(_In_ HANDLE hLog,_In_ LPWSTR pwszContainerPath,_In_ BOOL fForce,_Inout_opt_ LPVOID pReserved)
BOOL WINAPI clfsw32.RemoveLogContainerSet(_In_ HANDLE hLog,_In_ USHORT cContainers,_In_ LPWSTR *rgwszContainerPath,_In_ BOOL fForce,_Inout_opt_ LPVOID pReserved)
BOOL WINAPI clfsw32.ReserveAndAppendLogAligned(_In_ PVOID pvMarshal,_In_opt_ PCLFS_WRITE_ENTRY rgWriteEntries,_In_ ULONG cWriteEntries,_In_ ULONG cbEntryAlignment,_In_opt_ PCLFS_LSN plsnUndoNext,_In_opt_ PCLFS_LSN plsnPrevious,_In_ ULONG cReserveRecords,_Inout_opt_ LONGLONG rgcbReservation[],_In_ ULONG fFlags,_Out_opt_ PCLFS_LSN plsn,_Inout_opt_ LPOVERLAPPED overlapped)
BOOL WINAPI clfsw32.ReserveAndAppendLog(_In_ PVOID pvMarshal,_In_opt_ PCLFS_WRITE_ENTRY rgWriteEntries,_In_ ULONG cWriteEntries,_In_opt_ PCLFS_LSN plsnUndoNext,_In_opt_ PCLFS_LSN plsnPrevious,_In_ ULONG cReserveRecords,_Inout_opt_ LONGLONG rgcbReservation[],_In_ ULONG fFlags,_Out_opt_ PCLFS_LSN plsn,_Inout_opt_ LPOVERLAPPED pOverlapped)
BOOL WINAPI clfsw32.ScanLogContainers(_Inout_ PCLFS_SCAN_CONTEXT pcxScan,_In_ CLFS_SCAN_MODE eScanMode,_Inout_opt_ LPVOID pReserved)
BOOL WINAPI clfsw32.SetEndOfLog(_In_ HANDLE hLog,_In_ PCLFS_LSN plsnEnd,_Inout_opt_ LPOVERLAPPED lpOverlapped)
BOOL WINAPI clfsw32.SetLogArchiveMode(_In_ HANDLE hLog,_In_ CLFS_LOG_ARCHIVE_MODE eMode)
BOOL WINAPI clfsw32.SetLogArchiveTail(_In_ HANDLE hLog,_In_ PCLFS_LSN plsnArchiveTail,_Inout_opt_ LPVOID pReserved)
BOOL WINAPI clfsw32.TerminateLogArchive(_In_ CLFS_LOG_ARCHIVE_CONTEXT pvArchiveContext)
BOOL WINAPI clfsw32.TerminateReadLog(_In_ PVOID pvCursorContext)
BOOL WINAPI clfsw32.TruncateLog(_In_ PVOID pvMarshal,_In_ PCLFS_LSN plsnEnd,_Inout_opt_ LPOVERLAPPED lpOverlapped)
BOOL WINAPI clfsw32.ValidateLog(_In_ LPCWSTR pszLogFileName,_In_opt_ LPSECURITY_ATTRIBUTES psaLogFile,_Out_opt_ PCLFS_INFORMATION pinfoBuffer,_Inout_ PULONG pcbBuffer)
BOOL WINAPI clfsw32.WriteLogRestartArea(_Inout_ PVOID pvMarshal,_In_ PVOID pvRestartBuffer,_In_ ULONG cbRestartBuffer,_In_opt_ PCLFS_LSN plsnBase,_In_ ULONG fFlags,_Out_opt_ PULONG pcbWritten,_Out_opt_ PCLFS_LSN plsnNext,_Inout_opt_ LPOVERLAPPED pOverlapped)
BOOL WINAPI clusapi.CanResourceBeDependent(_In_ HRESOURCE hResource,_In_ HRESOURCE hResourceDependent)
BOOL WINAPI clusapi.CloseClusterGroup(_In_ HGROUP hGroup)
BOOL WINAPI clusapi.CloseClusterGroupSet(_In_ HGROUPSET hGroupSet)
BOOL WINAPI clusapi.CloseCluster(_In_ HCLUSTER hCluster)
BOOL WINAPI clusapi.CloseClusterNode(_In_ HNODE hNode)
BOOL WINAPI clusapi.CloseClusterNotifyPort(_In_ HCHANGE hChange)
BOOL WINAPI clusapi.CloseClusterResource(_In_ HRESOURCE hResource)
BOOL WINAPI clusapi.GetClusterResourceNetworkName(_In_ HRESOURCE hResource,_Out_ LPWSTR lpBuffer,_Inout_ LPDWORD nSize)
BOOL WINAPI comctl32.DPA_DeleteAllPtrs(HDPA pdpa None)
BOOL WINAPI comctl32.DPA_Destroy(HDPA pdpa None)
BOOL WINAPI comctl32.DPA_Merge(_Inout_ HDPA hdpaDest,_In_ HDPA hdpaSrc,_In_ DWORD dwFlags,_In_ PFNDPACOMPARE pfnCompare,_In_ PFNDPAMERGE pfnMerge,_In_ LPARAM lParam)
BOOL WINAPI comctl32.DPA_Sort(HDPA pdpa None,PFNDPACOMPARE pfnCmp None,LPARAM lParam None)
BOOL WINAPI comctl32.DSA_Destroy(_In_ HDSA pdsa)
BOOL WINAPI comctl32.MirrorIcon(_Inout_opt_ HICON *phIconSmall,_Inout_opt_ HICON *phIconLarge)
BOOL WINAPI comctl32.Str_SetPtrA(_Inout_ LPTSTR *ppszCurrent,LPCTSTR pszNew None)
BOOL WINAPI comctl32.Str_SetPtr(_Inout_ LPTSTR *ppszCurrent,LPCTSTR pszNew None)
BOOL WINAPI comctl32.Str_SetPtrW(_Inout_ LPTSTR *ppszCurrent,LPCTSTR pszNew None)
BOOL WINAPI comctl32._TrackMouseEvent(_Inout_ LPTRACKMOUSEEVENT lpEventTrack)
BOOL WINAPI comdlg32.ChooseColorA(_Inout_ LPCHOOSECOLOR lpcc)
BOOL WINAPI comdlg32.ChooseColor(_Inout_ LPCHOOSECOLOR lpcc)
BOOL WINAPI comdlg32.ChooseColorW(_Inout_ LPCHOOSECOLOR lpcc)
BOOL WINAPI comdlg32.ChooseFontA(_Inout_ LPCHOOSEFONT lpcf)
BOOL WINAPI comdlg32.ChooseFont(_Inout_ LPCHOOSEFONT lpcf)
BOOL WINAPI comdlg32.ChooseFontW(_Inout_ LPCHOOSEFONT lpcf)
BOOL WINAPI comdlg32.GetOpenFileNameA(_Inout_ LPOPENFILENAME lpofn)
BOOL WINAPI comdlg32.GetOpenFileName(_Inout_ LPOPENFILENAME lpofn)
BOOL WINAPI comdlg32.GetOpenFileNameW(_Inout_ LPOPENFILENAME lpofn)
BOOL WINAPI comdlg32.GetSaveFileNameA(_Inout_ LPOPENFILENAME lpofn)
BOOL WINAPI comdlg32.GetSaveFileName(_Inout_ LPOPENFILENAME lpofn)
BOOL WINAPI comdlg32.GetSaveFileNameW(_Inout_ LPOPENFILENAME lpofn)
BOOL WINAPI comdlg32.PageSetupDlgA(_Inout_ LPPAGESETUPDLG lppsd)
BOOL WINAPI comdlg32.PageSetupDlg(_Inout_ LPPAGESETUPDLG lppsd)
BOOL WINAPI comdlg32.PageSetupDlgW(_Inout_ LPPAGESETUPDLG lppsd)
BOOL WINAPI comdlg32.PrintDlgA(_Inout_ LPPRINTDLG lppd)
BOOL WINAPI comdlg32.PrintDlg(_Inout_ LPPRINTDLG lppd)
BOOL WINAPI comdlg32.PrintDlgW(_Inout_ LPPRINTDLG lppd)
BOOL WINAPI credui.CredPackAuthenticationBufferA(_In_ DWORD dwFlags,_In_ LPTSTR pszUserName,_In_ LPTSTR pszPassword,_Out_ PBYTE pPackedCredentials,_Inout_ DWORD *pcbPackedCredentials)
BOOL WINAPI credui.CredPackAuthenticationBuffer(_In_ DWORD dwFlags,_In_ LPTSTR pszUserName,_In_ LPTSTR pszPassword,_Out_ PBYTE pPackedCredentials,_Inout_ DWORD *pcbPackedCredentials)
BOOL WINAPI credui.CredPackAuthenticationBufferW(_In_ DWORD dwFlags,_In_ LPTSTR pszUserName,_In_ LPTSTR pszPassword,_Out_ PBYTE pPackedCredentials,_Inout_ DWORD *pcbPackedCredentials)
BOOL WINAPI credui.CredUnPackAuthenticationBufferA(_In_ DWORD dwFlags,_In_ PVOID pAuthBuffer,_In_ DWORD cbAuthBuffer,_Out_ LPTSTR pszUserName,_Inout_ DWORD *pcchMaxUserName,_Out_ LPTSTR pszDomainName,_Inout_ DWORD *pcchMaxDomainname,_Out_ LPTSTR pszPassword,_Inout_ DWORD *pcchMaxPassword)
BOOL WINAPI credui.CredUnPackAuthenticationBuffer(_In_ DWORD dwFlags,_In_ PVOID pAuthBuffer,_In_ DWORD cbAuthBuffer,_Out_ LPTSTR pszUserName,_Inout_ DWORD *pcchMaxUserName,_Out_ LPTSTR pszDomainName,_Inout_ DWORD *pcchMaxDomainname,_Out_ LPTSTR pszPassword,_Inout_ DWORD *pcchMaxPassword)
BOOL WINAPI credui.CredUnPackAuthenticationBufferW(_In_ DWORD dwFlags,_In_ PVOID pAuthBuffer,_In_ DWORD cbAuthBuffer,_Out_ LPTSTR pszUserName,_Inout_ DWORD *pcchMaxUserName,_Out_ LPTSTR pszDomainName,_Inout_ DWORD *pcchMaxDomainname,_Out_ LPTSTR pszPassword,_Inout_ DWORD *pcchMaxPassword)
BOOL WINAPI crypt32.CertAddCertificateContextToStore(_In_ HCERTSTORE hCertStore,_In_ PCCERT_CONTEXT pCertContext,_In_ DWORD dwAddDisposition,_Out_opt_ PCCERT_CONTEXT *ppStoreContext)
BOOL WINAPI crypt32.CertAddCertificateLinkToStore(_In_ HCERTSTORE hCertStore,_In_ PCCERT_CONTEXT pCertContext,_In_ DWORD dwAddDisposition,_Out_opt_ PCCERT_CONTEXT *ppStoreContext)
BOOL WINAPI crypt32.CertAddCRLContextToStore(_In_ HCERTSTORE hCertStore,_In_ PCCRL_CONTEXT pCrlContext,_In_ DWORD dwAddDisposition,_Out_opt_ PCCRL_CONTEXT *ppStoreContext)
BOOL WINAPI crypt32.CertAddCRLLinkToStore(_In_ HCERTSTORE hCertStore,_In_ PCCRL_CONTEXT pCrlContext,_In_ DWORD dwAddDisposition,_Out_opt_ PCCRL_CONTEXT *ppStoreContext)
BOOL WINAPI crypt32.CertAddCTLContextToStore(_In_ HCERTSTORE hCertStore,_In_ PCCTL_CONTEXT pCtlContext,_In_ DWORD dwAddDisposition,_Out_opt_ PCCTL_CONTEXT *ppStoreContext)
BOOL WINAPI crypt32.CertAddCTLLinkToStore(_In_ HCERTSTORE hCertStore,_In_ PCCTL_CONTEXT pCtlContext,_In_ DWORD dwAddDisposition,_Out_opt_ PCCTL_CONTEXT *ppStoreContext)
BOOL WINAPI crypt32.CertAddEnhancedKeyUsageIdentifier(_In_ PCCERT_CONTEXT pCertContext,_In_ LPCSTR pszUsageIdentifier)
BOOL WINAPI crypt32.CertAddStoreToCollection(_In_ HCERTSTORE hCollectionStore,_In_opt_ HCERTSTORE hSiblingStore,_In_ DWORD dwUpdateFlag,_In_ DWORD dwPriority)
BOOL WINAPI crypt32.CertCloseStore(_In_ HCERTSTORE hCertStore,_In_ DWORD dwFlags)
BOOL WINAPI crypt32.CertCompareCertificate(_In_ DWORD dwCertEncodingType,_In_ PCERT_INFO pCertId1,_In_ PCERT_INFO pCertId2)
BOOL WINAPI crypt32.CertCompareCertificateName(_In_ DWORD dwCertEncodingType,_In_ PCERT_NAME_BLOB pCertName1,_In_ PCERT_NAME_BLOB pCertName2)
BOOL WINAPI crypt32.CertCompareIntegerBlob(_In_ PCRYPT_INTEGER_BLOB pInt1,_In_ PCRYPT_INTEGER_BLOB pInt2)
BOOL WINAPI crypt32.CertComparePublicKeyInfo(_In_ DWORD dwCertEncodingType,_In_ PCERT_PUBLIC_KEY_INFO pPublicKey1,_In_ PCERT_PUBLIC_KEY_INFO pPublicKey2)
BOOL WINAPI crypt32.CertCreateCertificateChainEngine(_In_ PCERT_CHAIN_ENGINE_CONFIG pConfig,_Out_ HCERTCHAINENGINE *phChainEngine)
BOOL WINAPI crypt32.CertCreateCTLEntryFromCertificateContextProperties(_In_ PCCERT_CONTEXT pCertContext,_In_ DWORD cOptAttr,_In_ PCRYPT_ATTRIBUTE rgOptAttr,_In_ DWORD dwFlags,_In_ void *pvReserved,_Out_ PCTL_ENTRY pCtlEntry,_Inout_ DWORD *pcbCtlEntry)
BOOL WINAPI crypt32.CertDeleteCertificateFromStore(_In_ PCCERT_CONTEXT pCertContext)
BOOL WINAPI crypt32.CertDeleteCRLFromStore(_In_ PCCRL_CONTEXT pCrlContext)
BOOL WINAPI crypt32.CertDeleteCTLFromStore(_In_ PCCTL_CONTEXT pCtlContext)
BOOL WINAPI crypt32.CertEnumSubjectInSortedCTL(_In_ PCCTL_CONTEXT pCtlContext,_Inout_ void **ppvNextSubject,_Out_ PCRYPT_DER_BLOB pSubjectIdentifier,_Out_ PCRYPT_DER_BLOB pEncodedAttributes)
BOOL WINAPI crypt32.CertEnumSystemStore(_In_ DWORD dwFlags,_In_opt_ void *pvSystemStoreLocationPara,_In_ void *pvArg,_In_ PFN_CERT_ENUM_SYSTEM_STORE pfnEnum)
BOOL WINAPI crypt32.CertEnumSystemStoreLocation(_In_ DWORD dwFlags,_In_ void *pvArg,_In_ PFN_CERT_ENUM_SYSTEM_STORE_LOCATION pfnEnum)
BOOL WINAPI crypt32.CertFindCertificateInCRL(_In_ PCCERT_CONTEXT pCert,_In_ PCCRL_CONTEXT pCrlContext,_In_ DWORD dwFlags,_In_opt_ void *pvReserved,_Out_ PCRL_ENTRY *ppCrlEntry)
BOOL WINAPI crypt32.CertFindSubjectInSortedCTL(_In_ PCRYPT_DATA_BLOB pSubjectIdentifier,_In_ PCCTL_CONTEXT pCtlContext,_In_ DWORD dwFlags,_In_ void *pvReserved,_Out_ PCRYPT_DER_BLOB pEncodedAttributes)
BOOL WINAPI crypt32.CertFreeCertificateContext(_In_ PCCERT_CONTEXT pCertContext)
BOOL WINAPI crypt32.CertFreeCRLContext(_In_ PCCRL_CONTEXT pCrlContext)
BOOL WINAPI crypt32.CertFreeCTLContext(_In_ PCCTL_CONTEXT pCtlContext)
BOOL WINAPI crypt32.CertGetCertificateChain(_In_opt_ HCERTCHAINENGINE hChainEngine,_In_ PCCERT_CONTEXT pCertContext,_In_opt_ LPFILETIME pTime,_In_ HCERTSTORE hAdditionalStore,_In_ PCERT_CHAIN_PARA pChainPara,_In_ DWORD dwFlags,_In_ LPVOID pvReserved,_Out_ PCCERT_CHAIN_CONTEXT *ppChainContext)
BOOL WINAPI crypt32.CertGetCertificateContextProperty(_In_ PCCERT_CONTEXT pCertContext,_In_ DWORD dwPropId,_Out_ void *pvData,_Inout_ DWORD *pcbData)
BOOL WINAPI crypt32.CertGetCRLContextProperty(_In_ PCCRL_CONTEXT pCrlContext,_In_ DWORD dwPropId,_Out_ void *pvData,_Inout_ DWORD *pcbData)
BOOL WINAPI crypt32.CertGetCTLContextProperty(_In_ PCCTL_CONTEXT pCtlContext,_In_ DWORD dwPropId,_Out_ void *pvData,_Inout_ DWORD *pcbData)
BOOL WINAPI crypt32.CertGetEnhancedKeyUsage(_In_ PCCERT_CONTEXT pCertContext,_In_ DWORD dwFlags,_Out_ PCERT_ENHKEY_USAGE pUsage,_Inout_ DWORD *pcbUsage)
BOOL WINAPI crypt32.CertGetIntendedKeyUsage(_In_ DWORD dwCertEncodingType,_In_ PCERT_INFO pCertInfo,_Out_ BYTE *pbKeyUsage,_In_ DWORD cbKeyUsage)
BOOL WINAPI crypt32.CertGetValidUsages(_In_ DWORD cCerts,_In_ PCCERT_CONTEXT *rghCerts,_Out_ int *cNumOIDs,_Out_ LPSTR *rghOIDs,_Inout_ DWORD *pcbOIDs)
BOOL WINAPI crypt32.CertIsRDNAttrsInCertificateName(_In_ DWORD dwCertEncodingType,_In_ DWORD dwFlags,_In_ PCERT_NAME_BLOB pCertName,_In_ PCERT_RDN pRDN)
BOOL WINAPI crypt32.CertIsStrongHashToSign(_In_ PCCERT_STRONG_SIGN_PARA pStrongSignPara,_In_ LPCWSTR pwszCNGHashAlgid,_In_opt_ PCCERT_CONTEXT pSigningCert)
BOOL WINAPI crypt32.CertIsValidCRLForCertificate(_In_ PCCERT_CONTEXT pCert,_In_ PCCRL_CONTEXT pCRL,_In_ DWORD dwFlags,_In_ void *pvReserved)
BOOL WINAPI crypt32.CertRemoveEnhancedKeyUsageIdentifier(_In_ PCCERT_CONTEXT pCertContext,_In_ LPCSTR pszUsageIdentifier)
BOOL WINAPI crypt32.CertResyncCertificateChainEngine(_In_opt_ HCERTCHAINENGINE hChainEngine)
BOOL WINAPI crypt32.CertRetrieveLogoOrBiometricInfo(_In_ PCCERT_CONTEXT pCertContext,_In_ LPCSTR lpszLogoOrBiometricType,_In_ DWORD dwRetrievalFlags,_In_ DWORD dwTimeout,_In_ DWORD dwFlags,_Reserved_ void *pvReserved,_Out_ BYTE **ppbData,_Out_ DWORD *pcbData,_Out_ LPWSTR *ppwszMimeType)
BOOL WINAPI crypt32.CertSaveStore(_In_ HCERTSTORE hCertStore,_In_ DWORD dwMsgAndCertEncodingType,_In_ DWORD dwSaveAs,_In_ DWORD dwSaveTo,_Inout_ void *pvSaveToPara,_In_ DWORD dwFlags)
BOOL WINAPI crypt32.CertSelectCertificateChains(_In_opt_ LPCGUID pSelectionContext,_In_ DWORD dwFlags,_In_opt_ PCCERT_SELECT_CHAIN_PARA pChainParameters,_In_ DWORD cCriteria,_In_opt_ PCCERT_SELECT_CRITERIA rgpCriteria,_In_ HCERTSTORE hStore,_Out_ PDWORD pcSelection,_Out_ PCCERT_CHAIN_CONTEXT **pprgpSelection)
BOOL WINAPI crypt32.CertSerializeCertificateStoreElement(_In_ PCCERT_CONTEXT pCertContext,_In_ DWORD dwFlags,_Out_ BYTE *pbElement,_Inout_ DWORD *pcbElement)
BOOL WINAPI crypt32.CertSerializeCRLStoreElement(_In_ PCCRL_CONTEXT pCrlContext,_In_ DWORD dwFlags,_Out_ BYTE *pbElement,_Inout_ DWORD *pcbElement)
BOOL WINAPI crypt32.CertSerializeCTLStoreElement(_In_ PCCTL_CONTEXT pCtlContext,_In_ DWORD dwFlags,_Out_ BYTE *pbElement,_Inout_ DWORD *pcbElement)
BOOL WINAPI crypt32.CertSetCertificateContextPropertiesFromCTLEntry(_In_ PCCERT_CONTEXT pCertContext,_In_ PCTL_ENTRY pCtlEntry,_In_ DWORD dwFlags)
BOOL WINAPI crypt32.CertSetEnhancedKeyUsage(_In_ PCCERT_CONTEXT pCertContext,_In_ PCERT_ENHKEY_USAGE pUsage)
BOOL WINAPI crypt32.CertStrToNameA(_In_ DWORD dwCertEncodingType,_In_ LPCTSTR pszX500,_In_ DWORD dwStrType,_In_opt_ void *pvReserved,_Out_ BYTE *pbEncoded,_Inout_ DWORD *pcbEncoded,_Out_opt_ LPCTSTR *ppszError)
BOOL WINAPI crypt32.CertStrToName(_In_ DWORD dwCertEncodingType,_In_ LPCTSTR pszX500,_In_ DWORD dwStrType,_In_opt_ void *pvReserved,_Out_ BYTE *pbEncoded,_Inout_ DWORD *pcbEncoded,_Out_opt_ LPCTSTR *ppszError)
BOOL WINAPI crypt32.CertStrToNameW(_In_ DWORD dwCertEncodingType,_In_ LPCTSTR pszX500,_In_ DWORD dwStrType,_In_opt_ void *pvReserved,_Out_ BYTE *pbEncoded,_Inout_ DWORD *pcbEncoded,_Out_opt_ LPCTSTR *ppszError)
BOOL WINAPI crypt32.CertVerifyCertificateChainPolicy(_In_ LPCSTR pszPolicyOID,_In_ PCCERT_CHAIN_CONTEXT pChainContext,_In_ PCERT_CHAIN_POLICY_PARA pPolicyPara,_Inout_ PCERT_CHAIN_POLICY_STATUS pPolicyStatus)
BOOL WINAPI crypt32.CertVerifyCRLRevocation(_In_ DWORD dwCertEncodingType,_In_ PCERT_INFO pCertId,_In_ DWORD cCrlInfo,_In_ PCRL_INFO rgpCrlInfo[])
BOOL WINAPI crypt32.CertVerifyCTLUsage(_In_ DWORD dwEncodingType,_In_ DWORD dwSubjectType,_In_ void *pvSubject,_In_ PCTL_USAGE pSubjectUsage,_In_ DWORD dwFlags,_In_opt_ PCTL_VERIFY_USAGE_PARA pVerifyUsagePara,_Inout_ PCTL_VERIFY_USAGE_STATUS pVerifyUsageStatus)
BOOL WINAPI crypt32.CertVerifyRevocation(_In_ DWORD dwEncodingType,_In_ DWORD dwRevType,_In_ DWORD cContext,_In_ PVOID rgpvContext[],_In_ DWORD dwFlags,_In_opt_ PCERT_REVOCATION_PARA pRevPara,_Inout_ PCERT_REVOCATION_STATUS pRevStatus)
BOOL WINAPI crypt32.CertVerifySubjectCertificateContext(_In_ PCCERT_CONTEXT pSubject,_In_opt_ PCCERT_CONTEXT pIssuer,_Inout_ DWORD *pdwFlags)
BOOL WINAPI crypt32.CertVerifyValidityNesting(_In_ PCERT_INFO pSubjectInfo,_In_ PCERT_INFO pIssuerInfo)
BOOL WINAPI crypt32.CryptAcquireCertificatePrivateKey(_In_ PCCERT_CONTEXT pCert,_In_ DWORD dwFlags,_In_opt_ void *pvParameters,_Out_ HCRYPTPROV_OR_NCRYPT_KEY_HANDLE *phCryptProvOrNCryptKey,_Out_ DWORD *pdwKeySpec,_Out_ BOOL *pfCallerFreeProvOrNCryptKey)
BOOL WINAPI crypt32.CryptEnumOIDFunction(_In_ DWORD dwEncodingType,_In_ LPCSTR pszFuncName,_In_ LPCSTR pszOID,_In_ DWORD dwFlags,_In_ void *pvArg,_In_ PFN_CRYPT_ENUM_OID_FUNC pfnEnumOIDFunc)
BOOL WINAPI crypt32.CryptEnumOIDInfo(_In_ DWORD dwGroupId,_In_ DWORD dwFlags,_In_ void *pvArg,_In_ PFN_CRYPT_ENUM_OID_INFO pfnEnumOIDInfo)
BOOL WINAPI crypt32.CryptExportPKCS8Ex(_In_ CRYPT_PKCS8_EXPORT_PARAMS *psExportParams,_In_ DWORD dwFlags,_In_opt_ void *pvAuxInfo,_Out_opt_ BYTE *pbPrivateKeyBlob,_Inout_ DWORD *pcbPrivateKeyBlob)
BOOL WINAPI crypt32.CryptExportPKCS8(_In_ HCRYPTPROV hCryptProv,_In_ DWORD dwKeySpec,_In_ LPSTR pszPrivateKeyObjId,_In_ DWORD dwFlags,_In_opt_ void *pvAuxInfo,_Out_opt_ BYTE *pbPrivateKeyBlob,_Inout_ DWORD *pcbPrivateKeyBlob)
BOOL WINAPI crypt32.CryptExportPublicKeyInfoEx(_In_ HCRYPTPROV_OR_NCRYPT_KEY_HANDLE hCryptProvOrNCryptKey,_In_ DWORD dwKeySpec,_In_ DWORD dwCertEncodingType,_In_ LPSTR pszPublicKeyObjId,_In_ DWORD dwFlags,_In_ void *pvAuxInfo,_Out_ PCERT_PUBLIC_KEY_INFO pInfo,_Inout_ DWORD *pcbInfo)
BOOL WINAPI crypt32.CryptExportPublicKeyInfoFromBCryptKeyHandle(_In_ BCRYPT_KEY_HANDLE hBCryptKey,_In_ DWORD dwCertEncodingType,_In_opt_ LPSTR pszPublicKeyObjId,_In_ DWORD dwFlags,_In_opt_ void pvAuxInfo,_Out_opt_ PCERT_PUBLIC_KEY_INFO pInfo,_Inout_ DWORD pcbInfo)
BOOL WINAPI crypt32.CryptExportPublicKeyInfo(_In_ HCRYPTPROV_OR_NCRYPT_KEY_HANDLE hCryptProvOrNCryptKey,_In_ DWORD dwKeySpec,_In_ DWORD dwCertEncodingType,_Out_ PCERT_PUBLIC_KEY_INFO pInfo,_Inout_ DWORD *pcbInfo)
BOOL WINAPI crypt32.CryptFindCertificateKeyProvInfo(_In_ PCCERT_CONTEXT pCert,_In_ DWORD dwFlags,_In_ void *pvReserved)
BOOL WINAPI crypt32.CryptFreeOIDFunctionAddress(_In_ HCRYPTOIDFUNCADDR hFuncAddr,_In_ DWORD dwFlags)
BOOL WINAPI crypt32.CryptGetDefaultOIDDllList(_In_ HCRYPTOIDFUNCSET hFuncSet,_In_ DWORD dwEncodingType,_Out_ LPWSTR pwszDllList,_Inout_ DWORD *pcchDllList)
BOOL WINAPI crypt32.CryptGetDefaultOIDFunctionAddress(_In_ HCRYPTOIDFUNCSET hFuncSet,_In_ DWORD dwEncodingType,_In_opt_ LPCWSTR pwszDll,_In_ DWORD dwFlags,_Out_ void **ppvFuncAddr,_Inout_ HCRYPTOIDFUNCADDR *phFuncAddr)
BOOL WINAPI crypt32.CryptGetOIDFunctionAddress(_In_ HCRYPTOIDFUNCSET hFuncSet,_In_ DWORD dwEncodingType,_In_ LPCSTR pszOID,_In_ DWORD dwFlags,_Out_ void **ppvFuncAddr,_Out_ HCRYPTOIDFUNCADDR *phFuncAddr)
BOOL WINAPI crypt32.CryptGetOIDFunctionValue(_In_ DWORD dwEncodingType,_In_ LPCSTR pszFuncName,_In_ LPCSTR pszOID,_In_ LPCWSTR pwszValueName,_Out_ DWORD *pdwValueType,_Out_ BYTE *pbValueData,_Inout_ DWORD *pcbValueData)
BOOL WINAPI crypt32.CryptHashCertificate2(_In_ LPCWSTR pwszCNGHashAlgid,_In_ DWORD dwFlags,_Reserved_ void *pvReserved,_In_ BYTE *pbEncoded,_In_ DWORD cbEncoded,_Out_ BYTE *pbComputedHash,_Inout_ DWORD *pcbComputedHash)
BOOL WINAPI crypt32.CryptHashPublicKeyInfo(_In_ HCRYPTPROV_LEGACY hCryptProv,_In_ ALG_ID Algid,_In_ DWORD dwFlags,_In_ DWORD dwCertEncodingType,_In_ PCERT_PUBLIC_KEY_INFO pInfo,_Out_ BYTE *pbComputedHash,_Inout_ DWORD *pcbComputedHash)
BOOL WINAPI crypt32.CryptImportPKCS8(_In_ CRYPT_PKCS8_IMPORT_PARAMS sPrivateKeyAndParams,_In_ DWORD dwFlags,_Out_opt_ HCRYPTPROV *phCryptProv,_In_opt_ void *pvAuxInfo)
BOOL WINAPI crypt32.CryptImportPublicKeyInfoEx2(_In_ DWORD dwCertEncodingType,_In_ PCERT_PUBLIC_KEY_INFO pInfo,_In_ DWORD dwFlags,_In_ void *pvAuxInfo,_Out_ BCRYPT_KEY_HANDLE *phKey)
BOOL WINAPI crypt32.CryptImportPublicKeyInfoEx(_In_ HCRYPTPROV hCryptProv,_In_ DWORD dwCertEncodingType,_In_ PCERT_PUBLIC_KEY_INFO pInfo,_In_ ALG_ID aiKeyAlg,_In_ DWORD dwFlags,_In_ void *pvAuxInfo,_Out_ HCRYPTKEY *phKey)
BOOL WINAPI crypt32.CryptImportPublicKeyInfo(_In_ HCRYPTPROV hCryptProv,_In_ DWORD dwCertEncodingType,_In_ PCERT_PUBLIC_KEY_INFO pInfo,_Out_ HCRYPTKEY *phKey)
BOOL WINAPI crypt32.CryptInstallOIDFunctionAddress(_In_ HMODULE hModule,_In_ DWORD dwEncodingType,_In_ LPCSTR pszFuncName,_In_ DWORD cFuncEntry,_In_ CRYPT_OID_FUNC_ENTRY rgFuncEntry[],_In_ DWORD dwFlags)
BOOL WINAPI crypt32.CryptMsgClose(_In_ HCRYPTMSG hCryptMsg)
BOOL WINAPI crypt32.CryptMsgCountersignEncoded(_In_ DWORD dwEncodingType,_In_ PBYTE pbSignerInfo,_In_ DWORD cbSignerInfo,_In_ DWORD cCountersigners,_In_ PCMSG_SIGNER_ENCODE_INFO rgCountersigners,_Out_ PBYTE pbCountersignature,_Inout_ PDWORD pcbCountersignature)
BOOL WINAPI crypt32.CryptMsgCountersign(_Inout_ HCRYPTMSG hCryptMsg,_In_ DWORD dwIndex,_In_ DWORD cCountersigners,_In_ PCMSG_SIGNER_ENCODE_INFO rgCountersigners)
BOOL WINAPI crypt32.CryptMsgEncodeAndSignCTL(_In_ DWORD dwMsgEncodingType,_In_ PCTL_INFO pCtlInfo,_In_ PCMSG_SIGNED_ENCODE_INFO pSignInfo,_In_ DWORD dwFlags,_Out_ BYTE *pbEncoded,_Inout_ DWORD *pcbEncoded)
BOOL WINAPI crypt32.CryptMsgGetAndVerifySigner(_In_ HCRYPTMSG hCryptMsg,_In_ DWORD cSignerStore,_In_opt_ HCERTSTORE *rghSignerStore,_In_ DWORD dwFlags,_Out_opt_ PCCERT_CONTEXT *ppSigner,_Inout_opt_ DWORD *pdwSignerIndex)
BOOL WINAPI crypt32.CryptMsgGetParam(_In_ HCRYPTMSG hCryptMsg,_In_ DWORD dwParamType,_In_ DWORD dwIndex,_Out_ void *pvData,_Inout_ DWORD *pcbData)
BOOL WINAPI crypt32.CryptMsgSignCTL(_In_ DWORD dwMsgEncodingType,_In_ BYTE *pbCtlContent,_In_ DWORD cbCtlContent,_In_ PCMSG_SIGNED_ENCODE_INFO pSignInfo,_In_ DWORD dwFlags,_Out_ BYTE *pbEncoded,_Inout_ DWORD *pcbEncoded)
BOOL WINAPI crypt32.CryptMsgVerifyCountersignatureEncodedEx(_In_opt_ HCRYPTPROV_LEGACY hCryptProv,_In_ DWORD dwEncodingType,_In_ PBYTE pbSignerInfo,_In_ DWORD cbSignerInfo,_In_ PBYTE pbSignerInfoCountersignature,_In_ DWORD cbSignerInfoCountersignature,_In_ DWORD dwSignerType,_In_ void *pvSigner,_Reserved_ DWORD dwFlags,_Reserved_ void *pvExtra)
BOOL WINAPI crypt32.CryptMsgVerifyCountersignatureEncoded(_In_ HCRYPTPROV_LEGACY hCryptProv,_In_ DWORD dwEncodingType,_In_ PBYTE pbSignerInfo,_In_ DWORD cbSignerInfo,_In_ PBYTE pbSignerInfoCountersignature,_In_ DWORD cbSignerInfoCountersignature,_In_ PCERT_INFO pciCountersigner)
BOOL WINAPI crypt32.CryptProtectData(_In_ DATA_BLOB *pDataIn,_In_opt_ LPCWSTR szDataDescr,_In_opt_ DATA_BLOB *pOptionalEntropy,_Reserved_ PVOID pvReserved,_In_opt_ CRYPTPROTECT_PROMPTSTRUCT *pPromptStruct,_In_ DWORD dwFlags,_Out_ DATA_BLOB *pDataOut)
BOOL WINAPI crypt32.CryptProtectMemory(_Inout_ LPVOID pData,_In_ DWORD cbData,_In_ DWORD dwFlags)
BOOL WINAPI crypt32.CryptRegisterDefaultOIDFunction(_In_ DWORD dwEncodingType,_In_ LPCSTR pszFuncName,_In_ DWORD dwIndex,_In_ LPCWSTR pwszDll)
BOOL WINAPI crypt32.CryptRegisterOIDFunction(_In_ DWORD dwEncodingType,_In_ LPCSTR pszFuncName,_In_ LPCSTR pszOID,_In_ LPCWSTR pwszDll,_In_ LPCSTR pszOverrideFuncName)
BOOL WINAPI crypt32.CryptRegisterOIDInfo(_In_ PCCRYPT_OID_INFO pInfo,_In_ DWORD dwFlags)
BOOL WINAPI crypt32.CryptSIPCreateIndirectData(_In_ SIP_SUBJECTINFO *pSubjectInfo,_Inout_ DWORD *pcbIndirectData,_Out_ SIP_INDIRECT_DATA *pIndirectData)
BOOL WINAPI crypt32.CryptSIPGetCaps(_In_ SIP_SUBJECTINFO *pSubjInfo,_Inout_ SIP_CAP_SET *pCaps)
BOOL WINAPI crypt32.CryptSIPGetSignedDataMsg(_In_ SIP_SUBJECTINFO *pSubjectInfo,_Out_ DWORD *pdwEncodingType,_In_ DWORD dwIndex,_Inout_ DWORD *pcbSignedDataMsg,_Out_ BYTE *pbSignedDataMsg)
BOOL WINAPI crypt32.CryptSIPPutSignedDataMsg(_In_ SIP_SUBJECTINFO *pSubjectInfo,_In_ DWORD dwEncodingType,_Out_ DWORD *pdwIndex,_In_ DWORD cbSignedDataMsg,_In_ BYTE *pbSignedDataMsg)
BOOL WINAPI crypt32.CryptSIPRemoveSignedDataMsg(_In_ SIP_SUBJECTINFO *pSubjectInfo,_In_ DWORD dwIndex)
BOOL WINAPI crypt32.CryptSIPRetrieveSubjectGuidForCatalogFile(_In_ LPCWSTR FileName,_In_opt_ HANDLE hFileIn,_Out_ GUID *pgSubject)
BOOL WINAPI crypt32.CryptSIPRetrieveSubjectGuid(_In_ LPCWSTR FileName,_In_opt_ HANDLE hFileIn,_Out_ GUID *pgSubject)
BOOL WINAPI crypt32.CryptSIPVerifyIndirectData(_In_ SIP_SUBJECTINFO *pSubjectInfo,_In_ SIP_INDIRECT_DATA *pIndirectData)
BOOL WINAPI crypt32.CryptStringToBinaryA(_In_ LPCTSTR pszString,_In_ DWORD cchString,_In_ DWORD dwFlags,_In_ BYTE *pbBinary,_Inout_ DWORD *pcbBinary,_Out_ DWORD *pdwSkip,_Out_ DWORD *pdwFlags)
BOOL WINAPI crypt32.CryptStringToBinary(_In_ LPCTSTR pszString,_In_ DWORD cchString,_In_ DWORD dwFlags,_In_ BYTE *pbBinary,_Inout_ DWORD *pcbBinary,_Out_ DWORD *pdwSkip,_Out_ DWORD *pdwFlags)
BOOL WINAPI crypt32.CryptStringToBinaryW(_In_ LPCTSTR pszString,_In_ DWORD cchString,_In_ DWORD dwFlags,_In_ BYTE *pbBinary,_Inout_ DWORD *pcbBinary,_Out_ DWORD *pdwSkip,_Out_ DWORD *pdwFlags)
BOOL WINAPI crypt32.CryptUninstallDefaultContext(_In_ HCRYPTDEFAULTCONTEXT hDefaultContext,_In_ DWORD dwFlags,_In_ void *pvReserved)
BOOL WINAPI crypt32.CryptUnprotectData(_In_ DATA_BLOB *pDataIn,_Out_opt_ LPWSTR *ppszDataDescr,_In_opt_ DATA_BLOB *pOptionalEntropy,_Reserved_ PVOID pvReserved,_In_opt_ CRYPTPROTECT_PROMPTSTRUCT *pPromptStruct,_In_ DWORD dwFlags,_Out_ DATA_BLOB *pDataOut)
BOOL WINAPI crypt32.CryptUnprotectMemory(_Inout_ LPVOID pData,_In_ DWORD cbData,_In_ DWORD dwFlags)
BOOL WINAPI crypt32.CryptUnregisterDefaultOIDFunction(_In_ DWORD dwEncodingType,_In_ LPCSTR pszFuncName,_In_ LPCWSTR pwszDll)
BOOL WINAPI crypt32.CryptUnregisterOIDFunction(_In_ DWORD dwEncodingType,_In_ LPCSTR pszFuncName,_In_ LPCSTR pszOID)
BOOL WINAPI crypt32.CryptUnregisterOIDInfo(_In_ PCCRYPT_OID_INFO pInfo)
BOOL WINAPI crypt32.CryptUpdateProtectedState(_In_ PSID pOldSid,_In_ LPCWSTR pwszOldPassword,_In_ DWORD dwFlags,_Out_ DWORD *pdwSuccessCount,_Out_ DWORD *pdwFailureCount)
BOOL WINAPI crypt32.CryptVerifyCertificateSignatureEx(_In_ HCRYPTPROV_LEGACY hCryptProv,_In_ DWORD dwCertEncodingType,_In_ DWORD dwSubjectType,_In_ void *pvSubject,_In_ DWORD dwIssuerType,_In_ void *pvIssuer,_In_ DWORD dwFlags,_Inout_opt_ void *pvExtra)
BOOL WINAPI crypt32.CryptVerifyCertificateSignature(_In_ HCRYPTPROV_LEGACY hCryptProv,_In_ DWORD dwCertEncodingType,_In_ BYTE *pbEncoded,_In_ DWORD cbEncoded,_In_ PCERT_PUBLIC_KEY_INFO pPublicKey)
BOOL WINAPI crypt32.CryptVerifyMessageHash(_In_ PCRYPT_HASH_MESSAGE_PARA pHashPara,_In_ BYTE *pbHashedBlob,_In_ DWORD cbHashedBlob,_Out_ BYTE *pbToBeHashed,_Inout_ DWORD *pcbToBeHashed,_Out_opt_ BYTE *pbComputedHash,_Inout_opt_ DWORD *pcbComputedHash)
BOOL WINAPI crypt32.PFXExportCertStoreEx(_In_ HCERTSTORE hStore,_Inout_ CRYPT_DATA_BLOB *pPFX,_In_ LPCWSTR szPassword,_In_ void *pvPara,_In_ DWORD dwFlags)
BOOL WINAPI crypt32.PFXExportCertStore(_In_ HCERTSTORE hStore,_Inout_ CRYPT_DATA_BLOB *pPFX,_In_ LPCWSTR szPassword,_In_ DWORD dwFlags)
BOOL WINAPI crypt32.PFXIsPFXBlob(_In_ CRYPT_DATA_BLOB *pPFX)
BOOL WINAPI crypt32.PFXVerifyPassword(_In_ CRYPT_DATA_BLOB *pPFX,_In_ LPCWSTR szPassword,_In_ DWORD dwFlags)
BOOL WINAPI cryptdlg.CertSelectCertificate(_Inout_ PCERT_SELECT_STRUCT_W pCertSelectInfo)
BOOL WINAPI cryptnet.CryptGetObjectUrl(_In_ LPCSTR pszUrlOid,_In_ LPVOID pvPara,_In_ DWORD dwFlags,_Out_ PCRYPT_URL_ARRAY pUrlArray,_Inout_ DWORD *pcbUrlArray,_Out_ PCRYPT_URL_INFO pUrlInfo,_Inout_ DWORD *pcbUrlInfo,_Reserved_ LPVOID pvReserved)
BOOL WINAPI cryptnet.CryptGetTimeValidObject(_In_ LPCSTR pszTimeValidOid,_In_ LPVOID pvPara,_In_ PCCERT_CONTEXT pIssuer,_In_opt_ LPFILETIME pftValidFor,_In_ DWORD dwFlags,_In_ DWORD dwTimeout,_Out_opt_ LPVOID *ppvObject,_In_opt_ PCRYPT_CREDENTIALS pCredentials,_Inout_opt_ PCRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO pExtraInfo)
BOOL WINAPI cryptnet.CryptRetrieveObjectByUrlA(_In_ LPCTSTR pszUrl,_In_ LPCSTR pszObjectOid,_In_ DWORD dwRetrievalFlags,_In_ DWORD dwTimeout,_Out_ LPVOID *ppvObject,_In_ HCRYPTASYNC hAsyncRetrieve,_In_opt_ PCRYPT_CREDENTIALS pCredentials,_In_opt_ LPVOID pvVerify,_In_ PCRYPT_RETRIEVE_AUX_INFO pAuxInfo)
BOOL WINAPI cryptnet.CryptRetrieveObjectByUrl(_In_ LPCTSTR pszUrl,_In_ LPCSTR pszObjectOid,_In_ DWORD dwRetrievalFlags,_In_ DWORD dwTimeout,_Out_ LPVOID *ppvObject,_In_ HCRYPTASYNC hAsyncRetrieve,_In_opt_ PCRYPT_CREDENTIALS pCredentials,_In_opt_ LPVOID pvVerify,_In_ PCRYPT_RETRIEVE_AUX_INFO pAuxInfo)
BOOL WINAPI cryptnet.CryptRetrieveObjectByUrlW(_In_ LPCTSTR pszUrl,_In_ LPCSTR pszObjectOid,_In_ DWORD dwRetrievalFlags,_In_ DWORD dwTimeout,_Out_ LPVOID *ppvObject,_In_ HCRYPTASYNC hAsyncRetrieve,_In_opt_ PCRYPT_CREDENTIALS pCredentials,_In_opt_ LPVOID pvVerify,_In_ PCRYPT_RETRIEVE_AUX_INFO pAuxInfo)
BOOL WINAPI cryptui.CryptUIDlgCertMgr(_In_ PCCRYPTUI_CERT_MGR_STRUCT pCryptUICertMgr)
BOOL WINAPI cryptui.CryptUIDlgViewCertificateA(_In_ PCCRYPTUI_VIEWCERTIFICATE_STRUCTW pCertViewInfo,_Out_ BOOL *pfPropertiesChanged)
BOOL WINAPI cryptui.CryptUIDlgViewCertificate(_In_ PCCRYPTUI_VIEWCERTIFICATE_STRUCTW pCertViewInfo,_Out_ BOOL *pfPropertiesChanged)
BOOL WINAPI cryptui.CryptUIDlgViewCertificateW(_In_ PCCRYPTUI_VIEWCERTIFICATE_STRUCTW pCertViewInfo,_Out_ BOOL *pfPropertiesChanged)
BOOL WINAPI cryptui.CryptUIDlgViewSignerInfoA(_In_ CRYPTUI_VIEWSIGNERINFO_STRUCT *pcvsi)
BOOL WINAPI cryptui.CryptUIDlgViewSignerInfo(_In_ CRYPTUI_VIEWSIGNERINFO_STRUCT *pcvsi)
BOOL WINAPI cryptui.CryptUIDlgViewSignerInfoW(_In_ CRYPTUI_VIEWSIGNERINFO_STRUCT *pcvsi)
BOOL WINAPI cryptui.CryptUIWizDigitalSign(_In_ DWORD dwFlags,_In_opt_ HWND hwndParent,_In_opt_ LPCWSTR pwszWizardTitle,_In_ PCCRYPTUI_WIZ_DIGITAL_SIGN_INFO pDigitalSignInfo,_Out_opt_ PCCRYPTUI_WIZ_DIGITAL_SIGN_CONTEXT *ppSignContext)
BOOL WINAPI cryptui.CryptUIWizExport(_In_ DWORD dwFlags,_In_ HWND hwndParent,_In_ LPCWSTR pwszWizardTitle,_In_ PCCRYPTUI_WIZ_EXPORT_INFO pExportInfo,_In_ void *pvoid)
BOOL WINAPI cryptui.CryptUIWizFreeDigitalSignContext(_In_ PCCRYPTUI_WIZ_DIGITAL_SIGN_CONTEXT pSignContext)
BOOL WINAPI cryptui.CryptUIWizImport(_In_ DWORD dwFlags,_In_ HWND hwndParent,_In_ LPCWSTR pwszWizardTitle,_In_ PCCRYPTUI_WIZ_IMPORT_SRC_INFO pImportSrc,_In_ HCERTSTORE hDestCertStore)
BOOL WINAPI d2d1.D2D1InvertMatrix(_Inout_ D2D1_MATRIX_3X2_F *matrix)
BOOL WINAPI dbghelp.EnumDirTree(_In_opt_ HANDLE hProcess,_In_ PCTSTR RootPath,_In_ PCTSTR InputPathName,_Out_opt_ PTSTR OutputPathBuffer,_In_opt_ PENUMDIRTREE_CALLBACK Callback,_In_opt_ PVOID CallbackData)
BOOL WINAPI dbghelp.EnumDirTreeW(_In_opt_ HANDLE hProcess,_In_ PCTSTR RootPath,_In_ PCTSTR InputPathName,_Out_opt_ PTSTR OutputPathBuffer,_In_opt_ PENUMDIRTREE_CALLBACK Callback,_In_opt_ PVOID CallbackData)
BOOL WINAPI dbghelp.EnumerateLoadedModules64(_In_ HANDLE hProcess,_In_ PENUMLOADED_MODULES_CALLBACK64 EnumLoadedModulesCallback,_In_opt_ PVOID UserContext)
BOOL WINAPI dbghelp.EnumerateLoadedModulesEx(_In_ HANDLE hProcess,_In_ PENUMLOADED_MODULES_CALLBACK64 EnumLoadedModulesCallback,_In_opt_ PVOID UserContext)
BOOL WINAPI dbghelp.EnumerateLoadedModulesExW(_In_ HANDLE hProcess,_In_ PENUMLOADED_MODULES_CALLBACK64 EnumLoadedModulesCallback,_In_opt_ PVOID UserContext)
BOOL WINAPI dbghelp.EnumerateLoadedModulesW64(_In_ HANDLE hProcess,_In_ PENUMLOADED_MODULES_CALLBACK64 EnumLoadedModulesCallback,_In_opt_ PVOID UserContext)
BOOL WINAPI dbghelp.MakeSureDirectoryPathExists(_In_ PCSTR DirPath)
BOOL WINAPI dbghelp.MiniDumpReadDumpStream(_In_ PVOID BaseOfDump,_In_ ULONG StreamNumber,_Out_ PMINIDUMP_DIRECTORY *Dir,_Out_ PVOID *StreamPointer,_Out_ ULONG *StreamSize)
BOOL WINAPI dbghelp.MiniDumpWriteDump(_In_ HANDLE hProcess,_In_ DWORD ProcessId,_In_ HANDLE hFile,_In_ MINIDUMP_TYPE DumpType,_In_ PMINIDUMP_EXCEPTION_INFORMATION ExceptionParam,_In_ PMINIDUMP_USER_STREAM_INFORMATION UserStreamParam,_In_ PMINIDUMP_CALLBACK_INFORMATION CallbackParam)
BOOL WINAPI dbghelp.SearchTreeForFile(_In_ PCTSTR RootPath,_In_ PCTSTR InputPathName,_Out_ PTSTR OutputPathBuffer)
BOOL WINAPI dbghelp.SearchTreeForFileW(_In_ PCTSTR RootPath,_In_ PCTSTR InputPathName,_Out_ PTSTR OutputPathBuffer)
BOOL WINAPI dbghelp.StackWalk64(_In_ DWORD MachineType,_In_ HANDLE hProcess,_In_ HANDLE hThread,_Inout_ LPSTACKFRAME64 StackFrame,_Inout_ PVOID ContextRecord,_In_opt_ PREAD_PROCESS_MEMORY_ROUTINE64 ReadMemoryRoutine,_In_opt_ PFUNCTION_TABLE_ACCESS_ROUTINE64 FunctionTableAccessRoutine,_In_opt_ PGET_MODULE_BASE_ROUTINE64 GetModuleBaseRoutine,_In_opt_ PTRANSLATE_ADDRESS_ROUTINE64 TranslateAddress)
BOOL WINAPI dbghelp.SymAddSourceStream(_In_ HANDLE hProcess,_In_ ULONG64 Base,_In_opt_ PCTSTR StreamFile,_In_opt_ PBYTE Buffer,_In_ size_t Size)
BOOL WINAPI dbghelp.SymAddSourceStreamW(_In_ HANDLE hProcess,_In_ ULONG64 Base,_In_opt_ PCTSTR StreamFile,_In_opt_ PBYTE Buffer,_In_ size_t Size)
BOOL WINAPI dbghelp.SymAddSymbol(_In_ HANDLE hProcess,_In_ ULONG64 BaseOfDll,_In_ PCTSTR Name,_In_ DWORD64 Address,_In_ DWORD Size,_In_ DWORD Flags)
BOOL WINAPI dbghelp.SymAddSymbolW(_In_ HANDLE hProcess,_In_ ULONG64 BaseOfDll,_In_ PCTSTR Name,_In_ DWORD64 Address,_In_ DWORD Size,_In_ DWORD Flags)
BOOL WINAPI dbghelp.SymCleanup(_In_ HANDLE hProcess)
BOOL WINAPI dbghelp.SymDeleteSymbol(_In_ HANDLE hProcess,_In_ ULONG64 BaseOfDll,_In_opt_ PCTSTR Name,_In_ DWORD64 Address,_In_ DWORD Flags)
BOOL WINAPI dbghelp.SymDeleteSymbolW(_In_ HANDLE hProcess,_In_ ULONG64 BaseOfDll,_In_opt_ PCTSTR Name,_In_ DWORD64 Address,_In_ DWORD Flags)
BOOL WINAPI dbghelp.SymEnumerateModules64(_In_ HANDLE hProcess,_In_ PSYM_ENUMMODULES_CALLBACK64 EnumModulesCallback,_In_opt_ PVOID UserContext)
BOOL WINAPI dbghelp.SymEnumerateModulesW64(_In_ HANDLE hProcess,_In_ PSYM_ENUMMODULES_CALLBACK64 EnumModulesCallback,_In_opt_ PVOID UserContext)
BOOL WINAPI dbghelp.SymEnumerateSymbols64(_In_ HANDLE hProcess,_In_ ULONG64 BaseOfDll,_In_ PSYM_ENUMSYMBOLS_CALLBACK64 EnumSymbolsCallback,_In_opt_ PVOID UserContext)
BOOL WINAPI dbghelp.SymEnumerateSymbolsW64(_In_ HANDLE hProcess,_In_ ULONG64 BaseOfDll,_In_ PSYM_ENUMSYMBOLS_CALLBACK64 EnumSymbolsCallback,_In_opt_ PVOID UserContext)
BOOL WINAPI dbghelp.SymEnumLines(_In_ HANDLE hProcess,_In_ ULONG64 Base,_In_opt_ PCTSTR Obj,_In_opt_ PCTSTR File,_In_ PSYM_ENUMLINES_CALLBACK EnumLinesCallback,_In_opt_ PVOID UserContext)
BOOL WINAPI dbghelp.SymEnumLinesW(_In_ HANDLE hProcess,_In_ ULONG64 Base,_In_opt_ PCTSTR Obj,_In_opt_ PCTSTR File,_In_ PSYM_ENUMLINES_CALLBACK EnumLinesCallback,_In_opt_ PVOID UserContext)
BOOL WINAPI dbghelp.SymEnumProcesses(_In_ PSYM_ENUMPROCESSES_CALLBACK EnumProcessesCallback,_In_ PVOID UserContext)
BOOL WINAPI dbghelp.SymEnumSourceFiles(_In_ HANDLE hProcess,_In_ ULONG64 ModBase,_In_opt_ PCTSTR Mask,_In_ PSYM_ENUMSOURCEFILES_CALLBACK EnumSymbolsCallback,_In_opt_ PVOID UserContext)
BOOL WINAPI dbghelp.SymEnumSourceFilesW(_In_ HANDLE hProcess,_In_ ULONG64 ModBase,_In_opt_ PCTSTR Mask,_In_ PSYM_ENUMSOURCEFILES_CALLBACK EnumSymbolsCallback,_In_opt_ PVOID UserContext)
BOOL WINAPI dbghelp.SymEnumSourceFileTokens(_In_ HANDLE hProcess,_In_ ULONG64 Base,_In_ PENUMSOURCEFILETOKENSCALLBACK Callback)
BOOL WINAPI dbghelp.SymEnumSourceLines(_In_ HANDLE hProcess,_In_ ULONG64 Base,_In_opt_ PCTSTR Obj,_In_opt_ PCTSTR File,_In_opt_ DWORD Line,_In_ DWORD Flags,_In_ PSYM_ENUMLINES_CALLBACK EnumLinesCallback,_In_opt_ PVOID UserContext)
BOOL WINAPI dbghelp.SymEnumSourceLinesW(_In_ HANDLE hProcess,_In_ ULONG64 Base,_In_opt_ PCTSTR Obj,_In_opt_ PCTSTR File,_In_opt_ DWORD Line,_In_ DWORD Flags,_In_ PSYM_ENUMLINES_CALLBACK EnumLinesCallback,_In_opt_ PVOID UserContext)
BOOL WINAPI dbghelp.SymEnumSymbolsForAddr(_In_ HANDLE hProcess,_In_ DWORD64 Address,_In_ PSYM_ENUMERATESYMBOLS_CALLBACK EnumSymbolsCallback,_In_opt_ PVOID UserContext)
BOOL WINAPI dbghelp.SymEnumSymbolsForAddrW(_In_ HANDLE hProcess,_In_ DWORD64 Address,_In_ PSYM_ENUMERATESYMBOLS_CALLBACK EnumSymbolsCallback,_In_opt_ PVOID UserContext)
BOOL WINAPI dbghelp.SymEnumTypesByName(_In_ HANDLE hProcess,_In_ ULONG64 BaseOfDll,_In_opt_ PCSTR mask,_In_ PSYM_ENUMERATESYMBOLS_CALLBACK EnumSymbolsCallback,_In_ PVOID UserContext)
BOOL WINAPI dbghelp.SymEnumTypesByNameW(_In_ HANDLE hProcess,_In_ ULONG64 BaseOfDll,_In_opt_ PCSTR mask,_In_ PSYM_ENUMERATESYMBOLS_CALLBACK EnumSymbolsCallback,_In_ PVOID UserContext)
BOOL WINAPI dbghelp.SymEnumTypes(_In_ HANDLE hProcess,_In_ ULONG64 BaseOfDll,_In_ PSYM_ENUMERATESYMBOLS_CALLBACK EnumSymbolsCallback,_In_opt_ PVOID UserContext)
BOOL WINAPI dbghelp.SymEnumTypesW(_In_ HANDLE hProcess,_In_ ULONG64 BaseOfDll,_In_ PSYM_ENUMERATESYMBOLS_CALLBACK EnumSymbolsCallback,_In_opt_ PVOID UserContext)
BOOL WINAPI dbghelp.SymFindFileInPath(_In_ HANDLE hProcess,_In_opt_ PCTSTR SearchPath,_In_ PCTSTR FileName,_In_opt_ PVOID id,_In_ DWORD two,_In_ DWORD three,_In_ DWORD flags,_Out_ PTSTR FilePath,_In_opt_ PFINDFILEINPATHCALLBACK callback,_In_opt_ PVOID context)
BOOL WINAPI dbghelp.SymFindFileInPathW(_In_ HANDLE hProcess,_In_opt_ PCTSTR SearchPath,_In_ PCTSTR FileName,_In_opt_ PVOID id,_In_ DWORD two,_In_ DWORD three,_In_ DWORD flags,_Out_ PTSTR FilePath,_In_opt_ PFINDFILEINPATHCALLBACK callback,_In_opt_ PVOID context)
BOOL WINAPI dbghelp.SymFromAddr(_In_ HANDLE hProcess,_In_ DWORD64 Address,_Out_opt_ PDWORD64 Displacement,_Inout_ PSYMBOL_INFO Symbol)
BOOL WINAPI dbghelp.SymFromAddrW(_In_ HANDLE hProcess,_In_ DWORD64 Address,_Out_opt_ PDWORD64 Displacement,_Inout_ PSYMBOL_INFO Symbol)
BOOL WINAPI dbghelp.SymFromIndex(_In_ HANDLE hProcess,_In_ ULONG64 BaseOfDll,_In_ DWORD Index,_Inout_ PSYMBOL_INFO Symbol)
BOOL WINAPI dbghelp.SymFromIndexW(_In_ HANDLE hProcess,_In_ ULONG64 BaseOfDll,_In_ DWORD Index,_Inout_ PSYMBOL_INFO Symbol)
BOOL WINAPI dbghelp.SymFromName(_In_ HANDLE hProcess,_In_ PCTSTR Name,_Inout_ PSYMBOL_INFO Symbol)
BOOL WINAPI dbghelp.SymFromNameW(_In_ HANDLE hProcess,_In_ PCTSTR Name,_Inout_ PSYMBOL_INFO Symbol)
BOOL WINAPI dbghelp.SymFromToken(_In_ HANDLE hProcess,_In_ DWORD64 Base,_In_ DWORD Token,_Inout_ PSYMBOL_INFO Symbol)
BOOL WINAPI dbghelp.SymFromTokenW(_In_ HANDLE hProcess,_In_ DWORD64 Base,_In_ DWORD Token,_Inout_ PSYMBOL_INFO Symbol)
BOOL WINAPI dbghelp.SymGetLineFromAddr64(_In_ HANDLE hProcess,_In_ DWORD64 dwAddr,_Out_ PDWORD pdwDisplacement,_Out_ PIMAGEHLP_LINE64 Line)
BOOL WINAPI dbghelp.SymGetLineFromAddrW64(_In_ HANDLE hProcess,_In_ DWORD64 dwAddr,_Out_ PDWORD pdwDisplacement,_Out_ PIMAGEHLP_LINE64 Line)
BOOL WINAPI dbghelp.SymGetLineFromName64(_In_ HANDLE hProcess,_In_opt_ PCTSTR ModuleName,_In_opt_ PCTSTR FileName,_In_ DWORD dwLineNumber,_Out_ PLONG lpDisplacement,_Inout_ PIMAGEHLP_LINE64 Line)
BOOL WINAPI dbghelp.SymGetLineFromNameW64(_In_ HANDLE hProcess,_In_opt_ PCTSTR ModuleName,_In_opt_ PCTSTR FileName,_In_ DWORD dwLineNumber,_Out_ PLONG lpDisplacement,_Inout_ PIMAGEHLP_LINE64 Line)
BOOL WINAPI dbghelp.SymGetLineNext64(_In_ HANDLE hProcess,_Inout_ PIMAGEHLP_LINE64 Line)
BOOL WINAPI dbghelp.SymGetLineNextW64(_In_ HANDLE hProcess,_Inout_ PIMAGEHLP_LINE64 Line)
BOOL WINAPI dbghelp.SymGetLinePrev64(_In_ HANDLE hProcess,_Inout_ PIMAGEHLP_LINE64 Line)
BOOL WINAPI dbghelp.SymGetLinePrevW64(_In_ HANDLE hProcess,_Inout_ PIMAGEHLP_LINE64 Line)
BOOL WINAPI dbghelp.SymGetModuleInfo64(_In_ HANDLE hProcess,_In_ DWORD64 dwAddr,_Out_ PIMAGEHLP_MODULE64 ModuleInfo)
BOOL WINAPI dbghelp.SymGetModuleInfoW64(_In_ HANDLE hProcess,_In_ DWORD64 dwAddr,_Out_ PIMAGEHLP_MODULE64 ModuleInfo)
BOOL WINAPI dbghelp.SymGetOmaps(_In_ HANDLE hProcess,_In_ ULONG64 BaseOfDll,_Out_ POMAP *OmapTo,_Out_ PDWORD64 cOmapTo,_Out_ POMAP *OmapFrom,_Out_ PDWORD64 cOmapFrom)
BOOL WINAPI dbghelp.SymGetScope(_In_ HANDLE hProcess,_In_ ULONG64 BaseOfDll,_In_ DWORD Index,_Inout_ PSYMBOL_INFO Symbol)
BOOL WINAPI dbghelp.SymGetScopeW(_In_ HANDLE hProcess,_In_ ULONG64 BaseOfDll,_In_ DWORD Index,_Inout_ PSYMBOL_INFO Symbol)
BOOL WINAPI dbghelp.SymGetSearchPath(_In_ HANDLE hProcess,_Out_ PTSTR SearchPath,_In_ DWORD SearchPathLength)
BOOL WINAPI dbghelp.SymGetSearchPathW(_In_ HANDLE hProcess,_Out_ PTSTR SearchPath,_In_ DWORD SearchPathLength)
BOOL WINAPI dbghelp.SymGetSourceFileChecksum(_In_ HANDLE hProcess,_In_ ULONG64 Base,_In_ PCTSTR FileSpec,_Out_ DWORD *pCheckSumType,_Out_ BYTE *pChecksum,_In_ DWORD checksumSize,_Out_ DWORD *pActualBytesWritten)
BOOL WINAPI dbghelp.SymGetSourceFileChecksumW(_In_ HANDLE hProcess,_In_ ULONG64 Base,_In_ PCTSTR FileSpec,_Out_ DWORD *pCheckSumType,_Out_ BYTE *pChecksum,_In_ DWORD checksumSize,_Out_ DWORD *pActualBytesWritten)
BOOL WINAPI dbghelp.SymGetSourceFileFromToken(_In_ HANDLE hProcess,_In_ PVOID Token,_In_opt_ PCTSTR Params,_Out_ PTSTR FilePath,_In_ DWORD Size)
BOOL WINAPI dbghelp.SymGetSourceFileFromTokenW(_In_ HANDLE hProcess,_In_ PVOID Token,_In_opt_ PCTSTR Params,_Out_ PTSTR FilePath,_In_ DWORD Size)
BOOL WINAPI dbghelp.SymGetSourceFile(_In_ HANDLE hProcess,_In_ ULONG64 Base,_In_opt_ PCTSTR Params,_In_ PCTSTR FileSpec,_Out_ PTSTR FilePath,_In_ DWORD Size)
BOOL WINAPI dbghelp.SymGetSourceFileToken(_In_ HANDLE hProcess,_In_ ULONG64 Base,_In_ PCTSTR FileSpec,_Out_ PVOID *Token,_Out_ DWORD *Size)
BOOL WINAPI dbghelp.SymGetSourceFileTokenW(_In_ HANDLE hProcess,_In_ ULONG64 Base,_In_ PCTSTR FileSpec,_Out_ PVOID *Token,_Out_ DWORD *Size)
BOOL WINAPI dbghelp.SymGetSourceFileW(_In_ HANDLE hProcess,_In_ ULONG64 Base,_In_opt_ PCTSTR Params,_In_ PCTSTR FileSpec,_Out_ PTSTR FilePath,_In_ DWORD Size)
BOOL WINAPI dbghelp.SymGetSourceVarFromToken(_In_ HANDLE hProcess,_In_ PVOID Token,_In_opt_ PCTSTR Params,_In_ PCTSTR VarName,_Out_ PTSTR Value,_In_ DWORD Size)
BOOL WINAPI dbghelp.SymGetSourceVarFromTokenW(_In_ HANDLE hProcess,_In_ PVOID Token,_In_opt_ PCTSTR Params,_In_ PCTSTR VarName,_Out_ PTSTR Value,_In_ DWORD Size)
BOOL WINAPI dbghelp.SymGetSymbolFile(_In_opt_ HANDLE hProcess,_In_opt_ PCTSTR SymPath,_In_ PCTSTR ImageFile,_In_ DWORD Type,_Out_ PTSTR SymbolFile,_In_ size_t cSymbolFile,_Out_ PTSTR DbgFile,_In_ size_t cDbgFile)
BOOL WINAPI dbghelp.SymGetSymbolFileW(_In_opt_ HANDLE hProcess,_In_opt_ PCTSTR SymPath,_In_ PCTSTR ImageFile,_In_ DWORD Type,_Out_ PTSTR SymbolFile,_In_ size_t cSymbolFile,_Out_ PTSTR DbgFile,_In_ size_t cDbgFile)
BOOL WINAPI dbghelp.SymGetSymFromAddr64(_In_ HANDLE hProcess,_In_ DWORD64 Address,_Out_opt_ PDWORD64 Displacement,_Inout_ PIMAGEHLP_SYMBOL64 Symbol)
BOOL WINAPI dbghelp.SymGetSymFromName64(_In_ HANDLE hProcess,_In_ PCSTR Name,_Inout_ PIMAGEHLP_SYMBOL64 Symbol)
BOOL WINAPI dbghelp.SymGetSymNext64(_In_ HANDLE hProcess,_Inout_ PIMAGEHLP_SYMBOL64 Symbol)
BOOL WINAPI dbghelp.SymGetSymPrev64(_In_ HANDLE hProcess,_Inout_ PIMAGEHLP_SYMBOL64 Symbol)
BOOL WINAPI dbghelp.SymGetTypeFromName(_In_ HANDLE hProcess,_In_ ULONG64 BaseOfDll,_In_ PCTSTR Name,_Inout_ PSYMBOL_INFO Symbol)
BOOL WINAPI dbghelp.SymGetTypeFromNameW(_In_ HANDLE hProcess,_In_ ULONG64 BaseOfDll,_In_ PCTSTR Name,_Inout_ PSYMBOL_INFO Symbol)
BOOL WINAPI dbghelp.SymGetTypeInfoEx(_In_ HANDLE hProcess,_In_ DWORD64 ModBase,_Inout_ PIMAGEHLP_GET_TYPE_INFO_PARAMS Params)
BOOL WINAPI dbghelp.SymGetTypeInfo(_In_ HANDLE hProcess,_In_ DWORD64 ModBase,_In_ ULONG TypeId,_In_ IMAGEHLP_SYMBOL_TYPE_INFO GetType,_Out_ PVOID pInfo)
BOOL WINAPI dbghelp.SymInitialize(_In_ HANDLE hProcess,_In_opt_ PCTSTR UserSearchPath,_In_ BOOL fInvadeProcess)
BOOL WINAPI dbghelp.SymInitializeW(_In_ HANDLE hProcess,_In_opt_ PCTSTR UserSearchPath,_In_ BOOL fInvadeProcess)
BOOL WINAPI dbghelp.SymMatchFileName(_In_ PCTSTR FileName,_In_ PCTSTR Match,_Out_opt_ PTSTR *FileNameStop,_Out_opt_ PTSTR *MatchStop)
BOOL WINAPI dbghelp.SymMatchFileNameW(_In_ PCTSTR FileName,_In_ PCTSTR Match,_Out_opt_ PTSTR *FileNameStop,_Out_opt_ PTSTR *MatchStop)
BOOL WINAPI dbghelp.SymMatchString(_In_ PCTSTR string,_In_ PCTSTR expression,_In_ BOOL fCase)
BOOL WINAPI dbghelp.SymMatchStringW(_In_ PCTSTR string,_In_ PCTSTR expression,_In_ BOOL fCase)
BOOL WINAPI dbghelp.SymNext(_In_ HANDLE hProcess,_Inout_ PSYMBOL_INFO Symbol)
BOOL WINAPI dbghelp.SymNextW(_In_ HANDLE hProcess,_Inout_ PSYMBOL_INFO Symbol)
BOOL WINAPI dbghelp.SymPrev(_In_ HANDLE hProcess,_Inout_ PSYMBOL_INFO Symbol)
BOOL WINAPI dbghelp.SymPrevW(_In_ HANDLE hProcess,_Inout_ PSYMBOL_INFO Symbol)
BOOL WINAPI dbghelp.SymRefreshModuleList(_In_ HANDLE hProcess)
BOOL WINAPI dbghelp.SymRegisterCallback64(_In_ HANDLE hProcess,_In_ PSYMBOL_REGISTERED_CALLBACK64 CallbackFunction,_In_ ULONG64 UserContext)
BOOL WINAPI dbghelp.SymRegisterCallbackW64(_In_ HANDLE hProcess,_In_ PSYMBOL_REGISTERED_CALLBACK64 CallbackFunction,_In_ ULONG64 UserContext)
BOOL WINAPI dbghelp.SymRegisterFunctionEntryCallback64(_In_ HANDLE hProcess,_In_ PSYMBOL_FUNCENTRY_CALLBACK64 CallbackFunction,_In_ ULONG64 UserContext)
BOOL WINAPI dbghelp.SymSearch(_In_ HANDLE hProcess,_In_ ULONG64 BaseOfDll,_In_opt_ DWORD Index,_In_opt_ DWORD SymTag,_In_opt_ PCTSTR Mask,_In_opt_ DWORD64 Address,_In_ PSYM_ENUMERATESYMBOLS_CALLBACK EnumSymbolsCallback,_In_opt_ PVOID UserContext,_In_ DWORD Options)
BOOL WINAPI dbghelp.SymSearchW(_In_ HANDLE hProcess,_In_ ULONG64 BaseOfDll,_In_opt_ DWORD Index,_In_opt_ DWORD SymTag,_In_opt_ PCTSTR Mask,_In_opt_ DWORD64 Address,_In_ PSYM_ENUMERATESYMBOLS_CALLBACK EnumSymbolsCallback,_In_opt_ PVOID UserContext,_In_ DWORD Options)
BOOL WINAPI dbghelp.SymSetContext(_In_ HANDLE hProcess,_In_ PIMAGEHLP_STACK_FRAME StackFrame,_In_opt_ PIMAGEHLP_CONTEXT Context)
BOOL WINAPI dbghelp.SymSetParentWindow(_In_ HWND hwnd)
BOOL WINAPI dbghelp.SymSetScopeFromAddr(_In_ HANDLE hProcess,_In_ ULONG64 Address)
BOOL WINAPI dbghelp.SymSetScopeFromIndex(_In_ HANDLE hProcess,_In_ ULONG64 BaseOfDll,_In_ DWORD Index)
BOOL WINAPI dbghelp.SymSetSearchPath(_In_ HANDLE hProcess,_In_opt_ PCTSTR SearchPath)
BOOL WINAPI dbghelp.SymSetSearchPathW(_In_ HANDLE hProcess,_In_opt_ PCTSTR SearchPath)
BOOL WINAPI dbghelp.SymSrvGetFileIndexes(_In_ PCTSTR File,_Out_ GUID *Id,_Out_ DWORD *Val1,_Out_opt_ DWORD *Val2,_In_ DWORD Flags)
BOOL WINAPI dbghelp.SymSrvGetFileIndexesW(_In_ PCTSTR File,_Out_ GUID *Id,_Out_ DWORD *Val1,_Out_opt_ DWORD *Val2,_In_ DWORD Flags)
BOOL WINAPI dbghelp.SymSrvGetFileIndexInfo(_In_ PCTSTR File,_Out_ PSYMSRV_INDEX_INFO Info,_In_ DWORD Flags)
BOOL WINAPI dbghelp.SymSrvGetFileIndexInfoW(_In_ PCTSTR File,_Out_ PSYMSRV_INDEX_INFO Info,_In_ DWORD Flags)
BOOL WINAPI dbghelp.SymSrvGetFileIndexString(_In_ HANDLE hProcess,_In_opt_ PCTSTR SrvPath,_In_ PCTSTR File,_Out_ PTSTR Index,_In_ size_t Size,_In_ DWORD Flags)
BOOL WINAPI dbghelp.SymSrvGetFileIndexStringW(_In_ HANDLE hProcess,_In_opt_ PCTSTR SrvPath,_In_ PCTSTR File,_Out_ PTSTR Index,_In_ size_t Size,_In_ DWORD Flags)
BOOL WINAPI dbghelp.SymSrvIsStore(_In_opt_ HANDLE hProcess,_In_ PCTSTR path)
BOOL WINAPI dbghelp.SymSrvIsStoreW(_In_opt_ HANDLE hProcess,_In_ PCTSTR path)
BOOL WINAPI dbghelp.SymUnDName64(_In_ PIMAGEHLP_SYMBOL64 sym,_Out_ PSTR UnDecName,_In_ DWORD UnDecNameLength)
BOOL WINAPI dbghelp.SymUnloadModule64(_In_ HANDLE hProcess,_In_ DWORD64 BaseOfDll)
BOOL WINAPI dbghelp.UnmapDebugInformation(_In_ PIMAGE_DEBUG_INFORMATION DebugInfo)
BOOL WINAPI dnsapi.DnsRecordCompare(_In_ PDNS_RECORD pRecord1,_In_ PDNS_RECORD pRecord2)
BOOL WINAPI dnsapi.DnsRecordSetCompare(_Inout_ PDNS_RECORD pRR1,_Inout_ PDNS_RECORD pRR2,_Out_opt_ PDNS_RECORD *ppDiff1,_Out_opt_ PDNS_RECORD *ppDiff2)
BOOL WINAPI dnsapi.DnsWriteQuestionToBuffer_W(_Inout_ PDNS_MESSAGE_BUFFER pDnsBuffer,_Inout_ PDWORD pdwBufferSize,_In_ PCWSTR pszName,_In_ WORD wType,_In_ WORD Xid,_In_ BOOL fRecursionDesired)
BOOL WINAPI dwmapi.DwmDefWindowProc(_In_ HWND hwnd,UINT msg None,WPARAM wParam None,LPARAM lParam None,_Out_ LRESULT *plResult)
BOOL WINAPI fmapi.CloseFileRestoreContext(_In_ PFILE_RESTORE_CONTEXT Context)
BOOL WINAPI fmapi.CreateFileRestoreContext(_In_ PCWSTR Volume,_In_ RESTORE_CONTEXT_FLAGS Flags,_In_opt_ LONGLONG StartSector,_In_ LONGLONG BootSector,_In_ DWORD Version,_Out_ PFILE_RESTORE_CONTEXT Context)
BOOL WINAPI fmapi.DetectEncryptedVolumeEx(_In_ PFILE_RESTORE_CONTEXT Context,_Out_ PDWORD VolumeEncryptionInfo,_Out_ PULONGLONG VolumeSize)
BOOL WINAPI fmapi.DetectEncryptedVolume(_In_ PFILE_RESTORE_CONTEXT Context,_Out_ PDWORD VolumeEncryptionInfo)
BOOL WINAPI fmapi.RestoreFile(_In_ PFILE_RESTORE_CONTEXT Context,_In_ PRESTORABLE_FILE_INFO RestorableFile,_In_ PCWSTR DstFile,_In_opt_ FILE_RESTORE_CALLBACK Callback,_In_opt_ PVOID ClbkArg)
BOOL WINAPI fmapi.ScanRestorableFiles(_In_ PFILE_RESTORE_CONTEXT Context,_In_ PCWSTR Path,_In_ ULONG FileInfoSize,_Out_ PRESTORABLE_FILE_INFO FileInfo,_Out_ PULONG FileInfoUsed)
BOOL WINAPI fmapi.SupplyDecryptionInfo(_In_ PFILE_RESTORE_CONTEXT Context,_In_opt_ PCWSTR RecoveryKeyFilePath,_In_opt_ PVOID RecoveryPassword,_In_opt_ PVOID KeyPackage,_In_opt_ ULONG KeyPackageSize)
BOOL WINAPI gdi32.CheckColorsInGamut(HDC hDC None,LPVOID lpRGBTriples None,LPVOID lpBuffer None,UINT nCount None)
BOOL WINAPI gdi32.GetDeviceGammaRamp(HDC hDC None,LPVOID lpRamp None)
BOOL WINAPI gdi32.SetDeviceGammaRamp(HDC hDC None,LPVOID lpRamp None)
BOOL WINAPI iphlpapi.CancelIPChangeNotify(_In_ LPOVERLAPPED notifyOverlapped)
BOOL WINAPI iphlpapi.CancelSecurityHealthChangeNotify(LPOVERLAPPED notifyOverlapped None)
BOOL WINAPI kernel32.AddIntegrityLabelToBoundaryDescriptor(_Inout_ HANDLE *BoundaryDescriptor,_In_ PSID IntegrityLabel)
BOOL WINAPI kernel32.AddResourceAttributeAce(_Inout_ PACL pAcl,_In_ DWORD dwAceRevision,_In_ DWORD AceFlags,_In_ DWORD AccessMask,_In_ PSID pSid,_In_ PCLAIM_SECURITY_ATTRIBUTES_INFORMATION pAttributeInfo,_Out_ PDWORD pReturnLength)
BOOL WINAPI kernel32.AddScopedPolicyIDAce(_Inout_ PACL pAcl,_In_ DWORD dwAceRevision,_In_ DWORD AceFlags,_In_ DWORD AccessMask,_In_ PSID pSid)
BOOL WINAPI kernel32.AddSecureMemoryCacheCallback(_In_ PSECURE_MEMORY_CACHE_CALLBACK pfnCallBack)
BOOL WINAPI kernel32.AddSIDToBoundaryDescriptor(_Inout_ HANDLE *BoundaryDescriptor,_In_ PSID RequiredSid)
BOOL WINAPI kernel32.AllocateUserPhysicalPages(_In_ HANDLE hProcess,_Inout_ PULONG_PTR NumberOfPages,_Out_ PULONG_PTR UserPfnArray)
BOOL WINAPI kernel32.AllocateUserPhysicalPagesNuma(_In_ HANDLE hProcess,_Inout_ PULONG_PTR NumberOfPages,_Out_ PULONG_PTR PageArray,_In_ DWORD nndPreferred)
BOOL WINAPI kernel32.AreFileApisANSI(void None None)
BOOL WINAPI kernel32.AssignProcessToJobObject(_In_ HANDLE hJob,_In_ HANDLE hProcess)
BOOL WINAPI kernel32.Beep(_In_ DWORD dwFreq,_In_ DWORD dwDuration)
BOOL WINAPI kernel32.BindIoCompletionCallback(_In_ HANDLE FileHandle,_In_ LPOVERLAPPED_COMPLETION_ROUTINE Function,_In_ ULONG Flags)
BOOL WINAPI kernel32.BuildCommDCBA(_In_ LPCTSTR lpDef,_Out_ LPDCB lpDCB)
BOOL WINAPI kernel32.BuildCommDCBAndTimeoutsA(_In_ LPCTSTR lpDef,_Out_ LPDCB lpDCB,_Out_ LPCOMMTIMEOUTS lpCommTimeouts)
BOOL WINAPI kernel32.BuildCommDCBAndTimeouts(_In_ LPCTSTR lpDef,_Out_ LPDCB lpDCB,_Out_ LPCOMMTIMEOUTS lpCommTimeouts)
BOOL WINAPI kernel32.BuildCommDCBAndTimeoutsW(_In_ LPCTSTR lpDef,_Out_ LPDCB lpDCB,_Out_ LPCOMMTIMEOUTS lpCommTimeouts)
BOOL WINAPI kernel32.BuildCommDCB(_In_ LPCTSTR lpDef,_Out_ LPDCB lpDCB)
BOOL WINAPI kernel32.BuildCommDCBW(_In_ LPCTSTR lpDef,_Out_ LPDCB lpDCB)
BOOL WINAPI kernel32.CallbackMayRunLong(_Inout_ PTP_CALLBACK_INSTANCE pci)
BOOL WINAPI kernel32.CallNamedPipeA(_In_ LPCTSTR lpNamedPipeName,_In_ LPVOID lpInBuffer,_In_ DWORD nInBufferSize,_Out_ LPVOID lpOutBuffer,_In_ DWORD nOutBufferSize,_Out_ LPDWORD lpBytesRead,_In_ DWORD nTimeOut)
BOOL WINAPI kernel32.CallNamedPipe(_In_ LPCTSTR lpNamedPipeName,_In_ LPVOID lpInBuffer,_In_ DWORD nInBufferSize,_Out_ LPVOID lpOutBuffer,_In_ DWORD nOutBufferSize,_Out_ LPDWORD lpBytesRead,_In_ DWORD nTimeOut)
BOOL WINAPI kernel32.CallNamedPipeW(_In_ LPCTSTR lpNamedPipeName,_In_ LPVOID lpInBuffer,_In_ DWORD nInBufferSize,_Out_ LPVOID lpOutBuffer,_In_ DWORD nOutBufferSize,_Out_ LPDWORD lpBytesRead,_In_ DWORD nTimeOut)
BOOL WINAPI kernel32.CancelIoEx(_In_ HANDLE hFile,_In_opt_ LPOVERLAPPED lpOverlapped)
BOOL WINAPI kernel32.CancelIo(_In_ HANDLE hFile)
BOOL WINAPI kernel32.CancelSynchronousIo(_In_ HANDLE hThread)
BOOL WINAPI kernel32.CancelWaitableTimer(_In_ HANDLE hTimer)
BOOL WINAPI kernel32.ChangeTimerQueueTimer(_In_opt_ HANDLE TimerQueue,_Inout_ HANDLE Timer,_In_ ULONG DueTime,_In_ ULONG Period)
BOOL WINAPI kernel32.CheckNameLegalDOS8Dot3A(_In_ LPCTSTR lpName,_Out_opt_ LPSTR lpOemName,_In_ DWORD OemNameSize,_Out_opt_ PBOOL pbNameContainsSpaces,_Out_ PBOOL pbNameLegal)
BOOL WINAPI kernel32.CheckNameLegalDOS8Dot3(_In_ LPCTSTR lpName,_Out_opt_ LPSTR lpOemName,_In_ DWORD OemNameSize,_Out_opt_ PBOOL pbNameContainsSpaces,_Out_ PBOOL pbNameLegal)
BOOL WINAPI kernel32.CheckNameLegalDOS8Dot3W(_In_ LPCTSTR lpName,_Out_opt_ LPSTR lpOemName,_In_ DWORD OemNameSize,_Out_opt_ PBOOL pbNameContainsSpaces,_Out_ PBOOL pbNameLegal)
BOOL WINAPI kernel32.CheckRemoteDebuggerPresent(_In_ HANDLE hProcess,_Inout_ PBOOL pbDebuggerPresent)
BOOL WINAPI kernel32.CheckTokenCapability(_In_opt_ HANDLE TokenHandle,_In_ PSID CapabilitySidToCheck,_Out_ PBOOL HasCapability)
BOOL WINAPI kernel32.ClearCommBreak(_In_ HANDLE hFile)
BOOL WINAPI kernel32.ClearCommError(_In_ HANDLE hFile,_Out_opt_ LPDWORD lpErrors,_Out_opt_ LPCOMSTAT lpStat)
BOOL WINAPI kernel32.CloseHandle(_In_ HANDLE hObject)
BOOL WINAPI kernel32.CommConfigDialogA(_In_ LPCTSTR lpszName,_In_ HWND hWnd,_Inout_ LPCOMMCONFIG lpCC)
BOOL WINAPI kernel32.CommConfigDialog(_In_ LPCTSTR lpszName,_In_ HWND hWnd,_Inout_ LPCOMMCONFIG lpCC)
BOOL WINAPI kernel32.CommConfigDialogW(_In_ LPCTSTR lpszName,_In_ HWND hWnd,_Inout_ LPCOMMCONFIG lpCC)
BOOL WINAPI kernel32.ConnectNamedPipe(_In_ HANDLE hNamedPipe,_Inout_opt_ LPOVERLAPPED lpOverlapped)
BOOL WINAPI kernel32.ContinueDebugEvent(_In_ DWORD dwProcessId,_In_ DWORD dwThreadId,_In_ DWORD dwContinueStatus)
BOOL WINAPI kernel32.ConvertFiberToThread(void None None)
BOOL WINAPI kernel32.CopyContext(_Inout_ PCONTEXT Destination,_In_ DWORD ContextFlags,_In_ PCONTEXT Source)
BOOL WINAPI kernel32.CopyFileA(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName,_In_ BOOL bFailIfExists)
BOOL WINAPI kernel32.CopyFileExA(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName,_In_opt_ LPPROGRESS_ROUTINE lpProgressRoutine,_In_opt_ LPVOID lpData,_In_opt_ LPBOOL pbCancel,_In_ DWORD dwCopyFlags)
BOOL WINAPI kernel32.CopyFileEx(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName,_In_opt_ LPPROGRESS_ROUTINE lpProgressRoutine,_In_opt_ LPVOID lpData,_In_opt_ LPBOOL pbCancel,_In_ DWORD dwCopyFlags)
BOOL WINAPI kernel32.CopyFileExW(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName,_In_opt_ LPPROGRESS_ROUTINE lpProgressRoutine,_In_opt_ LPVOID lpData,_In_opt_ LPBOOL pbCancel,_In_ DWORD dwCopyFlags)
BOOL WINAPI kernel32.CopyFile(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName,_In_ BOOL bFailIfExists)
BOOL WINAPI kernel32.CopyFileTransactedA(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName,_In_opt_ LPPROGRESS_ROUTINE lpProgressRoutine,_In_opt_ LPVOID lpData,_In_opt_ LPBOOL pbCancel,_In_ DWORD dwCopyFlags,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.CopyFileTransacted(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName,_In_opt_ LPPROGRESS_ROUTINE lpProgressRoutine,_In_opt_ LPVOID lpData,_In_opt_ LPBOOL pbCancel,_In_ DWORD dwCopyFlags,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.CopyFileTransactedW(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName,_In_opt_ LPPROGRESS_ROUTINE lpProgressRoutine,_In_opt_ LPVOID lpData,_In_opt_ LPBOOL pbCancel,_In_ DWORD dwCopyFlags,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.CopyFileW(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName,_In_ BOOL bFailIfExists)
BOOL WINAPI kernel32.CreateDirectoryA(_In_ LPCTSTR lpPathName,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes)
BOOL WINAPI kernel32.CreateDirectoryExA(_In_ LPCTSTR lpTemplateDirectory,_In_ LPCTSTR lpNewDirectory,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes)
BOOL WINAPI kernel32.CreateDirectoryEx(_In_ LPCTSTR lpTemplateDirectory,_In_ LPCTSTR lpNewDirectory,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes)
BOOL WINAPI kernel32.CreateDirectoryExW(_In_ LPCTSTR lpTemplateDirectory,_In_ LPCTSTR lpNewDirectory,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes)
BOOL WINAPI kernel32.CreateDirectory(_In_ LPCTSTR lpPathName,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes)
BOOL WINAPI kernel32.CreateDirectoryTransactedA(_In_opt_ LPCTSTR lpTemplateDirectory,_In_ LPCTSTR lpNewDirectory,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.CreateDirectoryTransacted(_In_opt_ LPCTSTR lpTemplateDirectory,_In_ LPCTSTR lpNewDirectory,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.CreateDirectoryTransactedW(_In_opt_ LPCTSTR lpTemplateDirectory,_In_ LPCTSTR lpNewDirectory,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.CreateDirectoryW(_In_ LPCTSTR lpPathName,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes)
BOOL WINAPI kernel32.CreateHardLinkA(_In_ LPCTSTR lpFileName,_In_ LPCTSTR lpExistingFileName,_Reserved_ LPSECURITY_ATTRIBUTES lpSecurityAttributes)
BOOL WINAPI kernel32.CreateHardLink(_In_ LPCTSTR lpFileName,_In_ LPCTSTR lpExistingFileName,_Reserved_ LPSECURITY_ATTRIBUTES lpSecurityAttributes)
BOOL WINAPI kernel32.CreateHardLinkTransactedA(_In_ LPCTSTR lpFileName,_In_ LPCTSTR lpExistingFileName,_Reserved_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.CreateHardLinkTransacted(_In_ LPCTSTR lpFileName,_In_ LPCTSTR lpExistingFileName,_Reserved_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.CreateHardLinkTransactedW(_In_ LPCTSTR lpFileName,_In_ LPCTSTR lpExistingFileName,_Reserved_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.CreateHardLinkW(_In_ LPCTSTR lpFileName,_In_ LPCTSTR lpExistingFileName,_Reserved_ LPSECURITY_ATTRIBUTES lpSecurityAttributes)
BOOL WINAPI kernel32.CreatePipe(_Out_ PHANDLE hReadPipe,_Out_ PHANDLE hWritePipe,_In_opt_ LPSECURITY_ATTRIBUTES lpPipeAttributes,_In_ DWORD nSize)
BOOL WINAPI kernel32.CreateProcessA(_In_opt_ LPCTSTR lpApplicationName,_Inout_opt_ LPTSTR lpCommandLine,_In_opt_ LPSECURITY_ATTRIBUTES lpProcessAttributes,_In_opt_ LPSECURITY_ATTRIBUTES lpThreadAttributes,_In_ BOOL bInheritHandles,_In_ DWORD dwCreationFlags,_In_opt_ LPVOID lpEnvironment,_In_opt_ LPCTSTR lpCurrentDirectory,_In_ LPSTARTUPINFO lpStartupInfo,_Out_ LPPROCESS_INFORMATION lpProcessInformation)
BOOL WINAPI kernel32.CreateProcess(_In_opt_ LPCTSTR lpApplicationName,_Inout_opt_ LPTSTR lpCommandLine,_In_opt_ LPSECURITY_ATTRIBUTES lpProcessAttributes,_In_opt_ LPSECURITY_ATTRIBUTES lpThreadAttributes,_In_ BOOL bInheritHandles,_In_ DWORD dwCreationFlags,_In_opt_ LPVOID lpEnvironment,_In_opt_ LPCTSTR lpCurrentDirectory,_In_ LPSTARTUPINFO lpStartupInfo,_Out_ LPPROCESS_INFORMATION lpProcessInformation)
BOOL WINAPI kernel32.CreateProcessW(_In_opt_ LPCTSTR lpApplicationName,_Inout_opt_ LPTSTR lpCommandLine,_In_opt_ LPSECURITY_ATTRIBUTES lpProcessAttributes,_In_opt_ LPSECURITY_ATTRIBUTES lpThreadAttributes,_In_ BOOL bInheritHandles,_In_ DWORD dwCreationFlags,_In_opt_ LPVOID lpEnvironment,_In_opt_ LPCTSTR lpCurrentDirectory,_In_ LPSTARTUPINFO lpStartupInfo,_Out_ LPPROCESS_INFORMATION lpProcessInformation)
BOOL WINAPI kernel32.CreateTimerQueueTimer(_Out_ PHANDLE phNewTimer,_In_opt_ HANDLE TimerQueue,_In_ WAITORTIMERCALLBACK Callback,_In_opt_ PVOID Parameter,_In_ DWORD DueTime,_In_ DWORD Period,_In_ ULONG Flags)
BOOL WINAPI kernel32.CreateUmsCompletionList(_Out_ PUMS_COMPLETION_LIST *UmsCompletionList)
BOOL WINAPI kernel32.CreateUmsThreadContext(_Out_ PUMS_CONTEXT *lpUmsThread)
BOOL WINAPI kernel32.DebugActiveProcess(_In_ DWORD dwProcessId)
BOOL WINAPI kernel32.DebugActiveProcessStop(_In_ DWORD dwProcessId)
BOOL WINAPI kernel32.DebugBreakProcess(_In_ HANDLE Process)
BOOL WINAPI kernel32.DebugSetProcessKillOnExit(_In_ BOOL KillOnExit)
BOOL WINAPI kernel32.DefineDosDeviceA(_In_ DWORD dwFlags,_In_ LPCTSTR lpDeviceName,_In_opt_ LPCTSTR lpTargetPath)
BOOL WINAPI kernel32.DefineDosDevice(_In_ DWORD dwFlags,_In_ LPCTSTR lpDeviceName,_In_opt_ LPCTSTR lpTargetPath)
BOOL WINAPI kernel32.DefineDosDeviceW(_In_ DWORD dwFlags,_In_ LPCTSTR lpDeviceName,_In_opt_ LPCTSTR lpTargetPath)
BOOL WINAPI kernel32.DeleteFileA(_In_ LPCTSTR lpFileName)
BOOL WINAPI kernel32.DeleteFile(_In_ LPCTSTR lpFileName)
BOOL WINAPI kernel32.DeleteFileTransactedA(_In_ LPCTSTR lpFileName,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.DeleteFileTransacted(_In_ LPCTSTR lpFileName,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.DeleteFileTransactedW(_In_ LPCTSTR lpFileName,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.DeleteFileW(_In_ LPCTSTR lpFileName)
BOOL WINAPI kernel32.DeleteSynchronizationBarrier(_Inout_ LPSYNCHRONIZATION_BARRIER lpBarrier)
BOOL WINAPI kernel32.DeleteTimerQueueEx(_In_ HANDLE TimerQueue,_In_opt_ HANDLE CompletionEvent)
BOOL WINAPI kernel32.DeleteTimerQueue(_In_ HANDLE TimerQueue)
BOOL WINAPI kernel32.DeleteTimerQueueTimer(_In_opt_ HANDLE TimerQueue,_In_ HANDLE Timer,_In_opt_ HANDLE CompletionEvent)
BOOL WINAPI kernel32.DeleteUmsCompletionList(_In_ PUMS_COMPLETION_LIST UmsCompletionList)
BOOL WINAPI kernel32.DeleteUmsThreadContext(_In_ PUMS_CONTEXT UmsThread)
BOOL WINAPI kernel32.DeleteVolumeMountPointA(_In_ LPCTSTR lpszVolumeMountPoint)
BOOL WINAPI kernel32.DeleteVolumeMountPoint(_In_ LPCTSTR lpszVolumeMountPoint)
BOOL WINAPI kernel32.DeleteVolumeMountPointW(_In_ LPCTSTR lpszVolumeMountPoint)
BOOL WINAPI kernel32.DequeueUmsCompletionListItems(_In_ PUMS_COMPLETION_LIST UmsCompletionList,_In_ DWORD WaitTimeOut,_Out_ PUMS_CONTEXT *UmsThreadList)
BOOL WINAPI kernel32.DeriveCapabilitySidsFromName(_In_ LPCWSTR CapName,_Out_ PSID **CapabilityGroupSids,_Out_ DWORD *CapabilityGroupSidCount,_Out_ PSID **CapabilitySids,_Out_ DWORD *CapabilitySidCount)
BOOL WINAPI kernel32.DeviceIoControl(_In_ HANDLE hDevice,_In_ DWORD dwIoControlCode,_In_opt_ LPVOID lpInBuffer,_In_ DWORD nInBufferSize,_Out_opt_ LPVOID lpOutBuffer,_In_ DWORD nOutBufferSize,_Out_opt_ LPDWORD lpBytesReturned,_Inout_opt_ LPOVERLAPPED lpOverlapped)
BOOL WINAPI kernel32.DisableThreadLibraryCalls(_In_ HMODULE hModule)
BOOL WINAPI kernel32.DisconnectNamedPipe(_In_ HANDLE hNamedPipe)
BOOL WINAPI kernel32.DnsHostnameToComputerNameA(_In_ LPCTSTR Hostname,_Out_ LPTSTR ComputerName,_Inout_ LPDWORD nSize)
BOOL WINAPI kernel32.DnsHostnameToComputerName(_In_ LPCTSTR Hostname,_Out_ LPTSTR ComputerName,_Inout_ LPDWORD nSize)
BOOL WINAPI kernel32.DnsHostnameToComputerNameW(_In_ LPCTSTR Hostname,_Out_ LPTSTR ComputerName,_Inout_ LPDWORD nSize)
BOOL WINAPI kernel32.DosDateTimeToFileTime(_In_ WORD wFatDate,_In_ WORD wFatTime,_Out_ LPFILETIME lpFileTime)
BOOL WINAPI kernel32.DuplicateHandle(_In_ HANDLE hSourceProcessHandle,_In_ HANDLE hSourceHandle,_In_ HANDLE hTargetProcessHandle,_Out_ LPHANDLE lpTargetHandle,_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ DWORD dwOptions)
BOOL WINAPI kernel32.EmptyWorkingSet(_In_ HANDLE hProcess)
BOOL WINAPI kernel32.EndUpdateResourceA(_In_ HANDLE hUpdate,_In_ BOOL fDiscard)
BOOL WINAPI kernel32.EndUpdateResource(_In_ HANDLE hUpdate,_In_ BOOL fDiscard)
BOOL WINAPI kernel32.EndUpdateResourceW(_In_ HANDLE hUpdate,_In_ BOOL fDiscard)
BOOL WINAPI kernel32.EnterSynchronizationBarrier(_Inout_ LPSYNCHRONIZATION_BARRIER lpBarrier,_In_ DWORD dwFlags)
BOOL WINAPI kernel32.EnterUmsSchedulingMode(_In_ PUMS_SCHEDULER_STARTUP_INFO SchedulerStartupInfo)
BOOL WINAPI kernel32.EnumDeviceDrivers(_Out_ LPVOID *lpImageBase,_In_ DWORD cb,_Out_ LPDWORD lpcbNeeded)
BOOL WINAPI kernel32.EnumPageFilesA(_Out_ PENUM_PAGE_CALLBACK pCallbackRoutine,_In_ LPVOID lpContext)
BOOL WINAPI kernel32.EnumPageFiles(_Out_ PENUM_PAGE_CALLBACK pCallbackRoutine,_In_ LPVOID lpContext)
BOOL WINAPI kernel32.EnumPageFilesW(_Out_ PENUM_PAGE_CALLBACK pCallbackRoutine,_In_ LPVOID lpContext)
BOOL WINAPI kernel32.EnumProcesses(_Out_ DWORD *pProcessIds,_In_ DWORD cb,_Out_ DWORD *pBytesReturned)
BOOL WINAPI kernel32.EnumProcessModulesEx(_In_ HANDLE hProcess,_Out_ HMODULE *lphModule,_In_ DWORD cb,_Out_ LPDWORD lpcbNeeded,_In_ DWORD dwFilterFlag)
BOOL WINAPI kernel32.EnumProcessModules(_In_ HANDLE hProcess,_Out_ HMODULE *lphModule,_In_ DWORD cb,_Out_ LPDWORD lpcbNeeded)
BOOL WINAPI kernel32.EnumResourceLanguagesExA(_In_ HMODULE hModule,_In_ LPCTSTR lpType,_In_ LPCTSTR lpName,_In_ ENUMRESLANGPROC lpEnumFunc,_In_ LONG_PTR lParam,_In_ DWORD dwFlags,_In_ LANGID LangId)
BOOL WINAPI kernel32.EnumResourceLanguagesEx(_In_ HMODULE hModule,_In_ LPCTSTR lpType,_In_ LPCTSTR lpName,_In_ ENUMRESLANGPROC lpEnumFunc,_In_ LONG_PTR lParam,_In_ DWORD dwFlags,_In_ LANGID LangId)
BOOL WINAPI kernel32.EnumResourceLanguagesExW(_In_ HMODULE hModule,_In_ LPCTSTR lpType,_In_ LPCTSTR lpName,_In_ ENUMRESLANGPROC lpEnumFunc,_In_ LONG_PTR lParam,_In_ DWORD dwFlags,_In_ LANGID LangId)
BOOL WINAPI kernel32.EnumResourceNamesExA(_In_opt_ HMODULE hModule,_In_ LPCTSTR lpszType,_In_ ENUMRESNAMEPROC lpEnumFunc,_In_ LONG_PTR lParam,_In_ DWORD dwFlags,_In_ LANGID LangId)
BOOL WINAPI kernel32.EnumResourceNamesEx(_In_opt_ HMODULE hModule,_In_ LPCTSTR lpszType,_In_ ENUMRESNAMEPROC lpEnumFunc,_In_ LONG_PTR lParam,_In_ DWORD dwFlags,_In_ LANGID LangId)
BOOL WINAPI kernel32.EnumResourceNamesExW(_In_opt_ HMODULE hModule,_In_ LPCTSTR lpszType,_In_ ENUMRESNAMEPROC lpEnumFunc,_In_ LONG_PTR lParam,_In_ DWORD dwFlags,_In_ LANGID LangId)
BOOL WINAPI kernel32.EnumResourceTypesA(_In_opt_ HMODULE hModule,_In_ ENUMRESTYPEPROC lpEnumFunc,_In_ LONG_PTR lParam)
BOOL WINAPI kernel32.EnumResourceTypesExA(_In_opt_ HMODULE hModule,_In_ ENUMRESTYPEPROC lpEnumFunc,_In_ LONG_PTR lParam,_In_ DWORD dwFlags,_In_ LANGID LangId)
BOOL WINAPI kernel32.EnumResourceTypesEx(_In_opt_ HMODULE hModule,_In_ ENUMRESTYPEPROC lpEnumFunc,_In_ LONG_PTR lParam,_In_ DWORD dwFlags,_In_ LANGID LangId)
BOOL WINAPI kernel32.EnumResourceTypesExW(_In_opt_ HMODULE hModule,_In_ ENUMRESTYPEPROC lpEnumFunc,_In_ LONG_PTR lParam,_In_ DWORD dwFlags,_In_ LANGID LangId)
BOOL WINAPI kernel32.EnumResourceTypes(_In_opt_ HMODULE hModule,_In_ ENUMRESTYPEPROC lpEnumFunc,_In_ LONG_PTR lParam)
BOOL WINAPI kernel32.EnumResourceTypesW(_In_opt_ HMODULE hModule,_In_ ENUMRESTYPEPROC lpEnumFunc,_In_ LONG_PTR lParam)
BOOL WINAPI kernel32.EnumSystemGeoNames(_In_ GEOCLASS geoClass,_In_ GEO_ENUMNAMEPROC geoEnumProc,_In_opt_ LPARAM data)
BOOL WINAPI kernel32.EscapeCommFunction(_In_ HANDLE hFile,_In_ DWORD dwFunc)
BOOL WINAPI kernel32.ExecuteUmsThread(_Inout_ PUMS_CONTEXT UmsThread)
BOOL WINAPI kernel32.FindCloseChangeNotification(_In_ HANDLE hChangeHandle)
BOOL WINAPI kernel32.FindClose(_Inout_ HANDLE hFindFile)
BOOL WINAPI kernel32.FindNextChangeNotification(_In_ HANDLE hChangeHandle)
BOOL WINAPI kernel32.FindNextFileA(_In_ HANDLE hFindFile,_Out_ LPWIN32_FIND_DATA lpFindFileData)
BOOL WINAPI kernel32.FindNextFile(_In_ HANDLE hFindFile,_Out_ LPWIN32_FIND_DATA lpFindFileData)
BOOL WINAPI kernel32.FindNextFileNameW(_In_ HANDLE hFindStream,_Inout_ LPDWORD StringLength,_Inout_ PWCHAR LinkName)
BOOL WINAPI kernel32.FindNextFileW(_In_ HANDLE hFindFile,_Out_ LPWIN32_FIND_DATA lpFindFileData)
BOOL WINAPI kernel32.FindNextStreamW(_In_ HANDLE hFindStream,_Out_ LPVOID lpFindStreamData)
BOOL WINAPI kernel32.FindNextVolumeA(_In_ HANDLE hFindVolume,_Out_ LPTSTR lpszVolumeName,_In_ DWORD cchBufferLength)
BOOL WINAPI kernel32.FindNextVolume(_In_ HANDLE hFindVolume,_Out_ LPTSTR lpszVolumeName,_In_ DWORD cchBufferLength)
BOOL WINAPI kernel32.FindNextVolumeMountPointA(_In_ HANDLE hFindVolumeMountPoint,_Out_ LPTSTR lpszVolumeMountPoint,_In_ DWORD cchBufferLength)
BOOL WINAPI kernel32.FindNextVolumeMountPoint(_In_ HANDLE hFindVolumeMountPoint,_Out_ LPTSTR lpszVolumeMountPoint,_In_ DWORD cchBufferLength)
BOOL WINAPI kernel32.FindNextVolumeMountPointW(_In_ HANDLE hFindVolumeMountPoint,_Out_ LPTSTR lpszVolumeMountPoint,_In_ DWORD cchBufferLength)
BOOL WINAPI kernel32.FindNextVolumeW(_In_ HANDLE hFindVolume,_Out_ LPTSTR lpszVolumeName,_In_ DWORD cchBufferLength)
BOOL WINAPI kernel32.FindVolumeClose(_In_ HANDLE hFindVolume)
BOOL WINAPI kernel32.FindVolumeMountPointClose(_In_ HANDLE hFindVolumeMountPoint)
BOOL WINAPI kernel32.FlsFree(_In_ DWORD dwFlsIndex)
BOOL WINAPI kernel32.FlsSetValue(_In_ DWORD dwFlsIndex,_In_opt_ PVOID lpFlsData)
BOOL WINAPI kernel32.FlushFileBuffers(_In_ HANDLE hFile)
BOOL WINAPI kernel32.FlushInstructionCache(_In_ HANDLE hProcess,_In_ LPCVOID lpBaseAddress,_In_ SIZE_T dwSize)
BOOL WINAPI kernel32.FlushViewOfFile(_In_ LPCVOID lpBaseAddress,_In_ SIZE_T dwNumberOfBytesToFlush)
BOOL WINAPI kernel32.FreeEnvironmentStringsA(_In_ LPTCH lpszEnvironmentBlock)
BOOL WINAPI kernel32.FreeEnvironmentStrings(_In_ LPTCH lpszEnvironmentBlock)
BOOL WINAPI kernel32.FreeEnvironmentStringsW(_In_ LPTCH lpszEnvironmentBlock)
BOOL WINAPI kernel32.FreeLibrary(_In_ HMODULE hModule)
BOOL WINAPI kernel32.FreeResource(_In_ HGLOBAL hglbResource)
BOOL WINAPI kernel32.FreeUserPhysicalPages(_In_ HANDLE hProcess,_Inout_ PULONG_PTR NumberOfPages,_In_ PULONG_PTR UserPfnArray)
BOOL WINAPI kernel32.GetBinaryTypeA(_In_ LPCTSTR lpApplicationName,_Out_ LPDWORD lpBinaryType)
BOOL WINAPI kernel32.GetBinaryType(_In_ LPCTSTR lpApplicationName,_Out_ LPDWORD lpBinaryType)
BOOL WINAPI kernel32.GetBinaryTypeW(_In_ LPCTSTR lpApplicationName,_Out_ LPDWORD lpBinaryType)
BOOL WINAPI kernel32.GetCommConfig(_In_ HANDLE hCommDev,_Out_ LPCOMMCONFIG lpCC,_Inout_ LPDWORD lpdwSize)
BOOL WINAPI kernel32.GetCommMask(_In_ HANDLE hFile,_Out_ LPDWORD lpEvtMask)
BOOL WINAPI kernel32.GetCommModemStatus(_In_ HANDLE hFile,_Out_ LPDWORD lpModemStat)
BOOL WINAPI kernel32.GetCommProperties(_In_ HANDLE hFile,_Out_ LPCOMMPROP lpCommProp)
BOOL WINAPI kernel32.GetCommState(_In_ HANDLE hFile,_Inout_ LPDCB lpDCB)
BOOL WINAPI kernel32.GetCommTimeouts(_In_ HANDLE hFile,_Out_ LPCOMMTIMEOUTS lpCommTimeouts)
BOOL WINAPI kernel32.GetComputerNameA(_Out_ LPTSTR lpBuffer,_Inout_ LPDWORD lpnSize)
BOOL WINAPI kernel32.GetComputerNameExA(_In_ COMPUTER_NAME_FORMAT NameType,_Out_ LPTSTR lpBuffer,_Inout_ LPDWORD lpnSize)
BOOL WINAPI kernel32.GetComputerNameEx(_In_ COMPUTER_NAME_FORMAT NameType,_Out_ LPTSTR lpBuffer,_Inout_ LPDWORD lpnSize)
BOOL WINAPI kernel32.GetComputerNameExW(_In_ COMPUTER_NAME_FORMAT NameType,_Out_ LPTSTR lpBuffer,_Inout_ LPDWORD lpnSize)
BOOL WINAPI kernel32.GetComputerName(_Out_ LPTSTR lpBuffer,_Inout_ LPDWORD lpnSize)
BOOL WINAPI kernel32.GetComputerNameW(_Out_ LPTSTR lpBuffer,_Inout_ LPDWORD lpnSize)
BOOL WINAPI kernel32.GetDefaultCommConfigA(_In_ LPCTSTR lpszName,_Out_ LPCOMMCONFIG lpCC,_Inout_ LPDWORD lpdwSize)
BOOL WINAPI kernel32.GetDefaultCommConfig(_In_ LPCTSTR lpszName,_Out_ LPCOMMCONFIG lpCC,_Inout_ LPDWORD lpdwSize)
BOOL WINAPI kernel32.GetDefaultCommConfigW(_In_ LPCTSTR lpszName,_Out_ LPCOMMCONFIG lpCC,_Inout_ LPDWORD lpdwSize)
BOOL WINAPI kernel32.GetDevicePowerState(_In_ HANDLE hDevice,_Out_ BOOL *pfOn)
BOOL WINAPI kernel32.GetDiskFreeSpaceA(_In_ LPCTSTR lpRootPathName,_Out_ LPDWORD lpSectorsPerCluster,_Out_ LPDWORD lpBytesPerSector,_Out_ LPDWORD lpNumberOfFreeClusters,_Out_ LPDWORD lpTotalNumberOfClusters)
BOOL WINAPI kernel32.GetDiskFreeSpaceExA(_In_opt_ LPCTSTR lpDirectoryName,_Out_opt_ PULARGE_INTEGER lpFreeBytesAvailable,_Out_opt_ PULARGE_INTEGER lpTotalNumberOfBytes,_Out_opt_ PULARGE_INTEGER lpTotalNumberOfFreeBytes)
BOOL WINAPI kernel32.GetDiskFreeSpaceEx(_In_opt_ LPCTSTR lpDirectoryName,_Out_opt_ PULARGE_INTEGER lpFreeBytesAvailable,_Out_opt_ PULARGE_INTEGER lpTotalNumberOfBytes,_Out_opt_ PULARGE_INTEGER lpTotalNumberOfFreeBytes)
BOOL WINAPI kernel32.GetDiskFreeSpaceExW(_In_opt_ LPCTSTR lpDirectoryName,_Out_opt_ PULARGE_INTEGER lpFreeBytesAvailable,_Out_opt_ PULARGE_INTEGER lpTotalNumberOfBytes,_Out_opt_ PULARGE_INTEGER lpTotalNumberOfFreeBytes)
BOOL WINAPI kernel32.GetDiskFreeSpace(_In_ LPCTSTR lpRootPathName,_Out_ LPDWORD lpSectorsPerCluster,_Out_ LPDWORD lpBytesPerSector,_Out_ LPDWORD lpNumberOfFreeClusters,_Out_ LPDWORD lpTotalNumberOfClusters)
BOOL WINAPI kernel32.GetDiskFreeSpaceW(_In_ LPCTSTR lpRootPathName,_Out_ LPDWORD lpSectorsPerCluster,_Out_ LPDWORD lpBytesPerSector,_Out_ LPDWORD lpNumberOfFreeClusters,_Out_ LPDWORD lpTotalNumberOfClusters)
BOOL WINAPI kernel32.GetExitCodeProcess(_In_ HANDLE hProcess,_Out_ LPDWORD lpExitCode)
BOOL WINAPI kernel32.GetExitCodeThread(_In_ HANDLE hThread,_Out_ LPDWORD lpExitCode)
BOOL WINAPI kernel32.GetFileAttributesExA(_In_ LPCTSTR lpFileName,_In_ GET_FILEEX_INFO_LEVELS fInfoLevelId,_Out_ LPVOID lpFileInformation)
BOOL WINAPI kernel32.GetFileAttributesEx(_In_ LPCTSTR lpFileName,_In_ GET_FILEEX_INFO_LEVELS fInfoLevelId,_Out_ LPVOID lpFileInformation)
BOOL WINAPI kernel32.GetFileAttributesExW(_In_ LPCTSTR lpFileName,_In_ GET_FILEEX_INFO_LEVELS fInfoLevelId,_Out_ LPVOID lpFileInformation)
BOOL WINAPI kernel32.GetFileAttributesTransactedA(_In_ LPCTSTR lpFileName,_In_ GET_FILEEX_INFO_LEVELS fInfoLevelId,_Out_ LPVOID lpFileInformation,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.GetFileAttributesTransacted(_In_ LPCTSTR lpFileName,_In_ GET_FILEEX_INFO_LEVELS fInfoLevelId,_Out_ LPVOID lpFileInformation,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.GetFileAttributesTransactedW(_In_ LPCTSTR lpFileName,_In_ GET_FILEEX_INFO_LEVELS fInfoLevelId,_Out_ LPVOID lpFileInformation,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.GetFileBandwidthReservation(_In_ HANDLE hFile,_Out_ LPDWORD lpPeriodMilliseconds,_Out_ LPDWORD lpBytesPerPeriod,_Out_ LPBOOL pDiscardable,_Out_ LPDWORD lpTransferSize,_Out_ LPDWORD lpNumOutstandingRequests)
BOOL WINAPI kernel32.GetFileInformationByHandleEx(_In_ HANDLE hFile,_In_ FILE_INFO_BY_HANDLE_CLASS FileInformationClass,_Out_ LPVOID lpFileInformation,_In_ DWORD dwBufferSize)
BOOL WINAPI kernel32.GetFileInformationByHandle(_In_ HANDLE hFile,_Out_ LPBY_HANDLE_FILE_INFORMATION lpFileInformation)
BOOL WINAPI kernel32.GetFileSizeEx(_In_ HANDLE hFile,_Out_ PLARGE_INTEGER lpFileSize)
BOOL WINAPI kernel32.GetFileTime(_In_ HANDLE hFile,_Out_opt_ LPFILETIME lpCreationTime,_Out_opt_ LPFILETIME lpLastAccessTime,_Out_opt_ LPFILETIME lpLastWriteTime)
BOOL WINAPI kernel32.GetFirmwareType(_Inout_ PFIRMWARE_TYPE FirmwareType)
BOOL WINAPI kernel32.GetHandleInformation(_In_ HANDLE hObject,_Out_ LPDWORD lpdwFlags)
BOOL WINAPI kernel32.GetLogicalProcessorInformation(_Out_ PSYSTEM_LOGICAL_PROCESSOR_INFORMATION Buffer,_Inout_ PDWORD ReturnLength)
BOOL WINAPI kernel32.GetMailslotInfo(_In_ HANDLE hMailslot,_Out_opt_ LPDWORD lpMaxMessageSize,_Out_opt_ LPDWORD lpNextSize,_Out_opt_ LPDWORD lpMessageCount,_Out_opt_ LPDWORD lpReadTimeout)
BOOL WINAPI kernel32.GetMemoryErrorHandlingCapabilities(_Out_ PULONG Capabilities)
BOOL WINAPI kernel32.GetModuleHandleExA(_In_ DWORD dwFlags,_In_opt_ LPCTSTR lpModuleName,_Out_ HMODULE *phModule)
BOOL WINAPI kernel32.GetModuleHandleEx(_In_ DWORD dwFlags,_In_opt_ LPCTSTR lpModuleName,_Out_ HMODULE *phModule)
BOOL WINAPI kernel32.GetModuleHandleExW(_In_ DWORD dwFlags,_In_opt_ LPCTSTR lpModuleName,_Out_ HMODULE *phModule)
BOOL WINAPI kernel32.GetModuleInformation(_In_ HANDLE hProcess,_In_ HMODULE hModule,_Out_ LPMODULEINFO lpmodinfo,_In_ DWORD cb)
BOOL WINAPI kernel32.GetNamedPipeClientComputerNameA(_In_ HANDLE Pipe,_Out_ LPTSTR ClientComputerName,_In_ ULONG ClientComputerNameLength)
BOOL WINAPI kernel32.GetNamedPipeClientComputerName(_In_ HANDLE Pipe,_Out_ LPTSTR ClientComputerName,_In_ ULONG ClientComputerNameLength)
BOOL WINAPI kernel32.GetNamedPipeClientComputerNameW(_In_ HANDLE Pipe,_Out_ LPTSTR ClientComputerName,_In_ ULONG ClientComputerNameLength)
BOOL WINAPI kernel32.GetNamedPipeClientProcessId(_In_ HANDLE Pipe,_Out_ PULONG ClientProcessId)
BOOL WINAPI kernel32.GetNamedPipeClientSessionId(_In_ HANDLE Pipe,_Out_ PULONG ClientSessionId)
BOOL WINAPI kernel32.GetNamedPipeHandleStateA(_In_ HANDLE hNamedPipe,_Out_opt_ LPDWORD lpState,_Out_opt_ LPDWORD lpCurInstances,_Out_opt_ LPDWORD lpMaxCollectionCount,_Out_opt_ LPDWORD lpCollectDataTimeout,_Out_opt_ LPTSTR lpUserName,_In_ DWORD nMaxUserNameSize)
BOOL WINAPI kernel32.GetNamedPipeHandleState(_In_ HANDLE hNamedPipe,_Out_opt_ LPDWORD lpState,_Out_opt_ LPDWORD lpCurInstances,_Out_opt_ LPDWORD lpMaxCollectionCount,_Out_opt_ LPDWORD lpCollectDataTimeout,_Out_opt_ LPTSTR lpUserName,_In_ DWORD nMaxUserNameSize)
BOOL WINAPI kernel32.GetNamedPipeHandleStateW(_In_ HANDLE hNamedPipe,_Out_opt_ LPDWORD lpState,_Out_opt_ LPDWORD lpCurInstances,_Out_opt_ LPDWORD lpMaxCollectionCount,_Out_opt_ LPDWORD lpCollectDataTimeout,_Out_opt_ LPTSTR lpUserName,_In_ DWORD nMaxUserNameSize)
BOOL WINAPI kernel32.GetNamedPipeInfo(_In_ HANDLE hNamedPipe,_Out_opt_ LPDWORD lpFlags,_Out_opt_ LPDWORD lpOutBufferSize,_Out_opt_ LPDWORD lpInBufferSize,_Out_opt_ LPDWORD lpMaxInstances)
BOOL WINAPI kernel32.GetNamedPipeServerProcessId(_In_ HANDLE Pipe,_Out_ PULONG ServerProcessId)
BOOL WINAPI kernel32.GetNamedPipeServerSessionId(_In_ HANDLE Pipe,_Out_ PULONG ServerSessionId)
BOOL WINAPI kernel32.GetNumaAvailableMemoryNode(_In_ UCHAR Node,_Out_ PULONGLONG AvailableBytes)
BOOL WINAPI kernel32.GetNumaHighestNodeNumber(_Out_ PULONG HighestNodeNumber)
BOOL WINAPI kernel32.GetNumaNodeProcessorMask(_In_ UCHAR Node,_Out_ PULONGLONG ProcessorMask)
BOOL WINAPI kernel32.GetNumaProcessorNode(_In_ UCHAR Processor,_Out_ PUCHAR NodeNumber)
BOOL WINAPI kernel32.GetNumaProximityNode(_In_ ULONG ProximityId,_Out_ PUCHAR NodeNumber)
BOOL WINAPI kernel32.GetOverlappedResult(_In_ HANDLE hFile,_In_ LPOVERLAPPED lpOverlapped,_Out_ LPDWORD lpNumberOfBytesTransferred,_In_ BOOL bWait)
BOOL WINAPI kernel32.GetPerformanceInfo(_Out_ PPERFORMANCE_INFORMATION pPerformanceInformation,_In_ DWORD cb)
BOOL WINAPI kernel32.GetPhysicallyInstalledSystemMemory(_Out_ PULONGLONG TotalMemoryInKilobytes)
BOOL WINAPI kernel32.GetPrivateProfileStructA(_In_ LPCTSTR lpszSection,_In_ LPCTSTR lpszKey,_Out_ LPVOID lpStruct,_In_ UINT uSizeStruct,_In_ LPCTSTR szFile)
BOOL WINAPI kernel32.GetPrivateProfileStruct(_In_ LPCTSTR lpszSection,_In_ LPCTSTR lpszKey,_Out_ LPVOID lpStruct,_In_ UINT uSizeStruct,_In_ LPCTSTR szFile)
BOOL WINAPI kernel32.GetPrivateProfileStructW(_In_ LPCTSTR lpszSection,_In_ LPCTSTR lpszKey,_Out_ LPVOID lpStruct,_In_ UINT uSizeStruct,_In_ LPCTSTR szFile)
BOOL WINAPI kernel32.GetProcessAffinityMask(_In_ HANDLE hProcess,_Out_ PDWORD_PTR lpProcessAffinityMask,_Out_ PDWORD_PTR lpSystemAffinityMask)
BOOL WINAPI kernel32.GetProcessDefaultCpuSets(_In_ HANDLE Process,_Out_opt_ PULONG CpuSetIds,_In_ ULONG CpuSetIdCount,_Out_ PULONG RequiredIdCount)
BOOL WINAPI kernel32.GetProcessDEPPolicy(_In_ HANDLE hProcess,_Out_ LPDWORD lpFlags,_Out_ PBOOL lpPermanent)
BOOL WINAPI kernel32.GetProcessHandleCount(_In_ HANDLE hProcess,_Inout_ PDWORD pdwHandleCount)
BOOL WINAPI kernel32.GetProcessIoCounters(_In_ HANDLE hProcess,_Out_ PIO_COUNTERS lpIoCounters)
BOOL WINAPI kernel32.GetProcessMemoryInfo(_In_ HANDLE Process,_Out_ PPROCESS_MEMORY_COUNTERS ppsmemCounters,_In_ DWORD cb)
BOOL WINAPI kernel32.GetProcessMitigationPolicy(_In_ HANDLE hProcess,_In_ PROCESS_MITIGATION_POLICY MitigationPolicy,_Out_ PVOID lpBuffer,_In_ SIZE_T dwLength)
BOOL WINAPI kernel32.GetProcessPriorityBoost(_In_ HANDLE hProcess,_Out_ PBOOL pDisablePriorityBoost)
BOOL WINAPI kernel32.GetProcessShutdownParameters(_Out_ LPDWORD lpdwLevel,_Out_ LPDWORD lpdwFlags)
BOOL WINAPI kernel32.GetProcessTimes(_In_ HANDLE hProcess,_Out_ LPFILETIME lpCreationTime,_Out_ LPFILETIME lpExitTime,_Out_ LPFILETIME lpKernelTime,_Out_ LPFILETIME lpUserTime)
BOOL WINAPI kernel32.GetProcessWorkingSetSizeEx(_In_ HANDLE hProcess,_Out_ PSIZE_T lpMinimumWorkingSetSize,_Out_ PSIZE_T lpMaximumWorkingSetSize,_Out_ PDWORD Flags)
BOOL WINAPI kernel32.GetProcessWorkingSetSize(_In_ HANDLE hProcess,_Out_ PSIZE_T lpMinimumWorkingSetSize,_Out_ PSIZE_T lpMaximumWorkingSetSize)
BOOL WINAPI kernel32.GetProductInfo(_In_ DWORD dwOSMajorVersion,_In_ DWORD dwOSMinorVersion,_In_ DWORD dwSpMajorVersion,_In_ DWORD dwSpMinorVersion,_Out_ PDWORD pdwReturnedProductType)
BOOL WINAPI kernel32.GetQueuedCompletionStatusEx(_In_ HANDLE CompletionPort,_Out_ LPOVERLAPPED_ENTRY lpCompletionPortEntries,_In_ ULONG ulCount,_Out_ PULONG ulNumEntriesRemoved,_In_ DWORD dwMilliseconds,_In_ BOOL fAlertable)
BOOL WINAPI kernel32.GetQueuedCompletionStatus(_In_ HANDLE CompletionPort,_Out_ LPDWORD lpNumberOfBytes,_Out_ PULONG_PTR lpCompletionKey,_Out_ LPOVERLAPPED *lpOverlapped,_In_ DWORD dwMilliseconds)
BOOL WINAPI kernel32.GetSystemCpuSetInformation(_Out_opt_ PSYSTEM_CPU_SET_INFORMATION Information,_In_ ULONG BufferLength,_Out_ PULONG ReturnedLength,_In_opt_ HANDLE Process,_Reserved_ ULONG Flags)
BOOL WINAPI kernel32.GetSystemFileCacheSize(_Out_ PSIZE_T lpMinimumFileCacheSize,_Out_ PSIZE_T lpMaximumFileCacheSize,_Out_ PDWORD lpFlags)
BOOL WINAPI kernel32.GetSystemPowerStatus(_Out_ LPSYSTEM_POWER_STATUS lpSystemPowerStatus)
BOOL WINAPI kernel32.GetSystemRegistryQuota(_Out_opt_ PDWORD pdwQuotaAllowed,_Out_opt_ PDWORD pdwQuotaUsed)
BOOL WINAPI kernel32.GetSystemTimeAdjustment(_Out_ PDWORD lpTimeAdjustment,_Out_ PDWORD lpTimeIncrement,_Out_ PBOOL lpTimeAdjustmentDisabled)
BOOL WINAPI kernel32.GetSystemTimes(_Out_opt_ LPFILETIME lpIdleTime,_Out_opt_ LPFILETIME lpKernelTime,_Out_opt_ LPFILETIME lpUserTime)
BOOL WINAPI kernel32.GetThreadContext(_In_ HANDLE hThread,_Inout_ LPCONTEXT lpContext)
BOOL WINAPI kernel32.GetThreadIOPendingFlag(_In_ HANDLE hThread,_Inout_ PBOOL lpIOIsPending)
BOOL WINAPI kernel32.GetThreadPriorityBoost(_In_ HANDLE hThread,_Out_ PBOOL pDisablePriorityBoost)
BOOL WINAPI kernel32.GetThreadSelectedCpuSets(_In_ HANDLE Thread,_Out_opt_ PULONG CpuSetIds,_In_ ULONG CpuSetIdCount,_Out_ PULONG RequiredIdCount)
BOOL WINAPI kernel32.GetThreadSelectorEntry(_In_ HANDLE hThread,_In_ DWORD dwSelector,_Out_ LPLDT_ENTRY lpSelectorEntry)
BOOL WINAPI kernel32.GetThreadTimes(_In_ HANDLE hThread,_Out_ LPFILETIME lpCreationTime,_Out_ LPFILETIME lpExitTime,_Out_ LPFILETIME lpKernelTime,_Out_ LPFILETIME lpUserTime)
BOOL WINAPI kernel32.GetTimeZoneInformationForYear(_In_ USHORT wYear,_In_opt_ PDYNAMIC_TIME_ZONE_INFORMATION pdtzi,_Out_ LPTIME_ZONE_INFORMATION ptzi)
BOOL WINAPI kernel32.GetUmsCompletionListEvent(_In_ PUMS_COMPLETION_LIST UmsCompletionList,_Inout_ PHANDLE UmsCompletionEvent)
BOOL WINAPI kernel32.GetUmsSystemThreadInformation(_In_ HANDLE ThreadHandle,_Inout_ PUMS_SYSTEM_THREAD_INFORMATION SystemThreadInfo)
BOOL WINAPI kernel32.GetVersionExA(_Inout_ LPOSVERSIONINFO lpVersionInfo)
BOOL WINAPI kernel32.GetVersionEx(_Inout_ LPOSVERSIONINFO lpVersionInfo)
BOOL WINAPI kernel32.GetVersionExW(_Inout_ LPOSVERSIONINFO lpVersionInfo)
BOOL WINAPI kernel32.GetVolumeInformationA(_In_opt_ LPCTSTR lpRootPathName,_Out_opt_ LPTSTR lpVolumeNameBuffer,_In_ DWORD nVolumeNameSize,_Out_opt_ LPDWORD lpVolumeSerialNumber,_Out_opt_ LPDWORD lpMaximumComponentLength,_Out_opt_ LPDWORD lpFileSystemFlags,_Out_opt_ LPTSTR lpFileSystemNameBuffer,_In_ DWORD nFileSystemNameSize)
BOOL WINAPI kernel32.GetVolumeInformationByHandleW(_In_ HANDLE hFile,_Out_opt_ LPWSTR lpVolumeNameBuffer,_In_ DWORD nVolumeNameSize,_Out_opt_ LPDWORD lpVolumeSerialNumber,_Out_opt_ LPDWORD lpMaximumComponentLength,_Out_opt_ LPDWORD lpFileSystemFlags,_Out_opt_ LPWSTR lpFileSystemNameBuffer,_In_ DWORD nFileSystemNameSize)
BOOL WINAPI kernel32.GetVolumeInformation(_In_opt_ LPCTSTR lpRootPathName,_Out_opt_ LPTSTR lpVolumeNameBuffer,_In_ DWORD nVolumeNameSize,_Out_opt_ LPDWORD lpVolumeSerialNumber,_Out_opt_ LPDWORD lpMaximumComponentLength,_Out_opt_ LPDWORD lpFileSystemFlags,_Out_opt_ LPTSTR lpFileSystemNameBuffer,_In_ DWORD nFileSystemNameSize)
BOOL WINAPI kernel32.GetVolumeInformationW(_In_opt_ LPCTSTR lpRootPathName,_Out_opt_ LPTSTR lpVolumeNameBuffer,_In_ DWORD nVolumeNameSize,_Out_opt_ LPDWORD lpVolumeSerialNumber,_Out_opt_ LPDWORD lpMaximumComponentLength,_Out_opt_ LPDWORD lpFileSystemFlags,_Out_opt_ LPTSTR lpFileSystemNameBuffer,_In_ DWORD nFileSystemNameSize)
BOOL WINAPI kernel32.GetVolumeNameForVolumeMountPointA(_In_ LPCTSTR lpszVolumeMountPoint,_Out_ LPTSTR lpszVolumeName,_In_ DWORD cchBufferLength)
BOOL WINAPI kernel32.GetVolumeNameForVolumeMountPoint(_In_ LPCTSTR lpszVolumeMountPoint,_Out_ LPTSTR lpszVolumeName,_In_ DWORD cchBufferLength)
BOOL WINAPI kernel32.GetVolumeNameForVolumeMountPointW(_In_ LPCTSTR lpszVolumeMountPoint,_Out_ LPTSTR lpszVolumeName,_In_ DWORD cchBufferLength)
BOOL WINAPI kernel32.GetVolumePathNameA(_In_ LPCTSTR lpszFileName,_Out_ LPTSTR lpszVolumePathName,_In_ DWORD cchBufferLength)
BOOL WINAPI kernel32.GetVolumePathName(_In_ LPCTSTR lpszFileName,_Out_ LPTSTR lpszVolumePathName,_In_ DWORD cchBufferLength)
BOOL WINAPI kernel32.GetVolumePathNamesForVolumeNameA(_In_ LPCTSTR lpszVolumeName,_Out_ LPTSTR lpszVolumePathNames,_In_ DWORD cchBufferLength,_Out_ PDWORD lpcchReturnLength)
BOOL WINAPI kernel32.GetVolumePathNamesForVolumeName(_In_ LPCTSTR lpszVolumeName,_Out_ LPTSTR lpszVolumePathNames,_In_ DWORD cchBufferLength,_Out_ PDWORD lpcchReturnLength)
BOOL WINAPI kernel32.GetVolumePathNamesForVolumeNameW(_In_ LPCTSTR lpszVolumeName,_Out_ LPTSTR lpszVolumePathNames,_In_ DWORD cchBufferLength,_Out_ PDWORD lpcchReturnLength)
BOOL WINAPI kernel32.GetVolumePathNameW(_In_ LPCTSTR lpszFileName,_Out_ LPTSTR lpszVolumePathName,_In_ DWORD cchBufferLength)
BOOL WINAPI kernel32.GetWsChangesEx(_In_ HANDLE hProcess,_Out_ PPSAPI_WS_WATCH_INFORMATION_EX lpWatchInfoEx,_Inout_ PDWORD cb)
BOOL WINAPI kernel32.GetWsChanges(_In_ HANDLE hProcess,_Out_ PPSAPI_WS_WATCH_INFORMATION lpWatchInfo,_In_ DWORD cb)
BOOL WINAPI kernel32.GetXStateFeaturesMask(_In_ PCONTEXT Context,_Out_ PWORD64 FeatureMask)
BOOL WINAPI kernel32.GlobalMemoryStatusEx(_Inout_ LPMEMORYSTATUSEX lpBuffer)
BOOL WINAPI kernel32.GlobalUnlock(_In_ HGLOBAL hMem)
BOOL WINAPI kernel32.Heap32First(_Inout_ LPHEAPENTRY32 lphe,_In_ DWORD th32ProcessID,_In_ ULONG_PTR th32HeapID)
BOOL WINAPI kernel32.Heap32ListFirst(_In_ HANDLE hSnapshot,_Inout_ LPHEAPLIST32 lphl)
BOOL WINAPI kernel32.Heap32ListNext(_In_ HANDLE hSnapshot,_Out_ LPHEAPLIST32 lphl)
BOOL WINAPI kernel32.Heap32Next(_Out_ LPHEAPENTRY32 lphe)
BOOL WINAPI kernel32.HeapDestroy(_In_ HANDLE hHeap)
BOOL WINAPI kernel32.HeapFree(_In_ HANDLE hHeap,_In_ DWORD dwFlags,_In_ LPVOID lpMem)
BOOL WINAPI kernel32.HeapLock(_In_ HANDLE hHeap)
BOOL WINAPI kernel32.HeapQueryInformation(_In_opt_ HANDLE HeapHandle,_In_ HEAP_INFORMATION_CLASS HeapInformationClass,_Out_ PVOID HeapInformation,_In_ SIZE_T HeapInformationLength,_Out_opt_ PSIZE_T ReturnLength)
BOOL WINAPI kernel32.HeapSetInformation(_In_opt_ HANDLE HeapHandle,_In_ HEAP_INFORMATION_CLASS HeapInformationClass,_In_ PVOID HeapInformation,_In_ SIZE_T HeapInformationLength)
BOOL WINAPI kernel32.HeapUnlock(_In_ HANDLE hHeap)
BOOL WINAPI kernel32.HeapValidate(_In_ HANDLE hHeap,_In_ DWORD dwFlags,_In_opt_ LPCVOID lpMem)
BOOL WINAPI kernel32.HeapWalk(_In_ HANDLE hHeap,_Inout_ LPPROCESS_HEAP_ENTRY lpEntry)
BOOL WINAPI kernel32.InitAtomTable(_In_ DWORD nSize)
BOOL WINAPI kernel32.InitializeContext(_Out_opt_ PVOID Buffer,_In_ DWORD ContextFlags,_Out_opt_ PCONTEXT *Context,_Inout_ PWORD ContextLength)
BOOL WINAPI kernel32.InitializeCriticalSectionAndSpinCount(_Out_ LPCRITICAL_SECTION lpCriticalSection,_In_ DWORD dwSpinCount)
BOOL WINAPI kernel32.InitializeCriticalSectionEx(_Out_ LPCRITICAL_SECTION lpCriticalSection,_In_ DWORD dwSpinCount,_In_ DWORD Flags)
BOOL WINAPI kernel32.InitializeProcessForWsWatch(_In_ HANDLE hProcess)
BOOL WINAPI kernel32.InitializeProcThreadAttributeList(_Out_opt_ LPPROC_THREAD_ATTRIBUTE_LIST lpAttributeList,_In_ DWORD dwAttributeCount,_Reserved_ DWORD dwFlags,_Inout_ PSIZE_T lpSize)
BOOL WINAPI kernel32.InitializeSynchronizationBarrier(_Out_ LPSYNCHRONIZATION_BARRIER lpBarrier,_In_ LONG lTotalThreads,_In_ LONG lSpinCount)
BOOL WINAPI kernel32.InitOnceBeginInitialize(_Inout_ LPINIT_ONCE lpInitOnce,_In_ DWORD dwFlags,_Out_ PBOOL fPending,_Out_opt_ LPVOID *lpContext)
BOOL WINAPI kernel32.InitOnceComplete(_Inout_ LPINIT_ONCE lpInitOnce,_In_ DWORD dwFlags,_In_opt_ LPVOID lpContext)
BOOL WINAPI kernel32.InitOnceExecuteOnce(_Inout_ PINIT_ONCE InitOnce,_In_ PINIT_ONCE_FN InitFn,_Inout_opt_ PVOID Parameter,_Out_opt_ LPVOID *Context)
BOOL WINAPI kernel32.InstallELAMCertificateInfo(_In_ HANDLE ELAMFile)
BOOL WINAPI kernel32.IsBadCodePtr(_In_ FARPROC lpfn)
BOOL WINAPI kernel32.IsBadStringPtrA(_In_ LPCTSTR lpsz,_In_ UINT_PTR ucchMax)
BOOL WINAPI kernel32.IsBadStringPtr(_In_ LPCTSTR lpsz,_In_ UINT_PTR ucchMax)
BOOL WINAPI kernel32.IsBadStringPtrW(_In_ LPCTSTR lpsz,_In_ UINT_PTR ucchMax)
BOOL WINAPI kernel32.IsBadWritePtr(_In_ LPVOID lp,_In_ UINT_PTR ucb)
BOOL WINAPI kernel32.IsDebuggerPresent(void None None)
BOOL WINAPI kernel32.IsNativeVhdBoot(_Out_ PBOOL *NativeVhdBoot)
BOOL WINAPI kernel32.IsProcessInJob(_In_ HANDLE ProcessHandle,_In_opt_ HANDLE JobHandle,_Out_ PBOOL Result)
BOOL WINAPI kernel32.IsProcessorFeaturePresent(_In_ DWORD ProcessorFeature)
BOOL WINAPI kernel32.IsSystemResumeAutomatic(void None None)
BOOL WINAPI kernel32.IsThreadAFiber(void None None)
BOOL WINAPI kernel32.IsThreadpoolTimerSet(_Inout_ PTP_TIMER pti)
BOOL WINAPI kernel32.IsWindows7OrGreater(void None None)
BOOL WINAPI kernel32.IsWindowsVistaOrGreater(void None None)
BOOL WINAPI kernel32.IsWindowsVistaSP2OrGreater(void None None)
BOOL WINAPI kernel32.IsWow64Process2(_In_ HANDLE hProcess,_Out_ USHORT *pProcessMachine,_Out_opt_ USHORT *pNativeMachine)
BOOL WINAPI kernel32.IsWow64Process(_In_ HANDLE hProcess,_Out_ PBOOL Wow64Process)
BOOL WINAPI kernel32.LoadStringByReference(_In_ DWORD Flags,_In_opt_ PCWSTR Language,_In_ PCWSTR SourceString,_Out_opt_ PWSTR Buffer,_In_ ULONG cchBuffer,_In_opt_ PCWSTR Directory,_Out_opt_ PULONG pcchBufferOut)
BOOL WINAPI kernel32.LocalUnlock(_In_ HLOCAL hMem)
BOOL WINAPI kernel32.LockFileEx(_In_ HANDLE hFile,_In_ DWORD dwFlags,_Reserved_ DWORD dwReserved,_In_ DWORD nNumberOfBytesToLockLow,_In_ DWORD nNumberOfBytesToLockHigh,_Inout_ LPOVERLAPPED lpOverlapped)
BOOL WINAPI kernel32.LockFile(_In_ HANDLE hFile,_In_ DWORD dwFileOffsetLow,_In_ DWORD dwFileOffsetHigh,_In_ DWORD nNumberOfBytesToLockLow,_In_ DWORD nNumberOfBytesToLockHigh)
BOOL WINAPI kernel32.MapUserPhysicalPages(_In_ PVOID lpAddress,_In_ ULONG_PTR NumberOfPages,_In_ PULONG_PTR UserPfnArray)
BOOL WINAPI kernel32.MapUserPhysicalPagesScatter(_In_ PVOID *VirtualAddresses,_In_ ULONG_PTR NumberOfPages,_In_ PULONG_PTR PageArray)
BOOL WINAPI kernel32.Module32First(_In_ HANDLE hSnapshot,_Inout_ LPMODULEENTRY32 lpme)
BOOL WINAPI kernel32.Module32FirstW(_In_ HANDLE hSnapshot,_Inout_ LPMODULEENTRY32 lpme)
BOOL WINAPI kernel32.Module32Next(_In_ HANDLE hSnapshot,_Out_ LPMODULEENTRY32 lpme)
BOOL WINAPI kernel32.Module32NextW(_In_ HANDLE hSnapshot,_Out_ LPMODULEENTRY32 lpme)
BOOL WINAPI kernel32.MoveFileA(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName)
BOOL WINAPI kernel32.MoveFileExA(_In_ LPCTSTR lpExistingFileName,_In_opt_ LPCTSTR lpNewFileName,_In_ DWORD dwFlags)
BOOL WINAPI kernel32.MoveFileEx(_In_ LPCTSTR lpExistingFileName,_In_opt_ LPCTSTR lpNewFileName,_In_ DWORD dwFlags)
BOOL WINAPI kernel32.MoveFileExW(_In_ LPCTSTR lpExistingFileName,_In_opt_ LPCTSTR lpNewFileName,_In_ DWORD dwFlags)
BOOL WINAPI kernel32.MoveFile(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName)
BOOL WINAPI kernel32.MoveFileTransactedA(_In_ LPCTSTR lpExistingFileName,_In_opt_ LPCTSTR lpNewFileName,_In_opt_ LPPROGRESS_ROUTINE lpProgressRoutine,_In_opt_ LPVOID lpData,_In_ DWORD dwFlags,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.MoveFileTransacted(_In_ LPCTSTR lpExistingFileName,_In_opt_ LPCTSTR lpNewFileName,_In_opt_ LPPROGRESS_ROUTINE lpProgressRoutine,_In_opt_ LPVOID lpData,_In_ DWORD dwFlags,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.MoveFileTransactedW(_In_ LPCTSTR lpExistingFileName,_In_opt_ LPCTSTR lpNewFileName,_In_opt_ LPPROGRESS_ROUTINE lpProgressRoutine,_In_opt_ LPVOID lpData,_In_ DWORD dwFlags,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.MoveFileW(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName)
BOOL WINAPI kernel32.MoveFileWithProgressA(_In_ LPCTSTR lpExistingFileName,_In_opt_ LPCTSTR lpNewFileName,_In_opt_ LPPROGRESS_ROUTINE lpProgressRoutine,_In_opt_ LPVOID lpData,_In_ DWORD dwFlags)
BOOL WINAPI kernel32.MoveFileWithProgress(_In_ LPCTSTR lpExistingFileName,_In_opt_ LPCTSTR lpNewFileName,_In_opt_ LPPROGRESS_ROUTINE lpProgressRoutine,_In_opt_ LPVOID lpData,_In_ DWORD dwFlags)
BOOL WINAPI kernel32.MoveFileWithProgressW(_In_ LPCTSTR lpExistingFileName,_In_opt_ LPCTSTR lpNewFileName,_In_opt_ LPPROGRESS_ROUTINE lpProgressRoutine,_In_opt_ LPVOID lpData,_In_ DWORD dwFlags)
BOOL WINAPI kernel32.NeedCurrentDirectoryForExePathA(_In_ LPCTSTR ExeName)
BOOL WINAPI kernel32.NeedCurrentDirectoryForExePath(_In_ LPCTSTR ExeName)
BOOL WINAPI kernel32.NeedCurrentDirectoryForExePathW(_In_ LPCTSTR ExeName)
BOOL WINAPI kernel32.NotifyUILanguageChange(_In_ DWORD dwFlags,_In_opt_ PCWSTR pcwstrNewLanguage,_In_opt_ PCWSTR pcwstrPreviousLanguage,_In_ DWORD dwReserved,_Out_opt_ PDWORD pdwStatusRtrn)
BOOL WINAPI kernel32.OOBEComplete(_Out_ PBOOL OOBEComplete)
BOOL WINAPI kernel32.PeekNamedPipe(_In_ HANDLE hNamedPipe,_Out_opt_ LPVOID lpBuffer,_In_ DWORD nBufferSize,_Out_opt_ LPDWORD lpBytesRead,_Out_opt_ LPDWORD lpTotalBytesAvail,_Out_opt_ LPDWORD lpBytesLeftThisMessage)
BOOL WINAPI kernel32.PostQueuedCompletionStatus(_In_ HANDLE CompletionPort,_In_ DWORD dwNumberOfBytesTransferred,_In_ ULONG_PTR dwCompletionKey,_In_opt_ LPOVERLAPPED lpOverlapped)
BOOL WINAPI kernel32.PrefetchVirtualMemory(_In_ HANDLE hProcess,_In_ ULONG_PTR NumberOfEntries,_In_ PWIN32_MEMORY_RANGE_ENTRY VirtualAddresses,_In_ ULONG Flags)
BOOL WINAPI kernel32.Process32First(_In_ HANDLE hSnapshot,_Inout_ LPPROCESSENTRY32 lppe)
BOOL WINAPI kernel32.Process32FirstW(_In_ HANDLE hSnapshot,_Inout_ LPPROCESSENTRY32 lppe)
BOOL WINAPI kernel32.Process32Next(_In_ HANDLE hSnapshot,_Out_ LPPROCESSENTRY32 lppe)
BOOL WINAPI kernel32.Process32NextW(_In_ HANDLE hSnapshot,_Out_ LPPROCESSENTRY32 lppe)
BOOL WINAPI kernel32.PulseEvent(_In_ HANDLE hEvent)
BOOL WINAPI kernel32.PurgeComm(_In_ HANDLE hFile,_In_ DWORD dwFlags)
BOOL WINAPI kernel32.QueryFullProcessImageNameA(_In_ HANDLE hProcess,_In_ DWORD dwFlags,_Out_ LPTSTR lpExeName,_Inout_ PDWORD lpdwSize)
BOOL WINAPI kernel32.QueryFullProcessImageName(_In_ HANDLE hProcess,_In_ DWORD dwFlags,_Out_ LPTSTR lpExeName,_Inout_ PDWORD lpdwSize)
BOOL WINAPI kernel32.QueryFullProcessImageNameW(_In_ HANDLE hProcess,_In_ DWORD dwFlags,_Out_ LPTSTR lpExeName,_Inout_ PDWORD lpdwSize)
BOOL WINAPI kernel32.QueryIdleProcessorCycleTime(_Inout_ PULONG BufferLength,_Out_ PULONG64 ProcessorIdleCycleTime)
BOOL WINAPI kernel32.QueryInformationJobObject(_In_opt_ HANDLE hJob,_In_ JOBOBJECTINFOCLASS JobObjectInfoClass,_Out_ LPVOID lpJobObjectInfo,_In_ DWORD cbJobObjectInfoLength,_Out_opt_ LPDWORD lpReturnLength)
BOOL WINAPI kernel32.QueryMemoryResourceNotification(_In_ HANDLE ResourceNotificationHandle,_Out_ PBOOL ResourceState)
BOOL WINAPI kernel32.QueryPerformanceCounter(_Out_ LARGE_INTEGER *lpPerformanceCount)
BOOL WINAPI kernel32.QueryPerformanceFrequency(_Out_ LARGE_INTEGER *lpFrequency)
BOOL WINAPI kernel32.QueryProcessAffinityUpdateMode(_In_ HANDLE ProcessHandle,_Out_opt_ DWORD lpdwFlags)
BOOL WINAPI kernel32.QueryProcessCycleTime(_In_ HANDLE ProcessHandle,_Out_ PULONG64 CycleTime)
BOOL WINAPI kernel32.QueryProtectedPolicy(_In_ LPCGUID PolicyGuid,_Out_ PULONG_PTR PolicyValue)
BOOL WINAPI kernel32.QueryThreadCycleTime(_In_ HANDLE ThreadHandle,_Out_ PULONG64 CycleTime)
BOOL WINAPI kernel32.QueryUmsThreadInformation(_In_ PUMS_CONTEXT UmsThread,_In_ UMS_THREAD_INFO_CLASS UmsThreadInfoClass,_Out_ PVOID UmsThreadInformation,_In_ ULONG UmsThreadInformationLength,_Out_opt_ PULONG ReturnLength)
BOOL WINAPI kernel32.QueryWorkingSetEx(_In_ HANDLE hProcess,_Inout_ PVOID pv,_In_ DWORD cb)
BOOL WINAPI kernel32.QueryWorkingSet(_In_ HANDLE hProcess,_Out_ PVOID pv,_In_ DWORD cb)
BOOL WINAPI kernel32.QueueUserWorkItem(_In_ LPTHREAD_START_ROUTINE Function,_In_opt_ PVOID Context,_In_ ULONG Flags)
BOOL WINAPI kernel32.ReadDirectoryChangesExW(_In_ HANDLE hDirectory,_Out_ LPVOID lpBuffer,_In_ DWORD nBufferLength,_In_ BOOL bWatchSubtree,_In_ DWORD dwNotifyFilter,_Out_opt_ LPDWORD lpBytesReturned,_Inout_opt_ LPOVERLAPPED lpOverlapped,_In_opt_ LPOVERLAPPED_COMPLETION_ROUTINE lpCompletionRoutine,_In_ READ_DIRECTORY_NOTIFY_INFORMATION_CLASS ReadDirectoryNotifyInformationClass)
BOOL WINAPI kernel32.ReadDirectoryChangesW(_In_ HANDLE hDirectory,_Out_ LPVOID lpBuffer,_In_ DWORD nBufferLength,_In_ BOOL bWatchSubtree,_In_ DWORD dwNotifyFilter,_Out_opt_ LPDWORD lpBytesReturned,_Inout_opt_ LPOVERLAPPED lpOverlapped,_In_opt_ LPOVERLAPPED_COMPLETION_ROUTINE lpCompletionRoutine)
BOOL WINAPI kernel32.ReadFileEx(_In_ HANDLE hFile,_Out_opt_ LPVOID lpBuffer,_In_ DWORD nNumberOfBytesToRead,_Inout_ LPOVERLAPPED lpOverlapped,_In_ LPOVERLAPPED_COMPLETION_ROUTINE lpCompletionRoutine)
BOOL WINAPI kernel32.ReadFile(_In_ HANDLE hFile,_Out_ LPVOID lpBuffer,_In_ DWORD nNumberOfBytesToRead,_Out_opt_ LPDWORD lpNumberOfBytesRead,_Inout_opt_ LPOVERLAPPED lpOverlapped)
BOOL WINAPI kernel32.ReadFileScatter(_In_ HANDLE hFile,_In_ FILE_SEGMENT_ELEMENT aSegmentArray[],_In_ DWORD nNumberOfBytesToRead,_Reserved_ LPDWORD lpReserved,_Inout_ LPOVERLAPPED lpOverlapped)
BOOL WINAPI kernel32.ReadProcessMemory(_In_ HANDLE hProcess,_In_ LPCVOID lpBaseAddress,_Out_ LPVOID lpBuffer,_In_ SIZE_T nSize,_Out_ SIZE_T *lpNumberOfBytesRead)
BOOL WINAPI kernel32.RegisterWaitForSingleObject(_Out_ PHANDLE phNewWaitObject,_In_ HANDLE hObject,_In_ WAITORTIMERCALLBACK Callback,_In_opt_ PVOID Context,_In_ ULONG dwMilliseconds,_In_ ULONG dwFlags)
BOOL WINAPI kernel32.ReleaseMutex(_In_ HANDLE hMutex)
BOOL WINAPI kernel32.ReleaseSemaphore(_In_ HANDLE hSemaphore,_In_ LONG lReleaseCount,_Out_opt_ LPLONG lpPreviousCount)
BOOL WINAPI kernel32.RemoveDirectoryA(_In_ LPCTSTR lpPathName)
BOOL WINAPI kernel32.RemoveDirectory(_In_ LPCTSTR lpPathName)
BOOL WINAPI kernel32.RemoveDirectoryTransactedA(_In_ LPCTSTR lpPathName,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.RemoveDirectoryTransacted(_In_ LPCTSTR lpPathName,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.RemoveDirectoryTransactedW(_In_ LPCTSTR lpPathName,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.RemoveDirectoryW(_In_ LPCTSTR lpPathName)
BOOL WINAPI kernel32.RemoveDllDirectory(_In_ DLL_DIRECTORY_COOKIE Cookie)
BOOL WINAPI kernel32.RemoveSecureMemoryCacheCallback(_In_ PSECURE_MEMORY_CACHE_CALLBACK pfnCallBack)
BOOL WINAPI kernel32.ReplaceFileA(_In_ LPCTSTR lpReplacedFileName,_In_ LPCTSTR lpReplacementFileName,_In_opt_ LPCTSTR lpBackupFileName,_In_ DWORD dwReplaceFlags,_Reserved_ LPVOID lpExclude,_Reserved_ LPVOID lpReserved)
BOOL WINAPI kernel32.ReplaceFile(_In_ LPCTSTR lpReplacedFileName,_In_ LPCTSTR lpReplacementFileName,_In_opt_ LPCTSTR lpBackupFileName,_In_ DWORD dwReplaceFlags,_Reserved_ LPVOID lpExclude,_Reserved_ LPVOID lpReserved)
BOOL WINAPI kernel32.ReplaceFileW(_In_ LPCTSTR lpReplacedFileName,_In_ LPCTSTR lpReplacementFileName,_In_opt_ LPCTSTR lpBackupFileName,_In_ DWORD dwReplaceFlags,_Reserved_ LPVOID lpExclude,_Reserved_ LPVOID lpReserved)
BOOL WINAPI kernel32.RequestWakeupLatency(_In_ LATENCY_TIME latency)
BOOL WINAPI kernel32.ResetEvent(_In_ HANDLE hEvent)
BOOL WINAPI kernel32.SetCommBreak(_In_ HANDLE hFile)
BOOL WINAPI kernel32.SetCommConfig(_In_ HANDLE hCommDev,_In_ LPCOMMCONFIG lpCC,_In_ DWORD dwSize)
BOOL WINAPI kernel32.SetCommMask(_In_ HANDLE hFile,_In_ DWORD dwEvtMask)
BOOL WINAPI kernel32.SetCommState(_In_ HANDLE hFile,_In_ LPDCB lpDCB)
BOOL WINAPI kernel32.SetCommTimeouts(_In_ HANDLE hFile,_In_ LPCOMMTIMEOUTS lpCommTimeouts)
BOOL WINAPI kernel32.SetComputerNameA(_In_ LPCTSTR lpComputerName)
BOOL WINAPI kernel32.SetComputerNameExA(_In_ COMPUTER_NAME_FORMAT NameType,_In_ LPCTSTR lpBuffer)
BOOL WINAPI kernel32.SetComputerNameEx(_In_ COMPUTER_NAME_FORMAT NameType,_In_ LPCTSTR lpBuffer)
BOOL WINAPI kernel32.SetComputerNameExW(_In_ COMPUTER_NAME_FORMAT NameType,_In_ LPCTSTR lpBuffer)
BOOL WINAPI kernel32.SetComputerName(_In_ LPCTSTR lpComputerName)
BOOL WINAPI kernel32.SetComputerNameW(_In_ LPCTSTR lpComputerName)
BOOL WINAPI kernel32.SetCurrentDirectoryA(_In_ LPCTSTR lpPathName)
BOOL WINAPI kernel32.SetCurrentDirectory(_In_ LPCTSTR lpPathName)
BOOL WINAPI kernel32.SetCurrentDirectoryW(_In_ LPCTSTR lpPathName)
BOOL WINAPI kernel32.SetDefaultCommConfigA(_In_ LPCTSTR lpszName,_In_ LPCOMMCONFIG lpCC,_In_ DWORD dwSize)
BOOL WINAPI kernel32.SetDefaultCommConfig(_In_ LPCTSTR lpszName,_In_ LPCOMMCONFIG lpCC,_In_ DWORD dwSize)
BOOL WINAPI kernel32.SetDefaultCommConfigW(_In_ LPCTSTR lpszName,_In_ LPCOMMCONFIG lpCC,_In_ DWORD dwSize)
BOOL WINAPI kernel32.SetDefaultDllDirectories(_In_ DWORD DirectoryFlags)
BOOL WINAPI kernel32.SetDllDirectoryA(_In_opt_ LPCTSTR lpPathName)
BOOL WINAPI kernel32.SetDllDirectory(_In_opt_ LPCTSTR lpPathName)
BOOL WINAPI kernel32.SetDllDirectoryW(_In_opt_ LPCTSTR lpPathName)
BOOL WINAPI kernel32.SetEndOfFile(_In_ HANDLE hFile)
BOOL WINAPI kernel32.SetEnvironmentVariableA(_In_ LPCTSTR lpName,_In_opt_ LPCTSTR lpValue)
BOOL WINAPI kernel32.SetEnvironmentVariable(_In_ LPCTSTR lpName,_In_opt_ LPCTSTR lpValue)
BOOL WINAPI kernel32.SetEnvironmentVariableW(_In_ LPCTSTR lpName,_In_opt_ LPCTSTR lpValue)
BOOL WINAPI kernel32.SetEvent(_In_ HANDLE hEvent)
BOOL WINAPI kernel32.SetFileAttributesA(_In_ LPCTSTR lpFileName,_In_ DWORD dwFileAttributes)
BOOL WINAPI kernel32.SetFileAttributes(_In_ LPCTSTR lpFileName,_In_ DWORD dwFileAttributes)
BOOL WINAPI kernel32.SetFileAttributesTransactedA(_In_ LPCTSTR lpFileName,_In_ DWORD dwFileAttributes,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.SetFileAttributesTransacted(_In_ LPCTSTR lpFileName,_In_ DWORD dwFileAttributes,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.SetFileAttributesTransactedW(_In_ LPCTSTR lpFileName,_In_ DWORD dwFileAttributes,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.SetFileAttributesW(_In_ LPCTSTR lpFileName,_In_ DWORD dwFileAttributes)
BOOL WINAPI kernel32.SetFileBandwidthReservation(_In_ HANDLE hFile,_In_ DWORD nPeriodMilliseconds,_In_ DWORD nBytesPerPeriod,_In_ BOOL bDiscardable,_Out_ LPDWORD lpTransferSize,_Out_ LPDWORD lpNumOutstandingRequests)
BOOL WINAPI kernel32.SetFileCompletionNotificationModes(_In_ HANDLE FileHandle,_In_ UCHAR Flags)
BOOL WINAPI kernel32.SetFileInformationByHandle(_In_ HANDLE hFile,_In_ FILE_INFO_BY_HANDLE_CLASS FileInformationClass,_In_ LPVOID lpFileInformation,_In_ DWORD dwBufferSize)
BOOL WINAPI kernel32.SetFileIoOverlappedRange(_In_ HANDLE FileHandle,_In_ PUCHAR OverlappedRangeStart,_In_ ULONG Length)
BOOL WINAPI kernel32.SetFilePointerEx(_In_ HANDLE hFile,_In_ LARGE_INTEGER liDistanceToMove,_Out_opt_ PLARGE_INTEGER lpNewFilePointer,_In_ DWORD dwMoveMethod)
BOOL WINAPI kernel32.SetFileShortNameA(_In_ HANDLE hFile,_In_ LPCTSTR lpShortName)
BOOL WINAPI kernel32.SetFileShortName(_In_ HANDLE hFile,_In_ LPCTSTR lpShortName)
BOOL WINAPI kernel32.SetFileShortNameW(_In_ HANDLE hFile,_In_ LPCTSTR lpShortName)
BOOL WINAPI kernel32.SetFileValidData(_In_ HANDLE hFile,_In_ LONGLONG ValidDataLength)
BOOL WINAPI kernel32.SetFirmwareEnvironmentVariableA(_In_ LPCTSTR lpName,_In_ LPCTSTR lpGuid,_In_ PVOID pBuffer,_In_ DWORD nSize)
BOOL WINAPI kernel32.SetFirmwareEnvironmentVariable(_In_ LPCTSTR lpName,_In_ LPCTSTR lpGuid,_In_ PVOID pBuffer,_In_ DWORD nSize)
BOOL WINAPI kernel32.SetFirmwareEnvironmentVariableW(_In_ LPCTSTR lpName,_In_ LPCTSTR lpGuid,_In_ PVOID pBuffer,_In_ DWORD nSize)
BOOL WINAPI kernel32.SetHandleInformation(_In_ HANDLE hObject,_In_ DWORD dwMask,_In_ DWORD dwFlags)
BOOL WINAPI kernel32.SetInformationJobObject(_In_ HANDLE hJob,_In_ JOBOBJECTINFOCLASS JobObjectInfoClass,_In_ LPVOID lpJobObjectInfo,_In_ DWORD cbJobObjectInfoLength)
BOOL WINAPI kernel32.SetMailslotInfo(_In_ HANDLE hMailslot,_In_ DWORD lReadTimeout)
BOOL WINAPI kernel32.SetNamedPipeHandleState(_In_ HANDLE hNamedPipe,_In_opt_ LPDWORD lpMode,_In_opt_ LPDWORD lpMaxCollectionCount,_In_opt_ LPDWORD lpCollectDataTimeout)
BOOL WINAPI kernel32.SetPriorityClass(_In_ HANDLE hProcess,_In_ DWORD dwPriorityClass)
BOOL WINAPI kernel32.SetProcessAffinityMask(_In_ HANDLE hProcess,_In_ DWORD_PTR dwProcessAffinityMask)
BOOL WINAPI kernel32.SetProcessAffinityUpdateMode(_In_ HANDLE ProcessHandle,_In_ DWORD dwFlags)
BOOL WINAPI kernel32.SetProcessDefaultCpuSets(_In_ HANDLE Process,_In_opt_ ULONG CpuSetIds,_In_ ULONG CpuSetIdCound)
BOOL WINAPI kernel32.SetProcessDEPPolicy(_In_ DWORD dwFlags)
BOOL WINAPI kernel32.SetProcessMitigationPolicy(_In_ PROCESS_MITIGATION_POLICY MitigationPolicy,_In_ PVOID lpBuffer,_In_ SIZE_T dwLength)
BOOL WINAPI kernel32.SetProcessPriorityBoost(_In_ HANDLE hProcess,_In_ BOOL DisablePriorityBoost)
BOOL WINAPI kernel32.SetProcessShutdownParameters(_In_ DWORD dwLevel,_In_ DWORD dwFlags)
BOOL WINAPI kernel32.SetProcessWorkingSetSizeEx(_In_ HANDLE hProcess,_In_ SIZE_T dwMinimumWorkingSetSize,_In_ SIZE_T dwMaximumWorkingSetSize,_In_ DWORD Flags)
BOOL WINAPI kernel32.SetProcessWorkingSetSize(_In_ HANDLE hProcess,_In_ SIZE_T dwMinimumWorkingSetSize,_In_ SIZE_T dwMaximumWorkingSetSize)
BOOL WINAPI kernel32.SetProtectedPolicy(_In_ LPCGUID PolicyGuid,_In_ ULONG_PTR PolicyValue,_Out_ PULONG_PTR OldPolicyValue)
BOOL WINAPI kernel32.SetSearchPathMode(_In_ DWORD Flags)
BOOL WINAPI kernel32.SetSystemFileCacheSize(_In_ SIZE_T MinimumFileCacheSize,_In_ SIZE_T MaximumFileCacheSize,_In_ DWORD Flags)
BOOL WINAPI kernel32.SetSystemPowerState(_In_ BOOL fSuspend,_In_ BOOL fForce)
BOOL WINAPI kernel32.SetSystemTimeAdjustment(_In_ DWORD dwTimeAdjustment,_In_ BOOL bTimeAdjustmentDisabled)
BOOL WINAPI kernel32.SetThreadpoolThreadMinimum(_Inout_ PTP_POOL ptpp,_In_ DWORD cthrdMic)
BOOL WINAPI kernel32.SetThreadpoolTimerEx(_Inout_ PTP_TIMER pti,_In_opt_ PFILETIME pftDueTime,_In_ DWORD msPeriod,_In_opt_ DWORD msWindowLength)
BOOL WINAPI kernel32.SetThreadpoolWaitEx(_Inout_ PTP_WAIT pwa,_In_opt_ HANDLE h,_In_opt_ PFILETIME pftTimeout,_Reserved_ PVOID Reserved)
BOOL WINAPI kernel32.SetThreadPriorityBoost(_In_ HANDLE hThread,_In_ BOOL DisablePriorityBoost)
BOOL WINAPI kernel32.SetThreadPriority(_In_ HANDLE hThread,_In_ int nPriority)
BOOL WINAPI kernel32.SetThreadStackGuarantee(_Inout_ PULONG StackSizeInBytes)
BOOL WINAPI kernel32.SetUmsThreadInformation(_In_ PUMS_CONTEXT UmsThread,_In_ UMS_THREAD_INFO_CLASS UmsThreadInfoClass,_In_ PVOID UmsThreadInformation,_In_ ULONG UmsThreadInformationLength)
BOOL WINAPI kernel32.SetupComm(_In_ HANDLE hFile,_In_ DWORD dwInQueue,_In_ DWORD dwOutQueue)
BOOL WINAPI kernel32.SetUserGeoName(_In_ PWSTR geoName)
BOOL WINAPI kernel32.SetVolumeLabelA(_In_opt_ LPCTSTR lpRootPathName,_In_opt_ LPCTSTR lpVolumeName)
BOOL WINAPI kernel32.SetVolumeLabel(_In_opt_ LPCTSTR lpRootPathName,_In_opt_ LPCTSTR lpVolumeName)
BOOL WINAPI kernel32.SetVolumeLabelW(_In_opt_ LPCTSTR lpRootPathName,_In_opt_ LPCTSTR lpVolumeName)
BOOL WINAPI kernel32.SetVolumeMountPointA(_In_ LPCTSTR lpszVolumeMountPoint,_In_ LPCTSTR lpszVolumeName)
BOOL WINAPI kernel32.SetVolumeMountPoint(_In_ LPCTSTR lpszVolumeMountPoint,_In_ LPCTSTR lpszVolumeName)
BOOL WINAPI kernel32.SetVolumeMountPointW(_In_ LPCTSTR lpszVolumeMountPoint,_In_ LPCTSTR lpszVolumeName)
BOOL WINAPI kernel32.SetXStateFeaturesMask(_Inout_ PCONTEXT Context,_In_ DWORD64 FeatureMask)
BOOL WINAPI kernel32.SleepConditionVariableCS(_Inout_ PCONDITION_VARIABLE ConditionVariable,_Inout_ PCRITICAL_SECTION CriticalSection,_In_ DWORD dwMilliseconds)
BOOL WINAPI kernel32.SleepConditionVariableSRW(_Inout_ PCONDITION_VARIABLE ConditionVariable,_Inout_ PSRWLOCK SRWLock,_In_ DWORD dwMilliseconds,_In_ ULONG Flags)
BOOL WINAPI kernel32.SwitchToThread(void None None)
BOOL WINAPI kernel32.SystemTimeToTzSpecificLocalTime(_In_opt_ LPTIME_ZONE_INFORMATION lpTimeZone,_In_ LPSYSTEMTIME lpUniversalTime,_Out_ LPSYSTEMTIME lpLocalTime)
BOOL WINAPI kernel32.TerminateJobObject(_In_ HANDLE hJob,_In_ UINT uExitCode)
BOOL WINAPI kernel32.TerminateProcess(_In_ HANDLE hProcess,_In_ UINT uExitCode)
BOOL WINAPI kernel32.TerminateThread(_Inout_ HANDLE hThread,_In_ DWORD dwExitCode)
BOOL WINAPI kernel32.Thread32First(_In_ HANDLE hSnapshot,_Inout_ LPTHREADENTRY32 lpte)
BOOL WINAPI kernel32.Thread32Next(_In_ HANDLE hSnapshot,_Out_ LPTHREADENTRY32 lpte)
BOOL WINAPI kernel32.Toolhelp32ReadProcessMemory(_In_ DWORD th32ProcessID,_In_ LPCVOID lpBaseAddress,_Out_ LPVOID lpBuffer,_In_ SIZE_T cbRead,_Out_ SIZE_T lpNumberOfBytesRead)
BOOL WINAPI kernel32.TransactNamedPipe(_In_ HANDLE hNamedPipe,_In_ LPVOID lpInBuffer,_In_ DWORD nInBufferSize,_Out_ LPVOID lpOutBuffer,_In_ DWORD nOutBufferSize,_Out_ LPDWORD lpBytesRead,_Inout_opt_ LPOVERLAPPED lpOverlapped)
BOOL WINAPI kernel32.TransmitCommChar(_In_ HANDLE hFile,_In_ char cChar)
BOOL WINAPI kernel32.TryEnterCriticalSection(_Inout_ LPCRITICAL_SECTION lpCriticalSection)
BOOL WINAPI kernel32.TrySubmitThreadpoolCallback(_In_ PTP_SIMPLE_CALLBACK pfns,_Inout_opt_ PVOID pv,_In_opt_ PTP_CALLBACK_ENVIRON pcbe)
BOOL WINAPI kernel32.TzSpecificLocalTimeToSystemTime(_In_opt_ LPTIME_ZONE_INFORMATION lpTimeZoneInformation,_In_ LPSYSTEMTIME lpLocalTime,_Out_ LPSYSTEMTIME lpUniversalTime)
BOOL WINAPI kernel32.UmsThreadYield(_In_ PVOID SchedulerParam)
BOOL WINAPI kernel32.UnlockFileEx(_In_ HANDLE hFile,_Reserved_ DWORD dwReserved,_In_ DWORD nNumberOfBytesToUnlockLow,_In_ DWORD nNumberOfBytesToUnlockHigh,_Inout_ LPOVERLAPPED lpOverlapped)
BOOL WINAPI kernel32.UnlockFile(_In_ HANDLE hFile,_In_ DWORD dwFileOffsetLow,_In_ DWORD dwFileOffsetHigh,_In_ DWORD nNumberOfBytesToUnlockLow,_In_ DWORD nNumberOfBytesToUnlockHigh)
BOOL WINAPI kernel32.UnmapViewOfFileEx(_In_ LPCVOID lpBaseAddress,_In_ DWORD UnmapFlags)
BOOL WINAPI kernel32.UnmapViewOfFile(_In_ LPCVOID lpBaseAddress)
BOOL WINAPI kernel32.UnregisterBadMemoryNotification(_In_ PVOID RegistrationHandle)
BOOL WINAPI kernel32.UnregisterWaitEx(_In_ HANDLE WaitHandle,_In_opt_ HANDLE CompletionEvent)
BOOL WINAPI kernel32.UnregisterWait(_In_ HANDLE WaitHandle)
BOOL WINAPI kernel32.UpdateProcThreadAttribute(_Inout_ LPPROC_THREAD_ATTRIBUTE_LIST lpAttributeList,_In_ DWORD dwFlags,_In_ DWORD_PTR Attribute,_In_ PVOID lpValue,_In_ SIZE_T cbSize,_Out_opt_ PVOID lpPreviousValue,_In_opt_ PSIZE_T lpReturnSize)
BOOL WINAPI kernel32.UpdateResourceA(_In_ HANDLE hUpdate,_In_ LPCTSTR lpType,_In_ LPCTSTR lpName,_In_ WORD wLanguage,_In_opt_ LPVOID lpData,_In_ DWORD cbData)
BOOL WINAPI kernel32.UpdateResource(_In_ HANDLE hUpdate,_In_ LPCTSTR lpType,_In_ LPCTSTR lpName,_In_ WORD wLanguage,_In_opt_ LPVOID lpData,_In_ DWORD cbData)
BOOL WINAPI kernel32.UpdateResourceW(_In_ HANDLE hUpdate,_In_ LPCTSTR lpType,_In_ LPCTSTR lpName,_In_ WORD wLanguage,_In_opt_ LPVOID lpData,_In_ DWORD cbData)
BOOL WINAPI kernel32.VerifyVersionInfoA(_In_ LPOSVERSIONINFOEX lpVersionInfo,_In_ DWORD dwTypeMask,_In_ DWORDLONG dwlConditionMask)
BOOL WINAPI kernel32.VerifyVersionInfo(_In_ LPOSVERSIONINFOEX lpVersionInfo,_In_ DWORD dwTypeMask,_In_ DWORDLONG dwlConditionMask)
BOOL WINAPI kernel32.VerifyVersionInfoW(_In_ LPOSVERSIONINFOEX lpVersionInfo,_In_ DWORD dwTypeMask,_In_ DWORDLONG dwlConditionMask)
BOOL WINAPI kernel32.VirtualFreeEx(_In_ HANDLE hProcess,_In_ LPVOID lpAddress,_In_ SIZE_T dwSize,_In_ DWORD dwFreeType)
BOOL WINAPI kernel32.VirtualFree(_In_ LPVOID lpAddress,_In_ SIZE_T dwSize,_In_ DWORD dwFreeType)
BOOL WINAPI kernel32.VirtualLock(_In_ LPVOID lpAddress,_In_ SIZE_T dwSize)
BOOL WINAPI kernel32.VirtualProtectEx(_In_ HANDLE hProcess,_In_ LPVOID lpAddress,_In_ SIZE_T dwSize,_In_ DWORD flNewProtect,_Out_ PDWORD lpflOldProtect)
BOOL WINAPI kernel32.VirtualProtectFromApp(_In_ PVOID Address,_In_ SIZE_T Size,_In_ ULONG NewProtection,_Out_ PULONG OldProtection)
BOOL WINAPI kernel32.VirtualProtect(_In_ LPVOID lpAddress,_In_ SIZE_T dwSize,_In_ DWORD flNewProtect,_Out_ PDWORD lpflOldProtect)
BOOL WINAPI kernel32.VirtualUnlock(_In_ LPVOID lpAddress,_In_ SIZE_T dwSize)
BOOL WINAPI kernel32.WaitCommEvent(_In_ HANDLE hFile,_Out_ LPDWORD lpEvtMask,_In_ LPOVERLAPPED lpOverlapped)
BOOL WINAPI kernel32.WaitForDebugEventEx(_Out_ LPDEBUG_EVENT lpDebugEvent,_In_ DWORD dwMilliseconds)
BOOL WINAPI kernel32.WaitForDebugEvent(_Out_ LPDEBUG_EVENT lpDebugEvent,_In_ DWORD dwMilliseconds)
BOOL WINAPI kernel32.WaitNamedPipeA(_In_ LPCTSTR lpNamedPipeName,_In_ DWORD nTimeOut)
BOOL WINAPI kernel32.WaitNamedPipe(_In_ LPCTSTR lpNamedPipeName,_In_ DWORD nTimeOut)
BOOL WINAPI kernel32.WaitNamedPipeW(_In_ LPCTSTR lpNamedPipeName,_In_ DWORD nTimeOut)
BOOL WINAPI kernel32.Wow64DisableWow64FsRedirection(_Out_ PVOID *OldValue)
BOOL WINAPI kernel32.Wow64GetThreadContext(_In_ HANDLE hThread,_Inout_ PWOW64_CONTEXT lpContext)
BOOL WINAPI kernel32.Wow64RevertWow64FsRedirection(_In_ PVOID OldValue)
BOOL WINAPI kernel32.WriteFileEx(_In_ HANDLE hFile,_In_opt_ LPCVOID lpBuffer,_In_ DWORD nNumberOfBytesToWrite,_Inout_ LPOVERLAPPED lpOverlapped,_In_ LPOVERLAPPED_COMPLETION_ROUTINE lpCompletionRoutine)
BOOL WINAPI kernel32.WriteFileGather(_In_ HANDLE hFile,_In_ FILE_SEGMENT_ELEMENT aSegmentArray[],_In_ DWORD nNumberOfBytesToWrite,_Reserved_ LPDWORD lpReserved,_Inout_ LPOVERLAPPED lpOverlapped)
BOOL WINAPI kernel32.WriteFile(_In_ HANDLE hFile,_In_ LPCVOID lpBuffer,_In_ DWORD nNumberOfBytesToWrite,_Out_opt_ LPDWORD lpNumberOfBytesWritten,_Inout_opt_ LPOVERLAPPED lpOverlapped)
BOOL WINAPI kernel32.WritePrivateProfileSectionA(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpString,_In_ LPCTSTR lpFileName)
BOOL WINAPI kernel32.WritePrivateProfileSection(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpString,_In_ LPCTSTR lpFileName)
BOOL WINAPI kernel32.WritePrivateProfileSectionW(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpString,_In_ LPCTSTR lpFileName)
BOOL WINAPI kernel32.WritePrivateProfileStringA(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ LPCTSTR lpString,_In_ LPCTSTR lpFileName)
BOOL WINAPI kernel32.WritePrivateProfileString(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ LPCTSTR lpString,_In_ LPCTSTR lpFileName)
BOOL WINAPI kernel32.WritePrivateProfileStringW(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ LPCTSTR lpString,_In_ LPCTSTR lpFileName)
BOOL WINAPI kernel32.WritePrivateProfileStructA(_In_ LPCTSTR lpszSection,_In_ LPCTSTR lpszKey,_In_ LPVOID lpStruct,_In_ UINT uSizeStruct,_In_ LPCTSTR szFile)
BOOL WINAPI kernel32.WritePrivateProfileStruct(_In_ LPCTSTR lpszSection,_In_ LPCTSTR lpszKey,_In_ LPVOID lpStruct,_In_ UINT uSizeStruct,_In_ LPCTSTR szFile)
BOOL WINAPI kernel32.WritePrivateProfileStructW(_In_ LPCTSTR lpszSection,_In_ LPCTSTR lpszKey,_In_ LPVOID lpStruct,_In_ UINT uSizeStruct,_In_ LPCTSTR szFile)
BOOL WINAPI kernel32.WriteProcessMemory(_In_ HANDLE hProcess,_In_ LPVOID lpBaseAddress,_In_ LPCVOID lpBuffer,_In_ SIZE_T nSize,_Out_ SIZE_T *lpNumberOfBytesWritten)
BOOL WINAPI kernel32.WriteProfileSectionA(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpString)
BOOL WINAPI kernel32.WriteProfileSection(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpString)
BOOL WINAPI kernel32.WriteProfileSectionW(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpString)
BOOL WINAPI kernel32.WriteProfileStringA(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ LPCTSTR lpString)
BOOL WINAPI kernel32.WriteProfileString(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ LPCTSTR lpString)
BOOL WINAPI kernel32.WriteProfileStringW(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ LPCTSTR lpString)
BOOL WINAPI kernelbase.CompareObjectHandles(_In_ HANDLE hFirstObjectHandle,_In_ HANDLE hSecondObjectHandle)
BOOL WINAPI kernelbase.TlsFree(_In_ DWORD dwTlsIndex)
BOOL WINAPI kernelbase.TlsSetValue(_In_ DWORD dwTlsIndex,_In_opt_ LPVOID lpTlsValue)
BOOL WINAPI kernel.GetDisplayAutoRotationPreferencesByProcessId(_In_ DWORD *dwProcessId,_Out_ ORIENTATION_PREFERENCE *pOrientation,_Out_ BOOL *fRotateScreen)
BOOL WINAPI kernel.GetDisplayAutoRotationPreferences(_Out_ ORIENTATION_PREFERENCE *pOrientation)
BOOL WINAPI kernel.GetDisplayAutoRotationPreferences(_Out_ PAR_STATE pState)
BOOL WINAPI kernel.SetDisplayAutoRotationPreferences(_In_ ORIENTATION_PREFERENCE *pOrientation)
BOOL WINAPI ktmw32.CommitComplete(_In_ HANDLE EnlistmentHandle,_In_ PLARGE_INTEGER TmVirtualClock)
BOOL WINAPI ktmw32.CommitTransactionAsync(_In_ HANDLE TransactionHandle)
BOOL WINAPI ktmw32.CommitTransaction(_In_ HANDLE TransactionHandle)
BOOL WINAPI ktmw32.GetCurrentClockTransactionManager(_In_ HANDLE TransactionManagerHandle,_Out_ PLARGE_INTEGER TmVirtualClock)
BOOL WINAPI ktmw32.GetEnlistmentId(_In_ HANDLE EnlistmentHandle,_Out_ LPGUID EnlistmentId)
BOOL WINAPI ktmw32.GetEnlistmentRecoveryInformation(_In_ HANDLE EnlistmentHandle,_In_ ULONG BufferSize,_Out_ PVOID Buffer,_Out_opt_ PULONG BufferUsed)
BOOL WINAPI ktmw32.GetNotificationResourceManagerAsync(_In_ HANDLE ResourceManagerHandle,_Out_ PTRANSACTION_NOTIFICATION TransactionNotification,_In_ ULONG TransactionNotificationLength,_Out_ PULONG ReturnLength,_In_ LPOVERLAPPED pOverlapped)
BOOL WINAPI ktmw32.GetNotificationResourceManager(_In_ HANDLE ResourceManagerHandle,_Out_ PTRANSACTION_NOTIFICATION TransactionNotification,_In_ ULONG NotificationLength,_In_opt_ DWORD dwMilliseconds,_Out_opt_ PULONG ReturnLength)
BOOL WINAPI ktmw32.GetTransactionId(_In_ HANDLE TransactionHandle,_Out_ LPGUID TransactionId)
BOOL WINAPI ktmw32.GetTransactionInformation(_In_ HANDLE TransactionHandle,_Out_opt_ PDWORD Outcome,_Out_opt_ PDWORD IsolationLevel,_Out_opt_ PDWORD IsolationFlags,_Out_opt_ PDWORD Timeout,_In_ DWORD BufferLength,_Out_opt_ LPWSTR Description)
BOOL WINAPI ktmw32.GetTransactionManagerId(_In_ HANDLE TransactionManagerHandle,_Out_ LPGUID TransactionManagerId)
BOOL WINAPI ktmw32.PrepareComplete(_In_ HANDLE EnlistmentHandle,_In_ PLARGE_INTEGER TmVirtualClock)
BOOL WINAPI ktmw32.PrePrepareComplete(_In_ HANDLE EnlistmentHandle,_In_ PLARGE_INTEGER TmVirtualClock)
BOOL WINAPI ktmw32.ReadOnlyEnlistment(_In_ HANDLE EnlistmentHandle,_In_ PLARGE_INTEGER TmVirtualClock)
BOOL WINAPI ktmw32.RecoverEnlistment(_In_ HANDLE EnlistmentHandle,_In_opt_ PVOID EnlistmentKey)
BOOL WINAPI ktmw32.RecoverResourceManager(_In_ HANDLE ResourceManagerHandle)
BOOL WINAPI ktmw32.RecoverTransactionManager(_In_ HANDLE TransactionManagerHandle)
BOOL WINAPI ktmw32.RollbackComplete(_In_ HANDLE EnlistmentHandle,_In_ PLARGE_INTEGER TmVirtualClock)
BOOL WINAPI ktmw32.RollbackEnlistment(_In_ HANDLE EnlistmentHandle,_In_ PLARGE_INTEGER TmVirtualClock)
BOOL WINAPI ktmw32.RollbackTransactionAsync(_In_ HANDLE TransactionHandle)
BOOL WINAPI ktmw32.RollbackTransaction(_In_ HANDLE TransactionHandle)
BOOL WINAPI ktmw32.SetEnlistmentRecoveryInformation(_In_ HANDLE EnlistmentHandle,_In_ ULONG BufferSize,_In_ PVOID Buffer)
BOOL WINAPI ktmw32.SetResourceManagerCompletionPort(_In_ HANDLE ResourceManagerHandle,_In_ HANDLE IoCompletionPortHandle,_In_ ULONG_PTR CompletionKey)
BOOL WINAPI ktmw32.SetTransactionInformation(_In_ HANDLE TransactionHandle,_In_opt_ DWORD IsolationLevel,_In_opt_ DWORD IsolationFlags,_In_opt_ DWORD Timeout,_In_opt_ LPWSTR Description)
BOOL WINAPI ktmw32.SinglePhaseReject(_In_ HANDLE EnlistmentHandle,_In_ PLARGE_INTEGER TmVirtualClock)
BOOL WINAPI magnification.MagGetInputTransform(_Out_ BOOL *pfEnabled,_Out_ LPRECT prcSource,_Out_ LPRECT prcDest)
BOOL WINAPI magnification.MagGetWindowSource(_In_ HWND hwnd,_Out_ RECT *pRect)
BOOL WINAPI magnification.MagGetWindowTransform(_In_ HWND hwnd,_Out_ PMAGTRANSFORM pTransform)
BOOL WINAPI magnification.MagSetFullscreenColorEffect(_In_ PMAGCOLOREFFECT pEffect)
BOOL WINAPI magnification.MagSetWindowSource(_In_ HWND hwnd,_In_ RECT rect)
BOOL WINAPI magnification.MagSetWindowTransform(_In_ HWND hwnd,_Out_ PMAGTRANSFORM pTransform)
BOOL WINAPI magnification.MagShowSystemCursor(_In_ BOOL fShowCursor)
BOOL WINAPI msajapi.AllJoynEventSelect(_In_ HANDLE connectedBusHandle,_In_ HANDLE eventHandle,_In_ DWORD eventTypes)
BOOL WINAPI msajapi.AllJoynReceiveFromBus(_In_ HANDLE connectedBusHandle,_Out_ VOID* buffer,_In_ DWORD bytesToRead,_Out_opt_ PDWORD *bytesTransferred,_Inout_ PVOID reserved)
BOOL WINAPI msnsspc.CleanupCredentialCache(void None None)
BOOL WINAPI mssign32.GetCryptProvFromCert(_In_ HWND hwnd,_In_ PCCERT_CONTEXT pCert,_Out_ HCRYPTPROV *phCryptProv,_Out_ DWORD *pdwKeySpec,_In_ BOOL *pfDidCryptAcquire,_Out_opt_ LPWSTR *ppwszTmpContainer,_Out_opt_ LPWSTR *ppwszProviderName,_Out_ DWORD *pdwProviderType)
BOOL WINAPI mssign32.PvkPrivateKeyAcquireContextFromMemory(_In_ LPCWSTR pwszProvName,_In_ DWORD dwProvType,_In_ BYTE *pbData,_In_ DWORD cbData,_In_ HWND hwndOwner,_In_ LPCWSTR pwszKeyName,_Inout_opt_ DWORD *pdwKeySpec,_Out_ HCRYPTPROV *phCryptProv,_Out_ LPTSTR *ppwszTmpContainer)
BOOL WINAPI mssign32.PvkPrivateKeySave(_In_ HCRYPTPROV hCryptProv,_In_ HANDLE hFile,_In_ DWORD dwKeySpec,_In_ HWND hwndOwner,_In_ LPCWSTR pwszKeyName,_In_ DWORD dwFlags)
BOOL WINAPI ncrypt.NCryptIsKeyHandle(_In_ NCRYPT_KEY_HANDLE hKey)
BOOL WINAPI newdev.InstallNewDevice(_In_ HWND hwndParent,_In_ LPGUID ClassGuid,_Out_ PDWORD pReboot)
BOOL WINAPI nmapi.CompareFrameSourceAddress(_In_ HFRAME hFrame,_In_ LPADDRESS lpAddress)
BOOL WINAPI None.CertEnumSystemStoreLocationCallback(_In_ LPCWSTR pvszStoreLocations,_In_ DWORD dwFlags,_In_ void *pvReserved,_In_ void *pvArg)
BOOL WINAPI None.CertStoreProvDeleteCertCallback(_In_ HCERTSTOREPROV hStoreProv,_In_ PCCERT_CONTEXT pCertContext,_In_ DWORD dwFlags)
BOOL WINAPI None.CertStoreProvDeleteCRLCallback(_In_ HCERTSTOREPROV hStoreProv,_In_ PCCRL_CONTEXT pCrlContext,_In_ DWORD dwFlags)
BOOL WINAPI None.CertStoreProvDeleteCTL(_In_ HCERTSTOREPROV hStoreProv,_In_ PCCTL_CONTEXT pCtlContext,_In_ DWORD dwFlags)
BOOL WINAPI None.CertStoreProvFindCert(_In_ HCERTSTOREPROV hStoreProv,_In_ PCCERT_STORE_PROV_FIND_INFO pFindInfo,_In_ PCCERT_CONTEXT pPrevCertContext,_In_ DWORD dwFlags,_Inout_ void **ppvStoreProvFindInfo,_Out_ PCCERT_CONTEXT *ppProvCertContext)
BOOL WINAPI None.CertStoreProvFindCRL(_In_ HCERTSTOREPROV hStoreProv,_In_ PCCERT_STORE_PROV_FIND_INFO pFindInfo,_In_ PCCRL_CONTEXT pPrevCrlContext,_In_ DWORD dwFlags,_Inout_ void **ppvStoreProvFindInfo,_Out_ PCCRL_CONTEXT *ppProvCrlContext)
BOOL WINAPI None.CertStoreProvFindCTL(_In_ HCERTSTOREPROV hStoreProv,_In_ PCCERT_STORE_PROV_FIND_INFO pFindInfo,_In_ PCCTL_CONTEXT pPrevCtlContext,_In_ DWORD dwFlags,_Inout_ void **ppvStoreProvFindInfo,_Out_ PCCTL_CONTEXT *ppProvCtlContext)
BOOL WINAPI None.CertStoreProvFreeFindCert(_In_ HCERTSTOREPROV hStoreProv,_In_ PCCERT_CONTEXT pCertContext,_In_ void *pvStoreProvFindInfo,_In_ DWORD dwFlags)
BOOL WINAPI None.CertStoreProvFreeFindCRL(_In_ HCERTSTOREPROV hStoreProv,_In_ PCCRL_CONTEXT pCrlContext,_In_ void *pvStoreProvFindInfo,_In_ DWORD dwFlags)
BOOL WINAPI None.CertStoreProvGetCertProperty(_In_ HCERTSTOREPROV hStoreProv,_In_ PCCERT_CONTEXT pCertContext,_In_ DWORD dwPropId,_In_ DWORD dwFlags,_Out_ void *pvData,_Inout_ DWORD *pcbData)
BOOL WINAPI None.CertStoreProvGetCRLProperty(_In_ HCERTSTOREPROV hStoreProv,_In_ PCCRL_CONTEXT pCrlContext,_In_ DWORD dwPropId,_In_ DWORD dwFlags,_Out_ void *pvData,_Inout_ DWORD *pcbData)
BOOL WINAPI None.CertStoreProvGetCTLProperty(_In_ HCERTSTOREPROV hStoreProv,_In_ PCCTL_CONTEXT pCtlContext,_In_ DWORD dwPropId,_In_ DWORD dwFlags,_Out_ void *pvData,_Inout_ DWORD *pcbData)
BOOL WINAPI None.CertStoreProvReadCertCallback(_In_ HCERTSTOREPROV hStoreProv,_In_ PCCERT_CONTEXT pStoreCertContext,_In_ DWORD dwFlags,_Out_ PCCERT_CONTEXT *ppProvCertContext)
BOOL WINAPI None.CertStoreProvReadCRLCallback(_In_ HCERTSTOREPROV hStoreProv,_In_ PCCRL_CONTEXT pStoreCrlContext,_In_ DWORD dwFlags,_Out_ PCCRL_CONTEXT *ppProvCrlContext)
BOOL WINAPI None.CertStoreProvReadCTL(_In_ HCERTSTOREPROV hStoreProv,_In_ PCCTL_CONTEXT pStoreCtlContext,_In_ DWORD dwFlags,_Out_ PCCTL_CONTEXT *ppProvCtlContext)
BOOL WINAPI None.CertStoreProvWriteCertCallback(_In_ HCERTSTOREPROV hStoreProv,_In_ PCCERT_CONTEXT pCertContext,_In_ DWORD dwFlags)
BOOL WINAPI None.CertStoreProvWriteCRLCallback(_In_ HCERTSTOREPROV hStoreProv,_In_ PCCRL_CONTEXT pCrlContext,_In_ DWORD dwFlags)
BOOL WINAPI None.CertStoreProvWriteCTL(_In_ HCERTSTOREPROV hStoreProv,_In_ PCCTL_CONTEXT pCtlContext,_In_ DWORD dwFlags)
BOOL WINAPI None.ChangeFtpDir(HWND hDlg None,HINTERNET hConnection None,int nDirNameId None,int nListBoxId None)
BOOL WINAPI None.Configure(HEXPERTKEY hExpertKey None,PEXPERTCONFIG* ppConfig None,PEXPERTSTARTUPINFO pExpertStartupInfo None,DWORD StartupFlags None,HWND hWnd None)
BOOL WINAPI None.CRYPT_ENUM_KEYID_PROP(_In_ PCRYPT_HASH_BLOB pKeyIdentifier,_In_ DWORD dwFlags,_In_ void *pvReserved,_Inout_ void *pvArg,_In_ DWORD cProp,_In_ DWORD *rgdwPropId,_In_ void **rgpvData,_In_ DWORD *rgcbData)
BOOL WINAPI None.CRYPT_ENUM_OID_INFO(_In_ PCRYPT_OID_INFO pInfo,_In_ void *pvArg)
BOOL WINAPI None.CryptGetLocalKeyLimits(_In_ ALG_ID algId,_In_ DWORD dwFlags,_Out_ PCRYPT_KEY_LIMITS pLimits,_Inout_ LPDWORD cbLimitLength)
BOOL WINAPI None.DllMain(HINSTANCE hInstance None,ULONG ulReason None,LPVOID Reserved None)
BOOL WINAPI None.DllMain(_In_ HINSTANCE hinstDLL,_In_ DWORD fdwReason,_In_ LPVOID lpvReserved)
BOOL WINAPI None.ExitWindows(DWORD dwReserved None,UINT uReserved None)
BOOL WINAPI None.FaxConnectFaxServerA(__in_opt LPCTSTR MachineName,__out LPHANDLE FaxHandle)
BOOL WINAPI None.FaxConnectFaxServer(__in_opt LPCTSTR MachineName,__out LPHANDLE FaxHandle)
BOOL WINAPI None.FaxConnectFaxServerW(__in_opt LPCTSTR MachineName,__out LPHANDLE FaxHandle)
BOOL WINAPI None.FaxDevAbortOperation(__in HANDLE FaxHandle)
BOOL WINAPI None.FaxDevEndJob(__in HANDLE FaxHandle)
BOOL WINAPI None.FaxDevInitialize(__in HLINEAPP LineAppHandle,__in HANDLE HeapHandle,__out PFAX_LINECALLBACK *LineCallbackFunction,__in PFAX_SERVICE_CALLBACK FaxServiceCallback)
BOOL WINAPI None.FaxDevReportStatus(__in HANDLE FaxHandle,__out PFAX_DEV_STATUS FaxStatus,__in DWORD FaxStatusSize,__out LPDWORD FaxStatusSizeRequired)
BOOL WINAPI None.FaxDevSend(__in HANDLE FaxHandle,__in PFAX_SEND FaxSend,PFAX_SEND_CALLBACK FaxSendCallback None)
BOOL WINAPI None.FaxDevStartJob(__in HLINE LineHandle,__in DWORD DeviceId,__out PHANDLE FaxHandle,__in HANDLE CompletionPortHandle,__in ULONG_PTR CompletionKey)
BOOL WINAPI None.GenerateConsoleCtrlEvent(_In_ DWORD dwCtrlEvent,_In_ DWORD dwProcessGroupId)
BOOL WINAPI None.GetConsoleScreenBufferInfoEx(_In_ HANDLE hConsoleOutput,_Out_ PCONSOLE_SCREEN_BUFFER_INFOEX lpConsoleScreenBufferInfoEx)
BOOL WINAPI None.GetPrintExecutionData(_Out_ PRINT_EXECUTION_DATA *pData)
BOOL WINAPI None.IsAlive(_In_ RESID Resource)
BOOL WINAPI None.LooksAlive(_In_ RESID Resource)
BOOL WINAPI None.NeedCurrentDirectoryForExePathA(_In_ LPCTSTR ExeName)
BOOL WINAPI None.NeedCurrentDirectoryForExePath(_In_ LPCTSTR ExeName)
BOOL WINAPI None.NeedCurrentDirectoryForExePathW(_In_ LPCTSTR ExeName)
BOOL WINAPI None.OffloadModExpo(_In_ BYTE *pbBase,_In_ BYTE *pbExpo,_In_ DWORD cbExpo,_In_ BYTE *pbMod,_In_ DWORD cbMod,_Out_ BYTE *pbResult,_In_ void *pReserved,_In_ DWORD dwFlags)
BOOL WINAPI None.OnContextMenu(HWND hwnd None,int x None,int y None)
BOOL WINAPI None.ORASADFunc(_In_ HWND hwndOwner,_In_ LPSTR lpszEntry,_In_ DWORD dwFlags,_In_ LPDWORD lpdwRetCode)
BOOL WINAPI None.PeekConsoleInputA(_In_ HANDLE hConsoleInput,_Out_ PINPUT_RECORD lpBuffer,_In_ DWORD nLength,_Out_ LPDWORD lpNumberOfEventsRead)
BOOL WINAPI None.PeekConsoleInput(_In_ HANDLE hConsoleInput,_Out_ PINPUT_RECORD lpBuffer,_In_ DWORD nLength,_Out_ LPDWORD lpNumberOfEventsRead)
BOOL WINAPI None.PeekConsoleInputW(_In_ HANDLE hConsoleInput,_Out_ PINPUT_RECORD lpBuffer,_In_ DWORD nLength,_Out_ LPDWORD lpNumberOfEventsRead)
BOOL WINAPI None.PeerDistGetOverlappedResult(_In_ LPOVERLAPPED lpOverlapped,_Out_ LPDWORD lpNumberOfBytesTransferred,_In_ BOOL bWait)
BOOL WINAPI None.PFNCMFILTERPROC(_In_ PCCERT_CONTEXT pCertContext,_In_ DWORD lCustData,_In_ DWORD dwFlags,_In_ DWORD dwDisplayWell)
BOOL WINAPI None.RASADFuncA(_In_ LPTSTR lpszPhonebook,_In_ LPTSTR lpszEntry,_In_ LPRASADPARAMS lpAutoDialParams,_Out_ LPDWORD lpdwRetCode)
BOOL WINAPI None.RASADFunc(_In_ LPTSTR lpszPhonebook,_In_ LPTSTR lpszEntry,_In_ LPRASADPARAMS lpAutoDialParams,_Out_ LPDWORD lpdwRetCode)
BOOL WINAPI None.RASADFuncW(_In_ LPTSTR lpszPhonebook,_In_ LPTSTR lpszEntry,_In_ LPRASADPARAMS lpAutoDialParams,_Out_ LPDWORD lpdwRetCode)
BOOL WINAPI None.RasCustomDialDlgA(HINSTANCE hInstDll None,DWORD dwFlags None,LPWSTR lpszPhonebook None,LPWSTR lpszEntry None,LPWSTR lpszPhoneNumber None,LPRASDIALDLG lpInfo None,PVOID pvInfo None)
BOOL WINAPI None.RasCustomDialDlg(HINSTANCE hInstDll None,DWORD dwFlags None,LPWSTR lpszPhonebook None,LPWSTR lpszEntry None,LPWSTR lpszPhoneNumber None,LPRASDIALDLG lpInfo None,PVOID pvInfo None)
BOOL WINAPI None.RasCustomDialDlgW(HINSTANCE hInstDll None,DWORD dwFlags None,LPWSTR lpszPhonebook None,LPWSTR lpszEntry None,LPWSTR lpszPhoneNumber None,LPRASDIALDLG lpInfo None,PVOID pvInfo None)
BOOL WINAPI None.RasCustomEntryDlg(HINSTANCE hInstDll None,LPWSTR lpszPhonebook None,LPWSTR lpszEntry None,LPRASENTRYDLG lpInfo None,DWORD dwFlags None)
BOOL WINAPI None.RegisterDialogClasses(hInst None None)
BOOL WINAPI None.Register(PEXPERTENUMINFO pExpertInfo None)
BOOL WINAPI None.RoOriginateError(_In_ HRESULT error,_In_ HSTRING message)
BOOL WINAPI None.RoOriginateErrorW(_In_ HRESULT error,_In_ UINT cchMax,_In_ PCWSTR message)
BOOL WINAPI None.RoTransformError(_In_ HRESULT oldError,_In_ HRESULT newError,_In_ HSTRING message)
BOOL WINAPI None.Run(HEXPERTKEY hExpertKey None,PEXPERTCONFIG pConfig None,PEXPERTSTARTUPINFO pExpertStartupInfo None,DWORD StartupFlags None,HWND hWndParent None)
BOOL WINAPI None.SetConsoleCtrlHandler(_In_opt_ PHANDLER_ROUTINE HandlerRoutine,_In_ BOOL Add)
BOOL WINAPI None.SetConsoleCursorPosition(_In_ HANDLE hConsoleOutput,_In_ COORD dwCursorPosition)
BOOL WINAPI None.SetStdHandle(_In_ DWORD nStdHandle,_In_ HANDLE hHandle)
BOOL WINAPI None.WIMCloseHandle(HANDLE hObject None)
BOOL WINAPI None.WIMDeleteImage(HANDLE hWim None,DWORD dwImageIndex None)
BOOL WINAPI None.WIMDeleteImageMounts(DWORD dwDeleteFlags None)
BOOL WINAPI None.WIMExportImage(HANDLE hImage None,HANDLE hWim None,DWORD dwFlags None)
BOOL WINAPI None.WIMExtractImagePath(HANDLE hImage None,PWSTR pszImagePath None,PWSTR pszDestinationPath None,DWORD dwExtractFlags None)
BOOL WINAPI None.WIMGetAttributes(HANDLE hWim None,PWIM_INFO pWimInfo None,DWORD cbWimInfo None)
BOOL WINAPI None.WIMGetImageInformation(HANDLE hImage None,PVOID *ppvImageInfo None,PDWORD pcbImageInfo None)
BOOL WINAPI None.WIMGetMountedImageHandle(PWSTR pszMountPath None,DWORD dwFlags None,PHANDLE phWimHandle None,PHANDLE phImageHandle None)
BOOL WINAPI None.WIMGetMountedImageInfoFromHandle(HANDLE hImage None,MOUNTED_IMAGE_INFO_LEVELS fInfoLevelId None,PVOID pMountInfo None,DWORD cbMountInfoLength None,PDWORD pcbReturnLength None)
BOOL WINAPI None.WIMGetMountedImageInfo(MOUNTED_IMAGE_INFO_LEVELS fInfoLevelId None,PDWORD pdwImageCount None,PVOID pMountInfo None,DWORD cbMountInfoLength None,PDWORD pcbReturnLength None)
BOOL WINAPI None.WIMGetMountedImages(PWIM_MOUNT_LIST pMountList None,PDWORD pcbMountListLength None)
BOOL WINAPI None.WIMMountImageHandle(HANDLE hImage None,PCWSTR pszMountPath None,DWORD dwMountFlags None)
BOOL WINAPI None.WIMMountImage(PWSTR pszMountPath None,PWSTR pszWimFileName None,DWORD dwImageIndex None,PWSTR pszTempPath None)
BOOL WINAPI None.WIMRegisterLogFile(PCWSTR pszLogFile None,DWORD dwFlags None)
BOOL WINAPI None.WIMRemountImage(PCWSTR pszMountPath None,DWORD dwFlags None)
BOOL WINAPI None.WIMSetBootImage(HANDLE hWim None,DWORD dwImageIndex None)
BOOL WINAPI None.WIMSetImageInformation(HANDLE hImage None,PVOID pvImageInfo None,DWORD cbImageInfo None)
BOOL WINAPI None.WIMSetReferenceFile(HANDLE hWim None,PWSTR pszPath None,DWORD dwFlags None)
BOOL WINAPI None.WIMSplitFile(HANDLE hWim None,PWSTR pszPartPath None,LARGE_INTEGER pliPartSize None,DWORD dwFlags None)
BOOL WINAPI None.WIMUnmountImageHandle(HANDLE hImage None,DWORD dwUnmountFlags None)
BOOL WINAPI None.WIMUnmountImage(PWSTR pszMountPath None,PWSTR pszWimFileName None,DWORD dwImageIndex None,BOOL bCommitChanges None)
BOOL WINAPI None.WlxGetConsoleSwitchCredentials(_In_ PVOID pWlxContext,_Out_ PVOID pInfo)
BOOL WINAPI ntdll.IsProcessCritical(_In_ HANDLE hProcess,_Out_ PBOOL Critical)
BOOL WINAPI resutils.ClusterIsPathOnSharedVolume(_In_ LPCWSTR lpszPathName)
BOOL WINAPI resutils.ClusWorkerCheckTerminate(_In_ PCLUS_WORKER lpWorker)
BOOL WINAPI resutils.ResUtilIsResourceClassEqual(_In_ PCLUS_RESOURCE_CLASS_INFO prci,_In_ HRESOURCE hResource)
BOOL WINAPI resutils.ResUtilResourcesEqual(_In_ HRESOURCE hSelf,_In_ HRESOURCE hResource)
BOOL WINAPI resutils.ResUtilResourceTypesEqual(_In_ LPCWSTR lpszResourceTypeName,_In_ HRESOURCE hResource)
BOOL WINAPI setupapi.SetupAdjustDiskSpaceListA(_In_ HDSKSPC DiskSpace,_In_ LPCTSTR DriveRoot,_In_ LONGLONG Amount,_Reserved_ PVOID Reserved1,_Reserved_ UINT Reserved2)
BOOL WINAPI setupapi.SetupAdjustDiskSpaceList(_In_ HDSKSPC DiskSpace,_In_ LPCTSTR DriveRoot,_In_ LONGLONG Amount,_Reserved_ PVOID Reserved1,_Reserved_ UINT Reserved2)
BOOL WINAPI setupapi.SetupAdjustDiskSpaceListW(_In_ HDSKSPC DiskSpace,_In_ LPCTSTR DriveRoot,_In_ LONGLONG Amount,_Reserved_ PVOID Reserved1,_Reserved_ UINT Reserved2)
BOOL WINAPI setupapi.SetupCopyOEMInfA(_In_ PCTSTR SourceInfFileName,_In_ PCTSTR OEMSourceMediaLocation,_In_ DWORD OEMSourceMediaType,_In_ DWORD CopyStyle,_Out_opt_ PTSTR DestinationInfFileName,_In_ DWORD DestinationInfFileNameSize,_Out_opt_ PDWORD RequiredSize,_Out_opt_ PTSTR DestinationInfFileNameComponent)
BOOL WINAPI setupapi.SetupCopyOEMInf(_In_ PCTSTR SourceInfFileName,_In_ PCTSTR OEMSourceMediaLocation,_In_ DWORD OEMSourceMediaType,_In_ DWORD CopyStyle,_Out_opt_ PTSTR DestinationInfFileName,_In_ DWORD DestinationInfFileNameSize,_Out_opt_ PDWORD RequiredSize,_Out_opt_ PTSTR DestinationInfFileNameComponent)
BOOL WINAPI setupapi.SetupCopyOEMInfW(_In_ PCTSTR SourceInfFileName,_In_ PCTSTR OEMSourceMediaLocation,_In_ DWORD OEMSourceMediaType,_In_ DWORD CopyStyle,_Out_opt_ PTSTR DestinationInfFileName,_In_ DWORD DestinationInfFileNameSize,_Out_opt_ PDWORD RequiredSize,_Out_opt_ PTSTR DestinationInfFileNameComponent)
BOOL WINAPI setupapi.SetupEnumInfSectionsA(_In_ HINF InfHandle,_In_ UINT EnumerationIndex,_Out_opt_ PTSTR ReturnBuffer,_In_ DWORD ReturnBufferSize,_Out_opt_ PDWORD RequiredSize)
BOOL WINAPI setupapi.SetupEnumInfSections(_In_ HINF InfHandle,_In_ UINT EnumerationIndex,_Out_opt_ PTSTR ReturnBuffer,_In_ DWORD ReturnBufferSize,_Out_opt_ PDWORD RequiredSize)
BOOL WINAPI setupapi.SetupEnumInfSectionsW(_In_ HINF InfHandle,_In_ UINT EnumerationIndex,_Out_opt_ PTSTR ReturnBuffer,_In_ DWORD ReturnBufferSize,_Out_opt_ PDWORD RequiredSize)
BOOL WINAPI storprop.CdromKnownGoodDigitalPlayback(_In_ HDEVINFO DevInfo,_In_ PSP_DEVINFO_DATA DevInfoData)
BOOL WINAPI storprop.DvdLauncher(_In_ HWND HWnd,_In_ CHAR DriveLetter)
BOOL WINAPI txfw32.TxfLogCreateFileReadContext(_In_ LPCWSTR LogPath,_In_ CLFS_LSN BeginningLsn,_In_ CLFS_LSN EndingLSN,_In_ PTXF_ID TxfFileId,_Out_ PVOID *TxfLogContext)
BOOL WINAPI txfw32.TxfLogDestroyReadContext(_In_ PVOID TxfLogContext)
BOOL WINAPI txfw32.TxfLogReadRecords(_In_ PVOID TxfLogContext,_In_ ULONG BufferLength,_Out_ PVOID Buffer,_Out_ PULONG BytesUsed,_Out_ PULONG RecordCount)
BOOL WINAPI user32.AddClipboardFormatListener(_In_ HWND hwnd)
BOOL WINAPI user32.AdjustWindowRectExForDpi(_Inout_ LPRECT lpRect,_In_ DWORD dwStyle,_In_ BOOL bMenu,_In_ DWORD dwExStyle,_In_ UINT dpi)
BOOL WINAPI user32.AdjustWindowRectEx(_Inout_ LPRECT lpRect,_In_ DWORD dwStyle,_In_ BOOL bMenu,_In_ DWORD dwExStyle)
BOOL WINAPI user32.AdjustWindowRect(_Inout_ LPRECT lpRect,_In_ DWORD dwStyle,_In_ BOOL bMenu)
BOOL WINAPI user32.AllowSetForegroundWindow(_In_ DWORD dwProcessId)
BOOL WINAPI user32.AnimateWindow(_In_ HWND hwnd,_In_ DWORD dwTime,_In_ DWORD dwFlags)
BOOL WINAPI user32.AnyPopup(void None None)
BOOL WINAPI user32.AppendMenuA(_In_ HMENU hMenu,_In_ UINT uFlags,_In_ UINT_PTR uIDNewItem,_In_opt_ LPCTSTR lpNewItem)
BOOL WINAPI user32.AppendMenu(_In_ HMENU hMenu,_In_ UINT uFlags,_In_ UINT_PTR uIDNewItem,_In_opt_ LPCTSTR lpNewItem)
BOOL WINAPI user32.AppendMenuW(_In_ HMENU hMenu,_In_ UINT uFlags,_In_ UINT_PTR uIDNewItem,_In_opt_ LPCTSTR lpNewItem)
BOOL WINAPI user32.AreDpiAwarenessContextsEqual(_In_ DPI_AWARENESS_CONTEXT dpiContextA,_In_ DPI_AWARENESS_CONTEXT dpiContextB)
BOOL WINAPI user32.AttachThreadInput(_In_ DWORD idAttach,_In_ DWORD idAttachTo,_In_ BOOL fAttach)
BOOL WINAPI user32.BlockInput(_In_ BOOL fBlockIt)
BOOL WINAPI user32.BringWindowToTop(_In_ HWND hWnd)
BOOL WINAPI user32.CallMsgFilterA(_In_ LPMSG lpMsg,_In_ int nCode)
BOOL WINAPI user32.CallMsgFilter(_In_ LPMSG lpMsg,_In_ int nCode)
BOOL WINAPI user32.CallMsgFilterW(_In_ LPMSG lpMsg,_In_ int nCode)
BOOL WINAPI user32.ChangeClipboardChain(_In_ HWND hWndRemove,_In_ HWND hWndNewNext)
BOOL WINAPI user32.ChangeWindowMessageFilterEx(_In_ HWND hWnd,_In_ UINT message,_In_ DWORD action,_Inout_opt_ PCHANGEFILTERSTRUCT pChangeFilterStruct)
BOOL WINAPI user32.ChangeWindowMessageFilter(_In_ UINT message,_In_ DWORD dwFlag)
BOOL WINAPI user32.CharToOemA(_In_ LPCTSTR lpszSrc,_Out_ LPSTR lpszDst)
BOOL WINAPI user32.CharToOemBuffA(_In_ LPCTSTR lpszSrc,_Out_ LPSTR lpszDst,_In_ DWORD cchDstLength)
BOOL WINAPI user32.CharToOemBuff(_In_ LPCTSTR lpszSrc,_Out_ LPSTR lpszDst,_In_ DWORD cchDstLength)
BOOL WINAPI user32.CharToOemBuffW(_In_ LPCTSTR lpszSrc,_Out_ LPSTR lpszDst,_In_ DWORD cchDstLength)
BOOL WINAPI user32.CharToOem(_In_ LPCTSTR lpszSrc,_Out_ LPSTR lpszDst)
BOOL WINAPI user32.CharToOemW(_In_ LPCTSTR lpszSrc,_Out_ LPSTR lpszDst)
BOOL WINAPI user32.CheckMenuRadioItem(_In_ HMENU hmenu,_In_ UINT idFirst,_In_ UINT idLast,_In_ UINT idCheck,_In_ UINT uFlags)
BOOL WINAPI user32.CloseDesktop(_In_ HDESK hDesktop)
BOOL WINAPI user32.CloseWindow(_In_ HWND hWnd)
BOOL WINAPI user32.CloseWindowStation(_In_ HWINSTA hWinSta)
BOOL WINAPI user32.CreateCaret(_In_ HWND hWnd,_In_opt_ HBITMAP hBitmap,_In_ int nWidth,_In_ int nHeight)
BOOL WINAPI user32.DdeAbandonTransaction(_In_ DWORD idInst,_In_ HCONV hConv,_In_ DWORD idTransaction)
BOOL WINAPI user32.DdeDisconnect(_In_ HCONV hConv)
BOOL WINAPI user32.DdeDisconnectList(_In_ HCONVLIST hConvList)
BOOL WINAPI user32.DdeEnableCallback(_In_ DWORD idInst,_In_ HCONV hConv,_In_ UINT wCmd)
BOOL WINAPI user32.DdeFreeDataHandle(_In_ HDDEDATA hData)
BOOL WINAPI user32.DdeFreeStringHandle(_In_ DWORD idInst,_In_ HSZ hsz)
BOOL WINAPI user32.DdeImpersonateClient(_In_ HCONV hConv)
BOOL WINAPI user32.DdeKeepStringHandle(_In_ DWORD idInst,_In_ HSZ hsz)
BOOL WINAPI user32.DdePostAdvise(_In_ DWORD idInst,_In_ HSZ hszTopic,_In_ HSZ hszItem)
BOOL WINAPI user32.DdeSetUserHandle(_In_ HCONV hConv,_In_ DWORD id,_In_ DWORD_PTR hUser)
BOOL WINAPI user32.DdeUnaccessData(_In_ HDDEDATA hData)
BOOL WINAPI user32.DdeUninitialize(_In_ DWORD idInst)
BOOL WINAPI user32.DeleteMenu(_In_ HMENU hMenu,_In_ UINT uPosition,_In_ UINT uFlags)
BOOL WINAPI user32.DeregisterShellHookWindow(_In_ HWND hWnd)
BOOL WINAPI user32.DestroyAcceleratorTable(_In_ HACCEL hAccel)
BOOL WINAPI user32.DestroyCaret(void None None)
BOOL WINAPI user32.DestroyCursor(_In_ HCURSOR hCursor)
BOOL WINAPI user32.DestroyIcon(_In_ HICON hIcon)
BOOL WINAPI user32.DestroyMenu(_In_ HMENU hMenu)
BOOL WINAPI user32.DestroyWindow(_In_ HWND hWnd)
BOOL WINAPI user32.DragDetect(_In_ HWND hwnd,_In_ POINT pt)
BOOL WINAPI user32.DrawIconEx(_In_ HDC hdc,_In_ int xLeft,_In_ int yTop,_In_ HICON hIcon,_In_ int cxWidth,_In_ int cyWidth,_In_ UINT istepIfAniCur,_In_opt_ HBRUSH hbrFlickerFreeDraw,_In_ UINT diFlags)
BOOL WINAPI user32.DrawIcon(_In_ HDC hDC,_In_ int X,_In_ int Y,_In_ HICON hIcon)
BOOL WINAPI user32.DrawMenuBar(_In_ HWND hWnd)
BOOL WINAPI user32.EmptyClipboard(void None None)
BOOL WINAPI user32.EnableMenuItem(_In_ HMENU hMenu,_In_ UINT uIDEnableItem,_In_ UINT uEnable)
BOOL WINAPI user32.EnableNonClientDpiScaling(_In_ HWND hwnd)
BOOL WINAPI user32.EnableWindow(_In_ HWND hWnd,_In_ BOOL bEnable)
BOOL WINAPI user32.EndDeferWindowPos(_In_ HDWP hWinPosInfo)
BOOL WINAPI user32.EndDialog(_In_ HWND hDlg,_In_ INT_PTR nResult)
BOOL WINAPI user32.EndMenu(void None None)
BOOL WINAPI user32.EndTask(_In_ HWND hWnd,_In_ BOOL fShutDown,_In_ BOOL fForce)
BOOL WINAPI user32.EnumChildWindows(_In_opt_ HWND hWndParent,_In_ WNDENUMPROC lpEnumFunc,_In_ LPARAM lParam)
BOOL WINAPI user32.EnumDesktopsA(_In_opt_ HWINSTA hwinsta,_In_ DESKTOPENUMPROC lpEnumFunc,_In_ LPARAM lParam)
BOOL WINAPI user32.EnumDesktops(_In_opt_ HWINSTA hwinsta,_In_ DESKTOPENUMPROC lpEnumFunc,_In_ LPARAM lParam)
BOOL WINAPI user32.EnumDesktopsW(_In_opt_ HWINSTA hwinsta,_In_ DESKTOPENUMPROC lpEnumFunc,_In_ LPARAM lParam)
BOOL WINAPI user32.EnumDesktopWindows(_In_opt_ HDESK hDesktop,_In_ WNDENUMPROC lpfn,_In_ LPARAM lParam)
BOOL WINAPI user32.EnumThreadWindows(_In_ DWORD dwThreadId,_In_ WNDENUMPROC lpfn,_In_ LPARAM lParam)
BOOL WINAPI user32.EnumWindows(_In_ WNDENUMPROC lpEnumFunc,_In_ LPARAM lParam)
BOOL WINAPI user32.EnumWindowStationsA(_In_ WINSTAENUMPROC lpEnumFunc,_In_ LPARAM lParam)
BOOL WINAPI user32.EnumWindowStations(_In_ WINSTAENUMPROC lpEnumFunc,_In_ LPARAM lParam)
BOOL WINAPI user32.EnumWindowStationsW(_In_ WINSTAENUMPROC lpEnumFunc,_In_ LPARAM lParam)
BOOL WINAPI user32.ExitWindowsEx(_In_ UINT uFlags,_In_ DWORD dwReason)
BOOL WINAPI user32.FlashWindowEx(_In_ PFLASHWINFO pfwi)
BOOL WINAPI user32.FlashWindow(_In_ HWND hWnd,_In_ BOOL bInvert)
BOOL WINAPI user32.FreeDDElParam(_In_ UINT msg,_In_ LPARAM lParam)
BOOL WINAPI user32.GetAltTabInfoA(_In_opt_ HWND hwnd,_In_ int iItem,_Inout_ PALTTABINFO pati,_Out_opt_ LPTSTR pszItemText,_In_ UINT cchItemText)
BOOL WINAPI user32.GetAltTabInfo(_In_opt_ HWND hwnd,_In_ int iItem,_Inout_ PALTTABINFO pati,_Out_opt_ LPTSTR pszItemText,_In_ UINT cchItemText)
BOOL WINAPI user32.GetAltTabInfoW(_In_opt_ HWND hwnd,_In_ int iItem,_Inout_ PALTTABINFO pati,_Out_opt_ LPTSTR pszItemText,_In_ UINT cchItemText)
BOOL WINAPI user32.GetCaretPos(_Out_ LPPOINT lpPoint)
BOOL WINAPI user32.GetClassInfoA(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpClassName,_Out_ LPWNDCLASS lpWndClass)
BOOL WINAPI user32.GetClassInfoExA(_In_opt_ HINSTANCE hinst,_In_ LPCTSTR lpszClass,_Out_ LPWNDCLASSEX lpwcx)
BOOL WINAPI user32.GetClassInfoEx(_In_opt_ HINSTANCE hinst,_In_ LPCTSTR lpszClass,_Out_ LPWNDCLASSEX lpwcx)
BOOL WINAPI user32.GetClassInfoExW(_In_opt_ HINSTANCE hinst,_In_ LPCTSTR lpszClass,_Out_ LPWNDCLASSEX lpwcx)
BOOL WINAPI user32.GetClassInfo(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpClassName,_Out_ LPWNDCLASS lpWndClass)
BOOL WINAPI user32.GetClassInfoW(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpClassName,_Out_ LPWNDCLASS lpWndClass)
BOOL WINAPI user32.GetClientRect(_In_ HWND hWnd,_Out_ LPRECT lpRect)
BOOL WINAPI user32.GetCursorInfo(_Inout_ PCURSORINFO pci)
BOOL WINAPI user32.GetCursorPos(_Out_ LPPOINT lpPoint)
BOOL WINAPI user32.GetGestureConfig(_In_ HWND hwnd,_In_ DWORD dwReserved,_In_ DWORD dwFlags,_In_ PUINT pcIDs,_Inout_ PGESTURECONFIG pGestureConfig,_In_ UINT cbSize)
BOOL WINAPI user32.GetGUIThreadInfo(_In_ DWORD idThread,_Inout_ LPGUITHREADINFO lpgui)
BOOL WINAPI user32.GetIconInfoExA(_In_ HICON hIcon,_Inout_ PICONINFOEX piconinfoex)
BOOL WINAPI user32.GetIconInfoEx(_In_ HICON hIcon,_Inout_ PICONINFOEX piconinfoex)
BOOL WINAPI user32.GetIconInfoExW(_In_ HICON hIcon,_Inout_ PICONINFOEX piconinfoex)
BOOL WINAPI user32.GetIconInfo(_In_ HICON hIcon,_Out_ PICONINFO piconinfo)
BOOL WINAPI user32.GetInputState(void None None)
BOOL WINAPI user32.GetKeyboardLayoutNameA(_Out_ LPTSTR pwszKLID)
BOOL WINAPI user32.GetKeyboardLayoutName(_Out_ LPTSTR pwszKLID)
BOOL WINAPI user32.GetKeyboardLayoutNameW(_Out_ LPTSTR pwszKLID)
BOOL WINAPI user32.GetKeyboardState(_Out_ PBYTE lpKeyState)
BOOL WINAPI user32.GetLastInputInfo(_Out_ PLASTINPUTINFO plii)
BOOL WINAPI user32.GetLayeredWindowAttributes(_In_ HWND hwnd,_Out_opt_ COLORREF *pcrKey,_Out_opt_ BYTE *pbAlpha,_Out_opt_ DWORD *pdwFlags)
BOOL WINAPI user32.GetMenuBarInfo(_In_ HWND hwnd,_In_ LONG idObject,_In_ LONG idItem,_Inout_ PMENUBARINFO pmbi)
BOOL WINAPI user32.GetMenuInfo(_In_ HMENU hmenu,_Inout_ LPMENUINFO lpcmi)
BOOL WINAPI user32.GetMenuItemInfoA(_In_ HMENU hMenu,_In_ UINT uItem,_In_ BOOL fByPosition,_Inout_ LPMENUITEMINFO lpmii)
BOOL WINAPI user32.GetMenuItemInfo(_In_ HMENU hMenu,_In_ UINT uItem,_In_ BOOL fByPosition,_Inout_ LPMENUITEMINFO lpmii)
BOOL WINAPI user32.GetMenuItemInfoW(_In_ HMENU hMenu,_In_ UINT uItem,_In_ BOOL fByPosition,_Inout_ LPMENUITEMINFO lpmii)
BOOL WINAPI user32.GetMenuItemRect(_In_opt_ HWND hWnd,_In_ HMENU hMenu,_In_ UINT uItem,_Out_ LPRECT lprcItem)
BOOL WINAPI user32.GetMessageA(_Out_ LPMSG lpMsg,_In_opt_ HWND hWnd,_In_ UINT wMsgFilterMin,_In_ UINT wMsgFilterMax)
BOOL WINAPI user32.GetMessage(_Out_ LPMSG lpMsg,_In_opt_ HWND hWnd,_In_ UINT wMsgFilterMin,_In_ UINT wMsgFilterMax)
BOOL WINAPI user32.GetMessageW(_Out_ LPMSG lpMsg,_In_opt_ HWND hWnd,_In_ UINT wMsgFilterMin,_In_ UINT wMsgFilterMax)
BOOL WINAPI user32.GetPhysicalCursorPos(_Out_ LPPOINT lpPoint)
BOOL WINAPI user32.GetProcessDefaultLayout(_Out_ DWORD *pdwDefaultLayout)
BOOL WINAPI user32.GetTitleBarInfo(_In_ HWND hwnd,_Inout_ PTITLEBARINFO pti)
BOOL WINAPI user32.GetUserObjectInformationA(_In_ HANDLE hObj,_In_ int nIndex,_Out_opt_ PVOID pvInfo,_In_ DWORD nLength,_Out_opt_ LPDWORD lpnLengthNeeded)
BOOL WINAPI user32.GetUserObjectInformation(_In_ HANDLE hObj,_In_ int nIndex,_Out_opt_ PVOID pvInfo,_In_ DWORD nLength,_Out_opt_ LPDWORD lpnLengthNeeded)
BOOL WINAPI user32.GetUserObjectInformationW(_In_ HANDLE hObj,_In_ int nIndex,_Out_opt_ PVOID pvInfo,_In_ DWORD nLength,_Out_opt_ LPDWORD lpnLengthNeeded)
BOOL WINAPI user32.GetUserObjectSecurity(_In_ HANDLE hObj,_In_ PSECURITY_INFORMATION pSIRequested,_Inout_opt_ PSECURITY_DESCRIPTOR pSD,_In_ DWORD nLength,_Out_ LPDWORD lpnLengthNeeded)
BOOL WINAPI user32.GetWindowDisplayAffinity(_In_ HWND hWnd,_Out_ DWORD *dwAffinity)
BOOL WINAPI user32.GetWindowInfo(_In_ HWND hwnd,_Inout_ PWINDOWINFO pwi)
BOOL WINAPI user32.GetWindowPlacement(_In_ HWND hWnd,_Inout_ WINDOWPLACEMENT *lpwndpl)
BOOL WINAPI user32.GetWindowRect(_In_ HWND hWnd,_Out_ LPRECT lpRect)
BOOL WINAPI user32.HideCaret(_In_opt_ HWND hWnd)
BOOL WINAPI user32.HiliteMenuItem(_In_ HWND hwnd,_In_ HMENU hmenu,_In_ UINT uItemHilite,_In_ UINT uHilite)
BOOL WINAPI user32.ImpersonateDdeClientWindow(_In_ HWND hWndClient,_In_ HWND hWndServer)
BOOL WINAPI user32.InSendMessage(void None None)
BOOL WINAPI user32.InsertMenuA(_In_ HMENU hMenu,_In_ UINT uPosition,_In_ UINT uFlags,_In_ UINT_PTR uIDNewItem,_In_opt_ LPCTSTR lpNewItem)
BOOL WINAPI user32.InsertMenu(_In_ HMENU hMenu,_In_ UINT uPosition,_In_ UINT uFlags,_In_ UINT_PTR uIDNewItem,_In_opt_ LPCTSTR lpNewItem)
BOOL WINAPI user32.InsertMenuItemA(_In_ HMENU hMenu,_In_ UINT uItem,_In_ BOOL fByPosition,_In_ LPCMENUITEMINFO lpmii)
BOOL WINAPI user32.InsertMenuItem(_In_ HMENU hMenu,_In_ UINT uItem,_In_ BOOL fByPosition,_In_ LPCMENUITEMINFO lpmii)
BOOL WINAPI user32.InsertMenuItemW(_In_ HMENU hMenu,_In_ UINT uItem,_In_ BOOL fByPosition,_In_ LPCMENUITEMINFO lpmii)
BOOL WINAPI user32.InsertMenuW(_In_ HMENU hMenu,_In_ UINT uPosition,_In_ UINT uFlags,_In_ UINT_PTR uIDNewItem,_In_opt_ LPCTSTR lpNewItem)
BOOL WINAPI user32.IsCharAlphaA(_In_ TCHAR ch)
BOOL WINAPI user32.IsCharAlpha(_In_ TCHAR ch)
BOOL WINAPI user32.IsCharAlphaNumericA(_In_ TCHAR ch)
BOOL WINAPI user32.IsCharAlphaNumeric(_In_ TCHAR ch)
BOOL WINAPI user32.IsCharAlphaNumericW(_In_ TCHAR ch)
BOOL WINAPI user32.IsCharAlphaW(_In_ TCHAR ch)
BOOL WINAPI user32.IsCharLowerA(_In_ TCHAR ch)
BOOL WINAPI user32.IsCharLower(_In_ TCHAR ch)
BOOL WINAPI user32.IsCharUpperA(_In_ TCHAR ch)
BOOL WINAPI user32.IsCharUpper(_In_ TCHAR ch)
BOOL WINAPI user32.IsCharUpperW(_In_ TCHAR ch)
BOOL WINAPI user32.IsChild(_In_ HWND hWndParent,_In_ HWND hWnd)
BOOL WINAPI user32.IsClipboardFormatAvailable(_In_ UINT format)
BOOL WINAPI user32.IsDialogMessageA(_In_ HWND hDlg,_In_ LPMSG lpMsg)
BOOL WINAPI user32.IsDialogMessage(_In_ HWND hDlg,_In_ LPMSG lpMsg)
BOOL WINAPI user32.IsDialogMessageW(_In_ HWND hDlg,_In_ LPMSG lpMsg)
BOOL WINAPI user32.IsGUIThread(_In_ BOOL bConvert)
BOOL WINAPI user32.IsHungAppWindow(_In_ HWND hWnd)
BOOL WINAPI user32.IsIconic(_In_ HWND hWnd)
BOOL WINAPI user32.IsImmersiveProcess(_In_ HANDLE hProcess)
BOOL WINAPI user32.IsMenu(_In_ HMENU hMenu)
BOOL WINAPI user32.IsProcessDPIAware(void None None)
BOOL WINAPI user32.IsWindowEnabled(_In_ HWND hWnd)
BOOL WINAPI user32.IsWindow(_In_opt_ HWND hWnd)
BOOL WINAPI user32.IsWindowRedirectedForPrint(_In_ HWND hWnd)
BOOL WINAPI user32.IsWindowUnicode(_In_ HWND hWnd)
BOOL WINAPI user32.IsWindowVisible(_In_ HWND hWnd)
BOOL WINAPI user32.IsWow64Message(void None None)
BOOL WINAPI user32.IsZoomed(_In_ HWND hWnd)
BOOL WINAPI user32.LockSetForegroundWindow(_In_ UINT uLockCode)
BOOL WINAPI user32.LockWorkStation(void None None)
BOOL WINAPI user32.LogicalToPhysicalPoint(_In_ HWND hWnd,_Inout_ LPPOINT lpPoint)
BOOL WINAPI user32.MapDialogRect(_In_ HWND hDlg,_Inout_ LPRECT lpRect)
BOOL WINAPI user32.MessageBeep(_In_ UINT uType)
BOOL WINAPI user32.ModifyMenuA(_In_ HMENU hMnu,_In_ UINT uPosition,_In_ UINT uFlags,_In_ UINT_PTR uIDNewItem,_In_opt_ LPCTSTR lpNewItem)
BOOL WINAPI user32.ModifyMenu(_In_ HMENU hMnu,_In_ UINT uPosition,_In_ UINT uFlags,_In_ UINT_PTR uIDNewItem,_In_opt_ LPCTSTR lpNewItem)
BOOL WINAPI user32.ModifyMenuW(_In_ HMENU hMnu,_In_ UINT uPosition,_In_ UINT uFlags,_In_ UINT_PTR uIDNewItem,_In_opt_ LPCTSTR lpNewItem)
BOOL WINAPI user32.MoveWindow(_In_ HWND hWnd,_In_ int X,_In_ int Y,_In_ int nWidth,_In_ int nHeight,_In_ BOOL bRepaint)
BOOL WINAPI user32.OemToCharA(_In_ LPCSTR lpszSrc,_Out_ LPTSTR lpszDst)
BOOL WINAPI user32.OemToCharBuffA(_In_ LPCSTR lpszSrc,_Out_ LPTSTR lpszDst,_In_ DWORD cchDstLength)
BOOL WINAPI user32.OemToCharBuff(_In_ LPCSTR lpszSrc,_Out_ LPTSTR lpszDst,_In_ DWORD cchDstLength)
BOOL WINAPI user32.OemToCharBuffW(_In_ LPCSTR lpszSrc,_Out_ LPTSTR lpszDst,_In_ DWORD cchDstLength)
BOOL WINAPI user32.OemToChar(_In_ LPCSTR lpszSrc,_Out_ LPTSTR lpszDst)
BOOL WINAPI user32.OemToCharW(_In_ LPCSTR lpszSrc,_Out_ LPTSTR lpszDst)
BOOL WINAPI user32.OpenClipboard(_In_opt_ HWND hWndNewOwner)
BOOL WINAPI user32.OpenIcon(_In_ HWND hWnd)
BOOL WINAPI user32.PeekMessageA(_Out_ LPMSG lpMsg,_In_opt_ HWND hWnd,_In_ UINT wMsgFilterMin,_In_ UINT wMsgFilterMax,_In_ UINT wRemoveMsg)
BOOL WINAPI user32.PeekMessage(_Out_ LPMSG lpMsg,_In_opt_ HWND hWnd,_In_ UINT wMsgFilterMin,_In_ UINT wMsgFilterMax,_In_ UINT wRemoveMsg)
BOOL WINAPI user32.PeekMessageW(_Out_ LPMSG lpMsg,_In_opt_ HWND hWnd,_In_ UINT wMsgFilterMin,_In_ UINT wMsgFilterMax,_In_ UINT wRemoveMsg)
BOOL WINAPI user32.PhysicalToLogicalPoint(_In_ HWND hWnd,_Inout_ LPPOINT lpPoint)
BOOL WINAPI user32.PostMessageA(_In_opt_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
BOOL WINAPI user32.PostMessage(_In_opt_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
BOOL WINAPI user32.PostMessageW(_In_opt_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
BOOL WINAPI user32.PostThreadMessageA(_In_ DWORD idThread,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
BOOL WINAPI user32.PostThreadMessage(_In_ DWORD idThread,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
BOOL WINAPI user32.PostThreadMessageW(_In_ DWORD idThread,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
BOOL WINAPI user32.RegisterHotKey(_In_opt_ HWND hWnd,_In_ int id,_In_ UINT fsModifiers,_In_ UINT vk)
BOOL WINAPI user32.RegisterRawInputDevices(_In_ PCRAWINPUTDEVICE pRawInputDevices,_In_ UINT uiNumDevices,_In_ UINT cbSize)
BOOL WINAPI user32.RegisterShellHookWindow(_In_ HWND hWnd)
BOOL WINAPI user32.ReleaseCapture(void None None)
BOOL WINAPI user32.RemoveClipboardFormatListener(_In_ HWND hwnd)
BOOL WINAPI user32.RemoveMenu(_In_ HMENU hMenu,_In_ UINT uPosition,_In_ UINT uFlags)
BOOL WINAPI user32.ReplyMessage(_In_ LRESULT lResult)
BOOL WINAPI user32.SendMessageCallbackA(_In_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam,_In_ SENDASYNCPROC lpCallBack,_In_ ULONG_PTR dwData)
BOOL WINAPI user32.SendMessageCallback(_In_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam,_In_ SENDASYNCPROC lpCallBack,_In_ ULONG_PTR dwData)
BOOL WINAPI user32.SendMessageCallbackW(_In_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam,_In_ SENDASYNCPROC lpCallBack,_In_ ULONG_PTR dwData)
BOOL WINAPI user32.SendNotifyMessageA(_In_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
BOOL WINAPI user32.SendNotifyMessage(_In_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
BOOL WINAPI user32.SendNotifyMessageW(_In_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
BOOL WINAPI user32.SetCaretBlinkTime(_In_ UINT uMSeconds)
BOOL WINAPI user32.SetDialogDpiChangeBehavior(HWND hDlg None,DIALOG_DPI_CHANGE_BEHAVIORS mask None,DIALOG_DPI_CHANGE_BEHAVIORS values None)
BOOL WINAPI user32.SetDialogResizeBehavior(HWND hwnd None,DIALOG_CONTROL_DPI_CHANGE_BEHAVIORS mask None,DIALOG_CONTROL_DPI_CHANGE_BEHAVIORS values None)
BOOL WINAPI user32.SetDlgItemInt(_In_ HWND hDlg,_In_ int nIDDlgItem,_In_ UINT uValue,_In_ BOOL bSigned)
BOOL WINAPI user32.SetDlgItemTextA(_In_ HWND hDlg,_In_ int nIDDlgItem,_In_ LPCTSTR lpString)
BOOL WINAPI user32.SetDlgItemText(_In_ HWND hDlg,_In_ int nIDDlgItem,_In_ LPCTSTR lpString)
BOOL WINAPI user32.SetDlgItemTextW(_In_ HWND hDlg,_In_ int nIDDlgItem,_In_ LPCTSTR lpString)
BOOL WINAPI user32.SetDoubleClickTime(_In_ UINT uInterval)
BOOL WINAPI user32.SetForegroundWindow(_In_ HWND hWnd)
BOOL WINAPI user32.SetKeyboardState(_In_ LPBYTE lpKeyState)
BOOL WINAPI user32.SetLayeredWindowAttributes(_In_ HWND hwnd,_In_ COLORREF crKey,_In_ BYTE bAlpha,_In_ DWORD dwFlags)
BOOL WINAPI user32.SetMenuDefaultItem(_In_ HMENU hMenu,_In_ UINT uItem,_In_ UINT fByPos)
BOOL WINAPI user32.SetMenuInfo(_In_ HMENU hmenu,_In_ LPCMENUINFO lpcmi)
BOOL WINAPI user32.SetMenu(_In_ HWND hWnd,_In_opt_ HMENU hMenu)
BOOL WINAPI user32.SetMenuItemBitmaps(_In_ HMENU hMenu,_In_ UINT uPosition,_In_ UINT uFlags,_In_opt_ HBITMAP hBitmapUnchecked,_In_opt_ HBITMAP hBitmapChecked)
BOOL WINAPI user32.SetMenuItemInfoA(_In_ HMENU hMenu,_In_ UINT uItem,_In_ BOOL fByPosition,_In_ LPMENUITEMINFO lpmii)
BOOL WINAPI user32.SetMenuItemInfo(_In_ HMENU hMenu,_In_ UINT uItem,_In_ BOOL fByPosition,_In_ LPMENUITEMINFO lpmii)
BOOL WINAPI user32.SetMenuItemInfoW(_In_ HMENU hMenu,_In_ UINT uItem,_In_ BOOL fByPosition,_In_ LPMENUITEMINFO lpmii)
BOOL WINAPI user32.SetProcessDefaultLayout(_In_ DWORD dwDefaultLayout)
BOOL WINAPI user32.SetProcessDPIAware(void None None)
BOOL WINAPI user32.SetProcessRestrictionExemption(BOOL fEnableExemption None)
BOOL WINAPI user32.SetProcessWindowStation(_In_ HWINSTA hWinSta)
BOOL WINAPI user32.SetPropA(_In_ HWND hWnd,_In_ LPCTSTR lpString,_In_opt_ HANDLE hData)
BOOL WINAPI user32.SetProp(_In_ HWND hWnd,_In_ LPCTSTR lpString,_In_opt_ HANDLE hData)
BOOL WINAPI user32.SetPropW(_In_ HWND hWnd,_In_ LPCTSTR lpString,_In_opt_ HANDLE hData)
BOOL WINAPI user32.SetSystemCursor(_In_ HCURSOR hcur,_In_ DWORD id)
BOOL WINAPI user32.SetThreadDesktop(_In_ HDESK hDesktop)
BOOL WINAPI user32.SetUserObjectInformationA(_In_ HANDLE hObj,_In_ int nIndex,_In_ PVOID pvInfo,_In_ DWORD nLength)
BOOL WINAPI user32.SetUserObjectInformation(_In_ HANDLE hObj,_In_ int nIndex,_In_ PVOID pvInfo,_In_ DWORD nLength)
BOOL WINAPI user32.SetUserObjectInformationW(_In_ HANDLE hObj,_In_ int nIndex,_In_ PVOID pvInfo,_In_ DWORD nLength)
BOOL WINAPI user32.SetUserObjectSecurity(_In_ HANDLE hObj,_In_ PSECURITY_INFORMATION pSIRequested,_In_ PSECURITY_DESCRIPTOR pSID)
BOOL WINAPI user32.SetWindowDisplayAffinity(_In_ HWND hWnd,_In_ DWORD dwAffinity)
BOOL WINAPI user32.SetWindowPos(_In_ HWND hWnd,_In_opt_ HWND hWndInsertAfter,_In_ int X,_In_ int Y,_In_ int cx,_In_ int cy,_In_ UINT uFlags)
BOOL WINAPI user32.SetWindowTextA(_In_ HWND hWnd,_In_opt_ LPCTSTR lpString)
BOOL WINAPI user32.SetWindowText(_In_ HWND hWnd,_In_opt_ LPCTSTR lpString)
BOOL WINAPI user32.SetWindowTextW(_In_ HWND hWnd,_In_opt_ LPCTSTR lpString)
BOOL WINAPI user32.ShowCaret(_In_opt_ HWND hWnd)
BOOL WINAPI user32.ShowOwnedPopups(_In_ HWND hWnd,_In_ BOOL fShow)
BOOL WINAPI user32.ShowWindowAsync(_In_ HWND hWnd,_In_ int nCmdShow)
BOOL WINAPI user32.ShowWindow(_In_ HWND hWnd,_In_ int nCmdShow)
BOOL WINAPI user32.ShutdownBlockReasonCreate(_In_ HWND hWnd,_In_ LPCWSTR pwszReason)
BOOL WINAPI user32.ShutdownBlockReasonDestroy(_In_ HWND hWnd)
BOOL WINAPI user32.ShutdownBlockReasonQuery(_In_ HWND hWnd,_Out_opt_ LPWSTR pwszBuff,_Inout_ DWORD *pcchBuff)
BOOL WINAPI user32.SoundSentry(void None None)
BOOL WINAPI user32.SwapMouseButton(_In_ BOOL fSwap)
BOOL WINAPI user32.SwitchDesktop(_In_ HDESK hDesktop)
BOOL WINAPI user32.SystemParametersInfoA(_In_ UINT uiAction,_In_ UINT uiParam,_Inout_ PVOID pvParam,_In_ UINT fWinIni)
BOOL WINAPI user32.SystemParametersInfoForDpi(_In_ UINT uiAction,_In_ UINT uiParam,_Inout_ PVOID pvParam,_In_ UINT fWinIni,_In_ UINT dpi)
BOOL WINAPI user32.SystemParametersInfo(_In_ UINT uiAction,_In_ UINT uiParam,_Inout_ PVOID pvParam,_In_ UINT fWinIni)
BOOL WINAPI user32.SystemParametersInfoW(_In_ UINT uiAction,_In_ UINT uiParam,_Inout_ PVOID pvParam,_In_ UINT fWinIni)
BOOL WINAPI user32.TrackMouseEvent(_Inout_ LPTRACKMOUSEEVENT lpEventTrack)
BOOL WINAPI user32.TrackPopupMenuEx(_In_ HMENU hmenu,_In_ UINT fuFlags,_In_ int x,_In_ int y,_In_ HWND hwnd,_In_opt_ LPTPMPARAMS lptpm)
BOOL WINAPI user32.TranslateMDISysAccel(_In_ HWND hWndClient,_In_ LPMSG lpMsg)
BOOL WINAPI user32.UnhookWindowsHookEx(_In_ HHOOK hhk)
BOOL WINAPI user32.UnloadKeyboardLayout(_In_ HKL hkl)
BOOL WINAPI user32.UnpackDDElParam(_In_ UINT msg,_In_ LPARAM lParam,_Out_ PUINT_PTR puiLo,_Out_ PUINT_PTR puiHi)
BOOL WINAPI user32.UnregisterClassA(_In_ LPCTSTR lpClassName,_In_opt_ HINSTANCE hInstance)
BOOL WINAPI user32.UnregisterClass(_In_ LPCTSTR lpClassName,_In_opt_ HINSTANCE hInstance)
BOOL WINAPI user32.UnregisterClassW(_In_ LPCTSTR lpClassName,_In_opt_ HINSTANCE hInstance)
BOOL WINAPI user32.UnregisterDeviceNotification(_In_ HDEVNOTIFY Handle)
BOOL WINAPI user32.UnregisterHotKey(_In_opt_ HWND hWnd,_In_ int id)
BOOL WINAPI user32.UnregisterPowerSettingNotification(_In_ HPOWERNOTIFY Handle)
BOOL WINAPI user32.UpdateLayeredWindow(_In_ HWND hwnd,_In_opt_ HDC hdcDst,_In_opt_ POINT *pptDst,_In_opt_ SIZE *psize,_In_opt_ HDC hdcSrc,_In_opt_ POINT *pptSrc,_In_ COLORREF crKey,_In_opt_ BLENDFUNCTION *pblend,_In_ DWORD dwFlags)
BOOL WINAPI user32.UserHandleGrantAccess(_In_ HANDLE hUserHandle,_In_ HANDLE hJob,_In_ BOOL bGrant)
BOOL WINAPI user32.WaitMessage(void None None)
BOOL WINAPI userenv.CreateEnvironmentBlock(_Out_ LPVOID *lpEnvironment,_In_opt_ HANDLE hToken,_In_ BOOL bInherit)
BOOL WINAPI userenv.CreateUserProfileExA(_In_ PSID pSid,_In_ LPCTSTR lpUserName,_In_opt_ LPCTSTR lpUserHive,_Out_opt_ LPTSTR lpProfileDir,_In_ DWORD dwDirSize,_In_ BOOL bWin9xUpg)
BOOL WINAPI userenv.CreateUserProfileEx(_In_ PSID pSid,_In_ LPCTSTR lpUserName,_In_opt_ LPCTSTR lpUserHive,_Out_opt_ LPTSTR lpProfileDir,_In_ DWORD dwDirSize,_In_ BOOL bWin9xUpg)
BOOL WINAPI userenv.CreateUserProfileExW(_In_ PSID pSid,_In_ LPCTSTR lpUserName,_In_opt_ LPCTSTR lpUserHive,_Out_opt_ LPTSTR lpProfileDir,_In_ DWORD dwDirSize,_In_ BOOL bWin9xUpg)
BOOL WINAPI userenv.DeleteProfileA(_In_ LPCTSTR lpSidString,_In_opt_ LPCTSTR lpProfilePath,_In_opt_ LPCTSTR lpComputerName)
BOOL WINAPI userenv.DeleteProfile(_In_ LPCTSTR lpSidString,_In_opt_ LPCTSTR lpProfilePath,_In_opt_ LPCTSTR lpComputerName)
BOOL WINAPI userenv.DeleteProfileW(_In_ LPCTSTR lpSidString,_In_opt_ LPCTSTR lpProfilePath,_In_opt_ LPCTSTR lpComputerName)
BOOL WINAPI userenv.DestroyEnvironmentBlock(_In_ LPVOID lpEnvironment)
BOOL WINAPI userenv.ExpandEnvironmentStringsForUserA(_In_opt_ HANDLE hToken,_In_ LPCTSTR lpSrc,_Out_ LPTSTR lpDest,_In_ DWORD dwSize)
BOOL WINAPI userenv.ExpandEnvironmentStringsForUser(_In_opt_ HANDLE hToken,_In_ LPCTSTR lpSrc,_Out_ LPTSTR lpDest,_In_ DWORD dwSize)
BOOL WINAPI userenv.ExpandEnvironmentStringsForUserW(_In_opt_ HANDLE hToken,_In_ LPCTSTR lpSrc,_Out_ LPTSTR lpDest,_In_ DWORD dwSize)
BOOL WINAPI userenv.GetAllUsersProfileDirectoryA(_Out_opt_ LPTSTR lpProfileDir,_Inout_ LPDWORD lpcchSize)
BOOL WINAPI userenv.GetAllUsersProfileDirectory(_Out_opt_ LPTSTR lpProfileDir,_Inout_ LPDWORD lpcchSize)
BOOL WINAPI userenv.GetAllUsersProfileDirectoryW(_Out_opt_ LPTSTR lpProfileDir,_Inout_ LPDWORD lpcchSize)
BOOL WINAPI userenv.GetDefaultUserProfileDirectoryA(_Out_opt_ LPTSTR lpProfileDir,_Inout_ LPDWORD lpcchSize)
BOOL WINAPI userenv.GetDefaultUserProfileDirectory(_Out_opt_ LPTSTR lpProfileDir,_Inout_ LPDWORD lpcchSize)
BOOL WINAPI userenv.GetDefaultUserProfileDirectoryW(_Out_opt_ LPTSTR lpProfileDir,_Inout_ LPDWORD lpcchSize)
BOOL WINAPI userenv.GetProfilesDirectoryA(_Out_ LPTSTR lpProfilesDir,_Inout_ LPDWORD lpcchSize)
BOOL WINAPI userenv.GetProfilesDirectory(_Out_ LPTSTR lpProfilesDir,_Inout_ LPDWORD lpcchSize)
BOOL WINAPI userenv.GetProfilesDirectoryW(_Out_ LPTSTR lpProfilesDir,_Inout_ LPDWORD lpcchSize)
BOOL WINAPI userenv.GetProfileType(_Out_ DWORD *pdwFlags)
BOOL WINAPI userenv.GetUserProfileDirectoryA(_In_ HANDLE hToken,_Out_opt_ LPTSTR lpProfileDir,_Inout_ LPDWORD lpcchSize)
BOOL WINAPI userenv.GetUserProfileDirectory(_In_ HANDLE hToken,_Out_opt_ LPTSTR lpProfileDir,_Inout_ LPDWORD lpcchSize)
BOOL WINAPI userenv.GetUserProfileDirectoryW(_In_ HANDLE hToken,_Out_opt_ LPTSTR lpProfileDir,_Inout_ LPDWORD lpcchSize)
BOOL WINAPI userenv.LoadUserProfileA(_In_ HANDLE hToken,_Inout_ LPPROFILEINFO lpProfileInfo)
BOOL WINAPI userenv.LoadUserProfile(_In_ HANDLE hToken,_Inout_ LPPROFILEINFO lpProfileInfo)
BOOL WINAPI userenv.LoadUserProfileW(_In_ HANDLE hToken,_Inout_ LPPROFILEINFO lpProfileInfo)
BOOL WINAPI userenv.UnloadUserProfile(_In_ HANDLE hToken,_In_ HANDLE hProfile)
BOOL WINAPI vertdll.CallEnclave(_In_ LPENCLAVE_ROUTINE lpRoutine,_In_ LPVOID lpParameter,_In_ BOOL fWaitForThread,_Out_ LPVOID *lpReturnValue)
BOOL WINAPI vertdll.DeleteEnclave(_In_ LPVOID lpAddress)
BOOL WINAPI vertdll.LoadEnclaveImage(_In_ LPVOID lpEnclaveAddress,_In_ LPCSTR lpImageName)
BOOL WINAPI vertdll.LoadEnclaveImageW(_In_ LPVOID lpEnclaveAddress,_In_ LPCSTR lpImageName)
BOOL WINAPI vertdll.LoadEnclaveIUmageA(_In_ LPVOID lpEnclaveAddress,_In_ LPCSTR lpImageName)
BOOL WINAPI vertdll.TerminateEnclave(_In_ LPVOID lpAddress,_In_ BOOL fWait)
BOOL WINAPI wecapi.EcClose(_In_ EC_HANDLE Object)
BOOL WINAPI wecapi.EcDeleteSubscription(_In_ LPCWSTR SubscriptionName,_In_ DWORD Flags)
BOOL WINAPI wecapi.EcGetObjectArrayProperty(_In_ EC_OBJECT_ARRAY_PROPERTY_HANDLE ObjectArray,_In_ EC_SUBSCRIPTION_PROPERTY_ID PropertyId,_In_ DWORD ArrayIndex,_In_ DWORD Flags,_In_ DWORD PropertyValueBufferSize,_In_ PEC_VARIANT PropertyValueBuffer,_Out_ PDWORD PropertyValueBufferUsed)
BOOL WINAPI wecapi.EcGetObjectArraySize(_In_ EC_OBJECT_ARRAY_PROPERTY_HANDLE ObjectArray,_Out_ PDWORD ObjectArraySize)
BOOL WINAPI wecapi.EcGetSubscriptionProperty(_In_ EC_HANDLE Subscription,_In_ EC_SUBSCRIPTION_PROPERTY_ID PropertyId,_In_ DWORD Flags,_In_ DWORD PropertyValueBufferSize,_In_ PEC_VARIANT PropertyValueBuffer,_Out_ PDWORD PropertyValueBufferUsed)
BOOL WINAPI wecapi.EcGetSubscriptionRunTimeStatus(_In_ LPCWSTR SubscriptionName,_In_ EC_SUBSCRIPTION_RUNTIME_STATUS_INFO_ID StatusInfoId,_In_ LPCWSTR EventSourceName,_In_ DWORD Flags,_In_ DWORD StatusValueBufferSize,_In_ PEC_VARIANT StatusValueBuffer,_Out_ PDWORD StatusValueBufferUsed)
BOOL WINAPI wecapi.EcInsertObjectArrayElement(_In_ EC_OBJECT_ARRAY_PROPERTY_HANDLE ObjectArray,_In_ DWORD ArrayIndex)
BOOL WINAPI wecapi.EcRemoveObjectArrayElement(_In_ EC_OBJECT_ARRAY_PROPERTY_HANDLE ObjectArray,_In_ DWORD ArrayIndex)
BOOL WINAPI wecapi.EcSaveSubscription(_In_ EC_HANDLE Subscription,_In_ DWORD Flags)
BOOL WINAPI wecapi.EcSetObjectArrayProperty(_In_ EC_OBJECT_ARRAY_PROPERTY_HANDLE ObjectArray,_In_ EC_SUBSCRIPTION_PROPERTY_ID PropertyId,_In_ DWORD ArrayIndex,_In_ DWORD Flags,_In_ PEC_VARIANT PropertyValue)
BOOL WINAPI wecapi.EcSetSubscriptionProperty(_In_ EC_HANDLE Subscription,_In_ EC_SUBSCRIPTION_PROPERTY_ID PropertyId,_In_ DWORD Flags,_In_ PEC_VARIANT PropertyValue)
BOOL WINAPI wevtapi.EvtArchiveExportedLog(_In_ EVT_HANDLE Session,_In_ LPCWSTR LogFilePath,_In_ LCID Locale,_In_ DWORD Flags)
BOOL WINAPI wevtapi.EvtCancel(EVT_HANDLE Object None)
BOOL WINAPI wevtapi.EvtClearLog(_In_opt_ EVT_HANDLE Session,_In_ LPCWSTR ChannelPath,_In_opt_ LPCWSTR TargetFilePath,_In_ DWORD Flags)
BOOL WINAPI wevtapi.EvtClose(_In_ EVT_HANDLE Object)
BOOL WINAPI wevtapi.EvtExportLog(_In_opt_ EVT_HANDLE Session,_In_ LPCWSTR Path,_In_ LPCWSTR Query,_In_ LPCWSTR TargetFilePath,_In_ DWORD Flags)
BOOL WINAPI wevtapi.EvtFormatMessage(_In_ EVT_HANDLE PublisherMetadata,_In_ EVT_HANDLE Event,_In_ DWORD MessageId,_In_ DWORD ValueCount,_In_ PEVT_VARIANT Values,_In_ DWORD Flags,_In_ DWORD BufferSize,_In_ LPWSTR Buffer,_Out_ PDWORD BufferUsed)
BOOL WINAPI wevtapi.EvtGetChannelConfigProperty(_In_ EVT_HANDLE ChannelConfig,_In_ EVT_CHANNEL_CONFIG_PROPERTY_ID PropertyId,_In_ DWORD Flags,_In_ DWORD PropertyValueBufferSize,_In_ PEVT_VARIANT PropertyValueBuffer,_Out_ PDWORD PropertyValueBufferUsed)
BOOL WINAPI wevtapi.EvtGetEventInfo(_In_ EVT_HANDLE Event,_In_ EVT_EVENT_PROPERTY_ID PropertyId,_In_ DWORD PropertyValueBufferSize,_In_ PEVT_VARIANT PropertyValueBuffer,_Out_ PDWORD PropertyValueBufferUsed)
BOOL WINAPI wevtapi.EvtGetEventMetadataProperty(_In_ EVT_HANDLE EventMetadata,_In_ EVT_EVENT_METADATA_PROPERTY_ID PropertyId,_In_ DWORD Flags,_In_ DWORD EventMetadataPropertyBufferSize,_In_ PEVT_VARIANT EventMetadataPropertyBuffer,_Out_ PDWORD EventMetadataPropertyBufferUsed)
BOOL WINAPI wevtapi.EvtGetLogInfo(_In_ EVT_HANDLE Log,_In_ EVT_LOG_PROPERTY_ID PropertyId,_In_ DWORD PropertyValueBufferSize,_In_ PEVT_VARIANT PropertyValueBuffer,_Out_ PDWORD PropertyValueBufferUsed)
BOOL WINAPI wevtapi.EvtGetObjectArrayProperty(_In_ EVT_OBJECT_ARRAY_PROPERTY_HANDLE ObjectArray,_In_ DWORD PropertyId,_In_ DWORD ArrayIndex,_In_ DWORD Flags,_In_ DWORD PropertyValueBufferSize,_In_ PEVT_VARIANT PropertyValueBuffer,_Out_ PDWORD PropertyValueBufferUsed)
BOOL WINAPI wevtapi.EvtGetObjectArraySize(_In_ EVT_OBJECT_ARRAY_PROPERTY_HANDLE ObjectArray,_Out_ PDWORD ObjectArraySize)
BOOL WINAPI wevtapi.EvtGetPublisherMetadataProperty(_In_ EVT_HANDLE PublisherMetadata,_In_ EVT_PUBLISHER_METADATA_PROPERTY_ID PropertyId,_In_ DWORD Flags,_In_ DWORD PublisherMetadataPropertyBufferSize,_In_ PEVT_VARIANT PublisherMetadataPropertyBuffer,_Out_ PDWORD PublisherMetadataPropertyBufferUsed)
BOOL WINAPI wevtapi.EvtGetQueryInfo(_In_ EVT_HANDLE QueryOrSubscription,_In_ EVT_QUERY_PROPERTY_ID PropertyId,_In_ DWORD PropertyValueBufferSize,_In_ PEVT_VARIANT PropertyValueBuffer,_Out_ PDWORD PropertyValueBufferUsed)
BOOL WINAPI wevtapi.EvtNextChannelPath(_In_ EVT_HANDLE ChannelEnum,_In_ DWORD ChannelPathBufferSize,_In_ LPWSTR ChannelPathBuffer,_Out_ PDWORD ChannelPathBufferUsed)
BOOL WINAPI wevtapi.EvtNext(_In_ EVT_HANDLE ResultSet,_In_ DWORD EventArraySize,_In_ EVT_HANDLE* EventArray,_In_ DWORD Timeout,_In_ DWORD Flags,_Out_ PDWORD Returned)
BOOL WINAPI wevtapi.EvtNextPublisherId(_In_ EVT_HANDLE PublisherEnum,_In_ DWORD PublisherIdBufferSize,_In_ LPWSTR PublisherIdBuffer,_Out_ PDWORD PublisherIdBufferUsed)
BOOL WINAPI wevtapi.EvtRender(_In_ EVT_HANDLE Context,_In_ EVT_HANDLE Fragment,_In_ DWORD Flags,_In_ DWORD BufferSize,_In_ PVOID Buffer,_Out_ PDWORD BufferUsed,_Out_ PDWORD PropertyCount)
BOOL WINAPI wevtapi.EvtSaveChannelConfig(_In_ EVT_HANDLE ChannelConfig,_In_ DWORD Flags)
BOOL WINAPI wevtapi.EvtSeek(_In_ EVT_HANDLE ResultSet,_In_ LONGLONG Position,_In_ EVT_HANDLE Bookmark,_In_ DWORD Timeout,_In_ DWORD Flags)
BOOL WINAPI wevtapi.EvtSetChannelConfigProperty(_In_ EVT_HANDLE ChannelConfig,_In_ EVT_CHANNEL_CONFIG_PROPERTY_ID PropertyId,_In_ DWORD Flags,_In_ PEVT_VARIANT PropertyValue)
BOOL WINAPI wevtapi.EvtUpdateBookmark(_In_ EVT_HANDLE Bookmark,_In_ EVT_HANDLE Event)
BOOL WINAPI winhttp.WinHttpAddRequestHeaders(_In_ HINTERNET hRequest,_In_ LPCWSTR pwszHeaders,_In_ DWORD dwHeadersLength,_In_ DWORD dwModifiers)
BOOL WINAPI winhttp.WinHttpCloseHandle(_In_ HINTERNET hInternet)
BOOL WINAPI winhttp.WinHttpCrackUrl(_In_ LPCWSTR pwszUrl,_In_ DWORD dwUrlLength,_In_ DWORD dwFlags,_Inout_ LPURL_COMPONENTS lpUrlComponents)
BOOL WINAPI winhttp.WinHttpCreateUrl(_In_ LPURL_COMPONENTS lpUrlComponents,_In_ DWORD dwFlags,_Out_ LPWSTR pwszUrl,_Inout_ LPDWORD lpdwUrlLength)
BOOL WINAPI winhttp.WinHttpDetectAutoProxyConfigUrl(_In_ DWORD dwAutoDetectFlags,_Out_ LPWSTR *ppwszAutoConfigUrl)
BOOL WINAPI winhttp.WinHttpGetDefaultProxyConfiguration(_Inout_ WINHTTP_PROXY_INFO *pProxyInfo)
BOOL WINAPI winhttp.WinHttpGetIEProxyConfigForCurrentUser(_Inout_ WINHTTP_CURRENT_USER_IE_PROXY_CONFIG *pProxyConfig)
BOOL WINAPI winhttp.WinHttpGetProxyForUrl(_In_ HINTERNET hSession,_In_ LPCWSTR lpcwszUrl,_In_ WINHTTP_AUTOPROXY_OPTIONS *pAutoProxyOptions,_Out_ WINHTTP_PROXY_INFO *pProxyInfo)
BOOL WINAPI winhttp.WinHttpQueryAuthSchemes(_In_ HINTERNET hRequest,_Out_ LPDWORD lpdwSupportedSchemes,_Out_ LPDWORD lpdwFirstScheme,_Out_ LPDWORD pdwAuthTarget)
BOOL WINAPI winhttp.WinHttpQueryDataAvailable(_In_ HINTERNET hRequest,_Out_ LPDWORD lpdwNumberOfBytesAvailable)
BOOL WINAPI winhttp.WinHttpQueryHeaders(_In_ HINTERNET hRequest,_In_ DWORD dwInfoLevel,_In_opt_ LPCWSTR pwszName,_Out_ LPVOID lpBuffer,_Inout_ LPDWORD lpdwBufferLength,_Inout_ LPDWORD lpdwIndex)
BOOL WINAPI winhttp.WinHttpQueryOption(_In_ HINTERNET hInternet,_In_ DWORD dwOption,_Out_ LPVOID lpBuffer,_Inout_ LPDWORD lpdwBufferLength)
BOOL WINAPI winhttp.WinHttpReadData(_In_ HINTERNET hRequest,_Out_ LPVOID lpBuffer,_In_ DWORD dwNumberOfBytesToRead,_Out_ LPDWORD lpdwNumberOfBytesRead)
BOOL WINAPI winhttp.WinHttpReceiveResponse(_In_ HINTERNET hRequest,_Reserved_ LPVOID lpReserved)
BOOL WINAPI winhttp.WinHttpSendRequest(_In_ HINTERNET hRequest,_In_opt_ LPCWSTR pwszHeaders,_In_ DWORD dwHeadersLength,_In_opt_ LPVOID lpOptional,_In_ DWORD dwOptionalLength,_In_ DWORD dwTotalLength,_In_ DWORD_PTR dwContext)
BOOL WINAPI winhttp.WinHttpSetCredentials(_In_ HINTERNET hRequest,_In_ DWORD AuthTargets,_In_ DWORD AuthScheme,_In_ LPCWSTR pwszUserName,_In_ LPCWSTR pwszPassword,_Reserved_ LPVOID pAuthParams)
BOOL WINAPI winhttp.WinHttpSetDefaultProxyConfiguration(_In_ WINHTTP_PROXY_INFO *pProxyInfo)
BOOL WINAPI winhttp.WinHttpSetOption(_In_ HINTERNET hInternet,_In_ DWORD dwOption,_In_ LPVOID lpBuffer,_In_ DWORD dwBufferLength)
BOOL WINAPI winhttp.WinHttpSetTimeouts(_In_ HINTERNET hInternet,_In_ int dwResolveTimeout,_In_ int dwConnectTimeout,_In_ int dwSendTimeout,_In_ int dwReceiveTimeout)
BOOL WINAPI winhttp.WinHttpTimeToSystemTime(_In_ LPCWSTR pwszTime,_Out_ SYSTEMTIME *pst)
BOOL WINAPI winhttp.WinHttpWriteData(_In_ HINTERNET hRequest,_In_ LPCVOID lpBuffer,_In_ DWORD dwNumberOfBytesToWrite,_Out_ LPDWORD lpdwNumberOfBytesWritten)
Bool WINAPI wininet.GetUrlCacheConfigInfoA(_Inout_ LPINTERNET_CACHE_CONFIG_INFO lpCacheConfigInfo,_Reserved_ LPDWORD lpcbCacheConfigInfo,_In_ DWORD dwFieldControl)
Bool WINAPI wininet.GetUrlCacheConfigInfo(_Inout_ LPINTERNET_CACHE_CONFIG_INFO lpCacheConfigInfo,_Reserved_ LPDWORD lpcbCacheConfigInfo,_In_ DWORD dwFieldControl)
Bool WINAPI wininet.GetUrlCacheConfigInfoW(_Inout_ LPINTERNET_CACHE_CONFIG_INFO lpCacheConfigInfo,_Reserved_ LPDWORD lpcbCacheConfigInfo,_In_ DWORD dwFieldControl)
BOOL WINAPI wininet.InternetClearAllPerSiteCookieDecisions(void None None)
BOOL WINAPI wininet.InternetSetPerSiteCookieDecisionA(_In_ LPCTSTR pchHostName,_In_ DWORD dwDecision)
BOOL WINAPI wininet.InternetSetPerSiteCookieDecision(_In_ LPCTSTR pchHostName,_In_ DWORD dwDecision)
BOOL WINAPI wininet.InternetSetPerSiteCookieDecisionW(_In_ LPCTSTR pchHostName,_In_ DWORD dwDecision)
BOOL WINAPI wintrust.CryptCATAdminResolveCatalogPath(_In_ HCATADMIN hCatAdmin,_In_ WCHAR *pwszCatalogFile,_Inout_ CATALOG_INFO *psCatInfo,_In_ DWORD dwFlags)
BOOL WINAPI wintrust.CryptCATCDFClose(_In_ CRYPTCATCDF *pCDF)
BOOL WINAPI wintrust.CryptCATPersistStore(_In_ HANDLE hCatalog)
BOOL WINAPI wintrust.IsCatalogFile(_In_opt_ HANDLE hFile,_In_opt_ WCHAR *pwszFileName)
BOOL WINAPI wintrust.OpenPersonalTrustDBDialogEx(_In_opt_ HWND hwndParent,_In_ DWORD dwFlags,_Inout_opt_ PVOID *pvReserved)
BOOL WINAPI wintrust.OpenPersonalTrustDBDialog(_In_opt_ HWND hwndParent)
BOOL WINAPI wintrust.WintrustSetRegPolicyFlags(_In_ DWORD dwPolicyFlags)
BOOL WINAPI wintrust.WTHelperCertIsSelfSigned(_In_ DWORD dwEncoding,_In_ CERT_INFO *pCert)
BOOL WINAPI wofutil.WofShouldCompressBinaries(_In_ LPCWSTR Volume,_Out_ PULONG Algorithm)
BOOL WINAPI wtsapi32.WTSConnectSessionA(_In_ ULONG LogonId,_In_ ULONG TargetLogonId,_In_ PTSTR pPassword,_In_ BOOL bWait)
BOOL WINAPI wtsapi32.WTSConnectSession(_In_ ULONG LogonId,_In_ ULONG TargetLogonId,_In_ PTSTR pPassword,_In_ BOOL bWait)
BOOL WINAPI wtsapi32.WTSConnectSessionW(_In_ ULONG LogonId,_In_ ULONG TargetLogonId,_In_ PTSTR pPassword,_In_ BOOL bWait)
BOOL WINAPI wtsapi32.WTSCreateListenerA(_In_ HANDLE hServer,_In_ PVOID pReserved,_In_ DWORD Reserved,_In_ LPTSTR pListenerName,_In_ PWTSLISTENERCONFIG pBuffer,_In_ DWORD flag)
BOOL WINAPI wtsapi32.WTSCreateListener(_In_ HANDLE hServer,_In_ PVOID pReserved,_In_ DWORD Reserved,_In_ LPTSTR pListenerName,_In_ PWTSLISTENERCONFIG pBuffer,_In_ DWORD flag)
BOOL WINAPI wtsapi32.WTSCreateListenerW(_In_ HANDLE hServer,_In_ PVOID pReserved,_In_ DWORD Reserved,_In_ LPTSTR pListenerName,_In_ PWTSLISTENERCONFIG pBuffer,_In_ DWORD flag)
BOOL WINAPI wtsapi32.WTSEnableChildSessions(BOOL bEnable None)
BOOL WINAPI wtsapi32.WTSEnumerateListenersA(_In_ HANDLE hServer,_In_ PVOID pReserved,_In_ DWORD Reserved,_Out_opt_ PWTSLISTENERNAME pListeners,_Inout_ DWORD *pCount)
BOOL WINAPI wtsapi32.WTSEnumerateListeners(_In_ HANDLE hServer,_In_ PVOID pReserved,_In_ DWORD Reserved,_Out_opt_ PWTSLISTENERNAME pListeners,_Inout_ DWORD *pCount)
BOOL WINAPI wtsapi32.WTSEnumerateListenersW(_In_ HANDLE hServer,_In_ PVOID pReserved,_In_ DWORD Reserved,_Out_opt_ PWTSLISTENERNAME pListeners,_Inout_ DWORD *pCount)
BOOL WINAPI wtsapi32.WTSEnumerateProcessesExA(_In_ HANDLE hServer,_Inout_ DWORD *pLevel,_In_ DWORD SessionID,_Out_ LPTSTR *ppProcessInfo,_Out_ DWORD *pCount)
BOOL WINAPI wtsapi32.WTSEnumerateProcessesEx(_In_ HANDLE hServer,_Inout_ DWORD *pLevel,_In_ DWORD SessionID,_Out_ LPTSTR *ppProcessInfo,_Out_ DWORD *pCount)
BOOL WINAPI wtsapi32.WTSEnumerateProcessesExW(_In_ HANDLE hServer,_Inout_ DWORD *pLevel,_In_ DWORD SessionID,_Out_ LPTSTR *ppProcessInfo,_Out_ DWORD *pCount)
BOOL WINAPI wtsapi32.WTSEnumerateSessionsExA(_In_ HANDLE hServer,_Inout_ DWORD *pLevel,_In_ DWORD Filter,_Out_ PWTS_SESSION_INFO_1 *ppSessionInfo,_Out_ DWORD *pCount)
BOOL WINAPI wtsapi32.WTSEnumerateSessionsEx(_In_ HANDLE hServer,_Inout_ DWORD *pLevel,_In_ DWORD Filter,_Out_ PWTS_SESSION_INFO_1 *ppSessionInfo,_Out_ DWORD *pCount)
BOOL WINAPI wtsapi32.WTSEnumerateSessionsExW(_In_ HANDLE hServer,_Inout_ DWORD *pLevel,_In_ DWORD Filter,_Out_ PWTS_SESSION_INFO_1 *ppSessionInfo,_Out_ DWORD *pCount)
BOOL WINAPI wtsapi32.WTSFreeMemoryExA(_In_ WTS_TYPE_CLASS WTSTypeClass,_In_ PVOID pMemory,_In_ ULONG NumberOfEntries)
BOOL WINAPI wtsapi32.WTSFreeMemoryEx(_In_ WTS_TYPE_CLASS WTSTypeClass,_In_ PVOID pMemory,_In_ ULONG NumberOfEntries)
BOOL WINAPI wtsapi32.WTSFreeMemoryExW(_In_ WTS_TYPE_CLASS WTSTypeClass,_In_ PVOID pMemory,_In_ ULONG NumberOfEntries)
BOOL WINAPI wtsapi32.WTSGetChildSessionId(_Out_ ULONG *pSessionId)
BOOL WINAPI wtsapi32.WTSGetListenerSecurityA(_In_ HANDLE hServer,_In_ PVOID pReserved,_In_ DWORD Reserved,_In_ LPTSTR pListenerName,_In_ SECURITY_INFORMATION SecurityInformation,_Out_opt_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_ DWORD nLength,_Out_ LPDWORD lpnLengthNeeded)
BOOL WINAPI wtsapi32.WTSGetListenerSecurity(_In_ HANDLE hServer,_In_ PVOID pReserved,_In_ DWORD Reserved,_In_ LPTSTR pListenerName,_In_ SECURITY_INFORMATION SecurityInformation,_Out_opt_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_ DWORD nLength,_Out_ LPDWORD lpnLengthNeeded)
BOOL WINAPI wtsapi32.WTSGetListenerSecurityW(_In_ HANDLE hServer,_In_ PVOID pReserved,_In_ DWORD Reserved,_In_ LPTSTR pListenerName,_In_ SECURITY_INFORMATION SecurityInformation,_Out_opt_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_ DWORD nLength,_Out_ LPDWORD lpnLengthNeeded)
BOOL WINAPI wtsapi32.WTSIsChildSessionsEnabled(_Out_ BOOL *pbEnabled)
BOOL WINAPI wtsapi32.WTSQueryListenerConfigA(_In_ HANDLE hServer,_In_ PVOID pReserved,_In_ DWORD Reserved,_In_ LPTSTR pListenerName,_Out_ PWTSLISTENERCONFIG pBuffer)
BOOL WINAPI wtsapi32.WTSQueryListenerConfig(_In_ HANDLE hServer,_In_ PVOID pReserved,_In_ DWORD Reserved,_In_ LPTSTR pListenerName,_Out_ PWTSLISTENERCONFIG pBuffer)
BOOL WINAPI wtsapi32.WTSQueryListenerConfigW(_In_ HANDLE hServer,_In_ PVOID pReserved,_In_ DWORD Reserved,_In_ LPTSTR pListenerName,_Out_ PWTSLISTENERCONFIG pBuffer)
BOOL WINAPI wtsapi32.WTSSetListenerSecurityA(_In_ HANDLE hServer,_In_ PVOID pReserved,_In_ DWORD Reserved,_In_ LPTSTR pListenerName,_In_ SECURITY_INFORMATION SecurityInformation,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor)
BOOL WINAPI wtsapi32.WTSSetListenerSecurity(_In_ HANDLE hServer,_In_ PVOID pReserved,_In_ DWORD Reserved,_In_ LPTSTR pListenerName,_In_ SECURITY_INFORMATION SecurityInformation,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor)
BOOL WINAPI wtsapi32.WTSSetListenerSecurityW(_In_ HANDLE hServer,_In_ PVOID pReserved,_In_ DWORD Reserved,_In_ LPTSTR pListenerName,_In_ SECURITY_INFORMATION SecurityInformation,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor)
BOOL WINAPI wtsapi32.WTSStartRemoteControlSessionA(_In_ LPTSTR pTargetServerName,_In_ ULONG TargetLogonId,_In_ BYTE HotkeyVk,_In_ USHORT HotkeyModifiers)
BOOL WINAPI wtsapi32.WTSStartRemoteControlSession(_In_ LPTSTR pTargetServerName,_In_ ULONG TargetLogonId,_In_ BYTE HotkeyVk,_In_ USHORT HotkeyModifiers)
BOOL WINAPI wtsapi32.WTSStartRemoteControlSessionW(_In_ LPTSTR pTargetServerName,_In_ ULONG TargetLogonId,_In_ BYTE HotkeyVk,_In_ USHORT HotkeyModifiers)
BOOL WINAPI wtsapi32.WTSStopRemoteControlSession(_In_ ULONG LogonId)
BOOL WINBASEAPI kernel32.GetFirmwareEnvironmentVariableExA(LPCSTR lpName None,LPCSTR lpGuid None,PVOID pValue None,DWORD nSize None,PDWORD pdwAttributes None)
BOOL WINBASEAPI kernel32.GetFirmwareEnvironmentVariableEx(LPCSTR lpName None,LPCSTR lpGuid None,PVOID pValue None,DWORD nSize None,PDWORD pdwAttributes None)
BOOL WINBASEAPI kernel32.GetFirmwareEnvironmentVariableExW(LPCSTR lpName None,LPCSTR lpGuid None,PVOID pValue None,DWORD nSize None,PDWORD pdwAttributes None)
BOOL WINBASEAPI kernel32.SetFirmwareEnvironmentVariableExA(_In_ LPCTSTR lpName,_In_ LPCTSTR lpGuid,_In_ PVOID pValue,_In_ DWORD nSize,_In_ DWORD dwAttributes)
BOOL WINBASEAPI kernel32.SetFirmwareEnvironmentVariableEx(_In_ LPCTSTR lpName,_In_ LPCTSTR lpGuid,_In_ PVOID pValue,_In_ DWORD nSize,_In_ DWORD dwAttributes)
BOOL WINBASEAPI kernel32.SetFirmwareEnvironmentVariableExW(_In_ LPCTSTR lpName,_In_ LPCTSTR lpGuid,_In_ PVOID pValue,_In_ DWORD nSize,_In_ DWORD dwAttributes)
BOOL WINUSERAPI user32.UnregisterSuspendResumeNotification(_Inout_ HPOWERNOTIFY RegistrationHandle)
BOOL WSAAPI ws2_32.WSAGetOverlappedResult(_In_ SOCKET s,_In_ LPWSAOVERLAPPED lpOverlapped,_Out_ LPDWORD lpcbTransfer,_In_ BOOL fWait,_Out_ LPDWORD lpdwFlags)
BSTR None oleaut32.SysAllocStringByteLen(_In_opt_ LPCSTR psz,_In_ UINT len)
BYTE None None.GetRValue(DWORD rgb None)
BYTE None None.HIBYTE(WORD wValue None)
BYTE None None.LOBYTE(WORD wValue None)
BYTE None None.MCI_TMSF_SECOND(DWORD dwTMSF None)
byte None None.ToByte(IFormatProvider provider None)
BYTE None None.WdfUsbInterfaceGetConfiguredSettingIndex(_In_ WDFUSBINTERFACE Interface)
BYTE None None.WdfUsbInterfaceGetInterfaceNumber(_In_ WDFUSBINTERFACE UsbInterface)
BYTE None None.WdfUsbInterfaceGetNumConfiguredPipes(_In_ WDFUSBINTERFACE UsbInterface)
BYTE None None.WdfUsbInterfaceGetNumEndpoints(_In_ WDFUSBINTERFACE UsbInterface,_In_ UCHAR SettingIndex)
BYTE None None.WdfUsbInterfaceGetNumSettings(_In_ WDFUSBINTERFACE UsbInterface)
CALID None None.MonthCal_GetCALID(HWND hmc None)
CComPtrIWMPSyncDevice None None.spSyncDevice(m_ppWMPDevices[lIndex] None None)
CGenericListCBaseFilter None None.myFilterList("Filters" None None)
char None None.GetChar(int i None)
char None None.ToChar(IFormatProvider provider None)
CLFS_LSN WINAPI clfsw32.LsnCreate(_In_ CLFS_CONTAINER_ID cidContainer,_In_ ULONG offBlock,_In_ ULONG cRecord)
CLIENT_CALL_RETURN None rpcrt4.NdrAsyncClientCall2(_In_ PMIDL_STUB_DESC pStubDescriptor,_In_ PFORMAT_STRING pFormat,_Inout_ ... None)
CLIENT_CALL_RETURN None rpcrt4.NdrAsyncClientCall(_In_ PMIDL_STUB_DESC pStubDescriptor,_In_ PFORMAT_STRING pFormat,_Inout_ ... None)
CLIENT_CALL_RETURN None rpcrt4.NdrClientCall3(MIDL_STUBLESS_PROXY_INFO *pProxyInfo None,unsigned long nProcNum,void *pReturnValue None)
CLIENT_CALL_RETURN None rpcrt4.NdrClientCall4(_In_ PMIDL_STUB_DESC pStubDescriptor,_In_ PFORMAT_STRING pFormat,_Inout_ ... None)
CLIENT_CALL_RETURN None rpcrt4.NdrDcomAsyncClientCall2(_In_ PMIDL_STUB_DESC pStubDescriptor,_In_ PFORMAT_STRING pFormat,_Inout_ ... None)
CLIENT_CALL_RETURN None rpcrt4.NdrDcomAsyncClientCall(_In_ PMIDL_STUB_DESC pStubDescriptor,_In_ PFORMAT_STRING pFormat,_Inout_ ... None)
CLIENT_CALL_RETURN None rpcrt4.NdrMesProcEncodeDecode2(handle_t Handle None,const MIDL_STUB_DESC *pStubDesc,PFORMAT_STRING pFormatString None,... None None)
CLIENT_CALL_RETURN None rpcrt4.NdrMesProcEncodeDecode4(handle_t Handle None,_In_ PMIDL_STUB_DESC pStubDescriptor,_In_ PFORMAT_STRING pFormat,_Inout_ ... None)
CLIENT_CALL_RETURN RPC_VAR_ENTRY rpcrt4.Ndr64AsyncClientCall(MIDL_STUBLESS_PROXY_INFO *pProxyInfo None,unsigned long nProcNum,void *pReturnValue None,_Inout_ ... None)
CLIENT_CALL_RETURN RPC_VAR_ENTRY rpcrt4.NdrClientCall2(_In_ PMIDL_STUB_DESC pStubDescriptor,_In_ PFORMAT_STRING pFormat,_Inout_ ... None)
CLIENT_CALL_RETURN RPC_VAR_ENTRY rpcrt4.NdrClientCall(_In_ PMIDL_STUB_DESC pStubDescriptor,_In_ PFORMAT_STRING pFormat,_Inout_ ... None)
CLUSTER_GROUP_STATE WINAPI clusapi.GetClusterGroupState(_In_ HGROUP hGroup,_Out_opt_ LPWSTR lpszNodeName,_Inout_opt_ LPDWORD lpcchNodeName)
CLUSTER_NODE_STATE WINAPI clusapi.GetClusterNodeState(_In_ HNODE hNode)
CLUSTER_RESOURCE_STATE WINAPI clusapi.GetClusterResourceState(_In_ HRESOURCE hResource,_Out_opt_ LPWSTR lpszNodeName,_Inout_opt_ LPDWORD lpcchNodeName,_Out_opt_ LPWSTR lpszGroupName,_Inout_opt_ LPDWORD lpcchGroupName)
CLUSTER_ROLE_STATE WINAPI resutils.ResUtilGetClusterRoleState(_In_ HCLUSTER hCluster,_In_ CLUSTER_ROLE eClusterRole)
COLOREF None None.TreeView_GetLineColor(HWND hwndTV None)
COLORREF None comctl32.ImageList_GetBkColor(_In_ HIMAGELIST himl)
COLORREF None comctl32.ImageList_SetBkColor(_In_ HIMAGELIST himl,_In_ COLORREF clrBk)
COLORREF None gdi32.GetDCBrushColor(_In_ HDC hdc)
COLORREF None gdi32.GetNearestColor(_In_ HDC hdc,_In_ COLORREF crColor)
COLORREF None gdi32.GetTextColor(_In_ HDC hdc)
COLORREF None gdi32.SetBkColor(_In_ HDC hdc,_In_ COLORREF crColor)
COLORREF None gdi32.SetDCBrushColor(_In_ HDC hdc,_In_ COLORREF crColor)
COLORREF None gdi32.SetDCPenColor(_In_ HDC hdc,_In_ COLORREF crColor)
COLORREF None gdi32.SetTextColor(_In_ HDC hdc,_In_ COLORREF crColor)
COLORREF None None.DateTime_SetMonthCalColor(HWND hwndDP None,int iColor None,COLORREF clr None)
COLORREF None None.ListView_GetBkColor(HWND hwnd None)
COLORREF None None.ListView_GetInsertMarkColor(HWND hwnd None)
COLORREF None None.ListView_GetOutlineColor(HWND hwnd None)
COLORREF None None.ListView_GetTextBkColor(HWND hwnd None)
COLORREF None None.ListView_GetTextColor(HWND hwnd None)
COLORREF None None.ListView_SetInsertMarkColor(HWND hwnd None,COLORREF color None)
COLORREF None None.ListView_SetOutlineColor(HWND hwnd None,COLORREF color None)
COLORREF None None.MonthCal_GetColor(HWND hwndMC None,INT iColor None)
COLORREF None None.MonthCal_SetColor(HWND hwndMC None,INT iColor None,COLORREF clr None)
COLORREF None None.Pager_GetBkColor(HWND hwndPager None)
COLORREF None None.Pager_SetBkColor(HWND hwndPager None,COLORREF clrBk None)
COLORREF None None.PALETTEINDEX(WORD wPaletteIndex None)
COLORREF None None.RGB(BYTE byRed None,BYTE byGreen None,BYTE byBlue None)
COLORREF None None.TreeView_GetBkColor(HWND hwndTV None)
COLORREF None None.TreeView_GetInsertMarkColor(HWND hwndTV None)
COLORREF None None.TreeView_GetTextColor(HWND hwndTV None)
COLORREF None None.TreeView_SetBkColor(HWND hwndTV None,COLORREF clrBk None)
COLORREF None None.TreeView_SetInsertMarkColor(HWND hwndTV None,COLORREF clrInsertMark None)
COLORREF None None.TreeView_SetLineColor(HWND hwndTV None,COLORREF clrLine None)
COLORREF None None.TreeView_SetTextColor(HWND hwndTV None,COLORREF clrText None)
COLORREF None uxtheme.GetThemeSysColor(_In_ HTHEME hTheme,_In_ int iColorID)
const DXVA2_Fixed32 None.DXVA2_Fixed32OpaqueAlpha(void None None)
const DXVA2_Fixed32 None.DXVA2_Fixed32TransparentAlpha(void None None)
ConstructorInfo None None.GetConstructor(BindingFlags bindingAttr None,Binder binder None,CallingConventions callConvention None,Type[] types None,ParameterModifier[] modifiers None)
CREATE TABLE None.MoneyTable(col1 int None,col2 smallmoney None,col3 decimal None)
create table None.MyTable(col1 int None,col2 smallmoney None,col3 decimal None)
CRYPTCATMEMBER WINAPI wintrust.CryptCATEnumerateMember(_In_ HANDLE hCatalog,_In_ CRYPTCATMEMBER *pPrevMember)
CString None None.GetErrorMessage(HRESULT hr None)
D2D1_CREATION_PROPERTIES None d2d1.CreationProperties(D2D1_THREADING_MODE threadingMode None,D2D1_DEBUG_LEVEL debugLevel None,D2D1_DEVICE_CONTEXT_OPTIONS options None)
D2D1_EFFECT_INPUT_DESCRIPTION None d2d1.EffectInputDescription(ID2D1Effect *effect None,UINT32 inputIndex None,D2D1_RECT_F inputRectangle None)
D2D1_GRADIENT_MESH_PATCH None d2d1.GradientMeshPatch(D2D1_POINT_2F point00 None,D2D1_POINT_2F point01 None,D2D1_POINT_2F point02 None,D2D1_POINT_2F point03 None,D2D1_POINT_2F point10 None,D2D1_POINT_2F point11 None,D2D1_POINT_2F point12 None,D2D1_POINT_2F point13 None,D2D1_POINT_2F point20 None,D2D1_POINT_2F point21 None,D2D1_POINT_2F point22 None,D2D1_POINT_2F point23 None,D2D1_POINT_2F point30 None,D2D1_POINT_2F point31 None,D2D1_POINT_2F point32 None,D2D1_POINT_2F point33 None,D2D1_COLOR_F color00 None,D2D1_COLOR_F color03 None,D2D1_COLOR_F color30 None,D2D1_COLOR_F color33 None,D2D1_PATCH_EDGE_MODE topEdgeMode None,D2D1_PATCH_EDGE_MODE leftEdgeMode None,D2D1_PATCH_EDGE_MODE bottomEdgeMode None,D2D1_PATCH_EDGE_MODE rightEdgeMode None)
D2D1_GRADIENT_MESH_PATCH None d2d1.GradientMeshPatchFromCoonsPatch(D2D1_POINT_2F point0 None,D2D1_POINT_2F point1 None,D2D1_POINT_2F point2 None,D2D1_POINT_2F point3 None,D2D1_POINT_2F point4 None,D2D1_POINT_2F point5 None,D2D1_POINT_2F point6 None,D2D1_POINT_2F point7 None,D2D1_POINT_2F point8 None,D2D1_POINT_2F point9 None,D2D1_POINT_2F point10 None,D2D1_POINT_2F point11 None,D2D1_COLOR_F color0 None,D2D1_COLOR_F color1 None,D2D1_COLOR_F color2 None,D2D1_COLOR_F color3 None,D2D1_PATCH_EDGE_MODE topEdgeMode None,D2D1_PATCH_EDGE_MODE leftEdgeMode None,D2D1_PATCH_EDGE_MODE bottomEdgeMode None,D2D1_PATCH_EDGE_MODE rightEdgeMode None)
D2D1_PROPERTY_TYPE None d2d1.GetType(UINT32 index None)
D2D1_RENDERING_CONTROLS None d2d1.RenderingControls(D2D1_BUFFER_PRECISION bufferPrecision None,D2D1_SIZE_U tileSize None)
DateTime None None.ToDateTime(IFormatProvider provider None)
decimal None None.ToDecimal(IFormatProvider provider None)
Decimal None None.ToDecimal(IFormatProvider provider None)
delegate int None.del(int i None)
delegate void None.TestDelegate(string s None)
DEP_SYSTEM_POLICY_TYPE WINAPI kernel32.GetSystemDEPPolicy(void None None)
DHPDEV None None.DrvEnablePDEV(_In_ DEVMODEW *pdm,_In_ LPWSTR pwszLogAddress,ULONG cPat None,_In_opt_ HSURF *phsurfPatterns,ULONG cjCaps None,_Out_ ULONG *pdevcaps,ULONG cjDevInfo None,_Out_ DEVINFO *pdi,HDEV hdev None,_In_ LPWSTR pwszDeviceName,HANDLE hDriver None)
DIALOG_CONTROL_DPI_CHANGE_BEHAVIORS WINAPI user32.GetDialogControlDpiChangeBehavior(HWDN hWnd None)
DIALOG_DPI_CHANGE_BEHAVIORS WINAPI user32.GetDialogDpiChangeBehavior(HWDN hDlg None)
Dim None None.arrayA( None None)
Dim None None.arrZ(-1 None None)
Dim None None.outArgs(0 None None)
Dim None None.prices(3 None None,4 None None,5 None None)
Dim None None.TDArray(0 None None,0 None None,0 None None)
Display using None.current(en-us None None)
DLL_DIRECTORY_COOKIE WINAPI kernel32.AddDllDirectory(_In_ PCWSTR NewDirectory)
DNS_STATUS None dnsapi.DnsValidateServerStatus(_In_ PSOCKADDR server,_In_ PCWSTR queryName,_Out_ PDWORD serverStatus)
DNS_STATUS WINAPI dnsapi.DnsAcquireContextHandle_A(_In_ DWORD CredentialFlags,_In_opt_ PVOID Credentials,_Out_ PHANDLE pContext)
DNS_STATUS WINAPI dnsapi.DnsAcquireContextHandle(_In_ DWORD CredentialFlags,_In_opt_ PVOID Credentials,_Out_ PHANDLE pContext)
DNS_STATUS WINAPI dnsapi.DnsAcquireContextHandle_W(_In_ DWORD CredentialFlags,_In_opt_ PVOID Credentials,_Out_ PHANDLE pContext)
DNS_STATUS WINAPI dnsapi.DnsCancelQuery(_In_ PDNS_QUERY_CANCEL pCancelHandle)
DNS_STATUS WINAPI dnsapi.DnsExtractRecordsFromMessage_W(_In_ PDNS_MESSAGE_BUFFER pDnsBuffer,_In_ WORD wMessageLength,_Out_ PDNS_RECORD *ppRecord)
DNS_STATUS WINAPI dnsapi.DnsGetProxyInformation(_In_ PCWSTR hostName,_Inout_ DNS_PROXY_INFORMATION *proxyInformation,_Inout_opt_ DNS_PROXY_INFORMATION *defaultProxyInformation,_In_opt_ DNS_PROXY_COMPLETION_ROUTINE completionRoutine,_In_opt_ void *completionContext)
DNS_STATUS WINAPI dnsapi.DnsQuery_A(_In_ PCTSTR lpstrName,_In_ WORD wType,_In_ DWORD Options,_Inout_opt_ PVOID pExtra,_Out_opt_ PDNS_RECORD *ppQueryResultsSet,_Out_opt_ PVOID *pReserved)
DNS_STATUS WINAPI dnsapi.DnsQueryConfig(_In_ DNS_CONFIG_TYPE Config,_In_ DWORD Flag,_In_opt_ PCWSTR pwsAdapterName,_In_opt_ PVOID pReserved,_Out_ PVOID pBuffer,_Inout_ PDWORD pBufferLength)
DNS_STATUS WINAPI dnsapi.DnsQueryEx(_In_ PDNS_QUERY_REQUEST pQueryRequest,_Inout_ PDNS_QUERY_RESULT pQueryResults,_Inout_opt_ PDNS_QUERY_CANCEL pCancelHandle)
DNS_STATUS WINAPI dnsapi.DnsQuery(_In_ PCTSTR lpstrName,_In_ WORD wType,_In_ DWORD Options,_Inout_opt_ PVOID pExtra,_Out_opt_ PDNS_RECORD *ppQueryResultsSet,_Out_opt_ PVOID *pReserved)
DNS_STATUS WINAPI dnsapi.DnsQuery_W(_In_ PCTSTR lpstrName,_In_ WORD wType,_In_ DWORD Options,_Inout_opt_ PVOID pExtra,_Out_opt_ PDNS_RECORD *ppQueryResultsSet,_Out_opt_ PVOID *pReserved)
DNS_STATUS WINAPI dnsapi.DnsReplaceRecordSetA(_In_ PDNS_RECORD pNewSet,_In_ DWORD Options,_In_opt_ HANDLE hContext,_Inout_opt_ PVOID pExtraInfo,_Inout_opt_ PVOID pReserved)
DNS_STATUS WINAPI dnsapi.DnsReplaceRecordSet(_In_ PDNS_RECORD pNewSet,_In_ DWORD Options,_In_opt_ HANDLE hContext,_Inout_opt_ PVOID pExtraInfo,_Inout_opt_ PVOID pReserved)
DNS_STATUS WINAPI dnsapi.DnsReplaceRecordSetW(_In_ PDNS_RECORD pNewSet,_In_ DWORD Options,_In_opt_ HANDLE hContext,_Inout_opt_ PVOID pExtraInfo,_Inout_opt_ PVOID pReserved)
DNS_STATUS WINAPI dnsapi.DnsValidateName_A(_In_ PCTSTR pszName,_In_ DNS_NAME_FORMAT Format)
DNS_STATUS WINAPI dnsapi.DnsValidateName(_In_ PCTSTR pszName,_In_ DNS_NAME_FORMAT Format)
DNS_STATUS WINAPI dnsapi.DnsValidateName_W(_In_ PCTSTR pszName,_In_ DNS_NAME_FORMAT Format)
double __inline None.ntohd(unsigned __int64 value)
double None None.asdouble(in uint lowbits,in uint highbits)
double None None.atof(const char *str)
double None None.ceil(double x None)
double None None.erf(double x None)
double None None.exp(double x None)
double None None.fabs(double x None)
double None None._j0(double x None)
double None None.MFGetAttributeDouble(_In_ IMFAttributes *pAttributes,_In_ REFGUID guidKey,_In_ double fDefault)
double None None._nextafter(double x None,double y None)
double None None.pow(double x None,double y None)
double None None.strtod(const char *nptr,char **endptr None)
double None None.ToDouble(IFormatProvider provider None)
DOUBLE None propsys.PropVariantToDoubleWithDefault(_In_ REFPROPVARIANT propvarIn,_In_ DOUBLE dblDefault)
DOUBLE None propsys.VariantToDoubleWithDefault(_In_ REFVARIANT varIn,_In_ DOUBLE dblDefault)
DPI_AWARENESS_CONTEXT WINAPI user32.GetWindowDpiAwarenessContext(_In_ HWND hwnd)
DPI_AWARENESS_CONTEXT WINAPI user32.SetThreadDpiAwarenessContext(_In_ DPI_AWARENESS_CONTEXT dpiContext)
DWMAPI None dwmapi.DwmRenderGesture(_In_ GESTURE_TYPE gt,_In_ UINT cContacts,_In_ DWORD *pdwPointerID,_In_ POINT *pPoints)
DWMAPI None dwmapi.DwmShowContact(DWORD dwPointerID None,DWM_SHOWCONTACT eShowContact None)
DWMAPI None dwmapi.DwmTetherContact(DWORD dwPointerID None,BOOL fEnable None,POINT ptTether None)
DWMAPI None dwmapi.DwmTransitionOwnedWindow(HWND hwnd None,DWMTRANSITION_OWNEDWINDOW_TARGET target None)
DWORD64 CALLBACK None.GetModuleBaseProc64(_In_ HANDLE hProcess,_In_ DWORD64 Address)
DWORD64 CALLBACK None.TranslateAddressProc64(_In_ HANDLE hProcess,_In_ HANDLE hThread,_In_ LPADDRESS64 lpaddr)
DWORD64 None None.ShiftLeft128(DWORD64 LowPart None,DWORD64 HighPart None,BYTE Shift None)
DWORD64 None None.UnsignedMultiplyExtract128(_In_ DWORD64 Multiplier,_In_ DWORD64 Multiplicand,_In_ BYTE Shift)
DWORD64 WINAPI dbghelp.SymGetModuleBase64(_In_ HANDLE hProcess,_In_ DWORD64 dwAddr)
DWORD64 WINAPI dbghelp.SymLoadModule64(_In_ HANDLE hProcess,_In_opt_ HANDLE hFile,_In_opt_ PCSTR ImageName,_In_opt_ PCSTR ModuleName,_In_ DWORD64 BaseOfDll,_In_ DWORD SizeOfDll)
DWORD64 WINAPI dbghelp.SymLoadModuleEx(_In_ HANDLE hProcess,_In_ HANDLE hFile,_In_ PCTSTR ImageName,_In_ PCTSTR ModuleName,_In_ DWORD64 BaseOfDll,_In_ DWORD DllSize,_In_ PMODLOAD_DATA Data,_In_ DWORD Flags)
DWORD64 WINAPI dbghelp.SymLoadModuleExW(_In_ HANDLE hProcess,_In_ HANDLE hFile,_In_ PCTSTR ImageName,_In_ PCTSTR ModuleName,_In_ DWORD64 BaseOfDll,_In_ DWORD DllSize,_In_ PMODLOAD_DATA Data,_In_ DWORD Flags)
DWORD64 WINAPI None.UnsignedMultiply128(_In_ DWORD64 Multiplier,_In_ DWORD64 Multiplicand,_Out_ DWORD64 *HighProduct)
DWORD APIENTRY dhcpcsvc6.Dhcpv6ReleasePrefix(_In_ LPWSTR adapterName,_In_ LPDHCPV6CAPI_CLASSID classId,_In_ LPDHCPV6CAPIPrefixLeaseInformation prefixleaseInfo)
DWORD APIENTRY dhcpcsvc6.Dhcpv6RequestParams(BOOL forceNewInform None,LPVOID reserved None,LPWSTR adapterName None,LPDHCPV6CAPI_CLASSID classId None,DHCPV6CAPI_PARAMS_ARRAY recdParams None,LPBYTE buffer None,LPDWORD pSize None)
DWORD APIENTRY dhcpcsvc.DhcpCApiInitialize(_Out_ LPDWORD Version)
DWORD APIENTRY dhcpcsvc.DhcpDeRegisterParamChange(_In_ DWORD Flags,_In_ LPVOID Reserved,_In_ LPVOID Event)
DWORD APIENTRY dhcpcsvc.DhcpRegisterParamChange(_In_ DWORD Flags,_In_ LPVOID Reserved,_In_ LPWSTR AdapterName,_In_ LPDHCPCAPI_CLASSID pClassId,_In_ DHCPCAPI_PARAMS_ARRAY Params,_Inout_ LPVOID Handle)
DWORD APIENTRY dhcpcsvc.DhcpRequestParams(_In_ DWORD Flags,_In_ LPVOID Reserved,_In_ LPWSTR AdapterName,_In_ LPDHCPCAPI_CLASSID ClassId,_In_ DHCPCAPI_PARAMS_ARRAY SendParams,_Inout_ DHCPCAPI_PARAMS_ARRAY RecdParams,_In_ LPBYTE Buffer,_Inout_ LPDWORD pSize,_In_ LPWSTR RequestIdStr)
DWORD APIENTRY dhcpcsvc.DhcpUndoRequestParams(_In_ DWORD Flags,_In_ LPVOID Reserved,_In_ LPWSTR AdapterName,_In_ LPWSTR RequestIdStr)
DWORD APIENTRY kernel32.DisableThreadProfiling(_In_ HANDLE PerformanceDataHandle)
DWORD APIENTRY kernel32.EnableThreadProfiling(_In_ HANDLE ThreadHandle,_In_ DWORD Flags,_In_ DWORD64 HardwareCounters,_Out_ HANDLE PerformanceDataHandle)
DWORD APIENTRY kernel32.ReadThreadProfilingData(_In_ HANDLE PerformanceDataHandle,_In_ DWORD Flags,_Out_ PPERFORMANCE_DATA PerformanceData)
DWORD APIENTRY mprapi.MprAdminConnectionGetInfoEx(_In_ RAS_SERVER_HANDLE hRasServer,_In_ HANDLE hConnection,_Out_ PRAS_CONNECTION_EX pRasConnection)
DWORD APIENTRY mprapi.MprAdminInterfaceGetCustomInfoEx(_In_ MPR_SERVER_HANDLE hMprServer,_In_ HANDLE hInterface,_Out_ PMPR_IF_CUSTOMINFOEX pCustomInfo)
DWORD APIENTRY mprapi.MprAdminServerGetInfo(_In_ MPR_SERVER_HANDLE hMprServer,_Out_ MPR_SERVER_EX *pServerInfo)
DWORD APIENTRY mprapi.MprConfigInterfaceSetCustomInfoEx(_In_ HANDLE hMprConfig,_In_ HANDLE hRouterInterface,_In_ PMPR_IF_CUSTOMINFOEX pCustomInfo)
DWORD APIENTRY mprapi.MprConfigServerGetInfoEx(_In_ HANDLE hMprConfig,_Out_ MPR_SERVER_EX *pServerInfo)
DWORD APIENTRY mprapi.MprConfigServerSetInfo(_In_ HANDLE hMprConfig,_In_ MPR_SERVER_SET_CONFIG_EX *pSetServerConfig)
DWORD APIENTRY mprapi.MprConfigServerSetInfo(_In_ LPWSTR lpwsServerName,_In_ BOOL *fIsServiceInitialized)
DWORD APIENTRY None.AddConnectNotify(_Inout_ LPNOTIFYINFO lpNotifyInfo,_In_ LPNOTIFYADD lpAddInfo)
DWORD APIENTRY None.CancelConnectNotify(_Inout_ LPNOTIFYINFO lpNotifyInfo,_In_ LPNOTIFYCANCEL lpCancelInfo)
DWORD APIENTRY None.ClosePerformanceData(void None None)
DWORD APIENTRY None.CollectPerformanceData(LPWSTR pQuery None,LPVOID *pData None,LPDWORD pcbData None,LPDWORD pObjectsReturned None)
DWORD APIENTRY None.MprAdminInitializeDll(PMPRAPI_ADMIN_DLL_CALLBACKS pAdminCallbacks None)
DWORD APIENTRY None.NPLogonNotify(_In_ PLUID lpLogon,_In_ LPCWSTR lpAuthentInfoType,_In_ LPVOID lpAuthentInfo,_In_ LPCWSTR lpPreviousAuthentInfoType,_In_ LPVOID lpPreviousAuthentInfo,_In_ LPWSTR lpStationName,_In_ LPVOID StationHandle,_Out_ LPWSTR *lpLogonScript)
DWORD APIENTRY None.NPPasswordChangeNotify(_In_ LPCWSTR lpAuthentInfoType,_In_ LPVOID lpAuthentInfo,_In_ LPCWSTR lpPreviousAuthentInfoType,_In_ LPVOID lpPreviousAuthentInfo,_In_ LPWSTR lpStationName,_In_ LPVOID StationHandle,_In_ DWORD dwChangeInfo)
DWORD APIENTRY None.OpenPerformanceData(LPWSTR pContext None)
DWORD APIENTRY rasapi32.RasUpdateConnection(_In_ HRASCONN hrasconn,_In_ LPRASUPDATECONN lprasupdateconn)
DWORD CALLBACK None.BeginResourceControlAsUser(_In_ RESID Resource,_In_ HANDLE TokenHandle,_In_ DWORD ControlCode,_In_ PVOID InBuffer,_In_ DWORD InBufferSize,_Out_ PVOID OutBuffer,_In_ DWORD OutBufferSize,_Out_ LPDWORD BytesReturned,_In_ PRES_CTL_CTX context,_Inout_ PBOOL ReturnedAsynchronously)
DWORD CALLBACK None.ChangeResourceProcessForDumps(_In_ RESOURCE_HANDLE resource,_In_ LPCWSTR processName,_In_ DWORD processId,_In_ BOOL isAdd)
DWORD CALLBACK None.CopyProgressRoutine(_In_ LARGE_INTEGER TotalFileSize,_In_ LARGE_INTEGER TotalBytesTransferred,_In_ LARGE_INTEGER StreamSize,_In_ LARGE_INTEGER StreamBytesTransferred,_In_ DWORD dwStreamNumber,_In_ DWORD dwCallbackReason,_In_ HANDLE hSourceFile,_In_ HANDLE hDestinationFile,_In_opt_ LPVOID lpData)
DWORD CALLBACK None.EditStreamCallback(_In_ DWORD_PTR dwCookie,_In_ LPBYTE pbBuff,_In_ LONG cb,_In_ LONG *pcb)
DWORD CALLBACK None.ForegroundIdleProc(_In_ int code,DWORD wParam None,LONG lParam None)
DWORD CALLBACK None.MprAdminGetIpAddressForUser(_In_ WCHAR *lpwszUserName,_In_ WCHAR *lpwszPortName,_Inout_ DWORD *lpdwIpAddress,_Out_ BOOL *bNotifyRelease)
DWORD CALLBACK None.MprAdminGetIpv6AddressForUser(_In_ WCHAR *lpwszUserName,_In_ WCHAR *lpwszPortName,_Inout_ in6_addr *lpdwIpv6Address,_Out_ BOOL *bNotifyRelease)
DWORD CALLBACK None.MprAdminReleaseIpv6AddressForUser(_In_ WCHAR *lpwszUserName,_In_ WCHAR *lpwszPortName,_In_ in6_addr *lpdwIpv6Address)
DWORD CALLBACK None.ProcessGroupPolicy(DWORD dwFlags None,HANDLE hToken None,HKEY hKeyRoot None,PGROUP_POLICY_OBJECT pDeletedGPOList None,PGROUP_POLICY_OBJECT pChangedGPOList None,ASYNCCOMPLETIONHANDLE pHandle None,BOOL *pbAbort None,PFNSTATUSMESSAGECALLBACK pStatusCallback None)
DWORD CALLBACK None.ProcessGroupPolicyEx(_In_ DWORD dwFlags,_In_ HANDLE hToken,_In_ HKEY hKeyRoot,_In_ PGROUP_POLICY_OBJECT pDeletedGPOList,_In_ PGROUP_POLICY_OBJECT pChangedGPOList,_In_ ASYNCCOMPLETIONHANDLE pHandle,_In_ BOOL *pbAbort,_In_ PFNSTATUSMESSAGECALLBACK pStatusCallback,_In_ IWbemServices *pWbemServices,_Out_ HRESULT *pRsopStatus)
DWORD CALLBACK None.ProcessGroupPolicy(_In_ DWORD dwFlags,_In_ HANDLE hToken,_In_ HKEY hKeyRoot,_In_ PGROUP_POLICY_OBJECT pDeletedGPOList,_In_ PGROUP_POLICY_OBJECT pChangedGPOList,_In_ ASYNCCOMPLETIONHANDLE pHandle,_In_ BOOL *pbAbort,_In_ PFNSTATUSMESSAGECALLBACK pStatusCallback)
DWORD CALLBACK None.RasCustomDeleteEntryNotify(_In_ LPCTSTR lpszPhonebook,_In_ LPCTSTR lpszEntry,_In_ DWORD dwFlags)
DWORD CALLBACK None.RasDialFunc2(_In_ DWORD dwCallbackId,_In_ DWORD dwSubEntry,_In_ HRASCONN hrasconn,_In_ UINT unMsg,_In_ RASCONNSTATE rascs,_In_ DWORD dwError,_In_ DWORD dwExtendedError)
DWORD CALLBACK None.RasRetrieveBuffer(HPORT hPort None,PBYTE pBuffer None,PDWORD pdwSize None)
DWORD CALLBACK None.SetInternalState(_In_ RESOURCE_HANDLE None,_In_ CLUSTER_RESOURCE_APPLICATION_STATE stateType,_In_ BOOL active)
DWORD CALLBACK None.ShutdownEmbeddedUI(void None None)
DWORD CALLBACK None.WIMMessageCallback(DWORD dwMessageId None,WPARAM wParam None,LPARAM lParam None,PVOID pvUserData None)
DWORD DHCP_API_FUNCTION dhcpsapi.DhcpCreateSubnetV6(_In_ LPWSTR ServerIpAddress,_In_ DHCP_IPV6_ADDRESS SubnetAddress,_In_ LDHCP_SUBNET_INFO_V6 *SubnetInfo)
DWORD DHCP_API_FUNCTION dhcpsapi.DhcpDeleteSubnetV6(_In_ LPWSTR ServerIpAddress,_In_ DHCP_IPV6_ADDRESS SubnetAddress,_In_ DHCP_FORCE_FLAG ForceFlag)
DWORD DHCP_API_FUNCTION dhcpsapi.DhcpEnumSubnetClientsV6(_In_ LPWSTR ServerIpAddress,_In_ DHCP_IPV6_ADDRESS SubnetAddress,_Inout_ DHCP_RESUME_IPV6_HANDLE *ResumeHandle,_In_ DWORD PreferredMaximum,_Out_ LPDHCP_CLIENT_INFO_ARRAY_V6 *ClientInfo,_Out_ DWORD *ClientsRead,_Out_ DWORD *ClientsTotal)
DWORD DHCP_API_FUNCTION dhcpsapi.DhcpEnumSubnetElementsV6(_In_ LPWSTR ServerIpAddress,_In_ DHCP_IPV6_ADDRESS SubnetAddress,_In_ DHCP_SUBNET_ELEMENT_TYPE_V6 EnumElementType,_Inout_ DHCP_RESUME_HANDLE *ResumeHandle,_In_ DWORD PreferredMaximum,_Out_ LPDHCP_SUBNET_ELEMENT_INFO_ARRAY_V6 *EnumElementInfo,_Out_ DWORD *ElementsRead,_Out_ DWORD *ElementsTotal)
DWORD DHCP_API_FUNCTION dhcpsapi.DhcpEnumSubnetsV6(_In_ LPWSTR ServerIpAddress,_Inout_ DHCP_RESUME_HANDLE *ResumeHandle,_In_ DWORD PreferredMaximum,_Out_ LPDHCPV6_IP_ARRAY *EnumInfo,_Out_ DWORD *ElementsRead,_Out_ DWORD *ElementsTotal)
DWORD DHCP_API_FUNCTION dhcpsapi.DhcpGetSubnetInfoV6(_In_ LPWSTR ServerIpAddress,_In_ DHCP_IPV6_ADDRESS SubnetAddress,_Out_ LPDHCP_SUBNET_INFO_V6 *SubnetInfo)
DWORD DHCP_API_FUNCTION dhcpsapi.DhcpGetVersion(_In_ LPWSTR ServerIpAddress,_Out_ LPDWORD MajorVersion,_Out_ LPDWORD MinorVersion)
DWORD DHCP_API_FUNCTION dhcpsapi.DhcpHlprAddV4PolicyExpr(_Inout_ LPDHCP_POLICY Policy,_In_ DWORD ParentExpr,_In_ DHCP_POL_LOGIC_OPER Operator,_Out_ DWORD *ExprIndex)
DWORD DHCP_API_FUNCTION dhcpsapi.DhcpHlprAddV4PolicyRange(_Inout_ LPDHCP_POLICY Policy,_In_ LPDHCP_IP_RANGE Range)
DWORD DHCP_API_FUNCTION dhcpsapi.DhcpHlprCreateV4Policy(_In_ LPWSTR PolicyName,_In_ BOOL fGlobalPolicy,_In_ DHCP_IP_ADDRESS Subnet,_In_ DWORD ProcessingOrder,_In_ DHCP_POL_LOGIC_OPER RootOperator,_In_ LPWSTR Description,_In_ BOOL Enabled,_Out_ LPDHCP_POLICY *Policy)
DWORD DHCP_API_FUNCTION dhcpsapi.DhcpHlprIsV4PolicyValid(_In_ LPDHCP_POLICY pPolicy)
DWORD DHCP_API_FUNCTION dhcpsapi.DhcpHlprModifyV4PolicyExpr(_Inout_ LPDHCP_POLICY Policy,_In_ DHCP_POL_LOGIC_OPER Operator)
DWORD DHCP_API_FUNCTION dhcpsapi.DhcpHlprResetV4PolicyExpr(_Inout_ LPDHCP_POLICY Policy)
DWORD DHCP_API_FUNCTION dhcpsapi.DhcpRemoveSubnetElementV6(_In_ LPWSTR ServerIpAddress,_In_ DHCP_IPV6_ADDRESS SubnetAddress,_In_ LDHCP_SUBNET_ELEMENT_DATA_V6 RemoveElementInfo,_In_ DHCP_FORCE_FLAG ForceFlag)
DWORD DHCP_API_FUNCTION dhcpsapi.DhcpV4AddPolicyRange(_In_opt_ LPWSTR ServerIpAddress,_In_ DHCP_IP_ADDRESS SubnetAddress,_In_ LPWSTR PolicyName,_In_ LPDHCP_IP_RANGE Range)
DWORD DHCP_API_FUNCTION dhcpsapi.DhcpV4CreatePolicy(_In_opt_ LPWSTR ServerIpAddress,_In_ LPDHCP_POLICY pPolicy)
DWORD DHCP_API_FUNCTION dhcpsapi.DhcpV4DeletePolicy(_In_opt_ LPWSTR ServerIpAddress,_In_ BOOL fGlobalPolicy,_In_ DHCP_IP_ADDRESS SubnetAddress,_In_ LPWSTR PolicyName)
DWORD DHCP_API_FUNCTION dhcpsapi.DhcpV4EnumPolicies(_In_opt_ LPWSTR ServerIpAddress,_Inout_ LPDWORD ResumeHandle,_In_ DWORD PreferredMaximum,_In_ BOOL fGlobalPolicy,_In_ DHCP_IP_ADDRESS SubnetAddress,_Out_ LPDHCP_POLICY_ARRAY *EnumInfo,_Out_ DWORD *ElementsRead,_Out_ DWORD *ElementsTotal)
DWORD DHCP_API_FUNCTION dhcpsapi.DhcpV4FailoverAddScopeToRelationship(_In_opt_ LPWSTR ServerIpAddress,_In_ LPDHCP_FAILOVER_RELATIONSHIP pRelationship)
DWORD DHCP_API_FUNCTION dhcpsapi.DhcpV4FailoverCreateRelationship(_In_opt_ LPWSTR ServerIpAddress,_In_ LPDHCP_FAILOVER_RELATIONSHIP pRelationship)
DWORD DHCP_API_FUNCTION dhcpsapi.DhcpV4FailoverDeleteRelationship(_In_opt_ LPWSTR ServerIpAddress,_In_ LPWSTR pRelationshipName)
DWORD DHCP_API_FUNCTION dhcpsapi.DhcpV4FailoverDeleteScopeFromRelationship(_In_opt_ LPWSTR ServerIpAddress,_In_ LPDHCP_FAILOVER_RELATIONSHIP pRelationship)
DWORD DHCP_API_FUNCTION dhcpsapi.DhcpV4FailoverEnumRelationship(_In_opt_ LPWSTR ServerIpAddress,_Inout_ DHCP_RESUME_HANDLE *ResumeHandle,_In_ DWORD preferredMaximum,_Out_ LPDHCP_FAILOVER_RELATIONSHIP_ARRAY *pRelationship,_Out_ LPDWORD relationshipRead,_Out_ LPDWORD relationshipTotal)
DWORD DHCP_API_FUNCTION dhcpsapi.DhcpV4FailoverGetAddressStatus(_In_opt_ LPWSTR ServerIpAddress,_In_ DHCP_IP_ADDRESS SubnetAddress,_Inout_ LPDWORD pStatus)
DWORD DHCP_API_FUNCTION dhcpsapi.DhcpV4FailoverGetRelationship(_In_opt_ LPWSTR ServerIpAddress,_In_ LPWSTR pRelationshipName,_Out_ LPDHCP_FAILOVER_RELATIONSHIP *pRelationship)
DWORD DHCP_API_FUNCTION dhcpsapi.DhcpV4FailoverGetScopeRelationship(_In_opt_ LPWSTR ServerIpAddress,_In_ DHCP_IP_ADDRESS scopeId,_Out_ LPDHCP_FAILOVER_RELATIONSHIP *pRelationship)
DWORD DHCP_API_FUNCTION dhcpsapi.DhcpV4FailoverGetScopeStatistics(_In_opt_ LPWSTR ServerIpAddress,_In_ DHCP_IP_ADDRESS scopeId,_Out_ LPDHCP_FAILOVER_STATISTICS *pStats)
DWORD DHCP_API_FUNCTION dhcpsapi.DhcpV4FailoverGetSystemTime(_In_opt_ LPWSTR ServerIpAddress,_Out_ LPDWORD pTime)
DWORD DHCP_API_FUNCTION dhcpsapi.DhcpV4FailoverSetRelationship(_In_opt_ LPWSTR ServerIpAddress,_In_ DWORD flags,_In_ LPDHCP_FAILOVER_RELATIONSHIP pRelationship)
DWORD DHCP_API_FUNCTION dhcpsapi.DhcpV4FailoverTriggerAddrAllocation(_In_opt_ LPWSTR ServerIpAddress,_In_ LPWSTR pFailRelName)
DWORD DHCP_API_FUNCTION dhcpsapi.DhcpV4GetAllOptionValues(_In_opt_ LPWSTR ServerIpAddress,_In_ DWORD Flags,_In_ LPDHCP_OPTION_SCOPE_INFO ScopeInfo,_Out_ LPDHCP_ALL_OPTION_VALUES_PB *Values)
DWORD DHCP_API_FUNCTION dhcpsapi.DhcpV4GetFreeIPAddress(_In_opt_ LPWSTR ServerIpAddress,_In_ DHCP_IP_ADDRESS ScopeId,_In_ DHCP_IP_ADDRESS startIP,_In_ DHCP_IP_ADDRESS endIP,_In_ DWORD numFreeAddrReq,_Out_ LPDHCP_IP_ARRAY *IPAddrList)
DWORD DHCP_API_FUNCTION dhcpsapi.DhcpV4GetOptionValue(_In_opt_ LPWSTR ServerIpAddress,_In_ DWORD Flags,_In_ DHCP_OPTION_ID OptionID,_In_opt_ LPWSTR PolicyName,_In_opt_ LPWSTR VendorName,_In_ LPDHCP_OPTION_SCOPE_INFO ScopeInfo,_Out_ LPDHCP_OPTION_VALUE *OptionValue)
DWORD DHCP_API_FUNCTION dhcpsapi.DhcpV4GetPolicy(_In_opt_ LPWSTR ServerIpAddress,_In_ BOOL fGlobalPolicy,_In_ DHCP_IP_ADDRESS SubnetAddress,_In_ LPWSTR PolicyName,_Out_ LPDHCP_POLICY *Policy)
DWORD DHCP_API_FUNCTION dhcpsapi.DhcpV4QueryPolicyEnforcement(_In_opt_ LPWSTR ServerIpAddress,_In_ BOOL fGlobalPolicy,_In_ DHCP_IP_ADDRESS SubnetAddress,_Out_ BOOL *Enabled)
DWORD DHCP_API_FUNCTION dhcpsapi.DhcpV4RemoveOptionValue(_In_opt_ LPWSTR ServerIpAddress,_In_ DWORD Flags,_In_ DHCP_OPTION_ID OptionID,_In_opt_ LPWSTR PolicyName,_In_opt_ LPWSTR VendorName,_In_ LPDHCP_OPTION_SCOPE_INFO ScopeInfo)
DWORD DHCP_API_FUNCTION dhcpsapi.DhcpV4RemovePolicyRange(_In_opt_ LPWSTR ServerIpAddress,_In_ DHCP_IP_ADDRESS SubnetAddress,_In_ LPWSTR PolicyName,_In_ LPDHCP_IP_RANGE Range)
DWORD DHCP_API_FUNCTION dhcpsapi.DhcpV4SetOptionValue(_In_opt_ LPWSTR ServerIpAddress,_In_ DWORD Flags,_In_ DHCP_OPTION_ID OptionId,_In_opt_ LPWSTR PolicyName,_In_opt_ LPWSTR VendorName,_In_ LPDHCP_OPTION_SCOPE_INFO ScopeInfo,_In_ LPDHCP_OPTION_DATA OptionValue)
DWORD DHCP_API_FUNCTION dhcpsapi.DhcpV4SetOptionValues(_In_opt_ LPWSTR ServerIpAddress,_In_ DWORD Flags,_In_opt_ LPWSTR PolicyName,_In_opt_ LPWSTR VendorName,_In_ LPDHCP_OPTION_SCOPE_INFO ScopeInfo,_In_ LPDHCP_OPTION_VALUE_ARRAY OptionValues)
DWORD DHCP_API_FUNCTION dhcpsapi.DhcpV4SetPolicyEnforcement(_In_opt_ LPWSTR ServerIpAddress,_In_ BOOL fGlobalPolicy,_In_ DHCP_IP_ADDRESS SubnetAddress,_In_ BOOL Enable)
DWORD DHCP_API_FUNCTION dhcpsapi.DhcpV4SetPolicy(_In_opt_ LPWSTR ServerIpAddress,_In_ DWORD FieldsModified,_In_ BOOL fGlobalPolicy,_In_ DHCP_IP_ADDRESS SubnetAddress,_In_ LPWSTR PolicyName,_In_ LPDHCP_POLICY Policy)
DWORD DHCP_API_FUNCTION dhcpsapi.DhcpV6GetFreeIPAddress(_In_opt_ LPWSTR ServerIpAddress,_In_ DHCP_IPV6_ADDRESS ScopeId,_In_ DHCP_IPV6_ADDRESS startIP,_In_ DHCP_IPV6_ADDRESS endIP,_In_ DWORD numFreeAddrReq,_Out_ LPDHCPV6_IP_ARRAY *IPAddrList)
DWORD DHCP_API_FUNCTION dhcpsapi.DhcpV6GetStatelessStatistics(_In_opt_ LPWSTR ServerIpAddress,_Out_ LPDHCPV6_STATELESS_STATS *StatelessStats)
DWORD DHCP_API_FUNCTION dhcpsapi.DhcpV6GetStatelessStoreParams(_In_opt_ LPWSTR ServerIpAddress,_In_ BOOL fServerLevel,_In_ DHCP_IPV6_ADDRESS SubnetAddress,_Out_ LPDHCPV6_STATELESS_PARAMS *Params)
DWORD DHCP_API_FUNCTION dhcpsapi.DhcpV6SetStatelessStoreParams(_In_opt_ LPWSTR ServerIpAddress,_In_ BOOL fServerLevel,_In_ DHCP_IPV6_ADDRESS SubnetAddress,_In_ DWORD FieldModified,_In_ LPDHCPV6_STATELESS_PARAMS Params)
DWORD IMAGEAPI dbghelp.SymAddrIncludeInlineTrace(_In_ HANDLE hProcess,_In_ DWORD64 Address)
DWORD IMAGEAPI dbghelp.SymCompareInlineTrace(_In_ HANDLE hProcess,_In_ DWORD64 Address1,_In_ DWORD InlineContext1,_In_ DWORD64 RetAddress1,_In_ DWORD64 Address2,_In_ DWORD64 RetAddress2)
DWORD None advapi32.GetLocalManagedApplications(_In_ BOOL bUserApps,_Out_ LPDWORD pdwApps,_Out_ PLOCALMANAGEDAPPLICATION *prgLocalApps)
DWORD None advapi32.GetManagedApplicationCategories(_Out_ DWORD dwReserved,_Out_ APPCATEGORYINFOLIST *pAppCategory)
DWORD None advapi32.GetManagedApplications(_In_ GUID *pCategory,_In_ DWORD dwQueryFlags,_In_ DWORD dwInfoLevel,_Out_ LPDWORD pdwApps,_Out_ PMANAGEDAPPLICATION *prgManagedApps)
DWORD None advapi32.InstallApplication(_In_ PINSTALLDATA *pInstallInfo)
DWORD None advapi32.UninstallApplication(_In_ WCHAR *ProductCode,_In_ DWORD dwStatus)
DWORD None bthprops.BluetoothAuthenticateDevice(HWND hwndParent None,HANDLE hRadio None,BLUETOOTH_DEVICE_INFO *pbtdi None,PWCHAR pszPasskey None,ULONG ulPasskeyLength None)
DWORD None bthprops.BluetoothAuthenticateMultipleDevices(HWND hwndParent None,HANDLE hRadio None,DWORD cDevices None,BLUETOOTH_DEVICE_INFO *pbtdi None)
DWORD None bthprops.BluetoothEnumerateInstalledServices(HANDLE hRadio None,BLUETOOTH_DEVICE_INFO *pbtdi None,DWORD *pcServices None,GUID *pGuidServices None)
DWORD None bthprops.BluetoothGetDeviceInfo(HANDLE hRadio None,BLUETOOTH_DEVICE_INFO *pbtdi None)
DWORD None bthprops.BluetoothGetRadioInfo(HANDLE hRadio None,PBLUETOOTH_RADIO_INFO pRadioInfo None)
DWORD None bthprops.BluetoothRegisterForAuthentication(BLUETOOTH_DEVICE_INFO *pbtdi None,HBLUETOOTH_AUTHENTICATION_REGISTRATION *phRegHandle None,PFN_AUTHENTICATION_CALLBACK pfnCallback None,PVOID pvParam None)
DWORD None bthprops.BluetoothRemoveDevice(BLUETOOTH_ADDRESS *pAddress None)
DWORD None bthprops.BluetoothSdpGetAttributeValue(_In_ LPBYTE pRecordStream,_In_ ULONG cbRecordLength,_In_ USHORT usAttributeId,_Out_ PSDP_ELEMENT_DATA pAttributeData)
DWORD None bthprops.BluetoothSdpGetContainerElementData(_In_ LPBYTE pContainerStream,_In_ ULONG cbContainerLength,_Inout_ HBLUETOOTH_CONTAINER_ELEMENT *pElement,_Out_ PSDP_ELEMENT_DATA pData)
DWORD None bthprops.BluetoothSdpGetElementData(_In_ LPBYTE pSdpStream,_In_ ULONG cbSpdStreamLength,_Out_ PSDP_ELEMENT_DATA pData)
DWORD None bthprops.BluetoothSdpGetString(_In_ LPBYTE pRecordStream,_In_ ULONG cbRecordLength,_In_ PSDP_STRING_DATA_TYPE pStringData,_In_ USHORT usStringOffset,_Out_ PWCHAR pszString,_Inout_ PULONG pcchStringLength)
DWORD None bthprops.BluetoothSendAuthenticationResponse(HANDLE hRadio None,BLUETOOTH_DEVICE_INFO *pbtdi None,LPWSTR pszPasskey None)
DWORD None bthprops.BluetoothSetServiceState(HANDLE hRadio None,BLUETOOTH_DEVICE_INFO *pbtdi None,GUID *pGuidService None,DWORD dwServiceFlags None)
DWORD None bthprops.BluetoothUpdateDeviceRecord(BLUETOOTH_DEVICE_INFO *pbtdi None)
DWORD None c_g18030.BytesToUnicode(_In_ BYTE *lpMultiByteStr,_In_ UINT cchMultiByte,_Out_ UINT *pcchLeftOverBytes,_In_ LPWSTR lpWideCharStr,_In_ UINT cchWideChar)
DWORD None c_g18030.UnicodeToBytes(_In_ LPWSTR lpWideCharStr,_In_ UINT cchWideChar,_In_ LPSTR lpMultiByteStr,_In_ UINT cchMultiByte)
DWORD None clusapi.DestroyClusterGroup(_In_ HGROUP hGroup)
DWORD None clusapi.DestroyCluster(_In_ HCLUSTER hCluster,_In_opt_ PCLUSTER_SETUP_PROGRESS_CALLBACK pfnProgressCallback,_In_opt_ PVOID pvCallbackArg,_In_ BOOL fdeleteVirtualComputerObjects)
DWORD None credui.CredUIReadSSOCredW(_In_ PCWSTR pszRealm,_Out_ PWSTR *ppszUsername)
DWORD None credui.CredUIStoreSSOCredW(_In_ PCWSTR pszRealm,_In_ PCWSTR pszUsername,_In_ PCWSTR pszPassword,_In_ BOOL bPersist)
DWORD None cryptdlg.GetFriendlyNameOfCertA(_In_ PCCERT_CONTEXT pccert,_Out_ LPTSTR pchBuffer,_In_ DWORD cchBuffer)
DWORD None cryptdlg.GetFriendlyNameOfCert(_In_ PCCERT_CONTEXT pccert,_Out_ LPTSTR pchBuffer,_In_ DWORD cchBuffer)
DWORD None cryptdlg.GetFriendlyNameOfCertW(_In_ PCCERT_CONTEXT pccert,_Out_ LPTSTR pchBuffer,_In_ DWORD cchBuffer)
DWORD None cscapi.OfflineFilesEnable(_In_ BOOL bEnable,_Out_ BOOL *pbRebootRequired)
DWORD None cscapi.OfflineFilesQueryStatusEx(_Out_ BOOL *pbActive,_Out_ BOOL *pbEnabled,_Out_ BOOL *pbAvailable)
DWORD None cscapi.OfflineFilesQueryStatus(_Out_ BOOL *pbActive,_Out_ BOOL *pbEnabled)
DWORD None dhcpsapi.DhcpAddServer(_In_ DWORD Flags,_In_ LPVOID IdInfo,_In_ LPDHCP_SERVER_INFO NewServer,_In_ LPVOID CallbackFn,_In_ LPVOID CallbackData)
DWORD None dhcpsapi.DhcpAddSubnetElementV6(_In_ LPWSTR ServerIpAddress,_In_ DHCP_IPV6_ADDRESS SubnetAddress,_In_ LDHCP_SUBNET_ELEMENT_DATA_V6 *AddElementInfo)
DWORD None dhcpsapi.DhcpAuditLogGetParams(_In_ LPWSTR ServerIpAddress,_In_ DWORD Flags,_Out_ LPWSTR *AuditLogDir,_Out_ DWORD *DiskCheckInterval,_Out_ DWORD *MaxLogFilesSize,_Out_ DWORD *MinSpaceOnDisk)
DWORD None dhcpsapi.DhcpAuditLogSetParams(_In_ LPWSTR ServerIpAddress,_In_ DWORD Flags,_In_ LPWSTR AuditLogDir,_In_ DWORD DiskCheckInterval,_In_ DWORD MaxLogFilesSize,_In_ DWORD MinSpaceOnDisk)
DWORD None dhcpsapi.DhcpCreateClass(_In_ LPWSTR ServerIpAddress,_In_ DWORD ReservedMustBeZero,_In_ LPDHCP_CLASS_INFO ClassInfo)
DWORD None dhcpsapi.DhcpCreateOptionV5(_In_ LPWSTR ServerIpAddress,_In_ DWORD Flags,_In_ DHCP_OPTION_ID OptionId,_In_opt_ LPWSTR ClassName,_In_opt_ LPWSTR VendorName,_In_ LPDHCP_OPTION OptionInfo)
DWORD None dhcpsapi.DhcpCreateOptionV6(_In_ LPWSTR ServerIpAddress,_In_ DWORD Flags,_In_ DHCP_OPTION_ID OptionId,_In_opt_ WCHAR *ClassName,_In_opt_ WCHAR *VendorName,_In_ LPDHCP_OPTION OptionInfo)
DWORD None dhcpsapi.DhcpDeleteClass(_In_ LPWSTR ServerIpAddress,_In_ DWORD ReservedMustBeZero,_In_ LPWSTR ClassName)
DWORD None dhcpsapi.DhcpDeleteServer(_In_ DWORD Flags,_In_ LPVOID IdInfo,_In_ LPDHCP_SERVER_INFO NewServer,_In_ LPVOID CallbackFn,_In_ LPVOID CallbackData)
DWORD None dhcpsapi.DhcpEnumClasses(_In_ LPWSTR ServerIpAddress,_In_ DWORD ReservedMustBeZero,_Inout_ DHCP_RESUME_HANDLE *ResumeHandle,_In_ DWORD PreferredMaximum,_Out_ LPDHCP_CLASS_INFO_ARRAY *ClassInfoArray,_Out_ DWORD *nRead,_Out_ DWORD *nTotal)
DWORD None dhcpsapi.DhcpEnumOptionsV5(_In_ LPWSTR ServerIpAddress,_In_ DWORD Flags,_In_ LPWSTR ClassName,_In_ LPWSTR VendorName,_Inout_ DHCP_RESUME_HANDLE *ResumeHandle,_In_ DWORD PreferredMaximum,_Out_ LPDHCP_OPTION_ARRAY *Options,_Out_ DWORD *OptionsRead,_Out_ DWORD *OptionsTotal)
DWORD None dhcpsapi.DhcpEnumOptionsV6(_In_ LPWSTR ServerIpAddress,_In_ DWORD Flags,_In_ WCHAR *ClassName,_In_ WCHAR *VendorName,_Inout_ DHCP_RESUME_HANDLE *ResumeHandle,_In_ DWORD PreferredMaximum,_Out_ LPDHCP_OPTION_ARRAY *Options,_Out_ DWORD *OptionsRead,_Out_ DWORD *OptionsTotal)
DWORD None dhcpsapi.DhcpEnumOptionValuesV5(_In_ LPWSTR ServerIpAddress,_In_ DWORD Flags,_In_ LPWSTR ClassName,_In_ LPWSTR VendorName,_In_ LPDHCP_OPTION_SCOPE_INFO ScopeInfo,_Inout_ DHCP_RESUME_HANDLE *ResumeHandle,_In_ DWORD PreferredMaximum,_Out_ LPDHCP_OPTION_VALUE_ARRAY *OptionValues,_Out_ DWORD *OptionsRead,_Out_ DWORD *OptionsTotal)
DWORD None dhcpsapi.DhcpEnumOptionValuesV6(_In_ LPWSTR ServerIpAddress,_In_ DWORD Flags,_In_ WCHAR *ClassName,_In_ WCHAR *VendorName,_In_ DHCP_OPTION_SCOPE_INFO6 ScopeInfo,_Inout_ DHCP_RESUME_HANDLE *ResumeHandle,_In_ DWORD PreferredMaximum,_Out_ LPDHCP_OPTION_VALUE_ARRAY *OptionValues,_Out_ DWORD *OptionsRead,_Out_ DWORD *OptionsTotal)
DWORD None dhcpsapi.DhcpEnumServers(_In_ DWORD Flags,_In_ LPVOID IdInfo,_Out_ LPDHCP_SERVER_INFO_ARRAY *Servers,_In_ LPVOID CallbackFn,_In_ LPVOID CallbackData)
DWORD None dhcpsapi.DhcpGetAllOptions(_In_ LPWSTR ServerIpAddress,_In_ DWORD Flags,_Out_ LPDHCP_ALL_OPTIONS *OptionStruct)
DWORD None dhcpsapi.DhcpGetAllOptionsV6(_In_ LPWSTR ServerIpAddress,_In_ DWORD Flags,_Out_ LPDHCP_ALL_OPTIONS *OptionStruct)
DWORD None dhcpsapi.DhcpGetAllOptionValues(_In_ LPWSTR ServerIpAddress,_In_ DWORD Flags,_In_ LPDHCP_OPTION_SCOPE_INFO ScopeInfo,_Out_ LPDHCP_ALL_OPTION_VALUES *Values)
DWORD None dhcpsapi.DhcpGetAllOptionValuesV6(_In_ LPWSTR ServerIpAddress,_In_ DWORD Flags,_In_ LPDHCP_OPTION_SCOPE_INFO6 ScopeInfo,_Out_ LPDHCP_ALL_OPTION_VALUES *Values)
DWORD None dhcpsapi.DhcpGetClassInfo(_In_ LPWSTR ServerIpAddress,_In_ DWORD ReservedMustBeZero,_In_ LPDHCP_CLASS_INFO PartialClassInfo,_Out_ LPDHCP_CLASS_INFO *FilledClassInfo)
DWORD None dhcpsapi.DhcpGetOptionInfoV5(_In_ LPWSTR ServerIpAddress,_In_ DWORD Flags,_In_ DHCP_OPTION_ID OptionID,_In_ LPWSTR ClassName,_In_ LPWSTR VendorName,_Out_ LPDHCP_OPTION *OptionInfo)
DWORD None dhcpsapi.DhcpGetOptionInfoV6(_In_ LPWSTR ServerIpAddress,_In_ DWORD Flags,_In_ DHCP_OPTION_ID OptionID,_In_ WCHAR *ClassName,_In_ WCHAR *VendorName,_Out_ LPDHCP_OPTION *OptionInfo)
DWORD None dhcpsapi.DhcpGetThreadOptions(_Out_ LPDWORD pFlags,_Out_ LPVOID Reserved)
DWORD None dhcpsapi.DhcpModifyClass(_In_ LPWSTR ServerIpAddress,_In_ DWORD ReservedMustBeZero,_In_ LPDHCP_CLASS_INFO ClassInfo)
DWORD None dhcpsapi.DhcpRemoveOptionV5(_In_ LPWSTR ServerIpAddress,_In_ DWORD Flags,_In_ DHCP_OPTION_ID OptionID,_In_ LPWSTR ClassName,_In_ LPWSTR VendorName)
DWORD None dhcpsapi.DhcpRemoveOptionV6(_In_ LPWSTR ServerIpAddress,_In_ DWORD Flags,_In_ DHCP_OPTION_ID OptionID,_In_ WCHAR *ClassName,_In_ WCHAR *VendorName)
DWORD None dhcpsapi.DhcpRemoveOptionValueV6(_In_ LPWSTR ServerIpAddress,_In_ DWORD Flags,_In_ DHCP_OPTION_ID OptionID,_In_ WCHAR *ClassName,_In_ WCHAR *VendorName,_In_ DHCP_OPTION_SCOPE_INFO6 ScopeInfo)
DWORD None dhcpsapi.DhcpServerBackupDatabase(_In_ LPWSTR ServerIpAddress,_In_ LPWSTR Path)
DWORD None dhcpsapi.DhcpServerQueryAttribute(_In_ LPWSTR ServerIpAddr,_In_ ULONG dwReserved,_In_ DHCP_ATTRIB_ID DhcpAttribId,_Out_ LPDHCP_ATTRIB *pDhcpAttrib)
DWORD None dhcpsapi.DhcpServerRedoAuthorization(_In_ LPWSTR ServerIpAddr,_In_ ULONG dwReserved)
DWORD None dhcpsapi.DhcpServerRestoreDatabase(_In_ LPWSTR ServerIpAddress,_In_ LPWSTR Path)
DWORD None dhcpsapi.DhcpSetOptionInfoV5(_In_ LPWSTR ServerIpAddress,_In_ DWORD Flags,_In_ DHCP_OPTION_ID OptionID,_In_ LPWSTR *ClassName,_In_ LPWSTR *VendorName,_In_ LPDHCP_OPTION OptionInfo)
DWORD None dhcpsapi.DhcpSetOptionInfoV6(_In_ LPWSTR ServerIpAddress,_In_ DWORD Flags,_In_ DHCP_OPTION_ID OptionID,_In_ WCHAR *ClassName,_In_ WCHAR *VendorName,_In_ LPDHCP_OPTION OptionInfo)
DWORD None dhcpsapi.DhcpSetOptionValueV6(_In_ LPWSTR ServerIpAddress,_In_ DWORD Flags,_In_ DHCP_OPTION_ID OptionId,_In_ WCHAR *ClassName,_In_ WCHAR *VendorName,_In_ LDHCP_OPTION_SCOPE_INFO6 ScopeInfo,_In_ LDHCP_OPTION_DATA OptionValue)
DWORD None dhcpsapi.DhcpSetThreadOptions(_In_ DWORD Flags,_In_ LPVOID Reserved)
DWORD None firewallapi.NetworkIsolationGetAppContainerConfig(_Out_ DWORD *pdwNumPublicAppCs,_Out_ PSID_AND_ATTRIBUTES *appContainerSids)
DWORD None fwpuclnt.IPsecSaContextDeleteById0(_In_ HANDLE engineHandle,_In_ UINT64 id)
DWORD None fwpuclnt.IPsecSaContextDestroyEnumHandle0(_In_ HANDLE engineHandle,_In_ HANDLE enumHandle)
DWORD None fwpuclnt.IPsecSaContextEnum0(_In_ HANDLE engineHandle,_In_ HANDLE enumHandle,_In_ UINT32 numEntriesRequested,_Out_ IPSEC_SA_CONTEXT0 ***entries,_Out_ UINT32 *numEntriesReturned)
DWORD None fwpuclnt.IPsecSaContextEnum1(_In_ HANDLE engineHandle,_In_ HANDLE enumHandle,_In_ UINT32 numEntriesRequested,_Out_ IPSEC_SA_CONTEXT1 ***entries,_Out_ UINT32 *numEntriesReturned)
DWORD None fwpuclnt.IPsecSaContextExpire0(_In_ HANDLE engineHandle,_In_ UINT64 id)
DWORD None fwpuclnt.IPsecSaContextGetById0(_In_ HANDLE engineHandle,_In_ UINT64 id,_Out_ IPSEC_SA_CONTEXT0 **saContext)
DWORD None fwpuclnt.IPsecSaContextGetById1(_In_ HANDLE engineHandle,_In_ UINT64 id,_Out_ IPSEC_SA_CONTEXT1 **saContext)
DWORD None fwpuclnt.IPsecSaDbGetSecurityInfo0(_In_ HANDLE engineHandle,_In_ SECURITY_INFORMATION securityInfo,_Out_opt_ PSID *sidOwner,_Out_opt_ PSID *sidGroup,_Out_opt_ PACL *dacl,_Out_opt_ PACL *sacl,_Out_ PSECURITY_DESCRIPTOR *securityDescriptor)
DWORD None gdi32.GetFontLanguageInfo(_In_ HDC hdc)
DWORD None gdi32.GetFontUnicodeRanges(_In_ HDC hdc,_Out_ LPGLYPHSET lpgs)
DWORD None gdi32.GetGlyphIndicesA(_In_ HDC hdc,_In_ LPCTSTR lpstr,_In_ int c,_Out_ LPWORD pgi,_In_ DWORD fl)
DWORD None gdi32.GetGlyphIndices(_In_ HDC hdc,_In_ LPCTSTR lpstr,_In_ int c,_Out_ LPWORD pgi,_In_ DWORD fl)
DWORD None gdi32.GetGlyphIndicesW(_In_ HDC hdc,_In_ LPCTSTR lpstr,_In_ int c,_Out_ LPWORD pgi,_In_ DWORD fl)
DWORD None gdi32.GetRegionData(_In_ HRGN hRgn,_In_ DWORD dwCount,_Out_ LPRGNDATA lpRgnData)
DWORD None imm32.ImmGetCandidateListA(_In_ HIMC hIMC,_In_ DWORD dwIndex,_Out_opt_ LPCANDIDATELIST lpCandList,_In_ DWORD dwBufLen)
DWORD None imm32.ImmGetCandidateListCountA(_In_ HIMC hIMC,_Out_ LPDWORD lpdwListCount)
DWORD None imm32.ImmGetCandidateListCount(_In_ HIMC hIMC,_Out_ LPDWORD lpdwListCount)
DWORD None imm32.ImmGetCandidateListCountW(_In_ HIMC hIMC,_Out_ LPDWORD lpdwListCount)
DWORD None imm32.ImmGetCandidateList(_In_ HIMC hIMC,_In_ DWORD dwIndex,_Out_opt_ LPCANDIDATELIST lpCandList,_In_ DWORD dwBufLen)
DWORD None imm32.ImmGetCandidateListW(_In_ HIMC hIMC,_In_ DWORD dwIndex,_Out_opt_ LPCANDIDATELIST lpCandList,_In_ DWORD dwBufLen)
DWORD None imm32.ImmGetConversionListA(_In_ HKL hKL,_In_ HIMC hIMC,_In_ LPCTSTR lpSrc,_Out_ LPCANDIDATELIST lpDst,_In_ DWORD dwBufLen,_In_ UINT uFlag)
DWORD None imm32.ImmGetConversionList(_In_ HKL hKL,_In_ HIMC hIMC,_In_ LPCTSTR lpSrc,_Out_ LPCANDIDATELIST lpDst,_In_ DWORD dwBufLen,_In_ UINT uFlag)
DWORD None imm32.ImmGetConversionListW(_In_ HKL hKL,_In_ HIMC hIMC,_In_ LPCTSTR lpSrc,_Out_ LPCANDIDATELIST lpDst,_In_ DWORD dwBufLen,_In_ UINT uFlag)
DWORD None imm32.ImmGetGuideLineA(_In_ HIMC hIMC,_In_ DWORD dwIndex,_Out_opt_ LPTSTR lpBuf,_In_ DWORD dwBufLen)
DWORD None imm32.ImmGetGuideLine(_In_ HIMC hIMC,_In_ DWORD dwIndex,_Out_opt_ LPTSTR lpBuf,_In_ DWORD dwBufLen)
DWORD None imm32.ImmGetGuideLineW(_In_ HIMC hIMC,_In_ DWORD dwIndex,_Out_opt_ LPTSTR lpBuf,_In_ DWORD dwBufLen)
DWORD None imm32.ImmGetImeMenuItemsA(_In_ HIMC hIMC,_In_ DWORD dwFlags,_In_ DWORD dwType,_Out_opt_ LPIMEMENUITEMINFO lpImeParentMenu,_Out_opt_ LPIMEMENUITEMINFO lpImeMenu,_In_ DWORD dwSize)
DWORD None imm32.ImmGetImeMenuItems(_In_ HIMC hIMC,_In_ DWORD dwFlags,_In_ DWORD dwType,_Out_opt_ LPIMEMENUITEMINFO lpImeParentMenu,_Out_opt_ LPIMEMENUITEMINFO lpImeMenu,_In_ DWORD dwSize)
DWORD None imm32.ImmGetImeMenuItemsW(_In_ HIMC hIMC,_In_ DWORD dwFlags,_In_ DWORD dwType,_Out_opt_ LPIMEMENUITEMINFO lpImeParentMenu,_Out_opt_ LPIMEMENUITEMINFO lpImeMenu,_In_ DWORD dwSize)
DWORD None imm32.ImmGetProperty(_In_ HKL hKL,_In_ DWORD fdwIndex)
DWORD None iphlpapi.AddIPAddress(_In_ IPAddr Address,_In_ IPMask IpMask,_In_ DWORD IfIndex,_Out_ PULONG NTEContext,_Out_ PULONG NTEInstance)
DWORD None iphlpapi.CreateIpForwardEntry(_In_ PMIB_IPFORWARDROW pRoute)
DWORD None iphlpapi.CreateIpNetEntry(_In_ PMIB_IPNETROW pArpEntry)
DWORD None iphlpapi.CreateProxyArpEntry(_In_ DWORD dwAddress,_In_ DWORD dwMask,_In_ DWORD dwIfIndex)
DWORD None iphlpapi.DeleteIPAddress(_In_ ULONG NTEContext)
DWORD None iphlpapi.DeleteIpForwardEntry(_In_ PMIB_IPFORWARDROW pRoute)
DWORD None iphlpapi.DeleteIpNetEntry(_In_ PMIB_IPNETROW pArpEntry)
DWORD None iphlpapi.DeleteProxyArpEntry(_In_ DWORD dwAddress,_In_ DWORD dwMask,_In_ DWORD dwIfIndex)
DWORD None iphlpapi.DisableMediaSense(HANDLE *pHandle None,OVERLAPPED *pOverlapped None)
DWORD None iphlpapi.FlushIpNetTable(_In_ DWORD dwIfIndex)
DWORD None iphlpapi.GetAdapterIndex(_In_ LPWSTR AdapterName,_Inout_ PULONG IfIndex)
DWORD None iphlpapi.GetAdaptersInfo(_Out_ PIP_ADAPTER_INFO pAdapterInfo,_Inout_ PULONG pOutBufLen)
DWORD None iphlpapi.GetBestInterface(_In_ IPAddr dwDestAddr,_Out_ PDWORD pdwBestIfIndex)
DWORD None iphlpapi.GetBestRoute(_In_ DWORD dwDestAddr,_In_ DWORD dwSourceAddr,_Out_ PMIB_IPFORWARDROW pBestRoute)
DWORD None iphlpapi.GetExtendedTcpTable(_Out_ PVOID pTcpTable,_Inout_ PDWORD pdwSize,_In_ BOOL bOrder,_In_ ULONG ulAf,_In_ TCP_TABLE_CLASS TableClass,_In_ ULONG Reserved)
DWORD None iphlpapi.GetExtendedUdpTable(_Out_ PVOID pUdpTable,_Inout_ PDWORD pdwSize,_In_ BOOL bOrder,_In_ ULONG ulAf,_In_ UDP_TABLE_CLASS TableClass,_In_ ULONG Reserved)
DWORD None iphlpapi.GetFriendlyIfIndex(_In_ DWORD IfIndex)
DWORD None iphlpapi.GetIcmpStatisticsEx(_Out_ PMIB_ICMP_EX pStats,_In_ DWORD dwFamily)
DWORD None iphlpapi.GetIcmpStatistics(_Out_ PMIB_ICMP pStats)
DWORD None iphlpapi.GetIfEntry(_Inout_ PMIB_IFROW pIfRow)
DWORD None iphlpapi.GetIfTable(_Out_ PMIB_IFTABLE pIfTable,_Inout_ PULONG pdwSize,_In_ BOOL bOrder)
DWORD None iphlpapi.GetInterfaceInfo(_Out_ PIP_INTERFACE_INFO pIfTable,_Inout_ PULONG dwOutBufLen)
DWORD None iphlpapi.GetIpAddrTable(_Out_ PMIB_IPADDRTABLE pIpAddrTable,_Inout_ PULONG pdwSize,_In_ BOOL bOrder)
DWORD None iphlpapi.GetIpErrorString(_In_ IP_STATUS ErrorCode,_Out_ PWCHAR Buffer,_Inout_ PDWORD Size)
DWORD None iphlpapi.GetIpForwardTable(_Out_ PMIB_IPFORWARDTABLE pIpForwardTable,_Inout_ PULONG pdwSize,_In_ BOOL bOrder)
DWORD None iphlpapi.GetIpNetTable(_Out_ PMIB_IPNETTABLE pIpNetTable,_Inout_ PULONG pdwSize,_In_ BOOL bOrder)
DWORD None iphlpapi.GetIpStatisticsEx(_Out_ PMIB_IPSTATS pStats,_In_ DWORD dwFamily)
DWORD None iphlpapi.GetIpStatistics(_Out_ PMIB_IPSTATS pStats)
DWORD None iphlpapi.GetNetworkParams(_Out_ PFIXED_INFO pFixedInfo,_In_ PULONG pOutBufLen)
DWORD None iphlpapi.GetNumberOfInterfaces(_Out_ PDWORD pdwNumIf)
DWORD None iphlpapi.GetOwnerModuleFromTcp6Entry(_In_ PMIB_TCP6ROW_OWNER_MODULE pTcpEntry,_In_ TCPIP_OWNER_MODULE_INFO_CLASS Class,_Out_ PVOID Buffer,_Inout_ PDWORD pdwSize)
DWORD None iphlpapi.GetOwnerModuleFromTcpEntry(_In_ PMIB_TCPROW_OWNER_MODULE pTcpEntry,_In_ TCPIP_OWNER_MODULE_INFO_CLASS Class,_Out_ PVOID Buffer,_Inout_ PDWORD pdwSize)
DWORD None iphlpapi.GetOwnerModuleFromUdp6Entry(_In_ PMIB_UDP6ROW_OWNER_MODULE pUdpEntry,_In_ TCPIP_OWNER_MODULE_INFO_CLASS Class,_Out_ PVOID Buffer,_Inout_ PDWORD pdwSize)
DWORD None iphlpapi.GetOwnerModuleFromUdpEntry(_In_ PMIB_UDPROW_OWNER_MODULE pUdpEntry,_In_ TCPIP_OWNER_MODULE_INFO_CLASS Class,_Out_ PVOID Buffer,_Inout_ PDWORD pdwSize)
DWORD None iphlpapi.GetPerAdapterInfo(_In_ ULONG IfIndex,_Out_ PIP_PER_ADAPTER_INFO pPerAdapterInfo,_In_ PULONG pOutBufLen)
DWORD None iphlpapi.GetTcpStatisticsEx2(_Out_ PMIB_TCPSTATS2 pStats,_In_ DWORD dwFamily)
DWORD None iphlpapi.GetTcpStatisticsEx(_Out_ PMIB_TCPSTATS pStats,_In_ DWORD dwFamily)
DWORD None iphlpapi.GetTcpStatistics(_Out_ PMIB_TCPSTATS pStats)
DWORD None iphlpapi.GetUdpStatisticsEx2(_Out_ PMIB_UDPSTATS2 Statistics,_In_ ULONG Family)
DWORD None iphlpapi.GetUdpStatisticsEx(_Out_ PMIB_UDPSTATS pStats,_In_ DWORD dwFamily)
DWORD None iphlpapi.GetUdpStatistics(_Out_ PMIB_UDPSTATS pStats)
DWORD None iphlpapi.GetUdpTable(_Out_ PMIB_UDPTABLE pUdpTable,_Inout_ PDWORD pdwSize,_In_ BOOL bOrder)
DWORD None iphlpapi.GetUniDirectionalAdapterInfo(_Out_ PIP_UNIDIRECTIONAL_ADAPTER_ADDRESS pIPIfInfo,_Out_ PULONG dwOutBufLen)
DWORD None iphlpapi.Icmp6ParseReplies(_In_ LPVOID ReplyBuffer,_In_ DWORD ReplySize)
DWORD None iphlpapi.IcmpParseReplies(_In_ LPVOID ReplyBuffer,_In_ DWORD ReplySize)
DWORD None iphlpapi.IcmpSendEcho(_In_ HANDLE IcmpHandle,_In_ IPAddr DestinationAddress,_In_ LPVOID RequestData,_In_ WORD RequestSize,_In_opt_ PIP_OPTION_INFORMATION RequestOptions,_Out_ LPVOID ReplyBuffer,_In_ DWORD ReplySize,_In_ DWORD Timeout)
DWORD None iphlpapi.IpReleaseAddress(_In_ PIP_ADAPTER_INDEX_MAP AdapterInfo)
DWORD None iphlpapi.IpRenewAddress(_In_ PIP_ADAPTER_INDEX_MAP AdapterInfo)
DWORD None iphlpapi.NhpAllocateAndGetInterfaceInfoFromStack(IP_INTERFACE_NAME_INFO ppTable None,PDWORD pdwCount None,BOOL bOrder None,HANDLE hHeap None,DWORD dwFlags None)
DWORD None iphlpapi.NotifyAddrChange(_Out_ PHANDLE Handle,_In_ LPOVERLAPPED overlapped)
DWORD None iphlpapi.NotifyRouteChange(_Out_ PHANDLE Handle,_In_ LPOVERLAPPED overlapped)
DWORD None iphlpapi.RestoreMediaSense(OVERLAPPED *pOverlapped None,LPDWORD lpdwEnableCount None)
DWORD None iphlpapi.SendARP(_In_ IPAddr DestIP,_In_ IPAddr SrcIP,_Out_ PULONG pMacAddr,_Inout_ PULONG PhyAddrLen)
DWORD None iphlpapi.SetIfEntry(_In_ PMIB_IFROW pIfRow)
DWORD None iphlpapi.SetIpForwardEntry(_In_ PMIB_IPFORWARDROW pRoute)
DWORD None iphlpapi.SetIpNetEntry(_In_ PMIB_IPNETROW pArpEntry)
DWORD None iphlpapi.SetIpTTL(_In_ UINT nTTL)
DWORD None iphlpapi.SetTcpEntry(_In_ PMIB_TCPROW pTcpRow)
DWORD None kernel32.CreateTapePartition(_In_ HANDLE hDevice,_In_ DWORD dwPartitionMethod,_In_ DWORD dwCount,_In_ DWORD dwSize)
DWORD None kernel32.EraseTape(_In_ HANDLE hDevice,_In_ DWORD dwEraseType,_In_ BOOL bImmediate)
DWORD None kernel32.GetActiveProcessorCount(_In_ WORD GroupNumber)
DWORD None kernel32.GetMaximumProcessorCount(_In_ WORD GroupNumber)
DWORD None kernel32.GetTapeParameters(_In_ HANDLE hDevice,_In_ DWORD dwOperation,_Out_ LPDWORD lpdwSize,_Out_ LPVOID lpTapeInformation)
DWORD None kernel32.GetTapePosition(_In_ HANDLE hDevice,_In_ DWORD dwPositionType,_Out_ LPDWORD lpdwPartition,_Out_ LPDWORD lpdwOffsetLow,_Out_ LPDWORD lpdwOffsetHigh)
DWORD None kernel32.GetTapeStatus(_In_ HANDLE hDevice)
DWORD None kernel32.GetThreadErrorMode(void None None)
DWORD None kernel32.IsValidNLSVersion(_In_ NLS_FUNCTION function,_In_opt_ LPCWSTR lpLocaleName,_In_ LPNLSVERSIONINFOEX lpVersionInformation)
DWORD None kernel32.PrepareTape(_In_ HANDLE hDevice,_In_ DWORD dwOperation,_In_ BOOL bImmediate)
DWORD None kernel32.SetTapeParameters(_In_ HANDLE hDevice,_In_ DWORD dwOperation,_In_ LPVOID lpTapeInformation)
DWORD None kernel32.SetTapePosition(_In_ HANDLE hDevice,_In_ DWORD dwPositionMethod,_In_ DWORD dwPartition,_In_ DWORD dwOffsetLow,_In_ DWORD dwOffsetHigh,_In_ BOOL bImmediate)
DWORD None kernel32.WriteTapemark(_In_ HANDLE hDevice,_In_ DWORD dwTapemarkType,_In_ DWORD dwTapemarkCount,_In_ BOOL bImmediate)
DWORD None kernel32.WTSGetActiveConsoleSessionId(void None None)
DWORD None loadperf.LoadPerfCounterTextStringsA(_In_ LPCTSTR commandLine,_In_ BOOL bQuietModeArg)
DWORD None loadperf.LoadPerfCounterTextStrings(_In_ LPCTSTR commandLine,_In_ BOOL bQuietModeArg)
DWORD None loadperf.LoadPerfCounterTextStringsW(_In_ LPCTSTR commandLine,_In_ BOOL bQuietModeArg)
DWORD None loadperf.UnloadPerfCounterTextStringsA(_In_ LPCTSTR commandLine,_In_ BOOL bQuietModeArg)
DWORD None loadperf.UnloadPerfCounterTextStrings(_In_ LPCTSTR commandLine,_In_ BOOL bQuietModeArg)
DWORD None loadperf.UnloadPerfCounterTextStringsW(_In_ LPCTSTR commandLine,_In_ BOOL bQuietModeArg)
DWORD None mprapi.MprAdminBufferFree(_In_ LPVOID pBuffer)
DWORD None mprapi.MprAdminConnectionClearStats(_In_ RAS_SERVER_HANDLE hRasServer,_In_ HANDLE hRasConnection)
DWORD None mprapi.MprAdminConnectionEnum(_In_ RAS_SERVER_HANDLE hRasServer,_In_ DWORD dwLevel,_Out_ LPBYTE *lplpbBuffer,_In_ DWORD dwPrefMaxLen,_Out_ LPDWORD lpdwEntriesRead,_Out_ LPDWORD lpdwTotalEntries,_In_ LPDWORD lpdwResumeHandle)
DWORD None mprapi.MprAdminDeregisterConnectionNotification(_In_ MPR_SERVER_HANDLE hMprServer,_In_ HANDLE hEventNotification)
DWORD None mprapi.MprAdminEstablishDomainRasServer(_In_ PWCHAR pszDomain,_In_ PWCHAR pszMachine,_In_ BOOL bEnable)
DWORD None mprapi.MprAdminGetErrorString(_In_ DWORD dwError,_Out_ LPWSTR *lplpwsErrorString)
DWORD None mprapi.MprAdminInterfaceConnect(_In_ MPR_SERVER_HANDLE hMprServer,_In_ HANDLE hInterface,_In_ HANDLE hEvent,_In_ BOOL fSynchronous)
DWORD None mprapi.MprAdminInterfaceCreate(_In_ MPR_SERVER_HANDLE hMprServer,_In_ DWORD dwLevel,_In_ LPBYTE lpBuffer,_Out_ HANDLE *phInterface)
DWORD None mprapi.MprAdminInterfaceDelete(_In_ MPR_SERVER_HANDLE hMprServer,_In_ HANDLE hInterface)
DWORD None mprapi.MprAdminInterfaceDeviceGetInfo(_In_ MPR_SERVER_HANDLE hMprServer,_In_ HANDLE hInterface,_In_ DWORD dwIndex,_In_ DWORD dwLevel,_Out_ LPBYTE *lplpBuffer)
DWORD None mprapi.MprAdminInterfaceDeviceSetInfo(_In_ MPR_SERVER_HANDLE hMprServer,_In_ HANDLE hInterface,_In_ DWORD dwIndex,_In_ DWORD dwLevel,_In_ LPBYTE lplpBuffer)
DWORD None mprapi.MprAdminInterfaceDisconnect(_In_ MPR_SERVER_HANDLE hMprServer,_In_ HANDLE hInterface)
DWORD None mprapi.MprAdminInterfaceEnum(_In_ MPR_SERVER_HANDLE hMprServer,_In_ DWORD dwLevel,_Out_ LPBYTE *lplpbBuffer,_In_ DWORD dwPrefMaxLen,_Out_ LPDWORD lpdwEntriesRead,_Out_ LPDWORD lpdwTotalEntries,_In_ LPDWORD lpdwResumeHandle)
DWORD None mprapi.MprAdminInterfaceGetCredentialsEx(_In_ MPR_SERVER_HANDLE hMprServer,_In_ HANDLE hInterface,_In_ DWORD dwLevel,_Out_ LPBYTE *lplpbBuffer)
DWORD None mprapi.MprAdminInterfaceGetCredentials(_In_ LPWSTR lpwsServer,_In_ LPWSTR lpwsInterfaceName,_Out_ LPWSTR lpwsUserName,_Out_ LPWSTR lpwsPassword,_Out_ LPWSTR lpwsDomainName)
DWORD None mprapi.MprAdminInterfaceGetHandle(_In_ MPR_SERVER_HANDLE hMprServer,_In_ LPWSTR lpwsInterfaceName,_Out_ HANDLE *phInterface,_In_ BOOL fIncludeClientInterfaces)
DWORD None mprapi.MprAdminInterfaceGetInfo(_In_ MPR_SERVER_HANDLE hMprServer,_In_ HANDLE hInterface,_In_ DWORD dwLevel,_In_ LPBYTE *lplpbBuffer)
DWORD None mprapi.MprAdminInterfaceQueryUpdateResult(_In_ MPR_SERVER_HANDLE hMprServer,_In_ HANDLE hInterface,_In_ DWORD dwProtocolId,_Out_ LPDWORD lpdwUpdateResult)
DWORD None mprapi.MprAdminInterfaceSetCredentialsEx(_In_ MPR_SERVER_HANDLE hMprServer,_In_ HANDLE hInterface,_In_ DWORD dwLevel,_In_ LPBYTE lpbBuffer)
DWORD None mprapi.MprAdminInterfaceSetCredentials(_In_ LPWSTR lpwsServer,_In_ LPWSTR lpwsInterfaceName,_In_ LPWSTR lpwsUserName,_In_ LPWSTR lpwsDomainName,_In_ LPWSTR lpwsPassword)
DWORD None mprapi.MprAdminInterfaceSetInfo(_In_ MPR_SERVER_HANDLE hMprServer,_In_ HANDLE hInterface,_In_ DWORD dwLevel,_In_ LPBYTE lpbBuffer)
DWORD None mprapi.MprAdminInterfaceTransportAdd(_In_ MPR_SERVER_HANDLE hMprServer,_In_ HANDLE hInterface,_In_ DWORD dwTransportId,_In_ LPBYTE pInterfaceInfo,_In_ DWORD dwInterfaceInfoSize)
DWORD None mprapi.MprAdminInterfaceTransportGetInfo(_In_ MPR_SERVER_HANDLE hMprServer,_In_ HANDLE hInterface,_In_ DWORD dwTransportId,_Out_ LPBYTE *ppInterfaceInfo,_Out_opt_ LPDWORD lpdwInterfaceInfoSize)
DWORD None mprapi.MprAdminInterfaceTransportRemove(_In_ MPR_SERVER_HANDLE hMprServer,_In_ HANDLE hInterface,_In_ DWORD dwTransportId)
DWORD None mprapi.MprAdminInterfaceTransportSetInfo(_In_ MPR_SERVER_HANDLE hMprServer,_In_ HANDLE hInterface,_In_ DWORD dwTransportId,_In_ LPBYTE pInterfaceInfo,_In_ DWORD dwInterfaceInfoSize)
DWORD None mprapi.MprAdminInterfaceUpdatePhonebookInfo(_In_ MPR_SERVER_HANDLE hMprServer,_In_ HANDLE hInterface)
DWORD None mprapi.MprAdminIsDomainRasServer(_In_ PWCHAR pszDomain,_In_ PWCHAR pszMachine,_Out_ PBOOL pbIsRasServer)
DWORD None mprapi.MprAdminPortDisconnect(_In_ RAS_SERVER_HANDLE hRasServer,_In_ HANDLE hPort)
DWORD None mprapi.MprAdminPortEnum(_In_ RAS_SERVER_HANDLE hRasServer,_In_ DWORD dwLevel,_In_ HANDLE hConnection,_Out_ LPBYTE *lplpbBuffer,_In_ DWORD dwPrefMaxLen,_Out_ LPDWORD lpdwEntriesRead,_Out_ LPDWORD lpdwTotalEntries,_In_ LPDWORD lpdwResumeHandle)
DWORD None mprapi.MprAdminRegisterConnectionNotification(_In_ MPR_SERVER_HANDLE hMprServer,_In_ HANDLE hEventNotification)
DWORD None mprapi.MprAdminSendUserMessage(_In_ MPR_SERVER_HANDLE hMprServer,_In_ HANDLE hConnection,_In_ LPWSTR lpwszMessage)
DWORD None mprapi.MprAdminServerConnect(_In_opt_ LPWSTR lpwsServerName,_Out_ MPR_SERVER_HANDLE *phMprServer)
DWORD None mprapi.MprAdminServerGetCredentials(_In_ MPR_SERVER_HANDLE hMprServer,_In_ DWORD dwLevel,_Out_ LPBYTE *lplpbBuffer)
DWORD None mprapi.MprAdminServerSetCredentials(_In_ MPR_SERVER_HANDLE hMprServer,_In_ DWORD dwLevel,_In_ LPBYTE lpbBuffer)
DWORD None mprapi.MprAdminServerSetInfo(_In_ MPR_SERVER_HANDLE hMprServer,_In_ DWORD dwLevel,_In_ LPBYTE lpbBuffer)
DWORD None mprapi.MprAdminTransportCreate(_In_ MPR_SERVER_HANDLE hMprServer,_In_ DWORD dwTransportId,_In_opt_ LPWSTR lpwsTransportName,_In_ LPBYTE pGlobalInfo,_In_ DWORD dwGlobalInfoSize,_In_opt_ LPBYTE pClientInterfaceInfo,_In_opt_ DWORD dwClientInterfaceInfoSize,_In_ LPWSTR lpwsDLLPath)
DWORD None mprapi.MprAdminTransportGetInfo(_In_ MPR_SERVER_HANDLE hMprServer,_In_ DWORD dwTransportId,_Out_opt_ LPBYTE *ppGlobalInfo,_Out_opt_ LPDWORD lpdwGlobalInfoSize,_Out_opt_ LPBYTE *ppClientInterfaceInfo,_Out_opt_ LPDWORD lpdwClientInterfaceInfoSize)
DWORD None mprapi.MprAdminTransportSetInfo(_In_ MPR_SERVER_HANDLE hMprServer,_In_ DWORD dwTransportId,_In_opt_ LPBYTE pGlobalInfo,_In_ DWORD dwGlobalInfoSize,_In_opt_ LPBYTE pClientInterfaceInfo,_In_ DWORD dwClientInterfaceInfoSize)
DWORD None mprapi.MprConfigGetFriendlyName(_In_ HANDLE hMprConfig,_In_ PWCHAR pszGuidName,_Out_ PWCHAR pszBuffer,_In_ DWORD dwBufferSize)
DWORD None mprapi.MprConfigGetGuidName(_In_ HANDLE hMprConfig,_In_ PWCHAR pszFriendlyName,_Out_ PWCHAR pszBuffer,_In_ DWORD dwBufferSize)
DWORD None mprapi.MprConfigInterfaceCreate(_In_ HANDLE hMprConfig,_In_ DWORD dwLevel,_In_ LPBYTE lpbBuffer,_Out_ HANDLE *phRouterInterface)
DWORD None mprapi.MprConfigInterfaceDelete(_In_ HANDLE hMprConfig,_In_ HANDLE hRouterInterface)
DWORD None mprapi.MprConfigInterfaceEnum(_In_ HANDLE hMprConfig,_In_ DWORD dwLevel,_Inout_ LPBYTE *lplpBuffer,_In_ DWORD dwPrefMaxLen,_Out_ LPDWORD lpdwEntriesRead,_Out_ LPDWORD lpdwTotalEntries,_Inout_opt_ LPDWORD lpdwResumeHandle)
DWORD None mprapi.MprConfigInterfaceGetHandle(_In_ HANDLE hMprConfig,_In_ LPWSTR lpwsInterfaceName,_Out_ HANDLE *phRouterInterface)
DWORD None mprapi.MprConfigInterfaceGetInfo(_In_ HANDLE hMprConfig,_In_ HANDLE hRouterInterface,_In_ DWORD dwLevel,_Inout_ LPBYTE *lplpBuffer,_Out_ LPDWORD lpdwBufferSize)
DWORD None mprapi.MprConfigInterfaceSetInfo(_In_ HANDLE hMprConfig,_In_ HANDLE hRouterInterface,_In_ DWORD dwLevel,_In_ LPBYTE lpBuffer)
DWORD None mprapi.MprConfigInterfaceTransportEnum(_In_ HANDLE hMprConfig,_In_ HANDLE hRouterInterface,_In_ DWORD dwLevel,_Inout_ LPBYTE *lplpBuffer,_In_ DWORD dwPrefMaxLen,_Out_ LPDWORD lpdwEntriesRead,_Out_ LPDWORD lpdwTotalEntries,_Inout_opt_ LPDWORD lpdwResumeHandle)
DWORD None mprapi.MprConfigInterfaceTransportGetInfo(_In_ HANDLE hMprConfig,_In_ HANDLE hRouterInterface,_In_ HANDLE hRouterIfTransport,_Inout_opt_ LPBYTE *ppInterfaceInfo,_Out_opt_ LPDWORD lpdwInterfaceInfoSize)
DWORD None mprapi.MprConfigInterfaceTransportRemove(_In_ HANDLE hMprConfig,_In_ HANDLE hRouterInterface,_In_ HANDLE hRouterIfTransport)
DWORD None mprapi.MprConfigInterfaceTransportSetInfo(_In_ HANDLE hMprConfig,_In_ HANDLE hRouterInterface,_In_ HANDLE hRouterIfTransport,_In_opt_ LPBYTE pInterfaceInfo,_In_opt_ DWORD dwInterfaceInfoSize)
DWORD None mprapi.MprConfigServerBackup(_In_ HANDLE hMprConfig,_In_ LPWSTR lpwsPath)
DWORD None mprapi.MprConfigServerConnect(_In_ LPWSTR lpwsServerName,_Out_ HANDLE *phMprConfig)
DWORD None mprapi.MprConfigServerGetInfo(_In_ HANDLE hMprConfig,_In_ DWORD dwLevel,_Out_ LPBYTE *lplpBuffer)
DWORD None mprapi.MprConfigServerInstall(_In_ DWORD dwLevel,_In_ PVOID pBuffer)
DWORD None mprapi.MprConfigServerRestore(_In_ HANDLE hMprConfig,_In_ LPWSTR lpwsPath)
DWORD None mprapi.MprConfigServerSetInfo(_In_ MPR_SERVER_HANDLE hMprServer,_In_ DWORD dwLevel,_In_ LPBYTE lpbBuffer)
DWORD None mprapi.MprConfigTransportCreate(_In_ HANDLE hMprConfig,_In_ DWORD dwTransportId,_In_opt_ LPWSTR lpwsTransportName,_In_ LPBYTE pGlobalInfo,_In_ DWORD dwGlobalInfoSize,_In_opt_ LPBYTE pClientInterfaceInfo,_In_opt_ DWORD dwClientInterfaceInfoSize,_In_opt_ LPWSTR lpwsDLLPath,_Out_ HANDLE phRouterTransport)
DWORD None mprapi.MprConfigTransportDelete(_In_ HANDLE hMprConfig,_In_ HANDLE hRouterTransport)
DWORD None mprapi.MprConfigTransportEnum(_In_ HANDLE hMprConfig,_In_ DWORD dwLevel,_Inout_ LPBYTE *lplpBuffer,_In_ DWORD dwPrefMaxLen,_Out_ LPDWORD lpdwEntriesRead,_Out_ LPDWORD lpdwTotalEntries,_Inout_opt_ LPDWORD lpdwResumeHandle)
DWORD None mprapi.MprConfigTransportGetHandle(_In_ HANDLE hMprConfig,_In_ DWORD dwTransportId,_Out_ HANDLE *phRouterTransport)
DWORD None mprapi.MprConfigTransportGetInfo(_In_ HANDLE hMprConfig,_In_ HANDLE hRouterTransport,_Inout_opt_ LPBYTE *ppGlobalInfo,_Out_opt_ LPDWORD lpdwGlobalInfoSize,_Inout_opt_ LPBYTE *ppClientInterfaceInfo,_Out_opt_ LPDWORD lpdwClientInterfaceInfoSize,_Inout_opt_ LPWSTR *lplpwsDLLPath)
DWORD None mprapi.MprConfigTransportSetInfo(_In_ HANDLE hMprConfig,_In_ HANDLE hRouterTransport,_In_opt_ LPBYTE pGlobalInfo,_In_opt_ DWORD dwGlobalInfoSize,_In_opt_ LPBYTE pClientInterfaceInfo,_In_opt_ DWORD dwClientInterfaceInfoSize,_In_opt_ LPWSTR lpwsDLLPath)
DWORD None mpr.MultinetGetConnectionPerformanceA(_In_ LPNETRESOURCE lpNetResource,_Out_ LPNETCONNECTINFOSTRUCT lpNetConnectInfoStruct)
DWORD None mpr.MultinetGetConnectionPerformance(_In_ LPNETRESOURCE lpNetResource,_Out_ LPNETCONNECTINFOSTRUCT lpNetConnectInfoStruct)
DWORD None mpr.MultinetGetConnectionPerformanceW(_In_ LPNETRESOURCE lpNetResource,_Out_ LPNETCONNECTINFOSTRUCT lpNetConnectInfoStruct)
DWORD None mpr.WNetAddConnection2A(_In_ LPNETRESOURCE lpNetResource,_In_ LPCTSTR lpPassword,_In_ LPCTSTR lpUsername,_In_ DWORD dwFlags)
DWORD None mpr.WNetAddConnection2(_In_ LPNETRESOURCE lpNetResource,_In_ LPCTSTR lpPassword,_In_ LPCTSTR lpUsername,_In_ DWORD dwFlags)
DWORD None mpr.WNetAddConnection2W(_In_ LPNETRESOURCE lpNetResource,_In_ LPCTSTR lpPassword,_In_ LPCTSTR lpUsername,_In_ DWORD dwFlags)
DWORD None mpr.WNetAddConnection3A(_In_ HWND hwndOwner,_In_ LPNETRESOURCE lpNetResource,_In_ LPTSTR lpPassword,_In_ LPTSTR lpUserName,_In_ DWORD dwFlags)
DWORD None mpr.WNetAddConnection3(_In_ HWND hwndOwner,_In_ LPNETRESOURCE lpNetResource,_In_ LPTSTR lpPassword,_In_ LPTSTR lpUserName,_In_ DWORD dwFlags)
DWORD None mpr.WNetAddConnection3W(_In_ HWND hwndOwner,_In_ LPNETRESOURCE lpNetResource,_In_ LPTSTR lpPassword,_In_ LPTSTR lpUserName,_In_ DWORD dwFlags)
DWORD None mpr.WNetAddConnectionA(_In_ LPCTSTR lpRemoteName,_In_ LPCTSTR lpPassword,_In_ LPCTSTR lpLocalName)
DWORD None mpr.WNetAddConnection(_In_ LPCTSTR lpRemoteName,_In_ LPCTSTR lpPassword,_In_ LPCTSTR lpLocalName)
DWORD None mpr.WNetAddConnectionW(_In_ LPCTSTR lpRemoteName,_In_ LPCTSTR lpPassword,_In_ LPCTSTR lpLocalName)
DWORD None mpr.WNetCancelConnection2A(_In_ LPCTSTR lpName,_In_ DWORD dwFlags,_In_ BOOL fForce)
DWORD None mpr.WNetCancelConnection2(_In_ LPCTSTR lpName,_In_ DWORD dwFlags,_In_ BOOL fForce)
DWORD None mpr.WNetCancelConnection2W(_In_ LPCTSTR lpName,_In_ DWORD dwFlags,_In_ BOOL fForce)
DWORD None mpr.WNetCancelConnectionA(_In_ LPCTSTR lpName,_In_ BOOL fForce)
DWORD None mpr.WNetCancelConnection(_In_ LPCTSTR lpName,_In_ BOOL fForce)
DWORD None mpr.WNetCancelConnectionW(_In_ LPCTSTR lpName,_In_ BOOL fForce)
DWORD None mpr.WNetCloseEnum(_In_ HANDLE hEnum)
DWORD None mpr.WNetConnectionDialog1A(_Inout_ LPCONNECTDLGSTRUCT lpConnDlgStruct)
DWORD None mpr.WNetConnectionDialog1(_Inout_ LPCONNECTDLGSTRUCT lpConnDlgStruct)
DWORD None mpr.WNetConnectionDialog1W(_Inout_ LPCONNECTDLGSTRUCT lpConnDlgStruct)
DWORD None mpr.WNetConnectionDialog(_In_ HWND hwnd,_In_ DWORD dwType)
DWORD None mpr.WNetDisconnectDialog1A(_In_ LPDISCDLGSTRUCT lpConnDlgStruct)
DWORD None mpr.WNetDisconnectDialog1(_In_ LPDISCDLGSTRUCT lpConnDlgStruct)
DWORD None mpr.WNetDisconnectDialog1W(_In_ LPDISCDLGSTRUCT lpConnDlgStruct)
DWORD None mpr.WNetDisconnectDialog(_In_ HWND hwnd,_In_ DWORD dwType)
DWORD None mpr.WNetEnumResourceA(_In_ HANDLE hEnum,_Inout_ LPDWORD lpcCount,_Out_ LPVOID lpBuffer,_Inout_ LPDWORD lpBufferSize)
DWORD None mpr.WNetEnumResource(_In_ HANDLE hEnum,_Inout_ LPDWORD lpcCount,_Out_ LPVOID lpBuffer,_Inout_ LPDWORD lpBufferSize)
DWORD None mpr.WNetEnumResourceW(_In_ HANDLE hEnum,_Inout_ LPDWORD lpcCount,_Out_ LPVOID lpBuffer,_Inout_ LPDWORD lpBufferSize)
DWORD None mpr.WNetGetConnectionA(_In_ LPCTSTR lpLocalName,_Out_ LPTSTR lpRemoteName,_Inout_ LPDWORD lpnLength)
DWORD None mpr.WNetGetConnection(_In_ LPCTSTR lpLocalName,_Out_ LPTSTR lpRemoteName,_Inout_ LPDWORD lpnLength)
DWORD None mpr.WNetGetConnectionW(_In_ LPCTSTR lpLocalName,_Out_ LPTSTR lpRemoteName,_Inout_ LPDWORD lpnLength)
DWORD None mpr.WNetGetLastErrorA(_Out_ LPDWORD lpError,_Out_ LPTSTR lpErrorBuf,_In_ DWORD nErrorBufSize,_Out_ LPTSTR lpNameBuf,_In_ DWORD nNameBufSize)
DWORD None mpr.WNetGetLastError(_Out_ LPDWORD lpError,_Out_ LPTSTR lpErrorBuf,_In_ DWORD nErrorBufSize,_Out_ LPTSTR lpNameBuf,_In_ DWORD nNameBufSize)
DWORD None mpr.WNetGetLastErrorW(_Out_ LPDWORD lpError,_Out_ LPTSTR lpErrorBuf,_In_ DWORD nErrorBufSize,_Out_ LPTSTR lpNameBuf,_In_ DWORD nNameBufSize)
DWORD None mpr.WNetGetNetworkInformationA(_In_ LPCTSTR lpProvider,_Out_ LPNETINFOSTRUCT lpNetInfoStruct)
DWORD None mpr.WNetGetNetworkInformation(_In_ LPCTSTR lpProvider,_Out_ LPNETINFOSTRUCT lpNetInfoStruct)
DWORD None mpr.WNetGetNetworkInformationW(_In_ LPCTSTR lpProvider,_Out_ LPNETINFOSTRUCT lpNetInfoStruct)
DWORD None mpr.WNetGetProviderNameA(_In_ DWORD dwNetType,_Out_ LPTSTR lpProviderName,_Inout_ LPDWORD lpBufferSize)
DWORD None mpr.WNetGetProviderName(_In_ DWORD dwNetType,_Out_ LPTSTR lpProviderName,_Inout_ LPDWORD lpBufferSize)
DWORD None mpr.WNetGetProviderNameW(_In_ DWORD dwNetType,_Out_ LPTSTR lpProviderName,_Inout_ LPDWORD lpBufferSize)
DWORD None mpr.WNetGetResourceInformationA(_In_ LPNETRESOURCE lpNetResource,_Out_ LPVOID lpBuffer,_Inout_ LPDWORD lpcbBuffer,_Out_ LPTSTR *lplpSystem)
DWORD None mpr.WNetGetResourceInformation(_In_ LPNETRESOURCE lpNetResource,_Out_ LPVOID lpBuffer,_Inout_ LPDWORD lpcbBuffer,_Out_ LPTSTR *lplpSystem)
DWORD None mpr.WNetGetResourceInformationW(_In_ LPNETRESOURCE lpNetResource,_Out_ LPVOID lpBuffer,_Inout_ LPDWORD lpcbBuffer,_Out_ LPTSTR *lplpSystem)
DWORD None mpr.WNetGetResourceParentA(_In_ LPNETRESOURCE lpNetResource,_Out_ LPVOID lpBuffer,_Inout_ LPDWORD lpcbBuffer)
DWORD None mpr.WNetGetResourceParent(_In_ LPNETRESOURCE lpNetResource,_Out_ LPVOID lpBuffer,_Inout_ LPDWORD lpcbBuffer)
DWORD None mpr.WNetGetResourceParentW(_In_ LPNETRESOURCE lpNetResource,_Out_ LPVOID lpBuffer,_Inout_ LPDWORD lpcbBuffer)
DWORD None mpr.WNetGetUniversalNameA(_In_ LPCTSTR lpLocalPath,_In_ DWORD dwInfoLevel,_Out_ LPVOID lpBuffer,_Inout_ LPDWORD lpBufferSize)
DWORD None mpr.WNetGetUniversalName(_In_ LPCTSTR lpLocalPath,_In_ DWORD dwInfoLevel,_Out_ LPVOID lpBuffer,_Inout_ LPDWORD lpBufferSize)
DWORD None mpr.WNetGetUniversalNameW(_In_ LPCTSTR lpLocalPath,_In_ DWORD dwInfoLevel,_Out_ LPVOID lpBuffer,_Inout_ LPDWORD lpBufferSize)
DWORD None mpr.WNetGetUserA(_In_ LPCTSTR lpName,_Out_ LPTSTR lpUserName,_Inout_ LPDWORD lpnLength)
DWORD None mpr.WNetGetUser(_In_ LPCTSTR lpName,_Out_ LPTSTR lpUserName,_Inout_ LPDWORD lpnLength)
DWORD None mpr.WNetGetUserW(_In_ LPCTSTR lpName,_Out_ LPTSTR lpUserName,_Inout_ LPDWORD lpnLength)
DWORD None mpr.WNetOpenEnumA(_In_ DWORD dwScope,_In_ DWORD dwType,_In_ DWORD dwUsage,_In_ LPNETRESOURCE lpNetResource,_Out_ LPHANDLE lphEnum)
DWORD None mpr.WNetOpenEnum(_In_ DWORD dwScope,_In_ DWORD dwType,_In_ DWORD dwUsage,_In_ LPNETRESOURCE lpNetResource,_Out_ LPHANDLE lphEnum)
DWORD None mpr.WNetOpenEnumW(_In_ DWORD dwScope,_In_ DWORD dwType,_In_ DWORD dwUsage,_In_ LPNETRESOURCE lpNetResource,_Out_ LPHANDLE lphEnum)
DWORD None mpr.WNetRestoreConnectionW(_In_ HWND hwndParent,_In_ LPCWSTR lpDevice,BOOL fUseUI None)
DWORD None mpr.WNetUseConnectionA(_In_ HWND hwndOwner,_In_ LPNETRESOURCE lpNetResource,_In_ LPCTSTR lpPassword,_In_ LPCTSTR lpUserID,_In_ DWORD dwFlags,_Out_ LPTSTR lpAccessName,_Inout_ LPDWORD lpBufferSize,_Out_ LPDWORD lpResult)
DWORD None mpr.WNetUseConnection(_In_ HWND hwndOwner,_In_ LPNETRESOURCE lpNetResource,_In_ LPCTSTR lpPassword,_In_ LPCTSTR lpUserID,_In_ DWORD dwFlags,_Out_ LPTSTR lpAccessName,_Inout_ LPDWORD lpBufferSize,_Out_ LPDWORD lpResult)
DWORD None mpr.WNetUseConnectionW(_In_ HWND hwndOwner,_In_ LPNETRESOURCE lpNetResource,_In_ LPCTSTR lpPassword,_In_ LPCTSTR lpUserID,_In_ DWORD dwFlags,_Out_ LPTSTR lpAccessName,_Inout_ LPDWORD lpBufferSize,_Out_ LPDWORD lpResult)
DWORD None msvfw32.ICDecompress(HIC hic None,DWORD dwFlags None,LPBITMAPINFOHEADER lpbiFormat None,LPVOID lpData None,LPBITMAPINFOHEADER lpbi None,LPVOID lpBits None)
DWORD None msvfw32.ICDraw(HIC hic None,DWORD dwFlags None,LPVOID lpFormat None,LPVOID lpData None,DWORD cbData None,LONG lTime None)
DWORD None netapi32.DsAddressToSiteNamesA(_In_opt_ LPCTSTR ComputerName,_In_ DWORD EntryCount,_In_ PSOCKET_ADDRESS SocketAddresses,_Out_ LPTSTR **SiteNames)
DWORD None netapi32.DsAddressToSiteNamesExA(_In_opt_ LPCTSTR ComputerName,_In_ DWORD EntryCount,_In_ PSOCKET_ADDRESS SocketAddresses,_Out_ LPTSTR **SiteNames,_Out_ LPTSTR **SubnetNames)
DWORD None netapi32.DsAddressToSiteNamesEx(_In_opt_ LPCTSTR ComputerName,_In_ DWORD EntryCount,_In_ PSOCKET_ADDRESS SocketAddresses,_Out_ LPTSTR **SiteNames,_Out_ LPTSTR **SubnetNames)
DWORD None netapi32.DsAddressToSiteNamesExW(_In_opt_ LPCTSTR ComputerName,_In_ DWORD EntryCount,_In_ PSOCKET_ADDRESS SocketAddresses,_Out_ LPTSTR **SiteNames,_Out_ LPTSTR **SubnetNames)
DWORD None netapi32.DsAddressToSiteNames(_In_opt_ LPCTSTR ComputerName,_In_ DWORD EntryCount,_In_ PSOCKET_ADDRESS SocketAddresses,_Out_ LPTSTR **SiteNames)
DWORD None netapi32.DsAddressToSiteNamesW(_In_opt_ LPCTSTR ComputerName,_In_ DWORD EntryCount,_In_ PSOCKET_ADDRESS SocketAddresses,_Out_ LPTSTR **SiteNames)
DWORD None netapi32.DsDeregisterDnsHostRecordsA(_In_opt_ LPTSTR ServerName,_In_opt_ LPTSTR DnsDomainName,_In_opt_ GUID *DomainGuid,_In_opt_ GUID *DsaGuid,_In_ LPTSTR DnsHostName)
DWORD None netapi32.DsDeregisterDnsHostRecords(_In_opt_ LPTSTR ServerName,_In_opt_ LPTSTR DnsDomainName,_In_opt_ GUID *DomainGuid,_In_opt_ GUID *DsaGuid,_In_ LPTSTR DnsHostName)
DWORD None netapi32.DsDeregisterDnsHostRecordsW(_In_opt_ LPTSTR ServerName,_In_opt_ LPTSTR DnsDomainName,_In_opt_ GUID *DomainGuid,_In_opt_ GUID *DsaGuid,_In_ LPTSTR DnsHostName)
DWORD None netapi32.DsEnumerateDomainTrustsA(_In_opt_ LPTSTR ServerName,_In_ ULONG Flags,_Out_ PDS_DOMAIN_TRUSTS *Domains,_Out_ PULONG DomainCount)
DWORD None netapi32.DsEnumerateDomainTrusts(_In_opt_ LPTSTR ServerName,_In_ ULONG Flags,_Out_ PDS_DOMAIN_TRUSTS *Domains,_Out_ PULONG DomainCount)
DWORD None netapi32.DsEnumerateDomainTrustsW(_In_opt_ LPTSTR ServerName,_In_ ULONG Flags,_Out_ PDS_DOMAIN_TRUSTS *Domains,_Out_ PULONG DomainCount)
DWORD None netapi32.DsGetDcNameA(_In_ LPCTSTR ComputerName,_In_ LPCTSTR DomainName,_In_ GUID *DomainGuid,_In_ LPCTSTR SiteName,_In_ ULONG Flags,_Out_ PDOMAIN_CONTROLLER_INFO *DomainControllerInfo)
DWORD None netapi32.DsGetDcName(_In_ LPCTSTR ComputerName,_In_ LPCTSTR DomainName,_In_ GUID *DomainGuid,_In_ LPCTSTR SiteName,_In_ ULONG Flags,_Out_ PDOMAIN_CONTROLLER_INFO *DomainControllerInfo)
DWORD None netapi32.DsGetDcNameW(_In_ LPCTSTR ComputerName,_In_ LPCTSTR DomainName,_In_ GUID *DomainGuid,_In_ LPCTSTR SiteName,_In_ ULONG Flags,_Out_ PDOMAIN_CONTROLLER_INFO *DomainControllerInfo)
DWORD None netapi32.DsGetDcSiteCoverageA(_In_opt_ LPCTSTR ServerName,_Out_ PULONG EntryCount,_Out_ LPTSTR **SiteNames)
DWORD None netapi32.DsGetDcSiteCoverage(_In_opt_ LPCTSTR ServerName,_Out_ PULONG EntryCount,_Out_ LPTSTR **SiteNames)
DWORD None netapi32.DsGetDcSiteCoverageW(_In_opt_ LPCTSTR ServerName,_Out_ PULONG EntryCount,_Out_ LPTSTR **SiteNames)
DWORD None netapi32.DsGetForestTrustInformationW(_In_opt_ LPCWSTR ServerName,_In_opt_ LPCWSTR TrustedDomainName,_In_ DWORD Flags,_Out_ PLSA_FOREST_TRUST_INFORMATION *ForestTrustInfo)
DWORD None netapi32.DsGetSiteNameA(_In_ LPCTSTR ComputerName,_Out_ LPTSTR *SiteName)
DWORD None netapi32.DsGetSiteName(_In_ LPCTSTR ComputerName,_Out_ LPTSTR *SiteName)
DWORD None netapi32.DsGetSiteNameW(_In_ LPCTSTR ComputerName,_Out_ LPTSTR *SiteName)
DWORD None netapi32.DsRoleGetPrimaryDomainInformation(_In_ LPCWSTR lpServer,_In_ DSROLE_PRIMARY_DOMAIN_INFO_LEVEL InfoLevel,_Out_ PBYTE *Buffer)
DWORD None netapi32.DsValidateSubnetNameA(_In_ LPCTSTR SubnetName)
DWORD None netapi32.DsValidateSubnetName(_In_ LPCTSTR SubnetName)
DWORD None netapi32.DsValidateSubnetNameW(_In_ LPCTSTR SubnetName)
DWORD None None.acmGetVersion(VOID None None)
DWORD None None.AMGetErrorText(HRESULT hr None,TCHAR *pBuffer None,DWORD MaxLen None)
DWORD None None.CallWorker(DWORD dwParam None)
DWORD None None.CreateBlob(HBLOB* phBlob None)
DWORD None None.DateTime_GetSystemtime(HWND hwndDP None,LPSYSTEMTIME lpSysTime None)
DWORD None None.DavAuthCallback(_In_ LPWSTR lpwzServerName,_In_ LPWSTR lpwzRemoteName,_In_ DWORD dwAuthScheme,_In_ DWORD dwFlags,_Inout_ PDAV_CALLBACK_CRED pCallbackCred,_Inout_ AUTHNEXTSTEP *NextStep,_Out_ PFNDAVAUTHCALLBACK_FREECRED *pFreeCred)
DWORD None None.DavFreeCredCallback(_In_ PVOID pbuffer)
DWORD None None.DeletePrinterDataA(_In_ HANDLE hPrinter,_In_ LPTSTR pValueName)
DWORD None None.DeletePrinterDataExA(_In_ HANDLE hPrinter,_In_ LPCTSTR pKeyName,_In_ LPCTSTR pValueName)
DWORD None None.DeletePrinterDataEx(_In_ HANDLE hPrinter,_In_ LPCTSTR pKeyName,_In_ LPCTSTR pValueName)
DWORD None None.DeletePrinterDataExW(_In_ HANDLE hPrinter,_In_ LPCTSTR pKeyName,_In_ LPCTSTR pValueName)
DWORD None None.DeletePrinterData(_In_ HANDLE hPrinter,_In_ LPTSTR pValueName)
DWORD None None.DeletePrinterDataW(_In_ HANDLE hPrinter,_In_ LPTSTR pValueName)
DWORD None None.DeletePrinterKeyA(_In_ HANDLE hPrinter,_In_ LPCTSTR pKeyName)
DWORD None None.DeletePrinterKey(_In_ HANDLE hPrinter,_In_ LPCTSTR pKeyName)
DWORD None None.DeletePrinterKeyW(_In_ HANDLE hPrinter,_In_ LPCTSTR pKeyName)
DWORD None None.DetectSectorSize(WCHAR * devName,PSTORAGE_ACCESS_ALIGNMENT_DESCRIPTOR pAlignmentDescriptor None)
DWORD None None.Edit_GetSel(HWND hwndCtl None)
DWORD None None.Edit_NoSetFocus(HWND hwndEdit None)
DWORD None None.Edit_TakeFocus(HWND hwndEdit None)
DWORD None None.EnumPrinterDataA(_In_ HANDLE hPrinter,_In_ DWORD dwIndex,_Out_ LPTSTR pValueName,_In_ DWORD cbValueName,_Out_ LPDWORD pcbValueName,_Out_ LPDWORD pType,_Out_ LPBYTE pData,_In_ DWORD cbData,_Out_ LPDWORD pcbData)
DWORD None None.EnumPrinterDataExA(_In_ HANDLE hPrinter,_In_ LPCTSTR pKeyName,_Out_ LPBYTE pEnumValues,_In_ DWORD cbEnumValues,_Out_ LPDWORD pcbEnumValues,_Out_ LPDWORD pnEnumValues)
DWORD None None.EnumPrinterDataEx(_In_ HANDLE hPrinter,_In_ LPCTSTR pKeyName,_Out_ LPBYTE pEnumValues,_In_ DWORD cbEnumValues,_Out_ LPDWORD pcbEnumValues,_Out_ LPDWORD pnEnumValues)
DWORD None None.EnumPrinterDataExW(_In_ HANDLE hPrinter,_In_ LPCTSTR pKeyName,_Out_ LPBYTE pEnumValues,_In_ DWORD cbEnumValues,_Out_ LPDWORD pcbEnumValues,_Out_ LPDWORD pnEnumValues)
DWORD None None.EnumPrinterData(_In_ HANDLE hPrinter,_In_ DWORD dwIndex,_Out_ LPTSTR pValueName,_In_ DWORD cbValueName,_Out_ LPDWORD pcbValueName,_Out_ LPDWORD pType,_Out_ LPBYTE pData,_In_ DWORD cbData,_Out_ LPDWORD pcbData)
DWORD None None.EnumPrinterDataW(_In_ HANDLE hPrinter,_In_ DWORD dwIndex,_Out_ LPTSTR pValueName,_In_ DWORD cbValueName,_Out_ LPDWORD pcbValueName,_Out_ LPDWORD pType,_Out_ LPBYTE pData,_In_ DWORD cbData,_Out_ LPDWORD pcbData)
DWORD None None.EnumPrinterKeyA(_In_ HANDLE hPrinter,_In_ LPCTSTR pKeyName,_Out_ LPTSTR pSubkey,_In_ DWORD cbSubkey,_Out_ LPDWORD pcbSubkey)
DWORD None None.EnumPrinterKey(_In_ HANDLE hPrinter,_In_ LPCTSTR pKeyName,_Out_ LPTSTR pSubkey,_In_ DWORD cbSubkey,_Out_ LPDWORD pcbSubkey)
DWORD None None.EnumPrinterKeyW(_In_ HANDLE hPrinter,_In_ LPCTSTR pKeyName,_Out_ LPTSTR pSubkey,_In_ DWORD cbSubkey,_Out_ LPDWORD pcbSubkey)
DWORD None None.GenerateGroupPolicy(_In_ DWORD dwFlags,_In_ BOOL *pbAbort,_In_ WCHAR *pwszSite,_In_ PRSOP_TARGET pComputerTarget,_In_ PRSOP_TARGET pUserTarget)
DWORD None None.GetBoolFromBlob(HBLOB hBlob None,const char* pOwnerName,const char* pCategoryName,const char* pTagName,BOOL* pBool None)
DWORD None None.GetClassIDFromBlob(HBLOB hBlob None,const char* pOwnerName,const char* pCategoryName,const char* pTagName,CLSID* pClsID None)
DWORD None None.GetDwordFromBlob(HBLOB hBlob None,const char* pOwnerName,const char* pCategoryName,const char* pTagName,DWORD* pDword None)
DWORD None None.GetMacAddressFromBlob(HBLOB hBlob None,const char* pOwnerName,const char* pCategoryName,const char* pTagName,BYTE* pMacAddress None)
DWORD None None.GetNextLink([in] DWORD dwLink)
DWORD None None.GetNPPBlobFromUI(HWND hwnd None,HBLOB hFilterBlob None,HBLOB* phBlob None)
DWORD None None.GetNPPBlobTable(HBLOB hFilterBlob None,PBLOB_TABLE* ppBlobTable None)
DWORD None None.GetNPPMacTypeAsNumber(HBLOB hBlob None,LPDWORD lpMacType None)
DWORD None None.GetNPPPatternFilterFromBlob(HBLOB hBlob None,LPEXPRESSION pExpression None,HBLOB hErrorBlob None)
DWORD None None.GetNPPTriggerFromBlob(HBLOB hBlob None,LPTRIGGER pTrigger None,HBLOB hErrorBlob None)
DWORD None None.GetPrinterDataA(_In_ HANDLE hPrinter,_In_ LPTSTR pValueName,_Out_ LPDWORD pType,_Out_ LPBYTE pData,_In_ DWORD nSize,_Out_ LPDWORD pcbNeeded)
DWORD None None.GetPrinterDataExA(_In_ HANDLE hPrinter,_In_ LPCTSTR pKeyName,_In_ LPCTSTR pValueName,_Out_ LPDWORD pType,_Out_ LPBYTE pData,_In_ DWORD nSize,_Out_ LPDWORD pcbNeeded)
DWORD None None.GetPrinterDataEx(_In_ HANDLE hPrinter,_In_ LPCTSTR pKeyName,_In_ LPCTSTR pValueName,_Out_ LPDWORD pType,_Out_ LPBYTE pData,_In_ DWORD nSize,_Out_ LPDWORD pcbNeeded)
DWORD None None.GetPrinterDataExW(_In_ HANDLE hPrinter,_In_ LPCTSTR pKeyName,_In_ LPCTSTR pValueName,_Out_ LPDWORD pType,_Out_ LPBYTE pData,_In_ DWORD nSize,_Out_ LPDWORD pcbNeeded)
DWORD None None.GetPrinterData(_In_ HANDLE hPrinter,_In_ LPTSTR pValueName,_Out_ LPDWORD pType,_Out_ LPBYTE pData,_In_ DWORD nSize,_Out_ LPDWORD pcbNeeded)
DWORD None None.GetPrinterDataW(_In_ HANDLE hPrinter,_In_ LPTSTR pValueName,_Out_ LPDWORD pType,_Out_ LPBYTE pData,_In_ DWORD nSize,_Out_ LPDWORD pcbNeeded)
DWORD None None.GetStringFromBlob(HBLOB hBlob None,const char* pOwnerName,const char* pCategoryName,const char* pTagName,const char** ppString)
DWORD None None.HandleInComingCall([in] DWORD dwCallType,[in] HTASK htaskCaller,[in] DWORD dwTickCount,[in] LPINTERFACEINFO lpInterfaceInfo)
DWORD None None.HRESULT_SEVERITY(HRESULT hr None)
DWORD None None.ICAbout(hic None None,hwnd None None)
DWORD None None.ICCompressGetSize(hic None None,lpbiInput None None,lpbiOutput None None)
DWORD None None.ICCompress(HIC hic None,DWORD dwFlags None,LPBITMAPINFOHEADER lpbiOutput None,LPVOID lpData None,LPBITMAPINFOHEADER lpbiInput None,LPVOID lpBits None,LPDWORD lpckid None,LPDWORD lpdwFlags None,LONG lFrameNum None,DWORD dwFrameSize None,DWORD dwQuality None,LPBITMAPINFOHEADER lpbiPrev None,LPVOID lpPrev None)
DWORD None None.ICDecompressEx(HIC hic None,DWORD dwFlags None,LPBITMAPINFOHEADER lpbiSrc None,LPVOID lpSrc None,int xSrc None,int ySrc None,int dxSrc None,int dySrc None,LPBITMAPINFOHEADER lpbiDst None,LPVOID lpDst None,int xDst None,int yDst None,int dxDst None,int dyDst None)
DWORD None None.ICDrawFlush(hic None None)
DWORD None None.ICDraw(HIC hic None,DWORD dwFlags None,LPVOID lpFormat None,LPVOID lpData None,DWORD cbData None,LONG lTime None)
DWORD None None.ICDrawSuggestFormat(HIC hic None,LPBITMAPINFOHEADER lpbiIn None,LPBITMAPINFOHEADER lpbiOut None,int dxSrc None,int dySrc None,int dxDst None,int dyDst None,HIC hicDecompressor None)
DWORD None None.ICGetDefaultKeyFrameRate(hic None None)
DWORD None None.ListView_ApproximateViewRect(hwndLV hwndLV None,int cx None,int cy None,int iCount None)
DWORD None None.ListView_GetExtendedListViewStyle(HWND hwndLV None)
DWORD None None.ListView_GetHoverTime(HWND hwndLV None)
DWORD None None.ListView_GetItemSpacing(HWND hwnd None,BOOL fSmall None)
DWORD None None.ListView_GetView(HWND hwnd None)
DWORD None None.ListView_SetIconSpacing(HWND hwndLV None,int cx None,int cy None)
DWORD None None.MAKELCID(WORD wLanguageID None,WORD wSortID None)
DWORD None None.MAKELONG(WORD wLow None,WORD wHigh None)
DWORD None None.MAKESORTLCID(WORD wLanguageID None,WORD wSortID None,WORD wSortVersion None)
DWORD None None.MgmSetMfe(_In_ HANDLE hProtocol,_In_ PMIB_IPMCAST_MFE pmimm)
DWORD None None.midiOutMessage(HMIDIOUT deviceID None,UINT msg None,DWORD_PTR dw1 None,DWORD_PTR dw2 None)
DWORD None None.ModeFlags(DWORD AudioMode None)
DWORD None None.MonthCal_GetCalendarBorder(HWND hmc None)
DWORD None None.MonthCal_GetCalendarCount(HWND hmc None)
DWORD None None.MonthCal_GetCurrentView(HWND hmc None)
DWORD None None.MonthCal_GetFirstDayOfWeek(HWND hwndMC None)
DWORD None None.MonthCal_GetMaxSelCount(HWND hwndMC None)
DWORD None None.MonthCal_GetMaxTodayWidth(HWND hwndMC None)
DWORD None None.MonthCal_GetRange(HWND hwndMC None,LPSYSTEMTIME lprgSysTimeArray None)
DWORD None None.MonthCal_HitTest(HWND hwndMC None,PMCHITTESTINFO pMCHitTest None)
DWORD None None.MonthCal_SetFirstDayOfWeek(HWND hwndMC None,INT iDay None)
DWORD None None.NPAddConnection3(_In_ HWND hwndOwner,_In_ LPNETRESOURCE lpNetResource,_In_ LPTSTR lpPassword,_In_ LPTSTR lpUserName,_In_ DWORD dwFlags)
DWORD None None.NPAddConnection(_In_ LPNETRESOURCE lpNetResource,_In_ LPTSTR lpPassword,_In_ LPTSTR lpUserName)
DWORD None None.NPCancelConnection(_In_ LPTSTR lpName,_In_ BOOL fForce)
DWORD None None.NPCloseEnum(_In_ HANDLE hEnum)
DWORD None None.NPDeviceMode(_In_ HWND hParent)
DWORD None None.NPDirectoryNotify(_In_ HWND hwnd,_In_ LPTSTR lpDir,_In_ DWORD dwOper)
DWORD None None.NPEnumResource(_In_ HANDLE hEnum,_Inout_ LPDWORD lpcCount,_Out_ LPVOID lpBuffer,_Inout_ LPDWORD lpBufferSize)
DWORD None None.NPFMXEditPerm(_In_ LPTSTR lpDriveName,_In_ HWND hwndFMX,_In_ DWORD nType)
DWORD None None.NPFMXGetPermCaps(_In_ LPTSTR lpDriveName)
DWORD None None.NPFMXGetPermHelp(_In_ LPTSTR lpDriveName,_In_ DWORD nType,_In_ BOOL fDirectory,_Inout_ LPVOID lpBuffer,_Inout_ LPDWORD lpBufferSize,_Out_ LPDWORD lpnHelpContext)
DWORD None None.NPFormatNetworkName(_In_ LPTSTR lpRemoteName,_Out_ LPTSTR lpFormattedName,_Inout_ LPDWORD lpnLength,_In_ DWORD dwFlags,_In_ DWORD dwAveCharPerLine)
DWORD None None.NPGetCaps(_In_ DWORD nIndex)
DWORD None None.NPGetConnection3(_In_ LPCWSTR lpLocalName,_In_ DWORD dwLevel,_Out_ LPVOID lpBuffer,_Inout_ LPDWORD lpBufferSize)
DWORD None None.NPGetConnection(_In_ LPTSTR lpLocalName,_Out_ LPTSTR lpRemoteName,_Inout_ LPDWORD lpBufferSize)
DWORD None None.NPGetConnectionPerformance(_In_ LPTSTR lpRemoteName,_Out_ LPNETCONNECTINFOSTRUCT lpNetConnectInfo)
DWORD None None.NPGetDirectoryType(_In_ LPTSTR lpName,_In_ LPINT lpType,_In_ BOOL bFlushCache)
DWORD None None.NPGetPropertyText(_In_ DWORD iButton,_In_ DWORD nPropSel,_In_ LPTSTR lpName,_Out_ LPTSTR lpButtonName,_Inout_ DWORD nButtonNameLen,_In_ DWORD nType)
DWORD None None.NPGetResourceInformation(_In_ LPNETRESOURCE lpNetResource,_Out_ LPVOID lpBuffer,_Inout_ LPDWORD lpcbBuffer,_Out_ LPTSTR *lplpSystem)
DWORD None None.NPGetResourceParent(_In_ LPNETRESOURCE lpNetResource,_Out_ LPVOID lpBuffer,_Inout_ LPDWORD lpcbBuffer)
DWORD None None.NPGetUniversalName(_In_ LPCTSTR lpLocalPath,_In_ DWORD dwInfoLevel,_Out_ LPVOID lpBuffer,_Inout_ LPDWORD lpBufferSize)
DWORD None None.NPGetUser(_In_ LPTSTR lpName,_Out_ LPTSTR lpUserName,_Inout_ LPDWORD lpBufferSize)
DWORD None None.NPOpenEnum(_In_ DWORD dwScope,_In_ DWORD dwType,_In_ DWORD dwUsage,_In_ LPNETRESOURCE lpNetResource,_Out_ LPHANDLE lphEnum)
DWORD None None.NPPropertyDialog(_In_ HWND hwndParent,_In_ DWORD iButtonDlg,_In_ DWORD nPropSel,_In_ LPTSTR lpFileName,_In_ DWORD nType)
DWORD None None.NPSearchDialog(_In_ HWND hParent,_In_ LPNETRESOURCE lpNetResource,_Out_ LPVOID lpBuffer,_Out_ DWORD cbBuffer,_In_ LPDWORD lpnFlags)
DWORD None None.Pager_GetButtonState(HWND hwndPager None,int iButton None)
DWORD None None.PrintEvent(EVT_HANDLE hEvent None)
DWORD None None.RecallFile(PTCHAR FileName None)
DWORD None None.RegCreateBlobKey(HKEY hkey None,const char* szBlobName,HBLOB hBlob None)
DWORD None None.SCODE_SEVERITY(SCODE sc None)
DWORD None None.SetBoolInBlob(HBLOB hBlob None,const char* pOwnerName,const char* pCategoryName,const char* pTagName,BOOL Bool None)
DWORD None None.SetDwordInBlob(HBLOB hBlob None,const char* pOwnerName,const char* pCategoryName,const char* pTagName,DWORD Dword None)
DWORD None None.SetNetworkInfoInBlob(HBLOB hBlob None,LPNETWORKINFO lpNetworkInfo None)
DWORD None None.SetNPPAddressFilterInBlob(HBLOB hBlob None,LPADDRESSTABLE pAddressTable None)
DWORD None None.SetNPPPatternFilterInBlob(HBLOB hBlob None,LPEXPRESSION pExpression None,HBLOB hErrorBlob None)
DWORD None None.SetNPPTriggerInBlob(HBLOB hBlob None,LPTRIGGER pTrigger None,HBLOB hErrorBlob None)
DWORD None None.SetPrinterDataA(_In_ HANDLE hPrinter,_In_ LPTSTR pValueName,_In_ DWORD Type,_In_ LPBYTE pData,_In_ DWORD cbData)
DWORD None None.SetPrinterDataExA(_In_ HANDLE hPrinter,_In_ LPCTSTR pKeyName,_In_ LPCTSTR pValueName,_In_ DWORD Type,_In_ LPBYTE pData,_In_ DWORD cbData)
DWORD None None.SetPrinterDataEx(_In_ HANDLE hPrinter,_In_ LPCTSTR pKeyName,_In_ LPCTSTR pValueName,_In_ DWORD Type,_In_ LPBYTE pData,_In_ DWORD cbData)
DWORD None None.SetPrinterDataExW(_In_ HANDLE hPrinter,_In_ LPCTSTR pKeyName,_In_ LPCTSTR pValueName,_In_ DWORD Type,_In_ LPBYTE pData,_In_ DWORD cbData)
DWORD None None.SetPrinterData(_In_ HANDLE hPrinter,_In_ LPTSTR pValueName,_In_ DWORD Type,_In_ LPBYTE pData,_In_ DWORD cbData)
DWORD None None.SetPrinterDataW(_In_ HANDLE hPrinter,_In_ LPTSTR pValueName,_In_ DWORD Type,_In_ LPBYTE pData,_In_ DWORD cbData)
DWORD None None.SetStringInBlob(HBLOB hBlob None,const char* pOwnerName,const char* pCategoryName,const char* pTagName,const char* pString)
DWORD None None.StartDocPrinterA(_In_ HANDLE hPrinter,_In_ DWORD Level,_In_ LPBYTE pDocInfo)
DWORD None None.StartDocPrinter(_In_ HANDLE hPrinter,_In_ DWORD Level,_In_ LPBYTE pDocInfo)
DWORD None None.StartDocPrinterW(_In_ HANDLE hPrinter,_In_ DWORD Level,_In_ LPBYTE pDocInfo)
DWORD None None.StatusMessageCallback(_In_ BOOL bVerbose,_In_ LPWSTR lpMessage)
DWORD None None.TabCtrl_GetExtendedStyle(HWND hwndTab None)
DWORD None None.TabCtrl_SetExtendedStyle(HWND hwndTab None,DWORD dwExStyle None)
DWORD None None.TabCtrl_SetItemSize(HWND hwnd None,int cx None,int cy None)
DWORD None None.timeGetTime(VOID None None)
DWORD None None.TreeView_GetExtendedStyle(HWND hwnd None)
DWORD None None.TreeView_ShowInfoTip(HWND hwnd None,HITEM hitem None)
DWORD None None.UpdateDefaultPassword(WCHAR * pwszSecret)
DWORD None None.waveOutMessage(HWAVEOUT deviceID None,UINT uMsg None,DWORD_PTR dwParam1 None,DWORD_PTR dwParam2 None)
DWORD None None.WlxQueryConsoleSwitchCredentials(_Out_ PWLX_CONSOLESWITCH_CREDENTIALS_INFO_V1_0 pCred)
DWORD None None.WlxQueryTerminalServicesData(_In_ HANDLE hWlx,_Out_ PWLX_TERMINAL_SERVICES_DATA pTSData,_In_ WCHAR *UserName,_In_ WCHAR *Domain)
DWORD None None.WriteBlobToFile(HBLOB hBlob None,const char* pFileName)
DWORD None npptools.DestroyBlob(_In_ HBLOB hBlob)
DWORD None npptools.DuplicateBlob(_In_ HBLOB hSrcBlob,_Out_ HBLOB *hBlobThatWillBeCreated)
DWORD None npptools.GetNetworkInfoFromBlob(_In_ HBLOB hBlob,_Inout_ LPNETWORKINFO lpNetworkInfo)
DWORD None npptools.GetNPPAddressFilterFromBlob(_In_ HBLOB hBlob,_Inout_ LPADDRESSTABLE pAddressTable,_Out_ HBLOB hErrorBlob)
DWORD None npptools.GetNPPBlobFromUI(_In_ HWND hwnd,_In_ HBLOB hFilterBlob,_Out_ HBLOB *phBlob)
DWORD None npptools.GetNPPBlobTable(_In_ HBLOB hFilterBlob,_Out_ PBLOB_TABLE *ppBlobTable)
DWORD None npptools.GetNPPMacTypeAsNumber(_In_ HBLOB hBlob,_Out_ LPDWORD lpMacType)
DWORD None npptools.MergeBlob(_Inout_ HBLOB hDstBlob,_In_ HBLOB hSrcBlob)
DWORD None npptools.SelectNPPBlobFromTable(_In_ HWND hwnd,_In_ PBLOB_TABLE pBlobTable,_Out_ HBLOB *hBlob)
DWORD None npptools.SetNetworkInfoInBlob(_In_ HBLOB hBlob,_In_ LPNETWORKINFO lpNetworkInfo)
DWORD None npptools.SetNPPAddressFilterInBlob(_In_ HBLOB hBlob,_In_ LPADDRESSTABLE pAddressTable)
DWORD None npptools.SetNPPEtypeSapFilter(_In_ HBLOB hBlob,_In_ WORD nSaps,_In_ WORD nEtypes,_In_ LPBYTE lpSapTable,_In_ LPWORD lpEtypeTable,_In_ DWORD FilterFlags,_Out_ HBLOB hErrorBlob)
DWORD None npptools.SetNPPPatternFilterInBlob(_In_ HBLOB hBlob,_In_ LPEXPRESSION pExpression,_Out_ HBLOB hErrorBlob)
DWORD None npptools.SetNPPTriggerInBlob(_In_ HBLOB hBlob,_In_ LPTRIGGER pTrigger,_Out_ HBLOB hErrorBlob)
DWORD None ntdsapi.DsBindA(_In_opt_ LPCTSTR DomainControllerName,_In_opt_ LPCTSTR DnsDomainName,_Out_ HANDLE *phDS)
DWORD None ntdsapi.DsBindingSetTimeout(_In_ HANDLE hDS,_In_ ULONG cTimeoutSecs)
DWORD None ntdsapi.DsBind(_In_opt_ LPCTSTR DomainControllerName,_In_opt_ LPCTSTR DnsDomainName,_Out_ HANDLE *phDS)
DWORD None ntdsapi.DsBindW(_In_opt_ LPCTSTR DomainControllerName,_In_opt_ LPCTSTR DnsDomainName,_Out_ HANDLE *phDS)
DWORD None ntdsapi.DsBindWithCredA(_In_opt_ LPCTSTR DomainControllerName,_In_opt_ LPCTSTR DnsDomainName,_In_opt_ RPC_AUTH_IDENTITY_HANDLE AuthIdentity,_Out_ HANDLE *phDS)
DWORD None ntdsapi.DsBindWithCred(_In_opt_ LPCTSTR DomainControllerName,_In_opt_ LPCTSTR DnsDomainName,_In_opt_ RPC_AUTH_IDENTITY_HANDLE AuthIdentity,_Out_ HANDLE *phDS)
DWORD None ntdsapi.DsBindWithCredW(_In_opt_ LPCTSTR DomainControllerName,_In_opt_ LPCTSTR DnsDomainName,_In_opt_ RPC_AUTH_IDENTITY_HANDLE AuthIdentity,_Out_ HANDLE *phDS)
DWORD None ntdsapi.DsBindWithSpnA(_In_opt_ LPCTSTR DomainControllerName,_In_opt_ LPCTSTR DnsDomainName,_In_opt_ RPC_AUTH_IDENTITY_HANDLE AuthIdentity,_In_opt_ LPCTSTR ServicePrincipalName,_Out_ HANDLE *phDS)
DWORD None ntdsapi.DsBindWithSpnExA(_In_opt_ LPCTSTR DomainControllerName,_In_opt_ LPCTSTR DnsDomainName,_In_opt_ RPC_AUTH_IDENTITY_HANDLE AuthIdentity,_In_opt_ LPCTSTR ServicePrincipalName,_In_opt_ DWORD BindFlags,_Out_ HANDLE *phDS)
DWORD None ntdsapi.DsBindWithSpnEx(_In_opt_ LPCTSTR DomainControllerName,_In_opt_ LPCTSTR DnsDomainName,_In_opt_ RPC_AUTH_IDENTITY_HANDLE AuthIdentity,_In_opt_ LPCTSTR ServicePrincipalName,_In_opt_ DWORD BindFlags,_Out_ HANDLE *phDS)
DWORD None ntdsapi.DsBindWithSpnExW(_In_opt_ LPCTSTR DomainControllerName,_In_opt_ LPCTSTR DnsDomainName,_In_opt_ RPC_AUTH_IDENTITY_HANDLE AuthIdentity,_In_opt_ LPCTSTR ServicePrincipalName,_In_opt_ DWORD BindFlags,_Out_ HANDLE *phDS)
DWORD None ntdsapi.DsBindWithSpn(_In_opt_ LPCTSTR DomainControllerName,_In_opt_ LPCTSTR DnsDomainName,_In_opt_ RPC_AUTH_IDENTITY_HANDLE AuthIdentity,_In_opt_ LPCTSTR ServicePrincipalName,_Out_ HANDLE *phDS)
DWORD None ntdsapi.DsBindWithSpnW(_In_opt_ LPCTSTR DomainControllerName,_In_opt_ LPCTSTR DnsDomainName,_In_opt_ RPC_AUTH_IDENTITY_HANDLE AuthIdentity,_In_opt_ LPCTSTR ServicePrincipalName,_Out_ HANDLE *phDS)
DWORD None ntdsapi.DsClientMakeSpnForTargetServerA(_In_ LPCTSTR ServiceClass,_In_ LPCTSTR ServiceName,_Inout_ DWORD *pcSpnLength,_Out_ LPTSTR pszSpn)
DWORD None ntdsapi.DsClientMakeSpnForTargetServer(_In_ LPCTSTR ServiceClass,_In_ LPCTSTR ServiceName,_Inout_ DWORD *pcSpnLength,_Out_ LPTSTR pszSpn)
DWORD None ntdsapi.DsClientMakeSpnForTargetServerW(_In_ LPCTSTR ServiceClass,_In_ LPCTSTR ServiceName,_Inout_ DWORD *pcSpnLength,_Out_ LPTSTR pszSpn)
DWORD None ntdsapi.DsCrackNamesA(_In_ HANDLE hDS,_In_ DS_NAME_FLAGS flags,_In_ DS_NAME_FORMAT formatOffered,_In_ DS_NAME_FORMAT formatDesired,_In_ DWORD cNames,_In_ LPCTSTR *rpNames,_Out_ PDS_NAME_RESULT *ppResult)
DWORD None ntdsapi.DsCrackNames(_In_ HANDLE hDS,_In_ DS_NAME_FLAGS flags,_In_ DS_NAME_FORMAT formatOffered,_In_ DS_NAME_FORMAT formatDesired,_In_ DWORD cNames,_In_ LPCTSTR *rpNames,_Out_ PDS_NAME_RESULT *ppResult)
DWORD None ntdsapi.DsCrackNamesW(_In_ HANDLE hDS,_In_ DS_NAME_FLAGS flags,_In_ DS_NAME_FORMAT formatOffered,_In_ DS_NAME_FORMAT formatDesired,_In_ DWORD cNames,_In_ LPCTSTR *rpNames,_Out_ PDS_NAME_RESULT *ppResult)
DWORD None ntdsapi.DsCrackSpnA(_In_ LPCTSTR pszSPN,_Inout_opt_ DWORD *pcServiceClass,_Out_opt_ LPTSTR ServiceClass,_Inout_opt_ DWORD *pcServiceName,_Out_opt_ LPTSTR ServiceName,_Inout_opt_ DWORD *pcInstanceName,_Out_opt_ LPTSTR InstanceName,_Out_opt_ USHORT *pInstancePort)
DWORD None ntdsapi.DsCrackSpn(_In_ LPCTSTR pszSPN,_Inout_opt_ DWORD *pcServiceClass,_Out_opt_ LPTSTR ServiceClass,_Inout_opt_ DWORD *pcServiceName,_Out_opt_ LPTSTR ServiceName,_Inout_opt_ DWORD *pcInstanceName,_Out_opt_ LPTSTR InstanceName,_Out_opt_ USHORT *pInstancePort)
DWORD None ntdsapi.DsCrackSpnW(_In_ LPCTSTR pszSPN,_Inout_opt_ DWORD *pcServiceClass,_Out_opt_ LPTSTR ServiceClass,_Inout_opt_ DWORD *pcServiceName,_Out_opt_ LPTSTR ServiceName,_Inout_opt_ DWORD *pcInstanceName,_Out_opt_ LPTSTR InstanceName,_Out_opt_ USHORT *pInstancePort)
DWORD None ntdsapi.DsGetDomainControllerInfoA(_In_ HANDLE hDs,_In_ LPTSTR DomainName,_In_ DWORD InfoLevel,_Out_ DWORD *pcOut,_Out_ VOID **ppInfo)
DWORD None ntdsapi.DsGetDomainControllerInfo(_In_ HANDLE hDs,_In_ LPTSTR DomainName,_In_ DWORD InfoLevel,_Out_ DWORD *pcOut,_Out_ VOID **ppInfo)
DWORD None ntdsapi.DsGetDomainControllerInfoW(_In_ HANDLE hDs,_In_ LPTSTR DomainName,_In_ DWORD InfoLevel,_Out_ DWORD *pcOut,_Out_ VOID **ppInfo)
DWORD None ntdsapi.DsListDomainsInSiteA(_In_ HANDLE hDs,_In_ LPTSTR site,_Out_ PDS_NAME_RESULT *ppDomains)
DWORD None ntdsapi.DsListDomainsInSite(_In_ HANDLE hDs,_In_ LPTSTR site,_Out_ PDS_NAME_RESULT *ppDomains)
DWORD None ntdsapi.DsListDomainsInSiteW(_In_ HANDLE hDs,_In_ LPTSTR site,_Out_ PDS_NAME_RESULT *ppDomains)
DWORD None ntdsapi.DsListInfoForServerA(_In_ HANDLE hDs,_In_ LPTSTR server,_Out_ PDS_NAME_RESULT *ppInfo)
DWORD None ntdsapi.DsListInfoForServer(_In_ HANDLE hDs,_In_ LPTSTR server,_Out_ PDS_NAME_RESULT *ppInfo)
DWORD None ntdsapi.DsListInfoForServerW(_In_ HANDLE hDs,_In_ LPTSTR server,_Out_ PDS_NAME_RESULT *ppInfo)
DWORD None ntdsapi.DsListRolesA(_In_ HANDLE hDs,_Out_ PDS_NAME_RESULTW *ppRoles)
DWORD None ntdsapi.DsListRoles(_In_ HANDLE hDs,_Out_ PDS_NAME_RESULTW *ppRoles)
DWORD None ntdsapi.DsListRolesW(_In_ HANDLE hDs,_Out_ PDS_NAME_RESULTW *ppRoles)
DWORD None ntdsapi.DsListServersForDomainInSiteA(_In_ HANDLE hDs,_In_ LPTSTR domain,_In_ LPTSTR site,_Out_ PDS_NAME_RESULT *ppServers)
DWORD None ntdsapi.DsListServersForDomainInSite(_In_ HANDLE hDs,_In_ LPTSTR domain,_In_ LPTSTR site,_Out_ PDS_NAME_RESULT *ppServers)
DWORD None ntdsapi.DsListServersForDomainInSiteW(_In_ HANDLE hDs,_In_ LPTSTR domain,_In_ LPTSTR site,_Out_ PDS_NAME_RESULT *ppServers)
DWORD None ntdsapi.DsListServersInSiteA(_In_ HANDLE hDs,_In_ LPTSTR site,_Out_ PDS_NAME_RESULT *ppServers)
DWORD None ntdsapi.DsListServersInSite(_In_ HANDLE hDs,_In_ LPTSTR site,_Out_ PDS_NAME_RESULT *ppServers)
DWORD None ntdsapi.DsListServersInSiteW(_In_ HANDLE hDs,_In_ LPTSTR site,_Out_ PDS_NAME_RESULT *ppServers)
DWORD None ntdsapi.DsListSitesA(_In_ HANDLE hDs,_Out_ PDS_NAME_RESULT *ppSites)
DWORD None ntdsapi.DsListSites(_In_ HANDLE hDs,_Out_ PDS_NAME_RESULT *ppSites)
DWORD None ntdsapi.DsListSitesW(_In_ HANDLE hDs,_Out_ PDS_NAME_RESULT *ppSites)
DWORD None ntdsapi.DsMakePasswordCredentialsA(_In_ LPCTSTR User,_In_ LPCTSTR Domain,_In_ LPCTSTR Password,_Out_ RPC_AUTH_IDENTITY_HANDLE *pAuthIdentity)
DWORD None ntdsapi.DsMakePasswordCredentials(_In_ LPCTSTR User,_In_ LPCTSTR Domain,_In_ LPCTSTR Password,_Out_ RPC_AUTH_IDENTITY_HANDLE *pAuthIdentity)
DWORD None ntdsapi.DsMakePasswordCredentialsW(_In_ LPCTSTR User,_In_ LPCTSTR Domain,_In_ LPCTSTR Password,_Out_ RPC_AUTH_IDENTITY_HANDLE *pAuthIdentity)
DWORD None ntdsapi.DsMakeSpnA(_In_ LPCTSTR ServiceClass,_In_ LPCTSTR ServiceName,_In_opt_ LPCTSTR InstanceName,_In_ USHORT InstancePort,_In_opt_ LPCTSTR Referrer,_Inout_ DWORD *pcSpnLength,_Out_ LPTSTR pszSpn)
DWORD None ntdsapi.DsMakeSpn(_In_ LPCTSTR ServiceClass,_In_ LPCTSTR ServiceName,_In_opt_ LPCTSTR InstanceName,_In_ USHORT InstancePort,_In_opt_ LPCTSTR Referrer,_Inout_ DWORD *pcSpnLength,_Out_ LPTSTR pszSpn)
DWORD None ntdsapi.DsMakeSpnW(_In_ LPCTSTR ServiceClass,_In_ LPCTSTR ServiceName,_In_opt_ LPCTSTR InstanceName,_In_ USHORT InstancePort,_In_opt_ LPCTSTR Referrer,_Inout_ DWORD *pcSpnLength,_Out_ LPTSTR pszSpn)
DWORD None ntdsapi.DsMapSchemaGuidsA(_In_ HANDLE hDs,_In_ DWORD cGuids,_In_ GUID *rGuids,_Out_ DS_SCHEMA_GUID_MAP **ppGuidMap)
DWORD None ntdsapi.DsMapSchemaGuids(_In_ HANDLE hDs,_In_ DWORD cGuids,_In_ GUID *rGuids,_Out_ DS_SCHEMA_GUID_MAP **ppGuidMap)
DWORD None ntdsapi.DsMapSchemaGuidsW(_In_ HANDLE hDs,_In_ DWORD cGuids,_In_ GUID *rGuids,_Out_ DS_SCHEMA_GUID_MAP **ppGuidMap)
DWORD None ntdsapi.DsQuerySitesByCostA(_In_ HANDLE hDS,_In_ LPTSTR pwszFromSite,_In_ LPTSTR *rgwszToSites,_In_ DWORD cToSites,_In_ DWORD dwFlags,_Out_ PDS_SITE_COST_INFO *prgSiteInfo)
DWORD None ntdsapi.DsQuerySitesByCost(_In_ HANDLE hDS,_In_ LPTSTR pwszFromSite,_In_ LPTSTR *rgwszToSites,_In_ DWORD cToSites,_In_ DWORD dwFlags,_Out_ PDS_SITE_COST_INFO *prgSiteInfo)
DWORD None ntdsapi.DsQuerySitesByCostW(_In_ HANDLE hDS,_In_ LPTSTR pwszFromSite,_In_ LPTSTR *rgwszToSites,_In_ DWORD cToSites,_In_ DWORD dwFlags,_Out_ PDS_SITE_COST_INFO *prgSiteInfo)
DWORD None ntdsapi.DsQuoteRdnValueA(_In_ DWORD cUnquotedRdnValueLength,_In_ LPCTCH psUnquotedRdnValue,_Inout_ DWORD *pcQuotedRdnValueLength,_Out_ LPTCH psQuotedRdnValue)
DWORD None ntdsapi.DsQuoteRdnValue(_In_ DWORD cUnquotedRdnValueLength,_In_ LPCTCH psUnquotedRdnValue,_Inout_ DWORD *pcQuotedRdnValueLength,_Out_ LPTCH psQuotedRdnValue)
DWORD None ntdsapi.DsQuoteRdnValueW(_In_ DWORD cUnquotedRdnValueLength,_In_ LPCTCH psUnquotedRdnValue,_Inout_ DWORD *pcQuotedRdnValueLength,_Out_ LPTCH psQuotedRdnValue)
DWORD None ntdsapi.DsRemoveDsDomainA(_In_ HANDLE hDs,_In_ LPTSTR DomainDN)
DWORD None ntdsapi.DsRemoveDsDomain(_In_ HANDLE hDs,_In_ LPTSTR DomainDN)
DWORD None ntdsapi.DsRemoveDsDomainW(_In_ HANDLE hDs,_In_ LPTSTR DomainDN)
DWORD None ntdsapi.DsRemoveDsServerA(_In_ HANDLE hDs,_In_ LPTSTR ServerDN,_In_opt_ LPTSTR DomainDN,_Out_opt_ BOOL *fLastDcInDomain,_In_ BOOL fCommit)
DWORD None ntdsapi.DsRemoveDsServer(_In_ HANDLE hDs,_In_ LPTSTR ServerDN,_In_opt_ LPTSTR DomainDN,_Out_opt_ BOOL *fLastDcInDomain,_In_ BOOL fCommit)
DWORD None ntdsapi.DsRemoveDsServerW(_In_ HANDLE hDs,_In_ LPTSTR ServerDN,_In_opt_ LPTSTR DomainDN,_Out_opt_ BOOL *fLastDcInDomain,_In_ BOOL fCommit)
DWORD None ntdsapi.DsReplicaDelA(_In_ HANDLE hDS,_In_ LPCTSTR NameContext,_In_ LPCTSTR DsaSrc,_In_ ULONG Options)
DWORD None ntdsapi.DsReplicaDel(_In_ HANDLE hDS,_In_ LPCTSTR NameContext,_In_ LPCTSTR DsaSrc,_In_ ULONG Options)
DWORD None ntdsapi.DsReplicaDelW(_In_ HANDLE hDS,_In_ LPCTSTR NameContext,_In_ LPCTSTR DsaSrc,_In_ ULONG Options)
DWORD None ntdsapi.DsReplicaGetInfo2(_In_ HANDLE hDS,_In_ DS_REPL_INFO_TYPE InfoType,_In_opt_ LPCWSTR pszObject,_In_opt_ UUID *puuidForSourceDsaObjGuid,_In_opt_ LPCWSTR pszAttributeName,_In_opt_ LPCWSTR pszValue,_In_ DWORD dwFlags,_In_ DWORD dwEnumerationContext,_Out_ VOID **ppInfo)
DWORD None ntdsapi.DsReplicaGetInfo2W(_In_ HANDLE hDS,_In_ DS_REPL_INFO_TYPE InfoType,_In_opt_ LPCWSTR pszObject,_In_opt_ UUID *puuidForSourceDsaObjGuid,_In_opt_ LPCWSTR pszAttributeName,_In_opt_ LPCWSTR pszValue,_In_ DWORD dwFlags,_In_ DWORD dwEnumerationContext,_Out_ VOID **ppInfo)
DWORD None ntdsapi.DsReplicaGetInfo(_In_ HANDLE hDS,_In_ DS_REPL_INFO_TYPE InfoType,_In_opt_ LPCWSTR pszObject,_In_opt_ UUID *puuidForSourceDsaObjGuid,_Out_ VOID **ppInfo)
DWORD None ntdsapi.DsReplicaGetInfoW(_In_ HANDLE hDS,_In_ DS_REPL_INFO_TYPE InfoType,_In_opt_ LPCWSTR pszObject,_In_opt_ UUID *puuidForSourceDsaObjGuid,_Out_ VOID **ppInfo)
DWORD None ntdsapi.DsServerRegisterSpnA(_In_ DS_SPN_WRITE_OP Operation,_In_ LPCTSTR ServiceClass,_In_opt_ LPCTSTR UserObjectDN)
DWORD None ntdsapi.DsServerRegisterSpn(_In_ DS_SPN_WRITE_OP Operation,_In_ LPCTSTR ServiceClass,_In_opt_ LPCTSTR UserObjectDN)
DWORD None ntdsapi.DsServerRegisterSpnW(_In_ DS_SPN_WRITE_OP Operation,_In_ LPCTSTR ServiceClass,_In_opt_ LPCTSTR UserObjectDN)
DWORD None ntdsapi.DsUnBindA(_In_ HANDLE *phDS)
DWORD None ntdsapi.DsUnBind(_In_ HANDLE *phDS)
DWORD None ntdsapi.DsUnBindW(_In_ HANDLE *phDS)
DWORD None ntdsapi.DsUnquoteRdnValueA(_In_ DWORD cQuotedRdnValueLength,_In_ LPCTCH psQuotedRdnValue,_Inout_ DWORD *pcUnquotedRdnValueLength,_Out_ LPTCH psUnquotedRdnValue)
DWORD None ntdsapi.DsUnquoteRdnValue(_In_ DWORD cQuotedRdnValueLength,_In_ LPCTCH psQuotedRdnValue,_Inout_ DWORD *pcUnquotedRdnValueLength,_Out_ LPTCH psUnquotedRdnValue)
DWORD None ntdsapi.DsUnquoteRdnValueW(_In_ DWORD cQuotedRdnValueLength,_In_ LPCTCH psQuotedRdnValue,_Inout_ DWORD *pcUnquotedRdnValueLength,_Out_ LPTCH psUnquotedRdnValue)
DWORD None ntdsapi.DsWriteAccountSpnA(_In_ HANDLE hDS,_In_ DS_SPN_WRITE_OP Operation,_In_ LPCTSTR pszAccount,_In_ DWORD cSpn,_In_ LPCTSTR *rpszSpn)
DWORD None ntdsapi.DsWriteAccountSpn(_In_ HANDLE hDS,_In_ DS_SPN_WRITE_OP Operation,_In_ LPCTSTR pszAccount,_In_ DWORD cSpn,_In_ LPCTSTR *rpszSpn)
DWORD None ntdsapi.DsWriteAccountSpnW(_In_ HANDLE hDS,_In_ DS_SPN_WRITE_OP Operation,_In_ LPCTSTR pszAccount,_In_ DWORD cSpn,_In_ LPCTSTR *rpszSpn)
DWORD None ole32.CoGetCurrentProcess(void None None)
DWORD None rasapi32.RasClearConnectionStatistics(_In_ HRASCONN hRasConn)
DWORD None rasapi32.RasClearLinkStatistics(_In_ HRASCONN hRasConn,_In_ DWORD dwSubEntry)
DWORD None rasapi32.RasConnectionNotificationA(_In_ HRASCONN hrasconn,_In_ HANDLE hEvent,_In_ DWORD dwFlags)
DWORD None rasapi32.RasConnectionNotification(_In_ HRASCONN hrasconn,_In_ HANDLE hEvent,_In_ DWORD dwFlags)
DWORD None rasapi32.RasConnectionNotificationW(_In_ HRASCONN hrasconn,_In_ HANDLE hEvent,_In_ DWORD dwFlags)
DWORD None rasapi32.RasCreatePhonebookEntryA(_In_ HWND hwnd,_In_ LPCTSTR lpszPhonebook)
DWORD None rasapi32.RasCreatePhonebookEntry(_In_ HWND hwnd,_In_ LPCTSTR lpszPhonebook)
DWORD None rasapi32.RasCreatePhonebookEntryW(_In_ HWND hwnd,_In_ LPCTSTR lpszPhonebook)
DWORD None rasapi32.RasDeleteEntryA(_In_ LPCTSTR lpszPhonebook,_In_ LPCTSTR lpszEntry)
DWORD None rasapi32.RasDeleteEntry(_In_ LPCTSTR lpszPhonebook,_In_ LPCTSTR lpszEntry)
DWORD None rasapi32.RasDeleteEntryW(_In_ LPCTSTR lpszPhonebook,_In_ LPCTSTR lpszEntry)
DWORD None rasapi32.RasDeleteSubEntryA(_In_ LPCTSTR lpszPhonebook,_In_ LPCTSTR lpszEntry,_In_ DWORD dwSubEntryId)
DWORD None rasapi32.RasDeleteSubEntry(_In_ LPCTSTR lpszPhonebook,_In_ LPCTSTR lpszEntry,_In_ DWORD dwSubEntryId)
DWORD None rasapi32.RasDeleteSubEntryW(_In_ LPCTSTR lpszPhonebook,_In_ LPCTSTR lpszEntry,_In_ DWORD dwSubEntryId)
DWORD None rasapi32.RasDialA(_In_ LPRASDIALEXTENSIONS lpRasDialExtensions,_In_ LPCTSTR lpszPhonebook,_In_ LPRASDIALPARAMS lpRasDialParams,_In_ DWORD dwNotifierType,_In_ LPVOID lpvNotifier,_Out_ LPHRASCONN lphRasConn)
DWORD None rasapi32.RasDial(_In_ LPRASDIALEXTENSIONS lpRasDialExtensions,_In_ LPCTSTR lpszPhonebook,_In_ LPRASDIALPARAMS lpRasDialParams,_In_ DWORD dwNotifierType,_In_ LPVOID lpvNotifier,_Out_ LPHRASCONN lphRasConn)
DWORD None rasapi32.RasDialW(_In_ LPRASDIALEXTENSIONS lpRasDialExtensions,_In_ LPCTSTR lpszPhonebook,_In_ LPRASDIALPARAMS lpRasDialParams,_In_ DWORD dwNotifierType,_In_ LPVOID lpvNotifier,_Out_ LPHRASCONN lphRasConn)
DWORD None rasapi32.RasEditPhonebookEntryA(_In_ HWND hwnd,_In_ LPCTSTR lpszPhonebook,_In_ LPCTSTR lpszEntryName)
DWORD None rasapi32.RasEditPhonebookEntry(_In_ HWND hwnd,_In_ LPCTSTR lpszPhonebook,_In_ LPCTSTR lpszEntryName)
DWORD None rasapi32.RasEditPhonebookEntryW(_In_ HWND hwnd,_In_ LPCTSTR lpszPhonebook,_In_ LPCTSTR lpszEntryName)
DWORD None rasapi32.RasEnumAutodialAddressesA(_Inout_ LPTSTR *lppAddresses,_Inout_ LPDWORD lpdwcbAddresses,_Out_ LPDWORD lpdwcAddresses)
DWORD None rasapi32.RasEnumAutodialAddresses(_Inout_ LPTSTR *lppAddresses,_Inout_ LPDWORD lpdwcbAddresses,_Out_ LPDWORD lpdwcAddresses)
DWORD None rasapi32.RasEnumAutodialAddressesW(_Inout_ LPTSTR *lppAddresses,_Inout_ LPDWORD lpdwcbAddresses,_Out_ LPDWORD lpdwcAddresses)
DWORD None rasapi32.RasEnumConnectionsA(_Inout_ LPRASCONN lprasconn,_Inout_ LPDWORD lpcb,_Out_ LPDWORD lpcConnections)
DWORD None rasapi32.RasEnumConnections(_Inout_ LPRASCONN lprasconn,_Inout_ LPDWORD lpcb,_Out_ LPDWORD lpcConnections)
DWORD None rasapi32.RasEnumConnectionsW(_Inout_ LPRASCONN lprasconn,_Inout_ LPDWORD lpcb,_Out_ LPDWORD lpcConnections)
DWORD None rasapi32.RasEnumDevicesA(_In_ LPRASDEVINFO lpRasDevInfo,_Inout_ LPDWORD lpcb,_Out_ LPDWORD lpcDevices)
DWORD None rasapi32.RasEnumDevices(_In_ LPRASDEVINFO lpRasDevInfo,_Inout_ LPDWORD lpcb,_Out_ LPDWORD lpcDevices)
DWORD None rasapi32.RasEnumDevicesW(_In_ LPRASDEVINFO lpRasDevInfo,_Inout_ LPDWORD lpcb,_Out_ LPDWORD lpcDevices)
DWORD None rasapi32.RasEnumEntriesA(_In_ LPCTSTR reserved,_In_ LPCTSTR lpszPhonebook,_Inout_ LPRASENTRYNAME lprasentryname,_Inout_ LPDWORD lpcb,_Out_ LPDWORD lpcEntries)
DWORD None rasapi32.RasEnumEntries(_In_ LPCTSTR reserved,_In_ LPCTSTR lpszPhonebook,_Inout_ LPRASENTRYNAME lprasentryname,_Inout_ LPDWORD lpcb,_Out_ LPDWORD lpcEntries)
DWORD None rasapi32.RasEnumEntriesW(_In_ LPCTSTR reserved,_In_ LPCTSTR lpszPhonebook,_Inout_ LPRASENTRYNAME lprasentryname,_Inout_ LPDWORD lpcb,_Out_ LPDWORD lpcEntries)
DWORD None rasapi32.RasGetAutodialAddressA(_In_ LPCTSTR lpszAddress,_In_ LPDWORD lpdwReserved,_Inout_ LPRASAUTODIALENTRY lpAutoDialEntries,_Inout_ LPDWORD lpdwcbAutoDialEntries,_Out_ LPDWORD lpdwcAutoDialEntries)
DWORD None rasapi32.RasGetAutodialAddress(_In_ LPCTSTR lpszAddress,_In_ LPDWORD lpdwReserved,_Inout_ LPRASAUTODIALENTRY lpAutoDialEntries,_Inout_ LPDWORD lpdwcbAutoDialEntries,_Out_ LPDWORD lpdwcAutoDialEntries)
DWORD None rasapi32.RasGetAutodialAddressW(_In_ LPCTSTR lpszAddress,_In_ LPDWORD lpdwReserved,_Inout_ LPRASAUTODIALENTRY lpAutoDialEntries,_Inout_ LPDWORD lpdwcbAutoDialEntries,_Out_ LPDWORD lpdwcAutoDialEntries)
DWORD None rasapi32.RasGetAutodialEnableA(_In_ DWORD dwDialingLocation,_Out_ LPBOOL lpfEnabled)
DWORD None rasapi32.RasGetAutodialEnable(_In_ DWORD dwDialingLocation,_Out_ LPBOOL lpfEnabled)
DWORD None rasapi32.RasGetAutodialEnableW(_In_ DWORD dwDialingLocation,_Out_ LPBOOL lpfEnabled)
DWORD None rasapi32.RasGetAutodialParamA(_In_ DWORD dwKey,_Out_ LPVOID lpvValue,_Inout_ LPDWORD lpdwcbValue)
DWORD None rasapi32.RasGetAutodialParam(_In_ DWORD dwKey,_Out_ LPVOID lpvValue,_Inout_ LPDWORD lpdwcbValue)
DWORD None rasapi32.RasGetAutodialParamW(_In_ DWORD dwKey,_Out_ LPVOID lpvValue,_Inout_ LPDWORD lpdwcbValue)
DWORD None rasapi32.RasGetConnectionStatistics(_In_ HRASCONN hRasConn,_Inout_ RAS_STATS *lpStatistics)
DWORD None rasapi32.RasGetConnectStatusA(_In_ HRASCONN hrasconn,_Inout_ LPRASCONNSTATUS lprasconnstatus)
DWORD None rasapi32.RasGetConnectStatus(_In_ HRASCONN hrasconn,_Inout_ LPRASCONNSTATUS lprasconnstatus)
DWORD None rasapi32.RasGetConnectStatusW(_In_ HRASCONN hrasconn,_Inout_ LPRASCONNSTATUS lprasconnstatus)
DWORD None rasapi32.RasGetCountryInfoA(_Inout_ LPRASCTRYINFO lpRasCtryInfo,_Inout_ LPDWORD lpdwSize)
DWORD None rasapi32.RasGetCountryInfo(_Inout_ LPRASCTRYINFO lpRasCtryInfo,_Inout_ LPDWORD lpdwSize)
DWORD None rasapi32.RasGetCountryInfoW(_Inout_ LPRASCTRYINFO lpRasCtryInfo,_Inout_ LPDWORD lpdwSize)
DWORD None rasapi32.RasGetCredentialsA(_In_ LPCTSTR lpszPhonebook,_In_ LPCTSTR lpszEntry,_Inout_ LPRASCREDENTIALS lpCredentials)
DWORD None rasapi32.RasGetCredentials(_In_ LPCTSTR lpszPhonebook,_In_ LPCTSTR lpszEntry,_Inout_ LPRASCREDENTIALS lpCredentials)
DWORD None rasapi32.RasGetCredentialsW(_In_ LPCTSTR lpszPhonebook,_In_ LPCTSTR lpszEntry,_Inout_ LPRASCREDENTIALS lpCredentials)
DWORD None rasapi32.RasGetCustomAuthDataA(_In_ LPCWSTR pszPhonebook,_In_ LPCWSTR pszEntry,_Out_ BYTE *pbCustomAuthData,_Inout_ DWORD *pdwSizeofCustomAuthData)
DWORD None rasapi32.RasGetCustomAuthData(_In_ LPCWSTR pszPhonebook,_In_ LPCWSTR pszEntry,_Out_ BYTE *pbCustomAuthData,_Inout_ DWORD *pdwSizeofCustomAuthData)
DWORD None rasapi32.RasGetCustomAuthDataW(_In_ LPCWSTR pszPhonebook,_In_ LPCWSTR pszEntry,_Out_ BYTE *pbCustomAuthData,_Inout_ DWORD *pdwSizeofCustomAuthData)
DWORD None rasapi32.RasGetEapUserDataA(_In_ HANDLE hToken,_In_ LPCTSTR pszPhonebook,_In_ LPCTSTR pszEntry,_Out_ BYTE *pbEapData,_Inout_ DWORD *pdwSizeofEapData)
DWORD None rasapi32.RasGetEapUserData(_In_ HANDLE hToken,_In_ LPCTSTR pszPhonebook,_In_ LPCTSTR pszEntry,_Out_ BYTE *pbEapData,_Inout_ DWORD *pdwSizeofEapData)
DWORD None rasapi32.RasGetEapUserDataW(_In_ HANDLE hToken,_In_ LPCTSTR pszPhonebook,_In_ LPCTSTR pszEntry,_Out_ BYTE *pbEapData,_Inout_ DWORD *pdwSizeofEapData)
DWORD None rasapi32.RasGetEapUserIdentityA(_In_ LPCSTR pszPhonebook,_In_ LPCSTR pszEntry,_In_ DWORD dwFlags,_In_ HWND hwnd,_Out_ LPRASEAPUSERIDENTITY *ppRasEapUserIdentity)
DWORD None rasapi32.RasGetEapUserIdentity(_In_ LPCSTR pszPhonebook,_In_ LPCSTR pszEntry,_In_ DWORD dwFlags,_In_ HWND hwnd,_Out_ LPRASEAPUSERIDENTITY *ppRasEapUserIdentity)
DWORD None rasapi32.RasGetEapUserIdentityW(_In_ LPCSTR pszPhonebook,_In_ LPCSTR pszEntry,_In_ DWORD dwFlags,_In_ HWND hwnd,_Out_ LPRASEAPUSERIDENTITY *ppRasEapUserIdentity)
DWORD None rasapi32.RasGetEntryDialParamsA(_In_ LPCTSTR lpszPhonebook,_Inout_ LPRASDIALPARAMS lprasdialparams,_Out_ LPBOOL lpfPassword)
DWORD None rasapi32.RasGetEntryDialParams(_In_ LPCTSTR lpszPhonebook,_Inout_ LPRASDIALPARAMS lprasdialparams,_Out_ LPBOOL lpfPassword)
DWORD None rasapi32.RasGetEntryDialParamsW(_In_ LPCTSTR lpszPhonebook,_Inout_ LPRASDIALPARAMS lprasdialparams,_Out_ LPBOOL lpfPassword)
DWORD None rasapi32.RasGetEntryPropertiesA(_In_ LPCTSTR lpszPhonebook,_In_ LPCTSTR lpszEntry,_Inout_ LPRASENTRY lpRasEntry,_Inout_ LPDWORD lpdwEntryInfoSize,_Out_ LPBYTE lpbDeviceInfo,_Inout_ LPDWORD lpdwDeviceInfoSize)
DWORD None rasapi32.RasGetEntryProperties(_In_ LPCTSTR lpszPhonebook,_In_ LPCTSTR lpszEntry,_Inout_ LPRASENTRY lpRasEntry,_Inout_ LPDWORD lpdwEntryInfoSize,_Out_ LPBYTE lpbDeviceInfo,_Inout_ LPDWORD lpdwDeviceInfoSize)
DWORD None rasapi32.RasGetEntryPropertiesW(_In_ LPCTSTR lpszPhonebook,_In_ LPCTSTR lpszEntry,_Inout_ LPRASENTRY lpRasEntry,_Inout_ LPDWORD lpdwEntryInfoSize,_Out_ LPBYTE lpbDeviceInfo,_Inout_ LPDWORD lpdwDeviceInfoSize)
DWORD None rasapi32.RasGetErrorStringA(_In_ UINT uErrorValue,_Out_ LPTSTR lpszErrorString,_In_ DWORD cBufSize)
DWORD None rasapi32.RasGetErrorString(_In_ UINT uErrorValue,_Out_ LPTSTR lpszErrorString,_In_ DWORD cBufSize)
DWORD None rasapi32.RasGetErrorStringW(_In_ UINT uErrorValue,_Out_ LPTSTR lpszErrorString,_In_ DWORD cBufSize)
DWORD None rasapi32.RasGetLinkStatistics(_In_ HRASCONN hRasConn,_In_ DWORD dwSubEntry,_Inout_ RAS_STATS *lpStatistics)
DWORD None rasapi32.rasgetnapstatus(_In_ HRASCONN hRasConn,_Inout_ LPRASNAPSTATE pNapState)
DWORD None rasapi32.RasGetProjectionInfoA(_In_ HRASCONN hrasconn,_In_ RASPROJECTION rasprojection,_Out_ LPVOID lpprojection,_Inout_ LPDWORD lpcb)
DWORD None rasapi32.RasGetProjectionInfo(_In_ HRASCONN hrasconn,_In_ RASPROJECTION rasprojection,_Out_ LPVOID lpprojection,_Inout_ LPDWORD lpcb)
DWORD None rasapi32.RasGetProjectionInfoW(_In_ HRASCONN hrasconn,_In_ RASPROJECTION rasprojection,_Out_ LPVOID lpprojection,_Inout_ LPDWORD lpcb)
DWORD None rasapi32.RasGetQuarantineConnectionId(_In_ HRASCONN hRasConn,_Out_ ConnectionId *lpConnectionId)
DWORD None rasapi32.RasGetSubEntryHandleA(_In_ HRASCONN hRasConn,_In_ DWORD dwSubEntry,_Out_ LPHRASCONN lphRasConn)
DWORD None rasapi32.RasGetSubEntryHandle(_In_ HRASCONN hRasConn,_In_ DWORD dwSubEntry,_Out_ LPHRASCONN lphRasConn)
DWORD None rasapi32.RasGetSubEntryHandleW(_In_ HRASCONN hRasConn,_In_ DWORD dwSubEntry,_Out_ LPHRASCONN lphRasConn)
DWORD None rasapi32.RasGetSubEntryPropertiesA(_In_ LPCTSTR lpszPhonebook,_In_ LPCTSTR lpszEntry,_In_ DWORD dwSubEntry,_Inout_ LPRASSUBENTRY lpRasSubEntry,_Inout_ LPDWORD lpdwcb,_In_ LPBYTE lpbDeviceConfig,_In_ LPDWORD lpcbDeviceConfig)
DWORD None rasapi32.RasGetSubEntryProperties(_In_ LPCTSTR lpszPhonebook,_In_ LPCTSTR lpszEntry,_In_ DWORD dwSubEntry,_Inout_ LPRASSUBENTRY lpRasSubEntry,_Inout_ LPDWORD lpdwcb,_In_ LPBYTE lpbDeviceConfig,_In_ LPDWORD lpcbDeviceConfig)
DWORD None rasapi32.RasGetSubEntryPropertiesW(_In_ LPCTSTR lpszPhonebook,_In_ LPCTSTR lpszEntry,_In_ DWORD dwSubEntry,_Inout_ LPRASSUBENTRY lpRasSubEntry,_Inout_ LPDWORD lpdwcb,_In_ LPBYTE lpbDeviceConfig,_In_ LPDWORD lpcbDeviceConfig)
DWORD None rasapi32.RasHangUpA(_In_ HRASCONN hrasconn)
DWORD None rasapi32.RasHangUp(_In_ HRASCONN hrasconn)
DWORD None rasapi32.RasHangUpW(_In_ HRASCONN hrasconn)
DWORD None rasapi32.RasInvokeEapUI(_In_ HRASCONN hRasConn,_In_ DWORD dwSubEntry,_In_ LPRASDIALEXTENSIONS lpExtensions,_In_ HWND hwnd)
DWORD None rasapi32.RasRenameEntryA(_In_ LPCTSTR lpszPhonebook,_In_ LPCTSTR lpszOldEntry,_In_ LPCTSTR lpszNewEntry)
DWORD None rasapi32.RasRenameEntry(_In_ LPCTSTR lpszPhonebook,_In_ LPCTSTR lpszOldEntry,_In_ LPCTSTR lpszNewEntry)
DWORD None rasapi32.RasRenameEntryW(_In_ LPCTSTR lpszPhonebook,_In_ LPCTSTR lpszOldEntry,_In_ LPCTSTR lpszNewEntry)
DWORD None rasapi32.RasSetAutodialAddressA(_In_ LPCTSTR lpszAddress,_In_ DWORD dwReserved,_In_ LPRASAUTODIALENTRY lpAutoDialEntries,_In_ DWORD dwcbAutoDialEntries,_In_ DWORD dwcAutoDialEntries)
DWORD None rasapi32.RasSetAutodialAddress(_In_ LPCTSTR lpszAddress,_In_ DWORD dwReserved,_In_ LPRASAUTODIALENTRY lpAutoDialEntries,_In_ DWORD dwcbAutoDialEntries,_In_ DWORD dwcAutoDialEntries)
DWORD None rasapi32.RasSetAutodialAddressW(_In_ LPCTSTR lpszAddress,_In_ DWORD dwReserved,_In_ LPRASAUTODIALENTRY lpAutoDialEntries,_In_ DWORD dwcbAutoDialEntries,_In_ DWORD dwcAutoDialEntries)
DWORD None rasapi32.RasSetAutodialEnableA(_In_ DWORD dwDialingLocation,_In_ BOOL fEnabled)
DWORD None rasapi32.RasSetAutodialEnable(_In_ DWORD dwDialingLocation,_In_ BOOL fEnabled)
DWORD None rasapi32.RasSetAutodialEnableW(_In_ DWORD dwDialingLocation,_In_ BOOL fEnabled)
DWORD None rasapi32.RasSetAutodialParamA(_In_ DWORD dwKey,_Out_ LPVOID lpvValue,_In_ DWORD dwcbValue)
DWORD None rasapi32.RasSetAutodialParam(_In_ DWORD dwKey,_Out_ LPVOID lpvValue,_In_ DWORD dwcbValue)
DWORD None rasapi32.RasSetAutodialParamW(_In_ DWORD dwKey,_Out_ LPVOID lpvValue,_In_ DWORD dwcbValue)
DWORD None rasapi32.RasSetCredentialsA(_In_ LPCTSTR lpszPhonebook,_In_ LPCTSTR lpszEntry,_In_ LPRASCREDENTIALS lpCredentials,_In_ BOOL fClearCredentials)
DWORD None rasapi32.RasSetCredentials(_In_ LPCTSTR lpszPhonebook,_In_ LPCTSTR lpszEntry,_In_ LPRASCREDENTIALS lpCredentials,_In_ BOOL fClearCredentials)
DWORD None rasapi32.RasSetCredentialsW(_In_ LPCTSTR lpszPhonebook,_In_ LPCTSTR lpszEntry,_In_ LPRASCREDENTIALS lpCredentials,_In_ BOOL fClearCredentials)
DWORD None rasapi32.RasSetCustomAuthDataA(_In_ LPCWSTR pszPhonebook,_In_ LPCWSTR pszEntry,_In_ BYTE *pbCustomAuthData,_In_ DWORD dwSizeofCustomAuthData)
DWORD None rasapi32.RasSetCustomAuthData(_In_ LPCWSTR pszPhonebook,_In_ LPCWSTR pszEntry,_In_ BYTE *pbCustomAuthData,_In_ DWORD dwSizeofCustomAuthData)
DWORD None rasapi32.RasSetCustomAuthDataW(_In_ LPCWSTR pszPhonebook,_In_ LPCWSTR pszEntry,_In_ BYTE *pbCustomAuthData,_In_ DWORD dwSizeofCustomAuthData)
DWORD None rasapi32.RasSetEapUserDataA(_In_ HANDLE hToken,_In_ LPCTSTR pszPhonebook,_In_ LPCTSTR pszEntry,_In_ BYTE *pbEapData,_In_ DWORD dwSizeofEapData)
DWORD None rasapi32.RasSetEapUserData(_In_ HANDLE hToken,_In_ LPCTSTR pszPhonebook,_In_ LPCTSTR pszEntry,_In_ BYTE *pbEapData,_In_ DWORD dwSizeofEapData)
DWORD None rasapi32.RasSetEapUserDataW(_In_ HANDLE hToken,_In_ LPCTSTR pszPhonebook,_In_ LPCTSTR pszEntry,_In_ BYTE *pbEapData,_In_ DWORD dwSizeofEapData)
DWORD None rasapi32.RasSetEntryDialParamsA(_In_ LPCTSTR lpszPhonebook,_In_ LPRASDIALPARAMS lprasdialparams,_In_ BOOL fRemovePassword)
DWORD None rasapi32.RasSetEntryDialParams(_In_ LPCTSTR lpszPhonebook,_In_ LPRASDIALPARAMS lprasdialparams,_In_ BOOL fRemovePassword)
DWORD None rasapi32.RasSetEntryDialParamsW(_In_ LPCTSTR lpszPhonebook,_In_ LPRASDIALPARAMS lprasdialparams,_In_ BOOL fRemovePassword)
DWORD None rasapi32.RasSetEntryPropertiesA(_In_ LPCTSTR lpszPhonebook,_In_ LPCTSTR lpszEntry,_In_ LPRASENTRY lpRasEntry,_In_ DWORD dwEntryInfoSize,_In_ LPBYTE lpbDeviceInfo,_In_ DWORD dwDeviceInfoSize)
DWORD None rasapi32.RasSetEntryProperties(_In_ LPCTSTR lpszPhonebook,_In_ LPCTSTR lpszEntry,_In_ LPRASENTRY lpRasEntry,_In_ DWORD dwEntryInfoSize,_In_ LPBYTE lpbDeviceInfo,_In_ DWORD dwDeviceInfoSize)
DWORD None rasapi32.RasSetEntryPropertiesW(_In_ LPCTSTR lpszPhonebook,_In_ LPCTSTR lpszEntry,_In_ LPRASENTRY lpRasEntry,_In_ DWORD dwEntryInfoSize,_In_ LPBYTE lpbDeviceInfo,_In_ DWORD dwDeviceInfoSize)
DWORD None rasapi32.RasSetSubEntryPropertiesA(_In_ LPCTSTR lpszPhonebook,_In_ LPCTSTR lpszEntry,_In_ DWORD dwSubEntry,_In_ LPRASSUBENTRY lpRasSubEntry,_In_ DWORD dwcbRasSubEntry,_In_ LPBYTE lpbDeviceConfig,_In_ DWORD dwcbDeviceConfig)
DWORD None rasapi32.RasSetSubEntryProperties(_In_ LPCTSTR lpszPhonebook,_In_ LPCTSTR lpszEntry,_In_ DWORD dwSubEntry,_In_ LPRASSUBENTRY lpRasSubEntry,_In_ DWORD dwcbRasSubEntry,_In_ LPBYTE lpbDeviceConfig,_In_ DWORD dwcbDeviceConfig)
DWORD None rasapi32.RasSetSubEntryPropertiesW(_In_ LPCTSTR lpszPhonebook,_In_ LPCTSTR lpszEntry,_In_ DWORD dwSubEntry,_In_ LPRASSUBENTRY lpRasSubEntry,_In_ DWORD dwcbRasSubEntry,_In_ LPBYTE lpbDeviceConfig,_In_ DWORD dwcbDeviceConfig)
DWORD None rasapi32.RasValidateEntryNameA(_In_ LPCTSTR lpszPhonebook,_In_ LPCTSTR lpszEntry)
DWORD None rasapi32.RasValidateEntryName(_In_ LPCTSTR lpszPhonebook,_In_ LPCTSTR lpszEntry)
DWORD None rasapi32.RasValidateEntryNameW(_In_ LPCTSTR lpszPhonebook,_In_ LPCTSTR lpszEntry)
DWORD None rtm.MgmGroupEnumerationGetNext(_In_ HANDLE hEnum,_Inout_ PDWORD pdwBufferSize,_Inout_ PBYTE pbBuffer,_Inout_ PDWORD pdwNumEntries)
DWORD None rtm.MgmGroupEnumerationStart(_In_ HANDLE hProtocol,_In_ MGM_ENUM_TYPES metEnumType,_Out_ HANDLE *phEnumHandle)
DWORD None rtm.MgmTakeInterfaceOwnership(_In_ HANDLE hProtocol,_In_ DWORD dwIfIndex,_In_ DWORD dwIfNextHopAddr)
DWORD None setupapi.SetupDecompressOrCopyFileA(_In_ PCTSTR SourceFileName,_In_ PCTSTR TargetFileName,_In_ PUINT CompressionType)
DWORD None setupapi.SetupDecompressOrCopyFile(_In_ PCTSTR SourceFileName,_In_ PCTSTR TargetFileName,_In_ PUINT CompressionType)
DWORD None setupapi.SetupDecompressOrCopyFileW(_In_ PCTSTR SourceFileName,_In_ PCTSTR TargetFileName,_In_ PUINT CompressionType)
DWORD None setupapi.SetupGetFieldCount(_In_ PINFCONTEXT Context)
DWORD None setupapi.SetupGetFileCompressionInfoA(_In_ PCTSTR SourceFileName,_Inout_ PTSTR *ActualSourceFileName,_Inout_ PDWORD SourceFileSize,_Inout_ PDWORD TargetFileSize,_Inout_ PUINT CompressionType)
DWORD None setupapi.SetupGetFileCompressionInfo(_In_ PCTSTR SourceFileName,_Inout_ PTSTR *ActualSourceFileName,_Inout_ PDWORD SourceFileSize,_Inout_ PDWORD TargetFileSize,_Inout_ PUINT CompressionType)
DWORD None setupapi.SetupGetFileCompressionInfoW(_In_ PCTSTR SourceFileName,_Inout_ PTSTR *ActualSourceFileName,_Inout_ PDWORD SourceFileSize,_Inout_ PDWORD TargetFileSize,_Inout_ PUINT CompressionType)
DWORD None shdocvw.SoftwareUpdateMessageBox(_In_opt_ HWND hWnd,_In_ PCWSTR pszDistUnit,DWORD dwFlags None,_Out_opt_ LPSOFTDISTINFO psdi)
DWORD None shell32.DoEnvironmentSubstA(_Inout_ LPTSTR pszSrc,UINT cchSrc None)
DWORD None shell32.DoEnvironmentSubst(_Inout_ LPTSTR pszSrc,UINT cchSrc None)
DWORD None shell32.DoEnvironmentSubstW(_Inout_ LPTSTR pszSrc,UINT cchSrc None)
DWORD None shell32.SHFormatDrive(_In_ HWND hwnd,UINT drive None,UINT fmtID None,UINT options None)
DWORD None shell32.SHRestricted(RESTRICTIONS rest None)
DWORD None shlwapi.CharUpperBuffWrapW(_In_ LPWSTR pch,_In_ DWORD cchLength)
DWORD None shlwapi.SHQueryValueExA(_In_ HKEY hkey,_In_opt_ LPCTSTR pszValue,LPDWORD pdwReserved None,_Out_opt_ LPDWORD pdwType,_Out_opt_ LPVOID pvData,_Inout_opt_ LPDWORD pcbData)
DWORD None shlwapi.SHQueryValueEx(_In_ HKEY hkey,_In_opt_ LPCTSTR pszValue,LPDWORD pdwReserved None,_Out_opt_ LPDWORD pdwType,_Out_opt_ LPVOID pvData,_Inout_opt_ LPDWORD pcbData)
DWORD None shlwapi.SHQueryValueExW(_In_ HKEY hkey,_In_opt_ LPCTSTR pszValue,LPDWORD pdwReserved None,_Out_opt_ LPDWORD pdwType,_Out_opt_ LPVOID pvData,_Inout_opt_ LPDWORD pcbData)
DWORD None shlwapi.StopWatchFlush(void None None)
DWORD None shlwapi.StopWatchMode(void None None)
DWORD None shlwapi.StrCatChainW(_Out_ PWSTR pszDst,DWORD cchDst None,DWORD ichAt None,_In_ PCWSTR pszSrc)
DWORD None user32.GetListBoxInfo(_In_ HWND hwnd)
DWORD None user32.GetMenuContextHelpId(HMENU hmenu None)
DWORD None user32.GetWindowContextHelpId(HWND hwnd None)
DWORD None userenv.GetAppliedGPOListA(_In_ DWORD dwFlags,_In_ LPCTSTR pMachineName,_In_ PSID pSidUser,_In_ GUID *pGuidExtension,_Out_ PGROUP_POLICY_OBJECT *ppGPOList)
DWORD None userenv.GetAppliedGPOList(_In_ DWORD dwFlags,_In_ LPCTSTR pMachineName,_In_ PSID pSidUser,_In_ GUID *pGuidExtension,_Out_ PGROUP_POLICY_OBJECT *ppGPOList)
DWORD None userenv.GetAppliedGPOListW(_In_ DWORD dwFlags,_In_ LPCTSTR pMachineName,_In_ PSID pSidUser,_In_ GUID *pGuidExtension,_Out_ PGROUP_POLICY_OBJECT *ppGPOList)
DWORD None userenv.ProcessGroupPolicyCompletedEx(_In_ REFGPEXTENSIONID extensionId,_In_ ASYNCCOMPLETIONHANDLE pAsyncHandle,_In_ DWORD dwStatus,_In_ HRESULT RsopStatus)
DWORD None userenv.ProcessGroupPolicyCompleted(_In_ REFGPEXTENSIONID extensionId,_In_ ASYNCCOMPLETIONHANDLE pAsyncHandle,_In_ DWORD dwStatus)
DWORD None uxtheme.GetThemeAppProperties(void None None)
DWORD None virtdisk.AttachVirtualDisk(_In_ HANDLE VirtualDiskHandle,_In_opt_ PSECURITY_DESCRIPTOR SecurityDescriptor,_In_ ATTACH_VIRTUAL_DISK_FLAG Flags,_In_ ULONG ProviderSpecificFlags,_In_opt_ PATTACH_VIRTUAL_DISK_PARAMETERS Parameters,_In_opt_ LPOVERLAPPED Overlapped)
DWORD None virtdisk.CompactVirtualDisk(_In_ HANDLE VirtualDiskHandle,_In_ COMPACT_VIRTUAL_DISK_FLAG Flags,_In_opt_ PCOMPACT_VIRTUAL_DISK_PARAMETERS Parameters,_In_opt_ LPOVERLAPPED Overlapped)
DWORD None virtdisk.CreateVirtualDisk(_In_ PVIRTUAL_STORAGE_TYPE VirtualStorageType,_In_ PCWSTR Path,_In_ VIRTUAL_DISK_ACCESS_MASK VirtualDiskAccessMask,_In_opt_ PSECURITY_DESCRIPTOR SecurityDescriptor,_In_ CREATE_VIRTUAL_DISK_FLAG Flags,_In_ ULONG ProviderSpecificFlags,_In_ PCREATE_VIRTUAL_DISK_PARAMETERS Parameters,_In_opt_ LPOVERLAPPED Overlapped,_Out_ PHANDLE Handle)
DWORD None virtdisk.DetachVirtualDisk(_In_ HANDLE VirtualDiskHandle,_In_ DETACH_VIRTUAL_DISK_FLAG Flags,_In_ ULONG ProviderSpecificFlags)
DWORD None virtdisk.GetVirtualDiskInformation(_In_ HANDLE VirtualDiskHandle,_Inout_ PULONG VirtualDiskInfoSize,_Inout_ PGET_VIRTUAL_DISK_INFO VirtualDiskInfo,_Inout_opt_ PULONG SizeUsed)
DWORD None virtdisk.GetVirtualDiskPhysicalPath(_In_ HANDLE VirtualDiskHandle,_Inout_ PULONG DiskPathSizeInBytes,_Out_opt_ PWSTR DiskPath)
DWORD None virtdisk.MergeVirtualDisk(_In_ HANDLE VirtualDiskHandle,_In_ MERGE_VIRTUAL_DISK_FLAG Flags,_In_ PMERGE_VIRTUAL_DISK_PARAMETERS Parameters,_In_opt_ LPOVERLAPPED Overlapped)
DWORD None virtdisk.OpenVirtualDisk(_In_ PVIRTUAL_STORAGE_TYPE VirtualStorageType,_In_ PCWSTR Path,_In_ VIRTUAL_DISK_ACCESS_MASK VirtualDiskAccessMask,_In_ OPEN_VIRTUAL_DISK_FLAG Flags,_In_opt_ POPEN_VIRTUAL_DISK_PARAMETERS Parameters,_Out_ PHANDLE Handle)
DWORD None virtdisk.QueryChangesVirtualDisk(_In_ HANDLE VirtualDiskHandle,_In_ PCWSTR ChangeTrackingId,_In_ ULONG64 ByteOffset,_In_ ULONG64 ByteLength,_In_ QUERY_CHANGES_VIRTUAL_DISK_FLAG Flags,_Out_ PQUERY_CHANGES_VIRTUAL_DISK_RANGE Ranges,_Inout_ PULONG RangeCount,_Out_ PULONG64 ProcessedLength)
DWORD None winhttp.WinHttpCreateProxyResolver(_In_ HINTERNET hSession,_Out_ HINTERNET *phResolver)
DWORD None winhttp.WinHttpGetProxyForUrlEx(_In_ HINTERNET hResolver,_In_ PCWSTR pcwszUrl,_In_ WINHTTP_AUTOPROXY_OPTIONS *pAutoProxyOptions,_In_ DWORD_PTR pContext)
DWORD None winhttp.WinHttpResetAutoProxy(_In_ HINTERNET hSession,_In_ DWORD dwFlags)
DWORD None wininet.FtpGetFileSize(_In_ HINTERNET hFile,_Out_ LPDWORD lpdwFileSizeHigh)
DWORD None wininet.InternetAttemptConnect(_In_ DWORD dwReserved)
DWORD None wininet.InternetConfirmZoneCrossingA(_In_ HWND hWnd,_In_ LPTSTR szUrlPrev,_In_ LPTSTR szUrlNew,_In_ BOOL bPost)
DWORD None wininet.InternetConfirmZoneCrossing(_In_ HWND hWnd,_In_ LPTSTR szUrlPrev,_In_ LPTSTR szUrlNew,_In_ BOOL bPost)
DWORD None wininet.InternetConfirmZoneCrossingW(_In_ HWND hWnd,_In_ LPTSTR szUrlPrev,_In_ LPTSTR szUrlNew,_In_ BOOL bPost)
DWORD None wininet.InternetDialA(_In_ HWND hwndParent,_In_ LPTSTR pszEntryName,_In_ DWORD dwFlags,_Out_ DWORD_PTR *lpdwConnection,_In_ DWORD dwReserved)
DWORD None wininet.InternetDial(_In_ HWND hwndParent,_In_ LPTSTR pszEntryName,_In_ DWORD dwFlags,_Out_ DWORD_PTR *lpdwConnection,_In_ DWORD dwReserved)
DWORD None wininet.InternetDialW(_In_ HWND hwndParent,_In_ LPTSTR pszEntryName,_In_ DWORD dwFlags,_Out_ DWORD_PTR *lpdwConnection,_In_ DWORD dwReserved)
DWORD None wininet.InternetErrorDlg(_In_ HWND hWnd,_Inout_ HINTERNET hRequest,_In_ DWORD dwError,_In_ DWORD dwFlags,_Inout_ LPVOID *lppvData)
DWORD None wininet.InternetHangUp(_In_ DWORD_PTR dwConnection,_In_ DWORD dwReserved)
DWORD None wininet.InternetSetCookieExA(_In_ LPCTSTR lpszURL,_In_ LPCTSTR lpszCookieName,_In_ LPCTSTR lpszCookieData,_In_ DWORD dwFlags,_In_ DWORD_PTR dwReserved)
DWORD None wininet.InternetSetCookieEx(_In_ LPCTSTR lpszURL,_In_ LPCTSTR lpszCookieName,_In_ LPCTSTR lpszCookieData,_In_ DWORD dwFlags,_In_ DWORD_PTR dwReserved)
DWORD None wininet.InternetSetCookieExW(_In_ LPCTSTR lpszURL,_In_ LPCTSTR lpszCookieName,_In_ LPCTSTR lpszCookieData,_In_ DWORD dwFlags,_In_ DWORD_PTR dwReserved)
DWORD None wininet.InternetSetFilePointer(_In_ HINTERNET hFile,_In_ LONG lDistanceToMove,_Inout_ PLONG lpDistanceToMoveHigh,_In_ DWORD dwMoveMethod,_In_ DWORD_PTR dwContext)
DWORD None winmm.timeGetTime(void None None)
DWORD None winmm.waveInMessage(HWAVEIN deviceID None,UINT uMsg None,DWORD_PTR dwParam1 None,DWORD_PTR dwParam2 None)
DWORD None winmm.waveOutMessage(HWAVEOUT deviceID None,UINT uMsg None,DWORD_PTR dwParam1 None,DWORD_PTR dwParam2 None)
DWORD None wlanapi.WlanReasonCodeToString(_In_ DWORD dwReasonCode,_In_ DWORD dwBufferSize,_In_ PWCHAR pStringBuffer,_Reserved_ PVOID pReserved)
DWORD None xinput1_4.XInputGetAudioDeviceIds(_In_ DWORD dwUserIndex,_Out_opt_ LPWSTR pRenderDeviceId,_Inout_opt_ UINT *pRenderCount,_Out_opt_ LPWSTR pCaptureDeviceId,_Inout_opt_ UINT *pCaptureCount)
DWORD None xinput1_4.XInputGetBatteryInformation(_In_ DWORD dwUserIndex,_In_ BYTE devType,_Out_ XINPUT_BATTERY_INFORMATION *pBatteryInformation)
DWORD None xinput1_4.XInputGetState(_In_ DWORD dwUserIndex,_Out_ XINPUT_STATE *pState)
DWORD None xinput1_4.XInputSetState(_In_ DWORD dwUserIndex,_Inout_ XINPUT_VIBRATION *pVibration)
DWORD_PTR None shell32.SHGetFileInfoA(_In_ LPCTSTR pszPath,DWORD dwFileAttributes None,_Inout_ SHFILEINFO *psfi,UINT cbFileInfo None,UINT uFlags None)
DWORD_PTR None shell32.SHGetFileInfo(_In_ LPCTSTR pszPath,DWORD dwFileAttributes None,_Inout_ SHFILEINFO *psfi,UINT cbFileInfo None,UINT uFlags None)
DWORD_PTR None shell32.SHGetFileInfoW(_In_ LPCTSTR pszPath,DWORD dwFileAttributes None,_Inout_ SHFILEINFO *psfi,UINT cbFileInfo None,UINT uFlags None)
DWORD_PTR WINAPI kernel32.SetThreadAffinityMask(_In_ HANDLE hThread,_In_ DWORD_PTR dwThreadAffinityMask)
DWORD PXEAPI None.PxeProviderInitialize(_In_ HANDLE hProvider,_In_ HKEY hProviderKey)
DWORD PXEAPI None.PxeProviderRecvRequest(_In_ HANDLE hClientRequest,_In_ PVOID pPacket,_In_ ULONG uPacketLen,_In_ PXE_ADDRESS *pLocalAddress,_In_ PXE_ADDRESS *pRemoteAddress,_Out_ PXE_BOOT_ACTION pAction,_In_ PVOID pContext)
DWORD PXEAPI None.PxeProviderServiceControl(_In_ PVOID pContext,DWORD dwControl None)
DWORD PXEAPI None.PxeProviderShutdown(_In_ PVOID pContext)
DWORD PXEAPI wdspxe.PxeAsyncRecvDone(_In_ HANDLE hClientRequest,_In_ PXE_BOOT_ACTION Action)
DWORD PXEAPI wdspxe.PxeDhcpAppendOption(_Inout_ PVOID pReplyPacket,_In_ ULONG uMaxReplyPacketLen,_Inout_ PULONG puReplyPacketLen,_In_ BYTE bOption,_In_ BYTE bOptionLen,_In_ PVOID pValue)
DWORD PXEAPI wdspxe.PxeDhcpAppendOption(_Inout_ PVOID pReplyPacket,_In_ ULONG uMaxReplyPacketLen,_Inout_ PULONG puReplyPacketLen,_In_ USHORT uBufferLen,_In_ PVOID pBuffer)
DWORD PXEAPI wdspxe.PxeDhcpGetOptionValue(_In_ PVOID pPacket,_In_ ULONG uPacketLen,_In_ ULONG uInstance,_In_ BYTE bOption,_Out_opt_ PBYTE pbOptionLen,_Out_opt_ PVOID *ppOptionValue)
DWORD PXEAPI wdspxe.PxeDhcpGetVendorOptionValue(_In_ PVOID pPacket,_In_ ULONG uPacketLen,_In_ BYTE bOption,_In_ ULONG uInstance,_Out_opt_ PBYTE pbOptionLen,_Out_opt_ PVOID *ppOptionValue)
DWORD PXEAPI wdspxe.PxeDhcpInitialize(_In_ PVOID pRecvPacket,_In_ ULONG uRecvPacketLen,_Inout_ PVOID pReplyPacket,_In_ ULONG uMaxReplyPacketLen,_Out_ PULONG puReplyPacketLen)
DWORD PXEAPI wdspxe.PxeDhcpIsValid(_In_ PVOID pPacket,_In_ ULONG uPacketLen,_In_ BOOL bRequestPacket,_Out_ PBOOL pbPxeOptionPresent)
DWORD PXEAPI wdspxe.PxeDhcpv6AppendOption(_Inout_ PVOID pReply,_In_ ULONG cbReply,_Inout_ PULONG pcbReplyUsed,_In_ WORD wOptionType,_In_ WORD cbOption,_In_ PVOID pOption)
DWORD PXEAPI wdspxe.PxeDhcpv6AppendOptionRaw(_Inout_ PVOID pReply,_In_ ULONG cbReply,_Inout_ PULONG pcbReplyUsed,_In_ USHORT cbBuffer,_In_ PVOID pBuffer)
DWORD PXEAPI wdspxe.PxeDhcpv6CreateRelayRepl(_In_ PPXE_DHCPV6_NESTED_RELAY_MESSAGE pRelayMessages,_In_ ULONG nRelayMessages,_In_ PBYTE pInnerPacket,_In_ ULONG cbInnerPacket,_Out_ PVOID pReplyBuffer,_In_ ULONG cbReplyBuffer,_Out_ PULONG pcbReplyBuffer)
DWORD PXEAPI wdspxe.PxeDhcpv6GetOptionValue(_In_ PVOID pPacket,_In_ ULONG uPacketLen,_In_ ULONG uInstance,_In_ WORD wOption,_Out_opt_ PWORD pwOptionLen,_Out_opt_ PVOID *ppOptionValue)
DWORD PXEAPI wdspxe.PxeDhcpv6GetVendorOptionValue(_In_ PVOID pPacket,_In_ ULONG uPacketLen,_In_ DWORD dwEnterpriseNumber,_In_ WORD wOption,_In_ ULONG uInstance,_Out_opt_ PWORD pwOptionLen,_Out_opt_ PVOID *ppOptionValue)
DWORD PXEAPI wdspxe.PxeDhcpv6Initialize(_In_ PVOID pRequest,_In_ ULONG cbRequest,_Inout_ PVOID pReply,_In_ ULONG cbReply,_Out_ PULONG pcbReplyUsed)
DWORD PXEAPI wdspxe.PxeDhcpv6IsValid(_In_ PVOID pPacket,_In_ ULONG uPacketLen,_In_ BOOL bRequestPacket,_Out_ PBOOL pbPxeOptionPresent)
DWORD PXEAPI wdspxe.PxeDhcpv6ParseRelayForw(_In_ PVOID pRelayForwPacket,_In_ ULONG uRelayForwPacketLen,_Out_ PPXE_DHCPV6_NESTED_RELAY_MESSAGE pRelayMessages,_In_ ULONG nRelayMessages,_Out_ PULONG pnRelayMessages,_Out_ PBYTE *ppInnerPacket,_Out_ PULONG pcbInnerPacket)
DWORD PXEAPI wdspxe.PxeGetServerInfoEx(_In_ PXE_GSI_TYPE uInfoType,_Out_ PVOID pBuffer,_In_ ULONG uBufferLen,_Out_ PULONG puBufferUsed)
DWORD PXEAPI wdspxe.PxeGetServerInfo(_In_ PXE_GSI_TYPE uInfoType,_Out_ PVOID pBuffer,_In_ ULONG uBufferLen)
DWORD PXEAPI wdspxe.PxePacketFree(_In_ HANDLE hProvider,_In_ HANDLE hClientRequest,_In_ PVOID pPacket)
DWORD PXEAPI wdspxe.PxeProviderEnumClose(_In_ HANDLE hEnum)
DWORD PXEAPI wdspxe.PxeProviderEnumFirst(_Out_ HANDLE *phEnum)
DWORD PXEAPI wdspxe.PxeProviderEnumNext(_In_ HANDLE hEnum,_Out_ PPXE_PROVIDER *ppProvider)
DWORD PXEAPI wdspxe.PxeProviderFreeInfo(_In_ PPXE_PROVIDER pProvider)
DWORD PXEAPI wdspxe.PxeProviderQueryIndex(_In_ LPCWSTR pszProviderName,_Out_ PULONG puIndex)
DWORD PXEAPI wdspxe.PxeProviderRegister(_In_ LPCWSTR pszProviderName,_In_ LPCWSTR pszModulePath,_In_ PXE_REG_INDEX Index,_In_ BOOL bIsCritical,_Out_ PHKEY phProviderKey)
DWORD PXEAPI wdspxe.PxeProviderSetAttribute(_In_ HANDLE hProvider,_In_ PXE_PROVIDER_ATTRIBUTE Attribute,_In_ PVOID pParameterBuffer,_In_ ULONG uParamLen)
DWORD PXEAPI wdspxe.PxeRegisterCallback(_In_ HANDLE hProvider,_In_ PXE_CALLBACK_TYPE CallbackType,_In_ PVOID pCallbackFunction,_In_ PVOID pContext)
DWORD PXEAPI wdspxe.PxeSendReply(_In_ HANDLE hClientRequest,_In_ PVOID pPacket,_In_ ULONG uPacketLen,_In_ PXE_ADDRESS *pAddress)
DWORD PXEAPI wdspxe.PxeTrace(_In_ HANDLE hProvider,_In_ PXE_SEVERITY Severity,_In_ LPCWSTR pszFormat,... None None)
DWORD STDAPI mfplat.MFMapDXGIFormatToDX9Format(_In_ DXGI_FORMAT dx11)
DWORD WDSTCIAPI wdstptc.WdsTransportClientCancelSession(_In_ HANDLE hSessionKey)
DWORD WDSTCIAPI wdstptc.WdsTransportClientQueryStatus(_In_ HANDLE hSessionKey,_Out_ PULONG puStatus,_Out_ PULONG puErrorCode)
DWORD WDSTCIAPI wdstptc.WdsTransportClientReleaseBuffer(_In_ PVOID pvBuffer)
DWORD WDSTCIAPI wdstptc.WdsTransportClientStartSession(_In_ HANDLE hSessionKey)
DWORD WDSTCIAPI wdstptc.WdsTransportClientWaitForCompletion(_In_ HANDLE hSessionKey,_In_ ULONG uTimeout)
DWORD WINAPI advapi32.AddUsersToEncryptedFile(_In_ LPCWSTR lpFileName,_In_ PENCRYPTION_CERTIFICATE_LIST pUsers)
DWORD WINAPI advapi32.BuildSecurityDescriptorA(_In_opt_ PTRUSTEE pOwner,_In_opt_ PTRUSTEE pGroup,_In_ ULONG cCountOfAccessEntries,_In_opt_ PEXPLICIT_ACCESS pListOfAccessEntries,_In_ ULONG cCountOfAuditEntries,_In_opt_ PEXPLICIT_ACCESS pListOfAuditEntries,_In_opt_ PSECURITY_DESCRIPTOR pOldSD,_Out_ PULONG pSizeNewSD,_Out_ PSECURITY_DESCRIPTOR *pNewSD)
DWORD WINAPI advapi32.BuildSecurityDescriptor(_In_opt_ PTRUSTEE pOwner,_In_opt_ PTRUSTEE pGroup,_In_ ULONG cCountOfAccessEntries,_In_opt_ PEXPLICIT_ACCESS pListOfAccessEntries,_In_ ULONG cCountOfAuditEntries,_In_opt_ PEXPLICIT_ACCESS pListOfAuditEntries,_In_opt_ PSECURITY_DESCRIPTOR pOldSD,_Out_ PULONG pSizeNewSD,_Out_ PSECURITY_DESCRIPTOR *pNewSD)
DWORD WINAPI advapi32.BuildSecurityDescriptorW(_In_opt_ PTRUSTEE pOwner,_In_opt_ PTRUSTEE pGroup,_In_ ULONG cCountOfAccessEntries,_In_opt_ PEXPLICIT_ACCESS pListOfAccessEntries,_In_ ULONG cCountOfAuditEntries,_In_opt_ PEXPLICIT_ACCESS pListOfAuditEntries,_In_opt_ PSECURITY_DESCRIPTOR pOldSD,_Out_ PULONG pSizeNewSD,_Out_ PSECURITY_DESCRIPTOR *pNewSD)
DWORD WINAPI advapi32.FreeInheritedFromArray(_In_ PINHERITED_FROM pInheritArray,_In_ USHORT AceCnt,_In_opt_ PFN_OBJECT_MGR_FUNCTS pfnArray)
DWORD WINAPI advapi32.GetAuditedPermissionsFromAclA(_In_ PACL pacl,_In_ PTRUSTEE pTrustee,_Out_ PACCESS_MASK pSuccessfulAuditedRights,_Out_ PACCESS_MASK pFailedAuditRights)
DWORD WINAPI advapi32.GetAuditedPermissionsFromAcl(_In_ PACL pacl,_In_ PTRUSTEE pTrustee,_Out_ PACCESS_MASK pSuccessfulAuditedRights,_Out_ PACCESS_MASK pFailedAuditRights)
DWORD WINAPI advapi32.GetAuditedPermissionsFromAclW(_In_ PACL pacl,_In_ PTRUSTEE pTrustee,_Out_ PACCESS_MASK pSuccessfulAuditedRights,_Out_ PACCESS_MASK pFailedAuditRights)
DWORD WINAPI advapi32.GetEffectiveRightsFromAclA(_In_ PACL pacl,_In_ PTRUSTEE pTrustee,_Out_ PACCESS_MASK pAccessRights)
DWORD WINAPI advapi32.GetEffectiveRightsFromAcl(_In_ PACL pacl,_In_ PTRUSTEE pTrustee,_Out_ PACCESS_MASK pAccessRights)
DWORD WINAPI advapi32.GetEffectiveRightsFromAclW(_In_ PACL pacl,_In_ PTRUSTEE pTrustee,_Out_ PACCESS_MASK pAccessRights)
DWORD WINAPI advapi32.GetExplicitEntriesFromAclA(_In_ PACL pacl,_Out_ PULONG pcCountOfExplicitEntries,_Out_ PEXPLICIT_ACCESS *pListOfExplicitEntries)
DWORD WINAPI advapi32.GetExplicitEntriesFromAcl(_In_ PACL pacl,_Out_ PULONG pcCountOfExplicitEntries,_Out_ PEXPLICIT_ACCESS *pListOfExplicitEntries)
DWORD WINAPI advapi32.GetExplicitEntriesFromAclW(_In_ PACL pacl,_Out_ PULONG pcCountOfExplicitEntries,_Out_ PEXPLICIT_ACCESS *pListOfExplicitEntries)
DWORD WINAPI advapi32.GetInheritanceSourceA(_In_ LPTSTR pObjectName,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_In_ BOOL Container,_In_opt_ GUID **pObjectClassGuids,_In_ DWORD GuidCount,_In_ PACL pAcl,_In_opt_ PFN_OBJECT_MGR_FUNCTS pfnArray,_In_ PGENERIC_MAPPING pGenericMapping,_Out_ PINHERITED_FROM pInheritArray)
DWORD WINAPI advapi32.GetInheritanceSource(_In_ LPTSTR pObjectName,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_In_ BOOL Container,_In_opt_ GUID **pObjectClassGuids,_In_ DWORD GuidCount,_In_ PACL pAcl,_In_opt_ PFN_OBJECT_MGR_FUNCTS pfnArray,_In_ PGENERIC_MAPPING pGenericMapping,_Out_ PINHERITED_FROM pInheritArray)
DWORD WINAPI advapi32.GetInheritanceSourceW(_In_ LPTSTR pObjectName,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_In_ BOOL Container,_In_opt_ GUID **pObjectClassGuids,_In_ DWORD GuidCount,_In_ PACL pAcl,_In_opt_ PFN_OBJECT_MGR_FUNCTS pfnArray,_In_ PGENERIC_MAPPING pGenericMapping,_Out_ PINHERITED_FROM pInheritArray)
DWORD WINAPI advapi32.GetLengthSid(_In_ PSID pSid)
DWORD WINAPI advapi32.GetNamedSecurityInfoA(_In_ LPTSTR pObjectName,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_Out_opt_ PSID *ppsidOwner,_Out_opt_ PSID *ppsidGroup,_Out_opt_ PACL *ppDacl,_Out_opt_ PACL *ppSacl,_Out_opt_ PSECURITY_DESCRIPTOR *ppSecurityDescriptor)
DWORD WINAPI advapi32.GetNamedSecurityInfo(_In_ LPTSTR pObjectName,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_Out_opt_ PSID *ppsidOwner,_Out_opt_ PSID *ppsidGroup,_Out_opt_ PACL *ppDacl,_Out_opt_ PACL *ppSacl,_Out_opt_ PSECURITY_DESCRIPTOR *ppSecurityDescriptor)
DWORD WINAPI advapi32.GetNamedSecurityInfoW(_In_ LPTSTR pObjectName,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_Out_opt_ PSID *ppsidOwner,_Out_opt_ PSID *ppsidGroup,_Out_opt_ PACL *ppDacl,_Out_opt_ PACL *ppSacl,_Out_opt_ PSECURITY_DESCRIPTOR *ppSecurityDescriptor)
DWORD WINAPI advapi32.GetSecurityDescriptorLength(_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor)
DWORD WINAPI advapi32.GetSecurityDescriptorRMControl(_In_ PSECURITY_DESCRIPTOR SecurityDescriptor,_Out_ PUCHAR RMControl)
DWORD WINAPI advapi32.GetSecurityInfo(_In_ HANDLE handle,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_Out_opt_ PSID *ppsidOwner,_Out_opt_ PSID *ppsidGroup,_Out_opt_ PACL *ppDacl,_Out_opt_ PACL *ppSacl,_Out_opt_ PSECURITY_DESCRIPTOR *ppSecurityDescriptor)
DWORD WINAPI advapi32.GetSidLengthRequired(_In_ UCHAR nSubAuthorityCount)
DWORD WINAPI advapi32.InitiateShutdownA(_In_opt_ LPTSTR lpMachineName,_In_opt_ LPTSTR lpMessage,_In_ DWORD dwGracePeriod,_In_ DWORD dwShutdownFlags,_In_ DWORD dwReason)
DWORD WINAPI advapi32.InitiateShutdown(_In_opt_ LPTSTR lpMachineName,_In_opt_ LPTSTR lpMessage,_In_ DWORD dwGracePeriod,_In_ DWORD dwShutdownFlags,_In_ DWORD dwReason)
DWORD WINAPI advapi32.InitiateShutdownW(_In_opt_ LPTSTR lpMachineName,_In_opt_ LPTSTR lpMessage,_In_ DWORD dwGracePeriod,_In_ DWORD dwShutdownFlags,_In_ DWORD dwReason)
DWORD WINAPI advapi32.LookupSecurityDescriptorPartsA(_Out_opt_ PTRUSTEE *pOwner,_Out_opt_ PTRUSTEE *pGroup,_Out_opt_ PULONG cCountOfAccessEntries,_Out_opt_ PEXPLICIT_ACCESS *pListOfAccessEntries,_Out_opt_ PULONG cCountOfAuditEntries,_Out_opt_ PEXPLICIT_ACCESS *pListOfAuditEntries,_In_ PSECURITY_DESCRIPTOR pSD)
DWORD WINAPI advapi32.LookupSecurityDescriptorParts(_Out_opt_ PTRUSTEE *pOwner,_Out_opt_ PTRUSTEE *pGroup,_Out_opt_ PULONG cCountOfAccessEntries,_Out_opt_ PEXPLICIT_ACCESS *pListOfAccessEntries,_Out_opt_ PULONG cCountOfAuditEntries,_Out_opt_ PEXPLICIT_ACCESS *pListOfAuditEntries,_In_ PSECURITY_DESCRIPTOR pSD)
DWORD WINAPI advapi32.LookupSecurityDescriptorPartsW(_Out_opt_ PTRUSTEE *pOwner,_Out_opt_ PTRUSTEE *pGroup,_Out_opt_ PULONG cCountOfAccessEntries,_Out_opt_ PEXPLICIT_ACCESS *pListOfAccessEntries,_Out_opt_ PULONG cCountOfAuditEntries,_Out_opt_ PEXPLICIT_ACCESS *pListOfAuditEntries,_In_ PSECURITY_DESCRIPTOR pSD)
DWORD WINAPI advapi32.NotifyServiceStatusChangeA(_In_ SC_HANDLE hService,_In_ DWORD dwNotifyMask,_In_ PSERVICE_NOTIFY pNotifyBuffer)
DWORD WINAPI advapi32.NotifyServiceStatusChange(_In_ SC_HANDLE hService,_In_ DWORD dwNotifyMask,_In_ PSERVICE_NOTIFY pNotifyBuffer)
DWORD WINAPI advapi32.NotifyServiceStatusChangeW(_In_ SC_HANDLE hService,_In_ DWORD dwNotifyMask,_In_ PSERVICE_NOTIFY pNotifyBuffer)
DWORD WINAPI advapi32.OpenEncryptedFileRawA(_In_ LPCTSTR lpFileName,_In_ ULONG ulFlags,_Out_ PVOID *pvContext)
DWORD WINAPI advapi32.OpenEncryptedFileRaw(_In_ LPCTSTR lpFileName,_In_ ULONG ulFlags,_Out_ PVOID *pvContext)
DWORD WINAPI advapi32.OpenEncryptedFileRawW(_In_ LPCTSTR lpFileName,_In_ ULONG ulFlags,_Out_ PVOID *pvContext)
DWORD WINAPI advapi32.QueryRecoveryAgentsOnEncryptedFile(_In_ LPCWSTR lpFileName,_Out_ PENCRYPTION_CERTIFICATE_HASH_LIST *pRecoveryAgents)
DWORD WINAPI advapi32.QueryUsersOnEncryptedFile(_In_ LPCWSTR lpFileName,_Out_ PENCRYPTION_CERTIFICATE_HASH_LIST *pUsers)
DWORD WINAPI advapi32.ReadEncryptedFileRaw(_In_ PFE_EXPORT_FUNC pfExportCallback,_In_opt_ PVOID pvCallbackContext,_In_ PVOID pvContext)
DWORD WINAPI advapi32.RemoveUsersFromEncryptedFile(_In_ LPCWSTR lpFileName,_In_ PENCRYPTION_CERTIFICATE_HASH_LIST pHashes)
DWORD WINAPI advapi32.SetEntriesInAclA(_In_ ULONG cCountOfExplicitEntries,_In_opt_ PEXPLICIT_ACCESS pListOfExplicitEntries,_In_opt_ PACL OldAcl,_Out_ PACL *NewAcl)
DWORD WINAPI advapi32.SetEntriesInAcl(_In_ ULONG cCountOfExplicitEntries,_In_opt_ PEXPLICIT_ACCESS pListOfExplicitEntries,_In_opt_ PACL OldAcl,_Out_ PACL *NewAcl)
DWORD WINAPI advapi32.SetEntriesInAclW(_In_ ULONG cCountOfExplicitEntries,_In_opt_ PEXPLICIT_ACCESS pListOfExplicitEntries,_In_opt_ PACL OldAcl,_Out_ PACL *NewAcl)
DWORD WINAPI advapi32.SetNamedSecurityInfoA(_In_ LPTSTR pObjectName,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_In_opt_ PSID psidOwner,_In_opt_ PSID psidGroup,_In_opt_ PACL pDacl,_In_opt_ PACL pSacl)
DWORD WINAPI advapi32.SetNamedSecurityInfo(_In_ LPTSTR pObjectName,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_In_opt_ PSID psidOwner,_In_opt_ PSID psidGroup,_In_opt_ PACL pDacl,_In_opt_ PACL pSacl)
DWORD WINAPI advapi32.SetNamedSecurityInfoW(_In_ LPTSTR pObjectName,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_In_opt_ PSID psidOwner,_In_opt_ PSID psidGroup,_In_opt_ PACL pDacl,_In_opt_ PACL pSacl)
DWORD WINAPI advapi32.SetSecurityDescriptorRMControl(_Inout_ PSECURITY_DESCRIPTOR SecurityDescriptor,_In_opt_ PUCHAR RMControl)
DWORD WINAPI advapi32.SetSecurityInfo(_In_ HANDLE handle,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_In_opt_ PSID psidOwner,_In_opt_ PSID psidGroup,_In_opt_ PACL pDacl,_In_opt_ PACL pSacl)
DWORD WINAPI advapi32.SetUserFileEncryptionKey(_In_ PENCRYPTION_CERTIFICATE pEncryptionCertificate)
DWORD WINAPI advapi32.TreeResetNamedSecurityInfoA(_In_ LPTSTR pObjectName,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_In_opt_ PSID pOwner,_In_opt_ PSID pGroup,_In_opt_ PACL pDacl,_In_opt_ PACL pSacl,_In_ BOOL KeepExplicit,_In_opt_ FN_PROGRESS fnProgress,_In_ PROG_INVOKE_SETTING ProgressInvokeSetting,_In_opt_ PVOID Args)
DWORD WINAPI advapi32.TreeResetNamedSecurityInfo(_In_ LPTSTR pObjectName,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_In_opt_ PSID pOwner,_In_opt_ PSID pGroup,_In_opt_ PACL pDacl,_In_opt_ PACL pSacl,_In_ BOOL KeepExplicit,_In_opt_ FN_PROGRESS fnProgress,_In_ PROG_INVOKE_SETTING ProgressInvokeSetting,_In_opt_ PVOID Args)
DWORD WINAPI advapi32.TreeResetNamedSecurityInfoW(_In_ LPTSTR pObjectName,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_In_opt_ PSID pOwner,_In_opt_ PSID pGroup,_In_opt_ PACL pDacl,_In_opt_ PACL pSacl,_In_ BOOL KeepExplicit,_In_opt_ FN_PROGRESS fnProgress,_In_ PROG_INVOKE_SETTING ProgressInvokeSetting,_In_opt_ PVOID Args)
DWORD WINAPI advapi32.TreeSetNamedSecurityInfoA(_In_ LPTSTR pObjectName,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_In_opt_ PSID pOwner,_In_opt_ PSID pGroup,_In_opt_ PACL pDacl,_In_opt_ PACL pSacl,_In_ DWORD dwAction,_In_ FN_PROGRESS fnProgress,_In_ PROG_INVOKE_SETTING ProgressInvokeSetting,_In_opt_ PVOID Args)
DWORD WINAPI advapi32.TreeSetNamedSecurityInfo(_In_ LPTSTR pObjectName,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_In_opt_ PSID pOwner,_In_opt_ PSID pGroup,_In_opt_ PACL pDacl,_In_opt_ PACL pSacl,_In_ DWORD dwAction,_In_ FN_PROGRESS fnProgress,_In_ PROG_INVOKE_SETTING ProgressInvokeSetting,_In_opt_ PVOID Args)
DWORD WINAPI advapi32.TreeSetNamedSecurityInfoW(_In_ LPTSTR pObjectName,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_In_opt_ PSID pOwner,_In_opt_ PSID pGroup,_In_opt_ PACL pDacl,_In_opt_ PACL pSacl,_In_ DWORD dwAction,_In_ FN_PROGRESS fnProgress,_In_ PROG_INVOKE_SETTING ProgressInvokeSetting,_In_opt_ PVOID Args)
DWORD WINAPI advapi32.WriteEncryptedFileRaw(_In_ PFE_IMPORT_FUNC pfImportCallback,_In_opt_ PVOID pvCallbackContext,_In_ PVOID pvContext)
DWORD WINAPI api-ms-win-core-localization-l1-2-1.VerLanguageNameA(_In_ DWORD wLang,_Out_ LPTSTR szLang,_In_ DWORD cchLang)
DWORD WINAPI api-ms-win-core-localization-l1-2-1.VerLanguageName(_In_ DWORD wLang,_Out_ LPTSTR szLang,_In_ DWORD cchLang)
DWORD WINAPI api-ms-win-core-localization-l1-2-1.VerLanguageNameW(_In_ DWORD wLang,_Out_ LPTSTR szLang,_In_ DWORD cchLang)
DWORD WINAPI api-ms-win-core-version-l1-1-0.GetFileVersionInfoSizeA(_In_ LPCTSTR lptstrFilename,_Out_opt_ LPDWORD lpdwHandle)
DWORD WINAPI api-ms-win-core-version-l1-1-0.GetFileVersionInfoSizeExA(_In_ DWORD dwFlags,_In_ LPCTSTR lptstrFilename,_Out_ LPDWORD lpdwHandle)
DWORD WINAPI api-ms-win-core-version-l1-1-0.GetFileVersionInfoSizeEx(_In_ DWORD dwFlags,_In_ LPCTSTR lptstrFilename,_Out_ LPDWORD lpdwHandle)
DWORD WINAPI api-ms-win-core-version-l1-1-0.GetFileVersionInfoSizeExW(_In_ DWORD dwFlags,_In_ LPCTSTR lptstrFilename,_Out_ LPDWORD lpdwHandle)
DWORD WINAPI api-ms-win-core-version-l1-1-0.GetFileVersionInfoSize(_In_ LPCTSTR lptstrFilename,_Out_opt_ LPDWORD lpdwHandle)
DWORD WINAPI api-ms-win-core-version-l1-1-0.GetFileVersionInfoSizeW(_In_ LPCTSTR lptstrFilename,_Out_opt_ LPDWORD lpdwHandle)
DWORD WINAPI api-ms-win-core-version-l1-1-0.VerFindFileA(_In_ DWORD dwFlags,_In_ LPCTSTR szFileName,_In_opt_ LPCTSTR szWinDir,_In_ LPCTSTR szAppDir,_Out_ LPWSTR szCurDir,_Inout_ PUINT lpuCurDirLen,_Out_ LPTSTR szDestDir,_Inout_ PUINT lpuDestDirLen)
DWORD WINAPI api-ms-win-core-version-l1-1-0.VerFindFile(_In_ DWORD dwFlags,_In_ LPCTSTR szFileName,_In_opt_ LPCTSTR szWinDir,_In_ LPCTSTR szAppDir,_Out_ LPWSTR szCurDir,_Inout_ PUINT lpuCurDirLen,_Out_ LPTSTR szDestDir,_Inout_ PUINT lpuDestDirLen)
DWORD WINAPI api-ms-win-core-version-l1-1-0.VerFindFileW(_In_ DWORD dwFlags,_In_ LPCTSTR szFileName,_In_opt_ LPCTSTR szWinDir,_In_ LPCTSTR szAppDir,_Out_ LPWSTR szCurDir,_Inout_ PUINT lpuCurDirLen,_Out_ LPTSTR szDestDir,_Inout_ PUINT lpuDestDirLen)
DWORD WINAPI api-ms-win-core-version-l1-1-0.VerInstallFileA(_In_ DWORD uFlags,_In_ LPCTSTR szSrcFileName,_In_ LPCTSTR szDestFileName,_In_ LPCTSTR szSrcDir,_In_ LPCTSTR szDestDir,_In_ LPCTSTR szCurDir,_Out_ LPTSTR szTmpFile,_Inout_ PUINT lpuTmpFileLen)
DWORD WINAPI api-ms-win-core-version-l1-1-0.VerInstallFile(_In_ DWORD uFlags,_In_ LPCTSTR szSrcFileName,_In_ LPCTSTR szDestFileName,_In_ LPCTSTR szSrcDir,_In_ LPCTSTR szDestDir,_In_ LPCTSTR szCurDir,_Out_ LPTSTR szTmpFile,_Inout_ PUINT lpuTmpFileLen)
DWORD WINAPI api-ms-win-core-version-l1-1-0.VerInstallFileW(_In_ DWORD uFlags,_In_ LPCTSTR szSrcFileName,_In_ LPCTSTR szDestFileName,_In_ LPCTSTR szSrcDir,_In_ LPCTSTR szDestDir,_In_ LPCTSTR szCurDir,_Out_ LPTSTR szTmpFile,_Inout_ PUINT lpuTmpFileLen)
DWORD WINAPI bthprops.BluetoothAuthenticateDeviceEx(_In_opt_ HWND hwndParentIn,_In_opt_ HANDLE hRadioIn,_Inout_ BLUETOOTH_DEVICE_INFO *pbtdiInout,_In_opt_ PBLUETOOTH_OOB_DATA pbtOobData,_In_ AUTHENTICATION_REQUIREMENTS authenticationRequirement)
DWORD WINAPI clusapi.AddClusterGroupDependency(_In_ HGROUP hDependentGroup,_In_ HGROUP hProviderGroup)
DWORD WINAPI clusapi.AddClusterGroupSetDependency(_In_ HGROUPSET hDependentGroupSet,_In_ HGROUPSET hProviderGroupSet)
DWORD WINAPI clusapi.AddClusterGroupToGroupSetDependency(_In_ HGROUP hDependentGroup,_In_ HGROUPSET hProviderGroupSet)
DWORD WINAPI clusapi.AddClusterResourceDependency(_In_ HRESOURCE hResource,_In_ HRESOURCE hDependsOn)
DWORD WINAPI clusapi.AddClusterResourceNode(_In_ HRESOURCE hResource,_In_ HNODE hNode)
DWORD WINAPI clusapi.AddCrossClusterGroupSetToGroupSetDependency(_In_ HGROUPSET hDependentGroupSet,_In_ LPCWSTR lpRemoteClusterName,_In_ LPCWSTR lpRemoteGroupSetName)
DWORD WINAPI clusapi.AddCrossClusterGroupToGroupDependency(_In_ HGROUP hDependentGroup,_In_ LPCWSTR lpRemoteClusterName,_In_ LPCWSTR lpRemoteGroupName)
DWORD WINAPI clusapi.AddCrossClusterGroupToGroupSetDependency(_In_ HGROUP hDependentGroup,_In_ LPCWSTR lpRemoteClusterName,_In_ LPCWSTR lpRemoteGroupSetName)
DWORD WINAPI clusapi.AddResourceToClusterSharedVolumes(_In_ HRESOURCE hResource)
DWORD WINAPI clusapi.BackupClusterDatabase(_In_ HCLUSTER hCluster,_In_ LPCWSTR lpszPathName)
DWORD WINAPI clusapi.CancelClusterGroupOperation(_In_ HGROUP hGroup,_In_ DWORD dwCancelFlags_RESERVED)
DWORD WINAPI clusapi.ChangeClusterResourceGroup(_In_ HRESOURCE hResource,_In_ HGROUP hGroup)
DWORD WINAPI clusapi.ClusterAddGroupToGroupSet(_In_ HGROUPSET hGroupSet,_In_ HGROUP hGroup)
DWORD WINAPI clusapi.ClusterCloseEnumEx(_In_ HCLUSENUMEX hClusterEnum)
DWORD WINAPI clusapi.ClusterCloseEnum(_In_ HCLUSENUM hEnum)
DWORD WINAPI clusapi.ClusterControl(_In_ HCLUSTER hCluster,_In_opt_ HNODE hHostNode,_In_ DWORD dwControlCode,_In_opt_ LPVOID lpInBuffer,_In_ DWORD nInBufferSize,_Out_opt_ LPVOID lpOutBuffer,_In_ DWORD nOutBufferSize,_Out_opt_ LPDWORD lpBytesReturned)
DWORD WINAPI clusapi.ClusterEnumEx(_In_ HCLUSENUMEX hClusterEnum,_In_ DWORD dwIndex,_Inout_ PCLUSTER_ENUM_ITEM pItem,_Inout_ LPDWORD cbItem)
DWORD WINAPI clusapi.ClusterEnum(_In_ HCLUSENUM hEnum,_In_ DWORD dwIndex,_Out_ LPDWORD lpdwType,_Out_ LPWSTR lpszName,_Inout_ LPDWORD lpcchName)
DWORD WINAPI clusapi.ClusterGetEnumCountEx(_In_ HCLUSENUMEX hClusterEnum)
DWORD WINAPI clusapi.ClusterGetEnumCount(_In_ HCLUSENUM hEnum)
DWORD WINAPI clusapi.ClusterGroupCloseEnum(_In_ HGROUPENUM hGroupEnum)
DWORD WINAPI clusapi.ClusterGroupControl(_In_ HGROUP hGroup,_In_opt_ HNODE hHostNode,_In_ DWORD dwControlCode,_In_opt_ LPVOID lpInBuffer,_In_ DWORD nInBufferSize,_Out_opt_ LPVOID lpOutBuffer,_In_ DWORD nOutBufferSize,_Out_opt_ LPDWORD lpBytesReturned)
DWORD WINAPI clusapi.ClusterGroupEnum(_In_ HGROUPENUM hGroupEnum,_In_ DWORD dwIndex,_Out_ LPDWORD lpdwType,_Out_ LPWSTR lpszResourceName,_Inout_ LPDWORD lpcchName)
DWORD WINAPI clusapi.ClusterGroupGetEnumCountEx(_In_ HGROUPENUMEX hGroupEnumEx)
DWORD WINAPI clusapi.ClusterGroupSetCloseEnum(_In_ HGROUPSETENUM hGroupCollectionEnum)
DWORD WINAPI clusapi.ClusterGroupSetControl(_In_ HGROUPSET hGroupSet,_In_opt_ HNODE hHostNode,_In_ DWORD dwControlCode,_In_opt_ LPVOID lpInBuffer,_In_ DWORD cbInBufferSize,_Out_opt_ LPVOID lpOutBuffer,_In_ DWORD cbOutBufferSize,_Out_opt_ LPDWORD lpBytesReturned)
DWORD WINAPI clusapi.ClusterNetInterfaceControl(_In_ HNETINTERFACE hNetInterface,_In_opt_ HNODE hHostNode,_In_ DWORD dwControlCode,_In_opt_ LPVOID lpInBuffer,_In_ DWORD nInBufferSize,_Out_opt_ LPVOID lpOutBuffer,_In_ DWORD nOutBufferSize,_Out_opt_ LPDWORD lpBytesReturned)
DWORD WINAPI clusapi.ClusterNetworkControl(_In_ HNETWORK hNetwork,_In_opt_ HNODE hHostNode,_In_ DWORD dwControlCode,_In_opt_ LPVOID lpInBuffer,_In_ DWORD nInBufferSize,_Out_opt_ LPVOID lpOutBuffer,_In_ DWORD nOutBufferSize,_Inout_opt_ LPDWORD lpBytesReturned)
DWORD WINAPI clusapi.ClusterNodeCloseEnumEx(_In_ HNODEENUMEX hNodeEnum)
DWORD WINAPI clusapi.ClusterNodeCloseEnum(_In_ HNODEENUM hNodeEnum)
DWORD WINAPI clusapi.ClusterNodeControl(_In_ HNODE hNode,_In_opt_ HNODE hHostNode,_In_ DWORD dwControlCode,_In_opt_ LPVOID lpInBuffer,_In_ DWORD nInBufferSize,_Out_opt_ LPVOID lpOutBuffer,_In_ DWORD nOutBufferSize,_Out_opt_ LPDWORD lpBytesReturned)
DWORD WINAPI clusapi.ClusterNodeEnumEx(_In_ HNODEENUMEX hNodeEnum,_In_ DWORD dwIndex,_Inout_ PCLUSTER_ENUM_ITEM pItem,_Inout_ LPDWORD cbItem)
DWORD WINAPI clusapi.ClusterNodeEnum(_In_ HNODEENUM hNodeEnum,_In_ DWORD dwIndex,_Out_ LPDWORD lpdwType,_Out_ LPWSTR lpszName,_Inout_ LPDWORD lpcchName)
DWORD WINAPI clusapi.ClusterNodeGetEnumCountEx(_In_ HNODEENUMEX hNodeEnum)
DWORD WINAPI clusapi.ClusterNodeGetEnumCount(_In_ HNODEENUM hNodeEnum)
DWORD WINAPI clusapi.ClusterResourceCloseEnumEx(_In_ HRESENUMEX hResourceEnumEx)
DWORD WINAPI clusapi.ClusterResourceCloseEnum(_In_ HRESENUM hResEnum)
DWORD WINAPI clusapi.ClusterResourceControl(_In_ HRESOURCE hResource,_In_opt_ HNODE hHostNode,_In_ DWORD dwControlCode,_In_opt_ LPVOID lpInBuffer,_In_ DWORD cbInBufferSize,_Out_opt_ LPVOID lpOutBuffer,_In_ DWORD cbOutBufferSize,_Out_opt_ LPDWORD lpBytesReturned)
DWORD WINAPI clusapi.ClusterResourceEnumEx(_In_ HRESENUMEX hResourceEnumEx,_In_ DWORD dwIndex,_Inout_ PCLUSTER_RESOURCE_ENUM_ITEM pItem,_Inout_ LPDWORD cbItem)
DWORD WINAPI clusapi.ClusterResourceEnum(_In_ HRESENUM hResEnum,_In_ DWORD dwIndex,_Out_ LPDWORD lpdwType,_Out_ LPWSTR lpszName,_Inout_ LPDWORD lpcchName)
DWORD WINAPI clusapi.ClusterResourceGetEnumCountEx(_In_ HRESENUMEX hResourceEnumEx)
DWORD WINAPI clusapi.ClusterResourceTypeControlAsUser(_In_ HCLUSTER hCluster,_In_ LPCWSTR lpszResourceTypeName,_In_opt_ HNODE hHostNode,_In_ DWORD dwControlCode,_In_opt_ LPVOID lpInBuffer,_In_ DWORD nInBufferSize,_Out_opt_ LPVOID lpOutBuffer,_In_ DWORD nOutBufferSize,_Out_opt_ LPDWORD lpBytesReturned)
DWORD WINAPI clusapi.ClusterResourceTypeControl(_In_ HCLUSTER hCluster,_In_ LPCWSTR lpszResourceTypeName,_In_opt_ HNODE hHostNode,_In_ DWORD dwControlCode,_In_opt_ LPVOID lpInBuffer,_In_ DWORD nInBufferSize,_Out_opt_ LPVOID lpOutBuffer,_In_ DWORD nOutBufferSize,_Out_opt_ LPDWORD lpBytesReturned)
DWORD WINAPI clusapi.ClusterResourceTypeEnum(_In_ HRESTYPEENUM hResTypeEnum,_In_ DWORD dwIndex,_Out_ LPDWORD lpdwType,_Out_ LPWSTR lpszName,_Inout_ LPDWORD lpcchName)
DWORD WINAPI clusapi.ClusterUpgradeFunctionalLevel(_In_ HCLUSTER hCluster,_In_ BOOL perform,_In_opt_ PCLUSTER_UPGRADE_PROGRESS_CALLBACK pfnProgressCallback,_In_opt_ PVOID pvCallbackArg)
DWORD WINAPI clusapi.CreateClusterResourceType(_In_ HCLUSTER hCluster,_In_ LPCWSTR lpszResourceTypeName,_In_ LPCWSTR lpszDisplayName,_In_ LPCWSTR lpszResourceTypeDll,_In_ DWORD dwLooksAlivePollInterval,_In_ DWORD dwIsAlivePollInterval)
DWORD WINAPI clusapi.DeleteClusterGroup(_In_ HGROUP hGroup)
DWORD WINAPI clusapi.DeleteClusterResource(_In_ HRESOURCE hResource)
DWORD WINAPI clusapi.EvictClusterNodeEx(_In_ HNODE hNode,_In_ DWORD dwTimeOut,_Out_ HRESULT *phrCleanupStatus)
DWORD WINAPI clusapi.EvictClusterNode(_In_ HNODE hNode)
DWORD WINAPI clusapi.GetClusterInformation(_In_ HCLUSTER hCluster,_Out_ LPWSTR lpszClusterName,_Inout_ LPDWORD lpcchClusterName,_Out_opt_ LPCLUSTERVERSIONINFO lpClusterInfo)
DWORD WINAPI clusapi.GetClusterNodeId(_In_opt_ HNODE hNode,_Out_ LPWSTR lpszNodeId,_Inout_ LPDWORD lpcchName)
DWORD WINAPI clusapi.GetClusterNotify(_In_ HCHANGE hChange,_Out_ DWORD_PTR *lpdwNotifyKey,_Out_ LPDWORD lpdwFilterType,_Out_ LPWSTR lpszName,_Inout_ LPDWORD lpcchName,_In_opt_ DWORD dwMilliseconds)
DWORD WINAPI clusapi.GetClusterNotifyV2(_In_ HCHANGE hChange,_Out_ DWORD_PTR *lpdwNotifyKey,_Inout_opt_ PNOTIFY_FILTER_AND_TYPE pFilterAndType,_Inout_opt_ BYTE *buffer,_Inout_opt_ LPDWORD lpbBufferSize,_Inout_opt_ LPWSTR lpszObjectId,_Inout_opt_ LPDWORD lpcchObjectId,_Inout_opt_ LPWSTR lpszParentId,_Inout_opt_ LPDWORD lpcchParentId,_Inout_opt_ LPWSTR lpszName,_Inout_opt_ LPDWORD lpcchName,_Inout_opt_ LPWSTR lpszType,_Inout_opt_ LPDWORD lpcchType,_In_opt_ DWORD dwMilliseconds)
DWORD WINAPI clusapi.GetClusterQuorumResource(_In_ HCLUSTER hCluster,_Out_ LPWSTR lpszResourceName,_Inout_ LPDWORD lpcchResourceName,_Out_ LPWSTR lpszDeviceName,_Inout_ LPDWORD lpcchDeviceName,_Out_ LPDWORD lpdwMaxQuorumLogSize)
DWORD WINAPI clusapi.GetClusterResourceDependencyExpression(_In_ HRESOURCE hResource,_Out_opt_ LPWSTR lpszDependencyExpression,_Inout_ LPDWORD lpcchDependencyExpression)
DWORD WINAPI clusapi.GetNodeClusterState(_In_opt_ LPCWSTR lpszNodeName,_Out_ LPDWORD pdwClusterState)
DWORD WINAPI clusapi.GetNotifyEventHandle(_In_ HCHANGE hChange,_Out_ LPHANDLE lphTargetEvent)
DWORD WINAPI clusapi.IsFileOnClusterSharedVolume(_In_ LPCWSTR lpszPathName,_Out_ PBOOL pbFileIsOnSharedVolume)
DWORD WINAPI clusapi.MoveClusterGroup(_In_ HGROUP hGroup,_In_opt_ HNODE hDestinationNode)
DWORD WINAPI clusapi.OfflineClusterGroup(_In_ HGROUP hGroup)
DWORD WINAPI clusapi.OfflineClusterResource(_In_ HRESOURCE hResource)
DWORD WINAPI clusapi.OnlineClusterGroupEx(_In_ HGROUP hGroup,_In_opt_ HNODE hDestinationNode,_In_ DWORD dwOnlineFlags,_In_opt_ PBYTE lpInBuffer,_In_ DWORD cbInBufferSize)
DWORD WINAPI clusapi.OnlineClusterGroup(_In_ HGROUP hGroup,_In_opt_ HNODE hDestinationNode)
DWORD WINAPI clusapi.OnlineClusterResourceEx(_In_ HRESOURCE hResource,_In_ DWORD dwOnlineFlags,_In_opt_ PBYTE lpInBuffer,_In_ DWORD cbInBufferSize)
DWORD WINAPI clusapi.OnlineClusterResource(_In_ HRESOURCE hResource)
DWORD WINAPI clusapi.PauseClusterNodeEx(_In_ HNODE hNode,_In_ BOOL bDrainNode,_In_ DWORD dwPauseFlags,_In_opt_ HNODE hNodeDrainTarget)
DWORD WINAPI clusapi.RegisterClusterNotify(_In_ HCHANGE hChange,_In_ DWORD dwFilterType,_In_ HANDLE hObject,_In_ DWORD_PTR dwNotifyKey)
DWORD WINAPI clusapi.RegisterClusterNotifyV2(_In_ HCHANGE hChange,_In_ NOTIFY_FILTER_AND_TYPE Filter,_In_ HANDLE hObject,_In_ DWORD_PTR dwNotifyKey)
DWORD WINAPI clusapi.RemoveClusterGroupDependency(_In_ HGROUP hGroup,_In_ HGROUP hDependsOn)
DWORD WINAPI clusapi.RemoveClusterResourceDependency(_In_ HRESOURCE hResource,_In_ HRESOURCE hDependsOn)
DWORD WINAPI clusapi.RemoveClusterResourceNode(_In_ HRESOURCE hResource,_In_ HNODE hNode)
DWORD WINAPI clusapi.RemoveCrossClusterGroupSetToGroupSetDependency(_In_ HGROUPSET hDependentGroupSet,_In_ LPCWSTR lpRemoteClusterName,_In_ LPCWSTR lpRemoteGroupSetName)
DWORD WINAPI clusapi.RemoveCrossClusterGroupToGroupDependency(_In_ HGROUP hDependentGroup,_In_ LPCWSTR lpRemoteClusterName,_In_ LPCWSTR lpRemoteGroupName)
DWORD WINAPI clusapi.RemoveCrossClusterGroupToGroupSetDependency(_In_ HGROUP hDependentGroup,_In_ LPCWSTR lpRemoteClusterName,_In_ LPCWSTR lpRemoteGroupSetName)
DWORD WINAPI clusapi.RemoveResourceFromClusterSharedVolumes(_In_ HRESOURCE hResource)
DWORD WINAPI clusapi.RestartClusterResource(_In_ HRESOURCE hResource,_In_ DWORD dwFlags)
DWORD WINAPI clusapi.ResumeClusterNodeEx(_In_ HNODE hNode,_In_ CLUSTER_NODE_RESUME_FAILBACK_TYPE eResumeFailbackType,_In_ DWORD dwResumeFlagsReserved)
DWORD WINAPI clusapi.ResumeClusterNode(_In_ HNODE hNode)
DWORD WINAPI clusapi.SetClusterGroupName(_In_ HGROUP hGroup,_In_ LPCWSTR lpszGroupName)
DWORD WINAPI clusapi.SetClusterGroupNodeList(_In_ HGROUP hGroup,_In_ DWORD NodeCount,_In_ HNODE NodeList[])
DWORD WINAPI clusapi.SetClusterGroupSetDependencyExpression(_In_ HGROUPSET hGroupSet,_In_ LPCWSTR lpszDependencyExprssion)
DWORD WINAPI clusapi.SetClusterName(_In_ HCLUSTER hCluster,_In_ LPCWSTR lpszNewClusterName)
DWORD WINAPI clusapi.SetClusterQuorumResource(_In_ HRESOURCE hResource,_In_opt_ LPCWSTR lpszDeviceName,_In_ DWORD dwMaxQuoLogSize)
DWORD WINAPI clusapi.SetClusterResourceDependencyExpression(_In_ HRESOURCE hResource,_In_ LPCWSTR lpszDependencyExpression)
DWORD WINAPI clusapi.SetClusterResourceName(_In_ HRESOURCE hResource,_In_ LPCWSTR lpszResourceName)
DWORD WINAPI clusapi.SetClusterServiceAccountPassword(_In_ LPCWSTR lpszClusterName,_In_ LPCWSTR lpszNewPassword,_In_opt_ DWORD dwFlags,_Out_ PCLUSTER_SET_PASSWORD_STATUS lpReturnStatusBuffer,_Inout_ LPDWORD lpcbReturnStatusBufferSize)
DWORD WINAPI clusapi.SetGroupDependencyExpression(_In_ HGROUP hGroup,_In_ LPCWSTR lpszDependencyExpression)
DWORD WINAPI comdlg32.CommDlgExtendedError(void None None)
DWORD WINAPI credui.CredUICmdLinePromptForCredentialsA(_In_ PCTSTR pszTargetName,_In_ PCtxtHandle Reserved,_In_opt_ DWORD dwAuthError,_Inout_ PTSTR pszUserName,_In_ ULONG ulUserNameMaxChars,_Inout_ PTSTR pszPassword,_In_ ULONG ulPasswordMaxChars,_Inout_ PBOOL pfSave,_In_ DWORD dwFlags)
DWORD WINAPI credui.CredUICmdLinePromptForCredentials(_In_ PCTSTR pszTargetName,_In_ PCtxtHandle Reserved,_In_opt_ DWORD dwAuthError,_Inout_ PTSTR pszUserName,_In_ ULONG ulUserNameMaxChars,_Inout_ PTSTR pszPassword,_In_ ULONG ulPasswordMaxChars,_Inout_ PBOOL pfSave,_In_ DWORD dwFlags)
DWORD WINAPI credui.CredUICmdLinePromptForCredentialsW(_In_ PCTSTR pszTargetName,_In_ PCtxtHandle Reserved,_In_opt_ DWORD dwAuthError,_Inout_ PTSTR pszUserName,_In_ ULONG ulUserNameMaxChars,_Inout_ PTSTR pszPassword,_In_ ULONG ulPasswordMaxChars,_Inout_ PBOOL pfSave,_In_ DWORD dwFlags)
DWORD WINAPI credui.CredUIConfirmCredentialsA(_In_ PCTSTR pszTargetName,_In_ BOOL bConfirm)
DWORD WINAPI credui.CredUIConfirmCredentials(_In_ PCTSTR pszTargetName,_In_ BOOL bConfirm)
DWORD WINAPI credui.CredUIConfirmCredentialsW(_In_ PCTSTR pszTargetName,_In_ BOOL bConfirm)
DWORD WINAPI credui.CredUIParseUserNameA(_In_ PCTSTR pszUserName,_Out_ PTSTR pszUser,_In_ ULONG ulUserMaxChars,_Out_ PTSTR pszDomain,_In_ ULONG ulDomainMaxChars)
DWORD WINAPI credui.CredUIParseUserName(_In_ PCTSTR pszUserName,_Out_ PTSTR pszUser,_In_ ULONG ulUserMaxChars,_Out_ PTSTR pszDomain,_In_ ULONG ulDomainMaxChars)
DWORD WINAPI credui.CredUIParseUserNameW(_In_ PCTSTR pszUserName,_Out_ PTSTR pszUser,_In_ ULONG ulUserMaxChars,_Out_ PTSTR pszDomain,_In_ ULONG ulDomainMaxChars)
DWORD WINAPI credui.CredUIPromptForCredentialsA(_In_opt_ PCREDUI_INFO pUiInfo,_In_ PCTSTR pszTargetName,_In_ PCtxtHandle Reserved,_In_opt_ DWORD dwAuthError,_Inout_ PCTSTR pszUserName,_In_ ULONG ulUserNameMaxChars,_Inout_ PCTSTR pszPassword,_In_ ULONG ulPasswordMaxChars,_Inout_ PBOOL pfSave,_In_ DWORD dwFlags)
DWORD WINAPI credui.CredUIPromptForCredentials(_In_opt_ PCREDUI_INFO pUiInfo,_In_ PCTSTR pszTargetName,_In_ PCtxtHandle Reserved,_In_opt_ DWORD dwAuthError,_Inout_ PCTSTR pszUserName,_In_ ULONG ulUserNameMaxChars,_Inout_ PCTSTR pszPassword,_In_ ULONG ulPasswordMaxChars,_Inout_ PBOOL pfSave,_In_ DWORD dwFlags)
DWORD WINAPI credui.CredUIPromptForCredentialsW(_In_opt_ PCREDUI_INFO pUiInfo,_In_ PCTSTR pszTargetName,_In_ PCtxtHandle Reserved,_In_opt_ DWORD dwAuthError,_Inout_ PCTSTR pszUserName,_In_ ULONG ulUserNameMaxChars,_Inout_ PCTSTR pszPassword,_In_ ULONG ulPasswordMaxChars,_Inout_ PBOOL pfSave,_In_ DWORD dwFlags)
DWORD WINAPI credui.CredUIPromptForWindowsCredentialsA(_In_opt_ PCREDUI_INFO pUiInfo,_In_ DWORD dwAuthError,_Inout_ ULONG *pulAuthPackage,_In_opt_ LPCVOID pvInAuthBuffer,_In_ ULONG ulInAuthBufferSize,_Out_ LPVOID *ppvOutAuthBuffer,_Out_ ULONG *pulOutAuthBufferSize,_Inout_opt_ BOOL *pfSave,_In_ DWORD dwFlags)
DWORD WINAPI credui.CredUIPromptForWindowsCredentials(_In_opt_ PCREDUI_INFO pUiInfo,_In_ DWORD dwAuthError,_Inout_ ULONG *pulAuthPackage,_In_opt_ LPCVOID pvInAuthBuffer,_In_ ULONG ulInAuthBufferSize,_Out_ LPVOID *ppvOutAuthBuffer,_Out_ ULONG *pulOutAuthBufferSize,_Inout_opt_ BOOL *pfSave,_In_ DWORD dwFlags)
DWORD WINAPI credui.CredUIPromptForWindowsCredentialsW(_In_opt_ PCREDUI_INFO pUiInfo,_In_ DWORD dwAuthError,_Inout_ ULONG *pulAuthPackage,_In_opt_ LPCVOID pvInAuthBuffer,_In_ ULONG ulInAuthBufferSize,_Out_ LPVOID *ppvOutAuthBuffer,_Out_ ULONG *pulOutAuthBufferSize,_Inout_opt_ BOOL *pfSave,_In_ DWORD dwFlags)
DWORD WINAPI crypt32.CertEnumCertificateContextProperties(_In_ PCCERT_CONTEXT pCertContext,_In_ DWORD dwPropId)
DWORD WINAPI crypt32.CertEnumCRLContextProperties(_In_ PCCRL_CONTEXT pCrlContext,_In_ DWORD dwPropId)
DWORD WINAPI crypt32.CertEnumCTLContextProperties(_In_ PCCTL_CONTEXT pCtlContext,_In_ DWORD dwPropId)
DWORD WINAPI crypt32.CertGetNameStringA(_In_ PCCERT_CONTEXT pCertContext,_In_ DWORD dwType,_In_ DWORD dwFlags,_In_ void *pvTypePara,_Out_ LPTSTR pszNameString,_In_ DWORD cchNameString)
DWORD WINAPI crypt32.CertGetNameString(_In_ PCCERT_CONTEXT pCertContext,_In_ DWORD dwType,_In_ DWORD dwFlags,_In_ void *pvTypePara,_Out_ LPTSTR pszNameString,_In_ DWORD cchNameString)
DWORD WINAPI crypt32.CertGetNameStringW(_In_ PCCERT_CONTEXT pCertContext,_In_ DWORD dwType,_In_ DWORD dwFlags,_In_ void *pvTypePara,_Out_ LPTSTR pszNameString,_In_ DWORD cchNameString)
DWORD WINAPI crypt32.CertGetPublicKeyLength(_In_ DWORD dwCertEncodingType,_In_ PCERT_PUBLIC_KEY_INFO pPublicKey)
DWORD WINAPI crypt32.CertNameToStrA(_In_ DWORD dwCertEncodingType,_In_ PCERT_NAME_BLOB pName,_In_ DWORD dwStrType,_Out_ LPTSTR psz,_In_ DWORD csz)
DWORD WINAPI crypt32.CertNameToStr(_In_ DWORD dwCertEncodingType,_In_ PCERT_NAME_BLOB pName,_In_ DWORD dwStrType,_Out_ LPTSTR psz,_In_ DWORD csz)
DWORD WINAPI crypt32.CertNameToStrW(_In_ DWORD dwCertEncodingType,_In_ PCERT_NAME_BLOB pName,_In_ DWORD dwStrType,_Out_ LPTSTR psz,_In_ DWORD csz)
DWORD WINAPI crypt32.CertOIDToAlgId(_In_ LPCSTR pszObjId)
DWORD WINAPI crypt32.CertRDNValueToStrA(_In_ DWORD dwValueType,_In_ PCERT_RDN_VALUE_BLOB pValue,_Out_ LPTSTR psz,_In_ DWORD csz)
DWORD WINAPI crypt32.CertRDNValueToStr(_In_ DWORD dwValueType,_In_ PCERT_RDN_VALUE_BLOB pValue,_Out_ LPTSTR psz,_In_ DWORD csz)
DWORD WINAPI crypt32.CertRDNValueToStrW(_In_ DWORD dwValueType,_In_ PCERT_RDN_VALUE_BLOB pValue,_Out_ LPTSTR psz,_In_ DWORD csz)
DWORD WINAPI davclnt.DavGetTheLockOwnerOfTheFile(_In_ LPCWSTR FileName,_Out_opt_ PWSTR LockOwnerName,_Inout_ PULONG LockOwnerNameLengthInBytes)
DWORD WINAPI davclnt.DavInvalidateCache(_In_ LPWSTR URLName)
DWORD WINAPI dbghelp.GetTimestampForLoadedLibrary(_In_ HMODULE ImageBase)
DWORD WINAPI dbghelp.SymSetOptions(_In_ DWORD SymOptions)
DWORD WINAPI dbghelp.UnDecorateSymbolName(_In_ PCTSTR DecoratedName,_Out_ PTSTR UnDecoratedName,_In_ DWORD UndecoratedLength,_In_ DWORD Flags)
DWORD WINAPI dbghelp.UnDecorateSymbolNameW(_In_ PCTSTR DecoratedName,_Out_ PTSTR UnDecoratedName,_In_ DWORD UndecoratedLength,_In_ DWORD Flags)
DWORD WINAPI dhcpsapi.DhcpCreateClassV6(_In_ LPWSTR ServerIpAddress,_In_ DWORD ReservedMustBeZero,_In_ LPDHCP_CLASS_INFO_V6 ClassInfo)
DWORD WINAPI dhcpsapi.DhcpDeleteClassV6(_In_ LPWSTR ServerIpAddress,_In_ DWORD ReservedMustBeZero,_In_ LPWSTR ClassName)
DWORD WINAPI dhcpsapi.DhcpEnumClassesV6(_In_ LPWSTR ServerIpAddress,_In_ DWORD ReservedMustBeZero,_Inout_ DHCP_RESUME_HANDLE *ResumeHandle,_In_ DWORD PreferredMaximum,_Out_ LPDHCP_CLASS_INFO_ARRAY_V6 *ClassInfoArray,_Out_ DWORD *nRead,_Out_ DWORD *nTotal)
DWORD WINAPI dhcpsapi.DhcpGetMibInfoV5(_In_opt_ WCHAR *ServerIpAddress,_Out_ LPDHCP_MIB_INFO_V5 *MibInfo)
DWORD WINAPI dhcpsapi.DhcpGetOptionValueV6(_In_ LPWSTR ServerIpAddress,_In_ DWORD Flags,_In_ DHCP_OPTION_ID OptionID,_In_ WCHAR *ClassName,_In_ WCHAR *VendorName,_In_ LPDHCP_OPTION_SCOPE_INFO6 *ScopeInfo,_Out_ LPDHCP_OPTION_VALUE OptionValue)
DWORD WINAPI dhcpsapi.DhcpGetSubnetDelayOffer(_In_ DHCP_SRV_HANDLE ServerIpAddress,_In_ DHCP_IP_ADDRESS SubnetAddress,_Out_ USHORT *TimeDelayInMilliseconds)
DWORD WINAPI dhcpsapi.DhcpModifyClassV6(_In_ LPWSTR ServerIpAddress,_In_ DWORD ReservedMustBeZero,_In_ LPDHCP_CLASS_INFO_V6 ClassInfo)
DWORD WINAPI dhcpsapi.DhcpServerQueryDnsRegCredentials(_In_ DHCP_SRV_HANDLE ServerIpAddress,_In_ ULONG UnameSize,_Out_ LPWSTR Uname,_In_ ULONG DomainSize,_Out_ LPWSTR Domain)
DWORD WINAPI dhcpsapi.DhcpServerSetDnsRegCredentialsV5(_In_ DHCP_SRV_HANDLE ServerIpAddress,_In_ LPWSTR Uname,_In_ LPWSTR Domain,_In_ LPWSTR Password)
DWORD WINAPI dhcpsapi.DhcpSetClientInfoV6(_In_ LPWSTR ServerIpAddress,_In_ LPDHCP_CLIENT_INFO_V6 ClientInfo)
DWORD WINAPI dhcpsapi.DhcpSetSubnetDelayOffer(_In_ LPWSTR ServerIpAddress,_In_ DHCP_IP_ADDRESS SubnetAddress,_In_ USHORT TimeDelayInMilliseconds)
DWORD WINAPI fwpuclnt.FwpmCalloutDeleteById0(_In_ HANDLE engineHandle,_In_ UINT32 id)
DWORD WINAPI fwpuclnt.FwpmCalloutDestroyEnumHandle0(_In_ HANDLE engineHandle,_In_ HANDLE enumHandle)
DWORD WINAPI fwpuclnt.FwpmCalloutGetById0(_In_ HANDLE engineHandle,_In_ UINT32 id,_Out_ FWPM_CALLOUT0 **callout)
DWORD WINAPI fwpuclnt.FwpmCalloutSubscriptionsGet0(_In_ HANDLE engineHandle,_Out_ FWPM_CALLOUT_SUBSCRIPTION0 ***entries,_Out_ UINT32 *numEntries)
DWORD WINAPI fwpuclnt.FwpmCalloutUnsubscribeChanges0(_In_ HANDLE engineHandle,_In_ HANDLE changeHandle)
DWORD WINAPI fwpuclnt.FwpmConnectionDestroyEnumHandle0(_In_ HANDLE engineHandle,_In_ HANDLE enumHandle)
DWORD WINAPI fwpuclnt.FwpmEngineClose0(_In_ HANDLE engineHandle)
DWORD WINAPI fwpuclnt.FwpmEngineGetSecurityInfo0(_In_ HANDLE engineHandle,_In_ SECURITY_INFORMATION securityInfo,_Out_opt_ PSID *sidOwner,_Out_opt_ PSID *sidGroup,_Out_opt_ PACL *dacl,_Out_opt_ PACL *sacl,_Out_ PSECURITY_DESCRIPTOR *securityDescriptor)
DWORD WINAPI fwpuclnt.FwpmFilterDeleteById0(_In_ HANDLE engineHandle,_In_ UINT64 id)
DWORD WINAPI fwpuclnt.FwpmFilterDestroyEnumHandle0(_In_ HANDLE engineHandle,_In_ HANDLE enumHandle)
DWORD WINAPI fwpuclnt.FwpmFilterEnum0(_In_ HANDLE engineHandle,_In_ HANDLE enumHandle,_In_ UINT32 numEntriesRequested,_Out_ FWPM_FILTER0 ***entries,_Out_ UINT32 *numEntriesReturned)
DWORD WINAPI fwpuclnt.FwpmFilterGetById0(_In_ HANDLE engineHandle,_In_ UINT64 id,_Out_ FWPM_FILTER0 **filter)
DWORD WINAPI fwpuclnt.FwpmFilterSubscriptionsGet0(_In_ HANDLE engineHandle,_Out_ FWPM_FILTER_SUBSCRIPTION0 ***entries,_Out_ UINT32 *numEntries)
DWORD WINAPI fwpuclnt.FwpmFilterUnsubscribeChanges0(_In_ HANDLE engineHandle,_In_ HANDLE changeHandle)
DWORD WINAPI fwpuclnt.FwpmLayerEnum0(_In_ HANDLE engineHandle,_In_ HANDLE enumHandle,_In_ UINT32 numEntriesRequested,_Out_ FWPM_LAYER0 ***entries,_Out_ UINT32 *numEntriesReturned)
DWORD WINAPI fwpuclnt.FwpmLayerGetById0(_In_ HANDLE engineHandle,_In_ UINT16 id,_Out_ FWPM_LAYER0 **layer)
DWORD WINAPI fwpuclnt.FwpmNetEventDestroyEnumHandle0(_In_ HANDLE engineHandle,_In_ HANDLE enumHandle)
DWORD WINAPI fwpuclnt.FwpmNetEventEnum0(_In_ HANDLE engineHandle,_In_ HANDLE enumHandle,_In_ UINT32 numEntriesRequested,_Out_ FWPM_NET_EVENT0 ***entries,_Out_ UINT32 *numEntriesReturned)
DWORD WINAPI fwpuclnt.FwpmNetEventEnum1(_In_ HANDLE engineHandle,_In_ HANDLE enumHandle,_In_ UINT32 numEntriesRequested,_Out_ FWPM_NET_EVENT1 ***entries,_Out_ UINT32 *numEntriesReturned)
DWORD WINAPI fwpuclnt.FwpmNetEventEnum2(_In_ HANDLE engineHandle,_In_ HANDLE enumHandle,_In_ UINT32 numEntriesRequested,_Out_ FWPM_NET_EVENT2 ***entries,_Out_ UINT32 *numEntriesReturned)
DWORD WINAPI fwpuclnt.FwpmNetEventEnum3(_In_ HANDLE engineHandle,_In_ HANDLE enumHandle,_In_ UINT32 numEntriesRequested,_Out_ FWPM_NET_EVENT3 ***entries,_Out_ UINT32 *numEntriesReturned)
DWORD WINAPI fwpuclnt.FwpmNetEventSubscriptionsGet0(_In_ HANDLE engineHandle,_Out_ FWPM_NET_EVENT_SUBSCRIPTION0 ***entries,_Out_ UINT32 *numEntries)
DWORD WINAPI fwpuclnt.FwpmProviderContextDeleteById0(_In_ HANDLE engineHandle,_In_ UINT64 id)
DWORD WINAPI fwpuclnt.FwpmProviderContextDestroyEnumHandle0(_In_ HANDLE engineHandle,_In_ HANDLE enumHandle)
DWORD WINAPI fwpuclnt.FwpmProviderContextEnum1(_In_ HANDLE engineHandle,_In_ HANDLE enumHandle,_In_ UINT32 numEntriesRequested,_Out_ FWPM_PROVIDER_CONTEXT1 ***entries,_Out_ UINT32 *numEntriesReturned)
DWORD WINAPI fwpuclnt.FwpmProviderContextUnsubscribeChanges0(_In_ HANDLE engineHandle,_In_ HANDLE changeHandle)
DWORD WINAPI fwpuclnt.FwpmProviderDestroyEnumHandle0(_In_ HANDLE engineHandle,_In_ HANDLE enumHandle)
DWORD WINAPI fwpuclnt.FwpmProviderEnum0(_In_ HANDLE engineHandle,_In_ HANDLE enumHandle,_In_ UINT32 numEntriesRequested,_Out_ FWPM_PROVIDER0 ***entries,_Out_ UINT32 *numEntriesReturned)
DWORD WINAPI fwpuclnt.FwpmProviderSubscriptionsGet0(_In_ HANDLE engineHandle,_Out_ FWPM_PROVIDER_SUBSCRIPTION0 ***entries,_Out_ UINT32 *numEntries)
DWORD WINAPI fwpuclnt.FwpmProviderUnsubscribeChanges0(_In_ HANDLE engineHandle,_In_ HANDLE changeHandle)
DWORD WINAPI fwpuclnt.FwpmSessionDestroyEnumHandle0(_In_ HANDLE engineHandle,_In_ HANDLE enumHandle)
DWORD WINAPI fwpuclnt.FwpmSessionEnum0(_In_ HANDLE engineHandle,_In_ HANDLE enumHandle,_In_ UINT32 numEntriesRequested,_Out_ FWPM_SESSION0 ***entries,_Out_ UINT32 *numEntriesReturned)
DWORD WINAPI fwpuclnt.FwpmSystemPortsUnsubscribe0(_In_opt_ HANDLE engineHandle,_Inout_ HANDLE sysPortsHandle)
DWORD WINAPI fwpuclnt.IPsecDospGetSecurityInfo0(_In_ HANDLE engineHandle,_In_ SECURITY_INFORMATION securityInfo,_Out_opt_ PSID *sidOwner,_Out_opt_ PSID *sidGroup,_Out_opt_ PACL *dacl,_Out_opt_ PACL *sacl,_Out_ PSECURITY_DESCRIPTOR *securityDescriptor)
DWORD WINAPI fwpuclnt.IPsecDospGetStatistics0(_In_ HANDLE engineHandle,_Out_ IPSEC_DOSP_STATISTICS0 *idpStatistics)
DWORD WINAPI fwpuclnt.IPsecDospStateDestroyEnumHandle0(_In_ HANDLE engineHandle,_Inout_ HANDLE enumHandle)
DWORD WINAPI fwpuclnt.IPsecDospStateEnum0(_In_ HANDLE engineHandle,_In_ HANDLE enumHandle,_In_ UINT32 numEntriesRequested,_Out_ IPSEC_DOSP_STATE0 ***entries,_Out_ UINT32 *numEntries)
DWORD WINAPI fwpuclnt.IPsecGetStatistics0(_In_ HANDLE engineHandle,_Out_ IPSEC_STATISTICS0 *ipsecStatistics)
DWORD WINAPI fwpuclnt.IPsecGetStatistics0(_In_ HANDLE engineHandle,_Out_ IPSEC_STATISTICS1 *ipsecStatistics)
DWORD WINAPI fwpuclnt.IPsecKeyManagersGet0(_In_ HANDLE engineHandle,_Out_ IPSEC_KEY_MANAGER0 ***entries,_Out_ UINT32 *numentries)
DWORD WINAPI fwpuclnt.IPsecKeyManagerUnregisterAndDelete0(_In_ HANDLE engineHandle,_In_ HANDLE keyMgmtHandle)
DWORD WINAPI fwpuclnt.IPsecSaContextSubscriptionsGet0(_In_ HANDLE engineHandle,_Out_ IPSEC_SA_CONTEXT_SUBSCRIPTION0 ***entries,_Out_ UINT32 *numEntries)
DWORD WINAPI fwpuclnt.IPsecSaContextUnsubscribe0(_In_ HANDLE engineHandle,_Inout_ HANDLE eventsHandle)
DWORD WINAPI fwpuclnt.IPsecSaDestroyEnumHandle0(_In_ HANDLE engineHandle,_In_ HANDLE enumHandle)
DWORD WINAPI fwpuclnt.IPsecSaEnum0(_In_ HANDLE engineHandle,_In_ HANDLE enumHandle,_In_ UINT32 numEntriesRequested,_Out_ IPSEC_SA_DETAILS0 ***entries,_Out_ UINT32 *numEntriesReturned)
DWORD WINAPI fwpuclnt.IPsecSaEnum1(_In_ HANDLE engineHandle,_In_ HANDLE enumHandle,_In_ UINT32 numEntriesRequested,_Out_ IPSEC_SA_DETAILS1 ***entries,_Out_ UINT32 *numEntriesReturned)
DWORD WINAPI iphlpapi.AllocateAndGetTcpExTableFromStack(_Out_ PVOID *ppTcpTable,_In_ BOOL bOrder,_In_ HANDLE hHeap,_In_ DWORD dwFlags,_In_ DWORD dwFamily)
DWORD WINAPI iphlpapi.AllocateAndGetUdpExTableFromStack(_Out_ PVOID *ppUDPTable,_In_ BOOL bOrder,_In_ HANDLE hHeap,_In_ DWORD dwFlags,_In_ DWORD dwFamily)
DWORD WINAPI iphlpapi.EnableRouter(HANDLE *pHandle None,OVERLAPPED *pOverlapped None)
DWORD WINAPI iphlpapi.GetTcpTable(_Out_ PMIB_TCPTABLE pTcpTable,_Inout_ PDWORD pdwSize,_In_ BOOL bOrder)
DWORD WINAPI iphlpapi.IcmpSendEcho2Ex(_In_ HANDLE IcmpHandle,_In_opt_ HANDLE Event,_In_opt_ PIO_APC_ROUTINE ApcRoutine,_In_opt_ PVOID ApcContext,_In_ IPAddr SourceAddress,_In_ IPAddr DestinationAddress,_In_ LPVOID RequestData,_In_ WORD RequestSize,_In_opt_ PIP_OPTION_INFORMATION RequestOptions,_Out_ LPVOID ReplyBuffer,_In_ DWORD ReplySize,_In_ DWORD Timeout)
DWORD WINAPI iphlpapi.IcmpSendEcho2(_In_ HANDLE IcmpHandle,_In_opt_ HANDLE Event,_In_opt_ PIO_APC_ROUTINE ApcRoutine,_In_opt_ PVOID ApcContext,_In_ IPAddr DestinationAddress,_In_ LPVOID RequestData,_In_ WORD RequestSize,_In_opt_ PIP_OPTION_INFORMATION RequestOptions,_Out_ LPVOID ReplyBuffer,_In_ DWORD ReplySize,_In_ DWORD Timeout)
DWORD WINAPI iphlpapi.NotifySecurityHealthChange(PHANDLE pHandle None,LPOVERLAPPED pOverLapped None,PULONG SecurityHealthFlags None)
DWORD WINAPI iphlpapi.SetIpStatisticsEx(_In_ PMIB_IPSTATS pIpStats,ULONG Family None)
DWORD WINAPI iphlpapi.SetIpStatistics(_In_ PMIB_IPSTATS pIpStats)
DWORD WINAPI iphlpapi.UnenableRouter(OVERLAPPED *pOverlapped None,_Out_opt_ LPDWORD lpdwEnableCount)
DWORD WINAPI kernel32.DiscardVirtualMemory(_In_ PVOID VirtualAddress,_In_ SIZE_T Size)
DWORD WINAPI kernel32.ExpandEnvironmentStringsA(_In_ LPCTSTR lpSrc,_Out_opt_ LPTSTR lpDst,_In_ DWORD nSize)
DWORD WINAPI kernel32.ExpandEnvironmentStrings(_In_ LPCTSTR lpSrc,_Out_opt_ LPTSTR lpDst,_In_ DWORD nSize)
DWORD WINAPI kernel32.ExpandEnvironmentStringsW(_In_ LPCTSTR lpSrc,_Out_opt_ LPTSTR lpDst,_In_ DWORD nSize)
DWORD WINAPI kernel32.FlsAlloc(_In_ PFLS_CALLBACK_FUNCTION lpCallback)
DWORD WINAPI kernel32.FormatMessageA(_In_ DWORD dwFlags,_In_opt_ LPCVOID lpSource,_In_ DWORD dwMessageId,_In_ DWORD dwLanguageId,_Out_ LPTSTR lpBuffer,_In_ DWORD nSize,_In_opt_ va_list *Arguments)
DWORD WINAPI kernel32.FormatMessage(_In_ DWORD dwFlags,_In_opt_ LPCVOID lpSource,_In_ DWORD dwMessageId,_In_ DWORD dwLanguageId,_Out_ LPTSTR lpBuffer,_In_ DWORD nSize,_In_opt_ va_list *Arguments)
DWORD WINAPI kernel32.FormatMessageW(_In_ DWORD dwFlags,_In_opt_ LPCVOID lpSource,_In_ DWORD dwMessageId,_In_ DWORD dwLanguageId,_Out_ LPTSTR lpBuffer,_In_ DWORD nSize,_In_opt_ va_list *Arguments)
DWORD WINAPI kernel32.GetCompressedFileSizeA(_In_ LPCTSTR lpFileName,_Out_opt_ LPDWORD lpFileSizeHigh)
DWORD WINAPI kernel32.GetCompressedFileSize(_In_ LPCTSTR lpFileName,_Out_opt_ LPDWORD lpFileSizeHigh)
DWORD WINAPI kernel32.GetCompressedFileSizeTransactedA(_In_ LPCTSTR lpFileName,_Out_opt_ LPDWORD lpFileSizeHigh,_In_ HANDLE hTransaction)
DWORD WINAPI kernel32.GetCompressedFileSizeTransacted(_In_ LPCTSTR lpFileName,_Out_opt_ LPDWORD lpFileSizeHigh,_In_ HANDLE hTransaction)
DWORD WINAPI kernel32.GetCompressedFileSizeTransactedW(_In_ LPCTSTR lpFileName,_Out_opt_ LPDWORD lpFileSizeHigh,_In_ HANDLE hTransaction)
DWORD WINAPI kernel32.GetCompressedFileSizeW(_In_ LPCTSTR lpFileName,_Out_opt_ LPDWORD lpFileSizeHigh)
DWORD WINAPI kernel32.GetCurrentDirectoryA(_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer)
DWORD WINAPI kernel32.GetCurrentDirectory(_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer)
DWORD WINAPI kernel32.GetCurrentDirectoryW(_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer)
DWORD WINAPI kernel32.GetCurrentProcessId(void None None)
DWORD WINAPI kernel32.GetCurrentProcessorNumber(void None None)
DWORD WINAPI kernel32.GetCurrentThreadId(void None None)
DWORD WINAPI kernel32.GetDeviceDriverFileNameA(_In_ LPVOID ImageBase,_Out_ LPTSTR lpFilename,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetDeviceDriverFileName(_In_ LPVOID ImageBase,_Out_ LPTSTR lpFilename,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetDeviceDriverFileNameW(_In_ LPVOID ImageBase,_Out_ LPTSTR lpFilename,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetDllDirectoryA(_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer)
DWORD WINAPI kernel32.GetDllDirectory(_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer)
DWORD WINAPI kernel32.GetDllDirectoryW(_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer)
DWORD WINAPI kernel32.GetDynamicTimeZoneInformation(_Out_ PDYNAMIC_TIME_ZONE_INFORMATION pTimeZoneInformation)
DWORD WINAPI kernel32.GetEnvironmentVariableA(_In_opt_ LPCTSTR lpName,_Out_opt_ LPTSTR lpBuffer,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetEnvironmentVariable(_In_opt_ LPCTSTR lpName,_Out_opt_ LPTSTR lpBuffer,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetEnvironmentVariableW(_In_opt_ LPCTSTR lpName,_Out_opt_ LPTSTR lpBuffer,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetFileAttributesA(_In_ LPCTSTR lpFileName)
DWORD WINAPI kernel32.GetFileAttributes(_In_ LPCTSTR lpFileName)
DWORD WINAPI kernel32.GetFileAttributesW(_In_ LPCTSTR lpFileName)
DWORD WINAPI kernel32.GetFileSize(_In_ HANDLE hFile,_Out_opt_ LPDWORD lpFileSizeHigh)
DWORD WINAPI kernel32.GetFileType(_In_ HANDLE hFile)
DWORD WINAPI kernel32.GetFinalPathNameByHandleA(_In_ HANDLE hFile,_Out_ LPTSTR lpszFilePath,_In_ DWORD cchFilePath,_In_ DWORD dwFlags)
DWORD WINAPI kernel32.GetFinalPathNameByHandle(_In_ HANDLE hFile,_Out_ LPTSTR lpszFilePath,_In_ DWORD cchFilePath,_In_ DWORD dwFlags)
DWORD WINAPI kernel32.GetFinalPathNameByHandleW(_In_ HANDLE hFile,_Out_ LPTSTR lpszFilePath,_In_ DWORD cchFilePath,_In_ DWORD dwFlags)
DWORD WINAPI kernel32.GetFirmwareEnvironmentVariableA(_In_ LPCTSTR lpName,_In_ LPCTSTR lpGuid,_Out_ PVOID pBuffer,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetFirmwareEnvironmentVariable(_In_ LPCTSTR lpName,_In_ LPCTSTR lpGuid,_Out_ PVOID pBuffer,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetFirmwareEnvironmentVariableW(_In_ LPCTSTR lpName,_In_ LPCTSTR lpGuid,_Out_ PVOID pBuffer,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetFullPathNameA(_In_ LPCTSTR lpFileName,_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer,_Out_ LPTSTR *lpFilePart)
DWORD WINAPI kernel32.GetFullPathName(_In_ LPCTSTR lpFileName,_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer,_Out_ LPTSTR *lpFilePart)
DWORD WINAPI kernel32.GetFullPathNameTransactedA(_In_ LPCTSTR lpFileName,_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer,_Out_ LPTSTR *lpFilePart,_In_ HANDLE hTransaction)
DWORD WINAPI kernel32.GetFullPathNameTransacted(_In_ LPCTSTR lpFileName,_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer,_Out_ LPTSTR *lpFilePart,_In_ HANDLE hTransaction)
DWORD WINAPI kernel32.GetFullPathNameTransactedW(_In_ LPCTSTR lpFileName,_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer,_Out_ LPTSTR *lpFilePart,_In_ HANDLE hTransaction)
DWORD WINAPI kernel32.GetFullPathNameW(_In_ LPCTSTR lpFileName,_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer,_Out_ LPTSTR *lpFilePart)
DWORD WINAPI kernel32.GetLastError(void None None)
DWORD WINAPI kernel32.GetLogicalDriveStringsA(_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer)
DWORD WINAPI kernel32.GetLogicalDriveStrings(_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer)
DWORD WINAPI kernel32.GetLogicalDriveStringsW(_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer)
DWORD WINAPI kernel32.GetLogicalDrives(void None None)
DWORD WINAPI kernel32.GetLongPathNameA(_In_ LPCTSTR lpszShortPath,_Out_ LPTSTR lpszLongPath,_In_ DWORD cchBuffer)
DWORD WINAPI kernel32.GetLongPathName(_In_ LPCTSTR lpszShortPath,_Out_ LPTSTR lpszLongPath,_In_ DWORD cchBuffer)
DWORD WINAPI kernel32.GetLongPathNameTransactedA(_In_ LPCTSTR lpszShortPath,_Out_ LPTSTR lpszLongPath,_In_ DWORD cchBuffer,_In_ HANDLE hTransaction)
DWORD WINAPI kernel32.GetLongPathNameTransacted(_In_ LPCTSTR lpszShortPath,_Out_ LPTSTR lpszLongPath,_In_ DWORD cchBuffer,_In_ HANDLE hTransaction)
DWORD WINAPI kernel32.GetLongPathNameTransactedW(_In_ LPCTSTR lpszShortPath,_Out_ LPTSTR lpszLongPath,_In_ DWORD cchBuffer,_In_ HANDLE hTransaction)
DWORD WINAPI kernel32.GetLongPathNameW(_In_ LPCTSTR lpszShortPath,_Out_ LPTSTR lpszLongPath,_In_ DWORD cchBuffer)
DWORD WINAPI kernel32.GetMappedFileNameA(_In_ HANDLE hProcess,_In_ LPVOID lpv,_Out_ LPTSTR lpFilename,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetMappedFileName(_In_ HANDLE hProcess,_In_ LPVOID lpv,_Out_ LPTSTR lpFilename,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetMappedFileNameW(_In_ HANDLE hProcess,_In_ LPVOID lpv,_Out_ LPTSTR lpFilename,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetModuleBaseNameA(_In_ HANDLE hProcess,_In_opt_ HMODULE hModule,_Out_ LPTSTR lpBaseName,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetModuleBaseName(_In_ HANDLE hProcess,_In_opt_ HMODULE hModule,_Out_ LPTSTR lpBaseName,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetModuleBaseNameW(_In_ HANDLE hProcess,_In_opt_ HMODULE hModule,_Out_ LPTSTR lpBaseName,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetModuleFileNameA(_In_opt_ HMODULE hModule,_Out_ LPTSTR lpFilename,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetModuleFileNameExA(_In_ HANDLE hProcess,_In_opt_ HMODULE hModule,_Out_ LPTSTR lpFilename,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetModuleFileNameEx(_In_ HANDLE hProcess,_In_opt_ HMODULE hModule,_Out_ LPTSTR lpFilename,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetModuleFileNameExW(_In_ HANDLE hProcess,_In_opt_ HMODULE hModule,_Out_ LPTSTR lpFilename,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetModuleFileName(_In_opt_ HMODULE hModule,_Out_ LPTSTR lpFilename,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetModuleFileNameW(_In_opt_ HMODULE hModule,_Out_ LPTSTR lpFilename,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetPriorityClass(_In_ HANDLE hProcess)
DWORD WINAPI kernel32.GetPrivateProfileSectionA(_In_ LPCTSTR lpAppName,_Out_ LPTSTR lpReturnedString,_In_ DWORD nSize,_In_ LPCTSTR lpFileName)
DWORD WINAPI kernel32.GetPrivateProfileSection(_In_ LPCTSTR lpAppName,_Out_ LPTSTR lpReturnedString,_In_ DWORD nSize,_In_ LPCTSTR lpFileName)
DWORD WINAPI kernel32.GetPrivateProfileSectionNamesA(_Out_ LPTSTR lpszReturnBuffer,_In_ DWORD nSize,_In_ LPCTSTR lpFileName)
DWORD WINAPI kernel32.GetPrivateProfileSectionNames(_Out_ LPTSTR lpszReturnBuffer,_In_ DWORD nSize,_In_ LPCTSTR lpFileName)
DWORD WINAPI kernel32.GetPrivateProfileSectionNamesW(_Out_ LPTSTR lpszReturnBuffer,_In_ DWORD nSize,_In_ LPCTSTR lpFileName)
DWORD WINAPI kernel32.GetPrivateProfileSectionW(_In_ LPCTSTR lpAppName,_Out_ LPTSTR lpReturnedString,_In_ DWORD nSize,_In_ LPCTSTR lpFileName)
DWORD WINAPI kernel32.GetPrivateProfileStringA(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ LPCTSTR lpDefault,_Out_ LPTSTR lpReturnedString,_In_ DWORD nSize,_In_ LPCTSTR lpFileName)
DWORD WINAPI kernel32.GetPrivateProfileString(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ LPCTSTR lpDefault,_Out_ LPTSTR lpReturnedString,_In_ DWORD nSize,_In_ LPCTSTR lpFileName)
DWORD WINAPI kernel32.GetPrivateProfileStringW(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ LPCTSTR lpDefault,_Out_ LPTSTR lpReturnedString,_In_ DWORD nSize,_In_ LPCTSTR lpFileName)
DWORD WINAPI kernel32.GetProcessHeaps(_In_ DWORD NumberOfHeaps,_Out_ PHANDLE ProcessHeaps)
DWORD WINAPI kernel32.GetProcessId(_In_ HANDLE Process)
DWORD WINAPI kernel32.GetProcessIdOfThread(_In_ HANDLE Thread)
DWORD WINAPI kernel32.GetProcessImageFileNameA(_In_ HANDLE hProcess,_Out_ LPTSTR lpImageFileName,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetProcessImageFileName(_In_ HANDLE hProcess,_Out_ LPTSTR lpImageFileName,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetProcessImageFileNameW(_In_ HANDLE hProcess,_Out_ LPTSTR lpImageFileName,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetProcessVersion(_In_ DWORD ProcessId)
DWORD WINAPI kernel32.GetProfileSectionA(_In_ LPCTSTR lpAppName,_Out_ LPTSTR lpReturnedString,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetProfileSection(_In_ LPCTSTR lpAppName,_Out_ LPTSTR lpReturnedString,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetProfileSectionW(_In_ LPCTSTR lpAppName,_Out_ LPTSTR lpReturnedString,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetProfileStringA(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ LPCTSTR lpDefault,_Out_ LPTSTR lpReturnedString,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetProfileString(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ LPCTSTR lpDefault,_Out_ LPTSTR lpReturnedString,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetProfileStringW(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ LPCTSTR lpDefault,_Out_ LPTSTR lpReturnedString,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetShortPathNameA(_In_ LPCTSTR lpszLongPath,_Out_ LPTSTR lpszShortPath,_In_ DWORD cchBuffer)
DWORD WINAPI kernel32.GetShortPathName(_In_ LPCTSTR lpszLongPath,_Out_ LPTSTR lpszShortPath,_In_ DWORD cchBuffer)
DWORD WINAPI kernel32.GetShortPathNameW(_In_ LPCTSTR lpszLongPath,_Out_ LPTSTR lpszShortPath,_In_ DWORD cchBuffer)
DWORD WINAPI kernel32.GetTempPathA(_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer)
DWORD WINAPI kernel32.GetTempPath(_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer)
DWORD WINAPI kernel32.GetTempPathW(_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer)
DWORD WINAPI kernel32.GetThreadId(_In_ HANDLE Thread)
DWORD WINAPI kernel32.GetTickCount(void None None)
DWORD WINAPI kernel32.GetTimeZoneInformation(_Out_ LPTIME_ZONE_INFORMATION lpTimeZoneInformation)
DWORD WINAPI kernel32.GetVersion(void None None)
DWORD WINAPI kernel32.LoadModule(_In_ LPCSTR lpModuleName,_In_ LPVOID lpParameterBlock)
DWORD WINAPI kernel32.OfferVirtualMemory(_In_ PVOID VirtualAddress,_In_ SIZE_T Size,_In_ OFFER_PRIORITY Priority)
DWORD WINAPI kernel32.QueryDosDeviceA(_In_opt_ LPCTSTR lpDeviceName,_Out_ LPTSTR lpTargetPath,_In_ DWORD ucchMax)
DWORD WINAPI kernel32.QueryDosDevice(_In_opt_ LPCTSTR lpDeviceName,_Out_ LPTSTR lpTargetPath,_In_ DWORD ucchMax)
DWORD WINAPI kernel32.QueryDosDeviceW(_In_opt_ LPCTSTR lpDeviceName,_Out_ LPTSTR lpTargetPath,_In_ DWORD ucchMax)
DWORD WINAPI kernel32.QueryIoRateControlInformationJobObject(_In_opt_ HANDLE hJob,_In_opt_ PCWSTR VolumeName,_Out_ JOBOBJECT_IO_RATE_CONTROL_INFORMATION **InfoBlocks,_Out_ ULONG *InfoBlockCount)
DWORD WINAPI kernel32.QueueUserAPC(_In_ PAPCFUNC pfnAPC,_In_ HANDLE hThread,_In_ ULONG_PTR dwData)
DWORD WINAPI kernel32.ReclaimVirtualMemory(_In_ PVOID VirtualAddress,_In_ SIZE_T Size)
DWORD WINAPI kernel32.ResumeThread(_In_ HANDLE hThread)
DWORD WINAPI kernel32.SearchPathA(_In_opt_ LPCTSTR lpPath,_In_ LPCTSTR lpFileName,_In_opt_ LPCTSTR lpExtension,_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer,_Out_opt_ LPTSTR *lpFilePart)
DWORD WINAPI kernel32.SearchPath(_In_opt_ LPCTSTR lpPath,_In_ LPCTSTR lpFileName,_In_opt_ LPCTSTR lpExtension,_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer,_Out_opt_ LPTSTR *lpFilePart)
DWORD WINAPI kernel32.SearchPathW(_In_opt_ LPCTSTR lpPath,_In_ LPCTSTR lpFileName,_In_opt_ LPCTSTR lpExtension,_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer,_Out_opt_ LPTSTR *lpFilePart)
DWORD WINAPI kernel32.SetCriticalSectionSpinCount(_Inout_ LPCRITICAL_SECTION lpCriticalSection,_In_ DWORD dwSpinCount)
DWORD WINAPI kernel32.SetFilePointer(_In_ HANDLE hFile,_In_ LONG lDistanceToMove,_Inout_opt_ PLONG lpDistanceToMoveHigh,_In_ DWORD dwMoveMethod)
DWORD WINAPI kernel32.SetIoRateControlInformationJobObject(_In_ HANDLE hJob,_In_ JOBOBJECT_IO_RATE_CONTROL_INFORMATION *IoRateControlInfo)
DWORD WINAPI kernel32.SetThreadIdealProcessor(_In_ HANDLE hThread,_In_ DWORD dwIdealProcessor)
DWORD WINAPI kernel32.SignalObjectAndWait(_In_ HANDLE hObjectToSignal,_In_ HANDLE hObjectToWaitOn,_In_ DWORD dwMilliseconds,_In_ BOOL bAlertable)
DWORD WINAPI kernel32.SuspendThread(_In_ HANDLE hThread)
DWORD WINAPI kernel32.WaitForSingleObjectEx(_In_ HANDLE hHandle,_In_ DWORD dwMilliseconds,_In_ BOOL bAlertable)
DWORD WINAPI kernel32.WaitForSingleObject(_In_ HANDLE hHandle,_In_ DWORD dwMilliseconds)
DWORD WINAPI kernel32.Wow64SuspendThread(_In_ HANDLE hThread)
DWORD WINAPI kernelbase.SleepEx(_In_ DWORD dwMilliseconds,_In_ BOOL bAlertable)
DWORD WINAPI kernelbase.TlsAlloc(void None None)
DWORD WINAPI mprapi.MprAdminDeviceEnum(_In_ MPR_SERVER_HANDLE hMprServer,_In_ DWORD dwLevel,_Out_ LPBYTE *lplpbBuffer,_Out_ LPDWORD lpdwTotalEntries)
DWORD WINAPI mprapi.MprConfigFilterGetInfo(_In_ HANDLE hMprConfig,_In_ DWORD dwLevel,_In_ DWORD dwTransportId,_Out_ LPBYTE lpBuffer)
DWORD WINAPI mprapi.MprConfigFilterSetInfo(_In_ HANDLE hMprConfig,_In_ DWORD dwLevel,_In_ DWORD dwTransportId,_In_ LPBYTE lpBuffer)
DWORD WINAPI mstlsapi.TLSGetServerCertificate(_In_ TLS_HANDLE hHandle,_In_ BOOL bSignCert,_Out_ LPBYTE *ppbCertBlob,_Out_ LPDWORD lpdwCertBlobLen,_Out_ PDWORD pdwErrCode)
DWORD WINAPI mstlsapi.TLSKeyPackEnumBegin(_In_ TLS_HANDLE hHandle,_In_ DWORD dwSearchParm,_In_ BOOL bMatchAll,_In_ LSKeyPack *lpSearchParm,_Out_ PDWORD pdwErrCode)
DWORD WINAPI mstlsapi.TLSKeyPackEnumEnd(_In_ TLS_HANDLE hHandle,_Out_ PDWORD pdwErrCode)
DWORD WINAPI mstlsapi.TLSKeyPackEnumNext(_In_ TLS_HANDLE hHandle,_In_ LsKeyPack *lpKeyPack,_Out_ PDWORD pdwErrCode)
DWORD WINAPI mstlsapi.TLSLicenseEnumBegin(_In_ TLS_HANDLE hHandle,_In_ DWORD dwSearchParm,_In_ BOOL bMatchAll,_In_ LSLicense *lpSearchParm,_Out_ PDWORD pdwErrCode)
DWORD WINAPI mstlsapi.TLSLicenseEnumEnd(_In_ TLS_HANDLE hHandle,_Out_ PDWORD pdwErrCode)
DWORD WINAPI mstlsapi.TLSLicenseEnumNext(_In_ TLS_HANDLE hHandle,_In_ LSLicense *lpLicense,_Out_ PDWORD pdwErrCode)
DWORD WINAPI netapi32.DavGetHTTPFromUNCPath(_In_ LPCWSTR UncPath,_Out_ LPWSTR HttpPath,_Inout_ LPDWORD lpSize)
DWORD WINAPI netapi32.DsGetDcNextA(_In_ HANDLE GetDcContextHandle,_Out_opt_ PULONG SockAddressCount,_Out_opt_ LPSOCKET_ADDRESS *SockAddresses,_Out_opt_ LPTSTR *DnsHostName)
DWORD WINAPI netapi32.DsGetDcNext(_In_ HANDLE GetDcContextHandle,_Out_opt_ PULONG SockAddressCount,_Out_opt_ LPSOCKET_ADDRESS *SockAddresses,_Out_opt_ LPTSTR *DnsHostName)
DWORD WINAPI netapi32.DsGetDcNextW(_In_ HANDLE GetDcContextHandle,_Out_opt_ PULONG SockAddressCount,_Out_opt_ LPSOCKET_ADDRESS *SockAddresses,_Out_opt_ LPTSTR *DnsHostName)
DWORD WINAPI netapi32.DsGetDcOpenA(_In_ LPCTSTR DnsName,_In_ ULONG OptionFlags,_In_opt_ LPCTSTR SiteName,_In_opt_ GUID *DomainGuid,_In_opt_ LPCTSTR DnsForestName,_In_ ULONG DcFlags,_Out_ PHANDLE RetGetDcContext)
DWORD WINAPI netapi32.DsGetDcOpen(_In_ LPCTSTR DnsName,_In_ ULONG OptionFlags,_In_opt_ LPCTSTR SiteName,_In_opt_ GUID *DomainGuid,_In_opt_ LPCTSTR DnsForestName,_In_ ULONG DcFlags,_Out_ PHANDLE RetGetDcContext)
DWORD WINAPI netapi32.DsGetDcOpenW(_In_ LPCTSTR DnsName,_In_ ULONG OptionFlags,_In_opt_ LPCTSTR SiteName,_In_opt_ GUID *DomainGuid,_In_opt_ LPCTSTR DnsForestName,_In_ ULONG DcFlags,_Out_ PHANDLE RetGetDcContext)
DWORD WINAPI netapi32.DsMergeForestTrustInformationW(_In_ LPCWSTR DomainName,_In_ PLSA_FOREST_TRUST_INFORMATION NewForestTrustInfo,_In_opt_ PLSA_FOREST_TRUST_INFORMATION OldForestTrustInfo,_Out_ PLSA_FOREST_TRUST_INFORMATION *ForestTrustInfo)
DWORD WINAPI nmapi.FilterAddObject(_In_ HFILTER hFilter,_Out_ LPFILTEROBJECT lpFilterObject)
DWORD WINAPI nmapi.GetCaptureCommentFromFilename(_In_ LPSTR lpFilename,_In_ LPSTR lpComment,_In_ DWORD BufferSize)
DWORD WINAPI nmapi.GetCaptureMacType(_In_ HCAPTURE hCapture)
DWORD WINAPI nmapi.GetCaptureTotalFrames(_In_ HCAPTURE hCapture)
DWORD WINAPI nmapi.GetFrameDstAddressOffset(_In_ HFRAME hFrame,_In_ DWORD AddressType,_In_ LPDWORD AddressLength)
DWORD WINAPI nmapi.GetFrameLength(_In_ HFRAME hFrame)
DWORD WINAPI nmapi.GetFrameMacHeaderLength(_In_ HFRAME hFrame)
DWORD WINAPI nmapi.GetFrameMacType(_In_ HFRAME hFrame)
DWORD WINAPI nmapi.GetFrameNumber(_In_ HFRAME hFrame)
DWORD WINAPI nmapi.GetFrameSrcAddressOffset(HFRAME hFrame None,DWORD AddressType None,LPDWORD AddressLength None)
DWORD WINAPI nmapi.GetFrameStoredLength(_In_ HFRAME hFrame)
DWORD WINAPI nmapi.GetPreviousProtocolOffsetByName(_In_ HFRAME hFrame,_In_ DWORD dwStartOffset,_In_ LPSTR szProtocolName,_Out_ DWORD *pdwPreviousOffset)
DWORD WINAPI nmapi.MacTypeToAddressType(_In_ DWORD MacType)
DWORD WINAPI None.Arbitrate(_In_ RESID Resource,_In_ PQUORUM_RESOURCE_LOST LostQuorumResource)
DWORD WINAPI None.CardCreateDirectory(__in PCARD_DATA pCardData,__in LPSTR pszDirectory,__in CARD_DIRECTORY_ACCESS_CONDITION AccessCondition)
DWORD WINAPI None.CardCreateFile(__in PCARD_DATA pCardData,__in LPSTR pszDirectoryName,__in LPSTR pszFileName,__in DWORD cbInitialCreationSize,__in CARD_FILE_ACCESS_CONDITION AccessCondition)
DWORD WINAPI None.CardDestroyDHAgreement(__in PCARD_DATA pCardData,__in BYTE bSecretAgreementIndex,__in DWORD dwFlags)
DWORD WINAPI None.CardQueryKeySizes(__in PCARD_DATA pCardData,__in DWORD dwKeySpec,__in DWORD dwFlags,__out PCARD_KEY_SIZES pKeySizes)
DWORD WINAPI None.ExpertIndicateStatus(HEXPERTKEY hExpertKey None,EXPERTSTATUSENUMERATION Status None,DWORD SubStatus None,char* sztext None,long PercentDone None)
DWORD WINAPI None.ExpertSubmitEvent(HEXPERTKEY hExpertKey None,PNMEVENTDATA pExpertEvent None)
DWORD WINAPI None.ExportCallback(_In_ PBYTE pbData,_In_opt_ PVOID pvCallbackContext,_In_ ULONG ulLength)
DWORD WINAPI None.GetCaptureCommentFromFilename(LPSTR lpFilename None,LPSTR lpComment None,DWORD BufferSize None)
DWORD WINAPI None.GetFrameNumber(HFRAME hFrame None)
DWORD WINAPI None.HandlerEx(_In_ DWORD dwControl,_In_ DWORD dwEventType,_In_ LPVOID lpEventData,_In_ LPVOID lpContext)
DWORD WINAPI None.ImportCallback(_In_ PBYTE pbData,_In_opt_ PVOID pvCallbackContext,_Inout_ PULONG ulLength)
DWORD WINAPI None.InstallWiaDevice(_In_ PWIADEVICEINSTALL *pWiaDeviceInstall)
DWORD WINAPI None.MacTypeToAddressType(DWORD MacType None)
DWORD WINAPI None.Offline(_In_ RESID Resource)
DWORD WINAPI None.OfflineV2(_In_ RESID Resource,_In_opt_ LPCWSTR DestinationNodeName,_In_ DWORD OfflineFlags,_In_opt_ PBYTE InBuffer,_In_ DWORD InBufferSize,_In_ DWORD Reserved)
DWORD WINAPI None.Online(_In_ RESID Resource,_Inout_ LPHANDLE EventHandle)
DWORD WINAPI None.OnlineV2(_In_ RESID Resource,_Out_ LPHANDLE EventHandle,_In_ DWORD OnlineFlags,_In_opt_ PBYTE InBuffer,_In_ DWORD InBufferSize,_In_ DWORD Reserved)
DWORD WINAPI None.PeerDistGetStatusEx(_In_ PEERDIST_INSTANCE_HANDLE hPeerDist,_Inout_ PEERDIST_STATUS_INFO *pPeerDistStatusInfo)
DWORD WINAPI None.PeerDistRegisterForStatusChangeNotificationEx(_In_ PEERDIST_INSTANCE_HANDLE hPeerDist,_In_opt_ HANDLE hCompletionPort,_In_opt_ ULONG_PTR ulCompletionKey,_In_ LPOVERLAPPED lpOverlapped,_Inout_ PEERDIST_STATUS_INFO *pPeerDistStatus)
DWORD WINAPI None.PeerDistServerOpenContentInformationEx(_In_ PEERDIST_INSTANCE_HANDLE hPeerDist,_In_ DWORD cbContentIdentifier,_In_ PBYTE pContentIdentifier,ULONGLONG ullContentOffset None,ULONGLONG cbContentLength None,_In_ PEERDIST_RETRIEVAL_OPTIONS *pRetrievalOptions,_In_opt_ HANDLE hCompletionPort,_In_opt_ ULONG_PTR ulCompletionKey,_Out_ PPEERDIST_CONTENTINFO_HANDLE phContentInfo)
DWORD WINAPI None.RasCustomDialA(HINSTANCE hInstDll None,LPRASDIALEXTENSIONS lpRasDialExtensions None,LPCWSTR lpszPhonebook None,LPRASDIALPARAMS lpRasDialParams None,DWORD dwNotifierType None,LPVOID lpvNotifier None,LPHRASCONN lphRasConn None,DWORD dwFlags None)
DWORD WINAPI None.RasCustomDial(HINSTANCE hInstDll None,LPRASDIALEXTENSIONS lpRasDialExtensions None,LPCWSTR lpszPhonebook None,LPRASDIALPARAMS lpRasDialParams None,DWORD dwNotifierType None,LPVOID lpvNotifier None,LPHRASCONN lphRasConn None,DWORD dwFlags None)
DWORD WINAPI None.RasCustomDialW(HINSTANCE hInstDll None,LPRASDIALEXTENSIONS lpRasDialExtensions None,LPCWSTR lpszPhonebook None,LPRASDIALPARAMS lpRasDialParams None,DWORD dwNotifierType None,LPVOID lpvNotifier None,LPHRASCONN lphRasConn None,DWORD dwFlags None)
DWORD WINAPI None.RasCustomHangUp(HRASCONN hRasConn None)
DWORD WINAPI None.Release(_In_ RESID Resource)
DWORD WINAPI None.ResourceControl(_In_ RESID Resource,_In_ DWORD ControlCode,_In_opt_ PVOID InBuffer,_In_ DWORD InBufferSize,_Out_opt_ PVOID OutBuffer,_In_ DWORD OutBufferSize,_Out_ LPDWORD BytesReturned)
DWORD WINAPI None.ResourceTypeControl(_In_ LPCWSTR ResourceTypeName,_In_ DWORD ControlCode,_In_ PVOID InBuffer,_In_ DWORD InBufferSize,_Out_ PVOID OutBuffer,_In_ DWORD OutBufferSize,_Out_ LPDWORD BytesReturned)
DWORD WINAPI None.SetResourceStatus(_In_ RESOURCE_HANDLE ResourceHandle,_In_ PRESOURCE_STATUS ResourceStatus)
DWORD WINAPI None.SignalFailure(_In_ RESOURCE_HANDLE ResourceHandle,_In_ BOOL IsEmbeddedFailure,_In_ FAILURE_TYPE FailureType,_In_ DWORD ApplicationSpecificErrorCode)
DWORD WINAPI None.Startup(_In_ LPCWSTR ResourceType,_In_ DWORD MinVersionSupported,_In_ DWORD MaxVersionSupported,_In_ PSET_RESOURCE_STATUS_ROUTINE SetResourceStatus,_In_ PLOG_EVENT_ROUTINE LogEvent,_Out_ CLRES_FUNCTION_TABLE *FunctionTable)
DWORD WINAPI None.ThreadProc(_In_ LPVOID lpParameter)
DWORD WINAPI None.ThreadProc(LPVOID lpParameter None)
DWORD WINAPI None.WIMGetMessagecallbackCount(HANDLE hWim None)
DWORD WINAPI None.WorkerStartRoutine(_In_ PCLUS_WORKER pWorker,_In_ LPVOID lpThreadParameter)
DWORD WINAPI ntdsapi.DsAddSidHistoryA(_In_ HANDLE hDS,_In_ DWORD Flags,_In_ LPCTSTR SrcDomain,_In_ LPCTSTR SrcPrincipal,_In_ LPCTSTR SrcDomainController,_In_ RPC_AUTH_IDENTITY_HANDLE SrcDomainCreds,_In_ LPCTSTR DstDomain,_In_ LPCTSTR DstPrincipal)
DWORD WINAPI ntdsapi.DsAddSidHistory(_In_ HANDLE hDS,_In_ DWORD Flags,_In_ LPCTSTR SrcDomain,_In_ LPCTSTR SrcPrincipal,_In_ LPCTSTR SrcDomainController,_In_ RPC_AUTH_IDENTITY_HANDLE SrcDomainCreds,_In_ LPCTSTR DstDomain,_In_ LPCTSTR DstPrincipal)
DWORD WINAPI ntdsapi.DsAddSidHistoryW(_In_ HANDLE hDS,_In_ DWORD Flags,_In_ LPCTSTR SrcDomain,_In_ LPCTSTR SrcPrincipal,_In_ LPCTSTR SrcDomainController,_In_ RPC_AUTH_IDENTITY_HANDLE SrcDomainCreds,_In_ LPCTSTR DstDomain,_In_ LPCTSTR DstPrincipal)
DWORD WINAPI ntdsapi.DsBindToISTGA(_In_opt_ LPCTSTR SiteName,_Out_ HANDLE *phDS)
DWORD WINAPI ntdsapi.DsBindToISTG(_In_opt_ LPCTSTR SiteName,_Out_ HANDLE *phDS)
DWORD WINAPI ntdsapi.DsBindToISTGW(_In_opt_ LPCTSTR SiteName,_Out_ HANDLE *phDS)
DWORD WINAPI ntdsapi.DsGetRdnW(_Inout_ LPCWCH *ppDN,_Inout_ DWORD *pcDN,_Out_ LPCWCH *ppKey,_Out_ DWORD *pcKey,_Out_ LPCWCH *ppVal,_Out_ DWORD *pcVal)
DWORD WINAPI ntdsapi.DsInheritSecurityIdentityA(_In_ HANDLE hDS,_In_ DWORD Flags,_In_ LPCTSTR SrcPrincipal,_In_ LPCTSTR DstPrincipal)
DWORD WINAPI ntdsapi.DsInheritSecurityIdentity(_In_ HANDLE hDS,_In_ DWORD Flags,_In_ LPCTSTR SrcPrincipal,_In_ LPCTSTR DstPrincipal)
DWORD WINAPI ntdsapi.DsInheritSecurityIdentityW(_In_ HANDLE hDS,_In_ DWORD Flags,_In_ LPCTSTR SrcPrincipal,_In_ LPCTSTR DstPrincipal)
DWORD WINAPI ntdsapi.DsReplicaConsistencyCheck(_In_ HANDLE hDS,_In_ DS_KCC_TASKID TaskID,_In_ DWORD dwFlags)
DWORD WINAPI peerdist.PeerDistClientBlockRead(_In_ PEERDIST_INSTANCE_HANDLE hPeerDist,_In_ PEERDIST_CONTENT_HANDLE hContentHandle,DWORD cbMaxNumberOfBytesToRead None,_Inout_opt_ PBYTE pBuffer,DWORD dwTimeoutInMilliseconds None,_In_ LPOVERLAPPED lpOverlapped)
DWORD WINAPI peerdist.PeerDistClientCancelAsyncOperation(_In_ PEERDIST_INSTANCE_HANDLE hPeerDist,_In_ PEERDIST_CONTENT_HANDLE hContentHandle,_In_opt_ LPOVERLAPPED pOverlapped)
DWORD WINAPI peerdist.PeerDistClientCloseContent(_In_ PEERDIST_INSTANCE_HANDLE hPeerDist,_In_ PEERDIST_CONTENT_HANDLE hContentHandle)
DWORD WINAPI peerdist.PeerDistClientCompleteContentInformation(_In_ PEERDIST_INSTANCE_HANDLE hPeerDist,_In_ PEERDIST_CONTENT_HANDLE hContentHandle,_In_ LPOVERLAPPED lpOverlapped)
DWORD WINAPI peerdist.PeerDistClientFlushContent(_In_ PEERDIST_INSTANCE_HANDLE hPeerDist,_In_ PCPEERDIST_CONTENT_TAG pContentTag,_In_opt_ HANDLE hCompletionPort,_In_opt_ ULONG_PTR ulCompletionKey,_In_ LPOVERLAPPED lpOverlapped)
DWORD WINAPI peerdist.PeerDistClientGetInformationByHandle(_In_ PEERDIST_INSTANCE_HANDLE hPeerDist,_In_ PEERDIST_CONTENT_HANDLE hContentHandle,_In_ PEERDIST_CLIENT_INFO_BY_HANDLE_CLASS PeerDistClientInfoClass,DWORD dwBufferSize None,_Out_ LPVOID lpInformation)
DWORD WINAPI peerdist.PeerDistClientOpenContent(_In_ PEERDIST_INSTANCE_HANDLE hPeerDist,_In_ PCPEERDIST_CONTENT_TAG pContentTag,_In_opt_ HANDLE hCompletionPort,_In_opt_ ULONG_PTR ulCompletionKey,_Out_ PPEERDIST_CONTENT_HANDLE phContentHandle)
DWORD WINAPI peerdist.PeerDistClientStreamRead(_In_ PEERDIST_INSTANCE_HANDLE hPeerDist,_In_ PEERDIST_CONTENT_HANDLE hContentHandle,DWORD cbMaxNumberOfBytesToRead None,_Inout_opt_ PBYTE pBuffer,DWORD dwTimeoutInMilliseconds None,_In_ LPOVERLAPPED lpOverlapped)
DWORD WINAPI peerdist.PeerDistGetStatus(_In_ PEERDIST_INSTANCE_HANDLE hPeerDist,_Out_ PEERDIST_STATUS *pPeerDistStatus)
DWORD WINAPI peerdist.PeerDistRegisterForStatusChangeNotification(_In_ PEERDIST_INSTANCE_HANDLE hPeerDist,_In_opt_ HANDLE hCompletionPort,_In_opt_ ULONG_PTR ulCompletionKey,_In_ LPOVERLAPPED lpOverlapped,_Out_ PEERDIST_STATUS *pPeerDistStatus)
DWORD WINAPI peerdist.PeerDistServerCloseContentInformation(_In_ PEERDIST_INSTANCE_HANDLE hPeerDist,_In_ PEERDIST_CONTENT_HANDLE hContentInfo)
DWORD WINAPI peerdist.PeerDistServerCloseStreamHandle(_In_ PEERDIST_INSTANCE_HANDLE hPeerDist,_In_ PEERDIST_STREAM_HANDLE hStream)
DWORD WINAPI peerdist.PeerDistServerPublishCompleteStream(_In_ PEERDIST_INSTANCE_HANDLE hPeerDist,_In_ PEERDIST_STREAM_HANDLE hStream,_In_ LPOVERLAPPED lpOverlapped)
DWORD WINAPI peerdist.PeerDistServerRetrieveContentInformation(_In_ PEERDIST_INSTANCE_HANDLE hPeerDist,_In_ PEERDIST_CONTENTINFO_HANDLE hContentInfo,DWORD cbMaxNumberOfBytes None,_Inout_ PBYTE pBuffer,_In_ LPOVERLAPPED lpOverlapped)
DWORD WINAPI peerdist.PeerDistShutdown(_In_ PEERDIST_INSTANCE_HANDLE hPeerDist)
DWORD WINAPI peerdist.PeerDistStartup(_In_ DWORD dwVersionRequested,_Out_ PPEERDIST_INSTANCE_HANDLE phPeerDist,_Out_opt_ PDWORD pdwSupportedVersion)
DWORD WINAPI peerdist.PeerDistUnregisterForStatusChangeNotification(_In_ PEERDIST_INSTANCE_HANDLE hPeerDist)
DWORD WINAPI powrprof.DevicePowerSetDeviceState(_In_ LPCWSTR DeviceDescription,_In_ ULONG SetFlags,_In_ PCVOID SetData)
DWORD WINAPI powrprof.PowerGetActiveScheme(_In_opt_ HKEY UserRootPowerKey,_Out_ GUID **ActivePolicyGuid)
DWORD WINAPI powrprof.PowerImportPowerScheme(_In_ HKEY RootPowerKey,_In_ LPCWSTR ImportFileNamePath,_Inout_ GUID **DestinationSchemeGuid)
DWORD WINAPI powrprof.PowerRegisterSuspendResumeNotification(_In_ DWORD Flags,_In_ HANDLE Recipient,_Out_ PHPOWERNOTIFY RegistrationHandle)
DWORD WINAPI powrprof.PowerReplaceDefaultPowerSchemes(void None None)
DWORD WINAPI powrprof.PowerReportThermalEvent(_In_ PTHERMAL_EVENT Event)
DWORD WINAPI powrprof.PowerRestoreDefaultPowerSchemes(void None None)
DWORD WINAPI powrprof.PowerSettingRegisterNotification(_In_ LPCGUID SettingGuid,_In_ DWORD Flags,_In_ HANDLE Recipient,_Out_ PHPOWERNOTIFY RegistrationHandle)
DWORD WINAPI powrprof.PowerSettingUnregisterNotification(_Inout_ HPOWERNOTIFY RegistrationHandle)
DWORD WINAPI powrprof.PowerUnregisterSuspendResumeNotification(_Inout_ HPOWERNOTIFY RegistrationHandle)
DWORD WINAPI rasapi32.RasGetProjectionInfoEx(_In_ HRASCONN Hrasconn,_Inout_ PRAS_PROJECTION_INFO pRasProjection,_Inout_ LPDWORD lpdwSize)
DWORD WINAPI resutils.ClusterClearBackupStateForSharedVolume(_In_ LPCWSTR lpszVolumePathName)
DWORD WINAPI resutils.ClusterPrepareSharedVolumeForBackup(_In_ LPCWSTR lpszFileName,_Out_ LPWSTR lpszVolumePathName,_Inout_ LPDWORD lpcchVolumePathName,_Out_ LPWSTR lpszVolumeName,_Inout_ LPDWORD lpcchVolumeName)
DWORD WINAPI resutils.ResUtilEnumResourcesEx2(_In_ HCLUSTER hCluster,_In_opt_ HRESOURCE hSelf,_In_ LPCWSTR lpszResTypeName,_In_ LPRESOURCE_CALLBACK_EX pResCallBack,_In_ PVOID pParameter,_In_ DWORD dwDesiredAccess)
DWORD WINAPI resutils.ResUtilEnumResourcesEx(_In_ HCLUSTER hCluster,_In_opt_ HRESOURCE hSelf,_In_ LPCWSTR lpszResTypeName,_In_ LPRESOURCE_CALLBACK_EX pResCallBack,_In_ PVOID pParameter)
DWORD WINAPI resutils.ResUtilEnumResources(_In_ HRESOURCE hSelf,_In_ LPCWSTR lpszResTypeName,_In_ LPRESOURCE_CALLBACK pResCallBack,_In_ PVOID pParameter)
DWORD WINAPI resutils.ResUtilFreeEnvironment(_In_ LPVOID lpEnvironment)
DWORD WINAPI resutils.ResUtilGetCoreClusterResources(_In_ HCLUSTER hCluster,_Out_ HRESOURCE *phClusterNameResource,_Out_ HRESOURCE *phClusterIPAddressResource,_Out_ HRESOURCE *phClusterQuorumResource)
DWORD WINAPI resutils.ResUtilGetCoreClusterResources(_In_ HCLUSTER hCluster,_Out_ HRESOURCE *phClusterNameResource,_Out_ HRESOURCE *phClusterIPAddressResource,_Out_ HRESOURCE *phClusterQuorumResource,_In_ DWORD dwDesiredAccess)
DWORD WINAPI resutils.ResUtilGetResourceDependentIPAddressProps(_In_ HRESOURCE hResource,_Out_ LPWSTR pszAddress,_Inout_ DWORD *pcchAddress,_Out_ LPWSTR pszSubnetMask,_Inout_ DWORD *pcchSubnetMask,_Out_ LPWSTR pszNetwork,_Inout_ DWORD *pcchNetwork)
DWORD WINAPI resutils.ResUtilRemoveResourceServiceEnvironment(_In_ LPCWSTR pszServiceName,_In_ PLOG_EVENT_ROUTINE pfnLogEvent,_In_ RESOURCE_HANDLE hResourceHandle)
DWORD WINAPI resutils.ResUtilSetQwordValue(_In_ HKEY hkeyClusterKey,_In_ LPCWSTR pszValueName,_In_ ULONGLONG qwNewValue,_Inout_opt_ PULONGLONG pqwOutValue)
DWORD WINAPI resutils.ResUtilSetResourceServiceEnvironment(_In_ LPCWSTR pszServiceName,_In_ HRESOURCE hResource,_In_ PLOG_EVENT_ROUTINE pfnLogEvent,_In_ RESOURCE_HANDLE hResourceHandle)
DWORD WINAPI resutils.ResUtilSetResourceServiceStartParameters(_In_ LPCWSTR pszServiceName,_In_ SC_HANDLE schSCMHandle,_Inout_ LPSC_HANDLE phService,_In_ DWORD dwDesiredAccess,_In_ PLOG_EVENT_ROUTINE pfnLogEvent,_In_ RESOURCE_HANDLE hResourceHandle)
DWORD WINAPI resutils.ResUtilSetResourceServiceStartParameters(_In_ LPCWSTR pszServiceName,_In_ SC_HANDLE schSCMHandle,_Inout_ LPSC_HANDLE phService,_In_ PLOG_EVENT_ROUTINE pfnLogEvent,_In_ RESOURCE_HANDLE hResourceHandle)
DWORD WINAPI resutils.ResUtilStartResourceService(_In_ LPCWSTR pszServiceName,_Out_ LPSC_HANDLE phServiceHandle)
DWORD WINAPI resutils.ResUtilStopResourceService(_In_ LPCWSTR pszServiceName)
DWORD WINAPI resutils.ResUtilStopService(_In_ SC_HANDLE hServiceHandle)
DWORD WINAPI resutils.ResUtilVerifyResourceService(_In_ LPCWSTR pszServiceName)
DWORD WINAPI rstrtmgr.RmCancelCurrentTask(_In_ DWORD dwSessionHandle)
DWORD WINAPI rstrtmgr.RmEndSession(_In_ DWORD dwSessionHandle)
DWORD WINAPI rstrtmgr.RmRemoveFilter(_In_ DWORD dwSessionHandle,_In_opt_ LPCWSTR strFilename,_In_opt_ RM_UNIQUE_PROCESS *Application,_In_opt_ LPCWSTR strShortServiceName)
DWORD WINAPI rstrtmgr.RmShutdown(_In_ DWORD dwSessionHandle,_In_ ULONG lActionFlags,_In_opt_ RM_WRITE_STATUS_CALLBACK fnStatus)
DWORD WINAPI sechost.SubscribeServiceChangeNotifications(_In_ SC_HANDLE hService,_In_ SC_EVENT_TYPE eEventType,_In_ PSC_NOTIFICATION_CALLBACK pCallback,_In_opt_ PVOID pCallbackContext,_Out_ PSC_NOTIFICATION_REGISTRATION *pSubscription)
DWORD WINAPI shlwapi.SHGetAssocKeys(_In_ IQueryAssociations *pqa,_Out_ HKEY *rgKeys,DWORD cKeys None)
DWORD WINAPI shlwapi.ThreadProc(LPVOID pData None)
DWORD WINAPI user32.CharLowerBuffA(_Inout_ LPTSTR lpsz,_In_ DWORD cchLength)
DWORD WINAPI user32.CharLowerBuff(_Inout_ LPTSTR lpsz,_In_ DWORD cchLength)
DWORD WINAPI user32.CharLowerBuffW(_Inout_ LPTSTR lpsz,_In_ DWORD cchLength)
DWORD WINAPI user32.CharUpperBuffA(_Inout_ LPTSTR lpsz,_In_ DWORD cchLength)
DWORD WINAPI user32.CharUpperBuff(_Inout_ LPTSTR lpsz,_In_ DWORD cchLength)
DWORD WINAPI user32.CharUpperBuffW(_Inout_ LPTSTR lpsz,_In_ DWORD cchLength)
DWORD WINAPI user32.CheckMenuItem(_In_ HMENU hmenu,_In_ UINT uIDCheckItem,_In_ UINT uCheck)
DWORD WINAPI user32.DdeGetData(_In_ HDDEDATA hData,_Out_opt_ LPBYTE pDst,_In_ DWORD cbMax,_In_ DWORD cbOff)
DWORD WINAPI user32.DdeQueryStringA(_In_ DWORD idInst,_In_ HSZ hsz,_Out_opt_ LPTSTR psz,_In_ DWORD cchMax,_In_ int iCodePage)
DWORD WINAPI user32.DdeQueryString(_In_ DWORD idInst,_In_ HSZ hsz,_Out_opt_ LPTSTR psz,_In_ DWORD cchMax,_In_ int iCodePage)
DWORD WINAPI user32.DdeQueryStringW(_In_ DWORD idInst,_In_ HSZ hsz,_Out_opt_ LPTSTR psz,_In_ DWORD cchMax,_In_ int iCodePage)
DWORD WINAPI user32.GetGuiResources(_In_ HANDLE hProcess,_In_ DWORD uiFlags)
DWORD WINAPI user32.GetMessagePos(void None None)
DWORD WINAPI user32.GetQueueStatus(_In_ UINT flags)
DWORD WINAPI user32.GetSysColor(_In_ int nIndex)
DWORD WINAPI user32.GetWindowThreadProcessId(_In_ HWND hWnd,_Out_opt_ LPDWORD lpdwProcessId)
DWORD WINAPI user32.InSendMessageEx(_Reserved_ LPVOID lpReserved)
DWORD WINAPI user32.OemKeyScan(_In_ WORD wOemChar)
DWORD WINAPI user32.SetClassLongA(_In_ HWND hWnd,_In_ int nIndex,_In_ LONG dwNewLong)
DWORD WINAPI user32.SetClassLong(_In_ HWND hWnd,_In_ int nIndex,_In_ LONG dwNewLong)
DWORD WINAPI user32.SetClassLongW(_In_ HWND hWnd,_In_ int nIndex,_In_ LONG dwNewLong)
DWORD WINAPI user32.WaitForInputIdle(_In_ HANDLE hProcess,_In_ DWORD dwMilliseconds)
DWORD WINAPI virtdisk.AddVirtualDiskParent(_In_ HANDLE VirtualDiskHandle,_In_ PCWSTR ParentPath)
DWORD WINAPI virtdisk.BreakMirrorVirtualDisk(_In_ HANDLE VirtualDiskHandle)
DWORD WINAPI virtdisk.EnumerateVirtualDiskMetadata(_In_ HANDLE VirtualDiskHandle,_Inout_ PULONG NumberOfItems,_Out_ GUID *Items)
DWORD WINAPI virtdisk.MirrorVirtualDisk(_In_ HANDLE VirtualDiskHandle,_In_ MIRROR_VIRTUAL_DISK_FLAG Flags,_In_ PMIRROR_VIRTUAL_DISK_PARAMETERS Parameters,_In_ LPOVERLAPPED Overlapped)
DWORD WINAPI virtdisk.ResizeVirtualDisk(_In_ HANDLE VirtualDiskHandle,_In_ RESIZE_VIRTUAL_DISK_FLAG Flags,_In_ PRESIZE_VIRTUAL_DISK_PARAMETERS Parameters,_In_opt_ LPOVERLAPPED Overlapped)
DWORD WINAPI wcmapi.WcmSetProfileList(_In_ WCM_PROFILE_INFO_LIST *pProfileList,_In_ DWORD dwPosition,_In_ BOOL fIgnoreUnknownProfiles,_Reserved_ PVOID pReserved)
DWORD WINAPI wevtapi.EvtGetExtendedStatus(_In_ DWORD BufferSize,_In_ LPWSTR Buffer,_Out_ PDWORD BufferUsed)
DWORD WINAPI wifidisplay.WFDCloseDisplaySinkSession(_In_ HANDLE hSessionHandle)
DWORD WINAPI wifidisplay.WFDSetDisplaySinkPersistedGroupIDList(_In_ UINT32 cGroupIDList,_In_ DOT11_WFD_GROUP_ID *pGroupIDList)
DWORD WINAPI wifidisplay.WFDStartDisplaySink(_In_ USHORT uDeviceCategory,_In_ USHORT uSubCategory,_In_opt_ PVOID pCallbackContext,_In_ WFD_DISPLAY_SINK_NOTIFICATION_CALLBACK *pfnCallback)
DWORD WINAPI winhttp.WinHttpGetProxyResult(_In_ HINTERNET hResolver,_Out_ WINHTTP_PROXY_RESULT *pProxyResult)
DWORD WINAPI winhttp.WinHttpWebSocketClose(_In_ HINTERNET hWebSocket,_In_ USHORT usStatus,_In_opt_ PVOID pvReason,_In_ DWORD dwReasonLength)
DWORD WINAPI winhttp.WinHttpWebSocketQueryCloseStatus(_In_ HINTERNET hWebSocket,_Out_ USHORT *pusStatus,_Out_ PVOID pvReason,_In_ DWORD dwReasonLength,_Out_ DWORD *pdwReasonLengthConsumed)
DWORD WINAPI winhttp.WinHttpWebSocketReceive(_In_ HINTERNET hWebSocket,_Out_ PVOID pvBuffer,_In_ DWORD dwBufferLength,_Out_ DWORD *pdwBytesRead,_Out_ WINHTTP_WEB_SOCKET_BUFFER_TYPE *peBufferType)
DWORD WINAPI winhttp.WinHttpWebSocketSend(_In_ HINTERNET hWebSocket,_In_ WINHTTP_WEB_SOCKET_BUFFER_TYPE eBufferType,_In_ PVOID pvBuffer,_In_ DWORD dwBufferLength)
DWORD WINAPI winhttp.WinHttpWebSocketShutdown(_In_ HINTERNET hWebSocket,_In_ USHORT usStatus,_In_opt_ PVOID pvReason,_In_ DWORD dwReasonLength)
DWORD WINAPI wininet.PrivacyGetZonePreferenceW(_In_ DWORD dwZone,_In_ DWORD dwType,_Out_opt_ LPDWORD pdwTemplate,_Out_opt_ LPWSTR *pszBuffer,_Inout_opt_ LPDWORD pdwBufferLength)
DWORD WINAPI wininet.PrivacySetZonePreferenceW(_In_ DWORD dwZone,_In_ DWORD dwType,_In_ DWORD dwTemplate,_In_opt_ LPCWSTR pszPreference)
DWORD WINAPI wlanapi.WFDCancelOpenSession(_In_ PHANDLE hSessionHandle)
DWORD WINAPI wlanapi.WFDCloseHandle(_In_ HANDLE hClientHandle)
DWORD WINAPI wlanapi.WFDCloseSession(_In_ PHANDLE hSessionHandle)
DWORD WINAPI wlanapi.WFDOpenHandle(_In_ DWORD dwClientVersion,_Out_ PDWORD pdwNegotiatedVersion,_Out_ PHANDLE phClientHandle)
DWORD WINAPI wlanapi.WFDOpenLegacySession(HANDLE hClientHandle None,PDOT11_MAC_ADDRESS pLegacyMacAddress None,HANDLE phSessionHandle None,GUID pGuidSessionInterface None)
DWORD WINAPI wlanapi.WFDStartOpenSession(_In_ HANDLE hClientHandle,_In_ PDOT11_MAC_ADDRESS pDeviceAddress,_In_opt_ PVOID pvContext,_In_ WFD_OPEN_SESSION_COMPLETE_CALLBACK pfnCallback,_Out_ PHANDLE phSessionHandle)
DWORD WINAPI wlanapi.WFDUpdateDeviceVisibility(PDOT11_MAC_ADDRESS pDeviceAddress None)
DWORD WINAPI wlanapi.WlanCloseHandle(_In_ HANDLE hClientHandle,_Reserved_ PVOID pReserved)
DWORD WINAPI wlanapi.WlanEnumInterfaces(_In_ HANDLE hClientHandle,_Reserved_ PVOID pReserved,_Out_ PWLAN_INTERFACE_INFO_LIST *ppInterfaceList)
DWORD WINAPI wlanapi.WlanGetFilterList(_In_ HANDLE hClientHandle,_In_ WLAN_FILTER_LIST_TYPE wlanFilterListType,_Reserved_ PVOID pReserved,_Out_ PDOT11_NETWORK_LIST *ppNetworkList)
DWORD WINAPI wlanapi.WlanGetSecuritySettings(_In_ HANDLE hClientHandle,_In_ WLAN_SECURABLE_OBJECT SecurableObject,_Out_opt_ PWLAN_OPCODE_VALUE_TYPE pValueType,_Out_ LPWSTR *pstrCurrentSDDL,_Out_ PDWORD pdwGrantedAccess)
DWORD WINAPI wlanapi.WlanHostedNetworkForceStart(_In_ HANDLE hClientHandle,_Out_opt_ PWLAN_HOSTED_NETWORK_REASON pFailReason,_Reserved_ PVOID pvReserved)
DWORD WINAPI wlanapi.WlanHostedNetworkForceStop(_In_ HANDLE hClientHandle,_Out_opt_ PWLAN_HOSTED_NETWORK_REASON pFailReason,_Reserved_ PVOID pvReserved)
DWORD WINAPI wlanapi.WlanHostedNetworkInitSettings(_In_ HANDLE hClientHandle,_Out_opt_ PWLAN_HOSTED_NETWORK_REASON pFailReason,_Reserved_ PVOID pvReserved)
DWORD WINAPI wlanapi.WlanHostedNetworkQueryProperty(_In_ HANDLE hClientHandle,_In_ WLAN_HOSTED_NETWORK_OPCODE OpCode,_Out_ PDWORD pdwDataSize,_Out_ PVOID *ppvData,_Out_ PWLAN_OPCODE_VALUE_TYPE *pWlanOpcodeValueType,_Reserved_ PVOID pvReserved)
DWORD WINAPI wlanapi.WlanHostedNetworkQuerySecondaryKey(_In_ HANDLE hClientHandle,_Out_ DWORD pdwKeyLength,_Out_ PUCHAR *ppucKeyData,_Out_ PBOOL pbIsPassPhrase,_Out_ PBOOL pbPersistent,_Out_opt_ PWLAN_HOSTED_NETWORK_REASON pFailReason,_Reserved_ PVOID pvReserved)
DWORD WINAPI wlanapi.WlanHostedNetworkQueryStatus(_In_ HANDLE hClientHandle,_Out_ PWLAN_HOSTED_NETWORK_STATUS *ppWlanHostedNetworkStatus,_Reserved_ PVOID pvReserved)
DWORD WINAPI wlanapi.WlanHostedNetworkRefreshSecuritySettings(_In_ HANDLE hClientHandle,_Out_opt_ PWLAN_HOSTED_NETWORK_REASON pFailReason,_Reserved_ PVOID pvReserved)
DWORD WINAPI wlanapi.WlanHostedNetworkSetProperty(_In_ HANDLE hClientHandle,_In_ WLAN_HOSTED_NETWORK_OPCODE OpCode,_In_ DWORD dwDataSize,_In_ PVOID pvData,_Out_opt_ PWLAN_HOSTED_NETWORK_REASON pFailReason,_Reserved_ PVOID pvReserved)
DWORD WINAPI wlanapi.WlanHostedNetworkSetSecondaryKey(_In_ HANDLE hClientHandle,_In_ DWORD dwKeyLength,_In_ PUCHAR pucKeyData,_In_ BOOL bIsPassPhrase,_In_ BOOL bPersistent,_Out_opt_ PWLAN_HOSTED_NETWORK_REASON pFailReason,_Reserved_ PVOID pvReserved)
DWORD WINAPI wlanapi.WlanHostedNetworkStartUsing(_In_ HANDLE hClientHandle,_Out_opt_ PWLAN_HOSTED_NETWORK_REASON pFailReason,_Reserved_ PVOID pvReserved)
DWORD WINAPI wlanapi.WlanHostedNetworkStopUsing(_In_ HANDLE hClientHandle,_Out_opt_ PWLAN_HOSTED_NETWORK_REASON pFailReason,_Reserved_ PVOID pvReserved)
DWORD WINAPI wlanapi.WlanOpenHandle(_In_ DWORD dwClientVersion,_Reserved_ PVOID pReserved,_Out_ PDWORD pdwNegotiatedVersion,_Out_ PHANDLE phClientHandle)
DWORD WINAPI wlanapi.WlanQueryAutoConfigParameter(_In_ HANDLE hClientHandle,_In_ WLAN_AUTOCONF_OPCODE OpCode,_Reserved_ PVOID pReserved,_Out_ PDWORD pdwDataSize,_Out_ PVOID ppData,_Out_opt_ PWLAN_OPCODE_VALUE_TYPE pWlanOpcodeValueType)
DWORD WINAPI wlanapi.WlanRegisterNotification(_In_ HANDLE hClientHandle,_In_ DWORD dwNotifSource,_In_ BOOL bIgnoreDuplicate,_In_opt_ WLAN_NOTIFICATION_CALLBACK funcCallback,_In_opt_ PVOID pCallbackContext,_Reserved_ PVOID pReserved,_Out_opt_ PDWORD pdwPrevNotifSource)
DWORD WINAPI wlanapi.WlanRegisterVirtualStationNotification(_In_ HANDLE hClientHandle,_In_ BOOL bRegister,_Reserved_ PVOID pvReserved)
DWORD WINAPI wlanapi.WlanSetSecuritySettings(_In_ HANDLE hClientHandle,_In_ WLAN_SECURABLE_OBJECT SecurableObject,_In_ LPCWSTR strModifiedSDDL)
DWORD WINAPI wlanui.WlanUIEditProfile(_In_ DWORD dwClientVersion,_In_ LPCWSTR wstrProfileName,_In_ GUID *pInterfaceGuid,_In_ HWND hWnd,_In_ WL_DISPLAY_PAGES wlStartPage,PVOID pReserved None,_Out_ PWLAN_REASON_CODE *pWlanReasonCode)
DWORD WINAPI xinput1_4.XInputGetKeystroke(DWORD dwUserIndex None,DWORD dwReserved None,PXINPUT_KEYSTROKE pKeystroke None)
DWORD WINAPI xinput9_1_0.XInputGetDSoundAudioDeviceGuids(DWORD dwUserIndex None,GUID* pDSoundRenderGuid None,GUID* pDSoundCaptureGuid None)
DXGI_FORMAT_R32G32B32A32_FLOAT None None.DXGI_FORMAT_B4G4R4A4(optional None None)
DXGI_FORMAT STDAPI mfplat.MFMapDX9FormatToDXGIFormat(_In_ DWORD dx9)
EC_HANDLE WINAPI wecapi.EcOpenSubscription(_In_ LPCWSTR SubscriptionName,_In_ DWORD AccessMask,_In_ DWORD Flags)
EDITWORDBREAKPROC None None.Edit_GetWordBreakProc(HWND hwndCtl None)
EFaultRepRetVal APIENTRY faultrep.ReportFault(_In_ LPEXCEPTION_POINTERS pep,_In_ DWORD dwMode)
else None None.if(majorType == MFMediaType_Audio)
Enter your None.selection(1 None None,2 None None,or 3 None)
errno_t None None._access_s(const char *path,int mode None)
errno_t None None._chsize_s(int fd None,__int64 size None)
errno_t None None.clearerr_s(FILE *stream None)
errno_t None None._ecvt_s(char * _Buffer,size_t _SizeInBytes None,double _Value None,int _Count None,int *_Dec None,int *_Sign None)
errno_t None None._fcvt_s(char* buffer None,size_t sizeInBytes None,double value None,int count None,int *dec None,int *sign None)
errno_t None None.fopen_s(FILE** pFile None,const char *filename,const char *mode)
errno_t None None.freopen(FILE** pFile None,const char *path,const char *mode,FILE *stream None)
errno_t None None._get_doserrno(int * pValue)
errno_t None None.getenv_s(size_t *pReturnValue None,char* buffer None,size_t numberOfElements None,const char *varname)
errno_t None None._get_errno(int * pValue)
errno_t None None._get_fmode(int * pmode)
errno_t None None._get_tzname(size_t* pReturnValue None,char* timeZoneName None,size_t sizeInBytes None,int index None)
errno_t None None._itoa_s(int value None,char *buffer None,size_t sizeInCharacters None,int radix None)
errno_t None None._ltoa_s(long value None,char *str None,size_t sizeOfstr None,int radix None)
errno_t None None._mbsnbset_s(unsigned char *str,size_t size None,unsigned int c,size_t count None)
errno_t None None.mbstowcs_s(size_t *pReturnValue None,wchar_t *wcstr None,size_t sizeInWords None,const char *mbstr,size_t count None)
errno_t None None._putenv_s(const char *name,const char *value)
errno_t None None._set_doserrno(int value None)
errno_t None None._set_errno(int value None)
errno_t None None._set_fmode(int mode None)
errno_t None None._sopen_s(int* pfh None,const char *filename,int oflag None,int shflag None,int pmode None)
errno_t None None.strcat_s(char *strDestination None,size_t numberOfElements None,const char *strSource)
errno_t None None.strcpy_s(char *strDestination None,size_t numberOfElements None,const char *strSource)
errno_t None None.strerror_s(char *buffer None,size_t numberOfElements None,int errnum None)
errno_t None None._strlwr_s(char *str None,size_t numberOfElements None)
errno_t None None.strncat_s(char *strDest None,size_t numberOfElements None,const char *strSource,size_t count None)
errno_t None None.strncpy_s(char *strDest None,size_t numberOfElements None,const char *strSource,size_t count None)
errno_t None None._strset_s(char *str None,size_t numberOfElements None,int c None)
errno_t None None._strupr_s(char *str None,size_t numberOfElements None)
errno_t None None.tmpfile_s(FILE** pFilePtr None)
errno_t None None.tmpnam_s(char * str,size_t sizeInChars None)
errno_t None None._umask_s(int mode None,int * pOldMode)
errno_t None None.wcstombs_s(size_t *pReturnValue None,char *mbstr None,size_t sizeInBytes None,const wchar_t *wcstr,size_t count None)
errno_t None None.wctomb_s(int *pRetValue None,char *mbchar None,size_t sizeInBytes None,wchar_t wchar None)
error_t None None._get_daylight(int* hours None)
error_t None None._get_dstbias(int* seconds None)
error_t None None._get_timezone(long* seconds None)
EventDescriptorCollection None None.GetEvents(Object component None)
EVT_HANDLE WINAPI wevtapi.EvtCreateBookmark(_In_opt_ LPCWSTR BookmarkXml)
EVT_HANDLE WINAPI wevtapi.EvtCreateRenderContext(_In_ DWORD ValuePathsCount,_In_ LPCWSTR *ValuePaths,_In_ DWORD Flags)
EVT_HANDLE WINAPI wevtapi.EvtNextEventMetadata(_In_ EVT_HANDLE EventMetadataEnum,_In_ DWORD Flags)
EVT_HANDLE WINAPI wevtapi.EvtOpenChannelConfig(_In_ EVT_HANDLE Session,_In_ LPCWSTR ChannelPath,_In_ DWORD Flags)
EVT_HANDLE WINAPI wevtapi.EvtOpenChannelEnum(_In_ EVT_HANDLE Session,_In_ DWORD Flags)
EVT_HANDLE WINAPI wevtapi.EvtOpenEventMetadataEnum(_In_ EVT_HANDLE PublisherMetadata,_In_ DWORD Flags)
EVT_HANDLE WINAPI wevtapi.EvtOpenLog(_In_ EVT_HANDLE Session,_In_ LPCWSTR Path,_In_ DWORD Flags)
EVT_HANDLE WINAPI wevtapi.EvtOpenPublisherEnum(_In_ EVT_HANDLE Session,_In_ DWORD Flags)
EVT_HANDLE WINAPI wevtapi.EvtOpenPublisherMetadata(_In_opt_ EVT_HANDLE Session,_In_ LPCWSTR PublisherIdentity,_In_opt_ LPCWSTR LogFilePath,_In_ LCID Locale,_In_ DWORD Flags)
EVT_HANDLE WINAPI wevtapi.EvtOpenSession(_In_ EVT_LOGIN_CLASS LoginClass,_In_ PVOID Login,_In_ DWORD Timeout,_In_ DWORD Flags)
EVT_HANDLE WINAPI wevtapi.EvtQuery(_In_ EVT_HANDLE Session,_In_ LPCWSTR Path,_In_ LPCWSTR Query,_In_ DWORD Flags)
EVT_HANDLE WINAPI wevtapi.EvtSubscribe(_In_ EVT_HANDLE Session,_In_ HANDLE SignalEvent,_In_ LPCWSTR ChannelPath,_In_ LPCWSTR Query,_In_ EVT_HANDLE Bookmark,_In_ PVOID context,_In_ EVT_SUBSCRIBE_CALLBACK Callback,_In_ DWORD Flags)
EXECUTION_STATE WINAPI kernel32.SetThreadExecutionState(_In_ EXECUTION_STATE esFlags)
export float None.identity(float x None)
FARPROC WINAPI kernel32.GetProcAddress(_In_ HMODULE hModule,_In_ LPCSTR lpProcName)
FieldInfo None None.GetField(string name None,BindingFlags bindingAttr None)
FieldInfo None None.GetField(String name None,BindingFlags bindingAttr None)
FlagsAttribute None None.ComVisibleAttribute(false None None)
FlagsAttribute None None.ComVisibleAttribute(true None None)
float2 None None.GetSamplePosition(in int sampleindex)
float3 None None.myCoord(1.0f None None,1.4f None None,2.2f None None)
float __inline None.ntohf(unsigned __int32 value)
float None None.ddx_coarse(in float value)
float None None.ddx_fine(in float value)
float None None.ddy_coarse(in float value)
float None None.ddy_fine(in float value)
float None None.f16tof32(in uint value)
FLOAT None None.GetResourceMinLOD([in] ID3D11Resource *pResource)
float None None.ToSingle(IFormatProvider provider None)
FLOAT WINAPI d2d1.D2D1Tan(_In_ FLOAT angle)
FLOAT WINAPI d2d1.D2D1Vec3Length(_In_ FLOAT x,_In_ FLOAT y,_In_ FLOAT z)
FLT_PREOP_CALLBACK_STATUS None None.FltCheckOplock(_In_ POPLOCK Oplock,_In_ PFLT_CALLBACK_DATA CallbackData,_In_opt_ PVOID Context,_In_opt_ PFLTOPLOCK_WAIT_COMPLETE_ROUTINE WaitCompletionRoutine,_In_opt_ PFLTOPLOCK_PREPOST_CALLBACKDATA_ROUTINE PrePostCallbackDataRoutine)
FLT_PREOP_CALLBACK_STATUS None None.FltOplockFsctrl(_In_ POPLOCK Oplock,_In_ PFLT_CALLBACK_DATA CallbackData,_In_ ULONG OpenCount)
FLT_PREOP_CALLBACK_STATUS None None.SwapPreReadBuffers(_Inout_ PFLT_CALLBACK_DATA Data,_In_ PCFLT_RELATED_OBJECTS FltObjects,_Flt_CompletionContext_Outptr_ PVOID *CompletionContext)
FORCEINLINE HANDLE None.GetCurrentProcessToken(void None None)
FORCEINLINE HANDLE None.GetCurrentThreadEffectiveToken(void None None)
FORCEINLINE HANDLE None.GetCurrentThreadToken(void None None)
FORCEINLINE void None.UCM_CONNECTOR_CONFIG_INIT(_Out_ PUCM_CONNECTOR_CONFIG Config,_In_ ULONGULONG ConnectorId)
FORCEINLINE void None.UCM_CONNECTOR_TYPEC_ATTACH_PARAMS_INIT(_Out_ PUCM_CONNECTOR_TYPEC_ATTACH_PARAMS Config,_In_ UCM_TYPE_C_PORT_STATE PortPartnerType)
FORCEINLINE void None.UDECX_USB_DEVICE_PLUG_IN_OPTIONS_INIT(_Out_ PUDECX_USB_DEVICE_PLUG_IN_OPTIONS Options)
FORCEINLINE void None.UDECX_USB_ENDPOINT_CALLBACKS_INIT(_Out_ PUDECX_USB_ENDPOINT_CALLBACKS Callbacks)
function None None.anchor(anchorString : String)
function None None.Array([size : int])
function None None.Boolean([boolValue : boolean])
function None None.BreakTest(breakpoint None None)
function None None.Car(color None None,make None None,model None None)
Function None None.CountFeeds(f None None)
function None None.fontcolor(colorVal : String)
function None None.getAge(age None None)
function None None.getConnectionProfileInfo(connectionProfile None None)
function None None.GetFeed(feedUri None None)
function None None.GetObject(class : String)
function None None.GetQuantity(productID None None,elemToUpdate None None,productLabelElem None None,buttonElem None None)
function None None.getText(strURL None None)
function None None.InitializeRequest(sender None None,args None None)
function None None.isNaN(number : Number)
function None None.join([separator : String])
function None None.link(linkstring : String)
function None None.myfunction(arg1 None None,arg2 None None)
function None None.onDataRequested(eventArgs None None)
function None None.onPhotoCaptured(eventArgs None None)
function None None.onScaleEvent(vScale None None)
function None None.onSilverlightError(sender None None,args None None)
function None None.onxform(code None None,doc None None)
function None None.ReceiveServerData(arg None None,context None None)
function None None.RegExpMultilineDemo(flag None None)
function None None.RegExpPropDemo(flag None None)
Function None None.ScopeNodeHasChild(ScopeNamespace None None,SampleNode None None)
function None None.setindex(idx None None)
function None None.setMilliseconds(numMilli : Number)
function None None.square(x : int)
function None None.String([stringLiteral : String])
function None None.test(name None None,address None None)
function None None.toExponential([fractionDigits : Number])
function None None.toPrecision([precision : Number])
function None None.toString([radix : Number])
Function None None.WMIDateStringToDate(dtmInstallDate None None)
function None shell32.EnumUsers(Volume_Label None None)
Function None shell32.Find(dqc None None,name None None)
fVector None None.dst(in fVector src0,in fVector src1)
GEOID None kernel32.GetUserGeoID(_In_ GEOCLASS GeoClass)
GROUPID None wininet.CreateUrlCacheGroup(_In_ DWORD dwFlags,_Reserved_ LPVOID lpReserved)
HANDLE None advapi32.OpenBackupEventLogA(_In_ LPCTSTR lpUNCServerName,_In_ LPCTSTR lpFileName)
HANDLE None advapi32.OpenBackupEventLog(_In_ LPCTSTR lpUNCServerName,_In_ LPCTSTR lpFileName)
HANDLE None advapi32.OpenBackupEventLogW(_In_ LPCTSTR lpUNCServerName,_In_ LPCTSTR lpFileName)
HANDLE None advapi32.OpenEventLogA(_In_ LPCTSTR lpUNCServerName,_In_ LPCTSTR lpSourceName)
HANDLE None advapi32.OpenEventLog(_In_ LPCTSTR lpUNCServerName,_In_ LPCTSTR lpSourceName)
HANDLE None advapi32.OpenEventLogW(_In_ LPCTSTR lpUNCServerName,_In_ LPCTSTR lpSourceName)
HANDLE None iphlpapi.Icmp6CreateFile(void None None)
HANDLE None iphlpapi.IcmpCreateFile(void None None)
HANDLE None kernel32.CreateActCtxA(_Inout_ PACTCTX pActCtx)
HANDLE None kernel32.CreateActCtx(_Inout_ PACTCTX pActCtx)
HANDLE None kernel32.CreateActCtxW(_Inout_ PACTCTX pActCtx)
HANDLE None kernel32.CreateRemoteThreadEx(_In_ HANDLE hProcess,_In_opt_ LPSECURITY_ATTRIBUTES lpThreadAttributes,_In_ SIZE_T dwStackSize,_In_ LPTHREAD_START_ROUTINE lpStartAddress,_In_opt_ LPVOID lpParameter,_In_ DWORD dwCreationFlags,_In_opt_ LPPROC_THREAD_ATTRIBUTE_LIST lpAttributeList,_Out_opt_ LPDWORD lpThreadId)
HANDLE None kernel32.PowerCreateRequest(_In_ PREASON_CONTEXT Context)
HANDLE None None.AddPrinterA(_In_ LPTSTR *pName,_In_ DWORD Level,_In_ LPBYTE pPrinter)
HANDLE None None.AddPrinter(_In_ LPTSTR *pName,_In_ DWORD Level,_In_ LPBYTE pPrinter)
HANDLE None None.AddPrinterW(_In_ LPTSTR *pName,_In_ DWORD Level,_In_ LPBYTE pPrinter)
HANDLE None None.BRUSHOBJ_hGetColorTransform(BRUSHOBJ *pbo None)
HANDLE None None.CommitSpoolData(_In_ HANDLE hPrinter,_In_ HANDLE hSpoolFile,DWORD cbCommit None)
HANDLE None None.ConnectToPrinterDlg(_In_ HWND hwnd,_In_ DWORD Flags)
HANDLE None None.CreateThread(_In_ SEC_ATTRS SecurityAttributes,_In_ ULONG StackSize,_In_ SEC_THREAD_START StartFunction,_In_ PVOID ThreadParameter,_In_ ULONG CreationFlags,_Out_ PULONG ThreadId)
HANDLE None None.DrvIcmCreateColorTransform(_In_ DHPDEV dhpdev,_In_ LPLOGCOLORSPACEW pLogColorSpace,_In_opt_ PVOID pvSourceProfile,_In_ ULONG cjSourceProfile,_In_ PVOID pvDestProfile,_In_ ULONG cjDestProfile,_In_opt_ PVOID pvTargetProfile,_In_ ULONG cjTargetProfile,_In_ DWORD dwReserved)
HANDLE None None.GetSpoolFileHandleA(_In_ HANDLE hPrinter)
HANDLE None None.GetSpoolFileHandle(_In_ HANDLE hPrinter)
HANDLE None None.GetSpoolFileHandleW(_In_ HANDLE hPrinter)
HANDLE None None.ICImageCompress(HIC hic None,UINT uiFlags None,LPBITMAPINFO lpbiIn None,LPVOID lpBits None,LPBITMAPINFO lpbiOut None,LONG lQuality None,LONG * plSize)
HANDLE None None.ICImageDecompress(HIC hic None,UINT uiFlags None,LPBITMAPINFO lpbiIn None,LPVOID lpBits None,LPBITMAPINFO lpbiOut None)
HANDLE None None.mciGetCreatorTask(MCIDEVICEID IDDevice None)
HANDLE None None.MmSecureVirtualMemory(_In_ PVOID Address,_In_ SIZE_T Size,_In_ ULONG ProbeMode)
HANDLE None None.RegisterNotification(_In_ SEC_THREAD_START StartFunction,_In_ PVOID Parameter,_In_ ULONG NotificationType,_In_ ULONG NotificationClass,_In_ ULONG NotificationFlags,_In_ ULONG IntervalMinutes,_In_ HANDLE WaitEvent)
HANDLE None None.WdfIoTargetWdmGetTargetFileHandle(_In_ WDFIOTARGET IoTarget)
HANDLE None None.WdfRegistryWdmGetHandle(_In_ WDFKEY Key)
HANDLE None None.WIMLoadImage(HANDLE hWim None,DWORD dwImageIndex None)
HANDLE None None.XLATEOBJ_hGetColorTransform(XLATEOBJ *pxlo None)
HANDLE None ole32.OleDuplicateData(_In_ HANDLE hSrc,_In_ CLIPFORMAT cfFormat,_In_ UINT uiFlags)
HANDLE None shell32.PifMgr_OpenProperties(_In_ PCWSTR pszApp,_In_opt_ PCWSTR lpszPIF,UINT hInf None,UINT flOpt None)
HANDLE None shell32.SHChangeNotification_Lock(_In_ HANDLE hChange,DWORD dwProcId None,_Out_opt_ PIDLIST_ABSOLUTE **pppidl,_Out_opt_ LONG *plEvent)
HANDLE None spoolss.FindFirstPrinterChangeNotification(_In_ HANDLE hPrinter,DWORD fdwFilter None,DWORD fdwOptions None,_In_opt_ LPVOID pPrinterNotifyOptions)
HANDLE None userenv.EnterCriticalPolicySection(_In_ BOOL bMachine)
HANDLE None wininet.FindFirstUrlCacheEntryA(_In_ LPCTSTR lpszUrlSearchPattern,_Out_ LPINTERNET_CACHE_ENTRY_INFO lpFirstCacheEntryInfo,_Inout_ LPDWORD lpcbCacheEntryInfo)
HANDLE None wininet.FindFirstUrlCacheEntryExA(_In_ LPCTSTR lpszUrlSearchPattern,_In_ DWORD dwFlags,_In_ DWORD dwFilter,_In_ GROUPID GroupId,_Out_ LPINTERNET_CACHE_ENTRY_INFO lpFirstCacheEntryInfo,_Inout_ LPDWORD lpdwEntryInfo,_Reserved_ LPVOID lpGroupAttributes,_Reserved_ LPDWORD lpcbGroupAttributes,_Reserved_ LPVOID lpReserved)
HANDLE None wininet.FindFirstUrlCacheEntryEx(_In_ LPCTSTR lpszUrlSearchPattern,_In_ DWORD dwFlags,_In_ DWORD dwFilter,_In_ GROUPID GroupId,_Out_ LPINTERNET_CACHE_ENTRY_INFO lpFirstCacheEntryInfo,_Inout_ LPDWORD lpdwEntryInfo,_Reserved_ LPVOID lpGroupAttributes,_Reserved_ LPDWORD lpcbGroupAttributes,_Reserved_ LPVOID lpReserved)
HANDLE None wininet.FindFirstUrlCacheEntryExW(_In_ LPCTSTR lpszUrlSearchPattern,_In_ DWORD dwFlags,_In_ DWORD dwFilter,_In_ GROUPID GroupId,_Out_ LPINTERNET_CACHE_ENTRY_INFO lpFirstCacheEntryInfo,_Inout_ LPDWORD lpdwEntryInfo,_Reserved_ LPVOID lpGroupAttributes,_Reserved_ LPDWORD lpcbGroupAttributes,_Reserved_ LPVOID lpReserved)
HANDLE None wininet.FindFirstUrlCacheEntry(_In_ LPCTSTR lpszUrlSearchPattern,_Out_ LPINTERNET_CACHE_ENTRY_INFO lpFirstCacheEntryInfo,_Inout_ LPDWORD lpcbCacheEntryInfo)
HANDLE None wininet.FindFirstUrlCacheEntryW(_In_ LPCTSTR lpszUrlSearchPattern,_Out_ LPINTERNET_CACHE_ENTRY_INFO lpFirstCacheEntryInfo,_Inout_ LPDWORD lpcbCacheEntryInfo)
HANDLE None wininet.FindFirstUrlCacheGroup(_Reserved_ DWORD dwFlags,_In_ DWORD dwFilter,_Reserved_ LPVOID lpSearchCondition,_Reserved_ DWORD dwSearchCondition,_Out_ GROUPID *lpGroupId,_Reserved_ LPVOID lpReserved)
HANDLE None wininet.RetrieveUrlCacheEntryStreamA(_In_ LPCTSTR lpszUrlName,_Out_ LPINTERNET_CACHE_ENTRY_INFO lpCacheEntryInfo,_Inout_ LPDWORD lpcbCacheEntryInfo,_In_ BOOL fRandomRead,_In_ DWORD dwReserved)
HANDLE None wininet.RetrieveUrlCacheEntryStream(_In_ LPCTSTR lpszUrlName,_Out_ LPINTERNET_CACHE_ENTRY_INFO lpCacheEntryInfo,_Inout_ LPDWORD lpcbCacheEntryInfo,_In_ BOOL fRandomRead,_In_ DWORD dwReserved)
HANDLE None wininet.RetrieveUrlCacheEntryStreamW(_In_ LPCTSTR lpszUrlName,_Out_ LPINTERNET_CACHE_ENTRY_INFO lpCacheEntryInfo,_Inout_ LPDWORD lpcbCacheEntryInfo,_In_ BOOL fRandomRead,_In_ DWORD dwReserved)
HANDLE None wintrust.CryptCATOpen(_In_ LPWSTR pwszFileName,_In_ DWORD fdwOpenFlags,_In_ HCRYPTPROV hProv,_In_ DWORD dwPublicVersion,_In_ DWORD dwEncodingType)
HANDLE None wtsapi32.WTSOpenServerA(_In_ LPTSTR pServerName)
HANDLE None wtsapi32.WTSOpenServer(_In_ LPTSTR pServerName)
HANDLE None wtsapi32.WTSOpenServerW(_In_ LPTSTR pServerName)
HANDLE None wtsapi32.WTSVirtualChannelOpenEx(_In_ DWORD SessionId,_In_ LPSTR pVirtualName,_In_ DWORD flags)
HANDLE None wtsapi32.WTSVirtualChannelOpen(_In_ HANDLE hServer,_In_ DWORD SessionId,_In_ LPSTR pVirtualName)
HANDLE STDAPI cldapi.CfGetWin32HandleFromProtectedHandle(_In_ HANDLE ProtectedHandle)
HANDLE WINAPI avrt.AvSetMmMaxThreadCharacteristicsA(_In_ LPCTSTR FirstTask,_In_ LPCTSTR SecondTask,_Inout_ LPDWORD TaskIndex)
HANDLE WINAPI avrt.AvSetMmMaxThreadCharacteristics(_In_ LPCTSTR FirstTask,_In_ LPCTSTR SecondTask,_Inout_ LPDWORD TaskIndex)
HANDLE WINAPI avrt.AvSetMmMaxThreadCharacteristicsW(_In_ LPCTSTR FirstTask,_In_ LPCTSTR SecondTask,_Inout_ LPDWORD TaskIndex)
HANDLE WINAPI avrt.AvSetMmThreadCharacteristicsA(_In_ LPCTSTR TaskName,_Inout_ LPDWORD TaskIndex)
HANDLE WINAPI avrt.AvSetMmThreadCharacteristics(_In_ LPCTSTR TaskName,_Inout_ LPDWORD TaskIndex)
HANDLE WINAPI avrt.AvSetMmThreadCharacteristicsW(_In_ LPCTSTR TaskName,_Inout_ LPDWORD TaskIndex)
HANDLE WINAPI clfsw32.CreateLogFile(_In_ LPCWSTR pszLogFileName,_In_ ACCESS_MASK fDesiredAccess,_In_ DWORD dwShareMode,_In_opt_ LPSECURITY_ATTRIBUTES psaLogFile,_In_ ULONG fCreateDisposition,_In_ ULONG fFlagsAndAttributes)
HANDLE WINAPI dbghelp.FindDebugInfoFileEx(_In_ PCTSTR FileName,_In_ PCTSTR SymbolPath,_Out_ PTSTR DebugFilePath,_In_opt_ PFIND_DEBUG_FILE_CALLBACK Callback,_In_opt_ PVOID CallerData)
HANDLE WINAPI dbghelp.FindDebugInfoFileExW(_In_ PCTSTR FileName,_In_ PCTSTR SymbolPath,_Out_ PTSTR DebugFilePath,_In_opt_ PFIND_DEBUG_FILE_CALLBACK Callback,_In_opt_ PVOID CallerData)
HANDLE WINAPI dbghelp.FindDebugInfoFile(_In_ PCSTR FileName,_In_ PCSTR SymbolPath,_Out_ PSTR DebugFilePath)
HANDLE WINAPI dbghelp.FindExecutableImageEx(_In_ PCTSTR FileName,_In_ PCTSTR SymbolPath,_Out_ PTSTR ImageFilePath,_In_opt_ PFIND_EXE_FILE_CALLBACK Callback,_In_opt_ PVOID CallerData)
HANDLE WINAPI dbghelp.FindExecutableImageExW(_In_ PCTSTR FileName,_In_ PCTSTR SymbolPath,_Out_ PTSTR ImageFilePath,_In_opt_ PFIND_EXE_FILE_CALLBACK Callback,_In_opt_ PVOID CallerData)
HANDLE WINAPI dbghelp.FindExecutableImage(_In_ PCSTR FileName,_In_ PCSTR SymbolPath,_Out_ PSTR ImageFilePath)
HANDLE WINAPI dbghelp.SymFindDebugInfoFile(_In_ HANDLE hProcess,_In_ PCTSTR FileName,_Out_ PTSTR DebugFilePath,_In_opt_ PFIND_DEBUG_FILE_CALLBACK Callback,_In_opt_ PVOID CallerData)
HANDLE WINAPI dbghelp.SymFindDebugInfoFileW(_In_ HANDLE hProcess,_In_ PCTSTR FileName,_Out_ PTSTR DebugFilePath,_In_opt_ PFIND_DEBUG_FILE_CALLBACK Callback,_In_opt_ PVOID CallerData)
HANDLE WINAPI dbghelp.SymFindExecutableImage(_In_ HANDLE hProcess,_In_ PCTSTR FileName,_Out_ PTSTR ImageFilePath,_In_ PFIND_EXE_FILE_CALLBACK Callback,_In_ PVOID CallerData)
HANDLE WINAPI dbghelp.SymFindExecutableImageW(_In_ HANDLE hProcess,_In_ PCTSTR FileName,_Out_ PTSTR ImageFilePath,_In_ PFIND_EXE_FILE_CALLBACK Callback,_In_ PVOID CallerData)
HANDLE WINAPI kernel32.BeginUpdateResourceA(_In_ LPCTSTR pFileName,_In_ BOOL bDeleteExistingResources)
HANDLE WINAPI kernel32.BeginUpdateResource(_In_ LPCTSTR pFileName,_In_ BOOL bDeleteExistingResources)
HANDLE WINAPI kernel32.BeginUpdateResourceW(_In_ LPCTSTR pFileName,_In_ BOOL bDeleteExistingResources)
HANDLE WINAPI kernel32.CreateBoundaryDescriptorA(_In_ LPCTSTR Name,_In_ ULONG Flags)
HANDLE WINAPI kernel32.CreateBoundaryDescriptor(_In_ LPCTSTR Name,_In_ ULONG Flags)
HANDLE WINAPI kernel32.CreateBoundaryDescriptorW(_In_ LPCTSTR Name,_In_ ULONG Flags)
HANDLE WINAPI kernel32.CreateEventA(_In_opt_ LPSECURITY_ATTRIBUTES lpEventAttributes,_In_ BOOL bManualReset,_In_ BOOL bInitialState,_In_opt_ LPCTSTR lpName)
HANDLE WINAPI kernel32.CreateEventExA(_In_opt_ LPSECURITY_ATTRIBUTES lpEventAttributes,_In_opt_ LPCTSTR lpName,_In_ DWORD dwFlags,_In_ DWORD dwDesiredAccess)
HANDLE WINAPI kernel32.CreateEventEx(_In_opt_ LPSECURITY_ATTRIBUTES lpEventAttributes,_In_opt_ LPCTSTR lpName,_In_ DWORD dwFlags,_In_ DWORD dwDesiredAccess)
HANDLE WINAPI kernel32.CreateEventExW(_In_opt_ LPSECURITY_ATTRIBUTES lpEventAttributes,_In_opt_ LPCTSTR lpName,_In_ DWORD dwFlags,_In_ DWORD dwDesiredAccess)
HANDLE WINAPI kernel32.CreateEvent(_In_opt_ LPSECURITY_ATTRIBUTES lpEventAttributes,_In_ BOOL bManualReset,_In_ BOOL bInitialState,_In_opt_ LPCTSTR lpName)
HANDLE WINAPI kernel32.CreateEventW(_In_opt_ LPSECURITY_ATTRIBUTES lpEventAttributes,_In_ BOOL bManualReset,_In_ BOOL bInitialState,_In_opt_ LPCTSTR lpName)
HANDLE WINAPI kernel32.CreateFile2(_In_ LPCWSTR lpFileName,_In_ DWORD dwDesiredAccess,_In_ DWORD dwShareMode,_In_ DWORD dwCreationDisposition,_In_opt_ LPCREATEFILE2_EXTENDED_PARAMETERS pCreateExParams)
HANDLE WINAPI kernel32.CreateFileA(_In_ LPCTSTR lpFileName,_In_ DWORD dwDesiredAccess,_In_ DWORD dwShareMode,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ DWORD dwCreationDisposition,_In_ DWORD dwFlagsAndAttributes,_In_opt_ HANDLE hTemplateFile)
HANDLE WINAPI kernel32.CreateFile(_In_ LPCTSTR lpFileName,_In_ DWORD dwDesiredAccess,_In_ DWORD dwShareMode,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ DWORD dwCreationDisposition,_In_ DWORD dwFlagsAndAttributes,_In_opt_ HANDLE hTemplateFile)
HANDLE WINAPI kernel32.CreateFileMappingA(_In_ HANDLE hFile,_In_opt_ LPSECURITY_ATTRIBUTES lpAttributes,_In_ DWORD flProtect,_In_ DWORD dwMaximumSizeHigh,_In_ DWORD dwMaximumSizeLow,_In_opt_ LPCTSTR lpName)
HANDLE WINAPI kernel32.CreateFileMappingFromApp(_In_ HANDLE hFile,_In_opt_ PSECURITY_ATTRIBUTES SecurityAttributes,_In_ ULONG PageProtection,_In_ ULONG64 MaximumSize,_In_opt_ PCWSTR Name)
HANDLE WINAPI kernel32.CreateFileMapping(_In_ HANDLE hFile,_In_opt_ LPSECURITY_ATTRIBUTES lpAttributes,_In_ DWORD flProtect,_In_ DWORD dwMaximumSizeHigh,_In_ DWORD dwMaximumSizeLow,_In_opt_ LPCTSTR lpName)
HANDLE WINAPI kernel32.CreateFileMappingNumaA(_In_ HANDLE hFile,_In_opt_ LPSECURITY_ATTRIBUTES lpFileMappingAttributes,_In_ DWORD flProtect,_In_ DWORD dwMaximumSizeHigh,_In_ DWORD dwMaximumSizeLow,_In_opt_ LPCTSTR lpName,_In_ DWORD nndPreferred)
HANDLE WINAPI kernel32.CreateFileMappingNuma(_In_ HANDLE hFile,_In_opt_ LPSECURITY_ATTRIBUTES lpFileMappingAttributes,_In_ DWORD flProtect,_In_ DWORD dwMaximumSizeHigh,_In_ DWORD dwMaximumSizeLow,_In_opt_ LPCTSTR lpName,_In_ DWORD nndPreferred)
HANDLE WINAPI kernel32.CreateFileMappingNumaW(_In_ HANDLE hFile,_In_opt_ LPSECURITY_ATTRIBUTES lpFileMappingAttributes,_In_ DWORD flProtect,_In_ DWORD dwMaximumSizeHigh,_In_ DWORD dwMaximumSizeLow,_In_opt_ LPCTSTR lpName,_In_ DWORD nndPreferred)
HANDLE WINAPI kernel32.CreateFileMappingW(_In_ HANDLE hFile,_In_opt_ LPSECURITY_ATTRIBUTES lpAttributes,_In_ DWORD flProtect,_In_ DWORD dwMaximumSizeHigh,_In_ DWORD dwMaximumSizeLow,_In_opt_ LPCTSTR lpName)
HANDLE WINAPI kernel32.CreateFileTransactedA(_In_ LPCTSTR lpFileName,_In_ DWORD dwDesiredAccess,_In_ DWORD dwShareMode,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ DWORD dwCreationDisposition,_In_ DWORD dwFlagsAndAttributes,_In_opt_ HANDLE hTemplateFile,_In_ HANDLE hTransaction,_In_opt_ PUSHORT pusMiniVersion,_Reserved_ PVOID pExtendedParameter)
HANDLE WINAPI kernel32.CreateFileTransacted(_In_ LPCTSTR lpFileName,_In_ DWORD dwDesiredAccess,_In_ DWORD dwShareMode,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ DWORD dwCreationDisposition,_In_ DWORD dwFlagsAndAttributes,_In_opt_ HANDLE hTemplateFile,_In_ HANDLE hTransaction,_In_opt_ PUSHORT pusMiniVersion,_Reserved_ PVOID pExtendedParameter)
HANDLE WINAPI kernel32.CreateFileTransactedW(_In_ LPCTSTR lpFileName,_In_ DWORD dwDesiredAccess,_In_ DWORD dwShareMode,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ DWORD dwCreationDisposition,_In_ DWORD dwFlagsAndAttributes,_In_opt_ HANDLE hTemplateFile,_In_ HANDLE hTransaction,_In_opt_ PUSHORT pusMiniVersion,_Reserved_ PVOID pExtendedParameter)
HANDLE WINAPI kernel32.CreateFileW(_In_ LPCTSTR lpFileName,_In_ DWORD dwDesiredAccess,_In_ DWORD dwShareMode,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ DWORD dwCreationDisposition,_In_ DWORD dwFlagsAndAttributes,_In_opt_ HANDLE hTemplateFile)
HANDLE WINAPI kernel32.CreateIoCompletionPort(_In_ HANDLE FileHandle,_In_opt_ HANDLE ExistingCompletionPort,_In_ ULONG_PTR CompletionKey,_In_ DWORD NumberOfConcurrentThreads)
HANDLE WINAPI kernel32.CreateJobObjectA(_In_opt_ LPSECURITY_ATTRIBUTES lpJobAttributes,_In_opt_ LPCTSTR lpName)
HANDLE WINAPI kernel32.CreateJobObject(_In_opt_ LPSECURITY_ATTRIBUTES lpJobAttributes,_In_opt_ LPCTSTR lpName)
HANDLE WINAPI kernel32.CreateJobObjectW(_In_opt_ LPSECURITY_ATTRIBUTES lpJobAttributes,_In_opt_ LPCTSTR lpName)
HANDLE WINAPI kernel32.CreateMailslotA(_In_ LPCTSTR lpName,_In_ DWORD nMaxMessageSize,_In_ DWORD lReadTimeout,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes)
HANDLE WINAPI kernel32.CreateMailslot(_In_ LPCTSTR lpName,_In_ DWORD nMaxMessageSize,_In_ DWORD lReadTimeout,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes)
HANDLE WINAPI kernel32.CreateMailslotW(_In_ LPCTSTR lpName,_In_ DWORD nMaxMessageSize,_In_ DWORD lReadTimeout,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes)
HANDLE WINAPI kernel32.CreateMemoryResourceNotification(_In_ MEMORY_RESOURCE_NOTIFICATION_TYPE NotificationType)
HANDLE WINAPI kernel32.CreateMutexA(_In_opt_ LPSECURITY_ATTRIBUTES lpMutexAttributes,_In_ BOOL bInitialOwner,_In_opt_ LPCTSTR lpName)
HANDLE WINAPI kernel32.CreateMutexExA(_In_opt_ LPSECURITY_ATTRIBUTES lpMutexAttributes,_In_opt_ LPCTSTR lpName,_In_ DWORD dwFlags,_In_ DWORD dwDesiredAccess)
HANDLE WINAPI kernel32.CreateMutexEx(_In_opt_ LPSECURITY_ATTRIBUTES lpMutexAttributes,_In_opt_ LPCTSTR lpName,_In_ DWORD dwFlags,_In_ DWORD dwDesiredAccess)
HANDLE WINAPI kernel32.CreateMutexExW(_In_opt_ LPSECURITY_ATTRIBUTES lpMutexAttributes,_In_opt_ LPCTSTR lpName,_In_ DWORD dwFlags,_In_ DWORD dwDesiredAccess)
HANDLE WINAPI kernel32.CreateMutex(_In_opt_ LPSECURITY_ATTRIBUTES lpMutexAttributes,_In_ BOOL bInitialOwner,_In_opt_ LPCTSTR lpName)
HANDLE WINAPI kernel32.CreateMutexW(_In_opt_ LPSECURITY_ATTRIBUTES lpMutexAttributes,_In_ BOOL bInitialOwner,_In_opt_ LPCTSTR lpName)
HANDLE WINAPI kernel32.CreateNamedPipeA(_In_ LPCTSTR lpName,_In_ DWORD dwOpenMode,_In_ DWORD dwPipeMode,_In_ DWORD nMaxInstances,_In_ DWORD nOutBufferSize,_In_ DWORD nInBufferSize,_In_ DWORD nDefaultTimeOut,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes)
HANDLE WINAPI kernel32.CreateNamedPipe(_In_ LPCTSTR lpName,_In_ DWORD dwOpenMode,_In_ DWORD dwPipeMode,_In_ DWORD nMaxInstances,_In_ DWORD nOutBufferSize,_In_ DWORD nInBufferSize,_In_ DWORD nDefaultTimeOut,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes)
HANDLE WINAPI kernel32.CreateNamedPipeW(_In_ LPCTSTR lpName,_In_ DWORD dwOpenMode,_In_ DWORD dwPipeMode,_In_ DWORD nMaxInstances,_In_ DWORD nOutBufferSize,_In_ DWORD nInBufferSize,_In_ DWORD nDefaultTimeOut,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes)
HANDLE WINAPI kernel32.CreatePrivateNamespaceA(_In_opt_ LPSECURITY_ATTRIBUTES lpPrivateNamespaceAttributes,_In_ LPVOID lpBoundaryDescriptor,_In_ LPCTSTR lpAliasPrefix)
HANDLE WINAPI kernel32.CreatePrivateNamespace(_In_opt_ LPSECURITY_ATTRIBUTES lpPrivateNamespaceAttributes,_In_ LPVOID lpBoundaryDescriptor,_In_ LPCTSTR lpAliasPrefix)
HANDLE WINAPI kernel32.CreatePrivateNamespaceW(_In_opt_ LPSECURITY_ATTRIBUTES lpPrivateNamespaceAttributes,_In_ LPVOID lpBoundaryDescriptor,_In_ LPCTSTR lpAliasPrefix)
HANDLE WINAPI kernel32.CreateRemoteThread(_In_ HANDLE hProcess,_In_ LPSECURITY_ATTRIBUTES lpThreadAttributes,_In_ SIZE_T dwStackSize,_In_ LPTHREAD_START_ROUTINE lpStartAddress,_In_ LPVOID lpParameter,_In_ DWORD dwCreationFlags,_Out_ LPDWORD lpThreadId)
HANDLE WINAPI kernel32.CreateSemaphoreA(_In_opt_ LPSECURITY_ATTRIBUTES lpSemaphoreAttributes,_In_ LONG lInitialCount,_In_ LONG lMaximumCount,_In_opt_ LPCTSTR lpName)
HANDLE WINAPI kernel32.CreateSemaphoreExA(_In_opt_ LPSECURITY_ATTRIBUTES lpSemaphoreAttributes,_In_ LONG lInitialCount,_In_ LONG lMaximumCount,_In_opt_ LPCTSTR lpName,_Reserved_ DWORD dwFlags,_In_ DWORD dwDesiredAccess)
HANDLE WINAPI kernel32.CreateSemaphoreEx(_In_opt_ LPSECURITY_ATTRIBUTES lpSemaphoreAttributes,_In_ LONG lInitialCount,_In_ LONG lMaximumCount,_In_opt_ LPCTSTR lpName,_Reserved_ DWORD dwFlags,_In_ DWORD dwDesiredAccess)
HANDLE WINAPI kernel32.CreateSemaphoreExW(_In_opt_ LPSECURITY_ATTRIBUTES lpSemaphoreAttributes,_In_ LONG lInitialCount,_In_ LONG lMaximumCount,_In_opt_ LPCTSTR lpName,_Reserved_ DWORD dwFlags,_In_ DWORD dwDesiredAccess)
HANDLE WINAPI kernel32.CreateSemaphore(_In_opt_ LPSECURITY_ATTRIBUTES lpSemaphoreAttributes,_In_ LONG lInitialCount,_In_ LONG lMaximumCount,_In_opt_ LPCTSTR lpName)
HANDLE WINAPI kernel32.CreateSemaphoreW(_In_opt_ LPSECURITY_ATTRIBUTES lpSemaphoreAttributes,_In_ LONG lInitialCount,_In_ LONG lMaximumCount,_In_opt_ LPCTSTR lpName)
HANDLE WINAPI kernel32.CreateThread(_In_opt_ LPSECURITY_ATTRIBUTES lpThreadAttributes,_In_ SIZE_T dwStackSize,_In_ LPTHREAD_START_ROUTINE lpStartAddress,_In_opt_ LPVOID lpParameter,_In_ DWORD dwCreationFlags,_Out_opt_ LPDWORD lpThreadId)
HANDLE WINAPI kernel32.CreateTimerQueue(void None None)
HANDLE WINAPI kernel32.CreateToolhelp32Snapshot(_In_ DWORD dwFlags,_In_ DWORD th32ProcessID)
HANDLE WINAPI kernel32.CreateWaitableTimerA(_In_opt_ LPSECURITY_ATTRIBUTES lpTimerAttributes,_In_ BOOL bManualReset,_In_opt_ LPCTSTR lpTimerName)
HANDLE WINAPI kernel32.CreateWaitableTimerExA(_In_opt_ LPSECURITY_ATTRIBUTES lpTimerAttributes,_In_opt_ LPCTSTR lpTimerName,_In_ DWORD dwFlags,_In_ DWORD dwDesiredAccess)
HANDLE WINAPI kernel32.CreateWaitableTimerEx(_In_opt_ LPSECURITY_ATTRIBUTES lpTimerAttributes,_In_opt_ LPCTSTR lpTimerName,_In_ DWORD dwFlags,_In_ DWORD dwDesiredAccess)
HANDLE WINAPI kernel32.CreateWaitableTimerExW(_In_opt_ LPSECURITY_ATTRIBUTES lpTimerAttributes,_In_opt_ LPCTSTR lpTimerName,_In_ DWORD dwFlags,_In_ DWORD dwDesiredAccess)
HANDLE WINAPI kernel32.CreateWaitableTimer(_In_opt_ LPSECURITY_ATTRIBUTES lpTimerAttributes,_In_ BOOL bManualReset,_In_opt_ LPCTSTR lpTimerName)
HANDLE WINAPI kernel32.CreateWaitableTimerW(_In_opt_ LPSECURITY_ATTRIBUTES lpTimerAttributes,_In_ BOOL bManualReset,_In_opt_ LPCTSTR lpTimerName)
HANDLE WINAPI kernel32.FindFirstChangeNotificationA(_In_ LPCTSTR lpPathName,_In_ BOOL bWatchSubtree,_In_ DWORD dwNotifyFilter)
HANDLE WINAPI kernel32.FindFirstChangeNotification(_In_ LPCTSTR lpPathName,_In_ BOOL bWatchSubtree,_In_ DWORD dwNotifyFilter)
HANDLE WINAPI kernel32.FindFirstChangeNotificationW(_In_ LPCTSTR lpPathName,_In_ BOOL bWatchSubtree,_In_ DWORD dwNotifyFilter)
HANDLE WINAPI kernel32.FindFirstFileA(_In_ LPCTSTR lpFileName,_Out_ LPWIN32_FIND_DATA lpFindFileData)
HANDLE WINAPI kernel32.FindFirstFileExA(_In_ LPCTSTR lpFileName,_In_ FINDEX_INFO_LEVELS fInfoLevelId,_Out_ LPVOID lpFindFileData,_In_ FINDEX_SEARCH_OPS fSearchOp,_Reserved_ LPVOID lpSearchFilter,_In_ DWORD dwAdditionalFlags)
HANDLE WINAPI kernel32.FindFirstFileEx(_In_ LPCTSTR lpFileName,_In_ FINDEX_INFO_LEVELS fInfoLevelId,_Out_ LPVOID lpFindFileData,_In_ FINDEX_SEARCH_OPS fSearchOp,_Reserved_ LPVOID lpSearchFilter,_In_ DWORD dwAdditionalFlags)
HANDLE WINAPI kernel32.FindFirstFileExW(_In_ LPCTSTR lpFileName,_In_ FINDEX_INFO_LEVELS fInfoLevelId,_Out_ LPVOID lpFindFileData,_In_ FINDEX_SEARCH_OPS fSearchOp,_Reserved_ LPVOID lpSearchFilter,_In_ DWORD dwAdditionalFlags)
HANDLE WINAPI kernel32.FindFirstFile(_In_ LPCTSTR lpFileName,_Out_ LPWIN32_FIND_DATA lpFindFileData)
HANDLE WINAPI kernel32.FindFirstFileNameTransactedW(_In_ LPCWSTR lpFileName,_In_ DWORD dwFlags,_Inout_ LPDWORD StringLength,_Inout_ PWCHAR LinkName,_In_opt_ HANDLE hTransaction)
HANDLE WINAPI kernel32.FindFirstFileNameW(_In_ LPCWSTR lpFileName,_In_ DWORD dwFlags,_Inout_ LPDWORD StringLength,_Inout_ PWCHAR LinkName)
HANDLE WINAPI kernel32.FindFirstFileTransactedA(_In_ LPCTSTR lpFileName,_In_ FINDEX_INFO_LEVELS fInfoLevelId,_Out_ LPVOID lpFindFileData,_In_ FINDEX_SEARCH_OPS fSearchOp,_Reserved_ LPVOID lpSearchFilter,_In_ DWORD dwAdditionalFlags,_In_ HANDLE hTransaction)
HANDLE WINAPI kernel32.FindFirstFileTransacted(_In_ LPCTSTR lpFileName,_In_ FINDEX_INFO_LEVELS fInfoLevelId,_Out_ LPVOID lpFindFileData,_In_ FINDEX_SEARCH_OPS fSearchOp,_Reserved_ LPVOID lpSearchFilter,_In_ DWORD dwAdditionalFlags,_In_ HANDLE hTransaction)
HANDLE WINAPI kernel32.FindFirstFileTransactedW(_In_ LPCTSTR lpFileName,_In_ FINDEX_INFO_LEVELS fInfoLevelId,_Out_ LPVOID lpFindFileData,_In_ FINDEX_SEARCH_OPS fSearchOp,_Reserved_ LPVOID lpSearchFilter,_In_ DWORD dwAdditionalFlags,_In_ HANDLE hTransaction)
HANDLE WINAPI kernel32.FindFirstFileW(_In_ LPCTSTR lpFileName,_Out_ LPWIN32_FIND_DATA lpFindFileData)
HANDLE WINAPI kernel32.FindFirstStreamTransactedW(_In_ LPCWSTR lpFileName,_In_ STREAM_INFO_LEVELS InfoLevel,_Out_ LPVOID lpFindStreamData,_Reserved_ DWORD dwFlags,_In_ HANDLE hTransaction)
HANDLE WINAPI kernel32.FindFirstStreamW(_In_ LPCWSTR lpFileName,_In_ STREAM_INFO_LEVELS InfoLevel,_Out_ LPVOID lpFindStreamData,_Reserved_ DWORD dwFlags)
HANDLE WINAPI kernel32.FindFirstVolumeA(_Out_ LPTSTR lpszVolumeName,_In_ DWORD cchBufferLength)
HANDLE WINAPI kernel32.FindFirstVolumeMountPointA(_In_ LPTSTR lpszRootPathName,_Out_ LPTSTR lpszVolumeMountPoint,_In_ DWORD cchBufferLength)
HANDLE WINAPI kernel32.FindFirstVolumeMountPoint(_In_ LPTSTR lpszRootPathName,_Out_ LPTSTR lpszVolumeMountPoint,_In_ DWORD cchBufferLength)
HANDLE WINAPI kernel32.FindFirstVolumeMountPointW(_In_ LPTSTR lpszRootPathName,_Out_ LPTSTR lpszVolumeMountPoint,_In_ DWORD cchBufferLength)
HANDLE WINAPI kernel32.FindFirstVolume(_Out_ LPTSTR lpszVolumeName,_In_ DWORD cchBufferLength)
HANDLE WINAPI kernel32.FindFirstVolumeW(_Out_ LPTSTR lpszVolumeName,_In_ DWORD cchBufferLength)
HANDLE WINAPI kernel32.GetCurrentProcess(void None None)
HANDLE WINAPI kernel32.GetCurrentThread(void None None)
HANDLE WINAPI kernel32.GetProcessHeap(void None None)
HANDLE WINAPI kernel32.HeapCreate(_In_ DWORD flOptions,_In_ SIZE_T dwInitialSize,_In_ SIZE_T dwMaximumSize)
HANDLE WINAPI kernel32.OpenEventA(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpName)
HANDLE WINAPI kernel32.OpenEvent(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpName)
HANDLE WINAPI kernel32.OpenEventW(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpName)
HANDLE WINAPI kernel32.OpenFileById(_In_ HANDLE hFile,_In_ LPFILE_ID_DESCRIPTOR lpFileID,_In_ DWORD dwDesiredAccess,_In_ DWORD dwShareMode,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ DWORD dwFlags)
HANDLE WINAPI kernel32.OpenFileMappingA(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpName)
HANDLE WINAPI kernel32.OpenFileMappingFromApp(_In_ ULONG DesiredAccess,_In_ BOOL InheritHandle,_In_ PCWSTR Name)
HANDLE WINAPI kernel32.OpenFileMapping(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpName)
HANDLE WINAPI kernel32.OpenFileMappingW(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpName)
HANDLE WINAPI kernel32.OpenJobObjectA(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandles,_In_ LPCTSTR lpName)
HANDLE WINAPI kernel32.OpenJobObject(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandles,_In_ LPCTSTR lpName)
HANDLE WINAPI kernel32.OpenJobObjectW(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandles,_In_ LPCTSTR lpName)
HANDLE WINAPI kernel32.OpenMutexA(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpName)
HANDLE WINAPI kernel32.OpenMutex(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpName)
HANDLE WINAPI kernel32.OpenMutexW(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpName)
HANDLE WINAPI kernel32.OpenPrivateNamespaceA(_In_ LPVOID lpBoundaryDescriptor,_In_ LPCTSTR lpAliasPrefix)
HANDLE WINAPI kernel32.OpenPrivateNamespace(_In_ LPVOID lpBoundaryDescriptor,_In_ LPCTSTR lpAliasPrefix)
HANDLE WINAPI kernel32.OpenPrivateNamespaceW(_In_ LPVOID lpBoundaryDescriptor,_In_ LPCTSTR lpAliasPrefix)
HANDLE WINAPI kernel32.OpenProcess(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ DWORD dwProcessId)
HANDLE WINAPI kernel32.OpenSemaphoreA(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpName)
HANDLE WINAPI kernel32.OpenSemaphore(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpName)
HANDLE WINAPI kernel32.OpenSemaphoreW(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpName)
HANDLE WINAPI kernel32.OpenThread(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ DWORD dwThreadId)
HANDLE WINAPI kernel32.OpenWaitableTimerA(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpTimerName)
HANDLE WINAPI kernel32.OpenWaitableTimer(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpTimerName)
HANDLE WINAPI kernel32.OpenWaitableTimerW(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpTimerName)
HANDLE WINAPI kernel32.ReOpenFile(_In_ HANDLE hOriginalFile,_In_ DWORD dwDesiredAccess,_In_ DWORD dwShareMode,_In_ DWORD dwFlags)
HANDLE WINAPI ktmw32.CreateEnlistment(_In_opt_ LPSECURITY_ATTRIBUTES lpEnlistmentrAttributes,_In_ HANDLE ResourceManagerHandle,_In_ HANDLE TransactionHandle,_In_ NOTIFICATION_MASK NotificationMask,_In_opt_ DWORD CreateOptions,_In_opt_ PVOID EnlistmentKey)
HANDLE WINAPI ktmw32.CreateResourceManager(_In_opt_ LPSECURITY_ATTRIBUTES lpResourceManagerAttributes,_In_ LPGUID ResourceManagerID,_In_opt_ DWORD CreateOptions,_In_ HANDLE TmHandle,_In_opt_ LPWSTR Description)
HANDLE WINAPI ktmw32.CreateTransaction(_In_opt_ LPSECURITY_ATTRIBUTES lpTransactionAttributes,_In_opt_ LPGUID UOW,_In_opt_ DWORD CreateOptions,_In_opt_ DWORD IsolationLevel,_In_opt_ DWORD IsolationFlags,_In_opt_ DWORD Timeout,_In_opt_ LPWSTR Description)
HANDLE WINAPI ktmw32.CreateTransactionManager(_In_opt_ LPSECURITY_ATTRIBUTES lpTransactionAttributes,_In_opt_ LPWSTR LogFileName,_In_opt_ ULONG CreateOptions,_In_opt_ ULONG CommitStrength)
HANDLE WINAPI ktmw32.OpenEnlistment(_In_ DWORD dwDesiredAccess,_In_ ResourceManagerHandle None,_In_ LPGUID EnlistmentId)
HANDLE WINAPI ktmw32.OpenResourceManager(_In_ DWORD dwDesiredAccess,_In_ TmHandle None,_In_ LPGUID RmGuid)
HANDLE WINAPI ktmw32.OpenTransaction(_In_ DWORD dwDesiredAccess,_In_ LPGUID TransactionId)
HANDLE WINAPI ktmw32.OpenTransactionManagerById(_In_ LPGUID TransactionManagerId,_In_ ACCESS_MASK DesiredAccess,_In_opt_ ULONG OpenOptions)
HANDLE WINAPI ktmw32.OpenTransactionManager(_In_ LPWSTR LogFileName,_In_ ACCESS_MASK DesiredAccess,_In_opt_ ULONG OpenOptions)
HANDLE WINAPI msajapi.AllJoynConnectToBus(_In_opt_ PCWSTR connectionSpec)
HANDLE WINAPI None.GetStdHandle(_In_ DWORD nStdHandle)
HANDLE WINAPI None.WIMCaptureImage(HANDLE hWim None,PCWSTR pszPath None,DWORD dwCaptureFlags None)
HANDLE WINAPI None.WIMCreateFile(PWSTR pszWimPath None,DWORD dwDesiredAccess None,DWORD dwCreationDisposition None,DWORD dwFlagsAndAttributes None,DWORD dwCompressionType None,PDWORD pdwCreationResult None)
HANDLE WINAPI user32.CopyImage(_In_ HANDLE hImage,_In_ UINT uType,_In_ int cxDesired,_In_ int cyDesired,_In_ UINT fuFlags)
HANDLE WINAPI user32.GetClipboardData(_In_ UINT uFormat)
HANDLE WINAPI user32.GetPropA(_In_ HWND hWnd,_In_ LPCTSTR lpString)
HANDLE WINAPI user32.GetProp(_In_ HWND hWnd,_In_ LPCTSTR lpString)
HANDLE WINAPI user32.GetPropW(_In_ HWND hWnd,_In_ LPCTSTR lpString)
HANDLE WINAPI user32.LoadImageA(_In_opt_ HINSTANCE hinst,_In_ LPCTSTR lpszName,_In_ UINT uType,_In_ int cxDesired,_In_ int cyDesired,_In_ UINT fuLoad)
HANDLE WINAPI user32.LoadImage(_In_opt_ HINSTANCE hinst,_In_ LPCTSTR lpszName,_In_ UINT uType,_In_ int cxDesired,_In_ int cyDesired,_In_ UINT fuLoad)
HANDLE WINAPI user32.LoadImageW(_In_opt_ HINSTANCE hinst,_In_ LPCTSTR lpszName,_In_ UINT uType,_In_ int cxDesired,_In_ int cyDesired,_In_ UINT fuLoad)
HANDLE WINAPI user32.RemovePropA(_In_ HWND hWnd,_In_ LPCTSTR lpString)
HANDLE WINAPI user32.RemoveProp(_In_ HWND hWnd,_In_ LPCTSTR lpString)
HANDLE WINAPI user32.RemovePropW(_In_ HWND hWnd,_In_ LPCTSTR lpString)
HANDLE WINAPI user32.SetClipboardData(_In_ UINT uFormat,_In_opt_ HANDLE hMem)
HANDLE WINAPI winscard.SCardAccessStartedEvent(void None None)
HANDLE WINAPI wintrust.CryptCATHandleFromStore(_In_ CRYPTCATSTORE *pCatStore)
HANDLE WINAPI wtsapi32.WTSOpenServerExA(_In_ LPTSTR pServerName)
HANDLE WINAPI wtsapi32.WTSOpenServerEx(_In_ LPTSTR pServerName)
HANDLE WINAPI wtsapi32.WTSOpenServerExW(_In_ LPTSTR pServerName)
HANIMATIONBUFFER None uxtheme.BeginBufferedAnimation(HWND hwnd None,HDC hdcTarget None,const RECT *rcTarget,BP_BUFFERFORMAT dwFormat None,_In_ BP_PAINTPARAMS *pPaintParams,_In_ BP_ANIMATIONPARAMS *pAnimationParams,_Out_ HDC *phdcFrom,_Out_ HDC *phdcTo)
HBA_STATUS HBA_API hbaapi.HBA_GetDiscoveredPortAttributes(_In_ HBA_HANDLE HbaHandle,_In_ HBA_UINT32 PortIndex,_In_ HBA_UINT32 DiscoveredPortIndex,_Out_ HBA_PORTATTRIBUTES *HbaPortAttributes)
HBITMAP None gdi32.CreateCompatibleBitmap(_In_ HDC hdc,_In_ int nWidth,_In_ int nHeight)
HBITMAP None None.EngCreateBitmap(SIZEL sizl None,LONG lWidth None,_In_ ULONG iFormat,_In_ FLONG fl,_In_ PVOID pvBits)
HBITMAP None user32.LoadBitmapA(_In_ HINSTANCE hInstance,_In_ LPCTSTR lpBitmapName)
HBITMAP None user32.LoadBitmap(_In_ HINSTANCE hInstance,_In_ LPCTSTR lpBitmapName)
HBITMAP None user32.LoadBitmapW(_In_ HINSTANCE hInstance,_In_ LPCTSTR lpBitmapName)
HBLUETOOTH_DEVICE_FIND None bthprops.BluetoothFindFirstDevice(BLUETOOTH_DEVICE_SEARCH_PARAMS *pbtsp None,BLUETOOTH_DEVICE_INFO *pbtdi None)
HBLUETOOTH_RADIO_FIND None bthprops.BluetoothFindFirstRadio(BLUETOOTH_FIND_RADIO_PARAMS *pbtfrp None,_Out_ HANDLE *phRadio)
HBRUSH None gdi32.CreateDIBPatternBrush(_In_ HGLOBAL hglbDIBPacked,_In_ UINT fuColorSpec)
HBRUSH None gdi32.CreateHatchBrush(_In_ int fnStyle,_In_ COLORREF clrref)
HBRUSH None gdi32.CreatePatternBrush(_In_ HBITMAP hbmp)
HBRUSH None gdi32.CreateSolidBrush(_In_ COLORREF crColor)
HBRUSH None user32.GetSysColorBrush(_In_ int nIndex)
HBRUSH None uxtheme.GetThemeSysColorBrush(_In_ HTHEME hTheme,_In_ int iColorID)
HCAPTURE WINAPI nmapi.GetFrameCaptureHandle(_In_ HFRAME hFrame)
HCATINFO None wintrust.CryptCATAdminAddCatalog(_In_ HCATADMIN hCatAdmin,_In_ WCHAR *pwszCatalogFile,_In_ WCHAR *pwszSelectBaseName,_In_ DWORD dwFlags)
HCATINFO None wintrust.CryptCATAdminEnumCatalogFromHash(_In_ HCATADMIN hCatAdmin,_In_ BYTE *pbHash,_In_ DWORD cbHash,_In_ DWORD dwFlags,_In_ HCATINFO *phPrevCatInfo)
HCERT_SERVER_OCSP_RESPONSE WINAPI crypt32.CertOpenServerOcspResponse(_In_ PCCERT_CHAIN_CONTEXT pChainContext,_In_ DWORD dwFlags,_Reserved_ LPVOID pvReserved)
HCERTSTORE WINAPI crypt32.CertDuplicateStore(_In_ HCERTSTORE hCertStore)
HCERTSTORE WINAPI crypt32.CertOpenSystemStoreA(_In_ HCRYPTPROV_LEGACY hprov,_In_ LPTCSTR szSubsystemProtocol)
HCERTSTORE WINAPI crypt32.CertOpenSystemStore(_In_ HCRYPTPROV_LEGACY hprov,_In_ LPTCSTR szSubsystemProtocol)
HCERTSTORE WINAPI crypt32.CertOpenSystemStoreW(_In_ HCRYPTPROV_LEGACY hprov,_In_ LPTCSTR szSubsystemProtocol)
HCERTSTORE WINAPI crypt32.PFXImportCertStore(_In_ CRYPT_DATA_BLOB *pPFX,_In_ LPCWSTR szPassword,_In_ DWORD dwFlags)
HCHANGE WINAPI clusapi.CreateClusterNotifyPort(_In_ HCHANGE hChange,_In_ HCLUSTER hCluster,_In_ DWORD dwFilter,_In_ DWORD_PTR dwNotifyKey)
HCLUSENUMEX WINAPI clusapi.ClusterOpenEnumEx(_In_ HCLUSTER hCluster,_In_ DWORD dwType,_In_opt_ PVOID pOptions)
HCLUSENUM WINAPI clusapi.ClusterOpenEnum(_In_ HCLUSTER hCluster,_In_ DWORD dwType)
HCLUSTER None clusapi.CreateCluster(_In_ PCREATE_CLUSTER_CONFIG pConfig,_In_opt_ PCLUSTER_SETUP_PROGRESS_CALLBACK pfnProgressCallback,_In_opt_ PVOID pvCallbackArg)
HCLUSTER WINAPI clusapi.CreateClusterCNOless(_In_ PCREATE_CLUSTER_CONFIG pConfig,_In_opt_ PCLUSTER_SETUP_PROGRESS_CALLBACK pfnProgressCallback,_In_opt_ PVOID pvCallbackArg)
HCLUSTER WINAPI clusapi.GetClusterFromGroup(_In_ HGROUP hGroup)
HCLUSTER WINAPI clusapi.GetClusterFromGroupSet(_In_ HGROUPSET hGroupSet)
HCLUSTER WINAPI clusapi.GetClusterFromNetwork(_In_ HNETWORK hNetwork)
HCLUSTER WINAPI clusapi.GetClusterFromResource(_In_ HRESOURCE hResource)
HCLUSTER WINAPI clusapi.OpenClusterEx(_In_opt_ LPCWSTR lpszClusterName,_In_ DWORD DesiredAccess,_Out_opt_ DWORD *GrantedAccess)
HCLUSTER WINAPI clusapi.OpenCluster(_In_opt_ LPCWSTR lpszClusterName)
HCONVLIST WINAPI user32.DdeConnectList(_In_ DWORD idInst,_In_ HSZ hszService,_In_ HSZ hszTopic,_In_ HCONVLIST hConvList,_In_opt_ PCONVCONTEXT pCC)
HCONV WINAPI user32.DdeConnect(_In_ DWORD idInst,_In_ HSZ hszService,_In_ HSZ hszTopic,_In_opt_ PCONVCONTEXT pCC)
HCONV WINAPI user32.DdeQueryNextServer(_In_ HCONVLIST hConvList,_In_ HCONV hConvPrev)
HCONV WINAPI user32.DdeReconnect(_In_ HCONV hConv)
HCRYPTMSG WINAPI crypt32.CryptMsgDuplicate(_In_ HCRYPTMSG hCryptMsg)
HCRYPTMSG WINAPI crypt32.CryptMsgOpenToDecode(_In_ DWORD dwMsgEncodingType,_In_ DWORD dwFlags,_In_ DWORD dwMsgType,_In_ HCRYPTPROV_LEGACY hCryptProv,_In_ PCERT_INFO pRecipientInfo,_In_opt_ PCMSG_STREAM_INFO pStreamInfo)
HCRYPTOIDFUNCSET WINAPI crypt32.CryptInitOIDFunctionSet(_In_ LPCSTR pszFuncName,_In_ DWORD dwFlags)
HCURSOR None None.ListView_GetHotCursor(HWND hwndLV None)
HCURSOR None None.ListView_SetHotCursor(HWND hwndLV None,HCURSOR hCursor None)
HCURSOR None oleaut32.OleIconToCursor(_In_ HINSTANCE hinstExe,_In_ HICON hIcon)
HCURSOR WINAPI None.CopyCursor(_In_ HCURSOR pcur)
HCURSOR WINAPI user32.LoadCursorA(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpCursorName)
HCURSOR WINAPI user32.LoadCursorFromFileA(_In_ LPCTSTR lpFileName)
HCURSOR WINAPI user32.LoadCursorFromFile(_In_ LPCTSTR lpFileName)
HCURSOR WINAPI user32.LoadCursorFromFileW(_In_ LPCTSTR lpFileName)
HCURSOR WINAPI user32.LoadCursor(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpCursorName)
HCURSOR WINAPI user32.LoadCursorW(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpCursorName)
HCURSOR WINAPI user32.SetCursor(_In_opt_ HCURSOR hCursor)
HDC None gdi32.CreateCompatibleDC(_In_ HDC hdc)
HDC None gdi32.CreateMetaFileA(_In_ LPCTSTR lpszFile)
HDC None gdi32.CreateMetaFile(_In_ LPCTSTR lpszFile)
HDC None gdi32.CreateMetaFileW(_In_ LPCTSTR lpszFile)
HDC None user32.BeginPaint(_In_ HWND hwnd,_Out_ LPPAINTSTRUCT lpPaint)
HDC None user32.GetDCEx(_In_ HWND hWnd,_In_ HRGN hrgnClip,_In_ DWORD flags)
HDC None user32.GetDC(_In_ HWND hWnd)
HDC None user32.GetWindowDC(_In_ HWND hWnd)
HDC None uxtheme.GetBufferedPaintDC(HPAINTBUFFER hBufferedPaint None)
HDC None uxtheme.GetBufferedPaintTargetDC(HPAINTBUFFER hBufferedPaint None)
HDDEDATA CALLBACK None.DdeCallback(_In_ UINT uType,_In_ UINT uFmt,_In_ HCONV hconv,_In_ HSZ hsz1,_In_ HSZ hsz2,_In_ HDDEDATA hdata,_In_ ULONG_PTR dwData1,_In_ ULONG_PTR dwData2)
HDDEDATA CALLBACK None.DDECallback(uType None None,uFmt None None,hconv None None,hsz1 None None,hsz2 None None,hdata None None,dwData1 None None,dwData2 None None)
HDDEDATA WINAPI user32.DdeAddData(_In_ HDDEDATA hData,_In_ LPBYTE pSrc,_In_ DWORD cb,_In_ DWORD cbOff)
HDDEDATA WINAPI user32.DdeClientTransaction(_In_opt_ LPBYTE pData,_In_ DWORD cbData,_In_ HCONV hConv,_In_opt_ HSZ hszItem,_In_ UINT wFmt,_In_ UINT wType,_In_ DWORD dwTimeout,_Out_opt_ LPDWORD pdwResult)
HDDEDATA WINAPI user32.DdeCreateDataHandle(_In_ DWORD idInst,_In_opt_ LPBYTE pSrc,_In_ DWORD cb,_In_ DWORD cbOff,_In_opt_ HSZ hszItem,_In_ UINT wFmt,_In_ UINT afCmd)
HDDEDATA WINAPI user32.DdeNameService(_In_ DWORD idInst,_In_opt_ HSZ hsz1,_In_opt_ HSZ hsz2,_In_ UINT afCmd)
HDESK WINAPI user32.CreateDesktopA(_In_ LPCTSTR lpszDesktop,_Reserved_ LPCTSTR lpszDevice,_Reserved_ DEVMODE *pDevmode,_In_ DWORD dwFlags,_In_ ACCESS_MASK dwDesiredAccess,_In_opt_ LPSECURITY_ATTRIBUTES lpsa)
HDESK WINAPI user32.CreateDesktopExA(_In_ LPCTSTR lpszDesktop,_Reserved_ LPCTSTR lpszDevice,_Reserved_ DEVMODE *pDevmode,_In_ DWORD dwFlags,_In_ ACCESS_MASK dwDesiredAccess,_In_opt_ LPSECURITY_ATTRIBUTES lpsa,_In_ ULONG ulHeapSize,_Reserved_ PVOID pvoid)
HDESK WINAPI user32.CreateDesktopEx(_In_ LPCTSTR lpszDesktop,_Reserved_ LPCTSTR lpszDevice,_Reserved_ DEVMODE *pDevmode,_In_ DWORD dwFlags,_In_ ACCESS_MASK dwDesiredAccess,_In_opt_ LPSECURITY_ATTRIBUTES lpsa,_In_ ULONG ulHeapSize,_Reserved_ PVOID pvoid)
HDESK WINAPI user32.CreateDesktopExW(_In_ LPCTSTR lpszDesktop,_Reserved_ LPCTSTR lpszDevice,_Reserved_ DEVMODE *pDevmode,_In_ DWORD dwFlags,_In_ ACCESS_MASK dwDesiredAccess,_In_opt_ LPSECURITY_ATTRIBUTES lpsa,_In_ ULONG ulHeapSize,_Reserved_ PVOID pvoid)
HDESK WINAPI user32.CreateDesktop(_In_ LPCTSTR lpszDesktop,_Reserved_ LPCTSTR lpszDevice,_Reserved_ DEVMODE *pDevmode,_In_ DWORD dwFlags,_In_ ACCESS_MASK dwDesiredAccess,_In_opt_ LPSECURITY_ATTRIBUTES lpsa)
HDESK WINAPI user32.CreateDesktopW(_In_ LPCTSTR lpszDesktop,_Reserved_ LPCTSTR lpszDevice,_Reserved_ DEVMODE *pDevmode,_In_ DWORD dwFlags,_In_ ACCESS_MASK dwDesiredAccess,_In_opt_ LPSECURITY_ATTRIBUTES lpsa)
HDESK WINAPI user32.GetThreadDesktop(_In_ DWORD dwThreadId)
HDESK WINAPI user32.OpenDesktopA(_In_ LPTSTR lpszDesktop,_In_ DWORD dwFlags,_In_ BOOL fInherit,_In_ ACCESS_MASK dwDesiredAccess)
HDESK WINAPI user32.OpenDesktop(_In_ LPTSTR lpszDesktop,_In_ DWORD dwFlags,_In_ BOOL fInherit,_In_ ACCESS_MASK dwDesiredAccess)
HDESK WINAPI user32.OpenDesktopW(_In_ LPTSTR lpszDesktop,_In_ DWORD dwFlags,_In_ BOOL fInherit,_In_ ACCESS_MASK dwDesiredAccess)
HDESK WINAPI user32.OpenInputDesktop(_In_ DWORD dwFlags,_In_ BOOL fInherit,_In_ ACCESS_MASK dwDesiredAccess)
HDEVNOTIFY WINAPI user32.RegisterDeviceNotificationA(_In_ HANDLE hRecipient,_In_ LPVOID NotificationFilter,_In_ DWORD Flags)
HDEVNOTIFY WINAPI user32.RegisterDeviceNotification(_In_ HANDLE hRecipient,_In_ LPVOID NotificationFilter,_In_ DWORD Flags)
HDEVNOTIFY WINAPI user32.RegisterDeviceNotificationW(_In_ HANDLE hRecipient,_In_ LPVOID NotificationFilter,_In_ DWORD Flags)
HDSA None comctl32.DSA_Clone(_In_ HDSA hdsa)
HDSKSPC None setupapi.SetupCreateDiskSpaceListA(_In_ PVOID Reserved1,_In_ DWORD Reserved2,_In_ UINT Flags)
HDSKSPC None setupapi.SetupCreateDiskSpaceList(_In_ PVOID Reserved1,_In_ DWORD Reserved2,_In_ UINT Flags)
HDSKSPC None setupapi.SetupCreateDiskSpaceListW(_In_ PVOID Reserved1,_In_ DWORD Reserved2,_In_ UINT Flags)
HDSKSPC WINAPI setupapi.SetupDuplicateDiskSpaceListA(_In_ HDSKSPC DiskSpace,_Reserved_ PVOID Reserved1,_Reserved_ DWORD Reserved2,_Reserved_ UINT Flags)
HDSKSPC WINAPI setupapi.SetupDuplicateDiskSpaceList(_In_ HDSKSPC DiskSpace,_Reserved_ PVOID Reserved1,_Reserved_ DWORD Reserved2,_Reserved_ UINT Flags)
HDSKSPC WINAPI setupapi.SetupDuplicateDiskSpaceListW(_In_ HDSKSPC DiskSpace,_Reserved_ PVOID Reserved1,_Reserved_ DWORD Reserved2,_Reserved_ UINT Flags)
HDWP WINAPI user32.BeginDeferWindowPos(_In_ int nNumWindows)
HDWP WINAPI user32.DeferWindowPos(_In_ HDWP hWinPosInfo,_In_ HWND hWnd,_In_opt_ HWND hWndInsertAfter,_In_ int x,_In_ int y,_In_ int cx,_In_ int cy,_In_ UINT uFlags)
HENHMETAFILE None gdi32.CloseEnhMetaFile(_In_ HDC hdc)
HENHMETAFILE None gdi32.CopyEnhMetaFileA(_In_ HENHMETAFILE hemfSrc,_In_ LPCTSTR lpszFile)
HENHMETAFILE None gdi32.CopyEnhMetaFile(_In_ HENHMETAFILE hemfSrc,_In_ LPCTSTR lpszFile)
HENHMETAFILE None gdi32.CopyEnhMetaFileW(_In_ HENHMETAFILE hemfSrc,_In_ LPCTSTR lpszFile)
HFILE WINAPI kernel32.OpenFile(_In_ LPCSTR lpFileName,_Out_ LPOFSTRUCT lpReOpenBuff,_In_ UINT uStyle)
HFONT None gdi32.CreateFontA(_In_ int nHeight,_In_ int nWidth,_In_ int nEscapement,_In_ int nOrientation,_In_ int fnWeight,_In_ DWORD fdwItalic,_In_ DWORD fdwUnderline,_In_ DWORD fdwStrikeOut,_In_ DWORD fdwCharSet,_In_ DWORD fdwOutputPrecision,_In_ DWORD fdwClipPrecision,_In_ DWORD fdwQuality,_In_ DWORD fdwPitchAndFamily,_In_ LPCTSTR lpszFace)
HFONT None gdi32.CreateFont(_In_ int nHeight,_In_ int nWidth,_In_ int nEscapement,_In_ int nOrientation,_In_ int fnWeight,_In_ DWORD fdwItalic,_In_ DWORD fdwUnderline,_In_ DWORD fdwStrikeOut,_In_ DWORD fdwCharSet,_In_ DWORD fdwOutputPrecision,_In_ DWORD fdwClipPrecision,_In_ DWORD fdwQuality,_In_ DWORD fdwPitchAndFamily,_In_ LPCTSTR lpszFace)
HFONT None gdi32.CreateFontW(_In_ int nHeight,_In_ int nWidth,_In_ int nEscapement,_In_ int nOrientation,_In_ int fnWeight,_In_ DWORD fdwItalic,_In_ DWORD fdwUnderline,_In_ DWORD fdwStrikeOut,_In_ DWORD fdwCharSet,_In_ DWORD fdwOutputPrecision,_In_ DWORD fdwClipPrecision,_In_ DWORD fdwQuality,_In_ DWORD fdwPitchAndFamily,_In_ LPCTSTR lpszFace)
HFONT None None.DateTime_GetMonthCalFont(HWND hwndDP None)
HFRAME WINAPI nmapi.GetFrame(_In_ HCAPTURE hCapture,_In_ DWORD FrameNumber)
HFRAME WINAPI nmapi.ModifyFrame(_In_ HCAPTURE hCapture,_In_ DWORD FrameNumber,_In_ LPBYTE FrameData,_In_ DWORD FrameLength,_Out_ __int64 TimeStamp)
HGDIOBJ None gdi32.GetStockObject(_In_ int fnObject)
HGDIOBJ None gdi32.SelectObject(_In_ HDC hdc,_In_ HGDIOBJ hgdiobj)
HGLOBAL None ole32.OleGetIconOfClass(_In_ REFCLSID rclsid,_In_opt_ LPOLESTR lpszLabel,_In_ BOOL fUseTypeAsLabel)
HGLOBAL None ole32.OleGetIconOfFile(_In_ LPOLESTR lpszPath,_In_ BOOL fUseFileAsLabel)
HGLOBAL None ole32.OleMetafilePictFromIconAndLabel(_In_ HICON hIcon,_In_ LPOLESTR lpszLabel,_In_ LPOLESTR lpszSourceFile,_In_ UINT iIconIndex)
HGLOBAL WINAPI kernel32.GlobalAlloc(_In_ UINT uFlags,_In_ SIZE_T dwBytes)
HGLOBAL WINAPI kernel32.GlobalFree(_In_ HGLOBAL hMem)
HGLOBAL WINAPI kernel32.GlobalHandle(_In_ LPCVOID pMem)
HGLOBAL WINAPI kernel32.GlobalReAlloc(_In_ HGLOBAL hMem,_In_ SIZE_T dwBytes,_In_ UINT uFlags)
HGLOBAL WINAPI kernel32.LoadResource(_In_opt_ HMODULE hModule,_In_ HRSRC hResInfo)
HGLOBAL WINAPI None.GlobalDiscard([in] HGLOBAL hMem)
HGROUPENUM WINAPI clusapi.ClusterGroupOpenEnum(_In_ HGROUP hGroup,_In_ DWORD dwType)
HGROUPSETENUM WINAPI clusapi.ClusterGroupSetOpenEnum(_In_ HCLUSTER hCluster)
HGROUPSET WINAPI clusapi.CreateClusterGroupSet(_In_ HCLUSTER hCluster,_In_ LPCWSTR groupSetName)
HGROUPSET WINAPI clusapi.OpenClusterGroupSet(_In_ HCLUSTER hCluster,_In_ LPCWSTR lpszGroupSetName)
HGROUP WINAPI clusapi.CreateClusterGroupEx(_In_ HCLUSTER hCluster,_In_ LPCWSTR lpszGroupName,_In_opt_ PCLUSTER_CREATE_GROUP_INFO pGroupInfo)
HGROUP WINAPI clusapi.CreateClusterGroup(_In_ HCLUSTER hCluster,_In_ LPCWSTR lpszGroupName)
HGROUP WINAPI clusapi.OpenClusterGroupEx(_In_ HCLUSTER hCluster,_In_opt_ LPCWSTR lpszGroupName,_In_ DWORD dwDesiredAccess,_Out_opt_ DWORD *lpdwGrantedAccess)
HGROUP WINAPI clusapi.OpenClusterGroup(_In_ HCLUSTER hCluster,_In_ LPCWSTR lpszGroupName)
HHOOK WINAPI user32.SetWindowsHookExA(_In_ int idHook,_In_ HOOKPROC lpfn,_In_ HINSTANCE hMod,_In_ DWORD dwThreadId)
HHOOK WINAPI user32.SetWindowsHookEx(_In_ int idHook,_In_ HOOKPROC lpfn,_In_ HINSTANCE hMod,_In_ DWORD dwThreadId)
HHOOK WINAPI user32.SetWindowsHookExW(_In_ int idHook,_In_ HOOKPROC lpfn,_In_ HINSTANCE hMod,_In_ DWORD dwThreadId)
HIC None None.ICGetDisplayFormat(HIC hic None,LPBITMAPINFOHEADER lpbiIn None,LPBITMAPINFOHEADER lpbiOut None,int BitDepth None,int dx None,int dy None)
HIC None None.ICOpen(DWORD fccType None,DWORD fccHandler None,UINT wMode None)
HIC None None.ICOpenFunction(DWORD fccType None,DWORD fccHandler None,UINT wMode None,FARPROC lpfnHandler None)
HICON None shell32.DuplicateIcon(_Reserved_ HINSTANCE hInst,_In_ HICON hIcon)
HICON None shell32.ExtractAssociatedIconA(_Reserved_ HINSTANCE hInst,_Inout_ LPTSTR lpIconPath,_Inout_ LPWORD lpiIcon)
HICON None shell32.ExtractAssociatedIconExA(_Reserved_ HINSTANCE hInst,_Inout_ LPTSTR lpIconPath,_Inout_ LPWORD lpiIconIndex,_Inout_ LPWORD lpiIconId)
HICON None shell32.ExtractAssociatedIconEx(_Reserved_ HINSTANCE hInst,_Inout_ LPTSTR lpIconPath,_Inout_ LPWORD lpiIconIndex,_Inout_ LPWORD lpiIconId)
HICON None shell32.ExtractAssociatedIconExW(_Reserved_ HINSTANCE hInst,_Inout_ LPTSTR lpIconPath,_Inout_ LPWORD lpiIconIndex,_Inout_ LPWORD lpiIconId)
HICON None shell32.ExtractAssociatedIcon(_Reserved_ HINSTANCE hInst,_Inout_ LPTSTR lpIconPath,_Inout_ LPWORD lpiIcon)
HICON None shell32.ExtractAssociatedIconW(_Reserved_ HINSTANCE hInst,_Inout_ LPTSTR lpIconPath,_Inout_ LPWORD lpiIcon)
HICON None shell32.ExtractIconA(_Reserved_ HINSTANCE hInst,_In_ LPCTSTR lpszExeFileName,UINT nIconIndex None)
HICON None shell32.ExtractIcon(_Reserved_ HINSTANCE hInst,_In_ LPCTSTR lpszExeFileName,UINT nIconIndex None)
HICON None shell32.ExtractIconW(_Reserved_ HINSTANCE hInst,_In_ LPCTSTR lpszExeFileName,UINT nIconIndex None)
HICON WINAPI shell32.DuplicateIcon(_Reserved_ HINSTANCE hInst,_In_ HICON hIcon)
HICON WINAPI shell32.ExtractAssociatedIconA(_Reserved_ HINSTANCE hInst,_Inout_ LPTSTR lpIconPath,_Inout_ WORD *lpiIcon)
HICON WINAPI shell32.ExtractAssociatedIcon(_Reserved_ HINSTANCE hInst,_Inout_ LPTSTR lpIconPath,_Inout_ WORD *lpiIcon)
HICON WINAPI shell32.ExtractAssociatedIconW(_Reserved_ HINSTANCE hInst,_Inout_ LPTSTR lpIconPath,_Inout_ WORD *lpiIcon)
HICON WINAPI shell32.ExtractIconA(_Reserved_ HINSTANCE hInst,_In_ LPCTSTR lpszExeFileName,_In_ UINT nIconIndex)
HICON WINAPI shell32.ExtractIcon(_Reserved_ HINSTANCE hInst,_In_ LPCTSTR lpszExeFileName,_In_ UINT nIconIndex)
HICON WINAPI shell32.ExtractIconW(_Reserved_ HINSTANCE hInst,_In_ LPCTSTR lpszExeFileName,_In_ UINT nIconIndex)
HICON WINAPI user32.CopyIcon(_In_ HICON hIcon)
HICON WINAPI user32.CreateIconFromResource(_In_ PBYTE presbits,_In_ DWORD dwResSize,_In_ BOOL fIcon,_In_ DWORD dwVer)
HICON WINAPI user32.CreateIconIndirect(_In_ PICONINFO piconinfo)
HICON WINAPI user32.LoadIconA(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpIconName)
HICON WINAPI user32.LoadIcon(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpIconName)
HICON WINAPI user32.LoadIconW(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpIconName)
HierarchicalDataSourceView None None.GetHierarchicalView(String viewPath None)
HIMAGELIST None comctl32.ImageList_Duplicate(HIMAGELIST himl None)
HIMAGELIST None comctl32.ImageList_GetDragImage(POINT *ppt None,POINT *pptHotspot None)
HIMAGELIST None comctl32.ImageList_LoadImageA(HINSTANCE hi None,LPCTSTR lpbmp None,int cx None,int cGrow None,COLORREF crMask None,UINT uType None,UINT uFlags None)
HIMAGELIST None comctl32.ImageList_LoadImage(HINSTANCE hi None,LPCTSTR lpbmp None,int cx None,int cGrow None,COLORREF crMask None,UINT uType None,UINT uFlags None)
HIMAGELIST None comctl32.ImageList_LoadImageW(HINSTANCE hi None,LPCTSTR lpbmp None,int cx None,int cGrow None,COLORREF crMask None,UINT uType None,UINT uFlags None)
HIMAGELIST None comctl32.ImageList_Merge(HIMAGELIST himl1 None,int i1 None,HIMAGELIST himl2 None,int i2 None,int dx None,int dy None)
HIMAGELIST None comctl32.ImageList_Read(LPSTREAM pstm None)
HIMAGELIST None None.Header_CreateDragImage(HWND hwndHD None,int iIndex None)
HIMAGELIST None None.Header_GetImageList(HWND hwndHD None)
HIMAGELIST None None.Header_SetImageList(HWND hwndHD None,HIMAGELIST himl None)
HIMAGELIST None None.ListView_CreateDragImage(HWND hwnd None,int iItem None,LPPOINT lpptUpLeft None)
HIMAGELIST None None.ListView_GetGroupHeaderImageList([in] HWND hwnd)
HIMAGELIST None None.ListView_GetImageList(HWND hwnd None,int iImageList None)
HIMAGELIST None None.ListView_SetGroupHeaderImageList([in] HWND hwnd,[in] HIML himl)
HIMAGELIST None None.ListView_SetImageList(HWND hwnd None,HIMAGELIST himl None,int iImageList None)
HIMAGELIST None None.TabCtrl_GetImageList(HWND hwnd None)
HIMAGELIST None None.TreeView_CreateDragImage(HWND hwndTV None,HTREEITEM hitem None)
HIMAGELIST None None.TreeView_GetImageList(HWND hwndTV None,INT iImage None)
HIMAGELIST None None.TreeView_SetImageList(HWND hwndTV None,HIMAGELIST himl None,INT iImage None)
HIMC None imm32.ImmAssociateContext(_In_ HWND hWnd,_In_ HIMC hIMC)
HIMC None imm32.ImmCreateContext(void None None)
HIMC None imm32.ImmGetContext(_In_ HWND hWnd)
HINF None setupapi.SetupOpenInfFileA(_In_ PCTSTR FileName,_In_ PCTSTR InfClass,_In_ DWORD InfStyle,_In_ PUINT ErrorLine)
HINF None setupapi.SetupOpenInfFile(_In_ PCTSTR FileName,_In_ PCTSTR InfClass,_In_ DWORD InfStyle,_In_ PUINT ErrorLine)
HINF None setupapi.SetupOpenInfFileW(_In_ PCTSTR FileName,_In_ PCTSTR InfClass,_In_ DWORD InfStyle,_In_ PUINT ErrorLine)
HINF None setupapi.SetupOpenMasterInf(void None None)
HINSTANCE None None.LoadMUILibraryA(_In_ LPCTSTR pszFullModuleName,_In_ DWORD dwLangConvention,_In_ LANGID LangID)
HINSTANCE None None.LoadMUILibrary(_In_ LPCTSTR pszFullModuleName,_In_ DWORD dwLangConvention,_In_ LANGID LangID)
HINSTANCE None None.LoadMUILibraryW(_In_ LPCTSTR pszFullModuleName,_In_ DWORD dwLangConvention,_In_ LANGID LangID)
HINSTANCE None ole32.CoLoadLibrary(_In_ LPOLESTR lpszLibName,_In_ BOOL bAutoFree)
HINSTANCE None shell32.FindExecutableA(_In_ LPCTSTR lpFile,_In_opt_ LPCTSTR lpDirectory,_Out_ LPTSTR lpResult)
HINSTANCE None shell32.FindExecutable(_In_ LPCTSTR lpFile,_In_opt_ LPCTSTR lpDirectory,_Out_ LPTSTR lpResult)
HINSTANCE None shell32.FindExecutableW(_In_ LPCTSTR lpFile,_In_opt_ LPCTSTR lpDirectory,_Out_ LPTSTR lpResult)
HINSTANCE None shell32.ShellExecuteA(_In_opt_ HWND hwnd,_In_opt_ LPCTSTR lpOperation,_In_ LPCTSTR lpFile,_In_opt_ LPCTSTR lpParameters,_In_opt_ LPCTSTR lpDirectory,_In_ INT nShowCmd)
HINSTANCE None shell32.ShellExecute(_In_opt_ HWND hwnd,_In_opt_ LPCTSTR lpOperation,_In_ LPCTSTR lpFile,_In_opt_ LPCTSTR lpParameters,_In_opt_ LPCTSTR lpDirectory,_In_ INT nShowCmd)
HINSTANCE None shell32.ShellExecuteW(_In_opt_ HWND hwnd,_In_opt_ LPCTSTR lpOperation,_In_ LPCTSTR lpFile,_In_opt_ LPCTSTR lpParameters,_In_opt_ LPCTSTR lpDirectory,_In_ INT nShowCmd)
HINSTANCE None shell32.SHGetShellStyleHInstance(void None None)
HINSTANCE None shell32.WOWShellExecute(_In_ HWND hwnd,_In_ LPCTSTR lpOperation,_In_ LPCTSTR lpFile,_In_ LPCTSTR lpParameters,_In_ LPCTSTR lpDirectory,_In_ INT nShowCmd,void *lpfnCBWinExec None)
HINSTANCE None shlwapi.MLLoadLibraryA(_In_ LPCTSTR lpszLibFileName,_In_ HMODULE hModule,_In_ DWORD dwCrossCodePage)
HINSTANCE None shlwapi.MLLoadLibrary(_In_ LPCTSTR lpszLibFileName,_In_ HMODULE hModule,_In_ DWORD dwCrossCodePage)
HINSTANCE None shlwapi.MLLoadLibraryW(_In_ LPCTSTR lpszLibFileName,_In_ HMODULE hModule,_In_ DWORD dwCrossCodePage)
HINTERNET None wininet.FtpFindFirstFileA(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszSearchFile,_Out_ LPWIN32_FIND_DATA lpFindFileData,_In_ DWORD dwFlags,_In_ DWORD_PTR dwContext)
HINTERNET None wininet.FtpFindFirstFile(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszSearchFile,_Out_ LPWIN32_FIND_DATA lpFindFileData,_In_ DWORD dwFlags,_In_ DWORD_PTR dwContext)
HINTERNET None wininet.FtpFindFirstFileW(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszSearchFile,_Out_ LPWIN32_FIND_DATA lpFindFileData,_In_ DWORD dwFlags,_In_ DWORD_PTR dwContext)
HINTERNET None wininet.FtpOpenFileA(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszFileName,_In_ DWORD dwAccess,_In_ DWORD dwFlags,_In_ DWORD_PTR dwContext)
HINTERNET None wininet.FtpOpenFile(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszFileName,_In_ DWORD dwAccess,_In_ DWORD dwFlags,_In_ DWORD_PTR dwContext)
HINTERNET None wininet.FtpOpenFileW(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszFileName,_In_ DWORD dwAccess,_In_ DWORD dwFlags,_In_ DWORD_PTR dwContext)
HINTERNET None wininet.GopherFindFirstFileA(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszLocator,_In_ LPCTSTR lpszSearchString,_Out_ LPGOPHER_FIND_DATA lpFindData,_In_ DWORD dwFlags,_In_ DWORD_PTR dwContext)
HINTERNET None wininet.GopherFindFirstFile(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszLocator,_In_ LPCTSTR lpszSearchString,_Out_ LPGOPHER_FIND_DATA lpFindData,_In_ DWORD dwFlags,_In_ DWORD_PTR dwContext)
HINTERNET None wininet.GopherFindFirstFileW(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszLocator,_In_ LPCTSTR lpszSearchString,_Out_ LPGOPHER_FIND_DATA lpFindData,_In_ DWORD dwFlags,_In_ DWORD_PTR dwContext)
HINTERNET None wininet.GopherOpenFileA(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszLocator,_In_ LPCTSTR lpszView,_In_ DWORD dwFlags,_In_ DWORD_PTR dwContext)
HINTERNET None wininet.GopherOpenFile(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszLocator,_In_ LPCTSTR lpszView,_In_ DWORD dwFlags,_In_ DWORD_PTR dwContext)
HINTERNET None wininet.GopherOpenFileW(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszLocator,_In_ LPCTSTR lpszView,_In_ DWORD dwFlags,_In_ DWORD_PTR dwContext)
HINTERNET None wininet.HttpOpenRequestA(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszVerb,_In_ LPCTSTR lpszObjectName,_In_ LPCTSTR lpszVersion,_In_ LPCTSTR lpszReferer,_In_ LPCTSTR *lplpszAcceptTypes,_In_ DWORD dwFlags,_In_ DWORD_PTR dwContext)
HINTERNET None wininet.HttpOpenRequest(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszVerb,_In_ LPCTSTR lpszObjectName,_In_ LPCTSTR lpszVersion,_In_ LPCTSTR lpszReferer,_In_ LPCTSTR *lplpszAcceptTypes,_In_ DWORD dwFlags,_In_ DWORD_PTR dwContext)
HINTERNET None wininet.HttpOpenRequestW(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszVerb,_In_ LPCTSTR lpszObjectName,_In_ LPCTSTR lpszVersion,_In_ LPCTSTR lpszReferer,_In_ LPCTSTR *lplpszAcceptTypes,_In_ DWORD dwFlags,_In_ DWORD_PTR dwContext)
HINTERNET None wininet.InternetConnectA(_In_ HINTERNET hInternet,_In_ LPCTSTR lpszServerName,_In_ INTERNET_PORT nServerPort,_In_ LPCTSTR lpszUsername,_In_ LPCTSTR lpszPassword,_In_ DWORD dwService,_In_ DWORD dwFlags,_In_ DWORD_PTR dwContext)
HINTERNET None wininet.InternetConnect(_In_ HINTERNET hInternet,_In_ LPCTSTR lpszServerName,_In_ INTERNET_PORT nServerPort,_In_ LPCTSTR lpszUsername,_In_ LPCTSTR lpszPassword,_In_ DWORD dwService,_In_ DWORD dwFlags,_In_ DWORD_PTR dwContext)
HINTERNET None wininet.InternetConnectW(_In_ HINTERNET hInternet,_In_ LPCTSTR lpszServerName,_In_ INTERNET_PORT nServerPort,_In_ LPCTSTR lpszUsername,_In_ LPCTSTR lpszPassword,_In_ DWORD dwService,_In_ DWORD dwFlags,_In_ DWORD_PTR dwContext)
HINTERNET None wininet.InternetOpenA(_In_ LPCTSTR lpszAgent,_In_ DWORD dwAccessType,_In_ LPCTSTR lpszProxyName,_In_ LPCTSTR lpszProxyBypass,_In_ DWORD dwFlags)
HINTERNET None wininet.InternetOpen(_In_ LPCTSTR lpszAgent,_In_ DWORD dwAccessType,_In_ LPCTSTR lpszProxyName,_In_ LPCTSTR lpszProxyBypass,_In_ DWORD dwFlags)
HINTERNET None wininet.InternetOpenUrlA(_In_ HINTERNET hInternet,_In_ LPCTSTR lpszUrl,_In_ LPCTSTR lpszHeaders,_In_ DWORD dwHeadersLength,_In_ DWORD dwFlags,_In_ DWORD_PTR dwContext)
HINTERNET None wininet.InternetOpenUrl(_In_ HINTERNET hInternet,_In_ LPCTSTR lpszUrl,_In_ LPCTSTR lpszHeaders,_In_ DWORD dwHeadersLength,_In_ DWORD dwFlags,_In_ DWORD_PTR dwContext)
HINTERNET None wininet.InternetOpenUrlW(_In_ HINTERNET hInternet,_In_ LPCTSTR lpszUrl,_In_ LPCTSTR lpszHeaders,_In_ DWORD dwHeadersLength,_In_ DWORD dwFlags,_In_ DWORD_PTR dwContext)
HINTERNET None wininet.InternetOpenW(_In_ LPCTSTR lpszAgent,_In_ DWORD dwAccessType,_In_ LPCTSTR lpszProxyName,_In_ LPCTSTR lpszProxyBypass,_In_ DWORD dwFlags)
HINTERNET WINAPI winhttp.WinHttpConnect(_In_ HINTERNET hSession,_In_ LPCWSTR pswzServerName,_In_ INTERNET_PORT nServerPort,_Reserved_ DWORD dwReserved)
HINTERNET WINAPI winhttp.WinHttpOpen(_In_opt_ LPCWSTR pwszUserAgent,_In_ DWORD dwAccessType,_In_ LPCWSTR pwszProxyName,_In_ LPCWSTR pwszProxyBypass,_In_ DWORD dwFlags)
HINTERNET WINAPI winhttp.WinHttpOpenRequest(_In_ HINTERNET hConnect,_In_ LPCWSTR pwszVerb,_In_ LPCWSTR pwszObjectName,_In_ LPCWSTR pwszVersion,_In_ LPCWSTR pwszReferrer,_In_ LPCWSTR *ppwszAcceptTypes,_In_ DWORD dwFlags)
HINTERNET WINAPI winhttp.WinHttpWebSocketCompleteUpgrade(_In_ HINTERNET hRequest,_In_opt_ DWORD_PTR pContext)
HKEY_CLASSES_ROOT None None.alert(Default None None)
HKEY_CURRENT_USER SOFTWARE None.Clients(Default None None)
HKEY None None.SetupDiCreateDeviceInterfaceRegKey(_In_ HDEVINFO DeviceInfoSet,_In_ PSP_DEVICE_INTERFACE_DATA DeviceInterfaceData,_Reserved_ DWORD Reserved,_In_ REGSAM samDesired,_In_opt_ HINF InfHandle,_In_opt_ PCTSTR InfSectionName)
HKEY None setupapi.SetupDiOpenDeviceInterfaceRegKey(_In_ HDEVINFO DeviceInfoSet,_In_ PSP_DEVICE_INTERFACE_DATA DeviceInterfaceData,_Reserved_ DWORD Reserved,_In_ REGSAM samDesired)
HKEY None shlwapi.SHRegDuplicateHKey(_In_ HKEY hkey)
HKL None imm32.ImmInstallIMEA(_In_ LPCTSTR lpszIMEFileName,_In_ LPCTSTR lpszLayoutText)
HKL None imm32.ImmInstallIME(_In_ LPCTSTR lpszIMEFileName,_In_ LPCTSTR lpszLayoutText)
HKL None imm32.ImmInstallIMEW(_In_ LPCTSTR lpszIMEFileName,_In_ LPCTSTR lpszLayoutText)
HKL WINAPI user32.ActivateKeyboardLayout(_In_ HKL hkl,_In_ UINT Flags)
HKL WINAPI user32.GetKeyboardLayout(_In_ DWORD idThread)
HKL WINAPI user32.LoadKeyboardLayoutA(_In_ LPCTSTR pwszKLID,_In_ UINT Flags)
HKL WINAPI user32.LoadKeyboardLayout(_In_ LPCTSTR pwszKLID,_In_ UINT Flags)
HKL WINAPI user32.LoadKeyboardLayoutW(_In_ LPCTSTR pwszKLID,_In_ UINT Flags)
HLOCAL None None.Edit_GetHandle(HWND hwndCtl None)
HLOCAL WINAPI kernel32.LocalAlloc(_In_ UINT uFlags,_In_ SIZE_T uBytes)
HLOCAL WINAPI kernel32.LocalFree(_In_ HLOCAL hMem)
HLOCAL WINAPI kernel32.LocalHandle(_In_ LPCVOID pMem)
HLOCAL WINAPI kernel32.LocalReAlloc(_In_ HLOCAL hMem,_In_ SIZE_T uBytes,_In_ UINT uFlags)
HLOCAL WINAPI None.LocalDiscard([in] HLOCAL hlocMem)
HMENU WINAPI user32.CreateMenu(void None None)
HMENU WINAPI user32.CreatePopupMenu(void None None)
HMENU WINAPI user32.GetMenu(_In_ HWND hWnd)
HMENU WINAPI user32.GetSubMenu(_In_ HMENU hMenu,_In_ int nPos)
HMENU WINAPI user32.GetSystemMenu(_In_ HWND hWnd,_In_ BOOL bRevert)
HMENU WINAPI user32.LoadMenuA(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpMenuName)
HMENU WINAPI user32.LoadMenu(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpMenuName)
HMENU WINAPI user32.LoadMenuW(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpMenuName)
HMETAFILE None gdi32.CloseMetaFile(_In_ HDC hdc)
HMETAFILE None gdi32.CopyMetaFileA(_In_ HMETAFILE hmfSrc,_In_ LPCTSTR lpszFile)
HMETAFILE None gdi32.CopyMetaFile(_In_ HMETAFILE hmfSrc,_In_ LPCTSTR lpszFile)
HMETAFILE None gdi32.CopyMetaFileW(_In_ HMETAFILE hmfSrc,_In_ LPCTSTR lpszFile)
HMMIO None None.mmioOpen(LPTSTR szFilename None,LPMMIOINFO lpmmioinfo None,DWORD dwOpenFlags None)
HMMIO None winmm.mmioOpenA(LPTSTR szFilename None,LPMMIOINFO lpmmioinfo None,DWORD dwOpenFlags None)
HMMIO None winmm.mmioOpen(LPTSTR szFilename None,LPMMIOINFO lpmmioinfo None,DWORD dwOpenFlags None)
HMMIO None winmm.mmioOpenW(LPTSTR szFilename None,LPMMIOINFO lpmmioinfo None,DWORD dwOpenFlags None)
HMODULE WINAPI kernel32.GetModuleHandleA(_In_opt_ LPCTSTR lpModuleName)
HMODULE WINAPI kernel32.GetModuleHandle(_In_opt_ LPCTSTR lpModuleName)
HMODULE WINAPI kernel32.GetModuleHandleW(_In_opt_ LPCTSTR lpModuleName)
HMODULE WINAPI kernel32.LoadLibraryA(_In_ LPCTSTR lpFileName)
HMODULE WINAPI kernel32.LoadLibraryExA(_In_ LPCTSTR lpFileName,_Reserved_ HANDLE hFile,_In_ DWORD dwFlags)
HMODULE WINAPI kernel32.LoadLibraryEx(_In_ LPCTSTR lpFileName,_Reserved_ HANDLE hFile,_In_ DWORD dwFlags)
HMODULE WINAPI kernel32.LoadLibraryExW(_In_ LPCTSTR lpFileName,_Reserved_ HANDLE hFile,_In_ DWORD dwFlags)
HMODULE WINAPI kernel32.LoadLibrary(_In_ LPCTSTR lpFileName)
HMODULE WINAPI kernel32.LoadLibraryW(_In_ LPCTSTR lpFileName)
HMODULE WINAPI kernel32.LoadPackagedLibrary(_In_ LPCWSTR lpwLibFileName,_Reserved_ DWORD Reserved)
HMONITOR None user32.MonitorFromWindow(_In_ HWND hwnd,_In_ DWORD dwFlags)
HNETWORK WINAPI clusapi.OpenClusterNetworkEx(_In_ HCLUSTER hCluster,_In_opt_ LPCWSTR lpszNetworkName,_In_ DWORD dwDesiredAccess,_Out_opt_ DWORD *lpdwGrantedAccess)
HNETWORK WINAPI clusapi.OpenClusterNetwork(_In_ HCLUSTER hCluster,_In_ LPCWSTR lpszNetworkName)
HNODEENUMEX WINAPI clusapi.ClusterNodeOpenEnumEx(_In_ HNODE hNode,_In_ DWORD dwType,_In_opt_ PVOID pOptions)
HNODEENUM WINAPI clusapi.ClusterNodeOpenEnum(_In_ HNODE hNode,_In_ DWORD dwType)
HNODE WINAPI clusapi.AddClusterNode(_In_ HCLUSTER hCluster,_In_ PCWSTR lpszNodeName,_In_opt_ PCLUSTER_SETUP_PROGRESS_CALLBACK pfnProgressCallback,_In_opt_ PVOID pvCallbackArg)
HNODE WINAPI clusapi.OpenClusterNodeEx(_In_ HCLUSTER hCluster,_In_opt_ LPCWSTR lpszNodeName,_In_ DWORD dwDesiredAccess,_Out_opt_ DWORD *lpdwGrantedAccess)
HNODE WINAPI clusapi.OpenClusterNode(_In_ HCLUSTER hCluster,_In_ LPCWSTR lpszNodeName)
HOLEMENU None ole32.OleCreateMenuDescriptor(_In_ HMENU hmenuCombined,_In_ LPOLEMENUGROUPWIDTHS lpMenuWidths)
HPAINTBUFFER None uxtheme.BeginBufferedPaint(HDC hdcTarget None,const RECT *prcTarget,BP_BUFFERFORMAT dwFormat None,_In_ BP_PAINTPARAMS *pPaintParams,_Out_ HDC *phdc)
HPALETTE None gdi32.SelectPalette(_In_ HDC hdc,_In_ HPALETTE hpal,_In_ BOOL bForceBackground)
HPALETTE None msvfw32.DrawDibGetPalette(HDRAWDIB hdd None)
HPALETTE None None.EngCreatePalette(_In_ ULONG iMode,_In_ ULONG cColors,_In_ ULONG *pulColors,_In_ FLONG flRed,_In_ FLONG flGreen,_In_ FLONG flBlue)
HPEN None gdi32.CreatePen(_In_ int fnPenStyle,_In_ int nWidth,_In_ COLORREF crColor)
HPOWERNOTIFY WINAPI user32.RegisterPowerSettingNotification(_In_ HANDLE hRecipient,_In_ LPCGUID PowerSettingGuid,_In_ DWORD Flags)
HPOWERNOTIFY WINAPI user32.RegisterSuspendResumeNotification(_In_ HANDLE hRecipient,_In_ DWORD Flags)
HPROPERTY WINAPI nmapi.GetProperty(_In_ HPROTOCOL hProtocol,_In_ LPSTR PropertyName)
HPROPSHEETPAGE None comctl32.CreatePropertySheetPageA(LPCPROPSHEETPAGE lppsp None)
HPROPSHEETPAGE None comctl32.CreatePropertySheetPage(LPCPROPSHEETPAGE lppsp None)
HPROPSHEETPAGE None comctl32.CreatePropertySheetPageW(LPCPROPSHEETPAGE lppsp None)
HPROPSHEETPAGE None None.PropSheet_IndexToPage(HWND hPropSheetDlg None,int iPageIndex None)
HPROPSHEETPAGE WINAPI aclui.CreateSecurityPage(_In_ LPSECURITYINFO psi)
HPROTOCOL WINAPI nmapi.GetProtocolFromName(_In_ LPSTR ProtocolName)
HPSXA None shell32.SHCreatePropSheetExtArray(_In_ HKEY hkey,_In_opt_ PCWSTR pszSubkey,UINT max_iface None)
HRESENUM WINAPI clusapi.ClusterResourceOpenEnumEx(_In_ HCLUSTER hCluster,_In_opt_ LPCWSTR lpszProperties,_In_ DWORD cbProperties,_In_opt_ LPCWSTR lpszRoProperties,_In_ DWORD cbRoProperties,_In_ DWORD dwFlags)
HRESOURCE WINAPI clusapi.ClusterSharedVolumeSetSnapshotState(_In_ GUID guidSnapshotSet,_In_ LPCWSTR lpszVolumeName,_In_ CLUSTER_SHARED_VOLUME_SNAPSHOT_STATE state)
HRESOURCE WINAPI clusapi.CreateClusterResource(_In_ HGROUP hGroup,_In_ LPCWSTR lpszResourceName,_In_ LPCWSTR lpszResourceType,_In_ DWORD dwFlags)
HRESOURCE WINAPI clusapi.OpenClusterResourceEx(_In_ HCLUSTER hCluster,_In_opt_ LPCWSTR lpszResourceName,_In_ DWORD dwDesiredAccess,_Out_opt_ DWORD *lpdwGrantedAccess)
HRESOURCE WINAPI clusapi.OpenClusterResource(_In_ HCLUSTER hCluster,_In_ LPCWSTR lpszResourceName)
HRESOURCE WINAPI resutils.ResUtilGetResourceDependencyByClass(_In_ HCLUSTER hCluster,_In_ HANDLE hSelf,_In_ PCLUS_RESOURCE_CLASS_INFO prci,_In_ BOOL bRecurse)
HRESOURCE WINAPI resutils.ResUtilGetResourceDependencyByClass(_In_ HCLUSTER hCluster,_In_ HANDLE hSelf,_In_ PCLUS_RESOURCE_CLASS_INFO prci,_In_ BOOL bRecurse,_In_ DWORD dwDesiredAccess)
HRESOURCE WINAPI resutils.ResUtilGetResourceDependencyByName(_In_ HCLUSTER hCluster,_In_ HANDLE hSelf,_In_ LPCWSTR lpszResourceType,_In_ BOOL bRecurse)
HRESOURCE WINAPI resutils.ResUtilGetResourceDependencyByName(_In_ HCLUSTER hCluster,_In_ HANDLE hSelf,_In_ LPCWSTR lpszResourceType,_In_ BOOL bRecurse,_In_ DWORD dwDesiredAccess)
HRESOURCE WINAPI resutils.ResUtilGetResourceDependencyEx(_In_ HANDLE hSelf,_In_ LPCWSTR lpszResourceType,_In_ DWORD dwDesiredAccess)
HRESOURCE WINAPI resutils.ResUtilGetResourceNameDependency(_In_ LPCWSTR lpszResourceName,_In_ LPCWSTR lpszResourceType)
HRESULT APIENTRY None.MQBeginTransaction(ITransaction ** ppTransaction)
HRESULT APIENTRY None.MQCloseCursor(HANDLE hCursor None)
HRESULT APIENTRY None.MQCloseQueue(QUEUEHANDLE hQueue None)
HRESULT APIENTRY None.MQCreateCursor(QUEUEHANDLE hQueue None,PHANDLE phCursor None)
HRESULT APIENTRY None.MQCreateQueue(PSECURITY_DESCRIPTOR pSecurityDescriptor None,MQQUEUEPROPS * pQueueProps,LPWSTR lpwcsFormatName None,LPDWORD lpdwFormatNameLength None)
HRESULT APIENTRY None.MQDeleteQueue(LPCWSTR lpwcsFormatName None)
HRESULT APIENTRY None.MQGetOverlappedResult(LPOVERLAPPED lpOverlapped None)
HRESULT APIENTRY None.MQGetPrivateComputerInformation(LPCWSTR lpwcsComputerName None,MQPRIVATEPROPS * pPrivateProps)
HRESULT APIENTRY None.MQGetQueueProperties(LPCWSTR lpwcsFormatName None,MQQUEUEPROPS * pQueueProps)
HRESULT APIENTRY None.MQGetQueueSecurity(LPCWSTR lpwcsFormatName None,SECURITY_INFORMATION SecurityInformation None,PSECURITY_DESCRIPTOR pSecurityDescriptor None,DWORD nLength None,LPDWORD lpnLengthNeeded None)
HRESULT APIENTRY None.MQGetSecurityContextEx(LPVOID lpCertBuffer None,DWORD dwCertBufferLength None,HANDLE * phSecurityContext)
HRESULT APIENTRY None.MQGetSecurityContext(LPVOID lpCertBuffer None,DWORD dwCertBufferLength None,HANDLE * phSecurityContext)
HRESULT APIENTRY None.MQHandleToFormatName(QUEUEHANDLE hQueue None,LPWSTR lpwcsFormatName None,LPDWORD lpdwCount None)
HRESULT APIENTRY None.MQInstanceToFormatName(GUID * pGUID,LPWSTR lpwcsFormatName None,LPDWORD lpdwCount None)
HRESULT APIENTRY None.MQLocateBegin(LPCWSTR lpwcsContext None,MQRESTRICTION * pRestriction,MQCOLUMNSET * pColumns,MQSORTSET * pSort,PHANDLE phEnum None)
HRESULT APIENTRY None.MQLocateEnd(HANDLE hEnum None)
HRESULT APIENTRY None.MQLocateNext(HANDLE hEnum None,DWORD * pcProps,MQPROPVARIANT aPropVar[] None)
HRESULT APIENTRY None.MQMarkMessageRejected(QUEUEHANDLE hQueue None,ULONGLONG ullLookupId None)
HRESULT APIENTRY None.MQOpenQueue(LPCWSTR lpwcsFormatName None,DWORD dwAccess None,DWORD dwShareMode None,QUEUEHANDLE * phQueue)
HRESULT APIENTRY None.MQPathNameToFormatName(LPCWSTR lpwcsPathName None,LPWSTR lpwcsFormatName None,LPDWORD lpdwCount None)
HRESULT APIENTRY None.MQPurgeQueue(HANDLE hQueue None)
HRESULT APIENTRY None.MQReceiveMessageByLookupId(QUEUEHANDLE hSource None,ULONGLONG ullLookupId None,DWORD dwLookupAction None,MQMSGPROPS * pMessageProps,LPOVERLAPPED lpOverlapped None,PMQRECEIVECALLBACK fnReceiveCallback None,ITransaction * pTransaction)
HRESULT APIENTRY None.MQReceiveMessage(QUEUEHANDLE hSource None,DWORD dwTimeout None,DWORD dwAction None,MQMSGPROPS * pMessageProps,LPOVERLAPPED lpOverlapped None,PMQRECEIVECALLBACK fnReceiveCallback None,HANDLE hCursor None,ITransaction * pTransaction)
HRESULT APIENTRY None.MQRegisterCertificate(DWORD dwFlags None,PVOID lpCertBuffer None,DWORD dwCertBufferLength None)
HRESULT APIENTRY None.MQSendMessage(QUEUEHANDLE hDestinationQueue None,MQMSGPROPS * pMessageProps,ITransaction * pTransaction)
HRESULT APIENTRY None.MQSetQueueProperties(LPCWSTR lpwcsFormatName None,MQQUEUEPROPS * pQueueProps)
HRESULT APIENTRY None.MQSetQueueSecurity(LPCWSTR lpwcsFormatName None,SECURITY_INFORMATION SecurityInformation None,PSECURITY_DESCRIPTOR pSecurityDescriptor None)
HRESULT CALLBACK input.QueryLayoutOrTipString(_In_ LPCWSTR psz,_In_ DWORD dwFlags)
HRESULT CALLBACK input.QueryLayoutOrTipStringUserReg(_In_ LPCWSTR pszUserReg,_In_ LPCWSTR pszSystemReg,_In_ LPCWSTR pszSoftwareReg,_In_ LPCWSTR psz,_In_ DWORD dwFlags)
HRESULT CALLBACK msctf.InitLocalMsCtfMonitor(_In_ DWORD dwFlags)
HRESULT CALLBACK msctf.TF_CreateCategoryMgr(_Out_ ITfCategoryMgr **ppcat)
HRESULT CALLBACK None.ComPlusCompleteCbbSetup(_In_ IUnknown *pUnk,_In_ HANDLE hSetupLogFile)
HRESULT CALLBACK None.CreateSessionCalculator(const WS_OPERATION_CONTEXT* context,void** userChannelState None,const WS_ASYNC_CONTEXT* asyncContext,WS_ERROR* error None)
HRESULT CALLBACK None.FreeSessionCalculator(const WS_OPERATION_CONTEXT* context,const WS_ASYNC_CONTEXT* asyncContext)
HRESULT CALLBACK None.MessageRecieved(const WS_OPERATION_CONTEXT* context,const WS_ASYNC_CONTEXT* asyncContext,WS_ERROR* error None)
HRESULT CALLBACK None.PFN_CRYPT_XML_DATA_PROVIDER_CLOSE(_Inout_ void *pvCallbackState)
HRESULT CALLBACK None.PFN_CRYPT_XML_DATA_PROVIDER_READ(_Inout_ void *pvCallbackState,_Out_ BYTE *pbData,_In_ ULONG cbData,_Out_ ULONG *pcbRead)
HRESULT CALLBACK None.PFN_CRYPT_XML_WRITE_CALLBACK(_Inout_ void *pvCallbackState,_In_ BYTE pbData,ULONG cbData None)
HRESULT CALLBACK None.ProposeVideoPrivateFormat(HANDLE hDevice None,D3DFORMAT* pFormat None)
HRESULT CALLBACK None.TaskDialogCallbackProc(_In_ HWND hwnd,_In_ UINT uNotification,_In_ WPARAM wParam,_In_ LPARAM lParam,_In_ LONG_PTR dwRefData)
HRESULT CALLBACK shell32.DllGetVersion(DLLVERSIONINFO *pdvi None)
HRESULT __cdecl comsvcs.GetObjectContext(_Out_ IObjectContext **ppInstanceContext)
HRESULT __cdecl comsvcs.RecycleSurrogate(_In_ long lReasonCode)
HRESULT __cdecl mtxdm.GetDispenserManager(_Out_ IDispenserManager **ppIDispenserManager)
HRESULT NET_API_FUNCTION netapi32.NetGetAadJoinInformation(_In_opt_ LPCWSTR pcszTenantId,_Out_ PDSREG_JOIN_INFO *ppJoinInfo)
HRESULT None activeds.AbandonSearch([in] ADS_SEARCH_HANDLE hSearchHandle)
HRESULT None activeds.ADsGetLastError(_Out_ LPDWORD lpError,_Out_ LPWSTR lpErrorBuf,_In_ DWORD dwErrorBufLen,_Out_ LPWSTR lpNameBuf,_In_ DWORD dwNameBufLen)
HRESULT None activeds.ADsOpenObject(_In_ LPCWSTR lpszPathName,_In_ LPCWSTR lpszUserName,_In_ LPCWSTR lpszPassword,_In_ DWORD dwReserved,_In_ REFIID riid,_Out_ VOID **ppObject)
HRESULT None activeds.BinarySDToSecurityDescriptor(_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_Out_ VARIANT *pVarsec,_In_ LPCWSTR pszServerName,_In_ LPCWSTR userName,_In_ LPCWSTR passWord,_In_ DWORD dwFlags)
HRESULT None activeds.ChangePassword(IADsUser *pUser None,LPWSTR oldPasswd None,LPWSTR newPasswd None)
HRESULT None activeds.FreeColumn([in] PADS_SEARCH_COLUMN pSearchColumn)
HRESULT None activeds.GetEx([in] BSTR bstrName,[out] VARIANT *pvProp)
HRESULT None activeds.Get([in] BSTR bstrName,[out] VARIANT *pvProp)
HRESULT None activeds.GetInfoEx([in] VARIANT vProperties,[in] LONG lnReserved)
HRESULT None activeds.get__NewEnum([out] IUnknown **ppEnumerator)
HRESULT None activeds.OpenDSObject([in] BSTR lpszDNName,[in] BSTR lpszUserName,[in] BSTR lpszPassword,[in] LONG lnReserved,[out] IDispatch **ppOleDsObj)
HRESULT None activeds.PrintJobs([out] IADsCollection **ppPrintJobs)
HRESULT None activeds.PutEx([in] LONG lnControlCode,[in] BSTR bstrName,[in] VARIANT vProp)
HRESULT None activeds.Resources([out] IADsCollection **ppResources)
HRESULT None activeds.SecurityDescriptorToBinarySD(_In_ VARIANT vVarSecDes,_Out_ PSECURITY_DESCRIPTOR *ppSecurityDescriptor,_Out_ PDWORD pdwSDLength,_In_ LPCWSTR pszServerName,_In_ LPCWSTR userName,_In_ LPCWSTR passWord,_In_ DWORD dwFlags)
HRESULT None activeds.SetObjectAttributes([in] PADS_ATTR_INFO pAttributeEntries,[in] DWORD dwNumberAttributes,[out] DWORD *pdwNumAttributesModified)
HRESULT None activeds.SetOption(LONG lnOption None,VARIANT vValue None)
HRESULT None activeds.SetPassword([in] BSTR bstrNewPassword)
HRESULT None activeds.SetServicePassword(LPCWSTR pwszADsPath None,LPCWSTR None None,pwszPasword None None)
HRESULT None activeds.Status([out] IDispatch **ppObject)
HRESULT None actxprxy.EnumDiscMasterFormats([out] IEnumDiscMasterFormats **ppEnum)
HRESULT None actxprxy.EnumDiscRecorders([out] IEnumDiscRecorders **ppEnum)
HRESULT None actxprxy.GetActiveDiscRecorder([out] IDiscRecorder **ppRecorder)
HRESULT None actxprxy.GetPath([out] BSTR *pbstrPath)
HRESULT None actxprxy.GetRecorderProperties([out] IPropertyStorage **pPropStg)
HRESULT None actxprxy.GetRecorderState([out] ULONG *pulDevStateFlags)
HRESULT None actxprxy.QueryMediaInfo([out] byte *pbsessions,[out] byte *pblasttrack,[out] ULONG *ulstartaddress,[out] ULONG *ulnextwritable,[out] ULONG *ulfreeblocks)
HRESULT None authui.GetAccountOptions([out] CREDENTIAL_PROVIDER_ACCOUNT_OPTIONS *credentialProviderAccountOptions)
HRESULT None authui.GetCount([out] DWORD *userCount)
HRESULT None azroles.AccessCheck([in] BSTR bstrObjectName,[in] VARIANT varScopeNames,[in] VARIANT varOperations,[in None None,optional] VARIANT varParameterNames,[in None None,optional] VARIANT varParameterValues,[in None None,optional] VARIANT varInterfaceNames,[in None None,optional] VARIANT varInterfaceFlags,[in None None,optional] VARIANT varInterfaces,[out] VARIANT *pvarResults)
HRESULT None azroles.AddApplicationGroups([in] VARIANT varApplicationGroups)
HRESULT None azroles.AddAppMember([in] BSTR bstrProp,[in None None,optional] VARIANT varReserved)
HRESULT None azroles.AddAppNonMember([in] BSTR bstrProp,[in None None,optional] VARIANT varReserved)
HRESULT None azroles.AddDelegatedPolicyUser([in] BSTR bstrDelegatedPolicyUser,[in None None,optional] VARIANT varReserved)
HRESULT None azroles.AddDelegatedPolicyUserName([in] BSTR bstrDelegatedPolicyUser,[in None None,optional] VARIANT varReserved)
HRESULT None azroles.AddMember([in] BSTR bstrProp,[in None None,optional] VARIANT varReserved)
HRESULT None azroles.AddMemberName([in] BSTR bstrProp,[in None None,optional] VARIANT varReserved)
HRESULT None azroles.AddNonMember([in] BSTR bstrProp,[in None None,optional] VARIANT varReserved)
HRESULT None azroles.AddNonMemberName([in] BSTR bstrProp,[in None None,optional] VARIANT varReserved)
HRESULT None azroles.AddOperation([in] BSTR bstrOp,[in None None,optional] VARIANT varReserved)
HRESULT None azroles.AddOperation([in] BSTR bstrProp,[in None None,optional] VARIANT varReserved)
HRESULT None azroles.AddPolicyAdministrator([in] BSTR bstrAdmin,[in None None,optional] VARIANT varReserved)
HRESULT None azroles.AddPolicyAdministratorName([in] BSTR bstrAdmin,[in None None,optional] VARIANT varReserved)
HRESULT None azroles.AddPolicyReader([in] BSTR bstrReader,[in None None,optional] VARIANT varReserved)
HRESULT None azroles.AddPolicyReaderName([in] BSTR bstrReader,[in None None,optional] VARIANT varReserved)
HRESULT None azroles.AddPropertyItem([in] LONG lPropId,[in None None,optional] VARIANT varReserved)
HRESULT None azroles.AddPropertyItem([in] LONG lPropId,[in] VARIANT varProp,[in None None,optional] VARIANT varReserved)
HRESULT None azroles.AddRoleDefinition([in] BSTR bstrRoleDefinition)
HRESULT None azroles.AddTask([in] BSTR bstrProp,[in None None,optional] VARIANT varReserved)
HRESULT None azroles.AddTask([in] BSTR bstrTask,[in None None,optional] VARIANT varReserved)
HRESULT None azroles.CloseApplication([in] BSTR bstrApplicationName,[in] LONG lFlag)
HRESULT None azroles.CreateApplicationGroup([in] BSTR bstrGroupName,[in None None,optional] VARIANT varReserved,[out] IAzApplicationGroup **ppGroup)
HRESULT None azroles.CreateApplication([in] BSTR bstrApplicationName,[in None None,optional] VARIANT varReserved,[out] IAzApplication **ppApplication)
HRESULT None azroles.CreateOperation([in] BSTR bstrOperationName,[in None None,optional] VARIANT varReserved,[out] IAzOperation **ppOperation)
HRESULT None azroles.CreateRoleAssignment([in] BSTR bstrRoleAssignmentName,[out] IAzRoleAssignment **ppRoleAssignment)
HRESULT None azroles.CreateRoleDefinition([in] BSTR bstrRoleDefinitionName,[out] IAzRoleDefinition **ppRoleDefinitions)
HRESULT None azroles.CreateRole([in] BSTR bstrRoleName,[in None None,optional] VARIANT varReserved,[out] IAzRole **ppRole)
HRESULT None azroles.CreateScope2([in] BSTR bstrScopeName,[out] IAzScope2 **ppScope2)
HRESULT None azroles.CreateScope([in] BSTR bstrScopeName,[in None None,optional] VARIANT varReserved,[out] IAzScope **ppScope)
HRESULT None azroles.CreateTask([in] BSTR bstrTaskName,[in None None,optional] VARIANT varReserved,[out] IAzTask **ppTask)
HRESULT None azroles.DeleteApplicationGroup([in] BSTR bstrGroupName,[in None None,optional] VARIANT varReserved)
HRESULT None azroles.DeleteApplication([in] BSTR bstrApplicationName,[in None None,optional] VARIANT varReserved)
HRESULT None azroles.DeleteAppMember([in] BSTR bstrProp,[in None None,optional] VARIANT varReserved)
HRESULT None azroles.DeleteAppNonMember([in] BSTR bstrProp,[in None None,optional] VARIANT varReserved)
HRESULT None azroles.DeleteDelegatedPolicyUser([in] BSTR bstrDelegatedPolicyUser,[in None None,optional] VARIANT varReserved)
HRESULT None azroles.DeleteDelegatedPolicyUserName([in] BSTR bstrDelegatedPolicyUser,[in None None,optional] VARIANT varReserved)
HRESULT None azroles.Delete([in None None,optional] VARIANT varReserved)
HRESULT None azroles.DeleteMember([in] BSTR bstrProp,[in None None,optional] VARIANT varReserved)
HRESULT None azroles.DeleteMemberName([in] BSTR bstrProp,[in None None,optional] VARIANT varReserved)
HRESULT None azroles.DeleteNonMember([in] BSTR bstrProp,[in None None,optional] VARIANT varReserved)
HRESULT None azroles.DeleteNonMemberName([in] BSTR bstrProp,[in None None,optional] VARIANT varReserved)
HRESULT None azroles.DeleteOperation([in] BSTR bstrOperationName,[in None None,optional] VARIANT varReserved)
HRESULT None azroles.DeleteOperation([in] BSTR bstrOp,[in None None,optional] VARIANT varReserved)
HRESULT None azroles.DeleteOperation([in] BSTR bstrProp,[in None None,optional] VARIANT varReserved)
HRESULT None azroles.DeletePolicyAdministrator([in] BSTR bstrAdmin,[in None None,optional] VARIANT varReserved)
HRESULT None azroles.DeletePolicyAdministratorName([in] BSTR bstrAdmin,[in None None,optional] VARIANT varReserved)
HRESULT None azroles.DeletePolicyReader([in] BSTR bstrReader,[in None None,optional] VARIANT varReserved)
HRESULT None azroles.DeletePolicyReaderName([in] BSTR bstrReader,[in None None,optional] VARIANT varReserved)
HRESULT None azroles.DeletePropertyItem([in] LONG lPropId,[in] VARIANT varProp,[in None None,optional] VARIANT varReserved)
HRESULT None azroles.DeleteRoleDefinition([in] BSTR bstrRoleDefinition)
HRESULT None azroles.DeleteRole([in] BSTR bstrRoleName,[in None None,optional] VARIANT varReserved)
HRESULT None azroles.DeleteScope2([in] BSTR bstrScopeName)
HRESULT None azroles.DeleteScope([in] BSTR bstrScopeName,[in None None,optional] VARIANT varReserved)
HRESULT None azroles.DeleteTask([in] BSTR bstrProp,[in None None,optional] VARIANT varReserved)
HRESULT None azroles.DeleteTask([in] BSTR bstrTaskName,[in None None,optional] VARIANT varReserved)
HRESULT None azroles.get_ApplicationGroups([out] IAzApplicationGroups **ppGroupCollection)
HRESULT None azroles.get_Applications([out] IAzApplications **ppAppCollection)
HRESULT None azroles.get_AppMembers([out] VARIANT *pvarProp)
HRESULT None azroles.get_AppNonMembers([out] VARIANT *pvarProp)
HRESULT None azroles.get_BizrulesWritable([out] BOOL *pfProp)
HRESULT None azroles.GetBusinessRuleString([out] BSTR *pbstrBusinessRuleString)
HRESULT None azroles.get_CanBeDelegated([out] BOOL *pfProp)
HRESULT None azroles.get_Count(LONG *plCount None)
HRESULT None azroles.get_DelegatedPolicyUsersName([out] VARIANT *pvarDelegatedPolicyUsers)
HRESULT None azroles.get_DelegatedPolicyUsers([out] VARIANT *pvarDelegatedPolicyUsers)
HRESULT None azroles.get_Item([in] LONG Index,VARIANT *pvarObtPtr None)
HRESULT None azroles.get_MembersName([out] VARIANT *pvarProp)
HRESULT None azroles.get_Members([out] VARIANT *pvarProp)
HRESULT None azroles.get__NewEnum(LPUNKNOWN *ppEnumPtr None)
HRESULT None azroles.get_NewEnum(LPUNKNOWN *ppEnumPtr None)
HRESULT None azroles.get_NonMembersName([out] VARIANT *pvarProp)
HRESULT None azroles.get_NonMembers([out] VARIANT *pvarProp)
HRESULT None azroles.get_Operations([out] IAzOperations **ppOperationCollection)
HRESULT None azroles.get_Operations([out] VARIANT *pvarProp)
HRESULT None azroles.get_PolicyAdministratorsName([out] VARIANT *pvarAdmins)
HRESULT None azroles.get_PolicyAdministrators([out] VARIANT *pvarAdmins)
HRESULT None azroles.get_PolicyReadersName([out] VARIANT *pvarReaders)
HRESULT None azroles.get_PolicyReaders([out] VARIANT *pvarReaders)
HRESULT None azroles.GetProperty([in] LONG lPropId,[in None None,optional] VARIANT varReserved,[out] VARIANT *pvarProp)
HRESULT None azroles.get_RoleAssignments([out] IAzRoleAssignments **ppRoleAssignments)
HRESULT None azroles.get_RoleDefinitions([out] IAzRoleDefinitions **ppRoleDefs)
HRESULT None azroles.GetRoles([in None None,optional] BSTR bstrScopeName,[out] VARIANT *pvarRoleNames)
HRESULT None azroles.get_Roles([out] IAzRoles **ppRoleCollection)
HRESULT None azroles.get_Scopes([out] IAzScopes **ppScopeCollection)
HRESULT None azroles.get_TargetMachine([out] BSTR *pbstrDescription)
HRESULT None azroles.get_Tasks([out] IAzTasks **ppTaskCollection)
HRESULT None azroles.get_Tasks([out] VARIANT *pvarProp)
HRESULT None azroles.get_UserCanonical([out] BSTR *pbstrProp)
HRESULT None azroles.get_UserDisplay([out] BSTR *pbstrProp)
HRESULT None azroles.get_UserDn([out] BSTR *pbstrProp)
HRESULT None azroles.get_UserDnsSamCompat([out] BSTR *pbstrProp)
HRESULT None azroles.get_UserGuid([out] BSTR *pbstrProp)
HRESULT None azroles.get_UserSamCompat([out] BSTR *pbstrProp)
HRESULT None azroles.get_Writable([out] BOOL *pfProp)
HRESULT None azroles.InitializeClientContext2([in] BSTR IdentifyingString,[in None None,optional] VARIANT varReserved,[out] IAzClientContext2 **ppClientContext2)
HRESULT None azroles.InitializeClientContextFromName([in] BSTR ClientName,[in None None,optional] BSTR DomainName,[in None None,optional] VARIANT varReserved,[out] IAzClientContext **ppClientContext)
HRESULT None azroles.InitializeClientContextFromStringSid([in] BSTR SidString,[in] LONG lOptions,[in None None,optional] VARIANT varReserved,[out] IAzClientContext **ppClientContext)
HRESULT None azroles.InitializeClientContextFromToken2([in] ULONG ulTokenHandleLowPart,[in] ULONG ulTokenHandleHighPart,[in None None,optional] VARIANT varReserved,[out] IAzClientContext2 **ppClientContext2)
HRESULT None azroles.InitializeClientContextFromToken([in] ULONGLONG ullTokenHandle,[in None None,optional] VARIANT varReserved,[out] IAzClientContext **ppClientContext)
HRESULT None azroles.Initialize([in] LONG lFlags,[in] BSTR bstrPolicyURL,[in None None,optional] VARIANT varReserved)
HRESULT None azroles.OpenApplicationGroup([in] BSTR bstrGroupName,[in None None,optional] VARIANT varReserved,[out] IAzApplicationGroup **ppGroup)
HRESULT None azroles.OpenApplication([in] BSTR bstrApplicationName,[in None None,optional] VARIANT varReserved,[out] IAzApplication **ppApplication)
HRESULT None azroles.OpenOperation([in] BSTR bstrOperationName,[in None None,optional] VARIANT varReserved,[out] IAzOperation **ppOperation)
HRESULT None azroles.OpenRoleDefinition([in] BSTR bstrRoleDefinitionName,[out] IAzRoleDefinition **ppRoleDefinitions)
HRESULT None azroles.OpenRole([in] BSTR bstrRoleName,[in None None,optional] VARIANT varReserved,[out] IAzRole **ppRole)
HRESULT None azroles.OpenScope2([in] BSTR bstrScopeName,[out] IAzScope2 **ppScope2)
HRESULT None azroles.OpenScope([in] BSTR bstrScopeName,[in None None,optional] VARIANT varReserved,[out] IAzScope **ppScope)
HRESULT None azroles.OpenTask([in] BSTR bstrTaskName,[in None None,optional] VARIANT varReserved,[out] IAzTask **ppTask)
HRESULT None azroles.put_ApplicationData([in] BSTR bstrApplicationData)
HRESULT None azroles.put_ApplyStoreSacl([in] BOOL bApplyStoreSacl)
HRESULT None azroles.put_ApplyStoreSacl([in] BOOL bProp)
HRESULT None azroles.put_AuthzInterfaceClsid([in] BSTR bstrProp)
HRESULT None azroles.put_BizRuleLanguage([in] BSTR bstrProp)
HRESULT None azroles.put_Description([in] BSTR bstrDescription)
HRESULT None azroles.put_DomainTimeout([in] LONG lProp)
HRESULT None azroles.put_GenerateAudits([in] BOOL bProp)
HRESULT None azroles.put_LdapQuery([in] BSTR bstrProp)
HRESULT None azroles.put_MaxScriptEngines([in] LONG lProp)
HRESULT None azroles.put_Name([in] BSTR bstrName)
HRESULT None azroles.put_OperationID([in] LONG lProp)
HRESULT None azroles.put_RoleForAccessCheck([in] BSTR bstrProp)
HRESULT None azroles.put_ScriptEngineTimeout([in] LONG lProp)
HRESULT None azroles.put_Type([in] LONG lProp)
HRESULT None azroles.put_Version([in] BSTR bstrProp)
HRESULT None azroles.SetProperty([in] LONG lPropId,[in] VARIANT varProp,[in None None,optional] VARIANT varReserved)
HRESULT None azroles.Submit([in] LONG lFlags,[in None None,optional] VARIANT varReserved)
HRESULT None azroles.Submit([in None None,optional] LONG lFlags,[in None None,optional] VARIANT varReserved)
HRESULT None azroles.UpdateCache([in None None,optional] VARIANT varReserved)
HRESULT None bitsprx2.GetReplyProgress([out] BG_JOB_REPLY_PROGRESS *pProgress)
HRESULT None bitsprx3.GetFileACLFlags([out] DWORD *Flags)
HRESULT None browseui.GetDropDownStatus([out] DWORD *pdwFlags,[out] LPWSTR *ppwszString)
HRESULT None certadm.CertSrvBackupClose(_In_ HCSBC hbc)
HRESULT None certadm.CertSrvBackupEnd(_In_ HCSBC hbc)
HRESULT None certadm.CertSrvBackupGetBackupLogs(_In_ HCSBC hbc,_Out_ WCHAR **ppwszzBackupLogFiles,_Out_ DWORD *pcbSize)
HRESULT None certadm.CertSrvBackupGetBackupLogsW(_In_ HCSBC hbc,_Out_ WCHAR **ppwszzBackupLogFiles,_Out_ DWORD *pcbSize)
HRESULT None certadm.CertSrvBackupGetDatabaseNames(_In_ HCSBC hbc,_Out_ WCHAR **ppwszzAttachmentInformation,_Out_ DWORD *pcbSize)
HRESULT None certadm.CertSrvBackupGetDatabaseNamesW(_In_ HCSBC hbc,_Out_ WCHAR **ppwszzAttachmentInformation,_Out_ DWORD *pcbSize)
HRESULT None certadm.CertSrvBackupGetDynamicFileList(_In_ HCSBC hbc,_Out_ WCHAR **ppwszzFileList,_Out_ DWORD *pcbSize)
HRESULT None certadm.CertSrvBackupGetDynamicFileListW(_In_ HCSBC hbc,_Out_ WCHAR **ppwszzFileList,_Out_ DWORD *pcbSize)
HRESULT None certadm.CertSrvBackupRead(_In_ HCSBC hbc,_Out_ VOID *pvBuffer,_In_ DWORD cbBuffer,_Out_ DWORD *pcbRead)
HRESULT None certadm.CertSrvBackupTruncateLogs(_In_ HCSBC hbc)
HRESULT None certadm.CertSrvRestoreEnd(_In_ HCSBC hbc)
HRESULT None certadm.CertSrvRestoreGetDatabaseLocations(_In_ HCSBC hbc,_Out_ WCHAR **ppwszzDatabaseLocationList,_Out_ DWORD *pcbSize)
HRESULT None certadm.CertSrvRestoreGetDatabaseLocationsW(_In_ HCSBC hbc,_Out_ WCHAR **ppwszzDatabaseLocationList,_Out_ DWORD *pcbSize)
HRESULT None certadm.CertSrvRestoreRegisterComplete(_In_ HCSBC hbc,_In_ HRESULT hrRestoreState)
HRESULT None certadm.Clone([out] IEnumCERTVIEWCOLUMN **ppenum)
HRESULT None certadm.Clone([out] IEnumCERTVIEWEXTENSION **ppenum)
HRESULT None certadm.EnumCertViewColumn([out] IEnumCERTVIEWCOLUMN **ppenum)
HRESULT None certadm.GetAllProperties([out] VARIANT *pVarProperties)
HRESULT None certadm.get_CACertificate([out] VARIANT *pVal)
HRESULT None certadm.get_CSPName([out] BSTR *pVal)
HRESULT None certadm.GetDisplayName([out] BSTR *pstrOut)
HRESULT None certadm.get_ErrorCode([out] ULONG *pVal)
HRESULT None certadm.GetFlags([out] LONG *pFlags)
HRESULT None certadm.get_Identifier([out] BSTR *pVal)
HRESULT None certadm.get_KeySpec([out] ULONG *pVal)
HRESULT None certadm.GetMaxIndex([out] LONG *pIndex)
HRESULT None certadm.GetMaxLength([out] LONG *pMaxLength)
HRESULT None certadm.get_Modified([out] VARIANT_BOOL *pVal)
HRESULT None certadm.GetName([out] BSTR *pstrOut)
HRESULT None certadm.get_Name([out] BSTR *pVal)
HRESULT None certadm.get__NewEnum([out None None,optional] IUnknown **ppVal)
HRESULT None certadm.get_OCSPCAConfigurationCollection([out] IOCSPCAConfigurationCollection **pVal)
HRESULT None certadm.get_OCSPServiceProperties([out] IOCSPPropertyCollection **ppVal)
HRESULT None certadm.GetRevocationReason([out] LONG *pReason)
HRESULT None certadm.GetType([out] LONG *pType)
HRESULT None certadm.IsIndexed([out] LONG *pIndexed)
HRESULT None certadm.Next([out] LONG *pIndex)
HRESULT None certadm.OpenView([out] IEnumCERTVIEWROW **ppenum)
HRESULT None certadm.SetResultColumnCount([in] LONG cResultColumn)
HRESULT None certadm.SetResultColumn([in] LONG ColumnIndex)
HRESULT None certcli.EnumerateAttributes([out] BSTR *pstrAttributeName)
HRESULT None certcli.EnumerateExtensions([out] BSTR *pstrExtensionName)
HRESULT None certcli.GetCertificateExtensionFlags([out] LONG *pExtFlags)
HRESULT None certcli.GetDispositionMessage([out] BSTR *pstrDispositionMessage)
HRESULT None certcli.GetErrorMessageText([in] LONG hrMessage,[in] LONG Flags,[out] BSTR *pstrErrorMessageText)
HRESULT None certcli.GetIssuedCertificate2([in] BSTR strConfig,[in] BSTR strRequestId,[in] BSTR strSerialNumber,[out None None,retval] LONG *pDisposition)
HRESULT None certcli.GetLastStatus([out] LONG *pStatus)
HRESULT None certcli.GetRefreshPolicy([out None None,retval] VARIANT_BOOL *pValue)
HRESULT None certcli.GetRequestId([out] LONG *pRequestId)
HRESULT None certcli.GetRequestIdString([out None None,retval] BSTR *pstrRequestId)
HRESULT None certcli.Next([out] LONG *pIndex)
HRESULT None certcli.SetCredential([in] LONG hWnd,[in] X509EnrollmentAuthFlags AuthType,[in] BSTR strCredential,[in] BSTR strPassword)
HRESULT None certenc.Encode([out] BSTR *pbstrBinary)
HRESULT None certenc.GetCount([out] LONG *pCount)
HRESULT None certenc.GetNameChoice([in] LONG DistPointIndex,[in] LONG NameIndex,[out] LONG *pNameChoice)
HRESULT None certenc.GetNameCount([out] LONG *pNameCount)
HRESULT None certenc.GetStringType([out] LONG *pStringType)
HRESULT None certenroll.get_DefaultContainer([out] VARIANT_BOOL *pValue)
HRESULT None certenroll.get_DisplayName([out] BSTR *pValue)
HRESULT None certenroll.get_EnrollmentStatus([out] IX509EnrollmentStatus **ppValue)
HRESULT None certenroll.get_MinorVersion([out] LONG *pValue)
HRESULT None certenroll.get_Opened([out] VARIANT_BOOL *pValue)
HRESULT None certenroll.get_PrivateKey([out] IX509PrivateKey **ppValue)
HRESULT None certenroll.get_UniqueContainerName([out] BSTR *pValue)
HRESULT None certenroll.get_UserSamName([out] BSTR *pValue)
HRESULT None certocm.get_Count([out] LONG *pVal)
HRESULT None certocm.get_ErrorString([out] BSTR *pVal)
HRESULT None certocm.get_MSCEPErrorId([out] LONG *pVal)
HRESULT None certocm.get__NewEnum([out] IUnknown **ppVal)
HRESULT None certocm.GetProviderNameList([out] VARIANT *pVal)
HRESULT None certocm.IsMSCEPStoreEmpty([out] VARIANT_BOOL *pbEmpty)
HRESULT None cimwin32.BeginEnumeration([in] LONG lEnumFlags)
HRESULT None cimwin32.BeginMethodEnumeration([in] LONG lEnumFlags)
HRESULT None cimwin32.Clone([out] IWbemClassObject **ppCopy)
HRESULT None cimwin32.DeleteMethod([in] LPCWSTR wszName)
HRESULT None cimwin32.Get([in] LPCWSTR wszName,[in] LONG lFlags,[out] VARIANT *pVal,[out None None,optional] CIMTYPE *pvtType,[out None None,optional] LONG *plFlavor)
HRESULT None cimwin32.GetMethod([in] LPCWSTR wszName,[in] LONG lFlags,[out] IWbemClassObject **ppInSignature,[out] IWbemClassObject **ppOutSignature)
HRESULT None cimwin32.GetMethodOrigin([in] LPCWSTR wszMethodName,[out] BSTR *pstrClassName)
HRESULT None cimwin32.GetMethodQualifierSet([in] LPCWSTR wszMethod,[out] IWbemQualifierSet **ppQualSet)
HRESULT None cimwin32.GetObjectText([in] LONG lFlags,[out] BSTR *pstrObjectText)
HRESULT None cimwin32.GetPropertyQualifierSet([in] LPCWSTR wszProperty,[out] IWbemQualifierSet **ppQualSet)
HRESULT None cimwin32.GetQualifierSet([out] IWbemQualifierSet **ppQualSet)
HRESULT None cimwin32.InheritsFrom([in] LPCWSTR wszAncestor)
HRESULT None cimwin32.Put([in] LPCWSTR wszName,[in] LONG lFlags,[in] VARIANT *pVal,[in] CIMTYPE vtType)
HRESULT None cimwin32.SpawnDerivedClass([in] LONG lFlags,[out] IWbemClassObject **ppNewClass)
HRESULT None cimwin32.SpawnInstance([in] LONG lFlags,[out] IWbemClassObject **ppNewInstance)
HRESULT None combase.CoGetInstanceFromFile(_In_opt_ COSERVERINFO *pServerInfo,_In_opt_ CLSID *pClsid,_In_opt_ IUnknown *punkOuter,_In_ DWORD dwClsCtx,_In_ DWORD grfMode,_In_ OLECHAR *pwszName,_In_ DWORD dwCount,_Inout_ MULTI_QI *pResults)
HRESULT None combase.RoGetActivationFactory(_In_ HSTRING activatableClassId,_In_ REFIID iid,_Out_ void **factory)
HRESULT None combase.RoRegisterActivationFactories(_In_ HSTRING *activatableClassIds,_In_ PFNGETACTIVATIONFACTORY *activationFactoryCallbacks,_In_ UINT32 count,_Out_ RO_REGISTRATION_COOKIE *cookie)
HRESULT None combase.WindowsPromoteStringBuffer(_In_ HSTRING_BUFFER bufferHandle,_Out_ HSTRING *string)
HRESULT None comctl32.Add([in] HBITMAP hbmImage,[in None None,optional] HBITMAP hbmMask,[out] int *pi)
HRESULT None comctl32.AddMasked([in] HBITMAP hbmImage,[in] COLORREF crMask,[out] int *pi)
HRESULT None comctl32.BeginDrag([in] int iTrack,[in] int dxHotspot,[in] int dyHotspot)
HRESULT None comctl32.Clone([in] REFIID riid,[out] PVOID *ppv)
HRESULT None comctl32.Copy([in] int iDst,[in] IUnknown *punkSrc,[in] int iSrc,[in] UINT uFlags)
HRESULT None comctl32.DragEnter([in] HWND hwndLock,[in] int x,[in] int y)
HRESULT None comctl32.DragLeave([in] HWND hwndLock)
HRESULT None comctl32.DragMove([in] int x,[in] int y)
HRESULT None comctl32.Draw([in] IMAGELISTDRAWPARAMS *pimldp)
HRESULT None comctl32.GetBkColor([out] COLORREF *pclr)
HRESULT None comctl32.GetDragImage([out] POINT *ppt,[out] POINT *pptHotspot,[out] REFIID riid,[out] PVOID *ppv)
HRESULT None comctl32.GetIcon([in] int i,[in] UINT flags,[out] HICON *picon)
HRESULT None comctl32.GetIconSize([out] int *cx,[out] int *cy)
HRESULT None comctl32.GetImageCount([out] int *pi)
HRESULT None comctl32.GetImageInfo([in] int i,[out] IMAGEINFO *pImageInfo)
HRESULT None comctl32.GetImageRect([in] int i,[out] RECT *prc)
HRESULT None comctl32.GetItemFlags([in] int i,[out] DWORD *dwFlags)
HRESULT None comctl32.GetOverlayImage([in] int iOverlay,[out] int *piIndex)
HRESULT None comctl32.HIMAGELIST_QueryInterface(_In_ HIMAGELIST himl,_In_ REFIID riid,_Out_ void **ppv)
HRESULT None comctl32.ImageList_ReadEx(_In_ DWORD dwFlags,_In_ LPSTREAM pstm,_Out_ REFIID riid,_Out_ void **ppv)
HRESULT None comctl32.ImageList_WriteEx(_In_ HIMAGELIST himl,_In_ DWORD dwFlags,_In_ LPSTREAM pstm)
HRESULT None comctl32.Merge([in] int i1,[in] IUnknown *punk2,[in] int i2,[in] int dx,[in] int dy,[out] REFIID riid,[out] PVOID *ppv)
HRESULT None comctl32.Remove([in] int i)
HRESULT None comctl32.ReplaceIcon([in] int i,[in] HICON hicon,[out] int *pi)
HRESULT None comctl32.Replace([in] int i,[in] HBITMAP hbmImage,[in None None,optional] HBITMAP hbmMask)
HRESULT None comctl32.SetBkColor([in] COLORREF clrBk,[out] COLORREF *pclr)
HRESULT None comctl32.SetDragCursorImage([in] IUnknown *punk,[in] int iDrag,[in] int dxHotspot,[in] int dyHotspot)
HRESULT None comctl32.SetIconSize([in] int cx,[in] int cy)
HRESULT None comctl32.SetImageCount([in] UINT uNewCount)
HRESULT None comctl32.SetOverlayImage([in] int iImage,[in] int iOverlay)
HRESULT None comctl32.UninitializeFlatSB(HWND hwnd None)
HRESULT None cscsvc.EnumItems(IOfflineFilesItemContainer *pContainer None)
HRESULT None cscsvc.GetFileAttributes([out] DWORD *pdwAttributes)
HRESULT None cscsvc.GetFileTimes([out] FILETIME *pftLastWrite,[out] FILETIME *pftChange)
HRESULT None cscsvc.GetFilterFlags([out] ULONGLONG *pullFlags,[out] ULONGLONG *pullMask)
HRESULT None cscsvc.GetItemChangeFlags([out] DWORD *pdwItemChangeFlags)
HRESULT None cscsvc.GetItemType([out] OFFLINEFILES_ITEM_TYPE *pItemType)
HRESULT None cscsvc.GetLocalInfo([out] IOfflineFilesSyncErrorItemInfo **ppInfo)
HRESULT None cscsvc.GetOriginalInfo([out] IOfflineFilesSyncErrorItemInfo **ppInfo)
HRESULT None cscsvc.GetPathFilter([out] LPWSTR *ppszFilter,[out] OFFLINEFILES_PATHFILTER_MATCH *pMatch)
HRESULT None cscsvc.GetRawData([out] BYTE_BLOB **ppBlob)
HRESULT None cscsvc.GetRemoteInfo([out] IOfflineFilesSyncErrorItemInfo **ppInfo)
HRESULT None cscsvc.GetSyncOperation([out] OFFLINEFILES_SYNC_OPERATION *pSyncOp)
HRESULT None cscsvc.IsCreatedOffline([out] BOOL *pbCreatedOffline)
HRESULT None cscsvc.IsDeletedOffline([out] BOOL *pbDeletedOffline)
HRESULT None cscsvc.IsLocallyModifiedData([out] BOOL *pbLocallyModifiedData)
HRESULT None cscsvc.IsPinnedForUserByPolicy([out] BOOL *pbPinnedForUser,[out] BOOL *pbInherit)
HRESULT None cscsvc.IsPinnedForUser([out] BOOL *pbPinnedForUser,[out] BOOL *pbInherit)
HRESULT None d2d1.CreateBitmapBrush([in] ID2D1Bitmap *bitmap,[in None None,optional] D2D1_BITMAP_BRUSH_PROPERTIES1 *bitmapBrushProperties,[out] ID2D1BitmapBrush1 **bitmapBrush)
HRESULT None d2d1.CreateColorContextFromFilename(PCWSTR filename None,[out] ID2D1ColorContext **colorContext)
HRESULT None d2d1.CreateColorContextFromFilename(PCWSTR Filename None,[out] ID2D1ColorContext **colorContext)
HRESULT None d2d1.CreateCommandList([out] ID2D1CommandList **commandList)
HRESULT None d2d1.CreateEffect(REFCLSID effectId None,[out] ID2D1Effect **effect)
HRESULT None d2d1.CreateSvgGlyphStyle([out] ID2D1SvgGlyphStyle **svgGlyphStyle)
HRESULT None d2d1.D2D1CreateFactory(__in D2D1_FACTORY_TYPE factoryType,__out Factory **factory)
HRESULT None d2d1.GetBounds([out] D2D1_RECT_F *bounds)
HRESULT None d2d1.GetImageWorldBounds([in] ID2D1Image *image,[out] D2D1_RECT_F worldBounds[1])
HRESULT None d2d1.Map(D2D1_MAP_OPTIONS Options None,[out] D2D1_MAPPED_RECT *mappedRect)
HRESULT None d2d1.SetInputCount(UINT32 inputCount None)
HRESULT None d2d1.SetPrimitiveBlend2(D2D1_PRIMITIVE_BLEND primitiveBlend None)
HRESULT None d2d1.SetPrimitiveBlend(D2D1_PRIMITIVE_BLEND primitiveBlend None)
HRESULT None d2d1.SetUnitMode(D2D1_UNIT_MODE unitMode None)
HRESULT None d3d10_1.D3D10CreateDeviceAndSwapChain1(_In_ IDXGIAdapter *pAdapter,_In_ D3D10_DRIVER_TYPE DriverType,_In_ HMODULE Software,_In_ UINT Flags,_In_ D3D10_FEATURE_LEVEL1 HardwareLevel,_In_ UINT SDKVersion,_In_ DXGI_SWAP_CHAIN_DESC *pSwapChainDesc,_Out_ IDXGISwapChain **ppSwapChain,_Out_ ID3D10Device1 **ppDevice)
HRESULT None d3d10.D3D10CreateStateBlock(_In_ ID3D10Device *pDevice,_In_ D3D10_STATE_BLOCK_MASK *pStateBlockMask,_Out_ ID3D10StateBlock **ppStateBlock)
HRESULT None d3d11sdklayers.CreateShaderTrace([in] IUnknown *pShader,[in] D3D11_SHADER_TRACE_DESC *pTraceDesc,[out] ID3D11ShaderTrace **ppShaderTrace)
HRESULT None d3d12.GetHeapProperties([out None None,optional] D3D12_HEAP_PROPERTIES *pHeapProperties,[out None None,optional] D3D12_HEAP_FLAGS *pHeapFlags)
HRESULT None d3d12.SetStablePowerState(BOOL Enable None)
HRESULT None d3dcompiler_47.GetDesc([out] D3D11_LIBRARY_DESC *pDesc)
HRESULT None d3dcompiler_47.GetDesc([out] D3D11_PARAMETER_DESC *pDesc)
HRESULT None d3dcompiler_47.GetDesc([out] D3D11_SHADER_DESC *pDesc)
HRESULT None d3dcompiler_47.GetLastError([out None None,optional] ID3DBlob **ppErrorBuffer)
HRESULT None d3dcompiler_47.GetPatchConstantParameterDesc([in] UINT ParameterIndex,[out] D3D11_SIGNATURE_PARAMETER_DESC *pDesc)
HRESULT None d3dcompiler_47.GetResourceBindingDescByName([in] LPCSTR Name,[out] D3D11_SHADER_INPUT_BIND_DESC *pDesc)
HRESULT None dcomp.CheckDeviceState([out] BOOL *pfValid)
HRESULT None dcomp.CreateAnimation([out] IDCompositionAnimation **animation)
HRESULT None dcomp.CreateEffectGroup([out] IDCompositionEffectGroup **effectGroup)
HRESULT None dcomp.CreateGaussianBlurEffect([out] IDCompositionGaussianBlurEffect **gaussianBlurEffect)
HRESULT None dcomp.CreateMatrixTransform3D([out] IDCompositionMatrixTransform3D **matrixTransform3D)
HRESULT None dcomp.CreateRectangleClip([out] IDCompositionRectangleClip **clip)
HRESULT None dcomp.CreateRotateTransform3D([out] IDCompositionRotateTransform3D **rotateTransform3D)
HRESULT None dcomp.CreateRotateTransform([out] IDCompositionRotateTransform **rotateTransform)
HRESULT None dcomp.CreateSkewTransform([out] IDCompositionSkewTransform **skewTransform)
HRESULT None dcomp.CreateTranslateTransform3D([out] IDCompositionTranslateTransform3D **translateTransform3D)
HRESULT None dcomp.CreateTranslateTransform([out] IDCompositionTranslateTransform **translateTransform)
HRESULT None dcomp.CreateVisual([out] IDCompositionVisual **visual)
HRESULT None dcomp.GetFrameStatistics([out] DCOMPOSITION_FRAME_STATISTICS *statistics)
HRESULT None dcomp.InitializeDirectCompositionDevice(HWND hwndTarget None,ID3D11Device **ppD3D11Device None,IDCompositionDevice **ppDevice None,IDCompositionTarget **ppCompTarget None)
HRESULT None dcomp.RenderAVisual(IDCompositionDevice *pDCompDevice None,HWND hwndTarget None,UINT surfaceWidth None,UINT surfaceHeight None)
HRESULT None direct2d.Clone([out] ID2D1SvgAttribute **attribute)
HRESULT None direct2d.CreatePathGeometry(D2D1_FILL_MODE fillMode None,[out] ID2D1PathGeometry1 **pathGeometry)
HRESULT None direct2d.GetTagName([out] PWSTR name,UINT32 nameCount None)
HRESULT None direct2d.GetTextValue([out] PWSTR name,UINT32 nameCount None)
HRESULT None dskquota.GetAccountStatus([out] LPDWORD pdwStatus)
HRESULT None dskquota.GetID([out] ULONG *pulID)
HRESULT None dskquota.GetQuotaLimit([out] PLONGLONG pllLimit)
HRESULT None dskquota.GetQuotaThreshold([out] PLONGLONG pllThreshold)
HRESULT None dskquota.GetQuotaUsed([out] PLONGLONG pllUsed)
HRESULT None dskquota.GetSidLength([out] LPDWORD pdwLength)
HRESULT None dwrite.CreateFontFaceWithSimulations(DWRITE_FONT_SIMULATIONS fontFaceSimulationFlags None,[out] IDWriteFontFace3 **fontFace)
HRESULT None dwrite.CreateGlyphRunAnalysis(IDWriteFontFace *pFontFace None,IDWriteGlyphRunAnalysis **ppGlyphRunAnalysis None)
HRESULT None dwrite.DWriteCreateFactory(_In_ DWRITE_FACTORY_TYPE factoryType,_In_ REFIID iid,_Out_ IUnknown **factory)
HRESULT None dwrite.EnqueueFileFragmentDownloadRequest(UINT64 fileOffset None,UINT64 fragmentSize None)
HRESULT None dwrite.GetFontDownloadQueue([out] IDWriteFontDownloadQueue **fontDownloadQueue)
HRESULT None dwrite.GetFontFaceReference([out] IDWriteFontFaceReference **fontFaceReference)
HRESULT None dwrite.GetFontFile([out] IDWriteFontFile **fontFile)
HRESULT None dwrite.GetPropertyValues(DWRITE_FONT_PROPERTY_ID propertyId None,[out] IDWriteStringList **values)
HRESULT None dxgi.CreateDXGIFactory1(REFIID riid None,_Out_ void **ppFactory)
HRESULT None dxgi.CreateDXGIFactory2(UINT Flags None,REFIID riid None,_Out_ void **ppFactory)
HRESULT None dxgidebug.AddApplicationMessage([in] DXGI_INFO_QUEUE_MESSAGE_SEVERITY Severity,[in] LPCSTR pDescription)
HRESULT None dxgidebug.AddMessage([in] DXGI_DEBUG_ID Producer,[in] DXGI_INFO_QUEUE_MESSAGE_CATEGORY Category,[in] DXGI_INFO_QUEUE_MESSAGE_SEVERITY Severity,[in] DXGI_INFO_QUEUE_MESSAGE_ID ID,[in] LPCSTR pDescription)
HRESULT None dxgidebug.AddRetrievalFilterEntries([in] DXGI_DEBUG_ID Producer,[in] DXGI_INFO_QUEUE_FILTER *pFilter)
HRESULT None dxgidebug.AddStorageFilterEntries([in] DXGI_DEBUG_ID Producer,[in] DXGI_INFO_QUEUE_FILTER *pFilter)
HRESULT None dxgidebug.GetMessage([in] DXGI_DEBUG_ID Producer,[in] UINT64 MessageIndex,[out None None,optional] DXGI_INFO_QUEUE_MESSAGE *pMessage,[in None None,out] SIZE_T *pMessageByteLength)
HRESULT None dxgidebug.GetRetrievalFilter([in] DXGI_DEBUG_ID Producer,[out None None,optional] DXGI_INFO_QUEUE_FILTER *pFilter,[in None None,out] SIZE_T *pFilterByteLength)
HRESULT None dxgidebug.GetStorageFilter([in] DXGI_DEBUG_ID Producer,[out None None,optional] DXGI_INFO_QUEUE_FILTER *pFilter,[in None None,out] SIZE_T *pFilterByteLength)
HRESULT None dxgidebug.PushCopyOfStorageFilter([in] DXGI_DEBUG_ID Producer)
HRESULT None dxgidebug.PushDenyAllRetrievalFilter([in] DXGI_DEBUG_ID Producer)
HRESULT None dxgidebug.PushDenyAllStorageFilter([in] DXGI_DEBUG_ID Producer)
HRESULT None dxgidebug.PushEmptyRetrievalFilter([in] DXGI_DEBUG_ID Producer)
HRESULT None dxgidebug.PushEmptyStorageFilter([in] DXGI_DEBUG_ID Producer)
HRESULT None dxgidebug.PushRetrievalFilter([in] DXGI_DEBUG_ID Producer,[in] DXGI_INFO_QUEUE_FILTER *pFilter)
HRESULT None dxgidebug.PushStorageFilter([in] DXGI_DEBUG_ID Producer,[in] DXGI_INFO_QUEUE_FILTER *pFilter)
HRESULT None dxgidebug.SetBreakOnID([in] DXGI_DEBUG_ID Producer,[in] DXGI_INFO_QUEUE_MESSAGE_ID ID,[in] BOOL bEnable)
HRESULT None dxgidebug.SetMessageCountLimit([in] DXGI_DEBUG_ID Producer,[in] UINT64 MessageCountLimit)
HRESULT None dxgi.GetDesc3([out] DXGI_ADAPTER_DESC3 *pDesc)
HRESULT None dxva2.DXVA2CreateDirect3DDeviceManager9(_Out_ UINT *pResetToken,_Out_ IDirect3DDeviceManager9 **ppDXVAManager)
HRESULT None dxva2.DXVA2CreateVideoService(IDirect3DDevice9 *pDD None,REFIID riid None,void **ppService None)
HRESULT None dxva2.GetNumberOfPhysicalMonitorsFromIDirect3DDevice9(_In_ IDirect3DDevice9 *pDirect3DDevice9,_Out_ LPDWORD pdwNumberOfPhysicalMonitors)
HRESULT None dxva2.GetPhysicalMonitorsFromIDirect3DDevice9(_In_ IDirect3DDevice9 *pDirect3DDevice9,_In_ DWORD dwPhysicalMonitorArraySize,_Out_ LPPHYSICAL_MONITOR pPhysicalMonitorArray)
HRESULT None elscore.MappingGetServices(_In_opt_ PMAPPING_ENUM_OPTIONS pOptions,_Out_ PMAPPING_SERVICE_INFO *prgServices,_Out_ DWORD *pdwServicesCount)
HRESULT None elscore.MappingRecognizeText(_In_ PMAPPING_SERVICE_INFO pServiceInfo,_In_ LPCWSTR pszText,_In_ DWORD dwLength,_In_ DWORD dwIndex,_In_opt_ PMAPPING_OPTIONS pOptions,_Inout_ PMAPPING_PROPERTY_BAG pBag)
HRESULT None esscli.BeginEnumeration([in] LONG lFlags)
HRESULT None esscli.Clone([out] IWbemContext **ppNewCopy)
HRESULT None esscli.Next([in] LONG lFlags,[out] BSTR *pstrName,[out] VARIANT *pValue)
HRESULT None esscli.SetValue([in] LPCWSTR strName,[in] LONG lFlags,[in] VARIANT *pValue)
HRESULT None evr.MFCreateDXSurfaceBuffer(_In_ REFIID riid,_In_ IUnknown *punkSurface,_In_ BOOL fBottomUpWhenLinear,_Out_ IMFMediaBuffer **ppBuffer)
HRESULT None evr.MFCreateVideoMixerAndPresenter(_In_ IUnknown *pMixerOwner,_In_ IUnknown *pPresenterOwner,_In_ REFIID riidMixer,_Out_ void **ppvVideoMixer,_In_ REFIID riidPresenter,_Out_ void **ppvVideoPresenter)
HRESULT None evr.MFCreateVideoMixer(IUnknown *pOwner None,REFIID riidDevice None,REFIID riid None,void **ppVideoMixer None)
HRESULT None evr.MFCreateVideoPresenter(_In_ IUnknown *pOwner,_In_ REFIID riidDevice,_In_ REFIID riid,_Out_ void **ppvVideoPresenter)
HRESULT None evr.MFCreateVideoSampleFromSurface(_In_ IUnknown *pUnkSurface,_Out_ IMFSample **ppSample)
HRESULT None explorerframe.SetOverlayIcon([in] HWND hwnd,[in] HICON hIcon,[in] LPCWSTR pszDescription)
HRESULT None explorerframe.SetProgressState([in] HWND hwnd,[in] TBPFLAG tbpFlags)
HRESULT None explorerframe.SetProgressValue([in] HWND hwnd,[in] ULONGLONG ullCompleted,[in] ULONGLONG ullTotal)
HRESULT None explorerframe.ThumbBarAddButtons([in] HWND hwnd,[in] UINT cButtons,[in] LPTHUMBBUTTON pButton)
HRESULT None explorerframe.UnregisterTab([in] HWND hwndTab)
HRESULT None explorerframe.UpdateThumbarButton(HWND hwnd None)
HRESULT None fastprox.GetRequestId([out] REQUESTID *pId)
HRESULT None fastprox.Indicate([in] LONG lObjectCount,[in] IWbemClassObject **ppObjArray)
HRESULT None fastprox.PutClass([in] IWbemClassObject *pObject,[in] LONG lFlags,[in] IWbemContext *pCtx,[out] IWbemCallResult **ppCallResult)
HRESULT None fastprox.PutInstanceAsync([in] IWbemClassObject *pInst,[in] LONG lFlags,[in] IWbemContext *pCtx,[in] IWbemObjectSink *pResponseHandler)
HRESULT None fastprox.PutInstance([in] IWbemClassObject *pInst,[in] LONG lFlags,[in] IWbemContext *pCtx,[out] IWbemCallResult **ppCallResult)
HRESULT None faxcom.get_CanModify([out None None,retval] BSTR *pVal)
HRESULT None faxcom.get_DeviceStatus([out None None,retval] BSTR *pVal)
HRESULT None faxcom.get_DiscountSend([out None None,retval] BOOL *pVal)
HRESULT None faxcom.get_DisplayName([out None None,retval] BSTR *pVal)
HRESULT None faxcom.get_FaxNumber([out None None,retval] BSTR *pVal)
HRESULT None faxcom.get_Name([out None None,retval] BSTR *pVal)
HRESULT None faxcom.get_PageCount([out None None,retval] LONG *pVal)
HRESULT None faxcom.get_QueueStatus([out None None,retval] BSTR *pVal)
HRESULT None faxcom.get_RawReceiveTime([out None None,retval] VARIANT *pVal)
HRESULT None faxcom.get_ReceiveTime([out None None,retval] BSTR *pVal)
HRESULT None faxcom.GetRoutingMethods([out] IDispatch *retVal)
HRESULT None faxcom.get_SenderCompany([out None None,retval] BSTR *pVal)
HRESULT None faxcom.get_SenderDept([out None None,retval] BSTR *pVal)
HRESULT None faxcom.get_SenderName([out None None,retval] BSTR *pVal)
HRESULT None faxcom.get_Tsid([out None None,retval] BSTR *pVal)
HRESULT None faxcom.get_Type([out None None,retval] LONG *pVal)
HRESULT None faxcom.get_UserName([out None None,retval] BSTR *pVal)
HRESULT None faxcom.put_BillingCode([in] BSTR newVal)
HRESULT None faxcom.put_CoverpageName([in] BSTR newVal)
HRESULT None faxcom.put_CoverpageNote([in] BSTR newVal)
HRESULT None faxcom.put_CoverpageSubject([in] BSTR newVal)
HRESULT None faxcom.put_Csid([in] BSTR newVal)
HRESULT None faxcom.put_DiscountSend([in] BOOL newVal)
HRESULT None faxcom.put_DisplayName([in] BSTR newVal)
HRESULT None faxcom.put_EmailAddress([in] BSTR newVal)
HRESULT None faxcom.put_FaxNumber([in] BSTR newVal)
HRESULT None faxcom.put_FileName([in] BSTR newVal)
HRESULT None faxcom.put_Priority([in] LONG newVal)
HRESULT None faxcom.put_Receive([in] BOOL newVal)
HRESULT None faxcom.put_RecipientAddress([in] BSTR newVal)
HRESULT None faxcom.put_RecipientCity([in] BSTR newVal)
HRESULT None faxcom.put_RecipientCompany([in] BSTR newVal)
HRESULT None faxcom.put_RecipientCountry([in] BSTR newVal)
HRESULT None faxcom.put_RecipientDepartment([in] BSTR newVal)
HRESULT None faxcom.put_RecipientHomePhone([in] BSTR newVal)
HRESULT None faxcom.put_RecipientName([in] BSTR newVal)
HRESULT None faxcom.put_RecipientOffice([in] BSTR newVal)
HRESULT None faxcom.put_RecipientOfficePhone([in] BSTR newVal)
HRESULT None faxcom.put_RecipientState([in] BSTR newVal)
HRESULT None faxcom.put_RecipientTitle([in] BSTR newVal)
HRESULT None faxcom.put_Rings([in] LONG newVal)
HRESULT None faxcom.put_SendCoverpage([in] BOOL newVal)
HRESULT None faxcom.put_SenderAddress([in] BSTR newVal)
HRESULT None faxcom.put_SenderCompany([in] BSTR newVal)
HRESULT None faxcom.put_SenderDepartment([in] BSTR newVal)
HRESULT None faxcom.put_SenderFax([in] BSTR newVal)
HRESULT None faxcom.put_SenderHomePhone([in] BSTR newVal)
HRESULT None faxcom.put_SenderName([in] BSTR newVal)
HRESULT None faxcom.put_SenderOffice([in] BSTR newVal)
HRESULT None faxcom.put_SenderOfficePhone([in] BSTR newVal)
HRESULT None faxcom.put_SenderTitle([in] BSTR newVal)
HRESULT None faxcom.put_Send([in] BOOL newVal)
HRESULT None faxcom.put_ServerCoverpage([in] BOOL newVal)
HRESULT None faxcom.put_Tsid([in] BSTR newVal)
HRESULT None fltlib.FilterAttachAtAltitude(_In_ LPCWSTR lpFilterName,_In_ LPCWSTR lpVolumeName,_In_ LPCWSTR lpAltitude,_In_opt_ LPCWSTR lpInstanceName,_In_opt_ DWORD dwCreatedInstanceNameLength,_Out_opt_ LPWSTR lpCreatedInstanceName)
HRESULT None fltlib.FilterDetach(_In_ LPCWSTR lpFilterName,_In_ LPCWSTR lpVolumeName,_In_opt_ LPCWSTR lpInstanceName)
HRESULT None fundisc.GetCount([out] DWORD *pdwCount)
HRESULT None fundisc.GetProviderInstanceID([out] WCHAR **ppszCoMemProviderInstanceID)
HRESULT None fxscomex.Add([in] long lDeviceId)
HRESULT None fxscomex.Add(long lCountryCode None,long lAreaCode None,VARIANT_BOOL bUseDevice None,BSTR bstrGroupName None,long lDeviceId None,[out None None,retval] IFaxOutboundRoutingRule **pFaxOutboundRoutingRule)
HRESULT None fxscomex.ConnectedSubmit2([in] IFaxServer *pFaxServer,[out] VARIANT *pvFaxOutgoingJobIDs,[out None None,retval] LONG *plErrorBodyFile)
HRESULT None fxscomex.CopyTiff(BSTR bstrTiffPath None)
HRESULT None fxscomex.CopyTiff([in] BSTR bstrTiffPath)
HRESULT None fxscomex.get_APIVersion([out None None,retval] FAX_SERVER_APIVERSION_ENUM *Version)
HRESULT None fxscomex.get_ArchiveSizeHigh([out None None,retval] long *plSizeHigh)
HRESULT None fxscomex.get_ArchiveSizeLow([out None None,retval] long *plSizeLow)
HRESULT None fxscomex.get_AvailableOperations([out None None,retval] FAX_JOB_OPERATIONS_ENUM *AvailableOperations)
HRESULT None fxscomex.get_Configuration([out None None,retval] IFaxConfiguration **ppFaxConfiguration)
HRESULT None fxscomex.get_Count([out None None,retval] long *lCount)
HRESULT None fxscomex.get_InboundRouting([out None None,retval] IFaxInboundRouting **ppFaxInboundRouting)
HRESULT None fxscomex.get__NewEnum([out None None,retval] IUnknown **pUnk)
HRESULT None fxscomex.OnActivityLoggingConfigChange(IFaxServer2 *pFaxServer2 None)
HRESULT None fxscomex.OnDevicesConfigChange(IFaxServer2 *pFaxServer2 None)
HRESULT None fxscomex.OnDeviceStatusChange(IFaxServer2 *pFaxServer2 None,long lDeviceId None,VARIANT_BOOL bPoweredOff None,VARIANT_BOOL bSending None,VARIANT_BOOL bReceiving None,VARIANT_BOOL bRinging None)
HRESULT None fxscomex.OnEventLoggingConfigChange(IFaxServer2 *pFaxServer2 None)
HRESULT None fxscomex.OnGeneralServerConfigChanged(IFaxServer2 *pFaxServer2 None)
HRESULT None fxscomex.OnIncomingArchiveConfigChange(IFaxServer2 *pFaxServer2 None)
HRESULT None fxscomex.OnIncomingJobAdded(IFaxServer2 *pFaxServer2 None,BSTR bstrJobId None)
HRESULT None fxscomex.OnIncomingJobChanged(IFaxServer2 *pFaxServer2 None,BSTR bstrJobId None,IFaxJobStatus *pJobStatus None)
HRESULT None fxscomex.OnIncomingJobRemoved(IFaxServer2 *pFaxServer2 None,BSTR bstrJobId None)
HRESULT None fxscomex.OnIncomingJobRemoved(IFaxServer *pFaxServer None,BSTR bstrJobId None)
HRESULT None fxscomex.OnIncomingJobRemoved([in] IFaxAccount *pFaxAccount,[in] BSTR bstrJobId)
HRESULT None fxscomex.OnIncomingMessageRemoved(IFaxServer2 *pFaxServer2 None,BSTR bstrJobId None)
HRESULT None fxscomex.OnNewCall(IFaxServer2 *pFaxServer2 None,long lCallId None,long lDeviceId None,long bstrCallerId None)
HRESULT None fxscomex.OnOutboundRoutingGroupsConfigChange(IFaxServer2 *pFaxServer2 None)
HRESULT None fxscomex.OnOutboundRoutingRulesConfigChange(IFaxServer2 *pFaxServer2 None)
HRESULT None fxscomex.OnOutgoingArchiveConfigChange(IFaxServer2 *pFaxServer2 None)
HRESULT None fxscomex.OnOutgoingJobRemoved(IFaxServer2 *pFaxServer2 None,BSTR bstrJobId None)
HRESULT None fxscomex.OnOutgoingMessageAdded(IFaxServer2 *pFaxServer2 None,BSTR bstrMessageId None)
HRESULT None fxscomex.OnOutgoingMessageAdded([in] IFaxAccount *pFaxAccount,[in] BSTR bstrMessageId)
HRESULT None fxscomex.OnOutgoingQueueConfigChange(IFaxServer2 *pFaxServer2 None)
HRESULT None fxscomex.OnQueuesStatusChange(IFaxServer2 *pFaxServer2 None,VARIANT_BOOL bOutgoingQueueBlocked None,VARIANT_BOOL bOutgoingQueuePaused None,VARIANT_BOOL bIncomingQueueBlocked None)
HRESULT None fxscomex.OnReceiptOptionsChange(IFaxServer2 *pFaxServer2 None)
HRESULT None fxscomex.OnServerActivityChange(IFaxServer *pFaxServer None,long lIncomingMessages None,long lRoutingMessages None,long lOutgoingMessages None,long lQueuedMessages None)
HRESULT None fxscomex.OnServerShutDown(IFaxServer2 *pFaxServer2 None)
HRESULT None fxscomex.put_AgeLimit(BSTR lAgeLimit None)
HRESULT None fxscomex.put_AgeLimit([in] long lAgeLimit)
HRESULT None fxscomex.put_AllowPersonalCoverPages([in] VARIANT_BOOL bAllowPersonalCoverPages)
HRESULT None fxscomex.put_AllowPersonalCoverPages(VARIANT_BOOL bAllowPersonalCoverPages None)
HRESULT None fxscomex.put_ArchiveAgeLimit([in] long lArchiveAgeLimit)
HRESULT None fxscomex.put_ArchiveFolder([in None None,retval] BSTR bstrArchiveFolder)
HRESULT None fxscomex.put_ArchiveLocation([in] BSTR bstrArchiveLocation)
HRESULT None fxscomex.put_AttachFaxToReceipt(VARIANT_BOOL bAttachFax None)
HRESULT None fxscomex.put_AutoCreateAccountOnConnect([in] VARIANT_BOOL bAutoCreateAccountOnConnect)
HRESULT None fxscomex.put_Bodies(VARIANT pvBodies None)
HRESULT None fxscomex.put_Branding([in] VARIANT_BOOL bBranding)
HRESULT None fxscomex.put_Company(BSTR bstrCompany None)
HRESULT None fxscomex.put_CoverPage(BSTR bstrCoverPage None)
HRESULT None fxscomex.put_CoverPageType(FAX_COVERPAGE_TYPE_ENUM CoverPageType None)
HRESULT None fxscomex.put_DiscountRateEnd([in] DATE dateDiscountRateEnd)
HRESULT None fxscomex.put_IncomingFaxesArePublic([in] VARIANT_BOOL bIncomingFaxesArePublic)
HRESULT None fxscomex.put_LowQuotaWaterMark([in] long lLowQuotaWaterMark)
HRESULT None fxscomex.put_OutgoingQueueAgeLimit([in] long lOutgoingQueueAgeLimit)
HRESULT None fxscomex.put_OutgoingQueueBlocked([in] VARIANT_BOOL bOutgoingBlocked)
HRESULT None fxscomex.put_OutgoingQueuePaused([in] VARIANT_BOOL bOutgoingPaused)
HRESULT None fxscomex.put_Priority(long lPriority None)
HRESULT None fxscomex.put_RetryDelay([in] long lRetryDelay)
HRESULT None fxscomex.put_SizeQuotaWarning([in] VARIANT_BOOL bSizeQuotaWarning)
HRESULT None fxscomex.put_UseArchive([in] VARIANT_BOOL bUseArchive)
HRESULT None fxscomex.put_UseDeviceTSID([in] VARIANT_BOOL bUseDeviceTSID)
HRESULT None gpedit.BrowseForGPO(_Inout_ LPGPOBROWSEINFO lpBrowseInfo)
HRESULT None gpedit.CreateGPOLink(_In_ LPOLESTR lpGPO,_In_ LPOLESTR lpContainer,_In_ BOOL fHighPriority)
HRESULT None gpedit.DeleteAllGPOLinks(_In_ LPOLESTR lpContainer)
HRESULT None gpedit.DeleteGPOLink(_In_ LPOLESTR lpGPO,_In_ LPOLESTR lpContainer)
HRESULT None gpedit.ExportRSoPData(_In_ LPOLESTR lpNameSpace,_In_ LPOLESTR lpFileName)
HRESULT None gpedit.ImportRSoPData(_In_ LPOLESTR lpNameSpace,_In_ LPOLESTR lpFileName)
HRESULT None imekrcic.OnEndEdit([in] ITfContext *pic,[in] TfEditCookie ecReadOnly,[in] ITfEditRecord *pEditRecord)
HRESULT None mdhcp.CreateLeaseInfoFromVariant([in] DATE LeaseStartTime,[in] DATE LeaseStopTime,[in] VARIANT vAddresses,[in] BSTR pRequestID,[in] BSTR pServerAddress,[out] IMcastLeaseInfo **ppReleaseRequest)
HRESULT None mdhcp.CreateLeaseInfo([in] DATE LeaseStartTime,[in] DATE LeaseStopTime,[in] DWORD dwNumAddresses,[in] LPWSTR *ppAddresses,[in] LPWSTR pRequestID,[in] LPWSTR pServerAddress,[out] IMcastLeaseInfo **ppReleaseRequest)
HRESULT None mdhcp.EnumerateAddresses([out] IEnumBstr **ppEnumAddresses)
HRESULT None mdhcp.EnumerateScopes([out] IEnumMcastScope **ppEnumMcastScope)
HRESULT None mdhcp.get_LeaseStopTime([out] DATE *pTime)
HRESULT None mdhcp.get_ScopeDescription([out] BSTR *ppDescription)
HRESULT None mdhcp.get_ScopeID([out] long *pID)
HRESULT None mdhcp.get_ServerAddress([out] BSTR *ppAddress)
HRESULT None mdhcp.put_LeaseStopTime([in] DATE time)
HRESULT None mdhcp.RenewAddress([in] long lReserved,[in] IMcastLeaseInfo *pRenewRequest,[out] IMcastLeaseInfo **ppRenewResponse)
HRESULT None mdhcp.RequestAddress([in] IMcastScope *pScope,[in] DATE LeaseStartTime,[in] DATE LeaseStopTime,[in] long NumAddresses,[out] IMcastLeaseInfo **ppLeaseResponse)
HRESULT None mdhcp.Skip([in] ULONG celt)
HRESULT None mergemod.Connect([in] BSTR Feature)
HRESULT None mergemod.ExtractFiles([in] BSTR Path)
HRESULT None mergemod.get_Attributes([out] long *Attributes)
HRESULT None mergemod.get_ConfigurableItems([out] IMsmConfigurableItems **ConfigurableItems)
HRESULT None mergemod.get_Context([out] BSTR *Context)
HRESULT None mergemod.get_DatabaseTable([out] BSTR *Table)
HRESULT None mergemod.get_Dependencies(IMsmDependencies **Dependencies None)
HRESULT None mergemod.get_Errors([out] IMsmErrors **Errors)
HRESULT None mergemod.get_HelpLocation([out] BSTR *HelpLocation)
HRESULT None mergemod.get_ModuleFiles([out] IMsmStrings *Files)
HRESULT None mergemod.get_Module([out] BSTR *Module)
HRESULT None mergemod.get_ModuleTable([out] BSTR *Table)
HRESULT None mergemod.get_Name([out] BSTR *Name)
HRESULT None mergemod.get_Path([out] BSTR *Path)
HRESULT None mergemod.get_Type([out] BSTR *Type)
HRESULT None mergemod.get_Type([out] msmErrorType *ErrorType)
HRESULT None mergemod.get_Version([out] BSTR *Version)
HRESULT None mergemod.OpenDatabase(const BSTR Path)
HRESULT None mergemod.OpenLog([in] BSTR FileName)
HRESULT None mergemod.OpenModule([in] BSTR FileName,[in] short Language)
HRESULT None mergemod.ProvideTextData([in] BSTR Name,[out] BSTR *ConfigData)
HRESULT None mfcaptureengine.MFCreateCaptureEngine(_Out_ IMFCaptureEngine **ppCaptureEngine)
HRESULT None mf.CreateNamedPropertyStore(_Out_ INamedPropertyStore **ppStore)
HRESULT None mfmediaengine.GetOriginalId([out] LPWSTR *originalId)
HRESULT None mfmediaengine.GetTracks([out] IMFTimedTextTrackList **tracks)
HRESULT None mf.MFCreate3GPMediaSink(_In_ IMFByteStream *pIByteStream,_In_ IMFMediaType *pVideoMediaType,_In_ IMFMediaType *pAudioMediaType,_Out_ IMFMediaSink **ppIMediaSink)
HRESULT None mf.MFCreateAC3MediaSink(_In_ IMFByteStream *pTargetByteStream,_In_ IMFMediaType *pAudioMediaType,_Out_ IMFMediaSink **ppMediaSink)
HRESULT None mf.MFCreateADTSMediaSink(_In_ IMFByteStream *pTargetByteStream,_In_ IMFMediaType *pAudioMediaType,_Out_ IMFMediaSink **ppMediaSink)
HRESULT None mf.MFCreateAggregateSource(_In_ IMFCollection *pSourceCollection,_Out_ IMFMediaSource **ppAggSource)
HRESULT None mf.MFCreateASFContentInfo(IMFASFContentInfo **ppIContentInfo None)
HRESULT None mf.MFCreateASFIndexerByteStream(_In_ IMFByteStream *pIContentByteStream,_In_ QWORD cbIndexStartOffset,_Out_ IMFByteStream **pIIndexByteStream)
HRESULT None mf.MFCreateASFIndexer(IMFASFIndexer **ppIIndexer None)
HRESULT None mf.MFCreateASFMediaSinkActivate(LPCWSTR pwszFileName None,IMFASFContentInfo *pContentInfo None,IMFActivate **ppIActivate None)
HRESULT None mf.MFCreateASFMediaSink(IMFByteStream *pIByteStream None,IMFMediaSink **ppIMediaSink None)
HRESULT None mf.MFCreateASFMultiplexer(IMFASFMultiplexer **ppIMultiplexer None)
HRESULT None mf.MFCreateASFProfileFromPresentationDescriptor(IMFPresentationDescriptor *pIPD None,IMFASFProfile **ppIProfile None)
HRESULT None mf.MFCreateASFProfile(IMFASFProfile **ppIProfile None)
HRESULT None mf.MFCreateASFSplitter(IMFASFSplitter **ppISplitter None)
HRESULT None mf.MFCreateASFStreamingMediaSinkActivate(IMFActivate *pByteStreamActivate None,IMFASFContentInfo *pContentInfo None,IMFActivate **ppIActivate None)
HRESULT None mf.MFCreateASFStreamingMediaSink(IMFByteStream *pIByteStream None,IMFMediaSink **ppIMediaSink None)
HRESULT None mf.MFCreateASFStreamSelector(IMFASFProfile *pIASFProfile None,IMFASFStreamSelector **ppSelector None)
HRESULT None mf.MFCreateAudioRendererActivate(_Out_ IMFActivate **ppActivate)
HRESULT None mf.MFCreateAudioRenderer(_In_ IMFAttributes *pAudioAttributes,_Out_ IMFMediaSink **ppSink)
HRESULT None mf.MFCreateCredentialCache(IMFNetCredentialCache **ppCache None)
HRESULT None mf.MFCreateDeviceSource(_In_ IMFAttributes *pAttributes,_Out_ IMFMediaSource **ppSource)
HRESULT None mf.MFCreateMediaSession(IMFAttributes *pConfiguration None,IMFMediaSession **ppMS None)
HRESULT None mf.MFCreateMP3MediaSink(_In_ IMFByteStream *pTargetByteStream,_Out_ IMFMediaSink **ppMediaSink)
HRESULT None mf.MFCreateMPEG4MediaSink(_In_ IMFByteStream *pIByteStream,_In_ IMFMediaType *pVideoMediaType,_In_ IMFMediaType *pAudioMediaType,_Out_ IMFMediaSink **ppIMediaSink)
HRESULT None mf.MFCreateMuxSink(_In_ GUID guidOutputSubType,_In_ IMFAttributes *pOutputAttributes,_In_ IMFByteStream *pOutputByteStream,_Out_ IMFMediaSink **ppMuxSink)
HRESULT None mf.MFCreateNetSchemePlugin(_In_ REFIID riid,_Out_ LPVOID *ppvHandler)
HRESULT None mf.MFCreatePMPMediaSession(DWORD dwCreationFlags None,IMFAttributes *pConfiguration None,IMFMediaSession **ppMediaSession None,IMFActivate **ppEnablerActivate None)
HRESULT None mf.MFCreatePMPServer(_In_ DWORD dwCreationFlags,_Out_ IMFPMPServer **ppPMPServer)
HRESULT None mf.MFCreatePresentationClock(IMFPresentationClock **ppPresentationClock None)
HRESULT None mf.MFCreatePresentationDescriptorFromASFProfile(IMFASFProfile *pIProfile None,IMFPresentationDescriptor **ppIPD None)
HRESULT None mf.MFCreateProxyLocator(_In_ LPCWSTR pszProtocol,_In_ IPropertyStore *pProxyConfig,_Out_ IMFNetProxyLocator **ppProxyLocator)
HRESULT None mf.MFCreateRemoteDesktopPlugin(IMFRemoteDesktopPlugin **ppPlugin None)
HRESULT None mf.MFCreateSampleCopierMFT(_Out_ IMFTransform **ppCopierMFT)
HRESULT None mf.MFCreateSampleGrabberSinkActivate(IMFMediaType *pIMFMediaType None,IMFSampleGrabberSinkCallback *pIMFSampleGrabberSinkCallback None,IMFActivate **ppIActivate None)
HRESULT None mf.MFCreateSequencerSegmentOffset(_In_ MFSequencerElementId dwId,_In_ MFTIME hnsOffset,_Out_ PROPVARIANT *pvarSegmentOffset)
HRESULT None mf.MFCreateSequencerSource(IUnknown *pReserved None,IMFSequencerSource **ppSequencerSource None)
HRESULT None mf.MFCreateSimpleTypeHandler(_Out_ IMFMediaTypeHandler **ppHandler)
HRESULT None mf.MFCreateStandardQualityManager(_Out_ IMFQualityManager **ppQualityManager)
HRESULT None mf.MFCreateTopoLoader(IMFTopoLoader **ppObj None)
HRESULT None mf.MFCreateTopology(IMFTopology **ppTopo None)
HRESULT None mf.MFCreateTopologyNode(_In_ MF_TOPOLOGY_TYPE NodeType,_Out_ IMFTopologyNode **ppNode)
HRESULT None mf.MFCreateTranscodeProfile(_Out_ IMFTranscodeProfile **ppTranscodeProfile)
HRESULT None mf.MFCreateTranscodeSinkActivate(_Out_ **ppActivate None)
HRESULT None mf.MFCreateTranscodeTopologyFromByteStream(_In_ IMFMediaSource *pSrc,_In_ IMFByteStream *pOutputStream,_In_ IMFTranscodeProfile *pProfile,_Out_ IMFTopology **ppTranscodeTopo)
HRESULT None mf.MFCreateVideoRendererActivate(_In_ HWND hwndVideo,_Out_ IMFActivate **ppActivate)
HRESULT None mf.MFCreateVideoRenderer(_In_ REFIID riidRenderer,_Out_ void **ppVideoRenderer)
HRESULT None mf.MFCreateWMAEncoderActivate(IMFMediaType *pMediaType None,IPropertyStore *pEncodingConfigurationProperties None,IMFActivate **ppActivate None)
HRESULT None mf.MFCreateWMVEncoderActivate(IMFMediaType *pMediaType None,IPropertyStore *pEncodingConfigurationProperties None,IMFActivate **ppActivate None)
HRESULT None mf.MFEnumDeviceSources(_In_ IMFAttributes *pAttributes,_Out_ IMFActivate ***pppSourceActivate,_Out_ UINT32 *pcSourceActivate)
HRESULT None mf.MFGetService(IUnknown *punkObject None,REFGUID guidService None,REFIID riid None,LPVOID *ppvObject None)
HRESULT None mf.MFGetSupportedMimeTypes(_Out_ PROPVARIANT *pPropVarMimeTypeArray)
HRESULT None mf.MFGetSupportedSchemes(_Out_ PROPVARIANT *pPropVarSchemeArray)
HRESULT None mf.MFGetTopoNodeCurrentType(IMFTopologyNode *pNode None,DWORD dwStreamIndex None,BOOL fOutput None,_Out_ IMFMediaType **ppType)
HRESULT None mf.MFRequireProtectedEnvironment(_In_ IMFPresentationDescriptor *pPresentationDescriptor)
HRESULT None mf.MFShutdownObject(IUnknown *pUnk None)
HRESULT None mf.MFTranscodeGetAudioOutputAvailableTypes(_In_ REFGUID guidSubType,_In_ DWORD dwMFTFlags,_In_ IMFAttributes *pCodecConfig,_Out_ IMFCollection **ppAvailableTypes)
HRESULT None mfplat.CreatePropertyStore(_Out_ IPropertyStore **ppStore)
HRESULT None mfplat.MFAddPeriodicCallback(_In_ MFPERIODICCALLBACK Callback,_In_ IUnknown *pContext,_Out_ DWORD *pdwKey)
HRESULT None mfplat.MFAllocateSerialWorkQueue(_In_ DWORD dwWorkQueue,_Out_ DWORD *pdwWorkQueue)
HRESULT None mfplat.MFAllocateWorkQueueEx(_In_ MFASYNC_WORKQUEUE_TYPE WorkQueueType,_Out_ DWORD *pdwWorkQueue)
HRESULT None mfplat.MFAllocateWorkQueue(_Out_ DWORD *pdwWorkQueue)
HRESULT None mfplat.MFAverageTimePerFrameToFrameRate(_In_ UINT64 unAverageTimePerFrame,_Out_ UINT32 *punNumerator,_Out_ UINT32 *punDenominator)
HRESULT None mfplat.MFBeginCreateFile(_In_ MF_FILE_ACCESSMODE AccessMode,_In_ MF_FILE_OPENMODE OpenMode,_In_ MF_FILE_FLAGS fFlags,_In_ LPCWSTR pwszFilePath,_In_ IMFAsyncCallback *pCallback,_In_ IUnknown *pState,_Out_ IUnknown **ppCancelCookie)
HRESULT None mfplat.MFBeginRegisterWorkQueueWithMMCSSEx(_In_ DWORD dwWorkQueueId,_In_ LPCWSTR wszClass,_In_ DWORD dwTaskId,_In_ LONG lPriority,_In_ IMFAsyncCallback *pDoneCallback,_In_ IUnknown *pDoneState)
HRESULT None mfplat.MFBeginRegisterWorkQueueWithMMCSS(_In_ DWORD dwWorkQueueId,_In_ LPCWSTR wszClass,_In_ DWORD dwTaskId,_In_ IMFAsyncCallback *pDoneCallback,_In_ IUnknown *pDoneState)
HRESULT None mfplat.MFBeginUnregisterWorkQueueWithMMCSS(_In_ DWORD dwWorkQueueId,_In_ IMFAsyncCallback *pDoneCallback,_In_ IUnknown *pDoneState)
HRESULT None mfplat.MFCalculateImageSize(_In_ REFGUID guidSubtype,_In_ UINT32 unWidth,_In_ UINT32 unHeight,_Out_ UINT32 *pcbImageSize)
HRESULT None mfplat.MFCancelCreateFile(_In_ IUnknown *pCancelCookie)
HRESULT None mfplat.MFCancelWorkItem(_In_ MFWORKITEM_KEY Key)
HRESULT None mfplat.MFConvertColorInfoFromDXVA(_Inout_ MFVIDEOFORMAT *pToFormat,_In_ DWORD dwFromDXVA)
HRESULT None mfplat.MFCreate2DMediaBuffer(_In_ DWORD dwWidth,_In_ DWORD dwHeight,_In_ DWORD dwFourCC,_In_ BOOL fBottomUp,_Out_ IMFMediaBuffer **ppBuffer)
HRESULT None mfplat.MFCreateAlignedMemoryBuffer(DWORD cbMaxLength None,DWORD fAlignmentFlags None,IMFMediaBuffer **ppBuffer None)
HRESULT None mfplat.MFCreateAMMediaTypeFromMFMediaType(IMFMediaType *pMFType None,GUID guidFormatBlockType None,AM_MEDIA_TYPE **ppAMType None)
HRESULT None mfplat.MFCreateAsyncResult(IUnknown *punkObject None,IMFAsyncCallback *pCallback None,IUnknown *punkState None,IMFAsyncResult **ppAsyncResult None)
HRESULT None mfplat.MFCreateAttributes(_Out_ IMFAttributes **ppMFAttributes,_In_ UINT32 cInitialSize)
HRESULT None mfplat.MFCreateCollection(_Out_ IMFCollection **ppIMFCollection)
HRESULT None mfplat.MFCreateDXGIDeviceManager(_Out_ UINT *pResetToken,_Out_ IMFDXGIDeviceManager **ppDXVAManager)
HRESULT None mfplat.MFCreateDXGISurfaceBuffer(_In_ REFIID riid,_In_ IUnknown *punkSurface,_In_ UINT uSubresourceIndex,_In_ BOOL fBottomUpWhenLinear,_Out_ IMFMediaBuffer **ppBuffer)
HRESULT None mfplat.MFCreateEventQueue(IMFMediaEventQueue **ppMediaEventQueue None)
HRESULT None mfplat.MFCreateFile(MF_FILE_ACCESSMODE AccessMode None,MF_FILE_OPENMODE OpenMode None,MF_FILE_FLAGS fFlags None,LPCWSTR pwszFileURL None,IMFByteStream **ppIByteStream None)
HRESULT None mfplat.MFCreateLegacyMediaBufferOnMFMediaBuffer(IMFSample *pIMFSample None,IMFMediaBuffer *pIMFMediaBuffer None,DWORD cbOffset None,IMediaBuffer **ppIMediaBuffer None)
HRESULT None mfplat.MFCreateMediaBufferFromMediaType(_In_ IMFMediaType *pMediaType,_In_ LONGLONG llDuration,_In_ DWORD dwMinLength,_In_ DWORD dwMinAlignment,_Out_ IMFMediaBuffer **ppBuffer)
HRESULT None mfplat.MFCreateMediaBufferWrapper(_In_ IMFMediaBuffer *pBuffer,_In_ DWORD cbOffset,_In_ DWORD dwLength,_Out_ IMFMediaBuffer **ppBuffer)
HRESULT None mfplat.MFCreateMediaEvent(MediaEventType met None,REFGUID guidExtendedType None,HRESULT hrStatus None,const PROPVARIANT *pvValue,IMFMediaEvent **ppEvent None)
HRESULT None mfplat.MFCreateMediaExtensionActivate(_In_ PCWSTR szActivatableClassId,_In_ IUnknown *pConfiguration,_In_ REFIID riid,_Out_ LPVOID *ppvObject)
HRESULT None mfplat.MFCreateMediaTypeFromRepresentation(_In_ GUID guidRepresentation,_In_ LPVOID pvRepresentation,_Out_ IMFMediaType **ppIMediaType)
HRESULT None mfplat.MFCreateMediaType(IMFMediaType **ppMFType None)
HRESULT None mfplat.MFCreateMemoryBuffer(DWORD cbMaxLength None,IMFMediaBuffer **ppBuffer None)
HRESULT None mfplat.MFCreateMFByteStreamOnStreamEx(_In_ IUnknown punkStream,_Out_ IMFByteStream **ppByteStream)
HRESULT None mfplat.MFCreateMFByteStreamOnStream(_In_ IStream *pStream,_Out_ IMFByteStream **ppByteStream)
HRESULT None mfplat.MFCreateMFByteStreamWrapper(_In_ IMFByteStream *pStream,_In_ IMFByteStream **ppStreamWrapper)
HRESULT None mfplat.MFCreateMFVideoFormatFromMFMediaType(_In_ IMFMediaType *pMFType,_Out_ MFVIDEOFORMAT **ppMFVF,_Out_ UINT32 *pcbSize)
HRESULT None mfplat.MFCreatePathFromURL(_In_opt_ LPCWSTR pwszFileURL,_Out_ LPWSTR *ppwszFilePath)
HRESULT None mfplat.MFCreatePresentationDescriptor(DWORD cStreamDescriptors None,IMFStreamDescriptor **apStreamDescriptors None,IMFPresentationDescriptor **ppPresentationDescriptor None)
HRESULT None mfplat.MFCreateSample(IMFSample **ppIMFSample None)
HRESULT None mfplat.MFCreateSourceResolver(_Out_ IMFSourceResolver **ppISourceResolver)
HRESULT None mfplat.MFCreateStreamDescriptor(DWORD dwStreamIdentifier None,DWORD cMediaTypes None,IMFMediaType **apMediaTypes None,IMFStreamDescriptor **ppDescriptor None)
HRESULT None mfplat.MFCreateStreamOnMFByteStreamEx(_In_ IMFByteStream *pByteStream,_In_ REFIID riid,_Out_ void **ppv)
HRESULT None mfplat.MFCreateStreamOnMFByteStream(_In_ IMFByteStream *pByteStream,_Out_ IStream **ppStream)
HRESULT None mfplat.MFCreateSystemTimeSource(IMFPresentationTimeSource **ppSystemTimeSource None)
HRESULT None mfplat.MFCreateTempFile(MF_FILE_ACCESSMODE AccessMode None,MF_FILE_OPENMODE OpenMode None,MF_FILE_FLAGS fFlags None,IMFByteStream **ppIByteStream None)
HRESULT None mfplat.MFCreateTransformActivate(_Out_ IMFActivate **ppActivate)
HRESULT None mfplat.MFCreateURLFromPath(_In_opt_ LPCWSTR pwszFilePath,_Out_ LPWSTR *ppwszFileURL)
HRESULT None mfplat.MFCreateVideoMediaTypeFromBitMapInfoHeader(const BITMAPINFOHEADER *pbmihBitMapInfoHeader,DWORD dwPixelAspectRatioX None,DWORD dwPixelAspectRatioY None,MFVideoInterlaceMode InterlaceMode None,QWORD VideoFlags None,QWORD qwFramesPerSecondNumerator None,QWORD qwFramesPerSecondDenominator None,DWORD dwMaxBitRate None,IMFVideoMediaType **ppIVideoMediaType None)
HRESULT None mfplat.MFCreateVideoMediaTypeFromVideoInfoHeader2(const KS_VIDEOINFOHEADER2 *pVideoInfoHeader,DWORD cbVideoInfoHeader None,QWORD AdditionalVideoFlags None,const GUID *pSubtype,IMFVideoMediaType **ppIVideoMediaType None)
HRESULT None mfplat.MFCreateVideoMediaTypeFromVideoInfoHeader(const KS_VIDEOINFOHEADER *pVideoInfoHeader,DWORD cbVideoInfoHeader None,DWORD dwPixelAspectRatioX None,DWORD dwPixelAspectRatioY None,MFVideoInterlaceMode InterlaceMode None,QWORD VideoFlags None,const GUID *pSubtype,IMFVideoMediaType **ppIVideoMediaType None)
HRESULT None mfplat.MFCreateVideoSampleAllocatorEx(_In_ REFIID riid,_Out_ void** ppSampleAllocator)
HRESULT None mfplat.MFCreateWICBitmapBuffer(_In_ REFIID riid,_In_ IUnknown *punkSurface,_Out_ IMFMediaBuffer **ppBuffer)
HRESULT None mfplat.MFDeserializeAttributesFromStream(IMFAttributes *pAttr None,DWORD dwOptions None,IStream *pStm None)
HRESULT None mfplat.MFDeserializePresentationDescriptor(DWORD cbData None,BYTE *pbData None,IMFPresentationDescriptor **ppPD None)
HRESULT None mfplat.MFEndCreateFile(_In_ IMFAsyncResult *pResult,_Out_ IMFByteStream **ppFile)
HRESULT None mfplat.MFEndRegisterWorkQueueWithMMCSS(_In_ IMFAsyncResult *pResult,_In_ DWORD *pdwTaskId)
HRESULT None mfplat.MFEndUnregisterWorkQueueWithMMCSS(_In_ IMFAsyncResult *pResult)
HRESULT None mfplat.MFFrameRateToAverageTimePerFrame(_In_ UINT32 unNumerator,_In_ UINT32 unDenominator,_Out_ UINT64 *punAverageTimePerFrame)
HRESULT None mfplat.MFGetAttributesAsBlob(_In_ IMFAttributes *pAttributes,_Out_ UINT8 *pBuf,_In_ UINT cbBufSize)
HRESULT None mfplat.MFGetAttributesAsBlobSize(_In_ IMFAttributes *pAttributes,_Out_ UINT32 *pcbBufSize)
HRESULT None mfplat.MFGetContentProtectionSystemCLSID(_In_ REFGUID guidProtectionSystemID,_Out_ CLSID *pclsid)
HRESULT None mfplat.MFGetPlaneSize(_In_ DWORD format,_In_ DWORD dwWidth,_In_ DWORD dwHeight,_Out_ DWORD *pdwPlaneSize)
HRESULT None mfplat.MFGetPluginControl(_Out_ IMFPluginControl **ppPluginControl)
HRESULT None mfplat.MFGetStrideForBitmapInfoHeader(_In_ DWORD format,_In_ DWORD dwWidth,_Out_ LONG *pStride)
HRESULT None mfplat.MFGetTimerPeriodicity(_Out_ DWORD *Periodicity)
HRESULT None mfplat.MFGetWorkQueueMMCSSClass(_In_ DWORD dwWorkQueueId,_Out_ LPWSTR pwszClass,_Inout_ DWORD *pcchClass)
HRESULT None mfplat.MFGetWorkQueueMMCSSPriority(_In_ DWORD dwWorkQueueId,_Out_ LONG *lPriority)
HRESULT None mfplat.MFGetWorkQueueMMCSSTaskId(_In_ DWORD dwWorkQueueId,_Out_ LPDWORD pdwTaskId)
HRESULT None mfplat.MFInitAMMediaTypeFromMFMediaType(IMFMediaType *pMFType None,GUID guidFormatBlockType None,AM_MEDIA_TYPE *pAMType None)
HRESULT None mfplat.MFInitMediaTypeFromAMMediaType(IMFMediaType *pMFType None,const AM_MEDIA_TYPE *pAMType)
HRESULT None mfplat.MFInitMediaTypeFromMFVideoFormat(IMFMediaType *pMFType None,const MFVIDEOFORMAT *pMFVF,UINT32 cbBufSize None)
HRESULT None mfplat.MFInitMediaTypeFromWaveFormatEx(IMFMediaType *pMFType None,const WAVEFORMATEX *pWaveFormat,UINT32 cbBufSize None)
HRESULT None mfplat.MFInitVideoFormat(_Out_ MFVIDEOFORMAT *pVideoFormat,_In_ MFStandardVideoFormat type)
HRESULT None mfplat.MFInitVideoFormat_RGB(_In_ MFVIDEOFORMAT *pVideoFormat,_In_ DWORD dwWidth,_In_ DWORD dwHeight,_In_ DWORD D3Dfmt)
HRESULT None mfplat.MFInvokeCallback(IMFAsyncResult *pAsyncResult None)
HRESULT None mfplat.MFLockDXGIDeviceManager(_Out_ UINT *pResetToken,_Out_ IMFDXGIDeviceManager **ppManager)
HRESULT None mfplat.MFLockPlatform(void None None)
HRESULT None mfplat.MFLockSharedWorkQueue(_In_ PCWSTR wszClass,_In_ LONG BasePriority,_Inout_ DWORD *pdwTaskId,_Out_ DWORD *pID)
HRESULT None mfplat.MFLockWorkQueue(_In_ DWORD dwWorkQueue)
HRESULT None mfplat.MFPutWaitingWorkItem(_In_ HANDLE hEvent,_In_ LONG Priority,_In_ IMFAsyncResult *pResult,_Out_ MFWORKITEM_KEY *pKey)
HRESULT None mfplat.MFPutWorkItem2(_In_ DWORD dwQueue,_In_ LONG Priority,_In_ IMFAsyncCallback *pCallback,_In_ IUnknown *pState)
HRESULT None mfplat.MFPutWorkItemEx2(_In_ DWORD dwQueue,_In_ LONG Priority,_In_ IMFAsyncResult *pResult)
HRESULT None mfplat.MFPutWorkItemEx(_In_ DWORD dwQueue,_In_ IMFAsyncResult *pResult)
HRESULT None mfplat.MFPutWorkItem(_In_ DWORD dwQueue,_In_ IMFAsyncCallback *pCallback,_In_ IUnknown *pState)
HRESULT None mfplat.MFRegisterLocalByteStreamHandler(_In_ PCWSTR szFileExtension,_In_ PCWSTR szMimeType,_In_ IMFActivate *pActivate)
HRESULT None mfplat.MFRegisterLocalSchemeHandler(_In_ PCWSTR szScheme,_In_ IMFActivate *pActivate)
HRESULT None mfplat.MFRegisterPlatformWithMMCSS(_In_ PCWSTR wszClass,_Inout_ DWORD *pdwTaskId,_In_ LONG lPriority)
HRESULT None mfplat.MFRemovePeriodicCallback(_In_ DWORD dwKey)
HRESULT None mfplat.MFScheduleWorkItemEx(_In_ IMFAsyncResult *pResult,_In_ INT64 Timeout,_Out_ MFWORKITEM_KEY *pKey)
HRESULT None mfplat.MFScheduleWorkItem(_In_ IMFAsyncCallback *pCallback,_In_ IUnknown *pState,_In_ INT64 Timeout,_Out_ MFWORKITEM_KEY *pKey)
HRESULT None mfplat.MFSerializeAttributesToStream(IMFAttributes *pAttr None,DWORD dwOptions None,IStream *pStm None)
HRESULT None mfplat.MFSerializePresentationDescriptor(IMFPresentationDescriptor *pPD None,DWORD *pcbData None,BYTE **ppbData None)
HRESULT None mfplat.MFShutdown(void None None)
HRESULT None mfplat.MFTEnum(_In_ GUID guidCategory,_In_ UINT32 Flags,_In_ MFT_REGISTER_TYPE_INFO *pInputType,_In_ MFT_REGISTER_TYPE_INFO *pOutputType,_In_ IMFAttributes *pAttributes,_Out_ CLSID **ppclsidMFT,_Out_ UINT32 *pcMFTs)
HRESULT None mfplat.MFTGetInfo(_In_ CLSID clsidMFT,_Out_ LPWSTR *pszName,_Out_ MFT_REGISTER_TYPE_INFO **ppInputTypes,_Out_ UINT32 *pcInputTypes,_Out_ MFT_REGISTER_TYPE_INFO **ppOutputTypes,_Out_ UINT32 *pcOutputTypes,_Out_ IMFAttributes **ppAttributes)
HRESULT None mfplat.MFTRegister(_In_ CLSID clsidMFT,_In_ GUID guidCategory,_In_ LPWSTR pszName,_In_ UINT32 Flags,_In_ UINT32 cInputTypes,_In_ MFT_REGISTER_TYPE_INFO *pInputTypes,_In_ UINT32 cOutputTypes,_In_ MFT_REGISTER_TYPE_INFO *pOutputTypes,_In_ IMFAttributes *pAttributes)
HRESULT None mfplat.MFTUnregister(_In_ CLSID clsidMFT)
HRESULT None mfplat.MFTUnregisterLocalByCLSID(_In_ CLSID clsidMFT)
HRESULT None mfplat.MFTUnregisterLocal(_In_ IClassFactory *pClassFactory)
HRESULT None mfplat.MFUnlockDXGIDeviceManager(void None None)
HRESULT None mfplat.MFUnlockPlatform(void None None)
HRESULT None mfplat.MFUnlockWorkQueue(_In_ DWORD dwWorkQueue)
HRESULT None mfplat.MFUnregisterPlatformFromMMCSS(void None None)
HRESULT None mfplat.MFUnwrapMediaType(IMFMediaType *pWrap None,IMFMediaType **ppOrig None)
HRESULT None mfplat.MFValidateMediaTypeSize(_In_ GUID FormatType,_In_ UINT8 *pBlock,_In_ UINT32 cbSize)
HRESULT None mfplat.MFWrapMediaType(IMFMediaType *pOrig None,REFGUID MajorType None,REFGUID SubType None,IMFMediaType **ppWrap None)
HRESULT None mfplay.MFPCreateMediaPlayer(_In_ LPCWSTR pwszURL,_In_ BOOL fStartPlayback,_In_ MFP_CREATION_OPTIONS creationOptions,_In_ IMFPMediaPlayerCallback *pCallback,_In_ HWND hWnd,_Out_ IMFPMediaPlayer **ppMediaPlayer)
HRESULT None mfreadwrite.MFCreateSinkWriterFromMediaSink(_In_ IMFMediaSink *pMediaSink,_In_ IMFAttributes *pAttributes,_Out_ IMFSinkWriter **ppSinkWriter)
HRESULT None mfreadwrite.MFCreateSinkWriterFromURL(_In_ LPCWSTR pwszOutputURL,_In_ IMFByteStream *pByteStream,_In_ IMFAttributes *pAttributes,_Out_ IMFSinkWriter **ppSinkWriter)
HRESULT None mfreadwrite.MFCreateSourceReaderFromByteStream(_In_ IMFByteStream *pByteStream,_In_ IMFAttributes *pAttributes,_Out_ IMFSourceReader **ppSourceReader)
HRESULT None mfreadwrite.MFCreateSourceReaderFromMediaSource(_In_ IMFMediaSource *pMediaSource,_In_ IMFAttributes *pAttributes,_Out_ IMFSourceReader **ppSourceReader)
HRESULT None mfreadwrite.MFCreateSourceReaderFromURL(_In_ LPCWSTR pwszURL,_In_ IMFAttributes *pAttributes,_Out_ IMFSourceReader **ppSourceReader)
HRESULT None mf.RenderingParametersUpdateHandler(_In_ IMediaRenderer *sender,_In_ RenderingParameters arg)
HRESULT None mmcndmgr.AddBitmap([in] int nImages,[in] HBITMAP hbmp,[in] int cxSize,[in] int cySize,[in] COLORREF crMask)
HRESULT None mmcndmgr.AddButton([in] int idCommand,[in] LPOLESTR lpButtonText,[in] LPOLESTR lpTooltipText)
HRESULT None mmcndmgr.AddExtension([in] HSCOPEITEM hItem,[in] LPCLSID lpClsid)
HRESULT None mmcndmgr.AddItem([in] CONTEXTMENUITEM2 *pItem)
HRESULT None mmcndmgr.AddItem([in] CONTEXTMENUITEM *pItem)
HRESULT None mmcndmgr.AddPage([in] HPROPSHEETPAGE hPage)
HRESULT None mmcndmgr.AddPrimaryPages([in] LPUNKNOWN lpUnknown,[in] BOOL bCreateHandle,[in] HWND hNotifyWindow,[in] BOOL bScopePane)
HRESULT None mmcndmgr.AddPropertyName([in] LPCOLESTR pszPropName,[in] DWORD dwFlags)
HRESULT None mmcndmgr.AddString([in] LPCOLESTR pszAdd,[out] MMC_STRING_ID *pStringID)
HRESULT None mmcndmgr.AddThirdPartyExtensionItems([in] LPDATAOBJECT piDataObject)
HRESULT None mmcndmgr.AddView([in] PMMC_EXT_VIEW_DATA pExtViewData)
HRESULT None mmcndmgr.Create([in] MMC_CONTROL_TYPE nType,[in] LPEXTENDCONTROLBAR pExtendControlbar,[out] LPUNKNOWN *ppUnknown)
HRESULT None mmcndmgr.CreatePropertySheet([in] LPCWSTR title,[in] boolean type,[in] long cookie,[in] LPDATAOBJECT pIDataObject,[in] DWORD dwOptions)
HRESULT None mmcndmgr.DeleteButton([in] int nIndex)
HRESULT None mmcndmgr.DeleteColumn([in] int nCol)
HRESULT None mmcndmgr.DeleteItem([in] HRESULTITEM itemID,[in] INT nCol)
HRESULT None mmcndmgr.DeleteItem([in] HSCOPEITEM hItem,[in] long fDeleteThis)
HRESULT None mmcndmgr.DeleteString([in] MMC_STRING_ID StringID)
HRESULT None mmcndmgr.Detach([in] LPUNKNOWN lpUnknown)
HRESULT None mmcndmgr.FindItemByLParam([in] LPARAM lParam,[out] HRESULTITEM *pItemID)
HRESULT None mmcndmgr.GetButtonState([in] int idCommand,[in] MMC_BUTTON_STATE nState,[out] BOOL *pState)
HRESULT None mmcndmgr.GetChildItem([in] HSCOPEITEM item,[out] HSCOPEITEM *pItemChild,[out] long *plCookie)
HRESULT None mmcndmgr.GetColumnConfigData([in] SColumnSetID *pColID,[out] MMC_COLUMN_SET_DATA **ppColSetData)
HRESULT None mmcndmgr.GetColumnFilter([in] UINT nColumn,[in None None,out] LPDWORD pdwType,[in None None,out] MMC_FILTERDATA *pFilterData)
HRESULT None mmcndmgr.GetColumnSortData([in] SColumnSetID *pColID,[out] MMC_SORT_SET_DATA **ppColSortData)
HRESULT None mmcndmgr.GetColumnText([in] int nCol,[out] LPOLESTR *pText)
HRESULT None mmcndmgr.GetColumnWidth([in] int nCol,[out] int *pWidth)
HRESULT None mmcndmgr.GetDefaultVerb([out] MMC_CONSOLE_VERB peCmID)
HRESULT None mmcndmgr.GetItem([in None None,out] LPRESULTDATAITEM item)
HRESULT None mmcndmgr.GetItem([in None None,out] LPSCOPEDATAITEM item)
HRESULT None mmcndmgr.GetMMCVersion([out] long *pVersionMajor,[out] long *pVersionMinor)
HRESULT None mmcndmgr.GetNextItem([in] HSCOPEITEM item,[out] HSCOPEITEM *pItemNext,[out] long *plCookie)
HRESULT None mmcndmgr.GetParentItem([in] HSCOPEITEM item,[out] HSCOPEITEM *pItemParent,[out] long *plCookie)
HRESULT None mmcndmgr.GetVerbState([in] MMC_CONSOLE_VERB eCmdID,[in] MMC_BUTTON_STATE nState,[out] BOOL *pState)
HRESULT None mmcndmgr.GetViewMode([out] long *lViewMode)
HRESULT None mmcndmgr.ImageListSetStrip([in] LONG_PTR *BMapSm,[in] LONG_PTR *BMapLg,[in] long nStartLoc,[in] COLORREF cMask)
HRESULT None mmcndmgr.InsertColumn([in] int nCol,[in] LPCWSTR title,[in] int nFormat,[in] int nWidth)
HRESULT None mmcndmgr.InsertItem([in None None,out] LPRESULTDATAITEM item)
HRESULT None mmcndmgr.InsertItem([in None None,out] LPSCOPEDATAITEM item)
HRESULT None mmcndmgr.MessageBox([in] LPCWSTR lpszText,[in] LPCWSTR lpszTitle,[in] UINT fuStyle,[out] int *piRetval)
HRESULT None mmcndmgr.ModifyItemState([in] int nIndex,[in] HRESULTITEM itemID,[in] UINT uAdd,[in] UINT uRemove)
HRESULT None mmcndmgr.ModifyViewStyle([in] MMC_RESULT_VIEW_STYLE add,[in] MMC_RESULT_VIEW_STYLE remove)
HRESULT None mmcndmgr.QueryConsoleVerb([out] LPCONSOLEVERB *ppConsoleVerb)
HRESULT None mmcndmgr.QueryResultImageList([out] LPIMAGELIST *ppImageList)
HRESULT None mmcndmgr.QueryResultView([out] LPUNKNOWN *pUnknown)
HRESULT None mmcndmgr.RenameResultItem([in] HRESULTITEM itemID)
HRESULT None mmcndmgr.RenameScopeItem([in] HSCOPEITEM hScopeItem)
HRESULT None mmcndmgr.SelectScopeItem([in] HSCOPEITEM hScopeItem)
HRESULT None mmcndmgr.SetBodyText([in] LPCOLESTR pszBodyText)
HRESULT None mmcndmgr.SetButton([in] int idCommand,[in] LPOLESTR lpButtonText,[in] LPOLESTR lpTooltipText)
HRESULT None mmcndmgr.SetButtonState([in] int idCommand,[in] MMC_BUTTON_STATE nState,[in] BOOL bState)
HRESULT None mmcndmgr.SetColumnConfigData([in] SColumnSetID *pColID,[in] MMC_COLUMN_SET_DATA *pColSetData)
HRESULT None mmcndmgr.SetColumnFilter([in] UINT nColumn,[in] DWORD dwType,[in] MMC_FILTERDATA *pFilterData)
HRESULT None mmcndmgr.SetColumnSortData([in] SColumnSetID *pColID,[in] MMC_SORT_SET_DATA *pColSortData)
HRESULT None mmcndmgr.SetColumnText([in] int nCol,[in] LPCWSTR title)
HRESULT None mmcndmgr.SetColumnWidth([in] int nCol,[in] int nWidth)
HRESULT None mmcndmgr.SetDescBarText([in] LPOLESTR DescText)
HRESULT None mmcndmgr.SetHeader([in] LPHEADERCTRL pHeader)
HRESULT None mmcndmgr.SetItemCount([in] int nItemCount,[in] DWORD dwOptions)
HRESULT None mmcndmgr.SetItem([in] LPRESULTDATAITEM item)
HRESULT None mmcndmgr.SetItem([in] LPSCOPEDATAITEM item)
HRESULT None mmcndmgr.SetTitleText([in] LPCOLESTR pszTitleText)
HRESULT None mmcndmgr.SetToolbar([in] LPTOOLBAR pToolbar)
HRESULT None mmcndmgr.SetViewMode([in] long lViewMode)
HRESULT None mmcndmgr.ShowContextMenu([in] HWND hwndParent,[in] long xPos,[in] long yPos,[out] long *plSelected)
HRESULT None mmcndmgr.Show([in] LONG_PTR window,[in] int page)
HRESULT None mmcndmgr.ShowTopic([in] LPOLESTR pszHelpTopic)
HRESULT None mmcndmgr.Sort([in] int nColumn,[in] DWORD dwSortOptions,[in] long lUserParam)
HRESULT None mmcndmgr.UpdateAllViews([in] LPDATAOBJECT lpDataObject,[in] LPARAM data,[in] LONG_PTR hint)
HRESULT None mmcndmgr.UpdateItem([in] HRESULTITEM itemID)
HRESULT None mobsync.Clone([out] IEnumSyncItems **ppEnumSyncItems)
HRESULT None mobsync.Clone([out] ppenum **ISyncMgrEnumItems)
HRESULT None mobsync.EnumItems([in] REFCLSID pHandlerID,[in] IEnumSyncItems **ppEnumItems)
HRESULT None mobsync.EnumSyncMgrItems([out] ISyncMgrEnumItems **ppSyncMgrEnumItems)
HRESULT None mobsync.GetHandlerInfo([out] SYNCMGRHANDLERINFO **ppSyncMgrHandlerInfo)
HRESULT None mobsync.GetITask([out] ITask **ppITask)
HRESULT None mobsync.GetMostRecentRunTime([out] SYSTEMTIME *pstRecentRun)
HRESULT None mobsync.GetNextRunTime([out] SYSTEMTIME *pstNextRun)
HRESULT None mobsync.GetScheduleCookie([out] SYNCSCHEDULECOOKIE *pSyncSchedCookie)
HRESULT None mobsync.GetTrigger([out] ITaskTrigger **ppTrigger)
HRESULT None mobsync.SetConnection([out] LPCWSTR pwszConnectionName,[out] DWORD dwConnType)
HRESULT None mrmsupport.CreateResourceIndexer(_In_ PCWSTR projectRoot,_In_opt_ PCWSTR extensionDllPath,_Out_ PVOID *ppResourceIndexer)
HRESULT None mrmsupport.IndexFilePath(_In_ PVOID resourceIndexer,_In_ PCWSTR filePath,_Out_ PWSTR *ppResourceUri,_Out_ ULONG *pQualifierCount,_Out_ IndexedResourceQualifier **ppQualifiers)
HRESULT None msctf.Activate([out] TfClientId *ptid)
HRESULT None msctf.AdviseSink([in] REFIID riid,[in] IUnknown *punk,[out] DWORD *pdwCookie)
HRESULT None msctf.Clone([out] IEnumTfDocumentMgrs **ppEnum)
HRESULT None msctf.Clone([out] IEnumTfInputProcessorProfiles **ppEnum)
HRESULT None msctf.Clone([out] IEnumTfUIElements **ppEnum)
HRESULT None msctf.EnumInputProcessorInfo([out] IEnumGUID **ppEnum)
HRESULT None msctf.EnumProperties([out] IEnumTfProperties **ppEnum)
HRESULT None msctf.GetActiveView([out] TsViewCookie *pvcView)
HRESULT None msctf.GetContext([out] ITfContext **ppContext)
HRESULT None msctf.GetCurrentLanguage([out] LANGID *plangid)
HRESULT None msctf.GetDocumentMgr([out] ITfDocumentMgr **ppdim)
HRESULT None msctf.GetEndACP([out] LONG *pacp)
HRESULT None msctf.GetEnd([in] TfEditCookie ec,[out] ITfRange **ppEnd)
HRESULT None msctf.GetEnd([out] IAnchor **ppaEnd)
HRESULT None msctf.GetForeground([out] CLSID *pclsid)
HRESULT None msctf.GetGravity([out] TfGravity *pgStart,[out] TfGravity *pgEnd)
HRESULT None msctf.GetGUID([out] GUID *pguid)
HRESULT None msctf.GetReverseConversion([in] LANGID langid,[in] REFGUID guidProfile,[in] DWORD dwflag,[out] ITfReverseConversion **ppReverseConversion)
HRESULT None msctf.GetScreenExt([in] TsViewCookie vcView,[out] RECT *prc)
HRESULT None msctf.GetScreenExt([out] RECT *prc)
HRESULT None msctf.GetSelection([out] UINT *puIndex)
HRESULT None msctf.GetStatus([out] DWORD *pdwStatus)
HRESULT None msctf.GetStatus([out] TS_STATUS *pdcs)
HRESULT None msctf.GetText([in] LONG acpStart,[in] LONG acpEnd,[out] WCHAR *pchPlain,[in] ULONG cchPlainReq,[out] ULONG *pcchPlainRet,[out] TS_RUNINFO *prgRunInfo,[in] ULONG cRunInfoReq,[out] ULONG *pcRunInfoRet,[out] LONG *pacpNext)
HRESULT None msctf.GetText([out] BSTR *pbstrText)
HRESULT None msctf.GetType([out] GUID *pguid)
HRESULT None msctf.InitMenu([in] ITfMenu *pMenu)
HRESULT None msctf.InsertEmbedded([in] DWORD dwFlags,[in] LONG acpStart,[in] LONG acpEnd,[in] IDataObject *pDataObject,[out] TS_TEXTCHANGE *pChange)
HRESULT None msctf.InWriteSession([in] TfClientId tid,[out] BOOL *pfWriteSession)
HRESULT None msctf.KeyDown([in] WPARAM wParam,[in] LPARAM lParam,[out] BOOL *pfEaten)
HRESULT None msctf.KeyUp([in] WPARAM wParam,[in] LPARAM lParam,[out] BOOL *pfEaten)
HRESULT None msctf.Next([in] ULONG ulCount,[out] ITfDisplayAttributeInfo **rgInfo,[out] ULONG *pcFetched)
HRESULT None msctf.OnLanguageChange([in] LANGID langid,[out] BOOL *pfAccept)
HRESULT None msctf.OnMenuSelect([in] UINT wID)
HRESULT None msctf.RequestEditSession([in] TfClientId tid,[in] ITfEditSession *pes,[in] DWORD dwFlags,[out] HRESULT *phrSession)
HRESULT None msctf.SetInputScope(_In_ HWND hwnd,_In_ InputScope inputscope)
HRESULT None msctf.SetValueStore([in] TfEditCookie ec,[in] ITfRange *pRange,[in] ITfPropertyStore *pPropStore)
HRESULT None msctf.SimulatePreservedKey([in] ITfContext *pic,[in] REFGUID rguid,[out] BOOL *pfEaten)
HRESULT None msctf.TF_CreateDisplayAttributeMgr(_Out_ ITfDisplayAttributeMgr **ppdam)
HRESULT None msctf.TF_CreateLangBarItemMgr(_Out_ ITfLangBarItemMgr **pplbim)
HRESULT None msctf.TF_CreateLangBarMgr(_Out_ ITfLangBarMgr **pppbm)
HRESULT None msctf.TF_CreateThreadMgr(_Out_ ITfThreadMgr **pptim)
HRESULT None msctf.TF_GetThreadMgr(_Out_ TfThreadMgr **pptim)
HRESULT None msctf.UnadviseKeyEventSink([in] TfClientId tid)
HRESULT None msctf.UnadviseMouseSink([in] DWORD dwCookie)
HRESULT None msdmo.DMOEnum(REFGUID guidCategory None,DWORD dwFlags None,DWORD cInTypes None,const DMO_PARTIAL_MEDIATYPE *pInTypes,DWORD cOutTypes None,const DMO_PARTIAL_MEDIATYPE *pOutTypes,IEnumDMO **ppEnum None)
HRESULT None msdmo.DMOGetName(REFCLSID clsidDMO None,WCHAR szName[] None)
HRESULT None msdmo.DMOGetTypes(REFCLSID clsidDMO None,unsigned long ulInputTypesRequested,unsigned long *pulInputTypesSupplied,DMO_PARTIAL_MEDIATYPE pInputTypes None,unsigned long ulOutputTypesRequested,unsigned long *pulOutputTypesSupplied,DMO_PARTIAL_MEDIATYPE pOutputTypes None)
HRESULT None msdmo.MoCopyMediaType(DMO_MEDIA_TYPE *pmtDest None,const DMO_MEDIA_TYPE *pmtSrc)
HRESULT None msdmo.MoCreateMediaType(DMO_MEDIA_TYPE **ppmt None,DWORD cbFormat None)
HRESULT None msdmo.MoInitMediaType(DMO_MEDIA_TYPE *pmt None,DWORD cbFormat None)
HRESULT None msdrm.DRMAcquireAdvisories(_In_ DRMHSESSION hLicenseStorage,_In_ PWSTR wszLicense,_In_opt_ PWSTR wszURL,_In_ VOID *pvContext)
HRESULT None msdrm.DRMAcquireIssuanceLicenseTemplate(_In_ DRMHSESSION hClient,_In_ UINT uFlags,_In_ VOID *pvReserved,_In_ UINT cReserved,_In_opt_ PWSTR *pwszReserved,_In_ PWSTR wszURL,_In_ VOID *pvContext)
HRESULT None msdrm.DRMAcquireLicense(_In_ DRMHSESSION hSession,_In_ UINT uFlags,_In_ PWSTR wszGroupIdentityCredential,_In_ PWSTR wszRequestedRights,_In_ PWSTR wszCustomData,_In_ PWSTR wszURL,_In_ VOID *pvContext)
HRESULT None msdrm.DRMActivate(_In_ DRMHSESSION hClient,_In_ UINT uFlags,_In_ UINT uLangID,_In_ DRM_ACTSERV_INFO *pActServInfo,_In_ VOID *pvContext,_In_ HWND hParentWnd)
HRESULT None msdrm.DRMAddLicense(_In_ DRMHSESSION hLicenseStorage,_In_ UINT uFlags,_In_ PWSTR wszLicense)
HRESULT None msdrm.DRMAddRightWithUser(_In_ DRMPUBHANDLE hIssuanceLicense,_In_ DRMPUBHANDLE hRight,_In_ DRMPUBHANDLE hUser)
HRESULT None msdrm.DRMAttest(_In_ DRMHANDLE hEnablingPrincipal,_In_ PWSTR wszData,_In_ DRMATTESTTYPE eType,_Inout_ UINT *pcStrLen,_Out_ PWSTR wszAttestedBlob)
HRESULT None msdrm.DRMCheckSecurity(_In_ DRMENVHANDLE hEnv,_In_ UINT cLevel)
HRESULT None msdrm.DRMClearAllRights(_In_ DRMPUBHANDLE hIssuanceLicense)
HRESULT None msdrm.DRMCloseEnvironmentHandle(_In_ DRMENVHANDLE hEnv)
HRESULT None msdrm.DRMCloseHandle(_In_ DRMHANDLE handle)
HRESULT None msdrm.DRMClosePubHandle(_In_ DRMPUBHANDLE hPub)
HRESULT None msdrm.DRMCloseQueryHandle(_In_ DRMQUERYHANDLE hQuery)
HRESULT None msdrm.DRMCloseSession(_In_ DRMHSESSION hSession)
HRESULT None msdrm.DRMConstructCertificateChain(_In_ UINT cCertificates,_In_ PWSTR *rgwszCertificates,_Inout_ UINT *pcChain,_Out_ PWSTR wszChain)
HRESULT None msdrm.DRMCreateBoundLicense(_In_ DRMENVHANDLE hEnv,_In_ DRMBOUNDLICENSEPARAMS *pParams,_In_ PWSTR wszLicenseChain,_Out_ DRMHANDLE *phBoundLicense,_Out_ DRMHANDLE *phErrorLog)
HRESULT None msdrm.DRMCreateClientSession(_In_ DRMCALLBACK pfnCallback,_In_ UINT uCallbackVersion,_In_ PWSTR wszGroupIDProviderType,_In_opt_ PWSTR wszGroupID,_Out_ DRMHSESSION *phClient)
HRESULT None msdrm.DRMCreateEnablingBitsDecryptor(_In_ DRMHANDLE hBoundLicense,_In_opt_ PWSTR wszRight,_In_ DRMHANDLE hAuxLib,_In_opt_ PWSTR wszAuxPlug,_Out_ DRMHANDLE *phDecryptor)
HRESULT None msdrm.DRMCreateEnablingBitsEncryptor(_In_ DRMHANDLE hBoundLicense,_In_opt_ PWSTR wszRight,_In_ DRMHANDLE hAuxLib,_In_opt_ PWSTR wszAuxPlug,_Out_ DRMHANDLE *phEncryptor)
HRESULT None msdrm.DRMCreateEnablingPrincipal(_In_ DRMENVHANDLE hEnv,_In_ DRMHANDLE hLibrary,_In_ PWSTR wszObject,_In_ DRMID *pidPrincipal,_In_ PWSTR wszCredentials,_Out_ DRMHANDLE *pHEnablingPrincipal)
HRESULT None msdrm.DRMCreateIssuanceLicense(_In_ SYSTEMTIME *pstTimeFrom,_In_ SYSTEMTIME *pstTimeUntil,_In_ PWSTR wszReferralInfoName,_In_ PWSTR wszReferralInfoURL,_In_opt_ DRMPUBHANDLE hOwner,_In_ PWSTR wszIssuanceLicense,_In_ DRMHANDLE hBoundLicense,_Out_ DRMPUBHANDLE *phIssuanceLicense)
HRESULT None msdrm.DRMCreateLicenseStorageSession(_In_ DRMENVHANDLE hEnv,_In_ DRMHANDLE hDefaultLibrary,_In_ DRMHSESSION hClient,_In_ UINT uFlags,_In_ PWSTR wszIssuanceLicense,_Out_ DRMHSESSION *phLicenseStorage)
HRESULT None msdrm.DRMCreateRight(_In_ PWSTR wszRightName,_In_ SYSTEMTIME *pstFrom,_In_ SYSTEMTIME *pstUntil,_In_ UINT cExtendedInfo,_In_ PWSTR *pwszExtendedInfoName,_In_ PWSTR *pwszExtendedInfoValue,_Out_ DRMPUBHANDLE *phRight)
HRESULT None msdrm.DRMCreateUser(_In_ PWSTR wszUserName,_In_ PWSTR wszUserId,_In_ PWSTR wszUserIdType,_Out_ DRMPUBHANDLE *phUser)
HRESULT None msdrm.DRMDecode(_In_ PWSTR wszAlgID,_In_ PWSTR wszEncodedString,_In_ UINT *puDecodedDataLen,_Out_ BYTE *pbDecodedData)
HRESULT None msdrm.DRMDeconstructCertificateChain(_In_ PWSTR wszChain,_In_ UINT iWhich,_Inout_ UINT *pcCert,_Out_ PWSTR wszCert)
HRESULT None msdrm.DRMDecrypt(_In_ DRMHANDLE hCryptoProvider,_In_ UINT iPosition,_In_ UINT cNumInBytes,_In_ BYTE *pbInData,_Inout_ UINT *pcNumOutBytes,_Out_ BYTE *pbOutData)
HRESULT None msdrm.DRMDeleteLicense(_In_ DRMHSESSION hSession,_In_ PWSTR wszLicenseId)
HRESULT None msdrm.DRMDuplicateEnvironmentHandle(_In_ DRMENVHANDLE hToCopy,_Out_ DRMENVHANDLE *phCopy)
HRESULT None msdrm.DRMDuplicateHandle(_In_ DRMHANDLE hToCopy,_Out_ DRMHANDLE *phCopy)
HRESULT None msdrm.DRMDuplicatePubHandle(_In_ DRMPUBHANDLE hPubIn,_Out_ DRMPUBHANDLE *phPubOut)
HRESULT None msdrm.DRMDuplicateSession(_In_ DRMHSESSION hSessionIn,_Out_ DRMHSESSION *phSessionOut)
HRESULT None msdrm.DRMEncode(_In_ PWSTR wszAlgID,_In_ UINT uDataLen,_In_ BYTE *pbDecodedData,_Inout_ UINT *puEncodedStringLen,_Out_ PWSTR wszEncodedString)
HRESULT None msdrm.DRMEncrypt(_In_ DRMHANDLE hCryptoProvider,_In_ UINT iPosition,_In_ UINT cNumInBytes,_In_ BYTE *pbInData,_Inout_ UINT *pcNumOutBytes,_Out_ BYTE *pbOutData)
HRESULT None msdrm.DRMEnumerateLicense(_In_ DRMHSESSION hSession,_In_ UINT uFlags,_In_ UINT uIndex,_Inout_ BOOL *pfSharedFlag,_Inout_ UINT *puCertificateDataLen,_Out_ PWSTR wszCertificateData)
HRESULT None msdrm.DRMGetApplicationSpecificData(_In_ DRMPUBHANDLE hIssuanceLicense,_In_ UINT uIndex,_Inout_ UINT *puNameLength,_Out_ PWSTR wszName,_Inout_ UINT *puValueLength,_Out_ PWSTR wszValue)
HRESULT None msdrm.DRMGetBoundLicenseAttributeCount(_In_ DRMHANDLE hQueryRoot,_In_ PWSTR wszAttribute,_Out_ UINT *pcAttributes)
HRESULT None msdrm.DRMGetBoundLicenseAttribute(_In_ DRMHANDLE hQueryRoot,_In_ PWSTR wszAttribute,_In_ UINT iWhich,_Out_ DRMENCODINGTYPE *peEncoding,_Inout_ UINT *pcBuffer,_Out_ BYTE *pbBuffer)
HRESULT None msdrm.DRMGetBoundLicenseObjectCount(_In_ DRMHANDLE hQueryRoot,_In_ PWSTR wszSubObjectType,_Out_ UINT *pcSubObject)
HRESULT None msdrm.DRMGetBoundLicenseObject(_In_ DRMHANDLE hQueryRoot,_In_ PWSTR wszSubObjectType,_In_ UINT iWhich,_Out_ DRMHANDLE *phSubObject)
HRESULT None msdrm.DRMGetCertificateChainCount(_In_ PWSTR wszChain,_Out_ UINT *pcCertCount)
HRESULT None msdrm.DRMGetClientVersion(_In_ DRM_CLIENT_VERSION_INFO *pDRMClientVersionInfo)
HRESULT None msdrm.DRMGetEnvironmentInfo(_In_ DRMENVHANDLE handle,_In_ PWSTR wszAttribute,_Out_ DRMENCODINGTYPE *peEncoding,_Inout_ UINT *pcBuffer,_Out_ BYTE *pbBuffer)
HRESULT None msdrm.DRMGetInfo(_In_ DRMHANDLE handle,_In_ PWSTR wszAttribute,_Out_ DRMENCODINGTYPE *peEncoding,_Inout_ UINT *pcBuffer,_Out_ BYTE *pbBuffer)
HRESULT None msdrm.DRMGetIntervalTime(_In_ DRMPUBHANDLE hIssuanceLicense,_In_ UINT *pcDays)
HRESULT None msdrm.DRMGetIssuanceLicenseInfo(_In_ DRMPUBHANDLE hIssuanceLicense,_Out_ SYSTEMTIME *pstTimeFrom,_Out_ SYSTEMTIME *pstTimeUntil,_In_ UINT uFlags,_Inout_ UINT *puDistributionPointNameLength,_Out_ PWSTR wszDistributionPointName,_Inout_ UINT *puDistributionPointURLLength,_Out_ PWSTR wszDistributionPointURL,_Out_ DRMPUBHANDLE *phOwner,_Out_ BOOL *pfOfficial)
HRESULT None msdrm.DRMGetIssuanceLicenseTemplate(_In_ DRMPUBHANDLE hIssuanceLicense,_Inout_ UINT *puIssuanceLicenseTemplateLength,_Out_ PWSTR wszIssuanceLicenseTemplate)
HRESULT None msdrm.DRMGetMetaData(_In_ DRMPUBHANDLE hIssuanceLicense,_Inout_ UINT *puContentIdLength,_Out_opt_ PWSTR wszContentId,_Inout_ UINT *puContentIdTypeLength,_Out_opt_ PWSTR wszContentIdType,_Inout_opt_ UINT *puSKUIdLength,_Out_opt_ PWSTR wszSKUId,_Inout_opt_ UINT *puSKUIdTypeLength,_Out_opt_ PWSTR wszSKUIdType,_Inout_opt_ UINT *puContentTypeLength,_Out_opt_ PWSTR wszContentType,_Inout_opt_ UINT *puContentNameLength,_Out_opt_ PWSTR wszContentName)
HRESULT None msdrm.DRMGetNameAndDescription(_In_ DRMPUBHANDLE hIssuanceLicense,_In_ UINT uIndex,_Out_ UINT *pulcid,_Inout_ UINT *puNameLength,_Out_ PWSTR wszName,_Inout_ UINT *puDescriptionLength,_Out_ PWSTR wszDescription)
HRESULT None msdrm.DRMGetOwnerLicense(_In_ DRMPUBHANDLE hIssuanceLicense,_Inout_ UINT *puLength,_Out_ PWSTR wszOwnerLicense)
HRESULT None msdrm.DRMGetProcAddress(_In_ DRMHANDLE hLibrary,_In_ PWSTR wszProcName,_Out_ FARPROC *ppfnProcAddress)
HRESULT None msdrm.DRMGetRevocationPoint(_In_ DRMPUBHANDLE hIssuanceLicense,_Inout_ UINT *puIdLength,_Out_ PWSTR wszId,_Inout_ UINT *puIdTypeLength,_Out_ PWSTR wszIdType,_Inout_ UINT *puURLLength,_Out_ PWSTR wszURL,_Out_ SYSTEMTIME *pstFrequency,_Inout_ UINT *puNameLength,_Out_ PWSTR wszName,_Inout_ UINT *puPublicKeyLength,_Out_ PWSTR wszPublicKey)
HRESULT None msdrm.DRMGetRightExtendedInfo(_In_ DRMPUBHANDLE hRight,_In_ UINT uIndex,_Inout_ UINT *puExtendedInfoNameLength,_Out_ PWSTR wszExtendedInfoName,_Inout_ UINT *puExtendedInfoValueLength,_Out_ PWSTR wszExtendedInfoValue)
HRESULT None msdrm.DRMGetRightInfo(_In_ DRMPUBHANDLE hRight,_Inout_ UINT *puRightNameLength,_Out_ PWSTR wszRightName,_Out_ SYSTEMTIME *pstFrom,_Out_ SYSTEMTIME *pstUntil)
HRESULT None msdrm.DRMGetSecurityProvider(_In_ UINT uFlags,_Inout_ UINT *puTypeLen,_Out_ PWSTR wszType,_Inout_ UINT *puPathLen,_Out_ PWSTR wszPath)
HRESULT None msdrm.DRMGetServiceLocation(_In_opt_ DRMHSESSION hClient,_In_ UINT uServiceType,_In_ UINT uServiceLocation,_In_ PWSTR wszIssuanceLicense,_Inout_ UINT *puServiceURLLength,_Out_ PWSTR wszServiceURL)
HRESULT None msdrm.DRMGetSignedIssuanceLicense(_In_ DRMENVHANDLE hEnv,_In_ DRMPUBHANDLE hIssuanceLicense,_In_ UINT uFlags,_In_ BYTE *pbSymKey,_In_ UINT cbSymKey,_In_ PWSTR wszSymKeyType,_In_ PWSTR wszClientLicensorCertificate,_In_ DRMCALLBACK pfnCallback,_In_ PWSTR wszURL,_In_ VOID *pvContext)
HRESULT None msdrm.DRMGetTime(_In_ DRMENVHANDLE hEnv,_In_ DRMTIMETYPE eTimerIdType,_Out_ SYSTEMTIME *poTimeObject)
HRESULT None msdrm.DRMGetUnboundLicenseAttributeCount(_In_ DRMQUERYHANDLE hQueryRoot,_In_ PWSTR wszAttributeType,_Out_ UINT *pcAttributes)
HRESULT None msdrm.DRMGetUnboundLicenseAttribute(_In_ DRMQUERYHANDLE hQueryRoot,_In_ PWSTR wszAttributeType,_In_ UINT iWhich,_Out_ DRMENCODINGTYPE *peEncoding,_Inout_ UINT *pcBuffer,_Out_ BYTE *pbBuffer)
HRESULT None msdrm.DRMGetUnboundLicenseObjectCount(_In_ DRMQUERYHANDLE hQueryRoot,_In_ PWSTR wszSubObjectType,_Out_ UINT *pcSubObjects)
HRESULT None msdrm.DRMGetUnboundLicenseObject(_In_ DRMQUERYHANDLE hQueryRoot,_In_ PWSTR wszSubObjectType,_In_ UINT iIndex,_Out_ DRMQUERYHANDLE *phSubQuery)
HRESULT None msdrm.DRMGetUsagePolicy(_In_ DRMPUBHANDLE hIssuanceLicense,_In_ UINT uIndex,_Out_ DRM_USAGEPOLICY_TYPE *peUsagePolicyType,_Out_ BOOL *pfExclusion,_Inout_ UINT *puNameLength,_Out_ PWSTR wszName,_Inout_ UINT *puMinVersionLength,_Out_ PWSTR wszMinVersion,_Inout_ UINT *puMaxVersionLength,_Out_ PWSTR wszMaxVersion,_Inout_ UINT *puPublicKeyLength,_Out_ PWSTR wszPublicKey,_Inout_ UINT *puDigestAlgorithmLength,_Out_ PWSTR wszDigestAlgorithm,_Inout_ UINT *pcbDigest,_Out_ BYTE *pbDigest)
HRESULT None msdrm.DRMGetUserInfo(_In_ DRMPUBHANDLE hUser,_Inout_ UINT *puUserNameLength,_Out_ PWSTR wszUserName,_Inout_ UINT *puUserIdLength,_Out_ PWSTR wszUserId,_Inout_ UINT *puUserIdTypeLength,_Out_ PWSTR wszUserIdType)
HRESULT None msdrm.DRMGetUserRights(_In_ DRMPUBHANDLE hIssuanceLicense,_In_ DRMPUBHANDLE hUser,_In_ UINT uIndex,_Out_ DRMPUBHANDLE *phRight)
HRESULT None msdrm.DRMGetUsers(_In_ DRMPUBHANDLE hIssuanceLicense,_In_ UINT uIndex,_Out_ DRMPUBHANDLE *phUser)
HRESULT None msdrm.DRMInitEnvironment(_In_ DRMSECURITYPROVIDERTYPE eSecurityProviderType,_In_ DRMSPECTYPE eSpecification,_In_ PWSTR wszSecurityProvider,_In_ PWSTR wszManifestCredentials,_In_ PWSTR wszMachineCredentials,_Out_ DRMENVHANDLE *phEnv,_Out_ DRMHANDLE *phDefaultLibrary)
HRESULT None msdrm.DRMIsActivated(_In_ DRMHSESSION hClient,_In_ UINT uFlags,_In_ DRM_ACTSERV_INFO *pActServInfo)
HRESULT None msdrm.DRMIsWindowProtected(_In_ HWND hwnd,_Out_ BOOL *pfProtected)
HRESULT None msdrm.DRMLoadLibrary(_In_ DRMENVHANDLE hEnv,_In_ DRMSPECTYPE eSpecification,_In_ PWSTR wszLibraryProvider,_In_ PWSTR wszCredentials,_Out_ DRMHANDLE *phLibrary)
HRESULT None msdrm.DRMParseUnboundLicense(_In_ PWSTR wszCertificate,_Out_ DRMQUERYHANDLE *phQueryRoot)
HRESULT None msdrm.DRMRegisterContent(_In_ BOOL fRegister)
HRESULT None msdrm.DRMRegisterProtectedWindow(_In_ DRMENVHANDLE hEnv,_In_ HWND hwnd)
HRESULT None msdrm.DRMRegisterRevocationList(_In_ DRMENVHANDLE hEnv,_In_ PWSTR wszRevocationList)
HRESULT None msdrm.DRMRepair(void None None)
HRESULT None msdrm.DRMSetApplicationSpecificData(_In_ DRMPUBHANDLE hIssuanceLicense,_In_ BOOL fDelete,_In_ PWSTR wszName,_In_ PWSTR wszValue)
HRESULT None msdrm.DRMSetGlobalOptions(_In_ DRMGLOBALOPTIONS eGlobalOptions,_In_ LPVOID pvdata,_In_ DWORD dwlen)
HRESULT None msdrm.DRMSetIntervalTime(_In_ DRMPUBHANDLE hIssuanceLicense,_In_ UINT cDays)
HRESULT None msdrm.DRMSetMetaData(_In_ DRMPUBHANDLE hIssuanceLicense,_In_ PWSTR wszContentId,_In_ PWSTR wszContentIdType,_In_opt_ PWSTR wszSKUId,_In_opt_ PWSTR wszSKUIdType,_In_opt_ PWSTR wszContentType,_In_opt_ PWSTR wszContentName)
HRESULT None msdrm.DRMSetNameAndDescription(_In_ DRMPUBHANDLE hIssuanceLicense,_In_ BOOL fDelete,_In_ UINT lcid,_In_ PWSTR wszName,_In_ PWSTR wszDescription)
HRESULT None msdrm.DRMSetRevocationPoint(_In_ DRMPUBHANDLE hIssuanceLicense,_In_ BOOL fDelete,_In_ PWSTR wszId,_In_ PWSTR wszIdType,_In_ PWSTR wszURL,_In_ SYSTEMTIME *pstFrequency,_In_ PWSTR wszName,_In_ PWSTR wszPublicKey)
HRESULT None msdrm.DRMSetUsagePolicy(_In_ DRMPUBHANDLE hIssuanceLicense,_In_ DRM_USAGEPOLICY_TYPE eUsagePolicyType,_In_ BOOL fDelete,_In_ BOOL fExclusion,_In_ PWSTR wszName,_In_ PWSTR wszMinVersion,_In_ PWSTR wszMaxVersion,_In_ PWSTR wszPublicKey,_In_ PWSTR wszDigestAlgorithm,_In_ BYTE *pbDigest,_In_ UINT cbDigest)
HRESULT None msdrm.DRMVerify(_In_ PWSTR wszData,_Inout_ UINT *pcStrLenAttestedData,_Out_ PWSTR wszAttestedData,_Out_ DRMATTESTTYPE *peType,_Inout_ UINT *pcPrincipalChain,_Out_ PWSTR wszPrincipalChain,_Inout_ UINT *pcManifestChain,_Out_ PWSTR wszManifestChain)
HRESULT None msftedit.ActivateAs(REFCLSID rclsid None,REFCLSID rclsidAs None)
HRESULT None msftedit.AddSubrange([in] long cp1,[in] long cp2,[in] long Activate)
HRESULT None msftedit.AddTab([in] float tbPos,[in] long tbAlign,[in] long tbLeader)
HRESULT None msftedit.Apply([in] long cRow,[in] long Flags)
HRESULT None msftedit.AttachMsgFilter([in] IUnknown *pFilter)
HRESULT None msftedit.BuildUpMath([in] long Flags)
HRESULT None msftedit.CanChange([retval] long *pbCanChange)
HRESULT None msftedit.CanEdit([retval] long *pbCanEdit)
HRESULT None msftedit.CanPaste(VARIANT *pVar None,long Format None,long *pb None)
HRESULT None msftedit.ChangeCase([in] long Type)
HRESULT None msftedit.CheckTextLimit([in] long cch,[out] long *pcch)
HRESULT None msftedit.Collapse([in] long bStart)
HRESULT None msftedit.Copy(VARIANT *pVar None)
HRESULT None msftedit.Cut(VARIANT *pVar None)
HRESULT None msftedit.Delete(long Unit None,long Count None,long *pDelta None)
HRESULT None msftedit.DeleteSubrange([in] long cpFirst,[in] long cpLim)
HRESULT None msftedit.DeleteTab(float tbPos None)
HRESULT None msftedit.EndOf(long Unit None,long Extend None,long *pDelta None)
HRESULT None msftedit.Expand(long Unit None,long *pDelta None)
HRESULT None msftedit.Find([in] ITextRange2 *pRange,[in] long Count,[in] long Flags,[out] long *pDelta)
HRESULT None msftedit.FindText(BSTR bstr None,long Count None,long Flags None,long *pLength None)
HRESULT None msftedit.FindTextEnd(BSTR bstr None,long Count None,long Flags None,long *pLength None)
HRESULT None msftedit.FindTextStart(BSTR bstr None,long Count None,long Flags None,long *pLength None)
HRESULT None msftedit.Freeze(long *pValue None)
HRESULT None msftedit.GetActiveStory([out None None,retval] ITextStory **ppStory)
HRESULT None msftedit.GetAlignment(long *pValue None)
HRESULT None msftedit.GetAlignment([out None None,retval] long *pValue)
HRESULT None msftedit.GetAllCaps(long *pValue None)
HRESULT None msftedit.GetAnimation(long *pValue None)
HRESULT None msftedit.GetAutoLigatures([out None None,retval] long *pValue)
HRESULT None msftedit.GetAutospaceAlpha([out None None,retval] long *pValue)
HRESULT None msftedit.GetAutospaceNumeric([out None None,retval] long *pValue)
HRESULT None msftedit.GetAutospaceParens([out None None,retval] long *pValue)
HRESULT None msftedit.GetBackColor(long *pValue None)
HRESULT None msftedit.GetBold(long *pValue None)
HRESULT None msftedit.GetCallManager([out None None,retval] IUnknown **ppVoid)
HRESULT None msftedit.GetCaretType([out None None,retval] long *pValue)
HRESULT None msftedit.GetCch([out None None,retval] long *pcch)
HRESULT None msftedit.GetCellAlignment([out None None,retval] long *pValue)
HRESULT None msftedit.GetCellBorderColors([in] long *pcrLeft,[in] long *pcrTop,[in] long *pcrRight,[in] long *pcrBottom)
HRESULT None msftedit.GetCellColorBack([out None None,retval] long *pValue)
HRESULT None msftedit.GetCellColorFore([out None None,retval] long *pValue)
HRESULT None msftedit.GetCellCountCache([out None None,retval] long *pValue)
HRESULT None msftedit.GetCellCount([out None None,retval] long *pValue)
HRESULT None msftedit.GetCellIndex([out None None,retval] long *pValue)
HRESULT None msftedit.GetCellMargin([out None None,retval] long *pValue)
HRESULT None msftedit.GetCellMergeFlags([out None None,retval] long *pValue)
HRESULT None msftedit.GetCellShading([out None None,retval] long *pValue)
HRESULT None msftedit.GetCellVerticalText([out None None,retval] long *pValue)
HRESULT None msftedit.GetCellWidth([out None None,retval] long *pValue)
HRESULT None msftedit.GetChar2([out] long *pChar,[in] long Offset)
HRESULT None msftedit.GetChar(long *pChar None)
HRESULT None msftedit.GetCharRep([out None None,retval] long *pValue)
HRESULT None msftedit.GetClientRect([in] long Type,[out] long *pLeft,[out] long *pTop,[out] long *pRight,[out] long *pBottom)
HRESULT None msftedit.GetClientSite(LPOLECLIENTSITE *lplpolesite None)
HRESULT None msftedit.GetCompressionMode([out None None,retval] long *pValue)
HRESULT None msftedit.GetContextMenu(WORD seltype None,LPOLEOBJECT lpoleobj None,CHARRANGE *lpchrg None,HMENU *lphmenu None)
HRESULT None msftedit.GetCookie([out None None,retval] long *pValue)
HRESULT None msftedit.GetCount([out None None,retval] long *pCount)
HRESULT None msftedit.GetDefaultTabStop(float *pValue None)
HRESULT None msftedit.GetDisplays([out None None,retval] ITextDisplays **ppDisplays)
HRESULT None msftedit.GetDocumentFont([out None None,retval] ITextFont2 **ppFont)
HRESULT None msftedit.GetDocumentPara([out None None,retval] ITextPara2 **ppPara)
HRESULT None msftedit.GetDoubleStrike([out None None,retval] long *pValue)
HRESULT None msftedit.GetDuplicate2([out None None,retval] ITextFont2 **ppFont)
HRESULT None msftedit.GetDuplicate2([out None None,retval] ITextPara2 **ppPara)
HRESULT None msftedit.GetDuplicate2([out None None,retval] ITextRange2 **ppRange)
HRESULT None msftedit.GetDuplicate(ITextFont **ppFont None)
HRESULT None msftedit.GetDuplicate(ITextPara **ppPara None)
HRESULT None msftedit.GetDuplicate(ITextRange **ppRange None)
HRESULT None msftedit.GetEastAsianFlags([out None None,retval] long *pFlags)
HRESULT None msftedit.GetEffectColor([in] long Index,[out] long *pValue)
HRESULT None msftedit.GetEffects2([out] long *pValue,[out] long *pMask)
HRESULT None msftedit.GetEffects([out] long *pValue,[out] long *pMask)
HRESULT None msftedit.GetEmbeddedObject(IUnknown **ppObject None)
HRESULT None msftedit.GetEmboss(long *pValue None)
HRESULT None msftedit.GetEnd(long *pcpLim None)
HRESULT None msftedit.GetEngrave(long *pValue None)
HRESULT None msftedit.GetFirstLineIndent(float *pValue None)
HRESULT None msftedit.GetFlags(long *pFlags None)
HRESULT None msftedit.GetFont2([out None None,retval] ITextFont2 **ppFont)
HRESULT None msftedit.GetFont(ITextFont **ppFont None)
HRESULT None msftedit.GetForeColor(long *pValue None)
HRESULT None msftedit.GetFormattedText2([out None None,retval] ITextRange2 **ppRange)
HRESULT None msftedit.GetFormattedText(ITextRange **ppRange None)
HRESULT None msftedit.GetGenerator([out None None,retval] BSTR *pbstr)
HRESULT None msftedit.GetGravity([out None None,retval] long *pValue)
HRESULT None msftedit.GetHeight([out None None,retval] long *pValue)
HRESULT None msftedit.GetHidden(long *pValue None)
HRESULT None msftedit.GetHyphenation(long *pBool None)
HRESULT None msftedit.GetImmContext([out None None,retval] __int64 *pContext)
HRESULT None msftedit.GetIndex(long Unit None,long *pIndex None)
HRESULT None msftedit.GetInlineObject([out] long *pType,[out] long *pAlign,[out] long *pChar,[out] long *pChar1,[out] long *pChar2,[out] long *pCount,[out] long *pTeXStyle,[out] long *pcCol,[out] long *pLevel)
HRESULT None msftedit.GetItalic(long *pValue None)
HRESULT None msftedit.GetKeepTogether(long *pBool None)
HRESULT None msftedit.GetKeepTogether([out None None,retval] long *pValue)
HRESULT None msftedit.GetKeepWithNext(long *pBool None)
HRESULT None msftedit.GetKeepWithNext([out None None,retval] long *pValue)
HRESULT None msftedit.GetKerning(float *pValue None)
HRESULT None msftedit.GetLanguageID(long *pValue None)
HRESULT None msftedit.GetLeftIndent(float *pValue None)
HRESULT None msftedit.GetLineSpacing(float *pValue None)
HRESULT None msftedit.GetLineSpacingRule(long *pValue None)
HRESULT None msftedit.GetLinkType([out None None,retval] long *pValue)
HRESULT None msftedit.GetListLevelIndex(long *pValue None)
HRESULT None msftedit.GetListStart(long *pValue None)
HRESULT None msftedit.GetListTab(float *pValue None)
HRESULT None msftedit.GetListType(long *pValue None)
HRESULT None msftedit.GetMainStory([out None None,retval] ITextStory **ppStory)
HRESULT None msftedit.GetMathFunctionType([in] BSTR bstr,[out] long *pValue)
HRESULT None msftedit.GetMathProperties([out] long *pOptions)
HRESULT None msftedit.GetMathZone([out None None,retval] long *pValue)
HRESULT None msftedit.GetModWidthPairs([out None None,retval] long *pValue)
HRESULT None msftedit.GetModWidthSpace([out None None,retval] long *pValue)
HRESULT None msftedit.GetName(BSTR *pbstr None)
HRESULT None msftedit.GetName(BSTR *pName None)
HRESULT None msftedit.GetNoLineNumber(long *pBool None)
HRESULT None msftedit.GetNotificationMode([out None None,retval] long *pValue)
HRESULT None msftedit.GetOldNumbers([out None None,retval] long *pValue)
HRESULT None msftedit.GetOutline(long *pValue None)
HRESULT None msftedit.GetOverlapping([out None None,retval] long *pValue)
HRESULT None msftedit.GetPageBreakBefore(long *pBool None)
HRESULT None msftedit.GetPara2([out None None,retval] ITextPara2 **ppPara)
HRESULT None msftedit.GetPara(ITextPara **ppPara None)
HRESULT None msftedit.GetPoint(long Type None,long *px None,long *py None)
HRESULT None msftedit.GetPosition(float *pValue None)
HRESULT None msftedit.GetPositionSubSuper([out None None,retval] long *pValue)
HRESULT None msftedit.GetPreferredFont([in] long cp,[in] long CharRep,[in] long Options,[in] long charRepCur,[in] long curFontSize,[out] BSTR *pbstr,[out] long *pPitchAndFamily,[out] long *pNewFontSize)
HRESULT None msftedit.GetPropertyInfo([in] long Index,[out] long *pType,[out] long *pValue)
HRESULT None msftedit.GetProperty([in] long Type,[out] long *pValue)
HRESULT None msftedit.GetProtected(long *pValue None)
HRESULT None msftedit.GetRect([in] long Type,[out] long *pLeft,[out] long *pTop,[out] long *pRight,[out] long *pBottom,[out] long *pHit)
HRESULT None msftedit.GetRightIndent(float *pValue None)
HRESULT None msftedit.GetRow([out None None,retval] ITextRow **ppRow)
HRESULT None msftedit.GetRTL([out None None,retval] long *pValue)
HRESULT None msftedit.GetSaved(long *pBool None)
HRESULT None msftedit.GetScaling([out None None,retval] long *pValue)
HRESULT None msftedit.GetSelection2([out None None,retval] ITextSelection2 **ppSel)
HRESULT None msftedit.GetSelection(ITextSelection **ppSel None)
HRESULT None msftedit.GetShadow(long *pValue None)
HRESULT None msftedit.GetSize(float *pValue None)
HRESULT None msftedit.GetSmallCaps(long *pValue None)
HRESULT None msftedit.GetSpaceAfter(float *pValue None)
HRESULT None msftedit.GetSpaceBefore(float *pValue None)
HRESULT None msftedit.GetSpaceExtension([out None None,retval] float *pValue)
HRESULT None msftedit.GetSpacing(float *pValue None)
HRESULT None msftedit.GetStart(long *pcpFirst None)
HRESULT None msftedit.GetStartPara([out None None,retval] long *pValue)
HRESULT None msftedit.GetStoryCount(LONG *pCount None)
HRESULT None msftedit.GetStory([in] long Index,[out None None,retval] ITextStory **ppStory)
HRESULT None msftedit.GetStoryLength(long *pCount None)
HRESULT None msftedit.GetStoryRanges2([out None None,retval] ITextStoryRanges2 **ppStories)
HRESULT None msftedit.GetStoryRanges(ITextStoryRanges **ppStories None)
HRESULT None msftedit.GetStoryType(long *pValue None)
HRESULT None msftedit.GetStrikeThrough(long *pValue None)
HRESULT None msftedit.GetStrings([out] ITextStrings **ppStrs)
HRESULT None msftedit.GetStyle(long *pValue None)
HRESULT None msftedit.GetSubrange([in] long iSubrange,[out] long *pcpFirst,[out] long *pcpLim)
HRESULT None msftedit.GetSubscript(long *pValue None)
HRESULT None msftedit.GetSuperscript(long *pValue None)
HRESULT None msftedit.GetTabCount(long *pc None)
HRESULT None msftedit.GetTab(long iTab None,float *ptbPos None,long *ptbAlign None,long *ptbLeader None)
HRESULT None msftedit.GetText2([in] long Flags,[out] BSTR *pbstr)
HRESULT None msftedit.GetText(BSTR *pbstr None)
HRESULT None msftedit.GetTypographyOptions([out None None,retval] long *pOptions)
HRESULT None msftedit.GetUnderline(long *pValue None)
HRESULT None msftedit.GetUnderlinePositionMode([out None None,retval] long *pValue)
HRESULT None msftedit.GetURL([out None None,retval] BSTR *pbstr)
HRESULT None msftedit.GetVersion([out None None,retval] long *pValue)
HRESULT None msftedit.GetWeight(long *pValue None)
HRESULT None msftedit.GetWidowControl(long *pBool None)
HRESULT None msftedit.GetWindow([out None None,retval] __int64 *pHwnd)
HRESULT None msftedit.InRange(ITextRange *pRange None,long *pB None)
HRESULT None msftedit.InsertImage([in] long width,[in] long height,[in] long ascent,[in] long Type,[in] BSTR bstrAltText,[in] IStream pStream)
HRESULT None msftedit.Insert([in] long cRow)
HRESULT None msftedit.InsertTable([in] long cCol,[in] long cRow,[in] long AutoFit)
HRESULT None msftedit.InStory(ITextRange *pRange None,long *pB None)
HRESULT None msftedit.IsEqual2([in] ITextFont2 *pFont,[out] long *pB)
HRESULT None msftedit.IsEqual([in] ITextRow *pRow,[out None None,retval] long *pB)
HRESULT None msftedit.IsEqual(ITextFont *pFont None,long *pB None)
HRESULT None msftedit.IsEqual(ITextPara *pPara None,long *pB None)
HRESULT None msftedit.IsEqual(ITextRange *pRange None,long *pB None)
HRESULT None msftedit.Linearize([in] long Flags)
HRESULT None msftedit.MoveDown(long Unit None,long Count None,long Extend None,long *pDelta None)
HRESULT None msftedit.MoveEnd(long Unit None,long Count None,long *pDelta None)
HRESULT None msftedit.MoveEndUntil(VARIANT *Cset None,long Count None,long *pDelta None)
HRESULT None msftedit.MoveEndWhile(VARIANT *Cset None,long Count None,long *pDelta None)
HRESULT None msftedit.MoveLeft(long Unit None,long Count None,long Extend None,long *pDelta None)
HRESULT None msftedit.Move(long Unit None,long Count None,long *pDelta None)
HRESULT None msftedit.MoveStart(long Unit None,long Count None,long *pDelta None)
HRESULT None msftedit.MoveStartUntil(VARIANT *Cset None,long Count None,long *pDelta None)
HRESULT None msftedit.MoveStartWhile(VARIANT *Cset None,long Count None,long *pDelta None)
HRESULT None msftedit.MoveUntil(VARIANT *Cset None,long Count None,long *pDelta None)
HRESULT None msftedit.MoveUp(long Unit None,long Count None,long Extend None,long *pDelta None)
HRESULT None msftedit.MoveWhile(VARIANT *Cset None,long Count None,long *pDelta None)
HRESULT None msftedit.Notify([in] long Notify)
HRESULT None msftedit.Open([in] VARIANT *pVar,long Flags None,long CodePage None)
HRESULT None msftedit.Paste(VARIANT *pVar None,long Format None)
HRESULT None msftedit.Range2([in] long cpActive,[in] long cpAnchor,[out None None,retval] ITextRange2 **ppRange)
HRESULT None msftedit.RangeFromPoint2([in] long x,[in] long y,[in] long Type,[out None None,retval] ITextRange2 **ppRange)
HRESULT None msftedit.RangeFromPoint(long x None,long y None,ITextRange **ppRange None)
HRESULT None msftedit.Range(long cpFirst None,long cpLim None,ITextRange **ppRange None)
HRESULT None msftedit.Redo(long Count None,long *prop None)
HRESULT None msftedit.ReleaseCallManager([in] IUnknown *pVoid)
HRESULT None msftedit.ReleaseImmContext([in] int64 Context)
HRESULT None msftedit.Reset([in] long Value)
HRESULT None msftedit.SaveCompleted(LONG iob None,LPSTORAGE lpstg None)
HRESULT None msftedit.Save([in] VARIANT *pVar,[in] long Flags,[in] long CodePage)
HRESULT None msftedit.ScrollIntoView(long bStart None)
HRESULT None msftedit.SetActiveStory([in] ITextStory *pStory)
HRESULT None msftedit.SetActiveSubrange([in] long cpAnchor,[in] long cpActive)
HRESULT None msftedit.SetAlignment([in] long Value)
HRESULT None msftedit.SetAllCaps([in] long Value)
HRESULT None msftedit.SetAnimation([in] long Value)
HRESULT None msftedit.SetAutoLigatures([in] long Value)
HRESULT None msftedit.SetAutospaceAlpha([in] long Value)
HRESULT None msftedit.SetAutospaceNumeric([in] long Value)
HRESULT None msftedit.SetAutospaceParens([in] long Value)
HRESULT None msftedit.SetBackColor([in] long Value)
HRESULT None msftedit.SetBold([in] long Value)
HRESULT None msftedit.SetCaretType([in] long Value)
HRESULT None msftedit.SetCellAlignment([in] long Value)
HRESULT None msftedit.SetCellBorderColors([in] long crLeft,[in] long crTop,[in] long crRight,[in] long crBottom)
HRESULT None msftedit.SetCellBorderWidths([in] long duLeft,[in] long duTop,[in] long duRight,[in] long duBottom)
HRESULT None msftedit.SetCellColorBack([in] long Value)
HRESULT None msftedit.SetCellColorFore([in] long Value)
HRESULT None msftedit.SetCellCountCache([in] long Value)
HRESULT None msftedit.SetCellCount([in] long Value)
HRESULT None msftedit.SetCellIndex([in] long Value)
HRESULT None msftedit.SetCellMargin([in] long Value)
HRESULT None msftedit.SetCellMergeFlags([in] long Value)
HRESULT None msftedit.SetCellShading([in] long Value)
HRESULT None msftedit.SetCellVerticalText([in] long Value)
HRESULT None msftedit.SetCellWidth([in] long Value)
HRESULT None msftedit.SetChar(long Char None)
HRESULT None msftedit.SetCharRep([in] long Value)
HRESULT None msftedit.SetCompressionMode([in] long Value)
HRESULT None msftedit.SetCookie([in] long Value)
HRESULT None msftedit.SetDefaultTabStop([in] float Value)
HRESULT None msftedit.SetDocumentFont([in] ITextFont2 *pFont)
HRESULT None msftedit.SetDocumentPara([in] ITextPara2 *pPara)
HRESULT None msftedit.SetDoubleStrike([in] long Value)
HRESULT None msftedit.SetDuplicate2([in] ITextFont2 *pFont)
HRESULT None msftedit.SetDuplicate([in] ITextFont *pFont)
HRESULT None msftedit.SetDuplicate([in] ITextPara *pPara)
HRESULT None msftedit.SetEffectColor([in] long Index,[in] long Value)
HRESULT None msftedit.SetEffects2([in] long Value,[in] long Mask)
HRESULT None msftedit.SetEffects([in] long Value,[in] long Mask)
HRESULT None msftedit.SetEmboss([in] long Value)
HRESULT None msftedit.SetEnd(long cp None)
HRESULT None msftedit.SetEngrave([in] long Value)
HRESULT None msftedit.SetFont2([in] ITextFont2 *pFont)
HRESULT None msftedit.SetFont([in] ITextFont *pFont)
HRESULT None msftedit.SetForeColor([in] long Value)
HRESULT None msftedit.SetFormattedText([in] ITextRange *pRange)
HRESULT None msftedit.SetHeight([in] long Value)
HRESULT None msftedit.SetHidden([in] long Value)
HRESULT None msftedit.SetHyphenation([in] long Value)
HRESULT None msftedit.SetIMEInProgress([in] long Value)
HRESULT None msftedit.SetIndent([in] long Value)
HRESULT None msftedit.SetIndents([in] float First,[in] float Left,[in] float Right)
HRESULT None msftedit.SetIndex([in] long Unit,[in] long Index,[in] long Extend)
HRESULT None msftedit.SetInlineObject([in] long Type,[in] long Align,[in] long Char,[in] long Char1,[in] long Char2,[in] long Count,[in] long TeXStyle,[in] long cCol)
HRESULT None msftedit.SetItalic([in] long Value)
HRESULT None msftedit.SetKeepTogether([in] long Value)
HRESULT None msftedit.SetKeepWithNext([in] long Value)
HRESULT None msftedit.SetKerning([in] float Value)
HRESULT None msftedit.SetLanguageID([in] long Value)
HRESULT None msftedit.SetLineSpacing([in] long Rule,[in] float Spacing)
HRESULT None msftedit.SetListAlignment([in] long Value)
HRESULT None msftedit.SetListLevelIndex([in] long Value)
HRESULT None msftedit.SetListStart([in] long Value)
HRESULT None msftedit.SetListTab([in] float Value)
HRESULT None msftedit.SetListType([in] long Value)
HRESULT None msftedit.SetMathProperties([in] long Options,[in] long Mask)
HRESULT None msftedit.SetMathZone([in] long Value)
HRESULT None msftedit.SetModWidthPairs([in] long Value)
HRESULT None msftedit.SetModWidthSpace([in] long Value)
HRESULT None msftedit.SetName([in] BSTR Name)
HRESULT None msftedit.SetNoLineNumber([in] long Value)
HRESULT None msftedit.SetNotificationMode([in] long Value)
HRESULT None msftedit.SetOldNumbers([in] long Value)
HRESULT None msftedit.SetOutline([in] long Value)
HRESULT None msftedit.SetOverlapping([in] long Value)
HRESULT None msftedit.SetPageBreakBefore([in] long Bool)
HRESULT None msftedit.SetPara2([in] ITextPara2 *pPara)
HRESULT None msftedit.SetPara([in] ITextPara *pPara)
HRESULT None msftedit.SetPoint([in] long x,[in] long y,[in] long Type,[in] long Extend)
HRESULT None msftedit.SetPosition([in] float Value)
HRESULT None msftedit.SetPositionSubSuper([in] long Value)
HRESULT None msftedit.SetProperty([in] long Type,[in] long Value)
HRESULT None msftedit.SetProtected([in] long Value)
HRESULT None msftedit.SetRange(long cpAnchor None,long cpActive None)
HRESULT None msftedit.SetRightIndent([in] float Value)
HRESULT None msftedit.SetRTL([in] long Value)
HRESULT None msftedit.SetSaved([in] long Bool)
HRESULT None msftedit.SetScaling([in] long Value)
HRESULT None msftedit.SetShadow([in] long Value)
HRESULT None msftedit.SetSize([in] float Value)
HRESULT None msftedit.SetSmallCaps([in] long Value)
HRESULT None msftedit.SetSnapToGrid([in] long Value)
HRESULT None msftedit.SetSpaceAfter([in] float Value)
HRESULT None msftedit.SetSpaceBefore([in] float Value)
HRESULT None msftedit.SetSpaceExtension([in] float Value)
HRESULT None msftedit.SetSpacing([in] float Value)
HRESULT None msftedit.SetStart([in] long cpFirst)
HRESULT None msftedit.SetStrikeThrough([in] long Value)
HRESULT None msftedit.SetStyle([in] long Value)
HRESULT None msftedit.SetSubscript([in] long Value)
HRESULT None msftedit.SetSuperscript([in] long Value)
HRESULT None msftedit.SetText2([in] long Flags,[in] BSTR bstr)
HRESULT None msftedit.SetText([in] BSTR bstr)
HRESULT None msftedit.SetTypographyOptions([in] long Options,[in] long Mask)
HRESULT None msftedit.SetUnderline([in] long Value)
HRESULT None msftedit.SetUnderlinePositionMode([in] long Value)
HRESULT None msftedit.SetURL([in] BSTR bstr)
HRESULT None msftedit.SetWeight([in] long Value)
HRESULT None msftedit.SetWidowControl([in] long Bool)
HRESULT None msftedit.StartOf(long Unit None,long Extend None,long *pDelta None)
HRESULT None msftedit.TxActivate(LONG *plOldState None)
HRESULT None msftedit.TxDeactivate(LONG lNewState None)
HRESULT None msftedit.TxDraw([in] DWORD dwDrawAspect,LONG lindex None,[in] void *pvAspect,[in] DVTARGETDEVICE *ptd,[in] HDC hdcDraw,[in] HDC hicTargetDev,[in] LPCRECTL lprcBounds,[in] LPCRECTL lprcWBounds,[in] LPRECT lprcUpdate,BOOL CALLBACK *pfnContinue,DWORD dwContinue None,LONG lViewId None)
HRESULT None msftedit.TxGetAcceleratorPos(LONG *pcp None)
HRESULT None msftedit.TxGetBackStyle(TXTBACKSTYLE *pstyle None)
HRESULT None msftedit.TxGetCharFormat(const CHARFORMAT **ppCF)
HRESULT None msftedit.TxGetClientRect(LPRECT prc None)
HRESULT None msftedit.TxGetCurTargetX(LONG *px None)
HRESULT None msftedit.TxGetExtent(LPSIZEL lpExtent None)
HRESULT None msftedit.TxGetHScroll(LONG *plMin None,LONG *plMax None,LONG *plPos None,LONG *plPage None,BOOL *pfEnabled None)
HRESULT None msftedit.TxGetMaxLength(DWORD *pLength None)
HRESULT None msftedit.TxGetParaFormat(const PARAFORMAT **ppPF)
HRESULT None msftedit.TxGetPasswordChar([out] TCHAR *pch)
HRESULT None msftedit.TxGetScrollBars(DWORD *pdwScrollBar None)
HRESULT None msftedit.TxGetSelectionBarWidth(LONG *lSelBarWidth None)
HRESULT None msftedit.TxGetViewInset(LPRECT prc None)
HRESULT None msftedit.TxGetVScroll(LONG *plMin None,LONG *plMax None,LONG *plPos None,LONG *plPage None,BOOL *pfEnabled None)
HRESULT None msftedit.TxNotify([in] DWORD iNotify,[in] void *pv)
HRESULT None msftedit.TxSendMessage(UINT msg None,WPARAM wparam None,LPARAM lparam None,LRESULT *plresult None)
HRESULT None msftedit.TxSetText([in] LPCTSTR pszText)
HRESULT None msftedit.Undo(long Count None,long *prop None)
HRESULT None msftedit.Unfreeze(long *pCount None)
HRESULT None msftedit.Update([in] long Value)
HRESULT None mshtml.GetHeight([out] UINT32 *cy)
HRESULT None mshtml.GetUICommandProperty([in] UINT32 commandId,[in] REFPROPERTYKEY key,[out] PROPVARIANT *value)
HRESULT None mshtml.Initialize([in] HWND frameWnd,[in] IUIApplication *application)
HRESULT None mshtml.LoadUI([in] HINSTANCE instance,[in] LPCWSTR resourceName)
HRESULT None mshtml.OnViewChanged([in] UINT32 viewId,[in] UI_VIEWTYPE typeID,[in] IUnknown *view,[in] UI_VIEWVERB verb,[in] INT32 uReasonCode)
HRESULT None mshtml.SetModes(INT32 iModes None)
HRESULT None mshtml.SetUICommandProperty([in] UINT32 commandId,[in] REFPROPERTYKEY key,[in] PROPVARIANT value)
HRESULT None mshtml.ShowAtLocation(INT32 x None,INT32 y None)
HRESULT None msident.ManageIdentities([in] HWND hwndParent,[in] DWORD dwFlags)
HRESULT None msident.Next([in] ULONG celt,[out] IUnknown **rgelt,[out] ULONG *pceltFetched)
HRESULT None msident.OpenIdentityRegKey([in] DWORD dwDesiredAccess,[out] HKEY *phKey)
HRESULT None msi.MsiGetFileSignatureInformationA(_In_ LPCTSTR szSignedObjectPath,_In_ DWORD dwFlags,_Out_ PCCERT_CONTEXT *ppcCertContext,_Out_ BYTE *pbHashData,_Inout_ DWORD *pcbHashData)
HRESULT None msi.MsiGetFileSignatureInformation(_In_ LPCTSTR szSignedObjectPath,_In_ DWORD dwFlags,_Out_ PCCERT_CONTEXT *ppcCertContext,_Out_ BYTE *pbHashData,_Inout_ DWORD *pcbHashData)
HRESULT None msi.MsiGetFileSignatureInformationW(_In_ LPCTSTR szSignedObjectPath,_In_ DWORD dwFlags,_Out_ PCCERT_CONTEXT *ppcCertContext,_Out_ BYTE *pbHashData,_Inout_ DWORD *pcbHashData)
HRESULT None msimtf.GetScreenExt([out] RECT *prc)
HRESULT None msimtf.GetStatus([out] TF_STATUS *pdcs)
HRESULT None msoe.IdentityInformationChanged(DWORD dwType None)
HRESULT None msrdc.GetHashWindowSize([out] ULONG *hashWindowSize)
HRESULT None msrdc.GetParametersVersion([out] ULONG *currentVersion,[out] ULONG *minimumCompatibleAppVersion)
HRESULT None msrdc.GetRDCVersion([out] ULONG *currentVersion,[out] ULONG *minimumCompatibleAppVersion)
HRESULT None msrdc.GetRecordCount([out] DWORD *recordCount)
HRESULT None msrdc.ReadHeader([out] RDC_ErrorCode *rdc_ErrorCode)
HRESULT None mstask.GetAccountInformation([out] LPWSTR *ppwszAccountName)
HRESULT None mstask.GetComment([out] LPWSTR *ppwszComment)
HRESULT None mstask.GetCreator([out] LPWSTR *ppwszCreator)
HRESULT None mstask.GetErrorRetryCount([out] WORD *pwRetryCount)
HRESULT None mstask.GetErrorRetryInterval([out] WORD *pwRetryInterval)
HRESULT None mstask.GetExitCode([out] DWORD *pdwExitCode)
HRESULT None mstask.GetFlags([out] DWORD *pdwFlags)
HRESULT None mstask.GetIdleWait([out] WORD *pwIdleMinutes,[out] WORD *pwDeadlineMinutes)
HRESULT None mstask.GetNetScheduleAccountInformation(_In_ LPCWSTR pwszServerName,_In_ DWORD ccAccount,_Out_ WCHAR wszAccount[])
HRESULT None mstask.GetNextRunTime([out] SYSTEMTIME *pstNextRun)
HRESULT None mstask.GetStatus([out] HRESULT *phrStatus)
HRESULT None mstask.GetTriggerCount([out] WORD *plCount)
HRESULT None mstask.GetWorkItemData([out] WORD *pcBytes,[out] BYTE **ppBytes)
HRESULT None mstask.SetCreator(LPCWSTR pwszCreator None)
HRESULT None mstask.SetErrorRetryCount(WORD wRetryCount None)
HRESULT None mstask.SetErrorRetryInterval(WORD wRetryInterval None)
HRESULT None mstask.SetFlags(DWORD dwFlags None)
HRESULT None mstask.SetNetScheduleAccountInformation(_In_ LPCWSTR pwszServerName,_In_ LPCWSTR pwszAccount,_In_ LPCWSTR pwszPassword)
HRESULT None mstscax.get_AdvancedSettings2([out] IMsRdpClientAdvancedSettings **ppAdvSettings)
HRESULT None mstscax.get_AdvancedSettings3([out] IMsRdpClientAdvancedSettings2 **ppAdvSettings)
HRESULT None mstscax.get_AdvancedSettings8([out None None,retval] IMsRdpClientAdvancedSettings7 **ppAdvSettings)
HRESULT None mstscax.get_AdvancedSettings9([out None None,retval] IMsRdpClientAdvancedSettings8 **ppAdvSettings)
HRESULT None mstscax.get_AdvancedSettings([out] IMsTscAdvancedSettings **ppAdvSettings)
HRESULT None mstscax.get_AuthenticationType([out] UINT *puiAuthType)
HRESULT None mstscax.get_CipherStrength([out] LONG *pCipherStrength)
HRESULT None mstscax.get_CmDeviceInstance([out None None,retval] DWORD *pCmDeviceInstance)
HRESULT None mstscax.get_DeviceCollection([out] IMSRdpDeviceCollection **ppDeviceCollection)
HRESULT None mstscax.get_DeviceText([out None None,retval] BSTR *pDeviceText)
HRESULT None mstscax.get_DriveLetterBitmap([out None None,retval] ULONG *pDriveLetterBitmap)
HRESULT None mstscax.get_ExtendedDisconnectReason([out] ExtendedDisconnectReasonCode *pExtendedDisconnectReason)
HRESULT None mstscax.get_GetRemoteMonitorsBoundingBox([out] LONG *pLeft,[out] LONG *pTop,[out] LONG *pRight,[out] LONG *pBottom)
HRESULT None mstscax.get_MsRdpClientShell([out] IMsRdpClientShell **ppLauncher)
HRESULT None mstscax.get_RemoteMonitorCount([out None None,retval] ULONG *pcRemoteMonitors)
HRESULT None mstscax.get_RemoteMonitorLayoutMatchesLocal([out None None,retval] VARIANT_BOOL *pfRemoteMatchesLocal)
HRESULT None mstscax.get_RemoteProgram2([out None None,retval] ITSRemoteProgram2 **ppRemoteProgram)
HRESULT None mstscax.get_RemoteProgram([out] ITSRemoteProgram **ppRemoteProgram)
HRESULT None mstscax.get_SecuredSettingsEnabled([out] BOOL *pSecuredSettingsEnabled)
HRESULT None mstscax.get_SecuredSettings([out] IMsTscSecuredSettings **ppSecuredSettings)
HRESULT None mstscax.get_TouchPointer([out None None,retval] RemoteDesktopClientTouchPointer **TouchPointer)
HRESULT None mstscax.get_TransportSettings2([out] IMsRdpClientTransportSettings2 **ppXportSet2)
HRESULT None mstscax.get_TransportSettings3([out None None,retval] IMsRdpClientTransportSettings3 **ppXportSet3)
HRESULT None mstscax.get_Version([out] BSTR *pVersion)
HRESULT None mstscax.get_VerticalScrollBarVisible([out] BOOL *pfVScrollVisible)
HRESULT None mstscax.RequestClose([out] ControlCloseStatus *pCloseStatus)
HRESULT None ndfapi.NdfCloseIncident(_In_ NDFHANDLE handle)
HRESULT None ndfapi.NdfCreateIncident(_In_ LPCWSTR helperClassName,ULONG celt None,_In_ HELPER_ATTRIBUTE *attributes,_Out_ NDFHANDLE *handle)
HRESULT None ndfapi.NdfCreateWinSockIncident(SOCKET sock None,_In_opt_ LPCWSTR host,USHORT port None,_In_opt_ LPCWSTR appID,_In_opt_ SID *userId,_Out_ NDFHANDLE *handle)
HRESULT None ndfapi.NdfExecuteDiagnosis(NDFHANDLE handle None,HWND hwnd None)
HRESULT None None.Abort(BOID * pboidReason,BOOL fRetaining None,BOOL fAsync None)
HRESULT None None.Aborted(BOID * pboidReason,BOOL fRetaining None,XACTUOW * pNewUOW,HRESULT hr None)
HRESULT None None.AbortRequest(BOID * pboidReason,BOOL fRetaining None,XACTUOW * pNewUOW)
HRESULT None None.abort(void None None)
HRESULT None None.AcceptParentalLevelChange([in] BOOL bAccept)
HRESULT None None.AcquireCredentials([in] WCHAR *pwszRealm,[in] WCHAR *pwszSite,[in None None,out] WCHAR *pwszUser,[in] DWORD cchUser,[in None None,out] WCHAR *pwszPassword,[in] DWORD cchPassword,[in] HRESULT hrStatus,[in None None,out] DWORD *pdwFlags)
HRESULT None None.AcquireLicense([in] DWORD dwFlags)
HRESULT None None.AcquireNextFrame([in] UINT TimeoutInMilliseconds,[out] DXGI_OUTDUPL_FRAME_INFO *pFrameInfo,[out] IDXGIResource **ppDesktopResource)
HRESULT None None.ActivateAtPosition([in] POINT point)
HRESULT None None.Activate(BOOL fActive None)
HRESULT None None.ActivateCompleted([in] IActivateAudioInterfaceAsyncOperation *activateOperation)
HRESULT None None.Activate(HWND hwndParent None,LPCRECT prect None,BOOL fModal None)
HRESULT None None.Activate([in] DWORD dwClsContext,[in] REFIID refiid,[out] void **ppvObject)
HRESULT None None.Activate([in] REFIID iid,[in] DWORD dwClsCtx,[in] PROPVARIANT *pActivationParams,[out] void **ppInterface)
HRESULT None None.ActivateMe([in] IOleDocumentView *pViewToActivate)
HRESULT None None.ActivateObject([in] REFIID riid,[out] void **ppv)
HRESULT None None.ActivateSpatialAudioMetadataCopier([out] ISpatialAudioMetadataCopier ***metadataCopier)
HRESULT None None.ActivateSpatialAudioMetadataItems([in] UINT16 maxItemCount,[in] UINT16 frameCount,[out None None,optional] ISpatialAudioMetadataItemsBuffer **metadataItemsBuffer,[out] ISpatialAudioMetadataItems **metadataItems)
HRESULT None None.ActivateSpatialAudioMetadataReader([out] ISpatialAudioMetadataReader **metadataReader)
HRESULT None None.ActivateSpatialAudioMetadataWriter([in] SpatialAudioMetadataWriterOverflowMode overflowMode,[out] ISpatialAudioMetadataWriter **metadataWriter)
HRESULT None None.ActivateSpatialAudioObjectForMetadataCommands([in] AudioObjectType type,[out] ISpatialAudioObjectForMetadataCommands **audioObject)
HRESULT None None.ActivateSpatialAudioObjectForMetadataItems([in] AudioObjectType type,[out] ISpatialAudioObjectForMetadataItems **audioObject)
HRESULT None None.ActivateSpatialAudioObject([in] AudioObjectType type,[out] ISpatialAudioObject **audioObject)
HRESULT None None.ActivateSpatialAudioObject([in] AudioObjectType type,[out] ISpatialAudioObjectForHrtf **audioObject)
HRESULT None None.AddBandwidthSharing([in] IWMBandwidthSharing *pBS)
HRESULT None None.add(BSTR namespaceURI None,VARIANT var None)
HRESULT None None.AddCodecInfo([in] WCHAR *pwszName,[in] WCHAR *pwszDescription,[in] WMT_CODEC_INFO_TYPE codecType,[in] WORD cbCodecInfo,[in] BYTE *pbCodecInfo)
HRESULT None None.addCollection(IXMLDOMSchemaCollection * otherCollection)
HRESULT None None.AddComboBox([in] DWORD dwIDCtl)
HRESULT None None.AddConstraint(DBID *pTableID None,DBCONSTRAINTDESC *pConstraintDesc None)
HRESULT None None.AddDataUnitExtension([in] GUID guidExtensionSystemID,[in] WORD cbExtensionDataSize,[in] BYTE *pbExtensionSystemInfo,[in] DWORD cbExtensionSystemInfo)
HRESULT None None.AddDefaultScopeRule([in] LPCWSTR pszUrl,[in] BOOL fInclude,[in] DWORD fFollowFlags)
HRESULT None None.AddEditBox([in] DWORD dwIDCtl,[in] LPCWSTR pszLabel)
HRESULT None None.AddEncryptionAttributes(_In_ IMFSample* pSample,_In_ bool fIsEncrypted)
HRESULT None None.AddEnvelope([in] DWORD dwParamIndex,[in] DWORD cPoints,[in] MP_ENVELOPE_SEGMENT *pEnvelope)
HRESULT None None.AddErrorRecord(ERRORINFO *pErrorInfo None,DWORD dwLookupID None,DISPPARAMS *pdispparams None,IUnknown *punkCustomError None,DWORD dwDynamicErrorID None)
HRESULT None None.AddFilter([in] IBaseFilter *pFilter,[in] LPCWSTR pName)
HRESULT None None.AddFocusHandler(IUIAutomation* pAutomation None)
HRESULT None None.AddHierarchicalScope([in] LPCWSTR pszURL,[in] BOOL fInclude,[in] BOOL fDefault,[in] BOOL fOverrideChildren)
HRESULT None None.Add([in] IOleUndoUnit *pUU)
HRESULT None None.AddInputStreams([in] DWORD cStreams,[in] DWORD *adwStreamIDs)
HRESULT None None.AddInterface([in] BSTR bstrInterfaceName,[in] LONG lInterfaceFlag,[in] VARIANT varInterface)
HRESULT None None.AddInterfaces([in] VARIANT varInterfaceNames,[in] VARIANT varInterfaceFlags,[in] VARIANT varInterfaces)
HRESULT None None.AddLanguageByRFC1766String([in] LPWSTR pwszLanguageString,[out] WORD *pwIndex)
HRESULT None None.AddListContents([in] DWORD dwListCookie,[in] DWORD cItems,[in] DWORD *prgItems)
HRESULT None None.AddLoggingUrl([in] LPCWSTR pwszUrl)
HRESULT None None.AddLogParam([in] LPCWSTR wszNameSpace,[in] LPCWSTR wszName,[in] LPCWSTR wszValue)
HRESULT None None.AddMarker([in] WCHAR *pwszMarkerName,[in] QWORD cnsMarkerTime)
HRESULT None None.AddMenuItems([in] LPDATAOBJECT piDataObject,[in] LPCONTEXTMENUCALLBACK piCallback,[in None None,out] long *pInsertionAllowed)
HRESULT None None.AddModelTexture([in] IOpcPartUri *texturePartName,[in] IStream *textureData)
HRESULT None None.AddMutualExclusion([in] IWMMutualExclusion *pME)
HRESULT None None.AddNetworkAdapter([out] IVMNetworkAdapter **networkAdapter)
HRESULT None None.addParameter(BSTR baseName None,VARIANT parameter None,BSTR namespaceURI None)
HRESULT None None.AddPlace([in] IShellItem *psi,[in] FDAP fdap)
HRESULT None None.AddPlaybackEffect(REFGUID clsid None,IMFPMediaPlayer *pPlayer None)
HRESULT None None.AddPushButton([in] DWORD dwIDCtl,[in] LPCWSTR pszLabel)
HRESULT None None.AddRefChapter(HCHAPTER hChapter None,DBREFCOUNT *pcRefCount None)
HRESULT None None.AddressOfMember([in] MEMBERID memid,[in] INVOKEKIND invKind,[out] PVOID *ppv)
HRESULT None None.AddRoot([in] ISearchRoot *pSearchRoot)
HRESULT None None.AddScript([in] WCHAR *pwszType,[in] WCHAR *pwszCommand,[in] QWORD cnsScriptTime)
HRESULT None None.AddSCSIController([out] IVMSCSIController **controller)
HRESULT None None.AddSeparator([in] DWORD dwIDCtl)
HRESULT None None.AddSignatureRequestToDocument(__in IXpsSignatureManager *signatureManager,__in LPCWSTR reasonForSignatureRequest,__in LPCWSTR nameOfRequestedSigner,__in LPCWSTR requestSignByDate)
HRESULT None None.AddSink([in] IWMWriterSink *pSink)
HRESULT None None.AddStream([in] DWORD dwSourceStreamIndex,[in] IMFMediaType *pMediaType,[in] IMFAttributes *pAttributes,[out] DWORD *pdwSinkStreamIndex)
HRESULT None None.AddStream([in] IWMStreamConfig *pConfig)
HRESULT None None.AddText(IWMHeaderInfo3* pHeaderInfo None,WCHAR* pwszDesc None,WCHAR* pwszText None,WORD* pwIndex None)
HRESULT None None.AddToRot(IUnknown *pUnkGraph None,DWORD *pdwRegister None)
HRESULT None None.AddUserScopeRule([in] LPCWSTR pszURL,[in] BOOL fInclude,[in] BOOL fOverrideChildren,[in] DWORD fFollowFlags)
HRESULT None None.Advise([in] IAdviseSink *pAdvSink,[out] DWORD *pdwConnection)
HRESULT None None.Advise([in] IFileDialogEvents *pfde,[out] DWORD *pdwCookie)
HRESULT None None.Advise([in] IOverlayNotify *pOverlayNotify,[in] DWORD dwInterests)
HRESULT None None.Advise([in] IUnknown *pWindow,[in] IFrameworkInputPaneHandler *pHandler,[out] DWORD *pdwCookie)
HRESULT None None.Advise([in] IWMStatusCallback *pCallback,[in] void *pvContext)
HRESULT None None.AdviseSurfaceAllocator([in] DWORD_PTR dwUserID,[in] IVMRSurfaceAllocator *lpIVMRSurfaceAllocator)
HRESULT None None.AdviseTime([in] REFERENCE_TIME rtBaseTime,[in] REFERENCE_TIME rtStreamTime,[in] HEVENT hEvent,[out] DWORD *pdwAdviseCookie)
HRESULT None None.AdviseTime([in] REFERENCE_TIME rtBaseTime,[in] REFERENCE_TIME rtStreamTime,[in] HEVENT hEvent,[out] DWORD_PTR *pdwAdviseCookie)
HRESULT None None.AdviseTime(REFERENCE_TIME baseTime None,REFERENCE_TIME streamTime None,HEVENT hEvent None,DWORD_PTR *pdwAdviseToken None)
HRESULT None None.AllocateBuffer(DWORD dwMaxBufferSize None,INSSBuffer** ppBuffer None)
HRESULT None None.AllocateForOutputEx([in] DWORD dwOutputNum,[in] DWORD cbBuffer,[out] INSSBuffer **ppBuffer,[in] DWORD dwFlags,[in] QWORD cnsSampleTime,[in] QWORD cnsSampleDuration,[in] void *pvContext)
HRESULT None None.AllocateForOutput([in] DWORD dwOutputNum,[in] DWORD cbBuffer,[out] INSSBuffer **ppBuffer,[in] void *pvContext)
HRESULT None None.AllocateForPostView([in] WORD wStreamNum,[in] DWORD cbBuffer,[out] INSSBuffer **ppBuffer,[in] void *pvContext)
HRESULT None None.AllocateForStreamEx([in] WORD wStreamNum,[in] DWORD cbBuffer,[out] INSSBuffer **ppBuffer,[in] DWORD dwFlags,[in] QWORD cnsSampleTime,[in] QWORD cnsSampleDuration,[in] void *pvContext)
HRESULT None None.AllocateForStream([in] WORD wStreamNum,[in] DWORD cbBuffer,[out] INSSBuffer **ppBuffer,[in] void *pvContext)
HRESULT None None.AllocatePageSizeBuffer(DWORD dwMaxBufferSize None,INSSBuffer** ppBuffer None)
HRESULT None None.AllocateSample([in] DWORD dwSampleSize,[out] INSSBuffer **ppSample)
HRESULT None None.AllocateSurface([in] DWORD_PTR dwUserID,[in] VMRALLOCATIONINFO *lpAllocInfo,[in] DWORD *lpdwActualBuffers,[out] LPDIRECTDRAWSURFACE7 *lplpSurface)
HRESULT None None.AllocIWMSPacketList(REFIID riid None,void** ppunk None)
HRESULT None None.AllocPacket(IWMSPacket** ppPacket None)
HRESULT None None.AllocPMsg(ULONG cb None,DMUS_PMSG** ppPMSG None)
HRESULT None None.AllocSurface(FORMAT_TYPE type None,ISurface** ppBuffer None)
HRESULT None None.allowPDATransfer([in] HWND hwnd,[in None None,out] IWMPPlaylist *pPlaylist,[out] BOOL *pfAllowTransfer)
HRESULT None None.allowPlay([in] HWND hwnd,[in] IWMPMedia *pMedia,[out] BOOL *pfAllowPlay)
HRESULT None None.AlterColumn(DBID *pTableID None,DBID *pColumnID None,DBCOLUMNDESCFLAGS dwColumnDescFlags None,DBCOLUMNDESC *pColumnDesc None)
HRESULT None None.AMovieDllRegisterServer2(BOOL bRegister None)
HRESULT None None.AngleChange([in] ULONG ulAngle)
HRESULT None None.anyAttribute(ISchemaAny** anyAttribute None)
HRESULT None None.appendChild(IXMLDOMNode *newChild None,IXMLDOMNode **outNewChild None)
HRESULT None None.appendData(BSTR data None)
HRESULT None None.Append([in] IXpsOMRemoteDictionaryResource *object)
HRESULT None None.Append([in] Object *object)
HRESULT None None.AppendPacket(IWMSPacket* pPacket None,DWORD dwExFlags None)
HRESULT None None.ApplyProperties([in] IShellItem *psi,[in] IPropertyStore *pStore,[in] HWND hwnd,[in] IFileOperationProgressSink *pSink)
HRESULT None None.ApplyPropertiesToItem([in] IShellItem *psiItem)
HRESULT None None.ApplySettings([in] BSTR rdpFileContents)
HRESULT None None.ApplyViewState([in] LPSTREAM pstm)
HRESULT None None.Approve([in] BOOL fApprove)
HRESULT None None.AssignPChannel(DWORD dwPChannel None,IDirectMusicPort* pPort None,DWORD dwGroup None,DWORD dwMChannel None)
HRESULT None None.AsWeak(_In_ T* p,_Out_ WeakRef* pWeak)
HRESULT None None.AsyncDownload(VOID None None)
HRESULT None None.AsynchronousBlockOutputPin(HANDLE hNotifyCallerPinBlockedEvent None)
HRESULT None None.AsyncSyncAll(VOID None None)
HRESULT None None.AttributeGetBlob(IMFAttributes *pAttributes None)
HRESULT None None.AttributeGetString(IMFAttributes *pAttributes None)
HRESULT None None.AudioStreamChange([in] ULONG nAudio)
HRESULT None None.AuthenticateClientToSession([out] WTS_SESSION_ID *SessionId)
HRESULT None None.Authenticate([in] BLOB userInfo,[in] BLOB pwdInfo)
HRESULT None None.AutoTransition(IDirectMusicPerformance* pPerformance None,IDirectMusicSegment* pToSeg None,WORD wCommand None,DWORD dwFlags None,IDirectMusicChordMap* pChordMap None,IDirectMusicSegment** ppTransSeg None,IDirectMusicSegmentState** ppToSegState None,IDirectMusicSegmentState** ppTransSegState None)
HRESULT None None.AutoTune([in] long lChannel,[out] long *plFoundSignal)
HRESULT None None.AVISave(LPCTSTR szFile None,CLSID * pclsidHandler,AVISAVECALLBACK lpfnCallback None,int nStreams None,PAVISTREAM pavi None,LPAVICOMPRESSOPTIONS lpOptions None,. . .)
HRESULT None None.BackgroundSync(FEEDS_BACKGROUNDSYNC_ACTION action None)
HRESULT None None.BackupComplete([out] IVssAsync **ppAsync)
HRESULT None None.BackupLicenses([in] DWORD dwFlags,[in] IWMStatusCallback *pCallback)
HRESULT None None.BackwardScan([in] double dwSpeed)
HRESULT None None.BeginConvertHNSToTimecode([in] MFTIME hnsTime,[in] IMFAsyncCallback *pCallback,[in] IUnknown *punkState)
HRESULT None None.BeginCreateObjectFromByteStream([in] IMFByteStream *pByteStream,[in] LPCWSTR pwszURL,[in] DWORD dwFlags,[in] IPropertyStore *pProps,[out] IUnknown **ppIUnknownCancelCookie,[in] IMFAsyncCallback *pCallback,[in] IUnknown *punkState)
HRESULT None None.BeginFrame([in] IDirect3DSurface9 *pRenderTarget,[in] void *pvPVPData)
HRESULT None None.BeginGetEvent([in] IMFAsyncCallback *pCallback,[in] IUnknown *punkState)
HRESULT None None.BeginMemoryPressureQuery(IDirect3DDevice9Ex *pDevice None,IDirect3DQuery9 **ppQuery None)
HRESULT None None.BeginRegisterPlatformWorkQueueWithMMCSS([in] DWORD dwPlatformWorkQueue,[in] LPCWSTR wszClass,[in] DWORD dwTaskId,[in] IMFAsyncCallback *pCallback,[in] IUnknown *pState)
HRESULT None None.BeginTransaction(IUnknown * punkOuter,ISOLEVEL isoLevel None,ULONG isoFlags None,ITransactionOptions * pOptions,ITransaction ** ppTransaction)
HRESULT None None.BeginUpdatingAudioObjects([out] UINT32 *availableDynamicObjectCount,[out] UINT32 *frameCountPerBuffer)
HRESULT None None.Bind(IUnknown * pUnkOuter,LPCOLESTR pwszURL None,DBBINDURLFLAG dwBindURLFlags None,REFGUID rguid None,REFIID riid None,IAuthenticate * pAuthenticate,DBIMPLICITSESSION * pImplSession,DBBINDURLSTATUS * pdwBindStatus,IUnknown ** ppUnk)
HRESULT None None.BindToObject([in] IBindCtx *pbc,[in] IMoniker *pmkToLeft,[in] REFIID riidResult,[out] void **ppvResult)
HRESULT None None.BindToSource([in] DWORD bindflags,[in] IBindCtx *pbc)
HRESULT None None.BindToStorage([in] IBindCtx *pbc,[in] IMoniker *pmkToLeft,[in] REFIID riid,[out] void **ppvObj)
HRESULT None None.BindToStream([out] IStream **ppStream)
HRESULT None None.BizruleGroupSupported([out] VARIANT_BOOL *pbSupported)
HRESULT None None.BreakText([in] TEXT_SOURCE *pTextSource,[in] IWordSink *pWordSink,[in] IPhraseSink *pPhraseSink)
HRESULT None None.BuildFromXML([in] IGraphBuilder *pGraph,[in] IXMLElement *pxml)
HRESULT None None.BuildGraph(IGraphBuilder *pGraph None,const WCHAR *wFileName)
HRESULT None None.ButtonSelectAndActivate([in] ULONG uiButton)
HRESULT None None.BuyComplete([in] HRESULT hrResult,[in] DWORD dwBuyCookie)
HRESULT None None.Buy([in] IWMPContentContainerList *pInfo,[in] DWORD cookie)
HRESULT None None.ByteToChar(_In_ BYTE bOperand,_Out_ CHAR *pch)
HRESULT None None.ByteToInt8(_In_ BYTE bOperand,_Out_ INT8 *pi8Result)
HRESULT None None.Cache([in] FORMATETC *pformatetc,[in] DWORD advf,[out] DWORD *pdwConnection)
HRESULT None None.CacheObject(IDirectMusicObject * pObject)
HRESULT None None.CalculateDiscIdentifier([out] BSTR *discIdentifier)
HRESULT None None.CanBuySilent([in] IWMPContentContainerList *pInfo,[out] BSTR *pbstrTotalPrice,[out] VARIANT_BOOL *pSilentOK)
HRESULT None None.CancelAsyncDownload(VOID None None)
HRESULT None None.CancelDefaultHandling(long lEvCode None)
HRESULT None None.CancelLink(DWORD dwLink None)
HRESULT None None.CancelRequest([in] LONG idResource,[in] IResourceConsumer *pConsumer)
HRESULT None None.CanConstrict([out] BOOL *pYes)
HRESULT None None.CanConvert(DBTYPE wSrcType None,DBTYPE wDstType None)
HRESULT None None.CanPlayType([in] BOOL AudioOnly,[in] BSTR MimeType,[out] MF_MEDIA_ENGINE_CANPLAY *pAnswer)
HRESULT None None.CanPlayType([in] BSTR type,[out] MF_MEDIA_ENGINE_CANPLAY *pAnswer)
HRESULT None None.CanSaveFileAs([out] BOOL *pfCanSave)
HRESULT None None.CanSeekBackward(LONG *pCanSeekBackward None)
HRESULT None None.CanSeekBackward([out] LONG *pCanSeekBackward)
HRESULT None None.CanSeekForward([out] LONG *pCanSeekForward)
HRESULT None None.CanUseOverlayStretch(long *UseOverlayStretch None)
HRESULT None None.CanUseScanLine(long *UseScanLine None)
HRESULT None None.ChangeACLtoAllowUserRW(WCHAR* strDir None)
HRESULT None None.ChangeDDrawDevice([in] LPDIRECTDRAW7 lpDirectDrawDevice,[in] HMONITOR hMonitor)
HRESULT None None.ChangeMediaType(const CMediaType *pmt)
HRESULT None None.ChangeOutputFormat(const AM_MEDIA_TYPE *pmt,REFERENCE_TIME tSegmentStart None,REFERENCE_TIME tSegmentStop None,double dSegmentRate None)
HRESULT None None.ChangeView([in] BSTR bstrType,[in] BSTR bstrID,[in] BSTR bstrFilter)
HRESULT None None.ChannelMinMax([out] long *lChannelMin,[out] long *lChannelMax)
HRESULT None None.ChapterPlayAutoStop([in] ULONG ulTitle,[in] ULONG ulChapter,[in] ULONG ulChaptersToPlay)
HRESULT None None.ChapterPlay([in] ULONG uiTitle,[in] ULONG uiChapter)
HRESULT None None.ChapterSearch(ULONG Chapter None)
HRESULT None None.CheckCapabilities(DWORD *pCapabilities None)
HRESULT None None.CheckCapabilities([in None None,out] DWORD *pCapabilities)
HRESULT None None.CheckConnect(IPin *pPin None)
HRESULT None None.CheckContosoHasDotHTM(__out BOOL* pfHasDotHTM)
HRESULT None None.CheckFeatureSupport(DXGI_FEATURE Feature None,[in None None,out] void *pFeatureSupportData,UINT FeatureSupportDataSize None)
HRESULT None None.CheckFormatSupport([in] DXGI_FORMAT Format,[out] UINT *pFormatSupport)
HRESULT None None.CheckImgFilter(IN IWiaItem2 *pWiaItem2,OUT BOOL *pbHasImgFilter)
HRESULT None None.CheckMediaType(AM_MEDIA_TYPE *pmt None)
HRESULT None None.CheckMediaType(const CMediaType *mtIn)
HRESULT None None.CheckMediaType(const CMediaType *pmtIn)
HRESULT None None.CheckMultisampleQualityLevels([in] DXGI_FORMAT Format,[in] UINT SampleCount,[out] UINT *pNumQualityLevels)
HRESULT None None.CheckPresentDurationSupport(UINT DesiredPresentDuration None,[out] UINT *pClosestSmallerPresentDuration,[out] UINT *pClosestLargerPresentDuration)
HRESULT None None.CheckTransform(const CMediaType *mtIn,const CMediaType *mtOut)
HRESULT None None.CheckVideoType(const VIDEOINFO *pInput)
HRESULT None None.Clone(IEnumDMO **ppEnum None)
HRESULT None None.Clone(IEnumPins **ppEnum None)
HRESULT None None.Clone([in] IOleInPlaceSite *pIPSiteNew,[out] IOleDocumentView **ppViewNew)
HRESULT None None.clone(IXMLDOMSelection ** ppNode)
HRESULT None None.cloneNode(VARIANT_BOOL deep None,IXMLDOMNode **cloneRoot None)
HRESULT None None.Clone([out] IEnumBitsPeerCacheRecords **ppEnum)
HRESULT None None.Clone([out] IEnumFullIDList **ppenum)
HRESULT None None.Clone([out] IEnumMoniker **ppenum)
HRESULT None None.Clone([out] IEnumOleUndoUnits **ppEnum)
HRESULT None None.Clone([out] IEnumOLEVERB **ppenum)
HRESULT None None.Clone([out] IEnumPins **ppEnum)
HRESULT None None.Clone([out] IEnumRegFilters **ppEnum)
HRESULT None None.Clone([out] IEnumShellItems **ppenum)
HRESULT None None.Clone([out] IEnumStream **ppEnum)
HRESULT None None.Clone([out] IEnumString **ppenum)
HRESULT None None.Clone([out] IEnumSyncMgrSyncItems **ppenum)
HRESULT None None.Clone([out] IEnumTASK **ppenum)
HRESULT None None.Clone([out] IEnumUnknown **ppenum)
HRESULT None None.Clone([out] IMDSPEnumDevice **ppEnumDevice)
HRESULT None None.Clone([out] IMFASFMutualExclusion **ppIMutex)
HRESULT None None.Clone([out] IMFASFStreamPrioritization **ppIStreamPrioritization)
HRESULT None None.Clone([out] ITravelLog **pptl)
HRESULT None None.Clone([out None None,retval] IEnumSearchScopeRules **ppenum)
HRESULT None None.Clone([out None None,retval] IInkDisp **NewInk)
HRESULT None None.Clone([out None None,retval] IOpcSignatureCustomObjectEnumerator **copy)
HRESULT None None.Clone([out None None,retval] IOpcSignatureReferenceEnumerator **copy)
HRESULT None None.Clone([out None None,retval] IOpcSignatureRelationshipReferenceEnumerator **copy)
HRESULT None None.Clone([out None None,retval] IXpsOMCanvas **canvas)
HRESULT None None.Clone([out None None,retval] IXpsOMCoreProperties **coreProperties)
HRESULT None None.Clone([out None None,retval] IXpsOMGeometry **geometry)
HRESULT None None.Clone([out None None,retval] IXpsOMGlyphs **glyphs)
HRESULT None None.Clone([out None None,retval] IXpsOMGradientStop **gradientStop)
HRESULT None None.Clone([out None None,retval] IXpsOMLinearGradientBrush **linearGradientBrush)
HRESULT None None.Clone([out None None,retval] IXpsOMMatrixTransform **matrixTransform)
HRESULT None None.Clone([out None None,retval] IXpsOMPage **page)
HRESULT None None.Clone([out None None,retval] IXpsOMPageReference **pageReference)
HRESULT None None.Clone([out None None,retval] IXpsOMPath **path)
HRESULT None None.Clone([out None None,retval] IXpsOMRadialGradientBrush **radialGradientBrush)
HRESULT None None.ClonePacketList(IWMSPacketList** ppClonedPacketList None)
HRESULT None None.CloneStreamHeader(IWMSStreamHeader** ppHeader None)
HRESULT None None.CloneWithCommitDisabled(ITransaction ** ppITransaction)
HRESULT None None.CloseAccessor([in] IUrlAccessor *pAccessor)
HRESULT None None.CloseDeviceHandle([in] HANDLE hDevice)
HRESULT None None.Close([in] DWORD dwSaveOption)
HRESULT None None.CloseView([in] DWORD dwReserved)
HRESULT None None.CollectLinkTargets([out None None,retval] IXpsOMNameCollection **linkTargets)
HRESULT None None.CollectPartResources([out None None,retval] IXpsOMPartResources **partResources)
HRESULT None None.Command([in] long lCommandID,[in] LPDATAOBJECT piDataObject)
HRESULT None None.Commit(BOOL fRetaining None,DWORD grfTC None,DWORD grfRM None)
HRESULT None None.CompareContainerListPrices([in] IWMPContentContainerList *pListBase,[in] IWMPContentContainerList *pListCompare,[out] long *pResult)
HRESULT None None.Compare([in] IMFAttributes *pTheirs,[in] MF_ATTRIBUTES_MATCH_TYPE MatchType,[out] BOOL *pbResult)
HRESULT None None.CompareItem([in] REFGUID guidKey,[in] REFPROPVARIANT Value,[out] BOOL *pbResult)
HRESULT None None.CompareObjects([in] LPDATAOBJECT lpDataObjectA,[in] LPDATAOBJECT lpDataObjectB)
HRESULT None None.ComposeSegmentFromShape(IDirectMusicStyle* pStyle None,WORD wNumMeasures None,WORD wShape None,WORD wActivity None,BOOL fIntro None,BOOL fEnd None,IDirectMusicChordMap* pChordMap None,IDirectMusicSegment** ppSegment None)
HRESULT None None.ComposeSegmentFromTemplate(IDirectMusicStyle* pStyle None,IDirectMusicSegment* pTemplate None,WORD wActivity None,IDirectMusicChordMap* pChordMap None,IDirectMusicSegment** ppSegment None)
HRESULT None None.ComposeTransition(IDirectMusicSegment* pFromSeg None,IDirectMusicSegment* pToSeg None,MUSIC_TIME mtTime None,WORD wCommand None,DWORD dwFlags None,IDirectMusicChordMap* pChordMap None,IDirectMusicSegment** ppTransSeg None)
HRESULT None None.ComposeWith([in] IMoniker *pmkRight,[in] BOOL fOnlyIfNotGeneric,[out] IMoniker **ppmkComposite)
HRESULT None None.CompositeImage([in] IUnknown *pD3DDevice,[in] IDirect3DSurface9 *pddsRenderTarget,[in] AM_MEDIA_TYPE *pmtRenderTarget,[in] REFERENCE_TIME rtStart,[in] REFERENCE_TIME rtEnd,[in] D3DCOLOR dwClrBkGnd,[in] VMR9VideoStreamInfo *pVideoStreamInfo,[in] UINT cStreams)
HRESULT None None.ComputeStateBlockMask(D3DX11_STATE_BLOCK_MASK *pStateBlockMask None)
HRESULT None None.Confidence(LONG *pConfidence None)
HRESULT None None.Configure([in] WORD wStreamNum,[in] WMT_INDEXER_TYPE nIndexerType,[in] void *pvInterval,[in] void *pvIndexType)
HRESULT None None.ConfirmEncryptionLoss(IShellItem *psiSource None)
HRESULT None None.ConnectedTo(IPin **ppPin None)
HRESULT None None.ConnectedTo([out] IPin **ppPin)
HRESULT None None.ConnectionMediaType(AM_MEDIA_TYPE *pmt None)
HRESULT None None.ConnectionMediaType([out] AM_MEDIA_TYPE *pmt)
HRESULT None None.Connect(IPin *pReceivePin None,const AM_MEDIA_TYPE *pmt)
HRESULT None None.ConnectOutput([in] DWORD dwOutputIndex,[in] IMFTopologyNode *pDownstreamNode,[in] DWORD dwInputIndexOnDownstreamNode)
HRESULT None None.ConnectTo([in] IConnector *pConnectTo)
HRESULT None None.ConnectToLogicalSensor(PCWSTR* wszHardwareID None,GUID guidLogicalID None)
HRESULT None None.ControlbarNotify([in] MMC_NOTIFY_TYPE event,[in] LPARAM arg,[in] LPARAM param)
HRESULT None None.ConvertTridToXID(DWORD * pdwITransaction,DWORD dwRMCookie None,XID * pXid)
HRESULT None None.CopyAllItems([in] IMFAttributes *pDest)
HRESULT None None.CopyAttribute(IMFAttributes *pFrom None,IMFAttributes *pTo None,REFGUID guidKey None)
HRESULT None None.CopyImage(IMediaSample *pMediaSample None,VIDEOINFOHEADER *pVideoInfo None,LONG *pBufferSize None,BYTE *pVideoImage None,RECT *pSourceRect None)
HRESULT None None.CopyProxy([in] IUnknown *pProxy,[out] IUnknown **ppCopy)
HRESULT None None.Copyright(LPWSTR *ppszCopyright None)
HRESULT None None.CorBindToRuntimeEx([in] LPWSTR pwszVersion,[in] LPWSTR pwszBuildFlavor,[in] DWORD flags,[in] REFCLSID rclsid,[in] REFIID riid,[out] LPVOID* ppv)
HRESULT None None.CorBindToRuntimeEx([in] LPWSTR pwszVersion,[in] LPWSTR pwszBuildFlavor,[in] DWORD startupFlags,[in] REFCLSID rclsid,[in] REFIID riid,[out] LPVOID* ppv)
HRESULT None None.CountModes([out] long *pModes)
HRESULT None None.Count([out] DWORD *pcStreams)
HRESULT None None.Count([out] ULONG *pcelt)
HRESULT None None.Count(UINT *puiCount None)
HRESULT None None.CreateAccessor(DBACCESSORFLAGS dwAccessorFlags None,DBCOUNTITEM cBindings None,const DBBINDING rgBindings[],DBLENGTH cbRowSize None,HACCESSOR *phAccessor None,DBBINDSTATUS rgStatus[] None)
HRESULT None None.CreateAck(LPWSTR lpstrAdminQueue None,USHORT AckValue None,MQMSGPROPS* pmsgprops None,GUID g_guidConnectorType None)
HRESULT None None.CreateAdditionalSwapChain([in None None,out] D3DPRESENT_PARAMETERS *pPresentationParameters,[out None None,retval] IDirect3DSwapChain9 **ppSwapChain)
HRESULT None None.createAttribute(BSTR name None,IXMLDOMAttribute **attribute None)
HRESULT None None.CreateAuthenticatedChannel(D3DAUTHENTICATEDCHANNELTYPE ChannelType None,IDirect3DAuthenticatedChannel9 **ppAuthenticatedChannel None,HANDLE *pChannelHandle None)
HRESULT None None.CreateBooleanLeaf([in] REFPROPERTYKEY propkey,[in] CONDITION_OPERATION cop,[in] BOOL fValue,[in] CONDITION_CREATION_OPTIONS cco,[in] REFIID riid,[out] void **ppv)
HRESULT None None.CreateCacheRequest([out None None,retval] IUIAutomationCacheRequest **cacheRequest)
HRESULT None None.CreateCanvas([out None None,retval] IXpsOMCanvas **canvas)
HRESULT None None.CreateCertificateChain(__in PCCERT_CONTEXT certificate,__in HCERTSTORE certificateStore,__out PCCERT_CHAIN_CONTEXT* certificateChain)
HRESULT None None.CreateClassLinkage([out] ID3D11ClassLinkage **ppLinkage)
HRESULT None None.CreateColorProfileResource([in] IStream *acquiredStream,[in] IOpcPartUri *partUri,[out None None,retval] IXpsOMColorProfileResource **colorProfileResource)
HRESULT None None.CreateColorTransformer([out] IWICColorTransform **ppIWICColorTransform)
HRESULT None None.CreateCommand(IUnknown *pUnkOuter None,REFIID riid None,IUnknown **ppCommand None)
HRESULT None None.createComment(BSTR data None,IXMLDOMComment **comment None)
HRESULT None None.CreateCompoundFromArray([in] CONDITION_TYPE ct,[in] ICondition **ppCondSubs,[in] ULONG cSubs,[in] CONDITION_CREATION_OPTIONS cco,[in] REFIID riid,[out] void **ppv)
HRESULT None None.CreateCompoundFromObjectArray([in] CONDITION_TYPE ct,[in None None,optional] IObjectArray *poaSubs,[in] CONDITION_CREATION_OPTIONS cco,[in] REFIID riid,[out] void **ppv)
HRESULT None None.CreateCoreProperties([in] IOpcPartUri *partUri,[out None None,retval] IXpsOMCoreProperties **coreProperties)
HRESULT None None.CreateCubeTexture([in] UINT EdgeLength,[in] UINT Levels,[in] DWORD Usage,[in] D3DFORMAT Format,[in] D3DPOOL Pool,[out None None,retval] IDirect3DCubeTexture9 **ppCubeTexture,[in] HANDLE *pSharedHandle)
HRESULT None None.CreateD3DDeviceManager(IDirect3DDevice9 *pDevice None,UINT *pReset None,IDirect3DDeviceManager9 **ppManager None)
HRESULT None None.CreateDataSourceDirectory(IWMSCommandContext* pCommandContext None,LPWSTR pszContainerName None,DWORD dwFlags None,IWMSDataSourcePluginCallback* pCallback None,QWORD qwContext None)
HRESULT None None.CreateDataSource(ULONG cPropertySets None,DBPROPSET rgPropertySets[] None,IUnknown *pUnkOuter None,REFIID riid None,IUnknown **ppSession None)
HRESULT None None.CreateDecodeSwapChainForCompositionSurfaceHandle([in] IUnknown *pDevice,[in None None,optional] HANDLE hSurface,[in] DXGI_DECODE_SWAP_CHAIN_DESC *pDesc,[in] IDXGIResource *pYuvDecodeBuffers,[in None None,optional] IDXGIOutput *pRestrictToOutput,[out] IDXGIDecodeSwapChain **ppSwapChain)
HRESULT None None.CreateDeferredContext1(UINT ContextFlags None,[out None None,optional] ID3D11DeviceContext1 **ppDeferredContext)
HRESULT None None.CreateDeferredContext2(UINT ContextFlags None,[out None None,optional] ID3D11DeviceContext2 **ppDeferredContext)
HRESULT None None.CreateDeferredContext(UINT ContextFlags None,[out None None,optional] ID3D11DeviceContext **ppDeferredContext)
HRESULT None None.CreateDepthStencilSurface([in] UINT Width,[in] UINT Height,[in] D3DFORMAT Format,[in] D3DMULTISAMPLE_TYPE MultiSample,[in] DWORD MultisampleQuality,[in] BOOL Discard,[out None None,retval] IDirect3DSurface9 **ppSurface,[in] HANDLE *pSharedHandle)
HRESULT None None.CreateDevice([in] UINT Adapter,[in] D3DDEVTYPE DeviceType,[in] HWND hFocusWindow,[in] DWORD BehaviorFlags,[in None None,out] D3DPRESENT_PARAMETERS *pPresentationParameters,[out None None,retval] IDirect3DDevice9 **ppReturnedDeviceInterface)
HRESULT None None.CreateDictionary([out None None,retval] IXpsOMDictionary **dictionary)
HRESULT None None.CreateDigitalSignatureManager([in] IOpcPackage *package,[out None None,retval] IOpcDigitalSignatureManager **signatureManager)
HRESULT None None.createDocumentFragment(IXMLDOMDocumentFragment **docFrag None)
HRESULT None None.CreateDocument([in] IOpcPartUri *partUri,[out None None,retval] IXpsOMDocument **document)
HRESULT None None.CreateDocumentSequence([in] IOpcPartUri *partUri,[out None None,retval] IXpsOMDocumentSequence **documentSequence)
HRESULT None None.CreateDocumentStructureResource([in] IStream *acquiredStream,[in] IOpcPartUri *partUri,[out None None,retval] IXpsOMDocumentStructureResource **documentStructureResource)
HRESULT None None.CreateDomainShader(const void *pShaderBytecode,// SIZE_T BytecodeLength,// ID3D11ClassLinkage *pClassLinkage,// ID3D11DomainShader **ppDomainShader)
HRESULT None None.CreateDXVADevice(GUID *pGuid None,DXVAUncompDataInfo *pUncompData None,LPVOID pData None,DWORD DataSize None,IDirect3DDXVADevice9 **ppDXVADevice None)
HRESULT None None.CreateDynamicTerminal([in] IUnknown *pOuterUnknown,[in] IID iidTerminalClass,[in] DWORD dwMediaType,[in] TERMINAL_DIRECTION Direction,[in] MSP_HANDLE htAddress,[out] ITTerminal **ppTerminal)
HRESULT None None.CreateEffect(REFCLSID effectId None,[out] ID2D1Effect **effect)
HRESULT None None.createElement(BSTR tagName None,IXMLDOMElement **element None)
HRESULT None None.CreateEmptyProfile([in] WMT_VERSION dwVersion,[out] IWMProfile **ppProfile)
HRESULT None None.createEntityReference(BSTR name None,IXMLDOMEntityReference **entityRef None)
HRESULT None None.CreateFalseCondition([out None None,retval] IUIAutomationCondition **newCondition)
HRESULT None None.CreateFontResource([in] IStream *acquiredStream,[in] XPS_FONT_EMBEDDING fontEmbedding,[in] IOpcPartUri *partUri,[in] BOOL isObfSourceStream,[out None None,retval] IXpsOMFontResource **fontResource)
HRESULT None None.CreateGeometry([out None None,retval] IXpsOMGeometry **geometry)
HRESULT None None.CreateGlyphs([in] IXpsOMFontResource *fontResource,[out None None,retval] IXpsOMGlyphs **glyphs)
HRESULT None None.Create(GUID * pguidRM,CHAR * pszRMName,IResourceManagerSink * pIResMgrSink,IResourceManager ** ppResMgr)
HRESULT None None.CreateHullShader(const void *pShaderBytecode,SIZE_T BytecodeLength None,ID3D11ClassLinkage *pClassLinkage None,ID3D11HullShader **ppHullShader None)
HRESULT None None.CreateIndexBuffer([in] UINT Length,[in] DWORD Usage,[in] D3DFORMAT Format,[in] D3DPOOL Pool,[out None None,retval] IDirect3DIndexBuffer9 **ppIndexBuffer,[in] HANDLE *pSharedHandle)
HRESULT None None.CreateIndex(DBID *pTableID None,DBID *pIndexID None,DBORDINAL cIndexColumnDescs None,const DBINDEXCOLUMNDESC rgIndexColumnDescs[],ULONG cPropertySets None,DBPROPSET rgPropertySets[] None,DBID **ppIndexID None)
HRESULT None None.Create([in] IUri *referenceUri,[in] LPCWSTR referenceId,[in] LPCWSTR type,[in] LPCWSTR digestMethod,[in] OPC_CANONICALIZATION_METHOD transformMethod,[out None None,retval] IOpcSignatureReference **reference)
HRESULT None None.CreateInstance([in] DWORD dwFlags,[in] IMFAttributes *pAttr,[out] IMFMediaEngine **ppPlayer)
HRESULT None None.CreateInstance([in] IUnknown *pUnkOuter,[in] REFIID riid,[out] PVOID *ppvObj)
HRESULT None None.CreateInstance(REFIID riid None,void** ppunk None)
HRESULT None None.CreateIntegerLeaf([in] REFPROPERTYKEY propkey,[in] CONDITION_OPERATION cop,[in] INT32 lValue,[in] CONDITION_CREATION_OPTIONS cco,[in] REFIID riid,[out] void **ppv)
HRESULT None None.Create([in] UINT8 *xmlMarkup,[in] UINT32 count,[out None None,retval] IOpcSignatureCustomObject **customObject)
HRESULT None None.Create(ITransactionPhase0NotifyAsync * pITransactionPhase0Notify,ITransactionPhase0EnlistmentAsync ** ppITransactionPhase0Enlistment)
HRESULT None None.Create(ITransaction * pITransaction,ITransactionVoterNotifyAsync2 * pVoterNotify,ITransactionVoterBallotAsync2 ** ppVoterBallot)
HRESULT None None.CreateLoadedParser([in] LPCWSTR pszCatalog,[in] LANGID langidForKeywords,[in] REFIID riid,[out None None,retval] void **ppQueryParser)
HRESULT None None.CreateMediaItemFromObject([in] IUnknown *pIUnknownObj,[in] BOOL fSync,[in] DWORD_PTR dwUserData,[out] IMFPMediaItem **ppMediaItem)
HRESULT None None.CreateMediaItemFromURL([in] LPCWSTR pwszURL,[in] BOOL fSync,[in] DWORD_PTR dwUserData,[out] IMFPMediaItem **ppMediaItem)
HRESULT None None.CreateMediaKeys2([in] BSTR keySystem,[in] BSTR defaultCdmStorePath,[in None None,optional] BSTR inprivateCdmStorePath,[out] IMFMediaKeys **ppKeys)
HRESULT None None.CreateMediaSourceWithSourceOpenMonitor(PCWSTR pszURL None,IMFMediaSource **ppSource None)
HRESULT None None.CreateMutualExclusion([out] IMFASFMutualExclusion **ppIMutex)
HRESULT None None.CreateNegation([in] ICondition *pcSub,[in] CONDITION_CREATION_OPTIONS cco,[in] REFIID riid,[out] void **ppv)
HRESULT None None.CreateNewBandwidthSharing([out] IWMBandwidthSharing **ppBS)
HRESULT None None.CreateNewMutualExclusion([out] IWMMutualExclusion **ppME)
HRESULT None None.CreateNewStream([in] REFGUID guidStreamType,[out] IWMStreamConfig **ppConfig)
HRESULT None None.CreateNewStreamPrioritization([out] IWMStreamPrioritization **ppSP)
HRESULT None None.CreateNodeInstance([in] DWORD dwNodeId,[in] REFIID iid,[out] void **ppvObject)
HRESULT None None.createNode(VARIANT Type None,BSTR name None,BSTR namespaceURI None,IXMLDOMNode **node None)
HRESULT None None.CreateObjectByCLSID([in] REFCLSID clsid,[in] REFIID riid,[out] void **ppObject)
HRESULT None None.CreateOffscreenPlainSurface([in] UINT Width,[in] UINT Height,[in] D3DFORMAT Format,[in] D3DPOOL Pool,[out None None,retval] IDirect3DSurface9 **ppSurface,[in] HANDLE *pSharedHandle)
HRESULT None None.CreateOffsetTransform(D2D1_POINT_2L offset None,[out] ID2D1OffsetTransform **transform)
HRESULT None None.CreatePackageFromFile([in] LPCWSTR filename,[in] BOOL reuseObjects,[out None None,retval] IXpsOMPackage **package)
HRESULT None None.CreatePackageFromStream([in] IStream *stream,[in] BOOL reuseObjects,[out None None,retval] IXpsOMPackage **package)
HRESULT None None.CreatePackage([out None None,retval] IOpcPackage **package)
HRESULT None None.CreatePackage([out None None,retval] IXpsOMPackage **package)
HRESULT None None.CreatePackageRootUri([out None None,retval] IOpcUri **rootUri)
HRESULT None None.CreatePackageWriterOnFile([in] LPCWSTR fileName,[in None None,unique] LPSECURITY_ATTRIBUTES securityAttributes,[in] DWORD flagsAndAttributes,[in] BOOL optimizeMarkupSize,[in] XPS_INTERLEAVING interleaving,[in] IOpcPartUri *documentSequencePartName,[in] IXpsOMCoreProperties *coreProperties,[in] IXpsOMImageResource *packageThumbnail,[in] IXpsOMPrintTicketResource *documentSequencePrintTicket,[in] IOpcPartUri *discardControlPartName,[out None None,retval] IXpsOMPackageWriter **packageWriter)
HRESULT None None.CreatePackageWriterOnStream([in] ISequentialStream *outputStream,[in] BOOL optimizeMarkupSize,[in] XPS_INTERLEAVING interleaving,[in] IOpcPartUri *documentSequencePartName,[in] IXpsOMCoreProperties *coreProperties,[in] IXpsOMImageResource *packageThumbnail,[in] IXpsOMPrintTicketResource *documentSequencePrintTicket,[in] IOpcPartUri *discardControlPartName,[out None None,retval] IXpsOMPackageWriter **packageWriter)
HRESULT None None.CreatePageFromStream([in] IStream *pageMarkupStream,[in] IOpcPartUri *partUri,[in] IXpsOMPartResources *resources,[in] BOOL reuseObjects,[out None None,retval] IXpsOMPage **page)
HRESULT None None.CreatePart([in] IOpcPartUri *name,[in] LPCWSTR contentType,[in] OPC_COMPRESSION_OPTIONS compressionOptions,[out None None,retval] IOpcPart **part)
HRESULT None None.CreatePartResources([out None None,retval] IXpsOMPartResources **partResources)
HRESULT None None.CreatePartUriCollection([out None None,retval] IXpsOMPartUriCollection **partUriCollection)
HRESULT None None.CreatePartUri([in] LPCWSTR pwzUri,[out None None,retval] IOpcPartUri **partUri)
HRESULT None None.CreatePartUri([in] LPCWSTR uri,[out None None,retval] IOpcPartUri **partUri)
HRESULT None None.CreatePath([out None None,retval] IXpsOMPath **path)
HRESULT None None.CreatePlaylist(IXMLDOMDocument** ppPlaylist None)
HRESULT None None.CreatePresentationDescriptor([out] IMFPresentationDescriptor **ppPresentationDescriptor)
HRESULT None None.CreatePrintTicketResource([in] IStream *acquiredStream,[in] IOpcPartUri *partUri,[out None None,retval] IXpsOMPrintTicketResource **printTicketResource)
HRESULT None None.createProcessingInstruction(BSTR target None,BSTR data None,IXMLDOMProcessingInstruction **pi None)
HRESULT None None.createProcessor(IXSLProcessor** ppProcessor None)
HRESULT None None.CreateProfile(IWMProfileManager* pProfileMgr None,IWMProfile** ppProfile None)
HRESULT None None.CreatePropertyByPosition([in] int Index,[out] VARIANT_BOOL *fExists,[out] ISharedProperty **ppProp)
HRESULT None None.CreatePropertyPages([in] LPPROPERTYSHEETCALLBACK lpProvider,[in] LONG_PTR handle,[in] LPDATAOBJECT lpIDataObject)
HRESULT None None.CreateQuery([in] D3DQUERYTYPE Type,[out None None,retval] IDirect3DQuery9 **ppQuery)
HRESULT None None.CreateQueue(WCHAR *wszPathName None)
HRESULT None None.CreateReadOnlyStreamOnFile([in] LPCWSTR filename,[out None None,retval] IStream **stream)
HRESULT None None.CreateRelationship([in] LPCWSTR relationshipIdentifier,[in] LPCWSTR relationshipType,[in] IUri *targetUri,[in] OPC_URI_TARGET_MODE targetMode,[out None None,retval] IOpcRelationship **relationship)
HRESULT None None.CreateRemoteDictionaryResource([in] IXpsOMDictionary *dictionary,[in] IOpcPartUri *partUri,[out None None,retval] IXpsOMRemoteDictionaryResource **remoteDictionaryResource)
HRESULT None None.CreateRenderTarget([in] UINT Width,[in] UINT Height,[in] D3DFORMAT Format,[in] D3DMULTISAMPLE_TYPE MultiSample,[in] DWORD MultisampleQuality,[in] BOOL Lockable,[out None None,retval] IDirect3DSurface9 **ppSurface,[in] HANDLE *pSharedHandle)
HRESULT None None.CreateResultImage([out] IFileSystemImageResult **resultStream)
HRESULT None None.CreateResultImage([out None None,optional] IStream **resultStream)
HRESULT None None.CreateSegmentationFilter(IWiaItem2 *pWiaItem2 None,IWiaSegmentationFilter **ppSegmentationFilter None)
HRESULT None None.CreateSegment(IDirectMusicSegment** ppSegment None)
HRESULT None None.CreateSessionManager(IAudioSessionManager2** ppSessionManager None)
HRESULT None None.CreateSigningOptions([out None None,retval] IXpsSigningOptions **signingOptions)
HRESULT None None.CreateSoftwareAdapter(HMODULE Module None,[out] IDXGIAdapter **ppAdapter)
HRESULT None None.CreateSoundBuffer(LPCDSBUFFERDESC pcDSBufferDesc None,LPDIRECTSOUNDBUFFER * ppDSBuffer,LPUNKNOWN pUnkOuter None)
HRESULT None None.CreateStateBlock([in] D3DSTATEBLOCKTYPE Type,[out None None,retval] IDirect3DStateBlock9 **ppSB)
HRESULT None None.CreateStoryFragmentsResource([in] IStream *acquiredStream,[in] IOpcPartUri *partUri,[out None None,retval] IXpsOMStoryFragmentsResource **storyFragmentsResource)
HRESULT None None.CreateStream([in] long lMediaType,[in] TERMINAL_DIRECTION td,[out] ITStream **ppStream)
HRESULT None None.CreateStreamOnFile([in] LPCWSTR filename,[in] OPC_STREAM_IO_MODE ioMode,[in] LPSECURITY_ATTRIBUTES securityAttributes,[in] DWORD dwFlagsAndAttributes,[out None None,retval] IStream **stream)
HRESULT None None.CreateStringLeaf([in] REFPROPERTYKEY propkey,[in] CONDITION_OPERATION cop,[in] LPCWSTR pszValue,[in] LPCWSTR pszLocaleName,[in] CONDITION_CREATION_OPTIONS cco,[in] REFIID riid,[out] void **ppv)
HRESULT None None.CreateSubfolder(LPCWSTR pszName None,REFIID riid None,void **ppv None)
HRESULT None None.CreateSubStream([out] ITSubStream **ppSubStream)
HRESULT None None.CreateSurface([in] UINT Width,[in] UINT Height,[in] UINT BackBuffers,[in] D3DFORMAT Format,[in] D3DPOOL Pool,[in] DWORD Usage,[in] DWORD DxvaType,[out] IDirect3DSurface9 **ppSurface,[in None None,out] HANDLE *pSharedHandle)
HRESULT None None.CreateSurface(UINT Width None,UINT Height None,UINT BackBuffers None,D3DFORMAT Format None,D3DPOOL Pool None,DWORD Usage None,IDirect3DSurface9 **ppSurface None,HANDLE *pSharedHandle None)
HRESULT None None.CreateTableWithConstraints(IUnknown *pUnkOuter None,DBID *pTableID None,DBORDINAL cColumnDescs None,const DBCOLUMNDESC rgColumnDescs[],ULONG cConstraintDescs None,DBCONSTRAINTDESC rgConstraintDescs[] None,REFIID riid None,ULONG cPropertySets None,DBPROPSET rgPropertySets[] None,DBID **ppTableID None,IUnknown **ppRowset None)
HRESULT None None.CreateTerminal([in] BSTR pTerminalClass,[in] long lMediaType,[in] TERMINAL_DIRECTION Direction,[out] ITTerminal **ppTerminal)
HRESULT None None.createTextNode(BSTR data None,IXMLDOMText **text None)
HRESULT None None.CreateTexture([in] UINT Width,[in] UINT Height,[in] UINT Levels,[in] DWORD Usage,[in] D3DFORMAT Format,[in] D3DPOOL Pool,[out None None,retval] IDirect3DTexture9 **ppTexture,[in] HANDLE *pSharedHandle)
HRESULT None None.CreateTransformProperties(ITransformProperties** ppPropertyCollection None)
HRESULT None None.CreateTrueCondition([out None None,retval] IUIAutomationCondition **newCondition)
HRESULT None None.CreateTrueFalse([in] BOOL fValue,[in] CONDITION_CREATION_OPTIONS cco,[in] REFIID riid,[out] void **ppv)
HRESULT None None.CreateVertexBuffer([in] UINT Length,[in] DWORD Usage,[in] DWORD FVF,[in] D3DPOOL Pool,[out None None,retval] IDirect3DVertexBuffer9 **ppVertexBuffer,[in] HANDLE *pSharedHandle)
HRESULT None None.CreateVideoDeviceSource(IMFMediaSource **ppSource None)
HRESULT None None.CreateVideoEncoderDMO(IMediaObject** ppDMO None)
HRESULT None None.CreateVolumeTexture([in] UINT Width,[in] UINT Height,[in] UINT Depth,[in] UINT Levels,[in] DWORD Usage,[in] D3DFORMAT Format,[in] D3DPOOL Pool,[out None None,retval] IDirect3DVolumeTexture9 **ppVolumeTexture,[in] HANDLE *pSharedHandle)
HRESULT None None.CreateWiaDeviceManager(IWiaDevMgr **ppWiaDevMgr None)
HRESULT None None.CreateXactMSMQQueue(LPWSTR wszPathName None,PSECURITY_DESCRIPTOR pSecurityDescriptor None,LPWSTR wszOutFormatName None,DWORD *pdwOutFormatNameLength None)
HRESULT None None.CreateXactQueue(WCHAR *wszPathName None)
HRESULT None None.CredentialsChanged([in] UINT_PTR upAdviseContext)
HRESULT None None.CueSegmentAfterBand(IDirectMusicPerformance8* pPerf None,IDirectMusicSegment8* pBandSeg None,IDirectMusicSegment8* pStyleSeg None)
HRESULT None None.CueStream(IXMLDOMElement* pPlaylistEntry None)
HRESULT None None.CueStream(IXMLDOMElement*pPlaylistEntry None None)
HRESULT None None.D2DOutline(ID2D1Geometry *pGeometry None,ID2D1Geometry **ppGeometry None)
HRESULT None None.D3DXCheckVolumeTextureRequirements(_In_ LPDIRECT3DDEVICE9 pDevice,_Inout_ UINT *pWidth,_Inout_ UINT *pHeight,_Inout_ UINT *pDepth,_Inout_ UINT *pNumMipLevels,_In_ DWORD Usage,_Inout_ D3DFORMAT *pFormat,_In_ D3DPOOL Pool)
HRESULT None None.D3DXCreateCubeTextureFromResource(_In_ LPDIRECT3DDEVICE9 pDevice,_In_ HMODULE hSrcModule,_In_ LPCTSTR pSrcResource,_Out_ LPDIRECT3DCUBETEXTURE9 *ppCubeTexture)
HRESULT None None.D3DXCreateCubeTexture(_In_ LPDIRECT3DDEVICE9 pDevice,_In_ UINT Size,_In_ UINT MipLevels,_In_ DWORD Usage,_In_ D3DFORMAT Format,_In_ D3DPOOL Pool,_Out_ LPDIRECT3DCUBETEXTURE9 *ppCubeTexture)
HRESULT None None.D3DXCreateTextureFromFileEx(_In_ LPDIRECT3DDEVICE9 pDevice,_In_ LPCTSTR pSrcFile,_In_ UINT Width,_In_ UINT Height,_In_ UINT MipLevels,_In_ DWORD Usage,_In_ D3DFORMAT Format,_In_ D3DPOOL Pool,_In_ DWORD Filter,_In_ DWORD MipFilter,_In_ D3DCOLOR ColorKey,_Inout_ D3DXIMAGE_INFO *pSrcInfo,_Out_ PALETTEENTRY *pPalette,_Out_ LPDIRECT3DTEXTURE9 *ppTexture)
HRESULT None None.D3DXCreateTextureFromFile(_In_ LPDIRECT3DDEVICE9 pDevice,_In_ LPCTSTR pSrcFile,_Out_ LPDIRECT3DTEXTURE9 *ppTexture)
HRESULT None None.D3DXCreateTextureFromFileInMemoryEx(_In_ LPDIRECT3DDEVICE9 pDevice,_In_ LPCVOID pSrcData,_In_ UINT SrcDataSize,_In_ UINT Width,_In_ UINT Height,_In_ UINT MipLevels,_In_ DWORD Usage,_In_ D3DFORMAT Format,_In_ D3DPOOL Pool,_In_ DWORD Filter,_In_ DWORD MipFilter,_In_ D3DCOLOR ColorKey,_Inout_ D3DXIMAGE_INFO *pSrcInfo,_Out_ PALETTEENTRY *pPalette,_Out_ LPDIRECT3DTEXTURE9 *ppTexture)
HRESULT None None.D3DXCreateTextureFromFileInMemory(_In_ LPDIRECT3DDEVICE9 pDevice,_In_ LPCVOID pSrcData,_In_ UINT SrcDataSize,_Out_ LPDIRECT3DTEXTURE9 *ppTexture)
HRESULT None None.D3DXCreateTextureFromResourceEx(_In_ LPDIRECT3DDEVICE9 pDevice,_In_ HMODULE hSrcModule,_In_ LPCTSTR pSrcResource,_In_ UINT Width,_In_ UINT Height,_In_ UINT MipLevels,_In_ DWORD Usage,_In_ D3DFORMAT Format,_In_ D3DPOOL Pool,_In_ DWORD Filter,_In_ DWORD MipFilter,_In_ D3DCOLOR ColorKey,_Inout_ D3DXIMAGE_INFO *pSrcInfo,_Out_ PALETTEENTRY *pPalette,_Out_ LPDIRECT3DTEXTURE9 *ppTexture)
HRESULT None None.D3DXCreateTextureFromResource(_In_ LPDIRECT3DDEVICE9 pDevice,_In_ HMODULE hSrcModule,_In_ LPCTSTR pSrcResource,_Out_ LPDIRECT3DTEXTURE9 *ppTexture)
HRESULT None None.D3DXCreateVolumeTextureFromFileEx(_In_ LPDIRECT3DDEVICE9 pDevice,_In_ LPCTSTR pSrcFile,_In_ UINT Width,_In_ UINT Height,_In_ UINT Depth,_In_ UINT MipLevels,_In_ DWORD Usage,D3DFORMAT Format None,_In_ D3DPOOL Pool,_In_ DWORD Filter,_In_ DWORD MipFilter,_In_ D3DCOLOR ColorKey,_Inout_ D3DXIMAGE_INFO *pSrcInfo,_Out_ PALETTEENTRY *pPalette,_Out_ LPDIRECT3DVOLUMETEXTURE9 *ppTexture)
HRESULT None None.D3DXCreateVolumeTextureFromFile(_In_ LPDIRECT3DDEVICE9 pDevice,_In_ LPCTSTR pSrcFile,_Out_ LPDIRECT3DVOLUMETEXTURE9 *ppVolumeTexture)
HRESULT None None.D3DXCreateVolumeTextureFromFileInMemoryEx(_In_ LPDIRECT3DDEVICE9 pDevice,_In_ LPCVOID pSrcData,_In_ UINT SrcDataSize,_In_ UINT Width,_In_ UINT Height,_In_ UINT Depth,_In_ UINT MipLevels,_In_ DWORD Usage,_In_ D3DFORMAT Format,_In_ D3DPOOL Pool,_In_ DWORD Filter,_In_ DWORD MipFilter,_In_ D3DCOLOR ColorKey,_Inout_ D3DXIMAGE_INFO *pSrcInfo,_Out_ PALETTEENTRY *pPalette,_Out_ LPDIRECT3DVOLUMETEXTURE9 *ppVolumeTexture)
HRESULT None None.D3DXCreateVolumeTexture(_In_ LPDIRECT3DDEVICE9 pDevice,_In_ UINT Width,_In_ UINT Height,_In_ UINT Depth,_In_ UINT MipLevels,_In_ DWORD Usage,_In_ D3DFORMAT Format,_In_ D3DPOOL Pool,_Out_ LPDIRECT3DVOLUMETEXTURE9 *ppVolumeTexture)
HRESULT None None.D3DXFillTextureTX(_Inout_ LPDIRECT3DTEXTURE9 pTexture,_In_ LPD3DXTEXTURESHADER pTextureShader)
HRESULT None None.D3DXGetImageInfoFromFile(_In_ LPCSTR pSrcFile,_In_ D3DXIMAGE_INFO *pSrcInfo)
HRESULT None None.D3DXGetImageInfoFromFileInMemory(_In_ LPCVOID pSrcData,_In_ UINT SrcDataSize,_In_ D3DXIMAGE_INFO *pSrcInfo)
HRESULT None None.D3DXGetImageInfoFromResource(_In_ HMODULE hSrcModule,_In_ LPCTSTR pSrcFile,_In_ D3DXIMAGE_INFO *pSrcInfo)
HRESULT None None.DAdvise([in] FORMATETC *pformatetc,[in] DWORD advf,[in] IAdviseSink *pAdvSink,[out] DWORD *pdwConnection)
HRESULT None None.DataConvert(DBTYPE wSrcType None,DBTYPE wDstType None,DBLENGTH cbSrcLength None,DBLENGTH * pcbDstLength,void * pSrc,void * pDst,DBLENGTH cbDstMaxLength None,DBSTATUS dbsSrcStatus None,DBSTATUS * pdbsStatus,BYTE bPrecision None,BYTE bScale None,DBDATACONVERT dwFlags None)
HRESULT None None.DecryptionBlt(IDirect3DSurface9 *pSrcSurface None,IDirect3DSurface9 *pDstSurface None,UINT SrcSurfaceSize None,D3DENCRYPTED_BLOCK_INFO *pEncryptedBlockInfo None,VOID *pContentKey None,VOID *pIV None)
HRESULT None None.DefaultPhrase([out None None,retval] LPWSTR *ppszPhrase)
HRESULT None None.DeleteAttribute([in] WORD wStreamNum,[in] WORD wIndex)
HRESULT None None.DeleteCredentialsEx([in] BSTR bstrRealm,[in] BSTR bstrUrl,[in] BOOL fProxy)
HRESULT None None.DeleteCredentials([in] BSTR bstrRealm)
HRESULT None None.deleteData(long offset None,long count None)
HRESULT None None.DeleteFeed(BSTR feedPath None)
HRESULT None None.DeleteFolder(BSTR folderPath None)
HRESULT None None.Delete([in] IOpcSignatureReference *reference)
HRESULT None None.DeletePatch([in] UINT Handle)
HRESULT None None.DeleteRelationship([in] LPCWSTR relationshipIdentifier)
HRESULT None None.DeleteRows(HCHAPTER hChapter None,DBCOUNTITEM cRows None,const HROW rghRows[],DBROWSTATUS rgRowStatus[] None)
HRESULT None None.Delete(VOID None None)
HRESULT None None.DeliverTime([in] QWORD cnsTime)
HRESULT None None.DeselectStream([in] DWORD dwDescriptorIndex)
HRESULT None None.Destroy(LONG cookie None)
HRESULT None None.DetectSubregions(IN IStream *pImageStream,IN IWiaItem2 *pWiaItem2)
HRESULT None None.deviceAvailable([in] BSTR bstrDeviceName,[in] IWMPSubscriptionServiceCallback *pCB)
HRESULT None None.DisableNCRendering(HWND hwnd None)
HRESULT None None.DiscardAlternateVideoFrames([in] int nDiscard)
HRESULT None None.DiscardCache([in] DWORD dwDiscardOptions)
HRESULT None None.DiscardFrom([in] IOleUndoUnit *pUU)
HRESULT None None.DisconnectOutput([in] DWORD dwOutputIndex)
HRESULT None None.Discontinuity(DWORD dwInputStreamIndex None)
HRESULT None None.DisplaySAMIStyleNames(IMFPresentationDescriptor *pPD None)
HRESULT None None.DllSetProperty(DWORD dwPropertyID None,LPVOID pv None)
HRESULT None None.DocumentEventA(_In_ HANDLE hPrinter,_In_ HDC hdc,INT iEsc None,ULONG cbIn None,_In_ PVOID pvIn,ULONG cbOut None,_Out_ PVOID pvOut)
HRESULT None None.DocumentEvent(_In_ HANDLE hPrinter,_In_ HDC hdc,INT iEsc None,ULONG cbIn None,_In_ PVOID pvIn,ULONG cbOut None,_Out_ PVOID pvOut)
HRESULT None None.DocumentEventW(_In_ HANDLE hPrinter,_In_ HDC hdc,INT iEsc None,ULONG cbIn None,_In_ PVOID pvIn,ULONG cbOut None,_Out_ PVOID pvOut)
HRESULT None None.DoGetWindowStyle(long *pStyle None,long WindowLong None)
HRESULT None None.Do([in] IOleUndoManager *pUndoManager)
HRESULT None None.DoSetWindowStyle(long Style None,long WindowLong None)
HRESULT None None.DoShowWindow(LONG ShowCmd None)
HRESULT None None.DoSnapshotSet([out] IVssAsync **ppAsync)
HRESULT None None.DownloadContent(BSTR bstrSrcURL None,BSTR bstrDestFile None,long lContentSizeLow None,long lContentSizeHigh None,long lBitRate None)
HRESULT None None.DownloadEnclosuresAutomatically(BOOL *pbDownloadEnclosuresAutomatically None)
HRESULT None None.Download([in] IWMPContentContainerList *pInfo,[in] DWORD cookie)
HRESULT None None.DownloadInstrument(IDirectMusicInstrument* pInstrument None,IDirectMusicDownloadedInstrument** ppDownloadedInstrument None,DMUS_NOTERANGE* pNoteRanges None,DWORD dwNumNoteRanges; None)
HRESULT None None.DownloadStatus(FEEDS_DOWNLOAD_STATUS *pfds None)
HRESULT None None.DownloadTrackComplete([in] HRESULT hrResult,[in] ULONG contentID,[in] BSTR downloadTrackParam)
HRESULT None None.DownloadTrack([in] DWORD cookie,[in] BSTR bstrTrackURL,[in] DWORD dwServiceTrackID,[in] BSTR bstrDownloadParams,[in] HRESULT hrDownload)
HRESULT None None.DownloadUrl(LPWSTR *ppszUrl None)
HRESULT None None.Download(VOID None None)
HRESULT None None.DragEnter([in] IDataObject *pDataObj,[in] DWORD grfKeyState,[in] POINTL pt,[in None None,out] DWORD *pdwEffect)
HRESULT None None.DragOver([in] DWORD grfKeyState,[in] POINTL pt,[in None None,out] DWORD *pdwEffect)
HRESULT None None.DrawIndexedPrimitive([in] D3DPRIMITIVETYPE Type,[in] INT BaseVertexIndex,[in] UINT MinIndex,[in] UINT NumVertices,[in] UINT StartIndex,[in] UINT PrimitiveCount)
HRESULT None None.DrawPrimitive([in] D3DPRIMITIVETYPE PrimitiveType,[in] UINT StartVertex,[in] UINT PrimitiveCount)
HRESULT None None.DropColumn(DBID *pTableID None,DBID *pColumnID None)
HRESULT None None.DropIndex(DBID *pTableID None,DBID *pIndexID None)
HRESULT None None.Drop([in] IDataObject *pDataObj,[in] DWORD grfKeyState,[in] POINTL pt,[in None None,out] DWORD *pdwEffect)
HRESULT None None.DUnadvise([in] DWORD dwConnection)
HRESULT None None.DuplicateOutput([in] IUnknown *pDevice,[out] IDXGIOutputDuplication **ppOutputDuplication)
HRESULT None None.Duration(REFERENCE_TIME *ptDuration None)
HRESULT None None.DWordAdd(_In_ DWORD dwAugend,_In_ DWORD dwAddend,_Out_ DWORD *pdwResult)
HRESULT None None.DWordMult(_In_ DWORD dwMultiplicand,_In_ DWORD dwMultiplier,_Out_ DWORD *pdwResult)
HRESULT None None.DWordPtrAdd(_In_ DWORD_PTR dwAugend,_In_ DWORD_PTR dwAddend,_Out_ DWORD_PTR *pdwResult)
HRESULT None None.DWordPtrMult(_In_ DWORD_PTR dwMultiplicand,_In_ DWORD_PTR dwMultiplier,_Out_ DWORD_PTR *pdwResult)
HRESULT None None.DWordPtrSub(_In_ DWORD_PTR dwMinuend,_In_ DWORD_PTR dwSubtrahend,_Out_ DWORD_PTR *pdwResult)
HRESULT None None.DWordPtrToDWord(_In_ DWORD_PTR dwOperand,_Out_ DWORD *pdwResult)
HRESULT None None.DWordPtrToInt64(_In_ DWORD_PTR dwOperand,_Out_ INT64 *pi64Result)
HRESULT None None.DWordPtrToInt(_In_ DWORD_PTR dwOperand,_Out_ INT *piResult)
HRESULT None None.DWordPtrToIntPtr(_In_ DWORD_PTR dwOperand,_Out_ INT_PTR *piResult)
HRESULT None None.DWordPtrToLong(_In_ DWORD_PTR dwOperand,_Out_ LONG *plResult)
HRESULT None None.DWordPtrToLongPtr(_In_ DWORD_PTR dwOperand,_Out_ LONG_PTR *plResult)
HRESULT None None.DWordPtrToPtrdiffT(_In_ DWORD_PTR dwOperand,_Out_ ptrdiff_t *pcbResult)
HRESULT None None.DWordPtrToSSIZET(_In_ DWORD_PTR dwOperand,_Out_ SSIZE_T *pcbResult)
HRESULT None None.DWordPtrToUInt(_In_ DWORD_PTR dwOperand,_Out_ UINT *puiResult)
HRESULT None None.DWordPtrToUIntPtr(_In_ DWORD_PTR dwOperand,_Out_ UINT_PTR *puiResult)
HRESULT None None.DWordPtrToULong(_In_ DWORD_PTR dwOperand,_Out_ ULONG *pulResult)
HRESULT None None.DWordSub(_In_ DWORD dwMinuend,_In_ DWORD dwSubtrahend,_Out_ DWORD *pdwResult)
HRESULT None None.DWordToByte(_In_ DWORD dwOperand,_Out_ BYTE *pbResult)
HRESULT None None.DWordToChar(_In_ DWORD dwOperand,_Out_ __wchar_t *pch)
HRESULT None None.DWordToInt(_In_ DWORD dwOperand,_Out_ INT *piResult)
HRESULT None None.DWordToIntPtr(_In_ DWORD dwOperand,_Out_ INT_PTR *piResult)
HRESULT None None.DWordToLong(_In_ DWORD dwOperand,_Out_ LONG *plResult)
HRESULT None None.DWordToLongPtr(_In_ DWORD dwOperand,_Out_ LONG_PTR *plResult)
HRESULT None None.DWordToPtrdiffT(_In_ DWORD dwOperand,_Out_ ptrdiff_t *pcbResult)
HRESULT None None.DWordToShort(_In_ DWORD dwOperand,_Out_ SHORT *psResult)
HRESULT None None.DWordToSSIZET(_In_ DWORD dwOperand,_Out_ SSIZE_T *pcbResult)
HRESULT None None.DWordToUChar(_In_ DWORD dwOperand,_Out_ UCHAR *puchResult)
HRESULT None None.DWordToUInt(_In_ DWORD dwOperand,_Out_ UINT *puiResult)
HRESULT None None.DWordToUIntPtr(_In_ DWORD dwOperand,_Out_ UINT_PTR *puiResult)
HRESULT None None.DWordToUShort(_In_ DWORD dwOperand,_Out_ USHORT *pusResult)
HRESULT None None.DWordToWord(_In_ DWORD dwOperand,_Out_ WORD *pwResult)
HRESULT None None.DXVAHD_SetBackgroundColor(IDXVAHD_VideoProcessor *pVP None,BOOL bYCbCr None,const DXVAHD_COLOR color)
HRESULT None None.DXVAHD_SetDestinationRect(IDXVAHD_VideoProcessor *pVP None,UINT stream None,BOOL bEnable None,const RECT rect)
HRESULT None None.DXVAHD_SetFilterValue(IDXVAHD_VideoProcessor *pVP None,UINT stream None,DXVAHD_FILTER filter None,BOOL bEnable None,INT value None)
HRESULT None None.DXVAHD_SetFrameFormat(IDXVAHD_VideoProcessor *pVP None,UINT stream None,DXVAHD_FRAME_FORMAT format None)
HRESULT None None.DXVAHD_SetPlanarAlpha(IDXVAHD_VideoProcessor *pVP None,UINT stream None,BOOL bEnable None,float fAlpha None)
HRESULT None None.DXVAHD_SetSourceRect(IDXVAHD_VideoProcessor *pVP None,UINT stream None,BOOL bEnable None,const RECT rect)
HRESULT None None.DXVAHD_SetStreamFormat(IDXVAHD_VideoProcessor *pVP None,UINT stream None,D3DFORMAT format None)
HRESULT None None.EnableAsyncReceive(RECEIVE_CONTEXT* prc None)
HRESULT None None.EnableBlurBehind(HWND hwnd None)
HRESULT None None.EnableCache(REFGUID rguidClass None,BOOL fEnable None)
HRESULT None None.Enable([in] BOOL fEnable)
HRESULT None None.EnableModeless([in] BOOL fEnable)
HRESULT None None.EnablePlugin(long* plFlags None,long* plHeartbeatPeriod None)
HRESULT None None.EnableWindowlessSwapchainMode([in] BOOL fEnable)
HRESULT None None.End3(GUID EventId None,HRESULT hrCompletionCode None,OPAQUECOMMAND* pContext None)
HRESULT None None.EndFrame([out] HANDLE *pHandleComplete)
HRESULT None None.EndGetEvent([in] IMFAsyncResult *pResult,[out] IMFMediaEvent **ppEvent)
HRESULT None None.End(HRESULT* phCompletionCode None,IUnknown* pNewObject None)
HRESULT None None.EndPreprocessingPass([in] DWORD dwInputNum,[in] DWORD dwFlags)
HRESULT None None.EndRead([in] IMFAsyncResult *pResult,[out] ULONG *pcbRead)
HRESULT None None.EndRecord(PAVISTREAM pf None)
HRESULT None None.EndRegisterPlatformWorkQueueWithMMCSS([in] IMFAsyncResult *pResult,[out] DWORD *pdwTaskId)
HRESULT None None.EndRegisterTopologyWorkQueuesWithMMCSS([in] IMFAsyncResult *pResult)
HRESULT None None.EndSave([in] IMFAsyncResult *pResult)
HRESULT None None.EndStateBlock([in None None,retval] IDirect3DStateBlock9 **ppSB)
HRESULT None None.EndUnregisterTopologyWorkQueuesWithMMCSS([in] IMFAsyncResult *pResult)
HRESULT None None.EnforceEncryption(LPCWSTR wszPathName _)
HRESULT None None.Enlist(ITransaction * pTransaction,ITransactionResourceAsync * pRes,XACTUOW * pUOW,LONG * pisoLevel,ITransactionEnlistmentAsync ** ppEnlist)
HRESULT None None.EnlistResourceManager(DWORD dwRMCookie None,DWORD * pdwITransaction)
HRESULT None None.Entities([in] REFIID riid,[out None None,retval] void **pEntities)
HRESULT None None.EnumAdapterModes([in] UINT Adapter,[in] D3DFORMAT Format,[in] UINT Mode,[out] D3DDISPLAYMODE *pMode)
HRESULT None None.EnumAdapters1(UINT Adapter None,[out] IDXGIAdapter1 **ppAdapter)
HRESULT None None.EnumAdapters(UINT Adapter None,[out] IDXGIAdapter **ppAdapter)
HRESULT None None.EnumAdvise([out] IEnumSTATDATA **ppenumAdvise)
HRESULT None None.EnumAudioEndpoints([in] EDataFlow dataFlow,[in] DWORD dwStateMask,[out] IMMDeviceCollection **ppDevices)
HRESULT None None.EnumCache([out] IEnumSTATDATA **ppenumSTATDATA)
HRESULT None None.EnumConnectionPoints([out] IEnumConnectionPoints **ppEnum)
HRESULT None None.EnumConnections([out] IEnumConnections **ppEnum)
HRESULT None None.EnumContextProps([out] IEnumContextProps **ppEnumContextProps)
HRESULT None None.EnumDAdvise([out] IEnumSTATDATA **ppenumAdvise)
HRESULT None None.EnumDevices([out] IMDSPEnumDevice **ppEnumDevice)
HRESULT None None.EnumerateCaptureFormats(IMFMediaSource *pSource None)
HRESULT None None.EnumerateDynamicTerminalClasses([out] IEnumTerminalClass **ppTerminalClassEnumerator)
HRESULT None None.EnumerateItems(IWiaItem *pWiaItem None)
HRESULT None None.EnumerateMetadata(IMFMediaSource *pSource None)
HRESULT None None.EnumeratePluggableSuperclasses([out] IEnumPluggableSuperclassInfo **ppSuperclassEnumerator)
HRESULT None None.EnumerateRoots([out None None,retval] IEnumSearchRoots **ppSearchRoots)
HRESULT None None.EnumerateScopeRules([out] IEnumSearchScopeRules **ppSearchScopeRules)
HRESULT None None.EnumerateStaticTerminals([out] IEnumTerminal **ppTerminalEnumerator)
HRESULT None None.EnumerateStreams([out] IEnumStream **ppEnumStream)
HRESULT None None.EnumerateTerminals([out] IEnumTerminal **ppEnumTerminal)
HRESULT None None.EnumerateTypesForStream(IMFSourceReader *pReader None,DWORD dwStreamIndex None)
HRESULT None None.EnumFilters([out] IEnumFilters **ppEnum)
HRESULT None None.EnumFormatEtc([in] DWORD dwDirection,[out] IEnumFORMATETC **ppenumFormatEtc)
HRESULT None None.EnumFunctionProviders([out] IEnumTfFunctionProviders **ppEnum)
HRESULT None None.Enum([in] BOOL fForward,[out] IEnumMoniker **ppenumMoniker)
HRESULT None None.EnumMediaTypes(IEnumMediaTypes **ppEnum None)
HRESULT None None.EnumMediaTypes([out] IEnumMediaTypes **ppEnum)
HRESULT None None.EnumNames([out None None,retval] IEnumNames **ppenum)
HRESULT None None.EnumObjectParam([out] IEnumString **ppenum)
HRESULT None None.EnumObjects([in] DWORD grfFlags,[out] IEnumUnknown **ppenum)
HRESULT None None.EnumOutputs(UINT Output None,[out] IDXGIOutput **ppOutput)
HRESULT None None.EnumPartsIncoming([out] IPartsList **ppParts)
HRESULT None None.EnumPartsOutgoing([out] IPartsList **ppParts)
HRESULT None None.EnumPeers([out] IEnumBitsPeers **ppEnum)
HRESULT None None.EnumPins(IEnumPins **ppEnum None)
HRESULT None None.EnumRecords([out] IEnumBitsPeerCacheRecords **ppEnum)
HRESULT None None.EnumRedoable([out] IEnumOleUndoUnits **ppEnum)
HRESULT None None.EnumRunning([out] IEnumMoniker **ppenumMoniker)
HRESULT None None.EnumSessions(IAudioSessionManager2* pSessionManager None)
HRESULT None None.EnumStorage([out] IMDSPEnumStorage **ppEnumStorage)
HRESULT None None.EnumStorage([out] IWMDMEnumStorage **pEnumStorage)
HRESULT None None.EnumSubCommands([out] IEnumExplorerCommand **ppEnum)
HRESULT None None.EnumUndoable([out] IEnumOleUndoUnits **ppEnum)
HRESULT None None.EnumVerbs([out] IEnumOLEVERB **ppEnumOleVerb)
HRESULT None None.EnumViews([out] IEnumOleDocumentViews **ppEnum,[out] IOleDocumentView **ppView)
HRESULT None None.Error(VOID None None)
HRESULT None None.Execute(IUnknown *pUnkOuter None,REFIID riid None,DBPARAMS *pParams None,DBROWCOUNT *pcRowsAffected None,IUnknown **ppRowset None)
HRESULT None None.Execute(UINT32 commandId None,UI_EXECUTIONVERB verb None,const PROPERTYKEY *key,const PROPVARIANT *currentValue,IUISimplePropertySet *commandExecutionProperties None)
HRESULT None None.ExistsFolder(BSTR folderPath None,VARIANT_BOOL *exists None)
HRESULT None None.ExistWord([in] IMEWRD *pwrd)
HRESULT None None.ExportXML(BSTR bstrXMLFileName None)
HRESULT None None.FeedDeleted(const BSTR path)
HRESULT None None.FeedDeleted(LPCWSTR pszPath None)
HRESULT None None.FeedDownloading(const BSTR path)
HRESULT None None.FeedDownloading(LPCWSTR pszPath None)
HRESULT None None.FeedItemCountChanged(LPCWSTR pszPath None,FEICF feicfFlags None)
HRESULT None None.FeedMovedFrom(const BSTR path,const BSTR oldPath)
HRESULT None None.FeedMoved(LPCWSTR pszPath None,LPCWSTR pszOldPath None)
HRESULT None None.FeedRenamed(LPCWSTR pszPath None,LPCWSTR pszOldPath None)
HRESULT None None.FeedUrlChanged(LPCWSTR pszPath None)
HRESULT None None.FileRangesTransferred(IBackgroundCopyJob *pJob None,IBackgroundCopyFile pFile None,DWORD *rangeCount None,BG_FILE_RANGE ranges None)
HRESULT None None.FilterAppSpecific(LPCWSTR wszQueueFormatName None,DWORD dwAppSpecific None)
HRESULT None None.FilterSentTime(LPCWSTR wszQueueFormatName None,DWORD dwSentTime None)
HRESULT None None.FindCorePropertiesPart(IOpcPackage *package None,IOpcPart **part None)
HRESULT None None.FindInputFormat(IWMWriter* pWriter None,DWORD dwInput None,GUID guidSubType None,IWMInputMediaProps** ppProps None)
HRESULT None None.FindItem([in] LPRESULTFINDINFO pFindinfo,[out] int pnFoundIndex)
HRESULT None None.FindPin([in] LPCWSTR Id,[out] IPin **ppPin)
HRESULT None None.FindPin(LPCWSTR Id None,IPin **ppPin None)
HRESULT None None.FindProxyForURL([in] BSTR bstrProtocol,[in] BSTR bstrHost,[out] BOOL *pfProxyEnabled,[out] BSTR *pbstrProxyServer,[out] DWORD *pdwProxyPort,[in None None,out] DWORD *pdwProxyContext)
HRESULT None None.FindTravelEntry([in] IUnknown *punk,[in] LPCITEMIDLIST pidl,[out] ITravelEntry **ppte)
HRESULT None None.FindUnit([in] IOleUndoUnit *pUU)
HRESULT None None.FinishCommandList(BOOL RestoreDeferredContextState None,[out None None,optional] ID3D11CommandList **ppCommandList)
HRESULT None None.FlushEnvelope([in] DWORD dwParamIndex,[in] REFERENCE_TIME refTimeStart,[in] REFERENCE_TIME refTimeEnd)
HRESULT None None.FolderDeleted(LPCWSTR pszPath None)
HRESULT None None.FolderItemCountChanged(const BSTR path,LONG itemCountType None)
HRESULT None None.FolderMovedFrom(const BSTR path,const BSTR oldPath)
HRESULT None None.FolderRenamed(const BSTR path,const BSTR oldPath)
HRESULT None None.FormatForDisplayAlloc([in] REFPROPERTYKEY key,[in] REFPROPVARIANT propvar,[in] PROPDESC_FORMAT_FLAGS pdff,[out] LPWSTR *ppszDisplay)
HRESULT None None.ForwardScan([in] double dwSpeed)
HRESULT None None.FreePMsg(DMUS_PMSG* pPMSG None)
HRESULT None None.FreePrivateData([in] REFGUID refguid)
HRESULT None None.FreeSurface([in] DWORD_PTR dwID)
HRESULT None None.GatherWriterMetadata([out] IVssAsync **ppAsync)
HRESULT None None.GatherWriterStatus([out] IVssAsync **ppAsync)
HRESULT None None.GenerateForLeaf([in] IConditionFactory *pConditionFactory,[in None None,unique] LPCWSTR pszPropertyName,[in] CONDITION_OPERATION op,[in None None,unique] LPCWSTR pszValueType,[in] LPCWSTR pszValue,[in None None,unique] LPCWSTR pszValue2,[in] IRichChunk *pPropertyNameTerm,[in] IRichChunk *pOperationTerm,[in] IRichChunk *pValueTerm,[in] BOOL automaticWildcard,[out] BOOL *pNoStringQuery,[out None None,retval] ICondition **ppQueryExpression)
HRESULT None None.GeneratePresentationDescriptor([out] IMFPresentationDescriptor **ppIPresentationDescriptor)
HRESULT None None.GenerateRequiredSchemas([in] DWORD dwAttributes,[in] GUID guidOutputSubType,[in] GUID *rgGuidProtectionSchemasSupported,[in] DWORD cProtectionSchemasSupported,[out] IMFCollection **ppRequiredProtectionSchemas)
HRESULT None None.GenerateSQLFromUserQuery([in] LPCWSTR pszQuery,[out None None,retval] LPWSTR *ppszSQL)
HRESULT None None.GenerateUnusedLookupKey([in] XPS_OBJECT_TYPE type,[out None None,retval] LPWSTR *key)
HRESULT None None.Get4BRange([out] LONG *plMin,[out] LONG *plMax,[out] LONG *plStepping)
HRESULT None None.Get9XUserList([out] __NTLMUser9X ul[])
HRESULT None None.GetAcceleratedStreamingDuration([out] QWORD *pcnsAccelDuration)
HRESULT None None.GetAcceleratorTable([out] HWND *phwnd,[out] HACCEL *phAccelr)
HRESULT None None.GetAccessEntryEx([in] WM_AETYPE aeType,[in] DWORD dwEntryNum,[out] BSTR *pbstrAddress,[out] BSTR *pbstrMask)
HRESULT None None.GetAccessEntry([in] WM_AETYPE aeType,[in] DWORD dwEntryNum,[out] WM_ADDRESS_ACCESSENTRY *pAddrAccessEntry)
HRESULT None None.GetAccessibilityLongDescription([out None None,retval] LPWSTR *longDescription)
HRESULT None None.GetAccessibilityShortDescription([out None None,retval] LPWSTR *shortDescription)
HRESULT None None.get_Accountant([out] IVMAccountant **accountant)
HRESULT None None.get_AccountName([out] BSTR *accountName)
HRESULT None None.GetActions([out] IEnhancedStorageSiloActions ***pppIEnhancedStorageSiloActions,[out] ULONG *pcEnhancedStorageSiloActions)
HRESULT None None.get_Actions([out None None,retval] IRemoteDesktopClientActions **actions)
HRESULT None None.GetActivateResult([out] HRESULT *activateResult,[out] IUnknown **activatedInterface)
HRESULT None None.GetActivationPolicy([out] DWORD *pdwPolicy)
HRESULT None None.GetActivityId([out] BSTR *pbstrActivityId)
HRESULT None None.GetActivityReportByDeviceName(LPCWSTR symbolicName None,[out] IMFSensorActivityReport **sensorActivityReport)
HRESULT None None.GetActivityReport([in] ULONG Index,[out] IMFSensorActivityReport **sensorActivityReport)
HRESULT None None.GetACTs([out] IEnhancedStorageACT ***pppIEnhancedStorageACTs,ULONG *pcEnhancedStorageACTs None)
HRESULT None None.GetActualDeinterlaceMode([in] DWORD dwStreamID,[out] GUID *lpDeinterlaceMode)
HRESULT None None.get_AddEnabled([out None None,retval] VARIANT_BOOL *pVarBool)
HRESULT None None.get_Advertisements(long* pVal None)
HRESULT None None.GetAdvisoryPageDimensions([out None None,retval] XPS_SIZE *pageDimensions)
HRESULT None None.GetAffineMatrix([in] ULONG uiIndex,[in None None,out] MIL_MATRIX3X2D *pMatrix)
HRESULT None None.GetAggregationType([out] PROPDESC_AGGREGATION_TYPE *paggtype)
HRESULT None None.GetAllCustData([out] CUSTDATA *pCustData)
HRESULT None None.get_allErrors(IXMLDOMParseErrorCollection **oAllErrs None)
HRESULT None None.GetAllGPRMs([out] GPRMARRAY *pRegisterArray)
HRESULT None None.GetAllocatedBlob([in] REFGUID guidKey,[out] UINT8 **ppBuf,[out] UINT32 *pcbSize)
HRESULT None None.GetAllocatedString([in] REFGUID guidKey,[out] LPWSTR *ppwszValue,[out] UINT32 *pcchLength)
HRESULT None None.GetAllocateForOutput([in] DWORD dwOutputNum,[out] BOOL *pfAllocate)
HRESULT None None.GetAllocateForOutput([in] DWORD dwOutputNum,[out] IWMReaderAllocatorEx **ppAllocator)
HRESULT None None.GetAllocateForPostView([in] WORD wStreamNumber,[out] BOOL *pfAllocate)
HRESULT None None.GetAllocateForStream([in] WORD wStreamNum,[out] BOOL *pfAllocate)
HRESULT None None.GetAllocator(IMemAllocator **ppAllocator None)
HRESULT None None.GetAllocator([out] IMemAllocator **ppAllocator)
HRESULT None None.get_AllowClientsToConnect(VARIANT_BOOL* pVal None)
HRESULT None None.GetAllPackets(DWORD dwFirstPacket None,DWORD dwMaxNumPackets None,WMSPACKETDESC* pPacketDesc None,IWMSPacket** ppPacket None,DWORD* pdwDescNum None,DWORD dwExFlags None)
HRESULT None None.GetAllParamCustData([in] UINT indexFunc,[in] UINT indexParam,[out] CUSTDATA *pCustData)
HRESULT None None.GetAllParameters(LPDS3DLISTENER pListener None)
HRESULT None None.GetAllParameters(LPDSFXWavesReverb pDsFXWavesReverb None)
HRESULT None None.getAllResponseHeaders(BSTR *pbstrHeaders None)
HRESULT None None.GetAllResponseHeaders([out] WCHAR **ppwszHeaders)
HRESULT None None.GetAllResponseHeaders(WCHAR **ppwszHeaders None)
HRESULT None None.GetAllSettings([in] IStream *pStream)
HRESULT None None.GetAllSPRMs([out] SPRMARRAY *pRegisterArray)
HRESULT None None.GetAllVarCustData([in] UINT index,[out] CUSTDATA *pCustData)
HRESULT None None.GetAllVolumes([in] UINT32 dwCount,[out] float *pfVolumes)
HRESULT None None.GetAlphaBitmapParameters([out] MFVideoAlphaBitmapParams *pBmpParms)
HRESULT None None.GetAlphaBitmapParameters([out] PVMRALPHABITMAP pBmpParms)
HRESULT None None.GetAlpha([in] DWORD dwStreamID,[out] float *pAlpha)
HRESULT None None.GetAlternateLocationMappingCount([out] UINT *pcMappings)
HRESULT None None.GetAlternateLocation([out] BSTR *pbstrAlternateLocation)
HRESULT None None.GetAndQueryIUnknownValue(LPCWSTR pstrName None,long lNameKey None,REFIID riid None,IUnknown** pResult None,long lOptions None)
HRESULT None None.GetAnnotationTypes([out None None,retval] SAFEARRAY **pRetVal)
HRESULT None None.get_AntiClogControl([out] long *pEnabled)
HRESULT None None.GetAnyNetworkAccess(BOOL * pbAnyNetworkAccess)
HRESULT None None.GetAnyOperationsAborted([out] BOOL *pfAnyOperationsAborted)
HRESULT None None.GetApplicationInstanceId([out] GUID *pGuid)
HRESULT None None.GetApplications([out None None,retval] IAppxManifestApplicationsEnumerator **applications)
HRESULT None None.GetApproximatePosition(HCHAPTER hChapter None,DBBKMARK cbBookmark None,const BYTE *pBookmark,DBCOUNTITEM *pulPosition None,DBCOUNTITEM *pcRows None)
HRESULT None None.get_Ascender([out None None,retval] VARIANT *Ascender)
HRESULT None None.GetAspectRatioMode([out] AM_ASPECT_RATIO_MODE *pamAspectRatioMode)
HRESULT None None.GetAspectRatioMode([out] DWORD *lpAspectRatioMode)
HRESULT None None.GetAspectRatioMode([out] DWORD *pdwAspectRatioMode)
HRESULT None None.get_async(VARIANT_BOOL *isAsync None)
HRESULT None None.GetAtEndOfPayload([out] BOOL *pfAtEndOfPayload)
HRESULT None None.GetAt([in] DWORD iProp,[out] PROPERTYKEY *pkey)
HRESULT None None.GetAt([in] UINT32 index,[out None None,retval] IXpsOMRemoteDictionaryResource **object)
HRESULT None None.GetAt([in] UINT32 index,[out None None,retval] IXpsOMSignatureBlockResource **signatureBlockResource)
HRESULT None None.GetAt([in] UINT32 index,[out None None,retval] LPWSTR *name)
HRESULT None None.get_AttachedDriveTypes([out] VARIANT *driveTypes)
HRESULT None None.getAttribute(BSTR name None,VARIANT *value None)
HRESULT None None.GetAttributeByIndexEx([in] WORD wStreamNum,[in] WORD wIndex,[out] LPWSTR pwszName,[in None None,out] WORD *pwNameLen,[out] WMT_ATTR_DATATYPE *pType,[out] WORD *pwLangIndex,[out] BYTE *pValue,[in None None,out] DWORD *pdwDataLength)
HRESULT None None.GetAttributeByIndex([in] WORD wIndex,[in] WORD *pwStreamNum,[out] WCHAR *pwszName,[in None None,out] WORD *pcchNameLen,[out] WMT_ATTR_DATATYPE *pType,[out] BYTE *pValue,[in None None,out] WORD *pcbLength)
HRESULT None None.GetAttributeByName([in] BSTR bstrName,[out] BSTR *pbstrValue)
HRESULT None None.GetAttributeByName([in None None,out] WORD *pwStreamNum,[in] LPCWSTR pszName,[out] WMT_ATTR_DATATYPE *pType,[out] BYTE *pValue,[in None None,out] WORD *pcbLength)
HRESULT None None.GetAttributeCountEx([in] WORD wStreamNum,[out] WORD *pcAttributes)
HRESULT None None.GetAttributeCount([in] WORD wStreamNum,[out] WORD *pcAttributes)
HRESULT None None.GetAttributeCount([out] DWORD *pcAttributes)
HRESULT None None.GetAttribute(DWORD ValueName None,DWORD* pdwValue None)
HRESULT None None.GetAttributeIndices([in] WORD wStreamNum,[in] LPCWSTR pwszName,[in] WORD *pwLangIndex,[out] WORD *pwIndices,[in None None,out] WORD *pwCount)
HRESULT None None.getAttributeNode(BSTR name None,IXMLDOMAttribute **attributeNode None)
HRESULT None None.get_attributes(ISchemaItemCollection** attributes None)
HRESULT None None.get_attributes(IXMLDOMNamedNodeMap **attributeMap None)
HRESULT None None.get_Attributes([out] DWORD *pDwAttr)
HRESULT None None.GetAttributes([out] DWORD *pdwAttributes,[out] _WAVEFORMATEX *pFormat)
HRESULT None None.GetAttributes([out] IMFAttributes **pAttributes)
HRESULT None None.GetAudioAttributes([in] ULONG ulStream,[out] DVD_AudioAttributes *pATR)
HRESULT None None.GetAudioEndpointRole([out] UINT32 *pRole)
HRESULT None None.get_AudioFormat([out] MPEG1WAVEFORMAT *lpFmt)
HRESULT None None.GetAudioLanguage([in] ULONG ulStream,[out] LCID *pLanguage)
HRESULT None None.GetAudioObjectType([out] AudioObjectType *audioObjectType)
HRESULT None None.GetAudioSessionControl([in] LPCGUID AudioSessionGuid,[in] DWORD StreamFlags,[out] IAudioSessionControl **SessionControl)
HRESULT None None.GetAuthentication([out None None,retval] X509EnrollmentAuthFlags *pValue)
HRESULT None None.get_AuthenticationType([out None None,retval] AUTH_TYPE *pAuthType)
HRESULT None None.get_Authenticators(IWMSPlugins** pVal None)
HRESULT None None.GetAuthFlags([out None None,retval] X509EnrollmentAuthFlags *pValue)
HRESULT None None.get_AuthoringClientBinary([out None None,retval] BSTR *designModeDllPath)
HRESULT None None.GetAuthorizationState([out] ACT_AUTHORIZATION_STATE *pState)
HRESULT None None.get_AuthorName(BSTR *pbstrAuthorName None)
HRESULT None None.get_AutoShow(long *AutoShow None)
HRESULT None None.get_AutoShow([out] long *AutoShow)
HRESULT None None.GetAvailableDynamicObjectCount([out] UINT32 *value)
HRESULT None None.get_AvailableIPAddresses(IWMSAvailableIPAddresses** ppIPAddrList None)
HRESULT None None.GetAvailable(LONGLONG *pEarliest None,LONGLONG *pLatest None)
HRESULT None None.GetAvailableMonitors([out] VMR9MonitorInfo *pInfo,[in] DWORD dwMaxInfoArraySize,[out] DWORD *pdwNumDevices)
HRESULT None None.GetAvailableOffloadConnectorCount([in] LPWSTR pwstrDeviceId,[in] UINT32 uConnectorId,[out] UINT32 *pAvailableConnectorInstanceCount)
HRESULT None None.GetAvailable([out] LONGLONG *pEarliest,[out] LONGLONG *pLatest)
HRESULT None None.get_AvailableSystemCapacity([out] VARIANT *availableCapacity)
HRESULT None None.get_AvailableTVFormats([out] long *lAnalogVideoStandard)
HRESULT None None.get_AvgFrameRate(int *piAvgFrameRate None)
HRESULT None None.get_AvgTimePerFrame([out] REFTIME *pAvgTimePerFrame)
HRESULT None None.get_AvgTimePerFrame(REFTIME *pAvgTimePerFrame None)
HRESULT None None.GetBackBuffer([in] UINT iSwapChain,[in] UINT BackBuffer,[in] D3DBACKBUFFER_TYPE Type,[out None None,retval] IDirect3DSurface9 **ppBackBuffer)
HRESULT None None.GetBackgroundClr([in] COLORREF *ClrBkg)
HRESULT None None.GetBackgroundClr([in] COLORREF *lpClrBkg)
HRESULT None None.GetBackgroundColor(DWORD *pdwPhysColor None)
HRESULT None None.GetBackgroundColor([out] COLORREF *color)
HRESULT None None.GetBackgroundColor([out] DWORD *pdwPhysColor)
HRESULT None None.GetBackgroundColor([out] DXGI_RGBA *pColor)
HRESULT None None.GetBackground([in] LPOLESTR pszGroup,[out] MMC_TASK_DISPLAY_OBJECT *pTDO)
HRESULT None None.get_BackgroundPalette(long *pBackgroundPalette None)
HRESULT None None.get_BackgroundPalette([out] long *pBackgroundPalette)
HRESULT None None.get_BacklightCompensation([out] long *pValue,[out] long *pFlags)
HRESULT None None.GetBackupMetadata([out] BSTR *pbstrMetadata)
HRESULT None None.GetBackupOptions([out] BSTR *pbstrBackupOptions)
HRESULT None None.GetBackupStamp([out] BSTR *pbstrBackupStamp)
HRESULT None None.GetBalance([out] float *pflBalance)
HRESULT None None.GetBandwidth([out] DWORD *pdwBitrate,[out] DWORD *pmsBufferWindow)
HRESULT None None.GetBandwidthSharingCount([out] DWORD *pcBS)
HRESULT None None.GetBandwidthSharing([in] DWORD dwBSIndex,[out] IWMBandwidthSharing **ppBS)
HRESULT None None.get_baseName(BSTR *nameString None)
HRESULT None None.get_BaseURL(BSTR *pbstrBaseURL None)
HRESULT None None.GetBasicErrorInfo(ULONG ulRecordNum None,ERRORINFO *pErrorInfo None)
HRESULT None None.get_BassRange([out] double *pRange)
HRESULT None None.get_BezierCusps([out None None,retval] VARIANT *Cusps)
HRESULT None None.get_BezierPoints([out None None,retval] VARIANT *Points)
HRESULT None None.GetBidiLevel([out None None,retval] UINT32 *bidiLevel)
HRESULT None None.GetBindings(HACCESSOR hAccessor None,DBACCESSORFLAGS *pdwAccessorFlags None,DBCOUNTITEM *pcBindings None,DBBINDING **prgBindings None)
HRESULT None None.GetBindOptions([in None None,out] BIND_OPTS *pbindopts)
HRESULT None None.get_BitErrorRate([out] long *pBitErrorRate)
HRESULT None None.get_BitRate(long *pBitRate None)
HRESULT None None.GetBitrate([out] DWORD *pdwBitrate)
HRESULT None None.get_BitRate([out] long *pBitRate)
HRESULT None None.get_BizRuleInterfaces([out] IAzBizRuleInterfaces **ppBizRuleInterfaces)
HRESULT None None.get_BizRuleParameters([out] IAzBizRuleParameters **ppBizRuleParam)
HRESULT None None.GetBleedBox([out None None,retval] XPS_RECT *bleedBox)
HRESULT None None.GetBlendingParameter([out] DWORD *pdwBlendingParameter)
HRESULT None None.GetBlob([in] REFGUID guidKey,[out] UINT8 *pBuf,[in] UINT32 cbBufSize,[out] UINT32 *pcbBlobSize)
HRESULT None None.GetBlocks([out None None,retval] IAppxBlockMapBlocksEnumerator **blocks)
HRESULT None None.get_Bold([out] BOOL *pBold)
HRESULT None None.get_BootImageOptions([out] IBootOptions **pVal)
HRESULT None None.get_BootImage([out] IStream **pVal)
HRESULT None None.get_BorderColor(long *Color None)
HRESULT None None.GetBorderColor([out] COLORREF *lpClr)
HRESULT None None.GetBorderColor([out] COLORREF *pClr)
HRESULT None None.get_BorderColor([out] long *pColor)
HRESULT None None._GetBorderDWHelper([in] IUnknown *punkSrc,[in] LPRECT lprectBorder,[in] BOOL bUseHmonitor)
HRESULT None None.GetBorder([out] LPRECT lprectBorder)
HRESULT None None.GetBoundSource([out] IUnknown **ppunk)
HRESULT None None.get_Brightness([out] long *pValue,[out] long *pFlags)
HRESULT None None.get(BSTR namespaceURI None,IXMLDOMNode ** schemaNode)
HRESULT None None.GetBufferByIndex([in] DWORD dwIndex,[out] IMFMediaBuffer **ppBuffer)
HRESULT None None.GetBufferCount([out] DWORD *pdwBufferCount)
HRESULT None None.GetBuffered([out] IMFMediaTimeRange **ppBuffered)
HRESULT None None.GetBuffer(IMediaSample **ppBuffer None,REFERENCE_TIME *pStartTime None,REFERENCE_TIME *pEndTime None,DWORD dwFlags None)
HRESULT None None.GetBuffer([in] DWORD dwTypeIndex,[in] DWORD dwBufferIndex,[in] BOOL bReadOnly,[out] LPVOID *ppBuffer,[out] LONG *lpStride)
HRESULT None None.get_BufferingCount(long *pBufferingCount None)
HRESULT None None.get_BufferingProgress(long *pBufferingProgress None)
HRESULT None None.get_BufferingTime(double *pBufferingTime None)
HRESULT None None.GetBufferingTime([out] QWORD *pcnsBufferingTime)
HRESULT None None.GetBuffer([in None None,out] RPCOLEMESSAGE *pMessage,[in] REFIID riid)
HRESULT None None.GetBuffer(INSSBuffer** ppBuffer None,DWORD dwExFlags None)
HRESULT None None.GetBuffer([in] UINT32 NumFramesRequested,[out] BYTE **ppData)
HRESULT None None.GetBuffer([in] UINT BufferType,[out] void **ppBuffer,[out] UINT *pBufferSize)
HRESULT None None.GetBuffer([out] BYTE **buffer,[out] UINT32 *bufferLength)
HRESULT None None.GetBuffer([out] BYTE **ppdwBuffer)
HRESULT None None.GetBufferProgress(IMFMediaSession *pSession None,DWORD *pProgress None)
HRESULT None None.GetBufferProgress([out] DWORD *pdwPercent,[out] QWORD *pcnsBuffering)
HRESULT None None.GetBufferSize([out] UINT32 *pNumBufferFrames)
HRESULT None None.GetBuffer(UINT Buffer None,[in] REFIID riid,[out] void **ppSurface)
HRESULT None None.GetBufferWindow([out] DWORD *pmsBufferWindow)
HRESULT None None.GetBump([out] long *pSpeed,[out] long *pDuration)
HRESULT None None.get_Busy([out None None,retval] VARIANT_BOOL *Busy)
HRESULT None None.GetButtonAtPosition([in] POINT point,[out] ULONG *puButtonIndex)
HRESULT None None.GetButtonRect([in] ULONG ulButton,[out] RECT *pRect)
HRESULT None None.get_Buttons([out None None,retval] IInkCursorButtons **Buttons)
HRESULT None None.get_BypassList([out None None,retval] LPWSTR *ppszBypassList)
HRESULT None None.get_CachedAcceleratorKey([out None None,retval] BSTR *retVal)
HRESULT None None.get_CachedAccessKey([out None None,retval] BSTR *retVal)
HRESULT None None.get_CachedAriaProperties([out None None,retval] BSTR *retVal)
HRESULT None None.get_CachedAriaRole([out None None,retval] BSTR *retVal)
HRESULT None None.get_CachedAutomationId([out None None,retval] BSTR *retVal)
HRESULT None None.get_CachedBoundingRectangle([out None None,retval] RECT *retVal)
HRESULT None None.get_CachedCanRotate([out None None,retval] BOOL *retVal)
HRESULT None None.GetCachedChildren([out None None,retval] IUIAutomationElementArray **children)
HRESULT None None.get_CachedClassName([out None None,retval] BSTR *retVal)
HRESULT None None.get_CachedControllerFor([out None None,retval] IUIAutomationElementArray **retVal)
HRESULT None None.get_CachedControlType([out None None,retval] CONTROLTYPEID *retVal)
HRESULT None None.get_CachedDefaultAction([out None None,retval] BSTR *pszDefaultAction)
HRESULT None None.get_CachedDescribedBy([out None None,retval] IUIAutomationElementArray **retVal)
HRESULT None None.get_CachedDescription([out None None,retval] BSTR *pszDescription)
HRESULT None None.get_CachedFlowsTo([out None None,retval] IUIAutomationElementArray **retVal)
HRESULT None None.get_CachedFrameworkId([out None None,retval] BSTR *retVal)
HRESULT None None.get_CachedHasKeyboardFocus([out None None,retval] BOOL *retVal)
HRESULT None None.get_CachedHelp([out None None,retval] BSTR *pszHelp)
HRESULT None None.get_CachedHelpText([out None None,retval] BSTR *retVal)
HRESULT None None.GetCacheDir([out None None,retval] BSTR *pValue)
HRESULT None None.get_CachedIsContentElement([out None None,retval] BOOL *retVal)
HRESULT None None.get_CachedIsControlElement([out None None,retval] BOOL *retVal)
HRESULT None None.get_CachedIsDataValidForForm([out None None,retval] BOOL *retVal)
HRESULT None None.get_CachedIsEnabled([out None None,retval] BOOL *retVal)
HRESULT None None.get_CachedIsKeyboardFocusable([out None None,retval] BOOL *retVal)
HRESULT None None.get_CachedIsOffscreen([out None None,retval] BOOL *retVal)
HRESULT None None.get_CachedIsPassword([out None None,retval] BOOL *retVal)
HRESULT None None.get_CachedIsRequiredForForm([out None None,retval] BOOL *retVal)
HRESULT None None.get_CachedIsSelected([out None None,retval] BOOL *retVal)
HRESULT None None.get_CachedItemStatus([out None None,retval] BSTR *retVal)
HRESULT None None.get_CachedItemType([out None None,retval] BSTR *retVal)
HRESULT None None.get_CachedKeyboardShortcut([out None None,retval] BSTR *pszKeyboardShortcut)
HRESULT None None.get_CachedLabeledBy([out None None,retval] IUIAutomationElement **retVal)
HRESULT None None.get_CachedLocalizedControlType([out None None,retval] BSTR *retVal)
HRESULT None None.get_CachedName([out None None,retval] BSTR *retVal)
HRESULT None None.get_CachedNativeWindowHandle([out None None,retval] UIA_HWND *retVal)
HRESULT None None.get_CachedOrientation([out None None,retval] OrientationType *retVal)
HRESULT None None.get_CacheDownloads(long* pVal None)
HRESULT None None.GetCachedParent([out None None,retval] IUIAutomationElement **parent)
HRESULT None None.get_CachedProviderDescription([out None None,retval] BSTR *retVal)
HRESULT None None.get_CachedRole([out None None,retval] DWORD *pdwRole)
HRESULT None None.GetCachedSelection([out None None,retval] IUIAutomationElementArray **pvarSelectedChildren)
HRESULT None None.get_CachedState([out None None,retval] DWORD *pdwState)
HRESULT None None.get_CachedValue([out None None,retval] BSTR *pszValue)
HRESULT None None.GetCachePath([out None None,retval] BSTR *pValue)
HRESULT None None.get_CacheProxyExpiration(long* pVal None)
HRESULT None None.get_CacheProxy(IWMSPlugins** pVal None)
HRESULT None None.GetCallerAccessRights([out] sint32 rights)
HRESULT None None.get_CanMove([out None None,retval] BOOL *pRetVal)
HRESULT None None.GetCanonicalFormatEtc([in] FORMATETC *pformatectIn,[out] FORMATETC *pformatetcOut)
HRESULT None None.GetCanonicalizationMethod([out None None,retval] OPC_CANONICALIZATION_METHOD *canonicalizationMethod)
HRESULT None None.GetCanonicalName([out] GUID *pguidCommandName)
HRESULT None None.get_CanResize([out None None,retval] BOOL *pRetVal)
HRESULT None None.get_CanZoom([out None None,retval] BOOL *pRetVal)
HRESULT None None.GetCapabilities(DWORD *pCapabilities None)
HRESULT None None.GetCapabilities([out] DWORD *pCapabilities)
HRESULT None None.GetCapabilities([out] DWORD *pdwCapabilities)
HRESULT None None.GetCapabilities([out] SYNCMGR_HANDLER_CAPABILITIES *pmCapabilities)
HRESULT None None.GetCapability([in] long Capability,[out] long *pValue,[out] double *pdblValue)
HRESULT None None.GetCaps(DDCAPS *pCaps None)
HRESULT None None.GetCaps(LPDSCAPS pDSCaps None)
HRESULT None None.get_Caption(BSTR *pstrCaption None)
HRESULT None None.GetCaption([out] BSTR *pstrCaption)
HRESULT None None.get_Caption([out] BSTR *strCaption)
HRESULT None None.GetCAs([out None None,retval] ICertificationAuthorities **ppCAs)
HRESULT None None.GetCatalogStatus([out] CatalogStatus *pStatus,[out] CatalogPausedReason *pPausedReason)
HRESULT None None.GetCatalogURL([in] DWORD dwCatalogVersion,[in] DWORD dwCatalogSchemaVersion,[in] LCID catalogLCID,[out] DWORD *pdwNewCatalogVersion,[out] BSTR *pbstrCatalogURL,[out] VARIANT *pExpirationDate)
HRESULT None None.GetCatalogVersion([out] DWORD *pdwVersion,[out] DWORD *pdwSchemaVersion,[out] LCID *plcid)
HRESULT None None.GetCategories([out] APPCATEGORYINFOLIST *pInfoList)
HRESULT None None.GetCategory([out None None,retval] LPWSTR *category)
HRESULT None None.GetCenter([out None None,retval] XPS_POINT *center)
HRESULT None None.GetCertificateEmbeddingOption([out None None,retval] OPC_CERTIFICATE_EMBEDDING_OPTION *embeddingOption)
HRESULT None None.GetCertificateEnumerator([out None None,retval] IOpcCertificateEnumerator **certificateEnumerator)
HRESULT None None.GetCertificateSet([out None None,retval] IOpcCertificateSet **certificateSet)
HRESULT None None.GetCertificateSize([out] UINT *pCertificateSize)
HRESULT None None.GetCertificateSize(UINT *pCertificateSize None)
HRESULT None None.get_ChangePoint([out] LONG *pVal)
HRESULT None None.GetChannelCount([out] UINT32 *pdwCount)
HRESULT None None.GetChannelCount([out] UINT *pnChannelCount)
HRESULT None None.get_Channel([out] long *plChannel,[out] long *plVideoSubChannel,[out] long *plAudioSubChannel)
HRESULT None None.GetChannelsPeakValues([in] UINT32 u32ChannelCount,[out] float *afPeakValues)
HRESULT None None.GetChannelVolume([in] UINT32 dwIndex,[out] float *pfLevel)
HRESULT None None.GetChannelVolumeLevel([in] UINT nChannel,[out] float *pfLevelDB)
HRESULT None None.GetChannelVolumeLevelScalar([in] UINT nChannel,[out] float *pfLevel)
HRESULT None None.GetChannelVolumes([in] UINT32 u32ChannelCount,[out] FLOAT32 *pf32Volumes)
HRESULT None None.GetCharacteristics([out] DWORD *pdwCharacteristics)
HRESULT None None.get_Charset([out] SHORT *pCharset)
HRESULT None None.GetChase([out] long *pEnabled,[out] long *pOffset,[out] HEVENT *phEvent)
HRESULT None None.get_childNodes(IXMLDOMNodeList **childList None)
HRESULT None None.GetClassID(CLSID *pClsID None)
HRESULT None None.GetClassID([out] CLSID *pClassID)
HRESULT None None.GetClassInfo([out] ITypeInfo **ppTI)
HRESULT None None.GetClickablePoint([out] POINT *clickable,[out None None,retval] BOOL *gotClickable)
HRESULT None None.GetClientCertificate([in] LPCWSTR pszURL,[out] BYTE **ppbData,[out] DWORD *pcbData)
HRESULT None None.GetClientData([out] WRDS_CLIENT_DATA *pClientData)
HRESULT None None.GetClientData([out] WTS_CLIENT_DATA *pClientData)
HRESULT None None.GetClientInfo([in] DWORD dwClientNum,[out] WCHAR *pwszNetworkAddress,[in None None,out] DWORD *pcchNetworkAddress,[out] WCHAR *pwszPort,[in None None,out] DWORD *pcchPort,[out] WCHAR *pwszDNSName,[in None None,out] DWORD *pcchDNSName)
HRESULT None None.GetClientSite([out] IOleClientSite **ppClientSite)
HRESULT None None.GetClipFactor([out] long *pClipFactor)
HRESULT None None.GetClipGeometryLocal([out None None,retval] IXpsOMGeometry **clipGeometry)
HRESULT None None.GetClipGeometryLookup([out None None,retval] LPWSTR *key)
HRESULT None None.GetClipGeometry([out None None,retval] IXpsOMGeometry **clipGeometry)
HRESULT None None.GetClipList([out] RECT *pSourceRect,[in] RECT *pDestinationRect,[out] RGNDATA **ppRgnData)
HRESULT None None.GetClipOverflow([out] BOOL *pfClipOverflow)
HRESULT None None.GetClipPlane([in] DWORD Index,[out] float *pPlane)
HRESULT None None.GetClipStatus([out] D3DCLIPSTATUS9 *pClipStatus)
HRESULT None None.GetClockCharacteristics([out] DWORD *pdwCharacteristics)
HRESULT None None.get_CLSID(BSTR* pVal None)
HRESULT None None.GetCLSID([out] CLSID *pClsid)
HRESULT None None.GetCmdFromEvent([in] LONG_PTR lParam1,[out] IDvdCmd **ppCmdObj)
HRESULT None None.get_CodecCount(long *pCodecCount None)
HRESULT None None.GetCodecInfoCount([out] DWORD *pcCodecInfos)
HRESULT None None.GetCodecInfo([in] DWORD wIndex,[in None None,out] WORD *pcchName,[out] WCHAR *pwszName,[in None None,out] WORD *pcchDescription,[out] WCHAR *pwszDescription,[out] WMT_CODEC_INFO_TYPE *pCodecType,[in None None,out] WORD *pcbCodecInfo,[out] BYTE *pbCodecInfo)
HRESULT None None.GetCodecInstalled(long CodecNum None,VARIANT_BOOL *pCodecInstalled None)
HRESULT None None.GetCodecInterface([in] DWORD dwOutputNum,[in] REFIID riid,[out] void **ppvCodecInterface)
HRESULT None None.GetCodecNames(IWMCodecInfo3* pCodecInfo None)
HRESULT None None.GetCodecProp([in] DWORD dwFormat,[in] LPCWSTR pszName,[out] WMT_PROP_DATATYPE *pType,[out] BYTE *pValue,[in None None,out] DWORD *pdwSize)
HRESULT None None.GetCodecURL(long CodecNum None,BSTR *pbstrCodecURL None)
HRESULT None None.GetCodePage([out] WCHAR wszCodePage[],[in] DWORD dwSize,[out] DWORD *pdwLength)
HRESULT None None.get_CollectingInk([out None None,retval] VARIANT_BOOL *Collecting)
HRESULT None None.get_CollectingInk([out None None,retval] VARIANT_BOOL *CollectingInk)
HRESULT None None.get_ColorEnable([out] long *pValue,[out] long *pFlags)
HRESULT None None.GetColorInterpolationMode([out None None,retval] XPS_COLOR_INTERPOLATION *colorInterpolationMode)
HRESULT None None.GetColorKey([out] COLORKEY *pColorKey,[out] DWORD *pColor)
HRESULT None None.GetColorKey([out] COLORREF *lpClr)
HRESULT None None.GetColorKey([out] DDCOLORKEY *pclr)
HRESULT None None.GetColumnHeaders([out None None,retval] SAFEARRAY **pRetVal)
HRESULT None None.GetColumnInfo(DBORDINAL *pcColumns None,DBCOLUMNINFO **prgInfo None,OLECHAR **ppStringsBuffer None)
HRESULT None None.GetColumns(DBORDINAL cColumns None,DBCOLUMNACCESS rgColumns[ ])
HRESULT None None.GetCommandResponse(IWMSContext** ppProps None)
HRESULT None None.GetCommands([in] BSTR location,[in] VARIANT *pLocationContext,[in] BSTR itemLocation,[in] ULONG cItemIDs,[in] ULONG *prgItemIDs,[out] ULONG *pcItemIDs,[out] WMPContextMenuInfo **pprgItems)
HRESULT None None.GetComment([out] LPWSTR *ppszComment)
HRESULT None None.GetCompletionCallback(IWMSPacketListCallback** ppCallback None)
HRESULT None None.GetComponentInfo([out] PVSSCOMPONENTINFO *ppInfo)
HRESULT None None.GetComponentType([out] VSS_COMPONENT_TYPE *pType)
HRESULT None None.GetCompressedSize([out None None,retval] UINT32 *size)
HRESULT None None.GetCompressionOptions([out None None,retval] OPC_COMPRESSION_OPTIONS *compressionOptions)
HRESULT None None.GetConditionType([out] PROPDESC_CONDITION_TYPE *pcontype,[out] CONDITION_OPERATION *popDefault)
HRESULT None None.get_ConfigID([out] BSTR *virtualMachineConfigID)
HRESULT None None.GetConfigurationFlags([out] DWORD *pFlags)
HRESULT None None.get_ConnectedPlayers(long* pVal None)
HRESULT None None.GetConnectedTo([out] IConnector **ppConTo)
HRESULT None None.get_ConnectImmediately([out] VARIANT_BOOL *connectImmediately)
HRESULT None None.GetConnectInfo([in None None,out] DWORD *pdwNumConnectInfo,[in None None,out] DDVIDEOPORTCONNECT *pddVPConnectInfo)
HRESULT None None.get_ConnectInput([out] long *plIndex)
HRESULT None None.GetConnectionBandwidth([out] DWORD *pdwConnectionBandwidth)
HRESULT None None.get_ConnectionInfo([in] DWORD dwIndex,[out] KSTOPOLOGY_CONNECTION *pConnectionInfo)
HRESULT None None.GetConnectionInterface([out] IID *pIID)
HRESULT None None.GetConnectionName([out] WCHAR *pwszInputName,[in None None,out] WORD *pcchInputName)
HRESULT None None.GetConnectionName([out] WCHAR *pwszName,[in None None,out] WORD *pcchName)
HRESULT None None.GetConnectionPointContainer([out] IConnectionPointContainer **ppCPC)
HRESULT None None.get_ConnectionQueue(long* pVal None)
HRESULT None None.get_ConnectionRate(long* pVal None)
HRESULT None None.get_ConnectionString([out None None,retval] LPWSTR *pwszConnectionString)
HRESULT None None.GetConnector([in] UINT nIndex,[out] IConnector **ppConnector)
HRESULT None None.get_ConnectTimeout([out None None,retval] DWORD *pdwConnectTimeout)
HRESULT None None.get_ConstructString([out] BSTR *pVal)
HRESULT None None.GetContainerCount([out] ULONG *pcContainer)
HRESULT None None.GetContainer([in] ULONG idxContainer,[out] IWMPContentContainer **ppContent)
HRESULT None None.GetContainerItem(BSTR bstrItemName None,IUIAutomationElement *pContainerElement None,IUIAutomationElement **ppItemElement None)
HRESULT None None.GetContainingOutput([out] IDXGIOutput **ppOutput)
HRESULT None None.GetContainingTypeLib([out] ITypeLib **ppTLib,[out] UINT *pIndex)
HRESULT None None.GetContentBox([out None None,retval] XPS_RECT *contentBox)
HRESULT None None.GetContentIDsInLibrary([out] ULONG *pcContentIDs,[out] ULONG **pprgIDs)
HRESULT None None.GetContentInformation(IWMSContext** ppContentInfo None)
HRESULT None None.GetContentPartnerInfo([in] BSTR bstrInfoName,[out] VARIANT *pData)
HRESULT None None.GetContentRect([out] RECT *contentSize)
HRESULT None None.GetContentSize(long* plContentSizeLow None,long* plContentSizeHigh None)
HRESULT None None.GetContentStatus([out None None,retval] LPWSTR *contentStatus)
HRESULT None None.GetContentStream([out None None,retval] IStream **stream)
HRESULT None None.GetContentType([out None None,retval] LPCWSTR *contentType)
HRESULT None None.GetContentType([out None None,retval] LPWSTR *contentType)
HRESULT None None.get_ContentViewCondition([out None None,retval] IUIAutomationCondition **condition)
HRESULT None None.get_ContentViewWalker([out None None,retval] IUIAutomationTreeWalker **walker)
HRESULT None None.GetContextId([out] BSTR *pbstrCtxId)
HRESULT None None.GetContextId([out] GUID *pGuid)
HRESULT None None.get_context(IXMLDOMNode ** ppNode)
HRESULT None None.GetContext([out] LPWSTR *ppszContext)
HRESULT None None.GetContextType(WMS_CONTEXT_TYPE* pType None)
HRESULT None None.get_Contrast([out] long *pValue,[out] long *pFlags)
HRESULT None None.GetControlInfo([in None None,out] CONTROLINFO *pCI)
HRESULT None None.GetControlInterfaceCount([out] UINT *pCount)
HRESULT None None.GetControlInterface([in] UINT nIndex,[out] IControlInterface **ppFunction)
HRESULT None None.get_ControlViewCondition([out None None,retval] IUIAutomationCondition **condition)
HRESULT None None.get_ControlViewWalker([out None None,retval] IUIAutomationTreeWalker **walker)
HRESULT None None.GetConversion([in] BSTR string,[in] LONG start,[in] LONG length,[out None None,retval] BSTR result)
HRESULT None None.GetConversionModeCaps([out] DWORD *pdwCaps)
HRESULT None None.GetConversionSize(DBTYPE wSrcType None,DBTYPE wDstType None,DBLENGTH * pcbSrcLength,DBLENGTH * pcbDstLength,void * pSrc)
HRESULT None None.GetCopyOutputLevels([out] DRM_COPY_OPL *pCopyOPL,[in None None,out] DWORD *pcbLength,[out] DWORD *pdwMinAppComplianceLevel)
HRESULT None None.GetCoreProperties([out None None,retval] IXpsOMCoreProperties **coreProperties)
HRESULT None None.GetCoreWindow([in] REFIID refiid,[out] void **ppUnk)
HRESULT None None.GetCorrelatedTime([in] DWORD dwReserved,[out] LONGLONG *pllClockTime,[out] MFTIME *phnsSystemTime)
HRESULT None None.get_CountersStartTime(DATE* pVal None)
HRESULT None None.get_Count(long* pVal None)
HRESULT None None.GetCount([out] int *SessionCount)
HRESULT None None.GetCount([out None None,retval] UINT32 *count)
HRESULT None None.GetCount([out] UINT32 count)
HRESULT None None.GetCount([out] UINT32 *pcItems)
HRESULT None None.GetCount([out] UINT *pcDevices)
HRESULT None None.GetCount([out] UINT *pCount)
HRESULT None None.GetCount([out] ULONG *celt)
HRESULT None None.GetCount([out] ULONG *pcCount)
HRESULT None None.get_CPUUtilizationDuringConnection(long* pVal None)
HRESULT None None.get_CPUUtilization(long* pVal None)
HRESULT None None.GetCrawlScopeManager([out None None,retval] ISearchCrawlScopeManager **ppCrawlScopeManager)
HRESULT None None.GetCreated([out None None,retval] SYSTEMTIME *created)
HRESULT None None.GetCreationParameters([out] D3DDEVICE_CREATION_PARAMETERS *pParameters)
HRESULT None None.GetCreationProperties(ULONG cPropertyIDSets None,const DBPROPIDSET rgPropertyIDSets[],ULONG *pcPropertyInfoSets None,DBPROPINFOSET **prgPropertyInfoSets None,OLECHAR **ppDescBuffer None)
HRESULT None None.get_CreationTime([out] DATE *pVal)
HRESULT None None.get_CreationTimeout([out] DWORD *pdwCreationTimeout)
HRESULT None None.GetCreator([out None None,retval] LPWSTR *creator)
HRESULT None None.GetCredentialCount([out] DWORD *pdwCount,[out] DWORD *pdwDefault,[out] BOOL *pbAutoLogonWithDefault)
HRESULT None None.GetCredentialFlags([out] DWORD *lpdwFlags)
HRESULT None None.GetCredential([in] LPCWSTR pszUrl,[in] LPCWSTR pszRealm,[in] DWORD dwAuthenticationFlags,[out] IMFNetCredential **ppCred,[out] DWORD *pdwFlags)
HRESULT None None.GetCredentialsEx2([in] BSTR bstrRealm,[in] BSTR bstrUrl,[in] BOOL fProxy,[in] BOOL fClearTextAuthentication,[out] NETSOURCE_URLCREDPOLICY_SETTINGS *pdwUrlPolicy,[out] BSTR *pbstrName,[out] BSTR *pbstrPassword,[out] BOOL *pfConfirmedGood)
HRESULT None None.GetCredentialsEx([in] BSTR bstrRealm,[in] BSTR bstrUrl,[in] BOOL fProxy,[out] NETSOURCE_URLCREDPOLICY_SETTINGS *pdwUrlPolicy,[out] BSTR *pbstrName,[out] BSTR *pbstrPassword,[out] BOOL *pfConfirmedGood)
HRESULT None None.GetCredentials([in] BSTR bstrRealm,[out] BSTR *pbstrName,[out] BSTR *pbstrPassword,[out] BOOL *pfConfirmedGood)
HRESULT None None.GetCredentials(IWMSContext* pUserContext None,BSTR bstrRealm None,BSTR bstrURL None,BSTR* pbstrName None,BSTR* pbstrPassword None)
HRESULT None None.get_CrossbarPinInfo([in] BOOL IsInputPin,[in] long PinIndex,[out] long *PinIndexRelated,[out] long *PhysicalType)
HRESULT None None.get_CurDC([out] HDC *phDC)
HRESULT None None.GetCurFile([out] LPOLESTR *ppszFileName)
HRESULT None None.get_CurrentAcceleratorKey([out None None,retval] BSTR *retVal)
HRESULT None None.get_CurrentAccessKey([out None None,retval] BSTR *retVal)
HRESULT None None.GetCurrentAngle([out] ULONG *pulAnglesAvailable,[out] ULONG *pulCurrentAngle)
HRESULT None None.GetCurrentApartmentType([out] APTTYPE *pAptType)
HRESULT None None.get_CurrentAriaProperties([out None None,retval] BSTR *retVal)
HRESULT None None.get_CurrentAriaRole([out None None,retval] BSTR *retVal)
HRESULT None None.GetCurrentAudio([out] ULONG *pulStreamsAvailable,[out] ULONG *pulCurrentStream)
HRESULT None None.get_CurrentAutomationId([out None None,retval] BSTR *retVal)
HRESULT None None.get_CurrentBoundingRectangle([out None None,retval] RECT *retVal)
HRESULT None None.GetCurrentButton([out] ULONG *pulButtonsAvailable,[out] ULONG *pulCurrentButton)
HRESULT None None.get_CurrentCanMove([out None None,retval] BOOL *retVal)
HRESULT None None.get_CurrentCanRotate([out None None,retval] BOOL *retVal)
HRESULT None None.get_CurrentClassName([out None None,retval] BSTR *retVal)
HRESULT None None.GetCurrentCommand(DBID **ppCommandID None)
HRESULT None None.get_CurrentControllerFor([out None None,retval] IUIAutomationElementArray *retVal)
HRESULT None None.get_CurrentControlType([out None None,retval] CONTROLTYPEID *retVal)
HRESULT None None.get_CurrentCounters(IWMSServerCurrentCounters** pVal None)
HRESULT None None.get_CurrentDefaultAction([out None None,retval] BSTR *pszDefaultAction)
HRESULT None None.get_CurrentDescribedBy([out None None,retval] IUIAutomationElementArray **retVal)
HRESULT None None.get_CurrentDescription([out None None,retval] BSTR *pszDescription)
HRESULT None None.get_CurrentDockPosition([out None None,retval] DockPosition *retVal)
HRESULT None None.GetCurrentDomain([out] DVD_DOMAIN *pDomain)
HRESULT None None.get_CurrentFlowsTo([out None None,retval] IUIAutomationElementArray **retVal)
HRESULT None None.GetCurrentFolderFlags([out] DWORD *pdwFlags)
HRESULT None None.get_CurrentFrameworkId([out None None,retval] BSTR *retVal)
HRESULT None None.get_CurrentHasKeyboardFocus([out None None,retval] BOOL *retVal)
HRESULT None None.get_CurrentHelp([out None None,retval] BSTR *pszHelp)
HRESULT None None.get_CurrentHelpText([out None None,retval] BSTR *retVal)
HRESULT None None.GetCurrentImage([in None None,out] long *pBufferSize,[out] long *pDIBImage)
HRESULT None None.GetCurrentImage(long *pBufferSize None,long *pVideoImage None)
HRESULT None None.GetCurrentImage([out] BYTE **lpDib)
HRESULT None None.get_CurrentIsContentElement([out None None,retval] BOOL *retVal)
HRESULT None None.get_CurrentIsControlElement([out None None,retval] BOOL *retVal)
HRESULT None None.get_CurrentIsDataValidForForm([out None None,retval] BOOL *retVal)
HRESULT None None.get_CurrentIsEnabled([out None None,retval] BOOL *retVal)
HRESULT None None.get_CurrentIsKeyboardFocusable([out None None,retval] BOOL *retVal)
HRESULT None None.get_CurrentIsOffscreen([out None None,retval] BOOL *retVal)
HRESULT None None.get_CurrentIsPassword([out None None,retval] BOOL *retVal)
HRESULT None None.get_CurrentIsRequiredForForm([out None None,retval] BOOL *retVal)
HRESULT None None.get_CurrentIsSelected([out None None,retval] BOOL *retVal)
HRESULT None None.get_CurrentItemStatus([out None None,retval] BSTR *retVal)
HRESULT None None.get_CurrentItemType([out None None,retval] BSTR *retVal)
HRESULT None None.get_CurrentKeyboardShortcut([out None None,retval] BSTR *pszKeyboardShortcut)
HRESULT None None.get_CurrentLabeledBy([out None None,retval] IUIAutomationElement **retVal)
HRESULT None None.get_CurrentLocalizedControlType([out None None,retval] BSTR *retVal)
HRESULT None None.GetCurrentLocation([out] DVD_PLAYBACK_LOCATION2 *pLocation)
HRESULT None None.GetCurrentMediaType([in] DWORD dwStreamIndex,[out] IMFMediaType **ppMediaType)
HRESULT None None.GetCurrentMediaType([out] IMFVideoMediaType **ppMediaType)
HRESULT None None.GetCurrentMode([out] long *pMode)
HRESULT None None.get_CurrentName([out None None,retval] BSTR *retVal)
HRESULT None None.get_CurrentNativeWindowHandle([out None None,retval] UIA_HWND *retVal)
HRESULT None None.get_CurrentOrientation([out None None,retval] OrientationType *retVal)
HRESULT None None.GetCurrent([out None None,retval] IAppxManifestApplication **application)
HRESULT None None.GetCurrent([out None None,retval] IOpcPart **part)
HRESULT None None.GetCurrent([out None None,retval] IOpcSignatureCustomObject **customObject)
HRESULT None None.GetCurrent([out None None,retval] IOpcSignatureReference **reference)
HRESULT None None.GetCurrent([out None None,retval] IOpcSignatureRelationshipReference **relationshipReference)
HRESULT None None.GetCurrentPadding([out] UINT32 *pNumPaddingFrames)
HRESULT None None.GetCurrentParameterSet([out] IPropertyBag2 **ppCurrentParameterSet)
HRESULT None None.get_CurrentPartitionID([out None None,retval] BSTR *pbstrPartitionID)
HRESULT None None.get_CurrentPartitionName([out None None,retval] BSTR *pbstrPartitionName)
HRESULT None None.GetCurrentPosition(LONGLONG *pCurrent None)
HRESULT None None.GetCurrentPosition([out] LONGLONG *pCurrent)
HRESULT None None.get_CurrentPosition([out] REFTIME *pllTime)
HRESULT None None.GetCurrentProfileId([out] DWORD *pdwProfileId)
HRESULT None None.get_CurrentProviderDescription([out None None,retval] BSTR *retVal)
HRESULT None None.get_CurrentRole([out None None,retval] DWORD *pdwRole)
HRESULT None None.GetCurrentSampleRequirements(ULONG ulOutputStreamIndex None,DWORD *pdwRequestedFeatures None)
HRESULT None None.get_CurrentSelectionContainer([out None None,retval] IUIAutomationElement **retVal)
HRESULT None None.GetCurrentSelection([out] IShellItem **ppsi)
HRESULT None None.GetCurrentSelection([out None None,retval] IUIAutomationElementArray **pvarSelectedChildren)
HRESULT None None.GetCurrentService(AM_LINE21_CCSERVICE *lpService None)
HRESULT None None.GetCurrentSource([out] BSTR *ppUrl)
HRESULT None None.GetCurrentSubpicture([out] ULONG *pulStreamsAvailable,[out] ULONG *pulCurrentStream,[out] BOOL *pbIsDisabled)
HRESULT None None.GetCurrentTexturePalette([out None None,retval] UINT *pPaletteNumber)
HRESULT None None.GetCurrentTimeFormat([out] GUID *pguidTimeFormat,[out] MP_TIMEDATA *pTimeData)
HRESULT None None.GetCurrentUOPS([out] ULONG *pulUOPs)
HRESULT None None.get_CurrentValue([out None None,retval] BSTR *pszValue)
HRESULT None None.GetCurrentVideoAttributes([out] DVD_VideoAttributes *pATR)
HRESULT None None.get_Cursors([out None None,retval] IInkCursors **Cursors)
HRESULT None None.GetCustData([in] REFGUID guid,[out] VARIANT *pVarVal)
HRESULT None None.GetCustomErrorObject(ULONG ulRecordNum None,REFIID riid None,IUnknown **ppObject None)
HRESULT None None.GetCustomHeaders([out] LPWSTR *pRequestHeaders)
HRESULT None None.get_CustomInterface(IDispatch** ppVal None)
HRESULT None None.GetCustomObjectEnumerator([out None None,retval] IOpcSignatureCustomObjectEnumerator **customObjectEnumerator)
HRESULT None None.GetCustomObjectSet([out None None,retval] IOpcSignatureCustomObjectSet **customObjectSet)
HRESULT None None.GetCustomReferenceEnumerator([out None None,retval] IOpcSignatureReferenceEnumerator **customReferenceEnumerator)
HRESULT None None.GetCustomReferenceSet([out None None,retval] IOpcSignatureReferenceSet **customReferenceSet)
HRESULT None None.GetCustomReferences([out None None,retval] IOpcSignatureReferenceSet **customReferenceSet)
HRESULT None None.get_CustomStrokes([out None None,retval] InkCustomStrokes **ppunkInkCustomStrokes)
HRESULT None None.get_data(BSTR *strData None)
HRESULT None None.get_data(BSTR *value None)
HRESULT None None.GetDataFlow([out] EDataFlow *pDataFlow)
HRESULT None None.GetDataHere([in] FORMATETC *pformatetc,[in None None,out] STGMEDIUM *pmedium)
HRESULT None None.GetData(HROW hRow None,HACCESSOR hAccessor None,void *pData None)
HRESULT None None.GetData([in] FORMATETC *pformatetcIn,[out] STGMEDIUM *pmedium)
HRESULT None None.GetData([in] ID3D11Asynchronous *pAsync,[out None None,optional] void *pData,[in] UINT DataSize,[in] UINT GetDataFlags)
HRESULT None None.GetData([out] IMFTimedTextBinary **ppData)
HRESULT None None.GetData([out] LPCWSTR *ppszKey,[out] LPWSTR *ppszValue)
HRESULT None None.GetData([out None None,unique] ULONG *pFirstPos,[out None None,unique] ULONG *pLength,[out None None,unique] LPWSTR *ppsz,[out None None,unique] PROPVARIANT *pValue)
HRESULT None None.get_DataProtocol(BSTR* pbstrDataProtocol None)
HRESULT None None.get_DataProtocol(BSTR* pbstrDataProtocols None)
HRESULT None None.get_DataSources(IWMSPlugins** pVal None)
HRESULT None None.get_DataTimeout([out None None,retval] DWORD *pdwDataTimeout)
HRESULT None None.get_dataType(VARIANT *dataTypeName None)
HRESULT None None.GetDataUnitExtensionCount([out] WORD *pcDataUnitExtensions)
HRESULT None None.GetDataUnitExtension([in] WORD wDataUnitExtensionNumber,[out] GUID *pguidExtensionSystemID,[out] WORD *pcbExtensionDataSize,[out] BYTE *pbExtensionSystemInfo,[in None None,out] DWORD *pcbExtensionSystemInfo)
HRESULT None None.GetDate([out] PWMDMDATETIME pDateTimeUTC)
HRESULT None None.GetDBSession(REFIID riid None,IUnknown **ppSession None)
HRESULT None None.GetDC(BOOL Discard None,[out] HDC *phdc)
HRESULT None None.GetDC([in] LPCRECT pRect,[in] DWORD grfFlags,[out] HDC *phDC)
HRESULT None None.GetDeactivateOnReturn([out] VARIANT_BOOL *pbDeactivate)
HRESULT None None.get_Deadline([out None None,retval] FILETIME *pDeadline)
HRESULT None None.getDeclaration(IXMLDOMNode* node None,ISchemaItem** item None)
HRESULT None None.GetDecoderCaps([out] DVD_DECODER_CAPS *pCaps)
HRESULT None None.GetDecoderDeviceGuids([out] UINT *Count,[out] GUID **pGuids)
HRESULT None None.GetDecoderLevel(AM_LINE21_CCLEVEL *lpLevel None)
HRESULT None None.GetDecoderLevel([out] AM_WST_LEVEL *lpLevel)
HRESULT None None.GetDefaultAudioEndpoint([in] EDataFlow dataFlow,[in] ERole role,[out] IMMDevice **ppDevice)
HRESULT None None.GetDefaultAudioLanguage([out] LCID *pLanguage,DVD_AUDIO_LANG_EXT *pAudioExtension None)
HRESULT None None.GetDefaultColorKey([out] COLORKEY *pColorKey)
HRESULT None None.GetDefaultColumnWidth([out] DWORD *pcxChars)
HRESULT None None.GetDefaultDigestMethod([out None None,retval] LPCWSTR *digestMethod)
HRESULT None None.GetDefaultMenuLanguage([out] LCID *pLanguage)
HRESULT None None.GetDefaultMonitor([out] UINT *puDev)
HRESULT None None.get_DefaultPacketSize(VARIANT_BOOL* pfDefault None)
HRESULT None None.get_DefaultPath(BSTR* pVal None)
HRESULT None None.get_DefaultPluginLoadType(WMS_PLUGIN_LOAD_TYPE* pVal None)
HRESULT None None.GetDefaultStaticTerminal([in] long lMediaType,[in] TERMINAL_DIRECTION Direction,[out] ITTerminal **ppTerminal)
HRESULT None None.GetDefaultSubpictureLanguage([out] LCID *pLanguage,[out] DVD_SUBPICTURE_LANG_EXT *pSubpictureExtension)
HRESULT None None.get_defaultValue(BSTR* defaultValue None)
HRESULT None None.get_DefaultVNConfigurationPath([out] BSTR *configurationPath)
HRESULT None None.get_definition(IXMLDOMNode **definitionNode None)
HRESULT None None.GetDeinterlaceMode([in] DWORD dwStreamID,[out] GUID *lpDeinterlaceMode)
HRESULT None None.GetDeleteDelay([out] long *pmsecDeleteDelay)
HRESULT None None.get_Deleted([out None None,retval] VARIANT_BOOL *Deleted)
HRESULT None None.GetDepthStencilState(UINT Index None,ID3D11DepthStencilState **ppDepthStencilState None)
HRESULT None None.GetDepthStencilSurface([out None None,retval] IDirect3DSurface9 **ppZStencilSurface)
HRESULT None None.GetDesc1([out] DXGI_SWAP_CHAIN_DESC1 *pDesc)
HRESULT None None.GetDesc(D3DX11_PASS_DESC *pDesc None)
HRESULT None None.get_Descender([out None None,retval] VARIANT *Descender)
HRESULT None None.GetDesc([out] D3DVERTEXBUFFER_DESC *pDesc)
HRESULT None None.GetDesc([out] D3DVOLUME_DESC *pDesc)
HRESULT None None.GetDesc([out] DXGI_ADAPTER_DESC *pDesc)
HRESULT None None.GetDesc([out] DXGI_OUTPUT_DESC *pDesc)
HRESULT None None.GetDesc([out] DXGI_SWAP_CHAIN_DESC *pDesc)
HRESULT None None.get_Description(BSTR *pbstrDescription None)
HRESULT None None.GetDescriptionCount(DWORD* pdwNumDescriptions None)
HRESULT None None.GetDescriptionInLanguage(LPCWSTR pstrLanguage None,IWMSContext** ppDescription None)
HRESULT None None.GetDescription([out] BSTR *pstrDescription)
HRESULT None None.GetDescription([out] LPWSTR *ppszDescription)
HRESULT None None.GetDescription([out None None,retval] LPWSTR *description)
HRESULT None None.GetDescription([out] WCHAR *pwszDescription,[in None None,out] DWORD *pcchDescription)
HRESULT None None.GetDescriptiveText([in] LPOLESTR pszGroup,[out] LPOLESTR *pszDescriptiveText)
HRESULT None None.get_DestinationHeight(long *pDestinationHeight None)
HRESULT None None.get_DestinationHeight([out] long *pDestinationHeight)
HRESULT None None.get_DestinationLeft([out] long *pDestinationLeft)
HRESULT None None.get_DestinationMulticastIPAddress(BSTR* pbstrMulticastIpAddress None)
HRESULT None None.GetDestinationPosition(long *pLeft None,long *pTop None,long *pWidth None,long *pHeight None)
HRESULT None None.GetDestinationPosition([out] long *pLeft,[out] long *pTop,[out] long *pWidth,[out] long *pHeight)
HRESULT None None.get_DestinationTop(long *pDestinationTop None)
HRESULT None None.get_DestinationTop([out] long *pDestinationTop)
HRESULT None None.get_DestinationWidth(long *pDestinationWidth None)
HRESULT None None.get_DestinationWidth([out] long *pDestinationWidth)
HRESULT None None.GetDeviceCaps([out] D3DCAPS9 *pCaps)
HRESULT None None.GetDeviceCertificate([out] INSSBuffer **ppCertificate)
HRESULT None None.GetDeviceFontName([out None None,retval] LPWSTR *deviceFontName)
HRESULT None None.GetDeviceIcon([out] ULONG *hIcon)
HRESULT None None.GetDeviceIdConnectedTo([out] LPWSTR *ppwstrDeviceId)
HRESULT None None.get_Device(IDirect3DDevice9** ppDevice None)
HRESULT None None.GetDeviceID(LPCGUID pGuidSrc None,LPGUID pGuidDest None)
HRESULT None None.GetDeviceID([out] IID *pDeviceID)
HRESULT None None.GetDeviceId([out] LPWSTR *ppwstrDeviceId)
HRESULT None None.GetDevice([in] LPCWSTR pwstrId,[out] IMMDevice **ppDevice)
HRESULT None None.GetDevice([out] DEVICE_INFO *pDevice)
HRESULT None None.GetDevice([out None None,retval] IDirect3DDevice9 **ppDevice)
HRESULT None None.GetDevicePath([out] LPWSTR *ppwszSiloDevicePath)
HRESULT None None.GetDevicePeriod([out] REFERENCE_TIME *phnsDefaultDevicePeriod,[out] REFERENCE_TIME *phnsMinimumDevicePeriod)
HRESULT None None.GetDevicePosition([out] UINT64 *DevicePosition,[out None None,unique] UINT64 *QPCPosition)
HRESULT None None.GetDevicePreferredFormat([out] PKSDATAFORMAT *ppKsFormat)
HRESULT None None.GetDeviceSerialNumber([out] DRM_VAL16 *pSerialNumber)
HRESULT None None.GetDeviceStreamCategory([in] DWORD dwSourceStreamIndex,[out] MF_CAPTURE_ENGINE_STREAM_CATEGORY *pStreamCategory)
HRESULT None None.GetDevId([out] DWORD *pdwDevId)
HRESULT None None.GetDevMemoryObject([out] IUnknown **ppUnkInner,[in] IUnknown *pUnkOuter)
HRESULT None None.get_DiacriticSensitivity([out None None,retval] BOOL *pfDiacriticSensitive)
HRESULT None None.GetDiacriticSensitivity([out None None,retval] BOOL *pfDiacriticSensitive)
HRESULT None None.get_DiagnosticEvents(IWMSDiagnosticEvents** ppDiagEvents None)
HRESULT None None.get_DiagnosticEvents(long* pVal None)
HRESULT None None.GetDictionaryLocal([out None None,retval] IXpsOMDictionary **resourceDictionary)
HRESULT None None.GetDictionary([out None None,retval] IXpsOMDictionary **resourceDictionary)
HRESULT None None.GetDictionaryResource([out None None,retval] IXpsOMRemoteDictionaryResource **remoteDictionaryResource)
HRESULT None None.GetDifferencedFilesCount([out] UINT *pcDifferencedFiles)
HRESULT None None.GetDigestMethod([out None None,retval] LPWSTR *digestMethod)
HRESULT None None.get_DigitalMultiplier([out] long *pValue,[out] long *pFlags)
HRESULT None None.GetDirect3D([out None None,retval] IDirect3D9 **ppD3D9)
HRESULT None None.GetDirectDraw(LPDIRECTDRAW *ppDirectDraw None)
HRESULT None None.GetDirectedTargetCount([out] UINT *pcDirectedTarget)
HRESULT None None.get_Direction([out] TERMINAL_DIRECTION *pDirection)
HRESULT None None.get_Direction([out] TERMINAL_DIRECTION *pTD)
HRESULT None None.get_DirectoryCount([out] LONG *pVal)
HRESULT None None.GetDirectSoundInterface([out] LPDIRECTSOUND *lplpds)
HRESULT None None.GetDisabledByIndex([in] DWORD index,[out] CLSID *clsid)
HRESULT None None.GetDiscardControlPartName([out None None,retval] IOpcPartUri **discardControlPartUri)
HRESULT None None.GetDiscID([in] LPCWSTR pszwPath,[out] ULONGLONG *pullDiscID)
HRESULT None None.GetDisconnectedSession([out] ITsSbSession **ppSession)
HRESULT None None.get_DiskBytesRead([out] VARIANT *bytesRead)
HRESULT None None.GetDisplayInfo([in None None,out] RESULTDATAITEM *pResultDataItem)
HRESULT None None.GetDisplayInfo([in None None,out] SCOPEDATAITEM *pScopeDataItem)
HRESULT None None.GetDisplayMode([in] UINT iSwapChain,[out] D3DDISPLAYMODE *pMode)
HRESULT None None.GetDisplayModeList1(DXGI_FORMAT EnumFormat None,UINT Flags None,[in None None,out] UINT *pNumModes,[out None None,optional] DXGI_MODE_DESC1 *pDesc)
HRESULT None None.GetDisplayName([in] IBindCtx *pbc,[in] IMoniker *pmkToLeft,[out] LPOLESTR *ppszDisplayName)
HRESULT None None.GetDisplayName([out] LPWSTR *pRetVal)
HRESULT None None.get_Display([out] IVMDisplay **display)
HRESULT None None.GetDisplay([out None None,retval] IUnknown **ppDisplay)
HRESULT None None.GetDisplaySurfaceData1([in] IDXGIResource *pDestination)
HRESULT None None.GetDisplaySurfaceData([in] IDXGISurface *pDestination)
HRESULT None None.GetDisplayType([out] PROPDESC_DISPLAYTYPE *pdt)
HRESULT None None.GetDisplayUrl([out] WCHAR wszDocUrl[],[in] DWORD dwSize,[out] DWORD *pdwLength)
HRESULT None None.GetDistanceFactor(D3DVALUE * pflDistanceFactor)
HRESULT None None.GetDllEntry([in] MEMBERID memid,[in] INVOKEKIND invKind,[out] BSTR *pBstrDllName,[out] BSTR *pBstrName,[out] WORD *pwOrdinal)
HRESULT None None.get_doctype(IXMLDOMDocumentType **documentType None)
HRESULT None None.GetDocumentation([in] MEMBERID memid,[out] BSTR *pBstrName,[out] BSTR *pBstrDocString,[out] DWORD *pdwHelpContext,[out] BSTR *pBstrHelpFile)
HRESULT None None.get_documentElement(IXMLDOMElement** DOMElement None)
HRESULT None None.GetDocumentIndex([out None None,retval] UINT32 *fixedDocumentIndex)
HRESULT None None.GetDocumentName([out None None,retval] IOpcPartUri **fixedDocumentName)
HRESULT None None.GetDocument([out] IUnknown **ppunk)
HRESULT None None.get_Document([out None None,retval] IHTMLDocument2 **htmlDocument)
HRESULT None None.GetDocumentSequence([out None None,retval] IXpsOMDocumentSequence **documentSequence)
HRESULT None None.GetDocumentStructureResource([out None None,retval] IXpsOMDocumentStructureResource **documentStructureResource)
HRESULT None None.GetDocumentType([out None None,retval] XPS_DOCUMENT_TYPE *documentType)
HRESULT None None.GetDomainMode(IADs *pDomain None,BOOL *bIsMixed None)
HRESULT None None.GetDomainShaderDesc(D3DX11_PASS_SHADER_DESC *pDesc None)
HRESULT None None.GetDouble([in] REFGUID guidKey,[out] double *pfValue)
HRESULT None None.GetDownloadProgress([out] DWORD *pdwPercent,[out] QWORD *pqwBytesDownloaded,[out] QWORD *pcnsDownload)
HRESULT None None.GetDrawBackgroundMode([out] AM_WST_DRAWBGMODE *lpMode)
HRESULT None None.GetDRMProperty([in] LPCWSTR pwstrName,[out] WMT_ATTR_DATATYPE *pdwType,[out] BYTE *pValue,[out] WORD *pcbLength)
HRESULT None None.GetDropTarget([out] IDropTarget **ppDropTarget)
HRESULT None None.GetDuration([in] REFGUID guidPositionType,[out] PROPVARIANT *pvDurationValue)
HRESULT None None.GetDuration(LONGLONG *pDuration None)
HRESULT None None.get_Duration(long* pVal None)
HRESULT None None.GetDuration([out] LONGLONG *pDuration)
HRESULT None None.get_Duration([out] REFTIME *plength)
HRESULT None None.GetDVDDirectory([out] LPWSTR pszwPath,[in] ULONG ulMaxSize,[out] ULONG *pulActualSize)
HRESULT None None.GetDvdInterface([in] REFIID riid,[out] void **ppvIF)
HRESULT None None.get_DVDROMDrives([out] IVMDVDDriveCollection **dvdROMCollection)
HRESULT None None.GetDVDTextLanguageInfo([in] ULONG ulLangIndex,[out] ULONG *pulNumOfStrings,[out] LCID pLangCode,[out] DVD_TextCharSet *pbCharacterSet)
HRESULT None None.GetDVDTextNumberOfLanguages([out] ULONG *pulNumOfLangs)
HRESULT None None.GetDVDTextStringAsNative([in] ULONG ulLangIndex,[in] ULONG ulStringIndex,[out] BYTE *pchBuffer,[in] ULONG ulMaxBufferSize,[out] ULONG *pulActualSize,[out] DVD_TextStringType *pType)
HRESULT None None.GetDVDTextStringAsUnicode([in] ULONG ulLangIndex,[in] ULONG ulStringIndex,[out] WCHAR *pchBuffer,[in] ULONG ulMaxBufferSize,[out] ULONG *pulActualSize,[out] DVD_TextStringType *pType)
HRESULT None None.GetDVDVolumeInfo([out] ULONG *pulNumOfVolumes,[out] ULONG *pulVolume,[out] DVD_DISC_SIDE *pSide,[out] ULONG *pulNumOfTitles)
HRESULT None None.get_DynamicTerminalClasses([out] VARIANT *pVariant)
HRESULT None None.GetEditProperty([in] long EditID,[in] long Param,[out] long *pValue)
HRESULT None None.GetEditPropertySet([in] long EditID,[out] long *pState)
HRESULT None None.get_EditStart([out] long *pValue)
HRESULT None None.GetEffectsList([out] ppEffectsIds *LPGUID,[out] UINT *pcEffects,[in] HANDLE Event)
HRESULT None None.getElementsByTagName(BSTR tagName None,IXMLDOMNodeList **resultList None)
HRESULT None None.get_elements(ISchemaItemCollection** elements None)
HRESULT None None.GetEmbeddedFragmentRoots([out None None,retval] SAFEARRAY **pRetVal)
HRESULT None None.GetEmbeddingOption([out None None,retval] XPS_FONT_EMBEDDING *embeddingOption)
HRESULT None None.GetEmulatedCaps(DDCAPS *pCaps None)
HRESULT None None.get_Emulation([out] EmulationType *pVal)
HRESULT None None.get_EnableAutoProxy(VARIANT_BOOL *pEnableAutoProxy None)
HRESULT None None.GetEnabled([out] BOOL *pbEnabled)
HRESULT None None.GetEnableFastCache([out] BOOL *pfEnableFastCache)
HRESULT None None.get_EnableFEC(VARIANT_BOOL* pVal None)
HRESULT None None.GetEnableHTTP([out] BOOL *pfEnableHTTP)
HRESULT None None.GetEnableMulticast([out] BOOL *pfEnableMulticast)
HRESULT None None.get_EnableMulticast(VARIANT_BOOL *pEnableMulticast None)
HRESULT None None.get_Enable([out] BOOL *pfEnable)
HRESULT None None.GetEnableResends([out] BOOL *pfEnableResends)
HRESULT None None.get_EnableReverseProxyMode(VARIANT_BOOL* pVal None)
HRESULT None None.GetEnableTCP([out] BOOL *pfEnableTCP)
HRESULT None None.get_EnableTCP(VARIANT_BOOL *pEnableTCP None)
HRESULT None None.GetEnableThinning([out] BOOL *pfEnableThinning)
HRESULT None None.GetEnableUDP([out] BOOL *pfEnableUDP)
HRESULT None None.get_EnableUDP(VARIANT_BOOL *pEnableUDP None)
HRESULT None None.GetEncodingConfigurationPropertyStore([in] WORD wStreamNumber,[out] IPropertyStore **ppIStore)
HRESULT None None.GetEncryptionBltKey(VOID *pReadbackKey None,UINT KeySize None)
HRESULT None None.GetEngineFormat([in] IMMDevice *pDevice,[in] BOOL bRequestDeviceFormat,[out] WAVEFORMATEX **ppwfxFormat)
HRESULT None None.get_entities(IXMLDOMNamedNodeMap **entityMap None)
HRESULT None None.get_EnumerationDepth([out None None,retval] DWORD *pdwDepth)
HRESULT None None.GetEnumerator([out None None,retval] IOpcCertificateEnumerator **certificateEnumerator)
HRESULT None None.GetEnumerator([out None None,retval] IOpcPartEnumerator **partEnumerator)
HRESULT None None.GetEnumerator([out None None,retval] IOpcRelationshipEnumerator **relationshipEnumerator)
HRESULT None None.GetEnumerator([out None None,retval] IOpcSignatureCustomObjectEnumerator **customObjectEnumerator)
HRESULT None None.GetEnumerator([out None None,retval] IOpcSignatureRelationshipReferenceEnumerator **relationshipReferenceEnumerator)
HRESULT None None.GetEnumType([out] PROPENUMTYPE *penumtype)
HRESULT None None.get_errorCode(long *errorCode None)
HRESULT None None.get_ErrorCode(long* pVal None)
HRESULT None None.get_ErrorCode([out] long *pErrorCode)
HRESULT None None.GetErrorDescription(HRESULT hrError None,DWORD dwLookupID None,DISPPARAMS *pdispparams None,LCID lcid None,BSTR *pbstrSource None,BSTR *pbstrDescription None)
HRESULT None None.GetErrorInfo(ULONG ulRecordNum None,LCID lcid None,IErrorInfo **ppErrorInfo None)
HRESULT None None.GetError([out] IMFMediaError **ppError)
HRESULT None None.get_errorParametersCount(INT * intParams)
HRESULT None None.GetErrorParameters(ULONG ulRecordNum None,DISPPARAMS * pdispparams)
HRESULT None None.GetErrors([in] REFIID riid,[out None None,retval] void **ppParseErrors)
HRESULT None None.get_errorXPath(BSTR *strXPath None)
HRESULT None None.getEstimatedRows(DBROWCOUNT *pcRows None)
HRESULT None None.GetEventHandle([out] OAEVENT *hEvent)
HRESULT None None.get_EventHandlers(IWMSPlugins** pVal None)
HRESULT None None.GetEvent([out] long *lEventCode,[out] LONG_PTR *lParam1,[out] LONG_PTR *lParam2,[in] long msTimeout)
HRESULT None None.GetExpectedPacketCount([in] QWORD msDuration,[out] QWORD *pcPackets)
HRESULT None None.get_Exposure([out] long *pValue,[out] long *pFlags)
HRESULT None None.get_ExposureRelative([out] long *pValue,[out] long *pFlags)
HRESULT None None.get_expr(BSTR* expression None)
HRESULT None None.get_ExSeekCapabilities([out] long *pExCapabilities)
HRESULT None None.GetExtendedAttributeByIndex(DWORD dwIndex None,DWORD* pdwValueName None,VARIANT* pVariantValue None)
HRESULT None None.GetExtendedAttributeCount(DWORD* pdwAttrs None)
HRESULT None None.GetExtendedAttribute(DWORD dwValueName None,VARIANT* pVariantValue None)
HRESULT None None.GetExtendedAttribute(DWORD ValueName None,VARIANT* pVariantValue None)
HRESULT None None.get_ExtendedProperties([out None None,retval] BSTR *retVal)
HRESULT None None.get_ExtendedProperties([out None None,retval] IInkExtendedProperties **ExtendedProperties)
HRESULT None None.get_ExtendedProperties([out None None,retval] IInkExtendedProperties **Properties)
HRESULT None None.GetExtent([in] DWORD dwDrawAspect,[out] SIZEL *psizel)
HRESULT None None.get_ExternalDeviceID([out] LPOLESTR *ppszData)
HRESULT None None.GetFieldDescriptorCount([out] DWORD *pdwCount)
HRESULT None None.GetFigures([out None None,retval] IXpsOMGeometryFigureCollection **figures)
HRESULT None None.get_FileBytesRead(VARIANT* pVal None)
HRESULT None None.get_FileCount([out] LONG *pVal)
HRESULT None None.GetFileCounts([out] UINT *pcIncludeFiles,[out] UINT *pcExcludeFiles,[out] UINT *pcComponents)
HRESULT None None.get_FileDescriptions(BSTR path None,WMS_FILE_TYPE Type None,IWMSFileDescriptions** pVal None)
HRESULT None None.get_FileDescriptions(BSTR RelativePath None,IWMSFileDescriptions** pVal None)
HRESULT None None.GetFileDuration([out] QWORD *pcnsDuration)
HRESULT None None.GetFileName([out None None,retval] LPWSTR *fileName)
HRESULT None None.GetFileName([out] WCHAR **pszName)
HRESULT None None.GetFileName([out] WCHAR wszFileName[],[in] DWORD dwSize,[out] DWORD *pdwLength)
HRESULT None None.get_File([out] BSTR *virtualMachineXMLFile)
HRESULT None None.get_filepos(long *filePosition None)
HRESULT None None.get_FileReadRate(long* pVal None)
HRESULT None None.GetFileRestoreStatus([out] VSS_FILE_RESTORE_STATUS *pStatus)
HRESULT None None.GetFileSize([out] QWORD *pcbFile)
HRESULT None None.get_FileSystemsSupported([out] FsiFileSystems *pVal)
HRESULT None None.get_FileType(BSTR path None,WMS_FILE_TYPE* pVal None)
HRESULT None None.GetFileTypeIndex([out] UINT *piFileType)
HRESULT None None.GetFillBrushLocal([out None None,retval] IXpsOMBrush **brush)
HRESULT None None.GetFillBrushLocal([out None None,retval] IXpsOMBrush **fillBrush)
HRESULT None None.GetFillBrushLookup([out None None,retval] LPWSTR *key)
HRESULT None None.GetFillBrushLookup([out None None,retval] LPWSTR *lookup)
HRESULT None None.GetFillBrush([out None None,retval] IXpsOMBrush **brush)
HRESULT None None.GetFillBrush([out None None,retval] IXpsOMBrush **fillBrush)
HRESULT None None.get_FillPatternStyle([out None None,retval] BSTR *retVal)
HRESULT None None.GetFillRule([out None None,retval] XPS_FILL_RULE *fillRule)
HRESULT None None.get_FilterCollection([out] IDispatch **ppUnk)
HRESULT None None.GetFiltergraph([out] IGraphBuilder **ppGB)
HRESULT None None.GetFilterPluginStore([out] ITsSbFilterPluginStore **ppStore)
HRESULT None None.GetFinalOutputType(DMO_MEDIA_TYPE* pMedia None,IMediaObject* pDMO None)
HRESULT None None.get_final(SCHEMADERIVATIONMETHOD* final None)
HRESULT None None.get_firstChild(IXMLDOMNode **firstChild None)
HRESULT None None.GetFirstExtension([out] LPCLSID pExtCLSID)
HRESULT None None.GetFirstRegisteredDevice([in] DWORD dwRegisterType,[out] IWMRegisteredDevice **ppDevice)
HRESULT None None.get_Flags(FORMAT_TYPE* pdwFlags None)
HRESULT None None.GetFlags(long* pFlags None)
HRESULT None None.GetFlags([out] DWORD *pdwFlags)
HRESULT None None.GetFlags([out] EXPCMDFLAGS *pFlags)
HRESULT None None.get_FloppyDrives([out] IVMFloppyDriveCollection **floppyCollection)
HRESULT None None.get_FocalLengths([out] long *plOcularFocalLength,[out] long *plObjectiveFocalLengthMin,[out] long *plObjectiveFocalLengthMax)
HRESULT None None.GetFocusedElement([out None None,retval] IUIAutomationElement **element)
HRESULT None None.get_Focus([out] long *pValue,[out] long *pFlags)
HRESULT None None.get_FocusRelative([out] long *pValue,[out] long *pFlags)
HRESULT None None.GetFolderDefinition([out] KNOWNFOLDER_DEFINITION *pKFD)
HRESULT None None.get_FolderFlags([out] DWORD *pdwFlags)
HRESULT None None.GetFolderIds([out] KNOWNFOLDERID **ppKFId,[in None None,out] UINT *pCount)
HRESULT None None.GetFolder([out] IShellItem **ppsi)
HRESULT None None.GetFolderSetData([in None None,out] tagFolderSetData *pfsd)
HRESULT None None.GetFolderType([out] FOLDERTYPEID *pftid)
HRESULT None None.get_FollowDirectories([out None None,retval] BOOL *pfFollowDirectories)
HRESULT None None.GetFontFaceIndex([out None None,retval] SHORT *fontFaceIndex)
HRESULT None None.GetFont([out] LOGFONTW *plf)
HRESULT None None.GetFontRenderingEmSize([out None None,retval] FLOAT *fontRenderingEmSize)
HRESULT None None.GetFontResource([out None None,retval] IXpsOMFontResource **fontResource)
HRESULT None None.GetForceRerunAutoProxyDetection([out] BOOL *pfForceRerunDetection)
HRESULT None None.GetFormat(GUID* pFormat None)
HRESULT None None.GetFormat([in] UINT32 index,[out] WAVEFORMATEX **format)
HRESULT None None.GetFormat([out] WTS_ALPHATYPE *pat)
HRESULT None None.GetFormatSupport([out] _WAVEFORMATEX **pFormatEx,[out] UINT *pnFormatCount,[out] LPWSTR **pppwszMimeType,[out] UINT *pnMimeTypeCount)
HRESULT None None.GetForWindow([in] HWND appWindow,[in] REFIID riid,[out None None,optional] void **dataTransferManager)
HRESULT None None.GetFourCCCodes(DWORD *pCount None,DWORD *pCodes None)
HRESULT None None.get_fractionDigits(VARIANT* fractionDigits None)
HRESULT None None.get_FragmentRoot([out None None,retval] IRawElementProviderFragmentRoot **pRetVal)
HRESULT None None.GetFrameCount([out] UINT16 *frameCount)
HRESULT None None.get_FramesDrawn(int *pcFramesDrawn None)
HRESULT None None.GetFrameStatisticsMedia([out] DXGI_FRAME_STATISTICS_MEDIA *pStats)
HRESULT None None.GetFrameStatistics([out] DXGI_FRAME_STATISTICS *pStats)
HRESULT None None.GetFreeCount([out] LONG *plBuffersFree)
HRESULT None None.get_FreeMediaBlocks([out] LONG *pVal)
HRESULT None None.GetFrontBufferData([in None None,out] IDirect3DSurface9 *pDestSurface)
HRESULT None None.GetFrontBufferData([in] UINT iSwapChain,[in] IDirect3DSurface9 *pDestSurface)
HRESULT None None.get_FsiNamedStreams([out None None,optional] IFsiNamedStreams **streams)
HRESULT None None.get_FullPath([out] BSTR *pVal)
HRESULT None None.GetFullscreenDesc([out] DXGI_SWAP_CHAIN_FULLSCREEN_DESC *pDesc)
HRESULT None None.get_FullScreenMode(long *FullScreenMode None)
HRESULT None None.get_FullScreenMode([out] long *FullScreenMode)
HRESULT None None.GetFullscreen([out] BOOL *pfFullscreen)
HRESULT None None.GetFuncCustData([in] UINT index,[in] REFGUID guid,[out] VARIANT *pVarVal)
HRESULT None None.GetFuncDesc([in] UINT index,[out] FUNCDESC **ppFuncDesc)
HRESULT None None.GetFuncIndexOfMemId([in] MEMBERID memid,[in] INVOKEKIND invKind,[out] UINT *pFuncIndex)
HRESULT None None.GetFVF([out] DWORD *pFVF)
HRESULT None None.get_Gain([out] long *pValue,[out] long *pFlags)
HRESULT None None.GetGammaControlCapabilities([out] DXGI_GAMMA_CONTROL_CAPABILITIES *pGammaCaps)
HRESULT None None.GetGammaControl([out] DXGI_GAMMA_CONTROL *pArray)
HRESULT None None.get_Gamma([out] long *pValue,[out] long *pFlags)
HRESULT None None.GetGeometryLocal([out None None,retval] IXpsOMGeometry **geometry)
HRESULT None None.GetGeometryLookup([out None None,retval] LPWSTR *lookup)
HRESULT None None.GetGeometry([out None None,retval] IXpsOMGeometry **geometry)
HRESULT None None.GetGeometryShaderDesc(D3DX11_PASS_SHADER_DESC *pDesc None)
HRESULT None None.GetGfxState([in] IMMDevice *pDevice,[out] BOOL *_pbEnable)
HRESULT None None.GetGlobalId([out] LPWSTR *ppwstrGlobalId)
HRESULT None None.get_GlobalPartitionID([out None None,retval] BSTR *pbstrGlobalPartitionID)
HRESULT None None.GetGlyphIndexCount([out None None,retval] UINT32 *indexCount)
HRESULT None None.GetGlyphIndices([in None None,out] UINT32 *indexCount,[in None None,out] XPS_GLYPH_INDEX *glyphIndices)
HRESULT None None.GetGlyphIndices([in None None,out] UINT32 *indexCount,[out] XPS_GLYPH_INDEX *glyphIndices)
HRESULT None None.GetGlyphMappingCount([out None None,retval] UINT32 *glyphMappingCount)
HRESULT None None.GetGlyphMappings([in None None,out] UINT32 *glyphMappingCount,[in None None,out] XPS_GLYPH_MAPPING *glyphMappings)
HRESULT None None.GetGlyphMappings([in None None,out] UINT32 *glyphMappingCount,[out] XPS_GLYPH_MAPPING *glyphMappings)
HRESULT None None.GetGlyphsEditor([out None None,retval] IXpsOMGlyphsEditor **editor)
HRESULT None None.GetGPUThreadPriority(INT *pPriority None)
HRESULT None None.GetGradientStops([out None None,retval] IXpsOMGradientStopCollection **gradientStops)
HRESULT None None.get_GroupBy([out] BSTR *pbstrGroupBy)
HRESULT None None.GetGroupBy([out] PROPERTYKEY *pkey,[out] BOOL *pfAscending)
HRESULT None None.GetGroupingParam([out] GUID *pguidClass)
HRESULT None None.GetGroupingParam([out] GUID *pRetVal)
HRESULT None None.GetGroupingRange([out] PROPDESC_GROUPING_RANGE *pgr)
HRESULT None None.GetGroupSubsetCount([out] UINT *pcVisibleRows)
HRESULT None None.get_GuestOS([out] IVMGuestOS **guestOS)
HRESULT None None.GetGUID([in] REFGUID guidKey,[out] GUID *pguidValue)
HRESULT None None.GetGUID([out] GUID *pGUID)
HRESULT None None.GetHandle(HANDLE * pHandle)
HRESULT None None.GetHandle([out] HANDLE *ph)
HRESULT None None.get_Handle([out] OLE_HANDLE *pHandle)
HRESULT None None.GetHandlerID([out] LPWSTR *ppszHandlerID)
HRESULT None None.GetHandlerInfo([out] ISyncMgrHandlerInfo **ppHandlerInfo)
HRESULT None None.get_HardDiskConnections([out] IVMHardDiskConnectionCollection **hardDiskConnectionCollection)
HRESULT None None.get_HardwareCapabilities([out None None,retval] TabletHardwareCapabilities *Capabilities)
HRESULT None None.GetHardwareSupportedTVAudioModes([out] long *plModes)
HRESULT None None.get_Has3DNow([out] VARIANT_BOOL *threeDNowEnabled)
HRESULT None None.get_HasError(VARIANT_BOOL *pHasError None)
HRESULT None None.get_HasMMX([out] VARIANT_BOOL *mmxEnabled)
HRESULT None None.get_HasSSE([out] VARIANT_BOOL *sseEnabled)
HRESULT None None.get_Height(long *pHeight None)
HRESULT None None.get_Height([out] long *pHeight)
HRESULT None None.GetHelpContext(DWORD *pdwHelpContext None)
HRESULT None None.GetHelpFile([out] BSTR *pBstrHelpFile)
HRESULT None None.GetHelpTopic([out] LPOLESTR *lpCompiledHelpFile)
HRESULT None None.get_hFont([out] HFONT *phFont)
HRESULT None None.GetHistoryObject([out] IOleObject **ppole,[out] IStream **pstm,[out] IBindCtx **ppbc)
HRESULT None None.GetHoldPage([out] BOOL *pbHoldPage)
HRESULT None None.get_HorizontalLocked([out] long *plLocked)
HRESULT None None.get_HostDepth([out] DWORD *pdwDepth)
HRESULT None None.GetHostInfo(DOCHOSTUIINFO *pInfo None)
HRESULT None None.get_HostInfo([out] IVMHostInfo **hostMachine)
HRESULT None None.GetHost([out] WCHAR wszHost[],[in] DWORD dwSize,[out] DWORD *pdwLength)
HRESULT None None.GetHostURL([out] WCHAR *pwszURL,[in None None,out] DWORD *pcchURL)
HRESULT None None.GetHoverIcon([out None None,retval] IPictureDisp **HoverImage)
HRESULT None None.get_hPal([out] OLE_HANDLE *phPal)
HRESULT None None.GetHResult(HRESULT *phrResult None)
HRESULT None None.get_HTTPProxyHost(BSTR *pbstrHTTPProxyHost None)
HRESULT None None.get_HTTPProxyPort(long *pHTTPProxyPort None)
HRESULT None None.GetHttpStatus([out] DWORD *pdwHttpStatus)
HRESULT None None.get_Hue([out] long *pValue,[out] long *pFlags)
HRESULT None None.GetHyperlinkNavigateUri([out None None,retval] IUri **hyperlinkUri)
HRESULT None None.GetIAccessible([out None None,retval] IAccessible **ppAccessible)
HRESULT None None.GetIcon([in] IShellItemArray *psiItemArray,[out] LPWSTR *ppszIcon)
HRESULT None None.GetIconPath([out] LPWSTR *pRetVal)
HRESULT None None.GetIconPath([out] LPWSTR *pszPath)
HRESULT None None.get_id(BSTR* id None)
HRESULT None None.GetIdealVideoSize([out] SIZE *pszMin,[out] SIZE *pszMax)
HRESULT None None.get_Identifier([out None None,retval] BSTR *pIdentifier)
HRESULT None None.GetIdentifier([out None None,retval] LPWSTR *identifier)
HRESULT None None.GetIdentity([out] VSS_ID *pidInstance,[out] VSS_ID *pidWriter,[out] BSTR *pbstrWriterName,[out] VSS_USAGE_TYPE *pUsage,[out] VSS_SOURCE_TYPE *pSource)
HRESULT None None.GetIDList([out] PIDLIST_ABSOLUTE *ppidl)
HRESULT None None.GetId([out] GUID *Id)
HRESULT None None.GetId([out] LPWSTR *ppstrId)
HRESULT None None.GetId([out None None,retval] LPCWSTR *relationshipIdentifier)
HRESULT None None.GetID([out] UINT32 *pu32ID)
HRESULT None None.GetIIDAndMethod([out] IID *pIID,[out] ULONG *piMethod)
HRESULT None None.GetIID([out] GUID *pIID)
HRESULT None None.GetImageCount([out] DWORD *pcImages)
HRESULT None None.GetImage([in] DWORD wIndex,[in None None,out] WORD *pcchMIMEType,[out] WCHAR *pwszMIMEType,[in None None,out] WORD *pcchDescription,[out] WCHAR *pwszDescription,[out] WORD *pImageType,[in None None,out] DWORD *pcbImageData,[out] BYTE *pbImageData)
HRESULT None None.get_ImageSize([out] ULONG *pVal)
HRESULT None None.GetImageType([out None None,retval] XPS_IMAGE_TYPE *imageType)
HRESULT None None.GetImpersonationSidBlobs([in] LPCWSTR pcwszURL,[out] DWORD *pcSidCount,[out] BLOB **ppSidBlobs)
HRESULT None None.get_implementation(IXMLDOMImplementation **impl None)
HRESULT None None.GetImplTypeFlags([in] UINT index,[out] INT *pImplTypeFlags)
HRESULT None None.get_ImportedVolumeName([out] BSTR *pVal)
HRESULT None None.GetInclusionList([out] GUID **ppGuids,[out] DWORD *pcGuids)
HRESULT None None.get_IncomingBandwidth(long* pVal None)
HRESULT None None.GetIndexedValue(long lIndex None,LPWSTR* pstrName None,long* plNameHint None,VARIANT* pValue None,long* plResultOptions None,long lOptions None)
HRESULT None None.GetIndexerVersion([out] DWORD *pdwMajor,[out] DWORD *pdwMinor)
HRESULT None None.GetIndexMode([out] BOOL *pbIndexFile)
HRESULT None None.GetIndices([out] IDirect3DIndexBuffer9 **ppIndexData,[out] UINT *pBaseVertexIndex)
HRESULT None None.GetInfoOfIndex([in] ULONG iti,[in] DWORD dwFlags,[out] ITypeInfo **pptiCoClass,[out] DWORD *pdwTIFlags,[out] ULONG *pcdispidReserved,[out] IID *piidPrimary,[out] IID *piidSource)
HRESULT None None.GetInfo([out] CALLFRAMEINFO *pInfo)
HRESULT None None.GetInfo([out] WCHAR *pszVersion,[in None None,out] int *pcbVersion,[out] LPWSTR pszDescription,[in None None,out] int *pcbDescription,[out] long *pDefaultKeyFrameRate,[out] long *pDefaultPFramesPerKey,[out] double *pDefaultQuality,[out] long *pCapabilities)
HRESULT None None.GetInheritTypes([out] PSI_INHERIT_TYPE *ppInheritTypes,[out] ULONG *pcInheritTypes)
HRESULT None None.get_Ink([out None None,retval] InkDisp **Ink)
HRESULT None None.GetInPlaceSite([out] IOleInPlaceSite **ppIPSite)
HRESULT None None.GetInputAvailableType([in] DWORD dwInputStreamID,[in] DWORD dwTypeIndex,[out] IMFMediaType **ppType)
HRESULT None None.GetInputConnector([in] ULONG uiIndex,[out None None,retval] IMILBitmapEffectInputConnector **ppConnector)
HRESULT None None.GetInputCount([out] DWORD *pcInputs)
HRESULT None None.GetInputCurrentType(DWORD dwInputStreamIndex None,[out] DMO_MEDIA_TYPE *pmt)
HRESULT None None.GetInputCurrentType([in] DWORD dwInputStreamID,[out] IMFMediaType **ppType)
HRESULT None None.GetInput([in] DWORD dwInputIndex,[out] IMFTopologyNode **ppUpstreamNode,[out] DWORD *pdwOutputIndexOnUpstreamNode)
HRESULT None None.GetInputMaxLatency(DWORD dwInputStreamIndex None,[out] REFERENCE_TIME *prtMaxLatency)
HRESULT None None.GetInputPrefType([in] DWORD dwInputIndex,[out] IMFMediaType **ppType)
HRESULT None None.GetInputProps([in] DWORD dwInputNum,[out] IWMInputMediaProps **ppInput)
HRESULT None None.GetInputSetting([in] DWORD dwInputNum,[in] LPCWSTR pszName,[out] WMT_ATTR_DATATYPE *pType,[out] BYTE *pValue,[in None None,out] WORD *pcbLength)
HRESULT None None.GetInputSizeInfo(DWORD dwInputStreamIndex None,[out] DWORD *pcbSize,[out] DWORD *pcbMaxLookahead,[out] DWORD *pcbAlignment)
HRESULT None None.GetInputStatus(DWORD dwInputStreamIndex None,[out] DWORD *dwFlags)
HRESULT None None.GetInputStreamAttributes([in] DWORD dwInputStreamID,[out] IMFAttributes **ppAttributes)
HRESULT None None.GetInputStreamInfo(DWORD dwInputStreamIndex None,[out] DWORD *pdwFlags)
HRESULT None None.GetInputStreamInfo([in] DWORD dwInputStreamID,[out] MFT_INPUT_STREAM_INFO *pStreamInfo)
HRESULT None None.GetInputType(DWORD dwInputStreamIndex None,DWORD dwTypeIndex None,[out] DMO_MEDIA_TYPE *pmt)
HRESULT None None.get_input(VARIANT * pVar)
HRESULT None None.GetIntegerAttribute(DWORD dwAttributeId None,DWORD* pdwAttribute None)
HRESULT None None.GetIntent([out None None,retval] LPWSTR *intent)
HRESULT None None.GetIObjectControl([out] IObjectControl **pCtrl)
HRESULT None None.get_Iris([out] long *pValue,[out] long *pFlags)
HRESULT None None.get_IrisRelative([out] long *pValue,[out] long *pFlags)
HRESULT None None.GetIsDefaultCEP([out None None,retval] VARIANT_BOOL *pValue)
HRESULT None None.get_IsDistributionPasswordSet(VARIANT_BOOL* pVal None)
HRESULT None None.GetIsFilled([out None None,retval] BOOL *isFilled)
HRESULT None None.get_IsHierarchical([out None None,retval] BOOL *pfIsHierarchical)
HRESULT None None.GetIsHyperlinkTarget([out None None,retval] BOOL *isHyperlink)
HRESULT None None.GetIsHyperlinkTarget([out None None,retval] BOOL *isHyperlinkTarget)
HRESULT None None.get_IsMultiTouch([out] VARIANT_BOOL pIsMultiTouch)
HRESULT None None.get_IsNamedStream([out] VARIANT_BOOL *pVal)
HRESULT None None.get_ISO9660InterchangeLevel([out] LONG *pVal)
HRESULT None None.get_ISO9660InterchangeLevelsSupported([out] SAFEARRAY *pVal)
HRESULT None None.GetIsolationLevel([out None None,retval] ISOLATIONLEVEL *pIsolationLevel)
HRESULT None None.get_IsRealTime([out] VARIANT_BOOL *pVal)
HRESULT None None.GetIsSideways([out None None,retval] BOOL *isSideways)
HRESULT None None.get_IsTopmost([out None None,retval] BOOL *pRetVal)
HRESULT None None.get_Italic([out] BOOL *pItalic)
HRESULT None None.get_Item(const VARIANT varIndex,IWMSPlayer** pVal None)
HRESULT None None.GetItemID([out] LPWSTR *ppszItemID)
HRESULT None None.GetItemInfo([in] BSTR bstrInfoName,[in] VARIANT *pContext,[out] VARIANT *pData)
HRESULT None None.GetItem([in] REFGUID guidKey,[in None None,out] PROPVARIANT *pValue)
HRESULT None None.get_item(long index None,IXMLDOMNode **listItem None)
HRESULT None None.get_item(LONG index None,IXMLDOMParseError2 **objErr None)
HRESULT None None.GetItem(LONG itemId None,IDispatch **disp None)
HRESULT None None.GetItem([out] GUID *pguidCategory)
HRESULT None None.GetItemsChangedSink([in] ISearchNotifyInlineSite *pISearchNotifyInlineSite,[in] REFIID riid,[out] void *ppv,[out] GUID *pGUIDCatalogResetSignature,[out] GUID *pGUIDCheckPointSignature,[out] DWORD *pdwLastCheckPointNumber)
HRESULT None None.GetItemSpacing([out] ITEMSPACING *pSpacing)
HRESULT None None.GetItemType([out] LONG *pItemType)
HRESULT None None.get_itemType(SOMITEMTYPE* itemType None)
HRESULT None None.GetItem(UINT uiId None,REFIID riid None,void **ppv None)
HRESULT None None.GetIterationInfo([out] UINT *pnCurrentConflict,[out] UINT *pcConflicts,[out] UINT *pcRemainingForApplyToAll)
HRESULT None None.GetJackDescription2([in] UINT nJack,[out] KSJACK_DESCRIPTION2 *pDescription2)
HRESULT None None.GetJackDescription([in] UINT nJack,[out] KSJACK_DESCRIPTION *pDescription)
HRESULT None None.GetJackSinkInformation([out] KSJACK_SINK_INFORMATION *pJackSinkInformation)
HRESULT None None.GetJobStatus([out None None,retval] XPS_JOB_STATUS *jobStatus)
HRESULT None None.GetKaraokeAttributes([in] ULONG ulStream,[out] DVD_KaraokeAttributes *pATR)
HRESULT None None.get_KeepOriginalFormat([out] BOOL *pKeep)
HRESULT None None.get_Keyboard([out] IVMKeyboard **keyboard)
HRESULT None None.get_Key([out None None,retval] VARIANT *pvarRetVal)
HRESULT None None.GetKeySystem(DWORD index None,BSTR *pType None)
HRESULT None None.GetKeywords([out None None,retval] LPWSTR *keywords)
HRESULT None None.GetKnowledgeCookie([out] IUnknown **ppKnowledgeCookie)
HRESULT None None.GetLanguageCount([in] DWORD dwOutputNum,[out] WORD *pwLanguageCount)
HRESULT None None.GetLanguageCount([out] WORD *pwCount)
HRESULT None None.GetLanguageDetails([in] WORD wIndex,[out] WCHAR *pwszLanguageString,[in None None,out] WORD *pcchLanguageStringLength)
HRESULT None None.GetLanguage([in] DWORD dwOutputNum,[in] WORD wLanguage,[out] WCHAR *pwszLanguageString,[in None None,out] WORD *pcchLanguageStringLength)
HRESULT None None.GetLanguage([out None None,retval] LPWSTR *language)
HRESULT None None.get_LastBlock([out] ULONG *block)
HRESULT None None.get_lastChild(IXMLDOMNode **lastChild None)
HRESULT None None.GetLastInputTime([out] ULONG64 *pLastInputTime)
HRESULT None None.GetLastModifiedBy([out None None,retval] LPWSTR *lastModifiedBy)
HRESULT None None.GetLastModified([out] FILETIME *pftLastModified)
HRESULT None None.GetLastPresentCount([out] UINT *pLastPresentCount)
HRESULT None None.GetLastPrinted([out None None,retval] SYSTEMTIME *lastPrinted)
HRESULT None None.GetLastRedoDescription([out] BSTR *pBstr)
HRESULT None None.GetLastUndoDescription([out] BSTR *pBstr)
HRESULT None None.GetLastUpdateTime([out None None,retval] DATE *pDate)
HRESULT None None.GetLastVisibleData(HROW hRow None,HACCESSOR hAccessor None,void *pData None)
HRESULT None None.get_LateReadRate(long* pVal None)
HRESULT None None.get_LateReads(long* pVal None)
HRESULT None None.get_LateSendRate(long* pVal None)
HRESULT None None.GetLeafConditionInfo([out None None,optional] PROPERTYKEY *ppropkey,[out None None,optional] CONDITION_OPERATION *pcop,[out None None,optional] PROPVARIANT *pPropVar)
HRESULT None None.get_Left(long *pLeft None)
HRESULT None None.get_Left([out] long *pLeft)
HRESULT None None.GetLength(DWORD* pdwLength None)
HRESULT None None.get_length(LONG *count None)
HRESULT None None.get_length(long *dataLength None)
HRESULT None None.get_length(long *listLength None)
HRESULT None None.GetLevel([in] UINT nChannel,[out] float *pfLevelDB)
HRESULT None None.GetLexicalData([out] LPWSTR *ppszInputString,[out] ITokenCollection **ppTokens,[out] LCID *plcid,[out] IUnknown **ppWordBreaker)
HRESULT None None.GetLicenseConnection([out] IWRdsProtocolLicenseConnection **ppLicenseConnection)
HRESULT None None.GetLicenseConnection([out] IWTSProtocolLicenseConnection **ppLicenseConnection)
HRESULT None None.GetLightEnable([in] DWORD Index,[out None None,retval] BOOL *pEnable)
HRESULT None None.GetLight([in] DWORD Index,[out] D3DLight9 *pLight)
HRESULT None None.get_Limits(IWMSServerLimits** pVal None)
HRESULT None None.get_LineAlternates([out None None,retval] IInkRecognitionAlternates **LineAlternates)
HRESULT None None.get_line(long *lineNumber None)
HRESULT None None.get_linepos(long *linePosition None)
HRESULT None None.GetLinkedTopics([out] LPOLESTR *lpCompiledHelpFiles)
HRESULT None None.GetLinkReference([out] LPWSTR *ppszLinkReference)
HRESULT None None.GetLinkUpdateOptions([in] DWORD dwLink,[out] DWORD *lpdwUpdateOpt)
HRESULT None None.GetListContents([in] BSTR location,[in] VARIANT *pContext,[in] BSTR bstrListType,[in] BSTR bstrParams,[in] DWORD dwListCookie)
HRESULT None None.GetListPadInfo([in] LPOLESTR pszGroup,[out] MMC_LISTPAD_INFO *lpListPadInfo)
HRESULT None None.get_LocalBypass([out None None,retval] BOOL *pfLocalBypass)
HRESULT None None.get_LocalControl([out] long *pState)
HRESULT None None.GetLocalEffectsState([out] BOOL *pbEnabled)
HRESULT None None.GetLocaleID([out] LCID *pLocaleID)
HRESULT None None.GetLocale([out None None,optional] LPWSTR *ppszLocaleName)
HRESULT None None.GetLocalId([out] UINT *pnId)
HRESULT None None.get_LocalIPAddress(BSTR* pbstrLocalIpAddress None)
HRESULT None None.GetLogClientID([out] BOOL *pfLogClientID)
HRESULT None None.get_LoggingURL(BSTR* pbstrLoggingURL None)
HRESULT None None.GetLoggingUrlCount([out] DWORD *pdwUrlCount)
HRESULT None None.GetLoggingUrl([in] DWORD dwIndex,[out] LPWSTR pwszUrl,[in None None,out] DWORD *pcchUrl)
HRESULT None None.get_LogoIconURL(BSTR *pbstrLogoURL None)
HRESULT None None.GetLogonErrorRedirector([out] IWRdsProtocolLogonErrorRedirector **ppLogonErrorRedir)
HRESULT None None.GetLogonErrorRedirector([out] IWTSProtocolLogonErrorRedirector **ppLogonErrorRedir)
HRESULT None None.get_LostPackets(long *pLostPackets None)
HRESULT None None.get_Loudness([out] BOOL *pfLoudness)
HRESULT None None.GetLRBChallenge([in] BYTE *pMachineID,[in] DWORD dwMachineIDLength,[in] BYTE *pChallenge,[in] DWORD dwChallengeLength,[out] BYTE *pChallengeOutput,[out] DWORD *pdwChallengeOutputLength)
HRESULT None None.GetMainPackageDependencies([out None None,retval] IAppxManifestMainPackageDependenciesEnumerator **mainPackageDependencies)
HRESULT None None.GetManageModule([out] ICertManageModule **ppManageModule)
HRESULT None None.GetManifest([out None None,retval] IAppxBundleManifestReader **manifestReader)
HRESULT None None.GetManualStreamSelection([out] BOOL *pfSelection)
HRESULT None None.get_Manufacturer([out] BSTR *pVal)
HRESULT None None.GetMarkerCount([out] WORD *pcMarkers)
HRESULT None None.GetMarker([in] WORD wIndex,[out] WCHAR *pwszMarkerName,[in] WORD *pcchMarkerNameLen,[out] QWORD *pcnsMarkerTime)
HRESULT None None.GetMarkerTime([in] long MarkerNum,[out] double *pMarkerTime)
HRESULT None None.GetMasterClock(LPGUID pguidClock None,IReferenceClock** ppReferenceClock None)
HRESULT None None.GetMasterStream([out] LONG *pStream)
HRESULT None None.GetMasterVolumeLevel([out] float *pfLevelDB)
HRESULT None None.GetMasterVolumeLevelScalar([out] float *pfLevel)
HRESULT None None.GetMatchingVolume([out] LPCWSTR *pszVolume)
HRESULT None None.GetMaterial([out] D3DMATERIAL9 *pMaterial)
HRESULT None None.GetMatrix([out None None,retval] XPS_MATRIX *matrix)
HRESULT None None.GetMatrixTransform([out] DXGI_MATRIX_3X2_F *pMatrix)
HRESULT None None.GetMaxDynamicObjectCount([out] UINT32 *value)
HRESULT None None.get_maxExclusive(BSTR* maxExclusive None)
HRESULT None None.GetMaxIdealImageSize(long *pWidth None,long *pHeight None)
HRESULT None None.GetMaxIdealImageSize([out] long *pWidth,[out] long *pHeight)
HRESULT None None.GetMaximumCacheSize([out] DWORD *pBytes)
HRESULT None None.GetMaximumClients([out] DWORD *pdwMaxClients)
HRESULT None None.GetMaximumFrameLatency([out] UINT *pMaxLatency)
HRESULT None None.GetMaxKeyFrameSpacing([out] LONGLONG *pllTime)
HRESULT None None.GetMaxLength([out] DWORD *pcbMaxLength)
HRESULT None None.GetMaxNetPacketSize([out] DWORD *pdwMaxNetPacketSize)
HRESULT None None.GetMaxOutputSampleSize([in] DWORD dwOutput,[out] DWORD *pcbMax)
HRESULT None None.GetMaxPacketSize([out] DWORD *pdwMaxPacketSize)
HRESULT None None.GetMaxPreprocessingPasses([in] DWORD dwInputNum,[in] DWORD dwFlags,[out] DWORD *pdwMaxNumPasses)
HRESULT None None.GetMaxSize([out] UINT *pcbMaxSize)
HRESULT None None.GetMaxSpeedFactor([out] double *pdblFactor)
HRESULT None None.GetMaxStreamSampleSize([in] WORD wStream,[out] DWORD *pcbMax)
HRESULT None None.GetMediaItem([out] IMFPMediaItem **ppIMFPMediaItem)
HRESULT None None.get_MediaParameterName(long EntryNum None,long Index None,BSTR *pbstrName None)
HRESULT None None.get_MediaParsers(IWMSPlugins** pVal None)
HRESULT None None.GetMediaPlayer([out] IMFPMediaPlayer **ppMediaPlayer)
HRESULT None None.get_MediaState([out] long *pState)
HRESULT None None.GetMediaTime(LONGLONG *pStart None,LONGLONG *pEnd None)
HRESULT None None.GetMediaTime([out] LONGLONG *pTimeStart,[out] LONGLONG *pTimeEnd)
HRESULT None None.GetMediaType(AM_MEDIA_TYPE **ppMediaType None)
HRESULT None None.GetMediaType([out] IMFMediaType **ppIMediaType)
HRESULT None None.get_MediaType([out] long *plMediaType)
HRESULT None None.GetMediaType([out] WM_MEDIA_TYPE *pType,[in None None,out] DWORD *pcbType)
HRESULT None None.GetMenuLanguages([out] LCID *pLanguages,[in] ULONG ulMaxLanguages,[out] ULONG *puActualLanguages)
HRESULT None None.get_MessageDrain([in] OAHWND *Drain)
HRESULT None None.get_MessageDrain(OAHWND *Drain None)
HRESULT None None.GetMessageDrain([out] HWND *hwnd)
HRESULT None None.GetMetadataTracks([out] IMFTimedTextTrackList **ppMetadataTracks)
HRESULT None None.GetMeteringChannelCount([out] UINT *pnChannelCount)
HRESULT None None.get_Midline([out None None,retval] VARIANT *Midline)
HRESULT None None.get_MinClientPacketSize(long* plMinClientMtu None)
HRESULT None None.GetMinIdealImageSize(long *pWidth None,long *pHeight None)
HRESULT None None.GetMinIdealImageSize([out] long *pWidth,[out] long *pHeight)
HRESULT None None.GetMinIdealVideoSize([out] LONG *lpWidth,[out] LONG *lpHeight)
HRESULT None None.GetMinimumSupportedVersion([out] DWORD *pVersion)
HRESULT None None.get_minLength(VARIANT* minLength None)
HRESULT None None.GetMiscStatus([in] DWORD dwAspect,[out] DWORD *pdwStatus)
HRESULT None None.GetMixFormat([out] WAVEFORMATEX **ppDeviceFormat)
HRESULT None None.GetMixingPrefs([in] DWORD *dwMixerPrefs)
HRESULT None None.GetMixingPrefs([out] DWORD *pdwMixerPrefs)
HRESULT None None.GetModeInfo([in] long Mode,[out] long *pWidth,[out] long *pHeight,[out] long *pDepth)
HRESULT None None.get_Mode([out] AMTunerModeType *plMode)
HRESULT None None.GetMode([out] DWORD *dwFlags)
HRESULT None None.get_Mode([out] InterleavingMode *pMode)
HRESULT None None.get_Mode([out] long *pMode)
HRESULT None None.GetModified([out None None,retval] SYSTEMTIME *modified)
HRESULT None None.GetMoniker([in] DWORD dwAssign,[in] DWORD dwWhichMoniker,[out] IMoniker **ppmk)
HRESULT None None.get_MonikerName(BSTR* pbstrVal None)
HRESULT None None.get_Monitor(HMONITOR* phMon None)
HRESULT None None.GetMonitor([out] long *Monitor)
HRESULT None None.get_MoreInfoBannerURL(BSTR *pbstrMoreInfoBannerURL None)
HRESULT None None.get_MoreInfoText(BSTR *pbstrMoreInfoText None)
HRESULT None None.get_MouseIcon([out None None,retval] IPictureDisp **MouseIcon)
HRESULT None None.get_Mouse([out] IVMMouse **mouse)
HRESULT None None.get_MultisessionInterfaces([out] SAFEARRAY *pVal)
HRESULT None None.GetMute([out] BOOL *pbMute)
HRESULT None None.GetMute([out] BOOL *pbMuted)
HRESULT None None.GetMute([out] BOOL *pfMute)
HRESULT None None.GetMutualExclusionCount([out] DWORD *pcME)
HRESULT None None.GetMutualExclusionCount([out] DWORD *pcMutexs)
HRESULT None None.GetMutualExclusion([in] DWORD dwMEIndex,[out] IWMMutualExclusion **ppME)
HRESULT None None.get_name(BSTR *attributeName None)
HRESULT None None.get_Name(BSTR* pVal None)
HRESULT None None.get_name(BSTR *rootName None)
HRESULT None None.GetNamedEntity([in] LPCWSTR pszValue,[out None None,retval] INamedEntity **ppNamedEntity)
HRESULT None None.getNamedItem(BSTR name None,IXMLDOMNode **namedItem None)
HRESULT None None.get_Name(long lIndex None,ITransformProperty** ppProperty None)
HRESULT None None.get_Name([out] BSTR *pbstrName)
HRESULT None None.GetName([out] BSTR *pbstrName)
HRESULT None None.get_Name([out] BSTR *ppName)
HRESULT None None.get_Name([out] BSTR *virtualServerName)
HRESULT None None.GetName([out] LPCWSTR *ppName)
HRESULT None None.GetName([out] LPWSTR *ppsz)
HRESULT None None.GetName([out] LPWSTR *ppszName)
HRESULT None None.GetName([out] LPWSTR *ppwstrName)
HRESULT None None.GetName([out None None,retval] IOpcPartUri **name)
HRESULT None None.get_Name([out None None,retval] LPCWSTR *pszName)
HRESULT None None.GetName([out None None,retval] LPWSTR *name)
HRESULT None None.get_Name([out None None,retval] VARIANT *pVarName)
HRESULT None None.GetName([out] WCHAR *pwszName,[in None None,out] DWORD *pcchName)
HRESULT None None.GetName([out] WCHAR *pwszName,[in None None,out] WORD *pcchName)
HRESULT None None.get_NameResolver([out] IAzNameResolver **ppNameResolver)
HRESULT None None.GetNamesForInputs(IWMWriter* pWriter None)
HRESULT None None.get_namespaces(IXMLDOMSchemaCollection ** namespaceCollection)
HRESULT None None.GetNamespaces([out] LPCWSTR **prefixes,[out] LPCWSTR **namespaces,[out] UINT32 *count)
HRESULT None None.get_namespaceURI(BSTR *namespaceURI None)
HRESULT None None.get_namespaceURI(BSTR* namespaceURI None)
HRESULT None None.GetNativeVideoSize([out] DWORD *cx,[out] DWORD *cy)
HRESULT None None.GetNativeVideoSize([out] LONG *lpWidth,[out] LONG *lpHeight,[out] LONG *lpARWidth,[out] LONG *lpARHeight)
HRESULT None None.GetNativeVideoSize([out] SIZE *pszVideo,[out] SIZE *pszARVideo)
HRESULT None None.GetNaturalExtent([in] DWORD dwAspect,[in] LONG lindex,[in] DVTARGETDEVICE *ptd,[in] HDC hicTargetDev,[in] DVEXTENTINFO *pExtentInfo,[out] LPSIZEL pSizel)
HRESULT None None.GetNavigateState([out] BNSTATE *pbnstate)
HRESULT None None.get_NestedPlaylist(IXMLDOMElement* pPlaylistEntry None,IWMSPlaylist** ppPlaylist None)
HRESULT None None.GetNetSourceAdminInterface([in] LPCWSTR pszStreamName,[out] VARIANT *pVal)
HRESULT None None.get_NetworkAdapters([out] IVMNetworkAdapterCollection **networkInterfaceCollection)
HRESULT None None.GetNetworkInboundAccess(BOOL * pbInbound)
HRESULT None None.GetNetworkOutboundAccess(BOOL * pbOutbound)
HRESULT None None.GetNetworkProtocol([out] WMT_NET_PROTOCOL *pProtocol)
HRESULT None None.GetNetworkTIPAccess(BOOL * pbNetworkTIPAccess)
HRESULT None None.GetNetworkTransactionAccess(BOOL * pbNetworkTransactionAccess)
HRESULT None None.get_newEnum(IUnknown **ppUnk None)
HRESULT None None.get__NewEnum([out] IUnknown **enumerator)
HRESULT None None.get__NewEnum([out] IUnknown **ppEnum)
HRESULT None None.get__NewEnum([out None None,retval] IUnknown **ppEnumVariant)
HRESULT None None.GetNewTargetCount([out] UINT *pcNewTarget)
HRESULT None None.GetNextExtension([out] LPCLSID pExtCLSID)
HRESULT None None.get_next(IXMLDOMParseError2 **objErr None)
HRESULT None None.GetNextRegisteredDevice([out] IWMRegisteredDevice **ppDevice)
HRESULT None None.GetNextSample([in] WORD wStreamNum,[out] INSSBuffer **ppSample,[out] QWORD *pcnsSampleTime,[out] QWORD *pcnsDuration,[out] DWORD *pdwFlags,[out] DWORD *pdwOutputNum,[out] WORD *pwStreamNum)
HRESULT None None.GetNextSample([out] DWORD *pdwStatusFlags,[out] WORD *pwStreamNumber,[out] IMFSample **ppISample)
HRESULT None None.get_nextSibling(IXMLDOMNode **nextSibling None)
HRESULT None None.GetNextUpdateTime([out None None,retval] DATE *pDate)
HRESULT None None.GetNodeByID([in] TOPOID qwTopoNodeID,[out] IMFTopologyNode **ppNode)
HRESULT None None.get_nodeName(BSTR *name None)
HRESULT None None.GetNodeNameSize(ULONG * pcbNodeNameSize)
HRESULT None None.get_nodeType(DOMNodeType *type None)
HRESULT None None.get_nodeTypedValue(VARIANT *typedValue None)
HRESULT None None.get_nodeTypeString(BSTR *nodeType None)
HRESULT None None.get_nodeValue(VARIANT *value None)
HRESULT None None.get_notationName(BSTR *name None)
HRESULT None None.get_notations(IXMLDOMNamedNodeMap **notationMap None)
HRESULT None None.GetNumberOfChapters([in] ULONG ulTitle,[out] ULONG *pulNumOfChapters)
HRESULT None None.get_NumberOfLines([out] long *plNumberOfLines)
HRESULT None None.GetNumberOfStreams([out] DWORD *pdwStreamCount)
HRESULT None None.get_NumCategories([out] DWORD *pdwNumCategories)
HRESULT None None.GetNumExtendedAttributes(DWORD* pdwValueName None)
HRESULT None None.get_NumInputConnections([out] long *plNumInputConnections)
HRESULT None None.get_NumPendingConnections([out None None,retval] DWORD *pNumPendingConnections)
HRESULT None None.GetNumPropIDS([out] ULONG *num)
HRESULT None None.GetNumProtocolsSupported([out] DWORD *pcProtocols)
HRESULT None None.get_NumSessions([out None None,retval] DWORD *pNumSessions)
HRESULT None None.get_NumSources([out] DWORD *pdwNumSources)
HRESULT None None.GetObjectAttributes2([out] DWORD *pdwAttributes,[out] DWORD *pdwAttributesEx,[out] _WAVEFORMATEX *pAudioFormat,[out] _VIDEOINFOHEADER *pVideoFormat)
HRESULT None None.GetObjectContext([out None None,retval] ObjectContext **ppContext)
HRESULT None None.GetObjectInformation([out] PSI_OBJECT_INFO pObjectInfo)
HRESULT None None.GetObject([in] IMoniker *pmkObjectName,[out] IUnknown **ppunkObject)
HRESULT None None.GetObject([in] REFGUID rguidObjectID,[in] REFIID riid,[out] void **ppv)
HRESULT None None.GetObject([out] IUnknown **ppIUnknown)
HRESULT None None.GetObject([out] IUnknown **ppObject)
HRESULT None None.GetObjectParam([in] LPOLESTR pszKey,[out] IUnknown **ppunk)
HRESULT None None.get_ObjectPicker([out] IAzObjectPicker **ppObjectPicker)
HRESULT None None.GetOleObject([out] IOleObject **ppobjv)
HRESULT None None.GetOpacityMaskBrushLocal([out None None,retval] IXpsOMBrush **opacityMaskBrush)
HRESULT None None.GetOpacityMaskBrushLookup([out None None,retval] LPWSTR *key)
HRESULT None None.GetOpacityMaskBrush([out None None,retval] IXpsOMBrush **opacityMaskBrush)
HRESULT None None.GetOpacity([out None None,retval] FLOAT *opacity)
HRESULT None None.GetOpenParentState([out] DWORD *pdwState)
HRESULT None None.GetOperations([in] BSTR bstrScopeName,[out] IAzOperations **ppOperationCollection)
HRESULT None None.GetOPMInfo([out] MF_MEDIA_ENGINE_OPM_STATUS *pStatus,[out] BOOL *pConstricted)
HRESULT None None.GetOption([in] STRUCTURED_QUERY_SINGLE_OPTION option,[out None None,retval] PROPVARIANT *pOptionValue)
HRESULT None None.getOption(SERVERXMLHTTP_OPTION option None,VARIANT * value)
HRESULT None None.GetOptionsObject(ITransactionOptions ** ppOptions)
HRESULT None None.GetOptionsObject(ITransactionOptions **ppOptions None)
HRESULT None None.GetOptions([out] EXPLORER_BROWSER_OPTIONS *pdwFlag)
HRESULT None None.GetOptions([out] FILEOPENDIALOGOPTIONS *fos)
HRESULT None None.GetOptions([out] LIBRARYOPTIONFLAGS *plofOptions)
HRESULT None None.GetOptions(XACTOPT * pOptions)
HRESULT None None.GetOrientation(D3DVECTOR * pvOrientFront,D3DVECTOR * pvOrientTop)
HRESULT None None.GetOriginalCreatorSID([out] PSID *pSID)
HRESULT None None.GetOriginalData(HROW hRow None,HACCESSOR hAccessor None,void *pData None)
HRESULT None None.GetOrigin([out None None,retval] XPS_POINT *origin)
HRESULT None None.get_OSProductType(WMS_OS_PRODUCT_TYPE* pVal None)
HRESULT None None.get_OutgoingDistributionAllocatedBandwidth(long* pVal None)
HRESULT None None.get_OutgoingDistributionBandwidth(long* pVal None)
HRESULT None None.get_OutgoingDistributionConnections(IWMSOutgoingDistributionConnections** pVal None)
HRESULT None None.get_OutgoingDistributionConnections(long* pVal None)
HRESULT None None.get_OutgoingDistributionSendRate(long* pVal None)
HRESULT None None.GetOutputAvailableType([in] DWORD dwOutputStreamID,[in] DWORD dwTypeIndex,[out] IMFMediaType **ppType)
HRESULT None None.GetOutputConnector([in] ULONG uiIndex,[out None None,retval] IMILBitmapEffectOutputConnector **ppConnector)
HRESULT None None.GetOutputCount([out] DWORD *pcOutputs)
HRESULT None None.GetOutputCurrentType(DWORD dwOutputStreamIndex None,[out] DMO_MEDIA_TYPE *pmt)
HRESULT None None.GetOutputCurrentType([in] DWORD dwOutputStreamID,[out] IMFMediaType **ppType)
HRESULT None None.get_OutputEnable([out] long *plOutputEnable)
HRESULT None None.GetOutputFormatCount([in] DWORD dwOutputNumber,[out] DWORD *pcFormats)
HRESULT None None.GetOutputFormatCount([in] DWORD dwOutputNum,[out] DWORD *pcFormats)
HRESULT None None.GetOutputFormat([in] DWORD dwOutputNumber,[in] DWORD dwFormatNumber,[out] IWMOutputMediaProps **ppProps)
HRESULT None None.GetOutputFormat(LPBITMAPINFOHEADER lpbmih None)
HRESULT None None.GetOutputMutex([in] DWORD dwOutputNum,[in] DWORD dwMutexNum,[out] IUnknown **ppMutex)
HRESULT None None.GetOutputNumberForStream([in] WORD wStreamNum,[out] DWORD *pdwOutputNum)
HRESULT None None.GetOutputPrefType([in] DWORD dwOutputIndex,[out] IMFMediaType **ppType)
HRESULT None None.GetOutputProps([in] DWORD dwOutputNum,[out] IWMOutputMediaProps **ppOutput)
HRESULT None None.GetOutputRect([in] DWORD dwStreamID,[out] VMR9NormalizedRect *pRect)
HRESULT None None.GetOutputSetting([in] DWORD dwOutputNum,[in] LPCWSTR pszName,[out] WMT_ATTR_DATATYPE *pType,[out] BYTE *pValue,[in None None,out] WORD *pcbLength)
HRESULT None None.GetOutputSizeInfo(DWORD dwOutputStreamIndex None,[out] DWORD *pcbSize,[out] DWORD *pcbAlignment)
HRESULT None None.GetOutputStatus([out] DWORD *pdwFlags)
HRESULT None None.GetOutputStreamInfo(DWORD dwOutputStreamIndex None,[out] DWORD *pdwFlags)
HRESULT None None.GetOutputStreamInfo([in] DWORD dwOutputStreamID,[out] MFT_OUTPUT_STREAM_INFO *pStreamInfo)
HRESULT None None.GetOutputTrustAuthorityByIndex([in] DWORD dwIndex,[out] IMFOutputTrustAuthority **ppauthority)
HRESULT None None.GetOutputType(DWORD dwOutputStreamIndex None,DWORD dwTypeIndex None,[out] DMO_MEDIA_TYPE *pmt)
HRESULT None None.get_output(VARIANT* pOutput None)
HRESULT None None.GetOverlayFX([out] DWORD *lpdwOverlayFX)
HRESULT None None.get_ownerDocument(IXMLDOMDocument **DOMDocument None)
HRESULT None None.GetOwnerIntegrityLevel([out] ULONG *pLevel)
HRESULT None None.get_Owner(OAHWND *Owner None)
HRESULT None None.GetOwner([out None None,retval] IXpsOMDocument **document)
HRESULT None None.GetOwner([out None None,retval] IXpsOMDocumentSequence **documentSequence)
HRESULT None None.GetOwner([out None None,retval] IXpsOMGradientBrush **owner)
HRESULT None None.GetOwner([out None None,retval] IXpsOMPackage **package)
HRESULT None None.GetOwner([out None None,retval] IXpsOMPageReference **owner)
HRESULT None None.GetOwner([out None None,retval] IXpsOMPageReference **pageReference)
HRESULT None None.get_Owner([out] OAHWND *pOwner)
HRESULT None None.get_ownerTemplate(IXSLTemplate** ppTemplate None)
HRESULT None None.GetPackageDependencies([out None None,retval] IAppxManifestPackageDependenciesEnumerator **dependencies)
HRESULT None None.GetPackageObjectReference([out None None,retval] IOpcSignatureReference **packageObjectReference)
HRESULT None None.GetPacketCount(DWORD* pdwNumPackets None)
HRESULT None None.get_PacketDescription([out None None,retval] VARIANT *PacketDescription)
HRESULT None None.GetPadding([out] double *pBefore,[out] double *pStart,[out] double *pAfter,[out] double *pEnd,[out] MF_TIMED_TEXT_UNIT_TYPE *pUnitType)
HRESULT None None.GetPageInfo(LPPROPPAGEINFO pPageInfo None)
HRESULT None None.GetPageInfo([out] PROPPAGEINFO *pPageInfo)
HRESULT None None.GetPage([out None None,retval] IXpsOMPage **page)
HRESULT None None.GetPageReferences([out None None,retval] IXpsOMPageReferenceCollection **pageReferences)
HRESULT None None.GetPages([out] CAUUID *pPages)
HRESULT None None.GetPaletteEntries([in] UINT PaletteNumber,[in None None,out] PALETTEENTRY *pEntries)
HRESULT None None.GetPalette([out] DWORD *pdwColors,[out] PALETTEENTRY **ppPalette)
HRESULT None None.GetPalette([out] HPALETTE *hpal)
HRESULT None None.get_Pan([out] long *pValue,[out] long *pFlags)
HRESULT None None.get_PanRelative([out] long *pValue,[out] long *pFlags)
HRESULT None None.get_PanTilt([out] long *pPanValue,[out] long *pTiltValue,[out] long *pFlags)
HRESULT None None.get_PanTiltRelative([out] long *pPanValue,[out] long *pTiltValue,[out] long *pFlags)
HRESULT None None.get_ParallelPorts([out] IVMParallelPortCollection **parallelPortCollection)
HRESULT None None.GetParamCustData([in] UINT indexFunc,[in] UINT indexParam,[in] REFGUID guid,[out] VARIANT *pVarVal)
HRESULT None None.GetParameterInfo(DB_UPARAMS *pcParams None,DBPARAMINFO **prgParamInfo None,OLECHAR **ppNamesBuffer None)
HRESULT None None.GetParameters([out] DWORD *pdwFlags,[out] DWORD *pdwQueue)
HRESULT None None.GetParam([in] DWORD dwParamIndex,[out] MP_DATA *pValue)
HRESULT None None.GetParam(REFGUID rguidType None,DWORD dwGroupBits None,DWORD dwIndex None,MUSIC_TIME mtTime None,MUSIC_TIME* pmtNext None,void* pParam None)
HRESULT None None.GetParentFolder([out] ppShellFolder **IShellFolder,[out] ppidl *LPITEMIDLIST)
HRESULT None None.GetParentItem([out] IWiaItem2 **ppIWiaItem2)
HRESULT None None.get_parentNode(IXMLDOMNode **parent None)
HRESULT None None.GetParentScopeVersionId([in] LPCWSTR pszUrl,[out None None,retval] LONG *plScopeId)
HRESULT None None.GetParentSite([out] IOleInPlaceSite **ppipsite)
HRESULT None None.GetParentState([out] DWORD *pdwState)
HRESULT None None.get_parseError(IXMLDOMParseError **errorObj None)
HRESULT None None.GetPartById([in] UINT nId,[out] IPart **ppPart)
HRESULT None None.GetPartialFileCount([out] UINT *pcPartialFiles)
HRESULT None None.GetPart([in] IOpcPartUri *name,[out None None,retval] IOpcPart **part)
HRESULT None None.GetPart([in] UINT nIndex,[out] IPart **ppPart)
HRESULT None None.GetPartitionId([out] GUID *pGuid)
HRESULT None None.GetPartName([out None None,retval] IOpcPartUri **partName)
HRESULT None None.GetPartSet([out None None,retval] IOpcPartSet **partSet)
HRESULT None None.GetPartType([out] PartType *pPartType)
HRESULT None None.get_PatternOrURL([out None None,retval] LPWSTR *ppszPatternOrURL)
HRESULT None None.get_PeakCounters(IWMSServerPeakCounters** pVal None)
HRESULT None None.GetPeakValue([out] float *pfPeak)
HRESULT None None.GetPendingRows(HCHAPTER hReserved None,DBPENDINGSTATUS dwRowStatus None,DBCOUNTITEM *pcPendingRows None,HROW **prgPendingRows None,DBPENDINGSTATUS **prgPendingStatus None)
HRESULT None None.get_PerOutgoingDistributionConnectionBandwidth(long* pVal None)
HRESULT None None.get_PerPlayerConnectionBandwidth(long* pVal None)
HRESULT None None.get_PerPlayerRapidStartBandwidth(long* pVal None)
HRESULT None None.GetPersistentItemsChangedSink([out None None,retval] ISearchPersistentItemsChangedSink **ppISearchPersistentItemsChangedSink)
HRESULT None None.get_PFramesPerKeyFrame([out] long *pPFramesPerKeyFrame)
HRESULT None None.GetPhysicalType([out] long *pType,[out] LPOLESTR *ppszType)
HRESULT None None.GetPidl([out] LPITEMIDLIST *ppidl)
HRESULT None None.GetPinCategory(IPin *pPin None,GUID *pPinCategory None)
HRESULT None None.GetPinState([out] ULONG *requestID)
HRESULT None None.GetPixelShaderConstantB([in] UINT StartRegister,[in None None,out] BOOL *pConstantData,[in] UINT BoolCount)
HRESULT None None.GetPixelShaderConstantF([in] UINT StartRegister,[in None None,out] float *pConstantData,[in] UINT Vector4fCount)
HRESULT None None.GetPixelShaderConstantI([in] UINT StartRegister,[in None None,out] int *pConstantData,[in] UINT Vector4iCount)
HRESULT None None.GetPixelShaderDesc(D3DX11_PASS_SHADER_DESC *pDesc None)
HRESULT None None.GetPixelShader([out None None,retval] IDirect3DPixelShader9 **ppShader)
HRESULT None None.GetPlaftormWorkQueueMMCSSClass([in] DWORD dwPlatformWorkQueueId,[out] LPWSTR pwszClass,[in None None,out] DWORD *pcchClass)
HRESULT None None.get_PlatformId([out] PlatformId *pVal)
HRESULT None None.GetPlayed([out] IMFMediaTimeRange **ppPlayed)
HRESULT None None.get_PlayerAcknowledgementTimeout(long* pVal None)
HRESULT None None.get_PlayerAllocatedBandwidth(long* pVal None)
HRESULT None None.get_PlayerBytesSent(VARIANT* pVal None)
HRESULT None None.get_PlayerCacheDeliveryRate(long* pVal None)
HRESULT None None.get_PlayerInactivityTimeout(long* pVal None)
HRESULT None None.GetPlayerParentalLevel([out] ULONG *pulParentalLevel,[out] BYTE pulCountryCode[2])
HRESULT None None.get_PlayerSendRate(long* pVal None)
HRESULT None None.get_Players(IWMSPlayers** pVal None)
HRESULT None None.GetPlaylistGenerationID(DWORD* pdwID None)
HRESULT None None.get_PlaylistParsers(IWMSPlugins** pVal None)
HRESULT None None.GetPlayMode([out] WMT_PLAY_MODE *pMode)
HRESULT None None.get_PluggableTerminalClasses([in] BSTR bstrTerminalSuperclass,[in] long lMediaType,[out] VARIANT *pVariant)
HRESULT None None.GetPointer(BYTE **ppBuffer None)
HRESULT None None.GetPointer([out] BYTE **ppBuffer)
HRESULT None None.GetPolicies([out] SYNCMGR_HANDLER_POLICIES *pmPolicies)
HRESULT None None.GetPolicy([out None None,retval] XPS_SIGN_POLICY *policy)
HRESULT None None.GetPolicyServerId([out None None,retval] BSTR *pValue)
HRESULT None None.GetPolicyServerUrl([out None None,retval] BSTR *pValue)
HRESULT None None.GetPortableDevice([out] IPortableDevice **ppIPortableDevice)
HRESULT None None.GetPosition([out] LONG *Left,[out] LONG *Top,[out] LONG *Right,[out] LONG *Bottom)
HRESULT None None.GetPositions(LONGLONG *pCurrent None,LONGLONG *pStop None)
HRESULT None None.GetPostRestoreFailureMsg([out] BSTR *pbstrPostRestoreFailureMsg)
HRESULT None None.GetPostViewFormatCount([in] WORD wStreamNumber,[out] DWORD *pcFormats)
HRESULT None None.GetPostViewFormat([in] WORD wStreamNumber,[in] DWORD dwFormatNumber,[out] IWMMediaProps **ppProps)
HRESULT None None.get_PowerlineFrequency([out] long *pValue,[out] long *pFlags)
HRESULT None None.GetPreferredClsidByIndex([in] DWORD index,[out] GUID *subType,[out] CLSID *clsid)
HRESULT None None.GetPreferredClsid([in] REFGUID subType,[out] CLSID *clsid)
HRESULT None None.get_prefix(BSTR *prefixString None)
HRESULT None None.GetPrepareForBackupFailureMsg([out] BSTR *pbstrFailureMsg)
HRESULT None None.GetPrepareInfo(byte * pPrepInfo)
HRESULT None None.GetPrepareInfoSize(ULONG * pcbPrepInfo)
HRESULT None None.GetPreRestoreFailureMsg([out] BSTR *pbstrPreRestoreFailureMsg)
HRESULT None None.GetPreroll([out] LONGLONG *pllPreroll)
HRESULT None None.get_PrerollTime([out] REFTIME *pllTime)
HRESULT None None.GetPresentationAttribute([in] REFGUID guidMFAttribute,[out] PROPVARIANT *pvValue)
HRESULT None None.GetPresenterNextStep([out] SYNCMGR_PRESENTER_NEXT_STEP *pnPresenterNextStep)
HRESULT None None.get_preserveWhiteSpace(VARIANT_BOOL *isPreserving None)
HRESULT None None.GetPreviousBackupStamp([out] BSTR *pbstrBackupStamp)
HRESULT None None.get_previousSibling(IXMLDOMNode **previousSibling None)
HRESULT None None.GetPrimaryBufferInterface([out] LPDIRECTSOUNDBUFFER *lplpdsb)
HRESULT None None.GetPrintTicketResource([out None None,retval] IXpsOMPrintTicketResource **printTicketResource)
HRESULT None None.GetPriorityRecords([out] WM_STREAM_PRIORITY_RECORD *pRecordArray,[in None None,out] WORD *pcRecords)
HRESULT None None.get_PrivacyMode([out] long *pValue,[out] long *pFlags)
HRESULT None None.GetPrivateData([in] REFGUID guid,[in None None,out] UINT *pDataSize,[out None None,optional] void *pData)
HRESULT None None.GetPrivateData([in] REFGUID guid,[in None None,out] UINT *pDataSize,[out] void *pData)
HRESULT None None.GetPrivateData([in] REFGUID Name,[in None None,out] UINT *pDataSize,[out] void *pData)
HRESULT None None.GetPrivateData([in] REFGUID refguid,[in None None,out] void *pData,[in None None,out] DWORD *pSizeOfData)
HRESULT None None.GetProcAmpControlRange([in] DWORD dwStreamID,[in None None,out] VMR9ProcAmpControlRange *lpClrControl)
HRESULT None None.GetProcAmpRange([in] UINT ProcAmpCap,[out] DXVA2_ValueRange *pRange)
HRESULT None None.GetProcessCount([out] ULONG *pulCount)
HRESULT None None.GetProcessId([out] DWORD *pRetVal)
HRESULT None None.get_ProductID([out] BSTR *productID)
HRESULT None None.GetProgID([out] LPWSTR *ppszProgID)
HRESULT None None.GetProgress([out] DWORD *pdwPercentComplete)
HRESULT None None.GetProhibitedCaretStopCount([out None None,retval] UINT32 *prohibitedCaretStopCount)
HRESULT None None.GetProhibitedCaretStops([in None None,out] UINT32 *count,[out] UINT32 *prohibitedCaretStops)
HRESULT None None.GetProhibitedCaretStops([in None None,out] UINT32 *prohibitedCaretStopCount,[out] UINT32 *prohibitedCaretStops)
HRESULT None None.GetProperties(ALLOCATOR_PROPERTIES *pProps None)
HRESULT None None.GetProperties(const ULONG cPropertyIDSets,const DBPROPIDSET rgPropertyIDSets[],ULONG * pcPropertySets,DBPROPSET ** prgPropertySets)
HRESULT None None.GetProperties(const ULONG cPropertyIDSets,const DBPROPIDSET rgPropertyIDSets[],ULONG *pcPropertySets None,DBPROPSET **prgPropertySets None)
HRESULT None None.GetProperties(DWORD cbProperties None,BYTE *pbProperties None)
HRESULT None None.get_Properties(IWMSNamedValues** pVal None)
HRESULT None None.GetProperties([out] ALLOCATOR_PROPERTIES *pProps)
HRESULT None None.GetProperties([out] MFCLOCK_PROPERTIES *pClockProperties)
HRESULT None None.GetProperties([out None None,retval] IAppxManifestProperties **packageProperties)
HRESULT None None.GetProperties([out] VDS_ISCSI_TARGET_PROP *pTargetProp)
HRESULT None None.GetProperties([out] VDS_PORT_PROP *pPortProp)
HRESULT None None.GetProperties([out] VDS_PROVIDER_PROP *pProviderProp)
HRESULT None None.GetProperties([out] VDS_VOLUME_PROP *pVolumeProperties)
HRESULT None None.GetProperties(ULONG cPropertyIDSets None,const DBPROPIDSET rgPropertyIDSets[],ULONG *pcPropertySets None,DBPROPSET **prgPropertySets None)
HRESULT None None.getProperty(BSTR name None,VARIANT* value None)
HRESULT None None.GetPropertyCount([out] DWORD *pcBufferProperties)
HRESULT None None.GetPropertyCount([out] DWORD *pdwCount)
HRESULT None None.GetPropertyFlags([out None None,retval] EnrollmentPolicyServerPropertyFlags *pValue)
HRESULT None None.GetPropertyInfo(ULONG cPropertyIDSets None,const DBPROPIDSET rgPropertyIDSets[],ULONG *pcPropertyInfoSets None,DBPROPINFOSET **prgPropertyInfoSets None,OLECHAR **ppDescBuffer None)
HRESULT None None.GetProperty([in] GUID guidBufferProperty,[out] void *pvBufferProperty,[in None None,out] DWORD *pdwBufferPropertySize)
HRESULT None None.GetProperty([in] LPCWSTR pszName,[out] WMT_ATTR_DATATYPE *pType,[out] BYTE *pValue,[in None None,out] DWORD *pdwSize)
HRESULT None None.GetPropertyKey([out] PROPERTYKEY *pkey)
HRESULT None None.GetPropertyStorage([out] SERIALIZEDPROPSTORAGE **ppsps,[out] DWORD *pcb)
HRESULT None None.GetPropertyType([out] VARTYPE *pvartype)
HRESULT None None.GetProtocolHandles([out] HANDLE_PTR *pKeyboardHandle,[out] HANDLE_PTR *pMouseHandle,[out] HANDLE_PTR *pBeepHandle,[out] HANDLE_PTR *pVideoHandle)
HRESULT None None.GetProtocolName([out] WCHAR *pwszProtocol,[in None None,out] DWORD *pcchProtocol)
HRESULT None None.get_ProviderOptions([out None None,retval] ProviderOptions *pRetVal)
HRESULT None None.GetProvider([out] IVdsProvider **ppProvider)
HRESULT None None.get_ProvidesNotifications([out None None,retval] BOOL *pfProvidesNotifications)
HRESULT None None.GetProxyBypassForLocal([in] LPCWSTR pwszProtocol,[out] BOOL *pfBypassForLocal)
HRESULT None None.GetProxyExceptionList([in] LPCWSTR pwszProtocol,[out] WCHAR *pwszExceptionList,[in None None,out] DWORD *pcchExceptionList)
HRESULT None None.get_ProxyFactoryMapping([out None None,retval] IUIAutomationProxyFactoryMapping **factoryMapping)
HRESULT None None.GetProxyHostName([in] LPCWSTR pwszProtocol,[out] WCHAR *pwszHostName,[in None None,out] DWORD *pcchHostName)
HRESULT None None.GetProxyPort([in] LPCWSTR pwszProtocol,[out] DWORD *pdwPort)
HRESULT None None.GetProxySettings([in] LPCWSTR pwszProtocol,[out] WMT_PROXY_SETTINGS *pProxySetting)
HRESULT None None.get_publicId(BSTR *publicID None)
HRESULT None None.get_publicId(VARIANT *publicID None)
HRESULT None None.GetPublishedAppInfo([out] PUBAPPINFO *pInfo)
HRESULT None None.GetPublisher([out None None,retval] LPWSTR *publisher)
HRESULT None None.GetPublisherProperty([in] BSTR bstrPropertyName,[out None None,retval] VARIANT *propertyValue)
HRESULT None None.get_PublishingPointName(BSTR* pVal None)
HRESULT None None.get_PublishingPoints(IWMSPublishingPoints** pVal None)
HRESULT None None.GetPushSourceFlags([out] ULONG *pFlags)
HRESULT None None.GetQSecurity(LPCWSTR wszComputerName None,LPCWSTR wszQueueName None)
HRESULT None None.getQualifiedItem(BSTR baseName None,BSTR namespaceURI None,IXMLDOMNode **qualifiedItem None)
HRESULT None None.get_QueryContentLocale([out None None,retval] LCID *plcid)
HRESULT None None.get_QueryContentProperties([out None None,retval] LPWSTR *ppszContentProperties)
HRESULT None None.GetQueryHelper([out None None,retval] ISearchQueryHelper **ppSearchQueryHelper)
HRESULT None None.get_QueryKeywordLocale([out None None,retval] LCID *plcid)
HRESULT None None.get_QueryMaxResults([out None None,retval] LONG *pcMaxResults)
HRESULT None None.GetQuery([out] ICondition **ppQueryNode,[out] IEntity **ppMainType)
HRESULT None None.get_QuerySelectColumns([out None None,retval] LPWSTR *ppszSelectColumns)
HRESULT None None.get_QuerySorting([out None None,retval] LPWSTR *ppszSorting)
HRESULT None None.get_QuerySyntax([out None None,retval] SEARCH_QUERY_SYNTAX *pQuerySyntax)
HRESULT None None.get_QueryTermExpansion([out None None,retval] SEARCH_TERM_EXPANSION *pExpandTerms)
HRESULT None None.get_QueryWhereRestrictions([out None None,retval] LPWSTR *ppszRestrictions)
HRESULT None None.GetQueueAuthenticateProp(LPCWSTR wszQueueFormatName None,UCHAR *pbValue None)
HRESULT None None.GetQueueBasepriorityProp(LPCWSTR wszQueueFormatName None,SHORT *piValue None)
HRESULT None None.GetQueueCreateTimeProp(LPCWSTR wszQueueFormatName None,LONG *plValue None)
HRESULT None None.GetQueueInstanceProp(LPCWSTR wszQueueFormatName None,CLSID *pIDValue None)
HRESULT None None.GetQueueJournalProp(LPCWSTR wszQueueFormatName None,UCHAR *pbValue None)
HRESULT None None.GetQueueJournalQuotaProp(LPCWSTR wszQueueFormatName None,ULONG *pulValue None)
HRESULT None None.GetQueueLabelProp(LPCWSTR wszQueueFormatName None,LPWSTR *pwszValue None)
HRESULT None None.GetQueueMulticastAddressProp(LPCWSTR wszQueueFormatName None,LPWSTR *pwszValue None)
HRESULT None None.GetQueuePathnameDNSProp(LPCWSTR wszQueueFormatName None,LPWSTR *pwszValue None)
HRESULT None None.GetQueuePathnameProp(LPCWSTR wszQueueFormatName None,LPWSTR *pwszValue None)
HRESULT None None.GetQueuePrivLevelProp(LPCWSTR wszQueueFormatName None,ULONG *pulValue None)
HRESULT None None.GetQueueQuotaProp(LPCWSTR wszQueueFormatName None,ULONG *pulValue None)
HRESULT None None.GetQueueTransactionProp(LPCWSTR wszQueueFormatName None,UCHAR *pbValue None)
HRESULT None None.GetQueueTypeProp(LPCWSTR wszQueueFormatName None,CLSID *pIDValue None)
HRESULT None None.GetRadiiSizes([out None None,retval] XPS_SIZE *radiiSizes)
HRESULT None None.getRange_BacklightCompensation([out] long *pMin,[out] long *pMax,[out] long *pSteppingDelta,[out] long *pDefault,[out] long *pCapsFlag)
HRESULT None None.getRange_Brightness([out] long *pMin,[out] long *pMax,[out] long *pSteppingDelta,[out] long *pDefault,[out] long *pCapsFlag)
HRESULT None None.getRange_ColorEnable([out] long *pMin,[out] long *pMax,[out] long *pSteppingDelta,[out] long *pDefault,[out] long *pCapsFlag)
HRESULT None None.getRange_Contrast([out] long *pMin,[out] long *pMax,[out] long *pSteppingDelta,[out] long *pDefault,[out] long *pCapsFlag)
HRESULT None None.getRange_DigitalMultiplier([out] long *pMin,[out] long *pMax,[out] long *pSteppingDelta,[out] long *pDefault,[out] long *pCapsFlag)
HRESULT None None.GetRangeEndOffset([out] QWORD *qwpRangeEnd)
HRESULT None None.getRange_Exposure([out] long *pMin,[out] long *pMax,[out] long *pSteppingDelta,[out] long *pDefault,[out] long *pCapsFlag)
HRESULT None None.getRange_ExposureRelative([out] long *pMin,[out] long *pMax,[out] long *pSteppingDelta,[out] long *pDefault,[out] long *pCapsFlag)
HRESULT None None.getRange_Focus([out] long *pMin,[out] long *pMax,[out] long *pSteppingDelta,[out] long *pDefault,[out] long *pCapsFlag)
HRESULT None None.getRange_FocusRelative([out] long *pMin,[out] long *pMax,[out] long *pSteppingDelta,[out] long *pDefault,[out] long *pCapsFlag)
HRESULT None None.getRange_Gain([out] long *pMin,[out] long *pMax,[out] long *pSteppingDelta,[out] long *pDefault,[out] long *pCapsFlag)
HRESULT None None.getRange_Gamma([out] long *pMin,[out] long *pMax,[out] long *pSteppingDelta,[out] long *pDefault,[out] long *pCapsFlag)
HRESULT None None.getRange_Hue([out] long *pMin,[out] long *pMax,[out] long *pSteppingDelta,[out] long *pDefault,[out] long *pCapsFlag)
HRESULT None None.getRange_Iris([out] long *pMin,[out] long *pMax,[out] long *pSteppingDelta,[out] long *pDefault,[out] long *pCapsFlag)
HRESULT None None.getRange_IrisRelative([out] long *pMin,[out] long *pMax,[out] long *pSteppingDelta,[out] long *pDefault,[out] long *pCapsFlag)
HRESULT None None.getRange_Pan([out] long *pMin,[out] long *pMax,[out] long *pSteppingDelta,[out] long *pDefault,[out] long *pCapsFlag)
HRESULT None None.getRange_PanRelative([out] long *pMin,[out] long *pMax,[out] long *pSteppingDelta,[out] long *pDefault,[out] long *pCapsFlag)
HRESULT None None.getRange_PowerlineFrequency([out] long *pMin,[out] long *pMax,[out] long *pSteppingDelta,[out] long *pDefault,[out] long *pCapsFlag)
HRESULT None None.getRange_Roll([out] long *pMin,[out] long *pMax,[out] long *pSteppingDelta,[out] long *pDefault,[out] long *pCapsFlag)
HRESULT None None.getRange_Saturation([out] long *pMin,[out] long *pMax,[out] long *pSteppingDelta,[out] long *pDefault,[out] long *pCapsFlag)
HRESULT None None.getRange_Sharpness([out] long *pMin,[out] long *pMax,[out] long *pSteppingDelta,[out] long *pDefault,[out] long *pCapsFlag)
HRESULT None None.getRange_Tilt([out] long *pMin,[out] long *pMax,[out] long *pSteppingDelta,[out] long *pDefault,[out] long *pCapsFlag)
HRESULT None None.getRange_TiltRelative([out] long *pMin,[out] long *pMax,[out] long *pSteppingDelta,[out] long *pDefault,[out] long *pCapsFlag)
HRESULT None None.getRange_WhiteBalanceComponent([out] long *pMin,[out] long *pMax,[out] long *pSteppingDelta,[out] long *pDefault,[in None None,out] long *pCapsFlag)
HRESULT None None.getRange_WhiteBalance([out] long *pMin,[out] long *pMax,[out] long *pSteppingDelta,[out] long *pDefault,[out] long *pCapsFlag)
HRESULT None None.getRange_Zoom([out] long *pMin,[out] long *pMax,[out] long *pSteppingDelta,[out] long *pDefault,[out] long *pCapsFlag)
HRESULT None None.getRange_ZoomRelative([out] long *pMin,[out] long *pMax,[out] long *pSteppingDelta,[out] long *pDefault,[out] long *pCapsFlag)
HRESULT None None.GetRasterStatus([in] UINT iSwapChain,[out] D3DRASTER_STATUS *pRasterStatus)
HRESULT None None.get_Rate(double *pdRate None)
HRESULT None None.GetRate([out] double *dRate)
HRESULT None None.get_Rate([out] double *pdblRate)
HRESULT None None.get_Rate([out] double *pdRate)
HRESULT None None.GetRate([out] float *pflRate)
HRESULT None None.get_Rating(BSTR *pbstrRating None)
HRESULT None None.get_RawViewCondition([out None None,retval] IUIAutomationCondition **condition)
HRESULT None None.get_RawViewWalker([out None None,retval] IUIAutomationTreeWalker **walker)
HRESULT None None.GetRdpProperty([in] BSTR propertyName,[out None None,retval] VARIANT *pValue)
HRESULT None None.get_readyState(long* plState None)
HRESULT None None.get_readyState(long* pvarVal None)
HRESULT None None.get_readyState(long * value)
HRESULT None None.GetRealTimeMode([out] BOOL *pfEnabled)
HRESULT None None.get_reason(BSTR *reasonString None)
HRESULT None None.get_ReceivedPackets(long *pReceivedPackets None)
HRESULT None None.GetReceivePostViewSamples([in] WORD wStreamNum,[out] BOOL *pfReceivePostViewSamples)
HRESULT None None.GetReceiveSelectionCallbacks([out] BOOL *pfGetCallbacks)
HRESULT None None.GetReceiveStreamSamples([in] WORD wStreamNum,[out] BOOL *pfReceiveStreamSamples)
HRESULT None None.get_ReceptionQuality(long *pReceptionQuality None)
HRESULT None None.GetRecordCount([out] WORD *pwRecordCount)
HRESULT None None.GetRecordCount(ULONG * pcRecords)
HRESULT None None.GetRecordName([in] WORD wRecordNumber,[out] WCHAR *pwszRecordName,[in None None,out] WORD *pcchRecordName)
HRESULT None None.GetRect([out] LPRECT prcView)
HRESULT None None.GetRedirectionCapabilities([out] KF_REDIRECTION_CAPABILITIES *pCapabilities)
HRESULT None None.GetRedrawAlways(LPBOOL lpbOption None)
HRESULT None None.GetRedrawAlways([out] LPBOOL lpbOption)
HRESULT None None.GetRefTypeInfo([in] HREFTYPE hRefType,[out] ITypeInfo **ppTInfo)
HRESULT None None.GetRefTypeOfImplType([in] UINT index,[out] HREFTYPE *pRefType)
HRESULT None None.get_RegFilterCollection([out] IDispatch **ppUnk)
HRESULT None None.GetRegion([out] IMFTimedTextRegion **ppRegion)
HRESULT None None.GetRegisteredDeviceByID([in] DWORD dwRegisterType,[in] BYTE *pbCertificate,[in] DWORD cbCertificate,[in] DRM_VAL16 SerialNumber,[out] IWMRegisteredDevice **ppDevice)
HRESULT None None.GetRegisteredSink([out] ICallFrameEvents **ppsink)
HRESULT None None.GetRegisterState([out] MBN_REGISTER_STATE *registerState)
HRESULT None None.GetRegistrationStats([in] DWORD dwRegisterType,[out] DWORD *pcRegisteredDevices)
HRESULT None None.GetRelationship([in] LPCWSTR pszRelationName,[out None None,retval] IRelationship **pRelationship)
HRESULT None None.GetRelationshipSelectorEnumerator([out None None,retval] IOpcRelationshipSelectorEnumerator **selectorEnumerator)
HRESULT None None.GetRelationshipSet([out None None,retval] IOpcRelationshipSet **relationshipSet)
HRESULT None None.GetRelationshipSigningOption([out None None,retval] OPC_RELATIONSHIPS_SIGNING_OPTION *relationshipSigningOption)
HRESULT None None.GetRelationshipsPartUri([out None None,retval] IOpcPartUri **relationshipPartUri)
HRESULT None None.GetRelationshipType([out None None,retval] LPCWSTR *relationshipType)
HRESULT None None.GetRelativeDescription([in] REFPROPVARIANT propvar1,[in] REFPROPVARIANT propvar2,[out] LPWSTR *ppszDesc1,[out] LPWSTR *ppszDesc2)
HRESULT None None.GetRelativeDescriptionType([out] PROPDESC_RELATIVEDESCRIPTION_TYPE *prdt)
HRESULT None None.GetRelativePosition([out] DWORD *pdwLeft,[out] DWORD *pdwTop,[out] DWORD *pdwRight,[out] DWORD *pdwBottom)
HRESULT None None.get_Renderer([out None None,retval] IInkRenderer **CurrentInkRenderer)
HRESULT None None.GetRenderingMode([out] DWORD *pMode)
HRESULT None None.GetRenderingPrefs([out] DWORD *dwRenderFlags)
HRESULT None None.GetRenderingPrefs([out] DWORD *pdwRenderFlags)
HRESULT None None.GetRenderMode([out] WICRawRenderMode *pRenderMode)
HRESULT None None.GetRenderState([in] D3DRENDERSTATETYPE State,[out None None,retval] DWORD *pValue)
HRESULT None None.GetRenderTargetData([in] IDirect3DSurface9 *pRenderTarget,[in] IDirect3DSurface9 *pDestSurface)
HRESULT None None.GetRenderTarget([in] DWORD RenderTargetIndex,[out] IDirect3DSurface9 **ppRenderTarget)
HRESULT None None.GetReplicaKeyMap([out] IReplicaKeyMap **ppReplicaKeyMap)
HRESULT None None.GetRequestedRuntimeVersion([in] LPWSTR pExe,[out] LPWSTR pVersion,[in] DWORD cchBuffer,[out] DWORD *pdwLength)
HRESULT None None.GetRequestedSigner([out None None,retval] LPWSTR *signerName)
HRESULT None None.GetRequestId([out None None,retval] LPWSTR *requestId)
HRESULT None None.GetRequestIdString([out None None,retval] BSTR *pValue)
HRESULT None None.GetRequestSignByDate([out None None,retval] LPWSTR *dateString)
HRESULT None None.GetRequiredProtections([out] DWORD *pFrameProtectionFlags)
HRESULT None None.get_ReservedMixedAttributeValue([out None None,retval] IUnknown **mixedAttributeValue)
HRESULT None None.get_ReservedNotSupportedValue([out None None,retval] IUnknown **notSupportedValue)
HRESULT None None.GetResolvedTime(REFERENCE_TIME rtTime None,REFERENCE_TIME* prtResolved None,DWORD dwTimeResolveFlags None)
HRESULT None None.GetResourceCharacteristics([out] DWORD *pCharacteristics)
HRESULT None None.get_responseBody(VARIANT* pvarBody None)
HRESULT None None.get_responseBody(VARIANT* pvarVal None)
HRESULT None None.getResponseHeader(BSTR bstrHeader None,BSTR* pbstrValue None)
HRESULT None None.GetResponseHeader(const WCHAR *pwszHeader,WCHAR *ppwszValue None)
HRESULT None None.get_responseStream(VARIANT* pvarBody None)
HRESULT None None.get_responseStream(VARIANT* pvarVal None)
HRESULT None None.get_responseText(BSTR* pbstrBody None)
HRESULT None None.get_responseText(VARIANT* pvarVal None)
HRESULT None None.get_responseXML(IDispatch** ppBody None)
HRESULT None None.get_responseXML(IDispatch** ppXmlDom None)
HRESULT None None.GetRestoreMetadata([out] BSTR *pbstrRestoreMetadata)
HRESULT None None.GetRestorePosition(long *pLeft None,long *pTop None,long *pWidth None,long *pHeight None)
HRESULT None None.GetRestorePosition([out] long *pLeft,[out] long *pTop,[out] long *pWidth,[out] long *pHeight)
HRESULT None None.GetRestoreSubcomponentCount([out] UINT *pcRestoreSubcomponent)
HRESULT None None.GetRestoreTarget([out] VSS_RESTORE_TARGET *pTarget)
HRESULT None None.GetResult([out] IShellItem **ppsi)
HRESULT None None.GetResults([out] IShellItemArray **ppenum)
HRESULT None None.GetResultViewType2([in] MMC_COOKIE cookie,[in None None,out] PRESULT_VIEW_TYPE_INFO pResultViewType)
HRESULT None None.GetResultViewType([in] long cookie,[out] LPOLESTR *ppViewType,[out] long *pViewOptions)
HRESULT None None.GetRevision([out None None,retval] LPWSTR *revision)
HRESULT None None.GetRoamingText([out] BSTR *roamingText)
HRESULT None None.get_Roll([out] long *pValue,[out] long *pFlags)
HRESULT None None.get_RollRelative([out] long *pValue,[out] long *pFlags)
HRESULT None None.get_RootDirectories(IWMSRootDirectories** ppRootDirectories None)
HRESULT None None.GetRootElement([out None None,retval] IUIAutomationElement **root)
HRESULT None None.GetRootItem([out] IWiaItem2 **ppIWiaItem2)
HRESULT None None.get_Root([out] IFsiDirectoryItem **pVal)
HRESULT None None.get_RootURL([out None None,retval] LPWSTR *ppszURL)
HRESULT None None.GetRowsAt(HWATCHREGION hReserved1 None,HCHAPTER hChapter None,DBBKMARK cbBookmark None,const BYTE *pBookmark,DBROWOFFSET lRowsOffset None,DBROWCOUNT cRows None,DBCOUNTITEM *pcRowsObtained None,HROW **prghRows None)
HRESULT None None.GetRowsAtRatio(HWATCHREGION hReserved1 None,HCHAPTER hChapter None,DBCOUNTITEM ulNumerator None,DBCOUNTITEM ulDenominator None,DBROWCOUNT cRows None,DBCOUNTITEM *pcRowsObtained None,HROW **prghRows None)
HRESULT None None.GetRowStatus(HCHAPTER hReserved None,DBCOUNTITEM cRows None,const HROW rghRows[],DBPENDINGSTATUS rgPendingStatus[] None)
HRESULT None None.GetRunningObjectTable([out] IRunningObjectTable **pprot)
HRESULT None None.GetRuntimeId([out None None,retval] SAFEARRAY **pRetVal)
HRESULT None None.GetSampleDuration([out] LONGLONG *phnsSampleDuration)
HRESULT None None.GetSampleFlags([out] DWORD *pdwSampleFlags)
HRESULT None None.GetSamplerState([in] DWORD Sampler,[in] D3DSAMPLERSTATETYPE Type,[out] DWORD *pValue)
HRESULT None None.GetSampleTime([out] LONGLONG *phnsSampleTime)
HRESULT None None.get_Saturation([out] long *pValue,[out] long *pFlags)
HRESULT None None.GetSaveAsProgress([out] DWORD *pdwPercent)
HRESULT None None.get_SavedStateFilePath([out] BSTR *savedStateFilePath)
HRESULT None None.get_ScanMode([out] long *pValue,[out] long *pFlags)
HRESULT None None.getSchema(BSTR namespaceURI None,ISchema** schema None)
HRESULT None None.get_schemaLocations(ISchemaStringCollection** schemaLocations None)
HRESULT None None.GetSchemaProvider([out None None,retval] ISchemaProvider **ppSchemaProvider)
HRESULT None None.GetSchemas(ULONG *pcSchemas None,GUID **prgSchemas None,ULONG **prgRestrictionSupport None)
HRESULT None None.get_schemas(VARIANT* otherCollection None)
HRESULT None None.GetSchemaVersion([out] LONG *plMajorVersion,[out] LONG *plMinorVersion)
HRESULT None None.GetScissorRect([out] RECT *pRect)
HRESULT None None.GetScopePriority([out] PRIORITY_LEVEL *priority,[out] DWORD *scopeStatisticsEventFrequency)
HRESULT None None.GetScopeStatistics([out] DWORD *indexedDocumentCount,[out] DWORD *oustandingAddCount,[out] DWORD *oustandingModifyCount)
HRESULT None None.GetScriptCount([out] WORD *pcScripts)
HRESULT None None.GetScript([in] WORD wIndex,[out] WCHAR *pwszType,[in None None,out] WORD *pcchTypeLen,[out] WCHAR *pwszCommand,[in None None,out] WORD *pcchCommandLen,[out] QWORD *pcnsScriptTime)
HRESULT None None.GetScrollMode([out] MF_TIMED_TEXT_SCROLL_MODE *pScrollMode)
HRESULT None None.get_SCSIControllers([out] IVMSCSIControllerCollection **scsiControllerCollection)
HRESULT None None.GetSDFromIADs(IADs *pObject None,IADsSecurityDescriptor **ppSD None)
HRESULT None None.GetSDFromIDirectoryObject(IDirectoryObject *pObject None,PSECURITY_DESCRIPTOR *pSecurityDescriptor None)
HRESULT None None.GetSearchInfoFlags([out] PROPDESC_SEARCHINFO_FLAGS *ppdsiFlags)
HRESULT None None.GetSecondarySecurity([out] PSECURITY_OBJECT *pSecurityObjects,[out] PULONG pSecurityObjectCount)
HRESULT None None.GetSectorSize([out] ULONG *pcbSectorSize)
HRESULT None None.GetSecurityCallContext([out] ISecurityCallContext **ppObject)
HRESULT None None.GetSecurityDescriptor([out] BYTE *pSD,[in] DWORD dwSize,[out] DWORD *pdwLength)
HRESULT None None.GetSecurityFlags([out] ULONG *pFlags)
HRESULT None None.get_Security([out] IVMSecurity **outSecurity)
HRESULT None None.get_Security([out] SecurityProperty **ppSecurityProperty)
HRESULT None None.GetSecurityProvider([out] CLSID *pSPClsid)
HRESULT None None.GetSeekable([out] IMFMediaTimeRange **ppPlayed)
HRESULT None None.GetSegmentFromState(IDirectMusicSegmentState* pSegState None,IDirectMusicSegment8** ppSeg None)
HRESULT None None.GetSegmentStrokePattern([out None None,retval] XPS_SEGMENT_STROKE_PATTERN *segmentStrokePattern)
HRESULT None None.GetSegmentStrokes([in None None,out] UINT32 *segmentCount,[in None None,out] BOOL *segmentStrokes)
HRESULT None None.GetSelectedItems([out] IShellItemArray **psiaitems)
HRESULT None None.get_SelectionContainer([out None None,retval] IRawElementProviderSimple **pRetVal)
HRESULT None None.GetSelection([out None None,retval] IUIAutomationTextRangeArray **ranges)
HRESULT None None.GetSelection([out] UINT *pnIdSelected)
HRESULT None None.get_SelectionType([out None None,retval] PrintSchemaSelectionType *pSelectionType)
HRESULT None None.get_SelfIntersections([out None None,retval] VARIANT *Intersections)
HRESULT None None.GetSerialization([out] CREDENTIAL_PROVIDER_GET_SERIALIZATION_RESPONSE *pcpgsr,[out] CREDENTIAL_PROVIDER_CREDENTIAL_SERIALIZATION *pcpcs,[out] LPWSTR *ppszOptionalStatusText,[out] CREDENTIAL_PROVIDER_STATUS_ICON *pcpsiOptionalStatusIcon)
HRESULT None None.get_SerialPorts([out] IVMSerialPortCollection **serialPortCollection)
HRESULT None None.GetService([in] REFGUID guidService,[in] REFIID riid,[out] LPVOID *ppvObject)
HRESULT None None.GetService([in] REFIID riid,[out] REFIID **service)
HRESULT None None.GetService([in] REFIID riid,[out] void **ppv)
HRESULT None None.GetServiceState(AM_LINE21_CCSTATE *lpState None)
HRESULT None None.GetServiceState([out] AM_WST_STATE *lpState)
HRESULT None None.GetSessionCapabilities([out] DWORD *pdwCaps)
HRESULT None None.GetSessionErrorStatus([out] HRESULT *phrSessionError)
HRESULT None None.GetSessionIdentifier([out] LPWSTR *pRetVal)
HRESULT None None.GetSession([in] int SessionCount,[out] IAudioSessionControl **Session)
HRESULT None None.GetSessionInstanceIdentifier([out] LPWSTR *pRetVal)
HRESULT None None.get_SessionStartBlock([out] LONG *pVal)
HRESULT None None.GetSetCodePage([in] VARIANT *pvarIn,[out] VARIANT *pvarOut)
HRESULT None None.GetShadowConnection([out] IWRdsProtocolShadowConnection **ppShadowConnection)
HRESULT None None.GetShadowConnection([out] IWTSProtocolShadowConnection **ppShadowConnection)
HRESULT None None.GetSharedBitmap([out] HBITMAP *phbm)
HRESULT None None.GetSharedHandle([out] HANDLE *pSharedHandle)
HRESULT None None.get_SharedPlaylist(IWMSPlaylist** pVal None)
HRESULT None None.GetSharedResourceAdapterLuid([in] HANDLE hResource,[out] LUID *pLuid)
HRESULT None None.get_Sharpness([out] long *pValue,[out] long *pFlags)
HRESULT None None.GetShutdownStatus([out] MFSHUTDOWN_STATUS *pStatus)
HRESULT None None.get_Sids([out] VARIANT *)
HRESULT None None.GetSignalPath([in] IPart *pIPartFrom,[in] IPart *pIPartTo,[in] BOOL bRejectMixedPaths,[out] IPartsList **ppParts)
HRESULT None None.GetSignatureBlockResources([out None None,retval] IXpsOMSignatureBlockResourceCollection **signatureBlockResources)
HRESULT None None.GetSignatureEnumerator([out None None,retval] IOpcDigitalSignatureEnumerator **signatureEnumerator)
HRESULT None None.GetSignatureId([out None None,retval] LPCWSTR *signatureId)
HRESULT None None.GetSignatureId([out None None,retval] LPWSTR *sigId)
HRESULT None None.GetSignatureMethod([out None None,retval] LPCWSTR *signatureMethod)
HRESULT None None.GetSignatureOriginPartName([out None None,retval] IOpcPartUri **signatureOriginPartName)
HRESULT None None.GetSignature([out None None,retval] IXpsSignature **signature)
HRESULT None None.GetSignaturePartName([out None None,retval] IOpcPartUri **signaturePartName)
HRESULT None None.GetSignaturePartReferenceEnumerator([out None None,retval] IOpcSignaturePartReferenceEnumerator **partReferenceEnumerator)
HRESULT None None.GetSignaturePartReferenceSet([out None None,retval] IOpcSignaturePartReferenceSet **partReferenceSet)
HRESULT None None.GetSignatureRelationshipReferenceEnumerator([out None None,retval] IOpcSignatureRelationshipReferenceEnumerator **relationshipReferenceEnumerator)
HRESULT None None.GetSignatureRelationshipReferenceSet([out None None,retval] IOpcSignatureRelationshipReferenceSet **relationshipReferenceSet)
HRESULT None None.GetSignatures([out None None,retval] IXpsSignatureCollection **signatures)
HRESULT None None.GetSignatureValue([out] UINT8 **signatureHashValue,[out] UINT32 *count)
HRESULT None None.GetSignatureValue([out] UINT8 **signatureValue,[out] UINT32 *count)
HRESULT None None.GetSignatureXml([out] UINT8 **signatureXml,[out] UINT32 *count)
HRESULT None None.GetSigningLocale([out None None,retval] LPWSTR *place)
HRESULT None None.GetSigningTimeFormat([out None None,retval] OPC_SIGNATURE_TIME_FORMAT *timeFormat)
HRESULT None None.GetSigningTime([out None None,retval] LPCWSTR *signingTime)
HRESULT None None.GetSigningTime([out None None,retval] LPWSTR *sigDateTimeString)
HRESULT None None.GetSilos([out] IEnhancedStorageSilo ***ppIEnhancedStorageSilos,[out] ULONG *pcEnhancedStorageSilos)
HRESULT None None.GetSimpleAudioVolume([in] LPCGUID AudioSessionGuid,[in] DWORD CrossProcessSession,[out] ISimpleAudioVolume **AudioVolume)
HRESULT None None.GetSinkCount([out] DWORD *pcSinks)
HRESULT None None.GetSinkInfo([out] MF_TRANSCODE_SINK_INFO *pSinkInfo)
HRESULT None None.GetSite([in] REFIID riid,[out] void **ppvSite)
HRESULT None None.GetSizeMax([out] ULARGE_INTEGER *pcbSize)
HRESULT None None.GetSizeMax([out] ULARGE_INTEGER *pCbSize)
HRESULT None None.get_Size([out] CY *pSize)
HRESULT None None.GetSlideshowOptions([out] DESKTOP_SLIDESHOW_OPTIONS *options,[out] UINT *slideshowTick)
HRESULT None None.GetSnapinDescription([out] LPOLESTR *lpDescription)
HRESULT None None.GetSnapshot([in] SnapshotEncodingType snapshotEncoding,[in] SnapshotFormatType snapshotFormat,[in] ULONG snapshotWidth,[in] ULONG snapshotHeight,[out None None,retval] BSTR *snapshotData)
HRESULT None None.GetSnapsToPixels([out None None,retval] BOOL *snapsToPixels)
HRESULT None None.get_SortColumns([out] BSTR *pbstrSortColumns)
HRESULT None None.GetSortOrder(DBORDINAL *pcColumns None,DBORDINAL *prgColumns[] None,DBSORT *prgOrders[] None)
HRESULT None None.GetSourceDisplayName([out] LPOLESTR *ppszDisplayName)
HRESULT None None.GetSourceDuration(IMFMediaSource *pSource None,MFTIME *pDuration None)
HRESULT None None.GetSourceFlags(IMFSourceReader *pReader None,ULONG *pulFlags None)
HRESULT None None.get_SourceHeight(long *pSourceHeight None)
HRESULT None None.get_SourceHeight([out] long *pSourceHeight)
HRESULT None None.get_SourceLeft(long *pSourceLeft None)
HRESULT None None.get_SourceLeft([out] long *pSourceLeft)
HRESULT None None.GetSourceMoniker([out] IMoniker **ppmk)
HRESULT None None.get_SourceNodeId([out] DWORD *pdwPinId)
HRESULT None None.GetSourcePosition(long *pLeft None,long *pTop None,long *pWidth None,long *pHeight None)
HRESULT None None.GetSourcePosition([out] long *pLeft,[out] long *pTop,[out] long *pWidth,[out] long *pHeight)
HRESULT None None.get_SourceProtocol(long *pSourceProtocol None)
HRESULT None None.GetSourceRect([out] RECT *pRect)
HRESULT None None.GetSourceSize([out] UINT *pWidth,[out] UINT *pHeight)
HRESULT None None.get_SourceTop(long *pSourceTop None)
HRESULT None None.get_SourceTop([out] long *pSourceTop)
HRESULT None None.GetSourceUri([out None None,retval] IOpcUri **sourceUri)
HRESULT None None.GetSourceViewSizePreference([out] APPLICATION_VIEW_SIZE_PREFERENCE *sourceSizeAfterLaunch)
HRESULT None None.get_SourceWidth([out] long *pSourceWidth)
HRESULT None None.GetSpatialAudioMetadataItemsBufferLength([in] UINT16 maxItemCount,[out] UINT32 *bufferLength)
HRESULT None None.GetSpatialAudioMetadataItems([out] ISpatialAudioMetadataItems **metadataItems)
HRESULT None None.get_specified(VARIANT_BOOL *isSpecified None)
HRESULT None None.GetSpecifyPropertyPages([out] ISpecifyPropertyPages **ppSpecifyPropPages,[out] IUnknown ***pppUnknowns,[out] ULONG *pcUnks)
HRESULT None None.GetSpreadMethod([out None None,retval] XPS_SPREAD_METHOD *spreadMethod)
HRESULT None None.get_srcText(BSTR *sourceString None)
HRESULT None None.get_StageFiles([out] VARIANT_BOOL *pVal)
HRESULT None None.get_startModeURI(BSTR * namespaceURI)
HRESULT None None.GetStartStopPosition([out] GUID *pguidStartPositionType,[out] PROPVARIANT *pvStartValue,[out] GUID *pguidStopPositionType,[out] PROPVARIANT *pvStopValue)
HRESULT None None.get_StartTime(DATE* pVal None)
HRESULT None None.GetState(DWORD dwMilliSecsTimeout None,FILTER_STATE *State None)
HRESULT None None.GetState([in None None,unique] IShellItemArray *psiItemArray,[in] BOOL fOkToBeSlow,[out] EXPCMDSTATE *pCmdState)
HRESULT None None.GetState([out] AudioSessionState *pRetVal)
HRESULT None None.GetState([out] DWORD *pdwState)
HRESULT None None.GetState([out] IDvdState **pStateData)
HRESULT None None.GetState([out] IUnknown **ppunkState)
HRESULT None None.GetState([out] MFP_MEDIAPLAYER_STATE *peState)
HRESULT None None.get_State([out None None,retval] InkCursorButtonState *CurrentState)
HRESULT None None.get_State([out] TERMINAL_STATE *pTerminalState)
HRESULT None None.get_State([out] VMVMState *virtualMachineState)
HRESULT None None.get_StaticTerminals([out] VARIANT *pVariant)
HRESULT None None.GetStatistics([in] MF_MEDIA_ENGINE_STATISTIC StatisticID,[out] PROPVARIANT *pStatistic)
HRESULT None None.GetStatistics([in None None,out] WM_READER_STATISTICS *pStatistics)
HRESULT None None.GetStatistics([in] WORD wStreamNum,[out] WM_WRITER_STATISTICS *pStats)
HRESULT None None.GetStatus(HCHAPTER hChapter None,ULONG ulOperation None,DBCOUNTITEM *pulProgress None,DBCOUNTITEM *pulProgressMax None,DBASYNCHPHASE* peAsynchPhase None,LPOLESTR *ppwszStatusText None)
HRESULT None None.GetStatus([in] long StatusItem,[in None None,out] long *pValue)
HRESULT None None.get_status(long* plStatus None)
HRESULT None None.GetStatus([out None None,retval] DIRECTMANIPULATION_STATUS *status)
HRESULT None None.get_Status([out None None,retval] RDV_TASK_STATUS *pStatus)
HRESULT None None.get_statusText(BSTR* pbstrStatus None)
HRESULT None None.get_Status(WMS_CLIENT_STATUS* pVal None)
HRESULT None None.get_Status(WMS_SERVER_STATUS* pVal None)
HRESULT None None.GetStereo3DFramePackingMode([out] MF_MEDIA_ENGINE_S3D_PACKING_MODE *packMode)
HRESULT None None.GetStereo3DRenderMode([out] MF3DVideoOutputType *outputType)
HRESULT None None.GetStopPosition(LONGLONG *pStop None)
HRESULT None None.get_StopTime([out] REFTIME *pllTime)
HRESULT None None.get_StopTime(REFTIME *pllTime None)
HRESULT None None.GetStorageFormat([out] WMT_STORAGE_FORMAT *pnStorageFormat)
HRESULT None None.GetStorageGlobals([out] IWMDMStorageGlobals **ppStorageGlobals)
HRESULT None None.GetStoryFragmentsResource([out None None,retval] IXpsOMStoryFragmentsResource **storyFragmentsResource)
HRESULT None None.GetStreamActiveState([out] BOOL *lpfActive)
HRESULT None None.GetStreamAttribute([in] DWORD dwStreamIndex,[in] REFGUID guidMFAttribute,[out] PROPVARIANT *pvValue)
HRESULT None None.GetStreamByNumber([in] WORD wStreamNum,[out] IWMStreamConfig **ppConfig)
HRESULT None None.GetStreamCount([out] DWORD *pcInputStreams,[out] DWORD *pcOutputStreams)
HRESULT None None.GetStreamCount([out] DWORD *pcStreams)
HRESULT None None.get_StreamErrorRate(long* pVal None)
HRESULT None None.get_StreamFilters(IWMSPlugins** pVal None)
HRESULT None None.GetStreamGroupName([out] WCHAR *pwszName,[in None None,out] WORD *pcchName)
HRESULT None None.GetStreamIDs([in] DWORD dwInputIDArraySize,[out] DWORD *pdwInputIDs,[in] DWORD dwOutputIDArraySize,[out] DWORD *pdwOutputIDs)
HRESULT None None.GetStreamIndexFromFriendlyName([in] UINT32 uifriendlyName,[out] DWORD *pdwActualStreamIndex)
HRESULT None None.GetStream([in] DWORD dwStreamIndex,[out] IWMStreamConfig **ppConfig)
HRESULT None None.GetStream([in] DWORD dwStreamIndex,[out] WORD *pwStreamNumber,[out] WORD *pwStreamFlags)
HRESULT None None.get_StreamingHTTPPlayers(long* pVal None)
HRESULT None None.get_StreamingMMSPlayers(long* pVal None)
HRESULT None None.get_StreamingPlayers(long* pVal None)
HRESULT None None.get_StreamingRTSPPlayers(long* pVal None)
HRESULT None None.GetStreamingState([out] BOOL *pfStreaming)
HRESULT None None.get_StreamingUDPPlayers(long* pVal None)
HRESULT None None.GetStreamingURL([in] WMPStreamingType st,[in] VARIANT *pStreamContext,[out] BSTR *pbstrURL)
HRESULT None None.GetStreamLatency([out] REFERENCE_TIME *phnsLatency)
HRESULT None None.GetStreamLimits([out] DWORD *pdwInputMinimum,[out] DWORD *pdwInputMaximum,[out] DWORD *pdwOutputMinimum,[out] DWORD *pdwOutputMaximum)
HRESULT None None.GetStreamName([out] WCHAR *pwszStreamName,[in None None,out] WORD *pcchStreamName)
HRESULT None None.GetStreamNumberForOutput([in] DWORD dwOutput,[out] WORD *pwStreamNum)
HRESULT None None.GetStreamNumber([out] WORD *pwStreamNum)
HRESULT None None.get_Stream([out] ITStream **ppITStream)
HRESULT None None.GetStream([out None None,retval] IStream **manifestStream)
HRESULT None None.GetStream([out None None,retval] IStream **readerStream)
HRESULT None None.GetStream([out None None,retval] IStream **stream)
HRESULT None None.GetStreamPrioritization([out] IWMStreamPrioritization **ppSP)
HRESULT None None.GetStreamSelected([in] WORD wStreamNum,[out] WMT_STREAM_SELECTION *pSelection)
HRESULT None None.GetStreamSelection([in] DWORD dwStreamIndex,[out] BOOL *pEnabled)
HRESULT None None.GetStreamSelection([in] DWORD dwStreamIndex,[out] BOOL *pfEnabled)
HRESULT None None.GetStreamsForRecord([in] WORD wRecordNumber,[out] WORD *pwStreamNumArray,[in None None,out] WORD *pcStreams)
HRESULT None None.GetStreamSource([in] UINT StreamNumber,[in None None,out] IDirect3DVertexBuffer9 **ppStreamData,[out] UINT *pOffsetInBytes,[out] UINT *pStride)
HRESULT None None.get_Streams([out] VARIANT *pVariant)
HRESULT None None.get_StreamTerminations(long* pVal None)
HRESULT None None.GetStreamTransparent([out] BOOL *pbStreamTransparent)
HRESULT None None.GetStreamType(GUID* pStreamType None)
HRESULT None None.GetStreamType([out] GUID *pguidStreamType)
HRESULT None None.GetStreamWithoutValidation([out None None,retval] IStream **stream)
HRESULT None None.get_StrictFileSystemCompliance([out] VARIANT_BOOL *pVal)
HRESULT None None.get_Strikethrough([out] BOOL *pStrikethrough)
HRESULT None None.GetString([in] REFGUID guidKey,[out] LPWSTR pwszValue,[in] UINT32 cchBufSize,[out] UINT32 *pcchLength)
HRESULT None None.GetStringLength([in] REFGUID guidKey,[out] UINT32 *pcchLength)
HRESULT None None.get_String([out None None,retval] BSTR *RecoString)
HRESULT None None.GetStringValue(LPCWSTR pstrName None,long lNameHint None,LPWSTR* pstrValue None,long lOptions None)
HRESULT None None.GetStrokeBrushLocal([out None None,retval] IXpsOMBrush **brush)
HRESULT None None.GetStrokeBrushLookup([out None None,retval] LPWSTR *lookup)
HRESULT None None.GetStrokeBrush([out None None,retval] IXpsOMBrush **brush)
HRESULT None None.GetStrokeDashCap([out None None,retval] XPS_DASH_CAP *strokeDashCap)
HRESULT None None.GetStrokeDashes([out None None,retval] IXpsOMDashCollection **strokeDashes)
HRESULT None None.GetStrokeDashOffset([out None None,retval] FLOAT *strokeDashOffset)
HRESULT None None.GetStrokeEndLineCap([out None None,retval] XPS_LINE_CAP *strokeEndLineCap)
HRESULT None None.GetStrokeLineJoin([out None None,retval] XPS_LINE_JOIN *strokeLineJoin)
HRESULT None None.GetStrokeMiterLimit([out None None,retval] FLOAT *strokeMiterLimit)
HRESULT None None.get_Strokes([out None None,retval] IInkStrokes **Strokes)
HRESULT None None.GetStrokeStartLineCap([out None None,retval] XPS_LINE_CAP *strokeStartLineCap)
HRESULT None None.GetStrokeThickness([out None None,retval] FLOAT *strokeThickness)
HRESULT None None.GetStyle(IDirectMusicSegment8* pSegment None,DWORD dwStyleIndex None,IDirectMusicStyle8** ppStyle None)
HRESULT None None.get_StyleName([out None None,retval] BSTR *retVal)
HRESULT None None.get_stylesheet(IXMLDOMNode** stylesheet None)
HRESULT None None.GetStyleSimulations([out None None,retval] XPS_STYLE_SIMULATION *styleSimulations)
HRESULT None None.GetSubConditions([in] REFIID riid,[out None None,retval] void **ppv)
HRESULT None None.GetSubject([out None None,retval] LPWSTR *subject)
HRESULT None None.GetSubpictureAttributes([in] ULONG ulStream,[out] DVD_SubpictureAttributes *pAttributes)
HRESULT None None.GetSubpictureLanguage([in] ULONG ulStream,[out] LCID *pLanguage)
HRESULT None None.GetSubscriptions([in] BSTR methodName,[in] BSTR optionalCriteria,[in] int *optionalErrorIndex,[out None None,retval] IEventObjectCollection **ppCollection)
HRESULT None None.GetSubSystem([out] IVdsSubSystem **ppSubSystem)
HRESULT None None.GetSubType([out] GUID *pSubType)
HRESULT None None.GetSubunitCount([out] UINT *pCount)
HRESULT None None.get_SupportDrivers([out] IVMSupportDriverCollection **supportDriverCollection)
HRESULT None None.GetSupportedAudioObjectFormatEnumerator([out] IAudioFormatEnumerator **enumerator)
HRESULT None None.GetSupportedProtocolName([in] DWORD dwProtocolNum,[out] WCHAR *pwszProtocolName,[in None None,out] DWORD *pcchProtocolName)
HRESULT None None.GetSupportedRates([in] BOOL fForwardDirection,[out] float *pflSlowestRate,[out] float *pflFastestRate)
HRESULT None None.get_SupportedWriteSpeedDescriptors([out] SAFEARRAY *supportedSpeedDescriptors)
HRESULT None None.get_SupportedWriteSpeeds([out] SAFEARRAY *supportedSpeeds)
HRESULT None None.GetSurfaceDesc(DDSURFACEDESC *pSurfaceDesc None)
HRESULT None None.GetSurface(IBuffer* pBuffer None,IDirect3DSurface9** ppSurface None)
HRESULT None None.GetSurface([out] IUnknown **ppDirect3DSurface9)
HRESULT None None.GetSurfacePitch(IDirect3DSurface9 *pSrcSurface None,UINT *pSurfacePitch None)
HRESULT None None.GetSurfaceType(DWORD *pSurfaceType None)
HRESULT None None.GetSwapChain([in] UINT iSwapChain,[in] IDirect3DSwapChain9 **ppSwapChain)
HRESULT None None.GetSwitches(DWORD *pSwitches None)
HRESULT None None.GetSyncBatchParameters([out] ISyncKnowledge **ppSyncKnowledge,[out] DWORD *pdwRequestedBatchSize)
HRESULT None None.GetSyncChange([out] ISyncChange **ppSyncChange)
HRESULT None None.GetSyncItem([in] LPCWSTR *ppszItemID,[out] ISyncMgrSyncItem **ppItem)
HRESULT None None.GetSyncSource(IReferenceClock **pClock None)
HRESULT None None.GetSyncSource([out] IReferenceClock **pClock)
HRESULT None None.GetSyncTolerance([in] DWORD *pmsWindow)
HRESULT None None.get_systemId(BSTR *systemID None)
HRESULT None None.get_systemId(VARIANT *systemID None)
HRESULT None None.GetSystemProfileVersion(WMT_VERSION *pdwVersion None)
HRESULT None None.get_Tablet([out None None,retval] IInkTablet **SingleTablet)
HRESULT None None.get_tagName(BSTR *tagName None)
HRESULT None None.get_target(BSTR *name None)
HRESULT None None.get_TargetLoad([out None None,retval] DWORD *pTargetLoad)
HRESULT None None.GetTargetMode([out None None,retval] OPC_URI_TARGET_MODE *targetMode)
HRESULT None None.get_TargetName([out None None,retval] BSTR *targetName)
HRESULT None None.GetTargetUri([out None None,retval] IUri **targetUri)
HRESULT None None.GetTargetViewSizePreference([out] APPLICATION_VIEW_SIZE_PREFERENCE *targetSizeOnLaunch)
HRESULT None None.GetTasks([in] BSTR bstrScopeName,[out] IAzTasks **ppTaskCollection)
HRESULT None None.get_Tasks([out] IVMTaskCollection **taskCollection)
HRESULT None None.GetTCDisplayEnable([out] long *pState)
HRESULT None None.get_TCPEnabled(VARIANT_BOOL* pfEnabled None)
HRESULT None None.GetTCRMode([in] long Param,[out] long *pValue)
HRESULT None None.GetTemplate([in] WMPTaskType task,[in] BSTR location,[in] VARIANT *pContext,[in] BSTR clickLocation,[in] VARIANT *pClickContext,[in] BSTR bstrFilter,[in] BSTR bstrViewParams,[out] BSTR *pbstrTemplateURL,[out] WMPTemplateSize *pTemplateSize)
HRESULT None None.GetTemplates([out None None,retval] IX509CertificateTemplates **pTemplates)
HRESULT None None.get_TerminalClass([out] BSTR *ppTerminalClass)
HRESULT None None.get_Terminals([out] VARIANT *pTerminals)
HRESULT None None.get_TerminalType([out] TERMINAL_TYPE *pType)
HRESULT None None.get_text(BSTR *text None)
HRESULT None None.GetTextTracks([out] IMFTimedTextTrackList **ppTextTracks)
HRESULT None None.GetTexture(IBuffer* pBuffer None,IDirect3DTexture9** ppTexture None)
HRESULT None None.GetTexture([in] DWORD Stage,[out None None,retval] IDirect3DBaseTexture9 **ppTexture)
HRESULT None None.GetTextureStageState([in] DWORD Stage,[in] D3DTEXTURESTAGESTATETYPE Type,[out None None,retval] DWORD *pValue)
HRESULT None None.get_ThirdPartyStreamingEnabled(VARIANT_BOOL* pfEnabled None)
HRESULT None None.GetThumbnail([in] UINT cx,[out] HBITMAP *phbmp,[out] WTS_ALPHATYPE *pdwAlpha)
HRESULT None None.GetThumbnailResource([out None None,retval] IXpsOMImageResource **imageResource)
HRESULT None None.get_Tilt([out] long *pValue,[out] long *pFlags)
HRESULT None None.get_TiltRelative([out] long *pValue,[out] long *pFlags)
HRESULT None None.GetTimecode([out] TIMECODE_SAMPLE *pTimecodeSample)
HRESULT None None.GetTimecodeRangeBounds([in] WORD wStreamNum,[in] WORD wRangeNum,[out] DWORD *pStartTimecode,[out] DWORD *pEndTimecode)
HRESULT None None.GetTimecodeRangeCount([in] WORD wStreamNum,[out] WORD *pwRangeCount)
HRESULT None None.get_Time(DATE* pVal None)
HRESULT None None.GetTimeFormat(const GUID *pFormat)
HRESULT None None.GetTimeFormat([out] GUID *pFormat)
HRESULT None None.GetTimeFormat([out None None,retval] OPC_SIGNATURE_TIME_FORMAT *timeFormat)
HRESULT None None.GetTimeOfLastChange([in] IBindCtx *pbc,[in] IMoniker *pmkToLeft,[out] FILETIME *pFileTime)
HRESULT None None.GetTime([out] FILETIME *pfCreationTime)
HRESULT None None.GetTime([out] MFTIME *phnsClockTime)
HRESULT None None.GetTime([out] REFERENCE_TIME *pTime)
HRESULT None None.GetTime([out] REFERENCE_TIME *pTimeStart,[out] REFERENCE_TIME *pTimeEnd)
HRESULT None None.GetTime(REFERENCE_TIME* prtNow None,MUSIC_TIME* pmtNow None)
HRESULT None None.GetTime(REFERENCE_TIME *pTime None)
HRESULT None None.GetTime(REFERENCE_TIME *pTimeStart None,REFERENCE_TIME *pTimeEnd None)
HRESULT None None.GetTimeSeekResult([out] QWORD *pqwStartTime,[out] QWORD *pqwStopTime,[out] QWORD *pqwDuration)
HRESULT None None.GetTimeSeekResult([out] QWORD *pqwStartTime,[out] QWORD *pqwStopTime,[out] QWORD *pqwStartTime)
HRESULT None None.GetTimeSource([out] IMFPresentationTimeSource **ppTimeSource)
HRESULT None None.GetTitleAttributes([in] ULONG ulTitle,[out] DVD_MenuAttributes *pMenu,[out] DVD_TitleAttributes *pTitle)
HRESULT None None.GetTitle([in] IShellItemArray *psiItemArray,[out] LPWSTR *ppszName)
HRESULT None None.GetTitle([in] LPOLESTR pszGroup,[out] LPOLESTR *pszTitle)
HRESULT None None.GetTitle([out None None,retval] LPWSTR *title)
HRESULT None None.GetTitleParentalLevels([in] ULONG ulTitle,[out] ULONG *pulParentalLevels)
HRESULT None None.GetTool(DWORD dwIndex None,IDirectMusicTool** ppTool None)
HRESULT None None.GetToolTip([in] IShellItemArray *psiItemArray,[out] LPWSTR *ppszInfotip)
HRESULT None None.get_Top(long *pTop None)
HRESULT None None.GetTopologyFromEvent(IMFMediaEvent *pEvent None,IMFTopology **ppTopology None)
HRESULT None None.GetTopologyID([out] TOPOID *pID)
HRESULT None None.GetTopologyObject([out] IDeviceTopology **ppTopology)
HRESULT None None.GetTopoNodeID([out] TOPOID *pID)
HRESULT None None.get_Top([out] long *pTop)
HRESULT None None.GetTotalBad([out] DWORD *pdwBadLow,[out] DWORD *pdwBadHigh)
HRESULT None None.get_TotalCounters(IWMSServerTotalCounters** pVal None)
HRESULT None None.GetTotalLength([out] DWORD *pcbTotalLength)
HRESULT None None.GetTotalLength([out] QWORD *pqwTotalLength)
HRESULT None None.GetTotalSize([out] DWORD *pdwTotalSizeLow,[out] DWORD *pdwTotalSizeHigh)
HRESULT None None.GetTotalTitleTime([out] DVD_HMSF_TIMECODE *pTotalTime,[out] ULONG *pulTimeCodeFlags)
HRESULT None None.GetTransactionCookie(IUnknown * pITransaction,ULONG cbTransactionCookie None,byte * rgbTransactionCookie,ULONG * pcbUsed)
HRESULT None None.GetTransactionId([out] GUID *pGuid)
HRESULT None None.GetTransactionInfo2(XACTTRANSINFO * pinfo)
HRESULT None None.GetTransactionInfo(XACTTRANSINFO *pInfo None)
HRESULT None None.GetTransactionObject(ULONG ulTransactionLevel None,ITransaction **ppTransactionObject None)
HRESULT None None.GetTransaction([out] IUnknown **ppTx)
HRESULT None None.get_TransactionUOW([out] BSTR *pVal)
HRESULT None None.GetTransform([in] D3DTRANSFORMSTATETYPE State,[out] D3DMATRIX *pMatrix)
HRESULT None None.GetTransformLocal([out None None,retval] IXpsOMMatrixTransform **matrixTransform)
HRESULT None None.GetTransformLocal([out None None,retval] IXpsOMMatrixTransform **transform)
HRESULT None None.GetTransformLookup([out None None,retval] LPWSTR *key)
HRESULT None None.GetTransformLookup([out None None,retval] LPWSTR *lookup)
HRESULT None None.GetTransform([out None None,retval] IXpsOMMatrixTransform **matrixTransform)
HRESULT None None.GetTransportAudioParameters([in] long Param,[out] long *pValue)
HRESULT None None.GetTransportBasicParameters([in] long Param,[in None None,out] long *pValue,[in None None,out] LPOLESTR *ppszData)
HRESULT None None.GetTransportType([out] WMT_TRANSPORT_TYPE *pnTransportType)
HRESULT None None.GetTransportVideoParameters([in] long Param,[out] long *pValue)
HRESULT None None.GetTravelLog([out] ITravelLog **pptl)
HRESULT None None.get_Treble([out] double *pTreble)
HRESULT None None.get_TrebleRange([out] double *pRange)
HRESULT None None.get_TuningSpace([out] long *plTuningSpace)
HRESULT None None.get_TVFormat([out] long *plAnalogVideoStandard)
HRESULT None None.GetTypeAttr([out] TYPEATTR **ppTypeAttr)
HRESULT None None.GetTypeComp([out] ITypeComp **ppTComp)
HRESULT None None.GetTypeFlags([out] ULONG *pTypeFlags)
HRESULT None None.GetTypeInfoCount([out] UINT *pctinfo)
HRESULT None None.GetTypeInfo([in] UINT iTInfo,[in] LCID lcid,[out] ITypeInfo **ppTInfo)
HRESULT None None.GetTypeKind([out] TYPEKIND *pTypeKind)
HRESULT None None.GetTypeLabel([out] LPWSTR *ppszTypeLabel)
HRESULT None None.GetType([out] GUID *pguidType)
HRESULT None None.GetType([out] MediaEventType *pmet)
HRESULT None None.GetType([out None None,retval] XPS_OBJECT_TYPE *type)
HRESULT None None.GetType([out] SYNCMGR_HANDLER_TYPE *pnType)
HRESULT None None.GetType([out] VARTYPE *pVType)
HRESULT None None.get_types(ISchemaItemCollection** types None)
HRESULT None None.get_UDFRevision([out] LONG *pVal)
HRESULT None None.get_UDFRevisionsSupported([out] SAFEARRAY *pVal)
HRESULT None None.GetUDPPortRanges([out] WM_PORT_NUMBER_RANGE *pRangeArray,[in None None,out] DWORD *pcRanges)
HRESULT None None.get_UDPResendRequests(long* pVal None)
HRESULT None None.get_UDPResendRequestsRate(long* pVal None)
HRESULT None None.get_UDPResendsSentRate(long* pVal None)
HRESULT None None.GetUINT32([in] REFGUID guidKey,[out] UINT32 *punValue)
HRESULT None None.GetUINT64([in] REFGUID guidKey,[out] UINT64 *punValue)
HRESULT None None.GetUIObjectOf([in None None,optional] LCID locale,[out] REFIID riid,[out] void **ppUIObject)
HRESULT None None.get_UnconnectedNetworkAdapters([out] IVMNetworkAdapterCollection **unconnectedNetworkAdapterCollection)
HRESULT None None.get_Underline([out] BOOL *pUnderline)
HRESULT None None.get_UnicastDataSinks(IWMSPlugins** pVal None)
HRESULT None None.get_UnicastRolloverURL(BSTR* pbstrUnicastURL None)
HRESULT None None.GetUnicodeString([out None None,retval] LPWSTR *unicodeString)
HRESULT None None.GetUniqueIdentity([out] LPWSTR *ppwszIdentity)
HRESULT None None.GetUnknown([in] REFGUID guidKey,[in] REFIID riid,[out] LPVOID *ppv)
HRESULT None None.GetUpdateOptions([out] DWORD *pdwUpdateOpt)
HRESULT None None.get_UpTime(long* pVal None)
HRESULT None None.get_URL(BSTR *pURL None)
HRESULT None None.get_url(BSTR *urlString None)
HRESULT None None.GetUrlFlags([out None None,retval] PolicyServerUrlFlags *pValue)
HRESULT None None.GetURLFromHROW(HROW hRow None,LPOLESTR *ppwszURL None)
HRESULT None None.GetURL([out] PWSTR *ppszURL)
HRESULT None None.GetURL(WCHAR *pwszURL None,[in] DWORD *pcchURL)
HRESULT None None.GetUsage([out] FILE_USAGE_TYPE *pfut)
HRESULT None None.GetUseAliasedEdgeMode([out None None,retval] BOOL *useAliasedEdgeMode)
HRESULT None None.GetUseClientId([out None None,retval] VARIANT_BOOL *pValue)
HRESULT None None.get_UsedBlocks([out] LONG *pVal)
HRESULT None None.get_UseFixedUDPPort(VARIANT_BOOL *pUseFixedUDPPort None)
HRESULT None None.get_UseHTTPProxy(VARIANT_BOOL *pUseHTTPProxy None)
HRESULT None None.get_UseNotificationsOnly([out None None,retval] BOOL *pfUseNotificationsOnly)
HRESULT None None.get_UserAgent(BSTR *pUserAgent None)
HRESULT None None.GetUserClassID([out] CLSID *pClsid)
HRESULT None None.GetUserCredentials([out] WRDS_USER_CREDENTIAL *pUserCreds)
HRESULT None None.GetUserCredentials([out] WTS_USER_CREDENTIAL *pUserCreds)
HRESULT None None.GetUserData([out] DWORD_PTR *pdwUserData)
HRESULT None None.get_UseRestrictedCharacterSet([out] VARIANT_BOOL *pVal)
HRESULT None None.GetUserProvidedClock([out] BOOL *pfUserClock)
HRESULT None None.GetUserType([in] DWORD dwFormOfType,[out] LPOLESTR *pszUserType)
HRESULT None None.get_validateOnLoad(VARIANT_BOOL *validate None)
HRESULT None None.get_validateOnParse(VARIANT_BOOL *isValidating None)
HRESULT None None.GetValueByIndex([in] long lIndex,[out] BSTR *szName,[out] long *lCount,[out] double *dLast,[out] double *dAverage,[out] double *dStdDev,[out] double *dMin,[out] double *dMax)
HRESULT None None.GetValue([out] AHE_TYPE *pahe)
HRESULT None None.get_Value([out None None,retval] BSTR *pRetVal)
HRESULT None None.GetValue([out None None,retval] LPWSTR *ppszValue)
HRESULT None None.GetValue([out] PROPVARIANT *pvValue)
HRESULT None None.GetValue([out] void *pvValue,DWORD *pcbValue None)
HRESULT None None.get_value(VARIANT *attributeValue None)
HRESULT None None.GetVarCustData([in] UINT index,[in] REFGUID guid,[out] VARIANT *pVarVal)
HRESULT None None.GetVarDesc([in] UINT index,[out] VARDESC **ppVarDesc)
HRESULT None None.GetVarIndexOfMemId([in] MEMBERID memid,[out] UINT *pVarIndex)
HRESULT None None.get_VCRHorizontalLocking([out] long *plVCRHorizontalLocking)
HRESULT None None.GetVelocity(D3DVECTOR * pvVelocity)
HRESULT None None.GetVendorData([in] UInt16 PageNumber,[out] String VendorData,[out] String ExtendedStatus)
HRESULT None None.GetVendorName([out] MessageId *vendorName)
HRESULT None None.get_Version(BSTR* pbstrVal None)
HRESULT None None.get_Version([out] BSTR *version)
HRESULT None None.GetVersion([out] DWORD *pdwMajorVersion,[out] DWORD *pdwMinorVersion)
HRESULT None None.GetVersion([out] DWORD *pdwVersion)
HRESULT None None.GetVersion([out] LONG **plVersion,[out] HANDLE *phFileMapping)
HRESULT None None.GetVersion([out None None,retval] LPWSTR *version)
HRESULT None None.GetVersion([out] WMT_VERSION *pdwVersion)
HRESULT None None.GetVertexDeclaration([out] IDirect3DVertexDeclaration9 **ppDecl)
HRESULT None None.GetVertexShaderConstantB([in] UINT StartRegister,[in None None,out] BOOL *pConstantData,[in] UINT BoolCount)
HRESULT None None.GetVertexShaderConstantF([in] UINT StartRegister,[in None None,out] float *pConstantData,[in] UINT Vector4fCount)
HRESULT None None.GetVertexShaderConstantI([in] UINT StartRegister,[in None None,out] int *pConstantData,[in] UINT Vector4iCount)
HRESULT None None.GetVertexShaderDesc(D3DX11_PASS_SHADER_DESC *pDesc None)
HRESULT None None.GetVertexShader([out None None,retval] IDirect3DVertexShader9 **ppShader)
HRESULT None None.GetVideoAspectRatio([out] DWORD *cx,[out] DWORD *cy)
HRESULT None None.GetVideoHandle([out] HANDLE_PTR *pVideoHandle)
HRESULT None None.get_VideoHeight(long *pVideoHeight None)
HRESULT None None.get_VideoHeight([out] long *pVideoHeight)
HRESULT None None.GetVideoPaletteEntries([in] long StartIndex,[in] long Entries,[out] long *pRetrieved,[out] long *pPalette)
HRESULT None None.GetVideoPortIndex([out] DWORD *pdwVideoPortIndex)
HRESULT None None.GetVideoPosition([out] LPRECT lpSRCRect,[out] LPRECT lpDSTRect)
HRESULT None None.GetVideoPosition([out] RECT *pSourceRect,[in] RECT *pDestinationRect)
HRESULT None None.GetVideoProcessorCaps([in] UINT Count,[out] DXVAHD_VPCAPS *pCaps)
HRESULT None None.GetVideoProcessorCaps([out] D3D11_VIDEO_PROCESSOR_CAPS *pCaps)
HRESULT None None.GetVideoProcessorCaps([out] DXVA2_VideoProcessorCaps *pCaps)
HRESULT None None.GetVideoProcessorDeviceCaps([out] DXVAHD_VPDEVCAPS *pCaps)
HRESULT None None.GetVideoProcessorFilterRange([in] DXVAHD_FILTER Filter,[out] DXVAHD_FILTER_RANGE_DATA *pRange)
HRESULT None None.GetVideoProcessorService(IDirect3DDeviceManager9 *pDeviceManager None,IDirectXVideoProcessorService **ppVPService None)
HRESULT None None.GetVideoProcessorService([out] IDirectXVideoProcessorService **ppAccelServices)
HRESULT None None.GetVideoSize(long *pWidth None,long *pHeight None)
HRESULT None None.GetVideoSize([out] long *pWidth,[out] long *pHeight)
HRESULT None None.GetVideoSourceRect([out] MFVideoNormalizedRect *pnrcSource)
HRESULT None None.get_VideoStandard([out] AnalogVideoStandard *AVS)
HRESULT None None.GetVideoSwapchainHandle([out] HANDLE *phSwapchain)
HRESULT None None.get_VideoWidth(long *pVideoWidth None)
HRESULT None None.get_VideoWidth([out] long *pVideoWidth)
HRESULT None None.GetVideoWindow([out] HWND *phwndVideo)
HRESULT None None.GetViewFlags([out] PROPDESC_VIEW_FLAGS *ppdvFlags)
HRESULT None None.GetViewModeAndIconSize([out] FOLDERVIEWMODE *puViewMode,[out] int *piImageSize)
HRESULT None None.GetViewport([out] D3DVIEWPORT9 *pViewport)
HRESULT None None.GetViews([in] LPDATAOBJECT pDataObject,[in] LPVIEWEXTENSIONCALLBACK pViewExtensionCallback)
HRESULT None None.GetViewStatus([out] DWORD *pdwStatus)
HRESULT None None.GetViewWindow([out] HWND *phwndView)
HRESULT None None.get_VirtualNetworks([out] IVMVirtualNetworkCollection **virtualNetworkCollection)
HRESULT None None.GetVisibleData(HROW hRow None,HACCESSOR hAccessor None,void *pData None)
HRESULT None None.get_Visible(long *pVisible None)
HRESULT None None.get_Visible([out] long *pVisible)
HRESULT None None.get_Visible([out None None,retval] VARIANT_BOOL *Visible)
HRESULT None None.GetVisual([out None None,retval] IXpsOMVisual **visual)
HRESULT None None.GetVisuals([out None None,retval] IXpsOMVisualCollection **visuals)
HRESULT None None.get_VITCLine([out] long *pLine)
HRESULT None None.GetVMGAttributes([out] DVD_MenuAttributes *pATR)
HRESULT None None.get_VMRCAuthenticators([out] IVMRCAuthenticatorCollection **authenticators)
HRESULT None None.get_VMRCEncryptionCertificateRequest([out] BSTR *certificateRequest)
HRESULT None None.GetVolumeChannelCount([out] UINT32 *pu32ChannelCount)
HRESULT None None.get_VolumeNameISO9660([out] BSTR *pVal)
HRESULT None None.get_VolumeNameJoliet([out] BSTR *pVal)
HRESULT None None.get_VolumeName([out] BSTR *pVal)
HRESULT None None.get_VolumeNameUDF([out] BSTR *pVal)
HRESULT None None.GetVolume([out] float *pflVolume)
HRESULT None None.GetVolumeRangeChannel([in] UINT iChannel,[out] float *pflVolumeMinDB,[out] float *pflVolumeMaxDB,[out] float *pflVolumeIncrementDB)
HRESULT None None.GetVolumeRange([out] float *pfLevelMinDB,[out] float *pfLevelMaxDB,[out] float *pfVolumeIncrementDB)
HRESULT None None.GetVolumeStepInfo([out] UINT *pnStep,[out] UINT *pnStepCount)
HRESULT None None.GetWatcher(FEEDS_EVENTS_SCOPE scope None,FEEDS_EVENTS_MASK mask None,IDispatch **disp None)
HRESULT None None.GetWatcher(FEEDS_EVENTS_SCOPE scope None,FEEDS_EVENTS_MASK mask None,REFIID riid None,void **ppv None)
HRESULT None None.GetWatermarks([in] LPDATAOBJECT lpIDataObject,[out] HBITMAP *lphWatermark,[out] HBITMAP *lphHeader,[out] HPALETTE *lphPalette,[out] BOOL *bStretch)
HRESULT None None.get_Weight([out] SHORT *pWeight)
HRESULT None None.GetWhereaboutsSize(ULONG * pcbSize)
HRESULT None None.get_WhiteBalanceComponent([out] long *pValue1,[out] long *pValue2,[in None None,out] long *pFlags)
HRESULT None None.get_WhiteBalance([out] long *pValue,[out] long *pFlags)
HRESULT None None.get_whitespace(SCHEMAWHITESPACE* whitespace None)
HRESULT None None.get_Width(long *pWidth None)
HRESULT None None.get_Width([out] long *pWidth)
HRESULT None None.get_Width([out] OLE_XSIZE_HIMETRIC *pWidth)
HRESULT None None.GetWindowContext([out] IOleInPlaceFrame **ppFrame,[out] IOleInPlaceUIWindow **ppDoc,[out] LPRECT lprcPosRect,[out] LPRECT lprcClipRect,[in None None,out] LPOLEINPLACEFRAMEINFO lpFrameInfo)
HRESULT None None.GetWindowContext([out] PREVIEWHANDLERFRAMEINFO *pinfo)
HRESULT None None.GetWindowHandle([out] HWND *pHwnd)
HRESULT None None.GetWindowInputRectangle([out] IInkRectangle **windowInputRectangle)
HRESULT None None.GetWindowInputRectangle([out] IInkRectangle **WindowInputRectangle)
HRESULT None None.GetWindow([out] HWND *phwnd)
HRESULT None None.GetWindowPosition(long *pLeft None,long *pTop None,long *pWidth None,long *pHeight None)
HRESULT None None.GetWindowPosition([out] long *pLeft,[out] long *pTop,[out] long *pWidth,[out] long *pHeight)
HRESULT None None.get_WindowSize([out] DWORDLONG *pWindowSize)
HRESULT None None.get_WindowState(long *pWindowState None)
HRESULT None None.get_WindowState([out] long *WindowState)
HRESULT None None.get_WindowStyleEx(long *pWindowStyleEx None)
HRESULT None None.get_WindowStyleEx([out None None,retval] long *pWindowStyleEx)
HRESULT None None.get_WindowStyle(long *pWindowStyle None)
HRESULT None None.get_WindowStyle([out] long *pWindowStyle)
HRESULT None None.get_WindowVisualState([out None None,retval] WindowVisualState *pRetVal)
HRESULT None None.get_WorkingDirectory([out] BSTR *pVal)
HRESULT None None.get_WrapperPath(BSTR* pVal None)
HRESULT None None.GetWriterComponentsCount([out] UINT *pcComponents)
HRESULT None None.GetWriterInfo([out] VSS_ID *pidInstance,[out] VSS_ID *pidWriter)
HRESULT None None.GetWriterMetadataCount([out] UINT pcWriters)
HRESULT None None.GetWriterStatusCount([out] UINT *pcWriters)
HRESULT None None.GetWriterTime([out] QWORD *pcnsCurrentTime)
HRESULT None None.GetWritingMode([out] MF_TIMED_TEXT_WRITING_MODE *pWritingMode)
HRESULT None None.GetXAAccess(BOOL * pbXAAccess)
HRESULT None None.GetXlcModeDDObjAndPrimarySurface([out] LPDIRECTDRAW7 *lpDDObj,[out] LPDIRECTDRAWSURFACE7 *lpPrimarySurf)
HRESULT None None.get_xml(BSTR *xmlString None)
HRESULT None None.GetXml([out] UINT8 **xmlMarkup,[out] UINT32 *count)
HRESULT None None.GetXpsOMFactory([out None None,retval] IXpsOMObjectFactory **xpsFactory)
HRESULT None None.GetXpsType([out None None,retval] XPS_DOCUMENT_TYPE *documentType)
HRESULT None None.GetZIndex([out] INT32 *pnZIndex)
HRESULT None None.get_Zoom([out] long *pValue,[out] long *pFlags)
HRESULT None None.get_ZoomRelative([out] long *pValue,[out] long *pFlags)
HRESULT None None.GetZOrder([in] DWORD dwStreamID,[out] DWORD *pZOrder)
HRESULT None None.GetZOrder([out] DWORD *pdwZOrder)
HRESULT None None.GiveFeedback([in] DWORD dwEffect)
HRESULT None None.Guid(LPWSTR *ppszGuid None)
HRESULT None None.HandleConfirmationFromOurXln([in] DTXLUXLNCONFIRMATION Confirmation)
HRESULT None None.HandleConfirmationOfOurXln([in] DTXLUXLNCONFIRMATION Confirmation)
HRESULT None None.HasAudio([out] BOOL *pfHasAudio,[out] BOOL *pfSelected)
HRESULT None None.hasChildNodes(VARIANT_BOOL *hasChild None)
HRESULT None None.HasChildScopeRule([in] LPCWSTR pszURL,[out None None,retval] BOOL *pfHasChildRule)
HRESULT None None.HasDialog([in] int iDialog)
HRESULT None None.hasFeature(BSTR feature None,BSTR version None,VARIANT_BOOL *hasFeature None)
HRESULT None None.Hash(HCHAPTER hChapter None,DBBKMARK cBookmarks None,const DBBKMARK rgcbBookmarks[],const BYTE *rgpBookmarks[],DBHASHVALUE rgHashedValues[] None,DBROWSTATUS rgBookmarkStatus[] None)
HRESULT None None.Hash([out] DWORD *pdwHash)
HRESULT None None.HasNullSourceOrigin([out] BOOL *pfNullSOurceOrigin)
HRESULT None None.HasParentScopeRule([in] LPCWSTR pszURL,[out None None,retval] BOOL *pfHasParentRule)
HRESULT None None.HasRestrictedFonts([out None None,retval] BOOL *restrictedFonts)
HRESULT None None.Help(LPCWSTR lpszHelpDir None)
HRESULT None None.HideCursor([in] long HideCursor)
HRESULT None None.HideOnDeactivate([in] long Hide)
HRESULT None None.HRESULT_FROM_NT(DWORD x None)
HRESULT None None.HRESULT_FROM_WIN32(DWORD x None)
HRESULT None None.identityConstraint(ISchemaItemCollection** constraints None)
HRESULT None None.IFace_Remf1_Stub(parameter list None)
HRESULT None None.ILLoadFromStreamEx(_In_ IStream *pstm,_Out_ PIDLIST_ABSOLUTE *ppidl)
HRESULT None None.ILLoadFromStreamEx(_In_ IStream *pstm,_Out_ PITEMID_CHILD *ppidl)
HRESULT None None.Image(LPWSTR *ppszImageUrl None)
HRESULT None None.ImportFileSystem([out] FsiFileSystems *importedFileSystem)
HRESULT None None.ImportSnapshots([out] IVssAsync **ppAsync)
HRESULT None None.Import(ULONG cbTransactionCookie None,byte * rgbTransactionCookie,IID * piid,void ** ppvTransaction)
HRESULT None None.IncludedInCrawlScopeEx([in] LPCWSTR pszURL,[out] BOOL *pfIsIncluded,[out] CLUSION_REASON *pReason)
HRESULT None None.IncludedInCrawlScope([in] LPCWSTR pszURL,[out None None,retval] BOOL *pfIsIncluded)
HRESULT None None.Individualize(IWMDRMSecurity* pSecurity None)
HRESULT None None.Info(PAVISTREAM ps None,AVISTREAMINFO *psi None,LONG lSize None)
HRESULT None None.InitBufferManager(IBufferManager* pManager None)
HRESULT None None.InitCompositionDevice([in] IUnknown *pD3DDevice)
HRESULT None None.InitializeDevice([in] DWORD_PTR dwUserID,[in] VMR9AllocationInfo *lpAllocInfo,[in None None,out] DWORD *lpNumBuffers)
HRESULT None None.Initialize([in] IMFCaptureEngineOnEventCallback *pEventCallback,[in None None,optional] IMFAttributes *pAttributes,[in None None,optional] IUnknown *pAudioSource,[in None None,optional] IUnknown *pVideoSource)
HRESULT None None.Initialize([in] ISchemaProvider *pSchemaProvider)
HRESULT None None.Initialize([in] LPCWSTR pszCommandName,[in] IPropertyBag *ppb)
HRESULT None None.Initialize([in] LPUNKNOWN pUnknown)
HRESULT None None.Initialize(IUnknown *lpIImePad None)
HRESULT None None.InitializeOptions([in] BOOL fUnderstandNQS,[in] BOOL fAutoWildCard,[in] IQueryParser *pQueryParser)
HRESULT None None.Initialize([out] DWORD *PluginCapabilities)
HRESULT None None.InitializeOutputSample(IMediaSample *pSample None,IMediaSample **ppOutSample None)
HRESULT None None.InitializeRenderer([in] IMFTransform *pVideoMixer,[in] IMFVideoPresenter *pVideoPresenter)
HRESULT None None.InitializeSampleAllocatorEx([in] DWORD cInitialSamples,[in] DWORD cMaximumSamples,[in] IMFAttributes *pAttributes,[in] IMFMediaType *pMediaType)
HRESULT None None.Init([in] TIMEOUT_INFO *pTimeoutInfo,[in] IProtocolHandlerSite *pProtocolHandlerSite,[in] PROXY_INFO *pProxyInfo)
HRESULT None None.InitPlaylistBurn([in] DWORD cFiles,[in] WCHAR **pwszFilenames,[in] IWMStatusCallback *pCallback,[in] void *pvContext)
HRESULT None None.InitPropVariantFromBoolean(_In_ BOOL fVal,_Out_ PROPVARIANT *ppropvar)
HRESULT None None.InitPropVariantFromDouble(_In_ DOUBLE dblVal,_Out_ PROPVARIANT *ppropvar)
HRESULT None None.InitPropVariantFromGUIDAsBuffer(_In_ REFGUID guid,_Out_ PROPVARIANT *ppropvar)
HRESULT None None.InitPropVariantFromInt16(_In_ SHORT nVal,_Out_ PROPVARIANT *ppropvar)
HRESULT None None.InitPropVariantFromInt32(_In_ LONG lVal,_Out_ PROPVARIANT *ppropvar)
HRESULT None None.InitPropVariantFromInt64(_In_ LONGLONG llVal,_Out_ PROPVARIANT *ppropvar)
HRESULT None None.InitPropVariantFromString(_In_ PCWSTR psz,_Out_ PROPVARIANT *ppropvar)
HRESULT None None.InitPropVariantFromUInt16(_In_ USHORT uiVal,_Out_ PROPVARIANT *ppropvar)
HRESULT None None.InitPropVariantFromUInt64(_In_ ULONGLONG ullVal,_Out_ PROPVARIANT *ppropvar)
HRESULT None None.Init(REFCLSID clsidDMO None,REFCLSID catDMO None)
HRESULT None None.InitRibbon(CMainFrame* pMainFrame None,IUnknown** ppFramework None)
HRESULT None None.InitVariantFromBoolean(_In_ BOOL fVal,_Out_ VARIANT *pvar)
HRESULT None None.InitVariantFromDispatch(_In_ IDispatch *pdisp,_Out_ VARIANT *pvar)
HRESULT None None.InitVariantFromDosDateTime(_In_ WORD wDate,_In_ WORD wTime,_Out_ VARIANT *pvar)
HRESULT None None.InitVariantFromDouble(_In_ DOUBLE dblVal,_Out_ VARIANT *pvar)
HRESULT None None.InitVariantFromGUIDAsBuffer(_In_ REFGUID guid,_Out_ VARIANT *pvar)
HRESULT None None.InitVariantFromInt16(_In_ SHORT iVal,_Out_ VARIANT *pvar)
HRESULT None None.InitVariantFromInt32(_In_ LONG lVal,_Out_ VARIANT *pvar)
HRESULT None None.InitVariantFromInt64(_In_ LONGLONG llVal,_Out_ VARIANT *pvar)
HRESULT None None.InitVariantFromUInt16(_In_ USHORT uiVal,_Out_ VARIANT *pvar)
HRESULT None None.InitVariantFromUInt32(_In_ ULONG ulVal,_Out_ VARIANT *pvar)
HRESULT None None.InitVariantFromUInt64(_In_ ULONGLONG ullVal,_Out_ VARIANT *pvar)
HRESULT None None.InsertAt([in] UINT32 index,[in] IXpsOMColorProfileResource *object)
HRESULT None None.insertBefore(IXMLDOMNode *newChild None,VARIANT refChild None,IXMLDOMNode **outNewChild None)
HRESULT None None.insertData(long offset None,BSTR data None)
HRESULT None None.InsertEffect([in] IUnknown *pEffect,[in] BOOL fOptional)
HRESULT None None.InsertPacket(DWORD dwPacketNum None,IWMSPacket* pPacket None,DWORD dwExFlags None)
HRESULT None None.InsertRow(HCHAPTER hChapter None,HACCESSOR hAccessor None,void *pData None,HROW *phRow None)
HRESULT None None.InsertVideoEffect([in] IUnknown *pEffect,[in] BOOL fOptional)
HRESULT None None.Int64ToDWord(_In_ INT64 i64Operand,_Out_ DWORD *pdwResult)
HRESULT None None.Int64ToDWordPtr(_In_ INT64 i64Operand,_Out_ DWORD_PTR *pdwResult)
HRESULT None None.Int64ToInt(_In_ INT64 i64Operand,_Out_ INT *piResult)
HRESULT None None.Int64ToIntPtr(_In_ INT64 i64Operand,_Out_ INT_PTR *piResult)
HRESULT None None.Int64ToLong(_In_ INT64 i64Operand,_Out_ LONG *plResult)
HRESULT None None.Int64ToLongPtr(_In_ INT64 i64Operand,_Out_ LONG_PTR *plResult)
HRESULT None None.Int64ToPtrdiffT(_In_ INT64 i64Operand,_Out_ ptrdiff_t *pcbResult)
HRESULT None None.Int64ToSizeT(_In_ INT64 i64Operand,_Out_ size_t *pcbResult)
HRESULT None None.Int64ToSIZET(_In_ INT64 i64Operand,_Out_ SIZE_T *pcbResult)
HRESULT None None.Int64ToSSIZET(_In_ INT64 i64Operand,_Out_ SSIZE_T *pcbResult)
HRESULT None None.Int64ToUInt(_In_ INT64 i64Operand,_Out_ UINT *puiResult)
HRESULT None None.Int64ToUIntPtr(_In_ INT64 i64Operand,_Out_ UINT_PTR *puiResult)
HRESULT None None.Int64ToULong(_In_ INT64 i64Operand,_Out_ ULONG *pulResult)
HRESULT None None.Int64ToULongLong(_In_ INT64 i64Operand,_Out_ ULONGLONG *pullResult)
HRESULT None None.Int64ToULongPtr(_In_ INT64 i64Operand,_Out_ ULONG_PTR *pulResult)
HRESULT None None.Int8Add(_In_ INT8 i8Augend,_In_ INT8 i8Addend,_Out_ INT8 *pi8Result)
HRESULT None None.Int8Mult(_In_ INT8 i8Multiplicand,_In_ INT8 i8Multiplier,_Out_ INT8 *pi8Result)
HRESULT None None.Int8Sub(_In_ INT8 i8Minuend,_In_ INT8 i8Subtrahend,_Out_ INT8 *pi8Result)
HRESULT None None.Int8ToUChar(_In_ INT8 i8Operand,_Out_ UCHAR *pch)
HRESULT None None.Int8ToUInt8(_In_ INT8 i8Operand,_Out_ UINT8 *pu8Result)
HRESULT None None.Int8ToUInt(_In_ INT8 i8Operand,_Out_ UINT *puResult)
HRESULT None None.Int8ToUIntPtr(_In_ INT8 i8Operand,_Out_ UINT_PTR *puResult)
HRESULT None None.Int8ToULong(_In_ INT8 i8Operand,_Out_ ULONG *pulResult)
HRESULT None None.Int8ToULongLong(_In_ INT8 i8Operand,_Out_ ULONGLONG *pullResult)
HRESULT None None.Int8ToULongPtr(_In_ INT8 i8Operand,_Out_ ULONG_PTR *pulResult)
HRESULT None None.Int8ToUShort(_In_ INT8 i8Operand,_Out_ USHORT *pusResult)
HRESULT None None.IntAdd(_In_ INT iAugend,_In_ INT iAddend,_Out_ INT *piResult)
HRESULT None None.InterfaceSupportsErrorInfo(REFIID riid None)
HRESULT None None.IntMult(_In_ INT iMultiplicand,_In_ INT iMultiplier,_Out_ INT *piResult)
HRESULT None None.IntPtrAdd(_In_ INT_PTR iAugend,_In_ INT_PTR iAddend,_Out_ INT_PTR *piResult)
HRESULT None None.IntPtrMult(_In_ INT_PTR iMultiplicand,_In_ INT_PTR iMultiplier,_Out_ INT_PTR *piResult)
HRESULT None None.IntPtrSub(_In_ INT_PTR iMinuend,_In_ INT_PTR iSubtrahend,_Out_ INT_PTR *piResult)
HRESULT None None.IntPtrToChar(_In_ INT_PTR iOperand,_Out_ CHAR *pch)
HRESULT None None.IntPtrToDWord(_In_ INT_PTR iOperand,_Out_ DWORD *pdwResult)
HRESULT None None.IntPtrToDWordPtr(_In_ INT_PTR iOperand,_Out_ DWORD_PTR *pdwResult)
HRESULT None None.IntPtrToInt8(_In_ INT_PTR iOperand,_Out_ INT8 *pi8Result)
HRESULT None None.IntPtrToInt(_In_ INT_PTR iOperand,_Out_ INT *piResult)
HRESULT None None.IntPtrToLong(_In_ INT_PTR iOperand,_Out_ LONG *plResult)
HRESULT None None.IntPtrToLongPtr(_In_ INT_PTR iOperand,_Out_ LONG_PTR *plResult)
HRESULT None None.IntPtrToShort(_In_ INT_PTR iOperand,_Out_ SHORT *psResult)
HRESULT None None.IntPtrToSizeT(_In_ INT_PTR iOperand,_Out_ size_t *pcbResult)
HRESULT None None.IntPtrToSIZET(_In_ INT_PTR iOperand,_Out_ SIZE_T *pcbResult)
HRESULT None None.IntPtrToUChar(_In_ INT_PTR iOperand,_Out_ UCHAR *pch)
HRESULT None None.IntPtrToUInt8(_In_ INT_PTR iOperand,_Out_ UINT8 *pui8Result)
HRESULT None None.IntPtrToUInt(_In_ INT_PTR iOperand,_Out_ UINT *puResult)
HRESULT None None.IntPtrToUIntPtr(_In_ INT_PTR iOperand,_Out_ UINT_PTR *puResult)
HRESULT None None.IntPtrToULong(_In_ INT_PTR iOperand,_Out_ ULONG *pulResult)
HRESULT None None.IntPtrToULongLong(_In_ INT_PTR iOperand,_Out_ ULONGLONG *pullResult)
HRESULT None None.IntPtrToULongPtr(_In_ INT_PTR iOperand,_Out_ ULONG_PTR *pulResult)
HRESULT None None.IntPtrToUShort(_In_ INT_PTR iOperand,_Out_ USHORT *pusResult)
HRESULT None None.IntSub(_In_ INT iMinuend,_In_ INT iSubtrahend,_Out_ INT *piResult)
HRESULT None None.IntToByte(_In_ INT iOperand,_Out_ BYTE *pb)
HRESULT None None.IntToChar(_In_ INT iOperand,_Out_ __wchar_t *pch)
HRESULT None None.IntToDWord(_In_ INT iOperand,_Out_ DWORD *pdwResult)
HRESULT None None.IntToDWordPtr(_In_ INT iOperand,_Out_ DWORD_PTR *pdwResult)
HRESULT None None.IntToInt8(_In_ INT iOperand,_Out_ INT8 *pi8Result)
HRESULT None None.IntToShort(_In_ INT iOperand,_Out_ SHORT *psResult)
HRESULT None None.IntToSizeT(_In_ INT iOperand,_Out_ size_t *pcbResult)
HRESULT None None.IntToSIZET(_In_ INT iOperand,_Out_ SIZE_T *pcbResult)
HRESULT None None.IntToUChar(_In_ INT iOperand,_Out_ UCHAR *pch)
HRESULT None None.IntToUInt8(_In_ INT iOperand,_Out_ UINT8 *pui8Result)
HRESULT None None.IntToUInt(_In_ INT iOperand,_Out_ UINT *puResult)
HRESULT None None.IntToUIntPtr(_In_ INT iOperand,_Out_ UINT_PTR *puResult)
HRESULT None None.IntToULong(_In_ INT iOperand,_Out_ ULONG *pulResult)
HRESULT None None.IntToULongLong(_In_ INT iOperand,_Out_ ULONGLONG *pullResult)
HRESULT None None.IntToULongPtr(_In_ INT iOperand,_Out_ ULONG_PTR *pulResult)
HRESULT None None.IntToUShort(_In_ INT iOperand,_Out_ USHORT *pusResult)
HRESULT None None.IntToWord(_In_ INT iOperand,_Out_ WORD *pwResult)
HRESULT None None.Inverse([out] IMoniker **ppmk)
HRESULT None None.InvokeAtPresentationTime([out] IDeferredCommand **pCmd,[in] REFTIME time,[in] GUID *iid,[in] long dispidMember,[in] short wFlags,[in] long cArgs,[in] VARIANT *pDispParams,[in None None,out] VARIANT *pvarResult,[out] short *puArgErr)
HRESULT None None.InvokeAtStreamTime([out] IDeferredCommand **pCmd,[in] REFTIME time,[in] GUID *iid,[in] long dispidMember,[in] short wFlags,[in] long cArgs,[in] VARIANT *pDispParams,[in None None,out] VARIANT *pvarResult,[out] short *puArgErr)
HRESULT None None.InvokeCommand([in] DWORD dwCommandID,[in] BSTR location,[in] VARIANT *pLocationContext,[in] BSTR itemLocation,[in] ULONG cItemIDs,[in] ULONG *rgItemIDs)
HRESULT None None.InvokeDictToolDialog([in] IMEDLG *pimedlg)
HRESULT None None.Invoke([in] DISPID dispIdMember,[in] REFIID riid,[in] LCID lcid,[in] WORD wFlags,[in None None,out] DISPPARAMS *pDispParams,[out] VARIANT *pVarResult,[out] EXCEPINFO *pExcepInfo,[out] UINT *puArgErr)
HRESULT None None.Invoke([in] IMFAsyncResult *pAsyncResult)
HRESULT None None.Invoke([in] PVOID pvInstance,[in] MEMBERID memid,[in] WORD wFlags,[in None None,out] DISPPARAMS *pDispParams,[out] VARIANT *pVarResult,[out] EXCEPINFO *pExcepInfo,[out] UINT *puArgErr)
HRESULT None None.IsActive([out] BOOL isActive)
HRESULT None None.IsApproved([out] BOOL *pfApproved)
HRESULT None None.IsAudioStreamEnabled([in] ULONG ulStreamNum,[out] BOOL *pbEnabled)
HRESULT None None.IsCameraInUse(_In_z_ LPCWSTR symbolicName,_Out_ BOOL* pfInUse)
HRESULT None None.IsClosed([out] BOOL *pfClosed)
HRESULT None None.IsClosed([out None None,retval] BOOL *isClosed)
HRESULT None None.IsConnected([out] BOOL *pbConnected)
HRESULT None None.IsCursorHidden(long *CursorHidden None)
HRESULT None None.IsCursorHidden([out] long *CursorHidden)
HRESULT None None.IsDisabled([in] REFCLSID clsid)
HRESULT None None.IsEndOfStream([out] BOOL *pfEndOfStream)
HRESULT None None.IsEqual([in] IMoniker *pmkOtherMoniker)
HRESULT None None.IsFinal([out] BOOL *pfIsFinal)
HRESULT None None.IsFormatSupported([in] PKSDATAFORMAT pKsFormat,[in] DWORD cbFormat,[out] BOOL *pbSupported)
HRESULT None None.IsFunctionalLevelUpgradeSupported([in] LONG lFunctionalLevel,[out] VARIANT_BOOL *pbSupported)
HRESULT None None.IsKeepPixelAspectRatio([in] long *pKeepAspect)
HRESULT None None.IsLauncherVisible([out] BOOL *pfVisible)
HRESULT None None.IsLegacyDisabled([in] LPCWSTR dllName)
HRESULT None None.IsList(BOOL *pbIsList None)
HRESULT None None.IsMediaTypeSupported([in] IMFMediaType *pMediaType,[out] IMFMediaType **ppMediaType)
HRESULT None None.IsModeAvailable([in] long Mode)
HRESULT None None.IsModeEnabled([in] long Mode)
HRESULT None None.IsOffloadCapable([in] AUDIO_STREAM_CATEGORY Category,[out] BOOL *pbOffloadCapable)
HRESULT None None.IsOpened([out] BOOL *pfOpened)
HRESULT None None.IsPageLoaded([out None None,retval] BOOL *isPageLoaded)
HRESULT None None.IsProtected([out] BOOL *pfProtected)
HRESULT None None.IsProtected([out] BOOL *pProtected)
HRESULT None None.IsRealTime([out] BOOL *pfRealTime)
HRESULT None None.IsReusable([out] BOOL *pfIsReusable)
HRESULT None None.IsRunning([in] IBindCtx *pbc,[in] IMoniker *pmkToLeft,[in] IMoniker *pmkNewlyRunning)
HRESULT None None.IsSameRow(HROW hThisRow None,HROW hThatRow None)
HRESULT None None.IsSecurityEnabled([out] VARIANT_BOOL *pfIsEnabled)
HRESULT None None.IsStopped([out] BOOL *pfStopped)
HRESULT None None.IsSubpictureStreamEnabled([in] ULONG ulStreamNum,[out] BOOL *pbEnabled)
HRESULT None None.IsSystemMoniker([out] DWORD *pdwMksys)
HRESULT None None.IsTimeSeekSupported([out] BOOL *pfTimeSeekIsSupported)
HRESULT None None.IsUpdateNeeded([out] VARIANT_BOOL *pbIsUpdateNeeded)
HRESULT None None.IsUsingFastCache([out] BOOL *pfUsingFastCache)
HRESULT None None.IsValid([out] BOOL *pfValid)
HRESULT None None.IsVisible([out] VARIANT_BOOL *pvbShown)
HRESULT None None.IsWmdrmCompliant([out] BOOL *pfCompliant)
HRESULT None None.ItemCount(UINT *puiItemCount None)
HRESULT None None.Item([in] UINT nDevice,[out] IMMDevice **ppDevice)
HRESULT None None.Item([in] VARIANT Index,[out] LPVARIANT pItem)
HRESULT None None.item(long index None,ISchemaItem** item None)
HRESULT None None.ItemPostPaint([in] HDC hdc,[in] RECT *prc,[in] NSTCCUSTOMDRAW *pnstccdItem)
HRESULT None None.Items(IXFeedsEnum **ppfe None)
HRESULT None None.JoinFilterGraph(IFilterGraph *pGraph None,[in] LPCWSTR pName)
HRESULT None None.JoinFilterGraph([in] IFilterGraph *pGraph,[in] LPCWSTR pName)
HRESULT None None.JoinTransaction(IUnknown *punkTransactionCoord None,ISOLEVEL isoLevel None,ULONG isoFlags None,ITransactionOptions *pOtherOptions None)
HRESULT None None.KaraokeAudioPresentationModeChange([in] ULONG ulMode)
HRESULT None None.KeyExchange([out] GUID *pRandom,[out] BYTE **VarLenCertGH,[out] DWORD *pdwLengthCertGH)
HRESULT None None.KsEvent([in None None,optional] PKSEVENT Event,[in] ULONG EventLength,[in None None,out] LPVOID EventData,[in] ULONG DataLength,[in None None,out] ULONG *BytesReturned)
HRESULT None None.KsQueryMediums([out] KSMULTIPLE_ITEM **ppmi)
HRESULT None None.Language(LPWSTR *ppszLanguage None)
HRESULT None None.LastBuildDate(SYSTEMTIME *pstLastBuildDate None)
HRESULT None None.LastDownloadError(FEEDS_DOWNLOAD_ERROR *pfde None)
HRESULT None None.LastDownloadTime(SYSTEMTIME *pstLastDownloadTime None)
HRESULT None None.LastWriteTime(SYSTEMTIME *pstLastWriteTime None)
HRESULT None None.LaunchAdvancedAssociationUI([in] LPCWSTR pszAppRegName)
HRESULT None None.length(long * length)
HRESULT None None.Length(LONGLONG *pTotal None,LONGLONG *pAvailable None)
HRESULT None None.LightEnable([in] DWORD LightIndex,[in] BOOL bEnable)
HRESULT None None.Link(LPWSTR *ppszHomePage None)
HRESULT None None.Link(LPWSTR *ppszUrl None)
HRESULT None None.ListContentsComplete([in] DWORD dwListCookie,[in] HRESULT hrSuccess)
HRESULT None None.ListView_SetItemIndexState([in] HWND hwndLV,[in] LVITEMINDEX *plvii,[in] UINT data,[in] UINT mask)
HRESULT None None.LoadComputeShader(REFGUID resourceId None,BYTE *shaderBuffer None,UINT32 shaderBufferCount None)
HRESULT None None.Load([in] IStream *pStm)
HRESULT None None.Load([in] LPCOLESTR pszFileName,[in] DWORD dwMode)
HRESULT None None.LoadLibraryFromKnownFolder([in] REFKNOWNFOLDERID kfidLibrary,[in] DWORD grfMode)
HRESULT None None.Load(LPSTREAM pStm None)
HRESULT None None.LoadPackage(IOpcFactory *factory None,LPCWSTR packageName None,IOpcPackage **outPackage None)
HRESULT None None.LoadProfileByID([in] REFGUID guidProfile,[out] IWMProfile **ppProfile)
HRESULT None None.LoadScript(IDirectMusicPerformance8 * pPerf,IDirectMusicLoader8* pLoader None,WCHAR* wstrFileName None,IDirectMusicScript8** ppScript None)
HRESULT None None._LoadToolbars([in] IStream *pstm)
HRESULT None None.load(VARIANT xmlSource None,VARIANT_BOOL *isSuccessful None)
HRESULT None None.LoadVertexShader(REFGUID resourceId None,BYTE *shaderBuffer None,UINT32 shaderBufferCount None)
HRESULT None None.loadXML(BSTR bstrXML None,VARIANT_BOOL * isSuccessful)
HRESULT None None.LocalEnclosurePath(LPWSTR *ppszPath None)
HRESULT None None.LocalId(GUID *pguid None)
HRESULT None None.Lock2D([out] BYTE **pbScanline0,[out] LONG *plPitch)
HRESULT None None.LockContainer([in] BOOL fLock)
HRESULT None None.Lock([in] UINT OffsetToLock,[in] UINT SizeToLock,[out] VOID **ppbData,[in] DWORD Flags)
HRESULT None None.Lock(LONG bLock None)
HRESULT None None.Lock([out] BYTE **ppbBuffer,[out] DWORD *pcbMaxLength,[out] DWORD *pcbCurrentLength)
HRESULT None None.LockRunning([in] BOOL fLock,[in] BOOL fLastUnlockCloses)
HRESULT None None.LoggedOnUser([in] BOOL *pfLoggedOnUser)
HRESULT None None.Login([in] BLOB userInfo,[in] BLOB pwdInfo,[in] VARIANT_BOOL fUsedCachedCreds,[in] VARIANT_BOOL fOkToCache)
HRESULT None None.LongAdd(_In_ LONG lAugend,_In_ LONG lAddend,_Out_ LONG *plResult)
HRESULT None None.LongLongAdd(_In_ LONGLONG llAugend,_In_ LONGLONG llAddend,_Out_ LONGLONG *pllResult)
HRESULT None None.LongLongMult(_In_ LONGLONG llMultiplicand,_In_ LONGLONG llMultiplier,_Out_ LONGLONG *pllResult)
HRESULT None None.LongLongSub(_In_ LONGLONG llMinuend,_In_ LONGLONG llSubtrahend,_Out_ LONGLONG *pllResult)
HRESULT None None.LongLongToChar(_In_ LONGLONG llOperand,_Out_ CHAR *pch)
HRESULT None None.LongLongToInt8(_In_ LONGLONG llOperand,_Out_ INT8 *pi8Result)
HRESULT None None.LongLongToInt(_In_ LONGLONG llOperand,_Out_ INT *piResult)
HRESULT None None.LongLongToIntPtr(_In_ LONGLONG llOperand,_Out_ INT_PTR *piResult)
HRESULT None None.LongLongToLong(_In_ LONGLONG llOperand,_Out_ LONG *plResult)
HRESULT None None.LongLongToLongPtr(_In_ LONGLONG llOperand,_Out_ LONG_PTR *plResult)
HRESULT None None.LongLongToShort(_In_ LONGLONG llOperand,_Out_ SHORT *psResult)
HRESULT None None.LongLongToUChar(_In_ LONGLONG llOperand,_Out_ UCHAR *pch)
HRESULT None None.LongLongToUInt8(_In_ LONGLONG llOperand,_Out_ UINT8 *pu8Result)
HRESULT None None.LongLongToUInt(_In_ LONGLONG llOperand,_Out_ UINT *puResult)
HRESULT None None.LongLongToULong(_In_ LONGLONG llOperand,_Out_ ULONG *pulResult)
HRESULT None None.LongLongToULongLong(_In_ LONGLONG llOperand,_Out_ ULONGLONG *pullResult)
HRESULT None None.LongLongToUShort(_In_ LONGLONG llOperand,_Out_ USHORT *pusResult)
HRESULT None None.LongMult(_In_ LONG lMultiplicand,_In_ LONG lMultiplier,_Out_ LONG *plResult)
HRESULT None None.LongPtrAdd(_In_ LONG_PTR lAugend,_In_ LONG_PTR lAddend,_Out_ LONG_PTR *plResult)
HRESULT None None.LongPtrMult(_In_ LONG_PTR lMultiplicand,_In_ LONG_PTR lMultiplier,_Out_ LONG_PTR *plResult)
HRESULT None None.LongPtrSub(_In_ LONG_PTR lMinuend,_In_ LONG_PTR lSubtrahend,_Out_ LONG_PTR *plResult)
HRESULT None None.LongPtrToChar(_In_ LONG_PTR lOperand,_Out_ CHAR *pch)
HRESULT None None.LongPtrToDWord(_In_ LONG_PTR lOperand,_Out_ DWORD *pdwResult)
HRESULT None None.LongPtrToDWordPtr(_In_ LONG_PTR lOperand,_Out_ DWORD_PTR *pdwResult)
HRESULT None None.LongPtrToInt8(_In_ LONG_PTR lOperand,_Out_ INT8 *pi8Result)
HRESULT None None.LongPtrToInt(_In_ LONG_PTR lOperand,_Out_ INT *piResult)
HRESULT None None.LongPtrToIntPtr(_In_ LONG_PTR lOperand,_Out_ INT_PTR *piResult)
HRESULT None None.LongPtrToLong(_In_ LONG_PTR lOperand,_Out_ LONG *plResult)
HRESULT None None.LongPtrToShort(_In_ LONG_PTR lOperand,_Out_ SHORT *psResult)
HRESULT None None.LongPtrToSizeT(_In_ LONG_PTR lOperand,_Out_ size_t *pcbResult)
HRESULT None None.LongPtrToSIZET(_In_ LONG_PTR lOperand,_Out_ SIZE_T *pcbResult)
HRESULT None None.LongPtrToUChar(_In_ LONG_PTR lOperand,_Out_ UCHAR *pch)
HRESULT None None.LongPtrToUInt8(_In_ LONG_PTR lOperand,_Out_ UINT8 *pui8Result)
HRESULT None None.LongPtrToUInt(_In_ LONG_PTR lOperand,_Out_ UINT *puiResult)
HRESULT None None.LongPtrToUIntPtr(_In_ LONG_PTR lOperand,_Out_ UINT_PTR *puiResult)
HRESULT None None.LongPtrToULong(_In_ LONG_PTR lOperand,_Out_ ULONG *pulResult)
HRESULT None None.LongPtrToULongLong(_In_ LONG_PTR lOperand,_Out_ ULONGLONG *pullResult)
HRESULT None None.LongPtrToULongPtr(_In_ LONG_PTR lOperand,_Out_ ULONG_PTR *pulResult)
HRESULT None None.LongPtrToUShort(_In_ LONG_PTR lOperand,_Out_ USHORT *pusResult)
HRESULT None None.LongSub(_In_ LONG lMinuend,_In_ LONG lSubtrahend,_Out_ LONG *plResult)
HRESULT None None.LongToByte(_In_ LONG lOperand,_Out_ BYTE *pb)
HRESULT None None.LongToChar(_In_ LONG lOperand,_Out_ __wchar_t *pch)
HRESULT None None.LongToDWord(_In_ LONG lOperand,_Out_ DWORD *pdwResult)
HRESULT None None.LongToDWordPtr(_In_ LONG lOperand,_Out_ DWORD_PTR *pulResult)
HRESULT None None.LongToInt8(_In_ LONG lOperand,_Out_ INT8 *pi8Result)
HRESULT None None.LongToInt(_In_ LONG lOperand,_Out_ INT *piResult)
HRESULT None None.LongToIntPtr(_In_ LONG lOperand,_Out_ INT_PTR *piResult)
HRESULT None None.LongToPtrdiffT(_In_ LONG lOperand,_Out_ ptrdiff_t *pcbResult)
HRESULT None None.LongToShort(_In_ LONG lOperand,_Out_ SHORT *psResult)
HRESULT None None.LongToSizeT(_In_ LONG lOperand,_Out_ size_t *pcbResult)
HRESULT None None.LongToSIZET(_In_ LONG lOperand,_Out_ SIZE_T *pcbResult)
HRESULT None None.LongToUChar(_In_ LONG lOperand,_Out_ UCHAR *pch)
HRESULT None None.LongToUInt8(_In_ LONG lOperand,_Out_ UINT8 *pui8Result)
HRESULT None None.LongToUInt(_In_ LONG lOperand,_Out_ UINT *piResult)
HRESULT None None.LongToUIntPtr(_In_ LONG lOperand,_Out_ UINT_PTR *piResult)
HRESULT None None.LongToULong(_In_ LONG lOperand,_Out_ ULONG *pulResult)
HRESULT None None.LongToULongLong(_In_ LONG lOperand,_Out_ ULONGLONG *pullResult)
HRESULT None None.LongToULongPtr(_In_ LONG lOperand,_Out_ ULONG_PTR *pulResult)
HRESULT None None.LongToUShort(_In_ LONG lOperand,_Out_ USHORT *pusResult)
HRESULT None None.LongToWord(_In_ LONG lOperand,_Out_ WORD *pwResult)
HRESULT None None.LookupService([in] MF_SERVICE_LOOKUP_TYPE Type,[in] DWORD dwIndex,[in] REFGUID guidService,[in] REFIID riid,[out] LPVOID *ppvObjects,[in None None,out] DWORD *pnObjects)
HRESULT None None.MAKE_HRESULT(WORD sev None,WORD fac None,WORD code None)
HRESULT None None.MakeWindowAssociation(HWND WindowHandle None,UINT Flags None)
HRESULT None None.Map([in] ID3D11Resource *pResource,[in] UINT Subresource,[in] D3D11_MAP MapType,[in] UINT MapFlags,[out None None,optional] D3D11_MAPPED_SUBRESOURCE *pMappedResource)
HRESULT None None.Map([in] UINT Subresource,[in] D3D10_MAP MapType,[in] UINT MapFlags,[out] void **ppData)
HRESULT None None.Map([out] DXGI_MAPPED_RECT *pLockedRect,UINT MapFlags None)
HRESULT None None.MapStreamId([in] ULONG ulStreamId,[in] DWORD MediaSampleContent,[in] ULONG ulSubstreamFilterValue,[in] int iDataOffset)
HRESULT None None.MarkAllItemsRead(VOID None None)
HRESULT None None.MarshalReturnToken(ULONGcbReturnToken None None,byte *rgbReturnToken None,ULONG *pcbUsed None, None None)
HRESULT None None.matches(IXMLDOMNode* pNode None,IXMLDOMNode** ppNode None)
HRESULT None None.MaxItemCount(UINT *puiMaxItemCount None)
HRESULT None None.MenuCall([in] DVD_MENU_ID MenuID)
HRESULT None None.MenuLanguageSelect(LCID LanguageCode None)
HRESULT None None.Merge(BSTR feedXml None,BSTR feedUrl None)
HRESULT None None.Merge(IStream *pStream None,LPCWSTR pszUrl None)
HRESULT None None.MergeUndoDisks([out] IVMTask **undoMergeTask)
HRESULT None None.MetaData([in] REFIID riid,[out None None,retval] void **pMetaData)
HRESULT None None.Method3([in None None,readonly] int iMmutable)
HRESULT None None.MFGetAttribute2UINT32asUINT64(_In_ IMFAttributes *pAttributes,_In_ REFGUID guidKey,_Out_ UINT32 *punHigh32,_Out_ UINT32 *punLow32)
HRESULT None None.MFGetAttributeRatio(_In_ IMFAttributes *pAttributes,_In_ REFGUID guidKey,_Out_ UINT32 *pnNumerator,_Out_ UINT32 *punDenominator)
HRESULT None None.MFGetAttributeSize(_In_ IMFAttributes *pAttributes,_In_ REFGUID guidKey,_Out_ UINT32 *punWidth,_Out_ UINT32 *punHeight)
HRESULT None None.MFGetAttributeString(_In_ IMFAttributes *pAttributes,_In_ REFGUID guidKey,_Out_ PWSTR *ppsz)
HRESULT None None.MFSetAttribute2UINT32asUINT64(_In_ IMFAttributes *pAttributes,_In_ REFGUID guidKey,_In_ UINT32 unHigh32,_In_ UINT32 unLow32)
HRESULT None None.MFSetAttributeRatio(_In_ IMFAttributes *pAttributes,_In_ REFGUID guidKey,_In_ UINT32 unNumerator,_In_ UINT32 unDenominator)
HRESULT None None.MFSetAttributeSize(_In_ IMFAttributes *pAttributes,_In_ REFGUID guidKey,_In_ UINT32 unWidth,_In_ UINT32 unHeight)
HRESULT None None.MMCPropertyHelp(pszHelpTopic None None)
HRESULT None None.MonitorJobProgress(__in IBackgroundCopyJob* Job)
HRESULT None None.MouseActivate([in] POINT point)
HRESULT None None.MouseSelect([in] POINT point)
HRESULT None None.Move(BSTR newParentPath None)
HRESULT None None.Move(DBCOUNTITEM cRows None,LPCOLESTR rgpwszSourceURLs[ ],LPCOLESTR rgpwszDestURLs[ ],DBMOVEFLAGS dwMoveFlags None,IAuthenticate *pAuthenticate None,DBSTATUS rgdwStatus[ ],LPOLESTR rgpwszNewURLs[ ],OLECHAR **ppStringsBuffer None)
HRESULT None None.MoveItem([in] IShellItem *psiItem,[in] IShellItem *psiDestinationFolder,[in None None,unique] LPCWSTR pszNewName,[in None None,unique] IFileOperationProgressSink *pfopsItem)
HRESULT None None.MoveItems([in] IUnknown *punkItems,[in] IShellItem *psiDestinationFolder)
HRESULT None None.Move(LPCRECT prect None)
HRESULT None None.Move(LPCWSTR pszPath None)
HRESULT None None.MoveNext([out None None,retval] BOOL *hasNext)
HRESULT None None.MovePrevious([out None None,retval] BOOL *hasPrevious)
HRESULT None None.MQMgmtAction(LPCWSTR pMachineName None,LPCWSTR pObjectName None,LPCWSTR pAction None)
HRESULT None None.MQMgmtGetInfo(LPCWSTR pMachineName None,LPCWSTR pObjectName None,MQMGMTPROPS * pMgmtProps)
HRESULT None None.MQMoveMessage(QUEUEHANDLE sourceQueue None,QUEUEHANDLE targetQueue None,ULONGLONG lookupID None,ITransaction* pTransaction None)
HRESULT None None.MusicToMIDI(WORD wMusicValue None,DMUS_CHORD_KEY* pChord None,BYTE bPlayMode None,BYTE bChordLevel None,BYTE* pbMIDIValue None)
HRESULT None None.MyFunc([in None None,optional] VARIANT Param1,[out None None,optional] VARIANT Param2)
HRESULT None None.MyFunction([in] short count)
HRESULT None None.MyMethod([out None None,retval] InMyFace** ReturnVal)
HRESULT None None.NamedEntities([in] REFIID riid,[out None None,retval] void **pNamedEntities)
HRESULT None None.Name(LPWSTR *ppszName None)
HRESULT None None.namespaceURI(long index None,BSTR* length None)
HRESULT None None.NavigateCursor(LPCWSTR wszQueueFormatName None)
HRESULT None None.NeedsVirtualAddressSpace([in] LPVOID startAddress,[in] SIZE_T size)
HRESULT None None.NegotiateConnection([in] DMO_MEDIA_TYPE *pMediaType)
HRESULT None None.New1(int ar[10] None)
HRESULT None None.NewSegment(REFERENCE_TIME tStart None,REFERENCE_TIME tStop None,double dRate None)
HRESULT None None.Next([in] ULONG cConnections,[out] CONNECTDATA *rgcd,[out] ULONG *lpcFetched)
HRESULT None None.Next([in] ULONG celt,[out] IMoniker **rgelt,[in None None,out] ULONG *pceltFetched)
HRESULT None None.Next([in] ULONG celt,[out] ITStream **ppElements,[out] ULONG *pceltFetched)
HRESULT None None.Next([in] ULONG celt,[out] MMC_TASK *rgelt,[out] ULONG *pceltFetched)
HRESULT None None.Next([in] ULONG cFilters,[out] REGFILTER **apRegFilter,[out] ULONG *pcFetched)
HRESULT None None.Next([in] ULONG cRequest,[in None None,out] STREAM_ID_MAP *pStreamIdMap,[out] ULONG *pcReceived)
HRESULT None None.nextNode(IXMLDOMNode **nextItem None)
HRESULT None None.nodeFromID(BSTR idString None,IXMLDOMNode **node None)
HRESULT None None.NonDelegatingQueryInterface(REFIID riid None,void **ppv None)
HRESULT None None.normalize(void None None)
HRESULT None None.NotifyAllocator([in] IMemAllocator *pAllocator,[out] BOOL bReadOnly)
HRESULT None None.NotifyCommandProcessCreated(ULONG SessionId None)
HRESULT None None.NotifyEvent([in] LONG EventCode,[in] LONG_PTR Param1,[in] LONG_PTR Param2)
HRESULT None None.NotifyEvent(long EventCode None,LONG_PTR EventParam1 None,LONG_PTR EventParam2 None)
HRESULT None None.Notify(IBaseFilter *pSelf None,Quality q None)
HRESULT None None.Notify([in] DWORD dwOutputNum,[in] WM_MEDIA_TYPE *pSubtype)
HRESULT None None.Notify([in] IBaseFilter *pSelf,[in] Quality q)
HRESULT None None.Notify([in] long EventCode,[in] LONG_PTR EventParam1,[in] LONG_PTR EventParam2)
HRESULT None None.Notify([in] WMPCallbackNotification type,[in] VARIANT *pContext)
HRESULT None None.Notify([in] WMPPartnerNotification type,[in] VARIANT *pContext)
HRESULT None None.NotifyLateDelivery([in] QWORD cnsLateness)
HRESULT None None.NotifyOwnerMessage([in] OAHWND hwnd,[in] long uMsg,[in] LONG_PTR wParam,[in] LONG_PTR lParam)
HRESULT None None.NotifyOwnerMessage(long hwnd None,long uMsg None,LONG_PTR wParam None,LONG_PTR lParam None)
HRESULT None None.NotifyQualityEvent([in] IUnknown *pObject,[in] IMFMediaEvent *pEvent)
HRESULT None None.NotifyRelease([in] LONG idResource,[in] IResourceConsumer *pConsumer,[in] BOOL bStillWant)
HRESULT None None.Notify(UINT NotificationMask None)
HRESULT None None.NumberOfItems([out None None,retval] LONG *plCount)
HRESULT None None.NumberOfItemsToIndex([out] LONG *plIncrementalCount,[out] LONG *plNotificationQueue,[out] LONG *plHighPriorityQueue)
HRESULT None None.NumberOfTokens([out] ULONG *pCount)
HRESULT None None.OnAmbientPropertyChange([in] DISPID dispID)
HRESULT None None.OnAuthenticateComplete(WMS_AUTHENTICATION_RESULT AuthResult None,VARIANT ChallengeBlob None,VARIANT Context None)
HRESULT None None.OnAvailableDynamicObjectCountChange([in] ISpatialAudioObjectRenderStream *sender,[in] LONGLONG hnsComplianceDeadlineTime,[in] UINT32 availableDynamicObjectCountChange)
HRESULT None None.OnChangedItem([in] REFPROPVARIANT itemID,[in] ROWSETEVENT_ITEMSTATE rowsetItemState,[in] ROWSETEVENT_ITEMSTATE changedItemState)
HRESULT None None.OnChannelVolumeChanged([in] DWORD ChannelCount,[in] float NewChannelVolumeArray[],[in] DWORD ChangedChannel,[in] LPCGUID EventContext)
HRESULT None None.OnClockSetRate([in] MFTIME hnsSystemTime,[in] float flRate)
HRESULT None None.OnClockStop([in] MFTIME hnssSystemTime)
HRESULT None None.onComplete([in] HRESULT hrResult)
HRESULT None None.OnCRMAnalyze([in] COMSVCSEVENTINFO *pInfo,[in] GUID guidClerkCLSID,[in] DWORD dwCrmRecordType,[in] DWORD dwRecordSize)
HRESULT None None.OnDataAvailable(IXMLHTTPRequest2 *pXHR None,ISequentialStream *pResponseStream None)
HRESULT None None.ondataavailable(void None None)
HRESULT None None.OnDataUnitEx([in] WMT_FILESINK_DATA_UNIT *pFileSinkDataUnit)
HRESULT None None.OnDefaultDeviceChanged([in] EDataFlow flow,[in] ERole role,[in] LPCWSTR pwstrDefaultDevice)
HRESULT None None.OnDeletedItem([in] REFPROPVARIANT itemID,[in] ROWSETEVENT_ITEMSTATE deletedItemState)
HRESULT None None.OnDeviceAdded([in] LPCWSTR pwstrDeviceId)
HRESULT None None.OnDeviceRemoved([in] LPCWSTR pwstrDeviceId)
HRESULT None None.OnDeviceStateChanged([in] LPCWSTR pwstrDeviceId,[in] DWORD dwNewState)
HRESULT None None.OnDisplayChange([in] ULONG ulBitsPerPixel,[in] ULONG ulScreenWidth,[in] ULONG ulScreenHeight)
HRESULT None None.OnDisplayNameChanged([in] LPCWSTR NewDisplayName,[in] LPCGUID EventContext)
HRESULT None None.OnDoExtendedCommand(HRESULT hr None,QWORD qwContext None)
HRESULT None None.OnDragEnter([in] IShellItem *psiOver,[in] IShellItemArray *psiaData,[in] BOOL fOutsideSource,[in] DWORD grfKeyState,[in None None,out] DWORD *pdwEffect)
HRESULT None None.OnEvent([in] AMTunerEventType Event)
HRESULT None None.OnEvent([in] AMTVAudioEventType Event)
HRESULT None None.OnEvent([in] IMFMediaEvent *pEvent)
HRESULT None None.OnFileOk([in] IFileDialog *pfd)
HRESULT None None.OnFrameWindowActivateBS([in] BOOL fActive)
HRESULT None None.OnGetStreamInfo(HRESULT hr None,IWMSStreamHeaderList* pHeaderList None,IWMSContentDescriptionList* pContentDescription None,QWORD qwContext None)
HRESULT None None.OnGroupingParamChanged([in] LPCGUID NewGroupingParam,[in] LPCGUID EventContext)
HRESULT None None.OnHeader([in] INSSBuffer *pHeader)
HRESULT None None.OnInvalidateRect([in] LPCRECT lpcRect)
HRESULT None None.OnLeftClick([in] POINT *pt)
HRESULT None None.OnLowResource(DB_DWRESERVE dwReserved None)
HRESULT None None.OnLtxTransactionAbort([in] COMSVCSEVENTINFO *pInfo,[in] GUID guidLtx)
HRESULT None None.OnLtxTransactionStart([in] COMSVCSEVENTINFO *pInfo,[in] GUID guidLtx,[in] GUID tsid,[in] BOOL fRoot,[in] int nIsolationLevel)
HRESULT None None.OnNewItem([in] REFPROPVARIANT itemID,[in] ROWSETEVENT_ITEMSTATE newItemState)
HRESULT None None.OnNotify([in] PAUDIO_VOLUME_NOTIFICATION_DATA pNotify)
HRESULT None None.OnOverwrite([in] IFileDialog *pfd,[in] IShellItem *psi,[out] FDE_SHAREVIOLATION_RESPONSE *pResponse)
HRESULT None None.OnPostViewSample([in] WORD wStreamNumber,[in] QWORD cnsSampleTime,[in] QWORD cnsSampleDuration,[in] DWORD dwFlags,[in] INSSBuffer *pSample,[in] void *pvContext)
HRESULT None None.OnQueryCache(HRESULT hr None,WMS_CACHE_QUERY_RESPONSE Response None,BSTR bstrCacheUrl None,IWMSContext* pContentInfo None,IUnknown* pCachePluginContext None,VARIANT varContext None)
HRESULT None None.OnRowChange(IRowset *pRowset None,DBCOUNTITEM cRows None,const HROW rghRows[],DBREASON eReason None,DBEVENTPHASE ePhase None,BOOL fCantDeny None)
HRESULT None None.OnRowPositionChange(DBREASON eReason None,DBEVENTPHASE ePhase None,BOOL fCantDeny None)
HRESULT None None.OnRowsetEvent([in] ROWSETEVENT_TYPE eventType,[in] REFPROPVARIANT eventData)
HRESULT None None.OnSample([in] DWORD dwOutputNum,[in] QWORD cnsSampleTime,[in] QWORD cnsSampleDuration,[in] DWORD dwFlags,[in] INSSBuffer *pSample,[in] void *pvContext)
HRESULT None None.OnSelectionChange([in] IFileDialog *pfd)
HRESULT None None.OnSelectStream(HRESULT hr None,QWORD qwContext None)
HRESULT None None.OnSessionCreated([in] IAudioSessionControl *NewSession)
HRESULT None None.OnSessionDisconnected([in] AudioSessionDisconnectReason DisconnectReason)
HRESULT None None.OnShareViolation([in] IFileDialog *pfd,[in] IShellItem *psi,[out] FDE_SHAREVIOLATION_RESPONSE *pResponse)
HRESULT None None.OnSimpleVolumeChanged([in] float NewVolume,[in] BOOL NewMute,[in] LPCGUID EventContext)
HRESULT None None.OnStatus([in] WMT_STATUS Status,[in] HRESULT hr,[in] WMT_ATTR_DATATYPE dwType,[in] BYTE *pValue,[in] void *pvContext)
HRESULT None None.OnStreamSample([in] WORD wStreamNum,[in] QWORD cnsSampleTime,[in] QWORD cnsSampleDuration,[in] DWORD dwFlags,[in] INSSBuffer *pSample,[in] void *pvContext)
HRESULT None None.OnStreamSelection([in] WORD wStreamCount,[in] WORD *pStreamNumbers,[in] WMT_STREAM_SELECTION *pSelections,[in] void *pvContext)
HRESULT None None.OnTime([in] QWORD cnsCurrentTime,[in] void *pvContext)
HRESULT None None.OnTranslateAccelerator(MSG *pMsg None,DWORD grfModifiers None)
HRESULT None None.OnTypeChange([in] IFileDialog *pfd)
HRESULT None None.OnVideoStreamTick([out] LONGLONG *pPts)
HRESULT None None.OnViewStatusChange([in] DWORD dwViewStatus)
HRESULT None None.OnVolumeDuckNotification([in] LPCWSTR sessionID,[in] UINT32 countCommunicationsSessions)
HRESULT None None.OnVolumeUnduckNotification([in] LPCWSTR sessionID,[in] UINT32 countCommunicationsSessions)
HRESULT None None.open(BSTR bstrMethod None,BSTR bstrUrl None,VARIANT bAsync None,VARIANT bstrUser None,VARIANT bstrPassword None)
HRESULT None None.open(BSTR bstrMethod None,BSTR bstrUrl None,VARIANT varAsync None,VARIANT bstrUser None,VARIANT bstrPassword None)
HRESULT None None.Open(const WCHAR *pwszMethod,const WCHAR *pwszUrl,IXMLHTTPRequest2Callback *pStatusCallback None,const WCHAR *pwszUserName,const WCHAR *pwszPassword,const WCHAR *pwszProxyUserName,const WCHAR *pwszProxyPassword)
HRESULT None None.OpenDirectory(IWMSCommandContext* pCommandContext None,IWMSContext* pUserContext None,IWMSContext* pPresentationContext None,LPWSTR pszContainerName None,DWORD dwFlags None,IWMSBufferAllocator* pBufferAllocator None,IWMSDataSourcePluginCallback* pCallback None,QWORD qwContext None)
HRESULT None None.Open([in] IOleParentUndoUnit *pPUU)
HRESULT None None.Open([in] ISpatialAudioMetadataItems *metadataItems)
HRESULT None None.Open(IUnknown *pUnkOuter None,DBID *pColumnID None,REFGUID rguidColumnType None,DWORD dwFlags None,REFIID riid None,IUnknown **ppUnk None)
HRESULT None None.OpenLinkSource([in] DWORD dwLink)
HRESULT None None.OpenPropertyStore([in] DWORD stgmAccess,[out] IPropertyStore **ppProperties)
HRESULT None None.OpenRowset(IUnknown *pUnkOuter None,DBID *pTableID None,DBID *pIndexID None,REFIID riid None,ULONG cPropertySets None,DBPROPSET rgPropertySets[ ],IUnknown **ppRowset None)
HRESULT None None.OpenSharedResource([in] HANDLE hResource,[in] REFIID ReturnedInterface,[out] void **ppResource)
HRESULT None None.OpenStream([in] IStream *pStream)
HRESULT None None.OpenStream([in] IStream *pStream,[in] IWMReaderCallback *pCallback,[in] void *pvContext)
HRESULT None None.OpenViewChapter(HCHAPTER hSource None,HCHAPTER *phViewChapter None)
HRESULT None None.OverrideFrameSize([in] long FrameNumber,[in] long Size)
HRESULT None None.ParentalCountrySelect([in] WORD wCountry)
HRESULT None None.Parent(REFIID riid None,void **ppv None)
HRESULT None None.parsed(VARIANT_BOOL *isParsed None)
HRESULT None None.Parse([in] LPCWSTR pszInputString,[in] IEnumUnknown *pCustomProperties,[out None None,retval] IQuerySolution **ppSolution)
HRESULT None None.parse([in] VARIANT varInput)
HRESULT None None.ParseLicenseRequestMsg([in] BYTE *pbLicenseRequestMsg,[in] DWORD cbLicenseRequestMsg,[out] INSSBuffer **ppDeviceCert,[out] DRM_VAL16 *pDeviceSerialNumber,[out] BSTR *pbstrAction)
HRESULT None None.ParsePropertyValue([in] LPCWSTR pszPropertyName,[in] LPCWSTR pszInputString,[out None None,retval] IQuerySolution **ppSolution)
HRESULT None None.PathCchAddBackslashEx(_Inout_ PWSTR pszPath,_In_ size_t cchPath,_Out_opt_ PWSTR *ppszEnd,_Out_opt_ size_t *pcchRemaining)
HRESULT None None.PathCchAddBackslash(_Inout_ PWSTR pszPath,_In_ size_t cchPath)
HRESULT None None.PathCchAddExtension(_Inout_ PWSTR pszPath,_In_ size_t cchPath,_In_ PCWSTR pszExt)
HRESULT None None.PathCchAppend(_Inout_ PWSTR pszPath,_In_ size_t cchPath,_In_opt_ PCWSTR pszMore)
HRESULT None None.PathCchCanonicalize(_Out_ PWSTR pszPathOut,_In_ size_t cchPathOut,_In_ PCWSTR pszPathIn)
HRESULT None None.PathCchCombine(_Out_ PWSTR pszPathOut,_In_ size_t cchPathOut,_In_opt_ PCWSTR pszPathIn,_In_opt_ PCWSTR pszMore)
HRESULT None None.PathCchFindExtension(_In_ PCWSTR pszPath,_In_ size_t cchPath,_Out_ PCWSTR *ppszExt)
HRESULT None None.PathCchRemoveBackslashEx(_Inout_ PWSTR pszPath,_In_ size_t cchPath,_Out_opt_ PWSTR *ppszEnd,_Out_opt_ size_t *pcchRemaining)
HRESULT None None.PathCchRemoveBackslash(_Inout_ PWSTR pszPath,_In_ size_t cchPath)
HRESULT None None.PathCchRemoveExtension(_Inout_ PWSTR pszPath,_In_ size_t cchPath)
HRESULT None None.PathCchRemoveFileSpec(_Inout_ PWSTR pszPath,_In_ size_t cchPath)
HRESULT None None.PathCchRenameExtension(_Inout_ PWSTR pszPath,_In_ size_t cchPath,_In_ PCWSTR pszExt)
HRESULT None None.PathCchSkipRoot(_In_ PCWSTR pszPath,_Out_ PCWSTR *ppszRootEnd)
HRESULT None None.PathCchStripPrefix(_Inout_ PWSTR pszPath,_In_ size_t cchPath)
HRESULT None None.PathCchStripToRoot(_Inout_ PWSTR pszPath,_In_ size_t cchPath)
HRESULT None None.Path(LPWSTR *ppszPath None)
HRESULT None None.Pause([in] BOOL bState)
HRESULT None None.peekNode(IXMLDOMNode** ppNode None)
HRESULT None None.PlaceMarker([in] DWORD dwStreamIndex,[in] LPVOID pvContext)
HRESULT None None.PlayAtTime([in] DVD_HMSF_TIMECODE *pTime,[in] DWORD dwFlags,[out] IDvdCmd **ppCmd)
HRESULT None None.PlayAtTimeInTitle([in] ULONG uiTitle,[in] DVD_HMSF_TIMECODE *pTime,[in] DWORD dwFlags,[out] IDvdCmd **ppCmd)
HRESULT None None.PlayBackwards([in] double dwSpeed,[in] DWORD dwFlags,[out] IDvdCmd **ppCmd)
HRESULT None None.PlayChapterInTitle([in] ULONG ulTitle,[in] ULONG ulChapter,[in] DWORD dwFlags,[out] IDvdCmd **ppCmd)
HRESULT None None.PlayChapter([in] ULONG ulChapter,[in] DWORD dwFlags,[out] IDvdCmd **ppCmd)
HRESULT None None.PlayChaptersAutoStop([in] ULONG ulTitle,[in] ULONG ulChapter,[in] ULONG ulChaptersToPlay,[in] DWORD dwFlags,[out] IDvdCmd **ppCmd)
HRESULT None None.PlayForwards([in] double dwSpeed,[in] DWORD dwFlags,[out] IDvdCmd **ppCmd)
HRESULT None None.PlayMediaFile(HWND hwnd None,PCWSTR pszURL None)
HRESULT None None.PlayMotif(IDirectMusicPerformance8* pPerf None,IDirectMusicStyle8* pStyle None,WCHAR* pwszMotifName None)
HRESULT None None.PlayNextChapter([in] DWORD dwFlags,[out] IDvdCmd **ppCmd)
HRESULT None None.PlayPeriodInTitleAutoStop([in] ULONG ulTitle,[in] DVD_HMSF_TIMECODE *pStartTime,[in] DVD_HMSF_TIMECODE *pEndTime,[in] DWORD dwFlags,[out] IDvdCmd **ppCmd)
HRESULT None None.PlayPrevChapter([in] DWORD dwFlags,[out] IDvdCmd **ppCmd)
HRESULT None None.PlaySegmentEx(IUnknown* pSource None,WCHAR *pwzSegmentName None,IUnknown* pTransition None,DWORD dwFlags None,__int64 i64StartTime None,IDirectMusicSegmentState** ppSegmentState None,IUnknown* pFrom None,IUnknown* pAudioPath None)
HRESULT None None.PlaySegment(IDirectMusicSegment* pSegment None,DWORD dwFlags None,__int64 i64StartTime None,IDirectMusicSegmentState** ppSegmentState None)
HRESULT None None.PlayTitle(ULONG uiTitle None,[in] DWORD dwFlags,[out] IDvdCmd **ppCmd)
HRESULT None None._PositionViewWindow(HWND hwnd None,LPRECT prc None)
HRESULT None None.PostPaint([in] HDC hdc,[in] RECT *prc)
HRESULT None None.PostRestore([out] IVssAsync **ppAsync)
HRESULT None None.PrepareForBackup([out] IVssAsync **ppAsync)
HRESULT None None.PrepareForRender(D2D1_CHANGE_TYPE changeType None)
HRESULT None None.prepareForSync([in] BSTR bstrFilename,[in] BSTR bstrDeviceName,[in] IWMPSubscriptionServiceCallback *pCB)
HRESULT None None.PreparePalette(const CMediaType *pmtNew,const CMediaType *pmtOld,LPSTR szDevice None)
HRESULT None None.PrepareRequest(BOOL fRetaining None,DWORD grfRM None,BOOL fWantMoniker None,BOOL fSinglePhase None)
HRESULT None None.PrepareRequestDone(HRESULT hr None,IMoniker * pmk,BOID * pboidReason)
HRESULT None None.Prepare(ULONG cExpectedRuns None)
HRESULT None None.PreProcess(IWMWriter* pWriter None,DWORD dwInputNum None)
HRESULT None None.PreprocessSample([in] DWORD dwInputNum,[in] QWORD cnsSampleTime,[in] DWORD dwFlags,[in] INSSBuffer *pSample)
HRESULT None None.PreRestore([out] IVssAsync **ppAsync)
HRESULT None None.PresentBuffer(UINT BufferToPresent None,UINT SyncInterval None,UINT Flags None)
HRESULT None None.PresentImage([in] DWORD_PTR dwUserID,[in] VMRPRESENTATIONINFO *lpPresInfo)
HRESULT None None.Present(UINT SyncInterval None,UINT Flags None)
HRESULT None None.PrintSensorProperty(ISensor* pSensor None,REFPROPERTYKEY pk None)
HRESULT None None.PrioritizeMatchingURLs([in] LPCWSTR pszPattern,[in] PRIORITIZE_FLAGS dwPrioritizeFlags)
HRESULT None None.Proc3([in] short Arr[MAX_SIZE])
HRESULT None None.ProcessEvent([in] DWORD dwInputStreamID,[in] IMFMediaEvent *pEvent)
HRESULT None None.ProcessInput(DWORD dwInputStreamIndex None,IMediaBuffer *pBuffer None,DWORD dwFlags None,REFERENCE_TIME rtTimestamp None,REFERENCE_TIME rtTimelength None)
HRESULT None None.ProcessInput([in] DWORD dwInputStreamID,[in] IMFSample *pSample,[in] DWORD dwFlags)
HRESULT None None.ProcessLRB([in] BYTE *pSignedLRB,[in] DWORD dwSignedLRBLength,[out] BYTE *pSignedACK,[out] DWORD *pdwSignedACKLength)
HRESULT None None.ProcessMessage([in] MFT_MESSAGE_TYPE eMessage,[in] ULONG_PTR ulParam)
HRESULT None None.ProcessOutput(DWORD dwFlags None,DWORD cOutputBufferCount None,[in None None,out] DMO_OUTPUT_DATA_BUFFER *pOutputBuffers,[out] DWORD *pdwStatus)
HRESULT None None.ProcessOutput([in] DWORD dwFlags,[in] DWORD cOutputBufferCount,[in None None,out] MFT_OUTPUT_DATA_BUFFER *pOutputSamples,[out] DWORD *pdwStatus)
HRESULT None None.ProcessVertices([in] UINT SrcStartIndex,[in] UINT DestIndex,[in] UINT VertexCount,[in] IDirect3DVertexBuffer9 *pDestBuffer,[in] IDirect3DVertexDeclaration9 *pVertexDecl,[in] DWORD Flags)
HRESULT None None.PromptDataSource(IUnknown * pUnkOuter,HWND hWndParent None,DBPROMPTOPTIONS dwPromptOptions None,ULONG cSourceTypeFilter None,DBSOURCETYPE * rgSourceTypeFilter,LPCOLESTR pwszszzProviderFilter None,REFIID riid None,IUnknown ** ppDataSource)
HRESULT None None.PropVariantGetElem(_In_ REFPROPVARIANT propvarIn,_In_ ULONG iElem,_Out_ PROPVARIANT *ppropvar)
HRESULT None None.PropVariantToCLSID(_In_ REFPROPVARIANT propvar,_Out_ CLSID *pclsid)
HRESULT None None.PtrdiffTAdd(_In_ ptrdiff_t Augend,_In_ ptrdiff_t Addend,_Out_ ptrdiff_t *pResult)
HRESULT None None.PtrdiffTMult(_In_ ptrdiff_t Multiplicand,_In_ ptrdiff_t Multiplier,_Out_ ptrdiff_t *pResult)
HRESULT None None.PtrdiffTSub(_In_ ptrdiff_t Minuend,_In_ ptrdiff_t Subtrahend,_Out_ ptrdiff_t *pResult)
HRESULT None None.PtrdiffTToDWord(_In_ ptrdiff_t cbOperand,_Out_ DWORD *pdwResult)
HRESULT None None.PtrdiffTToDWordPtr(_In_ ptrdiff_t cbOperand,_Out_ DWORD_PTR *pdwResult)
HRESULT None None.PtrdiffTToInt(_In_ ptrdiff_t cbOperand,_Out_ INT *piResult)
HRESULT None None.PtrdiffTToLong(_In_ ptrdiff_t cbOperand,_Out_ LONG *plResult)
HRESULT None None.PtrdiffTToSizeT(_In_ ptrdiff_t cbOperand,_Out_ size_t *pcbResult)
HRESULT None None.PtrdiffTToSIZET(_In_ ptrdiff_t cbOperand,_Out_ SIZE_T *pcbResult)
HRESULT None None.PtrdiffTToUInt(_In_ ptrdiff_t cbOperand,_Out_ UINT *puiResult)
HRESULT None None.PtrdiffTToUIntPtr(_In_ ptrdiff_t cbOperand,_Out_ UINT_PTR *puiResult)
HRESULT None None.PtrdiffTToULong(_In_ ptrdiff_t cbOperand,_Out_ ULONG *pulResult)
HRESULT None None.PtrdiffTToULongPtr(_In_ ptrdiff_t cbOperand,_Out_ ULONG_PTR *pulResult)
HRESULT None None.PullComplete(HRESULThrPull None None, None None)
HRESULT None None.put_AllowClientsToConnect(VARIANT_BOOL newVal None)
HRESULT None None.put_AllowClientToStartAndStop(VARIANT_BOOL newVal None)
HRESULT None None.put_AllowStartupProfile(VARIANT_BOOL newVal None)
HRESULT None None.put_AllowStreamSplitting(VARIANT_BOOL newVal None)
HRESULT None None.put_AntiClogControl([in] long Enable)
HRESULT None None.put_AutoShow([in] long AutoShow)
HRESULT None None.put_AutoShow(long AutoShow None)
HRESULT None None.put_BackgroundPalette([in] long BackgroundPalette)
HRESULT None None.put_BackgroundPalette(long BackgroundPalette None)
HRESULT None None.put_BacklightCompensation([in] long Value,[in] long Flags)
HRESULT None None.put_Bass([in] double Bass)
HRESULT None None.put_BizRule([in] BSTR bstrProp)
HRESULT None None.put_BizRuleLanguage([in] BSTR bstrProp)
HRESULT None None.put_BorderColor([in] long Color)
HRESULT None None.put_BorderColor(long Color None)
HRESULT None None.put_Brightness([in] long Value,[in] long Flags)
HRESULT None None.put_BufferingTime(double BufferingTime None)
HRESULT None None.put_CacheProxyExpiration(long newVal None)
HRESULT None None.put_Caption(BSTR strCaption None)
HRESULT None None.put_Caption([in] BSTR strCaption)
HRESULT None None.put_ColorEnable([in] long Value,[in] long Flags)
HRESULT None None.put_ConnectedPlayers(long newVal None)
HRESULT None None.put_ConnectionRate(long Val None)
HRESULT None None.put_ConnectTimeout([in] DWORD dwConnectTimeout)
HRESULT None None.put_Contrast([in] long Value,[in] long Flags)
HRESULT None None.put_CopyProtection([in] long lVideoCopyProtection)
HRESULT None None.put_CountryCode([in] long lCountryCode)
HRESULT None None.put_CPUUtilizationDuringConnection(long Val None)
HRESULT None None.put_CurrentPlaylistEntry(IXMLDOMElement* pPlaylistEntry None)
HRESULT None None.put_CurrentPosition([in] REFTIME llTime)
HRESULT None None.put_CurrentPosition(REFTIME llTime None)
HRESULT None None.put_DataTimeout([in] DWORD dwDataTimeout)
HRESULT None None.put_DefaultPath(BSTR newVal None)
HRESULT None None.put_DefaultPluginLoadType(WMS_PLUGIN_LOAD_TYPE val None)
HRESULT None None.put_DestinationHeight([in] long DestinationHeight)
HRESULT None None.put_DestinationLeft([in] long DestinationLeft)
HRESULT None None.put_DestinationLeft(long DestinationLeft None)
HRESULT None None.put_DestinationMulticastIPAddress(BSTR bstrMulticastIpAddress None)
HRESULT None None.put_DestinationMulticastPort(long lPort None)
HRESULT None None.put_DestinationTop([in] long DestinationTop)
HRESULT None None.put_DestinationWidth([in] long DestinationWidth)
HRESULT None None.put_DestinationWidth(long DestinationWidth None)
HRESULT None None.put_DevicePower([in] long PowerMode)
HRESULT None None.put_DiacriticSensitivity([in] BOOL fDiacriticSensitive)
HRESULT None None.put_DigitalMultiplier([in] long Value,[in] long Flags)
HRESULT None None.put_EditStart([in] long Value)
HRESULT None None.put_EnableAutoProxy(VARIANT_BOOL EnableAutoProxy None)
HRESULT None None.put_EnableHTTP(VARIANT_BOOL EnableHTTP None)
HRESULT None None.put_EnableMulticast(VARIANT_BOOL EnableMulticast None)
HRESULT None None.put_EnableReverseProxyMode(VARIANT_BOOL val None)
HRESULT None None.put_EnableTCP(VARIANT_BOOL EnableTCP None)
HRESULT None None.put_EnableUDP(VARIANT_BOOL EnableUDP None)
HRESULT None None.put_Exposure([in] long Value,[in] long Flags)
HRESULT None None.put_ExposureRelative([in] long Value,[in] long Flags)
HRESULT None None.put_FECPacketSpan(long Val None)
HRESULT None None.put_FixedUDPPort(long FixedUDPPort None)
HRESULT None None.put_Focus([in] long Value,[in] long Flags)
HRESULT None None.put_FocusRelative([in] long Value,[in] long Flags)
HRESULT None None.put_FullScreenMode([in] long FullScreenMode)
HRESULT None None.put_FullScreenMode(long FullScreenMode None)
HRESULT None None.put_Gain([in] long Value,[in] long Flags)
HRESULT None None.put_Gamma([in] long Value,[in] long Flags)
HRESULT None None.put_GroupBy([in] BSTR bstrGroupBy)
HRESULT None None.put_Height([in] long Height)
HRESULT None None.put_Height(long Height None)
HRESULT None None.put_HTTPProxyHost(BSTR bstrHTTPProxyHost None)
HRESULT None None.put_HTTPProxyPort(long HTTPProxyPort None)
HRESULT None None.put_Hue([in] long Value,[in] long Flags)
HRESULT None None.put_IncomingBandwidth(long lVal None)
HRESULT None None.put_Iris([in] long Value,[in] long Flags)
HRESULT None None.put_IrisRelative([in] long Value,[in] long Flags)
HRESULT None None._put_itbLastFocus([in] UINT itbLastFocus)
HRESULT None None.put_JobCopiesAllDocuments([in] ULONG ulJobCopiesAllDocuments)
HRESULT None None.put_KeyFrameRate([in] long KeyFrameRate)
HRESULT None None.put_Left([in] long Left)
HRESULT None None.put_LocalControl([in] long State)
HRESULT None None.put_LoggingURL(BSTR bstrLoggingURL None)
HRESULT None None.put_Loudness([in] BOOL fLoudness)
HRESULT None None.put_MediaState([in] long State)
HRESULT None None.put_MessageDrain([in] OAHWND Drain)
HRESULT None None.put_MessageDrain(OAHWND Drain None)
HRESULT None None.put_MixLevel([in] double Level)
HRESULT None None.put_Mode([in] AMTunerModeType lMode)
HRESULT None None.put_Mode([in] long Mode)
HRESULT None None.put_Mono([in] BOOL fMono)
HRESULT None None.put_MulticastTtl(long lTtl None)
HRESULT None None.put_Name(BSTR newVal None)
HRESULT None None.put_ondataavailable(VARIANT ondataavailableSink None)
HRESULT None None.put_onreadystatechange(VARIANT readystatechangeSink None)
HRESULT None None.put_onreadystatechange(VARIANT* readystatechangeSink None)
HRESULT None None.put_ontransformnode(VARIANT ontransformnodeSink None)
HRESULT None None.put_OptimalPacketSize(long dwOptimalMtu None)
HRESULT None None.put_OutgoingDistributionBandwidth(long newVal None)
HRESULT None None.put_OutgoingDistributionBandwidth(long Val None)
HRESULT None None.put_OutgoingDistributionConnections(long newVal None)
HRESULT None None.put_OutgoingDistributionConnections(long Val None)
HRESULT None None.put_OutputEnable([in] long lOutputEnable)
HRESULT None None.put_Owner([in] OAHWND Owner)
HRESULT None None.put_Owner(OAHWND Owner None)
HRESULT None None.put_OwnerSID([in] BSTR bstrOwnerSID)
HRESULT None None.put_Pan([in] double Pan)
HRESULT None None.put_Pan([in] long Value,[in] long Flags)
HRESULT None None.put_PanTilt([in] long PanValue,[in] long TiltValue,[in] long Flags)
HRESULT None None.put_PanTiltRelative([in] long PanValue,[in] long TiltValue,[in] long Flags)
HRESULT None None.put_Path(BSTR newVal None)
HRESULT None None.put_PerOutgoingDistributionConnectionBandwidth(long newVal None)
HRESULT None None.put_PerOutgoingDistributionConnectionBandwidth(long Val None)
HRESULT None None.put_PerPlayerConnectionBandwidth(long newVal None)
HRESULT None None.put_PerPlayerRapidStartBandwidth(long newVal None)
HRESULT None None.put_PerUser([in] BOOL fPerUser)
HRESULT None None.put_PlayerBandwidth(long newVal None)
HRESULT None None.put_PlayerBandwidth(long Val None)
HRESULT None None.put_PlayerCacheDeliveryRate(long Val None)
HRESULT None None.put_PlayerInactivityTimeout(long Val None)
HRESULT None None.put_PowerlineFrequency([in] long Value,[in] long Flags)
HRESULT None None.put_PrerollTime([in] REFTIME llTime)
HRESULT None None.put_PrivacyMode([in] long Value,[in] long Flags)
HRESULT None None.put_PublisherID([in] BSTR bstrPublisherID)
HRESULT None None.put_QueryContentLocale([in] LCID lcid)
HRESULT None None.put_QueryContentProperties([in None None,unique] LPCWSTR pszContentProperties)
HRESULT None None.put_QueryKeywordLocale([in] LCID lcid)
HRESULT None None.put_QueryMaxResults([in] LONG cMaxResults)
HRESULT None None.put_QuerySelectColumns([in None None,unique] LPCWSTR pszSelectColumns)
HRESULT None None.put_QuerySorting([in None None,unique] LPCWSTR pszSorting)
HRESULT None None.put_QuerySyntax([in] SEARCH_QUERY_SYNTAX querySyntax)
HRESULT None None.put_QueryTermExpansion([in] SEARCH_TERM_EXPANSION expandTerms)
HRESULT None None.put_QueryWhereRestrictions([in None None,unique] LPCWSTR pszRestrictions)
HRESULT None None.put_Rate(double dRate None)
HRESULT None None.put_Rate([in] double dblRate)
HRESULT None None.put_Rate([in] double dRate)
HRESULT None None.put_Roll([in] long Value,[in] long Flags)
HRESULT None None.put_RollRelative([in] long Value,[in] long Flags)
HRESULT None None.put_Saturation([in] long Value,[in] long Flags)
HRESULT None None.put_ScanMode([in] long Value,[in] long Flags)
HRESULT None None.put_SelectedOption([in] IPrintSchemaOption *pOption)
HRESULT None None.put_Sharpness([in] long Value,[in] long Flags)
HRESULT None None.put_SourceHeight([in] long SourceHeight)
HRESULT None None.put_SourceHeight(long SourceHeight None)
HRESULT None None.put_SourceLeft([in] long SourceLeft)
HRESULT None None.put_SourceNodeId([in] DWORD dwPinId)
HRESULT None None.put_SourceTop([in] long SourceTop)
HRESULT None None.put_SourceWidth([in] long SourceWidth)
HRESULT None None.put_StopTime([in] REFTIME llTime)
HRESULT None None.put_Tilt([in] long Value,[in] long Flags)
HRESULT None None.put_TiltRelative([in] long Value,[in] long Flags)
HRESULT None None.put_Top([in] long Top)
HRESULT None None.put_Top(long Top None)
HRESULT None None.put_Treble([in] double Treble)
HRESULT None None.put_TuningSpace([in] long lTuningSpace)
HRESULT None None.put_TVFormat([in] long lAnalogVideoStandard)
HRESULT None None.put_UDPEnabled(VARIANT_BOOL fEnabled None)
HRESULT None None.put_UnicastRolloverURLOptions(WMS_UNICAST_ROLLOVER_URL_OPTIONS newVal None)
HRESULT None None.put_UseHTTPProxy(VARIANT_BOOL UseHTTPProxy None)
HRESULT None None.put_VCRHorizontalLocking([in] long lVCRHorizontalLocking)
HRESULT None None.put_Visible([in] long Visible)
HRESULT None None.put_Visible(long Visible None)
HRESULT None None.put_VITCLine([in] long Line)
HRESULT None None.put_WhiteBalanceComponent([in] long Value1,[in] long Value2,[in] long Flags)
HRESULT None None.put_WhiteBalance([in] long Value,[in] long Flags)
HRESULT None None.put_Width([in] long Width)
HRESULT None None.put_Width(long Width None)
HRESULT None None.put_WindowSize([in] DWORDLONG WindowSize)
HRESULT None None.put_WindowState([in] long WindowState)
HRESULT None None.put_WindowState(long WindowState None)
HRESULT None None.put_WindowStyleEx([in] long WindowStyleEx)
HRESULT None None.put_WindowStyle([in] long WindowStyle)
HRESULT None None.put_WindowStyle(long WindowStyle None)
HRESULT None None.put_WrapperPath(BSTR newVal None)
HRESULT None None.put_Zoom([in] long Value,[in] long Flags)
HRESULT None None.put_ZoomRelative([in] long Value,[in] long Flags)
HRESULT None None.QueryAbilities([out] SYNCMGR_RESOLUTION_ABILITIES_FLAGS *pdwAbilities)
HRESULT None None.QueryAccept(const AM_MEDIA_TYPE *pmt)
HRESULT None None.QueryAppIsDefault([in] LPCWSTR pszQuery,[in] ASSOCIATIONTYPE atQueryType,[in] ASSOCIATIONLEVEL alQueryLevel,[in] LPCWSTR pszAppRegistryName,[out] BOOL *pfDefault)
HRESULT None None.QueryBlanket([in] IUnknown *pProxy,[out] DWORD *pAuthnSvc,[out] DWORD *pAuthzSvc,[out] OLECHAR **pServerPrincName,[out] DWORD *pAuthnLevel,[out] DWORD *pImpLevel,[out] void **pAuthInfo,[out] DWORD *pCapabilites)
HRESULT None None.QueryCancel([out] BOOL *pfCancelled)
HRESULT None None.QueryChanges([out None None,retval] VARIANT_BOOL *pValue)
HRESULT None None.QueryControllers([out] IEnumVdsObject **ppEnum)
HRESULT None None.QueryDataObject([in] long cookie,[in] DATA_OBJECT_TYPES type,[out] LPDATAOBJECT *ppDataObject)
HRESULT None None.QueryDecimationUsage([out] DECIMATION_USAGE *lpUsage)
HRESULT None None.QueryDirection([out] PIN_DIRECTION *pPinDir)
HRESULT None None.QueryDirection(PIN_DIRECTION *pPinDir None)
HRESULT None None.QueryDispatch([in] MMC_COOKIE cookie,[in] DATA_OBJECT_TYPES type,[out] LPDISPATCH *ppDispatch)
HRESULT None None.QueryFilterInfo(FILTER_INFO *pInfo None)
HRESULT None None.QueryFilterInfo([out] FILTER_INFO *pInfo)
HRESULT None None.QueryGetData([in] FORMATETC *pformatetc)
HRESULT None None.QueryHardwareSupport([out] DWORD *pdwHardwareSupportMask)
HRESULT None None.QueryHeader([in] PCWSTR szHeaderName,[in] DWORD dwIndex,[out] PWSTR *ppszHeaderValue)
HRESULT None None.QueryHitPoint([in] DWORD dwAspect,[in] LPCRECT pRectBounds,[in] POINT ptlLoc,[in] LONG lCloseHint,[out] DWORD *pHitResult)
HRESULT None None.QueryHitRect([in] DWORD dwAspect,[in] LPCRECT pRectBounds,[in] LPCRECT pRectLoc,[in] LONG lCloseHint,[out] DWORD *pHitResult)
HRESULT None None.QueryId(LPWSTR *Id None)
HRESULT None None.QueryId([out] LPWSTR *Id)
HRESULT None None.QueryInterface([in] REFIID riid,[out] void **ppvObject)
HRESULT None None.QueryInterface(LPUNKNOWN ps None,const IID riid,void **ppvObj None)
HRESULT None None.QueryInternalConnections(IPin *apPin None,ULONG *nPin None)
HRESULT None None.QueryInternalConnections([out] IPin **apPin,[in None None,out] ULONG *nPin)
HRESULT None None.QueryOverlayFXCaps([out] DWORD *lpdwOverlayFXCaps)
HRESULT None None.QueryPinInfo([out] PIN_INFO *pInfo)
HRESULT None None.QueryPinInfo(PIN_INFO *pInfo None)
HRESULT None None.QueryPreferredFormat(GUID *pFormat None)
HRESULT None None.QueryPreferredFormat([out] GUID *pFormat)
HRESULT None None.QueryS([in] BSTR progID,[in] BSTR queryCriteria,[out None None,retval] IUnknown **ppInterface)
HRESULT None None.QueryStatus([out] HRESULT *phrResult)
HRESULT None None.QueryStatus([out] HRESULT *pHrResult,[out] INT *pReserved)
HRESULT None None.QueryTextMetrics([out] TEXTMETRICOLE *pTM)
HRESULT None None.QueryVendorInfo(LPWSTR *pVendorInfo None)
HRESULT None None.QueryVersion(LONG *pVersion None)
HRESULT None None.QueueEventParamUnk([in] MediaEventType met,[in] REFGUID guidExtendedType,[in] HRESULT hrStatus,[in] IUnknown *pUnk)
HRESULT None None.ReadChunkData(HANDLE hFile None,void * buffer,DWORD buffersize None,DWORD bufferoffset None)
HRESULT None None.ReadingDestQueue(WCHAR * wszQueueName,WCHAR * wszComputerName)
HRESULT None None.Read([in] ULONG cProperties,[in] ITEMPROP *pPropBag,[out] VARIANT *pvarValue,[out] HRESULT *phrError)
HRESULT None None.ReadNextItem([out] UINT8 *commandCount,[out] UINT16 *frameOffset)
HRESULT None None.ReadPackageFromStream([in] IStream *stream,[in] OPC_READ_FLAGS flags,[out None None,retval] IOpcPackage **package)
HRESULT None None.ReadPlaylist(INSSBuffer* pBuffer None,IXMLDOMDocument* pPlaylist None,IWMSPlaylistParserCallback* pCallback None,QWORD qwContext None)
HRESULT None None.readyState(long* pReadyState None)
HRESULT None None.ReceiveConnection(IPin *pConnector None,AM_MEDIA_TYPE *pmt None)
HRESULT None None.Receive(IMediaSample *pMediaSample None)
HRESULT None None.Receive(IMediaSample *pSample None)
HRESULT None None.Receive([in] IMediaSample *pSample)
HRESULT None None.ReceiveMessage(WCHAR *wszComputerName None,WCHAR *wszQueueName None)
HRESULT None None.ReceiveMultiple(IMediaSample **ppSamples None,long nSamples None,long *nSamplesProcessed None)
HRESULT None None.ReceiveMultiple([in] IMediaSample **pSamples,[in] long nSamples,[out] long *nSamplesProcessed)
HRESULT None None.Reconfigure([in] IGraphConfigCallback *pCallback,[in] PVOID pvContext,[in] DWORD dwFlags,[in] HANDLE hAbortEvent)
HRESULT None None.Reconfigure(PVOID pvContext None,DWORD dwFlags None)
HRESULT None None.ReconnectPin(IPin *pPin None,AM_MEDIA_TYPE const *pmt)
HRESULT None None.Reduce([in] IBindCtx *pbc,[in] DWORD dwReduceHowFar,[in None None,out] IMoniker **ppmkToLeft,[out] IMoniker **ppmkReduced)
HRESULT None None.Reenlist2(XID * pXid,DWORDdwTimeout None None,XACTSTAT * pXactStat)
HRESULT None None.RefreshLicenseComplete([in] DWORD dwCookie,[in] ULONG contentID,[in] HRESULT hrRefresh)
HRESULT None None.RefreshLicense([in] DWORD dwCookie,[in] VARIANT_BOOL fLocal,[in] BSTR bstrURL,[in] WMPStreamingType type,[in] ULONG contentID,[in] BSTR bstrRefreshReason,[in] VARIANT *pReasonContext)
HRESULT None None.RegisterAudioSessionNotification([in] IAudioSessionEvents *NewNotifications)
HRESULT None None.RegisterCategories([in] ULONG cCategories,[in] CATEGORYINFO rgCategoryInfo[])
HRESULT None None.RegisterControlChangeCallback([in] REFGUID riid,[in] IControlChangeNotify *pNotify)
HRESULT None None.RegisterControlChangeNotify([in] IAudioEndpointVolumeCallback *pNotify)
HRESULT None None.RegisterDevice([in] DWORD dwRegisterType,[in] BYTE *pbCertificate,[in] DWORD cbCertificate,[in] DRM_VAL16 SerialNumber,[out] IWMRegisteredDevice **ppDevice)
HRESULT None None.RegisterDuckNotification(LPCWSTR SessionID None,IAudioVolumeDuckNotification *duckNotification None)
HRESULT None None.RegisterEndpointNotificationCallback([in] IMMNotificationClient *pNotify)
HRESULT None None.RegisterForEvent([out] HANDLE *phEvent)
HRESULT None None.RegisterGroup([in] LPCWSTR pName,[in] LONG cResource,[in] LONG *palTokens,[out] LONG *plToken)
HRESULT None None.Register([in] LPCWSTR pName,[in] LONG cResource,[out] LONG *plToken)
HRESULT None None.RegisterMFTs([in] MFT_REGISTRATION_INFO *pMFTs,[in] DWORD cMFTs)
HRESULT None None.RegisterObjectBound([in] IUnknown *punk)
HRESULT None None.RegisterObjectParam([in] LPOLESTR pszKey,[in] IUnknown *punk)
HRESULT None None.RegisterProxyFailure([in] HRESULT hrParam,[in] DWORD dwProxyContext)
HRESULT None None.RegisterService([in] REFGUID guidService,[in] IUnknown *pUnkObject)
HRESULT None None.RegisterSessionNotification(IAudioSessionNotification *SessionNotification None)
HRESULT None None.RegisterStereoStatusWindow([in] HWND WindowHandle,[in] UINT wMsg,[out] DWORD *pdwCookie)
HRESULT None None.RegisterWord([in] IMEREG reg,[in] IMEWRD *pwrd)
HRESULT None None.ReindexMatchingURLs([in] LPCWSTR pszPattern)
HRESULT None None.ReindexSearchRoot([in] LPCWSTR pszRootURL)
HRESULT None None.RelativePathTo([in] IMoniker *pmkOther,[out] IMoniker **ppmkRelPath)
HRESULT None None.ReleaseAccessor(HACCESSOR hAccessor None,DBREFCOUNT *pcRefCount None)
HRESULT None None.ReleaseBuffer(IMediaSample *pSample None)
HRESULT None None.ReleaseBuffer([in] UINT32 NumFramesRead)
HRESULT None None.ReleaseChapter(HCHAPTER hChapter None,DBREFCOUNT *pcRefCount None)
HRESULT None None.ReleaseDC([in] HDC hdc)
HRESULT None None.ReleaseDC([in None None,optional] RECT *pDirtyRect)
HRESULT None None.ReleaseErrors(const DWORD dwDynamicErrorID)
HRESULT None None.ReleaseFocus([in] IUnknown *pFocusObject)
HRESULT None None.ReleaseMarshalData([in] IStream *pStm)
HRESULT None None.ReleaseObject(IDirectMusicObject * pObject)
HRESULT None None.ReleaseObject(IUnknown * pObject)
HRESULT None None.ReleaseResourceManager(DWORD dwRMCookie None)
HRESULT None None.ReleaseRows(DBCOUNTITEM cRows None,const HROW rghRows[],DBROWOPTIONS rgRowOptions[] None,DBREFCOUNT rgRefCounts[] None,DBROWSTATUS rgRowStatus[] None)
HRESULT None None.RemoteGetData([out] ULONG *pFirstPos,[out] ULONG *pLength,[out] LPWSTR *ppsz,[out] PROPVARIANT *pValue)
HRESULT None None.RemoveAllEffects([in] DWORD dwSourceStreamIndex)
HRESULT None None.RemoveAllPackets(DWORD dwExFlags None)
HRESULT None None.RemoveAt([in] UINT32 index)
HRESULT None None.removeAttribute(BSTR name None)
HRESULT None None.removeAttributeNode(IXMLDOMAttribute *DOMAttribute None,IXMLDOMAttribute **attributeNode None)
HRESULT None None.RemoveAt(UINT32 index None)
HRESULT None None.RemoveBandwidthSharing([in] IWMBandwidthSharing *pBS)
HRESULT None None.remove(BSTR namespaceURI None)
HRESULT None None.RemoveBufferByIndex([in] DWORD dwIndex)
HRESULT None None.remove_ButtonPressed(EventRegistrationToken token None)
HRESULT None None.RemoveChain([in] IBaseFilter *pStartFilter,[in] IBaseFilter *pEndFilter)
HRESULT None None.removeChild(IXMLDOMNode *childNode None,IXMLDOMNode **outOldChild None)
HRESULT None None.RemoveClockStateSink([in] IMFClockStateSink *pStateSink)
HRESULT None None.RemoveDefaultScopeRule([in] LPCWSTR pszURL)
HRESULT None None.RemoveEffect([in] IUnknown *pEffect)
HRESULT None None.RemoveFromSyncSet([out] SYNCMGR_RESOLUTION_FEEDBACK *pFeedback)
HRESULT None None.RemoveFunctionName(BSTR FunctionName None)
HRESULT None None.Remove([in] BSTR bstrInterfaceName)
HRESULT None None.RemoveMarker([in] WORD wIndex)
HRESULT None None.RemoveMutexes(IMFASFProfile *pProfile None)
HRESULT None None.RemoveMutualExclusion([in] DWORD dwMutexIndex)
HRESULT None None.RemoveMutualExclusion([in] IWMMutualExclusion *pME)
HRESULT None None.removeNamedItem(BSTR name None,IXMLDOMNode **namedItem None)
HRESULT None None.removeNext(IXMLDOMNode ** ppNode)
HRESULT None None.RemovePacket(DWORD dwPacketNum None)
HRESULT None None.remove_PropertyChanged(EventRegistrationToken token None)
HRESULT None None.removeQualifiedItem(BSTR baseName None,BSTR namespaceURI None,IXMLDOMNode **qualifiedItem None)
HRESULT None None.RemoveRoot([in] LPCWSTR pszURL)
HRESULT None None.RemoveScopeRule([in] LPCWSTR pszRule)
HRESULT None None.RemoveScript([in] WORD wIndex)
HRESULT None None.RemoveSink([in] IWMWriterSink *pSink)
HRESULT None None.RemoveStreamByNumber([in] WORD wStreamNum)
HRESULT None None.RemoveStreamForRecord([in] WORD wRecordNumber,[in] WORD wStreamNumber)
HRESULT None None.RemoveStream([in] ITStream *pStream)
HRESULT None None.RemoveStream([in] IWMStreamConfig *pConfig)
HRESULT None None.RemoveSubscriberProperty([in] BSTR bstrPropertyName)
HRESULT None None.RemoveSubStream([in] ITSubStream *pSubStream)
HRESULT None None.RemoveTool(IDirectMusicTool * pTool)
HRESULT None None.RemoveUnconnectedRenderer(IGraphBuilder *pGraph None,IBaseFilter *pRenderer None,BOOL *pbRemoved None)
HRESULT None None.Rename(BSTR name None)
HRESULT None None.RenameItem([in] IShellItem *psiItem,[in] LPCWSTR pszNewName,[in None None,unique] IFileOperationProgressSink *pfopsItem)
HRESULT None None.RenameItem([in] IShellItem *psiSource,[in] LPCWSTR pszNewName,[in] TRANSFER_SOURCE_FLAGS dwFlags,[out] IShellItem **ppsiNewDest)
HRESULT None None.Rename(LPCWSTR pszName None)
HRESULT None None.RenderFile([in] LPCWSTR lpwstrFile,[in] LPCWSTR lpwstrPlayList)
HRESULT None None.Render([in] IPin *ppinOut,[in] IGraphBuilder *pGraph)
HRESULT None None.RepaintVideo([in] HWND hwnd,[in] HDC hdc)
HRESULT None None.replaceChild(IXMLDOMNode *newChild None,IXMLDOMNode *oldChild None,IXMLDOMNode **outOldChild None)
HRESULT None None.replaceData(long offset None,long count None,BSTR data None)
HRESULT None None.ReplayChapter([in] DWORD dwFlags,[out] IDvdCmd **ppCmd)
HRESULT None None.ReportLiveDeviceObjects(D3D12_RLDO_FLAGS Flags None)
HRESULT None None.RequestExternalAuthentication(WCHAR * wszQueueName,WCHAR * wszComputerName)
HRESULT None None.Request(IMediaSample *pSample None,[in] DWORD_PTR dwUser)
HRESULT None None.Requesting40BitEncryption(LPCWSTR wszQueueFormatName None)
HRESULT None None.RequestingAcknowledgment(LPCWSTR wszDestQueueFormatName None,LPCWSTR wszAdminQueueFormatName None,UCHAR bAckLevel None,ULONG ulTimeToBeReceived None)
HRESULT None None.RequestingResponse(LPCWSTR wszDestQueueFormatName None,LPCWSTR wszResponseQueueFormatName None)
HRESULT None None.Request([in] IImePadApplet *pIImePadApplet,[in] INT reqId,[in None None,out] WPARAM wParam,[in None None,out] LPARAM lParam)
HRESULT None None.RequestInternalAuthentication(WCHAR * wszQueueName,WCHAR * wszComputerName,ULONG ulAuthLevel None)
HRESULT None None.RequestNewResourceManager(CHAR * pszDSN,CHAR * pszClientDllName,DWORD * pdwRMCookie)
HRESULT None None.RequestResource([in] LONG idResource,[in] IUnknown *pFocusObject,[in] IResourceConsumer *pConsumer)
HRESULT None None.ResetDevice([in] IUnknown *pUnkDevice,[in] UINT resetToken)
HRESULT None None.ResetEx([in None None,out] D3DPRESENT_PARAMETERS *pPresentationParameters,[in None None,out] D3DDISPLAYMODEEX *pFullscreenDisplayMode)
HRESULT None None.Reset([in None None,out] D3DPRESENT_PARAMETERS *pPresentationParameters)
HRESULT None None.Reset([out] IVMTask **resetTask)
HRESULT None None.reset(void None None)
HRESULT None None.ResizeBuffers(UINT BufferCount None,UINT Width None,UINT Height None,DXGI_FORMAT NewFormat None,UINT SwapChainFlags None)
HRESULT None None.ResolveTargetUriToPart(IOpcRelationship * relativeUri,IOpcPartUri **resolvedUri None)
HRESULT None None.RestatePropertyValueToString([in] ICondition *pCondition,[in] BOOL fUseEnglish,[out] LPWSTR *ppszPropertyName,[out] LPWSTR *ppszQueryString)
HRESULT None None.RestateToString([in] ICondition *pCondition,[in] BOOL fUseEnglish,[out] LPWSTR *ppszQueryString)
HRESULT None None.RestoreLicenses([in] DWORD dwFlags,[in] IWMStatusCallback *pCallback)
HRESULT None None.RestoreResultView([in] MMC_COOKIE cookie,[in] PRESULT_VIEW_TYPE_INFO pResultViewType)
HRESULT None None.Resume([in] DWORD dwFlags,[out] IDvdCmd **ppCmd)
HRESULT None None.ResynchRows(DBCOUNTITEM cRows None,const HROW rghRows[],DBCOUNTITEM *pcRowsResynched None,HROW **prghRowsResynched None,DBROWSTATUS **prgRowStatus None)
HRESULT None None.RetrieveSettings([out None None,retval] BSTR *rdpFileContents)
HRESULT None None.ReturnFromSubmenu([in] DWORD dwFlags,[out] IDvdCmd **ppCmd)
HRESULT None None.ReturnResp(LPCWSTR wszDestQueueFormatName None)
HRESULT None None.RevokeObjectBound([in] IUnknown *punk)
HRESULT None None.RevokeObjectParam([in] LPOLESTR pszKey)
HRESULT None None.RoleAssignments([in] BSTR bstrScopeName,[in] VARIANT_BOOL bRecursive,[out] IAzRoleAssignments **ppRoleAssignments)
HRESULT None None.RootEntity([out None None,retval] IEntity **pRootEntity)
HRESULT None None.Route([in] long OutputPinIndex,[in] long InputPinIndex)
HRESULT None None.Run([in] LPBINDCTX pbc)
HRESULT None None.Run(REFERENCE_TIME tStart None)
HRESULT None None.SaveCommand(DBID *pCommandID None,DWORD dwFlags None)
HRESULT None None.Save([in] IStorage *pStgSave,[in] BOOL fSameAsLoad)
HRESULT None None.Save([in] LPSTREAM pStm,[in] BOOL fClearDirty)
HRESULT None None.Save([out] IVMTask **saveTask)
HRESULT None None.SaveProfile([in] IWMProfile *pProfile,[in] WCHAR *pwszProfile,[in None None,out] DWORD *pdwLength)
HRESULT None None.save(VARIANT destination None)
HRESULT None None.SaveViewState([in] LPSTREAM pstm)
HRESULT None None.ScheduleDCS(IDataCollectorSet* pdcs None)
HRESULT None None.schema(ISchema* schema None)
HRESULT None None.schemaLocations(ISchemaStringCollection** schemaLocations None)
HRESULT None None.Scroll([in] SIZE scrollExtant)
HRESULT None None.Seek(HACCESSOR hAccessor None,DBORDINAL cKeyValues None,void *pData None,DBSEEK dwSeekOptions None)
HRESULT None None.Seek([in] MFBYTESTREAM_SEEK_ORIGIN SeekOrigin,[in] LONGLONG qwSeekOffset,[in] DWORD dwSeekFlags,[out] QWORD *pqwCurrentPosition)
HRESULT None None.Seek(REFERENCE_TIME tStart None,REFERENCE_TIME tStop None)
HRESULT None None.SelectAndActivateButton([in] ULONG ulButton)
HRESULT None None.SelectAngle([in] ULONG ulAngle,[in] DWORD dwFlags,[out] IDvdCmd **ppCmd)
HRESULT None None.SelectAtPosition([in] POINT point)
HRESULT None None.SelectAudioStream([in] ULONG ulAudio,[in] DWORD dwFlags,[out] IDvdCmd **ppCmd)
HRESULT None None.SelectButton([in] ULONG ulButton)
HRESULT None None.SelectDefaultAudioLanguage([in] LCID Language,[in] DVD_AUDIO_LANG_EXT audioExtension)
HRESULT None None.SelectDefaultMenuLanguage(LCID Language None)
HRESULT None None.SelectDefaultSubpictureLanguage([in] LCID Language,[in] DVD_SUBPICTURE_LANG_EXT subpictureExtension)
HRESULT None None.SelectKaraokeAudioPresentationMode([in] ULONG ulMode)
HRESULT None None.selectNodes(BSTR expression None,IXMLDOMNodeList **resultList None)
HRESULT None None.SelectParentalCountry([in] BYTE country_region[2])
HRESULT None None.SelectParentalLevel(ULONG ulParentalLevel None)
HRESULT None None.SelectRelativeButton(DVD_RELATIVE_BUTTON buttonDir None)
HRESULT None None.selectSingleNode(BSTR queryString None,IXMLDOMNode **resultNode None)
HRESULT None None.SelectSubpictureStream(ULONG ulSubPicture None,[in] DWORD dwFlags,[out] IDvdCmd **ppCmd)
HRESULT None None.SelectTerminal([in] ITTerminal *pTerminal)
HRESULT None None.SelectVideoModePreference([in] ULONG ulPreferredDisplayMode)
HRESULT None None.SendCurveMsg(IDirectMusicPerformance8* pPerf None)
HRESULT None None.SendEndOfStream([in] UINT32 frameCount)
HRESULT None None.SendExternalTransMsg(LPCWSTR wszDestFormatName None)
HRESULT None None.SendInternalTransMsg(LPCWSTR wszDestFormatName None)
HRESULT None None.Send(ISequentialStream *pBody None,ULONGLONG cbBody None)
HRESULT None None.SendMessageComplete([in] BSTR bstrMsg,[in] BSTR bstrParam,[in] BSTR bstrResult)
HRESULT None None.SendMessage([in] BSTR bstrMsg,[in] BSTR bstrParam)
HRESULT None None.SendOnRename([in] IMoniker *pmk)
HRESULT None None.SendPMsg(DMUS_PMSG* pPMSG None)
HRESULT None None.SendSingleTransMessage(LPCWSTR wszDestFormatName None)
HRESULT None None.SendToDest(WCHAR *wszComputerName None,WCHAR *wszQueueName None)
HRESULT None None.send(VARIANT varBody None)
HRESULT None None.SerializePropVariantAsString(const PROPVARIANT *ppropvar,PWSTR *pszOut None)
HRESULT None None.SessionSequenceStart([in] AMCOPPSignature *pSig)
HRESULT None None.SetAcceleratedStreamingDuration([in] QWORD cnsAccelDuration)
HRESULT None None.SetAcceleratorInterface([in] IAMVideoAccelerator *pIAMVA)
HRESULT None None.SetAcceleratorTable([in] HWND hwnd,[in] HACCEL hAccel)
HRESULT None None.SetAccessibilityLongDescription([in] LPCWSTR longDescription)
HRESULT None None.SetAccessibilityShortDescription([in] LPCWSTR shortDescription)
HRESULT None None.SetAccessRights([in] PACTRL_ACCESSW pAccessList)
HRESULT None None.SetActiveObject([in] IOleInPlaceActiveObject *pActiveObject,[in] LPCOLESTR pszObjName)
HRESULT None None.SetActualDataLength(long lLen None)
HRESULT None None.SetAllDefaultsWithNotify([out] GUID **ChangedParam,[out] ULONG *ChangedParamCount)
HRESULT None None.SetAllocateForOutput([in] DWORD dwOutputNum,[in] BOOL fAllocate)
HRESULT None None.SetAllocateForOutput([in] DWORD dwOutputNum,[in] IWMReaderAllocatorEx *pAllocator)
HRESULT None None.SetAllocateForPostView([in] WORD wStreamNumber,[in] BOOL fAllocate)
HRESULT None None.SetAllocateForStream([in] WORD wStreamNum,[in] BOOL fAllocate)
HRESULT None None.SetAllocateForStream([in] WORD wStreamNum,[in] IWMReaderAllocatorEx *pAllocator)
HRESULT None None.SetAllParameters(LPCDS3DLISTENER pcListener None,DWORD dwApply None)
HRESULT None None.SetAllParameters(LPCDSFXDistortion pcDsFxDistortion None)
HRESULT None None.SetAllSettingsWithNotify([in] IStream *pStream,[out] GUID **ChangedParam,[in] ULONG *ChangedParamCount)
HRESULT None None.SetAlpha([in] DWORD dwStreamID,[in] float Alpha)
HRESULT None None.SetAnswerMode([in] BOOL bAnswer)
HRESULT None None.SetAppAsDefaultAll([in] LPCWSTR pszAppRegistryName)
HRESULT None None.SetAspectRatioMode([in] AM_ASPECT_RATIO_MODE amAspectRatioMode)
HRESULT None None.SetAspectRatioMode([in] DWORD AspectRatioMode)
HRESULT None None.SetAt([in] UINT32 index,[in] IXpsOMRemoteDictionaryResource *object)
HRESULT None None.setAttribute(BSTR name None,VARIANT value None)
HRESULT None None.SetAttribute(DWORD ValueName None,DWORD dwValue None)
HRESULT None None.setAttributeNode(IXMLDOMAttribute *DOMAttribute None,IXMLDOMAttribute **attributeNode None)
HRESULT None None.SetAuthenticationLevel(AUTHENTICATION_LEVEL AuthLevel None)
HRESULT None None.SetAuthorAndModifiedBy(IOpcPackage *package None,LPCWSTR AuthorName None)
HRESULT None None.SetAutoPlay([in] BOOL AutoPlay)
HRESULT None None.SetAutoReconnectLimit([in] DWORD dwAutoReconnectLimit)
HRESULT None None.SetBackgroundClr([in] COLORREF ClrBkg)
HRESULT None None.SetBalance([in] float flBalance)
HRESULT None None.SetBalloonRetry([in] DWORD dwShowTime,[in] DWORD dwInterval,[in] UINT cRetryCount)
HRESULT None None.SetBidiLevel([in] UINT32 bidiLevel)
HRESULT None None.SetBindOptions([in] BIND_OPTS *pbindopts)
HRESULT None None.SetBitrate([in] DWORD dwBitrate)
HRESULT None None.SetBlendingParameter([in] DWORD dwBlendingParameter)
HRESULT None None.SetBorderColor([in] COLORREF Clr)
HRESULT None None.SetBorderColor([in] COLORREF clrBorder)
HRESULT None None.SetBufferingTime([in] QWORD cnsBufferingTime)
HRESULT None None.SetBuffer(INSSBuffer* pBuffer None)
HRESULT None None.SetBufferSizeBits([in] ULONG ulBufferSize)
HRESULT None None.SetBufferWindow([in] DWORD msBufferWindow)
HRESULT None None.SetBump([in] long Speed,[in] long Duration)
HRESULT None None.setBurnVerification(IDiscFormat2Data *DataWriter None,IMAPI_BURN_VERIFICATION_LEVEL VerificationLevel None)
HRESULT None None.SetCallback([in] IMFVideoSampleAllocatorNotify *pNotify)
HRESULT None None.SetCallback([in] IWMPContentPartnerCallback *pCallback)
HRESULT None None.SetCaption([in] BSTR strCaption)
HRESULT None None.SetCategory([in] LPCWSTR category)
HRESULT None None.SetCertificateEmbeddingOption([in] OPC_CERTIFICATE_EMBEDDING_OPTION embeddingOption)
HRESULT None None.SetChannelConfig([in] DWORD dwConfig,[in] LPCGUID pguidEventContext)
HRESULT None None.SetChannelVolumeLevel([in] UINT nChannel,[in] float fLevelDB,[in] LPCGUID pguidEventContext)
HRESULT None None.SetChannelVolumeLevelScalar([in] UINT nChannel,[in] float fLevel,[in] LPCGUID pguidEventContext)
HRESULT None None.SetChannelVolumes([in] UINT32 u32ChannelCount,[in] FLOAT32 *pf32Volumes)
HRESULT None None.SetChase([in] long Enable,[in] long Offset,[in] HEVENT hEvent)
HRESULT None None.SetClientGuid([in] REFGUID guid)
HRESULT None None.SetClientInfo([in] WM_READER_CLIENTINFO *pClientInfo)
HRESULT None None.SetClientSite([in] IOleClientSite *pClientSite)
HRESULT None None.SetClipFactor([in] long ClipFactor)
HRESULT None None.SetClockDelta(REFERENCE_TIME rtDelta None)
HRESULT None None.SetColorKey([in] COLORKEY *pColorKey)
HRESULT None None.SetColorKey([in] DDCOLORKEY clr)
HRESULT None None.SetColumns(DBORDINAL cColumns None,DBCOLUMNACCESS rgColumns[ ])
HRESULT None None.SetComboBoxSelectedValue([in] DWORD dwFieldID,[in] DWORD dwSelectedItem)
HRESULT None None.SetCommandStream(REFIID riid None,REFGUID rguidDialect None,IUnknown *pCommandStream None)
HRESULT None None.SetCommandText(REFGUID rguidDialect None,LPCOLESTR pwszCommand None)
HRESULT None None.SetCompletionCallback(IWMSPacketListCallback* pCallback None)
HRESULT None None.SetConnectionBandwidth([in] DWORD dwConnectionBandwidth)
HRESULT None None.SetConnectionName([in] WCHAR *pwszInputName)
HRESULT None None.SetContent([in] IStream *sourceStream,[in] XPS_FONT_EMBEDDING embeddingOption,[in] IOpcPartUri *partName)
HRESULT None None.SetContent([in] IStream *sourceStream,[in] XPS_IMAGE_TYPE imageType,[in] IOpcPartUri *partName)
HRESULT None None.SetContentProtectionManager([in] IMFContentProtectionManager *pCPM)
HRESULT None None.SetContentStatus([in] LPCWSTR contentStatus)
HRESULT None None.SetContentType([in] LPCWSTR contentType)
HRESULT None None.SetControlbar([in] LPCONTROLBAR pControlbar)
HRESULT None None.SetControlStream([in] WORD wStreamNumber,[in] BOOL fShouldControlStartAndStop)
HRESULT None None.SetCoreProperties([in] IXpsOMCoreProperties *coreProperties)
HRESULT None None.SetCreated([in] SYSTEMTIME *created)
HRESULT None None.SetCreator([in] LPCWSTR creator)
HRESULT None None.SetCredentialFlags([in] DWORD dwFlags)
HRESULT None None.SetCredentialsEx2([in] BSTR bstrRealm,[in] BSTR bstrUrl,[in] BOOL fProxy,[in] BSTR bstrName,[in] BSTR bstrPassword,[in] BOOL fPersist,[in] BOOL fConfirmedGood,[in] BOOL fClearTextAuthentication)
HRESULT None None.SetCredentialsEx([in] BSTR bstrRealm,[in] BSTR bstrUrl,[in] BOOL fProxy,[in] BSTR bstrName,[in] BSTR bstrPassword,[in] BOOL fPersist,[in] BOOL fConfirmedGood)
HRESULT None None.SetCredentials([in] BSTR bstrRealm,[in] BSTR bstrName,[in] BSTR bstrPassword,[in] BOOL fPersist,[in] BOOL fConfirmedGood)
HRESULT None None.SetCurrentFolderFlags([in] DWORD dwMask,[in] DWORD dwFlags)
HRESULT None None.SetCurrentPosition([in] QWORD qwPosition)
HRESULT None None.SetCurrentReportInterval(ISensor* pSensor None,ULONG ulNewInterval None)
HRESULT None None.SetCurrentService(AM_LINE21_CCSERVICE Service None)
HRESULT None None.SetCurrentTexturePalette([in] UINT PaletteNumber)
HRESULT None None.SetCurrentTime([in] double seekTime)
HRESULT None None.SetCursorProperties([in] UINT XHotSpot,[in] UINT YHotSpot,[in] IDirect3DSurface9 *pCursorBitmap)
HRESULT None None.SetCustomResponseStream(ISequentialStream *pSequentialStream None)
HRESULT None None.SetData([in] FORMATETC *pformatetc,[in] STGMEDIUM *pmedium,[in] BOOL fRelease)
HRESULT None None.SetDDrawDevice([in] LPDIRECTDRAW7 lpDirectDrawDevice,[in] HMONITOR hMonitor)
HRESULT None None.SetDDSurfaceKernelHandles([in] DWORD cHandles,[in] ULONG_PTR *rgDDKernelHandles)
HRESULT None None.SetDecimationImageSize([in] long lWidth,[in] long lHeight)
HRESULT None None.SetDefaultDigestMethod([in] LPCWSTR digestMethod)
HRESULT None None.SetDefaultExtension([in] LPCWSTR pszDefaultExtension)
HRESULT None None.SetDefaultFolder([in] IShellItem *psi)
HRESULT None None.SetDefaultPlaybackRate([in] double Rate)
HRESULT None None.SetDefaultTimerResolution([in] REFERENCE_TIME timerResolution)
HRESULT None None.SetDeinterlaceMode([in] AMVP_MODE mode)
HRESULT None None.SetDeinterlaceMode([in] DWORD dwStreamID,[in] GUID *lpDeinterlaceMode)
HRESULT None None.SetDepthStencilSurface([in] IDirect3DSurface9 *pNewZStencil)
HRESULT None None.SetDescription([in] LPCWSTR description)
HRESULT None None.SetDestinationPosition([in] long Left,[in] long Top,[in] long Width,[in] long Height)
HRESULT None None.SetDestinationPosition(long Left None,long Top None,long Width None,long Height None)
HRESULT None None.SetDeviceFontName([in] LPCWSTR deviceFontName)
HRESULT None None.SetDialogBoxMode([in] BOOL bEnableDialogs)
HRESULT None None.SetDictionaryLocal([in] IXpsOMDictionary *resourceDictionary)
HRESULT None None.SetDictionaryResource([in] IXpsOMRemoteDictionaryResource *remoteDictionaryResource)
HRESULT None None.SetDirectDraw(LPDIRECTDRAW pDirectDraw None)
HRESULT None None.SetDirectivity(SpatialAudioHrtfDirectivityUnion directivity None)
HRESULT None None.SetDirectSound(LPDIRECTSOUND pDirectSound None,LPDIRECTSOUNDBUFFER pDirectSoundBuffer None)
HRESULT None None.SetDisabled([in] REFCLSID clsid,[in] BOOL disabled)
HRESULT None None.SetDiscardControlPartName([in] IOpcPartUri *discardControlPartUri)
HRESULT None None.SetDiscontinuity(BOOL bDiscont None)
HRESULT None None.SetDiscontinuity([in] BOOL bIsDiscontinuity)
HRESULT None None.SetDisplayName([in] LPCWSTR Value,[in] LPCGUID EventContext)
HRESULT None None.SetDisplaySurface([in] IDXGISurface *pScanoutSurface)
HRESULT None None.SetDistanceDecay([in] SpatialAudioHrtfDistanceDecay *distanceDecay)
HRESULT None None.SetDistanceFactor(D3DVALUE flDistanceFactor None,DWORD dwApply None)
HRESULT None None.SetDocumentSequence([in] IXpsOMDocumentSequence *documentSequence)
HRESULT None None.SetDocumentStructureResource([in] IXpsOMDocumentStructureResource *documentStructureResource)
HRESULT None None.SetDouble([in] REFGUID guidKey,[in] double fValue)
HRESULT None None.SetDrawBackgroundMode(AM_LINE21_DRAWBGMODE Mode None)
HRESULT None None.SetDrawBackgroundMode([in] AM_WST_DRAWBGMODE Mode)
HRESULT None None.SetDuckingPreference([in] BOOL optOut)
HRESULT None None.SetDuration([in] double duration)
HRESULT None None.SetDVDDirectory([in] LPCWSTR pszwPath)
HRESULT None None.SetEchoEffect(IDirectMusicPerformance8 *pPerformance None,IDirectMusicAudioPath* p3DAudioPath None,IDirectSoundBuffer8* pDSBuffer None)
HRESULT None None.SetEditBoxText([in] DWORD dwIDCtl,[in] LPCWSTR pszText)
HRESULT None None.SetEditProperty([in] long EditID,[in] long Param,[in] long Value)
HRESULT None None.SetEditPropertySet([in None None,out] long *pEditID,[in] long State)
HRESULT None None.SetEnabled([in] BOOL bEnable,[in] LPCGUID pguidEventContext)
HRESULT None None.SetEnabled([in] long Mode,[in] long bEnabled)
HRESULT None None.SetEnableHTTP([in] BOOL fEnableHTTP)
HRESULT None None.SetEnable([in] BOOL fEnable)
HRESULT None None.SetEnableMulticast([in] BOOL fEnableMulticast)
HRESULT None None.SetEnableTCP([in] BOOL fEnableTCP)
HRESULT None None.SetEnableUDP([in] BOOL fEnableUDP)
HRESULT None None.SetEngineDeviceFormat([in] IMMDevice *pDevice,[in] WAVEFORMATEX *_pwfxFormat)
HRESULT None None.SetEnvironment([in] SpatialAudioHrtfEnvironmentType environment)
HRESULT None None.SetErrorCode([in] MF_MEDIA_ENGINE_ERR error)
HRESULT None None.SetEvaluateOutputLevelLicenses([in] BOOL fEvaluate)
HRESULT None None.SetEventHandle([in] HANDLE eventHandle)
HRESULT None None.SetEvictionPriority(UINT EvictionPriority None)
HRESULT None None.SetExceptionMode([in] UINT RaiseFlags)
HRESULT None None.SetExceptionMode(UINT RaiseFlags None)
HRESULT None None.SetExtendedAttribute(DWORD dwValueName None,VARIANT VariantValue None)
HRESULT None None.SetExtendedAttribute(DWORD ValueName None,VARIANT VariantValue None)
HRESULT None None.SetExtent([in] DWORD dwDrawAspect,[in] SIZEL *psizel)
HRESULT None None.SetFeatureMask(D3D12_DEBUG_FEATURE Mask None)
HRESULT None None.SetFieldInteractiveState([in] ICredentialProviderCredential *pcpc,[in] DWORD dwFieldID,[in] CREDENTIAL_PROVIDER_FIELD_INTERACTIVE_STATE cpfis)
HRESULT None None.SetFileName([in] LPCWSTR pszName)
HRESULT None None.SetFileNameLabel([in] LPCWSTR pszLabel)
HRESULT None None.SetFillBrushLocal([in] IXpsOMBrush *brush)
HRESULT None None.SetFillBrushLocal([in] IXpsOMBrush *fillBrush)
HRESULT None None.SetFillBrushLookup([in] LPCWSTR key)
HRESULT None None.SetFillBrushLookup([in] LPCWSTR lookup)
HRESULT None None.SetFilterFlags([in] IBaseFilter *pFilter,[in] DWORD dwFlags)
HRESULT None None.SetFiltergraph([in] IGraphBuilder *pfg)
HRESULT None None.SetFlags(DWORD dwFlags None,DWORD dwFlagMask None)
HRESULT None None.SetFocus([in] IUnknown *pFocusObject)
HRESULT None None.SetFocusWindow([in] HWND hWnd,[in] BOOL bMixingOnOrOff)
HRESULT None None.SetFolder([in] IShellItem *psi)
HRESULT None None.SetFontFaceIndex([in] SHORT fontFaceIndex)
HRESULT None None.SetFontRenderingEmSize([in] FLOAT fontRenderingEmSize)
HRESULT None None.SetFontResource([in] IXpsOMFontResource *fontResource)
HRESULT None None.SetForceRerunAutoProxyDetection([in] BOOL fForceRerunDetection)
HRESULT None None.SetFormat(GUID Format None)
HRESULT None None.SetFVF([in] DWORD FVF)
HRESULT None None.SetGain([in] float gain)
HRESULT None None.SetGeometricAperture(IMFMediaType *pMediaType None,const MFVideoArea area)
HRESULT None None.SetGeometryLocal([in] IXpsOMGeometry *geometry)
HRESULT None None.SetGeometryLookup([in] LPCWSTR lookup)
HRESULT None None.SetGfxState([in] IMMDevice *pDevice,[in] BOOL *pbEnable)
HRESULT None None.SetGPRM([in] ULONG ulIndex,[in] WORD wValue,[in] DWORD dwFlags,[out] IDvdCmd **ppCmd)
HRESULT None None.SetGraph(ID2D1TransformGraph *transformGraph None)
HRESULT None None.SetGroupingParam([in] LPCGUID Grouping,[in] LPCGUID EventContext)
HRESULT None None.SetGuid([in] REFGUID guid)
HRESULT None None.SetGUID([in] REFGUID guidKey,[in] REFGUID guidValue)
HRESULT None None.SetHoldPage([in] BOOL bHoldPage)
HRESULT None None.SetHyperlinkNavigateUri([in] IUri *hyperlinkUri)
HRESULT None None.SetIconPath([in] LPCWSTR Value,[in] LPCGUID EventContext)
HRESULT None None.SetIdentifier([in] LPCWSTR identifier)
HRESULT None None.SetImageCompositor([in] IVMRImageCompositor *lpVMRImgCompositor)
HRESULT None None.SetIndex(DBID *pIndexID None)
HRESULT None None.SetIndexMode([in] BOOL bIndexFile)
HRESULT None None.SetIndices([in] IDirect3DIndexBuffer9 *pIndexData)
HRESULT None None.Set([in] DWORD dwProperty,[in] ULONG_PTR dwValue)
HRESULT None None.SetInputMaxLatency(DWORD dwInputStreamIndex None,REFERENCE_TIME rtMaxLatency None)
HRESULT None None.SetInputMediaType([in] DWORD dwStreamIndex,[in] IMFMediaType *pInputMediaType,[in] IMFAttributes *pEncodingParameters)
HRESULT None None.SetInputPrefType([in] DWORD dwInputIndex,[in] IMFMediaType *pType)
HRESULT None None.SetInputProps([in] DWORD dwInputNum,[in] IWMInputMediaProps *pInput)
HRESULT None None.SetInputType([in] DWORD dwInputStreamID,[in] IMFMediaType *pType,[in] DWORD dwFlags)
HRESULT None None.SetInterval(UINT uiInterval None)
HRESULT None None.SetIsFilled([in] BOOL isFilled)
HRESULT None None.SetIsHyperlinkTarget([in] BOOL isHyperlink)
HRESULT None None.SetItemHeight([in] int cyItemInPixels)
HRESULT None None.SetKeywords([in] LPCWSTR keywords)
HRESULT None None.SetLanguage([in] LPCWSTR language)
HRESULT None None.SetLastModifiedBy([in] LPCWSTR lastModifiedBy)
HRESULT None None.SetLastPrinted([in] SYSTEMTIME *lastPrinted)
HRESULT None None.SetLatency(IDirectMusicPort8 *pDMPort None,DWORD dwLatency None)
HRESULT None None.SetLcid([in] LCID lcid)
HRESULT None None.SetLevel([in] UINT nChannel,[in] float fLevelDB,[in] LPCGUID pguidEventContext)
HRESULT None None.SetLiveSource([in] BOOL fIsLiveSource)
HRESULT None None.SetLocalEffectsState([in] BOOL bEnabled)
HRESULT None None.SetLogClientID([in] BOOL fLogClientID)
HRESULT None None.SetLongValue(LPCWSTR pstrName None,long lNameHint None,long lValue None,long lOptions None)
HRESULT None None.SetLoop([in] BOOL Loop)
HRESULT None None.SetManualStreamSelection([in] BOOL fSelection)
HRESULT None None.SetMasterClock(REFGUID rguidClock None)
HRESULT None None.SetMasterStream([in] LONG iStream)
HRESULT None None.SetMasterVolume([in] float fLevel,[in] LPCGUID EventContext)
HRESULT None None.SetMasterVolumeLevelScalar([in] float fLevel,[in] LPCGUID pguidEventContext)
HRESULT None None.SetMatrixTransform(const DXGI_MATRIX_3X2_F *pMatrix)
HRESULT None None.SetMaxFrameRate(IMFMediaSource *pSource None,DWORD dwTypeIndex None)
HRESULT None None.SetMaximumClients([in] DWORD dwMaxClients)
HRESULT None None.SetMaxItemCount(UINT uiMaxItemCount None)
HRESULT None None.SetMaxKeyFrameSpacing([in] LONGLONG llTime)
HRESULT None None.SetMaxPacketSize([in] DWORD dwMaxPacketSize)
HRESULT None None.SetMediaItem([in] IMFPMediaItem *pIMFPMediaItem)
HRESULT None None.SetMediaStopDynamic(IMFMediaSession *pSession None,IMFTopology *pTopology None,const LONGLONG stop)
HRESULT None None.SetMediaTime(LONGLONG *pStart None,LONGLONG *pEnd None)
HRESULT None None.SetMediaType(AM_MEDIA_TYPE *pMediaType None)
HRESULT None None.SetMediaType(const CMediaType *pmt)
HRESULT None None.SetMediaType([in] WM_MEDIA_TYPE *pType)
HRESULT None None.SetMenu([in] HMENU hmenuShared,[in] HOLEMENU holemenu,[in] HWND hwndActiveObject)
HRESULT None None.SetMenuRestrictions([in] DEFAULT_FOLDER_MENU_RESTRICTIONS dfmrValues)
HRESULT None None.SetMinPacketSize([in] DWORD dwMinPacketSize)
HRESULT None None.SetMixerSourceRect(IMFTransform *pMixer None,const MFVideoNormalizedRect nrcSource)
HRESULT None None.SetMixingPrefs([in] DWORD dwMixerPrefs)
HRESULT None None.SetMode([in] DWORD dwFlags)
HRESULT None None.SetModified([in] SYSTEMTIME *modified)
HRESULT None None.SetMoniker([in] DWORD dwWhichMoniker,[in] IMoniker *pmk)
HRESULT None None.SetMonitor([in] long Monitor)
HRESULT None None.SetMulticastAddressProp(LPCWSTR wszQueueFormatName None,LPWSTR wszValue None)
HRESULT None None.SetMultiOption([in] STRUCTURED_QUERY_MULTIOPTION option,[in] LPCWSTR pszOptionKey,[in] PROPVARIANT *pOptionValue)
HRESULT None None.SetMute(BOOL fMute None)
HRESULT None None.SetMuted([in] BOOL Muted)
HRESULT None None.SetMute([in] BOOL bMuted)
HRESULT None None.SetMute([in] BOOL bMuted,[in] LPCGUID pguidEventContext)
HRESULT None None.SetMute([in] BOOL bMute,[in] LPCGUID EventContext)
HRESULT None None.SetMute([in] BOOL bMute,[in] LPCGUID pguidEventContext)
HRESULT None None.setNamedItem(IXMLDOMNode *newItem None,IXMLDOMNode **nameItem None)
HRESULT None None.SetName([in] LPCWSTR name)
HRESULT None None.SetName([in] WCHAR *pwszName)
HRESULT None None.SetNetworkAdministrationAccess(BOOL bNetworkAdministrationAccess None)
HRESULT None None.SetNetworkClientAccess(BOOL bNetworkClientAccess None)
HRESULT None None.SetNetworkOutboundAccess(BOOLbOutbound None None)
HRESULT None None.SetNetworkProtocol([in] WMT_NET_PROTOCOL protocol)
HRESULT None None.SetNetworkTIPAccess(BOOL bNetworkTIPAccess None)
HRESULT None None.SetNetworkTransactionAccess(BOOL bNetworkTransactionAccess None)
HRESULT None None.SetNotify(IMemAllocatorNotifyCallbackTemp *pNotify None)
HRESULT None None.SetNotifyWindow([in] OAHWND hwnd,[in] long lMsg,[in] LONG_PTR lInstanceData)
HRESULT None None.SetNPatchMode([in] float nSegments)
HRESULT None None.SetNumberOfStreams([in] DWORD dwMaxStreams)
HRESULT None None.SetNumPreprocessingPasses([in] DWORD dwInputNum,[in] DWORD dwFlags,[in] DWORD dwNumPasses)
HRESULT None None.SetObject([in] IUnknown *pObject)
HRESULT None None.SetObjects([in] ULONG cObjects,[in] IUnknown **ppUnk)
HRESULT None None.SetObjects(ULONG cObjects None,LPUNKNOWN *ppUnk None)
HRESULT None None.SetOkButtonLabel([in] LPCWSTR pszText)
HRESULT None None.SetOpacityMaskBrushLocal([in] IXpsOMBrush *opacityMaskBrush)
HRESULT None None.SetOpacityMaskBrushLookup([in] LPCWSTR key)
HRESULT None None.SetOPMWindow([in] HWND hwnd)
HRESULT None None.SetOption([in] DVD_OPTION_FLAG flag,[in] BOOL bEnable)
HRESULT None None.SetOption([in] STRUCTURED_QUERY_SINGLE_OPTION option,[in] PROPVARIANT *pOptionValue)
HRESULT None None.setOption(SERVERXMLHTTP_OPTION option None,VARIANT value None)
HRESULT None None.SetOptions([in] EXPLORER_BROWSER_OPTIONS dwFlag)
HRESULT None None.SetOptions([in] FILEOPENDIALOGOPTIONS fos)
HRESULT None None.SetOptions(XACTOPT *pOptions None)
HRESULT None None.SetOrientation(D3DVALUE xFront None,D3DVALUE yFront None,D3DVALUE zFront None,D3DVALUE xTop None,D3DVALUE yTop None,D3DVALUE zTop None,DWORD dwApply None)
HRESULT None None.SetOutputBounds(LONGLONG hnsLowerBound None,LONGLONG hnsUpperBound None)
HRESULT None None.SetOutputBuffer(D2D1_BUFFER_PRECISION bufferPrecision None,D2D1_CHANNEL_DEPTH channelDepth None)
HRESULT None None.SetOutputFileName([in] LPCWSTR fileName)
HRESULT None None.SetOutputFormat(LPBITMAPINFO lpbmi None)
HRESULT None None.SetOutput(IUnknown * pOutput)
HRESULT None None.SetOutputPinMediaType([in] LPWSTR pszPinName,[in] AM_MEDIA_TYPE *pMediaType)
HRESULT None None.SetOutputProps([in] DWORD dwOutputNum,[in] IWMOutputMediaProps *pOutput)
HRESULT None None.SetOutputType([in] DWORD dwOutputStreamID,[in] IMFMediaType *pType,[in] DWORD dwFlags)
HRESULT None None.SetOwner(IUnknown *punkOwner None)
HRESULT None None.SetOwnerWindow([in] HWND hwndOwner)
HRESULT None None.SetPacketParser(IWMSPacketParser* pSource None)
HRESULT None None.SetPage([in] IXpsOMPage *page)
HRESULT None None.SetParameter([in] LPCWSTR pszName,[in] PROPVARIANT *pValue)
HRESULT None None.SetParam([in] DWORD dwParamIndex,[in] MP_DATA value)
HRESULT None None.SetParam(REFGUID rguidType None,DWORD dwGroupBits None,DWORD dwIndex None,MUSIC_TIME mtTime None,void* pParam None)
HRESULT None None.SetPassthroughGraph(UINT32 effectInputIndex None)
HRESULT None None.SetPassword([in] BYTE *pbData,[in] DWORD cbData,[in] BOOL fDataIsEncrypted)
HRESULT None None.SetPatternByName(IDirectMusicSegmentState* pSegState None,WCHAR* wszName None,IDirectMusicStyle* pStyle None,DWORD dwPatternType None,DWORD* pdwLength None)
HRESULT None None.SetPixelShader([in] IDirect3DPixelShader9 *pShader)
HRESULT None None.SetPlaybackOptimizations(IMFTopology *pTopology None,HWND hwnd None)
HRESULT None None.SetPlaybackRate([in] double Rate)
HRESULT None None.SetPlaylistGenerationID(DWORD dwID None)
HRESULT None None.SetPlayMode([in] WMT_PLAY_MODE Mode)
HRESULT None None.SetPointer(BYTE *ptr None,LONG cBytes None)
HRESULT None None.SetPolicy([in] IMFOutputPolicy **ppPolicy,[in] DWORD nPolicy,[out] BYTE **ppbTicket,[out] DWORD *pcbTicket)
HRESULT None None.SetPosition([in] float x,[in] float y,[in] float z)
HRESULT None None.SetPostViewCallback([in] IWMWriterPostViewCallback *pCallback,[in] void *pvContext)
HRESULT None None.SetPreload([in] MF_MEDIA_ENGINE_PRELOAD Preload)
HRESULT None None.SetPreroll(BOOL bIsPreroll None)
HRESULT None None.SetPresenterChoice([in] SYNCMGR_PRESENTER_CHOICE nPresenterChoice,[in] BOOL fApplyToAll)
HRESULT None None.SetPresenterNextStep([in] SYNCMGR_PRESENTER_NEXT_STEP nPresenterNextStep)
HRESULT None None.SetProcAmpControl([in] DWORD dwStreamID,[in] VMR9ProcAmpControl *lpClrControl)
HRESULT None None.SetProfileByID([in] REFGUID guidProfile)
HRESULT None None.SetProperties(DWORD cbProperties None,const BYTE *pbProperties)
HRESULT None None.SetProperties(ULONG cPropertySets None,DBPROPSET rgPropertySets[] None)
HRESULT None None.setProperty(BSTR name None,VARIANT value None)
HRESULT None None.setProperty(BSTR strProp None,VARIANT vBool None)
HRESULT None None.SetProperty([in] UINT nProperty,[in] LONG_PTR pValue)
HRESULT None None.SetProtectStreamSamples([in] WMDRM_IMPORT_INIT_STRUCT *pImportInitStruct)
HRESULT None None.SetProxyBypassForLocal([in] LPCWSTR pwszProtocol,[in] BOOL fBypassForLocal)
HRESULT None None.setProxyCredentials(BSTR bstrUserName None,BSTR bstrPassword None)
HRESULT None None.SetProxyExceptionList([in] LPCWSTR pwszProtocol,[in] LPCWSTR pwszExceptionList)
HRESULT None None.SetProxyHostName([in] LPCWSTR pwszProtocol,[in] LPCWSTR pwszHostName)
HRESULT None None.SetProxyPort([in] LPCWSTR pwszProtocol,[in] DWORD dwPort)
HRESULT None None.SetProxySettings([in] LPCWSTR pwszProtocol,[in] WMT_PROXY_SETTINGS ProxySetting)
HRESULT None None.setProxy(SXH_PROXY_SETTING proxySetting None,VARIANT varProxyServer None,VARIANT varBypassList None)
HRESULT None None.SetPushSourceFlags([in] ULONG Flags)
HRESULT None None.SetQuality([in] DWORD dwQuality)
HRESULT None None.SetQueueAuthenticateProp(LPCWSTR wszQueueFormatName None,UCHAR bValue None)
HRESULT None None.SetQueueBasePriorityProp(LPCWSTR wszQueueFormatName None,SHORT iValue None)
HRESULT None None.SetQueueJournalProp(LPCWSTR wszQueueFormatName None,UCHAR bValue None)
HRESULT None None.SetQueueJournalQuotaProp(LPCWSTR wszQueueFormatName None,int iValue None)
HRESULT None None.SetQueueLabelProp(LPCWSTR wszQueueFormatName None,LPWSTR wszValue None)
HRESULT None None.SetQueueQuotaProp(LPCWSTR wszQueueFormatName None,int iValue None)
HRESULT None None.SetQueueTypeProp(LPCWSTR wszQueueFormatName None,CLSID *pIDValue None)
HRESULT None None.SetQwordValue(LPCWSTR pstrName None,long lNameHint None,CURRENCY qwValue None,long lOptions None)
HRESULT None None.SetRangeByFrame([in] WORD wStreamNum,[in] QWORD qwFrameNumber,[in] LONGLONG cFramesToRead)
HRESULT None None.SetRangeByTimecode([in] WORD wStreamNum,[in] WMT_TIMECODE_EXTENSION_DATA *pStart,[in] WMT_TIMECODE_EXTENSION_DATA *pEnd)
HRESULT None None.SetRange([in] QWORD cnsStartTime,[in] LONGLONG cnsDuration)
HRESULT None None.SetRate([in] float flRate)
HRESULT None None.SetRateToMostForward(IKsPropertySet *pIKsPropertySet None,double dRate None,REFERENCE_TIME *prtStartTime None)
HRESULT None None.SetRdpProperty([in] BSTR propertyName,[in] VARIANT value)
HRESULT None None.SetReadStreamSamples([in] WORD wStreamNum,[in] BOOL fCompressed)
HRESULT None None.SetReceivePostViewSamples([in] WORD wStreamNum,[in] BOOL fReceivePostViewSamples)
HRESULT None None.SetReceiveSelectionCallbacks([in] BOOL fGetCallbacks)
HRESULT None None.SetReceiveStreamSamples([in] WORD wStreamNum,[in] BOOL fReceiveStreamSamples)
HRESULT None None.SetRectComplex([in] LPRECT prcView,[in] LPRECT prcHScroll,[in] LPRECT prcVScroll,[in] LPRECT prcSizeBox)
HRESULT None None.SetRect([in] LPRECT prcView)
HRESULT None None.SetRedrawAlways(BOOL bOption None)
HRESULT None None.SetRedrawAlways([in] BOOL bOption)
HRESULT None None.SetReferrer([in] LPITEMIDLIST pidl)
HRESULT None None.SetRelativePosition([in] DWORD dwLeft,[in] DWORD dwTop,[in] DWORD dwRight,[in] DWORD dwBottom)
HRESULT None None.SetRenderingMode([in] DWORD Mode)
HRESULT None None.SetRenderingPrefs([in] DWORD dwRenderFlags)
HRESULT None None.SetRenderState([in] D3DRENDERSTATETYPE State,[in] DWORD Value)
HRESULT None None.SetRenderTarget([in] DWORD RenderTargetIndex,[in] IDirect3DSurface9 *pRenderTarget)
HRESULT None None.setRequestHeader(BSTR bstrHeader None,BSTR bstrValue None)
HRESULT None None.SetRevision([in] LPCWSTR revision)
HRESULT None None.SetRoot([in] LPCWSTR pszPath)
HRESULT None None.SetRotation([in] DXGI_MODE_ROTATION Rotation)
HRESULT None None.SetRotation(MF_VIDEO_PROCESSOR_ROTATION eRotation None)
HRESULT None None.SetSAMIStyleByIndex(IMFMediaSource *pSource None,DWORD index None)
HRESULT None None.SetSampleDuration([in] LONGLONG hnsSampleDuration)
HRESULT None None.SetSampleFlags([in] DWORD dwSampleFlags)
HRESULT None None.SetSampleRate([in] float flSampleRate)
HRESULT None None.SetSamplerState([in] DWORD Sampler,[in] D3DSAMPLERSTATETYPE Type,[in] DWORD Value)
HRESULT None None.SetSaveAsItem([in] IShellItem *psi)
HRESULT None None.SetSD([in] uint8 SD[])
HRESULT None None.SetSearchDirectory(REFGUID rguidClass None,WCHAR* pwszPath None,BOOL fClear None)
HRESULT None None.SetSecurity([in] SECURITY_INFORMATION SecurityInformation,[in] PSECURITY_DESCRIPTOR pSecurityDescriptor)
HRESULT None None.SetSegmentNotification(IDirectMusicPerformance8* pPerformance None)
HRESULT None None.SetSelected([out] BOOL *pbAutoLogon)
HRESULT None None.SetSelection([in] IShellItemArray *psia)
HRESULT None None.SetServiceState([in] AM_WST_STATE State)
HRESULT None None.SetSignatureId([in] LPCWSTR signatureId)
HRESULT None None.SetSignatureMethod([in] LPCWSTR signatureMethod)
HRESULT None None.SetSignaturePartName([in] IOpcPartUri *signaturePartName)
HRESULT None None.SetSingleTransformNode(ID2D1TransformNode *node None)
HRESULT None None.SetSink(IQualityControl *piqc None)
HRESULT None None.SetSinksForStatus(IWMWriter* pWriter None,IWMStatusCallback* pStatus None)
HRESULT None None.SetSite([in] IUnknown *pUnkSite)
HRESULT None None.SetSnapsToPixels([in] BOOL snapsToPixels)
HRESULT None None.SetSoftwareVertexProcessing([in] BOOL bSoftware)
HRESULT None None.SetSortOrder(DBORDINAL cColumns None,const DBORDINAL rgColumns[],const DBSORT rgOrders[])
HRESULT None None.SetSourceFromByteStream([in] IMFByteStream *pByteStream,[in] BSTR pURL)
HRESULT None None.SetSource([in] BSTR pUrl)
HRESULT None None.SetSource(IUnknown pStream None)
HRESULT None None.SetSourceMoniker([in] IMoniker *pmk,[in] REFCLSID rclsid)
HRESULT None None.SetSourcePosition([in] long Left,[in] long Top,[in] long Width,[in] long Height)
HRESULT None None.SetSourceRectangle(RECT pSrcRect None)
HRESULT None None.SetSPDIF(DWORD dwOutputNum None,IWMReader* pReader None)
HRESULT None None.SetSpeakerConfig(DWORD dwSpeakerConfig None)
HRESULT None None.setStartMode(BSTR mode None,BSTR namespaceURI None)
HRESULT None None.SetState([in] IDvdState *pState,[in] DWORD dwFlags,[out] IDvdCmd **ppCmd)
HRESULT None None.SetStatusText([in] LPCOLESTR pszStatusText)
HRESULT None None.SetStereo3DRenderMode([in] MF3DVideoOutputType outputType)
HRESULT None None.SetStorageFormat([in] WMT_STORAGE_FORMAT nStorageFormat)
HRESULT None None.SetStream([in] IMFASFStreamConfig *pIStream)
HRESULT None None.SetStreamName([in] WCHAR *pwszStreamName)
HRESULT None None.SetStreamNumber([in] WORD wStreamNum)
HRESULT None None.SetStreamPrioritization([in] IWMStreamPrioritization *pSP)
HRESULT None None.SetStreamSelection([in] DWORD dwStreamIndex,[in] BOOL fEnabled)
HRESULT None None.SetStreamSignalParam(VARIANT* pParameter None)
HRESULT None None.SetStreamSourceFreq([in] UINT StreamNumber,[in] UINT FrequencyParameter)
HRESULT None None.SetStreamSource([in] UINT StreamNumber,[in] IDirect3DVertexBuffer9 *pStreamData,[in] UINT OffsetInBytes,[in] UINT Stride)
HRESULT None None.SetStreamsSelected([in] WORD cStreamCount,[in] WORD *pwStreamNumbers,[in] WMT_STREAM_SELECTION *pSelections)
HRESULT None None.SetStreamTransparent([in] BOOL bStreamTransparent)
HRESULT None None.SetStreamType(GUID StreamType None)
HRESULT None None.SetString([in] REFGUID guidKey,[in] LPCWSTR wszValue)
HRESULT None None.SetStringValue(LPCWSTR pstrName None,long lNameHint None,LPCWSTR pstrValue None,long lOptions None)
HRESULT None None.SetStrokeBrushLocal([in] IXpsOMBrush *brush)
HRESULT None None.SetStrokeBrushLookup([in] LPCWSTR lookup)
HRESULT None None.SetStrokeDashCap([in] XPS_DASH_CAP strokeDashCap)
HRESULT None None.SetStrokeDashOffset([in] FLOAT strokeDashOffset)
HRESULT None None.SetStrokeEndLineCap([in] XPS_LINE_CAP strokeEndLineCap)
HRESULT None None.SetStrokeLineJoin([in] XPS_LINE_JOIN strokeLineJoin)
HRESULT None None.SetStrokeMiterLimit([in] FLOAT strokeMiterLimit)
HRESULT None None.SetStrokeStartLineCap([in] XPS_LINE_CAP strokeStartLineCap)
HRESULT None None.SetStrokeThickness([in] FLOAT strokeThickness)
HRESULT None None.SetStyleSimulations([in] XPS_STYLE_SIMULATION styleSimulations)
HRESULT None None.SetSubject([in] LPCWSTR subject)
HRESULT None None.SetSubpictureState([in] BOOL bState,[in] DWORD dwFlags,[out] IDvdCmd **ppCmd)
HRESULT None None.SetSwitches(DWORD Switches None)
HRESULT None None.SetSyncPoint(BOOL bIsSyncPoint None)
HRESULT None None.SetSyncPoint([in] BOOL bIsSyncPoint)
HRESULT None None.SetSyncSetting(FEEDS_SYNC_SETTING fss None)
HRESULT None None.SetSyncSource([in] IReferenceClock *pClock)
HRESULT None None.SetSyncSource(IReferenceClock *pClock None)
HRESULT None None.SetSyncTolerance([in] DWORD msWindow)
HRESULT None None.SetTabProperties([in] HWND hwndTab,[in] STPFLAG stpFlags)
HRESULT None None.SetTCDisplayEnable([in] long State)
HRESULT None None.SetTexture([in] DWORD Sampler,[in] IDirect3DBaseTexture9 *pTexture)
HRESULT None None.SetTextureStageState([in] DWORD Stage,[in] D3DTEXTURESTAGESTATETYPE Type,[in] DWORD Value)
HRESULT None None.SetThumbnailResource([in] IXpsOMImageResource *imageResource)
HRESULT None None.SetTimeFormat(const GUID *pFormat)
HRESULT None None.SetTimeFormat([in] GUID guidTimeFormat,[in] MP_TIMEDATA mpTimeData)
HRESULT None None.SetTime([in] REFERENCE_TIME *pTimeStart,[in] REFERENCE_TIME *pTimeEnd)
HRESULT None None.setTimeouts(long resolveTimeout None,long connectTimeout None,long sendTimeout None,long receiveTimeout None)
HRESULT None None.SetTime(REFERENCE_TIME *pTimeStart None,REFERENCE_TIME *pTimeEnd None)
HRESULT None None.SetTimer([in] DWORD dwFlags,[in] LONGLONG llClockTime,[in] IMFAsyncCallback *pCallback,[in] IUnknown *punkState,[out] IUnknown **ppunkKey)
HRESULT None None.SetTitle([in] LPCWSTR title)
HRESULT None None.SetTopoNodeID([in] TOPOID llTopoID)
HRESULT None None.SetTouchDisableProperty(HWND hwnd None,BOOL fDisableTouch None)
HRESULT None None.SetTransformLocal([in] IXpsOMMatrixTransform *transform)
HRESULT None None.SetTransformLookup([in] LPCWSTR key)
HRESULT None None.SetTransformLookup([in] LPCWSTR lookup)
HRESULT None None.SetTransportAudioParameters([in] long Param,[in] long Value)
HRESULT None None.SetTransportBasicParameters([in] long Param,[in] long Value,[in] LPCOLESTR pszData)
HRESULT None None.SetTransportType([in] WMT_TRANSPORT_TYPE nTransportType)
HRESULT None None.SetTransportVideoParameters([in] long Param,[in] long Value)
HRESULT None None.SetType(AudioObjectType type None)
HRESULT None None.SetType([in] REFGUID guidType)
HRESULT None None.SetUDPPortRanges([in] WM_PORT_NUMBER_RANGE *pRangeArray,[in] DWORD cRanges)
HRESULT None None.SetUINT32([in] REFGUID guidKey,[in] UINT32 unValue)
HRESULT None None.SetUINT64([in] REFGUID guidKey,[in] UINT64 unValue)
HRESULT None None.SetUnicodeString([in] LPCWSTR unicodeString)
HRESULT None None.SetUnknown([in] REFGUID guidKey,[in] IUnknown *pUnknown)
HRESULT None None.SetUpdateOptions([in] DWORD dwUpdateOpt)
HRESULT None None.SetUrl(LPCWSTR pszUrl None)
HRESULT None None.SetURLMapping(LPCOLESTR pwszURL None,DB_DWRESERVE dwReserved None,REFCLSID rclsidProvider None)
HRESULT None None.SetUseAliasedEdgeMode([in] BOOL useAliasedEdgeMode)
HRESULT None None.SetUserProvidedClock([in] BOOL fUserClock)
HRESULT None None.SetValue([in] void *pvValue,[in] DWORD cbValue,[in] LPCGUID pguidEventContext)
HRESULT None None.SetValue(LPCWSTR pstrName None,long lNameHint None,VARIANT Value None,long lOptions None)
HRESULT None None.SetValue(LPCWSTR szValue None)
HRESULT None None.SetVersion([in] LPCWSTR version)
HRESULT None None.SetVertexDeclaration([in] IDirect3DVertexDeclaration9 *pDecl)
HRESULT None None.SetVertexShader([in] IDirect3DVertexShader9 *pShader)
HRESULT None None.SetVideoClippingWindow([in] HWND hwnd)
HRESULT None None.SetVideoFormat([in] DWORD dwChosenEntry)
HRESULT None None.SetVideoPortID([in] DWORD dwVideoPortID)
HRESULT None None.SetVideoPortIndex([in] DWORD dwVideoPortIndex)
HRESULT None None.SetVisualLookup([in] LPCWSTR lookup)
HRESULT None None.SetVolume([in] double Volume)
HRESULT None None.SetVolume([in] float flVolume)
HRESULT None None.SetVolume([in] float volume)
HRESULT None None.SetWindowForeground(long Focus None)
HRESULT None None.SetWindowPosition([in] long Left,[in] long Top,[in] long Width,[in] long Height)
HRESULT None None.SetWindowPosition(long Left None,long Top None,long Width None,long Height None)
HRESULT None None.SetWMDRMNetEncryption([in] BOOL fSamplesEncrypted,[in] BYTE *pbKeyID,[in] DWORD cbKeyID)
HRESULT None None.SetXAAccess(BOOL bXAAccess None)
HRESULT None None.SetZOrder([in] DWORD dwStreamID,[in] DWORD dwZ)
HRESULT None None.SetZOrder([in] DWORD dwZOrder)
HRESULT None None.SHLocalStrDupA(PCTSTR psz None,_Out_opt_ PTSTR *ppsz)
HRESULT None None.SHLocalStrDup(PCTSTR psz None,_Out_opt_ PTSTR *ppsz)
HRESULT None None.SHLocalStrDupW(PCTSTR psz None,_Out_opt_ PTSTR *ppsz)
HRESULT None None.ShortAdd(_In_ SHORT sAugend,_In_ SHORT sAddend,_Out_ SHORT *psResult)
HRESULT None None.ShortMult(_In_ SHORT sMultiplicand,_In_ SHORT sMultiplier,_Out_ SHORT *psResult)
HRESULT None None.ShortSub(_In_ SHORT sMinuend,_In_ SHORT sSubtrahend,_Out_ SHORT *psResult)
HRESULT None None.ShortToByte(_In_ SHORT sOperand,_Out_ BYTE *pb)
HRESULT None None.ShortToChar(_In_ SHORT sOperand,_Out_ __wchar_t *pch)
HRESULT None None.ShortToDWordPtr(_In_ SHORT sOperand,_Out_ DWORD_PTR *pdwResult)
HRESULT None None.ShortToInt8(_In_ SHORT sOperand,_Out_ INT8 *pi8Result)
HRESULT None None.ShortToUChar(_In_ SHORT sOperand,_Out_ UCHAR *pch)
HRESULT None None.ShortToUInt8(_In_ SHORT sOperand,_Out_ UINT8 *pui8Result)
HRESULT None None.ShortToUInt(_In_ SHORT sOperand,_Out_ UINT *puResult)
HRESULT None None.ShortToUIntPtr(_In_ SHORT sOperand,_Out_ UINT_PTR *puResult)
HRESULT None None.ShortToULong(_In_ SHORT sOperand,_Out_ ULONG *pulResult)
HRESULT None None.ShortToULongLong(_In_ SHORT sOperand,_Out_ ULONGLONG *pullResult)
HRESULT None None.ShortToULongPtr(_In_ SHORT sOperand,_Out_ ULONG_PTR *pulResult)
HRESULT None None.ShortToUShort(_In_ SHORT sOperand,_Out_ USHORT *pusResult)
HRESULT None None.ShortToWord(_In_ SHORT sOperand,_Out_ WORD *pwResult)
HRESULT None None.ShouldIndexItemContent([out] BOOL *pfIndexContent)
HRESULT None None.ShowContextualUI(POINT ptLocation None,HWND hWnd None)
HRESULT None None.ShowDialog([in] int iDialog,[in] HWND hwnd)
HRESULT None None.Show([in None None,optional] HWND hwndOwner)
HRESULT None None.ShowMenu([in] DVD_MENU_ID MenuID,[in] DWORD dwFlags,[out] IDvdCmd **ppCmd)
HRESULT None None.ShowPopup([in] long lIndex,[in] BSTR bstrParameters)
HRESULT None None.SHRemoveFolderPathFromLibrary(_In_ IShellLibrary *plib,_In_ PCWSTR pszFolderPath)
HRESULT None None.SHResolveFolderPathInLibrary(_In_ IShellLibrary *plib,_In_ PCWSTR pszFolderPath,_In_ DWORD dwTimeout,_Out_ PWSTR *ppszResolvedPath)
HRESULT None None.SHSaveLibraryInFolderPath(_In_ IShellLibrary *plib,_In_ PCWSTR pszFolderPath,_In_ PCWSTR pszLibraryName,_In_ LIBRARYSAVEFLAGS lsf,_Out_opt_ PWSTR *ppszSavedToPath)
HRESULT None None.ShutdownApplication([in] BSTR bstrApplIDOrName)
HRESULT None None.ShutdownProxyContext2([in] QWORD qwProxyContext)
HRESULT None None.ShutdownProxyContext([in] DWORD dwProxyContext)
HRESULT None None.SignalPresent([out] long *plSignalStrength)
HRESULT None None.SizeTAdd(_In_ size_t cbAugend,_In_ size_t cbAddend,_Out_ size_t *pcbResult)
HRESULT None None.SIZETAdd(_In_ SIZE_T cbAugend,_In_ SIZE_T cbAddend,_Out_ SIZE_T *pcbResult)
HRESULT None None.SizeTMult(_In_ size_t cbMultiplicand,_In_ size_t cbMultiplier,_Out_ size_t *pcbResult)
HRESULT None None.SIZETMult(_In_ SIZE_T cbMultiplicand,_In_ SIZE_T cbMultiplier,_Out_ SIZE_T *pcbResult)
HRESULT None None.SizeTSub(_In_ size_t cbMinuend,_In_ size_t cbSubtrahend,_Out_ size_t *pcbResult)
HRESULT None None.SIZETSub(_In_ SIZE_T cbMinuend,_In_ SIZE_T cbSubtrahend,_Out_ SIZE_T *pcbResult)
HRESULT None None.SizeTToDWord(_In_ size_t cbOperand,_Out_ DWORD *pdwResult)
HRESULT None None.SIZETToDWord(_In_ SIZE_T cbOperand,_Out_ DWORD *pdwResult)
HRESULT None None.SizeTToInt64(_In_ size_t cbOperand,_Out_ INT64 *pi64Result)
HRESULT None None.SIZETToInt64(_In_ SIZE_T cbOperand,_Out_ INT64 *pi64Result)
HRESULT None None.SizeTToInt(_In_ size_t cbOperand,_Out_ INT *piResult)
HRESULT None None.SIZETToInt(_In_ SIZE_T cbOperand,_Out_ INT *piResult)
HRESULT None None.SizeTToIntPtr(_In_ size_t cbOperand,_Out_ INT_PTR *piResult)
HRESULT None None.SIZETToIntPtr(_In_ SIZE_T cbOperand,_Out_ INT_PTR *piResult)
HRESULT None None.SizeTToLong(_In_ size_t cbOperand,_Out_ LONG *plResult)
HRESULT None None.SIZETToLong(_In_ SIZE_T cbOperand,_Out_ LONG *plResult)
HRESULT None None.SizeTToLongPtr(_In_ size_t cbOperand,_Out_ LONG_PTR *plResult)
HRESULT None None.SIZETToLongPtr(_In_ SIZE_T cbOperand,_Out_ LONG_PTR *plResult)
HRESULT None None.SizeTToPtrdiffT(_In_ size_t cbOperand,_Out_ ptrdiff_t *pcbResult)
HRESULT None None.SIZETToPtrdiffT(_In_ SIZE_T cbOperand,_Out_ ptrdiff_t *pcbResult)
HRESULT None None.SizeTToSSIZET(_In_ size_t cbOperand,_Out_ SSIZE_T *pcbResult)
HRESULT None None.SIZETToSSIZET(_In_ SIZE_T cbOperand,_Out_ SSIZE_T *pcbResult)
HRESULT None None.SizeTToUInt(_In_ size_t cbOperand,_Out_ UINT *puiResult)
HRESULT None None.SIZETToUInt(_In_ SIZE_T cbOperand,_Out_ UINT *puiResult)
HRESULT None None.SizeTToULong(_In_ size_t cbOperand,_Out_ ULONG *pulResult)
HRESULT None None.SIZETToULong(_In_ SIZE_T cbOperand,_Out_ ULONG *pulResult)
HRESULT None None.Skip([in] ULONG cConnections)
HRESULT None None.Skip([in] ULONG celt)
HRESULT None None.Skip([in] ULONG cPins)
HRESULT None None.SortItems([in] int nColumn,[in] DWORD dwSortOptions,[in] long lUserParam)
HRESULT None None.splitText(long offset None,IXMLDOMText **rightHandTextNode None)
HRESULT None None.SSIZETAdd(_In_ SSIZE_T Augend,_In_ SSIZE_T Addend,_Out_ SSIZE_T *pResult)
HRESULT None None.SSIZETMult(_In_ SSIZE_T Multiplicand,_In_ SSIZE_T Multiplier,_Out_ SSIZE_T *pResult)
HRESULT None None.SSIZETSub(_In_ SSIZE_T Minuend,_In_ SSIZE_T Subtrahend,_Out_ SSIZE_T *pResult)
HRESULT None None.SSIZETToDWord(_In_ SSIZE_T cbOperand,_Out_ DWORD *pdwResult)
HRESULT None None.SSIZETToDWordPtr(_In_ SSIZE_T cbOperand,_Out_ DWORD_PTR *pdwResult)
HRESULT None None.SSIZETToInt(_In_ SSIZE_T cbOperand,_Out_ INT *piResult)
HRESULT None None.SSIZETToIntPtr(_In_ SSIZE_T cbOperand,_Out_ INT_PTR *piResult)
HRESULT None None.SSIZETToLong(_In_ SSIZE_T cbOperand,_Out_ LONG *plResult)
HRESULT None None.SSIZETToSizeT(_In_ SSIZE_T cbOperand,_Out_ size_t *pcbResult)
HRESULT None None.SSIZETToSIZET(_In_ SSIZE_T cbOperand,_Out_ SIZE_T *pcbResult)
HRESULT None None.SSIZETToUInt(_In_ SSIZE_T cbOperand,_Out_ UINT *puiResult)
HRESULT None None.SSIZETToUIntPtr(_In_ SSIZE_T cbOperand,_Out_ UINT_PTR *puiResult)
HRESULT None None.SSIZETToULong(_In_ SSIZE_T cbOperand,_Out_ ULONG *pulResult)
HRESULT None None.SSIZETToULongPtr(_In_ SSIZE_T cbOperand,_Out_ ULONG_PTR *pulResult)
HRESULT None None.StampPMsg(DMUS_PMSG* pPMSG None)
HRESULT None None.StartAtMarker([in] WORD wMarkerIndex,[in] QWORD cnsDuration,[in] float fRate,[in] void *pvContext)
HRESULT None None.StartAtPosition([in] WORD wStreamNum,[in] void *pvOffsetStart,[in] void *pvDuration,[in] WMT_OFFSET_FORMAT dwOffsetFormat,[in] float fRate,[in] void *pvContext)
HRESULT None None.startBackgroundProcessing([in] HWND hwnd)
HRESULT None None.StartInitialization([out] OPM_RANDOM_NUMBER *prnRandomNumber,[out] BYTE **ppbCertificate,[out] ULONG *pulCertificateLength)
HRESULT None None.Start([in] QWORD cnsStart,[in] QWORD cnsDuration,[in] float fRate,[in] void *pvContext)
HRESULT None None.Start([in] QWORD cnsStartTime)
HRESULT None None.startMode(BSTR mode None)
HRESULT None None.StartNewDocument([in] IOpcPartUri *documentPartName,[in] IXpsOMPrintTicketResource *documentPrintTicket,[in] IXpsOMDocumentStructureResource *documentStructure,[in] IXpsOMSignatureBlockResourceCollection *signatureBlockResources,[in] IXpsOMPartUriCollection *restrictedFonts)
HRESULT None None.StartPushing(IWMSCommandContext* pCommand None,double dblRate None,IWMSPushSourceCallback* pCallback None,QWORD qwContext None)
HRESULT None None.StartSessionKeyRefresh(VOID *pRandomNumber None,UINT RandomNumberSize None)
HRESULT None None.StartSnapshotSet([out] VSS_ID *pSnapshotSetId)
HRESULT None None.StartSyncAll([in] HWND hwndOwner)
HRESULT None None.StartTransaction(ISOLEVEL isoLevel None,ULONG isoFlags None,ITransactionOptions *pOtherOptions None,ULONG *pulTransactionLevel None)
HRESULT None None.Startup([out] IVMTask **startupTask)
HRESULT None None.StationEvent([in] BSTR bstrStationEventType,[in] ULONG StationId,[in] ULONG PlaylistIndex,[in] ULONG TrackID,[in] BSTR TrackData,[in] DWORD dwSecondsPlayed)
HRESULT None None.StopArchive( None None)
HRESULT None None.StopChain([in] IBaseFilter *pStartFilter,[in] IBaseFilter *pEndFilter)
HRESULT None None.StopHandlerSync([in] LPCWSTR pszHandlerID)
HRESULT None None.Stop([in] QWORD cnsStopTime)
HRESULT None None.StopPresenting([in] DWORD_PTR dwUserID)
HRESULT None None.StopRecord([in] BOOL bFinalize,[in] BOOL bFlushUnprocessedSamples)
HRESULT None None.stopTransfer( None None)
HRESULT None None.StringCbCatA(_Inout_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc)
HRESULT None None.StringCbCatExA(_Inout_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCbCatEx(_Inout_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCbCatExW(_Inout_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCbCat(_Inout_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc)
HRESULT None None.StringCbCatNA(_Inout_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc,_In_ size_t cbMaxAppend)
HRESULT None None.StringCbCatNExA(_Inout_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc,_In_ size_t cbMaxAppend,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCbCatNEx(_Inout_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc,_In_ size_t cbMaxAppend,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCbCatNExW(_Inout_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc,_In_ size_t cbMaxAppend,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCbCatN(_Inout_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc,_In_ size_t cbMaxAppend)
HRESULT None None.StringCbCatNW(_Inout_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc,_In_ size_t cbMaxAppend)
HRESULT None None.StringCbCatW(_Inout_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc)
HRESULT None None.StringCbCopyA(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc)
HRESULT None None.StringCbCopyExA(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCbCopyEx(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCbCopyExW(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCbCopyNA(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc,_In_ size_t cbSrc)
HRESULT None None.StringCbCopyNExA(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc,_In_ size_t cbSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCbCopyNEx(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc,_In_ size_t cbSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCbCopyNExW(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc,_In_ size_t cbSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCbCopyN(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc,_In_ size_t cbSrc)
HRESULT None None.StringCbCopyNW(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc,_In_ size_t cbSrc)
HRESULT None None.StringCbCopy(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc)
HRESULT None None.StringCbCopyW(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc)
HRESULT None None.StringCbGetsA(_Out_ LPTSTR pszDest,_In_ size_t cbDest)
HRESULT None None.StringCbGetsExA(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCbGetsEx(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCbGetsExW(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCbGets(_Out_ LPTSTR pszDest,_In_ size_t cbDest)
HRESULT None None.StringCbGetsW(_Out_ LPTSTR pszDest,_In_ size_t cbDest)
HRESULT None None.StringCbLengthA(_In_ LPCTSTR psz,_In_ size_t cbMax,_Out_opt_ size_t *pcbLength)
HRESULT None None.StringCbLengthA(_In_ LPCTSTR psz,_In_ size_t cbMax,_Out_ size_t *pcb)
HRESULT None None.StringCbLength(_In_ LPCTSTR psz,_In_ size_t cbMax,_Out_ size_t *pcb)
HRESULT None None.StringCbLengthW(_In_ LPCTSTR psz,_In_ size_t cbMax,_Out_ size_t *pcb)
HRESULT None None.StringCbPrintfA(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszFormat,_In_ ... None)
HRESULT None None.StringCbPrintfExA(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags,_In_ LPCTSTR pszFormat,_In_ ... None)
HRESULT None None.StringCbPrintfEx(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags,_In_ LPCTSTR pszFormat,_In_ ... None)
HRESULT None None.StringCbPrintfExW(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags,_In_ LPCTSTR pszFormat,_In_ ... None)
HRESULT None None.StringCbPrintf_lA(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ ... None)
HRESULT None None.StringCbPrintf_lExA(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_Out_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ ... None)
HRESULT None None.StringCbPrintf_lEx(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_Out_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ ... None)
HRESULT None None.StringCbPrintf_lExW(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_Out_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ ... None)
HRESULT None None.StringCbPrintf_l(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ ... None)
HRESULT None None.StringCbPrintf_lW(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ ... None)
HRESULT None None.StringCbPrintf(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszFormat,_In_ ... None)
HRESULT None None.StringCbPrintfW(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszFormat,_In_ ... None)
HRESULT None None.StringCbVPrintfA(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszFormat,_In_ va_list argList)
HRESULT None None.StringCbVPrintfExA(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags,_In_ LPCTSTR pszFormat,_In_ va_list argList)
HRESULT None None.StringCbVPrintfEx(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags,_In_ LPCTSTR pszFormat,_In_ va_list argList)
HRESULT None None.StringCbVPrintfExW(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags,_In_ LPCTSTR pszFormat,_In_ va_list argList)
HRESULT None None.StringCbVPrintf_lA(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ va_list argList)
HRESULT None None.StringCbVPrintf_lExA(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_Out_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ va_list argList)
HRESULT None None.StringCbVPrintf_lEx(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_Out_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ va_list argList)
HRESULT None None.StringCbVPrintf_lExW(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_Out_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ va_list argList)
HRESULT None None.StringCbVPrintf_l(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ va_list argList)
HRESULT None None.StringCbVPrintf_lW(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ va_list argList)
HRESULT None None.StringCbVPrintf(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszFormat,_In_ va_list argList)
HRESULT None None.StringCbVPrintfW(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszFormat,_In_ va_list argList)
HRESULT None None.StringCchCatA(_Inout_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc)
HRESULT None None.StringCchCatExA(_Inout_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCchCatEx(_Inout_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCchCatExW(_Inout_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCchCat(_Inout_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc)
HRESULT None None.StringCchCatNA(_Inout_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_In_ size_t cchMaxAppend)
HRESULT None None.StringCchCatNExA(_Inout_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_In_ size_t cchMaxAppend,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCchCatNEx(_Inout_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_In_ size_t cchMaxAppend,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCchCatNExW(_Inout_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_In_ size_t cchMaxAppend,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCchCatN(_Inout_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_In_ size_t cchMaxAppend)
HRESULT None None.StringCchCatNW(_Inout_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_In_ size_t cchMaxAppend)
HRESULT None None.StringCchCatW(_Inout_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc)
HRESULT None None.StringCchCopyA(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc)
HRESULT None None.StringCchCopyExA(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCchCopyEx(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCchCopyExW(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCchCopyNA(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_In_ size_t cchSrc)
HRESULT None None.StringCchCopyNExA(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_In_ size_t cchSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCchCopyNEx(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_In_ size_t cchSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCchCopyNExW(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_In_ size_t cchSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCchCopyN(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_In_ size_t cchSrc)
HRESULT None None.StringCchCopyNW(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_In_ size_t cchSrc)
HRESULT None None.StringCchCopy(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc)
HRESULT None None.StringCchCopyW(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc)
HRESULT None None.StringCchGetsA(_Out_ LPTSTR pszDest,_In_ size_t cchDest)
HRESULT None None.StringCchGetsExA(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCchGetsEx(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCchGetsExW(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCchGets(_Out_ LPTSTR pszDest,_In_ size_t cchDest)
HRESULT None None.StringCchGetsW(_Out_ LPTSTR pszDest,_In_ size_t cchDest)
HRESULT None None.StringCchLengthA(_In_ LPCTSTR psz,_In_ size_t cchMax,_Out_opt_ size_t *pcchLength)
HRESULT None None.StringCchLengthA(_In_ LPCTSTR psz,_In_ size_t cchMax,_Out_ size_t *pcch)
HRESULT None None.StringCchLength(_In_ LPCTSTR psz,_In_ size_t cchMax,_Out_ size_t *pcch)
HRESULT None None.StringCchLengthW(_In_ LPCTSTR psz,_In_ size_t cchMax,_Out_ size_t *pcch)
HRESULT None None.StringCchPrintfA(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszFormat,_In_ ... None)
HRESULT None None.StringCchPrintfExA(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags,_In_ LPCTSTR pszFormat,_In_ ... None)
HRESULT None None.StringCchPrintfEx(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags,_In_ LPCTSTR pszFormat,_In_ ... None)
HRESULT None None.StringCchPrintfExW(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags,_In_ LPCTSTR pszFormat,_In_ ... None)
HRESULT None None.StringCchPrintf_lA(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ ... None)
HRESULT None None.StringCchPrintf_lExA(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_Out_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ ... None)
HRESULT None None.StringCchPrintf_lEx(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_Out_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ ... None)
HRESULT None None.StringCchPrintf_lExW(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_Out_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ ... None)
HRESULT None None.StringCchPrintf_l(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ ... None)
HRESULT None None.StringCchPrintf_lW(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ ... None)
HRESULT None None.StringCchPrintf(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszFormat,_In_ ... None)
HRESULT None None.StringCchPrintfW(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszFormat,_In_ ... None)
HRESULT None None.StringCchVPrintfA(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszFormat,_In_ va_list argList)
HRESULT None None.StringCchVPrintfExA(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags,_In_ LPCTSTR pszFormat,_In_ va_list argList)
HRESULT None None.StringCchVPrintfEx(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags,_In_ LPCTSTR pszFormat,_In_ va_list argList)
HRESULT None None.StringCchVPrintfExW(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags,_In_ LPCTSTR pszFormat,_In_ va_list argList)
HRESULT None None.StringCchVPrintf_lA(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ va_list argList)
HRESULT None None.StringCchVPrintf_lExA(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_Out_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ va_list argList)
HRESULT None None.StringCchVPrintf_lEx(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_Out_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ va_list argList)
HRESULT None None.StringCchVPrintf_lExW(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_Out_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ va_list argList)
HRESULT None None.StringCchVPrintf_l(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ va_list argList)
HRESULT None None.StringCchVPrintf_lW(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ va_list argList)
HRESULT None None.StringCchVPrintf(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszFormat,_In_ va_list argList)
HRESULT None None.StringCchVPrintfW(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszFormat,_In_ va_list argList)
HRESULT None None.SubpictureStreamChange(ULONG nSubPicture None,BOOL bDisplay None)
HRESULT None None.substringData(long offset None,long count None,BSTR *data None)
HRESULT None None.SyncReadAligned(IMediaSample *pSample None)
HRESULT None None.SyncRead([in] LONGLONG llPosition,[in] LONG lLength,[out] BYTE *pBuffer)
HRESULT None None.SyncSetting(FEEDS_SYNC_SETTING *pfss None)
HRESULT None None.TakeOwnership([in] IUnknown *pDevice,BOOL Exclusive None)
HRESULT None None.TaskNotify([in] IDataObject *pdo,[in] VARIANT *arg,[in] VARIANT *param)
HRESULT None None.TestDevice([in] HANDLE hDevice)
HRESULT None None.ThreadIdle([in] DWORD dwTimeElaspedSinceLastCallInMS)
HRESULT None None.TimePlay(ULONG uiTitle None,ULONG bcdTime None)
HRESULT None None.TimeSearch(ULONG bcdTime None)
HRESULT None None.Title(LPWSTR *ppszTitle None)
HRESULT None None.TitlePlay(ULONG uiTitle None)
HRESULT None None.TMDown(void None None)
HRESULT None None.ToString([out None None,retval] BSTR *ToString)
HRESULT None None.TransferObjectData(BYTE *pData None,DWORD *pdwSize None,BYTE[WMDM_MAC_LENGTH] abMac None)
HRESULT None None.TransferWiaItem(IWiaItem *pWiaItem None)
HRESULT None None.transformNode(IXMLDOMNode *stylesheet None,BSTR *xmlString None)
HRESULT None None.transformNodeToObject(IXMLDOMNode *stylesheet None,VARIANT outputObject None)
HRESULT None None.transform(VARIANT_BOOL* pDone None)
HRESULT None None.TranslateAccelerator([in] LPMSG lpmsg,[in] WORD wID)
HRESULT None None.TranslateAccelerator(LPMSG lpMsg None)
HRESULT None None.TranslateTridToXid(ITransaction * pITransaction,GUID * pguidBqual,XID * pXid)
HRESULT None None.TreeView_SetExtendedStyle(HWND hwnd None,DWORD dw None,UINT mask None)
HRESULT None None.Ttl(UINT *puiTtl None)
HRESULT None None.TurnOff([out] IVMTask **turnOffTask)
HRESULT None None.UIActivate([in] BOOL fUIActivate)
HRESULT None None.UInt8Add(_In_ UINT8 u8Augend,_In_ UINT8 u8Addend,_Out_ UINT8 *pu8Result)
HRESULT None None.UInt8Mult(_In_ UINT8 u8Multiplicand,_In_ UINT8 u8Multiplier,_Out_ UINT8 *pu8Result)
HRESULT None None.UInt8Sub(_In_ UINT8 u8Minuend,_In_ UINT8 u8Subtrahend,_Out_ UINT8 *pu8Result)
HRESULT None None.UInt8ToChar(_In_ UINT8 u8Operand,_Out_ CHAR *pch)
HRESULT None None.UInt8ToInt8(_In_ UINT8 u8Operand,_Out_ INT8 *pi8Result)
HRESULT None None.UIntAdd(_In_ UINT uAugend,_In_ UINT uAddend,_Out_ UINT *puResult)
HRESULT None None.UIntMult(_In_ UINT uMultiplicand,_In_ UINT uMultiplier,_Out_ UINT *puResult)
HRESULT None None.UIntPtrAdd(_In_ UINT_PTR uAugend,_In_ UINT_PTR uAddend,_Out_ UINT_PTR *puResult)
HRESULT None None.UIntPtrMult(_In_ UINT_PTR uMultiplicand,_In_ UINT_PTR uMultiplier,_Out_ UINT_PTR *puResult)
HRESULT None None.UIntPtrSub(_In_ UINT_PTR uMinuend,_In_ UINT_PTR uSubtrahend,_Out_ UINT_PTR *puResult)
HRESULT None None.UIntPtrToChar(_In_ UINT_PTR uOperand,_Out_ CHAR *pch)
HRESULT None None.UIntPtrToDWord(_In_ UINT_PTR uOperand,_Out_ DWORD *pdwResult)
HRESULT None None.UIntPtrToInt16(_In_ UINT_PTR uOperand,_Out_ INT16 *pi16Result)
HRESULT None None.UIntPtrToInt64(_In_ UINT_PTR uOperand,_Out_ INT64 *pi64Result)
HRESULT None None.UIntPtrToInt8(_In_ UINT_PTR uOperand,_Out_ INT8 *pi8Result)
HRESULT None None.UIntPtrToInt(_In_ UINT_PTR uOperand,_Out_ INT *piResult)
HRESULT None None.UIntPtrToIntPtr(_In_ UINT_PTR uOperand,_Out_ INT_PTR *piResult)
HRESULT None None.UIntPtrToLong(_In_ UINT_PTR uOperand,_Out_ LONG *plResult)
HRESULT None None.UIntPtrToLongLong(_In_ UINT_PTR uOperand,_Out_ LONGLONG *pllResult)
HRESULT None None.UIntPtrToLongPtr(_In_ UINT_PTR uOperand,_Out_ LONG_PTR *plResult)
HRESULT None None.UIntPtrToShort(_In_ UINT_PTR uOperand,_Out_ SHORT *psResult)
HRESULT None None.UIntPtrToSSIZET(_In_ UINT_PTR uOperand,_Out_ SSIZE_T *pcbResult)
HRESULT None None.UIntPtrToUChar(_In_ UINT_PTR uOperand,_Out_ UCHAR *pch)
HRESULT None None.UIntPtrToUInt16(_In_ UINT_PTR uOperand,_Out_ UINT16 *pu16Result)
HRESULT None None.UIntPtrToUInt8(_In_ UINT_PTR uOperand,_Out_ UINT8 *pu8Result)
HRESULT None None.UIntPtrToUInt(_In_ UINT_PTR uOperand,_Out_ UINT *puResult)
HRESULT None None.UIntPtrToULong(_In_ UINT_PTR uOperand,_Out_ ULONG *pulResult)
HRESULT None None.UIntPtrToUShort(_In_ UINT_PTR uOperand,_Out_ USHORT *pusResult)
HRESULT None None.UIntSub(_In_ UINT uMinuend,_In_ UINT uSubtrahend,_Out_ UINT *puResult)
HRESULT None None.UIntToByte(_In_ UINT uOperand,_Out_ BYTE *pb)
HRESULT None None.UIntToChar(_In_ UINT uOperand,_Out_ __wchar_t *pch)
HRESULT None None.UIntToInt8(_In_ UINT uOperand,_Out_ INT8 *pi8Result)
HRESULT None None.UIntToInt(_In_ UINT uOperand,_Out_ INT *piResult)
HRESULT None None.UIntToIntPtr(_In_ UINT uOperand,_Out_ INT_PTR *piResult)
HRESULT None None.UIntToLong(_In_ UINT uOperand,_Out_ LONG *plResult)
HRESULT None None.UIntToLongPtr(_In_ UINT uOperand,_Out_ LONGPTR *plResult)
HRESULT None None.UIntToPtrdiffT(_In_ UINT uOperand,_Out_ ptrdiff_t *pcbResult)
HRESULT None None.UIntToShort(_In_ UINT uOperand,_Out_ SHORT *psResult)
HRESULT None None.UIntToSSIZET(_In_ UINT uOperand,_Out_ SSIZE_T *pcbResult)
HRESULT None None.UIntToUChar(_In_ UINT uOperand,_Out_ UCHAR *pch)
HRESULT None None.UIntToUInt8(_In_ UINT uOperand,_Out_ UINT8 *pui8Result)
HRESULT None None.UIntToUShort(_In_ UINT uOperand,_Out_ USHORT *pusResult)
HRESULT None None.UIntToWord(_In_ UINT uOperand,_Out_ WORD *pwResult)
HRESULT None None.ULongAdd(_In_ ULONG ulAugend,_In_ ULONG ulAddend,_Out_ ULONG *pulResult)
HRESULT None None.ULongLongAdd(_In_ ULONGLONG ullAugend,_In_ ULONGLONG ullAddend,_Out_ ULONGLONG *pullResult)
HRESULT None None.ULongLongMult(_In_ ULONGLONG ullMultiplicand,_In_ ULONGLONG ullMultiplier,_Out_ ULONGLONG *pullResult)
HRESULT None None.ULongLongSub(_In_ ULONGLONG ullMinuend,_In_ ULONGLONG ullSubtrahend,_Out_ ULONGLONG *pullResult)
HRESULT None None.ULongLongToChar(_In_ ULONGLONG ullOperand,_Out_ CHAR *pch)
HRESULT None None.ULongLongToDWord(_In_ ULONGLONG ullOperand,_Out_ DWORD *pdwResult)
HRESULT None None.ULongLongToDWordPtr(_In_ ULONGLONG ullOperand,_Out_ DWORD_PTR *pdwResult)
HRESULT None None.ULongLongToInt64(_In_ ULONGLONG ullOperand,_Out_ INT64 *pi64Result)
HRESULT None None.ULongLongToInt8(_In_ ULONGLONG ullOperand,_Out_ INT8 *pi8Result)
HRESULT None None.ULongLongToInt(_In_ ULONGLONG ullOperand,_Out_ INT *piResult)
HRESULT None None.ULongLongToIntPtr(_In_ ULONGLONG ullOperand,_Out_ INT_PTR *piResult)
HRESULT None None.ULongLongToLong(_In_ ULONGLONG ullOperand,_Out_ LONG *plResult)
HRESULT None None.ULongLongToLongLong(_In_ ULONGLONG ullOperand,_Out_ LONGLONG *pllResult)
HRESULT None None.ULongLongToLongPtr(_In_ ULONGLONG ullOperand,_Out_ LONG_PTR *plResult)
HRESULT None None.ULongLongToPtrdiffT(_In_ ULONGLONG ullOperand,_Out_ ptrdiff_t *pcbResult)
HRESULT None None.ULongLongToShort(_In_ ULONGLONG ullOperand,_Out_ SHORT *psResult)
HRESULT None None.ULongLongToSizeT(_In_ ULONGLONG ullOperand,_Out_ size_t *pcbResult)
HRESULT None None.ULongLongToSIZET(_In_ ULONGLONG ullOperand,_Out_ SIZE_T *pcbResult)
HRESULT None None.ULongLongToSSIZET(_In_ ULONGLONG ullOperand,_Out_ SSIZE_T *pcbResult)
HRESULT None None.ULongLongToUChar(_In_ ULONGLONG ullOperand,_Out_ UCHAR *pch)
HRESULT None None.ULongLongToUInt8(_In_ ULONGLONG ullOperand,_Out_ UINT8 *pu8Result)
HRESULT None None.ULongLongToUInt(_In_ ULONGLONG ullOperand,_Out_ UINT *puiResult)
HRESULT None None.ULongLongToUIntPtr(_In_ ULONGLONG ullOperand,_Out_ UINT_PTR *puiResult)
HRESULT None None.ULongLongToULong(_In_ ULONGLONG ullOperand,_Out_ ULONG *pulResult)
HRESULT None None.ULongLongToULongPtr(_In_ ULONGLONG ullOperand,_Out_ ULONG_PTR *pulResult)
HRESULT None None.ULongLongToUShort(_In_ ULONGLONG ullOperand,_Out_ USHORT *pusResult)
HRESULT None None.ULongMult(_In_ ULONG ulMultiplicand,_In_ ULONG ulMultiplier,_Out_ ULONG *pulResult)
HRESULT None None.ULongPtrAdd(_In_ ULONG_PTR ulAugend,_In_ ULONG_PTR ulAddend,_Out_ ULONG_PTR *pulResult)
HRESULT None None.ULongPtrMult(_In_ ULONG_PTR ulMultiplicand,_In_ ULONG_PTR ulMultiplier,_Out_ ULONG_PTR *pulResult)
HRESULT None None.ULongPtrSub(_In_ ULONG_PTR ulMinuend,_In_ ULONG_PTR ulSubtrahend,_Out_ ULONG_PTR *pulResult)
HRESULT None None.ULongPtrToChar(_In_ ULONG_PTR ulOperand,_Out_ CHAR *pch)
HRESULT None None.ULongPtrToDWord(_In_ ULONG_PTR ulOperand,_Out_ DWORD *pdwResult)
HRESULT None None.ULongPtrToInt64(_In_ ULONG_PTR ulOperand,_Out_ INT64 *pi64Result)
HRESULT None None.ULongPtrToInt8(_In_ ULONG_PTR ulOperand,_Out_ INT8 *pi8Result)
HRESULT None None.ULongPtrToInt(_In_ ULONG_PTR ulOperand,_Out_ INT *piResult)
HRESULT None None.ULongPtrToIntPtr(_In_ ULONG_PTR ulOperand,_Out_ INT_PTR *piResult)
HRESULT None None.ULongPtrToLong(_In_ ULONG_PTR ulOperand,_Out_ LONG *plResult)
HRESULT None None.ULongPtrToLongLong(_In_ ULONG_PTR ulOperand,_Out_ LONGLONG *pllResult)
HRESULT None None.ULongPtrToLongPtr(_In_ ULONG_PTR ulOperand,_Out_ LONG_PTR *plResult)
HRESULT None None.ULongPtrToPtrdiffT(_In_ ULONG_PTR ulOperand,_Out_ ptrdiff_t *pcbResult)
HRESULT None None.ULongPtrToShort(_In_ ULONG_PTR ulOperand,_Out_ SHORT *psResult)
HRESULT None None.ULongPtrToSSIZET(_In_ ULONG_PTR ulOperand,_Out_ SSIZE_T *pcbResult)
HRESULT None None.ULongPtrToUChar(_In_ ULONG_PTR ulOperand,_Out_ UCHAR *pch)
HRESULT None None.ULongPtrToUInt8(_In_ ULONG_PTR ulOperand,_Out_ UINT8 *pui8Result)
HRESULT None None.ULongPtrToUInt(_In_ ULONG_PTR ulOperand,_Out_ UINT *puResult)
HRESULT None None.ULongPtrToUIntPtr(_In_ ULONG_PTR ulOperand,_Out_ UINT_PTR *puResult)
HRESULT None None.ULongPtrToULong(_In_ ULONG_PTR ulOperand,_Out_ ULONG *pulResult)
HRESULT None None.ULongPtrToUShort(_In_ ULONG_PTR ulOperand,_Out_ USHORT *pusResult)
HRESULT None None.ULongSub(_In_ ULONG ulMinuend,_In_ ULONG ulSubtrahend,_Out_ ULONG *pulResult)
HRESULT None None.ULongToByte(_In_ ULONG ulOperand,_Out_ BYTE *pbResult)
HRESULT None None.ULongToChar(_In_ ULONG ulOperand,_Out_ __wchar_t *pch)
HRESULT None None.ULongToInt8(_In_ ULONG ulOperand,_Out_ INT8 *pi8Result)
HRESULT None None.ULongToInt(_In_ ULONG ulOperand,_Out_ INT *piResult)
HRESULT None None.ULongToIntPtr(_In_ ULONG ulOperand,_Out_ INT_PTR *piResult)
HRESULT None None.ULongToLong(_In_ ULONG ulOperand,_Out_ LONG *plResult)
HRESULT None None.ULongToLongPtr(_In_ ULONG ulOperand,_Out_ LONG_PTR *plResult)
HRESULT None None.ULongToPtrdiffT(_In_ ULONG ulOperand,_Out_ ptrdiff_t *pcbResult)
HRESULT None None.ULongToShort(_In_ ULONG ulOperand,_Out_ SHORT *psResult)
HRESULT None None.ULongToSSIZET(_In_ ULONG ulOperand,_Out_ SSIZE_T *pcbResult)
HRESULT None None.ULongToUChar(_In_ ULONG ulOperand,_Out_ UCHAR *pch)
HRESULT None None.ULongToUInt8(_In_ ULONG ulOperand,_Out_ UINT8 *pui8Result)
HRESULT None None.ULongToUInt(_In_ ULONG ulOperand,_Out_ UINT *puResult)
HRESULT None None.ULongToUIntPtr(_In_ ULONG ulOperand,_Out_ UINT_PTR *puResult)
HRESULT None None.ULongToUShort(_In_ ULONG ulOperand,_Out_ USHORT *pusResult)
HRESULT None None.ULongToWord(_In_ ULONG ulOperand,_Out_ WORD *pwResult)
HRESULT None None.UnableToRender(IPin *pPin None)
HRESULT None None.Unadvise(DWORD dwAdviseCookie None)
HRESULT None None.Unadvise(DWORD_PTR dwAdviseToken None)
HRESULT None None.Unadvise([in] DWORD dwConnection)
HRESULT None None.Unadvise([in] DWORD dwCookie)
HRESULT None None.Unadvise([in] DWORD_PTR dwAdviseCookie)
HRESULT None None.Unadvise([in] IWMStatusCallback *pCallback,[in] void *pvContext)
HRESULT None None.UnalignedStringCbLength(_In_ LPCTSTR psz,_In_ size_t cbMax,_Out_opt_ size_t *pcbLength)
HRESULT None None.UnalignedStringCbLengthW(_In_ LPCTSTR psz,_In_ size_t cbMax,_Out_opt_ size_t *pcbLength)
HRESULT None None.UnalignedStringCchLength(_In_ LPCTSTR psz,_In_ size_t cchMax,_Out_opt_ size_t *pcchLength)
HRESULT None None.UnalignedStringCchLengthW(_In_ LPCTSTR psz,_In_ size_t cchMax,_Out_opt_ size_t *pcchLength)
HRESULT None None.Undo(HCHAPTER hReserved None,DBCOUNTITEM cRows None,const HROW rghRows[],DBCOUNTITEM *pcRows None,HROW **prgRows None,DBROWSTATUS **prgRowStatus None)
HRESULT None None.UndoTo([in] IOleUndoUnit *pUU)
HRESULT None None.Unload(IDirectMusicPerformance* pPerformance None)
HRESULT None None.UnlockAsyncMFT(IMFTransform *pMFT None)
HRESULT None None.UnlockDevice([in] HANDLE hDevice,[in] BOOL fSaveState)
HRESULT None None.UnreadItemCount(UINT *puiUnreadItemCount None)
HRESULT None None.UnregisterAudioSessionNotification([in] IAudioSessionEvents *NewNotifications)
HRESULT None None.UnRegisterClassReqCategories([in] REFCLSID rclsid,[in] ULONG cCategories,[in] CATID rgcatid[])
HRESULT None None.UnregisterControlChangeCallback([in] IControlChangeNotify *pNotify)
HRESULT None None.UnregisterControlChangeNotify([in] IAudioEndpointVolumeCallback *pNotify)
HRESULT None None.UnregisterDevice([in] DWORD dwRegisterType,[in] BYTE *pbCertificate,[in] DWORD cbCertificate,[in] DRM_VAL16 SerialNumber)
HRESULT None None.UnregisterDuckNotification(IAudioVolumeDuckNotification *duckNotification None)
HRESULT None None.UnregisterEndpointNotificationCallback([in] IMMNotificationClient *pNotify)
HRESULT None None.UnregisterFilterInstance([in] CLSID MRId)
HRESULT None None.UnRegisterNotificationCallBack([in] IAMTunerNotification *pNotify)
HRESULT None None.UnregisterProvider(LPCOLESTR pwszURL None,DB_DWRESERVE dwReserved None,REFCLSID rclsidProvider None)
HRESULT None None.UnregisterSessionNotification(IAudioSessionNotification *SessionNotification None)
HRESULT None None.UpdateCache([in] LPDATAOBJECT pDataObject,[in] DWORD grfUpdf,[in] LPVOID pReserved)
HRESULT None None.UpdateConflicts([in] LPCWSTR pszHandlerID,[in] LPCWSTR pszItemID,[in] SYNCMGR_CONTROL_FLAGS nControlFlags)
HRESULT None None.UpdateDeviceComplete([in] BSTR bstrDeviceName)
HRESULT None None.UpdateDevice([in] BSTR bstrDeviceName)
HRESULT None None.UpdateDRM(DWORD status None)
HRESULT None None.UpdateFormat(VIDEOINFO *pVideoInfo None)
HRESULT None None.UpdateHandlerCollection([in] REFCLSID rclsidCollectionID,[in] SYNCMGR_CONTROL_FLAGS nControlFlags)
HRESULT None None.Update(HCHAPTER hReserved None,DBCOUNTITEM cRows None,const HROW rghRows[],DBCOUNTITEM *pcRows None,HROW **prgRows None,DBROWSTATUS **prgRowStatus None)
HRESULT None None.Update([in] IBindCtx *pbc)
HRESULT None None.UpdateRegion(IN DWORD dwRegionNumber)
HRESULT None None.UpdateSubresource_Workaround(ID3D11Device *pDevice None,ID3D11DeviceContext *pDeviceContext None,ID3D11Resource *pDstResource None,UINT dstSubresource None,const D3D11_BOX *pDstBox,const void *pSrcData,UINT srcBytesPerElement None,UINT srcRowPitch None,UINT srcDepthPitch None,bool* pDidWorkAround None)
HRESULT None None.UpdateTexture([in] IDirect3DBaseTexture9 *pSourceTexture,[in] IDirect3DBaseTexture9 *pDestinationTexture)
HRESULT None None.UpdateTopologyFlags([in] MFSequencerElementId dwId,[in] DWORD dwFlags)
HRESULT None None.UpdateTopology([in] MFSequencerElementId dwId,[in] IMFTopology *pTopology)
HRESULT None None.UpdateTopology([in None None,out] IMFTopology *pTopology)
HRESULT None None.URLBeingIndexed([out None None,retval] LPWSTR *pszUrl)
HRESULT None None.Url(LPWSTR *ppszUrl None)
HRESULT None None.UseOverlayStretch(long UseOverlayStretch None)
HRESULT None None.UseScanLine(long UseScanLine None)
HRESULT None None.UseWhenFullScreen(long UseWhenFullScreen None)
HRESULT None None.UShortAdd(_In_ USHORT usAugend,_In_ USHORT usAddend,_Out_ USHORT *pusResult)
HRESULT None None.UShortMult(_In_ USHORT usMultiplicand,_In_ USHORT usMultiplier,_Out_ USHORT *pusResult)
HRESULT None None.UShortSub(_In_ USHORT usMinuend,_In_ USHORT usSubtrahend,_Out_ USHORT *pusResult)
HRESULT None None.UShortToByte(_In_ USHORT usOperand,_Out_ BYTE *pb)
HRESULT None None.UShortToChar(_In_ USHORT usOperand,_Out_ __wchar_t *pch)
HRESULT None None.UShortToInt8(_In_ USHORT usOperand,_Out_ INT8 *pi8Result)
HRESULT None None.UShortToShort(_In_ USHORT usOperand,_Out_ SHORT *psResult)
HRESULT None None.UShortToUChar(_In_ USHORT usOperand,_Out_ UCHAR *pch)
HRESULT None None.UShortToUInt8(_In_ USHORT usOperand,_Out_ UINT8 *pui8Result)
HRESULT None None.UtilAssembleStringsWithAlloc(_Out_ LPWSTR *Buffer,_In_ UINT BufferMax,_In_ LPCWSTR InputFormat,_In_ LPCWSTR InputString,_In_ BOOLEAN AdditionalArgument,_In_ ULONG AdditionalValue)
HRESULT None None.UtilLoadStringWithAlloc(_In_ UINT uID,_Out_ LPWSTR *ppwzBuffer,_In_ UINT cchBufferMax)
HRESULT None None.UtilStringCopyWithAlloc(_Out_ LPWSTR *Buffer,_In_ UINT BufferMax,_In_ LPCWSTR Source)
HRESULT None None.ValidateDevice([out None None,retval] DWORD *pNumPasses)
HRESULT None None.validate(IXMLDOMParseError ** errorObj)
HRESULT None None.ValidateSignature(IOpcDigitalSignatureManager* opcDigSigManager None,IOpcDigitalSignature* signature None,BOOL* isValid None,PCCERT_CONTEXT* signerCert None)
HRESULT None None.ValidatingAuthentication(WCHAR * wszQueueName,WCHAR * wszComputerName)
HRESULT None None.VariantGetElem(_In_ REFVARIANT varIn,_In_ ULONG iElem,_Out_ VARIANT *pvar)
HRESULT None None.VerifyAllDigitalSignaturesAndAuthenticateCertificates(IXpsSignatureManager *signatureManager None)
HRESULT None None.VerifyingAcknowledgment(LPCWSTR wszQueueFormatName None)
HRESULT None None.VerifyPermissionComplete([in] BSTR bstrPermission,[in] VARIANT *pContext,[in] HRESULT hrPermission)
HRESULT None None.VerifyPermission([in] BSTR bstrPermission,[in] VARIANT *pContext)
HRESULT None None.VideoModePreferrence([in] ULONG ulPreferredDisplayMode)
HRESULT None None.v_MayTranslateAccelerator([in] MSG *pmsg)
HRESULT None None.VolumeStepDown([in] LPCGUID pguidEventContext)
HRESULT None None.VolumeStepUp([in] LPCGUID pguidEventContext)
HRESULT None None.VoteRequestDone(HRESULT hr None,BOID * pboidReason)
HRESULT None None.WaitForCompletion([in] long msTimeout,[out] long *pEvCode)
HRESULT None None.WalkFrame([in] DWORD walkWhat,[in] ICallFrameWalker *pWalker)
HRESULT None None.WillUseFullScreen(long *UseWhenFullScreen None)
HRESULT None None.WordAdd(_In_ WORD wAugend,_In_ WORD wAddend,_Out_ WORD *pwResult)
HRESULT None None.WordMult(_In_ WORD wMultiplicand,_In_ WORD wMultiplier,_Out_ WORD *pwResult)
HRESULT None None.WordSub(_In_ WORD wMinuend,_In_ WORD wSubtrahend,_Out_ WORD *pwResult)
HRESULT None None.WordToByte(_In_ WORD wOperand,_Out_ BYTE *pb)
HRESULT None None.WordToChar(_In_ WORD wOperand,_Out_ __wchar_t *pch)
HRESULT None None.WordToShort(_In_ WORD wOperand,_Out_ SHORT *psResult)
HRESULT None None.WordToUChar(_In_ WORD wOperand,_Out_ UCHAR *pch)
HRESULT None None.WriteAttributes(IXmlReader * pReader,BOOL fWriteDefaultAttributes None)
HRESULT None None.WriteAttributes(IXmlReader* pReader None)
HRESULT None None.WriteCharEntity(WCHAR character None)
HRESULT None None.Write([in] ISequentialStream *stream,[in] BOOL optimizeMarkupSize)
HRESULT None None.WriteNextMetadataCommand([in] BYTE commandID,[in] VOID *valueBuffer,[in] UINT32 valueBufferLength)
HRESULT None None.WriteNodeShallow(IXmlReader pReader None,BOOL fWriteDefaultAttributes None)
HRESULT None None.WritePackageToStream([in] IOpcPackage *package,[in] OPC_WRITE_FLAGS flags,[in] IStream *stream)
HRESULT None None.Write(PAVISTREAM ps None,LONG lStart None,LONG lSamples None,LPVOID lpBuffer None,LONG cbBuffer None,DWORD dwFlags None,LONG *plSampWritten None,LONG *plBytesWritten None)
HRESULT None None.WriteRaw(WCHAR * pwszData)
HRESULT None None.WriteSample([in] DWORD dwInputNum,[in] QWORD cnsSampleTime,[in] DWORD dwFlags,[in] INSSBuffer *pSample)
HRESULT None None.WriteStartDocument(XmlStandalone standalone None)
HRESULT None None.WriteStreamSample([in] WORD wStreamNum,[in] QWORD cnsSampleTime,[in] DWORD msSampleSendTime,[in] QWORD cnsSampleDuration,[in] DWORD dwFlags,[in] INSSBuffer *pSample)
HRESULT None None.WriteSurrogateCharEntity(WCHAR lowChar None,WCHAR highChar None)
HRESULT None None.WriteToFile1([in None None,string] LPCWSTR fileName,[in None None,unique] LPSECURITY_ATTRIBUTES securityAttributes,[in] DWORD flagsAndAttributes,[in] BOOL optimizeMarkupSize,[in] XPS_DOCUMENT_TYPE documentType)
HRESULT None None.WriteToFile([in] LPCWSTR fileName,[in None None,unique] LPSECURITY_ATTRIBUTES securityAttributes,[in] DWORD flagsAndAttributes,[in] BOOL optimizeMarkupSize)
HRESULT None None.WriteToStream([in] ISequentialStream *stream,[in] BOOL optimizeMarkupSize)
HRESULT None None.WS_CERTIFICATE_VALIDATION_CALLBACK(_In_ CERT_CONTEXT *certContext,_In_opt_ void *state)
HRESULT None None.WS_CREATE_DECODER_CALLBACK(_In_ void* createContext,_In_ WS_READ_CALLBACK readCallback,_In_ void* readContext,void** decoderContext None,_In_opt_ WS_ERROR* error)
HRESULT None None.WS_CREATE_ENCODER_CALLBACK(_In_ void* createContext,_In_ WS_WRITE_CALLBACK writeCallback,_In_ void* writeContext,void** encoderContext None,_In_opt_ WS_ERROR* error)
HRESULT None None.WS_PROXY_MESSAGE_CALLBACK(_In_ WS_MESSAGE* message,_In_ WS_HEAP* heap,_In_ void* state,_In_opt_ WS_ERROR* error)
HRESULT None None.XARMCreate(char * pszDSN,char * pszClientDllName,DWORD * pdwRMCookie)
HRESULT None None.Xml(FEEDS_XML_INCLUDE_FLAGS fxif None,IStream **pps None)
HRESULT None None.Xml(LONG count None,FEEDS_XML_SORT_PROPERTY sortProperty None,FEEDS_XML_SORT_ORDER sortOrder None,FEEDS_XML_FILTER_FLAGS filterFlags None,FEEDS_XML_INCLUDE_FLAGS includeFlags None,BSTR *xml None)
HRESULT None None.Xml(UINT uiItemCount None,FEEDS_XML_SORT_PROPERTY sortProperty None,FEEDS_XML_SORT_ORDER sortOrder None,FEEDS_XML_FILTER_FLAGS filterFlags None,FEEDS_XML_INCLUDE_FLAGS includeFlags None,IStream **pps None)
HRESULT None None.ZoomByUnit(ZoomUnit zoomUnit None)
HRESULT None ntshrui.ShowShareFolderUI(_In_ HWND hwndParent,_In_ LPCWSTR pszPath)
HRESULT None ntshrui.ShowShareFolderUIW(_In_ HWND hwndParent,_In_ LPCWSTR pszPath)
HRESULT None ole32.BindMoniker(_In_ LPMONIKER pmk,_In_ DWORD grfOpt,_In_ REFIID iidResult,_Out_ LPVOID *ppvResult)
HRESULT None ole32.Clone([out] IStream **ppstm)
HRESULT None ole32.CLSIDFromProgIDEx(_In_ LPCOLESTR lpszProgID,_Out_ LPCLSID lpclsid)
HRESULT None ole32.CLSIDFromProgID(_In_ LPCOLESTR lpszProgID,_Out_ LPCLSID lpclsid)
HRESULT None ole32.CLSIDFromString(_In_ LPCOLESTR lpsz,_Out_ LPCLSID pclsid)
HRESULT None ole32.CoAllowSetForegroundWindow(_In_ IUnknown *pUnk,_In_ LPVOID lpvReserved)
HRESULT None ole32.CoCancelCall(_In_ DWORD dwThreadId,_In_ ULONG ulTimeout)
HRESULT None ole32.CoCopyProxy(_In_ IUnknown *pProxy,_Out_ IUnknown **ppCopy)
HRESULT None ole32.CoCreateFreeThreadedMarshaler(_In_ LPUNKNOWN punkOuter,_Out_ LPUNKNOWN *ppunkMarshal)
HRESULT None ole32.CoCreateGuid(_Out_ GUID *pguid)
HRESULT None ole32.CoCreateInstanceEx(_In_ REFCLSID rclsid,_In_ IUnknown *punkOuter,_In_ DWORD dwClsCtx,_In_ COSERVERINFO *pServerInfo,_In_ DWORD dwCount,_Inout_ MULTI_QI *pResults)
HRESULT None ole32.CoCreateInstance(_In_ REFCLSID rclsid,_In_ LPUNKNOWN pUnkOuter,_In_ DWORD dwClsContext,_In_ REFIID riid,_Out_ LPVOID *ppv)
HRESULT None ole32.CoDisableCallCancellation(_In_opt_ LPVOID pReserved)
HRESULT None ole32.CoDisconnectContext(_In_ DWORD dwTimeout)
HRESULT None ole32.CoDisconnectObject(_In_ LPUNKNOWN pUnk,_In_ DWORD dwReserved)
HRESULT None ole32.CoEnableCallCancellation(_In_opt_ LPVOID pReserved)
HRESULT None ole32.CoFileTimeNow(_Out_ FILETIME *lpFileTime)
HRESULT None ole32.CoGetCallContext(_In_ REFIID riid,_Out_ void **ppInterface)
HRESULT None ole32.CoGetCallerTID(_Out_ LPDWORD lpdwTID)
HRESULT None ole32.CoGetCancelObject(_In_ DWORD dwThreadId,_In_ REFIID iid,_Out_ void **ppUnk)
HRESULT None ole32.CoGetClassObject(_In_ REFCLSID rclsid,_In_ DWORD dwClsContext,_In_opt_ COSERVERINFO *pServerInfo,_In_ REFIID riid,_Out_ LPVOID *ppv)
HRESULT None ole32.CoGetContextToken(_Out_ ULONG_PTR *pToken)
HRESULT None ole32.CoGetCurrentLogicalThreadId(_Out_ GUID *pguid)
HRESULT None ole32.CoGetInterceptor(_In_ REFIID iidIntercepted,_In_ IUnknown *punkOuter,_In_ REFIID iid,_Out_ void **ppv)
HRESULT None ole32.CoGetInterfaceAndReleaseStream(_In_ LPSTREAM pStm,_In_ REFIID iid,_Out_ LPVOID *ppv)
HRESULT None ole32.CoGetMalloc(_In_ DWORD dwMemContext,_Out_ LPMALLOC *ppMalloc)
HRESULT None ole32.CoGetMarshalSizeMax(_Out_ ULONG *pulSize,_In_ REFIID riid,_In_ LPUNKNOWN pUnk,_In_ DWORD dwDestContext,_In_opt_ LPVOID pvDestContext,_In_ DWORD mshlflags)
HRESULT None ole32.CoGetObjectContext(_In_ REFIID riid,_Out_ LPVOID *ppv)
HRESULT None ole32.CoGetObject(_In_ LPCWSTR pszName,_In_opt_ BIND_OPTS *pBindOptions,_In_ REFIID riid,_Out_ void **ppv)
HRESULT None ole32.CoGetPSClsid(_In_ REFIID riid,_Out_ CLSID *pClsid)
HRESULT None ole32.CoGetStandardMarshal(_In_ REFIID riid,_In_ LPUNKNOWN pUnk,_In_ DWORD dwDestContext,_In_opt_ LPVOID pvDestContext,_In_ DWORD mshlflags,_Out_ LPMARSHAL *ppMarshal)
HRESULT None ole32.CoGetStdMarshalEx(_In_ LPUNKNOWN pUnkOuter,_In_ DWORD smexflags,_Out_ LPUNKNOWN *ppUnkInner)
HRESULT None ole32.CoGetTreatAsClass(_In_ REFCLSID clsidOld,_Out_ LPCLSID pClsidNew)
HRESULT None ole32.CoImpersonateClient(void None None)
HRESULT None ole32.CoInitializeEx(_In_opt_ LPVOID pvReserved,_In_ DWORD dwCoInit)
HRESULT None ole32.CoInitialize(_In_opt_ LPVOID pvReserved)
HRESULT None ole32.CoInitializeSecurity(_In_opt_ PSECURITY_DESCRIPTOR pSecDesc,_In_ LONG cAuthSvc,_In_opt_ SOLE_AUTHENTICATION_SERVICE *asAuthSvc,_In_opt_ void *pReserved1,_In_ DWORD dwAuthnLevel,_In_ DWORD dwImpLevel,_In_opt_ void *pAuthList,_In_ DWORD dwCapabilities,_In_opt_ void *pReserved3)
HRESULT None ole32.CoInstall(_In_ IBindCtx *pbc,_In_ DWORD dwFlags,_In_ uCLSSPEC *pClassSpec,_In_ QUERYCONTEXT *pQuery,_In_ LPWSTR pszCodeBase)
HRESULT None ole32.CoInvalidateRemoteMachineBindings(_In_ LPOLESTR pszMachineName)
HRESULT None ole32.CoLockObjectExternal(_In_ LPUNKNOWN pUnk,_In_ BOOL fLock,_In_ BOOL fLastUnlockReleases)
HRESULT None ole32.CoMarshalHresult(_In_ LPSTREAM pstm,_In_ HRESULT hresult)
HRESULT None ole32.CoMarshalInterface(_In_ LPSTREAM pStm,_In_ REFIID riid,_In_ LPUNKNOWN pUnk,_In_ DWORD dwDestContext,_In_opt_ LPVOID pvDestContext,_In_ DWORD mshlflags)
HRESULT None ole32.CoMarshalInterThreadInterfaceInStream(_In_ REFIID riid,_In_ LPUNKNOWN pUnk,_Out_ LPSTREAM *ppStm)
HRESULT None ole32.Commit([in] DWORD grfCommitFlags)
HRESULT None ole32.CopyTo([in None None,unique] IStream *pstm,[in] ULARGE_INTEGER cb,[out] ULARGE_INTEGER *pcbRead,[out] ULARGE_INTEGER *pcbWritten)
HRESULT None ole32.CoQueryAuthenticationServices(_Out_ DWORD *pcAuthSvc,_Out_ SOLE_AUTHENTICATION_SERVICE **asAuthSvc)
HRESULT None ole32.CoQueryClientBlanket(_Out_opt_ DWORD *pAuthnSvc,_Out_opt_ DWORD *pAuthzSvc,_Out_opt_ OLECHAR **pServerPrincName,_Out_opt_ DWORD *pAuthnLevel,_Out_opt_ DWORD *pImpLevel,_Out_opt_ RPC_AUTHZ_HANDLE *pPrivs,_Inout_opt_ DWORD *pCapabilities)
HRESULT None ole32.CoQueryProxyBlanket(_In_ IUnknown *pProxy,_Out_opt_ DWORD *pwAuthnSvc,_Out_opt_ DWORD *pAuthzSvc,_Out_opt_ OLECHAR **pServerPrincName,_Out_opt_ DWORD *pAuthnLevel,_Out_opt_ DWORD *pImpLevel,_Out_opt_ RPC_AUTH_IDENTITY_HANDLE *pAuthInfo,_Out_opt_ DWORD *pCapabilites)
HRESULT None ole32.CoRegisterActivationFilter(_In_ IActivationFilter *pActivationFilter)
HRESULT None ole32.CoRegisterClassObject(_In_ REFCLSID rclsid,_In_ LPUNKNOWN pUnk,_In_ DWORD dwClsContext,_In_ DWORD flags,_Out_ LPDWORD lpdwRegister)
HRESULT None ole32.CoRegisterInitializeSpy(_In_ LPINITIALIZESPY pSpy,_Out_ ULARGE_INTEGER *puliCookie)
HRESULT None ole32.CoRegisterMallocSpy(_In_ LPMALLOCSPY pMallocSpy)
HRESULT None ole32.CoRegisterMessageFilter(_In_opt_ LPMESSAGEFILTER lpMessageFilter,_Out_opt_ LPMESSAGEFILTER *lplpMessageFilter)
HRESULT None ole32.CoRegisterPSClsid(_In_ REFIID riid,_In_ REFCLSID rclsid)
HRESULT None ole32.CoRegisterSurrogate(_In_ LPSURROGATE pSurrogate)
HRESULT None ole32.CoReleaseMarshalData(_In_ LPSTREAM pStm)
HRESULT None ole32.CoResumeClassObjects(void None None)
HRESULT None ole32.CoRevertToSelf(void None None)
HRESULT None ole32.CoRevokeClassObject(_In_ DWORD dwRegister)
HRESULT None ole32.CoRevokeInitializeSpy(_In_ ULARGE_INTEGER uliCookie)
HRESULT None ole32.CoRevokeMallocSpy(void None None)
HRESULT None ole32.CoSetCancelObject(_In_opt_ IUnknown *pUnk)
HRESULT None ole32.CoSetProxyBlanket(_In_ IUnknown *pProxy,_In_ DWORD dwAuthnSvc,_In_ DWORD dwAuthzSvc,_In_opt_ OLECHAR *pServerPrincName,_In_ DWORD dwAuthnLevel,_In_ DWORD dwImpLevel,_In_opt_ RPC_AUTH_IDENTITY_HANDLE pAuthInfo,_In_ DWORD dwCapabilities)
HRESULT None ole32.CoSuspendClassObjects(void None None)
HRESULT None ole32.CoSwitchCallContext(_In_opt_ IUnknown *pNewObject,_Out_ IUnknown **ppOldObject)
HRESULT None ole32.CoTestCancel(void None None)
HRESULT None ole32.CoTreatAsClass(_In_ REFCLSID clsidOld,_In_ REFCLSID clsidNew)
HRESULT None ole32.CoUnmarshalHresult(_In_ LPSTREAM pstm,_Out_ HRESULT *phresult)
HRESULT None ole32.CoUnmarshalInterface(_In_ LPSTREAM pStm,_In_ REFIID riid,_Out_ LPVOID *ppv)
HRESULT None ole32.CoWaitForMultipleHandles(_In_ DWORD dwFlags,_In_ DWORD dwTimeout,_In_ ULONG cHandles,_In_ LPHANDLE pHandles,_Out_ LPDWORD lpdwindex)
HRESULT None ole32.CreateAntiMoniker(_Out_ LPMONIKER *ppmk)
HRESULT None ole32.CreateBindCtx(_In_ DWORD reserved,_Out_ LPBC *ppbc)
HRESULT None ole32.CreateClassMoniker(_In_ REFCLSID rclsid,_Out_ LPMONIKER *ppmk)
HRESULT None ole32.CreateDataAdviseHolder(_Out_ LPDATAADVISEHOLDER *ppDAHolder)
HRESULT None ole32.CreateDataCache(_In_ LPUNKNOWN pUnkOuter,_In_ REFCLSID rclsid,_In_ REFIID iid,_Out_ LPVOID *ppv)
HRESULT None ole32.CreateFileMoniker(_In_ LPCOLESTR lpszPathName,_Out_ LPMONIKER *ppmk)
HRESULT None ole32.CreateGenericComposite(_In_opt_ LPMONIKER pmkFirst,_In_opt_ LPMONIKER pmkRest,_Out_ LPMONIKER *ppmkComposite)
HRESULT None ole32.CreateItemMoniker(_In_ LPCOLESTR lpszDelim,_In_ LPCOLESTR lpszItem,_Out_ LPMONIKER *ppmk)
HRESULT None ole32.CreateObjrefMoniker(_In_opt_ LPUNKNOWN punk,_Out_ LPMONIKER *ppmk)
HRESULT None ole32.CreateOleAdviseHolder(_Out_ LPOLEADVISEHOLDER *ppOAHolder)
HRESULT None ole32.CreatePointerMoniker(_In_opt_ LPUNKNOWN punk,_Out_ LPMONIKER *ppmk)
HRESULT None ole32.Delete([in] REFFMTID fmtid)
HRESULT None ole32.DestroyElement([in] wchar *pwcsName)
HRESULT None ole32.DoDragDrop(_In_ LPDATAOBJECT pDataObj,_In_ LPDROPSOURCE pDropSource,_In_ DWORD dwOKEffects,_Out_ LPDWORD pdwEffect)
HRESULT None ole32.EnumElements([in] DWORD reserved1,[in] void *reserved2,[in] DWORD reserved3,[out] IEnumSTATSTG **ppenum)
HRESULT None ole32.Enum([out] IEnumSTATPROPSETSTG **ppenum)
HRESULT None ole32.Enum([out] IEnumSTATPROPSTG **ppenum)
HRESULT None ole32.FreePropVariantArray(_In_ ULONG cVariants,_Inout_ PROPVARIANT *rgvars)
HRESULT None ole32.GetClassFile(_In_ LPCOLESTR szFilename,_Out_ CLSID *pclsid)
HRESULT None ole32.GetRunningObjectTable(_In_ DWORD reserved,_Out_ LPRUNNINGOBJECTTABLE *pprot)
HRESULT None ole32.IIDFromString(_In_ LPCOLESTR lpsz,_Out_ LPIID lpiid)
HRESULT None ole32.LockRegion([in] ULARGE_INTEGER libOffset,[in] ULARGE_INTEGER cb,[in] DWORD dwLockType)
HRESULT None ole32.MkParseDisplayName(_In_ LPBC pbc,_In_ LPCOLESTR szUserName,_Out_ ULONG *pchEaten,_Out_ LPMONIKER *ppmk)
HRESULT None ole32.MonikerCommonPrefixWith(_In_ LPMONIKER pmkThis,_In_ LPMONIKER pmkOther,_Out_ LPMONIKER *ppmkCommon)
HRESULT None ole32.MonikerRelativePathTo(_In_ LPMONIKER pmkSrc,_In_ LPMONIKER pmkDest,_Out_ LPMONIKER *ppmkRelPath,_In_ BOOL dwReserved)
HRESULT None ole32.OleCreateDefaultHandler(_In_ REFCLSID clsid,_In_ LPUNKNOWN pUnkOuter,_In_ REFIID riid,_Out_ LPVOID *lplpObj)
HRESULT None ole32.OleCreateEmbeddingHelper(_In_ REFCLSID clsid,_In_ LPUNKNOWN pUnkOuter,_In_ DWORD flags,_In_ LPCLASSFACTORY pCF,_In_ REFIID riid,_Out_ LPVOID *lplpObj)
HRESULT None ole32.OleCreateEx(_In_ REFCLSID rclsid,_In_ REFIID riid,_In_ DWORD dwFlags,_In_ DWORD renderopt,_In_ ULONG cFormats,_In_ DWORD *rgAdvf,_In_ LPFORMATETC rgFormatEtc,_In_ IAdviseSink *lpAdviseSink,_Out_ DWORD *rgdwConnection,_In_ LPOLECLIENTSITE pClientSite,_In_ LPSTORAGE pStg,_Out_ LPVOID *ppvObj)
HRESULT None ole32.OleCreateFromDataEx(_In_ LPDATAOBJECT pSrcDataObj,_In_ REFIID riid,_In_ DWORD dwFlags,_In_ DWORD renderopt,_In_ ULONG cFormats,_In_ DWORD *rgAdvf,_In_ LPFORMATETC rgFormatEtc,_In_ IAdviseSink *lpAdviseSink,_Out_ DWORD *rgdwConnection,_In_ LPOLECLIENTSITE pClientSite,_In_ LPSTORAGE pStg,_Out_ LPVOID *ppvObj)
HRESULT None ole32.OleCreateFromData(_In_ LPDATAOBJECT pSrcDataObj,_In_ REFIID riid,_In_ DWORD renderopt,_In_ LPFORMATETC pFormatEtc,_In_ LPOLECLIENTSITE pClientSite,_In_ LPSTORAGE pStg,_Out_ LPVOID *ppvObj)
HRESULT None ole32.OleCreateFromFileEx(_In_ REFCLSID rclsid,_In_ LPCOLESTR lpszFileName,_In_ REFIID riid,_In_ DWORD dwFlags,_In_ DWORD renderopt,_In_ ULONG cFormats,_In_ DWORD *rgAdvf,_In_ LPFORMATETC rgFormatEtc,_In_ IAdviseSink *lpAdviseSink,_Out_ DWORD *rgdwConnection,_In_ LPOLECLIENTSITE pClientSite,_In_ LPSTORAGE pStg,_Out_ LPVOID *ppvObj)
HRESULT None ole32.OleCreateFromFile(_In_ REFCLSID rclsid,_In_ LPCOLESTR lpszFileName,_In_ REFIID riid,_In_ DWORD renderopt,_In_ LPFORMATETC lpFormatEtc,_In_ LPOLECLIENTSITE pClientSite,_In_ LPSTORAGE pStg,_Out_ LPVOID *ppvObj)
HRESULT None ole32.OleCreate(_In_ REFCLSID rclsid,_In_ REFIID riid,_In_ DWORD renderopt,_In_ LPFORMATETC pFormatEtc,_In_ LPOLECLIENTSITE pClientSite,_In_ LPSTORAGE pStg,_Out_ LPVOID *ppvObj)
HRESULT None ole32.OleCreateLinkEx(_In_ LPMONIKER pmkLinkSrc,_In_ REFIID riid,_In_ DWORD dwFlags,_In_ DWORD renderopt,_In_ ULONG cFormats,_In_ DWORD *rgAdvf,_In_ LPFORMATETC rgFormatEtc,_In_ IAdviseSink *lpAdviseSink,_Out_ DWORD *rgdwConnection,_In_ LPOLECLIENTSITE pClientSite,_In_ LPSTORAGE pStg,_Out_ LPVOID *ppvObj)
HRESULT None ole32.OleCreateLinkFromDataEx(_In_ LPDATAOBJECT pSrcDataObj,_In_ REFIID riid,_In_ DWORD dwFlags,_In_ DWORD renderopt,_In_ ULONG cFormats,_In_ DWORD *rgAdvf,_In_ LPFORMATETC rgFormatEtc,_In_ IAdviseSink *lpAdviseSink,_Inout_ DWORD *rgdwConnection,_In_ LPOLECLIENTSITE pClientSite,_In_ LPSTORAGE pStg,_Out_ LPVOID *ppvObj)
HRESULT None ole32.OleCreateLinkFromData(_In_ LPDATAOBJECT pSrcDataObj,_In_ REFIID riid,_In_ DWORD renderopt,_In_ LPFORMATETC pFormatEtc,_In_ LPOLECLIENTSITE pClientSite,_In_ LPSTORAGE pStg,_Out_ LPVOID *ppvObj)
HRESULT None ole32.OleCreateLink(_In_ LPMONIKER pmkLinkSrc,_In_ REFIID riid,_In_ DWORD renderopt,_In_ LPFORMATETC lpFormatEtc,_In_ LPOLECLIENTSITE pClientSite,_In_ LPSTORAGE pStg,_Out_ LPVOID *ppvObj)
HRESULT None ole32.OleCreateLinkToFileEx(_In_ LPCOLESTR lpszFileName,_In_ REFIID riid,_In_ DWORD dwFlags,_In_ DWORD renderopt,_In_ ULONG cFormats,_In_ DWORD *rgAdvf,_In_ LPFORMATETC rgFormatEtc,_In_ IAdviseSink *lpAdviseSink,_Out_ DWORD *rgdwConnection,_In_ LPOLECLIENTSITE pClientSite,_In_ LPSTORAGE pStg,_Out_ LPVOID *ppvObj)
HRESULT None ole32.OleCreateLinkToFile(_In_ LPCOLESTR lpszFileName,_In_ REFIID riid,_In_ DWORD renderopt,_In_ LPFORMATETC lpFormatEtc,_In_ LPOLECLIENTSITE pClientSite,_In_ LPSTORAGE pStg,_Out_ LPVOID *ppvObj)
HRESULT None ole32.OleCreateStaticFromData(_In_ LPDATAOBJECT pSrcDataObj,_In_ REFIID iid,_In_ DWORD renderopt,_In_ LPFORMATETC pFormatEtc,_In_ LPOLECLIENTSITE pClientSite,_In_ LPSTORAGE pStg,_Out_ LPVOID *ppvObj)
HRESULT None ole32.OleDoAutoConvert(_In_ LPSTORAGE pStg,_Out_ LPCLSID pClsidNew)
HRESULT None ole32.OleDraw(_In_ LPUNKNOWN pUnknown,_In_ DWORD dwAspect,_In_ HDC hdcDraw,_In_ LPCRECT lprcBounds)
HRESULT None ole32.OleFlushClipboard(void None None)
HRESULT None ole32.OleGetAutoConvert(_In_ REFCLSID clsidOld,_Out_ LPCLSID pClsidNew)
HRESULT None ole32.OleGetClipboard(_Out_ LPDATAOBJECT *ppDataObj)
HRESULT None ole32.OleGetClipboardWithEnterpriseInfo(_Out_ IDATAOBJECT **dataObject,_Out_ PWSTR *dataEnterpriseId,_Out_ PWSTR *sourceDescription,_Out_ PWSTR *targetDescription,_Out_ PWSTR *dataDescription)
HRESULT None ole32.OleInitialize(_In_ LPVOID pvReserved)
HRESULT None ole32.OleIsCurrentClipboard(_In_ LPDATAOBJECT pDataObj)
HRESULT None ole32.OleLoadFromStream(_In_ LPSTREAM pStm,_In_ REFIID iidInterface,_Out_ LPVOID *ppvObj)
HRESULT None ole32.OleLoad(_In_ LPSTORAGE pStg,_In_ REFIID riid,_In_ LPOLECLIENTSITE pClientSite,_Out_ LPVOID *ppvObj)
HRESULT None ole32.OleLockRunning(_In_ LPUNKNOWN pUnknown,_In_ BOOL fLock,_In_ BOOL fLastUnlockCloses)
HRESULT None ole32.OleNoteObjectVisible(_In_ LPUNKNOWN pUnknown,_In_ BOOL fVisible)
HRESULT None ole32.OleQueryCreateFromData(_In_ LPDATAOBJECT pSrcDataObject)
HRESULT None ole32.OleQueryLinkFromData(_In_ LPDATAOBJECT pSrcDataObject)
HRESULT None ole32.OleRegEnumFormatEtc(_In_ REFCLSID clsid,_In_ DWORD dwDirection,_Out_ LPENUMFORMATETC *ppenum)
HRESULT None ole32.OleRegEnumVerbs(_In_ REFCLSID clsid,_Out_ LPENUMOLEVERB *ppenum)
HRESULT None ole32.OleRegGetMiscStatus(_In_ REFCLSID clsid,_In_ DWORD dwAspect,_Out_ DWORD *pdwStatus)
HRESULT None ole32.OleRegGetUserType(_In_ REFCLSID clsid,_In_ DWORD dwFormOfType,_Out_ LPOLESTR *pszUserType)
HRESULT None ole32.OleRun(_In_ LPUNKNOWN pUnknown)
HRESULT None ole32.OleSave(_In_ LPPERSISTSTORAGE pPS,_In_ LPSTORAGE pStg,_In_ BOOL fSameAsLoad)
HRESULT None ole32.OleSaveToStream(_In_ LPPERSISTSTREAM pPStm,_In_ LPSTREAM pStm)
HRESULT None ole32.OleSetAutoConvert(_In_ REFCLSID clsidOld,_In_ REFCLSID clsidNew)
HRESULT None ole32.OleSetClipboard(_In_ LPDATAOBJECT pDataObj)
HRESULT None ole32.OleSetContainedObject(_In_ LPUNKNOWN pUnknown,_In_ BOOL fContained)
HRESULT None ole32.OleSetMenuDescriptor(_In_ HOLEMENU holemenu,_In_ HWND hwndFrame,_In_ HWND hwndActiveObject,_In_ LPOLEINPLACEFRAME lpFrame,_In_ LPOLEINPLACEACTIVEOBJECT lpActiveObj)
HRESULT None ole32.OleTranslateAccelerator(_In_ LPOLEINPLACEFRAME lpFrame,_In_ LPOLEINPLACEFRAMEINFO lpFrameInfo,_In_ LPMSG lpmsg)
HRESULT None ole32.ProgIDFromCLSID(_In_ REFCLSID clsid,_Out_ LPOLESTR *lplpszProgID)
HRESULT None ole32.PropVariantClear(_Inout_ PROPVARIANT *pvar)
HRESULT None ole32.ReadAt([in] ULARGE_INTEGER ulOffset,[in] void *pv,[in] ULONG cb,[out] ULONG *pcbRead)
HRESULT None ole32.Read([out] void *pv,[in] ULONG cb,[out] ULONG *pcbRead)
HRESULT None ole32.RegisterDragDrop(_In_ HWND hwnd,_In_ LPDROPTARGET pDropTarget)
HRESULT None ole32.RevokeDragDrop(_In_ HWND hwnd)
HRESULT None ole32.Seek([in] LARGE_INTEGER dlibMove,[in] DWORD dwOrigin,[out] ULARGE_INTEGER *plibNewPosition)
HRESULT None ole32.SetClass([in] REFCLSID clsid)
HRESULT None ole32.SetSize([in] ULARGE_INTEGER cb)
HRESULT None ole32.SetSize([in] ULARGE_INTEGER libNewSize)
HRESULT None ole32.SetStateBits([in] DWORD grfStateBits,[in] DWORD grfMask)
HRESULT None ole32.Skip(ULONG celt None)
HRESULT None ole32.Stat([out] STATPROPSETSTG *pstatpsstg)
HRESULT None ole32.Stat([out] STATSTG *pstatstg,[in] DWORD grfStatFlag)
HRESULT None ole32.StgCreateDocfileOnILockBytes(_In_ ILockBytes *plkbyt,_In_ DWORD grfMode,_In_ DWORD reserved,_Out_ IStorage **ppstgOpen)
HRESULT None ole32.StgCreatePropSetStg(_In_ IStorage *pStorage,DWORD dwReserved None,_Out_ IPropertySetStorage **ppPropSetStg)
HRESULT None ole32.StgOpenPropStg(_In_ IUnknown *pUnk,_In_ REFFMTID fmtid,_In_ DWORD grfFlags,_In_ DWORD dwReserved,_Out_ IPropertyStorage **ppPropStg)
HRESULT None ole32.StgOpenStorageOnILockBytes(_In_ ILockBytes *plkbyt,_In_ IStorage *pStgPriority,_In_ DWORD grfMode,_In_ SNB snbExclude,_In_ DWORD reserved,_Out_ IStorage **ppstgOpen)
HRESULT None ole32.StringFromCLSID(_In_ REFCLSID rclsid,_Out_ LPOLESTR *lplpsz)
HRESULT None ole32.StringFromIID(_In_ REFIID rclsid,_Out_ LPOLESTR *lplpsz)
HRESULT None ole32.UnlockRegion([in] ULARGE_INTEGER libOffset,[in] ULARGE_INTEGER cb,[in] DWORD dwLockType)
HRESULT None oleacc.accHitTest([in] long xLeft,[in] long yTop,[out None None,retval] VARIANT *pvarID)
HRESULT None oleacc.accNavigate([in] long navDir,[in] VARIANT varStart,[out None None,retval] VARIANT *pvarEnd)
HRESULT None oleacc.DoAction(IAccessible* pAcc None)
HRESULT None oleacc.get_accChildCount([out None None,retval] long *pcountChildren)
HRESULT None oleacc.get_accDefaultAction([in] VARIANT varID,[out None None,retval] BSTR *pszDefaultAction)
HRESULT None oleacc.get_accFocus([out None None,retval] VARIANT *pvarID)
HRESULT None oleacc.get_accKeyboardShortcut([in] VARIANT varID,[out None None,retval] BSTR *pszKeyboardShortcut)
HRESULT None oleacc.get_accParent([out None None,retval] IDispatch **ppdispParent)
HRESULT None oleacc.get_accSelection([out None None,retval] VARIANT *pvarChildren)
HRESULT None oleacc.get_accState([in] VARIANT varID,[out None None,retval] VARIANT *pvarState)
HRESULT None oleacc.get_accValue([in] VARIANT varID,[out None None,retval] BSTR *pszValue)
HRESULT None oleacc.SelectItemAtPoint(IAccessible* pAcc None,POINT point None)
HRESULT None oleacc.SelectItemAtPoint(POINT point None)
HRESULT None oleaut32.BstrFromVector(_In_ SAFEARRAY *psa,_Out_ BSTR *pbstr)
HRESULT None oleaut32.CreateStdDispatch(IUnknown *punkOuter None,void *pvThis None,ITypeInfo *ptinfo None,IUnknown **ppunkStdDisp None)
HRESULT None oleaut32.CreateTypeLib2(SYSKIND syskind None,LPCOLESTR szFile None,ICreateTypeLib2 **ppctlib None)
HRESULT None oleaut32.DispGetParam(_In_ DISPPARAMS *pdispparams,UINT position None,VARTYPE vtTarg None,_Out_ VARIANT *pvarResult,_Out_opt_ UINT *puArgErr)
HRESULT None oleaut32.DispInvoke(void *_this None,ITypeInfo *ptinfo None,DISPID dispidMember None,WORD wFlags None,DISPPARAMS *pparams None,VARIANT *pvarResult None,EXCEPINFO *pexcepinfo None,UINT *puArgErr None)
HRESULT None oleaut32.GetAltMonthNames(_In_ LCID lcid,_Out_ LPOLESTR **prgp)
HRESULT None oleaut32.GetErrorInfo(_In_ ULONG dwReserved,_Out_ IErrorInfo **pperrinfo)
HRESULT None oleaut32.GetRecordInfoFromGuids(_In_ REFGUID rGuidTypeLib,_In_ ULONG uVerMajor,_In_ ULONG uVerMinor,_In_ LCID lcid,_In_ REFGUID rGuidTypeInfo,_Out_ IRecordInfo **ppRecInfo)
HRESULT None oleaut32.GetRecordInfoFromTypeInfo(_In_ ITypeInfo *pTypeInfo,_Out_ IRecordInfo **ppRecInfo)
HRESULT None oleaut32.GetVarConversionLocaleSetting(_Out_ ULONG *dwFlags)
HRESULT None oleaut32.LoadRegTypeLib(REFGUID rguid None,WORD wVerMajor None,WORD wVerMinor None,LCID lcid None,ITypeLib **pptlib None)
HRESULT None oleaut32.OleCreateFontIndirect(_In_ LPFONTDESC lpFontDesc,_In_ REFIID riid,_Out_ LPVOID *lplpvObj)
HRESULT None oleaut32.OleCreatePictureIndirect(_In_ LPPICTDESC lpPictDesc,_In_ REFIID riid,_In_ BOOL fOwn,_Out_ LPVOID *lplpvObj)
HRESULT None oleaut32.OleCreatePropertyFrame(_In_ HWND hwndOwner,_In_ UINT x,_In_ UINT y,_In_ LPCOLESTR lpszCaption,_In_ ULONG cObjects,_In_ LPUNKNOWN *ppUnk,_In_ ULONG cPages,_In_ LPCLSID pPageClsID,_In_ LCID lcid,_In_ DWORD dwReserved,_In_ LPVOID pvReserved)
HRESULT None oleaut32.OleLoadPictureEx(_In_ LPSTREAM lpstream,_In_ LONG lSize,_In_ BOOL fRunmode,_In_ REFIID riid,_In_ DWORD xSizeDesired,_In_ DWORD ySizeDesired,_In_ DWORD dwFlags,_Out_ LPVOID *lplpvObj)
HRESULT None oleaut32.OleLoadPictureFileEx(_In_ VARIANT varFileName,_In_ DWORD xSizeDesired,_In_ DWORD ySizeDesired,_In_ DWORD dwFlags,_Out_ LPDISPATCH *lplpdispPicture)
HRESULT None oleaut32.OleLoadPicture(_In_ LPSTREAM lpstream,_In_ LONG lSize,_In_ BOOL fRunmode,_In_ REFIID riid,_Out_ LPVOID *lplpvObj)
HRESULT None oleaut32.OleLoadPicturePath(_In_ LPOLESTR szURLorPath,_In_ LPUNKNOWN punkCaller,_In_ DWORD dwReserved,_In_ OLE_COLOR clrReserved,_In_ REFIID riid,_Out_ LPVOID *ppvRet)
HRESULT None oleaut32.OleSavePictureFile(_In_ LPDISPATCH lpdispPicture,_In_ BSTR bstrFileName)
HRESULT None oleaut32.RegisterTypeLibForUser(ITypeLib *ptlib None,_In_ OLECHAR *szFullPath,_In_opt_ OLECHAR *szHelpDir)
HRESULT None oleaut32.RegisterTypeLib(ITypeLib *ptlib None,_In_ LPCOLESTR szFullPath,_In_opt_ LPCOLESTR szHelpDir)
HRESULT None oleaut32.SafeArrayAccessData(_In_ SAFEARRAY *psa,_Out_ void **ppvData)
HRESULT None oleaut32.SafeArrayAllocData(_In_ SAFEARRAY *psa)
HRESULT None oleaut32.SafeArrayAllocDescriptorEx(_In_ VARTYPE vt,_In_ UINT cDims,_Out_ SAFEARRAY **ppsaOut)
HRESULT None oleaut32.SafeArrayAllocDescriptor(_In_ UINT cDims,_Out_ SAFEARRAY **ppsaOut)
HRESULT None oleaut32.SafeArrayCopyData(_In_ SAFEARRAY *psaSource,_In_ SAFEARRAY *psaTarget)
HRESULT None oleaut32.SafeArrayCopy(_In_ SAFEARRAY *psa,_Out_ SAFEARRAY **ppsaOut)
HRESULT None oleaut32.SafeArrayDestroyData(_In_ SAFEARRAY *psa)
HRESULT None oleaut32.SafeArrayDestroyDescriptor(_In_ SAFEARRAY *psa)
HRESULT None oleaut32.SafeArrayDestroy(_In_ SAFEARRAY *psa)
HRESULT None oleaut32.SafeArrayGetElement(_In_ SAFEARRAY *psa,_In_ LONG *rgIndices,_Out_ void *pv)
HRESULT None oleaut32.SafeArrayGetIID(_In_ SAFEARRAY *psa,_Out_ GUID *pguid)
HRESULT None oleaut32.SafeArrayGetLBound(_In_ SAFEARRAY *psa,_In_ UINT nDim,_Out_ LONG *plLbound)
HRESULT None oleaut32.SafeArrayGetRecordInfo(_In_ SAFEARRAY *psa,_Out_ IRecordInfo **prinfo)
HRESULT None oleaut32.SafeArrayGetUBound(_In_ SAFEARRAY *psa,_In_ UINT nDim,_Out_ LONG *plUbound)
HRESULT None oleaut32.SafeArrayGetVartype(_In_ SAFEARRAY *psa,_Out_ VARTYPE *pvt)
HRESULT None oleaut32.SafeArrayLock(_In_ SAFEARRAY *psa)
HRESULT None oleaut32.SafeArrayPtrOfIndex(_In_ SAFEARRAY *psa,_In_ LONG *rgIndices,_Out_ void **ppvData)
HRESULT None oleaut32.SafeArrayPutElement(_In_ SAFEARRAY *psa,_In_ LONG *rgIndices,_In_ void *pv)
HRESULT None oleaut32.SafeArrayRedim(_Inout_ SAFEARRAY *psa,_In_ SAFEARRAYBOUND *psaboundNew)
HRESULT None oleaut32.SafeArraySetIID(_In_ SAFEARRAY *psa,_In_ REFGUID guid)
HRESULT None oleaut32.SafeArraySetRecordInfo(_In_ SAFEARRAY *psa,_In_ IRecordInfo *prinfo)
HRESULT None oleaut32.SafeArrayUnaccessData(_In_ SAFEARRAY *psa)
HRESULT None oleaut32.SafeArrayUnlock(_In_ SAFEARRAY *psa)
HRESULT None oleaut32.SetErrorInfo(_In_ ULONG dwReserved,_In_opt_ IErrorInfo *perrinfo)
HRESULT None oleaut32.SetVarConversionLocaleSetting(_In_ ULONG dwFlags)
HRESULT None oleaut32.UnRegisterTypeLib(REFGUID libID None,WORD wVerMajor None,WORD wVerMinor None,LCID lcid None,SYSKIND syskind None)
HRESULT None oleaut32.VarAbs(_In_ LPVARIANT pvarIn,_Out_ LPVARIANT pvarResult)
HRESULT None oleaut32.VarAdd(_In_ LPVARIANT pvarLeft,_In_ LPVARIANT pvarRight,_Out_ LPVARIANT pvarResult)
HRESULT None oleaut32.VarAnd(_In_ LPVARIANT pvarLeft,_In_ LPVARIANT pvarRight,_Out_ LPVARIANT pvarResult)
HRESULT None oleaut32.VarBoolFromCy(_In_ CY cyIn,_Out_ VARIANT_BOOL *pboolOut)
HRESULT None oleaut32.VarBoolFromDate(_In_ DATE dateIn,_Out_ VARIANT_BOOL *pboolOut)
HRESULT None oleaut32.VarBoolFromDisp(IDispatch *pdispIn None,_In_ LCID lcid,_Out_ VARIANT_BOOL *pboolOut)
HRESULT None oleaut32.VarBoolFromI1(_In_ CHAR cIn,_Out_ VARIANT_BOOL *pboolOut)
HRESULT None oleaut32.VarBoolFromI2(_In_ SHORT sIn,_Out_ VARIANT_BOOL *pboolOut)
HRESULT None oleaut32.VarBoolFromI4(_In_ LONG lIn,_Out_ VARIANT_BOOL *pboolOut)
HRESULT None oleaut32.VarBoolFromI8(_In_ LONG64 i64In,_Out_ VARIANT_BOOL *pboolOut)
HRESULT None oleaut32.VarBoolFromR4(_In_ FLOAT fltIn,_Out_ VARIANT_BOOL *pboolOut)
HRESULT None oleaut32.VarBoolFromR8(_In_ DOUBLE dblIn,_Out_ VARIANT_BOOL *pboolOut)
HRESULT None oleaut32.VarBoolFromStr(_In_ LPCOLESTR strIn,_In_ LCID lcid,_In_ ULONG dwFlags,_Out_ VARIANT_BOOL *pboolOut)
HRESULT None oleaut32.VarBoolFromUI1(_In_ BYTE bIn,_Out_ VARIANT_BOOL *pboolOut)
HRESULT None oleaut32.VarBoolFromUI2(_In_ USHORT uiIn,_Out_ VARIANT_BOOL *pboolOut)
HRESULT None oleaut32.VarBoolFromUI4(_In_ ULONG ulIn,_Out_ VARIANT_BOOL *pboolOut)
HRESULT None oleaut32.VarBoolFromUI8(_In_ ULONG64 i64In,_Out_ VARIANT_BOOL *pboolOut)
HRESULT None oleaut32.VarBstrCat(_In_ BSTR bstrLeft,_In_ BSTR bstrRight,_Out_ LPBSTR pbstrResult)
HRESULT None oleaut32.VarBstrFromBool(_In_ VARIANT_BOOL boolIn,_In_ LCID lcid,_In_ ULONG dwFlags,_Out_ BSTR *pbstrOut)
HRESULT None oleaut32.VarBstrFromCy(_In_ CY cyIn,_In_ LCID lcid,_In_ ULONG dwFlags,_Out_ BSTR *pbstrOut)
HRESULT None oleaut32.VarBstrFromDate(_In_ DATE dateIn,_In_ LCID lcid,_In_ ULONG dwFlags,_Out_ BSTR *pbstrOut)
HRESULT None oleaut32.VarBstrFromDisp(IDispatch *pdispIn None,_In_ LCID lcid,_In_ ULONG dwFlags,_Out_ BSTR *pbstrOut)
HRESULT None oleaut32.VarBstrFromI1(_In_ CHAR cIn,_In_ LCID lcid,_In_ ULONG dwFlags,_Out_ BSTR *pbstrOut)
HRESULT None oleaut32.VarBstrFromI2(_In_ SHORT iVal,_In_ LCID lcid,_In_ ULONG dwFlags,BSTR *pbstrOut None)
HRESULT None oleaut32.VarBstrFromI4(_In_ LONG lIn,_In_ LCID lcid,_In_ ULONG dwFlags,_Out_ BSTR *pbstrOut)
HRESULT None oleaut32.VarBstrFromR4(_In_ FLOAT fltIn,_In_ LCID lcid,_In_ ULONG dwFlags,_Out_ BSTR *pbstrOut)
HRESULT None oleaut32.VarBstrFromR8(_In_ DOUBLE dblIn,_In_ LCID lcid,_In_ ULONG dwFlags,_Out_ BSTR *pbstrOut)
HRESULT None oleaut32.VarBstrFromUI1(_In_ BYTE bVal,_In_ LCID lcid,_In_ ULONG dwFlags,_Out_ BSTR *pbstrOut)
HRESULT None oleaut32.VarBstrFromUI2(_In_ USHORT uiIn,_In_ LCID lcid,_In_ ULONG dwFlags,_Out_ BSTR *pbstrOut)
HRESULT None oleaut32.VarBstrFromUI4(_In_ ULONG ulIn,_In_ LCID lcid,_In_ ULONG dwFlags,_Out_ BSTR *pbstrOut)
HRESULT None oleaut32.VarCat(_In_ LPVARIANT pvarLeft,_In_ LPVARIANT pvarRight,_Out_ LPVARIANT pvarResult)
HRESULT None oleaut32.VarCmp(_In_ LPVARIANT pvarLeft,_In_ LPVARIANT pvarRight,_In_ LCID lcid,_In_ ULONG dwFlags)
HRESULT None oleaut32.VarCyAbs(_In_ CY cyIn,_Out_ LPCY pcyResult)
HRESULT None oleaut32.VarCyAdd(_In_ CY cyLeft,_In_ CY cyRight,_Out_ LPCY pcyResult)
HRESULT None oleaut32.VarCyCmp(_In_ CY cyLeft,_In_ CY cyRight)
HRESULT None oleaut32.VarCyCmpR8(_In_ CY cyLeft,_In_ double dblRight)
HRESULT None oleaut32.VarCyFix(_In_ CY cyIn,_Out_ LPCY pcyResult)
HRESULT None oleaut32.VarCyFromBool(_In_ VARIANT_BOOL boolIn,_Out_ CY *pcyOut)
HRESULT None oleaut32.VarCyFromDate(_In_ DATE dateIn,_Out_ CY *pcyOut)
HRESULT None oleaut32.VarCyFromDisp(_In_ IDispatch *pdispIn,_In_ LCID lcid,_Out_ CY *pcyOut)
HRESULT None oleaut32.VarCyFromI1(_In_ CHAR cIn,_Out_ CY *pcyOut)
HRESULT None oleaut32.VarCyFromI2(_In_ SHORT sIn,_Out_ CY *pcyOut)
HRESULT None oleaut32.VarCyFromI4(_In_ LONG lIn,_Out_ CY *pcyOut)
HRESULT None oleaut32.VarCyFromI8(_In_ LONG64 i64In,_Out_ CY *pcyOut)
HRESULT None oleaut32.VarCyFromR4(_In_ FLOAT fltIn,_Out_ CY *pcyOut)
HRESULT None oleaut32.VarCyFromR8(_In_ DOUBLE dblIn,_Out_ CY *pcyOut)
HRESULT None oleaut32.VarCyFromStr(_In_ LPCOLESTR strIn,_In_ LCID lcid,_In_ ULONG dwFlags,_Out_ CY *pcyOut)
HRESULT None oleaut32.VarCyFromUI1(_In_ BYTE bIn,_Out_ CY *pcyOut)
HRESULT None oleaut32.VarCyFromUI2(_In_ USHORT uiIn,_Out_ CY *pcyOut)
HRESULT None oleaut32.VarCyFromUI4(_In_ ULONG ulIn,_Out_ CY *pcyOut)
HRESULT None oleaut32.VarCyFromUI8(_In_ ULONG64 ui64In,_Out_ CY *pcyOut)
HRESULT None oleaut32.VarCyInt(_In_ CY cyIn,_Out_ LPCY pcyResult)
HRESULT None oleaut32.VarCyMulI4(_In_ CY cyLeft,_In_ long lRight,_Out_ LPCY pcyResult)
HRESULT None oleaut32.VarCyMulI8(_In_ CY cyLeft,_In_ LONG64 lRight,_Out_ LPCY pcyResult)
HRESULT None oleaut32.VarCyMul(_In_ CY cyLeft,_In_ CY cyRight,_Out_ LPCY pcyResult)
HRESULT None oleaut32.VarCyNeg(_In_ CY cyIn,_Out_ LPCY pcyResult)
HRESULT None oleaut32.VarCySub(_In_ CY cyLeft,_In_ CY cyRight,_Out_ LPCY pcyResult)
HRESULT None oleaut32.VarDateFromBool(_In_ VARIANT_BOOL boolIn,_Out_ DATE *pdateOut)
HRESULT None oleaut32.VarDateFromCy(_In_ CY cyIn,_Out_ DATE *pdateOut)
HRESULT None oleaut32.VarDateFromDisp(IDispatch *pdispIn None,_In_ LCID lcid,_Out_ DATE *pdateOut)
HRESULT None oleaut32.VarDateFromI1(_In_ CHAR cIn,_Out_ DATE *pdateOut)
HRESULT None oleaut32.VarDateFromI2(_In_ SHORT sIn,_Out_ DATE *pdateOut)
HRESULT None oleaut32.VarDateFromI4(_In_ LONG lIn,_Out_ DATE *pdateOut)
HRESULT None oleaut32.VarDateFromI8(_In_ LONG64 i64In,_Out_ DATE *pdateOut)
HRESULT None oleaut32.VarDateFromR4(_In_ FLOAT fltIn,_Out_ DATE *pdateOut)
HRESULT None oleaut32.VarDateFromR8(_In_ DOUBLE dblIn,_Out_ DATE *pdateOut)
HRESULT None oleaut32.VarDateFromStr(_In_ LPCOLESTR strIn,_In_ LCID lcid,_In_ ULONG dwFlags,_Out_ DATE *pdateOut)
HRESULT None oleaut32.VarDateFromUdateEx(_In_ UDATE *pudateIn,_In_ LCID lcid,_In_ ULONG dwFlags,_Out_ DATE *pdateOut)
HRESULT None oleaut32.VarDateFromUdate(_In_ UDATE *pudateIn,_In_ ULONG dwFlags,_Out_ DATE *pdateOut)
HRESULT None oleaut32.VarDateFromUI1(_In_ BYTE bIn,_Out_ DATE *pdateOut)
HRESULT None oleaut32.VarDateFromUI2(_In_ USHORT uiIn,_Out_ DATE *pdateOut)
HRESULT None oleaut32.VarDateFromUI4(_In_ ULONG ulIn,_Out_ DATE *pdateOut)
HRESULT None oleaut32.VarDateFromUI8(_In_ ULONG64 ui64In,_Out_ DATE *pdateOut)
HRESULT None oleaut32.VarDecAbs(_In_ LPDECIMAL pdecIn,_Out_ LPDECIMAL pdecResult)
HRESULT None oleaut32.VarDecAdd(_In_ LPDECIMAL pdecLeft,_In_ LPDECIMAL pdecRight,_Out_ LPDECIMAL pdecResult)
HRESULT None oleaut32.VarDecCmp(_In_ LPDECIMAL pdecLeft,_In_ LPDECIMAL pdecRight)
HRESULT None oleaut32.VarDecFix(_In_ LPDECIMAL pdecIn,_Out_ LPDECIMAL pdecResult)
HRESULT None oleaut32.VarDecFromBool(_In_ VARIANT_BOOL boolIn,_Out_ DECIMAL *pdecOut)
HRESULT None oleaut32.VarDecFromCy(_In_ CY cyIn,_Out_ DECIMAL *pdecOut)
HRESULT None oleaut32.VarDecFromDate(_In_ DATE dateIn,_Out_ DECIMAL *pdecOut)
HRESULT None oleaut32.VarDecFromDisp(_In_ IDispatch *pdispIn,_In_ LCID lcid,_Out_ DECIMAL *pdecOut)
HRESULT None oleaut32.VarDecFromI1(_In_ CHAR cIn,_Out_ DECIMAL *pdecOut)
HRESULT None oleaut32.VarDecFromI2(_In_ SHORT uiIn,_Out_ DECIMAL *pdecOut)
HRESULT None oleaut32.VarDecFromI4(_In_ LONG lIn,_Out_ DECIMAL *pdecOut)
HRESULT None oleaut32.VarDecFromI8(_In_ LONG64 i64In,_Out_ DECIMAL *pdecOut)
HRESULT None oleaut32.VarDecFromR4(_In_ FLOAT fltIn,_Out_ DECIMAL *pdecOut)
HRESULT None oleaut32.VarDecFromR8(_In_ DOUBLE dblIn,_Out_ DECIMAL *pdecOut)
HRESULT None oleaut32.VarDecFromStr(_In_ LPCOLESTR strIn,_In_ LCID lcid,_In_ ULONG dwFlags,_Out_ DECIMAL *pdecOut)
HRESULT None oleaut32.VarDecFromUI1(_In_ BYTE bIn,_Out_ DECIMAL *pdecOut)
HRESULT None oleaut32.VarDecFromUI2(_In_ USHORT uiIn,_Out_ DECIMAL *pdecOut)
HRESULT None oleaut32.VarDecFromUI4(_In_ ULONG ulIn,_Out_ DECIMAL *pdecOut)
HRESULT None oleaut32.VarDecFromUI8(_In_ ULONG64 ui64In,_Out_ DECIMAL *pdecOut)
HRESULT None oleaut32.VarDecInt(_In_ LPDECIMAL pdecIn,_Out_ LPDECIMAL pdecResult)
HRESULT None oleaut32.VarDecMul(_In_ LPDECIMAL pdecLeft,_In_ LPDECIMAL pdecRight,_Out_ LPDECIMAL pdecResult)
HRESULT None oleaut32.VarDecNeg(_In_ LPDECIMAL pdecIn,_Out_ LPDECIMAL pdecResult)
HRESULT None oleaut32.VarDecRound(_In_ LPDECIMAL pdecIn,_In_ int cDecimals,_Out_ LPDECIMAL pdecResult)
HRESULT None oleaut32.VarDecSub(_In_ LPDECIMAL pdecLeft,_In_ LPDECIMAL pdecRight,_Out_ LPDECIMAL pdecResult)
HRESULT None oleaut32.VarDiv(_In_ LPVARIANT pvarLeft,_In_ LPVARIANT pvarRight,_Out_ LPVARIANT pvarResult)
HRESULT None oleaut32.VarEqv(_In_ LPVARIANT pvarLeft,_In_ LPVARIANT pvarRight,_Out_ LPVARIANT pvarResult)
HRESULT None oleaut32.VarFix(_In_ LPVARIANT pvarIn,_Out_ LPVARIANT pvarResult)
HRESULT None oleaut32.VarI1FromBool(_In_ VARIANT_BOOL boolIn,_Out_ CHAR *pcOut)
HRESULT None oleaut32.VarI1FromCy(_In_ CY cyIn,_Out_ CHAR *pcOut)
HRESULT None oleaut32.VarI1FromDate(_In_ DATE dateIn,_Out_ CHAR *pcOut)
HRESULT None oleaut32.VarI1FromDisp(_In_ IDispatch *pdispIn,_In_ LCID lcid,_Out_ CHAR *pcOut)
HRESULT None oleaut32.VarI1FromI2(_In_ SHORT uiIn,_Out_ CHAR *pcOut)
HRESULT None oleaut32.VarI1FromI4(_In_ LONG lIn,_Out_ CHAR *pcOut)
HRESULT None oleaut32.VarI1FromI8(_In_ LONG64 i64In,_Out_ CHAR *pcOut)
HRESULT None oleaut32.VarI1FromR4(_In_ FLOAT fltIn,_Out_ CHAR *pcOut)
HRESULT None oleaut32.VarI1FromR8(_In_ DOUBLE dblIn,_Out_ CHAR *pcOut)
HRESULT None oleaut32.VarI1FromStr(_In_ LPCOLESTR strIn,_In_ LCID lcid,_In_ ULONG dwFlags,_Out_ CHAR *pcOut)
HRESULT None oleaut32.VarI1FromUI1(_In_ BYTE bIn,_Out_ CHAR *pcOut)
HRESULT None oleaut32.VarI1FromUI2(_In_ USHORT uiIn,_Out_ CHAR *pcOut)
HRESULT None oleaut32.VarI1FromUI4(_In_ ULONG ulIn,_Out_ CHAR *pcOut)
HRESULT None oleaut32.VarI1FromUI8(_In_ ULONG64 i64In,_Out_ CHAR *pcOut)
HRESULT None oleaut32.VarI2FromBool(_In_ VARIANT_BOOL boolIn,_Out_ SHORT *psOut)
HRESULT None oleaut32.VarI2FromCy(_In_ CY cyIn,SHORT *psOut None)
HRESULT None oleaut32.VarI2FromDate(_In_ DATE dateIn,_Out_ SHORT *psOut)
HRESULT None oleaut32.VarI2FromDisp(IDispatch *pdispIn None,_In_ LCID lcid,_Out_ SHORT *psOut)
HRESULT None oleaut32.VarI2FromI1(_In_ CHAR cIn,_Out_ SHORT *psOut)
HRESULT None oleaut32.VarI2FromI4(_In_ LONG lIn,_Out_ SHORT *psOut)
HRESULT None oleaut32.VarI2FromI8(_In_ LONG64 i64In,_Out_ SHORT *psOut)
HRESULT None oleaut32.VarI2FromR4(_In_ FLOAT fltIn,_Out_ SHORT *psOut)
HRESULT None oleaut32.VarI2FromR8(_In_ DOUBLE dblIn,_Out_ SHORT *psOut)
HRESULT None oleaut32.VarI2FromStr(_In_ LPCOLESTR strIn,_In_ LCID lcid,_In_ ULONG dwFlags,_Out_ SHORT *psOut)
HRESULT None oleaut32.VarI2FromUI1(_In_ BYTE bIn,_Out_ SHORT *psOut)
HRESULT None oleaut32.VarI2FromUI2(_In_ USHORT uiIn,_Out_ SHORT *psOut)
HRESULT None oleaut32.VarI2FromUI4(_In_ ULONG ulIn,_Out_ SHORT *psOut)
HRESULT None oleaut32.VarI2FromUI8(_In_ ULONG64 ui64In,_Out_ SHORT *psOut)
HRESULT None oleaut32.VarI4FromBool(_In_ VARIANT_BOOL boolIn,_Out_ LONG *plOut)
HRESULT None oleaut32.VarI4FromCy(_In_ CY cyIn,_Out_ LONG *plOut)
HRESULT None oleaut32.VarI4FromDate(_In_ DATE dateIn,_Out_ LONG *plOut)
HRESULT None oleaut32.VarI4FromDisp(IDispatch *pdispIn None,_In_ LCID lcid,_Out_ LONG *plOut)
HRESULT None oleaut32.VarI4FromI1(_In_ CHAR cIn,_Out_ LONG *plOut)
HRESULT None oleaut32.VarI4FromI2(_In_ SHORT sIn,_Out_ LONG *plOut)
HRESULT None oleaut32.VarI4FromI8(_In_ LONG64 i64In,_Out_ LONG *plOut)
HRESULT None oleaut32.VarI4FromInt(_In_ INT intIn,_Out_ LONG *plOut)
HRESULT None oleaut32.VarI4FromR4(_In_ FLOAT fltIn,_Out_ LONG *plOut)
HRESULT None oleaut32.VarI4FromR8(_In_ DOUBLE dblIn,_Out_ LONG *plOut)
HRESULT None oleaut32.VarI4FromStr(_In_ LPCOLESTR strIn,_In_ LCID lcid,_In_ ULONG dwFlags,_Out_ LONG *plOut)
HRESULT None oleaut32.VarI4FromUI1(_In_ BYTE bIn,_Out_ LONG *plOut)
HRESULT None oleaut32.VarI4FromUI2(_In_ USHORT uiIn,_Out_ LONG *plOut)
HRESULT None oleaut32.VarI4FromUI4(_In_ ULONG ulIn,_Out_ LONG *plOut)
HRESULT None oleaut32.VarI4FromUI8(_In_ ULONG64 ui64In,_Out_ LONG *plOut)
HRESULT None oleaut32.VarI8FromBool(_In_ VARIANT_BOOL boolIn,_Out_ LONG64 *pi64Out)
HRESULT None oleaut32.VarI8FromCy(_In_ CY cyIn,_Out_ LONG64 *pi64Out)
HRESULT None oleaut32.VarI8FromDate(_In_ DATE dateIn,_Out_ LONG64 *pi64Out)
HRESULT None oleaut32.VarI8FromDisp(IDispatch *pdispIn None,_In_ LCID lcid,_Out_ LONG64 *pi64Out)
HRESULT None oleaut32.VarI8FromI1(_In_ CHAR cIn,_Out_ LONG64 *pi64Out)
HRESULT None oleaut32.VarI8FromI2(_In_ SHORT sIn,_Out_ LONG64 *pi64Out)
HRESULT None oleaut32.VarI8FromR4(_In_ FLOAT fltIn,_Out_ LONG64 *pi64Out)
HRESULT None oleaut32.VarI8FromR8(_In_ DOUBLE dblIn,_Out_ LONG64 *pi64Out)
HRESULT None oleaut32.VarI8FromUI1(_In_ BYTE bIn,_Out_ LONG64 *pi64Out)
HRESULT None oleaut32.VarI8FromUI2(_In_ USHORT uiIn,_Out_ LONG64 *pi64Out)
HRESULT None oleaut32.VarI8FromUI4(_In_ ULONG ulIn,_Out_ LONG64 *pi64Out)
HRESULT None oleaut32.VarI8FromUI8(_In_ ULONG64 ui64In,_Out_ LONG64 *pi64Out)
HRESULT None oleaut32.VariantClear(_Inout_ VARIANTARG *pvarg)
HRESULT None oleaut32.VarIdiv(_In_ LPVARIANT pvarLeft,_In_ LPVARIANT pvarRight,_Out_ LPVARIANT pvarResult)
HRESULT None oleaut32.VarImp(_In_ LPVARIANT pvarLeft,_In_ LPVARIANT pvarRight,_Out_ LPVARIANT pvarResult)
HRESULT None oleaut32.VarInt(_In_ LPVARIANT pvarIn,_Out_ LPVARIANT pvarResult)
HRESULT None oleaut32.VarMod(_In_ LPVARIANT pvarLeft,_In_ LPVARIANT pvarRight,_Out_ LPVARIANT pvarResult)
HRESULT None oleaut32.VarMul(_In_ LPVARIANT pvarLeft,_In_ LPVARIANT pvarRight,_Out_ LPVARIANT pvarResult)
HRESULT None oleaut32.VarNeg(_In_ LPVARIANT pvarIn,_Out_ LPVARIANT pvarResult)
HRESULT None oleaut32.VarNot(_In_ LPVARIANT pvarIn,_Out_ LPVARIANT pvarResult)
HRESULT None oleaut32.VarNumFromParseNum(_In_ NUMPARSE *pnumprs,_In_ BYTE *rgbDig,_In_ ULONG dwVtBits,_Out_ VARIANT *pvar)
HRESULT None oleaut32.VarOr(_In_ LPVARIANT pvarLeft,_In_ LPVARIANT pvarRight,_Out_ LPVARIANT pvarResult)
HRESULT None oleaut32.VarParseNumFromStr(_In_ LPCOLESTR strIn,_In_ LCID lcid,_In_ ULONG dwFlags,_Out_ NUMPARSE *pnumprs,_Out_ BYTE *rgbDig)
HRESULT None oleaut32.VarPow(_In_ LPVARIANT pvarLeft,_In_ LPVARIANT pvarRight,_Out_ LPVARIANT pvarResult)
HRESULT None oleaut32.VarR4CmpR8(_In_ float fltLeft,_In_ double dblRight)
HRESULT None oleaut32.VarR4FromBool(_In_ VARIANT_BOOL boolIn,_Out_ FLOAT *pfltOut)
HRESULT None oleaut32.VarR4FromCy(_In_ CY cyIn,FLOAT *pfltOut None)
HRESULT None oleaut32.VarR4FromDate(_In_ DATE dateIn,_Out_ FLOAT *pfltOut)
HRESULT None oleaut32.VarR4FromDisp(IDispatch *pdispIn None,_In_ LCID lcid,_Out_ FLOAT *pfltOut)
HRESULT None oleaut32.VarR4FromI1(_In_ CHAR cIn,_Out_ FLOAT *pfltOut)
HRESULT None oleaut32.VarR4FromI2(_In_ SHORT sIn,_Out_ FLOAT *pfltOut)
HRESULT None oleaut32.VarR4FromI4(_In_ LONG lIn,_Out_ FLOAT *pfltOut)
HRESULT None oleaut32.VarR4FromI8(_In_ LONG64 i64In,_Out_ FLOAT *pfltOut)
HRESULT None oleaut32.VarR4FromR8(_In_ DOUBLE dblIn,_Out_ FLOAT *pfltOut)
HRESULT None oleaut32.VarR4FromStr(_In_ LPCOLESTR strIn,_In_ LCID lcid,_In_ ULONG dwFlags,_Out_ FLOAT *pfltOut)
HRESULT None oleaut32.VarR4FromUI1(_In_ BYTE bIn,_Out_ FLOAT *pfltOut)
HRESULT None oleaut32.VarR4FromUI2(_In_ USHORT uiIn,_Out_ FLOAT *pfltOut)
HRESULT None oleaut32.VarR4FromUI4(_In_ ULONG ulIn,_Out_ FLOAT *pfltOut)
HRESULT None oleaut32.VarR4FromUI8(_In_ ULONG64 ui64In,_Out_ FLOAT *pfltOut)
HRESULT None oleaut32.VarR8FromBool(_In_ VARIANT_BOOL boolIn,_Out_ DOUBLE *pdblOut)
HRESULT None oleaut32.VarR8FromCy(_In_ CY cyIn,DOUBLE *pdblOut None)
HRESULT None oleaut32.VarR8FromDate(_In_ DATE dateIn,_Out_ DOUBLE *pdblOut)
HRESULT None oleaut32.VarR8FromDisp(IDispatch *pdispIn None,_In_ LCID lcid,_Out_ DOUBLE *pdblOut)
HRESULT None oleaut32.VarR8FromI1(_In_ CHAR cIn,DOUBLE *pdblOut None)
HRESULT None oleaut32.VarR8FromI2(_In_ SHORT sIn,_Out_ DOUBLE *pdblOut)
HRESULT None oleaut32.VarR8FromI4(_In_ LONG lIn,_Out_ DOUBLE *pdblOut)
HRESULT None oleaut32.VarR8FromI8(_In_ LONG64 i64In,_Out_ DOUBLE *pdblOut)
HRESULT None oleaut32.VarR8FromR4(_In_ FLOAT fltIn,_Out_ DOUBLE *pdblOut)
HRESULT None oleaut32.VarR8FromStr(_In_ LPCOLESTR strIn,_In_ LCID lcid,_In_ ULONG dwFlags,_Out_ DOUBLE *pdblOut)
HRESULT None oleaut32.VarR8FromUI1(_In_ BYTE bIn,_Out_ DOUBLE *pdblOut)
HRESULT None oleaut32.VarR8FromUI2(_In_ USHORT uiIn,_Out_ DOUBLE *pdblOut)
HRESULT None oleaut32.VarR8FromUI4(_In_ ULONG ulIn,_Out_ DOUBLE *pdblOut)
HRESULT None oleaut32.VarR8FromUI8(_In_ ULONG64 ui64In,_Out_ DOUBLE *pdblOut)
HRESULT None oleaut32.VarR8Pow(_In_ double dblLeft,_In_ double dblRight,_Out_ double *pdblResult)
HRESULT None oleaut32.VarR8Round(_In_ double dblIn,_In_ int cDecimals,_Out_ double *pdblResult)
HRESULT None oleaut32.VarRound(_In_ LPVARIANT pvarIn,_In_ int cDecimals,_Out_ LPVARIANT pvarResult)
HRESULT None oleaut32.VarSub(_In_ LPVARIANT pvarLeft,_In_ LPVARIANT pvarRight,_Out_ LPVARIANT pvarResult)
HRESULT None oleaut32.VarUI1FromBool(_In_ VARIANT_BOOL boolIn,_Out_ BYTE *pbOut)
HRESULT None oleaut32.VarUI1FromCy(_In_ CY cyIn,_Out_ BYTE *pbOut)
HRESULT None oleaut32.VarUI1FromDate(_In_ DATE dateIn,_Out_ BYTE *pbOut)
HRESULT None oleaut32.VarUI1FromDisp(IDispatch *pdispIn None,_In_ LCID lcid,_Out_ BYTE *pbOut)
HRESULT None oleaut32.VarUI1FromI1(_In_ CHAR cIn,_Out_ BYTE *pbOut)
HRESULT None oleaut32.VarUI1FromI2(_In_ SHORT sIn,_Out_ BYTE *pbOut)
HRESULT None oleaut32.VarUI1FromI4(_In_ LONG lIn,_Out_ BYTE *pbOut)
HRESULT None oleaut32.VarUI1FromI8(_In_ LONG64 i64In,_Out_ BYTE *pbOut)
HRESULT None oleaut32.VarUI1FromR4(_In_ FLOAT fltIn,BYTE *pbOut None)
HRESULT None oleaut32.VarUI1FromR8(_In_ DOUBLE dblIn,_Out_ BYTE *pbOut)
HRESULT None oleaut32.VarUI1FromStr(_In_ LPCOLESTR strIn,_In_ LCID lcid,_In_ ULONG dwFlags,_Out_ BYTE *pbOut)
HRESULT None oleaut32.VarUI1FromUI2(_In_ USHORT uiIn,_Out_ BYTE *pbOut)
HRESULT None oleaut32.VarUI1FromUI4(_In_ ULONG ulIn,_Out_ BYTE *pbOut)
HRESULT None oleaut32.VarUI1FromUI8(_In_ ULONG64 ui64In,_Out_ BYTE *pbOut)
HRESULT None oleaut32.VarUI2FromBool(_In_ VARIANT_BOOL boolIn,_Out_ USHORT *puiOut)
HRESULT None oleaut32.VarUI2FromCy(_In_ CY cyIn,_Out_ USHORT *puiOut)
HRESULT None oleaut32.VarUI2FromDate(_In_ DATE dateIn,_Out_ USHORT *puiOut)
HRESULT None oleaut32.VarUI2FromDisp(_In_ IDispatch *pdispIn,_In_ LCID lcid,_Out_ USHORT *puiOut)
HRESULT None oleaut32.VarUI2FromI1(_In_ CHAR cIn,_Out_ USHORT *puiOut)
HRESULT None oleaut32.VarUI2FromI2(_In_ SHORT uiIn,_Out_ USHORT *puiOut)
HRESULT None oleaut32.VarUI2FromI4(_In_ LONG lIn,_Out_ USHORT *puiOut)
HRESULT None oleaut32.VarUI2FromI8(_In_ LONG64 i64In,_Out_ USHORT *puiOut)
HRESULT None oleaut32.VarUI2FromR4(_In_ FLOAT fltIn,_Out_ USHORT *puiOut)
HRESULT None oleaut32.VarUI2FromR8(_In_ DOUBLE dblIn,USHORT *puiOut None)
HRESULT None oleaut32.VarUI2FromStr(_In_ LPCOLESTR strIn,_In_ LCID lcid,_In_ ULONG dwFlags,_Out_ USHORT *puiOut)
HRESULT None oleaut32.VarUI2FromUI1(_In_ BYTE bIn,_Out_ USHORT *puiOut)
HRESULT None oleaut32.VarUI2FromUI4(_In_ ULONG ulIn,_Out_ USHORT *puiOut)
HRESULT None oleaut32.VarUI2FromUI8(_In_ ULONG64 i64In,_Out_ USHORT *puiOut)
HRESULT None oleaut32.VarUI4FromBool(_In_ VARIANT_BOOL boolIn,_Out_ ULONG *pulOut)
HRESULT None oleaut32.VarUI4FromCy(_In_ CY cyIn,_Out_ ULONG *pulOut)
HRESULT None oleaut32.VarUI4FromDate(_In_ DATE dateIn,_Out_ ULONG *pulOut)
HRESULT None oleaut32.VarUI4FromDisp(_In_ IDispatch *pdispIn,_In_ LCID lcid,_Out_ ULONG *pulOut)
HRESULT None oleaut32.VarUI4FromI1(_In_ CHAR cIn,_Out_ ULONG *pulOut)
HRESULT None oleaut32.VarUI4FromI2(_In_ SHORT uiIn,_Out_ ULONG *pulOut)
HRESULT None oleaut32.VarUI4FromI4(_In_ LONG lIn,_Out_ ULONG *pulOut)
HRESULT None oleaut32.VarUI4FromI8(_In_ LONG64 i64In,_Out_ ULONG *plOut)
HRESULT None oleaut32.VarUI4FromR4(_In_ FLOAT fltIn,_Out_ ULONG *pulOut)
HRESULT None oleaut32.VarUI4FromR8(_In_ DOUBLE dblIn,_Out_ ULONG *pulOut)
HRESULT None oleaut32.VarUI4FromStr(_In_ LPCOLESTR strIn,_In_ LCID lcid,_In_ ULONG dwFlags,_Out_ ULONG *pulOut)
HRESULT None oleaut32.VarUI4FromUI1(_In_ BYTE bIn,_Out_ ULONG *pulOut)
HRESULT None oleaut32.VarUI4FromUI2(_In_ USHORT uiIn,_Out_ ULONG *pulOut)
HRESULT None oleaut32.VarUI4FromUI8(_In_ ULONG64 ui64In,_Out_ ULONG *plOut)
HRESULT None oleaut32.VarUI8FromBool(_In_ VARIANT_BOOL boolIn,_Out_ ULONG64 *pi64Out)
HRESULT None oleaut32.VarUI8FromCy(_In_ CY cyIn,_Out_ ULONG64 *pi64Out)
HRESULT None oleaut32.VarUI8FromDate(_In_ DATE dateIn,_Out_ ULONG64 *pi64Out)
HRESULT None oleaut32.VarUI8FromDisp(_In_ IDispatch *pdispIn,_In_ LCID lcid,_Out_ ULONG64 *pi64Out)
HRESULT None oleaut32.VarUI8FromI1(_In_ CHAR cIn,_Out_ ULONG64 *pi64Out)
HRESULT None oleaut32.VarUI8FromI2(_In_ SHORT sIn,_Out_ ULONG64 *pi64Out)
HRESULT None oleaut32.VarUI8FromI8(_In_ LONG64 ui64In,_Out_ ULONG64 *pi64Out)
HRESULT None oleaut32.VarUI8FromR4(_In_ FLOAT fltIn,_Out_ ULONG64 *pi64Out)
HRESULT None oleaut32.VarUI8FromR8(_In_ DOUBLE dblIn,_Out_ ULONG64 *pi64Out)
HRESULT None oleaut32.VarUI8FromUI1(_In_ BYTE bIn,_Out_ ULONG64 *pi64Out)
HRESULT None oleaut32.VarUI8FromUI2(_In_ USHORT uiIn,_Out_ ULONG64 *pi64Out)
HRESULT None oleaut32.VarUI8FromUI4(_In_ ULONG ulIn,_Out_ ULONG64 *pi64Out)
HRESULT None oleaut32.VarXor(_In_ LPVARIANT pvarLeft,_In_ LPVARIANT pvarRight,_Out_ LPVARIANT pvarResult)
HRESULT None oleaut32.VectorFromBstr(_In_ BSTR bstr,_Out_ SAFEARRAY **ppsa)
HRESULT None pla.CreateSchedule([out] ISchedule **Schedule)
HRESULT None pla.get_DataCollectorSet([out] IDataCollectorSet **pGroup)
HRESULT None pla.get_Item(VARIANT vIndex None,IDataCollector **ppCollector None)
HRESULT None pla.get__NewEnum(IUnknown **ppEnum None)
HRESULT None pla.get_OutputLocation([out] BSTR *pPath)
HRESULT None pla.GetRegisteredProcesses([out] IValueMap **Processes)
HRESULT None pla.get_Xml([out] BSTR *Xml)
HRESULT None pla.put_Age(ULONG ulAge None)
HRESULT None pla.put_SendCabTo(BSTR bstrDestination None)
HRESULT None prntvpt.BindPTProviderThunk(_In_ LPTSTR pszPrinterName,_In_ INT maxVersion,_In_ INT prefVersion,_Out_ HPTPROVIDER *phProvider,_Out_ INT *usedVersion)
HRESULT None prntvpt.ConvertDevModeToPrintTicketThunk2(_In_ HPTPROVIDER hProvider,_In_ BYTE *pDevmode,_In_ ULONG cbSize,_In_ DWORD scope,_Out_ BYTE **ppPrintTicket,_Out_ INT *pcbPrintTicketLength)
HRESULT None prntvpt.GetPrintCapabilitiesThunk2(_In_ HPTPROVIDER hProvider,_In_ BYTE *pPrintTicket,_In_ INT cbPrintTicket,_Out_ BYTE **ppbPrintCapabilities,_Out_ INT *pcbPrintCapabilitiesLength,_Out_opt_ BSTR *pbstrErrorMessage)
HRESULT None prntvpt.MergeAndValidatePrintTicketThunk2(_In_ HPTPROVIDER hProvider,_In_ BYTE *pBasePrintTicket,_In_ INT basePrintTicketLength,_In_opt_ BYTE *pDeltaPrintTicket,_In_ INT deltaPrintTicketLength,_In_ DWORD scope,_Out_ BYTE **ppValidatedPrintTicket,_Out_ INT *pValidatedPrintTicketLength,_Out_opt_ BSTR *pbstrErrorMessage)
HRESULT None prntvpt.PTCloseProvider(_In_ HPTPROVIDER hProvider)
HRESULT None prntvpt.PTConvertDevModeToPrintTicket(_In_ HPTPROVIDER hProvider,ULONG cbDevmode None,_In_ PDEVMODE pDevmode,_In_ EPrintTicketScope scope,IStream *pPrintTicket None)
HRESULT None prntvpt.PTConvertPrintTicketToDevMode(_In_ HPTPROVIDER hProvider,_In_ IStream *pPrintTicket,EDefaultDevmodeType baseDevmodeType None,_In_ EPrintTicketScope scope,_Out_ ULONG *pcbDevmode,_Out_ PDEVMODE *ppDevmode,_Out_ BSTR *pbstrErrorMessage)
HRESULT None prntvpt.PTGetPrintCapabilities(_In_ HPTPROVIDER hProvider,_In_ IStream *pPrintTicket,IStream *pCapabilities None,_Out_ BSTR *pbstrErrorMessage)
HRESULT None prntvpt.PTMergeAndValidatePrintTicket(_In_ HPTPROVIDER hProvider,_In_ IStream *pBaseTicket,_In_ IStream *pDeltaTicket,_In_ EPrintTicketScope scope,IStream *pResultTicket None,_Out_ BSTR *pbstrErrorMessage)
HRESULT None prntvpt.PTOpenProviderEx(_In_ PCWSTR pszPrinterName,DWORD maxVersion None,DWORD prefVersion None,_Out_ HPTPROVIDER *phProvider,_Out_ DWORD *usedVersion)
HRESULT None prntvpt.PTReleaseMemory(_In_ PVOID pBuffer)
HRESULT None propsys.EnumeratePropertyDescriptions([in] PROPDESC_ENUMFILTER filterOn,[in] REFIID riid,[out] void **ppv)
HRESULT None propsys.InitPropVariantFromCLSID(_In_ REFCLSID clsid,_Out_ PROPVARIANT *ppropvar)
HRESULT None propsys.InitPropVariantFromGUIDAsString(_In_ REFGUID guid,_Out_ PROPVARIANT *ppropvar)
HRESULT None propsys.InitPropVariantFromPropVariantVectorElem(_In_ REFPROPVARIANT propvarIn,_In_ ULONG iElem,_Out_ PROPVARIANT *ppropvar)
HRESULT None propsys.InitPropVariantFromResource(_In_ HINSTANCE hinst,_In_ UINT id,_Out_ PROPVARIANT *ppropvar)
HRESULT None propsys.InitPropVariantFromStringAsVector(_In_ PCWSTR psz,_Out_ PROPVARIANT *ppropvar)
HRESULT None propsys.InitPropVariantFromStringVector(_In_ PCWSTR *prgsz,_In_ ULONG cElems,_Out_ PROPVARIANT *ppropvar)
HRESULT None propsys.InitPropVariantFromStrRet(_Inout_ STRRET *pstrret,_In_ PCUITEMID_CHILD pidl,_Out_ PROPVARIANT *ppropvar)
HRESULT None propsys.InitPropVariantFromUInt32(_In_ ULONG ulVal,_Out_ PROPVARIANT *ppropvar)
HRESULT None propsys.InitPropVariantVectorFromPropVariant(_In_ REFPROPVARIANT propvarSingle,_Out_ PROPVARIANT *ppropvarVector)
HRESULT None propsys.InitVariantFromGUIDAsString(_In_ REFGUID guid,_Out_ VARIANT *pvar)
HRESULT None propsys.InitVariantFromResource(_In_ HINSTANCE hinst,_In_ UINT id,_Out_ VARIANT *pvar)
HRESULT None propsys.InitVariantFromStringArray(_In_ PCWSTR *prgsz,_In_ ULONG cElems,_Out_ VARIANT *pvar)
HRESULT None propsys.InitVariantFromString(_In_ PCWSTR psz,_Out_ VARIANT *pvar)
HRESULT None propsys.InitVariantFromStrRet(_In_ STRRET *pstrret,_In_ PCUITEMID_CHILD pidl,_Out_ VARIANT *pvar)
HRESULT None propsys.InitVariantFromVariantArrayElem(_In_ REFVARIANT varIn,_In_ ULONG iElem,_Out_ VARIANT *pvar)
HRESULT None propsys.PropVariantChangeType(_Out_ PROPVARIANT *ppropvarDest,_In_ REFPROPVARIANT propvarSrc,_In_ PROPVAR_CHANGE_FLAGS flags,_In_ VARTYPE vt)
HRESULT None propsys.PropVariantGetBooleanElem(_In_ REFPROPVARIANT propvar,_In_ ULONG iElem,_Out_ BOOL *pfVal)
HRESULT None propsys.PropVariantGetDoubleElem(_In_ REFPROPVARIANT propvar,_In_ ULONG iElem,_Out_ DOUBLE *pnVal)
HRESULT None propsys.PropVariantGetFileTimeElem(_In_ REFPROPVARIANT propvar,_In_ ULONG iElem,_Out_ FILETIME *pftVal)
HRESULT None propsys.PropVariantGetInt16Elem(_In_ REFPROPVARIANT propvar,_In_ ULONG iElem,_Out_ SHORT *pnVal)
HRESULT None propsys.PropVariantGetInt32Elem(_In_ REFPROPVARIANT propvar,_In_ ULONG iElem,_Out_ LONG *pnVal)
HRESULT None propsys.PropVariantGetInt64Elem(_In_ REFPROPVARIANT propvar,_In_ ULONG iElem,_Out_ LONGLONG *pnVal)
HRESULT None propsys.PropVariantGetStringElem(_In_ REFPROPVARIANT propvar,_In_ ULONG iElem,_Out_ PWSTR *ppszVal)
HRESULT None propsys.PropVariantGetUInt16Elem(_In_ REFPROPVARIANT propvar,_In_ ULONG iElem,_Out_ USHORT *pnVal)
HRESULT None propsys.PropVariantGetUInt32Elem(_In_ REFPROPVARIANT propvar,_In_ ULONG iElem,_Out_ ULONG *pnVal)
HRESULT None propsys.PropVariantGetUInt64Elem(_In_ REFPROPVARIANT propvar,_In_ ULONG iElem,_Out_ ULONGLONG *pnVal)
HRESULT None propsys.PropVariantToBoolean(_In_ REFPROPVARIANT propvarIn,_Out_ BOOL *pfRet)
HRESULT None propsys.PropVariantToBooleanVectorAlloc(_In_ REFPROPVARIANT propvar,_Out_ BOOL **pprgf,_Out_ ULONG *pcElem)
HRESULT None propsys.PropVariantToBooleanVector(_In_ REFPROPVARIANT propvar,_Out_ BOOL *prgf,_In_ ULONG crgf,_Out_ ULONG *pcElem)
HRESULT None propsys.PropVariantToBSTR(_In_ REFPROPVARIANT propvar,_Out_ BSTR *pbstrOut)
HRESULT None propsys.PropVariantToBuffer(_In_ REFPROPVARIANT propvar,_Out_ VOID *pv,_In_ UINT cb)
HRESULT None propsys.PropVariantToDouble(_In_ REFPROPVARIANT propvarIn,_Out_ DOUBLE *pdblRet)
HRESULT None propsys.PropVariantToDoubleVectorAlloc(_In_ REFPROPVARIANT propvar,_Out_ DOUBLE **pprgn,_Out_ ULONG *pcElem)
HRESULT None propsys.PropVariantToDoubleVector(_In_ REFPROPVARIANT propvar,_Out_ DOUBLE *prgn,_In_ ULONG crgn,_Out_ ULONG *pcElem)
HRESULT None propsys.PropVariantToFileTime(_In_ REFPROPVARIANT propvar,_In_ PSTIME_FLAGS pstfOut,_Out_ FILETIME *pftOut)
HRESULT None propsys.PropVariantToFileTimeVectorAlloc(_In_ REFPROPVARIANT propvar,_Out_ FILETIME **pprgft,_Out_ ULONG *pcElem)
HRESULT None propsys.PropVariantToFileTimeVector(_In_ REFPROPVARIANT propvar,_Out_ FILETIME *prgft,_In_ ULONG crgft,_Out_ ULONG *pcElem)
HRESULT None propsys.PropVariantToGUID(_In_ REFPROPVARIANT propvarIn,_Out_ GUID *pguid)
HRESULT None propsys.PropVariantToInt16(_In_ REFPROPVARIANT propvarIn,_Out_ SHORT *piRet)
HRESULT None propsys.PropVariantToInt16VectorAlloc(_In_ REFPROPVARIANT propvar,_Out_ SHORT **pprgn,_Out_ ULONG *pcElem)
HRESULT None propsys.PropVariantToInt16Vector(_In_ REFPROPVARIANT propvar,_Out_ SHORT *prgn,_In_ ULONG crgn,_Out_ ULONG *pcElem)
HRESULT None propsys.PropVariantToInt32(_In_ REFPROPVARIANT propvarIn,_Out_ LONG *plRet)
HRESULT None propsys.PropVariantToInt32VectorAlloc(_In_ REFPROPVARIANT propvar,_Out_ LONG **pprgn,_Out_ ULONG *pcElem)
HRESULT None propsys.PropVariantToInt32Vector(_In_ REFPROPVARIANT propvar,_Out_ LONG *prgn,_In_ ULONG crgn,_Out_ ULONG *pcElem)
HRESULT None propsys.PropVariantToInt64(_In_ REFPROPVARIANT propvarIn,_Out_ LONGLONG *pllRet)
HRESULT None propsys.PropVariantToInt64VectorAlloc(_In_ REFPROPVARIANT propvar,_Out_ LONGLONG **pprgn,_Out_ ULONG *pcElem)
HRESULT None propsys.PropVariantToInt64Vector(_In_ REFPROPVARIANT propvar,_Out_ LONGLONG *prgn,_In_ ULONG crgn,_Out_ ULONG *pcElem)
HRESULT None propsys.PropVariantToStringAlloc(_In_ REFPROPVARIANT propvar,_Out_ PWSTR *ppszOut)
HRESULT None propsys.PropVariantToString(_In_ REFPROPVARIANT propvar,_Out_ PWSTR psz,_In_ UINT cch)
HRESULT None propsys.PropVariantToStringVectorAlloc(_In_ REFPROPVARIANT propvar,_Out_ PWSTR **pprgsz,_Out_ ULONG *pcElem)
HRESULT None propsys.PropVariantToStringVector(_In_ REFPROPVARIANT propvar,_Out_ PWSTR *prgsz,_In_ ULONG crgsz,_Out_ ULONG *pcElem)
HRESULT None propsys.PropVariantToStrRet(_In_ REFPROPVARIANT propvar,_Out_ STRRET *pstrret)
HRESULT None propsys.PropVariantToUInt16(_In_ REFPROPVARIANT propvarIn,_Out_ USHORT *puiRet)
HRESULT None propsys.PropVariantToUInt16VectorAlloc(_In_ REFPROPVARIANT propvar,_Out_ USHORT **pprgn,_Out_ ULONG *pcElem)
HRESULT None propsys.PropVariantToUInt16Vector(_In_ REFPROPVARIANT propvar,_Out_ USHORT *prgn,_In_ ULONG crgn,_Out_ ULONG *pcElem)
HRESULT None propsys.PropVariantToUInt32(_In_ REFPROPVARIANT propvarIn,_Out_ ULONG *pulRet)
HRESULT None propsys.PropVariantToUInt32VectorAlloc(_In_ REFPROPVARIANT propvar,_Out_ ULONG **pprgn,_Out_ ULONG *pcElem)
HRESULT None propsys.PropVariantToUInt32Vector(_In_ REFPROPVARIANT propvar,_Out_ ULONG *prgn,_In_ ULONG crgn,_Out_ ULONG *pcElem)
HRESULT None propsys.PropVariantToUInt64(_In_ REFPROPVARIANT propvarIn,_Out_ ULONGLONG *pullRet)
HRESULT None propsys.PropVariantToUInt64VectorAlloc(_In_ REFPROPVARIANT propvar,_Out_ ULONGLONG **pprgn,_Out_ ULONG *pcElem)
HRESULT None propsys.PropVariantToUInt64Vector(_In_ REFPROPVARIANT propvar,_Out_ ULONGLONG *prgn,_In_ ULONG crgn,_Out_ ULONG *pcElem)
HRESULT None propsys.PSCoerceToCanonicalValue(_In_ REFPROPERTYKEY key,_Inout_ PROPVARIANT *ppropvar)
HRESULT None propsys.PSCreateAdapterFromPropertyStore(_In_ IPropertyStore *pps,_In_ REFIID riid,_Out_ void **ppv)
HRESULT None propsys.PSCreateMemoryPropertyStore(_In_ REFIID riid,_Out_ void **ppv)
HRESULT None propsys.PSCreateMultiplexPropertyStore(_In_ IUnknown **prgpunkStores,_In_ DWORD cStores,_In_ REFIID riid,_Out_ void **ppv)
HRESULT None propsys.PSCreatePropertyStoreFromObject(_In_ IUnknown *punk,_In_ DWORD grfMode,_In_ REFIID riid,_Out_ void **ppv)
HRESULT None propsys.PSCreatePropertyStoreFromPropertySetStorage(_In_ IPropertySetStorage *ppss,_In_ DWORD grfMode,_In_ REFIID riid,_Out_ void **ppv)
HRESULT None propsys.PSCreateSimplePropertyChange(_In_ PKA_FLAGS flags,_In_ REFPROPERTYKEY key,_In_ REFPROPVARIANT propvar,_In_ REFIID riid,_Out_ void **ppv)
HRESULT None propsys.PSFormatForDisplayAlloc(_In_ REFPROPERTYKEY key,_In_ REFPROPVARIANT propvar,_In_ PROPDESC_FORMAT_FLAGS pdfFlags,_Out_ PWSTR *ppszDisplay)
HRESULT None propsys.PSFormatForDisplay(_In_ REFPROPERTYKEY propkey,_In_ REFPROPVARIANT propvar,_In_ PROPDESC_FORMAT_FLAGS pdfFlags,_Out_ LPWSTR pwszText,_In_ DWORD cchText)
HRESULT None propsys.PSFormatPropertyValue(_In_ IPropertyStore *pps,_In_ IPropertyDescription *ppd,_In_ PROPDESC_FORMAT_FLAGS pdff,_Out_ LPWSTR *ppszDisplay)
HRESULT None propsys.PSGetNameFromPropertyKey(_In_ REFPROPERTYKEY propkey,_Out_ PWSTR *ppszCanonicalName)
HRESULT None propsys.PSGetPropertyKeyFromName(_In_ PCWSTR pszName,_Out_ PROPERTYKEY *ppropkey)
HRESULT None propsys.PSGetPropertyValue(_In_ IPropertyStore *pps,_In_ IPropertyDescription *ppd,_Out_ PROPVARIANT *ppropvar)
HRESULT None propsys.PSPropertyBag_Delete(_In_ IPropertyBag *propBag,_In_ LPCWSTR propName)
HRESULT None propsys.PSPropertyBag_ReadBOOL(_In_ IPropertyBag *propBag,_In_ LPCWSTR propName,_Out_ BOOL *value)
HRESULT None propsys.PSPropertyBag_ReadBSTR(_In_ IPropertyBag *propBag,_In_ LPCWSTR propName,_Out_ BSTR *value)
HRESULT None propsys.PSPropertyBag_ReadInt(_In_ IPropertyBag *propBag,_In_ LPCWSTR propName,_Out_ int *value)
HRESULT None propsys.PSPropertyBag_ReadPOINTL(_In_ IPropertyBag *propBag,_In_ LPCWSTR propName,_Out_ POINTL *value)
HRESULT None propsys.PSPropertyBag_ReadPOINTS(_In_ IPropertyBag *propBag,_In_ LPCWSTR propName,_Out_ POINTS *value)
HRESULT None propsys.PSPropertyBag_ReadRECTL(_In_ IPropertyBag *propBag,_In_ LPCWSTR propName,_Out_ RECTL *value)
HRESULT None propsys.PSPropertyBag_ReadSHORT(_In_ IPropertyBag *propBag,_In_ LPCWSTR propName,_Out_ SHORT *value)
HRESULT None propsys.PSPropertyBag_ReadStrAlloc(_In_ IPropertyBag *propBag,_In_ LPCWSTR propName,_Out_ PWSTR *value)
HRESULT None propsys.PSPropertyBag_ReadStream(_In_ IPropertyBag *propBag,_In_ LPCWSTR propName,_Out_ IStream **value)
HRESULT None propsys.PSPropertyBag_ReadStr(_In_ IPropertyBag *propBag,_In_ LPCWSTR propName,_Out_ LPCWSTR value,_Out_ int characterCount)
HRESULT None propsys.PSPropertyBag_ReadType(_In_ IPropertyBag *propBag,_In_ LPCWSTR propName,_Out_ VARIANT *var,_Out_ VARTYPE *type)
HRESULT None propsys.PSPropertyBag_ReadULONGLONG(_In_ IPropertyBag *propBag,_In_ LPCWSTR propName,_Out_ ULONGLONG value)
HRESULT None propsys.PSPropertyBag_ReadUnknown(_In_ IPropertyBag *propBag,_In_ LPCWSTR propName,_In_ REFIID riid,_Out_ void **ppv)
HRESULT None propsys.PSPropertyBag_WriteBOOL(_In_ IPropertyBag *propBag,_In_ LPCWSTR propName,_In_ BOOL value)
HRESULT None propsys.PSPropertyBag_WriteBSTR(_In_ IPropertyBag *propBag,_In_ LPCWSTR propName,_In_ BSTR value)
HRESULT None propsys.PSPropertyBag_WriteDWORD(_In_ IPropertyBag *propBag,_In_ LPCWSTR propName,_In_ DWORD value)
HRESULT None propsys.PSPropertyBag_WriteInt(_In_ IPropertyBag *propBag,_In_ LPCWSTR propName,_In_ int value)
HRESULT None propsys.PSPropertyBag_WriteSHORT(_In_ IPropertyBag *propBag,_In_ LPCWSTR propName,_In_ SHORT value)
HRESULT None propsys.PSPropertyBag_WriteStream(_In_ IPropertyBag *propBag,_In_ LPCWSTR propName,_In_ IStream *value)
HRESULT None propsys.PSPropertyBag_WriteStr(_In_ IPropertyBag *propBag,_In_ LPCWSTR propName,_In_ LPCWSTR value)
HRESULT None propsys.PSPropertyBag_WriteULONGLONG(_In_ IPropertyBag *propBag,_In_ LPCWSTR propName,_In_ ULONGLONG value)
HRESULT None propsys.PSPropertyBag_WriteUnknown(_In_ IPropertyBag *propBag,_In_ LPCWSTR propName,_In_ IUnknown *punk)
HRESULT None propsys.PSPropertyKeyFromString(_In_ LPCWSTR pszString,_Out_ PROPERTYKEY *pkey)
HRESULT None propsys.PSRegisterPropertySchema(_In_ PCWSTR pszPath)
HRESULT None propsys.PSSetPropertyValue(_In_ IPropertyStore *pps,_In_ IPropertyDescription *ppd,_In_ REFPROPVARIANT propvar)
HRESULT None propsys.PSStringFromPropertyKey(_In_ REFPROPERTYKEY pkey,_Out_ LPWSTR psz,_In_ UINT cch)
HRESULT None propsys.PSUnregisterPropertySchema(_In_ PCWSTR pszPath)
HRESULT None propsys.VariantGetBooleanElem(_In_ REFVARIANT var,_In_ ULONG iElem,_Out_ BOOL *pfVal)
HRESULT None propsys.VariantGetDoubleElem(_In_ REFVARIANT var,_In_ ULONG iElem,_Out_ DOUBLE *pnVal)
HRESULT None propsys.VariantGetInt16Elem(_In_ REFVARIANT var,_In_ ULONG iElem,_Out_ SHORT *pnVal)
HRESULT None propsys.VariantGetInt32Elem(_In_ REFVARIANT var,_In_ ULONG iElem,_Out_ LONG *pnVal)
HRESULT None propsys.VariantGetInt64Elem(_In_ REFVARIANT var,_In_ ULONG iElem,_Out_ LONGLONG *pnVal)
HRESULT None propsys.VariantGetStringElem(_In_ REFVARIANT var,_In_ ULONG iElem,_Out_ PWSTR *ppszVal)
HRESULT None propsys.VariantGetUInt16Elem(_In_ REFVARIANT var,_In_ ULONG iElem,_Out_ USHORT *pnVal)
HRESULT None propsys.VariantGetUInt32Elem(_In_ REFVARIANT var,_In_ ULONG iElem,_Out_ ULONG *pnVal)
HRESULT None propsys.VariantGetUInt64Elem(_In_ REFVARIANT var,_In_ ULONG iElem,_Out_ ULONGLONG *pnVal)
HRESULT None propsys.VariantToBooleanArrayAlloc(_In_ REFVARIANT var,_Out_ BOOL **pprgf,_Out_ ULONG *pcElem)
HRESULT None propsys.VariantToBooleanArray(_In_ REFVARIANT var,_Out_ BOOL *prgf,_In_ ULONG crgn,_Out_ ULONG *pcElem)
HRESULT None propsys.VariantToBoolean(_In_ REFVARIANT varIn,_Out_ BOOL *pfRet)
HRESULT None propsys.VariantToBuffer(_In_ REFVARIANT varIn,_Out_ VOID *pv,_In_ UINT cb)
HRESULT None propsys.VariantToDosDateTime(_In_ REFVARIANT varIn,_Out_ WORD *pwDate,_Out_ WORD *pwTime)
HRESULT None propsys.VariantToDoubleArrayAlloc(_In_ REFVARIANT var,_Out_ DOUBLE **pprgn,_Out_ ULONG *pcElem)
HRESULT None propsys.VariantToDoubleArray(_In_ REFVARIANT var,_Out_ DOUBLE *prgn,_In_ ULONG crgn,_Out_ ULONG *pcElem)
HRESULT None propsys.VariantToDouble(_In_ REFVARIANT varIn,_Out_ DOUBLE *pdblRet)
HRESULT None propsys.VariantToFileTime(_In_ REFVARIANT varIn,_In_ PSTIME_FLAGS stfOut,_Out_ FILETIME *pftOut)
HRESULT None propsys.VariantToGUID(_In_ REFVARIANT varIn,_Out_ GUID *pguid)
HRESULT None propsys.VariantToInt16ArrayAlloc(_In_ REFVARIANT var,_Out_ SHORT **pprgn,_Out_ ULONG *pcElem)
HRESULT None propsys.VariantToInt16Array(_In_ REFVARIANT var,_Out_ SHORT *prgn,_In_ ULONG crgn,_Out_ ULONG *pcElem)
HRESULT None propsys.VariantToInt16(_In_ REFVARIANT varIn,_Out_ SHORT *piRet)
HRESULT None propsys.VariantToInt32ArrayAlloc(_In_ REFVARIANT var,_Out_ LONG **pprgn,_Out_ ULONG *pcElem)
HRESULT None propsys.VariantToInt32Array(_In_ REFVARIANT var,_Out_ LONG *prgn,_In_ ULONG crgn,_Out_ ULONG *pcElem)
HRESULT None propsys.VariantToInt32(_In_ REFVARIANT varIn,_Out_ LONG *plRet)
HRESULT None propsys.VariantToInt64ArrayAlloc(_In_ REFVARIANT var,_Out_ LONGLONG **pprgn,_Out_ ULONG *pcElem)
HRESULT None propsys.VariantToInt64Array(_In_ REFVARIANT var,_Out_ LONGLONG *prgn,_In_ ULONG crgn,_Out_ ULONG *pcElem)
HRESULT None propsys.VariantToInt64(_In_ REFVARIANT varIn,_Out_ LONGLONG *pllRet)
HRESULT None propsys.VariantToStringAlloc(_In_ REFVARIANT varIn,_Out_ PWSTR ppszBuf)
HRESULT None propsys.VariantToStringArrayAlloc(_In_ REFVARIANT var,_Out_ PWSTR **pprgsz,_In_ ULONG crgsz,_Out_ ULONG *pcElem)
HRESULT None propsys.VariantToStringArray(_In_ REFVARIANT var,_Out_ PWSTR *prgsz,_In_ ULONG crgsz,_Out_ ULONG *pcElem)
HRESULT None propsys.VariantToString(_In_ REFVARIANT varIn,_Out_ PWSTR pszBuf,_In_ UINT cchBuf)
HRESULT None propsys.VariantToStrRet(_In_ REFVARIANT varIn,_Out_ STRRET *pstrret)
HRESULT None propsys.VariantToUInt16ArrayAlloc(_In_ REFVARIANT var,_Out_ USHORT **pprgn,_Out_ ULONG *pcElem)
HRESULT None propsys.VariantToUInt16Array(_In_ REFVARIANT var,_Out_ USHORT *prgn,_In_ ULONG crgn,_Out_ ULONG *pcElem)
HRESULT None propsys.VariantToUInt16(_In_ REFVARIANT varIn,_Out_ USHORT *puiRet)
HRESULT None propsys.VariantToUInt32ArrayAlloc(_In_ REFVARIANT var,_Out_ ULONG **pprgn,_Out_ ULONG *pcElem)
HRESULT None propsys.VariantToUInt32Array(_In_ REFVARIANT var,_Out_ ULONG *prgn,_In_ ULONG crgn,_Out_ ULONG *pcElem)
HRESULT None propsys.VariantToUInt32(_In_ REFVARIANT varIn,_Out_ ULONG *pulRet)
HRESULT None propsys.VariantToUInt64ArrayAlloc(_In_ REFVARIANT var,_Out_ ULONGLONG **pprgn,_Out_ ULONG *pcElem)
HRESULT None propsys.VariantToUInt64Array(_In_ REFVARIANT var,_Out_ ULONGLONG *prgn,_In_ ULONG crgn,_Out_ ULONG *pcElem)
HRESULT None propsys.VariantToUInt64(_In_ REFVARIANT varIn,_Out_ ULONGLONG *pullRet)
HRESULT None propsys.WinRTPropertyValueToPropVariant(_In_opt_ IUnknown *propertyValue,_Out_ PROPVARIANT *convertedValue)
HRESULT None qmgrprxy.Clone([out] IEnumBackgroundCopyFiles **ppEnumFiles)
HRESULT None qmgrprxy.Clone([out] IEnumBackgroundCopyJobs **ppEnumJobs)
HRESULT None qmgrprxy.EnumFiles([out] IEnumBackgroundCopyFiles **ppEnumFiles)
HRESULT None qmgrprxy.GetCount([out] ULONG *pCount)
HRESULT None qmgrprxy.GetDescription([out] LPWSTR *ppDescription)
HRESULT None qmgrprxy.GetDisplayName([out] LPWSTR *ppDisplayName)
HRESULT None qmgrprxy.GetErrorCount([out] ULONG *pErrors)
HRESULT None qmgrprxy.GetError([out] BG_ERROR_CONTEXT *pContext,[out] HRESULT *pErrorCode)
HRESULT None qmgrprxy.GetError([out] IBackgroundCopyError **ppError)
HRESULT None qmgrprxy.GetId([out] GUID *pJobID)
HRESULT None qmgrprxy.GetLocalName([out] LPWSTR *ppName)
HRESULT None qmgrprxy.GetNotifyFlags([out] ULONG *pNotifyFlags)
HRESULT None qmgrprxy.GetNotifyInterface([out] IUnknown **ppNotifyInterface)
HRESULT None qmgrprxy.GetOwner([out] LPWSTR *ppOwner)
HRESULT None qmgrprxy.GetPriority([out] BG_JOB_PRIORITY *pPriority)
HRESULT None qmgrprxy.GetProgress([out] BG_FILE_PROGRESS *pProgress)
HRESULT None qmgrprxy.GetProgress([out] BG_JOB_PROGRESS *pProgress)
HRESULT None qmgrprxy.GetProtocol([out] LPWSTR *ppProtocol)
HRESULT None qmgrprxy.GetProxySettings([out] BG_JOB_PROXY_USAGE *pProxyUsage,[out] LPWSTR *ppProxyList,[out] LPWSTR *ppProxyBypassList)
HRESULT None qmgrprxy.GetRemoteName([out] LPWSTR *ppName)
HRESULT None qmgrprxy.GetState([out] BG_JOB_STATE *pJobState)
HRESULT None qmgrprxy.GetTimes([out] BG_JOB_TIMES *pTimes)
HRESULT None qmgrprxy.GetType([out] BG_JOB_TYPE *pJobType)
HRESULT None qmgrprxy.SetNotifyInterface(IUnknown *pNotifyInterface None)
HRESULT None quartz.ParentalLevelSelect(ULONG ulParentalLevel None)
HRESULT None rdpencom.get_Attendees([out] IRDPSRAPIAttendeeManager **ppVal)
HRESULT None rdpencom.get_ConnectivityInfo([out] IUnknown **ppVal)
HRESULT None rdpencom.get_FrameBuffer([out None None,retval] IRDPSRAPIFrameBuffer **ppVal)
HRESULT None rdpencom.get_Properties([out] IRDPSRAPISessionProperties **ppVal)
HRESULT None rdpencom.Initialize([out] __int64* pnPeriodInHundredNsIntervals)
HRESULT None rdpencom.SendMouseWheelEvent(UINT16 wheelRotation None)
HRESULT None rend.Bind([in] BSTR pDomainName,[in] BSTR pUserName,[in] BSTR pPassword,[in] long lFlags)
HRESULT None rend.Clone([out] IEnumDirectory **ppEnum)
HRESULT None rend.Connect([in] VARIANT_BOOL fSecure)
HRESULT None rend.CreateDirectoryObject([in] DIRECTORY_OBJECT_TYPE DirectoryObjectType,[in] BSTR pName,[out] ITDirectoryObject **ppDirectoryObject)
HRESULT None rend.DeleteDirectoryObject([in] ITDirectoryObject *pDirectoryObject)
HRESULT None rend.EnableAutoRefresh([in] VARIANT_BOOL fEnable)
HRESULT None rend.EnumerateDefaultDirectories([out] IEnumDirectory **ppEnumDirectory)
HRESULT None rend.EnumerateDirectoryObjects([in] DIRECTORY_OBJECT_TYPE DirectoryObjectType,[in] BSTR pName,[out] IEnumDirectoryObject **ppEnumObject)
HRESULT None rend.get_AdvertisingScope([out] RND_ADVERTISING_SCOPE *pAdvertisingScope)
HRESULT None rend.get_DefaultDirectories([out] VARIANT *pVariant)
HRESULT None rend.get_DefaultObjectTTL([out] long *pTTL)
HRESULT None rend.get_Description([out] BSTR *ppDescription)
HRESULT None rend.get_DirectoryObjects([in] DIRECTORY_OBJECT_TYPE DirectoryObjectType,[in] BSTR pName,[out] VARIANT *pVariant)
HRESULT None rend.get_DirectoryType([out] DIRECTORY_TYPE *pDirectoryType)
HRESULT None rend.get_DisplayName([out] BSTR *pName)
HRESULT None rend.get_IPPhonePrimary([out] BSTR *ppName)
HRESULT None rend.get_IsDynamic([out] VARIANT_BOOL *pfDynamic)
HRESULT None rend.get_IsEncrypted([out] VARIANT_BOOL *pfEncrypted)
HRESULT None rend.get_Originator([out] BSTR *ppOriginator)
HRESULT None rend.get_Protocol([out] BSTR *ppProtocol)
HRESULT None rend.get_StartTime([out] DATE *pDate)
HRESULT None rend.get_Url([out] BSTR *ppUrl)
HRESULT None rend.ModifyDirectoryObject([in] ITDirectoryObject *pDirectoryObject)
HRESULT None rend.put_AdvertisingScope([in] RND_ADVERTISING_SCOPE AdvertisingScope)
HRESULT None rend.put_DefaultObjectTTL([in] long TTL)
HRESULT None rend.put_Description([in] BSTR pDescription)
HRESULT None rend.put_IPPhonePrimary([in] BSTR pName)
HRESULT None rend.put_IsEncrypted([in] VARIANT_BOOL fEncrypted)
HRESULT None rend.put_Originator([in] BSTR pOriginator)
HRESULT None rend.put_StopTime([in] DATE Date)
HRESULT None rend.put_Url([in] BSTR pUrl)
HRESULT None rend.RefreshDirectoryObject([in] ITDirectoryObject *pDirectoryObject)
HRESULT None rtworkq.RtwqAddPeriodicCallback(_In_ RTWQPERIODICCALLBACK Callback,IUnknown *context None,_Out_opt_ DWORD *key)
HRESULT None rtworkq.RtwqAllocateSerialWorkQueue(_In_ DWORD workQueueIdIn,_Out_ DWORD *workQueueIdOut)
HRESULT None rtworkq.RtwqAllocateWorkQueue(_In_ RTWQ_WORKQUEUE_TYPE WorkQueueType,_Out_ DWORD *workQueueId)
HRESULT None rtworkq.RtwqBeginRegisterWorkQueueWithMMCSS(_In_ DWORD workQueueId,_In_ PCWSTR usageClass,_In_ DWORD dwTaskId,_In_ LONG lPriority,_In_ IRtwqAsyncCallback *doneCallback,_In_ IUnknown *doneState)
HRESULT None rtworkq.RtwqBeginUnregisterWorkQueueWithMMCSS(_In_ DWORD workQueueId,_In_ IRtwqAsyncCallback *doneCallback,_In_ IUnknown *doneState)
HRESULT None rtworkq.RtwqCancelWorkItem(_In_ RTWQWORKITEM_KEY Key)
HRESULT None rtworkq.RtwqCreateAsyncResult(_In_ IUnknown *appObject,_In_ IRtwqAsyncCallback *callback,_In_ IUnknown *appState,_Out_ IRtwqAsyncResult **asyncResult)
HRESULT None rtworkq.RtwqEndRegisterWorkQueueWithMMCSS(_In_ IRtwqAsyncResult *result,_Out_ DWORD *taskId)
HRESULT None rtworkq.RtwqGetWorkQueueMMCSSClass(_In_ DWORD workQueueId,_Out_ LPWSTR usageClass,_Inout_ DWORD *usageClassLength)
HRESULT None rtworkq.RtwqGetWorkQueueMMCSSPriority(_In_ DWORD workQueueId,_Out_ LONG *priority)
HRESULT None rtworkq.RtwqGetWorkQueueMMCSSTaskId(_In_ DWORD workQueueId,_Out_ DWORD *taskId)
HRESULT None rtworkq.RtwqInvokeCallback(IRtwqAsyncResult *result None)
HRESULT None rtworkq.RtwqLockSharedWorkQueue(_In_ PCWSTR usageClass,_In_ LONG basePriority,_Inout_ DWORD *taskId,_Out_ DWORD *pID)
HRESULT None rtworkq.RtwqLockWorkQueue(_In_ DWORD workQueueId)
HRESULT None rtworkq.RtwqPutWorkItem(_In_ DWORD dwQueue,_In_ LONG lPriority,_In_ IRtwqAsyncResult *result)
HRESULT None rtworkq.RtwqRegisterPlatformEvents(_In_ IRtwqPlatformEvents *platformEvents)
HRESULT None rtworkq.RtwqRegisterPlatformWithMMCSS(_In_ PCWSTR usageClass,_Inout_ DWORD *taskId,_In_ LONG lPriority)
HRESULT None rtworkq.RtwqRemovePeriodicCallback(_In_ DWORD dwKey)
HRESULT None rtworkq.RtwqUnjoinWorkQueue(_In_ DWORD workQueueId,_In_ HANDLE hFile)
HRESULT None rtworkq.RtwqUnregisterPlatformEvents(IRtwqPlatformEvents platformEvents None)
HRESULT None scardssp.get_AlternateClassId([out] BYTE *pbyClass)
HRESULT None scardssp.get_ApduLength([out] LONG *plSize)
HRESULT None scardssp.get_Apdu([out] LPBYTEBUFFER *ppApdu)
HRESULT None scardssp.get_ApduReplyLength([out] LONG *plSize)
HRESULT None scardssp.get_ApduReply([out] LPBYTEBUFFER *ppReplyApdu)
HRESULT None scardssp.get_ClassId([out] BYTE *pbyClass)
HRESULT None scardssp.get_Data([out] LPBYTEBUFFER *ppData)
HRESULT None scardssp.get_InstructionId([out] BYTE *pbyIns)
HRESULT None scardssp.get_LeField([out] LONG *plSize)
HRESULT None scardssp.get_P1([out] BYTE *pbyP1)
HRESULT None scardssp.get_P2([out] BYTE *pbyP2)
HRESULT None scardssp.get_P3([out] BYTE *pbyP3)
HRESULT None scardssp.get_ReplyNad([out] BYTE *pbNad)
HRESULT None scardssp.get_ReplyStatus([out] LPWORD pwStatus)
HRESULT None scardssp.get_ReplyStatusSW1([out] LPBYTE pbySW1)
HRESULT None scardssp.get_ReplyStatusSW2([out] LPBYTE pbySW2)
HRESULT None scrdenrl.enroll(LONG dwFlags None)
HRESULT None scrdenrl.put_CSPName(BSTR newVal None)
HRESULT None sdpblb.Clone([out] IEnumMedia **ppEnum)
HRESULT None sdpblb.Clone([out] IEnumTime **ppEnum)
HRESULT None sdpblb.Create([in] LONG Index,[out] ITMedia **ppMedia)
HRESULT None sdpblb.Delete([in] LONG Index)
HRESULT None sdpblb.get_ConferenceBlob([out] BSTR *ppBlob)
HRESULT None sdpblb.get_Count([out] LONG *pVal)
HRESULT None sdpblb.get_Description([out] BSTR *ppDescription)
HRESULT None sdpblb.GetEmailNames([out] VARIANT *pAddresses,[out] VARIANT *pNames)
HRESULT None sdpblb.get_EnumerationIf([out] IEnumMedia **pVal)
HRESULT None sdpblb.get_FormatCodes([out] VARIANT *pVal)
HRESULT None sdpblb.get_IsValid([out] VARIANT_BOOL *pfIsValid)
HRESULT None sdpblb.get_Item([in] LONG Index,[out] ITMedia **pVal)
HRESULT None sdpblb.get_MachineAddress([out] BSTR *ppMachineAddress)
HRESULT None sdpblb.get_MediaCollection([out] ITMediaCollection **ppMediaCollection)
HRESULT None sdpblb.get_MediaTitle([out] BSTR *ppMediaTitle)
HRESULT None sdpblb.get_Name([out] BSTR *ppName)
HRESULT None sdpblb.get__NewEnum([out] IUnknown **pVal)
HRESULT None sdpblb.get_Originator([out] BSTR *ppOriginator)
HRESULT None sdpblb.GetPhoneNumbers([out] VARIANT *pNumbers,[out] VARIANT *pNames)
HRESULT None sdpblb.get_SessionId([out] DOUBLE *pSessionId)
HRESULT None sdpblb.get_SessionVersion([out] DOUBLE *pSessionVersion)
HRESULT None sdpblb.get_StartPort([out] LONG *pStartPort)
HRESULT None sdpblb.get_TimeCollection([out] ITTimeCollection **ppTimeCollection)
HRESULT None sdpblb.get_TransportProtocol([out] BSTR *ppProtocol)
HRESULT None sdpblb.get_Url([out] BSTR *ppUrl)
HRESULT None sdpblb.Init([in] BSTR pName,[in] BLOB_CHARACTER_SET CharacterSet,[in] BSTR pBlob)
HRESULT None sdpblb.Next([in] ULONG celt,[out] ITMedia **pVal,[out] ULONG *pceltFetched)
HRESULT None sdpblb.Next([in] ULONG celt,[out] ITTime **pVal,[out] ULONG *pceltFetched)
HRESULT None sdpblb.put_Description([in] BSTR pDescription)
HRESULT None sdpblb.put_FormatCodes([in] VARIANT NewVal)
HRESULT None sdpblb.put_MachineAddress([in] BSTR pMachineAddress)
HRESULT None sdpblb.put_MediaName([in] BSTR pMediaName)
HRESULT None sdpblb.put_MediaTitle([in] BSTR pMediaTitle)
HRESULT None sdpblb.put_Name([in] BSTR pName)
HRESULT None sdpblb.put_Originator([in] BSTR pOriginator)
HRESULT None sdpblb.put_SessionVersion([in] DOUBLE SessionVersion)
HRESULT None sdpblb.put_TransportProtocol([in] BSTR pProtocol)
HRESULT None sdpblb.put_Url([in] BSTR pUrl)
HRESULT None sdpblb.SetConferenceBlob([in] BLOB_CHARACTER_SET CharacterSet,[in] BSTR pBlob)
HRESULT None sdpblb.SetEmailNames([in] VARIANT Addresses,[in] VARIANT Names)
HRESULT None sdpblb.SetEncryptionKey([in] BSTR pKeyType,[in] BSTR *ppKeyData)
HRESULT None sdpblb.SetPhoneNumbers([in] VARIANT Numbers,[in] VARIANT Names)
HRESULT None sdpblb.SetPortInfo([in] LONG StartPort,[in] LONG NumPorts)
HRESULT None sdpblb.Skip([in] ULONG celt)
HRESULT None sensorsapi.ConnectToLogicalSensor(PCWSTR* wszHardwareID None,GUID guidLogicalID None)
HRESULT None sensorsapi.GetEventInterest([out] GUID **ppValues,[out] ULONG *pCount)
HRESULT None sensorsapi.GetID([out] SENSOR_ID *pID)
HRESULT None sensorsapi.GetSupportedDataFields([out] IPortableDeviceKeyCollection **ppDataFields)
HRESULT None sensorsapi.UninstallLogicalSensor(REFGUID guidLogicalID None)
HRESULT None shdocvw._NewEnum([out None None,retval] IUnknown **ppunk)
HRESULT None shdocvw.RegisterPending([in] VARIANT *pvarloc,[in] VARIANT *pvarlocRoot,[in] int swClass,[out] long *plCookie)
HRESULT None shell32.AddBand([in] IUnknown* punk)
HRESULT None shell32.AddPages([in] LPFNADDPROPSHEETPAGE pfnAddPage,[in] LPARAM lParam)
HRESULT None shell32.AddTab(HWND hwnd None)
HRESULT None shell32.AssocGetDetailsOfPropKey(_In_ IShellFolder *psf,_In_ PCUITEMID_CHILD pidl,_In_ PROPERTYKEY *pkey,_Out_ VARIANT *pv,_Out_ BOOL *pfFoundPropKey)
HRESULT None shell32.BindToHandler(IBindCtx *pbc None,REFGUID rbhid None,REFIID riid None,void **ppvOut None)
HRESULT None shell32.BindToObject([in] PCUIDLIST_RELATIVE pidl,[in] IBindCtx *pbc,[in] REFIID riid,[out] void **ppvOut)
HRESULT None shell32.BindToStorage([in] PCUIDLIST_RELATIVE pidl,[in] IBindCtx *pbc,[in] REFIID riid,[out] void **ppvOut)
HRESULT None shell32.BrowseObject(PCUIDLIST_RELATIVE pidl None,UINT wFlags None)
HRESULT None shell32.CallbackSM([in None None,out] LPSMDATA psmd,UINT uMsg None,WPARAM wParam None,LPARAM lParam None)
HRESULT None shell32.CanRenderComposited([out] BOOL *pfCanRenderComposited)
HRESULT None shell32.CIDLData_CreateFromIDArray(_In_ PCIDLIST_ABSOLUTE pidlFolder,_In_ UINT cidl,_In_ PCUIDLIST_RELATIVE_ARRAY apidl,_Out_ IDataObject **ppdtobj)
HRESULT None shell32.Clone(IEnumExtraSearch **ppEnum None)
HRESULT None shell32.Clone(IEnumIDList **ppenum None)
HRESULT None shell32.ColumnClick(UINT iColumn None)
HRESULT None shell32.CompareCategory(CATSORT_FLAGS csfFlags None,DWORD dwCategoryId1 None,DWORD dwCategoryId2 None)
HRESULT None shell32.CompareIDs([in] LPARAM lParam,[in] PCUIDLIST_RELATIVE pidl1,[in] PCUIDLIST_RELATIVE pidl2)
HRESULT None shell32.CompareIDs(LPARAM lParam None,PCUIDLIST_RELATIVE pidl1 None,PCUIDLIST_RELATIVE pidl2 None)
HRESULT None shell32.CountTasks([in] REFTASKOWNERID rtoid)
HRESULT None shell32.CreateViewObject([in] HWND hwndOwner,[in] REFIID riid,[out] void **ppv)
HRESULT None shell32.CreateViewWindow2(LPSV2CVW2_PARAMS lpParams None)
HRESULT None shell32.CreateViewWindow([in] IShellView *psvPrevious,[in] LPCFOLDERSETTINGS pfs,[in] IShellBrowser *psb,[in] RECT *prcView,[out] HWND *phWnd)
HRESULT None shell32.DeleteTab(HWND hwnd None)
HRESULT None shell32.Enable([in] BOOL fEnable)
HRESULT None shell32.EnableModelessSB(BOOL fEnable None)
HRESULT None shell32.EnumObjects([in] HWND hwndOwner,[in] SHCONTF grfFlags,[out] IEnumIDList **ppenumIDList)
HRESULT None shell32.EnumSearches(IEnumExtraSearch **ppEnum None)
HRESULT None shell32.Extract([in] PCTSTR pszFile,UINT nIconIndex None,[out None None,optional] HICON *phiconLarge,[out None None,optional] HICON *phiconSmall,UINT nIconSize None)
HRESULT None shell32.GetAppInfo([out] APPINFODATA *pInfo)
HRESULT None shell32.GetArguments([out] LPTSTR pszArgs,[in] int cchMaxPath)
HRESULT None shell32.GetAsyncMode([out] BOOL *pfIsOpAsync)
HRESULT None shell32.GetAttributesOf([in] UINT cidl,[in] PCUITEMID_CHILD_ARRAY *apidl,[in None None,out] SFGAOF *rgfInOut)
HRESULT None shell32.GetCachedSlowAppInfo([out] PSLOWAPPINFO psaid)
HRESULT None shell32.GetCategory([out] KF_CATEGORY *pCategory)
HRESULT None shell32.GetCheckState([out] BOOL *pbCheck)
HRESULT None shell32.GetColumnInfo(DWORD dwIndex None,[out] SHCOLUMNINFO *psci)
HRESULT None shell32.GetColumnInfo([in] REFPROPERTYKEY propkey,[in None None,out] CM_COLUMNINFO *pcmci)
HRESULT None shell32.GetCommandString(UINT_PTR idCmd None,UINT uFlags None,UINT *pwReserved None,LPSTR pszName None,UINT cchMax None)
HRESULT None shell32.GetCompositionState([out] BOOL *pfCompositionEnabled)
HRESULT None shell32.GetControlWindow(UINT id None,HWND *lphwnd None)
HRESULT None shell32.GetCurFolder(LPITEMIDLIST *ppidl None)
HRESULT None shell32.GetCurrentInfo(LPFOLDERSETTINGS lpfs None)
HRESULT None shell32.GetCurrentPage([out] ULONG *pnPage)
HRESULT None shell32.GetCurrentProcessExplicitAppUserModelID(_Out_ PWSTR *AppID)
HRESULT None shell32.GetCurrentViewMode([out] UINT *pViewMode)
HRESULT None shell32.GetData([in] ASSOCF flags,[in] ASSOCDATA data,[in None None,optional] LPCWSTR pwszExtra,[out None None,optional] void *pvOut,[in None None,out None None,optional] DWORD *pcbOut)
HRESULT None shell32.GetDefaultColumn([in] DWORD dwReserved,[out] ULONG *pSort,[out] ULONG *pDisplay)
HRESULT None shell32.GetDefaultColumnState([in] UINT iColumn,[out] SHCOLSTATEF *pcsFlags)
HRESULT None shell32.GetDefaultSpacing([out] POINT *ppt)
HRESULT None shell32.GetDelay([out] DWORD *pdwDelay)
HRESULT None shell32.GetDescription(LPTSTR pszName None,int cchMaxName None)
HRESULT None shell32.GetDetailsOf([in] PCUITEMID_CHILD pidl,[in] UINT iColumn,[out] SHELLDETAILS *psd)
HRESULT None shell32.GetDisplayName([in] SIGDN sigdnName,[out] LPWSTR *ppszName)
HRESULT None shell32.GetDisplayNameOf([in] PCUITEMID_CHILD pidl,[in] SHGDNF uFlags,[out] STRRET *pName)
HRESULT None shell32.GetEntry([in] PCWSTR pszName,DWORD dwMode None,[out] HBITMAP *phImage)
HRESULT None shell32.GetFlags([out] DWORD *pdwFlags)
HRESULT None shell32.GetFolder([in] REFKNOWNFOLDERID rfid,[out] IKnownFolder **ppkf)
HRESULT None shell32.GetHotkey(WORD *pwHotkey None)
HRESULT None shell32.GetIconLocation(LPTSTR pszIconPath None,int cchIconPath None,int *piIcon None)
HRESULT None shell32.GetIDList([out] PIDLIST_ABSOLUTE *ppidl)
HRESULT None shell32.GetId([out] KNOWNFOLDERID *pkfid)
HRESULT None shell32.GetItemObject(UINT uItem None,REFIID riid None,LPVOID *ppv None)
HRESULT None shell32.GetOptions([out] DWORD *pdwFlag)
HRESULT None shell32.GetPageCount([out] ULONG *pcPages)
HRESULT None shell32.GetParent(IShellItem **ppsi None)
HRESULT None shell32.GetPath([out] LPTSTR pszFile,[in] int cchMaxPath,[in None None,out] WIN32_FIND_DATA *pfd,[in] DWORD fFlags)
HRESULT None shell32.GetPixelFormat([out] PixelFormat *pFormat)
HRESULT None shell32.GetPossibleActions([out] DWORD *pdwActions)
HRESULT None shell32.GetPreviousPage([out] HPROPSHEETPAGE *phPage)
HRESULT None shell32.GetRawDataFormat([out] GUID *pDataFormat)
HRESULT None shell32.GetResolution([out] ULONG *puResolutionX,[out] ULONG *puResolutionY)
HRESULT None shell32.GetShowCmd(int *piShowCmd None)
HRESULT None shell32.GetSize([out] SIZE *pSize)
HRESULT None shell32.GetSlowAppInfo([out] PSLOWAPPINFO psaid)
HRESULT None shell32.GetWorkingDirectory(LPTSTR pszDir None,int cchMaxPath None)
HRESULT None shell32.HandleMenuMsg(UINT uMsg None,WPARAM wParam None,LPARAM lParam None)
HRESULT None shell32.ILLoadFromStreamEx(_In_ IStream *pstm,_Out_ PIDLIST_RELATIVE *pidl)
HRESULT None shell32.ILLoadFromStream(_In_ IStream *pstm,_Out_ PIDLIST_RELATIVE *pidl)
HRESULT None shell32.Initialize([in] PCIDLIST_ABSOLUTE pidlFolder,[in] IDataObject *pdtobj,[in] HKEY hkeyProgID)
HRESULT None shell32.Initialize(LPCITEMIDLIST pidl None)
HRESULT None shell32.Initialize(LPCWSTR pszMachine None,BOOL bEnumerating None)
HRESULT None shell32.Init([in] HWND hwndEdit,[in] IUnknown *punkACL,[in None None,optional] LPCWSTR pwszRegKeyPath,[in None None,optional] LPCWSTR pwszQuickComplete)
HRESULT None shell32.InOperation([out] BOOL *pfInAsyncOp)
HRESULT None shell32.InsertMenusSB(HMENU hmenuShared None,LPOLEMENUGROUPWIDTHS lpMenuWidths None)
HRESULT None shell32.InvokeCommand(LPCMINVOKECOMMANDINFO pici None)
HRESULT None shell32.MapColumnToSCID([in] UINT iColumn,[out] SHCOLUMNID *pscid)
HRESULT None shell32.MessageSFVCB([in] UINT uMsg,WPARAM wParam None,LPARAM lParam None)
HRESULT None shell32.OnViewWindowActive(IShellView *ppshv None)
HRESULT None shell32.ParseDisplayName([in] HWND hwnd,[in] IBindCtx *pbc,[in] LPWSTR pszDisplayName,[out] ULONG *pchEaten,[out] PIDLIST_RELATIVE *ppidl,[in None None,out] ULONG *pdwAttributes)
HRESULT None shell32.QueryActiveShellView(IShellView **ppshv None)
HRESULT None shell32.QueryContextMenu(HMENU hmenu None,UINT indexMenu None,UINT idCmdFirst None,UINT idCmdLast None,UINT uFlags None)
HRESULT None shell32.RemoveMenusSB(HMENU hmenuShared None)
HRESULT None shell32.ReplacePage(UINT uPageID None,[in] LPFNADDPROPSHEETPAGE pfnReplacePage,[in] LPARAM lParam)
HRESULT None shell32.Resolve(HWND hwnd None,DWORD fFlags None)
HRESULT None shell32.SelectAndPositionItem(PCUITEMID_CHILD pidlItem None,UINT uFlags None,POINT *point None)
HRESULT None shell32.SelectItem(PCUITEMID_CHILD pidlItem None,UINT uFlags None)
HRESULT None shell32.SendControlMsg(UINT id None,UINT uMsg None,WPARAM wParam None,LPARAM lParam None,LRESULT *pret None)
HRESULT None shell32.SetAppID([in] LPCWSTR pszAppID)
HRESULT None shell32.SetArguments([in] LPCTSTR pszArgs)
HRESULT None shell32.SetBandSiteInfo([in] BANDSITEINFO *pbsinfo)
HRESULT None shell32.SetBorderSpaceDW([in] IUnknown *punkObj,[in] LPCBORDERWIDTHS pbw)
HRESULT None shell32.SetCurrentProcessExplicitAppUserModelID(_In_ PCWSTR AppID)
HRESULT None shell32.SetDescription(LPCTSTR pszName None)
HRESULT None shell32.SetHotkey(WORD wHotkey None)
HRESULT None shell32.SetIconInfo([in] HICON hIcon,[in] LPCWSTR pszToolTip)
HRESULT None shell32.SetIconLocation(LPCTSTR pszIconPath None,int iIcon None)
HRESULT None shell32.SetIDList([in] PCIDLIST_ABSOLUTE pidl)
HRESULT None shell32.SetNameOf([in] HWND hwndOwner,[in] PCUITEMID_CHILD pidl,[in] LPCWSTR pszName,[in] SHGDNF uFlags,[out] PITEMID_CHILD *ppidlOut)
HRESULT None shell32.SetNoIcons(BOOL fNoIcons None)
HRESULT None shell32.SetOptions([in] DWORD dwFlag)
HRESULT None shell32.SetPath([in] DWORD dwFlags,[in] LPCWSTR pszPath)
HRESULT None shell32.SetPath(LPCTSTR pszFile None)
HRESULT None shell32.SetProgress64([in] ULONGLONG ullCompleted,[in] ULONGLONG ullTotal)
HRESULT None shell32.SetRelativePath(LPCTSTR pszPathRel None,DWORD dwReserved None)
HRESULT None shell32.SetShowCmd(int iShowCmd None)
HRESULT None shell32.SetToolbarItems(LPTBBUTTONSB lpButtons None,UINT nButtons None,UINT uFlags None)
HRESULT None shell32.SetWorkingDirectory(LPCTSTR pszDir None)
HRESULT None shell32.SHAddDefaultPropertiesByExt(_In_ PCWSTR pszExt,_In_ IPropertyStore *pPropStore)
HRESULT None shell32.SHAssocEnumHandlersForProtocolByApplication(_In_ PCWSTR protocol,_In_ REFIID riid,_Out_ void **enumHandlers)
HRESULT None shell32.SHAssocEnumHandlers(_In_ PCWSTR pszExtra,_In_ ASSOC_FILTER afFilter,_Out_ IEnumAssocHandlers **ppEnumHandler)
HRESULT None shell32.SHBindToFolderIDListParentEx(_In_opt_ IShellFolder *psfRoot,_In_ PCUIDLIST_RELATIVE pidl,_In_opt_ IBindCtx *ppbc,_In_ REFIID riid,_Out_ void **ppv,_Out_opt_ PCUITEMID_CHILD *ppidlLast)
HRESULT None shell32.SHBindToFolderIDListParent(_In_opt_ IShellFolder *psfRoot,_In_ PCUIDLIST_RELATIVE pidl,_In_ REFIID riid,_Out_ void **ppv,_Out_opt_ PCUITEMID_CHILD *ppidlLast)
HRESULT None shell32.SHBindToObject(IShellFolder *psf None,PCUIDLIST_RELATIVE pidl None,_In_ IBindCtx *pbc,REFIID riid None,_Out_ void **ppv)
HRESULT None shell32.SHBindToParent(_In_ PCIDLIST_ABSOLUTE pidl,_In_ REFIID riid,_Out_ VOID **ppv,_Out_ PCUITEMID_CHILD *ppidlLast)
HRESULT None shell32.SHCLSIDFromString(_In_ PCWSTR psz,_Out_ CLSID *pcClsid)
HRESULT None shell32.SHCreateAssociationRegistration(_In_ REFIID riid,_Out_ void **ppv)
HRESULT None shell32.SHCreateDataObject(_In_opt_ PCIDLIST_ABSOLUTE pidlFolder,_In_ UINT cidl,_In_opt_ PCUITEMID_CHILD_ARRAY apidl,_In_opt_ IDataObject *pdtInner,_In_ REFIID riid,_Out_ void **ppv)
HRESULT None shell32.SHCreateDefaultExtractIcon(REFIID riid None,_Out_ void **ppv)
HRESULT None shell32.SHCreateDefaultPropertiesOp(_In_ IShellItem *psi,_Out_ IFileOperation **ppFileOp)
HRESULT None shell32.SHCreateFileExtractIcon(_In_ LPCTSTR pszFile,_In_ DWORD dwFileAttributes,_In_ REFIID riid,void **ppv None)
HRESULT None shell32.SHCreateFileExtractIconW(_In_ LPCTSTR pszFile,_In_ DWORD dwFileAttributes,_In_ REFIID riid,void **ppv None)
HRESULT None shell32.SHCreateItemFromIDList(_In_ PCIDLIST_ABSOLUTE pidl,_In_ REFIID riid,_Out_ void **ppv)
HRESULT None shell32.SHCreateItemFromParsingName(_In_ PCWSTR pszPath,_In_opt_ IBindCtx *pbc,_In_ REFIID riid,_Out_ void **ppv)
HRESULT None shell32.SHCreateItemFromRelativeName(_In_ IShellItem *psiParent,_In_ PCWSTR pszName,_In_ IBindCtx *pbc,_In_ REFIID riid,_Out_ void **ppv)
HRESULT None shell32.SHCreateItemInKnownFolder(_In_ REFKNOWNFOLDERID kfid,DWORD dwKFFlags None,_In_opt_ PCWSTR pszItem,_In_ REFIID riid,_Out_ void **ppv)
HRESULT None shell32.SHCreateItemWithParent(_In_ PCIDLIST_ABSOLUTE pidlParent,_In_ IShellFolder *psfParent,_In_ PCUITEMID_CHILD pidl,_In_ REFIID riid,_Out_ void **ppvItem)
HRESULT None shell32.SHCreateQueryCancelAutoPlayMoniker(_Out_ IMoniker **ppmoniker)
HRESULT None shell32.SHCreateShellFolderViewEx(_In_ CSFV *pcsfv,_Out_ IShellView **ppsv)
HRESULT None shell32.SHCreateShellItemArrayFromDataObject(_In_ IDataObject *pdo,_In_ REFIID riid,_Out_ void **ppv)
HRESULT None shell32.SHCreateShellItemArrayFromIDLists(_In_ UINT cidl,_In_ PCIDLIST_ABSOLUTE_ARRAY rgpidl,_Out_ IShellItemArray **ppsiItemArray)
HRESULT None shell32.SHCreateShellItemArrayFromShellItem(_In_ IShellItem *psi,_In_ REFIID riid,_Out_ void **ppv)
HRESULT None shell32.SHCreateShellItemArray(_In_ PCIDLIST_ABSOLUTE pidlParent,_In_ IShellFolder *psf,_In_ UINT cidl,_In_ PCUITEMID_CHILD_ARRAY ppidl,_Out_ IShellItemArray **ppsiItemArray)
HRESULT None shell32.SHCreateShellItem(_In_opt_ PCIDLIST_ABSOLUTE pidlParent,_In_opt_ IShellFolder *psfParent,_In_ PCUITEMID_CHILD pidl,_Out_ IShellItem **ppsi)
HRESULT None shell32.SHCreateStdEnumFmtEtc(_In_ UINT cfmt,const FORMATETC afmt[],_Out_ IEnumFORMATETC **ppenumFormatEtc)
HRESULT None shell32.SHDefExtractIconA(_In_ LPCTSTR pszIconFile,int iIndex None,_In_ UINT uFlags,_Out_opt_ HICON *phiconLarge,_Out_opt_ HICON *phiconSmall,UINT nIconSize None)
HRESULT None shell32.SHDefExtractIcon(_In_ LPCTSTR pszIconFile,int iIndex None,_In_ UINT uFlags,_Out_opt_ HICON *phiconLarge,_Out_opt_ HICON *phiconSmall,UINT nIconSize None)
HRESULT None shell32.SHDefExtractIconW(_In_ LPCTSTR pszIconFile,int iIndex None,_In_ UINT uFlags,_Out_opt_ HICON *phiconLarge,_Out_opt_ HICON *phiconSmall,UINT nIconSize None)
HRESULT None shell32.SHDoDragDrop(_In_ HWND hwnd,_In_ IDataObject *pdtobj,_In_ IDropSource *pdsrc,_In_ DWORD dwEffect,_Out_ DWORD *pdwEffect)
HRESULT None shell32.SHEmptyRecycleBinA(_In_opt_ HWND hwnd,_In_opt_ LPCTSTR pszRootPath,DWORD dwFlags None)
HRESULT None shell32.SHEmptyRecycleBin(_In_opt_ HWND hwnd,_In_opt_ LPCTSTR pszRootPath,DWORD dwFlags None)
HRESULT None shell32.SHEmptyRecycleBinW(_In_opt_ HWND hwnd,_In_opt_ LPCTSTR pszRootPath,DWORD dwFlags None)
HRESULT None shell32.SHEnumerateUnreadMailAccountsA(_In_opt_ HKEY hKeyUser,DWORD dwIndex None,_Out_ LPTSTR pszMailAddress,int cchMailAddress None)
HRESULT None shell32.SHEnumerateUnreadMailAccounts(_In_opt_ HKEY hKeyUser,DWORD dwIndex None,_Out_ LPTSTR pszMailAddress,int cchMailAddress None)
HRESULT None shell32.SHEnumerateUnreadMailAccountsW(_In_opt_ HKEY hKeyUser,DWORD dwIndex None,_Out_ LPTSTR pszMailAddress,int cchMailAddress None)
HRESULT None shell32.SHEvaluateSystemCommandTemplate(_In_ PCWSTR pszCmdTemplate,_Out_ PWSTR *ppszApplication,_Out_opt_ PWSTR *ppszCommandLine,_Out_opt_ PWSTR *ppszParameters)
HRESULT None shell32.SHFlushClipboard(void None None)
HRESULT None shell32.SHGetAttributesFromDataObject(_In_opt_ IDataObject *pdo,DWORD dwAttributeMask None,_Out_opt_ DWORD *pdwAttributes,_Out_opt_ UINT *pcItems)
HRESULT None shell32.SHGetDataFromIDListA(_In_ IShellFolder *psf,_In_ PCUITEMID_CHILD pidl,int nFormat None,_Out_ void *pv,int cb None)
HRESULT None shell32.SHGetDataFromIDList(_In_ IShellFolder *psf,_In_ PCUITEMID_CHILD pidl,int nFormat None,_Out_ void *pv,int cb None)
HRESULT None shell32.SHGetDataFromIDListW(_In_ IShellFolder *psf,_In_ PCUITEMID_CHILD pidl,int nFormat None,_Out_ void *pv,int cb None)
HRESULT None shell32.SHGetDesktopFolder(_Out_ IShellFolder **ppshf)
HRESULT None shell32.SHGetDriveMedia(_In_ PCWSTR pszDrive,_Out_ DWORD *pdwMediaContent)
HRESULT None shell32.SHGetFolderLocation(_In_ HWND hwndOwner,_In_ int nFolder,_In_ HANDLE hToken,_Reserved_ DWORD dwReserved,_Out_ PIDLIST_ABSOLUTE *ppidl)
HRESULT None shell32.SHGetFolderPathA(_In_ HWND hwndOwner,_In_ int nFolder,_In_ HANDLE hToken,_In_ DWORD dwFlags,_Out_ LPTSTR pszPath)
HRESULT None shell32.SHGetFolderPathAndSubDirA(_In_ HWND hwnd,_In_ int csidl,_In_ HANDLE hToken,_In_ DWORD dwFlags,_In_ LPCTSTR pszSubDir,_Out_ LPTSTR pszPath)
HRESULT None shell32.SHGetFolderPathAndSubDir(_In_ HWND hwnd,_In_ int csidl,_In_ HANDLE hToken,_In_ DWORD dwFlags,_In_ LPCTSTR pszSubDir,_Out_ LPTSTR pszPath)
HRESULT None shell32.SHGetFolderPathAndSubDirW(_In_ HWND hwnd,_In_ int csidl,_In_ HANDLE hToken,_In_ DWORD dwFlags,_In_ LPCTSTR pszSubDir,_Out_ LPTSTR pszPath)
HRESULT None shell32.SHGetFolderPath(_In_ HWND hwndOwner,_In_ int nFolder,_In_ HANDLE hToken,_In_ DWORD dwFlags,_Out_ LPTSTR pszPath)
HRESULT None shell32.SHGetFolderPathW(_In_ HWND hwndOwner,_In_ int nFolder,_In_ HANDLE hToken,_In_ DWORD dwFlags,_Out_ LPTSTR pszPath)
HRESULT None shell32.SHGetIDListFromObject(_In_ IUnknown *punk,_Out_ PIDLIST_ABSOLUTE *ppidl)
HRESULT None shell32.SHGetImageList(_In_ int iImageList,_In_ REFIID riid,_Out_ void **ppv)
HRESULT None shell32.SHGetInstanceExplorer(_Out_ IUnknown **ppunk)
HRESULT None shell32.SHGetItemFromDataObject(_In_ IDataObject *pdtobj,_In_ DATAOBJ_GET_ITEM_FLAGS dwFlags,_In_ REFIID riid,_Out_ void **ppv)
HRESULT None shell32.SHGetItemFromObject(_In_ IUnknown *punk,_In_ REFIID riid,_Out_ void **ppv)
HRESULT None shell32.SHGetKnownFolderIDList(_In_ REFKNOWNFOLDERID rfid,_In_ DWORD dwFlags,_In_ HANDLE hToken,_Out_ PIDLIST_ABSOLUTE *ppidl)
HRESULT None shell32.SHGetKnownFolderItem(_In_ REFKNOWNFOLDERID rfid,_In_ KNOWN_FOLDER_FLAG dwFlags,_In_ HANDLE hToken,_In_ REFIID riid,_Out_ void **ppv)
HRESULT None shell32.SHGetKnownFolderPath(_In_ REFKNOWNFOLDERID rfid,_In_ DWORD dwFlags,_In_opt_ HANDLE hToken,_Out_ PWSTR *ppszPath)
HRESULT None shell32.SHGetLocalizedName(_In_ PCWSTR pszPath,_Out_ PWSTR pszResModule,UINT cch None,_Out_ int *pidsRes)
HRESULT None shell32.SHGetMalloc(LPMALLOC *ppMalloc None)
HRESULT None shell32.SHGetNameFromIDList(_In_ PCIDLIST_ABSOLUTE pidl,_In_ SIGDN sigdnName,_Out_ PWSTR *ppszName)
HRESULT None shell32.SHGetNameFromPropertyKey(_In_ REFPROPERTYKEY propkey,_Out_ PWSTR *ppszCanonicalName)
HRESULT None shell32.SHGetPropertyStoreForWindow(_In_ HWND hwnd,_In_ REFIID riid,_Out_ void **ppv)
HRESULT None shell32.SHGetPropertyStoreFromIDList(_In_ PCIDLIST_ABSOLUTE pidl,_In_ GETPROPERTYSTOREFLAGS flags,_In_ REFIID riid,_Out_ void **ppv)
HRESULT None shell32.SHGetPropertyStoreFromParsingName(_In_ PCWSTR pszPath,_In_opt_ IBindCtx *pbc,_In_ GETPROPERTYSTOREFLAGS flags,_In_ REFIID riid,_Out_ void **ppv)
HRESULT None shell32.SHGetRealIDL(_In_ IShellFolder *psf,_In_ PCUITEMID_CHILD pidlSimple,_Out_ PITEMID_CHILD *ppidlReal)
HRESULT None shell32.SHGetSetFolderCustomSettings(_Inout_ LPSHFOLDERCUSTOMSETTINGS pfcs,_In_ PCTSTR pszPath,DWORD dwReadWrite None)
HRESULT None shell32.SHGetSpecialFolderLocation(_In_ HWND hwndOwner,_In_ int nFolder,_Out_ PIDLIST_ABSOLUTE *ppidl)
HRESULT None shell32.SHGetStockIconInfo(SHSTOCKICONID siid None,UINT uFlags None,_Inout_ SHSTOCKICONINFO *psii)
HRESULT None shell32.SHGetTemporaryPropertyForItem(_In_ IShellItem *psi,REFPROPERTYKEY pk None,_Out_ PROPVARIANT *ppropvarInk)
HRESULT None shell32.SHGetUnreadMailCount(_In_opt_ HKEY hKeyUser,_In_opt_ LPCTSTR pszMailAddress,_Out_opt_ DWORD *pdwCount,_Out_opt_ FILETIME *pFileTime,_Out_opt_ LPCTSTR pszShellExecuteCommand,int cchShellExecuteCommand None)
HRESULT None shell32.SHGetUnreadMailCountW(_In_opt_ HKEY hKeyUser,_In_opt_ LPCTSTR pszMailAddress,_Out_opt_ DWORD *pdwCount,_Out_opt_ FILETIME *pFileTime,_Out_opt_ LPCTSTR pszShellExecuteCommand,int cchShellExecuteCommand None)
HRESULT None shell32.SHILCreateFromPath(_In_ PCWSTR pszPath,_Out_ PIDLIST_ABSOLUTE *ppidl,_Inout_opt_ DWORD *rgflnOut)
HRESULT None shell32.SHIsFileAvailableOffline(_In_ PCWSTR pszPath,_Out_opt_ LPDWORD pdwStatus)
HRESULT None shell32.SHLimitInputEdit(_In_opt_ HWND hwndEdit,_In_ IShellFolder *psf)
HRESULT None shell32.SHLoadInProc(_In_ REFCLSID rclsid)
HRESULT None shell32.SHLoadNonloadedIconOverlayIdentifiers(void None None)
HRESULT None shell32.SHLoadOLE(_In_ LPARAM lParam)
HRESULT None shell32.SHMapIDListToImageListIndexAsync(IShellTaskScheduler *pts None,IShellFolder *psf None,LPCITEMIDLIST pidl None,UINT flags None,PFNASYNCICONTASKBALLBACK pfn None,void *pvData None,void *pvHint None,int *piIndex None,int *piIndexSel None)
HRESULT None shell32.SHMultiFileProperties(_In_ IDataObject *pdtobj,DWORD dwFlags None)
HRESULT None shell32.SHOpenFolderAndSelectItems(_In_ PCIDLIST_ABSOLUTE pidlFolder,UINT cidl None,_In_opt_ PCUITEMID_CHILD_ARRAY apidl,DWORD dwFlags None)
HRESULT None shell32.SHParseDisplayName(_In_ LPCWSTR pszName,_In_opt_ IBindCtx *pbc,_Out_ PIDLIST_ABSOLUTE *ppidl,_In_ SFGAOF sfgaoIn,_Out_opt_ SFGAOF *psfgaoOut)
HRESULT None shell32.SHQueryRecycleBinA(_In_opt_ LPCTSTR pszRootPath,_Inout_ LPSHQUERYRBINFO pSHQueryRBInfo)
HRESULT None shell32.SHQueryRecycleBin(_In_opt_ LPCTSTR pszRootPath,_Inout_ LPSHQUERYRBINFO pSHQueryRBInfo)
HRESULT None shell32.SHQueryRecycleBinW(_In_opt_ LPCTSTR pszRootPath,_Inout_ LPSHQUERYRBINFO pSHQueryRBInfo)
HRESULT None shell32.SHQueryUserNotificationState(_Out_ QUERY_USER_NOTIFICATION_STATE *pquns)
HRESULT None shell32.SHRemoveLocalizedName(_In_ PCWSTR pszPath)
HRESULT None shell32.SHResolveLibrary(_In_ IShellItem *psiLibrary)
HRESULT None shell32.SHSetDefaultProperties(_In_opt_ HWND hwnd,_In_ IShellItem *psi,DWORD dwFileOpFlags None,_In_opt_ IFileOperationProgressSink *pfops)
HRESULT None shell32.SHSetFolderPathA(_In_ int csidl,_In_ HANDLE hToken,_Reserved_ DWORD dwFlags,_In_ LPCTSTR pszPath)
HRESULT None shell32.SHSetFolderPath(_In_ int csidl,_In_ HANDLE hToken,_Reserved_ DWORD dwFlags,_In_ LPCTSTR pszPath)
HRESULT None shell32.SHSetFolderPathW(_In_ int csidl,_In_ HANDLE hToken,_Reserved_ DWORD dwFlags,_In_ LPCTSTR pszPath)
HRESULT None shell32.SHSetKnownFolderPath(_In_ REFKNOWNFOLDERID rfid,_In_ DWORD dwFlags,_In_ HANDLE hToken,_In_ PCWSTR pszPath)
HRESULT None shell32.SHSetLocalizedName(_In_ PCWSTR pszPath,_In_ PCWSTR pszResModule,int idsRes None)
HRESULT None shell32.SHSetTemporaryPropertyForItem(_In_ IShellItem *psi,_In_ REFPROPERTYKEY propkey,_In_ REFPROPVARIANT propvar)
HRESULT None shell32.SHSetUnreadMailCount(_In_ LPCTSTR pszMailAddress,DWORD dwCount None,_In_ LPCTSTR pszShellExecuteCommand)
HRESULT None shell32.SHSetUnreadMailCountW(_In_ LPCTSTR pszMailAddress,DWORD dwCount None,_In_ LPCTSTR pszShellExecuteCommand)
HRESULT None shell32.SHShowManageLibraryUI(_In_ IShellItem *psiLibrary,_In_opt_ HWND hwndOwner,_In_opt_ LPCWSTR pszTitle,_In_opt_ LPCWSTR pszInstruction,_In_ LIBRARYMANAGEDIALOGOPTIONS lmdOptions)
HRESULT None shell32.SHStartNetConnectionDialogA(_In_opt_ HWND hwnd,_In_opt_ LPCTSTR pszRemoteName,DWORD dwType None)
HRESULT None shell32.SHStartNetConnectionDialog(_In_opt_ HWND hwnd,_In_opt_ LPCTSTR pszRemoteName,DWORD dwType None)
HRESULT None shell32.SHStartNetConnectionDialogW(_In_opt_ HWND hwnd,_In_opt_ LPCTSTR pszRemoteName,DWORD dwType None)
HRESULT None shell32.Skip(ULONG celt None)
HRESULT None shell32.StgMakeUniqueName(_In_ IStorage *pstgParent,_In_ PCWSTR pszFileSpec,_In_ DWORD grfMode,_In_ REFIID riid,_Out_ void **ppv)
HRESULT None shell32.TranslateAcceleratorIO(LPMSG lpMsg None)
HRESULT None shell32.TranslateAccelerator(LPMSG lpmsg None)
HRESULT None shell32.TranslateAcceleratorSB(LPMSG lpmsg None,WORD wID None)
HRESULT None shell32.UIActivateIO([in] BOOL fActivate,[in] MSG *pMsg)
HRESULT None shell32.UIActivate(UINT uState None)
HRESULT None shimgvw.Initialize([in] LPCWSTR pszParams)
HRESULT None shimgvw.RecompressImage([in] IShellItem *psi,[in] int cx,[in] int cy,[in] int iQuality,[in] IStorage *pstg,[in None None,out] IStream **ppstrmOut)
HRESULT None shlwapi.AssocCreate(_In_ CLSID clsid,_In_ REFIID riid,_Out_ void *ppv)
HRESULT None shlwapi.AssocGetPerceivedType(_In_ PCWSTR pszExt,_Out_ PERCEIVED *ptype,_Out_ PERCEIVEDFLAG *pflag,_Out_opt_ PWSTR *ppszType)
HRESULT None shlwapi.AssocQueryKeyA(_In_ ASSOCF flags,_In_ ASSOCKEY key,_In_ LPCTSTR pszAssoc,_In_ LPCTSTR pszExtra,_Out_ HKEY *phkeyOut)
HRESULT None shlwapi.AssocQueryKey(_In_ ASSOCF flags,_In_ ASSOCKEY key,_In_ LPCTSTR pszAssoc,_In_ LPCTSTR pszExtra,_Out_ HKEY *phkeyOut)
HRESULT None shlwapi.AssocQueryKeyW(_In_ ASSOCF flags,_In_ ASSOCKEY key,_In_ LPCTSTR pszAssoc,_In_ LPCTSTR pszExtra,_Out_ HKEY *phkeyOut)
HRESULT None shlwapi.AssocQueryStringA(_In_ ASSOCF flags,_In_ ASSOCSTR str,_In_ LPCTSTR pszAssoc,_In_opt_ LPCTSTR pszExtra,_Out_opt_ LPTSTR pszOut,_Inout_ DWORD *pcchOut)
HRESULT None shlwapi.AssocQueryStringByKeyA(_In_ ASSOCF flags,_In_ ASSOCSTR str,_In_ HKEY hkAssoc,_In_opt_ LPCTSTR pszExtra,_Out_opt_ LPTSTR pszOut,_Inout_ DWORD *pcchOut)
HRESULT None shlwapi.AssocQueryStringByKey(_In_ ASSOCF flags,_In_ ASSOCSTR str,_In_ HKEY hkAssoc,_In_opt_ LPCTSTR pszExtra,_Out_opt_ LPTSTR pszOut,_Inout_ DWORD *pcchOut)
HRESULT None shlwapi.AssocQueryStringByKeyW(_In_ ASSOCF flags,_In_ ASSOCSTR str,_In_ HKEY hkAssoc,_In_opt_ LPCTSTR pszExtra,_Out_opt_ LPTSTR pszOut,_Inout_ DWORD *pcchOut)
HRESULT None shlwapi.AssocQueryString(_In_ ASSOCF flags,_In_ ASSOCSTR str,_In_ LPCTSTR pszAssoc,_In_opt_ LPCTSTR pszExtra,_Out_opt_ LPTSTR pszOut,_Inout_ DWORD *pcchOut)
HRESULT None shlwapi.AssocQueryStringW(_In_ ASSOCF flags,_In_ ASSOCSTR str,_In_ LPCTSTR pszAssoc,_In_opt_ LPCTSTR pszExtra,_Out_opt_ LPTSTR pszOut,_Inout_ DWORD *pcchOut)
HRESULT None shlwapi.ConnectToConnectionPoint(_In_opt_ IUnknown *punk,_In_ REFIID riidEvent,BOOL fConnect None,_In_ IUnknown *punkTarget,_Out_ DWORD *pdwCookie,_Out_opt_ IConnectionPoint **ppcpOut)
HRESULT None shlwapi.DllInstall(BOOL bInstall None,_In_opt_ PCWSTR pszCmdLine)
HRESULT None shlwapi.GetAcceptLanguagesA(_Out_ LPTSTR pszLanguages,_Inout_ DWORD *pcchLanguages)
HRESULT None shlwapi.GetAcceptLanguages(_Out_ LPTSTR pszLanguages,_Inout_ DWORD *pcchLanguages)
HRESULT None shlwapi.GetAcceptLanguagesW(_Out_ LPTSTR pszLanguages,_Inout_ DWORD *pcchLanguages)
HRESULT None shlwapi.HashData(_In_ BYTE *pbData,DWORD cbData None,_Out_ BYTE *pbHash,DWORD cbHash None)
HRESULT None shlwapi.IStream_Copy(_In_ IStream *pstmFrom,_In_ IStream *pstmTo,_In_ DWORD cb)
HRESULT None shlwapi.IStream_Read(_In_ IStream *pstm,_Out_ VOID *pv,_In_ ULONG cb)
HRESULT None shlwapi.IStream_ReadPidl(_In_ IStream* pstm,_Out_ PIDLIST_RELATIVE* ppidlOut)
HRESULT None shlwapi.IStream_ReadStr(_In_ IStream *pstm,_Out_ PWSTR *ppsz)
HRESULT None shlwapi.IStream_Reset(_In_ IStream *pstm)
HRESULT None shlwapi.IStream_Size(_In_ IStream *pstm,_Out_ ULARGE_INTEGER *pui)
HRESULT None shlwapi.IStream_WritePidl(_In_ IStream* pstm,_In_ PCUIDLIST_RELATIVE pidlWrite)
HRESULT None shlwapi.IStream_WriteStr(_In_ IStream *pstm,_In_ PCWSTR psz)
HRESULT None shlwapi.IUnknown_GetSite(_In_ IUnknown *punk,_In_ REFIID riid,_Out_ VOID **ppvSite)
HRESULT None shlwapi.IUnknown_GetWindow(_In_ IUnknown *punk,_Out_ HWND *phwnd)
HRESULT None shlwapi.IUnknown_QueryService(_In_ IUnknown *punk,_In_ REFGUID guidService,_In_ REFIID riid,_Out_ void **ppvOut)
HRESULT None shlwapi.IUnknown_SetSite(_In_ IUnknown *punk,_In_ IUnknown *punkSite)
HRESULT None shlwapi.ParseURLA(_In_ LPCTSTR pcszUrl,_Inout_ PARSEDURL *ppu)
HRESULT None shlwapi.ParseURL(_In_ LPCTSTR pcszUrl,_Inout_ PARSEDURL *ppu)
HRESULT None shlwapi.ParseURLW(_In_ LPCTSTR pcszUrl,_Inout_ PARSEDURL *ppu)
HRESULT None shlwapi.PathCreateFromUrlA(_In_ PCTSTR pszUrl,_Out_ PTSTR pszPath,_Inout_ DWORD *pcchPath,DWORD dwFlags None)
HRESULT None shlwapi.PathCreateFromUrlAlloc(_In_ PCWSTR pszIn,_Out_ PWSTR *ppszOut,DWORD dwFlags None)
HRESULT None shlwapi.PathCreateFromUrl(_In_ PCTSTR pszUrl,_Out_ PTSTR pszPath,_Inout_ DWORD *pcchPath,DWORD dwFlags None)
HRESULT None shlwapi.PathCreateFromUrlW(_In_ PCTSTR pszUrl,_Out_ PTSTR pszPath,_Inout_ DWORD *pcchPath,DWORD dwFlags None)
HRESULT None shlwapi.PathMatchSpecExA(_In_ LPCTSTR pszFile,_In_ LPCTSTR pszSpec,_In_ DWORD dwFlags)
HRESULT None shlwapi.PathMatchSpecEx(_In_ LPCTSTR pszFile,_In_ LPCTSTR pszSpec,_In_ DWORD dwFlags)
HRESULT None shlwapi.PathMatchSpecExW(_In_ LPCTSTR pszFile,_In_ LPCTSTR pszSpec,_In_ DWORD dwFlags)
HRESULT None shlwapi.QISearch(_In_ void *that,_In_ LPCQITAB pqit,_In_ REFIID riid,_Out_ void **ppv)
HRESULT None shlwapi.SHAutoComplete(_In_ HWND hwndEdit,DWORD dwFlags None)
HRESULT None shlwapi.SHCreateStreamOnFileA(_In_ LPCTSTR pszFile,_In_ DWORD grfMode,_Out_ IStream **ppstm)
HRESULT None shlwapi.SHCreateStreamOnFileEx(_In_ LPCWSTR pszFile,_In_ DWORD grfMode,_In_ DWORD dwAttributes,_In_ BOOL fCreate,_Reserved_ IStream *pstmTemplate,_Out_ IStream **ppstm)
HRESULT None shlwapi.SHCreateStreamOnFile(_In_ LPCTSTR pszFile,_In_ DWORD grfMode,_Out_ IStream **ppstm)
HRESULT None shlwapi.SHCreateStreamOnFileW(_In_ LPCTSTR pszFile,_In_ DWORD grfMode,_Out_ IStream **ppstm)
HRESULT None shlwapi.SHCreateThreadRef(_In_ LONG *pcRef,_Out_ IUnknown **ppunk)
HRESULT None shlwapi.SHGetInverseCMAP(_Out_ BYTE *pbMap,_In_ ULONG cbMap)
HRESULT None shlwapi.SHGetThreadRef(_In_ IUnknown **ppunk)
HRESULT None shlwapi.SHGetViewStatePropertyBag(_In_opt_ PCIDLIST_ABSOLUTE pidl,_In_opt_ PCWSTR pszBagName,DWORD dwFlags None,_In_ REFIID riid,_Out_ void **ppv)
HRESULT None shlwapi.SHIsChildOrSelf(_In_ HWND hwndParent,_In_ HWND hwnd)
HRESULT None shlwapi.SHLoadIndirectString(_In_ PCWSTR pszSource,_Out_ PWSTR pszOutBuf,_In_ UINT cchOutBuf,_Reserved_ void **ppvReserved)
HRESULT None shlwapi.SHReleaseThreadRef(void None None)
HRESULT None shlwapi.SHSetThreadRef(_In_opt_ IUnknown *punk)
HRESULT None shlwapi.SHStrDupA(_In_ LPCTSTR pszSource,_Out_ LPTSTR *ppwsz)
HRESULT None shlwapi.SHStrDup(_In_ LPCTSTR pszSource,_Out_ LPTSTR *ppwsz)
HRESULT None shlwapi.SHStrDupW(_In_ LPCTSTR pszSource,_Out_ LPTSTR *ppwsz)
HRESULT None shlwapi.StrFormatByteSizeEx(ULONGLONG ull None,SFBS_FLAGS flags None,_Out_ PWSTR pszBuf,UINT cchBuf None)
HRESULT None shlwapi.StrRetToBSTR(_Inout_ STRRET *pstr,_In_ PCUITEMID_CHILD pidl,_Out_ BSTR *pbstr)
HRESULT None shlwapi.StrRetToBufA(_Inout_ STRRET *pstr,_In_ PCUITEMID_CHILD pidl,_Out_ LPTSTR pszBuf,_In_ UINT cchBuf)
HRESULT None shlwapi.StrRetToBuf(_Inout_ STRRET *pstr,_In_ PCUITEMID_CHILD pidl,_Out_ LPTSTR pszBuf,_In_ UINT cchBuf)
HRESULT None shlwapi.StrRetToBufW(_Inout_ STRRET *pstr,_In_ PCUITEMID_CHILD pidl,_Out_ LPTSTR pszBuf,_In_ UINT cchBuf)
HRESULT None shlwapi.StrRetToStrA(_Inout_ STRRET *pstr,_In_opt_ PCUITEMID_CHILD pidl,_Out_ LPTSTR *ppszName)
HRESULT None shlwapi.StrRetToStr(_Inout_ STRRET *pstr,_In_opt_ PCUITEMID_CHILD pidl,_Out_ LPTSTR *ppszName)
HRESULT None shlwapi.StrRetToStrW(_Inout_ STRRET *pstr,_In_opt_ PCUITEMID_CHILD pidl,_Out_ LPTSTR *ppszName)
HRESULT None shlwapi.UrlApplySchemeA(_In_ PCTSTR pszIn,_Out_ PTSTR pszOut,_Inout_ DWORD *pcchOut,DWORD dwFlags None)
HRESULT None shlwapi.UrlApplyScheme(_In_ PCTSTR pszIn,_Out_ PTSTR pszOut,_Inout_ DWORD *pcchOut,DWORD dwFlags None)
HRESULT None shlwapi.UrlApplySchemeW(_In_ PCTSTR pszIn,_Out_ PTSTR pszOut,_Inout_ DWORD *pcchOut,DWORD dwFlags None)
HRESULT None shlwapi.UrlCanonicalizeA(_In_ PCTSTR pszUrl,_Out_ PTSTR pszCanonicalized,_Inout_ DWORD *pcchCanonicalized,DWORD dwFlags None)
HRESULT None shlwapi.UrlCanonicalize(_In_ PCTSTR pszUrl,_Out_ PTSTR pszCanonicalized,_Inout_ DWORD *pcchCanonicalized,DWORD dwFlags None)
HRESULT None shlwapi.UrlCanonicalizeW(_In_ PCTSTR pszUrl,_Out_ PTSTR pszCanonicalized,_Inout_ DWORD *pcchCanonicalized,DWORD dwFlags None)
HRESULT None shlwapi.UrlCombineA(_In_ PCTSTR pszBase,_In_ PCTSTR pszRelative,_Out_opt_ PTSTR pszCombined,_Inout_ DWORD *pcchCombined,DWORD dwFlags None)
HRESULT None shlwapi.UrlCombine(_In_ PCTSTR pszBase,_In_ PCTSTR pszRelative,_Out_opt_ PTSTR pszCombined,_Inout_ DWORD *pcchCombined,DWORD dwFlags None)
HRESULT None shlwapi.UrlCombineW(_In_ PCTSTR pszBase,_In_ PCTSTR pszRelative,_Out_opt_ PTSTR pszCombined,_Inout_ DWORD *pcchCombined,DWORD dwFlags None)
HRESULT None shlwapi.UrlCreateFromPathA(_In_ PCTSTR pszPath,_Out_ PTSTR pszUrl,_Inout_ DWORD *pcchUrl,DWORD dwFlags None)
HRESULT None shlwapi.UrlCreateFromPath(_In_ PCTSTR pszPath,_Out_ PTSTR pszUrl,_Inout_ DWORD *pcchUrl,DWORD dwFlags None)
HRESULT None shlwapi.UrlCreateFromPathW(_In_ PCTSTR pszPath,_Out_ PTSTR pszUrl,_Inout_ DWORD *pcchUrl,DWORD dwFlags None)
HRESULT None shlwapi.UrlEscapeA(_In_ PCTSTR pszURL,_Out_ PTSTR pszEscaped,_Inout_ DWORD *pcchEscaped,DWORD dwFlags None)
HRESULT None shlwapi.UrlEscape(_In_ PCTSTR pszURL,_Out_ PTSTR pszEscaped,_Inout_ DWORD *pcchEscaped,DWORD dwFlags None)
HRESULT None shlwapi.UrlEscapeSpaces(_In_ LPCTSTR pszURL,_Out_ LPTSTR pszEscaped,_Out_ LPDWORD pcchEscaped)
HRESULT None shlwapi.UrlEscapeW(_In_ PCTSTR pszURL,_Out_ PTSTR pszEscaped,_Inout_ DWORD *pcchEscaped,DWORD dwFlags None)
HRESULT None shlwapi.UrlFixupW(_In_ PCWSTR pcszUrl,_Out_ PWSTR pszTranslatedUrl,DWORD cchMax None)
HRESULT None shlwapi.UrlGetPartA(_In_ PCTSTR pszIn,_Out_ PTSTR pszOut,_Inout_ DWORD *pcchOut,DWORD dwPart None,DWORD dwFlags None)
HRESULT None shlwapi.UrlGetPart(_In_ PCTSTR pszIn,_Out_ PTSTR pszOut,_Inout_ DWORD *pcchOut,DWORD dwPart None,DWORD dwFlags None)
HRESULT None shlwapi.UrlGetPartW(_In_ PCTSTR pszIn,_Out_ PTSTR pszOut,_Inout_ DWORD *pcchOut,DWORD dwPart None,DWORD dwFlags None)
HRESULT None shlwapi.UrlHashA(_In_ PCTSTR pszURL,_Out_ BYTE *pbHash,DWORD cbHash None)
HRESULT None shlwapi.UrlHash(_In_ PCTSTR pszURL,_Out_ BYTE *pbHash,DWORD cbHash None)
HRESULT None shlwapi.UrlHashW(_In_ PCTSTR pszURL,_Out_ BYTE *pbHash,DWORD cbHash None)
HRESULT None shlwapi.UrlUnescapeA(_Inout_ PTSTR pszURL,_Out_opt_ PTSTR pszUnescaped,_Inout_opt_ DWORD *pcchUnescaped,DWORD dwFlags None)
HRESULT None shlwapi.UrlUnescape(_Inout_ PTSTR pszURL,_Out_opt_ PTSTR pszUnescaped,_Inout_opt_ DWORD *pcchUnescaped,DWORD dwFlags None)
HRESULT None shlwapi.UrlUnescapeInPlace(_Inout_ LPTSTR pszURL,_In_ DWORD dwFlags)
HRESULT None shlwapi.UrlUnescapeW(_Inout_ PTSTR pszURL,_Out_opt_ PTSTR pszUnescaped,_Inout_opt_ DWORD *pcchUnescaped,DWORD dwFlags None)
HRESULT None softkbd.GetSoftKeyboardTextFont([out] LOGFONTW *pLogFont)
HRESULT None softkbd.GetSoftKeyboardTypeMode([out] TYPEMODE *lpTypeMode)
HRESULT None softkbd.ShowKeysForKeyScanMode([in] KEYID *lpKeyID,[in] INT iKeyNum,[in] BOOL fHighL)
HRESULT None spoolss.CorePrinterDriverInstalledA(_In_ LPCTSTR pszServer,_In_ LPCTSTR pszEnvironment,_In_ GUID CoreDriverGUID,_In_ FILETIME ftDriverDate,_In_ DWORDLONG dwlDriverVersion,_Out_ BOOL *pbDriverInstalled)
HRESULT None spoolss.CorePrinterDriverInstalled(_In_ LPCTSTR pszServer,_In_ LPCTSTR pszEnvironment,_In_ GUID CoreDriverGUID,_In_ FILETIME ftDriverDate,_In_ DWORDLONG dwlDriverVersion,_Out_ BOOL *pbDriverInstalled)
HRESULT None spoolss.CorePrinterDriverInstalledW(_In_ LPCTSTR pszServer,_In_ LPCTSTR pszEnvironment,_In_ GUID CoreDriverGUID,_In_ FILETIME ftDriverDate,_In_ DWORDLONG dwlDriverVersion,_Out_ BOOL *pbDriverInstalled)
HRESULT None spoolss.DeletePrinterDriverPackageA(_In_ LPCTSTR pszServer,_In_ LPCTSTR pszInfPath,_In_ LPCTSTR pszEnvironment)
HRESULT None spoolss.DeletePrinterDriverPackage(_In_ LPCTSTR pszServer,_In_ LPCTSTR pszInfPath,_In_ LPCTSTR pszEnvironment)
HRESULT None spoolss.DeletePrinterDriverPackageW(_In_ LPCTSTR pszServer,_In_ LPCTSTR pszInfPath,_In_ LPCTSTR pszEnvironment)
HRESULT None spoolss.GetCorePrinterDriversA(_In_ LPCTSTR pszServer,_In_ LPCTSTR pszEnvironment,_In_ LPCTSTR pszzCoreDriverDependencies,_In_ DWORD cCorePrinterDrivers,_Out_ PCORE_PRINTER_DRIVER pCorePrinterDrivers)
HRESULT None spoolss.GetCorePrinterDrivers(_In_ LPCTSTR pszServer,_In_ LPCTSTR pszEnvironment,_In_ LPCTSTR pszzCoreDriverDependencies,_In_ DWORD cCorePrinterDrivers,_Out_ PCORE_PRINTER_DRIVER pCorePrinterDrivers)
HRESULT None spoolss.GetCorePrinterDriversW(_In_ LPCTSTR pszServer,_In_ LPCTSTR pszEnvironment,_In_ LPCTSTR pszzCoreDriverDependencies,_In_ DWORD cCorePrinterDrivers,_Out_ PCORE_PRINTER_DRIVER pCorePrinterDrivers)
HRESULT None spoolss.GetPrinterDriverPackagePathA(_In_ LPCTSTR pszServer,_In_ LPCTSTR pszEnvironment,_In_ LPCTSTR pszLanguage,_In_ LPCTSTR pszPackageID,_Inout_ LPTSTR pszDriverPackageCab,_In_ DWORD cchDriverPackageCab,_Out_ LPDWORD pcchRequiredSize)
HRESULT None spoolss.GetPrinterDriverPackagePath(_In_ LPCTSTR pszServer,_In_ LPCTSTR pszEnvironment,_In_ LPCTSTR pszLanguage,_In_ LPCTSTR pszPackageID,_Inout_ LPTSTR pszDriverPackageCab,_In_ DWORD cchDriverPackageCab,_Out_ LPDWORD pcchRequiredSize)
HRESULT None spoolss.GetPrinterDriverPackagePathW(_In_ LPCTSTR pszServer,_In_ LPCTSTR pszEnvironment,_In_ LPCTSTR pszLanguage,_In_ LPCTSTR pszPackageID,_Inout_ LPTSTR pszDriverPackageCab,_In_ DWORD cchDriverPackageCab,_Out_ LPDWORD pcchRequiredSize)
HRESULT None spoolss.InstallPrinterDriverFromPackageA(_In_ LPCTSTR pszServer,_In_ LPCTSTR pszInfPath,_In_ LPCTSTR pszDriverName,_In_ LPCTSTR pszEnvironment,_In_ DWORD dwFlags)
HRESULT None spoolss.InstallPrinterDriverFromPackage(_In_ LPCTSTR pszServer,_In_ LPCTSTR pszInfPath,_In_ LPCTSTR pszDriverName,_In_ LPCTSTR pszEnvironment,_In_ DWORD dwFlags)
HRESULT None spoolss.InstallPrinterDriverFromPackageW(_In_ LPCTSTR pszServer,_In_ LPCTSTR pszInfPath,_In_ LPCTSTR pszDriverName,_In_ LPCTSTR pszEnvironment,_In_ DWORD dwFlags)
HRESULT None spoolss.ReportJobProcessingProgress(_In_ HANDLE printerHandle,_In_ ULONG jobId,EPrintXPSJobOperation jobOperation None,EPrintXPSJobProgress jobProgress None)
HRESULT None spoolss.UploadPrinterDriverPackageA(_In_ LPCTSTR pszServer,_In_ LPCTSTR pszInfPath,_In_ LPCTSTR pszEnvironment,_In_ DWORD dwFlags,_In_ HWND hwnd,_Out_ LPTSTR pszDestInfPath,_Inout_ PULONG pcchDestInfPath)
HRESULT None spoolss.UploadPrinterDriverPackage(_In_ LPCTSTR pszServer,_In_ LPCTSTR pszInfPath,_In_ LPCTSTR pszEnvironment,_In_ DWORD dwFlags,_In_ HWND hwnd,_Out_ LPTSTR pszDestInfPath,_Inout_ PULONG pcchDestInfPath)
HRESULT None spoolss.UploadPrinterDriverPackageW(_In_ LPCTSTR pszServer,_In_ LPCTSTR pszInfPath,_In_ LPCTSTR pszEnvironment,_In_ DWORD dwFlags,_In_ HWND hwnd,_Out_ LPTSTR pszDestInfPath,_Inout_ PULONG pcchDestInfPath)
HRESULT None sptip.Clone([out] IEnumTfLatticeElements **ppEnum)
HRESULT None srmsvc.CreateCustomAction([out] IFsrmActionCommand **customAction)
HRESULT None srmsvc.CreateFileManagementJob([out] IFsrmFileManagementJob **fileManagementJob)
HRESULT None srmsvc.CreatePropertyDefinition([out] IFsrmPropertyDefinition **propertyDefinition)
HRESULT None srmsvc.CreateQuotaCollection([out] IFsrmCommittableCollection **collection)
HRESULT None srmsvc.EnumActions([out] IFsrmCollection **actions)
HRESULT None srmsvc.EnumReports([out] IFsrmCollection **reports)
HRESULT None srmsvc.get_ActionType([out] FsrmActionType *actionType)
HRESULT None srmsvc.get_ClassificationLastReportPathWithoutExtension([out] BSTR *pLastReportPath)
HRESULT None srmsvc.get_ClassificationRunningStatus([out] FsrmReportRunningStatus *pRunningStatus)
HRESULT None srmsvc.get_CreationTime([out] VARIANT *creationTime)
HRESULT None srmsvc.get_CustomAction([out] IFsrmActionCommand **pAction)
HRESULT None srmsvc.get_DerivedObjects([out] IFsrmCollection **derivedObjects)
HRESULT None srmsvc.get_FileId([out] VARIANT *fileId)
HRESULT None srmsvc.get_Id([out] FSRM_OBJECT_ID *id)
HRESULT None srmsvc.get_LastError([out] BSTR *lastError)
HRESULT None srmsvc.get_LastError([out] BSTR lastError)
HRESULT None srmsvc.get_LastGeneratedInDirectory([out] BSTR path)
HRESULT None srmsvc.get_LastModificationTime([out] VARIANT *creationTime)
HRESULT None srmsvc.get_LastModified([out] VARIANT *pLastModified)
HRESULT None srmsvc.get_LastReportPathWithoutExtension([out] BSTR *pPath)
HRESULT None srmsvc.get_LastRun([out] DATE *lastRun)
HRESULT None srmsvc.get_ModuleType([out] FsrmPipelineModuleType *pModuleType)
HRESULT None srmsvc.get_Name([out] BSTR *name)
HRESULT None srmsvc.get_Name([out] BSTR *pName)
HRESULT None srmsvc.get__NewEnum([out] IUnknown **unknown)
HRESULT None srmsvc.get_OwnerSid([out] BSTR *ownerSid)
HRESULT None srmsvc.get_PropertyConditions([out] IFsrmCollection **pPropertyConditions)
HRESULT None srmsvc.get_RelativeNamespaceRoot([out] BSTR *relativeNamespaceRoot)
HRESULT None srmsvc.get_RelativePath([out] BSTR *path)
HRESULT None srmsvc.get_RunningStatus([out] FsrmReportRunningStatus *pRunningStatus)
HRESULT None srmsvc.get_SizeAllocated([out] VARIANT *sizeAllocated)
HRESULT None srmsvc.get_Size([out] VARIANT *size)
HRESULT None srmsvc.get_State([out] FsrmCollectionState *state)
HRESULT None srmsvc.get_Type([out] FsrmReportType reportType)
HRESULT None srmsvc.get_ValueDefinitions([out None None,retval] IFsrmCollection **valueDefinitions)
HRESULT None srmsvc.get_Value([out] BSTR *pValue)
HRESULT None srmsvc.get_VolumeName([out] BSTR *volumeName)
HRESULT None sti.GetSTILaunchInformation([out] LPWSTR pwszDeviceName,DWORD pdwEventCode None,[out] LPWSTR pwszEventName)
HRESULT None sti.StiCreateInstanceA(_In_ HINSTANCE hinst,_In_ DWORD dwVer,_Out_ PSTI *ppSti,_In_ LPUNKNOWN punkOuter)
HRESULT None sti.StiCreateInstance(_In_ HINSTANCE hinst,_In_ DWORD dwVer,_Out_ PSTI *ppSti,_In_ LPUNKNOWN punkOuter)
HRESULT None sti.StiCreateInstanceW(_In_ HINSTANCE hinst,_In_ DWORD dwVer,_Out_ PSTI *ppSti,_In_ LPUNKNOWN punkOuter)
HRESULT None tapi3.Add([in] BSTR bstrSuperclass)
HRESULT None tapi3.BlindTransfer([in] BSTR pDestAddress)
HRESULT None tapi3.Clone([out] IEnumACDGroup **ppEnum)
HRESULT None tapi3.Clone([out] IEnumAddress **ppEnum)
HRESULT None tapi3.Clone([out] IEnumAgentHandler **ppEnum)
HRESULT None tapi3.Clone([out] IEnumCallingCard **ppEnum)
HRESULT None tapi3.Clone([out] IEnumCall **ppEnum)
HRESULT None tapi3.Clone([out] IEnumPluggableSuperclassInfo **ppEnum)
HRESULT None tapi3.Connect([in] VARIANT_BOOL fSync)
HRESULT None tapi3.CreateAgent([out] ITAgent **ppAgent)
HRESULT None tapi3.CreateAgentWithID([in] BSTR pID,[in] BSTR pPIN,[out] ITAgent **ppAgent)
HRESULT None tapi3.CreateCall([in] BSTR pDestAddress,[in] long lAddressType,[in] long lMediaTypes,[out] ITBasicCallControl **ppCall)
HRESULT None tapi3.CreateCustomToneObject([out] ITCustomTone **ppCustomTone)
HRESULT None tapi3.CreateDetectToneObject([out] ITDetectTone **ppDetectTone)
HRESULT None tapi3.CreateForwardInfoObject([out] ITForwardInformation **ppForwardInfo)
HRESULT None tapi3.CreateSession([in] ITACDGroup *pACDGroup,[in] ITAddress *pAddress,[out] ITAgentSession **ppAgentSession)
HRESULT None tapi3.CreateSessionWithPIN([in] ITACDGroup *pACDGroup,[in] ITAddress *pAddress,[in] BSTR pPIN,[out] ITAgentSession **ppAgentSession)
HRESULT None tapi3.Delete([in] BSTR bstrSuperclass)
HRESULT None tapi3.DetectDigits([in] TAPI_DIGITMODE DigitMode)
HRESULT None tapi3.DetectTonesByCollection([in] ITCollection2 *pDetectToneCollection)
HRESULT None tapi3.DetectTones([in] TAPI_DETECTTONE *pToneList,[in] long lNumTones)
HRESULT None tapi3.DeviceSpecific([in] BYTE *pParams,[in] DWORD dwSize)
HRESULT None tapi3.DeviceSpecific([in] ITCallInfo *pCall,[in] BYTE *pParams,[in] DWORD dwSize)
HRESULT None tapi3.DeviceSpecificVariant([in] ITCallInfo *pCall,[in] VARIANT varDevSpecificByteArray)
HRESULT None tapi3.DeviceSpecificVariant([in] VARIANT varDevSpecificByteArray)
HRESULT None tapi3.Dial([in] BSTR pDestAddress)
HRESULT None tapi3.Disconnect([in] DISCONNECT_CODE code)
HRESULT None tapi3.EnumerateACDGroups([out] IEnumACDGroup **ppEnumACDGroup)
HRESULT None tapi3.EnumerateAddresses([out] IEnumAddress **ppEnumAddress)
HRESULT None tapi3.EnumerateAgentHandlers([out] IEnumAgentHandler **ppEnumHandler)
HRESULT None tapi3.EnumerateAgentSessions([out] IEnumAgentSession **ppEnumAgentSession)
HRESULT None tapi3.EnumerateCallHubs([out] IEnumCallHub **ppEnumCallHub)
HRESULT None tapi3.EnumerateCallingCards([out] IEnumCallingCard **ppEnumCallingCard)
HRESULT None tapi3.EnumerateCalls([out] IEnumCall **ppEnumCall)
HRESULT None tapi3.EnumerateCallTreatments([out] IEnumBstr **ppEnumCallTreatment)
HRESULT None tapi3.EnumerateDeviceClasses([out] IEnumBstr **ppEnumDeviceClass)
HRESULT None tapi3.EnumeratePreferredAddresses([out] IEnumAddress **ppEnumAddress)
HRESULT None tapi3.EnumeratePreferredPhones([out] IEnumPhone **ppEnumPhone)
HRESULT None tapi3.EnumerateSelectedCalls([out] IEnumCall **ppCallEnum)
HRESULT None tapi3.EnumerateStreams([out] IEnumStream **ppEnumStream)
HRESULT None tapi3.EnumerateTerminals([in] ITAddress *pAddress,[out] IEnumTerminal **ppEnumTerminal)
HRESULT None tapi3.EnumerateUsableAddresses([out] IEnumAddress **ppEnumAddress)
HRESULT None tapi3.Event([in] TAPI_EVENT TapiEvent,[in] IDispatch *pEvent)
HRESULT None tapi3.Finish([in] FINISH_MODE finishMode)
HRESULT None tapi3.Forward([in] ITForwardInformation *pForwardInfo,[in] ITBasicCallControl *pCall)
HRESULT None tapi3.GatherDigits([in] TAPI_DIGITMODE DigitMode,[in] long lNumDigits,[in] BSTR pTerminationDigits,[in] long lFirstDigitTimeout,[in] long lInterDigitTimeout)
HRESULT None tapi3.GenerateCustomTonesByCollection([in] ITCollection2 *pCustomToneCollection,[in] long lDuration)
HRESULT None tapi3.GenerateCustomTones([in] TAPI_CUSTOMTONE *pToneList,[in] long lNumTones,[in] long lDuration)
HRESULT None tapi3.GenerateDigits2([in] BSTR pDigits,[in] TAPI_DIGITMODE DigitMode,[in] long lDuration)
HRESULT None tapi3.GenerateDigits([in] BSTR pDigits,[in] TAPI_DIGITMODE DigitMode)
HRESULT None tapi3.GenerateTone([in] TAPI_TONEMODE ToneMode,[in] long lDuration)
HRESULT None tapi3.get_ACDCallRate([out] CURRENCY *pcyCallrate)
HRESULT None tapi3.get_ACDGroup([out] ITACDGroup **ppACDGroup)
HRESULT None tapi3.get_ACDGroups([out] VARIANT *pVariant)
HRESULT None tapi3.get_AddressCapability([in] ADDRESS_CAPABILITY AddressCap,[out] long *plCapability)
HRESULT None tapi3.get_AddressCapabilityString([in] ADDRESS_CAPABILITY_STRING AddressCapString,[out] BSTR *ppCapabilityString)
HRESULT None tapi3.get_Addresses([out] VARIANT *pAddresses)
HRESULT None tapi3.get_Addresses([out] VARIANT *pVariant)
HRESULT None tapi3.get_AddressName([out] BSTR *ppName)
HRESULT None tapi3.get_Address([out] ITAddress **ppAddress)
HRESULT None tapi3.get_AgentHandler([out] ITAgentHandler **ppAgentHandler)
HRESULT None tapi3.get_Agent([out] ITAgent **ppAgent)
HRESULT None tapi3.get_AgentSessions([out] VARIANT *pVariant)
HRESULT None tapi3.GetAllocateBuffers([out] BOOL *pbAllocBuffers)
HRESULT None tapi3.GetAllocatorProperties([out] ALLOCATOR_PROPERTIES *pAllocProperties)
HRESULT None tapi3.get_AudioFormatForScripting([out] ITScriptableAudioFormat **ppAudioFormat)
HRESULT None tapi3.get_AutoDialtone([out] VARIANT_BOOL *pfEnabled)
HRESULT None tapi3.get_AutoEndOfNumberTimeout([out] long *plTimeout)
HRESULT None tapi3.get_AutoKeypadTonesMinimumDuration([out] long *plDuration)
HRESULT None tapi3.get_AutoKeypadTones([out] VARIANT_BOOL *pfEnabled)
HRESULT None tapi3.get_AutoStopRingOnOffHook([out] VARIANT_BOOL *pfEnabled)
HRESULT None tapi3.get_AutoStopTonesOnOnHook([out] VARIANT_BOOL *pfEnabled)
HRESULT None tapi3.get_AutoVolumeControl([out] VARIANT_BOOL *fEnabled)
HRESULT None tapi3.get_AutoVolumeControlRepeatDelay([out] long *plDelay)
HRESULT None tapi3.get_AutoVolumeControlRepeatPeriod([out] long *plPeriod)
HRESULT None tapi3.get_AutoVolumeControlStep([out] long *plStepSize)
HRESULT None tapi3.get_AverageCallTime([out] long *plCallTime)
HRESULT None tapi3.get_AverageTalkTime([out] long *plTalkTime)
HRESULT None tapi3.get_AverageTimeToAnswer([out] long *plAnswerTime)
HRESULT None tapi3.get_AverageWrapUpTime([out] long *plWrapUpTime)
HRESULT None tapi3.get_AvgBytesPerSec([out] long *pVal)
HRESULT None tapi3.get_Balance([out] long *plBalance)
HRESULT None tapi3.GetBufferSize([out] DWORD *pBufferSize)
HRESULT None tapi3.get_ButtonFunction([in] long lButtonID,[out] PHONE_BUTTON_FUNCTION *pButtonFunction)
HRESULT None tapi3.get_ButtonMode([in] long lButtonID,[out] PHONE_BUTTON_MODE *pButtonMode)
HRESULT None tapi3.get_ButtonState([in] long lButtonID,[out] PHONE_BUTTON_STATE *pButtonState)
HRESULT None tapi3.get_ButtonState([out] PHONE_BUTTON_STATE *pState)
HRESULT None tapi3.get_ButtonText([in] long lButtonID,[out] BSTR *ppButtonText)
HRESULT None tapi3.get_CadenceOff([out] long *plCadenceOff)
HRESULT None tapi3.get_CadenceOn([out] long *plCadenceOn)
HRESULT None tapi3.get_CallbackInstance([out] long *plCallbackInstance)
HRESULT None tapi3.get_CallHub([out] ITCallHub **ppCallHub)
HRESULT None tapi3.get_CallHubs([out] VARIANT *pVariant)
HRESULT None tapi3.GetCallInfoBuffer([in] CALLINFO_BUFFER CallInfoBuffer,[out] DWORD *pdwSize,[out] BYTE **ppCallInfoBuffer)
HRESULT None tapi3.get_CallInfoBuffer([in] CALLINFO_BUFFER CallInfoBuffer,[out] VARIANT *ppCallInfoBuffer)
HRESULT None tapi3.get_CallInfoLong([in] CALLINFO_LONG CallInfoLong,[out] long *plCallInfoLongVal)
HRESULT None tapi3.get_CallInfoString([in] CALLINFO_STRING CallInfoString,[out] BSTR *ppCallInfoString)
HRESULT None tapi3.get_CallingCards([out] VARIANT *pVariant)
HRESULT None tapi3.get_Call([out] ITCallInfo **ppCall)
HRESULT None tapi3.get_Call([out] ITCallInfo **ppCallInfo)
HRESULT None tapi3.get_Calls([out] VARIANT *pVariant)
HRESULT None tapi3.get_CallState([out] CALL_STATE *pCallState)
HRESULT None tapi3.get_CallTreatments([out] VARIANT *pVariant)
HRESULT None tapi3.get_Cause([out] CALL_MEDIA_EVENT_CAUSE *pCause)
HRESULT None tapi3.get_Cause([out] CALL_STATE_EVENT_CAUSE *pCEC)
HRESULT None tapi3.get_CLSID([out] BSTR *pCLSID)
HRESULT None tapi3.get_Company([out] BSTR *pCompany)
HRESULT None tapi3.get_CompletionMessages([out] VARIANT *pVariant)
HRESULT None tapi3.get_ControllingTerminal([out] ITTerminal **ppControllingTerminal)
HRESULT None tapi3.get_CurrentForwardInfo([out] ITForwardInformation **ppForwardInfo)
HRESULT None tapi3.get_DestAddress([out] BSTR *ppDestAddress)
HRESULT None tapi3.GetDevConfig([in] BSTR pDeviceClass,[out] DWORD *pdwSize,[out] BYTE **ppDeviceConfig)
HRESULT None tapi3.get_DeviceClasses([out] VARIANT *pVariant)
HRESULT None tapi3.get_DialableAddress([out] BSTR *pDialableAddress)
HRESULT None tapi3.get_DigitMode([out] TAPI_DIGITMODE *pDigitMode)
HRESULT None tapi3.get_Digits([out] BSTR *ppDigits)
HRESULT None tapi3.get_Direction([out] TERMINAL_DIRECTION *pDirection)
HRESULT None tapi3.get_Direction([out] TMGR_DIRECTION *pDirection)
HRESULT None tapi3.get_Display([out] BSTR *pbstrDisplay)
HRESULT None tapi3.get_DoNotDisturb([out] VARIANT_BOOL *pfDoNotDisturb)
HRESULT None tapi3.get_EmptyAudioFormatForScripting([out] ITScriptableAudioFormat **ppAudioFormat)
HRESULT None tapi3.get_Error([out] HRESULT *phrError)
HRESULT None tapi3.get_Error([out] HRESULT *phrErrorCode)
HRESULT None tapi3.get_EventFilter([in] TAPI_EVENT TapiEvent,[in] long lSubEvent,[out] VARIANT_BOOL *pEnable)
HRESULT None tapi3.get_EventFilter([out] long *plFilterMask)
HRESULT None tapi3.get_EventInterface([out] IDispatch **pEventInterface)
HRESULT None tapi3.get_Event([out] ACDQUEUE_EVENT *pEvent)
HRESULT None tapi3.get_Event([out] AGENTHANDLER_EVENT *pEvent)
HRESULT None tapi3.get_Event([out] AGENT_SESSION_EVENT *pEvent)
HRESULT None tapi3.get_Event([out] CALLHUB_EVENT *pEvent)
HRESULT None tapi3.get_Event([out] CALL_MEDIA_EVENT *pCallMediaEvent)
HRESULT None tapi3.get_Event([out] PARTICIPANT_EVENT *pParticipantEvent)
HRESULT None tapi3.get_Event([out] PHONE_EVENT *pEvent)
HRESULT None tapi3.get_Event([out] TAPIOBJECT_EVENT *pEvent)
HRESULT None tapi3.get_Format([out] AM_MEDIA_TYPE **ppmt)
HRESULT None tapi3.get_FormatTag([out] long *pVal)
HRESULT None tapi3.get_ForwardTypeDestination([in] long ForwardType,[out] BSTR *ppDestAddress)
HRESULT None tapi3.get_GatherTermination([out] TAPI_GATHERTERM *pGatherTermination)
HRESULT None tapi3.get_GenerationTermination([out] long *plGenerationTermination)
HRESULT None tapi3.get_HookSwitchDevice([out] PHONE_HOOK_SWITCH_DEVICE *pDevice)
HRESULT None tapi3.get_HookSwitchState([in] PHONE_HOOK_SWITCH_DEVICE HookSwitchDevice,[out] PHONE_HOOK_SWITCH_STATE *pHookSwitchState)
HRESULT None tapi3.get_HookSwitchState([out] PHONE_HOOK_SWITCH_STATE *pState)
HRESULT None tapi3.GetIDAsVariant([in] BSTR bstrDeviceClass,[out] VARIANT *pVarDeviceID)
HRESULT None tapi3.GetID([in] BSTR pDeviceClass,[out] DWORD *pdwSize,[out] BYTE **ppDeviceID)
HRESULT None tapi3.get_ID([out] BSTR *ppID)
HRESULT None tapi3.Get([in] AudioDeviceProperty Property,[out] long *plValue,[out] TAPIControlFlags *plFlags)
HRESULT None tapi3.Get([in] AudioSettingsProperty Property,[out] long *plValue,[out] TAPIControlFlags *plFlags)
HRESULT None tapi3.Get([in] StreamQualityProperty Property,[out] long *plValue,[out] TAPIControlFlags *plFlags)
HRESULT None tapi3.get_LampMode([in] long lLampID,[out] PHONE_LAMP_MODE *pLampMode)
HRESULT None tapi3.get_LocalParticipantTypedInfo([in] PARTICIPANT_TYPED_INFO InfoType,[out] BSTR *ppInfo)
HRESULT None tapi3.get_Locations([out] VARIANT *pVariant)
HRESULT None tapi3.get_LongestEverWaitTime([out] long *plWaitTime)
HRESULT None tapi3.get_LongestTimeToAnswer([out] long *plAnswerTime)
HRESULT None tapi3.get_lParam1([out] long *pParam1)
HRESULT None tapi3.get_lParam2([out] long *pParam2)
HRESULT None tapi3.get_lParam3([out] long *pParam3)
HRESULT None tapi3.get_MeasurementPeriod([out] long *plPeriod)
HRESULT None tapi3.get_MediaFormat([out] AM_MEDIA_TYPE **ppmt)
HRESULT None tapi3.get_MediaState([out] TERMINAL_MEDIA_STATE *pTerminalMediaState)
HRESULT None tapi3.get_MediaTypes([out] long *plMediaType)
HRESULT None tapi3.get_MediaTypes([out] long *pMediaTypes)
HRESULT None tapi3.get_MessageWaiting([out] VARIANT_BOOL *pfMessageWaiting)
HRESULT None tapi3.get_Name([out] BSTR *pName)
HRESULT None tapi3.get_Name([out] BSTR *ppName)
HRESULT None tapi3.get_NumberGathered([out] BSTR *ppNumber)
HRESULT None tapi3.get_NumberOfACDCalls([out] long *plCalls)
HRESULT None tapi3.get_NumberOfCalls([out] long *plCalls)
HRESULT None tapi3.get_NumberOfOutgoingCalls([out] long *plCalls)
HRESULT None tapi3.get_OverallCallRate([out] CURRENCY *pcyCallrate)
HRESULT None tapi3.get_ParticipantTypedInfo([in] PARTICIPANT_TYPED_INFO InfoType,[out] BSTR *ppInfo)
HRESULT None tapi3.GetPhoneCapsBuffer([in] PHONECAPS_BUFFER pcbCaps,[out] DWORD *pdwSize,[out] BYTE **ppPhoneCapsBuffer)
HRESULT None tapi3.get_PhoneCapsBuffer([in] PHONECAPS_BUFFER pcbCaps,[out] VARIANT *pVarBuffer)
HRESULT None tapi3.get_PhoneCapsLong([in] PHONECAPS_LONG pclCap,[out] long *plCapability)
HRESULT None tapi3.get_PhoneCapsString([in] PHONECAPS_STRING pcsCap,[out] BSTR *ppCapability)
HRESULT None tapi3.GetPhoneFromTerminal([in] ITTerminal *pTerminal,[out] ITPhone **ppPhone)
HRESULT None tapi3.get_PhoneHandlingEnabled([out] VARIANT_BOOL *pfEnabled)
HRESULT None tapi3.get_Phone([out] ITPhone **ppPhone)
HRESULT None tapi3.get_Phones([out] VARIANT *pPhones)
HRESULT None tapi3.get_PreferredAddresses([out] VARIANT *pAddresses)
HRESULT None tapi3.get_PreferredPhones([out] VARIANT *pPhones)
HRESULT None tapi3.get_Privilege([out] CALL_PRIVILEGE *pPrivilege)
HRESULT None tapi3.get_Privilege([out] PHONE_PRIVILEGE *pPrivilege)
HRESULT None tapi3.get_Queues([out] VARIANT *pVariant)
HRESULT None tapi3.GetRange([in] AudioSettingsProperty Property,[out] long *plMin,[out] long *plMax,[out] long *plSteppingDelta,[out] long *plDefault,[out] TAPIControlFlags *plFlags)
HRESULT None tapi3.GetRange([in] StreamQualityProperty Property,[out] long *plMin,[out] long *plMax,[out] long *plSteppingDelta,[out] long *plDefault,[out] TAPIControlFlags *plFlags)
HRESULT None tapi3.get_RequestMode([out] long *plRequestMode)
HRESULT None tapi3.get_Ringer([out] VARIANT_BOOL *pfRinging)
HRESULT None tapi3.get_RingMode([out] long *plRingMode)
HRESULT None tapi3.get_RingVolume([out] long *plRingVolume)
HRESULT None tapi3.get_SelectedCalls([out] VARIANT *pVariant)
HRESULT None tapi3.get_ServiceProviderName([out] BSTR *ppName)
HRESULT None tapi3.get_SessionDuration([out] long *plDuration)
HRESULT None tapi3.get_SessionStartTime([out] DATE *pdateSessionStart)
HRESULT None tapi3.get_State([out] ADDRESS_STATE *pAddressState)
HRESULT None tapi3.get_State([out] AGENT_SESSION_STATE *pSessionState)
HRESULT None tapi3.get_State([out] AGENT_STATE *pAgentState)
HRESULT None tapi3.get_State([out] CALLHUB_STATE *pState)
HRESULT None tapi3.get_State([out] CALL_STATE *pCallState)
HRESULT None tapi3.get_State([out] TERMINAL_MEDIA_STATE *pState)
HRESULT None tapi3.get_Status([in] ITStream *pITStream,[out] VARIANT_BOOL *pStatus)
HRESULT None tapi3.get_Stream([out] ITStream **ppStream)
HRESULT None tapi3.get_Streams([out] VARIANT *pVariant)
HRESULT None tapi3.get_TAPIObject([out] ITTAPI **ppTapiObject)
HRESULT None tapi3.get_TAPIObject([out] ITTAPI **ppTAPIObject)
HRESULT None tapi3.get_TerminalClasses([out] VARIANT *pTerminals)
HRESULT None tapi3.GetTerminalClassInfo([in] BSTR bstrSuperclass)
HRESULT None tapi3.get_TerminalClass([out] BSTR *pTerminalClass)
HRESULT None tapi3.get_Terminal([out] ITTerminal **ppTerminal)
HRESULT None tapi3.get_Terminals([in] ITAddress *pAddress,[out] VARIANT *pTerminals)
HRESULT None tapi3.get_TickCount([out] long *plTickCount)
HRESULT None tapi3.get_Tone([out] PHONE_TONE *pTone)
HRESULT None tapi3.get_TotalACDCallTime([out] long *plCallTime)
HRESULT None tapi3.get_TotalACDTalkTime([out] long *plTalkTime)
HRESULT None tapi3.get_TotalCallTime([out] long *plCallTime)
HRESULT None tapi3.get_TotalTalkTime([out] long *plTalkTime)
HRESULT None tapi3.get_TotalWrapUpTime([out] long *plWrapUpTime)
HRESULT None tapi3.get_Track([out] ITFileTrack **ppTrackTerminal)
HRESULT None tapi3.get_UsableAddresses([out] VARIANT *pVariant)
HRESULT None tapi3.get_User([out] BSTR *ppUser)
HRESULT None tapi3.get_Version([out] BSTR *pVersion)
HRESULT None tapi3.get_Volume([out] long *plVolume)
HRESULT None tapi3.get_WaveId([out] long *plWaveId)
HRESULT None tapi3.HandoffDirect([in] BSTR pApplicationName)
HRESULT None tapi3.HandoffIndirect([in] long lMediaType)
HRESULT None tapi3.Hold([in] VARIANT_BOOL fHold)
HRESULT None tapi3.MonitorMedia([in] long lMediaType)
HRESULT None tapi3.NegotiateExtVersion([in] long lLowVersion,[in] long lHighVersion,[out] long *plExtVersion)
HRESULT None tapi3.Next([in] ULONG celt,[out] BSTR *ppStrings,[in None None,out] ULONG *pceltFetched)
HRESULT None tapi3.Next([in] ULONG celt,[out] ITACDGroup **ppElements,[in None None,out] ULONG *pceltFetched)
HRESULT None tapi3.Next([in] ULONG celt,[out] ITAgentHandler **ppElements,[out] ULONG *pceltFetched)
HRESULT None tapi3.Next([in] ULONG celt,[out] ITCallingCard **ppElements,[out] ULONG *pceltFetched)
HRESULT None tapi3.Next([in] ULONG celt,[out] ITLocationInfo **ppElements,[out] ULONG *pceltFetched)
HRESULT None tapi3.Next([in] ULONG celt,[out] ITPluggableTerminalClassInfo **ppElements,[in None None,out] ULONG *pceltFetched)
HRESULT None tapi3.Next([in] ULONG celt,[out] ITTerminal **ppElements,[out] ULONG *pceltFetched)
HRESULT None tapi3.Open([in] PHONE_PRIVILEGE Privilege)
HRESULT None tapi3.ParkDirect([in] BSTR pParkAddress)
HRESULT None tapi3.ParkIndirect([out] BSTR *ppNonDirAddress)
HRESULT None tapi3.Pickup([in] BSTR pGroupID)
HRESULT None tapi3.put_AudioFormatForScripting([in] ITScriptableAudioFormat *pAudioFormat)
HRESULT None tapi3.put_AutoDialtone([in] VARIANT_BOOL fEnabled)
HRESULT None tapi3.put_AutoEndOfNumberTimeout([in] long lTimeout)
HRESULT None tapi3.put_AutoKeypadTones([in] VARIANT_BOOL fEnabled)
HRESULT None tapi3.put_AutoKeypadTonesMinimumDuration([in] long lDuration)
HRESULT None tapi3.put_AutoStopRingOnOffHook([in] VARIANT_BOOL fEnabled)
HRESULT None tapi3.put_AutoStopTonesOnOnHook([in] VARIANT_BOOL fEnabled)
HRESULT None tapi3.put_AutoVolumeControl([in] VARIANT_BOOL fEnabled)
HRESULT None tapi3.put_AutoVolumeControlRepeatDelay([in] long lDelay)
HRESULT None tapi3.put_AutoVolumeControlRepeatPeriod([in] long lPeriod)
HRESULT None tapi3.put_AutoVolumeControlStep([in] long lStepSize)
HRESULT None tapi3.put_ButtonFunction([in] long lButtonID,[in] PHONE_BUTTON_FUNCTION ButtonFunction)
HRESULT None tapi3.put_ButtonMode([in] long lButtonID,[in] PHONE_BUTTON_MODE ButtonMode)
HRESULT None tapi3.put_ButtonText([in] long lButtonID,[in] BSTR bstrButtonText)
HRESULT None tapi3.put_CallInfoLong([in] CALLINFO_LONG CallInfoLong,[in] long lCallInfoLongVal)
HRESULT None tapi3.put_CallInfoString([in] CALLINFO_STRING CallInfoString,[in] BSTR pCallInfoString)
HRESULT None tapi3.put_CLSID([in] BSTR bstrCLSID)
HRESULT None tapi3.put_Company([in] BSTR bstrCompany)
HRESULT None tapi3.put_Direction([in] TMGR_DIRECTION nDirection)
HRESULT None tapi3.put_DoNotDisturb([in] VARIANT_BOOL fDoNotDisturb)
HRESULT None tapi3.put_EventFilter([in] long lFilterMask)
HRESULT None tapi3.put_EventFilter([in] TAPI_EVENT TapiEvent,[in] long lSubEvent,[in] VARIANT_BOOL bEnable)
HRESULT None tapi3.put_Frequency([in] long lFrequency)
HRESULT None tapi3.put_HookSwitchState([in] PHONE_HOOK_SWITCH_DEVICE HookSwitchDevice,[in] PHONE_HOOK_SWITCH_STATE HookSwitchState)
HRESULT None tapi3.put_LampMode([in] long lLampID,[in] PHONE_LAMP_MODE LampMode)
HRESULT None tapi3.put_LocalParticipantTypedInfo([in] PARTICIPANT_TYPED_INFO InfoType,[in] BSTR ppInfo)
HRESULT None tapi3.put_MediaTypes([in] long nMediaTypes)
HRESULT None tapi3.put_MessageWaiting([in] VARIANT_BOOL fMessageWaiting)
HRESULT None tapi3.put_PhoneHandlingEnabled([in] VARIANT_BOOL fEnabled)
HRESULT None tapi3.put_RingMode([in] long lRingMode)
HRESULT None tapi3.put_RingVolume([in] long lRingVolume)
HRESULT None tapi3.put_State([in] AGENT_SESSION_STATE SessionState)
HRESULT None tapi3.put_State([in] AGENT_STATE AgentState)
HRESULT None tapi3.put_Status([in] ITStream *pITStream,[in] VARIANT_BOOL fEnable)
HRESULT None tapi3.put_TerminalClass([in] BSTR bstrTerminalClass)
HRESULT None tapi3.put_Version([in] BSTR bstrVersion)
HRESULT None tapi3.put_Volume([in] long lVolume)
HRESULT None tapi3.QueryDispatchInterface([in] BSTR pIID,[in] IDispatch *pInterfaceToMap,[out] IDispatch **ppReturnedInterface)
HRESULT None tapi3.RegisterCallNotifications([in] ITAddress *pAddress,[in] VARIANT_BOOL fMonitor,[in] VARIANT_BOOL fOwner,[in] long lMediaTypes,[in] long lCallbackInstance,[out] long *plRegister)
HRESULT None tapi3.RegisterSink([in] ITPluggableTerminalEventSink *pEventSink)
HRESULT None tapi3.Remove([in] long Index)
HRESULT None tapi3.RequestTerminal([in] BSTR bstrTerminalClassGUID,[in] long lMediaType,[in] TERMINAL_DIRECTION Direction,[out] ITTerminal **ppTerminal)
HRESULT None tapi3.SelectCall([in] ITCallInfo *pCall,[in] VARIANT_BOOL fSelectDefaultTerminals)
HRESULT None tapi3.SetApplicationPriority([in] BSTR pAppFilename,[in] long lMediaType,[in] VARIANT_BOOL fPriority)
HRESULT None tapi3.SetAssistedTelephonyPriority([in] BSTR pAppFilename,[in] VARIANT_BOOL fPriority)
HRESULT None tapi3.SetCallInfoBuffer([in] CALLINFO_BUFFER CallInfoBuffer,[in] DWORD dwSize,[in] BYTE *pCallInfoBuffer)
HRESULT None tapi3.SetDefaultCapabilityPreferrence([in] DWORD dwNumCaps,[in] H245_CAPABILITY *pCapabilities,[in] DWORD *pWeights)
HRESULT None tapi3.SetDevConfig([in] BSTR pDeviceClass,[in] DWORD dwSize,[in] BYTE *pDeviceConfig)
HRESULT None tapi3.SetDisplay([in] long lRow,[in] long lColumn,[in] BSTR bstrDisplay)
HRESULT None tapi3.SetForwardType([in] long ForwardType,[in] BSTR pDestAddress,[in] BSTR pCallerAddress)
HRESULT None tapi3.Set([in] AudioDeviceProperty Property,[in] long lValue,[in] TAPIControlFlags lFlags)
HRESULT None tapi3.Set([in] CallQualityProperty Property,[in] long lValue,[in] TAPIControlFlags lFlags)
HRESULT None tapi3.Set([in] StreamQualityProperty Property,[in] long lValue,[in] TAPIControlFlags lFlags)
HRESULT None tapi3.SetMediaType([in] long lMediaType)
HRESULT None tapi3.SetQOS([in] long lMediaType,[in] QOS_SERVICE_LEVEL ServiceLevel)
HRESULT None tapi3.Skip([in] ULONG celt)
HRESULT None tapi3.StartRinger([in] long lRingMode,[in] long lDuration)
HRESULT None tapi3.StartTone([in] PHONE_TONE Tone,[in] long lDuration)
HRESULT None tapi3.SwapHold([in] ITBasicCallControl *pCall)
HRESULT None tapi3.SwitchTerminalToSubStream([in] ITTerminal *pITTerminal,[in] ITSubStream *pITSubStream)
HRESULT None tapi3.Transfer([in] ITBasicCallControl *pCall,[in] VARIANT_BOOL fSync)
HRESULT None tapi3.UnregisterNotifications([in] long lRegister)
HRESULT None tapi3.UnselectCall([in] ITCallInfo *pCall)
HRESULT None taskschd.Create([in] TASK_TRIGGER_TYPE2 type,[out] ITrigger **ppTrigger)
HRESULT None taskschd.get_ConnectedDomain([out] BSTR *pDomain)
HRESULT None taskschd.get_Connected([out] VARIANT_BOOL *pConnected)
HRESULT None taskschd.get_Definition([out] ITaskDefinition **ppDefinition)
HRESULT None taskschd.get_Enabled([out] VARIANT_BOOL *pEnabled)
HRESULT None taskschd.GetFolder([in] BSTR path,[out] ITaskFolder **ppFolder)
HRESULT None taskschd.get_HighestVersion([out] DWORD *pVersion)
HRESULT None taskschd.GetInstances(LONG flags None,[out] IRunningTaskCollection **ppRunningTasks)
HRESULT None taskschd.get_Item([in] long index,[out] ITrigger **ppTrigger)
HRESULT None taskschd.get_LastRunTime([out] DATE *pLastRunTime)
HRESULT None taskschd.get_LastTaskResult([out] HRESULT *pLastTaskResult)
HRESULT None taskschd.get_Name([out] BSTR *pName)
HRESULT None taskschd.get__NewEnum([out] IUnknown **ppEnum)
HRESULT None taskschd.get_NextRunTime([out] DATE *pNextRunTime)
HRESULT None taskschd.get_NumberOfMissedRuns([out] DWORD *pNumberOfMissedRuns)
HRESULT None taskschd.get_Path([out] BSTR *pPath)
HRESULT None taskschd.GetSecurityDescriptor(LONG securityInformation None,[out None None,retval] BSTR *pSddl)
HRESULT None taskschd.get_State([out] TASK_STATE *pState)
HRESULT None taskschd.get_TargetServer([out] BSTR *pServer)
HRESULT None taskschd.get_Type([out] TASK_ACTION_TYPE *pType)
HRESULT None taskschd.get_Type([out] TASK_TRIGGER_TYPE2 *pType)
HRESULT None taskschd.get_Xml([out] BSTR *pXml)
HRESULT None taskschd.put_AllowHardTerminate([in] VARIANT_BOOL allowHardTerminate)
HRESULT None taskschd.put_DeleteExpiredTaskAfter([in] BSTR expirationDelay)
HRESULT None taskschd.put_DisplayName([in] BSTR name)
HRESULT None taskschd.put_Enabled([in] VARIANT_BOOL enabled)
HRESULT None taskschd.put_EndBoundary([in] BSTR end)
HRESULT None taskschd.put_ExecutionTimeLimit([in] BSTR timelimit)
HRESULT None taskschd.put_Id([in] BSTR id)
HRESULT None taskschd.put_MessageBody([in] BSTR messageBody)
HRESULT None taskschd.put_MultipleInstances([in] TASK_INSTANCES_POLICY policy)
HRESULT None taskschd.put_RestartCount([in] int restartCount)
HRESULT None taskschd.put_RestartInterval([in] BSTR restartInterval)
HRESULT None taskschd.put_RunOnlyIfIdle([in] VARIANT_BOOL runOnlyIfIdle)
HRESULT None taskschd.put_RunOnlyIfNetworkAvailable([in] VARIANT_BOOL runOnlyIfNetworkAvailable)
HRESULT None taskschd.put_Settings([in] ITaskSettings *pSettings)
HRESULT None taskschd.put_Source([in] BSTR source)
HRESULT None taskschd.put_Source([in] BSTR uri)
HRESULT None taskschd.put_StartBoundary([in] BSTR start)
HRESULT None taskschd.put_StartWhenAvailable([in] VARIANT_BOOL startWhenAvailable)
HRESULT None taskschd.put_To([in] BSTR to)
HRESULT None taskschd.put_ValueQueries([in] ITaskNamedValueCollection *pNamedXPaths)
HRESULT None taskschd.put_XmlText([in] BSTR text)
HRESULT None taskschd.RegisterTaskDefinition([in] BSTR path,[in] ITaskDefinition *pDefinition,[in] LONG flags,[in] VARIANT userId,[in] VARIANT password,[in] TASK_LOGON_TYPE logonType,[in None None,optional] VARIANT sddl,[out] IRegisteredTask **ppTask)
HRESULT None taskschd.RunEx([in] VARIANT params,[in] TASK_RUN_FLAGS flags,[in] LONG sessionID,[in] BSTR user,[out None None,optional] IRunningTask **ppRunningTask)
HRESULT None taskschd.Run([in] VARIANT params,[out None None,optional] IRunningTask **ppRunningTask)
HRESULT None twinapi.ComputeApplicationSize([out] SIZE *applicationSizePixels)
HRESULT None twinapi.GetApplicationSizeBounds([out] SIZE *minApplicationSizePixels,[out] SIZE *maxApplicationSizePixels)
HRESULT None twinapi.GetApplicationViewOrientation([out] APPLICATION_VIEW_ORIENTATION *viewOrientation)
HRESULT None twinapi.SetApplicationViewState([in] APPLICATION_VIEW_STATE viewState)
HRESULT None uiautomationcore.get_TextContainer([out None None,retval None None,optional] IRawElementProviderSimple **ppRetVal)
HRESULT None updateendpointauth.TokenData([out] BSTR *pszTokenData)
HRESULT None updateendpointauth.TokenType([out] UpdateEndpointAuthTokenType *pTokenType)
HRESULT None upnp.GetDocumentURL([out] BSTR *pbstrDocument)
HRESULT None upnp.Id([out] BSTR *pbstrId)
HRESULT None upnp.ServiceTypeIdentifier([out] BSTR *pVal)
HRESULT None url.MIMEAssociationDialogA(HWND hwndParent None,DWORD dwInFlags None,PCTSTR pcszFile None,PCTSTR pcszMIMEContentType None,_Out_ PTSTR pszAppBuf,UINT ucAppBufLen None)
HRESULT None url.MIMEAssociationDialog(HWND hwndParent None,DWORD dwInFlags None,PCTSTR pcszFile None,PCTSTR pcszMIMEContentType None,_Out_ PTSTR pszAppBuf,UINT ucAppBufLen None)
HRESULT None url.MIMEAssociationDialogW(HWND hwndParent None,DWORD dwInFlags None,PCTSTR pcszFile None,PCTSTR pcszMIMEContentType None,_Out_ PTSTR pszAppBuf,UINT ucAppBufLen None)
HRESULT None urlmon.CreateAsyncBindCtx(_In_ DWORD reserved,_In_ IBindStatusCallback *pBSCb,_In_ IEnumFORMATETC *pEFetc,_Out_ IBindCtx **ppBC)
HRESULT None urlmon.CreateFormatEnumerator(_In_ UINT cfmtetc,_In_ FORMATETC *rgfmtetc,_Out_ IEnumFORMATETC **ppenumfmtetc)
HRESULT None urlmon.CreateURLMonikerEx(IMoniker *pMkCtx None,LPCWSTR szURL None,IMoniker **ppmk None,DWORD dwFlags None)
HRESULT None urlmon.GetBindInfo([out] DWORD *grfBINDF,[in None None,out] BINDINFO *pbindinfo)
HRESULT None urlmon.GetWindow([out] HWND *phwnd)
HRESULT None urlmon.OnDataAvailable([in] DWORD grfBSCF,[in] DWORD dwSize,[in] FORMATETC *pformatetc,[in] STGMEDIUM *pstgmed)
HRESULT None urlmon.OnStartBinding([in] DWORD dwReserved,[in] IBinding *pib)
HRESULT None urlmon.RegisterBindStatusCallback(_In_ IBindCtx *pbc,_In_ IBindStatusCallback *pbsc,_Out_ IBindStatusCallback **ppbscPrevious,_Reserved_ DWORD dwReserved)
HRESULT None urlmon.SetSecuritySite([in] IInternetSecurityMgrSite *pSite)
HRESULT None url.TranslateURLA(PCTSTR pcszURL None,DWORD dwInFlags None,_Out_ PTSTR *ppszTranslatedURL)
HRESULT None url.TranslateURL(PCTSTR pcszURL None,DWORD dwInFlags None,_Out_ PTSTR *ppszTranslatedURL)
HRESULT None url.TranslateURLW(PCTSTR pcszURL None,DWORD dwInFlags None,_Out_ PTSTR *ppszTranslatedURL)
HRESULT None url.URLAssociationDialogA(HWND hwndParent None,DWORD dwInFlags None,PTCSTR pcszFile None,PTCSTR pcszURL None,_Out_ PTSTR pszAppBuf,UINT ucAppBufLen None)
HRESULT None url.URLAssociationDialog(HWND hwndParent None,DWORD dwInFlags None,PTCSTR pcszFile None,PTCSTR pcszURL None,_Out_ PTSTR pszAppBuf,UINT ucAppBufLen None)
HRESULT None url.URLAssociationDialogW(HWND hwndParent None,DWORD dwInFlags None,PTCSTR pcszFile None,PTCSTR pcszURL None,_Out_ PTSTR pszAppBuf,UINT ucAppBufLen None)
HRESULT None userenv.RSoPAccessCheckByType(_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_ PSID pPrincipalSelfSid,_In_ PRSOPTOKEN pRsopToken,_In_ DWORD dwDesiredAccessMask,_In_ POBJECT_TYPE_LIST pObjectTypeList,_In_ DWORD ObjectTypeListLength,_In_ PGENERIC_MAPPING pGenericMapping,_In_ PPRIVILEGE_SET pPrivilegeSet,_In_ LPDWORD pdwPrivilegeSetLength,_Out_ LPDWORD pdwGrantedAccessMask,_Out_ LPBOOL pbAccessStatus)
HRESULT None userenv.RSoPFileAccessCheck(_In_ LPWSTR pszFileName,_In_ PRSOPTOKEN pRsopToken,_In_ DWORD dwDesiredAccessMask,_Out_ LPDWORD pdwGrantedAccessMask,_Out_ LPBOOL pbAccessStatus)
HRESULT None userenv.RSoPResetPolicySettingStatus(_In_ DWORD dwFlags,_In_ IWbemServices *pServices,_In_ IWbemClassObject *pSettingInstance)
HRESULT None userenv.RSoPSetPolicySettingStatus(_In_ DWORD dwFlags,_In_ IWbemServices *pServices,_In_ IWbemClassObject *pSettingInstance,_In_ DWORD nInfo,_In_ POLICYSETTINGSTATUSINFO *pStatus)
HRESULT None usp10.ScriptFreeCache(_Inout_ SCRIPT_CACHE *psc)
HRESULT None usp10.ScriptGetFontFeatureTags(_In_opt_ HDC hdc,_Inout_ SCRIPT_CACHE *psc,_In_opt_ SCRIPT_ANALYSIS *psa,_In_ OPENTYPE_TAG tagScript,_In_ OPENTYPE_TAG tagLangSys,_In_ int cMaxTags,_Out_ OPENTYPE_TAG *pFeatureTags,_Out_ int *pcTags)
HRESULT None usp10.ScriptGetFontLanguageTags(_In_opt_ HDC hdc,_Inout_ SCRIPT_CACHE *psc,_In_opt_ SCRIPT_ANALYSIS *psa,_In_ OPENTYPE_TAG tagScript,_In_ int cMaxTags,_Out_ OPENTYPE_TAG *pLangSysTags,_Out_ int *pcTags)
HRESULT None usp10.ScriptGetFontProperties(_In_ HDC hdc,_Inout_ SCRIPT_CACHE *psc,_Out_ SCRIPT_FONTPROPERTIES *sfp)
HRESULT None usp10.ScriptGetGlyphABCWidth(_In_ HDC hdc,_Inout_ SCRIPT_CACHE *psc,_In_ WORD wGlyph,_Out_ ABC *pABC)
HRESULT None usp10.ScriptPositionSingleGlyph(_In_opt_ HDC hdc,_Inout_ SCRIPT_CACHE *psc,_In_opt_ SCRIPT_ANALYSIS *psa,_In_ OPENTYPE_TAG tagScript,_In_ OPENTYPE_TAG tagLangSys,_In_ OPENTYPE_TAG tagFeature,_In_ LONG lParameter,_In_ WORD wGlyphId,_In_ int iAdvance,_In_ GOFFSET Goffset,_Out_ int *piOutAdvance,_Out_ GOFFSET *pOutGoffset)
HRESULT None usp10.ScriptRecordDigitSubstitution(_In_ LCID Locale,_Out_ SCRIPT_DIGITSUBSTITUTE *psds)
HRESULT None usp10.ScriptStringCPtoX(_In_ SCRIPT_STRING_ANALYSIS ssa,_In_ int icp,_In_ BOOL fTrailing,_Out_ int *pX)
HRESULT None usp10.ScriptStringFree(_Inout_ SCRIPT_STRING_ANALYSIS *pssa)
HRESULT None usp10.ScriptStringGetLogicalWidths(_In_ SCRIPT_STRING_ANALYSIS ssa,_Out_ int *piDx)
HRESULT None usp10.ScriptStringGetOrder(_In_ SCRIPT_STRING_ANALYSIS ssa,_Out_ UINT *puOrder)
HRESULT None usp10.ScriptStringValidate(_In_ SCRIPT_STRING_ANALYSIS ssa)
HRESULT None usp10.ScriptStringXtoCP(_In_ SCRIPT_STRING_ANALYSIS ssa,_In_ int iX,_Out_ int *piCh,_Out_ int *piTrailing)
HRESULT None usp10.ScriptSubstituteSingleGlyph(_In_opt_ HDC hdc,_Inout_ SCRIPT_CACHE *psc,_In_opt_ SCRIPT_ANALYSIS *psa,_In_ OPENTYPE_TAG tagScript,_In_ OPENTYPE_TAG tagLangSys,_In_ OPENTYPE_TAG tagFeature,_In_ LONG lParameter,_In_ WORD wGlyphId,_Out_ WORD *pwOutGlyphId)
HRESULT None uxtheme.BufferedPaintInit(void None None)
HRESULT None uxtheme.BufferedPaintStopAllAnimations(HWND hwnd None)
HRESULT None uxtheme.BufferedPaintUnInit(void None None)
HRESULT None uxtheme.CloseThemeData(_In_ HTHEME hTheme)
HRESULT None uxtheme.EnableThemeDialogTexture(_In_ HWND hwnd,_In_ DWORD dwFlags)
HRESULT None uxtheme.EnableTheming(_In_ BOOL fEnable)
HRESULT None uxtheme.EndBufferedAnimation(HANIMATIONBUFFER hbpAnimation None,BOOL fUpdateTarget None)
HRESULT None uxtheme.EndBufferedPaint(HPAINTBUFFER hBufferedPaint None,BOOL fUpdateTarget None)
HRESULT None uxtheme.GetBufferedPaintTargetRect(HPAINTBUFFER hBufferedPaint None,_Out_ RECT *prc)
HRESULT None uxtheme.GetCurrentThemeName(_Out_ LPWSTR pszThemeFileName,_In_ int dwMaxNameChars,_Out_ LPWSTR pszColorBuff,_In_ int cchMaxColorChars,_Out_ LPWSTR pszSizeBuff,_In_ int cchMaxSizeChars)
HRESULT None uxtheme.GetThemeBackgroundContentRect(_In_ HTHEME hTheme,_In_ HDC hdc,_In_ int iPartId,_In_ int iStateId,_In_ LPCRECT pBoundingRect,_Out_ LPRECT pContentRect)
HRESULT None uxtheme.GetThemeBackgroundExtent(_In_ HTHEME hTheme,_In_ HDC hdc,_In_ int iPartId,_In_ int iStateId,_In_ LPCRECT pContentRect,_Out_ LPRECT pExtentRect)
HRESULT None uxtheme.GetThemeBackgroundRegion(_In_ HTHEME hTheme,_In_ HDC hdc,_In_ int iPartId,_In_ int iStateId,_In_ LPCRECT pRect,_Out_ HRGN *pRegion)
HRESULT None uxtheme.GetThemeBitmap(_In_ HTHEME hTheme,_In_ int iPartId,_In_ int iStateId,_In_ int iPropId,_In_ ULONG dwFlags,_Out_ HBITMAP *phBitmap)
HRESULT None uxtheme.GetThemeDocumentationProperty(_In_ LPCWSTR pszThemeName,_In_ LPCWSTR pszPropertyName,_Out_ LPWSTR pszValueBuff,_In_ int cchMaxValChars)
HRESULT None uxtheme.GetThemeEnumValue(_In_ HTHEME hTheme,_In_ int iPartId,_In_ int iStateId,_In_ int iPropId,_Out_ int *piVal)
HRESULT None uxtheme.GetThemeFilename(_In_ HTHEME hTheme,_In_ int iPartId,_In_ int iStateId,_In_ int iPropId,_Out_ LPWSTR pszThemeFilename,_In_ int cchMaxBuffChars)
HRESULT None uxtheme.GetThemeFont(_In_ HTHEME hTheme,_In_ HDC hdc,_In_ int iPartId,_In_ int iStateId,_In_ int iPropId,_Out_ LOGFONTW *pFont)
HRESULT None uxtheme.GetThemeIntList(_In_ HTHEME hTheme,_In_ int iPartId,_In_ int iStateId,_In_ int iPropId,_Out_ INTLIST *pIntList)
HRESULT None uxtheme.GetThemeMargins(_In_ HTHEME hTheme,_In_ HDC hdc,_In_ int iPartId,_In_ int iStateId,_In_ int iPropId,_In_ LPRECT prc,_Out_ MARGINS *pMargins)
HRESULT None uxtheme.GetThemeMetric(_In_ HTHEME hTheme,_In_ HDC hdc,_In_ int iPartId,_In_ int iStateId,_In_ int iPropId,_Out_ int *piVal)
HRESULT None uxtheme.GetThemePosition(_In_ HTHEME hTheme,_In_ int iPartId,_In_ int iStateId,_In_ int iPropId,_Out_ POINT *pPoint)
HRESULT None uxtheme.GetThemePropertyOrigin(_In_ HTHEME hTheme,_In_ int iPartId,_In_ int iStateId,_In_ int iPropId,_Out_ PROPERTYORIGIN *pOrigin)
HRESULT None uxtheme.GetThemeRect(_In_ HTHEME hTheme,_In_ int iPartId,_In_ int iStateId,_In_ int iPropId,_Out_ LPRECT pRect)
HRESULT None uxtheme.GetThemeStream(_In_ HTHEME hTheme,_In_ int iPartId,_In_ int iStateId,_In_ int iPropId,_Out_ VOID **ppvStream,_Out_ DWORD *pcbStream,_In_ HINSTANCE hInst)
HRESULT None uxtheme.GetThemeString(_In_ HTHEME hTheme,_In_ int iPartId,_In_ int iStateId,_In_ int iPropId,_Out_ LPWSTR pszBuff,_In_ int cchMaxBuffChars)
HRESULT None uxtheme.GetThemeSysInt(_In_ HTHEME hTheme,_In_ int iIntID,_In_ int *piValue)
HRESULT None uxtheme.GetThemeSysString(_In_ HTHEME hTheme,_In_ int iStringID,_Out_ LPWSTR pszStringBuff,_In_ int cchMaxStringChars)
HRESULT None uxtheme.GetThemeTextExtent(_In_ HTHEME hTheme,_In_ HDC hdc,_In_ int iPartId,_In_ int iStateId,_In_ LPCWSTR pszText,_In_ int iCharCount,_In_ DWORD dwTextFlags,_In_ LPCRECT pBoundingRect,_Out_ LPRECT pExtentRect)
HRESULT None uxtheme.GetThemeTextMetrics(_In_ HTHEME hTheme,_In_ HDC hdc,_In_ int iPartId,_In_ int iStateId,_Out_ TEXTMETRIC *ptm)
HRESULT None uxtheme.GetThemeTransitionDuration(HTHEME hTheme None,int iPartId None,int iStateIdFrom None,int iStateIdTo None,int iPropId None,_Out_ DWORD *pdwDuration)
HRESULT None uxtheme.HitTestThemeBackground(_In_ HTHEME hTheme,_In_ HDC hdc,_In_ int iPartId,_In_ int iStateId,_In_ DWORD dwOptions,_In_ LPCRECT pRect,_In_ HRGN hrgn,_In_ POINT ptTest,_Out_ WORD *pwHitTestCode)
HRESULT None uxtheme.SetWindowTheme(_In_ HWND hwnd,_In_ LPCWSTR pszSubAppName,_In_ LPCWSTR pszSubIdList)
HRESULT None uxtheme.SetWindowThemeNonClientAttributes(_In_ HWND hwnd,_In_ DWORD dwMask,_In_ DWORD dwAttributes)
HRESULT None vssapi.CreateVssBackupComponents(_Out_ IVssBackupComponents **ppBackup)
HRESULT None vssapi.CreateVssExpressWriter(_Out_ IVssExpressWriter **ppWriter)
HRESULT None vssapi.IsVolumeSnapshotted(_In_ VSS_PWSZ pwszVolumeName,_Out_ BOOL *pbSnapshotsPresent,_Out_ LONG *plSnapshotCapability)
HRESULT None wbemsvc.Backup([in] LPCWSTR strBackupToFile,[in] long lFlags)
HRESULT None wiaservc.EnumChildItems([out] IEnumWiaItem **ppIEnumWiaItem)
HRESULT None wiaservc.GetRootItem([out] IWiaItem **ppIWiaItem)
HRESULT None wiaservc.idtGetExtendedTransferInfo([out] PWIA_EXTENDED_TRANSFER_INFO pExtendedTransferInfo)
HRESULT None winbio.EnumEnrollments( None None)
HRESULT None windowscodecs.CreateBitmapClipper([out] IWICBitmapClipper **ppIBitmapClipper)
HRESULT None windowscodecs.CreateBitmapFlipRotator([out] IWICBitmapFlipRotator **ppIBitmapFlipRotator)
HRESULT None windowscodecs.CreateBitmapScaler([out] IWICBitmapScaler **ppIBitmapScaler)
HRESULT None windowscodecs.CreateFormatConverter([out] IWICFormatConverter **ppIFormatConverter)
HRESULT None windowscodecs.CreateInstance([out] IWICFormatConverter **ppIConverter)
HRESULT None windowscodecs.CreateInstance([out] IWICMetadataReader **ppIReader)
HRESULT None windowscodecs.CreatePalette([out] IWICPalette **ppIPalette)
HRESULT None windowscodecs.CreateStream([out] IWICStream **ppIWICStream)
HRESULT None windowscodecsext.IWICColorTransform_Initialize_Proxy(_In_ IWICColorTransform *pIColorTransform,_In_ IWICBitmapSource *pIBitmapSource,_In_ IWICColorContext *pIContextSource,_In_ IWICColorContext *pIContextDest,_In_ REFWICPixelFormatGUID pixelFmtDest)
HRESULT None windowscodecs.FlipRotateSource(IWICBitmapSource *pBitmapSource None,WICBitmapTransformOptions options None,IWICBitmapFlipRotator **ppFlipRotator None)
HRESULT None windowscodecs.GetColorCount([out] UINT *pcCount)
HRESULT None windowscodecs.GetCount([out] UINT *pcCount)
HRESULT None windowscodecs.GetDataPointer([out] UINT *pcbBufferSize,[out] BYTE **ppbData)
HRESULT None windowscodecs.GetDcHuffmanTable(UINT scanIndex None,UINT tableIndex None,[out] DXGI_JPEG_AC_HUFFMAN_TABLE *pAcHuffmanTable)
HRESULT None windowscodecs.GetDecoderInfo([out] IWICBitmapDecoderInfo **ppIDecoderInfo)
HRESULT None windowscodecs.GetMetadataQueryWriter([out] IWICMetadataQueryWriter **ppIMetadataQueryWriter)
HRESULT None windowscodecs.GetNamedWhitePoint([out] WICNamedWhitePoint *pWhitePoint)
HRESULT None windowscodecs.GetPixelFormat([out] WICPixelFormatGUID *pPixelFormat)
HRESULT None windowscodecs.GetPreview([out] IWICBitmapSource **ppIBitmapSource)
HRESULT None windowscodecs.GetQuantizationTable(UINT scanIndex None,UINT tableIndex None,[out] DXGI_JPEG_QUANTIZATION_TABLE *pQuantizationTable)
HRESULT None windowscodecs.GetSize([out] UINT *puiWidth,[out] UINT *puiHeight)
HRESULT None windowscodecs.GetWhitePointKelvin([out] UINT *pWhitePointKelvin)
HRESULT None windowscodecs.GetWhitePointRGB([out] UINT *pRed,[out] UINT *pGreen,[out] UINT *pBlue)
HRESULT None windowscodecs.HasAlpha([out] BOOL *pfHasAlpha)
HRESULT None windowscodecs.IEnumString_Next_WIC_Proxy(_In_ IEnumString *THIS_PTR)
HRESULT None windowscodecs.IEnumString_Reset_WIC_Proxy(_In_ IEnumString *THIS_PTR,_In_ ULONG celt,_Out_ LPOLESTR *rgelt,_Out_ ULONG *pceltFetched)
HRESULT None windowscodecs.IPropertyBag2_Write_Proxy(_In_ IPropertyBag2 *THIS_PTR,_In_ ULONG cProperties,_In_ PROPBAG2 *ppropBag,_In_ VARIANT *pvarValue)
HRESULT None windowscodecs.IWICBitmapCodecInfo_DoesSupportAnimation_Proxy(_In_ IWICBitmapCodecInfo *THIS_PTR,_Out_ BOOL *pfSupportAnimation)
HRESULT None windowscodecs.IWICBitmapCodecInfo_DoesSupportLossless_Proxy(_In_ IWICBitmapCodecInfo *THIS_PTR,_Out_ BOOL *pfSupportLossless)
HRESULT None windowscodecs.IWICBitmapCodecInfo_DoesSupportMultiframe_Proxy(_In_ IWICBitmapCodecInfo *THIS_PTR,_Out_ BOOL *pfSupportMultiframe)
HRESULT None windowscodecs.IWICBitmapCodecInfo_GetContainerFormat_Proxy(_In_ IWICBitmapCodecInfo *THIS_PTR,_Out_ GUID *pguidContainerFormat)
HRESULT None windowscodecs.IWICBitmapCodecInfo_GetDeviceManufacturer_Proxy(_In_ IWICBitmapCodecInfo *THIS_PTR,_In_ UINT cchDeviceManufacturer,_Inout_ WCHAR *wzDeviceManufacturer,_Inout_ UINT *pcchActual)
HRESULT None windowscodecs.IWICBitmapCodecInfo_GetDeviceModels_Proxy(_In_ IWICBitmapCodecInfo *THIS_PTR,_In_ UINT cchDeviceModels,_Inout_ WCHAR *wzDeviceModels,_Inout_ UINT *pcchActual)
HRESULT None windowscodecs.IWICBitmapCodecInfo_GetFileExtensions_Proxy(_In_ IWICBitmapCodecInfo *THIS_PTR,_In_ UINT cchFileExtensions,_Inout_ WCHAR *wzFileExtensions,_Inout_ UINT *pcchActual)
HRESULT None windowscodecs.IWICBitmapCodecInfo_GetMimeTypes_Proxy(_In_ IWICBitmapCodecInfo *THIS_PTR,_In_ UINT cchMimeTypes,_Out_ WCHAR *wzMimeTypes,_Out_ UINT *pcchActual)
HRESULT None windowscodecs.IWICBitmapDecoder_CopyPalette_Proxy(_In_ IWICBitmapDecoder *THIS_PTR,_In_ IWICPalette *pIPalette)
HRESULT None windowscodecs.IWICBitmapDecoder_GetColorContexts_Proxy(_In_ IWICBitmapDecoder *THIS_PTR,_In_ UINT cCount,_Inout_ IWICColorContext **ppIColorContexts,_Out_ UINT *pcActualCount)
HRESULT None windowscodecs.IWICBitmapDecoder_GetDecoderInfo_Proxy(_In_ IWICBitmapDecoder *THIS_PTR,_Out_ IWICBitmapDecoderInfo **ppIDecoderInfo)
HRESULT None windowscodecs.IWICBitmapDecoder_GetFrameCount_Proxy(_In_ IWICBitmapDecoder *THIS_PTR,_Out_ UINT *pCount)
HRESULT None windowscodecs.IWICBitmapDecoder_GetFrame_Proxy(_In_ IWICBitmapDecoder *THIS_PTR,_In_ UINT index,_Out_ IWICBitmapFrameDecode **ppIBitmapFrame)
HRESULT None windowscodecs.IWICBitmapDecoder_GetMetadataQueryReader_Proxy(_In_ IWICBitmapDecoder *THIS_PTR,_Out_ IWICMetadataQueryReader **ppIMetadataQueryReader)
HRESULT None windowscodecs.IWICBitmapDecoder_GetPreview_Proxy(_In_ IWICBitmapDecoder *THIS_PTR,_Out_ IWICBitmapSource **ppIBitmapSource)
HRESULT None windowscodecs.IWICBitmapDecoder_GetThumbnail_Proxy(_In_ IWICBitmapDecoder *THIS_PTR,_Out_ IWICBitmapSource **ppIThumbnail)
HRESULT None windowscodecs.IWICBitmapEncoder_Commit_Proxy(_In_ IWICBitmapEncoder *THIS_PTR)
HRESULT None windowscodecs.IWICBitmapEncoder_CreateNewFrame_Proxy(_In_ IWICBitmapEncoder *THIS_PTR,_Out_ IWICBitmapFrameEncode **ppIFrameEncode,_Inout_ IPropertyBag2 **ppIEncoderOptions)
HRESULT None windowscodecs.IWICBitmapEncoder_GetEncoderInfo_Proxy(_In_ IWICBitmapEncoder *THIS_PTR,_Out_ IWICBitmapEncoderInfo **ppIEncoderInfo)
HRESULT None windowscodecs.IWICBitmapEncoder_GetMetadataQueryWriter_Proxy(_In_ IWICBitmapEncoder *THIS_PTR,_Out_ IWICMetadataQueryWriter **ppIMetadataQueryWriter)
HRESULT None windowscodecs.IWICBitmapEncoder_Initialize_Proxy(_In_ IWICBitmapEncoder *THIS_PTR,_In_ IStream *pIStream,_In_ WICBitmapEncoderCacheOption cacheOption)
HRESULT None windowscodecs.IWICBitmapEncoder_SetPalette_Proxy(_In_ IWICBitmapEncoder *THIS_PTR,_In_ IWICPalette *pIPalette)
HRESULT None windowscodecs.IWICBitmapEncoder_SetThumbnail_Proxy(_In_ IWICBitmapEncoder *THIS_PTR,_In_ IWICBitmapSource *pIThumbnail)
HRESULT None windowscodecs.IWICBitmapFlipRotator_Initialize_Proxy(_In_ IWICBitmapFlipRotator *THIS_PTR,_In_ IWICBitmapSource *pISource,_In_ WICBitmapTransformOptions options)
HRESULT None windowscodecs.IWICBitmapFrameDecode_GetColorContexts_Proxy(_In_ IWICBitmapFrameDecode *THIS_PTR,_In_ UINT cCount,_Inout_ IWICColorContext **ppIColorContexts,_Out_ UINT *pcActualCount)
HRESULT None windowscodecs.IWICBitmapFrameDecode_GetMetadataQueryReader_Proxy(_In_ IWICBitmapFrameDecode *THIS_PTR,_Out_ IWICMetadataQueryReader **ppIMetadataQueryReader)
HRESULT None windowscodecs.IWICBitmapFrameDecode_GetThumbnail_Proxy(_In_ IWICBitmapFrameDecode *THIS_PTR,_Out_ IWICBitmapSource **ppIThumbnail)
HRESULT None windowscodecs.IWICBitmapFrameEncode_Commit_Proxy(_In_ IWICBitmapFrameEncode *THIS_PTR)
HRESULT None windowscodecs.IWICBitmapFrameEncode_GetMetadataQueryWriter_Proxy(_In_ IWICBitmapFrameEncode *THIS_PTR,_Out_ IWICMetadataQueryWriter **ppIMetadataQueryWriter)
HRESULT None windowscodecs.IWICBitmapFrameEncode_Initialize_Proxy(_In_ IWICBitmapFrameEncode *THIS_PTR,_In_ IPropertyBag2 *pIEncoderOptions)
HRESULT None windowscodecs.IWICBitmapFrameEncode_SetColorContexts_Proxy(_In_ IWICBitmapFrameEncode *THIS_PTR,_In_ UINT cCount,_In_ IWICColorContext **ppIColorContext)
HRESULT None windowscodecs.IWICBitmapFrameEncode_SetSize_Proxy(_In_ IWICBitmapFrameEncode *THIS_PTR,_In_ UINT uiWidth,_In_ UINT uiHeight)
HRESULT None windowscodecs.IWICBitmapFrameEncode_SetThumbnail_Proxy(_In_ IWICBitmapFrameEncode *THIS_PTR,_In_ IWICBitmapSource *pIThumbnail)
HRESULT None windowscodecs.IWICBitmapFrameEncode_WriteSource_Proxy(_In_ IWICBitmapFrameEncode *THIS_PTR,_In_ IWICBitmapSource *pIBitmapSource,_In_ WICRect *prc)
HRESULT None windowscodecs.IWICBitmapLock_GetDataPointer_STA_Proxy(_In_ IWICBitmapLock *THIS_PTR,_Out_ UINT *pcbBufferSize,_Out_ BYTE **ppbData)
HRESULT None windowscodecs.IWICBitmapLock_GetStride_Proxy(_In_ IWICBitmapLock *THIS_PTR,_Out_ UINT *pcbStride)
HRESULT None windowscodecs.IWICBitmapScaler_Initialize_Proxy(_In_ IWICBitmapScaler *THIS_PTR,_In_ IWICBitmapSource *pISource,_In_ UINT uiWidth,_In_ UINT uiHeight,_In_ WICBitmapInterpolationMode mode)
HRESULT None windowscodecs.IWICBitmap_SetPalette_Proxy(_In_ IWICBitmap *THIS_PTR,_In_ IWICPalette *pIPalette)
HRESULT None windowscodecs.IWICBitmapSource_CopyPalette_Proxy(_In_ IWICBitmapSource *THIS_PTR,_In_ IWICPalette *pIPalette)
HRESULT None windowscodecs.IWICBitmapSource_GetPixelFormat_Proxy(_In_ IWICBitmapSource *THIS_PTR,_Out_ WICPixelFormatGUID *pPixelFormat)
HRESULT None windowscodecs.IWICBitmapSource_GetSize_Proxy(_In_ IWICBitmapSource *THIS_PTR,_Out_ UINT *puiWidth,_Out_ UINT *puiHeight)
HRESULT None windowscodecs.IWICComponentFactory_CreateQueryWriterFromBlockWriter_Proxy(_In_ IWICComponentFactory *THIS_PTR,_In_ IWICMetadataBlockWriter *pIBlockWriter,_Out_ IWICMetadataQueryWriter **ppIQueryWriter)
HRESULT None windowscodecs.IWICComponentInfo_GetAuthor_Proxy(_In_ IWICComponentInfo *THIS_PTR,_In_ UINT cchAuthor,_Inout_ WCHAR *wzAuthor,_Out_ UINT *pcchActual)
HRESULT None windowscodecs.IWICComponentInfo_GetCLSID_Proxy(_In_ IWICComponentInfo *THIS_PTR,_Out_ CLSID *pclsid)
HRESULT None windowscodecs.IWICComponentInfo_GetFriendlyName_Proxy(_In_ IWICComponentInfo *THIS_PTR,_In_ UINT cchFriendlyName,_Inout_ WCHAR *wzFriendlyName,_Out_ UINT *pcchActual)
HRESULT None windowscodecs.IWICComponentInfo_GetSpecVersion_Proxy(_In_ IWICComponentInfo *THIS_PTR,_In_ UINT cchSpecVersion,_Inout_ WCHAR *wzSpecVersion,_Out_ UINT *pcchActual)
HRESULT None windowscodecs.IWICComponentInfo_GetVersion_Proxy(_In_ IWICComponentInfo *THIS_PTR,_In_ UINT cchVersion,_Inout_ WCHAR *wzVersion,_Out_ UINT *pcchActual)
HRESULT None windowscodecs.IWICFastMetadataEncoder_Commit_Proxy(_In_ IWICFastMetadataEncoder *THIS_PTR)
HRESULT None windowscodecs.IWICFastMetadataEncoder_GetMetadataQueryWriter_Proxy(_In_ IWICBitmapFrameDecode *THIS_PTR,_Out_ IWICMetadataQueryWriter **ppIMetadataQueryWriter)
HRESULT None windowscodecs.IWICImagingFactory_CreateBitmapClipper_Proxy(_In_ IWICImagingFactory *pFactory,_Out_ IWICBitmapClipper **ppIBitmapClipper)
HRESULT None windowscodecs.IWICImagingFactory_CreateBitmapFlipRotator_Proxy(_In_ IWICImagingFactory *pFactory,_Out_ IWICBitmapFlipRotator **ppIBitmapFlipRotator)
HRESULT None windowscodecs.IWICImagingFactory_CreateBitmapFromHBITMAP_Proxy(_In_ IWICImagingFactory *pFactory,_In_ HBITMAP hBitmap,_In_ HPALETTE hPalette,_In_ WICBitmapAlphaChannelOption options,_Out_ IWICBitmap **ppIBitmap)
HRESULT None windowscodecs.IWICImagingFactory_CreateBitmapFromHICON_Proxy(_In_ IWICImagingFactory *pFactory,_In_ HICON hIcon,_Out_ IWICBitmap **ppIBitmap)
HRESULT None windowscodecs.IWICImagingFactory_CreateBitmapFromMemory_Proxy(_In_ IWICImagingFactory *pFactory,_In_ UINT uiWidth,_In_ UINT uiHeight,_In_ REFWICPixelFormatGUID pixelFormat,_In_ UINT cbStride,_In_ UINT cbBufferSize,_In_ BYTE *pbBuffer,_Out_ IWICBitmap **ppIBitmap)
HRESULT None windowscodecs.IWICImagingFactory_CreateBitmapFromSource_Proxy(_In_ IWICImagingFactory *pFactory,_In_ IWICBitmapSource *pIBitmapSource,_In_ WICBitmapCreateCacheOption option,_Out_ IWICBitmap **ppIBitmap)
HRESULT None windowscodecs.IWICImagingFactory_CreateBitmap_Proxy(_In_ IWICImagingFactory *pFactory,_In_ UINT uiWidth,_In_ UINT uiHeight,_In_ REFWICPixelFormatGUID pixelFormat,_In_ WICBitmapCreateCacheOption option,_Out_ IWICBitmap **ppIBitmap)
HRESULT None windowscodecs.IWICImagingFactory_CreateBitmapScaler_Proxy(_In_ IWICImagingFactory *pFactory,_Out_ IWICBitmapScaler **ppIBitmapScaler)
HRESULT None windowscodecs.IWICImagingFactory_CreateComponentInfo_Proxy(_In_ IWICImagingFactory *pFactory,_In_ REFCLSID clsidComponent,_Out_ IWICComponentInfo **ppIInfo)
HRESULT None windowscodecs.IWICImagingFactory_CreateFastMetadataEncoderFromDecoder_Proxy(_In_ IWICImagingFactory *pFactory,_In_ IWICBitmapDecoder *pIDecoder,_Out_ IWICFastMetadataEncoder **ppIFME)
HRESULT None windowscodecs.IWICImagingFactory_CreateFastMetadataEncoderFromFrameDecode_Proxy(_In_ IWICImagingFactory *pFactory,_In_ IWICBitmapFrameDecode *pIFrameDecoder,_Out_ IWICFastMetadataEncoder **ppIFME)
HRESULT None windowscodecs.IWICImagingFactory_CreateFormatConverter_Proxy(_In_ IWICImagingFactory *pFactory,_Out_ IWICFormatConverter **ppIFormatConverter)
HRESULT None windowscodecs.IWICImagingFactory_CreatePalette_Proxy(_In_ IWICImagingFactory *pFactory,_Out_ IWICPalette **ppIPalette)
HRESULT None windowscodecs.IWICImagingFactory_CreateStream_Proxy(_In_ IWICImagingFactory *pFactory,_Out_ IWICStream **ppIWICStream)
HRESULT None windowscodecs.IWICMetadataBlockReader_GetCount_Proxy(_In_ IWICMetadataBlockReader *THIS_PTR,_Out_ UINT *pcCount)
HRESULT None windowscodecs.IWICMetadataBlockReader_GetReaderByIndex_Proxy(_In_ IWICMetadataBlockReader *THIS_PTR,_In_ UINT nIndex,_Out_ IWICMetadataReader **ppIMetadataReader)
HRESULT None windowscodecs.IWICMetadataQueryReader_GetContainerFormat_Proxy(_In_ IWICMetadataQueryReader *THIS_PTR,_Out_ GUID *pguidContainerFormat)
HRESULT None windowscodecs.IWICMetadataQueryReader_GetEnumerator_Proxy(_In_ IWICMetadataQueryReader *THIS_PTR,_Out_ IEnumString **ppIEnumString)
HRESULT None windowscodecs.IWICMetadataQueryReader_GetLocation_Proxy(_In_ IWICMetadataQueryReader *THIS_PTR,_In_ UINT cchMaxLength,_Inout_ WCHAR *wzNamespace,_Out_ UINT *pcchActualLength)
HRESULT None windowscodecs.IWICMetadataQueryReader_GetMetadataByName_Proxy(_In_ IWICMetadataQueryReader *THIS_PTR,_In_ LPCWSTR wzName,_Inout_ PROPVARIANT *pvarValue)
HRESULT None windowscodecs.IWICMetadataQueryWriter_RemoveMetadataByName_Proxy(_In_ IWICMetadataQueryWriter *THIS_PTR,_In_ LPCWSTR wzName)
HRESULT None windowscodecs.IWICPalette_GetColorCount_Proxy(_In_ IWICPalette *THIS_PTR,_Out_ UINT *pcCount)
HRESULT None windowscodecs.IWICPalette_GetColors_Proxy(_In_ IWICPalette *THIS_PTR,_In_ UINT colorCount,_Out_ WICColor *pColors,_Out_ UINT *pcActualColors)
HRESULT None windowscodecs.IWICPalette_GetType_Proxy(_In_ IWICPalette *THIS_PTR,_Out_ WICBitmapPaletteType *pePaletteType)
HRESULT None windowscodecs.IWICPalette_HasAlpha_Proxy(_In_ IWICPalette *THIS_PTR,_Out_ BOOL *pfHasAlpha)
HRESULT None windowscodecs.IWICPalette_InitializeCustom_Proxy(_In_ IWICPalette *THIS_PTR,_In_ WICColor *pColors,_In_ UINT colorCount)
HRESULT None windowscodecs.IWICPalette_InitializeFromBitmap_Proxy(_In_ IWICPalette *THIS_PTR,_In_ IWICBitmapSource *pISurface,_In_ UINT colorCount,_In_ BOOL fAddTransparentColor)
HRESULT None windowscodecs.IWICPalette_InitializeFromPalette_Proxy(_In_ IWICPalette *THIS_PTR,_In_ IWICPalette *pIMILPalette)
HRESULT None windowscodecs.IWICPalette_InitializePredefined_Proxy(_In_ IWICPalette *THIS_PTR,_In_ WICBitmapPaletteType ePaletteType,_In_ BOOL fAddTransparentColor)
HRESULT None windowscodecs.IWICPixelFormatInfo_GetBitsPerPixel_Proxy(_In_ IWICPixelFormatInfo *THIS_PTR,_Out_ UINT *puiBitsPerPixel)
HRESULT None windowscodecs.IWICPixelFormatInfo_GetChannelCount_Proxy(_In_ IWICPixelFormatInfo *THIS_PTR,_Out_ UINT *puiChannelCount)
HRESULT None windowscodecs.IWICPixelFormatInfo_GetChannelMask_Proxy(_In_ IWICPixelFormatInfo *THIS_PTR,_In_ UINT uiChannelIndex,_In_ UINT cbMaskBuffer,_Inout_ BYTE *pbMaskBuffer,_Out_ UINT *pcbActual)
HRESULT None windowscodecs.IWICStream_InitializeFromIStream_Proxy(_In_ IWICStream *THIS_PTR,_In_ IStream *pIStream)
HRESULT None windowscodecs.IWICStream_InitializeFromMemory_Proxy(_In_ IWICStream *THIS_PTR,_In_ BYTE *pbBuffer,_In_ DWORD cbBufferSize)
HRESULT None windowscodecs.QueryRawCapabilitiesInfo([out] WICRawCapabilitiesInfo *pInfo)
HRESULT None windowscodecs.SetIndexing(WICJpegIndexingOptions options None,UINT horizontalIntervalSize None)
HRESULT None windowscodecs.WICConvertBitmapSource(_In_ REFWICPixelFormatGUID dstFormat,_In_ IWICBitmapSource *pISrc,_Out_ IWICBitmapSource **ppIDst)
HRESULT None windowscodecs.WICCreateColorContext_Proxy(_In_ IWICImagingFactory *THIS_PTR,IWICColorContext ppIColorContext None)
HRESULT None windowscodecs.WICCreateImagingFactory_Proxy(_In_ UINT SDKVersion,_Out_ IWICImagingFactory **ppIImagingFactory)
HRESULT None windowscodecs.WICSerializeMetadataContent(_In_ REFGUID guidContainerFormat,_In_ IWICMetadataWriter *pIWriter,_In_ DWORD dwPersistOptions,_In_ IStream *pIStream)
HRESULT None windowscodecs.WICSetEncoderFormat_Proxy(_In_ IWICBitmapSource *pSourceIn,_In_ IWICPalette *pIPalette,_In_ IWICBitmapFrameEncode *pIFrameEncode,_Out_ IWICBitmapSource **ppSourceOut)
HRESULT None windowscodecs.WriteScan(UINT cbScanData None,BYTE *pbScanData None)
HRESULT None windows.media.audio.XAudio2Create(_Out_ IXAudio2 **ppXAudio2,_In_ UINT32 Flags,_In_ XAUDIO2_PROCESSOR XAudio2Processor)
HRESULT None windows.media.audio.XAudio2CreateReverb(_Inout_ IUnknown **ppApo,_In_ UINT32 Flags)
HRESULT None windows.ui.xaml.GetVisibleBounds([out] RECT *pBounds)
HRESULT None winhttp.get_ResponseBody([out None None,retval] VARIANT *Body)
HRESULT None winhttp.Open([in] BSTR Method,[in] BSTR Url,[in None None,optional] VARIANT Async)
HRESULT None winhttp.Send([in None None,optional] VARIANT Body)
HRESULT None winsatapi.get_AssessmentDateTime([out] VARIANT *fileTime)
HRESULT None winsatapi.get_Info([out] IProvideWinSATResultsInfo **ppWinSATAssessmentInfo)
HRESULT None winsatapi.InitiateFormalAssessment([in None None,optional] IWinSATInitiateEvents *pCallbacks,[in None None,optional] HWND callerHwnd)
HRESULT None winshfhc.EstimateFileRiskLevel(_In_ LPCWSTR pszFilePath,_In_ LPCWSTR pszExt,_In_ LPCWSTR pszHandler,_Out_ FILE_RISK_LEVEL *pfrlEstimate)
HRESULT None wintrust.WinVerifyTrustEx(_In_ HWND hwnd,_In_ GUID *pgActionID,_In_ WINTRUST_DATA *pWinTrustData)
HRESULT None wmiutils.GetKeyList([out] IWbemPathKeyList **pOut)
HRESULT None wmiutils.GetNamespaceCount([out] ULONG *puCount)
HRESULT None wmiutils.GetScopeCount([out] ULONG *puCount)
HRESULT None wmiutils.SetKey([in] LPCWSTR wszName,[in] ULONG uFlags,[in] ULONG uCimType,[in] LPVOID pKeyVal)
HRESULT None wmp.add([in] BSTR bstrFolder)
HRESULT None wmp.add([in] BSTR bstrURL,[out] IWMPMedia **ppItem)
HRESULT None wmp.allowTranscode([out] VARIANT_BOOL *pvarfAllow)
HRESULT None wmp.appendItem([in] IWMPMedia *pIWMPMedia)
HRESULT None wmp.createPartnership([out] VARIANT_BOOL vbShowUI)
HRESULT None wmp.estimateSyncSize([in] IWMPPlaylist *pNonRulePlaylist,[in] IWMPPlaylist *pRulesPlaylist)
HRESULT None wmp.get_addedFilesCount([out] long *plCount)
HRESULT None wmp.getAll([out] IWMPPlaylistArray **ppPlaylistArray)
HRESULT None wmp.getAll([out] IWMPPlaylist **ppMediaItems)
HRESULT None wmp.GetApplicationName([out] BSTR *pbstrName)
HRESULT None wmp.getAttributeCountByType([in] long lCollectionIndex,[in] BSTR bstrType,[in] BSTR bstrLanguage,[out] long *plCount)
HRESULT None wmp.get_attributeCount([out] long *plCount)
HRESULT None wmp.get_attributeName([in] long lIndex,[out] BSTR *pbstrAttributeName)
HRESULT None wmp.getAttributeName([in] long lIndex,[out] BSTR *pbstrItemName)
HRESULT None wmp.getAttributeStringCollection([in] BSTR bstrAttribute,[in] BSTR bstrMediaType,[out] IWMPStringCollection **ppStringCollection)
HRESULT None wmp.get_audioLanguageCount([out] long *plCount)
HRESULT None wmp.getAudioLanguageDescription([in] long lIndex,[out] BSTR *pbstrLangDesc)
HRESULT None wmp.getAudioLanguageID([in] long lIndex,[out] long *plLangID)
HRESULT None wmp.get_autoStart([out] VARIANT_BOOL *pfAutoStart)
HRESULT None wmp.get_balance([out] long *plBalance)
HRESULT None wmp.get_bandWidth([out] long *plBandwidth)
HRESULT None wmp.get_baseURL([out] BSTR *pbstrBaseURL)
HRESULT None wmp.get_bitRate([out] long *plBitRate)
HRESULT None wmp.get_bufferingCount([out] long *plBufferingCount)
HRESULT None wmp.get_bufferingProgress([out] long *plBufferingProgress)
HRESULT None wmp.get_bufferingTime([out] long *plBufferingTime)
HRESULT None wmp.get_burnFormat([out] WMPBurnFormat *pwmpbf)
HRESULT None wmp.get_burnPlaylist([out] IWMPPlaylist **ppPlaylist)
HRESULT None wmp.get_burnProgress([out] long *plProgress)
HRESULT None wmp.get_burnState([out] WMPBurnState *pwmpbs)
HRESULT None wmp.getByAlbum([in] BSTR bstrAlbum,[out] IWMPPlaylist **ppMediaItems)
HRESULT None wmp.getByAttributeAndMediaType([in] BSTR bstrAttribute,[in] BSTR bstrValue,[in] BSTR bstrMediaType,[out] IWMPPlaylist **ppMediaItems)
HRESULT None wmp.getByAttribute([in] BSTR bstrAttribute,[in] BSTR bstrValue,[out] IWMPPlaylist **ppMediaItems)
HRESULT None wmp.getByAuthor([in] BSTR bstrAuthor,[out] IWMPPlaylist **ppMediaItems)
HRESULT None wmp.getByGenre([in] BSTR bstrGenre,[out] IWMPPlaylist **ppMediaItems)
HRESULT None wmp.getByName([in] BSTR bstrName,[out] IWMPPlaylistArray **ppPlaylistArray)
HRESULT None wmp.getByName([in] BSTR bstrName,[out] IWMPPlaylist **ppMediaItems)
HRESULT None wmp.get_captioningId([out] BSTR *pbstrCaptioningID)
HRESULT None wmp.get_cdromCollection([out] IWMPCdromCollection **ppCdromCollection)
HRESULT None wmp.get_closedCaption([out] IWMPClosedCaption **ppClosedCaption)
HRESULT None wmp.get_connected([out] VARIANT_BOOL *pvbConnected)
HRESULT None wmp.get_controls([out] IWMPControls **ppControl)
HRESULT None wmp.get_count([out] long *plCount)
HRESULT None wmp.get_currentAudioLanguageIndex([out] long *plIndex)
HRESULT None wmp.get_currentAudioLanguage([out] long *plLangID)
HRESULT None wmp.get_currentFolder([out] BSTR *pbstrFolder)
HRESULT None wmp.get_currentItem([out] IWMPMedia **ppIWMPMedia)
HRESULT None wmp.get_currentMarker([out] long *plMarker)
HRESULT None wmp.get_currentMedia([out] IWMPMedia **ppMedia)
HRESULT None wmp.get_currentPlaylist([out] IWMPPlaylist **ppPL)
HRESULT None wmp.get_currentPositionString([out] BSTR *pbstrCurrentPosition)
HRESULT None wmp.get_currentPositionTimecode([out] BSTR *bstrTimecode)
HRESULT None wmp.GetCustomUIMode([out] BSTR *pbstrFile)
HRESULT None wmp.get_defaultFrame([out] BSTR *pbstrDefaultFrame)
HRESULT None wmp.get_deviceCount([out] long *plCount)
HRESULT None wmp.get_deviceId([out] BSTR *pbstrDeviceId)
HRESULT None wmp.getDevice([in] long lIndex,[out] IWMPSyncDevice **ppDevice)
HRESULT None wmp.get_deviceName([out] BSTR *pbstrName)
HRESULT None wmp.get_domain([out] BSTR *strDomain)
HRESULT None wmp.get_downloadProgress([out] long *plDownloadProgress)
HRESULT None wmp.get_driveSpecifier([out] BSTR *pbstrDrive)
HRESULT None wmp.get_duration([out] double *pDuration)
HRESULT None wmp.get_durationString([out] BSTR *pbstrDuration)
HRESULT None wmp.get_enableContextMenu([out] VARIANT_BOOL *pbEnableContextMenu)
HRESULT None wmp.get_enabled([out] VARIANT_BOOL *pbEnabled)
HRESULT None wmp.get_enableErrorDialogs([out] VARIANT_BOOL *pfEnableErrorDialogs)
HRESULT None wmp.get_encodedFrameRate([out] long *plFrameRate)
HRESULT None wmp.get_errorCode([out] long *phr)
HRESULT None wmp.get_errorContext([out] VARIANT *pvarContext)
HRESULT None wmp.get_errorCount([out] long *plNumErrors)
HRESULT None wmp.get_errorDescription([out] BSTR *pbstrDescription)
HRESULT None wmp.get_error([out] IWMPError **ppError)
HRESULT None wmp.get_frameRate([out] long *plFrameRate)
HRESULT None wmp.get_framesSkipped([out] long *plFrames)
HRESULT None wmp.get_friendlyName([out] BSTR *pbstrName)
HRESULT None wmp.get_fullScreen([out] VARIANT_BOOL *pbFullScreen)
HRESULT None wmp.get_imageSourceHeight([out] long *pHeight)
HRESULT None wmp.get_imageSourceWidth([out] long *pWidth)
HRESULT None wmp.get_inProcOnly([in] BOOL *pfInProc)
HRESULT None wmp.get_invokeURLs([out] VARIANT_BOOL *pfInvokeURLs)
HRESULT None wmp.get_isAvailable([in] BSTR bstrItem,[out] VARIANT_BOOL *pIsAvailable)
HRESULT None wmp.get_isIdentical([in] IWMPMedia *pIWMPMedia,[out] VARIANT_BOOL *pvbool)
HRESULT None wmp.get_isIdentical([in] IWMPPlaylist *pIWMPPlaylist,[out] VARIANT_BOOL *pvbool)
HRESULT None wmp.get_isOnline([out] VARIANT_BOOL *pfOnline)
HRESULT None wmp.getItemInfoByAtom([in] long lAtom,[out] BSTR *pbstrVal)
HRESULT None wmp.getItemInfo([in] BSTR bstrItemName,[out] BSTR *pbstrVal)
HRESULT None wmp.getItemInfo([in] BSTR bstrItem,[out] BSTR *pbstrVal)
HRESULT None wmp.getItemInfo([in] long lCollectionIndex,[in] BSTR bstrItemName,[out] BSTR *pbstrValue)
HRESULT None wmp.get_item([in] long dwIndex,[out] IWMPErrorItem **ppErrorItem)
HRESULT None wmp.get_item([in] long lIndex,[out] IWMPMedia **ppIWMPMedia)
HRESULT None wmp.get_label([out] BSTR *pbstrLabel)
HRESULT None wmp.getLanguageName([in] long lLangID,[out] BSTR *pbstrLangName)
HRESULT None wmp.getLibraryByType([in] WMPLibraryType wmplt,[in] long lIndex,[out] IWMPLibrary **ppIWMPLibrary)
HRESULT None wmp.get_lostPackets([out] long *plLostPackets)
HRESULT None wmp.get_markerCount([out] long *pMarkerCount)
HRESULT None wmp.getMarkerName([in] long MarkerNum,[out] BSTR *pbstrMarkerName)
HRESULT None wmp.getMarkerTime([in] long MarkerNum,[out] double *pMarkerTime)
HRESULT None wmp.get_maxBandwidth([out] long *plMaxBandwidth)
HRESULT None wmp.get_maxBitRate([out] long *plBitRate)
HRESULT None wmp.get_mediaAccessRights([out] BSTR *pbstrRights)
HRESULT None wmp.getMediaAtom([in] BSTR bstrItemName,[out] long *plAtom)
HRESULT None wmp.get_mediaCollection([out] IWMPMediaCollection **ppIWMPMediaCollection)
HRESULT None wmp.get_mediaCollection([out] IWMPMediaCollection **ppMediaCollection)
HRESULT None wmp.getMode([in] BSTR bstrMode,[out] VARIANT_BOOL *pvarfMode)
HRESULT None wmp.get_mute([out] VARIANT_BOOL *pfMute)
HRESULT None wmp.get_name([out] BSTR *pbstrName)
HRESULT None wmp.get_network([out] IWMPNetwork **ppQNI)
HRESULT None wmp.get_openState([out] WMPOpenState *pwmpos)
HRESULT None wmp.get_partnershipIndex([out] long *plIndex)
HRESULT None wmp.get_playCount([out] long *plCount)
HRESULT None wmp.get_playerDocked([out] VARIANT_BOOL *pbPlayerDocked)
HRESULT None wmp.getPlaylistByQuery([in] IWMPQuery *pQuery,[in] BSTR bstrMediaType,[in] BSTR bstrSortAttribute,[in] VARIANT_BOOL fSortAscending,[out] IWMPPlaylist **ppPlaylist)
HRESULT None wmp.get_playlistCollection([out] IWMPPlaylistCollection **ppPlaylistCollection)
HRESULT None wmp.get_playlist([out] IWMPPlaylist **ppPlaylist)
HRESULT None wmp.get_playState([out] WMPPlayState *pwmpps)
HRESULT None wmp.get_progress([out] long *plProgress)
HRESULT None wmp.getProxyBypassForLocal([in] BSTR bstrProtocol,[out] VARIANT_BOOL *pfBypassForLocal)
HRESULT None wmp.getProxyExceptionList([in] BSTR bstrProtocol,[out] BSTR *pbstrExceptionList)
HRESULT None wmp.getProxyName([in] BSTR bstrProtocol,[out] BSTR *pbstrProxyName)
HRESULT None wmp.getProxyPort([in] BSTR bstrProtocol,[out] long *plProxyPort)
HRESULT None wmp.getProxySettings([in] BSTR bstrProtocol,[out] long *plProxySetting)
HRESULT None wmp.get_rate([out] double *pdRate)
HRESULT None wmp.get_receivedPackets([out] long *plReceivedPackets)
HRESULT None wmp.get_receptionQuality([out] long *plReceptionQuality)
HRESULT None wmp.get_recoveredPackets([out] long *plRecoveredPackets)
HRESULT None wmp.get_ripProgress([out] long *plProgress)
HRESULT None wmp.get_ripState([out] WMPRipState *pwmprs)
HRESULT None wmp.get_SAMILangCount([out] long *plCount)
HRESULT None wmp.getSAMILangID([in] long nIndex,[out] long *plLangID)
HRESULT None wmp.getSAMILangName([in] long nIndex,[out] BSTR *pbstrName)
HRESULT None wmp.get_SAMILang([out] BSTR *pbstrSAMILang)
HRESULT None wmp.get_SAMIStyleCount([out] long *plCount)
HRESULT None wmp.getSAMIStyleName([in] long nIndex,[out] BSTR *pbstrName)
HRESULT None wmp.get_SAMIStyle([out] BSTR *pbstrSAMIStyle)
HRESULT None wmp.get_scannedFilesCount([out] long *plCount)
HRESULT None wmp.get_scanState([out] WMPFolderScanState *pwmpfss)
HRESULT None wmp.GetScriptableObject([out] BSTR *pbstrName,[out] IDispatch **ppDispatch)
HRESULT None wmp.GetServiceType([out] BSTR *pbstrType)
HRESULT None wmp.get_settings([out] IWMPSettings **ppSettings)
HRESULT None wmp.get_sourceProtocol([out] BSTR *pbstrSourceProtocol)
HRESULT None wmp.get_sourceURL([out] BSTR *pbstrSourceURL)
HRESULT None wmp.get_status([out] BSTR *pbstrStatus)
HRESULT None wmp.get_status([out] WMPDeviceStatus *pwmpds)
HRESULT None wmp.GetStreamState([in] WMPServices_StreamState *pState)
HRESULT None wmp.GetStreamTime([in] REFERENCE_TIME *prt)
HRESULT None wmp.getStringCollectionByQuery([in] BSTR bstrAttribute,[in] IWMPQuery *pQuery,[in] BSTR bstrMediaType,[in] BSTR bstrSortAttribute,[in] VARIANT_BOOL fSortAscending,[out] IWMPStringCollection **ppStringCollection)
HRESULT None wmp.get_syncState([out] WMPSyncState *pwmpss)
HRESULT None wmp.get_type([out] WMPLibraryType *pwmplt)
HRESULT None wmp.get_uiMode([out] BSTR *pbstrMode)
HRESULT None wmp.get_updateProgress([out] long *plProgress)
HRESULT None wmp.get_URL([out] BSTR *pbstrURL)
HRESULT None wmp.get_versionInfo([out] BSTR *pbstrVersionInfo)
HRESULT None wmp.get_volume([out] long *plVolume)
HRESULT None wmp.GraphCreationPreRender([in] IUnknown *pFilterGraph,[in] IUnknown *pReserved)
HRESULT None wmp.importPlaylist([in] IWMPPlaylist *pItem,[out] IWMPPlaylist **ppImportedItem)
HRESULT None wmp.insertItem([in] long lIndex,[in] IWMPMedia *pIWMPMedia)
HRESULT None wmp.isAvailable([in] BSTR bstrItem,[out] VARIANT_BOOL *pIsAvailable)
HRESULT None wmp.isDeleted([in] IWMPPlaylist *pItem,[out] VARIANT_BOOL *pvarfIsDeleted)
HRESULT None wmp.isIdentical([in] IWMPLibrary *pIWMPLibrary,[out] VARIANT_BOOL *pvbool)
HRESULT None wmp.isIdentical([in] IWMPStringCollection2 *pIWMPStringCollection2,[out] VARIANT_BOOL *pvbool)
HRESULT None wmp.isIdentical([in] IWMPSyncDevice *pDevice,[out] VARIANT_BOOL *pvbool)
HRESULT None wmp.isMemberOf([in] IWMPPlaylist *pPlaylist,[out] VARIANT_BOOL *pvarfIsMemberOf)
HRESULT None wmp.isReadOnlyItem([in] BSTR bstrItemName,[out] VARIANT_BOOL *pvarfIsReadOnly)
HRESULT None wmp.item([in] long lIndex,[out] BSTR *pbstrFolder)
HRESULT None wmp.launchURL([in] BSTR bstrURL)
HRESULT None wmpmediasharing.getAllDevices([out] IWindowsMediaLibrarySharingDevices **devices)
HRESULT None wmpmediasharing.get_allowSharingToAllDevices([out] VARIANT_BOOL *sharingEnabled)
HRESULT None wmpmediasharing.get_Authorization([out] WindowsMediaLibrarySharingDeviceAuthorizationStatus *authorization)
HRESULT None wmpmediasharing.get_computerHomeMediaSharingAllowedState([out] VARIANT_BOOL *sharingAllowed)
HRESULT None wmpmediasharing.get_computerInternetMediaSharingAllowedState([out] VARIANT_BOOL *sharingAllowed)
HRESULT None wmpmediasharing.get_Count([out] LONG *count)
HRESULT None wmpmediasharing.get_customSettingsApplied([out] VARIANT_BOOL *customSettingsApplied)
HRESULT None wmpmediasharing.get_DeviceID([out] BSTR *deviceID)
HRESULT None wmpmediasharing.get_internetMediaSharingSecurityGroup([out] BSTR *securityGroup)
HRESULT None wmpmediasharing.get_Name([out] BSTR *name)
HRESULT None wmpmediasharing.get_Properties([out] IWindowsMediaLibrarySharingDeviceProperties **deviceProperties)
HRESULT None wmpmediasharing.get_userHomeMediaSharingLibraryName([out] BSTR *libraryName)
HRESULT None wmpmediasharing.get_userHomeMediaSharingState([out] VARIANT_BOOL *sharingEnabled)
HRESULT None wmpmediasharing.get_userInternetMediaSharingState([out] VARIANT_BOOL *sharingEnabled)
HRESULT None wmpmediasharing.put_computerHomeMediaSharingAllowedState(VARIANT_BOOL sharingAllowed None)
HRESULT None wmpmediasharing.put_userHomeMediaSharingState(VARIANT_BOOL sharingEnabled None)
HRESULT None wmpmediasharing.put_userInternetMediaSharingState(VARIANT_BOOL sharingEnabled None)
HRESULT None wmp.moveItem([in] long lIndexOld,[in] long lIndexNew)
HRESULT None wmp.newPlaylist([in] BSTR bstrName,[out] IWMPPlaylist **ppItem)
HRESULT None wmp.playItem([in] IWMPMedia *pIWMPMedia)
HRESULT None wmp.put_audioOutputDevice(BSTR bstrOutputDevice None)
HRESULT None wmp.put_autoStart([in] VARIANT_BOOL fAutoStart)
HRESULT None wmp.put_balance([in] long lBalance)
HRESULT None wmp.put_baseURL([in] BSTR bstrBaseURL)
HRESULT None wmp.put_bufferingTime([in] long lBufferingTime)
HRESULT None wmp.put_burnFormat([in] WMPBurnFormat wmpbf)
HRESULT None wmp.put_burnPlaylist([in] IWMPPlaylist *pPlaylist)
HRESULT None wmp.put_captioningId([in] BSTR bstrCaptioningID)
HRESULT None wmp.put_currentAudioLanguageIndex([in] long lIndex)
HRESULT None wmp.put_currentAudioLanguage([in] long lLangID)
HRESULT None wmp.put_currentItem([in] IWMPMedia *pIWMPMedia)
HRESULT None wmp.put_currentMarker([in] long lMarker)
HRESULT None wmp.put_currentMedia([in] IWMPMedia *pMedia)
HRESULT None wmp.put_currentPlaylist([in] IWMPPlaylist *pPL)
HRESULT None wmp.put_currentPosition([in] double dCurrentPosition)
HRESULT None wmp.put_currentPositionTimecode([in] BSTR bstrTimecode)
HRESULT None wmp.put_defaultFrame([in] BSTR bstrDefaultFrame)
HRESULT None wmp.put_enableContextMenu([in] VARIANT_BOOL bEnableContextMenu)
HRESULT None wmp.put_enabled([in] VARIANT_BOOL bEnabled)
HRESULT None wmp.put_enableErrorDialogs([in] VARIANT_BOOL fEnableErrorDialogs)
HRESULT None wmp.put_friendlyName([in] BSTR bstrName)
HRESULT None wmp.put_fullScreen([in] VARIANT_BOOL bFullScreen)
HRESULT None wmp.put_inProcOnly([in] BOOL fInProc)
HRESULT None wmp.put_invokeURLs([in] VARIANT_BOOL fInvokeURLs)
HRESULT None wmp.put_label([in] BSTR bstrLabel)
HRESULT None wmp.put_maxBandwidth([in] long lMaxBandwidth)
HRESULT None wmp.put_mute([in] VARIANT_BOOL fMute)
HRESULT None wmp.put_name([in] BSTR bstrName)
HRESULT None wmp.put_playCount([in] long lCount)
HRESULT None wmp.put_presenterActivate([in] IMFActivate *pActivate)
HRESULT None wmp.put_rate([in] double dRate)
HRESULT None wmp.put_SAMIFileName([in] BSTR bstrSAMIFileName)
HRESULT None wmp.put_SAMILang([in] BSTR bstrSAMILang)
HRESULT None wmp.put_SAMIStyle([in] BSTR bstrSAMIStyle)
HRESULT None wmp.put_uiMode([in] BSTR bstrMode)
HRESULT None wmp.put_URL([in] BSTR bstrURL)
HRESULT None wmp.put_volume([in] long lVolume)
HRESULT None wmp.remove([in] IWMPMedia *pItem,[in] VARIANT_BOOL varfDeleteFile)
HRESULT None wmp.remove([in] IWMPPlaylist *pItem)
HRESULT None wmp.remove([in] long lIndex)
HRESULT None wmp.removeItem([in] IWMPMedia *pIWMPMedia)
HRESULT None wmp.requestMediaAccessRights([in] BSTR bstrDesiredAccess,[out] VARIANT_BOOL *pvbAccepted)
HRESULT None wmp.setBackgroundProcessingPriority([in] BSTR bstrPriority)
HRESULT None wmp.setDeleted([in] IWMPMedia *pItem,[in] VARIANT_BOOL varfIsDeleted)
HRESULT None wmp.setItemInfo([in] BSTR bstrItemName,[in] BSTR bstrVal)
HRESULT None wmp.setItemInfo([in] BSTR bstrName,[in] BSTR bstrValue)
HRESULT None wmp.setMode([in] BSTR bstrMode,[in] VARIANT_BOOL varfMode)
HRESULT None wmp.setProxyBypassForLocal([in] BSTR bstrProtocol,[in] VARIANT_BOOL fBypassForLocal)
HRESULT None wmp.setProxyExceptionList([in] BSTR bstrProtocol,[in] BSTR pbstrExceptionList)
HRESULT None wmp.setProxyName([in] BSTR bstrProtocol,[in] BSTR bstrProxyName)
HRESULT None wmp.setProxyPort([in] BSTR bstrProtocol,[in] long lProxyPort)
HRESULT None wmp.setProxySettings([in] BSTR bstrProtocol,[in] long lProxySetting)
HRESULT None wmp.WMPUnRegisterPlayerPlugin(GUID guidPluginType None,CLSID clsid None)
HRESULT None wmvcore.WMCheckURLExtension(_In_ LPCWSTR pwszURL)
HRESULT None wmvcore.WMCheckURLScheme(_In_ LPCWSTR pwszURLScheme)
HRESULT None wmvcore.WMCreateBackupRestorer(_In_ IUnknown *pCallback,_Out_ IWMLicenseBackup **ppBackup)
HRESULT None wmvcore.WMCreateCertificate(_Out_ IUnknown **pUnkCert)
HRESULT None wmvcore.WMCreateDeviceRegistration(_Out_ IWMDeviceRegistration **ppDevReg)
HRESULT None wmvcore.WMCreateDRMTranscryptor(_Out_ IWMDRMTranscryptor **ppTranscryptor)
HRESULT None wmvcore.WMCreateEditor(_Out_ IWMMetadataEditor **ppEditor)
HRESULT None wmvcore.WMCreateIndexer(_Out_ IWMIndexer **ppIndexer)
HRESULT None wmvcore.WMCreateLicenseRevocationAgent(_In_ IUnknown *pCallback,_Out_ IWMLicenseRevocationAgent **ppLicenseRevocationAgent)
HRESULT None wmvcore.WMCreateProfileManager(_Out_ IWMProfileManager **ppProfileManager)
HRESULT None wmvcore.WMCreateReader(_In_ IUnknown *pUnkReserved,_In_ DWORD dwRights,_Out_ IWMReader **ppReader)
HRESULT None wmvcore.WMCreateSyncReader(_In_ IUnknown *pUnkCert,_In_ DWORD dwRights,_Out_ IWMSyncReader **ppSyncReader)
HRESULT None wmvcore.WMCreateWriterFileSink(_Out_ IWMWriterFileSink **ppSink)
HRESULT None wmvcore.WMCreateWriter(_In_ IUnknown *pUnkReserved,_Out_ IWMWriter **ppWriter)
HRESULT None wmvcore.WMCreateWriterNetworkSink(_Out_ IWMWriterNetworkSink **ppSink)
HRESULT None wmvcore.WMCreateWriterPushSink(_Out_ IWMWriterPushSink **ppSink)
HRESULT None wmvcore.WMIsAvailableOffline(_In_ LPCWSTR pwszURL,_In_ LPCWSTR pwszLanguage,_Out_ BOOL *pfIsAvailableOffline)
HRESULT None wmvcore.WMValidateData(_In_ BYTE *pbData,_Inout_ DWORD *pdwDataSize)
HRESULT None wsdapi.BeginGetMetadata([out] IWSDAsyncResult **ppResult)
HRESULT None wsdapi.GetAlias([out] GUID *pAlias)
HRESULT None wsdapi.GetPort([out] WORD *pwPort)
HRESULT None wsdapi.GetTransportAddress([out] LPCWSTR *ppszAddress)
HRESULT None wsdapi.IsMessageSignatureTrusted([out] BOOL *pbSignatureTrusted)
HRESULT None wsdapi.IsMessageSigned([out] BOOL *pbSigned)
HRESULT None wsdapi.WSDCreateDiscoveryProvider(_In_ IWSDXMLContext *pContext,_Out_ IWSDiscoveryProvider **ppProvider)
HRESULT None wsdapi.WSDCreateHttpAddress(IWSDHttpAddress **ppAddress None)
HRESULT None wsdapi.WSDCreateHttpMessageParameters(IWSDHttpMessageParameters **ppTxParams None)
HRESULT None wsmauto.Enumerate([in] Variant resourceUri,[in None None,optional] BSTR filter,[in None None,optional] BSTR dialect,[in] long flags,[out] IDispatch **resultSet)
HRESULT None wsmauto.EnumerationFlagReturnObject([out] long *flags)
HRESULT None wsmauto.get_AtEndOfStream([out] VARIANT_BOOL *eos)
HRESULT None wsmauto.GetErrorMessage([in] DWORD errorNumber,[out] BSTR *errorMessage)
HRESULT None wsmauto.SessionFlagSkipCNCheck([out] long *flags)
HRESULT None wsmauto.SessionFlagUseDigest([out] long *flags)
HRESULT None wuapi.get_AsyncState([out] VARIANT *retval)
HRESULT None wuapi.get_AutoSelectOnWebSites([out] VARIANT_BOOL *retval)
HRESULT None wuapi.get_BundledUpdates([out] IUpdateCollection **retval)
HRESULT None wuapi.get_CanRegisterWithAU([out] VARIANT_BOOL *retval)
HRESULT None wuapi.get_CanRequireSource([out] VARIANT_BOOL *retval)
HRESULT None wuapi.get_Categories([out] ICategoryCollection **retval)
HRESULT None wuapi.get_Context([out] UpdateExceptionContext *retval)
HRESULT None wuapi.get_CurrentUpdateBytesDownloaded([out] DECIMAL *retval)
HRESULT None wuapi.get_CurrentUpdatePercentComplete([out] LONG *retval)
HRESULT None wuapi.get_Date([out] DATE *retval)
HRESULT None wuapi.get_Deadline([out] VARIANT *retval)
HRESULT None wuapi.get_DeltaCompressedContentAvailable([out] VARIANT_BOOL *retval)
HRESULT None wuapi.get_DeltaCompressedContentPreferred([out] VARIANT_BOOL *retval)
HRESULT None wuapi.get_DeploymentAction([out] DeploymentAction *retval)
HRESULT None wuapi.get_Description([out] BSTR *retval)
HRESULT None wuapi.get_DownloadContents([out] IUpdateDownloadContentCollection **retval)
HRESULT None wuapi.get_DownloadPriority([out] DownloadPriority *retval)
HRESULT None wuapi.get_DriverManufacturer([out] BSTR *retval)
HRESULT None wuapi.get_EulaAccepted([out] VARIANT_BOOL *retval)
HRESULT None wuapi.get_EulaText([out] BSTR *retval)
HRESULT None wuapi.get_ExpirationDate([out] DATE *retval)
HRESULT None wuapi.get_HandlerID([out] BSTR *retval)
HRESULT None wuapi.get_Identity([out] IUpdateIdentity **retval)
HRESULT None wuapi.get_Image([out] IImageInformation **retval)
HRESULT None wuapi.get_InstallationBehavior([out] IInstallationBehavior **retval)
HRESULT None wuapi.get_IsBeta([out] VARIANT_BOOL *retval)
HRESULT None wuapi.get_IsDownloaded([out] VARIANT_BOOL *retval)
HRESULT None wuapi.get_IsInstalled([out] VARIANT_BOOL *retval)
HRESULT None wuapi.get_IsMandatory([out] VARIANT_BOOL *retval)
HRESULT None wuapi.get_IsRegisteredWithAU([out] VARIANT_BOOL *retval)
HRESULT None wuapi.get_IsScanPackageService([out] VARIANT_BOOL *retval)
HRESULT None wuapi.get_IssueDate([out] DATE *retval)
HRESULT None wuapi.get_IsUninstallable([out] VARIANT_BOOL *retval)
HRESULT None wuapi.get_KBArticleIDs([out] IStringCollection **retval)
HRESULT None wuapi.get_Languages([out] IStringCollection **retval)
HRESULT None wuapi.get_LastDeploymentChangeTime([out] DATE *retval)
HRESULT None wuapi.get_MaxDownloadSize([out] DECIMAL *retval)
HRESULT None wuapi.get_MinDownloadSize([out] DECIMAL *retval)
HRESULT None wuapi.get_MoreInfoUrls([out] IStringCollection **retval)
HRESULT None wuapi.get_MsrcSeverity([out] BSTR *retval)
HRESULT None wuapi.get_Operation([out] UpdateOperation *retval)
HRESULT None wuapi.get_PerUser([out None None,retval] VARIANT_BOOL *retval)
HRESULT None wuapi.get_ReadOnly([out] VARIANT_BOOL *retval)
HRESULT None wuapi.get_RebootBehavior([out] InstallationRebootBehavior *retval)
HRESULT None wuapi.get_RedirectUrls([out] IStringCollection *retval)
HRESULT None wuapi.get_ReleaseNotes([out] BSTR *retval)
HRESULT None wuapi.get_ResultCode([out] OperationResultCode *retval)
HRESULT None wuapi.get_SecurityBulletinIDs([out] IStringCollection **retval)
HRESULT None wuapi.get_ServerSelection([out] ServerSelection *retval)
HRESULT None wuapi.get_ServiceID([out] BSTR *retval)
HRESULT None wuapi.get_ServiceUrl([out] BSTR *retval)
HRESULT None wuapi.get_SetupPrefix([out] BSTR *retval)
HRESULT None wuapi.get_Source([out] BSTR *retval)
HRESULT None wuapi.get_SupersededUpdateIDs([out] IStringCollection **retval)
HRESULT None wuapi.get_SupportUrl([out] BSTR *retval)
HRESULT None wuapi.get_Title([out] BSTR *retval)
HRESULT None wuapi.get_TotalBytesToDownload([out] DECIMAL *retval)
HRESULT None wuapi.get_Type([out] UpdateType *retval)
HRESULT None wuapi.get_UninstallationBehavior([out] IInstallationBehavior **retval)
HRESULT None wuapi.get_UninstallationNotes([out] BSTR *retval)
HRESULT None wuapi.get_UninstallationSteps([out] IStringCollection **retval)
HRESULT None wuapi.get_UpdateIdentity([out] IUpdateIdentity **retval)
HRESULT None wuapi.get_Updates([out] IUpdateCollection **retval)
HRESULT None wuapi.get_Warnings([out] IUpdateExceptionCollection **retval)
HRESULT None wuapi.Results([out] IAutomaticUpdatesResults **retval)
HRESULT None wuapi.UnregisterServiceWithAU(BSTR serviceID None)
HRESULT None wudfx.AssignDeviceInterfaceState([in] LPCGUID pDeviceInterfaceGuid,[in None None,optional] PCWSTR pReferenceString,[in] BOOL Enable)
HRESULT None wudfx.CreateIoQueue([in None None,optional] IUnknown *pCallbackInterface,[in] BOOL bDefaultQueue,[in] WDF_IO_QUEUE_DISPATCH_TYPE DispatchType,[in] BOOL bPowerManaged,[in] BOOL bAllowZeroLengthRequests,[out] IWDFIoQueue **ppIoQueue)
HRESULT None wudfx.ForwardToIoQueue([in] IWDFIoQueue *pDestination)
HRESULT None wudfx.RetrieveDeviceName([out] PWSTR pDeviceName,[in None None,out] DWORD *pdwDeviceNameLength)
HRESULT None wudfx.RetrieveDevicePropertyStore([in None None,optional] PCWSTR pcwszServiceName,[in] WDF_PROPERTY_STORE_RETRIEVE_FLAGS Flags,[out] IWDFNamedPropertyStore **ppPropStore,[out None None,optional] WDF_PROPERTY_STORE_DISPOSITION *pDisposition)
HRESULT None wudfx.RetrieveNextRequest([out] IWDFIoRequest **ppRequest)
HRESULT None xenroll.acceptFilePKCS7([in] BSTR wszPKCS7FileName)
HRESULT None xenroll.acceptFilePKCS7WStr([in] LPCWSTR wszPKCS7FileName)
HRESULT None xenroll.acceptFileResponse([in] BSTR strResponseFileName)
HRESULT None xenroll.acceptFileResponseWStr([in] LPCWSTR pwszResponseFileName)
HRESULT None xenroll.acceptPKCS7Blob([in] PCRYPT_DATA_BLOB pBlobPKCS7)
HRESULT None xenroll.acceptPKCS7([in] BSTR PKCS7)
HRESULT None xenroll.acceptResponseBlob([in] PCRYPT_DATA_BLOB pblobResponse)
HRESULT None xenroll.acceptResponse([in] BSTR strResponse)
HRESULT None xenroll.addAttributeToRequest([in] LONG Flags,[in] BSTR strName,[in] BSTR strValue)
HRESULT None xenroll.addAttributeToRequestWStr([in] LONG Flags,[in] LPCWSTR pwszName,[in] PCRYPT_DATA_BLOB pblobValue)
HRESULT None xenroll.AddAuthenticatedAttributesToPKCS7Request([in] PCRYPT_ATTRIBUTES pAttributes)
HRESULT None xenroll.addBlobPropertyToCertificate([in] LONG lPropertyId,[in] LONG lReserved,[in] BSTR bstrProperty)
HRESULT None xenroll.addBlobPropertyToCertificateWStr([in] LONG lPropertyId,[in] LONG lReserved,[in] PCRYPT_DATA_BLOB pBlobProperty)
HRESULT None xenroll.addCertTypeToRequestEx([in] LONG lFlag,[in] BSTR bstrOIDOrName,[in] LONG lMajorVersion,[in] BOOL fMinorVersion,[in] LONG lMinorVersion)
HRESULT None xenroll.addCertTypeToRequest([in] BSTR CertType)
HRESULT None xenroll.AddCertTypeToRequestWStrEx([in] LONG lType,[in] LPCWSTR pwszOIDOrName,[in] LONG lMajorVersion,[in] BOOL fMinorVersion,[in] LONG lMinorVersion)
HRESULT None xenroll.AddCertTypeToRequestWStr([in] LPWSTR szw)
HRESULT None xenroll.AddExtensionsToRequest([in] PCERT_EXTENSIONS pCertExtensions)
HRESULT None xenroll.addExtensionToRequest([in] LONG Flags,[in] BSTR strName,[in] BSTR strValue)
HRESULT None xenroll.addExtensionToRequestWStr([in] LONG Flags,[in] LPCWSTR pwszName,[in] PCRYPT_DATA_BLOB pblobValue)
HRESULT None xenroll.addNameValuePairToRequest([in] LONG Flags,[in] BSTR strName,[in] BSTR strValue)
HRESULT None xenroll.addNameValuePairToRequestWStr([in] LONG Flags,[in] LPCWSTR pwszName,[in] LPCWSTR pwszValue)
HRESULT None xenroll.addNameValuePairToSignature([in] BSTR Name,[in] BSTR Value)
HRESULT None xenroll.AddNameValuePairToSignatureWStr([in] LPWSTR Name,[in] LPWSTR Value)
HRESULT None xenroll.binaryBlobToString([in] LONG Flags,[in] PCRYPT_DATA_BLOB pblobBinary,[out] LPWSTR *ppwszString)
HRESULT None xenroll.binaryToString([in] LONG Flags,[in] BSTR strBinary,[out] BSTR *pstrEncoded)
HRESULT None xenroll.createFilePFX([in] BSTR strPassword,[in] BSTR strPFXFileName)
HRESULT None xenroll.createFilePFXWStr([in] LPCWSTR pwszPassword,[in] LPCWSTR pwszPFXFileName)
HRESULT None xenroll.createFilePKCS10([in] BSTR DNName,[in] BSTR Usage,[in] BSTR wszPKCS10FileName)
HRESULT None xenroll.createFilePKCS10WStr([in] LPCWSTR DNName,[in] LPCWSTR Usage,[in] LPCWSTR wszPKCS10FileName)
HRESULT None xenroll.createFileRequest([in] LONG Flags,[in] BSTR strDNName,[in] BSTR strUsage,[in] BSTR strRequestFileName)
HRESULT None xenroll.createFileRequestWStr([in] LONG Flags,[in] LPCWSTR pwszDNName,[in] LPCWSTR pwszUsage,[in] LPCWSTR pwszRequestFileName)
HRESULT None xenroll.createPFX([in] BSTR strPassword,[out] BSTR *pstrPFX)
HRESULT None xenroll.createPFXWStr([in] LPCWSTR pwszPassword,[out] PCRYPT_DATA_BLOB pblobPFX)
HRESULT None xenroll.createPKCS10([in] BSTR DNName,[in] BSTR Usage,[in] BSTR *pPKCS10)
HRESULT None xenroll.createPKCS10WStr([in] LPCWSTR DNName,[in] LPCWSTR Usage,[out] PCRYPT_DATA_BLOB *pPkcs10Blob)
HRESULT None xenroll.CreatePKCS7RequestFromRequest([in] PCRYPT_DATA_BLOB pRequest,[in] PCCERT_CONTEXT pSigningCertContext,[out] PCRYPT_DATA_BLOB pPkcs7Blob)
HRESULT None xenroll.createRequest([in] LONG Flags,[in] BSTR strDNName,[in] BSTR Usage,[out] BSTR *pstrRequest)
HRESULT None xenroll.createRequestWStr([in] LONG Flags,[in] LPCWSTR pwszDNName,[in] LPCWSTR pwszUsage,[out] PCRYPT_DATA_BLOB pblobRequest)
HRESULT None xenroll.EnumAlgs([in] LONG dwIndex,[in] LONG algClass,[out] LONG *pdwAlgID)
HRESULT None xenroll.enumContainers([in] LONG dwIndex,[out] BSTR *pbstrContainerName)
HRESULT None xenroll.enumContainersWStr([in] LONG dwIndex,[out] LPWSTR *ppwsz)
HRESULT None xenroll.enumPendingRequest([in] LONG lIndex,[in] LONG lDesiredProperty,[out] VARIANT *pvarProperty)
HRESULT None xenroll.enumPendingRequestWStr([in] LONG lIndex,[in] LONG lDesiredProperty,[out] LPVOID ppProperty)
HRESULT None xenroll.enumProviders([in] LONG dwIndex,[in] LONG dwFlags,[out] BSTR *pbstrProvName)
HRESULT None xenroll.enumProvidersWStr([in] LONG dwIndex,[in] LONG dwFlags,[out] LPWSTR *pbstrProvName)
HRESULT None xenroll.freeRequestInfoBlob([in] CRYPT_DATA_BLOB PKCS7OrPKCS10)
HRESULT None xenroll.freeRequestInfo([in] BSTR PKCS7OrPKCS10)
HRESULT None xenroll.GetAlgName([in] LONG algID,[out] BSTR *pbstr)
HRESULT None xenroll.GetAlgNameWStr([in] LONG algID,[out] LPWSTR *ppwsz)
HRESULT None xenroll.getCertContextFromFileResponseWStr([in] LPCWSTR pwszResponseFileName,[out] PCCERT_CONTEXT *ppCertContext)
HRESULT None xenroll.getCertContextFromResponseBlob([in] PCRYPT_DATA_BLOB pblobResponse,[out] PCCERT_CONTEXT *ppCertContext)
HRESULT None xenroll.getCertFromFileResponse([in] BSTR strResponseFileName,[out] BSTR *pstrCert)
HRESULT None xenroll.getCertFromPKCS7([in] BSTR wszPKCS7,[out] BSTR *pbstrCert)
HRESULT None xenroll.getCertFromResponse([in] BSTR strResponse,[out] BSTR *pstrCert)
HRESULT None xenroll.GetKeyLenEx([in] LONG lSizeSpec,[in] LONG lKeySpec,[out] LONG *pdwKeySize)
HRESULT None xenroll.GetKeyLen([in] BOOL fMin,[in] BOOL fExchange,[out] LONG *pdwKeySize)
HRESULT None xenroll.getProviderType([in] BSTR strProvName,[out] LONG *plProvType)
HRESULT None xenroll.getProviderTypeWStr([in] LPCWSTR pwszProvName,[out] LONG *plProvType)
HRESULT None xenroll.GetSupportedKeySpec([out] LONG *pdwKeySpec)
HRESULT None xenroll.InstallPKCS7BlobEx([in] PCRYPT_DATA_BLOB pBlobPKCS7,[out] LONG *plCertInstalled)
HRESULT None xenroll.InstallPKCS7Blob([in] PCRYPT_DATA_BLOB pBlobPKCS7)
HRESULT None xenroll.InstallPKCS7Ex([in] BSTR PKCS7,[out] LONG *plCertInstalled)
HRESULT None xenroll.InstallPKCS7([in] BSTR PKCS7)
HRESULT None xenroll.put_CAStoreFlags([in] LONG Flags)
HRESULT None xenroll.put_CAStoreName([in] BSTR Name)
HRESULT None xenroll.put_CAStoreNameWStr([in] LPWSTR szwName)
HRESULT None xenroll.put_CAStoreType([in] BSTR Type)
HRESULT None xenroll.put_CAStoreTypeWStr([in] LPWSTR szwType)
HRESULT None xenroll.put_ClientId([in] LONG lClientID)
HRESULT None xenroll.put_ClientID([in] LONG lClientID)
HRESULT None xenroll.put_ContainerName([in] BSTR Name)
HRESULT None xenroll.put_ContainerNameWStr([in] LPWSTR szwContainer)
HRESULT None xenroll.put_EnableSMIMECapabilities([in] BOOL bValue)
HRESULT None xenroll.put_EnableT61DNEncoding([in] BOOL fBool)
HRESULT None xenroll.put_GenKeyFlags([in] LONG Flags)
HRESULT None xenroll.put_HashAlgID([in] LONG hashAlgID)
HRESULT None xenroll.put_HashAlgorithm([in] BSTR HashAlg)
HRESULT None xenroll.put_HashAlgorithmWStr([in] LPWSTR szwHashAlg)
HRESULT None xenroll.put_IncludeSubjectKeyID([in] BOOL fInclude)
HRESULT None xenroll.put_KeySpec([in] LONG KeySpec)
HRESULT None xenroll.put_KeySpec([in] LONG Spec)
HRESULT None xenroll.put_LimitExchangeKeyToEncipherment([in] BOOL bValue)
HRESULT None xenroll.put_LimitExchangeKeyToEncipherment([in] BOOL fLimitExchangeKeyToEncipherment)
HRESULT None xenroll.put_MyStoreFlags([in] LONG Flags)
HRESULT None xenroll.put_MyStoreName([in] BSTR Name)
HRESULT None xenroll.put_MyStoreNameWStr([in] LPWSTR szwName)
HRESULT None xenroll.put_MyStoreType([in] BSTR Type)
HRESULT None xenroll.put_MyStoreTypeWStr([in] LPWSTR szwType)
HRESULT None xenroll.put_ProviderFlags([in] LONG Flags)
HRESULT None xenroll.put_ProviderNameWStr([in] LPWSTR szwProvider)
HRESULT None xenroll.put_ProviderType([in] LONG Type)
HRESULT None xenroll.put_PVKFileNameWStr([in] LPWSTR szwPVKFileName)
HRESULT None xenroll.put_RenewalCertificate([in] PCCERT_CONTEXT pCertContext)
HRESULT None xenroll.put_RequestStoreFlags([in] LONG Flags)
HRESULT None xenroll.put_RequestStoreName([in] BSTR Name)
HRESULT None xenroll.put_RequestStoreNameWStr([in] LPWSTR szwName)
HRESULT None xenroll.put_RequestStoreType([in] BSTR Type)
HRESULT None xenroll.put_RequestStoreTypeWStr([in] LPWSTR szwType)
HRESULT None xenroll.put_ReuseHardwareKeyIfUnableToGenNew([in] BOOL bValue)
HRESULT None xenroll.put_ReuseHardwareKeyIfUnableToGenNew([in] BOOL fReuseHardwareKeyIfUnableToGenNew)
HRESULT None xenroll.put_RootStoreName([in] BSTR Name)
HRESULT None xenroll.put_RootStoreNameWStr([in] LPWSTR szwName)
HRESULT None xenroll.put_RootStoreType([in] BSTR Type)
HRESULT None xenroll.put_RootStoreTypeWStr([in] LPWSTR szwType)
HRESULT None xenroll.put_SPCFileNameWStr([in] LPWSTR szwSPCFileName)
HRESULT None xenroll.put_ThumbPrintWStr([in] CRYPT_DATA_BLOB thumbPrintBlob)
HRESULT None xenroll.put_UseExistingKeySet([in] BOOL bValue)
HRESULT None xenroll.put_UseExistingKeySet([in] BOOL fUseExistingKeys)
HRESULT None xenroll.put_WriteCertToCSP([in] BOOL bValue)
HRESULT None xenroll.put_WriteCertToCSP([in] BOOL fBool)
HRESULT None xenroll.put_WriteCertToUserDS([in] BOOL bValue)
HRESULT None xenroll.put_WriteCertToUserDS([in] BOOL fBool)
HRESULT None xenroll.removePendingRequest([in] BSTR strThumbprint)
HRESULT None xenroll.removePendingRequestWStr([in] CRYPT_DATA_BLOB thumbPrintBlob)
HRESULT None xenroll.SetHStoreCA([in] HCERTSTORE hStore)
HRESULT None xenroll.SetHStoreMy([in] HCERTSTORE hStore)
HRESULT None xenroll.SetHStoreRequest([in] HCERTSTORE hStore)
HRESULT None xenroll.SetHStoreROOT([in] HCERTSTORE hStore)
HRESULT None xenroll.setPendingRequestInfo([in] LONG lRequestID,[in] BSTR strCADNS,[in] BSTR strCAName,[in] BSTR strFriendlyName)
HRESULT None xenroll.setPendingRequestInfoWStr([in] LONG lRequestID,[in] LPCWSTR pwszCADNS,[in] LPCWSTR pwszCAName,[in] LPCWSTR pwszFriendlyName)
HRESULT None xenroll.SetPrivateKeyArchiveCertificate([in] PCCERT_CONTEXT pPrivateKeyArchiveCert)
HRESULT None xenroll.SetSignerCertificate([in] PCCERT_CONTEXT pSignerCert)
HRESULT None xenroll.stringToBinaryBlob([in] LONG Flags,[in] LPCWSTR pwszString,[out] PCRYPT_DATA_BLOB pblobBinary,[out] LONG *pdwSkip,[out] LONG *pdwFlags)
HRESULT None xenroll.stringToBinary([in] LONG Flags,[in] BSTR strEncoded,[out] BSTR *pstrBinary)
HRESULT PSSTDAPI propsys.PropVariantToWinRTPropertyValue(_In_ REFPROPVARIANT propvar,_In_ REFIID riid,_Out_ void **ppv)
HRESULT STDAPICALLTYPE efswrt.ProtectFileToEnterpriseIdentity(_In_ PCWSTR fileOrFolderPath,_In_ PCWSTR identity)
HRESULT STDAPICALLTYPE kernelbase.WerRegisterAppLocalDump(_In_ PCWSTR localAppDataRelativePath)
HRESULT STDAPICALLTYPE None.DllRegisterCluAdminExtension(_In_ HCLUSTER hCluster)
HRESULT STDAPICALLTYPE oleaut32.SafeArrayAddRef(_In_ SAFEARRAY *psa,_Out_ PVOID **ppDataToRelease)
HRESULT STDAPICALLTYPE oleaut32.SysAddRefString(_In_ BSTR bstrString)
HRESULT STDAPI cldapi.CfCloseHandle(_In_ HANDLE FileHandle)
HRESULT STDAPI cldapi.CfConvertToPlaceholder(_In_ HANDLE FileHandle,_In_opt_ LPCVOID FileIdentity,_In_ DWORD FileIdentityLength,_In_ CF_CONVERT_FLAGS ConvertFlags,_Out_opt_ USN *ConvertUsn,_Inout_opt_ LPOVERLAPPED Overlapped)
HRESULT STDAPI cldapi.CfCreatePlaceholders(_In_ LPCWSTR BaseDirectoryPath,_Inout_ CF_PLACEHOLDER_CREATE_INFO *PlaceholderArray,_In_ DWORD PlaceholderCount,_In_ CF_CREATE_FLAGS CreateFlags,_Out_ PDWORD EntriesProcessed)
HRESULT STDAPI cldapi.CfDisconnectSyncRoot(_In_ CF_CONNECTION_KEY ConnectionKey)
HRESULT STDAPI cldapi.CfGetCorrelationVector(_In_ HANDLE FileHandle,_Out_ PCORRELATION_VECTOR CorrelationVector)
HRESULT STDAPI cldapi.CfGetPlaceholderInfo(_In_ HANDLE FileHandle,_In_ CF_PLACEHOLDER_INFO_CLASS InfoClass,_Out_ PVOID InfoBuffer,_In_ DWORD InfoBufferLength,_Out_opt_ PDWORD ReturnedLength)
HRESULT STDAPI cldapi.CfGetPlaceholderRangeInfo(_In_ HANDLE FileHandle,_In_ CF_PLACEHOLDER_RANGE_INFO_CLASS InfoClass,_In_ LARGE_INTEGER StartingOffset,_In_ LARGE_INTEGER Length,_Out_ PVOID InfoBuffer,_In_ DWORD InfoBufferLength,_Out_opt_ PDWORD ReturnedLength)
HRESULT STDAPI cldapi.CfGetPlaceholderStateFromAttributeTag(_In_ DWORD FileAttributes,_In_ DWORD ReparseTag)
HRESULT STDAPI cldapi.CfGetPlaceholderStateFromFileInfo(_In_ LPCVOID InfoBuffer,_In_ FILE_INFO_BY_HANDLE_CLASS InfoClass)
HRESULT STDAPI cldapi.CfGetPlatformInfo(_Out_ CF_PLATFORM_INFO *PlatformVersion)
HRESULT STDAPI cldapi.CfGetSyncRootInfoByHandle(_In_ HANDLE FileHandle,_In_ CF_SYNC_ROOT_INFO_CLASS InfoClass,_Out_ PVOID InfoBuffer,_In_ DWORD InfoBufferLength,_Out_opt_ PDWORD *ReturnedLength)
HRESULT STDAPI cldapi.CfGetSyncRootInfoByPath(_In_ LPCWSTR FilePath,_In_ CF_SYNC_ROOT_INFO_CLASS InfoClass,_Out_ PVOID InfoBuffer,_In_ DWORD InfoBufferLength,_Out_opt_ PDWORD *ReturnedLength)
HRESULT STDAPI cldapi.CfGetTransferKey(_In_ HANDLE FileHandle,_Out_ PLARGE_INTEGER TransferKey)
HRESULT STDAPI cldapi.CfHydratePlaceholder(_In_ HANDLE FileHandle,_In_ LARGE_INTEGER StartingOffset,_In_ LARGE_INTEGER Length,_In_ CF_HYDRATE_FLAGS HydrateFlags,_Inout_opt_ LPOVERLAPPED Overlapped)
HRESULT STDAPI cldapi.CfOpenFileWithOplock(_In_ LPCWSTR FilePath,_In_ CF_OPEN_FILE_FLAGS Flags,_Out_ PHANDLE ProtectedHandle)
HRESULT STDAPI cldapi.CfQuerySyncProviderStatus(_In_ CF_CONNECTION_KEY ConnectionKey,_Out_ CF_SYNC_PROVIDER_STATUS *ProviderStatus)
HRESULT STDAPI cldapi.CfReferenceProtectedHandle(_In_ HANDLE ProtectedHandle)
HRESULT STDAPI cldapi.CfReleaseProtectedHandle(_In_ HANDLE ProtectedHandle)
HRESULT STDAPI cldapi.CfReleaseTransferKey(_In_ HANDLE FileHandle,_In_ PLARGE_INTEGER TransferKey)
HRESULT STDAPI cldapi.CfReportProviderProgress(_In_ CF_CONNECTION_KEY ConnectionKey,_In_ LARGE_INTEGER TransferKey,_In_ LARGE_INTEGER ProviderProgressTotal,_In_ LARGE_INTEGER ProviderProgressCompleted)
HRESULT STDAPI cldapi.CfRevertPlaceholder(_In_ HANDLE FileHandle,_In_ CF_REVERT_FLAGS RevertFlags,_Inout_opt_ LPOVERLAPPED Overlapped)
HRESULT STDAPI cldapi.CfSetInSyncState(_In_ HANDLE FileHandle,_In_ CF_IN_SYNC_STATE InSyncState,_In_ CF_SET_IN_SYNC_FLAGS InSyncFlags,_Inout_opt_ USN *InSyncUsn)
HRESULT STDAPI cldapi.CfSetPinState(_In_ HANDLE FileHandle,_In_ CF_PIN_STATE PinState,_In_ CF_SET_PIN_FLAGS PinFlags,_Inout_opt_ LPOVERLAPPED Overlapped)
HRESULT STDAPI cldapi.CfUnregisterSyncRoot(_In_ LPCWSTR SyncRootPath)
HRESULT STDAPI cldapi.CfUpdateSyncProviderStatus(_In_ CF_CONNECTION_KEY ConnectionKey,_In_ CF_SYNC_PROVIDER_STATUS ProviderStatus)
HRESULT STDAPI ndfapi.NdfCreateGroupingIncident(_In_opt_ LPCWSTR CloudName,_In_opt_ LPCWSTR GroupName,_In_opt_ LPCWSTR Identity,_In_opt_ LPCWSTR Invitation,_In_opt_ SOCKET_ADDRESS_LIST *Addresses,_In_opt_ LPCWSTR appId,_Out_ NDFHANDLE *handle)
HRESULT STDAPI ndfapi.NdfCreatePnrpIncident(_In_ LPCWSTR cloudname,_In_opt_ LPCWSTR peername,_In_ BOOL diagnosePublish,_In_opt_ LPCWSTR appId,_Out_ NDFHANDLE *handle)
HRESULT STDAPI ndfapi.NdfDiagnoseIncident(_In_ NDFHANDLE Handle,_Out_ ULONG *RootCauseCount,_Out_ RootCauseInfo **RootCauses,DWORD dwWait None,DWORD dwFlags None)
HRESULT STDAPI ndfapi.NdfGetTraceFile(_In_ NDFHANDLE Handle,_Out_ LPCWSTR *TraceFileLocation)
HRESULT STDAPI shcore.CreateRandomAccessStreamOnFile(_In_ PCWSTR filePath,_In_ DWORD accessMode,_In_ REFIID riid,_Out_ void **ppv)
HRESULT STDAPI srpapi.SrpCloseThreadNetworkContext(_Inout_ HTHREAD_NETWORK_CONTEXT *threadNetworkContext)
HRESULT STDAPI srpapi.SrpCreateThreadNetworkContext(_In_ PCWSTR enterpriseId,_Out_ HTHREAD_NETWORK_CONTEXT *threadNetworkContext)
HRESULT STDAPI srpapi.SrpEnablePermissiveModeFileEncryption(_In_opt_ PCWSTR enterpriseId)
HRESULT STDAPI srpapi.SrpGetEnterpriseIds(_In_ HANDLE tokenHandle,_Inout_opt_ PULONG numberOfBytes,_Out_opt_ PCWSTR enterpriseIds,_Out_ PULONG enterpriseIdCount)
HRESULT STDAPI srpapi.SrpIsTokenService(_In_ HANDLE tokenHandle,_Out_ BOOL *IsTokenService)
HRESULT STDAPI srpapi.SrpSetTokenEnterpriseId(_In_ HANDLE tokenHandle,_In_opt_ PCWSTR enterpriseId)
HRESULT STDAPI sxs.CreateAssemblyCache(IAssemblyCache **ppAsmCache None,DWORD dwReserved None)
HRESULT STDAPI wsdapi.WSDXMLAddChild(WSDXML_ELEMENT *pParent None,WSDXML_ELEMENT *pChild None)
HRESULT STDAPI wsdapi.WSDXMLAddSibling(_In_ WSDXML_ELEMENT *pFirst,_In_ WSDXML_ELEMENT *pSecond)
HRESULT __stdcall comsvcs.CoEnterServiceDomain(_In_ IUnknown *pConfigObject)
HRESULT __stdcall None.AlertSamplesAvailFunc(void None None)
HRESULT __stdcall None.DllCanUnloadNow(void None None)
HRESULT __stdcall None.DllGetClassObject(_In_ REFCLSID rclsid,_In_ REFIID riid,_Out_ LPVOID *ppv)
HRESULT __stdcall None.DllRegisterServer(void None None)
HRESULT __stdcall None.DllUnregisterServer(void None None)
HRESULT __stdcall None.DRMCallback(DRM_STATUS_MSG msg None,HRESULT hr None,VOID *pvParam None,VOID *pvContext None)
HRESULT __stdcall None.LogTimeProvEventFunc(_In_ WORD wType,_In_ WCHAR *wszProvName,_In_ WCHAR *wszMessage)
HRESULT __stdcall None.MFCreateMP3ByteStreamPlugin(_In_ REFIID riid,_Out_ LPVOID *ppvHandler)
HRESULT __stdcall None.SetProviderStatusFunc(_In_ SetProviderStatusInfo *pspsi)
HRESULT __stdcall None.TimeProvClose(_In_ TimeProvHandle hTimeProv)
HRESULT __stdcall None.TimeProvCommand(_In_ TimeProvHandle hTimeProv,_In_ TimeProvCmd eCmd,_In_ PVOID pvArgs)
HRESULT __stdcall None.TimeProvOpen(_In_ WCHAR *wszName,_In_ TimeProvSysCallbacks *pSysCallbacks,_Out_ TimeProvHandle *phTimeProv)
HRESULT _stdcall wiaservc.wiasSetValidRangeFloat(_In_ BYTE *pWiasContext,PROPID propid None,FLOAT fMin None,FLOAT fNom None,FLOAT fMax None,FLOAT fStep None)
HRESULT _stdcall wiaservc.wiasSetValidRangeLong(_In_ BYTE *pWiasContext,PROPID propid None,LONG lMin None,LONG lNom None,LONG lMax None,LONG lStep None)
HRESULT STDMETHODCALLTYPE None.Configure(HBLOB hConfigurationBlob None,HBLOB hErrorBlob None)
HRESULT STDMETHODCALLTYPE None.Connect(HBLOB hInputBlob None,DWORD StatusCallbackProc None,DWORD UserContext None,HBLOB hErrorBlob None)
HRESULT STDMETHODCALLTYPE None.Connect(HBLOB hInputBlob None,LPVOID StatusCallbackProc None,LPVOID FramesCallbackProc None,LPVOID UserContext None,HBLOB hErrorBlob None)
HRESULT STDMETHODCALLTYPE None.DoConfigure(char* pName None,char* pConfiguration None,char** ppScriptInstance None)
HRESULT STDMETHODCALLTYPE None.GetControlState(BOOL* IsRunnning None,BOOL* IsPaused None)
HRESULT STDMETHODCALLTYPE None.GetConversationStatistics(DWORD* nSessions None,LPSESSIONSTATS lpSessionStats None,DWORD* nStations None,LPSTATIONSTATS lpStationStats None,BOOL fClearAfterReading None)
HRESULT STDMETHODCALLTYPE None.GetNetworkConnections([out] IEnumNetworkConnections **ppEnumNetworkConnection)
HRESULT STDMETHODCALLTYPE None.GetTotalStatistics(LPSTATISTICS lpStats None,BOOL fClearAfterReading None)
HRESULT STDMETHODCALLTYPE None.Pause(LPSTATISTICS lpStats None)
HRESULT STDMETHODCALLTYPE None.QueryStations(QUERYTABLE* lpQueryTable None)
HRESULT STDMETHODCALLTYPE None.Start(char* pFileName None)
HRESULT STDMETHODCALLTYPE None.Stop(LPSTATISTICS lpStats None)
HRESULT STDMETHODCALLTYPE None.WMCreateDRMTranscryptionManager(IWMDRMTranscryptionManager ppTranscryptionManager None)
HRESULT STDMETHODCALLTYPE None.WMCreateSecureChannel_Certified(IWMSecureChannel **ppChannel None)
HRESULT STDMETHODCALLTYPE None.WMCreateSecureChannel_DES(IWMSecureChannel **ppChannel None)
HRESULT STDMETHODCALLTYPE None.WMCreateSecureChannel(IWMSecureChannel **ppChannel None)
HRESULT STDMETHODCALLTYPE ole32.CStdAsyncStubBuffer2_Connect(_In_ IRpcStubBuffer *pthis,_In_ IUnknown *pUnkServer)
HRESULT STDMETHODCALLTYPE ole32.CStdAsyncStubBuffer_Connect(_In_ IRpcStubBuffer *pthis,_In_ IUnknown *pUnkServer)
HRESULT STDMETHODCALLTYPE ole32.CStdAsyncStubBuffer_Invoke(_In_ IRpcStubBuffer *pthis,_In_ RPCOLEMESSAGE *_prpcmsg,_In_ IRpcChannelBuffer *_pRpcChannelBuffer)
HRESULT STDMETHODCALLTYPE ole32.CStdAsyncStubBuffer_QueryInterface(_In_ IRpcStubBuffer *pthis,_In_ REFIID riid,_Out_ void **ppvObject)
HRESULT STDMETHODCALLTYPE ole32.CStdStubBuffer2_Connect(_In_ IRpcStubBuffer *pthis,_In_ IUnknown *pUnkServer)
HRESULT STDMETHODCALLTYPE ole32.CStdStubBuffer2_QueryInterface(_In_ IRpcStubBuffer *This,_In_ REFIID riid,_Out_ void **ppvObject)
HRESULT STDMETHODCALLTYPE rpcrt4.CStdStubBuffer_Connect(_In_ IRpcStubBuffer *This,_In_ IUnknown *pUnkServer)
HRESULT STDMETHODCALLTYPE rpcrt4.CStdStubBuffer_DebugServerQueryInterface(_In_ IRpcStubBuffer *This,_Out_ void **ppv)
HRESULT STDMETHODCALLTYPE rpcrt4.CStdStubBuffer_Invoke(_In_ IRpcStubBuffer *This,_In_ RPCOLEMESSAGE *pRpcMsg,_In_ IRpcChannelBuffer *pRpcChannelBuffer)
HRESULT STDMETHODCALLTYPE rpcrt4.CStdStubBuffer_QueryInterface(_In_ IRpcStubBuffer *This,_In_ REFIID riid,_Out_ void **ppvObject)
HRESULT STDMETHODCALLTYPE wmdrmsdk.WMDRMCreateProvider(_Out_ IWMDRMProvider **ppDRMProvider)
HRESULT THEMEAPI uxtheme.GetThemeAnimationProperty(_In_ HTHEME hTheme,_In_ int iStoryboardId,_In_ int iTargetId,_In_ TA_PROPERTY eProperty,_Out_ VOID *pvProperty,_In_ DWORD cbSize,_Out_ DWORD pcbSizeOut)
HRESULT THEMEAPI uxtheme.GetThemeAnimationTransform(_In_ HTHEME hTheme,_In_ int iStoryboardId,_In_ int iTargetId,_In_ DWORD dwTransformIndex,_Out_ TA_TRANSFORM *pTransform,_In_ DWORD cbSize,_Out_ DWORD pcbSizeOut)
HRESULT THEMEAPI uxtheme.GetThemeTimingFunction(_In_ HTHEME hTheme,_In_ int iTimingFunctionId,_Out_ TA_TIMINGFUNCTION *pTimingFunction,_In_ DWORD cbSize,_Out_ DWORD pcbSizeOut)
HRESULT WDSBPAPI wdsbp.WdsBpAddOption(_In_ HANDLE hHandle,_In_ ULONG uOption,_In_ ULONG uValueLen,_In_ PVOID pValue)
HRESULT WDSBPAPI wdsbp.WdsBpGetOptionBuffer(_In_ HANDLE hHandle,_In_ ULONG uBufferLen,_Out_ PVOID pBuffer,_Out_ PULONG puBytes)
HRESULT WDSBPAPI wdsbp.WdsBpInitialize(_In_ BYTE bPacketType,_Out_ HANDLE *phHandle)
HRESULT WDSBPAPI wdsbp.WdsBpParseInitialize(_In_ PVOID pPacket,_In_ ULONG uPacketLen,_Out_opt_ PBYTE pbPacketType,_Out_ HANDLE *phHandle)
HRESULT WDSCLIAPI wdsclientapi.WdsCliAuthorizeSession(_Inout_ HANDLE hSession,_In_opt_ PWDS_CLI_CRED pCred)
HRESULT WDSCLIAPI wdsclientapi.WdsCliCancelTransfer(_In_ HANDLE hTransfer)
HRESULT WDSCLIAPI wdsclientapi.WdsCliClose(_In_ HANDLE Handle)
HRESULT WDSCLIAPI wdsclientapi.WdsCliCreateSession(_In_ PWSTR pwszServer,_In_opt_ PWDS_CLI_CRED pCred,_Out_ PHANDLE phSession)
HRESULT WDSCLIAPI wdsclientapi.WdsCliFindFirstImage(_In_ HANDLE hSession,_Out_ PHANDLE phFindHandle)
HRESULT WDSCLIAPI wdsclientapi.WdsCliFindNextImage(_In_ HANDLE Handle)
HRESULT WDSCLIAPI wdsclientapi.WdsCliGetDriverQueryXml(_In_opt_ PWSTR pwszWinDirPath,_Out_ PWSTR *ppwszDriverQuery)
HRESULT WDSCLIAPI wdsclientapi.WdsCliGetEnumerationFlags(_In_ HANDLE Handle,_Out_ PDWORD pdwFlags)
HRESULT WDSCLIAPI wdsclientapi.WdsCliGetImageArchitecture(_In_ HANDLE hIfh,_Out_ PDWORD pdwValue)
HRESULT WDSCLIAPI wdsclientapi.WdsCliGetImageDescription(_In_ HANDLE hIfh,_Out_ PWSTR *ppwszValue)
HRESULT WDSCLIAPI wdsclientapi.WdsCliGetImageGroup(_In_ HANDLE hIfh,_Out_ PWSTR *ppwszValue)
HRESULT WDSCLIAPI wdsclientapi.WdsCliGetImageHalName(_In_ HANDLE hIfh,_Out_ PWSTR *ppwszValue)
HRESULT WDSCLIAPI wdsclientapi.WdsCliGetImageHandleFromFindHandle(_In_ HANDLE FindHandle,_Out_ PHANDLE phImageHandle)
HRESULT WDSCLIAPI wdsclientapi.WdsCliGetImageIndex(_In_ HANDLE hIfh,_Out_ PDWORD pdwValue)
HRESULT WDSCLIAPI wdsclientapi.WdsCliGetImageLanguage(_In_ HANDLE hIfh,_Out_ PWSTR *ppwszValue)
HRESULT WDSCLIAPI wdsclientapi.WdsCliGetImageLanguages(_In_ HANDLE hIfh,_Out_ PTSTR **pppszValues,_Out_ PDWORD pdwNumValues)
HRESULT WDSCLIAPI wdsclientapi.WdsCliGetImageLastModifiedTime(_In_ HANDLE hIfh,_Out_ PSYSTEMTIME *ppSysTimeValue)
HRESULT WDSCLIAPI wdsclientapi.WdsCliGetImagePath(_In_ HANDLE hIfh,_Out_ PWSTR *ppwszValue)
HRESULT WDSCLIAPI wdsclientapi.WdsCliGetImageSize(_In_ HANDLE hIfh,_Out_ PULONGLONG pullValue)
HRESULT WDSCLIAPI wdsclientapi.WdsCliGetImageVersion(_In_ HANDLE hIfh,_Out_ PWSTR *ppwszValue)
HRESULT WDSCLIAPI wdsclientapi.WdsCliGetTransferSize(_In_ HANDLE hIfh,_Out_ PULONGLONG pullValue)
HRESULT WDSCLIAPI wdsclientapi.WdsCliInitializeLog(_In_ HANDLE hSession,_In_ ULONG ulClientArchitecture,_In_ PWSTR pwszClientId,_In_ PWSTR pwszClientAddress)
HRESULT WDSCLIAPI wdsclientapi.WdsCliLog(_In_ HANDLE hSession,_In_ ULONG ulLogLevel,_In_ ULONG ulMessageCode,Varies ... None)
HRESULT WDSCLIAPI wdsclientapi.WdsCliObtainDriverPackagesEx(_In_ HANDLE hSession,_Out_ PWSTR pwszDriverQuery,_Out_ PWSTR *ppwszServerName,_Out_ PWSTR **pppwszDriverPackages,_Out_ ULONG *pulCount)
HRESULT WDSCLIAPI wdsclientapi.WdsCliObtainDriverPackages(_In_ HANDLE hImage,_Out_ PWSTR *ppwszServerName,_Out_ PWSTR **pppwszDriverPackages,_Out_ ULONG *pulCount)
HRESULT WDSCLIAPI wdsclientapi.WdsCliRegisterTrace(_In_opt_ PFN_WdsCliTraceFunction pfn)
HRESULT WDSCLIAPI wdsclientapi.WdsCliTransferFile(_In_ PCWSTR pwszServer,_In_ PCWSTR pwszNamespace,_In_ PCWSTR pwszRemoteFilePath,_In_ PCWSTR pwszLocalFilePath,_In_ DWORD dwFlags,_Reserved_ DWORD dwReserved,_In_opt_ PFN_WdsCliCallback pfnWdsCliCallback,_In_opt_ PVOID pvUserData,_Out_ PHANDLE phTransfer)
HRESULT WDSCLIAPI wdsclientapi.WdsCliTransferImage(_In_ HANDLE hImage,_In_ PWSTR pwszLocalPath,_In_ DWORD dwFlags,_Reserved_ DWORD dwReserved,_In_opt_ PFN_WdsCliCallback pfnWdsCliCallback,_In_opt_ PVOID pvUserData,_Out_ PHANDLE phTransfer)
HRESULT WDSCLIAPI wdsclientapi.WdsCliWaitForTransfer(_In_ HANDLE hTransfer)
HRESULT WDSMCSAPI wdsmc.WdsTransportServerRegisterCallback(_In_ HANDLE hProvider,_In_ TRANSPORTPROVIDER_CALLBACK_ID CallbackId,_In_ PVOID pfnCallback)
HRESULT WDSMCSAPI wdsmc.WdsTransportServerTrace(_In_ HANDLE hProvider,_In_ WDS_MC_SEVERITY Severity,_In_ LPCWSTR pwszFormat)
HRESULT WDSMCSAPI wdsmc.WdsTransportServerTraceV(_In_ HANDLE hProvider,_In_ WDS_MC_SEVERITY Severity,_In_ LPCWSTR pwszFormat,_In_ va_list Params)
HRESULT WDSTRANSPORTPROVIDERAPI None.WdsTransportProviderCloseContent(_In_ HANDLE hContent)
HRESULT WDSTRANSPORTPROVIDERAPI None.WdsTransportProviderCompareContent(_In_ HANDLE hInstance,_In_ PCWSTR pwszContentName,_In_ HANDLE hContent,_Out_ PBOOL pbContentMatches)
HRESULT WDSTRANSPORTPROVIDERAPI None.WdsTransportProviderInitialize(_In_ PWDS_TRANSPORTPROVIDER_INIT_PARAMS pInParameters,_Out_ PWDS_TRANSPORTPROVIDER_SETTINGS pSettings,_In_ ULONG ulLength)
HRESULT WDSTRANSPORTPROVIDERAPI None.WdsTransportProviderReadContent(_In_ HANDLE hContent,_In_ PVOID pBuffer,_In_ ULONG ulBytesToRead,_In_ PULARGE_INTEGER pContentOffset,_In_ PVOID pvUserData)
HRESULT WINAPI aclui.EditSecurityAdvanced(_In_ HWND hwndOwner,_In_ LPSECURITYINFO psi,_In_ SI_PAGE_TYPE uSIPage)
HRESULT WINAPI bthprops.BluetoothSendAuthenticationResponseEx(_In_opt_ HANDLE hRadioIn,_In_ PBLUETOOTH_AUTHENTICATE_RESPONSE pauthResponse)
HRESULT WINAPI cldapi.CfGetPlaceholderStateFromFindData(_In_ LPWIN32_FIND_DATA FindData)
HRESULT WINAPI combase.CoGetSystemSecurityPermissions(_In_ COMSD comSDType,_Out_ PSECURITY_DESCRIPTOR *ppSD)
HRESULT WINAPI combase.SetRestrictedErrorInfo(_In_ IRestrictedErrorInfo *pRestrictedErrorInfo)
HRESULT WINAPI comdlg32.PrintDlgExA(_Inout_ LPPRINTDLGEX lppd)
HRESULT WINAPI comdlg32.PrintDlgEx(_Inout_ LPPRINTDLGEX lppd)
HRESULT WINAPI comdlg32.PrintDlgExW(_Inout_ LPPRINTDLGEX lppd)
HRESULT WINAPI coremessaging.CreateDispatcherQueueController(_In_ DispatcherQueueOptions options,_Out_ DispatcherQueueController dispatcherQueueController)
HRESULT WINAPI cryptdlg.CertModifyCertificatesToTrust(_In_ int cCerts,_In_ PCTL_MODIFY_REQUEST rgCerts,_In_ LPCSTR szPurpose,_In_ HWND hwnd,_In_opt_ HCERTSTORE hcertstoreTrust,_In_opt_ PCCERT_CONTEXT pccertSigner)
HRESULT WINAPI cryptui.CertSelectionGetSerializedBlob(_In_ PCERT_SELECTUI_INPUT pcsi,_Out_ void **ppOutBuffer,_Out_ ULONG *pulOutBufferSize)
HRESULT WINAPI cryptxml.CryptXmlClose(_In_ HXML hCryptXml)
HRESULT WINAPI cryptxml.CryptXmlDigestReference(_In_ HCRYPTXML hReference,DWORD dwFlags None,_In_ CRYPT_XML_DATA_PROVIDER *pDataProviderIn)
HRESULT WINAPI cryptxml.CryptXmlGetStatus(HCRYPTXML hCryptXml None,CRYPT_XML_STATUS *pStatus None)
HRESULT WINAPI cryptxml.CryptXmlGetTransforms(_Out_ PCRYPT_XML_TRANSFORM_CHAIN_CONFIG **pConfig)
HRESULT WINAPI cryptxml.CryptXmlImportPublicKey(DWORD dwFlags None,_In_ CRYPT_XML_KEY_VALUE *pKeyValue,_Out_ BCRYPT_KEY_HANDLE *phKey)
HRESULT WINAPI cryptxml.CryptXmlOpenToEncode(_In_opt_ CRYPT_XML_TRANSFORM_CHAIN_CONFIG *pConfig,DWORD dwFlags None,_In_opt_ LPCWSTR wszId,_In_ CRYPT_XML_PROPERTY *rgProperty,_In_ ULONG cProperty,_In_opt_ CRYPT_XML_BLOB *pEncoded,HCRYPTXML *phSignature None)
HRESULT WINAPI cryptxml.CryptXmlVerifySignature(_In_ HCRYPTXML hSignature,_In_opt_ BCRYPT_KEY_HANDLE hKey,DWORD dwFlags None)
HRESULT WINAPI d3d12.D3D12CreateDevice(_In_opt_ IUnknown *pAdapter,D3D_FEATURE_LEVEL MinimumFeatureLevel None,_In_ REFIID riid,_Out_opt_ void **ppDevice)
HRESULT WINAPI d3dcompiler_47.D3DCompressShaders(in UINT uNumShaders,in D3D_SHADER_DATA pShaderData,in UINT uFlags,out ID3DBlob ppCompressedData)
HRESULT WINAPI d3dcompiler_47.D3DDecompressShaders(in LPCVOID pSrcData,in SIZE_T SrcDataSize,in UINT uNumShaders,in UINT uStartIndex,in_opt UINT pIndices,in UINT uFlags,out ID3DBlob ppShaders,out_opt UINT pTotalShaders)
HRESULT WINAPI d3dcompiler_47.D3DDisassemble10Effect(in ID3D10Effect pEffect,in UINT Flags,out ID3DBlob ppDisassembly)
HRESULT WINAPI d3dcompiler_47.D3DDisassemble11Trace(in LPCVOID pSrcData,in SIZE_T SrcDataSize,in ID3D11ShaderTrace pTrace,in UINT StartStep,in UINT NumSteps,in UINT Flags,out ID3DBlob ppDisassembly)
HRESULT WINAPI d3dcompiler_47.D3DDisassemble(in LPCVOID pSrcData,in SIZE_T SrcDataSize,in UINT Flags,in_opt LPCSTR szComments,out ID3DBlob ppDisassembly)
HRESULT WINAPI d3dcompiler_47.D3DDisassembleRegion(in LPCVOID pSrcData,in SIZE_T SrcDataSize,in UINT Flags,in_opt LPCSTR szComments,in SIZE_T StartByteOffset,in SIZE_T NumInsts,out_opt SIZE_T pFinishByteOffset,out ID3DBlob ppDisassembly)
HRESULT WINAPI d3dcompiler_47.D3DGetBlobPart(in LPCVOID pSrcData,in SIZE_T SrcDataSize,in D3D_BLOB_PART Part,in UINT Flags,out ID3DBlob ppPart)
HRESULT WINAPI d3dcompiler_47.D3DGetDebugInfo(in LPCVOID pSrcData,in SIZE_T SrcDataSize,out ID3DBlob ppDebugInfo)
HRESULT WINAPI d3dcompiler_47.D3DGetInputAndOutputSignatureBlob(in LPCVOID pSrcData,in SIZE_T SrcDataSize,out ID3DBlob ppSignatureBlob)
HRESULT WINAPI d3dcompiler_47.D3DGetInputSignatureBlob(in LPCVOID pSrcData,in SIZE_T SrcDataSize,out ID3DBlob ppSignatureBlob)
HRESULT WINAPI d3dcompiler_47.D3DGetOutputSignatureBlob(in LPCVOID pSrcData,in SIZE_T SrcDataSize,out ID3DBlob ppSignatureBlob)
HRESULT WINAPI d3dcompiler_47.D3DLoadModule(_In_ LPCVOID pSrcData,_In_ SIZE_T cbSrcDataSize,_Out_ ID3D11Module **ppModule)
HRESULT WINAPI d3dcompiler_47.D3DReflectLibrary(_In_ LPCVOID pSrcData,_In_ SIZE_T SrcDataSize,_In_ REFIID riid,_Out_ LPVOID *ppReflector)
HRESULT WINAPI d3dcompiler_47.D3DSetBlobPart(in LPCVOID pSrcData,in SIZE_T SrcDataSize,in D3D_BLOB_PART Part,in UINT Flags,in LPCVOID pPart,in SIZE_T PartSize,out ID3DBlob ppNewShader)
HRESULT WINAPI d3dcompiler_47.D3DWriteBlobToFile(in ID3DBlob pBlob,in LPCWSTR pFileName,in BOOL bOverwrite)
HRESULT WINAPI dismapi.DismAddCapability(_In_ DismSession Session,_In_ PCWSTR Name,_In_ BOOL LimitAccess,_In_ PCWSTR* SourcePaths,_In_opt_ UINT SourcePathCount,_In_opt_ HANDLE CancelEvent,_In_opt_ DISM_PROGRESS_CALLBACK Progress,_In_opt_ PVOID UserData)
HRESULT WINAPI dismapi.DismAddDriver(_In_ DismSession Session,_In_ PCWSTR DriverPath,_In_ BOOL ForceUnsigned)
HRESULT WINAPI dismapi.DismAddPackage(_In_ DismSession Session,_In_ PCWSTR PackagePath,_In_ BOOL IgnoreCheck,_In_ BOOL PreventPending,_In_opt_ HANDLE CancelEvent,_In_opt_ DISM_PROGRESS_CALLBACK Progress,_In_opt_ PVOID UserData)
HRESULT WINAPI dismapi.DismApplyUnattend(_In_ DismSession Session,_In_ PCWSTR UnattendFile,_In_ BOOL SingleSession)
HRESULT WINAPI dismapi.DismCloseSession(_In_ DismSession Session)
HRESULT WINAPI dismapi.DismCommitImage(_In_ DismSession Session,_In_ DWORD Flags,_In_opt_ HANDLE CancelEvent,_In_opt_ DISM_PROGRESS_CALLBACK Progress,_In_opt_ PVOID UserData)
HRESULT WINAPI dismapi.DismDelete(_In_ VOID *DismStructure)
HRESULT WINAPI dismapi.DismDisableFeature(_In_ DismSession Session,_In_ PCWSTR FeatureName,_In_opt_ PCWSTR PackageName,_In_ BOOL RemovePayload,_In_opt_ HANDLE CancelEvent,_In_opt_ DISM_PROGRESS_CALLBACK Progress,_In_opt_ PVOID UserData)
HRESULT WINAPI dismapi.DismEnableFeature(_In_ DismSession Session,_In_ PCWSTR FeatureName,_In_opt_ PCWSTR Identifier,_In_opt_ DismPackageIdentifier PackageIdentifier,_In_ BOOL LimitAccess,_In_opt_ PCWSTR *SourcePaths,_In_opt_ UINT SourcePathCount,_In_ BOOL EnableAll,_In_opt_ HANDLE CancelEvent,_In_opt_ DISM_PROGRESS_CALLBACK Progress,_In_opt_ PVOID UserData)
HRESULT WINAPI dismapi.DismGetCapabilities(_In_ DismSession Session,_In_ DismCapability Capability,_In_ UINT Count)
HRESULT WINAPI dismapi.DismGetCapabilityInfo(_In_ DismSession Session,_In_ PCWSTR Name,_In_ DismCapabilityInfo** Info)
HRESULT WINAPI dismapi.DismGetDriverInfo(_In_ DismSession Session,_In_ PCWSTR DriverPath,_Out_ DismDriver **Driver,_Out_ UINT *Count,_Out_opt_ DismDriverPackage **DriverPackage)
HRESULT WINAPI dismapi.DismGetDrivers(_In_ DismSession Session,_In_ BOOL AllDrivers,_Out_ DismDriverPackage **DriverPackage,_Out_ UINT *Count)
HRESULT WINAPI dismapi.DismGetFeatureInfo(_In_ DismSession Session,_In_ PCWSTR FeatureName,_In_opt_ PCWSTR Identifier,_In_opt_ DismPackageIdentifier PackageIdentifier,_Out_ DismFeatureInfo **FeatureInfo)
HRESULT WINAPI dismapi.DismGetFeatureParent(_In_ DismSession Session,_In_ PCWSTR FeatureName,_In_opt_ PCWSTR Identifier,_In_opt_ DismPackageIdentifier PackageIdentifier,_Out_ DismFeature **Feature,_Out_ UINT *Count)
HRESULT WINAPI dismapi.DismGetFeatures(_In_ DismSession Session,_In_opt_ PCWSTR Identifier,_In_opt_ DismPackageIdentifier PackageIdentifier,_Out_ DismFeature **Feature,_Out_ UINT *Count)
HRESULT WINAPI dismapi.DismGetLastErrorMessage(_Out_ DismString **ErrorMessage)
HRESULT WINAPI dismapi.DismGetMountedImageInfo(_Out_ DismMountedImageInfo **MountedImageInfo,_Out_ UINT *Count)
HRESULT WINAPI dismapi.DismGetPackageInfo(_In_ DismSession Session,_In_ PCWSTR Identifier,_In_ DismPackageIdentifier PackageIdentifier,_Out_ DismPackageInfo **PackageInfo)
HRESULT WINAPI dismapi.DismGetPackages(_In_ DismSession Session,_Out_ DismPackage **Package,_Out_ UINT *Count)
HRESULT WINAPI dismapi.DismInitialize(_In_ DismLogLevel LogLevel,_In_opt_ PCWSTR LogFilePath,_In_opt_ PCWSTR ScratchDirectory)
HRESULT WINAPI dismapi.DismMountImage(_In_ PCWSTR ImageFilePath,_In_ PCWSTR MountPath,_In_ UINT ImageIndex,_In_opt_ PCWSTR ImageName,_In_ DismImageIdentifier ImageIdentifier,_In_ DWORD Flags,_In_opt_ HANDLE CancelEvent,_In_opt_ DISM_PROGRESS_CALLBACK Progress,_In_opt_ PVOID UserData)
HRESULT WINAPI dismapi.DismOpenSession(_In_ PCWSTR ImagePath,_In_opt_ PCWSTR WindowsDirectory,_In_opt_ PCWSTR SystemDrive,_Out_ DismSession *Session)
HRESULT WINAPI dismapi.DismRemountImage(_In_ PCWSTR MountPath)
HRESULT WINAPI dismapi.DismRemoveCapability(_In_ DismSession Session,_In_ PCWSTR Name,_In_opt_ HANDLE CancelEvent,_In_opt_ DISM_PROGRESS_CALLBACK Progress,_In_opt_ PVOID UserData)
HRESULT WINAPI dismapi.DismRemoveDriver(_In_ DismSession Session,_In_ PCWSTR DriverPath)
HRESULT WINAPI dismapi.DismRemovePackage(_In_ DismSession Session,_In_ PCWSTR Identifier,_In_ DismPackageIdentifier PackageIdentifier,_In_opt_ HANDLE CancelEvent,_In_opt_ DISM_PROGRESS_CALLBACK Progress,_In_opt_ PVOID UserData)
HRESULT WINAPI dismapi.DismRestoreImageHealth(_In_ DismSession Session,_In_opt_ PCWSTR *SourcePaths,_In_opt_ UINT SourcePathCount,_In_ BOOL LimitAccess,_In_opt_ HANDLE CancelEvent,_In_opt_ DISM_PROGRESS_CALLBACK Progress,_In_opt_ PVOID UserData)
HRESULT WINAPI dismapi.DismUnmountImage(_In_ PCWSTR MountPath,_In_ DWORD Flags,_In_opt_ HANDLE CancelEvent,_In_opt_ DISM_PROGRESS_CALLBACK Progress,_In_opt_ PVOID UserData)
HRESULT WINAPI drt.DrtClose(_In_ HDRT hDrt)
HRESULT WINAPI drt.DrtContinueSearch(_In_ HDRT_SEARCH_CONTEXT hSearchContext)
HRESULT WINAPI drt.DrtCreateDerivedKey(_In_ PCCERT_CONTEXT pRootCert,_In_ PCCERT_CONTEXT pLocalCert,_Out_ DRT_DATA *pKey)
HRESULT WINAPI drt.DrtCreateDerivedKeySecurityProvider(_In_ PCCERT_CONTEXT pRootCert,_Out_ DRT_SECURITY_PROVIDER **ppSecurityProvider)
HRESULT WINAPI drt.DrtCreateDnsBootstrapResolver(_In_ USHORT port,_In_ PCWSTR pwszAddress,_Out_ DRT_BOOTSTRAP_PROVIDER **ppModule)
HRESULT WINAPI drt.DrtCreateIpv6UdpTransport(DRT_SCOPE scope None,ULONG dwScopeId None,ULONG dwLocalityThreshold None,_Inout_ USHORT *pwPort,_Out_ HTRANSPORT *phTransport)
HRESULT WINAPI drt.DrtCreatePnrpBootstrapResolver(_In_ BOOL fPublish,_In_ PCWSTR pwzPeerName,_In_opt_ PCWSTR pwzCloudName,_In_opt_ PCWSTR pwzPublishingIdentity,_Out_ DRT_BOOTSTRAP_RESOLVER **ppResolver)
HRESULT WINAPI drt.DrtDeleteIpv6UdpTransport(_In_ HTRANSPORT hTransport)
HRESULT WINAPI drt.DrtEndSearch(_In_ HDRT_SEARCH_CONTEXT hSearchContext)
HRESULT WINAPI drt.DrtGetEventDataSize(_In_ HDRT hDRT,_Out_ ULONG pulEventDataLen)
HRESULT WINAPI drt.DrtGetInstanceName(_In_ HDRT hDrt,_Inout_ ULONG *pucblInstanceNameLen,_Out_ PWSTR pwzDrtInstanceName[_bcount_full])
HRESULT WINAPI drt.DrtGetInstanceNameSize(_In_ HDRT hDrt,_Out_ ULONG *pulcbInstanceNameSize)
HRESULT WINAPI drt.DrtGetSearchPathSize(_In_ HDRT_SEARCH_CONTEXT hSearchContext,_Out_ ULONG *pulSearchPathSize)
HRESULT WINAPI drt.DrtGetSearchResult(_In_ HDRT_SEARCH_CONTEXT hSearchContext,_Out_ DRT_SEARCH_RESULT *ppSearchResult)
HRESULT WINAPI drt.DrtGetSearchResultSize(_In_ HDRT_SEARCH_CONTEXT hSearchContext,_Out_ ULONG *pulSearchResultSize)
HRESULT WINAPI drt.DrtRegisterKey(_In_ HDRT hDrt,_In_ DRT_REGISTRATION *pRegistration,_In_opt_ PVOID pvKeyContext,_Out_ HDRT_REGISTRATION_CONTEXT *phKeyRegistration)
HRESULT WINAPI drt.DrtUpdateKey(_In_ HKEYREGISTRATION hKeyRegistration,_In_ DRT_DATA *pAppData)
HRESULT WINAPI dssec.DSCreateISecurityInfoObjectEx(_In_ LPCWSTR pwszObjectPath,_In_ LPCWSTR pwszObjectClass,_In_ LPCWSTR pwszServer,_In_ LPCWSTR pwszUserName,_In_ LPCWSTR pwszPassword,_In_ DWORD dwFlags,_Out_ LPSECURITYINFO *ppSI,_In_opt_ PFNREADOBJECTSECURITY pfnReadSD,_In_opt_ PFNWRITEOBJECTSECURITY pfnWriteSD,_In_ LPARAM lpContext)
HRESULT WINAPI dssec.DSCreateISecurityInfoObject(_In_ LPCWSTR pwszObjectPath,_In_ LPCWSTR pwszObjectClass,_In_ DWORD dwFlags,_Out_ LPSECURITYINFO *ppSI,_In_opt_ PFNREADOBJECTSECURITY pfnReadSD,_In_opt_ PFNWRITEOBJECTSECURITY pfnWriteSD,_In_ LPARAM lpContext)
HRESULT WINAPI dssec.DSCreateSecurityPage(_In_ LPCWSTR pwszObjectPath,_In_opt_ LPCWSTR pwszObjectClass,_In_ DWORD dwFlags,_Out_ HPROPSHEETPAGE *phPage,_In_opt_ PFNREADOBJECTSECURITY pfnReadSD,_In_opt_ PFNWRITEOBJECTSECURITY pfnWriteSD,_In_ LPARAM lpContext)
HRESULT WINAPI dssec.DSEditSecurity(_In_ HWND hwndOwner,_In_ LPCWSTR pwszObjectPath,_In_opt_ LPCWSTR pwszObjectClass,_In_ DWORD dwFlags,_In_opt_ LPCWSTR *pwszCaption,_In_opt_ PFNREADOBJECTSECURITY pfnReadSD,_In_opt_ PFNWRITEOBJECTSECURITY pfnWriteSD,_In_ LPARAM lpContext)
HRESULT WINAPI dwmapi.DwmAttachMilContent(_In_ HWND hwnd)
HRESULT WINAPI dwmapi.DwmDetachMilContent(_In_ HWND hwnd)
HRESULT WINAPI dwmapi.DwmEnableComposition(UINT uCompositionAction None)
HRESULT WINAPI dwmapi.DwmEnableMMCSS(BOOL fEnableMMCSS None)
HRESULT WINAPI dwmapi.DwmFlush(void None None)
HRESULT WINAPI dwmapi.DwmGetColorizationColor(_Out_ DWORD *pcrColorization,_Out_ BOOL *pfOpaqueBlend)
HRESULT WINAPI dwmapi.DwmGetCompositionTimingInfo(HWND hwnd None,_Out_ DWM_TIMING_INFO *pTimingInfo)
HRESULT WINAPI dwmapi.DwmGetGraphicsStreamClient(UINT uIndex None,_Out_ UUID *pClientUuid)
HRESULT WINAPI dwmapi.DwmGetGraphicsStreamTransformHint(UINT uIndex None,_Out_ MilMatrix3x2D *pTransform)
HRESULT WINAPI dwmapi.DwmGetTransportAttributes(_Out_ BOOL *pfIsRemoting,_Out_ BOOL *pfIsConnected,_Out_ DWORD *pDwGeneration)
HRESULT WINAPI dwmapi.DwmGetWindowAttribute(HWND hwnd None,DWORD dwAttribute None,_Out_ PVOID pvAttribute,DWORD cbAttribute None)
HRESULT WINAPI dwmapi.DwmInvalidateIconicBitmaps(_In_ HWND hwnd)
HRESULT WINAPI dwmapi.DwmIsCompositionEnabled(_Out_ BOOL *pfEnabled)
HRESULT WINAPI dwmapi.DwmModifyPreviousDxFrameDuration(HWND hwnd None,INT cRefreshes None,BOOL fRelative None)
HRESULT WINAPI dwmapi.DwmQueryThumbnailSourceSize(HTHUMBNAIL hThumbnail None,_Out_ PSIZE pSize)
HRESULT WINAPI dwmapi.DwmRegisterThumbnail(HWND hwndDestination None,HWND hwndSource None,_Out_ PHTHUMBNAIL phThumbnailId)
HRESULT WINAPI dwmapi.DwmSetDxFrameDuration(HWND hwnd None,INT cRefreshes None)
HRESULT WINAPI dwmapi.DwmSetIconicLivePreviewBitmap(HWND hwnd None,HBITMAP hbmp None,_In_opt_ POINT *pptClient,DWORD dwSITFlags None)
HRESULT WINAPI dwmapi.DwmSetIconicThumbnail(_In_ HWND hwnd,_In_ HBITMAP hbmp,_In_ DWORD dwSITFlags)
HRESULT WINAPI dwmapi.DwmSetPresentParameters(HWND hwnd None,_Inout_ DWM_PRESENT_PARAMETERS *pPresentParams)
HRESULT WINAPI dwmapi.DwmSetWindowAttribute(HWND hwnd None,DWORD dwAttribute None,_In_ LPCVOID pvAttribute,DWORD cbAttribute None)
HRESULT WINAPI dwmapi.DwmUnregisterThumbnail(HTHUMBNAIL hThumbnailId None)
HRESULT WINAPI dxgi.DXGIDeclareAdapterRemovalSupport(void None None)
HRESULT WINAPI faultrep.WerReportHang(_In_ HWND hwndHungWindow,_In_opt_ PCWSTR wszHungApplicationName)
HRESULT WINAPI gamemode.GetExpandedResourceExclusiveCpuCount(_Out_ ULONG *exclusiveCpuCount)
HRESULT WINAPI gamemode.HasExpandedResources(_Out_ BOOL *hasExpandedResources)
HRESULT WINAPI gamingtcui.CheckGamingPrivilegeSilently(_In_ UINT32 privilegeId,_In_ HSTRING scope,_In_ HSTRING policy,_Out_ BOOL *hasPrivilege)
HRESULT WINAPI gamingtcui.CheckGamingPrivilegeWithUI(_In_ UINT32 privilegeId,_In_ HSTRING scope,_In_ HSTRING policy,_In_opt_ HSTRING friendlyMessage,_In_ GameUICompletionRoutine completionRoutine,_In_opt_ void *context)
HRESULT WINAPI gamingtcui.ProcessPendingGameUI(_In_ BOOL waitForCompletion)
HRESULT WINAPI iscsidsc.AddIscsiConnectionA(_In_ PISCSI_UNIQUE_SESSION_ID UniqueSessionId,_In_ PVOID Reserved,_In_opt_ ULONG InitiatorPortNumber,_In_ PISCSI_TARGET_PORTAL TargetPortal,_In_opt_ ISCSI_SECURITY_FLAGS SecurityFlags,_In_opt_ PSCSI_LOGIN_OPTIONS LoginOptions,_In_opt_ ULONG KeySize,_In_opt_ PCHAR Key,_Out_opt_ PISCSI_UNIQUE_CONNECTION_ID ConnectionId)
HRESULT WINAPI iscsidsc.AddIscsiConnection(_In_ PISCSI_UNIQUE_SESSION_ID UniqueSessionId,_In_ PVOID Reserved,_In_opt_ ULONG InitiatorPortNumber,_In_ PISCSI_TARGET_PORTAL TargetPortal,_In_opt_ ISCSI_SECURITY_FLAGS SecurityFlags,_In_opt_ PSCSI_LOGIN_OPTIONS LoginOptions,_In_opt_ ULONG KeySize,_In_opt_ PCHAR Key,_Out_opt_ PISCSI_UNIQUE_CONNECTION_ID ConnectionId)
HRESULT WINAPI iscsidsc.AddIscsiConnectionW(_In_ PISCSI_UNIQUE_SESSION_ID UniqueSessionId,_In_ PVOID Reserved,_In_opt_ ULONG InitiatorPortNumber,_In_ PISCSI_TARGET_PORTAL TargetPortal,_In_opt_ ISCSI_SECURITY_FLAGS SecurityFlags,_In_opt_ PSCSI_LOGIN_OPTIONS LoginOptions,_In_opt_ ULONG KeySize,_In_opt_ PCHAR Key,_Out_opt_ PISCSI_UNIQUE_CONNECTION_ID ConnectionId)
HRESULT WINAPI iscsidsc.AddIscsiSendTargetPortalA(_In_opt_ PTCHAR InitiatorName,_In_opt_ ULONG InitiatorPortNumber,_In_opt_ PISCI_LOGIN_OPTIONS LoginOptions,_In_opt_ ISCSI_SECURITY_FLAGS SecurityFlags,PISCSI_TARGET_PORTAL Portal None)
HRESULT WINAPI iscsidsc.AddIscsiSendTargetPortal(_In_opt_ PTCHAR InitiatorName,_In_opt_ ULONG InitiatorPortNumber,_In_opt_ PISCI_LOGIN_OPTIONS LoginOptions,_In_opt_ ISCSI_SECURITY_FLAGS SecurityFlags,PISCSI_TARGET_PORTAL Portal None)
HRESULT WINAPI iscsidsc.AddIscsiSendTargetPortalW(_In_opt_ PTCHAR InitiatorName,_In_opt_ ULONG InitiatorPortNumber,_In_opt_ PISCI_LOGIN_OPTIONS LoginOptions,_In_opt_ ISCSI_SECURITY_FLAGS SecurityFlags,PISCSI_TARGET_PORTAL Portal None)
HRESULT WINAPI iscsidsc.AddIsnsServerA(_In_ PTCHAR Address)
HRESULT WINAPI iscsidsc.AddIsnsServer(_In_ PTCHAR Address)
HRESULT WINAPI iscsidsc.AddIsnsServerW(_In_ PTCHAR Address)
HRESULT WINAPI iscsidsc.AddPersistentIscsiDeviceA(_In_ PTCHAR VolumePath)
HRESULT WINAPI iscsidsc.AddPersistentIscsiDevice(_In_ PTCHAR VolumePath)
HRESULT WINAPI iscsidsc.AddPersistentIscsiDeviceW(_In_ PTCHAR VolumePath)
HRESULT WINAPI iscsidsc.AddRadiusServerA(_In_ PWCHAR Address)
HRESULT WINAPI iscsidsc.AddRadiusServer(_In_ PWCHAR Address)
HRESULT WINAPI iscsidsc.AddRadiusServerW(_In_ PWCHAR Address)
HRESULT WINAPI iscsidsc.GetDevicesForIscsiSessionA(_In_ PISCSI_UNIQUE_SESSION_ID UniqueSessionId,_Inout_ ULONG *DeviceCount,_Out_ PISCSI_DEVICE_ON_SESSION Devices)
HRESULT WINAPI iscsidsc.GetDevicesForIscsiSession(_In_ PISCSI_UNIQUE_SESSION_ID UniqueSessionId,_Inout_ ULONG *DeviceCount,_Out_ PISCSI_DEVICE_ON_SESSION Devices)
HRESULT WINAPI iscsidsc.GetDevicesForIscsiSessionW(_In_ PISCSI_UNIQUE_SESSION_ID UniqueSessionId,_Inout_ ULONG *DeviceCount,_Out_ PISCSI_DEVICE_ON_SESSION Devices)
HRESULT WINAPI iscsidsc.GetIscsiIKEInfoA(_In_opt_ PTCHAR InitiatorName,_In_ ULONG PortNumber,_In_ PULONG Reserved,_In_ PIKE_AUTHENTICATION_INFORMATION *AuthInfo)
HRESULT WINAPI iscsidsc.GetIscsiIKEInfo(_In_opt_ PTCHAR InitiatorName,_In_ ULONG PortNumber,_In_ PULONG Reserved,_In_ PIKE_AUTHENTICATION_INFORMATION *AuthInfo)
HRESULT WINAPI iscsidsc.GetIscsiIKEInfoW(_In_opt_ PTCHAR InitiatorName,_In_ ULONG PortNumber,_In_ PULONG Reserved,_In_ PIKE_AUTHENTICATION_INFORMATION *AuthInfo)
HRESULT WINAPI iscsidsc.GetIscsiInitiatorNodeNameA(PTCHAR InitiatorNodeName None)
HRESULT WINAPI iscsidsc.GetIscsiInitiatorNodeName(PTCHAR InitiatorNodeName None)
HRESULT WINAPI iscsidsc.GetIscsiInitiatorNodeNameW(PTCHAR InitiatorNodeName None)
HRESULT WINAPI iscsidsc.GetIscsiSessionListA(_Inout_ ULONG *BufferSize,_Out_ ULONG *SessionCount,_Out_ PISCSI_SESSION_INFO SessionInfo)
HRESULT WINAPI iscsidsc.GetIscsiSessionList(_Inout_ ULONG *BufferSize,_Out_ ULONG *SessionCount,_Out_ PISCSI_SESSION_INFO SessionInfo)
HRESULT WINAPI iscsidsc.GetIscsiSessionListW(_Inout_ ULONG *BufferSize,_Out_ ULONG *SessionCount,_Out_ PISCSI_SESSION_INFO SessionInfo)
HRESULT WINAPI iscsidsc.GetIscsiTargetInformationA(_In_ PTCHAR TargetName,_In_opt_ PTCHAR DiscoveryMechanism,_In_ TARGET_INFORMATION_CLASS InfoClass,_Inout_ PULONG BufferSize,_Out_ PVOID Buffer)
HRESULT WINAPI iscsidsc.GetIscsiTargetInformation(_In_ PTCHAR TargetName,_In_opt_ PTCHAR DiscoveryMechanism,_In_ TARGET_INFORMATION_CLASS InfoClass,_Inout_ PULONG BufferSize,_Out_ PVOID Buffer)
HRESULT WINAPI iscsidsc.GetIscsiTargetInformationW(_In_ PTCHAR TargetName,_In_opt_ PTCHAR DiscoveryMechanism,_In_ TARGET_INFORMATION_CLASS InfoClass,_Inout_ PULONG BufferSize,_Out_ PVOID Buffer)
HRESULT WINAPI iscsidsc.LoginIscsiTargetA(_In_ PTCHAR TargetName,_In_ BOOLEAN IsInformationalSession,_In_opt_ PTCHAR InitiatorName,_In_opt_ ULONG InitiatorPortNumber,_In_opt_ PISCSI_TARGET_PORTAL TargetPortal,_In_opt_ ISCSI_SECURITY_FLAGS SecurityFlags,_In_opt_ PISCSI_TARGET_MAPPING Mappings,_In_opt_ PISCSI_LOGIN_OPTIONS LoginOptions,_In_opt_ ULONG KeySize,_In_opt_ PCHAR Key,_In_ BOOLEAN IsPersistent,_Out_ PISCSI_UNIQUE_SESSION_ID UniqueSessionId,_Out_ PISCSI_UNIQUE_CONNECTION_ID UniqueConnectionId)
HRESULT WINAPI iscsidsc.LoginIscsiTarget(_In_ PTCHAR TargetName,_In_ BOOLEAN IsInformationalSession,_In_opt_ PTCHAR InitiatorName,_In_opt_ ULONG InitiatorPortNumber,_In_opt_ PISCSI_TARGET_PORTAL TargetPortal,_In_opt_ ISCSI_SECURITY_FLAGS SecurityFlags,_In_opt_ PISCSI_TARGET_MAPPING Mappings,_In_opt_ PISCSI_LOGIN_OPTIONS LoginOptions,_In_opt_ ULONG KeySize,_In_opt_ PCHAR Key,_In_ BOOLEAN IsPersistent,_Out_ PISCSI_UNIQUE_SESSION_ID UniqueSessionId,_Out_ PISCSI_UNIQUE_CONNECTION_ID UniqueConnectionId)
HRESULT WINAPI iscsidsc.LoginIscsiTargetW(_In_ PTCHAR TargetName,_In_ BOOLEAN IsInformationalSession,_In_opt_ PTCHAR InitiatorName,_In_opt_ ULONG InitiatorPortNumber,_In_opt_ PISCSI_TARGET_PORTAL TargetPortal,_In_opt_ ISCSI_SECURITY_FLAGS SecurityFlags,_In_opt_ PISCSI_TARGET_MAPPING Mappings,_In_opt_ PISCSI_LOGIN_OPTIONS LoginOptions,_In_opt_ ULONG KeySize,_In_opt_ PCHAR Key,_In_ BOOLEAN IsPersistent,_Out_ PISCSI_UNIQUE_SESSION_ID UniqueSessionId,_Out_ PISCSI_UNIQUE_CONNECTION_ID UniqueConnectionId)
HRESULT WINAPI iscsidsc.LogoutIscsiTarget(_In_ PISCSI_UNIQUE_SESSION_ID UniqueSessionId)
HRESULT WINAPI iscsidsc.RefreshIscsiSendTargetPortalA(_In_opt_ PTCHAR InitiatorInstance,_In_ ULONG InitiatorPortNumber,_In_ PISCSI_TARGET_PORTAL Portal)
HRESULT WINAPI iscsidsc.RefreshIscsiSendTargetPortal(_In_opt_ PTCHAR InitiatorInstance,_In_ ULONG InitiatorPortNumber,_In_ PISCSI_TARGET_PORTAL Portal)
HRESULT WINAPI iscsidsc.RefreshIscsiSendTargetPortalW(_In_opt_ PTCHAR InitiatorInstance,_In_ ULONG InitiatorPortNumber,_In_ PISCSI_TARGET_PORTAL Portal)
HRESULT WINAPI iscsidsc.RefreshIsnsServerA(_In_ PTCHAR Address)
HRESULT WINAPI iscsidsc.RefreshIsnsServer(_In_ PTCHAR Address)
HRESULT WINAPI iscsidsc.RefreshIsnsServerW(_In_ PTCHAR Address)
HRESULT WINAPI iscsidsc.RemoveIscsiConnection(_In_ PISCSI_UNIQUE_SESSION_ID UniqueSessionId,_In_ PISCSI_UNIQUE_CONNECTION_ID UniqueConnectionId)
HRESULT WINAPI iscsidsc.RemoveIscsiPersistentTargetA(_In_ PTCHAR InitiatorInstance,_In_opt_ ULONG InitiatorPortNumber,_In_ PTCHAR TargetName,_In_ PISCSI_TARGET_PORTAL Portal)
HRESULT WINAPI iscsidsc.RemoveIscsiPersistentTarget(_In_ PTCHAR InitiatorInstance,_In_opt_ ULONG InitiatorPortNumber,_In_ PTCHAR TargetName,_In_ PISCSI_TARGET_PORTAL Portal)
HRESULT WINAPI iscsidsc.RemoveIscsiPersistentTargetW(_In_ PTCHAR InitiatorInstance,_In_opt_ ULONG InitiatorPortNumber,_In_ PTCHAR TargetName,_In_ PISCSI_TARGET_PORTAL Portal)
HRESULT WINAPI iscsidsc.RemoveIscsiSendTargetPortalA(_In_opt_ PTCHAR InitiatorInstance,_In_opt_ ULONG InitiatorPortNumber,_In_ PISCSI_TARGET_PORTAL Portal)
HRESULT WINAPI iscsidsc.RemoveIscsiSendTargetPortal(_In_opt_ PTCHAR InitiatorInstance,_In_opt_ ULONG InitiatorPortNumber,_In_ PISCSI_TARGET_PORTAL Portal)
HRESULT WINAPI iscsidsc.RemoveIscsiSendTargetPortalW(_In_opt_ PTCHAR InitiatorInstance,_In_opt_ ULONG InitiatorPortNumber,_In_ PISCSI_TARGET_PORTAL Portal)
HRESULT WINAPI iscsidsc.RemoveIscsiStaticTargetA(_In_ PTCHAR TargetName)
HRESULT WINAPI iscsidsc.RemoveIscsiStaticTarget(_In_ PTCHAR TargetName)
HRESULT WINAPI iscsidsc.RemoveIscsiStaticTargetW(_In_ PTCHAR TargetName)
HRESULT WINAPI iscsidsc.RemoveIsnsServerA(_In_ PTCHAR Address)
HRESULT WINAPI iscsidsc.RemoveIsnsServer(_In_ PTCHAR Address)
HRESULT WINAPI iscsidsc.RemoveIsnsServerW(_In_ PTCHAR Address)
HRESULT WINAPI iscsidsc.RemovePersistentIscsiDeviceA(_In_ PTCHAR VolumePath)
HRESULT WINAPI iscsidsc.RemovePersistentIscsiDevice(_In_ PTCHAR VolumePath)
HRESULT WINAPI iscsidsc.RemovePersistentIscsiDeviceW(_In_ PTCHAR VolumePath)
HRESULT WINAPI iscsidsc.RemoveRadiusServerA(_In_ PTCHAR Address)
HRESULT WINAPI iscsidsc.RemoveRadiusServer(_In_ PTCHAR Address)
HRESULT WINAPI iscsidsc.RemoveRadiusServerW(_In_ PTCHAR Address)
HRESULT WINAPI iscsidsc.ReportActiveIscsiTargetMappingsA(_Inout_ PULONG BufferSize,_Out_ PULONG MappingCount,_Out_ PISCSI_TARGET_MAPPING Mappings)
HRESULT WINAPI iscsidsc.ReportActiveIscsiTargetMappings(_Inout_ PULONG BufferSize,_Out_ PULONG MappingCount,_Out_ PISCSI_TARGET_MAPPING Mappings)
HRESULT WINAPI iscsidsc.ReportActiveIscsiTargetMappingsW(_Inout_ PULONG BufferSize,_Out_ PULONG MappingCount,_Out_ PISCSI_TARGET_MAPPING Mappings)
HRESULT WINAPI iscsidsc.ReportIscsiInitiatorListA(_Inout_ ULONG *BufferSize,_Out_ PTCHAR Buffer)
HRESULT WINAPI iscsidsc.ReportIscsiInitiatorList(_Inout_ ULONG *BufferSize,_Out_ PTCHAR Buffer)
HRESULT WINAPI iscsidsc.ReportIscsiInitiatorListW(_Inout_ ULONG *BufferSize,_Out_ PTCHAR Buffer)
HRESULT WINAPI iscsidsc.ReportIscsiPersistentLoginsA(_Out_ ULONG *Count,_Inout_ PPERSISTENT_ISCSI_LOGIN_INFO PersistentLoginInfo,_Inout_ PULONG BufferSizeInBytes)
HRESULT WINAPI iscsidsc.ReportIscsiPersistentLogins(_Out_ ULONG *Count,_Inout_ PPERSISTENT_ISCSI_LOGIN_INFO PersistentLoginInfo,_Inout_ PULONG BufferSizeInBytes)
HRESULT WINAPI iscsidsc.ReportIscsiPersistentLoginsW(_Out_ ULONG *Count,_Inout_ PPERSISTENT_ISCSI_LOGIN_INFO PersistentLoginInfo,_Inout_ PULONG BufferSizeInBytes)
HRESULT WINAPI iscsidsc.ReportIscsiSendTargetPortalsA(_Out_ PULONG PortalCount,_Inout_ PISCSI_TARGET_PORTAL_INFO PortalInfo)
HRESULT WINAPI iscsidsc.ReportIscsiSendTargetPortalsExA(_Out_ PULONG PortalCount,_Inout_ PULONG PortalInfoSize,_Inout_ PISCSI_TARGET_PORTAL_INFO_EX PortalInfo)
HRESULT WINAPI iscsidsc.ReportIscsiSendTargetPortalsEx(_Out_ PULONG PortalCount,_Inout_ PULONG PortalInfoSize,_Inout_ PISCSI_TARGET_PORTAL_INFO_EX PortalInfo)
HRESULT WINAPI iscsidsc.ReportIscsiSendTargetPortalsExW(_Out_ PULONG PortalCount,_Inout_ PULONG PortalInfoSize,_Inout_ PISCSI_TARGET_PORTAL_INFO_EX PortalInfo)
HRESULT WINAPI iscsidsc.ReportIscsiSendTargetPortals(_Out_ PULONG PortalCount,_Inout_ PISCSI_TARGET_PORTAL_INFO PortalInfo)
HRESULT WINAPI iscsidsc.ReportIscsiSendTargetPortalsW(_Out_ PULONG PortalCount,_Inout_ PISCSI_TARGET_PORTAL_INFO PortalInfo)
HRESULT WINAPI iscsidsc.ReportIscsiTargetPortalsA(_In_opt_ PWCHAR InitiatorName,_In_ PWCHAR TargetName,_In_opt_ PUSHORT TargetPortalTag,_Inout_ PULONG ElementCount,_Out_ PISCSI_TARGET_PORTALW Portals)
HRESULT WINAPI iscsidsc.ReportIscsiTargetPortals(_In_opt_ PWCHAR InitiatorName,_In_ PWCHAR TargetName,_In_opt_ PUSHORT TargetPortalTag,_Inout_ PULONG ElementCount,_Out_ PISCSI_TARGET_PORTALW Portals)
HRESULT WINAPI iscsidsc.ReportIscsiTargetPortalsW(_In_opt_ PWCHAR InitiatorName,_In_ PWCHAR TargetName,_In_opt_ PUSHORT TargetPortalTag,_Inout_ PULONG ElementCount,_Out_ PISCSI_TARGET_PORTALW Portals)
HRESULT WINAPI iscsidsc.ReportIsnsServerListA(_Inout_ PULONG BufferSizeInChar,_Out_ PTCHAR Buffer)
HRESULT WINAPI iscsidsc.ReportIsnsServerList(_Inout_ PULONG BufferSizeInChar,_Out_ PTCHAR Buffer)
HRESULT WINAPI iscsidsc.ReportIsnsServerListW(_Inout_ PULONG BufferSizeInChar,_Out_ PTCHAR Buffer)
HRESULT WINAPI iscsidsc.ReportRadiusServerListA(_Inout_ PULONG BufferSizeInChar,_Out_opt_ PTCHAR Buffer)
HRESULT WINAPI iscsidsc.ReportRadiusServerList(_Inout_ PULONG BufferSizeInChar,_Out_opt_ PTCHAR Buffer)
HRESULT WINAPI iscsidsc.ReportRadiusServerListW(_Inout_ PULONG BufferSizeInChar,_Out_opt_ PTCHAR Buffer)
HRESULT WINAPI iscsidsc.SendScsiInquiry(_In_ PISCSI_UNIQUE_SESSION_ID *UniqueSessionId,_In_ ULONGLONG Lun,_In_ UCHAR EvpdCmddt,_In_ UCHAR PageCode,_Out_ PUCHAR *ScsiStatus,_Inout_ PULONG *ReponseSize,_Out_ PUCHAR ReponseBuffer,_Inout_ PULONG *SenseSize,_Out_ PUCHAR SenseBuffer)
HRESULT WINAPI iscsidsc.SendScsiReadCapacity(_In_ PISCSI_UNIQUE_SESSION_ID UniqueSessionId,_In_ ULONGLONG Lun,_Out_ PUCHAR *ScsiStatus,_Inout_ PULONG *ResponseSize,_Out_ PUCHAR ResponseBuffer,_Inout_ PULONG *SenseSize,_Out_ PUCHAR SenseBuffer)
HRESULT WINAPI iscsidsc.SendScsiReportLuns(_In_ PISCSI_UNIQUE_SESSION_ID UniqueSessionId,_Out_ PUCHAR *ScsiStatus,_Inout_ PULONG *ResponseSize,_Out_ PUCHAR ResponseBuffer,_Inout_ PULONG *SenseSize,_Out_ PUCHAR SenseBuffer)
HRESULT WINAPI iscsidsc.SetIscsiGroupPresharedKey(_In_ ULONG KeyLength,_In_ PUCHAR Key,BOOLEAN Persist None)
HRESULT WINAPI iscsidsc.SetIscsiIKEInfoA(_In_ PTCHAR InitiatorName,_In_ ULONG PortNumber,_In_ PIKE_AUTHENTICATION_INFORMATION AuthInfo,_In_ BOOLEAN Persist)
HRESULT WINAPI iscsidsc.SetIscsiIKEInfo(_In_ PTCHAR InitiatorName,_In_ ULONG PortNumber,_In_ PIKE_AUTHENTICATION_INFORMATION AuthInfo,_In_ BOOLEAN Persist)
HRESULT WINAPI iscsidsc.SetIscsiIKEInfoW(_In_ PTCHAR InitiatorName,_In_ ULONG PortNumber,_In_ PIKE_AUTHENTICATION_INFORMATION AuthInfo,_In_ BOOLEAN Persist)
HRESULT WINAPI iscsidsc.SetIscsiInitiatorCHAPSharedSecret(_In_ ULONG SharedSecretLength,_In_ PUCHAR SharedSecret)
HRESULT WINAPI iscsidsc.SetIscsiInitiatorNodeNameA(PTCHAR InitiatorNodeName None)
HRESULT WINAPI iscsidsc.SetIscsiInitiatorNodeName(PTCHAR InitiatorNodeName None)
HRESULT WINAPI iscsidsc.SetIscsiInitiatorNodeNameW(PTCHAR InitiatorNodeName None)
HRESULT WINAPI iscsidsc.SetIscsiInitiatorRADIUSSharedSecret(_In_ ULONG SharedSecretLength,_In_ PUCHAR SharedSecret)
HRESULT WINAPI iscsidsc.SetIscsiTunnelModeOuterAddressA(_In_opt_ PTCHAR InitiatorName,_In_ ULONG InitiatorPortNumber,_In_ PTCHAR DestinationAddress,_In_ PTCHAR OuterModeAddress,_In_ BOOLEAN Persist)
HRESULT WINAPI iscsidsc.SetIscsiTunnelModeOuterAddress(_In_opt_ PTCHAR InitiatorName,_In_ ULONG InitiatorPortNumber,_In_ PTCHAR DestinationAddress,_In_ PTCHAR OuterModeAddress,_In_ BOOLEAN Persist)
HRESULT WINAPI iscsidsc.SetIscsiTunnelModeOuterAddressW(_In_opt_ PTCHAR InitiatorName,_In_ ULONG InitiatorPortNumber,_In_ PTCHAR DestinationAddress,_In_ PTCHAR OuterModeAddress,_In_ BOOLEAN Persist)
HRESULT WINAPI kernel32.ConvertAuxiliaryCounterToPerformanceCounter(_In_ ULONGLONG ullAuxiliaryCounterValue,_Out_ PULONGLONG lpPerformanceCounterValue,_Out_opt_ PULONGLONG lpConversionError)
HRESULT WINAPI kernel32.ConvertPerformanceCounterToAuxiliaryCounter(_In_ ULONGLONG ullPerformanceCounterValue,_Out_ PULONGLONG lpAuxiliaryCounterValue,_Out_opt_ PULONGLONG lpConversionError)
HRESULT WINAPI kernel32.CopyFile2(_In_ PCWSTR pwszExistingFileName,_In_ PCWSTR pwszNewFileName,_In_opt_ COPYFILE2_EXTENDED_PARAMETERS *pExtendedParameters)
HRESULT WINAPI kernel32.GetThreadDescription(_In_ HANDLE hThread,_Out_ PWSTR *threadDescription)
HRESULT WINAPI kernel32.QueryAuxiliaryCounterFrequency(_Out_ PULONGLONG lpAuxiliaryCounterFrequency)
HRESULT WINAPI kernel32.SetThreadDescription(_In_ HANDLE hThread,_In_ PCWSTR lpThreadDescription)
HRESULT WINAPI kernel32.WerGetFlags(_In_ HANDLE hProcess,_Out_ PDWORD pdwFlags)
HRESULT WINAPI kernel32.WerRegisterAdditionalProcess(DWORD processId None,DWORD captureExtraInfoForThreadId None)
HRESULT WINAPI kernel32.WerRegisterExcludedMemoryBlock(PVOID address None,DWORD size None)
HRESULT WINAPI kernel32.WerRegisterFile(_In_ PCWSTR pwzFile,_In_ WER_REGISTER_FILE_TYPE regFileType,_In_ DWORD dwFlags)
HRESULT WINAPI kernel32.WerRegisterRuntimeExceptionModule(_In_ PCWSTR pwszOutOfProcessCallbackDll,_In_opt_ PVOID pContext)
HRESULT WINAPI kernel32.WerSetFlags(_In_ DWORD dwFlags)
HRESULT WINAPI kernel32.WerUnregisterAdditionalProcess(DWORD processId None)
HRESULT WINAPI kernel32.WerUnRegisterCustomMetadata(PCWSTR key None)
HRESULT WINAPI kernel32.WerUnregisterFile(_In_ PCWSTR pwzFilePath)
HRESULT WINAPI kernel32.WerUnregisterMemoryBlock(_In_ PVOID pvAddress)
HRESULT WINAPI kernel32.WerUnregisterRuntimeExceptionModule(_In_ PCWSTR pwszOutOfProcessCallbackDll,_In_opt_ PVOID pContext)
HRESULT WINAPI mf.MFCreateAVIMediaSink(_In_ IMFByteStream *pIByteStream,_In_ IMFMediaType *pVideoMediaType,_In_opt_ IMFMediaType *pAudioMediaType,_Out_ IMFMediaSink **ppIMediaSink)
HRESULT WINAPI mf.MFCreateFMPEG4MediaSink(_In_ IMFByteStream *pIByteStream,_In_ IMFMediaType *pVideoMediaType,_In_ IMFMediaType *pAudioMediaType,_Out_ IMFMediaSink **ppIMediaSink)
HRESULT WINAPI mfplat.MFCreateMediaTypeFromProperties(_In_ IUnknown *punkStream,_Out_ IMFMediaType **ppMediaType)
HRESULT WINAPI mfplat.MFCreatePropertiesFromMediaType(_In_ IMFMediaType *pMediaType,_In_ REFIID riid,_Out_ void **ppv)
HRESULT WINAPI mssign32.PvkGetCryptProv(_In_ HWND hwnd,_In_ LPCWSTR pwszCaption,_In_ LPCWSTR pwszCapiProvider,_In_ DWORD dwProviderType,_In_ LPCWSTR pwszPvkFile,_In_ LPCWSTR pwszKeyContainerName,_Out_ DWORD *pdwKeySpec,_Out_opt_ LPWSTR *ppwszTmpContainer,_Out_ HCRYPTPROV *phCryptProv)
HRESULT WINAPI mssign32.SignerFreeSignerContext(_In_ SIGNER_CONTEXT *pSignerContext)
HRESULT WINAPI mssign32.SignError(void None None)
HRESULT WINAPI mssign32.SignerSignEx2(_In_ DWORD dwFlags,_In_ SIGNER_SUBJECT_INFO *pSubjectInfo,_In_ SIGNER_CERT *pSignerCert,_In_ SIGNER_SIGNATURE_INFO *pSignatureInfo,_In_opt_ SIGNER_PROVIDER_INFO *pProviderInfo,_In_opt_ DWORD dwTimestampFlags,_In_opt_ PCSTR pszTimestampAlgorithmOid,_In_opt_ PCWSTR pwszHttpTimeStamp,_In_opt_ PCRYPT_ATTRIBUTES psRequest,_In_opt_ PVOID pSipData,_Out_ SIGNER_CONTEXT **ppSignerContext,_In_opt_ PCERT_STRONG_SIGN_PARA pCryptoPolicy,_Reserved_ PVOID pReserved)
HRESULT WINAPI mssign32.SignerSignEx(_In_ DWORD dwFlags,_In_ SIGNER_SUBJECT_INFO *pSubjectInfo,_In_ SIGNER_CERT *pSignerCert,_In_ SIGNER_SIGNATURE_INFO *pSignatureInfo,_In_opt_ SIGNER_PROVIDER_INFO *pProviderInfo,_In_opt_ LPCWSTR pwszHttpTimeStamp,_In_opt_ PCRYPT_ATTRIBUTES psRequest,_In_opt_ LPVOID pSipData,_Out_ SIGNER_CONTEXT **ppSignerContext)
HRESULT WINAPI mssign32.SignerSign(_In_ SIGNER_SUBJECT_INFO *pSubjectInfo,_In_ SIGNER_CERT *pSignerCert,_In_ SIGNER_SIGNATURE_INFO *pSignatureInfo,_In_opt_ SIGNER_PROVIDER_INFO *pProviderInfo,_In_opt_ LPCWSTR pwszHttpTimeStamp,_In_opt_ PCRYPT_ATTRIBUTES psRequest,_In_opt_ LPVOID pSipData)
HRESULT WINAPI mssign32.SignerTimeStampEx2(_Reserved_ DWORD dwFlags,_In_ SIGNER_SUBJECT_INFO *pSubjectInfo,_In_ LPCWSTR pwszHttpTimeStamp,_In_ ALG_ID dwAlgId,_In_ PCRYPT_ATTRIBUTES psRequest,_In_ LPVOID pSipData,_Out_ SIGNER_CONTEXT **ppSignerContext)
HRESULT WINAPI mssign32.SignerTimeStampEx3(_In_ DWORD dwFlags,_In_ DWORD dwIndex,_In_ SIGNER_SUBJECT_INFO *pSubjectInfo,_In_ PCWSTR pwszHttpTimeStamp,_In_ PCWSTR pszAlgorithmOid,_In_opt_ PCRYPT_ATTRIBUTES psRequest,_In_opt_ PVOID pSipData,_Out_ SIGNER_CONTEXT **ppSignerContext,_In_opt_ PCERT_STRONG_SIGN_PARA pCryptoPolicy,_Reserved_ PVOID pReserved)
HRESULT WINAPI mssign32.SignerTimeStampEx(_Reserved_ DWORD dwFlags,_In_ SIGNER_SUBJECT_INFO *pSubjectInfo,_In_ LPCWSTR pwszHttpTimeStamp,_In_ PCRYPT_ATTRIBUTES psRequest,_In_ LPVOID pSipData,_Out_ SIGNER_CONTEXT **ppSignerContext)
HRESULT WINAPI mssign32.SignerTimeStamp(_In_ SIGNER_SUBJECT_INFO *pSubjectInfo,_In_ LPCWSTR pwszHttpTimeStamp,_In_opt_ PCRYPT_ATTRIBUTES psRequest,_In_opt_ LPVOID pSipData)
HRESULT WINAPI ndfapi.NdfCreateConnectivityIncident(_Out_ NDFHANDLE *handle)
HRESULT WINAPI ndfapi.NdfCreateDNSIncident(_In_ LPCWSTR hostname,WORD querytype None,_Out_ NDFHANDLE *handle)
HRESULT WINAPI ndfapi.NdfCreateNetConnectionIncident(_Out_ NDFHANDLE *handle,GUID id None)
HRESULT WINAPI ndfapi.NdfCreateSharingIncident(_In_ LPCWSTR sharename,_Out_ NDFHANDLE *handle)
HRESULT WINAPI ndfapi.NdfCreateWebIncidentEx(_In_ LPCWSTR url,_In_ BOOL useWinHTTP,_In_ LPWSTR moduleName,_Out_ NDFHANDLE *handle)
HRESULT WINAPI ndfapi.NdfCreateWebIncident(_In_ LPCWSTR url,_Out_ NDFHANDLE *handle)
HRESULT WINAPI None.CreateIFECommonInstance(_Out_ VOID **ppvObj)
HRESULT WINAPI None.CreateIFEDictionaryInstance(_Out_ VOID **ppvObj)
HRESULT WINAPI None.CreateIFELanguageInstance(_In_ REFCLSID clsid,_Out_ VOID **ppvObj)
HRESULT WINAPI None.DeviceDialog(_In_ PDEVICEDIALOGDATA pDeviceDialogData)
HRESULT WINAPI None.DismGetImageInfo(_In_ PCWSTR ImageFilePath,_Out_ DismImageInfo **ImageInfo,_Out_ UINT *Count)
HRESULT WINAPI None.EngineAdapterAcceptSampleData(_Inout_ PWINBIO_PIPELINE Pipeline,_In_ PWINBIO_BIR SampleBuffer,_In_ SIZE_T SampleSize,_In_ WINBIO_BIR_PURPOSE Purpose,_Out_ PWINBIO_REJECT_DETAIL RejectDetail)
HRESULT WINAPI None.EngineAdapterActivate(_Inout_ PWINBIO_PIPELINE Pipeline)
HRESULT WINAPI None.EngineAdapterCheckForDuplicate(_Inout_ PWINBIO_PIPELINE Pipeline,_Out_ Identity None,_Out_ PWINBIO_BIOMETRIC_SUBTYPE SubFactor,_Out_ PBOOLEAN Duplicate)
HRESULT WINAPI None.EngineAdapterClearContext(_Inout_ PWINBIO_PIPELINE Pipeline)
HRESULT WINAPI None.EngineAdapterCommitEnrollment(_Inout_ PWINBIO_PIPELINE Pipeline,_In_ PWINBIO_IDENTITY Identity,_In_ WINBIO_BIOMETRIC_SUBTYPE SubFactor,_In_opt_ PUCHAR PayloadBlob,_In_ SIZE_T PayloadBlobSize)
HRESULT WINAPI None.EngineAdapterControlUnit(_Inout_ PWINBIO_PIPELINE Pipeline,_In_ ULONG ControlCode,_In_ PUCHAR SendBuffer,_In_ SIZE_T SendBufferSize,_In_ PUCHAR ReceiveBuffer,_In_ SIZE_T ReceiveBufferSize,_Out_ PSIZE_T ReceiveDataSize,_Out_ PULONG OperationStatus)
HRESULT WINAPI None.EngineAdapterControlUnitPrivileged(_Inout_ PWINBIO_PIPELINE Pipeline,_In_ ULONG ControlCode,_In_ PUCHAR SendBuffer,_In_ SIZE_T SendBufferSize,_In_ PUCHAR ReceiveBuffer,_In_ SIZE_T ReceiveBufferSize,_Out_ PSIZE_T ReceiveDataSize,_Out_ PULONG OperationStatus)
HRESULT WINAPI None.EngineAdapterCreateEnrollment(_Inout_ PWINBIO_PIPELINE Pipeline)
HRESULT WINAPI None.EngineAdapterDeactivate(_Inout_ PWINBIO_PIPELINE Pipeline)
HRESULT WINAPI None.EngineAdapterDetach(_Inout_ PWINBIO_PIPELINE Pipeline)
HRESULT WINAPI None.EngineAdapterDiscardEnrollment(_Inout_ PWINBIO_PIPELINE Pipeline)
HRESULT WINAPI None.EngineAdapterExportEngineData(_Inout_ PWINBIO_PIPELINE Pipeline,_In_ WINBIO_BIR_DATA_FLAGS Flags,_Out_ PWINBIO_BIR *SampleBuffer,_Out_ PSIZE_T SampleSize)
HRESULT WINAPI None.EngineAdapterGetEnrollmentHash(_Inout_ PWINBIO_PIPELINE Pipeline,_Out_ PUCHAR *HashValue,_Out_ PSIZE_T HashSize)
HRESULT WINAPI None.EngineAdapterGetEnrollmentStatus(_Inout_ PWINBIO_PIPELINE Pipeline,_Out_ PWINBIO_REJECT_DETAIL RejectDetail)
HRESULT WINAPI None.EngineAdapterIdentifyAll(_Inout_ PWINBIO_PIPELINE Pipeline,_Out_ PSIZE_T PresenceCount,_Out_ PWINBIO_PRESENCE *PresenceArray)
HRESULT WINAPI None.EngineAdapterIdentifyFeatureSet(_Inout_ PWINBIO_PIPELINE Pipeline,_Out_ PWINBIO_IDENTITY Identity,_Out_ PWINBIO_BIOMETRIC_SUBTYPE SubFactor,_Out_ PUCHAR *PayloadBlob,_Out_ PSIZE_T PayloadBlobSize,_Out_ PUCHAR *HashValue,_Out_ PSIZE_T HashSize,_Out_ PWINBIO_REJECT_DETAIL RejectDetail)
HRESULT WINAPI None.EngineAdapterNotifyPowerChange(_Inout_ PWINBIO_PIPELINE Pipeline,_In_ ULONG PowerEventType)
HRESULT WINAPI None.EngineAdapterPipelineCleanup(_Inout_ PWINBIO_PIPELINE Pipeline)
HRESULT WINAPI None.EngineAdapterQueryCalibrationData(_Inout_ PWINBIO_PIPELINE Pipeline,_Out_ PBOOLEAN DiscardAndRepeatCapture,_Out_ PUCHAR CalibrationBuffer,_Out_ PSIZE_T CalibrationBufferSize,_In_ SIZE_T MaxBufferSize)
HRESULT WINAPI None.EngineAdapterQueryExtendedInfo(_Inout_ PWINBIO_PIPELINE Pipeline,_Out_ PWINBIO_EXTENDED_ENGINE_INFO EngineInfo,_In_ SIZE_T EngineInfoSize)
HRESULT WINAPI None.EngineAdapterQueryHashAlgorithms(_Inout_ PWINBIO_PIPELINE Pipeline,_Out_ PSIZE_T AlgorithmCount,_Out_ PSIZE_T AlgorithmBufferSize,_Out_ PUCHAR *AlgorithmBuffer)
HRESULT WINAPI None.EngineAdapterQueryIndexVectorSize(_Inout_ PWINBIO_PIPELINE Pipeline,_Out_ PSIZE_T IndexElementCount)
HRESULT WINAPI None.EngineAdapterQueryPreferredFormat(_Inout_ PWINBIO_PIPELINE Pipeline,_Out_ PWINBIO_REGISTERED_FORMAT StandardFormat,_Out_ PWINBIO_UUID VendorFormat)
HRESULT WINAPI None.EngineAdapterQuerySampleHint(_Inout_ PWINBIO_PIPELINE Pipeline,_Out_ PSIZE_T SampleHint)
HRESULT WINAPI None.EngineAdapterRefreshCache(_Inout_ PWINBIO_PIPELINE Pipeline)
HRESULT WINAPI None.EngineAdapterSelectCalibrationFormat(_Inout_ PWINBIO_PIPELINE Pipeline,_In_ PWINBIO_UUID FormatArray,_In_ SIZE_T FormatCount,_Out_ PWINBIO_UUID SelectedFormat,_Out_ PSIZE_T MaxBufferSize)
HRESULT WINAPI None.EngineAdapterSetAccountPolicy(_Inout_ PWINBIO_PIPELINE Pipeline,_In_ PWINBIO_ACCOUNT_POLICY PolicyItemArray,_In_ SIZE_T PolicyItemCount)
HRESULT WINAPI None.EngineAdapterSetEnrollmentParameters(_Inout_ PWINBIO_PIPELINE Pipeline,_In_ PWINBIO_EXTENDED_ENROLLMENT_PARAMETERS Parameters)
HRESULT WINAPI None.EngineAdapterSetEnrollmentSelector(_Inout_ PWINBIO_PIPELINE Pipeline,_In_ ULONGLONG SelectorValue)
HRESULT WINAPI None.EngineAdapterSetHashAlgorithm(_Inout_ PWINBIO_PIPELINE Pipeline,_In_ SIZE_T AlgorithmBufferSize,_In_ PUCHAR AlgorithmBuffer)
HRESULT WINAPI None.EngineAdapterUpdateEnrollment(_Inout_ PWINBIO_PIPELINE Pipeline,_Out_ PWINBIO_REJECT_DETAIL RejectDetail)
HRESULT WINAPI None.EngineAdapterVerifyFeatureSet(_Inout_ PWINBIO_PIPELINE Pipeline,_In_ PWINBIO_IDENTITY Identity,_In_ WINBIO_BIOMETRIC_SUBTYPE SubFactor,_Out_ PBOOLEAN Match,_Out_ PUCHAR *PayloadBlob,_Out_ PSIZE_T PayloadBlobSize,_Out_ PUCHAR *HashValue,_Out_ PSIZE_T HashSize,_Out_ WINBIO_REJECT_DETAIL *RejectDetail)
HRESULT WINAPI None.Initialize(RO_INIT_TYPE initType None)
HRESULT WINAPI None.IsWow64GuestMachineSupported(_In_ USHORT WowGuestMachine,_Out_ BOOLEAN *MachineIsSupported)
HRESULT WINAPI None.MFCreateSensorActivityMonitor(_In_ IMFSensorActivitiesReportCallback *pCallback,_Out_ IMFSensorActivityMonitor **ppActivityMonitor)
HRESULT WINAPI None.MFCreateSensorGroup(LPCWSTR SensorGroupSymbolicLink None,_Out_ IMFSensorGroup **ppSensorGroup)
HRESULT WINAPI None.MFCreateSensorStream(DWORD StreamId None,_In_opt_ IMFAttributes *pAttributes,_In_ IMFCollection *pMediaTypeCollection,_Out_ IMFSensorStream **ppStream)
HRESULT WINAPI None.RoFreeParameterizedTypeExtra(_In_ ROPARAMIIDHANDLE extra)
HRESULT WINAPI None.RoGetActivatableClassRegistration(_In_ HSTRING activatableClassId,_Out_ PActivatableClassRegistration *activatableClassRegistration)
HRESULT WINAPI None.RoGetErrorReportingFlags(_Out_ UINT32 *pflags)
HRESULT WINAPI None.RoInitialize(_In_ RO_INIT_TYPE initType)
HRESULT WINAPI None.RtwqCancelDeadline(_In_ HANDLE pRequest)
HRESULT WINAPI None.StorageAdapterAddRecord(_Inout_ PWINBIO_PIPELINE Pipeline,_In_ PWINBIO_STORAGE_RECORD RecordContents)
HRESULT WINAPI None.StorageAdapterAttach(_Inout_ PWINBIO_PIPELINE Pipeline)
HRESULT WINAPI None.StorageAdapterClearContext(_Inout_ PWINBIO_PIPELINE Pipeline)
HRESULT WINAPI None.StorageAdapterCloseDatabase(_Inout_ PWINBIO_PIPELINE Pipeline)
HRESULT WINAPI None.StorageAdapterControlUnit(_Inout_ PWINBIO_PIPELINE Pipeline,_In_ ULONG ControlCode,_In_ PUCHAR SendBuffer,_In_ SIZE_T SendBufferSize,_In_ PUCHAR ReceiveBuffer,_In_ SIZE_T ReceiveBufferSize,_Out_ PSIZE_T ReceiveDataSize,_Out_ PULONG OperationStatus)
HRESULT WINAPI None.StorageAdapterControlUnitPrivileged(_Inout_ PWINBIO_PIPELINE Pipeline,_In_ ULONG ControlCode,_In_ PUCHAR SendBuffer,_In_ SIZE_T SendBufferSize,_In_ PUCHAR ReceiveBuffer,_In_ SIZE_T ReceiveBufferSize,_Out_ PSIZE_T ReceiveDataSize,_Out_ PULONG OperationStatus)
HRESULT WINAPI None.StorageAdapterDeleteRecord(_Inout_ PWINBIO_PIPELINE Pipeline,_In_ PWINBIO_IDENTITY Identity,_In_ WINBIO_BIOMETRIC_SUBTYPE SubFactor)
HRESULT WINAPI None.StorageAdapterDetach(_Inout_ PWINBIO_PIPELINE Pipeline)
HRESULT WINAPI None.StorageAdapterEraseDatabase(_Inout_ PWINBIO_PIPELINE Pipeline,_In_ PWINBIO_UUID DatabaseId,_In_ LPCWSTR FilePath,_In_ LPCWSTR ConnectString)
HRESULT WINAPI None.StorageAdapterFirstRecord(_Inout_ PWINBIO_PIPELINE Pipeline)
HRESULT WINAPI None.StorageAdapterGetCurrentRecord(_Inout_ PWINBIO_PIPELINE Pipeline,_Out_ PWINBIO_STORAGE_RECORD RecordContents)
HRESULT WINAPI None.StorageAdapterGetDatabaseSize(_Inout_ PWINBIO_PIPELINE Pipeline,_Out_ PSIZE_T AvailableRecordCount,_Out_ PSIZE_T TotalRecordCount)
HRESULT WINAPI None.StorageAdapterGetDataFormat(_Inout_ PWINBIO_PIPELINE Pipeline,_Out_ PWINBIO_UUID Format,_Out_ PWINBIO_VERSION Version)
HRESULT WINAPI None.StorageAdapterGetRecordCount(_Inout_ PWINBIO_PIPELINE Pipeline,_Out_ PSIZE_T RecordCount)
HRESULT WINAPI None.StorageAdapterNextRecord(_Inout_ PWINBIO_PIPELINE Pipeline)
HRESULT WINAPI None.StorageAdapterNotifyPowerChange(_Inout_ PWINBIO_PIPELINE Pipeline,_In_ ULONG PowerEventType)
HRESULT WINAPI None.StorageAdapterOpenDatabase(_Inout_ PWINBIO_PIPELINE Pipeline,_In_ PWINBIO_UUID DatabaseId,_In_ LPCWSTR FilePath,_In_ LPCWSTR ConnectString)
HRESULT WINAPI None.StorageAdapterPipelineCleanup(_Inout_ PWINBIO_PIPELINE Pipeline)
HRESULT WINAPI None.StorageAdapterPipelineInit(_Inout_ PWINBIO_PIPELINE Pipeline)
HRESULT WINAPI None.StorageAdapterQueryByContent(_Inout_ PWINBIO_PIPELINE Pipeline,_In_ WINBIO_BIOMETRIC_SUBTYPE SubFactor,_In_ ULONG IndexVector[],_In_ SIZE_T IndexElementCount)
HRESULT WINAPI None.StorageAdapterQueryBySubject(_Inout_ PWINBIO_PIPELINE Pipeline,_In_ PWINBIO_IDENTITY Identity,_In_ WINBIO_BIOMETRIC_SUBTYPE SubFactor)
HRESULT WINAPI None.StorageAdapterQueryExtendedInfo(_Inout_ PWINBIO_PIPELINE Pipeline,_Out_ PWINBIO_EXTENDED_STORAGE_INFO StorageInfo,_In_ SIZE_T StorageInfoSize)
HRESULT WINAPI None.WbioQueryEngineInterface(_Out_ PWINBIO_ENGINE_INTERFACE *EngineInterface)
HRESULT WINAPI None.WbioQueryStorageInterface(_Out_ PWINBIO_STORAGE_INTERFACE *StorageInterface)
HRESULT WINAPI None.WindowsCompareStringOrdinal(_In_ HSTRING string1,_In_ HSTRING string2,_Out_ INT32 *result)
HRESULT WINAPI None.WsDumpMemory(_In_opt_ WS_ERROR* error)
HRESULT WINAPI None.WsSetAutoFail(_In_ ULONG count,_In_opt_ WS_ERROR* error)
HRESULT WINAPI ole32.CoDecrementMTAUsage(_In_ CO_MTA_USAGE_COOKIE Cookie)
HRESULT WINAPI ole32.CoGetApartmentType(_Out_ APTTYPE *pAptType,_Out_ APTTYPEQUALIFIER *pAptQualifier)
HRESULT WINAPI ole32.CoHandlePriorityEventsFromMessagePump(void None None)
HRESULT WINAPI ole32.CoIncrementMTAUsage(_Out_ CO_MTA_USAGE_COOKIE *pCookie)
HRESULT WINAPI ondemandconnroutehelper.GetInterfaceContextTableForHostName(_In_opt_ PCWSTR HostName,_In_opt_ PCWSTR ProxyName,_In_ DWORD Flags,_In_opt_ BYTE *ConnectionProfileFilterRawData,_In_ DWORD ConnectionProfileFilterRawDataSize,_Out_ NET_INTERFACE_CONTEXT_TABLE **InterfaceContextTable)
HRESULT WINAPI ondemandconnroutehelper.OnDemandGetRoutingHint(_In_ PCWSTR DestinationHostName,_Out_ DWORD *pInterfaceIndex)
HRESULT WINAPI ondemandconnroutehelper.OnDemandRegisterNotification(_In_ ONDEMAND_NOTIFICATION_CALLBACK funcCallback,_In_opt_ PVOID pCallbackContext,_Out_ PHANDLE pRegistrationHandle)
HRESULT WINAPI ondemandconnroutehelper.OnDemandUnregisterNotification(_In_ HANDLE RegistrationHandle)
HRESULT WINAPI p2pgraph.PeerGraphCloseDirectConnection(_In_ HGRAPH hGraph,_In_ ULONGLONG ullConnectionId)
HRESULT WINAPI p2pgraph.PeerGraphClose(_In_ HGRAPH hGraph)
HRESULT WINAPI p2pgraph.PeerGraphConnect(_In_ HGRAPH hGraph,_In_ PCWSTR pwzPeerId,_In_ PPEER_ADDRESS pAddress,_Out_ ULONGLONG *pullConnectionId)
HRESULT WINAPI p2pgraph.PeerGraphCreate(_In_ PPEER_GRAPH_PROPERTIES pGraphProperties,_In_ PCWSTR pwzDatabaseName,_In_ PPEER_SECURITY_INTERFACE pSecurityInterface,_Out_ PHGRAPH phGraph)
HRESULT WINAPI p2pgraph.PeerGraphDelete(_In_ PCWSTR pwzGraphId,_In_ PCWSTR pwzPeerId,_In_ PCWSTR pwzDatabaseName)
HRESULT WINAPI p2pgraph.PeerGraphExportDatabase(_In_ HGRAPH hGraph,_In_ PCWSTR pwzFilePath)
HRESULT WINAPI p2pgraph.PeerGraphGetItemCount(_In_ HPEERENUM hPeerEnum,_Out_ PULONG pCount)
HRESULT WINAPI p2pgraph.PeerGraphGetNodeInfo(_In_ HGRAPH hGraph,_In_ ULONGLONG ullNodeId,_Out_ PPEER_NODE_INFO *ppNodeInfo)
HRESULT WINAPI p2pgraph.PeerGraphGetProperties(_In_ HGRAPH hGraph,_Out_ PPEER_GRAPH_PROPERTIES *ppGraphProperties)
HRESULT WINAPI p2pgraph.PeerGraphGetStatus(_In_ HGRAPH hGraph,_Out_ DWORD *pdwStatus)
HRESULT WINAPI p2pgraph.PeerGraphPeerTimeToUniversalTime(_In_ HGRAPH hGraph,_In_ FILETIME *pftPeerTime,_Out_ FILETIME *pftUniversalTime)
HRESULT WINAPI p2pgraph.PeerGraphRegisterEvent(_In_ HGRAPH hGraph,_In_ HANDLE hEvent,_In_ ULONG cEventRegistrations,_In_ PPEER_GRAPH_EVENT_REGISTRATION pEventRegistrations,_Out_ HPEEREVENT *phPeerEvent)
HRESULT WINAPI p2pgraph.PeerGraphSearchRecords(_In_ HGRAPH hGraph,_In_ PCWSTR pwzCriteria,_Out_ HPEERENUM *phPeerEnum)
HRESULT WINAPI p2pgraph.PeerGraphSetNodeAttributes(_In_ HGRAPH hGraph,_In_ PCWSTR pwzAttributes)
HRESULT WINAPI p2pgraph.PeerGraphSetPresence(_In_ HGRAPH hGraph,_In_ BOOL fPresent)
HRESULT WINAPI p2pgraph.PeerGraphSetProperties(_In_ HGRAPH hGraph,_In_ PPEER_GRAPH_PROPERTIES pGraphProperties)
HRESULT WINAPI p2pgraph.PeerGraphStartup(_In_ WORD wVersionRequested,_Out_ PPEER_VERSION_DATA pVersionData)
HRESULT WINAPI p2pgraph.PeerGraphUniversalTimeToPeerTime(_In_ HGRAPH hGraph,_In_ FILETIME *pftUniversalTime,_Out_ FILETIME *pftPeerTime)
HRESULT WINAPI p2pgraph.PeerGraphUnregisterEvent(_In_ HPEEREVENT hPeerEvent)
HRESULT WINAPI p2pgraph.PeerGraphUpdateRecord(_In_ HGRAPH hGraph,_In_ PPEER_RECORD pRecord)
HRESULT WINAPI prntvpt.PTGetPrintDeviceResources(_In_ HPTPROVIDER hProvider,_In_ LPCWSTR pzLocaleName,_In_ IStream *pPrintTicket,IStream *pDeviceResources None,_Out_opt_ BSTR *pbstrErrorMessage)
HRESULT WINAPI rtworkq.RtwqSetDeadline(_In_ DWORD workQueueId,_In_ LONGLONG llDeadline,_Inout_ HANDLE *pRequest)
HRESULT WINAPI shcore.GetDpiForMonitor(_In_ HMONITOR hmonitor,_In_ MONITOR_DPI_TYPE dpiType,_Out_ UINT *dpiX,_Out_ UINT *dpiY)
HRESULT WINAPI shcore.SetProcessDpiAwareness(_In_ PROCESS_DPI_AWARENESS value)
HRESULT WINAPI shell32.SHGetFolderPathEx(_In_ REFKNOWNFOLDERID rfid,_In_ DWORD dwFlags,_In_opt_ HANDLE hToken,_Out_ LPWSTR pszPath,_In_ UINT cchPath)
HRESULT WINAPI srpapi.srpInheritOriginClaim(_In_ Handle OriginToken,_In_ Handle InheritingToken,Handle ResultToken None)
HRESULT WINAPI srpapi.SrpRestoreEnterpriseContext(_In_opt_ HANDLE tokenHandle)
HRESULT WINAPI uiautomationcore.UiaDisconnectProvider(_In_ IRawElementProviderSimple *pProvider)
HRESULT WINAPI uiautomationcore.UiaGetReservedMixedAttributeValue(_Out_ IUnknown **punkMixedAttributeValue)
HRESULT WINAPI uiautomationcore.UiaGetReservedNotSupportedValue(_Out_ IUnknown **punkNotSupportedValue)
HRESULT WINAPI uiautomationcore.UiaHostProviderFromHwnd(_In_ HWND hwnd,_Out_ IRawElementProviderSimple **pProvider)
HRESULT WINAPI uiautomationcore.UiaRaiseAutomationEvent(_In_ IRawElementProviderSimple *pProvider,_In_ EVENTID id)
HRESULT WINAPI uiautomationcore.UiaRaiseChangesEvent(_In_ IRawElementProviderSimple *pProvider,_In_ eventIdCount None,_In_ *pUiaChanges None)
HRESULT WINAPI uiautomationcore.UiaRaiseNotificationEvent(_In_ IRawElementProviderSimple *provider,NotificationKind notificationKind None,NotificationProcessing notificationProcessing None,_In_opt_ BSTR displayString,_In_ BSTR activityId)
HRESULT WINAPI uiautomationcore.UiaRaiseTextEditTextChangedEvent(_In_ IRawElementProviderSimple *pProvider,_In_ TextEditChangeType textEditChangeType,_In_ SAFEARRAY *pChangedData)
HRESULT WINAPI userenv.CreateAppContainerProfile(_In_ PCWSTR pszAppContainerName,_In_ PCWSTR pszDisplayName,_In_ PCWSTR pszDescription,_In_ PSID_AND_ATTRIBUTES pCapabilities,_In_ DWORD dwCapabilityCount,_Out_ PSID *ppSidAppContainerSid)
HRESULT WINAPI userenv.CreateProfile(_In_ LPCWSTR pszUserSid,_In_ LPCWSTR pszUserName,_Out_ LPWSTR pszProfilePath,_In_ DWORD cchProfilePath)
HRESULT WINAPI userenv.DeleteAppContainerProfile(_In_ PCWSTR pszAppContainerName)
HRESULT WINAPI userenv.DeriveAppContainerSidFromAppContainerName(_In_ PCWSTR pszAppContainerName,_Out_ PSID *ppsidAppContainerSid)
HRESULT WINAPI userenv.DeriveRestrictedAppContainerSidFromAppContainerSidAndRestrictedName(_In_ PSID psidAppContainerSid,_In_ PCWSTR pszRestrictedAppContainerName,_Out_ PSID *ppsidRestrictedAppContainerSid)
HRESULT WINAPI userenv.GetAppContainerFolderPath(_In_ PCWSTR pszAppContainerSid,_Out_ PWSTR *ppszPath)
HRESULT WINAPI userenv.GetAppContainerRegistryLocation(_In_ REGSAM desiredAccess,_Out_ PHKEY phAppContainerKey)
HRESULT WINAPI wdsclientapi.WdsCliFreeStringArray(_Inout_opt_ PWSTR *ppwszArray,_In_ ULONG ulCount)
HRESULT WINAPI wdsclientapi.WdsCliGetImageName(_In_ HANDLE hIfh,_Out_ PWSTR *ppwszValue)
HRESULT WINAPI webservices.WsAbandonCall(_In_ WS_SERVICE_PROXY* serviceProxy,_In_ ULONG callId,_In_opt_ WS_ERROR* error)
HRESULT WINAPI webservices.WsAbandonMessage(_In_ WS_CHANNEL* channel,_In_ WS_MESSAGE* message,_In_opt_ WS_ERROR* error)
HRESULT WINAPI webservices.WsAbortChannel(_In_ WS_CHANNEL* channel,_In_opt_ WS_ERROR* error)
HRESULT WINAPI webservices.WsAbortListener(_In_ WS_LISTENER* listener,_In_opt_ WS_ERROR* error)
HRESULT WINAPI webservices.WsAbortServiceHost(_In_ WS_SERVICE_HOST* serviceHost,_In_opt_ WS_ERROR* error)
HRESULT WINAPI webservices.WsAbortServiceProxy(_In_ WS_SERVICE_PROXY* serviceProxy,_In_opt_ WS_ERROR* error)
HRESULT WINAPI webservices.WsAlloc(_In_ WS_HEAP* heap,_In_ SIZE_T size,void** ptr None,_In_opt_ WS_ERROR* error)
HRESULT WINAPI webservices.WsCheckMustUnderstandHeaders(_In_ WS_MESSAGE* message,_In_opt_ WS_ERROR* error)
HRESULT WINAPI webservices.WsCopyError(_In_ WS_ERROR* source,_In_ WS_ERROR* destination)
HRESULT WINAPI webservices.WsCopyNode(_In_ WS_XML_WRITER* writer,_In_ WS_XML_READER* reader,_In_opt_ WS_ERROR* error)
HRESULT WINAPI webservices.WsCreateChannelForListener(_In_ WS_LISTENER* listener,const WS_CHANNEL_PROPERTY* properties,_In_ ULONG propertyCount,WS_CHANNEL** channel None,_In_opt_ WS_ERROR* error)
HRESULT WINAPI webservices.WsCreateError(const WS_ERROR_PROPERTY* properties,_In_ ULONG propertyCount,WS_ERROR** error None)
HRESULT WINAPI webservices.WsCreateFaultFromError(_In_ WS_ERROR* error,_In_ HRESULT errorCode,_In_ WS_FAULT_DISCLOSURE disclosure,_In_ WS_HEAP* heap,_Out_ WS_FAULT* fault)
HRESULT WINAPI webservices.WsCreateMessageForChannel(_In_ WS_CHANNEL* channel,const WS_MESSAGE_PROPERTY* properties,_In_ ULONG propertyCount,WS_MESSAGE** message None,_In_opt_ WS_ERROR* error)
HRESULT WINAPI webservices.WsCreateMessage(_In_ WS_ENVELOPE_VERSION envelopeVersion,_In_ WS_ADDRESSING_VERSION addressingVersion,const WS_MESSAGE_PROPERTY* properties,_In_ ULONG propertyCount,WS_MESSAGE** message None,_In_opt_ WS_ERROR* error)
HRESULT WINAPI webservices.WsCreateMetadata(const WS_METADATA_PROPERTY* properties,_In_ ULONG propertyCount,WS_METADATA** metadata None,_In_opt_ WS_ERROR* error)
HRESULT WINAPI webservices.WsCreateWriter(const WS_XML_WRITER_PROPERTY* properties,_In_ ULONG propertyCount,WS_XML_WRITER** writer None,_In_opt_ WS_ERROR* error)
HRESULT WINAPI webservices.WsCreateXmlBuffer(_In_ WS_HEAP* heap,const WS_XML_BUFFER_PROPERTY* properties,_In_ ULONG propertyCount,WS_XML_BUFFER** buffer None,_In_opt_ WS_ERROR* error)
HRESULT WINAPI webservices.WsCreateXmlSecurityToken(_In_ WS_XML_BUFFER* tokenXml,_In_opt_ WS_SECURITY_KEY_HANDLE* tokenKey,const WS_XML_SECURITY_TOKEN_PROPERTY* properties,_In_ ULONG propertyCount,WS_SECURITY_TOKEN** token None,_In_opt_ WS_ERROR* error)
HRESULT WINAPI webservices.WsEndReaderCanonicalization(_In_ WS_XML_READER* reader,_In_opt_ WS_ERROR* error)
HRESULT WINAPI webservices.WsEndWriterCanonicalization(_In_ WS_XML_WRITER* writer,_In_opt_ WS_ERROR* error)
HRESULT WINAPI webservices.WsGetChannelProperty(_In_ WS_CHANNEL* channel,_In_ WS_CHANNEL_PROPERTY_ID id,void* value None,_In_ ULONG valueSize,_In_opt_ WS_ERROR* error)
HRESULT WINAPI webservices.WsGetDictionary(_In_ WS_ENCODING encoding,WS_XML_DICTIONARY** dictionary None,_In_opt_ WS_ERROR* error)
HRESULT WINAPI webservices.WsGetErrorProperty(_In_ WS_ERROR* error,_In_ WS_ERROR_PROPERTY_ID id,void* buffer None,_In_ ULONG bufferSize)
HRESULT WINAPI webservices.WsGetErrorString(_In_ WS_ERROR* error,_In_ ULONG index,_Out_ WS_STRING* *string)
HRESULT WINAPI webservices.WsGetFaultErrorProperty(_In_ WS_ERROR* error,_In_ WS_FAULT_ERROR_PROPERTY_ID id,void* buffer None,_In_ ULONG bufferSize)
HRESULT WINAPI webservices.WsGetHeaderAttributes(_In_ WS_MESSAGE* message,_In_ WS_XML_READER* reader,_Out_ ULONG* headerAttributes,_In_opt_ WS_ERROR* error)
HRESULT WINAPI webservices.WsGetHeader(_In_ WS_MESSAGE* message,_In_ WS_HEADER_TYPE headerType,_In_ WS_TYPE valueType,_In_ WS_READ_OPTION readOption,_In_opt_ WS_HEAP* heap,void* value None,_In_ ULONG valueSize,_In_opt_ WS_ERROR* error)
HRESULT WINAPI webservices.WsGetHeapProperty(_In_ WS_HEAP* heap,_In_ WS_HEAP_PROPERTY_ID id,void* value None,_In_ ULONG valueSize,_In_opt_ WS_ERROR* error)
HRESULT WINAPI webservices.WsGetListenerProperty(_In_ WS_LISTENER* listener,_In_ WS_LISTENER_PROPERTY_ID id,void* value None,_In_ ULONG valueSize,_In_opt_ WS_ERROR* error)
HRESULT WINAPI webservices.WsGetMessageProperty(_In_ WS_MESSAGE* message,_In_ WS_MESSAGE_PROPERTY_ID id,void* value None,_In_ ULONG valueSize,_In_opt_ WS_ERROR* error)
HRESULT WINAPI webservices.WsGetMetadataEndpoints(_In_ WS_METADATA* metadata,_Out_ WS_METADATA_ENDPOINTS* endpoints,_In_opt_ WS_ERROR* error)
HRESULT WINAPI webservices.WsGetMetadataProperty(_In_ WS_METADATA* metadata,_In_ WS_METADATA_PROPERTY_ID id,void* value None,_In_ ULONG valueSize,_In_opt_ WS_ERROR* error)
HRESULT WINAPI webservices.WsGetMissingMetadataDocumentAddress(_In_ WS_METADATA* metadata,WS_ENDPOINT_ADDRESS** address None,_In_opt_ WS_ERROR* error)
HRESULT WINAPI webservices.WsGetPolicyAlternativeCount(_In_ WS_POLICY* policy,_Out_ ULONG* count,_In_opt_ WS_ERROR* error)
HRESULT WINAPI webservices.WsGetPolicyProperty(_In_ WS_POLICY* policy,_In_ WS_POLICY_PROPERTY_ID id,void* value None,_In_ ULONG valueSize,_In_opt_ WS_ERROR* error)
HRESULT WINAPI webservices.WsGetReaderNode(_In_ WS_XML_READER *xmlReader,const WS_XML_NODE **node,_In_opt_ WS_ERROR *error)
HRESULT WINAPI webservices.WsGetReaderPosition(_In_ WS_XML_READER* reader,_Out_ WS_XML_NODE_POSITION* *nodePosition,_In_opt_ WS_ERROR* error)
HRESULT WINAPI webservices.WsGetReaderProperty(_In_ WS_XML_READER* reader,_In_ WS_XML_READER_PROPERTY_ID id,void* value None,_In_ ULONG valueSize,_In_opt_ WS_ERROR* error)
HRESULT WINAPI webservices.WsGetSecurityContextProperty(_In_ WS_SECURITY_CONTEXT* securityContext,_In_ WS_SECURITY_CONTEXT_PROPERTY_ID id,void* value None,_In_ ULONG valueSize,_In_opt_ WS_ERROR* error)
HRESULT WINAPI webservices.WsGetSecurityTokenProperty(_In_ WS_SECURITY_TOKEN* securityToken,_In_ WS_SECURITY_TOKEN_PROPERTY_ID id,void* value None,_In_ ULONG valueSize,_In_opt_ WS_HEAP* heap,_In_opt_ WS_ERROR* error)
HRESULT WINAPI webservices.WsGetWriterPosition(_In_ WS_XML_WRITER* writer,_Out_ WS_XML_NODE_POSITION* *nodePosition,_In_opt_ WS_ERROR* error)
HRESULT WINAPI webservices.WsGetWriterProperty(_In_ WS_XML_WRITER* writer,_In_ WS_XML_WRITER_PROPERTY_ID id,void* value None,_In_ ULONG valueSize,_In_opt_ WS_ERROR* error)
HRESULT WINAPI webservices.WsInitializeMessage(_In_ WS_MESSAGE* message,_In_ WS_MESSAGE_INITIALIZATION initialization,_In_opt_ WS_MESSAGE* sourceMessage,_In_opt_ WS_ERROR* error)
HRESULT WINAPI webservices.WsMatchPolicyAlternative(_In_ WS_POLICY* policy,_In_ ULONG alternativeIndex,_In_ WS_POLICY_CONSTRAINTS* policyConstraints,_In_ BOOL matchRequired,_In_ WS_HEAP* heap,_In_opt_ WS_ERROR* error)
HRESULT WINAPI webservices.WsMoveReader(_In_ WS_XML_READER* reader,_In_ WS_MOVE_TO moveTo,BOOL* found None,_In_opt_ WS_ERROR* error)
HRESULT WINAPI webservices.WsMoveWriter(_In_ WS_XML_WRITER* writer,_In_ WS_MOVE_TO moveTo,BOOL* found None,_In_opt_ WS_ERROR* error)
HRESULT WINAPI webservices.WsPullBytes(_In_ WS_XML_WRITER* writer,_In_ WS_PULL_BYTES_CALLBACK callback,_In_opt_ void* callbackState,_In_opt_ WS_ERROR* error)
HRESULT WINAPI webservices.WsPushBytes(_In_ WS_XML_WRITER* writer,_In_ WS_PUSH_BYTES_CALLBACK callback,_In_opt_ void* callbackState,_In_opt_ WS_ERROR* error)
HRESULT WINAPI webservices.WsReadBytes(_In_ WS_XML_READER* reader,void* bytes None,_In_ ULONG maxByteCount,_Out_ ULONG* actualByteCount,_In_opt_ WS_ERROR* error)
HRESULT WINAPI webservices.WsReadChars(_In_ WS_XML_READER* reader,WCHAR* chars None,_In_ ULONG maxCharCount,_Out_ ULONG* actualCharCount,_In_opt_ WS_ERROR* error)
HRESULT WINAPI webservices.WsReadCharsUtf8(_In_ WS_XML_READER* reader,BYTE* bytes None,_In_ ULONG maxByteCount,_Out_ ULONG* actualByteCount,_In_opt_ WS_ERROR* error)
HRESULT WINAPI webservices.WsReadEndAttribute(_In_ WS_XML_READER* reader,_In_opt_ WS_ERROR* error)
HRESULT WINAPI webservices.WsReadEndElement(_In_ WS_XML_READER* reader,_In_opt_ WS_ERROR* error)
HRESULT WINAPI webservices.WsReadEndpointAddressExtension(_In_ WS_XML_READER* reader,_In_ WS_ENDPOINT_ADDRESS* endpointAddress,_In_ WS_ENDPOINT_ADDRESS_EXTENSION_TYPE extensionType,_In_ WS_READ_OPTION readOption,_In_ WS_HEAP* heap,void* value None,_In_ ULONG valueSize,_In_opt_ WS_ERROR* error)
HRESULT WINAPI webservices.WsReadEnvelopeEnd(_In_ WS_MESSAGE* message,_In_opt_ WS_ERROR* error)
HRESULT WINAPI webservices.WsReadEnvelopeStart(_In_ WS_MESSAGE* message,_In_ WS_XML_READER* reader,_In_opt_ WS_MESSAGE_DONE_CALLBACK doneCallback,_In_opt_ void* doneCallbackState,_In_opt_ WS_ERROR* error)
HRESULT WINAPI webservices.WsReadNode(_In_ WS_XML_READER* reader,_In_opt_ WS_ERROR* error)
HRESULT WINAPI webservices.WsReadQualifiedName(_In_ WS_XML_READER* reader,_In_ WS_HEAP* heap,WS_XML_STRING* prefix None,_Out_ WS_XML_STRING* *localName,WS_XML_STRING* ns None,_In_opt_ WS_ERROR* error)
HRESULT WINAPI webservices.WsReadStartAttribute(_In_ WS_XML_READER* reader,_In_ ULONG attributeIndex,_In_opt_ WS_ERROR* error)
HRESULT WINAPI webservices.WsReadStartElement(_In_ WS_XML_READER* reader,_In_opt_ WS_ERROR* error)
HRESULT WINAPI webservices.WsReadValue(_In_ WS_XML_READER* reader,_In_ WS_VALUE_TYPE valueType,void* value None,_In_ ULONG valueSize,_In_opt_ WS_ERROR* error)
HRESULT WINAPI webservices.WsReadXmlBuffer(_In_ WS_XML_READER* reader,_In_ WS_HEAP* heap,WS_XML_BUFFER** xmlBuffer None,_In_opt_ WS_ERROR* error)
HRESULT WINAPI webservices.WsRemoveHeader(_In_ WS_MESSAGE *message,_In_ WS_HEADER_TYPE headerType,_In_opt_ WS_ERROR* *error)
HRESULT WINAPI webservices.WsResetChannel(_In_ WS_CHANNEL* channel,_In_opt_ WS_ERROR* error)
HRESULT WINAPI webservices.WsResetError(_In_ WS_ERROR* error)
HRESULT WINAPI webservices.WsResetHeap(_In_ WS_HEAP* heap,_In_opt_ WS_ERROR* error)
HRESULT WINAPI webservices.WsResetListener(_In_ WS_LISTENER* listener,_In_opt_ WS_ERROR* error)
HRESULT WINAPI webservices.WsResetMessage(_In_ WS_MESSAGE* message,_In_opt_ WS_ERROR* error)
HRESULT WINAPI webservices.WsResetMetadata(_In_ WS_METADATA* metadata,_In_opt_ WS_ERROR* error)
HRESULT WINAPI webservices.WsResetServiceHost(_In_ WS_SERVICE_HOST *serviceHost,_In_opt_ WS_ERROR *error)
HRESULT WINAPI webservices.WsResetServiceProxy(_In_ WS_SERVICE_PROXY* serviceProxy,_In_opt_ WS_ERROR* error)
HRESULT WINAPI webservices.WsRevokeSecurityContext(_In_ WS_SECURITY_CONTEXT* securityContext,_In_opt_ WS_ERROR* error)
HRESULT WINAPI webservices.WsSetChannelProperty(_In_ WS_CHANNEL* channel,_In_ WS_CHANNEL_PROPERTY_ID id,const void* value,_In_ ULONG valueSize,_In_opt_ WS_ERROR* error)
HRESULT WINAPI webservices.WsSetErrorProperty(_In_ WS_ERROR* error,_In_ WS_ERROR_PROPERTY_ID id,const void* value,_In_ ULONG valueSize)
HRESULT WINAPI webservices.WsSetFaultErrorProperty(_In_ WS_ERROR* error,_In_ WS_FAULT_ERROR_PROPERTY_ID id,const void* value,_In_ ULONG valueSize)
HRESULT WINAPI webservices.WsSetHeader(_In_ WS_MESSAGE* message,_In_ WS_HEADER_TYPE headerType,_In_ WS_TYPE valueType,_In_ WS_WRITE_OPTION writeOption,const void* value,_In_ ULONG valueSize,_In_opt_ WS_ERROR* error)
HRESULT WINAPI webservices.WsSetInputToBuffer(_In_ WS_XML_READER *reader,_In_ WS_XML_BUFFER *buffer,const WS_XML_READER_PROPERTY *properties,_In_ ULONG propertyCount,_In_opt_ WS_ERROR *error)
HRESULT WINAPI webservices.WsSetListenerProperty(_In_ WS_LISTENER *listener,_In_ WS_LISTENER_PROPERTY_ID id,const void *value,_In_ ULONG valueSize,_In_opt_ WS_ERROR *error)
HRESULT WINAPI webservices.WsSetMessageProperty(_In_ WS_MESSAGE* message,_In_ WS_MESSAGE_PROPERTY_ID id,const void* value,_In_ ULONG valueSize,_In_opt_ WS_ERROR* error)
HRESULT WINAPI webservices.WsSetOutputToBuffer(_In_ WS_XML_WRITER* writer,_In_ WS_XML_BUFFER* buffer,const WS_XML_WRITER_PROPERTY* properties,_In_ ULONG propertyCount,_In_opt_ WS_ERROR* error)
HRESULT WINAPI webservices.WsSkipNode(_In_ WS_XML_READER* reader,_In_opt_ WS_ERROR* error)
HRESULT WINAPI webservices.WsStartReaderCanonicalization(_In_ WS_XML_READER* reader,_In_ WS_WRITE_CALLBACK writeCallback,_In_ void* writeCallbackState,const WS_XML_CANONICALIZATION_PROPERTY* properties,_In_ ULONG propertyCount,_In_opt_ WS_ERROR* error)
HRESULT WINAPI webservices.WsStartWriterCanonicalization(_In_ WS_XML_WRITER* writer,_In_ WS_WRITE_CALLBACK writeCallback,_In_ void* writeCallbackState,const WS_XML_CANONICALIZATION_PROPERTY* properties,_In_ ULONG propertyCount,_In_opt_ WS_ERROR* error)
HRESULT WINAPI webservices.WsTrimXmlWhitespace(WCHAR* chars None,_In_ ULONG charCount,WCHAR** trimmedChars None,_Out_ ULONG* *trimmedCount,_In_opt_ WS_ERROR* error)
HRESULT WINAPI webservices.WsVerifyXmlNCName(const WCHAR* ncNameChars,_In_ ULONG ncNameCharCount,_In_opt_ WS_ERROR* error)
HRESULT WINAPI webservices.WsWriteBytes(_In_ WS_XML_WRITER* writer,const void* bytes,_In_ ULONG byteCount,_In_opt_ WS_ERROR* error)
HRESULT WINAPI webservices.WsWriteChars(_In_ WS_XML_WRITER* writer,const WCHAR* chars,_In_ ULONG charCount,_In_opt_ WS_ERROR* error)
HRESULT WINAPI webservices.WsWriteEndAttribute(_In_ WS_XML_WRITER* writer,_In_opt_ WS_ERROR* error)
HRESULT WINAPI webservices.WsWriteEndCData(_In_ WS_XML_WRITER* writer,_In_opt_ WS_ERROR* error)
HRESULT WINAPI webservices.WsWriteEndElement(_In_ WS_XML_WRITER* writer,_In_opt_ WS_ERROR* error)
HRESULT WINAPI webservices.WsWriteEndStartElement(_In_ WS_XML_WRITER* writer,_In_opt_ WS_ERROR* error)
HRESULT WINAPI webservices.WsWriteEnvelopeEnd(_In_ WS_MESSAGE* message,_In_opt_ WS_ERROR* error)
HRESULT WINAPI webservices.WsWriteEnvelopeStart(_In_ WS_MESSAGE* message,_In_ WS_XML_WRITER* writer,_In_opt_ WS_MESSAGE_DONE_CALLBACK doneCallback,_In_opt_ void* doneCallbackState,_In_opt_ WS_ERROR* error)
HRESULT WINAPI webservices.WsWriteStartCData(_In_ WS_XML_WRITER* writer,_In_opt_ WS_ERROR* error)
HRESULT WINAPI webservices.WsWriteValue(_In_ WS_XML_WRITER* writer,_In_ WS_VALUE_TYPE valueType,const void* value,_In_ ULONG valueSize,_In_opt_ WS_ERROR* error)
HRESULT WINAPI webservices.WsWriteXmlBuffer(_In_ WS_XML_WRITER* writer,_In_ WS_XML_BUFFER* xmlBuffer,_In_opt_ WS_ERROR* error)
HRESULT WINAPI websocket.WebSocketGetAction(_In_ WEB_SOCKET_HANDLE hWebSocket,_In_ WEB_SOCKET_ACTION_QUEUE eActionQueue,_Inout_ WEB_SOCKET_BUFFER *pDataBuffers,_Inout_ ULONG *pulDataBufferCount,_Out_ WEB_SOCKET_ACTION *pAction,_Out_ WEB_SOCKET_BUFFER_TYPE *pBufferType,_Out_opt_ PVOID *pvApplicationContext,_Out_ PVOID *pvActionContext)
HRESULT WINAPI websocket.WebSocketSend(_In_ WEB_SOCKET_HANDLE hWebSocket,_In_ WEB_SOCKET_BUFFER_TYPE BufferType,_In_opt_ WEB_SOCKET_BUFFER *pBuffer,_In_opt_ PVOID Context)
HRESULT WINAPI wer.WerAddExcludedApplication(_In_ PCWSTR pwzExeName,_In_ BOOL bAllUsers)
HRESULT WINAPI wer.WerRemoveExcludedApplication(_In_ PCWSTR pwzExeName,_In_ BOOL bAllUsers)
HRESULT WINAPI wer.WerReportAddDump(_In_ HREPORT hReportHandle,_In_ HANDLE hProcess,_In_opt_ HANDLE hThread,_In_ WER_DUMP_TYPE dumpType,_In_opt_ PWER_EXCEPTION_INFORMATION pExceptionParam,_In_opt_ PWER_DUMP_CUSTOM_OPTIONS pDumpCustomOptions,_In_ DWORD dwFlags)
HRESULT WINAPI wer.WerReportAddFile(_In_ HREPORT hReportHandle,_In_ PCWSTR pwzPath,_In_ WER_FILE_TYPE repFileType,_In_ DWORD dwFileFlags)
HRESULT WINAPI wer.WerReportCloseHandle(_In_ HREPORT hReportHandle)
HRESULT WINAPI wer.WerReportCreate(_In_ PCWSTR pwzEventType,_In_ WER_REPORT_TYPE repType,_In_opt_ PWER_REPORT_INFORMATION pReportInformation,_Out_ HREPORT *phReportHandle)
HRESULT WINAPI wer.WerReportSetUIOption(_In_ HREPORT hReportHandle,_In_ WER_REPORT_UI repUITypeID,_In_ PCWSTR pwzValue)
HRESULT WINAPI wer.WerReportSubmit(_In_ HREPORT hReportHandle,_In_ WER_CONSENT consent,_In_ DWORD dwFlags,_Out_opt_ PWER_SUBMIT_RESULT pSubmitResult)
HRESULT WINAPI wer.WerStoreGetFirstReportKey(HREPORTSTORE store None,PCWSTR* reportKey None)
HRESULT WINAPI wer.WerStoreGetNextReportKey(HREPORTSTORE store None,PCWSTR* reportKey None)
HRESULT WINAPI wer.WerStoreOpen(REPORT_STORE_TYPES storeType None,HREPORTSTORE* store None)
HRESULT WINAPI wer.WerStoreQueryReportMetadataV2(HREPORTSTORE store None,PCWSTR reportKey None,WER_REPORT_METADATA_V2* metadata None)
HRESULT WINAPI winbio.WinBioAsyncEnumBiometricUnits(_In_ WINBIO_FRAMEWORK_HANDLE FrameworkHandle,_In_ WINBIO_BIOMETRIC_TYPE Factor)
HRESULT WINAPI winbio.WinBioAsyncEnumDatabases(_In_ WINBIO_FRAMEWORK_HANDLE FrameworkHandle,_In_ WINBIO_BIOMETRIC_TYPE Factor)
HRESULT WINAPI winbio.WinBioAsyncEnumServiceProviders(_In_ WINBIO_FRAMEWORK_HANDLE FrameworkHandle,_In_ WINBIO_BIOMETRIC_TYPE Factor)
HRESULT WINAPI winbio.WinBioAsyncMonitorFrameworkChanges(_In_ WINBIO_FRAMEWORK_HANDLE FrameworkHandle,_In_ WINBIO_FRAMEWORK_CHANGE_TYPE ChangeTypes)
HRESULT WINAPI winbio.WinBioAsyncOpenFramework(_In_ WINBIO_ASYNC_NOTIFICATION_METHOD NotificationMethod,_In_opt_ HWND TargetWindow,_In_opt_ UINT MessageCode,_In_opt_ PWINBIO_ASYNC_COMPLETION_CALLBACK CallbackRoutine,_In_opt_ PVOID UserData,_In_ BOOL AsynchronousOpen,_Out_ WINBIO_FRAMEWORK_HANDLE *FrameworkHandle)
HRESULT WINAPI winbio.WinBioAsyncOpenSession(_In_ WINBIO_BIOMETRIC_TYPE Factor,_In_ WINBIO_POOL_TYPE PoolType,_In_ WINBIO_SESSION_FLAGS Flags,_In_opt_ WINBIO_UNIT_ID *UnitArray,_In_opt_ SIZE_T UnitCount,_In_opt_ GUID *DatabaseId,_In_ WINBIO_ASYNC_NOTIFICATION_METHOD NotificationMethod,_In_opt_ HWND TargetWindow,_In_opt_ UINT MessageCode,_In_opt_ PWINBIO_ASYNC_COMPLETION_CALLBACK CallbackRoutine,_In_opt_ PVOID UserData,_In_ BOOL AsynchronousOpen,_Out_opt_ WINBIO_SESSION_HANDLE *SessionHandle)
HRESULT WINAPI winbio.WinBioCancel(_In_ WINBIO_SESSION_HANDLE SessionHandle)
HRESULT WINAPI winbio.WinBioCaptureSampleWithCallback(_In_ WINBIO_SESSION_HANDLE SessionHandle,_In_ WINBIO_BIR_PURPOSE Purpose,_In_ WINBIO_BIR_DATA_FLAGS Flags,_In_ PWINBIO_CAPTURE_CALLBACK CaptureCallback,_In_opt_ PVOID CaptureCallbackContext)
HRESULT WINAPI winbio.WinBioCloseFramework(_In_ WINBIO_FRAMEWORK_HANDLE FrameworkHandle)
HRESULT WINAPI winbio.WinBioCloseSession(_In_ WINBIO_SESSION_HANDLE SessionHandle)
HRESULT WINAPI winbio.WinBioDeleteTemplate(_In_ WINBIO_SESSION_HANDLE SessionHandle,_In_ WINBIO_UNIT_ID UnitId,_In_ WINBIO_IDENTITY *Identity,_In_ WINBIO_BIOMETRIC_SUBTYPE SubFactor)
HRESULT WINAPI winbio.WinBioEnrollBegin(_In_ WINBIO_SESSION_HANDLE SessionHandle,_In_ WINBIO_BIOMETRIC_SUBTYPE SubFactor,_In_ WINBIO_UNIT_ID UnitId)
HRESULT WINAPI winbio.WinBioEnrollCapture(_In_ WINBIO_SESSION_HANDLE SessionHandle,_Out_opt_ WINBIO_REJECT_DETAIL *RejectDetail)
HRESULT WINAPI winbio.WinBioEnrollCaptureWithCallback(_In_ WINBIO_SESSION_HANDLE SessionHandle,_In_ PWINBIO_ENROLL_CAPTURE_CALLBACK EnrollCallback,_In_opt_ PVOID EnrollCallbackContext)
HRESULT WINAPI winbio.WinBioEnrollCommit(_In_ WINBIO_SESSION_HANDLE SessionHandle,_Out_opt_ WINBIO_IDENTITY *Identity,_Out_opt_ BOOLEAN *IsNewTemplate)
HRESULT WINAPI winbio.WinBioEnrollDiscard(_In_ WINBIO_SESSION_HANDLE SessionHandle)
HRESULT WINAPI winbio.WinBioEnrollSelect(_In_ WINBIO_SESSION_HANDLE SessionHandle,_In_ ULONGLONG SelectorValue)
HRESULT WINAPI winbio.WinBioEnumBiometricUnits(_In_ WINBIO_BIOMETRIC_TYPE Factor,_Out_ WINBIO_UNIT_SCHEMA **UnitSchemaArray,_Out_ SIZE_T *UnitCount)
HRESULT WINAPI winbio.WinBioEnumDatabases(_In_ WINBIO_BIOMETRIC_TYPE Factor,_Out_ WINBIO_STORAGE_SCHEMA **StorageSchemaArray,_Out_ SIZE_T *StorageCount)
HRESULT WINAPI winbio.WinBioEnumServiceProviders(_In_ WINBIO_BIOMETRIC_TYPE Factor,_Out_ WINBIO_BSP_SCHEMA **BspSchemaArray,_Out_ SIZE_T *BspCount)
HRESULT WINAPI winbio.WinBioFree(_In_ PVOID Address)
HRESULT WINAPI winbio.WinBioGetCredentialState(_In_ WINBIO_IDENTITY Identity,_In_ WINBIO_CREDENTIAL_TYPE Type,_Out_ WINBIO_CREDENTIAL_STATE *CredentialState)
HRESULT WINAPI winbio.WinBioGetDomainLogonSetting(_Out_ BOOLEAN *Value,_Out_ PWINBIO_SETTING_SOURCE_TYPE Source)
HRESULT WINAPI winbio.WinBioGetEnabledSetting(_Out_ BOOLEAN *Value,_Out_ PWINBIO_SETTING_SOURCE_TYPE Source)
HRESULT WINAPI winbio.WinBioGetEnrolledFactors(_In_ WINBIO_IDENTITY *AccountOwner,_Out_ WINBIO_BIOMETRIC_TYPE *EnrolledFactors)
HRESULT WINAPI winbio.WinBioGetLogonSetting(_Out_ BOOLEAN *Value,_Out_ PWINBIO_SETTING_SOURCE_TYPE Source)
HRESULT WINAPI winbio.WinBioIdentify(_In_ WINBIO_SESSION_HANDLE SessionHandle,_Out_opt_ WINBIO_UNIT_ID *UnitId,_Out_opt_ WINBIO_IDENTITY *Identity,_Out_opt_ WINBIO_BIOMETRIC_SUBTYPE *SubFactor,_Out_opt_ WINBIO_REJECT_DETAIL *RejectDetail)
HRESULT WINAPI winbio.WinBioIdentifyWithCallback(_In_ WINBIO_SESSION_HANDLE SessionHandle,_In_ PWINBIO_IDENTIFY_CALLBACK *IdentifyCallback,_In_opt_ PVOID IdentifyCallbackContext)
HRESULT WINAPI winbio.WinBioLocateSensor(_In_ WINBIO_SESSION_HANDLE SessionHandle,_Out_opt_ WINBIO_UNIT_ID *UnitId)
HRESULT WINAPI winbio.WinBioLocateSensorWithCallback(_In_ WINBIO_SESSION_HANDLE SessionHandle,_In_ PWINBIO_LOCATE_SENSOR_CALLBACK LocateCallback,_In_opt_ PVOID LocateCallbackContext)
HRESULT WINAPI winbio.WinBioLockUnit(_In_ WINBIO_SESSION_HANDLE SessionHandle,_In_ WINBIO_UNIT_ID UnitId)
HRESULT WINAPI winbio.WinBioLogonIdentifiedUser(_In_ WINBIO_SESSION_HANDLE SessionHandle)
HRESULT WINAPI winbio.WinBioMonitorPresence(_In_ WINBIO_SESSION_HANDLE SessionHandle,_In_ WINBIO_UNIT_ID UnitId)
HRESULT WINAPI winbio.WinBioOpenSession(_In_ WINBIO_BIOMETRIC_TYPE Factor,_In_ WINBIO_POOL_TYPE PoolType,_In_ WINBIO_SESSION_FLAGS Flags,_In_ WINBIO_UNIT_ID *UnitArray,_In_ SIZE_T UnitCount,_In_ GUID *DatabaseId,_Out_ WINBIO_SESSION_HANDLE *SessionHandle)
HRESULT WINAPI winbio.WinBioRegisterEventMonitor(_In_ WINBIO_SESSION_HANDLE SessionHandle,_In_ WINBIO_EVENT_TYPE EventMask,_In_ PWINBIO_EVENT_CALLBACK EventCallback,_In_ PVOID EventCallbackContext)
HRESULT WINAPI winbio.WinBioRemoveCredential(_In_ WINBIO_IDENTITY Identity,_In_ WINBIO_CREDENTIAL_TYPE Type)
HRESULT WINAPI winbio.WinBioSetCredential(_In_ WINBIO_CREDENTIAL_TYPE Type,_In_ PUCHAR Credential,_In_ SIZE_T CredentialSize,_In_ WINBIO_CREDENTIAL_FORMAT Format)
HRESULT WINAPI winbio.WinBioSetProperty(_In_ WINBIO_SESSION_HANDLE SessionHandle,_In_ WINBIO_PROPERTY_TYPE PropertyType,_In_ WINBIO_PROPERTY_ID PropertyId,_In_opt_ WINBIO_UNIT_ID UnitId,_In_opt_ WINBIO_IDENTITY *Identity,_In_opt_ WINBIO_BIOMETRIC_SUBTYPE SubFactor,_In_ PVOID PropertyBuffer,_In_ SIZE_T PropertyBufferSize)
HRESULT WINAPI winbio.WinBioUnregisterEventMonitor(_In_ WINBIO_SESSION_HANDLE SessionHandle)
HRESULT WINAPI winbio.WinBioVerify(_In_ WINBIO_SESSION_HANDLE SessionHandle,_In_ WINBIO_IDENTITY *Identity,_In_ WINBIO_BIOMETRIC_SUBTYPE SubFactor,_Out_opt_ WINBIO_UNIT_ID *UnitId,_Out_opt_ BOOLEAN *Match,_Out_opt_ WINBIO_REJECT_DETAIL *RejectDetail)
HRESULT WINAPI winbio.WinBioVerifyWithCallback(_In_ WINBIO_SESSION_HANDLE SessionHandle,_In_ WINBIO_IDENTITY *Identity,_In_ WINBIO_BIOMETRIC_SUBTYPE SubFactor,_In_ PWINBIO_VERIFY_CALLBACK VerifyCallback,_In_opt_ PVOID VerifyCallbackContext)
HRESULT WINAPI winbio.WinBioWait(_In_ WINBIO_SESSION_HANDLE SessionHandle)
HRESULT WINAPI windowscodecsext.WICCreateColorTransform_Proxy(_Out_ **ppIColorTransform None)
HRESULT WINAPI windows.networking.SetSocketMediaStreamingMode(BOOL value None)
HRESULT WINAPI wintrust.WTHelperCertCheckValidSignature(CRYPT_PROVIDER_DATA *pProvData None)
HRESULT WINAPI wofutil.WofEnumEntries(_In_ PCWSTR VolumeName,_In_ ULONG Provider,_In_ WofEnumEntryProc EnumProc,_In_opt_ PVOID UserData)
HRESULT WINAPI wofutil.WofFileEnumFiles(_In_ PCWSTR VolumeName,_In_ ULONG Algorithm,_In_ WofEnumFilesProc EnumProc,_In_opt_ PVOID UserData)
HRESULT WINAPI wofutil.WofGetDriverVersion(_In_ HANDLE FileOrVolumeHandle,_In_ ULONG Provider,_Out_ PULONG WofVersion)
HRESULT WINAPI wofutil.WofIsExternalFile(_In_ LPCWSTR FilePath,_Out_opt_ PBOOL IsExternalFile,_Out_opt_ PULONG Provider,_Out_opt_ PVOID ExternalFileInfo,_Inout_opt_ PULONG BufferLength)
HRESULT WINAPI wofutil.WofSetFileDataLocation(_In_ HANDLE FileHandle,_In_ ULONG Provider,_In_ PVOID ExternalFileInfo,_In_ ULONG Length)
HRESULT WINAPI wofutil.WofWimAddEntry(_In_ PCWSTR VolumeName,_In_ PCWSTR WimPath,_In_ DWORD WimType,_In_ DWORD WimIndex,_Out_ PLARGE_INTEGER DataSourceId)
HRESULT WINAPI wofutil.WofWimEnumFiles(_In_ PCWSTR VolumeName,_In_ LARGE_INTEGER DataSourceId,_In_ WofEnumFilesProc EnumProc,_In_opt_ PVOID UserData)
HRESULT WINAPI wofutil.WofWimRemoveEntry(_In_ PCWSTR VolumeName,_In_ LARGE_INTEGER DataSourceId)
HRESULT WINAPI wofutil.WofWimSuspendEntry(_In_ PCWSTR VolumeName,_In_ LARGE_INTEGER DataSourceId)
HRESULT WINAPI wofutil.WofWimUpdateEntry(_In_ PCWSTR VolumeName,_In_ LARGE_INTEGER DataSourceId,_In_ PCWSTR NewWimPath)
HRESULT WINAPI wsbonline.DeregisterOnlineBackupFromWindowsServerBackup(_In_ GUID guidSnapinId)
HRESULT WINAPI wsbonline.RegisterOnlineBackupWithWindowsServerBackup(_In_ WSB_OB_REGISTRATION_INFO *pOBRegistrationInfo)
HRESULT WINAPI wsbonline.UpdateOBStatusInWindowsServerBackup(_In_ WSB_OB_STATUS_INFO *pOBRegistrationInfo)
HRESULT WINAPI wsdapi.WSDCreateDeviceHost2(_In_ LPCWSTR pszLocalId,_In_ IWSDXMLContext *pContext,_In_ WSD_CONFIG_PARAM *pConfigParams,_In_ DWORD dwConfigParamCount,_Out_ IWSDDeviceHost **ppDeviceHost)
HRESULT WINAPI wsdapi.WSDCreateDeviceProxy2(_In_ LPCWSTR pszDeviceId,_In_ LPCWSTR pszLocalId,_In_ IWSDXMLContext *pContext,_In_ WSD_CONFIG_PARAM *pConfigParams,_In_ DWORD dwConfigParamCount,_Out_ IWSDDeviceProxy **ppDeviceProxy)
HRESULT WINAPI wsdapi.WSDCreateDiscoveryProvider2(_In_ IWSDXMLContext *pContext,_In_ WSD_CONFIG_PARAM *pConfigParams,_In_ DWORD dwConfigParamCount,_Out_ IWSDiscoveryProvider **ppProvider)
HRESULT WINAPI wsdapi.WSDCreateDiscoveryPublisher2(_In_ IWSDXMLContext *pContext,_In_ WSD_CONFIG_PARAM *pConfigParams,_In_ DWORD dwConfigParamCount,_Out_ IWSDiscoveryPublisher **ppPublisher)
HRESULT WINAPI wsdapi.WSDCreateUdpAddress(_In_ IWSDUdpAddress **ppAddress)
HRESULT WINAPI wsdapi.WSDCreateUdpMessageParameters(_Out_ IWSDUdpMessageParameters **ppTxParams)
HRESULT WINAPI wsdapi.WSDGetConfigurationOption(DWORD dwOption None,_Out_ LPVOID pVoid,DWORD cbOutBuffer None)
HRESULT WINAPI wsdapi.WSDSetConfigurationOption(DWORD dwOption None,_In_ LPVOID pVoid,DWORD cbInBuffer None)
HRESULT WINAPI wsdapi.WSDUriDecode(_In_ LPCWSTR source,_In_ DWORD cchSource,_Out_ LPWSTR *destOut,_Out_opt_ DWORD *cchDestOut)
HRESULT WINAPI wsdapi.WSDUriEncode(_In_ LPCWSTR source,_In_ DWORD cchSource,_Out_ LPWSTR *destOut,_Out_opt_ DWORD *cchDestOut)
HRESULT WINAPI wsdapi.WSDXMLCleanupElement(_In_ WSDXML_ELEMENT *pAny)
HRESULT WINAPI wsdapi.WSDXMLCreateContext(_Out_ IWSDXMLContext **ppContext)
HRESULT WINAPI wsdapi.WSDXMLGetNameFromBuiltinNamespace(LPCWSTR pszNamespace None,LPCWSTR pszName None,WSDXML_NAME **ppName None)
HRESULT WINOLEAPI combase.CoCreateInstanceFromApp(_In_ REFCLSID rclsid,_In_opt_ IUnknown *punkOuter,_In_ DWORD dwClsCtx,_In_opt_ void *reserved,_In_ DWORD dwCount,_Inout_ MULTI_QI *pResults)
HRESULT WINOLEAPI combase.CoDecodeProxy(_In_ DWORD dwClientPid,_In_ UINT64 ui64ProxyAddress,_Out_ ServerInformation pServerInformation)
HRESULT WINOLEAPI combase.CoRegisterChannelHook(_In_ REFGUID ExtensionUuid,_In_ IChannelHook *pChannelHook)
HRESULT WINOLEAPI combase.CoWaitForMultipleObjects(_In_ DWORD dwFlags,_In_ DWORD dwTimeout,_In_ ULONG cHandles,_In_ LPHANDLE pHandles,_Out_ LPDWORD lpdwIndex)
HRESULT WINOLEAPI None.CoSetMessageDispatcher(_In_opt_ *pMessageDispatcher None)
HRESULT WINOLEAPI ole32.CoAllowUnmarshalerCLSID(_In_ REFCLSID clsid)
HRGN None gdi32.CreateEllipticRgn(_In_ int nLeftRect,_In_ int nTopRect,_In_ int nRightRect,_In_ int nBottomRect)
HRGN None gdi32.CreateRectRgn(_In_ int nLeftRect,_In_ int nTopRect,_In_ int nRightRect,_In_ int nBottomRect)
HRGN None gdi32.CreateRoundRectRgn(_In_ int nLeftRect,_In_ int nTopRect,_In_ int nRightRect,_In_ int nBottomRect,_In_ int nWidthEllipse,_In_ int nHeightEllipse)
HRGN None gdi32.PathToRegion(_In_ HDC hdc)
HRSRC WINAPI kernel32.FindResourceA(_In_opt_ HMODULE hModule,_In_ LPCTSTR lpName,_In_ LPCTSTR lpType)
HRSRC WINAPI kernel32.FindResourceExA(_In_opt_ HMODULE hModule,_In_ LPCTSTR lpType,_In_ LPCTSTR lpName,_In_ WORD wLanguage)
HRSRC WINAPI kernel32.FindResourceEx(_In_opt_ HMODULE hModule,_In_ LPCTSTR lpType,_In_ LPCTSTR lpName,_In_ WORD wLanguage)
HRSRC WINAPI kernel32.FindResourceExW(_In_opt_ HMODULE hModule,_In_ LPCTSTR lpType,_In_ LPCTSTR lpName,_In_ WORD wLanguage)
HRSRC WINAPI kernel32.FindResource(_In_opt_ HMODULE hModule,_In_ LPCTSTR lpName,_In_ LPCTSTR lpType)
HRSRC WINAPI kernel32.FindResourceW(_In_opt_ HMODULE hModule,_In_ LPCTSTR lpName,_In_ LPCTSTR lpType)
HSPFILELOG None setupapi.SetupInitializeFileLogA(_In_ PCTSTR LogFileName,_In_ DWORD Flags)
HSPFILELOG None setupapi.SetupInitializeFileLog(_In_ PCTSTR LogFileName,_In_ DWORD Flags)
HSPFILELOG None setupapi.SetupInitializeFileLogW(_In_ PCTSTR LogFileName,_In_ DWORD Flags)
HSPFILEQ None setupapi.SetupOpenFileQueue(void None None)
HSURF None None.EngCreateDeviceSurface(_In_ DHSURF dhsurf,_In_ SIZEL sizl,ULONG iFormatCompat None)
HTHEME None uxtheme.GetWindowTheme(_In_ HWND hWnd)
HTHEME None uxtheme.OpenThemeDataEx(_In_ HWND hwnd,_In_ LPCWSTR pszClassIdList,_In_ DWORD dwFlags)
HTHEME None uxtheme.OpenThemeData(_In_ HWND hwnd,_In_ LPCWSTR pszClassList)
HTHEME WINAPI user32.OpenThemeDataForDpi(HWDN hwnd None,PCWSTR pszClassIdList None,UINT dpi None)
HtmlTextWriter None None.CreateTextWriter(TextWriter writer None)
HTREEITEM None None.TreeView_GetChild(HWND hwndTV None,HTREEITEM hitem None)
HTREEITEM None None.TreeView_GetDropHilight(HWND hwndTV None)
HTREEITEM None None.TreeView_GetFirstVisible(HWND hwndTV None)
HTREEITEM None None.TreeView_GetLastVisible(HWND hwndTV None)
HTREEITEM None None.TreeView_GetNextItem(HWND hwndTV None,HTREEITEM hitem None,UINT flag None)
HTREEITEM None None.TreeView_GetNextSelected(HWND hwnd None,HTREEITEM *hitem None)
HTREEITEM None None.TreeView_GetNextSibling(HWND hwndTV None,HTREEITEM hitem None)
HTREEITEM None None.TreeView_GetNextVisible(HWND hwndTV None,HTREEITEM hitem None)
HTREEITEM None None.TreeView_GetParent(HWND hwndTV None,HTREEITEM hitem None)
HTREEITEM None None.TreeView_GetPrevSibling(HWND hwndTV None,HTREEITEM hitem None)
HTREEITEM None None.TreeView_GetPrevVisible(HWND hwndTV None,HTREEITEM hitem None)
HTREEITEM None None.TreeView_GetRoot(HWND hwndTV None)
HTREEITEM None None.TreeView_GetSelection(HWND hwndTV None)
HTREEITEM None None.TreeView_HitTest(HWND hwndTV None,LPTVHITTESTINFO lpht None)
HTREEITEM None None.TreeView_InsertItem(HWND hwndTV None,LPTVINSERTSTRUCT lpis None)
HTREEITEM None None.TreeView_MapAccIDToHTREEITEM(HWND hwnd None,UINT id None)
HWCT WINAPI advapi32.OpenThreadWaitChainSession(_In_ DWORD Flags,_In_opt_ PWAITCHAINCALLBACK callback)
HWINEVENTHOOK WINAPI user32.SetWinEventHook(_In_ UINT eventMin,_In_ UINT eventMax,_In_ HMODULE hmodWinEventProc,_In_ WINEVENTPROC lpfnWinEventProc,_In_ DWORD idProcess,_In_ DWORD idThread,_In_ UINT dwflags)
HWINSTA WINAPI user32.CreateWindowStationA(_In_opt_ LPCTSTR lpwinsta,DWORD dwFlags None,_In_ ACCESS_MASK dwDesiredAccess,_In_opt_ LPSECURITY_ATTRIBUTES lpsa)
HWINSTA WINAPI user32.CreateWindowStation(_In_opt_ LPCTSTR lpwinsta,DWORD dwFlags None,_In_ ACCESS_MASK dwDesiredAccess,_In_opt_ LPSECURITY_ATTRIBUTES lpsa)
HWINSTA WINAPI user32.CreateWindowStationW(_In_opt_ LPCTSTR lpwinsta,DWORD dwFlags None,_In_ ACCESS_MASK dwDesiredAccess,_In_opt_ LPSECURITY_ATTRIBUTES lpsa)
HWINSTA WINAPI user32.GetProcessWindowStation(void None None)
HWINSTA WINAPI user32.OpenWindowStationA(_In_ LPTSTR lpszWinSta,_In_ BOOL fInherit,_In_ ACCESS_MASK dwDesiredAccess)
HWINSTA WINAPI user32.OpenWindowStation(_In_ LPTSTR lpszWinSta,_In_ BOOL fInherit,_In_ ACCESS_MASK dwDesiredAccess)
HWINSTA WINAPI user32.OpenWindowStationW(_In_ LPTSTR lpszWinSta,_In_ BOOL fInherit,_In_ ACCESS_MASK dwDesiredAccess)
HWND None imm32.ImmGetDefaultIMEWnd(_In_ HWND hWnd)
HWND None msvfw32.MCIWndCreate(HWND hwndParent None,HINSTANCE hInstance None,DWORD dwStyle None,LPCTSTR szFile None)
HWND None None.Animate_Create(HWND hwndP None,UINT id None,DWORD dwStyle None,HINSTANCE hInstance None)
HWND None None.DateTime_GetMonthCal(HWND hwndDP None)
HWND None None.GetContractDelegateWindow(_In_ HWND hwndSource)
HWND None None.ListView_EditLabel(HWND hwnd None,int iItem None)
HWND None None.ListView_GetEditControl(HWND hwnd None)
HWND None None.ListView_GetHeader(HWND hwndLV None)
HWND None None.ListView_GetToolTips(HWND hwnd None)
HWND None None.ListView_SetToolTips(HWND hwnd None,HWND hwndToolTip None)
HWND None None.MCIWndCreate(HWND hwndParent None,HINSTANCE hInstance None,DWORD dwStyle None,LPCTSTR szFile None)
HWND None None.PropSheet_GetCurrentPageHwnd(HWND hDlg None)
HWND None None.PropSheet_GetTabControl(HWND hPropSheetDlg None)
HWND None None.PropSheet_IndexToHwnd(HWND hPropSheetDlg None,int iPageIndex None)
HWND None None.TabCtrl_GetToolTips(HWND hwnd None)
HWND None None.TreeView_EditLabel(HWND hwndTV None,HTREEITEM hitem None)
HWND None None.TreeView_GetEditControl(HWND hwndTV None)
HWND None None.TreeView_GetToolTips(HWND hwndTV None)
HWND None None.TreeView_SetToolTips(HWND hwndTV None,HWND hwndTooltip None)
HWND None user32.WindowFromDC(_In_ HDC hDC)
HWND WINAPI comdlg32.FindTextA(_In_ LPFINDREPLACE lpfr)
HWND WINAPI comdlg32.FindText(_In_ LPFINDREPLACE lpfr)
HWND WINAPI comdlg32.FindTextW(_In_ LPFINDREPLACE lpfr)
HWND WINAPI comdlg32.ReplaceTextA(_Inout_ LPFINDREPLACE lpfr)
HWND WINAPI comdlg32.ReplaceText(_Inout_ LPFINDREPLACE lpfr)
HWND WINAPI comdlg32.ReplaceTextW(_Inout_ LPFINDREPLACE lpfr)
HWND WINAPI None.CreateWindowA(_In_opt_ LPCTSTR lpClassName,_In_opt_ LPCTSTR lpWindowName,_In_ DWORD dwStyle,_In_ int x,_In_ int y,_In_ int nWidth,_In_ int nHeight,_In_opt_ HWND hWndParent,_In_opt_ HMENU hMenu,_In_opt_ HINSTANCE hInstance,_In_opt_ LPVOID lpParam)
HWND WINAPI None.CreateWindow(_In_opt_ LPCTSTR lpClassName,_In_opt_ LPCTSTR lpWindowName,_In_ DWORD dwStyle,_In_ int x,_In_ int y,_In_ int nWidth,_In_ int nHeight,_In_opt_ HWND hWndParent,_In_opt_ HMENU hMenu,_In_opt_ HINSTANCE hInstance,_In_opt_ LPVOID lpParam)
HWND WINAPI None.CreateWindowW(_In_opt_ LPCTSTR lpClassName,_In_opt_ LPCTSTR lpWindowName,_In_ DWORD dwStyle,_In_ int x,_In_ int y,_In_ int nWidth,_In_ int nHeight,_In_opt_ HWND hWndParent,_In_opt_ HMENU hMenu,_In_opt_ HINSTANCE hInstance,_In_opt_ LPVOID lpParam)
HWND WINAPI None.GetNextWindow(_In_ HWND hWnd,_In_ UINT wCmd)
HWND WINAPI user32.ChildWindowFromPointEx(_In_ HWND hwndParent,_In_ POINT pt,_In_ UINT uFlags)
HWND WINAPI user32.ChildWindowFromPoint(_In_ HWND hWndParent,_In_ POINT Point)
HWND WINAPI user32.CreateDialogA(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc)
HWND WINAPI user32.CreateDialogIndirectA(_In_opt_ HINSTANCE hInstance,_In_ LPCDLGTEMPLATE lpTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc)
HWND WINAPI user32.CreateDialogIndirect(_In_opt_ HINSTANCE hInstance,_In_ LPCDLGTEMPLATE lpTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc)
HWND WINAPI user32.CreateDialogIndirectParamA(_In_opt_ HINSTANCE hInstance,_In_ LPCDLGTEMPLATE lpTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc,_In_ LPARAM lParamInit)
HWND WINAPI user32.CreateDialogIndirectParam(_In_opt_ HINSTANCE hInstance,_In_ LPCDLGTEMPLATE lpTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc,_In_ LPARAM lParamInit)
HWND WINAPI user32.CreateDialogIndirectParamW(_In_opt_ HINSTANCE hInstance,_In_ LPCDLGTEMPLATE lpTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc,_In_ LPARAM lParamInit)
HWND WINAPI user32.CreateDialogIndirectW(_In_opt_ HINSTANCE hInstance,_In_ LPCDLGTEMPLATE lpTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc)
HWND WINAPI user32.CreateDialog(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc)
HWND WINAPI user32.CreateDialogParamA(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpTemplateName,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc,_In_ LPARAM dwInitParam)
HWND WINAPI user32.CreateDialogParam(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpTemplateName,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc,_In_ LPARAM dwInitParam)
HWND WINAPI user32.CreateDialogParamW(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpTemplateName,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc,_In_ LPARAM dwInitParam)
HWND WINAPI user32.CreateDialogW(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc)
HWND WINAPI user32.CreateWindowExA(_In_ DWORD dwExStyle,_In_opt_ LPCTSTR lpClassName,_In_opt_ LPCTSTR lpWindowName,_In_ DWORD dwStyle,_In_ int x,_In_ int y,_In_ int nWidth,_In_ int nHeight,_In_opt_ HWND hWndParent,_In_opt_ HMENU hMenu,_In_opt_ HINSTANCE hInstance,_In_opt_ LPVOID lpParam)
HWND WINAPI user32.CreateWindowEx(_In_ DWORD dwExStyle,_In_opt_ LPCTSTR lpClassName,_In_opt_ LPCTSTR lpWindowName,_In_ DWORD dwStyle,_In_ int x,_In_ int y,_In_ int nWidth,_In_ int nHeight,_In_opt_ HWND hWndParent,_In_opt_ HMENU hMenu,_In_opt_ HINSTANCE hInstance,_In_opt_ LPVOID lpParam)
HWND WINAPI user32.CreateWindowExW(_In_ DWORD dwExStyle,_In_opt_ LPCTSTR lpClassName,_In_opt_ LPCTSTR lpWindowName,_In_ DWORD dwStyle,_In_ int x,_In_ int y,_In_ int nWidth,_In_ int nHeight,_In_opt_ HWND hWndParent,_In_opt_ HMENU hMenu,_In_opt_ HINSTANCE hInstance,_In_opt_ LPVOID lpParam)
HWND WINAPI user32.FindWindowA(_In_opt_ LPCTSTR lpClassName,_In_opt_ LPCTSTR lpWindowName)
HWND WINAPI user32.FindWindowExA(_In_opt_ HWND hwndParent,_In_opt_ HWND hwndChildAfter,_In_opt_ LPCTSTR lpszClass,_In_opt_ LPCTSTR lpszWindow)
HWND WINAPI user32.FindWindowEx(_In_opt_ HWND hwndParent,_In_opt_ HWND hwndChildAfter,_In_opt_ LPCTSTR lpszClass,_In_opt_ LPCTSTR lpszWindow)
HWND WINAPI user32.FindWindowExW(_In_opt_ HWND hwndParent,_In_opt_ HWND hwndChildAfter,_In_opt_ LPCTSTR lpszClass,_In_opt_ LPCTSTR lpszWindow)
HWND WINAPI user32.FindWindow(_In_opt_ LPCTSTR lpClassName,_In_opt_ LPCTSTR lpWindowName)
HWND WINAPI user32.FindWindowW(_In_opt_ LPCTSTR lpClassName,_In_opt_ LPCTSTR lpWindowName)
HWND WINAPI user32.GetActiveWindow(void None None)
HWND WINAPI user32.GetAncestor(_In_ HWND hwnd,_In_ UINT gaFlags)
HWND WINAPI user32.GetCapture(void None None)
HWND WINAPI user32.GetDesktopWindow(void None None)
HWND WINAPI user32.GetDlgItem(_In_opt_ HWND hDlg,_In_ int nIDDlgItem)
HWND WINAPI user32.GetFocus(void None None)
HWND WINAPI user32.GetForegroundWindow(void None None)
HWND WINAPI user32.GetLastActivePopup(_In_ HWND hWnd)
HWND WINAPI user32.GetNextDlgGroupItem(_In_ HWND hDlg,_In_opt_ HWND hCtl,_In_ BOOL bPrevious)
HWND WINAPI user32.GetNextDlgTabItem(_In_ HWND hDlg,_In_opt_ HWND hCtl,_In_ BOOL bPrevious)
HWND WINAPI user32.GetParent(_In_ HWND hWnd)
HWND WINAPI user32.GetShellWindow(void None None)
HWND WINAPI user32.GetTopWindow(_In_opt_ HWND hWnd)
HWND WINAPI user32.GetWindow(_In_ HWND hWnd,_In_ UINT uCmd)
HWND WINAPI user32.RealChildWindowFromPoint(_In_ HWND hwndParent,_In_ POINT ptParentClientCoords)
HWND WINAPI user32.SetActiveWindow(_In_ HWND hWnd)
HWND WINAPI user32.SetCapture(_In_ HWND hWnd)
HWND WINAPI user32.SetClipboardViewer(_In_ HWND hWndNewViewer)
HWND WINAPI user32.SetFocus(_In_opt_ HWND hWnd)
HWND WINAPI user32.SetParent(_In_ HWND hWndChild,_In_opt_ HWND hWndNewParent)
HWND WINAPI user32.WindowFromPhysicalPoint(_In_ POINT Point)
HWND WINAPI user32.WindowFromPoint(_In_ POINT Point)
IAsyncResult None None.BeginClose(AsyncCallback callback None,Object state None)
IAsyncResult None None.BeginClose(TimeSpan timeout None,AsyncCallback callback None,Object state None)
IDataReader None None.ExecuteReader(CommandBehavior behavior None)
If None cimwin32.Len(dtmMonth None None)
If None None.TypeOf(arg None None)
IFsrmAction None None.CreateAction(_FsrmActionType ActionType None)
IFsrmDerivedObjectsResult None None.CommitAndUpdateDerived(_FsrmCommitOptions commitOptions None,_FsrmTemplateApplyOptions applyOptions None)
IFsrmPipelineModuleDefinition None None.CreateModuleDefinition(_FsrmPipelineModuleType ModuleType None)
IFsrmRule None None.CreateRule(_FsrmRuleType RuleType None)
IHierarchyData None None.GetHierarchyData(Object enumeratedItem None)
IImmutableListT None None.Replace(T oldValue None,T newValue None,IEqualityComparerT equalityComparer None)
Image Color None.Matching(ICM None None)
inline BOOL None.IsRandomAccessPoint(IMFSample *pSample None)
inline UINT None.D3D11CalcSubresource(UINT MipSlice None,UINT ArraySlice None,UINT MipLevels None)
inline XMVECTOR None.XMQuaternionBlend(FXMVECTOR Q0 None,FXMVECTOR Q1 None,FXMVECTOR Q2 None,float w1 None,float w2 None)
inline XMVECTOR None.XMVector2NormalizeRobust(FXMVECTOR V None)
inline XMVECTOR None.XMVector3NormalizeRobust(FXMVECTOR V None)
inline XMVECTOR None.XMVector4NormalizeRobust(FXMVECTOR V None)
in None None.f(R ^ r)
INSTALLSTATE None msi.MsiGetComponentPathA(_In_ LPCTSTR szProduct,_In_ LPCTSTR szComponent,_Out_ LPTSTR lpPathBuf,_Inout_ DWORD *pcchBuf)
INSTALLSTATE None msi.MsiGetComponentPathExA(_In_ LPCTSTR szProductCode,_In_ LPCTSTR szComponentCode,_In_opt_ LPCTSTR szUserSid,_In_opt_ MSIINSTALLCONTEXT dwContext,_Out_opt_ LPTSTR szPathBuf,_Inout_opt_ LPDWORD pcchBuf)
INSTALLSTATE None msi.MsiGetComponentPathEx(_In_ LPCTSTR szProductCode,_In_ LPCTSTR szComponentCode,_In_opt_ LPCTSTR szUserSid,_In_opt_ MSIINSTALLCONTEXT dwContext,_Out_opt_ LPTSTR szPathBuf,_Inout_opt_ LPDWORD pcchBuf)
INSTALLSTATE None msi.MsiGetComponentPathExW(_In_ LPCTSTR szProductCode,_In_ LPCTSTR szComponentCode,_In_opt_ LPCTSTR szUserSid,_In_opt_ MSIINSTALLCONTEXT dwContext,_Out_opt_ LPTSTR szPathBuf,_Inout_opt_ LPDWORD pcchBuf)
INSTALLSTATE None msi.MsiGetComponentPath(_In_ LPCTSTR szProduct,_In_ LPCTSTR szComponent,_Out_ LPTSTR lpPathBuf,_Inout_ DWORD *pcchBuf)
INSTALLSTATE None msi.MsiGetComponentPathW(_In_ LPCTSTR szProduct,_In_ LPCTSTR szComponent,_Out_ LPTSTR lpPathBuf,_Inout_ DWORD *pcchBuf)
INSTALLSTATE None msi.MsiLocateComponentA(_In_ LPCTSTR szComponent,_Out_ LPTSTR lpPathBuf,_Inout_ DWORD *pcchBuf)
INSTALLSTATE None msi.MsiLocateComponent(_In_ LPCTSTR szComponent,_Out_ LPTSTR lpPathBuf,_Inout_ DWORD *pcchBuf)
INSTALLSTATE None msi.MsiLocateComponentW(_In_ LPCTSTR szComponent,_Out_ LPTSTR lpPathBuf,_Inout_ DWORD *pcchBuf)
INSTALLSTATE None msi.MsiQueryFeatureStateA(_In_ LPCTSTR szProduct,_In_ LPCTSTR szFeature)
INSTALLSTATE None msi.MsiQueryFeatureState(_In_ LPCTSTR szProduct,_In_ LPCTSTR szFeature)
INSTALLSTATE None msi.MsiQueryFeatureStateW(_In_ LPCTSTR szProduct,_In_ LPCTSTR szFeature)
INSTALLSTATE None msi.MsiQueryProductStateA(_In_ LPCTSTR szProduct)
INSTALLSTATE None msi.MsiQueryProductState(_In_ LPCTSTR szProduct)
INSTALLSTATE None msi.MsiQueryProductStateW(_In_ LPCTSTR szProduct)
INSTALLSTATE None msi.MsiUseFeatureA(_In_ LPCTSTR szProduct,_In_ LPCTSTR szFeature)
INSTALLSTATE None msi.MsiUseFeatureExA(_In_ LPCTSTR szProduct,_In_ LPCTSTR szFeature,_In_ DWORD dwInstallMode,_In_ DWORD dwReserved)
INSTALLSTATE None msi.MsiUseFeatureEx(_In_ LPCTSTR szProduct,_In_ LPCTSTR szFeature,_In_ DWORD dwInstallMode,_In_ DWORD dwReserved)
INSTALLSTATE None msi.MsiUseFeatureExW(_In_ LPCTSTR szProduct,_In_ LPCTSTR szFeature,_In_ DWORD dwInstallMode,_In_ DWORD dwReserved)
INSTALLSTATE None msi.MsiUseFeature(_In_ LPCTSTR szProduct,_In_ LPCTSTR szFeature)
INSTALLSTATE None msi.MsiUseFeatureW(_In_ LPCTSTR szProduct,_In_ LPCTSTR szFeature)
INSTALLUI_HANDLER None msi.MsiSetExternalUIA(_In_ INSTALLUI_HANDLER puiHandler,_In_ DWORD dwMessageFilter,_In_ LPVOID pvContext)
INSTALLUI_HANDLER None msi.MsiSetExternalUI(_In_ INSTALLUI_HANDLER puiHandler,_In_ DWORD dwMessageFilter,_In_ LPVOID pvContext)
INSTALLUI_HANDLER None msi.MsiSetExternalUIW(_In_ INSTALLUI_HANDLER puiHandler,_In_ DWORD dwMessageFilter,_In_ LPVOID pvContext)
INSTALLUILEVEL None msi.MsiSetInternalUI(_In_ INSTALLUILEVEL dwUILevel,_Inout_ HWND *phWnd)
int APIENTRY None._tWinMain(HINSTANCE None None,HINSTANCE None None,LPTSTR None None,int None None)
int CALLBACK None.CompareFunc(LPARAM lParam1 None,LPARAM lParam2 None,LPARAM lParamSort None)
INT CALLBACK None.EmbeddedUIHandler(UINT uiMessageType None,MSIHANDLE hRecord None)
int CALLBACK None.EnumFontFamExProcA(const LOGFONT *lpelfe,const TEXTMETRIC *lpntme,DWORD FontType None,LPARAM lParam None)
int CALLBACK None.EnumFontFamExProc(const LOGFONT *lpelfe,const TEXTMETRIC *lpntme,DWORD FontType None,LPARAM lParam None)
int CALLBACK None.EnumFontFamExProcW(const LOGFONT *lpelfe,const TEXTMETRIC *lpntme,DWORD FontType None,LPARAM lParam None)
int CALLBACK None.EnumFontFamProcA(_In_ ENUMLOGFONT *lpelf,_In_ NEWTEXTMETRIC *lpntm,_In_ DWORD FontType,_In_ LPARAM lParam)
int CALLBACK None.EnumFontFamProc(_In_ ENUMLOGFONT *lpelf,_In_ NEWTEXTMETRIC *lpntm,_In_ DWORD FontType,_In_ LPARAM lParam)
int CALLBACK None.EnumFontFamProcW(_In_ ENUMLOGFONT *lpelf,_In_ NEWTEXTMETRIC *lpntm,_In_ DWORD FontType,_In_ LPARAM lParam)
int CALLBACK None.EnumObjectsProc(_In_ LPVOID lpLogObject,_In_ LPARAM lpData)
INT CALLBACK None.EnumRegisterWordProcA(_In_ LPCTSTR lpszReading,_In_ DWORD dwStyle,_In_ LPCTSTR lpszString,_In_ LPVOID lpData)
INT CALLBACK None.EnumRegisterWordProc(_In_ LPCTSTR lpszReading,_In_ DWORD dwStyle,_In_ LPCTSTR lpszString,_In_ LPVOID lpData)
INT CALLBACK None.EnumRegisterWordProcW(_In_ LPCTSTR lpszReading,_In_ DWORD dwStyle,_In_ LPCTSTR lpszString,_In_ LPVOID lpData)
INT CALLBACK None.INSTALLUI_HANDLERA(LPVOID pvContext None,UINT iMessageType None,LPCTSTR szMessage None)
INT CALLBACK None.InstalluiHandler(LPVOID pvContext None,UINT iMessageType None,LPCTSTR szMessage None)
INT CALLBACK None.InstalluiHandlerRecord(LPVOID pvContext None,UINT iMessageType None,MSIHANDLE hRecord None)
INT CALLBACK None.INSTALLUI_HANDLERW(LPVOID pvContext None,UINT iMessageType None,LPCTSTR szMessage None)
int CALLBACK None.PropSheetProc(HWND hwndDlg None,UINT uMsg None,LPARAM lParam None)
int CALLBACK None.RemoveContextHelpProc(HWND hwnd None,UINT message None,LPARAM lParam None)
int CALLBACK None.WinMain(_In_ HINSTANCE hInstance,_In_ HINSTANCE hPrevInstance,_In_ LPSTR lpCmdLine,_In_ int nCmdShow)
int __cdecl oledlg.OleUIPromptUserA(_In_ int nTemplate,_In_ HWND hwndParent,_In_ ... None)
int __cdecl oledlg.OleUIPromptUser(_In_ int nTemplate,_In_ HWND hwndParent,_In_ ... None)
int __cdecl oledlg.OleUIPromptUserW(_In_ int nTemplate,_In_ HWND hwndParent,_In_ ... None)
int __cdecl user32.wsprintfA(_Out_ LPTSTR lpOut,_In_ LPCTSTR lpFmt,_In_ ... None)
int __cdecl user32.wsprintf(_Out_ LPTSTR lpOut,_In_ LPCTSTR lpFmt,_In_ ... None)
int __cdecl user32.wsprintfW(_Out_ LPTSTR lpOut,_In_ LPCTSTR lpFmt,_In_ ... None)
INTERNET_STATUS_CALLBACK None wininet.InternetSetStatusCallback(_In_ HINTERNET hInternet,_In_ INTERNET_STATUS_CALLBACK lpfnInternetCallback)
int None comctl32.AddMRUStringW(_In_ HANDLE hMRU,_In_ LPCTSTR szString)
int None comctl32.CreateMRUListW(_In_ LPMRUINFO lpmi)
int None comctl32.EnumMRUListW(_In_ HANDLE hMRU,_In_ int nItem,_Out_ void *lpData,_In_ UINT uLen)
int None comctl32.FlatSB_SetScrollPos(HWND hwnd None,int code None,int nPos None,BOOL fRedraw None)
int None comctl32.FreeMRUList(_In_ HANDLE hMRU)
int None comctl32.ImageList_Add(_In_ HIMAGELIST himl,_In_ HBITMAP hbmImage,_In_opt_ HBITMAP hbmMask)
int None comctl32.ImageList_AddMasked(HIMAGELIST himl None,HBITMAP hbmImage None,COLORREF crMask None)
int None comctl32.ImageList_GetImageCount(_In_ HIMAGELIST himl)
int None comctl32.ImageList_ReplaceIcon(_In_ HIMAGELIST himl,_In_ int i,_In_ HICON hicon)
int None comctl32.ImageList_SetColorTable(_In_ HIMAGELIST himl,_In_ int start,_In_ int len,_In_ RGBQUAD *prgb)
int None comctl32.LBItemFromPt(HWND hLB None,POINT pt None,BOOL bAutoScroll None)
INT None comctl32.LVGroupCompare(_In_ INT Group1_ID,_In_ INT Group2_ID,_In_ VOID *pvData)
int None gdi32.AddFontResourceA(_In_ LPCTSTR lpszFilename)
int None gdi32.AddFontResourceExA(_In_ LPCTSTR lpszFilename,_In_ DWORD fl,_In_ PVOID pdv)
int None gdi32.AddFontResourceEx(_In_ LPCTSTR lpszFilename,_In_ DWORD fl,_In_ PVOID pdv)
int None gdi32.AddFontResourceExW(_In_ LPCTSTR lpszFilename,_In_ DWORD fl,_In_ PVOID pdv)
int None gdi32.AddFontResource(_In_ LPCTSTR lpszFilename)
int None gdi32.AddFontResourceW(_In_ LPCTSTR lpszFilename)
int None gdi32.CombineRgn(_In_ HRGN hrgnDest,_In_ HRGN hrgnSrc1,_In_ HRGN hrgnSrc2,_In_ int fnCombineMode)
int None gdi32.EndDoc(_In_ HDC hdc)
int None gdi32.EnumFontFamiliesA(_In_ HDC hdc,_In_ LPCTSTR lpszFamily,_In_ FONTENUMPROC lpEnumFontFamProc,_In_ LPARAM lParam)
int None gdi32.EnumFontFamiliesExA(_In_ HDC hdc,_In_ LPLOGFONT lpLogfont,_In_ FONTENUMPROC lpEnumFontFamExProc,_In_ LPARAM lParam,DWORD dwFlags None)
int None gdi32.EnumFontFamiliesEx(_In_ HDC hdc,_In_ LPLOGFONT lpLogfont,_In_ FONTENUMPROC lpEnumFontFamExProc,_In_ LPARAM lParam,DWORD dwFlags None)
int None gdi32.EnumFontFamiliesExW(_In_ HDC hdc,_In_ LPLOGFONT lpLogfont,_In_ FONTENUMPROC lpEnumFontFamExProc,_In_ LPARAM lParam,DWORD dwFlags None)
int None gdi32.EnumFontFamilies(_In_ HDC hdc,_In_ LPCTSTR lpszFamily,_In_ FONTENUMPROC lpEnumFontFamProc,_In_ LPARAM lParam)
int None gdi32.EnumFontFamiliesW(_In_ HDC hdc,_In_ LPCTSTR lpszFamily,_In_ FONTENUMPROC lpEnumFontFamProc,_In_ LPARAM lParam)
int None gdi32.GetBkMode(_In_ HDC hdc)
int None gdi32.GetDeviceCaps(_In_ HDC hdc,_In_ int nIndex)
int None gdi32.GetGraphicsMode(_In_ HDC hdc)
int None gdi32.GetMapMode(_In_ HDC hdc)
int None gdi32.GetObjectA(_In_ HGDIOBJ hgdiobj,_In_ int cbBuffer,_Out_ LPVOID lpvObject)
int None gdi32.GetObject(_In_ HGDIOBJ hgdiobj,_In_ int cbBuffer,_Out_ LPVOID lpvObject)
int None gdi32.GetObjectW(_In_ HGDIOBJ hgdiobj,_In_ int cbBuffer,_Out_ LPVOID lpvObject)
int None gdi32.GetTextCharsetInfo(_In_ HDC hdc,_Out_opt_ LPFONTSIGNATURE lpSig,_In_ DWORD dwFlags)
int None gdi32.GetTextCharset(_In_ HDC hdc)
int None gdi32.GetTextFaceA(_In_ HDC hdc,_In_ int nCount,_Out_ LPTSTR lpFaceName)
int None gdi32.GetTextFace(_In_ HDC hdc,_In_ int nCount,_Out_ LPTSTR lpFaceName)
int None gdi32.GetTextFaceW(_In_ HDC hdc,_In_ int nCount,_Out_ LPTSTR lpFaceName)
int None gdi32.SaveDC(_In_ HDC hdc)
int None gdi32.SelectClipRgn(_In_ HDC hdc,_In_ HRGN hrgn)
int None gdi32.SetGraphicsMode(_In_ HDC hdc,_In_ int iMode)
int None gdi32.SetStretchBltMode(_In_ HDC hdc,_In_ int iStretchMode)
int None gdi32.SetTextCharacterExtra(_In_ HDC hdc,_In_ int nCharExtra)
int None idndl.DownlevelGetLocaleScripts(_In_ LPCWSTR lpLocaleName,_Out_ LPWSTR lpScripts,_In_ int cchScripts)
int None idndl.DownlevelGetStringScripts(_In_ DWORD dwFlags,_In_ LPCWSTR lpString,_In_ int cchString,_Out_ LPWSTR lpScripts,_In_ int cchScripts)
int None kernel32.CompareStringA(_In_ LCID Locale,_In_ DWORD dwCmpFlags,_In_ LPCTSTR lpString1,_In_ int cchCount1,_In_ LPCTSTR lpString2,_In_ int cchCount2)
int None kernel32.CompareStringEx(_In_opt_ LPCWSTR lpLocaleName,_In_ DWORD dwCmpFlags,_In_ LPCWSTR lpString1,_In_ int cchCount1,_In_ LPCWSTR lpString2,_In_ int cchCount2,_In_opt_ LPNLSVERSIONINFO lpVersionInformation,_In_opt_ LPVOID lpReserved,_In_opt_ LPARAM lParam)
int None kernel32.CompareString(_In_ LCID Locale,_In_ DWORD dwCmpFlags,_In_ LPCTSTR lpString1,_In_ int cchCount1,_In_ LPCTSTR lpString2,_In_ int cchCount2)
int None kernel32.CompareStringOrdinal(_In_ LPCWSTR lpString1,_In_ int cchCount1,_In_ LPCWSTR lpString2,_In_ int cchCount2,_In_ BOOL bIgnoreCase)
int None kernel32.CompareStringW(_In_ LCID Locale,_In_ DWORD dwCmpFlags,_In_ LPCTSTR lpString1,_In_ int cchCount1,_In_ LPCTSTR lpString2,_In_ int cchCount2)
int None kernel32.FindNLSStringEx(_In_opt_ LPCWSTR lpLocaleName,_In_ DWORD dwFindNLSStringFlags,_In_ LPCWSTR lpStringSource,_In_ int cchSource,_In_ LPCWSTR lpStringValue,_In_ int cchValue,_Out_opt_ LPINT pcchFound,_In_opt_ LPNLSVERSIONINFO lpVersionInformation,_In_opt_ LPVOID lpReserved,_In_opt_ LPARAM sortHandle)
int None kernel32.FindNLSString(_In_ LCID Locale,_In_ DWORD dwFindNLSStringFlags,_In_ LPCWSTR lpStringSource,_In_ int cchSource,_In_ LPCWSTR lpStringValue,_In_ int cchValue,_Out_opt_ LPINT pcchFound)
int None kernel32.FindStringOrdinal(_In_ DWORD dwFindStringOrdinalFlags,_In_ LPCWSTR lpStringSource,_In_ int cchSource,_In_ LPCWSTR lpStringValue,_In_ int cchValue,_In_ BOOL bIgnoreCase)
int None kernel32.FoldStringA(_In_ DWORD dwMapFlags,_In_ LPCTSTR lpSrcStr,_In_ int cchSrc,_Out_opt_ LPTSTR lpDestStr,_In_ int cchDest)
int None kernel32.FoldString(_In_ DWORD dwMapFlags,_In_ LPCTSTR lpSrcStr,_In_ int cchSrc,_Out_opt_ LPTSTR lpDestStr,_In_ int cchDest)
int None kernel32.FoldStringW(_In_ DWORD dwMapFlags,_In_ LPCTSTR lpSrcStr,_In_ int cchSrc,_Out_opt_ LPTSTR lpDestStr,_In_ int cchDest)
int None kernel32.GetCalendarInfoA(_In_ LCID Locale,_In_ CALID Calendar,_In_ CALTYPE CalType,_Out_opt_ LPTSTR lpCalData,_In_ int cchData,_Out_opt_ LPDWORD lpValue)
int None kernel32.GetCalendarInfoEx(_In_opt_ LPCWSTR lpLocaleName,_In_ CALID Calendar,_In_opt_ LPCWSTR lpReserved,_In_ CALTYPE CalType,_Out_opt_ LPWSTR lpCalData,_In_ int cchData,_Out_opt_ LPDWORD lpValue)
int None kernel32.GetCalendarInfo(_In_ LCID Locale,_In_ CALID Calendar,_In_ CALTYPE CalType,_Out_opt_ LPTSTR lpCalData,_In_ int cchData,_Out_opt_ LPDWORD lpValue)
int None kernel32.GetCalendarInfoW(_In_ LCID Locale,_In_ CALID Calendar,_In_ CALTYPE CalType,_Out_opt_ LPTSTR lpCalData,_In_ int cchData,_Out_opt_ LPDWORD lpValue)
int None kernel32.GetGeoInfoA(_In_ GEOID Location,_In_ GEOTYPE GeoType,_Out_opt_ LPTSTR lpGeoData,_In_ int cchData,_In_ LANGID LangId)
int None kernel32.GetGeoInfo(_In_ GEOID Location,_In_ GEOTYPE GeoType,_Out_opt_ LPTSTR lpGeoData,_In_ int cchData,_In_ LANGID LangId)
int None kernel32.GetGeoInfoW(_In_ GEOID Location,_In_ GEOTYPE GeoType,_Out_opt_ LPTSTR lpGeoData,_In_ int cchData,_In_ LANGID LangId)
int None kernel32.GetLocaleInfoA(_In_ LCID Locale,_In_ LCTYPE LCType,_Out_opt_ LPTSTR lpLCData,_In_ int cchData)
int None kernel32.GetLocaleInfoEx(_In_opt_ LPCWSTR lpLocaleName,_In_ LCTYPE LCType,_Out_opt_ LPWSTR lpLCData,_In_ int cchData)
int None kernel32.GetLocaleInfo(_In_ LCID Locale,_In_ LCTYPE LCType,_Out_opt_ LPTSTR lpLCData,_In_ int cchData)
int None kernel32.GetLocaleInfoW(_In_ LCID Locale,_In_ LCTYPE LCType,_Out_opt_ LPTSTR lpLCData,_In_ int cchData)
int None kernel32.GetStringScripts(_In_ DWORD dwFlags,_In_ LPCWSTR lpString,_In_ int cchString,_Out_opt_ LPWSTR lpScripts,_In_ int cchScripts)
int None kernel32.GetSystemDefaultLocaleName(_Out_ LPWSTR lpLocaleName,_In_ int cchLocaleName)
int None kernel32.GetUserDefaultLocaleName(_Out_ LPWSTR lpLocaleName,_In_ int cchLocaleName)
int None kernel32.LCIDToLocaleName(_In_ LCID Locale,_Out_opt_ LPWSTR lpName,_In_ int cchName,_In_ DWORD dwFlags)
int None kernel32.LCMapStringA(_In_ LCID Locale,_In_ DWORD dwMapFlags,_In_ LPCTSTR lpSrcStr,_In_ int cchSrc,_Out_opt_ LPTSTR lpDestStr,_In_ int cchDest)
int None kernel32.LCMapStringEx(_In_opt_ LPCWSTR lpLocaleName,_In_ DWORD dwMapFlags,_In_ LPCWSTR lpSrcStr,_In_ int cchSrc,_Out_opt_ LPWSTR lpDestStr,_In_ int cchDest,_In_opt_ LPNLSVERSIONINFO lpVersionInformation,_In_opt_ LPVOID lpReserved,_In_opt_ LPARAM sortHandle)
int None kernel32.LCMapString(_In_ LCID Locale,_In_ DWORD dwMapFlags,_In_ LPCTSTR lpSrcStr,_In_ int cchSrc,_Out_opt_ LPTSTR lpDestStr,_In_ int cchDest)
int None kernel32.LCMapStringW(_In_ LCID Locale,_In_ DWORD dwMapFlags,_In_ LPCTSTR lpSrcStr,_In_ int cchSrc,_Out_opt_ LPTSTR lpDestStr,_In_ int cchDest)
int None kernel32.MulDiv(_In_ int nNumber,_In_ int nNumerator,_In_ int nDenominator)
int None kernel32.MultiByteToWideChar(_In_ UINT CodePage,_In_ DWORD dwFlags,_In_ LPCSTR lpMultiByteStr,_In_ int cbMultiByte,_Out_opt_ LPWSTR lpWideCharStr,_In_ int cchWideChar)
int None kernel32.ResolveLocaleName(_In_opt_ LPCWSTR lpNameToResolve,_Out_opt_ LPWSTR lpLocaleName,_In_ int cchLocaleName)
INT None msftedit.TxReleaseDC([in] HDC hdc)
int None msi.MsiProcessMessage(_In_ MSIHANDLE hInstall,_In_ INSTALLMESSAGE eMessageType,_In_ MSIHANDLE hRecord)
INT None mswsock.EnumProtocolsA(_In_opt_ LPINT lpiProtocols,_Out_ LPVOID lpProtocolBuffer,_Inout_ LPDWORD lpdwBufferLength)
INT None mswsock.EnumProtocols(_In_opt_ LPINT lpiProtocols,_Out_ LPVOID lpProtocolBuffer,_Inout_ LPDWORD lpdwBufferLength)
INT None mswsock.EnumProtocolsW(_In_opt_ LPINT lpiProtocols,_Out_ LPVOID lpProtocolBuffer,_Inout_ LPDWORD lpdwBufferLength)
INT None mswsock.GetAddressByNameA(_In_ DWORD dwNameSpace,_In_ LPGUID lpServiceType,_In_opt_ LPTSTR lpServiceName,_In_opt_ LPINT lpiProtocols,_In_ DWORD dwResolution,_In_opt_ LPSERVICE_ASYNC_INFO lpServiceAsyncInfo,_Out_ LPVOID lpCsaddrBuffer,_Inout_ LPDWORD lpdwBufferLength,_Inout_ LPTSTR lpAliasBuffer,_Inout_ LPDWORD lpdwAliasBufferLength)
INT None mswsock.GetAddressByName(_In_ DWORD dwNameSpace,_In_ LPGUID lpServiceType,_In_opt_ LPTSTR lpServiceName,_In_opt_ LPINT lpiProtocols,_In_ DWORD dwResolution,_In_opt_ LPSERVICE_ASYNC_INFO lpServiceAsyncInfo,_Out_ LPVOID lpCsaddrBuffer,_Inout_ LPDWORD lpdwBufferLength,_Inout_ LPTSTR lpAliasBuffer,_Inout_ LPDWORD lpdwAliasBufferLength)
INT None mswsock.GetAddressByNameW(_In_ DWORD dwNameSpace,_In_ LPGUID lpServiceType,_In_opt_ LPTSTR lpServiceName,_In_opt_ LPINT lpiProtocols,_In_ DWORD dwResolution,_In_opt_ LPSERVICE_ASYNC_INFO lpServiceAsyncInfo,_Out_ LPVOID lpCsaddrBuffer,_Inout_ LPDWORD lpdwBufferLength,_Inout_ LPTSTR lpAliasBuffer,_Inout_ LPDWORD lpdwAliasBufferLength)
INT None mswsock.GetNameByTypeA(_In_ LPGUID lpServiceType,_Out_ LPTSTR lpServiceName,_In_ DWORD dwNameLength)
INT None mswsock.GetNameByType(_In_ LPGUID lpServiceType,_Out_ LPTSTR lpServiceName,_In_ DWORD dwNameLength)
INT None mswsock.GetNameByTypeW(_In_ LPGUID lpServiceType,_Out_ LPTSTR lpServiceName,_In_ DWORD dwNameLength)
INT None mswsock.GetServiceA(_In_ DWORD dwNameSpace,_In_ PGUID lpGuid,_In_ LPTSTR lpServiceName,_In_ DWORD dwProperties,_Out_ LPVOID lpBuffer,_Inout_ LPDWORD lpdwBufferSize,_In_opt_ LPSERVICE_ASYNC_INFO lpServiceAsyncInfo)
INT None mswsock.GetService(_In_ DWORD dwNameSpace,_In_ PGUID lpGuid,_In_ LPTSTR lpServiceName,_In_ DWORD dwProperties,_Out_ LPVOID lpBuffer,_Inout_ LPDWORD lpdwBufferSize,_In_opt_ LPSERVICE_ASYNC_INFO lpServiceAsyncInfo)
INT None mswsock.GetServiceW(_In_ DWORD dwNameSpace,_In_ PGUID lpGuid,_In_ LPTSTR lpServiceName,_In_ DWORD dwProperties,_Out_ LPVOID lpBuffer,_Inout_ LPDWORD lpdwBufferSize,_In_opt_ LPSERVICE_ASYNC_INFO lpServiceAsyncInfo)
INT None mswsock.GetTypeByNameA(_In_ LPTSTR lpServiceName,_Inout_ PGUID lpServiceType)
INT None mswsock.GetTypeByName(_In_ LPTSTR lpServiceName,_Inout_ PGUID lpServiceType)
INT None mswsock.GetTypeByNameW(_In_ LPTSTR lpServiceName,_Inout_ PGUID lpServiceType)
INT None mswsock.RIONotify(_In_ RIO_CQ CQ)
INT None mswsock.SetServiceA(_In_ DWORD dwNameSpace,_In_ DWORD dwOperation,_In_ DWORD dwFlags,_In_ LPSERVICE_INFO lpServiceInfo,_In_opt_ LPSERVICE_ASYNC_INFO lpServiceAsyncInfo,_Out_ LPDWORD lpdwStatusFlags)
INT None mswsock.SetService(_In_ DWORD dwNameSpace,_In_ DWORD dwOperation,_In_ DWORD dwFlags,_In_ LPSERVICE_INFO lpServiceInfo,_In_opt_ LPSERVICE_ASYNC_INFO lpServiceAsyncInfo,_Out_ LPDWORD lpdwStatusFlags)
INT None mswsock.SetServiceW(_In_ DWORD dwNameSpace,_In_ DWORD dwOperation,_In_ DWORD dwFlags,_In_ LPSERVICE_INFO lpServiceInfo,_In_opt_ LPSERVICE_ASYNC_INFO lpServiceAsyncInfo,_Out_ LPDWORD lpdwStatusFlags)
int None nlsmap.DownlevelGetParentLocaleName(_In_ LCID Locale,_Out_ LPWSTR lpName,_In_ int cchName)
int None nlsmap.DownlevelLCIDToLocaleName(_In_ LCID Locale,_Out_ LPWSTR lpName,_In_ int cchName,_In_ DWORD dwFlags)
int None None._access(const char *path,int mode None)
int None None.AddMetadata(DRMPUBHANDLE* phIssuanceLicense None)
int None None.Add(Object value None)
int None None.AecDecodeVAD(short *pOutput None)
int None None.asint(in value None)
int None None._atodbl(_CRT_DOUBLE * value,char * str)
int None None._chmod(const char *filename,int pmode None)
int None None._chsize(int fd None,long size None)
int None None._close(int fd None)
int None None.ComboBox_AddItemData(HWND hwndCtl None,LPARAM data None)
int None None.ComboBox_AddString(HWND hwndCtl None,LPCTSTR lpsz None)
int None None.ComboBox_DeleteString(HWND hwndCtl None,int index None)
int None None.ComboBox_Dir(HWND hwndCtl None,UINT attrs None,LPCTSTR lpszFileSpec None)
int None None.ComboBox_FindItemData(HWND hwndCtl None,int indexStart None,LPARAM data None)
int None None.ComboBox_FindStringExact(HWND hwndCtl None,int indexStart None,LPCTSTR lpszFind None)
int None None.ComboBox_FindString(HWND hwndCtl None,int indexStart None,LPCTSTR lpszFind None)
int None None.ComboBox_GetCount(HWND hwndCtl None)
int None None.ComboBox_GetCurSel(HWND hwndCtl None)
int None None.ComboBox_GetItemHeight(HWND hwndCtl None)
int None None.ComboBox_GetLBText(HWND hwndCtl None,int index None,LPCTSTR lpszBuffer None)
int None None.ComboBox_GetLBTextLen(HWND hwndCtl None,int index None)
INT None None.ComboBox_GetMinVisible(HWND hwnd None)
int None None.ComboBox_GetText(HWND hwndCtl None,LPTSTR lpch None,int cchMax None)
int None None.ComboBox_GetTextLength(HWND hwndCtl None)
int None None.ComboBox_InsertItemData(HWND hwndCtl None,int index None,LPARAM data None)
int None None.ComboBox_InsertString(HWND hwndCtl None,int index None,LPCSTR lpsz None)
int None None.ComboBox_LimitText(HWND hwndCtl None,int cchMax None)
int None None.ComboBox_ResetContent(HWND hwndCtl None)
int None None.ComboBox_SelectItemData(HWND hwndCtl None,int indexStart None,LPARAM data None)
int None None.ComboBox_SelectString(HWND hwndCtl None,int indexStart None,LPCTSTR lpszFind None)
int None None.ComboBox_SetCurSel(HWND hwndCtl None,int index None)
int None None.ComboBox_SetExtendedUI(HWND hwndCtl None,UINT flags None)
int None None.ComboBox_SetItemData(HWND hwndCtl None,int index None,LPARAM data None)
int None None.ComboBox_SetItemHeight(HWND hwndCtl None,int index None,int cyItem None)
int None None.ComboBox_SetText(HWND hwndCtl None,LPTSTR lpsz None)
int None None.CommDlg_OpenSave_GetFilePath(hwnd None None,lparam None None,wparam None None)
int None None.CommDlg_OpenSave_GetFolderIDList(hwnd None None,lparam None None,wparam None None)
int None None.CommDlg_OpenSave_GetFolderPath(hwnd None None,lparam None None,wparam None None)
int None None._commit(int fd None)
int None None.Compare(Object x None,Object y None)
int None None.CompareTo(object obj None)
int None None.CompareTo(Object obj None)
int None None.CompareTo(T other None)
int None None.ComparisonT(T x None,T y None)
int None None._creat(const char *filename,int pmode None)
int None None._CrtCheckMemory(void None None)
int None None._CrtDumpMemoryLeaks(void None None)
int None None._CrtSetReportMode(int reportType None,int reportMode None)
int None None.DidAlloc([in] void *pv)
int None None.DoSomething(long l None)
int None None._dup(int fd None)
int None None.Edit_GetFirstVisibleLine(HWND hwndCtl None)
int None None.Edit_GetLineCount(HWND hwndCtl None)
int None None.Edit_GetLine(HWND hwndCtl None,int line None,LPTSTR lpch None,int cchMax None)
int None None.Edit_GetText(HWND hwndCtl None,LPTSTR lpch None,int cchMax None)
int None None.Edit_GetTextLength(HWND hwndCtl None)
int None None.Edit_LineFromChar(HWND hwndCtl None,int ich None)
int None None.Edit_LineLength(HWND hwndCtl None,int line None)
int None None.Edit_SetText(HWND hwndCtl None,LPTSTR lpsz None)
int None None._eof(int fd None)
int None None.fclose(FILE *stream None)
int None None.feholdexcept(fenv_t *penv None)
int None None.feof(FILE *stream None)
int None None.ferror(FILE *stream None)
int None None.fflush(FILE *stream None)
int None None.fgetpos(FILE *stream None,fpos_t *pos None)
int None None._fileno(FILE *stream None)
int None None.firstbithigh(in int value)
int None None.firstbitlow(in int value)
int None None.fputc(int c None,FILE *stream None)
int None None._fputc_nolock(int c None,FILE *stream None)
int None None.fputs(const char *str,FILE *stream None)
int None None.fseek(FILE *stream None,long offset None,int origin None)
int None None._fseek_nolock(FILE *stream None,long offset None,int origin None)
int None None.fsetpos(FILE *stream None,const fpos_t *pos)
int None None.ftol_ambient(double d None)
int None None._futime(int fd None,struct _utimbuf *filetime)
int None None.getc(FILE *stream None)
int None None._getch_nolock(void None None)
int None None.GetHashCode(Object obj None)
int None None.GetHashCode(T obj None)
int None None.GET_KEYSTATE_WPARAM(WPARAM wParam None)
int None None._getmaxstdio(void None None)
int None None._getmbcp(void None None)
int None None._getpid(void None None)
int None None.GET_XBUTTON_WPARAM(WPARAM wParam None)
int None None.GET_X_LPARAM(LPARAM lParam None)
int None None.GET_Y_LPARAM(LPARAM lParam None)
int None None.Header_ClearAllFilters(HWND hwnd None)
int None None.Header_ClearFilter(HWND hwnd None,int i None)
int None None.Header_EditFilter(HWND hwnd None,int i None,fDiscardChanges fDiscardChanges None)
int None None.Header_GetBitmapMargin(HWND hwnd None)
int None None.Header_GetItemCount(HWND hwndHD None)
int None None.Header_InsertItem(HWND hwndHD None,int index None,const LPHDITEM phdi)
int None None.Header_OrderToIndex(HWND hwndHD None,int iOrder None)
int None None.Header_SetBitmapMargin(HWND hwnd None,int iWidth None)
int None None.Header_SetFilterChangeTimeout(HWND hwnd None,int i None)
int None None.Header_SetHotDivider(HWND hwndHD None,BOOL flag None,DWORD dwInputValue None)
int None None.ImageList_AddIcon(HIMAGELIST himl None,HICON hicon None)
int None None.IndexOf(Object value None)
int None None.iscntrl(int c None)
int None None.isdigit(int c None)
int None None.isleadbyte(int c None)
int None None.islower(int c None)
int None None._ismbbgraph(unsigned int c)
int None None._ismbbkalnum(unsigned int c)
int None None._ismbbpunct(unsigned int c)
int None None._ismbcgraph(unsigned int c)
int None None._ismbclower(unsigned int c)
int None None.isprint(int c None)
int None None.ispunct(int c None)
int None None.isspace(int c None)
int None None.isupper(int c None)
int None None.isxdigit(int c None)
int None None._kbhit(void None None)
int None None.ListView_EnableGroupView(HWND hwnd None,BOOL fEnable None)
int None None.ListView_FindItem(HWND hwnd None,int iStart None,const LPLVFINDINFO plvfi)
int None None.ListView_GetColumnWidth(HWND hwnd None,int iCol None)
int None None.ListView_GetCountPerPage(HWND hwnd None)
INT None None.ListView_GetFocusedGroup([in] HWND hwnd)
int None None.ListView_GetGroupCount(HWND hwnd None)
int None None.ListView_GetGroupInfo(HWND hwnd None,int iGroupId None,PLVGROUP pgrp None)
INT None None.ListView_GetHotItem(HWND hwndLV None)
int None None.ListView_GetInsertMarkRect(HWND hwnd None,LPRECT prc None)
int None None.ListView_GetItemCount(HWND hwnd None)
int None None.ListView_GetNextItem(HWND hwnd None,int iStart None,UINT flags None)
INT None None.ListView_GetSelectionMark(HWND hwndLV None)
int None None.ListView_GetStringWidth(HWND hwnd None,LPCSTR psz None)
int None None.ListView_GetTopIndex(HWND hwnd None)
int None None.ListView_HitTestEx(HWND hwndLV None,LPLVHITTESTINFO pinfo None)
int None None.ListView_HitTest(HWND hwnd None,LPLVHITTESTINFO pinfo None)
int None None.ListView_InsertColumn(HWND hwnd None,int iCol None,const LPLVCOLUMN pcol)
int None None.ListView_InsertGroup(HWND hwnd None,int index None,PLVGROUP pgrp None)
int None None.ListView_InsertItem(HWND hwnd None,const LPLVITEM pitem)
int None None.ListView_RemoveGroup(HWND hwnd None,int iGroupId None)
int None None.ListView_SetGroupInfo(HWND hwnd None,int iGroupId None,PLVGROUP pgrp None)
INT None None.ListView_SetHotItem(HWND hwndLV None,INT iIndex None)
INT None None.ListView_SetSelectionMark(HWND hwndLV None,INT iIndex None)
int None None.ListView_SetView(HWND hwnd None,DWORD iView None)
int None None.ListView_SortGroups(HWND hwnd None,PFNLVGROUPCOMPARE pfnGroupCompare None,LPVOID plv None)
INT None None.ListView_SubItemHitTestEx(HWND hwnd None,LPLVHITTESTINFO plvhti None)
INT None None.ListView_SubItemHitTest(HWND hwndLV None,LPLVHITTESTINFO pInfo None)
int None None._locking(int fd None,int mode None,long nbytes None)
int None None.main( None None)
int None None.main(void None None)
int None None._matherr(struct _exception *except)
int None None.mbsinit(const mbstate_t* ps)
int None None.mbtowc(wchar_t *wchar None,const char *mbchar,size_t count None)
int None None.memcmp(const void *buf1,const void *buf2,size_t count None)
int None None._memicmp(const void *buf1,const void *buf2,size_t count None)
int None None._mkdir(const char *dirname)
INT None None.MonthCal_GetMonthDelta(HWND hwndMC None)
INT None None.MonthCal_GetMonthRange(HWND hwndMC None,DWORD dwFlag None,LPSYSTEMTIME lprgSysTimeArray None)
INT None None.MonthCal_SetMonthDelta(HWND hwndMC None,INT iDelta None)
int None None.MyMethod(Object o None)
int None None.NSPStartup(_In_ LPGUID lpProviderId,_Out_ LPNSP_ROUTINE lpnspRoutines)
int None None._open(const char *filename,int oflag [,int pmode] None)
int None None.OpenMyQueue(LPWSTR wszPathName None,DWORD dwAccess None,DWORD dwShareMode None,QUEUEHANDLE *phQueue None)
int None None.Pager_GetBorder(HWND hwndPager None)
int None None.Pager_GetButtonSize(HWND hwndPager None)
int None None.Pager_GetPos(HWND hwndPager None)
INT None None.Pager_SetBorder(HWND hwndPager None,int iBorder None)
int None None.Pager_SetButtonSize(HWND hwndPager None,int iButtonSize None)
int None None.Pager_SetPos(HWND hwndPager None,int iPos None)
int None None.Pager_SetScrollInfo(HWND hwndPager None,UINT cTimeOut None,UINT cLinesPer None,UINT cPixelsPerLine None)
int None None._pclose(FILE *stream None)
int None None.PropSheet_GetResult(HWND hPropSheetDlg None)
int None None.PropSheet_HwndToIndex(HWND hPropSheetDlg None,HWND hPageDlg None)
int None None.PropSheet_IdToIndex(HWND hPropSheetDlg None,int iPageID None)
int None None.PropSheet_IndexToId(HWND hPropSheetDlg None,int iPageIndex None)
int None None.PropSheet_PageToIndex(HWND hPropSheetDlg None,HPROPSHEETPAGE hPage None)
int None None.PropSheet_QuerySiblings(HWND hPropSheetDlg None,WPARAM param1 None,LPARAM param2 None)
int None None.PropSheet_SetHeaderTitle(HWND hWizardDlg None,int iPageIndex None,LPCTSTR pszHeaderTitle None)
INT None None.PropVariantCompare(_In_ REFPROPVARIANT propvar1,_In_ REFPROPVARIANT propvar2)
int None None._putch_nolock(int c None)
int None None.putc(int c None,FILE *stream None)
int None None._putenv(const char *envstring)
int None None.puts(const char *str)
int None None._putw(int binint None,FILE *stream None)
int None None._rmtmp(void None None)
int None None._set_error_mode(int modeval None)
int None None.setjmp(jmp_buf env None)
int None None._setmaxstdio(int newmax None)
int None None._setmbcp(int codepage None)
int None None._setmode(int fd None,int mode None)
int None None._set_new_mode(int newhandlermode None)
int None None._set_SSE2_enable(int flag None)
int None None._sopen(const char *filename,int oflag None,int shflag [,int pmode ])
int None None.sprintf_s(char *buffer None,size_t sizeOfBuffer None,const char *format,... None None)
int None None._stat(const char *path,struct _stat *buffer)
int None None.strcmp(const char *string1,const char *string2)
int None None.strcoll(const char *string1,const char *string2)
int None None._stricmp(const char *string1,const char *string2)
int None None._stricoll(const char *string1,const char *string2)
int None None.strncmp(const char *string1,const char *string2,size_t count None)
int None None._strncoll(const char *string1,const char *string2,size_t count None)
int None None._strnicmp(const char *string1,const char *string2,size_t count None)
int None None._strnicoll(const char *string1,const char *string2,size_t count None)
int None None.TabCtrl_GetCurSel(HWND hwnd None)
int None None.TabCtrl_GetItemCount(HWND hwnd None)
int None None.TabCtrl_GetRowCount(HWND hwnd None)
int None None.TabCtrl_InsertItem(HWND hwnd None,int iItem None,const LPTCITEM pitem)
int None None.TabCtrl_SetCurSel(HWND hwnd None,int iItem None)
int None None.__toascii(int c None)
int None None.ToInt32(IFormatProvider provider None)
int None None.tolower(int c None)
int None None.toupper(int c None)
int None None.TransformBlock(byte[] inputBuffer None,int inputOffset None,int inputCount None,byte[] outputBuffer None,int outputOffset None)
int None None.TreeView_GetItemHeight(HWND hwndTV None)
int None None.TreeView_SetBorder(HWND hwndTV None,DWORD dwFlags None,SHORT xBorder None,SHORT yBorder None)
int None None.TreeView_SetItemHeight(HWND hwndTV None,SHORT cyItem None)
int None None._umask(int pmode None)
int None None._unlink(const char *filename)
int None None._utime(const char *filename,struct _utimbuf *times)
int None None._vcprintf(const char* format,va_list argptr None)
int None None.vfprintf(FILE *stream None,const char *format,va_list argptr None)
int None None.vfprintf_s(FILE *stream None,const char *format,va_list argptr None)
int None None.vprintf(const char *format,va_list argptr None)
int None None.vsnprintf(char *buffer None,size_t count None,const char *format,va_list argptr None)
int None None.vsnprintf_s(char *buffer None,size_t sizeOfBuffer None,size_t count None,const char *format,va_list argptr None)
int None None.vsprintf(char *buffer None,const char *format,va_list argptr None)
int None None._vsprintf_p(char *buffer None,size_t sizeInBytes None,const char *format,va_list argptr None)
int None None.vsprintf_s(char *buffer None,size_t numberOfElements None,const char *format,va_list argptr None)
int None None.wctomb(char *mbchar None,wchar_t wchar None)
int None None.WlxAssignShellProtection(_In_ HANDLE hWlx,_In_ HANDLE hToken,_In_ HANDLE hProcess,_In_ HANDLE hThread)
int None None.WlxChangePasswordNotifyEx(_In_ HANDLE hWlx,_In_ PWLX_MPR_NOTIFY_INFO pMprInfo,_In_ DWORD dwChangeInfo,_In_ PWSTR ProviderName,_In_ PVOID Reserved)
int None None.WlxChangePasswordNotify(_In_ HANDLE hWlx,_In_ PWLX_MPR_NOTIFY_INFO pMprInfo,_In_ DWORD dwChangeInfo)
int None None.WlxDialogBoxIndirect(_In_ HANDLE hWlx,_In_ HANDLE hInst,_In_ LPCDLGTEMPLATE hDialogTemplate,_In_ HWND hwndOwner,_In_ DLGPROC dlgprc)
int None None.WlxDialogBoxIndirectParam(_In_ HANDLE hWlx,_In_ HANDLE hInst,_In_ LPCDLGTEMPLATE hDialogTemplate,_In_ HWND hwndOwner,_In_ DLGPROC dlgprc,_In_ LPARAM dwInitParam)
int None None.WlxDialogBox(_In_ HANDLE hWlx,_In_ HANDLE hInst,_In_ LPWSTR lpszTemplate,_In_ HWND hwndOwner,_In_ DLGPROC dlgprc)
int None None.WlxDialogBoxParam(_In_ HANDLE hWlx,_In_ HANDLE hInst,_In_ LPWSTR lpszTemplate,_In_ HWND hwndOwner,_In_ DLGPROC dlgprc,_In_ LPARAM dwInitParam)
int None None.WlxLoggedOnSAS(_In_ PVOID pWlxContext,_In_ DWORD dwSasType,_In_ PVOID pReserved)
int None None.WlxLoggedOutSAS(_In_ PVOID pWlxContext,_In_ DWORD dwSasType,_Out_ PLUID pAuthenticationId,_Inout_ PSID pLogonSid,_Out_ PDWORD pdwOptions,_Out_ PHANDLE phToken,_Out_ PWLX_MPR_NOTIFY_INFO pNprNotifyInfo,_Out_ PVOID *pProfile)
int None None.WlxMessageBox(_In_ HANDLE hWlx,_In_ HWND hwndOwner,_In_ LPWSTR lpszText,_In_ LPWSTR lpszTitle,_In_ UINT fuStyle)
int None None.WlxSwitchDesktopToUser(_In_ HANDLE hWlx)
int None None.WlxSwitchDesktopToWinlogon(_In_ HANDLE hWlx)
int None None.WlxWkstaLockedSAS(_In_ PVOID pWlxContext,_In_ DWORD dwSasType)
int None None.WPUCloseSocketHandle(_In_ SOCKET s,_Out_ LPINT lpErrno)
int None None.WPUFDIsSet(_In_ SOCKET s,_In_ FD_SET *set)
int None None.WPUGetProviderPath(_In_ LPGUID lpProviderId,_Out_ LPWSTR lpszProviderDllPath,_Inout_ LPINT lpProviderDllPathLen,_Out_ LPINT lpErrno)
INT None None.WPUOpenCurrentThread(_Out_ LPWSATHREADID lpThreadId,_Out_ LPINT lpErrno)
int None None.WPUQueryBlockingCallback(_In_ DWORD dwCatalogEntryId,_Out_ LPBLOCKINGCALLBACK *lplpfnCallback,_Out_ PDWORD_PTR lpdwContext,_Out_ LPINT lpErrno)
int None None.WPUQuerySocketHandleContext(_In_ SOCKET s,_Out_ PDWORD_PTR lpContext,_Out_ LPINT lpErrno)
int None None.WPUQueueApc(_In_ LPWSATHREADID lpThreadId,_In_ LPWSAUSERAPC lpfnUserApc,_In_ DWORD dwContext,_Out_ LPINT lpErrno)
int None None.WSARecvMsg(_In_ SOCKET s,_Inout_ LPWSAMSG lpMsg,_Out_ LPDWORD lpdwNumberOfBytesRecvd,_In_ LPWSAOVERLAPPED lpOverlapped,_In_ LPWSAOVERLAPPED_COMPLETION_ROUTINE lpCompletionRoutine)
int None None.WSPAddressToString(_In_ LPSOCKADDR lpsaAddress,_In_ DWORD dwAddressLength,_In_ LPWSAPROTOCOL_INFO lpProtocolInfo,_Out_ LPWSTR lpszAddressString,_Inout_ LPDWORD lpdwAddressStringLength,_Out_ LPINT lpErrno)
int None None.WSPCancelBlockingCall(_Out_ LPINT lpErrno)
int None None.WSPCleanup(_Out_ LPINT lpErrno)
int None None.WSPCloseSocket(_In_ SOCKET s,_Out_ LPINT lpErrno)
int None None.WSPDuplicateSocket(_In_ SOCKET s,_In_ DWORD dwProcessId,_Out_ LPWSAPROTOCOL_INFO lpProtocolInfo,_Out_ LPINT lpErrno)
int None None.WSPEnumNetworkEvents(_In_ SOCKET s,_In_ WSAEVENT hEventObject,_Out_ LPWSANETWORKEVENTS lpNetworkEvents,_Out_ LPINT lpErrno)
int None None.WSPEventSelect(_In_ SOCKET s,_In_ WSAEVENT hEventObject,_In_ long lNetworkEvents,_Out_ LPINT lpErrno)
int None None.WSPGetSockOpt(_In_ SOCKET s,_In_ int level,_In_ int optname,_Out_ char *optval,_Inout_ LPINT optlen,_Out_ LPINT lpErrno)
int None None.WSPIoctl(_In_ SOCKET s,_In_ DWORD dwIoControlCode,_In_ LPVOID lpvInBuffer,_In_ DWORD cbInBuffer,_Out_ LPVOID lpvOutBuffer,_In_ DWORD cbOutBuffer,_Out_ LPDWORD lpcbBytesReturned,_In_ LPWSAOVERLAPPED lpOverlapped,_In_ LPWSAOVERLAPPED_COMPLETION_ROUTINE lpCompletionRoutine,_In_ LPWSATHREADID lpThreadId,_Out_ LPINT lpErrno)
int None None.WSPListen(_In_ SOCKET s,_In_ int backlog,_Out_ LPINT lpErrno)
int None None.WSPRecvDisconnect(_In_ SOCKET s,_Out_ LPWSABUF lpInboundDisconnectData,_Out_ LPINT lpErrno)
int None None.WSPSendDisconnect(_In_ SOCKET s,_In_ LPWSABUF lpOutboundDisconnectData,_Out_ LPINT lpErrno)
int None None.WSPSend(_In_ SOCKET s,_In_ LPWSABUF lpBuffers,_In_ DWORD dwBufferCount,_Out_ LPDWORD lpNumberOfBytesSent,_In_ DWORD dwFlags,_In_ LPWSAOVERLAPPED lpOverlapped,_In_ LPWSAOVERLAPPED_COMPLETION_ROUTINE lpCompletionRoutine,_In_ LPWSATHREADID lpThreadId,_Out_ LPINT lpErrno)
int None None.WSPShutdown(_In_ SOCKET s,_In_ int how,_Out_ LPINT lpErrno)
int None None.WSPStringToAddress(_In_ LPWSTR AddressString,_In_ INT AddressFamily,_In_ LPWSAPROTOCOL_INFO lpProtocolInfo,_Out_ LPSOCKADDR lpAddress,_Inout_ LPINT lpAddressLength,_Out_ LPINT lpErrno)
int None normaliz.IdnToAscii(_In_ DWORD dwFlags,_In_ LPCWSTR lpUnicodeCharStr,_In_ int cchUnicodeChar,_Out_opt_ LPWSTR lpASCIICharStr,_In_ int cchASCIIChar)
int None normaliz.IdnToNameprepUnicode(_In_ DWORD dwFlags,_In_ LPCWSTR lpUnicodeCharStr,_In_ int cchUnicodeChar,_Out_opt_ LPWSTR lpNameprepCharStr,_In_ int cchNameprepChar)
int None normaliz.IdnToUnicode(_In_ DWORD dwFlags,_In_ LPCWSTR lpASCIICharStr,_In_ int cchASCIIChar,_Out_opt_ LPWSTR lpUnicodeCharStr,_In_ int cchUnicodeChar)
int None normaliz.NormalizeString(_In_ NORM_FORM NormForm,_In_ LPCWSTR lpSrcString,_In_ int cwSrcLength,_Out_opt_ LPWSTR lpDstString,_In_ int cwDstLength)
int None ole32.StringFromGUID2(_In_ REFGUID rguid,_Out_ LPOLESTR lpsz,_In_ int cchMax)
INT None oleaut32.DosDateTimeToVariantTime(_In_ USHORT wDosDate,_In_ USHORT wDosTime,_Out_ DOUBLE *pvtime)
INT None oleaut32.VariantTimeToDosDateTime(_In_ DOUBLE vtime,_Out_ USHORT *pwDosDate,_Out_ USHORT *pwDosTime)
INT None oleaut32.VariantTimeToSystemTime(_In_ DOUBLE vtime,_Out_ LPSYSTEMTIME lpSystemTime)
INT None propsys.PropVariantCompareEx(_In_ REFPROPVARIANT propvar1,_In_ REFPROPVARIANT propvar2,_In_ PROPVAR_COMPARE_UNIT unit,_In_ PROPVAR_COMPARE_FLAGS flags)
INT None propsys.VariantCompare(_In_ REFVARIANT var1,_In_ REFVARIANT var2)
INT None setupapi.SetupPromptReboot(_In_ HSPFILEQ FileQueue,_In_ HWND Owner,_In_ BOOL ScanOnly)
int None shell32.CallCPLEntry16(_In_ HINSTANCE hInst,_In_ FARPROC16 lpfnEntry,_In_ HWND hwndCPL,_In_ UINT msg,_In_ LPARAM lParam1,_In_ LPARAM lParam2)
int None shell32.DriveType(_In_ int iDrive)
int None shell32.IsNetDrive(_In_ int iDrive)
int None shell32.PathCleanupSpec(_In_opt_ PCWSTR pszDir,_Inout_ PWSTR pszSpec)
int None shell32.PathResolve(_Inout_ PWSTR pszPath,_In_opt_ PZPCWSTR dirs,UINT fFlags None)
int None shell32.PickIconDlg(_In_opt_ HWND hwnd,_Inout_ PWSTR pszIconPath,UINT cchIconPath None,_Inout_opt_ int *piIconIndex)
int None shell32.PifMgr_CloseProperties(_In_ HANDLE hProps,_In_ UINT flOpt)
int None shell32.PifMgr_GetProperties(_In_opt_ HANDLE hProps,_In_opt_ PCSTR pszGroup,_Out_opt_ void *lpProps,int cbProps None,UINT flOpt None)
int None shell32.RealDriveType(_In_ int iDrive,_Reserved_ BOOL fOKToHitNet)
int None shell32.RestartDialogEx(_In_opt_ HWND hParent,_In_opt_ PCWSTR pszPrompt,DWORD dwFlags None,DWORD dwReasonCode None)
int None shell32.RestartDialog(_In_opt_ HWND hParent,_In_opt_ PCWSTR pszPrompt,DWORD dwFlags None)
int None shell32.SHCreateDirectory(_In_opt_ HWND hwnd,_In_ PCWSTR pszPath)
int None shell32.ShellAboutA(_In_opt_ HWND hWnd,_In_ LPCTSTR szApp,_In_opt_ LPCTSTR szOtherStuff,_In_opt_ HICON hIcon)
int None shell32.ShellAbout(_In_opt_ HWND hWnd,_In_ LPCTSTR szApp,_In_opt_ LPCTSTR szOtherStuff,_In_opt_ HICON hIcon)
int None shell32.ShellAboutW(_In_opt_ HWND hWnd,_In_ LPCTSTR szApp,_In_opt_ LPCTSTR szOtherStuff,_In_opt_ HICON hIcon)
int None shell32.Shell_GetCachedImageIndexA(_In_ PCWSTR pwszIconPath,int iIconIndex None,UINT uIconFlags None)
int None shell32.Shell_GetCachedImageIndex(_In_ PCWSTR pwszIconPath,int iIconIndex None,UINT uIconFlags None)
int None shell32.Shell_GetCachedImageIndexW(_In_ PCWSTR pwszIconPath,int iIconIndex None,UINT uIconFlags None)
int None shell32.SHFileOperationA(_Inout_ LPSHFILEOPSTRUCT lpFileOp)
int None shell32.SHFileOperation(_Inout_ LPSHFILEOPSTRUCT lpFileOp)
int None shell32.SHFileOperationW(_Inout_ LPSHFILEOPSTRUCT lpFileOp)
int None shell32.SHGetIconOverlayIndexA(_In_opt_ LPCTSTR pszIconPath,int iIconIndex None)
int None shell32.SHGetIconOverlayIndex(_In_opt_ LPCTSTR pszIconPath,int iIconIndex None)
int None shell32.SHGetIconOverlayIndexW(_In_opt_ LPCTSTR pszIconPath,int iIconIndex None)
int None shell32.SHHandleUpdateImage(_In_ PCIDLIST_ABSOLUTE pidlExtra)
int None shell32.SHMapPIDLToSystemImageListIndex(_In_ IShellFolder *psf,_In_ PCUITEMID_CHILD pidl,_Out_opt_ int *piIndex)
int None shlwapi.GetMenuPosFromID(_In_ HMENU hmenu,UINT id None)
int None shlwapi.PathCommonPrefixA(_In_ LPCTSTR pszFile1,_In_ LPCTSTR pszFile2,_Out_opt_ LPTSTR pszPath)
int None shlwapi.PathCommonPrefix(_In_ LPCTSTR pszFile1,_In_ LPCTSTR pszFile2,_Out_opt_ LPTSTR pszPath)
int None shlwapi.PathCommonPrefixW(_In_ LPCTSTR pszFile1,_In_ LPCTSTR pszFile2,_Out_opt_ LPTSTR pszPath)
int None shlwapi.PathGetDriveNumberA(_In_ LPCTSTR lpsz)
int None shlwapi.PathGetDriveNumber(_In_ LPCTSTR lpsz)
int None shlwapi.PathGetDriveNumberW(_In_ LPCTSTR lpsz)
int None shlwapi.PathParseIconLocationA(_Inout_ LPTSTR pszIconFile)
int None shlwapi.PathParseIconLocation(_Inout_ LPTSTR pszIconFile)
int None shlwapi.PathParseIconLocationW(_Inout_ LPTSTR pszIconFile)
int None shlwapi.SHAnsiToAnsi(_In_ LPCSTR pszSrc,_Out_ LPWSTR pszDst,int cchBuf None)
int None shlwapi.SHAnsiToUnicode(_In_ PCSTR pszSrc,_Out_ PWSTR pwszDst,int cwchBuf None)
int None shlwapi.ShellMessageBoxA(_In_ HINSTANCE hInst,_In_ HWND hWnd,_In_ LPCTSTR pszMsg,_In_ LPCTSTR pszTitle,_In_ UINT fuStyle,_In_ ... None)
int None shlwapi.ShellMessageBox(_In_ HINSTANCE hInst,_In_ HWND hWnd,_In_ LPCTSTR pszMsg,_In_ LPCTSTR pszTitle,_In_ UINT fuStyle,_In_ ... None)
int None shlwapi.ShellMessageBoxW(_In_ HINSTANCE hInst,_In_ HWND hWnd,_In_ LPCTSTR pszMsg,_In_ LPCTSTR pszTitle,_In_ UINT fuStyle,_In_ ... None)
int None shlwapi.SHMessageBoxCheckA(_In_opt_ HWND hwnd,_In_ LPCTSTR pszText,_In_ LPCTSTR pszCaption,UINT uType None,int iDefault None,_In_ LPCTSTR pszRegVal)
int None shlwapi.SHMessageBoxCheck(_In_opt_ HWND hwnd,_In_ LPCTSTR pszText,_In_ LPCTSTR pszCaption,UINT uType None,int iDefault None,_In_ LPCTSTR pszRegVal)
int None shlwapi.SHMessageBoxCheckW(_In_opt_ HWND hwnd,_In_ LPCTSTR pszText,_In_ LPCTSTR pszCaption,UINT uType None,int iDefault None,_In_ LPCTSTR pszRegVal)
int None shlwapi.SHRegGetIntW(_In_ HKEY hk,_In_ LPCWSTR szKey,_In_ int nDefault)
int None shlwapi.SHUnicodeToAnsi(_In_ PCWSTR pwszSrc,_Out_ PSTR pszDst,int cchBuf None)
int None shlwapi.SHUnicodeToUnicode(_In_ PCWSTR pwzSrc,_Out_ PWSTR pwzDst,int cwchBuf None)
int None shlwapi.StrCmpCA(_Out_ LPCTSTR lpStr1,_Out_ LPCTSTR lpStr2)
int None shlwapi.StrCmpC(_Out_ LPCTSTR lpStr1,_Out_ LPCTSTR lpStr2)
int None shlwapi.StrCmpCW(_Out_ LPCTSTR lpStr1,_Out_ LPCTSTR lpStr2)
int None shlwapi.StrCmpICA(_In_ LPCTSTR lpStr1,_In_ LPCTSTR lpStr2)
int None shlwapi.StrCmpIC(_In_ LPCTSTR lpStr1,_In_ LPCTSTR lpStr2)
int None shlwapi.StrCmpICW(_In_ LPCTSTR lpStr1,_In_ LPCTSTR lpStr2)
int None shlwapi.StrCmpI(_In_ PCTSTR psz1,_In_ PCTSTR psz2)
int None shlwapi.StrCmp(_In_ PCTSTR psz1,_In_ PCTSTR psz2)
int None shlwapi.StrCmpIW(_In_ PCTSTR psz1,_In_ PCTSTR psz2)
int None shlwapi.StrCmpLogicalW(_In_ PCWSTR psz1,_In_ PCWSTR psz2)
int None shlwapi.StrCmpNA(_In_ PCTSTR psz1,_In_ PCTSTR psz2,_In_ int nChar)
int None shlwapi.StrCmpNCA(_In_ LPCTSTR pszStr1,_In_ LPCTSTR pszStr2,int nChar None)
int None shlwapi.StrCmpNC(_In_ LPCTSTR pszStr1,_In_ LPCTSTR pszStr2,int nChar None)
int None shlwapi.StrCmpNCW(_In_ LPCTSTR pszStr1,_In_ LPCTSTR pszStr2,int nChar None)
int None shlwapi.StrCmpNIA(_In_ PCTSTR psz1,_In_ PCTSTR psz2,_In_ int nChar)
int None shlwapi.StrCmpNICA(_In_ LPCTSTR pszStr1,_In_ LPCTSTR pszStr2,int nChar None)
int None shlwapi.StrCmpNIC(_In_ LPCTSTR pszStr1,_In_ LPCTSTR pszStr2,int nChar None)
int None shlwapi.StrCmpNICW(_In_ LPCTSTR pszStr1,_In_ LPCTSTR pszStr2,int nChar None)
int None shlwapi.StrCmpNI(_In_ PCTSTR psz1,_In_ PCTSTR psz2,_In_ int nChar)
int None shlwapi.StrCmpN(_In_ PCTSTR psz1,_In_ PCTSTR psz2,_In_ int nChar)
int None shlwapi.StrCmpNIW(_In_ PCTSTR psz1,_In_ PCTSTR psz2,_In_ int nChar)
int None shlwapi.StrCmpNW(_In_ PCTSTR psz1,_In_ PCTSTR psz2,_In_ int nChar)
int None shlwapi.StrCmpW(_In_ PCTSTR psz1,_In_ PCTSTR psz2)
int None shlwapi.StrCSpnA(_In_ PCTSTR pszStr,_In_ PCTSTR pszSet)
int None shlwapi.StrCSpnIA(_In_ PCTSTR pszStr,_In_ PCTSTR pszSet)
int None shlwapi.StrCSpnI(_In_ PCTSTR pszStr,_In_ PCTSTR pszSet)
int None shlwapi.StrCSpn(_In_ PCTSTR pszStr,_In_ PCTSTR pszSet)
int None shlwapi.StrCSpnIW(_In_ PCTSTR pszStr,_In_ PCTSTR pszSet)
int None shlwapi.StrCSpnW(_In_ PCTSTR pszStr,_In_ PCTSTR pszSet)
int None shlwapi.StrFromTimeIntervalA(_Out_ PTSTR pszOut,UINT cchMax None,DWORD dwTimeMS None,int digits None)
int None shlwapi.StrFromTimeInterval(_Out_ PTSTR pszOut,UINT cchMax None,DWORD dwTimeMS None,int digits None)
int None shlwapi.StrFromTimeIntervalW(_Out_ PTSTR pszOut,UINT cchMax None,DWORD dwTimeMS None,int digits None)
int None shlwapi.StrSpnA(_In_ PCTSTR psz,_In_ PCTSTR pszSet)
int None shlwapi.StrSpn(_In_ PCTSTR psz,_In_ PCTSTR pszSet)
int None shlwapi.StrSpnW(_In_ PCTSTR psz,_In_ PCTSTR pszSet)
int None shlwapi.StrToIntA(_In_ PCTSTR pszSrc)
int None shlwapi.StrToInt(_In_ PCTSTR pszSrc)
int None shlwapi.StrToIntW(_In_ PCTSTR pszSrc)
int None shlwapi.UrlCompareA(_In_ PCTSTR psz1,_In_ PCTSTR psz2,BOOL fIgnoreSlash None)
int None shlwapi.UrlCompare(_In_ PCTSTR psz1,_In_ PCTSTR psz2,BOOL fIgnoreSlash None)
int None shlwapi.UrlCompareW(_In_ PCTSTR psz1,_In_ PCTSTR psz2,BOOL fIgnoreSlash None)
int None shlwapi.wnsprintfA(_Out_ PTSTR pszDest,_In_ int cchDest,_In_ PCTSTR pszFmt,_In_ ... None)
int None shlwapi.wnsprintf(_Out_ PTSTR pszDest,_In_ int cchDest,_In_ PCTSTR pszFmt,_In_ ... None)
int None shlwapi.wnsprintfW(_Out_ PTSTR pszDest,_In_ int cchDest,_In_ PCTSTR pszFmt,_In_ ... None)
int None shlwapi.wvnsprintfA(_Out_ PTSTR pszDest,_In_ int cchDest,_In_ PCTSTR pszFmt,_In_ va_list arglist)
int None shlwapi.wvnsprintf(_Out_ PTSTR pszDest,_In_ int cchDest,_In_ PCTSTR pszFmt,_In_ va_list arglist)
int None shlwapi.wvnsprintfW(_Out_ PTSTR pszDest,_In_ int cchDest,_In_ PCTSTR pszFmt,_In_ va_list arglist)
int None user32.DlgDirListA(_In_ HWND hDlg,_Inout_ LPTSTR lpPathSpec,_In_ int nIDListBox,_In_ int nIDStaticPath,_In_ UINT uFileType)
int None user32.DlgDirListComboBoxA(_In_ HWND hDlg,_Inout_ LPTSTR lpPathSpec,_In_ int nIDComboBox,_In_ int nIDStaticPath,_In_ UINT uFiletype)
int None user32.DlgDirListComboBox(_In_ HWND hDlg,_Inout_ LPTSTR lpPathSpec,_In_ int nIDComboBox,_In_ int nIDStaticPath,_In_ UINT uFiletype)
int None user32.DlgDirListComboBoxW(_In_ HWND hDlg,_Inout_ LPTSTR lpPathSpec,_In_ int nIDComboBox,_In_ int nIDStaticPath,_In_ UINT uFiletype)
int None user32.DlgDirList(_In_ HWND hDlg,_Inout_ LPTSTR lpPathSpec,_In_ int nIDListBox,_In_ int nIDStaticPath,_In_ UINT uFileType)
int None user32.DlgDirListW(_In_ HWND hDlg,_Inout_ LPTSTR lpPathSpec,_In_ int nIDListBox,_In_ int nIDStaticPath,_In_ UINT uFileType)
int None user32.GetScrollPos(_In_ HWND hWnd,_In_ int nBar)
int None user32.SetScrollInfo(_In_ HWND hwnd,_In_ int fnBar,_In_ LPCSCROLLINFO lpsi,_In_ BOOL fRedraw)
int None user32.SetScrollPos(_In_ HWND hWnd,_In_ int nBar,_In_ int nPos,_In_ BOOL bRedraw)
INT None wldap32.ber_flatten(_In_ BerElement *pBerElement,_Out_ PBERVAL *pBerVal)
INT None wldap32.ber_printf(_Inout_ BerElement *pBerElement,_In_ PCHAR fmt,_In_ ... None)
INT None wldap32.ber_scanf(_Inout_ BerElement *pBerElement,_In_ PCHAR fmt,_In_ ... None)
INT None wldap32.ldap_create_vlv_controlA(_In_ LDAP *ld,_In_ LDAPVLVInfo *Vlvinfop,_In_ char IsCritical,_Out_ LDAPControl **ctrlp)
INT None wldap32.ldap_create_vlv_control(_In_ LDAP *ld,_In_ LDAPVLVInfo *Vlvinfop,_In_ char IsCritical,_Out_ LDAPControl **ctrlp)
INT None wldap32.ldap_create_vlv_controlW(_In_ LDAP *ld,_In_ LDAPVLVInfo *Vlvinfop,_In_ char IsCritical,_Out_ LDAPControl **ctrlp)
int None wldap32.LdapUnicodeToUTF8(_In_ LPCWSTR lpSrcStr,_In_ int cchSrc,_Out_ LPSTR lpDestStr,_In_ int cchDest)
int None wldap32.LdapUTF8ToUnicode(_In_ LPCSTR lpSrcStr,_In_ int cchSrc,_Out_ LPWSTR lpDestStr,_In_ int cchDest)
int None ws2_32.closesocket(_In_ SOCKET s)
int None ws2_32.gethostname(_Out_ char *name,_In_ int namelen)
int None ws2_32.getipv4sourcefilter(_In_ SOCKET Socket,_In_ IN_ADDR Interface,_In_ IN_ADDR Group,_Out_ MULTICAST_MODE_TYPE *FilterMode,_Inout_ ULONG *SourceCount,_Out_ IN_ADDR *SourceList)
int None ws2_32.getsockopt(_In_ SOCKET s,_In_ int level,_In_ int optname,_Out_ char *optval,_Inout_ int *optlen)
int None ws2_32.ioctlsocket(_In_ SOCKET s,_In_ long cmd,_Inout_ u_long *argp)
int None ws2_32.listen(_In_ SOCKET s,_In_ int backlog)
int None ws2_32.recv(_In_ SOCKET s,_Out_ char* buf,_In_ int len,_In_ int flags)
int None ws2_32.shutdown(_In_ SOCKET s,_In_ int how)
int None ws2_32.WSACancelAsyncRequest(_In_ HANDLE hAsyncTaskHandle)
int None ws2_32.WSACleanup(void None None)
int None ws2_32.WSADuplicateSocketA(_In_ SOCKET s,_In_ DWORD dwProcessId,_Out_ LPWSAPROTOCOL_INFO lpProtocolInfo)
int None ws2_32.WSADuplicateSocket(_In_ SOCKET s,_In_ DWORD dwProcessId,_Out_ LPWSAPROTOCOL_INFO lpProtocolInfo)
int None ws2_32.WSADuplicateSocketW(_In_ SOCKET s,_In_ DWORD dwProcessId,_Out_ LPWSAPROTOCOL_INFO lpProtocolInfo)
int None ws2_32.WSAEnumNetworkEvents(_In_ SOCKET s,_In_ WSAEVENT hEventObject,_Out_ LPWSANETWORKEVENTS lpNetworkEvents)
int None ws2_32.WSAEnumProtocolsA(_In_ LPINT lpiProtocols,_Out_ LPWSAPROTOCOL_INFO lpProtocolBuffer,_Inout_ LPDWORD lpdwBufferLength)
int None ws2_32.WSAEnumProtocols(_In_ LPINT lpiProtocols,_Out_ LPWSAPROTOCOL_INFO lpProtocolBuffer,_Inout_ LPDWORD lpdwBufferLength)
int None ws2_32.WSAEnumProtocolsW(_In_ LPINT lpiProtocols,_Out_ LPWSAPROTOCOL_INFO lpProtocolBuffer,_Inout_ LPDWORD lpdwBufferLength)
int None ws2_32.WSAEventSelect(_In_ SOCKET s,_In_ WSAEVENT hEventObject,_In_ long lNetworkEvents)
int None ws2_32.__WSAFDIsSet(SOCKET fd None,fd_set *set None)
int None ws2_32.WSAGetLastError( )
#int None ws2_32.WSAGetLastError(void None None)
INT None ws2_32.WSAGetServiceClassInfoA(_In_ LPGUID lpProviderId,_In_ LPGUID lpServiceClassId,_Inout_ LPDWORD lpdwBufferLength,_Out_ LPWSASERVICECLASSINFO lpServiceClassInfo)
INT None ws2_32.WSAGetServiceClassInfo(_In_ LPGUID lpProviderId,_In_ LPGUID lpServiceClassId,_Inout_ LPDWORD lpdwBufferLength,_Out_ LPWSASERVICECLASSINFO lpServiceClassInfo)
INT None ws2_32.WSAGetServiceClassInfoW(_In_ LPGUID lpProviderId,_In_ LPGUID lpServiceClassId,_Inout_ LPDWORD lpdwBufferLength,_Out_ LPWSASERVICECLASSINFO lpServiceClassInfo)
INT None ws2_32.WSAGetServiceClassNameByClassIdA(_In_ LPGUID lpServiceClassId,_Out_ LPTSTR lpszServiceClassName,_Inout_ LPDWORD lpdwBufferLength)
INT None ws2_32.WSAGetServiceClassNameByClassId(_In_ LPGUID lpServiceClassId,_Out_ LPTSTR lpszServiceClassName,_Inout_ LPDWORD lpdwBufferLength)
INT None ws2_32.WSAGetServiceClassNameByClassIdW(_In_ LPGUID lpServiceClassId,_Out_ LPTSTR lpszServiceClassName,_Inout_ LPDWORD lpdwBufferLength)
INT None ws2_32.WSAInstallServiceClassA(_In_ LPWSASERVICECLASSINFO lpServiceClassInfo)
INT None ws2_32.WSAInstallServiceClass(_In_ LPWSASERVICECLASSINFO lpServiceClassInfo)
INT None ws2_32.WSAInstallServiceClassW(_In_ LPWSASERVICECLASSINFO lpServiceClassInfo)
int None ws2_32.WSAIoctl(_In_ SOCKET s,_In_ DWORD dwIoControlCode,_In_ LPVOID lpvInBuffer,_In_ DWORD cbInBuffer,_Out_ LPVOID lpvOutBuffer,_In_ DWORD cbOutBuffer,_Out_ LPDWORD lpcbBytesReturned,_In_ LPWSAOVERLAPPED lpOverlapped,_In_ LPWSAOVERLAPPED_COMPLETION_ROUTINE lpCompletionRoutine)
INT None ws2_32.WSALookupServiceBeginA(_In_ LPWSAQUERYSET lpqsRestrictions,_In_ DWORD dwControlFlags,_Out_ LPHANDLE lphLookup)
INT None ws2_32.WSALookupServiceBegin(_In_ LPWSAQUERYSET lpqsRestrictions,_In_ DWORD dwControlFlags,_Out_ LPHANDLE lphLookup)
INT None ws2_32.WSALookupServiceBeginW(_In_ LPWSAQUERYSET lpqsRestrictions,_In_ DWORD dwControlFlags,_Out_ LPHANDLE lphLookup)
INT None ws2_32.WSALookupServiceEnd(_In_ HANDLE hLookup)
INT None ws2_32.WSALookupServiceNextA(_In_ HANDLE hLookup,_In_ DWORD dwControlFlags,_Inout_ LPDWORD lpdwBufferLength,_Out_ LPWSAQUERYSET lpqsResults)
INT None ws2_32.WSALookupServiceNext(_In_ HANDLE hLookup,_In_ DWORD dwControlFlags,_Inout_ LPDWORD lpdwBufferLength,_Out_ LPWSAQUERYSET lpqsResults)
INT None ws2_32.WSALookupServiceNextW(_In_ HANDLE hLookup,_In_ DWORD dwControlFlags,_Inout_ LPDWORD lpdwBufferLength,_Out_ LPWSAQUERYSET lpqsResults)
int None ws2_32.WSARecvDisconnect(_In_ SOCKET s,_Out_ LPWSABUF lpInboundDisconnectData)
int None ws2_32.WSARecv(_In_ SOCKET s,_Inout_ LPWSABUF lpBuffers,_In_ DWORD dwBufferCount,_Out_ LPDWORD lpNumberOfBytesRecvd,_Inout_ LPDWORD lpFlags,_In_ LPWSAOVERLAPPED lpOverlapped,_In_ LPWSAOVERLAPPED_COMPLETION_ROUTINE lpCompletionRoutine)
INT None ws2_32.WSARemoveServiceClass(_In_ LPGUID lpServiceClassId)
int None ws2_32.WSASendDisconnect(_In_ SOCKET s,_In_ LPWSABUF lpOutboundDisconnectData)
int None ws2_32.WSASend(_In_ SOCKET s,_In_ LPWSABUF lpBuffers,_In_ DWORD dwBufferCount,_Out_ LPDWORD lpNumberOfBytesSent,_In_ DWORD dwFlags,_In_ LPWSAOVERLAPPED lpOverlapped,_In_ LPWSAOVERLAPPED_COMPLETION_ROUTINE lpCompletionRoutine)
int None ws2_32.WSASendMsg(_In_ SOCKET s,_In_ LPWSAMSG lpMsg,_In_ DWORD dwFlags,_Out_ LPDWORD lpNumberOfBytesSent,_In_ LPWSAOVERLAPPED lpOverlapped,_In_ LPWSAOVERLAPPED_COMPLETION_ROUTINE lpCompletionRoutine)
INT None ws2_32.WSASetServiceA(_In_ LPWSAQUERYSET lpqsRegInfo,_In_ WSAESETSERVICEOP essOperation,_In_ DWORD dwControlFlags)
INT None ws2_32.WSASetService(_In_ LPWSAQUERYSET lpqsRegInfo,_In_ WSAESETSERVICEOP essOperation,_In_ DWORD dwControlFlags)
INT None ws2_32.WSASetServiceW(_In_ LPWSAQUERYSET lpqsRegInfo,_In_ WSAESETSERVICEOP essOperation,_In_ DWORD dwControlFlags)
int None ws2_32.WSAStartup(_In_ WORD wVersionRequested,_Out_ LPWSADATA lpWSAData)
INT_PTR CALLBACK None.DialogProc(_In_ HWND hwndDlg,_In_ UINT uMsg,_In_ WPARAM wParam,_In_ LPARAM lParam)
INT_PTR CALLBACK None.DlgProc(HWND hDlg None,UINT message None,WPARAM wParam None,LPARAM lParam None)
INT_PTR None comctl32.PropertySheetA(LPCPROPSHEETHEADER lppsph None)
INT_PTR None comctl32.PropertySheet(LPCPROPSHEETHEADER lppsph None)
INT_PTR None comctl32.PropertySheetW(LPCPROPSHEETHEADER lppsph None)
INT_PTR WINAPI user32.DialogBoxA(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc)
INT_PTR WINAPI user32.DialogBoxIndirectA(_In_opt_ HINSTANCE hInstance,_In_ LPCDLGTEMPLATE lpTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc)
INT_PTR WINAPI user32.DialogBoxIndirect(_In_opt_ HINSTANCE hInstance,_In_ LPCDLGTEMPLATE lpTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc)
INT_PTR WINAPI user32.DialogBoxIndirectParamA(_In_opt_ HINSTANCE hInstance,_In_ LPCDLGTEMPLATE hDialogTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc,_In_ LPARAM dwInitParam)
INT_PTR WINAPI user32.DialogBoxIndirectParam(_In_opt_ HINSTANCE hInstance,_In_ LPCDLGTEMPLATE hDialogTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc,_In_ LPARAM dwInitParam)
INT_PTR WINAPI user32.DialogBoxIndirectParamW(_In_opt_ HINSTANCE hInstance,_In_ LPCDLGTEMPLATE hDialogTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc,_In_ LPARAM dwInitParam)
INT_PTR WINAPI user32.DialogBoxIndirectW(_In_opt_ HINSTANCE hInstance,_In_ LPCDLGTEMPLATE lpTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc)
INT_PTR WINAPI user32.DialogBox(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc)
INT_PTR WINAPI user32.DialogBoxParamA(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpTemplateName,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc,_In_ LPARAM dwInitParam)
INT_PTR WINAPI user32.DialogBoxParam(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpTemplateName,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc,_In_ LPARAM dwInitParam)
INT_PTR WINAPI user32.DialogBoxParamW(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpTemplateName,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc,_In_ LPARAM dwInitParam)
INT_PTR WINAPI user32.DialogBoxW(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc)
int __RPC_API None.RpcMgmtAuthorizationFn(RPC_BINDING_HANDLE ClientBinding None,ULONG RequestedMgmtOperation None,RPC_STATUS *Status None)
int RPC_ENTRY rpcrt4.UuidEqual(UUID __RPC_FAR *Uuid1,UUID __RPC_FAR *Uuid2,RPC_STATUS __RPC_FAR *Status)
int RPC_ENTRY rpcrt4.UuidIsNil(UUID __RPC_FAR *Uuid,RPC_STATUS __RPC_FAR *Status)
int WINAPI kernel32.GetGeoInfoEx(_In_ PWSTR location,_In_ GEOTYPE geoType,_Out_opt_ PWSTR geoData,_In_ int geoDataCount)
int WINAPI kernel32.GetThreadPriority(_In_ HANDLE hThread)
int WINAPI kernel32.GetUserDefaultGeoName(_Out_ LPWSTR geoName,_In_ geoNameCount int)
int WINAPI kernel32.lstrcmpA(_In_ LPCTSTR lpString1,_In_ LPCTSTR lpString2)
int WINAPI kernel32.lstrcmpiA(_In_ LPCTSTR lpString1,_In_ LPCTSTR lpString2)
int WINAPI kernel32.lstrcmpi(_In_ LPCTSTR lpString1,_In_ LPCTSTR lpString2)
int WINAPI kernel32.lstrcmp(_In_ LPCTSTR lpString1,_In_ LPCTSTR lpString2)
int WINAPI kernel32.lstrcmpiW(_In_ LPCTSTR lpString1,_In_ LPCTSTR lpString2)
int WINAPI kernel32.lstrcmpW(_In_ LPCTSTR lpString1,_In_ LPCTSTR lpString2)
int WINAPI kernel32.lstrlenA(_In_ LPCTSTR lpString)
int WINAPI kernel32.lstrlen(_In_ LPCTSTR lpString)
int WINAPI kernel32.lstrlenW(_In_ LPCTSTR lpString)
INT WINAPI lz32.GetExpandedNameA(_In_ LPTSTR lpszSource,_Out_ LPTSTR lpszBuffer)
INT WINAPI lz32.GetExpandedName(_In_ LPTSTR lpszSource,_Out_ LPTSTR lpszBuffer)
INT WINAPI lz32.GetExpandedNameW(_In_ LPTSTR lpszSource,_Out_ LPTSTR lpszBuffer)
INT WINAPI lz32.LZInit(_In_ INT hfSource)
INT WINAPI lz32.LZOpenFileA(_In_ LPTSTR lpFileName,_Out_ LPOFSTRUCT lpReOpenBuf,_In_ WORD wStyle)
INT WINAPI lz32.LZOpenFile(_In_ LPTSTR lpFileName,_Out_ LPOFSTRUCT lpReOpenBuf,_In_ WORD wStyle)
INT WINAPI lz32.LZOpenFileW(_In_ LPTSTR lpFileName,_Out_ LPOFSTRUCT lpReOpenBuf,_In_ WORD wStyle)
INT WINAPI lz32.LZRead(_In_ INT hFile,_Out_ LPSTR lpBuffer,_In_ INT cbRead)
int WINAPI None.AutoCorrectProc(LANGID langid None,const WCHAR *pszBefore,WCHAR *pszAfter None,LONG cchAfter None,LONG *pcchReplaced None)
int WINAPI None.CompareAddresses(LPADDRESS lpAddress1 None,LPADDRESS lpAddress2 None)
int WINAPI None.Dumper(HWND hX None,int intCtrlID None,HINTERNET hResource None)
int WINAPI None.EnumerateCacheOld(HWND hX None)
int WINAPI user32.DdeCmpStringHandles(_In_ HSZ hsz1,_In_ HSZ hsz2)
int WINAPI user32.GetDlgCtrlID(_In_ HWND hwndCtl)
int WINAPI user32.GetKeyboardLayoutList(_In_ int nBuff,_Out_ HKL *lpList)
int WINAPI user32.GetKeyNameTextA(_In_ LONG lParam,_Out_ LPTSTR lpString,_In_ int cchSize)
int WINAPI user32.GetKeyNameText(_In_ LONG lParam,_Out_ LPTSTR lpString,_In_ int cchSize)
int WINAPI user32.GetKeyNameTextW(_In_ LONG lParam,_Out_ LPTSTR lpString,_In_ int cchSize)
int WINAPI user32.GetMenuItemCount(_In_opt_ HMENU hMenu)
int WINAPI user32.GetMenuStringA(_In_ HMENU hMenu,_In_ UINT uIDItem,_Out_opt_ LPTSTR lpString,_In_ int nMaxCount,_In_ UINT uFlag)
int WINAPI user32.GetMenuString(_In_ HMENU hMenu,_In_ UINT uIDItem,_Out_opt_ LPTSTR lpString,_In_ int nMaxCount,_In_ UINT uFlag)
int WINAPI user32.GetMenuStringW(_In_ HMENU hMenu,_In_ UINT uIDItem,_Out_opt_ LPTSTR lpString,_In_ int nMaxCount,_In_ UINT uFlag)
int WINAPI user32.GetMouseMovePointsEx(_In_ UINT cbSize,_In_ LPMOUSEMOVEPOINT lppt,_Out_ LPMOUSEMOVEPOINT lpptBuf,_In_ int nBufPoints,_In_ DWORD resolution)
int WINAPI user32.GetPriorityClipboardFormat(_In_ UINT *paFormatPriorityList,_In_ int cFormats)
int WINAPI user32.GetSystemMetrics(_In_ int nIndex)
int WINAPI user32.GetWindowTextA(_In_ HWND hWnd,_Out_ LPTSTR lpString,_In_ int nMaxCount)
int WINAPI user32.GetWindowText(_In_ HWND hWnd,_Out_ LPTSTR lpString,_In_ int nMaxCount)
int WINAPI user32.GetWindowTextLengthA(_In_ HWND hWnd)
int WINAPI user32.GetWindowTextLength(_In_ HWND hWnd)
int WINAPI user32.GetWindowTextLengthW(_In_ HWND hWnd)
int WINAPI user32.GetWindowTextW(_In_ HWND hWnd,_Out_ LPTSTR lpString,_In_ int nMaxCount)
int WINAPI user32.InternalGetWindowText(_In_ HWND hWnd,_Out_ LPWSTR lpString,_In_ int nMaxCount)
int WINAPI user32.LoadStringA(_In_opt_ HINSTANCE hInstance,_In_ UINT uID,_Out_ LPTSTR lpBuffer,_In_ int nBufferMax)
int WINAPI user32.LoadString(_In_opt_ HINSTANCE hInstance,_In_ UINT uID,_Out_ LPTSTR lpBuffer,_In_ int nBufferMax)
int WINAPI user32.LoadStringW(_In_opt_ HINSTANCE hInstance,_In_ UINT uID,_Out_ LPTSTR lpBuffer,_In_ int nBufferMax)
int WINAPI user32.LookupIconIdFromDirectoryEx(_In_ PBYTE presbits,_In_ BOOL fIcon,_In_ int cxDesired,_In_ int cyDesired,_In_ UINT Flags)
int WINAPI user32.LookupIconIdFromDirectory(_In_ PBYTE presbits,_In_ BOOL fIcon)
int WINAPI user32.MenuItemFromPoint(_In_opt_ HWND hWnd,_In_ HMENU hMenu,_In_ POINT ptScreen)
int WINAPI user32.MessageBoxA(_In_opt_ HWND hWnd,_In_opt_ LPCTSTR lpText,_In_opt_ LPCTSTR lpCaption,_In_ UINT uType)
int WINAPI user32.MessageBoxExA(_In_opt_ HWND hWnd,_In_opt_ LPCTSTR lpText,_In_opt_ LPCTSTR lpCaption,_In_ UINT uType,_In_ WORD wLanguageId)
int WINAPI user32.MessageBoxEx(_In_opt_ HWND hWnd,_In_opt_ LPCTSTR lpText,_In_opt_ LPCTSTR lpCaption,_In_ UINT uType,_In_ WORD wLanguageId)
int WINAPI user32.MessageBoxExW(_In_opt_ HWND hWnd,_In_opt_ LPCTSTR lpText,_In_opt_ LPCTSTR lpCaption,_In_ UINT uType,_In_ WORD wLanguageId)
int WINAPI user32.MessageBox(_In_opt_ HWND hWnd,_In_opt_ LPCTSTR lpText,_In_opt_ LPCTSTR lpCaption,_In_ UINT uType)
int WINAPI user32.MessageBoxW(_In_opt_ HWND hWnd,_In_opt_ LPCTSTR lpText,_In_opt_ LPCTSTR lpCaption,_In_ UINT uType)
int WINAPI user32.TranslateAcceleratorA(_In_ HWND hWnd,_In_ HACCEL hAccTable,_In_ LPMSG lpMsg)
int WINAPI user32.TranslateAccelerator(_In_ HWND hWnd,_In_ HACCEL hAccTable,_In_ LPMSG lpMsg)
int WINAPI user32.TranslateAcceleratorW(_In_ HWND hWnd,_In_ HACCEL hAccTable,_In_ LPMSG lpMsg)
int WINAPI user32.wvsprintfA(_Out_ LPTSTR lpOutput,_In_ LPCTSTR lpFmt,_In_ va_list arglist)
int WINAPI user32.wvsprintf(_Out_ LPTSTR lpOutput,_In_ LPCTSTR lpFmt,_In_ va_list arglist)
int WINAPI user32.wvsprintfW(_Out_ LPTSTR lpOutput,_In_ LPCTSTR lpFmt,_In_ va_list arglist)
int WSAAPI fwpuclnt.WSARevertImpersonation(void None None)
int WSAAPI None.NSPCleanup(_In_ LPGUID lpProviderId)
int WSAAPI None.NSPGetServiceClassInfo(_In_ LPGUID lpProviderId,_Inout_ LPDWORD lpdwBufSize,_Inout_ LPWSASERVICECLASSINFOW lpServiceClassInfo)
int WSAAPI None.NSPInstallServiceClass(_In_ LPGUID lpProviderId,_In_ LPWSASERVICECLASSINFOW lpServiceClassInfo)
int WSAAPI None.NSPIoctl(_In_ HANDLE hLookup,_In_ DWORD dwControlCode,_In_ LPVOID lpvInBuffer,_Inout_ DWORD cbInBuffer,_Out_ LPVOID lpvOutBuffer,_In_ DWORD cbOutBuffer,_Out_ LPDWORD lpcbBytesReturned,_In_ LPWSACOMPLETION lpCompletion,_In_ LPWSATHREADID lpThreadId)
int WSAAPI None.NSPLookupServiceBegin(_In_ LPGUID lpProviderId,_In_ LPWSAQUERYSETW lpqsRestrictions,_In_ LPWSASERVICECLASSINFOW lpServiceClassInfo,_In_ DWORD dwControlFlags,_Out_ LPHANDLE lphLookup)
int WSAAPI None.NSPLookupServiceEnd(_In_ HANDLE hLookup)
int WSAAPI None.NSPLookupServiceNext(_In_ HANDLE hLookup,_In_ DWORD dwControlFlags,_Inout_ LPDWORD lpdwBufferLength,_Out_ LPWSAQUERYSET lpqsResults)
int WSAAPI None.NSPRemoveServiceClass(_In_ LPGUID lpProviderId,_In_ LPGUID lpServiceClassId)
int WSAAPI None.NSPSetService(_In_ LPGUID lpProviderId,_In_ LPWSASERVICECLASSINFOW lpServiceClassInfo,_In_ LPWSAQUERYSETW lpqsRegInfo,_In_ WSAESETSERVICEOP essOperation,_In_ DWORD dwControlFlags)
int WSAAPI None.NSPv2Cleanup(_In_ LPGUID lpProviderId,_In_ LPVOID pvClientSessionArg)
int WSAAPI None.NSPv2ClientSessionRundown(_In_ LPGUID lpProviderId,_In_ LPVOID pvClientSessionArg)
int WSAAPI None.NSPv2LookupServiceBegin(_In_ LPGUID lpProviderId,_In_ LPWSAQUERYSET2W lpqsRestrictions,_In_ DWORD dwControlFlags,_Out_ LPVOID lpvClientSessionArg,_Out_ LPHANDLE lphLookup)
int WSAAPI None.NSPv2LookupServiceEnd(_In_ HANDLE hLookup)
int WSAAPI None.NSPv2LookupServiceNextEx(_In_ HANDLE hAsyncCall,_In_ HANDLE hLookup,_In_ DWORD dwControlFlags,_Inout_ LPDWORD lpdwBufferLength,_Out_ LPWSAQUERYSET2W lpqsResults)
int WSAAPI None.NSPv2SetServiceEx(_In_ HANDLE hAsyncCall,_In_ LPGUID lpProviderId,_In_ LPWSAQUERYSET2W lpqsRegInfo,_In_ WSAESETSERVICEOP essOperation,_In_ DWORD dwControlFlags,_In_ LPVOID lpvClientSessionArg)
int WSAAPI None.NSPv2Startup(_In_ LPGUID lpProviderId,_In_ LPVOID *ppvClientSessionArg)
int WSAAPI None.WSANSPIoctl(_In_ HANDLE hLookup,_In_ DWORD dwControlCode,_In_ LPVOID lpvInBuffer,_Inout_ DWORD cbInBuffer,_Out_ LPVOID lpvOutBuffer,_In_ DWORD cbOutBuffer,_Out_ LPDWORD lpcbBytesReturned,_In_ LPWSACOMPLETION lpCompletion)
int WSAAPI ws2_32.GetAddrInfoExCancel(_In_ LPHANDLE lpHandle)
int WSAAPI ws2_32.GetAddrInfoExOverlappedResult(LPOVERLAPPED lpOverlapped None)
int WSAAPI ws2_32.GetHostNameW(_Out_ PWSTR name,_In_ int namelen)
INT WSAAPI ws2_32.InetPtonA or inet_pton(_In_ INT Family,_In_ PCTSTR pszAddrString,_Out_ PVOID pAddrBuf)
INT WSAAPI ws2_32.InetPton(_In_ INT Family,_In_ PCTSTR pszAddrString,_Out_ PVOID pAddrBuf)
INT WSAAPI ws2_32.InetPtonW(_In_ INT Family,_In_ PCTSTR pszAddrString,_Out_ PVOID pAddrBuf)
INT WSAAPI ws2_32.WSAAddressToStringA(_In_ LPSOCKADDR lpsaAddress,_In_ DWORD dwAddressLength,_In_opt_ LPWSAPROTOCOL_INFO lpProtocolInfo,_Inout_ LPTSTR lpszAddressString,_Inout_ LPDWORD lpdwAddressStringLength)
INT WSAAPI ws2_32.WSAAddressToString(_In_ LPSOCKADDR lpsaAddress,_In_ DWORD dwAddressLength,_In_opt_ LPWSAPROTOCOL_INFO lpProtocolInfo,_Inout_ LPTSTR lpszAddressString,_Inout_ LPDWORD lpdwAddressStringLength)
INT WSAAPI ws2_32.WSAAddressToStringW(_In_ LPSOCKADDR lpsaAddress,_In_ DWORD dwAddressLength,_In_opt_ LPWSAPROTOCOL_INFO lpProtocolInfo,_Inout_ LPTSTR lpszAddressString,_Inout_ LPDWORD lpdwAddressStringLength)
INT WSAAPI ws2_32.WSAEnumNameSpaceProvidersA(_Inout_ LPDWORD lpdwBufferLength,_Out_ LPWSANAMESPACE_INFO lpnspBuffer)
INT WSAAPI ws2_32.WSAEnumNameSpaceProviders(_Inout_ LPDWORD lpdwBufferLength,_Out_ LPWSANAMESPACE_INFO lpnspBuffer)
INT WSAAPI ws2_32.WSAEnumNameSpaceProvidersW(_Inout_ LPDWORD lpdwBufferLength,_Out_ LPWSANAMESPACE_INFO lpnspBuffer)
int WSAAPI ws2_32.WSAHtonl(_In_ SOCKET s,_In_ u_long hostlong,_Out_ u_long *lpnetlong)
int WSAAPI ws2_32.WSAHtons(_In_ SOCKET s,_In_ u_short hostshort,_Out_ u_short *lpnetshort)
int WSAAPI ws2_32.WSANtohl(_In_ SOCKET s,_In_ u_long netlong,_Out_ u_long *lphostlong)
int WSAAPI ws2_32.WSANtohs(_In_ SOCKET s,_In_ u_short netshort,_Out_ u_short *lphostshort)
int WSAAPI ws2_32.WSAPoll(_Inout_ WSAPOLLFD fdarray[],_In_ ULONG nfds,_In_ INT timeout)
int WSAAPI ws2_32.WSAProviderConfigChange(_Inout_ LPHANDLE lpNotificationHandle,_In_ LPWSAOVERLAPPED lpOverlapped,_In_ LPWSAOVERLAPPED_COMPLETION_ROUTINE lpCompletionRoutine)
INT WSAAPI ws2_32.WSAStringToAddressA(_In_ LPTSTR AddressString,_In_ INT AddressFamily,_In_opt_ LPWSAPROTOCOL_INFO lpProtocolInfo,_Out_ LPSOCKADDR lpAddress,_Inout_ LPINT lpAddressLength)
INT WSAAPI ws2_32.WSAStringToAddress(_In_ LPTSTR AddressString,_In_ INT AddressFamily,_In_opt_ LPWSAPROTOCOL_INFO lpProtocolInfo,_Out_ LPSOCKADDR lpAddress,_Inout_ LPINT lpAddressLength)
INT WSAAPI ws2_32.WSAStringToAddressW(_In_ LPTSTR AddressString,_In_ INT AddressFamily,_In_opt_ LPWSAPROTOCOL_INFO lpProtocolInfo,_Out_ LPSOCKADDR lpAddress,_Inout_ LPINT lpAddressLength)
int WSAAPI ws2_32.WSCInstallNamespace32(_In_ LPWSTR lpszIdentifier,_In_ LPWSTR lpszPathName,_In_ DWORD dwNameSpace,_In_ DWORD dwVersion,_In_ LPGUID lpProviderId)
int WSAAPI ws2_32.WSCInstallNameSpaceEx32(_In_ LPWSTR lpszIdentifier,_In_ LPWSTR lpszPathName,_In_ DWORD dwNameSpace,_In_ DWORD dwVersion,_In_ LPGUID lpProviderId,_In_ LPBLOB lpProviderInfo)
int WSAAPI ws2_32.WSCInstallNameSpaceEx(_In_ LPWSTR lpszIdentifier,_In_ LPWSTR lpszPathName,_In_ DWORD dwNameSpace,_In_ DWORD dwVersion,_In_ LPGUID lpProviderId,_In_ LPBLOB lpProviderInfo)
INT WSPAPI None.WPUCloseThread(_In_ LPWSATHREADID lpThreadId,_Out_ LPINT lpErrno)
INT WSPAPI ws2_32.WSAEnumNameSpaceProvidersExA(_Inout_ LPDWORD lpdwBufferLength,_Out_ LPWSANAMESPACE_INFOEX lpnspBuffer)
INT WSPAPI ws2_32.WSAEnumNameSpaceProvidersEx(_Inout_ LPDWORD lpdwBufferLength,_Out_ LPWSANAMESPACE_INFOEX lpnspBuffer)
INT WSPAPI ws2_32.WSAEnumNameSpaceProvidersExW(_Inout_ LPDWORD lpdwBufferLength,_Out_ LPWSANAMESPACE_INFOEX lpnspBuffer)
INT WSPAPI ws2_32.WSAProviderCompleteAsyncCall(HANDLE hAsyncCall None,INT iRetCode None)
int WSPAPI ws2_32.WSCDeinstallProvider32(_In_ LPGUID lpProviderId,_Out_ LPINT lpErrno)
int WSPAPI ws2_32.WSCDeinstallProvider(_In_ LPGUID lpProviderId,_Out_ LPINT lpErrno)
int WSPAPI ws2_32.WSCEnableNSProvider32(_In_ LPGUID lpProviderId,_In_ BOOL fEnable)
int WSPAPI ws2_32.WSCEnableNSProvider(_In_ LPGUID lpProviderId,_In_ BOOL fEnable)
INT WSPAPI ws2_32.WSCEnumNameSpaceProviders32(_Inout_ LPDWORD lpdwBufferLength,_Out_ LPWSANAMESPACE_INFOW lpnspBuffer)
INT WSPAPI ws2_32.WSCEnumNameSpaceProvidersEx32(_Inout_ LPDWORD lpdwBufferLength,_Out_ LPWSANAMESPACE_INFOEXW lpnspBuffer)
int WSPAPI ws2_32.WSCEnumProtocols32(_In_ LPINT lpiProtocols,_Out_ LPWSAPROTOCOL_INFOW lpProtocolBuffer,_Inout_ LPDWORD lpdwBufferLength,_Out_ LPINT lpErrno)
int WSPAPI ws2_32.WSCEnumProtocols(_In_ LPINT lpiProtocols,_Out_ LPWSAPROTOCOL_INFOW lpProtocolBuffer,_Inout_ LPDWORD lpdwBufferLength,_Out_ LPINT lpErrno)
int WSPAPI ws2_32.WSCGetApplicationCategory(_In_ LPCWSTR Path,_In_ DWORD PathLength,_In_ LPCWSTR Extra,_In_ DWORD ExtraLength,_Out_ DWORD *pPermittedLspCategories,_Out_ LPINT lpErrno)
int WSPAPI ws2_32.WSCGetProviderInfo32(_In_ LPGUID lpProviderId,_In_ WSC_PROVIDER_INFO_TYPE InfoType,_Out_ PBYTE Info,_Inout_ size_t *InfoSize,_In_ DWORD Flags,_Out_ LPINT lpErrno)
int WSPAPI ws2_32.WSCGetProviderInfo(_In_ LPGUID lpProviderId,_In_ WSC_PROVIDER_INFO_TYPE InfoType,_Out_ PBYTE Info,_Inout_ size_t *InfoSize,_In_ DWORD Flags,_Out_ LPINT lpErrno)
int WSPAPI ws2_32.WSCGetProviderPath32(_In_ LPGUID lpProviderId,_Out_ LPWSTR lpszProviderDllPath,_Inout_ LPINT lpProviderDllPathLen,_Out_ LPINT lpErrno)
int WSPAPI ws2_32.WSCGetProviderPath(_In_ LPGUID lpProviderId,_Out_ LPWSTR lpszProviderDllPath,_Inout_ LPINT lpProviderDllPathLen,_Out_ LPINT lpErrno)
int WSPAPI ws2_32.WSCInstallNameSpace(_In_ LPWSTR lpszIdentifier,_In_ LPWSTR lpszPathName,_In_ DWORD dwNameSpace,_In_ DWORD dwVersion,_In_ LPGUID lpProviderId)
int WSPAPI ws2_32.WSCSetApplicationCategory(_In_ LPCWSTR Path,_In_ DWORD PathLength,_In_ LPCWSTR Extra,_In_ DWORD ExtraLength,_In_ DWORD PermittedLspCategories,_Out_ DWORD *pPrevPermLspCat,_Out_ LPINT lpErrno)
int WSPAPI ws2_32.WSCSetProviderInfo32(_In_ LPGUID lpProviderId,_In_ WSC_PROVIDER_INFO_TYPE InfoType,_In_ PBYTE Info,_In_ size_t InfoSize,_In_ DWORD Flags,_Out_ LPINT lpErrno)
int WSPAPI ws2_32.WSCSetProviderInfo(_In_ LPGUID lpProviderId,_In_ WSC_PROVIDER_INFO_TYPE InfoType,_In_ PBYTE Info,_In_ size_t InfoSize,_In_ DWORD Flags,_Out_ LPINT lpErrno)
int WSPAPI ws2_32.WSCUninstallNamespace32(_In_ LPGUID lpProviderId)
int WSPAPI ws2_32.WSCUnInstallNameSpace(_In_ LPGUID lpProviderId)
int WSPAPI ws2_32.WSCWriteNameSpaceOrder32(_In_ LPGUID lpProviderId,_In_ DWORD dwNumberOfEntries)
int WSPAPI ws2_32.WSCWriteNameSpaceOrder(_In_ LPGUID lpProviderId,_In_ DWORD dwNumberOfEntries)
int WSPAPI ws2_32.WSCWriteProviderOrder32(_In_ LPDWORD lpwdCatalogEntryId,_In_ DWORD dwNumberOfEntries)
int WSPAPI ws2_32.WSCWriteProviderOrder(_In_ LPDWORD lpwdCatalogEntryId,_In_ DWORD dwNumberOfEntries)
IOrderedDictionary None None.ExtractValues(Control container None)
IPermission None None.Intersect(IPermission target None)
IPermission None None.Union(IPermission target None)
IQueryable None None.CreateQuery(Expression expression None)
IQueryable None None.GetQueryable(IQueryable source None)
IQueryableTElement None None.CreateQueryTElement(Expression expression None)
IRawElementProviderSimple None None.GetOverrideProviderForHwnd(IntPtr hwnd None)
IStream None None.v_GetViewStream(LPCITEMIDLIST pidl None,DWORD grfMode None,LPCWSTR pwszName None)
JET_ERR JET_API None.JetBeginExternalBackup(__in JET_GRBIT grbit)
JET_ERR JET_API None.JetBeginExternalBackupInstance(__in JET_INSTANCE instance,__in JET_GRBIT grbit)
JET_ERR JET_API None.JetBeginSession(__in JET_INSTANCE instance,__out JET_SESID* psesid,__in_opt JET_PCSTR szUserName,__in_opt JET_PCSTR szPassword)
JET_ERR JET_API None.JetCloseTable(__in JET_SESID sesid,__in JET_TABLEID tableid)
JET_ERR JET_API None.JetCreateTableColumnIndex3(__in JET_SESID sesid,__in JET_DBID dbid,__in_out JET_TABLECREATE3* ptablecreate)
JET_ERR JET_API None.JetCreateTableColumnIndex(__in JET_SESID sesid,__in JET_DBID dbid,__in_out JET_TABLECREATE* ptablecreate)
JET_ERR JET_API None.JetDupSession(__in JET_SESID sesid,__out JET_SESID* psesid)
JET_ERR JET_API None.JetEndExternalBackup(void None None)
JET_ERR JET_API None.JetExternalRestore2(__in JET_PSTR szCheckpointFilePath,__in JET_PSTR szLogPath,__in_opt JET_RSTMAP* rgrstmap,__in long crstfilemap,__in JET_PSTR szBackupLogPath,__in_out JET_LOGINFO* pLogInfo,__in_opt JET_PSTR szTargetInstanceName,__in_opt JET_PSTR szTargetInstanceLogPath,__in_opt JET_PSTR szTargetInstanceCheckpointPath,__in JET_PFNSTATUS pfn)
JET_ERR JET_API None.JetExternalRestore(__in JET_PSTR szCheckpointFilePath,__in JET_PSTR szLogPath,__in_opt JET_RSTMAP* rgrstmap,__in long crstfilemap,__in JET_PSTR szBackupLogPath,__in long genLow,__in long genHigh,__in JET_PFNSTATUS pfn)
JET_ERR JET_API None.JetInit(__in_out_opt JET_INSTANCE* pinstance)
JET_ERR JET_API None.JetRollback(__in JET_SESID sesid,__in JET_GRBIT grbit)
JET_ERR JET_API None.JetStopService(void None None)
JET_ERR JET_API None.JetTerm(__in JET_INSTANCE instance)
KAFFINITY None None.KeQueryActiveProcessors(void None None)
KIRQL None None.KeAcquireInterruptSpinLock(_Inout_ PKINTERRUPT Interrupt)
KIRQL None None.KeAcquireSpinLockForDpc(_Inout_ PKSPIN_LOCK SpinLock)
KIRQL None None.KeAcquireSpinLockRaiseToDpc(_Inout_ PKSPIN_LOCK SpinLock)
KIRQL None None.KeGetCurrentIrql(void None None)
KIRQL None None.KeRaiseIrqlToDpcLevel(void None None)
KPRIORITY None None.KeQueryPriorityThread(_In_ PKTHREAD Thread)
KPROCESSOR_MODE None None.WdfRequestGetRequestorMode(_In_ WDFREQUEST Request)
LANGID None kernel32.GetSystemDefaultLangID(void None None)
LANGID None kernel32.GetSystemDefaultUILanguage(void None None)
LANGID None kernel32.GetThreadUILanguage(void None None)
LANGID None kernel32.GetUserDefaultLangID(void None None)
LANGID None kernel32.GetUserDefaultUILanguage(void None None)
LANGID None kernel32.SetThreadUILanguage(_In_ LANGID LangId)
LANGID None msi.MsiGetLanguage(_In_ MSIHANDLE hInstall)
LARGE_INTEGER None hal.KeQueryPerformanceCounter(_Out_opt_ PLARGE_INTEGER PerformanceFrequency)
LCID None kernel32.ConvertDefaultLocale(_In_ LCID Locale)
LCID None kernel32.GetSystemDefaultLCID(void None None)
LCID None kernel32.GetThreadLocale(void None None)
LCID None kernel32.GetUserDefaultLCID(void None None)
LCID None kernel32.LocaleNameToLCID(_In_ LPCWSTR lpName,_In_ DWORD dwFlags)
LCID None nlsmap.DownlevelGetParentLocaleLCID(_In_ LCID Locale)
LCID None nlsmap.DownlevelLocaleNameToLCID(_In_ LPWSTR lpName,_In_ DWORD dwFlags)
LONG64 None None.MultiplyExtract128(_In_ LONG64 Multiplier,_In_ LONG64 Multiplicand,_In_ BYTE Shift)
LONG64 WINAPI None.Multiply128(_In_ LONG64 Multiplier,_In_ LONG64 Multiplicand,_Out_ LONG64 *HighProduct)
LONG CALLBACK None.DllCallbackProc(DWORD_PTR dwObjectID None,DWORD dwObjectType None,LPVOID lpParams None,DWORD dwSize None)
LONG CALLBACK None.FMExtensionProc(HWND hwnd None,WORD wMsg None,LONG lParam None)
LONG CALLBACK None.FMExtensionProcW(HWND hwnd None,WORD wMsg None,LONG lParam None)
long double None.strtold(const char *nptr,char **endptr None)
LONGLONG None None.AlignDown(LONGLONG ll None,LONG lAlign None)
LONGLONG None None.AlignUp(LONGLONG ll None,LONG lAlign None)
LONGLONG None None.GetCorrelatedPhysicalTime([out] PLONGLONG SystemTime)
LONGLONG None None.GetCorrelatedTime([out] PLONGLONG SystemTime)
LONGLONG None None.Int32x32To64([in] LONG Multiplier,[in] LONG Multiplicand)
LONGLONG None None.Int64ShraMod32([in] LONGLONG Value,[in] DWORD ShiftCount)
LONGLONG None propsys.PropVariantToInt64WithDefault(_In_ REFPROPVARIANT propvarIn,_In_ LONGLONG llDefault)
LONGLONG None propsys.VariantToInt64WithDefault(_In_ REFVARIANT varIn,_In_ LONGLONG llDefault)
LONGLONG WINAPI mfplat.MFllMulDiv(LONGLONG a None,LONGLONG b None,LONGLONG c None,LONGLONG d None)
LONGLONG WINAPI None.MultiplyHigh(_In_ LONG64 Multiplier,_In_ LONG64 Multiplicand)
LONG None gdi32.GetBitmapBits(_In_ HBITMAP hbmp,_In_ LONG cbBuffer,_Out_ LPVOID lpvBits)
LONG None imm32.ImmGetCompositionStringA(_In_ HIMC hIMC,_In_ DWORD dwIndex,_Out_opt_ LPVOID lpBuf,_In_ DWORD dwBufLen)
LONG None imm32.ImmGetCompositionString(_In_ HIMC hIMC,_In_ DWORD dwIndex,_Out_opt_ LPVOID lpBuf,_In_ DWORD dwBufLen)
LONG None imm32.ImmGetCompositionStringW(_In_ HIMC hIMC,_In_ DWORD dwIndex,_Out_opt_ LPVOID lpBuf,_In_ DWORD dwBufLen)
LONG None None.AdvancedDocumentPropertiesA(_In_ HWND hWnd,_In_ HANDLE hPrinter,_In_ LPTSTR pDeviceName,_Out_ PDEVMODE pDevModeOutput,_In_ PDEVMODE pDevModeInput)
LONG None None.AdvancedDocumentProperties(_In_ HWND hWnd,_In_ HANDLE hPrinter,_In_ LPTSTR pDeviceName,_Out_ PDEVMODE pDevModeOutput,_In_ PDEVMODE pDevModeInput)
LONG None None.AdvancedDocumentPropertiesW(_In_ HWND hWnd,_In_ HANDLE hPrinter,_In_ LPTSTR pDeviceName,_Out_ PDEVMODE pDevModeOutput,_In_ PDEVMODE pDevModeInput)
long None None.atol(const char *str)
LONG None None.AVISaveOptionsFree(int nStreams None,LPAVICOMPRESSOPTIONS *plpOptions None)
LONG None None.CPlApplet(HWND hwndCPl None,UINT uMsg None,LPARAM lParam1 None,LPARAM lParam2 None)
LONG None None.DefScreenSaverProc(HWND hWnd None,UINT msg None,WPARAM wParam None,LPARAM lParam None)
LONG None None.DocumentPropertiesA(_In_ HWND hWnd,_In_ HANDLE hPrinter,_In_ LPTSTR pDeviceName,_Out_ PDEVMODE pDevModeOutput,_In_ PDEVMODE pDevModeInput,_In_ DWORD fMode)
LONG None None.DocumentProperties(_In_ HWND hWnd,_In_ HANDLE hPrinter,_In_ LPTSTR pDeviceName,_Out_ PDEVMODE pDevModeOutput,_In_ PDEVMODE pDevModeInput,_In_ DWORD fMode)
LONG None None.DocumentPropertiesW(_In_ HWND hWnd,_In_ HANDLE hPrinter,_In_ LPTSTR pDeviceName,_Out_ PDEVMODE pDevModeOutput,_In_ PDEVMODE pDevModeInput,_In_ DWORD fMode)
LONG None None.DrvDescribePixelFormat(DHPDEV dhpdev None,LONG iPixelFormat None,ULONG cjpfd None,PIXELFORMATDESCRIPTOR *ppfd None)
LONG None None.FltCompareInstanceAltitudes(_In_ PFLT_INSTANCE Instance1,_In_ PFLT_INSTANCE Instance2)
long None None.ftell(FILE *stream None)
long None None._InterlockedDecrement(long * lpAddend)
long None None._InterlockedExchange(long * Target,long Value None)
LONG None None.KePulseEvent(_Inout_ PRKEVENT Event,_In_ KPRIORITY Increment,_In_ BOOLEAN Wait)
LONG None None.KeReadStateEvent(_In_ PRKEVENT Event)
LONG None None.KeReadStateMutex(_In_ PRKMUTEX Mutex)
LONG None None.KeReadStateSemaphore(_In_ PRKSEMAPHORE Semaphore)
LONG None None.KeReleaseMutex(_Inout_ PRKMUTEX Mutex,_In_ BOOLEAN Wait)
LONG None None.KeReleaseSemaphore(_Inout_ PRKSEMAPHORE Semaphore,_In_ KPRIORITY Increment,_In_ LONG Adjustment,_In_ BOOLEAN Wait)
LONG None None.KeResetEvent(_Inout_ PRKEVENT Event)
LONG None None.KeSetBasePriorityThread(_Inout_ PKTHREAD Thread,_In_ LONG Increment)
LONG None None.KeSetEvent(_Inout_ PRKEVENT Event,_In_ KPRIORITY Increment,_In_ BOOLEAN Wait)
long None None.labs(long n None)
long None None._lseek(int fd None,long offset None,int origin None)
LONG None None.mmioWrite(HMMIO hmmio None,char _huge* pch,LONG cch None)
LONG None None.MyStatusProc(LPARAM lParam None,UINT Message None)
long None None.sample(... None None)
LONG None None.ScreenSaverProc(HWND hWnd None,UINT message None,WPARAM wParam None,LPARAM lParam None)
long None None.strtol(const char *nptr,char **endptr None,int base None)
long None None._tell(int handle None)
long None None.ToInt64(IFormatProvider provider None)
LONG None propsys.PropVariantToInt32WithDefault(_In_ REFPROPVARIANT propvarIn,_In_ LONG lDefault)
LONG None propsys.VariantToInt32WithDefault(_In_ REFVARIANT varIn,_In_ LONG lDefault)
LONG None scarddlg.GetOpenCardNameA(_In_ LPOPENCARDNAME pDlgStruc)
LONG None scarddlg.GetOpenCardName(_In_ LPOPENCARDNAME pDlgStruc)
LONG None scarddlg.GetOpenCardNameW(_In_ LPOPENCARDNAME pDlgStruc)
LONG None setupapi.SetupGetLineCountA(_In_ HINF InfHandle,_In_ PCTSTR Section)
LONG None setupapi.SetupGetLineCount(_In_ HINF InfHandle,_In_ PCTSTR Section)
LONG None setupapi.SetupGetLineCountW(_In_ HINF InfHandle,_In_ PCTSTR Section)
LONG None shell32.PathProcessCommand(_In_ PCWSTR pszSrc,_Out_ PWSTR pszDest,int iDestMax None,DWORD dwFlags None)
LONG None shlwapi.SHRegGetValueFromHKCUHKLM(_In_ PCWSTR pwszKey,_In_ PCWSTR pwszValue,_In_ SRRF srrfFlags,_Out_ DWORD *pdwType,_In_ LPCVOID pvData,_Inout_ DWORD *pcbData)
LONG None t2embed.TTDeleteEmbeddedFont(_In_ HANDLE hFontReference,_In_ ULONG ulFlags,_Out_ ULONG *pulStatus)
LONG None t2embed.TTEnableEmbeddingForFacename(_In_ LPSTR lpszFacename,_In_ bool bEnable)
LONG None t2embed.TTGetEmbeddedFontInfo(_In_ ULONG ulFlags,_Out_ ULONG *pulPrivStatus,_In_ ULONG ulPrivs,_Out_ ULONG *pulStatus,READEMBEDPROC lpfnReadFromStream None,_In_ LPVOID lpvReadStream,_In_ TTLOADINFO *pTTLoadInfo)
LONG None t2embed.TTGetEmbeddingType(_In_ HDC hDC,_In_ ULONG *pulPrivStatus)
LONG None t2embed.TTIsEmbeddingEnabledForFacename(_In_ LPSTR lpszFacename,_Out_ BOOL *pbEnabled)
LONG None t2embed.TTIsEmbeddingEnabled(_In_ HDC hDC,_Out_ BOOL *pbEnabled)
LONG None t2embed.TTLoadEmbeddedFont(_Out_ HANDLE *phFontReference,_In_ ULONG ulFlags,_Out_ ULONG *pulPrivStatus,_In_ ULONG ulPrivs,_Out_ ULONG *pulStatus,_In_ READEMBEDPROC lpfnReadFromStream,_In_ LPVOID lpvReadStream,_In_opt_ LPWSTR szWinFamilyName,_In_opt_ LPSTR szMacFamilyName,_In_opt_ TTLOADINFO *pTTLoadInfo)
LONG None t2embed.TTRunValidationTestsEx(_In_ HDC hDC,_In_ TTVALIDATIONTESTSPARAMSEX *pTestParam)
LONG None t2embed.TTRunValidationTests(_In_ HDC hDC,_In_ TTVALIDATIONTESTSPARAMS *pTestParam)
LONG None tapi32.lineCreateAgentA(HLINE hLine None,LPWSTR lpszAgentID None,LPWSTR lpszAgentPIN None,LPHAGENT lphAgent None)
LONG None tapi32.lineCreateAgent(HLINE hLine None,LPWSTR lpszAgentID None,LPWSTR lpszAgentPIN None,LPHAGENT lphAgent None)
LONG None tapi32.lineCreateAgentSessionA(HLINE hLine None,HAGENT hAgent None,LPWSTR lpszAgentPIN None,DWORD dwWorkingAddressID None,LPGUID lpGroupID None,LPHAGENTSESSION lphAgentSession None)
LONG None tapi32.lineCreateAgentSession(HLINE hLine None,HAGENT hAgent None,LPWSTR lpszAgentPIN None,DWORD dwWorkingAddressID None,LPGUID lpGroupID None,LPHAGENTSESSION lphAgentSession None)
LONG None tapi32.lineCreateAgentSessionW(HLINE hLine None,HAGENT hAgent None,LPWSTR lpszAgentPIN None,DWORD dwWorkingAddressID None,LPGUID lpGroupID None,LPHAGENTSESSION lphAgentSession None)
LONG None tapi32.lineCreateAgentW(HLINE hLine None,LPWSTR lpszAgentID None,LPWSTR lpszAgentPIN None,LPHAGENT lphAgent None)
LONG None tapi32.lineGetAgentInfo(HLINE hLine None,HAGENT hAgent None,LPLINEAGENTINFO lpAgentInfo None)
LONG None tapi32.lineGetAgentSessionInfo(HLINE hLine None,HAGENTSESSION hAgentSession None,LPLINEAGENTSESSIONINFO lpAgentSessionInfo None)
LONG None tapi32.lineGetQueueInfo(HLINE hLine None,DWORD dwQueueID None,LPLINEQUEUEINFO lpLineQueueInfo None)
LONG None tapi32.lineGetQueueListA(HLINE hLine None,LPGUID lpGroupID None,LPLINEQUEUELIST lpQueueList None)
LONG None tapi32.lineGetQueueList(HLINE hLine None,LPGUID lpGroupID None,LPLINEQUEUELIST lpQueueList None)
LONG None tapi32.lineGetQueueListW(HLINE hLine None,LPGUID lpGroupID None,LPLINEQUEUELIST lpQueueList None)
LONG None tapi32.lineSetAgentMeasurementPeriod(HLINE hLine None,HAGENT hAgent None,DWORD dwMeasurementPeriod None)
LONG None tapi32.lineSetAgentSessionState(HLINE hLine None,HAGENTSESSION hAgentSession None,DWORD dwAgentSessionState None,DWORD dwNextAgentSessionState None)
LONG None tapi32.lineSetAgentStateEx(HLINE hLine None,HAGENT hAgent None,DWORD dwAgentState None,DWORD dwNextAgentState None)
LONG None tapi32.lineSetQueueMeasurementPeriod(HLINE hLine None,DWORD dwQueueID None,DWORD dwMeasurementPeriod None)
LONG None user32.ChangeDisplaySettingsA(_In_ DEVMODE *lpDevMode,_In_ DWORD dwflags)
LONG None user32.ChangeDisplaySettings(_In_ DEVMODE *lpDevMode,_In_ DWORD dwflags)
LONG None user32.ChangeDisplaySettingsW(_In_ DEVMODE *lpDevMode,_In_ DWORD dwflags)
LONG NTAPI ntdll.RtlEthernetStringToAddressA(_In_ PCTSTR S,_Out_ PCTSTR *Terminator,_Out_ DL_EUI48 *Addr)
LONG NTAPI ntdll.RtlEthernetStringToAddress(_In_ PCTSTR S,_Out_ PCTSTR *Terminator,_Out_ DL_EUI48 *Addr)
LONG NTAPI ntdll.RtlEthernetStringToAddressW(_In_ PCTSTR S,_Out_ PCTSTR *Terminator,_Out_ DL_EUI48 *Addr)
LONG NTAPI ntdll.RtlIpv4StringToAddressA(_In_ PCTSTR S,_In_ BOOLEAN Strict,_Out_ LPCTSTR *Terminator,_Out_ IN_ADDR *Addr)
LONG NTAPI ntdll.RtlIpv4StringToAddressEx(_In_ PCTSTR AddressString,_In_ BOOLEAN Strict,_Out_ IN_ADDR *Address,_Out_ PUSHORT Port)
LONG NTAPI ntdll.RtlIpv4StringToAddressExW(_In_ PCTSTR AddressString,_In_ BOOLEAN Strict,_Out_ IN_ADDR *Address,_Out_ PUSHORT Port)
LONG NTAPI ntdll.RtlIpv4StringToAddress(_In_ PCTSTR S,_In_ BOOLEAN Strict,_Out_ LPCTSTR *Terminator,_Out_ IN_ADDR *Addr)
LONG NTAPI ntdll.RtlIpv4StringToAddressW(_In_ PCTSTR S,_In_ BOOLEAN Strict,_Out_ LPCTSTR *Terminator,_Out_ IN_ADDR *Addr)
LONG NTAPI ntdll.RtlIpv6StringToAddressA(_In_ PCTSTR S,_Out_ PCTSTR *Terminator,_Out_ IN6_ADDR *Addr)
LONG NTAPI ntdll.RtlIpv6StringToAddressEx(_In_ PCTSTR AddressString,_Out_ IN6_ADDR *Address,_Out_ PULONG ScopeId,_Out_ PUSHORT Port)
LONG NTAPI ntdll.RtlIpv6StringToAddressExW(_In_ PCTSTR AddressString,_Out_ IN6_ADDR *Address,_Out_ PULONG ScopeId,_Out_ PUSHORT Port)
LONG NTAPI ntdll.RtlIpv6StringToAddress(_In_ PCTSTR S,_Out_ PCTSTR *Terminator,_Out_ IN6_ADDR *Addr)
LONG NTAPI ntdll.RtlIpv6StringToAddressW(_In_ PCTSTR S,_Out_ PCTSTR *Terminator,_Out_ IN6_ADDR *Addr)
long RPC_ENTRY rpcrt4.NdrStubCall3(void *pThis None,void *pChannel None,PRPC_MESSAGE pRpcMsg None,unsigned long *pdwStubPhase)
LONG TSPIAPI None.TSPI_lineAccept(DRV_REQUESTID dwRequestID None,HDRVCALL hdCall None,LPCSTR lpsUserUserInfo None,DWORD dwSize None)
LONG TSPIAPI None.TSPI_lineAddToConference(DRV_REQUESTID dwRequestID None,HDRVCALL hdConfCall None,HDRVCALL hdConsultCall None)
LONG TSPIAPI None.TSPI_lineAnswer(DRV_REQUESTID dwRequestID None,HDRVCALL hdCall None,LPCSTR lpsUserUserInfo None,DWORD dwSize None)
LONG TSPIAPI None.TSPI_lineBlindTransfer(DRV_REQUESTID dwRequestID None,HDRVCALL hdCall None,LPCWSTR lpszDestAddress None,DWORD dwCountryCode None)
LONG TSPIAPI None.TSPI_lineCloseCall(HDRVCALL hdCall None)
LONG TSPIAPI None.TSPI_lineClose(HDRVLINE hdLine None)
LONG TSPIAPI None.TSPI_lineCloseMSPInstance(HDRVMSPLINE hdMSPLine None)
LONG TSPIAPI None.TSPI_lineCompleteCall(DRV_REQUESTID dwRequestID None,HDRVCALL hdCall None,LPDWORD lpdwCompletionID None,DWORD dwCompletionMode None,DWORD dwMessageID None)
LONG TSPIAPI None.TSPI_lineCompleteTransfer(DRV_REQUESTID dwRequestID None,HDRVCALL hdCall None,HDRVCALL hdConsultCall None,HTAPICALL htConfCall None,LPHDRVCALL lphdConfCall None,DWORD dwTransferMode None)
LONG TSPIAPI None.TSPI_lineConditionalMediaDetection(HDRVLINE hdLine None,DWORD dwMediaModes None,LPLINECALLPARAMS const lpCallParams)
LONG TSPIAPI None.TSPI_lineConfigDialog(DWORD dwDeviceID None,HWND hwndOwner None,LPCWSTR lpszDeviceClass None)
LONG TSPIAPI None.TSPI_lineConfigDialogEdit(DWORD dwDeviceID None,HWND hwndOwner None,LPCWSTR lpszDeviceClass None,LPVOID const lpDeviceConfigIn,DWORD dwSize None,LPVARSTRING lpDeviceConfigOut None)
LONG TSPIAPI None.TSPI_lineCreateMSPInstance(HDRVLINE hdLine None,DWORD dwAddressID None,HTAPIMSPLINE htMSPLine None,LPHDRVMSPLINE lphdMSPLine None)
LONG TSPIAPI None.TSPI_lineDevSpecific(DRV_REQUESTID dwRequestID None,HDRVLINE hdLine None,DWORD dwAddressID None,HDRVCALL hdCall None,LPVOID lpParams None,DWORD dwSize None)
LONG TSPIAPI None.TSPI_lineDevSpecificFeature(DRV_REQUESTID dwRequestID None,HDRVLINE hdLine None,DWORD dwFeature None,LPVOID lpParams None,DWORD dwSize None)
LONG TSPIAPI None.TSPI_lineDial(DRV_REQUESTID dwRequestID None,HDRVCALL hdCall None,LPCWSTR lpszDestAddress None,DWORD dwCountryCode None)
LONG TSPIAPI None.TSPI_lineDrop(DRV_REQUESTID dwRequestID None,HDRVCALL hdCall None,LPCSTR lpsUserUserInfo None,DWORD dwSize None)
LONG TSPIAPI None.TSPI_lineForward(DRV_REQUESTID dwRequestID None,HDRVLINE hdLine None,DWORD bAllAddresses None,DWORD dwAddressID None,LPLINEFORWARDLIST const lpForwardList,DWORD dwNumRingsNoAnswer None,HTAPICALL htConsultCall None,LPHDRVCALL lphdConsultCall None,LPLINECALLPARAMS const lpCallParams)
LONG TSPIAPI None.TSPI_lineGatherDigits(HDRVCALL hdCall None,DWORD dwEndToEndID None,DWORD dwDigitModes None,LPWSTR lpsDigits None,DWORD dwNumDigits None,LPCWSTR lpszTerminationDigits None,DWORD dwFirstDigitTimeout None,DWORD dwInterDigitTimeout None)
LONG TSPIAPI None.TSPI_lineGenerateDigits(HDRVCALL hdCall None,DWORD dwEndToEndID None,DWORD dwDigitMode None,LPCWSTR lpszDigits None,DWORD dwDuration None)
LONG TSPIAPI None.TSPI_lineGenerateTone(HDRVCALL hdCall None,DWORD dwEndToEndID None,DWORD dwToneMode None,DWORD dwDuration None,DWORD dwNumTones None,LPLINEGENERATETONE const lpTones)
LONG TSPIAPI None.TSPI_lineGetAddressCaps(DWORD dwDeviceID None,DWORD dwAddressID None,DWORD dwTSPIVersion None,DWORD dwExtVersion None,LPLINEADDRESSCAPS lpAddressCaps None)
LONG TSPIAPI None.TSPI_lineGetAddressID(HDRVLINE hdLine None,LPDWORD lpdwAddressID None,DWORD dwAddressMode None,LPCWSTR lpsAddress None,DWORD dwSize None)
LONG TSPIAPI None.TSPI_lineGetAddressStatus(HDRVLINE hdLine None,DWORD dwAddressID None,LPLINEADDRESSSTATUS lpAddressStatus None)
LONG TSPIAPI None.TSPI_lineGetCallAddressID(HDRVCALL hdCall None,LPDWORD lpdwAddressID None)
LONG TSPIAPI None.TSPI_lineGetCallHubTracking(HDRVLINE hdLine None,LPLINECALLHUBTRACKINGINFO lpTrackingInfo None)
LONG TSPIAPI None.TSPI_lineGetCallIDs(HDRVCALL hdCall None,LPDWORD lpdwAddressID None,LPDWORD lpdwCallID None,LPDWORD lpdwRelatedCallID None)
LONG TSPIAPI None.TSPI_lineGetCallInfo(HDRVCALL hdCall None,LPLINECALLINFO lpCallInfo None)
LONG TSPIAPI None.TSPI_lineGetCallStatus(HDRVCALL hdCall None,LPLINECALLSTATUS lpCallStatus None)
LONG TSPIAPI None.TSPI_lineGetDevCaps(DWORD dwDeviceID None,DWORD dwTSPIVersion None,DWORD dwExtVersion None,LPLINEDEVCAPS lpLineDevCaps None)
LONG TSPIAPI None.TSPI_lineGetDevConfig(DWORD dwDeviceID None,LPVARSTRING lpDeviceConfig None,LPCWSTR lpszDeviceClass None)
LONG TSPIAPI None.TSPI_lineGetExtensionID(DWORD dwDeviceID None,DWORD dwTSPIVersion None,LPLINEEXTENSIONID lpExtensionID None)
LONG TSPIAPI None.TSPI_lineGetIcon(DWORD dwDeviceID None,LPCWSTR lpszDeviceClass None,LPHICON lphIcon None)
LONG TSPIAPI None.TSPI_lineGetID(HDRVLINE hdLine None,DWORD dwAddressID None,HDRVCALL hdCall None,DWORD dwSelect None,LPVARSTRING lpDeviceID None,LPCWSTR lpszDeviceClass None,HANDLE hTargetProcess None)
LONG TSPIAPI None.TSPI_lineGetLineDevStatus(HDRVLINE hdLine None,LPLINEDEVSTATUS lpLineDevStatus None)
LONG TSPIAPI None.TSPI_lineGetNumAddressIDs(HDRVLINE hdLine None,LPDWORD lpdwNumAddressIDs None)
LONG TSPIAPI None.TSPI_lineHold(DRV_REQUESTID dwRequestID None,HDRVCALL hdCall None)
LONG TSPIAPI None.TSPI_lineMakeCall(DRV_REQUESTID dwRequestID None,HDRVLINE hdLine None,HTAPICALL htCall None,LPHDRVCALL lphdCall None,LPCWSTR lpszDestAddress None,DWORD dwCountryCode None,LPLINECALLPARAMS const lpCallParams)
LONG TSPIAPI None.TSPI_lineMonitorDigits(HDRVCALL hdCall None,DWORD dwDigitModes None)
LONG TSPIAPI None.TSPI_lineMonitorMedia(HDRVCALL hdCall None,DWORD dwMediaModes None)
LONG TSPIAPI None.TSPI_lineMonitorTones(HDRVCALL hdCall None,DWORD dwToneListID None,LPLINEMONITORTONE const lpToneList,DWORD dwNumEntries None)
LONG TSPIAPI None.TSPI_lineMSPIdentify(DWORD dwDeviceID None,GUID *pCLSID None)
LONG TSPIAPI None.TSPI_lineNegotiateExtVersion(DWORD dwDeviceID None,DWORD dwTSPIVersion None,DWORD dwLowVersion None,DWORD dwHighVersion None,LPDWORD lpdwExtVersion None)
LONG TSPIAPI None.TSPI_lineNegotiateTSPIVersion(DWORD dwDeviceID None,DWORD dwLowVersion None,DWORD dwHighVersion None,LPDWORD lpdwTSPIVersion None)
LONG TSPIAPI None.TSPI_lineOpen(DWORD dwDeviceID None,HTAPILINE htLine None,LPHDRVLINE lphdLine None,DWORD dwTSPIVersion None,LINEEVENT lpfnEventProc None)
LONG TSPIAPI None.TSPI_linePark(DRV_REQUESTID dwRequestID None,HDRVCALL hdCall None,DWORD dwParkMode None,LPCWSTR lpszDirAddress None,LPVARSTRING lpNonDirAddress None)
LONG TSPIAPI None.TSPI_linePickup(DRV_REQUESTID dwRequestID None,HDRVLINE hdLine None,DWORD dwAddressID None,HTAPICALL htCall None,LPHDRVCALL lphdCall None,LPCWSTR lpszDestAddress None,LPCWSTR lpszGroupID None)
LONG TSPIAPI None.TSPI_linePrepareAddToConference(DRV_REQUESTID dwRequestID None,HDRVCALL hdConfCall None,HTAPICALL htConsultCall None,LPHDRVCALL lphdConsultCall None,LPLINECALLPARAMS const lpCallParams)
LONG TSPIAPI None.TSPI_lineReceiveMSPData(HDRVLINE hdLine None,HDRVCALL hdCall None,HDRVMSPLINE hdMSPLine None,LPVOID pBuffer None,DWORD dwSize None)
LONG TSPIAPI None.TSPI_lineRedirect(DRV_REQUESTID dwRequestID None,HDRVCALL hdCall None,LPCWSTR lpszDestAddress None,DWORD dwCountryCode None)
LONG TSPIAPI None.TSPI_lineReleaseUserUserInfo(DRV_REQUESTID dwRequestID None,HDRVCALL hdCall None)
LONG TSPIAPI None.TSPI_lineRemoveFromConference(DRV_REQUESTID dwRequestID None,HDRVCALL hdCall None)
LONG TSPIAPI None.TSPI_lineSecureCall(DRV_REQUESTID dwRequestID None,HDRVCALL hdCall None)
LONG TSPIAPI None.TSPI_lineSelectExtVersion(HDRVLINE hdLine None,DWORD dwExtVersion None)
LONG TSPIAPI None.TSPI_lineSendUserUserInfo(DRV_REQUESTID dwRequestID None,HDRVCALL hdCall None,LPCSTR lpsUserUserInfo None,DWORD dwSize None)
LONG TSPIAPI None.TSPI_lineSetAppSpecific(HDRVCALL hdCall None,DWORD dwAppSpecific None)
LONG TSPIAPI None.TSPI_lineSetCallData(DRV_REQUESTID dwRequestID None,HDRVCALL hdCall None,LPVOID lpCallData None,DWORD dwSize None)
LONG TSPIAPI None.TSPI_lineSetCallHubTracking(HDRVLINE hdLine None,LPLINECALLHUBTRACKINGINFO lpTrackingInfo None)
LONG TSPIAPI None.TSPI_lineSetCallParams(DRV_REQUESTID dwRequestID None,HDRVCALL hdCall None,DWORD dwBearerMode None,DWORD dwMinRate None,DWORD dwMaxRate None,LPLINEDIALPARAMS const lpDialParams)
LONG TSPIAPI None.TSPI_lineSetCallQualityOfService(DRV_REQUESTID dwRequestID None,HDRVCALL hdCall None,LPVOID lpSendingFlowspec None,DWORD dwSendingFlowspecSize None,LPVOID lpReceivingFlowspec None,DWORD dwReceivingFlowspecSize None)
LONG TSPIAPI None.TSPI_lineSetCallTreatment(DRV_REQUESTID dwRequestID None,HDRVCALL hdCall None,DWORD dwTreatment None)
LONG TSPIAPI None.TSPI_lineSetDefaultMediaDetection(HDRVLINE hdLine None,DWORD dwMediaModes None)
LONG TSPIAPI None.TSPI_lineSetDevConfig(DWORD dwDeviceID None,LPVOID const lpDeviceConfig,DWORD dwSize None,LPCWSTR lpszDeviceClass None)
LONG TSPIAPI None.TSPI_lineSetLineDevStatus(DRV_REQUESTID dwRequestID None,HDRVLINE hdLine None,DWORD dwStatusToChange None,DWORD fStatus None)
LONG TSPIAPI None.TSPI_lineSetMediaControl(HDRVLINE hdLine None,DWORD dwAddressID None,HDRVCALL hdCall None,DWORD dwSelect None,LPLINEMEDIACONTROLDIGIT const lpDigitList,DWORD dwDigitNumEntries None,LPLINEMEDIACONTROLMEDIA const lpMediaList,DWORD dwMediaNumEntries None,LPLINEMEDIACONTROLTONE const lpToneList,DWORD dwToneNumEntries None,LPLINEMEDIACONTROLCALLSTATE const lpCallStateList,DWORD dwCallStateNumEntries None)
LONG TSPIAPI None.TSPI_lineSetMediaMode(HDRVCALL hdCall None,DWORD dwMediaMode None)
LONG TSPIAPI None.TSPI_lineSetStatusMessages(HDRVLINE hdLine None,DWORD dwLineStates None,DWORD dwAddressStates None)
LONG TSPIAPI None.TSPI_lineSetTerminal(DRV_REQUESTID dwRequestID None,HDRVLINE hdLine None,DWORD dwAddressID None,HDRVCALL hdCall None,DWORD dwSelect None,DWORD dwTerminalModes None,DWORD dwTerminalID None,DWORD bEnable None)
LONG TSPIAPI None.TSPI_lineSetupConference(DRV_REQUESTID dwRequestID None,HDRVCALL hdCall None,HDRVLINE hdLine None,HTAPICALL htConfCall None,LPHDRVCALL lphdConfCall None,HTAPICALL htConsultCall None,LPHDRVCALL lphdConsultCall None,DWORD dwNumParties None,LPLINECALLPARAMS const lpCallParams)
LONG TSPIAPI None.TSPI_lineSetupTransfer(DRV_REQUESTID dwRequestID None,HDRVCALL hdCall None,HTAPICALL htConsultCall None,LPHDRVCALL lphdConsultCall None,LPLINECALLPARAMS const lpCallParams)
LONG TSPIAPI None.TSPI_lineSwapHold(DRV_REQUESTID dwRequestID None,HDRVCALL hdActiveCall None,HDRVCALL hdHeldCall None)
LONG TSPIAPI None.TSPI_lineUncompleteCall(DRV_REQUESTID dwRequestID None,HDRVLINE hdLine None,DWORD dwCompletionID None)
LONG TSPIAPI None.TSPI_lineUnhold(DRV_REQUESTID dwRequestID None,HDRVCALL hdCall None)
LONG TSPIAPI None.TSPI_lineUnpark(DRV_REQUESTID dwRequestID None,HDRVLINE hdLine None,DWORD dwAddressID None,HTAPICALL htCall None,LPHDRVCALL lphdCall None,LPCWSTR lpszDestAddress None)
long TSPIAPI None.TSPI_phoneClose(HDRVPHONE hdPhone None)
LONG TSPIAPI None.TSPI_phoneConfigDialog(DWORD dwDeviceID None,HWND hwndOwner None,LPCWSTR lpszDeviceClass None)
LONG TSPIAPI None.TSPI_phoneDevSpecific(DRV_REQUESTID dwRequestID None,HDRVPHONE hdPhone None,LPVOID lpParams None,DWORD dwSize None)
LONG TSPIAPI None.TSPI_phoneGetButtonInfo(HDRVPHONE hdPhone None,DWORD dwButtonLampID None,LPPHONEBUTTONINFO lpButtonInfo None)
LONG TSPIAPI None.TSPI_phoneGetData(HDRVPHONE hdPhone None,DWORD dwDataID None,LPVOID lpData None,DWORD dwSize None)
LONG TSPIAPI None.TSPI_phoneGetDevCaps(DWORD dwDeviceID None,DWORD dwTSPIVersion None,DWORD dwExtVersion None,LPPHONECAPS lpPhoneCaps None)
LONG TSPIAPI None.TSPI_phoneGetDisplay(HDRVPHONE hdPhone None,LPVARSTRING lpDisplay None)
LONG TSPIAPI None.TSPI_phoneGetExtensionID(DWORD dwDeviceID None,DWORD dwTSPIVersion None,LPPHONEEXTENSIONID lpExtensionID None)
LONG TSPIAPI None.TSPI_phoneGetGain(HDRVPHONE hdPhone None,DWORD dwHookSwitchDev None,LPDWORD lpdwGain None)
LONG TSPIAPI None.TSPI_phoneGetHookSwitch(HDRVPHONE hdPhone None,LPDWORD lpdwHookSwitchDevs None)
LONG TSPIAPI None.TSPI_phoneGetIcon(DWORD dwDeviceID None,LPCWSTR lpszDeviceClass None,LPHICON lphIcon None)
LONG TSPIAPI None.TSPI_phoneGetID(HDRVPHONE hdPhone None,LPVARSTRING lpDeviceID None,LPCWSTR lpszDeviceClass None,HANDLE hTargetProcess None)
LONG TSPIAPI None.TSPI_phoneGetLamp(HDRVPHONE hdPhone None,DWORD dwButtonLampID None,LPDWORD lpdwLampMode None)
LONG TSPIAPI None.TSPI_phoneGetRing(HDRVPHONE hdPhone None,LPDWORD lpdwRingMode None,LPDWORD lpdwVolume None)
LONG TSPIAPI None.TSPI_phoneGetStatus(HDRVPHONE hdPhone None,LPPHONESTATUS lpPhoneStatus None)
LONG TSPIAPI None.TSPI_phoneGetVolume(HDRVPHONE hdPhone None,DWORD dwHookSwitchDev None,LPDWORD lpdwVolume None)
LONG TSPIAPI None.TSPI_phoneNegotiateExtVersion(DWORD dwDeviceID None,DWORD dwTSPIVersion None,DWORD dwLowVersion None,DWORD dwHighVersion None,LPDWORD lpdwExtVersion None)
LONG TSPIAPI None.TSPI_phoneNegotiateTSPIVersion(DWORD dwDeviceID None,DWORD dwLowVersion None,DWORD dwHighVersion None,LPDWORD lpdwTSPIVersion None)
LONG TSPIAPI None.TSPI_phoneOpen(DWORD dwDeviceID None,HTAPIPHONE htPhone None,LPHDRVPHONE lphdPhone None,DWORD dwTSPIVersion None,PHONEEVENT lpfnEventProc None)
LONG TSPIAPI None.TSPI_phoneSelectExtVersion(HDRVPHONE hdPhone None,DWORD dwExtVersion None)
LONG TSPIAPI None.TSPI_phoneSetButtonInfo(DRV_REQUESTID dwRequestID None,HDRVPHONE hdPhone None,DWORD dwButtonLampID None,LPPHONEBUTTONINFO const lpButtonInfo)
LONG TSPIAPI None.TSPI_phoneSetData(DRV_REQUESTID dwRequestID None,HDRVPHONE hdPhone None,DWORD dwDataID None,LPVOID const lpData,DWORD dwSize None)
LONG TSPIAPI None.TSPI_phoneSetDisplay(DRV_REQUESTID dwRequestID None,HDRVPHONE hdPhone None,DWORD dwRow None,DWORD dwColumn None,LPCWSTR lpsDisplay None,DWORD dwSize None)
LONG TSPIAPI None.TSPI_phoneSetGain(DRV_REQUESTID dwRequestID None,HDRVPHONE hdPhone None,DWORD dwHookSwitchDev None,DWORD dwGain None)
LONG TSPIAPI None.TSPI_phoneSetHookSwitch(DRV_REQUESTID dwRequestID None,HDRVPHONE hdPhone None,DWORD dwHookSwitchDevs None,DWORD dwHookSwitchMode None)
LONG TSPIAPI None.TSPI_phoneSetLamp(DRV_REQUESTID dwRequestID None,HDRVPHONE hdPhone None,DWORD dwButtonLampID None,DWORD dwLampMode None)
LONG TSPIAPI None.TSPI_phoneSetRing(DRV_REQUESTID dwRequestID None,HDRVPHONE hdPhone None,DWORD dwRingMode None,DWORD dwVolume None)
LONG TSPIAPI None.TSPI_phoneSetStatusMessages(HDRVPHONE hdPhone None,DWORD dwPhoneStates None,DWORD dwButtonModes None,DWORD dwButtonStates None)
LONG TSPIAPI None.TSPI_phoneSetVolume(DRV_REQUESTID dwRequestID None,HDRVPHONE hdPhone None,DWORD dwHookSwitchDev None,DWORD dwVolume None)
LONG TSPIAPI None.TSPI_providerConfig(HWND hwndOwner None,DWORD dwPermanentProviderID None)
LONG TSPIAPI None.TSPI_providerGenericDialogData(DWORD_PTR dwObjectID None,DWORD dwObjectType None,LPVOID lpParams None,DWORD dwSize None)
LONG TSPIAPI None.TSPI_providerInit(DWORD dwTSPIVersion None,DWORD dwPermanentProviderID None,DWORD dwLineDeviceIDBase None,DWORD dwPhoneDeviceIDBase None,DWORD_PTR dwNumLines None,DWORD_PTR dwNumPhones None,ASYNC_COMPLETION lpfnCompletionProc None,LPDWORD lpdwTSPIOptions None)
LONG TSPIAPI None.TSPI_providerInstall(HWND hwndOwner None,DWORD dwPermanentProviderID None)
LONG TSPIAPI None.TSPI_providerRemove(HWND hwndOwner None,DWORD dwPermanentProviderID None)
LONG TSPIAPI None.TSPI_providerShutdown(DWORD dwTSPIVersion None,DWORD dwPermanentProviderID None)
LONG TSPIAPI None.TUISPI_lineConfigDialogEdit(TUISPIDLLCALLBACK lpfnUIDLLCallback None,DWORD dwDeviceID None,HWND hwndOwner None,LPCWSTR lpszDeviceClass None,LPVOID const lpDeviceConfigIn,DWORD dwSize None,LPVARSTRING lpDeviceConfigOut None)
LONG TSPIAPI None.TUISPI_lineConfigDialog(TUISPIDLLCALLBACK lpfnUIDLLCallback None,DWORD dwDeviceID None,HWND hwndOwner None,LPCWSTR lpszDeviceClass None)
LONG TSPIAPI None.TUISPI_phoneConfigDialog(TUISPIDLLCALLBACK lpfnUIDLLCallback None,DWORD dwDeviceID None,HWND hwndOwner None,LPCWSTR lpszDeviceClass None)
LONG TSPIAPI None.TUISPI_providerConfig(TUISPIDLLCALLBACK lpfnUIDLLCallback None,HWND hwndOwner None,DWORD dwPermanentProviderID None)
LONG TSPIAPI None.TUISPI_providerGenericDialogData(HTAPIDIALOGINSTANCE htDlgInst None,LPVOID lpParams None,DWORD dwSize None)
LONG TSPIAPI None.TUISPI_providerInstall(TUISPIDLLCALLBACK lpfnUIDLLCallback None,HWND hwndOwner None,DWORD dwPermanentProviderID None)
LONG TSPIAPI None.TUISPI_providerRemove(TUISPIDLLCALLBACK lpfnUIDLLCallback None,HWND hwndOwner None,DWORD dwPermanentProviderID None)
LONG WINAPI advapi32.CveEventWrite(_In_ PCWSTR CveId,_In_opt_ PCWSTR AdditionalDetails)
LONG WINAPI advapi32.RegCloseKey(_In_ HKEY hKey)
LONG WINAPI advapi32.RegConnectRegistryA(_In_opt_ LPCTSTR lpMachineName,_In_ HKEY hKey,_Out_ PHKEY phkResult)
LONG WINAPI advapi32.RegConnectRegistry(_In_opt_ LPCTSTR lpMachineName,_In_ HKEY hKey,_Out_ PHKEY phkResult)
LONG WINAPI advapi32.RegConnectRegistryW(_In_opt_ LPCTSTR lpMachineName,_In_ HKEY hKey,_Out_ PHKEY phkResult)
LONG WINAPI advapi32.RegCopyTreeA(_In_ HKEY hKeySrc,_In_opt_ LPCTSTR lpSubKey,_In_ HKEY hKeyDest)
LONG WINAPI advapi32.RegCopyTree(_In_ HKEY hKeySrc,_In_opt_ LPCTSTR lpSubKey,_In_ HKEY hKeyDest)
LONG WINAPI advapi32.RegCopyTreeW(_In_ HKEY hKeySrc,_In_opt_ LPCTSTR lpSubKey,_In_ HKEY hKeyDest)
LONG WINAPI advapi32.RegCreateKeyA(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_Out_ PHKEY phkResult)
LONG WINAPI advapi32.RegCreateKeyExA(_In_ HKEY hKey,_In_ LPCTSTR lpSubKey,_Reserved_ DWORD Reserved,_In_opt_ LPTSTR lpClass,_In_ DWORD dwOptions,_In_ REGSAM samDesired,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_Out_ PHKEY phkResult,_Out_opt_ LPDWORD lpdwDisposition)
LONG WINAPI advapi32.RegCreateKeyEx(_In_ HKEY hKey,_In_ LPCTSTR lpSubKey,_Reserved_ DWORD Reserved,_In_opt_ LPTSTR lpClass,_In_ DWORD dwOptions,_In_ REGSAM samDesired,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_Out_ PHKEY phkResult,_Out_opt_ LPDWORD lpdwDisposition)
LONG WINAPI advapi32.RegCreateKeyExW(_In_ HKEY hKey,_In_ LPCTSTR lpSubKey,_Reserved_ DWORD Reserved,_In_opt_ LPTSTR lpClass,_In_ DWORD dwOptions,_In_ REGSAM samDesired,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_Out_ PHKEY phkResult,_Out_opt_ LPDWORD lpdwDisposition)
LONG WINAPI advapi32.RegCreateKey(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_Out_ PHKEY phkResult)
LONG WINAPI advapi32.RegCreateKeyW(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_Out_ PHKEY phkResult)
LONG WINAPI advapi32.RegDeleteKeyA(_In_ HKEY hKey,_In_ LPCTSTR lpSubKey)
LONG WINAPI advapi32.RegDeleteKeyExA(_In_ HKEY hKey,_In_ LPCTSTR lpSubKey,_In_ REGSAM samDesired,_Reserved_ DWORD Reserved)
LONG WINAPI advapi32.RegDeleteKeyEx(_In_ HKEY hKey,_In_ LPCTSTR lpSubKey,_In_ REGSAM samDesired,_Reserved_ DWORD Reserved)
LONG WINAPI advapi32.RegDeleteKeyExW(_In_ HKEY hKey,_In_ LPCTSTR lpSubKey,_In_ REGSAM samDesired,_Reserved_ DWORD Reserved)
LONG WINAPI advapi32.RegDeleteKey(_In_ HKEY hKey,_In_ LPCTSTR lpSubKey)
LONG WINAPI advapi32.RegDeleteKeyTransactedA(_In_ HKEY hKey,_In_ LPCTSTR lpSubKey,_In_ REGSAM samDesired,_Reserved_ DWORD Reserved,_In_ HANDLE hTransaction,_Reserved_ PVOID pExtendedParameter)
LONG WINAPI advapi32.RegDeleteKeyTransacted(_In_ HKEY hKey,_In_ LPCTSTR lpSubKey,_In_ REGSAM samDesired,_Reserved_ DWORD Reserved,_In_ HANDLE hTransaction,_Reserved_ PVOID pExtendedParameter)
LONG WINAPI advapi32.RegDeleteKeyTransactedW(_In_ HKEY hKey,_In_ LPCTSTR lpSubKey,_In_ REGSAM samDesired,_Reserved_ DWORD Reserved,_In_ HANDLE hTransaction,_Reserved_ PVOID pExtendedParameter)
LONG WINAPI advapi32.RegDeleteKeyValueA(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_opt_ LPCTSTR lpValueName)
LONG WINAPI advapi32.RegDeleteKeyValue(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_opt_ LPCTSTR lpValueName)
LONG WINAPI advapi32.RegDeleteKeyValueW(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_opt_ LPCTSTR lpValueName)
LONG WINAPI advapi32.RegDeleteKeyW(_In_ HKEY hKey,_In_ LPCTSTR lpSubKey)
LONG WINAPI advapi32.RegDeleteTreeA(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey)
LONG WINAPI advapi32.RegDeleteTree(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey)
LONG WINAPI advapi32.RegDeleteTreeW(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey)
LONG WINAPI advapi32.RegDeleteValueA(_In_ HKEY hKey,_In_opt_ LPCTSTR lpValueName)
LONG WINAPI advapi32.RegDeleteValue(_In_ HKEY hKey,_In_opt_ LPCTSTR lpValueName)
LONG WINAPI advapi32.RegDeleteValueW(_In_ HKEY hKey,_In_opt_ LPCTSTR lpValueName)
LONG WINAPI advapi32.RegDisablePredefinedCacheEx(void None None)
LONG WINAPI advapi32.RegDisablePredefinedCache(void None None)
LONG WINAPI advapi32.RegDisableReflectionKey(_In_ HKEY hBase)
LONG WINAPI advapi32.RegEnableReflectionKey(_In_ HKEY hBase)
LONG WINAPI advapi32.RegEnumKeyA(_In_ HKEY hKey,_In_ DWORD dwIndex,_Out_ LPTSTR lpName,_In_ DWORD cchName)
LONG WINAPI advapi32.RegEnumKeyExA(_In_ HKEY hKey,_In_ DWORD dwIndex,_Out_ LPTSTR lpName,_Inout_ LPDWORD lpcName,_Reserved_ LPDWORD lpReserved,_Inout_ LPTSTR lpClass,_Inout_opt_ LPDWORD lpcClass,_Out_opt_ PFILETIME lpftLastWriteTime)
LONG WINAPI advapi32.RegEnumKeyEx(_In_ HKEY hKey,_In_ DWORD dwIndex,_Out_ LPTSTR lpName,_Inout_ LPDWORD lpcName,_Reserved_ LPDWORD lpReserved,_Inout_ LPTSTR lpClass,_Inout_opt_ LPDWORD lpcClass,_Out_opt_ PFILETIME lpftLastWriteTime)
LONG WINAPI advapi32.RegEnumKeyExW(_In_ HKEY hKey,_In_ DWORD dwIndex,_Out_ LPTSTR lpName,_Inout_ LPDWORD lpcName,_Reserved_ LPDWORD lpReserved,_Inout_ LPTSTR lpClass,_Inout_opt_ LPDWORD lpcClass,_Out_opt_ PFILETIME lpftLastWriteTime)
LONG WINAPI advapi32.RegEnumKey(_In_ HKEY hKey,_In_ DWORD dwIndex,_Out_ LPTSTR lpName,_In_ DWORD cchName)
LONG WINAPI advapi32.RegEnumKeyW(_In_ HKEY hKey,_In_ DWORD dwIndex,_Out_ LPTSTR lpName,_In_ DWORD cchName)
LONG WINAPI advapi32.RegEnumValueA(_In_ HKEY hKey,_In_ DWORD dwIndex,_Out_ LPTSTR lpValueName,_Inout_ LPDWORD lpcchValueName,_Reserved_ LPDWORD lpReserved,_Out_opt_ LPDWORD lpType,_Out_opt_ LPBYTE lpData,_Inout_opt_ LPDWORD lpcbData)
LONG WINAPI advapi32.RegEnumValue(_In_ HKEY hKey,_In_ DWORD dwIndex,_Out_ LPTSTR lpValueName,_Inout_ LPDWORD lpcchValueName,_Reserved_ LPDWORD lpReserved,_Out_opt_ LPDWORD lpType,_Out_opt_ LPBYTE lpData,_Inout_opt_ LPDWORD lpcbData)
LONG WINAPI advapi32.RegEnumValueW(_In_ HKEY hKey,_In_ DWORD dwIndex,_Out_ LPTSTR lpValueName,_Inout_ LPDWORD lpcchValueName,_Reserved_ LPDWORD lpReserved,_Out_opt_ LPDWORD lpType,_Out_opt_ LPBYTE lpData,_Inout_opt_ LPDWORD lpcbData)
LONG WINAPI advapi32.RegFlushKey(_In_ HKEY hKey)
LONG WINAPI advapi32.RegGetKeySecurity(_In_ HKEY hKey,_In_ SECURITY_INFORMATION SecurityInformation,_Out_opt_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_Inout_ LPDWORD lpcbSecurityDescriptor)
LONG WINAPI advapi32.RegGetValueA(_In_ HKEY hkey,_In_opt_ LPCTSTR lpSubKey,_In_opt_ LPCTSTR lpValue,_In_opt_ DWORD dwFlags,_Out_opt_ LPDWORD pdwType,_Out_opt_ PVOID pvData,_Inout_opt_ LPDWORD pcbData)
LONG WINAPI advapi32.RegGetValue(_In_ HKEY hkey,_In_opt_ LPCTSTR lpSubKey,_In_opt_ LPCTSTR lpValue,_In_opt_ DWORD dwFlags,_Out_opt_ LPDWORD pdwType,_Out_opt_ PVOID pvData,_Inout_opt_ LPDWORD pcbData)
LONG WINAPI advapi32.RegGetValueW(_In_ HKEY hkey,_In_opt_ LPCTSTR lpSubKey,_In_opt_ LPCTSTR lpValue,_In_opt_ DWORD dwFlags,_Out_opt_ LPDWORD pdwType,_Out_opt_ PVOID pvData,_Inout_opt_ LPDWORD pcbData)
LONG WINAPI advapi32.RegLoadAppKeyA(_In_ LPCTSTR lpFile,_Out_ PHKEY phkResult,_In_ REGSAM samDesired,_In_ DWORD dwOptions,_Reserved_ DWORD Reserved)
LONG WINAPI advapi32.RegLoadAppKey(_In_ LPCTSTR lpFile,_Out_ PHKEY phkResult,_In_ REGSAM samDesired,_In_ DWORD dwOptions,_Reserved_ DWORD Reserved)
LONG WINAPI advapi32.RegLoadAppKeyW(_In_ LPCTSTR lpFile,_Out_ PHKEY phkResult,_In_ REGSAM samDesired,_In_ DWORD dwOptions,_Reserved_ DWORD Reserved)
LONG WINAPI advapi32.RegLoadKeyA(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_ LPCTSTR lpFile)
LONG WINAPI advapi32.RegLoadKey(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_ LPCTSTR lpFile)
LONG WINAPI advapi32.RegLoadKeyW(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_ LPCTSTR lpFile)
LONG WINAPI advapi32.RegLoadMUIStringA(_In_ HKEY hKey,_In_opt_ LPCTSTR pszValue,_Out_opt_ LPTSTR pszOutBuf,_In_ DWORD cbOutBuf,_Out_opt_ LPDWORD pcbData,_In_ DWORD Flags,_In_opt_ LPCTSTR pszDirectory)
LONG WINAPI advapi32.RegLoadMUIString(_In_ HKEY hKey,_In_opt_ LPCTSTR pszValue,_Out_opt_ LPTSTR pszOutBuf,_In_ DWORD cbOutBuf,_Out_opt_ LPDWORD pcbData,_In_ DWORD Flags,_In_opt_ LPCTSTR pszDirectory)
LONG WINAPI advapi32.RegLoadMUIStringW(_In_ HKEY hKey,_In_opt_ LPCTSTR pszValue,_Out_opt_ LPTSTR pszOutBuf,_In_ DWORD cbOutBuf,_Out_opt_ LPDWORD pcbData,_In_ DWORD Flags,_In_opt_ LPCTSTR pszDirectory)
LONG WINAPI advapi32.RegNotifyChangeKeyValue(_In_ HKEY hKey,_In_ BOOL bWatchSubtree,_In_ DWORD dwNotifyFilter,_In_opt_ HANDLE hEvent,_In_ BOOL fAsynchronous)
LONG WINAPI advapi32.RegOpenCurrentUser(_In_ REGSAM samDesired,_Out_ PHKEY phkResult)
LONG WINAPI advapi32.RegOpenKeyA(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_Out_ PHKEY phkResult)
LONG WINAPI advapi32.RegOpenKeyExA(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_ DWORD ulOptions,_In_ REGSAM samDesired,_Out_ PHKEY phkResult)
LONG WINAPI advapi32.RegOpenKeyEx(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_ DWORD ulOptions,_In_ REGSAM samDesired,_Out_ PHKEY phkResult)
LONG WINAPI advapi32.RegOpenKeyExW(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_ DWORD ulOptions,_In_ REGSAM samDesired,_Out_ PHKEY phkResult)
LONG WINAPI advapi32.RegOpenKey(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_Out_ PHKEY phkResult)
LONG WINAPI advapi32.RegOpenKeyTransactedA(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_ DWORD ulOptions,_In_ REGSAM samDesired,_Out_ PHKEY phkResult,_In_ HANDLE hTransaction,_Reserved_ PVOID pExtendedParameter)
LONG WINAPI advapi32.RegOpenKeyTransacted(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_ DWORD ulOptions,_In_ REGSAM samDesired,_Out_ PHKEY phkResult,_In_ HANDLE hTransaction,_Reserved_ PVOID pExtendedParameter)
LONG WINAPI advapi32.RegOpenKeyTransactedW(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_ DWORD ulOptions,_In_ REGSAM samDesired,_Out_ PHKEY phkResult,_In_ HANDLE hTransaction,_Reserved_ PVOID pExtendedParameter)
LONG WINAPI advapi32.RegOpenKeyW(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_Out_ PHKEY phkResult)
LONG WINAPI advapi32.RegOpenUserClassesRoot(_In_ HANDLE hToken,_Reserved_ DWORD dwOptions,_In_ REGSAM samDesired,_Out_ PHKEY phkResult)
LONG WINAPI advapi32.RegOverridePredefKey(_In_ HKEY hKey,_In_opt_ HKEY hNewHKey)
LONG WINAPI advapi32.RegQueryInfoKeyA(_In_ HKEY hKey,_Out_opt_ LPTSTR lpClass,_Inout_opt_ LPDWORD lpcClass,_Reserved_ LPDWORD lpReserved,_Out_opt_ LPDWORD lpcSubKeys,_Out_opt_ LPDWORD lpcMaxSubKeyLen,_Out_opt_ LPDWORD lpcMaxClassLen,_Out_opt_ LPDWORD lpcValues,_Out_opt_ LPDWORD lpcMaxValueNameLen,_Out_opt_ LPDWORD lpcMaxValueLen,_Out_opt_ LPDWORD lpcbSecurityDescriptor,_Out_opt_ PFILETIME lpftLastWriteTime)
LONG WINAPI advapi32.RegQueryInfoKey(_In_ HKEY hKey,_Out_opt_ LPTSTR lpClass,_Inout_opt_ LPDWORD lpcClass,_Reserved_ LPDWORD lpReserved,_Out_opt_ LPDWORD lpcSubKeys,_Out_opt_ LPDWORD lpcMaxSubKeyLen,_Out_opt_ LPDWORD lpcMaxClassLen,_Out_opt_ LPDWORD lpcValues,_Out_opt_ LPDWORD lpcMaxValueNameLen,_Out_opt_ LPDWORD lpcMaxValueLen,_Out_opt_ LPDWORD lpcbSecurityDescriptor,_Out_opt_ PFILETIME lpftLastWriteTime)
LONG WINAPI advapi32.RegQueryInfoKeyW(_In_ HKEY hKey,_Out_opt_ LPTSTR lpClass,_Inout_opt_ LPDWORD lpcClass,_Reserved_ LPDWORD lpReserved,_Out_opt_ LPDWORD lpcSubKeys,_Out_opt_ LPDWORD lpcMaxSubKeyLen,_Out_opt_ LPDWORD lpcMaxClassLen,_Out_opt_ LPDWORD lpcValues,_Out_opt_ LPDWORD lpcMaxValueNameLen,_Out_opt_ LPDWORD lpcMaxValueLen,_Out_opt_ LPDWORD lpcbSecurityDescriptor,_Out_opt_ PFILETIME lpftLastWriteTime)
LONG WINAPI advapi32.RegQueryMultipleValuesA(_In_ HKEY hKey,_Out_ PVALENT val_list,_In_ DWORD num_vals,_Out_opt_ LPTSTR lpValueBuf,_Inout_opt_ LPDWORD ldwTotsize)
LONG WINAPI advapi32.RegQueryMultipleValues(_In_ HKEY hKey,_Out_ PVALENT val_list,_In_ DWORD num_vals,_Out_opt_ LPTSTR lpValueBuf,_Inout_opt_ LPDWORD ldwTotsize)
LONG WINAPI advapi32.RegQueryMultipleValuesW(_In_ HKEY hKey,_Out_ PVALENT val_list,_In_ DWORD num_vals,_Out_opt_ LPTSTR lpValueBuf,_Inout_opt_ LPDWORD ldwTotsize)
LONG WINAPI advapi32.RegQueryReflectionKey(_In_ HKEY hBase,_Out_ BOOL *bIsReflectionDisabled)
LONG WINAPI advapi32.RegQueryValueA(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_Out_opt_ LPTSTR lpValue,_Inout_opt_ PLONG lpcbValue)
LONG WINAPI advapi32.RegQueryValueExA(_In_ HKEY hKey,_In_opt_ LPCTSTR lpValueName,_Reserved_ LPDWORD lpReserved,_Out_opt_ LPDWORD lpType,_Out_opt_ LPBYTE lpData,_Inout_opt_ LPDWORD lpcbData)
LONG WINAPI advapi32.RegQueryValueEx(_In_ HKEY hKey,_In_opt_ LPCTSTR lpValueName,_Reserved_ LPDWORD lpReserved,_Out_opt_ LPDWORD lpType,_Out_opt_ LPBYTE lpData,_Inout_opt_ LPDWORD lpcbData)
LONG WINAPI advapi32.RegQueryValueExW(_In_ HKEY hKey,_In_opt_ LPCTSTR lpValueName,_Reserved_ LPDWORD lpReserved,_Out_opt_ LPDWORD lpType,_Out_opt_ LPBYTE lpData,_Inout_opt_ LPDWORD lpcbData)
LONG WINAPI advapi32.RegQueryValue(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_Out_opt_ LPTSTR lpValue,_Inout_opt_ PLONG lpcbValue)
LONG WINAPI advapi32.RegQueryValueW(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_Out_opt_ LPTSTR lpValue,_Inout_opt_ PLONG lpcbValue)
LONG WINAPI advapi32.RegReplaceKeyA(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_ LPCTSTR lpNewFile,_In_ LPCTSTR lpOldFile)
LONG WINAPI advapi32.RegReplaceKey(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_ LPCTSTR lpNewFile,_In_ LPCTSTR lpOldFile)
LONG WINAPI advapi32.RegReplaceKeyW(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_ LPCTSTR lpNewFile,_In_ LPCTSTR lpOldFile)
LONG WINAPI advapi32.RegRestoreKeyA(_In_ HKEY hKey,_In_ LPCTSTR lpFile,_In_ DWORD dwFlags)
LONG WINAPI advapi32.RegRestoreKey(_In_ HKEY hKey,_In_ LPCTSTR lpFile,_In_ DWORD dwFlags)
LONG WINAPI advapi32.RegRestoreKeyW(_In_ HKEY hKey,_In_ LPCTSTR lpFile,_In_ DWORD dwFlags)
LONG WINAPI advapi32.RegSaveKeyA(_In_ HKEY hKey,_In_ LPCTSTR lpFile,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes)
LONG WINAPI advapi32.RegSaveKeyExA(_In_ HKEY hKey,_In_ LPCTSTR lpFile,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ DWORD Flags)
LONG WINAPI advapi32.RegSaveKeyEx(_In_ HKEY hKey,_In_ LPCTSTR lpFile,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ DWORD Flags)
LONG WINAPI advapi32.RegSaveKeyExW(_In_ HKEY hKey,_In_ LPCTSTR lpFile,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ DWORD Flags)
LONG WINAPI advapi32.RegSaveKey(_In_ HKEY hKey,_In_ LPCTSTR lpFile,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes)
LONG WINAPI advapi32.RegSaveKeyW(_In_ HKEY hKey,_In_ LPCTSTR lpFile,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes)
LONG WINAPI advapi32.RegSetKeySecurity(_In_ HKEY hKey,_In_ SECURITY_INFORMATION SecurityInformation,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor)
LONG WINAPI advapi32.RegSetKeyValueA(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_opt_ LPCTSTR lpValueName,_In_ DWORD dwType,_In_opt_ LPCVOID lpData,_In_ DWORD cbData)
LONG WINAPI advapi32.RegSetKeyValue(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_opt_ LPCTSTR lpValueName,_In_ DWORD dwType,_In_opt_ LPCVOID lpData,_In_ DWORD cbData)
LONG WINAPI advapi32.RegSetKeyValueW(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_opt_ LPCTSTR lpValueName,_In_ DWORD dwType,_In_opt_ LPCVOID lpData,_In_ DWORD cbData)
LONG WINAPI advapi32.RegSetValueA(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_ DWORD dwType,_In_ LPCTSTR lpData,_In_ DWORD cbData)
LONG WINAPI advapi32.RegSetValue(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_ DWORD dwType,_In_ LPCTSTR lpData,_In_ DWORD cbData)
LONG WINAPI advapi32.RegSetValueW(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_ DWORD dwType,_In_ LPCTSTR lpData,_In_ DWORD cbData)
LONG WINAPI advapi32.RegUnLoadKeyA(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey)
LONG WINAPI advapi32.RegUnLoadKey(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey)
LONG WINAPI advapi32.RegUnLoadKeyW(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey)
LONG WINAPI clusapi.ClusterRegBatchCloseNotification(_In_ HREGBATCHNOTIFICATION hBatchNotification)
LONG WINAPI clusapi.ClusterRegBatchReadCommand(_In_ HREGBATCHNOTIFICATION hBatchNotification,_Out_ CLUSTER_BATCH_COMMAND *pBatchCommand)
LONG WINAPI clusapi.ClusterRegSetKeySecurity(_In_ HKEY hKey,_In_ SECURITY_INFORMATION SecurityInformation,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor)
LONG WINAPI crypt32.CertVerifyCRLTimeValidity(_In_ LPFILETIME pTimeToVerify,_In_ PCRL_INFO pCrlInfo)
LONG WINAPI crypt32.CertVerifyTimeValidity(_In_ LPFILETIME pTimeToVerify,_In_ PCERT_INFO pCertInfo)
LONG WINAPI kernel32.GetCurrentPackagePath(_Inout_ UINT32 *pathLength,_Out_opt_ PWSTR path)
LONG WINAPI kernel32.GetPackageApplicationIds(_In_ PACKAGE_INFO_REFERENCE packageInfoReference,_Inout_ UINT32 *bufferLength,_Out_opt_ BYTE *buffer,_Out_opt_ UINT32 *count)
LONG WINAPI kernel32.GetStagedPackageOrigin(_In_ PCWSTR packageFullName,_Out_ PackageOrigin *origin)
LONG WINAPI kernel32.GetStagedPackagePathByFullName(_In_ PCWSTR packageFullName,_Inout_ UINT32 *pathLength,_Out_opt_ PWSTR path)
LONG WINAPI kernel32.PackageFamilyNameFromFullName(_In_ PCWSTR packageFullName,_Inout_ UINT32 *packageFamilyNameLength,_Out_opt_ PWSTR packageFamilyName)
LONG WINAPI lz32.LZCopy(_In_ INT hfSource,_In_ INT hfDest)
LONG WINAPI lz32.LZSeek(_In_ INT hFile,_In_ LONG lOffset,_In_ INT iOrigin)
LONG WINAPI msports.ComDBClaimPort(_In_ HCOMDB HComDB,_In_ DWORD ComNumber,_In_ BOOL ForceClaim,_Out_opt_ PBOOL Forced)
LONG WINAPI msports.ComDBClose(_In_ HCOMDB HComDB)
LONG WINAPI msports.ComDBOpen(_Out_ PHCOMDB PHComDB)
LONG WINAPI None.SCardGetReaderDeviceInstanceId(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReaderName,_Out_opt_ LPTSTR szDeviceInstanceId,_Inout_ LPDWORD cchDeviceInstanceId)
LONG WINAPI None.SCardGetReaderIcon(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReaderName,_Out_ LPBYTE pbIcon,_Inout_ LPDWORD pcbIcon)
LONG WINAPI None.SCardListReadersWithDeviceInstanceId(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szDeviceInstanceId,_Out_opt_ LPTSTR mszReaders,_Inout_ LPDWORD pcchReaders)
LONG WINAPI scarddlg.SCardUIDlgSelectCardA(_In_ LPOPENCARDNAME_EX pDlgStruc)
LONG WINAPI scarddlg.SCardUIDlgSelectCard(_In_ LPOPENCARDNAME_EX pDlgStruc)
LONG WINAPI scarddlg.SCardUIDlgSelectCardW(_In_ LPOPENCARDNAME_EX pDlgStruc)
LONG WINAPI storprop.CdromDisableDigitalPlayback(_In_ HDEVINFO DevInfo,_In_ PSP_DEVINFO_DATA DevInfoData)
LONG WINAPI storprop.CdromEnableDigitalPlayback(_In_ HDEVINFO DevInfo,_In_ PSP_DEVINFO_DATA DevInfoData,_In_ BOOLEAN ForceUnknown)
LONG WINAPI storprop.CdromIsDigitalPlaybackEnabled(_In_ HDEVINFO DevInfo,_In_ PSP_DEVINFO_DATA DevInfoData,_Out_ PBOOLEAN Enabled)
LONG WINAPI tapi32.lineAccept(HCALL hCall None,LPCSTR lpsUserUserInfo None,DWORD dwSize None)
LONG WINAPI tapi32.lineAddProviderA(LPCSTR lpszProviderFilename None,HWND hwndOwner None,LPDWORD lpdwPermanentProviderID None)
LONG WINAPI tapi32.lineAddProvider(LPCSTR lpszProviderFilename None,HWND hwndOwner None,LPDWORD lpdwPermanentProviderID None)
LONG WINAPI tapi32.lineAddProviderW(LPCSTR lpszProviderFilename None,HWND hwndOwner None,LPDWORD lpdwPermanentProviderID None)
LONG WINAPI tapi32.lineAddToConference(HCALL hConfCall None,HCALL hConsultCall None)
LONG WINAPI tapi32.lineAgentSpecific(HLINE hLine None,DWORD dwAddressID None,DWORD dwAgentExtensionIDIndex None,LPVOID lpParams None,DWORD dwSize None)
LONG WINAPI tapi32.lineAnswer(HCALL hCall None,LPCSTR lpsUserUserInfo None,DWORD dwSize None)
LONG WINAPI tapi32.lineBlindTransferA(HCALL hCall None,LPCSTR lpszDestAddress None,DWORD dwCountryCode None)
LONG WINAPI tapi32.lineBlindTransfer(HCALL hCall None,LPCSTR lpszDestAddress None,DWORD dwCountryCode None)
LONG WINAPI tapi32.lineBlindTransferW(HCALL hCall None,LPCSTR lpszDestAddress None,DWORD dwCountryCode None)
LONG WINAPI tapi32.lineClose(HLINE hLine None)
LONG WINAPI tapi32.lineCompleteCall(HCALL hCall None,LPDWORD lpdwCompletionID None,DWORD dwCompletionMode None,DWORD dwMessageID None)
LONG WINAPI tapi32.lineCompleteTransfer(HCALL hCall None,HCALL hConsultCall None,LPHCALL lphConfCall None,DWORD dwTransferMode None)
LONG WINAPI tapi32.lineConfigDialogA(DWORD dwDeviceID None,HWND hwndOwner None,LPCSTR lpszDeviceClass None)
LONG WINAPI tapi32.lineConfigDialog(DWORD dwDeviceID None,HWND hwndOwner None,LPCSTR lpszDeviceClass None)
LONG WINAPI tapi32.lineConfigDialogEditA(DWORD dwDeviceID None,HWND hwndOwner None,LPCSTR lpszDeviceClass None,LPVOID const lpDeviceConfigIn,DWORD dwSize None,LPVARSTRING lpDeviceConfigOut None)
LONG WINAPI tapi32.lineConfigDialogEdit(DWORD dwDeviceID None,HWND hwndOwner None,LPCSTR lpszDeviceClass None,LPVOID const lpDeviceConfigIn,DWORD dwSize None,LPVARSTRING lpDeviceConfigOut None)
LONG WINAPI tapi32.lineConfigDialogEditW(DWORD dwDeviceID None,HWND hwndOwner None,LPCSTR lpszDeviceClass None,LPVOID const lpDeviceConfigIn,DWORD dwSize None,LPVARSTRING lpDeviceConfigOut None)
LONG WINAPI tapi32.lineConfigDialogW(DWORD dwDeviceID None,HWND hwndOwner None,LPCSTR lpszDeviceClass None)
LONG WINAPI tapi32.lineConfigProvider(HWND hwndOwner None,DWORD dwPermanentProviderID None)
LONG WINAPI tapi32.lineDeallocateCall(HCALL hCall None)
LONG WINAPI tapi32.lineDevSpecificFeature(HLINE hLine None,DWORD dwFeature None,LPVOID lpParams None,DWORD dwSize None)
LONG WINAPI tapi32.lineDevSpecific(HLINE hLine None,DWORD dwAddressID None,HCALL hCall None,LPVOID lpParams None,DWORD dwSize None)
LONG WINAPI tapi32.lineDialA(HCALL hCall None,LPCSTR lpszDestAddress None,DWORD dwCountryCode None)
LONG WINAPI tapi32.lineDial(HCALL hCall None,LPCSTR lpszDestAddress None,DWORD dwCountryCode None)
LONG WINAPI tapi32.lineDialW(HCALL hCall None,LPCSTR lpszDestAddress None,DWORD dwCountryCode None)
LONG WINAPI tapi32.lineDrop(HCALL hCall None,LPCSTR lpsUserUserInfo None,DWORD dwSize None)
LONG WINAPI tapi32.lineForwardA(HLINE hLine None,DWORD bAllAddresses None,DWORD dwAddressID None,LPLINEFORWARDLIST const lpForwardList,DWORD dwNumRingsNoAnswer None,LPHCALL lphConsultCall None,LPLINECALLPARAMS const lpCallParams)
LONG WINAPI tapi32.lineForward(HLINE hLine None,DWORD bAllAddresses None,DWORD dwAddressID None,LPLINEFORWARDLIST const lpForwardList,DWORD dwNumRingsNoAnswer None,LPHCALL lphConsultCall None,LPLINECALLPARAMS const lpCallParams)
LONG WINAPI tapi32.lineForwardW(HLINE hLine None,DWORD bAllAddresses None,DWORD dwAddressID None,LPLINEFORWARDLIST const lpForwardList,DWORD dwNumRingsNoAnswer None,LPHCALL lphConsultCall None,LPLINECALLPARAMS const lpCallParams)
LONG WINAPI tapi32.lineGatherDigitsA(HCALL hCall None,DWORD dwDigitModes None,LPSTR lpsDigits None,DWORD dwNumDigits None,LPCSTR lpszTerminationDigits None,DWORD dwFirstDigitTimeout None,DWORD dwInterDigitTimeout None)
LONG WINAPI tapi32.lineGatherDigits(HCALL hCall None,DWORD dwDigitModes None,LPSTR lpsDigits None,DWORD dwNumDigits None,LPCSTR lpszTerminationDigits None,DWORD dwFirstDigitTimeout None,DWORD dwInterDigitTimeout None)
LONG WINAPI tapi32.lineGatherDigitsW(HCALL hCall None,DWORD dwDigitModes None,LPSTR lpsDigits None,DWORD dwNumDigits None,LPCSTR lpszTerminationDigits None,DWORD dwFirstDigitTimeout None,DWORD dwInterDigitTimeout None)
LONG WINAPI tapi32.lineGenerateDigitsA(HCALL hCall None,DWORD dwDigitMode None,LPCSTR lpszDigits None,DWORD dwDuration None)
LONG WINAPI tapi32.lineGenerateDigits(HCALL hCall None,DWORD dwDigitMode None,LPCSTR lpszDigits None,DWORD dwDuration None)
LONG WINAPI tapi32.lineGenerateDigitsW(HCALL hCall None,DWORD dwDigitMode None,LPCSTR lpszDigits None,DWORD dwDuration None)
LONG WINAPI tapi32.lineGenerateTone(HCALL hCall None,DWORD dwToneMode None,DWORD dwDuration None,DWORD dwNumTones None,LPLINEGENERATETONE const lpTones)
LONG WINAPI tapi32.lineGetAddressCapsA(HLINEAPP hLineApp None,DWORD dwDeviceID None,DWORD dwAddressID None,DWORD dwAPIVersion None,DWORD dwExtVersion None,LPLINEADDRESSCAPS lpAddressCaps None)
LONG WINAPI tapi32.lineGetAddressCaps(HLINEAPP hLineApp None,DWORD dwDeviceID None,DWORD dwAddressID None,DWORD dwAPIVersion None,DWORD dwExtVersion None,LPLINEADDRESSCAPS lpAddressCaps None)
LONG WINAPI tapi32.lineGetAddressCapsW(HLINEAPP hLineApp None,DWORD dwDeviceID None,DWORD dwAddressID None,DWORD dwAPIVersion None,DWORD dwExtVersion None,LPLINEADDRESSCAPS lpAddressCaps None)
LONG WINAPI tapi32.lineGetAddressIDA(HLINE hLine None,LPDWORD lpdwAddressID None,DWORD dwAddressMode None,LPCSTR lpsAddress None,DWORD dwSize None)
LONG WINAPI tapi32.lineGetAddressID(HLINE hLine None,LPDWORD lpdwAddressID None,DWORD dwAddressMode None,LPCSTR lpsAddress None,DWORD dwSize None)
LONG WINAPI tapi32.lineGetAddressIDW(HLINE hLine None,LPDWORD lpdwAddressID None,DWORD dwAddressMode None,LPCSTR lpsAddress None,DWORD dwSize None)
LONG WINAPI tapi32.lineGetAddressStatusA(HLINE hLine None,DWORD dwAddressID None,LPLINEADDRESSSTATUS lpAddressStatus None)
LONG WINAPI tapi32.lineGetAddressStatus(HLINE hLine None,DWORD dwAddressID None,LPLINEADDRESSSTATUS lpAddressStatus None)
LONG WINAPI tapi32.lineGetAddressStatusW(HLINE hLine None,DWORD dwAddressID None,LPLINEADDRESSSTATUS lpAddressStatus None)
LONG WINAPI tapi32.lineGetAgentActivityListA(HLINE hLine None,DWORD dwAddressID None,LPLINEAGENTACTIVITYLIST lpAgentActivityList None)
LONG WINAPI tapi32.lineGetAgentActivityList(HLINE hLine None,DWORD dwAddressID None,LPLINEAGENTACTIVITYLIST lpAgentActivityList None)
LONG WINAPI tapi32.lineGetAgentActivityListW(HLINE hLine None,DWORD dwAddressID None,LPLINEAGENTACTIVITYLIST lpAgentActivityList None)
LONG WINAPI tapi32.lineGetAgentCapsA(HLINEAPP hLineApp None,DWORD dwDeviceID None,DWORD dwAddressID None,DWORD dwAppAPIVersion None,LPLINEAGENTCAPS lpAgentCaps None)
LONG WINAPI tapi32.lineGetAgentCaps(HLINEAPP hLineApp None,DWORD dwDeviceID None,DWORD dwAddressID None,DWORD dwAppAPIVersion None,LPLINEAGENTCAPS lpAgentCaps None)
LONG WINAPI tapi32.lineGetAgentCapsW(HLINEAPP hLineApp None,DWORD dwDeviceID None,DWORD dwAddressID None,DWORD dwAppAPIVersion None,LPLINEAGENTCAPS lpAgentCaps None)
LONG WINAPI tapi32.lineGetAgentStatusA(HLINE hLine None,DWORD dwAddressID None,LPLINEAGENTSTATUS lpAgentStatus None)
LONG WINAPI tapi32.lineGetAgentStatus(HLINE hLine None,DWORD dwAddressID None,LPLINEAGENTSTATUS lpAgentStatus None)
LONG WINAPI tapi32.lineGetAgentStatusW(HLINE hLine None,DWORD dwAddressID None,LPLINEAGENTSTATUS lpAgentStatus None)
LONG WINAPI tapi32.lineGetAppPriorityA(LPCSTR lpszAppFilename None,DWORD dwMediaMode None,LPLINEEXTENSIONID lpExtensionID None,DWORD dwRequestMode None,LPVARSTRING lpExtensionName None,LPDWORD lpdwPriority None)
LONG WINAPI tapi32.lineGetAppPriority(LPCSTR lpszAppFilename None,DWORD dwMediaMode None,LPLINEEXTENSIONID lpExtensionID None,DWORD dwRequestMode None,LPVARSTRING lpExtensionName None,LPDWORD lpdwPriority None)
LONG WINAPI tapi32.lineGetAppPriorityW(LPCSTR lpszAppFilename None,DWORD dwMediaMode None,LPLINEEXTENSIONID lpExtensionID None,DWORD dwRequestMode None,LPVARSTRING lpExtensionName None,LPDWORD lpdwPriority None)
LONG WINAPI tapi32.lineGetCallInfoA(HCALL hCall None,LPLINECALLINFO lpCallInfo None)
LONG WINAPI tapi32.lineGetCallInfo(HCALL hCall None,LPLINECALLINFO lpCallInfo None)
LONG WINAPI tapi32.lineGetCallInfoW(HCALL hCall None,LPLINECALLINFO lpCallInfo None)
LONG WINAPI tapi32.lineGetCallStatus(HCALL hCall None,LPLINECALLSTATUS lpCallStatus None)
LONG WINAPI tapi32.lineGetConfRelatedCalls(HCALL hCall None,LPLINECALLLIST lpCallList None)
LONG WINAPI tapi32.lineGetCountryA(DWORD dwCountryID None,DWORD dwAPIVersion None,LPLINECOUNTRYLIST lpLineCountryList None)
LONG WINAPI tapi32.lineGetCountry(DWORD dwCountryID None,DWORD dwAPIVersion None,LPLINECOUNTRYLIST lpLineCountryList None)
LONG WINAPI tapi32.lineGetCountryW(DWORD dwCountryID None,DWORD dwAPIVersion None,LPLINECOUNTRYLIST lpLineCountryList None)
LONG WINAPI tapi32.lineGetDevCapsA(HLINEAPP hLineApp None,DWORD dwDeviceID None,DWORD dwAPIVersion None,DWORD dwExtVersion None,LPLINEDEVCAPS lpLineDevCaps None)
LONG WINAPI tapi32.lineGetDevCaps(HLINEAPP hLineApp None,DWORD dwDeviceID None,DWORD dwAPIVersion None,DWORD dwExtVersion None,LPLINEDEVCAPS lpLineDevCaps None)
LONG WINAPI tapi32.lineGetDevCapsW(HLINEAPP hLineApp None,DWORD dwDeviceID None,DWORD dwAPIVersion None,DWORD dwExtVersion None,LPLINEDEVCAPS lpLineDevCaps None)
LONG WINAPI tapi32.lineGetDevConfigA(DWORD dwDeviceID None,LPVARSTRING lpDeviceConfig None,LPCSTR lpszDeviceClass None)
LONG WINAPI tapi32.lineGetDevConfig(DWORD dwDeviceID None,LPVARSTRING lpDeviceConfig None,LPCSTR lpszDeviceClass None)
LONG WINAPI tapi32.lineGetDevConfigW(DWORD dwDeviceID None,LPVARSTRING lpDeviceConfig None,LPCSTR lpszDeviceClass None)
LONG WINAPI tapi32.lineGetIconA(DWORD dwDeviceID None,LPCSTR lpszDeviceClass None,LPHICON lphIcon None)
LONG WINAPI tapi32.lineGetIcon(DWORD dwDeviceID None,LPCSTR lpszDeviceClass None,LPHICON lphIcon None)
LONG WINAPI tapi32.lineGetIconW(DWORD dwDeviceID None,LPCSTR lpszDeviceClass None,LPHICON lphIcon None)
LONG WINAPI tapi32.lineGetIDA(HLINE hLine None,DWORD dwAddressID None,HCALL hCall None,DWORD dwSelect None,LPVARSTRING lpDeviceID None,LPCSTR lpszDeviceClass None)
LONG WINAPI tapi32.lineGetID(HLINE hLine None,DWORD dwAddressID None,HCALL hCall None,DWORD dwSelect None,LPVARSTRING lpDeviceID None,LPCSTR lpszDeviceClass None)
LONG WINAPI tapi32.lineGetIDW(HLINE hLine None,DWORD dwAddressID None,HCALL hCall None,DWORD dwSelect None,LPVARSTRING lpDeviceID None,LPCSTR lpszDeviceClass None)
LONG WINAPI tapi32.lineGetLineDevStatusA(HLINE hLine None,LPLINEDEVSTATUS lpLineDevStatus None)
LONG WINAPI tapi32.lineGetLineDevStatus(HLINE hLine None,LPLINEDEVSTATUS lpLineDevStatus None)
LONG WINAPI tapi32.lineGetLineDevStatusW(HLINE hLine None,LPLINEDEVSTATUS lpLineDevStatus None)
LONG WINAPI tapi32.lineGetMessage(HLINEAPP hLineApp None,LPLINEMESSAGE lpMessage None,DWORD dwTimeout None)
LONG WINAPI tapi32.lineGetNewCalls(HLINE hLine None,DWORD dwAddressID None,DWORD dwSelect None,LPLINECALLLIST lpCallList None)
LONG WINAPI tapi32.lineGetNumRings(HLINE hLine None,DWORD dwAddressID None,LPDWORD lpdwNumRings None)
LONG WINAPI tapi32.lineGetProviderListA(DWORD dwAPIVersion None,LPLINEPROVIDERLIST lpProviderList None)
LONG WINAPI tapi32.lineGetProviderList(DWORD dwAPIVersion None,LPLINEPROVIDERLIST lpProviderList None)
LONG WINAPI tapi32.lineGetProviderListW(DWORD dwAPIVersion None,LPLINEPROVIDERLIST lpProviderList None)
LONG WINAPI tapi32.lineGetRequestA(HLINEAPP hLineApp None,DWORD dwRequestMode None,LPVOID lpRequestBuffer None)
LONG WINAPI tapi32.lineGetRequest(HLINEAPP hLineApp None,DWORD dwRequestMode None,LPVOID lpRequestBuffer None)
LONG WINAPI tapi32.lineGetRequestW(HLINEAPP hLineApp None,DWORD dwRequestMode None,LPVOID lpRequestBuffer None)
LONG WINAPI tapi32.lineGetStatusMessages(HLINE hLine None,LPDWORD lpdwLineStates None,LPDWORD lpdwAddressStates None)
LONG WINAPI tapi32.lineGetTranslateCapsA(HLINEAPP hLineApp None,DWORD dwAPIVersion None,LPLINETRANSLATECAPS lpTranslateCaps None)
LONG WINAPI tapi32.lineGetTranslateCaps(HLINEAPP hLineApp None,DWORD dwAPIVersion None,LPLINETRANSLATECAPS lpTranslateCaps None)
LONG WINAPI tapi32.lineGetTranslateCapsW(HLINEAPP hLineApp None,DWORD dwAPIVersion None,LPLINETRANSLATECAPS lpTranslateCaps None)
LONG WINAPI tapi32.lineHandoffA(HCALL hCall None,LPCSTR lpszFileName None,DWORD dwMediaMode None)
LONG WINAPI tapi32.lineHandoff(HCALL hCall None,LPCSTR lpszFileName None,DWORD dwMediaMode None)
LONG WINAPI tapi32.lineHandoffW(HCALL hCall None,LPCSTR lpszFileName None,DWORD dwMediaMode None)
LONG WINAPI tapi32.lineHold(HCALL hCall None)
LONG WINAPI tapi32.lineInitializeExA(LPHLINEAPP lphLineApp None,HINSTANCE hInstance None,LINECALLBACK lpfnCallback None,LPCSTR lpszFriendlyAppName None,LPDWORD lpdwNumDevs None,LPDWORD lpdwAPIVersion None,LPLINEINITIALIZEEXPARAMS lpLineInitializeExParams None)
LONG WINAPI tapi32.lineInitializeEx(LPHLINEAPP lphLineApp None,HINSTANCE hInstance None,LINECALLBACK lpfnCallback None,LPCSTR lpszFriendlyAppName None,LPDWORD lpdwNumDevs None,LPDWORD lpdwAPIVersion None,LPLINEINITIALIZEEXPARAMS lpLineInitializeExParams None)
LONG WINAPI tapi32.lineInitializeExW(LPHLINEAPP lphLineApp None,HINSTANCE hInstance None,LINECALLBACK lpfnCallback None,LPCSTR lpszFriendlyAppName None,LPDWORD lpdwNumDevs None,LPDWORD lpdwAPIVersion None,LPLINEINITIALIZEEXPARAMS lpLineInitializeExParams None)
LONG WINAPI tapi32.lineInitialize(LPHLINEAPP lphLineApp None,HINSTANCE hInstance None,LINECALLBACK lpfnCallback None,LPCSTR lpszAppName None,LPDWORD lpdwNumDevs None)
LONG WINAPI tapi32.lineMakeCallA(HLINE hLine None,LPHCALL lphCall None,LPCSTR lpszDestAddress None,DWORD dwCountryCode None,LPLINECALLPARAMS const lpCallParams)
LONG WINAPI tapi32.lineMakeCall(HLINE hLine None,LPHCALL lphCall None,LPCSTR lpszDestAddress None,DWORD dwCountryCode None,LPLINECALLPARAMS const lpCallParams)
LONG WINAPI tapi32.lineMakeCallW(HLINE hLine None,LPHCALL lphCall None,LPCSTR lpszDestAddress None,DWORD dwCountryCode None,LPLINECALLPARAMS const lpCallParams)
LONG WINAPI tapi32.lineMonitorDigits(HCALL hCall None,DWORD dwDigitModes None)
LONG WINAPI tapi32.lineMonitorMedia(HCALL hCall None,DWORD dwMediaModes None)
LONG WINAPI tapi32.lineMonitorTones(HCALL hCall None,LPLINEMONITORTONE const lpToneList,DWORD dwNumEntries None)
LONG WINAPI tapi32.lineNegotiateAPIVersion(HLINEAPP hLineApp None,DWORD dwDeviceID None,DWORD dwAPILowVersion None,DWORD dwAPIHighVersion None,LPDWORD lpdwAPIVersion None,LPLINEEXTENSIONID lpExtensionID None)
LONG WINAPI tapi32.lineNegotiateExtVersion(HLINEAPP hLineApp None,DWORD dwDeviceID None,DWORD dwAPIVersion None,DWORD dwExtLowVersion None,DWORD dwExtHighVersion None,LPDWORD lpdwExtVersion None)
LONG WINAPI tapi32.lineOpenA(HLINEAPP hLineApp None,DWORD dwDeviceID None,LPHLINE lphLine None,DWORD dwAPIVersion None,DWORD dwExtVersion None,DWORD_PTR dwCallbackInstance None,DWORD dwPrivileges None,DWORD dwMediaModes None,LPLINECALLPARAMS const lpCallParams)
LONG WINAPI tapi32.lineOpen(HLINEAPP hLineApp None,DWORD dwDeviceID None,LPHLINE lphLine None,DWORD dwAPIVersion None,DWORD dwExtVersion None,DWORD_PTR dwCallbackInstance None,DWORD dwPrivileges None,DWORD dwMediaModes None,LPLINECALLPARAMS const lpCallParams)
LONG WINAPI tapi32.lineOpenW(HLINEAPP hLineApp None,DWORD dwDeviceID None,LPHLINE lphLine None,DWORD dwAPIVersion None,DWORD dwExtVersion None,DWORD_PTR dwCallbackInstance None,DWORD dwPrivileges None,DWORD dwMediaModes None,LPLINECALLPARAMS const lpCallParams)
LONG WINAPI tapi32.lineParkA(HCALL hCall None,DWORD dwParkMode None,LPCSTR lpszDirAddress None,LPVARSTRING lpNonDirAddress None)
LONG WINAPI tapi32.linePark(HCALL hCall None,DWORD dwParkMode None,LPCSTR lpszDirAddress None,LPVARSTRING lpNonDirAddress None)
LONG WINAPI tapi32.lineParkW(HCALL hCall None,DWORD dwParkMode None,LPCSTR lpszDirAddress None,LPVARSTRING lpNonDirAddress None)
LONG WINAPI tapi32.linePickupA(HLINE hLine None,DWORD dwAddressID None,LPHCALL lphCall None,LPCSTR lpszDestAddress None,LPCSTR lpszGroupID None)
LONG WINAPI tapi32.linePickup(HLINE hLine None,DWORD dwAddressID None,LPHCALL lphCall None,LPCSTR lpszDestAddress None,LPCSTR lpszGroupID None)
LONG WINAPI tapi32.linePickupW(HLINE hLine None,DWORD dwAddressID None,LPHCALL lphCall None,LPCSTR lpszDestAddress None,LPCSTR lpszGroupID None)
LONG WINAPI tapi32.linePrepareAddToConferenceA(HCALL hConfCall None,LPHCALL lphConsultCall None,LPLINECALLPARAMS const lpCallParams)
LONG WINAPI tapi32.linePrepareAddToConference(HCALL hConfCall None,LPHCALL lphConsultCall None,LPLINECALLPARAMS const lpCallParams)
LONG WINAPI tapi32.linePrepareAddToConferenceW(HCALL hConfCall None,LPHCALL lphConsultCall None,LPLINECALLPARAMS const lpCallParams)
LONG WINAPI tapi32.lineProxyMessage(HLINE hLine None,HCALL hCall None,DWORD dwMsg None,DWORD dwParam1 None,DWORD dwParam2 None,DWORD dwParam3 None)
LONG WINAPI tapi32.lineProxyResponse(HLINE hLine None,LPLINEPROXYREQUEST lpProxyRequest None,DWORD dwResult None)
LONG WINAPI tapi32.lineRedirectA(HCALL hCall None,LPCSTR lpszDestAddress None,DWORD dwCountryCode None)
LONG WINAPI tapi32.lineRedirect(HCALL hCall None,LPCSTR lpszDestAddress None,DWORD dwCountryCode None)
LONG WINAPI tapi32.lineRedirectW(HCALL hCall None,LPCSTR lpszDestAddress None,DWORD dwCountryCode None)
LONG WINAPI tapi32.lineRegisterRequestRecipient(HLINEAPP hLineApp None,DWORD dwRegistrationInstance None,DWORD dwRequestMode None,DWORD bEnable None)
LONG WINAPI tapi32.lineReleaseUserUserInfo(HCALL hCall None)
LONG WINAPI tapi32.lineRemoveFromConference(HCALL hCall None)
LONG WINAPI tapi32.lineRemoveProvider(DWORD dwPermanentProviderID None,HWND hwndOwner None)
LONG WINAPI tapi32.lineSecureCall(HCALL hCall None)
LONG WINAPI tapi32.lineSendUserUserInfo(HCALL hCall None,LPCSTR lpsUserUserInfo None,DWORD dwSize None)
LONG WINAPI tapi32.lineSetAgentActivity(HLINE hLine None,DWORD dwAddressID None,DWORD dwActivityID None)
LONG WINAPI tapi32.lineSetAgentGroup(HLINE hLine None,DWORD dwAddressID None,LPLINEAGENTGROUPLIST lpAgentGroupList None)
LONG WINAPI tapi32.lineSetAgentState(HLINE hLine None,DWORD dwAddressID None,DWORD dwAgentState None,DWORD dwNextAgentState None)
LONG WINAPI tapi32.lineSetAppPriorityA(LPCSTR lpszAppFilename None,DWORD dwMediaMode None,LPLINEEXTENSIONID lpExtensionID None,DWORD dwRequestMode None,LPCSTR lpszExtensionName None,DWORD dwPriority None)
LONG WINAPI tapi32.lineSetAppPriority(LPCSTR lpszAppFilename None,DWORD dwMediaMode None,LPLINEEXTENSIONID lpExtensionID None,DWORD dwRequestMode None,LPCSTR lpszExtensionName None,DWORD dwPriority None)
LONG WINAPI tapi32.lineSetAppPriorityW(LPCSTR lpszAppFilename None,DWORD dwMediaMode None,LPLINEEXTENSIONID lpExtensionID None,DWORD dwRequestMode None,LPCSTR lpszExtensionName None,DWORD dwPriority None)
LONG WINAPI tapi32.lineSetAppSpecific(HCALL hCall None,DWORD dwAppSpecific None)
LONG WINAPI tapi32.lineSetCallData(HCALL hCall None,LPVOID lpCallData None,DWORD dwSize None)
LONG WINAPI tapi32.lineSetCallParams(HCALL hCall None,DWORD dwBearerMode None,DWORD dwMinRate None,DWORD dwMaxRate None,LPLINEDIALPARAMS const lpDialParams)
LONG WINAPI tapi32.lineSetCallPrivilege(HCALL hCall None,DWORD dwCallPrivilege None)
LONG WINAPI tapi32.lineSetCallQualityOfService(HCALL hCall None,LPVOID lpSendingFlowspec None,DWORD dwSendingFlowspecSize None,LPVOID lpReceivingFlowspec None,DWORD dwReceivingFlowspecSize None)
LONG WINAPI tapi32.lineSetCallTreatment(HCALL hCall None,DWORD dwTreatment None)
LONG WINAPI tapi32.lineSetCurrentLocation(HLINEAPP hLineApp None,DWORD dwLocation None)
LONG WINAPI tapi32.lineSetDevConfigA(DWORD dwDeviceID None,LPVOID const lpDeviceConfig,DWORD dwSize None,LPCSTR lpszDeviceClass None)
LONG WINAPI tapi32.lineSetDevConfig(DWORD dwDeviceID None,LPVOID const lpDeviceConfig,DWORD dwSize None,LPCSTR lpszDeviceClass None)
LONG WINAPI tapi32.lineSetDevConfigW(DWORD dwDeviceID None,LPVOID const lpDeviceConfig,DWORD dwSize None,LPCSTR lpszDeviceClass None)
LONG WINAPI tapi32.lineSetLineDevStatus(HLINE hLine None,DWORD dwStatusToChange None,DWORD fStatus None)
LONG WINAPI tapi32.lineSetMediaControl(HLINE hLine None,DWORD dwAddressID None,HCALL hCall None,DWORD dwSelect None,LPLINEMEDIACONTROLDIGIT const lpDigitList,DWORD dwDigitNumEntries None,LPLINEMEDIACONTROLMEDIA const lpMediaList,DWORD dwMediaNumEntries None,LPLINEMEDIACONTROLTONE const lpToneList,DWORD dwToneNumEntries None,LPLINEMEDIACONTROLCALLSTATE const lpCallStateList,DWORD dwCallStateNumEntries None)
LONG WINAPI tapi32.lineSetMediaMode(HCALL hCall None,DWORD dwMediaModes None)
LONG WINAPI tapi32.lineSetNumRings(HLINE hLine None,DWORD dwAddressID None,DWORD dwNumRings None)
LONG WINAPI tapi32.lineSetStatusMessages(HLINE hLine None,DWORD dwLineStates None,DWORD dwAddressStates None)
LONG WINAPI tapi32.lineSetTerminal(HLINE hLine None,DWORD dwAddressID None,HCALL hCall None,DWORD dwSelect None,DWORD dwTerminalModes None,DWORD dwTerminalID None,DWORD bEnable None)
LONG WINAPI tapi32.lineSetTollListA(HLINEAPP hLineApp None,DWORD dwDeviceID None,LPCSTR lpszAddressIn None,DWORD dwTollListOption None)
LONG WINAPI tapi32.lineSetTollList(HLINEAPP hLineApp None,DWORD dwDeviceID None,LPCSTR lpszAddressIn None,DWORD dwTollListOption None)
LONG WINAPI tapi32.lineSetTollListW(HLINEAPP hLineApp None,DWORD dwDeviceID None,LPCSTR lpszAddressIn None,DWORD dwTollListOption None)
LONG WINAPI tapi32.lineSetupConferenceA(HCALL hCall None,HLINE hLine None,LPHCALL lphConfCall None,LPHCALL lphConsultCall None,DWORD dwNumParties None,LPLINECALLPARAMS const lpCallParams)
LONG WINAPI tapi32.lineSetupConference(HCALL hCall None,HLINE hLine None,LPHCALL lphConfCall None,LPHCALL lphConsultCall None,DWORD dwNumParties None,LPLINECALLPARAMS const lpCallParams)
LONG WINAPI tapi32.lineSetupConferenceW(HCALL hCall None,HLINE hLine None,LPHCALL lphConfCall None,LPHCALL lphConsultCall None,DWORD dwNumParties None,LPLINECALLPARAMS const lpCallParams)
LONG WINAPI tapi32.lineSetupTransferA(HCALL hCall None,LPHCALL lphConsultCall None,LPLINECALLPARAMS const lpCallParams)
LONG WINAPI tapi32.lineSetupTransfer(HCALL hCall None,LPHCALL lphConsultCall None,LPLINECALLPARAMS const lpCallParams)
LONG WINAPI tapi32.lineSetupTransferW(HCALL hCall None,LPHCALL lphConsultCall None,LPLINECALLPARAMS const lpCallParams)
LONG WINAPI tapi32.lineShutdown(HLINEAPP hLineApp None)
LONG WINAPI tapi32.lineSwapHold(HCALL hActiveCall None,HCALL hHeldCall None)
LONG WINAPI tapi32.lineTranslateAddressA(HLINEAPP hLineApp None,DWORD dwDeviceID None,DWORD dwAPIVersion None,LPCSTR lpszAddressIn None,DWORD dwCard None,DWORD dwTranslateOptions None,LPLINETRANSLATEOUTPUT lpTranslateOutput None)
LONG WINAPI tapi32.lineTranslateAddress(HLINEAPP hLineApp None,DWORD dwDeviceID None,DWORD dwAPIVersion None,LPCSTR lpszAddressIn None,DWORD dwCard None,DWORD dwTranslateOptions None,LPLINETRANSLATEOUTPUT lpTranslateOutput None)
LONG WINAPI tapi32.lineTranslateAddressW(HLINEAPP hLineApp None,DWORD dwDeviceID None,DWORD dwAPIVersion None,LPCSTR lpszAddressIn None,DWORD dwCard None,DWORD dwTranslateOptions None,LPLINETRANSLATEOUTPUT lpTranslateOutput None)
LONG WINAPI tapi32.lineTranslateDialogA(HLINEAPP hLineApp None,DWORD dwDeviceID None,DWORD dwAPIVersion None,HWND hwndOwner None,LPCSTR lpszAddressIn None)
LONG WINAPI tapi32.lineTranslateDialog(HLINEAPP hLineApp None,DWORD dwDeviceID None,DWORD dwAPIVersion None,HWND hwndOwner None,LPCSTR lpszAddressIn None)
LONG WINAPI tapi32.lineTranslateDialogW(HLINEAPP hLineApp None,DWORD dwDeviceID None,DWORD dwAPIVersion None,HWND hwndOwner None,LPCSTR lpszAddressIn None)
LONG WINAPI tapi32.lineUncompleteCall(HLINE hLine None,DWORD dwCompletionID None)
LONG WINAPI tapi32.lineUnhold(HCALL hCall None)
LONG WINAPI tapi32.lineUnparkA(HLINE hLine None,DWORD dwAddressID None,LPHCALL lphCall None,LPCSTR lpszDestAddress None)
LONG WINAPI tapi32.lineUnpark(HLINE hLine None,DWORD dwAddressID None,LPHCALL lphCall None,LPCSTR lpszDestAddress None)
LONG WINAPI tapi32.lineUnparkW(HLINE hLine None,DWORD dwAddressID None,LPHCALL lphCall None,LPCSTR lpszDestAddress None)
LONG WINAPI tapi32.phoneClose(HPHONE hPhone None)
LONG WINAPI tapi32.phoneConfigDialogA(DWORD dwDeviceID None,HWND hwndOwner None,LPCSTR lpszDeviceClass None)
LONG WINAPI tapi32.phoneConfigDialog(DWORD dwDeviceID None,HWND hwndOwner None,LPCSTR lpszDeviceClass None)
LONG WINAPI tapi32.phoneConfigDialogW(DWORD dwDeviceID None,HWND hwndOwner None,LPCSTR lpszDeviceClass None)
LONG WINAPI tapi32.phoneDevSpecific(HPHONE hPhone None,LPVOID lpParams None,DWORD dwSize None)
LONG WINAPI tapi32.phoneGetButtonInfoA(HPHONE hPhone None,DWORD dwButtonLampID None,LPPHONEBUTTONINFO lpButtonInfo None)
LONG WINAPI tapi32.phoneGetButtonInfo(HPHONE hPhone None,DWORD dwButtonLampID None,LPPHONEBUTTONINFO lpButtonInfo None)
LONG WINAPI tapi32.phoneGetButtonInfoW(HPHONE hPhone None,DWORD dwButtonLampID None,LPPHONEBUTTONINFO lpButtonInfo None)
LONG WINAPI tapi32.phoneGetData(HPHONE hPhone None,DWORD dwDataID None,LPVOID lpData None,DWORD dwSize None)
LONG WINAPI tapi32.phoneGetDevCapsA(HPHONEAPP hPhoneApp None,DWORD dwDeviceID None,DWORD dwAPIVersion None,DWORD dwExtVersion None,LPPHONECAPS lpPhoneCaps None)
LONG WINAPI tapi32.phoneGetDevCaps(HPHONEAPP hPhoneApp None,DWORD dwDeviceID None,DWORD dwAPIVersion None,DWORD dwExtVersion None,LPPHONECAPS lpPhoneCaps None)
LONG WINAPI tapi32.phoneGetDevCapsW(HPHONEAPP hPhoneApp None,DWORD dwDeviceID None,DWORD dwAPIVersion None,DWORD dwExtVersion None,LPPHONECAPS lpPhoneCaps None)
LONG WINAPI tapi32.phoneGetDisplay(HPHONE hPhone None,LPVARSTRING lpDisplay None)
LONG WINAPI tapi32.phoneGetGain(HPHONE hPhone None,DWORD dwHookSwitchDev None,LPDWORD lpdwGain None)
LONG WINAPI tapi32.phoneGetHookSwitch(HPHONE hPhone None,LPDWORD lpdwHookSwitchDevs None)
LONG WINAPI tapi32.phoneGetIconA(DWORD dwDeviceID None,LPCSTR lpszDeviceClass None,LPHICON lphIcon None)
LONG WINAPI tapi32.phoneGetIcon(DWORD dwDeviceID None,LPCSTR lpszDeviceClass None,LPHICON lphIcon None)
LONG WINAPI tapi32.phoneGetIconW(DWORD dwDeviceID None,LPCSTR lpszDeviceClass None,LPHICON lphIcon None)
LONG WINAPI tapi32.phoneGetIDA(HPHONE hPhone None,LPVARSTRING lpDeviceID None,LPCSTR lpszDeviceClass None)
LONG WINAPI tapi32.phoneGetID(HPHONE hPhone None,LPVARSTRING lpDeviceID None,LPCSTR lpszDeviceClass None)
LONG WINAPI tapi32.phoneGetIDW(HPHONE hPhone None,LPVARSTRING lpDeviceID None,LPCSTR lpszDeviceClass None)
LONG WINAPI tapi32.phoneGetLamp(HPHONE hPhone None,DWORD dwButtonLampID None,LPDWORD lpdwLampMode None)
LONG WINAPI tapi32.phoneGetMessage(HPHONEAPP hPhoneApp None,LPPHONEMESSAGE lpMessage None,DWORD dwTimeout None)
LONG WINAPI tapi32.phoneGetRing(HPHONE hPhone None,LPDWORD lpdwRingMode None,LPDWORD lpdwVolume None)
LONG WINAPI tapi32.phoneGetStatusA(HPHONE hPhone None,LPPHONESTATUS lpPhoneStatus None)
LONG WINAPI tapi32.phoneGetStatus(HPHONE hPhone None,LPPHONESTATUS lpPhoneStatus None)
LONG WINAPI tapi32.phoneGetStatusMessages(HPHONE hPhone None,LPDWORD lpdwPhoneStates None,LPDWORD lpdwButtonModes None,LPDWORD lpdwButtonStates None)
LONG WINAPI tapi32.phoneGetStatusW(HPHONE hPhone None,LPPHONESTATUS lpPhoneStatus None)
LONG WINAPI tapi32.phoneGetVolume(HPHONE hPhone None,DWORD dwHookSwitchDev None,LPDWORD lpdwVolume None)
LONG WINAPI tapi32.phoneInitializeExA(LPHPHONEAPP lphPhoneApp None,HINSTANCE hInstance None,PHONECALLBACK lpfnCallback None,LPCSTR lpszFriendlyAppName None,LPDWORD lpdwNumDevs None,LPDWORD lpdwAPIVersion None,LPPHONEINITIALIZEEXPARAMS lpPhoneInitializeExParams None)
LONG WINAPI tapi32.phoneInitializeEx(LPHPHONEAPP lphPhoneApp None,HINSTANCE hInstance None,PHONECALLBACK lpfnCallback None,LPCSTR lpszFriendlyAppName None,LPDWORD lpdwNumDevs None,LPDWORD lpdwAPIVersion None,LPPHONEINITIALIZEEXPARAMS lpPhoneInitializeExParams None)
LONG WINAPI tapi32.phoneInitializeExW(LPHPHONEAPP lphPhoneApp None,HINSTANCE hInstance None,PHONECALLBACK lpfnCallback None,LPCSTR lpszFriendlyAppName None,LPDWORD lpdwNumDevs None,LPDWORD lpdwAPIVersion None,LPPHONEINITIALIZEEXPARAMS lpPhoneInitializeExParams None)
LONG WINAPI tapi32.phoneInitialize(LPHPHONEAPP lphPhoneApp None,HINSTANCE hInstance None,PHONECALLBACK lpfnCallback None,LPCSTR lpszAppName None,LPDWORD lpdwNumDevs None)
LONG WINAPI tapi32.phoneNegotiateAPIVersion(HPHONEAPP hPhoneApp None,DWORD dwDeviceID None,DWORD dwAPILowVersion None,DWORD dwAPIHighVersion None,LPDWORD lpdwAPIVersion None,LPPHONEEXTENSIONID lpExtensionID None)
LONG WINAPI tapi32.phoneNegotiateExtVersion(HPHONEAPP hPhoneApp None,DWORD dwDeviceID None,DWORD dwAPIVersion None,DWORD dwExtLowVersion None,DWORD dwExtHighVersion None,LPDWORD lpdwExtVersion None)
LONG WINAPI tapi32.phoneOpen(HPHONEAPP hPhoneApp None,DWORD dwDeviceID None,LPHPHONE lphPhone None,DWORD dwAPIVersion None,DWORD dwExtVersion None,DWORD_PTR dwCallbackInstance None,DWORD dwPrivilege None)
LONG WINAPI tapi32.phoneSetButtonInfoA(HPHONE hPhone None,DWORD dwButtonLampID None,LPPHONEBUTTONINFO const lpButtonInfo)
LONG WINAPI tapi32.phoneSetButtonInfo(HPHONE hPhone None,DWORD dwButtonLampID None,LPPHONEBUTTONINFO const lpButtonInfo)
LONG WINAPI tapi32.phoneSetButtonInfoW(HPHONE hPhone None,DWORD dwButtonLampID None,LPPHONEBUTTONINFO const lpButtonInfo)
LONG WINAPI tapi32.phoneSetData(HPHONE hPhone None,DWORD dwDataID None,LPVOID const lpData,DWORD dwSize None)
LONG WINAPI tapi32.phoneSetDisplay(HPHONE hPhone None,DWORD dwRow None,DWORD dwColumn None,LPCSTR lpsDisplay None,DWORD dwSize None)
LONG WINAPI tapi32.phoneSetGain(HPHONE hPhone None,DWORD dwHookSwitchDev None,DWORD dwGain None)
LONG WINAPI tapi32.phoneSetHookSwitch(HPHONE hPhone None,DWORD dwHookSwitchDevs None,DWORD dwHookSwitchMode None)
LONG WINAPI tapi32.phoneSetLamp(HPHONE hPhone None,DWORD dwButtonLampID None,DWORD dwLampMode None)
LONG WINAPI tapi32.phoneSetRing(HPHONE hPhone None,DWORD dwRingMode None,DWORD dwVolume None)
LONG WINAPI tapi32.phoneSetStatusMessages(HPHONE hPhone None,DWORD dwPhoneStates None,DWORD dwButtonModes None,DWORD dwButtonStates None)
LONG WINAPI tapi32.phoneSetVolume(HPHONE hPhone None,DWORD dwHookSwitchDev None,DWORD dwVolume None)
LONG WINAPI tapi32.phoneShutdown(HPHONEAPP hPhoneApp None)
LONG WINAPI tapi32.tapiGetLocationInfoA(LPSTR lpszCountryCode None,LPSTR lpszCityCode None)
LONG WINAPI tapi32.tapiGetLocationInfo(LPSTR lpszCountryCode None,LPSTR lpszCityCode None)
LONG WINAPI tapi32.tapiGetLocationInfoW(LPSTR lpszCountryCode None,LPSTR lpszCityCode None)
LONG WINAPI tapi32.tapiRequestMakeCallA(LPCSTR lpszDestAddress None,LPCSTR lpszAppName None,LPCSTR lpszCalledParty None,LPCSTR lpszComment None)
LONG WINAPI tapi32.tapiRequestMakeCall(LPCSTR lpszDestAddress None,LPCSTR lpszAppName None,LPCSTR lpszCalledParty None,LPCSTR lpszComment None)
LONG WINAPI tapi32.tapiRequestMakeCallW(LPCSTR lpszDestAddress None,LPCSTR lpszAppName None,LPCSTR lpszCalledParty None,LPCSTR lpszComment None)
long WINAPI user32.BroadcastSystemMessageExA(_In_ DWORD dwFlags,_Inout_opt_ LPDWORD lpdwRecipients,_In_ UINT uiMessage,_In_ WPARAM wParam,_In_ LPARAM lParam,_Out_opt_ PBSMINFO pBSMInfo)
long WINAPI user32.BroadcastSystemMessageEx(_In_ DWORD dwFlags,_Inout_opt_ LPDWORD lpdwRecipients,_In_ UINT uiMessage,_In_ WPARAM wParam,_In_ LPARAM lParam,_Out_opt_ PBSMINFO pBSMInfo)
long WINAPI user32.BroadcastSystemMessageExW(_In_ DWORD dwFlags,_Inout_opt_ LPDWORD lpdwRecipients,_In_ UINT uiMessage,_In_ WPARAM wParam,_In_ LPARAM lParam,_Out_opt_ PBSMINFO pBSMInfo)
long WINAPI user32.BroadcastSystemMessage(_In_ DWORD dwFlags,_Inout_opt_ LPDWORD lpdwRecipients,_In_ UINT uiMessage,_In_ WPARAM wParam,_In_ LPARAM lParam)
long WINAPI user32.BroadcastSystemMessageW(_In_ DWORD dwFlags,_Inout_opt_ LPDWORD lpdwRecipients,_In_ UINT uiMessage,_In_ WPARAM wParam,_In_ LPARAM lParam)
LONG WINAPI user32.GetDialogBaseUnits(void None None)
LONG WINAPI user32.GetMenuCheckMarkDimensions(void None None)
LONG WINAPI user32.GetMessageTime(void None None)
LONG WINAPI winscard.SCardAddReaderToGroupA(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReaderName,_In_ LPCTSTR szGroupName)
LONG WINAPI winscard.SCardAddReaderToGroup(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReaderName,_In_ LPCTSTR szGroupName)
LONG WINAPI winscard.SCardAddReaderToGroupW(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReaderName,_In_ LPCTSTR szGroupName)
LONG WINAPI winscard.SCardAudit(_In_ SCARDCONTEXT hContext,_In_ DWORD dwEvent)
LONG WINAPI winscard.SCardBeginTransaction(_In_ SCARDHANDLE hCard)
LONG WINAPI winscard.SCardCancel(_In_ SCARDCONTEXT hContext)
LONG WINAPI winscard.SCardConnectA(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReader,_In_ DWORD dwShareMode,_In_ DWORD dwPreferredProtocols,_Out_ LPSCARDHANDLE phCard,_Out_ LPDWORD pdwActiveProtocol)
LONG WINAPI winscard.SCardConnect(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReader,_In_ DWORD dwShareMode,_In_ DWORD dwPreferredProtocols,_Out_ LPSCARDHANDLE phCard,_Out_ LPDWORD pdwActiveProtocol)
LONG WINAPI winscard.SCardConnectW(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReader,_In_ DWORD dwShareMode,_In_ DWORD dwPreferredProtocols,_Out_ LPSCARDHANDLE phCard,_Out_ LPDWORD pdwActiveProtocol)
LONG WINAPI winscard.SCardControl(_In_ SCARDHANDLE hCard,_In_ DWORD dwControlCode,_In_ LPCVOID lpInBuffer,_In_ DWORD nInBufferSize,_Out_ LPVOID lpOutBuffer,_In_ DWORD nOutBufferSize,_Out_ LPDWORD lpBytesReturned)
LONG WINAPI winscard.SCardDisconnect(_In_ SCARDHANDLE hCard,_In_ DWORD dwDisposition)
LONG WINAPI winscard.SCardEndTransaction(_In_ SCARDHANDLE hCard,_In_ DWORD dwDisposition)
LONG WINAPI winscard.SCardEstablishContext(_In_ DWORD dwScope,_In_ LPCVOID pvReserved1,_In_ LPCVOID pvReserved2,_Out_ LPSCARDCONTEXT phContext)
LONG WINAPI winscard.SCardForgetCardTypeA(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCardName)
LONG WINAPI winscard.SCardForgetCardType(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCardName)
LONG WINAPI winscard.SCardForgetCardTypeW(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCardName)
LONG WINAPI winscard.SCardForgetReaderA(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReaderName)
LONG WINAPI winscard.SCardForgetReaderGroupA(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szGroupName)
LONG WINAPI winscard.SCardForgetReaderGroup(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szGroupName)
LONG WINAPI winscard.SCardForgetReaderGroupW(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szGroupName)
LONG WINAPI winscard.SCardForgetReader(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReaderName)
LONG WINAPI winscard.SCardForgetReaderW(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReaderName)
LONG WINAPI winscard.SCardFreeMemory(_In_ SCARDCONTEXT hContext,_In_ LPCVOID pvMem)
LONG WINAPI winscard.SCardGetAttrib(_In_ SCARDHANDLE hCard,_In_ DWORD dwAttrId,_Out_ LPBYTE pbAttr,_Inout_ LPDWORD pcbAttrLen)
LONG WINAPI winscard.SCardGetCardTypeProviderNameA(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCardName,_In_ DWORD dwProviderId,_Out_ LPTSTR szProvider,_Inout_ LPDWORD pcchProvider)
LONG WINAPI winscard.SCardGetCardTypeProviderName(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCardName,_In_ DWORD dwProviderId,_Out_ LPTSTR szProvider,_Inout_ LPDWORD pcchProvider)
LONG WINAPI winscard.SCardGetCardTypeProviderNameW(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCardName,_In_ DWORD dwProviderId,_Out_ LPTSTR szProvider,_Inout_ LPDWORD pcchProvider)
LONG WINAPI winscard.SCardGetDeviceTypeIdA(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReaderName,_Inout_ LPDWORD pdwDeviceTypeId)
LONG WINAPI winscard.SCardGetDeviceTypeId(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReaderName,_Inout_ LPDWORD pdwDeviceTypeId)
LONG WINAPI winscard.SCardGetDeviceTypeIdW(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReaderName,_Inout_ LPDWORD pdwDeviceTypeId)
LONG WINAPI winscard.SCardGetProviderIdA(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCard,_Out_ LPGUID pguidProviderId)
LONG WINAPI winscard.SCardGetProviderId(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCard,_Out_ LPGUID pguidProviderId)
LONG WINAPI winscard.SCardGetProviderIdW(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCard,_Out_ LPGUID pguidProviderId)
LONG WINAPI winscard.SCardGetStatusChangeA(_In_ SCARDCONTEXT hContext,_In_ DWORD dwTimeout,_Inout_ LPSCARD_READERSTATE rgReaderStates,_In_ DWORD cReaders)
LONG WINAPI winscard.SCardGetStatusChange(_In_ SCARDCONTEXT hContext,_In_ DWORD dwTimeout,_Inout_ LPSCARD_READERSTATE rgReaderStates,_In_ DWORD cReaders)
LONG WINAPI winscard.SCardGetStatusChangeW(_In_ SCARDCONTEXT hContext,_In_ DWORD dwTimeout,_Inout_ LPSCARD_READERSTATE rgReaderStates,_In_ DWORD cReaders)
LONG WINAPI winscard.SCardGetTransmitCount(_In_ SCARDHANDLE hCard,_Out_ LPDWORD pcTransmitCount)
LONG WINAPI winscard.SCardIntroduceCardTypeA(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCardName,_In_opt_ LPCGUID pguidPrimaryProvider,_In_opt_ LPCGUID rgguidInterfaces,_In_ DWORD dwInterfaceCount,_In_ LPCBYTE pbAtr,_In_ LPCBYTE pbAtrMask,_In_ DWORD cbAtrLen)
LONG WINAPI winscard.SCardIntroduceCardType(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCardName,_In_opt_ LPCGUID pguidPrimaryProvider,_In_opt_ LPCGUID rgguidInterfaces,_In_ DWORD dwInterfaceCount,_In_ LPCBYTE pbAtr,_In_ LPCBYTE pbAtrMask,_In_ DWORD cbAtrLen)
LONG WINAPI winscard.SCardIntroduceCardTypeW(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCardName,_In_opt_ LPCGUID pguidPrimaryProvider,_In_opt_ LPCGUID rgguidInterfaces,_In_ DWORD dwInterfaceCount,_In_ LPCBYTE pbAtr,_In_ LPCBYTE pbAtrMask,_In_ DWORD cbAtrLen)
LONG WINAPI winscard.SCardIntroduceReaderA(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReaderName,_In_ LPCTSTR szDeviceName)
LONG WINAPI winscard.SCardIntroduceReaderGroupA(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szGroupName)
LONG WINAPI winscard.SCardIntroduceReaderGroup(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szGroupName)
LONG WINAPI winscard.SCardIntroduceReaderGroupW(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szGroupName)
LONG WINAPI winscard.SCardIntroduceReader(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReaderName,_In_ LPCTSTR szDeviceName)
LONG WINAPI winscard.SCardIntroduceReaderW(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReaderName,_In_ LPCTSTR szDeviceName)
LONG WINAPI winscard.SCardIsValidContext(_In_ SCARDCONTEXT hContext)
LONG WINAPI winscard.SCardListCardsA(_In_ SCARDCONTEXT hContext,_In_opt_ LPCBYTE pbAtr,_In_ LPCGUID rgguidInterfaces,_In_ DWORD cguidInterfaceCount,_Out_ LPTSTR mszCards,_Inout_ LPDWORD pcchCards)
LONG WINAPI winscard.SCardListCards(_In_ SCARDCONTEXT hContext,_In_opt_ LPCBYTE pbAtr,_In_ LPCGUID rgguidInterfaces,_In_ DWORD cguidInterfaceCount,_Out_ LPTSTR mszCards,_Inout_ LPDWORD pcchCards)
LONG WINAPI winscard.SCardListCardsW(_In_ SCARDCONTEXT hContext,_In_opt_ LPCBYTE pbAtr,_In_ LPCGUID rgguidInterfaces,_In_ DWORD cguidInterfaceCount,_Out_ LPTSTR mszCards,_Inout_ LPDWORD pcchCards)
LONG WINAPI winscard.SCardListInterfacesA(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCard,_Out_ LPGUID pguidInterfaces,_Inout_ LPDWORD pcguidInterfaces)
LONG WINAPI winscard.SCardListInterfaces(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCard,_Out_ LPGUID pguidInterfaces,_Inout_ LPDWORD pcguidInterfaces)
LONG WINAPI winscard.SCardListInterfacesW(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCard,_Out_ LPGUID pguidInterfaces,_Inout_ LPDWORD pcguidInterfaces)
LONG WINAPI winscard.SCardListReaderGroupsA(_In_ SCARDCONTEXT hContext,_Out_ LPTSTR mszGroups,_Inout_ LPDWORD pcchGroups)
LONG WINAPI winscard.SCardListReaderGroups(_In_ SCARDCONTEXT hContext,_Out_ LPTSTR mszGroups,_Inout_ LPDWORD pcchGroups)
LONG WINAPI winscard.SCardListReaderGroupsW(_In_ SCARDCONTEXT hContext,_Out_ LPTSTR mszGroups,_Inout_ LPDWORD pcchGroups)
LONG WINAPI winscard.SCardListReadersA(_In_ SCARDCONTEXT hContext,_In_opt_ LPCTSTR mszGroups,_Out_ LPTSTR mszReaders,_Inout_ LPDWORD pcchReaders)
LONG WINAPI winscard.SCardListReaders(_In_ SCARDCONTEXT hContext,_In_opt_ LPCTSTR mszGroups,_Out_ LPTSTR mszReaders,_Inout_ LPDWORD pcchReaders)
LONG WINAPI winscard.SCardListReadersW(_In_ SCARDCONTEXT hContext,_In_opt_ LPCTSTR mszGroups,_Out_ LPTSTR mszReaders,_Inout_ LPDWORD pcchReaders)
LONG WINAPI winscard.SCardLocateCardsA(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR mszCards,_Inout_ LPSCARD_READERSTATE rgReaderStates,_In_ DWORD cReaders)
LONG WINAPI winscard.SCardLocateCardsByATRA(_In_ SCARDCONTEXT hContext,_In_ LPSCARD_ATRMASK rgAtrMasks,_In_ DWORD cAtrs,_Inout_ LPSCARD_READERSTATE rgReaderStates,_In_ DWORD cReaders)
LONG WINAPI winscard.SCardLocateCardsByATR(_In_ SCARDCONTEXT hContext,_In_ LPSCARD_ATRMASK rgAtrMasks,_In_ DWORD cAtrs,_Inout_ LPSCARD_READERSTATE rgReaderStates,_In_ DWORD cReaders)
LONG WINAPI winscard.SCardLocateCardsByATRW(_In_ SCARDCONTEXT hContext,_In_ LPSCARD_ATRMASK rgAtrMasks,_In_ DWORD cAtrs,_Inout_ LPSCARD_READERSTATE rgReaderStates,_In_ DWORD cReaders)
LONG WINAPI winscard.SCardLocateCards(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR mszCards,_Inout_ LPSCARD_READERSTATE rgReaderStates,_In_ DWORD cReaders)
LONG WINAPI winscard.SCardLocateCardsW(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR mszCards,_Inout_ LPSCARD_READERSTATE rgReaderStates,_In_ DWORD cReaders)
LONG WINAPI winscard.SCardReadCacheA(_In_ SCARDCONTEXT hContext,_In_ UUID *CardIdentifier,_In_ DWORD FreshnessCounter,_In_ LPTSTR LookupName,_Out_ PBYTE Data,_Out_ DWORD *DataLen)
LONG WINAPI winscard.SCardReadCache(_In_ SCARDCONTEXT hContext,_In_ UUID *CardIdentifier,_In_ DWORD FreshnessCounter,_In_ LPTSTR LookupName,_Out_ PBYTE Data,_Out_ DWORD *DataLen)
LONG WINAPI winscard.SCardReadCacheW(_In_ SCARDCONTEXT hContext,_In_ UUID *CardIdentifier,_In_ DWORD FreshnessCounter,_In_ LPTSTR LookupName,_Out_ PBYTE Data,_Out_ DWORD *DataLen)
LONG WINAPI winscard.SCardReconnect(_In_ SCARDHANDLE hCard,_In_ DWORD dwShareMode,_In_ DWORD dwPreferredProtocols,_In_ DWORD dwInitialization,_Out_opt_ LPDWORD pdwActiveProtocol)
LONG WINAPI winscard.SCardReleaseContext(_In_ SCARDCONTEXT hContext)
LONG WINAPI winscard.SCardRemoveReaderFromGroupA(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReaderName,_In_ LPCTSTR szGroupName)
LONG WINAPI winscard.SCardRemoveReaderFromGroup(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReaderName,_In_ LPCTSTR szGroupName)
LONG WINAPI winscard.SCardRemoveReaderFromGroupW(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReaderName,_In_ LPCTSTR szGroupName)
LONG WINAPI winscard.SCardSetAttrib(_In_ SCARDHANDLE hCard,_In_ DWORD dwAttrId,_In_ LPCBYTE pbAttr,_In_ DWORD cbAttrLen)
LONG WINAPI winscard.SCardSetCardTypeProviderNameA(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCardName,_In_ DWORD dwProviderId,_In_ LPCTSTR szProvider)
LONG WINAPI winscard.SCardSetCardTypeProviderName(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCardName,_In_ DWORD dwProviderId,_In_ LPCTSTR szProvider)
LONG WINAPI winscard.SCardSetCardTypeProviderNameW(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCardName,_In_ DWORD dwProviderId,_In_ LPCTSTR szProvider)
LONG WINAPI winscard.SCardStatusA(_In_ SCARDHANDLE hCard,_Out_ LPTSTR szReaderName,_Inout_opt_ LPDWORD pcchReaderLen,_Out_opt_ LPDWORD pdwState,_Out_opt_ LPDWORD pdwProtocol,_Out_ LPBYTE pbAtr,_Inout_opt_ LPDWORD pcbAtrLen)
LONG WINAPI winscard.SCardStatus(_In_ SCARDHANDLE hCard,_Out_ LPTSTR szReaderName,_Inout_opt_ LPDWORD pcchReaderLen,_Out_opt_ LPDWORD pdwState,_Out_opt_ LPDWORD pdwProtocol,_Out_ LPBYTE pbAtr,_Inout_opt_ LPDWORD pcbAtrLen)
LONG WINAPI winscard.SCardStatusW(_In_ SCARDHANDLE hCard,_Out_ LPTSTR szReaderName,_Inout_opt_ LPDWORD pcchReaderLen,_Out_opt_ LPDWORD pdwState,_Out_opt_ LPDWORD pdwProtocol,_Out_ LPBYTE pbAtr,_Inout_opt_ LPDWORD pcbAtrLen)
LONG WINAPI winscard.SCardTransmit(_In_ SCARDHANDLE hCard,_In_ LPCSCARD_IO_REQUEST pioSendPci,_In_ LPCBYTE pbSendBuffer,_In_ DWORD cbSendLength,_Inout_opt_ LPSCARD_IO_REQUEST pioRecvPci,_Out_ LPBYTE pbRecvBuffer,_Inout_ LPDWORD pcbRecvLength)
LONG WINAPI winscard.SCardWriteCacheA(_In_ SCARDCONTEXT hContext,_In_ UUID *CardIdentifier,_In_ DWORD FreshnessCounter,_In_ LPTSTR LookupName,_In_ PBYTE Data,_In_ DWORD DataLen)
LONG WINAPI winscard.SCardWriteCache(_In_ SCARDCONTEXT hContext,_In_ UUID *CardIdentifier,_In_ DWORD FreshnessCounter,_In_ LPTSTR LookupName,_In_ PBYTE Data,_In_ DWORD DataLen)
LONG WINAPI winscard.SCardWriteCacheW(_In_ SCARDCONTEXT hContext,_In_ UUID *CardIdentifier,_In_ DWORD FreshnessCounter,_In_ LPTSTR LookupName,_In_ PBYTE Data,_In_ DWORD DataLen)
LONG WINAPI wintrust.WinVerifyTrust(_In_ HWND hWnd,_In_ GUID *pgActionID,_In_ LPVOID pWVTData)
LONG WINAPI wintrust.WTHelperGetFileHash(_In_ LPCWSTR pwszFilename,_In_ DWORD dwFlags,_Inout_opt_ PVOID pvReserved,_Out_opt_ BYTE *pbFileHash,_Inout_opt_ DWORD *pcbFileHash,_Out_opt_ ALG_ID *pHashAlgid)
LPAPI_VERSION WINAPI dbghelp.ImagehlpApiVersionEx(_In_ LPAPI_VERSION AppVersion)
LPARAM WINAPI None.MAKELPARAM(WORD wLow None,WORD wHigh None)
LPARAM WINAPI user32.GetMessageExtraInfo(void None None)
LPARAM WINAPI user32.PackDDElParam(_In_ UINT msg,_In_ UINT_PTR uiLo,_In_ UINT_PTR uiHi)
LPARAM WINAPI user32.ReuseDDElParam(_In_ LPARAM lParam,_In_ UINT msgIn,_In_ UINT msgOut,_In_ UINT_PTR uiLo,_In_ UINT_PTR uiHi)
LPARAM WINAPI user32.SetMessageExtraInfo(_In_ LPARAM lParam)
LPBYTE None None.ALERT_OTHER_INFO(LPBYTE x None)
LPBYTE None None.ALERT_VAR_DATA(LPBYTE p None)
LPBYTE WINAPI user32.DdeAccessData(_In_ HDDEDATA hData,_Out_opt_ LPDWORD pcbDataSize)
LPCSTR None None.D3DXGetPixelShaderProfile(_In_ LPDIRECT3DDEVICE9 pDevice)
LPCSTR None None.D3DXGetVertexShaderProfile(_In_ LPDIRECT3DDEVICE9 pDevice)
LPCSTR WINAPI crypt32.CertAlgIdToOID(_In_ DWORD dwAlgId)
LPCTSTR None shlwapi.UrlGetLocationA(_In_ PCTSTR pszURL)
LPCTSTR None shlwapi.UrlGetLocation(_In_ PCTSTR pszURL)
LPCTSTR None shlwapi.UrlGetLocationW(_In_ PCTSTR pszURL)
LPCWSTR WINAPI crypt32.CryptFindLocalizedName(_In_ LPCWSTR pwszCryptName)
LPCWSTR WINAPI user32.MB_GetString(UINT wBtn None)
LPITEMIDLIST None None.CreatePIDL(DWORD dwType None,LPCWSTR pwszDisplayName None)
LPITEMIDLIST None None.PidlBrowse(HWND hwnd None,int nCSIDL None,LPSTR pszDisplayName None)
LPPROPERTYINFO WINAPI nmapi.GetPropertyInfo(_In_ HPROPERTY hProperty)
LPPROPERTYINFO WINAPI None.GetPropertyInfo(HPROPERTY hProperty None)
LPPROPERTYINST WINAPI nmapi.FindPropertyInstance(_In_ HFRAME hFrame,_In_ HPROPERTY hProperty)
LPPROPERTYINST WINAPI nmapi.FindPropertyInstanceRestart(_In_ HFRAME hFrame,_In_ HPROPERTY hProperty,_In_ LPPROPERTYINST *lpRestartKey,_In_ BOOL DirForward)
LPPROTOCOLINFO WINAPI nmapi.GetProtocolInfo(_In_ HPROTOCOL hProtocol)
LPPROTOCOLTABLE WINAPI nmapi.GetEnabledProtocols(_In_ HCAPTURE hCapture)
LPRECOGNIZEDATATABLE WINAPI nmapi.GetFrameRecognizeData(_In_ HFRAME hFrame)
LPSTR WINAPI nmapi.GetCaptureComment(_In_ HCAPTURE hCapture)
LPSTR WINAPI nmapi.GetPropertyText(_In_ HFRAME hFrame,_In_ LPPROPERTYINST lpPI,_In_ LPSTR szBuffer,_In_ DWORD BufferSize)
LPSTR WINAPI None.GetCaptureComment(HCAPTURE hCapture None)
LPSTR WINAPI None.GetPropertyText(HFRAME hFrame None,LPPROPERTYINST lpPI None,LPSTR szBuffer None,DWORD BufferSize None)
LPSTR WINAPI user32.CharNextExA(_In_ WORD CodePage,_In_ LPCSTR lpCurrentChar,_In_ DWORD dwFlags)
LPSTR WINAPI user32.CharPrevExA(_In_ WORD CodePage,_In_ LPCSTR lpStart,_In_ LPCSTR lpCurrentChar,_In_ DWORD dwFlags)
LPSYSTEMTIME WINAPI nmapi.GetCaptureTimeStamp(_In_ HCAPTURE hCapture)
LPSYSTEMTIME WINAPI None.GetCaptureTimeStamp(HCAPTURE hCapture None)
LPTCH WINAPI kernel32.GetEnvironmentStringsA(void None None)
LPTCH WINAPI kernel32.GetEnvironmentStrings(void None None)
LPTCH WINAPI kernel32.GetEnvironmentStringsW(void None None)
LPTOP_LEVEL_EXCEPTION_FILTER WINAPI kernel32.SetUnhandledExceptionFilter(_In_ LPTOP_LEVEL_EXCEPTION_FILTER lpTopLevelExceptionFilter)
LPTSTR None None.MAKEINTATOM(WORD wInteger None)
LPTSTR None None.MAKEINTRESOURCE(WORD wInteger None)
LPTSTR None shlwapi.PathAddBackslashA(_Inout_ LPTSTR lpszPath)
LPTSTR None shlwapi.PathAddBackslash(_Inout_ LPTSTR lpszPath)
LPTSTR None shlwapi.PathAddBackslashW(_Inout_ LPTSTR lpszPath)
LPTSTR None shlwapi.PathBuildRootA(_Out_ LPTSTR szRoot,_In_ int iDrive)
LPTSTR None shlwapi.PathBuildRoot(_Out_ LPTSTR szRoot,_In_ int iDrive)
LPTSTR None shlwapi.PathBuildRootW(_Out_ LPTSTR szRoot,_In_ int iDrive)
LPTSTR None shlwapi.PathCombineA(_Out_ LPTSTR pszPathOut,_In_opt_ LPCTSTR pszPathIn,_In_ LPCTSTR pszMore)
LPTSTR None shlwapi.PathCombine(_Out_ LPTSTR pszPathOut,_In_opt_ LPCTSTR pszPathIn,_In_ LPCTSTR pszMore)
LPTSTR None shlwapi.PathCombineW(_Out_ LPTSTR pszPathOut,_In_opt_ LPCTSTR pszPathIn,_In_ LPCTSTR pszMore)
LPTSTR None shlwapi.PathRemoveBackslashA(_Inout_ LPTSTR lpszPath)
LPTSTR None shlwapi.PathRemoveBackslash(_Inout_ LPTSTR lpszPath)
LPTSTR None shlwapi.PathRemoveBackslashW(_Inout_ LPTSTR lpszPath)
LPTSTR WINAPI advapi32.GetTrusteeNameA(_In_ PTRUSTEE pTrustee)
LPTSTR WINAPI advapi32.GetTrusteeName(_In_ PTRUSTEE pTrustee)
LPTSTR WINAPI advapi32.GetTrusteeNameW(_In_ PTRUSTEE pTrustee)
LPTSTR WINAPI kernel32.GetCommandLineA(void None None)
LPTSTR WINAPI kernel32.GetCommandLine(void None None)
LPTSTR WINAPI kernel32.GetCommandLineW(void None None)
LPTSTR WINAPI kernel32.lstrcatA(_Inout_ LPTSTR lpString1,_In_ LPTSTR lpString2)
LPTSTR WINAPI kernel32.lstrcat(_Inout_ LPTSTR lpString1,_In_ LPTSTR lpString2)
LPTSTR WINAPI kernel32.lstrcatW(_Inout_ LPTSTR lpString1,_In_ LPTSTR lpString2)
LPTSTR WINAPI kernel32.lstrcpyA(_Out_ LPTSTR lpString1,_In_ LPTSTR lpString2)
LPTSTR WINAPI kernel32.lstrcpynA(_Out_ LPTSTR lpString1,_In_ LPCTSTR lpString2,_In_ int iMaxLength)
LPTSTR WINAPI kernel32.lstrcpyn(_Out_ LPTSTR lpString1,_In_ LPCTSTR lpString2,_In_ int iMaxLength)
LPTSTR WINAPI kernel32.lstrcpynW(_Out_ LPTSTR lpString1,_In_ LPCTSTR lpString2,_In_ int iMaxLength)
LPTSTR WINAPI kernel32.lstrcpy(_Out_ LPTSTR lpString1,_In_ LPTSTR lpString2)
LPTSTR WINAPI kernel32.lstrcpyW(_Out_ LPTSTR lpString1,_In_ LPTSTR lpString2)
LPTSTR WINAPI user32.CharLowerA(_Inout_ LPTSTR lpsz)
LPTSTR WINAPI user32.CharLower(_Inout_ LPTSTR lpsz)
LPTSTR WINAPI user32.CharLowerW(_Inout_ LPTSTR lpsz)
LPTSTR WINAPI user32.CharNextA(_In_ LPCTSTR lpsz)
LPTSTR WINAPI user32.CharNext(_In_ LPCTSTR lpsz)
LPTSTR WINAPI user32.CharNextW(_In_ LPCTSTR lpsz)
LPTSTR WINAPI user32.CharPrevA(_In_ LPCTSTR lpszStart,_In_ LPCTSTR lpszCurrent)
LPTSTR WINAPI user32.CharPrev(_In_ LPCTSTR lpszStart,_In_ LPCTSTR lpszCurrent)
LPTSTR WINAPI user32.CharPrevW(_In_ LPCTSTR lpszStart,_In_ LPCTSTR lpszCurrent)
LPTSTR WINAPI user32.CharUpperA(_Inout_ LPTSTR lpsz)
LPTSTR WINAPI user32.CharUpper(_Inout_ LPTSTR lpsz)
LPTSTR WINAPI user32.CharUpperW(_Inout_ LPTSTR lpsz)
LPVOID CALLBACK None.AllocateMemory(_In_ SIZE_T AllocSize,_In_ LPVOID pContext)
LPVOID None activeds.AllocADsMem(_In_ DWORD cb)
LPVOID None None.ICSeqCompressFrame(PCOMPVARS pc None,UINT uiFlags None,LPVOID lpBits None,BOOL * pfKey,LONG * plSize)
LPVOID None ole32.CoTaskMemAlloc(_In_ SIZE_T cb)
LPVOID None ole32.CoTaskMemRealloc(_In_opt_ LPVOID pv,_In_ SIZE_T cb)
LPVOID None shell32.SHAlloc(_In_ SIZE_T cb)
LPVOID WINAPI crypt32.CryptMemAlloc(_In_ ULONG cbSize)
LPVOID WINAPI crypt32.CryptMemRealloc(_In_ LPVOID pv,_In_ ULONG cbSize)
LPVOID WINAPI kernel32.ConvertThreadToFiberEx(_In_opt_ LPVOID lpParameter,_In_ DWORD dwFlags)
LPVOID WINAPI kernel32.ConvertThreadToFiber(_In_opt_ LPVOID lpParameter)
LPVOID WINAPI kernel32.CreateFiberEx(_In_ SIZE_T dwStackCommitSize,_In_ SIZE_T dwStackReserveSize,_In_ DWORD dwFlags,_In_ LPFIBER_START_ROUTINE lpStartAddress,_In_opt_ LPVOID lpParameter)
LPVOID WINAPI kernel32.CreateFiber(_In_ SIZE_T dwStackSize,_In_ LPFIBER_START_ROUTINE lpStartAddress,_In_opt_ LPVOID lpParameter)
LPVOID WINAPI kernel32.GlobalLock(_In_ HGLOBAL hMem)
LPVOID WINAPI kernel32.HeapAlloc(_In_ HANDLE hHeap,_In_ DWORD dwFlags,_In_ SIZE_T dwBytes)
LPVOID WINAPI kernel32.HeapReAlloc(_In_ HANDLE hHeap,_In_ DWORD dwFlags,_In_ LPVOID lpMem,_In_ SIZE_T dwBytes)
LPVOID WINAPI kernel32.LocalLock(_In_ HLOCAL hMem)
LPVOID WINAPI kernel32.LockResource(_In_ HGLOBAL hResData)
LPVOID WINAPI kernel32.MapViewOfFileEx(_In_ HANDLE hFileMappingObject,_In_ DWORD dwDesiredAccess,_In_ DWORD dwFileOffsetHigh,_In_ DWORD dwFileOffsetLow,_In_ SIZE_T dwNumberOfBytesToMap,_In_opt_ LPVOID lpBaseAddress)
LPVOID WINAPI kernel32.MapViewOfFileExNuma(_In_ HANDLE hFileMappingObject,_In_ DWORD dwDesiredAccess,_In_ DWORD dwFileOffsetHigh,_In_ DWORD dwFileOffsetLow,_In_ SIZE_T dwNumberOfBytesToMap,_In_opt_ LPVOID lpBaseAddress,_In_ DWORD nndPreferred)
LPVOID WINAPI kernel32.MapViewOfFile(_In_ HANDLE hFileMappingObject,_In_ DWORD dwDesiredAccess,_In_ DWORD dwFileOffsetHigh,_In_ DWORD dwFileOffsetLow,_In_ SIZE_T dwNumberOfBytesToMap)
LPVOID WINAPI kernel32.VirtualAllocEx(_In_ HANDLE hProcess,_In_opt_ LPVOID lpAddress,_In_ SIZE_T dwSize,_In_ DWORD flAllocationType,_In_ DWORD flProtect)
LPVOID WINAPI kernel32.VirtualAllocExNuma(_In_ HANDLE hProcess,_In_opt_ LPVOID lpAddress,_In_ SIZE_T dwSize,_In_ DWORD flAllocationType,_In_ DWORD flProtect,_In_ DWORD nndPreferred)
LPVOID WINAPI kernel32.VirtualAlloc(_In_opt_ LPVOID lpAddress,_In_ SIZE_T dwSize,_In_ DWORD flAllocationType,_In_ DWORD flProtect)
LPVOID WINAPI kernelbase.TlsGetValue(_In_ DWORD dwTlsIndex)
LPVOID WINAPI None.ExpertAllocMemory(HEXPERTKEY hExpertKey None,SIZE_T nBytes None,LPDWORD pError None)
LPVOID WINAPI None.ExpertReallocMemory(HEXPERTKEY hExpertKey None,LPVOID pOriginalMemory None,SIZE_T nBytes None,LPDWORD pError None)
LPVOID WINAPI resutils.ResUtilGetEnvironmentWithNetName(_In_ HRESOURCE hResource)
LPWSTR None None.OLESTR(LPSTR str None)
LPWSTR None shlwapi.CharLowerWrapW(_Inout_ LPWSTR pch)
LPWSTR WINAPI resutils.ResUtilExpandEnvironmentStrings(_In_ LPCWSTR pszSrc)
LPWSTR WINAPI wintrust.CryptCATCDFEnumMembersByCDFTagEx(_In_ CRYPTCATCDF *pCDF,_Inout_ LPWSTR pwszPrevCDFTag,_In_ PFN_CDF_PARSE_ERROR_CALLBACK pfnParseError,_In_ CRYPTCATMEMBER **ppMember,_In_ BOOL fContinueOnError,_In_ LPVOID pvReserved)
LRESULT APIENTRY None.MainWndProc(HWND hwndMain None,UINT uMsg None,WPARAM wParam None,LPARAM lParam None)
LRESULT CALLBACK atlthunk.AtlThunk(_In_ HWND hwnd,_In_ UINT uMsg,_In_ WPARAM wParam,_In_ LPARAM lParam)
LRESULT CALLBACK gdi32.CreateFontA(HWND hWnd None,UINT message None,WPARAM wParam None,LPARAM lParam None)
LRESULT CALLBACK gdi32.CreateFontW(HWND hWnd None,UINT message None,WPARAM wParam None,LPARAM lParam None)
LRESULT CALLBACK gdi32.WndProc(HWND hWnd None,UINT message None,WPARAM wParam None,LPARAM lParam None)
LRESULT CALLBACK None.acmDriverProc(DWORD_PTR dwID None,HDRIVER hdrvr None,UINT uMsg None,LPARAM lParam1 None,LPARAM lParam2 None)
LRESULT CALLBACK None.CallWndRetProc(_In_ int nCode,_In_ WPARAM wParam,_In_ LPARAM lParam)
LRESULT CALLBACK None.capControlCallback(HWND hWnd None,int nState None)
LRESULT CALLBACK None.capErrorCallback(HWND hWnd None,int nID None,LPCTSTR lpsz None)
LRESULT CALLBACK None.capStatusCallback(HWND hWnd None,int nID None,LPCTSTR lpsz None)
LRESULT CALLBACK None.capWaveStreamCallback(HWND hWnd None,LPWAVEHDR lpWHdr None)
LRESULT CALLBACK None.capYieldCallback(HWND hWnd None)
LRESULT CALLBACK None.DebugProc(_In_ int nCode,_In_ WPARAM wParam,_In_ LPARAM lParam)
LRESULT CALLBACK None.EditDlgProc(HWND hwndDlg None,UINT uMsg None,WPARAM wParam None,LPARAM lParam None)
LRESULT CALLBACK None.GetMsgProc(_In_ int code,_In_ WPARAM wParam,_In_ LPARAM lParam)
LRESULT CALLBACK None.HookProc(int nCode None,WPARAM wParam None,LPARAM lParam None)
LRESULT CALLBACK None.JournalPlaybackProc(_In_ int code,WPARAM wParam None,_In_ LPARAM lParam)
LRESULT CALLBACK None.JournalRecordProc(_In_ int code,WPARAM wParam None,_In_ LPARAM lParam)
LRESULT CALLBACK None.KeyboardProc(_In_ int code,_In_ WPARAM wParam,_In_ LPARAM lParam)
LRESULT CALLBACK None.LowLevelKeyboardProc(_In_ int nCode,_In_ WPARAM wParam,_In_ LPARAM lParam)
LRESULT CALLBACK None.LowLevelMouseProc(_In_ int nCode,_In_ WPARAM wParam,_In_ LPARAM lParam)
LRESULT CALLBACK None.MainWndProc(HWND hwnd None,UINT uMsg None,WPARAM wParam None,LPARAM lParam None)
LRESULT CALLBACK None.MessageProc(_In_ int code,WPARAM wParam None,_In_ LPARAM lParam)
LRESULT CALLBACK None.MyWndProc(HWND hWnd None,UINT msg None,WPARAM wParam None,LPARAM lParam None,UINT_PTR uIdSubclass None,DWORD_PTR dwRefData None)
LRESULT CALLBACK None.ShellProc(_In_ int nCode,_In_ WPARAM wParam,_In_ LPARAM lParam)
LRESULT CALLBACK None.WindowProc(HWND hwnd None,UINT uMsg None,WPARAM wParam None,LPARAM lParam None)
LRESULT CALLBACK None.WindowProc(HWND hwnd None,WM_IME_CHAR None None,WPARAM wParam None,LPARAM lParam None)
LRESULT CALLBACK None.WindowProc(HWND hwnd None,WM_IME_COMPOSITIONFULL None None,WPARAM wParam None,LPARAM lParam None)
LRESULT CALLBACK None.WindowProc(HWND hwnd None,WM_IME_COMPOSITION None None,WPARAM wParam None,LPARAM lParam None)
LRESULT CALLBACK None.WindowProc(HWND hwnd None,WM_IME_ENDCOMPOSITION None None,WPARAM wParam None,LPARAM lParam None)
LRESULT CALLBACK None.WindowProc(HWND hwnd None,WM_IME_KEYUP None None,WPARAM wParam None,LPARAM lParam None)
LRESULT CALLBACK None.WindowProc(HWND hwnd None,WM_IME_NOTIFY None None,WPARAM wParam None,LPARAM lParam None)
LRESULT CALLBACK None.WindowProc(HWND hwnd None,WM_IME_REQUEST None None,WPARAM wParam None,LPARAM lParam None)
LRESULT CALLBACK None.WindowProc(HWND hwnd None,WM_IME_SETCONTEXT None None,WPARAM wParam None,LPARAM lParam None)
LRESULT CALLBACK None.WindowProc(HWND hwnd None,WM_IME_STARTCOMPOSITION None None,WPARAM wParam None,LPARAM lParam None)
LRESULT CALLBACK None.WindowProc(_In_ HWND hwnd,_In_ UINT uMsg,_In_ WPARAM wParam,_In_ LPARAM lParam)
LRESULT CALLBACK None.WndProc(HWND hWnd None,UINT message None,WPARAM wParam None,LPARAM lParam None)
LRESULT CALLBACK None.WndProc(HWND hwnd None,UINT msg None,WPARAM wParam None,LPARAM lParam None)
LRESULT CALLBACK None.WndProc(HWND hWnd None,UINT uMessage None,WPARAM wParam None,LPARAM lParam None)
LRESULT None comctl32.DefSubclassProc(_In_ HWND hWnd,_In_ UINT uMsg,_In_ WPARAM WPARAM,_In_ LPARAM LPARAM)
LRESULT None imm32.ImmEscapeA(_In_ HKL hKL,_In_ HIMC hIMC,_In_ UINT uEscape,_Inout_ LPVOID lpData)
LRESULT None imm32.ImmEscape(_In_ HKL hKL,_In_ HIMC hIMC,_In_ UINT uEscape,_Inout_ LPVOID lpData)
LRESULT None imm32.ImmEscapeW(_In_ HKL hKL,_In_ HIMC hIMC,_In_ UINT uEscape,_Inout_ LPVOID lpData)
LRESULT None imm32.ImmRequestMessageA(_In_ HIMC hIMC,_In_ WPARAM wParam,_In_ LPARAM lParam)
LRESULT None imm32.ImmRequestMessage(_In_ HIMC hIMC,_In_ WPARAM wParam,_In_ LPARAM lParam)
LRESULT None imm32.ImmRequestMessageW(_In_ HIMC hIMC,_In_ WPARAM wParam,_In_ LPARAM lParam)
LRESULT None msacm32.acmDriverMessage(HACMDRIVER had None,UINT uMsg None,LPARAM lParam1 None,LPARAM lParam2 None)
LRESULT None msvfw32.ICClose(HIC hic None)
LRESULT None None.Button_GetCheck(HWND hwndCtl None)
LRESULT None None.Button_GetState(HWND hwndCtl None)
LRESULT None None.Button_SetState(HWND hwndCtl None,BOOL state None)
LRESULT None None.Button_SetStyle(HWND hwndCtl None,DWORD style None,BOOL fRedraw None)
LRESULT None None.ComboBox_GetItemData(HWND hwndCtl None,int index None)
LRESULT None None.DateTime_CloseMonthCal(HWND hdp None)
LRESULT None None.DateTime_GetDateTimePickerInfo([in] HWND hdp,[in None None,out] DATETIMEPICKERINFO *pdtpi)
LRESULT None None.DateTime_GetMonthCalStyle([in] HWND hdp)
LRESULT None None.DateTime_SetMonthCalStyle([in] HWND hdp,[in] DWORD dwStyle)
LRESULT None None.ICClose(HIC hic None)
LRESULT None None.ICSendMessage(HIC hic None,UINT wMsg None,DWORD dw1 None,DWORD dw2 None)
LRESULT None None.ListView_GetGroupInfoByIndex([in] HWND hwnd,[in] int iIndex,[in None None,out] PLVGROUP pgrp)
LRESULT None None.ListView_SetGroupState([in] HWND hwnd,[in] UINT dwGroupId,[in] UINT dwMask,[in] UINT dwState)
LRESULT None None.MAKELRESULT(WORD wLow None,WORD wHigh None)
LRESULT None None.mmioSendMessage(HMMIO hmmio None,UINT wMsg None,LPARAM lParam1 None,LPARAM lParam2 None)
LRESULT None None.MonthCal_SetCalendarBorder(HWND hmc None,BOOL fset None,int xyborder None)
LRESULT None None.MonthCal_SetCALID(HWND hmc None,UINT calid None)
LRESULT None None.MonthCal_SizeRectToMin(HWND hmc None,[in None None,out] RECT prc)
LRESULT None None.OnNotify([in None None,out] tagNMHDR *pcs)
LRESULT None None.TreeView_SetAutoScrollInfo(HWND hwnd None,UINT uPixPerSec None,UINT uUpdateTime None)
LRESULT None None.TreeView_SetHot(HWND hwndTV None,HTREEITEM hitem None)
LRESULT None None.WndProc(HWND hwnd None,UINT message None,WPARAM wParam None,LPARAM lParam None)
LRESULT None None.WndProc(HWND hwnd None,UINT msg None,WPARAM wParam None,LPARAM lParam None)
LRESULT None shell32.SHShellFolderView_Message(_In_ HWND hwndMain,UINT uMsg None,LPARAM lParam None)
LRESULT None shlwapi.SHSendMessageBroadcastA(_In_ UINT uMsg,_In_ WPARAM wParam,_In_ LPARAM lParam)
LRESULT None shlwapi.SHSendMessageBroadcast(_In_ UINT uMsg,_In_ WPARAM wParam,_In_ LPARAM lParam)
LRESULT None shlwapi.SHSendMessageBroadcastW(_In_ UINT uMsg,_In_ WPARAM wParam,_In_ LPARAM lParam)
LRESULT WINAPI uiautomationcore.UiaReturnRawElementProvider(_In_ HWND hwnd,_In_ WPARAM wparam,_In_ LPARAM lparam,_In_ IRawElementProviderSimple *el)
LRESULT WINAPI user32.CallNextHookEx(_In_opt_ HHOOK hhk,_In_ int nCode,_In_ WPARAM wParam,_In_ LPARAM lParam)
LRESULT WINAPI user32.CallWindowProcA(_In_ WNDPROC lpPrevWndFunc,_In_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
LRESULT WINAPI user32.CallWindowProc(_In_ WNDPROC lpPrevWndFunc,_In_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
LRESULT WINAPI user32.CallWindowProcW(_In_ WNDPROC lpPrevWndFunc,_In_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
LRESULT WINAPI user32.DefDlgProc(_In_ HWND hDlg,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
LRESULT WINAPI user32.DefDlgProcW(_In_ HWND hDlg,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
LRESULT WINAPI user32.DefWindowProcA(_In_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
LRESULT WINAPI user32.DefWindowProc(_In_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
LRESULT WINAPI user32.DefWindowProcW(_In_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
LRESULT WINAPI user32.SendDlgItemMessageA(_In_ HWND hDlg,_In_ int nIDDlgItem,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
LRESULT WINAPI user32.SendDlgItemMessage(_In_ HWND hDlg,_In_ int nIDDlgItem,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
LRESULT WINAPI user32.SendDlgItemMessageW(_In_ HWND hDlg,_In_ int nIDDlgItem,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
LRESULT WINAPI user32.SendMessageA(_In_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
LRESULT WINAPI user32.SendMessage(_In_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
LRESULT WINAPI user32.SendMessageTimeoutA(_In_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam,_In_ UINT fuFlags,_In_ UINT uTimeout,_Out_opt_ PDWORD_PTR lpdwResult)
LRESULT WINAPI user32.SendMessageTimeout(_In_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam,_In_ UINT fuFlags,_In_ UINT uTimeout,_Out_opt_ PDWORD_PTR lpdwResult)
LRESULT WINAPI user32.SendMessageTimeoutW(_In_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam,_In_ UINT fuFlags,_In_ UINT uTimeout,_Out_opt_ PDWORD_PTR lpdwResult)
LRESULT WINAPI user32.SendMessageW(_In_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
LSTATUS None shlwapi.SHCopyKeyA(_In_ HKEY hkeySrc,_In_opt_ LPCTSTR pszSrcSubKey,_In_ HKEY hkeyDest,_Reserved_ DWORD fReserved)
LSTATUS None shlwapi.SHCopyKey(_In_ HKEY hkeySrc,_In_opt_ LPCTSTR pszSrcSubKey,_In_ HKEY hkeyDest,_Reserved_ DWORD fReserved)
LSTATUS None shlwapi.SHCopyKeyW(_In_ HKEY hkeySrc,_In_opt_ LPCTSTR pszSrcSubKey,_In_ HKEY hkeyDest,_Reserved_ DWORD fReserved)
LSTATUS None shlwapi.SHDeleteEmptyKeyA(_In_ HKEY hkey,_In_opt_ LPCTSTR pszSubKey)
LSTATUS None shlwapi.SHDeleteEmptyKey(_In_ HKEY hkey,_In_opt_ LPCTSTR pszSubKey)
LSTATUS None shlwapi.SHDeleteEmptyKeyW(_In_ HKEY hkey,_In_opt_ LPCTSTR pszSubKey)
LSTATUS None shlwapi.SHDeleteKeyA(_In_ HKEY hkey,_In_opt_ LPCTSTR pszSubKey)
LSTATUS None shlwapi.SHDeleteKey(_In_ HKEY hkey,_In_opt_ LPCTSTR pszSubKey)
LSTATUS None shlwapi.SHDeleteKeyW(_In_ HKEY hkey,_In_opt_ LPCTSTR pszSubKey)
LSTATUS None shlwapi.SHDeleteValueA(HKEY hkey None,LPCTSTR pszSubKey None,LPCTSTR pszValue None)
LSTATUS None shlwapi.SHDeleteValue(HKEY hkey None,LPCTSTR pszSubKey None,LPCTSTR pszValue None)
LSTATUS None shlwapi.SHDeleteValueW(HKEY hkey None,LPCTSTR pszSubKey None,LPCTSTR pszValue None)
LSTATUS None shlwapi.SHEnumKeyExA(_In_ HKEY hkey,DWORD dwIndex None,LPTSTR pszName None,_In_ LPDWORD pcchName)
LSTATUS None shlwapi.SHEnumKeyEx(_In_ HKEY hkey,DWORD dwIndex None,LPTSTR pszName None,_In_ LPDWORD pcchName)
LSTATUS None shlwapi.SHEnumKeyExW(_In_ HKEY hkey,DWORD dwIndex None,LPTSTR pszName None,_In_ LPDWORD pcchName)
LSTATUS None shlwapi.SHEnumValueA(_In_ HKEY hkey,_In_ DWORD dwIndex,LPTSTR pszValueName None,_Inout_opt_ LPDWORD pcchValueName,_Out_opt_ LPDWORD pdwType,LPVOID pvData None,_Inout_opt_ LPDWORD pcbData)
LSTATUS None shlwapi.SHEnumValue(_In_ HKEY hkey,_In_ DWORD dwIndex,LPTSTR pszValueName None,_Inout_opt_ LPDWORD pcchValueName,_Out_opt_ LPDWORD pdwType,LPVOID pvData None,_Inout_opt_ LPDWORD pcbData)
LSTATUS None shlwapi.SHEnumValueW(_In_ HKEY hkey,_In_ DWORD dwIndex,LPTSTR pszValueName None,_Inout_opt_ LPDWORD pcchValueName,_Out_opt_ LPDWORD pdwType,LPVOID pvData None,_Inout_opt_ LPDWORD pcbData)
LSTATUS None shlwapi.SHGetValueA(_In_ HKEY hkey,_In_opt_ LPCTSTR pszSubKey,_In_opt_ LPCTSTR pszValue,_Out_opt_ LPDWORD pdwType,_Out_opt_ LPVOID pvData,_Inout_opt_ LPDWORD pcbData)
LSTATUS None shlwapi.SHGetValue(_In_ HKEY hkey,_In_opt_ LPCTSTR pszSubKey,_In_opt_ LPCTSTR pszValue,_Out_opt_ LPDWORD pdwType,_Out_opt_ LPVOID pvData,_Inout_opt_ LPDWORD pcbData)
LSTATUS None shlwapi.SHGetValueW(_In_ HKEY hkey,_In_opt_ LPCTSTR pszSubKey,_In_opt_ LPCTSTR pszValue,_Out_opt_ LPDWORD pdwType,_Out_opt_ LPVOID pvData,_Inout_opt_ LPDWORD pcbData)
LSTATUS None shlwapi.SHQueryInfoKeyA(_In_ HKEY hkey,_Out_opt_ LPDWORD pcSubKeys,_Out_opt_ LPDWORD pcchMaxSubKeyLen,_Out_opt_ LPDWORD pcValues,_Out_opt_ LPDWORD pcchMaxValueNameLen)
LSTATUS None shlwapi.SHQueryInfoKey(_In_ HKEY hkey,_Out_opt_ LPDWORD pcSubKeys,_Out_opt_ LPDWORD pcchMaxSubKeyLen,_Out_opt_ LPDWORD pcValues,_Out_opt_ LPDWORD pcchMaxValueNameLen)
LSTATUS None shlwapi.SHQueryInfoKeyW(_In_ HKEY hkey,_Out_opt_ LPDWORD pcSubKeys,_Out_opt_ LPDWORD pcchMaxSubKeyLen,_Out_opt_ LPDWORD pcValues,_Out_opt_ LPDWORD pcchMaxValueNameLen)
LSTATUS None shlwapi.SHRegCloseUSKey(_In_ HUSKEY hUSKey)
LSTATUS None shlwapi.SHRegCreateUSKeyA(_In_ LPCTSTR pszPath,_In_ REGSAM samDesired,_In_opt_ HUSKEY hRelativeUSKey,_Out_ PHUSKEY phNewUSKey,_In_ DWORD dwFlags)
LSTATUS None shlwapi.SHRegCreateUSKey(_In_ LPCTSTR pszPath,_In_ REGSAM samDesired,_In_opt_ HUSKEY hRelativeUSKey,_Out_ PHUSKEY phNewUSKey,_In_ DWORD dwFlags)
LSTATUS None shlwapi.SHRegCreateUSKeyW(_In_ LPCTSTR pszPath,_In_ REGSAM samDesired,_In_opt_ HUSKEY hRelativeUSKey,_Out_ PHUSKEY phNewUSKey,_In_ DWORD dwFlags)
LSTATUS None shlwapi.SHRegDeleteEmptyUSKeyA(_In_ HUSKEY hUSKey,_In_ LPCSTR pszValue,_In_ SHREGDEL_FLAGS delRegFlags)
LSTATUS None shlwapi.SHRegDeleteEmptyUSKey(_In_ HUSKEY hUSKey,_In_ LPCSTR pszValue,_In_ SHREGDEL_FLAGS delRegFlags)
LSTATUS None shlwapi.SHRegDeleteEmptyUSKeyW(_In_ HUSKEY hUSKey,_In_ LPCSTR pszValue,_In_ SHREGDEL_FLAGS delRegFlags)
LSTATUS None shlwapi.SHRegDeleteUSValueA(_In_ HUSKEY hUSKey,_In_ LPCTSTR pszValue,_In_ SHREGDEL_FLAGS delRegFlags)
LSTATUS None shlwapi.SHRegDeleteUSValue(_In_ HUSKEY hUSKey,_In_ LPCTSTR pszValue,_In_ SHREGDEL_FLAGS delRegFlags)
LSTATUS None shlwapi.SHRegDeleteUSValueW(_In_ HUSKEY hUSKey,_In_ LPCTSTR pszValue,_In_ SHREGDEL_FLAGS delRegFlags)
LSTATUS None shlwapi.SHRegEnumUSKeyA(_In_ HUSKEY hUSKey,_In_ DWORD dwIndex,_Out_ LPTSTR pszName,_Inout_ LPDWORD pcchName,_In_ SHREGENUM_FLAGS enumRegFlags)
LSTATUS None shlwapi.SHRegEnumUSKey(_In_ HUSKEY hUSKey,_In_ DWORD dwIndex,_Out_ LPTSTR pszName,_Inout_ LPDWORD pcchName,_In_ SHREGENUM_FLAGS enumRegFlags)
LSTATUS None shlwapi.SHRegEnumUSKeyW(_In_ HUSKEY hUSKey,_In_ DWORD dwIndex,_Out_ LPTSTR pszName,_Inout_ LPDWORD pcchName,_In_ SHREGENUM_FLAGS enumRegFlags)
LSTATUS None shlwapi.SHRegEnumUSValueA(_In_ HUSKEY hUSKey,_In_ DWORD dwIndex,_Out_ LPTSTR pszValueName,_Inout_ LPDWORD pcchValueNameLen,_Out_opt_ LPDWORD pdwType,_Out_opt_ void *pvData,_Inout_opt_ LPDWORD pcbData,_In_ SHREGENUM_FLAGS enumRegFlags)
LSTATUS None shlwapi.SHRegEnumUSValue(_In_ HUSKEY hUSKey,_In_ DWORD dwIndex,_Out_ LPTSTR pszValueName,_Inout_ LPDWORD pcchValueNameLen,_Out_opt_ LPDWORD pdwType,_Out_opt_ void *pvData,_Inout_opt_ LPDWORD pcbData,_In_ SHREGENUM_FLAGS enumRegFlags)
LSTATUS None shlwapi.SHRegEnumUSValueW(_In_ HUSKEY hUSKey,_In_ DWORD dwIndex,_Out_ LPTSTR pszValueName,_Inout_ LPDWORD pcchValueNameLen,_Out_opt_ LPDWORD pdwType,_Out_opt_ void *pvData,_Inout_opt_ LPDWORD pcbData,_In_ SHREGENUM_FLAGS enumRegFlags)
LSTATUS None shlwapi.SHRegGetPathA(_In_ HKEY hkey,_In_ LPCTSTR pszSubkey,_In_ LPCTSTR pszValue,_Out_ LPTSTR pszPath,DWORD dwFlags None)
LSTATUS None shlwapi.SHRegGetPath(_In_ HKEY hkey,_In_ LPCTSTR pszSubkey,_In_ LPCTSTR pszValue,_Out_ LPTSTR pszPath,DWORD dwFlags None)
LSTATUS None shlwapi.SHRegGetPathW(_In_ HKEY hkey,_In_ LPCTSTR pszSubkey,_In_ LPCTSTR pszValue,_Out_ LPTSTR pszPath,DWORD dwFlags None)
LSTATUS None shlwapi.SHRegGetUSValueA(_In_ LPCTSTR pszSubKey,_In_opt_ LPCTSTR pszValue,_Inout_opt_ DWORD *pdwType,_Out_opt_ void *pvData,_Inout_opt_ DWORD *pcbData,_In_ BOOL fIgnoreHKCU,_In_opt_ void *pvDefaultData,_In_ DWORD dwDefaultDataSize)
LSTATUS None shlwapi.SHRegGetUSValue(_In_ LPCTSTR pszSubKey,_In_opt_ LPCTSTR pszValue,_Inout_opt_ DWORD *pdwType,_Out_opt_ void *pvData,_Inout_opt_ DWORD *pcbData,_In_ BOOL fIgnoreHKCU,_In_opt_ void *pvDefaultData,_In_ DWORD dwDefaultDataSize)
LSTATUS None shlwapi.SHRegGetUSValueW(_In_ LPCTSTR pszSubKey,_In_opt_ LPCTSTR pszValue,_Inout_opt_ DWORD *pdwType,_Out_opt_ void *pvData,_Inout_opt_ DWORD *pcbData,_In_ BOOL fIgnoreHKCU,_In_opt_ void *pvDefaultData,_In_ DWORD dwDefaultDataSize)
LSTATUS None shlwapi.SHRegGetValueA(_In_ HKEY hkey,_In_ LPCTSTR pszSubKey,_In_ LPCTSTR pszValue,_In_ SRRF srrfFlags,_Inout_ LPDWORD pdwType,_Out_ LPVOID pvData,_Inout_ LPDWORD pcbData)
LSTATUS None shlwapi.SHRegGetValue(_In_ HKEY hkey,_In_ LPCTSTR pszSubKey,_In_ LPCTSTR pszValue,_In_ SRRF srrfFlags,_Inout_ LPDWORD pdwType,_Out_ LPVOID pvData,_Inout_ LPDWORD pcbData)
LSTATUS None shlwapi.SHRegGetValueW(_In_ HKEY hkey,_In_ LPCTSTR pszSubKey,_In_ LPCTSTR pszValue,_In_ SRRF srrfFlags,_Inout_ LPDWORD pdwType,_Out_ LPVOID pvData,_Inout_ LPDWORD pcbData)
LSTATUS None shlwapi.SHRegOpenUSKeyA(_In_ LPCTSTR pszPath,_In_ REGSAM samDesired,_In_opt_ HUSKEY hRelativeUSKey,_Out_ PHUSKEY phNewUSKey,_In_ BOOL fIgnoreHKCU)
LSTATUS None shlwapi.SHRegOpenUSKey(_In_ LPCTSTR pszPath,_In_ REGSAM samDesired,_In_opt_ HUSKEY hRelativeUSKey,_Out_ PHUSKEY phNewUSKey,_In_ BOOL fIgnoreHKCU)
LSTATUS None shlwapi.SHRegOpenUSKeyW(_In_ LPCTSTR pszPath,_In_ REGSAM samDesired,_In_opt_ HUSKEY hRelativeUSKey,_Out_ PHUSKEY phNewUSKey,_In_ BOOL fIgnoreHKCU)
LSTATUS None shlwapi.SHRegQueryInfoUSKeyA(_In_ HUSKEY hUSKey,_Out_opt_ LPDWORD pcSubKeys,_Out_opt_ LPDWORD pcchMaxSubKeyLen,_Out_opt_ LPDWORD pcValues,_Out_opt_ LPDWORD pcchMaxValueNameLen,_In_ SHREGENUM_FLAGS enumRegFlags)
LSTATUS None shlwapi.SHRegQueryInfoUSKey(_In_ HUSKEY hUSKey,_Out_opt_ LPDWORD pcSubKeys,_Out_opt_ LPDWORD pcchMaxSubKeyLen,_Out_opt_ LPDWORD pcValues,_Out_opt_ LPDWORD pcchMaxValueNameLen,_In_ SHREGENUM_FLAGS enumRegFlags)
LSTATUS None shlwapi.SHRegQueryInfoUSKeyW(_In_ HUSKEY hUSKey,_Out_opt_ LPDWORD pcSubKeys,_Out_opt_ LPDWORD pcchMaxSubKeyLen,_Out_opt_ LPDWORD pcValues,_Out_opt_ LPDWORD pcchMaxValueNameLen,_In_ SHREGENUM_FLAGS enumRegFlags)
LSTATUS None shlwapi.SHRegQueryUSValueA(_In_ HUSKEY hUSKey,_In_opt_ LPCTSTR pszValue,_Inout_opt_ LPDWORD *pdwType,_Out_opt_ LPVOID *pvData,_Inout_ LPDWORD *pcbData,_In_ BOOL fIgnoreHKCU,_In_opt_ LPVOID *pvDefaultData,_In_opt_ DWORD dwDefaultDataSize)
LSTATUS None shlwapi.SHRegQueryUSValue(_In_ HUSKEY hUSKey,_In_opt_ LPCTSTR pszValue,_Inout_opt_ LPDWORD *pdwType,_Out_opt_ LPVOID *pvData,_Inout_ LPDWORD *pcbData,_In_ BOOL fIgnoreHKCU,_In_opt_ LPVOID *pvDefaultData,_In_opt_ DWORD dwDefaultDataSize)
LSTATUS None shlwapi.SHRegQueryUSValueW(_In_ HUSKEY hUSKey,_In_opt_ LPCTSTR pszValue,_Inout_opt_ LPDWORD *pdwType,_Out_opt_ LPVOID *pvData,_Inout_ LPDWORD *pcbData,_In_ BOOL fIgnoreHKCU,_In_opt_ LPVOID *pvDefaultData,_In_opt_ DWORD dwDefaultDataSize)
LSTATUS None shlwapi.SHRegSetPathA(_In_ HKEY hkey,_In_ LPCTSTR pszSubkey,_In_ LPCTSTR pszValue,_In_ LPCTSTR pszPath,DWORD dwFlags None)
LSTATUS None shlwapi.SHRegSetPath(_In_ HKEY hkey,_In_ LPCTSTR pszSubkey,_In_ LPCTSTR pszValue,_In_ LPCTSTR pszPath,DWORD dwFlags None)
LSTATUS None shlwapi.SHRegSetPathW(_In_ HKEY hkey,_In_ LPCTSTR pszSubkey,_In_ LPCTSTR pszValue,_In_ LPCTSTR pszPath,DWORD dwFlags None)
LSTATUS None shlwapi.SHRegSetUSValueA(_In_ LPCTSTR pszSubKey,_In_ LPCTSTR pszValue,_In_ DWORD dwType,_In_opt_ LPVOID *pvData,_In_opt_ DWORD cbData,_In_opt_ DWORD dwFlags)
LSTATUS None shlwapi.SHRegSetUSValue(_In_ LPCTSTR pszSubKey,_In_ LPCTSTR pszValue,_In_ DWORD dwType,_In_opt_ LPVOID *pvData,_In_opt_ DWORD cbData,_In_opt_ DWORD dwFlags)
LSTATUS None shlwapi.SHRegSetUSValueW(_In_ LPCTSTR pszSubKey,_In_ LPCTSTR pszValue,_In_ DWORD dwType,_In_opt_ LPVOID *pvData,_In_opt_ DWORD cbData,_In_opt_ DWORD dwFlags)
LSTATUS None shlwapi.SHSetValueA(_In_ HKEY hkey,_In_opt_ LPCTSTR pszSubKey,_In_opt_ LPCTSTR pszValue,_In_ DWORD dwType,_In_opt_ LPCVOID pvData,_In_ DWORD cbData)
LSTATUS None shlwapi.SHSetValue(_In_ HKEY hkey,_In_opt_ LPCTSTR pszSubKey,_In_opt_ LPCTSTR pszValue,_In_ DWORD dwType,_In_opt_ LPCVOID pvData,_In_ DWORD cbData)
LSTATUS None shlwapi.SHSetValueW(_In_ HKEY hkey,_In_opt_ LPCTSTR pszSubKey,_In_opt_ LPCTSTR pszValue,_In_ DWORD dwType,_In_opt_ LPCVOID pvData,_In_ DWORD cbData)
LWSTDAPI None api-ms-win-shcore-thread-l1-1-0.GetProcessReference(_Out_ IUnknown **punk)
MagImageScalingCallback WINAPI magnification.MagGetImageScalingCallback(_In_ HWND hwnd)
MCIDEVICEID None None.mciGetDeviceID(LPCTSTR lpszDevice None)
MCIDEVICEID None winmm.mciGetDeviceIDFromElementIDA(DWORD dwElementID None,LPCTSTR lpstrType None)
MCIDEVICEID None winmm.mciGetDeviceIDFromElementID(DWORD dwElementID None,LPCTSTR lpstrType None)
MCIDEVICEID None winmm.mciGetDeviceIDFromElementIDW(DWORD dwElementID None,LPCTSTR lpstrType None)
MCIERROR None None.mciSendCommand(MCIDEVICEID IDDevice None,UINT uMsg None,DWORD fdwCommand None,DWORD_PTR dwParam None)
MCIERROR None None.mciSendString(LPCTSTR lpszCommand None,LPTSTR lpszReturnString None,UINT cchReturn None,HANDLE hwndCallback None)
MCIERROR None winmm.mciSendCommandA(MCIDEVICEID IDDevice None,UINT uMsg None,DWORD_PTR fdwCommand None,DWORD_PTR dwParam None)
MCIERROR None winmm.mciSendCommand(MCIDEVICEID IDDevice None,UINT uMsg None,DWORD_PTR fdwCommand None,DWORD_PTR dwParam None)
MCIERROR None winmm.mciSendCommandW(MCIDEVICEID IDDevice None,UINT uMsg None,DWORD_PTR fdwCommand None,DWORD_PTR dwParam None)
Message None None.Request(Message message None,TimeSpan timeout None)
MethodInfo None None.GetMethod(String name None,BindingFlags bindingAttr None,Binder binder None,Type[] types None,ParameterModifier[] modifiers None)
MFOffset None None.MakeOffset(float v None)
MFP_PAUSE_EVENT None None.MFP_GET_PAUSE_EVENT(MFP_EVENT_HEADER pHdr None)
MFTIME None mfplat.MFGetSystemTime(void None None)
MFVideoArea None None.MakeArea(float x None,float y None,DWORD width None,DWORD height None)
midl_pragma None None.warning(warning_option : message_list)
MI_INLINE MI_ErrorCategory None.MI_Utilities_MapErrorToMiErrorCategory(_In_z_ MI_Char *errorType,MI_Uint32 error None)
MI_INLINE MI_Result mi.MI_OperationOptions_GetPromptUserRegularMode(_Inout_ MI_OperationOptions *options,_Out_ MI_CallbackMode *mode,_Out_ MI_Boolean *ackValue)
MI_INLINE MI_Result mi.MI_OperationOptions_SetPromptUserRegularMode(_Inout_ MI_OperationOptions *options,_In_ MI_CallbackMode mode,_In_ MI_Boolean ackValue)
MI_INLINE MI_Result None.MI_Application_Close(_Inout_ MI_Application *application)
MI_INLINE MI_Result None.MI_Application_NewDeserializer(_Inout_ MI_Application *application,MI_Uint32 flags None,_In_ MI_Char *format,_Out_ MI_Deserializer *deserializer)
MI_INLINE MI_Result None.MI_Application_NewDestinationOptions(_In_ MI_Application *application,_Out_ MI_DestinationOptions *options)
MI_INLINE MI_Result None.MI_Application_NewOperationOptions(_In_ MI_Application *application,MI_Boolean mustUnderstand None,_Out_ MI_OperationOptions *options)
MI_INLINE MI_Result None.MI_Application_NewSubscriptionDeliveryOptions(_In_ MI_Application *application,_In_ MI_SubscriptionDeliveryType deliveryType,_Out_ MI_SubscriptionDeliveryOptions *deliveryOptions)
MI_INLINE MI_Result None.MI_Class_Delete(_Inout_ MI_Class *self)
MI_INLINE MI_Result None.MI_Context_GetCustomOptionCount(_In_ MI_Context *context,_Out_opt_ MI_Uint32 *count)
MI_INLINE MI_Result None.MI_Context_PostResult(_In_ MI_Context *context,MI_Result result None)
MI_INLINE MI_Result None.MI_Context_RefuseUnload(_In_ MI_Context *context)
MI_INLINE MI_Result None.MI_Context_RegisterCancel(_In_ MI_Context *context,_In_ MI_CancelCallback callback,_In_opt_ void *callbackData)
MI_INLINE MI_Result None.MI_Context_RequestUnload(_In_ MI_Context *context)
MI_INLINE MI_Result None.MI_Deserializer_Close(_Inout_ MI_Deserializer *deserializer)
MI_INLINE MI_Result None.MI_DestinationOptions_GetCertCACheck(_In_ MI_DestinationOptions *options,_Out_ MI_Boolean *check)
MI_INLINE MI_Result None.MI_DestinationOptions_GetCertCNCheck(_In_ MI_DestinationOptions *options,_Out_ MI_Boolean *check)
MI_INLINE MI_Result None.MI_DestinationOptions_GetCertRevocationCheck(_In_ MI_DestinationOptions *options,_Out_ MI_Boolean *check)
MI_INLINE MI_Result None.MI_DestinationOptions_GetCredentialsCount(_In_ MI_DestinationOptions *options,_Out_ MI_Uint32 *count)
MI_INLINE MI_Result None.MI_DestinationOptions_GetDestinationPort(_In_ MI_DestinationOptions *options,_Out_ MI_Uint32 *port)
MI_INLINE MI_Result None.MI_DestinationOptions_GetEncodePortInSPN(_In_ MI_DestinationOptions *options,_Out_ MI_Boolean *encodePort)
MI_INLINE MI_Result None.MI_DestinationOptions_GetImpersonationType(_Inout_ MI_DestinationOptions *options,_Out_ MI_DestinationOptions_ImpersonationType *impersonationType)
MI_INLINE MI_Result None.MI_DestinationOptions_GetMaxEnvelopeSize(_In_ MI_DestinationOptions *options,_Out_ MI_Uint32 *sizeInKB)
MI_INLINE MI_Result None.MI_DestinationOptions_GetOptionCount(_In_ MI_DestinationOptions *options,_Out_ MI_Uint32 *count)
MI_INLINE MI_Result None.MI_DestinationOptions_GetPacketIntegrity(_In_ MI_DestinationOptions *options,_Out_ MI_Boolean *integrity)
MI_INLINE MI_Result None.MI_DestinationOptions_GetPacketPrivacy(_In_ MI_DestinationOptions *options,_Out_ MI_Boolean *privacy)
MI_INLINE MI_Result None.MI_DestinationOptions_GetTimeout(_In_ MI_DestinationOptions *options,_Out_ MI_Interval *timeout)
MI_INLINE MI_Result None.MI_DestinationOptions_SetCertCACheck(_Inout_ MI_DestinationOptions *options,MI_Boolean check None)
MI_INLINE MI_Result None.MI_DestinationOptions_SetCertCNCheck(_Inout_ MI_DestinationOptions *options,MI_Boolean check None)
MI_INLINE MI_Result None.MI_DestinationOptions_SetCertRevocationCheck(_Inout_ MI_DestinationOptions *options,MI_Boolean check None)
MI_INLINE MI_Result None.MI_DestinationOptions_SetDestinationPort(_Inout_ MI_DestinationOptions *options,MI_Uint32 port None)
MI_INLINE MI_Result None.MI_DestinationOptions_SetEncodePortInSPN(_Inout_ MI_DestinationOptions *options,MI_Boolean encodePort None)
MI_INLINE MI_Result None.MI_DestinationOptions_SetImpersonationType(_Inout_ MI_DestinationOptions *options,_In_ MI_DestinationOptions_ImpersonationType impersonationType)
MI_INLINE MI_Result None.MI_DestinationOptions_SetMaxEnvelopeSize(_Inout_ MI_DestinationOptions *options,MI_Uint32 sizeInKB None)
MI_INLINE MI_Result None.MI_DestinationOptions_SetPacketIntegrity(_Inout_ MI_DestinationOptions *options,MI_Boolean integrity None)
MI_INLINE MI_Result None.MI_DestinationOptions_SetPacketPrivacy(_Inout_ MI_DestinationOptions *options,MI_Boolean privacy None)
MI_INLINE MI_Result None.MI_HostedProvider_Close(_Inout_ MI_HostedProvider *hostedProvider)
MI_INLINE MI_Result None.MI_HostedProvider_GetApplication(_In_ MI_HostedProvider *hostedProvider,_Out_ MI_Application *application)
MI_INLINE MI_Result None.MI_Instance_ClearElementAt(_Inout_ MI_Instance *self,MI_Uint32 index None)
MI_INLINE MI_Result None.MI_Instance_Delete(_Inout_ MI_Instance *self)
MI_INLINE MI_Result None.MI_Instance_Destruct(_Inout_ MI_Instance *self)
MI_INLINE MI_Result None.MI_Instance_Normalize(_Inout_ MI_Instance **self)
MI_INLINE MI_Result None.MI_Operation_Cancel(_Inout_ MI_Operation *operation,MI_CancellationReason reason None)
MI_INLINE MI_Result None.MI_Operation_Close(_Inout_ MI_Operation *operation)
MI_INLINE MI_Result None.MI_Operation_GetSession(_In_ MI_Operation *operation,_Out_ MI_Session *session)
MI_INLINE MI_Result None.MI_OperationOptions_Delete(_Inout_ MI_OperationOptions *options)
MI_INLINE MI_Result None.MI_OperationOptions_DisableChannel(_Inout_ MI_OperationOptions *options,_In_ MI_Uint32 channel)
MI_INLINE MI_Result None.MI_OperationOptions_EnableChannel(_Inout_ MI_OperationOptions *options,_In_ MI_Uint32 channel)
MI_INLINE MI_Result None.MI_OperationOptions_GetForceFlagPromptUserMode(_Inout_ MI_OperationOptions *options,_Out_ MI_Boolean *forceflag)
MI_INLINE MI_Result None.MI_OperationOptions_GetOptionCount(_In_ MI_OperationOptions *options,_Out_ MI_Uint32 *count)
MI_INLINE MI_Result None.MI_OperationOptions_GetPromptUserMode(_In_ MI_OperationOptions *options,_Out_ MI_CallbackMode *mode)
MI_INLINE MI_Result None.MI_OperationOptions_GetProviderArchitecture(_In_ MI_OperationOptions *options,_Out_ MI_ProviderArchitecture *architecture,_Out_ MI_Boolean *mustComply)
MI_INLINE MI_Result None.MI_OperationOptions_GetTimeout(_In_ MI_OperationOptions *options,_Out_ MI_Interval *timeout)
MI_INLINE MI_Result None.MI_OperationOptions_GetUseMachineID(_In_ MI_OperationOptions *options,_Out_ MI_Boolean *machineID)
MI_INLINE MI_Result None.MI_OperationOptions_GetWriteErrorMode(_In_ MI_OperationOptions *options,_Out_ MI_CallbackMode *mode)
MI_INLINE MI_Result None.MI_OperationOptions_SetForceFlagPromptUserMode(_Inout_ MI_OperationOptions *options,_In_ MI_Boolean forceflag)
MI_INLINE MI_Result None.MI_OperationOptions_SetPromptUserMode(_Inout_ MI_OperationOptions *options,_In_ MI_CallbackMode mode)
MI_INLINE MI_Result None.MI_OperationOptions_SetProviderArchitecture(_Inout_ MI_OperationOptions *options,_In_ MI_ProviderArchitecture architecture,_In_ MI_Boolean mustComply)
MI_INLINE MI_Result None.MI_OperationOptions_SetUseMachineID(_Inout_ MI_OperationOptions *options,_In_ MI_Boolean machineID)
MI_INLINE MI_Result None.MI_OperationOptions_SetWriteErrorMode(_Inout_ MI_OperationOptions *options,_In_ MI_CallbackMode mode)
MI_INLINE MI_Result None.MI_PropertySet_Clear(_Inout_ MI_PropertySet *self)
MI_INLINE MI_Result None.MI_PropertySet_Delete(_Inout_ MI_PropertySet *self)
MI_INLINE MI_Result None.MI_PropertySet_Destruct(_Inout_ MI_PropertySet *self)
MI_INLINE MI_Result None.MI_Serializer_Close(_Inout_ MI_Serializer *serializer)
MI_INLINE MI_Result None.MI_Session_GetApplication(_In_ MI_Session *session,_Out_ MI_Application *application)
MI_INLINE MI_Result None.MI_SubscriptionDeliveryOptions_Delete(_Inout_ MI_SubscriptionDeliveryOptions *self)
MI_INLINE MI_Result None.MI_SubscriptionDeliveryOptions_GetDeliveryPortNumber(_In_ MI_SubscriptionDeliveryOptions *self,_Out_ MI_Uint32 *value)
MI_INLINE MI_Result None.MI_SubscriptionDeliveryOptions_GetDeliveryRetryAttempts(_In_ MI_SubscriptionDeliveryOptions *self,_Out_ MI_Uint32 *value)
MI_INLINE MI_Result None.MI_SubscriptionDeliveryOptions_GetExpirationTime(_Inout_ MI_SubscriptionDeliveryOptions *self,_Out_ MI_Datetime *value)
MI_INLINE MI_Result None.MI_SubscriptionDeliveryOptions_GetHeartbeatInterval(_In_ MI_SubscriptionDeliveryOptions *self,_Out_ MI_Interval *value)
MI_INLINE MI_Result None.MI_SubscriptionDeliveryOptions_GetMaximumLatency(_In_ MI_SubscriptionDeliveryOptions *self,_Out_ MI_Interval *value)
MI_INLINE MI_Result None.MI_SubscriptionDeliveryOptions_GetOptionCount(_In_ MI_SubscriptionDeliveryOptions *self,_Out_opt_ MI_Uint32 *count)
MI_INLINE MI_Result None.MI_SubscriptionDeliveryOptions_SetDeliveryPortNumber(_Inout_ MI_SubscriptionDeliveryOptions *self,_In_ MI_Uint32 value)
MI_INLINE MI_Result None.MI_SubscriptionDeliveryOptions_SetDeliveryRetryAttempts(_Inout_ MI_SubscriptionDeliveryOptions *self,_In_ MI_Uint32 value)
MI_INLINE MI_Result None.MI_SubscriptionDeliveryOptions_SetExpirationTime(_Inout_ MI_SubscriptionDeliveryOptions *self,_In_ MI_Datetime *value)
MI_INLINE MI_Result None.MI_SubscriptionDeliveryOptions_SetHeartbeatInterval(_Inout_ MI_SubscriptionDeliveryOptions *self,_In_ MI_Interval *value)
MI_INLINE MI_Result None.MI_SubscriptionDeliveryOptions_SetMaximumLatency(_Inout_ MI_SubscriptionDeliveryOptions *self,_In_ MI_Interval *value)
MI_INLINE void None.MI_DestinationOptions_Delete(_Inout_ MI_DestinationOptions *options)
MI_INLINE void None.MI_Session_TestConnection(_In_ MI_Session *session,MI_Uint32 flags None,_In_opt_ MI_OperationCallbacks *callbacks,_Out_ MI_Operation *operation)
MI_Result MI_CALL None.MI_Server_GetSystemName(const MI_Char **systemName)
MI_Result MI_CALL None.MI_Server_GetVersion(MI_Uint32 *version None)
MMRESULT ACMAPI msacm32.acmStreamMessage(HACMSTREAM has None,UINT uMsg None,LPARAM lParam1 None,LPARAM lParam2 None)
MMRESULT ACMAPI None.acmStreamMessage(HACMSTREAM has None,UINT uMsg None,LPARAM lParam1 None,LPARAM lParam2 None)
MMRESULT None msacm32.acmDriverAddA(LPHACMDRIVERID phadid None,HINSTANCE hinstModule None,LPARAM lParam None,DWORD dwPriority None,DWORD fdwAdd None)
MMRESULT None msacm32.acmDriverAdd(LPHACMDRIVERID phadid None,HINSTANCE hinstModule None,LPARAM lParam None,DWORD dwPriority None,DWORD fdwAdd None)
MMRESULT None msacm32.acmDriverAddW(LPHACMDRIVERID phadid None,HINSTANCE hinstModule None,LPARAM lParam None,DWORD dwPriority None,DWORD fdwAdd None)
MMRESULT None msacm32.acmDriverEnum(ACMDRIVERENUMCB fnCallback None,DWORD_PTR dwInstance None,DWORD fdwEnum None)
MMRESULT None msacm32.acmDriverPriority(HACMDRIVERID hadid None,DWORD dwPriority None,DWORD fdwPriority None)
MMRESULT None msacm32.acmFilterEnumA(HACMDRIVER had None,LPACMFILTERDETAILS pafd None,ACMFILTERENUMCB fnCallback None,DWORD_PTR dwInstance None,DWORD fdwEnum None)
MMRESULT None msacm32.acmFilterEnum(HACMDRIVER had None,LPACMFILTERDETAILS pafd None,ACMFILTERENUMCB fnCallback None,DWORD_PTR dwInstance None,DWORD fdwEnum None)
MMRESULT None msacm32.acmFilterEnumW(HACMDRIVER had None,LPACMFILTERDETAILS pafd None,ACMFILTERENUMCB fnCallback None,DWORD_PTR dwInstance None,DWORD fdwEnum None)
MMRESULT None msacm32.acmFilterTagDetailsA(HACMDRIVER had None,LPACMFILTERTAGDETAILS paftd None,DWORD_PTR fdwDetails None)
MMRESULT None msacm32.acmFilterTagDetails(HACMDRIVER had None,LPACMFILTERTAGDETAILS paftd None,DWORD_PTR fdwDetails None)
MMRESULT None msacm32.acmFilterTagDetailsW(HACMDRIVER had None,LPACMFILTERTAGDETAILS paftd None,DWORD_PTR fdwDetails None)
MMRESULT None msacm32.acmFormatDetailsA(HACMDRIVER had None,LPACMFORMATDETAILS pafd None,DWORD fdwDetails None)
MMRESULT None msacm32.acmFormatDetails(HACMDRIVER had None,LPACMFORMATDETAILS pafd None,DWORD fdwDetails None)
MMRESULT None msacm32.acmFormatDetailsW(HACMDRIVER had None,LPACMFORMATDETAILS pafd None,DWORD fdwDetails None)
MMRESULT None msacm32.acmFormatSuggest(HACMDRIVER had None,LPWAVEFORMATEX pwfxSrc None,LPWAVEFORMATEX pwfxDst None,DWORD cbwfxDst None,DWORD fdwSuggest None)
MMRESULT None msacm32.acmMetrics(HACMOBJ hao None,UINT uMetric None,LPVOID pMetric None)
MMRESULT None msacm32.acmStreamPrepareHeader(HACMSTREAM has None,LPACMSTREAMHEADER pash None,DWORD fdwPrepare None)
MMRESULT None msacm32.acmStreamReset(HACMSTREAM has None,DWORD fdwReset None)
MMRESULT None None.acmDriverDetails(HACMDRIVERID hadid None,LPACMDRIVERDETAILS padd None,DWORD fdwDetails None)
MMRESULT None None.acmDriverEnum(ACMDRIVERENUMCB fnCallback None,DWORD_PTR dwInstance None,DWORD fdwEnum None)
MMRESULT None None.acmFilterChoose(LPACMFILTERCHOOSE pafltrc None)
MMRESULT None None.acmFilterEnum(HACMDRIVER had None,LPACMFILTERDETAILS pafd None,ACMFILTERENUMCB fnCallback None,DWORD_PTR dwInstance None,DWORD fdwEnum None)
MMRESULT None None.acmFilterTagEnum(HACMDRIVER had None,LPACMFILTERTAGDETAILS paftd None,ACMFILTERTAGENUMCB fnCallback None,DWORD_PTR dwInstance None,DWORD fdwEnum None)
MMRESULT None None.acmFormatChoose(LPACMFORMATCHOOSE pfmtc None)
MMRESULT None None.acmFormatEnum(HACMDRIVER had None,LPACMFORMATDETAILS pafd None,ACMFORMATENUMCB fnCallback None,DWORD_PTR dwInstance None,DWORD fdwEnum None)
MMRESULT None None.acmFormatTagDetails(HACMDRIVER had None,LPACMFORMATTAGDETAILS paftd None,DWORD fdwDetails None)
MMRESULT None None.acmFormatTagEnum(HACMDRIVER had None,LPACMFORMATTAGDETAILS paftd None,ACMFORMATTAGENUMCB fnCallback None,DWORD_PTR dwInstance None,DWORD fdwEnum None)
MMRESULT None None.acmMetrics(HACMOBJ hao None,UINT uMetric None,LPVOID pMetric None)
MMRESULT None None.acmStreamConvert(HACMSTREAM has None,LPACMSTREAMHEADER pash None,DWORD fdwConvert None)
MMRESULT None None.acmStreamSize(HACMSTREAM has None,DWORD cbInput None,LPDWORD pdwOutputBytes None,DWORD fdwSize None)
MMRESULT None None.acmStreamUnprepareHeader(HACMSTREAM has None,LPACMSTREAMHEADER pash None,DWORD fdwUnprepare None)
MMRESULT None None.auxGetDevCaps(UINT_PTR uDeviceID None,LPAUXCAPS lpCaps None,UINT cbCaps None)
MMRESULT None None.joyGetDevCaps(UINT_PTR uJoyID None,LPJOYCAPS pjc None,UINT cbjc None)
MMRESULT None None.joyReleaseCapture(UINT uJoyID None)
MMRESULT None None.joySetCapture(HWND hwnd None,UINT uJoyID None,UINT uPeriod None,BOOL fChanged None)
MMRESULT None None.joySetThreshold(UINT uJoyID None,UINT uThreshold None)
MMRESULT None None.midiConnect(HMIDI hMidi None,HMIDIOUT hmo None,LPVOID pReserved None)
MMRESULT None None.midiDisconnect(HMIDI hMidi None,HMIDIOUT hmo None,LPVOID pReserved None)
MMRESULT None None.midiInAddBuffer(HMIDIIN hMidiIn None,LPMIDIHDR lpMidiInHdr None,UINT cbMidiInHdr None)
MMRESULT None None.midiInGetDevCaps(UINT_PTR uDeviceID None,LPMIDIINCAPS lpMidiInCaps None,UINT cbMidiInCaps None)
MMRESULT None None.midiInGetErrorText(MMRESULT wError None,LPTSTR lpText None,UINT cchText None)
MMRESULT None None.midiInGetID(HMIDIIN hmi None,LPUINT puDeviceID None)
MMRESULT None None.midiInOpen(LPHMIDIIN lphMidiIn None,UINT_PTR uDeviceID None,DWORD_PTR dwCallback None,DWORD_PTR dwCallbackInstance None,DWORD dwFlags None)
MMRESULT None None.midiInReset(HMIDIIN hMidiIn None)
MMRESULT None None.midiInStart(HMIDIIN hMidiIn None)
MMRESULT None None.midiInUnprepareHeader(HMIDIIN hMidiIn None,LPMIDIHDR lpMidiInHdr None,UINT cbMidiInHdr None)
MMRESULT None None.midiOutCacheDrumPatches(HMIDIOUT hmo None,UINT wPatch None,WORD * lpKeyArray,UINT wFlags None)
MMRESULT None None.midiOutGetDevCaps(UINT_PTR uDeviceID None,LPMIDIOUTCAPS lpMidiOutCaps None,UINT cbMidiOutCaps None)
MMRESULT None None.midiOutGetID(HMIDIOUT hmo None,LPUINT puDeviceID None)
MMRESULT None None.midiOutGetVolume(HMIDIOUT hmo None,LPDWORD lpdwVolume None)
MMRESULT None None.midiOutPrepareHeader(HMIDIOUT hmo None,LPMIDIHDR lpMidiOutHdr None,UINT cbMidiOutHdr None)
MMRESULT None None.midiOutSetVolume(HMIDIOUT hmo None,DWORD dwVolume None)
MMRESULT None None.midiOutShortMsg(HMIDIOUT hmo None,DWORD dwMsg None)
MMRESULT None None.midiStreamOpen(LPHMIDISTRM lphStream None,LPUINT puDeviceID None,DWORD cMidi None,DWORD_PTR dwCallback None,DWORD_PTR dwInstance None,DWORD fdwOpen None)
MMRESULT None None.midiStreamPause(HMIDISTRM hms None)
MMRESULT None None.midiStreamPosition(HMIDISTRM hms None,LPMMTIME pmmt None,UINT cbmmt None)
MMRESULT None None.midiStreamProperty(HMIDISTRM hm None,LPBYTE lppropdata None,DWORD dwProperty None)
MMRESULT None None.midiStreamRestart(HMIDISTRM hms None)
MMRESULT None None.mixerGetDevCaps(UINT_PTR uMxId None,LPMIXERCAPS pmxcaps None,UINT cbmxcaps None)
MMRESULT None None.mixerOpen(LPHMIXER phmx None,UINT uMxId None,DWORD_PTR dwCallback None,DWORD_PTR dwInstance None,DWORD fdwOpen None)
MMRESULT None None.mmioClose(HMMIO hmmio None,UINT wFlags None)
MMRESULT None None.mmioFlush(HMMIO hmmio None,UINT fuFlush None)
MMRESULT None None.mmioRename(LPCTSTR szFilename None,LPCTSTR szNewFilename None,const LPMMIOINFO lpmmioinfo,DWORD dwRenameFlags None)
MMRESULT None None.timeEndPeriod(UINT uPeriod None)
MMRESULT None None.timeGetDevCaps(LPTIMECAPS ptc None,UINT cbtc None)
MMRESULT None None.timeGetSystemTime(LPMMTIME pmmt None,UINT cbmmt None)
MMRESULT None None.timeKillEvent(UINT uTimerID None)
MMRESULT None None.timeSetEvent(UINT uDelay None,UINT uResolution None,LPTIMECALLBACK lpTimeProc None,DWORD_PTR dwUser None,UINT fuEvent None)
MMRESULT None None.waveInClose(HWAVEIN hwi None)
MMRESULT None None.waveInGetErrorText(MMRESULT mmrError None,LPTSTR pszText None,UINT cchText None)
MMRESULT None None.waveInOpen(LPHWAVEIN phwi None,UINT_PTR uDeviceID None,LPWAVEFORMATEX pwfx None,DWORD_PTR dwCallback None,DWORD_PTR dwCallbackInstance None,DWORD fdwOpen None)
MMRESULT None None.waveInPrepareHeader(HWAVEIN hwi None,LPWAVEHDR pwh None,UINT cbwh None)
MMRESULT None None.waveInReset(HWAVEIN hwi None)
MMRESULT None None.waveOutBreakLoop(HWAVEOUT hwo None)
MMRESULT None None.waveOutClose(HWAVEOUT hwo None)
MMRESULT None None.waveOutGetDevCaps(UINT_PTR uDeviceID None,LPWAVEOUTCAPS pwoc None,UINT cbwoc None)
MMRESULT None None.waveOutGetPitch(HWAVEOUT hwo None,LPDWORD pdwPitch None)
MMRESULT None None.waveOutOpen(LPHWAVEOUT phwo None,UINT_PTR uDeviceID None,LPWAVEFORMATEX pwfx None,DWORD_PTR dwCallback None,DWORD_PTR dwCallbackInstance None,DWORD fdwOpen None)
MMRESULT None None.waveOutPrepareHeader(HWAVEOUT hwo None,LPWAVEHDR pwh None,UINT cbwh None)
MMRESULT None None.waveOutReset(HWAVEOUT hwo None)
MMRESULT None None.waveOutRestart(HWAVEOUT hwo None)
MMRESULT None None.waveOutSetPitch(HWAVEOUT hwo None,DWORD dwPitch None)
MMRESULT None None.waveOutSetPlaybackRate(HWAVEOUT hwo None,DWORD dwRate None)
MMRESULT None None.waveOutSetVolume(HWAVEOUT hwo None,DWORD dwVolume None)
MMRESULT None winmm.joyGetThreshold(UINT uJoyID None,LPUINT puThreshold None)
MMRESULT None winmm.midiConnect(HMIDI hMidi None,HMIDIOUT hmo None,LPVOID pReserved None)
MMRESULT None winmm.midiOutCachePatches(HMIDIOUT hmo None,UINT wBank None,WORD *lpPatchArray None,UINT wFlags None)
MMRESULT None winmm.midiOutReset(HMIDIOUT hmo None)
MMRESULT None winmm.midiOutSetVolume(HMIDIOUT hmo None,DWORD dwVolume None)
MMRESULT None winmm.mixerOpen(LPHMIXER phmx None,UINT uMxId None,DWORD_PTR dwCallback None,DWORD_PTR dwInstance None,DWORD fdwOpen None)
MMRESULT None winmm.mixerSetControlDetails(HMIXEROBJ hmxobj None,LPMIXERCONTROLDETAILS pmxcd None,DWORD fdwDetails None)
MMRESULT None winmm.timeBeginPeriod(UINT uPeriod None)
MMRESULT None winmm.timeEndPeriod(UINT uPeriod None)
MMRESULT None winmm.timeGetDevCaps(LPTIMECAPS ptc None,UINT cbtc None)
MMRESULT None winmm.timeGetSystemTime(LPMMTIME pmmt None,UINT cbmmt None)
MMRESULT None winmm.timeKillEvent(UINT uTimerID None)
MMRESULT None winmm.timeSetEvent(UINT uDelay None,UINT uResolution None,LPTIMECALLBACK lpTimeProc None,DWORD_PTR dwUser None,UINT fuEvent None)
MMRESULT None winmm.waveInAddBuffer(HWAVEIN hwi None,LPWAVEHDR pwh None,UINT cbwh None)
MMRESULT None winmm.waveInOpen(LPHWAVEIN phwi None,UINT uDeviceID None,LPCWAVEFORMATEX pwfx None,DWORD_PTR dwCallback None,DWORD_PTR dwCallbackInstance None,DWORD fdwOpen None)
MMRESULT None winmm.waveInReset(HWAVEIN hwi None)
MMRESULT None winmm.waveOutPrepareHeader(HWAVEOUT hwo None,LPWAVEHDR pwh None,UINT cbwh None)
MMRESULT None winmm.waveOutUnprepareHeader(HWAVEOUT hwo None,LPWAVEHDR pwh None,UINT cbwh None)
MSICONDITION None msi.MsiDatabaseIsTablePersistentA(_In_ MSIHANDLE hDatabase,_In_ LPCTSTR szTableName)
MSICONDITION None msi.MsiDatabaseIsTablePersistent(_In_ MSIHANDLE hDatabase,_In_ LPCTSTR szTableName)
MSICONDITION None msi.MsiDatabaseIsTablePersistentW(_In_ MSIHANDLE hDatabase,_In_ LPCTSTR szTableName)
MSICONDITION None msi.MsiEvaluateConditionA(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szCondition)
MSICONDITION None msi.MsiEvaluateCondition(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szCondition)
MSICONDITION None msi.MsiEvaluateConditionW(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szCondition)
MSIDBERROR None msi.MsiViewGetErrorA(_In_ MSIHANDLE hView,_Out_ LPTSTR szColumnNameBuffer,_Inout_ DWORD *pcchBuf)
MSIDBERROR None msi.MsiViewGetError(_In_ MSIHANDLE hView,_Out_ LPTSTR szColumnNameBuffer,_Inout_ DWORD *pcchBuf)
MSIDBERROR None msi.MsiViewGetErrorW(_In_ MSIHANDLE hView,_Out_ LPTSTR szColumnNameBuffer,_Inout_ DWORD *pcchBuf)
MSIDBSTATE None msi.MsiGetDatabaseState(_In_ MSIHANDLE hDatabase)
MSIHANDLE None msi.MsiGetActiveDatabase(_In_ MSIHANDLE hInstall)
MSIHANDLE None msi.MsiGetLastErrorRecord(void None None)
MyDir None None.SubDir1(mapped from VDir1)
NDR_SCONTEXT RPC_ENTRY rpcrt4.NdrContextHandleInitialize(PMIDL_STUB_MESSAGE pStubMsg None,PFORMAT_STRING pFormat None)
NET_API_STATUS NET_API_FUNCTION netapi32.NetDfsAddRootTarget(_In_ LPWSTR pDfsPath,_In_opt_ LPWSTR pTargetPath,_In_ ULONG MajorVersion,_In_opt_ LPWSTR pComment,_In_ ULONG Flags)
NET_API_STATUS NET_API_FUNCTION netapi32.NetDfsGetClientInfo(_In_ LPWSTR DfsEntryPath,_In_opt_ LPWSTR ServerName,_In_opt_ LPWSTR ShareName,_In_ DWORD Level,_Out_ LPBYTE *Buffer)
NET_API_STATUS NET_API_FUNCTION netapi32.NetDfsGetSupportedNamespaceVersion(_In_ DFS_NAMESPACE_VERSION_ORIGIN Origin,_In_ PWSTR pName,_Out_ PDFS_SUPPORTED_NAMESPACE_VERSION_INFO *ppVersionInfo)
NET_API_STATUS NET_API_FUNCTION netapi32.NetDfsRemoveRootTarget(_In_ LPWSTR pDfsPath,_In_opt_ LPWSTR pTargetPath,_In_ ULONG Flags)
NET_API_STATUS NET_API_FUNCTION netapi32.NetDfsSetClientInfo(_In_ LPWSTR DfsEntryPath,_In_opt_ LPWSTR ServerName,_In_opt_ LPWSTR ShareName,_In_ DWORD Level,_In_ LPBYTE Buffer)
NET_API_STATUS None netapi32.NetAddAlternateComputerName(_In_opt_ LPCWSTR Server,_In_ LPCWSTR AlternateName,_In_opt_ LPCWSTR DomainAccount,_In_opt_ LPCWSTR DomainAccountPassword,_In_ ULONG Reserved)
NET_API_STATUS None netapi32.NetAlertRaiseEx(_In_ LPCWSTR AlertEventName,_In_ LPVOID VariableInfo,_In_ DWORD VariableInfoSize,_In_ LPCWSTR ServiceName)
NET_API_STATUS None netapi32.NetAlertRaise(_In_ LPCWSTR AlertEventName,_In_ LPVOID Buffer,_In_ DWORD BufferSize)
NET_API_STATUS None netapi32.NetApiBufferAllocate(_In_ DWORD ByteCount,_Out_ LPVOID *Buffer)
NET_API_STATUS None netapi32.NetApiBufferFree(_In_ LPVOID Buffer)
NET_API_STATUS None netapi32.NetApiBufferReallocate(_In_ LPVOID OldBuffer,_In_ DWORD NewByteCount,_Out_ LPVOID *NewBuffer)
NET_API_STATUS None netapi32.NetApiBufferSize(_In_ LPVOID Buffer,_Out_ LPDWORD ByteCount)
NET_API_STATUS None netapi32.NetConnectionEnum(_In_ LMSTR servername,_In_ LMSTR qualifier,_In_ DWORD level,_Out_ LPBYTE *bufptr,_In_ DWORD prefmaxlen,_Out_ LPDWORD entriesread,_Out_ LPDWORD totalentries,_Inout_ LPDWORD resume_handle)
NET_API_STATUS None netapi32.NetDfsAddFtRoot(_In_ LPWSTR ServerName,_In_ LPWSTR RootShare,_In_ LPWSTR FtDfsName,_In_opt_ LPWSTR Comment,_In_ DWORD Flags)
NET_API_STATUS None netapi32.NetDfsAdd(_In_ LPWSTR DfsEntryPath,_In_ LPWSTR ServerName,_In_ LPWSTR PathName,_In_opt_ LPWSTR Comment,_In_ DWORD Flags)
NET_API_STATUS None netapi32.NetDfsAddStdRoot(_In_ LPWSTR ServerName,_In_ LPWSTR RootShare,_In_opt_ LPWSTR Comment,_In_ DWORD Flags)
NET_API_STATUS None netapi32.NetDfsEnum(_In_ LPWSTR DfsName,_In_ DWORD Level,_In_ DWORD PrefMaxLen,_Out_ LPBYTE *Buffer,_Out_ LPDWORD EntriesRead,_Inout_ LPDWORD ResumeHandle)
NET_API_STATUS None netapi32.NetDfsGetFtContainerSecurity(_In_ LPWSTR DomainName,_In_ SECURITY_INFORMATION SecurityInformation,_Out_ PSECURITY_DESCRIPTOR *ppSecurityDescriptor,_Out_ LPDWORD lpcbSecurityDescriptor)
NET_API_STATUS None netapi32.NetDfsGetInfo(_In_ LPWSTR DfsEntryPath,_In_opt_ LPWSTR ServerName,_In_opt_ LPWSTR ShareName,_In_ DWORD Level,_Out_ LPBYTE *Buffer)
NET_API_STATUS None netapi32.NetDfsGetSecurity(_In_ LPWSTR DfsEntryPath,_In_ SECURITY_INFORMATION SecurityInformation,_Out_ PSECURITY_DESCRIPTOR *ppSecurityDescriptor,_Out_ LPDWORD lpcbSecurityDescriptor)
NET_API_STATUS None netapi32.NetDfsGetStdContainerSecurity(_In_ LPWSTR MachineName,_In_ SECURITY_INFORMATION SecurityInformation,_Out_ PSECURITY_DESCRIPTOR *ppSecurityDescriptor,_Out_ LPDWORD lpcbSecurityDescriptor)
NET_API_STATUS None netapi32.NetDfsMove(_In_ LPWSTR Path,_In_ LPWSTR NewPath,_In_ ULONG Flags)
NET_API_STATUS None netapi32.NetDfsRemoveFtRoot(_In_ LPWSTR ServerName,_In_ LPWSTR RootShare,_In_ LPWSTR FtDfsName,_Reserved_ DWORD Flags)
NET_API_STATUS None netapi32.NetDfsRemove(_In_ LPWSTR DfsEntryPath,_In_opt_ LPWSTR ServerName,_In_opt_ LPWSTR ShareName)
NET_API_STATUS None netapi32.NetDfsRemoveStdRoot(_In_ LPWSTR ServerName,_In_ LPWSTR RootShare,_In_ DWORD Flags)
NET_API_STATUS None netapi32.NetDfsSetFtContainerSecurity(_In_ LPWSTR DomainName,_In_ SECURITY_INFORMATION SecurityInformation,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor)
NET_API_STATUS None netapi32.NetDfsSetInfo(_In_ LPWSTR DfsEntryPath,_In_opt_ LPWSTR ServerName,_In_opt_ LPWSTR ShareName,_In_ DWORD Level,_In_ LPBYTE Buffer)
NET_API_STATUS None netapi32.NetDfsSetSecurity(_In_ LPWSTR DfsEntryPath,_In_ SECURITY_INFORMATION SecurityInformation,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor)
NET_API_STATUS None netapi32.NetDfsSetStdContainerSecurity(_In_ LPWSTR MachineName,_In_ SECURITY_INFORMATION SecurityInformation,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor)
NET_API_STATUS None netapi32.NetEnumerateComputerNames(_In_opt_ LPCWSTR Server,_In_ NET_COMPUTER_NAME_TYPE NameType,_In_ ULONG Reserved,_Out_ PDWORD EntryCount,_Out_ LPWSTR **ComputerNames)
NET_API_STATUS None netapi32.NetFileClose(_In_ LMSTR servername,_In_ DWORD fileid)
NET_API_STATUS None netapi32.NetFileEnum(_In_ LMSTR servername,_In_ LMSTR basepath,_In_ LMSTR username,_In_ DWORD level,_Out_ LPBYTE *bufptr,_In_ DWORD prefmaxlen,_Out_ LPDWORD entriesread,_Out_ LPDWORD totalentries,_Inout_ PDWORD_PTR resume_handle)
NET_API_STATUS None netapi32.NetFileGetInfo(_In_ LMSTR servername,_In_ DWORD fileid,_In_ DWORD level,_Out_ LPBYTE *bufptr)
NET_API_STATUS None netapi32.NetGetAnyDCName(_In_ LPCWSTR servername,_In_ LPCWSTR domainname,_Out_ LPBYTE *bufptr)
NET_API_STATUS None netapi32.NetGetDCName(_In_ LPCWSTR servername,_In_ LPCWSTR domainname,_Out_ LPBYTE *bufptr)
NET_API_STATUS None netapi32.NetGetDisplayInformationIndex(_In_ LPCWSTR ServerName,_In_ DWORD Level,_In_ LPCWSTR Prefix,_Out_ LPDWORD Index)
NET_API_STATUS None netapi32.NetGetJoinableOUs(_In_ LPCWSTR lpServer,_In_ LPCWSTR lpDomain,_In_ LPCWSTR lpAccount,_In_ LPCWSTR lpPassword,_Out_ DWORD *OUCount,_Out_ LPWSTR **OUs)
NET_API_STATUS None netapi32.NetGetJoinInformation(_In_ LPCWSTR lpServer,_Out_ LPWSTR *lpNameBuffer,_Out_ PNETSETUP_JOIN_STATUS BufferType)
NET_API_STATUS None netapi32.NetGroupAdd(_In_ LPCWSTR servername,_In_ DWORD level,_In_ LPBYTE buf,_Out_ LPDWORD parm_err)
NET_API_STATUS None netapi32.NetGroupAddUser(_In_ LPCWSTR servername,_In_ LPCWSTR GroupName,_In_ LPCWSTR username)
NET_API_STATUS None netapi32.NetGroupDel(_In_ LPCWSTR servername,_In_ LPCWSTR groupname)
NET_API_STATUS None netapi32.NetGroupDelUser(_In_ LPCWSTR servername,_In_ LPCWSTR GroupName,_In_ LPCWSTR Username)
NET_API_STATUS None netapi32.NetGroupEnum(_In_ LPCWSTR servername,_In_ DWORD level,_Out_ LPBYTE *bufptr,_In_ DWORD prefmaxlen,_Out_ LPDWORD entriesread,_Out_ LPDWORD totalentries,_Inout_ PDWORD_PTR resume_handle)
NET_API_STATUS None netapi32.NetGroupGetInfo(_In_ LPCWSTR servername,_In_ LPCWSTR groupname,_In_ DWORD level,_Out_ LPBYTE *bufptr)
NET_API_STATUS None netapi32.NetGroupGetUsers(_In_ LPCWSTR servername,_In_ LPCWSTR groupname,_In_ DWORD level,_Out_ LPBYTE *bufptr,_In_ DWORD prefmaxlen,_Out_ LPDWORD entriesread,_Out_ LPDWORD totalentries,_Inout_ PDWORD_PTR ResumeHandle)
NET_API_STATUS None netapi32.NetGroupSetInfo(_In_ LPCWSTR servername,_In_ LPCWSTR groupname,_In_ DWORD level,_In_ LPBYTE buf,_Out_ LPDWORD parm_err)
NET_API_STATUS None netapi32.NetGroupSetUsers(_In_ LPCWSTR servername,_In_ LPCWSTR groupname,_In_ DWORD level,_In_ LPBYTE buf,_In_ DWORD totalentries)
NET_API_STATUS None netapi32.NetJoinDomain(_In_ LPCWSTR lpServer,_In_ LPCWSTR lpDomain,_In_ LPCWSTR lpAccountOU,_In_ LPCWSTR lpAccount,_In_ LPCWSTR lpPassword,_In_ DWORD fJoinOptions)
NET_API_STATUS None netapi32.NetLocalGroupAdd(_In_ LPCWSTR servername,_In_ DWORD level,_In_ LPBYTE buf,_Out_ LPDWORD parm_err)
NET_API_STATUS None netapi32.NetLocalGroupAddMembers(_In_ LPCWSTR servername,_In_ LPCWSTR groupname,_In_ DWORD level,_In_ LPBYTE buf,_In_ DWORD totalentries)
NET_API_STATUS None netapi32.NetLocalGroupDel(_In_ LPCWSTR servername,_In_ LPCWSTR groupname)
NET_API_STATUS None netapi32.NetLocalGroupDelMembers(_In_ LPCWSTR servername,_In_ LPCWSTR groupname,_In_ DWORD level,_In_ LPBYTE buf,_In_ DWORD totalentries)
NET_API_STATUS None netapi32.NetLocalGroupEnum(_In_ LPCWSTR servername,_In_ DWORD level,_Out_ LPBYTE *bufptr,_In_ DWORD prefmaxlen,_Out_ LPDWORD entriesread,_Out_ LPDWORD totalentries,_Inout_ PDWORD_PTR resumehandle)
NET_API_STATUS None netapi32.NetLocalGroupGetInfo(_In_ LPCWSTR servername,_In_ LPCWSTR groupname,_In_ DWORD level,_Out_ LPBYTE *bufptr)
NET_API_STATUS None netapi32.NetLocalGroupGetMembers(_In_ LPCWSTR servername,_In_ LPCWSTR localgroupname,_In_ DWORD level,_Out_ LPBYTE *bufptr,_In_ DWORD prefmaxlen,_Out_ LPDWORD entriesread,_Out_ LPDWORD totalentries,_Inout_ PDWORD_PTR resumehandle)
NET_API_STATUS None netapi32.NetLocalGroupSetInfo(_In_ LPCWSTR servername,_In_ LPCWSTR groupname,_In_ DWORD level,_In_ LPBYTE buf,_Out_ LPDWORD parm_err)
NET_API_STATUS None netapi32.NetLocalGroupSetMembers(_In_ LPCWSTR servername,_In_ LPCWSTR groupname,_In_ DWORD level,_In_ LPBYTE buf,_In_ DWORD totalentries)
NET_API_STATUS None netapi32.NetMessageBufferSend(_In_ LPCWSTR servername,_In_ LPCWSTR msgname,_In_ LPCWSTR fromname,_In_ LPBYTE buf,_In_ DWORD buflen)
NET_API_STATUS None netapi32.NetMessageNameAdd(_In_ LPCWSTR servername,_In_ LPCWSTR msgname)
NET_API_STATUS None netapi32.NetMessageNameDel(_In_ LPCWSTR servername,_In_ LPCWSTR msgname)
NET_API_STATUS None netapi32.NetMessageNameEnum(_In_ LPCWSTR servername,_In_ DWORD level,_Out_ LPBYTE *bufptr,_In_ DWORD prefmaxlen,_Out_ LPDWORD entriesread,_Out_ LPDWORD totalentries,_Inout_ LPDWORD resume_handle)
NET_API_STATUS None netapi32.NetMessageNameGetInfo(_In_ LPCWSTR servername,_In_ LPCWSTR msgname,_In_ DWORD level,_Out_ LPBYTE *bufptr)
NET_API_STATUS None netapi32.NetProvisionComputerAccount(_In_ LPCWSTR lpDomain,_In_ LPCWSTR lpMachineName,_In_opt_ LPCWSTR lpMachineAccountOU,_In_opt_ LPCWSTR lpDcName,_In_ DWORD dwOptions,_Out_opt_ PBYTE *pProvisionBinData,_Out_opt_ DWORD *pdwProvisionBinDataSize,_Out_opt_ LPWSTR *pProvisionTextData)
NET_API_STATUS None netapi32.NetQueryDisplayInformation(_In_ LPCWSTR ServerName,_In_ DWORD Level,_In_ DWORD Index,_In_ DWORD EntriesRequested,_In_ DWORD PreferredMaximumLength,_Out_ LPDWORD ReturnedEntryCount,_Out_ PVOID *SortedBuffer)
NET_API_STATUS None netapi32.NetRemoteComputerSupports(_In_ LPCWSTR UncServerName,_In_ DWORD OptionsWanted,_Out_ LPDWORD OptionsSupported)
NET_API_STATUS None netapi32.NetRemoteTOD(_In_ LPCWSTR UncServerName,_Out_ LPBYTE *BufferPtr)
NET_API_STATUS None netapi32.NetRemoveAlternateComputerName(_In_opt_ LPCWSTR Server,_In_ LPCWSTR AlternateName,_In_opt_ LPCWSTR DomainAccount,_In_opt_ LPCWSTR DomainAccountPassword,_In_ ULONG Reserved)
NET_API_STATUS None netapi32.NetRenameMachineInDomain(_In_ LPCWSTR lpServer,_In_ LPCWSTR lpNewMachineName,_In_ LPCWSTR lpAccount,_In_ LPCWSTR lpPassword,_In_ DWORD fRenameOptions)
NET_API_STATUS None netapi32.NetRequestOfflineDomainJoin(_In_ BYTE *pProvisionBinData,_In_ DWORD cbProvisionBinDataSize,_In_ DWORD dwOptions,_In_ LPCWSTR lpWindowsPath)
NET_API_STATUS None netapi32.NetScheduleJobAdd(_In_opt_ LPCWSTR Servername,_In_ LPBYTE Buffer,_Out_ LPDWORD JobId)
NET_API_STATUS None netapi32.NetScheduleJobDel(_In_opt_ LPCWSTR Servername,_In_ DWORD MinJobId,_In_ DWORD MaxJobId)
NET_API_STATUS None netapi32.NetScheduleJobEnum(_In_opt_ LPCWSTR Servername,_Out_ LPBYTE *PointerToBuffer,_In_ DWORD PreferredMaximumLength,_Out_ LPDWORD EntriesRead,_Out_ LPDWORD TotalEntries,_Inout_ LPDWORD ResumeHandle)
NET_API_STATUS None netapi32.NetScheduleJobGetInfo(_In_opt_ LPCWSTR Servername,_In_ DWORD JobId,_Out_ LPBYTE *PointerToBuffer)
NET_API_STATUS None netapi32.NetServerComputerNameAdd(_In_ LPWSTR ServerName,_In_ LPWSTR EmulatedDomainName,_In_ LPWSTR EmulatedServerName)
NET_API_STATUS None netapi32.NetServerComputerNameDel(_In_ LPWSTR ServerName,_In_ LPWSTR EmulatedServerName)
NET_API_STATUS None netapi32.NetServerDiskEnum(_In_ LPWSTR servername,_In_ DWORD level,_Out_ LPBYTE *bufptr,_In_ DWORD prefmaxlen,_Out_ LPDWORD entriesread,_Out_ LPDWORD totalentries,_Inout_ LPDWORD resume_handle)
NET_API_STATUS None netapi32.NetServerEnum(_In_opt_ LPCWSTR servername,_In_ DWORD level,_Out_ LPBYTE *bufptr,_In_ DWORD prefmaxlen,_Out_ LPDWORD entriesread,_Out_ LPDWORD totalentries,_In_ DWORD servertype,_In_opt_ LPCWSTR domain,_Inout_opt_ LPDWORD resume_handle)
NET_API_STATUS None netapi32.NetServerGetInfo(_In_ LPWSTR servername,_In_ DWORD level,_Out_ LPBYTE *bufptr)
NET_API_STATUS None netapi32.NetServerSetInfo(_In_ LPWSTR servername,_In_ DWORD level,_In_ LPBYTE buf,_Out_ LPDWORD ParmError)
NET_API_STATUS None netapi32.NetServerTransportAddEx(_In_ LPWSTR servername,_In_ DWORD level,_In_ LPBYTE bufptr)
NET_API_STATUS None netapi32.NetServerTransportAdd(_In_ LPWSTR servername,_In_ DWORD level,_In_ LPBYTE bufptr)
NET_API_STATUS None netapi32.NetServerTransportDel(_In_ LPWSTR servername,_In_ DWORD level,_In_ LPBYTE bufptr)
NET_API_STATUS None netapi32.NetServerTransportEnum(_In_ LPWSTR servername,_In_ DWORD level,_Out_ LPBYTE *bufptr,_In_ DWORD prefmaxlen,_Out_ LPDWORD entriesread,_Out_ LPDWORD totalentries,_Inout_ LPDWORD resumehandle)
NET_API_STATUS None netapi32.NetSessionDel(_In_ LPWSTR servername,_In_ LPWSTR UncClientName,_In_ LPWSTR username)
NET_API_STATUS None netapi32.NetSessionEnum(_In_ LPWSTR servername,_In_ LPWSTR UncClientName,_In_ LPWSTR username,_In_ DWORD level,_Out_ LPBYTE *bufptr,_In_ DWORD prefmaxlen,_Out_ LPDWORD entriesread,_Out_ LPDWORD totalentries,_Inout_ LPDWORD resume_handle)
NET_API_STATUS None netapi32.NetSessionGetInfo(_In_ LPWSTR servername,_In_ LPWSTR UncClientName,_In_ LPWSTR username,_In_ DWORD level,_Out_ LPBYTE *bufptr)
NET_API_STATUS None netapi32.NetSetPrimaryComputerName(_In_opt_ LPCWSTR Server,_In_ LPCWSTR PrimaryName,_In_opt_ LPCWSTR DomainAccount,_In_opt_ LPCWSTR DomainAccountPassword,_In_ ULONG Reserved)
NET_API_STATUS None netapi32.NetShareAdd(_In_ LPWSTR servername,_In_ DWORD level,_In_ LPBYTE buf,_Out_ LPDWORD parm_err)
NET_API_STATUS None netapi32.NetShareCheck(_In_ LPWSTR servername,_In_ LPWSTR device,_Out_ LPDWORD type)
NET_API_STATUS None netapi32.NetShareDel(_In_ LMSTR servername,_In_ LMSTR netname,DWORD reserved None)
NET_API_STATUS None netapi32.NetShareEnum(_In_ LPWSTR servername,_In_ DWORD level,_Out_ LPBYTE *bufptr,_In_ DWORD prefmaxlen,_Out_ LPDWORD entriesread,_Out_ LPDWORD totalentries,_Inout_ LPDWORD resume_handle)
NET_API_STATUS None netapi32.NetShareGetInfo(_In_ LPWSTR servername,_In_ LPWSTR netname,_In_ DWORD level,_Out_ LPBYTE *bufptr)
NET_API_STATUS None netapi32.NetShareSetInfo(_In_ LPWSTR servername,_In_ LPWSTR netname,_In_ DWORD level,_In_ LPBYTE buf,_Out_ LPDWORD parm_err)
NET_API_STATUS None netapi32.NetStatisticsGet(_In_ LPWSTR server,_In_ LPWSTR service,_In_ DWORD level,_In_ DWORD options,_Out_ LPBYTE *bufptr)
NET_API_STATUS None netapi32.NetUnjoinDomain(_In_ LPCWSTR lpServer,_In_ LPCWSTR lpAccount,_In_ LPCWSTR lpPassword,_In_ DWORD fUnjoinOptions)
NET_API_STATUS None netapi32.NetUseAdd(_In_ LMSTR UncServerName,_In_ DWORD Level,_In_ LPBYTE Buf,_Out_ LPDWORD ParmError)
NET_API_STATUS None netapi32.NetUseDel(_In_ LMSTR UncServerName,_In_ LMSTR UseName,_In_ DWORD ForceCond)
NET_API_STATUS None netapi32.NetUseEnum(_In_ LMSTR UncServerName,_In_ DWORD Level,_Out_ LPBYTE *BufPtr,_In_ DWORD PreferedMaximumSize,_Out_ LPDWORD EntriesRead,_Out_ LPDWORD TotalEntries,_Inout_ LPDWORD ResumeHandle)
NET_API_STATUS None netapi32.NetUseGetInfo(_In_ LMSTR UncServerName,_In_ LMSTR UseName,_In_ DWORD Level,_Out_ LPBYTE *BufPtr)
NET_API_STATUS None netapi32.NetUserAdd(_In_ LMSTR servername,_In_ DWORD level,_In_ LPBYTE buf,_Out_ LPDWORD parm_err)
NET_API_STATUS None netapi32.NetUserChangePassword(_In_ LPCWSTR domainname,_In_ LPCWSTR username,_In_ LPCWSTR oldpassword,_In_ LPCWSTR newpassword)
NET_API_STATUS None netapi32.NetUserDel(_In_ LPCWSTR servername,_In_ LPCWSTR username)
NET_API_STATUS None netapi32.NetUserEnum(_In_ LPCWSTR servername,_In_ DWORD level,_In_ DWORD filter,_Out_ LPBYTE *bufptr,_In_ DWORD prefmaxlen,_Out_ LPDWORD entriesread,_Out_ LPDWORD totalentries,_Inout_ LPDWORD resume_handle)
NET_API_STATUS None netapi32.NetUserGetGroups(_In_ LPCWSTR servername,_In_ LPCWSTR username,_In_ DWORD level,_Out_ LPBYTE *bufptr,_In_ DWORD prefmaxlen,_Out_ LPDWORD entriesread,_Out_ LPDWORD totalentries)
NET_API_STATUS None netapi32.NetUserGetInfo(_In_ LPCWSTR servername,_In_ LPCWSTR username,_In_ DWORD level,_Out_ LPBYTE *bufptr)
NET_API_STATUS None netapi32.NetUserGetLocalGroups(_In_ LPCWSTR servername,_In_ LPCWSTR username,_In_ DWORD level,_In_ DWORD flags,_Out_ LPBYTE *bufptr,_In_ DWORD prefmaxlen,_Out_ LPDWORD entriesread,_Out_ LPDWORD totalentries)
NET_API_STATUS None netapi32.NetUserModalsGet(_In_opt_ LPCWSTR servername,_In_ DWORD level,_Out_ LPBYTE *bufptr)
NET_API_STATUS None netapi32.NetUserModalsSet(_In_ LPCWSTR servername,_In_ DWORD level,_In_ LPBYTE buf,_Out_ LPDWORD parm_err)
NET_API_STATUS None netapi32.NetUserSetGroups(_In_ LPCWSTR servername,_In_ LPCWSTR username,_In_ DWORD level,_In_ LPBYTE buf,_In_ DWORD num_entries)
NET_API_STATUS None netapi32.NetUserSetInfo(_In_ LPCWSTR servername,_In_ LPCWSTR username,_In_ DWORD level,_In_ LPBYTE buf,_Out_ LPDWORD parm_err)
NET_API_STATUS None netapi32.NetValidateName(_In_ LPCWSTR lpServer,_In_ LPCWSTR lpName,_In_ LPCWSTR lpAccount,_In_ LPCWSTR lpPassword,_In_ NETSETUP_NAME_TYPE NameType)
NET_API_STATUS None netapi32.NetValidatePasswordPolicyFree(_In_ LPVOID *OutputArg)
NET_API_STATUS None netapi32.NetValidatePasswordPolicy(_In_ LPCWSTR ServerName,_In_ LPVOID Qualifier,_In_ NET_VALIDATE_PASSWORD_TYPE ValidationType,_In_ LPVOID InputArg,_Out_ LPVOID OutputArg)
NET_API_STATUS None netapi32.NetWkstaGetInfo(_In_ LPWSTR servername,_In_ DWORD level,_Out_ LPBYTE *bufptr)
NET_API_STATUS None netapi32.NetWkstaSetInfo(_In_ LPWSTR servername,_In_ DWORD level,_In_ LPBYTE buffer,_Out_ LPDWORD parm_err)
NET_API_STATUS None netapi32.NetWkstaTransportEnum(_In_ LPWSTR servername,_In_ DWORD level,_Out_ LPBYTE *bufptr,_In_ DWORD prefmaxlen,_Out_ LPDWORD entriesread,_Out_ LPDWORD totalentries,_Inout_ LPDWORD resumehandle)
NET_API_STATUS None netapi32.NetWkstaUserEnum(_In_ LPWSTR servername,_In_ DWORD level,_Out_ LPBYTE *bufptr,_In_ DWORD prefmaxlen,_Out_ LPDWORD entriesread,_Out_ LPDWORD totalentries,_Inout_ LPDWORD resumehandle)
NET_API_STATUS None netapi32.NetWkstaUserGetInfo(LPWSTR reserved None,_In_ DWORD level,_Out_ LPBYTE *bufptr)
NET_API_STATUS None netapi32.NetWkstaUserSetInfo(LPWSTR reserved None,_In_ DWORD level,_In_ LPBYTE buf,_Out_ LPDWORD parm_err)
NET_API_STATUS WINAPI netapi32.NetCreateProvisioningPackage(_In_ PNETSETUP_PROVISIONING_PARAMS pProvisioningParams,_Out_opt_ PBYTE *pPackageBinData,_Out_opt_ DWORD *pdwPackageBinDataSize,_Out_opt_ LPWSTR *pPackageTextData)
NET_API_STATUS WINAPI netapi32.NetRequestProvisioningPackageInstall(_In_ BYTE *pPackageBinData,_In_ DWORD dwPackageBinDataSize,_In_ DWORD dwProvisionOptions,_In_ LPCWSTR lpWindowsPath,_Reserved_ PVOID pvReserved)
NET_API_STATUS WINAPI netapi32.NetShareDelEx(_In_ LMSTR servername,_In_ DWORD level,_In_ LPBYTE buf)
NET_IFINDEX WINAPI iphlpapi.if_nametoindex(_In_ PCSTR InterfaceName)
NETIOAPI_API None iphlpapi.CancelMibChangeNotify2(_In_ HANDLE NotificationHandle)
NETIOAPI_API None iphlpapi.FlushIpNetTable2(_In_ ADDRESS_FAMILY Family,_In_ NET_IFINDEX InterfaceIndex)
NETIOAPI_API None iphlpapi.FlushIpPathTable(_In_ ADDRESS_FAMILY Family)
NETIOAPI_API None iphlpapi.GetAnycastIpAddressEntry(_Inout_ PMIB_ANYCASTIPADDRESS_ROW Row)
NETIOAPI_API None iphlpapi.GetAnycastIpAddressTable(_In_ ADDRESS_FAMILY Family,_Out_ PMIB_ANYCASTIPADDRESS_TABLE *Table)
NETIOAPI_API None iphlpapi.GetDefaultCompartmentId(void None None)
NETIOAPI_API None iphlpapi.GetIfEntry2Ex(_In_ MIB_IF_ENTRY_LEVEL Level,_Inout_ PMIB_IF_ROW2 Row)
NETIOAPI_API None iphlpapi.GetIfEntry2(PMIB_IF_ROW2 Row None)
NETIOAPI_API None iphlpapi.GetIfStackTable(_Out_ PMIB_IFSTACK_TABLE *Table)
NETIOAPI_API None iphlpapi.GetIfTable2Ex(_In_ MIB_IF_TABLE_LEVEL Level,_Out_ PMIB_IF_TABLE2 *Table)
NETIOAPI_API None iphlpapi.GetIfTable2(_Out_ PMIB_IF_TABLE2 *Table)
NETIOAPI_API None iphlpapi.GetInvertedIfStackTable(_Out_ PMIB_INVERTEDIFSTACK_TABLE *Table)
NETIOAPI_API None iphlpapi.GetIpForwardEntry2(_Inout_ PMIB_IPFORWARD_ROW2 Row)
NETIOAPI_API None iphlpapi.GetIpForwardTable2(_In_ ADDRESS_FAMILY Family,_Out_ PMIB_IPFORWARD_TABLE2 *Table)
NETIOAPI_API None iphlpapi.GetIpInterfaceEntry(_Inout_ PMIB_IPINTERFACE_ROW Row)
NETIOAPI_API None iphlpapi.GetIpInterfaceTable(_In_ ADDRESS_FAMILY Family,_Out_ PMIB_IPINTERFACE_TABLE *Table)
NETIOAPI_API None iphlpapi.GetIpNetEntry2(_Inout_ PMIB_IPNET_ROW2 Row)
NETIOAPI_API None iphlpapi.GetIpNetTable2(_In_ ADDRESS_FAMILY Family,_Out_ PMIB_IPNET_TABLE2 *Table)
NETIOAPI_API None iphlpapi.GetIpPathEntry(_Inout_ PMIB_IPPATH_ROW Row)
NETIOAPI_API None iphlpapi.GetIpPathTable(_In_ ADDRESS_FAMILY Family,_Out_ PMIB_IPPATH_TABLE *Table)
NETIOAPI_API None iphlpapi.GetMulticastIpAddressEntry(_Inout_ PMIB_MULTICASTIPADDRESS_ROW Row)
NETIOAPI_API None iphlpapi.GetMulticastIpAddressTable(_In_ ADDRESS_FAMILY Family,_Out_ PMIB_MULTICASTIPADDRESS_TABLE *Table)
NETIOAPI_API None iphlpapi.GetTeredoPort(_Out_ USHORT *Port)
NETIOAPI_API None iphlpapi.GetUnicastIpAddressEntry(_Inout_ PMIB_UNICASTIPADDRESS_ROW Row)
NETIOAPI_API None iphlpapi.GetUnicastIpAddressTable(_In_ ADDRESS_FAMILY Family,_Out_ PMIB_UNICASTIPADDRESS_TABLE *Table)
NETIOAPI_API None iphlpapi.NotifyIpInterfaceChange(_In_ ADDRESS_FAMILY Family,_In_ PIPINTERFACE_CHANGE_CALLBACK Callback,_In_ PVOID CallerContext,_In_ BOOLEAN InitialNotification,_Inout_ HANDLE *NotificationHandle)
NETIOAPI_API None iphlpapi.NotifyRouteChange2(_In_ ADDRESS_FAMILY Family,_In_ PIPFORWARD_CHANGE_CALLBACK Callback,_In_ PVOID CallerContext,_In_ BOOLEAN InitialNotification,_Inout_ HANDLE *NotificationHandle)
NETIOAPI_API None iphlpapi.NotifyStableUnicastIpAddressTable(_In_ ADDRESS_FAMILY Family,_Inout_ PMIB_UNICASTIPADDRESS_TABLE *Table,_In_ PSTABLE_UNICAST_IPADDRESS_TABLE_CALLBACK CallerCallback,_In_ PVOID CallerContext,_Inout_ HANDLE *NotificationHandle)
NETIOAPI_API None iphlpapi.NotifyTeredoPortChange(_In_ PTEREDO_PORT_CHANGE_CALLBACK Callback,_In_ PVOID CallerContext,_In_ BOOLEAN InitialNotification,_Inout_ HANDLE *NotificationHandle)
NETIOAPI_API None iphlpapi.NotifyUnicastIpAddressChange(_In_ ADDRESS_FAMILY Family,_In_ PUNICAST_IPADDRESS_CHANGE_CALLBACK Callback,_In_ PVOID CallerContext,_In_ BOOLEAN InitialNotification,_Inout_ HANDLE *NotificationHandle)
NETIOAPI_API None iphlpapi.SetIpInterfaceEntry(_Inout_ PMIB_IPINTERFACE_ROW Row)
NETIOAPI_API None iphlpapi.SetIpNetEntry2(_Inout_ PMIB_IPNET_ROW2 Row)
NETIOAPI_API WINAPI iphlpapi.GetIpNetworkConnectionBandwidthEstimates(_In_ NET_IFINDEX InterfaceIndex,_In_ ADDRESS_FAMILY AddressFamily,_Out_ PMIB_IP_NETWORK_CONNECTION_BANDWIDTH_ESTIMATES BandwidthEstimates)
NETIO_STATUS WINAPI iphlpapi.ConvertInterfaceIndexToLuid(_In_ NET_IFINDEX InterfaceIndex,_Out_ PNET_LUID InterfaceLuid)
NETIO_STATUS WINAPI iphlpapi.ConvertIpv4MaskToLength(_In_ ULONG Mask,_Out_ PUINT8 MaskLength)
NETIO_STATUS WINAPI iphlpapi.ConvertLengthToIpv4Mask(_In_ ULONG MaskLength,_Out_ PULONG Mask)
no_namespace None None.rename("EOF" None None,"ADOEOF" None None)
not running shell32.STDMETHOD(CancelAsyncSearch None None)
Now None None.TraceInformation(tempStr None None)
NTSTATUS FASTCALL None.IoSetPartitionInformation(_In_ PDEVICE_OBJECT DeviceObject,_In_ ULONG SectorSize,_In_ ULONG PartitionNumber,_In_ ULONG PartitionType)
NTSTATUS None advapi32.LsaAddAccountRights(_In_ LSA_HANDLE PolicyHandle,_In_ PSID AccountSid,_In_ PLSA_UNICODE_STRING UserRights,_In_ ULONG CountOfRights)
NTSTATUS None advapi32.LsaClose(_In_ LSA_HANDLE ObjectHandle)
NTSTATUS None advapi32.LsaCreateTrustedDomainEx(_In_ LSA_HANDLE PolicyHandle,_In_ PTRUSTED_DOMAIN_INFORMATION_EX TrustedDomainInformation,_In_ PTRUSTED_DOMAIN_AUTH_INFORMATION AuthenticationInformation,_In_ ACCESS_MASK DesiredAccess,_Out_ PLSA_HANDLE TrustedDomainHandle)
NTSTATUS None advapi32.LsaDeleteTrustedDomain(_In_ LSA_HANDLE PolicyHandle,_In_ PSID TrustedDomainSid)
NTSTATUS None advapi32.LsaEnumerateAccountRights(_In_ LSA_HANDLE PolicyHandle,_In_ PSID AccountSid,_Out_ PLSA_UNICODE_STRING *UserRights,_Out_ PULONG CountOfRights)
NTSTATUS None advapi32.LsaEnumerateAccountsWithUserRight(_In_ LSA_HANDLE PolicyHandle,_In_ PLSA_UNICODE_STRING UserRights,_Out_ PVOID *EnumerationBuffer,_Out_ PULONG CountReturned)
NTSTATUS None advapi32.LsaEnumerateTrustedDomainsEx(_In_ LSA_HANDLE PolicyHandle,_In_ PLSA_ENUMERATION_HANDLE EnumerationContext,_Out_ PVOID *Buffer,_In_ ULONG PreferredMaximumLength,_Out_ PULONG CountReturned)
NTSTATUS None advapi32.LsaEnumerateTrustedDomains(_In_ LSA_HANDLE PolicyHandle,_In_ PLSA_ENUMERATION_HANDLE EnumerationContext,_Out_ PVOID *Buffer,_In_ ULONG PreferedMaximumLength,_Out_ PULONG CountReturned)
NTSTATUS None advapi32.LsaFreeMemory(_In_ PVOID Buffer)
NTSTATUS None advapi32.LsaLookupNames2(_In_ LSA_HANDLE PolicyHandle,_In_ ULONG Flags,_In_ ULONG Count,_In_ PLSA_UNICODE_STRING Names,_Out_ PLSA_REFERENCED_DOMAIN_LIST *ReferencedDomains,_Out_ PLSA_TRANSLATED_SID2 *Sids)
NTSTATUS None advapi32.LsaLookupNames(_In_ LSA_HANDLE PolicyHandle,_In_ ULONG Count,_In_ PLSA_UNICODE_STRING Names,_Out_ PLSA_REFERENCED_DOMAIN_LIST *ReferencedDomains,_Out_ PLSA_TRANSLATED_SID *Sids)
NTSTATUS None advapi32.LsaLookupSids2(_In_ LSA_HANDLE PolicyHandle,_In_ ULONG LookupOptions,_In_ ULONG Count,_In_ PSID *Sids,_Out_ PLSA_REFERENCED_DOMAIN_LIST *ReferencedDomains,_Out_ PLSA_TRANSLATED_NAME *Names)
NTSTATUS None advapi32.LsaLookupSids(_In_ LSA_HANDLE PolicyHandle,_In_ ULONG Count,_In_ PSID *Sids,_Out_ PLSA_REFERENCED_DOMAIN_LIST *ReferencedDomains,_Out_ PLSA_TRANSLATED_NAME *Names)
NTSTATUS None advapi32.LsaOpenPolicy(_In_ PLSA_UNICODE_STRING SystemName,_In_ PLSA_OBJECT_ATTRIBUTES ObjectAttributes,_In_ ACCESS_MASK DesiredAccess,_Inout_ PLSA_HANDLE PolicyHandle)
NTSTATUS None advapi32.LsaOpenTrustedDomainByName(_In_ LSA_HANDLE PolicyHandle,_In_ PLSA_UNICODE_STRING TrustedDomainName,_In_ ACCESS_MASK DesiredAccess,_Out_ PLSA_HANDLE TrustedDomainHandle)
NTSTATUS None advapi32.LsaQueryInformationPolicy(_In_ LSA_HANDLE PolicyHandle,_In_ POLICY_INFORMATION_CLASS InformationClass,_Out_ PVOID *Buffer)
NTSTATUS None advapi32.LsaQueryTrustedDomainInfoByName(_In_ LSA_HANDLE PolicyHandle,_In_ PLSA_UNICODE_STRING TrustedDomainName,_In_ TRUSTED_INFORMATION_CLASS InformationClass,_Out_ PVOID *Buffer)
NTSTATUS None advapi32.LsaQueryTrustedDomainInfo(_In_ LSA_HANDLE PolicyHandle,_In_ PSID TrustedDomainSid,_In_ TRUSTED_INFORMATION_CLASS InformationClass,_Out_ PVOID *Buffer)
NTSTATUS None advapi32.LsaRemoveAccountRights(_In_ LSA_HANDLE PolicyHandle,_In_ PSID AccountSid,_In_ BOOLEAN AllRights,_In_ PLSA_UNICODE_STRING UserRights,_In_ ULONG CountOfRights)
NTSTATUS None advapi32.LsaRetrievePrivateData(_In_ LSA_HANDLE PolicyHandle,_In_ PLSA_UNICODE_STRING KeyName,_Out_ PLSA_UNICODE_STRING *PrivateData)
NTSTATUS None advapi32.LsaSetInformationPolicy(_In_ LSA_HANDLE PolicyHandle,_In_ POLICY_INFORMATION_CLASS InformationClass,_In_ PVOID Buffer)
NTSTATUS None advapi32.LsaSetTrustedDomainInfoByName(_In_ LSA_HANDLE PolicyHandle,_In_ PLSA_UNICODE_STRING TrustedDomainName,_In_ TRUSTED_INFORMATION_CLASS InformationClass,_In_ PVOID Buffer)
NTSTATUS None advapi32.LsaSetTrustedDomainInformation(_In_ LSA_HANDLE PolicyHandle,_In_ PSID TrustedDomainSid,_In_ TRUSTED_INFORMATION_CLASS InformationClass,_In_ PVOID Buffer)
NTSTATUS None advapi32.LsaStorePrivateData(_In_ LSA_HANDLE PolicyHandle,_In_ PLSA_UNICODE_STRING KeyName,_In_ PLSA_UNICODE_STRING PrivateData)
NTSTATUS None advapi32.RtlDecryptMemory(_Inout_ PVOID Memory,_In_ ULONG MemoryLength,_In_ ULONG OptionFlags)
NTSTATUS None advapi32.RtlEncryptMemory(_Inout_ PVOID Memory,_In_ ULONG MemoryLength,_In_ ULONG OptionFlags)
NTSTATUS None cscapi.CscSearchApiGetInterface(_In_ ULONG Version,_In_ ULONG Cookie,_Out_ CCscSearchApiInterface **Interface)
NTSTATUS None None.AddCredential(_In_ PLUID LogonId,_In_ ULONG AuthenticationPackage,_In_ PLSA_STRING PrimaryKeyValue,_In_ PLSA_STRING Credentials)
NTSTATUS None None.AllocateAdapterChannelEx(_In_ PDMA_ADAPTER DmaAdapter,_In_ PDEVICE_OBJECT DeviceObject,_In_ PVOID DmaTransferContext,_In_ ULONG NumberOfMapRegisters,_In_ ULONG Flags,_In_opt_ PDRIVER_CONTROL ExecutionRoutine,_In_opt_ PVOID ExecutionContext,_Out_opt_ PVOID *MapRegisterBase)
NTSTATUS None None.AllocateClientBuffer(_In_ PLSA_CLIENT_REQUEST ClientRequest,_In_ ULONG LengthRequired,_Out_ PVOID *ClientBaseAddress)
NTSTATUS None None.AuditAccountLogon(_In_ ULONG AuditId,_In_ BOOLEAN Success,_In_ PUNICODE_STRING Source,_In_ PUNICODE_STRING ClientName,_In_ PUNICODE_STRING MappedName,_In_ NTSTATUS Status)
NTSTATUS None None.BdaValidateNodeProperty(_In_ PIRP Irp,_In_ PKSPROPERTY pKSProperty)
NTSTATUS None None.BuildMdlFromScatterGatherList(_In_ PADAPTER_OBJECT DmaAdapter,_In_ PSCATTER_GATHER_LIST ScatterGather,_In_ PMDL OriginalMdl,_Out_ PMDL *TargetMdl)
NTSTATUS None None.BuildScatterGatherListEx(_In_ PDMA_ADAPTER DmaAdapter,_In_ PDEVICE_OBJECT DeviceObject,_In_ PVOID DmaTransferContext,_In_ PMDL Mdl,_In_ ULONGLONG Offset,_In_ ULONG Length,_In_ ULONG Flags,_In_opt_ PDRIVER_LIST_CONTROL ExecutionRoutine,_In_opt_ PVOID Context,_In_ BOOLEAN WriteToDevice,_In_ PVOID ScatterGatherBuffer,_In_ ULONG ScatterGatherBufferLength,_In_opt_ PDMA_COMPLETION_ROUTINE DmaCompletionRoutine,_In_opt_ PVOID CompletionContext,_Out_opt_ PSCATTER_GATHER_LIST *ScatterGatherList)
NTSTATUS None None.CalculateScatterGatherList(_In_ PDMA_ADAPTER DmaAdapter,_In_opt_ PMDL Mdl,_In_ PVOID CurrentVa,_In_ ULONG Length,_Out_ PULONG ScatterGatherListSize,_Out_opt_ PULONG NumberOfMapRegisters)
NTSTATUS None None.CallPackageEx(_In_ PUNICODE_STRING AuthenticationPackage,_In_ PVOID ClientBufferBase,_In_ PVOID ProtocolSubmitBuffer,_In_ ULONG SubmitBufferLength,_Out_ PVOID *ProtocolReturnBuffer,_Out_ PULONG ReturnBufferLength,_Out_ PNTSTATUS ProtocolStatus)
NTSTATUS None None.CallPackage(_In_ PUNICODE_STRING AuthenticationPackage,_In_ PVOID ProtocolSubmitBuffer,_In_ ULONG SubmitBufferLength,_Out_ PVOID *ProtocolReturnBuffer,_Out_ PULONG ReturnBufferLength,_Out_ PNTSTATUS ProtocolStatus)
NTSTATUS None None.CallPackagePassthrough(_In_ PUNICODE_STRING AuthenticationPackage,_In_ PVOID ClientBufferBase,_In_ PVOID ProtocolSubmitBuffer,_In_ ULONG SubmitBufferLength,_Out_ PVOID *ProtocolReturnBuffer,_Out_ PULONG ReturnBufferLength,_Out_ PNTSTATUS ProtocolStatus)
NTSTATUS None None.CancelNotification(_In_ HANDLE NotifyHandle)
NTSTATUS None None.ClientCallback(_In_ PCHAR Callback,_In_ ULONG_PTR Argument1,_In_ ULONG_PTR Argument2,_In_ PSecBuffer Input,_Out_ PSecBuffer Output)
NTSTATUS None None.CloseSamUser(_In_ PVOID UserHandle)
NTSTATUS None None.CmRegisterCallbackEx(_In_ PEX_CALLBACK_FUNCTION Function,_In_ PCUNICODE_STRING Altitude,_In_ PVOID Driver,_In_opt_ PVOID Context,_Out_ PLARGE_INTEGER Cookie,_Reserved_ PVOID Reserved)
NTSTATUS None None.CmRegisterCallback(_In_ PEX_CALLBACK_FUNCTION Function,_In_opt_ PVOID Context,_Out_ PLARGE_INTEGER Cookie)
NTSTATUS None None.CmSetCallbackObjectContext(_Inout_ PVOID Object,_In_ PLARGE_INTEGER Cookie,_In_ PVOID NewContext,_Out_opt_ PVOID *OldContext)
NTSTATUS None None.CmUnRegisterCallback(_In_ LARGE_INTEGER Cookie)
NTSTATUS None None.Controller_EvtControllerQueryUsbCapability(WDFDEVICE UdeWdfDevice None,PGUID CapabilityType None,ULONG OutputBufferLength None,PVOID OutputBuffer None,PULONG ResultLength None)
NTSTATUS None None.ConvertAuthDataToToken(_In_ PVOID UserAuthData,_In_ ULONG UserAuthDataSize,_In_ SECURITY_IMPERSONATION_LEVEL ImpersonationLevel,_In_ PTOKEN_SOURCE TokenSource,_In_ SECURITY_LOGON_TYPE LogonType,_In_ PUNICODE_STRING AuthorityName,_Out_ PHANDLE Token,_Out_ PLUID LogonId,_Out_ PUNICODE_STRING AccountName,_Out_ PNTSTATUS SubStatus)
NTSTATUS None None.CopyFromClientBuffer(_In_ PLSA_CLIENT_REQUEST ClientRequest,_In_ ULONG Length,_In_ PVOID BufferToCopy,_In_ PVOID ClientBaseAddress)
NTSTATUS None None.CopyToClientBuffer(_In_ PLSA_CLIENT_REQUEST ClientRequest,_In_ ULONG Length,_In_ PVOID ClientBaseAddress,_In_ PVOID BufferToCopy)
NTSTATUS None None.CrackSingleName(_In_ ULONG FormatOffered,_In_ BOOLEAN PerformAtGC,_In_ PUNICODE_STRING NameInput,_In_opt_ PUNICODE_STRING Prefix,_In_ ULONG RequestedFormat,_Out_ PUNICODE_STRING CrackedName,_Out_ PUNICODE_STRING DnsDomainName,_Out_ PULONG SubStatus)
NTSTATUS None None.CreateLogonSession(_In_ PLUID LogonId)
NTSTATUS None None.CreateToken(_In_ PLUID LogonId,_In_ PTOKEN_SOURCE TokenSource,_In_ SECURITY_LOGON_TYPE LogonType,_In_ SECURITY_IMPERSONATION_LEVEL ImpersonationLevel,_In_ LSA_TOKEN_INFORMATION_TYPE TokenInformationType,_In_ PVOID TokenInformation,_In_ PTOKEN_GROUPS TokenGroups,_In_ PUNICODE_STRING AccountName,_In_ PUNICODE_STRING AuthorityName,_In_ PUNICODE_STRING Workstation,_In_ PUNICODE_STRING ProfilePath,_Out_ PHANDLE Token,_Out_ PNTSTATUS SubStatus)
NTSTATUS None None.CrossVolumeCreate(_In_ PUNICODE_STRING FileName,_In_ PFLT_FILTER Filter,_In_ PFLT_INSTANCE Instance,_Inout_ PIO_STATUS_BLOCK IoStatus,_Out_ PHANDLE Handle,_Outptr_ PFILE_OBJECT *FileObject)
NTSTATUS None None.DeleteCredential(_In_ PLUID LogonId,_In_ ULONG AuthenticationPackage,_In_ PLSA_STRING PrimaryKeyValue)
NTSTATUS None None.DeleteLogonSession(_In_ PLUID LogonId)
NTSTATUS None None.DispatchRequest(__in PDEVICE_REQUEST DeviceRequest)
NTSTATUS None None.DriverCloseResources(_In_ PDRIVER_CONTEXT Context)
NTSTATUS None None.DriverEntry(_In_ PDRIVER_OBJECT DriverObject,_In_ PUNICODE_STRING RegistryPath)
NTSTATUS None None.DrmForwardContentToInterface(_In_ ULONG ContentId,_In_ PUNKNOWN pUnknown,_In_ ULONG NumMethods)
NTSTATUS None None.DuplicateHandle(_In_ HANDLE SourceHandle,_Out_ PHANDLE DestinationHandle)
NTSTATUS None None.ExCreateCallback(_Out_ PCALLBACK_OBJECT *CallbackObject,_In_ POBJECT_ATTRIBUTES ObjectAttributes,_In_ BOOLEAN Create,_In_ BOOLEAN AllowMultipleCallbacks)
NTSTATUS None None.ExDeleteResourceLite(_Inout_ PERESOURCE Resource)
NTSTATUS None None.ExInitializeResourceLite(_Out_ PERESOURCE Resource)
NTSTATUS None None.ExReinitializeResourceLite(_Inout_ PERESOURCE Resource)
NTSTATUS None None.ExUuidCreate(_Out_ UUID *Uuid)
NTSTATUS None None.FltAllocateCallbackData(_In_ PFLT_INSTANCE Instance,_In_opt_ PFILE_OBJECT FileObject,_Out_ PFLT_CALLBACK_DATA *RetNewCallbackData)
NTSTATUS None None.FltAllocateExtraCreateParameterFromLookasideList(_In_ PFLT_FILTER Filter,_In_ LPCGUID EcpType,_In_ ULONG SizeOfContext,_In_ FSRTL_ALLOCATE_ECP_FLAGS Flags,_In_opt_ PFSRTL_EXTRA_CREATE_PARAMETER_CLEANUP_CALLBACK CleanupCallback,_Inout_ PVOID LookasideList,_Out_ PVOID *EcpContext)
NTSTATUS None None.FltAllocateExtraCreateParameter(_In_ PFLT_FILTER Filter,_In_ LPCGUID EcpType,_In_ ULONG SizeOfContext,_In_ FSRTL_ALLOCATE_ECP_FLAGS Flags,_In_opt_ PFSRTL_EXTRA_CREATE_PARAMETER_CLEANUP_CALLBACK CleanupCallback,_In_ ULONG PoolTag,_Out_ PVOID *EcpContext)
NTSTATUS None None.FltAllocateExtraCreateParameterList(_In_ PFLT_FILTER Filter,_In_ FSRTL_ALLOCATE_ECPLIST_FLAGS Flags,_Out_ PECP_LIST *EcpList)
NTSTATUS None None.FltCbdqInsertIo(_Inout_ PFLT_CALLBACK_DATA_QUEUE Cbdq,_In_ PFLT_CALLBACK_DATA Cbd,_In_opt_ PFLT_CALLBACK_DATA_QUEUE_IO_CONTEXT Context,_In_opt_ PVOID InsertContext)
NTSTATUS None None.FltClose(_In_ HANDLE FileHandle)
NTSTATUS None None.FltCreateFileEx2(_In_ PFLT_FILTER Filter,_In_opt_ PFLT_INSTANCE Instance,_Out_ PHANDLE FileHandle,_Out_opt_ PFILE_OBJECT *FileObject,_In_ ACCESS_MASK DesiredAccess,_In_ POBJECT_ATTRIBUTES ObjectAttributes,_Out_ PIO_STATUS_BLOCK IoStatusBlock,_In_opt_ PLARGE_INTEGER AllocationSize,_In_ ULONG FileAttributes,_In_ ULONG ShareAccess,_In_ ULONG CreateDisposition,_In_ ULONG CreateOptions,_In_opt_ PVOID EaBuffer,_In_ ULONG EaLength,_In_ ULONG Flags,_In_opt_ PIO_DRIVER_CREATE_CONTEXT DriverContext)
NTSTATUS None None.FltCreateFileEx(_In_ PFLT_FILTER Filter,_In_opt_ PFLT_INSTANCE Instance,_Out_ PHANDLE FileHandle,_Out_ PFILE_OBJECT *FileObject,_In_ ACCESS_MASK DesiredAccess,_In_ POBJECT_ATTRIBUTES ObjectAttributes,_Out_ PIO_STATUS_BLOCK IoStatusBlock,_In_opt_ PLARGE_INTEGER AllocationSize,_In_ ULONG FileAttributes,_In_ ULONG ShareAccess,_In_ ULONG CreateDisposition,_In_ ULONG CreateOptions,_In_opt_ PVOID EaBuffer,_In_ ULONG EaLength,_In_ ULONG Flags)
NTSTATUS None None.FltCreateFile(_In_ PFLT_FILTER Filter,_In_opt_ PFLT_INSTANCE Instance,_Out_ PHANDLE FileHandle,_In_ ACCESS_MASK DesiredAccess,_In_ POBJECT_ATTRIBUTES ObjectAttributes,_Out_ PIO_STATUS_BLOCK IoStatusBlock,_In_opt_ PLARGE_INTEGER AllocationSize,_In_ ULONG FileAttributes,_In_ ULONG ShareAccess,_In_ ULONG CreateDisposition,_In_ ULONG CreateOptions,_In_opt_ PVOID EaBuffer,_In_ ULONG EaLength,_In_ ULONG Flags)
NTSTATUS None None.FltDecodeParameters(_In_ PFLT_CALLBACK_DATA CallbackData,_Out_ PMDL **MdlAddressPointer,_Out_ PVOID **Buffer,_Out_ PULONG *Length,_Out_opt_ LOCK_OPERATION *DesiredAccess)
NTSTATUS None None.FltDetachVolume(_Inout_ PFLT_FILTER Filter,_Inout_ PFLT_VOLUME Volume,_In_opt_ PCUNICODE_STRING InstanceName)
NTSTATUS None None.FltDeviceIoControlFile(_In_ PFLT_INSTANCE Instance,_In_ PFILE_OBJECT FileObject,_In_ ULONG IoControlCode,_In_opt_ PVOID InputBuffer,_In_ ULONG InputBufferLength,_Out_ PVOID OutputBuffer,_In_ ULONG OutputBufferLength,_Out_opt_ PULONG LengthReturned)
NTSTATUS None None.FltFindExtraCreateParameter(_In_ PFLT_FILTER Filter,_In_ PECP_LIST EcpList,_In_ LPCGUID EcpType,_Out_opt_ PVOID *EcpContext,_Out_opt_ ULONG *EcpContextSize)
NTSTATUS None None.FltFsControlFile(_In_ PFLT_INSTANCE Instance,_In_ PFILE_OBJECT FileObject,_In_ ULONG FsControlCode,_In_opt_ PVOID InputBuffer,_In_ ULONG InputBufferLength,_Out_opt_ PVOID OutputBuffer,_In_ ULONG OutputBufferLength,_Out_opt_ PULONG LengthReturned)
NTSTATUS None None.FltGetDestinationFileNameInformation(_In_ PFLT_INSTANCE Instance,_In_ PFILE_OBJECT FileObject,_In_opt_ HANDLE RootDirectory,_In_ PWSTR FileName,_In_ ULONG FileNameLength,_In_ FLT_FILE_NAME_OPTIONS NameOptions,_Out_ PFLT_FILE_NAME_INFORMATION *RetFileNameInformation)
NTSTATUS None None.FltGetEcpListFromCallbackData(_In_ PFLT_FILTER Filter,_In_ PFLT_CALLBACK_DATA Data,_Out_ PECP_LIST *EcpList)
NTSTATUS None None.FltGetFileNameInformation(_In_ PFLT_CALLBACK_DATA CallbackData,_In_ FLT_FILE_NAME_OPTIONS NameOptions,_Out_ PFLT_FILE_NAME_INFORMATION *FileNameInformation)
NTSTATUS None None.FltGetFileNameInformationUnsafe(_In_ PFILE_OBJECT FileObject,_In_opt_ PFLT_INSTANCE Instance,_In_ FLT_FILE_NAME_OPTIONS NameOptions,_Out_ PFLT_FILE_NAME_INFORMATION *FileNameInformation)
NTSTATUS None None.FltGetNextExtraCreateParameter(_In_ PFLT_FILTER Filter,_In_ PECP_LIST EcpList,_In_opt_ PVOID CurrentEcpContext,_Out_opt_ LPGUID NextEcpType,_Out_opt_ PVOID *NextEcpContext,_Out_opt_ ULONG *NextEcpContextSize)
NTSTATUS None None.FltGetTunneledName(_In_ PFLT_CALLBACK_DATA CallbackData,_In_ PFLT_FILE_NAME_INFORMATION FileNameInformation,_Out_ PFLT_FILE_NAME_INFORMATION *RetTunneledFileNameInformation)
NTSTATUS None None.FltGetVolumeGuidName(_In_ PFLT_VOLUME Volume,_Out_ PUNICODE_STRING VolumeGuidName,_Out_opt_ PULONG BufferSizeNeeded)
NTSTATUS None None.FltGetVolumeProperties(_In_ PFLT_VOLUME Volume,_Out_ PFLT_VOLUME_PROPERTIES VolumeProperties,_In_ ULONG Length,_Out_ PULONG LengthReturned)
NTSTATUS None None.FltInsertExtraCreateParameter(_In_ PFLT_FILTER Filter,_Inout_ PECP_LIST EcpList,_Inout_ PVOID EcpContext)
NTSTATUS None None.FltLoadFilter(_In_ PCUNICODE_STRING FilterName)
NTSTATUS None None.FltLockUserBuffer(_In_ PFLT_CALLBACK_DATA CallbackData)
NTSTATUS None None.FltObjectReference(_Inout_ PVOID FltObject)
NTSTATUS None None.FltParseFileName(_In_ PCUNICODE_STRING FileName,_Inout_ PUNICODE_STRING Extension,_Inout_ PUNICODE_STRING Stream,_Inout_ PUNICODE_STRING FinalComponent)
NTSTATUS None None.FltPerformAsynchronousIo(_Inout_ PFLT_CALLBACK_DATA CallbackData,_In_ PFLT_COMPLETED_ASYNC_IO_CALLBACK CallbackRoutine,_In_ PVOID CallbackContext)
NTSTATUS None None.FltQueryInformationFile(_In_ PFLT_INSTANCE Instance,_In_ PFILE_OBJECT FileObject,_Out_ PVOID FileInformation,_In_ ULONG Length,_In_ FILE_INFORMATION_CLASS FileInformationClass,_Out_opt_ PULONG LengthReturned)
NTSTATUS None None.FltQueryVolumeInformationFile(_In_ PFLT_INSTANCE Instance,_In_ PFILE_OBJECT FileObject,_Out_ PVOID FsInformation,_In_ ULONG Length,_In_ FS_INFORMATION_CLASS FsInformationClass,_Out_opt_ PULONG LengthReturned)
NTSTATUS None None.FltQueryVolumeInformation(_In_ PFLT_INSTANCE Instance,_Out_ PIO_STATUS_BLOCK Iosb,_Out_ PVOID FsInformation,_In_ ULONG Length,_In_ FS_INFORMATION_CLASS FsInformationClass)
NTSTATUS None None.FltQueueDeferredIoWorkItem(_In_ PFLT_DEFERRED_IO_WORKITEM FltWorkItem,_In_ PFLT_CALLBACK_DATA Data,_In_ PFLT_DEFERRED_IO_WORKITEM_ROUTINE WorkerRoutine,_In_ WORK_QUEUE_TYPE QueueType,_In_ PVOID Context)
NTSTATUS None None.FltReadFile(_In_ PFLT_INSTANCE InitiatingInstance,_In_ PFILE_OBJECT FileObject,_In_opt_ PLARGE_INTEGER ByteOffset,_In_ ULONG Length,_Out_ PVOID Buffer,_In_ FLT_IO_OPERATION_FLAGS Flags,_Out_opt_ PULONG BytesRead,_In_opt_ PFLT_COMPLETED_ASYNC_IO_CALLBACK CallbackRoutine,_In_opt_ PVOID CallbackContext)
NTSTATUS None None.FltRemoveExtraCreateParameter(_In_ PFLT_FILTER Filter,_Inout_ PECP_LIST EcpList,_In_ LPCGUID EcpType,_Out_ PVOID *EcpContext,_Out_opt_ ULONG *EcpContextSize)
NTSTATUS None None.FltSetEcpListIntoCallbackData(_In_ PFLT_FILTER Filter,_In_ PFLT_CALLBACK_DATA Data,_In_ PECP_LIST EcpList)
NTSTATUS None None.FltSetInformationFile(_In_ PFLT_INSTANCE Instance,_In_ PFILE_OBJECT FileObject,_In_ PVOID FileInformation,_In_ ULONG Length,_In_ FILE_INFORMATION_CLASS FileInformationClass)
NTSTATUS None None.FltSetSecurityObject(_In_ PFLT_INSTANCE Instance,_In_ PFILE_OBJECT FileObject,_In_ SECURITY_INFORMATION SecurityInformation,_In_ PSECURITY_DESCRIPTOR SecurityDescriptor)
NTSTATUS None None.FltSetVolumeInformation(_In_ PFLT_INSTANCE Instance,_Out_ PIO_STATUS_BLOCK Iosb,_Out_ PVOID FsInformation,_In_ ULONG Length,_In_ FS_INFORMATION_CLASS FsInformationClass)
NTSTATUS None None.FltStartFiltering(_In_ PFLT_FILTER Filter)
NTSTATUS None None.FltTagFile(_In_ PFLT_INSTANCE InitiatingInstance,_In_ PFILE_OBJECT FileObject,_In_ ULONG FileTag,_In_opt_ GUID *Guid,_In_ PVOID DataBuffer,_In_ USHORT DataBufferLength)
NTSTATUS None None.FltUntagFile(_In_ PFLT_INSTANCE InitiatingInstance,_In_ PFILE_OBJECT FileObject,_In_ ULONG FileTag,_In_opt_ GUID *Guid)
NTSTATUS None None.FltWriteFile(_In_ PFLT_INSTANCE InitiatingInstance,_In_ PFILE_OBJECT FileObject,_In_opt_ PLARGE_INTEGER ByteOffset,_In_ ULONG Length,_In_ PVOID Buffer,_In_ FLT_IO_OPERATION_FLAGS Flags,_Out_opt_ PULONG BytesWritten,_In_opt_ PFLT_COMPLETED_ASYNC_IO_CALLBACK CallbackRoutine,_In_opt_ PVOID CallbackContext)
NTSTATUS None None.FlushAdapterBuffersEx(_In_ PDMA_ADAPTER DmaAdapter,_In_ PMDL Mdl,_In_ PVOID MapRegisterBase,_In_ ULONGLONG Offset,_In_ ULONG Length,_In_ BOOLEAN WriteToDevice)
NTSTATUS None None.FreeClientBuffer(_In_ PLSA_CLIENT_REQUEST ClientRequest,_In_ PVOID ClientBaseAddress)
NTSTATUS None None.FsRtlAllocateExtraCreateParameterList(_In_ FSRTL_ALLOCATE_ECPLIST_FLAGS Flags,_Out_ PECP_LIST *EcpList)
NTSTATUS None None.FsRtlCheckOplock(_In_ POPLOCK Oplock,_In_ PIRP Irp,_In_opt_ PVOID Context,_In_opt_ POPLOCK_WAIT_COMPLETE_ROUTINE CompletionRoutine,_In_opt_ POPLOCK_FS_PREPOST_IRP PostIrpRoutine)
NTSTATUS None None.FsRtlGetSectorSizeInformation(_In_ PDEVICE_OBJECT RealDevice,_Out_ PFILE_FS_SECTOR_SIZE_INFORMATION SectorSizeInfo)
NTSTATUS None None.FsRtlOplockFsctrl(_In_ POPLOCK Oplock,_In_ PIRP Irp,_In_ ULONG OpenCount)
NTSTATUS None None.FsRtlRegisterUncProvider(_Out_ PHANDLE MupHandle,_In_ PUNICODE_STRING RedirDevName,_In_ BOOLEAN MailslotsSupported)
NTSTATUS None None.GetAuthDataForUser(_In_ PSECURITY_STRING Name,_In_ SECPKG_NAME_TYPE NameType,_In_ PSECURITY_STRING Prefix,_Out_ PUCHAR *UserAuthData,_Out_ PULONG UserAuthDataSize,_Out_ PUNICODE_STRING UserFlatName)
NTSTATUS None None.GetCertificateFromCred(_In_ PVOID ProviderHandle,_In_ HANDLE ClientToken,_In_ PVOID SuppliedCred,_In_ ULONG SuppliedCredSize,_Out_ PVOID *CertContext)
NTSTATUS None None.GetClientInfo(_Out_ PSECPKG_CLIENT_INFO ClientInfo)
NTSTATUS None None.GetCredentials(_In_ PLUID LogonId,_In_ ULONG AuthenticationPackage,_Inout_ PULONG QueryContext,_In_ BOOLEAN RetrieveAllCredentials,_Inout_ PLSA_STRING PrimaryKeyValue,_Out_ PULONG PrimaryKeyLength,_Out_ PLSA_STRING Credentials)
NTSTATUS None None.GetDmaAdapterInfo(_In_ PDMA_ADAPTER DmaAdapter,_Inout_ PDMA_ADAPTER_INFO AdapterInfo)
NTSTATUS None None.GetPhysicalNetworkName(HANDLE Target None,WCHAR *NetworkName None,ULONG MaxNetworkNameLength None)
NTSTATUS None None.GetResolution([out] PKSRESOLUTION Resolution)
NTSTATUS None None.GetScatterGatherListEx(_In_ PDMA_ADAPTER DmaAdapter,_In_ PDEVICE_OBJECT DeviceObject,_In_ PVOID DmaTransferContext,_In_ PMDL Mdl,_In_ ULONGLONG Offset,_In_ ULONG Length,_In_ ULONG Flags,_In_opt_ PDRIVER_LIST_CONTROL ExecutionRoutine,_In_opt_ PVOID Context,_In_ BOOLEAN WriteToDevice,_In_opt_ PDMA_COMPLETION_ROUTINE DmaCompletionRoutine,_In_opt_ PVOID CompletionContext,_Out_opt_ PSCATTER_GATHER_LIST *ScatterGatherList)
NTSTATUS None None.GetScatterGatherList(_In_ PDMA_ADAPTER DmaAdapter,_In_ PDEVICE_OBJECT DeviceObject,_In_ PMDL Mdl,_In_ PVOID CurrentVa,_In_ ULONG Length,_In_ PDRIVER_LIST_CONTROL ExecutionRoutine,_In_ PVOID Context,_In_ BOOLEAN WriteToDevice)
NTSTATUS None None.GetUserAuthData(_In_ PVOID UserHandle,_Out_ PUCHAR *UserAuthData,_Out_ PULONG UserAuthDataSize)
NTSTATUS None None.ImpersonateClient(void None None)
NTSTATUS None None.InitializeDmaTransferContext(_In_ PDMA_ADAPTER DmaAdapter,_Out_ PVOID DmaTransferContext)
NTSTATUS None None.IoAcquireRemoveLock(_In_ PIO_REMOVE_LOCK RemoveLock,_In_opt_ PVOID Tag)
NTSTATUS None None.IoAllocateDriverObjectExtension(_In_ PDRIVER_OBJECT DriverObject,_In_ PVOID ClientIdentificationAddress,_In_ ULONG DriverObjectExtensionSize,_Out_ PVOID *DriverObjectExtension)
NTSTATUS None None.IoAttachDevice(_In_ PDEVICE_OBJECT SourceDevice,_In_ PUNICODE_STRING TargetDevice,_Out_ PDEVICE_OBJECT *AttachedDevice)
NTSTATUS None None.IoCallDriver(_In_ PDEVICE_OBJECT DeviceObject,_Inout_ PIRP Irp)
NTSTATUS None None.IoCheckEaBufferValidity(_In_ PFILE_FULL_EA_INFORMATION EaBuffer,_In_ ULONG EaLength,_Out_ PULONG ErrorOffset)
NTSTATUS None None.IoCheckQuotaBufferValidity(_In_ PFILE_QUOTA_INFORMATION QuotaBuffer,_In_ ULONG QuotaLength,_Out_ PULONG ErrorOffset)
NTSTATUS None None.IoCheckShareAccess(_In_ ACCESS_MASK DesiredAccess,_In_ ULONG DesiredShareAccess,_Inout_ PFILE_OBJECT FileObject,_Inout_ PSHARE_ACCESS ShareAccess,_In_ BOOLEAN Update)
NTSTATUS None None.IoConnectInterruptEx(_Inout_ PIO_CONNECT_INTERRUPT_PARAMETERS Parameters)
NTSTATUS None None.IoConnectInterrupt(_Out_ PKINTERRUPT *InterruptObject,_In_ PKSERVICE_ROUTINE ServiceRoutine,_In_opt_ PVOID ServiceContext,_In_opt_ PKSPIN_LOCK SpinLock,_In_ ULONG Vector,_In_ KIRQL Irql,_In_ KIRQL SynchronizeIrql,_In_ KINTERRUPT_MODE InterruptMode,_In_ BOOLEAN ShareVector,_In_ KAFFINITY ProcessorEnableMask,_In_ BOOLEAN FloatingSave)
NTSTATUS None None.IoCreateDevice(_In_ PDRIVER_OBJECT DriverObject,_In_ ULONG DeviceExtensionSize,_In_opt_ PUNICODE_STRING DeviceName,_In_ DEVICE_TYPE DeviceType,_In_ ULONG DeviceCharacteristics,_In_ BOOLEAN Exclusive,_Out_ PDEVICE_OBJECT *DeviceObject)
NTSTATUS None None.IoCreateDeviceSecure(_In_ PDRIVER_OBJECT DriverObject,_In_ ULONG DeviceExtensionSize,_In_opt_ PUNICODE_STRING DeviceName,_In_ DEVICE_TYPE DeviceType,_In_ ULONG DeviceCharacteristics,_In_ BOOLEAN Exclusive,_In_ PCUNICODE_STRING DefaultSDDLString,_In_opt_ LPCGUID DeviceClassGuid,_Out_ PDEVICE_OBJECT *DeviceObject)
NTSTATUS None None.IoCreateFileEx(_Out_ PHANDLE FileHandle,_In_ ACCESS_MASK DesiredAccess,_In_ POBJECT_ATTRIBUTES ObjectAttributes,_Out_ PIO_STATUS_BLOCK IoStatusBlock,_In_opt_ PLARGE_INTEGER AllocationSize,_In_ ULONG FileAttributes,_In_ ULONG ShareAccess,_In_ ULONG Disposition,_In_ ULONG CreateOptions,_In_opt_ PVOID EaBuffer,_In_ ULONG EaLength,_In_ CREATE_FILE_TYPE CreateFileType,_In_opt_ PVOID InternalParameters,_In_ ULONG Options,_In_opt_ PIO_DRIVER_CREATE_CONTEXT DriverContext)
NTSTATUS None None.IoCreateFile(_Out_ PHANDLE FileHandle,_In_ ACCESS_MASK DesiredAccess,_In_ POBJECT_ATTRIBUTES ObjectAttributes,_Out_ PIO_STATUS_BLOCK IoStatusBlock,_In_opt_ PLARGE_INTEGER AllocationSize,_In_ ULONG FileAttributes,_In_ ULONG ShareAccess,_In_ ULONG Disposition,_In_ ULONG CreateOptions,_In_opt_ PVOID EaBuffer,_In_ ULONG EaLength,_In_ CREATE_FILE_TYPE CreateFileType,_In_opt_ PVOID InternalParameters,_In_ ULONG Options)
NTSTATUS None None.IoCreateFileSpecifyDeviceObjectHint(_Out_ PHANDLE FileHandle,_In_ ACCESS_MASK DesiredAccess,_In_ POBJECT_ATTRIBUTES ObjectAttributes,_Out_ PIO_STATUS_BLOCK IoStatusBlock,_In_opt_ PLARGE_INTEGER AllocationSize,_In_ ULONG FileAttributes,_In_ ULONG ShareAccess,_In_ ULONG Disposition,_In_ ULONG CreateOptions,_In_opt_ PVOID EaBuffer,_In_ ULONG EaLength,_In_ CREATE_FILE_TYPE CreateFileType,_In_opt_ PVOID InternalParameters,_In_ ULONG Options,_In_opt_ PVOID DeviceObject)
NTSTATUS None None.IoCreateSymbolicLink(_In_ PUNICODE_STRING SymbolicLinkName,_In_ PUNICODE_STRING DeviceName)
NTSTATUS None None.IoCreateUnprotectedSymbolicLink(_In_ PUNICODE_STRING SymbolicLinkName,_In_ PUNICODE_STRING DeviceName)
NTSTATUS None None.IoCsqInitializeEx(_Out_ PIO_CSQ Csq,_In_ PIO_CSQ_INSERT_IRP_EX CsqInsertIrp,_In_ PIO_CSQ_REMOVE_IRP CsqRemoveIrp,_In_ PIO_CSQ_PEEK_NEXT_IRP CsqPeekNextIrp,_In_ PIO_CSQ_ACQUIRE_LOCK CsqAcquireLock,_In_ PIO_CSQ_RELEASE_LOCK CsqReleaseLock,_In_ PIO_CSQ_COMPLETE_CANCELED_IRP CsqCompleteCanceledIrp)
NTSTATUS None None.IoCsqInitialize(_Out_ PIO_CSQ Csq,_In_ PIO_CSQ_INSERT_IRP CsqInsertIrp,_In_ PIO_CSQ_REMOVE_IRP CsqRemoveIrp,_In_ PIO_CSQ_PEEK_NEXT_IRP CsqPeekNextIrp,_In_ PIO_CSQ_ACQUIRE_LOCK CsqAcquireLock,_In_ PIO_CSQ_RELEASE_LOCK CsqReleaseLock,_In_ PIO_CSQ_COMPLETE_CANCELED_IRP CsqCompleteCanceledIrp)
NTSTATUS None None.IoCsqInsertIrpEx(_Inout_ PIO_CSQ Csq,_Inout_ PIRP Irp,_Out_opt_ PIO_CSQ_IRP_CONTEXT Context,_In_opt_ PVOID InsertContext)
NTSTATUS None None.IoDeleteSymbolicLink(_In_ PUNICODE_STRING SymbolicLinkName)
NTSTATUS None None.IoGetDeviceNumaNode(_In_ PDEVICE_OBJECT Pdo,_Out_ PUSHORT NodeNumber)
NTSTATUS None None.IoGetDeviceObjectPointer(_In_ PUNICODE_STRING ObjectName,_In_ ACCESS_MASK DesiredAccess,_Out_ PFILE_OBJECT *FileObject,_Out_ PDEVICE_OBJECT *DeviceObject)
NTSTATUS None None.IoGetDeviceProperty(_In_ PDEVICE_OBJECT DeviceObject,_In_ DEVICE_REGISTRY_PROPERTY DeviceProperty,_In_ ULONG BufferLength,_Out_opt_ PVOID PropertyBuffer,_Out_ PULONG ResultLength)
NTSTATUS None None.IoInitializeTimer(_In_ PDEVICE_OBJECT DeviceObject,_In_ PIO_TIMER_ROUTINE TimerRoutine,_In_opt_ PVOID Context)
NTSTATUS None None.IoOpenDeviceInterfaceRegistryKey(_In_ PUNICODE_STRING SymbolicLinkName,_In_ ACCESS_MASK DesiredAccess,_Out_ PHANDLE DeviceInterfaceKey)
NTSTATUS None None.IoOpenDeviceRegistryKey(_In_ PDEVICE_OBJECT DeviceObject,_In_ ULONG DevInstKeyType,_In_ ACCESS_MASK DesiredAccess,_Out_ PHANDLE DevInstRegKey)
NTSTATUS None None.IoRegisterLastChanceShutdownNotification(_In_ PDEVICE_OBJECT DeviceObject)
NTSTATUS None None.IoRegisterPlugPlayNotification(_In_ IO_NOTIFICATION_EVENT_CATEGORY EventCategory,_In_ ULONG EventCategoryFlags,_In_opt_ PVOID EventCategoryData,_In_ PDRIVER_OBJECT DriverObject,_In_ PDRIVER_NOTIFICATION_CALLBACK_ROUTINE CallbackRoutine,_In_opt_ PVOID Context,_Out_ PVOID *NotificationEntry)
NTSTATUS None None.IoRegisterShutdownNotification(_In_ PDEVICE_OBJECT DeviceObject)
NTSTATUS None None.IoReportDetectedDevice(_In_ PDRIVER_OBJECT DriverObject,_In_ INTERFACE_TYPE LegacyBusType,_In_ ULONG BusNumber,_In_ ULONG SlotNumber,_In_opt_ PCM_RESOURCE_LIST ResourceList,_In_opt_ PIO_RESOURCE_REQUIREMENTS_LIST ResourceRequirements,_In_ BOOLEAN ResourceAssigned,_Inout_ PDEVICE_OBJECT *DeviceObject)
NTSTATUS None None.IoReportTargetDeviceChangeAsynchronous(_In_ PDEVICE_OBJECT PhysicalDeviceObject,_In_ PVOID NotificationStructure,_In_opt_ PDEVICE_CHANGE_COMPLETE_CALLBACK Callback,_Inout_ PVOID Context)
NTSTATUS None None.IoReportTargetDeviceChange(_In_ PDEVICE_OBJECT PhysicalDeviceObject,_In_ PVOID NotificationStructure)
NTSTATUS None None.IoSetCompletionRoutineEx(_In_ PDEVICE_OBJECT DeviceObject,_In_ PIRP Irp,_In_ PIO_COMPLETION_ROUTINE CompletionRoutine,_In_opt_ PVOID Context,_In_ BOOLEAN InvokeOnSuccess,_In_ BOOLEAN InvokeOnError,_In_ BOOLEAN InvokeOnCancel)
NTSTATUS None None.IoSetDeviceInterfaceState(_In_ PUNICODE_STRING SymbolicLinkName,_In_ BOOLEAN Enable)
NTSTATUS None None.IoUnregisterPlugPlayNotificationEx(_In_ PVOID NotificationEntry)
NTSTATUS None None.IoUnregisterPlugPlayNotification(_In_ PVOID NotificationEntry)
NTSTATUS None None.IoWMIAllocateInstanceIds(_In_ GUID *Guid,_In_ ULONG InstanceCount,_Out_ ULONG *FirstInstanceId)
NTSTATUS None None.IoWMIRegistrationControl(_In_ PDEVICE_OBJECT DeviceObject,_In_ ULONG Action)
NTSTATUS None None.IsSecureProcess(_In_ HANDLE ProcessHandle,_Out_ BOOLEAN *SecureProcess)
NTSTATUS None None.KeDelayExecutionThread(_In_ KPROCESSOR_MODE WaitMode,_In_ BOOLEAN Alertable,_In_ PLARGE_INTEGER Interval)
NTSTATUS None None.KeDeregisterNmiCallback(_In_ PVOID Handle)
NTSTATUS None None.KeRestoreFloatingPointState(_In_ PKFLOATING_SAVE FloatSave)
NTSTATUS None None.KeSaveFloatingPointState(_Out_ PKFLOATING_SAVE FloatSave)
NTSTATUS None None.KeWaitForMultipleObjects(_In_ ULONG Count,_In_ PVOID Object[],_In_ WAIT_TYPE WaitType,_In_ KWAIT_REASON WaitReason,_In_ KPROCESSOR_MODE WaitMode,_In_ BOOLEAN Alertable,_In_opt_ PLARGE_INTEGER Timeout,_Out_opt_ PKWAIT_BLOCK WaitBlockArray)
NTSTATUS None None.KeWaitForMutexObject(_In_ PVOID Mutex,_In_ KWAIT_REASON WaitReason,_In_ KPROCESSOR_MODE WaitMode,_In_ BOOLEAN Alertable,_In_opt_ PLARGE_INTEGER Timeout)
NTSTATUS None None.KeWaitForSingleObject(_In_ PVOID Object,_In_ KWAIT_REASON WaitReason,_In_ KPROCESSOR_MODE WaitMode,_In_ BOOLEAN Alertable,_In_opt_ PLARGE_INTEGER Timeout)
NTSTATUS None None.KsAddItemToObjectBag(_In_ KSOBJECT_BAG ObjectBag,_In_ PVOID Item,_In_opt_ PFNKSFREE Free)
NTSTATUS None None.KsAllocateObjectBag(_In_ PKSDEVICE Device,_Out_ KSOBJECT_BAG *ObjectBag)
NTSTATUS None None.KsCopyObjectBagItems(_In_ KSOBJECT_BAG ObjectBagDestination,_In_ KSOBJECT_BAG ObjectBagSource)
NTSTATUS None None.KsCreatePin(_In_ HANDLE FilterHandle,_In_ PKSPIN_CONNECT Connect,_In_ ACCESS_MASK DesiredAccess,_Out_ PHANDLE ConnectionHandle)
NTSTATUS None None._KsEdit(_In_ KSOBJECT_BAG ObjectBag,_Inout_ PVOID *PointerToPointerToItem,_In_ ULONG NewSize,_In_ ULONG OldSize,_In_ ULONG Tag)
NTSTATUS None None.KsEvent(PKSEVENT Event None,ULONG EventLength None,PVOID EventData None,ULONG DataLength None,ULONG BytesReturned None)
NTSTATUS None None.KsMergeAutomationTables(_Out_ PKSAUTOMATION_TABLE *AutomationTableAB,_In_opt_ PKSAUTOMATION_TABLE AutomationTableA,_In_opt_ PKSAUTOMATION_TABLE AutomationTableB,_In_opt_ KSOBJECT_BAG Bag)
NTSTATUS None None.KsPinGetReferenceClockInterface(_In_ PKSPIN Pin,_Out_ PIKSREFERENCECLOCK *Interface)
NTSTATUS None None.KsProperty([in] PKSPROPERTY Property,[in] ULONG PropertyLength,[in None None,out] PVOID PropertyData,[in] ULONG DataLength,[out] ULONG *BytesReturned)
NTSTATUS None None.LsaApCallPackage(_In_ PLSA_CLIENT_REQUEST ClientRequest,_In_ PVOID ProtocolSubmitBuffer,_In_ PVOID ClientBufferBase,_In_ ULONG SubmitBufferLength,_Out_ PVOID *ProtocolReturnBuffer,_Out_ PULONG ReturnBufferLength,_Out_ PNTSTATUS ProtocolStatus)
NTSTATUS None None.LsaApCallPackagePassthrough(_In_ PLSA_CLIENT_REQUEST ClientRequest,_In_ PVOID ProtocolSubmitBuffer,_In_ PVOID ClientBufferBase,_In_ ULONG SubmitBufferLength,_Out_ PVOID *ProtocolReturnBuffer,_Out_ PULONG ReturnBufferLength,_Out_ PNTSTATUS ProtocolStatus)
NTSTATUS None None.LsaApCallPackageUntrusted(_In_ PLSA_CLIENT_REQUEST ClientRequest,_In_ PVOID ProtocolSubmitBuffer,_In_ PVOID ClientBufferBase,_In_ ULONG SubmitBufferLength,_Out_ PVOID *ProtocolReturnBuffer,_Out_ PULONG ReturnBufferLength,_Out_ PNTSTATUS ProtocolStatus)
NTSTATUS None None.LsaApInitializePackage(_In_ ULONG AuthenticationPackageId,_In_ PLSA_DISPATCH_TABLE LsaDispatchTable,_In_opt_ PLSA_STRING Database,_In_opt_ PLSA_STRING Confidentiality,_Out_ PLSA_STRING *AuthenticationPackageName)
NTSTATUS None None.LsaApLogonUserEx2(_In_ PLSA_CLIENT_REQUEST ClientRequest,_In_ SECURITY_LOGON_TYPE LogonType,_In_ PVOID ProtocolSubmitBuffer,_In_ PVOID ClientBufferBase,_In_ ULONG SubmitBufferSize,_Out_ PVOID *ProfileBuffer,_Out_ PULONG ProfileBufferSize,_Out_ PLUID LogonId,_Out_ PNTSTATUS SubStatus,_Out_ PLSA_TOKEN_INFORMATION_TYPE TokenInformationType,_Out_ PVOID *TokenInformation,_Out_ PUNICODE_STRING *AccountName,_Out_ PUNICODE_STRING *AuthenticatingAuthority,_Out_ PUNICODE_STRING *MachineName,_Out_ PSECPKG_PRIMARY_CRED PrimaryCredentials,_Out_ PSECPKG_SUPPLEMENTAL_CRED_ARRAY *SupplementalCredentials)
NTSTATUS None None.LsaApLogonUserEx(_In_ PLSA_CLIENT_REQUEST ClientRequest,_In_ SECURITY_LOGON_TYPE LogonType,_In_ PVOID AuthenticationInformation,_In_ PVOID ClientAuthenticationBase,_In_ ULONG AuthenticationInformationLength,_Out_ PVOID *ProfileBuffer,_Out_ PULONG ProfileBufferLength,_Out_ PLUID LogonId,_Out_ PNTSTATUS SubStatus,_Out_ PLSA_TOKEN_INFORMATION_TYPE TokenInformationType,_Out_ PVOID *TokenInformation,_Out_ PUNICODE_STRING *AccountName,_Out_ PUNICODE_STRING *AuthenticatingAuthority,_Out_ PUNICODE_STRING *MachineName)
NTSTATUS None None.LsaApLogonUser(_In_ PLSA_CLIENT_REQUEST ClientRequest,_In_ SECURITY_LOGON_TYPE LogonType,_In_ PVOID AuthenticationInformation,_In_ PVOID ClientAuthenticationBase,_In_ ULONG AuthenticationInformationLength,_Out_ PVOID *ProfileBuffer,_Out_ PULONG ProfileBufferLength,_Out_ PLUID LogonId,_Out_ PNTSTATUS SubStatus,_Out_ PLSA_TOKEN_INFORMATION_TYPE TokenInformationType,_Out_ PVOID *TokenInformation,_Out_ PLSA_UNICODE_STRING *AccountName,_Out_ PLSA_UNICODE_STRING *AuthenticatingAuthority)
NTSTATUS None None.LsapChangeBlankPasswordRestriction(_In_ BOOLEAN Enable)
NTSTATUS None None.MapBuffer(_In_ PSecBuffer InputBuffer,_Out_ PSecBuffer OutputBuffer)
NTSTATUS None None.MapTransferEx(_In_ PDMA_ADAPTER DmaAdapter,_In_ PMDL Mdl,_In_ PVOID MapRegisterBase,_In_ ULONGLONG Offset,_In_ ULONG DeviceOffset,_Inout_ PULONG Length,_In_ BOOLEAN WriteToDevice,_Out_opt_ PSCATTER_GATHER_LIST ScatterGatherBuffer,_In_ ULONG ScatterGatherBufferLength,_In_opt_ PDMA_COMPLETION_ROUTINE DmaCompletionRoutine,_In_opt_ PVOID CompletionContext)
NTSTATUS None None.myEvtDriverDeviceAdd(WDFDRIVER Driver None,PWDFDEVICE_INIT DeviceInit None)
NTSTATUS None None.ObGetObjectSecurity(_In_ PVOID Object,_Out_ PSECURITY_DESCRIPTOR *SecurityDescriptor,_Out_ PBOOLEAN MemoryAllocated)
NTSTATUS None None.ObOpenObjectByPointer(_In_ PVOID Object,_In_ ULONG HandleAttributes,_In_opt_ PACCESS_STATE PassedAccessState,_In_ ACCESS_MASK DesiredAccess,_In_opt_ POBJECT_TYPE ObjectType,_In_ KPROCESSOR_MODE AccessMode,_Out_ PHANDLE Handle)
NTSTATUS None None.ObReferenceObjectByHandle(_In_ HANDLE Handle,_In_ ACCESS_MASK DesiredAccess,_In_opt_ POBJECT_TYPE ObjectType,_In_ KPROCESSOR_MODE AccessMode,_Out_ PVOID *Object,_Out_opt_ POBJECT_HANDLE_INFORMATION HandleInformation)
NTSTATUS None None.ObReferenceObjectByHandleWithTag(_In_ HANDLE Handle,_In_ ACCESS_MASK DesiredAccess,_In_opt_ POBJECT_TYPE ObjectType,_In_ KPROCESSOR_MODE AccessMode,_In_ ULONG Tag,_Out_ PVOID *Object,_Out_opt_ POBJECT_HANDLE_INFORMATION HandleInformation)
NTSTATUS None None.ObReferenceObjectByPointer(_In_ PVOID Object,_In_ ACCESS_MASK DesiredAccess,_In_opt_ POBJECT_TYPE ObjectType,_In_ KPROCESSOR_MODE AccessMode)
NTSTATUS None None.ObReferenceObjectByPointerWithTag(_In_ PVOID Object,_In_ ACCESS_MASK DesiredAccess,_In_opt_ POBJECT_TYPE ObjectType,_In_ KPROCESSOR_MODE AccessMode,_In_ ULONG Tag)
NTSTATUS None None.OpenSamUser(_In_ PSECURITY_STRING Name,_In_ SECPKG_NAME_TYPE NameType,_In_ PSECURITY_STRING Prefix,_In_ BOOLEAN AllowGuest,_In_ ULONG Reserved,_Out_ PVOID *UserHandle)
NTSTATUS None None.OpenStreams(_In_ WDFDEVICE Device,_In_ WDFUSBPIPE Pipe)
NTSTATUS None None.PasswordChangeNotify(_In_ PUNICODE_STRING UserName,_In_ ULONG RelativeId,_In_ PUNICODE_STRING NewPassword)
NTSTATUS None None.PoCallDriver(_In_ PDEVICE_OBJECT DeviceObject,_Inout_ PIRP Irp)
NTSTATUS None None.PoRequestPowerIrp(_In_ PDEVICE_OBJECT DeviceObject,_In_ UCHAR MinorFunction,_In_ POWER_STATE PowerState,_In_opt_ PREQUEST_POWER_COMPLETE CompletionFunction,_In_opt_ PVOID Context,_Out_ PIRP *Irp)
NTSTATUS None None.PsCreateSystemThread(_Out_ PHANDLE ThreadHandle,_In_ ULONG DesiredAccess,_In_opt_ POBJECT_ATTRIBUTES ObjectAttributes,_In_opt_ HANDLE ProcessHandle,_Out_opt_ PCLIENT_ID ClientId,_In_ PKSTART_ROUTINE StartRoutine,_In_opt_ PVOID StartContext)
NTSTATUS None None.PsImpersonateClient(_Inout_ PETHREAD Thread,_In_ PACCESS_TOKEN Token,_In_ BOOLEAN CopyOnOpen,_In_ BOOLEAN EffectiveOnly,_In_ SECURITY_IMPERSONATION_LEVEL ImpersonationLevel)
NTSTATUS None None.PsRemoveLoadImageNotifyRoutine(_In_ PLOAD_IMAGE_NOTIFY_ROUTINE NotifyRoutine)
NTSTATUS None None.PsSetCreateProcessNotifyRoutineEx(_In_ PCREATE_PROCESS_NOTIFY_ROUTINE_EX NotifyRoutine,_In_ BOOLEAN Remove)
NTSTATUS None None.PsSetCreateProcessNotifyRoutine(_In_ PCREATE_PROCESS_NOTIFY_ROUTINE NotifyRoutine,_In_ BOOLEAN Remove)
NTSTATUS None None.PsSetCreateThreadNotifyRoutine(_In_ PCREATE_THREAD_NOTIFY_ROUTINE NotifyRoutine)
NTSTATUS None None.PsSetLoadImageNotifyRoutine(_In_ PLOAD_IMAGE_NOTIFY_ROUTINE NotifyRoutine)
NTSTATUS None None.PsTerminateSystemThread(_In_ NTSTATUS ExitStatus)
NTSTATUS None None.RegisterCallback(_In_ ULONG CallbackId,_In_ PLSA_CALLBACK_FUNCTION Callback)
NTSTATUS None None.RPMRegisterAlternateDriver(_In_ PDRIVER_OBJECT DriverObject,_In_ LPCWSTR CompatibleId,_Out_ PHANDLE RegisteredDriver)
NTSTATUS None None.RPMUnloadAlternateDriverForDevice(_In_ HANDLE RegisteredDriver,_In_ ULONG64 HubID,_In_ ULONG ConnectionIndex)
NTSTATUS None None.RtlCheckRegistryKey(_In_ ULONG RelativeTo,_In_ PWSTR Path)
NTSTATUS None None.RtlCmEncodeMemIoResource(_In_ PCM_PARTIAL_RESOURCE_DESCRIPTOR Descriptor,_In_ UCHAR Type,_In_ ULONGLONG Length,_In_ ULONGLONG Start)
NTSTATUS None None.RtlCopySid(_In_ ULONG DestinationSidLength,_In_ PSID DestinationSid,_In_ PSID SourceSid)
NTSTATUS None None.RtlCreateAcl(_Out_ PACL Acl,_In_ ULONG AclLength,_In_ ULONG AceRevision)
NTSTATUS None None.RtlCreateSecurityDescriptor(_Out_ PSECURITY_DESCRIPTOR SecurityDescriptor,_In_ ULONG Revision)
NTSTATUS None None.RtlCreateSecurityDescriptorRelative(_Out_ PISECURITY_DESCRIPTOR_RELATIVE SecurityDescriptor,_In_ ULONG Revision)
NTSTATUS None None.RtlDeleteRegistryValue(_In_ ULONG RelativeTo,_In_ PCWSTR Path,_In_ PCWSTR ValueName)
NTSTATUS None None.RtlGetAce(_In_ PACL Acl,_In_ ULONG AceIndex,_Out_ PVOID *Ace)
NTSTATUS None None.RtlGetOwnerSecurityDescriptor(_In_ PSECURITY_DESCRIPTOR SecurityDescriptor,_Out_ PSID *Owner,_Out_ PBOOLEAN OwnerDefaulted)
NTSTATUS None None.RtlGetVersion(_Out_ PRTL_OSVERSIONINFOW lpVersionInformation)
NTSTATUS None None.RtlInitializeSid(_Out_ PSID Sid,_In_ PSID_IDENTIFIER_AUTHORITY IdentifierAuthority,_In_ UCHAR SubAuthorityCount)
NTSTATUS None None.RtlQueryRegistryValues(_In_ ULONG RelativeTo,_In_ PCWSTR Path,_Inout_ PRTL_QUERY_REGISTRY_TABLE QueryTable,_In_opt_ PVOID Context,_In_opt_ PVOID Environment)
NTSTATUS None None.RtlSetDaclSecurityDescriptor(_Inout_ PSECURITY_DESCRIPTOR SecurityDescriptor,_In_ BOOLEAN DaclPresent,_In_opt_ PACL Dacl,_In_opt_ BOOLEAN DaclDefaulted)
NTSTATUS None None.RtlSetOwnerSecurityDescriptor(_Inout_ PSECURITY_DESCRIPTOR SecurityDescriptor,_In_opt_ PSID Owner,_In_opt_ BOOLEAN OwnerDefaulted)
NTSTATUS None None.RtlUnicodeStringToAnsiString(_Inout_ PANSI_STRING DestinationString,_In_ PCUNICODE_STRING SourceString,_In_ BOOLEAN AllocateDestinationString)
NTSTATUS None None.RtlVerifyVersionInfo(_In_ PRTL_OSVERSIONINFOEXW VersionInfo,_In_ ULONG TypeMask,_In_ ULONGLONG ConditionMask)
NTSTATUS None None.RtlWriteRegistryValue(_In_ ULONG RelativeTo,_In_ PCWSTR Path,_In_ PCWSTR ValueName,_In_ ULONG ValueType,_In_opt_ PVOID ValueData,_In_ ULONG ValueLength)
NTSTATUS None None.SeAssignSecurityEx(_In_opt_ PSECURITY_DESCRIPTOR ParentDescriptor,_In_opt_ PSECURITY_DESCRIPTOR ExplicitDescriptor,_Out_ PSECURITY_DESCRIPTOR *NewDescriptor,_In_opt_ GUID *ObjectType,_In_ BOOLEAN IsDirectoryObject,_In_ ULONG AutoInheritFlags,_In_ PSECURITY_SUBJECT_CONTEXT SubjectContext,_In_ PGENERIC_MAPPING GenericMapping,_In_ POOL_TYPE PoolType)
NTSTATUS None None.SeAssignSecurity(_In_opt_ PSECURITY_DESCRIPTOR ParentDescriptor,_In_opt_ PSECURITY_DESCRIPTOR ExplicitDescriptor,_Out_ PSECURITY_DESCRIPTOR *NewDescriptor,_In_ BOOLEAN IsDirectoryObject,_In_ PSECURITY_SUBJECT_CONTEXT SubjectContext,_In_ PGENERIC_MAPPING GenericMapping,_In_ POOL_TYPE PoolType)
NTSTATUS None None.SeDeassignSecurity(_Inout_ PSECURITY_DESCRIPTOR *SecurityDescriptor)
NTSTATUS None None.SeQueryInformationToken(_In_ PACCESS_TOKEN Token,_In_ TOKEN_INFORMATION_CLASS TokenInformationClass,_Out_ PVOID *TokenInformation)
NTSTATUS None None.SeSetSecurityDescriptorInfoEx(_In_opt_ PVOID Object,_In_ PSECURITY_INFORMATION SecurityInformation,_In_ PSECURITY_DESCRIPTOR SecurityDescriptor,_Inout_ PSECURITY_DESCRIPTOR *ObjectsSecurityDescriptor,_In_ ULONG AutoInheritFlags,_In_ POOL_TYPE PoolType,_In_ PGENERIC_MAPPING GenericMapping)
NTSTATUS None None.SpAcceptCredentials(_In_ SECURITY_LOGON_TYPE LogonType,_In_ PUNICODE_STRING AccountName,_In_ PSECPKG_PRIMARY_CRED PrimaryCredentials,_In_ PSECPKG_SUPPLEMENTAL_CRED SupplementalCredentials)
NTSTATUS None None.SpAcceptLsaModeContext(_In_ LSA_SEC_HANDLE CredentialHandle,_In_ LSA_SEC_HANDLE ContextHandle,_In_ PSecBufferDesc InputBuffer,_In_ ULONG ContextRequirements,_In_ ULONG TargetDataRep,_Out_ PLSA_SEC_HANDLE NewContextHandle,_Out_ PSecBufferDesc OutputBuffer,_Out_ PULONG ContextAttributes,_Out_ PTimeStamp ExpirationTime,_Out_ PBOOLEAN MappedContext,_Out_ PSecBuffer ContextData)
NTSTATUS None None.SpAcquireCredentialsHandle(_In_ PUNICODE_STRING PrincipalName,_In_ ULONG CredentialUseFlags,_In_ PLUID LogonId,_In_ PVOID AuthorizationData,_In_ PVOID GetKeyFunction,_In_ PVOID GetKeyArgument,_Out_ PLSA_SEC_HANDLE CredentialHandle,_Out_ PTimeStamp ExpirationTime)
NTSTATUS None None.SpAddCredentials(_In_ LSA_SEC_HANDLE CredentialHandle,_In_ PUNICODE_STRING PrincipalName,_In_ PUNICODE_STRING Package,_In_ ULONG CredentialUseFlags,_In_ PVOID AuthorizationData,_In_ PVOID GetKeyFunction,_In_ PVOID GetKeyArgument,_Out_ PTimeStamp ExpirationTime)
NTSTATUS None None.SpApplyControlToken(_In_ LSA_SEC_HANDLE ContextHandle,_In_ PSecBufferDesc ControlToken)
NTSTATUS None None.SpCompleteAuthToken(_In_ LSA_SEC_HANDLE ContextHandle,_In_ PSecBufferDesc InputBuffer)
NTSTATUS None None.SpDeleteContext(_In_ LSA_SEC_HANDLE ContextHandle)
NTSTATUS None None.SpDeleteCredentials(_In_ LSA_SEC_HANDLE CredentialHandle,_In_ PSecBuffer Key)
NTSTATUS None None.SpExportSecurityContext(_In_ LSA_SEC_HANDLE phContext,_In_ ULONG fFlags,_Out_ PSecBuffer pPackedContext,_Out_ PHANDLE pToken)
NTSTATUS None None.SpFormatCredentials(_In_ PSecBuffer Credentials,_Out_ PSecBuffer FormattedCredentials)
NTSTATUS None None.SpFreeCredentialsHandle(_In_ LSA_SEC_HANDLE CredentialHandle)
NTSTATUS None None.SpGetContextToken(_In_ LSA_SEC_HANDLE ContextHandle,_Out_ PHANDLE ImpersonationToken)
NTSTATUS None None.SpGetCredentials(_In_ LSA_SEC_HANDLE CredentialHandle,_Out_ PSecBuffer Credentials)
NTSTATUS None None.SpGetExtendedInformation(_In_ SECPKG_EXTENDED_INFORMATION_CLASS Class,_Out_ PSECPKG_EXTENDED_INFORMATION *ppInformation)
NTSTATUS None None.SpGetInfo(_Out_ PSecPkgInfo PackageInfo)
NTSTATUS None None.SpGetUserInfo(_In_ PLUID LogonId,_In_ ULONG Flags,_Out_ PSecurityUserData *UserData)
NTSTATUS None None.SpImportSecurityContext(_In_ PSecBuffer pPackedContext,_In_ HANDLE Token,_Out_ PLSA_SEC_HANDLE phContext)
NTSTATUS None None.SpInitialize(_In_ ULONG_PTR PackageId,_In_ PSECPKG_PARAMETERS Parameters,_In_ PLSA_SECPKG_FUNCTION_TABLE FunctionTable)
NTSTATUS None None.SpInitLsaModeContext(_In_ LSA_SEC_HANDLE CredentialHandle,_In_ LSA_SEC_HANDLE ContextHandle,_In_ PUNICODE_STRING TargetName,_In_ ULONG ContextRequirements,_In_ ULONG TargetDataRep,_In_ PSecBufferDesc InputBuffers,_Out_ PLSA_SEC_HANDLE NewContextHandle,_Out_ PSecBufferDesc OutputBuffers,_Out_ PULONG ContextAttributes,_Out_ PTimeStamp ExpirationTime,_Out_ PBOOLEAN MappedContext,_Out_ PSecBuffer ContextData)
NTSTATUS None None.SpInitUserModeContext(_In_ LSA_SEC_HANDLE ContextHandle,_In_ PSecBuffer PackedContext)
NTSTATUS None None.SpInstanceInit(_In_ ULONG Version,_In_ PSECPKG_DLL_FUNCTIONS FunctionTable,_Out_ PVOID *UserFunctions)
NTSTATUS None None.SpMakeSignature(_In_ LSA_SEC_HANDLE ContextHandle,_In_ ULONG QualityOfProtection,_Inout_ PSecBufferDesc MessageBuffers,_In_ ULONG MessageSequenceNumber)
NTSTATUS None None.SpMarshallSupplementalCreds(_In_ ULONG CredentialSize,_In_ PUCHAR Credentials,_Out_ PULONG MarshalledCredSize,_Out_ PVOID *MarshalledCreds)
NTSTATUS None None.SpQueryContextAttributes(_In_ LSA_SEC_HANDLE ContextHandle,_In_ ULONG ContextAttribute,_Out_ PVOID Buffer)
NTSTATUS None None.SpQueryCredentialsAttributes(_In_ LSA_SEC_HANDLE CredentialHandle,_In_ ULONG CredentialAttribute,_Out_ PVOID Buffer)
NTSTATUS None None.SpSaveCredentials(_In_ LSA_SEC_HANDLE CredentialHandle,_In_ PSecBuffer Credentials)
NTSTATUS None None.SpSealMessage(_In_ LSA_SEC_HANDLE ContextHandle,_In_ ULONG QualityOfProtection,_Inout_ PSecBufferDesc MessageBuffers,_In_ ULONG MessageSequenceNumber)
NTSTATUS None None.SpSetExtendedInformation(_In_ SECPKG_EXTENDED_INFORMATION_CLASS Class,_In_ PSECPKG_EXTENDED_INFORMATION Info)
NTSTATUS None None.SpShutDown(void None None)
NTSTATUS None None.SpUnsealMessage(_In_ LSA_SEC_HANDLE ContextHandle,_In_ PSecBufferDesc MessageBuffers,_In_ ULONG MessageSequenceNumber,_Out_ PULONG QualityOfProtection)
NTSTATUS None None.SpVerifySignature(_In_ LSA_SEC_HANDLE ContextHandle,_In_ PSecBufferDesc MessageBuffers,_In_ ULONG MessageSequenceNumber,_Out_ PULONG QualityOfProtection)
NT_STATUS None None.SspiDecryptAuthIdentityEx(_In_ ULONG Options,_Inout_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE EncryptedAuthData)
NTSTATUS None None.StreamClassRegisterMinidriver(_In_ PVOID Argument1,_In_ PVOID Argument2,_In_ PHW_INITIALIZATION_DATA HwInitializationData)
NTSTATUS None None.TmDereferenceEnlistmentKey(_In_ PKENLISTMENT Enlistment,_Out_opt_ PBOOLEAN LastReference)
NTSTATUS None None.TmEnableCallbacks(_In_ PKRESOURCEMANAGER ResourceManager,_In_ PTM_RM_NOTIFICATION CallbackRoutine,_In_opt_ PVOID RMKey)
NTSTATUS None None.TmPrepareEnlistment(_In_ PKENLISTMENT Enlistment,_In_ PLARGE_INTEGER TmVirtualClock)
NTSTATUS None None.TmPrePrepareEnlistment(_In_ PKENLISTMENT Enlistment,_In_ PLARGE_INTEGER TmVirtualClock)
NTSTATUS None None.TmReferenceEnlistmentKey(_In_ PKENLISTMENT Enlistment,_Out_ PVOID *Key)
NTSTATUS None None.UcmConnectorCreate([in] WDFDEVICE WdfDevice,[in] PUCM_CONNECTOR_CONFIG Config,[in] PWDF_OBJECT_ATTRIBUTES Attributes,[out] UCMCONNECTOR *Connector)
NTSTATUS None None.UcmConnectorPdConnectionStateChanged([in] UCMCONNECTOR Connector,[in] PUCM_CONNECTOR_PD_CONN_STATE_CHANGED_PARAMS Params)
NTSTATUS None None.UcmTcpciPortControllerCreate(WDFDEVICE WdfDevice None,PUCMTCPCI_PORT_CONTROLLER_CONFIG Config None,PWDF_OBJECT_ATTRIBUTES Attributes None,UCMTCPCIPORTCONTROLLER* PortControllerObject None)
NTSTATUS None None.UcxControllerCreate([in] WDFDEVICE Device,[in] PUCX_CONTROLLER_CONFIG Config,[in None None,optional] PWDF_OBJECT_ATTRIBUTES Attributes,[out] UCXCONTROLLER *Controller)
NTSTATUS None None.UdecxUsbDeviceCreate(_Inout_ PUDECXUSBDEVICE_INIT *UdecxUsbDeviceInit,_In_opt_ PWDF_OBJECT_ATTRIBUTES Attributes,_Out_ UDECXUSBDEVICE *UdecxUsbDevice)
NTSTATUS None None.UnloadPackage(void None None)
NTSTATUS None None.UpdateCredentials(_In_ PSECPKG_PRIMARY_CRED PrimaryCredentials,_In_opt_ PSECPKG_SUPPLEMENTAL_CRED_ARRAY Credentials)
NTSTATUS None None.USBD_CreateHandle(_In_ PDEVICE_OBJECT DeviceObject,_In_ PDEVICE_OBJECT TargetDeviceObject,_In_ ULONG USBDClientContractVersion,_In_ ULONG PoolTag,_Out_ USBD_HANDLE *USBDHandle)
NTSTATUS None None.USBD_IsochUrbAllocate(_In_ USBD_HANDLE USBDHandle,_In_ ULONG NumberOfIsochPacket,_Out_ PURB *Urb)
NTSTATUS None None.USBD_SelectConfigUrbAllocateAndBuild(_In_ USBD_HANDLE USBDHandle,_In_ PUSB_CONFIGURATION_DESCRIPTOR ConfigurationDescriptor,_In_ PUSBD_INTERFACE_LIST_ENTRY InterfaceList,_Out_ PURB *Urb)
NTSTATUS None None.USBD_UrbAllocate(_In_ USBD_HANDLE USBDHandle,_Out_ PURB *Urb)
NTSTATUS None None.WdfChildListAddOrUpdateChildDescriptionAsPresent(_In_ WDFCHILDLIST ChildList,_In_ PWDF_CHILD_IDENTIFICATION_DESCRIPTION_HEADER IdentificationDescription,_In_opt_ PWDF_CHILD_ADDRESS_DESCRIPTION_HEADER AddressDescription)
NTSTATUS None None.WdfChildListCreate(_In_ WDFDEVICE Device,_In_ PWDF_CHILD_LIST_CONFIG Config,_In_opt_ PWDF_OBJECT_ATTRIBUTES ChildListAttributes,_Out_ WDFCHILDLIST *ChildList)
NTSTATUS None None.WdfChildListRetrieveAddressDescription(_In_ WDFCHILDLIST ChildList,_In_ PWDF_CHILD_IDENTIFICATION_DESCRIPTION_HEADER IdentificationDescription,_Inout_ PWDF_CHILD_ADDRESS_DESCRIPTION_HEADER AddressDescription)
NTSTATUS None None.WdfChildListRetrieveNextDevice(_In_ WDFCHILDLIST ChildList,_In_ PWDF_CHILD_LIST_ITERATOR Iterator,_Out_ WDFDEVICE *Device,_Inout_ PWDF_CHILD_RETRIEVE_INFO Info)
NTSTATUS None None.WdfChildListUpdateChildDescriptionAsMissing(_In_ WDFCHILDLIST ChildList,_In_ PWDF_CHILD_IDENTIFICATION_DESCRIPTION_HEADER IdentificationDescription)
NTSTATUS None None.WdfCmResourceListAppendDescriptor(_In_ WDFCMRESLIST List,_In_ PCM_PARTIAL_RESOURCE_DESCRIPTOR Descriptor)
NTSTATUS None None.WdfCmResourceListInsertDescriptor(_In_ WDFCMRESLIST List,_In_ PCM_PARTIAL_RESOURCE_DESCRIPTOR Descriptor,_In_ ULONG Index)
NTSTATUS None None.WdfCollectionAdd(_In_ WDFCOLLECTION Collection,_In_ WDFOBJECT Object)
NTSTATUS None None.WdfCollectionCreate(_In_opt_ PWDF_OBJECT_ATTRIBUTES CollectionAttributes,_Out_ WDFCOLLECTION *Collection)
NTSTATUS None None.WdfCommonBufferCreate(_In_ WDFDMAENABLER DmaEnabler,_In_ size_t Length,_In_opt_ PWDF_OBJECT_ATTRIBUTES Attributes,_Out_ WDFCOMMONBUFFER *CommonBuffer)
NTSTATUS None None.WdfCommonBufferCreateWithConfig(_In_ WDFDMAENABLER DmaEnabler,_In_ size_t Length,_In_ PWDF_COMMON_BUFFER_CONFIG Config,_In_opt_ PWDF_OBJECT_ATTRIBUTES Attributes,_Out_ WDFCOMMONBUFFER *CommonBuffer)
NTSTATUS None None.WdfDeviceAddDependentUsageDeviceObject(_In_ WDFDEVICE Device,_In_ PDEVICE_OBJECT DependentDevice)
NTSTATUS None None.WdfDeviceAddQueryInterface(_In_ WDFDEVICE Device,_In_ PWDF_QUERY_INTERFACE_CONFIG InterfaceConfig)
NTSTATUS None None.WdfDeviceAddRemovalRelationsPhysicalDevice(_In_ WDFDEVICE Device,_In_ PDEVICE_OBJECT PhysicalDevice)
NTSTATUS None None.WdfDeviceAllocAndQueryPropertyEx(_In_ WDFDEVICE Device,_In_ PWDF_DEVICE_PROPERTY_DATA DeviceProperty,_In_ POOL_TYPE PoolType,_In_opt_ PWDF_OBJECT_ATTRIBUTES PropertyMemoryAttributes,_Out_ WDFMEMORY *PropertyMemory,_Out_ PDEVPROPTYPE Type)
NTSTATUS None None.WdfDeviceAllocAndQueryProperty(_In_ WDFDEVICE Device,_In_ DEVICE_REGISTRY_PROPERTY DeviceProperty,_In_ POOL_TYPE PoolType,_In_opt_ PWDF_OBJECT_ATTRIBUTES PropertyMemoryAttributes,_Out_ WDFMEMORY *PropertyMemory)
NTSTATUS None None.WdfDeviceAssignMofResourceName(_In_ WDFDEVICE Device,_In_ PCUNICODE_STRING MofResourceName)
NTSTATUS None None.WdfDeviceAssignS0IdleSettings(_In_ WDFDEVICE Device,_In_ PWDF_DEVICE_POWER_POLICY_IDLE_SETTINGS Settings)
NTSTATUS None None.WdfDeviceAssignSxWakeSettings(_In_ WDFDEVICE Device,_In_ PWDF_DEVICE_POWER_POLICY_WAKE_SETTINGS Settings)
NTSTATUS None None.WdfDeviceConfigureRequestDispatching(_In_ WDFDEVICE Device,_In_ WDFQUEUE Queue,_In_ WDF_REQUEST_TYPE RequestType)
NTSTATUS None None.WdfDeviceConfigureWdmIrpDispatchCallback(_In_ WDFDEVICE Device,_In_opt_ WDFDRIVER Driver,_In_ UCHAR MajorFunction,_In_ PFN_WDFDEVICE_WDM_IRP_DISPATCH EvtDeviceWdmIrpDispatch,_In_opt_ WDFCONTEXT DriverContext)
NTSTATUS None None.WdfDeviceCreate(_Inout_ PWDFDEVICE_INIT *DeviceInit,_In_opt_ PWDF_OBJECT_ATTRIBUTES DeviceAttributes,_Out_ WDFDEVICE *Device)
NTSTATUS None None.WdfDeviceCreateSymbolicLink(_In_ WDFDEVICE Device,_In_ PCUNICODE_STRING SymbolicLinkName)
NTSTATUS None None.WdfDeviceEnqueueRequest(_In_ WDFDEVICE Device,_In_ WDFREQUEST Request)
NTSTATUS None None.WdfDeviceIndicateWakeStatus(_In_ WDFDEVICE Device,_In_ NTSTATUS WaitWakeStatus)
NTSTATUS None None.WdfDeviceInitAssignName(_In_ PWDFDEVICE_INIT DeviceInit,_In_opt_ PCUNICODE_STRING DeviceName)
NTSTATUS None None.WdfDeviceInitAssignSDDLString(_In_ PWDFDEVICE_INIT DeviceInit,_In_opt_ PCUNICODE_STRING SDDLString)
NTSTATUS None None.WdfDeviceInitAssignWdmIrpPreprocessCallback(_In_ PWDFDEVICE_INIT DeviceInit,_In_ PFN_WDFDEVICE_WDM_IRP_PREPROCESS EvtDeviceWdmIrpPreprocess,_In_ UCHAR MajorFunction,_In_opt_ PUCHAR MinorFunctions,_In_ ULONG NumMinorFunctions)
NTSTATUS None None.WdfDeviceInitRegisterPnpStateChangeCallback(_In_ PWDFDEVICE_INIT DeviceInit,_In_ WDF_DEVICE_PNP_STATE PnpState,_In_ PFN_WDF_DEVICE_PNP_STATE_CHANGE_NOTIFICATION EvtDevicePnpStateChange,_In_ ULONG CallbackTypes)
NTSTATUS None None.WdfDeviceInitRegisterPowerPolicyStateChangeCallback(_In_ PWDFDEVICE_INIT DeviceInit,_In_ WDF_DEVICE_POWER_POLICY_STATE PowerPolicyState,_In_ PFN_WDF_DEVICE_POWER_POLICY_STATE_CHANGE_NOTIFICATION EvtDevicePowerPolicyStateChange,_In_ ULONG CallbackTypes)
NTSTATUS None None.WdfDeviceInitRegisterPowerStateChangeCallback(_In_ PWDFDEVICE_INIT DeviceInit,_In_ WDF_DEVICE_POWER_STATE PowerState,_In_ PFN_WDF_DEVICE_POWER_STATE_CHANGE_NOTIFICATION EvtDevicePowerStateChange,_In_ ULONG CallbackTypes)
NTSTATUS None None.WdfDeviceMiniportCreate(_In_ WDFDRIVER Driver,_In_opt_ PWDF_OBJECT_ATTRIBUTES Attributes,_In_ PDEVICE_OBJECT DeviceObject,_In_opt_ PDEVICE_OBJECT AttachedDeviceObject,_In_opt_ PDEVICE_OBJECT Pdo,_Out_ WDFDEVICE *Device)
NTSTATUS None None.WdfDeviceOpenRegistryKey(_In_ WDFDEVICE Device,_In_ ULONG DeviceInstanceKeyType,_In_ ACCESS_MASK DesiredAccess,_In_opt_ PWDF_OBJECT_ATTRIBUTES KeyAttributes,_Out_ WDFKEY *Key)
NTSTATUS None None.WdfDeviceQueryProperty(_In_ WDFDEVICE Device,_In_ DEVICE_REGISTRY_PROPERTY DeviceProperty,_In_ ULONG BufferLength,_Out_ PVOID PropertyBuffer,_Out_ PULONG ResultLength)
NTSTATUS None None.WdfDeviceRetrieveDeviceName(_In_ WDFDEVICE Device,_In_ WDFSTRING String)
NTSTATUS None None.WdfDeviceStopIdle(_In_ WDFDEVICE Device,_In_ BOOLEAN WaitForD0)
NTSTATUS None None.WdfDeviceWdmAssignPowerFrameworkSettings(_In_ WDFDEVICE Device,_In_ PWDF_POWER_FRAMEWORK_SETTINGS PowerFrameworkSettings)
NTSTATUS None None.WdfDeviceWdmDispatchIrp(_In_ WDFDEVICE Device,_In_ PIRP Irp,_In_ WDFCONTEXT DispatchContext)
NTSTATUS None None.WdfDeviceWdmDispatchIrpToIoQueue(_In_ WDFDEVICE Device,_In_ PIRP Irp,_In_ WDFQUEUE Queue,_In_ ULONG Flags)
NTSTATUS None None.WdfDeviceWdmDispatchPreprocessedIrp(_In_ WDFDEVICE Device,_In_ PIRP Irp)
NTSTATUS None None.WdfDmaEnablerCreate(_In_ WDFDEVICE Device,_In_ PWDF_DMA_ENABLER_CONFIG Config,_In_opt_ PWDF_OBJECT_ATTRIBUTES Attributes,_Out_ WDFDMAENABLER *DmaEnablerHandle)
NTSTATUS None None.WdfDmaTransactionAllocateResources(_In_ WDFDMATRANSACTION DmaTransaction,_In_ WDF_DMA_DIRECTION DmaDirection,_In_ ULONG RequiredMapRegisters,_In_ PFN_WDF_RESERVE_DMA EvtReserveDmaFunction,_In_ PVOID EvtReserveDmaContext)
NTSTATUS None None.WdfDmaTransactionCreate(_In_ WDFDMAENABLER DmaEnabler,_In_opt_ PWDF_OBJECT_ATTRIBUTES Attributes,_Out_ WDFDMATRANSACTION *DmaTransaction)
NTSTATUS None None.WdfDmaTransactionExecute(_In_ WDFDMATRANSACTION DmaTransaction,_In_opt_ WDFCONTEXT Context)
NTSTATUS None None.WdfDmaTransactionInitialize(_In_ WDFDMATRANSACTION DmaTransaction,_In_ PFN_WDF_PROGRAM_DMA EvtProgramDmaFunction,_In_ WDF_DMA_DIRECTION DmaDirection,_In_ PMDL Mdl,_In_ PVOID VirtualAddress,_In_ size_t Length)
NTSTATUS None None.WdfDmaTransactionInitializeUsingOffset(_In_ WDFDMATRANSACTION DmaTransaction,_In_ PFN_WDF_PROGRAM_DMA EvtProgramDmaFunction,_In_ WDF_DMA_DIRECTION DmaDirection,_In_ PMDL Mdl,_In_ size_t Offset,_In_ size_t Length)
NTSTATUS None None.WdfDmaTransactionInitializeUsingRequest(_In_ WDFDMATRANSACTION DmaTransaction,_In_ WDFREQUEST Request,_In_ PFN_WDF_PROGRAM_DMA EvtProgramDmaFunction,_In_ WDF_DMA_DIRECTION DmaDirection)
NTSTATUS None None.WdfDmaTransactionRelease(_In_ WDFDMATRANSACTION DmaTransaction)
NTSTATUS None None.WdfDpcCreate(_In_ PWDF_DPC_CONFIG Config,_In_ PWDF_OBJECT_ATTRIBUTES Attributes,_Out_ WDFDPC *Dpc)
NTSTATUS None None.WdfDriverCreate(_In_ PDRIVER_OBJECT DriverObject,_In_ PCUNICODE_STRING RegistryPath,_In_opt_ PWDF_OBJECT_ATTRIBUTES DriverAttributes,_In_ PWDF_DRIVER_CONFIG DriverConfig,_Out_opt_ WDFDRIVER *Driver)
NTSTATUS None None.WdfDriverOpenParametersRegistryKey(_In_ WDFDRIVER Driver,_In_ ACCESS_MASK DesiredAccess,_In_opt_ PWDF_OBJECT_ATTRIBUTES KeyAttributes,_Out_ WDFKEY *Key)
NTSTATUS None None.WdfDriverRetrieveVersionString(_In_ WDFDRIVER Driver,_In_ WDFSTRING String)
NTSTATUS None None.WdfFdoAddStaticChild(_In_ WDFDEVICE Fdo,_In_ WDFDEVICE Child)
NTSTATUS None None.WdfFdoInitAllocAndQueryPropertyEx(_In_ PWDFDEVICE_INIT DeviceInit,_In_ PWDF_DEVICE_PROPERTY_DATA DeviceProperty,_In_ POOL_TYPE PoolType,_In_opt_ PWDF_OBJECT_ATTRIBUTES PropertyMemoryAttributes,_Out_ WDFMEMORY *PropertyMemory,_Out_ PDEVPROPTYPE Type)
NTSTATUS None None.WdfFdoInitAllocAndQueryProperty(_In_ PWDFDEVICE_INIT DeviceInit,_In_ DEVICE_REGISTRY_PROPERTY DeviceProperty,_In_ POOL_TYPE PoolType,_In_opt_ PWDF_OBJECT_ATTRIBUTES PropertyMemoryAttributes,_Out_ WDFMEMORY *PropertyMemory)
NTSTATUS None None.WdfFdoInitOpenRegistryKey(_In_ PWDFDEVICE_INIT DeviceInit,_In_ ULONG DeviceInstanceKeyType,_In_ ACCESS_MASK DesiredAccess,_In_opt_ PWDF_OBJECT_ATTRIBUTES KeyAttributes,_Out_ WDFKEY *Key)
NTSTATUS None None.WdfFdoInitQueryProperty(_In_ PWDFDEVICE_INIT DeviceInit,_In_ DEVICE_REGISTRY_PROPERTY DeviceProperty,_In_ ULONG BufferLength,_Out_ PVOID PropertyBuffer,_Out_ PULONG ResultLength)
NTSTATUS None None.WdfFdoQueryForInterface(_In_ WDFDEVICE Device,_In_ LPCGUID InterfaceType,_Out_ PINTERFACE Interface,_In_ USHORT Size,_In_ USHORT Version,_In_opt_ PVOID InterfaceSpecificData)
NTSTATUS None None.WdfInterruptCreate(_In_ WDFDEVICE Device,_In_ PWDF_INTERRUPT_CONFIG Configuration,_In_opt_ PWDF_OBJECT_ATTRIBUTES Attributes,_Out_ WDFINTERRUPT *Interrupt)
NTSTATUS None None.WdfIoQueueAssignForwardProgressPolicy(_In_ WDFQUEUE Queue,_In_ PWDF_IO_QUEUE_FORWARD_PROGRESS_POLICY ForwardProgressPolicy)
NTSTATUS None None.WdfIoQueueCreate(_In_ WDFDEVICE Device,_In_ PWDF_IO_QUEUE_CONFIG Config,_In_opt_ PWDF_OBJECT_ATTRIBUTES QueueAttributes,_Out_opt_ WDFQUEUE *Queue)
NTSTATUS None None.WdfIoQueueFindRequest(_In_ WDFQUEUE Queue,_In_opt_ WDFREQUEST FoundRequest,_In_opt_ WDFFILEOBJECT FileObject,_Inout_ PWDF_REQUEST_PARAMETERS Parameters,_Out_ WDFREQUEST *OutRequest)
NTSTATUS None None.WdfIoQueueReadyNotify(_In_ WDFQUEUE Queue,_In_opt_ PFN_WDF_IO_QUEUE_STATE QueueReady,_In_opt_ WDFCONTEXT Context)
NTSTATUS None None.WdfIoQueueRetrieveFoundRequest(_In_ WDFQUEUE Queue,_In_ WDFREQUEST FoundRequest,_Out_ WDFREQUEST *OutRequest)
NTSTATUS None None.WdfIoQueueRetrieveNextRequest(_In_ WDFQUEUE Queue,_Out_ WDFREQUEST *OutRequest)
NTSTATUS None None.WdfIoQueueRetrieveRequestByFileObject(_In_ WDFQUEUE Queue,_In_ WDFFILEOBJECT FileObject,_Out_ WDFREQUEST *OutRequest)
NTSTATUS None None.WdfIoResourceListAppendDescriptor(_In_ WDFIORESLIST ResourceList,_In_ PIO_RESOURCE_DESCRIPTOR Descriptor)
NTSTATUS None None.WdfIoResourceListCreate(_In_ WDFIORESREQLIST RequirementsList,_In_opt_ PWDF_OBJECT_ATTRIBUTES Attributes,_Out_ WDFIORESLIST *ResourceList)
NTSTATUS None None.WdfIoResourceListInsertDescriptor(_In_ WDFIORESLIST ResourceList,_In_ PIO_RESOURCE_DESCRIPTOR Descriptor,_In_ ULONG Index)
NTSTATUS None None.WdfIoResourceRequirementsListAppendIoResList(_In_ WDFIORESREQLIST RequirementsList,_In_ WDFIORESLIST IoResList)
NTSTATUS None None.WdfIoResourceRequirementsListInsertIoResList(_In_ WDFIORESREQLIST RequirementsList,_In_ WDFIORESLIST IoResList,_In_ ULONG Index)
NTSTATUS None None.WdfIoTargetAllocAndQueryTargetProperty(_In_ WDFIOTARGET IoTarget,_In_ DEVICE_REGISTRY_PROPERTY DeviceProperty,_In_ POOL_TYPE PoolType,_In_opt_ PWDF_OBJECT_ATTRIBUTES PropertyMemoryAttributes,_Out_ WDFMEMORY *PropertyMemory)
NTSTATUS None None.WdfIoTargetCreate(_In_ WDFDEVICE Device,_In_opt_ PWDF_OBJECT_ATTRIBUTES IoTargetAttributes,_Out_ WDFIOTARGET *IoTarget)
NTSTATUS None None.WdfIoTargetFormatRequestForInternalIoctl(_In_ WDFIOTARGET IoTarget,_In_ WDFREQUEST Request,_In_ ULONG IoctlCode,_In_opt_ WDFMEMORY InputBuffer,_In_opt_ PWDFMEMORY_OFFSET InputBufferOffset,_In_opt_ WDFMEMORY OutputBuffer,_In_opt_ PWDFMEMORY_OFFSET OutputBufferOffset)
NTSTATUS None None.WdfIoTargetFormatRequestForInternalIoctlOthers(_In_ WDFIOTARGET IoTarget,_In_ WDFREQUEST Request,_In_ ULONG IoctlCode,_In_opt_ WDFMEMORY OtherArg1,_In_opt_ PWDFMEMORY_OFFSET OtherArg1Offset,_In_opt_ WDFMEMORY OtherArg2,_In_opt_ PWDFMEMORY_OFFSET OtherArg2Offset,_In_opt_ WDFMEMORY OtherArg4,_In_opt_ PWDFMEMORY_OFFSET OtherArg4Offset)
NTSTATUS None None.WdfIoTargetFormatRequestForIoctl(_In_ WDFIOTARGET IoTarget,_In_ WDFREQUEST Request,_In_ ULONG IoctlCode,_In_opt_ WDFMEMORY InputBuffer,_In_opt_ PWDFMEMORY_OFFSET InputBufferOffset,_In_opt_ WDFMEMORY OutputBuffer,_In_opt_ PWDFMEMORY_OFFSET OutputBufferOffset)
NTSTATUS None None.WdfIoTargetFormatRequestForRead(_In_ WDFIOTARGET IoTarget,_In_ WDFREQUEST Request,_In_opt_ WDFMEMORY OutputBuffer,_In_opt_ PWDFMEMORY_OFFSET OutputBufferOffset,_In_opt_ PLONGLONG DeviceOffset)
NTSTATUS None None.WdfIoTargetFormatRequestForWrite(_In_ WDFIOTARGET IoTarget,_In_ WDFREQUEST Request,_In_opt_ WDFMEMORY InputBuffer,_In_opt_ PWDFMEMORY_OFFSET InputBufferOffset,_In_opt_ PLONGLONG DeviceOffset)
NTSTATUS None None.WdfIoTargetOpen(_In_ WDFIOTARGET IoTarget,_In_ PWDF_IO_TARGET_OPEN_PARAMS OpenParams)
NTSTATUS None None.WdfIoTargetQueryForInterface(_In_ WDFIOTARGET IoTarget,_In_ LPCGUID InterfaceType,_Out_ PINTERFACE Interface,_In_ USHORT Size,_In_ USHORT Version,_In_opt_ PVOID InterfaceSpecificData)
NTSTATUS None None.WdfIoTargetQueryTargetProperty(_In_ WDFIOTARGET IoTarget,_In_ DEVICE_REGISTRY_PROPERTY DeviceProperty,_In_ ULONG BufferLength,_Out_opt_ PVOID PropertyBuffer,_Out_ PULONG ResultLength)
NTSTATUS None None.WdfIoTargetSendInternalIoctlOthersSynchronously(_In_ WDFIOTARGET IoTarget,_In_opt_ WDFREQUEST Request,_In_ ULONG IoctlCode,_In_opt_ PWDF_MEMORY_DESCRIPTOR OtherArg1,_In_opt_ PWDF_MEMORY_DESCRIPTOR OtherArg2,_In_opt_ PWDF_MEMORY_DESCRIPTOR OtherArg4,_In_opt_ PWDF_REQUEST_SEND_OPTIONS RequestOptions,_Out_opt_ PULONG_PTR BytesReturned)
NTSTATUS None None.WdfIoTargetSendInternalIoctlSynchronously(_In_ WDFIOTARGET IoTarget,_In_opt_ WDFREQUEST Request,_In_ ULONG IoctlCode,_In_opt_ PWDF_MEMORY_DESCRIPTOR InputBuffer,_In_opt_ PWDF_MEMORY_DESCRIPTOR OutputBuffer,_In_opt_ PWDF_REQUEST_SEND_OPTIONS RequestOptions,_Out_opt_ PULONG_PTR BytesReturned)
NTSTATUS None None.WdfIoTargetSendIoctlSynchronously(_In_ WDFIOTARGET IoTarget,_In_opt_ WDFREQUEST Request,_In_ ULONG IoctlCode,_In_opt_ PWDF_MEMORY_DESCRIPTOR InputBuffer,_In_opt_ PWDF_MEMORY_DESCRIPTOR OutputBuffer,_In_opt_ PWDF_REQUEST_SEND_OPTIONS RequestOptions,_Out_opt_ PULONG_PTR BytesReturned)
NTSTATUS None None.WdfIoTargetSendReadSynchronously(_In_ WDFIOTARGET IoTarget,_In_opt_ WDFREQUEST Request,_In_opt_ PWDF_MEMORY_DESCRIPTOR OutputBuffer,_In_opt_ PLONGLONG DeviceOffset,_In_opt_ PWDF_REQUEST_SEND_OPTIONS RequestOptions,_Out_opt_ PULONG_PTR BytesRead)
NTSTATUS None None.WdfIoTargetSendWriteSynchronously(_In_ WDFIOTARGET IoTarget,_In_opt_ WDFREQUEST Request,_In_opt_ PWDF_MEMORY_DESCRIPTOR InputBuffer,_In_opt_ PLONGLONG DeviceOffset,_In_opt_ PWDF_REQUEST_SEND_OPTIONS RequestOptions,_Out_opt_ PULONG_PTR BytesWritten)
NTSTATUS None None.WdfIoTargetStart(_In_ WDFIOTARGET IoTarget)
NTSTATUS None None.WdfLookasideListCreate(_In_opt_ PWDF_OBJECT_ATTRIBUTES LookasideAttributes,_In_ size_t BufferSize,_In_ POOL_TYPE PoolType,_In_opt_ PWDF_OBJECT_ATTRIBUTES MemoryAttributes,_In_opt_ ULONG PoolTag,_Out_ WDFLOOKASIDE *Lookaside)
NTSTATUS None None.WdfMemoryAssignBuffer(_In_ WDFMEMORY Memory,_In_ PVOID Buffer,_In_ size_t BufferSize)
NTSTATUS None None.WdfMemoryCopyFromBuffer(_In_ WDFMEMORY DestinationMemory,_In_ size_t DestinationOffset,_In_ PVOID Buffer,_In_ size_t NumBytesToCopyFrom)
NTSTATUS None None.WdfMemoryCopyToBuffer(_In_ WDFMEMORY SourceMemory,_In_ size_t SourceOffset,_Out_ PVOID Buffer,_In_ size_t NumBytesToCopyTo)
NTSTATUS None None.WdfMemoryCreateFromLookaside(_In_ WDFLOOKASIDE Lookaside,_Out_ WDFMEMORY *Memory)
NTSTATUS None None.WdfMemoryCreate(_In_opt_ PWDF_OBJECT_ATTRIBUTES Attributes,_In_ POOL_TYPE PoolType,_In_opt_ ULONG PoolTag,_In_ size_t BufferSize,_Out_ WDFMEMORY *Memory,_Out_opt_ PVOID *Buffer)
NTSTATUS None None.WdfMemoryCreatePreallocated(_In_opt_ PWDF_OBJECT_ATTRIBUTES Attributes,_In_ PVOID Buffer,_In_ size_t BufferSize,_Out_ WDFMEMORY *Memory)
NTSTATUS None None.WdfObjectAllocateContext(_In_ WDFOBJECT Handle,_In_ PWDF_OBJECT_ATTRIBUTES ContextAttributes,_Out_ PVOID *Context)
NTSTATUS None None.WdfObjectCreate(_In_opt_ PWDF_OBJECT_ATTRIBUTES Attributes,_Out_ WDFOBJECT *Object)
NTSTATUS None None.WdfPdoAddEjectionRelationsPhysicalDevice(_In_ WDFDEVICE Device,_In_ PDEVICE_OBJECT PhysicalDevice)
NTSTATUS None None.WdfPdoInitAddCompatibleID(_In_ PWDFDEVICE_INIT DeviceInit,_In_ PCUNICODE_STRING CompatibleID)
NTSTATUS None None.WdfPdoInitAddDeviceText(_In_ PWDFDEVICE_INIT DeviceInit,_In_ PCUNICODE_STRING DeviceDescription,_In_ PCUNICODE_STRING DeviceLocation,_In_ LCID LocaleId)
NTSTATUS None None.WdfPdoInitAddHardwareID(_In_ PWDFDEVICE_INIT DeviceInit,_In_ PCUNICODE_STRING HardwareID)
NTSTATUS None None.WdfPdoInitAssignContainerID(_In_ PWDFDEVICE_INIT DeviceInit,_In_ PCUNICODE_STRING ContainerID)
NTSTATUS None None.WdfPdoInitAssignDeviceID(_In_ PWDFDEVICE_INIT DeviceInit,_In_ PCUNICODE_STRING DeviceID)
NTSTATUS None None.WdfPdoInitAssignInstanceID(_In_ PWDFDEVICE_INIT DeviceInit,_In_ PCUNICODE_STRING InstanceID)
NTSTATUS None None.WdfPdoMarkMissing(_In_ WDFDEVICE Device)
NTSTATUS None None.WdfPdoRetrieveAddressDescription(_In_ WDFDEVICE Device,_Inout_ PWDF_CHILD_ADDRESS_DESCRIPTION_HEADER AddressDescription)
NTSTATUS None None.WdfPdoRetrieveIdentificationDescription(_In_ WDFDEVICE Device,_Inout_ PWDF_CHILD_IDENTIFICATION_DESCRIPTION_HEADER IdentificationDescription)
NTSTATUS None None.WdfPdoUpdateAddressDescription(_In_ WDFDEVICE Device,_Inout_ PWDF_CHILD_ADDRESS_DESCRIPTION_HEADER AddressDescription)
NTSTATUS None None.WdfRegistryAssignMemory(_In_ WDFKEY Key,_In_ PCUNICODE_STRING ValueName,_In_ ULONG ValueType,_In_ WDFMEMORY Memory,_In_opt_ PWDFMEMORY_OFFSET MemoryOffsets)
NTSTATUS None None.WdfRegistryAssignMultiString(_In_ WDFKEY Key,_In_ PCUNICODE_STRING ValueName,_In_ WDFCOLLECTION StringsCollection)
NTSTATUS None None.WdfRegistryAssignString(_In_ WDFKEY Key,_In_ PCUNICODE_STRING ValueName,_In_ WDFSTRING String)
NTSTATUS None None.WdfRegistryAssignULong(_In_ WDFKEY Key,_In_ PCUNICODE_STRING ValueName,_In_ ULONG Value)
NTSTATUS None None.WdfRegistryAssignUnicodeString(_In_ WDFKEY Key,_In_ PCUNICODE_STRING ValueName,_In_ PCUNICODE_STRING Value)
NTSTATUS None None.WdfRegistryAssignValue(_In_ WDFKEY Key,_In_ PCUNICODE_STRING ValueName,_In_ ULONG ValueType,_In_ ULONG ValueLength,_In_ PVOID Value)
NTSTATUS None None.WdfRegistryCreateKey(_In_opt_ WDFKEY ParentKey,_In_ PCUNICODE_STRING KeyName,_In_ ACCESS_MASK DesiredAccess,_In_ ULONG CreateOptions,_Out_opt_ PULONG CreateDisposition,_In_opt_ PWDF_OBJECT_ATTRIBUTES KeyAttributes,_Out_ WDFKEY *Key)
NTSTATUS None None.WdfRegistryOpenKey(_In_opt_ WDFKEY ParentKey,_In_ PCUNICODE_STRING KeyName,_In_ ACCESS_MASK DesiredAccess,_In_opt_ PWDF_OBJECT_ATTRIBUTES KeyAttributes,_Out_ WDFKEY *Key)
NTSTATUS None None.WdfRegistryQueryMemory(_In_ WDFKEY Key,_In_ PCUNICODE_STRING ValueName,_In_ POOL_TYPE PoolType,_In_opt_ PWDF_OBJECT_ATTRIBUTES MemoryAttributes,_Out_ WDFMEMORY *Memory,_Out_opt_ PULONG ValueType)
NTSTATUS None None.WdfRegistryQueryMultiString(_In_ WDFKEY Key,_In_ PCUNICODE_STRING ValueName,_In_opt_ PWDF_OBJECT_ATTRIBUTES StringsAttributes,_In_ WDFCOLLECTION Collection)
NTSTATUS None None.WdfRegistryQueryString(_In_ WDFKEY Key,_In_ PCUNICODE_STRING ValueName,_In_ WDFSTRING String)
NTSTATUS None None.WdfRegistryQueryULong(_In_ WDFKEY Key,_In_ PCUNICODE_STRING ValueName,_Out_ PULONG Value)
NTSTATUS None None.WdfRegistryQueryUnicodeString(_In_ WDFKEY Key,_In_ PCUNICODE_STRING ValueName,_Out_opt_ PUSHORT ValueByteLength,_Inout_ PUNICODE_STRING Value)
NTSTATUS None None.WdfRegistryQueryValue(_In_ WDFKEY Key,_In_ PCUNICODE_STRING ValueName,_In_ ULONG ValueLength,_Out_opt_ PVOID Value,_Out_opt_ PULONG ValueLengthQueried,_Out_opt_ PULONG ValueType)
NTSTATUS None None.WdfRegistryRemoveKey(_In_ WDFKEY Key)
NTSTATUS None None.WdfRegistryRemoveValue(_In_ WDFKEY Key,_In_ PCUNICODE_STRING ValueName)
NTSTATUS None None.WdfRequestAllocateTimer(_In_ WDFREQUEST Request)
NTSTATUS None None.WdfRequestChangeTarget(_In_ WDFREQUEST Request,_In_ WDFIOTARGET IoTarget)
NTSTATUS None None.WdfRequestCreateFromIrp(_In_opt_ PWDF_OBJECT_ATTRIBUTES RequestAttributes,_In_ PIRP Irp,_In_ BOOLEAN RequestFreesIrp,_Out_ WDFREQUEST *Request)
NTSTATUS None None.WdfRequestCreate(_In_opt_ PWDF_OBJECT_ATTRIBUTES RequestAttributes,_In_opt_ WDFIOTARGET IoTarget,_Out_ WDFREQUEST *Request)
NTSTATUS None None.WdfRequestForwardToIoQueue(_In_ WDFREQUEST Request,_In_ WDFQUEUE DestinationQueue)
NTSTATUS None None.WdfRequestForwardToParentDeviceIoQueue(_In_ WDFREQUEST Request,_In_ WDFQUEUE ParentDeviceQueue,_In_ PWDF_REQUEST_FORWARD_OPTIONS ForwardOptions)
NTSTATUS None None.WdfRequestGetStatus(_In_ WDFREQUEST Request)
NTSTATUS None None.WdfRequestMarkCancelableEx(_In_ WDFREQUEST Request,_In_ PFN_WDF_REQUEST_CANCEL EvtRequestCancel)
NTSTATUS None None.WdfRequestProbeAndLockUserBufferForRead(_In_ WDFREQUEST Request,_In_ PVOID Buffer,_In_ size_t Length,_Out_ WDFMEMORY *MemoryObject)
NTSTATUS None None.WdfRequestProbeAndLockUserBufferForWrite(_In_ WDFREQUEST Request,_In_ PVOID Buffer,_In_ size_t Length,_Out_ WDFMEMORY *MemoryObject)
NTSTATUS None None.WdfRequestRequeue(_In_ WDFREQUEST Request)
NTSTATUS None None.WdfRequestRetrieveInputBuffer(_In_ WDFREQUEST Request,_In_ size_t MinimumRequiredSize,_Out_ PVOID *Buffer,_Out_opt_ size_t *Length)
NTSTATUS None None.WdfRequestRetrieveInputMemory(_In_ WDFREQUEST Request,_Out_ WDFMEMORY *Memory)
NTSTATUS None None.WdfRequestRetrieveInputWdmMdl(_In_ WDFREQUEST Request,_Out_ PMDL *Mdl)
NTSTATUS None None.WdfRequestRetrieveOutputBuffer(_In_ WDFREQUEST Request,_In_ size_t MinimumRequiredSize,_Out_ PVOID *Buffer,_Out_opt_ size_t *Length)
NTSTATUS None None.WdfRequestRetrieveOutputMemory(_In_ WDFREQUEST Request,_Out_ WDFMEMORY *Memory)
NTSTATUS None None.WdfRequestRetrieveOutputWdmMdl(_In_ WDFREQUEST Request,_Out_ PMDL *Mdl)
NTSTATUS None None.WdfRequestRetrieveUnsafeUserInputBuffer(_In_ WDFREQUEST Request,_In_ size_t MinimumRequiredLength,_Out_ PVOID *InputBuffer,_Out_opt_ size_t *Length)
NTSTATUS None None.WdfRequestRetrieveUnsafeUserOutputBuffer(_In_ WDFREQUEST Request,_In_ size_t MinimumRequiredLength,_Out_ PVOID *OutputBuffer,_Out_opt_ size_t *Length)
NTSTATUS None None.WdfRequestReuse(_In_ WDFREQUEST Request,_In_ PWDF_REQUEST_REUSE_PARAMS ReuseParams)
NTSTATUS None None.WdfRequestUnmarkCancelable(_In_ WDFREQUEST Request)
NTSTATUS None None.WdfSpinLockCreate(_In_opt_ PWDF_OBJECT_ATTRIBUTES SpinLockAttributes,_Out_ WDFSPINLOCK *SpinLock)
NTSTATUS None None.WdfStringCreate(_In_opt_ PCUNICODE_STRING UnicodeString,_In_opt_ PWDF_OBJECT_ATTRIBUTES StringAttributes,_Out_ WDFSTRING *String)
NTSTATUS None None.WdfTimerCreate(_In_ PWDF_TIMER_CONFIG Config,_In_ PWDF_OBJECT_ATTRIBUTES Attributes,_Out_ WDFTIMER *Timer)
NTSTATUS None None.WdfUsbInterfaceSelectSetting(_In_ WDFUSBINTERFACE UsbInterface,_In_opt_ PWDF_OBJECT_ATTRIBUTES PipesAttributes,_In_ PWDF_USB_INTERFACE_SELECT_SETTING_PARAMS Params)
NTSTATUS None None.WdfUsbTargetDeviceAllocAndQueryString(_In_ WDFUSBDEVICE UsbDevice,_In_opt_ PWDF_OBJECT_ATTRIBUTES StringMemoryAttributes,_Out_ WDFMEMORY *StringMemory,_Out_opt_ PUSHORT NumCharacters,_In_ UCHAR StringIndex,_In_opt_ USHORT LangID)
NTSTATUS None None.WdfUsbTargetDeviceCreate(_In_ WDFDEVICE Device,_In_opt_ PWDF_OBJECT_ATTRIBUTES Attributes,_Out_ WDFUSBDEVICE *UsbDevice)
NTSTATUS None None.WdfUsbTargetDeviceCreateIsochUrb(_In_ WDFUSBDEVICE UsbDevice,_In_opt_ PWDF_OBJECT_ATTRIBUTES Attributes,_In_ ULONG NumberOfIsochPackets,_Out_ WDFMEMORY *UrbMemory,_Out_opt_ PURB *Urb)
NTSTATUS None None.WdfUsbTargetDeviceCreateUrb(_In_ WDFUSBDEVICE UsbDevice,_In_opt_ PWDF_OBJECT_ATTRIBUTES Attributes,_Out_ WDFMEMORY *UrbMemory,_Out_opt_ PURB *Urb)
NTSTATUS None None.WdfUsbTargetDeviceCreateWithParameters(_In_ WDFDEVICE Device,_In_ PWDF_USB_DEVICE_CREATE_CONFIG Config,_In_opt_ PWDF_OBJECT_ATTRIBUTES Attributes,_Out_ WDFUSBDEVICE *UsbDevice)
NTSTATUS None None.WdfUsbTargetDeviceCyclePortSynchronously(_In_ WDFUSBDEVICE UsbDevice)
NTSTATUS None None.WdfUsbTargetDeviceFormatRequestForControlTransfer(_In_ WDFUSBDEVICE UsbDevice,_In_ WDFREQUEST Request,_In_ PWDF_USB_CONTROL_SETUP_PACKET SetupPacket,_In_opt_ WDFMEMORY TransferMemory,_In_opt_ PWDFMEMORY_OFFSET TransferOffset)
NTSTATUS None None.WdfUsbTargetDeviceFormatRequestForCyclePort(_In_ WDFUSBDEVICE UsbDevice,_In_ WDFREQUEST Request)
NTSTATUS None None.WdfUsbTargetDeviceFormatRequestForString(_In_ WDFUSBDEVICE UsbDevice,_In_ WDFREQUEST Request,_In_ WDFMEMORY Memory,_In_opt_ PWDFMEMORY_OFFSET Offset,_In_ UCHAR StringIndex,_In_opt_ USHORT LangID)
NTSTATUS None None.WdfUsbTargetDeviceFormatRequestForUrb(_In_ WDFUSBDEVICE UsbDevice,_In_ WDFREQUEST Request,_In_ WDFMEMORY UrbMemory,_In_opt_ PWDFMEMORY_OFFSET UrbMemoryOffset)
NTSTATUS None None.WdfUsbTargetDeviceIsConnectedSynchronous(_In_ WDFUSBDEVICE UsbDevice)
NTSTATUS None None.WdfUsbTargetDeviceQueryString(_In_ WDFUSBDEVICE UsbDevice,_In_opt_ WDFREQUEST Request,_In_opt_ PWDF_REQUEST_SEND_OPTIONS RequestOptions,_Out_opt_ PUSHORT String,_Inout_ PUSHORT NumCharacters,_In_ UCHAR StringIndex,_In_opt_ USHORT LangID)
NTSTATUS None None.WdfUsbTargetDeviceResetPortSynchronously(_In_ WDFUSBDEVICE UsbDevice)
NTSTATUS None None.WdfUsbTargetDeviceRetrieveConfigDescriptor(_In_ WDFUSBDEVICE UsbDevice,_Out_ PVOID ConfigDescriptor,_Inout_ PUSHORT ConfigDescriptorLength)
NTSTATUS None None.WdfUsbTargetDeviceRetrieveCurrentFrameNumber(_In_ WDFUSBDEVICE UsbDevice,_Out_ PULONG CurrentFrameNumber)
NTSTATUS None None.WdfUsbTargetDeviceRetrieveInformation(_In_ WDFUSBDEVICE UsbDevice,_Out_ PWDF_USB_DEVICE_INFORMATION Information)
NTSTATUS None None.WdfUsbTargetDeviceSelectConfig(_In_ WDFUSBDEVICE UsbDevice,_In_opt_ PWDF_OBJECT_ATTRIBUTES PipeAttributes,_Inout_ PWDF_USB_DEVICE_SELECT_CONFIG_PARAMS Params)
NTSTATUS None None.WdfUsbTargetDeviceSendControlTransferSynchronously(_In_ WDFUSBDEVICE UsbDevice,_In_opt_ WDFREQUEST Request,_In_opt_ PWDF_REQUEST_SEND_OPTIONS RequestOptions,_In_ PWDF_USB_CONTROL_SETUP_PACKET SetupPacket,_In_opt_ PWDF_MEMORY_DESCRIPTOR MemoryDescriptor,_Out_opt_ PULONG BytesTransferred)
NTSTATUS None None.WdfUsbTargetDeviceSendUrbSynchronously(_In_ WDFUSBDEVICE UsbDevice,_In_opt_ WDFREQUEST Request,_In_opt_ PWDF_REQUEST_SEND_OPTIONS RequestOptions,_In_ PURB Urb)
NTSTATUS None None.WdfUsbTargetPipeAbortSynchronously(_In_ WDFUSBPIPE Pipe,_In_opt_ WDFREQUEST Request,_In_opt_ PWDF_REQUEST_SEND_OPTIONS RequestOptions)
NTSTATUS None None.WdfUsbTargetPipeConfigContinuousReader(_In_ WDFUSBPIPE Pipe,_In_ PWDF_USB_CONTINUOUS_READER_CONFIG Config)
NTSTATUS None None.WdfUsbTargetPipeFormatRequestForAbort(_In_ WDFUSBPIPE Pipe,_In_ WDFREQUEST Request)
NTSTATUS None None.WdfUsbTargetPipeFormatRequestForRead(_In_ WDFUSBPIPE Pipe,_In_ WDFREQUEST Request,_In_opt_ WDFMEMORY ReadMemory,_In_opt_ PWDFMEMORY_OFFSET ReadOffset)
NTSTATUS None None.WdfUsbTargetPipeFormatRequestForReset(_In_ WDFUSBPIPE Pipe,_In_ WDFREQUEST Request)
NTSTATUS None None.WdfUsbTargetPipeFormatRequestForUrb(_In_ WDFUSBPIPE Pipe,_In_ WDFREQUEST Request,_In_ WDFMEMORY UrbMemory,_In_opt_ PWDFMEMORY_OFFSET UrbMemoryOffset)
NTSTATUS None None.WdfUsbTargetPipeFormatRequestForWrite(_In_ WDFUSBPIPE Pipe,_In_ WDFREQUEST Request,_In_opt_ WDFMEMORY WriteMemory,_In_opt_ PWDFMEMORY_OFFSET WriteOffset)
NTSTATUS None None.WdfUsbTargetPipeReadSynchronously(_In_ WDFUSBPIPE Pipe,_In_opt_ WDFREQUEST Request,_In_opt_ PWDF_REQUEST_SEND_OPTIONS RequestOptions,_In_opt_ PWDF_MEMORY_DESCRIPTOR MemoryDescriptor,_Out_opt_ PULONG BytesRead)
NTSTATUS None None.WdfUsbTargetPipeResetSynchronously(_In_ WDFUSBPIPE Pipe,_In_opt_ WDFREQUEST Request,_In_opt_ PWDF_REQUEST_SEND_OPTIONS RequestOptions)
NTSTATUS None None.WdfUsbTargetPipeSendUrbSynchronously(_In_ WDFUSBPIPE Pipe,_In_opt_ WDFREQUEST Request,_In_opt_ PWDF_REQUEST_SEND_OPTIONS RequestOptions,_In_ PURB Urb)
NTSTATUS None None.WdfUsbTargetPipeWriteSynchronously(_In_ WDFUSBPIPE Pipe,_In_opt_ WDFREQUEST Request,_In_opt_ PWDF_REQUEST_SEND_OPTIONS RequestOptions,_In_opt_ PWDF_MEMORY_DESCRIPTOR MemoryDescriptor,_Out_opt_ PULONG BytesWritten)
NTSTATUS None None.WdfWaitLockAcquire(_In_ WDFWAITLOCK Lock,_In_opt_ PLONGLONG Timeout)
NTSTATUS None None.WdfWaitLockCreate(_In_opt_ PWDF_OBJECT_ATTRIBUTES LockAttributes,_Out_ WDFWAITLOCK *Lock)
NTSTATUS None None.WdfWmiInstanceCreate(_In_ WDFDEVICE Device,_In_ PWDF_WMI_INSTANCE_CONFIG InstanceConfig,_In_opt_ PWDF_OBJECT_ATTRIBUTES InstanceAttributes,_Out_opt_ WDFWMIINSTANCE *Instance)
NTSTATUS None None.WdfWmiInstanceFireEvent(_In_ WDFWMIINSTANCE WmiInstance,_In_opt_ ULONG EventDataSize,_In_opt_ PVOID EventData)
NTSTATUS None None.WdfWmiInstanceRegister(_In_ WDFWMIINSTANCE WmiInstance)
NTSTATUS None None.WdfWmiProviderCreate(_In_ WDFDEVICE Device,_In_ PWDF_WMI_PROVIDER_CONFIG WmiProviderConfig,_In_opt_ PWDF_OBJECT_ATTRIBUTES ProviderAttributes,_Out_ WDFWMIPROVIDER *WmiProvider)
NTSTATUS None None.WdfWorkItemCreate(_In_ PWDF_WORKITEM_CONFIG Config,_In_ PWDF_OBJECT_ATTRIBUTES Attributes,_Out_ WDFWORKITEM *WorkItem)
NTSTATUS None None.ZwAllocateVirtualMemory(_In_ HANDLE ProcessHandle,_Inout_ PVOID *BaseAddress,_In_ ULONG_PTR ZeroBits,_Inout_ PSIZE_T RegionSize,_In_ ULONG AllocationType,_In_ ULONG Protect)
NTSTATUS None None.ZwClose(_In_ HANDLE Handle)
NTSTATUS None None.ZwCommitComplete(_In_ HANDLE EnlistmentHandle,_In_opt_ PLARGE_INTEGER TmVirtualClock)
NTSTATUS None None.ZwCommitEnlistment(_In_ HANDLE EnlistmentHandle,_In_opt_ PLARGE_INTEGER TmVirtualClock)
NTSTATUS None None.ZwCommitTransaction(_In_ HANDLE TransactionHandle,_In_ BOOLEAN Wait)
NTSTATUS None None.ZwCreateDirectoryObject(_Out_ PHANDLE DirectoryHandle,_In_ ACCESS_MASK DesiredAccess,_In_ POBJECT_ATTRIBUTES ObjectAttributes)
NTSTATUS None None.ZwCreateEnlistment(_Out_ PHANDLE EnlistmentHandle,_In_ ACCESS_MASK DesiredAccess,_In_ HANDLE ResourceManagerHandle,_In_ HANDLE TransactionHandle,_In_opt_ POBJECT_ATTRIBUTES ObjectAttributes,_In_opt_ ULONG CreateOptions,_In_ NOTIFICATION_MASK NotificationMask,_In_opt_ PVOID EnlistmentKey)
NTSTATUS None None.ZwCreateEvent(_Out_ PHANDLE EventHandle,_In_ ACCESS_MASK DesiredAccess,_In_opt_ POBJECT_ATTRIBUTES ObjectAttributes,_In_ EVENT_TYPE EventType,_In_ BOOLEAN InitialState)
NTSTATUS None None.ZwCreateFile(_Out_ PHANDLE FileHandle,_In_ ACCESS_MASK DesiredAccess,_In_ POBJECT_ATTRIBUTES ObjectAttributes,_Out_ PIO_STATUS_BLOCK IoStatusBlock,_In_opt_ PLARGE_INTEGER AllocationSize,_In_ ULONG FileAttributes,_In_ ULONG ShareAccess,_In_ ULONG CreateDisposition,_In_ ULONG CreateOptions,_In_opt_ PVOID EaBuffer,_In_ ULONG EaLength)
NTSTATUS None None.ZwCreateKey(_Out_ PHANDLE KeyHandle,_In_ ACCESS_MASK DesiredAccess,_In_ POBJECT_ATTRIBUTES ObjectAttributes,_Reserved_ ULONG TitleIndex,_In_opt_ PUNICODE_STRING Class,_In_ ULONG CreateOptions,_Out_opt_ PULONG Disposition)
NTSTATUS None None.ZwCreateKeyTransacted(_Out_ PHANDLE KeyHandle,_In_ ACCESS_MASK DesiredAccess,_In_ POBJECT_ATTRIBUTES ObjectAttributes,_Reserved_ ULONG TitleIndex,_In_opt_ PUNICODE_STRING Class,_In_ ULONG CreateOptions,_In_ HANDLE TransactionHandle,_Out_opt_ PULONG Disposition)
NTSTATUS None None.ZwCreateResourceManager(_Out_ PHANDLE ResourceManagerHandle,_In_ ACCESS_MASK DesiredAccess,_In_ HANDLE TmHandle,_In_opt_ LPGUID ResourceManagerGuid,_In_opt_ POBJECT_ATTRIBUTES ObjectAttributes,_In_opt_ ULONG CreateOptions,_In_opt_ PUNICODE_STRING Description)
NTSTATUS None None.ZwCreateTransactionManager(_Out_ PHANDLE TmHandle,_In_ ACCESS_MASK DesiredAccess,_In_opt_ POBJECT_ATTRIBUTES ObjectAttributes,_In_opt_ PUNICODE_STRING LogFileName,_In_opt_ ULONG CreateOptions,_In_opt_ ULONG CommitStrength)
NTSTATUS None None.ZwCreateTransaction(_Out_ PHANDLE TransactionHandle,_In_ ACCESS_MASK DesiredAccess,_In_opt_ POBJECT_ATTRIBUTES ObjectAttributes,_In_opt_ LPGUID Uow,_In_opt_ HANDLE TmHandle,_In_opt_ ULONG CreateOptions,_In_opt_ ULONG IsolationLevel,_In_opt_ ULONG IsolationFlags,_In_opt_ PLARGE_INTEGER Timeout,_In_opt_ PUNICODE_STRING Description)
NTSTATUS None None.ZwDeleteFile(_In_ POBJECT_ATTRIBUTES ObjectAttributes)
NTSTATUS None None.ZwDeleteKey(_In_ HANDLE KeyHandle)
NTSTATUS None None.ZwDeleteValueKey(_In_ HANDLE KeyHandle,_In_ PUNICODE_STRING ValueName)
NTSTATUS None None.ZwDeviceIoControlFile(_In_ HANDLE FileHandle,_In_opt_ HANDLE Event,_In_opt_ PIO_APC_ROUTINE ApcRoutine,_In_opt_ PVOID ApcContext,_Out_ PIO_STATUS_BLOCK IoStatusBlock,_In_ ULONG IoControlCode,_In_opt_ PVOID InputBuffer,_In_ ULONG InputBufferLength,_Out_opt_ PVOID OutputBuffer,_In_ ULONG OutputBufferLength)
NTSTATUS None None.ZwDuplicateToken(_In_ HANDLE ExistingTokenHandle,_In_ ACCESS_MASK DesiredAccess,_In_ POBJECT_ATTRIBUTES ObjectAttributes,_In_ BOOLEAN EffectiveOnly,_In_ TOKEN_TYPE TokenType,_Out_ PHANDLE NewTokenHandle)
NTSTATUS None None.ZwEnumerateKey(_In_ HANDLE KeyHandle,_In_ ULONG Index,_In_ KEY_INFORMATION_CLASS KeyInformationClass,_Out_opt_ PVOID KeyInformation,_In_ ULONG Length,_Out_ PULONG ResultLength)
NTSTATUS None None.ZwEnumerateTransactionObject(_In_opt_ HANDLE RootObjectHandle,_In_ KTMOBJECT_TYPE QueryType,_Inout_ PKTMOBJECT_CURSOR ObjectCursor,_In_ ULONG ObjectCursorLength,_Out_ PULONG ReturnLength)
NTSTATUS None None.ZwEnumerateValueKey(_In_ HANDLE KeyHandle,_In_ ULONG Index,_In_ KEY_VALUE_INFORMATION_CLASS KeyValueInformationClass,_Out_opt_ PVOID KeyValueInformation,_In_ ULONG Length,_Out_ PULONG ResultLength)
NTSTATUS None None.ZwFlushBuffersFile(_In_ HANDLE FileHandle,_Out_ PIO_STATUS_BLOCK IoStatusBlock)
NTSTATUS None None.ZwFlushKey(_In_ HANDLE KeyHandle)
NTSTATUS None None.ZwFreeVirtualMemory(_In_ HANDLE ProcessHandle,_Inout_ PVOID *BaseAddress,_Inout_ PSIZE_T RegionSize,_In_ ULONG FreeType)
NTSTATUS None None.ZwFsControlFile(_In_ HANDLE FileHandle,_In_opt_ HANDLE Event,_In_opt_ PIO_APC_ROUTINE ApcRoutine,_In_opt_ PVOID ApcContext,_Out_ PIO_STATUS_BLOCK IoStatusBlock,_In_ ULONG FsControlCode,_In_opt_ PVOID InputBuffer,_In_ ULONG InputBufferLength,_Out_opt_ PVOID OutputBuffer,_In_ ULONG OutputBufferLength)
NTSTATUS None None.ZwGetNotificationResourceManager(_In_ HANDLE ResourceManagerHandle,_Out_ PTRANSACTION_NOTIFICATION TransactionNotification,_In_ ULONG NotificationLength,_In_ PLARGE_INTEGER Timeout,_Out_opt_ PULONG ReturnLength,_In_ ULONG Asynchronous,_In_opt_ ULONG_PTR AsynchronousContext)
NTSTATUS None None.ZwLoadDriver(_In_ PUNICODE_STRING DriverServiceName)
NTSTATUS None None.ZwLockFile(_In_ HANDLE FileHandle,_In_opt_ HANDLE Event,_In_opt_ PIO_APC_ROUTINE ApcRoutine,_In_opt_ PVOID ApcContext,_Out_ PIO_STATUS_BLOCK IoStatusBlock,_In_ PLARGE_INTEGER ByteOffset,_In_ PLARGE_INTEGER Length,_In_ ULONG Key,_In_ BOOLEAN FailImmediately,_In_ BOOLEAN ExclusiveLock)
NTSTATUS None None.ZwMakeTemporaryObject(_In_ HANDLE Handle)
NTSTATUS None None.ZwMapViewOfSection(_In_ HANDLE SectionHandle,_In_ HANDLE ProcessHandle,_Inout_ PVOID *BaseAddress,_In_ ULONG_PTR ZeroBits,_In_ SIZE_T CommitSize,_Inout_opt_ PLARGE_INTEGER SectionOffset,_Inout_ PSIZE_T ViewSize,_In_ SECTION_INHERIT InheritDisposition,_In_ ULONG AllocationType,_In_ ULONG Win32Protect)
NTSTATUS None None.ZwNotifyChangeKey(_In_ HANDLE KeyHandle,_In_opt_ HANDLE Event,_In_opt_ PIO_APC_ROUTINE ApcRoutine,_In_opt_ PVOID ApcContext,_Out_ PIO_STATUS_BLOCK IoStatusBlock,_In_ ULONG CompletionFilter,_In_ BOOLEAN WatchTree,_Out_opt_ PVOID Buffer,_In_ ULONG BufferSize,_In_ BOOLEAN Asynchronous)
NTSTATUS None None.ZwOpenDirectoryObject(_Out_ PHANDLE DirectoryHandle,_In_ ACCESS_MASK DesiredAccess,_In_ POBJECT_ATTRIBUTES ObjectAttributes)
NTSTATUS None None.ZwOpenEnlistment(_Out_ PHANDLE EnlistmentHandle,_In_ ACCESS_MASK DesiredAccess,_In_ HANDLE RmHandle,_In_ LPGUID EnlistmentGuid,_In_opt_ POBJECT_ATTRIBUTES ObjectAttributes)
NTSTATUS None None.ZwOpenEvent(_Out_ PHANDLE EventHandle,_In_ ACCESS_MASK DesiredAccess,_In_ POBJECT_ATTRIBUTES ObjectAttributes)
NTSTATUS None None.ZwOpenFile(_Out_ PHANDLE FileHandle,_In_ ACCESS_MASK DesiredAccess,_In_ POBJECT_ATTRIBUTES ObjectAttributes,_Out_ PIO_STATUS_BLOCK IoStatusBlock,_In_ ULONG ShareAccess,_In_ ULONG OpenOptions)
NTSTATUS None None.ZwOpenKeyEx(_Out_ PHANDLE KeyHandle,_In_ ACCESS_MASK DesiredAccess,_In_ POBJECT_ATTRIBUTES ObjectAttributes,_In_ ULONG OpenOptions)
NTSTATUS None None.ZwOpenKey(_Out_ PHANDLE KeyHandle,_In_ ACCESS_MASK DesiredAccess,_In_ POBJECT_ATTRIBUTES ObjectAttributes)
NTSTATUS None None.ZwOpenKeyTransactedEx(_Out_ PHANDLE KeyHandle,_In_ ACCESS_MASK DesiredAccess,_In_ POBJECT_ATTRIBUTES ObjectAttributes,_In_ ULONG OpenOptions,_In_ HANDLE TransactionHandle)
NTSTATUS None None.ZwOpenKeyTransacted(_Out_ PHANDLE KeyHandle,_In_ ACCESS_MASK DesiredAccess,_In_ POBJECT_ATTRIBUTES ObjectAttributes,_In_ HANDLE TransactionHandle)
NTSTATUS None None.ZwOpenProcess(_Out_ PHANDLE ProcessHandle,_In_ ACCESS_MASK DesiredAccess,_In_ POBJECT_ATTRIBUTES ObjectAttributes,_In_opt_ PCLIENT_ID ClientId)
NTSTATUS None None.ZwOpenProcessTokenEx(_In_ HANDLE ProcessHandle,_In_ ACCESS_MASK DesiredAccess,_In_ ULONG HandleAttributes,_Out_ PHANDLE TokenHandle)
NTSTATUS None None.ZwOpenResourceManager(_Out_ PHANDLE ResourceManagerHandle,_In_ ACCESS_MASK DesiredAccess,_In_ HANDLE TmHandle,_In_ LPGUID ResourceManagerGuid,_In_opt_ POBJECT_ATTRIBUTES ObjectAttributes)
NTSTATUS None None.ZwOpenSection(_Out_ PHANDLE SectionHandle,_In_ ACCESS_MASK DesiredAccess,_In_ POBJECT_ATTRIBUTES ObjectAttributes)
NTSTATUS None None.ZwOpenSymbolicLinkObject(_Out_ PHANDLE LinkHandle,_In_ ACCESS_MASK DesiredAccess,_In_ POBJECT_ATTRIBUTES ObjectAttributes)
NTSTATUS None None.ZwOpenThreadTokenEx(_In_ HANDLE ThreadHandle,_In_ ACCESS_MASK DesiredAccess,_In_ BOOLEAN OpenAsSelf,_In_ ULONG HandleAttributes,_Out_ PHANDLE TokenHandle)
NTSTATUS None None.ZwOpenTransactionManager(_Out_ PHANDLE TmHandle,_In_ ACCESS_MASK DesiredAccess,_In_opt_ POBJECT_ATTRIBUTES ObjectAttributes,_In_opt_ PUNICODE_STRING LogFileName,_In_opt_ LPGUID TmIdentity,_In_opt_ ULONG OpenOptions)
NTSTATUS None None.ZwOpenTransaction(_Out_ PHANDLE TransactionHandle,_In_ ACCESS_MASK DesiredAccess,_In_opt_ POBJECT_ATTRIBUTES ObjectAttributes,_In_ LPGUID Uow,_In_opt_ HANDLE TmHandle)
NTSTATUS None None.ZwPowerInformation(_In_ POWER_INFORMATION_LEVEL InformationLevel,_In_opt_ PVOID InputBuffer,_In_ ULONG InputBufferLength,_Out_opt_ PVOID OutputBuffer,_In_ ULONG OutputBufferLength)
NTSTATUS None None.ZwPrepareComplete(_In_ HANDLE EnlistmentHandle,_In_opt_ PLARGE_INTEGER TmVirtualClock)
NTSTATUS None None.ZwPrepareEnlistment(_In_ HANDLE EnlistmentHandle,_In_opt_ PLARGE_INTEGER TmVirtualClock)
NTSTATUS None None.ZwPrePrepareComplete(_In_ HANDLE EnlistmentHandle,_In_opt_ PLARGE_INTEGER TmVirtualClock)
NTSTATUS None None.ZwPrePrepareEnlistment(_In_ HANDLE EnlistmentHandle,_In_opt_ PLARGE_INTEGER TmVirtualClock)
NTSTATUS None None.ZwQueryDirectoryFile(_In_ HANDLE FileHandle,_In_opt_ HANDLE Event,_In_opt_ PIO_APC_ROUTINE ApcRoutine,_In_opt_ PVOID ApcContext,_Out_ PIO_STATUS_BLOCK IoStatusBlock,_Out_ PVOID FileInformation,_In_ ULONG Length,_In_ FILE_INFORMATION_CLASS FileInformationClass,_In_ BOOLEAN ReturnSingleEntry,_In_opt_ PUNICODE_STRING FileName,_In_ BOOLEAN RestartScan)
NTSTATUS None None.ZwQueryEaFile(__in HANDLE FileHandle,__out PIO_STATUS_BLOCK IoStatusBlock,__out PVOID Buffer,__in ULONG Length,__in BOOLEAN ReturnSingleEntry,__in_opt PVOID EaList,__in ULONG EaListLength,__in_opt PULONG EaIndex,__in BOOLEAN RestartScan)
NTSTATUS None None.ZwQueryFullAttributesFile(_In_ POBJECT_ATTRIBUTES ObjectAttributes,_Out_ PFILE_NETWORK_OPEN_INFORMATION FileInformation)
NTSTATUS None None.ZwQueryInformationEnlistment(_In_ HANDLE EnlistmentHandle,_In_ ENLISTMENT_INFORMATION_CLASS EnlistmentInformationClass,_Out_ PVOID EnlistmentInformation,_In_ ULONG EnlistmentInformationLength,_Out_opt_ PULONG ReturnLength)
NTSTATUS None None.ZwQueryInformationFile(_In_ HANDLE FileHandle,_Out_ PIO_STATUS_BLOCK IoStatusBlock,_Out_ PVOID FileInformation,_In_ ULONG Length,_In_ FILE_INFORMATION_CLASS FileInformationClass)
NTSTATUS None None.ZwQueryInformationResourceManager(_In_ HANDLE ResourceManagerHandle,_In_ RESOURCEMANAGER_INFORMATION_CLASS ResourceManagerInformationClass,_Out_ PVOID ResourceManagerInformation,_In_ ULONG ResourceManagerInformationLength,_Out_opt_ PULONG ReturnLength)
NTSTATUS None None.ZwQueryInformationThread(_In_ HANDLE ThreadHandle,_In_ THREADINFOCLASS ThreadInformationClass,_In_ PVOID ThreadInformation,_In_ ULONG ThreadInformationLength,_Out_opt_ PULONG ReturnLength)
NTSTATUS None None.ZwQueryInformationToken(_In_ HANDLE TokenHandle,_In_ TOKEN_INFORMATION_CLASS TokenInformationClass,_Out_ PVOID TokenInformation,_In_ ULONG TokenInformationLength,_Out_ PULONG ReturnLength)
NTSTATUS None None.ZwQueryInformationTransaction(_In_ HANDLE TransactionHandle,_In_ TRANSACTION_INFORMATION_CLASS TransactionInformationClass,_Out_ PVOID TransactionInformation,_In_ ULONG TransactionInformationLength,_Out_opt_ PULONG ReturnLength)
NTSTATUS None None.ZwQueryInformationTransactionManager(_In_ HANDLE TransactionManagerHandle,_In_ TRANSACTIONMANAGER_INFORMATION_CLASS TransactionManagerInformationClass,_Out_ PVOID TransactionManagerInformation,_In_ ULONG TransactionManagerInformationLength,_Out_opt_ PULONG ReturnLength)
NTSTATUS None None.ZwQueryKey(_In_ HANDLE KeyHandle,_In_ KEY_INFORMATION_CLASS KeyInformationClass,_Out_opt_ PVOID KeyInformation,_In_ ULONG Length,_Out_ PULONG ResultLength)
NTSTATUS None None.ZwQueryObject(_In_opt_ HANDLE Handle,_In_ OBJECT_INFORMATION_CLASS ObjectInformationClass,_Out_opt_ PVOID ObjectInformation,_In_ ULONG ObjectInformationLength,_Out_opt_ PULONG ReturnLength)
NTSTATUS None None.ZwQueryQuotaInformationFile(_In_ HANDLE FileHandle,_Out_ PIO_STATUS_BLOCK IoStatusBlock,_Out_ PVOID Buffer,_In_ ULONG Length,_In_ BOOLEAN ReturnSingleEntry,_In_opt_ PVOID SidList,_In_ ULONG SidListLength,_In_opt_ PSID StartSid,_In_ BOOLEAN RestartScan)
NTSTATUS None None.ZwQuerySecurityObject(_In_ HANDLE Handle,_In_ SECURITY_INFORMATION SecurityInformation,_Out_ PSECURITY_DESCRIPTOR SecurityDescriptor,_In_ ULONG Length,_Out_ PULONG LengthNeeded)
NTSTATUS None None.ZwQuerySymbolicLinkObject(_In_ HANDLE LinkHandle,_Inout_ PUNICODE_STRING LinkTarget,_Out_opt_ PULONG ReturnedLength)
NTSTATUS None None.ZwQueryValueKey(_In_ HANDLE KeyHandle,_In_ PUNICODE_STRING ValueName,_In_ KEY_VALUE_INFORMATION_CLASS KeyValueInformationClass,_Out_opt_ PVOID KeyValueInformation,_In_ ULONG Length,_Out_ PULONG ResultLength)
NTSTATUS None None.ZwQueryVolumeInformationFile(_In_ HANDLE FileHandle,_Out_ PIO_STATUS_BLOCK IoStatusBlock,_Out_ PVOID FsInformation,_In_ ULONG Length,_In_ FS_INFORMATION_CLASS FsInformationClass)
NTSTATUS None None.ZwReadFile(_In_ HANDLE FileHandle,_In_opt_ HANDLE Event,_In_opt_ PIO_APC_ROUTINE ApcRoutine,_In_opt_ PVOID ApcContext,_Out_ PIO_STATUS_BLOCK IoStatusBlock,_Out_ PVOID Buffer,_In_ ULONG Length,_In_opt_ PLARGE_INTEGER ByteOffset,_In_opt_ PULONG Key)
NTSTATUS None None.ZwReadOnlyEnlistment(_In_ HANDLE EnlistmentHandle,_In_opt_ PLARGE_INTEGER TmVirtualClock)
NTSTATUS None None.ZwRecoverEnlistment(_In_ HANDLE EnlistmentHandle,_In_opt_ PVOID EnlistmentKey)
NTSTATUS None None.ZwRecoverResourceManager(_In_ HANDLE ResourceManagerHandle)
NTSTATUS None None.ZwRecoverTransactionManager(_In_ HANDLE TransactionManagerHandle)
NTSTATUS None None.ZwRollbackComplete(_In_ HANDLE EnlistmentHandle,_In_opt_ PLARGE_INTEGER TmVirtualClock)
NTSTATUS None None.ZwRollbackEnlistment(_In_ HANDLE EnlistmentHandle,_In_opt_ PLARGE_INTEGER TmVirtualClock)
NTSTATUS None None.ZwRollbackTransaction(_In_ HANDLE TransactionHandle,_In_ BOOLEAN Wait)
NTSTATUS None None.ZwRollforwardTransactionManager(_In_ HANDLE TransactionManagerHandle,_In_opt_ PLARGE_INTEGER TmVirtualClock)
NTSTATUS None None.ZwSetEaFile(__in HANDLE FileHandle,__out PIO_STATUS_BLOCK IoStatusBlock,__in PVOID Buffer,__in ULONG Length)
NTSTATUS None None.ZwSetInformationEnlistment(_In_ HANDLE EnlistmentHandle,_In_ ENLISTMENT_INFORMATION_CLASS EnlistmentInformationClass,_In_ PVOID EnlistmentInformation,_In_ ULONG EnlistmentInformationLength)
NTSTATUS None None.ZwSetInformationFile(_In_ HANDLE FileHandle,_Out_ PIO_STATUS_BLOCK IoStatusBlock,_In_ PVOID FileInformation,_In_ ULONG Length,_In_ FILE_INFORMATION_CLASS FileInformationClass)
NTSTATUS None None.ZwSetInformationThread(_In_ HANDLE ThreadHandle,_In_ THREADINFOCLASS ThreadInformationClass,_In_ PVOID ThreadInformation,_In_ ULONG ThreadInformationLength)
NTSTATUS None None.ZwSetInformationToken(_In_ HANDLE TokenHandle,_In_ TOKEN_INFORMATION_CLASS TokenInformationClass,_In_ PVOID TokenInformation,_In_ ULONG TokenInformationLength)
NTSTATUS None None.ZwSetInformationTransaction(_In_ HANDLE TransactionHandle,_In_ TRANSACTION_INFORMATION_CLASS TransactionInformationClass,_In_ PVOID TransactionInformation,_In_ ULONG TransactionInformationLength)
NTSTATUS None None.ZwSetQuotaInformationFile(_In_ HANDLE FileHandle,_Out_ PIO_STATUS_BLOCK IoStatusBlock,_In_ PVOID Buffer,_In_ ULONG Length)
NTSTATUS None None.ZwSetSecurityObject(_In_ HANDLE Handle,_In_ SECURITY_INFORMATION SecurityInformation,_In_ PSECURITY_DESCRIPTOR SecurityDescriptor)
NTSTATUS None None.ZwSetValueKey(_In_ HANDLE KeyHandle,_In_ PUNICODE_STRING ValueName,_In_opt_ ULONG TitleIndex,_In_ ULONG Type,_In_opt_ PVOID Data,_In_ ULONG DataSize)
NTSTATUS None None.ZwSetVolumeInformationFile(_In_ HANDLE FileHandle,_Out_ PIO_STATUS_BLOCK IoStatusBlock,_In_ PVOID FsInformation,_In_ ULONG Length,_In_ FS_INFORMATION_CLASS FsInformationClass)
NTSTATUS None None.ZwSinglePhaseReject(_In_ HANDLE EnlistmentHandle,_In_opt_ PLARGE_INTEGER TmVirtualClock)
NTSTATUS None None.ZwTerminateProcess(_In_opt_ HANDLE ProcessHandle,_In_ NTSTATUS ExitStatus)
NTSTATUS None None.ZwUnloadDriver(_In_ PUNICODE_STRING DriverServiceName)
NTSTATUS None None.ZwUnlockFile(_In_ HANDLE FileHandle,_Out_ PIO_STATUS_BLOCK IoStatusBlock,_In_ PLARGE_INTEGER ByteOffset,_In_ PLARGE_INTEGER Length,_In_ ULONG Key)
NTSTATUS None None.ZwUnmapViewOfSection(_In_ HANDLE ProcessHandle,_In_opt_ PVOID BaseAddress)
NTSTATUS None None.ZwWaitForSingleObject(_In_ HANDLE Handle,_In_ BOOLEAN Alertable,_In_opt_ PLARGE_INTEGER Timeout)
NTSTATUS None None.ZwWriteFile(_In_ HANDLE FileHandle,_In_opt_ HANDLE Event,_In_opt_ PIO_APC_ROUTINE ApcRoutine,_In_opt_ PVOID ApcContext,_Out_ PIO_STATUS_BLOCK IoStatusBlock,_In_ PVOID Buffer,_In_ ULONG Length,_In_opt_ PLARGE_INTEGER ByteOffset,_In_opt_ PULONG Key)
NTSTATUS None secur32.LsaCallAuthenticationPackage(_In_ HANDLE LsaHandle,_In_ ULONG AuthenticationPackage,_In_ PVOID ProtocolSubmitBuffer,_In_ ULONG SubmitBufferLength,_Out_ PVOID *ProtocolReturnBuffer,_Out_ PULONG *ReturnBufferLength,_Out_ PNTSTATUS ProtocolStatus)
NTSTATUS None secur32.LsaConnectUntrusted(_Out_ PHANDLE LsaHandle)
NTSTATUS None secur32.LsaDeregisterLogonProcess(_In_ HANDLE LsaHandle)
NTSTATUS None secur32.LsaFreeReturnBuffer(_In_ PVOID Buffer)
NTSTATUS None secur32.LsaLogonUser(_In_ HANDLE LsaHandle,_In_ PLSA_STRING OriginName,_In_ SECURITY_LOGON_TYPE LogonType,_In_ ULONG AuthenticationPackage,_In_ PVOID AuthenticationInformation,_In_ ULONG AuthenticationInformationLength,_In_opt_ PTOKEN_GROUPS LocalGroups,_In_ PTOKEN_SOURCE SourceContext,_Out_ PVOID *ProfileBuffer,_Out_ PULONG ProfileBufferLength,_Out_ PLUID LogonId,_Out_ PHANDLE Token,_Out_ PQUOTA_LIMITS Quotas,_Out_ PNTSTATUS SubStatus)
NTSTATUS None secur32.LsaLookupAuthenticationPackage(_In_ HANDLE LsaHandle,_In_ PLSA_STRING PackageName,_Out_ PULONG AuthenticationPackage)
NTSTATUS None secur32.LsaRegisterLogonProcess(_In_ PLSA_STRING LogonProcessName,_Out_ PHANDLE LsaHandle,_Out_ PLSA_OPERATIONAL_MODE SecurityMode)
NTSTATUS None secur32.LsaRegisterPolicyChangeNotification(_In_ POLICY_NOTIFICATION_INFORMATION_CLASS InformationClass,_In_ HANDLE NotificationEventHandle)
NTSTATUS None secur32.LsaUnregisterPolicyChangeNotification(_In_ POLICY_NOTIFICATION_INFORMATION_CLASS InformationClass,_In_ HANDLE NotificationEventHandle)
NTSTATUS NTAPI advapi32.LsaGetAppliedCAPIDs(_In_opt_ PLSA_UNICODE_STRING SystemName,_Out_ PSID **CAPIDs,_Out_ PULONG CAPIDCount)
NTSTATUS NTAPI advapi32.LsaQueryDomainInformationPolicy(_In_ LSA_HANDLE PolicyHandle,_In_ POLICY_DOMAIN_INFORMATION_CLASS InformationClass,_Out_ PVOID *Buffer)
NTSTATUS NTAPI advapi32.LsaQueryForestTrustInformation(_In_ LSA_HANDLE PolicyHandle,_In_ PLSA_UNICODE_STRING TrustedDomainName,_Out_ PLSA_FOREST_TRUST_INFORMATION *ForestTrustInfo)
NTSTATUS NTAPI advapi32.LsaSetDomainInformationPolicy(_In_ LSA_HANDLE PolicyHandle,_In_ POLICY_DOMAIN_INFORMATION_CLASS InformationClass,_In_ PVOID Buffer)
NTSTATUS NTAPI advapi32.LsaSetForestTrustInformation(_In_ LSA_HANDLE PolicyHandle,_In_ PLSA_UNICODE_STRING TrustedDomainName,_In_ PLSA_FOREST_TRUST_INFORMATION ForestTrustInfo,_In_ BOOLEAN CheckOnly,_Out_ PLSA_FOREST_TRUST_COLLISION_INFORMATION *CollisionInfo)
NTSTATUS NTAPI None.CreateTokenEx(_In_ PLUID LogonId,_In_ PTOKEN_SOURCE TokenSource,_In_ SECURITY_LOGON_TYPE LogonType,_In_ SECURITY_IMPERSONATION_LEVEL ImpersonationLevel,_In_ LSA_TOKEN_INFORMATION_TYPE TokenInformationType,_In_ PVOID TokenInformation,_In_ PTOKEN_GROUPS TokenGroups,_In_ PUNICODE_STRING Workstation,_In_ PUNICODE_STRING ProfilePath,_In_ PVOID SessionInformation,_In_ SECPKG_SESSIONINFO_TYPE SessionInformationType,_Out_ PHANDLE Token,_Out_ PNTSTATUS SubStatus)
NTSTATUS NTAPI None.CrediFreeCredentials(_In_ ULONG Count,_Inout_ PENCRYPTED_CREDENTIALW *Credentials)
NTSTATUS NTAPI None.CrediReadDomainCredentials(_In_ PLUID LogonId,_In_ ULONG CredFlags,_In_ PCREDENTIAL_TARGET_INFORMATIONW TargetInfo,ULONG Flags None,PULONG Count None,_Out_ PENCRYPTED_CREDENTIALW **Credential)
NTSTATUS NTAPI None.CrediRead(_In_ PLUID LogonId,_In_ ULONG CredFlags,_In_ LPWSTR TargetName,_In_ ULONG Type,_In_ ULONG Flags,_Out_ PENCRYPTED_CREDENTIALW *Credential)
NTSTATUS NTAPI None.CrediUnmarshalandDecodeString(_In_ LPWSTR MarshaledString,_Out_ LPBYTE *Blob,_Out_ ULONG *BlobSize,_Out_ BOOLEAN *IsFailureFatal)
NTSTATUS NTAPI None.CrediWrite(_In_ PLUID LogonId,_In_ ULONG CredFlags,_In_ PENCRYPTED_CREDENTIALW Credential,_In_ ULONG Flags)
NTSTATUS NTAPI None.ExpandAuthDataForDomain(_In_ PUCHAR UserAuthData,_In_ ULONG UserAuthDataSize,_In_ PVOID Reserved,_Out_ PUCHAR *ExpandedAuthData,_Out_ PULONG ExpandedAuthDataSize)
NTSTATUS NTAPI None.GetServiceAccountPassword(_In_ PUNICODE_STRING AccountName,_In_opt_ PUNICODE_STRING DomainName,_In_ CRED_FETCH CredFetch,_Inout_opt_ FILETIME *FileTimeExpiry,_Out_ PUNICODE_STRING CurrentPassword,_Out_ PUNICODE_STRING PreviousPassword,_Out_opt_ FILETIME *FileTimeCurrPwdValidForOutbound)
NTSTATUS NTAPI None.Msv1_0SubAuthenticationFilter(_In_ NETLOGON_LOGON_INFO_CLASS LogonLevel,_In_ PVOID LogonInformation,_In_ ULONG Flags,_In_ PUSER_ALL_INFORMATION UserAll,_Out_ PULONG WhichFields,_Out_ PULONG UserFlags,_Out_ PBOOLEAN Authoritative,_Out_ PLARGE_INTEGER LogoffTime,_Out_ PLARGE_INTEGER KickoffTime)
NTSTATUS NTAPI None.Msv1_0SubAuthenticationRoutine(_In_ NETLOGON_LOGON_INFO_CLASS LogonLevel,_In_ PVOID LogonInformation,_In_ ULONG Flags,_In_ PUSER_ALL_INFORMATION UserAll,_Out_ PULONG WhichFields,_Out_ PULONG UserFlags,_Out_ PBOOLEAN Authoritative,_Out_ PLARGE_INTEGER LogoffTime,_Out_ PLARGE_INTEGER KickoffTime)
NTSTATUS NTAPI None.OpenTokenByLogonId(_In_ PLUID LogonId,_Out_ HANDLE *RetTokenHandle)
NTSTATUS NTAPI None.SpExchangeMetaDataFn(_In_ LSA_SEC_HANDLE CredentialHandle,_In_opt_ PUNICODE_STRING TargetName,_In_ ULONG ContextRequirements,_In_ ULONG MetaDataLength,_In_ PUCHAR MetaData,_Inout_ PLSA_SEC_HANDLE ContextHandle)
NTSTATUS NTAPI None.SpGetCredUIContextFn(_In_ LSA_SEC_HANDLE ContextHandle,_In_ GUID *CredType,_Out_ PULONG FlatCredUIContextLength,_Out_ PUCHAR *FlatCredUIContext)
NTSTATUS NTAPI None.SpLsaModeInitialize(_In_ ULONG LsaVersion,_Out_ PULONG PackageVersion,_Out_ PSECPKG_FUNCTION_TABLE *ppTables,_Out_ PULONG pcTables)
NTSTATUS NTAPI None.SpQueryMetaDataFn(_In_ LSA_SEC_HANDLE CredentialHandle,_In_opt_ PUNICODE_STRING TargetName,_In_ ULONG ContextRequirements,_Out_ ULONG MetaDataLength,_Out_ PUCHAR MetaData,_Inout_ PLSA_SEC_HANDLE ContextHandle)
NTSTATUS NTAPI None.SpUpdateCredentialsFn(_In_ LSA_SEC_HANDLE ContextHandle,_In_ GUID *CredType,_In_ ULONG FlatCredUIContextLength,PUCHAR FlatCredUIContext None)
NTSTATUS NTAPI ntdll.NtCompareTokens(_In_ HANDLE FirstTokenHandle,_In_ HANDLE SecondTokenHandle,_Out_ PBOOLEAN Equal)
NTSTATUS NTAPI secur32.LsaEnumerateLogonSessions(_Out_ PULONG LogonSessionCount,_Out_ PLUID *LogonSessionList)
NTSTATUS NTAPI secur32.LsaGetLogonSessionData(_In_ PLUID LogonId,_Out_ PSECURITY_LOGON_SESSION_DATA *ppLogonSessionData)
NTSTATUS SEC_ENTRY None.SpUserModeInitialize(_In_ ULONG LsaVersion,_Out_ PULONG PackageVersion,_Out_ PSECPKG_USER_FUNCTION_TABLE *ppTables,_Out_ PULONG pcTables)
NTSTATUS WINAPI advapi32.CredMarshalTargetInfo(_In_ PCREDENTIAL_TARGET_INFORMATIONW InTargetInfo,_Out_ PUSHORT *Buffer,PULONG BufferSize None)
NTSTATUS WINAPI advapi32.LsaLookupPrivilegeValue(LSA_HANDLE PolicyHandle None,PUNICODE_STRING Name None,PLUID Value None)
NTSTATUS WINAPI advapi32.LsaQueryCAPs(PSID *CAPIDs None,_In_ ULONG CAPIDCount,_Out_ PCENTRAL_ACCESS_POLICY *CAPs,_Out_ PULONG CAPCount)
NTSTATUS WINAPI bcrypt.BCryptAddContextFunction(_In_ ULONG dwTable,_In_ LPCWSTR pszContext,_In_ ULONG dwInterface,_In_ LPCWSTR pszFunction,_In_ ULONG dwPosition)
NTSTATUS WINAPI bcrypt.BCryptCloseAlgorithmProvider(_Inout_ BCRYPT_ALG_HANDLE hAlgorithm,_In_ ULONG dwFlags)
NTSTATUS WINAPI bcrypt.BCryptConfigureContextFunction(_In_ ULONG dwTable,_In_ LPCWSTR pszContext,_In_ ULONG dwInterface,_In_ LPCWSTR pszFunction,_In_ PCRYPT_CONTEXT_FUNCTION_CONFIG pConfig)
NTSTATUS WINAPI bcrypt.BCryptConfigureContext(_In_ ULONG dwTable,_In_ LPCWSTR pszContext,_In_ PCRYPT_CONTEXT_CONFIG pConfig)
NTSTATUS WINAPI bcrypt.BCryptCreateContext(_In_ ULONG dwTable,_In_ LPCWSTR pszContext,_In_opt_ PCRYPT_CONTEXT_CONFIG pConfig)
NTSTATUS WINAPI bcrypt.BCryptCreateHash(_Inout_ BCRYPT_ALG_HANDLE hAlgorithm,_Out_ BCRYPT_HASH_HANDLE *phHash,_Out_ PUCHAR pbHashObject,_In_opt_ ULONG cbHashObject,_In_opt_ PUCHAR pbSecret,_In_ ULONG cbSecret,_In_ ULONG dwFlags)
NTSTATUS WINAPI bcrypt.BCryptDecrypt(_Inout_ BCRYPT_KEY_HANDLE hKey,_In_ PUCHAR pbInput,_In_ ULONG cbInput,_In_opt_ VOID *pPaddingInfo,_Inout_opt_ PUCHAR pbIV,_In_ ULONG cbIV,_Out_opt_ PUCHAR pbOutput,_In_ ULONG cbOutput,_Out_ ULONG *pcbResult,_In_ ULONG dwFlags)
NTSTATUS WINAPI bcrypt.BCryptDeleteContext(_In_ ULONG dwTable,_In_ LPCWSTR pszContext)
NTSTATUS WINAPI bcrypt.BCryptDeriveKey(_In_ BCRYPT_SECRET_HANDLE hSharedSecret,_In_ LPCWSTR pwszKDF,_In_opt_ BCryptBufferDesc *pParameterList,_Out_opt_ PUCHAR pbDerivedKey,_In_ ULONG cbDerivedKey,_Out_ ULONG *pcbResult,_In_ ULONG dwFlags)
NTSTATUS WINAPI bcrypt.BCryptDestroyHash(_Inout_ BCRYPT_HASH_HANDLE hHash)
NTSTATUS WINAPI bcrypt.BCryptDestroyKey(_Inout_ BCRYPT_KEY_HANDLE hKey)
NTSTATUS WINAPI bcrypt.BCryptDestroySecret(_In_ BCRYPT_SECRET_HANDLE hSecret)
NTSTATUS WINAPI bcrypt.BCryptDuplicateHash(_In_ BCRYPT_HASH_HANDLE hHash,_Out_ BCRYPT_HASH_HANDLE *phNewHash,_Out_ PUCHAR pbHashObject,_In_ ULONG cbHashObject,_In_ ULONG dwFlags)
NTSTATUS WINAPI bcrypt.BCryptDuplicateKey(_In_ BCRYPT_KEY_HANDLE hKey,_Out_ BCRYPT_KEY_HANDLE *phNewKey,_Out_ PUCHAR pbKeyObject,_In_ ULONG cbKeyObject,_In_ ULONG dwFlags)
NTSTATUS WINAPI bcrypt.BCryptEncrypt(_Inout_ BCRYPT_KEY_HANDLE hKey,_In_ PUCHAR pbInput,_In_ ULONG cbInput,_In_opt_ VOID *pPaddingInfo,_Inout_opt_ PUCHAR pbIV,_In_ ULONG cbIV,_Out_opt_ PUCHAR pbOutput,_In_ ULONG cbOutput,_Out_ ULONG *pcbResult,_In_ ULONG dwFlags)
NTSTATUS WINAPI bcrypt.BCryptEnumAlgorithms(_In_ ULONG dwAlgOperations,_Out_ ULONG *pAlgCount,_Out_ BCRYPT_ALGORITHM_IDENTIFIER **ppAlgList,_In_ ULONG dwFlags)
NTSTATUS WINAPI bcrypt.BCryptEnumContextFunctionProviders(_In_ ULONG dwTable,_In_ LPCWSTR pszContext,_In_ ULONG dwInterface,_In_ LPCWSTR pszFunction,_Inout_ ULONG *pcbBuffer,_Inout_ PCRYPT_CONTEXT_FUNCTION_PROVIDERS *ppBuffer)
NTSTATUS WINAPI bcrypt.BCryptEnumContextFunctions(_In_ ULONG dwTable,_In_ LPCWSTR pszContext,_In_ ULONG dwInterface,_Inout_ ULONG *pcbBuffer,_Inout_ PCRYPT_CONTEXT_FUNCTIONS *ppBuffer)
NTSTATUS WINAPI bcrypt.BCryptEnumContexts(_In_ ULONG dwTable,_Inout_ ULONG *pcbBuffer,_Inout_ PCRYPT_CONTEXTS *ppBuffer)
NTSTATUS WINAPI bcrypt.BCryptEnumProviders(_In_ LPCWSTR pszAlgId,_Out_ ULONG *pImplCount,_Out_ BCRYPT_PROVIDER_NAME **ppImplList,_In_ ULONG dwFlags)
NTSTATUS WINAPI bcrypt.BCryptEnumRegisteredProviders(_Inout_ ULONG *pcbBuffer,_Inout_ PCRYPT_PROVIDERS *ppBuffer)
NTSTATUS WINAPI bcrypt.BCryptExportKey(_In_ BCRYPT_KEY_HANDLE hKey,_In_ BCRYPT_KEY_HANDLE hExportKey,_In_ LPCWSTR pszBlobType,_Out_ PUCHAR pbOutput,_In_ ULONG cbOutput,_Out_ ULONG *pcbResult,_In_ ULONG dwFlags)
NTSTATUS WINAPI bcrypt.BCryptFinalizeKeyPair(_Inout_ BCRYPT_KEY_HANDLE hKey,_In_ ULONG dwFlags)
NTSTATUS WINAPI bcrypt.BCryptFinishHash(_Inout_ BCRYPT_HASH_HANDLE hHash,_Out_ PUCHAR pbOutput,_In_ ULONG cbOutput,_In_ ULONG dwFlags)
NTSTATUS WINAPI bcrypt.BCryptGenerateKeyPair(_Inout_ BCRYPT_ALG_HANDLE hAlgorithm,_Out_ BCRYPT_KEY_HANDLE *phKey,_In_ ULONG dwLength,_In_ ULONG dwFlags)
NTSTATUS WINAPI bcrypt.BCryptGenerateSymmetricKey(_Inout_ BCRYPT_ALG_HANDLE hAlgorithm,_Out_ BCRYPT_KEY_HANDLE *phKey,_Out_opt_ PUCHAR pbKeyObject,_In_ ULONG cbKeyObject,_In_ PUCHAR pbSecret,_In_ ULONG cbSecret,_In_ ULONG dwFlags)
NTSTATUS WINAPI bcrypt.BCryptGenRandom(_Inout_ BCRYPT_ALG_HANDLE hAlgorithm,_Inout_ PUCHAR pbBuffer,_In_ ULONG cbBuffer,_In_ ULONG dwFlags)
NTSTATUS WINAPI bcrypt.BCryptGetFipsAlgorithmMode(_Out_ BOOLEAN *pfEnabled)
NTSTATUS WINAPI bcrypt.BCryptGetProperty(_In_ BCRYPT_HANDLE hObject,_In_ LPCWSTR pszProperty,_Out_ PUCHAR pbOutput,_In_ ULONG cbOutput,_Out_ ULONG *pcbResult,_In_ ULONG dwFlags)
NTSTATUS WINAPI bcrypt.BCryptHash(BCRYPT_ALG_HANDLE hAlgorithm None,PUCHAR pbSecret None,ULONG cbSecret None,PUCHAR pbInput None,ULONG cbInput None,PUCHAR pbOutput None,ULONG cbOutput None)
NTSTATUS WINAPI bcrypt.BCryptHashData(_Inout_ BCRYPT_HASH_HANDLE hHash,_In_ PUCHAR pbInput,_In_ ULONG cbInput,_In_ ULONG dwFlags)
NTSTATUS WINAPI bcrypt.BCryptImportKey(_In_ BCRYPT_ALG_HANDLE hAlgorithm,_In_opt_ BCRYPT_KEY_HANDLE hImportKey,_In_ LPCWSTR pszBlobType,_Out_ BCRYPT_KEY_HANDLE *phKey,_Out_opt_ PUCHAR pbKeyObject,_In_ ULONG cbKeyObject,_In_ PUCHAR pbInput,_In_ ULONG cbInput,_In_ ULONG dwFlags)
NTSTATUS WINAPI bcrypt.BCryptImportKeyPair(_In_ BCRYPT_ALG_HANDLE hAlgorithm,_Inout_ BCRYPT_KEY_HANDLE hImportKey,_In_ LPCWSTR pszBlobType,_Out_ BCRYPT_KEY_HANDLE *phKey,_In_ PUCHAR pbInput,_In_ ULONG cbInput,_In_ ULONG dwFlags)
NTSTATUS WINAPI bcrypt.BCryptKeyDerivation(_In_ BCRYPT_KEY_HANDLE hKey,_In_opt_ BCryptBufferDesc *pParameterList,_Out_ PUCHAR pbDerivedKey,_In_ ULONG cbDerivedKey,_Out_ ULONG *pcbResult,_In_ ULONG dwFlags)
NTSTATUS WINAPI bcrypt.BCryptOpenAlgorithmProvider(_Out_ BCRYPT_ALG_HANDLE *phAlgorithm,_In_ LPCWSTR pszAlgId,_In_ LPCWSTR pszImplementation,_In_ DWORD dwFlags)
NTSTATUS WINAPI bcrypt.BCryptQueryContextConfiguration(_In_ ULONG dwTable,_In_ LPCWSTR pszContext,_Inout_ ULONG *pcbBuffer,_Inout_ PCRYPT_CONTEXT_CONFIG *ppBuffer)
NTSTATUS WINAPI bcrypt.BCryptQueryContextFunctionConfiguration(_In_ ULONG dwTable,_In_ LPCWSTR pszContext,_In_ ULONG dwInterface,_In_ LPCWSTR pszFunction,_Inout_ ULONG *pcbBuffer,_Inout_ PCRYPT_CONTEXT_FUNCTION_CONFIG *ppBuffer)
NTSTATUS WINAPI bcrypt.BCryptQueryContextFunctionProperty(_In_ ULONG dwTable,_In_ LPCWSTR pszContext,_In_ ULONG dwInterface,_In_ LPCWSTR pszFunction,_In_ LPCWSTR pszProperty,_Inout_ ULONG *pcbValue,_Inout_ PUCHAR *ppbValue)
NTSTATUS WINAPI bcrypt.BCryptQueryProviderRegistration(_In_ LPCWSTR pszProvider,_In_ ULONG dwMode,_In_ ULONG dwInterface,_Inout_ ULONG *pcbBuffer,_Inout_ PCRYPT_PROVIDER_REG *ppBuffer)
NTSTATUS WINAPI bcrypt.BCryptRegisterConfigChangeNotify(_In_ PRKEVENT phEvent)
NTSTATUS WINAPI bcrypt.BCryptRegisterConfigChangeNotify(_Out_ HANDLE *phEvent)
NTSTATUS WINAPI bcrypt.BCryptResolveProviders(_In_opt_ LPCWSTR pszContext,_In_opt_ DWORD dwInterface,_In_opt_ LPCWSTR pszFunction,_In_opt_ LPCWSTR pszProvider,_In_ DWORD dwMode,_In_ DWORD dwFlags,_Inout_ PDWORD pcbBuffer,_Inout_ PCRYPT_PROVIDER_REFS *ppBuffer)
NTSTATUS WINAPI bcrypt.BCryptSecretAgreement(_In_ BCRYPT_KEY_HANDLE hPrivKey,_In_ BCRYPT_KEY_HANDLE hPubKey,_Out_ BCRYPT_SECRET_HANDLE *phSecret,_In_ ULONG dwFlags)
NTSTATUS WINAPI bcrypt.BCryptSetProperty(_Inout_ BCRYPT_HANDLE hObject,_In_ LPCWSTR pszProperty,_In_ PUCHAR pbInput,_In_ ULONG cbInput,_In_ ULONG dwFlags)
NTSTATUS WINAPI bcrypt.BCryptSignHash(_In_ BCRYPT_KEY_HANDLE hKey,_In_opt_ VOID *pPaddingInfo,_In_ PBYTE pbInput,_In_ DWORD cbInput,_Out_ PBYTE pbOutput,_In_ DWORD cbOutput,_Out_ DWORD *pcbResult,_In_ ULONG dwFlags)
NTSTATUS WINAPI bcrypt.BCryptUnregisterConfigChangeNotify(_In_ HANDLE hEvent)
NTSTATUS WINAPI bcrypt.BCryptUnregisterConfigChangeNotify(_In_ PRKEVENT hEvent)
NTSTATUS WINAPI bcrypt.BCryptVerifySignature(_In_ BCRYPT_KEY_HANDLE hKey,_In_opt_ VOID *pPaddingInfo,_In_ PUCHAR pbHash,_In_ ULONG cbHash,_In_ PUCHAR pbSignature,_In_ ULONG cbSignature,_In_ ULONG dwFlags)
NTSTATUS WINAPI certpoleng.PstAcquirePrivateKey(_In_ PCCERT_CONTEXT pCert)
NTSTATUS WINAPI certpoleng.PstGetCertificates(_In_ PUNICODE_STRING pTargetName,_In_ DWORD cCriteria,_In_opt_ PCCERT_SELECT_CRITERIA rgpCriteria,_In_ BOOL bIsClient,_Out_ PDWORD pdwCertChainContextCount,_Out_ PCCERT_CHAIN_CONTEXT **ppCertChainContexts)
NTSTATUS WINAPI certpoleng.PstGetTrustAnchors(_In_ PUNICODE_STRING pTargetName,_In_ DWORD cCriteria,_In_opt_ PCCERT_SELECT_CRITERIA rgpCriteria,_Out_ PSecPkgContext_IssuerListInfoEx *ppTrustedIssuers)
NTSTATUS WINAPI certpoleng.PstGetUserNameForCertificate(_In_ PCCERT_CONTEXT pCertContext,_Out_ PUNICODE_STRING UserName)
NTSTATUS WINAPI certpoleng.PstMapCertificate(_In_ PCCERT_CONTEXT pCert,_Out_ LSA_TOKEN_INFORMATION_TYPE *pTokenInformationType,_Out_ PVOID *ppTokenInformation)
NTSTATUS WINAPI certpoleng.PstValidate(_In_opt_ PUNICODE_STRING pTargetName,_In_ BOOL bIsClient,_In_opt_ CERT_USAGE_MATCH *pRequestedIssuancePolicy,_In_opt_ HCERTSTORE *phAdditionalCertStore,_In_ PCCERT_CONTEXT pCert,_Out_opt_ GUID *pProvGUID)
NTSTATUS WINAPI gdi32.DDCCISetVCPFeature(_In_ HANDLE hMonitor,_In_ DWORD dwVCPCode,_In_ DWORD dwNewValue)
NTSTATUS WINAPI gdi32.DestroyOPMProtectedOutput(_In_ OPM_PROTECTED_OUTPUT_HANDLE opoOPMProtectedOutput)
NTSTATUS WINAPI gdi32.GetCertificateSize(_In_ PUNICODE_STRING pstrDeviceName,_In_ DXGKMDT_CERTIFICATE_TYPE ctPVPCertificateType,_Out_ ULONG *pulCertificateLength)
NTSTATUS WINAPI ncrypt.NCryptCloseProtectionDescriptor(_In_ NCRYPT_DESCRIPTOR_HANDLE hDescriptor)
NTSTATUS WINAPI ncrypt.NCryptCreateProtectionDescriptor(_In_ LPCWSTR pwszDescriptorString,_In_ DWORD dwFlags,_Out_ NCRYPT_DESCRIPTOR_HANDLE *phDescriptor)
NTSTATUS WINAPI ncrypt.NCryptQueryProtectionDescriptorName(_In_ LPCWSTR pwszName,_Out_ LPWSTR pwszDescriptorString,_Inout_ SIZE_T *pcDescriptorString,DWORD dwFlags None)
NTSTATUS WINAPI ncrypt.NCryptRegisterProtectionDescriptorName(_In_ LPCWSTR pwszName,_In_opt_ LPCWSTR pwszDescriptorString,DWORD dwFlags None)
NTSTATUS WINAPI ncrypt.NCryptStreamClose(_In_ NCRYPT_STREAM_HANDLE hStream)
NTSTATUS WINAPI ncrypt.NCryptStreamOpenToProtect(_In_ NCRYPT_DESCRIPTOR_HANDLE hDescriptor,DWORD dwFlags None,_In_opt_ HWND hWnd,_In_ NCRYPT_PROTECT_STREAM_INFO *pStreamInfo,_Out_ NCRYPT_STREAM_HANDLE *phStream)
NTSTATUS WINAPI ncrypt.NCryptStreamOpenToUnprotectEx(_In_ NCRYPT_PROTECT_STREAM_INFO_EX pStreamInfo,DWORD dwFlags None,_In_opt_ HWND hWnd,_Out_ NCRYPT_STREAM_HANDLE phStream)
NTSTATUS WINAPI ncrypt.NCryptStreamOpenToUnprotect(_In_ NCRYPT_PROTECT_STREAM_INFO *pStreamInfo,DWORD dwFlags None,_In_opt_ HWND hWnd,_Out_ NCRYPT_STREAM_HANDLE *phStream)
NTSTATUS WINAPI netapi32.NetAddServiceAccount(_In_opt_ LPWSTR ServerName,_In_ LPWSTR AccountName,_In_ LPWSTR Reserved,_In_ DWORD Flags)
NTSTATUS WINAPI netapi32.NetEnumerateServiceAccounts(_In_opt_ LPWSTR ServerName,_In_ DWORD Flags,_Out_ DWORD *AccountsCount,_Out_ PZPWSTR *Accounts)
NTSTATUS WINAPI netapi32.NetIsServiceAccount(_In_opt_ LPWSTR ServerName,_In_ LPWSTR AccountName,_Out_ BOOL *IsService)
NTSTATUS WINAPI netapi32.NetLogonSetServiceBits(_In_ LPWSTR ServerName,_In_ DWORD ServiceBitsOfInterest,_In_ DWORD ServiceBits)
NTSTATUS WINAPI netapi32.NetQueryServiceAccount(_In_opt_ LPWSTR ServerName,_In_ LPWSTR AccountName,_In_ DWORD InfoLevel,_Out_ PBYTE *Buffer)
NTSTATUS WINAPI netapi32.NetRemoveServiceAccount(_In_opt_ LPWSTR ServerName,_In_ LPWSTR AccountName,_In_ DWORD Flags)
NTSTATUS WINAPI None.LsaLookupPrivilegeValue(LSA_HANDLE PolicyHandle None,PUNICODE_STRING Name None,PLUID Value None)
NTSTATUS WINAPI None.Msv1_0SubAuthenticationRoutineEx(_In_ NETLOGON_LOGON_INFO_CLASS LogonLevel,_In_ PVOID LogonInformation,_In_ ULONG Flags,_In_ PUSER_ALL_INFORMATION UserAll,_In_ SAM_HANDLE UserHandle,_Inout_ PMSV1_0_VALIDATION_INFO ValidationInfo,_Out_ PULONG ActionsPerformed)
NTSTATUS WINAPI None.Msv1_0SubAuthenticationRoutineGeneric(PVOID SubmitBuffer None,ULONG SubmitBufferLength None,_Out_ PULONG ReturnBufferLength,_Out_ PVOID *ReturnBuffer)
NTSTATUS WINAPI None.SpValidateTargetInfoFn(_In_opt_ PLSA_CLIENT_REQUEST ClientRequest,_In_ PVOID ProtocolSubmitBuffer,_In_ PVOID ClientBufferBase,_In_ ULONG SubmitBufferLength,_In_ PSECPKG_TARGETINFO TargetInfo)
NTSTATUS WINAPI ntdll.NtQueryInformationProcess(_In_ HANDLE ProcessHandle,_In_ PROCESSINFOCLASS ProcessInformationClass,_Out_ PVOID ProcessInformation,_In_ ULONG ProcessInformationLength,_Out_opt_ PULONG ReturnLength)
NTSTATUS WINAPI ntdll.NtQueryInformationThread(_In_ HANDLE ThreadHandle,_In_ THREADINFOCLASS ThreadInformationClass,_Inout_ PVOID ThreadInformation,_In_ ULONG ThreadInformationLength,_Out_opt_ PULONG ReturnLength)
NTSTATUS WINAPI ntdll.NtQuerySystemInformation(_In_ SYSTEM_INFORMATION_CLASS SystemInformationClass,_Inout_ PVOID SystemInformation,_In_ ULONG SystemInformationLength,_Out_opt_ PULONG ReturnLength)
NTSTATUS WINAPI ntdll.NtQuerySystemTime(_Out_ PLARGE_INTEGER SystemTime)
NTSTATUS WINAPI ntdll.RtlConvertSidToUnicodeString(_Out_ PUNICODE_STRING UnicodeString,_In_ PSID Sid,_In_ BOOLEAN AllocateDestinationString)
NTSTATUS WINAPI ntdll.RtlLocalTimeToSystemTime(_In_ PLARGE_INTEGER LocalTime,_Out_ PLARGE_INTEGER SystemTime)
NTSTATUS WINAPI ntdll.ZwQueryInformationProcess(_In_ HANDLE ProcessHandle,_In_ PROCESSINFOCLASS ProcessInformationClass,_Out_ PVOID ProcessInformation,_In_ ULONG ProcessInformationLength,_Out_opt_ PULONG ReturnLength)
NTSTATUS WINAPI ntdll.ZwQuerySystemInformation(_In_ SYSTEM_INFORMATION_CLASS SystemInformationClass,_Inout_ PVOID SystemInformation,_In_ ULONG SystemInformationLength,_Out_opt_ PULONG ReturnLength)
NTSTATUS WINAPI powrprof.CallNtPowerInformation(_In_ POWER_INFORMATION_LEVEL InformationLevel,_In_ PVOID lpInputBuffer,_In_ ULONG nInputBufferSize,_Out_ PVOID lpOutputBuffer,_In_ ULONG nOutputBufferSize)
numeric None None.mad(in numeric mvalue,in numeric avalue,in numeric bvalue)
ObjectHandle None None.CreateInstanceFrom(string assemblyFile None,string typeName None,bool ignoreCase None,BindingFlags bindingAttr None,Binder binder None,object[] args None,CultureInfo culture None,object[] activationAttributes None,Evidence securityAttributes None)
Object None None.Deserialize(Stream serializationStream None)
Object None None.GetData(String format None)
object None None.GetFormat(Type formatType None)
Object None None.GetFormat(Type formatType None)
Object None None.GetPatternProvider(int patternId None)
Object None None.GetService(Type serviceType None)
object None None.InvokeMember(string name None,BindingFlags invokeAttr None,Binder binder None,object target None,object[] args None,ParameterModifier[] modifiers None,CultureInfo culture None,string[] namedParameters None)
object None None.ToType(Type conversionType None,IFormatProvider provider None)
Object None None.ToType(Type conversionType None,IFormatProvider provider None)
PACCESS_TOKEN None None.PsReferenceImpersonationToken(_Inout_ PETHREAD Thread,_Out_ PBOOLEAN CopyOnOpen,_Out_ PBOOLEAN EffectiveOnly,_Out_ PSECURITY_IMPERSONATION_LEVEL ImpersonationLevel)
PACCESS_TOKEN None None.SeQuerySubjectContextToken(_In_ PSECURITY_SUBJECT_CONTEXT SubjectContext)
PCCERT_CHAIN_CONTEXT WINAPI crypt32.CertDuplicateCertificateChain(_In_ PCCERT_CHAIN_CONTEXT pChainContext)
PCCERT_CONTEXT None None.GetSignerCert(HCERTSTORE hCertStore None)
PCCERT_CONTEXT None xenroll.getCertContextFromPKCS7([in] PCRYPT_DATA_BLOB pBlobPKCS7)
PCCERT_CONTEXT WINAPI crypt32.CertCreateSelfSignCertificate(_In_opt_ HCRYPTPROV_OR_NCRYPT_KEY_HANDLE hCryptProvOrNCryptKey,_In_ PCERT_NAME_BLOB pSubjectIssuerBlob,_In_ DWORD dwFlags,_In_opt_ PCRYPT_KEY_PROV_INFO pKeyProvInfo,_In_opt_ PCRYPT_ALGORITHM_IDENTIFIER pSignatureAlgorithm,_In_opt_ PSYSTEMTIME pStartTime,_In_opt_ PSYSTEMTIME pEndTime,PCERT_EXTENSIONS pExtensions None)
PCCERT_CONTEXT WINAPI crypt32.CertDuplicateCertificateContext(_In_ PCCERT_CONTEXT pCertContext)
PCCERT_CONTEXT WINAPI crypt32.CertEnumCertificatesInStore(_In_ HCERTSTORE hCertStore,_In_ PCCERT_CONTEXT pPrevCertContext)
PCCERT_CONTEXT WINAPI crypt32.CertGetIssuerCertificateFromStore(_In_ HCERTSTORE hCertStore,_In_ PCCERT_CONTEXT pSubjectContext,_In_opt_ PCCERT_CONTEXT pPrevIssuerContext,_Inout_ DWORD *pdwFlags)
PCCERT_CONTEXT WINAPI crypt32.CertGetSubjectCertificateFromStore(_In_ HCERTSTORE hCertStore,_In_ DWORD dwCertEncodingType,_In_ PCERT_INFO pCertId)
PCCERT_CONTEXT WINAPI cryptui.CryptUIDlgSelectCertificateA(_In_ PCCRYPTUI_SELECTCERTIFICATE_STRUCT pcsc)
PCCERT_CONTEXT WINAPI cryptui.CryptUIDlgSelectCertificateFromStore(_In_ HCERTSTORE hCertStore,_In_ HWND hwnd,_In_opt_ LPCWSTR pwszTitle,_In_opt_ LPCWSTR pwszDisplayString,_In_ DWORD dwDontUseColumn,_In_ DWORD dwFlags,_In_ void *pvReserved)
PCCERT_CONTEXT WINAPI cryptui.CryptUIDlgSelectCertificate(_In_ PCCRYPTUI_SELECTCERTIFICATE_STRUCT pcsc)
PCCERT_CONTEXT WINAPI cryptui.CryptUIDlgSelectCertificateW(_In_ PCCRYPTUI_SELECTCERTIFICATE_STRUCT pcsc)
PCCERT_CONTEXT WINAPI None.CryptGetSignerCertificateCallback(_In_ void *pvGetArg,_In_ DWORD dwCertEncodingType,_In_ PCERT_INFO pSignerId,_In_ HCERTSTORE hMsgCertStore)
PCCERT_CONTEXT WINAPI wintrust.WTHelperCertFindIssuerCertificate(_In_ PCCERT_CONTEXT pChildContext,_In_ DWORD chStores,_In_ HCERTSTORE *pahStores,_In_ FILETIME *psftVerifyAsOf,_In_ DWORD dwEncoding,_Out_opt_ DWORD *pdwConfidence,_Out_ DWORD *dwError)
PCCERT_SERVER_OCSP_RESPONSE_CONTEXT WINAPI crypt32.CertGetServerOcspResponseContext(_In_ HCERT_SERVER_OCSP_RESPONSE hServerOcspResponse,_In_ DWORD dwFlags,_Reserved_ LPVOID pvReserved)
PCCRL_CONTEXT WINAPI crypt32.CertDuplicateCRLContext(_In_ PCCRL_CONTEXT pCrlContext)
PCCRL_CONTEXT WINAPI crypt32.CertEnumCRLsInStore(_In_ HCERTSTORE hCertStore,_In_ PCCRL_CONTEXT pPrevCrlContext)
PCCRL_CONTEXT WINAPI crypt32.CertGetCRLFromStore(_In_ HCERTSTORE hCertStore,_In_opt_ PCCERT_CONTEXT pIssuerContext,_In_ PCCRL_CONTEXT pPrevCrlContext,_Inout_ DWORD *pdwFlags)
PCCRYPT_OID_INFO WINAPI crypt32.CryptFindOIDInfo(_In_ DWORD dwKeyType,_In_ void *pvKey,_In_ DWORD dwGroupId)
PCCTL_CONTEXT WINAPI crypt32.CertDuplicateCTLContext(_In_ PCCTL_CONTEXT pCtlContext)
PCCTL_CONTEXT WINAPI crypt32.CertEnumCTLsInStore(_In_ HCERTSTORE hCertStore,_In_ PCCTL_CONTEXT pPrevCtlContext)
PCERT_EXTENSION WINAPI crypt32.CertFindExtension(_In_ LPCSTR pszObjId,_In_ DWORD cExtensions,_In_ CERT_EXTENSION rgExtensions[])
PCERT_RDN_ATTR WINAPI crypt32.CertFindRDNAttr(_In_ LPCSTR pszObjId,_In_ PCERT_NAME_INFO pName)
PCHAR None wldap32.ldap_dn2ufnA(_In_ PCHAR dn)
PCHAR None wldap32.ldap_dn2ufn(_In_ PCHAR dn)
PCHAR None wldap32.ldap_dn2ufnW(_In_ PCHAR dn)
PCHAR None wldap32.ldap_err2stringA(_In_ ULONG err)
PCHAR None wldap32.ldap_err2string(_In_ ULONG err)
PCHAR None wldap32.ldap_err2stringW(_In_ ULONG err)
PCHAR None wldap32.ldap_first_attributeA(_In_ LDAP *ld,_In_ LDAPMessage *entry,_Out_ BerElement **ptr)
PCHAR None wldap32.ldap_first_attribute(_In_ LDAP *ld,_In_ LDAPMessage *entry,_Out_ BerElement **ptr)
PCHAR None wldap32.ldap_first_attributeW(_In_ LDAP *ld,_In_ LDAPMessage *entry,_Out_ BerElement **ptr)
PCHAR None wldap32.ldap_get_dnA(_In_ LDAP *ld,_In_ LDAPMessage *entry)
PCHAR None wldap32.ldap_get_dn(_In_ LDAP *ld,_In_ LDAPMessage *entry)
PCHAR None wldap32.ldap_get_dnW(_In_ LDAP *ld,_In_ LDAPMessage *entry)
PCHAR None wldap32.ldap_next_attributeA(_In_ LDAP *ld,_In_ LDAPMessage *entry,_Inout_ BerElement *ptr)
PCHAR None wldap32.ldap_next_attribute(_In_ LDAP *ld,_In_ LDAPMessage *entry,_Inout_ BerElement *ptr)
PCHAR None wldap32.ldap_next_attributeW(_In_ LDAP *ld,_In_ LDAPMessage *entry,_Inout_ BerElement *ptr)
PCHAR WINAPI iphlpapi.if_indextoname(_In_ NET_IFINDEX InterfaceIndex,_Out_ PCHAR InterfaceName)
PCM_PARTIAL_RESOURCE_DESCRIPTOR None None.WdfCmResourceListGetDescriptor(_In_ WDFCMRESLIST List,_In_ ULONG Index)
PCONFIGURATION_INFORMATION None None.IoGetConfigurationInformation(void None None)
PCONTROLLER_OBJECT None None.IoCreateController(_In_ ULONG Size)
PCRYPT_ATTRIBUTE WINAPI crypt32.CertFindAttribute(_In_ LPCSTR pszObjId,_In_ DWORD cAttr,_In_ CRYPT_ATTRIBUTE rgAttr[])
PCTL_ENTRY WINAPI crypt32.CertFindSubjectInCTL(_In_ DWORD dwEncodingType,_In_ DWORD dwSubjectType,_In_ void *pvSubject,_In_ PCCTL_CONTEXT pCtlContext,_In_ DWORD dwFlags)
PCTSTR WINAPI dbghelp.SymSrvDeltaName(_In_ HANDLE hProcess,_In_opt_ PCTSTR SymPath,_In_ PCTSTR Type,_In_ PCTSTR File1,_In_ PCTSTR File2)
PCTSTR WINAPI dbghelp.SymSrvDeltaNameW(_In_ HANDLE hProcess,_In_opt_ PCTSTR SymPath,_In_ PCTSTR Type,_In_ PCTSTR File1,_In_ PCTSTR File2)
PCTSTR WINAPI dbghelp.SymSrvGetSupplement(_In_ HANDLE hProcess,_In_opt_ PCTSTR SymPath,_In_ PCTSTR Node,_In_ PCTSTR File)
PCTSTR WINAPI dbghelp.SymSrvGetSupplementW(_In_ HANDLE hProcess,_In_opt_ PCTSTR SymPath,_In_ PCTSTR Node,_In_ PCTSTR File)
PCTSTR WINAPI dbghelp.SymSrvStoreFile(_In_ HANDLE hProcess,_In_opt_ PCTSTR SrvPath,_In_ PCTSTR File,_In_ DWORD Flags)
PCTSTR WINAPI dbghelp.SymSrvStoreFileW(_In_ HANDLE hProcess,_In_opt_ PCTSTR SrvPath,_In_ PCTSTR File,_In_ DWORD Flags)
PCTSTR WSAAPI ws2_32.InetNtopA or inet_ntop(_In_ INT Family,_In_ PVOID pAddr,_Out_ PTSTR pStringBuf,_In_ size_t StringBufSize)
PCTSTR WSAAPI ws2_32.InetNtop(_In_ INT Family,_In_ PVOID pAddr,_Out_ PTSTR pStringBuf,_In_ size_t StringBufSize)
PCTSTR WSAAPI ws2_32.InetNtopW(_In_ INT Family,_In_ PVOID pAddr,_Out_ PTSTR pStringBuf,_In_ size_t StringBufSize)
PCUIDLIST_RELATIVE None None.ILNext(_In_ PCUIDLIST_RELATIVE pidl)
PCUIDLIST_RELATIVE None None.ILSkip(_In_ PCUIDLIST_RELATIVE pidl,UINT cb None)
PCUITEMID_CHILD None None.ILCloneChild(_In_ PCUITEMID_CHILD pidl)
PCWSTR None propsys.PropVariantToStringWithDefault(_In_ REFPROPVARIANT propvarIn,_In_ LPCWSTR pszDefault)
PCWSTR None propsys.VariantToStringWithDefault(_In_ REFVARIANT varIn,_In_ LPCWSTR pszDefault)
PDEVICE_OBJECT None None.IoAttachDeviceToDeviceStack(_In_ PDEVICE_OBJECT SourceDevice,_In_ PDEVICE_OBJECT TargetDevice)
PDEVICE_OBJECT None None.IoGetAttachedDeviceReference(_In_ PDEVICE_OBJECT DeviceObject)
PDEVICE_OBJECT None None.IoGetRelatedDeviceObject(_In_ PFILE_OBJECT FileObject)
PDEVICE_OBJECT None None.WdfDeviceWdmGetAttachedDevice(_In_ WDFDEVICE Device)
PDEVICE_OBJECT None None.WdfDeviceWdmGetDeviceObject(_In_ WDFDEVICE hDevice)
PDEVICE_OBJECT None None.WdfDeviceWdmGetPhysicalDevice(_In_ WDFDEVICE Device)
PDEVICE_OBJECT None None.WdfFdoInitWdmGetPhysicalDevice(_In_ PWDFDEVICE_INIT DeviceInit)
PDEVICE_OBJECT None None.WdfIoTargetWdmGetTargetDeviceObject(_In_ WDFIOTARGET IoTarget)
PDEVICE_OBJECT None None.WdfIoTargetWdmGetTargetPhysicalDevice(_In_ WDFIOTARGET IoTarget)
PDH_STATUS None pdh.PdhAddCounterA(_In_ PDH_HQUERY hQuery,_In_ LPCTSTR szFullCounterPath,_In_ DWORD_PTR dwUserData,_Out_ PDH_HCOUNTER *phCounter)
PDH_STATUS None pdh.PdhAddCounter(_In_ PDH_HQUERY hQuery,_In_ LPCTSTR szFullCounterPath,_In_ DWORD_PTR dwUserData,_Out_ PDH_HCOUNTER *phCounter)
PDH_STATUS None pdh.PdhAddCounterW(_In_ PDH_HQUERY hQuery,_In_ LPCTSTR szFullCounterPath,_In_ DWORD_PTR dwUserData,_Out_ PDH_HCOUNTER *phCounter)
PDH_STATUS None pdh.PdhAddEnglishCounterA(_In_ PDH_HQUERY hQuery,_In_ LPCTSTR szFullCounterPath,_In_ DWORD_PTR dwUserData,_Out_ PDH_HCOUNTER *phCounter)
PDH_STATUS None pdh.PdhAddEnglishCounter(_In_ PDH_HQUERY hQuery,_In_ LPCTSTR szFullCounterPath,_In_ DWORD_PTR dwUserData,_Out_ PDH_HCOUNTER *phCounter)
PDH_STATUS None pdh.PdhAddEnglishCounterW(_In_ PDH_HQUERY hQuery,_In_ LPCTSTR szFullCounterPath,_In_ DWORD_PTR dwUserData,_Out_ PDH_HCOUNTER *phCounter)
PDH_STATUS None pdh.PdhBindInputDataSourceA(_Out_ PDH_HLOG *phDataSource,_In_ LPCTSTR szLogFileNameList)
PDH_STATUS None pdh.PdhBindInputDataSource(_Out_ PDH_HLOG *phDataSource,_In_ LPCTSTR szLogFileNameList)
PDH_STATUS None pdh.PdhBindInputDataSourceW(_Out_ PDH_HLOG *phDataSource,_In_ LPCTSTR szLogFileNameList)
PDH_STATUS None pdh.PdhBrowseCountersA(_In_ PPDH_BROWSE_DLG_CONFIG pBrowseDlgData)
PDH_STATUS None pdh.PdhBrowseCountersHA(_In_ PPDH_BROWSE_DLG_CONFIG pBrowseDlgData)
PDH_STATUS None pdh.PdhBrowseCountersH(_In_ PPDH_BROWSE_DLG_CONFIG pBrowseDlgData)
PDH_STATUS None pdh.PdhBrowseCountersHW(_In_ PPDH_BROWSE_DLG_CONFIG pBrowseDlgData)
PDH_STATUS None pdh.PdhBrowseCounters(_In_ PPDH_BROWSE_DLG_CONFIG pBrowseDlgData)
PDH_STATUS None pdh.PdhBrowseCountersW(_In_ PPDH_BROWSE_DLG_CONFIG pBrowseDlgData)
PDH_STATUS None pdh.PdhCalculateCounterFromRawValue(_In_ PDH_HCOUNTER hCounter,_In_ DWORD dwFormat,_In_ PPDH_RAW_COUNTER rawValue1,_In_ PPDH_RAW_COUNTER rawValue2,_Out_ PPDH_FMT_COUNTERVALUE fmtValue)
PDH_STATUS None pdh.PdhCloseLog(_In_ PDH_HLOG hLog,_In_ DWORD dwFlags)
PDH_STATUS None pdh.PdhCloseQuery(_In_ PDH_HQUERY hQuery)
PDH_STATUS None pdh.PdhCollectQueryDataEx(_In_ PDH_HQUERY hQuery,_In_ DWORD dwIntervalTime,_In_ HANDLE hNewDataEvent)
PDH_STATUS None pdh.PdhCollectQueryData(_Inout_ PDH_HQUERY hQuery)
PDH_STATUS None pdh.PdhCollectQueryDataWithTime(_Inout_ PDH_HQUERY hQuery,_Out_ LONGLONG *pllTimeStamp)
PDH_STATUS None pdh.PdhComputeCounterStatistics(_In_ PDH_HCOUNTER hCounter,_In_ DWORD dwFormat,_In_ DWORD dwFirstEntry,_In_ DWORD dwNumEntries,_In_ PPDH_RAW_COUNTER lpRawValueArray,_Out_ PPDH_STATISTICS data)
PDH_STATUS None pdh.PdhConnectMachineA(_In_ LPCTSTR szMachineName)
PDH_STATUS None pdh.PdhConnectMachine(_In_ LPCTSTR szMachineName)
PDH_STATUS None pdh.PdhConnectMachineW(_In_ LPCTSTR szMachineName)
PDH_STATUS None pdh.PdhEnumLogSetNamesA(_In_ LPCTSTR szDataSource,_Out_ LPTSTR mszLogSetNameList,_Inout_ LPDWORD pcchBufferLength)
PDH_STATUS None pdh.PdhEnumLogSetNames(_In_ LPCTSTR szDataSource,_Out_ LPTSTR mszLogSetNameList,_Inout_ LPDWORD pcchBufferLength)
PDH_STATUS None pdh.PdhEnumLogSetNamesW(_In_ LPCTSTR szDataSource,_Out_ LPTSTR mszLogSetNameList,_Inout_ LPDWORD pcchBufferLength)
PDH_STATUS None pdh.PdhEnumMachinesA(_In_ LPCTSTR szDataSource,_Out_ LPTSTR mszMachineNameList,_Inout_ LPDWORD pcchBufferLength)
PDH_STATUS None pdh.PdhEnumMachinesHA(_In_ PDH_HLOG hDataSource,_Out_ LPTSTR mszMachineNameList,_Inout_ LPDWORD pcchBufferLength)
PDH_STATUS None pdh.PdhEnumMachinesH(_In_ PDH_HLOG hDataSource,_Out_ LPTSTR mszMachineNameList,_Inout_ LPDWORD pcchBufferLength)
PDH_STATUS None pdh.PdhEnumMachinesHW(_In_ PDH_HLOG hDataSource,_Out_ LPTSTR mszMachineNameList,_Inout_ LPDWORD pcchBufferLength)
PDH_STATUS None pdh.PdhEnumMachines(_In_ LPCTSTR szDataSource,_Out_ LPTSTR mszMachineNameList,_Inout_ LPDWORD pcchBufferLength)
PDH_STATUS None pdh.PdhEnumMachinesW(_In_ LPCTSTR szDataSource,_Out_ LPTSTR mszMachineNameList,_Inout_ LPDWORD pcchBufferLength)
PDH_STATUS None pdh.PdhEnumObjectItemsA(_In_ LPCTSTR szDataSource,_In_ LPCTSTR szMachineName,_In_ LPCTSTR szObjectName,_Out_ LPTSTR mszCounterList,_Inout_ LPDWORD pcchCounterListLength,_Out_ LPTSTR mszInstanceList,_Inout_ LPDWORD pcchInstanceListLength,_In_ DWORD dwDetailLevel,_In_ DWORD dwFlags)
PDH_STATUS None pdh.PdhEnumObjectItemsHA(_In_ PDH_HLOG hDataSource,_In_ LPCTSTR szMachineName,_In_ LPCTSTR szObjectName,_Out_ LPTSTR mszCounterList,_Inout_ LPDWORD pcchCounterListLength,_Out_ LPTSTR mszInstanceList,_Inout_ LPDWORD pcchInstanceListLength,_In_ DWORD dwDetailLevel,_In_ DWORD dwFlags)
PDH_STATUS None pdh.PdhEnumObjectItemsH(_In_ PDH_HLOG hDataSource,_In_ LPCTSTR szMachineName,_In_ LPCTSTR szObjectName,_Out_ LPTSTR mszCounterList,_Inout_ LPDWORD pcchCounterListLength,_Out_ LPTSTR mszInstanceList,_Inout_ LPDWORD pcchInstanceListLength,_In_ DWORD dwDetailLevel,_In_ DWORD dwFlags)
PDH_STATUS None pdh.PdhEnumObjectItemsHW(_In_ PDH_HLOG hDataSource,_In_ LPCTSTR szMachineName,_In_ LPCTSTR szObjectName,_Out_ LPTSTR mszCounterList,_Inout_ LPDWORD pcchCounterListLength,_Out_ LPTSTR mszInstanceList,_Inout_ LPDWORD pcchInstanceListLength,_In_ DWORD dwDetailLevel,_In_ DWORD dwFlags)
PDH_STATUS None pdh.PdhEnumObjectItems(_In_ LPCTSTR szDataSource,_In_ LPCTSTR szMachineName,_In_ LPCTSTR szObjectName,_Out_ LPTSTR mszCounterList,_Inout_ LPDWORD pcchCounterListLength,_Out_ LPTSTR mszInstanceList,_Inout_ LPDWORD pcchInstanceListLength,_In_ DWORD dwDetailLevel,_In_ DWORD dwFlags)
PDH_STATUS None pdh.PdhEnumObjectItemsW(_In_ LPCTSTR szDataSource,_In_ LPCTSTR szMachineName,_In_ LPCTSTR szObjectName,_Out_ LPTSTR mszCounterList,_Inout_ LPDWORD pcchCounterListLength,_Out_ LPTSTR mszInstanceList,_Inout_ LPDWORD pcchInstanceListLength,_In_ DWORD dwDetailLevel,_In_ DWORD dwFlags)
PDH_STATUS None pdh.PdhEnumObjectsA(_In_ LPCTSTR szDataSource,_In_ LPCTSTR szMachineName,_Out_ LPTSTR mszObjectList,_Inout_ LPDWORD pcchBufferLength,_In_ DWORD dwDetailLevel,_In_ BOOL bRefresh)
PDH_STATUS None pdh.PdhEnumObjectsHA(_In_ PDH_HLOG hDataSource,_In_ LPCTSTR szMachineName,_Out_ LPTSTR mszObjectList,_Inout_ LPDWORD pcchBufferLength,_In_ DWORD dwDetailLevel,_In_ BOOL bRefresh)
PDH_STATUS None pdh.PdhEnumObjectsH(_In_ PDH_HLOG hDataSource,_In_ LPCTSTR szMachineName,_Out_ LPTSTR mszObjectList,_Inout_ LPDWORD pcchBufferLength,_In_ DWORD dwDetailLevel,_In_ BOOL bRefresh)
PDH_STATUS None pdh.PdhEnumObjectsHW(_In_ PDH_HLOG hDataSource,_In_ LPCTSTR szMachineName,_Out_ LPTSTR mszObjectList,_Inout_ LPDWORD pcchBufferLength,_In_ DWORD dwDetailLevel,_In_ BOOL bRefresh)
PDH_STATUS None pdh.PdhEnumObjects(_In_ LPCTSTR szDataSource,_In_ LPCTSTR szMachineName,_Out_ LPTSTR mszObjectList,_Inout_ LPDWORD pcchBufferLength,_In_ DWORD dwDetailLevel,_In_ BOOL bRefresh)
PDH_STATUS None pdh.PdhEnumObjectsW(_In_ LPCTSTR szDataSource,_In_ LPCTSTR szMachineName,_Out_ LPTSTR mszObjectList,_Inout_ LPDWORD pcchBufferLength,_In_ DWORD dwDetailLevel,_In_ BOOL bRefresh)
PDH_STATUS None pdh.PdhExpandCounterPathA(_In_ LPCTSTR szWildCardPath,_Out_ LPTSTR mszExpandedPathList,_Inout_ LPDWORD pcchPathListLength)
PDH_STATUS None pdh.PdhExpandCounterPath(_In_ LPCTSTR szWildCardPath,_Out_ LPTSTR mszExpandedPathList,_Inout_ LPDWORD pcchPathListLength)
PDH_STATUS None pdh.PdhExpandCounterPathW(_In_ LPCTSTR szWildCardPath,_Out_ LPTSTR mszExpandedPathList,_Inout_ LPDWORD pcchPathListLength)
PDH_STATUS None pdh.PdhExpandWildCardPathA(_In_ LPCTSTR szDataSource,_In_ LPCTSTR szWildCardPath,_Out_ LPTSTR mszExpandedPathList,_Inout_ LPDWORD pcchPathListLength,_In_ DWORD dwFlags)
PDH_STATUS None pdh.PdhExpandWildCardPathHA(_In_ PDH_HLOG hDataSource,_In_ LPCTSTR szWildCardPath,_Out_ LPTSTR mszExpandedPathList,_Inout_ LPDWORD pcchPathListLength,_In_ DWORD dwFlags)
PDH_STATUS None pdh.PdhExpandWildCardPathH(_In_ PDH_HLOG hDataSource,_In_ LPCTSTR szWildCardPath,_Out_ LPTSTR mszExpandedPathList,_Inout_ LPDWORD pcchPathListLength,_In_ DWORD dwFlags)
PDH_STATUS None pdh.PdhExpandWildCardPathHW(_In_ PDH_HLOG hDataSource,_In_ LPCTSTR szWildCardPath,_Out_ LPTSTR mszExpandedPathList,_Inout_ LPDWORD pcchPathListLength,_In_ DWORD dwFlags)
PDH_STATUS None pdh.PdhExpandWildCardPath(_In_ LPCTSTR szDataSource,_In_ LPCTSTR szWildCardPath,_Out_ LPTSTR mszExpandedPathList,_Inout_ LPDWORD pcchPathListLength,_In_ DWORD dwFlags)
PDH_STATUS None pdh.PdhExpandWildCardPathW(_In_ LPCTSTR szDataSource,_In_ LPCTSTR szWildCardPath,_Out_ LPTSTR mszExpandedPathList,_Inout_ LPDWORD pcchPathListLength,_In_ DWORD dwFlags)
PDH_STATUS None pdh.PdhFormatFromRawValue(_In_ DWORD dwCounterType,_In_ DWORD dwFormat,_In_ LONGLONG *pTimeBase,_In_ PPDH_RAW_COUNTER rawValue1,_In_ PPDH_RAW_COUNTER rawValue2,_Out_ PPDH_FMT_COUNTERVALUE fmtValue)
PDH_STATUS None pdh.PdhGetCounterInfoA(_In_ PDH_HCOUNTER hCounter,_In_ BOOLEAN bRetrieveExplainText,_Inout_ LPDWORD pdwBufferSize,_Out_ PPDH_COUNTER_INFO lpBuffer)
PDH_STATUS None pdh.PdhGetCounterInfo(_In_ PDH_HCOUNTER hCounter,_In_ BOOLEAN bRetrieveExplainText,_Inout_ LPDWORD pdwBufferSize,_Out_ PPDH_COUNTER_INFO lpBuffer)
PDH_STATUS None pdh.PdhGetCounterInfoW(_In_ PDH_HCOUNTER hCounter,_In_ BOOLEAN bRetrieveExplainText,_Inout_ LPDWORD pdwBufferSize,_Out_ PPDH_COUNTER_INFO lpBuffer)
PDH_STATUS None pdh.PdhGetCounterTimeBase(_In_ PDH_HCOUNTER hCounter,_Out_ LONGLONG *pTimeBase)
PDH_STATUS None pdh.PdhGetDataSourceTimeRangeA(_In_ LPCTSTR szDataSource,_Out_ LPDWORD pdwNumEntries,_Out_ PPDH_TIME_INFO pInfo,_In_ LPDWORD pdwBufferSize)
PDH_STATUS None pdh.PdhGetDataSourceTimeRangeH(_In_ PDH_HLOG hDataSource,_Out_ LPDWORD pdwNumEntries,_Out_ PPDH_TIME_INFO pInfo,_In_ LPDWORD pdwBufferSize)
PDH_STATUS None pdh.PdhGetDataSourceTimeRange(_In_ LPCTSTR szDataSource,_Out_ LPDWORD pdwNumEntries,_Out_ PPDH_TIME_INFO pInfo,_In_ LPDWORD pdwBufferSize)
PDH_STATUS None pdh.PdhGetDataSourceTimeRangeW(_In_ LPCTSTR szDataSource,_Out_ LPDWORD pdwNumEntries,_Out_ PPDH_TIME_INFO pInfo,_In_ LPDWORD pdwBufferSize)
PDH_STATUS None pdh.PdhGetDefaultPerfCounterA(_In_ LPCTSTR szDataSource,_In_ LPCTSTR szMachineName,_In_ LPCTSTR szObjectName,_Out_ LPTSTR szDefaultCounterName,_Inout_ LPDWORD pcchBufferSize)
PDH_STATUS None pdh.PdhGetDefaultPerfCounterHA(_In_ PDH_HLOG hDataSource,_In_ LPCTSTR szMachineName,_In_ LPCTSTR szObjectName,_Out_ LPTSTR szDefaultCounterName,_Inout_ LPDWORD pcchBufferSize)
PDH_STATUS None pdh.PdhGetDefaultPerfCounterH(_In_ PDH_HLOG hDataSource,_In_ LPCTSTR szMachineName,_In_ LPCTSTR szObjectName,_Out_ LPTSTR szDefaultCounterName,_Inout_ LPDWORD pcchBufferSize)
PDH_STATUS None pdh.PdhGetDefaultPerfCounterHW(_In_ PDH_HLOG hDataSource,_In_ LPCTSTR szMachineName,_In_ LPCTSTR szObjectName,_Out_ LPTSTR szDefaultCounterName,_Inout_ LPDWORD pcchBufferSize)
PDH_STATUS None pdh.PdhGetDefaultPerfCounter(_In_ LPCTSTR szDataSource,_In_ LPCTSTR szMachineName,_In_ LPCTSTR szObjectName,_Out_ LPTSTR szDefaultCounterName,_Inout_ LPDWORD pcchBufferSize)
PDH_STATUS None pdh.PdhGetDefaultPerfCounterW(_In_ LPCTSTR szDataSource,_In_ LPCTSTR szMachineName,_In_ LPCTSTR szObjectName,_Out_ LPTSTR szDefaultCounterName,_Inout_ LPDWORD pcchBufferSize)
PDH_STATUS None pdh.PdhGetDefaultPerfObjectA(_In_ LPCTSTR szDataSource,_In_ LPCTSTR szMachineName,_Out_ LPTSTR szDefaultObjectName,_Inout_ LPDWORD pcchBufferSize)
PDH_STATUS None pdh.PdhGetDefaultPerfObjectHA(_In_ PDH_HLOG hDataSource,_In_ LPCTSTR szMachineName,_Out_ LPTSTR szDefaultObjectName,_Inout_ LPDWORD pcchBufferSize)
PDH_STATUS None pdh.PdhGetDefaultPerfObjectH(_In_ PDH_HLOG hDataSource,_In_ LPCTSTR szMachineName,_Out_ LPTSTR szDefaultObjectName,_Inout_ LPDWORD pcchBufferSize)
PDH_STATUS None pdh.PdhGetDefaultPerfObjectHW(_In_ PDH_HLOG hDataSource,_In_ LPCTSTR szMachineName,_Out_ LPTSTR szDefaultObjectName,_Inout_ LPDWORD pcchBufferSize)
PDH_STATUS None pdh.PdhGetDefaultPerfObject(_In_ LPCTSTR szDataSource,_In_ LPCTSTR szMachineName,_Out_ LPTSTR szDefaultObjectName,_Inout_ LPDWORD pcchBufferSize)
PDH_STATUS None pdh.PdhGetDefaultPerfObjectW(_In_ LPCTSTR szDataSource,_In_ LPCTSTR szMachineName,_Out_ LPTSTR szDefaultObjectName,_Inout_ LPDWORD pcchBufferSize)
PDH_STATUS None pdh.PdhGetDllVersion(_Out_ LPDWORD lpdwVersion)
PDH_STATUS None pdh.PdhGetFormattedCounterArrayA(_In_ PDH_HCOUNTER hCounter,_In_ DWORD dwFormat,_Inout_ LPDWORD lpdwBufferSize,_Out_ LPDWORD lpdwBufferCount,_Out_ PPDH_FMT_COUNTERVALUE_ITEM ItemBuffer)
PDH_STATUS None pdh.PdhGetFormattedCounterArray(_In_ PDH_HCOUNTER hCounter,_In_ DWORD dwFormat,_Inout_ LPDWORD lpdwBufferSize,_Out_ LPDWORD lpdwBufferCount,_Out_ PPDH_FMT_COUNTERVALUE_ITEM ItemBuffer)
PDH_STATUS None pdh.PdhGetFormattedCounterArrayW(_In_ PDH_HCOUNTER hCounter,_In_ DWORD dwFormat,_Inout_ LPDWORD lpdwBufferSize,_Out_ LPDWORD lpdwBufferCount,_Out_ PPDH_FMT_COUNTERVALUE_ITEM ItemBuffer)
PDH_STATUS None pdh.PdhGetFormattedCounterValue(_In_ PDH_HCOUNTER hCounter,_In_ DWORD dwFormat,_Out_ LPDWORD lpdwType,_Out_ PPDH_FMT_COUNTERVALUE pValue)
PDH_STATUS None pdh.PdhGetLogFileSize(_In_ PDH_HLOG hLog,_Out_ LONGLONG *llSize)
PDH_STATUS None pdh.PdhGetRawCounterArrayA(_In_ PDH_HCOUNTER hCounter,_Inout_ LPDWORD lpdwBufferSize,_Out_ LPDWORD lpdwItemCount,_Out_ PPDH_RAW_COUNTER_ITEM ItemBuffer)
PDH_STATUS None pdh.PdhGetRawCounterArray(_In_ PDH_HCOUNTER hCounter,_Inout_ LPDWORD lpdwBufferSize,_Out_ LPDWORD lpdwItemCount,_Out_ PPDH_RAW_COUNTER_ITEM ItemBuffer)
PDH_STATUS None pdh.PdhGetRawCounterArrayW(_In_ PDH_HCOUNTER hCounter,_Inout_ LPDWORD lpdwBufferSize,_Out_ LPDWORD lpdwItemCount,_Out_ PPDH_RAW_COUNTER_ITEM ItemBuffer)
PDH_STATUS None pdh.PdhGetRawCounterValue(_In_ PDH_HCOUNTER hCounter,_Out_ LPDWORD lpdwType,_Out_ PPDH_RAW_COUNTER pValue)
PDH_STATUS None pdh.PdhLookupPerfIndexByNameA(_In_ LPCTSTR szMachineName,_In_ LPCTSTR szNameBuffer,_Out_ LPDWORD pdwIndex)
PDH_STATUS None pdh.PdhLookupPerfIndexByName(_In_ LPCTSTR szMachineName,_In_ LPCTSTR szNameBuffer,_Out_ LPDWORD pdwIndex)
PDH_STATUS None pdh.PdhLookupPerfIndexByNameW(_In_ LPCTSTR szMachineName,_In_ LPCTSTR szNameBuffer,_Out_ LPDWORD pdwIndex)
PDH_STATUS None pdh.PdhLookupPerfNameByIndexA(_In_ LPCTSTR szMachineName,_In_ DWORD dwNameIndex,_Out_ LPTSTR szNameBuffer,_Inout_ LPDWORD pcchNameBufferSize)
PDH_STATUS None pdh.PdhLookupPerfNameByIndex(_In_ LPCTSTR szMachineName,_In_ DWORD dwNameIndex,_Out_ LPTSTR szNameBuffer,_Inout_ LPDWORD pcchNameBufferSize)
PDH_STATUS None pdh.PdhLookupPerfNameByIndexW(_In_ LPCTSTR szMachineName,_In_ DWORD dwNameIndex,_Out_ LPTSTR szNameBuffer,_Inout_ LPDWORD pcchNameBufferSize)
PDH_STATUS None pdh.PdhMakeCounterPathA(_In_ PDH_COUNTER_PATH_ELEMENTS *pCounterPathElements,_Out_ LPTSTR szFullPathBuffer,_Inout_ LPDWORD pcchBufferSize,_In_ DWORD dwFlags)
PDH_STATUS None pdh.PdhMakeCounterPath(_In_ PDH_COUNTER_PATH_ELEMENTS *pCounterPathElements,_Out_ LPTSTR szFullPathBuffer,_Inout_ LPDWORD pcchBufferSize,_In_ DWORD dwFlags)
PDH_STATUS None pdh.PdhMakeCounterPathW(_In_ PDH_COUNTER_PATH_ELEMENTS *pCounterPathElements,_Out_ LPTSTR szFullPathBuffer,_Inout_ LPDWORD pcchBufferSize,_In_ DWORD dwFlags)
PDH_STATUS None pdh.PdhOpenLogA(_In_ LPCTSTR szLogFileName,_In_ DWORD dwAccessFlags,_In_ LPDWORD lpdwLogType,_In_ PDH_HQUERY hQuery,_In_ DWORD dwMaxSize,_In_ LPCTSTR szUserCaption,_Out_ PDH_HLOG *phLog)
PDH_STATUS None pdh.PdhOpenLog(_In_ LPCTSTR szLogFileName,_In_ DWORD dwAccessFlags,_In_ LPDWORD lpdwLogType,_In_ PDH_HQUERY hQuery,_In_ DWORD dwMaxSize,_In_ LPCTSTR szUserCaption,_Out_ PDH_HLOG *phLog)
PDH_STATUS None pdh.PdhOpenLogW(_In_ LPCTSTR szLogFileName,_In_ DWORD dwAccessFlags,_In_ LPDWORD lpdwLogType,_In_ PDH_HQUERY hQuery,_In_ DWORD dwMaxSize,_In_ LPCTSTR szUserCaption,_Out_ PDH_HLOG *phLog)
PDH_STATUS None pdh.PdhOpenQueryA(_In_ LPCTSTR szDataSource,_In_ DWORD_PTR dwUserData,_Out_ PDH_HQUERY *phQuery)
PDH_STATUS None pdh.PdhOpenQueryH(_In_ PDH_HLOG hDataSource,_In_ DWORD_PTR dwUserData,_Out_ PDH_HQUERY *phQuery)
PDH_STATUS None pdh.PdhOpenQuery(_In_ LPCTSTR szDataSource,_In_ DWORD_PTR dwUserData,_Out_ PDH_HQUERY *phQuery)
PDH_STATUS None pdh.PdhOpenQueryW(_In_ LPCTSTR szDataSource,_In_ DWORD_PTR dwUserData,_Out_ PDH_HQUERY *phQuery)
PDH_STATUS None pdh.PdhParseCounterPathA(_In_ LPCTSTR szFullPathBuffer,_Out_ PDH_COUNTER_PATH_ELEMENTS *pCounterPathElements,_Inout_ LPDWORD pdwBufferSize,DWORD dwFlags None)
PDH_STATUS None pdh.PdhParseCounterPath(_In_ LPCTSTR szFullPathBuffer,_Out_ PDH_COUNTER_PATH_ELEMENTS *pCounterPathElements,_Inout_ LPDWORD pdwBufferSize,DWORD dwFlags None)
PDH_STATUS None pdh.PdhParseCounterPathW(_In_ LPCTSTR szFullPathBuffer,_Out_ PDH_COUNTER_PATH_ELEMENTS *pCounterPathElements,_Inout_ LPDWORD pdwBufferSize,DWORD dwFlags None)
PDH_STATUS None pdh.PdhParseInstanceNameA(_In_ LPCTSTR szInstanceString,_Out_ LPTSTR szInstanceName,_Inout_ LPDWORD pcchInstanceNameLength,_Out_ LPTSTR szParentName,_Inout_ LPDWORD pcchParentNameLength,_Out_ LPDWORD lpIndex)
PDH_STATUS None pdh.PdhParseInstanceName(_In_ LPCTSTR szInstanceString,_Out_ LPTSTR szInstanceName,_Inout_ LPDWORD pcchInstanceNameLength,_Out_ LPTSTR szParentName,_Inout_ LPDWORD pcchParentNameLength,_Out_ LPDWORD lpIndex)
PDH_STATUS None pdh.PdhParseInstanceNameW(_In_ LPCTSTR szInstanceString,_Out_ LPTSTR szInstanceName,_Inout_ LPDWORD pcchInstanceNameLength,_Out_ LPTSTR szParentName,_Inout_ LPDWORD pcchParentNameLength,_Out_ LPDWORD lpIndex)
PDH_STATUS None pdh.PdhReadRawLogRecord(_In_ PDH_HLOG hLog,_In_ FILETIME ftRecord,_Out_ PPDH_RAW_LOG_RECORD pRawLogRecord,_In_ LPDWORD pdwBufferLength)
PDH_STATUS None pdh.PdhRemoveCounter(_In_ PDH_HCOUNTER hCounter)
PDH_STATUS None pdh.PdhSelectDataSourceA(_In_ HWND hWndOwner,_In_ DWORD dwFlags,_Out_ LPTSTR szDataSource,_Inout_ LPDWORD pcchBufferLength)
PDH_STATUS None pdh.PdhSelectDataSource(_In_ HWND hWndOwner,_In_ DWORD dwFlags,_Out_ LPTSTR szDataSource,_Inout_ LPDWORD pcchBufferLength)
PDH_STATUS None pdh.PdhSelectDataSourceW(_In_ HWND hWndOwner,_In_ DWORD dwFlags,_Out_ LPTSTR szDataSource,_Inout_ LPDWORD pcchBufferLength)
PDH_STATUS None pdh.PdhSetCounterScaleFactor(_In_ PDH_HCOUNTER hCounter,_In_ LONG lFactor)
PDH_STATUS None pdh.PdhSetDefaultRealTimeDataSource(_In_ DWORD dwDataSourceId)
PDH_STATUS None pdh.PdhSetQueryTimeRange(_In_ PDH_HQUERY hQuery,_In_ PPDH_TIME_INFO pInfo)
PDH_STATUS None pdh.PdhUpdateLogA(_In_ PDH_HLOG hLog,_In_ LPCTSTR szUserString)
PDH_STATUS None pdh.PdhUpdateLogFileCatalog(_In_ PDH_HLOG hLog)
PDH_STATUS None pdh.PdhUpdateLog(_In_ PDH_HLOG hLog,_In_ LPCTSTR szUserString)
PDH_STATUS None pdh.PdhUpdateLogW(_In_ PDH_HLOG hLog,_In_ LPCTSTR szUserString)
PDH_STATUS None pdh.PdhValidatePathA(_In_ LPCTSTR szFullCounterPath)
PDH_STATUS None pdh.PdhValidatePathExA(_In_opt_ PDH_HLOG hDataSource,_In_ LPCTSTR szFullPathBuffer)
PDH_STATUS None pdh.PdhValidatePathEx(_In_opt_ PDH_HLOG hDataSource,_In_ LPCTSTR szFullPathBuffer)
PDH_STATUS None pdh.PdhValidatePathExW(_In_opt_ PDH_HLOG hDataSource,_In_ LPCTSTR szFullPathBuffer)
PDH_STATUS None pdh.PdhValidatePath(_In_ LPCTSTR szFullCounterPath)
PDH_STATUS None pdh.PdhValidatePathW(_In_ LPCTSTR szFullCounterPath)
PDH_STATUS __stdcall None.CounterPathCallBack(_In_ DWORD_PTR dwArg)
PDISK_DETECTION_INFO None None.DiskGeometryGetDetect(PDISK_GEOMETRY_EX Geometry None)
PDMA_ADAPTER None None.WdfDmaEnablerWdmGetDmaAdapter(_In_ WDFDMAENABLER DmaEnabler,_In_ WDF_DMA_DIRECTION DmaDirection)
PDNS_RECORD None dnsapi.DnsRecordSetDetach(_Inout_ PDNS_RECORD pRR)
PDNS_RECORD WINAPI dnsapi.DnsRecordCopyEx(_In_ PDNS_RECORD pRecord,_In_ DNS_CHARSET CharSetIn,_In_ DNS_CHARSET CharSetOut)
PDNS_RECORD WINAPI dnsapi.DnsRecordSetCopyEx(_In_ PDNS_RECORD pRecordSet,_In_ DNS_CHARSET CharSetIn,_In_ DNS_CHARSET CharSetOut)
PDRIVER_CANCEL None None.IoSetCancelRoutine(_In_ PIRP Irp,_In_ PDRIVER_CANCEL CancelRoutine)
PDRIVER_OBJECT None None.WdfDriverWdmGetDriverObject(_In_ WDFDRIVER Driver)
PDWORD WINAPI advapi32.GetSidSubAuthority(_In_ PSID pSid,_In_ DWORD nSubAuthority)
PETHREAD None None.PsGetCurrentThread(void None None)
PEVENT_DESCRIPTOR None None.EventDescOrKeyword([in] PEVENT_DESCRIPTOR EventDescriptor,[in] ULONGLONG Keyword)
PEVENT_DESCRIPTOR None None.EventDescSetChannel([in] PEVENT_DESCRIPTOR EventDescriptor,[in] UCHAR Channel)
PEVENT_DESCRIPTOR None None.EventDescSetLevel([in] PEVENT_DESCRIPTOR EventDescriptor,[in] UCHAR Level)
PEVENT_DESCRIPTOR None None.EventDescSetOpcode([in] PEVENT_DESCRIPTOR EventDescriptor,[in] UCHAR Opcode)
PEVENT_DESCRIPTOR None None.EventDescSetTask([in] PEVENT_DESCRIPTOR EventDescriptor,[in] USHORT Task)
PEVENT_DESCRIPTOR None None.EventDescSetVersion([in] PEVENT_DESCRIPTOR EventDescriptor,[in] UCHAR Version)
PEXCEPTION_ROUTINE WINAPI kernel32.RtlVirtualUnwind(_In_ HandlerType None,_In_ ImageBase None,_In_ ControlPC None,_In_ FunctionEntry None,_Inout_ ContextRecord None,_Out_ InFunction None,_Out_ EstablisherFrame None,_Inout_opt_ ContextPointers None)
PFILE_OBJECT None None.IoCreateStreamFileObjectEx(_In_opt_ PFILE_OBJECT FileObject,_In_opt_ PDEVICE_OBJECT DeviceObject,_Out_opt_ PHANDLE FileHandle)
PFILE_OBJECT None None.IoCreateStreamFileObject(_In_opt_ PFILE_OBJECT FileObject,_In_opt_ PDEVICE_OBJECT DeviceObject)
PFILE_OBJECT None None.IoCreateStreamFileObjectLite(_In_opt_ PFILE_OBJECT FileObject,_In_opt_ PDEVICE_OBJECT DeviceObject)
PFILE_OBJECT None None.WdfFileObjectWdmGetFileObject(_In_ WDFFILEOBJECT FileObject)
PFILE_OBJECT None None.WdfIoTargetWdmGetTargetFileObject(_In_ WDFIOTARGET IoTarget)
PFLT_CALLBACK_DATA None None.FltCbdqRemoveIo(_Inout_ PFLT_CALLBACK_DATA_QUEUE Cbdq,_In_ PFLT_CALLBACK_DATA_QUEUE_IO_CONTEXT Context)
PGENERIC_MAPPING None None.IoGetFileObjectGenericMapping(void None None)
PHYSICAL_ADDRESS None None.MapTransfer(_In_ PDMA_ADAPTER DmaAdapter,_In_ PMDL Mdl,_In_ PVOID MapRegisterBase,_In_ PVOID CurrentVa,_Inout_ PULONG Length,_In_ BOOLEAN WriteToDevice)
PHYSICAL_ADDRESS None None.WdfCommonBufferGetAlignedLogicalAddress(_In_ WDFCOMMONBUFFER CommonBuffer)
PIDLIST_ABSOLUTE None None.ILCloneFull(_In_ PCUIDLIST_ABSOLUTE pidl)
PIDLIST_ABSOLUTE None shell32.ILCombine(_In_ PCIDLIST_ABSOLUTE pidl1,_In_ PCUIDLIST_RELATIVE pidl2)
PIDLIST_ABSOLUTE None shell32.ILCreateFromPathA(_In_ PCTSTR pszPath)
PIDLIST_ABSOLUTE None shell32.ILCreateFromPath(_In_ PCTSTR pszPath)
PIDLIST_ABSOLUTE None shell32.ILCreateFromPathW(_In_ PCTSTR pszPath)
PIDLIST_ABSOLUTE None shell32.SHBrowseForFolderA(_In_ LPBROWSEINFO lpbi)
PIDLIST_ABSOLUTE None shell32.SHBrowseForFolder(_In_ LPBROWSEINFO lpbi)
PIDLIST_ABSOLUTE None shell32.SHBrowseForFolderW(_In_ LPBROWSEINFO lpbi)
PIDLIST_ABSOLUTE None shell32.SHCloneSpecialIDList(HWND hwndOwner None,_In_ int csidl,_In_ BOOL fCreate)
PIDLIST_ABSOLUTE None shell32.SHSimpleIDListFromPath(_In_ PCWSTR pszPath)
PIDLIST_RELATIVE None shell32.ILAppendID(_In_opt_ PIDLIST_RELATIVE pidl,_In_ LPSHITEMID pmkid,BOOL fAppend None)
PIDLIST_RELATIVE None shell32.ILClone(_In_ PCUIDLIST_RELATIVE pidl)
PIFIMETRICS None None.DrvQueryFont(DHPDEV dhpdev None,ULONG_PTR iFile None,ULONG iFace None,ULONG_PTR *pid None)
PIMAGE_DEBUG_INFORMATION WINAPI dbghelp.MapDebugInformation(_In_opt_ HANDLE FileHandle,_In_ PCSTR FileName,_In_opt_ PCSTR SymbolPath,_In_ ULONG ImageBase)
PIMAGE_NT_HEADERS WINAPI dbghelp.ImageNtHeader(_In_ PVOID ImageBase)
PIMAGE_SECTION_HEADER WINAPI dbghelp.ImageRvaToSection(_In_ PIMAGE_NT_HEADERS NtHeaders,_In_ PVOID Base,_In_ ULONG Rva)
PIO_RESOURCE_DESCRIPTOR None None.WdfIoResourceListGetDescriptor(_In_ WDFIORESLIST ResourceList,_In_ ULONG Index)
PIO_STACK_LOCATION None None.IoGetCurrentIrpStackLocation(_In_ PIRP Irp)
PIO_STACK_LOCATION None None.IoGetNextIrpStackLocation(_In_ PIRP Irp)
PIP_ADAPTER_ORDER_MAP WINAPI iphlpapi.GetAdapterOrderMap(void None None)
PIRP None None.IoAllocateIrp(_In_ CCHAR StackSize,_In_ BOOLEAN ChargeQuota)
PIRP None None.IoBuildAsynchronousFsdRequest(_In_ ULONG MajorFunction,_In_ PDEVICE_OBJECT DeviceObject,_Inout_ PVOID Buffer,_In_opt_ ULONG Length,_In_opt_ PLARGE_INTEGER StartingOffset,_In_opt_ PIO_STATUS_BLOCK IoStatusBlock)
PIRP None None.IoBuildDeviceIoControlRequest(_In_ ULONG IoControlCode,_In_ PDEVICE_OBJECT DeviceObject,_In_opt_ PVOID InputBuffer,_In_ ULONG InputBufferLength,_Out_opt_ PVOID OutputBuffer,_In_ ULONG OutputBufferLength,_In_ BOOLEAN InternalDeviceIoControl,_In_opt_ PKEVENT Event,_Out_ PIO_STATUS_BLOCK IoStatusBlock)
PIRP None None.IoBuildSynchronousFsdRequest(_In_ ULONG MajorFunction,_In_ PDEVICE_OBJECT DeviceObject,_Inout_ PVOID Buffer,_In_opt_ ULONG Length,_In_opt_ PLARGE_INTEGER StartingOffset,_In_ PKEVENT Event,_Out_ PIO_STATUS_BLOCK IoStatusBlock)
PIRP None None.IoCsqRemoveIrp(_Inout_ PIO_CSQ Csq,_Inout_ PIO_CSQ_IRP_CONTEXT Context)
PIRP None None.IoCsqRemoveNextIrp(_Inout_ PIO_CSQ Csq,_In_opt_ PVOID PeekContext)
PIRP None None.IoGetTopLevelIrp(VOID None None)
PIRP None None.WdfRequestWdmGetIrp(_In_ WDFREQUEST Request)
PITEMID_CHILD None shell32.ILCloneFirst(_In_ PCUIDLIST_RELATIVE pidl)
PKDEVICE_QUEUE_ENTRY None None.KeRemoveByKeyDeviceQueue(_Inout_ PKDEVICE_QUEUE DeviceQueue,_In_ ULONG SortKey)
PKDEVICE_QUEUE_ENTRY None None.KeRemoveDeviceQueue(_Inout_ PKDEVICE_QUEUE DeviceQueue)
PKDPC None None.WdfDpcWdmGetDpc(_In_ WDFDPC Dpc)
PKEVENT None None.IoCreateNotificationEvent(_In_ PUNICODE_STRING EventName,_Out_ PHANDLE EventHandle)
PKEVENT None None.IoCreateSynchronizationEvent(_In_ PUNICODE_STRING EventName,_Out_ PHANDLE EventHandle)
PKINTERRUPT None None.WdfInterruptWdmGetInterrupt(_In_ WDFINTERRUPT Interrupt)
PLDAPSearch None wldap32.ldap_search_init_pageA(_In_ PLDAP ExternalHandle,_In_ PCHAR DistinguishedName,_In_ ULONG ScopeOfSearch,_In_ PCHAR SearchFilter,_In_ PCHAR AttributeList[],_In_ ULONG AttributesOnly,_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls,_In_ ULONG PageTimeLimit,_In_ ULONG TotalSizeLimit,_In_ PLDAPSortKey *SortKeys)
PLDAPSearch None wldap32.ldap_search_init_page(_In_ PLDAP ExternalHandle,_In_ PCHAR DistinguishedName,_In_ ULONG ScopeOfSearch,_In_ PCHAR SearchFilter,_In_ PCHAR AttributeList[],_In_ ULONG AttributesOnly,_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls,_In_ ULONG PageTimeLimit,_In_ ULONG TotalSizeLimit,_In_ PLDAPSortKey *SortKeys)
PLDAPSearch None wldap32.ldap_search_init_pageW(_In_ PLDAP ExternalHandle,_In_ PCHAR DistinguishedName,_In_ ULONG ScopeOfSearch,_In_ PCHAR SearchFilter,_In_ PCHAR AttributeList[],_In_ ULONG AttributesOnly,_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls,_In_ ULONG PageTimeLimit,_In_ ULONG TotalSizeLimit,_In_ PLDAPSortKey *SortKeys)
PLIST_ENTRY None None.ExInterlockedInsertHeadList(_Inout_ PLIST_ENTRY ListHead,_Inout_ PLIST_ENTRY ListEntry,_Inout_ PKSPIN_LOCK Lock)
PLIST_ENTRY None None.ExInterlockedInsertTailList(_Inout_ PLIST_ENTRY ListHead,_Inout_ PLIST_ENTRY ListEntry,_Inout_ PKSPIN_LOCK Lock)
PLIST_ENTRY None None.RemoveHeadList(_Inout_ PLIST_ENTRY ListHead)
PLIST_ENTRY None None.RemoveTailList(_Inout_ PLIST_ENTRY ListHead)
PMDL None None.IoAllocateMdl(_In_opt_ PVOID VirtualAddress,_In_ ULONG Length,_In_ BOOLEAN SecondaryBuffer,_In_ BOOLEAN ChargeQuota,_Inout_opt_ PIRP Irp)
PMDL None None.MmAllocatePagesForMdlEx(_In_ PHYSICAL_ADDRESS LowAddress,_In_ PHYSICAL_ADDRESS HighAddress,_In_ PHYSICAL_ADDRESS SkipBytes,_In_ SIZE_T TotalBytes,_In_ MEMORY_CACHING_TYPE CacheType,_In_ ULONG Flags)
PMDL None None.MmAllocatePagesForMdl(_In_ PHYSICAL_ADDRESS LowAddress,_In_ PHYSICAL_ADDRESS HighAddress,_In_ PHYSICAL_ADDRESS SkipBytes,_In_ SIZE_T TotalBytes)
POINTS None None.MAKEPOINTS(DWORD dwValue None)
POSITION None None.Next(POSITION pos None)
PostBackOptions None None.GetPostBackOptions(IButtonControl buttonControl None)
POWER_ACTION None None.WdfDeviceGetSystemPowerAction(_In_ WDFDEVICE Device)
POWER_PLATFORM_ROLE WINAPI powrprof.PowerDeterminePlatformRoleEx(_In_ ULONG Version)
POWER_PLATFORM_ROLE WINAPI powrprof.PowerDeterminePlatformRole(void None None)
PPERF_COUNTERSET_INSTANCE None advapi32.PerfCreateInstance(_In_ HANDLE hProvider,_In_ LPCGUID CounterSetGuid,_In_ LPCWSTR szInstanceName,_In_ ULONG dwInstance)
PPERF_COUNTERSET_INSTANCE None advapi32.PerfQueryInstance(_In_ HANDLE hProvider,_In_ LPCGUID CounterSetGuid,_In_ LPCWSTR szInstance,_In_ ULONG dwInstance)
Private Function None.SelectOracleRows(connection As String,queryString As String,tableName As String)
Private Function None.VerifyWorkgroupMode(Void None None)
Private Sub None.DeviceManager1_OnEvent(EventID None None,DeviceID None None,ItemID None None)
Private Sub None.SerializeDataSet(filename As String)
PropertyDescriptorCollection None None.GetItemProperties(PropertyDescriptor[] listAccessors None)
PropertyDescriptor None None.GetDefaultProperty(Object component None)
PropertyInfo None None.GetProperty(String name None,BindingFlags bindingAttr None,Binder binder None,Type returnType None,Type[] types None,ParameterModifier[] modifiers None)
Property None None.Item(index As Integer)
Property None None.Item(key As TKey)
PSCSI_REQUEST_BLOCK None None.ScsiPortGetSrb(_In_ PVOID DeviceExtension,_In_ UCHAR PathId,_In_ UCHAR TargetId,_In_ UCHAR Lun,_In_ LONG QueueTag)
PSecurityFunctionTable SEC_Entry secur32.InitSecurityInterfaceA(void None None)
PSecurityFunctionTable SEC_Entry secur32.InitSecurityInterface(void None None)
PSecurityFunctionTable SEC_Entry secur32.InitSecurityInterfaceW(void None None)
PSID_IDENTIFIER_AUTHORITY WINAPI advapi32.GetSidIdentifierAuthority(_In_ PSID pSid)
PSINGLE_LIST_ENTRY None None.ExInterlockedPushEntryList(_Inout_ PSINGLE_LIST_ENTRY ListHead,_Inout_ PSINGLE_LIST_ENTRY ListEntry,_Inout_ PKSPIN_LOCK Lock)
PSINGLE_LIST_ENTRY None None.PopEntryList(_Inout_ PSINGLE_LIST_ENTRY ListHead)
PSLIST_ENTRY FASTCALL kernel32.InterlockedPushListSList(_Inout_ PSLIST_HEADER ListHead,_Inout_ PSLIST_ENTRY List,_Inout_ PSLIST_ENTRY ListEnd,_In_ ULONG Count)
PSLIST_ENTRY WINAPI kernel32.InterlockedFlushSList(_Inout_ PSLIST_HEADER ListHead)
PSLIST_ENTRY WINAPI kernel32.InterlockedPopEntrySList(_Inout_ PSLIST_HEADER ListHead)
PSLIST_ENTRY WINAPI kernel32.InterlockedPushEntrySList(_Inout_ PSLIST_HEADER ListHead,_Inout_ PSLIST_ENTRY ListEntry)
PSLIST_ENTRY WINAPI kernel32.InterlockedPushListSListEx(_Inout_ PSLIST_HEADER ListHead,_Inout_ PSLIST_ENTRY List,_Inout_ PSLIST_ENTRY ListEnd,_In_ ULONG Count)
PSLIST_ENTRY WINAPI ntdll.RtlFirstEntrySList(_In_ PSLIST_HEADER ListHead)
PSLIST_ENTRY WINAPI ntdll.RtlInterlockedFlushSList(_In_ PSLIST_HEADER ListHead)
PSLIST_ENTRY WINAPI ntdll.RtlInterlockedPopEntrySList(_In_ PSLIST_HEADER ListHead)
PSLIST_ENTRY WINAPI ntdll.RtlInterlockedPushEntrySList(_In_ PSLIST_HEADER ListHead,_In_ PSLIST_ENTRY ListEntry)
PSSTDAPI None propsys.GetPropertyDescriptionByName([in] LPCWSTR pszCanonicalName,[in] REFIID riid,[out] void **ppv)
PSSTDAPI None propsys.PSEnumeratePropertyDescriptions(_In_ PROPDESC_ENUMFILTER filterOn,_In_ REFIID riid,_Out_ void **ppv)
PSSTDAPI None propsys.PSGetItemPropertyHandler(_In_ IUnknown *punkItem,_In_ BOOL fReadWrite,_In_ REFIID riid,_Out_ void **ppv)
PSSTDAPI None propsys.PSGetItemPropertyHandlerWithCreateObject(_In_ IUnknown *punkItem,_In_ BOOL fReadWrite,_In_ IUnknown *punkCreateObject,_In_ REFIID riid,_Out_ void **ppv)
PSSTDAPI None propsys.PSGetNamedPropertyFromPropertyStorage(_In_ PCUSERIALIZEDPROPSTORAGE psps,_In_ DWORD cb,_In_ LPCWSTR pszName,_Out_ PROPVARIANT *ppropvar)
PSSTDAPI None propsys.PSGetPropertyDescriptionByName(_In_ LPCWSTR pszCanonicalName,_In_ REFIID riid,_Out_ void **ppv)
PSSTDAPI None propsys.PSGetPropertyDescription(_In_ REFPROPERTYKEY propkey,_In_ REFIID riid,_Out_ void **ppv)
PSSTDAPI None propsys.PSGetPropertyDescriptionListFromString(_In_ LPCWSTR pszPropList,_In_ REFIID riid,_Out_ void **ppv)
PSSTDAPI None propsys.PSGetPropertyFromPropertyStorage(_In_ PCUSERIALIZEDPROPSTORAGE psps,_In_ DWORD cb,_In_ REFPROPERTYKEY rpkey,_Out_ PROPVARIANT **ppropvar)
PSSTDAPI None propsys.PSGetPropertySystem(_In_ REFIID riid,_Out_ void **ppv)
PSSTDAPI None propsys.PSLookupPropertyHandlerCLSID(_In_ PCWSTR pszFilePath,_Out_ CLSID *pclsid)
PSTR None shlwapi.StrFormatByteSize64A(LONGLONG qdw None,_Out_ PSTR pszBuf,UINT cchBuf None)
PSTR None shlwapi.StrFormatByteSize64(LONGLONG qdw None,_Out_ PSTR pszBuf,UINT cchBuf None)
PSTR None shlwapi.StrFormatByteSizeA(DWORD dw None,_Out_ PSTR pszBuf,UINT cchBuf None)
PTCHAR WINAPI dbghelp.SymGetHomeDirectory(_In_ DWORD type,_Out_ PTSTR dir,_In_ size_t size)
PTCHAR WINAPI dbghelp.SymGetHomeDirectoryW(_In_ DWORD type,_Out_ PTSTR dir,_In_ size_t size)
PTCHAR WINAPI dbghelp.SymSetHomeDirectory(_In_ HANDLE hProcess,_In_opt_ PCTSTR dir)
PTCHAR WINAPI dbghelp.SymSetHomeDirectoryW(_In_ HANDLE hProcess,_In_opt_ PCTSTR dir)
PTP_CLEANUP_GROUP WINAPI kernel32.CreateThreadpoolCleanupGroup(void None None)
PTP_IO WINAPI kernel32.CreateThreadpoolIo(_In_ HANDLE fl,_In_ PTP_WIN32_IO_CALLBACK pfnio,_Inout_opt_ PVOID pv,_In_opt_ PTP_CALLBACK_ENVIRON pcbe)
PTP_POOL WINAPI kernel32.CreateThreadpool(_Reserved_ PVOID reserved)
PTP_TIMER WINAPI kernel32.CreateThreadpoolTimer(_In_ PTP_TIMER_CALLBACK pfnti,_Inout_opt_ PVOID pv,_In_opt_ PTP_CALLBACK_ENVIRON pcbe)
PTP_WAIT WINAPI kernel32.CreateThreadpoolWait(_In_ PTP_WAIT_CALLBACK pfnwa,_Inout_opt_ PVOID pv,_In_opt_ PTP_CALLBACK_ENVIRON pcbe)
PTP_WORK WINAPI kernel32.CreateThreadpoolWork(_In_ PTP_WORK_CALLBACK pfnwk,_Inout_opt_ PVOID pv,_In_opt_ PTP_CALLBACK_ENVIRON pcbe)
PTSTR None shlwapi.PathFindExtensionA(_In_ PTSTR pszPath)
PTSTR None shlwapi.PathFindExtension(_In_ PTSTR pszPath)
PTSTR None shlwapi.PathFindExtensionW(_In_ PTSTR pszPath)
PTSTR None shlwapi.PathFindFileNameA(_In_ PTSTR pPath)
PTSTR None shlwapi.PathFindFileName(_In_ PTSTR pPath)
PTSTR None shlwapi.PathFindFileNameW(_In_ PTSTR pPath)
PTSTR None shlwapi.PathFindNextComponentA(_In_ PTSTR pszPath)
PTSTR None shlwapi.PathFindNextComponent(_In_ PTSTR pszPath)
PTSTR None shlwapi.PathFindNextComponentW(_In_ PTSTR pszPath)
PTSTR None shlwapi.PathGetArgsA(_In_ PTSTR pszPath)
PTSTR None shlwapi.PathGetArgs(_In_ PTSTR pszPath)
PTSTR None shlwapi.PathGetArgsW(_In_ PTSTR pszPath)
PTSTR None shlwapi.PathSkipRootA(_In_ PTSTR pszPath)
PTSTR None shlwapi.PathSkipRoot(_In_ PTSTR pszPath)
PTSTR None shlwapi.PathSkipRootW(_In_ PTSTR pszPath)
PTSTR None shlwapi.StrCatBuffA(_Inout_ PTSTR pszDest,_In_ PCTSTR pszSrc,int cchDestBuffSize None)
PTSTR None shlwapi.StrCatBuff(_Inout_ PTSTR pszDest,_In_ PCTSTR pszSrc,int cchDestBuffSize None)
PTSTR None shlwapi.StrCatBuffW(_Inout_ PTSTR pszDest,_In_ PCTSTR pszSrc,int cchDestBuffSize None)
PTSTR None shlwapi.StrCat(_Inout_ PTSTR psz1,_In_ PCTSTR psz2)
PTSTR None shlwapi.StrCatW(_Inout_ PTSTR psz1,_In_ PCTSTR psz2)
PTSTR None shlwapi.StrChrA(_In_ PTSTR pszStart,TCHAR wMatch None)
PTSTR None shlwapi.StrChrIA(_In_ PTSTR pszStart,TCHAR wMatch None)
PTSTR None shlwapi.StrChrI(_In_ PTSTR pszStart,TCHAR wMatch None)
PTSTR None shlwapi.StrChr(_In_ PTSTR pszStart,TCHAR wMatch None)
PTSTR None shlwapi.StrChrIW(_In_ PTSTR pszStart,TCHAR wMatch None)
PTSTR None shlwapi.StrChrW(_In_ PTSTR pszStart,TCHAR wMatch None)
PTSTR None shlwapi.StrCpyN(_Out_ PTSTR pszDst,_In_ PCTSTR pszSrc,int cchMax None)
PTSTR None shlwapi.StrCpyNW(_Out_ PTSTR pszDst,_In_ PCTSTR pszSrc,int cchMax None)
PTSTR None shlwapi.StrCpy(_Out_ PTSTR psz1,_In_ PCTSTR psz2)
PTSTR None shlwapi.StrCpyW(_Out_ PTSTR psz1,_In_ PCTSTR psz2)
PTSTR None shlwapi.StrDupA(PCTSTR pszSrch None)
PTSTR None shlwapi.StrDup(PCTSTR pszSrch None)
PTSTR None shlwapi.StrDupW(PCTSTR pszSrch None)
PTSTR None shlwapi.StrFormatKBSizeA(LONGLONG qdw None,_Out_ PTSTR pszBuf,UINT cchBuf None)
PTSTR None shlwapi.StrFormatKBSize(LONGLONG qdw None,_Out_ PTSTR pszBuf,UINT cchBuf None)
PTSTR None shlwapi.StrFormatKBSizeW(LONGLONG qdw None,_Out_ PTSTR pszBuf,UINT cchBuf None)
PTSTR None shlwapi.StrNCatA(_Inout_ PTSTR psz1,PCTSTR psz2 None,int cchMax None)
PTSTR None shlwapi.StrNCat(_Inout_ PTSTR psz1,PCTSTR psz2 None,int cchMax None)
PTSTR None shlwapi.StrNCatW(_Inout_ PTSTR psz1,PCTSTR psz2 None,int cchMax None)
PTSTR None shlwapi.StrPBrkA(_In_ PTSTR psz,_In_ PCTSTR pszSet)
PTSTR None shlwapi.StrPBrk(_In_ PTSTR psz,_In_ PCTSTR pszSet)
PTSTR None shlwapi.StrPBrkW(_In_ PTSTR psz,_In_ PCTSTR pszSet)
PTSTR None shlwapi.StrRChrA(_In_ PTSTR pszStart,_In_opt_ PCTSTR pszEnd,TCHAR wMatch None)
PTSTR None shlwapi.StrRChrIA(_In_ PTSTR pszStart,_In_opt_ PCTSTR pszEnd,TCHAR wMatch None)
PTSTR None shlwapi.StrRChrI(_In_ PTSTR pszStart,_In_opt_ PCTSTR pszEnd,TCHAR wMatch None)
PTSTR None shlwapi.StrRChr(_In_ PTSTR pszStart,_In_opt_ PCTSTR pszEnd,TCHAR wMatch None)
PTSTR None shlwapi.StrRChrIW(_In_ PTSTR pszStart,_In_opt_ PCTSTR pszEnd,TCHAR wMatch None)
PTSTR None shlwapi.StrRChrW(_In_ PTSTR pszStart,_In_opt_ PCTSTR pszEnd,TCHAR wMatch None)
PTSTR None shlwapi.StrRStrIA(_In_ PTSTR pszSource,_In_opt_ PCTSTR pszLast,_In_ PCTSTR pszSrch)
PTSTR None shlwapi.StrRStrI(_In_ PTSTR pszSource,_In_opt_ PCTSTR pszLast,_In_ PCTSTR pszSrch)
PTSTR None shlwapi.StrRStrIW(_In_ PTSTR pszSource,_In_opt_ PCTSTR pszLast,_In_ PCTSTR pszSrch)
PTSTR None shlwapi.StrStrA(_In_ PTSTR pszFirst,_In_ PCTSTR pszSrch)
PTSTR None shlwapi.StrStrIA(_In_ PTSTR pszFirst,_In_ PCTSTR pszSrch)
PTSTR None shlwapi.StrStrI(_In_ PTSTR pszFirst,_In_ PCTSTR pszSrch)
PTSTR None shlwapi.StrStr(_In_ PTSTR pszFirst,_In_ PCTSTR pszSrch)
PTSTR None shlwapi.StrStrIW(_In_ PTSTR pszFirst,_In_ PCTSTR pszSrch)
PTSTR None shlwapi.StrStrW(_In_ PTSTR pszFirst,_In_ PCTSTR pszSrch)
PTXN_PARAMETER_BLOCK None None.IoGetTransactionParameterBlock(_In_ PFILE_OBJECT FileObject)
publiBOOL WINAPI kernel32.CopyFile(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName,_In_ BOOL bFailIfExists)
Public Class None.Dictionary(Of entryType None,keyType As IComparable)
Public Sub activeds.ListServicesOnComputer(ComputerName As String)
PUCHAR WINAPI advapi32.GetSidSubAuthorityCount(_In_ PSID pSid)
PUIDLIST_RELATIVE None None.ILNext(_In_ PUIDLIST_RELATIVE pidl)
PUIDLIST_RELATIVE None None.ILSkip(_In_ PUIDLIST_RELATIVE pidl,UINT cb None)
PUIDLIST_RELATIVE None shell32.ILFindChild(_In_ PCIDLIST_ABSOLUTE pidlParent,_In_ PCIDLIST_ABSOLUTE pidlChild)
PUIDLIST_RELATIVE None shell32.ILGetNext(_In_opt_ PCUIDLIST_RELATIVE pidl)
PUITEMID_CHILD None shell32.ILFindLastID(_In_ PCUIDLIST_RELATIVE pidl)
PUMS_CONTEXT WINAPI kernel32.GetCurrentUmsThread(void None None)
PUMS_CONTEXT WINAPI kernel32.GetNextUmsListItem(_Inout_ PUMS_CONTEXT UmsContext)
PUNICODE_STRING None None.WdfFileObjectGetFileName(_In_ WDFFILEOBJECT FileObject)
PUNKNOWN __inline None.KsFilterGetOuterUnknown(_In_ PKSFILTER Filter)
PUNKNOWN __inline None.KsPinGetOuterUnknown(_In_ PKSPIN Pin)
PUNKNOWN None None.KsRegisterAggregatedClientUnknown(_In_ PVOID Object,_In_ PUNKNOWN ClientUnknown)
PUSB_COMMON_DESCRIPTOR None None.USBD_ParseDescriptors(_In_ PVOID DescriptorBuffer,_In_ ULONG TotalLength,_In_ PVOID StartPosition,_In_ LONG DescriptorType)
PUSB_INTERFACE_DESCRIPTOR None None.USBD_ParseConfigurationDescriptorEx(_In_ PUSB_CONFIGURATION_DESCRIPTOR ConfigurationDescriptor,_In_ PVOID StartPosition,_In_ LONG InterfaceNumber,_In_ LONG AlternateSetting,_In_ LONG InterfaceClass,_In_ LONG InterfaceSubClass,_In_ LONG InterfaceProtocol)
PVOID CALLBACK None.FunctionTableAccessProc64(_In_ HANDLE hProcess,_In_ DWORD64 AddrBase)
PVOID CALLBACK None.SymRegisterFunctionEntryCallbackProc64(_In_ HANDLE hProcess,_In_ ULONG64 AddrBase,_In_opt_ ULONG64 UserContext)
PVOID None kernel32.MapViewOfFile2(_In_ HANDLE FileMappingHandle,_In_ HANDLE ProcessHandle,_In_ ULONG64 Offset,_In_opt_ PVOID BaseAddress,_In_ SIZE_T ViewSize,_In_ ULONG AllocationType,_In_ ULONG PageProtection)
PVOID None None.AllocateCommonBufferEx(_In_ PDMA_ADAPTER DmaAdapter,_In_opt_ PPHYSICAL_ADDRESS MaximumAddress,_In_ ULONG Length,_Out_ PPHYSICAL_ADDRESS LogicalAddress,_In_ BOOLEAN CacheEnabled,_In_ NODE_REQUIREMENT PreferredNode)
PVOID None None.AllocateCommonBuffer(_In_ PDMA_ADAPTER DmaAdapter,_In_ ULONG Length,_Out_ PPHYSICAL_ADDRESS LogicalAddress,_In_ BOOLEAN CacheEnabled)
PVOID None None.AllocateHeap(_In_ ULONG Length)
PVOID None None.AllocateLsaHeap(_In_ ULONG Length)
PVOID None None.AllocateSharedMemory(_In_ PVOID SharedMem,_In_ ULONG Size)
PVOID None None.DrvQueryFontTree(DHPDEV dhpdev None,ULONG_PTR iFile None,ULONG iFace None,ULONG iMode None,ULONG_PTR *pid None)
PVOID None None.ExAllocateFromNPagedLookasideList(_Inout_ PNPAGED_LOOKASIDE_LIST Lookaside)
PVOID None None.ExAllocatePool(_In_ POOL_TYPE PoolType,_In_ SIZE_T NumberOfBytes)
PVOID None None.ExAllocatePoolWithQuota(_In_ POOL_TYPE PoolType,_In_ SIZE_T NumberOfBytes)
PVOID None None.ExAllocatePoolWithQuotaTag(_In_ POOL_TYPE PoolType,_In_ SIZE_T NumberOfBytes,_In_ ULONG Tag)
PVOID None None.ExAllocatePoolWithTag(_In_ POOL_TYPE PoolType,_In_ SIZE_T NumberOfBytes,_In_ ULONG Tag)
PVOID None None.ExAllocatePoolWithTagPriority(_In_ POOL_TYPE PoolType,_In_ SIZE_T NumberOfBytes,_In_ ULONG Tag,_In_ EX_POOL_PRIORITY Priority)
PVOID None None.ExEnterCriticalRegionAndAcquireResourceExclusive(_Inout_ PERESOURCE Resource)
PVOID None None.ExRegisterCallback(_Inout_ PCALLBACK_OBJECT CallbackObject,_In_ PCALLBACK_FUNCTION CallbackFunction,_In_opt_ PVOID CallbackContext)
PVOID None None.GetFiberData(void None None)
PVOID None None.IoAllocateErrorLogEntry(_In_ PVOID IoObject,_In_ UCHAR EntrySize)
PVOID None None.IoGetInitialStack(void None None)
PVOID None None.KeRegisterNmiCallback(_In_ PNMI_CALLBACK CallbackRoutine,_In_opt_ PVOID Context)
PVOID None None.KeRegisterProcessorChangeCallback(_In_ PPROCESSOR_CALLBACK_FUNCTION CallbackFunction,_In_opt_ PVOID CallbackContext,_In_ ULONG Flags)
PVOID None None.MmAllocateContiguousMemory(_In_ SIZE_T NumberOfBytes,_In_ PHYSICAL_ADDRESS HighestAcceptableAddress)
PVOID None None.MmAllocateContiguousMemorySpecifyCache(_In_ SIZE_T NumberOfBytes,_In_ PHYSICAL_ADDRESS LowestAcceptableAddress,_In_ PHYSICAL_ADDRESS HighestAcceptableAddress,_In_opt_ PHYSICAL_ADDRESS BoundaryAddressMultiple,_In_ MEMORY_CACHING_TYPE CacheType)
PVOID None None.MmAllocateContiguousMemorySpecifyCacheNode(_In_ SIZE_T NumberOfBytes,_In_ PHYSICAL_ADDRESS LowestAcceptableAddress,_In_ PHYSICAL_ADDRESS HighestAcceptableAddress,_In_opt_ PHYSICAL_ADDRESS BoundaryAddressMultiple,_In_ MEMORY_CACHING_TYPE CacheType,_In_ NODE_REQUIREMENT PreferredNode)
PVOID None None.MmAllocateMappingAddress(_In_ SIZE_T NumberOfBytes,_In_ ULONG PoolTag)
PVOID None None.MmAllocateNonCachedMemory(_In_ SIZE_T NumberOfBytes)
PVOID None None.MmGetSystemAddressForMdl(_In_ PMDL Mdl)
PVOID None None.MmGetSystemRoutineAddress(_In_ PUNICODE_STRING SystemRoutineName)
PVOID None None.MmLockPagableCodeSection(_In_ PVOID AddressWithinSection)
PVOID None None.MmLockPagableDataSection(_In_ PVOID AddressWithinSection)
PVOID None None.MmMapLockedPages(_In_ PMDL MemoryDescriptorList,_In_ KPROCESSOR_MODE AccessMode)
PVOID None None.MmMapLockedPagesSpecifyCache(_In_ PMDLX MemoryDescriptorList,_In_ KPROCESSOR_MODE AccessMode,_In_ MEMORY_CACHING_TYPE CacheType,_In_opt_ PVOID BaseAddress,_In_ ULONG BugCheckOnFailure,_In_ MM_PAGE_PRIORITY Priority)
PVOID None None.MmMapLockedPagesWithReservedMapping(_In_ PVOID MappingAddress,_In_ ULONG PoolTag,_In_ PMDLX MemoryDescriptorList,_In_ MEMORY_CACHING_TYPE CacheType)
PVOID None None.MmPageEntireDriver(_In_ PVOID AddressWithinSection)
PVOID None None.SecureZeroMemory(_In_ PVOID ptr,_In_ SIZE_T cnt)
PVOID None None.StorPortGetUncachedExtension(IN PVOID HwDeviceExtension,IN PPORT_CONFIGURATION_INFORMATION ConfigInfo,ULONG NumberOfBytes None)
PVOID None None.WdfCommonBufferGetAlignedVirtualAddress(_In_ WDFCOMMONBUFFER CommonBuffer)
PVOID None None.WdfGetTriageInfo(void None None)
PVOID None None.WdfMemoryGetBuffer(_In_ WDFMEMORY Memory,_Out_opt_ size_t *BufferSize)
PVOID None None.WdfObjectGetTypedContextWorker(_In_ WDFOBJECT Handle,_In_ PCWDF_OBJECT_CONTEXT_TYPE_INFO TypeInfo)
PVOID None setupapi.SetupInitDefaultQueueCallbackEx(_In_ HWND OwnerWindow,_In_ HWND AlternateProgressWindow,_In_ UINT ProgressMessage,_In_ DWORD Reserved1,_In_ PVOID Reserved2)
PVOID None setupapi.SetupInitDefaultQueueCallback(_In_ HWND OwnerWindow)
PVOID NTAPI None.CreateSharedMemory(_In_ ULONG MaxSize,_In_ ULONG InitialSize)
PVOID PXEAPI wdspxe.PxePacketAllocate(_In_ HANDLE hProvider,_In_ HANDLE hClientRequest,_In_ ULONG uSize)
PVOID WINAPI advapi32.FreeSid(_In_ PSID pSid)
PVOID WINAPI api-ms-win-core-enclave-l1-1-0.CreateEnclave(_In_ HANDLE hProcess,_In_opt_ LPVOID lpAddress,_In_ SIZE_T dwSize,_In_ SIZE_T dwInitialCommittment,_In_ DWORD flEnclaveType,_In_ LPCVOID lpEnclaveInformation,_In_ DWORD dwInfoLength,_Out_opt_ LPDWORD lpEnclaveError)
PVOID WINAPI api-ms-win-core-memory-l1-1-5.MapViewOfFileNuma2(_In_ HANDLE FileMappingHandle,_In_ HANDLE ProcessHandle,_In_ ULONG64 Offset,_In_opt_ PVOID BaseAddress,_In_ SIZE_T ViewSize,_In_ ULONG AllocationType,_In_ ULONG PageProtection,_In_ ULONG PreferredNode)
PVOID WINAPI dbghelp.ImageDirectoryEntryToDataEx(_In_ PVOID Base,_In_ BOOLEAN MappedAsImage,_In_ USHORT DirectoryEntry,_Out_ PULONG Size,_Out_opt_ PIMAGE_SECTION_HEADER *FoundHeader)
PVOID WINAPI dbghelp.ImageDirectoryEntryToData(_In_ PVOID Base,_In_ BOOLEAN MappedAsImage,_In_ USHORT DirectoryEntry,_Out_ PULONG Size)
PVOID WINAPI dbghelp.ImageRvaToVa(_In_ PIMAGE_NT_HEADERS NtHeaders,_In_ PVOID Base,_In_ ULONG Rva,_In_opt_ PIMAGE_SECTION_HEADER *LastRvaSection)
PVOID WINAPI dbghelp.SymFunctionTableAccess64(_In_ HANDLE hProcess,_In_ DWORD64 AddrBase)
PVOID WINAPI kernel32.AddVectoredContinueHandler(_In_ ULONG FirstHandler,_In_ PVECTORED_EXCEPTION_HANDLER VectoredHandler)
PVOID WINAPI kernel32.AddVectoredExceptionHandler(_In_ ULONG FirstHandler,_In_ PVECTORED_EXCEPTION_HANDLER VectoredHandler)
PVOID WINAPI kernel32.FlsGetValue(_In_ DWORD dwFlsIndex)
PVOID WINAPI kernel32.LocateXStateFeature(_In_ PCONTEXT Context,_In_ DWORD FeatureId,_Out_opt_ PDWORD Length)
PVOID WINAPI kernel32.MapViewOfFileFromApp(_In_ HANDLE hFileMappingObject,_In_ ULONG DesiredAccess,_In_ ULONG64 FileOffset,_In_ SIZE_T NumberOfBytesToMap)
PVOID WINAPI kernel32.RegisterBadMemoryNotification(_In_ PBAD_MEMORY_CALLBACK_ROUTINE Callback)
PVOID WINAPI kernel32.RtlLookupFunctionEntry(_In_ ULONGLONG ControlPc,_Out_ PULONGLONG ImageBase,_Out_ PULONGLONG TargetGp)
PVOID WINAPI kernel32.RtlPcToFileHeader(_In_ PVOID PcValue,_Out_ PVOID *BaseOfImage)
PVOID WINAPI kernel32.VirtualAllocFromApp(_In_opt_ PVOID BaseAddress,_In_ SIZE_T Size,_In_ ULONG AllocationType,_In_ ULONG Protection)
PVOID WINAPI None.AllocatePrivateHeap(_In_ SIZE_T Length)
PVOID WINAPI wlanapi.WlanAllocateMemory(_In_ DWORD dwMemorySize)
PWDFDEVICE_INIT None None.WdfPdoInitAllocate(_In_ WDFDEVICE ParentDevice)
PWSTR None None.WdfDriverGetRegistryPath(_In_ WDFDRIVER Driver)
PWSTR None shell32.StrStrNIW(_In_ PWSTR pszFirst,_In_ PCWSTR pszSrch,UINT cchMax None)
PWSTR None shell32.StrStrNW(_In_ PWSTR pszFirst,_In_ PCWSTR pszSrch,UINT cchMax None)
PWSTR None shlwapi.StrChrNIW(_In_ PCWSTR pszStart,WCHAR wMatch None,UINT cchMax None)
PWSTR None shlwapi.StrChrNW(_In_ PWSTR pszStart,WCHAR wMatch None,UINT cchMax None)
PWSTR None shlwapi.StrFormatByteSizeW(LONGLONG qdw None,_Out_ PWSTR pszBuf,UINT cchBuf None)
ReadOnly Property None.Item(key As TKey)
Rectangle None None.GetBounds(DesignerRegion region None)
RESID WINAPI None.Open(_In_ LPCWSTR ResourceName,_In_ HKEY ResourceKey,_In_ RESOURCE_HANDLE ResourceHandle)
RESID WINAPI None.OpenV2(_In_ LPCWSTR ResourceName,_In_ HKEY ResourceKey,_In_ RESOURCE_HANDLE ResourceHandle,_In_ DWORD OpenFlags)
RESULT None None.GetObjectInPath(DWORD dwPChannel None,DWORD dwStage None,DWORD dwBuffer None,REFGUID guidObject None,DWORD dwIndex None,REFGUID iidInterface None,void ** ppObject)
RESULT None shell32.SetMenuSB(HMENU hmenuShared None,HOLEMENU holemenuRes None,HWND hwndActiveObject None)
RIO_BUFFERID None mswsock.RIORegisterBuffer(_In_ PCHAR DataBuffer,_In_ DWORD DataLength)
RIO_CQ None mswsock.RIOCreateCompletionQueue(_In_ DWORD QueueSize,_In_opt_ RIO_NOTIFICATION_COMPLETION NotificationCompletion)
RIO_RQ None mswsock.RIOCreateRequestQueue(_In_ SOCKET Socket,_In_ ULONG MaxOutstandingReceive,_In_ ULONG MaxReceiveDataBuffers,_In_ ULONG MaxOutstandingSend,_In_ ULONG MaxSendDataBuffers,_In_ RIO_CQ ReceiveCQ,_In_ RIO_CQ SendCQ,_In_ PVOID SocketContext)
RoInitializeWrapper None None.initialize(RO_INIT_MULTITHREADED None None)
RPC_ENTRY None rpcrt4.UuidCreateNil(UUID __RPC_FAR *Nil_Uuid)
RPC_SS_THREAD_HANDLE RPC_ENTRY rpcrt4.RpcSmGetThreadHandle(RPC_STATUS *pStatus None)
RPC_SS_THREAD_HANDLE RPC_ENTRY rpcrt4.RpcSsGetThreadHandle(void None None)
RPC_STATUS CALLBACK None.RPC_IF_CALLBACK_FN(_In_ RPC_IF_HANDLE Interface,_In_ void *Context)
RPC_STATUS None rpcrt4.RpcBindingBind(_In_opt_ PRPC_ASYNC_STATE pAsync,_In_ RPC_BINDING_HANDLE Binding,_In_ RPC_IF_HANDLE IfSpec)
RPC_STATUS None rpcrt4.RpcBindingCreateA(_In_ RPC_BINDING_HANDLE_TEMPLATE *Template,_In_opt_ RPC_BINDING_HANDLE_SECURITY *Security,_In_opt_ RPC_BINDING_HANDLE_OPTIONS *Options,_Out_ RPC_BINDING_HANDLE *Binding)
RPC_STATUS None rpcrt4.RpcBindingCreate(_In_ RPC_BINDING_HANDLE_TEMPLATE *Template,_In_opt_ RPC_BINDING_HANDLE_SECURITY *Security,_In_opt_ RPC_BINDING_HANDLE_OPTIONS *Options,_Out_ RPC_BINDING_HANDLE *Binding)
RPC_STATUS None rpcrt4.RpcBindingCreateW(_In_ RPC_BINDING_HANDLE_TEMPLATE *Template,_In_opt_ RPC_BINDING_HANDLE_SECURITY *Security,_In_opt_ RPC_BINDING_HANDLE_OPTIONS *Options,_Out_ RPC_BINDING_HANDLE *Binding)
RPC_STATUS None rpcrt4.RpcBindingUnbind(_In_ RPC_BINDING_HANDLE Binding)
RPC_STATUS None rpcrt4.RpcServerInqBindingHandle(RPC_BINDING_HANDLE *Binding None)
RPC_STATUS None rpcrt4.RpcServerSubscribeForNotification(_In_ RPC_BINDING_HANDLE Binding,_In_ DWORD Notification,_In_ RPC_NOTIFICATION_TYPES NotificationType,_In_ RPC_ASYNC_NOTIFICATION_INFO *NotificationInfo)
RPC_STATUS None rpcrt4.RpcSsContextLockExclusive(_In_ RPC_BINDING_HANDLE ServerBindingHandle,_In_ PVOID UserContext)
RPC_STATUS None rpcrt4.RpcSsContextLockShared(_In_ RPC_BINDING_HANDLE ServerBindingHandle,_In_ PVOID UserContext)
RPC_STATUS RPC_ENTRY rpcdiag.RpcDiagnoseError(_In_ RPC_BINDING_HANDLE BindingHandle,_In_ RPC_IF_HANDLE IfSpec,_In_ RPC_STATUS RpcStatus,_In_opt_ RPC_ERROR_ENUM_HANDLE *EnumHandle,_In_ ULONG Options,_In_opt_ HWND ParentWindow)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsBindingExportA(unsigned long EntryNameSyntax,unsigned char *EntryName,RPC_IF_HANDLE IfSpec None,RPC_BINDING_VECTOR *BindingVec None,UUID_VECTOR *ObjectUuidVec None)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsBindingExportPnPA(unsigned long EntryNameSyntax,unsigned char *EntryName,RPC_IF_HANDLE IfSpec None,UUID_VECTOR *ObjectUuidVec None)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsBindingExportPnP(unsigned long EntryNameSyntax,unsigned char *EntryName,RPC_IF_HANDLE IfSpec None,UUID_VECTOR *ObjectUuidVec None)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsBindingExportPnPW(unsigned long EntryNameSyntax,unsigned char *EntryName,RPC_IF_HANDLE IfSpec None,UUID_VECTOR *ObjectUuidVec None)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsBindingExport(unsigned long EntryNameSyntax,unsigned char *EntryName,RPC_IF_HANDLE IfSpec None,RPC_BINDING_VECTOR *BindingVec None,UUID_VECTOR *ObjectUuidVec None)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsBindingExportW(unsigned long EntryNameSyntax,unsigned char *EntryName,RPC_IF_HANDLE IfSpec None,RPC_BINDING_VECTOR *BindingVec None,UUID_VECTOR *ObjectUuidVec None)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsBindingImportBeginA(unsigned long EntryNameSyntax,unsigned char *EntryName,RPC_IF_HANDLE IfSpec None,UUID *ObjUuid None,RPC_NS_HANDLE *ImportContext None)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsBindingImportBegin(unsigned long EntryNameSyntax,unsigned char *EntryName,RPC_IF_HANDLE IfSpec None,UUID *ObjUuid None,RPC_NS_HANDLE *ImportContext None)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsBindingImportBeginW(unsigned long EntryNameSyntax,unsigned char *EntryName,RPC_IF_HANDLE IfSpec None,UUID *ObjUuid None,RPC_NS_HANDLE *ImportContext None)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsBindingImportDone(RPC_NS_HANDLE *ImportContext None)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsBindingImportNext(RPC_NS_HANDLE ImportContext None,RPC_BINDING_HANDLE *Binding None)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsBindingLookupBeginA(unsigned long EntryNameSyntax,unsigned char *EntryName,RPC_IF_HANDLE IfSpec None,UUID *ObjUuid None,unsigned long BindingMaxCount,RPC_NS_HANDLE *LookupContext None)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsBindingLookupBegin(unsigned long EntryNameSyntax,unsigned char *EntryName,RPC_IF_HANDLE IfSpec None,UUID *ObjUuid None,unsigned long BindingMaxCount,RPC_NS_HANDLE *LookupContext None)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsBindingLookupBeginW(unsigned long EntryNameSyntax,unsigned char *EntryName,RPC_IF_HANDLE IfSpec None,UUID *ObjUuid None,unsigned long BindingMaxCount,RPC_NS_HANDLE *LookupContext None)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsBindingLookupDone(RPC_NS_HANDLE *LookupContext None)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsBindingLookupNext(RPC_NS_HANDLE LookupContext None,RPC_BINDING_VECTOR **BindingVec None)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsBindingSelect(RPC_BINDING_VECTOR *BindingVec None,RPC_BINDING_HANDLE *Binding None)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsBindingUnexportA(unsigned long EntryNameSyntax,unsigned char *EntryName,RPC_IF_HANDLE IfSpec None,UUID_VECTOR *ObjectUuidVec None)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsBindingUnexportPnPA(unsigned long EntryNameSyntax,unsigned char *EntryName,RPC_IF_HANDLE IfSpec None,UUID_VECTOR *ObjectUuidVec None)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsBindingUnexportPnP(unsigned long EntryNameSyntax,unsigned char *EntryName,RPC_IF_HANDLE IfSpec None,UUID_VECTOR *ObjectUuidVec None)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsBindingUnexportPnPW(unsigned long EntryNameSyntax,unsigned char *EntryName,RPC_IF_HANDLE IfSpec None,UUID_VECTOR *ObjectUuidVec None)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsBindingUnexport(unsigned long EntryNameSyntax,unsigned char *EntryName,RPC_IF_HANDLE IfSpec None,UUID_VECTOR *ObjectUuidVec None)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsBindingUnexportW(unsigned long EntryNameSyntax,unsigned char *EntryName,RPC_IF_HANDLE IfSpec None,UUID_VECTOR *ObjectUuidVec None)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsEntryExpandNameA(unsigned long EntryNameSyntax,unsigned char *EntryName,unsigned char **ExpandedName)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsEntryExpandName(unsigned long EntryNameSyntax,unsigned char *EntryName,unsigned char **ExpandedName)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsEntryExpandNameW(unsigned long EntryNameSyntax,unsigned char *EntryName,unsigned char **ExpandedName)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsEntryObjectInqBeginA(unsigned long EntryNameSyntax,unsigned char *EntryName,RPC_NS_HANDLE *InquiryContext None)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsEntryObjectInqBegin(unsigned long EntryNameSyntax,unsigned char *EntryName,RPC_NS_HANDLE *InquiryContext None)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsEntryObjectInqBeginW(unsigned long EntryNameSyntax,unsigned char *EntryName,RPC_NS_HANDLE *InquiryContext None)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsEntryObjectInqDone(RPC_NS_HANDLE *InquiryContext None)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsEntryObjectInqNext(RPC_NS_HANDLE InquiryContext None,UUID *ObjUuid None)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsGroupDeleteA(unsigned long GroupNameSyntax,unsigned char *GroupName)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsGroupDelete(unsigned long GroupNameSyntax,unsigned char *GroupName)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsGroupDeleteW(unsigned long GroupNameSyntax,unsigned char *GroupName)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsGroupMbrAddA(unsigned long GroupNameSyntax,unsigned char *GroupName,unsigned long MemberNameSyntax,unsigned char *MemberName)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsGroupMbrAdd(unsigned long GroupNameSyntax,unsigned char *GroupName,unsigned long MemberNameSyntax,unsigned char *MemberName)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsGroupMbrAddW(unsigned long GroupNameSyntax,unsigned char *GroupName,unsigned long MemberNameSyntax,unsigned char *MemberName)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsGroupMbrInqBeginA(unsigned long GroupNameSyntax,unsigned char *GroupName,unsigned long MemberNameSyntax,RPC_NS_HANDLE *InquiryContext None)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsGroupMbrInqBegin(unsigned long GroupNameSyntax,unsigned char *GroupName,unsigned long MemberNameSyntax,RPC_NS_HANDLE *InquiryContext None)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsGroupMbrInqBeginW(unsigned long GroupNameSyntax,unsigned char *GroupName,unsigned long MemberNameSyntax,RPC_NS_HANDLE *InquiryContext None)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsGroupMbrInqDone(RPC_NS_HANDLE *InquiryContext None)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsGroupMbrInqNextA(RPC_NS_HANDLE InquiryContext None,unsigned char **MemberName)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsGroupMbrInqNext(RPC_NS_HANDLE InquiryContext None,unsigned char **MemberName)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsGroupMbrInqNextW(RPC_NS_HANDLE InquiryContext None,unsigned char **MemberName)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsGroupMbrRemoveA(unsigned long GroupNameSyntax,unsigned char *GroupName,unsigned long MemberNameSyntax,unsigned char *MemberName)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsGroupMbrRemove(unsigned long GroupNameSyntax,unsigned char *GroupName,unsigned long MemberNameSyntax,unsigned char *MemberName)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsGroupMbrRemoveW(unsigned long GroupNameSyntax,unsigned char *GroupName,unsigned long MemberNameSyntax,unsigned char *MemberName)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsMgmtBindingUnexportA(unsigned long EntryNameSyntax,unsigned char *EntryName,RPC_IF_ID *IfId None,unsigned long VersOption,UUID_VECTOR *ObjectUuidVec None)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsMgmtBindingUnexport(unsigned long EntryNameSyntax,unsigned char *EntryName,RPC_IF_ID *IfId None,unsigned long VersOption,UUID_VECTOR *ObjectUuidVec None)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsMgmtBindingUnexportW(unsigned long EntryNameSyntax,unsigned char *EntryName,RPC_IF_ID *IfId None,unsigned long VersOption,UUID_VECTOR *ObjectUuidVec None)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsMgmtEntryCreateA(unsigned long EntryNameSyntax,unsigned char *EntryName)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsMgmtEntryCreate(unsigned long EntryNameSyntax,unsigned char *EntryName)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsMgmtEntryCreateW(unsigned long EntryNameSyntax,unsigned char *EntryName)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsMgmtEntryDeleteA(unsigned long EntryNameSyntax,unsigned char *EntryName)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsMgmtEntryDelete(unsigned long EntryNameSyntax,unsigned char *EntryName)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsMgmtEntryDeleteW(unsigned long EntryNameSyntax,unsigned char *EntryName)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsMgmtEntryInqIfIdsA(unsigned long EntryNameSyntax,unsigned char *EntryName,RPC_IF_ID_VECTOR **IfIdVec None)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsMgmtEntryInqIfIds(unsigned long EntryNameSyntax,unsigned char *EntryName,RPC_IF_ID_VECTOR **IfIdVec None)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsMgmtEntryInqIfIdsW(unsigned long EntryNameSyntax,unsigned char *EntryName,RPC_IF_ID_VECTOR **IfIdVec None)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsMgmtHandleSetExpAge(RPC_NS_HANDLE NsHandle None,unsigned long ExpirationAge)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsMgmtInqExpAge(unsigned long *ExpirationAge)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsMgmtSetExpAge(unsigned long ExpirationAge)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsProfileDeleteA(unsigned long ProfileNameSyntax,unsigned char *ProfileName)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsProfileDelete(unsigned long ProfileNameSyntax,unsigned char *ProfileName)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsProfileDeleteW(unsigned long ProfileNameSyntax,unsigned char *ProfileName)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsProfileEltAddA(unsigned long ProfileNameSyntax,unsigned char *ProfileName,RPC_IF_ID *IfId None,unsigned long MemberNameSyntax,unsigned char *MemberName,unsigned long Priority,unsigned char *Annotation)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsProfileEltAdd(unsigned long ProfileNameSyntax,unsigned char *ProfileName,RPC_IF_ID *IfId None,unsigned long MemberNameSyntax,unsigned char *MemberName,unsigned long Priority,unsigned char *Annotation)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsProfileEltAddW(unsigned long ProfileNameSyntax,unsigned char *ProfileName,RPC_IF_ID *IfId None,unsigned long MemberNameSyntax,unsigned char *MemberName,unsigned long Priority,unsigned char *Annotation)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsProfileEltInqBeginA(unsigned long ProfileNameSyntax,unsigned char *ProfileName,unsigned long InquiryType,RPC_IF_ID *IfId None,unsigned long VersOption,unsigned long MemberNameSyntax,unsigned char *MemberName,RPC_NS_HANDLE *InquiryContext None)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsProfileEltInqBegin(unsigned long ProfileNameSyntax,unsigned char *ProfileName,unsigned long InquiryType,RPC_IF_ID *IfId None,unsigned long VersOption,unsigned long MemberNameSyntax,unsigned char *MemberName,RPC_NS_HANDLE *InquiryContext None)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsProfileEltInqBeginW(unsigned long ProfileNameSyntax,unsigned char *ProfileName,unsigned long InquiryType,RPC_IF_ID *IfId None,unsigned long VersOption,unsigned long MemberNameSyntax,unsigned char *MemberName,RPC_NS_HANDLE *InquiryContext None)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsProfileEltInqDone(RPC_NS_HANDLE *InquiryContext None)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsProfileEltInqNextA(RPC_NS_HANDLE InquiryContext None,RPC_IF_ID *IfId None,unsigned char **MemberName,unsigned long *Priority,unsigned char **Annotation)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsProfileEltInqNext(RPC_NS_HANDLE InquiryContext None,RPC_IF_ID *IfId None,unsigned char **MemberName,unsigned long *Priority,unsigned char **Annotation)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsProfileEltInqNextW(RPC_NS_HANDLE InquiryContext None,RPC_IF_ID *IfId None,unsigned char **MemberName,unsigned long *Priority,unsigned char **Annotation)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsProfileEltRemoveA(unsigned long ProfileNameSyntax,unsigned char *ProfileName,RPC_IF_ID *IfId None,unsigned long MemberNameSyntax,unsigned char *MemberName)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsProfileEltRemove(unsigned long ProfileNameSyntax,unsigned char *ProfileName,RPC_IF_ID *IfId None,unsigned long MemberNameSyntax,unsigned char *MemberName)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsProfileEltRemoveW(unsigned long ProfileNameSyntax,unsigned char *ProfileName,RPC_IF_ID *IfId None,unsigned long MemberNameSyntax,unsigned char *MemberName)
RPC_STATUS RPC_ENTRY rpcrt4.DceErrorInqTextA(unsigned long StatusToConvert,unsigned char *ErrorText)
RPC_STATUS RPC_ENTRY rpcrt4.DceErrorInqText(unsigned long StatusToConvert,unsigned char *ErrorText)
RPC_STATUS RPC_ENTRY rpcrt4.DceErrorInqTextW(unsigned long StatusToConvert,unsigned char *ErrorText)
RPC_STATUS RPC_ENTRY rpcrt4.MesBufferHandleReset(handle_t Handle None,unsigned long HandleStyle,MIDL_ES_CODE OpCode None,char **ppBuffer None,unsigned long BufferSize,unsigned long *pEncodedSize)
RPC_STATUS RPC_ENTRY rpcrt4.MesDecodeBufferHandleCreate(char *Buffer None,unsigned long BufferSize,handle_t *pHandle None)
RPC_STATUS RPC_ENTRY rpcrt4.MesDecodeIncrementalHandleCreate(void *UserState None,MIDL_ES_READ ReadFn None,handle_t *pHandle None)
RPC_STATUS RPC_ENTRY rpcrt4.MesEncodeDynBufferHandleCreate(char **ppBuffer None,unsigned long *pEncodedSize,handle_t *pHandle None)
RPC_STATUS RPC_ENTRY rpcrt4.MesEncodeFixedBufferHandleCreate(char *Buffer None,unsigned long BufferSize,unsigned long *pEncodedSize,handle_t *pHandle None)
RPC_STATUS RPC_ENTRY rpcrt4.MesEncodeIncrementalHandleCreate(void *UserState None,MIDL_ES_ALLOC AllocFn None,MIDL_ES_WRITE WriteFn None,handle_t *pHandle None)
RPC_STATUS RPC_ENTRY rpcrt4.MesHandleFree(handle_t Handle None)
RPC_STATUS RPC_ENTRY rpcrt4.MesIncrementalHandleReset(handle_t Handle None,void *UserState None,MIDL_ES_ALLOC AllocFn None,MIDL_ES_WRITE WriteFn None,MIDL_ES_READ ReadFn None,MIDL_ES_CODE OpCode None)
RPC_STATUS RPC_ENTRY rpcrt4.MesInqProcEncodingId(handle_t Handle None,PRPC_SYNTAX_IDENTIFIER pInterfaceId None,unsigned long *pProcNum)
RPC_STATUS RPC_ENTRY rpcrt4.RpcAsyncAbortCall(PRPC_ASYNC_STATE pAsync None,unsigned long ExceptionCode)
RPC_STATUS RPC_ENTRY rpcrt4.RpcAsyncCancelCall(PRPC_ASYNC_STATE pAsync None,BOOL fAbortCall None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcAsyncCompleteCall(PRPC_SYNC_STATE pAsync None,PVOID Reply None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcAsyncGetCallStatus(PRPC_ASYNC_STATE pAsync None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcAsyncInitializeHandle(PRPC_ASYNC_STATE pAsync None,unsigned int Size)
RPC_STATUS RPC_ENTRY rpcrt4.RpcBindingCopy(RPC_BINDING_HANDLE SourceBinding None,RPC_BINDING_HANDLE *DestinationBinding None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcBindingFree(RPC_BINDING_HANDLE *Binding None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcBindingFromStringBindingA(unsigned char *StringBinding,RPC_BINDING_HANDLE *Binding None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcBindingFromStringBinding(unsigned char *StringBinding,RPC_BINDING_HANDLE *Binding None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcBindingFromStringBindingW(unsigned char *StringBinding,RPC_BINDING_HANDLE *Binding None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcBindingInqAuthClientA(RPC_BINDING_HANDLE ClientBinding None,RPC_AUTHZ_HANDLE *Privs None,unsigned char **ServerPrincName,unsigned long *AuthnLevel,unsigned long *AuthnSvc,unsigned long *AuthzSvc)
RPC_STATUS RPC_ENTRY rpcrt4.RpcBindingInqAuthClientExA(RPC_BINDING_HANDLE ClientBinding None,RPC_AUTHZ_HANDLE *Privs None,unsigned char **ServerPrincName,unsigned long *AuthnLevel,unsigned long *AuthnSvc,unsigned long *AuthzSvc,unsigned long flags)
RPC_STATUS RPC_ENTRY rpcrt4.RpcBindingInqAuthClientEx(RPC_BINDING_HANDLE ClientBinding None,RPC_AUTHZ_HANDLE *Privs None,unsigned char **ServerPrincName,unsigned long *AuthnLevel,unsigned long *AuthnSvc,unsigned long *AuthzSvc,unsigned long flags)
RPC_STATUS RPC_ENTRY rpcrt4.RpcBindingInqAuthClientExW(RPC_BINDING_HANDLE ClientBinding None,RPC_AUTHZ_HANDLE *Privs None,unsigned char **ServerPrincName,unsigned long *AuthnLevel,unsigned long *AuthnSvc,unsigned long *AuthzSvc,unsigned long flags)
RPC_STATUS RPC_ENTRY rpcrt4.RpcBindingInqAuthClient(RPC_BINDING_HANDLE ClientBinding None,RPC_AUTHZ_HANDLE *Privs None,unsigned char **ServerPrincName,unsigned long *AuthnLevel,unsigned long *AuthnSvc,unsigned long *AuthzSvc)
RPC_STATUS RPC_ENTRY rpcrt4.RpcBindingInqAuthClientW(RPC_BINDING_HANDLE ClientBinding None,RPC_AUTHZ_HANDLE *Privs None,unsigned char **ServerPrincName,unsigned long *AuthnLevel,unsigned long *AuthnSvc,unsigned long *AuthzSvc)
RPC_STATUS RPC_ENTRY rpcrt4.RpcBindingInqAuthInfoA(RPC_BINDING_HANDLE Binding None,RPC_CHAR **ServerPrincName None,unsigned long *AuthnLevel,unsigned long *AuthnSvc,RPC_AUTH_IDENTITY_HANDLE *AuthIdentity None,unsigned long *AuthzSvc)
RPC_STATUS RPC_ENTRY rpcrt4.RpcBindingInqAuthInfo(RPC_BINDING_HANDLE Binding None,RPC_CHAR **ServerPrincName None,unsigned long *AuthnLevel,unsigned long *AuthnSvc,RPC_AUTH_IDENTITY_HANDLE *AuthIdentity None,unsigned long *AuthzSvc)
RPC_STATUS RPC_ENTRY rpcrt4.RpcBindingInqAuthInfoW(RPC_BINDING_HANDLE Binding None,RPC_CHAR **ServerPrincName None,unsigned long *AuthnLevel,unsigned long *AuthnSvc,RPC_AUTH_IDENTITY_HANDLE *AuthIdentity None,unsigned long *AuthzSvc)
RPC_STATUS RPC_ENTRY rpcrt4.RpcBindingInqObject(RPC_BINDING_HANDLE Binding None,UUID *ObjectUuid None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcBindingInqOption(RPC_BINDING_HANDLE hBinding None,unsigned long Option,unsigned long *pOptionValue)
RPC_STATUS RPC_ENTRY rpcrt4.RpcBindingReset(RPC_BINDING_HANDLE Binding None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcBindingServerFromClient(RPC_BINDING_HANDLE ClientBinding None,RPC_BINDING_HANDLE *ServerBinding None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcBindingSetAuthInfoA(RPC_BINDING_HANDLE Binding None,unsigned char *ServerPrincName,unsigned long AuthnLevel,unsigned long AuthnSvc,RPC_AUTH_IDENTITY_HANDLE AuthIdentity None,unsigned long AuthzService)
RPC_STATUS RPC_ENTRY rpcrt4.RpcBindingSetAuthInfo(RPC_BINDING_HANDLE Binding None,unsigned char *ServerPrincName,unsigned long AuthnLevel,unsigned long AuthnSvc,RPC_AUTH_IDENTITY_HANDLE AuthIdentity None,unsigned long AuthzService)
RPC_STATUS RPC_ENTRY rpcrt4.RpcBindingSetAuthInfoW(RPC_BINDING_HANDLE Binding None,unsigned char *ServerPrincName,unsigned long AuthnLevel,unsigned long AuthnSvc,RPC_AUTH_IDENTITY_HANDLE AuthIdentity None,unsigned long AuthzService)
RPC_STATUS RPC_ENTRY rpcrt4.RpcBindingSetObject(RPC_BINDING_HANDLE Binding None,UUID *ObjectUuid None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcBindingSetOption(RPC_BINDING_HANDLE hBinding None,unsigned long Option,unsigned long OptionValue)
RPC_STATUS RPC_ENTRY rpcrt4.RpcBindingToStringBindingA(RPC_BINDING_HANDLE Binding None,unsigned char **StringBinding)
RPC_STATUS RPC_ENTRY rpcrt4.RpcBindingToStringBinding(RPC_BINDING_HANDLE Binding None,unsigned char **StringBinding)
RPC_STATUS RPC_ENTRY rpcrt4.RpcBindingToStringBindingW(RPC_BINDING_HANDLE Binding None,unsigned char **StringBinding)
RPC_STATUS RPC_ENTRY rpcrt4.RpcBindingVectorFree(RPC_BINDING_VECTOR **BindingVector None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcCancelThreadEx(HANDLE ThreadHandle None,LONG Timeout None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcCancelThread(HANDLE ThreadHandle None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcEpRegisterA(RPC_IF_HANDLE IfSpec None,RPC_BINDING_VECTOR *BindingVector None,UUID_VECTOR *UuidVector None,unsigned char *Annotation)
RPC_STATUS RPC_ENTRY rpcrt4.RpcEpRegisterNoReplaceA(RPC_IF_HANDLE IfSpec None,RPC_BINDING_VECTOR *BindingVector None,UUID_VECTOR *UuidVector None,unsigned char *Annotation)
RPC_STATUS RPC_ENTRY rpcrt4.RpcEpRegisterNoReplace(RPC_IF_HANDLE IfSpec None,RPC_BINDING_VECTOR *BindingVector None,UUID_VECTOR *UuidVector None,unsigned char *Annotation)
RPC_STATUS RPC_ENTRY rpcrt4.RpcEpRegisterNoReplaceW(RPC_IF_HANDLE IfSpec None,RPC_BINDING_VECTOR *BindingVector None,UUID_VECTOR *UuidVector None,unsigned char *Annotation)
RPC_STATUS RPC_ENTRY rpcrt4.RpcEpRegister(RPC_IF_HANDLE IfSpec None,RPC_BINDING_VECTOR *BindingVector None,UUID_VECTOR *UuidVector None,unsigned char *Annotation)
RPC_STATUS RPC_ENTRY rpcrt4.RpcEpRegisterW(RPC_IF_HANDLE IfSpec None,RPC_BINDING_VECTOR *BindingVector None,UUID_VECTOR *UuidVector None,unsigned char *Annotation)
RPC_STATUS RPC_ENTRY rpcrt4.RpcEpResolveBinding(RPC_BINDING_HANDLE Binding None,RPC_IF_HANDLE IfSpec None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcEpUnregister(RPC_IF_HANDLE IfSpec None,RPC_BINDING_VECTOR *BindingVector None,UUID_VECTOR *UuidVector None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcErrorAddRecord(_In_ RPC_EXTENDED_ERROR_INFO *ErrorInfo)
RPC_STATUS RPC_ENTRY rpcrt4.RpcErrorGetNextRecord(_In_ RPC_ERROR_ENUM_HANDLE *EnumHandle,_In_ BOOL CopyStrings,_Out_ RPC_EXTENDED_ERROR_INFO *ErrorInfo)
RPC_STATUS RPC_ENTRY rpcrt4.RpcErrorGetNumberOfRecords(_In_ RPC_ERROR_ENUM_HANDLE *EnumHandle,_Out_ int *Records)
RPC_STATUS RPC_ENTRY rpcrt4.RpcErrorLoadErrorInfo(_In_ PVOID ErrorBlob,_In_ size_t BlobSize,_Out_ RPC_ERROR_ENUM_HANDLE *EnumHandle)
RPC_STATUS RPC_ENTRY rpcrt4.RpcErrorSaveErrorInfo(_In_ RPC_ERROR_ENUM_HANDLE *EnumHandle,_Out_ PVOID *ErrorBlob,_Out_ size_t *BlobSize)
RPC_STATUS RPC_ENTRY rpcrt4.RpcFreeAuthorizationContext(_In_ PVOID *pAuthzClientContext)
RPC_STATUS RPC_ENTRY rpcrt4.RpcGetAuthorizationContextForClient(_In_opt_ RPC_BINDING_HANDLE ClientBinding,_In_ BOOL ImpersonateOnReturn,_In_ PVOID Reserved1,_In_opt_ PLARGE_INTEGER pExpirationTime,_In_ LUID Reserved2,_In_ DWORD Reserved3,_In_ PVOID Reserved4,_Out_ PVOID *pAuthzClientContext)
RPC_STATUS RPC_ENTRY rpcrt4.RpcIfIdVectorFree(RPC_IF_ID_VECTOR **IfIdVec None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcIfInqId(RPC_IF_HANDLE RpcIfHandle None,RPC_IF_ID *RpcIfId None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcImpersonateClientContainer(_In_opt_ RPC_BINDING_HANDLE BindingHandle)
RPC_STATUS RPC_ENTRY rpcrt4.RpcImpersonateClient(RPC_BINDING_HANDLE BindingHandle None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcMgmtEnableIdleCleanup(void None None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcMgmtEpEltInqBegin(RPC_BINDING_HANDLE EpBinding None,unsigned long InquiryType,RPC_IF_ID *IfId None,unsigned long VersOption,UUID *ObjectUuid None,RPC_EP_INQ_HANDLE *InquiryContext None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcMgmtEpEltInqDone(RPC_EP_INQ_HANDLE *InquiryContext None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcMgmtEpEltInqNextA(RPC_EP_INQ_HANDLE InquiryContext None,RPC_IF_ID *IfId None,RPC_BINDING_HANDLE *Binding None,UUID *ObjectUuid None,unsigned char **Annotation)
RPC_STATUS RPC_ENTRY rpcrt4.RpcMgmtEpEltInqNext(RPC_EP_INQ_HANDLE InquiryContext None,RPC_IF_ID *IfId None,RPC_BINDING_HANDLE *Binding None,UUID *ObjectUuid None,unsigned char **Annotation)
RPC_STATUS RPC_ENTRY rpcrt4.RpcMgmtEpEltInqNextW(RPC_EP_INQ_HANDLE InquiryContext None,RPC_IF_ID *IfId None,RPC_BINDING_HANDLE *Binding None,UUID *ObjectUuid None,unsigned char **Annotation)
RPC_STATUS RPC_ENTRY rpcrt4.RpcMgmtEpUnregister(RPC_BINDING_HANDLE EpBinding None,RPC_IF_ID *IfId None,RPC_BINDING_HANDLE Binding None,UUID *ObjectUuid None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcMgmtInqComTimeout(RPC_BINDING_HANDLE Binding None,unsigned int *Timeout)
RPC_STATUS RPC_ENTRY rpcrt4.RpcMgmtInqDefaultProtectLevel(unsigned int AuthnSvc,unsigned int *AuthnLevel)
RPC_STATUS RPC_ENTRY rpcrt4.RpcMgmtInqIfIds(RPC_BINDING_HANDLE Binding None,RPC_IF_ID_VECTOR **IfIdVector None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcMgmtInqServerPrincNameA(RPC_BINDING_HANDLE Binding None,unsigned int AuthnSvc,unsigned char **ServerPrincName)
RPC_STATUS RPC_ENTRY rpcrt4.RpcMgmtInqServerPrincName(RPC_BINDING_HANDLE Binding None,unsigned int AuthnSvc,unsigned char **ServerPrincName)
RPC_STATUS RPC_ENTRY rpcrt4.RpcMgmtInqServerPrincNameW(RPC_BINDING_HANDLE Binding None,unsigned int AuthnSvc,unsigned char **ServerPrincName)
RPC_STATUS RPC_ENTRY rpcrt4.RpcMgmtInqStats(RPC_BINDING_HANDLE Binding None,RPC_STATS_VECTOR **Statistics None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcMgmtIsServerListening(RPC_BINDING_HANDLE Binding None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcMgmtSetAuthorizationFn(RPC_MGMT_AUTHORIZATION_FN AuthorizationFn None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcMgmtSetCancelTimeout(signed int Seconds)
RPC_STATUS RPC_ENTRY rpcrt4.RpcMgmtSetComTimeout(RPC_BINDING_HANDLE Binding None,unsigned int Timeout)
RPC_STATUS RPC_ENTRY rpcrt4.RpcMgmtSetServerStackSize(unsigned int ThreadStackSize)
RPC_STATUS RPC_ENTRY rpcrt4.RpcMgmtStatsVectorFree(RPC_STATS_VECTOR **StatsVector None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcMgmtStopServerListening(RPC_BINDING_HANDLE Binding None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcMgmtWaitServerListen(void None None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcNetworkInqProtseqsA(RPC_PROTSEQ_VECTOR **ProtSeqVector None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcNetworkInqProtseqs(RPC_PROTSEQ_VECTOR **ProtSeqVector None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcNetworkInqProtseqsW(RPC_PROTSEQ_VECTOR **ProtSeqVector None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcNetworkIsProtseqValidA(unsigned char *Protseq)
RPC_STATUS RPC_ENTRY rpcrt4.RpcNetworkIsProtseqValid(unsigned char *Protseq)
RPC_STATUS RPC_ENTRY rpcrt4.RpcNetworkIsProtseqValidW(unsigned char *Protseq)
RPC_STATUS RPC_ENTRY rpcrt4.RpcNsBindingInqEntryNameA(RPC_BINDING_HANDLE Binding None,unsigned long EntryNameSyntax,unsigned char **EntryName)
RPC_STATUS RPC_ENTRY rpcrt4.RpcNsBindingInqEntryName(RPC_BINDING_HANDLE Binding None,unsigned long EntryNameSyntax,unsigned char **EntryName)
RPC_STATUS RPC_ENTRY rpcrt4.RpcNsBindingInqEntryNameW(RPC_BINDING_HANDLE Binding None,unsigned long EntryNameSyntax,unsigned char **EntryName)
RPC_STATUS RPC_ENTRY rpcrt4.RpcObjectSetInqFn(RPC_OBJECT_INQ_FN InquiryFn None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcObjectSetType(UUID *ObjUuid None,UUID *TypeUuid None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcProtseqVectorFreeA(RPC_PROTSEQ_VECTOR **ProtSeqVector None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcProtseqVectorFree(RPC_PROTSEQ_VECTOR **ProtSeqVector None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcProtseqVectorFreeW(RPC_PROTSEQ_VECTOR **ProtSeqVector None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcRevertContainerImpersonation(void None None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcRevertToSelfEx(RPC_BINDING_HANDLE BindingHandle None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcRevertToSelf(void None None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcServerInqBindings(RPC_BINDING_VECTOR **BindingVector None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcServerInqDefaultPrincNameA(unsigned long AuthnSvc,RPC_CHAR **PrincName None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcServerInqDefaultPrincName(unsigned long AuthnSvc,RPC_CHAR **PrincName None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcServerInqDefaultPrincNameW(unsigned long AuthnSvc,RPC_CHAR **PrincName None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcServerInqIf(RPC_IF_HANDLE IfSpec None,UUID *MgrTypeUuid None,RPC_MGR_EPV **MgrEpv None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcServerInterfaceGroupActivate(_In_ RPC_INTERFACE_GROUP IfGroup)
RPC_STATUS RPC_ENTRY rpcrt4.RpcServerInterfaceGroupClose(_In_ RPC_INTERFACE_GROUP IfGroup)
RPC_STATUS RPC_ENTRY rpcrt4.RpcServerListen(unsigned int MinimumCallThreads,unsigned int MaxCalls,unsigned int DontWait)
RPC_STATUS RPC_ENTRY rpcrt4.RpcServerRegisterAuthInfoA(unsigned char *ServerPrincName,unsigned long AuthnSvc,RPC_AUTH_KEY_RETRIEVAL_FN GetKeyFn None,void *Arg None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcServerRegisterAuthInfo(unsigned char *ServerPrincName,unsigned long AuthnSvc,RPC_AUTH_KEY_RETRIEVAL_FN GetKeyFn None,void *Arg None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcServerRegisterAuthInfoW(unsigned char *ServerPrincName,unsigned long AuthnSvc,RPC_AUTH_KEY_RETRIEVAL_FN GetKeyFn None,void *Arg None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcServerRegisterIf2(RPC_IF_HANDLE IfSpec None,UUID *MgrTypeUuid None,RPC_MGR_EPV *MgrEpv None,unsigned int Flags,unsigned int MaxCalls,unsigned int MaxRpcSize,RPC_IF_CALLBACK_FN *IfCallbackFn None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcServerRegisterIfEx(RPC_IF_HANDLE IfSpec None,UUID *MgrTypeUuid None,RPC_MGR_EPV *MgrEpv None,unsigned int Flags,unsigned int MaxCalls,RPC_IF_CALLBACK_FN *IfCallback None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcServerRegisterIf(RPC_IF_HANDLE IfSpec None,UUID *MgrTypeUuid None,RPC_MGR_EPV *MgrEpv None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcServerTestCancel(RPC_BINDING_HANDLE BindingHandle None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcServerUnregisterIf(RPC_IF_HANDLE IfSpec None,UUID *MgrTypeUuid None,unsigned int WaitForCallsToComplete)
RPC_STATUS RPC_ENTRY rpcrt4.RpcServerUseAllProtseqsEx(unsigned int MaxCalls,void *SecurityDescriptor None,PRPC_POLICY Policy None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcServerUseAllProtseqsIfEx(unsigned int MaxCalls,RPC_IF_HANDLE IfSpec None,void *SecurityDescriptor None,PRPC_POLICY Policy None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcServerUseAllProtseqsIf(unsigned int MaxCalls,RPC_IF_HANDLE IfSpec None,void *SecurityDescriptor None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcServerUseAllProtseqs(unsigned int MaxCalls,void *SecurityDescriptor None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcServerUseProtseqA(unsigned char *ProtSeq,unsigned int MaxCalls,void *SecurityDescriptor None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcServerUseProtseqEpA(unsigned char *Protseq,unsigned int MaxCalls,unsigned char *Endpoint,void *SecurityDescriptor None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcServerUseProtseqEpExA(unsigned char *Protseq,unsigned int MaxCalls,unsigned char *Endpoint,void *SecurityDescriptor None,PRPC_POLICY Policy None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcServerUseProtseqEpEx(unsigned char *Protseq,unsigned int MaxCalls,unsigned char *Endpoint,void *SecurityDescriptor None,PRPC_POLICY Policy None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcServerUseProtseqEpExW(unsigned char *Protseq,unsigned int MaxCalls,unsigned char *Endpoint,void *SecurityDescriptor None,PRPC_POLICY Policy None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcServerUseProtseqEp(unsigned char *Protseq,unsigned int MaxCalls,unsigned char *Endpoint,void *SecurityDescriptor None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcServerUseProtseqEpW(unsigned char *Protseq,unsigned int MaxCalls,unsigned char *Endpoint,void *SecurityDescriptor None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcServerUseProtseqExA(unsigned char *ProtSeq,unsigned int MaxCalls,void *SecurityDescriptor None,PRPC_POLICY Policy None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcServerUseProtseqEx(unsigned char *ProtSeq,unsigned int MaxCalls,void *SecurityDescriptor None,PRPC_POLICY Policy None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcServerUseProtseqExW(unsigned char *ProtSeq,unsigned int MaxCalls,void *SecurityDescriptor None,PRPC_POLICY Policy None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcServerUseProtseqIfA(unsigned char *Protseq,unsigned int MaxCalls,RPC_IF_HANDLE IfSpec None,void *SecurityDescriptor None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcServerUseProtseqIfExA(unsigned char *Protseq,unsigned int MaxCalls,RPC_IF_HANDLE IfSpec None,void *SecurityDescriptor None,PRPC_POLICY Policy None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcServerUseProtseqIfEx(unsigned char *Protseq,unsigned int MaxCalls,RPC_IF_HANDLE IfSpec None,void *SecurityDescriptor None,PRPC_POLICY Policy None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcServerUseProtseqIfExW(unsigned char *Protseq,unsigned int MaxCalls,RPC_IF_HANDLE IfSpec None,void *SecurityDescriptor None,PRPC_POLICY Policy None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcServerUseProtseqIf(unsigned char *Protseq,unsigned int MaxCalls,RPC_IF_HANDLE IfSpec None,void *SecurityDescriptor None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcServerUseProtseqIfW(unsigned char *Protseq,unsigned int MaxCalls,RPC_IF_HANDLE IfSpec None,void *SecurityDescriptor None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcServerUseProtseq(unsigned char *ProtSeq,unsigned int MaxCalls,void *SecurityDescriptor None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcServerUseProtseqW(unsigned char *ProtSeq,unsigned int MaxCalls,void *SecurityDescriptor None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcSmClientFree(void *NodeToFree None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcSmDestroyClientContext(void **ContextHandle None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcSmDisableAllocate(void None None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcSmEnableAllocate(void None None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcSmFree(void *NodeToFree None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcSmSetClientAllocFree(RPC_CLIENT_ALLOC *pfnAllocate None,RPC_CLIENT_FREE *pfnFree None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcSmSetThreadHandle(RPC_SS_THREAD_HANDLE Handle None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcSmSwapClientAllocFree(RPC_CLIENT_ALLOC *pfnAllocate None,RPC_CLIENT_FREE *pfnFree None,RPC_CLIENT_ALLOC **pfnOldAllocate None,RPC_CLIENT_FREE **pfnOldFree None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcStringBindingComposeA(TCHAR *ObjUuid None,TCHAR *ProtSeq None,TCHAR *NetworkAddr None,TCHAR *EndPoint None,TCHAR *Options None,TCHAR **StringBinding None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcStringBindingCompose(TCHAR *ObjUuid None,TCHAR *ProtSeq None,TCHAR *NetworkAddr None,TCHAR *EndPoint None,TCHAR *Options None,TCHAR **StringBinding None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcStringBindingComposeW(TCHAR *ObjUuid None,TCHAR *ProtSeq None,TCHAR *NetworkAddr None,TCHAR *EndPoint None,TCHAR *Options None,TCHAR **StringBinding None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcStringBindingParseA(TCHAR *StringBinding None,TCHAR **ObjectUuid None,TCHAR **ProtSeq None,TCHAR **NetworkAddr None,TCHAR **EndPoint None,TCHAR **NetworkOptions None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcStringBindingParse(TCHAR *StringBinding None,TCHAR **ObjectUuid None,TCHAR **ProtSeq None,TCHAR **NetworkAddr None,TCHAR **EndPoint None,TCHAR **NetworkOptions None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcStringBindingParseW(TCHAR *StringBinding None,TCHAR **ObjectUuid None,TCHAR **ProtSeq None,TCHAR **NetworkAddr None,TCHAR **EndPoint None,TCHAR **NetworkOptions None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcStringFreeA(unsigned char **String)
RPC_STATUS RPC_ENTRY rpcrt4.RpcStringFree(unsigned char **String)
RPC_STATUS RPC_ENTRY rpcrt4.RpcStringFreeW(unsigned char **String)
RPC_STATUS RPC_ENTRY rpcrt4.RpcTestCancel(void None None)
RPC_STATUS RPC_ENTRY rpcrt4.UuidCreateSequential(UUID __RPC_FAR *Uuid)
RPC_STATUS RPC_ENTRY rpcrt4.UuidCreate(UUID __RPC_FAR *Uuid)
RPC_STATUS WINAPI rpcrt4.RpcServerInterfaceGroupInqBindings(_In_ RPC_INTERFACE_GROUP IfGroup,_Out_ RPC_BINDING_VECTOR *BindingVector)
sbyte None None.ToSByte(IFormatProvider provider None)
SByte None None.ToSByte(IFormatProvider provider None)
SCESTATUS WINAPI None.SceSvcAttachmentAnalyze(_In_ PSCESVC_CALLBACK_INFO pSceCbInfo)
SCESTATUS WINAPI None.SceSvcAttachmentAnalyze(IN PSCESVC_CALLBACK_INFO pSceCbInfo)
SCESTATUS WINAPI None.SceSvcAttachmentConfig(_In_ PSCESVC_CALLBACK_INFO pSceCbInfo)
SCESTATUS WINAPI None.SceSvcAttachmentConfig(IN PSCESVC_CALLBACK_INFO pSceCbInfo)
SCESTATUS WINAPI None.SceSvcAttachmentUpdate(_In_ PSCESVC_CALLBACK_INFO pSceCbInfo,_In_ SCESVC_CONFIGURATION_INFO *ServiceInfo)
SCESTATUS WINAPI None.SceSvcAttachmentUpdate(IN PSCESVC_CALLBACK_INFO pSceCbInfo,IN SCESVC_CONFIGURATION_INFO *ServiceInfo)
SC_HANDLE WINAPI advapi32.CreateServiceA(_In_ SC_HANDLE hSCManager,_In_ LPCTSTR lpServiceName,_In_opt_ LPCTSTR lpDisplayName,_In_ DWORD dwDesiredAccess,_In_ DWORD dwServiceType,_In_ DWORD dwStartType,_In_ DWORD dwErrorControl,_In_opt_ LPCTSTR lpBinaryPathName,_In_opt_ LPCTSTR lpLoadOrderGroup,_Out_opt_ LPDWORD lpdwTagId,_In_opt_ LPCTSTR lpDependencies,_In_opt_ LPCTSTR lpServiceStartName,_In_opt_ LPCTSTR lpPassword)
SC_HANDLE WINAPI advapi32.CreateService(_In_ SC_HANDLE hSCManager,_In_ LPCTSTR lpServiceName,_In_opt_ LPCTSTR lpDisplayName,_In_ DWORD dwDesiredAccess,_In_ DWORD dwServiceType,_In_ DWORD dwStartType,_In_ DWORD dwErrorControl,_In_opt_ LPCTSTR lpBinaryPathName,_In_opt_ LPCTSTR lpLoadOrderGroup,_Out_opt_ LPDWORD lpdwTagId,_In_opt_ LPCTSTR lpDependencies,_In_opt_ LPCTSTR lpServiceStartName,_In_opt_ LPCTSTR lpPassword)
SC_HANDLE WINAPI advapi32.CreateServiceW(_In_ SC_HANDLE hSCManager,_In_ LPCTSTR lpServiceName,_In_opt_ LPCTSTR lpDisplayName,_In_ DWORD dwDesiredAccess,_In_ DWORD dwServiceType,_In_ DWORD dwStartType,_In_ DWORD dwErrorControl,_In_opt_ LPCTSTR lpBinaryPathName,_In_opt_ LPCTSTR lpLoadOrderGroup,_Out_opt_ LPDWORD lpdwTagId,_In_opt_ LPCTSTR lpDependencies,_In_opt_ LPCTSTR lpServiceStartName,_In_opt_ LPCTSTR lpPassword)
SC_HANDLE WINAPI advapi32.OpenSCManagerA(_In_opt_ LPCTSTR lpMachineName,_In_opt_ LPCTSTR lpDatabaseName,_In_ DWORD dwDesiredAccess)
SC_HANDLE WINAPI advapi32.OpenSCManager(_In_opt_ LPCTSTR lpMachineName,_In_opt_ LPCTSTR lpDatabaseName,_In_ DWORD dwDesiredAccess)
SC_HANDLE WINAPI advapi32.OpenSCManagerW(_In_opt_ LPCTSTR lpMachineName,_In_opt_ LPCTSTR lpDatabaseName,_In_ DWORD dwDesiredAccess)
SC_HANDLE WINAPI advapi32.OpenServiceA(_In_ SC_HANDLE hSCManager,_In_ LPCTSTR lpServiceName,_In_ DWORD dwDesiredAccess)
SC_HANDLE WINAPI advapi32.OpenService(_In_ SC_HANDLE hSCManager,_In_ LPCTSTR lpServiceName,_In_ DWORD dwDesiredAccess)
SC_HANDLE WINAPI advapi32.OpenServiceW(_In_ SC_HANDLE hSCManager,_In_ LPCTSTR lpServiceName,_In_ DWORD dwDesiredAccess)
SC_LOCK WINAPI advapi32.LockServiceDatabase(_In_ SC_HANDLE hSCManager)
SCODE None None.GetChunk([out] STAT_CHUNK *pStat)
SCODE None None.GetValue([out] PROPVARIANT **ppPropValue)
SCODE None None.MAKE_SCODE(WORD sev None,WORD fac None,WORD code None)
SCSI_ADAPTER_CONTROL_STATUS None None.HwScsiAdapterControl(_In_ PVOID HwDeviceExtension,_In_ SCSI_ADAPTER_CONTROL_TYPE ControlType,_In_ PVOID Parameters)
SCSI_PHYSICAL_ADDRESS None None.ScsiPortGetPhysicalAddress(_In_ PVOID HwDeviceExtension,_In_ PSCSI_REQUEST_BLOCK Srb,_In_ PVOID VirtualAddress,_Out_ ULONG *Length)
SDTAPI None None.EditStreamSetName(PAVISTREAM pavi None,LPCTSTR lpszName None)
SEC_ENTRY None None.DeleteConnectedIdentity(_In_ PVOID ProviderHandle,_In_opt_ HANDLE UserToken,_In_ PSID UserSid,_In_ PWSTR IdentityUserName)
SEC_ENTRY None None.GetCredentialKey(_In_ PVOID ProviderHandle,_In_opt_ PLUID LogonId,_In_opt_ PVOID AuthBuffer,_In_ ULONG AuthBufferSize,_In_ ULONG Reserved,_Out_ PUNICODE_STRING CredentialKey)
SEC_ENTRY None None.OnProfileLoaded(_In_ PVOID ProviderHandle,_In_ HANDLE UserToken,_In_ BOOLEAN Loaded)
SECURITY_STATUS None credui.SspiGetCredUIContext(_In_ HANDLE ContextHandle,_In_ GUID *CredType,_In_ LUID *LogonId,_Out_ PSEC_WINNT_CREDUI_CONTEXT_VECTOR *CredUIContexts,_Out_ HANDLE *TokenHandle)
SECURITY_STATUS None credui.SspiPromptForCredentialsA(_In_ PCTSTR pszTargetName,_In_ PCREDUI_INFOW pUiInfo,_In_ DWORD dwAuthError,_In_ PCTSTR pszPackage,_In_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE pInputAuthIdentity,_Out_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE *ppAuthIdentity,_Inout_opt_ BOOL *pfSave,_In_ DWORD dwFlags)
SECURITY_STATUS None credui.SspiPromptForCredentials(_In_ PCTSTR pszTargetName,_In_ PCREDUI_INFOW pUiInfo,_In_ DWORD dwAuthError,_In_ PCTSTR pszPackage,_In_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE pInputAuthIdentity,_Out_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE *ppAuthIdentity,_Inout_opt_ BOOL *pfSave,_In_ DWORD dwFlags)
SECURITY_STATUS None credui.SspiPromptForCredentialsW(_In_ PCTSTR pszTargetName,_In_ PCREDUI_INFOW pUiInfo,_In_ DWORD dwAuthError,_In_ PCTSTR pszPackage,_In_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE pInputAuthIdentity,_Out_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE *ppAuthIdentity,_Inout_opt_ BOOL *pfSave,_In_ DWORD dwFlags)
SECURITY_STATUS None credui.SspiUnmarshalCredUIContext(_In_ PUCHAR MarshaledCredUIContext,_In_ ULONG MarshaledCredUIContextLength,_Out_ PSEC_WINNT_CREDUI_CONTEXT *CredUIContext)
SECURITY_STATUS None credui.SspiUpdateCredentials(_In_ HANDLE ContextHandle,_In_ GUID *CredType,_In_ ULONG FlatCredUIContextLength,_In_ PUCHAR FlatCredUIContext)
SECURITY_STATUS None ncrypt.NCryptFinalizeKey(_In_ NCRYPT_KEY_HANDLE hKey,_In_ DWORD dwFlags)
SECURITY_STATUS None None.SspiEncryptAuthIdentityEx(_In_ ULONG Options,_Inout_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE AuthData)
SECURITY_STATUS None secur32.AddSecurityPackageA(_In_ LPTSTR pszPackageName,_In_ PSECURITY_PACKAGE_OPTIONS pOptions)
SECURITY_STATUS None secur32.AddSecurityPackage(_In_ LPTSTR pszPackageName,_In_ PSECURITY_PACKAGE_OPTIONS pOptions)
SECURITY_STATUS None secur32.AddSecurityPackageW(_In_ LPTSTR pszPackageName,_In_ PSECURITY_PACKAGE_OPTIONS pOptions)
SECURITY_STATUS None secur32.DeleteSecurityPackageA(_In_ LPTSTR pszPackageName)
SECURITY_STATUS None secur32.DeleteSecurityPackage(_In_ LPTSTR pszPackageName)
SECURITY_STATUS None secur32.DeleteSecurityPackageW(_In_ LPTSTR pszPackageName)
SECURITY_STATUS None sspicli.SspiCompareAuthIdentities(_In_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE AuthIdentity1,_In_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE AuthIdentity2,_Out_ PBOOLEAN SameSuppliedUser,_Out_ PBOOLEAN SameSuppliedIdentity)
SECURITY_STATUS None sspicli.SspiCopyAuthIdentity(_In_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE AuthData,_Out_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE *AuthDataCopy)
SECURITY_STATUS None sspicli.SspiDecryptAuthIdentity(_Inout_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE EncryptedAuthData)
SECURITY_STATUS None sspicli.SspiEncodeAuthIdentityAsStringsA(_In_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE pAuthIdentity,_Out_ PCWSTR *ppszUserName,_Out_ PCWSTR *ppszDomainName,_Out_ PCWSTR *ppszPackedCredentialsString)
SECURITY_STATUS None sspicli.SspiEncodeAuthIdentityAsStrings(_In_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE pAuthIdentity,_Out_ PCWSTR *ppszUserName,_Out_ PCWSTR *ppszDomainName,_Out_ PCWSTR *ppszPackedCredentialsString)
SECURITY_STATUS None sspicli.SspiEncodeAuthIdentityAsStringsW(_In_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE pAuthIdentity,_Out_ PCWSTR *ppszUserName,_Out_ PCWSTR *ppszDomainName,_Out_ PCWSTR *ppszPackedCredentialsString)
SECURITY_STATUS None sspicli.SspiEncodeStringsAsAuthIdentity(_In_ PCWSTR pszUserName,_In_ PCWSTR pszDomainName,_In_ PCWSTR pszPackedCredentialsString,_Out_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE *ppAuthIdentity)
SECURITY_STATUS None sspicli.SspiEncryptAuthIdentity(_Inout_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE AuthData)
SECURITY_STATUS None sspicli.SspiExcludePackage(_In_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE AuthIdentity,_In_ PCWSTR pszPackageName,_Out_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE *ppNewAuthIdentity)
SECURITY_STATUS None sspicli.SspiFreeAuthIdentity(_In_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE AuthData)
SECURITY_STATUS None sspicli.SspiGetTargetHostName(_In_ PCWSTR pszTargetName,_Out_ PWSTR *pszHostName)
SECURITY_STATUS None sspicli.SspiPrepareForCredRead(_In_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE AuthIdentity,_In_ PCWSTR pszTargetName,_Out_ PULONG pCredmanCredentialType,_Out_ PCWSTR *ppszCredmanTargetName)
SECURITY_STATUS None sspicli.SspiPrepareForCredWrite(_In_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE AuthIdentity,_In_ PCWSTR pszTargetName,_Out_ PULONG pCredmanCredentialType,_Out_ PCWSTR *ppszCredmanTargetName,_Out_ PCWSTR *ppszCredmanUserName,_Out_ PUCHAR *ppCredentialBlob,_Out_ PULONG pCredentialBlobSize)
SECURITY_STATUS None sspicli.SspiValidateAuthIdentity(_In_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE AuthData)
SECURITY_STATUS None sspicli.SspiZeroAuthIdentity(_In_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE AuthData)
SECURITY_STATUS SEC_Entry secur32.AcceptSecurityContext(_In_opt_ PCredHandle phCredential,_Inout_opt_ PCtxtHandle phContext,_In_opt_ PSecBufferDesc pInput,_In_ ULONG fContextReq,_In_ ULONG TargetDataRep,_Inout_opt_ PCtxtHandle phNewContext,_Inout_opt_ PSecBufferDesc pOutput,_Out_ PULONG pfContextAttr,_Out_opt_ PTimeStamp ptsTimeStamp)
SECURITY_STATUS SEC_Entry secur32.AcceptSecurityContext(_In_opt_ PCredHandle phCredential,_Inout_ PCtxtHandle phContext,_In_opt_ PSecBufferDesc pInput,_In_ ULONG fContextReq,_In_ ULONG TargetDataRep,_Inout_opt_ PCtxtHandle phNewContext,_Inout_opt_ PSecBufferDesc pOutput,_Out_ PULONG pfContextAttr,_Out_opt_ PTimeStamp ptsTimeStamp)
SECURITY_STATUS SEC_Entry secur32.AcquireCredentialsHandleA(_In_ SEC_CHAR *pszPrincipal,_In_ SEC_CHAR *pszPackage,_In_ ULONG fCredentialUse,_In_ PLUID pvLogonID,_In_ PVOID pAuthData,_In_ SEC_GET_KEY_FN pGetKeyFn,_In_ PVOID pvGetKeyArgument,_Out_ PCredHandle phCredential,_Out_ PTimeStamp ptsExpiry)
SECURITY_STATUS SEC_Entry secur32.AcquireCredentialsHandle(_In_ SEC_CHAR *pszPrincipal,_In_ SEC_CHAR *pszPackage,_In_ ULONG fCredentialUse,_In_ PLUID pvLogonID,_In_ PVOID pAuthData,_In_ SEC_GET_KEY_FN pGetKeyFn,_In_ PVOID pvGetKeyArgument,_Out_ PCredHandle phCredential,_Out_ PTimeStamp ptsExpiry)
SECURITY_STATUS SEC_Entry secur32.AcquireCredentialsHandleW(_In_ SEC_CHAR *pszPrincipal,_In_ SEC_CHAR *pszPackage,_In_ ULONG fCredentialUse,_In_ PLUID pvLogonID,_In_ PVOID pAuthData,_In_ SEC_GET_KEY_FN pGetKeyFn,_In_ PVOID pvGetKeyArgument,_Out_ PCredHandle phCredential,_Out_ PTimeStamp ptsExpiry)
SECURITY_STATUS SEC_Entry secur32.ApplyControlToken(_In_ PCtxtHandle phContext,_In_ PSecBufferDesc pInput)
SECURITY_STATUS SEC_Entry secur32.CompleteAuthToken(_In_ PCtxtHandle phContext,_In_ PSecBufferDesc pToken)
SECURITY_STATUS SEC_Entry secur32.DecryptMessage(_In_ PCtxtHandle phContext,_Inout_ PSecBufferDesc pMessage,_In_ ULONG MessageSeqNo,_Out_ PULONG pfQOP)
SECURITY_STATUS SEC_Entry secur32.DeleteSecurityContext(_In_ PCtxtHandle phContext)
SECURITY_STATUS SEC_Entry secur32.EncryptMessage(_In_ PCtxtHandle phContext,_In_ ULONG fQOP,_Inout_ PSecBufferDesc pMessage,_In_ ULONG MessageSeqNo)
SECURITY_STATUS SEC_Entry secur32.ExportSecurityContext(_In_ PCtxtHandle phContext,_In_ Ulong fFlags,_Out_ PSecBuffer pPackedContext,_Out_opt_ HANDLE *pToken)
SECURITY_STATUS SEC_Entry secur32.FreeContextBuffer(_In_ PVOID pvContextBuffer)
SECURITY_STATUS SEC_Entry secur32.FreeCredentialsHandle(_In_ PCredHandle phCredential)
SECURITY_STATUS SEC_Entry secur32.ImpersonateSecurityContext(_In_ PCtxtHandle phContext)
SECURITY_STATUS SEC_Entry secur32.ImportSecurityContextA(_In_ PSECURITY_STRING *pszPackage,_In_ PSecBuffer pPackedContext,_In_opt_ HANDLE pToken,_Out_ PCtxtHandle phContext)
SECURITY_STATUS SEC_Entry secur32.ImportSecurityContext(_In_ PSECURITY_STRING *pszPackage,_In_ PSecBuffer pPackedContext,_In_opt_ HANDLE pToken,_Out_ PCtxtHandle phContext)
SECURITY_STATUS SEC_Entry secur32.ImportSecurityContextW(_In_ PSECURITY_STRING *pszPackage,_In_ PSecBuffer pPackedContext,_In_opt_ HANDLE pToken,_Out_ PCtxtHandle phContext)
SECURITY_STATUS SEC_Entry secur32.InitializeSecurityContextA(_In_opt_ PCredHandle phCredential,_In_opt_ PCtxtHandle phContext,_In_opt_ SEC_CHAR *pszTargetName,_In_ ULONG fContextReq,_In_ ULONG Reserved1,_In_ ULONG TargetDataRep,_In_opt_ PSecBufferDesc pInput,_In_ ULONG Reserved2,_Inout_opt_ PCtxtHandle phNewContext,_Inout_opt_ PSecBufferDesc pOutput,_Out_ PULONG pfContextAttr,_Out_opt_ PTimeStamp ptsExpiry)
SECURITY_STATUS SEC_Entry secur32.InitializeSecurityContextA(_In_opt_ PCredHandle phCredential,_In_opt_ PCtxtHandle phContext,_In_ SEC_CHAR *pszTargetName,_In_ ULONG fContextReq,_In_ ULONG Reserved1,_In_ ULONG TargetDataRep,_In_opt_ PSecBufferDesc pInput,_In_ ULONG Reserved2,_Inout_opt_ PCtxtHandle phNewContext,_Inout_opt_ PSecBufferDesc pOutput,_Out_ PULONG pfContextAttr,_Out_opt_ PTimeStamp ptsExpiry)
SECURITY_STATUS SEC_Entry secur32.InitializeSecurityContext(_In_opt_ PCredHandle phCredential,_In_opt_ PCtxtHandle phContext,_In_opt_ SEC_CHAR *pszTargetName,_In_ ULONG fContextReq,_In_ ULONG Reserved1,_In_ ULONG TargetDataRep,_In_opt_ PSecBufferDesc pInput,_In_ ULONG Reserved2,_Inout_opt_ PCtxtHandle phNewContext,_Inout_opt_ PSecBufferDesc pOutput,_Out_ PULONG pfContextAttr,_Out_opt_ PTimeStamp ptsExpiry)
SECURITY_STATUS SEC_Entry secur32.InitializeSecurityContext(_In_opt_ PCredHandle phCredential,_In_opt_ PCtxtHandle phContext,_In_ SEC_CHAR *pszTargetName,_In_ ULONG fContextReq,_In_ ULONG Reserved1,_In_ ULONG TargetDataRep,_In_opt_ PSecBufferDesc pInput,_In_ ULONG Reserved2,_Inout_opt_ PCtxtHandle phNewContext,_Inout_opt_ PSecBufferDesc pOutput,_Out_ PULONG pfContextAttr,_Out_opt_ PTimeStamp ptsExpiry)
SECURITY_STATUS SEC_Entry secur32.InitializeSecurityContextW(_In_opt_ PCredHandle phCredential,_In_opt_ PCtxtHandle phContext,_In_opt_ SEC_CHAR *pszTargetName,_In_ ULONG fContextReq,_In_ ULONG Reserved1,_In_ ULONG TargetDataRep,_In_opt_ PSecBufferDesc pInput,_In_ ULONG Reserved2,_Inout_opt_ PCtxtHandle phNewContext,_Inout_opt_ PSecBufferDesc pOutput,_Out_ PULONG pfContextAttr,_Out_opt_ PTimeStamp ptsExpiry)
SECURITY_STATUS SEC_Entry secur32.InitializeSecurityContextW(_In_opt_ PCredHandle phCredential,_In_opt_ PCtxtHandle phContext,_In_ SEC_CHAR *pszTargetName,_In_ ULONG fContextReq,_In_ ULONG Reserved1,_In_ ULONG TargetDataRep,_In_opt_ PSecBufferDesc pInput,_In_ ULONG Reserved2,_Inout_opt_ PCtxtHandle phNewContext,_Inout_opt_ PSecBufferDesc pOutput,_Out_ PULONG pfContextAttr,_Out_opt_ PTimeStamp ptsExpiry)
SECURITY_STATUS SEC_Entry secur32.MakeSignature(_In_ PCtxtHandle phContext,_In_ ULONG fQOP,_Inout_ PSecBufferDesc pMessage,_In_ ULONG MessageSeqNo)
SECURITY_STATUS SEC_Entry secur32.QueryContextAttributesA(_In_ PCtxtHandle phContext,_In_ ULONG ulAttribute,_Out_ PVOID pBuffer)
SECURITY_STATUS SEC_Entry secur32.QueryContextAttributes(_In_ PCtxtHandle phContext,_In_ ULONG ulAttribute,_Out_ PVOID pBuffer)
SECURITY_STATUS SEC_Entry secur32.QueryContextAttributesW(_In_ PCtxtHandle phContext,_In_ ULONG ulAttribute,_Out_ PVOID pBuffer)
SECURITY_STATUS SEC_Entry secur32.QueryCredentialsAttributesA(_In_ PCredHandle phCredential,_In_ ULONG ulAttribute,_Out_ PVOID pBuffer)
SECURITY_STATUS SEC_Entry secur32.QueryCredentialsAttributes(_In_ PCredHandle phCredential,_In_ ULONG ulAttribute,_Out_ PVOID pBuffer)
SECURITY_STATUS SEC_Entry secur32.QueryCredentialsAttributesW(_In_ PCredHandle phCredential,_In_ ULONG ulAttribute,_Out_ PVOID pBuffer)
SECURITY_STATUS SEC_Entry secur32.QuerySecurityContextToken(_In_ PCtxtHandle phContext,_Out_ HANDLE *phToken)
SECURITY_STATUS SEC_Entry secur32.QuerySecurityPackageInfoA(_In_ SEC_CHAR *pszPackageName,_Out_ PSecPkgInfo *ppPackageInfo)
SECURITY_STATUS SEC_Entry secur32.QuerySecurityPackageInfo(_In_ SEC_CHAR *pszPackageName,_Out_ PSecPkgInfo *ppPackageInfo)
SECURITY_STATUS SEC_Entry secur32.QuerySecurityPackageInfoW(_In_ SEC_CHAR *pszPackageName,_Out_ PSecPkgInfo *ppPackageInfo)
SECURITY_STATUS SEC_Entry secur32.RevertSecurityContext(_In_ PCtxtHandle phContext)
SECURITY_STATUS SEC_ENTRY secur32.SaslEnumerateProfilesA(_Out_ LPTSTR *ProfileList,_Out_ ULONG *ProfileCount)
SECURITY_STATUS SEC_ENTRY secur32.SaslEnumerateProfiles(_Out_ LPTSTR *ProfileList,_Out_ ULONG *ProfileCount)
SECURITY_STATUS SEC_ENTRY secur32.SaslEnumerateProfilesW(_Out_ LPTSTR *ProfileList,_Out_ ULONG *ProfileCount)
SECURITY_STATUS SEC_ENTRY secur32.SaslGetContextOption(_In_ PCtxtHandle ContextHandle,_In_ ULONG Option,_Out_ PVOID Value,_Out_ ULONG Size,_Out_opt_ PULONG Needed)
SECURITY_STATUS SEC_ENTRY secur32.SaslGetProfilePackageA(_In_ LPTSTR ProfileName,_Out_ PSecPkgInfo *PackageInfo)
SECURITY_STATUS SEC_ENTRY secur32.SaslGetProfilePackage(_In_ LPTSTR ProfileName,_Out_ PSecPkgInfo *PackageInfo)
SECURITY_STATUS SEC_ENTRY secur32.SaslGetProfilePackageW(_In_ LPTSTR ProfileName,_Out_ PSecPkgInfo *PackageInfo)
SECURITY_STATUS SEC_ENTRY secur32.SaslIdentifyPackageA(_In_ PSecBufferDesc pInput,_Out_ PSecPkgInfo *PackageInfo)
SECURITY_STATUS SEC_ENTRY secur32.SaslIdentifyPackage(_In_ PSecBufferDesc pInput,_Out_ PSecPkgInfo *PackageInfo)
SECURITY_STATUS SEC_ENTRY secur32.SaslIdentifyPackageW(_In_ PSecBufferDesc pInput,_Out_ PSecPkgInfo *PackageInfo)
SECURITY_STATUS SEC_ENTRY secur32.SaslSetContextOption(_In_ PCtxtHandle ContextHandle,_In_ ULONG Option,_In_ PVOID Value,_In_ ULONG Size)
SECURITY_STATUS SEC_ENTRY secur32.SetContextAttributesA(_In_ PCtxtHandle phContext,_In_ ULONG ulAttribute,_In_ void *pBuffer,_In_ ULONG cbBuffer)
SECURITY_STATUS SEC_ENTRY secur32.SetContextAttributes(_In_ PCtxtHandle phContext,_In_ ULONG ulAttribute,_In_ void *pBuffer,_In_ ULONG cbBuffer)
SECURITY_STATUS SEC_ENTRY secur32.SetContextAttributesW(_In_ PCtxtHandle phContext,_In_ ULONG ulAttribute,_In_ void *pBuffer,_In_ ULONG cbBuffer)
SECURITY_STATUS SEC_Entry secur32.VerifySignature(_In_ PCtxtHandle phContext,_In_ PSecBufferDesc pMessage,_In_ ULONG MessageSeqNo,_Out_ PULONG pfQOP)
SECURITY_STATUS SEC_Entry sspicli.EnumerateSecurityPackagesA(_In_ PULONG pcPackages,_In_ PSecPkgInfo *ppPackageInfo)
SECURITY_STATUS SEC_Entry sspicli.EnumerateSecurityPackages(_In_ PULONG pcPackages,_In_ PSecPkgInfo *ppPackageInfo)
SECURITY_STATUS SEC_Entry sspicli.EnumerateSecurityPackagesW(_In_ PULONG pcPackages,_In_ PSecPkgInfo *ppPackageInfo)
SECURITY_STATUS WINAPI ncrypt.NCryptCreatePersistedKey(_In_ NCRYPT_PROV_HANDLE hProvider,_Out_ NCRYPT_KEY_HANDLE *phKey,_In_ LPCWSTR pszAlgId,_In_opt_ LPCWSTR pszKeyName,_In_ DWORD dwLegacyKeySpec,_In_ DWORD dwFlags)
SECURITY_STATUS WINAPI ncrypt.NCryptDecrypt(_In_ NCRYPT_KEY_HANDLE hKey,_In_ PBYTE pbInput,_In_ DWORD cbInput,_In_opt_ VOID *pPaddingInfo,_Out_ PBYTE pbOutput,_In_ DWORD cbOutput,_Out_ DWORD *pcbResult,_In_ DWORD dwFlags)
SECURITY_STATUS WINAPI ncrypt.NCryptDeleteKey(_In_ NCRYPT_KEY_HANDLE hKey,_In_ DWORD dwFlags)
SECURITY_STATUS WINAPI ncrypt.NCryptDeriveKey(_In_ NCRYPT_SECRET_HANDLE hSharedSecret,_In_ LPCWSTR pwszKDF,_In_opt_ NCryptBufferDesc *pParameterList,_Out_opt_ PBYTE pbDerivedKey,_In_ DWORD cbDerivedKey,_Out_ DWORD *pcbResult,_In_ ULONG dwFlags)
SECURITY_STATUS WINAPI ncrypt.NCryptEncrypt(_In_ NCRYPT_KEY_HANDLE hKey,_In_ PBYTE pbInput,_In_ DWORD cbInput,_In_opt_ VOID *pPaddingInfo,_Out_ PBYTE pbOutput,_In_ DWORD cbOutput,_Out_ DWORD *pcbResult,_In_ DWORD dwFlags)
SECURITY_STATUS WINAPI ncrypt.NCryptEnumAlgorithms(_In_ NCRYPT_PROV_HANDLE hProvider,_In_ DWORD dwAlgOperations,_Out_ DWORD *pdwAlgCount,_Out_ NCryptAlgorithmName **ppAlgList,_In_ DWORD dwFlags)
SECURITY_STATUS WINAPI ncrypt.NCryptEnumKeys(_In_ NCRYPT_PROV_HANDLE hProvider,_In_opt_ LPCWSTR pszScope,_Out_ NCryptKeyName **ppKeyName,_Inout_ PVOID *ppEnumState,_In_ DWORD dwFlags)
SECURITY_STATUS WINAPI ncrypt.NCryptEnumStorageProviders(_Out_ DWORD *pdwProviderCount,_Out_ NCryptProviderName **ppProviderList,_In_ DWORD dwFlags)
SECURITY_STATUS WINAPI ncrypt.NCryptExportKey(_In_ NCRYPT_KEY_HANDLE hKey,_In_opt_ NCRYPT_KEY_HANDLE hExportKey,_In_ LPCWSTR pszBlobType,_In_opt_ NCryptBufferDesc *pParameterList,_Out_opt_ PBYTE pbOutput,_In_ DWORD cbOutput,_Out_ DWORD *pcbResult,_In_ DWORD dwFlags)
SECURITY_STATUS WINAPI ncrypt.NCryptFreeBuffer(_In_ PVOID pvInput)
SECURITY_STATUS WINAPI ncrypt.NCryptFreeObject(_In_ NCRYPT_HANDLE hObject)
SECURITY_STATUS WINAPI ncrypt.NCryptGetProperty(_In_ NCRYPT_HANDLE hObject,_In_ LPCWSTR pszProperty,_Out_ PBYTE pbOutput,_In_ DWORD cbOutput,_Out_ DWORD *pcbResult,_In_ DWORD dwFlags)
SECURITY_STATUS WINAPI ncrypt.NCryptImportKey(_In_ NCRYPT_PROV_HANDLE hProvider,_In_opt_ NCRYPT_KEY_HANDLE hImportKey,_In_ LPCWSTR pszBlobType,_In_opt_ NCryptBufferDesc *pParameterList,_Out_ NCRYPT_KEY_HANDLE *phKey,_In_ PBYTE pbData,_In_ DWORD cbData,_In_ DWORD dwFlags)
SECURITY_STATUS WINAPI ncrypt.NCryptIsAlgSupported(_In_ NCRYPT_PROV_HANDLE hProvider,_In_ LPCWSTR pszAlgId,_In_ DWORD dwFlags)
SECURITY_STATUS WINAPI ncrypt.NCryptKeyDerivation(_In_ NCRYPT_KEY_HANDLE hKey,_In_ NCryptBufferDesc *pParameterList,_Out_ PUCHAR pbDerivedKey,_In_ DWORD cbDerivedKey,_Out_ DWORD *pcbResult,_In_ ULONG dwFlags)
SECURITY_STATUS WINAPI ncrypt.NCryptNotifyChangeKey(_In_ NCRYPT_PROV_HANDLE hProvider,_Inout_ HANDLE *phEvent,_In_ DWORD dwFlags)
SECURITY_STATUS WINAPI ncrypt.NCryptOpenKey(_In_ NCRYPT_PROV_HANDLE hProvider,_Out_ NCRYPT_KEY_HANDLE *phKey,_In_ LPCWSTR pszKeyName,_In_ DWORD dwLegacyKeySpec,_In_ DWORD dwFlags)
SECURITY_STATUS WINAPI ncrypt.NCryptOpenStorageProvider(_Out_ NCRYPT_PROV_HANDLE *phProvider,_In_opt_ LPCWSTR pszProviderName,_In_ DWORD dwFlags)
SECURITY_STATUS WINAPI ncrypt.NCryptSecretAgreement(_In_ NCRYPT_KEY_HANDLE hPrivKey,_In_ NCRYPT_KEY_HANDLE hPubKey,_Out_ NCRYPT_SECRET_HANDLE *phSecret,_In_ DWORD dwFlags)
SECURITY_STATUS WINAPI ncrypt.NCryptSetProperty(_In_ NCRYPT_HANDLE hObject,_In_ LPCWSTR pszProperty,_In_ PBYTE pbInput,_In_ DWORD cbInput,_In_ DWORD dwFlags)
SECURITY_STATUS WINAPI ncrypt.NCryptSignHash(_In_ NCRYPT_KEY_HANDLE hKey,_In_opt_ VOID *pPaddingInfo,_In_ PBYTE pbHashValue,_In_ DWORD cbHashValue,_Out_ PBYTE pbSignature,_In_ DWORD cbSignature,_Out_ DWORD *pcbResult,_In_ DWORD dwFlags)
SECURITY_STATUS WINAPI ncrypt.NCryptTranslateHandle(_Out_opt_ NCRYPT_PROV_HANDLE *phProvider,_Out_ NCRYPT_KEY_HANDLE *phKey,_In_ HCRYPTPROV hLegacyProv,_In_opt_ HCRYPTKEY hLegacyKey,_In_opt_ DWORD dwLegacyKeySpec,_In_ DWORD dwFlags)
SECURITY_STATUS WINAPI ncrypt.NCryptVerifySignature(_In_ NCRYPT_KEY_HANDLE hKey,_In_opt_ VOID *pPaddingInfo,_In_ PBYTE pbHashValue,_In_ DWORD cbHashValue,_In_ PBYTE pbSignature,_In_ DWORD cbSignature,_In_ DWORD dwFlags)
SECURITY_STATUS WINAPI ncrypt.SslChangeNotify(_In_ HANDLE hEvent,_In_ DWORD dwFlags)
SECURITY_STATUS WINAPI ncrypt.SslComputeClientAuthHash(_In_ NCRYPT_PROV_HANDLE hSslProvider,_In_ NCRYPT_KEY_HANDLE hMasterKey,_In_ NCRYPT_HASH_HANDLE hHandshakeHash,_In_ LPCWSTR pszAlgId,_Out_ PBYTE pbOutput,_In_ DWORD cbOutput,_Out_ DWORD *pcbResult,_In_ DWORD dwFlags)
SECURITY_STATUS WINAPI ncrypt.SslComputeEapKeyBlock(_In_ NCRYPT_PROV_HANDLE hSslProvider,_In_ NCRYPT_KEY_HANDLE hMasterKey,_In_ PBYTE pbRandoms,_In_ DWORD cbRandoms,_Out_opt_ PBYTE pbOutput,_In_ DWORD cbOutput,_Out_ DWORD *pcbResult,_In_ DWORD dwFlags)
SECURITY_STATUS WINAPI ncrypt.SslComputeFinishedHash(_In_ NCRYPT_PROV_HANDLE hSslProvider,_In_ NCRYPT_KEY_HANDLE hMasterKey,_In_ NCRYPT_HASH_HANDLE hHandshakeHash,_Out_ PBYTE pbOutput,_In_ DWORD cbOutput,_In_ DWORD dwFlags)
SECURITY_STATUS WINAPI ncrypt.SslCreateClientAuthHash(_In_ NCRYPT_PROV_HANDLE hSslProvider,_Out_ NCRYPT_HASH_HANDLE *phHandshakeHash,_In_ DWORD dwProtocol,_In_ DWORD dwCipherSuite,_In_ LPCWSTR pszHashAlgId,_In_ DWORD dwFlags)
SECURITY_STATUS WINAPI ncrypt.SslCreateEphemeralKey(_In_ NCRYPT_PROV_HANDLE hSslProvider,_Out_ NCRYPT_KEY_HANDLE *phEphemeralKey,_In_ DWORD dwProtocol,_In_ DWORD dwCipherSuite,_In_ DWORD dwKeyType,_In_ DWORD dwKeyBitLen,_In_ PBYTE pbParams,_In_ DWORD cbParams,_In_ DWORD dwFlags)
SECURITY_STATUS WINAPI ncrypt.SslCreateHandshakeHash(_In_ NCRYPT_PROV_HANDLE hSslProvider,_Out_ NCRYPT_HASH_HANDLE *phHandshakeHash,_In_ DWORD dwProtocol,_In_ DWORD dwCipherSuite,_In_ DWORD dwFlags)
SECURITY_STATUS WINAPI ncrypt.SslDecrementProviderReferenceCount(_In_ NCRYPT_PROV_HANDLE hSslProvider)
SECURITY_STATUS WINAPI ncrypt.SslDecryptPacket(_In_ NCRYPT_PROV_HANDLE hSslProvider,_Inout_ NCRYPT_KEY_HANDLE hKey,_In_ PBYTE *pbInput,_In_ DWORD cbInput,_Out_ PBYTE pbOutput,_In_ DWORD cbOutput,_Out_ DWORD *pcbResult,_In_ ULONGLONG SequenceNumber,_In_ DWORD dwFlags)
SECURITY_STATUS WINAPI ncrypt.SslEncryptPacket(_In_ NCRYPT_PROV_HANDLE hSslProvider,_Inout_ NCRYPT_KEY_HANDLE hKey,_In_ PBYTE *pbInput,_In_ DWORD cbInput,_Out_ PBYTE pbOutput,_In_ DWORD cbOutput,_Out_ DWORD *pcbResult,_In_ ULONGLONG SequenceNumber,_In_ DWORD dwContentType,_In_ DWORD dwFlags)
SECURITY_STATUS WINAPI ncrypt.SslEnumCipherSuites(_In_ NCRYPT_PROV_HANDLE hSslProvider,_In_opt_ NCRYPT_KEY_HANDLE hPrivateKey,_Out_ NCRYPT_SSL_CIPHER_SUITE **ppCipherSuite,_Inout_ PVOID *ppEnumState,_In_ DWORD dwFlags)
SECURITY_STATUS WINAPI ncrypt.SslEnumProtocolProviders(_Out_ DWORD *pdwProviderCount,_Out_ NCryptProviderName **ppProviderList,_In_ DWORD dwFlags)
SECURITY_STATUS WINAPI ncrypt.SslExportKeyingMaterial(_In_ NCRYPT_PROV_HANDLE hSslProvider,_In_ NCRYPT_KEY_HANDLE hMasterKey,_In_ PCHAR sLabel,_In_ PBYTE pbRandoms,_In_ DWORD cbRandoms,_In_opt_ PBYTE pbContextValue,_In_ WORD cbContextValue,_Out_ PBYTE pbOutput,_In_ DWORD cbOutput,_In_ DWORD dwFlags)
SECURITY_STATUS WINAPI ncrypt.SslExportKey(_In_ NCRYPT_PROV_HANDLE hSslProvider,_In_ NCRYPT_KEY_HANDLE hKey,_In_ LPCWSTR pszBlobType,_Out_opt_ PBYTE pbOutput,_In_ DWORD cbOutput,_Out_ DWORD *pcbResult,_In_ DWORD dwFlags)
SECURITY_STATUS WINAPI ncrypt.SslFreeBuffer(_In_ PVOID pvInput)
SECURITY_STATUS WINAPI ncrypt.SslFreeObject(_In_ NCRYPT_HANDLE hObject,_In_ DWORD dwFlags)
SECURITY_STATUS WINAPI ncrypt.SslGenerateMasterKey(_In_ NCRYPT_PROV_HANDLE hSslProvider,_In_ NCRYPT_KEY_HANDLE hPrivateKey,_In_ NCRYPT_KEY_HANDLE hPublicKey,_Out_ NCRYPT_KEY_HANDLE *phMasterKey,_In_ DWORD dwProtocol,_In_ DWORD dwCipherSuite,_In_ PNCryptBufferDesc pParameterList,_Out_ PBYTE pbOutput,_In_ DWORD cbOutput,_Out_ DWORD *pcbResult,_In_ DWORD dwFlags)
SECURITY_STATUS WINAPI ncrypt.SslGenerateSessionKeys(_In_ NCRYPT_PROV_HANDLE hSslProvider,_In_ NCRYPT_KEY_HANDLE hMasterKey,_Out_ NCRYPT_KEY_HANDLE *phReadKey,_Out_ NCRYPT_KEY_HANDLE *phWriteKey,_In_ PNCryptBufferDesc pParameterList,_In_ DWORD dwFlags)
SECURITY_STATUS WINAPI ncrypt.SslGetCipherSuitePRFHashAlgorithm(_In_ NCRYPT_PROV_HANDLE hSslProvider,_In_ DWORD dwProtocol,_In_ DWORD dwCipherSuite,_In_ DWORD dwKeyType,_Out_ WCHAR szPRFHash[NCRYPT_SSL_MAX_NAME_SIZE],_In_ DWORD dwFlags)
SECURITY_STATUS WINAPI ncrypt.SslGetKeyProperty(_In_ NCRYPT_KEY_HANDLE hKey,_In_ LPCWSTR pszProperty,_Out_ PBYTE ppbOutput,_Out_ DWORD *pcbOutput,_In_ DWORD dwFlags)
SECURITY_STATUS WINAPI ncrypt.SslGetProviderProperty(_In_ NCRYPT_PROV_HANDLE hSslProvider,_In_ LPCWSTR pszProperty,_Out_ PBYTE ppbOutput,_Out_ DWORD *pcbOutput,_Inout_ PVOID *ppEnumState,_In_ DWORD dwFlags)
SECURITY_STATUS WINAPI ncrypt.SslHashHandshake(_In_ NCRYPT_PROV_HANDLE hSslProvider,_Inout_ NCRYPT_HASH_HANDLE hHandshakeHash,_Out_ PBYTE pbInput,_In_ DWORD cbInput,_In_ DWORD dwFlags)
SECURITY_STATUS WINAPI ncrypt.SslImportKey(_In_ NCRYPT_PROV_HANDLE hSslProvider,_Out_ NCRYPT_KEY_HANDLE *phKey,_In_ LPCWSTR pszBlobType,_In_ PBYTE pbKeyBlob,_In_ DWORD cbKeyBlob,_In_ DWORD dwFlags)
SECURITY_STATUS WINAPI ncrypt.SslImportMasterKey(_In_ NCRYPT_PROV_HANDLE hSslProvider,_In_ NCRYPT_KEY_HANDLE hPrivateKey,_Out_ NCRYPT_KEY_HANDLE *phMasterKey,_In_ DWORD dwProtocol,_In_ DWORD dwCipherSuite,_In_ PNCryptBufferDesc pParameterList,_In_ PBYTE pbEncryptedKey,_In_ DWORD cbEncryptedKey,_In_ DWORD dwFlags)
SECURITY_STATUS WINAPI ncrypt.SslIncrementProviderReferenceCount(_In_ NCRYPT_PROV_HANDLE hSslProvider)
SECURITY_STATUS WINAPI ncrypt.SslLookupCipherLengths(_In_ NCRYPT_PROV_HANDLE hSslProvider,_In_ DWORD dwProtocol,_In_ DWORD dwCipherSuite,_In_ DWORD dwKeyType,_Out_ NCRYPT_SSL_CIPHER_LENGTHS *pCipherLengths,_In_ DWORD cbCipherLengths,_In_ DWORD dwFlags)
SECURITY_STATUS WINAPI ncrypt.SslLookupCipherSuiteInfo(_In_ NCRYPT_PROV_HANDLE hSslProvider,_In_ DWORD dwProtocol,_In_ DWORD dwCipherSuite,_In_ DWORD dwKeyType,_Out_ NCRYPT_SSL_CIPHER_SUITE *pCipherSuite,_In_ DWORD dwFlags)
SECURITY_STATUS WINAPI ncrypt.SslOpenPrivateKey(_In_ NCRYPT_PROV_HANDLE hSslProvider,_Out_ NCRYPT_KEY_HANDLE *phPrivateKey,_In_ PCCERT_CONTEXT pCertContext,_In_ DWORD dwFlags)
SECURITY_STATUS WINAPI ncrypt.SslOpenProvider(_Out_ NCRYPT_PROV_HANDLE *phSslProvider,_In_ LPCWSTR pszProviderName,_In_ DWORD dwFlags)
SECURITY_STATUS WINAPI ncrypt.SslSignHash(_In_ NCRYPT_PROV_HANDLE hSslProvider,_In_ NCRYPT_KEY_HANDLE hPrivateKey,_In_ PBYTE pbHashValue,_In_ DWORD cbHashValue,_Out_ PBYTE pbSignature,_In_ DWORD cbSignature,_Out_ DWORD *pcbResult,_In_ DWORD dwFlags)
SECURITY_STATUS WINAPI ncrypt.SslVerifySignature(_In_ NCRYPT_PROV_HANDLE hSslProvider,_In_ NCRYPT_KEY_HANDLE hPublicKey,_In_ PBYTE pbHashValue,_In_ DWORD cbHashValue,_In_ PBYTE pbSignature,_In_ DWORD cbSignature,_In_ DWORD dwFlags)
SECURITY_STATUS WINAPI schannel.SslGetServerIdentity(_In_ PBYTE ClientHello,_In_ DWORD ClientHelloSize,_Out_ PBYTE *ServerIdentity,_Out_ PDWORD ServerIdentitySize,_In_ DWORD Flags)
SECURITY_STATUS WINAPI secur32.QueryContextAttributesExA(_In_ PCtxtHandle phContext,_In_ ULONG ulAttribute,_Out_ PVOID pBuffer,_In_ ULONG cbBuffer)
SECURITY_STATUS WINAPI secur32.QueryContextAttributesEx(_In_ PCtxtHandle phContext,_In_ ULONG ulAttribute,_Out_ PVOID pBuffer,_In_ ULONG cbBuffer)
SECURITY_STATUS WINAPI secur32.QueryContextAttributesExW(_In_ PCtxtHandle phContext,_In_ ULONG ulAttribute,_Out_ PVOID pBuffer,_In_ ULONG cbBuffer)
SECURITY_STATUS WINAPI tokenbinding.TokenBindingDeleteBinding(_In_ PCWSTR targetURL)
SECURITY_STATUS WINAPI tokenbinding.TokenBindingGetKeyTypesClient(_Out_ TOKENBINDING_KEY_TYPES **keyTypes)
SECURITY_STATUS WINAPI tokenbinding.TokenBindingGetKeyTypesServer(_Out_ TOKENBINDING_KEY_TYPES **keyTypes)
SerializableAttribute FlagsAttribute None.ComVisibleAttribute(true None None)
SerializableAttribute None NBOOL WINAPI kernel32.CopyFile(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName,_In_ BOOL bFailIfExists)
SerializableAttribute None None.AttributeUsageAttribute(AttributeTargets.All None None,Inherited=true None None,AllowMultiple=false None None)
SerializableAttribute None None.AttributeUsageAttribute(AttributeTargets.Assembly|AttributeTargets.Class|AttributeTargets.Struct|AttributeTargets.Constructor|AttributeTargets.Method|AttributeTargets.Delegate None None,AllowMultiple=true None None,Inherited=false None None)
SerializableAttribute None None.AttributeUsageAttribute(AttributeTargets.Assembly|AttributeTargets.Class|AttributeTargets.Struct|AttributeTargets.Constructor|AttributeTargets.Method None None,AllowMultiple=true None None,Inherited=false None None)
SerializableAttribute None None.AttributeUsageAttribute(AttributeTargets.Class None None)
SerializableAttribute None None.AttributeUsageAttribute(AttributeTargets.Enum None None)
SerializableAttribute None None.AttributeUsageAttribute(AttributeTargets.Enum None None,Inherited=false None None)
SerializableAttribute None None.AttributeUsageAttribute(AttributeTargets.Field None None,Inherited=false None None)
SerializableAttribute None None.AttributeUsageAttribute(AttributeTargets.Struct None None)
SerializableAttribute None None.ClassInterfaceAttribute(ClassInterfaceType.AutoDispatch None None)
SerializableAttribute None None.ClassInterfaceAttribute(ClassInterfaceType.AutoDual None None)
SerializableAttribute None None.ClassInterfaceAttribute(ClassInterfaceType.None None None)
SerializableAttribute None None.ComVisibleAttribute(false None None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
SerializableAttribute None None.TypeConverterAttribute(System.ComponentModel.TypeConverter None None)
SerializableAttribute None None.TypeConverterAttribute(System.Drawing.IconConverter None None)
SerializableAttribute None None.TypeConverterAttribute(System.Drawing.Printing.MarginsConverter None None)
SerializableAttribute None None.TypeConverterAttribute(System.UriTypeConverter None None)
SerializableAttribute None None.TypeConverterAttribute(System.Windows.Forms.CursorConverter None None)
SerializableAttribute None None.TypeConverterAttribute(System.Windows.Forms.Layout.TableLayoutSettingsTypeConverter None None)
SerializableAttribute None None.TypeConverterAttribute(System.Windows.Forms.ListViewGroupConverter None None)
SerializableAttribute None None.TypeConverterAttribute(System.Windows.Forms.ListViewItemConverter None None)
SerializableAttribute None None.TypeConverterAttribute(System.Windows.Forms.ListViewSubItemConverter None None)
SerializableAttribute None None.TypeConverterAttribute(System.Windows.Forms.TreeNodeConverter None None)
SERVICE_STATUS_HANDLE WINAPI advapi32.RegisterServiceCtrlHandlerA(_In_ LPCTSTR lpServiceName,_In_ LPHANDLER_FUNCTION lpHandlerProc)
SERVICE_STATUS_HANDLE WINAPI advapi32.RegisterServiceCtrlHandlerExA(_In_ LPCTSTR lpServiceName,_In_ LPHANDLER_FUNCTION_EX lpHandlerProc,_In_opt_ LPVOID lpContext)
SERVICE_STATUS_HANDLE WINAPI advapi32.RegisterServiceCtrlHandlerEx(_In_ LPCTSTR lpServiceName,_In_ LPHANDLER_FUNCTION_EX lpHandlerProc,_In_opt_ LPVOID lpContext)
SERVICE_STATUS_HANDLE WINAPI advapi32.RegisterServiceCtrlHandlerExW(_In_ LPCTSTR lpServiceName,_In_ LPHANDLER_FUNCTION_EX lpHandlerProc,_In_opt_ LPVOID lpContext)
SERVICE_STATUS_HANDLE WINAPI advapi32.RegisterServiceCtrlHandler(_In_ LPCTSTR lpServiceName,_In_ LPHANDLER_FUNCTION lpHandlerProc)
SERVICE_STATUS_HANDLE WINAPI advapi32.RegisterServiceCtrlHandlerW(_In_ LPCTSTR lpServiceName,_In_ LPHANDLER_FUNCTION lpHandlerProc)
short None None.GET_NCHITTEST_WPARAM(WPARAM wParam None)
short None None.ToInt16(IFormatProvider provider None)
SHORT None propsys.PropVariantToInt16WithDefault(_In_ REFPROPVARIANT propvarIn,_In_ SHORT iDefault)
SHORT None propsys.VariantToInt16WithDefault(_In_ REFVARIANT varIn,_In_ SHORT iDefault)
short WINAPI comdlg32.GetFileTitleA(_In_ LPCTSTR lpszFile,_Out_ LPTSTR lpszTitle,_In_ WORD cchSize)
short WINAPI comdlg32.GetFileTitle(_In_ LPCTSTR lpszFile,_Out_ LPTSTR lpszTitle,_In_ WORD cchSize)
short WINAPI comdlg32.GetFileTitleW(_In_ LPCTSTR lpszFile,_Out_ LPTSTR lpszTitle,_In_ WORD cchSize)
SHORT WINAPI user32.GetAsyncKeyState(_In_ int vKey)
SHORT WINAPI user32.VkKeyScanA(_In_ TCHAR ch)
SHORT WINAPI user32.VkKeyScanExA(_In_ TCHAR ch,_In_ HKL dwhkl)
SHORT WINAPI user32.VkKeyScanEx(_In_ TCHAR ch,_In_ HKL dwhkl)
SHORT WINAPI user32.VkKeyScanExW(_In_ TCHAR ch,_In_ HKL dwhkl)
SHORT WINAPI user32.VkKeyScan(_In_ TCHAR ch)
SHORT WINAPI user32.VkKeyScanW(_In_ TCHAR ch)
sint32 None storageqos.CreatePolicy([in None None,out] MSFT_StorageQoSPolicy Policy)
sint32 None storageqos.SetAttributes([in] string NewName,[in] uint64 Limit,[in] uint64 Reservation,[in] uint64 BandwidthLimit)
size_t None None._aligned_msize_dbg(void *memblock None,size_t alignment None,size_t offset None)
size_t None None._CrtSetDebugFillThreshold(size_t _NewThreshold None)
size_t None None.fread(void *buffer None,size_t size None,size_t count None,FILE *stream None)
size_t None None.mbstowcs(wchar_t *wcstr None,const char *mbstr,size_t count None)
size_t None None._msize(void *memblock None,size_t alignment None,size_t offset None)
size_t None None.strcspn(const char *str,const char *strCharSet)
size_t None None.strlen(const char *str)
size_t None None.strnlen(const char *str,size_t numberOfElements None)
size_t None None.strspn(const char *str,const char *strCharSet)
size_t None None.strxfrm(char *strDest None,const char *strSource,size_t count None)
size_t None None.wcstombs(char *mbstr None,const wchar_t *wcstr,size_t count None)
size_t None None.WdfCommonBufferGetLength(_In_ WDFCOMMONBUFFER CommonBuffer)
size_t None None.WdfDmaEnablerGetFragmentLength(_In_ WDFDMAENABLER DmaEnabler,_In_ WDF_DMA_DIRECTION DmaDirection)
size_t None None.WdfDmaEnablerGetMaximumLength(_In_ WDFDMAENABLER DmaEnabler)
size_t None None.WdfDmaEnablerGetMaximumScatterGatherElements(_In_ WDFDMAENABLER DmaEnabler)
size_t None None.WdfDmaTransactionGetBytesTransferred(_In_ WDFDMATRANSACTION DmaTransaction)
size_t None None.WdfDmaTransactionGetCurrentDmaTransferLength(_In_ WDFDMATRANSACTION DmaTransaction)
SIZE_T WINAPI kernel32.GetLargePageMinimum(void None None)
SIZE_T WINAPI kernel32.GlobalSize(_In_ HGLOBAL hMem)
SIZE_T WINAPI kernel32.HeapCompact(_In_ HANDLE hHeap,_In_ DWORD dwFlags)
SIZE_T WINAPI kernel32.HeapSize(_In_ HANDLE hHeap,_In_ DWORD dwFlags,_In_ LPCVOID lpMem)
SIZE_T WINAPI kernel32.VirtualQueryEx(_In_ HANDLE hProcess,_In_opt_ LPCVOID lpAddress,_Out_ PMEMORY_BASIC_INFORMATION lpBuffer,_In_ SIZE_T dwLength)
SIZE_T WINAPI kernel32.VirtualQuery(_In_opt_ LPCVOID lpAddress,_Out_ PMEMORY_BASIC_INFORMATION lpBuffer,_In_ SIZE_T dwLength)
SOCKET None None.WPUCreateSocketHandle(_In_ DWORD dwCatalogEntryId,_In_ DWORD_PTR dwContext,_Out_ LPINT lpErrno)
SOCKET None None.WPUModifyIFSHandle(_In_ DWORD dwCatalogEntryId,_In_ SOCKET ProposedHandle,_Out_ LPINT lpErrno)
SOCKET None None.WSPSocket(_In_ int af,_In_ int type,_In_ int protocol,_In_ LPWSAPROTOCOL_INFO lpProtocolInfo,_In_ GROUP g,DWORD dwFlags None,_Out_ LPINT lpErrno)
SOCKET None ws2_32.WSASocketA(_In_ int af,_In_ int type,_In_ int protocol,_In_ LPWSAPROTOCOL_INFO lpProtocolInfo,_In_ GROUP g,_In_ DWORD dwFlags)
SOCKET None ws2_32.WSASocket(_In_ int af,_In_ int type,_In_ int protocol,_In_ LPWSAPROTOCOL_INFO lpProtocolInfo,_In_ GROUP g,_In_ DWORD dwFlags)
SOCKET None ws2_32.WSASocketW(_In_ int af,_In_ int type,_In_ int protocol,_In_ LPWSAPROTOCOL_INFO lpProtocolInfo,_In_ GROUP g,_In_ DWORD dwFlags)
SOCKET WSAAPI ws2_32.socket(_In_ int af,_In_ int type,_In_ int protocol)
static bool None.EvaluatorMethod(System.Web.Mobile.MobileCapabilities capabilities None,String compareArgument None)
static bool None.IsFileURI(String path None)
static char None.GetFirstCharacter(String s None)
static HRESULT None.WaitEvent(HANDLE hEvent None)
static IEnumerableXElement None.StreamCustomerItem(string uri None)
static int None.Main(string[] args None)
static POINT_2F None.GetMousePositionForCurrentDpi(LPARAM lParam None)
static String None.IsFileURI(String path None)
static void gpsvc.RsopCreateSession([in] uint32 flags,[in] string userSid,[out] string nameSpace,[out] uint32 hResult,[out] uint32 ExtendedInfo)
static void gpsvc.RsopDeleteSession([in] string nameSpace,[out] uint32 hResult)
static void None.AuthenticateClient(TcpClient* clientRequest None)
static void None.CreateEventSourceSample1(string messageFile None)
static void None.DisplayAuthenticationProperties(NegotiateStream* stream None)
static void None.DisplayFileSystemInfoAttributes(FileSystemInfo fsi None)
static void None.DisplayPendingByteCount(Socket s None)
static void None.DisplayStreamProperties(NegotiateStream* stream None)
static void None.EndReadCallback(IAsyncResult asyncResult None)
static void None.EndWriteCallback(IAsyncResult asyncResult None)
static void None.GenerateCSCodeForService(EndpointAddress metadataAddress None,string outputFile None)
static void None.Main(string[] args None)
static void None.ReadText(TextReader textReader None)
static void None.WriteObjectInfo(object testObject None)
static void None.WriteObjectInfo(Object testObject None)
static void None.WriteObjectInfo(System.Windows.Controls.TextBlock outputBlock None,object testObject None)
static void None.WriteTerminatedEventArgs(string eventDescription None,TrackingWorkflowTerminatedEventArgs terminatedEventArgs None,DateTime eventDataTime None)
STDAPI None avifil32.AVIFileInfoA(PAVIFILE pfile None,AVIFILEINFO *pfi None,LONG lSize None)
STDAPI None avifil32.AVIFileInfo(PAVIFILE pfile None,AVIFILEINFO *pfi None,LONG lSize None)
STDAPI None avifil32.AVIFileInfoW(PAVIFILE pfile None,AVIFILEINFO *pfi None,LONG lSize None)
STDAPI None avifil32.AVIGetFromClipboard(PAVIFILE *lppf None)
STDAPI None avifil32.AVIStreamBeginStreaming(PAVISTREAM pavi None,LONG lStart None,LONG lEnd None,LONG lRate None)
STDAPI None avifil32.AVIStreamInfoA(PAVISTREAM pavi None,AVISTREAMINFO *psi None,LONG lSize None)
STDAPI None avifil32.AVIStreamInfo(PAVISTREAM pavi None,AVISTREAMINFO *psi None,LONG lSize None)
STDAPI None avifil32.AVIStreamInfoW(PAVISTREAM pavi None,AVISTREAMINFO *psi None,LONG lSize None)
STDAPI None avifil32.EditStreamCopy(PAVISTREAM pavi None,LONG *plStart None,LONG *plLength None,PAVISTREAM *ppResult None)
STDAPI None evr.MFCreateVideoSampleAllocator(_In_ REFIID riid,_Out_ void** ppSampleAllocator)
STDAPI None mf.MFCreateDeviceSourceActivate(_In_ IMFAttributes *pAttributes,_Out_ IMFActivate **ppActivate)
STDAPI None mf.MFCreateProtectedEnvironmentAccess(_Out_ IMFProtectedEnvironmentAccess **ppAccess)
STDAPI None mf.MFCreateTranscodeTopology(_In_ IMFMediaSource *pSrc,_In_ LPCWSTR pwszOutputFilePath,_In_ IMFTranscodeProfile *pProfile,_Out_ IMFTopology **ppTranscodeTopo)
STDAPI None mf.MFGetSystemId(_Out_ IMFSystemId **ppId)
STDAPI None mf.MFLoadSignedLibrary(_In_ LPCWSTR pszName,_Out_ IMFSignedLibrary **ppLib)
STDAPI None mfplat.MFCheckContentProtectionDevice(_In_ REFGUID ProtectionSystemId)
STDAPI None mfplat.MFCreateContentDecryptorContext(_In_ REFGUID guidMediaProtectionSystemId,_In_opt_ IMFDXGIDeviceManager *pD3DManager,_In_ IMFContentProtectionDevice *pContentProtectionDevice,_Out_ IMFContentDecryptorContext **ppContentDecryptorContext)
STDAPI None mfplat.MFCreateContentProtectionDevice(_In_ REFGUID ProtectionSystemId,_Out_ IMFContentProtectionDevice **ContentProtectionDevice)
STDAPI None mfplat.MFCreateTrackedSample(_Out_ IMFTrackedSample **ppMFSample)
STDAPI None mfplat.MFIsContentProtectionDeviceSupported(_In_ REFGUID ProtectionSystemId,_Out_ BOOL *isSupported)
STDAPI None None.AVIFileCreateStream(PAVIFILE pfile None,PAVISTREAM * ppavi,AVISTREAMINFO * psi)
STDAPI None None.AVIFileGetStream(PAVIFILE pfile None,PAVISTREAM * ppavi,DWORD fccType None,LONG lParam None)
STDAPI None None.AVIFileInfo(PAVIFILE pfile None,AVIFILEINFO * pfi,LONG lSize None)
STDAPI None None.AVIFileOpen(PAVIFILE * ppfile,LPCTSTR szFile None,UINT mode None,CLSID pclsidHandler None)
STDAPI None None.AVIGetFromClipboard(PAVIFILE * lppf)
STDAPI None None.AVIMakeCompressedStream(PAVISTREAM * ppsCompressed,PAVISTREAM psSource None,AVICOMPRESSOPTIONS * lpOptions,CLSID * pclsidHandler)
STDAPI None None.AVIMakeFileFromStreams(PAVIFILE * ppfile,int nStreams None,PAVISTREAM * papStreams)
STDAPI None None.AVISaveV(LPCTSTR szFile None,CLSID * pclsidHandler,AVISAVECALLBACK lpfnCallback None,int nStreams None,PAVISTREAM * ppavi,LPAVICOMPRESSOPTIONS * plpOptions)
STDAPI None None.AVIStreamBeginStreaming(PAVISTREAM pavi None,LONG lStart None,LONG lEnd None,LONG lRate None)
STDAPI None None.AVIStreamEndStreaming(PAVISTREAM pavi None)
STDAPI None None.AVIStreamGetFrameClose(PGETFRAME pget None)
STDAPI None None.AVIStreamReadData(PAVISTREAM pavi None,DWORD ckid None,LPVOID lpData None,LONG * lpcbData)
STDAPI None None.AVIStreamReadFormat(PAVISTREAM pavi None,LONG lPos None,LPVOID lpFormat None,LONG * lpcbFormat)
STDAPI None None.AVIStreamSetFormat(PAVISTREAM pavi None,LONG lPos None,LPVOID lpFormat None,LONG cbFormat None)
STDAPI None None.AVIStreamWriteData(PAVISTREAM pavi None,DWORD ckid None,LPVOID lpData None,LONG cbData None)
STDAPI None None.AVIStreamWrite(PAVISTREAM pavi None,LONG lStart None,LONG lSamples None,LPVOID lpBuffer None,LONG cbBuffer None,DWORD dwFlags None,LONG * plSampWritten,LONG * plBytesWritten)
STDAPI None None.CreateEditableStream(PAVISTREAM * ppsEditable,PAVISTREAM psSource None)
STDAPI None None.DataObj_SetDWORD(IDataObject *pdtobj None,UINT cf None,DWORD dw None)
STDAPI None None.DllRegisterServer(void None None)
STDAPI None None.EditStreamClone(PAVISTREAM pavi None,PAVISTREAM * ppResult)
STDAPI None None.EditStreamCopy(PAVISTREAM pavi None,LONG * plStart,LONG * plLength,PAVISTREAM * ppResult)
STDAPI None None.EditStreamCut(PAVISTREAM pavi None,LONG * plStart,LONG * plLength,PAVISTREAM * ppResult)
STDAPI None None.EditStreamPaste(PAVISTREAM pavi None,LONG * plPos,LONG * plLength,PAVISTREAM pstream None,LONG lStart None,LONG lLength None)
STDAPI None ntshrui.CanShareFolderW(_In_ LPCWSTR pszPath)
STDAPI None oleacc.AccessibleChildren(_In_ IAccessible *paccContainer,_In_ LONG iChildStart,_In_ LONG cChildren,_Out_ VARIANT *rgvarChildren,_Out_ LONG *pcObtained)
STDAPI None oleacc.AccessibleObjectFromEvent(_In_ HWND hwnd,_In_ DWORD dwObjectID,_In_ DWORD dwChildID,_Out_ IAccessible **ppacc,_Out_ VARIANT *pvarChild)
STDAPI None oleacc.AccessibleObjectFromPoint(_In_ POINT ptScreen,_Out_ IAccessible **ppacc,_Out_ VARIANT *pvarChild)
STDAPI None propsys.PSCreateMemoryPropertyStoreMarshalByValue(_In_ REFIID riid,_Out_ void **ppv)
STDAPI None shcore.GetScaleFactorForMonitor(_In_ HMONITOR hMon,_Out_ DEVICE_SCALE_FACTOR *pScale)
STDAPI None shcore.RegisterScaleChangeEvent(_In_ HANDLE hEvent,_Out_ DWORD_PTR *pdwCookie)
STDAPI None shcore.RegisterScaleChangeNotifications(_In_ DISPLAY_DEVICE_TYPE displayDevice,_In_ HWND hwndNotify,_In_ UINT uMsgNotify,_Out_ DWORD *pdwCookie)
STDAPI None shcore.RevokeScaleChangeNotifications(_In_ DISPLAY_DEVICE_TYPE displayDevice,_In_ DWORD dwCookie)
STDAPI None shcore.UnregisterScaleChangeEvent(_In_ DWORD_PTR dwCookie)
STDAPI None urlmon.CoInternetParseUrl(LPCWSTR pwzUrl None,PARSEACTION ParseAction None,DWORD dwFlags None,LPWSTR pszResult None,DWORD cchResult None,DWORD *pcchResult None,_Reserved_ DWORD dwReserved)
STDAPI None wsclient.AcquireDeveloperLicense(_In_opt_ HWND hwndParent,_Out_ FILETIME *pExpiration)
STDAPI None wsclient.CheckDeveloperLicense(_Out_ FILETIME *pExpiration)
STDAPI None wsclient.RemoveDeveloperLicense(_In_opt_ HWND hwndParent)
STDMETHODIMP None None.CheckFileSystem(PCWSTR pcwszDrive None)
STDMETHODIMP None None.GetDuration(LONGLONG *pDuration None)
STDMETHODIMP None None.SetDefaultTimerResolution(REFERENCE_TIME timerResolution None)
STDMETHODIMP None None.ShouldShow(IShellFolder *psf None,PCIDLIST_ABSOLUTE pidlFolder None,PCUITEMID_CHILD pidlItem None)
STORPORT_API ULONG None.StorPortInitialize(_In_ PVOID Argument1,_In_ PVOID Argument2,_In_ PHW_INITIALIZATION_DATA HwInitializationData,_In_opt_ PVOID HwContext)
String None None.CreateValidIdentifier(String value None)
string None None.Format(string format None,object arg None,IFormatProvider formatProvider None)
string None None.Format(string format None,Object arg None,IFormatProvider formatProvider None)
String None None.Format(String format None,Object arg None,IFormatProvider formatProvider None)
String None None.GetAttribute(String key None)
String None None.GetListName(PropertyDescriptor[] listAccessors None)
string None None.ToString(IFormatProvider provider None)
string None None.ToString(string format None,IFormatProvider formatProvider None)
String None None.ToString(String format None,IFormatProvider formatProvider None)
Sub None msftedit.AttributeCopy(r1 As ITextRange,r2 As ITextRange)
Sub None msftedit.PrintComments(r As ITextRange)
Sub None msftedit.PrintNumbers(r As ITextRange)
Sub None None.Check_Clicked(sender As Object,e As EventArgs)
Sub None None.comment(strChars As String)
Sub None None.ignorableWhitespace(strChars As String)
Sub None None.Monitor_OnCounterAdded(index None None)
Sub None None.OnWMSEConnect(HR None None,UserCtx None None,PresCtx None None,CmdCtx None None)
Sub None None.SINK_OnObjectReady(objObject None None,objAsyncContext None None)
Sub None None.startEntity(strName As String)
Sub None None.startPrefixMapping(strPrefix As String,strURI As String)
Sub None None.ValidationFunctionName(source None None,arguments None None)
TCHAR None None.Edit_GetPasswordChar(HWND hwndCtl None)
TCHAR None shlwapi.SHStripMneumonicA(_Inout_ LPTSTR *pszMenu)
TCHAR None shlwapi.SHStripMneumonic(_Inout_ LPTSTR *pszMenu)
TCHAR None shlwapi.SHStripMneumonicW(_Inout_ LPTSTR *pszMenu)
terminate_function None None.set_terminate(terminate_function termFunction None)
texcrd None None.r(m None None)
tex None None.t(n None None)
TLS_HANDLE WINAPI mstlsapi.TLSConnectToLsServer(_In_ LPTSTR pszLsServer)
T None None.N(T t None,U u None)
T None None.XMMin([in] T a,[in] T b)
TRACEHANDLE None advapi32.GetTraceLoggerHandle(_In_ PVOID Buffer)
TRACEHANDLE None sechost.OpenTraceA(_Inout_ PEVENT_TRACE_LOGFILE Logfile)
TRACEHANDLE None sechost.OpenTrace(_Inout_ PEVENT_TRACE_LOGFILE Logfile)
TRACEHANDLE None sechost.OpenTraceW(_Inout_ PEVENT_TRACE_LOGFILE Logfile)
TRUSTEE_FORM WINAPI advapi32.GetTrusteeFormA(_In_ PTRUSTEE pTrustee)
TRUSTEE_FORM WINAPI advapi32.GetTrusteeForm(_In_ PTRUSTEE pTrustee)
TRUSTEE_FORM WINAPI advapi32.GetTrusteeFormW(_In_ PTRUSTEE pTrustee)
TRUSTEE_TYPE WINAPI advapi32.GetTrusteeTypeA(_In_opt_ PTRUSTEE pTrustee)
TRUSTEE_TYPE WINAPI advapi32.GetTrusteeType(_In_opt_ PTRUSTEE pTrustee)
TRUSTEE_TYPE WINAPI advapi32.GetTrusteeTypeW(_In_opt_ PTRUSTEE pTrustee)
typedef BOOLEAN None.HW_INITIALIZE(_In_ PVOID DeviceExtension)
typedef BOOLEAN None.HW_INTERRUPT(IN PVOID DeviceExtension)
typedef BOOLEAN None.HW_RESET_BUS(_In_ PVOID DeviceExtension,_In ULONG PathId)
typedef None None.BOOL(CALLBACK *PCRYPT_DECRYPT_PRIVATE_KEY_FUNC None)
typedef None None.BOOL(CALLBACK *PCRYPT_ENCRYPT_PRIVATE_KEY_FUNC None)
typedef None None.BOOL(CALLBACK *PCRYPT_RESOLVE_HCRYPTPROV_FUNC None)
typedef None None.BOOLEAN(*PHW_ADAPTER_STATE None None)
typedef None None.BOOLEAN(*PHW_INITIALIZE None None)
typedef None None.BOOLEAN(*PHW_STARTIO None None)
typedef None None.BOOL(VCAPITYPE *VirtualChannelEntry None)
typedef None None.BOOL(WINAPI *pCryptSIPGetCaps None)
typedef None None.BOOL(WINAPI *PFN_CERT_CREATE_CONTEXT_SORT_FUNC None)
typedef None None.BOOL(WINAPI *PFN_CERT_STORE_PROV_CONTROL None)
typedef None None.BOOL(WINAPI *PFN_CMSG_CNG_IMPORT_CONTENT_ENCRYPT_KEY None)
typedef None None.BOOL(WINAPI *PFN_CMSG_CNG_IMPORT_KEY_AGREE None)
typedef None None.BOOL(WINAPI *PFN_CMSG_CNG_IMPORT_KEY_TRANS None)
typedef None None.BOOL(WINAPI *PFN_CMSG_EXPORT_KEY_AGREE None)
typedef None None.BOOL(WINAPI *PFN_CMSG_EXPORT_KEY_TRANS None)
typedef None None.BOOL(WINAPI *PFN_CMSG_EXPORT_MAIL_LIST None)
typedef None None.BOOL(WINAPI *PFN_CMSG_GEN_CONTENT_ENCRYPT_KEY None)
typedef None None.BOOL(WINAPI *PFN_CMSG_IMPORT_KEY_AGREE None)
typedef None None.BOOL(WINAPI *PFN_CMSG_IMPORT_KEY_TRANS None)
typedef None None.BOOL(WINAPI *PFN_CMSG_IMPORT_MAIL_LIST None)
typedef None None.BOOL(WINAPI *PFN_CRYPT_EXPORT_PUBLIC_KEY_INFO_EX2_FUNC None)
typedef None None.BOOL(WINAPI *PFN_CRYPT_EXTRACT_ENCODED_SIGNATURE_PARAMETERS_FUNC None)
typedef None None.BOOL(WINAPI *PFN_CRYPT_OBJECT_LOCATOR_PROVIDER_FLUSH None)
typedef None None.BOOL(WINAPI *PFN_CRYPT_OBJECT_LOCATOR_PROVIDER_GET None)
typedef None None.BOOL(WINAPI *PFN_CRYPT_OBJECT_LOCATOR_PROVIDER_INITIALIZE None)
typedef None None.BOOL(WINAPI *PFN_CRYPT_SIGN_AND_ENCODE_HASH_FUNC None)
typedef None None.BOOL(WINAPI *PFN_CRYPT_VERIFY_ENCODED_SIGNATURE_FUNC None)
typedef None None.BOOL(WINAPI *PFN_IMPORT_PUBLIC_KEY_INFO_EX2_FUNC None)
typedef None None.BOOL(WINAPI *pfnIsFileSupportedName None)
typedef None None.BOOL(WINAPI *pfnIsFileSupported None)
typedef None None.FLT_POSTOP_CALLBACK_STATUS(*PFLT_POST_OPERATION_CALLBACK None None)
typedef None None.FLT_PREOP_CALLBACK_STATUS(*PFLT_PRE_OPERATION_CALLBACK None None)
typedef None None.HRESULT(CALLBACK *LPFNDFMCALLBACK None)
typedef None None.HRESULT(CALLBACK *LPFNVIEWCALLBACK None)
typedef None None.HRESULT(CALLBACK *PDXVAHDSW_CreateDevice None)
typedef None None.HRESULT(CALLBACK *PDXVAHDSW_CreateVideoProcessor None)
typedef None None.HRESULT(CALLBACK *PDXVAHDSW_DestroyDevice None)
typedef None None.HRESULT(CALLBACK *PDXVAHDSW_DestroyVideoProcessor None)
typedef None None.HRESULT(CALLBACK *PDXVAHDSW_GetVideoProcessBltStatePrivate None)
typedef None None.HRESULT(CALLBACK *PDXVAHDSW_GetVideoProcessorCaps None)
typedef None None.HRESULT(CALLBACK *PDXVAHDSW_GetVideoProcessorCustomRates None)
typedef None None.HRESULT(CALLBACK *PDXVAHDSW_GetVideoProcessorDeviceCaps None)
typedef None None.HRESULT(CALLBACK *PDXVAHDSW_GetVideoProcessorFilterRange None)
typedef None None.HRESULT(CALLBACK *PDXVAHDSW_GetVideoProcessorInputFormats None)
typedef None None.HRESULT(CALLBACK *PDXVAHDSW_GetVideoProcessorOutputFormats None)
typedef None None.HRESULT(CALLBACK *PDXVAHDSW_GetVideoProcessStreamStatePrivate None)
typedef None None.HRESULT(CALLBACK *PDXVAHDSW_Plugin None)
typedef None None.HRESULT(CALLBACK *PDXVAHDSW_ProposeVideoPrivateFormat None)
typedef None None.HRESULT(CALLBACK *PDXVAHDSW_SetVideoProcessBltState None)
typedef None None.HRESULT(CALLBACK *PDXVAHDSW_SetVideoProcessStreamState None)
typedef None None.HRESULT(CALLBACK *PDXVAHDSW_VideoProcessBltHD None)
typedef None None.HRESULT(WINAPI *CryptXmlDllCloseDigest None)
typedef None None.HRESULT(WINAPI *CryptXmlDllCreateDigest None)
typedef None None.HRESULT(WINAPI *CryptXmlDllCreateKey None)
typedef None None.HRESULT(WINAPI *CryptXmlDllDigestData None)
typedef None None.HRESULT(WINAPI *CryptXmlDllEncodeAlgorithm None)
typedef None None.HRESULT(WINAPI *CryptXmlDllEncodeKeyValue None)
typedef None None.HRESULT(WINAPI *CryptXmlDllFinalizeDigest None)
typedef None None.HRESULT(WINAPI *CryptXmlDllGetAlgorithmInfo None)
typedef None None.HRESULT(WINAPI *CryptXmlDllGetInterface None)
typedef None None.HRESULT(WINAPI *CryptXmlDllSignData None)
typedef None None.HRESULT(WINAPI *CryptXmlDllVerifySignature None)
typedef None None.int(CALLBACK *BrowseCallbackProc None)
typedef None None.LRESULT(CALLBACK *SUBCLASSPROC None)
typedef None None.MI_Result(MI_CALL *MI_Deserializer_ClassObjectNeeded None)
typedef None None.NTSTATUS(*PFS_FILTER_CALLBACK None None)
typedef None None.NTSTATUS(USB_BUSIFFN *PUSB_BUSIFFN_QUERY_BUS_TIME None)
typedef None None.SCESTATUS(*PFSCE_FREE_INFO None None)
typedef None None.SCESTATUS(*PFSCE_LOG_INFO None None)
typedef None None.SCESTATUS(*PFSCE_QUERY_INFO None None)
typedef None None.SCESTATUS(*PFSCE_SET_INFO None None)
typedef None None.SERVICE_NOTIFYA(CALLBACK * PFN_SC_NOTIFY_CALLBACK)
typedef None None.SERVICE_NOTIFYW(CALLBACK * PFN_SC_NOTIFY_CALLBACK)
typedef None None.UINT(VCAPITYPE *VirtualChannelClose None)
typedef None None.UINT(VCAPITYPE *VirtualChannelInit None)
typedef None None.UINT(VCAPITYPE *VirtualChannelOpen None)
typedef None None.UINT(VCAPITYPE *VirtualChannelWrite None)
typedef None None.ULONG(_cdecl QUERYFORCONNECTION None)
typedef None None.void(CALLBACK *LPFNInitRoutine None)
typedef None None.void(CALLBACK *PFNASYNCICONTASKBALLBACK None)
typedef None None.VOID(CALLBACK * PFN_SC_NOTIFY_CALLBACK)
typedef None None.void(CALLBACK *WINHTTP_STATUS_CALLBACK None)
typedef None None.VOID(EVT_WDF_REQUEST_COMPLETION_ROUTINE None None)
typedef None None.void(*MFPERIODICCALLBACK None None)
typedef None None.void(MI_CALL *MI_CancelCallback None)
typedef None None.void(MI_CALL *MI_MethodDecl_Invoke None)
typedef None None.void(MI_CALL *MI_Module_Load None)
typedef None None.void(MI_CALL *MI_Module_Unload None)
typedef None None.void(MI_CALL *MI_OperationCallback_Class None)
typedef None None.void(MI_CALL *MI_OperationCallback_Indication None)
typedef None None.void(MI_CALL *MI_OperationCallback_Instance None)
typedef None None.void(MI_CALL *MI_OperationCallback_PromptUser None)
typedef None None.void(MI_CALL *MI_OperationCallback_StreamedParameter None)
typedef None None.void(MI_CALL *MI_OperationCallback_WriteError None)
typedef None None.void(MI_CALL *MI_OperationCallback_WriteMessage None)
typedef None None.void(MI_CALL *MI_OperationCallback_WriteProgress None)
typedef None None.void(MI_CALL *MI_ProviderFT_AssociatorInstances None)
typedef None None.void(MI_CALL *MI_ProviderFT_CreateInstance None)
typedef None None.void(MI_CALL *MI_ProviderFT_DeleteInstance None)
typedef None None.void(MI_CALL *MI_ProviderFT_DisableIndications None)
typedef None None.void(MI_CALL *MI_ProviderFT_EnableIndications None)
typedef None None.void(MI_CALL *MI_ProviderFT_EnumerateInstances None)
typedef None None.void(MI_CALL *MI_ProviderFT_GetInstance None)
typedef None None.void(MI_CALL *MI_ProviderFT_Invoke None)
typedef None None.void(MI_CALL *MI_ProviderFT_Load None)
typedef None None.void(MI_CALL *MI_ProviderFT_ModifyInstance None)
typedef None None.void(MI_CALL *MI_ProviderFT_ReferenceInstances None)
typedef None None.void(MI_CALL *MI_ProviderFT_Subscribe None)
typedef None None.void(MI_CALL *MI_ProviderFT_Unload None)
typedef None None.void(MI_CALL *MI_ProviderFT_Unsubscribe None)
typedef None None.void(*PAPPSTATE_CHANGE_ROUTINE None None)
typedef None None.VOID(*PFLT_COMPLETED_ASYNC_IO_CALLBACK None None)
typedef None None.VOID(*PFLT_INSTANCE_TEARDOWN_CALLBACK None None)
typedef None None.void(*_se_translator_function None None)
typedef None None.VOID(__stdcall *WAITORTIMERCALLBACK None)
typedef None None.void(WINAPI *PFN_CDF_PARSE_ERROR_CALLBACK None)
typedef None None.void(WINAPI *PFN_CRYPT_OBJECT_LOCATOR_PROVIDER_FREE_IDENTIFIER None)
typedef None None.void(WINAPI *PFN_CRYPT_OBJECT_LOCATOR_PROVIDER_FREE None)
typedef None None.void(WINAPI *PFN_CRYPT_OBJECT_LOCATOR_PROVIDER_FREE_PASSWORD None)
typedef None None.void(WINAPI *PFN_CRYPT_OBJECT_LOCATOR_PROVIDER_RELEASE None)
typedef None None.VOID(WINAPI *PlayerPickerUICompletionRoutine None)
typedef None shell32.BOOL(* LPFNADDPROPSHEETPAGE None)
typedef NTSTATUS None.EVT_SERCX_PURGE(__in WDFDEVICE Device,__in ULONG PurgeMask)
typedef union None.switch(DWORD tyspec None)
typedef union None.switch(XPS_COLOR_TYPE colorType None)
typedef VOID iphlpapi.WINAPI(*PIO_APC_ROUTINE None None)
type None None.va_arg(va_list arg_ptr None,type None None)
UCHAR None advapi32.GetTraceEnableLevel(_In_ TRACEHANDLE SessionHandle)
UCHAR None None.EventDescGetChannel([in] PEVENT_DESCRIPTOR EventDescriptor)
UCHAR None None.EventDescGetLevel([in] PEVENT_DESCRIPTOR EventDescriptor)
UCHAR None None.EventDescGetOpcode([in] PEVENT_DESCRIPTOR EventDescriptor)
UCHAR None None.WdfUsbTargetDeviceGetNumInterfaces(_In_ WDFUSBDEVICE UsbDevice)
UInt16 None None.ToUInt16(IFormatProvider provider None)
uint32 None cimwin32.AddPrinterConnection([in] string Name)
uint32 None cimwin32.AddPrinterDriver([in] Win32_PrinterDriver DriverInfo)
uint32 None cimwin32.BinarySDToSDDL([in] uint8 BinarySD[],[out] string SDDL)
uint32 None cimwin32.BinarySDToWin32SD([in] uint8 BinarySD[],[out] __SecurityDescriptor Descriptor)
uint32 None cimwin32.Change([in] string DisplayName,[in] string PathName,[in] uint8 ServiceType,[in] uint8 ErrorControl,[in] string StartMode,[in] boolean DesktopInteract,[in] string StartName,[in] string StartPassword,[in] string LoadOrderGroup,[in] string LoadOrderGroupDependencies[],[in] string ServiceDependencies[])
uint32 None cimwin32.ChangeSecurityPermissionsEx([in] Win32_SecurityDescriptor SecurityDescriptor,[in] uint32 Option,[out] string StopFileName,[in None None,optional] string StartFileName,[in None None,optional] boolean Recursive)
uint32 None cimwin32.ChangeSecurityPermissions([in] Win32_SecurityDescriptor SecurityDescriptor,[in] uint32 Option)
uint32 None cimwin32.CompressEx([out] string StopFileName,[in None None,optional] string StartFileName,[in None None,optional] boolean Recursive)
uint32 None cimwin32.CopyEx([in] string FileName,[out] string StopFileName,[in None None,optional] string StartFileName,[in None None,optional] boolean Recursive)
uint32 None cimwin32.Copy([in] string FileName)
uint32 None cimwin32.Copy(string FileName None)
uint32 None cimwin32.Create([in] string Command,[in] datetime StartTime,[in None None,optional] boolean RunRepeatedly,[in None None,optional] uint32 DaysOfWeek,[in None None,optional] uint32 DaysOfMonth,[in None None,optional] boolean InteractWithDesktop,[out] uint32 JobId)
uint32 None cimwin32.Create([in] string CommandLine,[in] string CurrentDirectory,[in] Win32_ProcessStartup ProcessStartupInformation,[out] uint32 ProcessId)
uint32 None cimwin32.Create([in] string Name,[in] string DisplayName,[in] string PathName,[in] uint8 ServiceType,[in] uint8 ErrorControl,[in] string StartMode,[in] boolean DesktopInteract,[in] string StartName,[in] string StartPassword,[in] string LoadOrderGroup,[in] string LoadOrderGroupDependencies[],[in] string ServiceDependencies[])
uint32 None cimwin32.DeleteEx([out] string StopFileName,[in None None,optional] string StartFileName)
Uint32 None cimwin32.Disable([out] boolean rebootNeeded)
uint32 None cimwin32.EnableDNS([in None None,optional] string DNSHostName,[in None None,optional] string DNSDomain,[in None None,optional] string DNSServerSearchOrder[],[in None None,optional] string DNSDomainSuffixSearchOrder[])
uint32 None cimwin32.EnableIPFilterSec([in] boolean IPFilterSecurityEnabled)
uint32 None cimwin32.EnableIPSec([in] string IPSecPermitTCPPorts[],[in] string IPSecPermitUDPPorts[],[in] string IPSecPermitIPProtocols[])
uint32 None cimwin32.EnableStatic([in] string IPAddress[],[in] string SubnetMask[])
uint32 None cimwin32.EnableWINS([in] boolean DNSEnabledForWINSResolution,[in] boolean WINSEnableLMHostsLookup,[in None None,optional] string WINSHostLookupFile,[in None None,optional] string WINSScopeID)
uint32 None cimwin32.GetAvailableVirtualSize([out] uint64 AvailableVirtualSize)
Uint32 None cimwin32.GetDeviceProperties([in None None,optional] string devicePropertyKeys[],[out] Win32_PnPDeviceProperty deviceProperties[])
uint32 None cimwin32.GetLaunchSecurityDescriptor([out] Win32_SecurityDescriptor Descriptor)
uint32 None cimwin32.GetOwner([out] string User,[out] string Domain)
uint32 None cimwin32.GetOwnerSid([out] string Sid)
uint32 None cimwin32.GetSecurityDescriptor([out] Win32_SecurityDescriptor Descriptor)
uint32 None cimwin32.Rename(string FileName None)
uint32 None cimwin32.ScheduleAutoChk([in] string LogicalDisk[])
uint32 None cimwin32.SDDLToBinarySD([in] string SDDL,[out] uint8 BinarySD[])
uint32 None cimwin32.SDDLToWin32SD([in] string SDDL,[out] __SecurityDescriptor Descriptor)
uint32 None cimwin32.SetAccessSecurityDescriptor([in] Win32_SecurityDescriptor Descriptor)
uint32 None cimwin32.SetArpAlwaysSourceRoute([in] boolean ArpAlwaysSourceRoute)
uint32 None cimwin32.SetArpUseEtherSNAP([in] boolean ArpUseEtherSNAP)
uint32 None cimwin32.SetConfigurationSecurityDescriptor([in] Win32_SecurityDescriptor Descriptor)
uint32 None cimwin32.SetDatabasePath([in] string DatabasePath)
uint32 None cimwin32.SetDeadGWDetect([in] boolean DeadGWDetectEnabled)
uint32 None cimwin32.SetDefaultTOS([in] uint8 DefaultTOS)
uint32 None cimwin32.SetDefaultTTL([in] uint8 DefaultTTL)
uint32 None cimwin32.SetDNSDomain([in] string DNSDomain)
uint32 None cimwin32.SetDNSServerSearchOrder([in] string DNSServerSearchOrder[])
uint32 None cimwin32.SetDNSSuffixSearchOrder([in] string DNSDomainSuffixSearchOrder[])
uint32 None cimwin32.SetDynamicDNSRegistration([in] boolean FullDNSRegistrationEnabled,[in None None,optional] boolean DomainDNSRegistrationEnabled)
uint32 None cimwin32.SetForwardBufferMemory([in] uint32 ForwardBufferMemory)
uint32 None cimwin32.SetGateways([in] string DefaultIPGateway[],[in None None,optional] uint16 GatewayCostMetric[])
uint32 None cimwin32.SetIGMPLevel([in] uint8 IGMPLevel)
uint32 None cimwin32.SetIPConnectionMetric([in] uint32 IPConnectionMetric)
uint32 None cimwin32.SetIPUseZeroBroadcast([in] boolean IPUseZeroBroadcast)
uint32 None cimwin32.SetIPXFrameTypeNetworkPairs([in] string IPXNetworkNumber[],[in] uint32 IPXFrameType[])
uint32 None cimwin32.SetIPXVirtualNetworkNumber([in] string IPXVirtualNetNumber)
uint32 None cimwin32.SetKeepAliveInterval([in] uint32 KeepAliveInterval)
uint32 None cimwin32.SetKeepAliveTime([in] uint32 KeepAliveTime)
uint32 None cimwin32.SetLaunchSecurityDescriptor([in] Win32_SecurityDescriptor Descriptor)
uint32 None cimwin32.SetMTU([in] uint32 MTU)
uint32 None cimwin32.SetNumForwardPackets([in] uint32 NumForwardPackets)
uint32 None cimwin32.SetPMTUBHDetect([in] boolean PMTUBHDetectEnabled)
uint32 None cimwin32.SetPMTUDiscovery([in] boolean PMTUDiscoveryEnabled)
uint32 None cimwin32.SetPowerState([in] uint16 PowerState,[in] datetime Time)
uint32 None cimwin32.SetPriority([in] sint32 Priority)
uint32 None cimwin32.SetSecurityDescriptor([in] Win32_SecurityDescriptor Descriptor)
uint32 None cimwin32.SetShareInfo([in None None,optional] uint32 MaximumAllowed,[in None None,optional] string Description,[in None None,optional] Win32_SecurityDescriptor Access)
uint32 None cimwin32.SetSpeed([in] uint64 DesiredSpeed)
uint32 None cimwin32.SetTcpipNetbios([in] uint32 TcpipNetbiosOptions)
uint32 None cimwin32.SetTcpMaxConnectRetransmissions([in] uint32 TcpMaxConnectRetransmissions)
uint32 None cimwin32.SetTcpMaxDataRetransmissions([in] uint32 TcpMaxDataRetransmissions)
uint32 None cimwin32.SetTcpNumConnections([in] uint32 TcpNumConnections)
uint32 None cimwin32.SetTcpUseRFC1122UrgentPointer([in] boolean TcpUseRFC1122UrgentPointer)
uint32 None cimwin32.SetTcpWindowSize([in] uint16 TcpWindowSize)
uint32 None cimwin32.SetWINSServer([in] string WINSPrimaryServer,[in] string WINSSecondaryServer)
uint32 None cimwin32.TakeOwnerShipEx([out] string StopFileName,[in None None,optional] string StartFileName,[in None None,optional] boolean Recursive)
uint32 None cimwin32.Terminate([in] uint32 Reason)
uint32 None cimwin32.UncompressEx([out] string StopFileName,[in None None,optional] string StartFileName,[in None None,optional] boolean Recursive)
uint32 None cimwin32.UserControlService([in] uint8 ControlCode)
uint32 None cimwin32.Win32SDToBinarySD([in] __SecurityDescriptor Descriptor,[out] uint8 BinarySD[])
uint32 None cimwin32.Win32SDToSDDL([in] __SecurityDescriptor Descriptor,[out] string SDDL)
uint32 None cluswmi.UpdateFunctionalLevel([in] boolean WhatIf)
uint32 None cscobj.DeleteItems([in] string Paths[],[in] uint32 Flags)
uint32 None cscobj.Enable([in] boolean Enable,[out] boolean RebootRequired)
uint32 None cscobj.Encrypt([in] boolean Encrypt,[in] uint32 Flags)
uint32 None cscobj.Pin([in] string Paths[],[in] uint32 Flags,[in] boolean Deep)
uint32 None cscobj.RenameItemEx([in] string OriginalPath,[in] string NewPath,[in] boolean ReplaceIfExists)
uint32 None cscobj.RenameItem([in] string OriginalPath,[in] string NewPath,[in] boolean ReplaceIfExists)
uint32 None cscobj.SuspendRoot([in] string Path,[in] boolean Suspend)
uint32 None cscobj.Synchronize([in] string Paths[],[in] uint32 Flags)
uint32 None cscobj.TransitionOffline([in] string Path,[in] boolean Force,[in] uint32 Flags,[out] boolean OpenFiles)
uint32 None cscobj.TransitionOnline([in] string Path,[in] uint32 Flags)
uint32 None cscobj.Unpin([in] string Paths[],[in] uint32 Flags,[in] boolean Deep)
UINT32 None d2d1.GetPropertyNameLength(UINT32 index None)
uint32 None ddpwmi.Create([in] string Name,[in] uint32 Type,[in] boolean Disable,[in] datetime Start,[in] uint32 DurationHours,[in] sint32 Days[],[in] boolean StopWhenSystemBusy,[in] uint32 Memory,[in] uint32 Cores,[in] uint32 Priority,[in] uint32 InputOutputThrottle,[in] uint32 InputOutputThrottleLevel,[in] boolean Full,[in] boolean ReadOnly,[out] MSFT_DedupJobSchedule DedupJobSchedule)
uint32 None ddpwmi.Disable([in] string Volume[],[in] boolean DataAccess,[out] MSFT_DedupVolume DedupVolume[])
uint32 None ddpwmi.Measure([in] string Path[],[out] MSFT_DedupFileMetadata DedupFileMetadata)
uint32 None ddpwmi.Update([in] string Volume[],[out] MSFT_DedupVolumeStatus DedupVolumeStatus[])
uint32 None dfsrwmiv2.ExportDBClone([in] string Source,[in] string Destination,[in] uint32 ValidationLevel,[in] boolean Overwrite)
uint32 None dfsrwmiv2.Fence([in] uint8 Mode,[in] string FilePath,[in] boolean IsRecursive)
uint32 None dfsrwmiv2.GetFullFilePath([out] string FullPath)
uint32 None dfsrwmiv2.GetOutboundBacklogFileCount([in] string VersionVector,[out] uint32 BacklogFileCount,[out] uint32 IdRecordIndex)
uint32 None dhcpserverpsprovider.AddByHotStandby([in] string ComputerName,[in] string Name,[in] string PartnerServer,[in] string ScopeId[],[in] datetime MaxClientLeadTime,[in] boolean AutoStateTransition,[in] datetime StateSwitchInterval,[in] boolean Force,[in] string SharedSecret,[in] boolean PassThru,[in] uint32 ReservePercent,[in] string ServerRole,[out] DhcpServerv4Failover cmdletOutput)
uint32 None dhcpserverpsprovider.Add([in] string ComputerName,[in] string Name,[in] string StartRange,[in] string EndRange,[in] boolean PassThru,[out] DhcpServerv4MulticastExclusionRange cmdletOutput)
uint32 None dhcpserverpsprovider.Add([in] string ComputerName,[in] string ScopeId,[in] string IPAddress,[in] string ClientId,[in] string Name,[in] string Description,[in] string Type,[in] boolean PassThru,[out] DhcpServerv4Reservation cmdletOutput)
uint32 None dhcpserverpsprovider.GetByBadLeases([in] string ComputerName,[in] boolean BadLeases,[in] string ScopeId,[out] DhcpServerv4Lease cmdletOutput[])
uint32 None dhcpserverpsprovider.GetByIPAddress([in] string ComputerName,[in] string IPAddress[],[out] DhcpServerv6Lease cmdletOutput[])
uint32 None dhcpserverpsprovider.GetByIPAddress([in] string ComputerName,[in] string IPAddress[],[out] DhcpServerv6Reservation cmdletOutput[])
uint32 None dhcpserverpsprovider.GetByIPAddress([in] string IPAddress[],[in] string ComputerName,[out] DhcpServerv4Reservation cmdletOutput[])
uint32 None dhcpserverpsprovider.GetByPrefix([in] string ComputerName,[in] string Prefix,[out] DhcpServerv6Lease cmdletOutput[])
uint32 None dhcpserverpsprovider.Get([in] string ComputerName,[in] string Prefix,[in] string IPAddress,[out] DhcpServerv6DnsSetting cmdletOutput)
uint32 None dhcpserverpsprovider.Get([in] string ComputerName,[in] uint32 OptionId[],[in] string VendorClass,[in] boolean All,[out] DhcpServerv6OptionDefinition cmdletOutput[])
uint32 None dhcpserverpsprovider.Get([in] string ComputerName,[out] DhcpServerv6StatelessStatistics cmdletOutput[])
uint32 None dhcpserverpsprovider.Get([in] string IPAddress,[in] string ScopeId,[in] string ComputerName,[in] string PolicyName,[out] DhcpServerv4DnsSetting cmdletOutput)
uint32 None dhcpserverpsprovider.Get([in] string Prefix[],[in] string ComputerName,[out] DhcpServerv6StatelessStore cmdletOutput[])
uint32 None dhcpserverpsprovider.RemoveByBadLeases([in] boolean PassThru,[in] string ComputerName,[in] boolean BadLeases,[in] string ScopeId,[out] DhcpServerv4Lease cmdletOutput[])
uint32 None dhcpserverpsprovider.RemoveByClientId([in] boolean PassThru,[in] string ComputerName,[in] string ClientId[],[in] string ScopeId,[out] DhcpServerv4Lease cmdletOutput[])
uint32 None dhcpserverpsprovider.RemoveByIPAddress([in] boolean PassThru,[in] string ComputerName,[in] string IPAddress[],[out] DhcpServerv4Lease cmdletOutput[])
uint32 None dhcpserverpsprovider.RemoveByPrefix([in] string ComputerName,[in] boolean PassThru,[in] string Prefix,[out] DhcpServerv6Lease cmdletOutput[])
uint32 None dhcpserverpsprovider.RemoveByScopeId([in] boolean PassThru,[in] string ComputerName,[in] string ScopeId,[out] DhcpServerv4Lease cmdletOutput[])
uint32 None dhcpserverpsprovider.Remove([in] string ComputerName,[in] string Prefix,[in] string ReservedIP,[in] uint32 OptionId[],[in] boolean PassThru,[in] string VendorClass,[in] string UserClass,[out] DhcpServerv6OptionValue cmdletOutput[])
uint32 None dhcpserverpsprovider.Remove([in] string ComputerName,[in] uint32 OptionId[],[in] string VendorClass,[in] boolean Passthru,[out] DhcpServerv4OptionDefinition cmdletOutput[])
uint32 None dhcpserverpsprovider.SetByOptionId([in] boolean PassThru,[in] boolean Force,[in] string Value[],[in] uint32 OptionId,[in] string Prefix,[in] string UserClass,[in] string VendorClass,[in] string ComputerName,[in] string ReservedIP,[out] DhcpServerv6OptionValue cmdletOutput)
uint32 None dhcpserverpsprovider.Set([in] string ComputerName,[in] boolean BindingState,[in] string InterfaceAlias[],[in] boolean PassThru,[out] DhcpServerv6Binding cmdletOutput[])
uint32 None dhcpserverpsprovider.Set([in] string Name,[in] string Type,[in] string Data,[in] string Description,[in] string ComputerName,[in] boolean PassThru,[out] DhcpServerv4Class cmdletOutput)
uint32 None dhcpserverpsprovider.Set([in] string Prefix,[in] boolean Enabled,[in] datetime PurgeInterval,[in] string ComputerName,[in] boolean PassThru,[out] DhcpServerv6StatelessStore cmdletOutput)
uint32 None dmwmibridgeprov.CheckApplicabilityMethod([in] string param)
uint32 None dmwmibridgeprov.GetLicenseFromStoreMethod([in] string param)
uint32 None dmwmibridgeprov.HostedInstallMethod([in] string param)
uint32 None dmwmibridgeprov.RemovePackageMethod([in] string param)
uint32 None dmwmibridgeprov.UpgradeEditionWithLicenseMethod([in] string param)
uint32 None dnsserverpsprovider.AddByAAAA([in] string IPv6Address,[in] string ZoneName,[in] boolean CreatePtr,[in] boolean AgeRecord,[in] datetime TimeToLive,[in] boolean AllowUpdateAny,[in] string ComputerName,[in] string Name,[in] boolean AAAA,[in] boolean PassThru,[in] string ZoneScope,[out] DnsServerResourceRecord cmdletOutput)
uint32 None dnsserverpsprovider.AddByADForwardLookupZone([in] boolean LoadExisting,[in] string MasterServers[],[in] string DirectoryPartitionName,[in] string ComputerName,[in] string ReplicationScope,[in] boolean UseRecursion,[in] string Name,[in] uint32 ForwarderTimeout,[in] boolean PassThru,[out] DnsServerConditionalForwarderZone cmdletOutput)
uint32 None dnsserverpsprovider.AddByADReverseLookupZone([in] string ResponsiblePerson,[in] string DynamicUpdate,[in] boolean LoadExisting,[in] string NetworkID,[in] string ComputerName,[in] string DirectoryPartitionName,[in] string ReplicationScope,[in] boolean PassThru,[out] DnsServerPrimaryZone cmdletOutput[])
uint32 None dnsserverpsprovider.AddByAfsdb([in] uint16 SubType,[in] string ZoneName,[in] string ServerName,[in] datetime TimeToLive,[in] boolean AllowUpdateAny,[in] string Name,[in] string ComputerName,[in] boolean AgeRecord,[in] boolean Afsdb,[in] boolean PassThru,[in] string ZoneScope,[out] DnsServerResourceRecord cmdletOutput)
uint32 None dnsserverpsprovider.AddByA([in] boolean CreatePtr,[in] string IPv4Address,[in] string ZoneName,[in] string Name,[in] datetime TimeToLive,[in] boolean AgeRecord,[in] boolean AllowUpdateAny,[in] boolean A,[in] string ComputerName,[in] boolean PassThru,[in] string ZoneScope,[out] DnsServerResourceRecord cmdletOutput)
uint32 None dnsserverpsprovider.AddByAtma([in] string Address,[in] string AddressType,[in] string ZoneName,[in] datetime TimeToLive,[in] boolean AllowUpdateAny,[in] string Name,[in] string ComputerName,[in] boolean AgeRecord,[in] boolean Atma,[in] boolean PassThru,[in] string ZoneScope,[out] DnsServerResourceRecord cmdletOutput)
uint32 None dnsserverpsprovider.AddByCName([in] string HostNameAlias,[in] string ZoneName,[in] datetime TimeToLive,[in] boolean AllowUpdateAny,[in] string Name,[in] string ComputerName,[in] boolean AgeRecord,[in] boolean CName,[in] boolean PassThru,[in] string ZoneScope,[out] DnsServerResourceRecord cmdletOutput)
uint32 None dnsserverpsprovider.AddByDhcId([in] boolean DhcId,[in] string ZoneName,[in] datetime TimeToLive,[in] boolean AllowUpdateAny,[in] string Name,[in] string ComputerName,[in] boolean AgeRecord,[in] boolean PassThru,[in] string ZoneScope,[in] string DhcpIdentifier,[out] DnsServerResourceRecord cmdletOutput)
uint32 None dnsserverpsprovider.AddByFileForwardLookupZone([in] boolean LoadExisting,[in] string MasterServers[],[in] string ComputerName,[in] boolean UseRecursion,[in] string Name,[in] uint32 ForwarderTimeout,[in] boolean PassThru,[out] DnsServerConditionalForwarderZone cmdletOutput)
uint32 None dnsserverpsprovider.AddByFileForwardLookupZone([in] string ResponsiblePerson,[in] string DynamicUpdate,[in] boolean LoadExisting,[in] string ComputerName,[in] string Name,[in] string ZoneFile,[in] boolean PassThru,[out] DnsServerPrimaryZone cmdletOutput)
uint32 None dnsserverpsprovider.AddByFileReverseLookupZone([in] boolean LoadExisting,[in] string MasterServers[],[in] string NetworkId,[in] string ComputerName,[in] string ZoneFile,[in] boolean PassThru,[out] DnsServerStubZone cmdletOutput[])
uint32 None dnsserverpsprovider.AddByForwardLookupZone([in] boolean LoadExisting,[in] string MasterServers[],[in] string Name,[in] string ZoneFile,[in] string ComputerName,[in] boolean PassThru,[out] DnsServerSecondaryZone cmdletOutput)
uint32 None dnsserverpsprovider.AddByHInfo([in] boolean AllowUpdateAny,[in] string Cpu,[in] string OperatingSystem,[in] string ZoneName,[in] datetime TimeToLive,[in] string Name,[in] string ComputerName,[in] boolean AgeRecord,[in] boolean HInfo,[in] boolean PassThru,[in] string ZoneScope,[out] DnsServerResourceRecord cmdletOutput)
uint32 None dnsserverpsprovider.AddByInputObject([in] boolean PassThru,[in] string ComputerName,[in] DnsServerPolicy InputObject,[in] string ZoneName,[out] DnsServerPolicy cmdletOutput)
uint32 None dnsserverpsprovider.AddByInputObject([in] DnsServerResourceRecord InputObject,[in] string ZoneName,[in] string ComputerName,[in] boolean AllowUpdateAny,[in] boolean PassThru,[in] boolean Force,[in] string ZoneScope,[out] DnsServerResourceRecord cmdletOutput)
uint32 None dnsserverpsprovider.AddByIsdn([in] string IsdnNumber,[in] string IsdnSubAddress,[in] string ZoneName,[in] datetime TimeToLive,[in] boolean AllowUpdateAny,[in] string Name,[in] string ComputerName,[in] boolean AgeRecord,[in] boolean Isdn,[in] boolean PassThru,[in] string ZoneScope,[out] DnsServerResourceRecord cmdletOutput)
uint32 None dnsserverpsprovider.AddByMX([in] string ZoneName,[in] string MailExchange,[in] uint16 Preference,[in] datetime TimeToLive,[in] boolean AgeRecord,[in] boolean AllowUpdateAny,[in] string Name,[in] boolean MX,[in] string ComputerName,[in] boolean PassThru,[in] string ZoneScope,[out] DnsServerResourceRecord cmdletOutput)
uint32 None dnsserverpsprovider.AddByNs([in] string ZoneName,[in] string NameServer,[in] datetime TimeToLive,[in] boolean AllowUpdateAny,[in] string Name,[in] string ComputerName,[in] boolean AgeRecord,[in] boolean NS,[in] boolean PassThru,[in] string ZoneScope,[out] DnsServerResourceRecord cmdletOutput)
uint32 None dnsserverpsprovider.AddByParameters([in] string IPAddress[],[in] string NameServer,[in] string ComputerName,[in] boolean PassThru,[out] DnsServerRootHint cmdletOutput)
uint32 None dnsserverpsprovider.AddByPtr([in] string PtrDomainName,[in] string ZoneName,[in] datetime TimeToLive,[in] boolean AllowUpdateAny,[in] string Name,[in] string ComputerName,[in] boolean AgeRecord,[in] boolean Ptr,[in] boolean PassThru,[in] string ZoneScope,[out] DnsServerResourceRecord cmdletOutput)
uint32 None dnsserverpsprovider.AddByReverseLookupZone([in] boolean LoadExisting,[in] string MasterServers[],[in] string NetworkId,[in] string ZoneFile,[in] string ComputerName,[in] boolean PassThru,[out] DnsServerSecondaryZone cmdletOutput[])
uint32 None dnsserverpsprovider.AddByRt([in] string IntermediateHost,[in] string ZoneName,[in] uint16 Preference,[in] datetime TimeToLive,[in] boolean AllowUpdateAny,[in] string Name,[in] string ComputerName,[in] boolean AgeRecord,[in] boolean RT,[in] boolean PassThru,[in] string ZoneScope,[out] DnsServerResourceRecord cmdletOutput)
uint32 None dnsserverpsprovider.AddByServer([in] string ComputerName,[in] boolean PassThru,[in] string Action,[in] string ClientSubnet,[in] string Condition,[in] string InternetProtocol,[in] boolean Disable,[in] string Name,[in] uint32 ProcessingOrder,[in] string ServerInterfaceIP,[in] string TimeOfDay,[in] string TransportProtocol,[out] DnsServerPolicy cmdletOutput)
uint32 None dnsserverpsprovider.AddBySrv([in] string DomainName,[in] uint16 Priority,[in] uint16 Weight,[in] string ZoneName,[in] uint16 Port,[in] datetime TimeToLive,[in] boolean AllowUpdateAny,[in] string Name,[in] string ComputerName,[in] boolean AgeRecord,[in] boolean Srv,[in] boolean PassThru,[in] string ZoneScope,[out] DnsServerResourceRecord cmdletOutput)
uint32 None dnsserverpsprovider.AddByTLSA([in] string ZoneName,[in] string ComputerName,[in] boolean PassThru,[in] string ZoneScope,[in] boolean TLSA,[in] string CertificateUsage,[in] string MatchingType,[in] string Selector,[in] string CertificateAssociationData,[in] string Name,[in] boolean AgeRecord,[in] boolean AllowUpdateAny,[in] datetime TimeToLive,[out] DnsServerResourceRecord cmdletOutput)
uint32 None dnsserverpsprovider.AddByTxt([in] string DescriptiveText,[in] datetime TimeToLive,[in] string ZoneName,[in] boolean AllowUpdateAny,[in] string Name,[in] string ComputerName,[in] boolean AgeRecord,[in] boolean Txt,[in] boolean PassThru,[in] string ZoneScope,[out] DnsServerResourceRecord cmdletOutput)
uint32 None dnsserverpsprovider.AddByType([in] string ComputerName,[in] string Type,[in] boolean PassThru,[out] DnsServerDirectoryPartition cmdletOutput)
uint32 None dnsserverpsprovider.AddByUnknown([in] string ZoneName,[in] string ComputerName,[in] boolean PassThru,[in] string ZoneScope,[in] uint16 Type,[in] string RecordData,[in] boolean AgeRecord,[in] boolean AllowUpdateAny,[in] datetime TimeToLive,[in] string Name,[out] DnsServerResourceRecord cmdletOutput)
uint32 None dnsserverpsprovider.AddByWinsR([in] datetime LookupTimeout,[in] string ResultDomain,[in] string ZoneName,[in] boolean Replicate,[in] string ComputerName,[in] datetime CacheTimeout,[in] boolean PassThru,[in] boolean Force,[in] boolean WinsR,[in] string ZoneScope,[out] DnsServerResourceRecord cmdletOutput)
uint32 None dnsserverpsprovider.AddByX25([in] string PsdnAddress,[in] string ZoneName,[in] datetime TimeToLive,[in] boolean X25,[in] boolean AllowUpdateAny,[in] string Name,[in] string ComputerName,[in] boolean AgeRecord,[in] boolean PassThru,[in] string ZoneScope,[out] DnsServerResourceRecord cmdletOutput)
uint32 None dnsserverpsprovider.AddByZone([in] boolean PassThru,[in] string ComputerName,[in] string ZoneName,[in] string ZoneScope,[in] string Action,[in] string ClientSubnet,[in] string Condition,[in] string Fqdn,[in] string TimeOfDay,[in] string TransportProtocol,[in] string InternetProtocol,[in] boolean Disable,[in] string Name,[in] uint32 ProcessingOrder,[in] string QType,[in] string ServerInterfaceIP,[out] DnsServerPolicy cmdletOutput)
uint32 None dnsserverpsprovider.AddByZone([in] string ComputerName,[in] boolean PassThru,[in] string TransportProtocol,[in] string TimeOfDay,[in] string ServerInterfaceIP,[in] uint32 ProcessingOrder,[in] string ClientSubnet,[in] boolean Disable,[in] string InternetProtocol,[in] string Name,[in] string Condition,[in] string ZoneName,[in] string Action,[out] DnsServerPolicy cmdletOutput)
uint32 None dnsserverpsprovider.Add([in] string Name,[in] string Forwarder[],[in] boolean EnableRecursion,[in] boolean PassThru,[in] string ComputerName,[out] DnsServerRecursionScope cmdletOutput)
uint32 None dnsserverpsprovider.ClearByZoneStatistics([in] boolean Force,[in] string ZoneName[],[in] string ComputerName)
uint32 None dnsserverpsprovider.ConvertTo([in] string ZoneFile,[in] string MasterServers[],[in] string Name,[in] string ComputerName,[in] boolean PassThru,[in] boolean Force,[out] DnsServerSecondaryZone cmdletOutput)
uint32 None dnsserverpsprovider.Enable([in] string Level,[in] string Name,[in] string ComputerName,[in] string ZoneName,[in] boolean Force)
uint32 None dnsserverpsprovider.GetByAll([in] boolean All,[in] string ComputerName,[out] DnsServerSetting cmdletOutput)
uint32 None dnsserverpsprovider.GetByName([in] string Name,[in] string ComputerName,[out] DnsServerDirectoryPartition cmdletOutput)
uint32 None dnsserverpsprovider.GetByServer([in] string Name,[in] string ComputerName,[out] DnsServerPolicy cmdletOutput[])
uint32 None dnsserverpsprovider.GetByUnknown([in] string Name,[in] string ComputerName,[in] string ZoneName,[in] boolean Node,[in] string ZoneScope,[in] uint16 Type,[out] DnsServerResourceRecord cmdletOutput[])
uint32 None dnsserverpsprovider.GetByZone([in] string Name,[in] string ComputerName,[in] string ZoneName,[out] DnsServerPolicy cmdletOutput[])
uint32 None dnsserverpsprovider.Get([in] string ComputerName,[in] string Name,[out] DnsServerResponseRateLimitingExceptionlist cmdletOutput[])
uint32 None dnsserverpsprovider.Get([in] string ComputerName,[in] string Name,[out] DnsServerTrustAnchor cmdletOutput[])
uint32 None dnsserverpsprovider.Get([in] string ComputerName,[out] DnsServer cmdletOutput)
uint32 None dnsserverpsprovider.Get([in] string ComputerName,[out] DnsServerGlobalQueryBlockList cmdletOutput)
uint32 None dnsserverpsprovider.Get([in] string ComputerName,[out] DnsServerStatistics cmdletOutput)
uint32 None dnsserverpsprovider.Get([in] string Name,[in] string ComputerName,[in] string ZoneName,[in] boolean Node,[in] string ZoneScope,[in] string RRType,[out] DnsServerResourceRecord cmdletOutput[])
uint32 None dnsserverpsprovider.Get([in] string Name,[in] string ComputerName,[out] DnsServerRecursionScope cmdletOutput[])
uint32 None dnsserverpsprovider.ImportByDSSet([in] string ComputerName,[in] string DSSetFile,[in] boolean PassThru,[out] DnsServerTrustAnchor cmdletOutput[])
uint32 None dnsserverpsprovider.Invoke([in] string ZoneName,[in] string KeyId[],[in] string ComputerName,[in] boolean Force,[in] boolean PassThru,[out] DnsServerSigningKey cmdletOutput[])
uint32 None dnsserverpsprovider.RemoveByInputObject([in] DnsServerResourceRecord InputObject,[in] string ZoneName,[in] boolean PassThru,[in] string ComputerName,[in] boolean Force,[in] string ZoneScope,[out] DnsServerResourceRecord cmdletOutput)
uint32 None dnsserverpsprovider.RemoveByInputObject([in] string ComputerName,[in] boolean PassThru,[in] boolean Force,[in] DnsServerZoneDelegation InputObject,[in] string ZoneScope,[out] DnsServerZoneDelegation cmdletOutput)
uint32 None dnsserverpsprovider.RemoveByName([in] string ZoneName,[in] boolean PassThru,[in] string ComputerName,[in] boolean Force,[in] string ZoneScope,[in] string RRType,[in] string RecordData[],[in] string Name,[out] DnsServerResourceRecord cmdletOutput[])
uint32 None dnsserverpsprovider.RemoveByServer([in] boolean Force,[in] string ComputerName,[in] boolean PassThru,[in] string Name,[out] DnsServerPolicy cmdletOutput)
uint32 None dnsserverpsprovider.RemoveByServer([in] boolean PassThru,[in] string Name,[in] string ComputerName,[in] boolean Force,[out] DnsServerPolicy cmdletOutput)
uint32 None dnsserverpsprovider.RemoveByUnknown([in] string ZoneName,[in] boolean PassThru,[in] string ComputerName,[in] boolean Force,[in] string ZoneScope,[in] uint16 Type,[in] string Name,[in] string RecordData[],[out] DnsServerResourceRecord cmdletOutput[])
uint32 None dnsserverpsprovider.RemoveByZone([in] boolean PassThru,[in] string Name,[in] string ComputerName,[in] boolean Force,[in] string ZoneName,[out] DnsServerPolicy cmdletOutput)
uint32 None dnsserverpsprovider.Remove([in] string ComputerName,[in] boolean Force,[in] string Name,[in] boolean PassThru,[out] DnsServerResponseRateLimitingExceptionlist cmdletOutput)
uint32 None dnsserverpsprovider.Remove([in] string IPAddress[],[in] string ComputerName,[in] boolean PassThru,[in] boolean Force,[out] DnsServerForwarder cmdletOutput)
uint32 None dnsserverpsprovider.Remove([in] string Name,[in] boolean PassThru,[in] boolean Force,[in] string ComputerName,[out] DnsServerClientSubnet cmdletOutput)
uint32 None dnsserverpsprovider.Remove([in] string Name,[in] string ComputerName,[in] boolean PassThru,[in] boolean Force,[out] DnsServerZone cmdletOutput)
uint32 None dnsserverpsprovider.SetByADZone([in] string DirectoryPartitionName,[in] string Name,[in] string ComputerName,[in] string ReplicationScope,[in] boolean PassThru,[out] DnsServerStubZone cmdletOutput)
uint32 None dnsserverpsprovider.SetByInputObject([in] boolean PassThru,[in] string ComputerName,[in] DnsServerPolicy InputObject,[in] string ZoneName,[out] DnsServerPolicy cmdletOutput)
uint32 None dnsserverpsprovider.SetByLogLevel([in] uint32 DebugLogging,[in] uint32 OperationLogLevel2,[in] uint32 OperationLogLevel1,[in] string ComputerName,[in] boolean PassThru,[out] DnsServerDiagnostics cmdletOutput)
uint32 None dnsserverpsprovider.SetByServer([in] boolean PassThru,[in] string ComputerName,[in] string ClientSubnet,[in] string Condition,[in] string InternetProtocol,[in] string Name,[in] uint32 ProcessingOrder,[in] string ServerInterfaceIP,[in] string TimeOfDay,[in] string TransportProtocol,[out] DnsServerPolicy cmdletOutput)
uint32 None dnsserverpsprovider.SetByServer([in] boolean PassThru,[in] string ComputerName,[in] string Name,[in] string TransportProtocol,[in] string TimeOfDay,[in] string RecursionScope,[in] string ServerInterfaceIP,[in] string QType,[in] uint32 ProcessingOrder,[in] string ClientSubnet,[in] string Condition,[in] string InternetProtocol,[in] string Fqdn,[out] DnsServerPolicy cmdletOutput)
uint32 None dnsserverpsprovider.SetByZone([in] boolean PassThru,[in] string ComputerName,[in] string Name,[in] string ZoneName,[in] string ClientSubnet,[in] string InternetProtocol,[in] string TimeOfDay,[in] string TransportProtocol,[in] uint32 ProcessingOrder,[in] string ServerInterfaceIP,[in] string Condition,[out] DnsServerPolicy cmdletOutput)
uint32 None dnsserverpsprovider.SetByZone([in] boolean PassThru,[in] string ComputerName,[in] string ZoneScope,[in] string ZoneName,[in] string ClientSubnet,[in] string Condition,[in] string Fqdn,[in] string InternetProtocol,[in] string Name,[in] uint32 ProcessingOrder,[in] string QType,[in] string ServerInterfaceIP,[in] string TimeOfDay,[in] string TransportProtocol,[out] DnsServerPolicy cmdletOutput)
uint32 None dnsserverpsprovider.Set([in] boolean Enable,[in] string List[],[in] string ComputerName,[in] boolean PassThru,[out] DnsServerGlobalQueryBlockList cmdletOutput)
uint32 None dnsserverpsprovider.Set([in] string ClientSubnet,[in] string Fqdn,[in] string ServerInterfaceIP,[in] string Name,[in] string Condition,[in] boolean PassThru,[in] string ComputerName,[out] DnsServerResponseRateLimitingExceptionlist cmdletOutput)
uint32 None dnsserverpsprovider.Set([in] string ComputerName,[in] string ZoneName,[in] string NodeName,[in] boolean Recurse,[in] boolean Force)
uint32 None dnsserverpsprovider.Update([in] boolean Force,[in] string ComputerName)
uint32 None eventtracingmanagement.Send([in] string destinationFolder,[in] boolean deleteFile,[out] string sourceFilePath,[out] uint32 ErrorCode)
uint32 None ipmiprv.EnableDevice([in] boolean Enabled)
uint32 None ipmiprv.OnlineDevice([in] boolean Online)
uint32 None ipmiprv.RequestStateChange([in] uint16 RequestedState,[out] CIM_ConcreteJob Job,[in] datetime TimeoutPeriod)
uint32 None ipmiprv.SetPowerState([in] uint16 PowerState,[in] datetime Time)
uint32 None licwmi.SetProxySetting([in] string ProxyAddress,[in] string ProxyPortNumber)
uint32 None mgmtprovider.GetCounterSamplesAtTime([in] string CollectorName,[in] string CounterPaths[],[in] datetime Timestamps[],[in] uint32 BatchSize,[out] MSFT_ServerPerformanceCounterSamples cmdletOutput[])
uint32 None mgmtprovider.GetServerEventDetailEx([in] string FilterXml,[in] uint64 Skip,[in] uint64 Top,[in] boolean ReverseDirection,[in] uint32 BatchSize,[out] MSFT_ServerEventDetail cmdletOutput[])
uint32 None mgmtprovider.GetServerInventory([in] string SMServerId,[out] MSFT_ServerInventory ServerInventory,[out] MSFT_ServerOperatingSystem OperatingSystem,[out] MSFT_ServerClusterInformation ClusterInformation,[out] MSFT_ServerNetworkAdapter NetworkAdapters[],[out] MSFT_ServerEventLog EventLogs[])
uint32 None mgmtprovider.GetServerServiceDetail([in] string Services[],[in] uint32 BatchSize,[out] MSFT_ServerServiceDetail cmdletOutput[])
uint32 None mgmtprovider.RemoveServerPerformanceLog([in] string CollectorName,[in] uint64 MillisecondThreshold)
uint32 None msdtcwmi.SetByComPlusSet([in] string Name,[in] string ComPlusAppId,[in] string ClusterResourceName,[in] boolean Local)
uint32 None msiprov.Upgrade([in] string PackageLocation,[in] string Options)
uint32 None mspsservice.KillJob([in] boolean DeleteOnKill)
uint32 None mttmprov.GetEventRecords([in] string FilterXml,[in] uint64 Skip,[in] uint64 Top,[in] boolean ReverseDirection,[in] uint32 BatchSize,[out] MSFT_MTEventRecord Result[])
uint32 None mttmprov.GetWindowsEventChannels([out] MSFT_MTEventChannel Result[])
uint32 None mttmprov.SetInterval([in] uint16 Seconds)
uint32 None ncserverpsprovider.Configure([in] NetworkControllerClusterConfiguration ClusterConfiguration,[in] NetworkControllerApplicationConfiguration ApplicationConfiguration,[in] uint32 InitialReplicaSize)
uint32 None ncserverpsprovider.GetRunningManifestVersion([out] string RunningManifestVersion)
uint32 None ncserverpsprovider.InstallUpdates([in] string UpdateIds,[out] string AllUpdateIds)
uint32 None ncserverpsprovider.LogEvent([in] uint32 EventId,[in] NetworkControllerClusterConfiguration OldClusterConfiguration,[in] NetworkControllerClusterConfiguration NewClusterConfiguration,[in] NetworkControllerApplicationConfiguration OldApplicationConfiguration,[in] NetworkControllerApplicationConfiguration NewApplicationConfiguration)
uint32 None ncserverpsprovider.UpdateNodeConfiguration([in] NetworkControllerClusterConfiguration ClusterConfiguration)
uint32 None ncserverpsprovider.Validate([in] string NodeName,[in] NetworkControllerClusterConfiguration ClusterConfiguration,[in] NetworkControllerApplicationConfiguration ApplicationConfiguration)
uint32 None netadaptercim.Disable([in] boolean IPv4,[in] boolean IPv6,[out] string cmdletOutput)
uint32 None netadaptercim.Disable([out] string cmdletOutput)
uint32 None netadaptercim.Enable([out] string cmdletOutput)
uint32 None netpeerdistcim.Add_BCDataCacheExtensionByPercentage([in] uint32 Percentage,[in] string Path,[in] boolean PassThru,[in] boolean Force,[out] string cmdletOutput)
uint32 None netpeerdistcim.Add_BCDataCacheExtensionBySizeBytes([in] uint64 SizeBytes,[in] string Path,[in] boolean PassThru,[in] boolean Force,[out] MSFT_NetBranchCacheDataCacheExtension cmdletOutput)
uint32 None netpeerdistcim.Clear_BCCache([in] boolean Force)
uint32 None netpeerdistcim.Disable_BCDowngrading([in] string PolicyStore,[in] boolean Force)
uint32 None netpeerdistcim.Disable_BC([in] string PolicyStore,[in] boolean Force)
uint32 None netpeerdistcim.Disable_BCServeOnBattery([in] boolean Force)
uint32 None netpeerdistcim.Enable_BCDistributed([in] string PolicyStore,[in] boolean Force)
uint32 None netpeerdistcim.Enable_BCDowngrading([in] uint32 Version,[in] string PolicyStore,[in] boolean Force)
uint32 None netpeerdistcim.Enable_BCHostedClientByServerNames([in] string ServerNames[],[in] uint32 UseVersion,[in] string PolicyStore,[in] boolean Force)
uint32 None netpeerdistcim.Enable_BCHostedClientByUseSCP([in] boolean UseSCP,[in] string PolicyStore,[in] boolean Force)
uint32 None netpeerdistcim.Enable_BCHostedServer([in] boolean RegisterSCP,[in] boolean Force)
uint32 None netpeerdistcim.Enable_BCLocal([in] string PolicyStore,[in] boolean Force)
uint32 None netpeerdistcim.Enable_BCServeOnBattery([in] boolean Force)
uint32 None netpeerdistcim.Export_BCCachePackageByExportDataCache([in] boolean ExportDataCache,[in] string Destination,[in] boolean Force)
uint32 None netpeerdistcim.Export_BCSecretKey([in] string Filename,[in] string FilePassphrase,[in] boolean Force)
uint32 None netpeerdistcim.Import_BCCachePackage([in] string Path,[in] boolean Force)
uint32 None netpeerdistcim.Import_BCSecretKey([in] string Filename,[in] string FilePassphrase,[in] boolean Force)
uint32 None netpeerdistcim.Remove_BCDataCacheExtensionByDataCacheExtension([in] string DataCacheExtension[],[in] boolean Force)
uint32 None netpeerdistcim.Remove_BCDataCacheExtensionByPath([in] string Path,[in] boolean Force)
uint32 None netpeerdistcim.Reset_BC([in] boolean ResetFWRulesOnly,[in] boolean ResetPerfCountersOnly,[in] boolean Force)
uint32 None netpeerdistcim.Set_BCAuthentication([in] uint32 Mode,[in] boolean Force)
uint32 None netpeerdistcim.Set_BCCacheByCache([in] string Cache[],[in] string MoveTo,[in] uint32 Percentage,[in] uint64 SizeBytes,[in] boolean Defragment,[in] string PolicyStore,[in] boolean PassThru,[in] boolean Force,[out] MSFT_NetBranchCacheCache cmdletOutput[])
uint32 None netpeerdistcim.Set_BCCacheByPath([in] string Path,[in] string MoveTo,[in] uint32 Percentage,[in] uint64 SizeBytes,[in] boolean Defragment,[in] string PolicyStore,[in] boolean PassThru,[in] boolean Force,[out] MSFT_NetBranchCacheCache cmdletOutput)
uint32 None netpeerdistcim.Set_BCDataCacheEntryMaxAge([in] uint32 TimeDays,[in] string PolicyStore,[in] boolean Force)
uint32 None netpeerdistcim.Set_BCSecretKey([in] string Passphrase,[in] boolean Force)
uint32 None nettcpip.Create([in] string Prefix,[in] uint32 Precedence,[in] uint32 Label,[in] string PolicyStore,[in] boolean PassThru,[out] MSFT_NetPrefixPolicy CmdletOutput[])
uint32 None nettcpip.Create([in] uint32 InterfaceIndex,[in] string InterfaceAlias,[in] string DestinationPrefix,[in] string NextHop,[in] uint8 Publish,[in] uint16 RouteMetric,[in] uint16 Protocol,[in] datetime ValidLifetime,[in] datetime PreferredLifetime,[in] string PolicyStore,[in] uint16 AddressFamily,[in] boolean PassThru,[out] MSFT_NetRoute CmdletOutput[])
uint32 None nettcpip.OnlineDevice([in] boolean Online)
uint32 None nettcpip.RequestStateChange([in] uint16 RequestedState,[out] CIM_ConcreteJob Job,[in] datetime TimeoutPeriod)
uint32 None nettcpip.SetPowerState([in] uint16 PowerState,[in] datetime Time)
uint32 None netttcim.Disable([in] boolean PassThru,[out] MSFT_NetNatTransitionConfiguration OutputObject)
UInt32 None None.Attach([in] String StorageNodeName,[out] String ExtendedStatus)
uint32 None None.ChangeOwnerAuth([in] string OldOwnerAuth,[in] string NewOwnerAuth)
uint32 None None.ChangePIN([in] string VolumeKeyProtectorID,[in] string NewPIN)
UInt32 None None.Clear([in] Boolean RemoveData,[in] Boolean RemoveOEM,[in] Boolean ZeroOutEntireDisk,[out] String ExtendedStatus)
UInt32 None None.CreatePartition([in] UInt64 Size,[in] Boolean UseMaximumSize,[in] UInt64 Offset,[in] UInt32 Alignment,[in] Char16 DriveLetter,[in] Boolean AssignDriveLetter,[in] UInt16 MbrType,[in] String GptType,[in] Boolean IsHidden,[in] Boolean IsActive,[out] String CreatedPartition,[out] String ExtendedStatus)
uint32 None None.DeleteKeyProtector([in] string VolumeKeyProtectorID)
UInt32 None None.Detach([in] String StorageNodeName,[out] String ExtendedStatus)
uint32 None None.DisableKeyProtectors([in None None,optional] uint32 DisableCount)
uint32 None None.EnableAutoUnlock([in] string VolumeKeyProtectorID)
uint32 None None.EnableDevice([in] boolean Enabled)
uint32 None None.EncryptAfterHardwareTest([in None None,optional] uint32 EncryptionMethod,[in None None,optional] uint32 EncryptionFlags)
uint32 None None.Encrypt([in None None,optional] uint32 EncryptionMethod,[in None None,optional] uint32 EncryptionFlags)
uint32 None None.FindValidCertificates([out] string CertificateThumbprint[])
UInt32 None None.Format([in] String FileSystem,[in] String FileSystemLabel,[in] UInt32 AllocationUnitSize,[in] Boolean Full,[in] Boolean Force,[in] Boolean Compress,[in] Boolean ShortFileNameSupport,[in] Boolean SetIntegrityStreams,[in] Boolean UseLargeFRS,[in] Boolean DisableHeatGathering,[out] String FormattedVolume,[out] String ExtendedStatus)
uint32 None None.GenerateWwpn([in] uint32 NumberOfWwpns,[out] string GeneratedWwpn[])
UInt32 None None.GetAttributes([out] Boolean VolumeScrubEnabled)
UInt32 None None.GetDedupProperties([out] String DedupProperties,[out] String ExtendedStatus)
uint32 None None.GetErrorEx([out] string Errors[])
uint32 None None.GetError([out] string Error)
uint32 None None.GetExternalKeyFileName([in] string VolumeKeyProtectorID,[out] string FileName)
uint32 None None.GetExternalKeyFromFile([in] string PathWithFileName,[out] uint8 ExternalKey[])
uint32 None None.GetHardwareEncryptionStatus([out] uint32 HardwareEncryptionStatus)
uint32 None None.GetIdentificationField([out] string IdentificationField)
uint32 None None.GetKeyPackage([in] string VolumeKeyProtectorID,[out] uint8 KeyPackage[])
uint32 None None.GetKeyProtectorCertificate([in] string VolumeKeyProtectorID,[out] string SidString,[out] uint32 Flags)
uint32 None None.GetKeyProtectorCertificate([in] string VolumeKeyProtectorID,[out] uint8 PublicKey[],[out] string CertThumbprint,[out] uint32 CertType)
uint32 None None.GetKeyProtectorExternalKey([in] string VolumeKeyProtectorID,[out] uint8 ExternalKey[])
uint32 None None.GetKeyProtectorFriendlyName([in] string VolumeKeyProtectorID,[out] string FriendlyName)
uint32 None None.GetKeyProtectorNumericalPassword([in] string VolumeKeyProtectorID,[out] string NumericalPassword)
uint32 None None.GetKeyProtectorType([in] string VolumeKeyProtectorID,[out] uint32 KeyProtectorType)
uint32 None None.GetLockStatus([out] uint32 LockStatus)
uint32 None None.GetProtectionStatus([out] uint32 ProtectionStatus)
uint32 None None.GetSecurityDescriptor([out] __SystemSecurity Descriptor)
UInt32 None None.GetSupportedClusterSizes([in] String FileSystem,[out] UInt32 SupportedClusterSizes[],[out] String ExtendedStatus)
UInt32 None None.GetSupportedFileSystems([out] String SupportedFileSystems[],[out] String ExtendedStatus)
uint32 None None.GetSuspendCount(uint32 SuspendCount None)
UInt32 None None.GrantAccess([in] String AccountNames[],[in] UInt32 AccessRight,[out] String ExtendedStatus)
UInt32 None None.Initialize([in] UInt16 PartitionStyle,[out] String ExtendedStatus)
uint32 None None.IsAutoUnlockEnabled([out] boolean IsAutoUnlockEnabled,[out] string VolumeKeyProtectorID)
uint32 None None.IsAutoUnlockKeyStored([out] boolean IsAutoUnlockKeyStored)
uint32 None None.IsKeyProtectorAvailable([in None None,optional] uint32 KeyProtectorType,[out] boolean IsKeyProtectorAvailable)
uint32 None None.KillJob([in] boolean DeleteOnKill)
uint32 None None.Lock([in None None,optional] boolean ForceDismount)
uint32 None None.LockMedia([in] boolean Lock)
UINT32 None None.MFGetAttributeUINT32(_In_ IMFAttributes *pAttributes,_In_ REFGUID guidKey,_In_ UINT32 unDefault)
UInt32 None None.Offline([out] String ExtendedStatus)
uint32 None None.OnlineDevice([in] boolean Online)
uint32 None None.ProtectKeyWithCertificateFile([in None None,optional] string FriendlyName,[in] string FileName,[out] string VolumeKeyProtectorID)
uint32 None None.ProtectKeyWithCertificateThumbprint([in None None,optional] string FriendlyName,[in] string CertThumbprint,[out] string VolumeKeyProtectorID)
uint32 None None.ProtectKeyWithExternalKey([in None None,optional] string FriendlyName,[in None None,optional] uint8 ExternalKey[],[out] string VolumeKeyProtectorID)
uint32 None None.ProtectKeyWithNumericalPassword([in None None,optional] string FriendlyName,[in None None,optional] string NumericalPassword,[out] string VolumeKeyProtectorID)
uint32 None None.ProtectKeyWithTPMAndPINAndStartupKey([in None None,optional] string FriendlyName,[in None None,optional] uint8 PlatformValidationProfile,[in] string PIN,[in None None,optional] uint8 ExternalKey[],[out] string VolumeKeyProtectorID)
uint32 None None.ProtectKeyWithTPMAndPIN([in None None,optional] string FriendlyName,[in None None,optional] uint8 PlatformValidationProfile[],[in] string PIN,[out] string VolumeKeyProtectorID)
uint32 None None.ProtectKeyWithTPMAndStartupKey([in None None,optional] string FriendlyName,[in None None,optional] uint8 PlatformValidationProfile[],[in None None,optional] uint8 ExternalKey[],[out] string VolumeKeyProtectorID)
uint32 None None.ProtectKeyWithTPM([in None None,optional] string FriendlyName,[in None None,optional] uint8 PlatformValidationProfile[],[out] string VolumeKeyProtectorID)
uint32 None None.QuiesceDevice([in] boolean Quiesce)
UInt32 None None.Refresh([out] String ExtendedStatus)
uint32 None None.RemoveConnection([in] string UniqueConnectionId)
uint32 None None.RequestStateChange([in] uint16 RequestedState,[in] datetime TimeoutPeriod)
uint32 None None.SaveExternalKeyToFile([in] string VolumeKeyProtectorID,[in] string Path)
uint32 None None.SendScsiReadCapacity([in] uint64 Lun,[out] uint8 ScsiStatus,[out] uint8 ResponseBuffer[],[out] uint8 SenseBuffer[])
uint32 None None.SendScsiReportLuns([out] uint8 ScsiStatus,[out] uint8 ResponseBuffer[],[out] uint8 SenseBuffer[])
UInt32 None None.SetAttributes([in] Boolean EnableVolumeScrub,[out] String ExtendedStatus)
UInt32 None None.SetAttributes([in] Boolean IsManualAttach,[in] UInt16 Access,[out] String ExtendedStatus)
uint32 None None.SetCHAPSecret([in] string ChapSecret)
UInt32 None None.SetDedupMode([in] UInt32 SetDedupMode,[out] String ExtendedStatus)
UInt32 None None.SetFriendlyName([in] String FriendlyName,[out] String ExtendedStatus)
uint32 None None.SetIdentificationField([in None None,optional] string IdentificationField)
UInt32 None None.Set([in] String FileName,[in] Boolean Enable,[in] Boolean Enforce,[out] String ExtendedStatus)
uint32 None None.SetPowerState([in] uint16 PowerState,[in] datetime Time)
uint32 None None.SetSecurityDescriptor([in] __SecurityDescriptor Descriptor)
UInt32 None None.SetUsage([in] UInt16 Usage,[in] String OtherUsageDescription,[out] String ExtendedStatus)
UInt32 None None.SetUsage([in] UInt16 Usage,[out] String ExtendedStatus)
UInt32 None None.SetWriteCache([in] Boolean WriteCacheEnabled,[out] String ExtendedStatus)
UInt32 None None.StartDiagnosticLog([in] UInt16 Level,[in] UInt64 MaxLogSize,[out] String ExtendedStatus)
UInt32 None None.ToUInt32(IFormatProvider provider None)
uint32 None None.UnlockWithAdSid([in] string SidString)
uint32 None None.UnlockWithCertificateFile([in] string FileName,[in] string PIN)
uint32 None None.UnlockWithCertificateThumbprint([in] string CertThumbprint,[in] string PIN)
uint32 None None.UnlockWithExternalKey([in] uint8 ExternalKey[])
uint32 None None.UnlockWithNumericalPassword([in] string NumericalPassword)
uint32 None None.UnlockWithPassphrase([in] string Passphrase)
uint32 None ntevt.ChangeSecurityPermissionsEx([in] Win32_SecurityDescriptor SecurityDescriptor,[in] uint32 Option,[out] string StopFileName,[in None None,optional] string StartFileName,[in None None,optional] boolean Recursive)
uint32 None ramgmtpsprovider.AddByClientDownlevelSGGpo([in] string DownlevelSecurityGroupNameList[],[in] string DownlevelGpoName[],[in] string ComputerName,[in] string EntrypointName,[in] boolean PassThru,[out] DAClient cmdletOutput)
uint32 None ramgmtpsprovider.AddByClientSGGpo([in] string SecurityGroupNameList[],[in] string GpoName[],[in] string ComputerName,[in] boolean PassThru,[out] DAClient cmdletOutput)
uint32 None ramgmtpsprovider.AddByEncryptionType([in] string Name,[in] string Protocol,[in] string Destination[],[in] boolean AdminStatus,[in] boolean PromoteAlternate,[in] string AuthenticationMethod,[in] string PostConnectionIPv4Subnet[],[in] string PostConnectionIPv6Subnet[],[in] boolean InitiateConfigPayload,[in] string RadiusAttributeClass,[in] uint32 EnableQoS,[in] uint64 TxBandwidthKbps,[in] uint64 RxBandwidthKbps,[in] string IPv4TriggerFilter[],[in] string IPv6TriggerFilter[],[in] boolean Persistent,[in] uint32 IPv4TriggerFilterAction,[in] uint32 IPv6TriggerFilterAction,[in] uint32 SADataSizeForRenegotiationKilobytes,[in] string IPv4Subnet[],[in] string IPv6Subnet[],[in] string ResponderAuthenticationMethod,[in] boolean PassThru,[in] string RoutingDomain,[in] uint8 Certificate[],[in] string SharedSecret,[in] uint32 NetworkOutageTimeSeconds,[in] uint32 NumberOfTries,[in] uint32 RetryIntervalSeconds,[in] uint32 SALifeTimeSeconds,[in] uint32 MMSALifeTimeSeconds,[in] string EapMethod,[in] boolean InternalIPv4,[in] boolean InternalIPv6,[in] uint32 IdleDisconnectSeconds,[in] string UserName,[in] string Password,[in] string EncryptionType,[in] string SourceIPAddress,[in] VpnTrafficSelector LocalVpnTrafficSelector[],[in] VpnTrafficSelector RemoteVpnTrafficSelector[],[out] VpnS2SInterface cmdletOutput)
uint32 None ramgmtpsprovider.Add([in] string DnsIPAddress[],[in] string DnsSuffix,[in] string ProxyServer,[in] string ComputerName,[in] boolean PassThru,[out] DnsClientNrptRule cmdletOutput)
uint32 None ramgmtpsprovider.Add([in] string IPAddressRange[],[in] string ComputerName,[in] boolean PassThru,[in] string RoutingDomain,[out] VpnIPAddressRange cmdletOutput)
uint32 None ramgmtpsprovider.Add([in] string MgmtServer[],[in] string ComputerName,[in] boolean PassThru,[out] string cmdletOutput[])
uint32 None ramgmtpsprovider.Add([in] string RemoteAccessServer,[in] string InternalInterface,[in] string InternetInterface,[in] string VpnIPAddressRange[],[in] string ComputerName,[in] boolean Force,[in] boolean PassThru,[out] RemoteAccessLoadBalancerNode cmdletOutput)
uint32 None ramgmtpsprovider.Clear([in] string RoutingDomain,[in] boolean Force,[in] string Prefix[])
uint32 None ramgmtpsprovider.Disable([in] string ComputerName,[in] boolean Force,[in] boolean PassThru,[out] DAMultiSite cmdletOutput)
uint32 None ramgmtpsprovider.Enable([in] string ComputerName,[in] string EntryPointName,[in] string GslbFqdn,[in] string ManualEntryPointSelectionAllowed,[in] string Name,[in] string GslbIP,[in] boolean Force,[in] boolean PassThru,[out] DAMultiSite cmdletOutput)
uint32 None ramgmtpsprovider.Enable([in] string RoutingDomain,[in] boolean PassThru,[in] boolean Force,[out] BgpRouteFlapDampeningConfig cmdletOutput)
uint32 None ramgmtpsprovider.Get([in] boolean CheckReachability,[in] string ComputerName,[out] DANetworkLocationServer cmdletOutput)
uint32 None ramgmtpsprovider.Get([in] string ComputerName,[in] string EntrypointName,[out] DAClient cmdletOutput)
uint32 None ramgmtpsprovider.Get([in] string ComputerName,[in] string EntrypointName,[out] DAServer cmdletOutput)
uint32 None ramgmtpsprovider.Get([in] string ComputerName,[in] string EntrypointName,[out] RemoteAccessCommon cmdletOutput)
uint32 None ramgmtpsprovider.Get([in] string ComputerName,[in] string Type,[out] string cmdletOutput[])
uint32 None ramgmtpsprovider.Get([in] string RoutingDomain,[in] string Prefix[],[out] BgpRouteAggregateConfig cmdletOutput[])
uint32 None ramgmtpsprovider.InstallByMultiTenant([in] string ComputerName,[in] boolean MultiTenancy,[in] string VpnType,[in] string MsgAuthenticator,[in] boolean PassThru,[in] uint16 RadiusPort,[in] uint8 RadiusScore,[in] string RadiusServer,[in] uint32 RadiusTimeout,[in] string SharedSecret,[in] uint64 CapacityKbps,[out] RemoteAccessCommon cmdletOutput)
uint32 None ramgmtpsprovider.InstallByVpn([in] string VpnType,[in] string ComputerName,[in] string IPAddressRange[],[in] string RadiusServer,[in] boolean Legacy,[in] string SharedSecret,[in] uint32 RadiusTimeout,[in] uint8 RadiusScore,[in] uint16 RadiusPort,[in] string MsgAuthenticator,[in] boolean PassThru,[in] string IPv6Prefix,[in] string EntrypointName,[out] RemoteAccessCommon cmdletOutput)
uint32 None ramgmtpsprovider.New([in] string TenantID,[in] string GatewayAddress[],[out] VpnSstpProxyRule cmdletOutput)
uint32 None ramgmtpsprovider.RemoveByAppServerFromSGGpo([in] string SecurityGroupName,[in] string Name[],[in] string ComputerName,[in] boolean PassThru,[in] string DomainName[],[out] DAAppServer cmdletOutput)
uint32 None ramgmtpsprovider.RemoveByAppServerSGGpo([in] string SecurityGroupNameList[],[in] string ComputerName,[in] boolean PassThru,[in] string DomainName[],[out] DAAppServer cmdletOutput)
uint32 None ramgmtpsprovider.RemoveByClientDownlevelSGGpo([in] string DownlevelSecurityGroupNameList[],[in] string ComputerName,[in] boolean PassThru,[in] string DownlevelDomainName[],[in] string EntrypointName,[out] DAClient cmdletOutput)
uint32 None ramgmtpsprovider.RemoveByClientSGGpo([in] string SecurityGroupNameList[],[in] string ComputerName,[in] boolean PassThru,[in] string DomainName[],[out] DAClient cmdletOutput)
uint32 None ramgmtpsprovider.Remove([in] string DnsSuffix[],[in] string ComputerName,[in] boolean PassThru,[out] DnsClientNrptRule cmdletOutput[])
uint32 None ramgmtpsprovider.Remove([in] string InterfaceAlias,[in] uint32 Direction,[in] string List[],[in] boolean PassThru,[in] boolean Force,[in] uint32 AddressFamily,[out] InterfaceIpFilter cmdletOutput[])
uint32 None ramgmtpsprovider.Remove([in] string MgmtServer[],[in] string ComputerName,[in] boolean PassThru,[out] string cmdletOutput[])
uint32 None ramgmtpsprovider.Remove([in] string Name[],[in] boolean PassThru,[in] boolean Force,[out] VpnS2SInterface cmdletOutput[])
uint32 None ramgmtpsprovider.Remove([in] string Name[],[in] string RoutingDomain,[in] boolean Force)
uint32 None ramgmtpsprovider.Remove([in] string RoutingDomain,[in] string Prefix[],[in] boolean Force)
uint32 None ramgmtpsprovider.SetByCustomPolicy([in] string Destination[],[in] boolean AdminStatus,[in] boolean PromoteAlternate,[in] string AuthenticationMethod,[in] string EapMethod,[in] boolean InternalIPv4,[in] boolean Force,[in] string PostConnectionIPv4Subnet[],[in] string IPv4TriggerFilter[],[in] uint32 IPv4TriggerFilterAction,[in] string PostConnectionIPv6Subnet[],[in] string IPv6TriggerFilter[],[in] uint32 IPv6TriggerFilterAction,[in] string IPv4Subnet[],[in] string Name,[in] string ResponderAuthenticationMethod,[in] boolean PassThru,[in] boolean Persistent,[in] boolean InitiateConfigPayload,[in] string RadiusAttributeClass,[in] uint32 EnableQoS,[in] uint64 TxBandwidthKbps,[in] uint64 RxBandwidthKbps,[in] uint32 NetworkOutageTimeSeconds,[in] uint32 NumberOfTries,[in] uint32 RetryIntervalSeconds,[in] uint32 SADataSizeForRenegotiationKilobytes,[in] uint32 SALifeTimeSeconds,[in] uint32 MMSALifeTimeSeconds,[in] string IPv6Subnet[],[in] boolean InternalIPv6,[in] uint32 IdleDisconnectSeconds,[in] string UserName,[in] string Password,[in] uint8 Certificate[],[in] string SharedSecret,[in] uint32 EncryptionMethod,[in] uint32 IntegrityCheckMethod,[in] uint32 CipherTransformConstants,[in] uint32 DHGroup,[in] uint32 AuthenticationTransformConstants,[in] uint32 PfsGroup,[in] boolean CustomPolicy,[in] string SourceIPAddress,[in] VpnTrafficSelector LocalVpnTrafficSelector[],[in] VpnTrafficSelector RemoteVpnTrafficSelector[],[out] VpnS2SInterface cmdletOutput)
uint32 None ramgmtpsprovider.SetByDisableComputerCertAuth([in] string InternalIPv6Prefix[],[in] string ClientIPv6Prefix,[in] string ComputerName,[in] string TeredoState,[in] string ConnectToAddress,[in] boolean DisableComputerCertAuthentication,[in] boolean Force,[in] boolean PassThru,[out] DAServer cmdletOutput)
uint32 None ramgmtpsprovider.SetByDisableLoadBalancing([in] boolean Disable,[in] string ComputerName,[in] boolean Force,[in] boolean PassThru,[out] RemoteAccessLoadBalancer cmdletOutput)
uint32 None ramgmtpsprovider.SetByEnableLoadBalancing([in] boolean UseThirdPartyLoadBalancer,[in] string InternetDedicatedIPAddress[],[in] string InternalDedicatedIPAddress[],[in] string InternetVirtualIPAddress[],[in] string InternalVirtualIPAddress[],[in] string ComputerName,[in] boolean PassThru,[out] RemoteAccessLoadBalancer cmdletOutput)
uint32 None ramgmtpsprovider.SetByEncryptionType([in] boolean PassThru,[in] uint32 TunnelType,[in] string EncryptionType,[in] uint32 IdleDisconnectSeconds,[in] uint32 Ikev2Ports,[in] uint32 SADataSizeForRenegotiationKilobytes,[in] uint32 SALifeTimeSeconds,[in] uint32 MMSALifeTimeSeconds,[in] uint32 L2tpPorts,[in] uint32 SstpPorts,[in] uint32 GrePorts,[out] VpnServerIPsecConfiguration cmdletOutput)
uint32 None ramgmtpsprovider.SetByEncryptionType([in] string Destination[],[in] boolean AdminStatus,[in] boolean PromoteAlternate,[in] string AuthenticationMethod,[in] string EapMethod,[in] boolean InternalIPv4,[in] boolean Force,[in] string PostConnectionIPv4Subnet[],[in] string IPv4TriggerFilter[],[in] uint32 IPv4TriggerFilterAction,[in] string PostConnectionIPv6Subnet[],[in] string IPv6TriggerFilter[],[in] uint32 IPv6TriggerFilterAction,[in] string IPv4Subnet[],[in] string Name,[in] string ResponderAuthenticationMethod,[in] boolean PassThru,[in] boolean Persistent,[in] boolean InitiateConfigPayload,[in] string RadiusAttributeClass,[in] uint32 EnableQoS,[in] uint64 TxBandwidthKbps,[in] uint64 RxBandwidthKbps,[in] uint32 NetworkOutageTimeSeconds,[in] uint32 NumberOfTries,[in] uint32 RetryIntervalSeconds,[in] uint32 SADataSizeForRenegotiationKilobytes,[in] uint32 SALifeTimeSeconds,[in] uint32 MMSALifeTimeSeconds,[in] string IPv6Subnet[],[in] boolean InternalIPv6,[in] uint32 IdleDisconnectSeconds,[in] string UserName,[in] string Password,[in] uint8 Certificate[],[in] string SharedSecret,[in] string EncryptionType,[in] string SourceIpAddress,[in] VpnTrafficSelector LocalVpnTrafficSelector[],[in] VpnTrafficSelector RemoteVpnTrafficSelector[],[out] VpnS2SInterface cmdletOutput)
uint32 None ramgmtpsprovider.SetByThirdPartyLoadBalancer([in] string ThirdPartyLoadBalancer,[in] string ComputerName,[in] boolean PassThru,[out] RemoteAccessLoadBalancer cmdletOutput)
uint32 None ramgmtpsprovider.SetByVpnIPAddressAssignment([in] boolean PassThru,[in] string IPAddressRange[],[in] string ComputerName,[in] string IPAssignmentMethod,[in] string IPv6Prefix,[out] VpnIPAddressAssignment cmdletOutput)
uint32 None ramgmtpsprovider.SetByVpnIPv6PrefixEntrypoint([in] string ComputerName,[in] string IPv6Prefix,[in] boolean PassThru,[in] string EntrypointName,[out] VpnIPAddressAssignment cmdletOutput)
uint32 None ramgmtpsprovider.Set([in] string ComputerName,[in] string ForceTunnel,[in] string OnlyRemoteComputers,[in] string Downlevel,[in] boolean PassThru,[out] DAClientSettings cmdletOutput)
uint32 None ramgmtpsprovider.Set([in] string DnsSuffix,[in] string DnsIPAddress[],[in] string ProxyServer,[in] string Local,[in] string ComputerName,[in] boolean PassThru,[out] DAClientDnsConfiguration cmdletOutput)
uint32 None ramgmtpsprovider.Set([in] string Name,[in] string LocalIPAddress,[in] string PeerIPAddress,[in] uint32 LocalASN,[in] uint32 PeerASN,[in] uint32 OperationMode,[in] uint32 PeeringMode,[in] uint16 HoldTimeSec,[in] uint16 IdleHoldTimeSec,[in] uint16 Weight,[in] boolean RouteReflectorClient,[in] uint32 MaxAllowedPrefix,[in] string RoutingDomain,[in] boolean PassThru,[in] boolean Force,[in] boolean ClearPrefixLimit,[out] BgpPeerConfig cmdletOutput)
uint32 None ramgmtpsprovider.Set([in] string StoreLimit,[in] string ComputerName,[in] boolean PassThru,[out] RemoteAccessInboxAccounting cmdletOutput)
uint32 None ramgmtpsprovider.Set([in] uint32 Action,[in] uint32 Direction,[in] string InterfaceAlias,[in] uint32 AddressFamily,[in] boolean PassThru,[out] InterfaceIpFilter cmdletOutput[])
uint32 None ramgmtpsprovider.Set([in] uint8 SslCertificate[],[in] string ComputerName,[in] string InternetInterface,[in] string InternalInterface,[in] uint64 CapacityKbps,[in] boolean UseHttp,[in] boolean Force,[in] boolean PassThru,[out] RemoteAccessCommon cmdletOutput)
uint32 None ramgmtpsprovider.Uninstall([in] string VpnType,[in] string EntrypointName,[in] string ComputerName,[in] boolean Force)
uint32 None raserverpsprovider.FindNLSCertificate([in] DASiteAddresses SiteAddresses[],[in] string ConnectToAddress[],[in] string MachineNamesForAllSites[],[in] boolean IncludeSelfSigned,[out] string ResolvedAddress[],[out] DACertificateContext EncodedCertificate)
uint32 None raserverpsprovider.Get([in] boolean Refresh,[out] RemoteAccessServerHealthLocal cmdletOutput)
uint32 None raserverpsprovider.GetInterfaces([in None None,out] uint32 DeploymentMode,[in] string ConnectTo,[in] boolean isNlbDeployed,[out] string IntranetInterfaces[],[out] string InternetInterfaces[])
uint32 None rdms.AddVirtualDesktop([in] string VMName)
uint32 None rdms.GetInt32Property([in] string Key,[out] sint32 Value)
uint32 None rdms.GetJoinedNodeCount([in] uint32 roleType,[out] uint32 Count)
uint32 None rdms.GetPatchProperties([out] DATETIME StartTime,[out] DATETIME ForceLogOffTime,[out] string JobGuid,[out] uint32 State)
uint32 None rdms.GetStringProperty([in] string Key,[out] string Value)
uint32 None rdms.Join([in] string NodeFQDN,[in] string NodeSID)
uint32 None rdms.ProvisioningEnumerateJobs([in] uint32 JobType,[in] string CollectionAlias,[out] string JobGuids[])
uint32 None rdms.ProvisioningJobCancel([in] string JobGuid)
uint32 None rdms.ProvisioningJobExecute([in] string JobInputXml,[out] string JobGuid)
uint32 None rdms.ProvisioningJobGetReport([in] string JobGuid,[out] string JobReportXml)
uint32 None rdms.SchedulePatch([in] DATETIME StartTime,[in] DATETIME ForceLogOffTime,[in] string JobInputXml)
uint32 None rdms.SetInt32Property([in] string Key,[in] sint32 Value)
uint32 None rdms.SetStringProperty([in] string Key,[in] string Value)
uint32 None servermanager.deploymentprovider.AddServerComponentAsync([in] MSFT_ServerManagerRequestGuid RequestGuid,[in] String Source[],[in] Boolean ScanForUpdates,[in] MSFT_ServerManagerServerComponentDescriptor ServerComponentDescriptors[],[out] MSFT_ServerManagerRequestState AlterationState)
uint32 None servermanager.deploymentprovider.RemoveServerComponentAsync([in] MSFT_ServerManagerRequestGuid RequestGuid,[in] Boolean DeleteComponents,[in] MSFT_ServerManagerServerComponentDescriptor ServerComponentDescriptors[],[out] MSFT_ServerManagerRequestState AlterationState)
uint32 None smiscsitargetprov.CloseConformantInstances([in] string EnumerationContext)
uint32 None smiscsitargetprov.ConvertReplicationTypeToSyncType([in] uint16 ReplicationType,[out] uint16 SyncType,[out] uint16 Mode,[out] uint16 LocalOrRemote)
uint32 None smiscsitargetprov.ConvertSyncTypeToReplicationType([in] uint16 SyncType,[in] uint16 Mode,[in] uint16 LocalOrRemote,[out] uint16 SupportedReplicationTypes)
uint32 None smiscsitargetprov.EnableDevice([in] boolean Enabled)
uint32 None smiscsitargetprov.GetDefaultConsistency([in] uint16 ReplicationType,[out] uint16 DefaultConsistency)
uint32 None smiscsitargetprov.GetDefaultReplicationSettingData([in] uint16 ReplicationType,[out] string DefaultInstance)
uint32 None smiscsitargetprov.GetSupportedCopyStates([in] uint16 ReplicationType,[out] uint16 SupportedCopyStates[],[out] boolean HostAccessible[])
uint32 None smiscsitargetprov.GetSupportedFeatures([in] uint16 ReplicationType,[out] uint16 Features[])
uint32 None smiscsitargetprov.GetSupportedGroupFeatures([in] uint16 ReplicationType,[out] uint16 GroupFeatures[])
uint32 None smiscsitargetprov.GetSupportedGroupOperations([in] uint16 ReplicationType,[out] uint16 SupportedGroupOperations[])
uint32 None smiscsitargetprov.GetSupportedListOperations([in] uint16 ReplicationType,[in] uint16 SynchronizationType,[out] uint16 SupportedListOperations[])
uint32 None smiscsitargetprov.GetSupportedMaximum([in] uint16 ReplicationType,[in] uint16 Component,[out] uint64 MaxValue)
uint32 None smiscsitargetprov.GetSupportedOperations([in] uint16 ReplicationType,[out] uint16 SupportedOperations[])
uint32 None smiscsitargetprov.GetSupportedParityLayouts([out] uint16 ParityLayout[])
uint32 None smiscsitargetprov.GetSupportedSettingsDefineStateOperations([in] uint16 ReplicationType,[out] uint16 SupportedOperations[])
uint32 None smiscsitargetprov.GetSupportedStripeDepths([out] uint64 StripeDepths[])
uint32 None smiscsitargetprov.GetSupportedStripeLengthRange([out] uint16 MinimumStripeLength,[out] uint16 MaximumStripeLength,[out] uint32 StripeLengthDivisor)
uint32 None smiscsitargetprov.GetSupportedStripeLengths([out] uint16 StripeLengths[])
uint32 None smiscsitargetprov.GetSupportedThinProvisioningFeatures([in] uint16 ReplicationType,[out] uint16 SupportedThinProvisioningFeatures[])
uint32 None smiscsitargetprov.GetSupportedWaitForCopyStates([in] uint16 ReplicationType,[in] uint16 MethodName,[out] uint16 SupportedCopyStates[])
uint32 None smiscsitargetprov.KillJob([in] boolean DeleteOnKill)
uint32 None smiscsitargetprov.OnlineDevice([in] boolean Online)
uint32 None smiscsitargetprov.QuiesceDevice([in] boolean Quiesce)
uint32 None smiscsitargetprov.SetPowerState([in] uint16 PowerState,[in] datetime Time)
uint32 None sppwmi.DisableKeyManagementServiceDnsPublishing([in] boolean DisablePublishing)
uint32 None sppwmi.SetKeyManagementServiceListeningPort([in] uint32 PortNumber)
uint32 None sppwmi.SetVLActivationInterval([in] uint32 ActivationInterval)
Uint32 None storageservice.Delete([in None None,optional] String username,[in None None,optional] String password,[out None None,optional] MSFT_SMExtendedStatus ExtendedStatus)
UInt32 None storageservice.Diagnose([out] String reason,[in None None,optional] String username,[in None None,optional] String password,[out] MSFT_SMStorageDiagnoseResult DiagnoseResults[],[out] MSFT_SMExtendedStatus ExtendedStatus)
uint32 None storageservice.GetSupportedGroupCopyStates([in] uint16 ReplicationType,[out] uint16 SupportedCopyStates[],[in None None,optional] String username,[in None None,optional] String password,[out None None,optional] MSFT_SMExtendedStatus ExtendedStatus)
uint32 None storageservice.GetSupportedOperations([in] uint16 ReplicationType,[out] uint16 SupportedOperations[],[in None None,optional] String username,[in None None,optional] String password,[out None None,optional] MSFT_SMExtendedStatus ExtendedStatus)
Uint32 None storageservice.Remove([in] String username,[in] String password,[in None None,optional] Boolean force,[out None None,optional] MSFT_SMExtendedStatus ExtendedStatus)
uint32 None vdswmi.AddMountPoint([in] string Directory)
uint32 None vdswmi.DefragAnalysis([out] boolean DefragRecommended,[out] object DefragAnalysis)
uint32 None vdswmi.Defrag([in] boolean Force,[out] object DefragAnalysis)
uint32 None vdswmi.ExcludeFromAutoChk([in] string Volume[])
uint32 None vdswmi.ScheduleAutoChk([in] string Volume[])
uint32 None wfascim.CloneObject([in] string NewName,[in] string NewID,[in] string NewPolicyStore,[in] string NewGPOSession)
uint32 None wfascim.CloneObject([in] string NewName,[in] string NewPolicyStore,[in] string NewGPOSession)
uint32 None wfascim.EnumerateFull([out] string Dependents[])
uint32 None wfascim.Rename([in] string NewName)
uint32 None wfascim.Save([in] String GPOSession)
Uint32 None wmiprvsd.Load([in] string Namespace,[in] string User,[in] string Locale,[in] string Provider,[in] string TransactionIdentifier)
uint32 None wvrcimprov.ActivateReplicaSet([in] string ReplicationGroupName,[in] string ReplicaSetId[])
uint32 None wvrcimprov.ClearMetadataAll([in] string ComputerName,[in] boolean AllConfiguration,[in] boolean AllLogs,[in] boolean AllPartitions,[in] boolean NoRestart)
uint32 None wvrcimprov.ClearMetadataForReplicationGroup([in] string ComputerName,[in] string Name,[in] boolean Logs,[in] boolean Partition,[in] boolean NoRestart)
uint32 None wvrcimprov.CompareReplicationVector([in] string ReplicationVector,[in] string ReplicationGroupName,[in] boolean IsNewPartner)
uint32 None wvrcimprov.CreatePartnership([in] string SourceComputerName,[in] string SourceRGName,[in] string DestinationComputerName,[in] string DestinationRGName,[in] uint32 ReplicationMode,[in] boolean PreventReplication,[in] boolean Seeded,[in] uint32 AsyncRPO,[in] boolean EnableEncryption,[out] MSFT_WvrReplicationPartnership Output[])
uint32 None wvrcimprov.CreateStretchPartnership([in] string ClusterName,[in] string SourceRGName,[in] string DestinationRGName,[in] boolean PreventReplication,[in] boolean Seeded,[out] MSFT_WvrReplicationPartnership Output[])
uint32 None wvrcimprov.CreateStretchTopology([in] string ClusterName,[in] string SourceRGName,[in] string SourceRGDescription,[in] string SourceVolumeName[],[in] string SourceLogVolumeName,[in] string DestinationRGName,[in] string DestinationRGDescription,[in] string DestinationVolumeName[],[in] string DestinationLogVolumeName,[in] uint64 LogSizeInBytes,[in] boolean PreventReplication,[in] boolean Seeded,[out] MSFT_WvrReplicationGroup Output[])
uint32 None wvrcimprov.CreateTopology([in] string SourceComputerName,[in] string SourceRGName,[in] string SourceRGDescription,[in] string SourceVolumeName[],[in] string SourceLogVolumeName,[in] string DestinationComputerName,[in] string DestinationRGName,[in] string DestinationRGDescription,[in] string DestinationVolumeName[],[in] string DestinationLogVolumeName,[in] uint64 LogSizeInBytes,[in] uint32 ReplicationMode,[in] boolean PreventReplication,[in] boolean Seeded,[in] uint32 AsyncRPO,[in] boolean EnableConsistencyGroups,[in] boolean EnableEncryption,[out] MSFT_WvrReplicationPartnership Output[])
uint32 None wvrcimprov.DeactivateReplicaSet([in] string ReplicationGroupName,[in] string ReplicaSetId[])
uint32 None wvrcimprov.ExchangeReplicationGroupId([in] string SourceReplicationGroupName,[in] string SourceReplicationGroupId,[in] string TargetReplicationGroupName,[out] string TargetReplicationGroupId)
uint32 None wvrcimprov.GetGroupFromPartnership([in] string SourceRGName,[in] string SourceComputerName,[in] string DestinationRGName,[in] string DestinationComputerName,[out] MSFT_WvrReplicationGroup Output[])
uint32 None wvrcimprov.GetGroup([in] string ComputerName,[in] string Name,[out] MSFT_WvrReplicationGroup Output[])
uint32 None wvrcimprov.GetNetworkConstraint([in] string SourceRGName,[in] string SourceComputerName,[in] string DestinationRGName,[in] string DestinationComputerName,[out] MSFT_WvrNetworkConstraint Output[])
uint32 None wvrcimprov.GetPartnershipFromGroup([in] string Name,[in] string ComputerName,[out] MSFT_WvrReplicationPartnership Output[])
uint32 None wvrcimprov.GetPartnership([in] string SourceRGName,[in] string SourceComputerName,[in] string DestinationRGName,[in] string DestinationComputerName,[out] MSFT_WvrReplicationPartnership Output[])
uint32 None wvrcimprov.GetSrUserAccess([in] string ComputerName,[out] MSFT_WvrUser Output[])
uint32 None wvrcimprov.GetStretchPartnership([in] string SourceRGName,[in] string SourceComputerName,[in] string DestinationRGName,[in] string DestinationComputerName,[out] MSFT_WvrReplicationPartnership Output[])
uint32 None wvrcimprov.GrantSrAccess([in] string ComputerName,[in] string Cluster)
uint32 None wvrcimprov.GrantSrUserAccess([in] string ComputerName,[in] string UserName)
uint32 None wvrcimprov.NewSrGroup([in] string ComputerName,[in] string Description,[in] uint64 LogSizeInBytes,[in] string LogVolumeName,[in] string Name,[in] string VolumeName[],[in] boolean EnableConsistencyGroups,[in] boolean EnableEncryption,[out] MSFT_WvrReplicationGroup Output[])
uint32 None wvrcimprov.PairRemoteSubsystem([in] string ComputerName)
uint32 None wvrcimprov.ProvisionPartitionsAdd([in] string PartitionIds[])
uint32 None wvrcimprov.ProvisionPartitionsRemove([in] string PartitionIds[])
uint32 None wvrcimprov.QueryCounterInstance([in] string PartitionId,[out] string DataPartitionCounter,[out] string LogPartitionCounter,[out] string NetworkCounter)
uint32 None wvrcimprov.QueryPartitionInfo([in] string ReplicationGroupName,[in] string PartitionId,[out] uint64 CapacityInBytes,[out] uint64 FreeSpaceInBytes,[out] uint16 PercentLogConsumed,[out] uint64 TimeToLogWrapInSeconds,[out] uint64 IndexSizeInBytes)
uint32 None wvrcimprov.QueryReplicaSet([in] string ReplicationGroupName,[in] string VolumeName,[out] string PartitionId,[out] string ReplicaSetId)
uint32 None wvrcimprov.QueryReplicationPartners([in] string ReplicationGroupName,[in] boolean ContainSourceGroup,[out] string PartnerGroupNames[],[out] string PartnerComputerNames[],[out] string OwnerNode,[out] boolean IsStretch)
uint32 None wvrcimprov.RemoveNetworkConstraint([in] string SourceRGName,[in] string SourceComputerName,[in] string DestinationRGName,[in] string DestinationComputerName)
uint32 None wvrcimprov.RemovePartnership([in] string SourceComputerName,[in] string SourceRGName,[in] string DestinationComputerName,[in] string DestinationRGName,[in] boolean IgnoreRemovalFailure)
uint32 None wvrcimprov.RemoveSrGroup([in] string ComputerName,[in] string Name)
uint32 None wvrcimprov.RemoveStretchPartnership([in] string ClusterName,[in] string SourceRGName,[in] string DestinationRGName)
uint32 None wvrcimprov.RemoveTopology([in] string SourceComputerName,[in] string SourceRGName,[in] string DestinationComputerName,[in] string DestinationRGName)
uint32 None wvrcimprov.RevokeSrUserAccess([in] string ComputerName,[in] string UserName,[in] boolean RemoveFromRemoteManagementUsersGroup)
uint32 None wvrcimprov.SetGroupAddVolumes([in] string ComputerName,[in] string Name,[in] string AddVolumeName[])
uint32 None wvrcimprov.SetGroupModifyConfig([in] string ComputerName,[in] string Name,[in] string Description,[in] uint64 LogSizeInBytes,[in] uint32 ReplicationMode,[in] boolean Encryption)
uint32 None wvrcimprov.SetGroupRemoveVolumes([in] string ComputerName,[in] string Name,[in] string RemoveVolumeName[])
uint32 None wvrcimprov.SetNetworkConstraint([in] string SourceComputerName,[in] string SourceRGName,[in] string DestinationComputerName,[in] string DestinationRGName,[in] string SourceNWInterfaceIndex[],[in] string DestinationNWInterfaceIndex[],[out] MSFT_WvrNetworkConstraint Output[])
uint32 None wvrcimprov.SetPartnershipAddVolumes([in] string SourceRGName,[in] string SourceComputerName,[in] string SourceAddVolumePartnership[],[in] string DestinationRGName,[in] string DestinationComputerName,[in] string DestinationAddVolumePartnership[],[in] boolean Seeded)
uint32 None wvrcimprov.SetPartnershipModifyPartnership([in] string SourceRGName,[in] string SourceComputerName,[in] string DestinationRGName,[in] string DestinationComputerName,[in] uint32 ReplicationMode,[in] uint32 AsyncRPO,[in] uint64 LogSizeInBytes,[in] boolean Encryption)
uint32 None wvrcimprov.SetPartnershipSetSourcePartnership([in] string SourceRGName,[in] string NewSourceComputerName,[in] string DestinationRGName,[in] string DestinationComputerName)
uint32 None wvrcimprov.SetSecondaryReplicationGroup([in] string ReplicationGroupName,[in] string PrimaryComputerName,[in] string PrimaryReplicationGroupId,[in] string PrimaryReplicationGroupName,[out] uint32 ReturnedErrorType)
uint32 None wvrcimprov.SmapiAddMember([in] string ReplicationGroupName,[in] string VolumeNames[],[in] string PartitionObjectIds[])
uint32 None wvrcimprov.SmapiGetPairCluster([out] string PairClusterName[],[out] string PairSubsystemId[])
uint32 None wvrcimprov.SmapiPairCluster([in] string PairClusterName,[in] string PairSubsystemUniqueId)
uint32 None wvrcimprov.SmapiQueryPartnerGroupStatus([in] string ReplicationGroupName,[out] uint16 PercentSynced,[out] datetime LastSyncTime,[out] uint32 ReplicationStatus)
uint32 None wvrcimprov.SmapiQueryPartnerPartitions([in] string ReplicationGroupName,[in] string PartitionId,[out] string PartnerComputerName,[out] string PartnerPartitionObjectId,[out] uint16 PartnerPercentSynced,[out] datetime PartnerLastSyncTime,[out] uint32 PartnerReplicationStatus)
uint32 None wvrcimprov.SmapiQueryReplicatedPartitions([in] string ComputerName,[in] string ReplicationGroupName,[out] string PartitionObjectIds[])
uint32 None wvrcimprov.SmapiRemoveMember([in] string ReplicationGroupName,[in] string PartitionObjectIds[])
uint32 None wvrcimprov.SmapiUnpairCluster([in] string PairClusterName)
uint32 None wvrcimprov.SuspendGroup([in] string ComputerName,[in] string Name)
uint32 None wvrcimprov.SyncGroup([in] string ComputerName,[in] string Name)
uint32 None wvrcimprov.UnpairRemoteSubsystem([in] string ComputerName)
uint32 None wvrcimprov.VerifyReplicablePartition([in] string PartitionId)
uint32 None wvrcimprov.WvrAddReplicaById([in] string ReplicationGroupName,[in] string VolumeName[],[in] string ReplicaSetId[],[in] boolean IsPrimary,[in] boolean Seeded)
uint32 None wvrcimprov.WvrAddReplica([in] string ReplicationGroupName,[in] string VolumeName)
uint32 None wvrcimprov.WvrAddReplicaSet([in] string SourceReplicationGroupName,[in] string SourcePartitionId,[in] string TargetComputerName,[in] string TargetReplicationGroupName,[in] string TargetPartitionId)
uint32 None wvrcimprov.WvrAddVolumePartnerStretchById([in] string SourceReplicationGroupName,[in] string TargetReplicationGroupName,[in] string ReplicaSetId[])
uint32 None wvrcimprov.WvrCheckIfGroupsLogVolumeMatchVolume([in] string ReplicationGroupName,[in] string VolumeName)
uint32 None wvrcimprov.WvrClearOrphanedLogs([in] string ReplicationGroupName)
uint32 None wvrcimprov.WvrClearOrphanedPartitionDbRecord([in] MSFT_WvrPartitionDbRecord OrphanedDbRecord,[out] boolean RebootRequired)
uint32 None wvrcimprov.WvrCreateReplicationPartnership([in] string SourceReplicationGroupName,[in] string TargetReplicationGroupName,[in] string TargetComputerName)
uint32 None wvrcimprov.WvrDeleteReplicationGroup([in] string ReplicationGroupName,[in] boolean FullCleanup)
uint32 None wvrcimprov.WvrGetOrphanedPartitionDbRecords([in] string ReplicationGroupName,[out] MSFT_WvrPartitionDbRecord OrphanedDbRecords[])
uint32 None wvrcimprov.WvrGetUserAccess([out] MSFT_WvrUser Output[])
uint32 None wvrcimprov.WvrGrantUserAccess([in] string UserName)
uint32 None wvrcimprov.WvrInitializeReplicationGroup([in] string ReplicationGroupName,[in] string ReplicaSetIds[],[in] uint32 ReplicationRole,[in] string PartnerReplicationGroupName,[in] string PartnerReplicationGroupEndpoint,[in] string partnerReplicationGroupId)
uint32 None wvrcimprov.WvrModifyReplicationGroup([in] string ReplicationGroupName,[in] string Description,[in] uint32 ReplicationMode,[in] uint64 MaxLogSizeInByte,[in] boolean EnableWriteConsistency,[in] boolean IsSeeded,[in] boolean Encryption,[in] uint32 AsyncRPO,[in] string CertificateThumbprint)
uint32 None wvrcimprov.WvrQueryClusterId([out] string ClusterId)
uint32 None wvrcimprov.WvrQueryReplicationGroupInfo([in] string ReplicationGroupName,[out] uint64 LogSizeInBytes,[out] uint32 LogVolumeSectorSize,[out] boolean IsWriteConsistent,[out] uint64 DataVolumeSize[],[out] uint32 DataVolumeSectorSize[])
uint32 None wvrcimprov.WvrRemoveNetworkConstraint([in] string ReplicationGroupName,[in] string PartnerReplicationGroupName)
uint32 None wvrcimprov.WvrRemoveReplicaById([in] string ReplicationGroupName,[in] string ReplicaSetId[],[in] boolean IsPrimary)
uint32 None wvrcimprov.WvrRemoveReplica([in] string ReplicationGroupName,[in] string VolumeName)
uint32 None wvrcimprov.WvrRemoveReplicaSet([in] string SourceReplicationGroupName,[in] string SourcePartitionId,[in] string TargetComputerName,[in] string TargetReplicationGroupName,[in] string TargetPartitionId)
uint32 None wvrcimprov.WvrRemoveReplicationPartnership([in] string SourceReplicationGroupName,[in] string TargetReplicationGroupName,[in] string TargetComputerName)
uint32 None wvrcimprov.WvrRemoveVolumePartnerStretch([in] string SourceReplicationGroupName,[in] string SourceComputerName,[in] string SourceVolumeName[])
uint32 None wvrcimprov.WvrResumeReplicationGroup([in] string ReplicationGroupName)
uint32 None wvrcimprov.WvrRevokeUserAccess([in] string UserName,[in] boolean RemoveFromRemoteManagementUsersGroup)
uint32 None wvrcimprov.WvrSetNetworkConstraint([in] string ReplicationGroupName,[in] string PartnerReplicationGroupName,[in] string NWInterfaceIndex[])
uint32 None wvrcimprov.WvrSetPrimaryReplicationGroup([in] string ReplicationGroupName,[in] string SecondaryReplicationGroupName[],[in] string SecondaryReplicationGroupId[],[in] string SecondaryComputerName[],[in] boolean Force)
uint32 None wvrcimprov.WvrSuspendReplicationGroup([in] string ReplicationGroupName)
uint32_t None None.XMVectorGetIntByIndex(XMVECTOR V None,size_t i None)
UINT64 None dxgidebug.GetMessageCountLimit([in] DXGI_DEBUG_ID Producer)
UINT64 None dxgidebug.GetNumMessagesAllowedByStorageFilter([in] DXGI_DEBUG_ID Producer)
UINT64 None dxgidebug.GetNumStoredMessagesAllowedByRetrievalFilters([in] DXGI_DEBUG_ID Producer)
UINT64 None dxgidebug.GetNumStoredMessages([in] DXGI_DEBUG_ID Producer)
UINT64 None None.MFGetAttributeUINT64(_In_ IMFAttributes *pAttributes,_In_ REFGUID guidKey,_In_ UINT64 unDefault)
UINT64 None None.Pack2UINT32AsUINT64(_In_ UINT32 unHigh,_In_ UINT32 unLow)
UINT64 None None.PackRatio([in] UINT32 nNumerator,[in] UINT32 unDenominator)
UINT64 None None.PackSize([in] UINT32 unWidth,[in] UINT32 unHeight)
UInt64 None None.ToUInt64(IFormatProvider provider None)
uint64 None srmsvc.Reset([in] string Template,[out] MSFT_FSRMQuota Quota)
UINT ACMFILTERCHOOSEHOOKPROC None.acmFilterChooseHookProc(HWND hwnd None,UINT uMsg None,WPARAM wParam None,LPARAM lParam None)
UINT ACMFORMATCHOOSEHOOKPROC None.acmFormatChooseHookProc(HWND hwnd None,UINT uMsg None,WPARAM wParam None,LPARAM lParam None)
UINT CALLBACK input.EnumLayoutOrTipForSetup(_In_ LANGID langid,_Out_ LAYOUTORTIP *pLayoutOrTip,_In_ UINT uBufLength,_In_ DWORD dwFlags)
UINT CALLBACK None.InitializeEmbeddedUI(_In_ MSIHANDLE hInstall,_In_ LPCWSTR wzResourcePath,_Inout_ LPDWORD pdwInternalUILevel)
UINT CALLBACK None.PropSheetPageProc(HWND hwnd None,_In_ UINT uMsg,_Inout_ LPPROPSHEETPAGE ppsp)
UINT None dxgidebug.GetRetrievalFilterStackSize([in] DXGI_DEBUG_ID Producer)
UINT None dxgidebug.GetStorageFilterStackSize([in] DXGI_DEBUG_ID Producer)
UINT None gdi32.GetEnhMetaFileBits(_In_ HENHMETAFILE hemf,_In_ UINT cbBuffer,_Out_ LPBYTE lpbBuffer)
UINT None gdi32.GetEnhMetaFileHeader(_In_ HENHMETAFILE hemf,_In_ UINT cbBuffer,_Out_ LPENHMETAHEADER lpemh)
UINT None gdi32.GetOutlineTextMetricsA(_In_ HDC hdc,_In_ UINT cbData,_Out_opt_ LPOUTLINETEXTMETRIC lpOTM)
UINT None gdi32.GetOutlineTextMetrics(_In_ HDC hdc,_In_ UINT cbData,_Out_opt_ LPOUTLINETEXTMETRIC lpOTM)
UINT None gdi32.GetOutlineTextMetricsW(_In_ HDC hdc,_In_ UINT cbData,_Out_opt_ LPOUTLINETEXTMETRIC lpOTM)
UINT None gdi32.GetPaletteEntries(_In_ HPALETTE hpal,_In_ UINT iStartIndex,_In_ UINT nEntries,_Out_ LPPALETTEENTRY lppe)
UINT None gdi32.GetSystemPaletteEntries(_In_ HDC hdc,_In_ UINT iStartIndex,_In_ UINT nEntries,_Out_ LPPALETTEENTRY lppe)
UINT None gdi32.GetTextAlign(_In_ HDC hdc)
UINT None gdi32.GetWinMetaFileBits(_In_ HENHMETAFILE hemf,_In_ UINT cbBuffer,_Out_ LPBYTE lpbBuffer,_In_ INT fnMapMode,_In_ HDC hdcRef)
UINT None gdi32.RealizePalette(_In_ HDC hdc)
UINT None gdi32.SetSystemPaletteUse(_In_ HDC hdc,_In_ UINT uUsage)
UINT None gdi32.SetTextAlign(_In_ HDC hdc,_In_ UINT fMode)
UINT None imm32.ImmEnumRegisterWordA(_In_ HKL hKL,_In_ REGISTERWORDENUMPROC lpfnEnumProc,_In_opt_ LPCTSTR lpszReading,_In_ DWORD dwStyle,_In_opt_ LPCTSTR lpszRegister,_In_ LPVOID lpData)
UINT None imm32.ImmEnumRegisterWord(_In_ HKL hKL,_In_ REGISTERWORDENUMPROC lpfnEnumProc,_In_opt_ LPCTSTR lpszReading,_In_ DWORD dwStyle,_In_opt_ LPCTSTR lpszRegister,_In_ LPVOID lpData)
UINT None imm32.ImmEnumRegisterWordW(_In_ HKL hKL,_In_ REGISTERWORDENUMPROC lpfnEnumProc,_In_opt_ LPCTSTR lpszReading,_In_ DWORD dwStyle,_In_opt_ LPCTSTR lpszRegister,_In_ LPVOID lpData)
UINT None imm32.ImmGetDescriptionA(_In_ HKL hKL,_Out_opt_ LPTSTR lpszDescription,_In_ UINT uBufLen)
UINT None imm32.ImmGetDescription(_In_ HKL hKL,_Out_opt_ LPTSTR lpszDescription,_In_ UINT uBufLen)
UINT None imm32.ImmGetDescriptionW(_In_ HKL hKL,_Out_opt_ LPTSTR lpszDescription,_In_ UINT uBufLen)
UINT None imm32.ImmGetIMEFileNameA(_In_ HKL hKL,_Out_opt_ LPTSTR lpszFileName,_In_ UINT uBufLen)
UINT None imm32.ImmGetIMEFileName(_In_ HKL hKL,_Out_opt_ LPTSTR lpszFileName,_In_ UINT uBufLen)
UINT None imm32.ImmGetIMEFileNameW(_In_ HKL hKL,_Out_opt_ LPTSTR lpszFileName,_In_ UINT uBufLen)
UINT None imm32.ImmGetRegisterWordStyleA(_In_ HKL hKL,_In_ UINT nItem,_Out_ LPSTYLEBUF lpStyleBuf)
UINT None imm32.ImmGetRegisterWordStyle(_In_ HKL hKL,_In_ UINT nItem,_Out_ LPSTYLEBUF lpStyleBuf)
UINT None imm32.ImmGetRegisterWordStyleW(_In_ HKL hKL,_In_ UINT nItem,_Out_ LPSTYLEBUF lpStyleBuf)
UINT None imm32.ImmGetVirtualKey(_In_ HWND hWnd)
UINT None input.EnumEnabledLayoutOrTip(_In_opt_ LPCWSTR pszUserReg,_In_opt_ LPCWSTR pszSystemReg,_In_opt_ LPCWSTR pszSoftwareReg,_Out_ LAYOUTORTIPPROFILE *pLayoutOrTipProfile,_In_ UINT uBufLength)
UINT None kernel32.GetACP(void None None)
UINT None kernel32.GetOEMCP(void None None)
UINT None msi.MsiAdvertiseProductA(_In_ LPCTSTR szPackagePath,_In_ LPCTSTR szScriptfilePath,_In_ LPCTSTR szTransforms,_In_ LANGID lgidLanguage)
UINT None msi.MsiAdvertiseProductExA(_In_ LPCTSTR szPackagePath,_In_ LPCTSTR szScriptfilePath,_In_ LPCTSTR szTransforms,_In_ LANGID lgidLanguage,_In_ DWORD dwPlatform,_In_ DWORD dwOptions)
UINT None msi.MsiAdvertiseProductEx(_In_ LPCTSTR szPackagePath,_In_ LPCTSTR szScriptfilePath,_In_ LPCTSTR szTransforms,_In_ LANGID lgidLanguage,_In_ DWORD dwPlatform,_In_ DWORD dwOptions)
UINT None msi.MsiAdvertiseProductExW(_In_ LPCTSTR szPackagePath,_In_ LPCTSTR szScriptfilePath,_In_ LPCTSTR szTransforms,_In_ LANGID lgidLanguage,_In_ DWORD dwPlatform,_In_ DWORD dwOptions)
UINT None msi.MsiAdvertiseProduct(_In_ LPCTSTR szPackagePath,_In_ LPCTSTR szScriptfilePath,_In_ LPCTSTR szTransforms,_In_ LANGID lgidLanguage)
UINT None msi.MsiAdvertiseProductW(_In_ LPCTSTR szPackagePath,_In_ LPCTSTR szScriptfilePath,_In_ LPCTSTR szTransforms,_In_ LANGID lgidLanguage)
UINT None msi.MsiAdvertiseScriptA(_In_ LPCTSTR szScriptFile,_In_ DWORD dwFlags,_In_ PHKEY phRegData,_In_ BOOL fRemoveItems)
UINT None msi.MsiAdvertiseScript(_In_ LPCTSTR szScriptFile,_In_ DWORD dwFlags,_In_ PHKEY phRegData,_In_ BOOL fRemoveItems)
UINT None msi.MsiAdvertiseScriptW(_In_ LPCTSTR szScriptFile,_In_ DWORD dwFlags,_In_ PHKEY phRegData,_In_ BOOL fRemoveItems)
UINT None msi.MsiApplyMultiplePatchesA(_In_ LPCTSTR szPatchPackages,_In_opt_ LPCTSTR szProductCode,_In_opt_ LPCTSTR szPropertiesList)
UINT None msi.MsiApplyMultiplePatches(_In_ LPCTSTR szPatchPackages,_In_opt_ LPCTSTR szProductCode,_In_opt_ LPCTSTR szPropertiesList)
UINT None msi.MsiApplyMultiplePatchesW(_In_ LPCTSTR szPatchPackages,_In_opt_ LPCTSTR szProductCode,_In_opt_ LPCTSTR szPropertiesList)
UINT None msi.MsiApplyPatchA(_In_ LPCTSTR szPatchPackage,_In_ LPCTSTR szInstallPackage,_In_ INSTALLTYPE eInstallType,_In_ LPCTSTR szCommandLine)
UINT None msi.MsiApplyPatch(_In_ LPCTSTR szPatchPackage,_In_ LPCTSTR szInstallPackage,_In_ INSTALLTYPE eInstallType,_In_ LPCTSTR szCommandLine)
UINT None msi.MsiApplyPatchW(_In_ LPCTSTR szPatchPackage,_In_ LPCTSTR szInstallPackage,_In_ INSTALLTYPE eInstallType,_In_ LPCTSTR szCommandLine)
UINT None msi.MsiCloseAllHandles(void None None)
UINT None msi.MsiCloseHandle(_In_ MSIHANDLE hAny)
UINT None msi.MsiCollectUserInfoA(_In_ LPCTSTR szProduct)
UINT None msi.MsiCollectUserInfo(_In_ LPCTSTR szProduct)
UINT None msi.MsiCollectUserInfoW(_In_ LPCTSTR szProduct)
UINT None msi.MsiConfigureFeatureA(_In_ LPCTSTR szProduct,_In_ LPCTSTR szFeature,_In_ INSTALLSTATE eInstallState)
UINT None msi.MsiConfigureFeature(_In_ LPCTSTR szProduct,_In_ LPCTSTR szFeature,_In_ INSTALLSTATE eInstallState)
UINT None msi.MsiConfigureFeatureW(_In_ LPCTSTR szProduct,_In_ LPCTSTR szFeature,_In_ INSTALLSTATE eInstallState)
UINT None msi.MsiConfigureProductA(_In_ LPCTSTR szProduct,_In_ int iInstallLevel,_In_ INSTALLSTATE eInstallState)
UINT None msi.MsiConfigureProductExA(_In_ LPCTSTR szProduct,_In_ int iInstallLevel,_In_ INSTALLSTATE eInstallState,_In_ LPCTSTR szCommandLine)
UINT None msi.MsiConfigureProductEx(_In_ LPCTSTR szProduct,_In_ int iInstallLevel,_In_ INSTALLSTATE eInstallState,_In_ LPCTSTR szCommandLine)
UINT None msi.MsiConfigureProductExW(_In_ LPCTSTR szProduct,_In_ int iInstallLevel,_In_ INSTALLSTATE eInstallState,_In_ LPCTSTR szCommandLine)
UINT None msi.MsiConfigureProduct(_In_ LPCTSTR szProduct,_In_ int iInstallLevel,_In_ INSTALLSTATE eInstallState)
UINT None msi.MsiConfigureProductW(_In_ LPCTSTR szProduct,_In_ int iInstallLevel,_In_ INSTALLSTATE eInstallState)
UINT None msi.MsiCreateTransformSummaryInfoA(_In_ MSIHANDLE hDatabase,_In_ MSIHANDLE hDatabaseReference,_In_ LPCTSTR szTransformFile,_In_ int iErrorConditions,_In_ int iValidation)
UINT None msi.MsiCreateTransformSummaryInfo(_In_ MSIHANDLE hDatabase,_In_ MSIHANDLE hDatabaseReference,_In_ LPCTSTR szTransformFile,_In_ int iErrorConditions,_In_ int iValidation)
UINT None msi.MsiCreateTransformSummaryInfoW(_In_ MSIHANDLE hDatabase,_In_ MSIHANDLE hDatabaseReference,_In_ LPCTSTR szTransformFile,_In_ int iErrorConditions,_In_ int iValidation)
UINT None msi.MsiDatabaseApplyTransformA(_In_ MSIHANDLE hDatabase,_In_ LPCTSTR szTransformFile,_In_ int iErrorConditions)
UINT None msi.MsiDatabaseApplyTransform(_In_ MSIHANDLE hDatabase,_In_ LPCTSTR szTransformFile,_In_ int iErrorConditions)
UINT None msi.MsiDatabaseApplyTransformW(_In_ MSIHANDLE hDatabase,_In_ LPCTSTR szTransformFile,_In_ int iErrorConditions)
UINT None msi.MsiDatabaseCommit(_In_ MSIHANDLE hDatabase)
UINT None msi.MsiDatabaseExportA(_In_ MSIHANDLE hDatabase,_In_ LPCTSTR szTableName,_In_ LPCTSTR szFolderPath,_In_ LPCTSTR szFileName)
UINT None msi.MsiDatabaseExport(_In_ MSIHANDLE hDatabase,_In_ LPCTSTR szTableName,_In_ LPCTSTR szFolderPath,_In_ LPCTSTR szFileName)
UINT None msi.MsiDatabaseExportW(_In_ MSIHANDLE hDatabase,_In_ LPCTSTR szTableName,_In_ LPCTSTR szFolderPath,_In_ LPCTSTR szFileName)
UINT None msi.MsiDatabaseGenerateTransformA(_In_ MSIHANDLE hDatabase,_In_ MSIHANDLE hDatabaseReference,_In_ LPCTSTR szTransformFile,_In_ int iReserved1,_In_ int iReserved2)
UINT None msi.MsiDatabaseGenerateTransform(_In_ MSIHANDLE hDatabase,_In_ MSIHANDLE hDatabaseReference,_In_ LPCTSTR szTransformFile,_In_ int iReserved1,_In_ int iReserved2)
UINT None msi.MsiDatabaseGenerateTransformW(_In_ MSIHANDLE hDatabase,_In_ MSIHANDLE hDatabaseReference,_In_ LPCTSTR szTransformFile,_In_ int iReserved1,_In_ int iReserved2)
UINT None msi.MsiDatabaseGetPrimaryKeysA(_In_ MSIHANDLE hDatabase,_In_ LPCTSTR szTableName,_Out_ MSIHANDLE *phRecord)
UINT None msi.MsiDatabaseGetPrimaryKeys(_In_ MSIHANDLE hDatabase,_In_ LPCTSTR szTableName,_Out_ MSIHANDLE *phRecord)
UINT None msi.MsiDatabaseGetPrimaryKeysW(_In_ MSIHANDLE hDatabase,_In_ LPCTSTR szTableName,_Out_ MSIHANDLE *phRecord)
UINT None msi.MsiDatabaseImportA(_In_ MSIHANDLE hDatabase,_In_ LPCTSTR szFolderPath,_In_ LPCTSTR szFileName)
UINT None msi.MsiDatabaseImport(_In_ MSIHANDLE hDatabase,_In_ LPCTSTR szFolderPath,_In_ LPCTSTR szFileName)
UINT None msi.MsiDatabaseImportW(_In_ MSIHANDLE hDatabase,_In_ LPCTSTR szFolderPath,_In_ LPCTSTR szFileName)
UINT None msi.MsiDatabaseMergeA(_In_ MSIHANDLE hDatabase,_In_ MSIHANDLE hDatabaseMerge,_In_ LPCTSTR szTableName)
UINT None msi.MsiDatabaseMerge(_In_ MSIHANDLE hDatabase,_In_ MSIHANDLE hDatabaseMerge,_In_ LPCTSTR szTableName)
UINT None msi.MsiDatabaseMergeW(_In_ MSIHANDLE hDatabase,_In_ MSIHANDLE hDatabaseMerge,_In_ LPCTSTR szTableName)
UINT None msi.MsiDatabaseOpenViewA(_In_ MSIHANDLE hDatabase,_In_ LPCTSTR szQuery,_Out_ MSIHANDLE *phView)
UINT None msi.MsiDatabaseOpenView(_In_ MSIHANDLE hDatabase,_In_ LPCTSTR szQuery,_Out_ MSIHANDLE *phView)
UINT None msi.MsiDatabaseOpenViewW(_In_ MSIHANDLE hDatabase,_In_ LPCTSTR szQuery,_Out_ MSIHANDLE *phView)
UINT None msi.MsiDetermineApplicablePatchesA(_In_ LPCTSTR szProductPackagePath,_In_ DWORD cPatchInfo,_In_ PMSIPATCHSEQUENCEINFO pPatchInfo)
UINT None msi.MsiDetermineApplicablePatches(_In_ LPCTSTR szProductPackagePath,_In_ DWORD cPatchInfo,_In_ PMSIPATCHSEQUENCEINFO pPatchInfo)
UINT None msi.MsiDetermineApplicablePatchesW(_In_ LPCTSTR szProductPackagePath,_In_ DWORD cPatchInfo,_In_ PMSIPATCHSEQUENCEINFO pPatchInfo)
UINT None msi.MsiDeterminePatchSequenceA(_In_ LPCTSTR szProductCode,_In_opt_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD cPatchInfo,_In_ PMSIPATCHSEQUENCEINFO pPatchInfo)
UINT None msi.MsiDeterminePatchSequence(_In_ LPCTSTR szProductCode,_In_opt_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD cPatchInfo,_In_ PMSIPATCHSEQUENCEINFO pPatchInfo)
UINT None msi.MsiDeterminePatchSequenceW(_In_ LPCTSTR szProductCode,_In_opt_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD cPatchInfo,_In_ PMSIPATCHSEQUENCEINFO pPatchInfo)
UINT None msi.MsiDoActionA(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szAction)
UINT None msi.MsiDoAction(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szAction)
UINT None msi.MsiDoActionW(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szAction)
UINT None msi.MsiEnableLogA(_In_ DWORD dwLogMode,_In_ LPCTSTR szLogFile,_In_ DWORD dwLogAttributes)
UINT None msi.MsiEnableLog(_In_ DWORD dwLogMode,_In_ LPCTSTR szLogFile,_In_ DWORD dwLogAttributes)
UINT None msi.MsiEnableLogW(_In_ DWORD dwLogMode,_In_ LPCTSTR szLogFile,_In_ DWORD dwLogAttributes)
UINT None msi.MsiEnableUIPreview(_In_ MSIHANDLE hDatabase,_Out_ MSIHANDLE *phPreview)
UINT None msi.MsiEnumClientsA(_In_ LPCTSTR szComponent,_In_ DWORD iProductIndex,_Out_ LPTSTR lpProductBuf)
UINT None msi.MsiEnumClients(_In_ LPCTSTR szComponent,_In_ DWORD iProductIndex,_Out_ LPTSTR lpProductBuf)
UINT None msi.MsiEnumClientsW(_In_ LPCTSTR szComponent,_In_ DWORD iProductIndex,_Out_ LPTSTR lpProductBuf)
UINT None msi.MsiEnumComponentCostsA(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szComponent,_In_ DWORD dwIndex,_In_ INSTALLSTATE iState,_Out_ LPTSTR lpDriveBuf,_Inout_ DWORD *pcchDriveBuf,_Out_ int *piCost,_Out_ int *pTempCost)
UINT None msi.MsiEnumComponentCosts(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szComponent,_In_ DWORD dwIndex,_In_ INSTALLSTATE iState,_Out_ LPTSTR lpDriveBuf,_Inout_ DWORD *pcchDriveBuf,_Out_ int *piCost,_Out_ int *pTempCost)
UINT None msi.MsiEnumComponentCostsW(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szComponent,_In_ DWORD dwIndex,_In_ INSTALLSTATE iState,_Out_ LPTSTR lpDriveBuf,_Inout_ DWORD *pcchDriveBuf,_Out_ int *piCost,_Out_ int *pTempCost)
UINT None msi.MsiEnumComponentQualifiersA(_In_ LPTSTR szComponent,_In_ DWORD iIndex,_Out_ LPTSTR lpQualifierBuf,_Inout_ DWORD *pcchQualifierBuf,_Out_ LPTSTR lpApplicationDataBuf,_Inout_ DWORD *pcchApplicationDataBuf)
UINT None msi.MsiEnumComponentQualifiers(_In_ LPTSTR szComponent,_In_ DWORD iIndex,_Out_ LPTSTR lpQualifierBuf,_Inout_ DWORD *pcchQualifierBuf,_Out_ LPTSTR lpApplicationDataBuf,_Inout_ DWORD *pcchApplicationDataBuf)
UINT None msi.MsiEnumComponentQualifiersW(_In_ LPTSTR szComponent,_In_ DWORD iIndex,_Out_ LPTSTR lpQualifierBuf,_Inout_ DWORD *pcchQualifierBuf,_Out_ LPTSTR lpApplicationDataBuf,_Inout_ DWORD *pcchApplicationDataBuf)
UINT None msi.MsiEnumComponentsA(_In_ DWORD iComponentIndex,_Out_ LPTSTR lpComponentBuf)
UINT None msi.MsiEnumComponents(_In_ DWORD iComponentIndex,_Out_ LPTSTR lpComponentBuf)
UINT None msi.MsiEnumComponentsW(_In_ DWORD iComponentIndex,_Out_ LPTSTR lpComponentBuf)
UINT None msi.MsiEnumFeaturesA(_In_ LPCTSTR szProduct,_In_ DWORD iFeatureIndex,_Out_ LPTSTR lpFeatureBuf,_Out_ LPTSTR lpParentBuf)
UINT None msi.MsiEnumFeatures(_In_ LPCTSTR szProduct,_In_ DWORD iFeatureIndex,_Out_ LPTSTR lpFeatureBuf,_Out_ LPTSTR lpParentBuf)
UINT None msi.MsiEnumFeaturesW(_In_ LPCTSTR szProduct,_In_ DWORD iFeatureIndex,_Out_ LPTSTR lpFeatureBuf,_Out_ LPTSTR lpParentBuf)
UINT None msi.MsiEnumPatchesA(_In_ LPCTSTR szProduct,_In_ DWORD iPatchIndex,_Out_ LPTSTR lpPatchBuf,_Out_ LPTSTR lpTransformsBuf,_Inout_ DWORD *pcchTransformsBuf)
UINT None msi.MsiEnumPatchesExA(_In_opt_ LPCTSTR szProductCode,_In_opt_ LPCTSTR szUserSid,_In_ DWORD dwContext,_In_ DWORD dwFilter,_In_ DWORD dwIndex,_Out_opt_ TCHAR szPatchCode[39],_Out_opt_ TCHAR szTargetProductCode[39],_Out_opt_ MSIINSTALLCONTEXT *pdwTargetProductContext,_Out_opt_ LPTSTR szTargetUserSid,_Inout_opt_ LPDWORD pcchTargetUserSid)
UINT None msi.MsiEnumPatchesEx(_In_opt_ LPCTSTR szProductCode,_In_opt_ LPCTSTR szUserSid,_In_ DWORD dwContext,_In_ DWORD dwFilter,_In_ DWORD dwIndex,_Out_opt_ TCHAR szPatchCode[39],_Out_opt_ TCHAR szTargetProductCode[39],_Out_opt_ MSIINSTALLCONTEXT *pdwTargetProductContext,_Out_opt_ LPTSTR szTargetUserSid,_Inout_opt_ LPDWORD pcchTargetUserSid)
UINT None msi.MsiEnumPatchesExW(_In_opt_ LPCTSTR szProductCode,_In_opt_ LPCTSTR szUserSid,_In_ DWORD dwContext,_In_ DWORD dwFilter,_In_ DWORD dwIndex,_Out_opt_ TCHAR szPatchCode[39],_Out_opt_ TCHAR szTargetProductCode[39],_Out_opt_ MSIINSTALLCONTEXT *pdwTargetProductContext,_Out_opt_ LPTSTR szTargetUserSid,_Inout_opt_ LPDWORD pcchTargetUserSid)
UINT None msi.MsiEnumPatches(_In_ LPCTSTR szProduct,_In_ DWORD iPatchIndex,_Out_ LPTSTR lpPatchBuf,_Out_ LPTSTR lpTransformsBuf,_Inout_ DWORD *pcchTransformsBuf)
UINT None msi.MsiEnumPatchesW(_In_ LPCTSTR szProduct,_In_ DWORD iPatchIndex,_Out_ LPTSTR lpPatchBuf,_Out_ LPTSTR lpTransformsBuf,_Inout_ DWORD *pcchTransformsBuf)
UINT None msi.MsiEnumProductsA(_In_ DWORD iProductIndex,_Out_ LPTSTR lpProductBuf)
UINT None msi.MsiEnumProductsExA(_In_opt_ LPCTSTR szProductCode,_In_ LPCTSTR szUserSid,_In_ DWORD dwContext,_In_ DWORD dwIndex,_Out_opt_ TCHAR szInstalledProductCode[39],_Out_opt_ MSIINSTALLCONTEXT *pdwInstalledContext,_Out_opt_ LPTSTR szSid,_Inout_opt_ LPDWORD pcchSid)
UINT None msi.MsiEnumProductsEx(_In_opt_ LPCTSTR szProductCode,_In_ LPCTSTR szUserSid,_In_ DWORD dwContext,_In_ DWORD dwIndex,_Out_opt_ TCHAR szInstalledProductCode[39],_Out_opt_ MSIINSTALLCONTEXT *pdwInstalledContext,_Out_opt_ LPTSTR szSid,_Inout_opt_ LPDWORD pcchSid)
UINT None msi.MsiEnumProductsExW(_In_opt_ LPCTSTR szProductCode,_In_ LPCTSTR szUserSid,_In_ DWORD dwContext,_In_ DWORD dwIndex,_Out_opt_ TCHAR szInstalledProductCode[39],_Out_opt_ MSIINSTALLCONTEXT *pdwInstalledContext,_Out_opt_ LPTSTR szSid,_Inout_opt_ LPDWORD pcchSid)
UINT None msi.MsiEnumProducts(_In_ DWORD iProductIndex,_Out_ LPTSTR lpProductBuf)
UINT None msi.MsiEnumProductsW(_In_ DWORD iProductIndex,_Out_ LPTSTR lpProductBuf)
UINT None msi.MsiEnumRelatedProductsA(_In_ LPCTSTR lpUpgradeCode,_In_ DWORD dwReserved,_In_ DWORD iProductIndex,_Out_ LPTSTR lpProductBuf)
UINT None msi.MsiEnumRelatedProducts(_In_ LPCTSTR lpUpgradeCode,_In_ DWORD dwReserved,_In_ DWORD iProductIndex,_Out_ LPTSTR lpProductBuf)
UINT None msi.MsiEnumRelatedProductsW(_In_ LPCTSTR lpUpgradeCode,_In_ DWORD dwReserved,_In_ DWORD iProductIndex,_Out_ LPTSTR lpProductBuf)
UINT None msi.MsiExtractPatchXMLDataA(_In_ LPCTSTR szPatchPath,_In_ DWORD dwReserved,_Out_opt_ LPTSTR szXMLData,_Inout_opt_ DWORD *pcchXMLData)
UINT None msi.MsiExtractPatchXMLData(_In_ LPCTSTR szPatchPath,_In_ DWORD dwReserved,_Out_opt_ LPTSTR szXMLData,_Inout_opt_ DWORD *pcchXMLData)
UINT None msi.MsiExtractPatchXMLDataW(_In_ LPCTSTR szPatchPath,_In_ DWORD dwReserved,_Out_opt_ LPTSTR szXMLData,_Inout_opt_ DWORD *pcchXMLData)
UINT None msi.MsiFormatRecordA(_In_ MSIHANDLE hInstall,_In_ MSIHANDLE hRecord,_Out_ LPTSTR szResultBuf,_Inout_ DWORD *pcchResultBuf)
UINT None msi.MsiFormatRecord(_In_ MSIHANDLE hInstall,_In_ MSIHANDLE hRecord,_Out_ LPTSTR szResultBuf,_Inout_ DWORD *pcchResultBuf)
UINT None msi.MsiFormatRecordW(_In_ MSIHANDLE hInstall,_In_ MSIHANDLE hRecord,_Out_ LPTSTR szResultBuf,_Inout_ DWORD *pcchResultBuf)
UINT None msi.MsiGetComponentStateA(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szComponent,_Out_ INSTALLSTATE *piInstalled,_Out_ INSTALLSTATE *piAction)
UINT None msi.MsiGetComponentState(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szComponent,_Out_ INSTALLSTATE *piInstalled,_Out_ INSTALLSTATE *piAction)
UINT None msi.MsiGetComponentStateW(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szComponent,_Out_ INSTALLSTATE *piInstalled,_Out_ INSTALLSTATE *piAction)
UINT None msi.MsiGetFeatureCostA(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szFeature,_In_ MSICOSTTREE iCostTree,_In_ INSTALLSTATE iState,_Out_ INT *piCost)
UINT None msi.MsiGetFeatureCost(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szFeature,_In_ MSICOSTTREE iCostTree,_In_ INSTALLSTATE iState,_Out_ INT *piCost)
UINT None msi.MsiGetFeatureCostW(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szFeature,_In_ MSICOSTTREE iCostTree,_In_ INSTALLSTATE iState,_Out_ INT *piCost)
UINT None msi.MsiGetFeatureInfoA(_In_ MSIHANDLE hProduct,_In_ LPCTSTR szFeature,_Out_opt_ LPDWORD lpAttributes,_Out_opt_ LPTSTR lpTitleBuf,_Inout_opt_ LPDWORD pcchTitleBuf,_Out_opt_ LPTSTR lpHelpBuf,_Inout_opt_ LPDWORD pcchHelpBuf)
UINT None msi.MsiGetFeatureInfo(_In_ MSIHANDLE hProduct,_In_ LPCTSTR szFeature,_Out_opt_ LPDWORD lpAttributes,_Out_opt_ LPTSTR lpTitleBuf,_Inout_opt_ LPDWORD pcchTitleBuf,_Out_opt_ LPTSTR lpHelpBuf,_Inout_opt_ LPDWORD pcchHelpBuf)
UINT None msi.MsiGetFeatureInfoW(_In_ MSIHANDLE hProduct,_In_ LPCTSTR szFeature,_Out_opt_ LPDWORD lpAttributes,_Out_opt_ LPTSTR lpTitleBuf,_Inout_opt_ LPDWORD pcchTitleBuf,_Out_opt_ LPTSTR lpHelpBuf,_Inout_opt_ LPDWORD pcchHelpBuf)
UINT None msi.MsiGetFeatureStateA(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szFeature,_Out_ INSTALLSTATE *piInstalled,_Out_ INSTALLSTATE *piAction)
UINT None msi.MsiGetFeatureState(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szFeature,_Out_ INSTALLSTATE *piInstalled,_Out_ INSTALLSTATE *piAction)
UINT None msi.MsiGetFeatureStateW(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szFeature,_Out_ INSTALLSTATE *piInstalled,_Out_ INSTALLSTATE *piAction)
UINT None msi.MsiGetFeatureUsageA(_In_ LPCTSTR szProduct,_In_ LPCTSTR szFeature,_Out_ DWORD *pdwUseCount,_Out_ WORD *pwDateUsed)
UINT None msi.MsiGetFeatureUsage(_In_ LPCTSTR szProduct,_In_ LPCTSTR szFeature,_Out_ DWORD *pdwUseCount,_Out_ WORD *pwDateUsed)
UINT None msi.MsiGetFeatureUsageW(_In_ LPCTSTR szProduct,_In_ LPCTSTR szFeature,_Out_ DWORD *pdwUseCount,_Out_ WORD *pwDateUsed)
UINT None msi.MsiGetFeatureValidStatesA(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szFeature,_Out_ DWORD *pInstallState)
UINT None msi.MsiGetFeatureValidStates(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szFeature,_Out_ DWORD *pInstallState)
UINT None msi.MsiGetFeatureValidStatesW(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szFeature,_Out_ DWORD *pInstallState)
UINT None msi.MsiGetFileHashA(_In_ LPCTSTR szFilePath,_In_ DWORD dwOptions,_Out_ PMSIFILEHASHINFO pHash)
UINT None msi.MsiGetFileHash(_In_ LPCTSTR szFilePath,_In_ DWORD dwOptions,_Out_ PMSIFILEHASHINFO pHash)
UINT None msi.MsiGetFileHashW(_In_ LPCTSTR szFilePath,_In_ DWORD dwOptions,_Out_ PMSIFILEHASHINFO pHash)
UINT None msi.MsiGetFileVersionA(_In_ LPCTSTR szFilePath,_Out_ LPTSTR lpVersionBuf,_Inout_ DWORD *pcchVersionBuf,_Out_ LPTSTR lpLangBuf,_Inout_ DWORD *pcchLangBuf)
UINT None msi.MsiGetFileVersion(_In_ LPCTSTR szFilePath,_Out_ LPTSTR lpVersionBuf,_Inout_ DWORD *pcchVersionBuf,_Out_ LPTSTR lpLangBuf,_Inout_ DWORD *pcchLangBuf)
UINT None msi.MsiGetFileVersionW(_In_ LPCTSTR szFilePath,_Out_ LPTSTR lpVersionBuf,_Inout_ DWORD *pcchVersionBuf,_Out_ LPTSTR lpLangBuf,_Inout_ DWORD *pcchLangBuf)
UINT None msi.MsiGetPatchInfoA(_In_ LPCTSTR szPatch,_In_ LPCTSTR szAttribute,_Out_ LPTSTR lpValueBuf,_Inout_ DWORD *pcchValueBuf)
UINT None msi.MsiGetPatchInfoExA(_In_ LPCTSTR szPatchCode,_In_ LPCTSTR szProductCode,_In_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ LPCTSTR szProperty,_Out_opt_ LPTSTR lpValue,_Inout_ DWORD *pcchValue)
UINT None msi.MsiGetPatchInfoEx(_In_ LPCTSTR szPatchCode,_In_ LPCTSTR szProductCode,_In_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ LPCTSTR szProperty,_Out_opt_ LPTSTR lpValue,_Inout_ DWORD *pcchValue)
UINT None msi.MsiGetPatchInfoExW(_In_ LPCTSTR szPatchCode,_In_ LPCTSTR szProductCode,_In_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ LPCTSTR szProperty,_Out_opt_ LPTSTR lpValue,_Inout_ DWORD *pcchValue)
UINT None msi.MsiGetPatchInfo(_In_ LPCTSTR szPatch,_In_ LPCTSTR szAttribute,_Out_ LPTSTR lpValueBuf,_Inout_ DWORD *pcchValueBuf)
UINT None msi.MsiGetPatchInfoW(_In_ LPCTSTR szPatch,_In_ LPCTSTR szAttribute,_Out_ LPTSTR lpValueBuf,_Inout_ DWORD *pcchValueBuf)
UINT None msi.MsiGetProductCodeA(_In_ LPCTSTR szComponent,_Out_ LPTSTR lpProductBuf)
UINT None msi.MsiGetProductCode(_In_ LPCTSTR szComponent,_Out_ LPTSTR lpProductBuf)
UINT None msi.MsiGetProductCodeW(_In_ LPCTSTR szComponent,_Out_ LPTSTR lpProductBuf)
UINT None msi.MsiGetProductInfoA(_In_ LPCTSTR szProduct,_In_ LPCTSTR szProperty,_Out_ LPTSTR lpValueBuf,_Inout_ DWORD *pcchValueBuf)
UINT None msi.MsiGetProductInfoExA(_In_ LPCTSTR szProductCode,_In_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ LPCTSTR szProperty,_Out_opt_ LPTSTR lpValue,_Inout_opt_ LPDWORD pcchValue)
UINT None msi.MsiGetProductInfoEx(_In_ LPCTSTR szProductCode,_In_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ LPCTSTR szProperty,_Out_opt_ LPTSTR lpValue,_Inout_opt_ LPDWORD pcchValue)
UINT None msi.MsiGetProductInfoExW(_In_ LPCTSTR szProductCode,_In_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ LPCTSTR szProperty,_Out_opt_ LPTSTR lpValue,_Inout_opt_ LPDWORD pcchValue)
UINT None msi.MsiGetProductInfoFromScriptA(_In_ LPCTSTR szScriptFile,_Out_ LPTSTR lpProductBuf39,_Out_ LANGID *plgidLanguage,_Out_ DWORD *pdwVersion,_Out_ LPTSTR lpNameBuf,_Inout_ DWORD *pcchNameBuf,_Out_ LPTSTR lpPackageBuf,_Inout_ DWORD *pcchPackageBuf)
UINT None msi.MsiGetProductInfoFromScript(_In_ LPCTSTR szScriptFile,_Out_ LPTSTR lpProductBuf39,_Out_ LANGID *plgidLanguage,_Out_ DWORD *pdwVersion,_Out_ LPTSTR lpNameBuf,_Inout_ DWORD *pcchNameBuf,_Out_ LPTSTR lpPackageBuf,_Inout_ DWORD *pcchPackageBuf)
UINT None msi.MsiGetProductInfoFromScriptW(_In_ LPCTSTR szScriptFile,_Out_ LPTSTR lpProductBuf39,_Out_ LANGID *plgidLanguage,_Out_ DWORD *pdwVersion,_Out_ LPTSTR lpNameBuf,_Inout_ DWORD *pcchNameBuf,_Out_ LPTSTR lpPackageBuf,_Inout_ DWORD *pcchPackageBuf)
UINT None msi.MsiGetProductInfo(_In_ LPCTSTR szProduct,_In_ LPCTSTR szProperty,_Out_ LPTSTR lpValueBuf,_Inout_ DWORD *pcchValueBuf)
UINT None msi.MsiGetProductInfoW(_In_ LPCTSTR szProduct,_In_ LPCTSTR szProperty,_Out_ LPTSTR lpValueBuf,_Inout_ DWORD *pcchValueBuf)
UINT None msi.MsiGetProductPropertyA(_In_ MSIHANDLE hProduct,_In_ LPCTSTR szProperty,_Out_ LPTSTR lpValueBuf,_Inout_ DWORD *pcchValueBuf)
UINT None msi.MsiGetProductProperty(_In_ MSIHANDLE hProduct,_In_ LPCTSTR szProperty,_Out_ LPTSTR lpValueBuf,_Inout_ DWORD *pcchValueBuf)
UINT None msi.MsiGetProductPropertyW(_In_ MSIHANDLE hProduct,_In_ LPCTSTR szProperty,_Out_ LPTSTR lpValueBuf,_Inout_ DWORD *pcchValueBuf)
UINT None msi.MsiGetPropertyA(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szName,_Out_ LPTSTR szValueBuf,_Inout_ DWORD *pchValueBuf)
UINT None msi.MsiGetProperty(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szName,_Out_ LPTSTR szValueBuf,_Inout_ DWORD *pchValueBuf)
UINT None msi.MsiGetPropertyW(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szName,_Out_ LPTSTR szValueBuf,_Inout_ DWORD *pchValueBuf)
UINT None msi.MsiGetShortcutTargetA(_In_ LPCTSTR szShortcutTarget,_Out_ LPTSTR szProductCode,_Out_ LPTSTR szFeatureId,_Out_ LPTSTR szComponentCode)
UINT None msi.MsiGetShortcutTarget(_In_ LPCTSTR szShortcutTarget,_Out_ LPTSTR szProductCode,_Out_ LPTSTR szFeatureId,_Out_ LPTSTR szComponentCode)
UINT None msi.MsiGetShortcutTargetW(_In_ LPCTSTR szShortcutTarget,_Out_ LPTSTR szProductCode,_Out_ LPTSTR szFeatureId,_Out_ LPTSTR szComponentCode)
UINT None msi.MsiGetSourcePathA(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szFolder,_Out_ LPTSTR szPathBuf,_Inout_ DWORD *pcchPathBuf)
UINT None msi.MsiGetSourcePath(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szFolder,_Out_ LPTSTR szPathBuf,_Inout_ DWORD *pcchPathBuf)
UINT None msi.MsiGetSourcePathW(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szFolder,_Out_ LPTSTR szPathBuf,_Inout_ DWORD *pcchPathBuf)
UINT None msi.MsiGetSummaryInformationA(_In_ MSIHANDLE hDatabase,_In_ LPCTSTR szDatabasePath,_In_ UINT uiUpdateCount,_Out_ MSIHANDLE *phSummaryInfo)
UINT None msi.MsiGetSummaryInformation(_In_ MSIHANDLE hDatabase,_In_ LPCTSTR szDatabasePath,_In_ UINT uiUpdateCount,_Out_ MSIHANDLE *phSummaryInfo)
UINT None msi.MsiGetSummaryInformationW(_In_ MSIHANDLE hDatabase,_In_ LPCTSTR szDatabasePath,_In_ UINT uiUpdateCount,_Out_ MSIHANDLE *phSummaryInfo)
UINT None msi.MsiGetTargetPathA(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szFolder,_Out_ LPTSTR szPathBuf,_Inout_ DWORD *pcchPathBuf)
UINT None msi.MsiGetTargetPath(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szFolder,_Out_ LPTSTR szPathBuf,_Inout_ DWORD *pcchPathBuf)
UINT None msi.MsiGetTargetPathW(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szFolder,_Out_ LPTSTR szPathBuf,_Inout_ DWORD *pcchPathBuf)
UINT None msi.MsiInstallMissingComponentA(_In_ LPCTSTR szProduct,_In_ LPCTSTR szComponent,_In_ INSTALLSTATE eInstallState)
UINT None msi.MsiInstallMissingComponent(_In_ LPCTSTR szProduct,_In_ LPCTSTR szComponent,_In_ INSTALLSTATE eInstallState)
UINT None msi.MsiInstallMissingComponentW(_In_ LPCTSTR szProduct,_In_ LPCTSTR szComponent,_In_ INSTALLSTATE eInstallState)
UINT None msi.MsiInstallMissingFileA(_In_ LPCTSTR szProduct,_In_ LPCTSTR szFile)
UINT None msi.MsiInstallMissingFile(_In_ LPCTSTR szProduct,_In_ LPCTSTR szFile)
UINT None msi.MsiInstallMissingFileW(_In_ LPCTSTR szProduct,_In_ LPCTSTR szFile)
UINT None msi.MsiInstallProductA(_In_ LPCTSTR szPackagePath,_In_ LPCTSTR szCommandLine)
UINT None msi.MsiInstallProduct(_In_ LPCTSTR szPackagePath,_In_ LPCTSTR szCommandLine)
UINT None msi.MsiInstallProductW(_In_ LPCTSTR szPackagePath,_In_ LPCTSTR szCommandLine)
UINT None msi.MsiIsProductElevatedA(_In_ LPCTSTR szProductCode,_Out_ BOOL *pfElevated)
UINT None msi.MsiIsProductElevated(_In_ LPCTSTR szProductCode,_Out_ BOOL *pfElevated)
UINT None msi.MsiIsProductElevatedW(_In_ LPCTSTR szProductCode,_Out_ BOOL *pfElevated)
UINT None msi.MsiNotifySidChangeA(_In_ LPCTSTR szOldSid,_In_ LPCTSTR szNewSid)
UINT None msi.MsiNotifySidChange(_In_ LPCTSTR szOldSid,_In_ LPCTSTR szNewSid)
UINT None msi.MsiNotifySidChangeW(_In_ LPCTSTR szOldSid,_In_ LPCTSTR szNewSid)
UINT None msi.MsiOpenDatabaseA(_In_ LPCTSTR szDatabasePath,_In_ LPCTSTR szPersist,_Out_ MSIHANDLE *phDatabase)
UINT None msi.MsiOpenDatabase(_In_ LPCTSTR szDatabasePath,_In_ LPCTSTR szPersist,_Out_ MSIHANDLE *phDatabase)
UINT None msi.MsiOpenDatabaseW(_In_ LPCTSTR szDatabasePath,_In_ LPCTSTR szPersist,_Out_ MSIHANDLE *phDatabase)
UINT None msi.MsiOpenPackageA(_In_ LPCTSTR szPackagePath,_Out_ MSIHANDLE *hProduct)
UINT None msi.MsiOpenPackage(_In_ LPCTSTR szPackagePath,_Out_ MSIHANDLE *hProduct)
UINT None msi.MsiOpenPackageW(_In_ LPCTSTR szPackagePath,_Out_ MSIHANDLE *hProduct)
UINT None msi.MsiOpenProductA(_In_ LPCTSTR szProduct,_Out_ MSIHANDLE *hProduct)
UINT None msi.MsiOpenProduct(_In_ LPCTSTR szProduct,_Out_ MSIHANDLE *hProduct)
UINT None msi.MsiOpenProductW(_In_ LPCTSTR szProduct,_Out_ MSIHANDLE *hProduct)
UINT None msi.MsiPreviewBillboardA(_In_ MSIHANDLE hPreview,_In_ LPCTSTR szControlName,_In_ LPCTSTR szBillboard)
UINT None msi.MsiPreviewBillboard(_In_ MSIHANDLE hPreview,_In_ LPCTSTR szControlName,_In_ LPCTSTR szBillboard)
UINT None msi.MsiPreviewBillboardW(_In_ MSIHANDLE hPreview,_In_ LPCTSTR szControlName,_In_ LPCTSTR szBillboard)
UINT None msi.MsiPreviewDialogA(_In_ MSIHANDLE hPreview,_In_ LPCTSTR szDialogName)
UINT None msi.MsiPreviewDialog(_In_ MSIHANDLE hPreview,_In_ LPCTSTR szDialogName)
UINT None msi.MsiPreviewDialogW(_In_ MSIHANDLE hPreview,_In_ LPCTSTR szDialogName)
UINT None msi.MsiProcessAdvertiseScriptA(_In_ LPCTSTR szScriptFile,_In_ LPCTSTR szIconFolder,_In_ HKEY hRegData,_In_ BOOL fShortcuts,_In_ BOOL fRemoveItems)
UINT None msi.MsiProcessAdvertiseScript(_In_ LPCTSTR szScriptFile,_In_ LPCTSTR szIconFolder,_In_ HKEY hRegData,_In_ BOOL fShortcuts,_In_ BOOL fRemoveItems)
UINT None msi.MsiProcessAdvertiseScriptW(_In_ LPCTSTR szScriptFile,_In_ LPCTSTR szIconFolder,_In_ HKEY hRegData,_In_ BOOL fShortcuts,_In_ BOOL fRemoveItems)
UINT None msi.MsiProvideAssemblyA(_In_ LPCTSTR szAssemblyName,_In_ LPCTSTR szAppContext,_In_ DWORD dwInstallMode,_In_ DWORD dwAssemblyInfo,_Out_ LPTSTR lpPathBuf,_Inout_ DWORD *pcchPathBuf)
UINT None msi.MsiProvideAssembly(_In_ LPCTSTR szAssemblyName,_In_ LPCTSTR szAppContext,_In_ DWORD dwInstallMode,_In_ DWORD dwAssemblyInfo,_Out_ LPTSTR lpPathBuf,_Inout_ DWORD *pcchPathBuf)
UINT None msi.MsiProvideAssemblyW(_In_ LPCTSTR szAssemblyName,_In_ LPCTSTR szAppContext,_In_ DWORD dwInstallMode,_In_ DWORD dwAssemblyInfo,_Out_ LPTSTR lpPathBuf,_Inout_ DWORD *pcchPathBuf)
UINT None msi.MsiProvideComponentA(_In_ LPCTSTR szProduct,_In_ LPCTSTR szFeature,_In_ LPCTSTR szComponent,_In_ DWORD dwInstallMode,_Out_ LPTSTR lpPathBuf,_Inout_ DWORD *pcchPathBuf)
UINT None msi.MsiProvideComponent(_In_ LPCTSTR szProduct,_In_ LPCTSTR szFeature,_In_ LPCTSTR szComponent,_In_ DWORD dwInstallMode,_Out_ LPTSTR lpPathBuf,_Inout_ DWORD *pcchPathBuf)
UINT None msi.MsiProvideComponentW(_In_ LPCTSTR szProduct,_In_ LPCTSTR szFeature,_In_ LPCTSTR szComponent,_In_ DWORD dwInstallMode,_Out_ LPTSTR lpPathBuf,_Inout_ DWORD *pcchPathBuf)
UINT None msi.MsiProvideQualifiedComponentA(_In_ LPCTSTR szComponent,_In_ LPCTSTR szQualifier,_In_ DWORD dwInstallMode,_Out_ LPTSTR lpPathBuf,_Inout_ DWORD *pcchPathBuf)
UINT None msi.MsiProvideQualifiedComponentExA(_In_ LPCTSTR szComponent,_In_ LPCTSTR szQualifier,_In_ DWORD dwInstallMode,_In_ LPTSTR szProduct,_In_ DWORD dwUnused1,_In_ DWORD dwUnused2,_Out_ LPTSTR lpPathBuf,_Inout_ DWORD *pcchPathBuf)
UINT None msi.MsiProvideQualifiedComponentEx(_In_ LPCTSTR szComponent,_In_ LPCTSTR szQualifier,_In_ DWORD dwInstallMode,_In_ LPTSTR szProduct,_In_ DWORD dwUnused1,_In_ DWORD dwUnused2,_Out_ LPTSTR lpPathBuf,_Inout_ DWORD *pcchPathBuf)
UINT None msi.MsiProvideQualifiedComponentExW(_In_ LPCTSTR szComponent,_In_ LPCTSTR szQualifier,_In_ DWORD dwInstallMode,_In_ LPTSTR szProduct,_In_ DWORD dwUnused1,_In_ DWORD dwUnused2,_Out_ LPTSTR lpPathBuf,_Inout_ DWORD *pcchPathBuf)
UINT None msi.MsiProvideQualifiedComponent(_In_ LPCTSTR szComponent,_In_ LPCTSTR szQualifier,_In_ DWORD dwInstallMode,_Out_ LPTSTR lpPathBuf,_Inout_ DWORD *pcchPathBuf)
UINT None msi.MsiProvideQualifiedComponentW(_In_ LPCTSTR szComponent,_In_ LPCTSTR szQualifier,_In_ DWORD dwInstallMode,_Out_ LPTSTR lpPathBuf,_Inout_ DWORD *pcchPathBuf)
UINT None msi.MsiQueryComponentStateA(_In_ LPTSTR szProductCode,_In_ LPTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ LPCTSTR szComponent,_Out_ INSTALLSTATE *pdwState)
UINT None msi.MsiQueryComponentState(_In_ LPTSTR szProductCode,_In_ LPTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ LPCTSTR szComponent,_Out_ INSTALLSTATE *pdwState)
UINT None msi.MsiQueryComponentStateW(_In_ LPTSTR szProductCode,_In_ LPTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ LPCTSTR szComponent,_Out_ INSTALLSTATE *pdwState)
UINT None msi.MsiQueryFeatureStateExA(_In_ LPTSTR szProductCode,_In_ LPTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ LPCTSTR szFeature,_Out_opt_ INSTALLSTATE *pdwState)
UINT None msi.MsiQueryFeatureStateEx(_In_ LPTSTR szProductCode,_In_ LPTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ LPCTSTR szFeature,_Out_opt_ INSTALLSTATE *pdwState)
UINT None msi.MsiQueryFeatureStateExW(_In_ LPTSTR szProductCode,_In_ LPTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ LPCTSTR szFeature,_Out_opt_ INSTALLSTATE *pdwState)
UINT None msi.MsiRecordReadStream(_In_ MSIHANDLE hRecord,_In_ UINT iField,_Out_ char *szDataBuf,_Inout_ DWORD *pcbDataBuf)
UINT None msi.MsiRecordSetStreamA(_In_ MSIHANDLE hRecord,_In_ UNIT iField,_In_ LPCTSTR szFilePath)
UINT None msi.MsiRecordSetStream(_In_ MSIHANDLE hRecord,_In_ UNIT iField,_In_ LPCTSTR szFilePath)
UINT None msi.MsiRecordSetStreamW(_In_ MSIHANDLE hRecord,_In_ UNIT iField,_In_ LPCTSTR szFilePath)
UINT None msi.MsiReinstallFeatureA(_In_ LPCTSTR szProduct,_In_ LPCTSTR szFeature,_In_ DWORD dwReinstallMode)
UINT None msi.MsiReinstallFeature(_In_ LPCTSTR szProduct,_In_ LPCTSTR szFeature,_In_ DWORD dwReinstallMode)
UINT None msi.MsiReinstallFeatureW(_In_ LPCTSTR szProduct,_In_ LPCTSTR szFeature,_In_ DWORD dwReinstallMode)
UINT None msi.MsiReinstallProductA(_In_ LPCTSTR szProduct,_In_ DWORD dwReinstallMode)
UINT None msi.MsiReinstallProduct(_In_ LPCTSTR szProduct,_In_ DWORD dwReinstallMode)
UINT None msi.MsiReinstallProductW(_In_ LPCTSTR szProduct,_In_ DWORD dwReinstallMode)
UINT None msi.MsiRemovePatchesA(_In_ LPCTSTR szPatchList,_In_ LPCTSTR szProductCode,_In_ INSTALLTYPE eUninstallType,_In_opt_ LPCTSTR szPropertyList)
UINT None msi.MsiRemovePatches(_In_ LPCTSTR szPatchList,_In_ LPCTSTR szProductCode,_In_ INSTALLTYPE eUninstallType,_In_opt_ LPCTSTR szPropertyList)
UINT None msi.MsiRemovePatchesW(_In_ LPCTSTR szPatchList,_In_ LPCTSTR szProductCode,_In_ INSTALLTYPE eUninstallType,_In_opt_ LPCTSTR szPropertyList)
UINT None msi.MsiSequenceA(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szTable,_In_ INT iSequenceMode)
UINT None msi.MsiSequence(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szTable,_In_ INT iSequenceMode)
UINT None msi.MsiSequenceW(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szTable,_In_ INT iSequenceMode)
UINT None msi.MsiSetComponentStateA(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szComponent,_In_ INSTALLSTATE iState)
UINT None msi.MsiSetComponentState(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szComponent,_In_ INSTALLSTATE iState)
UINT None msi.MsiSetComponentStateW(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szComponent,_In_ INSTALLSTATE iState)
UINT None msi.MsiSetExternalUIRecord(_In_ PINSTALLUI_HANDLER_RECORD puiHandler,_In_ DWORD dwMessageFilter,_In_ LPVOID pvContext,_Out_opt_ PINSTALLUI_HANDLER_RECORD ppuiPrevHandler)
UINT None msi.MsiSetFeatureAttributesA(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szFeature,_In_ DWORD dwAttributes)
UINT None msi.MsiSetFeatureAttributes(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szFeature,_In_ DWORD dwAttributes)
UINT None msi.MsiSetFeatureAttributesW(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szFeature,_In_ DWORD dwAttributes)
UINT None msi.MsiSetFeatureStateA(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szFeature,_In_ INSTALLSTATE iState)
UINT None msi.MsiSetFeatureState(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szFeature,_In_ INSTALLSTATE iState)
UINT None msi.MsiSetFeatureStateW(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szFeature,_In_ INSTALLSTATE iState)
UINT None msi.MsiSetInstallLevel(_In_ MSIHANDLE hInstall,_In_ int iInstallLevel)
UINT None msi.MsiSetPropertyA(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szName,_In_ LPCTSTR szValue)
UINT None msi.MsiSetProperty(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szName,_In_ LPCTSTR szValue)
UINT None msi.MsiSetPropertyW(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szName,_In_ LPCTSTR szValue)
UINT None msi.MsiSetTargetPathA(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szFolder,_In_ LPCTSTR szFolderPath)
UINT None msi.MsiSetTargetPath(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szFolder,_In_ LPCTSTR szFolderPath)
UINT None msi.MsiSetTargetPathW(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szFolder,_In_ LPCTSTR szFolderPath)
UINT None msi.MsiSourceListAddMediaDiskA(_In_ LPCTSTR szProductCodeOrPatchCode,_In_opt_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD dwOptions,_In_ DWORD dwDiskId,_In_ LPCTSTR szVolumeLabel,_In_opt_ LPCTSTR szDiskPrompt)
UINT None msi.MsiSourceListAddMediaDisk(_In_ LPCTSTR szProductCodeOrPatchCode,_In_opt_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD dwOptions,_In_ DWORD dwDiskId,_In_ LPCTSTR szVolumeLabel,_In_opt_ LPCTSTR szDiskPrompt)
UINT None msi.MsiSourceListAddMediaDiskW(_In_ LPCTSTR szProductCodeOrPatchCode,_In_opt_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD dwOptions,_In_ DWORD dwDiskId,_In_ LPCTSTR szVolumeLabel,_In_opt_ LPCTSTR szDiskPrompt)
UINT None msi.MsiSourceListAddSourceA(_In_ LPCTSTR szProduct,_In_ LPCTSTR szUserName,_In_ DWORD dwReserved,_In_ LPCTSTR szSource)
UINT None msi.MsiSourceListAddSourceExA(_In_ LPCTSTR szProductCodeOrPatchCode,_In_opt_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD dwOptions,_In_ LPCTSTR szSource,_In_opt_ DWORD dwIndex)
UINT None msi.MsiSourceListAddSourceEx(_In_ LPCTSTR szProductCodeOrPatchCode,_In_opt_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD dwOptions,_In_ LPCTSTR szSource,_In_opt_ DWORD dwIndex)
UINT None msi.MsiSourceListAddSourceExW(_In_ LPCTSTR szProductCodeOrPatchCode,_In_opt_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD dwOptions,_In_ LPCTSTR szSource,_In_opt_ DWORD dwIndex)
UINT None msi.MsiSourceListAddSource(_In_ LPCTSTR szProduct,_In_ LPCTSTR szUserName,_In_ DWORD dwReserved,_In_ LPCTSTR szSource)
UINT None msi.MsiSourceListAddSourceW(_In_ LPCTSTR szProduct,_In_ LPCTSTR szUserName,_In_ DWORD dwReserved,_In_ LPCTSTR szSource)
UINT None msi.MsiSourceListClearAllA(_In_ LPCTSTR szProduct,_In_ LPCTSTR szUserName,_In_ DWORD dwReserved)
UINT None msi.MsiSourceListClearAllExA(_In_ LPCTSTR szProductCodeOrPatchCode,_In_opt_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD dwOptions)
UINT None msi.MsiSourceListClearAllEx(_In_ LPCTSTR szProductCodeOrPatchCode,_In_opt_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD dwOptions)
UINT None msi.MsiSourceListClearAllExW(_In_ LPCTSTR szProductCodeOrPatchCode,_In_opt_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD dwOptions)
UINT None msi.MsiSourceListClearAll(_In_ LPCTSTR szProduct,_In_ LPCTSTR szUserName,_In_ DWORD dwReserved)
UINT None msi.MsiSourceListClearAllW(_In_ LPCTSTR szProduct,_In_ LPCTSTR szUserName,_In_ DWORD dwReserved)
UINT None msi.MsiSourceListClearMediaDiskA(_In_ LPCTSTR szProductCodeOrPatchCode,_In_opt_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD dwOptions,_In_ DWORD dwDiskID)
UINT None msi.MsiSourceListClearMediaDisk(_In_ LPCTSTR szProductCodeOrPatchCode,_In_opt_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD dwOptions,_In_ DWORD dwDiskID)
UINT None msi.MsiSourceListClearMediaDiskW(_In_ LPCTSTR szProductCodeOrPatchCode,_In_opt_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD dwOptions,_In_ DWORD dwDiskID)
UINT None msi.MsiSourceListClearSourceA(_In_ LPCTSTR szProductCodeOrPatchCode,_In_opt_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD dwOptions,_In_ LPCTSTR szSource)
UINT None msi.MsiSourceListClearSource(_In_ LPCTSTR szProductCodeOrPatchCode,_In_opt_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD dwOptions,_In_ LPCTSTR szSource)
UINT None msi.MsiSourceListClearSourceW(_In_ LPCTSTR szProductCodeOrPatchCode,_In_opt_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD dwOptions,_In_ LPCTSTR szSource)
UINT None msi.MsiSourceListEnumMediaDisksA(_In_ LPCTSTR szProductCodeOrPatchCode,_In_opt_ LPCTSTR szUserSID,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD dwOptions,_In_ DWORD dwIndex,_Out_opt_ LPWORD pdwDiskId,_Out_opt_ LPTSTR szVolumeLabel,_Inout_opt_ LPDWORD pcchVolumeLabel,_Out_opt_ LPTSTR szDiskPrompt,_Inout_opt_ LPDWORD pcchDiskPrompt)
UINT None msi.MsiSourceListEnumMediaDisks(_In_ LPCTSTR szProductCodeOrPatchCode,_In_opt_ LPCTSTR szUserSID,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD dwOptions,_In_ DWORD dwIndex,_Out_opt_ LPWORD pdwDiskId,_Out_opt_ LPTSTR szVolumeLabel,_Inout_opt_ LPDWORD pcchVolumeLabel,_Out_opt_ LPTSTR szDiskPrompt,_Inout_opt_ LPDWORD pcchDiskPrompt)
UINT None msi.MsiSourceListEnumMediaDisksW(_In_ LPCTSTR szProductCodeOrPatchCode,_In_opt_ LPCTSTR szUserSID,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD dwOptions,_In_ DWORD dwIndex,_Out_opt_ LPWORD pdwDiskId,_Out_opt_ LPTSTR szVolumeLabel,_Inout_opt_ LPDWORD pcchVolumeLabel,_Out_opt_ LPTSTR szDiskPrompt,_Inout_opt_ LPDWORD pcchDiskPrompt)
UINT None msi.MsiSourceListEnumSourcesA(_In_ LPCTSTR szProductCodeOrPatchCode,_In_opt_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD dwOptions,_In_ DWORD dwIndex,_In_opt_ LPTSTR szSource,_Inout_opt_ LPDWORD pcchSource)
UINT None msi.MsiSourceListEnumSources(_In_ LPCTSTR szProductCodeOrPatchCode,_In_opt_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD dwOptions,_In_ DWORD dwIndex,_In_opt_ LPTSTR szSource,_Inout_opt_ LPDWORD pcchSource)
UINT None msi.MsiSourceListEnumSourcesW(_In_ LPCTSTR szProductCodeOrPatchCode,_In_opt_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD dwOptions,_In_ DWORD dwIndex,_In_opt_ LPTSTR szSource,_Inout_opt_ LPDWORD pcchSource)
UINT None msi.MsiSourceListForceResolutionA(_In_ LPCTSTR szProduct,_In_ LPCTSTR szUserName,_In_ DWORD dwReserved)
UINT None msi.MsiSourceListForceResolutionExA(_In_ LPCTSTR szProductCodeOrPatchCode,_In_opt_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD dwOptions)
UINT None msi.MsiSourceListForceResolutionEx(_In_ LPCTSTR szProductCodeOrPatchCode,_In_opt_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD dwOptions)
UINT None msi.MsiSourceListForceResolutionExW(_In_ LPCTSTR szProductCodeOrPatchCode,_In_opt_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD dwOptions)
UINT None msi.MsiSourceListForceResolution(_In_ LPCTSTR szProduct,_In_ LPCTSTR szUserName,_In_ DWORD dwReserved)
UINT None msi.MsiSourceListForceResolutionW(_In_ LPCTSTR szProduct,_In_ LPCTSTR szUserName,_In_ DWORD dwReserved)
UINT None msi.MsiSourceListGetInfoA(_In_ LPCTSTR szProductCodeOrPatchCode,_In_opt_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD dwOptions,_In_ LPCTSTR szProperty,_Out_opt_ LPTSTR szValue,_Inout_opt_ LPDWORD pcchValue)
UINT None msi.MsiSourceListGetInfo(_In_ LPCTSTR szProductCodeOrPatchCode,_In_opt_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD dwOptions,_In_ LPCTSTR szProperty,_Out_opt_ LPTSTR szValue,_Inout_opt_ LPDWORD pcchValue)
UINT None msi.MsiSourceListGetInfoW(_In_ LPCTSTR szProductCodeOrPatchCode,_In_opt_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD dwOptions,_In_ LPCTSTR szProperty,_Out_opt_ LPTSTR szValue,_Inout_opt_ LPDWORD pcchValue)
UINT None msi.MsiSourceListSetInfoA(_In_ LPCTSTR szProductCodeOrPatchCode,_In_opt_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD dwOptions,_In_ LPCTSTR szProperty,_In_ LPCTSTR szValue)
UINT None msi.MsiSourceListSetInfo(_In_ LPCTSTR szProductCodeOrPatchCode,_In_opt_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD dwOptions,_In_ LPCTSTR szProperty,_In_ LPCTSTR szValue)
UINT None msi.MsiSourceListSetInfoW(_In_ LPCTSTR szProductCodeOrPatchCode,_In_opt_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD dwOptions,_In_ LPCTSTR szProperty,_In_ LPCTSTR szValue)
UINT None msi.MsiSummaryInfoGetPropertyA(_In_ MSIHANDLE hSummaryInfo,_In_ UINT uiProperty,_Out_ UINT *puiDataType,_Out_ INT *piValue,_Out_ FILETIME *pftValue,_Out_ LPTSTR szValueBuf,_Inout_ DWORD *pcchValueBuf)
UINT None msi.MsiSummaryInfoGetPropertyCount(_In_ MSIHANDLE hSummaryInfo,_Out_ UINT *puiPropertyCount)
UINT None msi.MsiSummaryInfoGetProperty(_In_ MSIHANDLE hSummaryInfo,_In_ UINT uiProperty,_Out_ UINT *puiDataType,_Out_ INT *piValue,_Out_ FILETIME *pftValue,_Out_ LPTSTR szValueBuf,_Inout_ DWORD *pcchValueBuf)
UINT None msi.MsiSummaryInfoGetPropertyW(_In_ MSIHANDLE hSummaryInfo,_In_ UINT uiProperty,_Out_ UINT *puiDataType,_Out_ INT *piValue,_Out_ FILETIME *pftValue,_Out_ LPTSTR szValueBuf,_Inout_ DWORD *pcchValueBuf)
UINT None msi.MsiSummaryInfoPersist(_In_ MSIHANDLE hSummaryInfo)
UINT None msi.MsiSummaryInfoSetPropertyA(_In_ MSIHANDLE hSummaryInfo,_In_ UINT uiProperty,_In_ UINT uiDataType,_In_ INT iValue,_In_ FILETIME *pftValue,_In_ LPTSTR szValue)
UINT None msi.MsiSummaryInfoSetProperty(_In_ MSIHANDLE hSummaryInfo,_In_ UINT uiProperty,_In_ UINT uiDataType,_In_ INT iValue,_In_ FILETIME *pftValue,_In_ LPTSTR szValue)
UINT None msi.MsiSummaryInfoSetPropertyW(_In_ MSIHANDLE hSummaryInfo,_In_ UINT uiProperty,_In_ UINT uiDataType,_In_ INT iValue,_In_ FILETIME *pftValue,_In_ LPTSTR szValue)
UINT None msi.MsiVerifyDiskSpace(_In_ MSIHANDLE hInstall)
UINT None msi.MsiVerifyPackageA(_In_ LPCTSTR szPackagePath)
UINT None msi.MsiVerifyPackage(_In_ LPCTSTR szPackagePath)
UINT None msi.MsiVerifyPackageW(_In_ LPCTSTR szPackagePath)
UINT None msi.MsiViewClose(_In_ MSIHANDLE hView)
UINT None msi.MsiViewExecute(_In_ MSIHANDLE hView,_In_ MSIHANDLE hRecord)
UINT None msi.MsiViewFetch(_In_ MSIHANDLE hView,_Out_ MSIHANDLE *phRecord)
UINT None msi.MsiViewGetColumnInfo(_In_ MSIHANDLE hView,_In_ MSICOLINFO eColumnInfo,_Out_ MSIHANDLE *phRecord)
UINT None msi.MsiViewModify(_In_ MSIHANDLE hView,_In_ MSIMODIFY eModifyMode,_In_ MSIHANDLE hRecord)
UINT None nddeapi.NDdeGetErrorStringA(_In_ UINT uErrorCode,_Out_ LPTSTR lpszErrorString,_In_ DWORD cBufSize)
UINT None nddeapi.NDdeGetErrorString(_In_ UINT uErrorCode,_Out_ LPTSTR lpszErrorString,_In_ DWORD cBufSize)
UINT None nddeapi.NDdeGetErrorStringW(_In_ UINT uErrorCode,_Out_ LPTSTR lpszErrorString,_In_ DWORD cBufSize)
UINT None nddeapi.NDdeGetShareSecurityA(_In_ LPTSTR lpszServer,_In_ LPTSTR lpszShareName,_In_ SECURITY_INFORMATION si,_Out_ PSECURITY_DESCRIPTOR pSD,_In_ DWORD cbSD,_Out_ LPDWORD lpcbsdRequired)
UINT None nddeapi.NDdeGetShareSecurity(_In_ LPTSTR lpszServer,_In_ LPTSTR lpszShareName,_In_ SECURITY_INFORMATION si,_Out_ PSECURITY_DESCRIPTOR pSD,_In_ DWORD cbSD,_Out_ LPDWORD lpcbsdRequired)
UINT None nddeapi.NDdeGetShareSecurityW(_In_ LPTSTR lpszServer,_In_ LPTSTR lpszShareName,_In_ SECURITY_INFORMATION si,_Out_ PSECURITY_DESCRIPTOR pSD,_In_ DWORD cbSD,_Out_ LPDWORD lpcbsdRequired)
UINT None nddeapi.NDdeGetTrustedShareA(_In_ LPTSTR lpszServer,_In_ LPTSTR lpszShareName,_Out_ LPDWORD lpdwTrustOptions,_Out_ LPDWORD lpdwShareModId0,_Out_ LPDWORD lpdwShareModId1)
UINT None nddeapi.NDdeGetTrustedShare(_In_ LPTSTR lpszServer,_In_ LPTSTR lpszShareName,_Out_ LPDWORD lpdwTrustOptions,_Out_ LPDWORD lpdwShareModId0,_Out_ LPDWORD lpdwShareModId1)
UINT None nddeapi.NDdeGetTrustedShareW(_In_ LPTSTR lpszServer,_In_ LPTSTR lpszShareName,_Out_ LPDWORD lpdwTrustOptions,_Out_ LPDWORD lpdwShareModId0,_Out_ LPDWORD lpdwShareModId1)
UINT None nddeapi.NDdeSetShareSecurityA(_In_ LPTSTR lpszServer,_In_ LPTSTR lpszShareName,_In_ SECURITY_INFORMATION si,_In_ PSECURITY_DESCRIPTOR pSD)
UINT None nddeapi.NDdeSetShareSecurity(_In_ LPTSTR lpszServer,_In_ LPTSTR lpszShareName,_In_ SECURITY_INFORMATION si,_In_ PSECURITY_DESCRIPTOR pSD)
UINT None nddeapi.NDdeSetShareSecurityW(_In_ LPTSTR lpszServer,_In_ LPTSTR lpszShareName,_In_ SECURITY_INFORMATION si,_In_ PSECURITY_DESCRIPTOR pSD)
UINT None nddeapi.NDdeSetTrustedShareA(_In_ LPTSTR lpszServer,_In_ LPTSTR lpszShareName,_In_ DWORD dwTrustOptions)
UINT None nddeapi.NDdeSetTrustedShare(_In_ LPTSTR lpszServer,_In_ LPTSTR lpszShareName,_In_ DWORD dwTrustOptions)
UINT None nddeapi.NDdeSetTrustedShareW(_In_ LPTSTR lpszServer,_In_ LPTSTR lpszShareName,_In_ DWORD dwTrustOptions)
UINT None nddeapi.NDdeShareAddA(_In_ LPTSTR lpszServer,_In_ UINT nLevel,_In_ PSECURITY_DESCRIPTOR pSD,_In_ LPBYTE lpBuffer,_In_ DWORD cBufSize)
UINT None nddeapi.NDdeShareAdd(_In_ LPTSTR lpszServer,_In_ UINT nLevel,_In_ PSECURITY_DESCRIPTOR pSD,_In_ LPBYTE lpBuffer,_In_ DWORD cBufSize)
UINT None nddeapi.NDdeShareAddW(_In_ LPTSTR lpszServer,_In_ UINT nLevel,_In_ PSECURITY_DESCRIPTOR pSD,_In_ LPBYTE lpBuffer,_In_ DWORD cBufSize)
UINT None nddeapi.NDdeShareDelA(_In_ LPTSTR lpszServer,_In_ LPTSTR lpszShareName,_In_ UINT wReserved)
UINT None nddeapi.NDdeShareDel(_In_ LPTSTR lpszServer,_In_ LPTSTR lpszShareName,_In_ UINT wReserved)
UINT None nddeapi.NDdeShareDelW(_In_ LPTSTR lpszServer,_In_ LPTSTR lpszShareName,_In_ UINT wReserved)
UINT None nddeapi.NDdeShareEnumA(_In_ LPTSTR lpszServer,_In_ UINT nLevel,_Out_ LPBYTE lpBuffer,_In_ DWORD cBufSize,_Out_ LPDWORD lpnEntriesRead,_Out_ LPDWORD lpcbTotalAvailable)
UINT None nddeapi.NDdeShareEnum(_In_ LPTSTR lpszServer,_In_ UINT nLevel,_Out_ LPBYTE lpBuffer,_In_ DWORD cBufSize,_Out_ LPDWORD lpnEntriesRead,_Out_ LPDWORD lpcbTotalAvailable)
UINT None nddeapi.NDdeShareEnumW(_In_ LPTSTR lpszServer,_In_ UINT nLevel,_Out_ LPBYTE lpBuffer,_In_ DWORD cBufSize,_Out_ LPDWORD lpnEntriesRead,_Out_ LPDWORD lpcbTotalAvailable)
UINT None nddeapi.NDdeShareGetInfoA(_In_ LPTSTR lpszServer,_In_ LPTSTR lpszShareName,_In_ UINT nLevel,_Out_ LPBYTE lpBuffer,_In_ DWORD cBufSize,_Out_ LPDWORD lpnTotalAvailable,_In_ LPWORD lpnItems)
UINT None nddeapi.NDdeShareGetInfo(_In_ LPTSTR lpszServer,_In_ LPTSTR lpszShareName,_In_ UINT nLevel,_Out_ LPBYTE lpBuffer,_In_ DWORD cBufSize,_Out_ LPDWORD lpnTotalAvailable,_In_ LPWORD lpnItems)
UINT None nddeapi.NDdeShareGetInfoW(_In_ LPTSTR lpszServer,_In_ LPTSTR lpszShareName,_In_ UINT nLevel,_Out_ LPBYTE lpBuffer,_In_ DWORD cBufSize,_Out_ LPDWORD lpnTotalAvailable,_In_ LPWORD lpnItems)
UINT None nddeapi.NDdeShareSetInfoA(_In_ LPTSTR lpszServer,_In_ LPTSTR lpszShareName,_In_ UINT nLevel,_In_ LPBYTE lpBuffer,_In_ DWORD cBufSize,_In_ WORD sParmNum)
UINT None nddeapi.NDdeShareSetInfo(_In_ LPTSTR lpszServer,_In_ LPTSTR lpszShareName,_In_ UINT nLevel,_In_ LPBYTE lpBuffer,_In_ DWORD cBufSize,_In_ WORD sParmNum)
UINT None nddeapi.NDdeShareSetInfoW(_In_ LPTSTR lpszServer,_In_ LPTSTR lpszShareName,_In_ UINT nLevel,_In_ LPBYTE lpBuffer,_In_ DWORD cBufSize,_In_ WORD sParmNum)
UINT None nddeapi.NDdeTrustedShareEnumA(_In_ LPTSTR lpszServer,_In_ UINT nLevel,_Out_ LPBYTE lpBuffer,_In_ DWORD cBufSize,_Out_ LPDWORD lpnEntriesRead,_Out_ LPDWORD lpcbTotalAvailable)
UINT None nddeapi.NDdeTrustedShareEnum(_In_ LPTSTR lpszServer,_In_ UINT nLevel,_Out_ LPBYTE lpBuffer,_In_ DWORD cBufSize,_Out_ LPDWORD lpnEntriesRead,_Out_ LPDWORD lpcbTotalAvailable)
UINT None nddeapi.NDdeTrustedShareEnumW(_In_ LPTSTR lpszServer,_In_ UINT nLevel,_Out_ LPBYTE lpBuffer,_In_ DWORD cBufSize,_Out_ LPDWORD lpnEntriesRead,_Out_ LPDWORD lpcbTotalAvailable)
UINT None None.auxGetNumDevs(VOID None None)
UINT None None.ComboBox_GetExtendedUI(HWND hwndCtl None)
uint None None.countbits(in uint value)
uint None None.f32tof16(in float value)
UINT None None.INDEXTOOVERLAYMASK(UINT iOverlay None)
UINT None None.joyGetNumDevs(VOID None None)
UINT None None.ListView_GetCallbackMask(HWND hwnd None)
UINT None None.ListView_GetGroupState([in] HWND hwnd,[in] UINT dwGroupId,[in] UINT dwMask)
UINT None None.ListView_GetItemState(HWND hwnd None,int i None,UINT mask None)
UINT None None.ListView_GetSelectedColumn(HWND hwnd None)
UINT None None.ListView_GetSelectedCount(HWND hwnd None)
UINT None None.ListView_IsItemVisible([in] HWND hwnd,[in] UINT index)
UINT None None.ListView_MapIDToIndex(HWND hwnd None,UINT id None)
UINT None None.ListView_MapIndexToID(HWND hwnd None,UINT index None)
UINT None None.mciSetYieldProc(MCIDEVICEID IDDevice None,YIELDPROC yp None,DWORD dwYieldData None)
UINT None None.midiInGetNumDevs(VOID None None)
UINT None None.midiOutGetErrorText(MMRESULT mmrError None,LPTSTR lpText None,UINT cchText None)
UINT None None.midiOutGetNumDevs(VOID None None)
UINT None None.mixerGetNumDevs(VOID None None)
UINT None None.PSP_FILE_CALLBACKA(PVOID Context None,UINT Notification None,UINT_PTR Param1 None,UINT_PTR Param2 None)
UINT None None.PSP_FILE_CALLBACK(PVOID Context None,UINT Notification None,UINT_PTR Param1 None,UINT_PTR Param2 None)
UINT None None.PSP_FILE_CALLBACKW(PVOID Context None,UINT Notification None,UINT_PTR Param1 None,UINT_PTR Param2 None)
uint None None.reversebits(in uint value)
uint None None.ToUInt32(IFormatProvider provider None)
UINT None None.TreeView_GetCheckState(HWND hwndTV None,HTREEITEM hItem None)
UINT None None.TreeView_GetCount(HWND hwndTV None)
UINT None None.TreeView_GetIndent(HWND hwndTV None)
UINT None None.TreeView_GetItemState(HWND hwndTV None,HTREEITEM hItem None,UINT stateMask None)
UINT None None.TreeView_GetScrollTime(HWND hwndTV None)
UINT None None.TreeView_GetVisibleCount(HWND hwndTV None)
UINT None None.TreeView_MapHTREEITEMtoAccID(HWND hwnd None,HTREEITEM htreeitem None)
UINT None None.TreeView_SetCheckState(HWND hwndTV None,HTREEITEM hItem None,BOOL fCheck None)
UINT None None.TreeView_SetItemState(HWND hwndTV None,HTREEITEM hItem None,UINT state None,UINT stateMask None)
UINT None None.TreeView_SetScrollTime(HWND hwndTV None,UINT uMaxScrollTime None)
UINT None None.UiCreatePatchPackageEx(LPCTSTR szPcpPath None,LPCTSTR szPatchPath None,LPCTSTR szLogPath None,HWND hwndStatus None,LPCTSTR szTempFolder None,BOOL fRemoveTempFolderContents None,DWORD dwFlags None,DWORD dwReserved None)
UINT None None.UiCreatePatchPackage(LPCTSTR szPcpPath None,LPCTSTR szPatchPath None,LPCTSTR szLogPath None,HWND hwndStatus None,LPCTSTR szTempFolder None,Bool fRemoveTempFolderContents None)
UINT None None.waveOutGetNumDevs(VOID None None)
UINT None oleacc.GetRoleTextA(_In_ DWORD dwRole,_Out_ LPTSTR lpszRole,_In_ UINT cchRoleMax)
UINT None oleacc.GetRoleText(_In_ DWORD dwRole,_Out_ LPTSTR lpszRole,_In_ UINT cchRoleMax)
UINT None oleacc.GetRoleTextW(_In_ DWORD dwRole,_Out_ LPTSTR lpszRole,_In_ UINT cchRoleMax)
UINT None oleaut32.SafeArrayGetDim(_In_ SAFEARRAY *psa)
UINT None oleaut32.SafeArrayGetElemsize(_In_ SAFEARRAY *psa)
UINT None oleaut32.SysStringLen(_In_opt_ BSTR bstr)
UINT None oledlg.OleUIBusyA(_In_ LPOLEUIBUSY lpBZ)
UINT None oledlg.OleUIBusy(_In_ LPOLEUIBUSY lpBZ)
UINT None oledlg.OleUIBusyW(_In_ LPOLEUIBUSY lpBZ)
UINT None oledlg.OleUIChangeIconA(_In_ LPOLEUICHANGEICON lpCI)
UINT None oledlg.OleUIChangeIcon(_In_ LPOLEUICHANGEICON lpCI)
UINT None oledlg.OleUIChangeIconW(_In_ LPOLEUICHANGEICON lpCI)
UINT None oledlg.OleUIChangeSourceA(_In_ LPOLEUICHANGESOURCE lpCS)
UINT None oledlg.OleUIChangeSource(_In_ LPOLEUICHANGESOURCE lpCS)
UINT None oledlg.OleUIChangeSourceW(_In_ LPOLEUICHANGESOURCE lpCS)
UINT None oledlg.OleUIConvertA(_In_ LPOLEUICONVERT lpCV)
UINT None oledlg.OleUIConvert(_In_ LPOLEUICONVERT lpCV)
UINT None oledlg.OleUIConvertW(_In_ LPOLEUICONVERT lpCV)
UINT None oledlg.OleUIEditLinksA(_In_ LPOLEUIEDITLINKS lpEL)
UINT None oledlg.OleUIEditLinks(_In_ LPOLEUIEDITLINKS lpEL)
UINT None oledlg.OleUIEditLinksW(_In_ LPOLEUIEDITLINKS lpEL)
UINT None oledlg.OleUIInsertObjectA(_In_ LPOLEUIINSERTOBJECT lpIO)
UINT None oledlg.OleUIInsertObject(_In_ LPOLEUIINSERTOBJECT lpIO)
UINT None oledlg.OleUIInsertObjectW(_In_ LPOLEUIINSERTOBJECT lpIO)
UINT None oledlg.OleUIObjectPropertiesA(_In_ LPOLEUIOBJECTPROPS lpOF)
UINT None oledlg.OleUIObjectProperties(_In_ LPOLEUIOBJECTPROPS lpOF)
UINT None oledlg.OleUIObjectPropertiesW(_In_ LPOLEUIOBJECTPROPS lpOF)
UINT None oledlg.OleUIPasteSpecialA(_In_ LPOLEUIPASTESPECIAL lpPS)
UINT None oledlg.OleUIPasteSpecial(_In_ LPOLEUIPASTESPECIAL lpPS)
UINT None oledlg.OleUIPasteSpecialW(_In_ LPOLEUIPASTESPECIAL lpPS)
UINT None setupapi.SetupBackupErrorA(_In_ HWND hwndParent,_In_ PCTSTR DialogTitle,_In_ PCTSTR SourceFile,_In_ PCTSTR TargetFile,_Out_ UINT Win32ErrorCode,_In_ DWORD Style)
UINT None setupapi.SetupBackupError(_In_ HWND hwndParent,_In_ PCTSTR DialogTitle,_In_ PCTSTR SourceFile,_In_ PCTSTR TargetFile,_Out_ UINT Win32ErrorCode,_In_ DWORD Style)
UINT None setupapi.SetupBackupErrorW(_In_ HWND hwndParent,_In_ PCTSTR DialogTitle,_In_ PCTSTR SourceFile,_In_ PCTSTR TargetFile,_Out_ UINT Win32ErrorCode,_In_ DWORD Style)
UINT None setupapi.SetupCopyErrorA(_In_ HWND hwndParent,_In_ PCTSTR DialogTitle,_In_ PCTSTR DiskName,_In_ PCTSTR PathToSource,_In_ PCTSTR SourceFile,_In_ PCTSTR TargetPathFile,_Out_ UINT Win32ErrorCode,_In_ DWORD Style,_Inout_ PTSTR PathBuffer,_In_ DWORD PathBufferSize,_Inout_ PDWORD PathRequiredSize)
UINT None setupapi.SetupCopyError(_In_ HWND hwndParent,_In_ PCTSTR DialogTitle,_In_ PCTSTR DiskName,_In_ PCTSTR PathToSource,_In_ PCTSTR SourceFile,_In_ PCTSTR TargetPathFile,_Out_ UINT Win32ErrorCode,_In_ DWORD Style,_Inout_ PTSTR PathBuffer,_In_ DWORD PathBufferSize,_Inout_ PDWORD PathRequiredSize)
UINT None setupapi.SetupCopyErrorW(_In_ HWND hwndParent,_In_ PCTSTR DialogTitle,_In_ PCTSTR DiskName,_In_ PCTSTR PathToSource,_In_ PCTSTR SourceFile,_In_ PCTSTR TargetPathFile,_Out_ UINT Win32ErrorCode,_In_ DWORD Style,_Inout_ PTSTR PathBuffer,_In_ DWORD PathBufferSize,_Inout_ PDWORD PathRequiredSize)
UINT None setupapi.SetupDefaultQueueCallbackA(_In_ PVOID Context,_In_ UINT Notification,_In_ UINT Param1,_In_ UINT Param2)
UINT None setupapi.SetupDefaultQueueCallback(_In_ PVOID Context,_In_ UINT Notification,_In_ UINT Param1,_In_ UINT Param2)
UINT None setupapi.SetupDefaultQueueCallbackW(_In_ PVOID Context,_In_ UINT Notification,_In_ UINT Param1,_In_ UINT Param2)
UINT None setupapi.SetupDeleteErrorA(_In_ HWND hwndParent,_In_ PCTSTR DialogTitle,_In_ PCTSTR File,_Out_ UINT Win32ErrorCode,_In_ DWORD Style)
UINT None setupapi.SetupDeleteError(_In_ HWND hwndParent,_In_ PCTSTR DialogTitle,_In_ PCTSTR File,_Out_ UINT Win32ErrorCode,_In_ DWORD Style)
UINT None setupapi.SetupDeleteErrorW(_In_ HWND hwndParent,_In_ PCTSTR DialogTitle,_In_ PCTSTR File,_Out_ UINT Win32ErrorCode,_In_ DWORD Style)
UINT None setupapi.SetupPromptForDiskA(_In_ HWND hwndParent,_In_ PCTSTR DialogTitle,_In_ PCTSTR DiskName,_In_ INPCTSTR PathToSource,_In_ PCTSTR FileSought,_In_ PCTSTR TagFile,_In_ DWORD DiskPromptStyle,_Inout_ PTSTR PathBuffer,_In_ DWORD PathBufferSize,_Inout_ PDWORD PathRequiredSize)
UINT None setupapi.SetupPromptForDisk(_In_ HWND hwndParent,_In_ PCTSTR DialogTitle,_In_ PCTSTR DiskName,_In_ INPCTSTR PathToSource,_In_ PCTSTR FileSought,_In_ PCTSTR TagFile,_In_ DWORD DiskPromptStyle,_Inout_ PTSTR PathBuffer,_In_ DWORD PathBufferSize,_Inout_ PDWORD PathRequiredSize)
UINT None setupapi.SetupPromptForDiskW(_In_ HWND hwndParent,_In_ PCTSTR DialogTitle,_In_ PCTSTR DiskName,_In_ INPCTSTR PathToSource,_In_ PCTSTR FileSought,_In_ PCTSTR TagFile,_In_ DWORD DiskPromptStyle,_Inout_ PTSTR PathBuffer,_In_ DWORD PathBufferSize,_Inout_ PDWORD PathRequiredSize)
UINT None setupapi.SetupRenameErrorA(_In_ HWND hwndParent,_In_ PCTSTR DialogTitle,_In_ PCTSTR SourceFile,_In_ PCTSTR TargetFile,_In_ UINT Win32ErrorCode,_In_ DWORD Style)
UINT None setupapi.SetupRenameError(_In_ HWND hwndParent,_In_ PCTSTR DialogTitle,_In_ PCTSTR SourceFile,_In_ PCTSTR TargetFile,_In_ UINT Win32ErrorCode,_In_ DWORD Style)
UINT None setupapi.SetupRenameErrorW(_In_ HWND hwndParent,_In_ PCTSTR DialogTitle,_In_ PCTSTR SourceFile,_In_ PCTSTR TargetFile,_In_ UINT Win32ErrorCode,_In_ DWORD Style)
UINT None shell32.DragQueryFileA(_In_ HDROP hDrop,_In_ UINT iFile,_Out_ LPTSTR lpszFile,UINT cch None)
UINT None shell32.DragQueryFile(_In_ HDROP hDrop,_In_ UINT iFile,_Out_ LPTSTR lpszFile,UINT cch None)
UINT None shell32.DragQueryFileW(_In_ HDROP hDrop,_In_ UINT iFile,_Out_ LPTSTR lpszFile,UINT cch None)
UINT None shell32.ExtractIconExA(_In_ LPCTSTR lpszFile,_In_ int nIconIndex,_Out_ HICON *phiconLarge,_Out_ HICON *phiconSmall,UINT nIcons None)
UINT None shell32.ExtractIconEx(_In_ LPCTSTR lpszFile,_In_ int nIconIndex,_Out_ HICON *phiconLarge,_Out_ HICON *phiconSmall,UINT nIcons None)
UINT None shell32.ExtractIconExW(_In_ LPCTSTR lpszFile,_In_ int nIconIndex,_Out_ HICON *phiconLarge,_Out_ HICON *phiconSmall,UINT nIcons None)
UINT None shell32.ILGetSize(_In_opt_ PCUIDLIST_RELATIVE pidl)
UINT None shell32.SHAddFromPropSheetExtArray(_In_ HPSXA hpsxa,_In_ LPFNADDPROPSHEETPAGE lpfnAddPage,LPARAM lParam None)
UINT None shell32.Shell_MergeMenus(_In_ HMENU hmDst,_In_ HMENU hmSrc,UINT uInsert None,UINT uIDAdjust None,UINT uIDAdjustMax None,ULONG uFlags None)
UINT None shell32.SHExtractIconsW(_In_ LPCWSTR pszFileName,_In_ int nIconIndex,_In_ int cxIcon,_In_ int cyIcon,_Out_ HICON *phIcon,_Out_ UINT *pIconId,_In_ UINT nIcons,_In_ UINT flags)
UINT None shell32.SHReplaceFromPropSheetExtArray(_In_ HPSXA hpsxa,UINT uPageID None,_In_ LPFNADDPROPSHEETPAGE lpfnReplaceWith,LPARAM lParam None)
UINT None shlwapi.PathGetCharTypeA(_In_ TUCHAR ch)
UINT None shlwapi.PathGetCharType(_In_ TUCHAR ch)
UINT None shlwapi.PathGetCharTypeW(_In_ TUCHAR ch)
UINT None shlwapi.WhichPlatform(void None None)
UINT None winmm.midiInGetNumDevs(void None None)
UINT None winmm.waveOutGetNumDevs(void None None)
UINT_PTR CALLBACK None.CCHookProc(_In_ HWND hdlg,_In_ UINT uiMsg,_In_ WPARAM wParam,_In_ LPARAM lParam)
UINT_PTR CALLBACK None.CFHookProc(_In_ HWND hdlg,_In_ UINT uiMsg,_In_ WPARAM wParam,_In_ LPARAM lParam)
UINT_PTR CALLBACK None.FRHookProc(_In_ HWND hdlg,_In_ UINT uiMsg,_In_ WPARAM wParam,_In_ LPARAM lParam)
UINT_PTR CALLBACK None.OFNHookProc(_In_ HWND hdlg,_In_ UINT uiMsg,_In_ WPARAM wParam,_In_ LPARAM lParam)
UINT_PTR CALLBACK None.OFNHookProcOldStyle(_In_ HWND hdlg,_In_ UINT uiMsg,_In_ WPARAM wParam,_In_ LPARAM lParam)
UINT_PTR CALLBACK None.PagePaintHook(_In_ HWND hdlg,_In_ UINT uiMsg,_In_ WPARAM wParam,_In_ LPARAM lParam)
UINT_PTR CALLBACK None.PageSetupHook(_In_ HWND hdlg,_In_ UINT uiMsg,_In_ WPARAM wParam,_In_ LPARAM lParam)
UINT_PTR CALLBACK None.PrintHookProc(_In_ HWND hdlg,_In_ UINT uiMsg,_In_ WPARAM wParam,_In_ LPARAM lParam)
UINT_PTR CALLBACK None.SetupHookProc(_In_ HWND hdlg,_In_ UINT uiMsg,_In_ WPARAM wParam,_In_ LPARAM lParam)
UINT_PTR None shell32.SHAppBarMessage(_In_ DWORD dwMessage,_Inout_ PAPPBARDATA pData)
UINT_PTR WINAPI user32.SetCoalescableTimer(_In_opt_ HWND hwnd,_In_ UINT_PTR nIDEvent,_In_ UINT uElapse,_In_opt_ TIMERPROC lpTimerFunc,_In_ ULONG uToleranceDelay)
UINT __stdcall None.CustomAction(MSIHANDLE hInstall None)
UINT WINAPI kernel32.EnumSystemFirmwareTables(_In_ DWORD FirmwareTableProviderSignature,_Out_ PVOID pFirmwareTableBuffer,_In_ DWORD BufferSize)
UINT WINAPI kernel32.GetAtomNameA(_In_ ATOM nAtom,_Out_ LPTSTR lpBuffer,_In_ int nSize)
UINT WINAPI kernel32.GetAtomName(_In_ ATOM nAtom,_Out_ LPTSTR lpBuffer,_In_ int nSize)
UINT WINAPI kernel32.GetAtomNameW(_In_ ATOM nAtom,_Out_ LPTSTR lpBuffer,_In_ int nSize)
UINT WINAPI kernel32.GetDriveTypeA(_In_opt_ LPCTSTR lpRootPathName)
UINT WINAPI kernel32.GetDriveType(_In_opt_ LPCTSTR lpRootPathName)
UINT WINAPI kernel32.GetDriveTypeW(_In_opt_ LPCTSTR lpRootPathName)
UINT WINAPI kernel32.GetErrorMode(void None None)
UINT WINAPI kernel32.GetPrivateProfileIntA(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ INT nDefault,_In_ LPCTSTR lpFileName)
UINT WINAPI kernel32.GetPrivateProfileInt(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ INT nDefault,_In_ LPCTSTR lpFileName)
UINT WINAPI kernel32.GetPrivateProfileIntW(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ INT nDefault,_In_ LPCTSTR lpFileName)
UINT WINAPI kernel32.GetProfileIntA(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ INT nDefault)
UINT WINAPI kernel32.GetProfileInt(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ INT nDefault)
UINT WINAPI kernel32.GetProfileIntW(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ INT nDefault)
UINT WINAPI kernel32.GetSystemDirectoryA(_Out_ LPTSTR lpBuffer,_In_ UINT uSize)
UINT WINAPI kernel32.GetSystemDirectory(_Out_ LPTSTR lpBuffer,_In_ UINT uSize)
UINT WINAPI kernel32.GetSystemDirectoryW(_Out_ LPTSTR lpBuffer,_In_ UINT uSize)
UINT WINAPI kernel32.GetSystemFirmwareTable(_In_ DWORD FirmwareTableProviderSignature,_In_ DWORD FirmwareTableID,_Out_ PVOID pFirmwareTableBuffer,_In_ DWORD BufferSize)
UINT WINAPI kernel32.GetSystemWindowsDirectoryA(_Out_ LPTSTR lpBuffer,_In_ UINT uSize)
UINT WINAPI kernel32.GetSystemWindowsDirectory(_Out_ LPTSTR lpBuffer,_In_ UINT uSize)
UINT WINAPI kernel32.GetSystemWindowsDirectoryW(_Out_ LPTSTR lpBuffer,_In_ UINT uSize)
UINT WINAPI kernel32.GetSystemWow64DirectoryA(_Out_ LPTSTR lpBuffer,_In_ UINT uSize)
UINT WINAPI kernel32.GetSystemWow64Directory(_Out_ LPTSTR lpBuffer,_In_ UINT uSize)
UINT WINAPI kernel32.GetSystemWow64DirectoryW(_Out_ LPTSTR lpBuffer,_In_ UINT uSize)
UINT WINAPI kernel32.GetTempFileNameA(_In_ LPCTSTR lpPathName,_In_ LPCTSTR lpPrefixString,_In_ UINT uUnique,_Out_ LPTSTR lpTempFileName)
UINT WINAPI kernel32.GetTempFileName(_In_ LPCTSTR lpPathName,_In_ LPCTSTR lpPrefixString,_In_ UINT uUnique,_Out_ LPTSTR lpTempFileName)
UINT WINAPI kernel32.GetTempFileNameW(_In_ LPCTSTR lpPathName,_In_ LPCTSTR lpPrefixString,_In_ UINT uUnique,_Out_ LPTSTR lpTempFileName)
UINT WINAPI kernel32.GetWindowsDirectoryA(_Out_ LPTSTR lpBuffer,_In_ UINT uSize)
UINT WINAPI kernel32.GetWindowsDirectory(_Out_ LPTSTR lpBuffer,_In_ UINT uSize)
UINT WINAPI kernel32.GetWindowsDirectoryW(_Out_ LPTSTR lpBuffer,_In_ UINT uSize)
UINT WINAPI kernel32.GetWriteWatch(_In_ DWORD dwFlags,_In_ PVOID lpBaseAddress,_In_ SIZE_T dwRegionSize,_Out_ PVOID *lpAddresses,_Inout_ PULONG_PTR lpdwCount,_Out_ PULONG lpdwGranularity)
UINT WINAPI kernel32.GlobalFlags(_In_ HGLOBAL hMem)
UINT WINAPI kernel32.LocalFlags(_In_ HLOCAL hMem)
UINT WINAPI kernel32.LocalSize(_In_ HLOCAL hMem)
UINT WINAPI kernel32.ResetWriteWatch(_In_ LPVOID lpBaseAddress,_In_ SIZE_T dwRegionSize)
UINT WINAPI kernel32.SetErrorMode(_In_ UINT uMode)
UINT WINAPI kernel32.WinExec(_In_ LPCSTR lpCmdLine,_In_ UINT uCmdShow)
UINT WINAPI msi.MsiBeginTransactionA(_In_ LPCWSTR szTransactionName,_In_ DWORD dwTransactionAttributes,_Out_ MSIHANDLE *hTransactionID,_Out_ HANDLE *phChangeOfOwnerEvent)
UINT WINAPI msi.MsiBeginTransaction(_In_ LPCWSTR szTransactionName,_In_ DWORD dwTransactionAttributes,_Out_ MSIHANDLE *hTransactionID,_Out_ HANDLE *phChangeOfOwnerEvent)
UINT WINAPI msi.MsiBeginTransactionW(_In_ LPCWSTR szTransactionName,_In_ DWORD dwTransactionAttributes,_Out_ MSIHANDLE *hTransactionID,_Out_ HANDLE *phChangeOfOwnerEvent)
UINT WINAPI msi.MsiEndTransaction(_In_ DWORD dwTransactionState)
UINT WINAPI msi.MsiEnumClientsExA(_In_ LPCTSTR szComponent,_In_opt_ LPCTSTR szUserSid,_In_ DWORD dwContext,_In_ DWORD dwProductIndex,_Out_opt_ TCHAR szProductBuf,_Out_opt_ MSIINSTALLCONTEXT *pdwInstalledContext,_Out_opt_ LPTSTR szSid,_Inout_opt_ LPDWORD pcchSid)
UINT WINAPI msi.MsiEnumClientsEx(_In_ LPCTSTR szComponent,_In_opt_ LPCTSTR szUserSid,_In_ DWORD dwContext,_In_ DWORD dwProductIndex,_Out_opt_ TCHAR szProductBuf,_Out_opt_ MSIINSTALLCONTEXT *pdwInstalledContext,_Out_opt_ LPTSTR szSid,_Inout_opt_ LPDWORD pcchSid)
UINT WINAPI msi.MsiEnumClientsExW(_In_ LPCTSTR szComponent,_In_opt_ LPCTSTR szUserSid,_In_ DWORD dwContext,_In_ DWORD dwProductIndex,_Out_opt_ TCHAR szProductBuf,_Out_opt_ MSIINSTALLCONTEXT *pdwInstalledContext,_Out_opt_ LPTSTR szSid,_Inout_opt_ LPDWORD pcchSid)
UINT WINAPI msi.MsiEnumComponentsExA(_In_opt_ LPCTSTR szUserSid,_In_ DWORD dwContext,_In_ DWORD dwIndex,_Out_opt_ TCHAR szInstalledComponentCode[39],_Out_opt_ MSIINSTALLCONTEXT *pdwInstalledContext,_Out_opt_ LPTSTR szSid,_Inout_ LPDWORD pcchSid)
UINT WINAPI msi.MsiEnumComponentsEx(_In_opt_ LPCTSTR szUserSid,_In_ DWORD dwContext,_In_ DWORD dwIndex,_Out_opt_ TCHAR szInstalledComponentCode[39],_Out_opt_ MSIINSTALLCONTEXT *pdwInstalledContext,_Out_opt_ LPTSTR szSid,_Inout_ LPDWORD pcchSid)
UINT WINAPI msi.MsiEnumComponentsExW(_In_opt_ LPCTSTR szUserSid,_In_ DWORD dwContext,_In_ DWORD dwIndex,_Out_opt_ TCHAR szInstalledComponentCode[39],_Out_opt_ MSIINSTALLCONTEXT *pdwInstalledContext,_Out_opt_ LPTSTR szSid,_Inout_ LPDWORD pcchSid)
UINT WINAPI msi.MsiJoinTransaction(_In_ MSIHANDLE hTransactionID,_In_ DWORD dwTransactionAttributes,_Out_ HANDLE *phChangeOfOwnerEvent)
UINT WINAPI msi.MsiOpenPackageExA(_In_ LPCTSTR szPackagePath,_In_ DWORD dwOptions,_Out_ MSIHANDLE *hProduct)
UINT WINAPI msi.MsiOpenPackageEx(_In_ LPCTSTR szPackagePath,_In_ DWORD dwOptions,_Out_ MSIHANDLE *hProduct)
UINT WINAPI msi.MsiOpenPackageExW(_In_ LPCTSTR szPackagePath,_In_ DWORD dwOptions,_Out_ MSIHANDLE *hProduct)
UINT WINAPI None.GetSystemWow64Directory2A(_Out_ LPTSTR lpBuffer,_In_ UINT uSize,_In_ WORD ImageFileMachineType)
UINT WINAPI None.GetSystemWow64Directory2(_Out_ LPTSTR lpBuffer,_In_ UINT uSize,_In_ WORD ImageFileMachineType)
UINT WINAPI None.GetSystemWow64Directory2W(_Out_ LPTSTR lpBuffer,_In_ UINT uSize,_In_ WORD ImageFileMachineType)
UINT WINAPI shcore.GetDpiForShellUiComponent(_In_ SHELL_UI_COMPONENT component)
UINT WINAPI shell32.ExtractIconExA(_In_ LPCTSTR lpszFile,_In_ int nIconIndex,_Out_opt_ HICON *phiconLarge,_Out_opt_ HICON *phiconSmall,_In_ UINT nIcons)
UINT WINAPI shell32.ExtractIconEx(_In_ LPCTSTR lpszFile,_In_ int nIconIndex,_Out_opt_ HICON *phiconLarge,_Out_opt_ HICON *phiconSmall,_In_ UINT nIcons)
UINT WINAPI shell32.ExtractIconExW(_In_ LPCTSTR lpszFile,_In_ int nIconIndex,_Out_opt_ HICON *phiconLarge,_Out_opt_ HICON *phiconSmall,_In_ UINT nIcons)
UINT WINAPI user32.ArrangeIconicWindows(_In_ HWND hWnd)
UINT WINAPI user32.DdeGetLastError(_In_ DWORD idInst)
UINT WINAPI user32.DdeInitializeA(_Inout_ LPDWORD pidInst,_In_ PFNCALLBACK pfnCallback,_In_ DWORD afCmd,_Reserved_ DWORD ulRes)
UINT WINAPI user32.DdeInitialize(_Inout_ LPDWORD pidInst,_In_ PFNCALLBACK pfnCallback,_In_ DWORD afCmd,_Reserved_ DWORD ulRes)
UINT WINAPI user32.DdeInitializeW(_Inout_ LPDWORD pidInst,_In_ PFNCALLBACK pfnCallback,_In_ DWORD afCmd,_Reserved_ DWORD ulRes)
UINT WINAPI user32.DdeQueryConvInfo(_In_ HCONV hConv,_In_ DWORD idTransaction,_Inout_ PCONVINFO pConvInfo)
UINT WINAPI user32.GetDlgItemInt(_In_ HWND hDlg,_In_ int nIDDlgItem,_Out_opt_ BOOL *lpTranslated,_In_ BOOL bSigned)
UINT WINAPI user32.GetDlgItemTextA(_In_ HWND hDlg,_In_ int nIDDlgItem,_Out_ LPTSTR lpString,_In_ int nMaxCount)
UINT WINAPI user32.GetDlgItemText(_In_ HWND hDlg,_In_ int nIDDlgItem,_Out_ LPTSTR lpString,_In_ int nMaxCount)
UINT WINAPI user32.GetDlgItemTextW(_In_ HWND hDlg,_In_ int nIDDlgItem,_Out_ LPTSTR lpString,_In_ int nMaxCount)
UINT WINAPI user32.GetDoubleClickTime(void None None)
UINT WINAPI user32.GetDpiForWindow(_In_ HWND hwnd)
UINT WINAPI user32.GetKBCodePage(void None None)
UINT WINAPI user32.GetMenuDefaultItem(_In_ HMENU hMenu,_In_ UINT fByPos,_In_ UINT gmdiFlags)
UINT WINAPI user32.GetMenuItemID(_In_ HMENU hMenu,_In_ int nPos)
UINT WINAPI user32.GetMenuState(_In_ HMENU hMenu,_In_ UINT uId,_In_ UINT uFlags)
UINT WINAPI user32.GetRawInputData(_In_ HRAWINPUT hRawInput,_In_ UINT uiCommand,_Out_opt_ LPVOID pData,_Inout_ PUINT pcbSize,_In_ UINT cbSizeHeader)
UINT WINAPI user32.GetWindowModuleFileNameA(_In_ HWND hwnd,_Out_ LPTSTR lpszFileName,_In_ UINT cchFileNameMax)
UINT WINAPI user32.GetWindowModuleFileName(_In_ HWND hwnd,_Out_ LPTSTR lpszFileName,_In_ UINT cchFileNameMax)
UINT WINAPI user32.GetWindowModuleFileNameW(_In_ HWND hwnd,_Out_ LPTSTR lpszFileName,_In_ UINT cchFileNameMax)
UINT WINAPI user32.MapVirtualKeyA(_In_ UINT uCode,_In_ UINT uMapType)
UINT WINAPI user32.MapVirtualKeyExA(_In_ UINT uCode,_In_ UINT uMapType,_Inout_opt_ HKL dwhkl)
UINT WINAPI user32.MapVirtualKeyEx(_In_ UINT uCode,_In_ UINT uMapType,_Inout_opt_ HKL dwhkl)
UINT WINAPI user32.MapVirtualKeyExW(_In_ UINT uCode,_In_ UINT uMapType,_Inout_opt_ HKL dwhkl)
UINT WINAPI user32.MapVirtualKey(_In_ UINT uCode,_In_ UINT uMapType)
UINT WINAPI user32.MapVirtualKeyW(_In_ UINT uCode,_In_ UINT uMapType)
UINT WINAPI user32.RealGetWindowClass(_In_ HWND hwnd,_Out_ LPTSTR pszType,_In_ UINT cchType)
UINT WINAPI user32.RealGetWindowClassW(_In_ HWND hwnd,_Out_ LPTSTR pszType,_In_ UINT cchType)
UINT WINAPI user32.RegisterClipboardFormatA(_In_ LPCTSTR lpszFormat)
UINT WINAPI user32.RegisterClipboardFormat(_In_ LPCTSTR lpszFormat)
UINT WINAPI user32.RegisterClipboardFormatW(_In_ LPCTSTR lpszFormat)
UINT WINAPI user32.RegisterWindowMessageA(_In_ LPCTSTR lpString)
UINT WINAPI user32.RegisterWindowMessage(_In_ LPCTSTR lpString)
UINT WINAPI user32.RegisterWindowMessageW(_In_ LPCTSTR lpString)
UINT WINAPI user32.SendInput(_In_ UINT nInputs,_In_ LPINPUT pInputs,_In_ int cbSize)
ULONG64 None None.KeQueryInterruptTimePrecise(_Out_ PULONG64 QpcTimeStamp)
u_long __inline None.ntohll(unsigned __int64 value)
ULONG LDAPAPI wldap32.ldap_cleanup(HANDLE hInstance None)
ULONGLONG None comctl32.DPA_GetSize(_In_ HDPA pdpa)
ULONGLONG None comctl32.DSA_GetSize(_In_ HDSA hdsa)
ULONGLONG None None.EventDescGetKeyword([in] PEVENT_DESCRIPTOR EventDescriptor)
ULONGLONG None None.Int64ShllMod32([in] ULONGLONG Value,[in] DWORD ShiftCount)
ULONGLONG None None.Int64ShrlMod32([in] ULONGLONG Value,[in] DWORD ShiftCount)
ULONGLONG None None.KeQueryInterruptTime(void None None)
ULONGLONG None None.MAKEDLLVERULL(WORD wMajorVersion None,WORD wMinorVersion None,WORD wBuild None,WORD wSP None)
ULONGLONG None None.RtlCmDecodeMemIoResource(_In_ PCM_PARTIAL_RESOURCE_DESCRIPTOR Descriptor,_Out_opt_ PULONGLONG Start)
ULONGLONG None None.UInt32x32To64([in] DWORD Multiplier,[in] DWORD Multiplicand)
ULONGLONG None None.VER_SET_CONDITION(ULONGLONG dwlConditionMask None,DWORD dwTypeBitMask None,BYTE dwConditionMask None)
ULONGLONG None None.WdfWmiProviderGetTracingHandle(_In_ WDFWMIPROVIDER WmiProvider)
ULONGLONG None propsys.PropVariantToUInt64WithDefault(_In_ REFPROPVARIANT propvarIn,_In_ ULONGLONG ullDefault)
ULONGLONG None propsys.VariantToUInt64WithDefault(_In_ REFVARIANT varIn,_In_ ULONGLONG ullDefault)
ULONGLONG WINAPI kernel32.GetTickCount64(void None None)
ULONGLONG WINAPI kernel32.VerSetConditionMask(_In_ ULONGLONG dwlConditionMask,_In_ DWORD dwTypeBitMask,_In_ BYTE dwConditionMask)
ULONGLONG WINAPI None.UnsignedMultiplyHigh(_In_ DWORD64 Multiplier,_In_ DWORD64 Multiplicand)
ULONG None advapi32.CreateTraceInstanceId(_In_ HANDLE RegHandle,_Out_ PEVENT_INSTANCE_INFO pInstInfo)
ULONG None advapi32.EnableTraceEx(_In_ LPCGUID ProviderId,_In_opt_ LPCGUID SourceId,_In_ TRACEHANDLE TraceHandle,_In_ ULONG IsEnabled,_In_ UCHAR Level,_In_ ULONGLONG MatchAnyKeyword,_In_ ULONGLONG MatchAllKeyword,_In_ ULONG EnableProperty,_In_opt_ PEVENT_FILTER_DESCRIPTOR EnableFilterDesc)
ULONG None advapi32.EnableTrace(_In_ ULONG Enable,_In_ ULONG EnableFlag,_In_ ULONG EnableLevel,_In_ LPCGUID ControlGuid,_In_ TRACEHANDLE SessionHandle)
ULONG None advapi32.EnumerateTraceGuids(_Inout_ PTRACE_GUID_PROPERTIES *GuidPropertiesArray,_In_ ULONG PropertyArrayCount,_Out_ PULONG GuidCount)
ULONG None advapi32.EventAccessQuery(_In_ LPGUID Guid,_Inout_ PSECURITY_DESCRIPTOR Buffer,_Inout_ PULONG BufferSize)
ULONG None advapi32.EventActivityIdControl(_In_ ULONG ControlCode,_Inout_ LPGUID ActivityId)
ULONG None advapi32.EventRegister(_In_ LPCGUID ProviderId,_In_opt_ PENABLECALLBACK EnableCallback,_In_opt_ PVOID CallbackContext,_Out_ PREGHANDLE RegHandle)
ULONG None advapi32.EventSetInformation(_In_ REGHANDLE RegHandle,_In_ EVENT_INFO_CLASS InformationClass,_In_ PVOID EventInformation,_In_ ULONG InformationLength)
ULONG None advapi32.EventUnregister(_In_ REGHANDLE RegHandle)
ULONG None advapi32.EventWriteEx(_In_ REGHANDLE RegHandle,_In_ PCEVENT_DESCRIPTOR EventDescriptor,_In_ ULONG64 Filter,_In_ ULONG Flags,_In_opt_ LPCGUID ActivityId,_In_opt_ LPCGUID RelatedActivityId,_In_ ULONG UserDataCount,_In_opt_ PEVENT_DATA_DESCRIPTOR UserData)
ULONG None advapi32.EventWrite(_In_ REGHANDLE RegHandle,_In_ PCEVENT_DESCRIPTOR EventDescriptor,_In_ ULONG UserDataCount,_In_opt_ PEVENT_DATA_DESCRIPTOR UserData)
ULONG None advapi32.EventWriteString(_In_ REGHANDLE RegHandle,_In_ UCHAR Level,_In_ ULONGLONG Keyword,_In_ PCWSTR String)
ULONG None advapi32.EventWriteTransfer(_In_ REGHANDLE RegHandle,_In_ PCEVENT_DESCRIPTOR EventDescriptor,_In_opt_ LPCGUID ActivityId,_In_opt_ LPCGUID RelatedActivityId,_In_ ULONG UserDataCount,_In_opt_ PEVENT_DATA_DESCRIPTOR UserData)
ULONG None advapi32.FlushTraceA(_In_ TRACEHANDLE SessionHandle,_In_ LPCTSTR SessionName,_Inout_ PEVENT_TRACE_PROPERTIES Properties)
ULONG None advapi32.FlushTrace(_In_ TRACEHANDLE SessionHandle,_In_ LPCTSTR SessionName,_Inout_ PEVENT_TRACE_PROPERTIES Properties)
ULONG None advapi32.FlushTraceW(_In_ TRACEHANDLE SessionHandle,_In_ LPCTSTR SessionName,_Inout_ PEVENT_TRACE_PROPERTIES Properties)
ULONG None advapi32.GetTraceEnableFlags(_In_ TRACEHANDLE SessionHandle)
ULONG None advapi32.LsaNtStatusToWinError(_In_ NTSTATUS Status)
ULONG None advapi32.PerfDecrementULongCounterValue(_In_ HANDLE hProvider,_In_ PPERF_COUNTERSET_INSTANCE pInstance,_In_ ULONG CounterId,_In_ ULONG lValue)
ULONG None advapi32.PerfDecrementULongLongCounterValue(_In_ HANDLE hProvider,_In_ PPERF_COUNTERSET_INSTANCE pInstance,_In_ ULONG CounterId,_In_ ULONGLONG llValue)
ULONG None advapi32.PerfDeleteInstance(_In_ HANDLE hProvider,_In_ PPERF_COUNTERSET_INSTANCE InstanceBlock)
ULONG None advapi32.PerfIncrementULongCounterValue(_In_ HANDLE hProvider,_In_ PPERF_COUNTERSET_INSTANCE pInstance,_In_ ULONG CounterId,_In_ ULONG lValue)
ULONG None advapi32.PerfIncrementULongLongCounterValue(_In_ HANDLE hProvider,_In_ PPERF_COUNTERSET_INSTANCE pInstance,_In_ ULONG CounterId,_In_ ULONGLONG llValue)
ULONG None advapi32.PerfSetCounterRefValue(_In_ HANDLE hProvider,_In_ PPERF_COUNTERSET_INSTANCE pInstance,_In_ ULONG CounterId,_In_ PVOID lpAddr)
ULONG None advapi32.PerfSetCounterSetInfo(_In_ HANDLE hProvider,_In_ PPERF_COUNTERSET_INFO pTemplate,_In_ ULONG dwTemplateSize)
ULONG None advapi32.PerfSetULongCounterValue(_In_ HANDLE hProvider,_In_ PPERF_COUNTERSET_INSTANCE pInstance,_In_ ULONG CounterId,_In_ ULONG lValue)
ULONG None advapi32.PerfSetULongLongCounterValue(_In_ HANDLE hProvider,_In_ PPERF_COUNTERSET_INSTANCE pInstance,_In_ ULONG CounterId,_In_ ULONGLONG llValue)
ULONG None advapi32.PerfStartProviderEx(_In_ LPGUID ProviderGuid,_In_opt_ PPERF_PROVIDER_CONTEXT ProviderContext,_Out_ HANDLE *phProvider)
ULONG None advapi32.PerfStartProvider(_In_ LPGUID ProviderGuid,_In_opt_ PERFLIBREQUEST ControlCallback,_Out_ HANDLE *phProvider)
ULONG None advapi32.PerfStopProvider(_In_ HANDLE hProvider)
ULONG None advapi32.QueryTraceA(_In_ TRACEHANDLE SessionHandle,_In_ LPCTSTR SessionName,_Inout_ PEVENT_TRACE_PROPERTIES Properties)
ULONG None advapi32.QueryTrace(_In_ TRACEHANDLE SessionHandle,_In_ LPCTSTR SessionName,_Inout_ PEVENT_TRACE_PROPERTIES Properties)
ULONG None advapi32.QueryTraceW(_In_ TRACEHANDLE SessionHandle,_In_ LPCTSTR SessionName,_Inout_ PEVENT_TRACE_PROPERTIES Properties)
ULONG None advapi32.TraceEventInstance(_In_ TRACEHANDLE SessionHandle,_In_ PEVENT_INSTANCE_HEADER EventTrace,_In_ PEVENT_INSTANCE_INFO pInstInfo,_In_ PEVENT_INSTANCE_INFO pParentInstInfo)
ULONG None advapi32.TraceEvent(_In_ TRACEHANDLE SessionHandle,_In_ PEVENT_TRACE_HEADER EventTrace)
ULONG None advapi32.TraceMessage(_In_ TRACEHANDLE SessionHandle,_In_ ULONG MessageFlags,_In_ LPGUID MessageGuid,_In_ USHORT MessageNumber,... None None)
ULONG None advapi32.TraceMessageVa(_In_ TRACEHANDLE SessionHandle,_In_ ULONG MessageFlags,_In_ LPGUID MessageGuid,_In_ USHORT MessageNumber,_In_ va_list MessageArgList)
ULONG None advapi32.UnregisterTraceGuids(_In_ TRACEHANDLE RegistrationHandle)
ULONG None advapi32.UpdateTraceA(_In_ TRACEHANDLE SessionHandle,_In_ LPCTSTR SessionName,_Inout_ PEVENT_TRACE_PROPERTIES Properties)
ULONG None advapi32.UpdateTrace(_In_ TRACEHANDLE SessionHandle,_In_ LPCTSTR SessionName,_Inout_ PEVENT_TRACE_PROPERTIES Properties)
ULONG None advapi32.UpdateTraceW(_In_ TRACEHANDLE SessionHandle,_In_ LPCTSTR SessionName,_Inout_ PEVENT_TRACE_PROPERTIES Properties)
ULONG None httpapi.HttpAddUrl(_In_ HANDLE ReqQueueHandle,_In_ PCWSTR pFullyQualifiedUrl,PVOID pReserved None)
ULONG None httpapi.HttpCreateHttpHandle(_Out_ PHANDLE pReqQueueHandle,_Reserved_ ULONG Reserved)
ULONG None httpapi.HttpCreateRequestQueue(_In_ HTTPAPI_VERSION Version,_In_opt_ PCWSTR pName,_In_opt_ PSECURITY_ATTRIBUTES pSecurityAttributes,_In_opt_ ULONG Flags,_Out_ PHANDLE pReqQueueHandle)
ULONG None httpapi.HttpDeleteServiceConfiguration(_In_ HANDLE ServiceHandle,_In_ HTTP_SERVICE_CONFIG_ID ConfigId,_In_ PVOID pConfigInformation,_In_ ULONG ConfigInformationLength,_In_ LPOVERLAPPED pOverlapped)
ULONG None httpapi.HttpFlushResponseCache(_In_ HANDLE ReqQueueHandle,_In_ PCWSTR pUrlPrefix,_In_ ULONG Flags,_In_ LPOVERLAPPED pOverlapped)
ULONG None httpapi.HttpInitialize(_In_ HTTPAPI_VERSION Version,_In_ ULONG Flags,_Reserved_ PVOID pReserved)
ULONG None httpapi.HttpQueryServiceConfiguration(_In_ HANDLE ServiceHandle,_In_ HTTP_SERVICE_CONFIG_ID ConfigId,_In_opt_ PVOID pInputConfigInfo,_In_opt_ ULONG InputConfigInfoLength,_Inout_opt_ PVOID pOutputConfigInfo,_In_opt_ ULONG OutputConfigInfoLength,_Out_opt_ PULONG pReturnLength,_In_ LPOVERLAPPED pOverlapped)
ULONG None httpapi.HttpReceiveClientCertificate(_In_ HANDLE ReqQueueHandle,_In_ HTTP_CONNECTION_ID ConnectionId,_In_ ULONG Flags,_Out_ PHTTP_SSL_CLIENT_CERT_INFO pSslClientCertInfo,_In_ ULONG SslClientCertInfoSize,_Out_opt_ PULONG pBytesReceived,_In_opt_ LPOVERLAPPED pOverlapped)
ULONG None httpapi.HttpReceiveHttpRequest(_In_ HANDLE ReqQueueHandle,_In_ HTTP_REQUEST_ID RequestId,_In_ ULONG Flags,_Out_ PHTTP_REQUEST pRequestBuffer,_In_ ULONG RequestBufferLength,_Out_opt_ PULONG pBytesReceived,_In_opt_ LPOVERLAPPED pOverlapped)
ULONG None httpapi.HttpRemoveUrl(_In_ HANDLE ReqQueueHandle,_In_ PCWSTR pFullyQualifiedUrl)
ULONG None httpapi.HttpSendHttpResponse(_In_ HANDLE ReqQueueHandle,_In_ HTTP_REQUEST_ID RequestId,_In_ ULONG Flags,_In_ PHTTP_RESPONSE pHttpResponse,_In_opt_ PHTTP_CACHE_POLICY pCachePolicy,_Out_ PULONG pBytesSent,_In_ PVOID pReserved2,_In_ ULONG Reserved3,_In_ LPOVERLAPPED pOverlapped,_In_opt_ PHTTP_LOG_DATA pLogData)
ULONG None httpapi.HttpSendResponseEntityBody(_In_ HANDLE ReqQueueHandle,_In_ HTTP_REQUEST_ID RequestId,_In_ ULONG Flags,_In_ USHORT EntityChunkCount,_In_ PHTTP_DATA_CHUNK pEntityChunks,_Out_ PULONG pBytesSent,_In_ PVOID pReserved1,_In_ ULONG Reserved2,_In_ LPOVERLAPPED pOverlapped,_In_opt_ PHTTP_LOG_DATA pLogData)
ULONG None httpapi.HttpSetServiceConfiguration(_In_ HANDLE ServiceHandle,_In_ HTTP_SERVICE_CONFIG_ID ConfigId,_In_ PVOID pConfigInformation,_In_ ULONG ConfigInformationLength,_In_ LPOVERLAPPED pOverlapped)
ULONG None mswsock.RIODequeueCompletion(_In_ RIO_CQ CQ,_Out_ PRIORESULT Array,_In_ ULONG ArraySize)
ULONG None None.AddRef(LPUNKNWON ps None)
ULONG None None.DrvDitherColor(_In_ DHPDEV dhpdev,_In_ ULONG iMode,_In_ ULONG rgb,_Inout_ ULONG *pul)
ULONG None None.DrvSetPointerShape(_In_ SURFOBJ *pso,_In_ SURFOBJ *psoMask,_In_ SURFOBJ *psoColor,_In_ XLATEOBJ *pxlo,_In_ LONG xHot,_In_ LONG yHot,_In_ LONG x,_In_ LONG y,_In_ RECTL *prcl,_In_ FLONG fl)
ULONG None None.EngGetLastError(void None None)
ULONG None None.ExGetExclusiveWaiterCount(_In_ PERESOURCE Resource)
ULONG None None.ExGetSharedWaiterCount(_In_ PERESOURCE Resource)
ULONG None None.ExIsResourceAcquiredLite(_In_ PERESOURCE Resource)
ULONG None None.ExIsResourceAcquiredSharedLite(_In_ PERESOURCE Resource)
ULONG None None.ExSetTimerResolution(_In_ ULONG DesiredTime,_In_ BOOLEAN SetResolution)
ULONG None None.GET_ISO_URB_SIZE([in] ULONG NumberOfPackets)
ULONG None None.IoGetFunctionCodeFromCtlCode(_In_ ULONG ControlCode)
ULONG None None.IsReparseTagMicrosoft(_In_ ULONG _tag)
ULONG None None.IsReparseTagMicrosoft(ULONG _tag None)
ULONG None None.IsReparseTagNameSurrogate(ULONG _tag None)
ULONG None None.KeQueryActiveProcessorCountEx(_In_ USHORT GroupNumber)
ULONG None None.KeQueryActiveProcessorCount(_Out_opt_ PKAFFINITY ActiveProcessors)
ULONG None None.KeQueryMaximumProcessorCountEx(_In_ USHORT GroupNumber)
ULONG None None.KeQueryMaximumProcessorCount(void None None)
ULONG None None.KeQueryRuntimeThread(_In_ PKTHREAD Thread,_Out_ PULONG UserTime)
ULONG None None.KeQueryTimeIncrement(void None None)
ULONG None None.KsDiscard(_In_ KSxxx Object,_In_ PVOID Pointer)
ULONG None None.KsRemoveItemFromObjectBag(_In_ KSOBJECT_BAG ObjectBag,_In_ PVOID Item,_In_ BOOLEAN Free)
ULONG None None.ldap_open_fast_bind_session(LPTSTR pHostName None,PLDAP pSession None)
ULONG None None.ReadDmaCounter(_In_ PDMA_ADAPTER DmaAdapter)
ULONG None None.RKeyCloseKeyService(_In_ KEYSVCC_HANDLE hKeySvcCli,_Inout_ void *pReserved)
ULONG None None.RKeyOpenKeyService(_In_ LPSTR pszMachineName,_In_ KEYSVC_TYPE OwnerType,_In_ LPWSTR pwszOwnerName,_In_ void *pAuthentication,_Inout_ void *pReserved,_Out_ KEYSVCC_HANDLE *phKeySvcCli)
ULONG None None.RKeyPFXInstall(_In_ KEYSVCC_HANDLE hKeySvcCli,_In_ PKEYSVC_BLOB pPFX,_In_ PKEYSVC_UNICODE_STRING pPassword,_In_ ULONG ulFlags)
ULONG None None.RtlAnsiStringToUnicodeSize(_In_ PANSI_STRING AnsiString)
ULONG None None.RtlLengthSecurityDescriptor(_In_ PSECURITY_DESCRIPTOR SecurityDescriptor)
ULONG None None.RtlLengthSid(_In_ PSID Sid)
ULONG None None.ScsiPortGetBusData(_In_ PVOID DeviceExtension,_In_ ULONG BusDataType,_In_ ULONG SystemIoBusNumber,_In_ ULONG SlotNumber,_In_ PVOID Buffer,_In_ ULONG Length)
ulong None None.ToUInt64(IFormatProvider provider None)
ULONG None None.WdfCmResourceListGetCount(_In_ WDFCMRESLIST List)
ULONG None None.WdfCollectionGetCount(_In_ WDFCOLLECTION Collection)
ULONG None None.WdfDeviceGetAlignmentRequirement(_In_ WDFDEVICE Device)
ULONG None None.WdfDeviceGetCharacteristics(_In_ WDFDEVICE Device)
ULONG None None.WdfFileObjectGetFlags(_In_ WDFFILEOBJECT FileObject)
ULONG None None.WdfIoResourceListGetCount(_In_ WDFIORESLIST ResourceList)
ULONG None None.WdfIoResourceRequirementsListGetCount(_In_ WDFIORESREQLIST RequirementsList)
ULONG None None.WdfPreDeviceInstallEx(_In_ LPCWSTR InfPath,_In_opt_ LPCWSTR InfSectionName,_In_ PWDF_COINSTALLER_INSTALL_OPTIONS ClientOptions)
ULONG None None.WsCountOf([in] arrayName None)
ULONG None ole32.CoAddRefServerProcess(void None None)
ULONG None ole32.CoReleaseServerProcess(void None None)
ULONG None propsys.PropVariantGetElementCount(_In_ REFPROPVARIANT propvar)
ULONG None propsys.PropVariantToUInt32WithDefault(_In_ REFPROPVARIANT propvarIn,_In_ ULONG ulDefault)
ULONG None propsys.VariantGetElementCount(_In_ REFVARIANT varIn)
ULONG None propsys.VariantToUInt32WithDefault(_In_ REFVARIANT varIn,_In_ ULONG ulDefault)
ULONG None sechost.CloseTrace(_In_ TRACEHANDLE TraceHandle)
ULONG None sechost.ControlTraceA(_In_ TRACEHANDLE SessionHandle,_In_ LPCTSTR SessionName,_Inout_ PEVENT_TRACE_PROPERTIES Properties,_In_ ULONG ControlCode)
ULONG None sechost.ControlTrace(_In_ TRACEHANDLE SessionHandle,_In_ LPCTSTR SessionName,_Inout_ PEVENT_TRACE_PROPERTIES Properties,_In_ ULONG ControlCode)
ULONG None sechost.ControlTraceW(_In_ TRACEHANDLE SessionHandle,_In_ LPCTSTR SessionName,_Inout_ PEVENT_TRACE_PROPERTIES Properties,_In_ ULONG ControlCode)
ULONG None sechost.EnableTraceEx2(_In_ TRACEHANDLE TraceHandle,_In_ LPCGUID ProviderId,_In_ ULONG ControlCode,_In_ UCHAR Level,_In_ ULONGLONG MatchAnyKeyword,_In_ ULONGLONG MatchAllKeyword,_In_ ULONG Timeout,_In_opt_ PENABLE_TRACE_PARAMETERS EnableParameters)
ULONG None sechost.EventAccessControl(_In_ LPGUID Guid,_In_ ULONG Operation,_In_ PSID Sid,_In_ ULONG Rights,_In_ BOOLEAN AllowOrDeny)
ULONG None sechost.EventAccessRemove(_In_ LPGUID Guid)
ULONG None sechost.ProcessTrace(_In_ PTRACEHANDLE HandleArray,_In_ ULONG HandleCount,_In_ LPFILETIME StartTime,_In_ LPFILETIME EndTime)
ULONG None sechost.QueryAllTracesA(_Out_ PEVENT_TRACE_PROPERTIES *PropertyArray,_In_ ULONG PropertyArrayCount,_Out_ PULONG SessionCount)
ULONG None sechost.QueryAllTraces(_Out_ PEVENT_TRACE_PROPERTIES *PropertyArray,_In_ ULONG PropertyArrayCount,_Out_ PULONG SessionCount)
ULONG None sechost.QueryAllTracesW(_Out_ PEVENT_TRACE_PROPERTIES *PropertyArray,_In_ ULONG PropertyArrayCount,_Out_ PULONG SessionCount)
ULONG None sechost.RegisterTraceGuidsA(_In_ WMIDPREQUEST RequestAddress,_In_ PVOID RequestContext,_In_ LPCGUID ControlGuid,_In_ ULONG GuidCount,_Inout_ PTRACE_GUID_REGISTRATION TraceGuidReg,_In_ LPCTSTR MofImagePath,_In_ LPCTSTR MofResourceName,_Out_ PTRACEHANDLE RegistrationHandle)
ULONG None sechost.RegisterTraceGuids(_In_ WMIDPREQUEST RequestAddress,_In_ PVOID RequestContext,_In_ LPCGUID ControlGuid,_In_ ULONG GuidCount,_Inout_ PTRACE_GUID_REGISTRATION TraceGuidReg,_In_ LPCTSTR MofImagePath,_In_ LPCTSTR MofResourceName,_Out_ PTRACEHANDLE RegistrationHandle)
ULONG None sechost.RegisterTraceGuidsW(_In_ WMIDPREQUEST RequestAddress,_In_ PVOID RequestContext,_In_ LPCGUID ControlGuid,_In_ ULONG GuidCount,_Inout_ PTRACE_GUID_REGISTRATION TraceGuidReg,_In_ LPCTSTR MofImagePath,_In_ LPCTSTR MofResourceName,_Out_ PTRACEHANDLE RegistrationHandle)
ULONG None sechost.RemoveTraceCallback(_In_ LPCGUID pGuid)
ULONG None sechost.SetTraceCallback(_In_ LPCGUID pGuid,_In_ PEVENT_CALLBACK EventCallback)
ULONG None sechost.StartTraceA(_Out_ PTRACEHANDLE SessionHandle,_In_ LPCTSTR SessionName,_Inout_ PEVENT_TRACE_PROPERTIES Properties)
ULONG None sechost.StartTrace(_Out_ PTRACEHANDLE SessionHandle,_In_ LPCTSTR SessionName,_Inout_ PEVENT_TRACE_PROPERTIES Properties)
ULONG None sechost.StartTraceW(_Out_ PTRACEHANDLE SessionHandle,_In_ LPCTSTR SessionName,_Inout_ PEVENT_TRACE_PROPERTIES Properties)
ULONG None sechost.StopTraceA(_In_ TRACEHANDLE SessionHandle,_In_ LPCTSTR SessionName,_Out_ PEVENT_TRACE_PROPERTIES Properties)
ULONG None sechost.StopTrace(_In_ TRACEHANDLE SessionHandle,_In_ LPCTSTR SessionName,_Out_ PEVENT_TRACE_PROPERTIES Properties)
ULONG None sechost.StopTraceW(_In_ TRACEHANDLE SessionHandle,_In_ LPCTSTR SessionName,_Out_ PEVENT_TRACE_PROPERTIES Properties)
ULONG None tdh.TdhCloseDecodingHandle(_In_ TDH_HANDLE Handle)
ULONG None tdh.TdhGetDecodingParameter(_In_ TDH_HANDLE Handle,_Inout_ PTDH_CONTEXT TdhContext)
ULONG None tdh.TdhGetWppMessage(_In_ TDH_HANDLE Handle,_In_ PEVENT_RECORD EventRecord,_Inout_ PULONG BufferSize,_Out_ PBYTE Buffer)
ULONG None tdh.TdhGetWppProperty(_In_ TDH_HANDLE Handle,_In_ PEVENT_RECORD EventRecord,_In_ PWSTR PropertyName,_Inout_ PULONG BufferSize,_Out_ PBYTE Buffer)
ULONG None tdh.TdhLoadManifestFromBinary(_In_ PWSTR BinaryPath)
ULONG None tdh.TdhOpenDecodingHandle(_Out_ PTDH_HANDLE Handle)
ULONG None tdh.TdhSetDecodingParameter(_In_ TDH_HANDLE Handle,_In_ PTDH_CONTEXT TdhContext)
ULONG None traffic.TcAddFilter(_In_ HANDLE FlowHandle,_In_ PTC_GEN_FILTER pGenericFilter,_Out_ PHANDLE pFilterHandle)
ULONG None traffic.TcCloseInterface(_In_ HANDLE IfcHandle)
ULONG None traffic.TcDeleteFilter(_In_ HANDLE FilterHandle)
ULONG None traffic.TcDeleteFlow(_In_ HANDLE FlowHandle)
ULONG None traffic.TcDeregisterClient(_In_ HANDLE ClientHandle)
ULONG None traffic.TcEnumerateFlows(_In_ HANDLE IfcHandle,_Inout_ PHANDLE pEnumToken,_Inout_ PULONG pFlowCount,_Inout_ PULONG pBufSize,_Out_ PENUMERATION_BUFFER Buffer)
ULONG None traffic.TcEnumerateInterfaces(_In_ HANDLE ClientHandle,_Inout_ PULONG pBufferSize,_Out_ PTC_IFC_DESCRIPTOR InterfaceBuffer)
ULONG None traffic.TcModifyFlow(_In_ HANDLE FlowHandle,_In_ PTC_GEN_FLOW pGenericFlow)
ULONG None traffic.TcQueryInterface(_In_ HANDLE IfcHandle,_In_ LPGUID pGuidParam,_In_ BOOLEAN NotifyChange,_Inout_ PULONG BufferSize,_Out_ PVOID Buffer)
ULONG None traffic.TcSetFlowA(_In_ LPTSTR pFlowName,_In_ LPGUID pGuidParam,_In_ ULONG BufferSize,_In_ PVOID Buffer)
ULONG None traffic.TcSetFlow(_In_ LPTSTR pFlowName,_In_ LPGUID pGuidParam,_In_ ULONG BufferSize,_In_ PVOID Buffer)
ULONG None traffic.TcSetFlowW(_In_ LPTSTR pFlowName,_In_ LPGUID pGuidParam,_In_ ULONG BufferSize,_In_ PVOID Buffer)
ULONG None traffic.TcSetInterface(_In_ HANDLE IfcHandle,_In_ LPGUID pGuidParam,_In_ ULONG BufferSize,_In_ PVOID Buffer)
ULONG None traffic.TcSetSocketFlow(_In_ HANDLE SocketHandle,_In_ HANDLE FlowHandle)
ULONG None twinapi.core.RegisterAppStateChangeNotification(_In_ PAPPSTATE_CHANGE_ROUTINE Routine,_In_opt_ PVOID Context,_Out_ PAPPSTATE_REGISTRATION *Registration)
ULONG None wldap32.ber_first_element(_In_ BerElement *pBerElement,_Out_ ULONG *pLen,_Out_ CHAR **ppOpaque)
ULONG None wldap32.ber_next_element(_In_ BerElement *pBerElement,_Inout_ ULONG *pLen,_Inout_ CHAR *opaque)
ULONG None wldap32.ber_peek_tag(_In_ BerElement *pBerElement,_Out_ ULONG *pLen)
ULONG None wldap32.ber_skip_tag(_In_ BerElement *pBerElement,_Out_ ULONG *pLen)
ULONG None wldap32.ldap_abandon(_In_ LDAP *ld,_In_ ULONG msgid)
ULONG None wldap32.ldap_addA(_In_ LDAP *ld,_In_ PCHAR dn,_In_ LDAPMod *attrs[])
ULONG None wldap32.ldap_add_extA(_In_ LDAP *ld,_In_ PCHAR dn,_In_ LDAPMod *attrs[],_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls,_Out_ ULONG *MessageNumber)
ULONG None wldap32.ldap_add_ext(_In_ LDAP *ld,_In_ PCHAR dn,_In_ LDAPMod *attrs[],_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls,_Out_ ULONG *MessageNumber)
ULONG None wldap32.ldap_add_ext_sA(_In_ LDAP *ld,_In_ PCHAR dn,_In_ LDAPMod *attrs[],_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls)
ULONG None wldap32.ldap_add_ext_s(_In_ LDAP *ld,_In_ PCHAR dn,_In_ LDAPMod *attrs[],_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls)
ULONG None wldap32.ldap_add_ext_sW(_In_ LDAP *ld,_In_ PCHAR dn,_In_ LDAPMod *attrs[],_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls)
ULONG None wldap32.ldap_add_extW(_In_ LDAP *ld,_In_ PCHAR dn,_In_ LDAPMod *attrs[],_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls,_Out_ ULONG *MessageNumber)
ULONG None wldap32.ldap_add(_In_ LDAP *ld,_In_ PCHAR dn,_In_ LDAPMod *attrs[])
ULONG None wldap32.ldap_add_sA(_In_ LDAP *ld,_In_ PCHAR dn,_In_ LDAPMod *attrs[])
ULONG None wldap32.ldap_add_s(_In_ LDAP *ld,_In_ PCHAR dn,_In_ LDAPMod *attrs[])
ULONG None wldap32.ldap_add_sW(_In_ LDAP *ld,_In_ PCHAR dn,_In_ LDAPMod *attrs[])
ULONG None wldap32.ldap_addW(_In_ LDAP *ld,_In_ PCHAR dn,_In_ LDAPMod *attrs[])
ULONG None wldap32.ldap_bindA(_In_ LDAP *ld,_In_ PCHAR dn,_In_ PCHAR cred,_In_ ULONG method)
ULONG None wldap32.ldap_bind(_In_ LDAP *ld,_In_ PCHAR dn,_In_ PCHAR cred,_In_ ULONG method)
ULONG None wldap32.ldap_bind_sA(_In_ LDAP *ld,_In_ PCHAR dn,_In_ PCHAR cred,_In_ ULONG method)
ULONG None wldap32.ldap_bind_s(_In_ LDAP *ld,_In_ PCHAR dn,_In_ PCHAR cred,_In_ ULONG method)
ULONG None wldap32.ldap_bind_sW(_In_ LDAP *ld,_In_ PCHAR dn,_In_ PCHAR cred,_In_ ULONG method)
ULONG None wldap32.ldap_bindW(_In_ LDAP *ld,_In_ PCHAR dn,_In_ PCHAR cred,_In_ ULONG method)
ULONG None wldap32.ldap_check_filterA(_In_ LDAP *ld,_In_ PWCHAR SearchFilter)
ULONG None wldap32.ldap_check_filter(_In_ LDAP *ld,_In_ PWCHAR SearchFilter)
ULONG None wldap32.ldap_check_filterW(_In_ LDAP *ld,_In_ PWCHAR SearchFilter)
ULONG None wldap32.ldap_close_extended_op(_In_ LDAP *ld,_In_ ULONG MessageNumber)
ULONG None wldap32.ldap_compareA(_In_ LDAP *ld,_In_ PCHAR dn,_In_ PCHAR attr,_In_ PCHAR value)
ULONG None wldap32.ldap_compare(_In_ LDAP *ld,_In_ PCHAR dn,_In_ PCHAR attr,_In_ PCHAR value)
ULONG None wldap32.ldap_compare_sA(_In_ LDAP *ld,_In_ PCHAR dn,_In_ PCHAR attr,_In_ PCHAR value)
ULONG None wldap32.ldap_compare_s(_In_ LDAP *ld,_In_ PCHAR dn,_In_ PCHAR attr,_In_ PCHAR value)
ULONG None wldap32.ldap_compare_sW(_In_ LDAP *ld,_In_ PCHAR dn,_In_ PCHAR attr,_In_ PCHAR value)
ULONG None wldap32.ldap_compareW(_In_ LDAP *ld,_In_ PCHAR dn,_In_ PCHAR attr,_In_ PCHAR value)
ULONG None wldap32.ldap_connect(_In_ LDAP *ld,_In_ LDAP_TIMEVAL *timeout)
ULONG None wldap32.ldap_control_freeA(_In_ LDAPControl *Control)
ULONG None wldap32.ldap_control_free(_In_ LDAPControl *Control)
ULONG None wldap32.ldap_control_freeW(_In_ LDAPControl *Control)
ULONG None wldap32.ldap_controls_freeA(_In_ LDAPControl **Controls)
ULONG None wldap32.ldap_controls_free(_In_ LDAPControl **Controls)
ULONG None wldap32.ldap_controls_freeW(_In_ LDAPControl **Controls)
ULONG None wldap32.ldap_count_entries(_In_ LDAP *ld,_In_ LDAPMessage *res)
ULONG None wldap32.ldap_count_references(_In_ LDAP *ld,_In_ LDAPMessage *res)
ULONG None wldap32.ldap_count_valuesA(_In_ PCHAR *vals)
ULONG None wldap32.ldap_count_values(_In_ PCHAR *vals)
ULONG None wldap32.ldap_count_valuesW(_In_ PCHAR *vals)
ULONG None wldap32.ldap_create_sort_controlA(_In_ PLDAP ExternalHandle,_In_ PLDAPSortKey *SortKeys,_In_ UCHAR IsCritical,_Out_ PLDAPControl *Control)
ULONG None wldap32.ldap_create_sort_control(_In_ PLDAP ExternalHandle,_In_ PLDAPSortKey *SortKeys,_In_ UCHAR IsCritical,_Out_ PLDAPControl *Control)
ULONG None wldap32.ldap_create_sort_controlW(_In_ PLDAP ExternalHandle,_In_ PLDAPSortKey *SortKeys,_In_ UCHAR IsCritical,_Out_ PLDAPControl *Control)
ULONG None wldap32.ldap_deleteA(_In_ LDAP *ld,_In_ PCHAR dn)
ULONG None wldap32.ldap_delete_extA(_In_ LDAP *ld,_In_ PCHAR dn,_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls,_Out_ ULONG *MessageNumber)
ULONG None wldap32.ldap_delete_ext(_In_ LDAP *ld,_In_ PCHAR dn,_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls,_Out_ ULONG *MessageNumber)
ULONG None wldap32.ldap_delete_ext_sA(_In_ LDAP *ld,_In_ PCHAR dn,_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls)
ULONG None wldap32.ldap_delete_ext_s(_In_ LDAP *ld,_In_ PCHAR dn,_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls)
ULONG None wldap32.ldap_delete_ext_sW(_In_ LDAP *ld,_In_ PCHAR dn,_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls)
ULONG None wldap32.ldap_delete_extW(_In_ LDAP *ld,_In_ PCHAR dn,_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls,_Out_ ULONG *MessageNumber)
ULONG None wldap32.ldap_delete(_In_ LDAP *ld,_In_ PCHAR dn)
ULONG None wldap32.ldap_delete_sA(_In_ LDAP *ld,_In_ PCHAR dn)
ULONG None wldap32.ldap_delete_s(_In_ LDAP *ld,_In_ PCHAR dn)
ULONG None wldap32.ldap_delete_sW(_In_ LDAP *ld,_In_ PCHAR dn)
ULONG None wldap32.ldap_deleteW(_In_ LDAP *ld,_In_ PCHAR dn)
ULONG None wldap32.ldap_encode_sort_controlA(_In_ PLDAP ExternalHandle,_In_ PLDAPSortKey *SortKeys,_Out_ PLDAPControl Control,_In_ BOOLEAN IsCritical)
ULONG None wldap32.ldap_encode_sort_control(_In_ PLDAP ExternalHandle,_In_ PLDAPSortKey *SortKeys,_Out_ PLDAPControl Control,_In_ BOOLEAN IsCritical)
ULONG None wldap32.ldap_encode_sort_controlW(_In_ PLDAP ExternalHandle,_In_ PLDAPSortKey *SortKeys,_Out_ PLDAPControl Control,_In_ BOOLEAN IsCritical)
ULONG None wldap32.ldap_escape_filter_elementA(_In_ PCHAR sourceFilterElement,_In_ ULONG sourceLength,_Out_ PCHAR destFilterElement,_In_ ULONG destLength)
ULONG None wldap32.ldap_escape_filter_element(_In_ PCHAR sourceFilterElement,_In_ ULONG sourceLength,_Out_ PCHAR destFilterElement,_In_ ULONG destLength)
ULONG None wldap32.ldap_escape_filter_elementW(_In_ PCHAR sourceFilterElement,_In_ ULONG sourceLength,_Out_ PCHAR destFilterElement,_In_ ULONG destLength)
ULONG None wldap32.LdapGetLastError(void None None)
ULONG None wldap32.ldap_get_next_page(_In_ PLDAP ExternalHandle,_In_ PLDAPSearch SearchHandle,_In_ ULONG PageSize,_Out_ ULONG *MessageNumber)
ULONG None wldap32.ldap_get_option(_In_ LDAP *ld,_In_ int option,_Out_ void *outvalue)
ULONG None wldap32.ldap_get_optionW(_In_ LDAP *ld,_In_ int option,_Out_ void *outvalue)
ULONG None wldap32.ldap_get_paged_count(_In_ PLDAP ExternalHandle,_In_ PLDAPSearch SearchBlock,_Out_ ULONG *TotalCount,_Out_ PLDAPMessage Results)
ULONG None wldap32.LdapMapErrorToWin32(_In_ ULONG LdapError)
ULONG None wldap32.ldap_modifyA(_In_ LDAP *ld,_In_ PCHAR dn,_In_ LDAPMod *mods[])
ULONG None wldap32.ldap_modify_extA(_In_ LDAP *ld,_In_ PCHAR dn,_In_ LDAPMod *mods[],_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls,_Out_ ULONG *MessageNumber)
ULONG None wldap32.ldap_modify_ext(_In_ LDAP *ld,_In_ PCHAR dn,_In_ LDAPMod *mods[],_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls,_Out_ ULONG *MessageNumber)
ULONG None wldap32.ldap_modify_ext_sA(_In_ LDAP *ld,_In_ PCHAR dn,_In_ LDAPMod *mods[],_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls)
ULONG None wldap32.ldap_modify_ext_s(_In_ LDAP *ld,_In_ PCHAR dn,_In_ LDAPMod *mods[],_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls)
ULONG None wldap32.ldap_modify_ext_sW(_In_ LDAP *ld,_In_ PCHAR dn,_In_ LDAPMod *mods[],_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls)
ULONG None wldap32.ldap_modify_extW(_In_ LDAP *ld,_In_ PCHAR dn,_In_ LDAPMod *mods[],_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls,_Out_ ULONG *MessageNumber)
ULONG None wldap32.ldap_modify(_In_ LDAP *ld,_In_ PCHAR dn,_In_ LDAPMod *mods[])
ULONG None wldap32.ldap_modify_sA(_In_ LDAP *ld,_In_ PCHAR dn,_In_ LDAPMod *mods[])
ULONG None wldap32.ldap_modify_s(_In_ LDAP *ld,_In_ PCHAR dn,_In_ LDAPMod *mods[])
ULONG None wldap32.ldap_modify_sW(_In_ LDAP *ld,_In_ PCHAR dn,_In_ LDAPMod *mods[])
ULONG None wldap32.ldap_modifyW(_In_ LDAP *ld,_In_ PCHAR dn,_In_ LDAPMod *mods[])
ULONG None wldap32.ldap_modrdn2A(_In_ LDAP *ExternalHandle,_In_ PCHAR DistinguishedName,_In_ PCHAR NewDistinguishedName,_In_ INT DeleteOldRdn)
ULONG None wldap32.ldap_modrdn2(_In_ LDAP *ExternalHandle,_In_ PCHAR DistinguishedName,_In_ PCHAR NewDistinguishedName,_In_ INT DeleteOldRdn)
ULONG None wldap32.ldap_modrdn2_sA(_In_ LDAP *ExternalHandle,_In_ PCHAR DistinguishedName,_In_ PCHAR NewDistinguishedName,_In_ INT DeleteOldRdn)
ULONG None wldap32.ldap_modrdn2_s(_In_ LDAP *ExternalHandle,_In_ PCHAR DistinguishedName,_In_ PCHAR NewDistinguishedName,_In_ INT DeleteOldRdn)
ULONG None wldap32.ldap_modrdn2_sW(_In_ LDAP *ExternalHandle,_In_ PCHAR DistinguishedName,_In_ PCHAR NewDistinguishedName,_In_ INT DeleteOldRdn)
ULONG None wldap32.ldap_modrdn2W(_In_ LDAP *ExternalHandle,_In_ PCHAR DistinguishedName,_In_ PCHAR NewDistinguishedName,_In_ INT DeleteOldRdn)
ULONG None wldap32.ldap_modrdnA(_In_ LDAP *ExternalHandle,_In_ PCHAR DistinguishedName,_Out_ PCHAR NewDistinguishedName)
ULONG None wldap32.ldap_modrdn(_In_ LDAP *ExternalHandle,_In_ PCHAR DistinguishedName,_Out_ PCHAR NewDistinguishedName)
ULONG None wldap32.ldap_modrdn_sA(_In_ LDAP *ExternalHandle,_In_ PCHAR DistinguishedName,_Out_ PCHAR NewDistinguishedName)
ULONG None wldap32.ldap_modrdn_s(_In_ LDAP *ExternalHandle,_In_ PCHAR DistinguishedName,_Out_ PCHAR NewDistinguishedName)
ULONG None wldap32.ldap_modrdn_sW(_In_ LDAP *ExternalHandle,_In_ PCHAR DistinguishedName,_Out_ PCHAR NewDistinguishedName)
ULONG None wldap32.ldap_modrdnW(_In_ LDAP *ExternalHandle,_In_ PCHAR DistinguishedName,_Out_ PCHAR NewDistinguishedName)
ULONG None wldap32.ldap_msgfree(_In_ LDAPMessage *res)
ULONG None wldap32.ldap_parse_referenceA(_In_ LDAP *Connection,_In_ LDAPMessage *ResultMessage,_Out_ PCHAR **Referrals)
ULONG None wldap32.ldap_parse_reference(_In_ LDAP *Connection,_In_ LDAPMessage *ResultMessage,_Out_ PCHAR **Referrals)
ULONG None wldap32.ldap_parse_referenceW(_In_ LDAP *Connection,_In_ LDAPMessage *ResultMessage,_Out_ PCHAR **Referrals)
ULONG None wldap32.ldap_parse_resultA(_In_ LDAP *Connection,_In_ LDAPMessage *ResultMessage,_Out_opt_ ULONG *ReturnCode,_Out_opt_ PWCHAR *MatchedDNs,_Out_opt_ PWCHAR *ErrorMessage,_Out_opt_ PWCHAR **Referrals,_Out_opt_ PLDAPControl **ServerControls,_In_ BOOLEAN Freeit)
ULONG None wldap32.ldap_parse_result(_In_ LDAP *Connection,_In_ LDAPMessage *ResultMessage,_Out_opt_ ULONG *ReturnCode,_Out_opt_ PWCHAR *MatchedDNs,_Out_opt_ PWCHAR *ErrorMessage,_Out_opt_ PWCHAR **Referrals,_Out_opt_ PLDAPControl **ServerControls,_In_ BOOLEAN Freeit)
ULONG None wldap32.ldap_parse_resultW(_In_ LDAP *Connection,_In_ LDAPMessage *ResultMessage,_Out_opt_ ULONG *ReturnCode,_Out_opt_ PWCHAR *MatchedDNs,_Out_opt_ PWCHAR *ErrorMessage,_Out_opt_ PWCHAR **Referrals,_Out_opt_ PLDAPControl **ServerControls,_In_ BOOLEAN Freeit)
ULONG None wldap32.ldap_parse_sort_controlA(_In_ PLDAP ExternalHandle,_In_ PLDAPControl *Control,_Out_ ULONG *Result,_Out_ PCHAR *Attribute)
ULONG None wldap32.ldap_parse_sort_control(_In_ PLDAP ExternalHandle,_In_ PLDAPControl *Control,_Out_ ULONG *Result,_Out_ PCHAR *Attribute)
ULONG None wldap32.ldap_parse_sort_controlW(_In_ PLDAP ExternalHandle,_In_ PLDAPControl *Control,_Out_ ULONG *Result,_Out_ PCHAR *Attribute)
ULONG None wldap32.ldap_rename_extA(_In_ LDAP *ld,_In_ PWCHAR dn,_In_ PWCHAR NewRDN,_In_ PWCHAR NewParent,_In_ INT DeleteOldRdn,_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls,_Out_ ULONG *MessageNumber)
ULONG None wldap32.ldap_rename_ext(_In_ LDAP *ld,_In_ PWCHAR dn,_In_ PWCHAR NewRDN,_In_ PWCHAR NewParent,_In_ INT DeleteOldRdn,_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls,_Out_ ULONG *MessageNumber)
ULONG None wldap32.ldap_rename_ext_sA(_In_ LDAP *ld,_In_ PWCHAR dn,_In_ PWCHAR NewRDN,_In_ PWCHAR NewParent,_In_ INT DeleteOldRdn,_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls)
ULONG None wldap32.ldap_rename_ext_s(_In_ LDAP *ld,_In_ PWCHAR dn,_In_ PWCHAR NewRDN,_In_ PWCHAR NewParent,_In_ INT DeleteOldRdn,_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls)
ULONG None wldap32.ldap_rename_ext_sW(_In_ LDAP *ld,_In_ PWCHAR dn,_In_ PWCHAR NewRDN,_In_ PWCHAR NewParent,_In_ INT DeleteOldRdn,_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls)
ULONG None wldap32.ldap_rename_extW(_In_ LDAP *ld,_In_ PWCHAR dn,_In_ PWCHAR NewRDN,_In_ PWCHAR NewParent,_In_ INT DeleteOldRdn,_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls,_Out_ ULONG *MessageNumber)
ULONG None wldap32.ldap_result2error(_In_ LDAP *ld,_In_ LDAPMessage *res,_In_ ULONG freeit)
ULONG None wldap32.ldap_search_abandon_page(_In_ PLDAP ExternalHandle,_In_ PLDAPSearch SearchBlock)
ULONG None wldap32.ldap_searchA(_In_ LDAP *ld,_In_ PCHAR base,_In_ ULONG scope,_In_ PCHAR filter,_In_ PCHAR attrs[],_In_ ULONG attrsonly)
ULONG None wldap32.ldap_search_extA(_In_ LDAP *ld,_In_ PCHAR base,_In_ ULONG scope,_In_ PCHAR filter,_In_ PCHAR attrs[],_In_ ULONG attrsonly,_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls,_In_ ULONG TimeLimit,_In_ ULONG SizeLimit,_Out_ ULONG *MessageNumber)
ULONG None wldap32.ldap_search_ext(_In_ LDAP *ld,_In_ PCHAR base,_In_ ULONG scope,_In_ PCHAR filter,_In_ PCHAR attrs[],_In_ ULONG attrsonly,_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls,_In_ ULONG TimeLimit,_In_ ULONG SizeLimit,_Out_ ULONG *MessageNumber)
ULONG None wldap32.ldap_search_extW(_In_ LDAP *ld,_In_ PCHAR base,_In_ ULONG scope,_In_ PCHAR filter,_In_ PCHAR attrs[],_In_ ULONG attrsonly,_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls,_In_ ULONG TimeLimit,_In_ ULONG SizeLimit,_Out_ ULONG *MessageNumber)
ULONG None wldap32.ldap_search(_In_ LDAP *ld,_In_ PCHAR base,_In_ ULONG scope,_In_ PCHAR filter,_In_ PCHAR attrs[],_In_ ULONG attrsonly)
ULONG None wldap32.ldap_search_sA(_In_ LDAP *ld,_In_ PCHAR base,_In_ ULONG scope,_In_ PCHAR filter,_In_ PCHAR attrs[],_In_ ULONG attrsonly,_Out_ LDAPMessage **res)
ULONG None wldap32.ldap_search_s(_In_ LDAP *ld,_In_ PCHAR base,_In_ ULONG scope,_In_ PCHAR filter,_In_ PCHAR attrs[],_In_ ULONG attrsonly,_Out_ LDAPMessage **res)
ULONG None wldap32.ldap_search_sW(_In_ LDAP *ld,_In_ PCHAR base,_In_ ULONG scope,_In_ PCHAR filter,_In_ PCHAR attrs[],_In_ ULONG attrsonly,_Out_ LDAPMessage **res)
ULONG None wldap32.ldap_searchW(_In_ LDAP *ld,_In_ PCHAR base,_In_ ULONG scope,_In_ PCHAR filter,_In_ PCHAR attrs[],_In_ ULONG attrsonly)
ULONG None wldap32.ldap_set_option(_In_ LDAP *ld,_In_ int option,_In_ void *invalue)
ULONG None wldap32.ldap_set_optionW(_In_ LDAP *ld,_In_ int option,_In_ void *invalue)
ULONG None wldap32.ldap_simple_bindA(_In_ LDAP *ld,_In_ PCHAR dn,_In_ PCHAR passwd)
ULONG None wldap32.ldap_simple_bind(_In_ LDAP *ld,_In_ PCHAR dn,_In_ PCHAR passwd)
ULONG None wldap32.ldap_simple_bind_sA(_In_ LDAP *ld,_In_ PCHAR dn,_In_ PCHAR passwd)
ULONG None wldap32.ldap_simple_bind_s(_In_ LDAP *ld,_In_ PCHAR dn,_In_ PCHAR passwd)
ULONG None wldap32.ldap_simple_bind_sW(_In_ LDAP *ld,_In_ PCHAR dn,_In_ PCHAR passwd)
ULONG None wldap32.ldap_simple_bindW(_In_ LDAP *ld,_In_ PCHAR dn,_In_ PCHAR passwd)
ULONG None wldap32.ldap_start_tls_sA(_In_ PLDAP ExternalHandle,_Out_ PULONG ServerReturnValue,_Out_ LDAPMessage **result,_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls)
ULONG None wldap32.ldap_start_tls_s(_In_ PLDAP ExternalHandle,_Out_ PULONG ServerReturnValue,_Out_ LDAPMessage **result,_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls)
ULONG None wldap32.ldap_start_tls_sW(_In_ PLDAP ExternalHandle,_Out_ PULONG ServerReturnValue,_Out_ LDAPMessage **result,_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls)
ULONG None wldap32.ldap_ufn2dnA(_In_ PCHAR ufn,_Out_ PCHAR *pDn)
ULONG None wldap32.ldap_ufn2dn(_In_ PCHAR ufn,_Out_ PCHAR *pDn)
ULONG None wldap32.ldap_ufn2dnW(_In_ PCHAR ufn,_Out_ PCHAR *pDn)
ULONG None wldap32.ldap_unbind(_In_ LDAP *ld)
ULONG None wldap32.ldap_unbind_s(_In_ LDAP *ld)
ULONG None wldap32.ldap_value_freeA(PCHAR *vals None)
ULONG None wldap32.ldap_value_free(PCHAR *vals None)
ULONG None wldap32.ldap_value_freeW(PCHAR *vals None)
ULONG None wudfx02000.WdfFileObjectGetInitiatorProcessId(_In_ WDFFILEOBJECT FileObject)
ULONG NTAPI ntdll.RtlGetSuiteMask(void None None)
ULONG_PTR None None.DrvLoadFontFile(ULONG cFiles None,ULONG_PTR *piFile None,PVOID *ppvView None,ULONG *pcjView None,DESIGNVECTOR *pdv None,ULONG ulLangID None,ULONG ulFastCheckSum None)
ULONG_PTR None None.WdfRequestGetInformation(_In_ WDFREQUEST Request)
ULONG_PTR WINAPI user32.SetClassLongPtrA(_In_ HWND hWnd,_In_ int nIndex,_In_ LONG_PTR dwNewLong)
ULONG_PTR WINAPI user32.SetClassLongPtr(_In_ HWND hWnd,_In_ int nIndex,_In_ LONG_PTR dwNewLong)
ULONG_PTR WINAPI user32.SetClassLongPtrW(_In_ HWND hWnd,_In_ int nIndex,_In_ LONG_PTR dwNewLong)
ULONG __stdcall tdh.TdhEnumerateProviderFieldInformation(_In_ LPGUID pGuid,_In_ EVENT_FIELD_TYPE EventFieldType,_Out_opt_ PPROVIDER_FIELD_INFOARRAY pBuffer,_Inout_ ULONG *pBufferSize)
ULONG __stdcall tdh.TdhEnumerateProviderFilters(_In_ LPGUID pGuid,_In_ ULONG TdhContextCount,_In_opt_ PTDH_CONTEXT pTdhContext,_In_ ULONG *FilterCount,_Out_opt_ PPROVIDER_FILTER_INFO *pBuffer,_Inout_ ULONG *pBufferSize)
ULONG __stdcall tdh.TdhEnumerateProviders(_Out_ PPROVIDER_ENUMERATION_INFO pBuffer,_Inout_ ULONG *pBufferSize)
ULONG __stdcall tdh.TdhGetEventInformation(_In_ PEVENT_RECORD pEvent,_In_ ULONG TdhContextCount,_In_ PTDH_CONTEXT pTdhContext,_Out_ PTRACE_EVENT_INFO pBuffer,_Inout_ ULONG *pBufferSize)
ULONG __stdcall tdh.TdhGetEventMapInformation(_In_ PEVENT_RECORD pEvent,_In_ LPWSTR pMapName,_Out_ PEVENT_MAP_INFO pBuffer,_Inout_ ULONG *pBufferSize)
ULONG __stdcall tdh.TdhGetProperty(_In_ PEVENT_RECORD pEvent,_In_ ULONG TdhContextCount,_In_ PTDH_CONTEXT pTdhContext,_In_ ULONG PropertyDataCount,_In_ PPROPERTY_DATA_DESCRIPTOR pPropertyData,_In_ ULONG BufferSize,_Out_ PBYTE pBuffer)
ULONG __stdcall tdh.TdhGetPropertySize(_In_ PEVENT_RECORD pEvent,_In_ ULONG TdhContextCount,_In_ PTDH_CONTEXT pTdhContext,_In_ ULONG PropertyDataCount,_In_ PPROPERTY_DATA_DESCRIPTOR pPropertyData,_Out_ ULONG *pPropertySize)
ULONG __stdcall tdh.TdhQueryProviderFieldInformation(_In_ LPGUID pGuid,_In_ ULONGLONG EventFieldValue,_In_ EVENT_FIELD_TYPE EventFieldType,_Out_ PPROVIDER_FIELD_INFOARRAY pBuffer,_Inout_ ULONG *pBufferSize)
ULONG STDMETHODCALLTYPE ole32.CStdAsyncStubBuffer2_Release(_In_ IRpcStubBuffer *pthis)
ULONG STDMETHODCALLTYPE ole32.CStdAsyncStubBuffer_AddRef(_In_ IRpcStubBuffer *pthis)
ULONG STDMETHODCALLTYPE ole32.CStdAsyncStubBuffer_Release(_In_ IRpcStubBuffer *pthis)
ULONG STDMETHODCALLTYPE ole32.CStdStubBuffer2_CountRefs(_In_ IRpcStubBuffer *pthis)
ULONG STDMETHODCALLTYPE rpcrt4.CStdStubBuffer_CountRefs(_In_ IRpcStubBuffer *This)
ULONG STDMETHODCALLTYPE rpcrt4.IUnknown_AddRef_Proxy(IUnknown __RPC_FAR *This)
ULONG STDMETHODCALLTYPE rpcrt4.IUnknown_Release_Proxy(IUnknown __RPC_FAR *This)
ULONG STDMETHODCALLTYPE rpcrt4.NdrCStdStubBuffer2_Release(_In_ IRpcStubBuffer *This,_In_ IPSFactoryBuffer *pPSF)
ULONG STDMETHODCALLTYPE rpcrt4.NdrCStdStubBuffer_Release(_In_ IRpcStubBuffer *This,_In_ IPSFactoryBuffer *pPSF)
ULONG TDHAPI tdh.TdhAggregatePayloadFilters(ULONG PayloadFilterCount None,PVOID PayloadFilterPtrs None,_In_opt_ PBOOLEAN EventMatchAllFlags,_Out_ PEVENT_FILTER_DESCRIPTOR EventFilterDescriptor)
ULONG TDHAPI tdh.TdhCleanupPayloadEventFilterDescriptor(_Inout_ PEVENT_FILTER_DESCRIPTOR PayloadEventFilterDescriptor)
ULONG TDHAPI tdh.TdhCreatePayloadFilter(_In_ LPGUID ProviderGuid,_In_ PCEVENT_DESCRIPTOR EventDescriptor,_In_ BOOLEAN EventMatchANY,_In_ ULONG PayloadPredicateCount,_In_ PPAYLOAD_FILTER_PREDICATE PayloadPredicates,_Out_ PVOID *PayloadFilter)
ULONG TDHAPI tdh.TdhDeletePayloadFilter(_Inout_ PVOID *PayloadFilterDescriptor)
ULONG TDHAPI tdh.TdhEnumerateManifestProviderEvents(_In_ LPGUID ProviderGuid,_Out_ PPROVIDER_EVENT_INFO ProviderInfo,_Inout_ ULONG *BufferSize)
ULONG TDHAPI tdh.TdhGetManifestEventInformation(_In_ LPGUID ProviderGuid,_In_ PEVENT_DESCRIPTOR EventDescriptor,_Out_ PTRACE_EVENT_INFO Buffer,_Inout_ ULONG *BufferSize)
ULONG WINAPI advapi32.EnumerateTraceGuidsEx(_In_ TRACE_QUERY_INFO_CLASS TraceQueryInfoClass,_In_ PVOID InBuffer,_In_ ULONG InBufferSize,_Out_ PVOID OutBuffer,_In_ ULONG OutBufferSize,_Out_ PULONG ReturnLength)
ULONG WINAPI advapi32.PerfAddCounters(_In_ HANDLE hQuery,_Inout_ PPERF_COUNTER_IDENTIFIER pCounters,DWORD cbCounters None)
ULONG WINAPI advapi32.PerfCloseQueryHandle(_In_ HANDLE hQuery)
ULONG WINAPI advapi32.PerfDeleteCounters(_In_ HANDLE hQuery,_Inout_ PPERF_COUNTER_IDENTIFIER pCounters,DWORD cbCounters None)
ULONG WINAPI advapi32.PerfEnumerateCounterSet(_In_opt_ LPCWSTR szMachine,_Out_opt_ LPGUID pCounterSetIds,DWORD cCounterSetIds None,_Out_ LPDWORD pcCounterSetIdsActual)
ULONG WINAPI advapi32.PerfEnumerateCounterSetInstances(_In_opt_ LPCWSTR szMachine,_In_ LPCGUID pCounterSetId,_Out_opt_ PPERF_INSTANCE_HEADER pInstances,DWORD cbInstances None,_Out_ LPDWORD pcbInstancesActual)
ULONG WINAPI advapi32.PerfOpenQueryHandle(_In_opt_ LPCWSTR szMachine,_Out_ HANDLE hQuery)
ULONG WINAPI advapi32.PerfQueryCounterData(_In_ HANDLE hQuery,_Out_opt_ PPERF_DATA_HEADER pCounterBlock,DWORD cbCounterBlock None,_Out_ LPDWORD pcbCounterBlockActual)
ULONG WINAPI advapi32.PerfQueryCounterInfo(_In_ HANDLE hQuery,_Out_opt_ PPERF_COUNTER_IDENTIFIER pCounters,DWORD cbCounters None,_Out_ LPDWORD pcbCountersActual)
ULONG WINAPI advapi32.PerfQueryCounterSetRegistrationInfo(_In_opt_ LPCWSTR szMachine,_In_ LPCGUID pCounterSetId,PerfRegInfoType requestCode None,DWORD requestLangId None,_Out_opt_ LPBYTE pbRegInfo,DWORD cbRegInfo None,_Out_ LPDWORD pcbRegInfoActual)
ULONG WINAPI advapi32.QueryTraceProcessingHandle(_In_ TRACEHANDLE ProcessingHandle,_In_ ETW_PROCESS_HANDLE_INFO_TYPE InformationClass,_In_opt_ PVOID InBuffer,_In_ ULONG InBufferSize,_Out_opt_ PVOID OutBuffer,_In_ ULONG OutBufferSize,_Out_ PULONG ReturnLength)
ULONG WINAPI dbghelp.SymGetFileLineOffsets64(_In_ HANDLE hProcess,_In_opt_ PCSTR ModuleName,_In_ PCSTR FileName,_Out_ PDWORD64 Buffer,_In_ ULONG BufferLines)
ULONG WINAPI httpapi.HttpUpdateServiceConfiguration(_Reserved_ HANDLE Handle,_In_ HTTP_SERVICE_CONFIG_ID ConfigId,_In_ PVOID ConfigInfo,_In_ ULONG ConfigInfoLength,_Reserved_ LPOVERLAPPED Overlapped)
ULONG WINAPI iphlpapi.CreatePersistentTcpPortReservation(_In_ USHORT StartPort,_In_ USHORT NumberOfPorts,_Out_ PULONG64 Token)
ULONG WINAPI iphlpapi.CreatePersistentUdpPortReservation(_In_ USHORT StartPort,_In_ USHORT NumberOfPorts,_Out_ PULONG64 Token)
ULONG WINAPI iphlpapi.DeletePersistentTcpPortReservation(_In_ USHORT StartPort,_In_ USHORT NumberOfPorts)
ULONG WINAPI iphlpapi.DeletePersistentUdpPortReservation(_In_ USHORT StartPort,_In_ USHORT NumberOfPorts)
ULONG WINAPI iphlpapi.GetAdaptersAddresses(_In_ ULONG Family,_In_ ULONG Flags,_In_ PVOID Reserved,_Inout_ PIP_ADAPTER_ADDRESSES AdapterAddresses,_Inout_ PULONG SizePointer)
ULONG WINAPI iphlpapi.GetPerTcp6ConnectionEStats(PMIB_TCP6ROW Row None,TCP_ESTATS_TYPE EstatsType None,_Out_ PUCHAR Rw,ULONG RwVersion None,ULONG RwSize None,_Out_ PUCHAR Ros,ULONG RosVersion None,ULONG RosSize None,_Out_ PUCHAR Rod,ULONG RodVersion None,ULONG RodSize None)
ULONG WINAPI iphlpapi.GetPerTcpConnectionEStats(PMIB_TCPROW Row None,TCP_ESTATS_TYPE EstatsType None,_Out_ PUCHAR Rw,ULONG RwVersion None,ULONG RwSize None,_Out_ PUCHAR Ros,ULONG RosVersion None,ULONG RosSize None,_Out_ PUCHAR Rod,ULONG RodVersion None,ULONG RodSize None)
ULONG WINAPI iphlpapi.GetTcp6Table2(_Out_ PMIB_TCP6TABLE2 TcpTable,_Inout_ PULONG SizePointer,_In_ BOOL Order)
ULONG WINAPI iphlpapi.GetTcp6Table(_Out_ PMIB_TCP6TABLE TcpTable,_Inout_ PULONG SizePointer,_In_ BOOL Order)
ULONG WINAPI iphlpapi.GetTcpTable2(_Out_ PMIB_TCPTABLE2 TcpTable,_Inout_ PULONG SizePointer,_In_ BOOL Order)
ULONG WINAPI iphlpapi.GetUdp6Table(_Out_ PMIB_UDP6TABLE Udp6Table,_Inout_ PULONG SizePointer,_In_ BOOL Order)
ULONG WINAPI iphlpapi.LookupPersistentTcpPortReservation(_In_ USHORT StartPort,_In_ USHORT NumberOfPorts,_Out_ PULONG64 Token)
ULONG WINAPI iphlpapi.LookupPersistentUdpPortReservation(_In_ USHORT StartPort,_In_ USHORT NumberOfPorts,_Out_ PULONG64 Token)
ULONG WINAPI iphlpapi.ResolveNeighbor(_In_ SOCKADDR *NetworkAddress,_Out_ PVOID PhysicalAddress,_Inout_ PULONG PhysicalAddressLength)
ULONG WINAPI iphlpapi.SetPerTcp6ConnectionEStats(PMIB_TCP6ROW Row None,TCP_ESTATS_TYPE EstatsType None,PUCHAR Rw None,ULONG RwVersion None,ULONG RwSize None,ULONG Offset None)
ULONG WINAPI iphlpapi.SetPerTcpConnectionEStats(PMIB_TCPROW Row None,TCP_ESTATS_TYPE EstatsType None,PUCHAR Rw None,ULONG RwVersion None,ULONG RwSize None,ULONG Offset None)
ULONG WINAPI kernel32.RemoveVectoredContinueHandler(_In_ PVOID Handler)
ULONG WINAPI kernel32.RemoveVectoredExceptionHandler(_In_ PVOID Handler)
ULONG WINAPI None.BufferCallback(_In_ PEVENT_TRACE_LOGFILE Buffer)
ULONG WINAPI None.ControlCallback(_In_ ULONG RequestCode,_In_ PVOID Buffer,_In_ ULONG BufferSize)
ULONG WINAPI None.ControlCallback(_In_ WMIDPREQUESTCODE RequestCode,_In_ PVOID Context,_In_ ULONG *Reserved,_In_ PVOID Buffer)
ULONG WINAPI None.CounterInitialize(__in_opt PERFLIBREQUEST NotificationCallback,__in_opt PERF_MEM_ALLOC MemoryAllocationFunction,__in_opt PERF_MEM_FREE MemoryFreeFunction,__inout_opt PVOID MemoryFunctionContext)
ULONG WINAPI None.CounterInitialize(void None None)
ULONG WINAPI ntdll.NtGetCurrentProcessorNumber(void None None)
ULONG WINAPI ntdll.RtlNtStatusToDosError(_In_ NTSTATUS Status)
ULONG WINAPI ntdll.RtlNtStatusToDosErrorNoTeb(_In_ NTSTATUS Status)
ULONG WINAPI sechost.TraceQueryInformation(_In_ TRACEHANDLE SessionHandle,_In_ TRACE_QUERY_INFO_CLASS InformationClass,_Out_ PVOID TraceInformation,_In_ ULONG InformationLength,_Out_opt_ PULONG ReturnLength)
ULONG WINAPI sechost.TraceSetInformation(_In_ TRACEHANDLE SessionHandle,_In_ TRACE_INFO_CLASS InformationClass,_In_ PVOID TraceInformation,_In_ ULONG InformationLength)
ULONG WINAPI tdh.TdhFormatProperty(_In_ PTRACE_EVENT_INFO EventInfo,_In_opt_ PEVENT_MAP_INFO MapInfo,_In_ ULONG PointerSize,_In_ USHORT PropertyInType,_In_ USHORT PropertyOutType,_In_ USHORT PropertyLength,_In_ USHORT UserDataLength,_In_ PBYTE UserData,_Inout_ PULONG BufferSize,_Out_opt_ PWCHAR Buffer,_Out_ PUSHORT UserDataConsumed)
ULONG WINAPI tdh.TdhLoadManifest(_In_ PWSTR Manifest)
ULONG WINAPI tdh.TdhUnloadManifest(_In_ PWSTR Manifest)
ULONG WINAPI wnvapi.WnvRequestNotification(HANDLE WnvHandle None,PWNV_NOTIFICATION_PARAM NotificationParam None,LPOVERLAPPED Overlapped None,PULONG BytesTransferred None)
u_long WSAAPI ws2_32.htonl(_In_ u_long hostlong)
u_long WSAAPI ws2_32.ntohl(_In_ u_long netlong)
ULPFRAME WINAPI nmapi.GetFrameFromFrameHandle(_In_ HFRAME hFrame)
unit32 None sppwmi.InstallProductKey([in] string ProductKey)
unsigned char None._interlockedbittestandset(long *a None,long b None)
unsigned int msi.MsiRecordClearData(_In_ MSIHANDLE hRecord)
unsigned int msi.MsiRecordGetFieldCount(_In_ MSIHANDLE hRecord)
unsigned int None._clear87(void None None)
unsigned int None._mbbtombc(unsigned int c)
unsigned int None._mbcjistojms(unsigned int c)
unsigned int None._mbctohira(unsigned int c)
unsigned int None._mbctolower(unsigned int c)
unsigned int None._mbctombb(unsigned int c)
unsigned long None.strtoul(const char *nptr,char **endptr None,int base None)
unsigned short propsys.PropVariantToUInt16WithDefault(_In_ REFPROPVARIANT propvarIn,_In_ USHORT uiDefault)
USBD_CONFIGURATION_HANDLE None None.WdfUsbTargetDeviceWdmGetConfigurationHandle(_In_ WDFUSBDEVICE UsbDevice)
USBD_PIPE_HANDLE None None.WdfUsbTargetPipeWdmGetPipeHandle(_In_ WDFUSBPIPE UsbPipe)
USERINFOSTATE None msi.MsiGetUserInfoA(_In_ LPCTSTR szProduct,_Out_ LPTSTR lpUserNameBuf,_Inout_ DWORD *pcchUserNameBuf,_Out_ LPTSTR lpOrgNameBuf,_Inout_ DWORD *pcchOrgNameBuf,_In_ LPTSTR lpSerialBuf,_Inout_ DWORD *pcchSerialBuf)
USERINFOSTATE None msi.MsiGetUserInfo(_In_ LPCTSTR szProduct,_Out_ LPTSTR lpUserNameBuf,_Inout_ DWORD *pcchUserNameBuf,_Out_ LPTSTR lpOrgNameBuf,_Inout_ DWORD *pcchOrgNameBuf,_In_ LPTSTR lpSerialBuf,_Inout_ DWORD *pcchSerialBuf)
USERINFOSTATE None msi.MsiGetUserInfoW(_In_ LPCTSTR szProduct,_Out_ LPTSTR lpUserNameBuf,_Inout_ DWORD *pcchUserNameBuf,_Out_ LPTSTR lpOrgNameBuf,_Inout_ DWORD *pcchOrgNameBuf,_In_ LPTSTR lpSerialBuf,_Inout_ DWORD *pcchSerialBuf)
USHORT None None.EventDescGetTask([in] PEVENT_DESCRIPTOR EventDescriptor)
ushort None None.ToUInt16(IFormatProvider provider None)
USHORT None propsys.VariantToUInt16WithDefault(_In_ REFVARIANT varIn,_In_ USHORT uiDefault)
USHORT WINAPI kernel32.CaptureStackBackTrace(_In_ ULONG FramesToSkip,_In_ ULONG FramesToCapture,_Out_ PVOID *BackTrace,_Out_opt_ PULONG BackTraceHash)
USHORT WINAPI kernel32.QueryDepthSList(_In_ PSLIST_HEADER ListHead)
u_short WSAAPI ws2_32.htons(_In_ u_short hostshort)
u_short WSAAPI ws2_32.ntohs(_In_ u_short netshort)
virtual BOOL None.PossiblyEatMessage(UINT uMsg None,WPARAM wParam None,LPARAM lParam None)
virtual BOOL None.ScheduleSample(IMediaSample *pMediaSample None)
virtual HRESULT mfplat.GetPrivateDataByteCount([out] DWORD *PrivateInputByteCount,[out] DWORD *PrivateOutputByteCount)
virtual HRESULT None.AgreeMediaType(IPin *pReceivePin None,const CMediaType *pmt)
virtual HRESULT None.AlterQuality(Quality q None)
virtual HRESULT None.AttemptConnection(IPin *pReceivePin None,const CMediaType *pmt)
virtual HRESULT None.BreakConnect(PIN_DIRECTION dir None)
virtual HRESULT None.CheckConnect(IPin *pPin None)
virtual HRESULT None.CheckMediaType(const CMediaType *pmt)
virtual HRESULT None.CheckSourceRect(RECT *pSourceRect None)
virtual HRESULT None.CheckTransform(const CMediaType *mtIn,const CMediaType *mtOut)
virtual HRESULT None.CompleteConnect(IPin *pReceivePin None)
virtual HRESULT None.CompleteConnect(PIN_DIRECTION direction None,IPin *pReceivePin None)
virtual HRESULT None.CompleteStateChange(FILTER_STATE OldState None)
virtual HRESULT None.DoRealisePalette(BOOL bForceBackground None)
virtual HRESULT None.DoRenderSample(IMediaSample *pMediaSample None)
virtual HRESULT None.GetCertCount([out] DWORD *pcCerts)
virtual HRESULT None.GetCert([in] DWORD dwIndex,[out] BYTE **ppbCertData)
virtual HRESULT None.GetDueCommand(CDeferredCommand **ppCmd None,long msTimeout None)
virtual HRESULT None.GetMediaPositionInterface(REFIID riid None,void **ppv None)
virtual HRESULT None.GetMediaType(int iPosition None,CMediaType *pMediaType None)
virtual HRESULT None.GetSampleTimes(IMediaSample *pMediaSample None,REFERENCE_TIME *pStartTime None,REFERENCE_TIME *pEndTime None)
virtual HRESULT None.GetSourceRect(RECT *pSourceRect None)
virtual HRESULT None.GetTargetRect(RECT *pTargetRect None)
virtual HRESULT None.InitialiseWindow(HWND hwnd None)
virtual HRESULT None.NewSegment(REFERENCE_TIME tStart None,REFERENCE_TIME tStop None,double dRate None)
virtual HRESULT None.PrepareReceive(IMediaSample *pMediaSample None)
virtual HRESULT None.Remove(CDeferredCommand *pCmd None)
virtual HRESULT None.SetMediaType(const CMediaType *pmt)
virtual HRESULT None.SetMediaType(PIN_DIRECTION direction None,const CMediaType *pmt)
virtual HRESULT None.SetSourceRect(RECT *pSourceRect None)
virtual HRESULT None.SetTargetRect(RECT *pTargetRect None)
virtual HRESULT None.ShouldDrawSampleNow(IMediaSample *pMediaSample None,REFERENCE_TIME *pStartTime None,REFERENCE_TIME *pEndTime None)
virtual HRESULT None.SourceThreadCanWait(BOOL bCanWait None)
virtual HRESULT None.StreamTime([ref] CRefTime rtStream)
virtual HRESULT None.Transform(IMediaSample *pIn None,IMediaSample *pOut None)
virtual HRESULT None.TryMediaTypes(IPin *pReceivePin None,const CMediaType *pmt,IEnumMediaTypes *pEnum None)
virtual HRESULT None.WMSC_AddSignature([in] BYTE *pbCertSig,[in] DWORD cbCertSig)
virtual HRESULT None.WMSC_Encrypt([in] BYTE *pbData,[in] DWORD cbData)
virtual HRESULT None.WMSC_GetValidCertificate([out] BYTE **ppbCertificate,[out] DWORD *pdwSignature)
virtual HRESULT oleacc.put_accName([in None None,optional] VARIANT varChild,[in] BSTR szName)
virtual INT_PTR None.OnReceiveMessage(HWND hwnd None,UINT uMsg None,WPARAM wParam None,LPARAM lParam None)
virtual LPTSTR None.GetClassWindowStyles(DWORD *pClassStyles None,DWORD *pWindowStyles None,DWORD *pWindowStylesEx None)
virtual LRESULT None.OnPaletteChange(HWND hwnd None,UINT Message None)
virtual LRESULT None.OnReceiveMessage(HWND hwnd None,INT uMsg None,WPARAM wParam None,LPARAM lParam None)
virtual None None.Receive(IMediaSample *pMediaSample None)
virtual None None.Render(IMediaSample *pMediaSample None)
virtual STDMETHODIMP None.AddErrorRecord(HRESULT hrErr None,WCHAR * pwszDescription)
virtual void d2d1.GetGradientStops([out] D2D1_GRADIENT_STOP *gradientStops,UINT gradientStopsCount None)
virtual void None.Free(void* pv None)
virtual void None.OnReceiveFirstSample(IMediaSample *pMediaSample None)
virtual void None.OnRenderEnd(IMediaSample *pMediaSample None)
virtual void None.OnRenderStart(IMediaSample *pMediaSample None)
void APIENTRY lz32.LZClose(_In_ INT hFile)
VOID APIENTRY None.MQFreeSecurityContext(HANDLE hSecurityContext None)
void APIENTRY None.PFREEMEM(_In_ void *pv)
void APIENTRY None.RasSetCommSettings(_In_ HANDLE hPort,_In_ RASCOMMSETTINGS *pRasCommSettings,_In_ PVOID pvReserved)
VOID CALLBACK None.APCProc(_In_ ULONG_PTR dwParam)
void CALLBACK None.AuthzFreeGroupsCallback(_In_ PSID_AND_ATTRIBUTES pSidAttrArray)
void CALLBACK None.CallMaster(HINTERNET None None,DWORD_PTR None None,DWORD None None,LPVOID None None,DWORD None None)
void CALLBACK None.ClAddFlowComplete(_In_ HANDLE ClFlowCtx,_In_ ULONG Status)
void CALLBACK None.ClDeleteFlowComplete(_In_ HANDLE ClFlowCtx,_In_ DWORD Status)
VOID CALLBACK None.CleanupGroupCancelCallback(_Inout_opt_ PVOID ObjectContext,_Inout_opt_ PVOID CleanupContext)
void CALLBACK None.ClModifyFlowComplete(_In_ HANDLE ClFlowCtx,_In_ DWORD Status)
void CALLBACK None.ClNotifyHandler(_In_ HANDLE ClRegCtx,_In_ HANDLE ClIfcCtx,_In_ ULONG Event,_In_ HANDLE SubCode,_In_ ULONG BufSize,_In_ PVOID Buffer)
void CALLBACK None.CompletionProc(DRV_REQUESTID dwRequestID None,LONG lResult None)
void CALLBACK None.FaxLineCallback(__in HANDLE FaxHandle,__in DWORD hDevice,__in DWORD dwMessage,DWORD_PTR dwInstance None,__in DWORD_PTR dwParam1,__in DWORD_PTR dwParam2,__in DWORD_PTR dwParam3)
VOID CALLBACK None.FiberProc(_In_ PVOID lpParameter)
VOID CALLBACK None.FileIOCompletionRoutine(_In_ DWORD dwErrorCode,_In_ DWORD dwNumberOfBytesTransfered,_Inout_ LPOVERLAPPED lpOverlapped)
void CALLBACK None.FreeMemory(_In_ LPVOID pBuffer,_In_ LPVOID pContext)
void CALLBACK None.HyphenateProc(_In_ WCHAR *pszWord,_In_ LANGID langid,_In_ LONG ichExceed,_Out_ HYPHRESULT *phyphresult)
void CALLBACK None.InternetStatusCallback(_In_ HINTERNET hInternet,_In_ DWORD_PTR dwContext,_In_ DWORD dwInternetStatus,_In_ LPVOID lpvStatusInformation,_In_ DWORD dwStatusInformationLength)
VOID CALLBACK None.IoCompletionCallback(_Inout_ PTP_CALLBACK_INSTANCE Instance,_Inout_opt_ PVOID Context,_Inout_opt_ PVOID Overlapped,_In_ ULONG IoResult,_In_ ULONG_PTR NumberOfBytesTransferred,_Inout_ PTP_IO Io)
void CALLBACK None.Line_Event(HTAPILINE htLine None,HTAPICALL htCall None,DWORD dwMsg None,DWORD_PTR dwParam1 None,DWORD_PTR dwParam2 None,DWORD_PTR dwParam3 None)
void CALLBACK None.MidiInProc(HMIDIIN hMidiIn None,UINT wMsg None,DWORD_PTR dwInstance None,DWORD_PTR dwParam1 None,DWORD_PTR dwParam2 None)
VOID CALLBACK None.OOBE_COMPLETED_CALLBACK(_In_opt_ PVOID CallbackContext)
VOID CALLBACK None.PFN_WdsCliCallback(_In_ DWORD dwMessageId,_In_opt_ WPARAM wParam,_In_opt_ LPARAM lParam,_In_opt_ PVOID pvUserData)
VOID CALLBACK None.PFN_WdsTransportClientReceiveContents(_In_ HANDLE hSessionKey,_In_ PVOID pCallerData,_In_ PVOID pMetadata,_In_ ULONG ulSize,_In_ PULARGE_INTEGER pContentOffset)
VOID CALLBACK None.PFN_WdsTransportClientSessionComplete(_In_ HANDLE hSessionKey,_In_ PVOID pCallerData,_In_ DWORD dwError)
VOID CALLBACK None.PFN_WdsTransportClientSessionStartEx(_In_ HANDLE hSessionKey,_In_ PVOID pCallerData,_In_ PTRANSPORTCLIENT_SESSION_INFO Info)
VOID CALLBACK None.PFN_WdsTransportClientSessionStart(_In_ HANDLE hSessionKey,_In_ PVOID pCallerData,_In_ PULARGE_INTEGER FileSize)
VOID CALLBACK None.PWINBIO_EVENT_CALLBACK(_In_opt_ PVOID EventCallbackContext,_In_ HRESULT OperationStatus,_In_ PWINBIO_EVENT Event)
VOID CALLBACK None.PWINBIO_LOCATE_SENSOR_CALLBACK(_In_opt_ PVOID LocateCallbackContext,_In_ HRESULT OperationStatus,WINBIO_UNIT_ID UnitId None)
void CALLBACK None.RasDialFunc1(_In_ HRASCONN hrasconn,_In_ UINT unMsg,_In_ RASCONNSTATE rascs,_In_ DWORD dwError,_In_ DWORD dwExtendedError)
void CALLBACK None.RasDialFunc(_In_ UINT unMsg,_In_ RASCONNSTATE rasconnstate,_In_ DWORD dwError)
void CALLBACK None.RpcAuthKeyRetrievalFn(void *Arg None,unsigned char *ServerPrincName,unsigned long KeyVer,void **Key None,RPC_STATUS *Status None)
VOID CALLBACK None.SendAsyncProc(_In_ HWND hwnd,_In_ UINT uMsg,_In_ ULONG_PTR dwData,_In_ LRESULT lResult)
VOID CALLBACK None.SimpleCallback(_Inout_ PTP_CALLBACK_INSTANCE Instance,_Inout_opt_ PVOID Context)
void CALLBACK None.TimeProc(UINT uID None,UINT uMsg None,DWORD dwUser None,DWORD dw1 None,DWORD dw2 None)
VOID CALLBACK None.TimerAPCProc(_In_opt_ LPVOID lpArgToCompletionRoutine,_In_ DWORD dwTimerLowValue,_In_ DWORD dwTimerHighValue)
VOID CALLBACK None.TimerCallback(_Inout_ PTP_CALLBACK_INSTANCE Instance,_Inout_opt_ PVOID Context,_Inout_ PTP_TIMER Timer)
VOID CALLBACK None.TimerProc(_In_ HWND hwnd,_In_ UINT uMsg,_In_ UINT_PTR idEvent,_In_ DWORD dwTime)
VOID CALLBACK None.WaitCallback(_Inout_ PTP_CALLBACK_INSTANCE Instance,_Inout_opt_ PVOID Context,_Inout_ PTP_WAIT Wait,_In_ TP_WAIT_RESULT WaitResult)
VOID CALLBACK None.WaitChainCallback(HWCT WctHandle None,DWORD_PTR Context None,DWORD CallbackStatus None,LPDWORD NodeCount None,PWAITCHAIN_NODE_INFO NodeInfoArray None,LPBOOL IsCycle None)
VOID CALLBACK None.WaitOrTimerCallback(_In_ PVOID lpParameter,_In_ BOOLEAN TimerOrWaitFired)
void CALLBACK None.waveInProc(HWAVEIN hwi None,UINT uMsg None,DWORD_PTR dwInstance None,DWORD_PTR dwParam1 None,DWORD_PTR dwParam2 None)
void CALLBACK None.waveOutProc(HWAVEOUT hwo None,UINT uMsg None,DWORD_PTR dwInstance None,DWORD_PTR dwParam1 None,DWORD_PTR dwParam2 None)
VOID CALLBACK None.WFD_OPEN_SESSION_COMPLETE_CALLBACK(_In_ PHANDLE hSessionHandle,_In_ PVOID pvContext,_In_ GUID guidSessionInterface,_In_ DWORD dwError,_In_ DWORD dwReasonCode)
VOID CALLBACK None.WorkCallback(_Inout_ PTP_CALLBACK_INSTANCE Instance,_Inout_opt_ PVOID Context,_Inout_ PTP_WORK Work)
VOID CALLBACK setupapi.InstallHinfSectionA(_In_ HWND hwnd,_In_ HINSTANCE ModuleHandle,_In_ PCTSTR CmdLineBuffer,_In_ INT nCmdShow)
VOID CALLBACK setupapi.InstallHinfSection(_In_ HWND hwnd,_In_ HINSTANCE ModuleHandle,_In_ PCTSTR CmdLineBuffer,_In_ INT nCmdShow)
VOID CALLBACK setupapi.InstallHinfSectionW(_In_ HWND hwnd,_In_ HINSTANCE ModuleHandle,_In_ PCTSTR CmdLineBuffer,_In_ INT nCmdShow)
void CALLBACK ws2_32.CompletionROUTINE(IN DWORD dwError,IN DWORD cbTransferred,IN LPWSAOVERLAPPED lpOverlapped,IN DWORD dwFlags)
void __cdecl oleaut32.SetOaNoCache(void None None)
VOID DHCP_API_FUNCTION dhcpsapi.DhcpHlprFreeV4Policy(_Inout_ LPDHCP_POLICY Policy)
VOID DHCP_API_FUNCTION dhcpsapi.DhcpRpcFreeMemory(PVOID BufferPointer None)
VOID FORCEINLINE None.TpDestroyCallbackEnviron(_In_ PTP_CALLBACK_ENVIRON CallbackEnviron)
VOID FORCEINLINE None.TpInitializeCallbackEnviron(_Out_ PTP_CALLBACK_ENVIRON CallbackEnviron)
VOID FORCEINLINE None.TpSetCallbackCleanupGroup(_Inout_ PTP_CALLBACK_ENVIRON CallbackEnviron,_In_ PTP_CLEANUP_GROUP CleanupGroup,_In_opt_ PTP_CLEANUP_GROUP_CANCEL_CALLBACK CleanupGroupCancelCallback)
VOID FORCEINLINE None.TpSetCallbackFinalizationCallback(_Inout_ PTP_CALLBACK_ENVIRON CallbackEnviron,_In_ PTP_SIMPLE_CALLBACK FinalizationCallback)
VOID FORCEINLINE None.TpSetCallbackLongFunction(_Inout_ PTP_CALLBACK_ENVIRON CallbackEnviron)
VOID FORCEINLINE None.TpSetCallbackNoActivationContext(_Inout_ PTP_CALLBACK_ENVIRON CallbackEnviron)
VOID FORCEINLINE None.TpSetCallbackPersistent(_Inout_ PTP_CALLBACK_ENVIRON CallbackEnviron)
VOID FORCEINLINE None.TpSetCallbackPriority(_Inout_ PTP_CALLBACK_ENVIRON CallbackEnviron,_In_ TP_CALLBACK_PRIORITY Priority)
VOID FORCEINLINE None.TpSetCallbackRaceWithDll(_Inout_ PTP_CALLBACK_ENVIRON CallbackEnviron,_In_ PVOID DllHandle)
VOID FORCEINLINE None.TpSetCallbackThreadpool(_Inout_ PTP_CALLBACK_ENVIRON CallbackEnviron,_In_ PTP_POOL Pool)
VOID NET_API_FUNCTION netapi32.NetFreeAadJoinInformation(_In_opt_ PDSREG_JOIN_INFO pJoinInfo)
VOID NETIOAPI_API_ iphlpapi.FreeMibTable(_In_ PVOID Memory)
VOID NETIOAPI iphlpapi.InitializeUnicastIpAddressEntry(_Out_ PMIB_UNICASTIPADDRESS_ROW Row)
VOID None activeds.ADsSetLastError(_In_ DWORD dwErr,_In_ LPWSTR pszError,_In_ LPWSTR pszProvider)
VOID None advapi32.CredFree(_In_ PVOID Buffer)
void None certadm.CertSrvBackupFree(_In_ VOID *pv)
void None cluswmi.AddPossibleOwner([in] string NodeName)
void None cluswmi.ExecuteNetworkControl([in] sint32 ControlCode,[in] uint8 InputBuffer[],[out] uint8 OutputBuffer[],[out] sint32 OutputBufferSize)
void None cluswmi.RemoveCryptoCheckpoint([in] string CheckpointName)
void None cluswmi.Rename([in] string newName)
void None cluswmi.SetPreferredOwners([in] string NodeNames[])
void None combase.CoFreeUnusedLibrariesEx(_In_ DWORD dwUnloadDelay,_In_ DWORD dwReserved)
void None comctl32.DrawStatusTextA(HDC hdc None,LPCRECT lprc None,LPCTSTR pszText None,UINT uFlags None)
void None comctl32.DrawStatusText(HDC hdc None,LPCRECT lprc None,LPCTSTR pszText None,UINT uFlags None)
void None comctl32.DrawStatusTextW(HDC hdc None,LPCRECT lprc None,LPCTSTR pszText None,UINT uFlags None)
VOID None comctl32.ImageList_EndDrag(void None None)
VOID None comctl32.InitMUILanguage(LANGID uiLang None)
void None d2d1_3.FlushDeviceContexts([in] ID2D1Bitmap *bitmap)
void None d2d1.GetColorContext([out None None,optional] ID2D1ColorContext **colorContext)
void None d2d1.GetOutput([out] ID2D1Image **outputImage)
void None d2d1.SetPrimitiveBlend(D2D1_PRIMITIVE_BLEND primitiveBlend None)
void None d2d1.SetTarget([in None None,optional] ID2D1Image *target)
void None dxgidebug.ClearRetrievalFilter([in] DXGI_DEBUG_ID Producer)
void None dxgidebug.ClearStorageFilter([in] DXGI_DEBUG_ID Producer)
void None dxgidebug.ClearStoredMessages([in] DXGI_DEBUG_ID Producer)
void None dxgidebug.PopRetrievalFilter([in] DXGI_DEBUG_ID Producer)
void None dxgidebug.PopStorageFilter([in] DXGI_DEBUG_ID Producer)
void None dxgidebug.SetMuteDebugOutput([in] DXGI_DEBUG_ID Producer,[in] BOOL bMute)
void None dxgi.UnregisterHardwareContentProtectionTeardownStatus([in] DWORD dwCookie)
void None gpsvc.RsopEnumerateUsers([out] string userSids[],[out] uint32 hResult)
VOID None hal.KeReleaseInStackQueuedSpinLock(_In_ PKLOCK_QUEUE_HANDLE LockHandle)
VOID None iphlpapi.InitializeIpForwardEntry(_Out_ PMIB_IPFORWARD_ROW2 Row)
VOID None iphlpapi.InitializeIpInterfaceEntry(_Inout_ PMIB_IPINTERFACE_ROW Row)
VOID None kernel32.GetCurrentProcessorNumberEx(_Out_ PPROCESSOR_NUMBER ProcNumber)
VOID None kernel32.QueryInterruptTime(_Out_ PULONGLONG lpInterruptTime)
VOID None kernel32.QueryInterruptTimePrecise(_Out_ PULONGLONG lpInterruptTimePrecise)
VOID None kernel32.QueryUnbiasedInterruptTimePrecise(_Out_ PULONGLONG lpUnbiasedInterruptTimePrecise)
void None mfplat.MFHeapFree(_In_ void *pv)
void None mpr.WNetSetLastErrorA(_In_ DWORD err,_In_ LPTSTR lpError,_In_ LPTSTR lpProvider)
void None mpr.WNetSetLastError(_In_ DWORD err,_In_ LPTSTR lpError,_In_ LPTSTR lpProvider)
void None mrmsupport.DestroyIndexedResults(_In_opt_ PWSTR resourceUri,_In_ ULONG qualifierCount,_In_opt_ IndexedResourceQualifier *qualifiers)
void None mrmsupport.DestroyResourceIndexer(_In_opt_ PVOID resourceIndexer)
void None msftedit.TxImmReleaseContext([in] HIMC himc)
void None msftedit.TxInvalidateRect([in] LPCRECT prc,[in] BOOL fMode)
void None msftedit.TxKillTimer([in] UINT idTimer)
void None msftedit.TxScrollWindowEx([in] INT dx,[in] INT dy,[in] LPCRECT lprcScroll,[in] LPCRECT lprcClip,[in] HRGN hrgnUpdate,[in] LPRECT lprcUpdate,[in] UINT fuScroll)
void None msftedit.TxSetCapture([in] BOOL fCapture)
void None msftedit.TxSetCursor([in] HCURSOR hcur,[in] BOOL fText)
void None msftedit.TxViewChange([in] BOOL fUpdate)
void None mswsock.GetAcceptExSockaddrs(_In_ PVOID lpOutputBuffer,_In_ DWORD dwReceiveDataLength,_In_ DWORD dwLocalAddressLength,_In_ DWORD dwRemoteAddressLength,_Out_ LPSOCKADDR *LocalSockaddr,_Out_ LPINT LocalSockaddrLength,_Out_ LPSOCKADDR *RemoteSockaddr,_Out_ LPINT RemoteSockaddrLength)
VOID None mswsock.RIOCloseCompletionQueue(_In_ RIO_CQ CQ)
VOID None mswsock.RIODeregisterBuffer(_In_ RIO_BUFFERID BufferId)
void None mydocs.PerUserInit(void None None)
void None None.abort( None None)
void None None.abort(void None None)
void None None.AddButton(object sender None,MouseButtonEventArgs e None)
void None None.AddInheritedComponents(IComponent component None,IContainer container None)
void None None.Add(Object key None,Object value None)
void None None.AddParsedSubObject(object obj None)
void None None.AddParsedSubObject(Object obj None)
void None None.AddText(String text None)
void None None.Add(T item None)
void None None.Add(TKey key None,TValue value None)
void None None.AllItems_Click(Object sender None,EventArgs e None)
void None None.AllMemoryBarrier(void None None)
void None None.AllMemoryBarrierWithGroupSync(void None None)
void None None.Application_Start(object sender None,EventArgs e None)
void None None.ApplySort(ListSortDescriptionCollection sorts None)
void None None.assert(int expression None)
void None None.asuint(in double value,out uint lowbits,out uint highbits)
VOID None None.AuditLogon(_In_ NTSTATUS Status,_In_ NTSTATUS SubStatus,_In_ PUNICODE_STRING AccountName,_In_ PUNICODE_STRING AuthenticatingAuthority,_In_ PUNICODE_STRING WorkstationName,_In_opt_ PSID UserSid,_In_ SECURITY_LOGON_TYPE LogonType,_In_ PTOKEN_SOURCE TokenSource,_In_ PLUID LogonId)
void None None.Begin([in] ID3D11Asynchronous *pAsync)
void None None.BlockingFinish(IDXGIDevice2* pDevice None)
void None None.browserFrame_FragmentNavigation(object sender None,FragmentNavigationEventArgs e None)
void None None.button1_Click(object sender None,EventArgs e None)
void None None.Button1_Click(Object sender None,EventArgs e None)
void None None.Button_Click(Object sender None,EventArgs e None)
VOID None None.CcFlushCache(_In_ PSECTION_OBJECT_POINTERS SectionObjectPointer,_In_opt_ PLARGE_INTEGER FileOffset,_In_ ULONG Length,_Out_opt_ PIO_STATUS_BLOCK IoStatus)
VOID None None.CcInitializeCacheMap(_In_ PFILE_OBJECT FileObject,_In_ PCC_FILE_SIZES FileSizes,_In_ BOOLEAN PinAccess,_In_ PCACHE_MANAGER_CALLBACKS Callbacks,_In_ PVOID LazyWriteContext)
VOID None None.CcMdlRead(_In_ PFILE_OBJECT FileObject,_In_ PLARGE_INTEGER FileOffset,_In_ ULONG Length,_Out_ PMDL *MdlChain,_Out_ PIO_STATUS_BLOCK IoStatus)
VOID None None.CcMdlWriteComplete(_In_ PFILE_OBJECT FileObject,_In_ PLARGE_INTEGER FileOffset,_In_ PMDL MdlChain)
VOID None None.CcPrepareMdlWrite(_In_ PFILE_OBJECT FileObject,_In_ PLARGE_INTEGER FileOffset,_In_ ULONG Length,_Out_ PMDL *MdlChain,_Out_ PIO_STATUS_BLOCK IoStatus)
void None None._cexit(void None None)
void None None.ChangeFontStretch(object sender None,RoutedEventArgs e None)
void None None.ChangeFontWeight(object sender None,RoutedEventArgs e None)
void None None.ChangeForeground(object sender None,RoutedEventArgs e None)
void None None.CheckCounterInfo([out] D3D10_COUNTER_INFO *pCounterInfo)
void None None.ClearDepthStencilView([in] ID3D10DepthStencilView *pDepthStencilView,[in] UINT ClearFlags,[in] FLOAT Depth,[in] UINT8 Stencil)
void None None.ClearDepthStencilView([in] ID3D11DepthStencilView *pDepthStencilView,[in] UINT ClearFlags,[in] FLOAT Depth,[in] UINT8 Stencil)
void None None.clearerr(FILE *stream None)
void None None.ClientCallback_Function(_In_ ULONG_PTR Argument1,_In_ ULONG_PTR Argument2,_In_ PSecBuffer InputBuffer,_Out_ PSecBuffer OutputBuffer)
void None None.ComboBox_GetDroppedControlRect(HWND hwndCtl None,RECT *lprc None)
void None None.CommDlg_OpenSave_HideControl(hwnd None None,wparam None None)
void None None.CommDlg_OpenSave_SetControlText(hwnd None None,wparam None None,lparam None None)
void None None.CommDlg_OpenSave_SetDefExt(hwnd None None,lparam None None)
void None None.Commit(Enlistment enlistment None)
void None None.CopyResource([in] ID3D10Resource *pDstResource,[in] ID3D10Resource *pSrcResource)
void None None.CopyResource([in] ID3D11Resource *pDstResource,[in] ID3D11Resource *pSrcResource)
void None None.CopyStructureCount([in] ID3D11Buffer *pDstBuffer,[in] UINT DstAlignedByteOffset,[in] ID3D11UnorderedAccessView *pSrcView)
void None None.CopyTo(Array array None,int index None)
void None None.CreateLeaf([in] REFPROPERTYKEY propkey,[in] CONDITION_OPERATION cop,[in] REFPROPERTYKEY propvar,[in None None,optional] LPCWSTR pszSemanticType,[in None None,optional] LPCWSTR pszLocaleName,[in None None,optional] IRichChunk *pPropertyNameTerm,[in None None,optional] IRichChunk *pOperationTerm,[in None None,optional] IRichChunk *pValueTerm,[in] CONDITION_CREATION_OPTIONS cco,[in] REFIID riid,[out] void **ppv)
void None None.CSGetConstantBuffers([in] UINT StartSlot,[in] UINT NumBuffers,[out None None,optional] ID3D11Buffer **ppConstantBuffers)
void None None.CSGetSamplers([in] UINT StartSlot,[in] UINT NumSamplers,[out None None,optional] ID3D11SamplerState **ppSamplers)
void None None.CSGetShader([out] ID3D11ComputeShader **ppComputeShader,[out None None,optional] ID3D11ClassInstance **ppClassInstances,[in None None,out None None,optional] UINT *pNumClassInstances)
void None None.CSGetUnorderedAccessViews([in] UINT StartSlot,[in] UINT NumUAVs,[out None None,optional] ID3D11UnorderedAccessView **ppUnorderedAccessViews)
VOID None None.CsqCompleteCanceledIrp(PIO_CSQ Csq None,PIRP Irp None)
void None None.DestroyComponent(IComponent component None)
VOID None None.DestroyThreadpoolEnvironment(_Inout_ PTP_CALLBACK_ENVIRON pcbe)
void None None.DeviceMemoryBarrier(void None None)
void None None.DeviceMemoryBarrierWithGroupSync(void None None)
void None None.Disconnect([in] long Result)
void None None.DismProgressCallback(_In_ UINT Current,_In_ UINT Total,_In_ PVOID UserData)
void None None.DispatchIndirect([in] ID3D11Buffer *pBufferForArgs,[in] UINT AlignedByteOffsetForArgs)
void None None.Dispatch([in] UINT ThreadGroupCountX,[in] UINT ThreadGroupCountY,[in] UINT ThreadGroupCountZ)
void None None.DisplayDeviceInformation(IEnumMoniker *pEnum None)
void None None.DisplayPackageUsers(Windows::Management::Deployment::PackageManager^ packageManager None,Windows::ApplicationModel::Package^ package None)
void None None.DisplayPinInfo(IPin *pReceivePin None)
void None None.DisplayTypeInfo(IPin *pPin None,const CMediaType *pmt)
void None None.DisplayType(LPTSTR label None,const AM_MEDIA_TYPE *pmtIn)
void None None.DoPasteLink(hwndClientDDE None None)
void None None.DoSetWindowForeground(BOOL bFocus None)
void None None.DrawIndexedInstancedIndirect([in] ID3D11Buffer *pBufferForArgs,[in] UINT AlignedByteOffsetForArgs)
void None None.DrawIndexedInstanced([in] UINT IndexCountPerInstance,[in] UINT InstanceCount,[in] UINT StartIndexLocation,[in] INT BaseVertexLocation,[in] UINT StartInstanceLocation)
void None None.DrawIndexed([in] UINT IndexCount,[in] UINT StartIndexLocation,[in] INT BaseVertexLocation)
void None None.DrawInstancedIndirect([in] ID3D11Buffer *pBufferForArgs,[in] UINT AlignedByteOffsetForArgs)
void None None.DrawInstanced([in] UINT VertexCountPerInstance,[in] UINT InstanceCount,[in] UINT StartVertexLocation,[in] UINT StartInstanceLocation)
void None None.Draw([in] UINT VertexCount,[in] UINT StartVertexLocation)
VOID None None.DrvFree(PVOID pv None,ULONG_PTR id None)
VOID None None.DrvMovePointer(_In_ SURFOBJ pso,_In_ LONG x,_In_ LONG y,_In_ RECTL *prcl)
VOID None None.DrvSynchronize(DHPDEV dhpdev None,RECTL *prcl None)
VOID None None.DrvSynchronizeSurface(SURFOBJ *pso None,RECTL *prcl None,FLONG fl None)
void None None.DSGetConstantBuffers([in] UINT StartSlot,[in] UINT NumBuffers,[out None None,optional] ID3D11Buffer **ppConstantBuffers)
void None None.DSGetSamplers([in] UINT StartSlot,[in] UINT NumSamplers,[out None None,optional] ID3D11SamplerState **ppSamplers)
void None None.DSGetShader([out] ID3D11DomainShader **ppDomainShader,[out None None,optional] ID3D11ClassInstance **ppClassInstances,[in None None,out None None,optional] UINT *pNumClassInstances)
void None None.DSGetShaderResources([in] UINT StartSlot,[in] UINT NumViews,[out None None,optional] ID3D11ShaderResourceView **ppShaderResourceViews)
void None None.DumpClientFunction(void *userPortion None,size_t blockSize None)
void None None.DurationUnitChange([in] long NewDurationUnit)
void None None.Edit_EmptyUndoBuffer(HWND hwndCtl None)
void None None.Edit_FmtLines(HWND hwndCtl None,BOOL fAddEOL None)
void None None.Edit_GetRect(HWND hwndCtl None,RECT *lprc None)
void None None.Edit_LimitText(HWND hwndCtl None,int cchMax None)
void None None.Edit_ReplaceSel(HWND hwndCtl None,LPCTSTR lpszReplace None)
void None None.Edit_Scroll(HWND hwndCtl None,int dv None,int dh None)
void None None.Edit_SetHandle(HWND hwndCtl None,HLOCAL h None)
void None None.Edit_SetModify(HWND hwndCtl None,BOOL fModified None)
void None None.Edit_SetPasswordChar(HWND hwndCtl None,UINT ch None)
void None None.Edit_SetRect(HWND hwndCtl None,RECT *lprc None)
void None None.Edit_SetRectNoPaint(HWND hwndCtl None,RECT *lprc None)
void None None.Edit_SetSel(HWND hwndCtl None,int ichStart None,int ichEnd None)
void None None.Edit_SetTabStops(HWND hwndCtl None,int cTabs None,int *lpTabs None)
void None None.Edit_SetWordBreakProc(HWND hwndCtl None,EDITWORDBREAKPROC lpfnWordBreak None)
void None None.End([in] ID3D11Asynchronous *pAsync)
void None None.EndOfStream([in] long Result)
VOID None None.EngDeletePath(PATHOBJ *ppo None)
VOID None None.EngFntCacheFault(_In_ ULONG ulFastCheckSum,_In_ ULONG iFaultMode)
VOID None None.EngSetLastError(_In_ ULONG iError)
void None None.errorf(string format None,argument ... None)
void None None.EventDescCreate([out] PEVENT_DESCRIPTOR EventDescriptor,[in] USHORT Id,[in] UCHAR Version,[in] UCHAR Channel,[in] UCHAR Level,[in] USHORT Task,[in] UCHAR Opcode,[in] ULONGLONG Keyword)
void None None.EventDescZero([out] PEVENT_DESCRIPTOR EventDescriptor)
void None None.EventHandler(object sender None,EventNameEventArgs e None)
VOID None None.ExAcquireFastMutex(_Inout_ PFAST_MUTEX FastMutex)
VOID None None.ExAcquireFastMutexUnsafe(_Inout_ PFAST_MUTEX FastMutex)
VOID None None.ExConvertExclusiveToSharedLite(_Inout_ PERESOURCE Resource)
VOID None None.ExDeleteNPagedLookasideList(_Inout_ PNPAGED_LOOKASIDE_LIST Lookaside)
VOID None None.ExDeletePagedLookasideList(_Inout_ PPAGED_LOOKASIDE_LIST Lookaside)
void None None.ExecuteCommandList([in] ID3D11CommandList *pCommandList,BOOL RestoreContextState None)
void None None.Execute(Object parameter None)
VOID None None.ExFreePool(_In_ PVOID P)
VOID None None.ExFreePoolWithTag(_In_ PVOID P,_In_ ULONG Tag)
VOID None None.ExInitializeFastMutex(_Out_ PFAST_MUTEX FastMutex)
VOID None None.ExInitializeNPagedLookasideList(_Out_ PNPAGED_LOOKASIDE_LIST Lookaside,_In_opt_ PALLOCATE_FUNCTION Allocate,_In_opt_ PFREE_FUNCTION Free,_In_ ULONG Flags,_In_ SIZE_T Size,_In_ ULONG Tag,_In_ USHORT Depth)
VOID None None.ExInitializePagedLookasideList(_Out_ PPAGED_LOOKASIDE_LIST Lookaside,_In_opt_ PALLOCATE_FUNCTION Allocate,_In_opt_ PFREE_FUNCTION Free,_In_ ULONG Flags,_In_ SIZE_T Size,_In_ ULONG Tag,_In_ USHORT Depth)
VOID None None.ExInitializeRundownProtection(_Out_ PEX_RUNDOWN_REF RunRef)
void None None.exit(int status None)
VOID None None.ExRaiseAccessViolation(void None None)
VOID None None.ExRaiseDatatypeMisalignment(void None None)
VOID None None.ExRaiseStatus(_In_ NTSTATUS Status)
VOID None None.ExReleaseFastMutexUnsafe(_Inout_ PFAST_MUTEX FastMutex)
VOID None None.ExReleaseResourceAndLeaveCriticalRegion(_Inout_ PERESOURCE Resource)
VOID None None.ExReleaseResourceForThreadLite(_Inout_ PERESOURCE Resource,_In_ ERESOURCE_THREAD ResourceThreadId)
VOID None None.ExReleaseResourceLite(_Inout_ PERESOURCE Resource)
VOID None None.ExReleaseRundownProtectionEx(_Inout_ PEX_RUNDOWN_REF RunRef,_In_ ULONG Count)
VOID None None.ExReleaseRundownProtection(_Inout_ PEX_RUNDOWN_REF RunRef)
VOID None None.ExSetResourceOwnerPointerEx(_Inout_ PERESOURCE Resource,_In_ PVOID OwnerPointer,_In_ ULONG Flags)
VOID None None.ExSetResourceOwnerPointer(_Inout_ PERESOURCE Resource,_In_ PVOID OwnerPointer)
VOID None None.ExSystemTimeToLocalTime(_In_ PLARGE_INTEGER SystemTime,_Out_ PLARGE_INTEGER LocalTime)
VOID None None.ExUnregisterCallback(_Inout_ PVOID CbRegistration)
VOID None None.ExWaitForRundownProtectionRelease(_Inout_ PEX_RUNDOWN_REF RunRef)
void None None.FillBufferWithSilence(WAVEFORMATEX *pWfex None)
void None None.FillMemory([out] PVOID Destination,[in] SIZE_T Length,[in] BYTE Fill)
void None None.f(int32 None None)
VOID None None.FltAcknowledgeEcp(_In_ PFLT_FILTER Filter,_In_ PVOID EcpContext)
VOID None None.FltAcquireResourceExclusive(_Inout_ PERESOURCE Resource)
VOID None None.FltAcquireResourceShared(_Inout_ PERESOURCE Resource)
VOID None None.FltCancelFileOpen(_In_ PFLT_INSTANCE Instance,_In_ PFILE_OBJECT FileObject)
VOID None None.FltCbdqDisable(_Inout_ PFLT_CALLBACK_DATA_QUEUE Cbdq)
VOID None None.FltCbdqEnable(_Inout_ PFLT_CALLBACK_DATA_QUEUE Cbdq)
VOID None None.FltClearCallbackDataDirty(_Inout_ PFLT_CALLBACK_DATA Data)
VOID None None.FltCompletePendedPostOperation(_In_ PFLT_CALLBACK_DATA CallbackData)
VOID None None.FltCompletePendedPreOperation(_In_ PFLT_CALLBACK_DATA Data,_In_ FLT_PREOP_CALLBACK_STATUS CallbackStatus,_In_opt_ PVOID Context)
VOID None None.FltDeleteExtraCreateParameterLookasideList(_In_ PFLT_FILTER Filter,_Inout_ PVOID Lookaside,_In_ FSRTL_ECP_LOOKASIDE_FLAGS Flags)
VOID None None.FltFreeCallbackData(_In_ PFLT_CALLBACK_DATA CallbackData)
VOID None None.FltFreeExtraCreateParameter(_In_ PFLT_FILTER Filter,_In_ PVOID EcpContext)
VOID None None.FltFreeExtraCreateParameterList(_In_ PFLT_FILTER Filter,_In_ PECP_LIST EcpList)
VOID None None.FltGetContexts(_In_ PCFLT_RELATED_OBJECTS FltObjects,_In_ FLT_CONTEXT_TYPE DesiredContexts,_Out_ PFLT_RELATED_CONTEXTS Contexts)
VOID None None.FltInitExtraCreateParameterLookasideList(_In_ PFLT_FILTER Filter,_Inout_ PVOID Lookaside,_In_ FSRTL_ECP_LOOKASIDE_FLAGS Flags,_In_ SIZE_T Size,_In_ ULONG Tag)
VOID None None.FltObjectDereference(_Inout_ PVOID FltObject)
VOID None None.FltPerformSynchronousIo(_Inout_ PFLT_CALLBACK_DATA CallbackData)
VOID None None.FltReferenceFileNameInformation(_In_ PFLT_FILE_NAME_INFORMATION FileNameInformation)
VOID None None.FltReissueSynchronousIo(_In_ PFLT_INSTANCE InitiatingInstance,_In_ PFLT_CALLBACK_DATA CallbackData)
VOID None None.FltReleaseFileNameInformation(_In_ PFLT_FILE_NAME_INFORMATION FileNameInformation)
VOID None None.FltReleaseResource(_Inout_ PERESOURCE Resource)
VOID None None.FltReuseCallbackData(_Inout_ PFLT_CALLBACK_DATA CallbackData)
VOID None None.FltSetCallbackDataDirty(_Inout_ PFLT_CALLBACK_DATA Data)
VOID None None.FltUninitializeOplock(_In_ POPLOCK Oplock)
VOID None None.FltUnregisterFilter(_In_ PFLT_FILTER Filter)
void None None.formatMarginsMenuItem_Click(object sender None,RoutedEventArgs e None)
VOID None None.FreeAdapterChannel(_In_ PDMA_ADAPTER DmaAdapter)
VOID None None.FreeAdapterObject(_In_ PDMA_ADAPTER DmaAdapter,_In_ IO_ALLOCATION_ACTION AllocationAction)
VOID None None.FreeCommonBuffer(_In_ PDMA_ADAPTER DmaAdapter,_In_ ULONG Length,_In_ PHYSICAL_ADDRESS LogicalAddress,_In_ PVOID VirtualAddress,_In_ BOOLEAN CacheEnabled)
void None None._free_dbg(void *userData None,int blockType None)
VOID None None.FreeHeap(_Inout_ PVOID Base)
VOID None None.FreeHelperAttributes(_In_ HELPER_ATTRIBUTE *pInfo,ULONG HelperAttributeCount None,BOOL bFreePointer None)
void None None.FreeIDListArrayChild(_In_ PITEMID_CHILD *ppidls,UINT cItems None)
void None None.FreeIDListArrayFull(_In_ PIDLIST_ABSOLUTE *ppidls,UINT cItems None)
void None None.FreeIDListArray(_In_ PIDLIST_RELATIVE *ppidls,UINT cItems None)
void None None.FreeKnownFolderDefinitionFields(_In_ KNOWNFOLDER_DEFINITION *pKFD)
void None None._free_locale(_locale_t locale None)
VOID None None.FreeLsaHeap(_In_ PVOID Base)
VOID None None.FreeRepairInfos(_In_ RepairInfo *pInfo,ULONG RepairCount None,BOOL bFreePointer None)
void None None.FreeReturnBuffer(_In_ PVOID Base)
VOID None None.FreeRootCauseInfos(_In_ RootCauseInfo *pInfo,ULONG RootCauseCount None,BOOL bFreePointer None)
VOID None None.FreeSharedMemory(_In_ PVOID SharedMem,_In_ PVOID Memory)
VOID None None.FreeUiInfo(_In_ UiInfo *pInfo)
VOID None None.FsRtlDeregisterUncProvider(_In_ HANDLE Handle)
VOID None None.FsRtlEnterFileSystem(VOID None None)
VOID None None.FsRtlExitFileSystem(VOID None None)
VOID None None.FsRtlFreeExtraCreateParameterList(_In_ PECP_LIST EcpList)
VOID None None.FsRtlInitializeOplock(_Inout_ POPLOCK Oplock)
VOID None None.FsRtlNotifyFullChangeDirectory(_In_ PNOTIFY_SYNC NotifySync,_In_ PLIST_ENTRY NotifyList,_In_ PVOID FsContext,_In_ PSTRING FullDirectoryName,_In_ BOOLEAN WatchTree,_In_ BOOLEAN IgnoreBuffer,_In_ ULONG CompletionFilter,_In_opt_ PIRP NotifyIrp,_In_opt_ PCHECK_FOR_TRAVERSE_ACCESS TraverseCallback,_In_opt_ PSECURITY_SUBJECT_CONTEXT SubjectContext)
VOID None None.FsRtlNotifyFullReportChange(_In_ PNOTIFY_SYNC NotifySync,_In_ PLIST_ENTRY NotifyList,_In_ PSTRING FullTargetName,_In_ USHORT TargetNameOffset,_In_opt_ PSTRING StreamName,_In_opt_ PSTRING NormalizedParentName,_In_ ULONG FilterMatch,_In_ ULONG Action,_In_opt_ PVOID TargetContext)
VOID None None.FsRtlUninitializeOplock(_Inout_ POPLOCK Oplock)
void None None.FuncReturnhWnd(_Inout_ HWND *phWnd)
void None None.GenerateMips([in] ID3D10ShaderResourceView *pShaderResourceView)
void None None.GenerateMips([in] ID3D11ShaderResourceView *pShaderResourceView)
void None None.GetDesc([out] D3D11_BUFFER_DESC *pDesc)
void None None.GetDesc([out] D3D11_DEPTH_STENCIL_DESC *pDesc)
void None None.GetDesc([out] D3D11_RASTERIZER_DESC *pDesc)
void None None.GetDesc([out] D3D11_SHADER_RESOURCE_VIEW_DESC *pDesc)
void None None.GetDesc([out] DXGI_OUTDUPL_DESC *pDesc)
void None None.GetDimensions(in UINT MipLevel,out UINT Width,out UINT Height,out UINT Elements,out UINT NumberOfLevels)
void None None.GetDimensions(out uint dim)
void None None.GetDimensions(out UINT Width,out UINT Height,out UINT Elements,out UINT NumberOfSamples)
void None None.GetEnumerator_Clicked(Object Sender None,EventArgs e None)
void None None.GetFieldValue(FieldCallback callback None)
void None None.GetGammaRamp([in] UINT iSwapChain,[in None None,out] D3DGAMMARAMP *pRamp)
void None None.GetImmediateContext2([out] ID3D11DeviceContext2 **ppImmediateContext)
void None None.GetImmediateContext3([out] ID3D11DeviceContext3 **ppImmediateContext)
void None None.GetObjectData(SerializationInfo info None,StreamingContext context None)
void None None.GetObjSemiSync(IWbemServices *pSvc None)
void None None.GetPage(String* url None)
void None None.GetPlayerName(char *pDatafromNet None)
void None None.GetPredication([out] ID3D10Predicate **ppPredicate,[out] BOOL *pPredicateValue)
void None None.GetPredication([out None None,optional] ID3D11Predicate **ppPredicate,[out None None,optional] BOOL *pPredicateValue)
void None None.GetTextFilterSize(UINT *Width None,UINT *Height None)
void None None.GetTypeInfo(uint iTInfo None,uint lcid None,IntPtr ppTInfo None)
void None None.GroupMemoryBarrier(void None None)
void None None.GroupMemoryBarrierWithGroupSync(void None None)
void None None.GSGetConstantBuffers([in] UINT StartSlot,[in] UINT NumBuffers,[out] ID3D10Buffer **ppConstantBuffers)
void None None.GSGetConstantBuffers([in] UINT StartSlot,[in] UINT NumBuffers,[out None None,optional] ID3D11Buffer **ppConstantBuffers)
void None None.GSGetSamplers([in] UINT StartSlot,[in] UINT NumSamplers,[out] ID3D10SamplerState **ppSamplers)
void None None.GSGetSamplers([in] UINT StartSlot,[in] UINT NumSamplers,[out None None,optional] ID3D11SamplerState **ppSamplers)
void None None.GSGetShader([out] ID3D10GeometryShader **ppGeometryShader)
void None None.GSGetShader([out] ID3D11GeometryShader **ppGeometryShader,[out None None,optional] ID3D11ClassInstance **ppClassInstances,[in None None,out None None,optional] UINT *pNumClassInstances)
void None None.GSGetShaderResources([in] UINT StartSlot,[in] UINT NumViews,[out] ID3D10ShaderResourceView **ppShaderResourceViews)
void None None.GSGetShaderResources([in] UINT StartSlot,[in] UINT NumViews,[out None None,optional] ID3D11ShaderResourceView **ppShaderResourceViews)
void None None.GSSetShaderResources([in] UINT StartSlot,[in] UINT NumViews,[in] ID3D10ShaderResourceView *ppShaderResourceViews)
VOID None None.HalExamineMBR(_In_ PDEVICE_OBJECT DeviceObject,_In_ ULONG SectorSize,_In_ ULONG MBRTypeIdentifier,_Out_ PVOID *Buffer)
void None None.HandleCustomEvent(object sender None,CustomEventArgs a None)
void None None.HSGetConstantBuffers([in] UINT StartSlot,[in] UINT NumBuffers,[out None None,optional] ID3D11Buffer **ppConstantBuffers)
void None None.HSGetSamplers([in] UINT StartSlot,[in] UINT NumSamplers,[out None None,optional] ID3D11SamplerState **ppSamplers)
void None None.HSGetShader([out] ID3D11HullShader **ppHullShader,[out None None,optional] ID3D11ClassInstance **ppClassInstances,[in None None,out None None,optional] UINT *pNumClassInstances)
void None None.HSGetShaderResources([in] UINT StartSlot,[in] UINT NumViews,[out None None,optional] ID3D11ShaderResourceView **ppShaderResourceViews)
void None None.HSSetShader(ID3D11HullShader *pHullShader None,ID3D11ClassInstance *const *ppClassInstances,UINT NumClassInstances None)
void None None.IAGetIndexBuffer([out None None,optional] ID3D11Buffer **pIndexBuffer,[out None None,optional] DXGI_FORMAT *Format,[out None None,optional] UINT *Offset)
void None None.IAGetInputLayout([out] ID3D10InputLayout **ppInputLayout)
void None None.IAGetInputLayout([out] ID3D11InputLayout **ppInputLayout)
void None None.IAGetPrimitiveTopology([out] D3D10_PRIMITIVE_TOPOLOGY *pTopology)
void None None.IAGetPrimitiveTopology([out] D3D11_PRIMITIVE_TOPOLOGY *pTopology)
void None None.IAGetVertexBuffers([in] UINT StartSlot,[in] UINT NumBuffers,[out] ID3D10Buffer **ppVertexBuffers,[out] UINT *pStrides,[out] UINT *pOffsets)
void None None.IAGetVertexBuffers([in] UINT StartSlot,[in] UINT NumBuffers,[out None None,optional] ID3D11Buffer **ppVertexBuffers,[out None None,optional] UINT *pStrides,[out None None,optional] UINT *pOffsets)
void None None.IASetIndexBuffer([in] ID3D10Buffer *pIndexBuffer,[in] DXGI_FORMAT Format,[in] UINT Offset)
void None None.IASetIndexBuffer([in None None,optional] ID3D11Buffer *pIndexBuffer,[in] DXGI_FORMAT Format,[in] UINT Offset)
void None None.IASetInputLayout([in] ID3D10InputLayout *pInputLayout)
void None None.IASetInputLayout([in None None,optional] ID3D11InputLayout *pInputLayout)
void None None.IASetPrimitiveTopology([in] D3D10_PRIMITIVE_TOPOLOGY Topology)
void None None.IASetPrimitiveTopology([in] D3D11_PRIMITIVE_TOPOLOGY Topology)
void None None.ICCompressorFree(PCOMPVARS pc None)
void None None.ICSeqCompressFrameEnd(PCOMPVARS pc None)
void None None.IID_PPV_ARGS(T **pType None)
void None None.InDoubt(Enlistment enlistment None)
VOID None None.InitializeListHead(_Out_ PLIST_ENTRY ListHead)
VOID None None.InitializeObjectAttributes([out] POBJECT_ATTRIBUTES InitializedAttributes,[in] PUNICODE_STRING ObjectName,[in] ULONG Attributes,[in] HANDLE RootDirectory,[in None None,optional] PSECURITY_DESCRIPTOR SecurityDescriptor)
VOID None None.InitializeThreadpoolEnvironment(_Out_ PTP_CALLBACK_ENVIRON pcbe)
void None None.inkCanvas1_EditingModeInvertedChanged(object sender None,EventArgs e None)
void None None.inkCanvas1_StrokeErased(object sender None,RoutedEventArgs e None)
void None None.inkCanvas1_StrokeErasing(object sender None,InkCanvasStrokeErasingEventArgs e None)
void None None.inkCanvas1_StylusInRange(object sender None,StylusEventArgs e None)
void None None.inkCanvas1_StylusOutOfRange(object sender None,StylusEventArgs e None)
VOID None None.InsertHeadList(_Inout_ PLIST_ENTRY ListHead,_Inout_ PLIST_ENTRY Entry)
void None None.Insert(int index None,Object value None)
void None None.Insert(int index None,T item None)
void None None.InterlockedAdd(in R dest,in T value,out T original_value)
void None None.InterlockedAdd(in UINT dest,in UINT value,out UINT original_value)
void None None.InterlockedAnd(in R dest,in T value,out T original_value)
void None None.InterlockedAnd(in UINT dest,in UINT value,out UINT original_value)
void None None.InterlockedCompareExchange(in R dest,in T compare_value,in T value,out T original_value)
void None None.InterlockedCompareExchange(in UINT dest,in UINT compare_value,in UINT value,out UINT original_value)
void None None.InterlockedCompareStore(in R dest,in T compare_value,in T value)
void None None.InterlockedCompareStore(in UINT dest,in UINT compare_value,in UINT value)
void None None.InterlockedExchange(in R dest,in T value,out T original_value)
void None None.InterlockedMax(in R dest,in T value,out T original_value)
void None None.InterlockedMax(in UINT dest,in UINT value,out UINT original_value)
void None None.InterlockedMin(in R dest,in T value,out T original_value)
void None None.InterlockedOr(in R dest,in T value,out T original_value)
void None None.InterlockedOr(in UINT dest,in UINT value,out UINT original_value)
void None None.InterlockedXor(in R dest,in T value,out T original_value)
VOID None None.IoAcquireCancelSpinLock(_Out_ PKIRQL Irql)
VOID None None.IoAllocateController(_In_ PCONTROLLER_OBJECT ControllerObject,_In_ PDEVICE_OBJECT DeviceObject,_In_ PDRIVER_CONTROL ExecutionRoutine,_In_opt_ PVOID Context)
VOID None None.IoAssignArcName(_In_ PUNICODE_STRING ArcName,_In_ PUNICODE_STRING DeviceName)
VOID None None.IoBuildPartialMdl(_In_ PMDL SourceMdl,_Inout_ PMDL TargetMdl,_In_ PVOID VirtualAddress,_In_ ULONG Length)
VOID None None.IoCancelFileOpen(_In_ PDEVICE_OBJECT DeviceObject,_In_ PFILE_OBJECT FileObject)
VOID None None.IoCompleteRequest(_In_ PIRP Irp,_In_ CCHAR PriorityBoost)
VOID None None.IoCopyCurrentIrpStackLocationToNext(_Inout_ PIRP Irp)
VOID None None.IoCsqInsertIrp(_Inout_ PIO_CSQ Csq,_Inout_ PIRP Irp,_Out_opt_ PIO_CSQ_IRP_CONTEXT Context)
VOID None None.IoDeassignArcName(_In_ PUNICODE_STRING ArcName)
VOID None None.IoDeleteController(_In_ PCONTROLLER_OBJECT ControllerObject)
VOID None None.IoDeleteDevice(_In_ PDEVICE_OBJECT DeviceObject)
VOID None None.IoDetachDevice(_Inout_ PDEVICE_OBJECT TargetDevice)
VOID None None.IoDisconnectInterrupt(_In_ PKINTERRUPT InterruptObject)
VOID None None.IoFreeController(_In_ PCONTROLLER_OBJECT ControllerObject)
VOID None None.IoFreeErrorLogEntry(_In_ PVOID ElEntry)
VOID None None.IoFreeIrp(_In_ PIRP Irp)
VOID None None.IoFreeMdl(_In_ PMDL Mdl)
VOID None None.IoInitializeDpcRequest(_In_ PDEVICE_OBJECT DeviceObject,_In_ PIO_DPC_ROUTINE DpcRoutine)
VOID None None.IoInitializeDriverCreateContext(PIO_DRIVER_CREATE_CONTEXT DriverContext None)
VOID None None.IoInitializeIrp(_Inout_ PIRP Irp,_In_ USHORT PacketSize,_In_ CCHAR StackSize)
VOID None None.IoInvalidateDeviceRelations(_In_ PDEVICE_OBJECT DeviceObject,_In_ DEVICE_RELATION_TYPE Type)
VOID None None.IoMarkIrpPending(_Inout_ PIRP Irp)
VOID None None.IoRaiseHardError(_In_ PIRP Irp,_In_opt_ PVPB Vpb,_In_ PDEVICE_OBJECT RealDeviceObject)
VOID None None.IoRegisterBootDriverReinitialization(_In_ PDRIVER_OBJECT DriverObject,_In_ PDRIVER_REINITIALIZE DriverReinitializationRoutine,_In_opt_ PVOID Context)
VOID None None.IoRegisterDriverReinitialization(_In_ PDRIVER_OBJECT DriverObject,_In_ PDRIVER_REINITIALIZE DriverReinitializationRoutine,_In_opt_ PVOID Context)
VOID None None.IoReleaseCancelSpinLock(_In_ KIRQL Irql)
VOID None None.IoReleaseRemoveLockAndWait(_In_ PIO_REMOVE_LOCK RemoveLock,_In_ PVOID Tag)
VOID None None.IoReleaseRemoveLock(_In_ PIO_REMOVE_LOCK RemoveLock,_In_ PVOID Tag)
VOID None None.IoRemoveShareAccess(_In_ PFILE_OBJECT FileObject,_Inout_ PSHARE_ACCESS ShareAccess)
VOID None None.IoRequestDpc(_In_ PDEVICE_OBJECT DeviceObject,_In_ PIRP Irp,_In_ PVOID Context)
VOID None None.IoReuseIrp(_Inout_ PIRP Irp,_In_ NTSTATUS Status)
VOID None None.IoSetCompletionRoutine(_In_ PIRP Irp,_In_opt_ PIO_COMPLETION_ROUTINE CompletionRoutine,_In_opt_ PVOID Context,_In_ BOOLEAN InvokeOnSuccess,_In_ BOOLEAN InvokeOnError,_In_ BOOLEAN InvokeOnCancel)
VOID None None.IoSetHardErrorOrVerifyDevice(_In_ PIRP Irp,_In_ PDEVICE_OBJECT DeviceObject)
VOID None None.IoSetNextIrpStackLocation(_Inout_ PIRP Irp)
VOID None None.IoSetShareAccess(_In_ ACCESS_MASK DesiredAccess,_In_ ULONG DesiredShareAccess,_Inout_ PFILE_OBJECT FileObject,_Out_ PSHARE_ACCESS ShareAccess)
VOID None None.IoSetStartIoAttributes(_In_ PDEVICE_OBJECT DeviceObject,_In_ BOOLEAN DeferredStartIo,_In_ BOOLEAN NonCancelable)
VOID None None.IoStartNextPacket(_In_ PDEVICE_OBJECT DeviceObject,_In_ BOOLEAN Cancelable)
VOID None None.IoStartTimer(_In_ PDEVICE_OBJECT DeviceObject)
VOID None None.IoStopTimer(_In_ PDEVICE_OBJECT DeviceObject)
VOID None None.IoUnregisterShutdownNotification(_In_ PDEVICE_OBJECT DeviceObject)
VOID None None.IoUpdateShareAccess(_In_ PFILE_OBJECT FileObject,_Inout_ PSHARE_ACCESS ShareAccess)
VOID None None.IoWriteErrorLogEntry(_In_ PVOID ElEntry)
void None None.IsTabStop(object sender None,RoutedEventArgs e None)
VOID None None.KeAcquireGuardedMutex(_Inout_ PKGUARDED_MUTEX Mutex)
VOID None None.KeAcquireGuardedMutexUnsafe(_Inout_ PKGUARDED_MUTEX FastMutex)
VOID None None.KeAcquireInStackQueuedSpinLockAtDpcLevel(_Inout_ PKSPIN_LOCK SpinLock,_Out_ PKLOCK_QUEUE_HANDLE LockHandle)
VOID None None.KeAcquireInStackQueuedSpinLockForDpc(_Inout_ PKSPIN_LOCK SpinLock,_Out_ PKLOCK_QUEUE_HANDLE LockHandle)
VOID None None.KeAcquireInStackQueuedSpinLock(_Inout_ PKSPIN_LOCK SpinLock,_Out_ PKLOCK_QUEUE_HANDLE LockHandle)
VOID None None.KeAcquireSpinLockAtDpcLevel(_Inout_ PKSPIN_LOCK SpinLock)
VOID None None.KeAcquireSpinLock(_In_ PKSPIN_LOCK SpinLock,_Out_ PKIRQL OldIrql)
VOID None None.KeBugCheckEx(_In_ ULONG BugCheckCode,_In_ ULONG_PTR BugCheckParameter1,_In_ ULONG_PTR BugCheckParameter2,_In_ ULONG_PTR BugCheckParameter3,_In_ ULONG_PTR BugCheckParameter4)
VOID None None.KeClearEvent(_Inout_ PRKEVENT Event)
VOID None None.KeEnterCriticalRegion(void None None)
VOID None None.KeEnterGuardedRegion(void None None)
VOID None None.KeFlushIoBuffers(_In_ PMDL Mdl,_In_ BOOLEAN ReadOperation,_In_ BOOLEAN DmaOperation)
VOID None None.KeFlushQueuedDpcs(void None None)
VOID None None.KeInitializeDeviceQueue(_Out_ PKDEVICE_QUEUE DeviceQueue)
VOID None None.KeInitializeDpc(_Out_ PRKDPC Dpc,_In_ PKDEFERRED_ROUTINE DeferredRoutine,_In_opt_ PVOID DeferredContext)
VOID None None.KeInitializeEvent(_Out_ PRKEVENT Event,_In_ EVENT_TYPE Type,_In_ BOOLEAN State)
VOID None None.KeInitializeGuardedMutex(_Out_ PKGUARDED_MUTEX Mutex)
VOID None None.KeInitializeMutex(_Out_ PRKMUTEX Mutex,_In_ ULONG Level)
VOID None None.KeInitializeSemaphore(_Out_ PRKSEMAPHORE Semaphore,_In_ LONG Count,_In_ LONG Limit)
VOID None None.KeInitializeSpinLock(_Out_ PKSPIN_LOCK SpinLock)
VOID None None.KeInitializeTimerEx(_Out_ PKTIMER Timer,_In_ TIMER_TYPE Type)
VOID None None.KeInitializeTimer(_Out_ PKTIMER Timer)
VOID None None.KeLeaveCriticalRegion(void None None)
VOID None None.KeLeaveGuardedRegion(void None None)
VOID None None.KeLowerIrql(_In_ KIRQL NewIrql)
VOID None None.KeQuerySystemTime(_Out_ PLARGE_INTEGER CurrentTime)
VOID None None.KeQueryTickCount(_Out_ PLARGE_INTEGER TickCount)
VOID None None.KeRaiseIrql(_In_ KIRQL NewIrql,_Out_ PKIRQL OldIrql)
VOID None None.KeReleaseGuardedMutex(_Inout_ PKGUARDED_MUTEX Mutex)
VOID None None.KeReleaseGuardedMutexUnsafe(_Inout_ PKGUARDED_MUTEX FastMutex)
VOID None None.KeReleaseInStackQueuedSpinLockForDpc(_In_ PKLOCK_QUEUE_HANDLE LockHandle)
VOID None None.KeReleaseInStackQueuedSpinLockFromDpcLevel(_In_ PKLOCK_QUEUE_HANDLE LockHandle)
VOID None None.KeReleaseInterruptSpinLock(_Inout_ PKINTERRUPT Interrupt,_In_ KIRQL OldIrql)
VOID None None.KeReleaseSpinLockForDpc(_Inout_ PKSPIN_LOCK SpinLock,_In_ KIRQL OldIrql)
VOID None None.KeReleaseSpinLockFromDpcLevel(_Inout_ PKSPIN_LOCK SpinLock)
VOID None None.KeReleaseSpinLock(_Inout_ PKSPIN_LOCK SpinLock,_In_ KIRQL NewIrql)
VOID None None.KeRevertToUserAffinityThreadEx(_In_ KAFFINITY Affinity)
VOID None None.KeSetSystemAffinityThread(_In_ KAFFINITY Affinity)
VOID None None.KeSetSystemGroupAffinityThread(_In_ PGROUP_AFFINITY Affinity,_Out_opt_ PGROUP_AFFINITY PreviousAffinity)
void None None.KeyError(USHORT code None,DWORD systemCode None)
void None None.KsPinAttachAndGate(_In_ PKSPIN Pin,_In_opt_ PKSGATE AndGate)
void None None.KsPinAttachOrGate(_In_ PKSPIN Pin,_In_opt_ PKSGATE OrGate)
VOID None None.KsPinSetPinClockTime(_In_ PKSPIN Pin,_In_ LONGLONG Time)
void None None.LabelTrackbarsWithBuddies(HWND hDlg None)
void None None.ListView_CancelEditLabel(HWND hwnd None)
void None None.ListView_GetGroupMetrics(HWND hwnd None,PLVGROUPMETRICS pGroupMetrics None)
void None None.ListView_GetItemText(HWND hwnd None,int iItem None,int iSubItem None,LPTSTR pszText None,int cchTextMax None)
void None None.ListView_GetTileInfo(HWND hwnd None,PLVTILEINFO plvtinfo None)
void None None.ListView_GetTileViewInfo(HWND hwnd None,PLVTILEVIEWINFO plvtvinfo None)
void None None.ListView_GetWorkAreas(HWND hwndLV None,INT nWorkAreas None,LPRECT lprc None)
void None None.ListView_InsertGroupSorted(HWND hwnd None,PLVINSERTGROUPSORTED structInsert None)
void None None.ListView_RemoveAllGroups(HWND hwnd None)
void None None.ListView_SetCheckState(HWND hwndLV None,UINT iIndex None,BOOL fCheck None)
void None None.ListView_SetExtendedListViewStyleEx(HWND hwndLV None,DWORD dwExMask None,DWORD dwExStyle None)
void None None.ListView_SetExtendedListViewStyle(HWND hwndLV None,DWORD dwExStyle None)
void None None.ListView_SetGroupMetrics(HWND hwnd None,PLVGROUPMETRICS pGroupMetrics None)
void None None.ListView_SetHoverTime(HWND hwndLV None,DWORD dwHoverTime None)
void None None.ListView_SetItemCountEx(HWND hwndLV None,int cItems None,DWORD dwFlags None)
void None None.ListView_SetItemCount(HWND hwndLV None,int cItems None)
void None None.ListView_SetItemPosition32(HWND hwnd None,int iItem None,int x None,int y None)
void None None.ListView_SetItemState(HWND hwnd None,int i None,UINT state None,UINT mask None)
VOID None None.ListView_SetItemText(HWND hwnd None,int i None,int iSubItem None,LPCTSTR pszText None)
void None None.ListView_SetSelectedColumn(HWND hwnd None,int iCol None)
void None None.ListView_SetWorkAreas(HWND hwndLV None,INT nWorkAreas None,LPRECT lprc None)
void None None.LoadAdapterState(Object state None)
void None None.LoadViewState(Object state None)
void None None.LogErrorEvent(BuildErrorEventArgs e None)
void None None.longjmp(jmp_buf env None,int value None)
VOID None None.LsaApLogonTerminated(_In_ PLUID LogonId)
void None None.Method2([in] sint32 InParam)
VOID None None.MmBuildMdlForNonPagedPool(_Inout_ PMDLX MemoryDescriptorList)
VOID None None.MmFreeContiguousMemory(_In_ PVOID BaseAddress)
VOID None None.MmFreeMappingAddress(_In_ PVOID BaseAddress,_In_ ULONG PoolTag)
VOID None None.MmFreeNonCachedMemory(_In_ PVOID BaseAddress,_In_ SIZE_T NumberOfBytes)
VOID None None.MmFreePagesFromMdl(_In_ PMDLX MemoryDescriptorList)
VOID None None.MmLockPagableSectionByHandle(_In_ PVOID ImageSectionHandle)
VOID None None.MmProbeAndLockPages(_Inout_ PMDLX MemoryDescriptorList,_In_ KPROCESSOR_MODE AccessMode,_In_ LOCK_OPERATION Operation)
VOID None None.MmResetDriverPaging(_In_ PVOID AddressWithinSection)
VOID None None.mmTaskBlock(DWORD h None)
VOID None None.MmUnlockPagableImageSection(_In_ PVOID ImageSectionHandle)
VOID None None.MmUnlockPages(_Inout_ PMDL MemoryDescriptorList)
VOID None None.MmUnmapLockedPages(_In_ PVOID BaseAddress,_In_ PMDL MemoryDescriptorList)
VOID None None.MmUnmapReservedMapping(_In_ PVOID BaseAddress,_In_ ULONG PoolTag,_In_ PMDLX MemoryDescriptorList)
VOID None None.MmUnsecureVirtualMemory(_In_ HANDLE SecureHandle)
void None None.MonthCal_SetToday(HWND hwndMC None,LPSYSTEMTIME lpSysTime None)
VOID None None.MQFreeMemory(PVOID pvMemory None)
VOID None None.MyFreeMdl(PMDL Mdl None)
VOID None None.MyPowerCompletion(__in PDEVICE_OBJECT DeviceObject,__in UCHAR MinorFunction,__in POWER_STATE PowerState,__in_opt PVOID Context,__in PIO_STATUS_BLOCK IoStatus)
void None None.MyProcedure_notify_flag(boolean __MIDL_NotifyFlag None)
void None None.MyProcedure_notify(void None None)
void None None.MyUpdateImage(LPCWSTR pszHashItem None,int iIndex None,UINT uFlags None,int iImageIndex None)
VOID None None.NdisInitializeEvent(_Out_ PNDIS_EVENT Event)
VOID None None.NdisMGetDeviceProperty(_In_ NDIS_HANDLE MiniportAdapterHandle,_Out_opt_ PDEVICE_OBJECT *PhysicalDeviceObject,_Out_opt_ PDEVICE_OBJECT *FunctionalDeviceObject,_Out_opt_ PDEVICE_OBJECT *NextDeviceObject,_Out_opt_ PCM_RESOURCE_LIST *AllocatedResources,_Out_opt_ PCM_RESOURCE_LIST *AllocatedResourcesTranslated)
VOID None None.NdisMIndicateStatusComplete(_In_ NDIS_HANDLE MiniportAdapterHandle)
VOID None None.NdisMIndicateStatus(_In_ NDIS_HANDLE MiniportAdapterHandle,_In_ NDIS_STATUS GeneralStatus,_In_ PVOID StatusBuffer,_In_ UINT StatusBufferSize)
VOID None None.NdisQueryBufferOffset(_In_ PNDIS_BUFFER Buffer,_Out_ PUINT Offset,_Out_ PUINT Length)
VOID None None.NdisSendPackets(_In_ NDIS_HANDLE NdisBindingHandle,_In_ PPNDIS_PACKET PacketArray,_In_ UINT NumberOfPackets)
VOID None None.NdisZeroMemory(_In_ PVOID Destination,_In_ ULONG Length)
void None None.NetworkToHostOrder_Long(__int64 networkByte None)
VOID None None.ObDereferenceObjectDeferDeleteWithTag(_In_ PVOID Object,_In_ ULONG Tag)
VOID None None.ObDereferenceObject(_In_ PVOID Object)
VOID None None.ObDereferenceObjectWithTag(_In_ PVOID Object,_In_ ULONG Tag)
VOID None None.ObReferenceObject(_In_ PVOID Object)
VOID None None.ObReferenceObjectWithTag(_In_ PVOID Object,_In_ ULONG Tag)
VOID None None.ObReleaseObjectSecurity(_In_ PSECURITY_DESCRIPTOR SecurityDescriptor,_In_ BOOLEAN MemoryAllocated)
void None None.OMGetBlendState([out] ID3D10BlendState **ppBlendState,[out] FLOAT BlendFactor[4],[out] UINT *pSampleMask)
void None None.OMGetBlendState([out None None,optional] ID3D11BlendState **ppBlendState,[out None None,optional] FLOAT BlendFactor[4],[out None None,optional] UINT *pSampleMask)
void None None.OMGetDepthStencilState([out] ID3D10DepthStencilState **ppDepthStencilState,[out] UINT *pStencilRef)
void None None.OMGetDepthStencilState([out None None,optional] ID3D11DepthStencilState **ppDepthStencilState,[out None None,optional] UINT *pStencilRef)
void None None.OMGetRenderTargetsAndUnorderedAccessViews([in] UINT NumRTVs,[out None None,optional] ID3D11RenderTargetView **ppRenderTargetViews,[out None None,optional] ID3D11DepthStencilView **ppDepthStencilView,[in] UINT UAVStartSlot,[in] UINT NumUAVs,[out None None,optional] ID3D11UnorderedAccessView **ppUnorderedAccessViews)
void None None.OMGetRenderTargets([in] UINT NumViews,[out] ID3D10RenderTargetView **ppRenderTargetViews,[out] ID3D10DepthStencilView **ppDepthStencilView)
void None None.OMGetRenderTargets([in] UINT NumViews,[out None None,optional] ID3D11RenderTargetView **ppRenderTargetViews,[out None None,optional] ID3D11DepthStencilView **ppDepthStencilView)
void None None.OMSetDepthStencilState([in] ID3D10DepthStencilState *pDepthStencilState,[in] UINT StencilRef)
void None None.OMSetDepthStencilState([in None None,optional] ID3D11DepthStencilState *pDepthStencilState,[in] UINT StencilRef)
void None None.OnClick1(object sender None,RoutedEventArgs e None)
void None None.OnClickMoveToStart(object sender None,RoutedEventArgs e None)
void None None.OnComponentChanging(Object component None,MemberDescriptor member None)
void None None.OnCreateFile([in] IWDFIoQueue *pWdfQueue,[in] IWDFIoRequest *pWdfRequest,[in] IWDFFile *pWdfFileObject)
void None None.OnDeserialization(Object sender None)
void None None.OnDisconnected([in] LONG discReason,[in] LONG extendedDiscReason)
void None None.OnError([in] long ErrorNumber,[in] BSTR ErrorDescription)
void None None.OnMediaPlayerEvent([in] MFP_EVENT_HEADER *pEventHeader)
void None None.OnPreRender(EventArgs e None)
void None None.OnRemoteDesktopSizeChanged(LONG width None,LONG height None)
void None None.OnStylusButtonDown(object sender None,StylusButtonEventArgs e None)
void None None.OpenCmdExecuted(object target None,ExecutedRoutedEventArgs e None)
void None None.Page_Init(object sender None,EventArgs e None)
void None None.Page_Init(Object sender None,EventArgs e None)
void None None.Page_Load(Object sender None,EventArgs e None)
void None None.Page_Load(Object Sender None,EventArgs e None)
void None None.Page_Load(object sender None,System.EventArgs e None)
void None None.Page_Load(Object sender None,System.EventArgs e None)
VOID None None.Pager_ForwardMouse(HWND hwndPager None,BOOL bForward None)
void None None.Pager_GetDropTarget(HWND hwndPager None,IDropTarget **ppDropTarget None)
void None None.Pager_RecalcSize(HWND hwndPager None)
void None None.Pager_SetChild(HWND hwndPager None,HWND hwndChild None)
void None None.PaintWindow(BOOL bErase None)
VOID None None.PATHOBJ_vEnumStartClipLines(PATHOBJ *ppo None,CLIPOBJ *pco None,SURFOBJ *pso None,LINEATTRS *pla None)
void None None.perror(const char *string)
void None None.PlaylistCollectionPlaylistSetAsDeleted([in] BSTR bstrPlaylistName,[in] VARIANT_BOOL varfIsDeleted)
VOID None None.PoFxSetComponentLatency(_In_ POHANDLE Handle,_In_ ULONG Component,_In_ ULONGLONG Latency)
void None None.PostFilterAttributes(IDictionary attributes None)
void None None.PostFilterEvents(IDictionary events None)
void None None.Prepare(PreparingEnlistment preparingEnlistment None)
void None None.printf(string format None,argument ... None)
void None None.PrintText(object sender None,SelectionChangedEventArgs args None)
VOID None None.ProbeForRead(_In_ PVOID Address,_In_ SIZE_T Length,_In_ ULONG Alignment)
VOID None None.ProbeForWrite(_Inout_ PVOID Address,_In_ SIZE_T Length,_In_ ULONG Alignment)
void None None.proc1(void None None)
void None None.Process2DQuadTessFactorsAvg(in float4 RawEdgeFactors,in float2 InsideScale,out float4 RoundedEdgeTessFactors,out float2 RoundedInsideTessFactors,out float2 UnroundedInsideTessFactors)
void None None.Process2DQuadTessFactorsMax(in float4 RawEdgeFactors,in float2 InsideScale,out float4 RoundedEdgeTessFactors,out float2 RoundedInsideTessFactors,out float2 UnroundedInsideTessFactors)
void None None.Process2DQuadTessFactorsMin(in float4 RawEdgeFactors,in float2 InsideScale,out float4 RoundedEdgeTessFactors,out float2 RoundedInsideTessFactors,out float2 UnroundedInsideTessFactors)
void None None.ProcessIsolineTessFactors(in float RawDetailFactor,in float RawDensityFactor,out float RoundedDetailFactor,out float RoundedDensityFactor)
void None None.ProcessQuadTessFactorsAvg(in float4 RawEdgeFactors,in float InsideScale,out float4 RoundedEdgeTessFactors,out float2 RoundedInsideTessFactors,out float2 UnroundedInsideTessFactors)
void None None.ProcessQuadTessFactorsMax(in float4 RawEdgeFactors,in float InsideScale,out float4 RoundedEdgeTessFactors,out float2 RoundedInsideTessFactors,out float2 UnroundedInsideTessFactors)
void None None.ProcessQuadTessFactorsMin(in float4 RawEdgeFactors,in float InsideScale,out float4 RoundedEdgeTessFactors,out float2 RoundedInsideTessFactors,out float2 UnroundedInsideTessFactors)
void None None.ProcessTriTessFactorsAvg(in float3 RawEdgeFactors,in float InsideScale,out float3 RoundedEdgeTessFactors,out float RoundedInsideTessFactor,out float UnroundedInsideTessFactor)
void None None.ProcessTriTessFactorsMax(in float3 RawEdgeFactors,in float InsideScale,out float3 RoundedEdgeTessFactors,out float RoundedInsideTessFactor,out float UnroundedInsideTessFactor)
void None None.ProcessTriTessFactorsMin(in float3 RawEdgeFactors,in float InsideScale,out float3 RoundedEdgeTessFactors,out float RoundedInsideTessFactors,out float UnroundedInsideTessFactors)
void None None.ProcessVideoImage(BYTE* pDestScanLine0 None,LONG lDestStride None,const BYTE* pSrcScanLine0,LONG lSrcStride None,DWORD dwWidthInPixels None,DWORD dwHeightInPixels None)
VOID None None.PropSheet_CancelToClose(HWND hPropSheetDlg None)
VOID None None.PropSheet_EnableWizButtons(HWND hDlg None,DWORD dwState None,DWORD dwMask None)
VOID None None.PropSheet_RebootSystem(HWND hPropSheetDlg None)
VOID None None.PropSheet_RemovePage(HWND hPropSheetDlg None,int index None,HPROPSHEETPAGE hpage None)
VOID None None.PropSheet_RestartWindows(HWND hPropSheetDlg None)
VOID None None.PropSheet_SetButtonText(HWND hDlg None,DWORD dwButton None,LPCTSTR lpszText None)
VOID None None.PropSheet_SetFinishText(HWND hPropSheetDlg None,LPTSTR lpszText None)
VOID None None.PropSheet_SetHeaderSubTitle(HWND hWizardDlg None,int iPageIndex None,LPCSTR pszHeaderSubTitle None)
VOID None None.PropSheet_SetNextText(HWND hDlg None,LPTSTR lpszText None)
VOID None None.PropSheet_SetTitle(HWND hPropSheetDlg None,DWORD dwStyle None,LPTSTR lpszText None)
VOID None None.PropSheet_SetWizButtons(HWND hPropSheetDlg None,DWORD dwFlags None)
VOID None None.PropSheet_ShowWizButtons(HWND hDlg None,DWORD dwFlag None,DWORD dwButton None)
VOID None None.PropSheet_UnChanged(HWND hPropSheetDlg None,HWND hwndPage None)
void None None.PropVariantInit(_Out_ PROPVARIANT *pvar)
VOID None None.PsDereferenceImpersonationToken(_In_ PACCESS_TOKEN ImpersonationToken)
void None None.PSGetConstantBuffers([in] UINT StartSlot,[in] UINT NumBuffers,[out] ID3D10Buffer **ppConstantBuffers)
void None None.PSGetConstantBuffers([in] UINT StartSlot,[in] UINT NumBuffers,[out None None,optional] ID3D11Buffer **ppConstantBuffers)
void None None.PSGetSamplers([in] UINT StartSlot,[in] UINT NumSamplers,[out] ID3D10SamplerState **ppSamplers)
void None None.PSGetSamplers([in] UINT StartSlot,[in] UINT NumSamplers,[out None None,optional] ID3D11SamplerState **ppSamplers)
void None None.PSGetShader([out] ID3D10PixelShader **ppPixelShader)
void None None.PSGetShader([out] ID3D11PixelShader **ppPixelShader,[out None None,optional] ID3D11ClassInstance **ppClassInstances,[in None None,out None None,optional] UINT *pNumClassInstances)
void None None.PSGetShaderResources([in] UINT StartSlot,[in] UINT NumViews,[out] ID3D10ShaderResourceView **ppShaderResourceViews)
void None None.PSGetShaderResources([in] UINT StartSlot,[in] UINT NumViews,[out None None,optional] ID3D11ShaderResourceView **ppShaderResourceViews)
void None None.PSSetShader([in] ID3D10PixelShader *pPixelShader)
void None None.PutEndTx([in] IUnknown *pObj)
void None None.QueueSample(IMediaSample *pSample None)
void None None.RaiseCallbackEvent(String eventArgument None)
void None None.RaisePostBackEvent(String eventArgument None)
void None None.ReadXml(XmlReader reader None)
void None None.ReleaseTypeAttr([in] TYPEATTR *pTypeAttr)
void None None.ReleaseVarDesc([in] VARDESC *pVarDesc)
void None None.RemoveAt(int index None)
void None None.RemoveAttribute(String attribute None,boolean ignoreCase None)
void None None.RemoveAttribute(String name None)
void None None.Remove(IComponent component None)
void None None.Remove(Object key None)
void None None.Remove(object value None)
void None None.Remove(Object value None)
void None None.ResolveSubresource([in] ID3D11Resource *pDstResource,[in] UINT DstSubresource,[in] ID3D11Resource *pSrcResource,[in] UINT SrcSubresource,[in] DXGI_FORMAT Format)
void None None.RestoreDefaultProperties(object sender None,RoutedEventArgs e None)
void None None.rewind(FILE *stream None)
void None None.Rollback(Enlistment enlistment None)
void None None.Rollback(SinglePhaseEnlistment singlePhaseEnlistment None)
VOID None None.RootHub_EvtRootHubGet20PortInfo(UCXROOTHUB UcxRootHub None,WDFREQUEST Request None)
VOID None None.RootHub_EvtRootHubGetInfo(UCXROOTHUB UcxRootHub None,WDFREQUEST Request None)
void None None.RSGetScissorRects([in None None,out] UINT *NumRects,[out] D3D10_RECT *pRects)
void None None.RSGetScissorRects([in None None,out] UINT *pNumRects,[out None None,optional] D3D11_RECT *pRects)
void None None.RSGetState([out] ID3D10RasterizerState **ppRasterizerState)
void None None.RSGetState([out] ID3D11RasterizerState **ppRasterizerState)
void None None.RSGetViewports([in None None,out] UINT *NumViewports,[out] D3D10_VIEWPORT *pViewports)
void None None.RSGetViewports([in None None,out] UINT *pNumViewports,[out None None,optional] D3D11_VIEWPORT *pViewports)
void None None.RSSetState([in] ID3D10RasterizerState *pRasterizerState)
void None None.RSSetState([in None None,optional] ID3D11RasterizerState *pRasterizerState)
VOID None None.RtlFreeAnsiString(_Inout_ PANSI_STRING AnsiString)
VOID None None.RtlInitAnsiString(_Out_ PANSI_STRING DestinationString,_In_opt_ PCSZ SourceString)
VOID None None.RtlInitString(_Out_ PSTRING DestinationString,_In_opt_ PCSZ SourceString)
VOID None None.RtlInitUnicodeString(_Out_ PUNICODE_STRING DestinationString,_In_opt_ PCWSTR SourceString)
VOID None None.SeCaptureSubjectContext(_Out_ PSECURITY_SUBJECT_CONTEXT SubjectContext)
VOID None None.SeDeleteObjectAuditAlarm(_In_ PVOID Object,_In_ HANDLE Handle)
VOID None None.SeFreePrivileges(_In_ PPRIVILEGE_SET Privileges)
void None None.SendNotifyWindow(IPin *pPin None,HWND hwnd None)
VOID None None.SeOpenObjectAuditAlarm(_In_ PUNICODE_STRING ObjectTypeName,_In_opt_ PVOID Object,_In_opt_ PUNICODE_STRING AbsoluteObjectName,_In_ PSECURITY_DESCRIPTOR SecurityDescriptor,_In_ PACCESS_STATE AccessState,_In_ BOOLEAN ObjectCreated,_In_ BOOLEAN AccessGranted,_In_ KPROCESSOR_MODE AccessMode,_Out_ PBOOLEAN GenerateOnClose)
VOID None None.SeOpenObjectForDeleteAuditAlarm(_In_ PUNICODE_STRING ObjectTypeName,_In_opt_ PVOID Object,_In_opt_ PUNICODE_STRING AbsoluteObjectName,_In_ PSECURITY_DESCRIPTOR SecurityDescriptor,_In_ PACCESS_STATE AccessState,_In_ BOOLEAN ObjectCreated,_In_ BOOLEAN AccessGranted,_In_ KPROCESSOR_MODE AccessMode,_Out_ PBOOLEAN GenerateOnClose)
VOID None None.SeSetAccessStateGenericMapping(_Inout_ PACCESS_STATE AccessState,_In_ PGENERIC_MAPPING GenericMapping)
void None None.SetAbortSignal(BOOL bAbort None)
void None None.SetAspectRatioMode([in] DWORD dwAspectRatioMode)
void None None.SetAttribute(String key None,String value None)
void None None.SetAttribute(String name None,String value None)
void None None.setbuf(FILE *stream None,char *buffer None)
void None None.SetConfigInfo(IGraphConfig *pGraphConfig None,HANDLE hStopEvent None)
void None None.SetContractDelegateWindow(_In_ HWND hwndSource,_In_opt_ HWND hwndDelegate)
void None None.SetControlVideoPin(CBasePin *pPin None)
void None None.SetControlWindowPin(CBasePin *pPin None)
void None None.SetCursorPosition([in] INT X,[in] INT Y,[in] DWORD Flags)
void None None.SetData(string format None,bool autoConvert None,object data None)
void None None.SetData(String format None,boolean autoConvert None,Object data None)
void None None.SetDesignModeState(IDictionary data None)
void None None.SetFilterGraph(IMediaEventSink *pSink None)
void None None.SetFormatType(const GUID *pformattype)
void None None.SetImageInformation(string imageInformation None)
void None None.SetName(Object instance None,String name None)
void None None.SetOwnerControl(Control owner None)
void None None.SetPredication([in] ID3D10Predicate *pPredicate,[in] BOOL PredicateValue)
void None None.SetPredication([in None None,optional] ID3D11Predicate *pPredicate,[in] BOOL PredicateValue)
void None None.SetRealize(BOOL bRealize None)
void None None.SetReconnectWhenActive(bool bCanReconnect None)
void None None.SetRepaintStatus(BOOL bRepaint None)
void None None.SetResourceMinLOD([in] ID3D11Resource *pResource,FLOAT MinLOD None)
void None None.SetTextFilterSize([in] UINT Width,[in] UINT Height)
VOID None None.SetThreadpoolCallbackCleanupGroup(_Inout_ PTP_CALLBACK_ENVIRON pcbe,_In_ PTP_CLEANUP_GROUP ptpcg,_In_opt_ PTP_CLEANUP_GROUP_CANCEL_CALLBACK pfng)
VOID None None.SetThreadpoolCallbackLibrary(_Inout_ PTP_CALLBACK_ENVIRON pcbe,_In_ PVOID mod)
VOID None None.SetThreadpoolCallbackPersistent(_Inout_ PTP_CALLBACK_ENVIRON pcbe)
VOID None None.SetThreadpoolCallbackPool(_Inout_ PTP_CALLBACK_ENVIRON pcbe,_In_ PTP_POOL ptpp)
VOID None None.SetThreadpoolCallbackPriority(_Inout_ PTP_CALLBACK_ENVIRON pcbe,_In_ TP_CALLBACK_PRIORITY Priority)
VOID None None.SetThreadpoolCallbackRunsLong(_Inout_ PTP_CALLBACK_ENVIRON pcbe)
void None None.SetValue(Object obj None,Object value None,BindingFlags invokeAttr None,Binder binder None,Object[] index None,CultureInfo culture None)
VOID None None.SeUnlockSubjectContext(_In_ PSECURITY_SUBJECT_CONTEXT SubjectContext)
void None None.SinglePhaseCommit(SinglePhaseEnlistment singlePhaseEnlistment None)
void None None.SlowRender(IMediaSample *pMediaSample None)
void None None.SOGetTargets([in] UINT NumBuffers,[out] ID3D10Buffer **ppSOTargets,[out] UINT *pOffsets)
void None None.SOGetTargets([in] UINT NumBuffers,[out None None,optional] ID3D11Buffer **ppSOTargets)
void None None.SomeMethod([out None None,retval] VARIANT_BOOL* None)
void None None.Store2(in uint address,in uint2 values)
void None None.Store4(in uint address,in uint4 values)
void None None.Store(in uint address,in uint value)
VOID None None.StorPortNotification(IN SCSI_NOTIFICATION_TYPE NotificationType,IN PVOID HwDeviceExtension,... arguments None)
VOID None None.StreamClassDeviceNotification(_In_ STREAM_MINIDRIVER_DEVICE_NOTIFICATION_TYPE NotificationType,_In_ PVOID HwDeviceExtension,PHW_STREAM_REQUEST_BLOCK pSrb None,PKSEVENT_ENTRY EventEntry None,GUID *EventSet None,ULONG EventId None)
VOID None None.StreamClassStreamNotification(_In_ STREAM_MINIDRIVER_STREAM_NOTIFICATION_TYPE NotificationType,_In_ PHW_STREAM_OBJECT StreamObject,PHW_STREAM_REQUEST_BLOCK pSrb None,PKSEVENT_ENTRY EventEntry None,GUID *EventSet None,ULONG EventId None)
VOID None None.STROBJ_vEnumStart(STROBJ *pstro None)
void None None.submit_Click(object sender None,RoutedEventArgs e None)
VOID None None.TabCtrl_AdjustRect(HWND hwnd None,BOOL fLarger None,RECT *prc None)
VOID None None.TabCtrl_DeselectAll(HWND hwndTab None,UINT fExcludeFocus None)
void None None.TabCtrl_RemoveImage(HWND hwnd None,int iImage None)
VOID None None.TabCtrl_SetCurFocus(HWND hwnd None,int iItem None)
void None None.TabCtrl_SetPadding(HWND hwnd None,int cx None,int cy None)
void None None.TabCtrl_SetToolTips(HWND hwndTab None,HWND hwndTT None)
void None None.TestCallBack(FPTR pf None,int value None)
void None None.textbox1_LostStylusCapture(object sender None,StylusEventArgs e None)
void None None.textbox1_PreviewStylusButtonDown(object sender None,StylusButtonEventArgs e None)
void None None.textbox1_PreviewStylusButtonUp(object sender None,StylusButtonEventArgs e None)
void None None.textbox1_PreviewStylusInRange(object sender None,StylusEventArgs e None)
void None None.textbox1_PreviewStylusMove(object sender None,StylusEventArgs e None)
void None None.textbox1_PreviewStylusOutOfRange(object sender None,StylusEventArgs e None)
void None None.textbox1_PreviewStylusSystemGesture(object sender None,StylusSystemGestureEventArgs e None)
void None None.textbox1_StylusDown(object sender None,StylusDownEventArgs e None)
VOID None None.TmGetTransactionId(_In_ PKTRANSACTION Transaction,_Out_ PUOW TransactionId)
void None None.TreeView1_SelectedNodeChanged(Object sender None,System.EventArgs e None)
void None None.UCM_CONNECTOR_PD_CONN_STATE_CHANGED_PARAMS_INIT(_Out_ PUCM_CONNECTOR_PD_CONN_STATE_CHANGED_PARAMS Params,_In_ UCM_PD_CONN_STATE PdConnState)
VOID None None.UcmTcpciPortControllerAlert(_In_ UCMTCPCIPORTCONTROLLER PortControllerObject,PUCMTCPCI_PORT_CONTROLLER_ALERT_DATA AlertData None,size_t NumberOfAlerts None)
VOID None None.UCMTCPCI_PORT_CONTROLLER_CONFIG_INIT(_Out_ PUCMTCPCI_PORT_CONTROLLER_CONFIG Config,_In_ PUCMTCPCI_PORT_CONTROLLER_IDENTIFICATION Identification,_In_ PUCMTCPCI_PORT_CONTROLLER_CAPABILITIES Capabilities)
void None None.UdecxUsbDeviceInitSetStateChangeCallbacks(_Inout_ PUDECXUSBDEVICE_INIT UdecxUsbDeviceInit,_In_ PUDECX_USB_DEVICE_STATE_CHANGE_CALLBACKS Callbacks)
VOID None None.UmsSchedulerProc(_In_ UMS_SCHEDULER_REASON Reason,_In_ ULONG_PTR ActivationPayload,_In_ PVOID SchedulerParam)
void None None.Unmap([in] ID3D11Resource *pResource,[in] UINT Subresource)
void None None.Unmap([in] UINT Subresource)
void None None.Unpack2UINT32AsUINT64([in] UINT64 unPacked,[out] UINT32 *punHigh,[out] UINT32 *punLow)
void None None.unpackratio([in] UINT64 unPacked,[out] UINT32 *pnNumerator,[out] UINT32 *punDenominator)
void None None.UnpackSize([in] UINT64 unPacked,[out] UINT32 *punWidth,[out] UINT32 *punHeight)
void None None.UnregisterName(String name None)
void None None.UploadProgressCallback(Object* /*sender*/ None,UploadProgressEventArgs* e None)
void None None.UsbBuildGetDescriptorRequest([in None None,out] PURB Urb,[in] USHORT Length,[in] UCHAR DescriptorType,[in] UCHAR Index,[in] USHORT LanguageId,[in None None,optional] PVOID TransferBuffer,[in None None,optional] PMDL TransferBufferMDL,[in] ULONG TransferBufferLength,[in] PURB Link)
void None None.UsbBuildInterruptOrBulkTransferRequest(_Inout_ PURB Urb,_In_ USHORT Length,_In_ USBD_PIPE_HANDLE PipeHandle,_In_opt_ PVOID TransferBuffer,_In_opt_ PMDL TransferBufferMDL,_In_ ULONG TransferBufferLength,_In_ ULONG TransferFlags,_In_ PURB Link)
void None None.UsbBuildOpenStaticStreamsRequest(_Inout_ PURB Urb,_In_ USBD_PIPE_HANDLE PipeHandle,_In_ USHORT NumberOfStreams,_In_ USBD_STREAM_INFORMATION StreamInfoArray)
VOID None None.USBD_CloseHandle(_In_ USBD_HANDLE USBDHandle)
VOID None None.UsbDevice_EvtUcxUsbDeviceAddress(UCXCONTROLLER UcxController None,WDFREQUEST Request None)
VOID None None.UsbDevice_EvtUcxUsbDeviceDisable(UCXCONTROLLER UcxController None,WDFREQUEST Request None)
VOID None None.UsbDevice_EvtUcxUsbDeviceUpdate(UCXCONTROLLER UcxController None,WDFREQUEST Request None)
VOID None None.USBD_RegisterHcFilter(_In_ PDEVICE_OBJECT DeviceObject,_In_ PDEVICE_OBJECT FilterDeviceObject)
void None None.USBD_UrbFree(_In_ USBD_HANDLE USBDHandle,_In_ PURB Urb)
void None None.UserInfo(Object sender None,EventArgs e None)
void None None.ValidateBtn_Click(Object sender None,EventArgs e None)
void None None.VoidFunc1(void None None)
void None None.VSGetConstantBuffers([in] UINT StartSlot,[in] UINT NumBuffers,[out] ID3D10Buffer **ppConstantBuffers)
void None None.VSGetConstantBuffers([in] UINT StartSlot,[in] UINT NumBuffers,[out None None,optional] ID3D11Buffer **ppConstantBuffers)
void None None.VSGetSamplers([in] UINT StartSlot,[in] UINT NumSamplers,[out] ID3D10SamplerState **ppSamplers)
void None None.VSGetSamplers([in] UINT StartSlot,[in] UINT NumSamplers,[out None None,optional] ID3D11SamplerState **ppSamplers)
void None None.VSGetShader([out] ID3D10VertexShader **ppVertexShader)
void None None.VSGetShader([out] ID3D11VertexShader **ppVertexShader,[out None None,optional] ID3D11ClassInstance **ppClassInstances,[in None None,out None None,optional] UINT *pNumClassInstances)
void None None.VSGetShaderResources([in] UINT StartSlot,[in] UINT NumViews,[out] ID3D10ShaderResourceView **ppShaderResourceViews)
void None None.VSGetShaderResources([in] UINT StartSlot,[in] UINT NumViews,[out None None,optional] ID3D11ShaderResourceView **ppShaderResourceViews)
void None None.WaitCallback(Object state None)
void None None.Warning([in] long WarningType,[in] long Param,[in] BSTR Description)
VOID None None.WDF_CHILD_ADDRESS_DESCRIPTION_HEADER_INIT(_Out_ PWDF_CHILD_ADDRESS_DESCRIPTION_HEADER Header,_In_ ULONG AddressDescriptionSize)
VOID None None.WDF_CHILD_IDENTIFICATION_DESCRIPTION_HEADER_INIT(_Out_ PWDF_CHILD_IDENTIFICATION_DESCRIPTION_HEADER Header,_In_ ULONG IdentificationDescriptionSize)
VOID None None.WdfChildListBeginIteration(_In_ WDFCHILDLIST ChildList,_In_ PWDF_CHILD_LIST_ITERATOR Iterator)
VOID None None.WdfChildListBeginScan(_In_ WDFCHILDLIST ChildList)
VOID None None.WDF_CHILD_LIST_CONFIG_INIT(_Out_ PWDF_CHILD_LIST_CONFIG Config,_In_ ULONG IdentificationDescriptionSize,_In_ PFN_WDF_CHILD_LIST_CREATE_DEVICE EvtChildListCreateDevice)
VOID None None.WdfChildListEndIteration(_In_ WDFCHILDLIST ChildList,_In_ PWDF_CHILD_LIST_ITERATOR Iterator)
VOID None None.WdfChildListEndScan(_In_ WDFCHILDLIST ChildList)
VOID None None.WdfChildListUpdateAllChildDescriptionsAsPresent(_In_ WDFCHILDLIST ChildList)
VOID None None.WdfCmResourceListRemoveByDescriptor(_In_ WDFCMRESLIST List,_In_ PCM_PARTIAL_RESOURCE_DESCRIPTOR Descriptor)
VOID None None.WdfCmResourceListRemove(_In_ WDFCMRESLIST List,_In_ ULONG Index)
VOID None None.WdfCollectionRemove(_In_ WDFCOLLECTION Collection,_In_ WDFOBJECT Item)
VOID None None.WdfCollectionRemoveItem(_In_ WDFCOLLECTION Collection,_In_ ULONG Index)
VOID None None.WdfControlDeviceInitSetShutdownNotification(_In_ PWDFDEVICE_INIT DeviceInit,_In_ PFN_WDF_DEVICE_SHUTDOWN_NOTIFICATION Notification,_In_ UCHAR Flags)
VOID None None.WdfControlFinishInitializing(_In_ WDFDEVICE Device)
void None None.WDF_DECLARE_CONTEXT_TYPE(_contexttype None None)
void None None.WDF_DECLARE_CONTEXT_TYPE_WITH_NAME(_contexttype None None,_castingfunction None None)
VOID None None.WdfDeviceClearRemovalRelationsDevices(_In_ WDFDEVICE Device)
VOID None None.WdfDeviceGetDeviceState(_In_ WDFDEVICE Device,_Out_ PWDF_DEVICE_STATE DeviceState)
VOID None None.WdfDeviceInitFree(_In_ PWDFDEVICE_INIT DeviceInit)
VOID None None.WdfDeviceInitSetCharacteristics(_In_ PWDFDEVICE_INIT DeviceInit,_In_ ULONG DeviceCharacteristics,_In_ BOOLEAN OrInValues)
VOID None None.WdfDeviceInitSetDeviceType(_In_ PWDFDEVICE_INIT DeviceInit,_In_ DEVICE_TYPE DeviceType)
VOID None None.WdfDeviceInitSetExclusive(_In_ PWDFDEVICE_INIT DeviceInit,_In_ BOOLEAN IsExclusive)
VOID None None.WdfDeviceInitSetFileObjectConfig(_In_ PWDFDEVICE_INIT DeviceInit,_In_ PWDF_FILEOBJECT_CONFIG FileObjectConfig,_In_opt_ PWDF_OBJECT_ATTRIBUTES FileObjectAttributes)
VOID None None.WdfDeviceInitSetIoInCallerContextCallback(_In_ PWDFDEVICE_INIT DeviceInit,_In_ PFN_WDF_IO_IN_CALLER_CONTEXT EvtIoInCallerContext)
void None None.WdfDeviceInitSetIoType(_In_ PWDFDEVICE_INIT DeviceInit,_In_ WDF_DEVICE_IO_TYPE IoType)
VOID None None.WdfDeviceInitSetPnpPowerEventCallbacks(_In_ PWDFDEVICE_INIT DeviceInit,_In_ PWDF_PNPPOWER_EVENT_CALLBACKS PnpPowerEventCallbacks)
VOID None None.WdfDeviceInitSetPowerInrush(_In_ PWDFDEVICE_INIT DeviceInit)
VOID None None.WdfDeviceInitSetPowerNotPageable(_In_ PWDFDEVICE_INIT DeviceInit)
VOID None None.WdfDeviceInitSetPowerPageable(_In_ PWDFDEVICE_INIT DeviceInit)
VOID None None.WdfDeviceInitSetPowerPolicyEventCallbacks(_In_ PWDFDEVICE_INIT DeviceInit,_In_ PWDF_POWER_POLICY_EVENT_CALLBACKS PowerPolicyEventCallbacks)
VOID None None.WdfDeviceInitSetPowerPolicyOwnership(_In_ PWDFDEVICE_INIT DeviceInit,_In_ BOOLEAN IsPowerPolicyOwner)
void None None.WdfDeviceInitSetReleaseHardwareOrderOnFailure(_In_ PWDFDEVICE_INIT DeviceInit,_In_ WDF_RELEASE_HARDWARE_ORDER_ON_FAILURE ReleaseHardwareOrderOnFailure)
void None None.WdfDeviceInitSetRemoveLockOptions(_In_ PWDFDEVICE_INIT DeviceInit,_In_ PWDF_REMOVE_LOCK_OPTIONS Options)
VOID None None.WdfDeviceInitSetRequestAttributes(_In_ PWDFDEVICE_INIT DeviceInit,_In_ PWDF_OBJECT_ATTRIBUTES RequestAttributes)
VOID None None.WDF_DEVICE_POWER_POLICY_IDLE_SETTINGS_INIT(_Out_ PWDF_DEVICE_POWER_POLICY_IDLE_SETTINGS Settings,_In_ WDF_POWER_POLICY_S0_IDLE_CAPABILITIES IdleCaps)
VOID None None.WdfDeviceRemoveDependentUsageDeviceObject(_In_ WDFDEVICE Device,_In_ PDEVICE_OBJECT DependentDevice)
VOID None None.WdfDeviceRemoveRemovalRelationsPhysicalDevice(_In_ WDFDEVICE Device,_In_ PDEVICE_OBJECT PhysicalDevice)
VOID None None.WdfDeviceResumeIdle(_In_ WDFDEVICE Device)
VOID None None.WdfDeviceSetAlignmentRequirement(_In_ WDFDEVICE Device,_In_ ULONG AlignmentRequirement)
VOID None None.WdfDeviceSetBusInformationForChildren(_In_ WDFDEVICE Device,_In_ PPNP_BUS_INFORMATION BusInformation)
VOID None None.WdfDeviceSetCharacteristics(_In_ WDFDEVICE Device,_In_ ULONG DeviceCharacteristics)
VOID None None.WdfDeviceSetDeviceState(_In_ WDFDEVICE Device,_In_ PWDF_DEVICE_STATE DeviceState)
VOID None None.WdfDeviceSetFailed(_In_ WDFDEVICE Device,_In_ WDF_DEVICE_FAILED_ACTION FailedAction)
VOID None None.WdfDeviceSetPnpCapabilities(_In_ WDFDEVICE Device,_In_ PWDF_DEVICE_PNP_CAPABILITIES PnpCapabilities)
VOID None None.WdfDeviceSetPowerCapabilities(_In_ WDFDEVICE Device,_In_ PWDF_DEVICE_POWER_CAPABILITIES PowerCapabilities)
VOID None None.WdfDeviceSetSpecialFileSupport(_In_ WDFDEVICE Device,_In_ WDF_SPECIAL_FILE_TYPE FileType,_In_ BOOLEAN FileTypeIsSupported)
VOID None None.WdfDeviceSetStaticStopRemove(_In_ WDFDEVICE Device,_In_ BOOLEAN Stoppable)
VOID None None.WDF_DMA_ENABLER_CONFIG_INIT(_Out_ PWDF_DMA_ENABLER_CONFIG Config,_In_ WDF_DMA_PROFILE Profile,_In_ size_t MaximumLength)
VOID None None.WdfDmaEnablerSetMaximumScatterGatherElements(_In_ WDFDMAENABLER DmaEnabler,_In_ size_t MaximumFragments)
void None None.WdfDmaTransactionFreeResources(_In_ WDFDMATRANSACTION DmaTransaction)
void None None.WdfDmaTransactionGetTransferInfo(_In_ WDFDMATRANSACTION DmaTransaction,_Out_opt_ ULONG *MapRegisterCount,_Out_opt_ ULONG *ScatterGatherElementCount)
void None None.WdfDmaTransactionSetChannelConfigurationCallback(_In_ WDFDMATRANSACTION DmaTransaction,_In_opt_ PFN_WDF_DMA_TRANSACTION_CONFIGURE_DMA_CHANNEL ConfigureRoutine,_In_opt_ PVOID ConfigureContext)
void None None.WdfDmaTransactionSetDeviceAddressOffset(_In_ WDFDMATRANSACTION DmaTransaction,_In_ ULONG Offset)
void None None.WdfDmaTransactionSetImmediateExecution(_In_ WDFDMATRANSACTION DmaTransaction,_In_ BOOLEAN UseImmediateExecution)
VOID None None.WdfDmaTransactionSetMaximumLength(_In_ WDFDMATRANSACTION DmaTransaction,_In_ size_t MaximumLength)
void None None.WdfDmaTransactionSetTransferCompleteCallback(_In_ WDFDMATRANSACTION DmaTransaction,_In_opt_ PFN_WDF_DMA_TRANSACTION_DMA_TRANSFER_COMPLETE DmaCompletionRoutine,_In_opt_ PVOID DmaCompletionContext)
void None None.WdfDmaTransactionStopSystemTransfer(_In_ WDFDMATRANSACTION DmaTransaction)
VOID None None.WDF_DRIVER_CONFIG_INIT(_Out_ PWDF_DRIVER_CONFIG Config,_In_opt_ PFN_WDF_DRIVER_DEVICE_ADD EvtDriverDeviceAdd)
VOID None None.WdfDriverMiniportUnload(_In_ WDFDRIVER Driver)
VOID None None.WdfFdoInitSetDefaultChildListConfig(_Inout_ PWDFDEVICE_INIT DeviceInit,_In_ PWDF_CHILD_LIST_CONFIG Config,_In_opt_ PWDF_OBJECT_ATTRIBUTES DefaultChildListAttributes)
VOID None None.WdfFdoInitSetEventCallbacks(_In_ PWDFDEVICE_INIT DeviceInit,_In_ PWDF_FDO_EVENT_CALLBACKS FdoEventCallbacks)
VOID None None.WdfFdoInitSetFilter(_In_ PWDFDEVICE_INIT DeviceInit)
VOID None None.WdfFdoLockStaticChildListForIteration(_In_ WDFDEVICE Fdo)
VOID None None.WdfFdoUnlockStaticChildListFromIteration(_In_ WDFDEVICE Fdo)
VOID None None.WdfInterruptAcquireLock(_In_ WDFINTERRUPT Interrupt)
VOID None None.WdfInterruptDisable(_In_ WDFINTERRUPT Interrupt)
VOID None None.WdfInterruptEnable(_In_ WDFINTERRUPT Interrupt)
VOID None None.WdfInterruptGetInfo(_In_ WDFINTERRUPT Interrupt,_Out_ PWDF_INTERRUPT_INFO Info)
VOID None None.WDF_INTERRUPT_INFO_INIT(_Out_ PWDF_INTERRUPT_INFO Info)
VOID None None.WdfInterruptReleaseLock(_In_ WDFINTERRUPT Interrupt)
void None None.WdfInterruptReportActive(_In_ WDFINTERRUPT Interrupt)
void None None.WdfInterruptReportInactive(_In_ WDFINTERRUPT Interrupt)
VOID None None.WdfInterruptSetExtendedPolicy(_In_ WDFINTERRUPT Interrupt,_In_ PWDF_INTERRUPT_EXTENDED_POLICY PolicyAndGroup)
VOID None None.WdfInterruptSetPolicy(_In_ WDFINTERRUPT Interrupt,_In_ WDF_INTERRUPT_POLICY Policy,_In_ WDF_INTERRUPT_PRIORITY Priority,_In_ KAFFINITY TargetProcessorSet)
VOID None None.WDF_IO_QUEUE_CONFIG_INIT_DEFAULT_QUEUE(_Out_ PWDF_IO_QUEUE_CONFIG Config,_In_ WDF_IO_QUEUE_DISPATCH_TYPE DispatchType)
VOID None None.WDF_IO_QUEUE_CONFIG_INIT(_Out_ PWDF_IO_QUEUE_CONFIG Config,_In_ WDF_IO_QUEUE_DISPATCH_TYPE DispatchType)
VOID None None.WdfIoQueueDrain(_In_ WDFQUEUE Queue,_In_opt_ PFN_WDF_IO_QUEUE_STATE DrainComplete,_In_opt_ WDFCONTEXT Context)
VOID None None.WdfIoQueueDrainSynchronously(_In_ WDFQUEUE Queue)
VOID None None.WdfIoQueuePurge(_In_ WDFQUEUE Queue,_In_opt_ PFN_WDF_IO_QUEUE_STATE PurgeComplete,_In_opt_ WDFCONTEXT Context)
VOID None None.WdfIoQueuePurgeSynchronously(_In_ WDFQUEUE Queue)
VOID None None.WdfIoQueueStart(_In_ WDFQUEUE Queue)
void None None.WdfIoQueueStopAndPurge(_In_ WDFQUEUE Queue,_In_opt_ PFN_WDF_IO_QUEUE_STATE StopAndPurgeComplete,_In_opt_ WDFCONTEXT Context)
void None None.WdfIoQueueStopAndPurgeSynchronously(_In_ WDFQUEUE Queue)
VOID None None.WdfIoQueueStop(_In_ WDFQUEUE Queue,_In_opt_ PFN_WDF_IO_QUEUE_STATE StopComplete,_In_opt_ WDFCONTEXT Context)
VOID None None.WdfIoQueueStopSynchronously(_In_ WDFQUEUE Queue)
VOID None None.WdfIoResourceListRemoveByDescriptor(_In_ WDFIORESLIST ResourceList,_In_ PIO_RESOURCE_DESCRIPTOR Descriptor)
VOID None None.WdfIoResourceListRemove(_In_ WDFIORESLIST ResourceList,_In_ ULONG Index)
VOID None None.WdfIoResourceListUpdateDescriptor(_In_ WDFIORESLIST ResourceList,_In_ PIO_RESOURCE_DESCRIPTOR Descriptor,_In_ ULONG Index)
VOID None None.WdfIoResourceRequirementsListRemoveByIoResList(_In_ WDFIORESREQLIST RequirementsList,_In_ WDFIORESLIST IoResList)
VOID None None.WdfIoResourceRequirementsListSetInterfaceType(_In_ WDFIORESREQLIST RequirementsList,_In_ INTERFACE_TYPE InterfaceType)
VOID None None.WdfIoResourceRequirementsListSetSlotNumber(_In_ WDFIORESREQLIST RequirementsList,_In_ ULONG SlotNumber)
VOID None None.WdfIoTargetCloseForQueryRemove(_In_ WDFIOTARGET IoTarget)
VOID None None.WdfIoTargetClose(_In_ WDFIOTARGET IoTarget)
void None None.WDF_IO_TARGET_OPEN_PARAMS_INIT_OPEN_BY_FILE(_Out_ PWDF_IO_TARGET_OPEN_PARAMS Params,_In_opt_ PCUNICODE_STRING FileName)
VOID None None.WdfIoTargetPurge(_In_ WDFIOTARGET IoTarget,_In_ WDF_IO_TARGET_PURGE_IO_ACTION Action)
VOID None None.WdfIoTargetStop(_In_ WDFIOTARGET IoTarget,_In_ WDF_IO_TARGET_SENT_IO_ACTION Action)
VOID None None.WDF_MEMORY_DESCRIPTOR_INIT_BUFFER(_Out_ PWDF_MEMORY_DESCRIPTOR Descriptor,_In_ PVOID Buffer,_In_ ULONG BufferLength)
VOID None None.WDF_MEMORY_DESCRIPTOR_INIT_HANDLE(_Out_ PWDF_MEMORY_DESCRIPTOR Descriptor,_In_ WDFMEMORY Memory,_In_opt_ PWDFMEMORY_OFFSET Offsets)
VOID None None.WDF_MEMORY_DESCRIPTOR_INIT_MDL(_Out_ PWDF_MEMORY_DESCRIPTOR Descriptor,_In_ PMDL Mdl,_In_ ULONG BufferLength)
VOID None None.WdfObjectAcquireLock(_In_ WDFOBJECT Object)
void None None.WDF_OBJECT_ATTRIBUTES_INIT_CONTEXT_TYPE(_attributes None None,_contexttype None None)
VOID None None.WDF_OBJECT_ATTRIBUTES_INIT(_Out_ PWDF_OBJECT_ATTRIBUTES Attributes)
void None None.WDF_OBJECT_ATTRIBUTES_SET_CONTEXT_TYPE(_attributes None None,_contexttype None None)
VOID None None.WdfObjectDelete(_In_ WDFOBJECT Object)
VOID None None.WdfObjectDereference([in] WDFOBJECT Handle)
VOID None None.WdfObjectReferenceActual(_In_ WDFOBJECT Handle,_In_opt_ PVOID Tag,_In_ LONG Line,_In_ PCCH File)
VOID None None.WdfObjectReference([in] WDFOBJECT Handle)
VOID None None.WdfObjectReleaseLock(_In_ WDFOBJECT Object)
VOID None None.WdfPdoClearEjectionRelationsDevices(_In_ WDFDEVICE Device)
VOID None None.WdfPdoInitAllowForwardingRequestToParent(_In_ PWDFDEVICE_INIT DeviceInit)
VOID None None.WdfPdoInitSetDefaultLocale(_In_ PWDFDEVICE_INIT DeviceInit,_In_ LCID LocaleId)
VOID None None.WdfPdoInitSetEventCallbacks(_In_ PWDFDEVICE_INIT DeviceInit,_In_ PWDF_PDO_EVENT_CALLBACKS DispatchTable)
VOID None None.WdfPdoRemoveEjectionRelationsPhysicalDevice(_In_ WDFDEVICE Device,_In_ PDEVICE_OBJECT PhysicalDevice)
VOID None None.WdfPdoRequestEject(_In_ WDFDEVICE Device)
void None None.WDF_POWER_FRAMEWORK_SETTINGS_INIT(_Out_ PWDF_POWER_FRAMEWORK_SETTINGS PowerFrameworkSettings)
VOID None None.WdfRegistryClose(_In_ WDFKEY Key)
VOID None None.WdfRequestComplete(_In_ WDFREQUEST Request,_In_ NTSTATUS Status)
VOID None None.WdfRequestCompleteWithInformation(_In_ WDFREQUEST Request,_In_ NTSTATUS Status,_In_ ULONG_PTR Information)
VOID None None.WdfRequestCompleteWithPriorityBoost(_In_ WDFREQUEST Request,_In_ NTSTATUS Status,_In_ CCHAR PriorityBoost)
VOID None None.WdfRequestFormatRequestUsingCurrentType(_In_ WDFREQUEST Request)
VOID None None.WdfRequestGetCompletionParams(_In_ WDFREQUEST Request,_Out_ PWDF_REQUEST_COMPLETION_PARAMS Params)
VOID None None.WdfRequestGetParameters(_In_ WDFREQUEST Request,_Out_ PWDF_REQUEST_PARAMETERS Parameters)
VOID None None.WdfRequestMarkCancelable(_In_ WDFREQUEST Request,_In_ PFN_WDF_REQUEST_CANCEL EvtRequestCancel)
VOID None None.WdfRequestSetCompletionRoutine(_In_ WDFREQUEST Request,_In_opt_ PFN_WDF_REQUEST_COMPLETION_ROUTINE CompletionRoutine,_In_opt_ WDFCONTEXT CompletionContext)
VOID None None.WdfRequestSetInformation(_In_ WDFREQUEST Request,_In_ ULONG_PTR Information)
VOID None None.WdfRequestStopAcknowledge(_In_ WDFREQUEST Request,_In_ BOOLEAN Requeue)
VOID None None.WdfRequestWdmFormatUsingStackLocation(_In_ WDFREQUEST Request,_In_ PIO_STACK_LOCATION Stack)
VOID None None.WdfSpinLockAcquire(_In_ WDFSPINLOCK SpinLock)
VOID None None.WdfSpinLockRelease(_In_ WDFSPINLOCK SpinLock)
VOID None None.WdfStringGetUnicodeString(_In_ WDFSTRING String,_Out_ PUNICODE_STRING UnicodeString)
VOID None None.WDF_TIMER_CONFIG_INIT(_In_ PWDF_TIMER_CONFIG Config,_In_ PFN_WDF_TIMER EvtTimerFunc)
VOID None None.WDF_TIMER_CONFIG_INIT_PERIODIC(_In_ PWDF_TIMER_CONFIG Config,_In_ PFN_WDF_TIMER EvtTimerFunc,_In_ LONG Period)
VOID None None.WDF_USB_CONTROL_SETUP_PACKET_INIT_CLASS(_Out_ PWDF_USB_CONTROL_SETUP_PACKET Packet,_In_ WDF_USB_BMREQUEST_DIRECTION Direction,_In_ WDF_USB_BMREQUEST_RECIPIENT Recipient,_In_ BYTE Request,_In_ USHORT Value,_In_ USHORT Index)
VOID None None.WDF_USB_CONTROL_SETUP_PACKET_INIT_FEATURE(_Out_ PWDF_USB_CONTROL_SETUP_PACKET Packet,_In_ WDF_USB_BMREQUEST_RECIPIENT BmRequestRecipient,_In_ USHORT FeatureSelector,_In_ USHORT Index,_In_ BOOLEAN SetFeature)
VOID None None.WDF_USB_CONTROL_SETUP_PACKET_INIT_GET_STATUS(_Out_ PWDF_USB_CONTROL_SETUP_PACKET Packet,_In_ WDF_USB_BMREQUEST_RECIPIENT BmRequestRecipient,_In_ USHORT Index)
VOID None None.WDF_USB_CONTROL_SETUP_PACKET_INIT(_Out_ PWDF_USB_CONTROL_SETUP_PACKET Packet,_In_ WDF_USB_BMREQUEST_DIRECTION Direction,_In_ WDF_USB_BMREQUEST_RECIPIENT Recipient,_In_ BYTE Request,_In_ USHORT Value,_In_ USHORT Index)
VOID None None.WDF_USB_CONTROL_SETUP_PACKET_INIT_VENDOR(_Out_ PWDF_USB_CONTROL_SETUP_PACKET Packet,_In_ WDF_USB_BMREQUEST_DIRECTION Direction,_In_ WDF_USB_BMREQUEST_RECIPIENT Recipient,_In_ BYTE Request,_In_ USHORT Value,_In_ USHORT Index)
VOID None None.WDF_USB_DEVICE_SELECT_CONFIG_PARAMS_INIT_DECONFIG(_Out_ PWDF_USB_DEVICE_SELECT_CONFIG_PARAMS Params)
VOID None None.WDF_USB_DEVICE_SELECT_CONFIG_PARAMS_INIT_INTERFACES_DESCRIPTORS(_Out_ PWDF_USB_DEVICE_SELECT_CONFIG_PARAMS Params,_In_ PUSB_CONFIGURATION_DESCRIPTOR ConfigDescriptor,_In_ PUSB_INTERFACE_DESCRIPTOR *InterfaceDescriptors,_In_ ULONG NumInterfaceDescriptors)
VOID None None.WDF_USB_DEVICE_SELECT_CONFIG_PARAMS_INIT_MULTIPLE_INTERFACES(_Inout_ PWDF_USB_DEVICE_SELECT_CONFIG_PARAMS Params,_In_opt_ UCHAR NumberInterfaces,_In_opt_ PWDF_USB_INTERFACE_SETTING_PAIR SettingPairs)
VOID None None.WDF_USB_DEVICE_SELECT_CONFIG_PARAMS_INIT_SINGLE_INTERFACE(_Out_ PWDF_USB_DEVICE_SELECT_CONFIG_PARAMS Params)
VOID None None.WDF_USB_DEVICE_SELECT_CONFIG_PARAMS_INIT_URB(_Out_ PWDF_USB_DEVICE_SELECT_CONFIG_PARAMS Params,_In_ PURB Urb)
VOID None None.WdfUsbInterfaceGetDescriptor(_In_ WDFUSBINTERFACE UsbInterface,_In_ UCHAR SettingIndex,_Out_ PUSB_INTERFACE_DESCRIPTOR InterfaceDescriptor)
VOID None None.WdfUsbInterfaceGetEndpointInformation(_In_ WDFUSBINTERFACE UsbInterface,_In_ UCHAR SettingIndex,_In_ UCHAR EndpointIndex,_Out_ PWDF_USB_PIPE_INFORMATION EndpointInfo)
VOID None None.WDF_USB_PIPE_INFORMATION_INIT(_Out_ PWDF_USB_PIPE_INFORMATION Info)
VOID None None.WdfUsbTargetDeviceGetDeviceDescriptor(_In_ WDFUSBDEVICE UsbDevice,_Out_ PUSB_DEVICE_DESCRIPTOR UsbDeviceDescriptor)
VOID None None.WdfUsbTargetPipeGetInformation(_In_ WDFUSBPIPE Pipe,_Out_ PWDF_USB_PIPE_INFORMATION PipeInformation)
VOID None None.WdfUsbTargetPipeSetNoMaximumPacketSizeCheck(_In_ WDFUSBPIPE Pipe)
VOID None None.WdfVerifierDbgBreakPoint(void None None)
VOID None None.WdfVerifierKeBugCheck(_In_ ULONG BugCheckCode,_In_ ULONG_PTR BugCheckParameter1,_In_ ULONG_PTR BugCheckParameter2,_In_ ULONG_PTR BugCheckParameter3,_In_ ULONG_PTR BugCheckParameter4)
VOID None None.WdfWaitLockRelease(_In_ WDFWAITLOCK Lock)
VOID None None.WDF_WMI_INSTANCE_CONFIG_INIT_PROVIDER_CONFIG(_Out_ PWDF_WMI_INSTANCE_CONFIG Config,_In_ PWDF_WMI_PROVIDER_CONFIG ProviderConfig)
VOID None None.WdfWmiInstanceDeregister(_In_ WDFWMIINSTANCE WmiInstance)
VOID None None.WdfWorkItemEnqueue(_In_ WDFWORKITEM WorkItem)
VOID None None.WdfWorkItemFlush(_In_ WDFWORKITEM WorkItem)
void None None.Window_InertiaStarting(object sender None,ManipulationInertiaStartingEventArgs e None)
void None None.Window_ManipulationStarting(object sender None,ManipulationStartingEventArgs e None)
VOID None None.WinExecError(_In_ HWND hwnd,_In_ int error,_In_ LPCTSTR lpstrFileName,_In_ LPCTSTR lpstrTitle)
VOID None None.WlxDisplayLockedNotice(_In_ PVOID pWlxContext)
void None None.WlxDisplaySASNotice(_In_ PVOID pWlxContext)
void None None.WlxLogoff(_In_ PVOID pWlxContext)
VOID None None.WlxSasNotify(_In_ HANDLE hWlx,_In_ DWORD dwSasType)
VOID None None.WlxSetContextPointer(_In_ HANDLE hWlx,_In_ PVOID pWlxContext)
void None None.WlxShutdown(_In_ PVOID pWlxContext,_In_ DWORD ShutdownType)
void None None.WlxUseCtrlAltDel(_In_ HANDLE hWlx)
VOID None None.WlxWin31Migrate(_In_ HANDLE hWlx)
void None None.WriteXml(XmlWriter writer None)
void None None.WS_ABANDON_MESSAGE_CALLBACK(_In_ void* channelInstance,_In_ WS_MESSAGE* message,_In_opt_ WS_ERROR* error)
void None None.WS_ABORT_CHANNEL_CALLBACK(_In_ void* channelInstance,_In_opt_ WS_ERROR* error)
void None None.WS_ABORT_LISTENER_CALLBACK(_In_ void* listenerInstance,_In_opt_ WS_ERROR* error)
void None None.WS_ASYNC_CALLBACK(_In_ HRESULT errorCode,_In_ WS_CALLBACK_MODEL callbackModel,_In_ void *callbackState)
void None None.WS_CREATE_CHANNEL_CALLBACK(_In_ WS_CHANNEL_TYPE channelType,const void* channelParameters,_In_ ULONG channelParametersSize,void** channelInstance None,_In_opt_ WS_ERROR* error)
void None None.WS_CREATE_CHANNEL_FOR_LISTENER_CALLBACK(_In_ void* listenerInstance,const void* channelParameters,_In_ ULONG channelParametersSize,void** channelInstance None,_In_opt_ WS_ERROR* error)
void None None.WS_CREATE_LISTENER_CALLBACK(_In_ WS_CHANNEL_TYPE channelType,const void* listenerParameters,_In_ ULONG listenerParametersSize,void** listenerInstance None,_In_opt_ WS_ERROR* error)
void None None.WS_FREE_CHANNEL_CALLBACK(_In_ void* channelInstance)
void None None.WS_FREE_DECODER_CALLBACK(_In_ void* decoderContext)
void None None.WS_FREE_ENCODER_CALLBACK(_In_ void* encoderContext)
void None None.WS_FREE_LISTENER_CALLBACK(_In_ void* listenerInstance)
void None None.WS_GET_CHANNEL_PROPERTY_CALLBACK(_In_ void* channelInstance,_In_ WS_CHANNEL_PROPERTY_ID id,void* value None,_In_ ULONG valueSize,_In_opt_ WS_ERROR* error)
void None None.WS_GET_LISTENER_PROPERTY_CALLBACK(_In_ void* listenerInstance,_In_ WS_LISTENER_PROPERTY_ID id,void* value None,_In_ ULONG valueSize,_In_opt_ WS_ERROR* error)
void None None.WS_MESSAGE_DONE_CALLBACK(_In_ void *doneCallbackState)
void None None.WsOffsetOf(type None None,field None None)
void None None.WS_OPERATION_FREE_STATE_CALLBACK(_In_ void* state)
void None None.WS_RESET_CHANNEL_CALLBACK(_In_ void* channelInstance,_In_opt_ WS_ERROR* error)
void None None.WS_RESET_LISTENER_CALLBACK(_In_ void* listenerInstance,_In_opt_ WS_ERROR* error)
void None None.WS_SET_CHANNEL_PROPERTY_CALLBACK(_In_ void* channelInstance,_In_ WS_CHANNEL_PROPERTY_ID id,const void* value,_In_ ULONG valueSize,_In_opt_ WS_ERROR* error)
void None None.WS_SET_LISTENER_PROPERTY_CALLBACK(_In_ void* listenerInstance,_In_ WS_LISTENER_PROPERTY_ID id,const void* value,_In_ ULONG valueSize,_In_opt_ WS_ERROR* error)
void None None.WS_VALIDATE_SAML_CALLBACK(_In_opt_ void* samlValidatorCallbackState,_In_ WS_XML_BUFFER* samlAssertion,_In_opt_ WS_ERROR* error)
void None None.WS_XML_STRING_VALUE(void None None)
VOID None None.XMStoreSInt2([out] XMINT2 *pDestination,XMVECTOR V None)
VOID None None.XMStoreSInt3([out] XMINT3 *pDestination,XMVECTOR V None)
VOID None None.XMStoreSInt4([out] XMINT4 *pDestination,XMVECTOR V None)
VOID None None.XMStoreUInt2([out] XMUINT2 *pDestination,XMVECTOR V None)
VOID None None.XMStoreUInt3([out] XMUINT3 *pDestination,XMVECTOR V None)
VOID None None.XMStoreUInt4([out] XMUINT4 *pDestination,XMVECTOR V None)
VOID None None.XMVectorGetIntByIndexPtr([out] uint32_t *x,XMVECTOR V None,size_t i None)
VOID None None.XMVectorGetIntWPtr([out] uint32_t *w,XMVECTOR V None)
VOID None None.XMVectorGetIntXPtr([out] uint32_t *x,XMVECTOR V None)
VOID None None.XMVectorGetIntYPtr([out] uint32_t *y,XMVECTOR V None)
VOID None None.XMVectorGetIntZPtr([out] uint32_t *z,XMVECTOR V None)
void None None.YieldProcessor(void None None)
void None None.ZeroMemory([in] PVOID Destination,[in] SIZE_T Length)
void None ole32.CoFreeAllLibraries(void None None)
void None ole32.CoFreeLibrary(_In_ HINSTANCE hInst)
void None ole32.CoFreeUnusedLibraries(void None None)
void None ole32.CoTaskMemFree(_In_opt_ LPVOID pv)
void None ole32.CoUninitialize(void None None)
VOID None ole32.OleDestroyMenuDescriptor(_In_ HOLEMENU holemenu)
void None ole32.OleUninitialize(void None None)
void None ole32.ReleaseStgMedium(_In_ LPSTGMEDIUM pMedium)
void None oleaut32.SysFreeString(_In_opt_ BSTR bstrString)
VOID None propsys.ClearPropVariantArray(_In_ PROPVARIANT *rgPropVar,_In_ UINT cVars)
VOID None propsys.ClearVariantArray(_In_ VARIANT *pvars,_In_ UINT cVars)
void None query.CIShutdown(void None None)
void None rasapi32.RasFreeEapUserIdentityA(_In_ LPRASEAPUSERIDENTITY pRasEapUserIdentity)
void None rasapi32.RasFreeEapUserIdentity(_In_ LPRASEAPUSERIDENTITY pRasEapUserIdentity)
void None rasapi32.RasFreeEapUserIdentityW(_In_ LPRASEAPUSERIDENTITY pRasEapUserIdentity)
void None rpcrt4.RpcAsyncRegisterInfo(void None None)
void None rpcrt4.RpcCertGeneratePrincipalNameA(PCCERT_CONTEXT Context None,DWORD Flags None,UCHAR **pBuffer None)
void None rpcrt4.RpcCertGeneratePrincipalName(PCCERT_CONTEXT Context None,DWORD Flags None,UCHAR **pBuffer None)
void None rpcrt4.RpcCertGeneratePrincipalNameW(PCCERT_CONTEXT Context None,DWORD Flags None,UCHAR **pBuffer None)
void None schannel.SslFreeCertificate(_In_ PX509Certificate pCertificate)
void None setupapi.SetupCloseFileQueue(_In_ HSPFILEQ QueueHandle)
void None setupapi.SetupCloseInfFile(_In_ HINF InfHandle)
void None setupapi.SetupTermDefaultQueueCallback(_In_ PVOID Context)
void None shdocvw.ShellDDEInit(_In_ BOOL init)
VOID None shell32.DragAcceptFiles(HWND hWnd None,BOOL fAccept None)
VOID None shell32.DragFinish(HDROP hDrop None)
void None shell32.ILFree(_In_ PIDLIST_RELATIVE pidl)
void None shell32.PathGetShortPath(_Inout_ PWSTR pszLongPath)
void None shell32.SHAddToRecentDocs(UINT uFlags None,_In_opt_ LPCVOID pv)
void None shell32.SHChangeNotify(LONG wEventId None,UINT uFlags None,_In_opt_ LPCVOID dwItem1,_In_opt_ LPCVOID dwItem2)
void None shell32.SHChangeNotifyRegisterThread(SCNRT_STATUS status None)
void None shell32.SHDestroyPropSheetExtArray(_In_ HPSXA hpsxa)
void None shell32.SHFlushSFCache(void None None)
void None shell32.SHFree(_In_ void *pv)
void None shell32.SHFreeNameMappings(_In_opt_ HANDLE hNameMappings)
void None shell32.SHGetSetSettings(_Inout_ LPSHELLSTATE lpss,_In_ DWORD dwMask,_In_ BOOL bSet)
void None shell32.SHGetSettings(LPSHELLFLAGSTATE lpsfs None,DWORD dwMask None)
void None shell32.SHSetInstanceExplorer(_In_opt_ IUnknown *punk)
void None shell32.SHUpdateImageA(_In_ LPCTSTR pszHashItem,_In_ int iIndex,_In_ UINT uFlags,_In_ int iImageIndex)
void None shell32.SHUpdateImage(_In_ LPCTSTR pszHashItem,_In_ int iIndex,_In_ UINT uFlags,_In_ int iImageIndex)
void None shell32.SHUpdateImageW(_In_ LPCTSTR pszHashItem,_In_ int iIndex,_In_ UINT uFlags,_In_ int iImageIndex)
void None shlwapi.IUnknown_AtomicRelease(_Inout_opt_ void **ppunk)
void None shlwapi.IUnknown_Set(_Inout_ IUnknown **ppunk,_In_opt_ IUnknown *punk)
void None shlwapi.OutputDebugStringWrapW(_In_ LPCWSTR lpOutputString)
void None shlwapi.PathRemoveArgsA(_Inout_ LPTSTR pszPath)
void None shlwapi.PathRemoveArgs(_Inout_ LPTSTR pszPath)
void None shlwapi.PathRemoveArgsW(_Inout_ LPTSTR pszPath)
void None shlwapi.PathRemoveBlanksA(_Inout_ LPTSTR lpszString)
void None shlwapi.PathRemoveBlanks(_Inout_ LPTSTR lpszString)
void None shlwapi.PathRemoveBlanksW(_Inout_ LPTSTR lpszString)
void None shlwapi.PathRemoveExtensionA(_Inout_ LPTSTR pszPath)
void None shlwapi.PathRemoveExtension(_Inout_ LPTSTR pszPath)
void None shlwapi.PathRemoveExtensionW(_Inout_ LPTSTR pszPath)
void None shlwapi.PathSetDlgItemPathA(_In_ HWND hDlg,_In_ int id,_In_ LPCSTR pszPath)
void None shlwapi.PathSetDlgItemPath(_In_ HWND hDlg,_In_ int id,_In_ LPCSTR pszPath)
void None shlwapi.PathSetDlgItemPathW(_In_ HWND hDlg,_In_ int id,_In_ LPCSTR pszPath)
void None shlwapi.PathStripPathA(_Inout_ LPTSTR pszPath)
void None shlwapi.PathStripPath(_Inout_ LPTSTR pszPath)
void None shlwapi.PathStripPathW(_Inout_ LPTSTR pszPath)
void None shlwapi.PathUndecorateA(_Inout_ LPTSTR pszPath)
void None shlwapi.PathUndecorate(_Inout_ LPTSTR pszPath)
void None shlwapi.PathUndecorateW(_Inout_ LPTSTR pszPath)
void None shlwapi.PathUnquoteSpacesA(_Inout_ LPTSTR lpsz)
void None shlwapi.PathUnquoteSpaces(_Inout_ LPTSTR lpsz)
void None shlwapi.PathUnquoteSpacesW(_Inout_ LPTSTR lpsz)
VOID None sspicli.SspiLocalFree(_In_ PVOID DataBuffer)
void None tapi3.get_PrivateTAPIObjects([out] VARIANT *pVariant)
void None uxtheme.SetThemeAppProperties(DWORD dwFlags None)
void None wldap32.ber_bvecfree(_In_ PBERVAL *pBerVal)
void None wldap32.ber_bvfree(_In_ BERVAL *pBerVal)
void None wldap32.ber_free(_In_ BerElement *pBerElement,_In_ INT fbuf)
VOID None wldap32.ldap_memfreeA(_In_ PCHAR Block)
VOID None wldap32.ldap_memfree(_In_ PCHAR Block)
VOID None wldap32.ldap_memfreeW(_In_ PCHAR Block)
void None wmp.AudioLanguageChange([in] long LangID)
void None wmp.Buffering([in] VARIANT_BOOL Start)
void None wmp.CdromBurnError([in] IWMPCdromBurn *pCdromBurn,[in] HRESULT hrError)
void None wmp.CdromBurnMediaError([in] IWMPCdromBurn *pCdromBurn,[in] IDispatch *pMedia)
void None wmp.CdromBurnStateChange([in] IWMPCdromBurn *pCdromBurn,[in] WMPBurnState wmpbs)
void None wmp.CdromMediaChange([in] long CdromNum)
void None wmp.CdromRipMediaError([in] IWMPCdromRip *pCdromRip,[in] IDispatch *pMedia)
void None wmp.CdromRipStateChange([in] IWMPCdromRip *pCdromRip,[in] WMPRipState wmprs)
void None wmp.Click([in] short nButton,[in] short nShiftState,[in] long fX,[in] long fY)
void None wmp.CurrentItemChange([in] IDispatch *pdispMedia)
void None wmp.CurrentMediaItemAvailable([in] BSTR bstrItemName)
void None wmp.CurrentPlaylistChange([in] WMPPlaylistChangeEventType change)
void None wmp.CurrentPlaylistItemAvailable([in] BSTR bstrItemName)
void None wmp.DeviceStatusChange([in] IWMPSyncDevice *pDevice,[in] WMPDeviceStatus NewStatus)
void None wmp.DeviceSyncStateChange([in] IWMPSyncDevice *pDevice,[in] WMPSyncState NewState)
void None wmp.DomainChange([in] BSTR strDomain)
void None wmp.DoubleClick([in] short nButton,[in] short nShiftState,[in] long fX,[in] long fY)
void None wmp.FolderScanStateChange([in] WMPFolderScanState wmpfss)
void None wmp.KeyDown([in] short nKeyCode,[in] short nShiftState)
void None wmp.KeyPress([in] short nKeyAscii)
void None wmp.KeyUp([in] short nKeyCode,[in] short nShiftState)
void None wmp.LibraryConnect([in] IWMPLibrary *pLibrary)
void None wmp.LibraryDisconnect([in] IWMPLibrary *pLibrary)
void None wmp.MarkerHit([in] long MarkerNum)
void None wmp.MediaChange([in] IDispatch *pItem)
void None wmp.MediaCollectionAttributeStringAdded([in] BSTR bstrAttribName,[in] BSTR bstrAttribVal)
void None wmp.MediaCollectionAttributeStringChanged([in] BSTR bstrAttribName,[in] BSTR bstrOldAttribVal,[in] BSTR bstrNewAttribVal)
void None wmp.MediaCollectionAttributeStringRemoved([in] BSTR bstrAttribName,[in] BSTR bstrAttribVal)
void None wmp.MediaCollectionMediaAdded([in] IDispatch *pdispMedia)
void None wmp.MediaCollectionMediaRemoved([in] IDispatch *pdispMedia)
void None wmp.MediaError([in] IDispatch *pMediaObject)
void None wmp.ModeChange([in] BSTR ModeName,[in] VARIANT_BOOL NewValue)
void None wmp.MouseDown([in] short nButton,[in] short nShiftState,[in] long fX,[in] long fY)
void None wmp.MouseMove([in] short nButton,[in] short nShiftState,[in] long fX,[in] long fY)
void None wmp.MouseUp([in] short nButton,[in] short nShiftState,[in] long fX,[in] long fY)
void None wmp.OpenPlaylistSwitch([in] IDispatch *pItem)
void None wmp.OpenStateChange([in] long NewState)
void None wmp.PlaylistChange([in] IDispatch *Playlist,[in] WMPPlaylistChangeEventType change)
void None wmp.PlaylistCollectionPlaylistAdded([in] BSTR bstrPlaylistName)
void None wmp.PlaylistCollectionPlaylistRemoved([in] BSTR bstrPlaylistName)
void None wmp.PlayStateChange([in] long NewState)
void None wmp.PositionChange([in] double oldPosition,[in] double newPosition)
void None wmp.ScriptCommand([in] BSTR scType,[in] BSTR Param)
void None wmp.StringCollectionChange([in] IDispatch *pdispStringCollection,[in] WMPStringCollectionChangeEventType change,[in] long lCollectionIndex)
void None ws2_32.WSASetLastError(_In_ int iError)
void None wtsapi32.WTSFreeMemory(_In_ PVOID pMemory)
void None wtwmiprov.Create([in] uint32 WTD,[out] string Id)
void None wtwmiprov.Export([out] uint32 WTD)
void None wtwmiprov.Resize([in] uint32 DeltaInMB,[in] boolean Shrink)
void None wudfx.Complete([in] HRESULT CompletionStatus)
void None wudfx.CompleteWithInformation([in] HRESULT CompletionStatus,[in] SIZE_T Information)
void None wudfx.GetDeviceIoControlParameters([out] ULONG *pControlCode,[out] SIZE_T *pInBufferSize,[out] SIZE_T *pOutBufferSize)
void None wudfx.GetInputMemory([out] IWDFMemory **ppWdfMemory)
void None wudfx.SetInformation([in] ULONG_PTR Information)
void None wudfx.SetIoTypePreference([in] WDF_DEVICE_IO_BUFFER_RETRIEVAL RetrievalMode,[in] WDF_DEVICE_IO_TYPE ReadWritePreference,[in] WDF_DEVICE_IO_TYPE IoControlPreference)
void None xinput1_4.XInputEnable(_In_ BOOL enable)
void NTAPI None.EnableCallback(_In_ LPCGUID SourceId,_In_ ULONG IsEnabled,_In_ UCHAR Level,_In_ ULONGLONG MatchAnyKeyword,_In_ ULONGLONG MatchAllKeywords,_In_opt_ PEVENT_FILTER_DESCRIPTOR FilterData,_In_opt_ PVOID CallbackContext)
void NTAPI None.FreePrivateHeap(_In_ PVOID Base)
void NTAPI None.LsaProtectMemory(_Inout_ PVOID Buffer,_In_ ULONG BufferSize)
void NTAPI None.LsaUnprotectMemory(_Inout_ PVOID Buffer,_In_ ULONG BufferSize)
VOID NTAPI ntdll.RtlDeleteGrowableFunctionTable(_In_ PVOID DynamicTable)
void NTAPI twinapi.core.UnregisterAppStateChangeNotification(_Inout_ PAPPSTATE_REGISTRATION Registration)
void PASCAL None.phoneCallbackFunc(HANDLE hDevice None,DWORD dwMsg None,DWORD dwCallbackInstance None,DWORD dwParam1 None,DWORD dwParam2 None,DWORD dwParam3 None)
void RPC_ENTRY rpcrt4.Ndr64AsyncServerCallAll(PRPC_MESSAGE pRpcMsg None)
void RPC_ENTRY rpcrt4.NdrAsyncServerCall(PRPC_MESSAGE pRpcMsg None)
void RPC_ENTRY rpcrt4.NdrClearOutParameters(_In_ PMIDL_STUB_MESSAGE *pStubMsg,_In_ PFORMAT_STRING *pFormat,_Inout_ void *ArgAddr)
void RPC_ENTRY rpcrt4.NdrContextHandleSize(PMIDL_STUB_MESSAGE pStubMsg None,unsigned char *pMemory,PFORMAT_STRING pFormat None)
void RPC_ENTRY rpcrt4.NdrOleFree(_In_ void *NodeToFree)
void RPC_ENTRY rpcrt4.NdrProxyFreeBuffer(_In_ void *This,_Inout_ MIDL_STUB_MESSAGE *pStubMsg)
void RPC_ENTRY rpcrt4.NdrServerCall2(PRPC_MESSAGE pRpcMsg None)
void RPC_ENTRY rpcrt4.NdrServerCallAll(PRPC_MESSAGE pRpcMsg None)
void RPC_ENTRY rpcrt4.NdrStubInitialize(_In_ PRPC_MESSAGE pRpcMsg,_Inout_ PMIDL_STUB_MESSAGE pStubMsg,_In_ PMIDL_STUB_DESC pStubDescriptor,_In_ IRpcChannelBuffer *pRpcChannelBuffer)
void RPC_ENTRY rpcrt4.RpcErrorClearInformation(void None None)
void RPC_ENTRY rpcrt4.RpcRaiseException(RPC_STATUS Exception None)
void RPC_ENTRY rpcrt4.RpcSsDestroyClientContext(void **ContextHandle None)
void RPC_ENTRY rpcrt4.RpcSsDisableAllocate(void None None)
void RPC_ENTRY rpcrt4.RpcSsDontSerializeContext(void None None)
void RPC_ENTRY rpcrt4.RpcSsEnableAllocate(void None None)
void RPC_ENTRY rpcrt4.RpcSsFree(void *NodeToFree None)
void RPC_ENTRY rpcrt4.RpcSsSetClientAllocFree(RPC_CLIENT_ALLOC *pfnAllocate None,RPC_CLIENT_FREE *pfnFree None)
void RPC_ENTRY rpcrt4.RpcSsSetThreadHandle(RPC_SM_THREAD_HANDLE Handle None)
void RPC_ENTRY rpcrt4.RpcSsSwapClientAllocFree(RPC_CLIENT_ALLOC *pfnAllocate None,RPC_CLIENT_FREE *pfnFree None,RPC_CLIENT_ALLOC **pfnOldAllocate None,RPC_CLIENT_FREE **pfnOldFree None)
void RPC_ENTRY rpcrt4.RpcUserFree(handle_t AsyncHandle None,void *pBuffer None)
void __RPC_USER None.midl_user_free(void * pBuffer)
void RSA32API ntdll.A_SHAInit(_Inout_ A_SHA_CTX *Context)
void STDAPICALLTYPE oleaut32.SafeArrayReleaseData(_In_ PVOID pData)
void STDAPICALLTYPE oleaut32.SafeArrayReleaseDescriptor(_In_ SAFEARRAY *psa)
void STDAPICALLTYPE oleaut32.SysReleaseString(_In_ BSTR bstrString)
void __stdcall atlthunk.AtlThunk_FreeData(AtlThunkData_t *Thunk None)
void __stdcall atlthunk.AtlThunk_InitData(AtlThunkData_t *Thunk None,void *Proc None,size_t FirstParameter None)
VOID __stdcall None.ReadFiberFunc(LPVOID lpParameter None)
VOID __stdcall wiaservc.wiasPrintDebugHResult(HINSTANCE hInstance None,HRESULT hr None)
void STDMETHODCALLTYPE ole32.CStdAsyncStubBuffer2_Disconnect(_In_ IRpcStubBuffer *pthis)
void STDMETHODCALLTYPE ole32.CStdAsyncStubBuffer_Disconnect(_In_ IRpcStubBuffer *pthis)
void STDMETHODCALLTYPE rpcrt4.CStdStubBuffer_DebugServerRelease(_In_ IRpcStubBuffer *This,_In_ void *pv)
void STDMETHODCALLTYPE rpcrt4.CStdStubBuffer_Disconnect(_In_ IRpcStubBuffer *This)
VOID VCAPITYPE None.CHANNEL_INIT_EVENT_FN(_In_ LPVOID pInitHandle,_In_ UINT event,_In_ LPVOID pData,_In_ UINT dataLength)
VOID VCAPITYPE None.CHANNEL_OPEN_EVENT_FN(_In_ DWORD openHandle,_In_ UINT event,_In_ LPVOID pData,_In_ UINT32 dataLength,_In_ UINT32 totalLength,_In_ UINT32 dataFlags)
VOID WDSCLIAPI None.PFN_WdsCliTraceFunction(_In_ LPCWSTR pwszFormat,_In_ va_list Params)
VOID WINAPI advapi32.AuditFree(_In_ PVOID Buffer)
VOID WINAPI advapi32.BuildExplicitAccessWithNameA(_Inout_ PEXPLICIT_ACCESS pExplicitAccess,_In_opt_ LPTSTR pTrusteeName,_In_ DWORD AccessPermissions,_In_ ACCESS_MODE AccessMode,_In_ DWORD Inheritance)
VOID WINAPI advapi32.BuildExplicitAccessWithName(_Inout_ PEXPLICIT_ACCESS pExplicitAccess,_In_opt_ LPTSTR pTrusteeName,_In_ DWORD AccessPermissions,_In_ ACCESS_MODE AccessMode,_In_ DWORD Inheritance)
VOID WINAPI advapi32.BuildExplicitAccessWithNameW(_Inout_ PEXPLICIT_ACCESS pExplicitAccess,_In_opt_ LPTSTR pTrusteeName,_In_ DWORD AccessPermissions,_In_ ACCESS_MODE AccessMode,_In_ DWORD Inheritance)
VOID WINAPI advapi32.BuildTrusteeWithNameA(_Inout_ PTRUSTEE pTrustee,_In_opt_ LPTSTR pName)
VOID WINAPI advapi32.BuildTrusteeWithName(_Inout_ PTRUSTEE pTrustee,_In_opt_ LPTSTR pName)
VOID WINAPI advapi32.BuildTrusteeWithNameW(_Inout_ PTRUSTEE pTrustee,_In_opt_ LPTSTR pName)
void WINAPI advapi32.BuildTrusteeWithObjectsAndNameA(_Inout_ PTRUSTEE pTrustee,_In_opt_ POBJECTS_AND_NAME pObjName,_In_opt_ SE_OBJECT_TYPE ObjectType,_In_opt_ LPTSTR ObjectTypeName,_In_opt_ LPTSTR InheritedObjectTypeName,_In_opt_ LPTSTR Name)
void WINAPI advapi32.BuildTrusteeWithObjectsAndName(_Inout_ PTRUSTEE pTrustee,_In_opt_ POBJECTS_AND_NAME pObjName,_In_opt_ SE_OBJECT_TYPE ObjectType,_In_opt_ LPTSTR ObjectTypeName,_In_opt_ LPTSTR InheritedObjectTypeName,_In_opt_ LPTSTR Name)
void WINAPI advapi32.BuildTrusteeWithObjectsAndNameW(_Inout_ PTRUSTEE pTrustee,_In_opt_ POBJECTS_AND_NAME pObjName,_In_opt_ SE_OBJECT_TYPE ObjectType,_In_opt_ LPTSTR ObjectTypeName,_In_opt_ LPTSTR InheritedObjectTypeName,_In_opt_ LPTSTR Name)
void WINAPI advapi32.BuildTrusteeWithObjectsAndSidA(_Inout_ PTRUSTEE pTrustee,_In_opt_ POBJECTS_AND_SID pObjSid,_In_opt_ GUID *pObjectGuid,_In_opt_ GUID *pInheritedObjectGuid,_In_opt_ PSID pSid)
void WINAPI advapi32.BuildTrusteeWithObjectsAndSid(_Inout_ PTRUSTEE pTrustee,_In_opt_ POBJECTS_AND_SID pObjSid,_In_opt_ GUID *pObjectGuid,_In_opt_ GUID *pInheritedObjectGuid,_In_opt_ PSID pSid)
void WINAPI advapi32.BuildTrusteeWithObjectsAndSidW(_Inout_ PTRUSTEE pTrustee,_In_opt_ POBJECTS_AND_SID pObjSid,_In_opt_ GUID *pObjectGuid,_In_opt_ GUID *pInheritedObjectGuid,_In_opt_ PSID pSid)
VOID WINAPI advapi32.BuildTrusteeWithSidA(_Inout_ PTRUSTEE pTrustee,_In_opt_ PSID pSid)
VOID WINAPI advapi32.BuildTrusteeWithSid(_Inout_ PTRUSTEE pTrustee,_In_opt_ PSID pSid)
VOID WINAPI advapi32.BuildTrusteeWithSidW(_Inout_ PTRUSTEE pTrustee,_In_opt_ PSID pSid)
void WINAPI advapi32.CloseEncryptedFileRaw(_In_ PVOID pvContext)
VOID WINAPI advapi32.CloseThreadWaitChainSession(_In_ HWCT WctHandle)
void WINAPI advapi32.FreeEncryptionCertificateHashList(_In_ PENCRYPTION_CERTIFICATE_HASH_LIST pHashes)
VOID WINAPI advapi32.MapGenericMask(_Inout_ PDWORD AccessMask,_In_ PGENERIC_MAPPING GenericMapping)
VOID WINAPI advapi32.QuerySecurityAccessMask(_In_ SECURITY_INFORMATION SecurityInformation,_Out_ LPDWORD DesiredAccess)
VOID WINAPI advapi32.RegisterWaitChainCOMCallback(_In_ PCOGETCALLSTATE CallStateCallback,_In_ PCOGETACTIVATIONSTATE ActivationStateCallback)
VOID WINAPI advapi32.SetSecurityAccessMask(_In_ SECURITY_INFORMATION SecurityInformation,_Out_ LPDWORD DesiredAccess)
VOID WINAPI bcrypt.BCryptFreeBuffer(_In_ PVOID pvBuffer)
VOID WINAPI crypt32.CertAddRefServerOcspResponseContext(_In_ PCCERT_SERVER_OCSP_RESPONSE_CONTEXT pServerOcspResponseContext)
VOID WINAPI crypt32.CertCloseServerOcspResponse(_In_ HCERT_SERVER_OCSP_RESPONSE hServerOcspResponse,_In_ DWORD dwFlags)
void WINAPI crypt32.CertFreeCertificateChainEngine(_In_ HCERTCHAINENGINE hChainEngine)
VOID WINAPI crypt32.CertFreeCertificateChain(_In_ PCCERT_CHAIN_CONTEXT pChainContext)
VOID WINAPI crypt32.CertFreeCertificateChainList(_In_ PCCERT_CHAIN_CONTEXT *prgpSelection)
void WINAPI crypt32.CertRemoveStoreFromCollection(_In_ HCERTSTORE hCollectionStore,_In_ HCERTSTORE hSiblingStore)
void WINAPI crypt32.CryptMemFree(_In_ LPVOID pv)
void WINAPI dnsapi.DnsFree(_Inout_ PVOID pData,_In_ DNS_FREE_TYPE FreeType)
VOID WINAPI drt.DrtDeleteDerivedKeySecurityProvider(_In_ DRT_SECURITY_PROVIDER *pSecurityProvider)
VOID WINAPI drt.DrtDeleteDnsBootstrapResolver(_In_ DRT_BOOTSTRAP_PROVIDER *pResolver)
VOID WINAPI drt.DrtDeleteNullSecurityProvider(_In_ DRT_SECURITY_PROVIDER *pSecurityProvider)
VOID WINAPI drt.DrtDeletePnrpBootstrapResolver(_In_ DRT_BOOTSTRAP_PROVIDER *pResolver)
VOID WINAPI kernel32.AcquireSRWLockExclusive(_Inout_ PSRWLOCK SRWLock)
VOID WINAPI kernel32.AcquireSRWLockShared(_Inout_ PSRWLOCK SRWLock)
VOID WINAPI kernel32.CancelThreadpoolIo(_Inout_ PTP_IO pio)
VOID WINAPI kernel32.CloseThreadpoolCleanupGroup(_Inout_ PTP_CLEANUP_GROUP ptpcg)
VOID WINAPI kernel32.CloseThreadpoolCleanupGroupMembers(_Inout_ PTP_CLEANUP_GROUP ptpcg,_In_ BOOL fCancelPendingCallbacks,_Inout_opt_ PVOID pvCleanupContext)
VOID WINAPI kernel32.CloseThreadpool(_Inout_ PTP_POOL ptpp)
VOID WINAPI kernel32.CloseThreadpoolIo(_Inout_ PTP_IO pio)
VOID WINAPI kernel32.CloseThreadpoolTimer(_Inout_ PTP_TIMER pti)
VOID WINAPI kernel32.CloseThreadpoolWait(_Inout_ PTP_WAIT pwa)
VOID WINAPI kernel32.CloseThreadpoolWork(_Inout_ PTP_WORK pwk)
void WINAPI kernel32.DebugBreak(void None None)
VOID WINAPI kernel32.DeleteBoundaryDescriptor(_In_ HANDLE BoundaryDescriptor)
void WINAPI kernel32.DeleteCriticalSection(_Inout_ LPCRITICAL_SECTION lpCriticalSection)
VOID WINAPI kernel32.DeleteFiber(_In_ LPVOID lpFiber)
VOID WINAPI kernel32.DeleteProcThreadAttributeList(_Inout_ LPPROC_THREAD_ATTRIBUTE_LIST lpAttributeList)
VOID WINAPI kernel32.DisassociateCurrentThreadFromCallback(_Inout_ PTP_CALLBACK_INSTANCE pci)
void WINAPI kernel32.EnterCriticalSection(_Inout_ LPCRITICAL_SECTION lpCriticalSection)
VOID WINAPI kernel32.ExitProcess(_In_ UINT uExitCode)
VOID WINAPI kernel32.ExitThread(_In_ DWORD dwExitCode)
void WINAPI kernel32.FatalAppExitA(_In_ UINT uAction,_In_ LPCTSTR lpMessageText)
void WINAPI kernel32.FatalAppExit(_In_ UINT uAction,_In_ LPCTSTR lpMessageText)
void WINAPI kernel32.FatalAppExitW(_In_ UINT uAction,_In_ LPCTSTR lpMessageText)
void WINAPI kernel32.FatalExit(_In_ int ExitCode)
VOID WINAPI kernel32.FlushProcessWriteBuffers(void None None)
VOID WINAPI kernel32.FreeLibraryAndExitThread(_In_ HMODULE hModule,_In_ DWORD dwExitCode)
VOID WINAPI kernel32.FreeLibraryWhenCallbackReturns(_Inout_ PTP_CALLBACK_INSTANCE pci,_In_ HMODULE mod)
VOID WINAPI kernel32.FreeMemoryJobObject(_In_ VOID *Buffer)
VOID WINAPI kernel32.GetCurrentThreadStackLimits(_Out_ PULONG_PTR LowLimit,_Out_ PULONG_PTR HighLimit)
void WINAPI kernel32.GetLocalTime(_Out_ LPSYSTEMTIME lpSystemTime)
void WINAPI kernel32.GetNativeSystemInfo(_Out_ LPSYSTEM_INFO lpSystemInfo)
VOID WINAPI kernel32.GetStartupInfoA(_Out_ LPSTARTUPINFO lpStartupInfo)
VOID WINAPI kernel32.GetStartupInfo(_Out_ LPSTARTUPINFO lpStartupInfo)
VOID WINAPI kernel32.GetStartupInfoW(_Out_ LPSTARTUPINFO lpStartupInfo)
void WINAPI kernel32.GetSystemInfo(_Out_ LPSYSTEM_INFO lpSystemInfo)
void WINAPI kernel32.GetSystemTimeAsFileTime(_Out_ LPFILETIME lpSystemTimeAsFileTime)
void WINAPI kernel32.GetSystemTime(_Out_ LPSYSTEMTIME lpSystemTime)
VOID WINAPI kernel32.GetSystemTimePreciseAsFileTime(_Out_ LPFILETIME lpSystemTimeAsFileTime)
void WINAPI kernel32.GlobalMemoryStatus(_Out_ LPMEMORYSTATUS lpBuffer)
VOID WINAPI kernel32.InitializeConditionVariable(_Out_ PCONDITION_VARIABLE ConditionVariable)
void WINAPI kernel32.InitializeCriticalSection(_Out_ LPCRITICAL_SECTION lpCriticalSection)
void WINAPI kernel32.InitializeSListHead(_Inout_ PSLIST_HEADER ListHead)
VOID WINAPI kernel32.InitializeSRWLock(_Out_ PSRWLOCK SRWLock)
VOID WINAPI kernel32.InitOnceInitialize(_Out_ PINIT_ONCE InitOnce)
void WINAPI kernel32.LeaveCriticalSection(_Inout_ LPCRITICAL_SECTION lpCriticalSection)
VOID WINAPI kernel32.LeaveCriticalSectionWhenCallbackReturns(_Inout_ PTP_CALLBACK_INSTANCE pci,_Inout_ PCRITICAL_SECTION pcs)
void WINAPI kernel32.OutputDebugStringA(_In_opt_ LPCTSTR lpOutputString)
void WINAPI kernel32.OutputDebugString(_In_opt_ LPCTSTR lpOutputString)
void WINAPI kernel32.OutputDebugStringW(_In_opt_ LPCTSTR lpOutputString)
VOID WINAPI kernel32.RaiseFailFastException(_In_opt_ PEXCEPTION_RECORD pExceptionRecord,_In_opt_ PCONTEXT pContextRecord,_In_ DWORD dwFlags)
VOID WINAPI kernel32.ReleaseMutexWhenCallbackReturns(_Inout_ PTP_CALLBACK_INSTANCE pci,_In_ HANDLE mut)
VOID WINAPI kernel32.ReleaseSemaphoreWhenCallbackReturns(_Inout_ PTP_CALLBACK_INSTANCE pci,_In_ HANDLE sem,_In_ DWORD crel)
VOID WINAPI kernel32.ReleaseSRWLockExclusive(_Inout_ PSRWLOCK SRWLock)
VOID WINAPI kernel32.ReleaseSRWLockShared(_Inout_ PSRWLOCK SRWLock)
VOID WINAPI kernel32.RtlCaptureContext(_Out_ PCONTEXT ContextRecord)
VOID WINAPI kernel32.RtlRestoreContext(_In_ PCONTEXT ContextRecord,_In_ PEXCEPTION_RECORD ExceptionRecord)
void WINAPI kernel32.RtlUnwind2(_In_opt_ PVOID TargetFrame,_In_opt_ PVOID TargetIp,_In_opt_ PEXCEPTION_RECORD ExceptionRecord,_In_ PVOID ReturnValue,_In_ PCONTEXT OriginalContext)
void WINAPI kernel32.RtlUnwindEx(_In_opt_ PVOID TargetFrame,_In_opt_ PVOID TargetIp,_In_opt_ PEXCEPTION_RECORD ExceptionRecord,_In_ PVOID ReturnValue,_In_ PCONTEXT OriginalContext,_In_opt_ PUNWIND_HISTORY_TABLE HistoryTable)
void WINAPI kernel32.RtlUnwind(_In_opt_ PVOID TargetFrame,_In_opt_ PVOID TargetIp,_In_opt_ PEXCEPTION_RECORD ExceptionRecord,_In_ PVOID ReturnValue)
VOID WINAPI kernel32.SetEventWhenCallbackReturns(_Inout_ PTP_CALLBACK_INSTANCE pci,_In_ HANDLE evt)
void WINAPI kernel32.SetFileApisToANSI(void None None)
void WINAPI kernel32.SetFileApisToOEM(void None None)
void WINAPI kernel32.SetLastError(_In_ DWORD dwErrCode)
VOID WINAPI kernel32.SetThreadpoolThreadMaximum(_Inout_ PTP_POOL ptpp,_In_ DWORD cthrdMost)
VOID WINAPI kernel32.SetThreadpoolTimer(_Inout_ PTP_TIMER pti,_In_opt_ PFILETIME pftDueTime,_In_ DWORD msPeriod,_In_opt_ DWORD msWindowLength)
VOID WINAPI kernel32.SetThreadpoolWait(_Inout_ PTP_WAIT pwa,_In_opt_ HANDLE h,_In_opt_ PFILETIME pftTimeout)
VOID WINAPI kernel32.Sleep(_In_ DWORD dwMilliseconds)
VOID WINAPI kernel32.StartThreadpoolIo(_Inout_ PTP_IO pio)
VOID WINAPI kernel32.SubmitThreadpoolWork(_Inout_ PTP_WORK pwk)
VOID WINAPI kernel32.SwitchToFiber(_In_ LPVOID lpFiber)
VOID WINAPI kernel32.WaitForThreadpoolIoCallbacks(_Inout_ PTP_IO pio,_In_ BOOL fCancelPendingCallbacks)
VOID WINAPI kernel32.WaitForThreadpoolTimerCallbacks(_Inout_ PTP_TIMER pti,_In_ BOOL fCancelPendingCallbacks)
VOID WINAPI kernel32.WaitForThreadpoolWaitCallbacks(_Inout_ PTP_WAIT pwa,_In_ BOOL fCancelPendingCallbacks)
VOID WINAPI kernel32.WaitForThreadpoolWorkCallbacks(_Inout_ PTP_WORK pwk,_In_ BOOL fCancelPendingCallbacks)
VOID WINAPI kernel32.WakeAllConditionVariable(_Inout_ PCONDITION_VARIABLE ConditionVariable)
VOID WINAPI kernel32.WakeByAddressAll(_In_ PVOID Address)
VOID WINAPI kernel32.WakeByAddressSingle(_In_ PVOID Address)
VOID WINAPI kernel32.WakeConditionVariable(_Inout_ PCONDITION_VARIABLE ConditionVariable)
void WINAPI mssign32.FreeCryptProvFromCertEx(_In_ BOOL fAcquired,_In_ HCRYPTPROV_OR_NCRYPT_KEY_HANDLE hProv,DWORD dwKeySpec None,_In_opt_ LPWSTR pwszCapiProvider,_In_ DWORD dwProviderType,_In_opt_ LPWSTR pwszTmpContainer)
void WINAPI mssign32.FreeCryptProvFromCert(_In_ BOOL fAcquired,_In_ HCRYPTPROV hProv,_In_opt_ LPWSTR pwszCapiProvider,_In_ DWORD dwProviderType,_In_opt_ LPWSTR pwszTmpContainer)
void WINAPI mssign32.PvkFreeCryptProv(_In_ HCRYPTPROV hProv,_In_ LPCWSTR pwszCapiProvider,_In_ DWORD dwProviderType,_In_opt_ LPWSTR pwszTmpContainer)
void WINAPI mstlsapi.TLSDisconnectFromServer(_In_ TLS_HANDLE hHandle)
VOID WINAPI netapi32.DsGetDcClose(_In_ HANDLE GetDcContextHandle)
VOID WINAPI netapi32.DsGetDcCloseW(_In_ HANDLE GetDcContextHandle)
VOID WINAPI netapi32.DsRoleFreeMemory(_In_ PVOID Buffer)
VOID WINAPI None.BadMemoryCallbackRoutine(VOID None None)
void WINAPI None.CertStoreProvCloseCallback(_In_ HCERTSTOREPROV hStoreProv,_In_ DWORD dwFlags)
VOID WINAPI None.Close(_In_ RESID ResourceId)
void WINAPI None.CounterCleanup(void None None)
VOID WINAPI None.EventCallback(_In_ PEVENT_TRACE pEvent)
VOID WINAPI None.EventClassCallback(_In_ PEVENT_TRACE pEvent)
VOID WINAPI None.EventRecordCallback(_In_ PEVENT_RECORD EventRecord)
VOID WINAPI None.FlsCallback(_In_ PVOID lpFlsData)
VOID WINAPI None.Handler(_In_ DWORD fdwControl)
VOID WINAPI None.QuorumResourceLost(_In_ RESOURCE_HANDLE ResourceHandle)
void WINAPI None.RasPBDlgFuncA(_In_ DWORD dwCallbackId,_In_ DWORD dwEvent,_In_ LPTSTR pszText,_In_ LPVOID pData)
void WINAPI None.RasPBDlgFunc(_In_ DWORD dwCallbackId,_In_ DWORD dwEvent,_In_ LPTSTR pszText,_In_ LPVOID pData)
void WINAPI None.RasPBDlgFuncW(_In_ DWORD dwCallbackId,_In_ DWORD dwEvent,_In_ LPTSTR pszText,_In_ LPVOID pData)
VOID WINAPI None.ServiceMain(_In_ DWORD dwArgc,_In_ LPTSTR *lpszArgv)
VOID WINAPI None.Terminate(_In_ RESID Resource)
VOID WINAPI ntdll.RtlFreeUnicodeString(_Inout_ PUNICODE_STRING UnicodeString)
void WINAPI ntdll.RtlInitializeSListHead(_In_ PSLIST_HEADER ListHead)
VOID WINAPI ntdsapi.DsFreeDomainControllerInfoA(_In_ DWORD InfoLevel,_In_ DWORD cInfo,_In_ VOID *pInfo)
VOID WINAPI ntdsapi.DsFreeDomainControllerInfo(_In_ DWORD InfoLevel,_In_ DWORD cInfo,_In_ VOID *pInfo)
VOID WINAPI ntdsapi.DsFreeDomainControllerInfoW(_In_ DWORD InfoLevel,_In_ DWORD cInfo,_In_ VOID *pInfo)
void WINAPI ntdsapi.DsFreeNameResultA(DS_NAME_RESULT *pResult None)
void WINAPI ntdsapi.DsFreeNameResult(DS_NAME_RESULT *pResult None)
void WINAPI ntdsapi.DsFreeNameResultW(DS_NAME_RESULT *pResult None)
VOID WINAPI ntdsapi.DsFreePasswordCredentials(_In_ RPC_AUTH_IDENTITY_HANDLE AuthIdentity)
VOID WINAPI ntdsapi.DsFreeSchemaGuidMapA(_In_ PDS_SCHEMA_GUID_MAP pGuidMap)
VOID WINAPI ntdsapi.DsFreeSchemaGuidMap(_In_ PDS_SCHEMA_GUID_MAP pGuidMap)
VOID WINAPI ntdsapi.DsFreeSchemaGuidMapW(_In_ PDS_SCHEMA_GUID_MAP pGuidMap)
VOID WINAPI ntdsapi.DsQuerySitesFree(_In_ PDS_SITE_COST_INFO rgSiteInfo)
VOID WINAPI p2pgraph.PeerGraphFreeData(_In_ PVOID pvData)
VOID WINAPI sas.SendSAS(_In_ BOOL AsUser)
VOID WINAPI sechost.UnsubscribeServiceChangeNotifications(_In_ PSC_NOTIFICATION_REGISTRATION pSubscription)
void WINAPI secur32.LsaManageSidNameMapping(_In_ LSA_SID_NAME_MAPPING_OPERATION_TYPE OpType,_In_ PLSA_SID_NAME_MAPPING_OPERATION_INPUT OpInput,_Out_ PLSA_SID_NAME_MAPPING_OPERATION_OUTPUT *OpOutput)
VOID WINAPI user32.keybd_event(_In_ BYTE bVk,_In_ BYTE bScan,_In_ DWORD dwFlags,_In_ ULONG_PTR dwExtraInfo)
VOID WINAPI user32.mouse_event(_In_ DWORD dwFlags,_In_ DWORD dx,_In_ DWORD dy,_In_ DWORD dwData,_In_ ULONG_PTR dwExtraInfo)
void WINAPI user32.SetLastErrorEx(_In_ DWORD dwErrCode,_In_ DWORD dwType)
VOID WINAPI user32.SwitchToThisWindow(_In_ HWND hWnd,_In_ BOOL fAltTab)
void WINAPI webservices.WsFreeChannel(_In_ WS_CHANNEL* channel)
void WINAPI webservices.WsFreeError(_In_ WS_ERROR* error)
void WINAPI webservices.WsFreeHeap(_In_ WS_HEAP* heap)
void WINAPI webservices.WsFreeListener(_In_ WS_LISTENER *listener)
void WINAPI webservices.WsFreeMessage(_In_ WS_MESSAGE* message)
void WINAPI webservices.WsFreeMetadata(_In_ WS_METADATA* metadata)
void WINAPI webservices.WsFreeReader(_In_ WS_XML_READER* reader)
void WINAPI webservices.WsFreeSecurityToken(_In_ WS_SECURITY_TOKEN* token)
void WINAPI webservices.WsFreeServiceHost(_In_ WS_SERVICE_HOST* serviceHost)
void WINAPI webservices.WsFreeServiceProxy(_In_ WS_SERVICE_PROXY* serviceProxy)
void WINAPI webservices.WsFreeWriter(_In_ WS_XML_WRITER* writer)
VOID WINAPI websocket.WebSocketAbortHandle(_In_ WEB_SOCKET_HANDLE hWebSocket)
VOID WINAPI websocket.WebSocketCompleteAction(_In_ WEB_SOCKET_HANDLE hWebSocket,_In_ PVOID pvActionContext,_In_ ULONG ulBytesTransferred)
VOID WINAPI websocket.WebSocketDeleteHandle(_In_ WEB_SOCKET_HANDLE hWebSocket)
VOID WINAPI wer.WerFreeString(PCWSTR reportKey None)
VOID WINAPI winhttp.WinHttpFreeProxyResult(_Inout_ WINHTTP_PROXY_RESULT *pProxyResult)
void WINAPI winscard.SCardReleaseStartedEvent(void None None)
void WINAPI wintrust.WintrustGetRegPolicyFlags(_Out_ DWORD *pdwPolicyFlags)
void WINAPI wintrust.WintrustSetDefaultIncludePEPageHashes(_In_ BOOL fIncludePEPageHashes)
VOID WINAPI wlanapi.WlanFreeMemory(_In_ PVOID pMemory)
VOID WINAPI wtsapi32.WTSCloseServer(_In_ HANDLE hServer)
void WSAAPI ws2_32.FreeAddrInfoEx(_In_ PADDRINFOEX pAddrInfo)
void WSAAPI ws2_32.FreeAddrInfoExW(_In_ PADDRINFOEX pAddrInfo)
void WSAAPI ws2_32.FreeAddrInfoW(_In_ PADDRINFOW pAddrInfo)
WDFCHILDLIST None None.WdfFdoGetDefaultChildList(_In_ WDFDEVICE Fdo)
WDFDEVICE None None.WdfChildListGetDevice(_In_ WDFCHILDLIST ChildList)
WDFDEVICE None None.WdfChildListRetrievePdo(_In_ WDFCHILDLIST ChildList,_Inout_ PWDF_CHILD_RETRIEVE_INFO RetrieveInfo)
WDFDEVICE None None.WdfDmaTransactionGetDevice(_In_ WDFDMATRANSACTION DmaTransaction)
WDFDEVICE None None.WdfFdoRetrieveNextStaticChild(_In_ WDFDEVICE Fdo,_In_opt_ WDFDEVICE PreviousChild,_In_ ULONG Flags)
WDFDEVICE None None.WdfFileObjectGetDevice(_In_ WDFFILEOBJECT FileObject)
WDFDEVICE None None.WdfInterruptGetDevice(_In_ WDFINTERRUPT Interrupt)
WDFDEVICE None None.WdfIoQueueGetDevice(_In_ WDFQUEUE Queue)
WDFDEVICE None None.WdfIoTargetGetDevice(_In_ WDFIOTARGET IoTarget)
WDFDEVICE None None.WdfPdoGetParent(_In_ WDFDEVICE Device)
WDFDEVICE None None.WdfWdmDeviceGetWdfDeviceHandle(_In_ PDEVICE_OBJECT DeviceObject)
WDFDEVICE None None.WdfWmiInstanceGetDevice(_In_ WDFWMIINSTANCE WmiInstance)
WDFDEVICE None None.WdfWmiProviderGetDevice(_In_ WDFWMIPROVIDER WmiProvider)
WDF_DEVICE_PNP_STATE None None.WdfDeviceGetDevicePnpState(_In_ WDFDEVICE Device)
WDF_DEVICE_POWER_POLICY_STATE None None.WdfDeviceGetDevicePowerPolicyState(_In_ WDFDEVICE Device)
WDF_DEVICE_POWER_STATE None None.WdfDeviceGetDevicePowerState(_In_ WDFDEVICE Device)
WDFDRIVER None None.WdfDeviceGetDriver(_In_ WDFDEVICE Device)
WDFDRIVER None None.WdfGetDriver(void None None)
WDFDRIVER None None.WdfWdmDriverGetWdfDriverHandle(_In_ PDRIVER_OBJECT DriverObject)
WDFFILEOBJECT None None.WdfDeviceGetFileObject(_In_ WDFDEVICE Device,_In_ PFILE_OBJECT FileObject)
WDFFILEOBJECT None None.WdfRequestGetFileObject(_In_ WDFREQUEST Request)
WDF_IO_QUEUE_STATE None None.WdfIoQueueGetState(_In_ WDFQUEUE Queue,_Out_opt_ PULONG QueueRequests,_Out_opt_ PULONG DriverRequests)
WDFIORESLIST None None.WdfIoResourceRequirementsListGetIoResList(_In_ WDFIORESREQLIST RequirementsList,_In_ ULONG Index)
WDFIOTARGET None None.WdfDeviceGetIoTarget(_In_ WDFDEVICE Device)
WDFIOTARGET None None.WdfUsbTargetDeviceGetIoTarget(_In_ WDFUSBDEVICE UsbDevice)
WDFIOTARGET None None.WdfUsbTargetPipeGetIoTarget(_In_ WDFUSBPIPE Pipe)
WDF_IO_TARGET_STATE None None.WdfIoTargetGetState(_In_ WDFIOTARGET IoTarget)
WDFOBJECT None None.WdfCollectionGetFirstItem(_In_ WDFCOLLECTION Collection)
WDFOBJECT None None.WdfCollectionGetItem(_In_ WDFCOLLECTION Collection,_In_ ULONG Index)
WDFOBJECT None None.WdfCollectionGetLastItem(_In_ WDFCOLLECTION Collection)
WDFOBJECT None None.WdfDpcGetParentObject(_In_ WDFDPC Dpc)
WDFOBJECT None None.WdfObjectContextGetObject(_In_ PVOID ContextPointer)
WDFOBJECT None None.WdfTimerGetParentObject(_In_ WDFTIMER Timer)
WDFOBJECT None None.WdfWorkItemGetParentObject(_In_ WDFWORKITEM WorkItem)
WDFQUEUE None None.WdfDeviceGetDefaultQueue(_In_ WDFDEVICE Device)
WDFQUEUE None None.WdfRequestGetIoQueue(_In_ WDFREQUEST Request)
WDFREQUEST None None.WdfDmaTransactionGetRequest(_In_ WDFDMATRANSACTION DmaTransaction)
WDFUSBINTERFACE None None.WdfUsbTargetDeviceGetInterface(_In_ WDFUSBDEVICE UsbDevice,_In_ UCHAR InterfaceIndex)
WDFUSBPIPE None None.WdfUsbInterfaceGetConfiguredPipe(_In_ WDFUSBINTERFACE UsbInterface,_In_ UCHAR PipeIndex,_Out_opt_ PWDF_USB_PIPE_INFORMATION PipeInfo)
WDF_USB_PIPE_TYPE None None.WdfUsbTargetPipeGetType(_In_ WDFUSBPIPE Pipe)
WDFWMIPROVIDER None None.WdfWmiInstanceGetProvider(_In_ WDFWMIINSTANCE WmiInstance)
WDSCLIAPI None wdsclientapi.WdsCliGetImageHandleFromTransferHandle(HANDLE hTransfer None,_Out_ PHANDLE phImageHandle)
WINAPI None clusapi.MoveClusterGroupEx(_In_ HGROUP hGroup,_In_opt_ HNODE hDestinationNode,_In_ DWORD dwMoveFlags,_In_opt_ LPBYTE lpInBuffer,_In_ DWORD cbInBufferSize)
WINAPI None crypt32.CertFreeServerOcspResponseContext(_In_ PCCERT_SERVER_OCSP_RESPONSE_CONTEXT pServerOcspResponseContext)
WINAPI None drt.DrtCreateNullSecurityProvider(_Out_ DRT_SECURITY_PROVIDER **ppSecurityProvider)
WINAPI None iscsidsc.AddIscsiStaticTargetA(_In_ PTCHAR TargetName,_In_opt_ PTCHAR TargetAlias,_In_ ISCSI_TARGET_FLAGS TargetFlags,_In_ BOOLEAN Persist,_In_opt_ PISCSI_TARGET_MAPPING Mappings,_In_opt_ PISCSI_LOGIN_OPTIONS LoginOptions,_In_opt_ PISCSI_TARGET_PORTAL_GROUP PortalGroup)
WINAPI None iscsidsc.AddIscsiStaticTarget(_In_ PTCHAR TargetName,_In_opt_ PTCHAR TargetAlias,_In_ ISCSI_TARGET_FLAGS TargetFlags,_In_ BOOLEAN Persist,_In_opt_ PISCSI_TARGET_MAPPING Mappings,_In_opt_ PISCSI_LOGIN_OPTIONS LoginOptions,_In_opt_ PISCSI_TARGET_PORTAL_GROUP PortalGroup)
WINAPI None iscsidsc.AddIscsiStaticTargetW(_In_ PTCHAR TargetName,_In_opt_ PTCHAR TargetAlias,_In_ ISCSI_TARGET_FLAGS TargetFlags,_In_ BOOLEAN Persist,_In_opt_ PISCSI_TARGET_MAPPING Mappings,_In_opt_ PISCSI_LOGIN_OPTIONS LoginOptions,_In_opt_ PISCSI_TARGET_PORTAL_GROUP PortalGroup)
WINAPI None iscsidsc.ReportIscsiTargetsA(_In_ BOOLEAN ForceUpdate,_Inout_ PULONG BufferSize,_Out_ PTCHAR Buffer)
WINAPI None iscsidsc.ReportIscsiTargets(_In_ BOOLEAN ForceUpdate,_Inout_ PULONG BufferSize,_Out_ PTCHAR Buffer)
WINAPI None iscsidsc.ReportIscsiTargetsW(_In_ BOOLEAN ForceUpdate,_Inout_ PULONG BufferSize,_Out_ PTCHAR Buffer)
WINAPI None iscsidsc.ReportPersistentIscsiDevicesA(_Inout_ PULONG BufferSizeInChar,_Out_ PTCHAR Buffer)
WINAPI None iscsidsc.ReportPersistentIscsiDevices(_Inout_ PULONG BufferSizeInChar,_Out_ PTCHAR Buffer)
WINAPI None iscsidsc.ReportPersistentIscsiDevicesW(_Inout_ PULONG BufferSizeInChar,_Out_ PTCHAR Buffer)
WINAPI None kernel32.GetIntegratedDisplaySize(_Out_ double *sizeInInches)
WINAPI None kernel32.UnmapViewOfFile2(_In_ HANDLE ProcessHandle,_In_ PVOID BaseAddress,_In_ ULONG UnmapFlags)
WINAPI None kernelbase.SetProcessValidCallTargets(_In_ HANDLE hProcess,_In_ PVOID VirtualAddress,_In_ SIZE_T RegionSize,_In_ ULONG NumberOfOffsets,_Inout_ PCFG_CALL_TARGET_INFO OffsetInformation)
WINAPI None mf.MFCreateWAVEMediaSink(_In_ IMFByteStream *pTargetByteStream,_In_ IMFMediaType *pAudioMediaType,_Out_ IMFMediaSink **ppMediaSink)
WINAPI None msdrm.DRMGetSignedIssuanceLicenseEx(_In_ DRMENVHANDLE hEnv,_In_ DRMPUBHANDLE hIssuanceLicense,_In_ UINT uFlags,_In_ BYTE *pbSymKey,_In_ UINT cbSymKey,_In_ PWSTR wszSymKeyType,_In_ VOID *pvReserved,_In_ DRMHANDLE hEnablingPrincipal,_In_ DRMHANDLE hBoundLicense,_In_ DRMCALLBACK pfnCallback,_In_ VOID *pvContext)
WINHTTP_STATUS_CALLBACK WINAPI winhttp.WinHttpSetStatusCallback(_In_ HINTERNET hInternet,_In_ WINHTTP_STATUS_CALLBACK lpfnInternetCallback,_In_ DWORD dwNotificationFlags,_Reserved_ DWORD_PTR dwReserved)
WINOLEAPI None ole32.CreateILockBytesOnHGlobal(_In_ HGLOBAL hGlobal,_In_ BOOL fDeleteOnRelease,_Out_ ILockBytes **ppLkbyt)
WINOLEAPI None ole32.CreateStreamOnHGlobal(_In_ HGLOBAL hGlobal,_In_ BOOL fDeleteOnRelease,_Out_ LPSTREAM *ppstm)
WINOLEAPI None ole32.FreePropVariantArray(_In_ ULONG cVariants,_In_ PROPVARIANT *rgvars)
WINOLEAPI None ole32.GetConvertStg(_In_ IStorage *pStg)
WINOLEAPI None ole32.GetHGlobalFromILockBytes(_In_ ILockBytes *pLkbyt,_Out_ HGLOBAL *phglobal)
WINOLEAPI None ole32.GetHGlobalFromStream(_In_ IStream *pstm,_Out_ HGLOBAL *phglobal)
WINOLEAPI None ole32.OleConvertIStorageToOLESTREAMEx(_In_ IStorage *pStg,_In_ CLIPFORMAT cfFormat,_In_ LONG lWidth,_In_ LONG lHeight,_In_ DWORD dwSize,_In_ STGMEDIUM pmedium,_Out_ LPOLESTREAM lpolestm)
WINOLEAPI None ole32.OleConvertIStorageToOLESTREAM(_In_ IStorage *pStg,_Out_ LPOLESTREAM lpolestream)
WINOLEAPI None ole32.OleConvertOLESTREAMToIStorageEx(_In_ LPOLESTREAM lpolestm,_Out_ IStorage *pstg,_Out_ CLIPFORMAT *pcfFormat,_Out_ LONG *plWidth,_Out_ LONG *plHeight,_Out_ DWORD *pdwSize,_Out_ STGMEDIUM pmedium)
WINOLEAPI None ole32.PropVariantClear(_In_ PROPVARIANT *pvar)
WINOLEAPI None ole32.ReadClassStg(_In_ IStorage *pStg,_Out_ CLSID *pclsid)
WINOLEAPI None ole32.ReadClassStm(_In_ IStream *pStm,_Out_ CLSID *pclsid)
WINOLEAPI None ole32.ReadFmtUserTypeStg(_In_ IStorage *pStg,_Out_ CLIPFORMAT *pcf,_Out_ LPWSTR *lplpszUserType)
WINOLEAPI None ole32.SetConvertStg(IStorage *pStg None,BOOL fConvert None)
WINOLEAPI None ole32.StgGetIFillLockBytesOnFile(_In_ OLECHAR *pwcsName,_Out_ IFillLockBytes **ppflb)
WINOLEAPI None ole32.StgGetIFillLockBytesOnILockBytes(_In_ ILockBytes *pilb,_Out_ IFillLockBytes **ppflb)
WINOLEAPI None ole32.StgIsStorageILockBytes(ILockBytes *plkbyt None)
WINOLEAPI None ole32.StgOpenAsyncDocfileOnIFillLockBytes(_In_ IFillLockBytes *ppflb,_In_ DWORD grfmode,_In_ DWORD asyncFlags,_Out_ IStorage **ppstgOpen)
WINOLEAPI None ole32.WriteClassStg(_In_ IStorage *pStg,_In_ REFCLSID rclsid)
WINOLEAPI None ole32.WriteClassStm(_In_ IStream *pStm,_In_ REFCLSID rclsid)
WINOLEAPI None ole32.WriteFmtUserTypeStg(_In_ IStorage *pStg,_In_ CLIPFORMAT cf,_In_ LPWSTR *lpszUserType)
WNDPROC __stdcall atlthunk.AtlThunk_DataToCode(AtlThunkData_t * None)
WORD None kernel32.GetActiveProcessorGroupCount(void None None)
WORD None kernel32.GetMaximumProcessorGroupCount(void None None)
WORD None None.GET_DEVICE_LPARAM(LPARAM lParam None)
WORD None None.GET_MOUSEORKEY_LPARAM(LPARAM lParam None)
WORD None None.HIWORD(DWORD dwValue None)
WORD None None.HRESULT_CODE(HRESULT hr None)
WORD None None.HRESULT_FACILITY(HRESULT hr None)
WORD None None.LANGIDFROMLCID(LCID lcid None)
WORD None None.LOWORD(DWORD dwValue None)
WORD None None.MAKELANGID(USHORT usPrimaryLanguage None,USHORT usSubLanguage None)
WORD None None.MAKEWORD(BYTE bLow None,BYTE bHigh None)
WORD None None.PRIMARYLANGID(WORD lgid None)
WORD None None.SCODE_CODE(SCODE sc None)
WORD None None.SCODE_FACILITY(SCODE sc None)
WORD None None.SORTIDFROMLCID(LCID lcid None)
WORD None None.SORTVERSIONFROMLCID(LCID lcid None)
WORD WINAPI ntdll.RtlQueryDepthSList(_In_ PSLIST_HEADER ListHead)
WPARAM None None.MAKEWPARAM(WORD wLow None,WORD wHigh None)
WSAEVENT None None.WPUCompleteOverlappedRequest(_In_ SOCKET s,_In_ LPWSAOVERLAPPED lpOverlapped,_In_ DWORD dwError,_In_ DWORD cbTransferred,_Out_ LPINT lpErrno)
WSAEVENT None None.WPUCreateEvent(_Out_ LPINT lpErrno)
WSAEVENT None ws2_32.WSACreateEvent(void None None)
WT_Disk None wtwmiprov.NewWTDisk([in] string DevicePath,[in] string Description,[in] boolean ClearPartTable,[in] uint32 SizeInMB)
XMMATRIX XM_CALLCONV None.XMMatrixLookAtLH(FXMVECTOR EyePosition None,FXMVECTOR FocusPosition None,FXMVECTOR UpDirection None)
XMVECTOR None None.XMColorRGBToSRGB(FXMVECTOR rgb None)
XMVECTOR None None.XMVectorInsert(FXMVECTOR VD None,FXMVECTOR VS None)
XMVECTOR None None.XMVectorPermuteControl(UINT ElementIndex0 None,UINT ElementIndex1 None,UINT ElementIndex2 None,UINT ElementIndex3 None)
XMVECTOR None None.XMVectorSetIntByIndex(XMVECTOR V None,uint32_t x None,size_t i None)
XpsThumbnail None None.AddThumbnail(XpsImageType imageType None)
YIELDPROC None None.mciGetYieldProc(MCIDEVICEID IDDevice None,LPDWORD lpdwYieldData None)
#cat names_last.txt n1.txt n2.txt n3.txt n4.txt b1.txt b2.txt | perl -e 'while($line=<STDIN>) { chop $line; print "$line\n" if(not $line =~/^(protected|private|public)/); }' | sort -u > winapi.txt
int None ws2_32.recv(_In_ SOCKET s,_Out_ char *buf,_In_ int len,_In_ int flags)
int NONE ws2_32.recvfrom( _In_ SOCKET s, _Out_ char buf, _In_ int len, _In_ int flags, _Out_ struct sockaddr from, _Inout_opt_ int fromlen )
int None ws2_32.bind(_In_ SOCKET s, _In_ sockaddr* name, _In_ int namelen)
int None ws2_32.getsockname(_In_ SOCKET s, _Out_ sockaddr *name, _Inout_ int* namelen)
int WSAAPI ws2_32.GetAddrInfoW( _In_opt_       PCWSTR     pNodeName,  _In_opt_       PCWSTR     pServiceName,  _In_opt_ ADDRINFOW* pHints,  _Out_ PADDRINFOW* ppResult)
int None ws2_32.connect(_In_ SOCKET s, _In_ struct sockaddr* name, _In_ int namelen)
int None ws2_32.getsockname(_In_ SOCKET  s, _Out_  sockaddr* name, _Inout_ int* namelen)
int None ws2_32.getpeername(_In_  SOCKET  s, _Out_  sockaddr* name, _Inout_ int* namelen)
int None ws2_32.send(_In_ SOCKET s, _In_ char* buf,  _In_  int    len, _In_  int    flags)
int None ws2_32.sendto( _In_  SOCKET s, _In_ char* buf, _In_ int len, _In_ int  flags,_In_ sockaddr* to,  _In_  int  tolen)
int None ws2_32.select( _In_  int  nfds, _Inout_ fd_set* readfds,  _Inout_ fd_set* writefds, _Inout_ fd_set* exceptfds,  _In_   timeval* timeout)
int None ws2_32.send(_In_ SOCKET s, _In_ char* buf,  _In_  int    len, _In_  int    flags)
int NONE ws2_32.gethostbyname(_In_ char* name)
LONG WINAPI advapi32.RegSetValueExW(  _In_ HKEY    hKey, _In_opt_  LPCTSTR lpValueName, _Reserved_  DWORD   Reserved, _In_ DWORD dwType, _In_  LPCSTR lpData, _In_ DWORD   cbData )
DWORD WINAPI psapi.GetProcessImageFileNameW ( _In_  HANDLE hProcess, _Out_ LPTSTR lpImageFileName, _In_  DWORD  nSize)
int WSAAPI ws2_32.getaddrinfo(  __in_opt  PCSTR pNodeName,  __in_opt  PCSTR pServiceName,  __in_opt  ADDRINFOA *pHints,  __out     PADDRINFOA *ppResult )
int NONE ws2_32.getpeername(  __in     SOCKET s,   __out    struct sockaddr *name,   __inout  int *namelen );
int WSAAPI ws2_32.getnameinfo( __in   sockaddr *sa,   __in   socklen_t salen,   __out  char FAR *host,   __in   DWORD hostlen,  __out  char FAR *serv,   __in   DWORD servlen,   __in   int flags )
void * msvcrt.memcpy(   char *dest,  char *src, size_t count )
#Added manually
DWORD WINAPI kernel32.CreateProcessInternal(  __in         DWORD unknown1, __in_opt     LPCTSTR lpApplicationName, __inout_opt  LPTSTR lpCommandLine, __in_opt     LPSECURITY_ATTRIBUTES lpProcessAttributes,  __in_opt     LPSECURITY_ATTRIBUTES lpThreadAttributes, __in         BOOL bInheritHandles,  __in         DWORD dwCreationFlags,  __in_opt     LPVOID lpEnvironment,  __in_opt     LPCTSTR lpCurrentDirectory,  __in         LPSTARTUPINFO lpStartupInfo,  __out        LPPROCESS_INFORMATION lpProcessInformation,  __in         DWORD unknown2)
DWORD WINAPI kernel32.CreateProcessInternalA(  __in         DWORD unknown1, __in_opt     LPCTSTR lpApplicationName, __inout_opt  LPTSTR lpCommandLine, __in_opt     LPSECURITY_ATTRIBUTES lpProcessAttributes,  __in_opt     LPSECURITY_ATTRIBUTES lpThreadAttributes, __in         BOOL bInheritHandles,  __in         DWORD dwCreationFlags,  __in_opt     LPVOID lpEnvironment,  __in_opt     LPCTSTR lpCurrentDirectory,  __in         LPSTARTUPINFO lpStartupInfo,  __out        LPPROCESS_INFORMATION lpProcessInformation,  __in         DWORD unknown2)
DWORD WINAPI kernel32.CreateProcessInternalW(  __in         DWORD unknown1, __in_opt     LPCTSTR lpApplicationName, __inout_opt  LPTSTR lpCommandLine, __in_opt     LPSECURITY_ATTRIBUTES lpProcessAttributes,  __in_opt     LPSECURITY_ATTRIBUTES lpThreadAttributes, __in         BOOL bInheritHandles,  __in         DWORD dwCreationFlags,  __in_opt     LPVOID lpEnvironment,  __in_opt     LPCTSTR lpCurrentDirectory,  __in         LPSTARTUPINFO lpStartupInfo,  __out        LPPROCESS_INFORMATION lpProcessInformation,  __in         DWORD unknown2)
