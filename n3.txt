HRESULT None shell32.CIDLData_CreateFromIDArray(_In_ PCIDLIST_ABSOLUTE pidlFolder,_In_ UINT cidl,_In_ PCUIDLIST_RELATIVE_ARRAY apidl,_Out_ IDataObject **ppdtobj)
BOOL None shell32.SHFindFiles(_In_opt_ PCIDLIST_ABSOLUTE pidlFolder,_In_opt_ PCIDLIST_ABSOLUTE pidlSaveFile)
BOOL WINAPI kernel32.GlobalMemoryStatusEx(_Inout_ LPMEMORYSTATUSEX lpBuffer)
BOOL WINAPI kernel32.GetPhysicallyInstalledSystemMemory(_Out_ PULONGLONG TotalMemoryInKilobytes)
BOOL CALLBACK None.EnumGeoInfoProc(_In_ GEOID GeoId)
HWND WINAPI user32.GetLastActivePopup(_In_ HWND hWnd)
HWND None None.TreeView_SetToolTips(HWND hwndTV None,HWND hwndTooltip None)
BOOL WINAPI kernel32.LoadStringByReference(_In_ DWORD Flags,_In_opt_ PCWSTR Language,_In_ PCWSTR SourceString,_Out_opt_ PWSTR Buffer,_In_ ULONG cchBuffer,_In_opt_ PCWSTR Directory,_Out_opt_ PULONG pcchBufferOut)
BOOL WINAPI kernel32.IsWow64Process(_In_ HANDLE hProcess,_Out_ PBOOL Wow64Process)
NTSTATUS None None.CreateLogonSession(_In_ PLUID LogonId)
BOOL WINAPI user32.BringWindowToTop(_In_ HWND hWnd)
PTSTR None shlwapi.StrRChr(_In_ PTSTR pszStart,_In_opt_ PCTSTR pszEnd,TCHAR wMatch None)
PTSTR None shlwapi.StrRChrW(_In_ PTSTR pszStart,_In_opt_ PCTSTR pszEnd,TCHAR wMatch None)
PTSTR None shlwapi.StrRChrA(_In_ PTSTR pszStart,_In_opt_ PCTSTR pszEnd,TCHAR wMatch None)
VOID None shell32.DragAcceptFiles(HWND hWnd None,BOOL fAccept None)
HRESULT None None.Method3([in None None,readonly] int iMmutable)
NTSTATUS WINAPI bcrypt.BCryptVerifySignature(_In_ BCRYPT_KEY_HANDLE hKey,_In_opt_ VOID *pPaddingInfo,_In_ PUCHAR pbHash,_In_ ULONG cbHash,_In_ PUCHAR pbSignature,_In_ ULONG cbSignature,_In_ ULONG dwFlags)
BOOL None kernel32.EnumCalendarInfo(_In_ CALINFO_ENUMPROC pCalInfoEnumProc,_In_ LCID Locale,_In_ CALID Calendar,_In_ CALTYPE CalType)
BOOL None kernel32.EnumCalendarInfoW(_In_ CALINFO_ENUMPROC pCalInfoEnumProc,_In_ LCID Locale,_In_ CALID Calendar,_In_ CALTYPE CalType)
BOOL None kernel32.EnumCalendarInfoA(_In_ CALINFO_ENUMPROC pCalInfoEnumProc,_In_ LCID Locale,_In_ CALID Calendar,_In_ CALTYPE CalType)
uint32 None ramgmtpsprovider.SetByDisableLoadBalancing([in] boolean Disable,[in] string ComputerName,[in] boolean Force,[in] boolean PassThru,[out] RemoteAccessLoadBalancer cmdletOutput)
BOOL WINAPI kernel32.SetFileInformationByHandle(_In_ HANDLE hFile,_In_ FILE_INFO_BY_HANDLE_CLASS FileInformationClass,_In_ LPVOID lpFileInformation,_In_ DWORD dwBufferSize)
WINOLEAPI None ole32.CreateILockBytesOnHGlobal(_In_ HGLOBAL hGlobal,_In_ BOOL fDeleteOnRelease,_Out_ ILockBytes **ppLkbyt)
BOOL WINAPI kernel32.SetProcessDEPPolicy(_In_ DWORD dwFlags)
NTSTATUS WINAPI netapi32.NetQueryServiceAccount(_In_opt_ LPWSTR ServerName,_In_ LPWSTR AccountName,_In_ DWORD InfoLevel,_Out_ PBYTE *Buffer)
BOOL WINAPI kernel32.SetEvent(_In_ HANDLE hEvent)
BOOL WINAPI advapi32.AllocateLocallyUniqueId(_Out_ PLUID Luid)
HRESULT None srmsvc.EnumReports([out] IFsrmCollection **reports)
NTSTATUS None secur32.LsaDeregisterLogonProcess(_In_ HANDLE LsaHandle)
HRESULT None shell32.SHLimitInputEdit(_In_opt_ HWND hwndEdit,_In_ IShellFolder *psf)
DWORD WINAPI fwpuclnt.FwpmSessionEnum0(_In_ HANDLE engineHandle,_In_ HANDLE enumHandle,_In_ UINT32 numEntriesRequested,_Out_ FWPM_SESSION0 ***entries,_Out_ UINT32 *numEntriesReturned)
HRESULT None oleaut32.VarI4FromUI1(_In_ BYTE bIn,_Out_ LONG *plOut)
DWORD None iphlpapi.GetNetworkParams(_Out_ PFIXED_INFO pFixedInfo,_In_ PULONG pOutBufLen)
VOID WINAPI kernel32.CloseThreadpoolWait(_Inout_ PTP_WAIT pwa)
uint32 None cimwin32.TakeOwnerShipEx([out] string StopFileName,[in None None,optional] string StartFileName,[in None None,optional] boolean Recursive)
BOOL WINAPI credui.CredUnPackAuthenticationBuffer(_In_ DWORD dwFlags,_In_ PVOID pAuthBuffer,_In_ DWORD cbAuthBuffer,_Out_ LPTSTR pszUserName,_Inout_ DWORD *pcchMaxUserName,_Out_ LPTSTR pszDomainName,_Inout_ DWORD *pcchMaxDomainname,_Out_ LPTSTR pszPassword,_Inout_ DWORD *pcchMaxPassword)
BOOL WINAPI credui.CredUnPackAuthenticationBufferW(_In_ DWORD dwFlags,_In_ PVOID pAuthBuffer,_In_ DWORD cbAuthBuffer,_Out_ LPTSTR pszUserName,_Inout_ DWORD *pcchMaxUserName,_Out_ LPTSTR pszDomainName,_Inout_ DWORD *pcchMaxDomainname,_Out_ LPTSTR pszPassword,_Inout_ DWORD *pcchMaxPassword)
BOOL WINAPI credui.CredUnPackAuthenticationBufferA(_In_ DWORD dwFlags,_In_ PVOID pAuthBuffer,_In_ DWORD cbAuthBuffer,_Out_ LPTSTR pszUserName,_Inout_ DWORD *pcchMaxUserName,_Out_ LPTSTR pszDomainName,_Inout_ DWORD *pcchMaxDomainname,_Out_ LPTSTR pszPassword,_Inout_ DWORD *pcchMaxPassword)
INT None mswsock.RIONotify(_In_ RIO_CQ CQ)
LPVOID WINAPI kernel32.MapViewOfFileEx(_In_ HANDLE hFileMappingObject,_In_ DWORD dwDesiredAccess,_In_ DWORD dwFileOffsetHigh,_In_ DWORD dwFileOffsetLow,_In_ SIZE_T dwNumberOfBytesToMap,_In_opt_ LPVOID lpBaseAddress)
BOOL None None.TreeView_SelectSetFirstVisible(HWND hwndTV None,HTREEITEM hitem None)
BOOL WINAPI user32.PhysicalToLogicalPoint(_In_ HWND hWnd,_Inout_ LPPOINT lpPoint)
LPVOID WINAPI kernel32.CreateFiber(_In_ SIZE_T dwStackSize,_In_ LPFIBER_START_ROUTINE lpStartAddress,_In_opt_ LPVOID lpParameter)
HRESULT None shlwapi.UrlFixupW(_In_ PCWSTR pcszUrl,_Out_ PWSTR pszTranslatedUrl,DWORD cchMax None)
HRESULT None shlwapi.UrlFixupW(_In_ PCWSTR pcszUrl,_Out_ PWSTR pszTranslatedUrl,DWORD cchMax None)
HIMAGELIST None None.TreeView_SetImageList(HWND hwndTV None,HIMAGELIST himl None,INT iImage None)
LRESULT CALLBACK atlthunk.AtlThunk(_In_ HWND hwnd,_In_ UINT uMsg,_In_ WPARAM wParam,_In_ LPARAM lParam)
BOOL WINAPI kernel32.MoveFileEx(_In_ LPCTSTR lpExistingFileName,_In_opt_ LPCTSTR lpNewFileName,_In_ DWORD dwFlags)
BOOL WINAPI kernel32.MoveFileExW(_In_ LPCTSTR lpExistingFileName,_In_opt_ LPCTSTR lpNewFileName,_In_ DWORD dwFlags)
BOOL WINAPI kernel32.MoveFileExA(_In_ LPCTSTR lpExistingFileName,_In_opt_ LPCTSTR lpNewFileName,_In_ DWORD dwFlags)
WINOLEAPI None ole32.ReadFmtUserTypeStg(_In_ IStorage *pStg,_Out_ CLIPFORMAT *pcf,_Out_ LPWSTR *lplpszUserType)
BOOL WINAPI kernel32.VirtualProtectEx(_In_ HANDLE hProcess,_In_ LPVOID lpAddress,_In_ SIZE_T dwSize,_In_ DWORD flNewProtect,_Out_ PDWORD lpflOldProtect)
BOOL WINAPI user32.AttachThreadInput(_In_ DWORD idAttach,_In_ DWORD idAttachTo,_In_ BOOL fAttach)
BOOL None ole32.CoDosDateTimeToFileTime(_In_ WORD nDosDate,_In_ WORD nDosTime,_Out_ FILETIME *lpFileTime)
BOOL None None.WlxGetSourceDesktop(_In_ HANDLE hWlx,_Out_ PWLX_DESKTOP *ppDesktop)
BOOL WINAPI advapi32.SaferRecordEventLogEntry(_In_ SAFER_LEVEL_HANDLE hLevel,_In_ LPCWSTR szTargetPath,_Reserved_ LPVOID lpReserved)
BOOL WINAPI kernel32.CopyFileEx(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName,_In_opt_ LPPROGRESS_ROUTINE lpProgressRoutine,_In_opt_ LPVOID lpData,_In_opt_ LPBOOL pbCancel,_In_ DWORD dwCopyFlags)
BOOL WINAPI kernel32.CopyFileExW(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName,_In_opt_ LPPROGRESS_ROUTINE lpProgressRoutine,_In_opt_ LPVOID lpData,_In_opt_ LPBOOL pbCancel,_In_ DWORD dwCopyFlags)
BOOL WINAPI kernel32.CopyFileExA(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName,_In_opt_ LPPROGRESS_ROUTINE lpProgressRoutine,_In_opt_ LPVOID lpData,_In_opt_ LPBOOL pbCancel,_In_ DWORD dwCopyFlags)
void None None.VoidFunc1(void None None)
NTSTATUS WINAPI bcrypt.BCryptHash(BCRYPT_ALG_HANDLE hAlgorithm None,PUCHAR pbSecret None,ULONG cbSecret None,PUCHAR pbInput None,ULONG cbInput None,PUCHAR pbOutput None,ULONG cbOutput None)
NTSTATUS NTAPI ntdll.NtCompareTokens(_In_ HANDLE FirstTokenHandle,_In_ HANDLE SecondTokenHandle,_Out_ PBOOLEAN Equal)
BOOL CALLBACK None.EnumCodePagesProc(_In_ LPTSTR lpCodePageString)
BOOL None kernel32.IsValidLanguageGroup(_In_ LGRPID LanguageGroup,_In_ DWORD dwFlags)
VOID None None.DestroyThreadpoolEnvironment(_Inout_ PTP_CALLBACK_ENVIRON pcbe)
BOOL WINAPI user32.AdjustWindowRectEx(_Inout_ LPRECT lpRect,_In_ DWORD dwStyle,_In_ BOOL bMenu,_In_ DWORD dwExStyle)
HRESULT None shell32.GetCurrentProcessExplicitAppUserModelID(_Out_ PWSTR *AppID)
BOOL None shell32.Win32DeleteFile(_In_ PCWSTR pszFileName)
HRESULT None oleaut32.VarDecFromI2(_In_ SHORT uiIn,_Out_ DECIMAL *pdecOut)
uint32 None ramgmtpsprovider.SetByEnableLoadBalancing([in] boolean UseThirdPartyLoadBalancer,[in] string InternetDedicatedIPAddress[],[in] string InternalDedicatedIPAddress[],[in] string InternetVirtualIPAddress[],[in] string InternalVirtualIPAddress[],[in] string ComputerName,[in] boolean PassThru,[out] RemoteAccessLoadBalancer cmdletOutput)
BOOL None kernel32.GetCalendarSupportedDateRange(_In_ CALID Calendar,_Out_ LPCALDATETIME lpCalMinDateTime,_Out_ LPCALDATETIME lpCalMaxDateTime)
BOOL WINAPI advapi32.LookupPrivilegeName(_In_opt_ LPCTSTR lpSystemName,_In_ PLUID lpLuid,_Out_opt_ LPTSTR lpName,_Inout_ LPDWORD cchName)
BOOL WINAPI advapi32.LookupPrivilegeNameW(_In_opt_ LPCTSTR lpSystemName,_In_ PLUID lpLuid,_Out_opt_ LPTSTR lpName,_Inout_ LPDWORD cchName)
BOOL WINAPI advapi32.LookupPrivilegeNameA(_In_opt_ LPCTSTR lpSystemName,_In_ PLUID lpLuid,_Out_opt_ LPTSTR lpName,_Inout_ LPDWORD cchName)
BOOL WINAPI advapi32.ImpersonateSelf(_In_ SECURITY_IMPERSONATION_LEVEL ImpersonationLevel)
LONG WINAPI winscard.SCardForgetReaderGroup(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szGroupName)
LONG WINAPI winscard.SCardForgetReaderGroupW(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szGroupName)
LONG WINAPI winscard.SCardForgetReaderGroupA(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szGroupName)
NTSTATUS None None.SpInstanceInit(_In_ ULONG Version,_In_ PSECPKG_DLL_FUNCTIONS FunctionTable,_Out_ PVOID *UserFunctions)
SECURITY_STATUS SEC_Entry secur32.EncryptMessage(_In_ PCtxtHandle phContext,_In_ ULONG fQOP,_Inout_ PSecBufferDesc pMessage,_In_ ULONG MessageSeqNo)
HRESULT None ole32.CreateItemMoniker(_In_ LPCOLESTR lpszDelim,_In_ LPCOLESTR lpszItem,_Out_ LPMONIKER *ppmk)
NTSTATUS None None.RegisterCallback(_In_ ULONG CallbackId,_In_ PLSA_CALLBACK_FUNCTION Callback)
HRESULT None ole32.StringFromCLSID(_In_ REFCLSID rclsid,_Out_ LPOLESTR *lplpsz)
BOOL CALLBACK None.EnumCalendarInfoProc(_In_ LPTSTR lpCalendarInfoString)
LONG WINAPI lz32.LZSeek(_In_ INT hFile,_In_ LONG lOffset,_In_ INT iOrigin)
BOOL None shlwapi.StrToInt64Ex(_In_ PCTSTR pszString,STIF_FLAGS dwFlags None,_Out_ LONGLONG *pllRet)
BOOL None shlwapi.StrToInt64ExW(_In_ PCTSTR pszString,STIF_FLAGS dwFlags None,_Out_ LONGLONG *pllRet)
BOOL None shlwapi.StrToInt64ExA(_In_ PCTSTR pszString,STIF_FLAGS dwFlags None,_Out_ LONGLONG *pllRet)
NETIOAPI_API None iphlpapi.FlushIpNetTable2(_In_ ADDRESS_FAMILY Family,_In_ NET_IFINDEX InterfaceIndex)
BOOL None ole32.IsEqualIID(_In_ REFGUID riid1,_In_ REFGUID riid2)
VOID CALLBACK None.CleanupGroupCancelCallback(_Inout_opt_ PVOID ObjectContext,_Inout_opt_ PVOID CleanupContext)
WINOLEAPI None ole32.CreateILockBytesOnHGlobal(_In_ HGLOBAL hGlobal,_In_ BOOL fDeleteOnRelease,_Out_ ILockBytes **ppLkbyt)
HWND WINAPI user32.FindWindow(_In_opt_ LPCTSTR lpClassName,_In_opt_ LPCTSTR lpWindowName)
HWND WINAPI user32.FindWindowW(_In_opt_ LPCTSTR lpClassName,_In_opt_ LPCTSTR lpWindowName)
HWND WINAPI user32.FindWindowA(_In_opt_ LPCTSTR lpClassName,_In_opt_ LPCTSTR lpWindowName)
LRESULT None None.TreeView_SetHot(HWND hwndTV None,HTREEITEM hitem None)
BOOL WINAPI user32.OpenIcon(_In_ HWND hWnd)
HRESULT None shell32.SHSetTemporaryPropertyForItem(_In_ IShellItem *psi,_In_ REFPROPERTYKEY propkey,_In_ REFPROPVARIANT propvar)
HRESULT None oleaut32.VarUI1FromR8(_In_ DOUBLE dblIn,_Out_ BYTE *pbOut)
WINOLEAPI None ole32.CreateILockBytesOnHGlobal(_In_ HGLOBAL hGlobal,_In_ BOOL fDeleteOnRelease,_Out_ ILockBytes **ppLkbyt)
UINT None None.TreeView_GetItemState(HWND hwndTV None,HTREEITEM hItem None,UINT stateMask None)
HRESULT None None.GetSelectedItems([out] IShellItemArray **psiaitems)
HRESULT WINAPI shell32.SHGetFolderPathEx(_In_ REFKNOWNFOLDERID rfid,_In_ DWORD dwFlags,_In_opt_ HANDLE hToken,_Out_ LPWSTR pszPath,_In_ UINT cchPath)
ULONG WINAPI iphlpapi.SetPerTcp6ConnectionEStats(PMIB_TCP6ROW Row None,TCP_ESTATS_TYPE EstatsType None,PUCHAR Rw None,ULONG RwVersion None,ULONG RwSize None,ULONG Offset None)
BOOL None None.TreeView_SetInsertMark(HWND hwndTV None,HTREEITEM htiInsert None,BOOL fAfter None)
HANDLE WINAPI kernel32.CreateFileTransacted(_In_ LPCTSTR lpFileName,_In_ DWORD dwDesiredAccess,_In_ DWORD dwShareMode,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ DWORD dwCreationDisposition,_In_ DWORD dwFlagsAndAttributes,_In_opt_ HANDLE hTemplateFile,_In_ HANDLE hTransaction,_In_opt_ PUSHORT pusMiniVersion,_Reserved_ PVOID pExtendedParameter)
HANDLE WINAPI kernel32.CreateFileTransactedW(_In_ LPCTSTR lpFileName,_In_ DWORD dwDesiredAccess,_In_ DWORD dwShareMode,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ DWORD dwCreationDisposition,_In_ DWORD dwFlagsAndAttributes,_In_opt_ HANDLE hTemplateFile,_In_ HANDLE hTransaction,_In_opt_ PUSHORT pusMiniVersion,_Reserved_ PVOID pExtendedParameter)
HANDLE WINAPI kernel32.CreateFileTransactedA(_In_ LPCTSTR lpFileName,_In_ DWORD dwDesiredAccess,_In_ DWORD dwShareMode,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ DWORD dwCreationDisposition,_In_ DWORD dwFlagsAndAttributes,_In_opt_ HANDLE hTemplateFile,_In_ HANDLE hTransaction,_In_opt_ PUSHORT pusMiniVersion,_Reserved_ PVOID pExtendedParameter)
NTSTATUS None advapi32.LsaLookupNames(_In_ LSA_HANDLE PolicyHandle,_In_ ULONG Count,_In_ PLSA_UNICODE_STRING Names,_Out_ PLSA_REFERENCED_DOMAIN_LIST *ReferencedDomains,_Out_ PLSA_TRANSLATED_SID *Sids)
HWND WINAPI user32.FindWindow(_In_opt_ LPCTSTR lpClassName,_In_opt_ LPCTSTR lpWindowName)
HWND WINAPI user32.FindWindowW(_In_opt_ LPCTSTR lpClassName,_In_opt_ LPCTSTR lpWindowName)
HWND WINAPI user32.FindWindowA(_In_opt_ LPCTSTR lpClassName,_In_opt_ LPCTSTR lpWindowName)
NTSTATUS WINAPI bcrypt.BCryptDeriveKey(_In_ BCRYPT_SECRET_HANDLE hSharedSecret,_In_ LPCWSTR pwszKDF,_In_opt_ BCryptBufferDesc *pParameterList,_Out_opt_ PUCHAR pbDerivedKey,_In_ ULONG cbDerivedKey,_Out_ ULONG *pcbResult,_In_ ULONG dwFlags)
BOOL None mswsock.AcceptEx(_In_ SOCKET sListenSocket,_In_ SOCKET sAcceptSocket,_In_ PVOID lpOutputBuffer,_In_ DWORD dwReceiveDataLength,_In_ DWORD dwLocalAddressLength,_In_ DWORD dwRemoteAddressLength,_Out_ LPDWORD lpdwBytesReceived,_In_ LPOVERLAPPED lpOverlapped)
SECURITY_STATUS None sspicli.SspiEncodeAuthIdentityAsStrings(_In_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE pAuthIdentity,_Out_ PCWSTR *ppszUserName,_Out_ PCWSTR *ppszDomainName,_Out_ PCWSTR *ppszPackedCredentialsString)
SECURITY_STATUS None sspicli.SspiEncodeAuthIdentityAsStringsW(_In_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE pAuthIdentity,_Out_ PCWSTR *ppszUserName,_Out_ PCWSTR *ppszDomainName,_Out_ PCWSTR *ppszPackedCredentialsString)
SECURITY_STATUS None sspicli.SspiEncodeAuthIdentityAsStringsA(_In_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE pAuthIdentity,_Out_ PCWSTR *ppszUserName,_Out_ PCWSTR *ppszDomainName,_Out_ PCWSTR *ppszPackedCredentialsString)
HRESULT None certenc.GetStringType([out] LONG *pStringType)
BOOL WINAPI advapi32.SetPrivateObjectSecurityEx(_In_ SECURITY_INFORMATION SecurityInformation,_In_ PSECURITY_DESCRIPTOR ModificationDescriptor,_Inout_ PSECURITY_DESCRIPTOR *ObjectsSecurityDescriptor,_In_ ULONG AutoInheritFlags,_In_ PGENERIC_MAPPING GenericMapping,_In_opt_ HANDLE Token)
BOOL None kernel32.IsValidLanguageGroup(_In_ LGRPID LanguageGroup,_In_ DWORD dwFlags)
HRESULT None shell32.SHSetUnreadMailCount(_In_ LPCTSTR pszMailAddress,DWORD dwCount None,_In_ LPCTSTR pszShellExecuteCommand)
HRESULT None shell32.SHSetUnreadMailCountW(_In_ LPCTSTR pszMailAddress,DWORD dwCount None,_In_ LPCTSTR pszShellExecuteCommand)
BOOL WINAPI user32.AllowSetForegroundWindow(_In_ DWORD dwProcessId)
PTSTR None shlwapi.StrStr(_In_ PTSTR pszFirst,_In_ PCTSTR pszSrch)
PTSTR None shlwapi.StrStrW(_In_ PTSTR pszFirst,_In_ PCTSTR pszSrch)
PTSTR None shlwapi.StrStrA(_In_ PTSTR pszFirst,_In_ PCTSTR pszSrch)
BOOL WINAPI kernel32.SetProcessMitigationPolicy(_In_ PROCESS_MITIGATION_POLICY MitigationPolicy,_In_ PVOID lpBuffer,_In_ SIZE_T dwLength)
DWORD None iphlpapi.DeleteIpForwardEntry(_In_ PMIB_IPFORWARDROW pRoute)
BOOL None shlwapi.SHFreeShared(_In_ HANDLE hData,_In_ DWORD dwProcessId)
NTSTATUS WINAPI bcrypt.BCryptDecrypt(_Inout_ BCRYPT_KEY_HANDLE hKey,_In_ PUCHAR pbInput,_In_ ULONG cbInput,_In_opt_ VOID *pPaddingInfo,_Inout_opt_ PUCHAR pbIV,_In_ ULONG cbIV,_Out_opt_ PUCHAR pbOutput,_In_ ULONG cbOutput,_Out_ ULONG *pcbResult,_In_ ULONG dwFlags)
BOOL WINAPI advapi32.ObjectDeleteAuditAlarm(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ BOOL GenerateOnClose)
BOOL WINAPI advapi32.ObjectDeleteAuditAlarmW(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ BOOL GenerateOnClose)
BOOL WINAPI advapi32.ObjectDeleteAuditAlarmA(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ BOOL GenerateOnClose)
HRESULT None oleaut32.VarBstrFromCy(_In_ CY cyIn,_In_ LCID lcid,_In_ ULONG dwFlags,_Out_ BSTR *pbstrOut)
BOOL WINAPI kernel32.BindIoCompletionCallback(_In_ HANDLE FileHandle,_In_ LPOVERLAPPED_COMPLETION_ROUTINE Function,_In_ ULONG Flags)
BOOL None None.TreeView_DeleteAllItems(HWND hwndTV None)
BOOL WINAPI kernel32.DeleteFileTransacted(_In_ LPCTSTR lpFileName,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.DeleteFileTransactedW(_In_ LPCTSTR lpFileName,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.DeleteFileTransactedA(_In_ LPCTSTR lpFileName,_In_ HANDLE hTransaction)
DWORD WINAPI fwpuclnt.FwpmLayerEnum0(_In_ HANDLE engineHandle,_In_ HANDLE enumHandle,_In_ UINT32 numEntriesRequested,_Out_ FWPM_LAYER0 ***entries,_Out_ UINT32 *numEntriesReturned)
DWORD None None.NPEnumResource(_In_ HANDLE hEnum,_Inout_ LPDWORD lpcCount,_Out_ LPVOID lpBuffer,_Inout_ LPDWORD lpBufferSize)
HANDLE WINAPI kernel32.FindFirstFileNameW(_In_ LPCWSTR lpFileName,_In_ DWORD dwFlags,_Inout_ LPDWORD StringLength,_Inout_ PWCHAR LinkName)
UINT None shell32.SHReplaceFromPropSheetExtArray(_In_ HPSXA hpsxa,UINT uPageID None,_In_ LPFNADDPROPSHEETPAGE lpfnReplaceWith,LPARAM lParam None)
PDH_STATUS None pdh.PdhAddCounter(_In_ PDH_HQUERY hQuery,_In_ LPCTSTR szFullCounterPath,_In_ DWORD_PTR dwUserData,_Out_ PDH_HCOUNTER *phCounter)
PDH_STATUS None pdh.PdhAddCounterW(_In_ PDH_HQUERY hQuery,_In_ LPCTSTR szFullCounterPath,_In_ DWORD_PTR dwUserData,_Out_ PDH_HCOUNTER *phCounter)
PDH_STATUS None pdh.PdhAddCounterA(_In_ PDH_HQUERY hQuery,_In_ LPCTSTR szFullCounterPath,_In_ DWORD_PTR dwUserData,_Out_ PDH_HCOUNTER *phCounter)
LONG WINAPI winscard.SCardGetCardTypeProviderName(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCardName,_In_ DWORD dwProviderId,_Out_ LPTSTR szProvider,_Inout_ LPDWORD pcchProvider)
LONG WINAPI winscard.SCardGetCardTypeProviderNameW(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCardName,_In_ DWORD dwProviderId,_Out_ LPTSTR szProvider,_Inout_ LPDWORD pcchProvider)
LONG WINAPI winscard.SCardGetCardTypeProviderNameA(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCardName,_In_ DWORD dwProviderId,_Out_ LPTSTR szProvider,_Inout_ LPDWORD pcchProvider)
DWORD WINAPI kernel32.FormatMessage(_In_ DWORD dwFlags,_In_opt_ LPCVOID lpSource,_In_ DWORD dwMessageId,_In_ DWORD dwLanguageId,_Out_ LPTSTR lpBuffer,_In_ DWORD nSize,_In_opt_ va_list *Arguments)
DWORD WINAPI kernel32.FormatMessageW(_In_ DWORD dwFlags,_In_opt_ LPCVOID lpSource,_In_ DWORD dwMessageId,_In_ DWORD dwLanguageId,_Out_ LPTSTR lpBuffer,_In_ DWORD nSize,_In_opt_ va_list *Arguments)
DWORD WINAPI kernel32.FormatMessageA(_In_ DWORD dwFlags,_In_opt_ LPCVOID lpSource,_In_ DWORD dwMessageId,_In_ DWORD dwLanguageId,_Out_ LPTSTR lpBuffer,_In_ DWORD nSize,_In_opt_ va_list *Arguments)
PVOID WINAPI api-ms-win-core-memory-l1-1-5.MapViewOfFileNuma2(_In_ HANDLE FileMappingHandle,_In_ HANDLE ProcessHandle,_In_ ULONG64 Offset,_In_opt_ PVOID BaseAddress,_In_ SIZE_T ViewSize,_In_ ULONG AllocationType,_In_ ULONG PageProtection,_In_ ULONG PreferredNode)
BOOL WINAPI advapi32.ConvertToAutoInheritPrivateObjectSecurity(_In_opt_ PSECURITY_DESCRIPTOR ParentDescriptor,_In_ PSECURITY_DESCRIPTOR CurrentSecurityDescriptor,_Out_ PSECURITY_DESCRIPTOR *NewSecurityDescriptor,_In_opt_ GUID *ObjectType,_In_ BOOLEAN IsDirectoryObject,_In_ PGENERIC_MAPPING GenericMapping)
PIDLIST_RELATIVE None shell32.ILClone(_In_ PCUIDLIST_RELATIVE pidl)
BOOL WINAPI advapi32.AddAccessDeniedAceEx(_Inout_ PACL pAcl,_In_ DWORD dwAceRevision,_In_ DWORD AceFlags,_In_ DWORD AccessMask,_In_ PSID pSid)
HRESULT None oleaut32.VarBoolFromCy(_In_ CY cyIn,_Out_ VARIANT_BOOL *pboolOut)
PIDLIST_ABSOLUTE None shell32.ILCreateFromPath(_In_ PCTSTR pszPath)
PIDLIST_ABSOLUTE None shell32.ILCreateFromPathW(_In_ PCTSTR pszPath)
PIDLIST_ABSOLUTE None shell32.ILCreateFromPathA(_In_ PCTSTR pszPath)
COLORREF None None.TreeView_GetTextColor(HWND hwndTV None)
BOOL WINAPI kernel32.ReadFile(_In_ HANDLE hFile,_Out_ LPVOID lpBuffer,_In_ DWORD nNumberOfBytesToRead,_Out_opt_ LPDWORD lpNumberOfBytesRead,_Inout_opt_ LPOVERLAPPED lpOverlapped)
BOOL WINAPI advapi32.InitializeSid(_Out_ PSID Sid,_In_ PSID_IDENTIFIER_AUTHORITY pIdentifierAuthority,_In_ BYTE nSubAuthorityCount)
NTSTATUS WINAPI bcrypt.BCryptGenRandom(_Inout_ BCRYPT_ALG_HANDLE hAlgorithm,_Inout_ PUCHAR pbBuffer,_In_ ULONG cbBuffer,_In_ ULONG dwFlags)
NETIO_STATUS WINAPI iphlpapi.ConvertInterfaceIndexToLuid(_In_ NET_IFINDEX InterfaceIndex,_Out_ PNET_LUID InterfaceLuid)
LPVOID WINAPI kernel32.LocalLock(_In_ HLOCAL hMem)
HMODULE WINAPI kernel32.LoadLibrary(_In_ LPCTSTR lpFileName)
HMODULE WINAPI kernel32.LoadLibraryW(_In_ LPCTSTR lpFileName)
HMODULE WINAPI kernel32.LoadLibraryA(_In_ LPCTSTR lpFileName)
NETIOAPI_API None iphlpapi.GetAnycastIpAddressEntry(_Inout_ PMIB_ANYCASTIPADDRESS_ROW Row)
DWORD None iphlpapi.GetUdpStatisticsEx2(_Out_ PMIB_UDPSTATS2 Statistics,_In_ ULONG Family)
BOOL WINAPI kernel32.CreateHardLink(_In_ LPCTSTR lpFileName,_In_ LPCTSTR lpExistingFileName,_Reserved_ LPSECURITY_ATTRIBUTES lpSecurityAttributes)
BOOL WINAPI kernel32.CreateHardLinkW(_In_ LPCTSTR lpFileName,_In_ LPCTSTR lpExistingFileName,_Reserved_ LPSECURITY_ATTRIBUTES lpSecurityAttributes)
BOOL WINAPI kernel32.CreateHardLinkA(_In_ LPCTSTR lpFileName,_In_ LPCTSTR lpExistingFileName,_Reserved_ LPSECURITY_ATTRIBUTES lpSecurityAttributes)
DWORD WINAPI user32.GetWindowThreadProcessId(_In_ HWND hWnd,_Out_opt_ LPDWORD lpdwProcessId)
HRESULT WINAPI userenv.DeriveAppContainerSidFromAppContainerName(_In_ PCWSTR pszAppContainerName,_Out_ PSID *ppsidAppContainerSid)
VOID WINAPI kernel32.CloseThreadpoolTimer(_Inout_ PTP_TIMER pti)
ULONG WINAPI iphlpapi.ResolveNeighbor(_In_ SOCKADDR *NetworkAddress,_Out_ PVOID PhysicalAddress,_Inout_ PULONG PhysicalAddressLength)
HRESULT WINAPI kernel32.SetThreadDescription(_In_ HANDLE hThread,_In_ PCWSTR lpThreadDescription)
BOOL WINAPI kernel32.WriteFile(_In_ HANDLE hFile,_In_ LPCVOID lpBuffer,_In_ DWORD nNumberOfBytesToWrite,_Out_opt_ LPDWORD lpNumberOfBytesWritten,_Inout_opt_ LPOVERLAPPED lpOverlapped)
BOOL None ole32.IsEqualGUID(_In_ REFGUID rguid1,_In_ REFGUID rguid2)
HRESULT None oleaut32.VarBoolFromR8(_In_ DOUBLE dblIn,_Out_ VARIANT_BOOL *pboolOut)
HLOCAL WINAPI kernel32.LocalAlloc(_In_ UINT uFlags,_In_ SIZE_T uBytes)
HRESULT None ole32.StgCreatePropSetStg(_In_ IStorage *pStorage,DWORD dwReserved None,_Out_ IPropertySetStorage **ppPropSetStg)
WINOLEAPI None ole32.StgOpenAsyncDocfileOnIFillLockBytes(_In_ IFillLockBytes *ppflb,_In_ DWORD grfmode,_In_ DWORD asyncFlags,_Out_ IStorage **ppstgOpen)
NTSTATUS None None.LsaApCallPackageUntrusted(_In_ PLSA_CLIENT_REQUEST ClientRequest,_In_ PVOID ProtocolSubmitBuffer,_In_ PVOID ClientBufferBase,_In_ ULONG SubmitBufferLength,_Out_ PVOID *ProtocolReturnBuffer,_Out_ PULONG ReturnBufferLength,_Out_ PNTSTATUS ProtocolStatus)
LRESULT None shlwapi.SHSendMessageBroadcast(_In_ UINT uMsg,_In_ WPARAM wParam,_In_ LPARAM lParam)
LRESULT None shlwapi.SHSendMessageBroadcastW(_In_ UINT uMsg,_In_ WPARAM wParam,_In_ LPARAM lParam)
LRESULT None shlwapi.SHSendMessageBroadcastA(_In_ UINT uMsg,_In_ WPARAM wParam,_In_ LPARAM lParam)
BOOL WINAPI kernel32.IsBadCodePtr(_In_ FARPROC lpfn)
DWORD WINAPI fwpuclnt.FwpmFilterDestroyEnumHandle0(_In_ HANDLE engineHandle,_In_ HANDLE enumHandle)
HWND None None.GetContractDelegateWindow(_In_ HWND hwndSource)
TRUSTEE_FORM WINAPI advapi32.GetTrusteeForm(_In_ PTRUSTEE pTrustee)
TRUSTEE_FORM WINAPI advapi32.GetTrusteeFormW(_In_ PTRUSTEE pTrustee)
TRUSTEE_FORM WINAPI advapi32.GetTrusteeFormA(_In_ PTRUSTEE pTrustee)
BOOL WINAPI user32.SetWindowText(_In_ HWND hWnd,_In_opt_ LPCTSTR lpString)
BOOL WINAPI user32.SetWindowTextW(_In_ HWND hWnd,_In_opt_ LPCTSTR lpString)
BOOL WINAPI user32.SetWindowTextA(_In_ HWND hWnd,_In_opt_ LPCTSTR lpString)
NTSTATUS NTAPI None.CrediReadDomainCredentials(_In_ PLUID LogonId,_In_ ULONG CredFlags,_In_ PCREDENTIAL_TARGET_INFORMATIONW TargetInfo,ULONG Flags None,PULONG Count None,_Out_ PENCRYPTED_CREDENTIALW **Credential)
HRESULT None oleaut32.VarBoolFromUI2(_In_ USHORT uiIn,_Out_ VARIANT_BOOL *pboolOut)
HRESULT None oleaut32.VarI4FromUI2(_In_ USHORT uiIn,_Out_ LONG *plOut)
SIZE_T WINAPI kernel32.VirtualQuery(_In_opt_ LPCVOID lpAddress,_Out_ PMEMORY_BASIC_INFORMATION lpBuffer,_In_ SIZE_T dwLength)
LCID None kernel32.ConvertDefaultLocale(_In_ LCID Locale)
HWND WINAPI user32.GetTopWindow(_In_opt_ HWND hWnd)
BOOL WINAPI kernel32.GetFileInformationByHandleEx(_In_ HANDLE hFile,_In_ FILE_INFO_BY_HANDLE_CLASS FileInformationClass,_Out_ LPVOID lpFileInformation,_In_ DWORD dwBufferSize)
LRESULT None None.TreeView_SetHot(HWND hwndTV None,HTREEITEM hitem None)
HTREEITEM None None.TreeView_GetNextSelected(HWND hwnd None,HTREEITEM *hitem None)
BOOL WINAPI user32.AdjustWindowRect(_Inout_ LPRECT lpRect,_In_ DWORD dwStyle,_In_ BOOL bMenu)
BOOL WINAPI advapi32.AddAccessDeniedAce(_Inout_ PACL pAcl,_In_ DWORD dwAceRevision,_In_ DWORD AccessMask,_In_ PSID pSid)
HRESULT None shell32.SHGetKnownFolderIDList(_In_ REFKNOWNFOLDERID rfid,_In_ DWORD dwFlags,_In_ HANDLE hToken,_Out_ PIDLIST_ABSOLUTE *ppidl)
BOOL None kernel32.EnumSystemLocalesEx(_In_ LOCALE_ENUMPROCEX lpLocaleEnumProcEx,_In_ DWORD dwFlags,_In_ LPARAM lParam,_In_opt_ LPVOID lpReserved)
HRESULT None ole32.CLSIDFromString(_In_ LPCOLESTR lpsz,_Out_ LPCLSID pclsid)
HRESULT None None.MyFunction([in] short count)
DWORD WINAPI kernel32.GetProcessVersion(_In_ DWORD ProcessId)
BOOL CALLBACK None.EnumLocalesProcEx(_In_ LPWSTR lpLocaleString,_In_ DWORD dwFlags,_In_ LPARAM lParam)
HRESULT None oleaut32.VarUI1FromStr(_In_ LPCOLESTR strIn,_In_ LCID lcid,_In_ ULONG dwFlags,_Out_ BYTE *pbOut)
BOOL WINAPI advapi32.AdjustTokenPrivileges(_In_ HANDLE TokenHandle,_In_ BOOL DisableAllPrivileges,_In_opt_ PTOKEN_PRIVILEGES NewState,_In_ DWORD BufferLength,_Out_opt_ PTOKEN_PRIVILEGES PreviousState,_Out_opt_ PDWORD ReturnLength)
BOOL WINAPI kernel32.CreateUmsThreadContext(_Out_ PUMS_CONTEXT *lpUmsThread)
HRESULT None certcli.GetRequestIdString([out None None,retval] BSTR *pstrRequestId)
NTSTATUS WINAPI certpoleng.PstGetCertificates(_In_ PUNICODE_STRING pTargetName,_In_ DWORD cCriteria,_In_opt_ PCCERT_SELECT_CRITERIA rgpCriteria,_In_ BOOL bIsClient,_Out_ PDWORD pdwCertChainContextCount,_Out_ PCCERT_CHAIN_CONTEXT **ppCertChainContexts)
NTSTATUS None None.LsaApLogonUser(_In_ PLSA_CLIENT_REQUEST ClientRequest,_In_ SECURITY_LOGON_TYPE LogonType,_In_ PVOID AuthenticationInformation,_In_ PVOID ClientAuthenticationBase,_In_ ULONG AuthenticationInformationLength,_Out_ PVOID *ProfileBuffer,_Out_ PULONG ProfileBufferLength,_Out_ PLUID LogonId,_Out_ PNTSTATUS SubStatus,_Out_ PLSA_TOKEN_INFORMATION_TYPE TokenInformationType,_Out_ PVOID *TokenInformation,_Out_ PLSA_UNICODE_STRING *AccountName,_Out_ PLSA_UNICODE_STRING *AuthenticatingAuthority)
NTSTATUS NTAPI None.CrediFreeCredentials(_In_ ULONG Count,_Inout_ PENCRYPTED_CREDENTIALW *Credentials)
HRESULT None ole32.CreateObjrefMoniker(_In_opt_ LPUNKNOWN punk,_Out_ LPMONIKER *ppmk)
BOOL WINAPI advapi32.SaferIdentifyLevel(_In_ DWORD dwNumProperties,_In_opt_ PSAFER_CODE_PROPERTIES pCodeProperties,_Out_ SAFER_LEVEL_HANDLE *pLevelHandle,_Reserved_ LPVOID lpReserved)
HANDLE WINAPI kernel32.CreateJobObject(_In_opt_ LPSECURITY_ATTRIBUTES lpJobAttributes,_In_opt_ LPCTSTR lpName)
HANDLE WINAPI kernel32.CreateJobObjectW(_In_opt_ LPSECURITY_ATTRIBUTES lpJobAttributes,_In_opt_ LPCTSTR lpName)
HANDLE WINAPI kernel32.CreateJobObjectA(_In_opt_ LPSECURITY_ATTRIBUTES lpJobAttributes,_In_opt_ LPCTSTR lpName)
BOOL None mswsock.RIOReceive(_In_ RIO_RQ SocketQueue,_In_ PRIO_BUF pData,_In_ ULONG DataBufferCount,_In_ DWORD Flags,_In_ PVOID RequestContext)
BOOL WINAPI user32.IsZoomed(_In_ HWND hWnd)
BOOL WINAPI kernel32.InitializeCriticalSectionEx(_Out_ LPCRITICAL_SECTION lpCriticalSection,_In_ DWORD dwSpinCount,_In_ DWORD Flags)
BOOL None shell32.SHGetPathFromIDList(_In_ PCIDLIST_ABSOLUTE pidl,_Out_ LPTSTR pszPath)
BOOL None shell32.SHGetPathFromIDListW(_In_ PCIDLIST_ABSOLUTE pidl,_Out_ LPTSTR pszPath)
BOOL None shell32.SHGetPathFromIDListA(_In_ PCIDLIST_ABSOLUTE pidl,_Out_ LPTSTR pszPath)
BOOL None shlwapi.IsCharSpace(_In_ TCHAR wch)
BOOL None shlwapi.IsCharSpaceW(_In_ TCHAR wch)
BOOL None shlwapi.IsCharSpaceA(_In_ TCHAR wch)
BOOLEAN WINAPI advapi32.AuditSetGlobalSacl(_In_ PCWSTR ObjectTypeName,_In_opt_ PACL Acl)
BOOLEAN WINAPI advapi32.AuditSetGlobalSaclW(_In_ PCWSTR ObjectTypeName,_In_opt_ PACL Acl)
BOOLEAN WINAPI advapi32.AuditSetGlobalSaclA(_In_ PCWSTR ObjectTypeName,_In_opt_ PACL Acl)
DWORD WINAPI advapi32.FreeInheritedFromArray(_In_ PINHERITED_FROM pInheritArray,_In_ USHORT AceCnt,_In_opt_ PFN_OBJECT_MGR_FUNCTS pfnArray)
DWORD None None.NPGetDirectoryType(_In_ LPTSTR lpName,_In_ LPINT lpType,_In_ BOOL bFlushCache)
HWND WINAPI user32.GetParent(_In_ HWND hWnd)
HRESULT None oleaut32.VarBoolFromStr(_In_ LPCOLESTR strIn,_In_ LCID lcid,_In_ ULONG dwFlags,_Out_ VARIANT_BOOL *pboolOut)
BOOL WINAPI avrt.AvSetMmThreadPriority(_In_ HANDLE AvrtHandle,_In_ AVRT_PRIORITY Priority)
INT None mswsock.EnumProtocols(_In_opt_ LPINT lpiProtocols,_Out_ LPVOID lpProtocolBuffer,_Inout_ LPDWORD lpdwBufferLength)
INT None mswsock.EnumProtocolsW(_In_opt_ LPINT lpiProtocols,_Out_ LPVOID lpProtocolBuffer,_Inout_ LPDWORD lpdwBufferLength)
INT None mswsock.EnumProtocolsA(_In_opt_ LPINT lpiProtocols,_Out_ LPVOID lpProtocolBuffer,_Inout_ LPDWORD lpdwBufferLength)
COLORREF None None.TreeView_SetLineColor(HWND hwndTV None,COLORREF clrLine None)
void None None.MyProcedure_notify(void None None)
BOOL WINAPI advapi32.OpenThreadToken(_In_ HANDLE ThreadHandle,_In_ DWORD DesiredAccess,_In_ BOOL OpenAsSelf,_Out_ PHANDLE TokenHandle)
WINOLEAPI None ole32.ReadClassStm(_In_ IStream *pStm,_Out_ CLSID *pclsid)
HRESULT None shlwapi.StrFormatByteSizeEx(ULONGLONG ull None,SFBS_FLAGS flags None,_Out_ PWSTR pszBuf,UINT cchBuf None)
HRESULT None ole32.CoEnableCallCancellation(_In_opt_ LPVOID pReserved)
BOOLEAN WINAPI kernel32.CreateSymbolicLinkTransacted(_In_ LPTSTR lpSymlinkFileName,_In_ LPTSTR lpTargetFileName,_In_ DWORD dwFlags,_In_ HANDLE hTransaction)
BOOLEAN WINAPI kernel32.CreateSymbolicLinkTransactedW(_In_ LPTSTR lpSymlinkFileName,_In_ LPTSTR lpTargetFileName,_In_ DWORD dwFlags,_In_ HANDLE hTransaction)
BOOLEAN WINAPI kernel32.CreateSymbolicLinkTransactedA(_In_ LPTSTR lpSymlinkFileName,_In_ LPTSTR lpTargetFileName,_In_ DWORD dwFlags,_In_ HANDLE hTransaction)
HWND WINAPI user32.WindowFromPoint(_In_ POINT Point)
BOOL WINAPI kernel32.TerminateJobObject(_In_ HANDLE hJob,_In_ UINT uExitCode)
BOOL CALLBACK None.EnumTimeFormatsProcEx(_In_ LPWSTR lpTimeFormatString,_In_ LPARAM lParam)
DWORD None iphlpapi.GetPerAdapterInfo(_In_ ULONG IfIndex,_Out_ PIP_PER_ADAPTER_INFO pPerAdapterInfo,_In_ PULONG pOutBufLen)
BOOL WINAPI kernel32.NotifyUILanguageChange(_In_ DWORD dwFlags,_In_opt_ PCWSTR pcwstrNewLanguage,_In_opt_ PCWSTR pcwstrPreviousLanguage,_In_ DWORD dwReserved,_Out_opt_ PDWORD pdwStatusRtrn)
HRESULT None ole32.CoGetPSClsid(_In_ REFIID riid,_Out_ CLSID *pClsid)
HANDLE WINAPI kernel32.CreateFileMapping(_In_ HANDLE hFile,_In_opt_ LPSECURITY_ATTRIBUTES lpAttributes,_In_ DWORD flProtect,_In_ DWORD dwMaximumSizeHigh,_In_ DWORD dwMaximumSizeLow,_In_opt_ LPCTSTR lpName)
HANDLE WINAPI kernel32.CreateFileMappingW(_In_ HANDLE hFile,_In_opt_ LPSECURITY_ATTRIBUTES lpAttributes,_In_ DWORD flProtect,_In_ DWORD dwMaximumSizeHigh,_In_ DWORD dwMaximumSizeLow,_In_opt_ LPCTSTR lpName)
HANDLE WINAPI kernel32.CreateFileMappingA(_In_ HANDLE hFile,_In_opt_ LPSECURITY_ATTRIBUTES lpAttributes,_In_ DWORD flProtect,_In_ DWORD dwMaximumSizeHigh,_In_ DWORD dwMaximumSizeLow,_In_opt_ LPCTSTR lpName)
BOOL WINAPI user32.SetProcessDefaultLayout(_In_ DWORD dwDefaultLayout)
NETIOAPI_API None iphlpapi.NotifyRouteChange2(_In_ ADDRESS_FAMILY Family,_In_ PIPFORWARD_CHANGE_CALLBACK Callback,_In_ PVOID CallerContext,_In_ BOOLEAN InitialNotification,_Inout_ HANDLE *NotificationHandle)
BOOL WINAPI kernel32.QueryMemoryResourceNotification(_In_ HANDLE ResourceNotificationHandle,_Out_ PBOOL ResourceState)
HRESULT None ole32.CLSIDFromProgIDEx(_In_ LPCOLESTR lpszProgID,_Out_ LPCLSID lpclsid)
BOOL WINAPI kernel32.PrefetchVirtualMemory(_In_ HANDLE hProcess,_In_ ULONG_PTR NumberOfEntries,_In_ PWIN32_MEMORY_RANGE_ENTRY VirtualAddresses,_In_ ULONG Flags)
HANDLE WINAPI kernel32.OpenWaitableTimer(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpTimerName)
HANDLE WINAPI kernel32.OpenWaitableTimerW(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpTimerName)
HANDLE WINAPI kernel32.OpenWaitableTimerA(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpTimerName)
HTREEITEM None None.TreeView_MapAccIDToHTREEITEM(HWND hwnd None,UINT id None)
HRESULT None oleaut32.VarI2FromUI1(_In_ BYTE bIn,_Out_ SHORT *psOut)
HGLOBAL WINAPI kernel32.GlobalFree(_In_ HGLOBAL hMem)
BOOL WINAPI user32.UpdateLayeredWindow(_In_ HWND hwnd,_In_opt_ HDC hdcDst,_In_opt_ POINT *pptDst,_In_opt_ SIZE *psize,_In_opt_ HDC hdcSrc,_In_opt_ POINT *pptSrc,_In_ COLORREF crKey,_In_opt_ BLENDFUNCTION *pblend,_In_ DWORD dwFlags)
DWORD WINAPI advapi32.BuildSecurityDescriptor(_In_opt_ PTRUSTEE pOwner,_In_opt_ PTRUSTEE pGroup,_In_ ULONG cCountOfAccessEntries,_In_opt_ PEXPLICIT_ACCESS pListOfAccessEntries,_In_ ULONG cCountOfAuditEntries,_In_opt_ PEXPLICIT_ACCESS pListOfAuditEntries,_In_opt_ PSECURITY_DESCRIPTOR pOldSD,_Out_ PULONG pSizeNewSD,_Out_ PSECURITY_DESCRIPTOR *pNewSD)
DWORD WINAPI advapi32.BuildSecurityDescriptorW(_In_opt_ PTRUSTEE pOwner,_In_opt_ PTRUSTEE pGroup,_In_ ULONG cCountOfAccessEntries,_In_opt_ PEXPLICIT_ACCESS pListOfAccessEntries,_In_ ULONG cCountOfAuditEntries,_In_opt_ PEXPLICIT_ACCESS pListOfAuditEntries,_In_opt_ PSECURITY_DESCRIPTOR pOldSD,_Out_ PULONG pSizeNewSD,_Out_ PSECURITY_DESCRIPTOR *pNewSD)
DWORD WINAPI advapi32.BuildSecurityDescriptorA(_In_opt_ PTRUSTEE pOwner,_In_opt_ PTRUSTEE pGroup,_In_ ULONG cCountOfAccessEntries,_In_opt_ PEXPLICIT_ACCESS pListOfAccessEntries,_In_ ULONG cCountOfAuditEntries,_In_opt_ PEXPLICIT_ACCESS pListOfAuditEntries,_In_opt_ PSECURITY_DESCRIPTOR pOldSD,_Out_ PULONG pSizeNewSD,_Out_ PSECURITY_DESCRIPTOR *pNewSD)
HRESULT None shell32.SHGetIDListFromObject(_In_ IUnknown *punk,_Out_ PIDLIST_ABSOLUTE *ppidl)
BOOL None kernel32.EnumSystemLocales(_In_ LOCALE_ENUMPROC lpLocaleEnumProc,_In_ DWORD dwFlags)
BOOL None kernel32.EnumSystemLocalesW(_In_ LOCALE_ENUMPROC lpLocaleEnumProc,_In_ DWORD dwFlags)
BOOL None kernel32.EnumSystemLocalesA(_In_ LOCALE_ENUMPROC lpLocaleEnumProc,_In_ DWORD dwFlags)
HRESULT WINAPI wofutil.WofEnumEntries(_In_ PCWSTR VolumeName,_In_ ULONG Provider,_In_ WofEnumEntryProc EnumProc,_In_opt_ PVOID UserData)
BOOL WINAPI advapi32.SetPrivateObjectSecurity(_In_ SECURITY_INFORMATION SecurityInformation,_In_ PSECURITY_DESCRIPTOR ModificationDescriptor,_Inout_ PSECURITY_DESCRIPTOR *ObjectsSecurityDescriptor,_In_ PGENERIC_MAPPING GenericMapping,_In_opt_ HANDLE Token)
HTREEITEM None None.TreeView_GetRoot(HWND hwndTV None)
BOOL WINAPI kernel32.GetProcessTimes(_In_ HANDLE hProcess,_Out_ LPFILETIME lpCreationTime,_Out_ LPFILETIME lpExitTime,_Out_ LPFILETIME lpKernelTime,_Out_ LPFILETIME lpUserTime)
BOOL None kernel32.AdjustCalendarDate(_Inout_ LPCALDATETIME lpCalDateTime,_In_ CALDATETIME_DATEUNIT calUnit,_Out_ INT amount)
HRESULT None shell32.SetCurrentProcessExplicitAppUserModelID(_In_ PCWSTR AppID)
BOOL WINAPI advapi32.IsValidSecurityDescriptor(_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor)
HRESULT None None.Proc3([in] short Arr[MAX_SIZE])
DWORD None None.NPGetUniversalName(_In_ LPCTSTR lpLocalPath,_In_ DWORD dwInfoLevel,_Out_ LPVOID lpBuffer,_Inout_ LPDWORD lpBufferSize)
BOOL WINAPI kernel32.FlsSetValue(_In_ DWORD dwFlsIndex,_In_opt_ PVOID lpFlsData)
BOOL WINAPI avrt.AvQuerySystemResponsiveness(_In_ HANDLE AvrtHandle,_Out_ PULONG SystemResponsivenessValue)
BOOL None advapi32.ConvertSidToStringSid(_In_ PSID Sid,_Out_ LPTSTR *StringSid)
BOOL None advapi32.ConvertSidToStringSidW(_In_ PSID Sid,_Out_ LPTSTR *StringSid)
BOOL None advapi32.ConvertSidToStringSidA(_In_ PSID Sid,_Out_ LPTSTR *StringSid)
BOOL None None.TreeView_GetItemPartRect(HWND hwnd None,HTREEITEM hitem None,RECT *prc None,TVITEMPART *partid None)
BOOL None None.TreeView_SelectItem(HWND hwndTV None,HTREEITEM hitem None)
COLOREF None None.TreeView_GetLineColor(HWND hwndTV None)
BOOL None None.WlxNegotiate(_In_ DWORD dwWinLogonVersion,_Out_ PDWORD pdwDllVersion)
INT None ws2_32.WSAGetServiceClassNameByClassId(_In_ LPGUID lpServiceClassId,_Out_ LPTSTR lpszServiceClassName,_Inout_ LPDWORD lpdwBufferLength)
INT None ws2_32.WSAGetServiceClassNameByClassIdW(_In_ LPGUID lpServiceClassId,_Out_ LPTSTR lpszServiceClassName,_Inout_ LPDWORD lpdwBufferLength)
INT None ws2_32.WSAGetServiceClassNameByClassIdA(_In_ LPGUID lpServiceClassId,_Out_ LPTSTR lpszServiceClassName,_Inout_ LPDWORD lpdwBufferLength)
DWORD None iphlpapi.GetIcmpStatistics(_Out_ PMIB_ICMP pStats)
PIDLIST_ABSOLUTE None shell32.ILCombine(_In_ PCIDLIST_ABSOLUTE pidl1,_In_ PCUIDLIST_RELATIVE pidl2)
SECURITY_STATUS SEC_Entry secur32.MakeSignature(_In_ PCtxtHandle phContext,_In_ ULONG fQOP,_Inout_ PSecBufferDesc pMessage,_In_ ULONG MessageSeqNo)
LRESULT CALLBACK None.WndProc(HWND hWnd None,UINT uMessage None,WPARAM wParam None,LPARAM lParam None)
DWORD None None.NPCancelConnection(_In_ LPTSTR lpName,_In_ BOOL fForce)
BOOL None kernel32.SetThreadpoolStackInformation(_Inout_ PTP_POOL ptpp,_In_ PTP_POOL_STACK_INFORMATION ptpsi)
NTSTATUS NTAPI None.CreateTokenEx(_In_ PLUID LogonId,_In_ PTOKEN_SOURCE TokenSource,_In_ SECURITY_LOGON_TYPE LogonType,_In_ SECURITY_IMPERSONATION_LEVEL ImpersonationLevel,_In_ LSA_TOKEN_INFORMATION_TYPE TokenInformationType,_In_ PVOID TokenInformation,_In_ PTOKEN_GROUPS TokenGroups,_In_ PUNICODE_STRING Workstation,_In_ PUNICODE_STRING ProfilePath,_In_ PVOID SessionInformation,_In_ SECPKG_SESSIONINFO_TYPE SessionInformationType,_Out_ PHANDLE Token,_Out_ PNTSTATUS SubStatus)
INT WSAAPI ws2_32.WSAAddressToString(_In_ LPSOCKADDR lpsaAddress,_In_ DWORD dwAddressLength,_In_opt_ LPWSAPROTOCOL_INFO lpProtocolInfo,_Inout_ LPTSTR lpszAddressString,_Inout_ LPDWORD lpdwAddressStringLength)
INT WSAAPI ws2_32.WSAAddressToStringW(_In_ LPSOCKADDR lpsaAddress,_In_ DWORD dwAddressLength,_In_opt_ LPWSAPROTOCOL_INFO lpProtocolInfo,_Inout_ LPTSTR lpszAddressString,_Inout_ LPDWORD lpdwAddressStringLength)
INT WSAAPI ws2_32.WSAAddressToStringA(_In_ LPSOCKADDR lpsaAddress,_In_ DWORD dwAddressLength,_In_opt_ LPWSAPROTOCOL_INFO lpProtocolInfo,_Inout_ LPTSTR lpszAddressString,_Inout_ LPDWORD lpdwAddressStringLength)
INT None ws2_32.WSARemoveServiceClass(_In_ LPGUID lpServiceClassId)
HRESULT WINAPI dssec.DSCreateISecurityInfoObjectEx(_In_ LPCWSTR pwszObjectPath,_In_ LPCWSTR pwszObjectClass,_In_ LPCWSTR pwszServer,_In_ LPCWSTR pwszUserName,_In_ LPCWSTR pwszPassword,_In_ DWORD dwFlags,_Out_ LPSECURITYINFO *ppSI,_In_opt_ PFNREADOBJECTSECURITY pfnReadSD,_In_opt_ PFNWRITEOBJECTSECURITY pfnWriteSD,_In_ LPARAM lpContext)
HRESULT None oleaut32.VarBstrFromBool(_In_ VARIANT_BOOL boolIn,_In_ LCID lcid,_In_ ULONG dwFlags,_Out_ BSTR *pbstrOut)
BOOL WINAPI kernel32.QueueUserWorkItem(_In_ LPTHREAD_START_ROUTINE Function,_In_opt_ PVOID Context,_In_ ULONG Flags)
VOID None mswsock.RIOCloseCompletionQueue(_In_ RIO_CQ CQ)
BOOL WINAPI advapi32.LookupPrivilegeDisplayName(_In_opt_ LPCTSTR lpSystemName,_In_ LPCTSTR lpName,_Out_opt_ LPTSTR lpDisplayName,_Inout_ LPDWORD cchDisplayName,_Out_ LPDWORD lpLanguageId)
BOOL WINAPI advapi32.LookupPrivilegeDisplayNameW(_In_opt_ LPCTSTR lpSystemName,_In_ LPCTSTR lpName,_Out_opt_ LPTSTR lpDisplayName,_Inout_ LPDWORD cchDisplayName,_Out_ LPDWORD lpLanguageId)
BOOL WINAPI advapi32.LookupPrivilegeDisplayNameA(_In_opt_ LPCTSTR lpSystemName,_In_ LPCTSTR lpName,_Out_opt_ LPTSTR lpDisplayName,_Inout_ LPDWORD cchDisplayName,_Out_ LPDWORD lpLanguageId)
BOOL WINAPI userenv.DestroyEnvironmentBlock(_In_ LPVOID lpEnvironment)
BOOL WINAPI user32.GetWindowDisplayAffinity(_In_ HWND hWnd,_Out_ DWORD *dwAffinity)
BOOL WINAPI kernel32.IsThreadpoolTimerSet(_Inout_ PTP_TIMER pti)
ULONG None mswsock.RIODequeueCompletion(_In_ RIO_CQ CQ,_Out_ PRIORESULT Array,_In_ ULONG ArraySize)
DWORD WINAPI advapi32.ReadEncryptedFileRaw(_In_ PFE_EXPORT_FUNC pfExportCallback,_In_opt_ PVOID pvCallbackContext,_In_ PVOID pvContext)
VOID WINAPI user32.SwitchToThisWindow(_In_ HWND hWnd,_In_ BOOL fAltTab)
DWORD None iphlpapi.GetAdapterIndex(_In_ LPWSTR AdapterName,_Inout_ PULONG IfIndex)
BOOL WINAPI advapi32.GetSecurityDescriptorDacl(_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_Out_ LPBOOL lpbDaclPresent,_Out_ PACL *pDacl,_Out_ LPBOOL lpbDaclDefaulted)
HRESULT None oleaut32.VarR4FromI8(_In_ LONG64 i64In,_Out_ FLOAT *pfltOut)
BOOL WINAPI kernel32.SetThreadpoolTimerEx(_Inout_ PTP_TIMER pti,_In_opt_ PFILETIME pftDueTime,_In_ DWORD msPeriod,_In_opt_ DWORD msWindowLength)
LCID None nlsmap.DownlevelLocaleNameToLCID(_In_ LPWSTR lpName,_In_ DWORD dwFlags)
HRESULT None oleaut32.VarI8FromDate(_In_ DATE dateIn,_Out_ LONG64 *pi64Out)
HRESULT None oleaut32.VarI2FromCy(_In_ CY cyIn,SHORT *psOut None)
HRESULT None oleaut32.VarUI2FromI8(_In_ LONG64 i64In,_Out_ USHORT *puiOut)
HRESULT None oleaut32.VarBstrFromUI4(_In_ ULONG ulIn,_In_ LCID lcid,_In_ ULONG dwFlags,_Out_ BSTR *pbstrOut)
HRESULT None oleaut32.VarUI8FromUI4(_In_ ULONG ulIn,_Out_ ULONG64 *pi64Out)
HRESULT None oleaut32.VarUI1FromUI4(_In_ ULONG ulIn,_Out_ BYTE *pbOut)
SECURITY_STATUS None credui.SspiGetCredUIContext(_In_ HANDLE ContextHandle,_In_ GUID *CredType,_In_ LUID *LogonId,_Out_ PSEC_WINNT_CREDUI_CONTEXT_VECTOR *CredUIContexts,_Out_ HANDLE *TokenHandle)
BOOL WINAPI advapi32.LookupPrivilegeValue(_In_opt_ LPCTSTR lpSystemName,_In_ LPCTSTR lpName,_Out_ PLUID lpLuid)
BOOL WINAPI advapi32.LookupPrivilegeValueW(_In_opt_ LPCTSTR lpSystemName,_In_ LPCTSTR lpName,_Out_ PLUID lpLuid)
BOOL WINAPI advapi32.LookupPrivilegeValueA(_In_opt_ LPCTSTR lpSystemName,_In_ LPCTSTR lpName,_Out_ PLUID lpLuid)
UINT None None.TreeView_GetCount(HWND hwndTV None)
NETIOAPI_API None iphlpapi.GetIpPathTable(_In_ ADDRESS_FAMILY Family,_Out_ PMIB_IPPATH_TABLE *Table)
UINT WINAPI kernel32.GetWindowsDirectory(_Out_ LPTSTR lpBuffer,_In_ UINT uSize)
UINT WINAPI kernel32.GetWindowsDirectoryW(_Out_ LPTSTR lpBuffer,_In_ UINT uSize)
UINT WINAPI kernel32.GetWindowsDirectoryA(_Out_ LPTSTR lpBuffer,_In_ UINT uSize)
BOOL WINAPI kernel32.GetNumaNodeProcessorMask(_In_ UCHAR Node,_Out_ PULONGLONG ProcessorMask)
PDWORD WINAPI advapi32.GetSidSubAuthority(_In_ PSID pSid,_In_ DWORD nSubAuthority)
BOOL WINAPI userenv.UnloadUserProfile(_In_ HANDLE hToken,_In_ HANDLE hProfile)
VOID None iphlpapi.InitializeIpForwardEntry(_Out_ PMIB_IPFORWARD_ROW2 Row)
BOOL WINAPI advapi32.SetSecurityDescriptorDacl(_Inout_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_ BOOL bDaclPresent,_In_opt_ PACL pDacl,_In_ BOOL bDaclDefaulted)
PTSTR None shlwapi.StrDup(PCTSTR pszSrch None)
PTSTR None shlwapi.StrDupW(PCTSTR pszSrch None)
PTSTR None shlwapi.StrDupA(PCTSTR pszSrch None)
HRESULT None oleaut32.VarR8FromUI2(_In_ USHORT uiIn,_Out_ DOUBLE *pdblOut)
HRESULT None oleaut32.VarUI2FromUI8(_In_ ULONG64 i64In,_Out_ USHORT *puiOut)
HRESULT None ole32.CoGetObjectContext(_In_ REFIID riid,_Out_ LPVOID *ppv)
HANDLE WINAPI kernel32.OpenFileMapping(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpName)
HANDLE WINAPI kernel32.OpenFileMappingW(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpName)
HANDLE WINAPI kernel32.OpenFileMappingA(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpName)
u_short WSAAPI ws2_32.htons(_In_ u_short hostshort)
SECURITY_STATUS SEC_Entry secur32.InitializeSecurityContext(_In_opt_ PCredHandle phCredential,_In_opt_ PCtxtHandle phContext,_In_opt_ SEC_CHAR *pszTargetName,_In_ ULONG fContextReq,_In_ ULONG Reserved1,_In_ ULONG TargetDataRep,_In_opt_ PSecBufferDesc pInput,_In_ ULONG Reserved2,_Inout_opt_ PCtxtHandle phNewContext,_Inout_opt_ PSecBufferDesc pOutput,_Out_ PULONG pfContextAttr,_Out_opt_ PTimeStamp ptsExpiry)
SECURITY_STATUS SEC_Entry secur32.InitializeSecurityContextW(_In_opt_ PCredHandle phCredential,_In_opt_ PCtxtHandle phContext,_In_opt_ SEC_CHAR *pszTargetName,_In_ ULONG fContextReq,_In_ ULONG Reserved1,_In_ ULONG TargetDataRep,_In_opt_ PSecBufferDesc pInput,_In_ ULONG Reserved2,_Inout_opt_ PCtxtHandle phNewContext,_Inout_opt_ PSecBufferDesc pOutput,_Out_ PULONG pfContextAttr,_Out_opt_ PTimeStamp ptsExpiry)
SECURITY_STATUS SEC_Entry secur32.InitializeSecurityContextA(_In_opt_ PCredHandle phCredential,_In_opt_ PCtxtHandle phContext,_In_opt_ SEC_CHAR *pszTargetName,_In_ ULONG fContextReq,_In_ ULONG Reserved1,_In_ ULONG TargetDataRep,_In_opt_ PSecBufferDesc pInput,_In_ ULONG Reserved2,_Inout_opt_ PCtxtHandle phNewContext,_Inout_opt_ PSecBufferDesc pOutput,_Out_ PULONG pfContextAttr,_Out_opt_ PTimeStamp ptsExpiry)
BOOL WINAPI advapi32.SetSecurityDescriptorSacl(_Inout_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_ BOOL bSaclPresent,_In_opt_ PACL pSacl,_In_ BOOL bSaclDefaulted)
HRESULT None oleaut32.VarUI4FromR8(_In_ DOUBLE dblIn,_Out_ ULONG *pulOut)
HRESULT None oleaut32.VarDateFromI8(_In_ LONG64 i64In,_Out_ DATE *pdateOut)
SECURITY_STATUS None sspicli.SspiFreeAuthIdentity(_In_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE AuthData)
BOOL WINAPI advapi32.LogonUserExExW(_In_ LPTSTR lpszUsername,_In_opt_ LPTSTR lpszDomain,_In_opt_ LPTSTR lpszPassword,_In_ DWORD dwLogonType,_In_ DWORD dwLogonProvider,_In_opt_ PTOKEN_GROUPS pTokenGroups,_Out_opt_ PHANDLE phToken,_Out_opt_ PSID *ppLogonSid,_Out_opt_ PVOID *ppProfileBuffer,_Out_opt_ LPDWORD pdwProfileLength,_Out_opt_ PQUOTA_LIMITS pQuotaLimits)
BOOL WINAPI advapi32.AddAccessDeniedObjectAce(_Inout_ PACL pAcl,_In_ DWORD dwAceRevision,_In_ DWORD AceFlags,_In_ DWORD AccessMask,_In_opt_ GUID *ObjectTypeGuid,_In_opt_ GUID *InheritedObjectTypeGuid,_In_ PSID pSid)
DWORD WINAPI None.ImportCallback(_In_ PBYTE pbData,_In_opt_ PVOID pvCallbackContext,_Inout_ PULONG ulLength)
HRESULT None oleaut32.VarUI4FromI1(_In_ CHAR cIn,_Out_ ULONG *pulOut)
HRESULT WINAPI wofutil.WofIsExternalFile(_In_ LPCWSTR FilePath,_Out_opt_ PBOOL IsExternalFile,_Out_opt_ PULONG Provider,_Out_opt_ PVOID ExternalFileInfo,_Inout_opt_ PULONG BufferLength)
BOOL WINAPI kernel32.ReadFileScatter(_In_ HANDLE hFile,_In_ FILE_SEGMENT_ELEMENT aSegmentArray[],_In_ DWORD nNumberOfBytesToRead,_Reserved_ LPDWORD lpReserved,_Inout_ LPOVERLAPPED lpOverlapped)
BOOL WINAPI kernel32.MapUserPhysicalPagesScatter(_In_ PVOID *VirtualAddresses,_In_ ULONG_PTR NumberOfPages,_In_ PULONG_PTR PageArray)
INT None mswsock.GetNameByType(_In_ LPGUID lpServiceType,_Out_ LPTSTR lpServiceName,_In_ DWORD dwNameLength)
INT None mswsock.GetNameByTypeW(_In_ LPGUID lpServiceType,_Out_ LPTSTR lpServiceName,_In_ DWORD dwNameLength)
INT None mswsock.GetNameByTypeA(_In_ LPGUID lpServiceType,_Out_ LPTSTR lpServiceName,_In_ DWORD dwNameLength)
VOID CALLBACK None.TimerAPCProc(_In_opt_ LPVOID lpArgToCompletionRoutine,_In_ DWORD dwTimerLowValue,_In_ DWORD dwTimerHighValue)
PCHAR WINAPI iphlpapi.if_indextoname(_In_ NET_IFINDEX InterfaceIndex,_Out_ PCHAR InterfaceName)
BOOL WINAPI advapi32.GetSecurityDescriptorControl(_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_Out_ PSECURITY_DESCRIPTOR_CONTROL pControl,_Out_ LPDWORD lpdwRevision)
DWORD None iphlpapi.GetOwnerModuleFromTcp6Entry(_In_ PMIB_TCP6ROW_OWNER_MODULE pTcpEntry,_In_ TCPIP_OWNER_MODULE_INFO_CLASS Class,_Out_ PVOID Buffer,_Inout_ PDWORD pdwSize)
BOOL WINAPI kernel32.ChangeTimerQueueTimer(_In_opt_ HANDLE TimerQueue,_Inout_ HANDLE Timer,_In_ ULONG DueTime,_In_ ULONG Period)
HRESULT None oleaut32.VarDateFromUI8(_In_ ULONG64 ui64In,_Out_ DATE *pdateOut)
BOOL WINAPI kernel32.CopyFileTransacted(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName,_In_opt_ LPPROGRESS_ROUTINE lpProgressRoutine,_In_opt_ LPVOID lpData,_In_opt_ LPBOOL pbCancel,_In_ DWORD dwCopyFlags,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.CopyFileTransactedW(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName,_In_opt_ LPPROGRESS_ROUTINE lpProgressRoutine,_In_opt_ LPVOID lpData,_In_opt_ LPBOOL pbCancel,_In_ DWORD dwCopyFlags,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.CopyFileTransactedA(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName,_In_opt_ LPPROGRESS_ROUTINE lpProgressRoutine,_In_opt_ LPVOID lpData,_In_opt_ LPBOOL pbCancel,_In_ DWORD dwCopyFlags,_In_ HANDLE hTransaction)
ULONG WINAPI iphlpapi.GetPerTcpConnectionEStats(PMIB_TCPROW Row None,TCP_ESTATS_TYPE EstatsType None,_Out_ PUCHAR Rw,ULONG RwVersion None,ULONG RwSize None,_Out_ PUCHAR Ros,ULONG RosVersion None,ULONG RosSize None,_Out_ PUCHAR Rod,ULONG RodVersion None,ULONG RodSize None)
BOOL WINAPI kernel32.SetUserGeoName(_In_ PWSTR geoName)
LPVOID WINAPI kernel32.VirtualAllocEx(_In_ HANDLE hProcess,_In_opt_ LPVOID lpAddress,_In_ SIZE_T dwSize,_In_ DWORD flAllocationType,_In_ DWORD flProtect)
BOOL None kernel32.IsValidCodePage(_In_ UINT CodePage)
PUIDLIST_RELATIVE None shell32.ILFindChild(_In_ PCIDLIST_ABSOLUTE pidlParent,_In_ PCIDLIST_ABSOLUTE pidlChild)
HRESULT None ole32.OleSetAutoConvert(_In_ REFCLSID clsidOld,_In_ REFCLSID clsidNew)
HRESULT None shlwapi.SHCreateStreamOnFile(_In_ LPCTSTR pszFile,_In_ DWORD grfMode,_Out_ IStream **ppstm)
HRESULT None shlwapi.SHCreateStreamOnFileW(_In_ LPCTSTR pszFile,_In_ DWORD grfMode,_Out_ IStream **ppstm)
HRESULT None shlwapi.SHCreateStreamOnFileA(_In_ LPCTSTR pszFile,_In_ DWORD grfMode,_Out_ IStream **ppstm)
HRESULT None oleaut32.VarI1FromDisp(_In_ IDispatch *pdispIn,_In_ LCID lcid,_Out_ CHAR *pcOut)
NET_IFINDEX WINAPI iphlpapi.if_nametoindex(_In_ PCSTR InterfaceName)
BOOL WINAPI userenv.GetDefaultUserProfileDirectory(_Out_opt_ LPTSTR lpProfileDir,_Inout_ LPDWORD lpcchSize)
BOOL WINAPI userenv.GetDefaultUserProfileDirectoryW(_Out_opt_ LPTSTR lpProfileDir,_Inout_ LPDWORD lpcchSize)
BOOL WINAPI userenv.GetDefaultUserProfileDirectoryA(_Out_opt_ LPTSTR lpProfileDir,_Inout_ LPDWORD lpcchSize)
UINT WINAPI kernel32.GlobalFlags(_In_ HGLOBAL hMem)
BOOL None kernel32.GetNumaProximityNodeEx(_In_ ULONG ProximityId,_Out_ PUSHORT NodeNumber)
BOOL None kernel32.IsCalendarLeapYear(_In_ CALID calId,_In_ UINT year,_In_ UINT era)
LONG WINAPI winscard.SCardReconnect(_In_ SCARDHANDLE hCard,_In_ DWORD dwShareMode,_In_ DWORD dwPreferredProtocols,_In_ DWORD dwInitialization,_Out_opt_ LPDWORD pdwActiveProtocol)
HRESULT None ole32.CoRegisterClassObject(_In_ REFCLSID rclsid,_In_ LPUNKNOWN pUnk,_In_ DWORD dwClsContext,_In_ DWORD flags,_Out_ LPDWORD lpdwRegister)
DWORD WINAPI fwpuclnt.FwpmLayerGetById0(_In_ HANDLE engineHandle,_In_ UINT16 id,_Out_ FWPM_LAYER0 **layer)
HRESULT None ole32.CoRevokeInitializeSpy(_In_ ULARGE_INTEGER uliCookie)
NTSTATUS WINAPI certpoleng.PstGetUserNameForCertificate(_In_ PCCERT_CONTEXT pCertContext,_Out_ PUNICODE_STRING UserName)
BOOL None shell32.ShellExecuteEx(_Inout_ SHELLEXECUTEINFO *pExecInfo)
BOOL None shell32.ShellExecuteExW(_Inout_ SHELLEXECUTEINFO *pExecInfo)
BOOL None shell32.ShellExecuteExA(_Inout_ SHELLEXECUTEINFO *pExecInfo)
DWORD None iphlpapi.GetIpForwardTable(_Out_ PMIB_IPFORWARDTABLE pIpForwardTable,_Inout_ PULONG pdwSize,_In_ BOOL bOrder)
PUITEMID_CHILD None shell32.ILFindLastID(_In_ PCUIDLIST_RELATIVE pidl)
DWORD APIENTRY None.CancelConnectNotify(_Inout_ LPNOTIFYINFO lpNotifyInfo,_In_ LPNOTIFYCANCEL lpCancelInfo)
BOOL None kernel32.EnumSystemCodePages(_In_ CODEPAGE_ENUMPROC lpCodePageEnumProc,_In_ DWORD dwFlags)
BOOL None kernel32.EnumSystemCodePagesW(_In_ CODEPAGE_ENUMPROC lpCodePageEnumProc,_In_ DWORD dwFlags)
BOOL None kernel32.EnumSystemCodePagesA(_In_ CODEPAGE_ENUMPROC lpCodePageEnumProc,_In_ DWORD dwFlags)
HRESULT None url.URLAssociationDialog(HWND hwndParent None,DWORD dwInFlags None,PTCSTR pcszFile None,PTCSTR pcszURL None,_Out_ PTSTR pszAppBuf,UINT ucAppBufLen None)
HRESULT None url.URLAssociationDialogW(HWND hwndParent None,DWORD dwInFlags None,PTCSTR pcszFile None,PTCSTR pcszURL None,_Out_ PTSTR pszAppBuf,UINT ucAppBufLen None)
HRESULT None url.URLAssociationDialogA(HWND hwndParent None,DWORD dwInFlags None,PTCSTR pcszFile None,PTCSTR pcszURL None,_Out_ PTSTR pszAppBuf,UINT ucAppBufLen None)
SECURITY_STATUS WINAPI schannel.SslGetServerIdentity(_In_ PBYTE ClientHello,_In_ DWORD ClientHelloSize,_Out_ PBYTE *ServerIdentity,_Out_ PDWORD ServerIdentitySize,_In_ DWORD Flags)
BOOL None kernel32.GetNumaAvailableMemoryNodeEx(_In_ USHORT Node,_Out_ PULONGLONG AvailableBytes)
SECURITY_STATUS None sspicli.SspiDecryptAuthIdentity(_Inout_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE EncryptedAuthData)
HRESULT None shell32.SHRemoveLocalizedName(_In_ PCWSTR pszPath)
ULONG WINAPI iphlpapi.GetTcpTable2(_Out_ PMIB_TCPTABLE2 TcpTable,_Inout_ PULONG SizePointer,_In_ BOOL Order)
BOOL None shell32.DAD_SetDragImage(HIMAGELIST him None,POINT *pptOffset None)
BOOL WINAPI kernel32.UnmapViewOfFileEx(_In_ LPCVOID lpBaseAddress,_In_ DWORD UnmapFlags)
HRESULT None ole32.CoRegisterActivationFilter(_In_ IActivationFilter *pActivationFilter)
ULONG None twinapi.core.RegisterAppStateChangeNotification(_In_ PAPPSTATE_CHANGE_ROUTINE Routine,_In_opt_ PVOID Context,_Out_ PAPPSTATE_REGISTRATION *Registration)
LONG WINAPI lz32.LZCopy(_In_ INT hfSource,_In_ INT hfDest)
void CALLBACK ws2_32.CompletionROUTINE(IN DWORD dwError,IN DWORD cbTransferred,IN LPWSAOVERLAPPED lpOverlapped,IN DWORD dwFlags)
HWND None None.TreeView_GetEditControl(HWND hwndTV None)
HRESULT None oleaut32.VarUI4FromDate(_In_ DATE dateIn,_Out_ ULONG *pulOut)
HRESULT None oleaut32.VarDecFromI8(_In_ LONG64 i64In,_Out_ DECIMAL *pdecOut)
SECURITY_STATUS SEC_Entry secur32.FreeCredentialsHandle(_In_ PCredHandle phCredential)
BOOL WINAPI kernel32.GetFileAttributesEx(_In_ LPCTSTR lpFileName,_In_ GET_FILEEX_INFO_LEVELS fInfoLevelId,_Out_ LPVOID lpFileInformation)
BOOL WINAPI kernel32.GetFileAttributesExW(_In_ LPCTSTR lpFileName,_In_ GET_FILEEX_INFO_LEVELS fInfoLevelId,_Out_ LPVOID lpFileInformation)
BOOL WINAPI kernel32.GetFileAttributesExA(_In_ LPCTSTR lpFileName,_In_ GET_FILEEX_INFO_LEVELS fInfoLevelId,_Out_ LPVOID lpFileInformation)
HRESULT None shell32.ILLoadFromStream(_In_ IStream *pstm,_Out_ PIDLIST_RELATIVE *pidl)
DWORD WINAPI advapi32.GetNamedSecurityInfo(_In_ LPTSTR pObjectName,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_Out_opt_ PSID *ppsidOwner,_Out_opt_ PSID *ppsidGroup,_Out_opt_ PACL *ppDacl,_Out_opt_ PACL *ppSacl,_Out_opt_ PSECURITY_DESCRIPTOR *ppSecurityDescriptor)
DWORD WINAPI advapi32.GetNamedSecurityInfoW(_In_ LPTSTR pObjectName,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_Out_opt_ PSID *ppsidOwner,_Out_opt_ PSID *ppsidGroup,_Out_opt_ PACL *ppDacl,_Out_opt_ PACL *ppSacl,_Out_opt_ PSECURITY_DESCRIPTOR *ppSecurityDescriptor)
DWORD WINAPI advapi32.GetNamedSecurityInfoA(_In_ LPTSTR pObjectName,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_Out_opt_ PSID *ppsidOwner,_Out_opt_ PSID *ppsidGroup,_Out_opt_ PACL *ppDacl,_Out_opt_ PACL *ppSacl,_Out_opt_ PSECURITY_DESCRIPTOR *ppSecurityDescriptor)
BOOL WINAPI kernel32.SleepConditionVariableSRW(_Inout_ PCONDITION_VARIABLE ConditionVariable,_Inout_ PSRWLOCK SRWLock,_In_ DWORD dwMilliseconds,_In_ ULONG Flags)
VOID None None.InitializeThreadpoolEnvironment(_Out_ PTP_CALLBACK_ENVIRON pcbe)
DWORD None iphlpapi.IcmpParseReplies(_In_ LPVOID ReplyBuffer,_In_ DWORD ReplySize)
BOOL WINAPI kernel32.InitializeProcThreadAttributeList(_Out_opt_ LPPROC_THREAD_ATTRIBUTE_LIST lpAttributeList,_In_ DWORD dwAttributeCount,_Reserved_ DWORD dwFlags,_Inout_ PSIZE_T lpSize)
BOOL None kernel32.GetProcessorSystemCycleTime(_In_ USHORT Group,_Out_ PSYSTEM_PROCESSOR_CYCLE_TIME_INFORMATION Buffer,_Inout_ PDWORD ReturnedLength)
BOOL WINAPI iphlpapi.CancelIPChangeNotify(_In_ LPOVERLAPPED notifyOverlapped)
NETIOAPI_API None iphlpapi.GetAnycastIpAddressTable(_In_ ADDRESS_FAMILY Family,_Out_ PMIB_ANYCASTIPADDRESS_TABLE *Table)
HGLOBAL WINAPI kernel32.GlobalReAlloc(_In_ HGLOBAL hMem,_In_ SIZE_T dwBytes,_In_ UINT uFlags)
BOOL WINAPI avrt.AvRtCreateThreadOrderingGroup(_Out_ PHANDLE Context,_In_ PLARGE_INTEGER Period,_Inout_ GUID *ThreadOrderingGuid,_In_opt_ PLARGE_INTEGER Timeout)
SECURITY_STATUS SEC_Entry sspicli.EnumerateSecurityPackages(_In_ PULONG pcPackages,_In_ PSecPkgInfo *ppPackageInfo)
SECURITY_STATUS SEC_Entry sspicli.EnumerateSecurityPackagesW(_In_ PULONG pcPackages,_In_ PSecPkgInfo *ppPackageInfo)
SECURITY_STATUS SEC_Entry sspicli.EnumerateSecurityPackagesA(_In_ PULONG pcPackages,_In_ PSecPkgInfo *ppPackageInfo)
PSLIST_ENTRY WINAPI ntdll.RtlInterlockedPushEntrySList(_In_ PSLIST_HEADER ListHead,_In_ PSLIST_ENTRY ListEntry)
PCUIDLIST_RELATIVE None None.ILNext(_In_ PCUIDLIST_RELATIVE pidl)
BOOL WINAPI advapi32.IsValidSid(_In_ PSID pSid)
HRESULT None shell32.SHLoadOLE(_In_ LPARAM lParam)
HRESULT WINAPI dssec.DSCreateSecurityPage(_In_ LPCWSTR pwszObjectPath,_In_opt_ LPCWSTR pwszObjectClass,_In_ DWORD dwFlags,_Out_ HPROPSHEETPAGE *phPage,_In_opt_ PFNREADOBJECTSECURITY pfnReadSD,_In_opt_ PFNWRITEOBJECTSECURITY pfnWriteSD,_In_ LPARAM lpContext)
HRESULT None oleaut32.VarI4FromDisp(IDispatch *pdispIn None,_In_ LCID lcid,_Out_ LONG *plOut)
SECURITY_STATUS None sspicli.SspiValidateAuthIdentity(_In_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE AuthData)
ULONG WINAPI iphlpapi.CreatePersistentTcpPortReservation(_In_ USHORT StartPort,_In_ USHORT NumberOfPorts,_Out_ PULONG64 Token)
HTREEITEM None None.TreeView_GetSelection(HWND hwndTV None)
DWORD WINAPI kernel32.GetEnvironmentVariable(_In_opt_ LPCTSTR lpName,_Out_opt_ LPTSTR lpBuffer,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetEnvironmentVariableW(_In_opt_ LPCTSTR lpName,_Out_opt_ LPTSTR lpBuffer,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetEnvironmentVariableA(_In_opt_ LPCTSTR lpName,_Out_opt_ LPTSTR lpBuffer,_In_ DWORD nSize)
NTSTATUS WINAPI ntdll.ZwQueryInformationProcess(_In_ HANDLE ProcessHandle,_In_ PROCESSINFOCLASS ProcessInformationClass,_Out_ PVOID ProcessInformation,_In_ ULONG ProcessInformationLength,_Out_opt_ PULONG ReturnLength)
INT None ws2_32.WSAGetServiceClassInfo(_In_ LPGUID lpProviderId,_In_ LPGUID lpServiceClassId,_Inout_ LPDWORD lpdwBufferLength,_Out_ LPWSASERVICECLASSINFO lpServiceClassInfo)
INT None ws2_32.WSAGetServiceClassInfoW(_In_ LPGUID lpProviderId,_In_ LPGUID lpServiceClassId,_Inout_ LPDWORD lpdwBufferLength,_Out_ LPWSASERVICECLASSINFO lpServiceClassInfo)
INT None ws2_32.WSAGetServiceClassInfoA(_In_ LPGUID lpProviderId,_In_ LPGUID lpServiceClassId,_Inout_ LPDWORD lpdwBufferLength,_Out_ LPWSASERVICECLASSINFO lpServiceClassInfo)
BOOL None shell32.SHValidateUNC(_In_opt_ HWND hwndOwner,_Inout_ PWSTR pszFile,UINT fConnect None)
BOOL WINAPI kernel32.GetProcessWorkingSetSizeEx(_In_ HANDLE hProcess,_Out_ PSIZE_T lpMinimumWorkingSetSize,_Out_ PSIZE_T lpMaximumWorkingSetSize,_Out_ PDWORD Flags)
HRESULT None oleaut32.VarCyFromR4(_In_ FLOAT fltIn,_Out_ CY *pcyOut)
DWORD None shell32.DoEnvironmentSubst(_Inout_ LPTSTR pszSrc,UINT cchSrc None)
DWORD None shell32.DoEnvironmentSubstW(_Inout_ LPTSTR pszSrc,UINT cchSrc None)
DWORD None shell32.DoEnvironmentSubstA(_Inout_ LPTSTR pszSrc,UINT cchSrc None)
BOOL None kernel32.EnumDateFormatsExEx(_In_ DATEFMT_ENUMPROCEXEX lpDateFmtEnumProcExEx,_In_opt_ LPCWSTR lpLocaleName,_In_ DWORD dwFlags,_In_ LPARAM lParam)
BOOL WINAPI advapi32.AccessCheckByTypeAndAuditAlarm(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ LPCTSTR ObjectTypeName,_In_opt_ LPCTSTR ObjectName,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_opt_ PSID PrincipalSelfSid,_In_ DWORD DesiredAccess,_In_ AUDIT_EVENT_TYPE AuditType,_In_ DWORD Flags,_Inout_opt_ POBJECT_TYPE_LIST ObjectTypeList,_In_ DWORD ObjectTypeListLength,_In_ PGENERIC_MAPPING GenericMapping,_In_ BOOL ObjectCreation,_Out_ LPDWORD GrantedAccess,_Out_ LPBOOL AccessStatus,_Out_ LPBOOL pfGenerateOnClose)
BOOL WINAPI advapi32.AccessCheckByTypeAndAuditAlarmW(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ LPCTSTR ObjectTypeName,_In_opt_ LPCTSTR ObjectName,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_opt_ PSID PrincipalSelfSid,_In_ DWORD DesiredAccess,_In_ AUDIT_EVENT_TYPE AuditType,_In_ DWORD Flags,_Inout_opt_ POBJECT_TYPE_LIST ObjectTypeList,_In_ DWORD ObjectTypeListLength,_In_ PGENERIC_MAPPING GenericMapping,_In_ BOOL ObjectCreation,_Out_ LPDWORD GrantedAccess,_Out_ LPBOOL AccessStatus,_Out_ LPBOOL pfGenerateOnClose)
BOOL WINAPI advapi32.AccessCheckByTypeAndAuditAlarmA(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ LPCTSTR ObjectTypeName,_In_opt_ LPCTSTR ObjectName,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_opt_ PSID PrincipalSelfSid,_In_ DWORD DesiredAccess,_In_ AUDIT_EVENT_TYPE AuditType,_In_ DWORD Flags,_Inout_opt_ POBJECT_TYPE_LIST ObjectTypeList,_In_ DWORD ObjectTypeListLength,_In_ PGENERIC_MAPPING GenericMapping,_In_ BOOL ObjectCreation,_Out_ LPDWORD GrantedAccess,_Out_ LPBOOL AccessStatus,_Out_ LPBOOL pfGenerateOnClose)
PCUITEMID_CHILD None None.ILCloneChild(_In_ PCUITEMID_CHILD pidl)
NTSTATUS None None.SpApplyControlToken(_In_ LSA_SEC_HANDLE ContextHandle,_In_ PSecBufferDesc ControlToken)
BOOL None kernel32.UpdateCalendarDayOfWeek(_Inout_ LPCALDATETIME lpCalDateTime)
HANDLE WINAPI kernel32.OpenProcess(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ DWORD dwProcessId)
BOOL WINAPI kernel32.QueryProcessAffinityUpdateMode(_In_ HANDLE ProcessHandle,_Out_opt_ DWORD lpdwFlags)
DWORD None iphlpapi.CreateIpForwardEntry(_In_ PMIB_IPFORWARDROW pRoute)
DWORD None iphlpapi.GetOwnerModuleFromUdpEntry(_In_ PMIB_UDPROW_OWNER_MODULE pUdpEntry,_In_ TCPIP_OWNER_MODULE_INFO_CLASS Class,_Out_ PVOID Buffer,_Inout_ PDWORD pdwSize)
BOOL WINAPI kernel32.GetProcessWorkingSetSize(_In_ HANDLE hProcess,_Out_ PSIZE_T lpMinimumWorkingSetSize,_Out_ PSIZE_T lpMaximumWorkingSetSize)
BOOL WINAPI user32.EnumThreadWindows(_In_ DWORD dwThreadId,_In_ WNDENUMPROC lpfn,_In_ LPARAM lParam)
DWORD None iphlpapi.GetIpStatisticsEx(_Out_ PMIB_IPSTATS pStats,_In_ DWORD dwFamily)
HRESULT None oleaut32.VarBstrFromR4(_In_ FLOAT fltIn,_In_ LCID lcid,_In_ ULONG dwFlags,_Out_ BSTR *pbstrOut)
void None None.MyUpdateImage(LPCWSTR pszHashItem None,int iIndex None,UINT uFlags None,int iImageIndex None)
BOOL WINAPI kernel32.GetProcessAffinityMask(_In_ HANDLE hProcess,_Out_ PDWORD_PTR lpProcessAffinityMask,_Out_ PDWORD_PTR lpSystemAffinityMask)
BOOL WINAPI kernel32.SetFileShortName(_In_ HANDLE hFile,_In_ LPCTSTR lpShortName)
BOOL WINAPI kernel32.SetFileShortNameW(_In_ HANDLE hFile,_In_ LPCTSTR lpShortName)
BOOL WINAPI kernel32.SetFileShortNameA(_In_ HANDLE hFile,_In_ LPCTSTR lpShortName)
SECURITY_STATUS SEC_Entry secur32.RevertSecurityContext(_In_ PCtxtHandle phContext)
BOOL WINAPI kernel32.DequeueUmsCompletionListItems(_In_ PUMS_COMPLETION_LIST UmsCompletionList,_In_ DWORD WaitTimeOut,_Out_ PUMS_CONTEXT *UmsThreadList)
HRESULT None oleaut32.VarI8FromCy(_In_ CY cyIn,_Out_ LONG64 *pi64Out)
VOID WINAPI None.FlsCallback(_In_ PVOID lpFlsData)
INT None mswsock.GetTypeByName(_In_ LPTSTR lpServiceName,_Inout_ PGUID lpServiceType)
INT None mswsock.GetTypeByNameW(_In_ LPTSTR lpServiceName,_Inout_ PGUID lpServiceType)
INT None mswsock.GetTypeByNameA(_In_ LPTSTR lpServiceName,_Inout_ PGUID lpServiceType)
NTSTATUS None None.SpGetExtendedInformation(_In_ SECPKG_EXTENDED_INFORMATION_CLASS Class,_Out_ PSECPKG_EXTENDED_INFORMATION *ppInformation)
PSID_IDENTIFIER_AUTHORITY WINAPI advapi32.GetSidIdentifierAuthority(_In_ PSID pSid)
HRESULT None shell32.SHQueryUserNotificationState(_Out_ QUERY_USER_NOTIFICATION_STATE *pquns)
LONG WINAPI winscard.SCardListCards(_In_ SCARDCONTEXT hContext,_In_opt_ LPCBYTE pbAtr,_In_ LPCGUID rgguidInterfaces,_In_ DWORD cguidInterfaceCount,_Out_ LPTSTR mszCards,_Inout_ LPDWORD pcchCards)
LONG WINAPI winscard.SCardListCardsW(_In_ SCARDCONTEXT hContext,_In_opt_ LPCBYTE pbAtr,_In_ LPCGUID rgguidInterfaces,_In_ DWORD cguidInterfaceCount,_Out_ LPTSTR mszCards,_Inout_ LPDWORD pcchCards)
LONG WINAPI winscard.SCardListCardsA(_In_ SCARDCONTEXT hContext,_In_opt_ LPCBYTE pbAtr,_In_ LPCGUID rgguidInterfaces,_In_ DWORD cguidInterfaceCount,_Out_ LPTSTR mszCards,_Inout_ LPDWORD pcchCards)
BOOL WINAPI advapi32.CreateRestrictedToken(_In_ HANDLE ExistingTokenHandle,_In_ DWORD Flags,_In_ DWORD DisableSidCount,_In_opt_ PSID_AND_ATTRIBUTES SidsToDisable,_In_ DWORD DeletePrivilegeCount,_In_opt_ PLUID_AND_ATTRIBUTES PrivilegesToDelete,_In_ DWORD RestrictedSidCount,_In_opt_ PSID_AND_ATTRIBUTES SidsToRestrict,_Out_ PHANDLE NewTokenHandle)
SIZE_T WINAPI kernel32.HeapSize(_In_ HANDLE hHeap,_In_ DWORD dwFlags,_In_ LPCVOID lpMem)
BOOL WINAPI avrt.AvRevertMmThreadCharacteristics(_In_ HANDLE AvrtHandle)
ULONG WINAPI iphlpapi.SetPerTcpConnectionEStats(PMIB_TCPROW Row None,TCP_ESTATS_TYPE EstatsType None,PUCHAR Rw None,ULONG RwVersion None,ULONG RwSize None,ULONG Offset None)
HRESULT None oleaut32.VarI1FromI8(_In_ LONG64 i64In,_Out_ CHAR *pcOut)
DWORD None iphlpapi.SetIpForwardEntry(_In_ PMIB_IPFORWARDROW pRoute)
HRESULT None oleaut32.VarI1FromStr(_In_ LPCOLESTR strIn,_In_ LCID lcid,_In_ ULONG dwFlags,_Out_ CHAR *pcOut)
PCTSTR WSAAPI ws2_32.InetNtop(_In_ INT Family,_In_ PVOID pAddr,_Out_ PTSTR pStringBuf,_In_ size_t StringBufSize)
PCTSTR WSAAPI ws2_32.InetNtopW(_In_ INT Family,_In_ PVOID pAddr,_Out_ PTSTR pStringBuf,_In_ size_t StringBufSize)
PCTSTR WSAAPI ws2_32.InetNtopA or inet_ntop(_In_ INT Family,_In_ PVOID pAddr,_Out_ PTSTR pStringBuf,_In_ size_t StringBufSize)
NTSTATUS NTAPI None.SpGetCredUIContextFn(_In_ LSA_SEC_HANDLE ContextHandle,_In_ GUID *CredType,_Out_ PULONG FlatCredUIContextLength,_Out_ PUCHAR *FlatCredUIContext)
HRESULT None ole32.CoRegisterSurrogate(_In_ LPSURROGATE pSurrogate)
BOOL WINAPI ntdll.IsProcessCritical(_In_ HANDLE hProcess,_Out_ PBOOL Critical)
SEC_ENTRY None None.GetCredentialKey(_In_ PVOID ProviderHandle,_In_opt_ PLUID LogonId,_In_opt_ PVOID AuthBuffer,_In_ ULONG AuthBufferSize,_In_ ULONG Reserved,_Out_ PUNICODE_STRING CredentialKey)
BOOL CALLBACK None.AuthzFreeCentralAccessPolicyCallback(_In_ PVOID pCentralAccessPolicy)
BOOL None None.RegisterDialogClasses(HANDLE hInst None)
HRESULT None oleaut32.VarUI8FromCy(_In_ CY cyIn,_Out_ ULONG64 *pi64Out)
HRESULT None oleaut32.VarUI2FromDate(_In_ DATE dateIn,_Out_ USHORT *puiOut)
BOOL WINAPI kernel32.LockFile(_In_ HANDLE hFile,_In_ DWORD dwFileOffsetLow,_In_ DWORD dwFileOffsetHigh,_In_ DWORD nNumberOfBytesToLockLow,_In_ DWORD nNumberOfBytesToLockHigh)
PVOID WINAPI kernel32.VirtualAllocFromApp(_In_opt_ PVOID BaseAddress,_In_ SIZE_T Size,_In_ ULONG AllocationType,_In_ ULONG Protection)
HRESULT None oleaut32.VarCyFromR8(_In_ DOUBLE dblIn,_Out_ CY *pcyOut)
NTSTATUS None None.SpAcquireCredentialsHandle(_In_ PUNICODE_STRING PrincipalName,_In_ ULONG CredentialUseFlags,_In_ PLUID LogonId,_In_ PVOID AuthorizationData,_In_ PVOID GetKeyFunction,_In_ PVOID GetKeyArgument,_Out_ PLSA_SEC_HANDLE CredentialHandle,_Out_ PTimeStamp ExpirationTime)
NTSTATUS None None.CopyToClientBuffer(_In_ PLSA_CLIENT_REQUEST ClientRequest,_In_ ULONG Length,_In_ PVOID ClientBaseAddress,_In_ PVOID BufferToCopy)
DWORD None None.NPGetUser(_In_ LPTSTR lpName,_Out_ LPTSTR lpUserName,_Inout_ LPDWORD lpBufferSize)
BOOL WINAPI kernel32.GetUmsCompletionListEvent(_In_ PUMS_COMPLETION_LIST UmsCompletionList,_Inout_ PHANDLE UmsCompletionEvent)
DWORD WINAPI kernel32.ReclaimVirtualMemory(_In_ PVOID VirtualAddress,_In_ SIZE_T Size)
HRESULT None oleaut32.VarUI2FromR8(_In_ DOUBLE dblIn,USHORT *puiOut None)
HRESULT None ole32.CoGetCallerTID(_Out_ LPDWORD lpdwTID)
HRESULT None oleaut32.VarCyFromUI1(_In_ BYTE bIn,_Out_ CY *pcyOut)
SECURITY_STATUS None sspicli.SspiPrepareForCredRead(_In_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE AuthIdentity,_In_ PCWSTR pszTargetName,_Out_ PULONG pCredmanCredentialType,_Out_ PCWSTR *ppszCredmanTargetName)
NETIOAPI_API None iphlpapi.GetIfTable2(_Out_ PMIB_IF_TABLE2 *Table)
HRESULT None oleaut32.VarI8FromI2(_In_ SHORT sIn,_Out_ LONG64 *pi64Out)
BOOL None shell32.UpdateAllDesktopSubscriptions(IADesktopP2 *padp2 None)
COLORREF None None.TreeView_SetTextColor(HWND hwndTV None,COLORREF clrText None)
DWORD WINAPI advapi32.SetNamedSecurityInfo(_In_ LPTSTR pObjectName,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_In_opt_ PSID psidOwner,_In_opt_ PSID psidGroup,_In_opt_ PACL pDacl,_In_opt_ PACL pSacl)
DWORD WINAPI advapi32.SetNamedSecurityInfoW(_In_ LPTSTR pObjectName,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_In_opt_ PSID psidOwner,_In_opt_ PSID psidGroup,_In_opt_ PACL pDacl,_In_opt_ PACL pSacl)
DWORD WINAPI advapi32.SetNamedSecurityInfoA(_In_ LPTSTR pObjectName,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_In_opt_ PSID psidOwner,_In_opt_ PSID psidGroup,_In_opt_ PACL pDacl,_In_opt_ PACL pSacl)
BOOL WINAPI advapi32.CreatePrivateObjectSecurity(_In_opt_ PSECURITY_DESCRIPTOR ParentDescriptor,_In_opt_ PSECURITY_DESCRIPTOR CreatorDescriptor,_Out_ PSECURITY_DESCRIPTOR *NewDescriptor,_In_ BOOL IsDirectoryObject,_In_opt_ HANDLE Token,_In_ PGENERIC_MAPPING GenericMapping)
BOOL WINAPI userenv.GetUserProfileDirectory(_In_ HANDLE hToken,_Out_opt_ LPTSTR lpProfileDir,_Inout_ LPDWORD lpcchSize)
BOOL WINAPI userenv.GetUserProfileDirectoryW(_In_ HANDLE hToken,_Out_opt_ LPTSTR lpProfileDir,_Inout_ LPDWORD lpcchSize)
BOOL WINAPI userenv.GetUserProfileDirectoryA(_In_ HANDLE hToken,_Out_opt_ LPTSTR lpProfileDir,_Inout_ LPDWORD lpcchSize)
HFILE WINAPI kernel32.OpenFile(_In_ LPCSTR lpFileName,_Out_ LPOFSTRUCT lpReOpenBuff,_In_ UINT uStyle)
NTSTATUS None None.SpGetUserInfo(_In_ PLUID LogonId,_In_ ULONG Flags,_Out_ PSecurityUserData *UserData)
HRESULT None oleaut32.VarR4FromI1(_In_ CHAR cIn,_Out_ FLOAT *pfltOut)
HRESULT WINAPI ole32.CoDecrementMTAUsage(_In_ CO_MTA_USAGE_COOKIE Cookie)
BOOL None None.ILIsEmpty(_In_ PCUID_RELATIVE pidl)
VOID NETIOAPI iphlpapi.InitializeUnicastIpAddressEntry(_Out_ PMIB_UNICASTIPADDRESS_ROW Row)
BOOL WINAPI kernel32.GetProcessDEPPolicy(_In_ HANDLE hProcess,_Out_ LPDWORD lpFlags,_Out_ PBOOL lpPermanent)
HRESULT None ole32.CoGetContextToken(_Out_ ULONG_PTR *pToken)
HDC None gdi32.CreateCompatibleDC(_In_ HDC hdc)
INT WSAAPI ws2_32.WSAStringToAddress(_In_ LPTSTR AddressString,_In_ INT AddressFamily,_In_opt_ LPWSAPROTOCOL_INFO lpProtocolInfo,_Out_ LPSOCKADDR lpAddress,_Inout_ LPINT lpAddressLength)
INT WSAAPI ws2_32.WSAStringToAddressW(_In_ LPTSTR AddressString,_In_ INT AddressFamily,_In_opt_ LPWSAPROTOCOL_INFO lpProtocolInfo,_Out_ LPSOCKADDR lpAddress,_Inout_ LPINT lpAddressLength)
INT WSAAPI ws2_32.WSAStringToAddressA(_In_ LPTSTR AddressString,_In_ INT AddressFamily,_In_opt_ LPWSAPROTOCOL_INFO lpProtocolInfo,_Out_ LPSOCKADDR lpAddress,_Inout_ LPINT lpAddressLength)
PWSTR None shell32.StrStrNW(_In_ PWSTR pszFirst,_In_ PCWSTR pszSrch,UINT cchMax None)
HRESULT None oleaut32.VarCyFromI4(_In_ LONG lIn,_Out_ CY *pcyOut)
BOOL WSAAPI ws2_32.WSAGetOverlappedResult(_In_ SOCKET s,_In_ LPWSAOVERLAPPED lpOverlapped,_Out_ LPDWORD lpcbTransfer,_In_ BOOL fWait,_Out_ LPDWORD lpdwFlags)
HRESULT None oleaut32.VarR4FromR8(_In_ DOUBLE dblIn,_Out_ FLOAT *pfltOut)
ULONG WINAPI iphlpapi.LookupPersistentUdpPortReservation(_In_ USHORT StartPort,_In_ USHORT NumberOfPorts,_Out_ PULONG64 Token)
SECURITY_STATUS SEC_Entry secur32.EncryptMessage(_In_ PCtxtHandle phContext,_In_ ULONG fQOP,_Inout_ PSecBufferDesc pMessage,_In_ ULONG MessageSeqNo)
HRESULT None oleaut32.VarUI2FromUI1(_In_ BYTE bIn,_Out_ USHORT *puiOut)
DWORD None iphlpapi.SetTcpEntry(_In_ PMIB_TCPROW pTcpRow)
DWORD None iphlpapi.GetOwnerModuleFromTcpEntry(_In_ PMIB_TCPROW_OWNER_MODULE pTcpEntry,_In_ TCPIP_OWNER_MODULE_INFO_CLASS Class,_Out_ PVOID Buffer,_Inout_ PDWORD pdwSize)
TRUSTEE_TYPE WINAPI advapi32.GetTrusteeType(_In_opt_ PTRUSTEE pTrustee)
TRUSTEE_TYPE WINAPI advapi32.GetTrusteeTypeW(_In_opt_ PTRUSTEE pTrustee)
TRUSTEE_TYPE WINAPI advapi32.GetTrusteeTypeA(_In_opt_ PTRUSTEE pTrustee)
UINT None shell32.SHAddFromPropSheetExtArray(_In_ HPSXA hpsxa,_In_ LPFNADDPROPSHEETPAGE lpfnAddPage,LPARAM lParam None)
BOOL WINAPI kernel32.UnmapViewOfFile(_In_ LPCVOID lpBaseAddress)
HRESULT None oleaut32.VarUI4FromBool(_In_ VARIANT_BOOL boolIn,_Out_ ULONG *pulOut)
HRESULT None oleaut32.VarBoolFromDisp(IDispatch *pdispIn None,_In_ LCID lcid,_Out_ VARIANT_BOOL *pboolOut)
HRESULT None oleaut32.VarDateFromUI4(_In_ ULONG ulIn,_Out_ DATE *pdateOut)
NTSTATUS None None.SpQueryContextAttributes(_In_ LSA_SEC_HANDLE ContextHandle,_In_ ULONG ContextAttribute,_Out_ PVOID Buffer)
HRESULT None oleaut32.VarI2FromR4(_In_ FLOAT fltIn,_Out_ SHORT *psOut)
BOOL None ws2_32.WSAGetQOSByName(_In_ SOCKET s,_Inout_ LPWSABUF lpQOSName,_Out_ LPQOS lpQOS)
NTSTATUS None None.SpAddCredentials(_In_ LSA_SEC_HANDLE CredentialHandle,_In_ PUNICODE_STRING PrincipalName,_In_ PUNICODE_STRING Package,_In_ ULONG CredentialUseFlags,_In_ PVOID AuthorizationData,_In_ PVOID GetKeyFunction,_In_ PVOID GetKeyArgument,_Out_ PTimeStamp ExpirationTime)
DWORD WINAPI iphlpapi.SetIpStatisticsEx(_In_ PMIB_IPSTATS pIpStats,ULONG Family None)
BOOL WINAPI kernel32.FlsFree(_In_ DWORD dwFlsIndex)
HRESULT None oleaut32.VarDecFromI1(_In_ CHAR cIn,_Out_ DECIMAL *pdecOut)
BOOL WINAPI kernel32.AllocateUserPhysicalPagesNuma(_In_ HANDLE hProcess,_Inout_ PULONG_PTR NumberOfPages,_Out_ PULONG_PTR PageArray,_In_ DWORD nndPreferred)
BOOL WINAPI kernel32.NeedCurrentDirectoryForExePath(_In_ LPCTSTR ExeName)
BOOL WINAPI kernel32.NeedCurrentDirectoryForExePathW(_In_ LPCTSTR ExeName)
BOOL WINAPI kernel32.NeedCurrentDirectoryForExePathA(_In_ LPCTSTR ExeName)
BOOL WINAPI kernel32.DeleteSynchronizationBarrier(_Inout_ LPSYNCHRONIZATION_BARRIER lpBarrier)
BOOL WINAPI authz.AuthzFreeContext(_In_ AUTHZ_CLIENT_CONTEXT_HANDLE AuthzClientContext)
HRESULT None oleaut32.VarCyFromUI4(_In_ ULONG ulIn,_Out_ CY *pcyOut)
HANDLE WINAPI ktmw32.CreateTransaction(_In_opt_ LPSECURITY_ATTRIBUTES lpTransactionAttributes,_In_opt_ LPGUID UOW,_In_opt_ DWORD CreateOptions,_In_opt_ DWORD IsolationLevel,_In_opt_ DWORD IsolationFlags,_In_opt_ DWORD Timeout,_In_opt_ LPWSTR Description)
BOOL None iphlpapi.IcmpCloseHandle(_In_ HANDLE IcmpHandle)
BOOL WINAPI authz.AuthzModifyClaims(_In_ AUTHZ_CLIENT_CONTEXT_HANDLE hAuthzClientContext,_In_ AUTHZ_CONTEXT_INFORMATION_CLASS ClaimClass,_In_ PAUTHZ_SECURITY_ATTRIBUTE_OPERATION pClaimOperations,_In_opt_ PAUTHZ_SECURITY_ATTRIBUTES_INFORMATION pClaims)
BOOL None comctl32.SetWindowSubclass(_In_ HWND hWnd,_In_ SUBCLASSPROC pfnSubclass,_In_ UINT_PTR uIdSubclass,_In_ DWORD_PTR dwRefData)
HRESULT None oleaut32.VarDateFromUI1(_In_ BYTE bIn,_Out_ DATE *pdateOut)
BOOL WINAPI kernel32.EnumProcesses(_Out_ DWORD *pProcessIds,_In_ DWORD cb,_Out_ DWORD *pBytesReturned)
HRESULT None oleaut32.VarBstrFromDisp(IDispatch *pdispIn None,_In_ LCID lcid,_In_ ULONG dwFlags,_Out_ BSTR *pbstrOut)
DWORD WINAPI advapi32.WriteEncryptedFileRaw(_In_ PFE_IMPORT_FUNC pfImportCallback,_In_opt_ PVOID pvCallbackContext,_In_ PVOID pvContext)
DWORD WINAPI advapi32.GetEffectiveRightsFromAcl(_In_ PACL pacl,_In_ PTRUSTEE pTrustee,_Out_ PACCESS_MASK pAccessRights)
DWORD WINAPI advapi32.GetEffectiveRightsFromAclW(_In_ PACL pacl,_In_ PTRUSTEE pTrustee,_Out_ PACCESS_MASK pAccessRights)
DWORD WINAPI advapi32.GetEffectiveRightsFromAclA(_In_ PACL pacl,_In_ PTRUSTEE pTrustee,_Out_ PACCESS_MASK pAccessRights)
BOOL None mswsock.RIOSendEx(_In_ RIO_RQ SocketQueue,_In_ PRIO_BUF pData,_In_ ULONG DataBufferCount,_In_ PRIO_BUF pLocalAddress,_In_ PRIO_BUF pRemoteAddress,_In_ PRIO_BUF pControlContext,_In_ PRIO_BUF pFlags,_In_ DWORD Flags,_In_ PVOID RequestContext)
HRESULT None oleaut32.VarBstrFromI4(_In_ LONG lIn,_In_ LCID lcid,_In_ ULONG dwFlags,_Out_ BSTR *pbstrOut)
BOOL WINAPI kernel32.FindNextFileNameW(_In_ HANDLE hFindStream,_Inout_ LPDWORD StringLength,_Inout_ PWCHAR LinkName)
HRESULT None oleaut32.VarI2FromI4(_In_ LONG lIn,_Out_ SHORT *psOut)
DWORD WINAPI kernel32.SetThreadIdealProcessor(_In_ HANDLE hThread,_In_ DWORD dwIdealProcessor)
HRESULT None shell32.CreateViewWindow2(LPSV2CVW2_PARAMS lpParams None)
HRESULT None oleaut32.VarUI2FromStr(_In_ LPCOLESTR strIn,_In_ LCID lcid,_In_ ULONG dwFlags,_Out_ USHORT *puiOut)
BOOL None ws2_32.WSAResetEvent(_In_ WSAEVENT hEvent)
SEC_ENTRY None None.OnProfileLoaded(_In_ PVOID ProviderHandle,_In_ HANDLE UserToken,_In_ BOOLEAN Loaded)
HRESULT None oleaut32.VarI8FromUI2(_In_ USHORT uiIn,_Out_ LONG64 *pi64Out)
LONG WINAPI scarddlg.SCardUIDlgSelectCard(_In_ LPOPENCARDNAME_EX pDlgStruc)
LONG WINAPI scarddlg.SCardUIDlgSelectCardW(_In_ LPOPENCARDNAME_EX pDlgStruc)
LONG WINAPI scarddlg.SCardUIDlgSelectCardA(_In_ LPOPENCARDNAME_EX pDlgStruc)
PUIDLIST_RELATIVE None None.ILSkip(_In_ PUIDLIST_RELATIVE pidl,UINT cb None)
BOOLEAN WINAPI advapi32.AuditEnumerateCategories(_Out_ GUID **ppAuditCategoriesArray,_Out_ PULONG pCountReturned)
NTSTATUS WINAPI None.Msv1_0SubAuthenticationRoutineGeneric(PVOID SubmitBuffer None,ULONG SubmitBufferLength None,_Out_ PULONG ReturnBufferLength,_Out_ PVOID *ReturnBuffer)
BOOL WINAPI advapi32.GetTokenInformation(_In_ HANDLE TokenHandle,_In_ TOKEN_INFORMATION_CLASS TokenInformationClass,_Out_opt_ LPVOID TokenInformation,_In_ DWORD TokenInformationLength,_Out_ PDWORD ReturnLength)
HRESULT None oleaut32.VarUI1FromI4(_In_ LONG lIn,_Out_ BYTE *pbOut)
NTSTATUS None advapi32.LsaOpenPolicy(_In_ PLSA_UNICODE_STRING SystemName,_In_ PLSA_OBJECT_ATTRIBUTES ObjectAttributes,_In_ ACCESS_MASK DesiredAccess,_Inout_ PLSA_HANDLE PolicyHandle)
BOOL WINAPI kernel32.GetExitCodeThread(_In_ HANDLE hThread,_Out_ LPDWORD lpExitCode)
HRESULT None oleaut32.VarUI1FromI8(_In_ LONG64 i64In,_Out_ BYTE *pbOut)
VOID WINAPI None.BadMemoryCallbackRoutine(VOID None None)
RIO_BUFFERID None mswsock.RIORegisterBuffer(_In_ PCHAR DataBuffer,_In_ DWORD DataLength)
INT None ws2_32.WSALookupServiceEnd(_In_ HANDLE hLookup)
BOOL WINAPI kernel32.TrySubmitThreadpoolCallback(_In_ PTP_SIMPLE_CALLBACK pfns,_Inout_opt_ PVOID pv,_In_opt_ PTP_CALLBACK_ENVIRON pcbe)
HRESULT None oleaut32.VarBoolFromI8(_In_ LONG64 i64In,_Out_ VARIANT_BOOL *pboolOut)
SECURITY_STATUS SEC_Entry secur32.QueryCredentialsAttributes(_In_ PCredHandle phCredential,_In_ ULONG ulAttribute,_Out_ PVOID pBuffer)
SECURITY_STATUS SEC_Entry secur32.QueryCredentialsAttributesW(_In_ PCredHandle phCredential,_In_ ULONG ulAttribute,_Out_ PVOID pBuffer)
SECURITY_STATUS SEC_Entry secur32.QueryCredentialsAttributesA(_In_ PCredHandle phCredential,_In_ ULONG ulAttribute,_Out_ PVOID pBuffer)
BOOL WINAPI kernel32.CheckNameLegalDOS8Dot3(_In_ LPCTSTR lpName,_Out_opt_ LPSTR lpOemName,_In_ DWORD OemNameSize,_Out_opt_ PBOOL pbNameContainsSpaces,_Out_ PBOOL pbNameLegal)
BOOL WINAPI kernel32.CheckNameLegalDOS8Dot3W(_In_ LPCTSTR lpName,_Out_opt_ LPSTR lpOemName,_In_ DWORD OemNameSize,_Out_opt_ PBOOL pbNameContainsSpaces,_Out_ PBOOL pbNameLegal)
BOOL WINAPI kernel32.CheckNameLegalDOS8Dot3A(_In_ LPCTSTR lpName,_Out_opt_ LPSTR lpOemName,_In_ DWORD OemNameSize,_Out_opt_ PBOOL pbNameContainsSpaces,_Out_ PBOOL pbNameLegal)
DWORD WINAPI advapi32.SetSecurityInfo(_In_ HANDLE handle,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_In_opt_ PSID psidOwner,_In_opt_ PSID psidGroup,_In_opt_ PACL pDacl,_In_opt_ PACL pSacl)
HRESULT None oleaut32.VarI2FromUI4(_In_ ULONG ulIn,_Out_ SHORT *psOut)
LPWSTR None shlwapi.CharLowerWrapW(_Inout_ LPWSTR pch)
BOOL None None.WlxDisplayStatusMessage(_In_ PVOID pWlxContext,_In_ HDESK hDesktop,_In_ DWORD dwOptions,_In_ PWSTR pTitle,_In_ PWSTR pMessage)
BOOL CALLBACK None.InitOnceCallback(_Inout_ PINIT_ONCE InitOnce,_Inout_opt_ PVOID Parameter,_Out_opt_ PVOID *Context)
DWORD None None.NPFormatNetworkName(_In_ LPTSTR lpRemoteName,_Out_ LPTSTR lpFormattedName,_Inout_ LPDWORD lpnLength,_In_ DWORD dwFlags,_In_ DWORD dwAveCharPerLine)
BOOL WINAPI advapi32.AccessCheckByTypeResultListAndAuditAlarm(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ LPCTSTR ObjectTypeName,_In_opt_ LPCTSTR ObjectName,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_opt_ PSID PrincipalSelfSid,_In_ DWORD DesiredAccess,_In_ AUDIT_EVENT_TYPE AuditType,_In_ DWORD Flags,_Inout_opt_ POBJECT_TYPE_LIST ObjectTypeList,_In_ DWORD ObjectTypeListLength,_In_ PGENERIC_MAPPING GenericMapping,_In_ BOOL ObjectCreation,_Out_ LPDWORD GrantedAccess,_Out_ LPDWORD AccessStatusList,_Out_ LPBOOL pfGenerateOnClose)
BOOL WINAPI advapi32.AccessCheckByTypeResultListAndAuditAlarmW(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ LPCTSTR ObjectTypeName,_In_opt_ LPCTSTR ObjectName,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_opt_ PSID PrincipalSelfSid,_In_ DWORD DesiredAccess,_In_ AUDIT_EVENT_TYPE AuditType,_In_ DWORD Flags,_Inout_opt_ POBJECT_TYPE_LIST ObjectTypeList,_In_ DWORD ObjectTypeListLength,_In_ PGENERIC_MAPPING GenericMapping,_In_ BOOL ObjectCreation,_Out_ LPDWORD GrantedAccess,_Out_ LPDWORD AccessStatusList,_Out_ LPBOOL pfGenerateOnClose)
BOOL WINAPI advapi32.AccessCheckByTypeResultListAndAuditAlarmA(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ LPCTSTR ObjectTypeName,_In_opt_ LPCTSTR ObjectName,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_opt_ PSID PrincipalSelfSid,_In_ DWORD DesiredAccess,_In_ AUDIT_EVENT_TYPE AuditType,_In_ DWORD Flags,_Inout_opt_ POBJECT_TYPE_LIST ObjectTypeList,_In_ DWORD ObjectTypeListLength,_In_ PGENERIC_MAPPING GenericMapping,_In_ BOOL ObjectCreation,_Out_ LPDWORD GrantedAccess,_Out_ LPDWORD AccessStatusList,_Out_ LPBOOL pfGenerateOnClose)
PUIDLIST_RELATIVE None shell32.ILGetNext(_In_opt_ PCUIDLIST_RELATIVE pidl)
HANDLE WINAPI kernel32.FindFirstFileEx(_In_ LPCTSTR lpFileName,_In_ FINDEX_INFO_LEVELS fInfoLevelId,_Out_ LPVOID lpFindFileData,_In_ FINDEX_SEARCH_OPS fSearchOp,_Reserved_ LPVOID lpSearchFilter,_In_ DWORD dwAdditionalFlags)
HANDLE WINAPI kernel32.FindFirstFileExW(_In_ LPCTSTR lpFileName,_In_ FINDEX_INFO_LEVELS fInfoLevelId,_Out_ LPVOID lpFindFileData,_In_ FINDEX_SEARCH_OPS fSearchOp,_Reserved_ LPVOID lpSearchFilter,_In_ DWORD dwAdditionalFlags)
HANDLE WINAPI kernel32.FindFirstFileExA(_In_ LPCTSTR lpFileName,_In_ FINDEX_INFO_LEVELS fInfoLevelId,_Out_ LPVOID lpFindFileData,_In_ FINDEX_SEARCH_OPS fSearchOp,_Reserved_ LPVOID lpSearchFilter,_In_ DWORD dwAdditionalFlags)
HRESULT None oleaut32.VarR8FromI8(_In_ LONG64 i64In,_Out_ DOUBLE *pdblOut)
DWORD WINAPI advapi32.TreeSetNamedSecurityInfo(_In_ LPTSTR pObjectName,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_In_opt_ PSID pOwner,_In_opt_ PSID pGroup,_In_opt_ PACL pDacl,_In_opt_ PACL pSacl,_In_ DWORD dwAction,_In_ FN_PROGRESS fnProgress,_In_ PROG_INVOKE_SETTING ProgressInvokeSetting,_In_opt_ PVOID Args)
DWORD WINAPI advapi32.TreeSetNamedSecurityInfoW(_In_ LPTSTR pObjectName,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_In_opt_ PSID pOwner,_In_opt_ PSID pGroup,_In_opt_ PACL pDacl,_In_opt_ PACL pSacl,_In_ DWORD dwAction,_In_ FN_PROGRESS fnProgress,_In_ PROG_INVOKE_SETTING ProgressInvokeSetting,_In_opt_ PVOID Args)
DWORD WINAPI advapi32.TreeSetNamedSecurityInfoA(_In_ LPTSTR pObjectName,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_In_opt_ PSID pOwner,_In_opt_ PSID pGroup,_In_opt_ PACL pDacl,_In_opt_ PACL pSacl,_In_ DWORD dwAction,_In_ FN_PROGRESS fnProgress,_In_ PROG_INVOKE_SETTING ProgressInvokeSetting,_In_opt_ PVOID Args)
HRESULT None oleaut32.VarCyFromI8(_In_ LONG64 i64In,_Out_ CY *pcyOut)
DWORD WINAPI advapi32.GetSidLengthRequired(_In_ UCHAR nSubAuthorityCount)
HRESULT None None.ILLoadFromStreamEx(_In_ IStream *pstm,_Out_ PIDLIST_ABSOLUTE *ppidl)
BOOL WINAPI advapi32.AddMandatoryAce(_Inout_ PACL pAcl,_In_ DWORD dwAceRevision,_In_ DWORD AceFlags,_In_ DWORD MandatoryPolicy,_In_ PSID pLabelSid)
BOOL None None.WlxQueryClientCredentials(_Out_ PWLX_CLIENT_CREDENTIALS_INFO_V1_0 pCred)
NTSTATUS None None.CopyFromClientBuffer(_In_ PLSA_CLIENT_REQUEST ClientRequest,_In_ ULONG Length,_In_ PVOID BufferToCopy,_In_ PVOID ClientBaseAddress)
NTSTATUS None None.SpInitUserModeContext(_In_ LSA_SEC_HANDLE ContextHandle,_In_ PSecBuffer PackedContext)
HRESULT None shell32.SHCreateQueryCancelAutoPlayMoniker(_Out_ IMoniker **ppmoniker)
HRESULT None oleaut32.VarDateFromBool(_In_ VARIANT_BOOL boolIn,_Out_ DATE *pdateOut)
HPSXA None shell32.SHCreatePropSheetExtArray(_In_ HKEY hkey,_In_opt_ PCWSTR pszSubkey,UINT max_iface None)
BOOLEAN None sspicli.SspiIsAuthIdentityEncrypted(_In_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE EncryptedAuthData)
HRESULT WINAPI dssec.DSEditSecurity(_In_ HWND hwndOwner,_In_ LPCWSTR pwszObjectPath,_In_opt_ LPCWSTR pwszObjectClass,_In_ DWORD dwFlags,_In_opt_ LPCWSTR *pwszCaption,_In_opt_ PFNREADOBJECTSECURITY pfnReadSD,_In_opt_ PFNWRITEOBJECTSECURITY pfnWriteSD,_In_ LPARAM lpContext)
VOID FORCEINLINE None.TpSetCallbackNoActivationContext(_Inout_ PTP_CALLBACK_ENVIRON CallbackEnviron)
DWORD None iphlpapi.GetBestInterface(_In_ IPAddr dwDestAddr,_Out_ PDWORD pdwBestIfIndex)
HRESULT None oleaut32.VarDecFromUI4(_In_ ULONG ulIn,_Out_ DECIMAL *pdecOut)
DWORD None iphlpapi.GetExtendedTcpTable(_Out_ PVOID pTcpTable,_Inout_ PDWORD pdwSize,_In_ BOOL bOrder,_In_ ULONG ulAf,_In_ TCP_TABLE_CLASS TableClass,_In_ ULONG Reserved)
HRESULT None oleaut32.VarDateFromUI8(_In_ ULONG64 ui64In,_Out_ DATE *pdateOut)
BOOL WINAPI credui.CredPackAuthenticationBuffer(_In_ DWORD dwFlags,_In_ LPTSTR pszUserName,_In_ LPTSTR pszPassword,_Out_ PBYTE pPackedCredentials,_Inout_ DWORD *pcbPackedCredentials)
BOOL WINAPI credui.CredPackAuthenticationBufferW(_In_ DWORD dwFlags,_In_ LPTSTR pszUserName,_In_ LPTSTR pszPassword,_Out_ PBYTE pPackedCredentials,_Inout_ DWORD *pcbPackedCredentials)
BOOL WINAPI credui.CredPackAuthenticationBufferA(_In_ DWORD dwFlags,_In_ LPTSTR pszUserName,_In_ LPTSTR pszPassword,_Out_ PBYTE pPackedCredentials,_Inout_ DWORD *pcbPackedCredentials)
DWORD CALLBACK None.CopyProgressRoutine(_In_ LARGE_INTEGER TotalFileSize,_In_ LARGE_INTEGER TotalBytesTransferred,_In_ LARGE_INTEGER StreamSize,_In_ LARGE_INTEGER StreamBytesTransferred,_In_ DWORD dwStreamNumber,_In_ DWORD dwCallbackReason,_In_ HANDLE hSourceFile,_In_ HANDLE hDestinationFile,_In_opt_ LPVOID lpData)
LPVOID WINAPI kernel32.ConvertThreadToFiberEx(_In_opt_ LPVOID lpParameter,_In_ DWORD dwFlags)
BOOL WINAPI kernel32.UpdateProcThreadAttribute(_Inout_ LPPROC_THREAD_ATTRIBUTE_LIST lpAttributeList,_In_ DWORD dwFlags,_In_ DWORD_PTR Attribute,_In_ PVOID lpValue,_In_ SIZE_T cbSize,_Out_opt_ PVOID lpPreviousValue,_In_opt_ PSIZE_T lpReturnSize)
BOOL None None.SHQueueUserWorkItem(LPTHREAD_START_ROUTINE pfnCallback None,LPVOID pContext None,LONG lPriority None,DWORD_PTR dwTag None,DWORD_PTR * pdwId,LPCSTR pszModule None,DWORD dwFlags None)
BOOL WINAPI advapi32.CredProtect(_In_ BOOL fAsSelf,_In_ LPTSTR pszCredentials,_In_ DWORD cchCredentials,_Out_ LPTSTR pszProtectedCredentials,_Inout_ DWORD *pcchMaxChars,_Out_ CRED_PROTECTION_TYPE *ProtectionType)
BOOL WINAPI advapi32.CredProtectW(_In_ BOOL fAsSelf,_In_ LPTSTR pszCredentials,_In_ DWORD cchCredentials,_Out_ LPTSTR pszProtectedCredentials,_Inout_ DWORD *pcchMaxChars,_Out_ CRED_PROTECTION_TYPE *ProtectionType)
BOOL WINAPI advapi32.CredProtectA(_In_ BOOL fAsSelf,_In_ LPTSTR pszCredentials,_In_ DWORD cchCredentials,_Out_ LPTSTR pszProtectedCredentials,_Inout_ DWORD *pcchMaxChars,_Out_ CRED_PROTECTION_TYPE *ProtectionType)
NTSTATUS NTAPI advapi32.LsaGetAppliedCAPIDs(_In_opt_ PLSA_UNICODE_STRING SystemName,_Out_ PSID **CAPIDs,_Out_ PULONG CAPIDCount)
BOOL WINAPI kernel32.GetNumaProximityNode(_In_ ULONG ProximityId,_Out_ PUCHAR NodeNumber)
HRESULT None oleaut32.VarI8FromI1(_In_ CHAR cIn,_Out_ LONG64 *pi64Out)
PIDLIST_ABSOLUTE None shell32.SHSimpleIDListFromPath(_In_ PCWSTR pszPath)
VOID WINAPI kernel32.WakeConditionVariable(_Inout_ PCONDITION_VARIABLE ConditionVariable)
LONG WINAPI None.SCardListReadersWithDeviceInstanceId(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szDeviceInstanceId,_Out_opt_ LPTSTR mszReaders,_Inout_ LPDWORD pcchReaders)
SECURITY_STATUS SEC_Entry secur32.FreeContextBuffer(_In_ PVOID pvContextBuffer)
HRESULT None oleaut32.VarDateFromCy(_In_ CY cyIn,_Out_ DATE *pdateOut)
HRESULT None oleaut32.VarUI2FromUI4(_In_ ULONG ulIn,_Out_ USHORT *puiOut)
BOOL None shell32.SHCreateProcessAsUserW(_Inout_ PSHCREATEPROCESSINFOW pscpi)
BOOL None shell32.SHCreateProcessAsUserW(_Inout_ PSHCREATEPROCESSINFOW pscpi)
BOOL None shell32.Shell_GetImageLists(_In_ HIMAGELIST *phiml,_In_ HIMAGELIST *phimlSmall)
BOOL WINAPI kernel32.QueryInformationJobObject(_In_opt_ HANDLE hJob,_In_ JOBOBJECTINFOCLASS JobObjectInfoClass,_Out_ LPVOID lpJobObjectInfo,_In_ DWORD cbJobObjectInfoLength,_Out_opt_ LPDWORD lpReturnLength)
BOOL WINAPI advapi32.PrivilegeCheck(_In_ HANDLE ClientToken,_Inout_ PPRIVILEGE_SET RequiredPrivileges,_Out_ LPBOOL pfResult)
BOOL WINAPI advapi32.OpenProcessToken(_In_ HANDLE ProcessHandle,_In_ DWORD DesiredAccess,_Out_ PHANDLE TokenHandle)
HRESULT None oleaut32.VarI2FromUI2(_In_ USHORT uiIn,_Out_ SHORT *psOut)
BOOL WINAPI advapi32.GetKernelObjectSecurity(_In_ HANDLE Handle,_In_ SECURITY_INFORMATION RequestedInformation,_Out_opt_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_ DWORD nLength,_Out_ LPDWORD lpnLengthNeeded)
VOID FORCEINLINE None.TpSetCallbackThreadpool(_Inout_ PTP_CALLBACK_ENVIRON CallbackEnviron,_In_ PTP_POOL Pool)
VOID WINAPI kernel32.InitOnceInitialize(_Out_ PINIT_ONCE InitOnce)
SECURITY_STATUS SEC_Entry secur32.InitializeSecurityContext(_In_opt_ PCredHandle phCredential,_In_opt_ PCtxtHandle phContext,_In_opt_ SEC_CHAR *pszTargetName,_In_ ULONG fContextReq,_In_ ULONG Reserved1,_In_ ULONG TargetDataRep,_In_opt_ PSecBufferDesc pInput,_In_ ULONG Reserved2,_Inout_opt_ PCtxtHandle phNewContext,_Inout_opt_ PSecBufferDesc pOutput,_Out_ PULONG pfContextAttr,_Out_opt_ PTimeStamp ptsExpiry)
SECURITY_STATUS SEC_Entry secur32.InitializeSecurityContextW(_In_opt_ PCredHandle phCredential,_In_opt_ PCtxtHandle phContext,_In_opt_ SEC_CHAR *pszTargetName,_In_ ULONG fContextReq,_In_ ULONG Reserved1,_In_ ULONG TargetDataRep,_In_opt_ PSecBufferDesc pInput,_In_ ULONG Reserved2,_Inout_opt_ PCtxtHandle phNewContext,_Inout_opt_ PSecBufferDesc pOutput,_Out_ PULONG pfContextAttr,_Out_opt_ PTimeStamp ptsExpiry)
SECURITY_STATUS SEC_Entry secur32.InitializeSecurityContextA(_In_opt_ PCredHandle phCredential,_In_opt_ PCtxtHandle phContext,_In_opt_ SEC_CHAR *pszTargetName,_In_ ULONG fContextReq,_In_ ULONG Reserved1,_In_ ULONG TargetDataRep,_In_opt_ PSecBufferDesc pInput,_In_ ULONG Reserved2,_Inout_opt_ PCtxtHandle phNewContext,_Inout_opt_ PSecBufferDesc pOutput,_Out_ PULONG pfContextAttr,_Out_opt_ PTimeStamp ptsExpiry)
HRESULT None ole32.CoUnmarshalInterface(_In_ LPSTREAM pStm,_In_ REFIID riid,_Out_ LPVOID *ppv)
INT None ws2_32.WSASetService(_In_ LPWSAQUERYSET lpqsRegInfo,_In_ WSAESETSERVICEOP essOperation,_In_ DWORD dwControlFlags)
INT None ws2_32.WSASetServiceW(_In_ LPWSAQUERYSET lpqsRegInfo,_In_ WSAESETSERVICEOP essOperation,_In_ DWORD dwControlFlags)
INT None ws2_32.WSASetServiceA(_In_ LPWSAQUERYSET lpqsRegInfo,_In_ WSAESETSERVICEOP essOperation,_In_ DWORD dwControlFlags)
u_short WSAAPI ws2_32.ntohs(_In_ u_short netshort)
HRESULT __stdcall None.DllGetClassObject(_In_ REFCLSID rclsid,_In_ REFIID riid,_Out_ LPVOID *ppv)
LONG WINAPI winscard.SCardAudit(_In_ SCARDCONTEXT hContext,_In_ DWORD dwEvent)
LONG WINAPI winscard.SCardIntroduceReaderGroup(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szGroupName)
LONG WINAPI winscard.SCardIntroduceReaderGroupW(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szGroupName)
LONG WINAPI winscard.SCardIntroduceReaderGroupA(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szGroupName)
DWORD None None.NPPropertyDialog(_In_ HWND hwndParent,_In_ DWORD iButtonDlg,_In_ DWORD nPropSel,_In_ LPTSTR lpFileName,_In_ DWORD nType)
DWORD None iphlpapi.NotifyAddrChange(_Out_ PHANDLE Handle,_In_ LPOVERLAPPED overlapped)
BOOL WINAPI kernel32.SleepConditionVariableCS(_Inout_ PCONDITION_VARIABLE ConditionVariable,_Inout_ PCRITICAL_SECTION CriticalSection,_In_ DWORD dwMilliseconds)
DWORD None user32.GetWindowContextHelpId(HWND hwnd None)
DWORD WINAPI advapi32.SetEntriesInAcl(_In_ ULONG cCountOfExplicitEntries,_In_opt_ PEXPLICIT_ACCESS pListOfExplicitEntries,_In_opt_ PACL OldAcl,_Out_ PACL *NewAcl)
DWORD WINAPI advapi32.SetEntriesInAclW(_In_ ULONG cCountOfExplicitEntries,_In_opt_ PEXPLICIT_ACCESS pListOfExplicitEntries,_In_opt_ PACL OldAcl,_Out_ PACL *NewAcl)
DWORD WINAPI advapi32.SetEntriesInAclA(_In_ ULONG cCountOfExplicitEntries,_In_opt_ PEXPLICIT_ACCESS pListOfExplicitEntries,_In_opt_ PACL OldAcl,_Out_ PACL *NewAcl)
HWND WINAPI None.GetNextWindow(_In_ HWND hWnd,_In_ UINT wCmd)
PIDLIST_ABSOLUTE None shell32.ILCombine(_In_ PCIDLIST_ABSOLUTE pidl1,_In_ PCUIDLIST_RELATIVE pidl2)
PVOID WINAPI kernel32.RegisterBadMemoryNotification(_In_ PBAD_MEMORY_CALLBACK_ROUTINE Callback)
HRESULT None oleaut32.VarDecFromR8(_In_ DOUBLE dblIn,_Out_ DECIMAL *pdecOut)
HRESULT None shell32.SelectAndPositionItem(PCUITEMID_CHILD pidlItem None,UINT uFlags None,POINT *point None)
BOOL None shell32.PathMakeUniqueName(_Out_ PWSTR pszUniqueName,UINT cchMax None,_In_ PCWSTR pszTemplate,_In_opt_ PCWSTR pszLongPlate,_In_opt_ PCWSTR pszDir)
BOOL WINAPI userenv.GetProfileType(_Out_ DWORD *pdwFlags)
BOOL None kernel32.GetNumaNodeProcessorMaskEx(_In_ USHORT Node,_Out_ PGROUP_AFFINITY ProcessorMask)
BOOL WINAPI ktmw32.RecoverEnlistment(_In_ HANDLE EnlistmentHandle,_In_opt_ PVOID EnlistmentKey)
LPTSTR WINAPI advapi32.GetTrusteeName(_In_ PTRUSTEE pTrustee)
LPTSTR WINAPI advapi32.GetTrusteeNameW(_In_ PTRUSTEE pTrustee)
LPTSTR WINAPI advapi32.GetTrusteeNameA(_In_ PTRUSTEE pTrustee)
HRESULT None None.GetItemSpacing([out] ITEMSPACING *pSpacing)
BOOL WINAPI ktmw32.GetTransactionManagerId(_In_ HANDLE TransactionManagerHandle,_Out_ LPGUID TransactionManagerId)
BOOL None kernel32.EnumTimeFormats(_In_ TIMEFMT_ENUMPROC lpTimeFmtEnumProc,_In_ LCID Locale,_In_ DWORD dwFlags)
BOOL None kernel32.EnumTimeFormatsW(_In_ TIMEFMT_ENUMPROC lpTimeFmtEnumProc,_In_ LCID Locale,_In_ DWORD dwFlags)
BOOL None kernel32.EnumTimeFormatsA(_In_ TIMEFMT_ENUMPROC lpTimeFmtEnumProc,_In_ LCID Locale,_In_ DWORD dwFlags)
BOOL WINAPI advapi32.CredFindBestCredential(_In_ LPCTSTR TargetName,_In_ DWORD Type,_In_ DWORD Flags,_Out_ PCREDENTIAL *Credential)
BOOL WINAPI advapi32.CredFindBestCredentialW(_In_ LPCTSTR TargetName,_In_ DWORD Type,_In_ DWORD Flags,_Out_ PCREDENTIAL *Credential)
BOOL WINAPI advapi32.CredFindBestCredentialA(_In_ LPCTSTR TargetName,_In_ DWORD Type,_In_ DWORD Flags,_Out_ PCREDENTIAL *Credential)
BOOL WINAPI advapi32.MakeAbsoluteSD(_In_ PSECURITY_DESCRIPTOR pSelfRelativeSD,_Out_opt_ PSECURITY_DESCRIPTOR pAbsoluteSD,_Inout_ LPDWORD lpdwAbsoluteSDSize,_Out_opt_ PACL pDacl,_Inout_ LPDWORD lpdwDaclSize,_Out_opt_ PACL pSacl,_Inout_ LPDWORD lpdwSaclSize,_Out_opt_ PSID pOwner,_Inout_ LPDWORD lpdwOwnerSize,_Out_opt_ PSID pPrimaryGroup,_Inout_ LPDWORD lpdwPrimaryGroupSize)
HRESULT None oleaut32.VarUI8FromR4(_In_ FLOAT fltIn,_Out_ ULONG64 *pi64Out)
BOOL PASCAL mswsock.TransmitFile(SOCKET hSocket None,HANDLE hFile None,DWORD nNumberOfBytesToWrite None,DWORD nNumberOfBytesPerSend None,LPOVERLAPPED lpOverlapped None,LPTRANSMIT_FILE_BUFFERS lpTransmitBuffers None,DWORD dwFlags None)
BOOL APIENTRY kernel32.CheckTokenMembershipEx(_In_opt_ HANDLE TokenHandle,_In_ PSID SidToCheck,_In_ DWORD Flags,_Out_ PBOOL IsMember)
BOOL WINAPI kernel32.WriteFileGather(_In_ HANDLE hFile,_In_ FILE_SEGMENT_ELEMENT aSegmentArray[],_In_ DWORD nNumberOfBytesToWrite,_Reserved_ LPDWORD lpReserved,_Inout_ LPOVERLAPPED lpOverlapped)
BOOL WINAPI kernel32.GetProcessPriorityBoost(_In_ HANDLE hProcess,_Out_ PBOOL pDisablePriorityBoost)
BOOL WINAPI user32.IsImmersiveProcess(_In_ HANDLE hProcess)
DWORD WINAPI advapi32.GetSecurityDescriptorRMControl(_In_ PSECURITY_DESCRIPTOR SecurityDescriptor,_Out_ PUCHAR RMControl)
UINT_PTR None shell32.SHAppBarMessage(_In_ DWORD dwMessage,_Inout_ PAPPBARDATA pData)
DWORD None iphlpapi.SetIfEntry(_In_ PMIB_IFROW pIfRow)
HRESULT None oleaut32.VarDateFromR8(_In_ DOUBLE dblIn,_Out_ DATE *pdateOut)
BOOL WINAPI authz.AuthzInitializeResourceManagerEx(_In_opt_ DWORD Flags,_In_opt_ PVOID pAuthzInitInfo,_Out_ PAUTHZ_RESOURCE_MANAGER_HANDLE phAuthzResourceManager)
NTSTATUS None None.CreateToken(_In_ PLUID LogonId,_In_ PTOKEN_SOURCE TokenSource,_In_ SECURITY_LOGON_TYPE LogonType,_In_ SECURITY_IMPERSONATION_LEVEL ImpersonationLevel,_In_ LSA_TOKEN_INFORMATION_TYPE TokenInformationType,_In_ PVOID TokenInformation,_In_ PTOKEN_GROUPS TokenGroups,_In_ PUNICODE_STRING AccountName,_In_ PUNICODE_STRING AuthorityName,_In_ PUNICODE_STRING Workstation,_In_ PUNICODE_STRING ProfilePath,_Out_ PHANDLE Token,_Out_ PNTSTATUS SubStatus)
BOOL None shell32.GUIDFromString(_In_ LPCTSTR psz,_Out_ LPGUID pguid)
BOOL None shell32.GUIDFromStringW(_In_ LPCTSTR psz,_Out_ LPGUID pguid)
BOOL None shell32.GUIDFromStringA(_In_ LPCTSTR psz,_Out_ LPGUID pguid)
HRESULT WINAPI kernel32.CopyFile2(_In_ PCWSTR pwszExistingFileName,_In_ PCWSTR pwszNewFileName,_In_opt_ COPYFILE2_EXTENDED_PARAMETERS *pExtendedParameters)
DWORD_PTR None shell32.SHGetFileInfo(_In_ LPCTSTR pszPath,DWORD dwFileAttributes None,_Inout_ SHFILEINFO *psfi,UINT cbFileInfo None,UINT uFlags None)
DWORD_PTR None shell32.SHGetFileInfoW(_In_ LPCTSTR pszPath,DWORD dwFileAttributes None,_Inout_ SHFILEINFO *psfi,UINT cbFileInfo None,UINT uFlags None)
DWORD_PTR None shell32.SHGetFileInfoA(_In_ LPCTSTR pszPath,DWORD dwFileAttributes None,_Inout_ SHFILEINFO *psfi,UINT cbFileInfo None,UINT uFlags None)
BOOL WINAPI advapi32.AddAccessAllowedAce(_Inout_ PACL pAcl,_In_ DWORD dwAceRevision,_In_ DWORD AccessMask,_In_ PSID pSid)
LPVOID WINAPI kernel32.VirtualAlloc(_In_opt_ LPVOID lpAddress,_In_ SIZE_T dwSize,_In_ DWORD flAllocationType,_In_ DWORD flProtect)
LONG WINAPI winscard.SCardGetAttrib(_In_ SCARDHANDLE hCard,_In_ DWORD dwAttrId,_Out_ LPBYTE pbAttr,_Inout_ LPDWORD pcbAttrLen)
NETIOAPI_API None iphlpapi.GetIpNetEntry2(_Inout_ PMIB_IPNET_ROW2 Row)
BOOL WINAPI advapi32.AreAllAccessesGranted(_In_ DWORD GrantedAccess,_In_ DWORD DesiredAccess)
NTSTATUS None None.SpDeleteContext(_In_ LSA_SEC_HANDLE ContextHandle)
HANDLE None None.RegisterNotification(_In_ SEC_THREAD_START StartFunction,_In_ PVOID Parameter,_In_ ULONG NotificationType,_In_ ULONG NotificationClass,_In_ ULONG NotificationFlags,_In_ ULONG IntervalMinutes,_In_ HANDLE WaitEvent)
NTSTATUS WINAPI None.Msv1_0SubAuthenticationRoutineEx(_In_ NETLOGON_LOGON_INFO_CLASS LogonLevel,_In_ PVOID LogonInformation,_In_ ULONG Flags,_In_ PUSER_ALL_INFORMATION UserAll,_In_ SAM_HANDLE UserHandle,_Inout_ PMSV1_0_VALIDATION_INFO ValidationInfo,_Out_ PULONG ActionsPerformed)
HRESULT None shell32.SHCreateShellItemArray(_In_ PCIDLIST_ABSOLUTE pidlParent,_In_ IShellFolder *psf,_In_ UINT cidl,_In_ PCUITEMID_CHILD_ARRAY ppidl,_Out_ IShellItemArray **ppsiItemArray)
BOOL None advapi32.CredUnmarshalCredential(_In_ LPCTSTR MarshaledCredential,_Out_ PCRED_MARSHAL_TYPE CredType,_Out_ PVOID *Credential)
BOOL None advapi32.CredUnmarshalCredentialW(_In_ LPCTSTR MarshaledCredential,_Out_ PCRED_MARSHAL_TYPE CredType,_Out_ PVOID *Credential)
BOOL None advapi32.CredUnmarshalCredentialA(_In_ LPCTSTR MarshaledCredential,_Out_ PCRED_MARSHAL_TYPE CredType,_Out_ PVOID *Credential)
BOOL WINAPI kernel.SetDisplayAutoRotationPreferences(_In_ ORIENTATION_PREFERENCE *pOrientation)
NETIOAPI_API None iphlpapi.GetIfEntry2Ex(_In_ MIB_IF_ENTRY_LEVEL Level,_Inout_ PMIB_IF_ROW2 Row)
SECURITY_STATUS None sspicli.SspiCompareAuthIdentities(_In_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE AuthIdentity1,_In_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE AuthIdentity2,_Out_ PBOOLEAN SameSuppliedUser,_Out_ PBOOLEAN SameSuppliedIdentity)
BOOL WINAPI user32.GetUserObjectSecurity(_In_ HANDLE hObj,_In_ PSECURITY_INFORMATION pSIRequested,_Inout_opt_ PSECURITY_DESCRIPTOR pSD,_In_ DWORD nLength,_Out_ LPDWORD lpnLengthNeeded)
HRESULT None oleaut32.VarBstrFromI2(_In_ SHORT iVal,_In_ LCID lcid,_In_ ULONG dwFlags,BSTR *pbstrOut None)
NTSTATUS None None.SpFormatCredentials(_In_ PSecBuffer Credentials,_Out_ PSecBuffer FormattedCredentials)
HANDLE WINAPI kernel32.CreateMutex(_In_opt_ LPSECURITY_ATTRIBUTES lpMutexAttributes,_In_ BOOL bInitialOwner,_In_opt_ LPCTSTR lpName)
HANDLE WINAPI kernel32.CreateMutexW(_In_opt_ LPSECURITY_ATTRIBUTES lpMutexAttributes,_In_ BOOL bInitialOwner,_In_opt_ LPCTSTR lpName)
HANDLE WINAPI kernel32.CreateMutexA(_In_opt_ LPSECURITY_ATTRIBUTES lpMutexAttributes,_In_ BOOL bInitialOwner,_In_opt_ LPCTSTR lpName)
DWORD None None.WlxQueryTerminalServicesData(_In_ HANDLE hWlx,_Out_ PWLX_TERMINAL_SERVICES_DATA pTSData,_In_ WCHAR *UserName,_In_ WCHAR *Domain)
HRESULT None oleaut32.VarUI4FromI2(_In_ SHORT uiIn,_Out_ ULONG *pulOut)
DWORD_PTR WINAPI kernel32.SetThreadAffinityMask(_In_ HANDLE hThread,_In_ DWORD_PTR dwThreadAffinityMask)
HRESULT None oleaut32.VarUI1FromUI8(_In_ ULONG64 ui64In,_Out_ BYTE *pbOut)
BOOL None advapi32.CredGetTargetInfo(_In_ LPCTSTR TargetName,_In_ DWORD Flags,_Out_ PCREDENTIAL_TARGET_INFORMATION *TargetInfo)
BOOL None advapi32.CredGetTargetInfoW(_In_ LPCTSTR TargetName,_In_ DWORD Flags,_Out_ PCREDENTIAL_TARGET_INFORMATION *TargetInfo)
BOOL None advapi32.CredGetTargetInfoA(_In_ LPCTSTR TargetName,_In_ DWORD Flags,_Out_ PCREDENTIAL_TARGET_INFORMATION *TargetInfo)
DWORD WINAPI credui.CredUIPromptForCredentials(_In_opt_ PCREDUI_INFO pUiInfo,_In_ PCTSTR pszTargetName,_In_ PCtxtHandle Reserved,_In_opt_ DWORD dwAuthError,_Inout_ PCTSTR pszUserName,_In_ ULONG ulUserNameMaxChars,_Inout_ PCTSTR pszPassword,_In_ ULONG ulPasswordMaxChars,_Inout_ PBOOL pfSave,_In_ DWORD dwFlags)
DWORD WINAPI credui.CredUIPromptForCredentialsW(_In_opt_ PCREDUI_INFO pUiInfo,_In_ PCTSTR pszTargetName,_In_ PCtxtHandle Reserved,_In_opt_ DWORD dwAuthError,_Inout_ PCTSTR pszUserName,_In_ ULONG ulUserNameMaxChars,_Inout_ PCTSTR pszPassword,_In_ ULONG ulPasswordMaxChars,_Inout_ PBOOL pfSave,_In_ DWORD dwFlags)
DWORD WINAPI credui.CredUIPromptForCredentialsA(_In_opt_ PCREDUI_INFO pUiInfo,_In_ PCTSTR pszTargetName,_In_ PCtxtHandle Reserved,_In_opt_ DWORD dwAuthError,_Inout_ PCTSTR pszUserName,_In_ ULONG ulUserNameMaxChars,_Inout_ PCTSTR pszPassword,_In_ ULONG ulPasswordMaxChars,_Inout_ PBOOL pfSave,_In_ DWORD dwFlags)
HRESULT None oleaut32.VarUI8FromR8(_In_ DOUBLE dblIn,_Out_ ULONG64 *pi64Out)
BOOL WINAPI kernel32.SetProcessWorkingSetSizeEx(_In_ HANDLE hProcess,_In_ SIZE_T dwMinimumWorkingSetSize,_In_ SIZE_T dwMaximumWorkingSetSize,_In_ DWORD Flags)
BOOL WINAPI advapi32.DecryptFile(_In_ LPCTSTR lpFileName,_Reserved_ DWORD dwReserved)
BOOL WINAPI advapi32.DecryptFileW(_In_ LPCTSTR lpFileName,_Reserved_ DWORD dwReserved)
BOOL WINAPI advapi32.DecryptFileA(_In_ LPCTSTR lpFileName,_Reserved_ DWORD dwReserved)
NETIOAPI_API None iphlpapi.GetUnicastIpAddressTable(_In_ ADDRESS_FAMILY Family,_Out_ PMIB_UNICASTIPADDRESS_TABLE *Table)
BOOLEAN None None.DeleteSharedMemory(_In_ PVOID SharedMem)
NTSTATUS WINAPI ntdll.NtQueryInformationProcess(_In_ HANDLE ProcessHandle,_In_ PROCESSINFOCLASS ProcessInformationClass,_Out_ PVOID ProcessInformation,_In_ ULONG ProcessInformationLength,_Out_opt_ PULONG ReturnLength)
SECURITY_STATUS SEC_Entry secur32.QueryContextAttributes(_In_ PCtxtHandle phContext,_In_ ULONG ulAttribute,_Out_ PVOID pBuffer)
SECURITY_STATUS SEC_Entry secur32.QueryContextAttributesW(_In_ PCtxtHandle phContext,_In_ ULONG ulAttribute,_Out_ PVOID pBuffer)
SECURITY_STATUS SEC_Entry secur32.QueryContextAttributesA(_In_ PCtxtHandle phContext,_In_ ULONG ulAttribute,_Out_ PVOID pBuffer)
PSLIST_ENTRY WINAPI kernel32.InterlockedPushEntrySList(_Inout_ PSLIST_HEADER ListHead,_Inout_ PSLIST_ENTRY ListEntry)
BOOL None None.WlxInitialize(_In_ LPWSTR lpWinsta,_In_ HANDLE hWlx,_In_ PVOID pvReserved,_In_ PVOID pWinlogonFunctions,_Out_ PVOID *pWlxContext)
BOOL WINAPI kernel.GetDisplayAutoRotationPreferences(_Out_ PAR_STATE pState)
VOID NETIOAPI_API_ iphlpapi.FreeMibTable(_In_ PVOID Memory)
HANDLE WINAPI kernel32.CreateBoundaryDescriptor(_In_ LPCTSTR Name,_In_ ULONG Flags)
HANDLE WINAPI kernel32.CreateBoundaryDescriptorW(_In_ LPCTSTR Name,_In_ ULONG Flags)
HANDLE WINAPI kernel32.CreateBoundaryDescriptorA(_In_ LPCTSTR Name,_In_ ULONG Flags)
VOID WINAPI kernel32.WakeByAddressSingle(_In_ PVOID Address)
BOOL WINAPI kernel32.InitializeSynchronizationBarrier(_Out_ LPSYNCHRONIZATION_BARRIER lpBarrier,_In_ LONG lTotalThreads,_In_ LONG lSpinCount)
HRESULT None oleaut32.VarUI4FromR4(_In_ FLOAT fltIn,_Out_ ULONG *pulOut)
PVOID WINAPI kernel32.VirtualAllocFromApp(_In_opt_ PVOID BaseAddress,_In_ SIZE_T Size,_In_ ULONG AllocationType,_In_ ULONG Protection)
NTSTATUS None None.OpenSamUser(_In_ PSECURITY_STRING Name,_In_ SECPKG_NAME_TYPE NameType,_In_ PSECURITY_STRING Prefix,_In_ BOOLEAN AllowGuest,_In_ ULONG Reserved,_Out_ PVOID *UserHandle)
VOID WINAPI kernel32.ReleaseSemaphoreWhenCallbackReturns(_Inout_ PTP_CALLBACK_INSTANCE pci,_In_ HANDLE sem,_In_ DWORD crel)
SECURITY_STATUS None credui.SspiPromptForCredentials(_In_ PCTSTR pszTargetName,_In_ PCREDUI_INFOW pUiInfo,_In_ DWORD dwAuthError,_In_ PCTSTR pszPackage,_In_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE pInputAuthIdentity,_Out_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE *ppAuthIdentity,_Inout_opt_ BOOL *pfSave,_In_ DWORD dwFlags)
SECURITY_STATUS None credui.SspiPromptForCredentialsW(_In_ PCTSTR pszTargetName,_In_ PCREDUI_INFOW pUiInfo,_In_ DWORD dwAuthError,_In_ PCTSTR pszPackage,_In_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE pInputAuthIdentity,_Out_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE *ppAuthIdentity,_Inout_opt_ BOOL *pfSave,_In_ DWORD dwFlags)
SECURITY_STATUS None credui.SspiPromptForCredentialsA(_In_ PCTSTR pszTargetName,_In_ PCREDUI_INFOW pUiInfo,_In_ DWORD dwAuthError,_In_ PCTSTR pszPackage,_In_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE pInputAuthIdentity,_Out_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE *ppAuthIdentity,_Inout_opt_ BOOL *pfSave,_In_ DWORD dwFlags)
DWORD WINAPI kernel32.GetShortPathName(_In_ LPCTSTR lpszLongPath,_Out_ LPTSTR lpszShortPath,_In_ DWORD cchBuffer)
DWORD WINAPI kernel32.GetShortPathNameW(_In_ LPCTSTR lpszLongPath,_Out_ LPTSTR lpszShortPath,_In_ DWORD cchBuffer)
DWORD WINAPI kernel32.GetShortPathNameA(_In_ LPCTSTR lpszLongPath,_Out_ LPTSTR lpszShortPath,_In_ DWORD cchBuffer)
HRESULT WINAPI wofutil.WofWimSuspendEntry(_In_ PCWSTR VolumeName,_In_ LARGE_INTEGER DataSourceId)
HRESULT None oleaut32.VarUI8FromDisp(_In_ IDispatch *pdispIn,_In_ LCID lcid,_Out_ ULONG64 *pi64Out)
HRESULT None oleaut32.VarI4FromCy(_In_ CY cyIn,_Out_ LONG *plOut)
BOOL WINAPI kernel32.PulseEvent(_In_ HANDLE hEvent)
DWORD None None.WlxQueryConsoleSwitchCredentials(_Out_ PWLX_CONSOLESWITCH_CREDENTIALS_INFO_V1_0 pCred)
NTSTATUS None None.SpGetContextToken(_In_ LSA_SEC_HANDLE ContextHandle,_Out_ PHANDLE ImpersonationToken)
BOOL WINAPI advapi32.DuplicateTokenEx(_In_ HANDLE hExistingToken,_In_ DWORD dwDesiredAccess,_In_opt_ LPSECURITY_ATTRIBUTES lpTokenAttributes,_In_ SECURITY_IMPERSONATION_LEVEL ImpersonationLevel,_In_ TOKEN_TYPE TokenType,_Out_ PHANDLE phNewToken)
SIZE_T WINAPI kernel32.VirtualQueryEx(_In_ HANDLE hProcess,_In_opt_ LPCVOID lpAddress,_Out_ PMEMORY_BASIC_INFORMATION lpBuffer,_In_ SIZE_T dwLength)
HRESULT None oleaut32.VarCyFromBool(_In_ VARIANT_BOOL boolIn,_Out_ CY *pcyOut)
HRESULT None oleaut32.GetVarConversionLocaleSetting(_Out_ ULONG *dwFlags)
HRESULT None oleaut32.VarI1FromUI4(_In_ ULONG ulIn,_Out_ CHAR *pcOut)
HRESULT None oleaut32.VarI1FromUI2(_In_ USHORT uiIn,_Out_ CHAR *pcOut)
NTSTATUS None None.SpGetCredentials(_In_ LSA_SEC_HANDLE CredentialHandle,_Out_ PSecBuffer Credentials)
HRESULT None ole32.CoAllowSetForegroundWindow(_In_ IUnknown *pUnk,_In_ LPVOID lpvReserved)
UINT None shell32.DragQueryFile(_In_ HDROP hDrop,_In_ UINT iFile,_Out_ LPTSTR lpszFile,UINT cch None)
UINT None shell32.DragQueryFileW(_In_ HDROP hDrop,_In_ UINT iFile,_Out_ LPTSTR lpszFile,UINT cch None)
UINT None shell32.DragQueryFileA(_In_ HDROP hDrop,_In_ UINT iFile,_Out_ LPTSTR lpszFile,UINT cch None)
BOOL WINAPI advapi32.FindFirstFreeAce(_In_ PACL pAcl,_Out_ LPVOID *pAce)
BOOL None None.WlxStartApplication(_In_ PVOID pWlxContext,_In_ PWSTR pszDesktopName,_In_ PVOID pEnvironment,_In_ PWSTR pszCmdLine)
HRESULT None oleaut32.VarUI1FromUI2(_In_ USHORT uiIn,_Out_ BYTE *pbOut)
DWORD WINAPI iphlpapi.IcmpSendEcho2Ex(_In_ HANDLE IcmpHandle,_In_opt_ HANDLE Event,_In_opt_ PIO_APC_ROUTINE ApcRoutine,_In_opt_ PVOID ApcContext,_In_ IPAddr SourceAddress,_In_ IPAddr DestinationAddress,_In_ LPVOID RequestData,_In_ WORD RequestSize,_In_opt_ PIP_OPTION_INFORMATION RequestOptions,_Out_ LPVOID ReplyBuffer,_In_ DWORD ReplySize,_In_ DWORD Timeout)
INT WSAAPI ws2_32.InetPton(_In_ INT Family,_In_ PCTSTR pszAddrString,_Out_ PVOID pAddrBuf)
INT WSAAPI ws2_32.InetPtonW(_In_ INT Family,_In_ PCTSTR pszAddrString,_Out_ PVOID pAddrBuf)
INT WSAAPI ws2_32.InetPtonA or inet_pton(_In_ INT Family,_In_ PCTSTR pszAddrString,_Out_ PVOID pAddrBuf)
BOOL WINAPI kernel32.CreateHardLinkTransacted(_In_ LPCTSTR lpFileName,_In_ LPCTSTR lpExistingFileName,_Reserved_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.CreateHardLinkTransactedW(_In_ LPCTSTR lpFileName,_In_ LPCTSTR lpExistingFileName,_Reserved_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.CreateHardLinkTransactedA(_In_ LPCTSTR lpFileName,_In_ LPCTSTR lpExistingFileName,_Reserved_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ HANDLE hTransaction)
BOOL WINAPI userenv.CreateEnvironmentBlock(_Out_ LPVOID *lpEnvironment,_In_opt_ HANDLE hToken,_In_ BOOL bInherit)
HRESULT None oleaut32.VarUI4FromDisp(_In_ IDispatch *pdispIn,_In_ LCID lcid,_Out_ ULONG *pulOut)
VOID None None.WlxSetContextPointer(_In_ HANDLE hWlx,_In_ PVOID pWlxContext)
BOOL None shell32.DAD_ShowDragImage(BOOL fShow None)
HRESULT None oleaut32.VarI8FromUI8(_In_ ULONG64 ui64In,_Out_ LONG64 *pi64Out)
SECURITY_STATUS WINAPI secur32.QueryContextAttributesEx(_In_ PCtxtHandle phContext,_In_ ULONG ulAttribute,_Out_ PVOID pBuffer,_In_ ULONG cbBuffer)
SECURITY_STATUS WINAPI secur32.QueryContextAttributesExW(_In_ PCtxtHandle phContext,_In_ ULONG ulAttribute,_Out_ PVOID pBuffer,_In_ ULONG cbBuffer)
SECURITY_STATUS WINAPI secur32.QueryContextAttributesExA(_In_ PCtxtHandle phContext,_In_ ULONG ulAttribute,_Out_ PVOID pBuffer,_In_ ULONG cbBuffer)
HINSTANCE None shell32.FindExecutable(_In_ LPCTSTR lpFile,_In_opt_ LPCTSTR lpDirectory,_Out_ LPTSTR lpResult)
HINSTANCE None shell32.FindExecutableW(_In_ LPCTSTR lpFile,_In_opt_ LPCTSTR lpDirectory,_Out_ LPTSTR lpResult)
HINSTANCE None shell32.FindExecutableA(_In_ LPCTSTR lpFile,_In_opt_ LPCTSTR lpDirectory,_Out_ LPTSTR lpResult)
HRESULT None ole32.IIDFromString(_In_ LPCOLESTR lpsz,_Out_ LPIID lpiid)
HRESULT None oleaut32.VarUI2FromI4(_In_ LONG lIn,_Out_ USHORT *puiOut)
LONG NTAPI ntdll.RtlEthernetStringToAddress(_In_ PCTSTR S,_Out_ PCTSTR *Terminator,_Out_ DL_EUI48 *Addr)
LONG NTAPI ntdll.RtlEthernetStringToAddressW(_In_ PCTSTR S,_Out_ PCTSTR *Terminator,_Out_ DL_EUI48 *Addr)
LONG NTAPI ntdll.RtlEthernetStringToAddressA(_In_ PCTSTR S,_Out_ PCTSTR *Terminator,_Out_ DL_EUI48 *Addr)
HRESULT None shell32.SHCreateShellItemArrayFromIDLists(_In_ UINT cidl,_In_ PCIDLIST_ABSOLUTE_ARRAY rgpidl,_Out_ IShellItemArray **ppsiItemArray)
HRESULT None oleaut32.VarBstrFromI1(_In_ CHAR cIn,_In_ LCID lcid,_In_ ULONG dwFlags,_Out_ BSTR *pbstrOut)
HANDLE WINAPI kernel32.OpenEvent(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpName)
HANDLE WINAPI kernel32.OpenEventW(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpName)
HANDLE WINAPI kernel32.OpenEventA(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpName)
HANDLE WINAPI kernel32.OpenMutex(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpName)
HANDLE WINAPI kernel32.OpenMutexW(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpName)
HANDLE WINAPI kernel32.OpenMutexA(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpName)
BOOL None shlwapi.IsCharAlphaNumericWrapW(_In_ WCHAR ch)
BOOL WINAPI advapi32.CreatePrivateObjectSecurityWithMultipleInheritance(_In_opt_ PSECURITY_DESCRIPTOR ParentDescriptor,_In_opt_ PSECURITY_DESCRIPTOR CreatorDescriptor,_Out_ PSECURITY_DESCRIPTOR *NewDescriptor,_In_opt_ GUID **ObjectTypes,_In_ ULONG GuidCount,_In_ BOOL IsContainerObject,_In_ ULONG AutoInheritFlags,_In_opt_ HANDLE Token,_In_ PGENERIC_MAPPING GenericMapping)
HRESULT None shell32.AssocGetDetailsOfPropKey(_In_ IShellFolder *psf,_In_ PCUITEMID_CHILD pidl,_In_ PROPERTYKEY *pkey,_Out_ VARIANT *pv,_Out_ BOOL *pfFoundPropKey)
HRESULT None oleaut32.VarDecFromDate(_In_ DATE dateIn,_Out_ DECIMAL *pdecOut)
HRESULT None oleaut32.VarR4FromI4(_In_ LONG lIn,_Out_ FLOAT *pfltOut)
VOID WINAPI kernel32.WakeByAddressAll(_In_ PVOID Address)
BOOL None None.WlxGetOption(_In_ HANDLE hWlx,_In_ DWORD Option,_Out_ ULONG_PTR *Value)
BOOL WINAPI authz.AuthzFreeHandle(_In_ AUTHZ_ACCESS_CHECK_RESULTS_HANDLE AuthzHandle)
INT None ws2_32.WSALookupServiceBegin(_In_ LPWSAQUERYSET lpqsRestrictions,_In_ DWORD dwControlFlags,_Out_ LPHANDLE lphLookup)
INT None ws2_32.WSALookupServiceBeginW(_In_ LPWSAQUERYSET lpqsRestrictions,_In_ DWORD dwControlFlags,_Out_ LPHANDLE lphLookup)
INT None ws2_32.WSALookupServiceBeginA(_In_ LPWSAQUERYSET lpqsRestrictions,_In_ DWORD dwControlFlags,_Out_ LPHANDLE lphLookup)
NTSTATUS None None.CallPackage(_In_ PUNICODE_STRING AuthenticationPackage,_In_ PVOID ProtocolSubmitBuffer,_In_ ULONG SubmitBufferLength,_Out_ PVOID *ProtocolReturnBuffer,_Out_ PULONG ReturnBufferLength,_Out_ PNTSTATUS ProtocolStatus)
HRESULT None oleaut32.VarR8FromI4(_In_ LONG lIn,_Out_ DOUBLE *pdblOut)
HRESULT None shell32.SHDoDragDrop(_In_ HWND hwnd,_In_ IDataObject *pdtobj,_In_ IDropSource *pdsrc,_In_ DWORD dwEffect,_Out_ DWORD *pdwEffect)
HANDLE None kernel32.CreateRemoteThreadEx(_In_ HANDLE hProcess,_In_opt_ LPSECURITY_ATTRIBUTES lpThreadAttributes,_In_ SIZE_T dwStackSize,_In_ LPTHREAD_START_ROUTINE lpStartAddress,_In_opt_ LPVOID lpParameter,_In_ DWORD dwCreationFlags,_In_opt_ LPPROC_THREAD_ATTRIBUTE_LIST lpAttributeList,_Out_opt_ LPDWORD lpThreadId)
BOOL WINAPI userenv.CreateUserProfileEx(_In_ PSID pSid,_In_ LPCTSTR lpUserName,_In_opt_ LPCTSTR lpUserHive,_Out_opt_ LPTSTR lpProfileDir,_In_ DWORD dwDirSize,_In_ BOOL bWin9xUpg)
BOOL WINAPI userenv.CreateUserProfileExW(_In_ PSID pSid,_In_ LPCTSTR lpUserName,_In_opt_ LPCTSTR lpUserHive,_Out_opt_ LPTSTR lpProfileDir,_In_ DWORD dwDirSize,_In_ BOOL bWin9xUpg)
BOOL WINAPI userenv.CreateUserProfileExA(_In_ PSID pSid,_In_ LPCTSTR lpUserName,_In_opt_ LPCTSTR lpUserHive,_Out_opt_ LPTSTR lpProfileDir,_In_ DWORD dwDirSize,_In_ BOOL bWin9xUpg)
HRESULT None oleaut32.VarBoolFromDate(_In_ DATE dateIn,_Out_ VARIANT_BOOL *pboolOut)
DWORD None None.NPDeviceMode(_In_ HWND hParent)
NTSTATUS SEC_ENTRY None.SpUserModeInitialize(_In_ ULONG LsaVersion,_Out_ PULONG PackageVersion,_Out_ PSECPKG_USER_FUNCTION_TABLE *ppTables,_Out_ PULONG pcTables)
HRESULT None oleaut32.VarUI4FromStr(_In_ LPCOLESTR strIn,_In_ LCID lcid,_In_ ULONG dwFlags,_Out_ ULONG *pulOut)
HRESULT None oleaut32.VarUI8FromUI1(_In_ BYTE bIn,_Out_ ULONG64 *pi64Out)
uint32 None ramgmtpsprovider.Add([in] string IPAddressRange[],[in] string ComputerName,[in] boolean PassThru,[in] string RoutingDomain,[out] VpnIPAddressRange cmdletOutput)
BOOL WINAPI advapi32.GetFileSecurity(_In_ LPCTSTR lpFileName,_In_ SECURITY_INFORMATION RequestedInformation,_Out_opt_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_ DWORD nLength,_Out_ LPDWORD lpnLengthNeeded)
BOOL WINAPI advapi32.GetFileSecurityW(_In_ LPCTSTR lpFileName,_In_ SECURITY_INFORMATION RequestedInformation,_Out_opt_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_ DWORD nLength,_Out_ LPDWORD lpnLengthNeeded)
BOOL WINAPI advapi32.GetFileSecurityA(_In_ LPCTSTR lpFileName,_In_ SECURITY_INFORMATION RequestedInformation,_Out_opt_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_ DWORD nLength,_Out_ LPDWORD lpnLengthNeeded)
HRESULT None oleaut32.VarI1FromR4(_In_ FLOAT fltIn,_Out_ CHAR *pcOut)
BOOL WINAPI advapi32.GetSecurityDescriptorSacl(_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_Out_ LPBOOL lpbSaclPresent,_Out_ PACL *pSacl,_Out_ LPBOOL lpbSaclDefaulted)
HRESULT None shell32.SHStartNetConnectionDialog(_In_opt_ HWND hwnd,_In_opt_ LPCTSTR pszRemoteName,DWORD dwType None)
HRESULT None shell32.SHStartNetConnectionDialogW(_In_opt_ HWND hwnd,_In_opt_ LPCTSTR pszRemoteName,DWORD dwType None)
HRESULT None shell32.SHStartNetConnectionDialogA(_In_opt_ HWND hwnd,_In_opt_ LPCTSTR pszRemoteName,DWORD dwType None)
DWORD None iphlpapi.DeleteProxyArpEntry(_In_ DWORD dwAddress,_In_ DWORD dwMask,_In_ DWORD dwIfIndex)
DWORD None iphlpapi.GetFriendlyIfIndex(_In_ DWORD IfIndex)
DWORD WINAPI kernel32.GetFullPathName(_In_ LPCTSTR lpFileName,_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer,_Out_ LPTSTR *lpFilePart)
DWORD WINAPI kernel32.GetFullPathNameW(_In_ LPCTSTR lpFileName,_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer,_Out_ LPTSTR *lpFilePart)
DWORD WINAPI kernel32.GetFullPathNameA(_In_ LPCTSTR lpFileName,_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer,_Out_ LPTSTR *lpFilePart)
INT WSAAPI ws2_32.WSAEnumNameSpaceProviders(_Inout_ LPDWORD lpdwBufferLength,_Out_ LPWSANAMESPACE_INFO lpnspBuffer)
INT WSAAPI ws2_32.WSAEnumNameSpaceProvidersW(_Inout_ LPDWORD lpdwBufferLength,_Out_ LPWSANAMESPACE_INFO lpnspBuffer)
INT WSAAPI ws2_32.WSAEnumNameSpaceProvidersA(_Inout_ LPDWORD lpdwBufferLength,_Out_ LPWSANAMESPACE_INFO lpnspBuffer)
HRESULT None oleaut32.VarR8FromStr(_In_ LPCOLESTR strIn,_In_ LCID lcid,_In_ ULONG dwFlags,_Out_ DOUBLE *pdblOut)
HRESULT None oleaut32.VarBoolFromUI1(_In_ BYTE bIn,_Out_ VARIANT_BOOL *pboolOut)
DWORD None iphlpapi.GetIcmpStatisticsEx(_Out_ PMIB_ICMP_EX pStats,_In_ DWORD dwFamily)
SECURITY_STATUS None credui.SspiUnmarshalCredUIContext(_In_ PUCHAR MarshaledCredUIContext,_In_ ULONG MarshaledCredUIContextLength,_Out_ PSEC_WINNT_CREDUI_CONTEXT *CredUIContext)
NTSTATUS NTAPI None.CrediWrite(_In_ PLUID LogonId,_In_ ULONG CredFlags,_In_ PENCRYPTED_CREDENTIALW Credential,_In_ ULONG Flags)
NTSTATUS None None.CancelNotification(_In_ HANDLE NotifyHandle)
HRESULT None oleaut32.VarR4FromUI8(_In_ ULONG64 ui64In,_Out_ FLOAT *pfltOut)
NTSTATUS None None.MapBuffer(_In_ PSecBuffer InputBuffer,_Out_ PSecBuffer OutputBuffer)
HRESULT None oleaut32.VarBoolFromI2(_In_ SHORT sIn,_Out_ VARIANT_BOOL *pboolOut)
VOID WINAPI kernel32.SetThreadpoolWait(_Inout_ PTP_WAIT pwa,_In_opt_ HANDLE h,_In_opt_ PFILETIME pftTimeout)
DWORD WINAPI kernelbase.SleepEx(_In_ DWORD dwMilliseconds,_In_ BOOL bAlertable)
HANDLE WINAPI kernel32.CreateIoCompletionPort(_In_ HANDLE FileHandle,_In_opt_ HANDLE ExistingCompletionPort,_In_ ULONG_PTR CompletionKey,_In_ DWORD NumberOfConcurrentThreads)
HRESULT None oleaut32.VarDecFromUI1(_In_ BYTE bIn,_Out_ DECIMAL *pdecOut)
BOOL WINAPI kernel32.SetPriorityClass(_In_ HANDLE hProcess,_In_ DWORD dwPriorityClass)
SECURITY_STATUS SEC_Entry secur32.DeleteSecurityContext(_In_ PCtxtHandle phContext)
NTSTATUS None cscapi.CscSearchApiGetInterface(_In_ ULONG Version,_In_ ULONG Cookie,_Out_ CCscSearchApiInterface **Interface)
NTSTATUS None None.AllocateClientBuffer(_In_ PLSA_CLIENT_REQUEST ClientRequest,_In_ ULONG LengthRequired,_Out_ PVOID *ClientBaseAddress)
BOOL WINAPI kernel.GetDisplayAutoRotationPreferences(_Out_ ORIENTATION_PREFERENCE *pOrientation)
HRESULT None oleaut32.VarUI4FromUI2(_In_ USHORT uiIn,_Out_ ULONG *pulOut)
LONG WINAPI winscard.SCardGetTransmitCount(_In_ SCARDHANDLE hCard,_Out_ LPDWORD pcTransmitCount)
HRESULT None oleaut32.VarCyFromI1(_In_ CHAR cIn,_Out_ CY *pcyOut)
BOOL None shell32.PathYetAnotherMakeUniqueName(_Out_ PWSTR pszUniqueName,_In_ PCWSTR pszPath,_In_opt_ PCWSTR pszShort,_In_opt_ PCWSTR pszFileSpec)
DWORD None iphlpapi.GetTcpStatisticsEx2(_Out_ PMIB_TCPSTATS2 pStats,_In_ DWORD dwFamily)
BOOL WINAPI kernel32.UmsThreadYield(_In_ PVOID SchedulerParam)
NTSTATUS NTAPI None.CrediUnmarshalandDecodeString(_In_ LPWSTR MarshaledString,_Out_ LPBYTE *Blob,_Out_ ULONG *BlobSize,_Out_ BOOLEAN *IsFailureFatal)
BOOL WINAPI advapi32.AreAnyAccessesGranted(_In_ DWORD GrantedAccess,_In_ DWORD DesiredAccess)
VOID CALLBACK None.WaitOrTimerCallback(_In_ PVOID lpParameter,_In_ BOOLEAN TimerOrWaitFired)
BOOL WINAPI kernel32.SetProcessAffinityUpdateMode(_In_ HANDLE ProcessHandle,_In_ DWORD dwFlags)
BOOL WINAPI authz.AuthzReportSecurityEventFromParams(_In_ DWORD dwFlags,_In_ AUTHZ_SECURITY_EVENT_PROVIDER_HANDLE hEventProvider,_In_ DWORD dwAuditId,_In_opt_ PSID pUserSid,_In_ PAUDIT_PARAMS pParams)
BOOL None shell32.SHChangeNotifyDeregister(ULONG ulID None)
VOID None None.SetThreadpoolCallbackPriority(_Inout_ PTP_CALLBACK_ENVIRON pcbe,_In_ TP_CALLBACK_PRIORITY Priority)
VOID WINAPI kernel32.LeaveCriticalSectionWhenCallbackReturns(_Inout_ PTP_CALLBACK_INSTANCE pci,_Inout_ PCRITICAL_SECTION pcs)
HANDLE WINAPI kernel32.OpenThread(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ DWORD dwThreadId)
VOID WINAPI kernel32.InitializeSRWLock(_Out_ PSRWLOCK SRWLock)
HRESULT None shell32.SHGetMalloc(LPMALLOC *ppMalloc None)
BOOL None kernel32.SetThreadIdealProcessorEx(_In_ HANDLE hThread,_In_ PPROCESSOR_NUMBER lpIdealProcessor,_Out_opt_ PPROCESSOR_NUMBER lpPreviousIdealProcessor)
HRESULT None ole32.CoCancelCall(_In_ DWORD dwThreadId,_In_ ULONG ulTimeout)
BOOL WINAPI advapi32.ObjectCloseAuditAlarm(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ BOOL GenerateOnClose)
BOOL WINAPI advapi32.ObjectCloseAuditAlarmW(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ BOOL GenerateOnClose)
BOOL WINAPI advapi32.ObjectCloseAuditAlarmA(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ BOOL GenerateOnClose)
HRESULT None oleaut32.VarI4FromInt(_In_ INT intIn,_Out_ LONG *plOut)
BOOL WINAPI authz.AuthzInitializeObjectAccessAuditEvent2(_In_ DWORD Flags,_In_ AUTHZ_AUDIT_EVENT_TYPE_HANDLE hAuditEventType,_In_ PWSTR szOperationType,_In_ PWSTR szObjectType,_In_ PWSTR szObjectName,_In_ PWSTR szAdditionalInfo,_In_ PWSTR szAdditionalInfo2,_Out_ PAUTHZ_AUDIT_EVENT_HANDLE phAuditEvent,_In_ DWORD dwAdditionalParameterCount)
PSLIST_ENTRY WINAPI kernel32.InterlockedFlushSList(_Inout_ PSLIST_HEADER ListHead)
DWORD None credui.CredUIReadSSOCredW(_In_ PCWSTR pszRealm,_Out_ PWSTR *ppszUsername)
VOID None None.UmsSchedulerProc(_In_ UMS_SCHEDULER_REASON Reason,_In_ ULONG_PTR ActivationPayload,_In_ PVOID SchedulerParam)
BOOL None None.WlxSetReturnDesktop(_In_ HANDLE hWlx,_In_ PWLX_DESKTOP pDesktop)
HRESULT None oleaut32.VarUI2FromUI4(_In_ ULONG ulIn,_Out_ USHORT *puiOut)
NTSTATUS WINAPI ntdll.RtlConvertSidToUnicodeString(_Out_ PUNICODE_STRING UnicodeString,_In_ PSID Sid,_In_ BOOLEAN AllocateDestinationString)
DWORD None iphlpapi.GetUdpTable(_Out_ PMIB_UDPTABLE pUdpTable,_Inout_ PDWORD pdwSize,_In_ BOOL bOrder)
BOOL WINAPI advapi32.EqualSid(_In_ PSID pSid1,_In_ PSID pSid2)
BOOL None shell32.ILIsEqual(_In_ PCIDLIST_ABSOLUTE pidl1,_In_ PCIDLIST_ABSOLUTE pidl2)
BOOL None advapi32.CredWrite(_In_ PCREDENTIAL Credential,_In_ DWORD Flags)
BOOL None advapi32.CredWriteW(_In_ PCREDENTIAL Credential,_In_ DWORD Flags)
BOOL None advapi32.CredWriteA(_In_ PCREDENTIAL Credential,_In_ DWORD Flags)
HRESULT None oleaut32.VarR8FromCy(_In_ CY cyIn,DOUBLE *pdblOut None)
VOID WINAPI advapi32.QuerySecurityAccessMask(_In_ SECURITY_INFORMATION SecurityInformation,_Out_ LPDWORD DesiredAccess)
BOOL WINAPI kernel32.InitOnceExecuteOnce(_Inout_ PINIT_ONCE InitOnce,_In_ PINIT_ONCE_FN InitFn,_Inout_opt_ PVOID Parameter,_Out_opt_ LPVOID *Context)
NTSTATUS None None.SpImportSecurityContext(_In_ PSecBuffer pPackedContext,_In_ HANDLE Token,_Out_ PLSA_SEC_HANDLE phContext)
NTSTATUS WINAPI advapi32.CredMarshalTargetInfo(_In_ PCREDENTIAL_TARGET_INFORMATIONW InTargetInfo,_Out_ PUSHORT *Buffer,PULONG BufferSize None)
VOID None None.SetThreadpoolCallbackCleanupGroup(_Inout_ PTP_CALLBACK_ENVIRON pcbe,_In_ PTP_CLEANUP_GROUP ptpcg,_In_opt_ PTP_CLEANUP_GROUP_CANCEL_CALLBACK pfng)
SECURITY_STATUS None sspicli.SspiZeroAuthIdentity(_In_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE AuthData)
DWORD WINAPI credui.CredUIConfirmCredentials(_In_ PCTSTR pszTargetName,_In_ BOOL bConfirm)
DWORD WINAPI credui.CredUIConfirmCredentialsW(_In_ PCTSTR pszTargetName,_In_ BOOL bConfirm)
DWORD WINAPI credui.CredUIConfirmCredentialsA(_In_ PCTSTR pszTargetName,_In_ BOOL bConfirm)
BOOL WINAPI None.WlxGetConsoleSwitchCredentials(_In_ PVOID pWlxContext,_Out_ PVOID pInfo)
BOOL WINAPI kernel32.ExecuteUmsThread(_Inout_ PUMS_CONTEXT UmsThread)
PVOID WINAPI advapi32.FreeSid(_In_ PSID pSid)
DWORD None None.NPOpenEnum(_In_ DWORD dwScope,_In_ DWORD dwType,_In_ DWORD dwUsage,_In_ LPNETRESOURCE lpNetResource,_Out_ LPHANDLE lphEnum)
INT None mswsock.GetService(_In_ DWORD dwNameSpace,_In_ PGUID lpGuid,_In_ LPTSTR lpServiceName,_In_ DWORD dwProperties,_Out_ LPVOID lpBuffer,_Inout_ LPDWORD lpdwBufferSize,_In_opt_ LPSERVICE_ASYNC_INFO lpServiceAsyncInfo)
INT None mswsock.GetServiceW(_In_ DWORD dwNameSpace,_In_ PGUID lpGuid,_In_ LPTSTR lpServiceName,_In_ DWORD dwProperties,_Out_ LPVOID lpBuffer,_Inout_ LPDWORD lpdwBufferSize,_In_opt_ LPSERVICE_ASYNC_INFO lpServiceAsyncInfo)
INT None mswsock.GetServiceA(_In_ DWORD dwNameSpace,_In_ PGUID lpGuid,_In_ LPTSTR lpServiceName,_In_ DWORD dwProperties,_Out_ LPVOID lpBuffer,_Inout_ LPDWORD lpdwBufferSize,_In_opt_ LPSERVICE_ASYNC_INFO lpServiceAsyncInfo)
NTSTATUS None None.CallPackageEx(_In_ PUNICODE_STRING AuthenticationPackage,_In_ PVOID ClientBufferBase,_In_ PVOID ProtocolSubmitBuffer,_In_ ULONG SubmitBufferLength,_Out_ PVOID *ProtocolReturnBuffer,_Out_ PULONG ReturnBufferLength,_Out_ PNTSTATUS ProtocolStatus)
LONG None scarddlg.GetOpenCardName(_In_ LPOPENCARDNAME pDlgStruc)
LONG None scarddlg.GetOpenCardNameW(_In_ LPOPENCARDNAME pDlgStruc)
LONG None scarddlg.GetOpenCardNameA(_In_ LPOPENCARDNAME pDlgStruc)
LONG WINAPI winscard.SCardStatus(_In_ SCARDHANDLE hCard,_Out_ LPTSTR szReaderName,_Inout_opt_ LPDWORD pcchReaderLen,_Out_opt_ LPDWORD pdwState,_Out_opt_ LPDWORD pdwProtocol,_Out_ LPBYTE pbAtr,_Inout_opt_ LPDWORD pcbAtrLen)
LONG WINAPI winscard.SCardStatusW(_In_ SCARDHANDLE hCard,_Out_ LPTSTR szReaderName,_Inout_opt_ LPDWORD pcchReaderLen,_Out_opt_ LPDWORD pdwState,_Out_opt_ LPDWORD pdwProtocol,_Out_ LPBYTE pbAtr,_Inout_opt_ LPDWORD pcbAtrLen)
LONG WINAPI winscard.SCardStatusA(_In_ SCARDHANDLE hCard,_Out_ LPTSTR szReaderName,_Inout_opt_ LPDWORD pcchReaderLen,_Out_opt_ LPDWORD pdwState,_Out_opt_ LPDWORD pdwProtocol,_Out_ LPBYTE pbAtr,_Inout_opt_ LPDWORD pcbAtrLen)
LONG WINAPI winscard.SCardReadCache(_In_ SCARDCONTEXT hContext,_In_ UUID *CardIdentifier,_In_ DWORD FreshnessCounter,_In_ LPTSTR LookupName,_Out_ PBYTE Data,_Out_ DWORD *DataLen)
LONG WINAPI winscard.SCardReadCacheW(_In_ SCARDCONTEXT hContext,_In_ UUID *CardIdentifier,_In_ DWORD FreshnessCounter,_In_ LPTSTR LookupName,_Out_ PBYTE Data,_Out_ DWORD *DataLen)
LONG WINAPI winscard.SCardReadCacheA(_In_ SCARDCONTEXT hContext,_In_ UUID *CardIdentifier,_In_ DWORD FreshnessCounter,_In_ LPTSTR LookupName,_Out_ PBYTE Data,_Out_ DWORD *DataLen)
HRESULT None oleaut32.VarDecFromI4(_In_ LONG lIn,_Out_ DECIMAL *pdecOut)
BOOL WINAPI kernel32.InitOnceComplete(_Inout_ LPINIT_ONCE lpInitOnce,_In_ DWORD dwFlags,_In_opt_ LPVOID lpContext)
HANDLE WINAPI kernel32.CreateMutexEx(_In_opt_ LPSECURITY_ATTRIBUTES lpMutexAttributes,_In_opt_ LPCTSTR lpName,_In_ DWORD dwFlags,_In_ DWORD dwDesiredAccess)
HANDLE WINAPI kernel32.CreateMutexExW(_In_opt_ LPSECURITY_ATTRIBUTES lpMutexAttributes,_In_opt_ LPCTSTR lpName,_In_ DWORD dwFlags,_In_ DWORD dwDesiredAccess)
HANDLE WINAPI kernel32.CreateMutexExA(_In_opt_ LPSECURITY_ATTRIBUTES lpMutexAttributes,_In_opt_ LPCTSTR lpName,_In_ DWORD dwFlags,_In_ DWORD dwDesiredAccess)
LONG WINAPI winscard.SCardIntroduceReader(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReaderName,_In_ LPCTSTR szDeviceName)
LONG WINAPI winscard.SCardIntroduceReaderW(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReaderName,_In_ LPCTSTR szDeviceName)
LONG WINAPI winscard.SCardIntroduceReaderA(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReaderName,_In_ LPCTSTR szDeviceName)
HANDLE WINAPI kernel32.OpenPrivateNamespace(_In_ LPVOID lpBoundaryDescriptor,_In_ LPCTSTR lpAliasPrefix)
HANDLE WINAPI kernel32.OpenPrivateNamespaceW(_In_ LPVOID lpBoundaryDescriptor,_In_ LPCTSTR lpAliasPrefix)
HANDLE WINAPI kernel32.OpenPrivateNamespaceA(_In_ LPVOID lpBoundaryDescriptor,_In_ LPCTSTR lpAliasPrefix)
BOOL WINAPI advapi32.AddConditionalAce(_Inout_ PACL pAcl,_In_ DWORD dwAceRevision,_In_ DWORD AceFlags,_In_ UCHAR AceType,_In_ DWORD AccessMask,_In_ PSID pSid,_In_ PWCHAR ConditionStr,_Out_ DWORD *ReturnLength)
PIDLIST_ABSOLUTE None shell32.SHBrowseForFolder(_In_ LPBROWSEINFO lpbi)
PIDLIST_ABSOLUTE None shell32.SHBrowseForFolderW(_In_ LPBROWSEINFO lpbi)
PIDLIST_ABSOLUTE None shell32.SHBrowseForFolderA(_In_ LPBROWSEINFO lpbi)
STDAPI None shcore.UnregisterScaleChangeEvent(_In_ DWORD_PTR dwCookie)
LPVOID WINAPI kernelbase.TlsGetValue(_In_ DWORD dwTlsIndex)
NT_STATUS None None.SspiDecryptAuthIdentityEx(_In_ ULONG Options,_Inout_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE EncryptedAuthData)
BOOL WINAPI advapi32.CredIsProtected(_In_ LPTSTR pszProtectedCredentials,_Out_ CRED_PROTECTION_TYPE *pProtectionType)
BOOL WINAPI advapi32.CredIsProtectedW(_In_ LPTSTR pszProtectedCredentials,_Out_ CRED_PROTECTION_TYPE *pProtectionType)
BOOL WINAPI advapi32.CredIsProtectedA(_In_ LPTSTR pszProtectedCredentials,_Out_ CRED_PROTECTION_TYPE *pProtectionType)
BOOL None kernel32.GetNumaNodeNumberFromHandle(_In_ HANDLE hFile,_Out_ PUSHORT NodeNumber)
LONG WINAPI winscard.SCardSetAttrib(_In_ SCARDHANDLE hCard,_In_ DWORD dwAttrId,_In_ LPCBYTE pbAttr,_In_ DWORD cbAttrLen)
BOOL None advapi32.CredReadDomainCredentials(_In_ PCREDENTIAL_TARGET_INFORMATION TargetInfo,_In_ DWORD Flags,_Out_ DWORD *Count,_Out_ PCREDENTIAL **Credentials)
BOOL None advapi32.CredReadDomainCredentialsW(_In_ PCREDENTIAL_TARGET_INFORMATION TargetInfo,_In_ DWORD Flags,_Out_ DWORD *Count,_Out_ PCREDENTIAL **Credentials)
BOOL None advapi32.CredReadDomainCredentialsA(_In_ PCREDENTIAL_TARGET_INFORMATION TargetInfo,_In_ DWORD Flags,_Out_ DWORD *Count,_Out_ PCREDENTIAL **Credentials)
HRESULT None oleaut32.VarDateFromStr(_In_ LPCOLESTR strIn,_In_ LCID lcid,_In_ ULONG dwFlags,_Out_ DATE *pdateOut)
BOOL WINAPI kernel32.FindClose(_Inout_ HANDLE hFindFile)
BOOL WINAPI advapi32.AccessCheckByType(_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_opt_ PSID PrincipalSelfSid,_In_ HANDLE ClientToken,_In_ DWORD DesiredAccess,_Inout_opt_ POBJECT_TYPE_LIST ObjectTypeList,_In_ DWORD ObjectTypeListLength,_In_ PGENERIC_MAPPING GenericMapping,_Out_opt_ PPRIVILEGE_SET PrivilegeSet,_Inout_ LPDWORD PrivilegeSetLength,_Out_ LPDWORD GrantedAccess,_Out_ LPBOOL AccessStatus)
HANDLE WINAPI kernel32.CreateEventEx(_In_opt_ LPSECURITY_ATTRIBUTES lpEventAttributes,_In_opt_ LPCTSTR lpName,_In_ DWORD dwFlags,_In_ DWORD dwDesiredAccess)
HANDLE WINAPI kernel32.CreateEventExW(_In_opt_ LPSECURITY_ATTRIBUTES lpEventAttributes,_In_opt_ LPCTSTR lpName,_In_ DWORD dwFlags,_In_ DWORD dwDesiredAccess)
HANDLE WINAPI kernel32.CreateEventExA(_In_opt_ LPSECURITY_ATTRIBUTES lpEventAttributes,_In_opt_ LPCTSTR lpName,_In_ DWORD dwFlags,_In_ DWORD dwDesiredAccess)
BOOL __inline None.IDListContainerIsConsistent(_In_ PCUIDLIST_RELATIVE pidl,_In_ UINT cbAlloc)
BOOL None None.WlxQueryTsLogonCredentials(_Out_ PWLX_CLIENT_CREDENTIALS_INFO_V2_0 pCred)
NTSTATUS WINAPI None.SpValidateTargetInfoFn(_In_opt_ PLSA_CLIENT_REQUEST ClientRequest,_In_ PVOID ProtocolSubmitBuffer,_In_ PVOID ClientBufferBase,_In_ ULONG SubmitBufferLength,_In_ PSECPKG_TARGETINFO TargetInfo)
HRESULT None oleaut32.VarUI2FromCy(_In_ CY cyIn,_Out_ USHORT *puiOut)
HRESULT None oleaut32.VarR8FromR4(_In_ FLOAT fltIn,_Out_ DOUBLE *pdblOut)
NTSTATUS None None.SpInitialize(_In_ ULONG_PTR PackageId,_In_ PSECPKG_PARAMETERS Parameters,_In_ PLSA_SECPKG_FUNCTION_TABLE FunctionTable)
HINSTANCE None shell32.ShellExecute(_In_opt_ HWND hwnd,_In_opt_ LPCTSTR lpOperation,_In_ LPCTSTR lpFile,_In_opt_ LPCTSTR lpParameters,_In_opt_ LPCTSTR lpDirectory,_In_ INT nShowCmd)
HINSTANCE None shell32.ShellExecuteW(_In_opt_ HWND hwnd,_In_opt_ LPCTSTR lpOperation,_In_ LPCTSTR lpFile,_In_opt_ LPCTSTR lpParameters,_In_opt_ LPCTSTR lpDirectory,_In_ INT nShowCmd)
HINSTANCE None shell32.ShellExecuteA(_In_opt_ HWND hwnd,_In_opt_ LPCTSTR lpOperation,_In_ LPCTSTR lpFile,_In_opt_ LPCTSTR lpParameters,_In_opt_ LPCTSTR lpDirectory,_In_ INT nShowCmd)
HRESULT None oleaut32.SetVarConversionLocaleSetting(_In_ ULONG dwFlags)
NTSTATUS None secur32.LsaFreeReturnBuffer(_In_ PVOID Buffer)
VOID WINAPI advapi32.AuditFree(_In_ PVOID Buffer)
VOID None None.WlxDisplayLockedNotice(_In_ PVOID pWlxContext)
BOOL WINAPI kernel32.SetEnvironmentVariable(_In_ LPCTSTR lpName,_In_opt_ LPCTSTR lpValue)
BOOL WINAPI kernel32.SetEnvironmentVariableW(_In_ LPCTSTR lpName,_In_opt_ LPCTSTR lpValue)
BOOL WINAPI kernel32.SetEnvironmentVariableA(_In_ LPCTSTR lpName,_In_opt_ LPCTSTR lpValue)
HINSTANCE None shlwapi.MLLoadLibrary(_In_ LPCTSTR lpszLibFileName,_In_ HMODULE hModule,_In_ DWORD dwCrossCodePage)
HINSTANCE None shlwapi.MLLoadLibraryW(_In_ LPCTSTR lpszLibFileName,_In_ HMODULE hModule,_In_ DWORD dwCrossCodePage)
HINSTANCE None shlwapi.MLLoadLibraryA(_In_ LPCTSTR lpszLibFileName,_In_ HMODULE hModule,_In_ DWORD dwCrossCodePage)
BOOL None kernel32.GetLogicalProcessorInformationEx(_In_ LOGICAL_PROCESSOR_RELATIONSHIP RelationshipType,_Out_opt_ PSYSTEM_LOGICAL_PROCESSOR_INFORMATION_EX Buffer,_Inout_ PDWORD ReturnedLength)
HRESULT None oleaut32.VarUI1FromCy(_In_ CY cyIn,_Out_ BYTE *pbOut)
HRESULT None oleaut32.VarI4FromR8(_In_ DOUBLE dblIn,_Out_ LONG *plOut)
HRESULT None oleaut32.VarUI4FromUI1(_In_ BYTE bIn,_Out_ ULONG *pulOut)
SECURITY_STATUS None sspicli.SspiEncodeStringsAsAuthIdentity(_In_ PCWSTR pszUserName,_In_ PCWSTR pszDomainName,_In_ PCWSTR pszPackedCredentialsString,_Out_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE *ppAuthIdentity)
VOID WINAPI kernel32.ReleaseMutexWhenCallbackReturns(_Inout_ PTP_CALLBACK_INSTANCE pci,_In_ HANDLE mut)
BOOL WINAPI kernel32.GetOverlappedResult(_In_ HANDLE hFile,_In_ LPOVERLAPPED lpOverlapped,_Out_ LPDWORD lpNumberOfBytesTransferred,_In_ BOOL bWait)
HRESULT None oleaut32.VarDecFromStr(_In_ LPCOLESTR strIn,_In_ LCID lcid,_In_ ULONG dwFlags,_Out_ DECIMAL *pdecOut)
SECURITY_STATUS SEC_Entry secur32.AcceptSecurityContext(_In_opt_ PCredHandle phCredential,_Inout_ PCtxtHandle phContext,_In_opt_ PSecBufferDesc pInput,_In_ ULONG fContextReq,_In_ ULONG TargetDataRep,_Inout_opt_ PCtxtHandle phNewContext,_Inout_opt_ PSecBufferDesc pOutput,_Out_ PULONG pfContextAttr,_Out_opt_ PTimeStamp ptsTimeStamp)
BOOL WINAPI kernel32.GetNumaHighestNodeNumber(_Out_ PULONG HighestNodeNumber)
DWORD None iphlpapi.GetNumberOfInterfaces(_Out_ PDWORD pdwNumIf)
HRESULT None oleaut32.VarR8FromBool(_In_ VARIANT_BOOL boolIn,_Out_ DOUBLE *pdblOut)
BOOL None None.WlxRemoveStatusMessage(_In_ PVOID pWlxContext)
BOOL WINAPI advapi32.ConvertStringSidToSid(_In_ LPCTSTR StringSid,_Out_ PSID *Sid)
BOOL WINAPI advapi32.ConvertStringSidToSidW(_In_ LPCTSTR StringSid,_Out_ PSID *Sid)
BOOL WINAPI advapi32.ConvertStringSidToSidA(_In_ LPCTSTR StringSid,_Out_ PSID *Sid)
NTSTATUS NTAPI None.OpenTokenByLogonId(_In_ PLUID LogonId,_Out_ HANDLE *RetTokenHandle)
ULONG WINAPI iphlpapi.DeletePersistentTcpPortReservation(_In_ USHORT StartPort,_In_ USHORT NumberOfPorts)
NTSTATUS None secur32.LsaCallAuthenticationPackage(_In_ HANDLE LsaHandle,_In_ ULONG AuthenticationPackage,_In_ PVOID ProtocolSubmitBuffer,_In_ ULONG SubmitBufferLength,_Out_ PVOID *ProtocolReturnBuffer,_Out_ PULONG *ReturnBufferLength,_Out_ PNTSTATUS ProtocolStatus)
LONG WINAPI winscard.SCardLocateCards(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR mszCards,_Inout_ LPSCARD_READERSTATE rgReaderStates,_In_ DWORD cReaders)
LONG WINAPI winscard.SCardLocateCardsW(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR mszCards,_Inout_ LPSCARD_READERSTATE rgReaderStates,_In_ DWORD cReaders)
LONG WINAPI winscard.SCardLocateCardsA(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR mszCards,_Inout_ LPSCARD_READERSTATE rgReaderStates,_In_ DWORD cReaders)
HRESULT None shell32.SHSetDefaultProperties(_In_opt_ HWND hwnd,_In_ IShellItem *psi,DWORD dwFileOpFlags None,_In_opt_ IFileOperationProgressSink *pfops)
DWORD None None.NPFMXGetPermCaps(_In_ LPTSTR lpDriveName)
VOID None None.FreeHeap(_Inout_ PVOID Base)
HRESULT None oleaut32.VarI1FromI4(_In_ LONG lIn,_Out_ CHAR *pcOut)
NETIOAPI_API None iphlpapi.NotifyIpInterfaceChange(_In_ ADDRESS_FAMILY Family,_In_ PIPINTERFACE_CHANGE_CALLBACK Callback,_In_ PVOID CallerContext,_In_ BOOLEAN InitialNotification,_Inout_ HANDLE *NotificationHandle)
NETIOAPI_API None iphlpapi.GetIfEntry2(PMIB_IF_ROW2 Row None)
VOID None None.LsaApLogonTerminated(_In_ PLUID LogonId)
BOOL None shell32.DragQueryPoint(_In_ HDROP hDrop,_Out_ POINT *lppt)
DWORD WINAPI kernel32.QueueUserAPC(_In_ PAPCFUNC pfnAPC,_In_ HANDLE hThread,_In_ ULONG_PTR dwData)
NTSTATUS None None.FreeClientBuffer(_In_ PLSA_CLIENT_REQUEST ClientRequest,_In_ PVOID ClientBaseAddress)
HRESULT None oleaut32.VarDecFromUI8(_In_ ULONG64 ui64In,_Out_ DECIMAL *pdecOut)
UINT None shell32.ILGetSize(_In_opt_ PCUIDLIST_RELATIVE pidl)
BOOL WINAPI kernel32.CreateUmsCompletionList(_Out_ PUMS_COMPLETION_LIST *UmsCompletionList)
HRESULT None ole32.CoInvalidateRemoteMachineBindings(_In_ LPOLESTR pszMachineName)
BOOL None None.WlxIsLogoffOk(_In_ PVOID pWlxContext)
NTSTATUS None secur32.LsaRegisterLogonProcess(_In_ PLSA_STRING LogonProcessName,_Out_ PHANDLE LsaHandle,_Out_ PLSA_OPERATIONAL_MODE SecurityMode)
HRESULT None oleaut32.VarR8FromUI1(_In_ BYTE bIn,_Out_ DOUBLE *pdblOut)
HANDLE WINAPI kernel32.CreateWaitableTimer(_In_opt_ LPSECURITY_ATTRIBUTES lpTimerAttributes,_In_ BOOL bManualReset,_In_opt_ LPCTSTR lpTimerName)
HANDLE WINAPI kernel32.CreateWaitableTimerW(_In_opt_ LPSECURITY_ATTRIBUTES lpTimerAttributes,_In_ BOOL bManualReset,_In_opt_ LPCTSTR lpTimerName)
HANDLE WINAPI kernel32.CreateWaitableTimerA(_In_opt_ LPSECURITY_ATTRIBUTES lpTimerAttributes,_In_ BOOL bManualReset,_In_opt_ LPCTSTR lpTimerName)
HRESULT WINAPI wofutil.WofWimRemoveEntry(_In_ PCWSTR VolumeName,_In_ LARGE_INTEGER DataSourceId)
HANDLE WINAPI kernel32.CreateSemaphoreEx(_In_opt_ LPSECURITY_ATTRIBUTES lpSemaphoreAttributes,_In_ LONG lInitialCount,_In_ LONG lMaximumCount,_In_opt_ LPCTSTR lpName,_Reserved_ DWORD dwFlags,_In_ DWORD dwDesiredAccess)
HANDLE WINAPI kernel32.CreateSemaphoreExW(_In_opt_ LPSECURITY_ATTRIBUTES lpSemaphoreAttributes,_In_ LONG lInitialCount,_In_ LONG lMaximumCount,_In_opt_ LPCTSTR lpName,_Reserved_ DWORD dwFlags,_In_ DWORD dwDesiredAccess)
HANDLE WINAPI kernel32.CreateSemaphoreExA(_In_opt_ LPSECURITY_ATTRIBUTES lpSemaphoreAttributes,_In_ LONG lInitialCount,_In_ LONG lMaximumCount,_In_opt_ LPCTSTR lpName,_Reserved_ DWORD dwFlags,_In_ DWORD dwDesiredAccess)
NTSTATUS None None.SpQueryCredentialsAttributes(_In_ LSA_SEC_HANDLE CredentialHandle,_In_ ULONG CredentialAttribute,_Out_ PVOID Buffer)
HRESULT None oleaut32.VarDateFromI2(_In_ SHORT sIn,_Out_ DATE *pdateOut)
HRESULT None shell32.SHCreateShellFolderViewEx(_In_ CSFV *pcsfv,_Out_ IShellView **ppsv)
HRESULT None oleaut32.VarR8FromUI8(_In_ ULONG64 ui64In,_Out_ DOUBLE *pdblOut)
NTSTATUS NTAPI advapi32.LsaQueryForestTrustInformation(_In_ LSA_HANDLE PolicyHandle,_In_ PLSA_UNICODE_STRING TrustedDomainName,_Out_ PLSA_FOREST_TRUST_INFORMATION *ForestTrustInfo)
BOOL WINAPI advapi32.SetFileSecurity(_In_ LPCTSTR lpFileName,_In_ SECURITY_INFORMATION SecurityInformation,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor)
BOOL WINAPI advapi32.SetFileSecurityW(_In_ LPCTSTR lpFileName,_In_ SECURITY_INFORMATION SecurityInformation,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor)
BOOL WINAPI advapi32.SetFileSecurityA(_In_ LPCTSTR lpFileName,_In_ SECURITY_INFORMATION SecurityInformation,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor)
BOOL WINAPI kernel.GetDisplayAutoRotationPreferencesByProcessId(_In_ DWORD *dwProcessId,_Out_ ORIENTATION_PREFERENCE *pOrientation,_Out_ BOOL *fRotateScreen)
HRESULT None oleaut32.VarCyFromI2(_In_ SHORT sIn,_Out_ CY *pcyOut)
HRESULT WINOLEAPI ole32.CoAllowUnmarshalerCLSID(_In_ REFCLSID clsid)
BOOL WINAPI kernel32.GetProcessHandleCount(_In_ HANDLE hProcess,_Inout_ PDWORD pdwHandleCount)
BOOL WINAPI iphlpapi.CancelSecurityHealthChangeNotify(LPOVERLAPPED notifyOverlapped None)
NTSTATUS None None.SpExportSecurityContext(_In_ LSA_SEC_HANDLE phContext,_In_ ULONG fFlags,_Out_ PSecBuffer pPackedContext,_Out_ PHANDLE pToken)
DWORD None None.NPGetPropertyText(_In_ DWORD iButton,_In_ DWORD nPropSel,_In_ LPTSTR lpName,_Out_ LPTSTR lpButtonName,_Inout_ DWORD nButtonNameLen,_In_ DWORD nType)
HRESULT None oleaut32.VarI8FromUI4(_In_ ULONG ulIn,_Out_ LONG64 *pi64Out)
BOOL WINAPI kernel32.DeleteTimerQueueTimer(_In_opt_ HANDLE TimerQueue,_In_ HANDLE Timer,_In_opt_ HANDLE CompletionEvent)
BOOL WINAPI advapi32.ConvertStringSecurityDescriptorToSecurityDescriptor(_In_ LPCTSTR StringSecurityDescriptor,_In_ DWORD StringSDRevision,_Out_ PSECURITY_DESCRIPTOR *SecurityDescriptor,_Out_ PULONG SecurityDescriptorSize)
BOOL WINAPI advapi32.ConvertStringSecurityDescriptorToSecurityDescriptorW(_In_ LPCTSTR StringSecurityDescriptor,_In_ DWORD StringSDRevision,_Out_ PSECURITY_DESCRIPTOR *SecurityDescriptor,_Out_ PULONG SecurityDescriptorSize)
BOOL WINAPI advapi32.ConvertStringSecurityDescriptorToSecurityDescriptorA(_In_ LPCTSTR StringSecurityDescriptor,_In_ DWORD StringSDRevision,_Out_ PSECURITY_DESCRIPTOR *SecurityDescriptor,_Out_ PULONG SecurityDescriptorSize)
VOID WINAPI kernel32.ReleaseSRWLockShared(_Inout_ PSRWLOCK SRWLock)
VOID None advapi32.CredFree(_In_ PVOID Buffer)
DWORD None None.NPGetResourceInformation(_In_ LPNETRESOURCE lpNetResource,_Out_ LPVOID lpBuffer,_Inout_ LPDWORD lpcbBuffer,_Out_ LPTSTR *lplpSystem)
HRESULT None oleaut32.VarI1FromI2(_In_ SHORT uiIn,_Out_ CHAR *pcOut)
LONG NTAPI ntdll.RtlIpv6StringToAddress(_In_ PCTSTR S,_Out_ PCTSTR *Terminator,_Out_ IN6_ADDR *Addr)
LONG NTAPI ntdll.RtlIpv6StringToAddressW(_In_ PCTSTR S,_Out_ PCTSTR *Terminator,_Out_ IN6_ADDR *Addr)
LONG NTAPI ntdll.RtlIpv6StringToAddressA(_In_ PCTSTR S,_Out_ PCTSTR *Terminator,_Out_ IN6_ADDR *Addr)
NTSTATUS None None.GetClientInfo(_Out_ PSECPKG_CLIENT_INFO ClientInfo)
BOOL None user32.SetWindowContextHelpId(HWND hwnd None,DWORD dwContextHelpId None)
SECURITY_STATUS SEC_Entry secur32.ImportSecurityContext(_In_ PSECURITY_STRING *pszPackage,_In_ PSecBuffer pPackedContext,_In_opt_ HANDLE pToken,_Out_ PCtxtHandle phContext)
SECURITY_STATUS SEC_Entry secur32.ImportSecurityContextW(_In_ PSECURITY_STRING *pszPackage,_In_ PSecBuffer pPackedContext,_In_opt_ HANDLE pToken,_Out_ PCtxtHandle phContext)
SECURITY_STATUS SEC_Entry secur32.ImportSecurityContextA(_In_ PSECURITY_STRING *pszPackage,_In_ PSecBuffer pPackedContext,_In_opt_ HANDLE pToken,_Out_ PCtxtHandle phContext)
HRESULT None oleaut32.VarUI8FromDate(_In_ DATE dateIn,_Out_ ULONG64 *pi64Out)
BOOL WINAPI userenv.ExpandEnvironmentStringsForUser(_In_opt_ HANDLE hToken,_In_ LPCTSTR lpSrc,_Out_ LPTSTR lpDest,_In_ DWORD dwSize)
BOOL WINAPI userenv.ExpandEnvironmentStringsForUserW(_In_opt_ HANDLE hToken,_In_ LPCTSTR lpSrc,_Out_ LPTSTR lpDest,_In_ DWORD dwSize)
BOOL WINAPI userenv.ExpandEnvironmentStringsForUserA(_In_opt_ HANDLE hToken,_In_ LPCTSTR lpSrc,_Out_ LPTSTR lpDest,_In_ DWORD dwSize)
LONG WINAPI winscard.SCardIsValidContext(_In_ SCARDCONTEXT hContext)
BOOL None shell32.SHGetPathFromIDListEx(_In_ PCIDLIST_ABSOLUTE pidl,_Out_ PWSTR pszPath,DWORD cchPath None,GPFIDL_FLAGS uOpts None)
VOID WINAPI kernel32.WakeAllConditionVariable(_Inout_ PCONDITION_VARIABLE ConditionVariable)
VOID WINAPI advapi32.MapGenericMask(_Inout_ PDWORD AccessMask,_In_ PGENERIC_MAPPING GenericMapping)
VOID WINAPI kernel32.WaitForThreadpoolIoCallbacks(_Inout_ PTP_IO pio,_In_ BOOL fCancelPendingCallbacks)
BOOL WINAPI kernel32.QueryUmsThreadInformation(_In_ PUMS_CONTEXT UmsThread,_In_ UMS_THREAD_INFO_CLASS UmsThreadInfoClass,_Out_ PVOID UmsThreadInformation,_In_ ULONG UmsThreadInformationLength,_Out_opt_ PULONG ReturnLength)
NTSTATUS NTAPI advapi32.LsaSetDomainInformationPolicy(_In_ LSA_HANDLE PolicyHandle,_In_ POLICY_DOMAIN_INFORMATION_CLASS InformationClass,_In_ PVOID Buffer)
BOOL WINAPI avrt.AvRtJoinThreadOrderingGroup(_Out_ PHANDLE Context,_In_ GUID *ThreadOrderingGuid,_In_ BOOL Before)
BOOL None None.WlxQueryInetConnectorCredentials(_Out_ PWLX_CLIENT_CREDENTIALS_INFO_V1_0 pCred)
BOOL WINAPI advapi32.ObjectOpenAuditAlarm(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ LPTSTR ObjectTypeName,_In_opt_ LPTSTR ObjectName,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_ HANDLE ClientToken,_In_ DWORD DesiredAccess,_In_ DWORD GrantedAccess,_In_opt_ PPRIVILEGE_SET Privileges,_In_ BOOL ObjectCreation,_In_ BOOL AccessGranted,_Out_ LPBOOL GenerateOnClose)
BOOL WINAPI advapi32.ObjectOpenAuditAlarmW(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ LPTSTR ObjectTypeName,_In_opt_ LPTSTR ObjectName,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_ HANDLE ClientToken,_In_ DWORD DesiredAccess,_In_ DWORD GrantedAccess,_In_opt_ PPRIVILEGE_SET Privileges,_In_ BOOL ObjectCreation,_In_ BOOL AccessGranted,_Out_ LPBOOL GenerateOnClose)
BOOL WINAPI advapi32.ObjectOpenAuditAlarmA(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ LPTSTR ObjectTypeName,_In_opt_ LPTSTR ObjectName,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_ HANDLE ClientToken,_In_ DWORD DesiredAccess,_In_ DWORD GrantedAccess,_In_opt_ PPRIVILEGE_SET Privileges,_In_ BOOL ObjectCreation,_In_ BOOL AccessGranted,_Out_ LPBOOL GenerateOnClose)
BOOL WINAPI kernel32.GetNumaProcessorNode(_In_ UCHAR Processor,_Out_ PUCHAR NodeNumber)
SECURITY_STATUS SEC_ENTRY secur32.SaslGetProfilePackage(_In_ LPTSTR ProfileName,_Out_ PSecPkgInfo *PackageInfo)
SECURITY_STATUS SEC_ENTRY secur32.SaslGetProfilePackageW(_In_ LPTSTR ProfileName,_Out_ PSecPkgInfo *PackageInfo)
SECURITY_STATUS SEC_ENTRY secur32.SaslGetProfilePackageA(_In_ LPTSTR ProfileName,_Out_ PSecPkgInfo *PackageInfo)
HRESULT None oleaut32.VarUI1FromR4(_In_ FLOAT fltIn,BYTE *pbOut None)
INT_PTR WINAPI user32.DialogBoxParam(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpTemplateName,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc,_In_ LPARAM dwInitParam)
INT_PTR WINAPI user32.DialogBoxParamW(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpTemplateName,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc,_In_ LPARAM dwInitParam)
INT_PTR WINAPI user32.DialogBoxParamA(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpTemplateName,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc,_In_ LPARAM dwInitParam)
BOOL WINAPI advapi32.InitializeSecurityDescriptor(_Out_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_ DWORD dwRevision)
BOOL WINAPI authz.AuthzInitializeContextFromAuthzContext(_In_ DWORD flags,_In_ AUTHZ_CLIENT_CONTEXT_HANDLE hAuthzClientContext,_In_opt_ PLARGE_INTEGER pExpirationTime,_In_ LUID Identifier,_In_ PVOID DynamicGroupArgs,_Out_ PAUTHZ_CLIENT_CONTEXT_HANDLE phNewAuthzClientContext)
BOOL WINAPI kernel32.QueryProcessCycleTime(_In_ HANDLE ProcessHandle,_Out_ PULONG64 CycleTime)
VOID WINAPI kernel32.WaitForThreadpoolWaitCallbacks(_Inout_ PTP_WAIT pwa,_In_ BOOL fCancelPendingCallbacks)
LONG WINAPI winscard.SCardFreeMemory(_In_ SCARDCONTEXT hContext,_In_ LPCVOID pvMem)
NTSTATUS None None.GetCertificateFromCred(_In_ PVOID ProviderHandle,_In_ HANDLE ClientToken,_In_ PVOID SuppliedCred,_In_ ULONG SuppliedCredSize,_Out_ PVOID *CertContext)
DWORD WINAPI kernel32.GetProcessId(_In_ HANDLE Process)
HRESULT None oleaut32.VarR8FromI2(_In_ SHORT sIn,_Out_ DOUBLE *pdblOut)
SECURITY_STATUS None secur32.DeleteSecurityPackage(_In_ LPTSTR pszPackageName)
SECURITY_STATUS None secur32.DeleteSecurityPackageW(_In_ LPTSTR pszPackageName)
SECURITY_STATUS None secur32.DeleteSecurityPackageA(_In_ LPTSTR pszPackageName)
LONG WINAPI winscard.SCardLocateCardsByATR(_In_ SCARDCONTEXT hContext,_In_ LPSCARD_ATRMASK rgAtrMasks,_In_ DWORD cAtrs,_Inout_ LPSCARD_READERSTATE rgReaderStates,_In_ DWORD cReaders)
LONG WINAPI winscard.SCardLocateCardsByATRW(_In_ SCARDCONTEXT hContext,_In_ LPSCARD_ATRMASK rgAtrMasks,_In_ DWORD cAtrs,_Inout_ LPSCARD_READERSTATE rgReaderStates,_In_ DWORD cReaders)
LONG WINAPI winscard.SCardLocateCardsByATRA(_In_ SCARDCONTEXT hContext,_In_ LPSCARD_ATRMASK rgAtrMasks,_In_ DWORD cAtrs,_Inout_ LPSCARD_READERSTATE rgReaderStates,_In_ DWORD cReaders)
BOOL None advapi32.LogonUserEx(_In_ LPTSTR lpszUsername,_In_opt_ LPTSTR lpszDomain,_In_opt_ LPTSTR lpszPassword,_In_ DWORD dwLogonType,_In_ DWORD dwLogonProvider,_Out_opt_ PHANDLE phToken,_Out_opt_ PSID *ppLogonSid,_Out_opt_ PVOID *ppProfileBuffer,_Out_opt_ LPDWORD pdwProfileLength,_Out_opt_ PQUOTA_LIMITS pQuotaLimits)
BOOL None advapi32.LogonUserExW(_In_ LPTSTR lpszUsername,_In_opt_ LPTSTR lpszDomain,_In_opt_ LPTSTR lpszPassword,_In_ DWORD dwLogonType,_In_ DWORD dwLogonProvider,_Out_opt_ PHANDLE phToken,_Out_opt_ PSID *ppLogonSid,_Out_opt_ PVOID *ppProfileBuffer,_Out_opt_ LPDWORD pdwProfileLength,_Out_opt_ PQUOTA_LIMITS pQuotaLimits)
BOOL None advapi32.LogonUserExA(_In_ LPTSTR lpszUsername,_In_opt_ LPTSTR lpszDomain,_In_opt_ LPTSTR lpszPassword,_In_ DWORD dwLogonType,_In_ DWORD dwLogonProvider,_Out_opt_ PHANDLE phToken,_Out_opt_ PSID *ppLogonSid,_Out_opt_ PVOID *ppProfileBuffer,_Out_opt_ LPDWORD pdwProfileLength,_Out_opt_ PQUOTA_LIMITS pQuotaLimits)
BOOL WINAPI kernel32.SetUmsThreadInformation(_In_ PUMS_CONTEXT UmsThread,_In_ UMS_THREAD_INFO_CLASS UmsThreadInfoClass,_In_ PVOID UmsThreadInformation,_In_ ULONG UmsThreadInformationLength)
SECURITY_STATUS SEC_Entry secur32.CompleteAuthToken(_In_ PCtxtHandle phContext,_In_ PSecBufferDesc pToken)
WINAPI None kernelbase.SetProcessValidCallTargets(_In_ HANDLE hProcess,_In_ PVOID VirtualAddress,_In_ SIZE_T RegionSize,_In_ ULONG NumberOfOffsets,_Inout_ PCFG_CALL_TARGET_INFO OffsetInformation)
DWORD None None.NPGetConnection3(_In_ LPCWSTR lpLocalName,_In_ DWORD dwLevel,_Out_ LPVOID lpBuffer,_Inout_ LPDWORD lpBufferSize)
HANDLE WINAPI kernel32.CreateWaitableTimerEx(_In_opt_ LPSECURITY_ATTRIBUTES lpTimerAttributes,_In_opt_ LPCTSTR lpTimerName,_In_ DWORD dwFlags,_In_ DWORD dwDesiredAccess)
HANDLE WINAPI kernel32.CreateWaitableTimerExW(_In_opt_ LPSECURITY_ATTRIBUTES lpTimerAttributes,_In_opt_ LPCTSTR lpTimerName,_In_ DWORD dwFlags,_In_ DWORD dwDesiredAccess)
HANDLE WINAPI kernel32.CreateWaitableTimerExA(_In_opt_ LPSECURITY_ATTRIBUTES lpTimerAttributes,_In_opt_ LPCTSTR lpTimerName,_In_ DWORD dwFlags,_In_ DWORD dwDesiredAccess)
HRESULT None oleaut32.VarI1FromR8(_In_ DOUBLE dblIn,_Out_ CHAR *pcOut)
BOOL None None.WlxGetStatusMessage(_In_ PVOID pWlxContext,_Out_ DWORD *pdwOptions,_Out_ PWSTR pMessage,_In_ DWORD dwBufferSize)
BOOL APIENTRY kernel32.CheckTokenMembershipEx(_In_opt_ HANDLE TokenHandle,_In_ PSID SidToCheck,_In_ DWORD Flags,_Out_ PBOOL IsMember)
NTSTATUS None None.UpdateCredentials(_In_ PSECPKG_PRIMARY_CRED PrimaryCredentials,_In_opt_ PSECPKG_SUPPLEMENTAL_CRED_ARRAY Credentials)
HRESULT None shell32.SHOpenFolderAndSelectItems(_In_ PCIDLIST_ABSOLUTE pidlFolder,UINT cidl None,_In_opt_ PCUITEMID_CHILD_ARRAY apidl,DWORD dwFlags None)
NTSTATUS None None.CallPackagePassthrough(_In_ PUNICODE_STRING AuthenticationPackage,_In_ PVOID ClientBufferBase,_In_ PVOID ProtocolSubmitBuffer,_In_ ULONG SubmitBufferLength,_Out_ PVOID *ProtocolReturnBuffer,_Out_ PULONG ReturnBufferLength,_Out_ PNTSTATUS ProtocolStatus)
HRESULT None shell32.SHGetKnownFolderPath(_In_ REFKNOWNFOLDERID rfid,_In_ DWORD dwFlags,_In_opt_ HANDLE hToken,_Out_ PWSTR *ppszPath)
LONG NTAPI ntdll.RtlIpv4StringToAddress(_In_ PCTSTR S,_In_ BOOLEAN Strict,_Out_ LPCTSTR *Terminator,_Out_ IN_ADDR *Addr)
LONG NTAPI ntdll.RtlIpv4StringToAddressW(_In_ PCTSTR S,_In_ BOOLEAN Strict,_Out_ LPCTSTR *Terminator,_Out_ IN_ADDR *Addr)
LONG NTAPI ntdll.RtlIpv4StringToAddressA(_In_ PCTSTR S,_In_ BOOLEAN Strict,_Out_ LPCTSTR *Terminator,_Out_ IN_ADDR *Addr)
BOOL WINAPI kernel32.SetFileBandwidthReservation(_In_ HANDLE hFile,_In_ DWORD nPeriodMilliseconds,_In_ DWORD nBytesPerPeriod,_In_ BOOL bDiscardable,_Out_ LPDWORD lpTransferSize,_Out_ LPDWORD lpNumOutstandingRequests)
VOID WINAPI kernel32.CloseThreadpoolWork(_Inout_ PTP_WORK pwk)
VOID WINAPI kernel32.StartThreadpoolIo(_Inout_ PTP_IO pio)
NTSTATUS WINAPI advapi32.LsaQueryCAPs(PSID *CAPIDs None,_In_ ULONG CAPIDCount,_Out_ PCENTRAL_ACCESS_POLICY *CAPs,_Out_ PULONG CAPCount)
VOID None None.AuditLogon(_In_ NTSTATUS Status,_In_ NTSTATUS SubStatus,_In_ PUNICODE_STRING AccountName,_In_ PUNICODE_STRING AuthenticatingAuthority,_In_ PUNICODE_STRING WorkstationName,_In_opt_ PSID UserSid,_In_ SECURITY_LOGON_TYPE LogonType,_In_ PTOKEN_SOURCE TokenSource,_In_ PLUID LogonId)
BOOL WINAPI kernel32.CreateTimerQueueTimer(_Out_ PHANDLE phNewTimer,_In_opt_ HANDLE TimerQueue,_In_ WAITORTIMERCALLBACK Callback,_In_opt_ PVOID Parameter,_In_ DWORD DueTime,_In_ DWORD Period,_In_ ULONG Flags)
BOOL WINAPI kernel32.EnterSynchronizationBarrier(_Inout_ LPSYNCHRONIZATION_BARRIER lpBarrier,_In_ DWORD dwFlags)
HRESULT None oleaut32.VarBoolFromUI8(_In_ ULONG64 i64In,_Out_ VARIANT_BOOL *pboolOut)
DWORD APIENTRY None.NPLogonNotify(_In_ PLUID lpLogon,_In_ LPCWSTR lpAuthentInfoType,_In_ LPVOID lpAuthentInfo,_In_ LPCWSTR lpPreviousAuthentInfoType,_In_ LPVOID lpPreviousAuthentInfo,_In_ LPWSTR lpStationName,_In_ LPVOID StationHandle,_Out_ LPWSTR *lpLogonScript)
NTSTATUS None None.DeleteLogonSession(_In_ PLUID LogonId)
DWORD APIENTRY None.AddConnectNotify(_Inout_ LPNOTIFYINFO lpNotifyInfo,_In_ LPNOTIFYADD lpAddInfo)
SECURITY_STATUS SEC_Entry secur32.QuerySecurityContextToken(_In_ PCtxtHandle phContext,_Out_ HANDLE *phToken)
HRESULT None oleaut32.VarCyFromStr(_In_ LPCOLESTR strIn,_In_ LCID lcid,_In_ ULONG dwFlags,_Out_ CY *pcyOut)
BOOL WINAPI kernel32.SetThreadPriorityBoost(_In_ HANDLE hThread,_In_ BOOL DisablePriorityBoost)
LONG WINAPI winscard.SCardEndTransaction(_In_ SCARDHANDLE hCard,_In_ DWORD dwDisposition)
NTSTATUS None None.AuditAccountLogon(_In_ ULONG AuditId,_In_ BOOLEAN Success,_In_ PUNICODE_STRING Source,_In_ PUNICODE_STRING ClientName,_In_ PUNICODE_STRING MappedName,_In_ NTSTATUS Status)
HRESULT None None.SHLocalStrDup(PCTSTR psz None,_Out_opt_ PTSTR *ppsz)
HRESULT None None.SHLocalStrDupW(PCTSTR psz None,_Out_opt_ PTSTR *ppsz)
HRESULT None None.SHLocalStrDupA(PCTSTR psz None,_Out_opt_ PTSTR *ppsz)
DWORD WINAPI kernel32.GetPriorityClass(_In_ HANDLE hProcess)
BOOL WINAPI kernel32.SetProcessShutdownParameters(_In_ DWORD dwLevel,_In_ DWORD dwFlags)
BOOL None advapi32.CredRename(_In_ LPCTSTR OldTargetName,_In_ LPCTSTR NewTargetName,_In_ DWORD Type,_In_ DWORD Flags)
BOOL None advapi32.CredRenameW(_In_ LPCTSTR OldTargetName,_In_ LPCTSTR NewTargetName,_In_ DWORD Type,_In_ DWORD Flags)
BOOL None advapi32.CredRenameA(_In_ LPCTSTR OldTargetName,_In_ LPCTSTR NewTargetName,_In_ DWORD Type,_In_ DWORD Flags)
DWORD None iphlpapi.DeleteIpNetEntry(_In_ PMIB_IPNETROW pArpEntry)
BOOL None schannel.SslCrackCertificate(_In_ PUCHAR pbCertificate,_In_ DWORD dwCertificate,_In_ DWORD dwFlags,_Out_ PX509Certificate *ppCertificate)
HANDLE WINAPI kernel32.OpenJobObject(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandles,_In_ LPCTSTR lpName)
HANDLE WINAPI kernel32.OpenJobObjectW(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandles,_In_ LPCTSTR lpName)
HANDLE WINAPI kernel32.OpenJobObjectA(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandles,_In_ LPCTSTR lpName)
PTP_POOL WINAPI kernel32.CreateThreadpool(_Reserved_ PVOID reserved)
BOOL WINAPI advapi32.AccessCheckByTypeResultListAndAuditAlarmByHandle(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ HANDLE ClientToken,_In_ LPCTSTR ObjectTypeName,_In_opt_ LPCTSTR ObjectName,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_opt_ PSID PrincipalSelfSid,_In_ DWORD DesiredAccess,_In_ AUDIT_EVENT_TYPE AuditType,_In_ DWORD Flags,_Inout_opt_ POBJECT_TYPE_LIST ObjectTypeList,_In_ DWORD ObjectTypeListLength,_In_ PGENERIC_MAPPING GenericMapping,_In_ BOOL ObjectCreation,_Out_ LPDWORD GrantedAccess,_Out_ LPDWORD AccessStatusList,_Out_ LPBOOL pfGenerateOnClose)
BOOL WINAPI advapi32.AccessCheckByTypeResultListAndAuditAlarmByHandleW(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ HANDLE ClientToken,_In_ LPCTSTR ObjectTypeName,_In_opt_ LPCTSTR ObjectName,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_opt_ PSID PrincipalSelfSid,_In_ DWORD DesiredAccess,_In_ AUDIT_EVENT_TYPE AuditType,_In_ DWORD Flags,_Inout_opt_ POBJECT_TYPE_LIST ObjectTypeList,_In_ DWORD ObjectTypeListLength,_In_ PGENERIC_MAPPING GenericMapping,_In_ BOOL ObjectCreation,_Out_ LPDWORD GrantedAccess,_Out_ LPDWORD AccessStatusList,_Out_ LPBOOL pfGenerateOnClose)
BOOL WINAPI advapi32.AccessCheckByTypeResultListAndAuditAlarmByHandleA(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ HANDLE ClientToken,_In_ LPCTSTR ObjectTypeName,_In_opt_ LPCTSTR ObjectName,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_opt_ PSID PrincipalSelfSid,_In_ DWORD DesiredAccess,_In_ AUDIT_EVENT_TYPE AuditType,_In_ DWORD Flags,_Inout_opt_ POBJECT_TYPE_LIST ObjectTypeList,_In_ DWORD ObjectTypeListLength,_In_ PGENERIC_MAPPING GenericMapping,_In_ BOOL ObjectCreation,_Out_ LPDWORD GrantedAccess,_Out_ LPDWORD AccessStatusList,_Out_ LPBOOL pfGenerateOnClose)
DWORD None None.NPDirectoryNotify(_In_ HWND hwnd,_In_ LPTSTR lpDir,_In_ DWORD dwOper)
NTSTATUS None None.GetAuthDataForUser(_In_ PSECURITY_STRING Name,_In_ SECPKG_NAME_TYPE NameType,_In_ PSECURITY_STRING Prefix,_Out_ PUCHAR *UserAuthData,_Out_ PULONG UserAuthDataSize,_Out_ PUNICODE_STRING UserFlatName)
VOID FORCEINLINE None.TpSetCallbackPriority(_Inout_ PTP_CALLBACK_ENVIRON CallbackEnviron,_In_ TP_CALLBACK_PRIORITY Priority)
VOID WINAPI kernel32.SetThreadpoolThreadMaximum(_Inout_ PTP_POOL ptpp,_In_ DWORD cthrdMost)
DWORD None None.NPGetConnectionPerformance(_In_ LPTSTR lpRemoteName,_Out_ LPNETCONNECTINFOSTRUCT lpNetConnectInfo)
HANDLE WINAPI kernel32.OpenSemaphore(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpName)
HANDLE WINAPI kernel32.OpenSemaphoreW(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpName)
HANDLE WINAPI kernel32.OpenSemaphoreA(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpName)
BOOL None advapi32.CredMarshalCredential(_In_ CRED_MARSHAL_TYPE CredType,_In_ PVOID Credential,_Out_ LPTSTR *MarshaledCredential)
BOOL None advapi32.CredMarshalCredentialW(_In_ CRED_MARSHAL_TYPE CredType,_In_ PVOID Credential,_Out_ LPTSTR *MarshaledCredential)
BOOL None advapi32.CredMarshalCredentialA(_In_ CRED_MARSHAL_TYPE CredType,_In_ PVOID Credential,_Out_ LPTSTR *MarshaledCredential)
DWORD None iphlpapi.GetIfTable(_Out_ PMIB_IFTABLE pIfTable,_Inout_ PULONG pdwSize,_In_ BOOL bOrder)
HANDLE WINAPI avrt.AvSetMmMaxThreadCharacteristics(_In_ LPCTSTR FirstTask,_In_ LPCTSTR SecondTask,_Inout_ LPDWORD TaskIndex)
HANDLE WINAPI avrt.AvSetMmMaxThreadCharacteristicsW(_In_ LPCTSTR FirstTask,_In_ LPCTSTR SecondTask,_Inout_ LPDWORD TaskIndex)
HANDLE WINAPI avrt.AvSetMmMaxThreadCharacteristicsA(_In_ LPCTSTR FirstTask,_In_ LPCTSTR SecondTask,_Inout_ LPDWORD TaskIndex)
LRESULT None comctl32.DefSubclassProc(_In_ HWND hWnd,_In_ UINT uMsg,_In_ WPARAM WPARAM,_In_ LPARAM LPARAM)
BOOL None kernel32.QueryThreadpoolStackInformation(_In_ PTP_POOL ptpp,_Out_ PTP_POOL_STACK_INFORMATION ptpsi)
BOOL WINAPI advapi32.ImpersonateLoggedOnUser(_In_ HANDLE hToken)
NTSTATUS None None.LsaApLogonUserEx(_In_ PLSA_CLIENT_REQUEST ClientRequest,_In_ SECURITY_LOGON_TYPE LogonType,_In_ PVOID AuthenticationInformation,_In_ PVOID ClientAuthenticationBase,_In_ ULONG AuthenticationInformationLength,_Out_ PVOID *ProfileBuffer,_Out_ PULONG ProfileBufferLength,_Out_ PLUID LogonId,_Out_ PNTSTATUS SubStatus,_Out_ PLSA_TOKEN_INFORMATION_TYPE TokenInformationType,_Out_ PVOID *TokenInformation,_Out_ PUNICODE_STRING *AccountName,_Out_ PUNICODE_STRING *AuthenticatingAuthority,_Out_ PUNICODE_STRING *MachineName)
NTSTATUS None None.SpGetInfo(_Out_ PSecPkgInfo PackageInfo)
HRESULT None oleaut32.VarBoolFromUI4(_In_ ULONG ulIn,_Out_ VARIANT_BOOL *pboolOut)
HRESULT None oleaut32.VarI8FromR8(_In_ DOUBLE dblIn,_Out_ LONG64 *pi64Out)
BOOL WINAPI kernel32.PostQueuedCompletionStatus(_In_ HANDLE CompletionPort,_In_ DWORD dwNumberOfBytesTransferred,_In_ ULONG_PTR dwCompletionKey,_In_opt_ LPOVERLAPPED lpOverlapped)
VOID FORCEINLINE None.TpInitializeCallbackEnviron(_Out_ PTP_CALLBACK_ENVIRON CallbackEnviron)
BOOL WINAPI advapi32.AddAce(_Inout_ PACL pAcl,_In_ DWORD dwAceRevision,_In_ DWORD dwStartingAceIndex,_In_ LPVOID pAceList,_In_ DWORD nAceListLength)
NTSTATUS None None.SpDeleteCredentials(_In_ LSA_SEC_HANDLE CredentialHandle,_In_ PSecBuffer Key)
DWORD None None.NPSearchDialog(_In_ HWND hParent,_In_ LPNETRESOURCE lpNetResource,_Out_ LPVOID lpBuffer,_Out_ DWORD cbBuffer,_In_ LPDWORD lpnFlags)
SECURITY_STATUS SEC_ENTRY secur32.SaslSetContextOption(_In_ PCtxtHandle ContextHandle,_In_ ULONG Option,_In_ PVOID Value,_In_ ULONG Size)
PSLIST_ENTRY WINAPI ntdll.RtlInterlockedFlushSList(_In_ PSLIST_HEADER ListHead)
BOOL None advapi32.CredDelete(_In_ LPCTSTR TargetName,_In_ DWORD Type,_In_ DWORD Flags)
BOOL None advapi32.CredDeleteW(_In_ LPCTSTR TargetName,_In_ DWORD Type,_In_ DWORD Flags)
BOOL None advapi32.CredDeleteA(_In_ LPCTSTR TargetName,_In_ DWORD Type,_In_ DWORD Flags)
PIDLIST_ABSOLUTE None None.ILCloneFull(_In_ PCUIDLIST_ABSOLUTE pidl)
BOOL None None.WlxScreenSaverNotify(_In_ PVOID pWlxContext,_Inout_ BOOL *pSecure)
BOOL WINAPI advapi32.DuplicateToken(_In_ HANDLE ExistingTokenHandle,_In_ SECURITY_IMPERSONATION_LEVEL ImpersonationLevel,_Out_ PHANDLE DuplicateTokenHandle)
BOOL WINAPI kernel32.Wow64DisableWow64FsRedirection(_Out_ PVOID *OldValue)
VOID None None.FreeLsaHeap(_In_ PVOID Base)
HRESULT None oleaut32.VarUI4FromCy(_In_ CY cyIn,_Out_ ULONG *pulOut)
BOOLEAN WINAPI advapi32.AuditQuerySecurity(_In_ SECURITY_INFORMATION SecurityInformation,_Out_ PSECURITY_DESCRIPTOR *ppSecurityDescriptor)
SECURITY_STATUS None None.SspiEncryptAuthIdentityEx(_In_ ULONG Options,_Inout_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE AuthData)
BOOL WINAPI advapi32.CopySid(_In_ DWORD nDestinationSidLength,_Out_ PSID pDestinationSid,_In_ PSID pSourceSid)
NTSTATUS None None.CloseSamUser(_In_ PVOID UserHandle)
VOID WINAPI kernel32.AcquireSRWLockExclusive(_Inout_ PSRWLOCK SRWLock)
VOID WINAPI sas.SendSAS(_In_ BOOL AsUser)
VOID WINAPI kernel32.CloseThreadpool(_Inout_ PTP_POOL ptpp)
LONG WINAPI winscard.SCardListInterfaces(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCard,_Out_ LPGUID pguidInterfaces,_Inout_ LPDWORD pcguidInterfaces)
LONG WINAPI winscard.SCardListInterfacesW(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCard,_Out_ LPGUID pguidInterfaces,_Inout_ LPDWORD pcguidInterfaces)
LONG WINAPI winscard.SCardListInterfacesA(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCard,_Out_ LPGUID pguidInterfaces,_Inout_ LPDWORD pcguidInterfaces)
BOOL WINAPI kernel32.DeleteTimerQueue(_In_ HANDLE TimerQueue)
BOOL None kernel32.GetProcessGroupAffinity(_In_ HANDLE hProcess,_Inout_ PUSHORT GroupCount,_Out_ PUSHORT GroupArray)
HRESULT None shell32.SHIsFileAvailableOffline(_In_ PCWSTR pszPath,_Out_opt_ LPDWORD pdwStatus)
HRESULT None oleaut32.VarI8FromUI1(_In_ BYTE bIn,_Out_ LONG64 *pi64Out)
NTSTATUS NTAPI None.SpQueryMetaDataFn(_In_ LSA_SEC_HANDLE CredentialHandle,_In_opt_ PUNICODE_STRING TargetName,_In_ ULONG ContextRequirements,_Out_ ULONG MetaDataLength,_Out_ PUCHAR MetaData,_Inout_ PLSA_SEC_HANDLE ContextHandle)
NTSTATUS NTAPI None.Msv1_0SubAuthenticationFilter(_In_ NETLOGON_LOGON_INFO_CLASS LogonLevel,_In_ PVOID LogonInformation,_In_ ULONG Flags,_In_ PUSER_ALL_INFORMATION UserAll,_Out_ PULONG WhichFields,_Out_ PULONG UserFlags,_Out_ PBOOLEAN Authoritative,_Out_ PLARGE_INTEGER LogoffTime,_Out_ PLARGE_INTEGER KickoffTime)
SECURITY_STATUS None sspicli.SspiEncryptAuthIdentity(_Inout_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE AuthData)
BOOL WINAPI kernel32.TryEnterCriticalSection(_Inout_ LPCRITICAL_SECTION lpCriticalSection)
LONG WINAPI winscard.SCardAddReaderToGroup(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReaderName,_In_ LPCTSTR szGroupName)
LONG WINAPI winscard.SCardAddReaderToGroupW(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReaderName,_In_ LPCTSTR szGroupName)
LONG WINAPI winscard.SCardAddReaderToGroupA(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReaderName,_In_ LPCTSTR szGroupName)
VOID CALLBACK None.SimpleCallback(_Inout_ PTP_CALLBACK_INSTANCE Instance,_Inout_opt_ PVOID Context)
DWORD None None.NPFMXEditPerm(_In_ LPTSTR lpDriveName,_In_ HWND hwndFMX,_In_ DWORD nType)
BOOL None None.ScreenSaverConfigureDialog(HWND hDlg None,UINT message None,WPARAM wParam None,LPARAM lParam None)
PVOID None None.AllocateSharedMemory(_In_ PVOID SharedMem,_In_ ULONG Size)
HRESULT None oleaut32.VarR4FromUI2(_In_ USHORT uiIn,_Out_ FLOAT *pfltOut)
HRESULT None oleaut32.VarI8FromDisp(IDispatch *pdispIn None,_In_ LCID lcid,_Out_ LONG64 *pi64Out)
BOOL None schannel.SslEmptyCache(_In_ LPSTR pszTargetName,_In_ DWORD dwFlags)
BOOL None schannel.SslEmptyCacheW(_In_ LPSTR pszTargetName,_In_ DWORD dwFlags)
BOOL None schannel.SslEmptyCacheA(_In_ LPSTR pszTargetName,_In_ DWORD dwFlags)
NTSTATUS None secur32.LsaLogonUser(_In_ HANDLE LsaHandle,_In_ PLSA_STRING OriginName,_In_ SECURITY_LOGON_TYPE LogonType,_In_ ULONG AuthenticationPackage,_In_ PVOID AuthenticationInformation,_In_ ULONG AuthenticationInformationLength,_In_opt_ PTOKEN_GROUPS LocalGroups,_In_ PTOKEN_SOURCE SourceContext,_Out_ PVOID *ProfileBuffer,_Out_ PULONG ProfileBufferLength,_Out_ PLUID LogonId,_Out_ PHANDLE Token,_Out_ PQUOTA_LIMITS Quotas,_Out_ PNTSTATUS SubStatus)
NTSTATUS None None.AddCredential(_In_ PLUID LogonId,_In_ ULONG AuthenticationPackage,_In_ PLSA_STRING PrimaryKeyValue,_In_ PLSA_STRING Credentials)
NTSTATUS WINAPI certpoleng.PstAcquirePrivateKey(_In_ PCCERT_CONTEXT pCert)
HRESULT None oleaut32.VarI2FromBool(_In_ VARIANT_BOOL boolIn,_Out_ SHORT *psOut)
LONG WINAPI winscard.SCardSetCardTypeProviderName(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCardName,_In_ DWORD dwProviderId,_In_ LPCTSTR szProvider)
LONG WINAPI winscard.SCardSetCardTypeProviderNameW(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCardName,_In_ DWORD dwProviderId,_In_ LPCTSTR szProvider)
LONG WINAPI winscard.SCardSetCardTypeProviderNameA(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCardName,_In_ DWORD dwProviderId,_In_ LPCTSTR szProvider)
DWORD None None.NPGetResourceParent(_In_ LPNETRESOURCE lpNetResource,_Out_ LPVOID lpBuffer,_Inout_ LPDWORD lpcbBuffer)
HRESULT None oleaut32.VarR8FromI1(_In_ CHAR cIn,DOUBLE *pdblOut None)
DWORD None None.NPAddConnection(_In_ LPNETRESOURCE lpNetResource,_In_ LPTSTR lpPassword,_In_ LPTSTR lpUserName)
BOOL WINAPI advapi32.CreatePrivateObjectSecurityEx(_In_opt_ PSECURITY_DESCRIPTOR ParentDescriptor,_In_opt_ PSECURITY_DESCRIPTOR CreatorDescriptor,_Out_ PSECURITY_DESCRIPTOR *NewDescriptor,_In_opt_ GUID *ObjectType,_In_ BOOL IsContainerObject,_In_ ULONG AutoInheritFlags,_In_opt_ HANDLE Token,_In_ PGENERIC_MAPPING GenericMapping)
BOOL None None.WlxCreateUserDesktop(_In_ HANDLE hWlx,_In_ HANDLE hToken,_In_ DWORD Flags,_In_ PWSTR pszDesktopName,_Out_ PWLX_DESKTOP *ppDesktop)
NETIOAPI_API None iphlpapi.SetIpInterfaceEntry(_Inout_ PMIB_IPINTERFACE_ROW Row)
uint32 None cimwin32.SetPowerState([in] uint16 PowerState,[in] datetime Time)
NTSTATUS None None.SpAcceptCredentials(_In_ SECURITY_LOGON_TYPE LogonType,_In_ PUNICODE_STRING AccountName,_In_ PSECPKG_PRIMARY_CRED PrimaryCredentials,_In_ PSECPKG_SUPPLEMENTAL_CRED SupplementalCredentials)
HRESULT None oleaut32.VarI8FromBool(_In_ VARIANT_BOOL boolIn,_Out_ LONG64 *pi64Out)
BOOL WINAPI kernel32.AddSIDToBoundaryDescriptor(_Inout_ HANDLE *BoundaryDescriptor,_In_ PSID RequiredSid)
BOOL WINAPI avrt.AvRtCreateThreadOrderingGroupEx(_Out_ PHANDLE Context,_In_ PLARGE_INTEGER Period,_Inout_ GUID *ThreadOrderingGuid,_In_opt_ PLARGE_INTEGER Timeout,_In_ LPCTSTR TaskName)
BOOL WINAPI avrt.AvRtCreateThreadOrderingGroupExW(_Out_ PHANDLE Context,_In_ PLARGE_INTEGER Period,_Inout_ GUID *ThreadOrderingGuid,_In_opt_ PLARGE_INTEGER Timeout,_In_ LPCTSTR TaskName)
BOOL WINAPI avrt.AvRtCreateThreadOrderingGroupExA(_Out_ PHANDLE Context,_In_ PLARGE_INTEGER Period,_Inout_ GUID *ThreadOrderingGuid,_In_opt_ PLARGE_INTEGER Timeout,_In_ LPCTSTR TaskName)
BOOL WINAPI kernel32.UnregisterWait(_In_ HANDLE WaitHandle)
BOOL WINAPI advapi32.LookupAccountSid(_In_opt_ LPCTSTR lpSystemName,_In_ PSID lpSid,_Out_opt_ LPTSTR lpName,_Inout_ LPDWORD cchName,_Out_opt_ LPTSTR lpReferencedDomainName,_Inout_ LPDWORD cchReferencedDomainName,_Out_ PSID_NAME_USE peUse)
BOOL WINAPI advapi32.LookupAccountSidW(_In_opt_ LPCTSTR lpSystemName,_In_ PSID lpSid,_Out_opt_ LPTSTR lpName,_Inout_ LPDWORD cchName,_Out_opt_ LPTSTR lpReferencedDomainName,_Inout_ LPDWORD cchReferencedDomainName,_Out_ PSID_NAME_USE peUse)
BOOL WINAPI advapi32.LookupAccountSidA(_In_opt_ LPCTSTR lpSystemName,_In_ PSID lpSid,_Out_opt_ LPTSTR lpName,_Inout_ LPDWORD cchName,_Out_opt_ LPTSTR lpReferencedDomainName,_Inout_ LPDWORD cchReferencedDomainName,_Out_ PSID_NAME_USE peUse)
not running shell32.STDMETHOD(CancelAsyncSearch None None)
BOOL WINAPI kernel32.DeleteTimerQueueEx(_In_ HANDLE TimerQueue,_In_opt_ HANDLE CompletionEvent)
BOOL WINAPI kernel32.GetProcessIoCounters(_In_ HANDLE hProcess,_Out_ PIO_COUNTERS lpIoCounters)
DWORD WINAPI kernel32.Wow64SuspendThread(_In_ HANDLE hThread)
NTSTATUS None None.SpVerifySignature(_In_ LSA_SEC_HANDLE ContextHandle,_In_ PSecBufferDesc MessageBuffers,_In_ ULONG MessageSequenceNumber,_Out_ PULONG QualityOfProtection)
LONG WINAPI winscard.SCardRemoveReaderFromGroup(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReaderName,_In_ LPCTSTR szGroupName)
LONG WINAPI winscard.SCardRemoveReaderFromGroupW(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReaderName,_In_ LPCTSTR szGroupName)
LONG WINAPI winscard.SCardRemoveReaderFromGroupA(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReaderName,_In_ LPCTSTR szGroupName)
BOOL WINAPI kernel32.SetThreadStackGuarantee(_Inout_ PULONG StackSizeInBytes)
DWORD WINAPI credui.CredUIPromptForWindowsCredentials(_In_opt_ PCREDUI_INFO pUiInfo,_In_ DWORD dwAuthError,_Inout_ ULONG *pulAuthPackage,_In_opt_ LPCVOID pvInAuthBuffer,_In_ ULONG ulInAuthBufferSize,_Out_ LPVOID *ppvOutAuthBuffer,_Out_ ULONG *pulOutAuthBufferSize,_Inout_opt_ BOOL *pfSave,_In_ DWORD dwFlags)
DWORD WINAPI credui.CredUIPromptForWindowsCredentialsW(_In_opt_ PCREDUI_INFO pUiInfo,_In_ DWORD dwAuthError,_Inout_ ULONG *pulAuthPackage,_In_opt_ LPCVOID pvInAuthBuffer,_In_ ULONG ulInAuthBufferSize,_Out_ LPVOID *ppvOutAuthBuffer,_Out_ ULONG *pulOutAuthBufferSize,_Inout_opt_ BOOL *pfSave,_In_ DWORD dwFlags)
DWORD WINAPI credui.CredUIPromptForWindowsCredentialsA(_In_opt_ PCREDUI_INFO pUiInfo,_In_ DWORD dwAuthError,_Inout_ ULONG *pulAuthPackage,_In_opt_ LPCVOID pvInAuthBuffer,_In_ ULONG ulInAuthBufferSize,_Out_ LPVOID *ppvOutAuthBuffer,_Out_ ULONG *pulOutAuthBufferSize,_Inout_opt_ BOOL *pfSave,_In_ DWORD dwFlags)
NTSTATUS NTAPI None.ExpandAuthDataForDomain(_In_ PUCHAR UserAuthData,_In_ ULONG UserAuthDataSize,_In_ PVOID Reserved,_Out_ PUCHAR *ExpandedAuthData,_Out_ PULONG ExpandedAuthDataSize)
HRESULT None oleaut32.VarI4FromI2(_In_ SHORT sIn,_Out_ LONG *plOut)
BOOL None None.WlxSetTimeout(_In_ HANDLE hWlx,_In_ DWORD Timeout)
BOOL WINAPI kernel32.UnregisterWaitEx(_In_ HANDLE WaitHandle,_In_opt_ HANDLE CompletionEvent)
DWORD None None.NPGetCaps(_In_ DWORD nIndex)
WORD WINAPI ntdll.RtlQueryDepthSList(_In_ PSLIST_HEADER ListHead)
NETIOAPI_API None iphlpapi.SetIpNetEntry2(_Inout_ PMIB_IPNET_ROW2 Row)
DWORD WINAPI kernel32.SetCriticalSectionSpinCount(_Inout_ LPCRITICAL_SECTION lpCriticalSection,_In_ DWORD dwSpinCount)
HRESULT None oleaut32.VarUI2FromI2(_In_ SHORT uiIn,_Out_ USHORT *puiOut)
BOOL WINAPI userenv.GetProfilesDirectory(_Out_ LPTSTR lpProfilesDir,_Inout_ LPDWORD lpcchSize)
BOOL WINAPI userenv.GetProfilesDirectoryW(_Out_ LPTSTR lpProfilesDir,_Inout_ LPDWORD lpcchSize)
BOOL WINAPI userenv.GetProfilesDirectoryA(_Out_ LPTSTR lpProfilesDir,_Inout_ LPDWORD lpcchSize)
LONG NTAPI ntdll.RtlIpv4StringToAddressEx(_In_ PCTSTR AddressString,_In_ BOOLEAN Strict,_Out_ IN_ADDR *Address,_Out_ PUSHORT Port)
LONG NTAPI ntdll.RtlIpv4StringToAddressExW(_In_ PCTSTR AddressString,_In_ BOOLEAN Strict,_Out_ IN_ADDR *Address,_Out_ PUSHORT Port)
LONG NTAPI ntdll.RtlIpv4StringToAddressEx(_In_ PCTSTR AddressString,_In_ BOOLEAN Strict,_Out_ IN_ADDR *Address,_Out_ PUSHORT Port)
PVOID WINAPI None.AllocatePrivateHeap(_In_ SIZE_T Length)
PVOID None None.AllocateLsaHeap(_In_ ULONG Length)
DWORD None iphlpapi.RestoreMediaSense(OVERLAPPED *pOverlapped None,LPDWORD lpdwEnableCount None)
BOOL WINAPI kernel32.CallbackMayRunLong(_Inout_ PTP_CALLBACK_INSTANCE pci)
BOOL WINAPI kernelbase.TlsFree(_In_ DWORD dwTlsIndex)
BOOL WINAPI authz.AuthzUnregisterSecurityEventSource(_In_ DWORD dwFlags,_Inout_ PAUTHZ_SECURITY_EVENT_PROVIDER_HANDLE phEventProvider)
NTSTATUS None advapi32.LsaQueryInformationPolicy(_In_ LSA_HANDLE PolicyHandle,_In_ POLICY_INFORMATION_CLASS InformationClass,_Out_ PVOID *Buffer)
LONG WINAPI winscard.SCardWriteCache(_In_ SCARDCONTEXT hContext,_In_ UUID *CardIdentifier,_In_ DWORD FreshnessCounter,_In_ LPTSTR LookupName,_In_ PBYTE Data,_In_ DWORD DataLen)
LONG WINAPI winscard.SCardWriteCacheW(_In_ SCARDCONTEXT hContext,_In_ UUID *CardIdentifier,_In_ DWORD FreshnessCounter,_In_ LPTSTR LookupName,_In_ PBYTE Data,_In_ DWORD DataLen)
LONG WINAPI winscard.SCardWriteCacheA(_In_ SCARDCONTEXT hContext,_In_ UUID *CardIdentifier,_In_ DWORD FreshnessCounter,_In_ LPTSTR LookupName,_In_ PBYTE Data,_In_ DWORD DataLen)
HANDLE WINAPI kernel32.CreateSemaphore(_In_opt_ LPSECURITY_ATTRIBUTES lpSemaphoreAttributes,_In_ LONG lInitialCount,_In_ LONG lMaximumCount,_In_opt_ LPCTSTR lpName)
HANDLE WINAPI kernel32.CreateSemaphoreW(_In_opt_ LPSECURITY_ATTRIBUTES lpSemaphoreAttributes,_In_ LONG lInitialCount,_In_ LONG lMaximumCount,_In_opt_ LPCTSTR lpName)
HANDLE WINAPI kernel32.CreateSemaphoreA(_In_opt_ LPSECURITY_ATTRIBUTES lpSemaphoreAttributes,_In_ LONG lInitialCount,_In_ LONG lMaximumCount,_In_opt_ LPCTSTR lpName)
LONG WINAPI None.SCardGetReaderIcon(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReaderName,_Out_ LPBYTE pbIcon,_Inout_ LPDWORD pcbIcon)
NTSTATUS None None.LsaApCallPackage(_In_ PLSA_CLIENT_REQUEST ClientRequest,_In_ PVOID ProtocolSubmitBuffer,_In_ PVOID ClientBufferBase,_In_ ULONG SubmitBufferLength,_Out_ PVOID *ProtocolReturnBuffer,_Out_ PULONG ReturnBufferLength,_Out_ PNTSTATUS ProtocolStatus)
NTSTATUS None None.SpFreeCredentialsHandle(_In_ LSA_SEC_HANDLE CredentialHandle)
HANDLE WINAPI kernel32.CreateThread(_In_opt_ LPSECURITY_ATTRIBUTES lpThreadAttributes,_In_ SIZE_T dwStackSize,_In_ LPTHREAD_START_ROUTINE lpStartAddress,_In_opt_ LPVOID lpParameter,_In_ DWORD dwCreationFlags,_Out_opt_ LPDWORD lpThreadId)
BOOL WINAPI kernel32.SetProcessWorkingSetSize(_In_ HANDLE hProcess,_In_ SIZE_T dwMinimumWorkingSetSize,_In_ SIZE_T dwMaximumWorkingSetSize)
DWORD WINAPI kernel32.GetProcessHeaps(_In_ DWORD NumberOfHeaps,_Out_ PHANDLE ProcessHeaps)
BOOL WINAPI kernel32.GetThreadPriorityBoost(_In_ HANDLE hThread,_Out_ PBOOL pDisablePriorityBoost)
HANDLE WINAPI kernel32.FindFirstFileNameTransactedW(_In_ LPCWSTR lpFileName,_In_ DWORD dwFlags,_Inout_ LPDWORD StringLength,_Inout_ PWCHAR LinkName,_In_opt_ HANDLE hTransaction)
SECURITY_STATUS SEC_Entry secur32.ExportSecurityContext(_In_ PCtxtHandle phContext,_In_ Ulong fFlags,_Out_ PSecBuffer pPackedContext,_Out_opt_ HANDLE *pToken)
DWORD APIENTRY None.NPPasswordChangeNotify(_In_ LPCWSTR lpAuthentInfoType,_In_ LPVOID lpAuthentInfo,_In_ LPCWSTR lpPreviousAuthentInfoType,_In_ LPVOID lpPreviousAuthentInfo,_In_ LPWSTR lpStationName,_In_ LPVOID StationHandle,_In_ DWORD dwChangeInfo)
VOID WINAPI kernel32.ExitThread(_In_ DWORD dwExitCode)
BOOL WINAPI kernel32.SetProcessDefaultCpuSets(_In_ HANDLE Process,_In_opt_ ULONG CpuSetIds,_In_ ULONG CpuSetIdCound)
PCUIDLIST_RELATIVE None None.ILSkip(_In_ PCUIDLIST_RELATIVE pidl,UINT cb None)
NTSTATUS None None.SpUnsealMessage(_In_ LSA_SEC_HANDLE ContextHandle,_In_ PSecBufferDesc MessageBuffers,_In_ ULONG MessageSequenceNumber,_Out_ PULONG QualityOfProtection)
STDMETHODIMP None None.ShouldShow(IShellFolder *psf None,PCIDLIST_ABSOLUTE pidlFolder None,PCUITEMID_CHILD pidlItem None)
BOOL WINAPI advapi32.GetWindowsAccountDomainSid(_In_ PSID pSid,_Out_opt_ PSID ppDomainSid,_Inout_ DWORD *cbSid)
HRESULT None oleaut32.VarUI8FromBool(_In_ VARIANT_BOOL boolIn,_Out_ ULONG64 *pi64Out)
SECURITY_STATUS None sspicli.SspiCopyAuthIdentity(_In_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE AuthData,_Out_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE *AuthDataCopy)
BOOL None None.WlxActivateUserShell(_In_ PVOID pWlxContext,_In_ PWSTR pszDesktopName,_In_ PWSTR pszMprLogonScript,_In_ PVOID pEnvironment)
LONG WINAPI winscard.SCardConnect(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReader,_In_ DWORD dwShareMode,_In_ DWORD dwPreferredProtocols,_Out_ LPSCARDHANDLE phCard,_Out_ LPDWORD pdwActiveProtocol)
LONG WINAPI winscard.SCardConnectW(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReader,_In_ DWORD dwShareMode,_In_ DWORD dwPreferredProtocols,_Out_ LPSCARDHANDLE phCard,_Out_ LPDWORD pdwActiveProtocol)
LONG WINAPI winscard.SCardConnectA(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReader,_In_ DWORD dwShareMode,_In_ DWORD dwPreferredProtocols,_Out_ LPSCARDHANDLE phCard,_Out_ LPDWORD pdwActiveProtocol)
STDAPI None shcore.RegisterScaleChangeEvent(_In_ HANDLE hEvent,_Out_ DWORD_PTR *pdwCookie)
NTSTATUS None None.SpSaveCredentials(_In_ LSA_SEC_HANDLE CredentialHandle,_In_ PSecBuffer Credentials)
HANDLE WINAPI kernel32.CreateRemoteThread(_In_ HANDLE hProcess,_In_ LPSECURITY_ATTRIBUTES lpThreadAttributes,_In_ SIZE_T dwStackSize,_In_ LPTHREAD_START_ROUTINE lpStartAddress,_In_ LPVOID lpParameter,_In_ DWORD dwCreationFlags,_Out_ LPDWORD lpThreadId)
BOOL WINAPI avrt.AvRtLeaveThreadOrderingGroup(_In_ HANDLE Context)
HRESULT None oleaut32.VarI2FromDisp(IDispatch *pdispIn None,_In_ LCID lcid,_Out_ SHORT *psOut)
SECURITY_STATUS SEC_Entry secur32.ImpersonateSecurityContext(_In_ PCtxtHandle phContext)
LONG WINAPI winscard.SCardGetStatusChange(_In_ SCARDCONTEXT hContext,_In_ DWORD dwTimeout,_Inout_ LPSCARD_READERSTATE rgReaderStates,_In_ DWORD cReaders)
LONG WINAPI winscard.SCardGetStatusChangeW(_In_ SCARDCONTEXT hContext,_In_ DWORD dwTimeout,_Inout_ LPSCARD_READERSTATE rgReaderStates,_In_ DWORD cReaders)
LONG WINAPI winscard.SCardGetStatusChangeA(_In_ SCARDCONTEXT hContext,_In_ DWORD dwTimeout,_Inout_ LPSCARD_READERSTATE rgReaderStates,_In_ DWORD cReaders)
BOOL WINAPI kernel32.AddIntegrityLabelToBoundaryDescriptor(_Inout_ HANDLE *BoundaryDescriptor,_In_ PSID IntegrityLabel)
HRESULT None oleaut32.VarUI1FromBool(_In_ VARIANT_BOOL boolIn,_Out_ BYTE *pbOut)
SECURITY_STATUS None sspicli.SspiPrepareForCredWrite(_In_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE AuthIdentity,_In_ PCWSTR pszTargetName,_Out_ PULONG pCredmanCredentialType,_Out_ PCWSTR *ppszCredmanTargetName,_Out_ PCWSTR *ppszCredmanUserName,_Out_ PUCHAR *ppCredentialBlob,_Out_ PULONG pCredentialBlobSize)
BOOL None advapi32.CredRead(_In_ LPCTSTR TargetName,_In_ DWORD Type,_In_ DWORD Flags,_Out_ PCREDENTIAL *Credential)
BOOL None advapi32.CredReadW(_In_ LPCTSTR TargetName,_In_ DWORD Type,_In_ DWORD Flags,_Out_ PCREDENTIAL *Credential)
BOOL None advapi32.CredReadA(_In_ LPCTSTR TargetName,_In_ DWORD Type,_In_ DWORD Flags,_Out_ PCREDENTIAL *Credential)
VOID CALLBACK None.FiberProc(_In_ PVOID lpParameter)
VOID FORCEINLINE None.TpDestroyCallbackEnviron(_In_ PTP_CALLBACK_ENVIRON CallbackEnviron)
BOOL WINAPI userenv.LoadUserProfile(_In_ HANDLE hToken,_Inout_ LPPROFILEINFO lpProfileInfo)
BOOL WINAPI userenv.LoadUserProfileW(_In_ HANDLE hToken,_Inout_ LPPROFILEINFO lpProfileInfo)
BOOL WINAPI userenv.LoadUserProfileA(_In_ HANDLE hToken,_Inout_ LPPROFILEINFO lpProfileInfo)
DWORD WINAPI kernel32.SetIoRateControlInformationJobObject(_In_ HANDLE hJob,_In_ JOBOBJECT_IO_RATE_CONTROL_INFORMATION *IoRateControlInfo)
VOID WINAPI kernel32.GetCurrentThreadStackLimits(_Out_ PULONG_PTR LowLimit,_Out_ PULONG_PTR HighLimit)
LONG WINAPI winscard.SCardForgetReader(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReaderName)
LONG WINAPI winscard.SCardForgetReaderW(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReaderName)
LONG WINAPI winscard.SCardForgetReaderA(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReaderName)
NTSTATUS WINAPI certpoleng.PstGetTrustAnchors(_In_ PUNICODE_STRING pTargetName,_In_ DWORD cCriteria,_In_opt_ PCCERT_SELECT_CRITERIA rgpCriteria,_Out_ PSecPkgContext_IssuerListInfoEx *ppTrustedIssuers)
BOOL WINAPI kernel32.IsWow64Process2(_In_ HANDLE hProcess,_Out_ USHORT *pProcessMachine,_Out_opt_ USHORT *pNativeMachine)
VOID WINAPI kernel32.CancelThreadpoolIo(_Inout_ PTP_IO pio)
VOID WINAPI kernel32.WaitForThreadpoolTimerCallbacks(_Inout_ PTP_TIMER pti,_In_ BOOL fCancelPendingCallbacks)
HANDLE None None.CreateThread(_In_ SEC_ATTRS SecurityAttributes,_In_ ULONG StackSize,_In_ SEC_THREAD_START StartFunction,_In_ PVOID ThreadParameter,_In_ ULONG CreationFlags,_Out_ PULONG ThreadId)
VOID None None.SetThreadpoolCallbackLibrary(_Inout_ PTP_CALLBACK_ENVIRON pcbe,_In_ PVOID mod)
LONG WINAPI winscard.SCardForgetCardType(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCardName)
LONG WINAPI winscard.SCardForgetCardTypeW(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCardName)
LONG WINAPI winscard.SCardForgetCardTypeA(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCardName)
SECURITY_STATUS None sspicli.SspiGetTargetHostName(_In_ PCWSTR pszTargetName,_Out_ PWSTR *pszHostName)
HRESULT None oleaut32.VarDecFromBool(_In_ VARIANT_BOOL boolIn,_Out_ DECIMAL *pdecOut)
BOOL WINAPI kernel32.RegisterWaitForSingleObject(_Out_ PHANDLE phNewWaitObject,_In_ HANDLE hObject,_In_ WAITORTIMERCALLBACK Callback,_In_opt_ PVOID Context,_In_ ULONG dwMilliseconds,_In_ ULONG dwFlags)
BOOL WINAPI kernel32.CancelWaitableTimer(_In_ HANDLE hTimer)
HRESULT None oleaut32.VarBstrFromDate(_In_ DATE dateIn,_In_ LCID lcid,_In_ ULONG dwFlags,_Out_ BSTR *pbstrOut)
DWORD WINAPI credui.CredUICmdLinePromptForCredentials(_In_ PCTSTR pszTargetName,_In_ PCtxtHandle Reserved,_In_opt_ DWORD dwAuthError,_Inout_ PTSTR pszUserName,_In_ ULONG ulUserNameMaxChars,_Inout_ PTSTR pszPassword,_In_ ULONG ulPasswordMaxChars,_Inout_ PBOOL pfSave,_In_ DWORD dwFlags)
DWORD WINAPI credui.CredUICmdLinePromptForCredentialsW(_In_ PCTSTR pszTargetName,_In_ PCtxtHandle Reserved,_In_opt_ DWORD dwAuthError,_Inout_ PTSTR pszUserName,_In_ ULONG ulUserNameMaxChars,_Inout_ PTSTR pszPassword,_In_ ULONG ulPasswordMaxChars,_Inout_ PBOOL pfSave,_In_ DWORD dwFlags)
DWORD WINAPI credui.CredUICmdLinePromptForCredentialsA(_In_ PCTSTR pszTargetName,_In_ PCtxtHandle Reserved,_In_opt_ DWORD dwAuthError,_Inout_ PTSTR pszUserName,_In_ ULONG ulUserNameMaxChars,_Inout_ PTSTR pszPassword,_In_ ULONG ulPasswordMaxChars,_Inout_ PBOOL pfSave,_In_ DWORD dwFlags)
LONG WINAPI winscard.SCardBeginTransaction(_In_ SCARDHANDLE hCard)
BOOL WINAPI advapi32.CreateWellKnownSid(_In_ WELL_KNOWN_SID_TYPE WellKnownSidType,_In_opt_ PSID DomainSid,_Out_opt_ PSID pSid,_Inout_ DWORD *cbSid)
NTSTATUS None None.LsaApLogonUserEx2(_In_ PLSA_CLIENT_REQUEST ClientRequest,_In_ SECURITY_LOGON_TYPE LogonType,_In_ PVOID ProtocolSubmitBuffer,_In_ PVOID ClientBufferBase,_In_ ULONG SubmitBufferSize,_Out_ PVOID *ProfileBuffer,_Out_ PULONG ProfileBufferSize,_Out_ PLUID LogonId,_Out_ PNTSTATUS SubStatus,_Out_ PLSA_TOKEN_INFORMATION_TYPE TokenInformationType,_Out_ PVOID *TokenInformation,_Out_ PUNICODE_STRING *AccountName,_Out_ PUNICODE_STRING *AuthenticatingAuthority,_Out_ PUNICODE_STRING *MachineName,_Out_ PSECPKG_PRIMARY_CRED PrimaryCredentials,_Out_ PSECPKG_SUPPLEMENTAL_CRED_ARRAY *SupplementalCredentials)
HRESULT None shell32.SHGetSetFolderCustomSettings(_Inout_ LPSHFOLDERCUSTOMSETTINGS pfcs,_In_ PCTSTR pszPath,DWORD dwReadWrite None)
NTSTATUS None None.DuplicateHandle(_In_ HANDLE SourceHandle,_Out_ PHANDLE DestinationHandle)
BOOL WINAPI kernel32.SetProcessAffinityMask(_In_ HANDLE hProcess,_In_ DWORD_PTR dwProcessAffinityMask)
BOOL None user32.SetMenuContextHelpId(HMENU hmenu None,DWORD dwContextHelpId None)
BOOL WINAPI kernel32.DeleteUmsThreadContext(_In_ PUMS_CONTEXT UmsThread)
PUMS_CONTEXT WINAPI kernel32.GetNextUmsListItem(_Inout_ PUMS_CONTEXT UmsContext)
PTP_WAIT WINAPI kernel32.CreateThreadpoolWait(_In_ PTP_WAIT_CALLBACK pfnwa,_Inout_opt_ PVOID pv,_In_opt_ PTP_CALLBACK_ENVIRON pcbe)
BOOL WINAPI kernel32.QueryFullProcessImageName(_In_ HANDLE hProcess,_In_ DWORD dwFlags,_Out_ LPTSTR lpExeName,_Inout_ PDWORD lpdwSize)
BOOL WINAPI kernel32.QueryFullProcessImageNameW(_In_ HANDLE hProcess,_In_ DWORD dwFlags,_Out_ LPTSTR lpExeName,_Inout_ PDWORD lpdwSize)
BOOL WINAPI kernel32.QueryFullProcessImageNameA(_In_ HANDLE hProcess,_In_ DWORD dwFlags,_Out_ LPTSTR lpExeName,_Inout_ PDWORD lpdwSize)
DWORD WINAPI kernel32.SuspendThread(_In_ HANDLE hThread)
HANDLE WINAPI kernel32.CreatePrivateNamespace(_In_opt_ LPSECURITY_ATTRIBUTES lpPrivateNamespaceAttributes,_In_ LPVOID lpBoundaryDescriptor,_In_ LPCTSTR lpAliasPrefix)
HANDLE WINAPI kernel32.CreatePrivateNamespaceW(_In_opt_ LPSECURITY_ATTRIBUTES lpPrivateNamespaceAttributes,_In_ LPVOID lpBoundaryDescriptor,_In_ LPCTSTR lpAliasPrefix)
HANDLE WINAPI kernel32.CreatePrivateNamespaceA(_In_opt_ LPSECURITY_ATTRIBUTES lpPrivateNamespaceAttributes,_In_ LPVOID lpBoundaryDescriptor,_In_ LPCTSTR lpAliasPrefix)
SECURITY_STATUS SEC_ENTRY secur32.SaslGetContextOption(_In_ PCtxtHandle ContextHandle,_In_ ULONG Option,_Out_ PVOID Value,_Out_ ULONG Size,_Out_opt_ PULONG Needed)
BOOL WINAPI advapi32.AddAuditAccessAceEx(_Inout_ PACL pAcl,_In_ DWORD dwAceRevision,_In_ DWORD AceFlags,_In_ DWORD dwAccessMask,_In_ PSID pSid,_In_ BOOL bAuditSuccess,_In_ BOOL bAuditFailure)
BOOL WINAPI kernel32.GetThreadIOPendingFlag(_In_ HANDLE hThread,_Inout_ PBOOL lpIOIsPending)
VOID WINAPI kernel32.SubmitThreadpoolWork(_Inout_ PTP_WORK pwk)
DWORD None None.NPFMXGetPermHelp(_In_ LPTSTR lpDriveName,_In_ DWORD nType,_In_ BOOL fDirectory,_Inout_ LPVOID lpBuffer,_Inout_ LPDWORD lpBufferSize,_Out_ LPDWORD lpnHelpContext)
BOOL None shell32.ILRemoveLastID(_Inout_opt_ PUIDLIST_RELATIVE pidl)
BOOL None shell32.ILIsParent(_In_ PCIDLIST_ABSOLUTE pidl1,_In_ PCIDLIST_ABSOLUTE pidl2,_In_ BOOL fImmediate)
HRESULT None oleaut32.VarCyFromUI2(_In_ USHORT uiIn,_Out_ CY *pcyOut)
BOOLEAN WINAPI kernel32.TryAcquireSRWLockExclusive(_Inout_ PSRWLOCK SRWLock)
NETIOAPI_API None iphlpapi.GetMulticastIpAddressEntry(_Inout_ PMIB_MULTICASTIPADDRESS_ROW Row)
VOID FORCEINLINE None.TpSetCallbackRaceWithDll(_Inout_ PTP_CALLBACK_ENVIRON CallbackEnviron,_In_ PVOID DllHandle)
NTSTATUS None None.SpAcceptLsaModeContext(_In_ LSA_SEC_HANDLE CredentialHandle,_In_ LSA_SEC_HANDLE ContextHandle,_In_ PSecBufferDesc InputBuffer,_In_ ULONG ContextRequirements,_In_ ULONG TargetDataRep,_Out_ PLSA_SEC_HANDLE NewContextHandle,_Out_ PSecBufferDesc OutputBuffer,_Out_ PULONG ContextAttributes,_Out_ PTimeStamp ExpirationTime,_Out_ PBOOLEAN MappedContext,_Out_ PSecBuffer ContextData)
DWORD WINAPI kernel32.ResumeThread(_In_ HANDLE hThread)
HRESULT None shell32.SHGetDesktopFolder(_Out_ IShellFolder **ppshf)
HRESULT None oleaut32.VarBstrFromR8(_In_ DOUBLE dblIn,_In_ LCID lcid,_In_ ULONG dwFlags,_Out_ BSTR *pbstrOut)
HRESULT None oleaut32.VarI8FromR4(_In_ FLOAT fltIn,_Out_ LONG64 *pi64Out)
DWORD WINAPI credui.CredUIParseUserName(_In_ PCTSTR pszUserName,_Out_ PTSTR pszUser,_In_ ULONG ulUserMaxChars,_Out_ PTSTR pszDomain,_In_ ULONG ulDomainMaxChars)
DWORD WINAPI credui.CredUIParseUserNameW(_In_ PCTSTR pszUserName,_Out_ PTSTR pszUser,_In_ ULONG ulUserMaxChars,_Out_ PTSTR pszDomain,_In_ ULONG ulDomainMaxChars)
DWORD WINAPI credui.CredUIParseUserNameA(_In_ PCTSTR pszUserName,_Out_ PTSTR pszUser,_In_ ULONG ulUserMaxChars,_Out_ PTSTR pszDomain,_In_ ULONG ulDomainMaxChars)
HANDLE WINAPI kernel32.CreateEvent(_In_opt_ LPSECURITY_ATTRIBUTES lpEventAttributes,_In_ BOOL bManualReset,_In_ BOOL bInitialState,_In_opt_ LPCTSTR lpName)
HANDLE WINAPI kernel32.CreateEventW(_In_opt_ LPSECURITY_ATTRIBUTES lpEventAttributes,_In_ BOOL bManualReset,_In_ BOOL bInitialState,_In_opt_ LPCTSTR lpName)
HANDLE WINAPI kernel32.CreateEventA(_In_opt_ LPSECURITY_ATTRIBUTES lpEventAttributes,_In_ BOOL bManualReset,_In_ BOOL bInitialState,_In_opt_ LPCTSTR lpName)
HRESULT WINAPI kernel32.GetThreadDescription(_In_ HANDLE hThread,_Out_ PWSTR *threadDescription)
BOOL WINAPI kernel32.ResetEvent(_In_ HANDLE hEvent)
HRESULT None shlwapi.ConnectToConnectionPoint(_In_opt_ IUnknown *punk,_In_ REFIID riidEvent,BOOL fConnect None,_In_ IUnknown *punkTarget,_Out_ DWORD *pdwCookie,_Out_opt_ IConnectionPoint **ppcpOut)
BOOL WINAPI kernel32.GetThreadPriorityBoost(_In_ HANDLE hThread,_Out_ PBOOL pDisablePriorityBoost)
BOOL WINAPI advapi32.AccessCheckAndAuditAlarm(_In_ LPCTSTR SubsystemName,_In_opt_ LPVOID HandleId,_In_ LPTSTR ObjectTypeName,_In_opt_ LPTSTR ObjectName,_In_ PSECURITY_DESCRIPTOR SecurityDescriptor,_In_ DWORD DesiredAccess,_In_ PGENERIC_MAPPING GenericMapping,_In_ BOOL ObjectCreation,_Out_ LPDWORD GrantedAccess,_Out_ LPBOOL AccessStatus,_Out_ LPBOOL pfGenerateOnClose)
BOOL WINAPI advapi32.AccessCheckAndAuditAlarmW(_In_ LPCTSTR SubsystemName,_In_opt_ LPVOID HandleId,_In_ LPTSTR ObjectTypeName,_In_opt_ LPTSTR ObjectName,_In_ PSECURITY_DESCRIPTOR SecurityDescriptor,_In_ DWORD DesiredAccess,_In_ PGENERIC_MAPPING GenericMapping,_In_ BOOL ObjectCreation,_Out_ LPDWORD GrantedAccess,_Out_ LPBOOL AccessStatus,_Out_ LPBOOL pfGenerateOnClose)
BOOL WINAPI advapi32.AccessCheckAndAuditAlarmA(_In_ LPCTSTR SubsystemName,_In_opt_ LPVOID HandleId,_In_ LPTSTR ObjectTypeName,_In_opt_ LPTSTR ObjectName,_In_ PSECURITY_DESCRIPTOR SecurityDescriptor,_In_ DWORD DesiredAccess,_In_ PGENERIC_MAPPING GenericMapping,_In_ BOOL ObjectCreation,_Out_ LPDWORD GrantedAccess,_Out_ LPBOOL AccessStatus,_Out_ LPBOOL pfGenerateOnClose)
BOOL WINAPI user32.SetUserObjectSecurity(_In_ HANDLE hObj,_In_ PSECURITY_INFORMATION pSIRequested,_In_ PSECURITY_DESCRIPTOR pSID)
HRESULT None oleaut32.VarUI1FromDate(_In_ DATE dateIn,_Out_ BYTE *pbOut)
LONG WINAPI winscard.SCardDisconnect(_In_ SCARDHANDLE hCard,_In_ DWORD dwDisposition)
NETIOAPI_API None iphlpapi.GetInvertedIfStackTable(_Out_ PMIB_INVERTEDIFSTACK_TABLE *Table)
NTSTATUS None None.SpSetExtendedInformation(_In_ SECPKG_EXTENDED_INFORMATION_CLASS Class,_In_ PSECPKG_EXTENDED_INFORMATION Info)
VOID WINAPI advapi32.BuildExplicitAccessWithName(_Inout_ PEXPLICIT_ACCESS pExplicitAccess,_In_opt_ LPTSTR pTrusteeName,_In_ DWORD AccessPermissions,_In_ ACCESS_MODE AccessMode,_In_ DWORD Inheritance)
VOID WINAPI advapi32.BuildExplicitAccessWithNameW(_Inout_ PEXPLICIT_ACCESS pExplicitAccess,_In_opt_ LPTSTR pTrusteeName,_In_ DWORD AccessPermissions,_In_ ACCESS_MODE AccessMode,_In_ DWORD Inheritance)
VOID WINAPI advapi32.BuildExplicitAccessWithNameA(_Inout_ PEXPLICIT_ACCESS pExplicitAccess,_In_opt_ LPTSTR pTrusteeName,_In_ DWORD AccessPermissions,_In_ ACCESS_MODE AccessMode,_In_ DWORD Inheritance)
PVOID NTAPI None.CreateSharedMemory(_In_ ULONG MaxSize,_In_ ULONG InitialSize)
BOOL WINAPI advapi32.InitializeAcl(_Out_ PACL pAcl,_In_ DWORD nAclLength,_In_ DWORD dwAclRevision)
SECURITY_STATUS SEC_Entry secur32.VerifySignature(_In_ PCtxtHandle phContext,_In_ PSecBufferDesc pMessage,_In_ ULONG MessageSeqNo,_Out_ PULONG pfQOP)
VOID WINAPI kernel32.Sleep(_In_ DWORD dwMilliseconds)
NTSTATUS WINAPI certpoleng.PstMapCertificate(_In_ PCCERT_CONTEXT pCert,_Out_ LSA_TOKEN_INFORMATION_TYPE *pTokenInformationType,_Out_ PVOID *ppTokenInformation)
LONG WINAPI winscard.SCardCancel(_In_ SCARDCONTEXT hContext)
BOOL None kernel32.QueryIdleProcessorCycleTimeEx(_In_ USHORT Group,_Inout_ PULONG BufferLength,_Out_ PULONG64 ProcessorIdleCycleTime)
SECURITY_STATUS SEC_Entry secur32.ApplyControlToken(_In_ PCtxtHandle phContext,_In_ PSecBufferDesc pInput)
LONG WINAPI winscard.SCardReleaseContext(_In_ SCARDCONTEXT hContext)
PIDLIST_RELATIVE None shell32.ILAppendID(_In_opt_ PIDLIST_RELATIVE pidl,_In_ LPSHITEMID pmkid,BOOL fAppend None)
BOOL None None.WlxCloseUserDesktop(_In_ HANDLE hWlx,_In_ PWLX_DESKTOP pDesktop,_In_ HANDLE hToken)
HRESULT None oleaut32.VarI2FromStr(_In_ LPCOLESTR strIn,_In_ LCID lcid,_In_ ULONG dwFlags,_Out_ SHORT *psOut)
DWORD None iphlpapi.GetIpAddrTable(_Out_ PMIB_IPADDRTABLE pIpAddrTable,_Inout_ PULONG pdwSize,_In_ BOOL bOrder)
BOOL WINAPI authz.AuthzModifySecurityAttributes(_In_ AUTHZ_CLIENT_CONTEXT_HANDLE hAuthzClientContext,_In_ PAUTHZ_SECURITY_ATTRIBUTE_OPERATION pOperations,_In_ PAUTHZ_SECURITY_ATTRUBUTES_INFORMATION pAttributes)
NTSTATUS WINAPI certpoleng.PstValidate(_In_opt_ PUNICODE_STRING pTargetName,_In_ BOOL bIsClient,_In_opt_ CERT_USAGE_MATCH *pRequestedIssuancePolicy,_In_opt_ HCERTSTORE *phAdditionalCertStore,_In_ PCCERT_CONTEXT pCert,_Out_opt_ GUID *pProvGUID)
BOOL WINAPI kernel32.GetUmsSystemThreadInformation(_In_ HANDLE ThreadHandle,_Inout_ PUMS_SYSTEM_THREAD_INFORMATION SystemThreadInfo)
NTSTATUS None None.SpInitLsaModeContext(_In_ LSA_SEC_HANDLE CredentialHandle,_In_ LSA_SEC_HANDLE ContextHandle,_In_ PUNICODE_STRING TargetName,_In_ ULONG ContextRequirements,_In_ ULONG TargetDataRep,_In_ PSecBufferDesc InputBuffers,_Out_ PLSA_SEC_HANDLE NewContextHandle,_Out_ PSecBufferDesc OutputBuffers,_Out_ PULONG ContextAttributes,_Out_ PTimeStamp ExpirationTime,_Out_ PBOOLEAN MappedContext,_Out_ PSecBuffer ContextData)
NTSTATUS NTAPI secur32.LsaEnumerateLogonSessions(_Out_ PULONG LogonSessionCount,_Out_ PLUID *LogonSessionList)
BOOL None advapi32.CredIsMarshaledCredential(_In_ LPCTSTR MarshaledCredential)
BOOL None advapi32.CredIsMarshaledCredentialW(_In_ LPCTSTR MarshaledCredential)
BOOL None advapi32.CredIsMarshaledCredentialA(_In_ LPCTSTR MarshaledCredential)
SECURITY_STATUS None sspicli.SspiExcludePackage(_In_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE AuthIdentity,_In_ PCWSTR pszPackageName,_Out_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE *ppNewAuthIdentity)
NTSTATUS None secur32.LsaLookupAuthenticationPackage(_In_ HANDLE LsaHandle,_In_ PLSA_STRING PackageName,_Out_ PULONG AuthenticationPackage)
BOOL WINAPI advapi32.CredUnprotect(_In_ BOOL fAsSelf,_In_ LPTSTR pszProtectedCredentials,_In_ DWORD cchCredentials,_Out_ LPTSTR pszCredentials,_Inout_ DWORD *pcchMaxChars)
BOOL WINAPI advapi32.CredUnprotectW(_In_ BOOL fAsSelf,_In_ LPTSTR pszProtectedCredentials,_In_ DWORD cchCredentials,_Out_ LPTSTR pszCredentials,_Inout_ DWORD *pcchMaxChars)
BOOL WINAPI advapi32.CredUnprotectA(_In_ BOOL fAsSelf,_In_ LPTSTR pszProtectedCredentials,_In_ DWORD cchCredentials,_Out_ LPTSTR pszCredentials,_Inout_ DWORD *pcchMaxChars)
BOOL WINAPI kernel32.SetInformationJobObject(_In_ HANDLE hJob,_In_ JOBOBJECTINFOCLASS JobObjectInfoClass,_In_ LPVOID lpJobObjectInfo,_In_ DWORD cbJobObjectInfoLength)
HRESULT None oleaut32.VarUI8FromI1(_In_ CHAR cIn,_Out_ ULONG64 *pi64Out)
VOID WINAPI kernel32.FreeMemoryJobObject(_In_ VOID *Buffer)
VOID WINAPI kernel32.CloseThreadpoolIo(_Inout_ PTP_IO pio)
BOOL WINAPI kernel32.SetProtectedPolicy(_In_ LPCGUID PolicyGuid,_In_ ULONG_PTR PolicyValue,_Out_ PULONG_PTR OldPolicyValue)
LPVOID WINAPI kernel32.ConvertThreadToFiber(_In_opt_ LPVOID lpParameter)
VOID None None.WlxWin31Migrate(_In_ HANDLE hWlx)
NTSTATUS NTAPI None.SpLsaModeInitialize(_In_ ULONG LsaVersion,_Out_ PULONG PackageVersion,_Out_ PSECPKG_FUNCTION_TABLE *ppTables,_Out_ PULONG pcTables)
SECURITY_STATUS None credui.SspiUpdateCredentials(_In_ HANDLE ContextHandle,_In_ GUID *CredType,_In_ ULONG FlatCredUIContextLength,_In_ PUCHAR FlatCredUIContext)
HRESULT None oleaut32.VarCyFromDisp(_In_ IDispatch *pdispIn,_In_ LCID lcid,_Out_ CY *pcyOut)
BOOL WINAPI kernel32.ReleaseMutex(_In_ HANDLE hMutex)
PTP_TIMER WINAPI kernel32.CreateThreadpoolTimer(_In_ PTP_TIMER_CALLBACK pfnti,_Inout_opt_ PVOID pv,_In_opt_ PTP_CALLBACK_ENVIRON pcbe)
SECURITY_STATUS SEC_ENTRY secur32.SaslEnumerateProfiles(_Out_ LPTSTR *ProfileList,_Out_ ULONG *ProfileCount)
SECURITY_STATUS SEC_ENTRY secur32.SaslEnumerateProfilesW(_Out_ LPTSTR *ProfileList,_Out_ ULONG *ProfileCount)
SECURITY_STATUS SEC_ENTRY secur32.SaslEnumerateProfilesA(_Out_ LPTSTR *ProfileList,_Out_ ULONG *ProfileCount)
BOOL WINAPI advapi32.CheckTokenMembership(_In_opt_ HANDLE TokenHandle,_In_ PSID SidToCheck,_Out_ PBOOL IsMember)
BOOL None kernel32.GetNumaProcessorNodeEx(_In_ PPROCESSOR_NUMBER Processor,_Out_ PUSHORT NodeNumber)
VOID WINAPI kernel32.FreeLibraryWhenCallbackReturns(_Inout_ PTP_CALLBACK_INSTANCE pci,_In_ HMODULE mod)
LONG WINAPI winscard.SCardIntroduceCardType(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCardName,_In_opt_ LPCGUID pguidPrimaryProvider,_In_opt_ LPCGUID rgguidInterfaces,_In_ DWORD dwInterfaceCount,_In_ LPCBYTE pbAtr,_In_ LPCBYTE pbAtrMask,_In_ DWORD cbAtrLen)
LONG WINAPI winscard.SCardIntroduceCardTypeW(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCardName,_In_opt_ LPCGUID pguidPrimaryProvider,_In_opt_ LPCGUID rgguidInterfaces,_In_ DWORD dwInterfaceCount,_In_ LPCBYTE pbAtr,_In_ LPCBYTE pbAtrMask,_In_ DWORD cbAtrLen)
LONG WINAPI winscard.SCardIntroduceCardTypeA(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCardName,_In_opt_ LPCGUID pguidPrimaryProvider,_In_opt_ LPCGUID rgguidInterfaces,_In_ DWORD dwInterfaceCount,_In_ LPCBYTE pbAtr,_In_ LPCBYTE pbAtrMask,_In_ DWORD cbAtrLen)
LONG WINAPI advapi32.RegGetKeySecurity(_In_ HKEY hKey,_In_ SECURITY_INFORMATION SecurityInformation,_Out_opt_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_Inout_ LPDWORD lpcbSecurityDescriptor)
DWORD None None.NPAddConnection3(_In_ HWND hwndOwner,_In_ LPNETRESOURCE lpNetResource,_In_ LPTSTR lpPassword,_In_ LPTSTR lpUserName,_In_ DWORD dwFlags)
BOOL WINAPI kernel32.TerminateThread(_Inout_ HANDLE hThread,_In_ DWORD dwExitCode)
PVOID WINAPI kernel32.FlsGetValue(_In_ DWORD dwFlsIndex)
LONG WINAPI winscard.SCardListReaders(_In_ SCARDCONTEXT hContext,_In_opt_ LPCTSTR mszGroups,_Out_ LPTSTR mszReaders,_Inout_ LPDWORD pcchReaders)
LONG WINAPI winscard.SCardListReadersW(_In_ SCARDCONTEXT hContext,_In_opt_ LPCTSTR mszGroups,_Out_ LPTSTR mszReaders,_Inout_ LPDWORD pcchReaders)
LONG WINAPI winscard.SCardListReadersA(_In_ SCARDCONTEXT hContext,_In_opt_ LPCTSTR mszGroups,_Out_ LPTSTR mszReaders,_Inout_ LPDWORD pcchReaders)
VOID FORCEINLINE None.TpSetCallbackPersistent(_Inout_ PTP_CALLBACK_ENVIRON CallbackEnviron)
HRESULT None winshfhc.EstimateFileRiskLevel(_In_ LPCWSTR pszFilePath,_In_ LPCWSTR pszExt,_In_ LPCWSTR pszHandler,_Out_ FILE_RISK_LEVEL *pfrlEstimate)
HRESULT None shell32.GetCategory([out] KF_CATEGORY *pCategory)
BOOL WINAPI kernel32.IsProcessInJob(_In_ HANDLE ProcessHandle,_In_opt_ HANDLE JobHandle,_Out_ PBOOL Result)
PSLIST_ENTRY FASTCALL kernel32.InterlockedPushListSList(_Inout_ PSLIST_HEADER ListHead,_Inout_ PSLIST_ENTRY List,_Inout_ PSLIST_ENTRY ListEnd,_In_ ULONG Count)
BOOL None advapi32.CredWriteDomainCredentials(_In_ PCREDENTIAL_TARGET_INFORMATION TargetInfo,_In_ PCREDENTIAL Credential,_In_ DWORD Flags)
BOOL None advapi32.CredWriteDomainCredentialsW(_In_ PCREDENTIAL_TARGET_INFORMATION TargetInfo,_In_ PCREDENTIAL Credential,_In_ DWORD Flags)
BOOL None advapi32.CredWriteDomainCredentialsA(_In_ PCREDENTIAL_TARGET_INFORMATION TargetInfo,_In_ PCREDENTIAL Credential,_In_ DWORD Flags)
HRESULT None oleaut32.VarDecFromR4(_In_ FLOAT fltIn,_Out_ DECIMAL *pdecOut)
NTSTATUS NTAPI None.CrediRead(_In_ PLUID LogonId,_In_ ULONG CredFlags,_In_ LPWSTR TargetName,_In_ ULONG Type,_In_ ULONG Flags,_Out_ PENCRYPTED_CREDENTIALW *Credential)
BOOL WINAPI kernel32.EnterUmsSchedulingMode(_In_ PUMS_SCHEDULER_STARTUP_INFO SchedulerStartupInfo)
DWORD WINAPI advapi32.TreeResetNamedSecurityInfo(_In_ LPTSTR pObjectName,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_In_opt_ PSID pOwner,_In_opt_ PSID pGroup,_In_opt_ PACL pDacl,_In_opt_ PACL pSacl,_In_ BOOL KeepExplicit,_In_opt_ FN_PROGRESS fnProgress,_In_ PROG_INVOKE_SETTING ProgressInvokeSetting,_In_opt_ PVOID Args)
DWORD WINAPI advapi32.TreeResetNamedSecurityInfoW(_In_ LPTSTR pObjectName,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_In_opt_ PSID pOwner,_In_opt_ PSID pGroup,_In_opt_ PACL pDacl,_In_opt_ PACL pSacl,_In_ BOOL KeepExplicit,_In_opt_ FN_PROGRESS fnProgress,_In_ PROG_INVOKE_SETTING ProgressInvokeSetting,_In_opt_ PVOID Args)
DWORD WINAPI advapi32.TreeResetNamedSecurityInfoA(_In_ LPTSTR pObjectName,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_In_opt_ PSID pOwner,_In_opt_ PSID pGroup,_In_opt_ PACL pDacl,_In_opt_ PACL pSacl,_In_ BOOL KeepExplicit,_In_opt_ FN_PROGRESS fnProgress,_In_ PROG_INVOKE_SETTING ProgressInvokeSetting,_In_opt_ PVOID Args)
BOOL WINAPI user32.PeekMessage(_Out_ LPMSG lpMsg,_In_opt_ HWND hWnd,_In_ UINT wMsgFilterMin,_In_ UINT wMsgFilterMax,_In_ UINT wRemoveMsg)
BOOL WINAPI user32.PeekMessageW(_Out_ LPMSG lpMsg,_In_opt_ HWND hWnd,_In_ UINT wMsgFilterMin,_In_ UINT wMsgFilterMax,_In_ UINT wRemoveMsg)
BOOL WINAPI user32.PeekMessageA(_Out_ LPMSG lpMsg,_In_opt_ HWND hWnd,_In_ UINT wMsgFilterMin,_In_ UINT wMsgFilterMax,_In_ UINT wRemoveMsg)
BOOL None kernel32.GetThreadGroupAffinity(_In_ HANDLE hThread,_Out_ PGROUP_AFFINITY GroupAffinity)
BOOL None advapi32.CredEnumerate(_In_ LPCTSTR Filter,_In_ DWORD Flags,_Out_ DWORD *Count,_Out_ PCREDENTIAL **Credentials)
BOOL None advapi32.CredEnumerateW(_In_ LPCTSTR Filter,_In_ DWORD Flags,_Out_ DWORD *Count,_Out_ PCREDENTIAL **Credentials)
BOOL None advapi32.CredEnumerateA(_In_ LPCTSTR Filter,_In_ DWORD Flags,_Out_ DWORD *Count,_Out_ PCREDENTIAL **Credentials)
VOID CALLBACK None.TimerCallback(_Inout_ PTP_CALLBACK_INSTANCE Instance,_Inout_opt_ PVOID Context,_Inout_ PTP_TIMER Timer)
BOOL None shell32.SHGetDiskFreeSpace(LPCTSTR pszVolume None,ULARGE_INTEGER *pqwFreeCaller None,ULARGE_INTEGER *pqwTot None,ULARGE_INTEGER *pqwFree None)
LONG WINAPI winscard.SCardEstablishContext(_In_ DWORD dwScope,_In_ LPCVOID pvReserved1,_In_ LPCVOID pvReserved2,_Out_ LPSCARDCONTEXT phContext)
NTSTATUS None None.SpMakeSignature(_In_ LSA_SEC_HANDLE ContextHandle,_In_ ULONG QualityOfProtection,_Inout_ PSecBufferDesc MessageBuffers,_In_ ULONG MessageSequenceNumber)
NETIOAPI_API None iphlpapi.GetIpInterfaceTable(_In_ ADDRESS_FAMILY Family,_Out_ PMIB_IPINTERFACE_TABLE *Table)
DWORD None None.NPGetConnection(_In_ LPTSTR lpLocalName,_Out_ LPTSTR lpRemoteName,_Inout_ LPDWORD lpBufferSize)
NTSTATUS None None.SpMarshallSupplementalCreds(_In_ ULONG CredentialSize,_In_ PUCHAR Credentials,_Out_ PULONG MarshalledCredSize,_Out_ PVOID *MarshalledCreds)
VOID None None.SetThreadpoolCallbackPool(_Inout_ PTP_CALLBACK_ENVIRON pcbe,_In_ PTP_POOL ptpp)
HRESULT None oleaut32.VarUI1FromDisp(IDispatch *pdispIn None,_In_ LCID lcid,_Out_ BYTE *pbOut)
NTSTATUS NTAPI advapi32.LsaQueryDomainInformationPolicy(_In_ LSA_HANDLE PolicyHandle,_In_ POLICY_DOMAIN_INFORMATION_CLASS InformationClass,_Out_ PVOID *Buffer)
DWORD None shell32.SHRestricted(RESTRICTIONS rest None)
HRESULT None oleaut32.VarI1FromUI8(_In_ ULONG64 i64In,_Out_ CHAR *pcOut)
BOOLEAN None None.GetCallInfo(_Out_ PSECPKG_CALL_INFO Info)
BOOL WINAPI kernel32.QueryThreadCycleTime(_In_ HANDLE ThreadHandle,_Out_ PULONG64 CycleTime)
DWORD None iphlpapi.IcmpSendEcho(_In_ HANDLE IcmpHandle,_In_ IPAddr DestinationAddress,_In_ LPVOID RequestData,_In_ WORD RequestSize,_In_opt_ PIP_OPTION_INFORMATION RequestOptions,_Out_ LPVOID ReplyBuffer,_In_ DWORD ReplySize,_In_ DWORD Timeout)
VOID None None.FreeSharedMemory(_In_ PVOID SharedMem,_In_ PVOID Memory)
DWORD WINAPI kernel32.GetProcessIdOfThread(_In_ HANDLE Thread)
DWORD None iphlpapi.NhpAllocateAndGetInterfaceInfoFromStack(IP_INTERFACE_NAME_INFO ppTable None,PDWORD pdwCount None,BOOL bOrder None,HANDLE hHeap None,DWORD dwFlags None)
BOOL WINAPI kernel32.AssignProcessToJobObject(_In_ HANDLE hJob,_In_ HANDLE hProcess)
BOOL WINAPI advapi32.CreateProcessWithTokenW(_In_ HANDLE hToken,_In_ DWORD dwLogonFlags,_In_opt_ LPCWSTR lpApplicationName,_Inout_opt_ LPWSTR lpCommandLine,_In_ DWORD dwCreationFlags,_In_opt_ LPVOID lpEnvironment,_In_opt_ LPCWSTR lpCurrentDirectory,_In_ LPSTARTUPINFOW lpStartupInfo,_Out_ LPPROCESS_INFORMATION lpProcessInfo)
HRESULT None shell32.SHCLSIDFromString(_In_ PCWSTR psz,_Out_ CLSID *pcClsid)
PVOID None None.AllocateLsaHeap(_In_ ULONG Length)
BOOL None kernel32.SetThreadInformation(_In_ HANDLE hThread,_In_ THREAD_INFORMATION_CLASS ThreadInformationClass,_In_reads_bytes_ ThreadInformation None,_In_ DWORD ThreadInformationSize)
BOOL WINAPI kernel32.GetSystemCpuSetInformation(_Out_opt_ PSYSTEM_CPU_SET_INFORMATION Information,_In_ ULONG BufferLength,_Out_ PULONG ReturnedLength,_In_opt_ HANDLE Process,_Reserved_ ULONG Flags)
BOOL None shlwapi.PathFindOnPath(_Inout_ LPTSTR pszFile,_In_opt_ LPCTSTR *ppszOtherDirs)
BOOL None shlwapi.PathFindOnPathW(_Inout_ LPTSTR pszFile,_In_opt_ LPCTSTR *ppszOtherDirs)
BOOL None shlwapi.PathFindOnPathA(_Inout_ LPTSTR pszFile,_In_opt_ LPCTSTR *ppszOtherDirs)
PTP_WORK WINAPI kernel32.CreateThreadpoolWork(_In_ PTP_WORK_CALLBACK pfnwk,_Inout_opt_ PVOID pv,_In_opt_ PTP_CALLBACK_ENVIRON pcbe)
BOOL None shell32.PathIsExe(_In_ PCWSTR szfile)
HRESULT None oleaut32.VarUI4FromI8(_In_ LONG64 i64In,_Out_ ULONG *plOut)
BOOL WINAPI kernelbase.TlsSetValue(_In_ DWORD dwTlsIndex,_In_opt_ LPVOID lpTlsValue)
HRESULT None url.MIMEAssociationDialog(HWND hwndParent None,DWORD dwInFlags None,PCTSTR pcszFile None,PCTSTR pcszMIMEContentType None,_Out_ PTSTR pszAppBuf,UINT ucAppBufLen None)
HRESULT None url.MIMEAssociationDialogW(HWND hwndParent None,DWORD dwInFlags None,PCTSTR pcszFile None,PCTSTR pcszMIMEContentType None,_Out_ PTSTR pszAppBuf,UINT ucAppBufLen None)
HRESULT None url.MIMEAssociationDialogA(HWND hwndParent None,DWORD dwInFlags None,PCTSTR pcszFile None,PCTSTR pcszMIMEContentType None,_Out_ PTSTR pszAppBuf,UINT ucAppBufLen None)
BOOL WINAPI kernel32.GetNumaAvailableMemoryNode(_In_ UCHAR Node,_Out_ PULONGLONG AvailableBytes)
DWORD WINAPI kernel32.QueryIoRateControlInformationJobObject(_In_opt_ HANDLE hJob,_In_opt_ PCWSTR VolumeName,_Out_ JOBOBJECT_IO_RATE_CONTROL_INFORMATION **InfoBlocks,_Out_ ULONG *InfoBlockCount)
PSLIST_ENTRY WINAPI kernel32.InterlockedPushListSListEx(_Inout_ PSLIST_HEADER ListHead,_Inout_ PSLIST_ENTRY List,_Inout_ PSLIST_ENTRY ListEnd,_In_ ULONG Count)
BOOL WINAPI kernel32.SetThreadpoolWaitEx(_Inout_ PTP_WAIT pwa,_In_opt_ HANDLE h,_In_opt_ PFILETIME pftTimeout,_Reserved_ PVOID Reserved)
HRESULT None shell32.SHGetNameFromPropertyKey(_In_ REFPROPERTYKEY propkey,_Out_ PWSTR *ppszCanonicalName)
LONG WINAPI winscard.SCardControl(_In_ SCARDHANDLE hCard,_In_ DWORD dwControlCode,_In_ LPCVOID lpInBuffer,_In_ DWORD nInBufferSize,_Out_ LPVOID lpOutBuffer,_In_ DWORD nOutBufferSize,_Out_ LPDWORD lpBytesReturned)
NTSTATUS NTAPI advapi32.LsaSetForestTrustInformation(_In_ LSA_HANDLE PolicyHandle,_In_ PLSA_UNICODE_STRING TrustedDomainName,_In_ PLSA_FOREST_TRUST_INFORMATION ForestTrustInfo,_In_ BOOLEAN CheckOnly,_Out_ PLSA_FOREST_TRUST_COLLISION_INFORMATION *CollisionInfo)
BOOLEAN WINAPI advapi32.AuditSetSystemPolicy(_In_ PCAUDIT_POLICY_INFORMATION pAuditPolicy,_In_ ULONG PolicyCount)
NETIOAPI_API None iphlpapi.GetIpForwardEntry2(_Inout_ PMIB_IPFORWARD_ROW2 Row)
DWORD None credui.CredUIStoreSSOCredW(_In_ PCWSTR pszRealm,_In_ PCWSTR pszUsername,_In_ PCWSTR pszPassword,_In_ BOOL bPersist)
BOOL WINAPI advapi32.CreateProcessAsUser(_In_opt_ HANDLE hToken,_In_opt_ LPCTSTR lpApplicationName,_Inout_opt_ LPTSTR lpCommandLine,_In_opt_ LPSECURITY_ATTRIBUTES lpProcessAttributes,_In_opt_ LPSECURITY_ATTRIBUTES lpThreadAttributes,_In_ BOOL bInheritHandles,_In_ DWORD dwCreationFlags,_In_opt_ LPVOID lpEnvironment,_In_opt_ LPCTSTR lpCurrentDirectory,_In_ LPSTARTUPINFO lpStartupInfo,_Out_ LPPROCESS_INFORMATION lpProcessInformation)
BOOL WINAPI advapi32.CreateProcessAsUserW(_In_opt_ HANDLE hToken,_In_opt_ LPCTSTR lpApplicationName,_Inout_opt_ LPTSTR lpCommandLine,_In_opt_ LPSECURITY_ATTRIBUTES lpProcessAttributes,_In_opt_ LPSECURITY_ATTRIBUTES lpThreadAttributes,_In_ BOOL bInheritHandles,_In_ DWORD dwCreationFlags,_In_opt_ LPVOID lpEnvironment,_In_opt_ LPCTSTR lpCurrentDirectory,_In_ LPSTARTUPINFO lpStartupInfo,_Out_ LPPROCESS_INFORMATION lpProcessInformation)
BOOL WINAPI advapi32.CreateProcessAsUserA(_In_opt_ HANDLE hToken,_In_opt_ LPCTSTR lpApplicationName,_Inout_opt_ LPTSTR lpCommandLine,_In_opt_ LPSECURITY_ATTRIBUTES lpProcessAttributes,_In_opt_ LPSECURITY_ATTRIBUTES lpThreadAttributes,_In_ BOOL bInheritHandles,_In_ DWORD dwCreationFlags,_In_opt_ LPVOID lpEnvironment,_In_opt_ LPCTSTR lpCurrentDirectory,_In_ LPSTARTUPINFO lpStartupInfo,_Out_ LPPROCESS_INFORMATION lpProcessInformation)
BOOL WINAPI kernel32.CreateProcess(_In_opt_ LPCTSTR lpApplicationName,_Inout_opt_ LPTSTR lpCommandLine,_In_opt_ LPSECURITY_ATTRIBUTES lpProcessAttributes,_In_opt_ LPSECURITY_ATTRIBUTES lpThreadAttributes,_In_ BOOL bInheritHandles,_In_ DWORD dwCreationFlags,_In_opt_ LPVOID lpEnvironment,_In_opt_ LPCTSTR lpCurrentDirectory,_In_ LPSTARTUPINFO lpStartupInfo,_Out_ LPPROCESS_INFORMATION lpProcessInformation)
BOOL WINAPI kernel32.CreateProcessW(_In_opt_ LPCTSTR lpApplicationName,_Inout_opt_ LPTSTR lpCommandLine,_In_opt_ LPSECURITY_ATTRIBUTES lpProcessAttributes,_In_opt_ LPSECURITY_ATTRIBUTES lpThreadAttributes,_In_ BOOL bInheritHandles,_In_ DWORD dwCreationFlags,_In_opt_ LPVOID lpEnvironment,_In_opt_ LPCTSTR lpCurrentDirectory,_In_ LPSTARTUPINFO lpStartupInfo,_Out_ LPPROCESS_INFORMATION lpProcessInformation)
BOOL WINAPI kernel32.CreateProcessA(_In_opt_ LPCTSTR lpApplicationName,_Inout_opt_ LPTSTR lpCommandLine,_In_opt_ LPSECURITY_ATTRIBUTES lpProcessAttributes,_In_opt_ LPSECURITY_ATTRIBUTES lpThreadAttributes,_In_ BOOL bInheritHandles,_In_ DWORD dwCreationFlags,_In_opt_ LPVOID lpEnvironment,_In_opt_ LPCTSTR lpCurrentDirectory,_In_ LPSTARTUPINFO lpStartupInfo,_Out_ LPPROCESS_INFORMATION lpProcessInformation)
BOOL WINAPI avrt.AvRtWaitOnThreadOrderingGroup(_In_ HANDLE Context)
BOOL WINAPI kernel32.GetProcessMitigationPolicy(_In_ HANDLE hProcess,_In_ PROCESS_MITIGATION_POLICY MitigationPolicy,_Out_ PVOID lpBuffer,_In_ SIZE_T dwLength)
BOOL None shell32.SHTestTokenMembership(_In_opt_ HANDLE hToken,ULONG ulRID None)
VOID None None.WlxSasNotify(_In_ HANDLE hWlx,_In_ DWORD dwSasType)
HRESULT WINAPI aclui.EditSecurityAdvanced(_In_ HWND hwndOwner,_In_ LPSECURITYINFO psi,_In_ SI_PAGE_TYPE uSIPage)
DWORD WINAPI kernel32.GetThreadId(_In_ HANDLE Thread)
NETIOAPI_API None iphlpapi.GetIfTable2Ex(_In_ MIB_IF_TABLE_LEVEL Level,_Out_ PMIB_IF_TABLE2 *Table)
VOID FORCEINLINE None.TpSetCallbackLongFunction(_Inout_ PTP_CALLBACK_ENVIRON CallbackEnviron)
NTSTATUS None None.ClientCallback(_In_ PCHAR Callback,_In_ ULONG_PTR Argument1,_In_ ULONG_PTR Argument2,_In_ PSecBuffer Input,_Out_ PSecBuffer Output)
VOID WINAPI kernel32.CloseThreadpoolCleanupGroup(_Inout_ PTP_CLEANUP_GROUP ptpcg)
BOOL WINAPI kernel32.CloseHandle(_In_ HANDLE hObject)
VOID WINAPI kernel32.DisassociateCurrentThreadFromCallback(_Inout_ PTP_CALLBACK_INSTANCE pci)
PVOID None None.AllocateHeap(_In_ ULONG Length)
midl_pragma None None.warning(warning_option : message_list)
NTSTATUS NTAPI None.Msv1_0SubAuthenticationRoutine(_In_ NETLOGON_LOGON_INFO_CLASS LogonLevel,_In_ PVOID LogonInformation,_In_ ULONG Flags,_In_ PUSER_ALL_INFORMATION UserAll,_Out_ PULONG WhichFields,_Out_ PULONG UserFlags,_Out_ PBOOLEAN Authoritative,_Out_ PLARGE_INTEGER LogoffTime,_Out_ PLARGE_INTEGER KickoffTime)
VOID None sspicli.SspiLocalFree(_In_ PVOID DataBuffer)
VOID WINAPI kernel32.DeleteFiber(_In_ LPVOID lpFiber)
BOOL WINAPI authz.AuthzGetInformationFromContext(_In_ AUTHZ_CLIENT_CONTEXT_HANDLE hAuthzClientContext,_In_ AUTHZ_CONTEXT_INFORMATION_CLASS InfoClass,_In_ DWORD BufferSize,_Out_ PDWORD pSizeRequired,_Out_ PVOID Buffer)
HRESULT WINAPI userenv.DeleteAppContainerProfile(_In_ PCWSTR pszAppContainerName)
VOID WINAPI kernel32.SwitchToFiber(_In_ LPVOID lpFiber)
DWORD None None.NPCloseEnum(_In_ HANDLE hEnum)
DWORD WINAPI iphlpapi.AllocateAndGetUdpExTableFromStack(_Out_ PVOID *ppUDPTable,_In_ BOOL bOrder,_In_ HANDLE hHeap,_In_ DWORD dwFlags,_In_ DWORD dwFamily)
SECURITY_STATUS SEC_Entry secur32.DecryptMessage(_In_ PCtxtHandle phContext,_Inout_ PSecBufferDesc pMessage,_In_ ULONG MessageSeqNo,_Out_ PULONG pfQOP)
LONG WINAPI None.SCardGetReaderDeviceInstanceId(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReaderName,_Out_opt_ LPTSTR szDeviceInstanceId,_Inout_ LPDWORD cchDeviceInstanceId)
UINT WINAPI kernel32.WinExec(_In_ LPCSTR lpCmdLine,_In_ UINT uCmdShow)
DWORD None shell32.SHFormatDrive(_In_ HWND hwnd,UINT drive None,UINT fmtID None,UINT options None)
HRESULT None oleaut32.VarBoolFromR4(_In_ FLOAT fltIn,_Out_ VARIANT_BOOL *pboolOut)
NETIOAPI_API None iphlpapi.GetUnicastIpAddressEntry(_Inout_ PMIB_UNICASTIPADDRESS_ROW Row)
BOOL WINAPI kernel32.CheckTokenCapability(_In_opt_ HANDLE TokenHandle,_In_ PSID CapabilitySidToCheck,_Out_ PBOOL HasCapability)
NTSTATUS None None.SpCompleteAuthToken(_In_ LSA_SEC_HANDLE ContextHandle,_In_ PSecBufferDesc InputBuffer)
LONG WINAPI winscard.SCardTransmit(_In_ SCARDHANDLE hCard,_In_ LPCSCARD_IO_REQUEST pioSendPci,_In_ LPCBYTE pbSendBuffer,_In_ DWORD cbSendLength,_Inout_opt_ LPSCARD_IO_REQUEST pioRecvPci,_Out_ LPBYTE pbRecvBuffer,_Inout_ LPDWORD pcbRecvLength)
LONG WINAPI winscard.SCardGetDeviceTypeId(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReaderName,_Inout_ LPDWORD pdwDeviceTypeId)
LONG WINAPI winscard.SCardGetDeviceTypeIdW(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReaderName,_Inout_ LPDWORD pdwDeviceTypeId)
LONG WINAPI winscard.SCardGetDeviceTypeIdA(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReaderName,_Inout_ LPDWORD pdwDeviceTypeId)
BOOL None comctl32.RemoveWindowSubclass(_In_ HWND hWnd,_In_ SUBCLASSPROC pfnSubclass,_In_ UINT_PTR uIdSubclass)
BOOL None shell32.SHChangeNotification_Unlock(_In_ HANDLE hLock)
DWORD WINAPI kernel32.FlsAlloc(_In_ PFLS_CALLBACK_FUNCTION lpCallback)
DWORD WINAPI kernel32.SignalObjectAndWait(_In_ HANDLE hObjectToSignal,_In_ HANDLE hObjectToWaitOn,_In_ DWORD dwMilliseconds,_In_ BOOL bAlertable)
HRESULT None shell32.GetSlowAppInfo([out] PSLOWAPPINFO psaid)
HRESULT None None.GetTypeLabel([out] LPWSTR *ppszTypeLabel)
BOOL WINAPI advapi32.CreateProcessWithLogonW(_In_ LPCWSTR lpUsername,_In_opt_ LPCWSTR lpDomain,_In_ LPCWSTR lpPassword,_In_ DWORD dwLogonFlags,_In_opt_ LPCWSTR lpApplicationName,_Inout_opt_ LPWSTR lpCommandLine,_In_ DWORD dwCreationFlags,_In_opt_ LPVOID lpEnvironment,_In_opt_ LPCWSTR lpCurrentDirectory,_In_ LPSTARTUPINFOW lpStartupInfo,_Out_ LPPROCESS_INFORMATION lpProcessInfo)
BOOL WINAPI None.CertStoreProvDeleteCRLCallback(_In_ HCERTSTOREPROV hStoreProv,_In_ PCCRL_CONTEXT pCrlContext,_In_ DWORD dwFlags)
BOOL WINAPI crypt32.CryptRegisterOIDInfo(_In_ PCCRYPT_OID_INFO pInfo,_In_ DWORD dwFlags)
SECURITY_STATUS SEC_Entry secur32.AcquireCredentialsHandle(_In_ SEC_CHAR *pszPrincipal,_In_ SEC_CHAR *pszPackage,_In_ ULONG fCredentialUse,_In_ PLUID pvLogonID,_In_ PVOID pAuthData,_In_ SEC_GET_KEY_FN pGetKeyFn,_In_ PVOID pvGetKeyArgument,_Out_ PCredHandle phCredential,_Out_ PTimeStamp ptsExpiry)
SECURITY_STATUS SEC_Entry secur32.AcquireCredentialsHandleW(_In_ SEC_CHAR *pszPrincipal,_In_ SEC_CHAR *pszPackage,_In_ ULONG fCredentialUse,_In_ PLUID pvLogonID,_In_ PVOID pAuthData,_In_ SEC_GET_KEY_FN pGetKeyFn,_In_ PVOID pvGetKeyArgument,_Out_ PCredHandle phCredential,_Out_ PTimeStamp ptsExpiry)
SECURITY_STATUS SEC_Entry secur32.AcquireCredentialsHandleA(_In_ SEC_CHAR *pszPrincipal,_In_ SEC_CHAR *pszPackage,_In_ ULONG fCredentialUse,_In_ PLUID pvLogonID,_In_ PVOID pAuthData,_In_ SEC_GET_KEY_FN pGetKeyFn,_In_ PVOID pvGetKeyArgument,_Out_ PCredHandle phCredential,_Out_ PTimeStamp ptsExpiry)
HRESULT WINAPI userenv.GetAppContainerFolderPath(_In_ PCWSTR pszAppContainerSid,_Out_ PWSTR *ppszPath)
BOOL WINAPI authz.AuthzSetAppContainerInformation(_In_ AUTHZ_CLIENT_CONTEXT_HANDLE hAuthzClientContext,_In_ PSID pAppContainerSid,_In_ DWORD CapabilityCount,_In_opt_ PSID_AND_ATTRIBUTES pCapabilitySids[CapabilityCount])
PTP_IO WINAPI kernel32.CreateThreadpoolIo(_In_ HANDLE fl,_In_ PTP_WIN32_IO_CALLBACK pfnio,_Inout_opt_ PVOID pv,_In_opt_ PTP_CALLBACK_ENVIRON pcbe)
BOOL None advapi32.CredGetSessionTypes(_In_ DWORD MaximumPersistCount,_Out_ LPDWORD MaximumPersist)
BOOL WINAPI advapi32.AddAccessAllowedAceEx(_Inout_ PACL pAcl,_In_ DWORD dwAceRevision,_In_ DWORD AceFlags,_In_ DWORD AccessMask,_In_ PSID pSid)
VOID WINAPI kernel32.GetStartupInfo(_Out_ LPSTARTUPINFO lpStartupInfo)
VOID WINAPI kernel32.GetStartupInfoW(_Out_ LPSTARTUPINFO lpStartupInfo)
VOID WINAPI kernel32.GetStartupInfoA(_Out_ LPSTARTUPINFO lpStartupInfo)
BOOL WINAPI authz.AuthzAddSidsToContext(_In_ AUTHZ_CLIENT_CONTEXT_HANDLE OrigClientContext,_In_ PSID_AND_ATTRIBUTES Sids,_In_ DWORD SidCount,_In_ PSID_AND_ATTRIBUTES RestrictedSids,_In_ DWORD RestrictedSidCount,_Out_ PAUTHZ_CLIENT_CONTEXT_HANDLE pNewClientContext)
SECURITY_STATUS None secur32.AddSecurityPackage(_In_ LPTSTR pszPackageName,_In_ PSECURITY_PACKAGE_OPTIONS pOptions)
SECURITY_STATUS None secur32.AddSecurityPackageW(_In_ LPTSTR pszPackageName,_In_ PSECURITY_PACKAGE_OPTIONS pOptions)
SECURITY_STATUS None secur32.AddSecurityPackageA(_In_ LPTSTR pszPackageName,_In_ PSECURITY_PACKAGE_OPTIONS pOptions)
HRESULT None shlwapi.PathCreateFromUrlAlloc(_In_ PCWSTR pszIn,_Out_ PWSTR *ppszOut,DWORD dwFlags None)
BOOL WINAPI authz.AuthzFreeResourceManager(_In_ AUTHZ_RESOURCE_MANAGER_HANDLE AuthzResourceManager)
PUIDLIST_RELATIVE None None.ILNext(_In_ PUIDLIST_RELATIVE pidl)
NTSTATUS None None.LsaApInitializePackage(_In_ ULONG AuthenticationPackageId,_In_ PLSA_DISPATCH_TABLE LsaDispatchTable,_In_opt_ PLSA_STRING Database,_In_opt_ PLSA_STRING Confidentiality,_Out_ PLSA_STRING *AuthenticationPackageName)
BOOL None None.WlxSetOption(_In_ HANDLE hWlx,_In_ DWORD Option,_In_ ULONG_PTR Value,_Out_ ULONG_PTR *OldValue)
BOOL WINAPI kernel32.TerminateProcess(_In_ HANDLE hProcess,_In_ UINT uExitCode)
BOOL WINAPI advapi32.GetSecurityDescriptorOwner(_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_Out_ PSID *pOwner,_Out_ LPBOOL lpbOwnerDefaulted)
BOOL WINAPI advapi32.MakeSelfRelativeSD(_In_ PSECURITY_DESCRIPTOR pAbsoluteSD,_Out_opt_ PSECURITY_DESCRIPTOR pSelfRelativeSD,_Inout_ LPDWORD lpdwBufferLength)
BOOL None comctl32.GetWindowSubclass(_In_ HWND hWnd,_In_ SUBCLASSPROC pfnSubclass,_In_ UINT_PTR uIdSubclass,_Out_ DWORD_PTR *pdwRefData)
BOOL WINAPI kernel32.QueryProtectedPolicy(_In_ LPCGUID PolicyGuid,_Out_ PULONG_PTR PolicyValue)
SECURITY_STATUS SEC_Entry secur32.QueryContextAttributes(_In_ PCtxtHandle phContext,_In_ ULONG ulAttribute,_Out_ PVOID pBuffer)
SECURITY_STATUS SEC_Entry secur32.QueryContextAttributesW(_In_ PCtxtHandle phContext,_In_ ULONG ulAttribute,_Out_ PVOID pBuffer)
SECURITY_STATUS SEC_Entry secur32.QueryContextAttributesA(_In_ PCtxtHandle phContext,_In_ ULONG ulAttribute,_Out_ PVOID pBuffer)
BOOL WINAPI kernel32.QueryIdleProcessorCycleTime(_Inout_ PULONG BufferLength,_Out_ PULONG64 ProcessorIdleCycleTime)
HRESULT WINAPI dssec.DSCreateISecurityInfoObject(_In_ LPCWSTR pwszObjectPath,_In_ LPCWSTR pwszObjectClass,_In_ DWORD dwFlags,_Out_ LPSECURITYINFO *ppSI,_In_opt_ PFNREADOBJECTSECURITY pfnReadSD,_In_opt_ PFNWRITEOBJECTSECURITY pfnWriteSD,_In_ LPARAM lpContext)
VOID CALLBACK None.WorkCallback(_Inout_ PTP_CALLBACK_INSTANCE Instance,_Inout_opt_ PVOID Context,_Inout_ PTP_WORK Work)
BOOL WINAPI avrt.AvRtDeleteThreadOrderingGroup(_In_ HANDLE Context)
BOOL WINAPI advapi32.SetSecurityDescriptorGroup(_Inout_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_opt_ PSID pGroup,_In_ BOOL bGroupDefaulted)
VOID WINAPI kernel32.SwitchToFiber(_In_ LPVOID lpFiber)
HRESULT None ole32.CoCreateInstance(_In_ REFCLSID rclsid,_In_ LPUNKNOWN pUnkOuter,_In_ DWORD dwClsContext,_In_ REFIID riid,_Out_ LPVOID *ppv)
DWORD None iphlpapi.SetIpTTL(_In_ UINT nTTL)
BOOL None None.ILIsChild(_In_ PCUIDLIST_RELATIVE pidl)
BOOL None cryptdlg.CertViewProperties(_In_ CERT_VIEWPROPERTIES_STRUCT *pCertViewInfo)
BOOL None cryptdlg.CertViewPropertiesW(_In_ CERT_VIEWPROPERTIES_STRUCT *pCertViewInfo)
BOOL None cryptdlg.CertViewPropertiesA(_In_ CERT_VIEWPROPERTIES_STRUCT *pCertViewInfo)
BOOL WINAPI crypt32.CertDeleteCRLFromStore(_In_ PCCRL_CONTEXT pCrlContext)
BOOL WINAPI advapi32.SetServiceObjectSecurity(_In_ SC_HANDLE hService,_In_ SECURITY_INFORMATION dwSecurityInformation,_In_ PSECURITY_DESCRIPTOR lpSecurityDescriptor)
VOID CALLBACK None.IoCompletionCallback(_Inout_ PTP_CALLBACK_INSTANCE Instance,_Inout_opt_ PVOID Context,_Inout_opt_ PVOID Overlapped,_In_ ULONG IoResult,_In_ ULONG_PTR NumberOfBytesTransferred,_Inout_ PTP_IO Io)
DWORD None iphlpapi.GetIpNetTable(_Out_ PMIB_IPNETTABLE pIpNetTable,_Inout_ PULONG pdwSize,_In_ BOOL bOrder)
BOOL WINAPI user32.SetProcessRestrictionExemption(BOOL fEnableExemption None)
SEC_ENTRY None None.DeleteConnectedIdentity(_In_ PVOID ProviderHandle,_In_opt_ HANDLE UserToken,_In_ PSID UserSid,_In_ PWSTR IdentityUserName)
HRESULT None authui.GetCount([out] DWORD *userCount)
DWORD WINAPI None.ThreadProc(_In_ LPVOID lpParameter)
BOOL WINAPI crypt32.CertAddCertificateContextToStore(_In_ HCERTSTORE hCertStore,_In_ PCCERT_CONTEXT pCertContext,_In_ DWORD dwAddDisposition,_Out_opt_ PCCERT_CONTEXT *ppStoreContext)
BOOL WINAPI kernel32.AddResourceAttributeAce(_Inout_ PACL pAcl,_In_ DWORD dwAceRevision,_In_ DWORD AceFlags,_In_ DWORD AccessMask,_In_ PSID pSid,_In_ PCLAIM_SECURITY_ATTRIBUTES_INFORMATION pAttributeInfo,_Out_ PDWORD pReturnLength)
STDAPI None shcore.GetScaleFactorForMonitor(_In_ HMONITOR hMon,_Out_ DEVICE_SCALE_FACTOR *pScale)
VOID WINAPI kernel32.DeleteProcThreadAttributeList(_Inout_ LPPROC_THREAD_ATTRIBUTE_LIST lpAttributeList)
VOID None None.SetThreadpoolCallbackPersistent(_Inout_ PTP_CALLBACK_ENVIRON pcbe)
NTSTATUS WINAPI ntdll.NtQueryInformationThread(_In_ HANDLE ThreadHandle,_In_ THREADINFOCLASS ThreadInformationClass,_Inout_ PVOID ThreadInformation,_In_ ULONG ThreadInformationLength,_Out_opt_ PULONG ReturnLength)
DWORD None iphlpapi.GetTcpStatisticsEx(_Out_ PMIB_TCPSTATS pStats,_In_ DWORD dwFamily)
HRESULT None shell32.SHAssocEnumHandlers(_In_ PCWSTR pszExtra,_In_ ASSOC_FILTER afFilter,_Out_ IEnumAssocHandlers **ppEnumHandler)
BOOL WINAPI advapi32.EqualPrefixSid(_In_ PSID pSid1,_In_ PSID pSid2)
DWORD None iphlpapi.IpReleaseAddress(_In_ PIP_ADAPTER_INDEX_MAP AdapterInfo)
BOOLEAN WINAPI advapi32.AuditEnumeratePerUserPolicy(_Out_ PPOLICY_AUDIT_SID_ARRAY *ppAuditSidArray)
HRESULT WINAPI userenv.GetAppContainerRegistryLocation(_In_ REGSAM desiredAccess,_Out_ PHKEY phAppContainerKey)
VOID WINAPI advapi32.BuildTrusteeWithSid(_Inout_ PTRUSTEE pTrustee,_In_opt_ PSID pSid)
VOID WINAPI advapi32.BuildTrusteeWithSidW(_Inout_ PTRUSTEE pTrustee,_In_opt_ PSID pSid)
VOID WINAPI advapi32.BuildTrusteeWithSidA(_Inout_ PTRUSTEE pTrustee,_In_opt_ PSID pSid)
SECURITY_STATUS SEC_Entry secur32.ApplyControlToken(_In_ PCtxtHandle phContext,_In_ PSecBufferDesc pInput)
LPVOID WINAPI crypt32.CryptMemRealloc(_In_ LPVOID pv,_In_ ULONG cbSize)
BOOLEAN WINAPI advapi32.AuditQueryGlobalSacl(_In_ PCWSTR ObjectTypeName,_Out_ PACL *Acl)
BOOLEAN WINAPI advapi32.AuditQueryGlobalSaclW(_In_ PCWSTR ObjectTypeName,_Out_ PACL *Acl)
BOOLEAN WINAPI advapi32.AuditQueryGlobalSaclA(_In_ PCWSTR ObjectTypeName,_Out_ PACL *Acl)
BOOL WINAPI kernel32.DeriveCapabilitySidsFromName(_In_ LPCWSTR CapName,_Out_ PSID **CapabilityGroupSids,_Out_ DWORD *CapabilityGroupSidCount,_Out_ PSID **CapabilitySids,_Out_ DWORD *CapabilitySidCount)
BOOL None None.WlxIsLockOk(_In_ PVOID pWlxContext)
HRESULT None shell32.SHCreateDefaultPropertiesOp(_In_ IShellItem *psi,_Out_ IFileOperation **ppFileOp)
BOOL WINAPI crypt32.PFXIsPFXBlob(_In_ CRYPT_DATA_BLOB *pPFX)
VOID WINAPI kernel32.SetThreadpoolTimer(_Inout_ PTP_TIMER pti,_In_opt_ PFILETIME pftDueTime,_In_ DWORD msPeriod,_In_opt_ DWORD msWindowLength)
DWORD None iphlpapi.GetUniDirectionalAdapterInfo(_Out_ PIP_UNIDIRECTIONAL_ADAPTER_ADDRESS pIPIfInfo,_Out_ PULONG dwOutBufLen)
HRESULT WINAPI cryptxml.CryptXmlGetStatus(HCRYPTXML hCryptXml None,CRYPT_XML_STATUS *pStatus None)
BOOL WINAPI crypt32.CertResyncCertificateChainEngine(_In_opt_ HCERTCHAINENGINE hChainEngine)
NETIOAPI_API None iphlpapi.GetIfStackTable(_Out_ PMIB_IFSTACK_TABLE *Table)
NTSTATUS None None.LsaApCallPackagePassthrough(_In_ PLSA_CLIENT_REQUEST ClientRequest,_In_ PVOID ProtocolSubmitBuffer,_In_ PVOID ClientBufferBase,_In_ ULONG SubmitBufferLength,_Out_ PVOID *ProtocolReturnBuffer,_Out_ PULONG ReturnBufferLength,_Out_ PNTSTATUS ProtocolStatus)
DWORD WINAPI advapi32.GetExplicitEntriesFromAcl(_In_ PACL pacl,_Out_ PULONG pcCountOfExplicitEntries,_Out_ PEXPLICIT_ACCESS *pListOfExplicitEntries)
DWORD WINAPI advapi32.GetExplicitEntriesFromAclW(_In_ PACL pacl,_Out_ PULONG pcCountOfExplicitEntries,_Out_ PEXPLICIT_ACCESS *pListOfExplicitEntries)
DWORD WINAPI advapi32.GetExplicitEntriesFromAclA(_In_ PACL pacl,_Out_ PULONG pcCountOfExplicitEntries,_Out_ PEXPLICIT_ACCESS *pListOfExplicitEntries)
BOOL WINAPI advapi32.AccessCheckByTypeResultList(_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_opt_ PSID PrincipalSelfSid,_In_ HANDLE ClientToken,_In_ DWORD DesiredAccess,_Inout_opt_ POBJECT_TYPE_LIST ObjectTypeList,_In_ DWORD ObjectTypeListLength,_Out_ PGENERIC_MAPPING GenericMapping,_Out_opt_ PPRIVILEGE_SET PrivilegeSet,_Inout_ LPDWORD PrivilegeSetLength,_Out_ LPDWORD GrantedAccessList,_Out_ LPDWORD AccessStatusList)
HRESULT None shlwapi.UrlGetPart(_In_ PCTSTR pszIn,_Out_ PTSTR pszOut,_Inout_ DWORD *pcchOut,DWORD dwPart None,DWORD dwFlags None)
HRESULT None shlwapi.UrlGetPartW(_In_ PCTSTR pszIn,_Out_ PTSTR pszOut,_Inout_ DWORD *pcchOut,DWORD dwPart None,DWORD dwFlags None)
HRESULT None shlwapi.UrlGetPartA(_In_ PCTSTR pszIn,_Out_ PTSTR pszOut,_Inout_ DWORD *pcchOut,DWORD dwPart None,DWORD dwFlags None)
LONG WINAPI winscard.SCardGetProviderId(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCard,_Out_ LPGUID pguidProviderId)
LONG WINAPI winscard.SCardGetProviderIdW(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCard,_Out_ LPGUID pguidProviderId)
LONG WINAPI winscard.SCardGetProviderIdA(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCard,_Out_ LPGUID pguidProviderId)
BOOL WINAPI advapi32.SetTokenInformation(_In_ HANDLE TokenHandle,_In_ TOKEN_INFORMATION_CLASS TokenInformationClass,_In_ LPVOID TokenInformation,_In_ DWORD TokenInformationLength)
HRESULT WINAPI coremessaging.CreateDispatcherQueueController(_In_ DispatcherQueueOptions options,_Out_ DispatcherQueueController dispatcherQueueController)
NTSTATUS NTAPI None.SpExchangeMetaDataFn(_In_ LSA_SEC_HANDLE CredentialHandle,_In_opt_ PUNICODE_STRING TargetName,_In_ ULONG ContextRequirements,_In_ ULONG MetaDataLength,_In_ PUCHAR MetaData,_Inout_ PLSA_SEC_HANDLE ContextHandle)
BOOL WINAPI advapi32.GetAclInformation(_In_ PACL pAcl,_Out_ LPVOID pAclInformation,_In_ DWORD nAclInformationLength,_In_ ACL_INFORMATION_CLASS dwAclInformationClass)
void None None.MyUpdateImage(LPCWSTR pszHashItem None,int iIndex None,UINT uFlags None,int iImageIndex None)
BOOL WINAPI advapi32.SetKernelObjectSecurity(_In_ HANDLE Handle,_In_ SECURITY_INFORMATION SecurityInformation,_In_ PSECURITY_DESCRIPTOR SecurityDescriptor)
VOID FORCEINLINE None.TpSetCallbackCleanupGroup(_Inout_ PTP_CALLBACK_ENVIRON CallbackEnviron,_In_ PTP_CLEANUP_GROUP CleanupGroup,_In_opt_ PTP_CLEANUP_GROUP_CANCEL_CALLBACK CleanupGroupCancelCallback)
HRESULT None shell32.SHGetInstanceExplorer(_Out_ IUnknown **ppunk)
NTSTATUS None advapi32.LsaSetInformationPolicy(_In_ LSA_HANDLE PolicyHandle,_In_ POLICY_INFORMATION_CLASS InformationClass,_In_ PVOID Buffer)
BOOL WINAPI authz.AuthzInitializeContextFromSid(_In_ DWORD Flags,_In_ PSID UserSid,_In_opt_ AUTHZ_RESOURCE_MANAGER_HANDLE hAuthzResourceManager,_In_ PLARGE_INTEGER pExpirationTime,_In_ LUID Identifier,_In_opt_ PVOID DynamicGroupArgs,_Out_ PAUTHZ_CLIENT_CONTEXT_HANDLE pAuthzClientContext)
SECURITY_STATUS SEC_Entry secur32.QuerySecurityPackageInfo(_In_ SEC_CHAR *pszPackageName,_Out_ PSecPkgInfo *ppPackageInfo)
SECURITY_STATUS SEC_Entry secur32.QuerySecurityPackageInfoW(_In_ SEC_CHAR *pszPackageName,_Out_ PSecPkgInfo *ppPackageInfo)
SECURITY_STATUS SEC_Entry secur32.QuerySecurityPackageInfoA(_In_ SEC_CHAR *pszPackageName,_Out_ PSecPkgInfo *ppPackageInfo)
STDAPI None ntshrui.CanShareFolderW(_In_ LPCWSTR pszPath)
STDAPI None ntshrui.CanShareFolderW(_In_ LPCWSTR pszPath)
NETIOAPI_API None iphlpapi.NotifyStableUnicastIpAddressTable(_In_ ADDRESS_FAMILY Family,_Inout_ PMIB_UNICASTIPADDRESS_TABLE *Table,_In_ PSTABLE_UNICAST_IPADDRESS_TABLE_CALLBACK CallerCallback,_In_ PVOID CallerContext,_Inout_ HANDLE *NotificationHandle)
BOOL WINAPI advapi32.EqualDomainSid(_In_ PSID pSid1,_In_ PSID pSid2,_Out_ BOOL *pfEqual)
HRESULT None shell32.SHGetStockIconInfo(SHSTOCKICONID siid None,UINT uFlags None,_Inout_ SHSTOCKICONINFO *psii)
NTSTATUS None None.SpSealMessage(_In_ LSA_SEC_HANDLE ContextHandle,_In_ ULONG QualityOfProtection,_Inout_ PSecBufferDesc MessageBuffers,_In_ ULONG MessageSequenceNumber)
VOID None None.SetThreadpoolCallbackRunsLong(_Inout_ PTP_CALLBACK_ENVIRON pcbe)
BOOL WINAPI wintrust.CryptCATPersistStore(_In_ HANDLE hCatalog)
LPVOID None shell32.SHAlloc(_In_ SIZE_T cb)
SECURITY_STATUS SEC_Entry secur32.DecryptMessage(_In_ PCtxtHandle phContext,_Inout_ PSecBufferDesc pMessage,_In_ ULONG MessageSeqNo,_Out_ PULONG pfQOP)
LONG None shlwapi.SHRegGetValueFromHKCUHKLM(_In_ PCWSTR pwszKey,_In_ PCWSTR pwszValue,_In_ SRRF srrfFlags,_Out_ DWORD *pdwType,_In_ LPCVOID pvData,_Inout_ DWORD *pcbData)
BOOLEAN WINAPI advapi32.AuditLookupCategoryGuidFromCategoryId(_In_ POLICY_AUDIT_EVENT_TYPE AuditCategoryId,_Out_ GUID *pAuditCategoryGuid)
BOOL None shlwapi.PathRemoveFileSpec(_Inout_ LPTSTR pszPath)
BOOL None shlwapi.PathRemoveFileSpecW(_Inout_ LPTSTR pszPath)
BOOL None shlwapi.PathRemoveFileSpecA(_Inout_ LPTSTR pszPath)
NTSTATUS NTAPI secur32.LsaGetLogonSessionData(_In_ PLUID LogonId,_Out_ PSECURITY_LOGON_SESSION_DATA *ppLogonSessionData)
DWORD WINAPI iphlpapi.UnenableRouter(OVERLAPPED *pOverlapped None,_Out_opt_ LPDWORD lpdwEnableCount)
BOOL WINAPI advapi32.SetAclInformation(_Inout_ PACL pAcl,_In_ LPVOID pAclInformation,_In_ DWORD nAclInformationLength,_In_ ACL_INFORMATION_CLASS dwAclInformationClass)
BOOL WINAPI advapi32.IsTokenRestricted(_In_ HANDLE TokenHandle)
void None None.MyProcedure_notify_flag(boolean __MIDL_NotifyFlag None)
BOOL WINAPI authz.AuthzOpenObjectAudit(_In_ DWORD Flags,_In_ AUTHZ_CLIENT_CONTEXT_HANDLE hAuthzClientContext,_In_ PAUTHZ_ACCESS_REQUEST pRequest,_In_ AUTHZ_AUDIT_EVENT_HANDLE hAuditEvent,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_ PSECURITY_DESCRIPTOR *SecurityDescriptorArray,_In_ DWORD SecurityDescriptorCount,_In_ PAUTHZ_ACCESS_REPLY pReply)
DWORD WINAPI iphlpapi.EnableRouter(HANDLE *pHandle None,OVERLAPPED *pOverlapped None)
VOID WINAPI kernel32.WaitForThreadpoolWorkCallbacks(_Inout_ PTP_WORK pwk,_In_ BOOL fCancelPendingCallbacks)
uint32 None cimwin32.SetPowerState([in] uint16 PowerState,[in] datetime Time)
NTSTATUS NTAPI None.SpUpdateCredentialsFn(_In_ LSA_SEC_HANDLE ContextHandle,_In_ GUID *CredType,_In_ ULONG FlatCredUIContextLength,PUCHAR FlatCredUIContext None)
HRESULT None shell32.SHBindToParent(_In_ PCIDLIST_ABSOLUTE pidl,_In_ REFIID riid,_Out_ VOID **ppv,_Out_ PCUITEMID_CHILD *ppidlLast)
VOID None None.WlxSasNotify(_In_ HANDLE hWlx,_In_ DWORD dwSasType)
ULONG WINAPI iphlpapi.LookupPersistentTcpPortReservation(_In_ USHORT StartPort,_In_ USHORT NumberOfPorts,_Out_ PULONG64 Token)
DWORD None iphlpapi.GetIpStatistics(_Out_ PMIB_IPSTATS pStats)
PCCERT_CONTEXT WINAPI wintrust.WTHelperCertFindIssuerCertificate(_In_ PCCERT_CONTEXT pChildContext,_In_ DWORD chStores,_In_ HCERTSTORE *pahStores,_In_ FILETIME *psftVerifyAsOf,_In_ DWORD dwEncoding,_Out_opt_ DWORD *pdwConfidence,_Out_ DWORD *dwError)
HRESULT WINAPI mssign32.SignerTimeStampEx(_Reserved_ DWORD dwFlags,_In_ SIGNER_SUBJECT_INFO *pSubjectInfo,_In_ LPCWSTR pwszHttpTimeStamp,_In_ PCRYPT_ATTRIBUTES psRequest,_In_ LPVOID pSipData,_Out_ SIGNER_CONTEXT **ppSignerContext)
PCCTL_CONTEXT WINAPI crypt32.CertDuplicateCTLContext(_In_ PCCTL_CONTEXT pCtlContext)
BOOL WINAPI authz.AuthzInstallSecurityEventSource(_In_ DWORD dwFlags,_In_ PAUTHZ_SOURCE_SCHEMA_REGISTRATION pRegistration)
BOOL WINAPI kernel32.ReleaseSemaphore(_In_ HANDLE hSemaphore,_In_ LONG lReleaseCount,_Out_opt_ LPLONG lpPreviousCount)
HRESULT None certadm.CertSrvBackupGetDatabaseNames(_In_ HCSBC hbc,_Out_ WCHAR **ppwszzAttachmentInformation,_Out_ DWORD *pcbSize)
HRESULT None certadm.CertSrvBackupGetDatabaseNamesW(_In_ HCSBC hbc,_Out_ WCHAR **ppwszzAttachmentInformation,_Out_ DWORD *pcbSize)
BOOL WINAPI crypt32.CryptSIPCreateIndirectData(_In_ SIP_SUBJECTINFO *pSubjectInfo,_Inout_ DWORD *pcbIndirectData,_Out_ SIP_INDIRECT_DATA *pIndirectData)
HRESULT None wintrust.WinVerifyTrustEx(_In_ HWND hwnd,_In_ GUID *pgActionID,_In_ WINTRUST_DATA *pWinTrustData)
BOOL WINAPI crypt32.CryptSIPVerifyIndirectData(_In_ SIP_SUBJECTINFO *pSubjectInfo,_In_ SIP_INDIRECT_DATA *pIndirectData)
STDAPI None shcore.RegisterScaleChangeNotifications(_In_ DISPLAY_DEVICE_TYPE displayDevice,_In_ HWND hwndNotify,_In_ UINT uMsgNotify,_Out_ DWORD *pdwCookie)
BOOL WINAPI advapi32.SetThreadToken(_In_opt_ PHANDLE Thread,_In_opt_ HANDLE Token)
BOOL WINAPI authz.AuthzInitializeContextFromToken(_In_ DWORD Flags,_In_ HANDLE TokenHandle,_In_ AUTHZ_RESOURCE_MANAGER_HANDLE hAuthzResourceManager,_In_opt_ PLARGE_INTEGER pExpirationTime,_In_ LUID Identifier,_In_opt_ PVOID DynamicGroupArgs,_Out_ PAUTHZ_CLIENT_CONTEXT_HANDLE phAuthzClientContext)
VOID None kernel32.GetCurrentProcessorNumberEx(_Out_ PPROCESSOR_NUMBER ProcNumber)
HRESULT WINAPI mssign32.SignerSignEx2(_In_ DWORD dwFlags,_In_ SIGNER_SUBJECT_INFO *pSubjectInfo,_In_ SIGNER_CERT *pSignerCert,_In_ SIGNER_SIGNATURE_INFO *pSignatureInfo,_In_opt_ SIGNER_PROVIDER_INFO *pProviderInfo,_In_opt_ DWORD dwTimestampFlags,_In_opt_ PCSTR pszTimestampAlgorithmOid,_In_opt_ PCWSTR pwszHttpTimeStamp,_In_opt_ PCRYPT_ATTRIBUTES psRequest,_In_opt_ PVOID pSipData,_Out_ SIGNER_CONTEXT **ppSignerContext,_In_opt_ PCERT_STRONG_SIGN_PARA pCryptoPolicy,_Reserved_ PVOID pReserved)
BOOL None wintrust.WintrustAddActionID(_In_ GUID *pgActionID,_In_ DWORD fdwFlags,_In_ CRYPT_REGISTER_ACTIONID *psProvInfo)
BOOL WINAPI advapi32.AccessCheck(_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_ HANDLE ClientToken,_In_ DWORD DesiredAccess,_In_ PGENERIC_MAPPING GenericMapping,_Out_opt_ PPRIVILEGE_SET PrivilegeSet,_Inout_ LPDWORD PrivilegeSetLength,_Out_ LPDWORD GrantedAccess,_Out_ LPBOOL AccessStatus)
BOOL WINAPI advapi32.SetSecurityDescriptorControl(_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_ SECURITY_DESCRIPTOR_CONTROL ControlBitsOfInterest,_In_ SECURITY_DESCRIPTOR_CONTROL ControlBitsToSet)
BOOL WINAPI advapi32.AddAccessAllowedAceEx(_Inout_ PACL pAcl,_In_ DWORD dwAceRevision,_In_ DWORD AceFlags,_In_ DWORD AccessMask,_In_ PSID pSid)
HCRYPTOIDFUNCSET WINAPI crypt32.CryptInitOIDFunctionSet(_In_ LPCSTR pszFuncName,_In_ DWORD dwFlags)
BOOL WINAPI kernel32.GetLogicalProcessorInformation(_Out_ PSYSTEM_LOGICAL_PROCESSOR_INFORMATION Buffer,_Inout_ PDWORD ReturnLength)
DWORD None iphlpapi.DeleteIPAddress(_In_ ULONG NTEContext)
BOOL WINAPI crypt32.PFXExportCertStore(_In_ HCERTSTORE hStore,_Inout_ CRYPT_DATA_BLOB *pPFX,_In_ LPCWSTR szPassword,_In_ DWORD dwFlags)
VOID WINAPI kernel32.ExitProcess(_In_ UINT uExitCode)
BOOL WINAPI crypt32.CryptImportPublicKeyInfo(_In_ HCRYPTPROV hCryptProv,_In_ DWORD dwCertEncodingType,_In_ PCERT_PUBLIC_KEY_INFO pInfo,_Out_ HCRYPTKEY *phKey)
HICON None shell32.DuplicateIcon(_Reserved_ HINSTANCE hInst,_In_ HICON hIcon)
STDAPI None shcore.RevokeScaleChangeNotifications(_In_ DISPLAY_DEVICE_TYPE displayDevice,_In_ DWORD dwCookie)
BOOL WINAPI advapi32.PrivilegedServiceAuditAlarm(_In_ LPCTSTR SubsystemName,_In_ LPCTSTR ServiceName,_In_ HANDLE ClientToken,_In_ PPRIVILEGE_SET Privileges,_In_ BOOL AccessGranted)
BOOL WINAPI advapi32.PrivilegedServiceAuditAlarmW(_In_ LPCTSTR SubsystemName,_In_ LPCTSTR ServiceName,_In_ HANDLE ClientToken,_In_ PPRIVILEGE_SET Privileges,_In_ BOOL AccessGranted)
BOOL WINAPI advapi32.PrivilegedServiceAuditAlarmA(_In_ LPCTSTR SubsystemName,_In_ LPCTSTR ServiceName,_In_ HANDLE ClientToken,_In_ PPRIVILEGE_SET Privileges,_In_ BOOL AccessGranted)
BOOL WINAPI authz.AuthzRegisterCapChangeNotification(_Out_ PAUTHZ_CAP_CHANGE_SUBSCRIPTION_HANDLE phCapChangeSubscription,_In_ LPTHREAD_START_ROUTINE pfnCapChangeCallback,_In_opt_ PVOID pCallbackContext)
BOOL WINAPI authz.AuthzInitializeCompoundContext(_In_ AUTHZ_CLIENT_CONTEXT_HANDLE UserContext,_In_ AUTHZ_CLIENT_CONTEXT_HANDLE DeviceContext,_Out_ PAUTHZ_CLIENT_CONTEXT_HANDLE phCompoundContext)
BOOL WINAPI advapi32.CryptSignHash(_In_ HCRYPTHASH hHash,_In_ DWORD dwKeySpec,_In_ LPCTSTR sDescription,_In_ DWORD dwFlags,_Out_ BYTE *pbSignature,_Inout_ DWORD *pdwSigLen)
BOOL WINAPI advapi32.CryptSignHashW(_In_ HCRYPTHASH hHash,_In_ DWORD dwKeySpec,_In_ LPCTSTR sDescription,_In_ DWORD dwFlags,_Out_ BYTE *pbSignature,_Inout_ DWORD *pdwSigLen)
BOOL WINAPI advapi32.CryptSignHashA(_In_ HCRYPTHASH hHash,_In_ DWORD dwKeySpec,_In_ LPCTSTR sDescription,_In_ DWORD dwFlags,_Out_ BYTE *pbSignature,_Inout_ DWORD *pdwSigLen)
DWORD None iphlpapi.GetIpErrorString(_In_ IP_STATUS ErrorCode,_Out_ PWCHAR Buffer,_Inout_ PDWORD Size)
HRESULT None shell32.SHGetAttributesFromDataObject(_In_opt_ IDataObject *pdo,DWORD dwAttributeMask None,_Out_opt_ DWORD *pdwAttributes,_Out_opt_ UINT *pcItems)
LONG NTAPI ntdll.RtlIpv6StringToAddressEx(_In_ PCTSTR AddressString,_Out_ IN6_ADDR *Address,_Out_ PULONG ScopeId,_Out_ PUSHORT Port)
LONG NTAPI ntdll.RtlIpv6StringToAddressExW(_In_ PCTSTR AddressString,_Out_ IN6_ADDR *Address,_Out_ PULONG ScopeId,_Out_ PUSHORT Port)
LONG NTAPI ntdll.RtlIpv6StringToAddressEx(_In_ PCTSTR AddressString,_Out_ IN6_ADDR *Address,_Out_ PULONG ScopeId,_Out_ PUSHORT Port)
ULONG WINAPI iphlpapi.GetTcp6Table2(_Out_ PMIB_TCP6TABLE2 TcpTable,_Inout_ PULONG SizePointer,_In_ BOOL Order)
NETIOAPI_API None iphlpapi.GetMulticastIpAddressTable(_In_ ADDRESS_FAMILY Family,_Out_ PMIB_MULTICASTIPADDRESS_TABLE *Table)
BOOL WINAPI advapi32.AddAccessAllowedObjectAce(_Inout_ PACL pAcl,_In_ DWORD dwAceRevision,_In_ DWORD AceFlags,_In_ DWORD AccessMask,_In_opt_ GUID *ObjectTypeGuid,_In_opt_ GUID *InheritedObjectTypeGuid,_In_ PSID pSid)
BOOL WINAPI advapi32.EqualDomainSid(_In_ PSID pSid1,_In_ PSID pSid2,_Out_ BOOL *pfEqual)
HRESULT None None.GetValue([out] AHE_TYPE *pahe)
HRESULT None shell32.SHLoadInProc(_In_ REFCLSID rclsid)
HRESULT None certadm.CertSrvBackupTruncateLogs(_In_ HCSBC hbc)
BOOL WINAPI crypt32.PFXVerifyPassword(_In_ CRYPT_DATA_BLOB *pPFX,_In_ LPCWSTR szPassword,_In_ DWORD dwFlags)
BOOL None shell32.FileIconInit(_In_ BOOL fRestoreCache)
NTSTATUS None None.LsapChangeBlankPasswordRestriction(_In_ BOOLEAN Enable)
HRESULT None shell32.SHGetTemporaryPropertyForItem(_In_ IShellItem *psi,REFPROPERTYKEY pk None,_Out_ PROPVARIANT *ppropvarInk)
DWORD WINAPI kernel32.WaitForSingleObject(_In_ HANDLE hHandle,_In_ DWORD dwMilliseconds)
BOOL WINAPI advapi32.AllocateAndInitializeSid(_In_ PSID_IDENTIFIER_AUTHORITY pIdentifierAuthority,_In_ BYTE nSubAuthorityCount,_In_ DWORD dwSubAuthority0,_In_ DWORD dwSubAuthority1,_In_ DWORD dwSubAuthority2,_In_ DWORD dwSubAuthority3,_In_ DWORD dwSubAuthority4,_In_ DWORD dwSubAuthority5,_In_ DWORD dwSubAuthority6,_In_ DWORD dwSubAuthority7,_Out_ PSID *pSid)
BOOL WINAPI crypt32.CryptUnprotectMemory(_Inout_ LPVOID pData,_In_ DWORD cbData,_In_ DWORD dwFlags)
BOOL WINAPI None.CertStoreProvReadCertCallback(_In_ HCERTSTOREPROV hStoreProv,_In_ PCCERT_CONTEXT pStoreCertContext,_In_ DWORD dwFlags,_Out_ PCCERT_CONTEXT *ppProvCertContext)
BOOL None shell32.SHGetDiskFreeSpaceEx(_In_ LPCTSTR pszDirectoryName,_Out_opt_ ULARGE_INTEGER *pulFreeBytesAvailableToCaller,_Out_opt_ ULARGE_INTEGER *pulTotalNumberOfBytes,_Out_opt_ ULARGE_INTEGER *pulTotalNumberOfFreeBytes)
BOOL None shell32.SHGetDiskFreeSpaceExW(_In_ LPCTSTR pszDirectoryName,_Out_opt_ ULARGE_INTEGER *pulFreeBytesAvailableToCaller,_Out_opt_ ULARGE_INTEGER *pulTotalNumberOfBytes,_Out_opt_ ULARGE_INTEGER *pulTotalNumberOfFreeBytes)
BOOL None shell32.SHGetDiskFreeSpaceExA(_In_ LPCTSTR pszDirectoryName,_Out_opt_ ULARGE_INTEGER *pulFreeBytesAvailableToCaller,_Out_opt_ ULARGE_INTEGER *pulTotalNumberOfBytes,_Out_opt_ ULARGE_INTEGER *pulTotalNumberOfFreeBytes)
BOOL None wintrust.WintrustLoadFunctionPointers(_In_ GUID *pgActionID,_Out_ CRYPT_PROVIDER_FUNCTIONS *pPfns)
BOOL None iphlpapi.GetRTTAndHopCount(_In_ IPAddr DestIpAddress,_Out_ PULONG HopCount,_In_ ULONG MaxHops,_Out_ PULONG RTT)
HRESULT None shell32.SHSetKnownFolderPath(_In_ REFKNOWNFOLDERID rfid,_In_ DWORD dwFlags,_In_ HANDLE hToken,_In_ PCWSTR pszPath)
BOOL WINAPI crypt32.CryptUnregisterDefaultOIDFunction(_In_ DWORD dwEncodingType,_In_ LPCSTR pszFuncName,_In_ LPCWSTR pwszDll)
NETIO_STATUS WINAPI iphlpapi.ConvertLengthToIpv4Mask(_In_ ULONG MaskLength,_Out_ PULONG Mask)
BOOL None kernel32.GetAppContainerNamedObjectPath(_In_opt_ HANDLE Token,_In_opt_ PSID AppContainerSid,_In_ ULONG ObjectPathLength,_Out_opt_ LPWSTR ObjectPath,_Out_ PULONG ReturnLength)
BOOL WINAPI advapi32.IsValidAcl(_In_ PACL pAcl)
BOOL None kernel32.GetThreadIdealProcessorEx(_In_ HANDLE hThread,_Out_ PPROCESSOR_NUMBER lpIdealProcessor)
BOOL WINAPI crypt32.CertCloseStore(_In_ HCERTSTORE hCertStore,_In_ DWORD dwFlags)
HANDLE None wintrust.CryptCATOpen(_In_ LPWSTR pwszFileName,_In_ DWORD fdwOpenFlags,_In_ HCRYPTPROV hProv,_In_ DWORD dwPublicVersion,_In_ DWORD dwEncodingType)
ULONG WINAPI iphlpapi.GetTcp6Table(_Out_ PMIB_TCP6TABLE TcpTable,_Inout_ PULONG SizePointer,_In_ BOOL Order)
HRESULT None shell32.SHMultiFileProperties(_In_ IDataObject *pdtobj,DWORD dwFlags None)
BOOL WINAPI crypt32.CertGetCertificateChain(_In_opt_ HCERTCHAINENGINE hChainEngine,_In_ PCCERT_CONTEXT pCertContext,_In_opt_ LPFILETIME pTime,_In_ HCERTSTORE hAdditionalStore,_In_ PCERT_CHAIN_PARA pChainPara,_In_ DWORD dwFlags,_In_ LPVOID pvReserved,_Out_ PCCERT_CHAIN_CONTEXT *ppChainContext)
BOOL WINAPI crypt32.CertVerifySubjectCertificateContext(_In_ PCCERT_CONTEXT pSubject,_In_opt_ PCCERT_CONTEXT pIssuer,_Inout_ DWORD *pdwFlags)
BOOL WINAPI kernel32.FreeEnvironmentStrings(_In_ LPTCH lpszEnvironmentBlock)
BOOL WINAPI kernel32.FreeEnvironmentStringsW(_In_ LPTCH lpszEnvironmentBlock)
BOOL WINAPI kernel32.FreeEnvironmentStringsA(_In_ LPTCH lpszEnvironmentBlock)
HRESULT None certadm.CertSrvBackupGetDynamicFileList(_In_ HCSBC hbc,_Out_ WCHAR **ppwszzFileList,_Out_ DWORD *pcbSize)
HRESULT None certadm.CertSrvBackupGetDynamicFileListW(_In_ HCSBC hbc,_Out_ WCHAR **ppwszzFileList,_Out_ DWORD *pcbSize)
DWORD WINAPI advapi32.LookupSecurityDescriptorParts(_Out_opt_ PTRUSTEE *pOwner,_Out_opt_ PTRUSTEE *pGroup,_Out_opt_ PULONG cCountOfAccessEntries,_Out_opt_ PEXPLICIT_ACCESS *pListOfAccessEntries,_Out_opt_ PULONG cCountOfAuditEntries,_Out_opt_ PEXPLICIT_ACCESS *pListOfAuditEntries,_In_ PSECURITY_DESCRIPTOR pSD)
DWORD WINAPI advapi32.LookupSecurityDescriptorPartsW(_Out_opt_ PTRUSTEE *pOwner,_Out_opt_ PTRUSTEE *pGroup,_Out_opt_ PULONG cCountOfAccessEntries,_Out_opt_ PEXPLICIT_ACCESS *pListOfAccessEntries,_Out_opt_ PULONG cCountOfAuditEntries,_Out_opt_ PEXPLICIT_ACCESS *pListOfAuditEntries,_In_ PSECURITY_DESCRIPTOR pSD)
DWORD WINAPI advapi32.LookupSecurityDescriptorPartsA(_Out_opt_ PTRUSTEE *pOwner,_Out_opt_ PTRUSTEE *pGroup,_Out_opt_ PULONG cCountOfAccessEntries,_Out_opt_ PEXPLICIT_ACCESS *pListOfAccessEntries,_Out_opt_ PULONG cCountOfAuditEntries,_Out_opt_ PEXPLICIT_ACCESS *pListOfAuditEntries,_In_ PSECURITY_DESCRIPTOR pSD)
BOOL WINAPI advapi32.CryptGetKeyParam(_In_ HCRYPTKEY hKey,_In_ DWORD dwParam,_Out_ BYTE *pbData,_Inout_ DWORD *pdwDataLen,_In_ DWORD dwFlags)
ULONG None None.RKeyPFXInstall(_In_ KEYSVCC_HANDLE hKeySvcCli,_In_ PKEYSVC_BLOB pPFX,_In_ PKEYSVC_UNICODE_STRING pPassword,_In_ ULONG ulFlags)
DWORD None iphlpapi.GetAdaptersInfo(_Out_ PIP_ADAPTER_INFO pAdapterInfo,_Inout_ PULONG pOutBufLen)
DWORD None iphlpapi.FlushIpNetTable(_In_ DWORD dwIfIndex)
BOOL WINAPI crypt32.CryptMsgCountersign(_Inout_ HCRYPTMSG hCryptMsg,_In_ DWORD dwIndex,_In_ DWORD cCountersigners,_In_ PCMSG_SIGNER_ENCODE_INFO rgCountersigners)
NETIOAPI_API None iphlpapi.GetTeredoPort(_Out_ USHORT *Port)
BOOL WINAPI authz.AuthzEnumerateSecurityEventSources(_In_ DWORD dwFlags,_Out_ PAUTHZ_SOURCE_SCHEMA_REGISTRATION Buffer,_Out_ PDWORD pdwCount,_Inout_ PDWORD pdwLength)
DWORD None iphlpapi.GetExtendedUdpTable(_Out_ PVOID pUdpTable,_Inout_ PDWORD pdwSize,_In_ BOOL bOrder,_In_ ULONG ulAf,_In_ UDP_TABLE_CLASS TableClass,_In_ ULONG Reserved)
BOOL WINAPI authz.AuthzFreeAuditEvent(_In_ AUTHZ_AUDIT_EVENT_HANDLE pAuditEventInfo)
BOOL WINAPI advapi32.QueryServiceObjectSecurity(_In_ SC_HANDLE hService,_In_ SECURITY_INFORMATION dwSecurityInformation,_Out_opt_ PSECURITY_DESCRIPTOR lpSecurityDescriptor,_In_ DWORD cbBufSize,_Out_ LPDWORD pcbBytesNeeded)
HRESULT WINAPI cryptxml.CryptXmlGetTransforms(_Out_ PCRYPT_XML_TRANSFORM_CHAIN_CONFIG **pConfig)
PCCERT_CHAIN_CONTEXT WINAPI crypt32.CertDuplicateCertificateChain(_In_ PCCERT_CHAIN_CONTEXT pChainContext)
HRESULT WINAPI coremessaging.CreateDispatcherQueueController(_In_ DispatcherQueueOptions options,_Out_ DispatcherQueueController dispatcherQueueController)
HRESULT None shlwapi.UrlUnescape(_Inout_ PTSTR pszURL,_Out_opt_ PTSTR pszUnescaped,_Inout_opt_ DWORD *pcchUnescaped,DWORD dwFlags None)
HRESULT None shlwapi.UrlUnescapeW(_Inout_ PTSTR pszURL,_Out_opt_ PTSTR pszUnescaped,_Inout_opt_ DWORD *pcchUnescaped,DWORD dwFlags None)
HRESULT None shlwapi.UrlUnescapeA(_Inout_ PTSTR pszURL,_Out_opt_ PTSTR pszUnescaped,_Inout_opt_ DWORD *pcchUnescaped,DWORD dwFlags None)
LONG None None.DefScreenSaverProc(HWND hWnd None,UINT msg None,WPARAM wParam None,LPARAM lParam None)
BOOL WINAPI advapi32.GetSecurityDescriptorGroup(_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_Out_ PSID *pGroup,_Out_ LPBOOL lpbGroupDefaulted)
FARPROC WINAPI kernel32.GetProcAddress(_In_ HMODULE hModule,_In_ LPCSTR lpProcName)
LONG WINAPI winscard.SCardListReaderGroups(_In_ SCARDCONTEXT hContext,_Out_ LPTSTR mszGroups,_Inout_ LPDWORD pcchGroups)
LONG WINAPI winscard.SCardListReaderGroupsW(_In_ SCARDCONTEXT hContext,_Out_ LPTSTR mszGroups,_Inout_ LPDWORD pcchGroups)
LONG WINAPI winscard.SCardListReaderGroupsA(_In_ SCARDCONTEXT hContext,_Out_ LPTSTR mszGroups,_Inout_ LPDWORD pcchGroups)
DWORD None iphlpapi.Icmp6ParseReplies(_In_ LPVOID ReplyBuffer,_In_ DWORD ReplySize)
BOOL WINAPI authz.AuthzReportSecurityEvent(_In_ DWORD dwFlags,_Inout_ AUTHZ_SECURITY_EVENT_PROVIDER_HANDLE hEventProvider,_In_ DWORD dwAuditId,_In_opt_ PSID pUserSid,_In_ DWORD dwCount,_In_ ... None)
LPTSTR None shlwapi.PathCombine(_Out_ LPTSTR pszPathOut,_In_opt_ LPCTSTR pszPathIn,_In_ LPCTSTR pszMore)
LPTSTR None shlwapi.PathCombineW(_Out_ LPTSTR pszPathOut,_In_opt_ LPCTSTR pszPathIn,_In_ LPCTSTR pszMore)
LPTSTR None shlwapi.PathCombineA(_Out_ LPTSTR pszPathOut,_In_opt_ LPCTSTR pszPathIn,_In_ LPCTSTR pszMore)
LONG WINAPI advapi32.RegSetKeySecurity(_In_ HKEY hKey,_In_ SECURITY_INFORMATION SecurityInformation,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor)
BOOL None shell32.SignalFileOpen(_In_ PCIDLIST_ABSOLUTE pidl)
BOOL WINAPI crypt32.CryptMsgCountersignEncoded(_In_ DWORD dwEncodingType,_In_ PBYTE pbSignerInfo,_In_ DWORD cbSignerInfo,_In_ DWORD cCountersigners,_In_ PCMSG_SIGNER_ENCODE_INFO rgCountersigners,_Out_ PBYTE pbCountersignature,_Inout_ PDWORD pcbCountersignature)
DWORD None iphlpapi.GetIfEntry(_Inout_ PMIB_IFROW pIfRow)
BOOL WINAPI crypt32.CryptSIPRetrieveSubjectGuid(_In_ LPCWSTR FileName,_In_opt_ HANDLE hFileIn,_Out_ GUID *pgSubject)
VOID WINAPI advapi32.BuildTrusteeWithName(_Inout_ PTRUSTEE pTrustee,_In_opt_ LPTSTR pName)
VOID WINAPI advapi32.BuildTrusteeWithNameW(_Inout_ PTRUSTEE pTrustee,_In_opt_ LPTSTR pName)
VOID WINAPI advapi32.BuildTrusteeWithNameA(_Inout_ PTRUSTEE pTrustee,_In_opt_ LPTSTR pName)
BOOL WINAPI crypt32.CertSetCertificateContextPropertiesFromCTLEntry(_In_ PCCERT_CONTEXT pCertContext,_In_ PCTL_ENTRY pCtlEntry,_In_ DWORD dwFlags)
BOOL WINAPI crypt32.CertSelectCertificateChains(_In_opt_ LPCGUID pSelectionContext,_In_ DWORD dwFlags,_In_opt_ PCCERT_SELECT_CHAIN_PARA pChainParameters,_In_ DWORD cCriteria,_In_opt_ PCCERT_SELECT_CRITERIA rgpCriteria,_In_ HCERTSTORE hStore,_Out_ PDWORD pcSelection,_Out_ PCCERT_CHAIN_CONTEXT **pprgpSelection)
HCRYPTMSG WINAPI crypt32.CryptMsgDuplicate(_In_ HCRYPTMSG hCryptMsg)
BOOL WINAPI cryptui.CryptUIDlgViewSignerInfo(_In_ CRYPTUI_VIEWSIGNERINFO_STRUCT *pcvsi)
BOOL WINAPI cryptui.CryptUIDlgViewSignerInfoW(_In_ CRYPTUI_VIEWSIGNERINFO_STRUCT *pcvsi)
BOOL WINAPI cryptui.CryptUIDlgViewSignerInfoA(_In_ CRYPTUI_VIEWSIGNERINFO_STRUCT *pcvsi)
BOOL WINAPI wintrust.IsCatalogFile(_In_opt_ HANDLE hFile,_In_opt_ WCHAR *pwszFileName)
BOOL WINAPI advapi32.CryptEncrypt(_In_ HCRYPTKEY hKey,_In_ HCRYPTHASH hHash,_In_ BOOL Final,_In_ DWORD dwFlags,_Inout_ BYTE *pbData,_Inout_ DWORD *pdwDataLen,_In_ DWORD dwBufLen)
DWORD WINAPI iphlpapi.GetTcpTable(_Out_ PMIB_TCPTABLE pTcpTable,_Inout_ PDWORD pdwSize,_In_ BOOL bOrder)
LONG None None.CPlApplet(HWND hwndCPl None,UINT uMsg None,LPARAM lParam1 None,LPARAM lParam2 None)
BOOL None advapi32.LogonUser(_In_ LPTSTR lpszUsername,_In_opt_ LPTSTR lpszDomain,_In_opt_ LPTSTR lpszPassword,_In_ DWORD dwLogonType,_In_ DWORD dwLogonProvider,_Out_ PHANDLE phToken)
BOOL None advapi32.LogonUserW(_In_ LPTSTR lpszUsername,_In_opt_ LPTSTR lpszDomain,_In_opt_ LPTSTR lpszPassword,_In_ DWORD dwLogonType,_In_ DWORD dwLogonProvider,_Out_ PHANDLE phToken)
BOOL None advapi32.LogonUserA(_In_ LPTSTR lpszUsername,_In_opt_ LPTSTR lpszDomain,_In_opt_ LPTSTR lpszPassword,_In_ DWORD dwLogonType,_In_ DWORD dwLogonProvider,_Out_ PHANDLE phToken)
BOOL WINAPI advapi32.CryptDuplicateHash(_In_ HCRYPTHASH hHash,_In_ DWORD *pdwReserved,_In_ DWORD dwFlags,_Out_ HCRYPTHASH *phHash)
HRESULT None None.PathCchRemoveFileSpec(_Inout_ PWSTR pszPath,_In_ size_t cchPath)
HRESULT CALLBACK shell32.DllGetVersion(DLLVERSIONINFO *pdvi None)
BOOL WINAPI kernel32.GetProcessDefaultCpuSets(_In_ HANDLE Process,_Out_opt_ PULONG CpuSetIds,_In_ ULONG CpuSetIdCount,_Out_ PULONG RequiredIdCount)
VOID WINAPI kernel32.SetEventWhenCallbackReturns(_Inout_ PTP_CALLBACK_INSTANCE pci,_In_ HANDLE evt)
HRESULT WINAPI cryptxml.CryptXmlOpenToEncode(_In_opt_ CRYPT_XML_TRANSFORM_CHAIN_CONFIG *pConfig,DWORD dwFlags None,_In_opt_ LPCWSTR wszId,_In_ CRYPT_XML_PROPERTY *rgProperty,_In_ ULONG cProperty,_In_opt_ CRYPT_XML_BLOB *pEncoded,HCRYPTXML *phSignature None)
BOOL WINAPI crypt32.CertDeleteCertificateFromStore(_In_ PCCERT_CONTEXT pCertContext)
BOOL WINAPI crypt32.CryptSIPRetrieveSubjectGuidForCatalogFile(_In_ LPCWSTR FileName,_In_opt_ HANDLE hFileIn,_Out_ GUID *pgSubject)
BOOL WINAPI crypt32.CryptProtectMemory(_Inout_ LPVOID pData,_In_ DWORD cbData,_In_ DWORD dwFlags)
BOOL WINAPI crypt32.CertCompareCertificate(_In_ DWORD dwCertEncodingType,_In_ PCERT_INFO pCertId1,_In_ PCERT_INFO pCertId2)
BOOL None wintrust.CryptCATClose(_In_ HANDLE hCatalog)
PSLIST_ENTRY WINAPI ntdll.RtlInterlockedPopEntrySList(_In_ PSLIST_HEADER ListHead)
NETIOAPI_API None iphlpapi.NotifyUnicastIpAddressChange(_In_ ADDRESS_FAMILY Family,_In_ PUNICAST_IPADDRESS_CHANGE_CALLBACK Callback,_In_ PVOID CallerContext,_In_ BOOLEAN InitialNotification,_Inout_ HANDLE *NotificationHandle)
BOOL WINAPI advapi32.AddAuditAccessObjectAce(_Inout_ PACL pAcl,_In_ DWORD dwAceRevision,_In_ DWORD AceFlags,_In_ DWORD AccessMask,_In_opt_ GUID *ObjectTypeGuid,_In_opt_ GUID *InheritedObjectTypeGuid,_In_ PSID pSid,_In_ BOOL bAuditSuccess,_In_ BOOL bAuditFailure)
BOOL None shlwapi.PathStripToRoot(_Inout_ LPTSTR szRoot)
BOOL None shlwapi.PathStripToRootW(_Inout_ LPTSTR szRoot)
BOOL None shlwapi.PathStripToRootA(_Inout_ LPTSTR szRoot)
BOOL WINAPI advapi32.CryptDecrypt(_In_ HCRYPTKEY hKey,_In_ HCRYPTHASH hHash,_In_ BOOL Final,_In_ DWORD dwFlags,_Inout_ BYTE *pbData,_Inout_ DWORD *pdwDataLen)
BOOL WINAPI advapi32.ImpersonateAnonymousToken(_In_ HANDLE ThreadHandle)
DWORD WINAPI iphlpapi.NotifySecurityHealthChange(PHANDLE pHandle None,LPOVERLAPPED pOverLapped None,PULONG SecurityHealthFlags None)
BOOL CALLBACK None.AuthzAccessCheckCallback(_In_ AUTHZ_CLIENT_CONTEXT_HANDLE hAuthzClientContext,_In_ PACE_HEADER pAce,_In_opt_ PVOID pArgs,_Inout_ PBOOL pbAceApplicable)
LPTSTR None shlwapi.PathRemoveBackslash(_Inout_ LPTSTR lpszPath)
LPTSTR None shlwapi.PathRemoveBackslashW(_Inout_ LPTSTR lpszPath)
LPTSTR None shlwapi.PathRemoveBackslashA(_Inout_ LPTSTR lpszPath)
DWORD WINAPI crypt32.CertEnumCRLContextProperties(_In_ PCCRL_CONTEXT pCrlContext,_In_ DWORD dwPropId)
BOOL None shell32.DAD_DragMove(POINT pt None)
DWORD None kernel32.GetMaximumProcessorCount(_In_ WORD GroupNumber)
DWORD WINAPI crypt32.CertEnumCTLContextProperties(_In_ PCCTL_CONTEXT pCtlContext,_In_ DWORD dwPropId)
BOOL WINAPI advapi32.SetSecurityDescriptorOwner(_Inout_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_opt_ PSID pOwner,_In_ BOOL bOwnerDefaulted)
BOOL WINAPI kernel32.AddScopedPolicyIDAce(_Inout_ PACL pAcl,_In_ DWORD dwAceRevision,_In_ DWORD AceFlags,_In_ DWORD AccessMask,_In_ PSID pSid)
HRESULT None ntshrui.ShowShareFolderUI(_In_ HWND hwndParent,_In_ LPCWSTR pszPath)
HRESULT None ntshrui.ShowShareFolderUIW(_In_ HWND hwndParent,_In_ LPCWSTR pszPath)
HRESULT None certadm.CertSrvRestoreGetDatabaseLocations(_In_ HCSBC hbc,_Out_ WCHAR **ppwszzDatabaseLocationList,_Out_ DWORD *pcbSize)
HRESULT None certadm.CertSrvRestoreGetDatabaseLocationsW(_In_ HCSBC hbc,_Out_ WCHAR **ppwszzDatabaseLocationList,_Out_ DWORD *pcbSize)
BOOL WINAPI authz.AuthzInitializeObjectAccessAuditEvent(_In_ DWORD Flags,_In_ AUTHZ_AUDIT_EVENT_TYPE_HANDLE hAuditEventType,_In_ PWSTR szOperationType,_In_ PWSTR szObjectType,_In_ PWSTR szObjectName,_In_ PWSTR szAdditionalInfo,_Out_ PAUTHZ_AUDIT_EVENT_HANDLE phAuditEvent,_In_ DWORD dwAdditionalParamCount)
BOOL WINAPI crypt32.CertAddCRLContextToStore(_In_ HCERTSTORE hCertStore,_In_ PCCRL_CONTEXT pCrlContext,_In_ DWORD dwAddDisposition,_Out_opt_ PCCRL_CONTEXT *ppStoreContext)
ULONG WINAPI iphlpapi.GetPerTcp6ConnectionEStats(PMIB_TCP6ROW Row None,TCP_ESTATS_TYPE EstatsType None,_Out_ PUCHAR Rw,ULONG RwVersion None,ULONG RwSize None,_Out_ PUCHAR Ros,ULONG RosVersion None,ULONG RosSize None,_Out_ PUCHAR Rod,ULONG RodVersion None,ULONG RodSize None)
BOOL WINAPI crypt32.CertVerifyCRLRevocation(_In_ DWORD dwCertEncodingType,_In_ PCERT_INFO pCertId,_In_ DWORD cCrlInfo,_In_ PCRL_INFO rgpCrlInfo[])
BOOL WINAPI None.PFNCMFILTERPROC(_In_ PCCERT_CONTEXT pCertContext,_In_ DWORD lCustData,_In_ DWORD dwFlags,_In_ DWORD dwDisplayWell)
DWORD None cryptdlg.GetFriendlyNameOfCert(_In_ PCCERT_CONTEXT pccert,_Out_ LPTSTR pchBuffer,_In_ DWORD cchBuffer)
DWORD None cryptdlg.GetFriendlyNameOfCertW(_In_ PCCERT_CONTEXT pccert,_Out_ LPTSTR pchBuffer,_In_ DWORD cchBuffer)
DWORD None cryptdlg.GetFriendlyNameOfCertA(_In_ PCCERT_CONTEXT pccert,_Out_ LPTSTR pchBuffer,_In_ DWORD cchBuffer)
BOOL WINAPI crypt32.CryptRegisterDefaultOIDFunction(_In_ DWORD dwEncodingType,_In_ LPCSTR pszFuncName,_In_ DWORD dwIndex,_In_ LPCWSTR pwszDll)
BOOL WINAPI crypt32.CertGetEnhancedKeyUsage(_In_ PCCERT_CONTEXT pCertContext,_In_ DWORD dwFlags,_Out_ PCERT_ENHKEY_USAGE pUsage,_Inout_ DWORD *pcbUsage)
NETIOAPI_API None iphlpapi.CancelMibChangeNotify2(_In_ HANDLE NotificationHandle)
HRESULT WINAPI wintrust.WTHelperCertCheckValidSignature(CRYPT_PROVIDER_DATA *pProvData None)
BOOL None shlwapi.PathIsLFNFileSpec(_In_ LPCTSTR pszName)
BOOL None shlwapi.PathIsLFNFileSpecW(_In_ LPCTSTR pszName)
BOOL None shlwapi.PathIsLFNFileSpecA(_In_ LPCTSTR pszName)
HRESULT None None.GetGroupingRange([out] PROPDESC_GROUPING_RANGE *pgr)
HRESULT None None.PathCchStripToRoot(_Inout_ PWSTR pszPath,_In_ size_t cchPath)
HPROPSHEETPAGE WINAPI aclui.CreateSecurityPage(_In_ LPSECURITYINFO psi)
BOOL WINAPI advapi32.CryptContextAddRef(_In_ HCRYPTPROV hProv,_In_ DWORD *pdwReserved,_In_ DWORD dwFlags)
DWORD None iphlpapi.GetOwnerModuleFromUdp6Entry(_In_ PMIB_UDP6ROW_OWNER_MODULE pUdpEntry,_In_ TCPIP_OWNER_MODULE_INFO_CLASS Class,_Out_ PVOID Buffer,_Inout_ PDWORD pdwSize)
BOOL WINAPI advapi32.CryptGetUserKey(_In_ HCRYPTPROV hProv,_In_ DWORD dwKeySpec,_Out_ HCRYPTKEY *phUserKey)
BOOL WINAPI crypt32.CryptMsgSignCTL(_In_ DWORD dwMsgEncodingType,_In_ BYTE *pbCtlContent,_In_ DWORD cbCtlContent,_In_ PCMSG_SIGNED_ENCODE_INFO pSignInfo,_In_ DWORD dwFlags,_Out_ BYTE *pbEncoded,_Inout_ DWORD *pcbEncoded)
BOOL WINAPI crypt32.CertFreeCertificateContext(_In_ PCCERT_CONTEXT pCertContext)
BOOL CALLBACK None.AuthzComputeGroupsCallback(_In_ AUTHZ_CLIENT_CONTEXT_HANDLE hAuthzClientContext,_In_ PVOID Args,_Out_ PSID_AND_ATTRIBUTES *pSidAttrArray,_Out_ PDWORD pSidCount,_Out_ PSID_AND_ATTRIBUTES *pRestrictedSidAttrArray,_Out_ PDWORD pRestrictedSidCount)
HRESULT WINAPI mssign32.SignerSign(_In_ SIGNER_SUBJECT_INFO *pSubjectInfo,_In_ SIGNER_CERT *pSignerCert,_In_ SIGNER_SIGNATURE_INFO *pSignatureInfo,_In_opt_ SIGNER_PROVIDER_INFO *pProviderInfo,_In_opt_ LPCWSTR pwszHttpTimeStamp,_In_opt_ PCRYPT_ATTRIBUTES psRequest,_In_opt_ LPVOID pSipData)
DWORD WINAPI crypt32.CertGetPublicKeyLength(_In_ DWORD dwCertEncodingType,_In_ PCERT_PUBLIC_KEY_INFO pPublicKey)
BOOL WINAPI advapi32.AddAuditAccessAce(_Inout_ PACL pAcl,_In_ DWORD dwAceRevision,_In_ DWORD dwAccessMask,_In_ PSID pSid,_In_ BOOL bAuditSuccess,_In_ BOOL bAuditFailure)
BOOL WINAPI mssign32.PvkPrivateKeyAcquireContextFromMemory(_In_ LPCWSTR pwszProvName,_In_ DWORD dwProvType,_In_ BYTE *pbData,_In_ DWORD cbData,_In_ HWND hwndOwner,_In_ LPCWSTR pwszKeyName,_Inout_opt_ DWORD *pdwKeySpec,_Out_ HCRYPTPROV *phCryptProv,_Out_ LPTSTR *ppwszTmpContainer)
BOOL WINAPI advapi32.CryptHashData(_In_ HCRYPTHASH hHash,_In_ BYTE *pbData,_In_ DWORD dwDataLen,_In_ DWORD dwFlags)
HRESULT WINAPI mssign32.SignerTimeStampEx2(_Reserved_ DWORD dwFlags,_In_ SIGNER_SUBJECT_INFO *pSubjectInfo,_In_ LPCWSTR pwszHttpTimeStamp,_In_ ALG_ID dwAlgId,_In_ PCRYPT_ATTRIBUTES psRequest,_In_ LPVOID pSipData,_Out_ SIGNER_CONTEXT **ppSignerContext)
BOOL WINAPI advapi32.CryptSetProvider(_In_ LPCTSTR pszProvName,_In_ DWORD dwProvType)
BOOL WINAPI advapi32.CryptSetProviderW(_In_ LPCTSTR pszProvName,_In_ DWORD dwProvType)
BOOL WINAPI advapi32.CryptSetProviderA(_In_ LPCTSTR pszProvName,_In_ DWORD dwProvType)
ULONG WINAPI iphlpapi.DeletePersistentUdpPortReservation(_In_ USHORT StartPort,_In_ USHORT NumberOfPorts)
HRESULT WINAPI mssign32.SignerTimeStampEx3(_In_ DWORD dwFlags,_In_ DWORD dwIndex,_In_ SIGNER_SUBJECT_INFO *pSubjectInfo,_In_ PCWSTR pwszHttpTimeStamp,_In_ PCWSTR pszAlgorithmOid,_In_opt_ PCRYPT_ATTRIBUTES psRequest,_In_opt_ PVOID pSipData,_Out_ SIGNER_CONTEXT **ppSignerContext,_In_opt_ PCERT_STRONG_SIGN_PARA pCryptoPolicy,_Reserved_ PVOID pReserved)
BOOL WINAPI crypt32.CryptStringToBinary(_In_ LPCTSTR pszString,_In_ DWORD cchString,_In_ DWORD dwFlags,_In_ BYTE *pbBinary,_Inout_ DWORD *pcbBinary,_Out_ DWORD *pdwSkip,_Out_ DWORD *pdwFlags)
BOOL WINAPI crypt32.CryptStringToBinaryW(_In_ LPCTSTR pszString,_In_ DWORD cchString,_In_ DWORD dwFlags,_In_ BYTE *pbBinary,_Inout_ DWORD *pcbBinary,_Out_ DWORD *pdwSkip,_Out_ DWORD *pdwFlags)
BOOL WINAPI crypt32.CryptStringToBinaryA(_In_ LPCTSTR pszString,_In_ DWORD cchString,_In_ DWORD dwFlags,_In_ BYTE *pbBinary,_Inout_ DWORD *pcbBinary,_Out_ DWORD *pdwSkip,_Out_ DWORD *pdwFlags)
PCERT_RDN_ATTR WINAPI crypt32.CertFindRDNAttr(_In_ LPCSTR pszObjId,_In_ PCERT_NAME_INFO pName)
BOOL WINAPI advapi32.CryptVerifySignature(_In_ HCRYPTHASH hHash,_In_ BYTE *pbSignature,_In_ DWORD dwSigLen,_In_ HCRYPTKEY hPubKey,_In_ LPCTSTR sDescription,_In_ DWORD dwFlags)
BOOL WINAPI advapi32.CryptVerifySignatureW(_In_ HCRYPTHASH hHash,_In_ BYTE *pbSignature,_In_ DWORD dwSigLen,_In_ HCRYPTKEY hPubKey,_In_ LPCTSTR sDescription,_In_ DWORD dwFlags)
BOOL WINAPI advapi32.CryptVerifySignatureA(_In_ HCRYPTHASH hHash,_In_ BYTE *pbSignature,_In_ DWORD dwSigLen,_In_ HCRYPTKEY hPubKey,_In_ LPCTSTR sDescription,_In_ DWORD dwFlags)
DWORD None iphlpapi.SetIpNetEntry(_In_ PMIB_IPNETROW pArpEntry)
NTSTATUS None None.GetUserAuthData(_In_ PVOID UserHandle,_Out_ PUCHAR *UserAuthData,_Out_ PULONG UserAuthDataSize)
BOOL WINAPI crypt32.CryptFreeOIDFunctionAddress(_In_ HCRYPTOIDFUNCADDR hFuncAddr,_In_ DWORD dwFlags)
BOOL WINAPI crypt32.CertAddCertificateLinkToStore(_In_ HCERTSTORE hCertStore,_In_ PCCERT_CONTEXT pCertContext,_In_ DWORD dwAddDisposition,_Out_opt_ PCCERT_CONTEXT *ppStoreContext)
BOOL WINAPI advapi32.ObjectPrivilegeAuditAlarm(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ HANDLE ClientToken,_In_ DWORD DesiredAccess,_In_ PPRIVILEGE_SET Privileges,_In_ BOOL AccessGranted)
BOOL WINAPI advapi32.ObjectPrivilegeAuditAlarmW(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ HANDLE ClientToken,_In_ DWORD DesiredAccess,_In_ PPRIVILEGE_SET Privileges,_In_ BOOL AccessGranted)
BOOL WINAPI advapi32.ObjectPrivilegeAuditAlarmA(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ HANDLE ClientToken,_In_ DWORD DesiredAccess,_In_ PPRIVILEGE_SET Privileges,_In_ BOOL AccessGranted)
PCCTL_CONTEXT WINAPI crypt32.CertEnumCTLsInStore(_In_ HCERTSTORE hCertStore,_In_ PCCTL_CONTEXT pPrevCtlContext)
BOOL WINAPI advapi32.CryptHashSessionKey(_In_ HCRYPTHASH hHash,_In_ HCRYPTKEY hKey,_In_ DWORD dwFlags)
BOOL WINAPI advapi32.IsWellKnownSid(_In_ PSID pSid,_In_ WELL_KNOWN_SID_TYPE WellKnownSidType)
DWORD WINAPI crypt32.CertRDNValueToStr(_In_ DWORD dwValueType,_In_ PCERT_RDN_VALUE_BLOB pValue,_Out_ LPTSTR psz,_In_ DWORD csz)
DWORD WINAPI crypt32.CertRDNValueToStrW(_In_ DWORD dwValueType,_In_ PCERT_RDN_VALUE_BLOB pValue,_Out_ LPTSTR psz,_In_ DWORD csz)
DWORD WINAPI crypt32.CertRDNValueToStrA(_In_ DWORD dwValueType,_In_ PCERT_RDN_VALUE_BLOB pValue,_Out_ LPTSTR psz,_In_ DWORD csz)
BOOL WINAPI crypt32.CertVerifyValidityNesting(_In_ PCERT_INFO pSubjectInfo,_In_ PCERT_INFO pIssuerInfo)
BOOL None user32.WinHelp(HWND hWndMain None,LPCTSTR lpszHelp None,UINT uCommand None,ULONG_PTR dwData None)
BOOL None user32.WinHelpW(HWND hWndMain None,LPCTSTR lpszHelp None,UINT uCommand None,ULONG_PTR dwData None)
BOOL None user32.WinHelpA(HWND hWndMain None,LPCTSTR lpszHelp None,UINT uCommand None,ULONG_PTR dwData None)
BOOL None shlwapi.PathIsUNCServerShare(_In_ LPCTSTR pszPath)
BOOL None shlwapi.PathIsUNCServerShareW(_In_ LPCTSTR pszPath)
BOOL None shlwapi.PathIsUNCServerShareA(_In_ LPCTSTR pszPath)
VOID WINAPI advapi32.SetSecurityAccessMask(_In_ SECURITY_INFORMATION SecurityInformation,_Out_ LPDWORD DesiredAccess)
BOOL WINAPI advapi32.CryptDeriveKey(_In_ HCRYPTPROV hProv,_In_ ALG_ID Algid,_In_ HCRYPTHASH hBaseData,_In_ DWORD dwFlags,_Inout_ HCRYPTKEY *phKey)
BOOL WINAPI crypt32.CertDeleteCTLFromStore(_In_ PCCTL_CONTEXT pCtlContext)
DWORD WINAPI advapi32.GetSecurityDescriptorLength(_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor)
BOOL CALLBACK None.AuthzGetCentralAccessPolicyCallback(_In_ AUTHZ_CLIENT_CONTEXT_HANDLE hAuthzClientContext,_In_ PSID capid,_In_opt_ PVOID pArgs,_Out_ PBOOL pCentralAccessPolicyApplicable,_Out_ PVOID ppCentralAccessPolicy)
BOOL None wintrust.WintrustRemoveActionID(_In_ GUID *pgActionID)
BOOL WINAPI None.CertStoreProvWriteCRLCallback(_In_ HCERTSTOREPROV hStoreProv,_In_ PCCRL_CONTEXT pCrlContext,_In_ DWORD dwFlags)
BOOL None shell32.SHRegGetBoolValueFromHKCUHKLM(PCWSTR pszKey None,_In_ PCWSTR pszValue,_In_ BOOL fDefault)
DWORD None iphlpapi.GetBestRoute(_In_ DWORD dwDestAddr,_In_ DWORD dwSourceAddr,_Out_ PMIB_IPFORWARDROW pBestRoute)
BOOL WINAPI crypt32.CryptRegisterOIDFunction(_In_ DWORD dwEncodingType,_In_ LPCSTR pszFuncName,_In_ LPCSTR pszOID,_In_ LPCWSTR pwszDll,_In_ LPCSTR pszOverrideFuncName)
BOOL WINAPI crypt32.CryptSIPRemoveSignedDataMsg(_In_ SIP_SUBJECTINFO *pSubjectInfo,_In_ DWORD dwIndex)
BOOL WINAPI crypt32.CertSetEnhancedKeyUsage(_In_ PCCERT_CONTEXT pCertContext,_In_ PCERT_ENHKEY_USAGE pUsage)
VOID WINAPI kernel32.WaitForThreadpoolWorkCallbacks(_Inout_ PTP_WORK pwk,_In_ BOOL fCancelPendingCallbacks)
HRESULT None None.PathCchAddBackslashEx(_Inout_ PWSTR pszPath,_In_ size_t cchPath,_Out_opt_ PWSTR *ppszEnd,_Out_opt_ size_t *pcchRemaining)
HRESULT None shell32.SHGetRealIDL(_In_ IShellFolder *psf,_In_ PCUITEMID_CHILD pidlSimple,_Out_ PITEMID_CHILD *ppidlReal)
LONG None shlwapi.SHRegGetValueFromHKCUHKLM(_In_ PCWSTR pwszKey,_In_ PCWSTR pwszValue,_In_ SRRF srrfFlags,_Out_ DWORD *pdwType,_In_ LPCVOID pvData,_Inout_ DWORD *pcbData)
PUCHAR WINAPI advapi32.GetSidSubAuthorityCount(_In_ PSID pSid)
BOOL WINAPI crypt32.CertFreeCRLContext(_In_ PCCRL_CONTEXT pCrlContext)
NETIOAPI_API None iphlpapi.GetIpNetTable2(_In_ ADDRESS_FAMILY Family,_Out_ PMIB_IPNET_TABLE2 *Table)
NETIOAPI_API None iphlpapi.GetIpPathEntry(_Inout_ PMIB_IPPATH_ROW Row)
HRESULT None ntshrui.ShowShareFolderUI(_In_ HWND hwndParent,_In_ LPCWSTR pszPath)
HRESULT None ntshrui.ShowShareFolderUIW(_In_ HWND hwndParent,_In_ LPCWSTR pszPath)
DWORD WINAPI advapi32.GetInheritanceSource(_In_ LPTSTR pObjectName,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_In_ BOOL Container,_In_opt_ GUID **pObjectClassGuids,_In_ DWORD GuidCount,_In_ PACL pAcl,_In_opt_ PFN_OBJECT_MGR_FUNCTS pfnArray,_In_ PGENERIC_MAPPING pGenericMapping,_Out_ PINHERITED_FROM pInheritArray)
DWORD WINAPI advapi32.GetInheritanceSourceW(_In_ LPTSTR pObjectName,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_In_ BOOL Container,_In_opt_ GUID **pObjectClassGuids,_In_ DWORD GuidCount,_In_ PACL pAcl,_In_opt_ PFN_OBJECT_MGR_FUNCTS pfnArray,_In_ PGENERIC_MAPPING pGenericMapping,_Out_ PINHERITED_FROM pInheritArray)
DWORD WINAPI advapi32.GetInheritanceSourceA(_In_ LPTSTR pObjectName,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_In_ BOOL Container,_In_opt_ GUID **pObjectClassGuids,_In_ DWORD GuidCount,_In_ PACL pAcl,_In_opt_ PFN_OBJECT_MGR_FUNCTS pfnArray,_In_ PGENERIC_MAPPING pGenericMapping,_Out_ PINHERITED_FROM pInheritArray)
HICON None shell32.ExtractIcon(_Reserved_ HINSTANCE hInst,_In_ LPCTSTR lpszExeFileName,UINT nIconIndex None)
HICON None shell32.ExtractIconW(_Reserved_ HINSTANCE hInst,_In_ LPCTSTR lpszExeFileName,UINT nIconIndex None)
HICON None shell32.ExtractIconA(_Reserved_ HINSTANCE hInst,_In_ LPCTSTR lpszExeFileName,UINT nIconIndex None)
NETIOAPI_API None iphlpapi.GetIpInterfaceEntry(_Inout_ PMIB_IPINTERFACE_ROW Row)
PCCERT_CONTEXT WINAPI crypt32.CertDuplicateCertificateContext(_In_ PCCERT_CONTEXT pCertContext)
BOOL WINAPI crypt32.CertAddCTLLinkToStore(_In_ HCERTSTORE hCertStore,_In_ PCCTL_CONTEXT pCtlContext,_In_ DWORD dwAddDisposition,_Out_opt_ PCCTL_CONTEXT *ppStoreContext)
BOOL WINAPI crypt32.CertCompareIntegerBlob(_In_ PCRYPT_INTEGER_BLOB pInt1,_In_ PCRYPT_INTEGER_BLOB pInt2)
HCATINFO None wintrust.CryptCATAdminAddCatalog(_In_ HCATADMIN hCatAdmin,_In_ WCHAR *pwszCatalogFile,_In_ WCHAR *pwszSelectBaseName,_In_ DWORD dwFlags)
BOOL WINAPI advapi32.ImpersonateNamedPipeClient(_In_ HANDLE hNamedPipe)
NTSTATUS None advapi32.RtlEncryptMemory(_Inout_ PVOID Memory,_In_ ULONG MemoryLength,_In_ ULONG OptionFlags)
BOOL WINAPI authz.AuthzUninstallSecurityEventSource(_In_ DWORD dwFlags,_In_ PCWSTR szEventSourceName)
DWORD None iphlpapi.GetTcpStatistics(_Out_ PMIB_TCPSTATS pStats)
BOOL WINAPI None.CertStoreProvWriteCTL(_In_ HCERTSTOREPROV hStoreProv,_In_ PCCTL_CONTEXT pCtlContext,_In_ DWORD dwFlags)
CRYPTCATMEMBER WINAPI wintrust.CryptCATEnumerateMember(_In_ HANDLE hCatalog,_In_ CRYPTCATMEMBER *pPrevMember)
BOOL None None.PathIsUNCEx(_In_ PCWSTR pszPath,_Out_opt_ PCWSTR *ppszServer)
BOOL WINAPI advapi32.CryptReleaseContext(_In_ HCRYPTPROV hProv,_In_ DWORD dwFlags)
HRESULT None shlwapi.UrlCreateFromPath(_In_ PCTSTR pszPath,_Out_ PTSTR pszUrl,_Inout_ DWORD *pcchUrl,DWORD dwFlags None)
HRESULT None shlwapi.UrlCreateFromPathW(_In_ PCTSTR pszPath,_Out_ PTSTR pszUrl,_Inout_ DWORD *pcchUrl,DWORD dwFlags None)
HRESULT None shlwapi.UrlCreateFromPathA(_In_ PCTSTR pszPath,_Out_ PTSTR pszUrl,_Inout_ DWORD *pcchUrl,DWORD dwFlags None)
BOOL WINAPI crypt32.CertSerializeCTLStoreElement(_In_ PCCTL_CONTEXT pCtlContext,_In_ DWORD dwFlags,_Out_ BYTE *pbElement,_Inout_ DWORD *pcbElement)
BOOL None shell32.SHRunControlPanel(_In_ PCWSTR lpcszCmdLine,_In_opt_ HWND hwndMsgParent)
WINAPI None crypt32.CertFreeServerOcspResponseContext(_In_ PCCERT_SERVER_OCSP_RESPONSE_CONTEXT pServerOcspResponseContext)
BOOLEAN None advapi32.RtlGenRandom(_Out_ PVOID RandomBuffer,_In_ ULONG RandomBufferLength)
HRESULT None None.MyMethod([out None None,retval] InMyFace** ReturnVal)
BOOL None shlwapi.PathMakeSystemFolder(_In_ LPTSTR pszPath)
BOOL None shlwapi.PathMakeSystemFolderW(_In_ LPTSTR pszPath)
BOOL None shlwapi.PathMakeSystemFolderA(_In_ LPTSTR pszPath)
PCCERT_CONTEXT WINAPI crypt32.CertGetSubjectCertificateFromStore(_In_ HCERTSTORE hCertStore,_In_ DWORD dwCertEncodingType,_In_ PCERT_INFO pCertId)
DWORD None iphlpapi.GetInterfaceInfo(_Out_ PIP_INTERFACE_INFO pIfTable,_Inout_ PULONG dwOutBufLen)
LONG WINAPI wintrust.WinVerifyTrust(_In_ HWND hWnd,_In_ GUID *pgActionID,_In_ LPVOID pWVTData)
VOID WINAPI crypt32.CertFreeCertificateChainList(_In_ PCCERT_CHAIN_CONTEXT *prgpSelection)
DWORD WINAPI crypt32.CertEnumCertificateContextProperties(_In_ PCCERT_CONTEXT pCertContext,_In_ DWORD dwPropId)
LONG WINAPI crypt32.CertVerifyTimeValidity(_In_ LPFILETIME pTimeToVerify,_In_ PCERT_INFO pCertInfo)
BOOL WINAPI cryptnet.CryptGetObjectUrl(_In_ LPCSTR pszUrlOid,_In_ LPVOID pvPara,_In_ DWORD dwFlags,_Out_ PCRYPT_URL_ARRAY pUrlArray,_Inout_ DWORD *pcbUrlArray,_Out_ PCRYPT_URL_INFO pUrlInfo,_Inout_ DWORD *pcbUrlInfo,_Reserved_ LPVOID pvReserved)
BOOL WINAPI crypt32.CertSerializeCRLStoreElement(_In_ PCCRL_CONTEXT pCrlContext,_In_ DWORD dwFlags,_Out_ BYTE *pbElement,_Inout_ DWORD *pcbElement)
BOOL None wintrust.CryptCATAdminCalcHashFromFileHandle(_In_ HANDLE hFile,_Inout_ DWORD *pcbHash,_In_ BYTE *pbHash,_In_ DWORD dwFlags)
BOOL None shlwapi.PathRelativePathTo(_Out_ LPTSTR pszPath,_In_ LPCTSTR pszFrom,_In_ DWORD dwAttrFrom,_In_ LPCTSTR pszTo,_In_ DWORD dwAttrTo)
BOOL None shlwapi.PathRelativePathToW(_Out_ LPTSTR pszPath,_In_ LPCTSTR pszFrom,_In_ DWORD dwAttrFrom,_In_ LPCTSTR pszTo,_In_ DWORD dwAttrTo)
BOOL None shlwapi.PathRelativePathToA(_Out_ LPTSTR pszPath,_In_ LPCTSTR pszFrom,_In_ DWORD dwAttrFrom,_In_ LPCTSTR pszTo,_In_ DWORD dwAttrTo)
BOOL None shlwapi.PathCompactPathEx(_Out_ LPTSTR pszOut,_In_ LPCTSTR pszSrc,_In_ UINT cchMax,_Reserved_ DWORD dwFlags)
BOOL None shlwapi.PathCompactPathExW(_Out_ LPTSTR pszOut,_In_ LPCTSTR pszSrc,_In_ UINT cchMax,_Reserved_ DWORD dwFlags)
BOOL None shlwapi.PathCompactPathExA(_Out_ LPTSTR pszOut,_In_ LPCTSTR pszSrc,_In_ UINT cchMax,_Reserved_ DWORD dwFlags)
BOOL WINAPI advapi32.CryptImportKey(_In_ HCRYPTPROV hProv,_In_ BYTE *pbData,_In_ DWORD dwDataLen,_In_ HCRYPTKEY hPubKey,_In_ DWORD dwFlags,_Out_ HCRYPTKEY *phKey)
PTSTR None shlwapi.PathFindFileName(_In_ PTSTR pPath)
PTSTR None shlwapi.PathFindFileNameW(_In_ PTSTR pPath)
PTSTR None shlwapi.PathFindFileNameA(_In_ PTSTR pPath)
DWORD WINAPI user32.WaitForInputIdle(_In_ HANDLE hProcess,_In_ DWORD dwMilliseconds)
HRESULT None shell32.EnableModelessSB(BOOL fEnable None)
BOOL WINAPI aclui.EditSecurity(_In_ HWND hwndOwner,_In_ LPSECURITYINFO psi)
VOID None shell32.DragFinish(HDROP hDrop None)
BOOL WINAPI crypt32.CryptUnprotectData(_In_ DATA_BLOB *pDataIn,_Out_opt_ LPWSTR *ppszDataDescr,_In_opt_ DATA_BLOB *pOptionalEntropy,_Reserved_ PVOID pvReserved,_In_opt_ CRYPTPROTECT_PROMPTSTRUCT *pPromptStruct,_In_ DWORD dwFlags,_Out_ DATA_BLOB *pDataOut)
PCCERT_CONTEXT WINAPI crypt32.CertGetIssuerCertificateFromStore(_In_ HCERTSTORE hCertStore,_In_ PCCERT_CONTEXT pSubjectContext,_In_opt_ PCCERT_CONTEXT pPrevIssuerContext,_Inout_ DWORD *pdwFlags)
PCERT_EXTENSION WINAPI crypt32.CertFindExtension(_In_ LPCSTR pszObjId,_In_ DWORD cExtensions,_In_ CERT_EXTENSION rgExtensions[])
BOOL None wintrust.CryptCATAdminRemoveCatalog(_In_ HCATADMIN hCatAdmin,_In_ LPCWSTR pwszCatalogFile,_In_ DWORD dwFlags)
HCERTSTORE WINAPI crypt32.PFXImportCertStore(_In_ CRYPT_DATA_BLOB *pPFX,_In_ LPCWSTR szPassword,_In_ DWORD dwFlags)
BOOL WINAPI crypt32.CryptHashPublicKeyInfo(_In_ HCRYPTPROV_LEGACY hCryptProv,_In_ ALG_ID Algid,_In_ DWORD dwFlags,_In_ DWORD dwCertEncodingType,_In_ PCERT_PUBLIC_KEY_INFO pInfo,_Out_ BYTE *pbComputedHash,_Inout_ DWORD *pcbComputedHash)
BOOL WINAPI crypt32.CertIsStrongHashToSign(_In_ PCCERT_STRONG_SIGN_PARA pStrongSignPara,_In_ LPCWSTR pwszCNGHashAlgid,_In_opt_ PCCERT_CONTEXT pSigningCert)
DWORD None shdocvw.SoftwareUpdateMessageBox(_In_opt_ HWND hWnd,_In_ PCWSTR pszDistUnit,DWORD dwFlags None,_Out_opt_ LPSOFTDISTINFO psdi)
BOOL WINAPI mssign32.GetCryptProvFromCert(_In_ HWND hwnd,_In_ PCCERT_CONTEXT pCert,_Out_ HCRYPTPROV *phCryptProv,_Out_ DWORD *pdwKeySpec,_In_ BOOL *pfDidCryptAcquire,_Out_opt_ LPWSTR *ppwszTmpContainer,_Out_opt_ LPWSTR *ppwszProviderName,_Out_ DWORD *pdwProviderType)
LPVOID WINAPI crypt32.CryptMemAlloc(_In_ ULONG cbSize)
PCCRL_CONTEXT WINAPI crypt32.CertEnumCRLsInStore(_In_ HCERTSTORE hCertStore,_In_ PCCRL_CONTEXT pPrevCrlContext)
HRESULT WINAPI cryptxml.CryptXmlImportPublicKey(DWORD dwFlags None,_In_ CRYPT_XML_KEY_VALUE *pKeyValue,_Out_ BCRYPT_KEY_HANDLE *phKey)
BOOL WINAPI advapi32.CryptDestroyKey(_In_ HCRYPTKEY hKey)
BOOL WINAPI crypt32.CryptSIPGetCaps(_In_ SIP_SUBJECTINFO *pSubjInfo,_Inout_ SIP_CAP_SET *pCaps)
BOOL WINAPI advapi32.GetPrivateObjectSecurity(_In_ PSECURITY_DESCRIPTOR ObjectDescriptor,_In_ SECURITY_INFORMATION SecurityInformation,_Out_opt_ PSECURITY_DESCRIPTOR ResultantDescriptor,_In_ DWORD DescriptorLength,_Out_ PDWORD ReturnLength)
BOOL WINAPI authz.AuthzInitializeRemoteResourceManager(_In_ PAUTHZ_RPC_INIT_INFO_CLIENT pRpcInitInfo,_Out_ PAUTHZ_RESOURCE_MANAGER_HANDLE phAuthzResourceManager)
BOOL WINAPI wintrust.OpenPersonalTrustDBDialog(_In_opt_ HWND hwndParent)
BOOLEAN WINAPI kernel32.ClosePrivateNamespace(_In_ HANDLE Handle,_In_ ULONG Flags)
BOOL WINAPI authz.AuthzInitializeObjectAccessAuditEvent(_In_ DWORD Flags,_In_ AUTHZ_AUDIT_EVENT_TYPE_HANDLE hAuditEventType,_In_ PWSTR szOperationType,_In_ PWSTR szObjectType,_In_ PWSTR szObjectName,_In_ PWSTR szAdditionalInfo,_Out_ PAUTHZ_AUDIT_EVENT_HANDLE phAuditEvent,_In_ DWORD dwAdditionalParamCount)
BOOL WINAPI crypt32.CryptMsgClose(_In_ HCRYPTMSG hCryptMsg)
BOOL None shell32.SHGetNewLinkInfo(_In_ LPCTSTR pszLinkTo,_In_ LPCTSTR pszDir,_Out_ LPTSTR pszName,_Out_ BOOL *pfMustCopy,_In_ UINT uFlags)
BOOL None shell32.SHGetNewLinkInfoW(_In_ LPCTSTR pszLinkTo,_In_ LPCTSTR pszDir,_Out_ LPTSTR pszName,_Out_ BOOL *pfMustCopy,_In_ UINT uFlags)
BOOL None shell32.SHGetNewLinkInfoA(_In_ LPCTSTR pszLinkTo,_In_ LPCTSTR pszDir,_Out_ LPTSTR pszName,_Out_ BOOL *pfMustCopy,_In_ UINT uFlags)
BOOL None wintrust.CryptCATAdminReleaseContext(_In_ HCATADMIN hCatAdmin,_In_ DWORD dwFlags)
BOOL WINAPI advapi32.CryptDuplicateKey(_In_ HCRYPTKEY hKey,_In_ DWORD *pdwReserved,_In_ DWORD dwFlags,_Out_ HCRYPTKEY *phKey)
HRESULT WINAPI cryptxml.CryptXmlVerifySignature(_In_ HCRYPTXML hSignature,_In_opt_ BCRYPT_KEY_HANDLE hKey,DWORD dwFlags None)
PCRYPT_ATTRIBUTE WINAPI crypt32.CertFindAttribute(_In_ LPCSTR pszObjId,_In_ DWORD cAttr,_In_ CRYPT_ATTRIBUTE rgAttr[])
HRESULT WINAPI mssign32.SignerFreeSignerContext(_In_ SIGNER_CONTEXT *pSignerContext)
BOOL WINAPI advapi32.CryptGenRandom(_In_ HCRYPTPROV hProv,_In_ DWORD dwLen,_Inout_ BYTE *pbBuffer)
HRESULT WINAPI cryptxml.CryptXmlDigestReference(_In_ HCRYPTXML hReference,DWORD dwFlags None,_In_ CRYPT_XML_DATA_PROVIDER *pDataProviderIn)
DWORD WINAPI advapi32.SetSecurityDescriptorRMControl(_Inout_ PSECURITY_DESCRIPTOR SecurityDescriptor,_In_opt_ PUCHAR RMControl)
BOOL None url.InetIsOffline(DWORD dwFlags None)
HRESULT None None.PathCchRemoveExtension(_Inout_ PWSTR pszPath,_In_ size_t cchPath)
BOOL WINAPI crypt32.CertAddEnhancedKeyUsageIdentifier(_In_ PCCERT_CONTEXT pCertContext,_In_ LPCSTR pszUsageIdentifier)
BOOL None crypt32.CryptSIPAddProvider(_In_ SIP_ADD_NEWPROVIDER *psNewProv)
HRESULT None shell32.ILLoadFromStreamEx(_In_ IStream *pstm,_Out_ PIDLIST_RELATIVE *pidl)
VOID WINAPI crypt32.CertCloseServerOcspResponse(_In_ HCERT_SERVER_OCSP_RESPONSE hServerOcspResponse,_In_ DWORD dwFlags)
BOOL None shlwapi.PathAppend(_Inout_ LPTSTR pszPath,_In_ LPCTSTR pszMore)
BOOL None shlwapi.PathAppendW(_Inout_ LPTSTR pszPath,_In_ LPCTSTR pszMore)
BOOL None shlwapi.PathAppendA(_Inout_ LPTSTR pszPath,_In_ LPCTSTR pszMore)
NTSTATUS None advapi32.RtlDecryptMemory(_Inout_ PVOID Memory,_In_ ULONG MemoryLength,_In_ ULONG OptionFlags)
VOID WINAPI crypt32.CertFreeCertificateChain(_In_ PCCERT_CHAIN_CONTEXT pChainContext)
BOOL WINAPI None.CertStoreProvDeleteCertCallback(_In_ HCERTSTOREPROV hStoreProv,_In_ PCCERT_CONTEXT pCertContext,_In_ DWORD dwFlags)
PCCRL_CONTEXT WINAPI crypt32.CertGetCRLFromStore(_In_ HCERTSTORE hCertStore,_In_opt_ PCCERT_CONTEXT pIssuerContext,_In_ PCCRL_CONTEXT pPrevCrlContext,_Inout_ DWORD *pdwFlags)
BOOL WINAPI crypt32.CryptVerifyCertificateSignature(_In_ HCRYPTPROV_LEGACY hCryptProv,_In_ DWORD dwCertEncodingType,_In_ BYTE *pbEncoded,_In_ DWORD cbEncoded,_In_ PCERT_PUBLIC_KEY_INFO pPublicKey)
HRESULT None None.PathCchRenameExtension(_Inout_ PWSTR pszPath,_In_ size_t cchPath,_In_ PCWSTR pszExt)
HRESULT WINAPI userenv.CreateAppContainerProfile(_In_ PCWSTR pszAppContainerName,_In_ PCWSTR pszDisplayName,_In_ PCWSTR pszDescription,_In_ PSID_AND_ATTRIBUTES pCapabilities,_In_ DWORD dwCapabilityCount,_Out_ PSID *ppSidAppContainerSid)
HANDLE WINAPI wintrust.CryptCATHandleFromStore(_In_ CRYPTCATSTORE *pCatStore)
BOOL WINAPI advapi32.LookupAccountName(_In_opt_ LPCTSTR lpSystemName,_In_ LPCTSTR lpAccountName,_Out_opt_ PSID Sid,_Inout_ LPDWORD cbSid,_Out_opt_ LPTSTR ReferencedDomainName,_Inout_ LPDWORD cchReferencedDomainName,_Out_ PSID_NAME_USE peUse)
BOOL WINAPI advapi32.LookupAccountNameW(_In_opt_ LPCTSTR lpSystemName,_In_ LPCTSTR lpAccountName,_Out_opt_ PSID Sid,_Inout_ LPDWORD cbSid,_Out_opt_ LPTSTR ReferencedDomainName,_Inout_ LPDWORD cchReferencedDomainName,_Out_ PSID_NAME_USE peUse)
BOOL WINAPI advapi32.LookupAccountNameA(_In_opt_ LPCTSTR lpSystemName,_In_ LPCTSTR lpAccountName,_Out_opt_ PSID Sid,_Inout_ LPDWORD cbSid,_Out_opt_ LPTSTR ReferencedDomainName,_Inout_ LPDWORD cchReferencedDomainName,_Out_ PSID_NAME_USE peUse)
BOOL WINAPI crypt32.CryptUpdateProtectedState(_In_ PSID pOldSid,_In_ LPCWSTR pwszOldPassword,_In_ DWORD dwFlags,_Out_ DWORD *pdwSuccessCount,_Out_ DWORD *pdwFailureCount)
BOOL WINAPI cryptnet.CryptGetTimeValidObject(_In_ LPCSTR pszTimeValidOid,_In_ LPVOID pvPara,_In_ PCCERT_CONTEXT pIssuer,_In_opt_ LPFILETIME pftValidFor,_In_ DWORD dwFlags,_In_ DWORD dwTimeout,_Out_opt_ LPVOID *ppvObject,_In_opt_ PCRYPT_CREDENTIALS pCredentials,_Inout_opt_ PCRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO pExtraInfo)
DWORD WINAPI iphlpapi.AllocateAndGetTcpExTableFromStack(_Out_ PVOID *ppTcpTable,_In_ BOOL bOrder,_In_ HANDLE hHeap,_In_ DWORD dwFlags,_In_ DWORD dwFamily)
TCHAR None shlwapi.SHStripMneumonic(_Inout_ LPTSTR *pszMenu)
TCHAR None shlwapi.SHStripMneumonicW(_Inout_ LPTSTR *pszMenu)
TCHAR None shlwapi.SHStripMneumonicA(_Inout_ LPTSTR *pszMenu)
BOOL None None.PathCchIsRoot(_In_opt_ PCWSTR pszPath)
HRESULT None shlwapi.PathCreateFromUrl(_In_ PCTSTR pszUrl,_Out_ PTSTR pszPath,_Inout_ DWORD *pcchPath,DWORD dwFlags None)
HRESULT None shlwapi.PathCreateFromUrlW(_In_ PCTSTR pszUrl,_Out_ PTSTR pszPath,_Inout_ DWORD *pcchPath,DWORD dwFlags None)
HRESULT None shlwapi.PathCreateFromUrlA(_In_ PCTSTR pszUrl,_Out_ PTSTR pszPath,_Inout_ DWORD *pcchPath,DWORD dwFlags None)
BOOL WINAPI crypt32.CryptRegisterDefaultOIDFunction(_In_ DWORD dwEncodingType,_In_ LPCSTR pszFuncName,_In_ DWORD dwIndex,_In_ LPCWSTR pwszDll)
HRESULT None None.ILLoadFromStreamEx(_In_ IStream *pstm,_Out_ PITEMID_CHILD *ppidl)
BOOL None shell32.WriteCabinetState(_In_ CABINETSTATE *pcs)
BOOL WINAPI None.CertStoreProvReadCRLCallback(_In_ HCERTSTOREPROV hStoreProv,_In_ PCCRL_CONTEXT pStoreCrlContext,_In_ DWORD dwFlags,_Out_ PCCRL_CONTEXT *ppProvCrlContext)
BOOL WINAPI authz.AuthzAccessCheck(_In_ DWORD flags,_In_ AUTHZ_CLIENT_CONTEXT_HANDLE hAuthzClientContext,_In_ PAUTHZ_ACCESS_REQUEST pRequest,_In_opt_ AUTHZ_AUDIT_EVENT_HANDLE AuditEvent,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_opt_ PSECURITY_DESCRIPTOR *OptionalSecurityDescriptorArray,_In_opt_ DWORD OptionalSecurityDescriptorCount,_Inout_ PAUTHZ_ACCESS_REPLY pReply,_Out_opt_ PAUTHZ_ACCESS_CHECK_RESULTS_HANDLE phAccessCheckResults)
BOOL WINAPI wintrust.CryptCATCDFClose(_In_ CRYPTCATCDF *pCDF)
HCERT_SERVER_OCSP_RESPONSE WINAPI crypt32.CertOpenServerOcspResponse(_In_ PCCERT_CHAIN_CONTEXT pChainContext,_In_ DWORD dwFlags,_Reserved_ LPVOID pvReserved)
BOOL WINAPI crypt32.CryptUnregisterOIDInfo(_In_ PCCRYPT_OID_INFO pInfo)
BOOL WINAPI advapi32.CryptCreateHash(_In_ HCRYPTPROV hProv,_In_ ALG_ID Algid,_In_ HCRYPTKEY hKey,_In_ DWORD dwFlags,_Out_ HCRYPTHASH *phHash)
BOOL WINAPI advapi32.AdjustTokenGroups(_In_ HANDLE TokenHandle,_In_ BOOL ResetToDefault,_In_opt_ PTOKEN_GROUPS NewState,_In_ DWORD BufferLength,_Out_opt_ PTOKEN_GROUPS PreviousState,_Out_opt_ PDWORD ReturnLength)
BOOL WINAPI crypt32.CryptGetOIDFunctionValue(_In_ DWORD dwEncodingType,_In_ LPCSTR pszFuncName,_In_ LPCSTR pszOID,_In_ LPCWSTR pwszValueName,_Out_ DWORD *pdwValueType,_Out_ BYTE *pbValueData,_Inout_ DWORD *pcbValueData)
BOOL WINAPI cryptui.CryptUIDlgCertMgr(_In_ PCCRYPTUI_CERT_MGR_STRUCT pCryptUICertMgr)
BOOL WINAPI crypt32.CertCreateCertificateChainEngine(_In_ PCERT_CHAIN_ENGINE_CONFIG pConfig,_Out_ HCERTCHAINENGINE *phChainEngine)
UINT None shlwapi.PathGetCharType(_In_ TUCHAR ch)
UINT None shlwapi.PathGetCharTypeW(_In_ TUCHAR ch)
UINT None shlwapi.PathGetCharTypeA(_In_ TUCHAR ch)
BOOL WINAPI advapi32.CryptAcquireContext(_Out_ HCRYPTPROV *phProv,_In_ LPCTSTR pszContainer,_In_ LPCTSTR pszProvider,_In_ DWORD dwProvType,_In_ DWORD dwFlags)
BOOL WINAPI advapi32.CryptAcquireContextW(_Out_ HCRYPTPROV *phProv,_In_ LPCTSTR pszContainer,_In_ LPCTSTR pszProvider,_In_ DWORD dwProvType,_In_ DWORD dwFlags)
BOOL WINAPI advapi32.CryptAcquireContextA(_Out_ HCRYPTPROV *phProv,_In_ LPCTSTR pszContainer,_In_ LPCTSTR pszProvider,_In_ DWORD dwProvType,_In_ DWORD dwFlags)
DWORD WINAPI crypt32.CertOIDToAlgId(_In_ LPCSTR pszObjId)
HRESULT WINAPI cryptxml.CryptXmlClose(_In_ HXML hCryptXml)
LPCSTR WINAPI crypt32.CertAlgIdToOID(_In_ DWORD dwAlgId)
BOOL WINAPI advapi32.CryptEnumProviderTypes(_In_ DWORD dwIndex,_In_ DWORD *pdwReserved,_In_ DWORD dwFlags,_Out_ DWORD *pdwProvType,_Out_ LPTSTR pszTypeName,_Inout_ DWORD *pcbTypeName)
BOOL WINAPI advapi32.CryptEnumProviderTypesW(_In_ DWORD dwIndex,_In_ DWORD *pdwReserved,_In_ DWORD dwFlags,_Out_ DWORD *pdwProvType,_Out_ LPTSTR pszTypeName,_Inout_ DWORD *pcbTypeName)
BOOL WINAPI advapi32.CryptEnumProviderTypesA(_In_ DWORD dwIndex,_In_ DWORD *pdwReserved,_In_ DWORD dwFlags,_Out_ DWORD *pdwProvType,_Out_ LPTSTR pszTypeName,_Inout_ DWORD *pcbTypeName)
BOOL WINAPI wintrust.CryptCATAdminResolveCatalogPath(_In_ HCATADMIN hCatAdmin,_In_ WCHAR *pwszCatalogFile,_Inout_ CATALOG_INFO *psCatInfo,_In_ DWORD dwFlags)
BOOL WINAPI crypt32.CertAddCRLLinkToStore(_In_ HCERTSTORE hCertStore,_In_ PCCRL_CONTEXT pCrlContext,_In_ DWORD dwAddDisposition,_Out_opt_ PCCRL_CONTEXT *ppStoreContext)
BOOL None shell32.SHObjectProperties(_In_ HWND hwnd,_In_ DWORD shopObjectType,_In_ PCWSTR pszObjectName,_In_ PCWSTR pszPropertyPage)
BOOL WINAPI authz.AuthzCachedAccessCheck(_In_ DWORD Flags,_In_ AUTHZ_ACCESS_CHECK_RESULTS_HANDLE AuthzHandle,_In_ PAUTHZ_ACCESS_REQUEST pRequest,_In_ AUTHZ_AUDIT_EVENT_HANDLE AuditInfo,_Out_ PAUTHZ_ACCESS_REPLY pReply)
BOOL WINAPI advapi32.DestroyPrivateObjectSecurity(_Inout_ PSECURITY_DESCRIPTOR *ObjectDescriptor)
HRESULT None shell32.SHGetDriveMedia(_In_ PCWSTR pszDrive,_Out_ DWORD *pdwMediaContent)
BOOL WINAPI wintrust.OpenPersonalTrustDBDialogEx(_In_opt_ HWND hwndParent,_In_ DWORD dwFlags,_Inout_opt_ PVOID *pvReserved)
SECURITY_STATUS SEC_Entry secur32.QueryContextAttributes(_In_ PCtxtHandle phContext,_In_ ULONG ulAttribute,_Out_ PVOID pBuffer)
SECURITY_STATUS SEC_Entry secur32.QueryContextAttributesW(_In_ PCtxtHandle phContext,_In_ ULONG ulAttribute,_Out_ PVOID pBuffer)
SECURITY_STATUS SEC_Entry secur32.QueryContextAttributesA(_In_ PCtxtHandle phContext,_In_ ULONG ulAttribute,_Out_ PVOID pBuffer)
BOOL None wintrust.CryptCATCatalogInfoFromContext(_In_ HCATINFO hCatInfo,_Inout_ CATALOG_INFO *psCatInfo,_In_ DWORD dwFlags)
HRESULT None shell32.SHILCreateFromPath(_In_ PCWSTR pszPath,_Out_ PIDLIST_ABSOLUTE *ppidl,_Inout_opt_ DWORD *rgflnOut)
NETIOAPI_API None iphlpapi.NotifyTeredoPortChange(_In_ PTEREDO_PORT_CHANGE_CALLBACK Callback,_In_ PVOID CallerContext,_In_ BOOLEAN InitialNotification,_Inout_ HANDLE *NotificationHandle)
USHORT WINAPI kernel32.QueryDepthSList(_In_ PSLIST_HEADER ListHead)
PCCERT_SERVER_OCSP_RESPONSE_CONTEXT WINAPI crypt32.CertGetServerOcspResponseContext(_In_ HCERT_SERVER_OCSP_RESPONSE hServerOcspResponse,_In_ DWORD dwFlags,_Reserved_ LPVOID pvReserved)
DWORD None iphlpapi.IpRenewAddress(_In_ PIP_ADAPTER_INDEX_MAP AdapterInfo)
HRESULT WINAPI userenv.DeriveRestrictedAppContainerSidFromAppContainerSidAndRestrictedName(_In_ PSID psidAppContainerSid,_In_ PCWSTR pszRestrictedAppContainerName,_Out_ PSID *ppsidRestrictedAppContainerSid)
HRESULT None None.GetFolderDefinition([out] KNOWNFOLDER_DEFINITION *pKFD)
BOOL WINAPI crypt32.CertGetIntendedKeyUsage(_In_ DWORD dwCertEncodingType,_In_ PCERT_INFO pCertInfo,_Out_ BYTE *pbKeyUsage,_In_ DWORD cbKeyUsage)
BOOL WINAPI advapi32.CryptDestroyHash(_In_ HCRYPTHASH hHash)
BOOL None shlwapi.PathIsUNC(_In_ LPCTSTR pszPath)
BOOL None shlwapi.PathIsUNCW(_In_ LPCTSTR pszPath)
BOOL None shlwapi.PathIsUNCA(_In_ LPCTSTR pszPath)
DWORD WINAPI advapi32.GetAuditedPermissionsFromAcl(_In_ PACL pacl,_In_ PTRUSTEE pTrustee,_Out_ PACCESS_MASK pSuccessfulAuditedRights,_Out_ PACCESS_MASK pFailedAuditRights)
DWORD WINAPI advapi32.GetAuditedPermissionsFromAclW(_In_ PACL pacl,_In_ PTRUSTEE pTrustee,_Out_ PACCESS_MASK pSuccessfulAuditedRights,_Out_ PACCESS_MASK pFailedAuditRights)
DWORD WINAPI advapi32.GetAuditedPermissionsFromAclA(_In_ PACL pacl,_In_ PTRUSTEE pTrustee,_Out_ PACCESS_MASK pSuccessfulAuditedRights,_Out_ PACCESS_MASK pFailedAuditRights)
BOOL WINAPI crypt32.CertRemoveEnhancedKeyUsageIdentifier(_In_ PCCERT_CONTEXT pCertContext,_In_ LPCSTR pszUsageIdentifier)
BOOL WINAPI None.CryptGetLocalKeyLimits(_In_ ALG_ID algId,_In_ DWORD dwFlags,_Out_ PCRYPT_KEY_LIMITS pLimits,_Inout_ LPDWORD cbLimitLength)
LONG WINAPI wintrust.WTHelperGetFileHash(_In_ LPCWSTR pwszFilename,_In_ DWORD dwFlags,_Inout_opt_ PVOID pvReserved,_Out_opt_ BYTE *pbFileHash,_Inout_opt_ DWORD *pcbFileHash,_Out_opt_ ALG_ID *pHashAlgid)
BOOL WINAPI authz.AuthzModifySids(_In_ AUTHZ_CLIENT_CONTEXT_HANDLE hAuthzClientContext,_In_ AUTHZ_CONTEXT_INFORMATION_CLASS SidClass,_In_ PAUTHZ_SID_OPERATION pSidOperations,_In_opt_ PTOKEN_GROUPS pSids)
uint32 None smiscsitargetprov.OnlineDevice([in] boolean Online)
HRESULT None shlwapi.UrlUnescapeInPlace(_Inout_ LPTSTR pszURL,_In_ DWORD dwFlags)
BOOL WINAPI None.CertStoreProvReadCTL(_In_ HCERTSTOREPROV hStoreProv,_In_ PCCTL_CONTEXT pStoreCtlContext,_In_ DWORD dwFlags,_Out_ PCCTL_CONTEXT *ppProvCtlContext)
BOOL WINAPI crypt32.CertAddCTLContextToStore(_In_ HCERTSTORE hCertStore,_In_ PCCTL_CONTEXT pCtlContext,_In_ DWORD dwAddDisposition,_Out_opt_ PCCTL_CONTEXT *ppStoreContext)
HCRYPTMSG WINAPI crypt32.CryptMsgOpenToDecode(_In_ DWORD dwMsgEncodingType,_In_ DWORD dwFlags,_In_ DWORD dwMsgType,_In_ HCRYPTPROV_LEGACY hCryptProv,_In_ PCERT_INFO pRecipientInfo,_In_opt_ PCMSG_STREAM_INFO pStreamInfo)
PCCERT_CONTEXT WINAPI crypt32.CertCreateSelfSignCertificate(_In_opt_ HCRYPTPROV_OR_NCRYPT_KEY_HANDLE hCryptProvOrNCryptKey,_In_ PCERT_NAME_BLOB pSubjectIssuerBlob,_In_ DWORD dwFlags,_In_opt_ PCRYPT_KEY_PROV_INFO pKeyProvInfo,_In_opt_ PCRYPT_ALGORITHM_IDENTIFIER pSignatureAlgorithm,_In_opt_ PSYSTEMTIME pStartTime,_In_opt_ PSYSTEMTIME pEndTime,PCERT_EXTENSIONS pExtensions None)
LPWSTR WINAPI wintrust.CryptCATCDFEnumMembersByCDFTagEx(_In_ CRYPTCATCDF *pCDF,_Inout_ LPWSTR pwszPrevCDFTag,_In_ PFN_CDF_PARSE_ERROR_CALLBACK pfnParseError,_In_ CRYPTCATMEMBER **ppMember,_In_ BOOL fContinueOnError,_In_ LPVOID pvReserved)
BOOL WINAPI cryptui.CryptUIWizImport(_In_ DWORD dwFlags,_In_ HWND hwndParent,_In_ LPCWSTR pwszWizardTitle,_In_ PCCRYPTUI_WIZ_IMPORT_SRC_INFO pImportSrc,_In_ HCERTSTORE hDestCertStore)
BOOL WINAPI wintrust.WTHelperCertIsSelfSigned(_In_ DWORD dwEncoding,_In_ CERT_INFO *pCert)
BOOL None wintrust.CryptCATAdminReleaseCatalogContext(_In_ HCATADMIN hCatAdmin,_In_ HCATINFO hCatInfo,_In_ DWORD dwFlags)
BOOL WINAPI crypt32.CertFreeCTLContext(_In_ PCCTL_CONTEXT pCtlContext)
BOOL None shlwapi.PathIsUNCServer(_In_ LPCTSTR pszPath)
BOOL None shlwapi.PathIsUNCServerW(_In_ LPCTSTR pszPath)
BOOL None shlwapi.PathIsUNCServerA(_In_ LPCTSTR pszPath)
BOOL None shlwapi.MLFreeLibrary(_In_ HMODULE hModule)
HRESULT None certadm.CertSrvRestoreRegisterComplete(_In_ HCSBC hbc,_In_ HRESULT hrRestoreState)
HRESULT None certadm.CertSrvRestoreEnd(_In_ HCSBC hbc)
HRESULT None certadm.CertSrvBackupEnd(_In_ HCSBC hbc)
BOOL None None.ILIsAligned(_In_ PCUIDLIST_RELATIVE pidl)
DWORD WINAPI crypt32.CertNameToStr(_In_ DWORD dwCertEncodingType,_In_ PCERT_NAME_BLOB pName,_In_ DWORD dwStrType,_Out_ LPTSTR psz,_In_ DWORD csz)
DWORD WINAPI crypt32.CertNameToStrW(_In_ DWORD dwCertEncodingType,_In_ PCERT_NAME_BLOB pName,_In_ DWORD dwStrType,_Out_ LPTSTR psz,_In_ DWORD csz)
DWORD WINAPI crypt32.CertNameToStrA(_In_ DWORD dwCertEncodingType,_In_ PCERT_NAME_BLOB pName,_In_ DWORD dwStrType,_Out_ LPTSTR psz,_In_ DWORD csz)
HRESULT None url.TranslateURL(PCTSTR pcszURL None,DWORD dwInFlags None,_Out_ PTSTR *ppszTranslatedURL)
HRESULT None url.TranslateURLW(PCTSTR pcszURL None,DWORD dwInFlags None,_Out_ PTSTR *ppszTranslatedURL)
HRESULT None url.TranslateURLA(PCTSTR pcszURL None,DWORD dwInFlags None,_Out_ PTSTR *ppszTranslatedURL)
BOOL WINAPI advapi32.CryptExportKey(_In_ HCRYPTKEY hKey,_In_ HCRYPTKEY hExpKey,_In_ DWORD dwBlobType,_In_ DWORD dwFlags,_Out_ BYTE *pbData,_Inout_ DWORD *pdwDataLen)
HRESULT None certadm.CertSrvBackupRead(_In_ HCSBC hbc,_Out_ VOID *pvBuffer,_In_ DWORD cbBuffer,_Out_ DWORD *pcbRead)
NETIOAPI_API None iphlpapi.FlushIpPathTable(_In_ ADDRESS_FAMILY Family)
BOOL WINAPI crypt32.CryptMsgGetAndVerifySigner(_In_ HCRYPTMSG hCryptMsg,_In_ DWORD cSignerStore,_In_opt_ HCERTSTORE *rghSignerStore,_In_ DWORD dwFlags,_Out_opt_ PCCERT_CONTEXT *ppSigner,_Inout_opt_ DWORD *pdwSignerIndex)
PCCRL_CONTEXT WINAPI crypt32.CertDuplicateCRLContext(_In_ PCCRL_CONTEXT pCrlContext)
BOOL WINAPI cryptui.CryptUIWizFreeDigitalSignContext(_In_ PCCRYPTUI_WIZ_DIGITAL_SIGN_CONTEXT pSignContext)
BOOL WINAPI cryptui.CryptUIWizDigitalSign(_In_ DWORD dwFlags,_In_opt_ HWND hwndParent,_In_opt_ LPCWSTR pwszWizardTitle,_In_ PCCRYPTUI_WIZ_DIGITAL_SIGN_INFO pDigitalSignInfo,_Out_opt_ PCCRYPTUI_WIZ_DIGITAL_SIGN_CONTEXT *ppSignContext)
BOOL WINAPI crypt32.CryptGetDefaultOIDDllList(_In_ HCRYPTOIDFUNCSET hFuncSet,_In_ DWORD dwEncodingType,_Out_ LPWSTR pwszDllList,_Inout_ DWORD *pcchDllList)
HCERTSTORE WINAPI crypt32.CertDuplicateStore(_In_ HCERTSTORE hCertStore)
BOOL WINAPI advapi32.CryptEnumProviders(_In_ DWORD dwIndex,_In_ DWORD *pdwReserved,_In_ DWORD dwFlags,_Out_ DWORD *pdwProvType,_Out_ LPTSTR pszProvName,_Inout_ DWORD *pcbProvName)
BOOL WINAPI advapi32.CryptEnumProvidersW(_In_ DWORD dwIndex,_In_ DWORD *pdwReserved,_In_ DWORD dwFlags,_Out_ DWORD *pdwProvType,_Out_ LPTSTR pszProvName,_Inout_ DWORD *pcbProvName)
BOOL WINAPI advapi32.CryptEnumProvidersA(_In_ DWORD dwIndex,_In_ DWORD *pdwReserved,_In_ DWORD dwFlags,_Out_ DWORD *pdwProvType,_Out_ LPTSTR pszProvName,_Inout_ DWORD *pcbProvName)
BOOL WINAPI advapi32.CryptGetProvParam(_In_ HCRYPTPROV hProv,_In_ DWORD dwParam,_Out_ BYTE *pbData,_Inout_ DWORD *pdwDataLen,_In_ DWORD dwFlags)
BOOL WINAPI crypt32.CryptSIPPutSignedDataMsg(_In_ SIP_SUBJECTINFO *pSubjectInfo,_In_ DWORD dwEncodingType,_Out_ DWORD *pdwIndex,_In_ DWORD cbSignedDataMsg,_In_ BYTE *pbSignedDataMsg)
BOOL None shlwapi.PathIsDirectoryEmpty(_In_ LPCTSTR pszPath)
BOOL None shlwapi.PathIsDirectoryEmptyW(_In_ LPCTSTR pszPath)
BOOL None shlwapi.PathIsDirectoryEmptyA(_In_ LPCTSTR pszPath)
HRESULT None certadm.CertSrvBackupGetBackupLogs(_In_ HCSBC hbc,_Out_ WCHAR **ppwszzBackupLogFiles,_Out_ DWORD *pcbSize)
HRESULT None certadm.CertSrvBackupGetBackupLogsW(_In_ HCSBC hbc,_Out_ WCHAR **ppwszzBackupLogFiles,_Out_ DWORD *pcbSize)
LONG WINAPI advapi32.RegCreateKeyEx(_In_ HKEY hKey,_In_ LPCTSTR lpSubKey,_Reserved_ DWORD Reserved,_In_opt_ LPTSTR lpClass,_In_ DWORD dwOptions,_In_ REGSAM samDesired,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_Out_ PHKEY phkResult,_Out_opt_ LPDWORD lpdwDisposition)
LONG WINAPI advapi32.RegCreateKeyExW(_In_ HKEY hKey,_In_ LPCTSTR lpSubKey,_Reserved_ DWORD Reserved,_In_opt_ LPTSTR lpClass,_In_ DWORD dwOptions,_In_ REGSAM samDesired,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_Out_ PHKEY phkResult,_Out_opt_ LPDWORD lpdwDisposition)
LONG WINAPI advapi32.RegCreateKeyExA(_In_ HKEY hKey,_In_ LPCTSTR lpSubKey,_Reserved_ DWORD Reserved,_In_opt_ LPTSTR lpClass,_In_ DWORD dwOptions,_In_ REGSAM samDesired,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_Out_ PHKEY phkResult,_Out_opt_ LPDWORD lpdwDisposition)
BOOL WINAPI crypt32.CryptProtectData(_In_ DATA_BLOB *pDataIn,_In_opt_ LPCWSTR szDataDescr,_In_opt_ DATA_BLOB *pOptionalEntropy,_Reserved_ PVOID pvReserved,_In_opt_ CRYPTPROTECT_PROMPTSTRUCT *pPromptStruct,_In_ DWORD dwFlags,_Out_ DATA_BLOB *pDataOut)
HRESULT None None.GetRedirectionCapabilities([out] KF_REDIRECTION_CAPABILITIES *pCapabilities)
PCCERT_CONTEXT WINAPI crypt32.CertEnumCertificatesInStore(_In_ HCERTSTORE hCertStore,_In_ PCCERT_CONTEXT pPrevCertContext)
BOOL None shell32.SHRegGetBoolValueFromHKCUHKLM(PCWSTR pszKey None,_In_ PCWSTR pszValue,_In_ BOOL fDefault)
UINT WINAPI shcore.GetDpiForShellUiComponent(_In_ SHELL_UI_COMPONENT component)
DWORD None shlwapi.CharUpperBuffWrapW(_In_ LPWSTR pch,_In_ DWORD cchLength)
HICON None shell32.ExtractAssociatedIconEx(_Reserved_ HINSTANCE hInst,_Inout_ LPTSTR lpIconPath,_Inout_ LPWORD lpiIconIndex,_Inout_ LPWORD lpiIconId)
HICON None shell32.ExtractAssociatedIconExW(_Reserved_ HINSTANCE hInst,_Inout_ LPTSTR lpIconPath,_Inout_ LPWORD lpiIconIndex,_Inout_ LPWORD lpiIconId)
HICON None shell32.ExtractAssociatedIconExA(_Reserved_ HINSTANCE hInst,_Inout_ LPTSTR lpIconPath,_Inout_ LPWORD lpiIconIndex,_Inout_ LPWORD lpiIconId)
BOOL WINAPI advapi32.ConvertSecurityDescriptorToStringSecurityDescriptor(_In_ PSECURITY_DESCRIPTOR SecurityDescriptor,_In_ DWORD RequestedStringSDRevision,_In_ SECURITY_INFORMATION SecurityInformation,_Out_ LPTSTR *StringSecurityDescriptor,_Out_ PULONG StringSecurityDescriptorLen)
BOOL WINAPI advapi32.ConvertSecurityDescriptorToStringSecurityDescriptorW(_In_ PSECURITY_DESCRIPTOR SecurityDescriptor,_In_ DWORD RequestedStringSDRevision,_In_ SECURITY_INFORMATION SecurityInformation,_Out_ LPTSTR *StringSecurityDescriptor,_Out_ PULONG StringSecurityDescriptorLen)
BOOL WINAPI advapi32.ConvertSecurityDescriptorToStringSecurityDescriptorA(_In_ PSECURITY_DESCRIPTOR SecurityDescriptor,_In_ DWORD RequestedStringSDRevision,_In_ SECURITY_INFORMATION SecurityInformation,_Out_ LPTSTR *StringSecurityDescriptor,_Out_ PULONG StringSecurityDescriptorLen)
BOOL WINAPI authz.AuthzInitializeResourceManager(_In_ DWORD flags,_In_opt_ PFN_AUTHZ_DYNAMIC_ACCESS_CHECK pfnAccessCheck,_In_opt_ PFN_AUTHZ_COMPUTE_DYNAMIC_GROUPS pfnComputeDynamicGroups,_In_opt_ PFN_AUTHZ_FREE_DYNAMIC_GROUPS pfnFreeDynamicGroups,_In_ PCWSTR szResourceManagerName,_Out_ PAUTHZ_RESOURCE_MANAGER_HANDLE phAuthzResourceManager)
HRESULT WINAPI mssign32.PvkGetCryptProv(_In_ HWND hwnd,_In_ LPCWSTR pwszCaption,_In_ LPCWSTR pwszCapiProvider,_In_ DWORD dwProviderType,_In_ LPCWSTR pwszPvkFile,_In_ LPCWSTR pwszKeyContainerName,_Out_ DWORD *pdwKeySpec,_Out_opt_ LPWSTR *ppwszTmpContainer,_Out_ HCRYPTPROV *phCryptProv)
HRESULT None None.PathCchAddExtension(_Inout_ PWSTR pszPath,_In_ size_t cchPath,_In_ PCWSTR pszExt)
BOOL None shlwapi.PathUnExpandEnvStrings(_In_ LPCTSTR pszPath,_Out_ LPTSTR pszBuf,_In_ UINT cchBuf)
BOOL None shlwapi.PathUnExpandEnvStringsW(_In_ LPCTSTR pszPath,_Out_ LPTSTR pszBuf,_In_ UINT cchBuf)
BOOL None shlwapi.PathUnExpandEnvStringsA(_In_ LPCTSTR pszPath,_Out_ LPTSTR pszBuf,_In_ UINT cchBuf)
BOOL None shlwapi.UrlIsOpaque(_In_ PCTSTR pszURL)
BOOL None shlwapi.UrlIsOpaqueW(_In_ PCTSTR pszURL)
BOOL None shlwapi.UrlIsOpaqueA(_In_ PCTSTR pszURL)
BOOL WINAPI advapi32.ImpersonateAnonymousToken(_In_ HANDLE ThreadHandle)
HRESULT None shlwapi.UrlHash(_In_ PCTSTR pszURL,_Out_ BYTE *pbHash,DWORD cbHash None)
HRESULT None shlwapi.UrlHashW(_In_ PCTSTR pszURL,_Out_ BYTE *pbHash,DWORD cbHash None)
HRESULT None shlwapi.UrlHashA(_In_ PCTSTR pszURL,_Out_ BYTE *pbHash,DWORD cbHash None)
BOOL WINAPI kernel32.InitializeCriticalSectionAndSpinCount(_Out_ LPCRITICAL_SECTION lpCriticalSection,_In_ DWORD dwSpinCount)
LONG None None.ScreenSaverProc(HWND hWnd None,UINT message None,WPARAM wParam None,LPARAM lParam None)
HRESULT None None.MyMethod([out None None,retval] InMyFace** ReturnVal)
HRESULT WINAPI mssign32.SignerSignEx(_In_ DWORD dwFlags,_In_ SIGNER_SUBJECT_INFO *pSubjectInfo,_In_ SIGNER_CERT *pSignerCert,_In_ SIGNER_SIGNATURE_INFO *pSignatureInfo,_In_opt_ SIGNER_PROVIDER_INFO *pProviderInfo,_In_opt_ LPCWSTR pwszHttpTimeStamp,_In_opt_ PCRYPT_ATTRIBUTES psRequest,_In_opt_ LPVOID pSipData,_Out_ SIGNER_CONTEXT **ppSignerContext)
LPTSTR None shlwapi.PathAddBackslash(_Inout_ LPTSTR lpszPath)
LPTSTR None shlwapi.PathAddBackslashW(_Inout_ LPTSTR lpszPath)
LPTSTR None shlwapi.PathAddBackslashA(_Inout_ LPTSTR lpszPath)
BOOL WINAPI advapi32.CryptGetHashParam(_In_ HCRYPTHASH hHash,_In_ DWORD dwParam,_Out_ BYTE *pbData,_Inout_ DWORD *pdwDataLen,_In_ DWORD dwFlags)
HRESULT None shlwapi.UrlCanonicalize(_In_ PCTSTR pszUrl,_Out_ PTSTR pszCanonicalized,_Inout_ DWORD *pcchCanonicalized,DWORD dwFlags None)
HRESULT None shlwapi.UrlCanonicalizeW(_In_ PCTSTR pszUrl,_Out_ PTSTR pszCanonicalized,_Inout_ DWORD *pcchCanonicalized,DWORD dwFlags None)
HRESULT None shlwapi.UrlCanonicalizeA(_In_ PCTSTR pszUrl,_Out_ PTSTR pszCanonicalized,_Inout_ DWORD *pcchCanonicalized,DWORD dwFlags None)
BOOL WINAPI crypt32.CertCompareCertificateName(_In_ DWORD dwCertEncodingType,_In_ PCERT_NAME_BLOB pCertName1,_In_ PCERT_NAME_BLOB pCertName2)
BOOL WINAPI None.CertStoreProvWriteCertCallback(_In_ HCERTSTOREPROV hStoreProv,_In_ PCCERT_CONTEXT pCertContext,_In_ DWORD dwFlags)
BOOL WINAPI cryptnet.CryptRetrieveObjectByUrl(_In_ LPCTSTR pszUrl,_In_ LPCSTR pszObjectOid,_In_ DWORD dwRetrievalFlags,_In_ DWORD dwTimeout,_Out_ LPVOID *ppvObject,_In_ HCRYPTASYNC hAsyncRetrieve,_In_opt_ PCRYPT_CREDENTIALS pCredentials,_In_opt_ LPVOID pvVerify,_In_ PCRYPT_RETRIEVE_AUX_INFO pAuxInfo)
BOOL WINAPI cryptnet.CryptRetrieveObjectByUrlW(_In_ LPCTSTR pszUrl,_In_ LPCSTR pszObjectOid,_In_ DWORD dwRetrievalFlags,_In_ DWORD dwTimeout,_Out_ LPVOID *ppvObject,_In_ HCRYPTASYNC hAsyncRetrieve,_In_opt_ PCRYPT_CREDENTIALS pCredentials,_In_opt_ LPVOID pvVerify,_In_ PCRYPT_RETRIEVE_AUX_INFO pAuxInfo)
BOOL WINAPI cryptnet.CryptRetrieveObjectByUrlA(_In_ LPCTSTR pszUrl,_In_ LPCSTR pszObjectOid,_In_ DWORD dwRetrievalFlags,_In_ DWORD dwTimeout,_Out_ LPVOID *ppvObject,_In_ HCRYPTASYNC hAsyncRetrieve,_In_opt_ PCRYPT_CREDENTIALS pCredentials,_In_opt_ LPVOID pvVerify,_In_ PCRYPT_RETRIEVE_AUX_INFO pAuxInfo)
BOOL WINAPI crypt32.CryptUnregisterOIDFunction(_In_ DWORD dwEncodingType,_In_ LPCSTR pszFuncName,_In_ LPCSTR pszOID)
BOOL None shlwapi.PathCompactPath(_In_ HDC hDC,_Inout_ LPTSTR lpszPath,_In_ UINT dx)
BOOL None shlwapi.PathCompactPathW(_In_ HDC hDC,_Inout_ LPTSTR lpszPath,_In_ UINT dx)
BOOL None shlwapi.PathCompactPathA(_In_ HDC hDC,_Inout_ LPTSTR lpszPath,_In_ UINT dx)
BOOL None shlwapi.PathIsContentType(_In_ LPCTSTR pszPath,_In_ LPCTSTR pszContentType)
BOOL None shlwapi.PathIsContentTypeW(_In_ LPCTSTR pszPath,_In_ LPCTSTR pszContentType)
BOOL None shlwapi.PathIsContentTypeA(_In_ LPCTSTR pszPath,_In_ LPCTSTR pszContentType)
DWORD None iphlpapi.DisableMediaSense(HANDLE *pHandle None,OVERLAPPED *pOverlapped None)
HRESULT None certadm.CertSrvBackupClose(_In_ HCSBC hbc)
HRESULT WINAPI userenv.CreateProfile(_In_ LPCWSTR pszUserSid,_In_ LPCWSTR pszUserName,_Out_ LPWSTR pszProfilePath,_In_ DWORD cchProfilePath)
LONG WINAPI advapi32.RegOpenKey(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_Out_ PHKEY phkResult)
LONG WINAPI advapi32.RegOpenKeyW(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_Out_ PHKEY phkResult)
LONG WINAPI advapi32.RegOpenKeyA(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_Out_ PHKEY phkResult)
BOOL WINAPI advapi32.CryptGenKey(_In_ HCRYPTPROV hProv,_In_ ALG_ID Algid,_In_ DWORD dwFlags,_Out_ HCRYPTKEY *phKey)
HRESULT None shell32.SHEvaluateSystemCommandTemplate(_In_ PCWSTR pszCmdTemplate,_Out_ PWSTR *ppszApplication,_Out_opt_ PWSTR *ppszCommandLine,_Out_opt_ PWSTR *ppszParameters)
BOOL WINAPI authz.AuthzUnregisterCapChangeNotification(_In_ AUTHZ_CAP_CHANGE_SUBSCRIPTION_HANDLE hCapChangeSubscription)
BOOL WINAPI mssign32.PvkPrivateKeySave(_In_ HCRYPTPROV hCryptProv,_In_ HANDLE hFile,_In_ DWORD dwKeySpec,_In_ HWND hwndOwner,_In_ LPCWSTR pwszKeyName,_In_ DWORD dwFlags)
BOOL WINAPI cryptui.CryptUIDlgViewCertificate(_In_ PCCRYPTUI_VIEWCERTIFICATE_STRUCTW pCertViewInfo,_Out_ BOOL *pfPropertiesChanged)
BOOL WINAPI cryptui.CryptUIDlgViewCertificateW(_In_ PCCRYPTUI_VIEWCERTIFICATE_STRUCTW pCertViewInfo,_Out_ BOOL *pfPropertiesChanged)
BOOL WINAPI cryptui.CryptUIDlgViewCertificateA(_In_ PCCRYPTUI_VIEWCERTIFICATE_STRUCTW pCertViewInfo,_Out_ BOOL *pfPropertiesChanged)
HCATINFO None wintrust.CryptCATAdminEnumCatalogFromHash(_In_ HCATADMIN hCatAdmin,_In_ BYTE *pbHash,_In_ DWORD cbHash,_In_ DWORD dwFlags,_In_ HCATINFO *phPrevCatInfo)
HRESULT WINAPI mssign32.SignerTimeStampEx2(_Reserved_ DWORD dwFlags,_In_ SIGNER_SUBJECT_INFO *pSubjectInfo,_In_ LPCWSTR pwszHttpTimeStamp,_In_ ALG_ID dwAlgId,_In_ PCRYPT_ATTRIBUTES psRequest,_In_ LPVOID pSipData,_Out_ SIGNER_CONTEXT **ppSignerContext)
BOOL WINAPI crypt32.CryptMsgEncodeAndSignCTL(_In_ DWORD dwMsgEncodingType,_In_ PCTL_INFO pCtlInfo,_In_ PCMSG_SIGNED_ENCODE_INFO pSignInfo,_In_ DWORD dwFlags,_Out_ BYTE *pbEncoded,_Inout_ DWORD *pcbEncoded)
BOOL WINAPI wintrust.WintrustSetRegPolicyFlags(_In_ DWORD dwPolicyFlags)
PTSTR None shlwapi.PathSkipRoot(_In_ PTSTR pszPath)
PTSTR None shlwapi.PathSkipRootW(_In_ PTSTR pszPath)
PTSTR None shlwapi.PathSkipRootA(_In_ PTSTR pszPath)
BOOL WINAPI advapi32.CryptGetDefaultProvider(_In_ DWORD dwProvType,_In_ DWORD *pdwReserved,_In_ DWORD dwFlags,_Out_ LPTSTR pszProvName,_Inout_ DWORD *pcbProvName)
BOOL WINAPI advapi32.CryptGetDefaultProviderW(_In_ DWORD dwProvType,_In_ DWORD *pdwReserved,_In_ DWORD dwFlags,_Out_ LPTSTR pszProvName,_Inout_ DWORD *pcbProvName)
BOOL WINAPI advapi32.CryptGetDefaultProviderA(_In_ DWORD dwProvType,_In_ DWORD *pdwReserved,_In_ DWORD dwFlags,_Out_ LPTSTR pszProvName,_Inout_ DWORD *pcbProvName)
HRESULT None shell32.SetNoIcons(BOOL fNoIcons None)
PVOID None None.SecureZeroMemory(_In_ PVOID ptr,_In_ SIZE_T cnt)
BOOL None crypt32.CryptSIPRemoveProvider(_In_ GUID *pgProv)
BOOL WINAPI crypt32.CertComparePublicKeyInfo(_In_ DWORD dwCertEncodingType,_In_ PCERT_PUBLIC_KEY_INFO pPublicKey1,_In_ PCERT_PUBLIC_KEY_INFO pPublicKey2)
BOOL None shlwapi.PathRenameExtension(_Inout_ LPTSTR pszPath,_In_ LPCTSTR pszExt)
BOOL None shlwapi.PathRenameExtensionW(_Inout_ LPTSTR pszPath,_In_ LPCTSTR pszExt)
BOOL None shlwapi.PathRenameExtensionA(_Inout_ LPTSTR pszPath,_In_ LPCTSTR pszExt)
LSTATUS None shlwapi.SHRegGetValue(_In_ HKEY hkey,_In_ LPCTSTR pszSubKey,_In_ LPCTSTR pszValue,_In_ SRRF srrfFlags,_Inout_ LPDWORD pdwType,_Out_ LPVOID pvData,_Inout_ LPDWORD pcbData)
LSTATUS None shlwapi.SHRegGetValueW(_In_ HKEY hkey,_In_ LPCTSTR pszSubKey,_In_ LPCTSTR pszValue,_In_ SRRF srrfFlags,_Inout_ LPDWORD pdwType,_Out_ LPVOID pvData,_Inout_ LPDWORD pcbData)
LSTATUS None shlwapi.SHRegGetValueA(_In_ HKEY hkey,_In_ LPCTSTR pszSubKey,_In_ LPCTSTR pszValue,_In_ SRRF srrfFlags,_Inout_ LPDWORD pdwType,_Out_ LPVOID pvData,_Inout_ LPDWORD pcbData)
ULONG WINAPI iphlpapi.GetUdp6Table(_Out_ PMIB_UDP6TABLE Udp6Table,_Inout_ PULONG SizePointer,_In_ BOOL Order)
BOOL WINAPI crypt32.CertVerifyRevocation(_In_ DWORD dwEncodingType,_In_ DWORD dwRevType,_In_ DWORD cContext,_In_ PVOID rgpvContext[],_In_ DWORD dwFlags,_In_opt_ PCERT_REVOCATION_PARA pRevPara,_Inout_ PCERT_REVOCATION_STATUS pRevStatus)
BOOL WINAPI advapi32.CryptSetProviderEx(_In_ LPCTSTR pszProvName,_In_ DWORD dwProvType,_In_ DWORD *pdwReserved,_In_ DWORD dwFlags)
BOOL WINAPI advapi32.CryptSetProviderExW(_In_ LPCTSTR pszProvName,_In_ DWORD dwProvType,_In_ DWORD *pdwReserved,_In_ DWORD dwFlags)
BOOL WINAPI advapi32.CryptSetProviderExA(_In_ LPCTSTR pszProvName,_In_ DWORD dwProvType,_In_ DWORD *pdwReserved,_In_ DWORD dwFlags)
BOOL WINAPI crypt32.CryptMsgVerifyCountersignatureEncoded(_In_ HCRYPTPROV_LEGACY hCryptProv,_In_ DWORD dwEncodingType,_In_ PBYTE pbSignerInfo,_In_ DWORD cbSignerInfo,_In_ PBYTE pbSignerInfoCountersignature,_In_ DWORD cbSignerInfoCountersignature,_In_ PCERT_INFO pciCountersigner)
BOOL WINAPI crypt32.CertVerifyCertificateChainPolicy(_In_ LPCSTR pszPolicyOID,_In_ PCCERT_CHAIN_CONTEXT pChainContext,_In_ PCERT_CHAIN_POLICY_PARA pPolicyPara,_Inout_ PCERT_CHAIN_POLICY_STATUS pPolicyStatus)
LRESULT None shell32.SHShellFolderView_Message(_In_ HWND hwndMain,UINT uMsg None,LPARAM lParam None)
PCCERT_CONTEXT WINAPI cryptui.CryptUIDlgSelectCertificate(_In_ PCCRYPTUI_SELECTCERTIFICATE_STRUCT pcsc)
PCCERT_CONTEXT WINAPI cryptui.CryptUIDlgSelectCertificateW(_In_ PCCRYPTUI_SELECTCERTIFICATE_STRUCT pcsc)
PCCERT_CONTEXT WINAPI cryptui.CryptUIDlgSelectCertificateA(_In_ PCCRYPTUI_SELECTCERTIFICATE_STRUCT pcsc)
BOOL WINAPI cryptdlg.CertSelectCertificate(_Inout_ PCERT_SELECT_STRUCT_W pCertSelectInfo)
BOOL WINAPI crypt32.CertSerializeCertificateStoreElement(_In_ PCCERT_CONTEXT pCertContext,_In_ DWORD dwFlags,_Out_ BYTE *pbElement,_Inout_ DWORD *pcbElement)
BOOL WINAPI crypt32.CryptInstallOIDFunctionAddress(_In_ HMODULE hModule,_In_ DWORD dwEncodingType,_In_ LPCSTR pszFuncName,_In_ DWORD cFuncEntry,_In_ CRYPT_OID_FUNC_ENTRY rgFuncEntry[],_In_ DWORD dwFlags)
BOOL WINAPI crypt32.CertIsRDNAttrsInCertificateName(_In_ DWORD dwCertEncodingType,_In_ DWORD dwFlags,_In_ PCERT_NAME_BLOB pCertName,_In_ PCERT_RDN pRDN)
BOOL WINAPI None.CertStoreProvDeleteCTL(_In_ HCERTSTOREPROV hStoreProv,_In_ PCCTL_CONTEXT pCtlContext,_In_ DWORD dwFlags)
LPCWSTR WINAPI crypt32.CryptFindLocalizedName(_In_ LPCWSTR pwszCryptName)
HRESULT WINAPI mssign32.SignerTimeStamp(_In_ SIGNER_SUBJECT_INFO *pSubjectInfo,_In_ LPCWSTR pwszHttpTimeStamp,_In_opt_ PCRYPT_ATTRIBUTES psRequest,_In_opt_ LPVOID pSipData)
BOOL None shlwapi.PathIsHTMLFile(_In_ LPCTSTR pszFile)
BOOL None shlwapi.PathIsHTMLFileW(_In_ LPCTSTR pszFile)
BOOL None shlwapi.PathIsHTMLFileA(_In_ LPCTSTR pszFile)
BOOL None shlwapi.PathIsSystemFolder(_In_opt_ LPCTSTR pszPath,_In_ DWORD dwAttrb)
BOOL None shlwapi.PathIsSystemFolderW(_In_opt_ LPCTSTR pszPath,_In_ DWORD dwAttrb)
BOOL None shlwapi.PathIsSystemFolderA(_In_opt_ LPCTSTR pszPath,_In_ DWORD dwAttrb)
BOOL None shlwapi.PathCanonicalize(_Out_ LPTSTR lpszDst,_In_ LPCTSTR lpszSrc)
BOOL None shlwapi.PathCanonicalizeW(_Out_ LPTSTR lpszDst,_In_ LPCTSTR lpszSrc)
BOOL None shlwapi.PathCanonicalizeA(_Out_ LPTSTR lpszDst,_In_ LPCTSTR lpszSrc)
BOOL None wintrust.CryptCATCatalogInfoFromContext(_In_ HCATINFO hCatInfo,_Inout_ CATALOG_INFO *psCatInfo,_In_ DWORD dwFlags)
BOOL WINAPI crypt32.CryptVerifyMessageHash(_In_ PCRYPT_HASH_MESSAGE_PARA pHashPara,_In_ BYTE *pbHashedBlob,_In_ DWORD cbHashedBlob,_Out_ BYTE *pbToBeHashed,_Inout_ DWORD *pcbToBeHashed,_Out_opt_ BYTE *pbComputedHash,_Inout_opt_ DWORD *pcbComputedHash)
BOOL WINAPI crypt32.CryptSIPGetSignedDataMsg(_In_ SIP_SUBJECTINFO *pSubjectInfo,_Out_ DWORD *pdwEncodingType,_In_ DWORD dwIndex,_Inout_ DWORD *pcbSignedDataMsg,_Out_ BYTE *pbSignedDataMsg)
BOOL None shlwapi.PathQuoteSpaces(_Inout_ LPTSTR lpsz)
BOOL None shlwapi.PathQuoteSpacesW(_Inout_ LPTSTR lpsz)
BOOL None shlwapi.PathQuoteSpacesA(_Inout_ LPTSTR lpsz)
LPCTSTR None shlwapi.UrlGetLocation(_In_ PCTSTR pszURL)
LPCTSTR None shlwapi.UrlGetLocationW(_In_ PCTSTR pszURL)
LPCTSTR None shlwapi.UrlGetLocationA(_In_ PCTSTR pszURL)
BOOLEAN WINAPI advapi32.AuditSetSecurity(_In_ SECURITY_INFORMATION SecurityInformation,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor)
BOOL __cdecl instrsa5.GetEncSChannel(_Out_ BYTE **pData,_Out_ DWORD *dwDecSize)
DWORD WINAPI advapi32.GetLengthSid(_In_ PSID pSid)
BOOL None shlwapi.PathIsNetworkPath(_In_ LPCTSTR pszPath)
BOOL None shlwapi.PathIsNetworkPathW(_In_ LPCTSTR pszPath)
BOOL None shlwapi.PathIsNetworkPathA(_In_ LPCTSTR pszPath)
uint32 None smiscsitargetprov.SetPowerState([in] uint16 PowerState,[in] datetime Time)
BOOL WINAPI crypt32.CryptExportPublicKeyInfo(_In_ HCRYPTPROV_OR_NCRYPT_KEY_HANDLE hCryptProvOrNCryptKey,_In_ DWORD dwKeySpec,_In_ DWORD dwCertEncodingType,_Out_ PCERT_PUBLIC_KEY_INFO pInfo,_Inout_ DWORD *pcbInfo)
private void None.Button_HideLabel(Object sender None,EventArgs e None)
BOOL None shlwapi.PathFileExists(_In_ LPCTSTR pszPath)
BOOL None shlwapi.PathFileExistsW(_In_ LPCTSTR pszPath)
BOOL None shlwapi.PathFileExistsA(_In_ LPCTSTR pszPath)
BOOL None shlwapi.UrlIs(_In_ PCTSTR pszUrl,URLIS UrlIs None)
BOOL None shlwapi.UrlIsW(_In_ PCTSTR pszUrl,URLIS UrlIs None)
BOOL None shlwapi.UrlIsA(_In_ PCTSTR pszUrl,URLIS UrlIs None)
LONG WINAPI advapi32.RegGetValue(_In_ HKEY hkey,_In_opt_ LPCTSTR lpSubKey,_In_opt_ LPCTSTR lpValue,_In_opt_ DWORD dwFlags,_Out_opt_ LPDWORD pdwType,_Out_opt_ PVOID pvData,_Inout_opt_ LPDWORD pcbData)
LONG WINAPI advapi32.RegGetValueW(_In_ HKEY hkey,_In_opt_ LPCTSTR lpSubKey,_In_opt_ LPCTSTR lpValue,_In_opt_ DWORD dwFlags,_Out_opt_ LPDWORD pdwType,_Out_opt_ PVOID pvData,_Inout_opt_ LPDWORD pcbData)
LONG WINAPI advapi32.RegGetValueA(_In_ HKEY hkey,_In_opt_ LPCTSTR lpSubKey,_In_opt_ LPCTSTR lpValue,_In_opt_ DWORD dwFlags,_Out_opt_ LPDWORD pdwType,_Out_opt_ PVOID pvData,_Inout_opt_ LPDWORD pcbData)
BOOL None shlwapi.UrlIsFileUrl(LPCTSTR pszUrl None)
BOOL None shlwapi.UrlIsFileUrlW(LPCTSTR pszUrl None)
BOOL None shlwapi.UrlIsFileUrlA(LPCTSTR pszUrl None)
VOID WINAPI crypt32.CertAddRefServerOcspResponseContext(_In_ PCCERT_SERVER_OCSP_RESPONSE_CONTEXT pServerOcspResponseContext)
LONG WINAPI crypt32.CertVerifyCRLTimeValidity(_In_ LPFILETIME pTimeToVerify,_In_ PCRL_INFO pCrlInfo)
HRESULT None shlwapi.SHIsChildOrSelf(_In_ HWND hwndParent,_In_ HWND hwnd)
NETIO_STATUS WINAPI iphlpapi.ConvertIpv4MaskToLength(_In_ ULONG Mask,_Out_ PUINT8 MaskLength)
HANDLE WINAPI kernel32.CreateFileMappingFromApp(_In_ HANDLE hFile,_In_opt_ PSECURITY_ATTRIBUTES SecurityAttributes,_In_ ULONG PageProtection,_In_ ULONG64 MaximumSize,_In_opt_ PCWSTR Name)
WINAPI None kernel32.UnmapViewOfFile2(_In_ HANDLE ProcessHandle,_In_ PVOID BaseAddress,_In_ ULONG UnmapFlags)
VOID WINAPI kernel32.AcquireSRWLockShared(_Inout_ PSRWLOCK SRWLock)
WNDPROC __stdcall atlthunk.AtlThunk_DataToCode(AtlThunkData_t * None)
HRESULT None certadm.CertSrvRestoreGetDatabaseLocations(_In_ HCSBC hbc,_Out_ WCHAR **ppwszzDatabaseLocationList,_Out_ DWORD *pcbSize)
HRESULT None certadm.CertSrvRestoreGetDatabaseLocationsW(_In_ HCSBC hbc,_Out_ WCHAR **ppwszzDatabaseLocationList,_Out_ DWORD *pcbSize)
uint32 None smiscsitargetprov.EnableDevice([in] boolean Enabled)
LONG WINAPI advapi32.RegDeleteKey(_In_ HKEY hKey,_In_ LPCTSTR lpSubKey)
LONG WINAPI advapi32.RegDeleteKeyW(_In_ HKEY hKey,_In_ LPCTSTR lpSubKey)
LONG WINAPI advapi32.RegDeleteKeyA(_In_ HKEY hKey,_In_ LPCTSTR lpSubKey)
BOOL None shlwapi.PathIsFileSpec(_In_ LPCTSTR lpszPath)
BOOL None shlwapi.PathIsFileSpecW(_In_ LPCTSTR lpszPath)
BOOL None shlwapi.PathIsFileSpecA(_In_ LPCTSTR lpszPath)
HRESULT WINAPI userenv.DeriveRestrictedAppContainerSidFromAppContainerSidAndRestrictedName(_In_ PSID psidAppContainerSid,_In_ PCWSTR pszRestrictedAppContainerName,_Out_ PSID *ppsidRestrictedAppContainerSid)
LONG WINAPI advapi32.RegCreateKey(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_Out_ PHKEY phkResult)
LONG WINAPI advapi32.RegCreateKeyW(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_Out_ PHKEY phkResult)
LONG WINAPI advapi32.RegCreateKeyA(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_Out_ PHKEY phkResult)
BOOL None shell32.GetFileNameFromBrowse(_In_opt_ HWND hwnd,_Inout_ PWSTR pszFilePath,UINT cchFilePath None,_In_opt_ PCWSTR pszWorkingDir,_In_ PCWSTR pszDefExt,_In_opt_ PCWSTR pszFilters,_In_opt_ PCWSTR szTitle)
ULONG WINAPI iphlpapi.CreatePersistentUdpPortReservation(_In_ USHORT StartPort,_In_ USHORT NumberOfPorts,_Out_ PULONG64 Token)
BOOL None shlwapi.PathIsSameRoot(_In_ LPCTSTR pszPath1,_In_ LPCTSTR pszPath2)
BOOL None shlwapi.PathIsSameRootW(_In_ LPCTSTR pszPath1,_In_ LPCTSTR pszPath2)
BOOL None shlwapi.PathIsSameRootA(_In_ LPCTSTR pszPath1,_In_ LPCTSTR pszPath2)
BOOL WINAPI userenv.GetAllUsersProfileDirectory(_Out_opt_ LPTSTR lpProfileDir,_Inout_ LPDWORD lpcchSize)
BOOL WINAPI userenv.GetAllUsersProfileDirectoryW(_Out_opt_ LPTSTR lpProfileDir,_Inout_ LPDWORD lpcchSize)
BOOL WINAPI userenv.GetAllUsersProfileDirectoryA(_Out_opt_ LPTSTR lpProfileDir,_Inout_ LPDWORD lpcchSize)
PTSTR None shlwapi.PathGetArgs(_In_ PTSTR pszPath)
PTSTR None shlwapi.PathGetArgsW(_In_ PTSTR pszPath)
PTSTR None shlwapi.PathGetArgsA(_In_ PTSTR pszPath)
HANDLE None shell32.SHChangeNotification_Lock(_In_ HANDLE hChange,DWORD dwProcId None,_Out_opt_ PIDLIST_ABSOLUTE **pppidl,_Out_opt_ LONG *plEvent)
BOOL WINAPI kernel32.IsBadWritePtr(_In_ LPVOID lp,_In_ UINT_PTR ucb)
DWORD WINAPI kernel32.GetProfileString(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ LPCTSTR lpDefault,_Out_ LPTSTR lpReturnedString,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetProfileStringW(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ LPCTSTR lpDefault,_Out_ LPTSTR lpReturnedString,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetProfileStringA(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ LPCTSTR lpDefault,_Out_ LPTSTR lpReturnedString,_In_ DWORD nSize)
HRESULT None mobsync.Clone([out] IEnumSyncItems **ppEnumSyncItems)
PSLIST_ENTRY WINAPI ntdll.RtlFirstEntrySList(_In_ PSLIST_HEADER ListHead)
HCERTSTORE WINAPI crypt32.CertOpenSystemStore(_In_ HCRYPTPROV_LEGACY hprov,_In_ LPTCSTR szSubsystemProtocol)
HCERTSTORE WINAPI crypt32.CertOpenSystemStoreW(_In_ HCRYPTPROV_LEGACY hprov,_In_ LPTCSTR szSubsystemProtocol)
HCERTSTORE WINAPI crypt32.CertOpenSystemStoreA(_In_ HCRYPTPROV_LEGACY hprov,_In_ LPTCSTR szSubsystemProtocol)
PTSTR None shlwapi.PathFindNextComponent(_In_ PTSTR pszPath)
PTSTR None shlwapi.PathFindNextComponentW(_In_ PTSTR pszPath)
PTSTR None shlwapi.PathFindNextComponentA(_In_ PTSTR pszPath)
protected void None.OnVisibleChanged(EventArgs e None)
uint32 None smiscsitargetprov.OnlineDevice([in] boolean Online)
LPVOID WINAPI kernel32.MapViewOfFile(_In_ HANDLE hFileMappingObject,_In_ DWORD dwDesiredAccess,_In_ DWORD dwFileOffsetHigh,_In_ DWORD dwFileOffsetLow,_In_ SIZE_T dwNumberOfBytesToMap)
DWORD None iphlpapi.GetUdpStatistics(_Out_ PMIB_UDPSTATS pStats)
BOOL WINAPI kernel32.WritePrivateProfileSection(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpString,_In_ LPCTSTR lpFileName)
BOOL WINAPI kernel32.WritePrivateProfileSectionW(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpString,_In_ LPCTSTR lpFileName)
BOOL WINAPI kernel32.WritePrivateProfileSectionA(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpString,_In_ LPCTSTR lpFileName)
HRESULT None None.MyFunc([in None None,optional] VARIANT Param1,[out None None,optional] VARIANT Param2)
BOOL WINAPI advapi32.CryptGetDefaultProvider(_In_ DWORD dwProvType,_In_ DWORD *pdwReserved,_In_ DWORD dwFlags,_Out_ LPTSTR pszProvName,_Inout_ DWORD *pcbProvName)
BOOL WINAPI advapi32.CryptGetDefaultProviderW(_In_ DWORD dwProvType,_In_ DWORD *pdwReserved,_In_ DWORD dwFlags,_Out_ LPTSTR pszProvName,_Inout_ DWORD *pcbProvName)
BOOL WINAPI advapi32.CryptGetDefaultProviderA(_In_ DWORD dwProvType,_In_ DWORD *pdwReserved,_In_ DWORD dwFlags,_Out_ LPTSTR pszProvName,_Inout_ DWORD *pcbProvName)
BOOL None shlwapi.PathMatchSpec(_In_ LPCSTR pszFile,_In_ LPCSTR pszSpec)
BOOL None shlwapi.PathMatchSpecW(_In_ LPCSTR pszFile,_In_ LPCSTR pszSpec)
BOOL None shlwapi.PathMatchSpecA(_In_ LPCSTR pszFile,_In_ LPCSTR pszSpec)
LONG WINAPI advapi32.RegEnumValue(_In_ HKEY hKey,_In_ DWORD dwIndex,_Out_ LPTSTR lpValueName,_Inout_ LPDWORD lpcchValueName,_Reserved_ LPDWORD lpReserved,_Out_opt_ LPDWORD lpType,_Out_opt_ LPBYTE lpData,_Inout_opt_ LPDWORD lpcbData)
LONG WINAPI advapi32.RegEnumValueW(_In_ HKEY hKey,_In_ DWORD dwIndex,_Out_ LPTSTR lpValueName,_Inout_ LPDWORD lpcchValueName,_Reserved_ LPDWORD lpReserved,_Out_opt_ LPDWORD lpType,_Out_opt_ LPBYTE lpData,_Inout_opt_ LPDWORD lpcbData)
LONG WINAPI advapi32.RegEnumValueA(_In_ HKEY hKey,_In_ DWORD dwIndex,_Out_ LPTSTR lpValueName,_Inout_ LPDWORD lpcchValueName,_Reserved_ LPDWORD lpReserved,_Out_opt_ LPDWORD lpType,_Out_opt_ LPBYTE lpData,_Inout_opt_ LPDWORD lpcbData)
HRESULT None shlwapi.UrlCombine(_In_ PCTSTR pszBase,_In_ PCTSTR pszRelative,_Out_opt_ PTSTR pszCombined,_Inout_ DWORD *pcchCombined,DWORD dwFlags None)
HRESULT None shlwapi.UrlCombineW(_In_ PCTSTR pszBase,_In_ PCTSTR pszRelative,_Out_opt_ PTSTR pszCombined,_Inout_ DWORD *pcchCombined,DWORD dwFlags None)
HRESULT None shlwapi.UrlCombineA(_In_ PCTSTR pszBase,_In_ PCTSTR pszRelative,_Out_opt_ PTSTR pszCombined,_Inout_ DWORD *pcchCombined,DWORD dwFlags None)
BOOL None shlwapi.PathIsDirectory(_In_ LPCTSTR pszPath)
BOOL None shlwapi.PathIsDirectoryW(_In_ LPCTSTR pszPath)
BOOL None shlwapi.PathIsDirectoryA(_In_ LPCTSTR pszPath)
LONG WINAPI advapi32.RegEnableReflectionKey(_In_ HKEY hBase)
BOOL None gdi32.GetBrushOrgEx(_In_ HDC hdc,_Out_ LPPOINT lppt)
HRESULT None None.StringCbCopyEx(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCbCopyExW(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCbCopyExA(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags)
BOOL WINAPI authz.AuthzRegisterSecurityEventSource(_In_ DWORD dwFlags,_In_ PCWSTR szEventSourceName,_Out_ PAUTHZ_SECURITY_EVENT_PROVIDER_HANDLE phEventProvider)
VOID None iphlpapi.InitializeIpInterfaceEntry(_Inout_ PMIB_IPINTERFACE_ROW Row)
BOOL WINAPI kernel32.HeapUnlock(_In_ HANDLE hHeap)
BOOL WINAPI kernel32.GetPrivateProfileStruct(_In_ LPCTSTR lpszSection,_In_ LPCTSTR lpszKey,_Out_ LPVOID lpStruct,_In_ UINT uSizeStruct,_In_ LPCTSTR szFile)
BOOL WINAPI kernel32.GetPrivateProfileStructW(_In_ LPCTSTR lpszSection,_In_ LPCTSTR lpszKey,_Out_ LPVOID lpStruct,_In_ UINT uSizeStruct,_In_ LPCTSTR szFile)
BOOL WINAPI kernel32.GetPrivateProfileStructA(_In_ LPCTSTR lpszSection,_In_ LPCTSTR lpszKey,_Out_ LPVOID lpStruct,_In_ UINT uSizeStruct,_In_ LPCTSTR szFile)
BOOL WINAPI kernel32.SetSystemFileCacheSize(_In_ SIZE_T MinimumFileCacheSize,_In_ SIZE_T MaximumFileCacheSize,_In_ DWORD Flags)
HRESULT None shlwapi.SHGetInverseCMAP(_Out_ BYTE *pbMap,_In_ ULONG cbMap)
PITEMID_CHILD None shell32.ILCloneFirst(_In_ PCUIDLIST_RELATIVE pidl)
HLOCAL WINAPI kernel32.LocalFree(_In_ HLOCAL hMem)
LONG WINAPI advapi32.RegFlushKey(_In_ HKEY hKey)
HGLOBAL WINAPI kernel32.GlobalHandle(_In_ LPCVOID pMem)
SIZE_T WINAPI kernel32.GlobalSize(_In_ HGLOBAL hMem)
BOOL None shlwapi.PathIsURL(_In_ LPCTSTR pszPath)
BOOL None shlwapi.PathIsURLW(_In_ LPCTSTR pszPath)
BOOL None shlwapi.PathIsURLA(_In_ LPCTSTR pszPath)
BOOL WINAPI kernel32.HeapDestroy(_In_ HANDLE hHeap)
HRESULT None shlwapi.UrlEscape(_In_ PCTSTR pszURL,_Out_ PTSTR pszEscaped,_Inout_ DWORD *pcchEscaped,DWORD dwFlags None)
HRESULT None shlwapi.UrlEscapeW(_In_ PCTSTR pszURL,_Out_ PTSTR pszEscaped,_Inout_ DWORD *pcchEscaped,DWORD dwFlags None)
HRESULT None shlwapi.UrlEscapeA(_In_ PCTSTR pszURL,_Out_ PTSTR pszEscaped,_Inout_ DWORD *pcchEscaped,DWORD dwFlags None)
BOOL None shlwapi.PathMakePretty(_Inout_ LPTSTR lpPath)
BOOL None shlwapi.PathMakePrettyW(_Inout_ LPTSTR lpPath)
BOOL None shlwapi.PathMakePrettyA(_Inout_ LPTSTR lpPath)
BOOL WINAPI kernel32.WritePrivateProfileString(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ LPCTSTR lpString,_In_ LPCTSTR lpFileName)
BOOL WINAPI kernel32.WritePrivateProfileStringW(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ LPCTSTR lpString,_In_ LPCTSTR lpFileName)
BOOL WINAPI kernel32.WritePrivateProfileStringA(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ LPCTSTR lpString,_In_ LPCTSTR lpFileName)
HRESULT None shell32.GetPossibleActions([out] DWORD *pdwActions)
LPTSTR WINAPI kernel32.lstrcpy(_Out_ LPTSTR lpString1,_In_ LPTSTR lpString2)
LPTSTR WINAPI kernel32.lstrcpyW(_Out_ LPTSTR lpString1,_In_ LPTSTR lpString2)
LPTSTR WINAPI kernel32.lstrcpyA(_Out_ LPTSTR lpString1,_In_ LPTSTR lpString2)
UINT WINAPI kernel32.GetPrivateProfileInt(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ INT nDefault,_In_ LPCTSTR lpFileName)
UINT WINAPI kernel32.GetPrivateProfileIntW(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ INT nDefault,_In_ LPCTSTR lpFileName)
UINT WINAPI kernel32.GetPrivateProfileIntA(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ INT nDefault,_In_ LPCTSTR lpFileName)
HANDLE WINAPI kernel32.OpenFileMappingFromApp(_In_ ULONG DesiredAccess,_In_ BOOL InheritHandle,_In_ PCWSTR Name)
LONG WINAPI advapi32.RegConnectRegistry(_In_opt_ LPCTSTR lpMachineName,_In_ HKEY hKey,_Out_ PHKEY phkResult)
LONG WINAPI advapi32.RegConnectRegistryW(_In_opt_ LPCTSTR lpMachineName,_In_ HKEY hKey,_Out_ PHKEY phkResult)
LONG WINAPI advapi32.RegConnectRegistryA(_In_opt_ LPCTSTR lpMachineName,_In_ HKEY hKey,_Out_ PHKEY phkResult)
LRESULT CALLBACK None.HookProc(int nCode None,WPARAM wParam None,LPARAM lParam None)
BOOL None shlwapi.PathIsRelative(_In_ LPCTSTR lpszPath)
BOOL None shlwapi.PathIsRelativeW(_In_ LPCTSTR lpszPath)
BOOL None shlwapi.PathIsRelativeA(_In_ LPCTSTR lpszPath)
DWORD WINAPI kernel32.WaitForSingleObjectEx(_In_ HANDLE hHandle,_In_ DWORD dwMilliseconds,_In_ BOOL bAlertable)
LONG WINAPI advapi32.RegOpenKeyEx(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_ DWORD ulOptions,_In_ REGSAM samDesired,_Out_ PHKEY phkResult)
LONG WINAPI advapi32.RegOpenKeyExW(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_ DWORD ulOptions,_In_ REGSAM samDesired,_Out_ PHKEY phkResult)
LONG WINAPI advapi32.RegOpenKeyExA(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_ DWORD ulOptions,_In_ REGSAM samDesired,_Out_ PHKEY phkResult)
LONG WINAPI advapi32.RegLoadAppKey(_In_ LPCTSTR lpFile,_Out_ PHKEY phkResult,_In_ REGSAM samDesired,_In_ DWORD dwOptions,_Reserved_ DWORD Reserved)
LONG WINAPI advapi32.RegLoadAppKeyW(_In_ LPCTSTR lpFile,_Out_ PHKEY phkResult,_In_ REGSAM samDesired,_In_ DWORD dwOptions,_Reserved_ DWORD Reserved)
LONG WINAPI advapi32.RegLoadAppKeyA(_In_ LPCTSTR lpFile,_Out_ PHKEY phkResult,_In_ REGSAM samDesired,_In_ DWORD dwOptions,_Reserved_ DWORD Reserved)
BOOL None shlwapi.PathUnmakeSystemFolder(_In_ LPTSTR pszPath)
BOOL None shlwapi.PathUnmakeSystemFolderW(_In_ LPTSTR pszPath)
BOOL None shlwapi.PathUnmakeSystemFolderA(_In_ LPTSTR pszPath)
LONG WINAPI advapi32.RegQueryReflectionKey(_In_ HKEY hBase,_Out_ BOOL *bIsReflectionDisabled)
BOOL WINAPI advapi32.GetAce(_In_ PACL pAcl,_In_ DWORD dwAceIndex,_Out_ LPVOID *pAce)
DWORD WINAPI kernel32.GetPrivateProfileSection(_In_ LPCTSTR lpAppName,_Out_ LPTSTR lpReturnedString,_In_ DWORD nSize,_In_ LPCTSTR lpFileName)
DWORD WINAPI kernel32.GetPrivateProfileSectionW(_In_ LPCTSTR lpAppName,_Out_ LPTSTR lpReturnedString,_In_ DWORD nSize,_In_ LPCTSTR lpFileName)
DWORD WINAPI kernel32.GetPrivateProfileSectionA(_In_ LPCTSTR lpAppName,_Out_ LPTSTR lpReturnedString,_In_ DWORD nSize,_In_ LPCTSTR lpFileName)
HRESULT None None.StringCbCatEx(_Inout_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCbCatExW(_Inout_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCbCatExA(_Inout_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags)
PSLIST_ENTRY WINAPI kernel32.InterlockedPopEntrySList(_Inout_ PSLIST_HEADER ListHead)
BOOL WINAPI advapi32.LookupAccountSid(_In_ PSID lpSid,_Out_opt_ LPTSTR lpName,_Inout_ LPDWORD cchName,_Out_opt_ LPTSTR lpReferencedDomainName,_Inout_ LPDWORD cchReferencedDomainName,_Out_ PSID_NAME_USE peUse)
BOOL WINAPI advapi32.LookupAccountSidLocalW(_In_ PSID lpSid,_Out_opt_ LPTSTR lpName,_Inout_ LPDWORD cchName,_Out_opt_ LPTSTR lpReferencedDomainName,_Inout_ LPDWORD cchReferencedDomainName,_Out_ PSID_NAME_USE peUse)
BOOL WINAPI advapi32.LookupAccountSidLocalA(_In_ PSID lpSid,_Out_opt_ LPTSTR lpName,_Inout_ LPDWORD cchName,_Out_opt_ LPTSTR lpReferencedDomainName,_Inout_ LPDWORD cchReferencedDomainName,_Out_ PSID_NAME_USE peUse)
HRESULT None shlwapi.UrlApplyScheme(_In_ PCTSTR pszIn,_Out_ PTSTR pszOut,_Inout_ DWORD *pcchOut,DWORD dwFlags None)
HRESULT None shlwapi.UrlApplySchemeW(_In_ PCTSTR pszIn,_Out_ PTSTR pszOut,_Inout_ DWORD *pcchOut,DWORD dwFlags None)
HRESULT None shlwapi.UrlApplySchemeA(_In_ PCTSTR pszIn,_Out_ PTSTR pszOut,_Inout_ DWORD *pcchOut,DWORD dwFlags None)
LONG WINAPI advapi32.RegQueryValue(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_Out_opt_ LPTSTR lpValue,_Inout_opt_ PLONG lpcbValue)
LONG WINAPI advapi32.RegQueryValueW(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_Out_opt_ LPTSTR lpValue,_Inout_opt_ PLONG lpcbValue)
LONG WINAPI advapi32.RegQueryValueA(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_Out_opt_ LPTSTR lpValue,_Inout_opt_ PLONG lpcbValue)
DWORD WINAPI kernel32.GetProfileSection(_In_ LPCTSTR lpAppName,_Out_ LPTSTR lpReturnedString,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetProfileSectionW(_In_ LPCTSTR lpAppName,_Out_ LPTSTR lpReturnedString,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetProfileSectionA(_In_ LPCTSTR lpAppName,_Out_ LPTSTR lpReturnedString,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetPrivateProfileSectionNames(_Out_ LPTSTR lpszReturnBuffer,_In_ DWORD nSize,_In_ LPCTSTR lpFileName)
DWORD WINAPI kernel32.GetPrivateProfileSectionNamesW(_Out_ LPTSTR lpszReturnBuffer,_In_ DWORD nSize,_In_ LPCTSTR lpFileName)
DWORD WINAPI kernel32.GetPrivateProfileSectionNamesA(_Out_ LPTSTR lpszReturnBuffer,_In_ DWORD nSize,_In_ LPCTSTR lpFileName)
BOOL None comctl32.ImageList_Write(HIMAGELIST himl None,LPSTREAM pstm None)
BOOL WINAPI kernel32.GetMemoryErrorHandlingCapabilities(_Out_ PULONG Capabilities)
BOOL WINAPI kernel32.HeapSetInformation(_In_opt_ HANDLE HeapHandle,_In_ HEAP_INFORMATION_CLASS HeapInformationClass,_In_ PVOID HeapInformation,_In_ SIZE_T HeapInformationLength)
HRESULT None shell32.QueryContextMenu(HMENU hmenu None,UINT indexMenu None,UINT idCmdFirst None,UINT idCmdLast None,UINT uFlags None)
LONG WINAPI advapi32.RegEnableReflectionKey(_In_ HKEY hBase)
LONG WINAPI advapi32.RegDisableReflectionKey(_In_ HKEY hBase)
BOOL WINAPI kernel32.AddSecureMemoryCacheCallback(_In_ PSECURE_MEMORY_CACHE_CALLBACK pfnCallBack)
BOOL WINAPI kernel32.GetSystemFileCacheSize(_Out_ PSIZE_T lpMinimumFileCacheSize,_Out_ PSIZE_T lpMaximumFileCacheSize,_Out_ PDWORD lpFlags)
PTSTR None shlwapi.PathFindExtension(_In_ PTSTR pszPath)
PTSTR None shlwapi.PathFindExtensionW(_In_ PTSTR pszPath)
PTSTR None shlwapi.PathFindExtensionA(_In_ PTSTR pszPath)
BOOL WINAPI userenv.DeleteProfile(_In_ LPCTSTR lpSidString,_In_opt_ LPCTSTR lpProfilePath,_In_opt_ LPCTSTR lpComputerName)
BOOL WINAPI userenv.DeleteProfileW(_In_ LPCTSTR lpSidString,_In_opt_ LPCTSTR lpProfilePath,_In_opt_ LPCTSTR lpComputerName)
BOOL WINAPI userenv.DeleteProfileA(_In_ LPCTSTR lpSidString,_In_opt_ LPCTSTR lpProfilePath,_In_opt_ LPCTSTR lpComputerName)
BOOL None shlwapi.PathIsURL(_In_ LPCTSTR pszPath)
BOOL None shlwapi.PathIsURLW(_In_ LPCTSTR pszPath)
BOOL None shlwapi.PathIsURLA(_In_ LPCTSTR pszPath)
BOOL WINAPI kernel32.RemoveSecureMemoryCacheCallback(_In_ PSECURE_MEMORY_CACHE_CALLBACK pfnCallBack)
HRESULT None None.StringCchVPrintfEx(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags,_In_ LPCTSTR pszFormat,_In_ va_list argList)
HRESULT None None.StringCchVPrintfExW(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags,_In_ LPCTSTR pszFormat,_In_ va_list argList)
HRESULT None None.StringCchVPrintfExA(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags,_In_ LPCTSTR pszFormat,_In_ va_list argList)
protected void None.OnTabStopChanged(EventArgs e None)
protected void None.InvokePaintBackground(Control c None,PaintEventArgs e None)
BOOL WINAPI kernel32.AllocateUserPhysicalPages(_In_ HANDLE hProcess,_Inout_ PULONG_PTR NumberOfPages,_Out_ PULONG_PTR UserPfnArray)
HRESULT None shlwapi.UrlEscapeSpaces(_In_ LPCTSTR pszURL,_Out_ LPTSTR pszEscaped,_Out_ LPDWORD pcchEscaped)
BOOL None shlwapi.PathAddExtension(_Inout_ LPTSTR pszPath,_In_opt_ LPCTSTR pszExtension)
BOOL None shlwapi.PathAddExtensionW(_Inout_ LPTSTR pszPath,_In_opt_ LPCTSTR pszExtension)
BOOL None shlwapi.PathAddExtensionA(_Inout_ LPTSTR pszPath,_In_opt_ LPCTSTR pszExtension)
protected void None.OnTabIndexChanged(EventArgs e None)
HRESULT None shell32.GetCachedSlowAppInfo([out] PSLOWAPPINFO psaid)
HRESULT None None.GetParentSite([out] IOleInPlaceSite **ppipsite)
HRESULT None None.StringCbCopy(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc)
HRESULT None None.StringCbCopyW(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc)
HRESULT None None.StringCbCopyA(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc)
LONG WINAPI advapi32.RegOpenCurrentUser(_In_ REGSAM samDesired,_Out_ PHKEY phkResult)
LONG WINAPI advapi32.RegLoadMUIString(_In_ HKEY hKey,_In_opt_ LPCTSTR pszValue,_Out_opt_ LPTSTR pszOutBuf,_In_ DWORD cbOutBuf,_Out_opt_ LPDWORD pcbData,_In_ DWORD Flags,_In_opt_ LPCTSTR pszDirectory)
LONG WINAPI advapi32.RegLoadMUIStringW(_In_ HKEY hKey,_In_opt_ LPCTSTR pszValue,_Out_opt_ LPTSTR pszOutBuf,_In_ DWORD cbOutBuf,_Out_opt_ LPDWORD pcbData,_In_ DWORD Flags,_In_opt_ LPCTSTR pszDirectory)
LONG WINAPI advapi32.RegLoadMUIStringA(_In_ HKEY hKey,_In_opt_ LPCTSTR pszValue,_Out_opt_ LPTSTR pszOutBuf,_In_ DWORD cbOutBuf,_Out_opt_ LPDWORD pcbData,_In_ DWORD Flags,_In_opt_ LPCTSTR pszDirectory)
DWORD WINAPI kernel32.DiscardVirtualMemory(_In_ PVOID VirtualAddress,_In_ SIZE_T Size)
COLORREF None gdi32.GetNearestColor(_In_ HDC hdc,_In_ COLORREF crColor)
BOOL WINAPI kernel32.UnregisterBadMemoryNotification(_In_ PVOID RegistrationHandle)
BOOL WINAPI kernel32.WriteProfileString(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ LPCTSTR lpString)
BOOL WINAPI kernel32.WriteProfileStringW(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ LPCTSTR lpString)
BOOL WINAPI kernel32.WriteProfileStringA(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ LPCTSTR lpString)
BOOL WINAPI kernel32.FlushViewOfFile(_In_ LPCVOID lpBaseAddress,_In_ SIZE_T dwNumberOfBytesToFlush)
BOOL None None.FAILED(HRESULT hr None)
BOOL None shlwapi.PathSearchAndQualify(_In_ LPCTSTR pcszPath,_Out_ LPTSTR pszFullyQualifiedPath,_In_ UINT cchFullyQualifiedPath)
BOOL None shlwapi.PathSearchAndQualifyW(_In_ LPCTSTR pcszPath,_Out_ LPTSTR pszFullyQualifiedPath,_In_ UINT cchFullyQualifiedPath)
BOOL None shlwapi.PathSearchAndQualifyA(_In_ LPCTSTR pcszPath,_Out_ LPTSTR pszFullyQualifiedPath,_In_ UINT cchFullyQualifiedPath)
DWORD WINAPI kernel32.GetPrivateProfileString(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ LPCTSTR lpDefault,_Out_ LPTSTR lpReturnedString,_In_ DWORD nSize,_In_ LPCTSTR lpFileName)
DWORD WINAPI kernel32.GetPrivateProfileStringW(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ LPCTSTR lpDefault,_Out_ LPTSTR lpReturnedString,_In_ DWORD nSize,_In_ LPCTSTR lpFileName)
DWORD WINAPI kernel32.GetPrivateProfileStringA(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ LPCTSTR lpDefault,_Out_ LPTSTR lpReturnedString,_In_ DWORD nSize,_In_ LPCTSTR lpFileName)
LONG WINAPI advapi32.RegCloseKey(_In_ HKEY hKey)
protected void None.OnTabStopChanged(EventArgs e None)
uint32 None smiscsitargetprov.GetSupportedGroupOperations([in] uint16 ReplicationType,[out] uint16 SupportedGroupOperations[])
protected void None.OnHandleDestroyed(EventArgs e None)
LONG WINAPI advapi32.RegCopyTree(_In_ HKEY hKeySrc,_In_opt_ LPCTSTR lpSubKey,_In_ HKEY hKeyDest)
LONG WINAPI advapi32.RegCopyTreeW(_In_ HKEY hKeySrc,_In_opt_ LPCTSTR lpSubKey,_In_ HKEY hKeyDest)
LONG WINAPI advapi32.RegCopyTreeA(_In_ HKEY hKeySrc,_In_opt_ LPCTSTR lpSubKey,_In_ HKEY hKeyDest)
HLOCAL WINAPI kernel32.LocalHandle(_In_ LPCVOID pMem)
UINT WINAPI kernel32.LocalSize(_In_ HLOCAL hMem)
BOOL WINAPI kernel32.FreeUserPhysicalPages(_In_ HANDLE hProcess,_Inout_ PULONG_PTR NumberOfPages,_In_ PULONG_PTR UserPfnArray)
NETIOAPI_API WINAPI iphlpapi.GetIpNetworkConnectionBandwidthEstimates(_In_ NET_IFINDEX InterfaceIndex,_In_ ADDRESS_FAMILY AddressFamily,_Out_ PMIB_IP_NETWORK_CONNECTION_BANDWIDTH_ESTIMATES BandwidthEstimates)
HANDLE WINAPI kernel32.CreateMemoryResourceNotification(_In_ MEMORY_RESOURCE_NOTIFICATION_TYPE NotificationType)
LONG WINAPI advapi32.RegOpenUserClassesRoot(_In_ HANDLE hToken,_Reserved_ DWORD dwOptions,_In_ REGSAM samDesired,_Out_ PHKEY phkResult)
BOOL WINAPI kernel32.GetSystemFileCacheSize(_Out_ PSIZE_T lpMinimumFileCacheSize,_Out_ PSIZE_T lpMaximumFileCacheSize,_Out_ PDWORD lpFlags)
HRESULT None None.GetOleObject([out] IOleObject **ppobjv)
LONG WINAPI advapi32.RegDeleteTree(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey)
LONG WINAPI advapi32.RegDeleteTreeW(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey)
LONG WINAPI advapi32.RegDeleteTreeA(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey)
BOOLEAN WINAPI kernel32.TryAcquireSRWLockShared(_Inout_ PSRWLOCK SRWLock)
BOOL WINAPI kernel32.VirtualFree(_In_ LPVOID lpAddress,_In_ SIZE_T dwSize,_In_ DWORD dwFreeType)
LONG WINAPI advapi32.RegDeleteKeyValue(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_opt_ LPCTSTR lpValueName)
LONG WINAPI advapi32.RegDeleteKeyValueW(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_opt_ LPCTSTR lpValueName)
LONG WINAPI advapi32.RegDeleteKeyValueA(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_opt_ LPCTSTR lpValueName)
VOID WINAPI kernel32.DeleteBoundaryDescriptor(_In_ HANDLE BoundaryDescriptor)
LPVOID WINAPI kernel32.HeapReAlloc(_In_ HANDLE hHeap,_In_ DWORD dwFlags,_In_ LPVOID lpMem,_In_ SIZE_T dwBytes)
HRESULT None None.StringCbCopyNEx(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc,_In_ size_t cbSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCbCopyNExW(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc,_In_ size_t cbSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCbCopyNExA(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc,_In_ size_t cbSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags)
LPVOID WINAPI kernel32.HeapAlloc(_In_ HANDLE hHeap,_In_ DWORD dwFlags,_In_ SIZE_T dwBytes)
HRESULT None None.StringCchPrintf_lEx(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_Out_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ ... None)
HRESULT None None.StringCchPrintf_lExW(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_Out_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ ... None)
HRESULT None None.StringCchPrintf_lExA(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_Out_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ ... None)
protected void None.OnTabStopChanged(EventArgs e None)
UINT WINAPI kernel32.GetProfileInt(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ INT nDefault)
UINT WINAPI kernel32.GetProfileIntW(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ INT nDefault)
UINT WINAPI kernel32.GetProfileIntA(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ INT nDefault)
LONG WINAPI advapi32.RegNotifyChangeKeyValue(_In_ HKEY hKey,_In_ BOOL bWatchSubtree,_In_ DWORD dwNotifyFilter,_In_opt_ HANDLE hEvent,_In_ BOOL fAsynchronous)
BOOL None comctl32.ImageList_DragShowNolock(BOOL fShow None)
uint32 None smiscsitargetprov.GetSupportedMaximum([in] uint16 ReplicationType,[in] uint16 Component,[out] uint64 MaxValue)
HRESULT None comctl32.ImageList_WriteEx(_In_ HIMAGELIST himl,_In_ DWORD dwFlags,_In_ LPSTREAM pstm)
LONG WINAPI advapi32.RegSaveKey(_In_ HKEY hKey,_In_ LPCTSTR lpFile,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes)
LONG WINAPI advapi32.RegSaveKeyW(_In_ HKEY hKey,_In_ LPCTSTR lpFile,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes)
LONG WINAPI advapi32.RegSaveKeyA(_In_ HKEY hKey,_In_ LPCTSTR lpFile,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes)
HRESULT None shlwapi.UrlEscape(_In_ PCTSTR pszURL,_Out_ PTSTR pszEscaped,_Inout_ DWORD *pcchEscaped,DWORD dwFlags None)
HRESULT None shlwapi.UrlEscapeW(_In_ PCTSTR pszURL,_Out_ PTSTR pszEscaped,_Inout_ DWORD *pcchEscaped,DWORD dwFlags None)
HRESULT None shlwapi.UrlEscapeA(_In_ PCTSTR pszURL,_Out_ PTSTR pszEscaped,_Inout_ DWORD *pcchEscaped,DWORD dwFlags None)
PTSTR None shlwapi.StrCpy(_Out_ PTSTR psz1,_In_ PCTSTR psz2)
PTSTR None shlwapi.StrCpyW(_Out_ PTSTR psz1,_In_ PCTSTR psz2)
LONG WINAPI advapi32.RegUnLoadKey(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey)
LONG WINAPI advapi32.RegUnLoadKeyW(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey)
LONG WINAPI advapi32.RegUnLoadKeyA(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey)
VOID WINAPI kernel32.InitializeConditionVariable(_Out_ PCONDITION_VARIABLE ConditionVariable)
LPTSTR WINAPI kernel32.lstrcat(_Inout_ LPTSTR lpString1,_In_ LPTSTR lpString2)
LPTSTR WINAPI kernel32.lstrcatW(_Inout_ LPTSTR lpString1,_In_ LPTSTR lpString2)
LPTSTR WINAPI kernel32.lstrcatA(_Inout_ LPTSTR lpString1,_In_ LPTSTR lpString2)
SCODE None None.MAKE_SCODE(WORD sev None,WORD fac None,WORD code None)
LONG WINAPI advapi32.RegDeleteKeyTransacted(_In_ HKEY hKey,_In_ LPCTSTR lpSubKey,_In_ REGSAM samDesired,_Reserved_ DWORD Reserved,_In_ HANDLE hTransaction,_Reserved_ PVOID pExtendedParameter)
LONG WINAPI advapi32.RegDeleteKeyTransactedW(_In_ HKEY hKey,_In_ LPCTSTR lpSubKey,_In_ REGSAM samDesired,_Reserved_ DWORD Reserved,_In_ HANDLE hTransaction,_Reserved_ PVOID pExtendedParameter)
LONG WINAPI advapi32.RegDeleteKeyTransactedA(_In_ HKEY hKey,_In_ LPCTSTR lpSubKey,_In_ REGSAM samDesired,_Reserved_ DWORD Reserved,_In_ HANDLE hTransaction,_Reserved_ PVOID pExtendedParameter)
BOOL WINAPI wintrust.WintrustSetRegPolicyFlags(_In_ DWORD dwPolicyFlags)
protected void None.OnInvalidated(InvalidateEventArgs e None)
BOOL WINAPI crypt32.CryptMsgEncodeAndSignCTL(_In_ DWORD dwMsgEncodingType,_In_ PCTL_INFO pCtlInfo,_In_ PCMSG_SIGNED_ENCODE_INFO pSignInfo,_In_ DWORD dwFlags,_Out_ BYTE *pbEncoded,_Inout_ DWORD *pcbEncoded)
LONG WINAPI advapi32.RegDisableReflectionKey(_In_ HKEY hBase)
HRESULT None None.StringCchLength(_In_ LPCTSTR psz,_In_ size_t cchMax,_Out_ size_t *pcch)
HRESULT None None.StringCchLengthW(_In_ LPCTSTR psz,_In_ size_t cchMax,_Out_ size_t *pcch)
HRESULT None None.StringCchLengthA(_In_ LPCTSTR psz,_In_ size_t cchMax,_Out_ size_t *pcch)
BOOL WINAPI kernel32.LocalUnlock(_In_ HLOCAL hMem)
public void None.ScrollControlIntoView(Control activeControl None)
BOOL None comctl32.ImageList_DragLeave(HWND hwndLock None)
BOOL WINAPI kernel32.HeapWalk(_In_ HANDLE hHeap,_Inout_ LPPROCESS_HEAP_ENTRY lpEntry)
LONG WINAPI advapi32.RegReplaceKey(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_ LPCTSTR lpNewFile,_In_ LPCTSTR lpOldFile)
LONG WINAPI advapi32.RegReplaceKeyW(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_ LPCTSTR lpNewFile,_In_ LPCTSTR lpOldFile)
LONG WINAPI advapi32.RegReplaceKeyA(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_ LPCTSTR lpNewFile,_In_ LPCTSTR lpOldFile)
uint32 None smiscsitargetprov.GetSupportedThinProvisioningFeatures([in] uint16 ReplicationType,[out] uint16 SupportedThinProvisioningFeatures[])
DWORD None user32.GetMenuContextHelpId(HMENU hmenu None)
LONG WINAPI advapi32.RegEnumKey(_In_ HKEY hKey,_In_ DWORD dwIndex,_Out_ LPTSTR lpName,_In_ DWORD cchName)
LONG WINAPI advapi32.RegEnumKeyW(_In_ HKEY hKey,_In_ DWORD dwIndex,_Out_ LPTSTR lpName,_In_ DWORD cchName)
LONG WINAPI advapi32.RegEnumKeyA(_In_ HKEY hKey,_In_ DWORD dwIndex,_Out_ LPTSTR lpName,_In_ DWORD cchName)
DWORD None None.SCODE_SEVERITY(SCODE sc None)
uint32 None smiscsitargetprov.GetSupportedGroupFeatures([in] uint16 ReplicationType,[out] uint16 GroupFeatures[])
LONG WINAPI advapi32.RegQueryMultipleValues(_In_ HKEY hKey,_Out_ PVALENT val_list,_In_ DWORD num_vals,_Out_opt_ LPTSTR lpValueBuf,_Inout_opt_ LPDWORD ldwTotsize)
LONG WINAPI advapi32.RegQueryMultipleValuesW(_In_ HKEY hKey,_Out_ PVALENT val_list,_In_ DWORD num_vals,_Out_opt_ LPTSTR lpValueBuf,_Inout_opt_ LPDWORD ldwTotsize)
LONG WINAPI advapi32.RegQueryMultipleValuesA(_In_ HKEY hKey,_Out_ PVALENT val_list,_In_ DWORD num_vals,_Out_opt_ LPTSTR lpValueBuf,_Inout_opt_ LPDWORD ldwTotsize)
HRESULT None None.UnalignedStringCbLength(_In_ LPCTSTR psz,_In_ size_t cbMax,_Out_opt_ size_t *pcbLength)
HRESULT None None.UnalignedStringCbLengthW(_In_ LPCTSTR psz,_In_ size_t cbMax,_Out_opt_ size_t *pcbLength)
HRESULT None None.StringCbLengthA(_In_ LPCTSTR psz,_In_ size_t cbMax,_Out_opt_ size_t *pcbLength)
LONG WINAPI advapi32.RegQueryValueEx(_In_ HKEY hKey,_In_opt_ LPCTSTR lpValueName,_Reserved_ LPDWORD lpReserved,_Out_opt_ LPDWORD lpType,_Out_opt_ LPBYTE lpData,_Inout_opt_ LPDWORD lpcbData)
LONG WINAPI advapi32.RegQueryValueExW(_In_ HKEY hKey,_In_opt_ LPCTSTR lpValueName,_Reserved_ LPDWORD lpReserved,_Out_opt_ LPDWORD lpType,_Out_opt_ LPBYTE lpData,_Inout_opt_ LPDWORD lpcbData)
LONG WINAPI advapi32.RegQueryValueExA(_In_ HKEY hKey,_In_opt_ LPCTSTR lpValueName,_Reserved_ LPDWORD lpReserved,_Out_opt_ LPDWORD lpType,_Out_opt_ LPBYTE lpData,_Inout_opt_ LPDWORD lpcbData)
BOOL WINAPI kernel32.GlobalUnlock(_In_ HGLOBAL hMem)
HRESULT None None.StringCbLength(_In_ LPCTSTR psz,_In_ size_t cbMax,_Out_ size_t *pcb)
HRESULT None None.StringCbLengthW(_In_ LPCTSTR psz,_In_ size_t cbMax,_Out_ size_t *pcb)
HRESULT None None.StringCbLengthA(_In_ LPCTSTR psz,_In_ size_t cbMax,_Out_ size_t *pcb)
LONG WINAPI advapi32.RegOpenKeyTransacted(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_ DWORD ulOptions,_In_ REGSAM samDesired,_Out_ PHKEY phkResult,_In_ HANDLE hTransaction,_Reserved_ PVOID pExtendedParameter)
LONG WINAPI advapi32.RegOpenKeyTransactedW(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_ DWORD ulOptions,_In_ REGSAM samDesired,_Out_ PHKEY phkResult,_In_ HANDLE hTransaction,_Reserved_ PVOID pExtendedParameter)
LONG WINAPI advapi32.RegOpenKeyTransactedA(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_ DWORD ulOptions,_In_ REGSAM samDesired,_Out_ PHKEY phkResult,_In_ HANDLE hTransaction,_Reserved_ PVOID pExtendedParameter)
LONG WINAPI advapi32.RegEnumKeyEx(_In_ HKEY hKey,_In_ DWORD dwIndex,_Out_ LPTSTR lpName,_Inout_ LPDWORD lpcName,_Reserved_ LPDWORD lpReserved,_Inout_ LPTSTR lpClass,_Inout_opt_ LPDWORD lpcClass,_Out_opt_ PFILETIME lpftLastWriteTime)
LONG WINAPI advapi32.RegEnumKeyExW(_In_ HKEY hKey,_In_ DWORD dwIndex,_Out_ LPTSTR lpName,_Inout_ LPDWORD lpcName,_Reserved_ LPDWORD lpReserved,_Inout_ LPTSTR lpClass,_Inout_opt_ LPDWORD lpcClass,_Out_opt_ PFILETIME lpftLastWriteTime)
LONG WINAPI advapi32.RegEnumKeyExA(_In_ HKEY hKey,_In_ DWORD dwIndex,_Out_ LPTSTR lpName,_Inout_ LPDWORD lpcName,_Reserved_ LPDWORD lpReserved,_Inout_ LPTSTR lpClass,_Inout_opt_ LPDWORD lpcClass,_Out_opt_ PFILETIME lpftLastWriteTime)
HRESULT None None.StringCchCopyEx(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCchCopyExW(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCchCopyExA(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
BOOL WINAPI kernel32.FlushViewOfFile(_In_ LPCVOID lpBaseAddress,_In_ SIZE_T dwNumberOfBytesToFlush)
HRESULT None None.StringCbPrintfEx(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags,_In_ LPCTSTR pszFormat,_In_ ... None)
HRESULT None None.StringCbPrintfExW(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags,_In_ LPCTSTR pszFormat,_In_ ... None)
HRESULT None None.StringCbPrintfExA(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags,_In_ LPCTSTR pszFormat,_In_ ... None)
HRESULT None shlwapi.UrlEscapeSpaces(_In_ LPCTSTR pszURL,_Out_ LPTSTR pszEscaped,_Out_ LPDWORD pcchEscaped)
BOOL WINAPI kernel32.HeapFree(_In_ HANDLE hHeap,_In_ DWORD dwFlags,_In_ LPVOID lpMem)
HGLOBAL WINAPI kernel32.GlobalAlloc(_In_ UINT uFlags,_In_ SIZE_T dwBytes)
HRESULT None None.StringCchCat(_Inout_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc)
HRESULT None None.StringCchCatW(_Inout_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc)
HRESULT None None.StringCchCatA(_Inout_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc)
BOOL WINAPI kernel32.MapUserPhysicalPages(_In_ PVOID lpAddress,_In_ ULONG_PTR NumberOfPages,_In_ PULONG_PTR UserPfnArray)
uint32 None smiscsitargetprov.GetDefaultReplicationSettingData([in] uint16 ReplicationType,[out] string DefaultInstance)
LSTATUS None shlwapi.SHCopyKey(_In_ HKEY hkeySrc,_In_opt_ LPCTSTR pszSrcSubKey,_In_ HKEY hkeyDest,_Reserved_ DWORD fReserved)
LSTATUS None shlwapi.SHCopyKeyW(_In_ HKEY hkeySrc,_In_opt_ LPCTSTR pszSrcSubKey,_In_ HKEY hkeyDest,_Reserved_ DWORD fReserved)
LSTATUS None shlwapi.SHCopyKeyA(_In_ HKEY hkeySrc,_In_opt_ LPCTSTR pszSrcSubKey,_In_ HKEY hkeyDest,_Reserved_ DWORD fReserved)
HRESULT None None.StringCchCatNEx(_Inout_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_In_ size_t cchMaxAppend,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCchCatNExW(_Inout_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_In_ size_t cchMaxAppend,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCchCatNExA(_Inout_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_In_ size_t cchMaxAppend,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
PVOID WINAPI kernel32.MapViewOfFileFromApp(_In_ HANDLE hFileMappingObject,_In_ ULONG DesiredAccess,_In_ ULONG64 FileOffset,_In_ SIZE_T NumberOfBytesToMap)
LONG WINAPI advapi32.RegDeleteKeyEx(_In_ HKEY hKey,_In_ LPCTSTR lpSubKey,_In_ REGSAM samDesired,_Reserved_ DWORD Reserved)
LONG WINAPI advapi32.RegDeleteKeyExW(_In_ HKEY hKey,_In_ LPCTSTR lpSubKey,_In_ REGSAM samDesired,_Reserved_ DWORD Reserved)
LONG WINAPI advapi32.RegDeleteKeyExA(_In_ HKEY hKey,_In_ LPCTSTR lpSubKey,_In_ REGSAM samDesired,_Reserved_ DWORD Reserved)
HRESULT None None.StringCchPrintf(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszFormat,_In_ ... None)
HRESULT None None.StringCchPrintfW(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszFormat,_In_ ... None)
HRESULT None None.StringCchPrintfA(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszFormat,_In_ ... None)
BOOL None user32.LogicalToPhysicalPointForPerMonitorDPI(_In_ HWND hwnd,_Inout_ LPPOINT lpPoint)
HRESULT None None.GetFlags([out] DWORD *pdwFlags)
BOOL WINAPI kernel32.VirtualLock(_In_ LPVOID lpAddress,_In_ SIZE_T dwSize)
protected boolean None.IsInputChar(char charCode None)
LONG WINAPI advapi32.RegOverridePredefKey(_In_ HKEY hKey,_In_opt_ HKEY hNewHKey)
BOOLEAN CALLBACK None.SecureMemoryCacheCallback(_In_ PVOID Addr,_In_ SIZE_T Range)
BOOL WINAPI kernel32.InitOnceBeginInitialize(_Inout_ LPINIT_ONCE lpInitOnce,_In_ DWORD dwFlags,_Out_ PBOOL fPending,_Out_opt_ LPVOID *lpContext)
HRESULT None None.StringCbPrintf(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszFormat,_In_ ... None)
HRESULT None None.StringCbPrintfW(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszFormat,_In_ ... None)
HRESULT None None.StringCbPrintfA(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszFormat,_In_ ... None)
DWORD None iphlpapi.GetUdpStatisticsEx(_Out_ PMIB_UDPSTATS pStats,_In_ DWORD dwFamily)
uint32 None smiscsitargetprov.ConvertReplicationTypeToSyncType([in] uint16 ReplicationType,[out] uint16 SyncType,[out] uint16 Mode,[out] uint16 LocalOrRemote)
VOID WINAPI crypt32.CertFreeCertificateChain(_In_ PCCERT_CHAIN_CONTEXT pChainContext)
uint32 None smiscsitargetprov.GetSupportedFeatures([in] uint16 ReplicationType,[out] uint16 Features[])
protected void None.InvokePaintBackground(Control c None,PaintEventArgs e None)
BOOL WINAPI kernel32.VirtualProtect(_In_ LPVOID lpAddress,_In_ SIZE_T dwSize,_In_ DWORD flNewProtect,_Out_ PDWORD lpflOldProtect)
BOOL WINAPI kernel32.WritePrivateProfileStruct(_In_ LPCTSTR lpszSection,_In_ LPCTSTR lpszKey,_In_ LPVOID lpStruct,_In_ UINT uSizeStruct,_In_ LPCTSTR szFile)
BOOL WINAPI kernel32.WritePrivateProfileStructW(_In_ LPCTSTR lpszSection,_In_ LPCTSTR lpszKey,_In_ LPVOID lpStruct,_In_ UINT uSizeStruct,_In_ LPCTSTR szFile)
BOOL WINAPI kernel32.WritePrivateProfileStructA(_In_ LPCTSTR lpszSection,_In_ LPCTSTR lpszKey,_In_ LPVOID lpStruct,_In_ UINT uSizeStruct,_In_ LPCTSTR szFile)
protected void None.OnAutoSizeChanged(EventArgs e None)
BOOL WINAPI user32.AdjustWindowRectExForDpi(_Inout_ LPRECT lpRect,_In_ DWORD dwStyle,_In_ BOOL bMenu,_In_ DWORD dwExStyle,_In_ UINT dpi)
UINT WINAPI kernel32.GetWriteWatch(_In_ DWORD dwFlags,_In_ PVOID lpBaseAddress,_In_ SIZE_T dwRegionSize,_Out_ PVOID *lpAddresses,_Inout_ PULONG_PTR lpdwCount,_Out_ PULONG lpdwGranularity)
LONG WINAPI advapi32.RegSetKeyValue(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_opt_ LPCTSTR lpValueName,_In_ DWORD dwType,_In_opt_ LPCVOID lpData,_In_ DWORD cbData)
LONG WINAPI advapi32.RegSetKeyValueW(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_opt_ LPCTSTR lpValueName,_In_ DWORD dwType,_In_opt_ LPCVOID lpData,_In_ DWORD cbData)
LONG WINAPI advapi32.RegSetKeyValueA(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_opt_ LPCTSTR lpValueName,_In_ DWORD dwType,_In_opt_ LPCVOID lpData,_In_ DWORD cbData)
BOOL WINAPI user32.IsCharAlphaNumeric(_In_ TCHAR ch)
BOOL WINAPI user32.IsCharAlphaNumericW(_In_ TCHAR ch)
BOOL WINAPI user32.IsCharAlphaNumericA(_In_ TCHAR ch)
public PropertyItem None.GetPropertyItem(int propid None)
BOOL WINAPI kernel32.HeapValidate(_In_ HANDLE hHeap,_In_ DWORD dwFlags,_In_opt_ LPCVOID lpMem)
HRESULT None None.StringCbLength(_In_ LPCTSTR psz,_In_ size_t cbMax,_Out_ size_t *pcb)
HRESULT None None.StringCbLengthW(_In_ LPCTSTR psz,_In_ size_t cbMax,_Out_ size_t *pcb)
HRESULT None None.StringCbLengthA(_In_ LPCTSTR psz,_In_ size_t cbMax,_Out_ size_t *pcb)
HRESULT None None.StringCbVPrintf(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszFormat,_In_ va_list argList)
HRESULT None None.StringCbVPrintfW(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszFormat,_In_ va_list argList)
HRESULT None None.StringCbVPrintfA(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszFormat,_In_ va_list argList)
HRESULT None shlwapi.SHGetInverseCMAP(_Out_ BYTE *pbMap,_In_ ULONG cbMap)
HRESULT None None.GetTravelLog([out] ITravelLog **pptl)
private void None.textBox1_Validating(Object sender None,System.ComponentModel.CancelEventArgs e None)
BOOL None user32.PhysicalToLogicalPointForPerMonitorDPI(_In_ HWND hwnd,_Inout_ LPPOINT lpPoint)
HRESULT None None.StringCbPrintf_lEx(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_Out_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ ... None)
HRESULT None None.StringCbPrintf_lExW(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_Out_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ ... None)
HRESULT None None.StringCbPrintf_lExA(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_Out_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ ... None)
HRESULT None None.StringCbVPrintf_lEx(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_Out_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ va_list argList)
HRESULT None None.StringCbVPrintf_lExW(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_Out_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ va_list argList)
HRESULT None None.StringCbVPrintf_lExA(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_Out_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ va_list argList)
LSTATUS None shlwapi.SHRegOpenUSKey(_In_ LPCTSTR pszPath,_In_ REGSAM samDesired,_In_opt_ HUSKEY hRelativeUSKey,_Out_ PHUSKEY phNewUSKey,_In_ BOOL fIgnoreHKCU)
LSTATUS None shlwapi.SHRegOpenUSKeyW(_In_ LPCTSTR pszPath,_In_ REGSAM samDesired,_In_opt_ HUSKEY hRelativeUSKey,_Out_ PHUSKEY phNewUSKey,_In_ BOOL fIgnoreHKCU)
LSTATUS None shlwapi.SHRegOpenUSKeyA(_In_ LPCTSTR pszPath,_In_ REGSAM samDesired,_In_opt_ HUSKEY hRelativeUSKey,_Out_ PHUSKEY phNewUSKey,_In_ BOOL fIgnoreHKCU)
uint32 None smiscsitargetprov.GetSupportedWaitForCopyStates([in] uint16 ReplicationType,[in] uint16 MethodName,[out] uint16 SupportedCopyStates[])
uint32 None smiscsitargetprov.GetSupportedListOperations([in] uint16 ReplicationType,[in] uint16 SynchronizationType,[out] uint16 SupportedListOperations[])
uint32 None smiscsitargetprov.GetSupportedSettingsDefineStateOperations([in] uint16 ReplicationType,[out] uint16 SupportedOperations[])
HIMAGELIST None comctl32.ImageList_Read(LPSTREAM pstm None)
HRESULT None None.StringCchCopyN(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_In_ size_t cchSrc)
HRESULT None None.StringCchCopyNW(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_In_ size_t cchSrc)
HRESULT None None.StringCchCopyNA(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_In_ size_t cchSrc)
HRESULT None None.GetPalette([out] HPALETTE *hpal)
BOOL WINAPI user32.SystemParametersInfoForDpi(_In_ UINT uiAction,_In_ UINT uiParam,_Inout_ PVOID pvParam,_In_ UINT fWinIni,_In_ UINT dpi)
LONG WINAPI advapi32.RegSaveKeyEx(_In_ HKEY hKey,_In_ LPCTSTR lpFile,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ DWORD Flags)
LONG WINAPI advapi32.RegSaveKeyExW(_In_ HKEY hKey,_In_ LPCTSTR lpFile,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ DWORD Flags)
LONG WINAPI advapi32.RegSaveKeyExA(_In_ HKEY hKey,_In_ LPCTSTR lpFile,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ DWORD Flags)
PTSTR None shlwapi.StrCat(_Inout_ PTSTR psz1,_In_ PCTSTR psz2)
PTSTR None shlwapi.StrCatW(_Inout_ PTSTR psz1,_In_ PCTSTR psz2)
DPI_AWARENESS_CONTEXT WINAPI user32.SetThreadDpiAwarenessContext(_In_ DPI_AWARENESS_CONTEXT dpiContext)
private void None.button1_Click(Object sender None,System.EventArgs e None)
LONG WINAPI advapi32.RegDeleteValue(_In_ HKEY hKey,_In_opt_ LPCTSTR lpValueName)
LONG WINAPI advapi32.RegDeleteValueW(_In_ HKEY hKey,_In_opt_ LPCTSTR lpValueName)
LONG WINAPI advapi32.RegDeleteValueA(_In_ HKEY hKey,_In_opt_ LPCTSTR lpValueName)
protected void None.OnControlRemoved(ControlEventArgs e None)
HRESULT None None.StringCchCopyNEx(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_In_ size_t cchSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCchCopyNExW(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_In_ size_t cchSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCchCopyNExA(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_In_ size_t cchSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
protected void None.OnEnter(EventArgs e None)
BOOL WINAPI kernel32.WriteProfileSection(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpString)
BOOL WINAPI kernel32.WriteProfileSectionW(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpString)
BOOL WINAPI kernel32.WriteProfileSectionA(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpString)
BOOL WINAPI kernel32.HeapQueryInformation(_In_opt_ HANDLE HeapHandle,_In_ HEAP_INFORMATION_CLASS HeapInformationClass,_Out_ PVOID HeapInformation,_In_ SIZE_T HeapInformationLength,_Out_opt_ PSIZE_T ReturnLength)
HRESULT None None.SetFlags(DWORD dwFlags None,DWORD dwFlagMask None)
LONG WINAPI advapi32.RegQueryInfoKey(_In_ HKEY hKey,_Out_opt_ LPTSTR lpClass,_Inout_opt_ LPDWORD lpcClass,_Reserved_ LPDWORD lpReserved,_Out_opt_ LPDWORD lpcSubKeys,_Out_opt_ LPDWORD lpcMaxSubKeyLen,_Out_opt_ LPDWORD lpcMaxClassLen,_Out_opt_ LPDWORD lpcValues,_Out_opt_ LPDWORD lpcMaxValueNameLen,_Out_opt_ LPDWORD lpcMaxValueLen,_Out_opt_ LPDWORD lpcbSecurityDescriptor,_Out_opt_ PFILETIME lpftLastWriteTime)
LONG WINAPI advapi32.RegQueryInfoKeyW(_In_ HKEY hKey,_Out_opt_ LPTSTR lpClass,_Inout_opt_ LPDWORD lpcClass,_Reserved_ LPDWORD lpReserved,_Out_opt_ LPDWORD lpcSubKeys,_Out_opt_ LPDWORD lpcMaxSubKeyLen,_Out_opt_ LPDWORD lpcMaxClassLen,_Out_opt_ LPDWORD lpcValues,_Out_opt_ LPDWORD lpcMaxValueNameLen,_Out_opt_ LPDWORD lpcMaxValueLen,_Out_opt_ LPDWORD lpcbSecurityDescriptor,_Out_opt_ PFILETIME lpftLastWriteTime)
LONG WINAPI advapi32.RegQueryInfoKeyA(_In_ HKEY hKey,_Out_opt_ LPTSTR lpClass,_Inout_opt_ LPDWORD lpcClass,_Reserved_ LPDWORD lpReserved,_Out_opt_ LPDWORD lpcSubKeys,_Out_opt_ LPDWORD lpcMaxSubKeyLen,_Out_opt_ LPDWORD lpcMaxClassLen,_Out_opt_ LPDWORD lpcValues,_Out_opt_ LPDWORD lpcMaxValueNameLen,_Out_opt_ LPDWORD lpcMaxValueLen,_Out_opt_ LPDWORD lpcbSecurityDescriptor,_Out_opt_ PFILETIME lpftLastWriteTime)
protected void None.OnBackgroundImageChanged(EventArgs e None)
UINT None shell32.Shell_MergeMenus(_In_ HMENU hmDst,_In_ HMENU hmSrc,UINT uInsert None,UINT uIDAdjust None,UINT uIDAdjustMax None,ULONG uFlags None)
HRESULT None None.StringCbCopyN(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc,_In_ size_t cbSrc)
HRESULT None None.StringCbCopyNW(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc,_In_ size_t cbSrc)
HRESULT None None.StringCbCopyNA(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc,_In_ size_t cbSrc)
HRESULT None None.StringCchPrintf_l(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ ... None)
HRESULT None None.StringCchPrintf_lW(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ ... None)
HRESULT None None.StringCchPrintf_lA(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ ... None)
UINT WINAPI kernel32.LocalFlags(_In_ HLOCAL hMem)
HIMAGELIST None comctl32.ImageList_Duplicate(HIMAGELIST himl None)
LPVOID WINAPI kernel32.GlobalLock(_In_ HGLOBAL hMem)
BOOL WINAPI kernel32.HeapLock(_In_ HANDLE hHeap)
BOOL None shell32.SHInvokePrinterCommand(_In_opt_ HWND hwnd,UINT uAction None,_In_ LPCTSTR lpBuf1,_In_opt_ LPCTSTR lpBuf2,BOOL fModal None)
BOOL None shell32.SHInvokePrinterCommandW(_In_opt_ HWND hwnd,UINT uAction None,_In_ LPCTSTR lpBuf1,_In_opt_ LPCTSTR lpBuf2,BOOL fModal None)
BOOL None shell32.SHInvokePrinterCommandA(_In_opt_ HWND hwnd,UINT uAction None,_In_ LPCTSTR lpBuf1,_In_opt_ LPCTSTR lpBuf2,BOOL fModal None)
BOOL WINAPI kernel32.FlushFileBuffers(_In_ HANDLE hFile)
DWORD WINAPI kernel32.OfferVirtualMemory(_In_ PVOID VirtualAddress,_In_ SIZE_T Size,_In_ OFFER_PRIORITY Priority)
DPI_AWARENESS_CONTEXT WINAPI user32.GetWindowDpiAwarenessContext(_In_ HWND hwnd)
HRESULT None shlwapi.AssocQueryKey(_In_ ASSOCF flags,_In_ ASSOCKEY key,_In_ LPCTSTR pszAssoc,_In_ LPCTSTR pszExtra,_Out_ HKEY *phkeyOut)
HRESULT None shlwapi.AssocQueryKeyW(_In_ ASSOCF flags,_In_ ASSOCKEY key,_In_ LPCTSTR pszAssoc,_In_ LPCTSTR pszExtra,_Out_ HKEY *phkeyOut)
HRESULT None shlwapi.AssocQueryKeyA(_In_ ASSOCF flags,_In_ ASSOCKEY key,_In_ LPCTSTR pszAssoc,_In_ LPCTSTR pszExtra,_Out_ HKEY *phkeyOut)
BOOL WINAPI user32.SetDialogDpiChangeBehavior(HWND hDlg None,DIALOG_DPI_CHANGE_BEHAVIORS mask None,DIALOG_DPI_CHANGE_BEHAVIORS values None)
HRESULT WINAPI shcore.GetDpiForMonitor(_In_ HMONITOR hmonitor,_In_ MONITOR_DPI_TYPE dpiType,_Out_ UINT *dpiX,_Out_ UINT *dpiY)
HRESULT None None.StringCchGetsEx(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCchGetsExW(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCchGetsExA(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
HIMAGELIST None comctl32.ImageList_GetDragImage(POINT *ppt None,POINT *pptHotspot None)
BOOL WINAPI kernel32.IsBadStringPtr(_In_ LPCTSTR lpsz,_In_ UINT_PTR ucchMax)
BOOL WINAPI kernel32.IsBadStringPtrW(_In_ LPCTSTR lpsz,_In_ UINT_PTR ucchMax)
BOOL WINAPI kernel32.IsBadStringPtrA(_In_ LPCTSTR lpsz,_In_ UINT_PTR ucchMax)
HRESULT None None.StringCchVPrintf_lEx(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_Out_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ va_list argList)
HRESULT None None.StringCchVPrintf_lExW(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_Out_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ va_list argList)
HRESULT None None.StringCchVPrintf_lExA(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_Out_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ va_list argList)
BOOL WINAPI user32.IsCharLower(_In_ TCHAR ch)
BOOL WINAPI user32.IsCharLowerA(_In_ TCHAR ch)
HRESULT None None.StringCchGets(_Out_ LPTSTR pszDest,_In_ size_t cchDest)
HRESULT None None.StringCchGetsW(_Out_ LPTSTR pszDest,_In_ size_t cchDest)
HRESULT None None.StringCchGetsA(_Out_ LPTSTR pszDest,_In_ size_t cchDest)
HANDLE WINAPI kernel32.CreateFile(_In_ LPCTSTR lpFileName,_In_ DWORD dwDesiredAccess,_In_ DWORD dwShareMode,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ DWORD dwCreationDisposition,_In_ DWORD dwFlagsAndAttributes,_In_opt_ HANDLE hTemplateFile)
HANDLE WINAPI kernel32.CreateFileW(_In_ LPCTSTR lpFileName,_In_ DWORD dwDesiredAccess,_In_ DWORD dwShareMode,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ DWORD dwCreationDisposition,_In_ DWORD dwFlagsAndAttributes,_In_opt_ HANDLE hTemplateFile)
HANDLE WINAPI kernel32.CreateFileA(_In_ LPCTSTR lpFileName,_In_ DWORD dwDesiredAccess,_In_ DWORD dwShareMode,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ DWORD dwCreationDisposition,_In_ DWORD dwFlagsAndAttributes,_In_opt_ HANDLE hTemplateFile)
HRESULT None None.StringCchCopy(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc)
HRESULT None None.StringCchCopyW(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc)
HRESULT None None.StringCchCopyA(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc)
HANDLE WINAPI kernel32.HeapCreate(_In_ DWORD flOptions,_In_ SIZE_T dwInitialSize,_In_ SIZE_T dwMaximumSize)
LONG WINAPI advapi32.RegLoadKey(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_ LPCTSTR lpFile)
LONG WINAPI advapi32.RegLoadKeyW(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_ LPCTSTR lpFile)
LONG WINAPI advapi32.RegLoadKeyA(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_ LPCTSTR lpFile)
LSTATUS None shlwapi.SHSetValue(_In_ HKEY hkey,_In_opt_ LPCTSTR pszSubKey,_In_opt_ LPCTSTR pszValue,_In_ DWORD dwType,_In_opt_ LPCVOID pvData,_In_ DWORD cbData)
LSTATUS None shlwapi.SHSetValueW(_In_ HKEY hkey,_In_opt_ LPCTSTR pszSubKey,_In_opt_ LPCTSTR pszValue,_In_ DWORD dwType,_In_opt_ LPCVOID pvData,_In_ DWORD cbData)
LSTATUS None shlwapi.SHSetValueA(_In_ HKEY hkey,_In_opt_ LPCTSTR pszSubKey,_In_opt_ LPCTSTR pszValue,_In_ DWORD dwType,_In_opt_ LPCVOID pvData,_In_ DWORD cbData)
HRESULT None shell32.CompareIDs(LPARAM lParam None,PCUIDLIST_RELATIVE pidl1 None,PCUIDLIST_RELATIVE pidl2 None)
HANDLE WINAPI kernel32.CreateFileMappingNuma(_In_ HANDLE hFile,_In_opt_ LPSECURITY_ATTRIBUTES lpFileMappingAttributes,_In_ DWORD flProtect,_In_ DWORD dwMaximumSizeHigh,_In_ DWORD dwMaximumSizeLow,_In_opt_ LPCTSTR lpName,_In_ DWORD nndPreferred)
HANDLE WINAPI kernel32.CreateFileMappingNumaW(_In_ HANDLE hFile,_In_opt_ LPSECURITY_ATTRIBUTES lpFileMappingAttributes,_In_ DWORD flProtect,_In_ DWORD dwMaximumSizeHigh,_In_ DWORD dwMaximumSizeLow,_In_opt_ LPCTSTR lpName,_In_ DWORD nndPreferred)
HANDLE WINAPI kernel32.CreateFileMappingNumaA(_In_ HANDLE hFile,_In_opt_ LPSECURITY_ATTRIBUTES lpFileMappingAttributes,_In_ DWORD flProtect,_In_ DWORD dwMaximumSizeHigh,_In_ DWORD dwMaximumSizeLow,_In_opt_ LPCTSTR lpName,_In_ DWORD nndPreferred)
LSTATUS None shlwapi.SHDeleteEmptyKey(_In_ HKEY hkey,_In_opt_ LPCTSTR pszSubKey)
LSTATUS None shlwapi.SHDeleteEmptyKeyW(_In_ HKEY hkey,_In_opt_ LPCTSTR pszSubKey)
LSTATUS None shlwapi.SHDeleteEmptyKeyA(_In_ HKEY hkey,_In_opt_ LPCTSTR pszSubKey)
HRESULT None None.StringCbCat(_Inout_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc)
HRESULT None None.StringCbCatW(_Inout_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc)
HRESULT None None.StringCbCatA(_Inout_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc)
HRESULT None None.StringCbVPrintf_l(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ va_list argList)
HRESULT None None.StringCbVPrintf_lW(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ va_list argList)
HRESULT None None.StringCbVPrintf_lA(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ va_list argList)
BOOL WINAPI advapi32.CryptAcquireContext(_Out_ HCRYPTPROV *phProv,_In_ LPCTSTR pszContainer,_In_ LPCTSTR pszProvider,_In_ DWORD dwProvType,_In_ DWORD dwFlags)
BOOL WINAPI advapi32.CryptAcquireContextW(_Out_ HCRYPTPROV *phProv,_In_ LPCTSTR pszContainer,_In_ LPCTSTR pszProvider,_In_ DWORD dwProvType,_In_ DWORD dwFlags)
BOOL WINAPI advapi32.CryptAcquireContextA(_Out_ HCRYPTPROV *phProv,_In_ LPCTSTR pszContainer,_In_ LPCTSTR pszProvider,_In_ DWORD dwProvType,_In_ DWORD dwFlags)
LONG WINAPI advapi32.RegRestoreKey(_In_ HKEY hKey,_In_ LPCTSTR lpFile,_In_ DWORD dwFlags)
LONG WINAPI advapi32.RegRestoreKeyW(_In_ HKEY hKey,_In_ LPCTSTR lpFile,_In_ DWORD dwFlags)
LONG WINAPI advapi32.RegRestoreKeyA(_In_ HKEY hKey,_In_ LPCTSTR lpFile,_In_ DWORD dwFlags)
HRESULT None None.GetParentState([out] DWORD *pdwState)
BOOL WINAPI wintrust.WTHelperCertIsSelfSigned(_In_ DWORD dwEncoding,_In_ CERT_INFO *pCert)
DWORD WINAPI user32.CharLowerBuff(_Inout_ LPTSTR lpsz,_In_ DWORD cchLength)
DWORD WINAPI user32.CharLowerBuffW(_Inout_ LPTSTR lpsz,_In_ DWORD cchLength)
DWORD WINAPI user32.CharLowerBuffA(_Inout_ LPTSTR lpsz,_In_ DWORD cchLength)
void None None.proc1(void None None)
protected void None.OnEnter(EventArgs e None)
HRESULT None None.StringCbCatNEx(_Inout_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc,_In_ size_t cbMaxAppend,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCbCatNExW(_Inout_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc,_In_ size_t cbMaxAppend,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCbCatNExA(_Inout_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc,_In_ size_t cbMaxAppend,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags)
LPVOID WINAPI kernel32.HeapAlloc(_In_ HANDLE hHeap,_In_ DWORD dwFlags,_In_ SIZE_T dwBytes)
HRESULT None None.Clone([out] IEnumOLEVERB **ppenum)
LPSTR WINAPI user32.CharNextExA(_In_ WORD CodePage,_In_ LPCSTR lpCurrentChar,_In_ DWORD dwFlags)
LPSTR WINAPI user32.CharNextExA(_In_ WORD CodePage,_In_ LPCSTR lpCurrentChar,_In_ DWORD dwFlags)
BOOL WINAPI kernel32.VirtualFreeEx(_In_ HANDLE hProcess,_In_ LPVOID lpAddress,_In_ SIZE_T dwSize,_In_ DWORD dwFreeType)
LPTSTR WINAPI user32.CharUpper(_Inout_ LPTSTR lpsz)
LPTSTR WINAPI user32.CharUpperW(_Inout_ LPTSTR lpsz)
LPTSTR WINAPI user32.CharUpperA(_Inout_ LPTSTR lpsz)
protected void None.OnParentChanged(EventArgs e None)
PSTR None shlwapi.StrFormatByteSize64(LONGLONG qdw None,_Out_ PSTR pszBuf,UINT cchBuf None)
PSTR None shlwapi.StrFormatByteSize64A(LONGLONG qdw None,_Out_ PSTR pszBuf,UINT cchBuf None)
PWSTR None shlwapi.StrChrNIW(_In_ PCWSTR pszStart,WCHAR wMatch None,UINT cchMax None)
LONG WINAPI advapi32.RegSetValue(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_ DWORD dwType,_In_ LPCTSTR lpData,_In_ DWORD cbData)
LONG WINAPI advapi32.RegSetValueW(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_ DWORD dwType,_In_ LPCTSTR lpData,_In_ DWORD cbData)
LONG WINAPI advapi32.RegSetValueA(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_ DWORD dwType,_In_ LPCTSTR lpData,_In_ DWORD cbData)
LPSTR WINAPI user32.CharPrevExA(_In_ WORD CodePage,_In_ LPCSTR lpStart,_In_ LPCSTR lpCurrentChar,_In_ DWORD dwFlags)
LPSTR WINAPI user32.CharPrevExA(_In_ WORD CodePage,_In_ LPCSTR lpStart,_In_ LPCSTR lpCurrentChar,_In_ DWORD dwFlags)
HRESULT None None.StringCbPrintf_l(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ ... None)
HRESULT None None.StringCbPrintf_lW(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ ... None)
HRESULT None None.StringCbPrintf_lA(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ ... None)
LPVOID WINAPI kernel32.MapViewOfFileExNuma(_In_ HANDLE hFileMappingObject,_In_ DWORD dwDesiredAccess,_In_ DWORD dwFileOffsetHigh,_In_ DWORD dwFileOffsetLow,_In_ SIZE_T dwNumberOfBytesToMap,_In_opt_ LPVOID lpBaseAddress,_In_ DWORD nndPreferred)
LPTSTR WINAPI user32.CharPrev(_In_ LPCTSTR lpszStart,_In_ LPCTSTR lpszCurrent)
LPTSTR WINAPI user32.CharPrevW(_In_ LPCTSTR lpszStart,_In_ LPCTSTR lpszCurrent)
LPTSTR WINAPI user32.CharPrevA(_In_ LPCTSTR lpszStart,_In_ LPCTSTR lpszCurrent)
private void None.Link_Clicked(Object sender None,System.Windows.Forms.LinkClickedEventArgs e None)
DWORD WINAPI user32.CharUpperBuff(_Inout_ LPTSTR lpsz,_In_ DWORD cchLength)
DWORD WINAPI user32.CharUpperBuffW(_Inout_ LPTSTR lpsz,_In_ DWORD cchLength)
DWORD WINAPI user32.CharUpperBuffA(_Inout_ LPTSTR lpsz,_In_ DWORD cchLength)
BOOL None shell32.StrRetToStrN(_Out_ LPTSTR pszOut,_In_ UINT cchOut,_Inout_ LPSTRRET pStrRet,_In_ LPCITEMIDLIST pidl)
LSTATUS None shlwapi.SHRegDeleteEmptyUSKey(_In_ HUSKEY hUSKey,_In_ LPCSTR pszValue,_In_ SHREGDEL_FLAGS delRegFlags)
LSTATUS None shlwapi.SHRegDeleteEmptyUSKeyW(_In_ HUSKEY hUSKey,_In_ LPCSTR pszValue,_In_ SHREGDEL_FLAGS delRegFlags)
LSTATUS None shlwapi.SHRegDeleteEmptyUSKeyA(_In_ HUSKEY hUSKey,_In_ LPCSTR pszValue,_In_ SHREGDEL_FLAGS delRegFlags)
HRESULT None None.StringCchVPrintf(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszFormat,_In_ va_list argList)
HRESULT None None.StringCchVPrintfW(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszFormat,_In_ va_list argList)
HRESULT None None.StringCchVPrintfA(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszFormat,_In_ va_list argList)
HRESULT None None.UnalignedStringCchLength(_In_ LPCTSTR psz,_In_ size_t cchMax,_Out_opt_ size_t *pcchLength)
HRESULT None None.UnalignedStringCchLengthW(_In_ LPCTSTR psz,_In_ size_t cchMax,_Out_opt_ size_t *pcchLength)
HRESULT None None.StringCchLengthA(_In_ LPCTSTR psz,_In_ size_t cchMax,_Out_opt_ size_t *pcchLength)
BOOL WINAPI kernel32.IsBadStringPtr(_In_ LPCTSTR lpsz,_In_ UINT_PTR ucchMax)
BOOL WINAPI kernel32.IsBadStringPtrW(_In_ LPCTSTR lpsz,_In_ UINT_PTR ucchMax)
BOOL WINAPI kernel32.IsBadStringPtrA(_In_ LPCTSTR lpsz,_In_ UINT_PTR ucchMax)
BOOL None comctl32.ImageList_SetImageCount(_In_ HIMAGELIST himl,_In_ UINT uNewCount)
protected void None.OnBackColorChanged(EventArgs e None)
LSTATUS None shlwapi.SHRegEnumUSKey(_In_ HUSKEY hUSKey,_In_ DWORD dwIndex,_Out_ LPTSTR pszName,_Inout_ LPDWORD pcchName,_In_ SHREGENUM_FLAGS enumRegFlags)
LSTATUS None shlwapi.SHRegEnumUSKeyW(_In_ HUSKEY hUSKey,_In_ DWORD dwIndex,_Out_ LPTSTR pszName,_Inout_ LPDWORD pcchName,_In_ SHREGENUM_FLAGS enumRegFlags)
LSTATUS None shlwapi.SHRegEnumUSKeyA(_In_ HUSKEY hUSKey,_In_ DWORD dwIndex,_Out_ LPTSTR pszName,_Inout_ LPDWORD pcchName,_In_ SHREGENUM_FLAGS enumRegFlags)
protected void None.OnEnter(EventArgs e None)
private void None.wrapContentsCheckBox_CheckedChanged(Object sender None,System.EventArgs e None)
LPSTR WINAPI user32.CharNextExA(_In_ WORD CodePage,_In_ LPCSTR lpCurrentChar,_In_ DWORD dwFlags)
LPSTR WINAPI user32.CharNextExA(_In_ WORD CodePage,_In_ LPCSTR lpCurrentChar,_In_ DWORD dwFlags)
BOOL WINAPI api-ms-win-core-version-l1-1-0.VerQueryValue(_In_ LPCVOID pBlock,_In_ LPCTSTR lpSubBlock,_Out_ LPVOID *lplpBuffer,_Out_ PUINT puLen)
BOOL WINAPI api-ms-win-core-version-l1-1-0.VerQueryValueW(_In_ LPCVOID pBlock,_In_ LPCTSTR lpSubBlock,_Out_ LPVOID *lplpBuffer,_Out_ PUINT puLen)
BOOL WINAPI api-ms-win-core-version-l1-1-0.VerQueryValueA(_In_ LPCVOID pBlock,_In_ LPCTSTR lpSubBlock,_Out_ LPVOID *lplpBuffer,_Out_ PUINT puLen)
protected void None.OnBackgroundImageLayoutChanged(EventArgs e None)
public DragDropEffects None.DoDragDrop(Object data None,DragDropEffects allowedEffects None)
private void None.listBox1_DrawItem(Object sender None,System.Windows.Forms.DrawItemEventArgs e None)
COLORREF None comctl32.ImageList_SetBkColor(_In_ HIMAGELIST himl,_In_ COLORREF clrBk)
HRESULT None None.StringCchCatN(_Inout_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_In_ size_t cchMaxAppend)
HRESULT None None.StringCchCatNW(_Inout_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_In_ size_t cchMaxAppend)
HRESULT None None.StringCchCatNA(_Inout_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_In_ size_t cchMaxAppend)
HRESULT None None.StringCbVPrintfEx(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags,_In_ LPCTSTR pszFormat,_In_ va_list argList)
HRESULT None None.StringCbVPrintfExW(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags,_In_ LPCTSTR pszFormat,_In_ va_list argList)
HRESULT None None.StringCbVPrintfExA(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags,_In_ LPCTSTR pszFormat,_In_ va_list argList)
LRESULT WINAPI user32.DefWindowProc(_In_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
LRESULT WINAPI user32.DefWindowProcW(_In_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
LRESULT WINAPI user32.DefWindowProcA(_In_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
HGLOBAL WINAPI kernel32.GlobalAlloc(_In_ UINT uFlags,_In_ SIZE_T dwBytes)
BOOL WINAPI user32.OemToChar(_In_ LPCSTR lpszSrc,_Out_ LPTSTR lpszDst)
BOOL WINAPI user32.OemToCharW(_In_ LPCSTR lpszSrc,_Out_ LPTSTR lpszDst)
BOOL WINAPI user32.OemToCharA(_In_ LPCSTR lpszSrc,_Out_ LPTSTR lpszDst)
BOOL WINAPI user32.CharToOemBuff(_In_ LPCTSTR lpszSrc,_Out_ LPSTR lpszDst,_In_ DWORD cchDstLength)
BOOL WINAPI user32.CharToOemBuffW(_In_ LPCTSTR lpszSrc,_Out_ LPSTR lpszDst,_In_ DWORD cchDstLength)
BOOL WINAPI user32.CharToOemBuffA(_In_ LPCTSTR lpszSrc,_Out_ LPSTR lpszDst,_In_ DWORD cchDstLength)
HRESULT None None.StringCchVPrintf(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszFormat,_In_ va_list argList)
HRESULT None None.StringCchVPrintfW(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszFormat,_In_ va_list argList)
HRESULT None None.StringCchVPrintfA(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszFormat,_In_ va_list argList)
DWORD WINAPI shlwapi.SHGetAssocKeys(_In_ IQueryAssociations *pqa,_Out_ HKEY *rgKeys,DWORD cKeys None)
HRESULT None None.StringCbCat(_Inout_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc)
HRESULT None None.StringCbCatW(_Inout_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc)
HRESULT None None.StringCbCatA(_Inout_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc)
BOOL None None.SUCCEEDED(HRESULT hr None)
LSTATUS None shlwapi.SHQueryInfoKey(_In_ HKEY hkey,_Out_opt_ LPDWORD pcSubKeys,_Out_opt_ LPDWORD pcchMaxSubKeyLen,_Out_opt_ LPDWORD pcValues,_Out_opt_ LPDWORD pcchMaxValueNameLen)
LSTATUS None shlwapi.SHQueryInfoKeyW(_In_ HKEY hkey,_Out_opt_ LPDWORD pcSubKeys,_Out_opt_ LPDWORD pcchMaxSubKeyLen,_Out_opt_ LPDWORD pcValues,_Out_opt_ LPDWORD pcchMaxValueNameLen)
LSTATUS None shlwapi.SHQueryInfoKeyA(_In_ HKEY hkey,_Out_opt_ LPDWORD pcSubKeys,_Out_opt_ LPDWORD pcchMaxSubKeyLen,_Out_opt_ LPDWORD pcValues,_Out_opt_ LPDWORD pcchMaxValueNameLen)
LSTATUS None shlwapi.SHRegQueryInfoUSKey(_In_ HUSKEY hUSKey,_Out_opt_ LPDWORD pcSubKeys,_Out_opt_ LPDWORD pcchMaxSubKeyLen,_Out_opt_ LPDWORD pcValues,_Out_opt_ LPDWORD pcchMaxValueNameLen,_In_ SHREGENUM_FLAGS enumRegFlags)
LSTATUS None shlwapi.SHRegQueryInfoUSKeyW(_In_ HUSKEY hUSKey,_Out_opt_ LPDWORD pcSubKeys,_Out_opt_ LPDWORD pcchMaxSubKeyLen,_Out_opt_ LPDWORD pcValues,_Out_opt_ LPDWORD pcchMaxValueNameLen,_In_ SHREGENUM_FLAGS enumRegFlags)
LSTATUS None shlwapi.SHRegQueryInfoUSKeyA(_In_ HUSKEY hUSKey,_Out_opt_ LPDWORD pcSubKeys,_Out_opt_ LPDWORD pcchMaxSubKeyLen,_Out_opt_ LPDWORD pcValues,_Out_opt_ LPDWORD pcchMaxValueNameLen,_In_ SHREGENUM_FLAGS enumRegFlags)
LSTATUS None shlwapi.SHRegSetPath(_In_ HKEY hkey,_In_ LPCTSTR pszSubkey,_In_ LPCTSTR pszValue,_In_ LPCTSTR pszPath,DWORD dwFlags None)
LSTATUS None shlwapi.SHRegSetPathW(_In_ HKEY hkey,_In_ LPCTSTR pszSubkey,_In_ LPCTSTR pszValue,_In_ LPCTSTR pszPath,DWORD dwFlags None)
LSTATUS None shlwapi.SHRegSetPathA(_In_ HKEY hkey,_In_ LPCTSTR pszSubkey,_In_ LPCTSTR pszValue,_In_ LPCTSTR pszPath,DWORD dwFlags None)
BOOL WINAPI api-ms-win-core-version-l1-1-0.GetFileVersionInfo(_In_ LPCTSTR lptstrFilename,_Reserved_ DWORD dwHandle,_In_ DWORD dwLen,_Out_ LPVOID lpData)
BOOL WINAPI api-ms-win-core-version-l1-1-0.GetFileVersionInfoW(_In_ LPCTSTR lptstrFilename,_Reserved_ DWORD dwHandle,_In_ DWORD dwLen,_Out_ LPVOID lpData)
BOOL WINAPI api-ms-win-core-version-l1-1-0.GetFileVersionInfoA(_In_ LPCTSTR lptstrFilename,_Reserved_ DWORD dwHandle,_In_ DWORD dwLen,_Out_ LPVOID lpData)
ULONG WINAPI iphlpapi.GetAdaptersAddresses(_In_ ULONG Family,_In_ ULONG Flags,_In_ PVOID Reserved,_Inout_ PIP_ADAPTER_ADDRESSES AdapterAddresses,_Inout_ PULONG SizePointer)
private void None.listDragTarget_DragOver(Object sender None,System.Windows.Forms.DragEventArgs e None)
public Size None.GetPreferredSize(Size proposedSize None)
DWORD WINAPI api-ms-win-core-version-l1-1-0.VerFindFile(_In_ DWORD dwFlags,_In_ LPCTSTR szFileName,_In_opt_ LPCTSTR szWinDir,_In_ LPCTSTR szAppDir,_Out_ LPWSTR szCurDir,_Inout_ PUINT lpuCurDirLen,_Out_ LPTSTR szDestDir,_Inout_ PUINT lpuDestDirLen)
DWORD WINAPI api-ms-win-core-version-l1-1-0.VerFindFileW(_In_ DWORD dwFlags,_In_ LPCTSTR szFileName,_In_opt_ LPCTSTR szWinDir,_In_ LPCTSTR szAppDir,_Out_ LPWSTR szCurDir,_Inout_ PUINT lpuCurDirLen,_Out_ LPTSTR szDestDir,_Inout_ PUINT lpuDestDirLen)
DWORD WINAPI api-ms-win-core-version-l1-1-0.VerFindFileA(_In_ DWORD dwFlags,_In_ LPCTSTR szFileName,_In_opt_ LPCTSTR szWinDir,_In_ LPCTSTR szAppDir,_Out_ LPWSTR szCurDir,_Inout_ PUINT lpuCurDirLen,_Out_ LPTSTR szDestDir,_Inout_ PUINT lpuDestDirLen)
HRESULT None None.StringCchCatEx(_Inout_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCchCatExW(_Inout_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCchCatExA(_Inout_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
private void None.AboutDialog_Load(Object sender None,EventArgs e None)
LSTATUS None shlwapi.SHGetValue(_In_ HKEY hkey,_In_opt_ LPCTSTR pszSubKey,_In_opt_ LPCTSTR pszValue,_Out_opt_ LPDWORD pdwType,_Out_opt_ LPVOID pvData,_Inout_opt_ LPDWORD pcbData)
LSTATUS None shlwapi.SHGetValueW(_In_ HKEY hkey,_In_opt_ LPCTSTR pszSubKey,_In_opt_ LPCTSTR pszValue,_Out_opt_ LPDWORD pdwType,_Out_opt_ LPVOID pvData,_Inout_opt_ LPDWORD pcbData)
LSTATUS None shlwapi.SHGetValueA(_In_ HKEY hkey,_In_opt_ LPCTSTR pszSubKey,_In_opt_ LPCTSTR pszValue,_Out_opt_ LPDWORD pdwType,_Out_opt_ LPVOID pvData,_Inout_opt_ LPDWORD pcbData)
PVOID None kernel32.MapViewOfFile2(_In_ HANDLE FileMappingHandle,_In_ HANDLE ProcessHandle,_In_ ULONG64 Offset,_In_opt_ PVOID BaseAddress,_In_ SIZE_T ViewSize,_In_ ULONG AllocationType,_In_ ULONG PageProtection)
DIALOG_DPI_CHANGE_BEHAVIORS WINAPI user32.GetDialogDpiChangeBehavior(HWDN hDlg None)
HRESULT None None.GetSourceMoniker([out] IMoniker **ppmk)
BOOL WINAPI user32.CharToOem(_In_ LPCTSTR lpszSrc,_Out_ LPSTR lpszDst)
BOOL WINAPI user32.CharToOemW(_In_ LPCTSTR lpszSrc,_Out_ LPSTR lpszDst)
BOOL WINAPI user32.CharToOemA(_In_ LPCTSTR lpszSrc,_Out_ LPSTR lpszDst)
private void None.listBox1_DrawItem(Object sender None,System.Windows.Forms.DrawItemEventArgs e None)
BOOL WINAPI user32.IsCharUpper(_In_ TCHAR ch)
BOOL WINAPI user32.IsCharUpperW(_In_ TCHAR ch)
BOOL WINAPI user32.IsCharUpperA(_In_ TCHAR ch)
private void None.ShowPropertiesOfSlateBlue(PaintEventArgs e None)
LSTATUS None shlwapi.SHRegDeleteUSValue(_In_ HUSKEY hUSKey,_In_ LPCTSTR pszValue,_In_ SHREGDEL_FLAGS delRegFlags)
LSTATUS None shlwapi.SHRegDeleteUSValueW(_In_ HUSKEY hUSKey,_In_ LPCTSTR pszValue,_In_ SHREGDEL_FLAGS delRegFlags)
LSTATUS None shlwapi.SHRegDeleteUSValueA(_In_ HUSKEY hUSKey,_In_ LPCTSTR pszValue,_In_ SHREGDEL_FLAGS delRegFlags)
protected void None.OnGotFocus(EventArgs e None)
BOOL None shlwapi.ChrCmpI(_In_ TCHAR w1,_In_ TCHAR w2)
BOOL None shlwapi.ChrCmpIW(_In_ TCHAR w1,_In_ TCHAR w2)
BOOL None shlwapi.ChrCmpIA(_In_ TCHAR w1,_In_ TCHAR w2)
PTSTR None shlwapi.StrChr(_In_ PTSTR pszStart,TCHAR wMatch None)
PTSTR None shlwapi.StrChrW(_In_ PTSTR pszStart,TCHAR wMatch None)
PTSTR None shlwapi.StrChrA(_In_ PTSTR pszStart,TCHAR wMatch None)
BOOLEAN WINAPI kernel32.Wow64EnableWow64FsRedirection(_In_ BOOLEAN Wow64FsEnableRedirection)
LPTSTR WINAPI user32.CharLower(_Inout_ LPTSTR lpsz)
LPTSTR WINAPI user32.CharLowerW(_Inout_ LPTSTR lpsz)
LPTSTR WINAPI user32.CharLowerA(_Inout_ LPTSTR lpsz)
LSTATUS None shlwapi.SHEnumKeyEx(_In_ HKEY hkey,DWORD dwIndex None,LPTSTR pszName None,_In_ LPDWORD pcchName)
LSTATUS None shlwapi.SHEnumKeyExW(_In_ HKEY hkey,DWORD dwIndex None,LPTSTR pszName None,_In_ LPDWORD pcchName)
LSTATUS None shlwapi.SHEnumKeyExA(_In_ HKEY hkey,DWORD dwIndex None,LPTSTR pszName None,_In_ LPDWORD pcchName)
HRESULT None shlwapi.AssocQueryString(_In_ ASSOCF flags,_In_ ASSOCSTR str,_In_ LPCTSTR pszAssoc,_In_opt_ LPCTSTR pszExtra,_Out_opt_ LPTSTR pszOut,_Inout_ DWORD *pcchOut)
HRESULT None shlwapi.AssocQueryStringW(_In_ ASSOCF flags,_In_ ASSOCSTR str,_In_ LPCTSTR pszAssoc,_In_opt_ LPCTSTR pszExtra,_Out_opt_ LPTSTR pszOut,_Inout_ DWORD *pcchOut)
HRESULT None shlwapi.AssocQueryStringA(_In_ ASSOCF flags,_In_ ASSOCSTR str,_In_ LPCTSTR pszAssoc,_In_opt_ LPCTSTR pszExtra,_Out_opt_ LPTSTR pszOut,_Inout_ DWORD *pcchOut)
BOOL WINAPI api-ms-win-core-version-l1-1-0.GetFileVersionInfoEx(_In_ DWORD dwFlags,_In_ LPCTSTR lptstrFilename,_Reserved_ DWORD dwHandle,_In_ DWORD dwLen,_Out_ LPVOID lpData)
BOOL WINAPI api-ms-win-core-version-l1-1-0.GetFileVersionInfoExW(_In_ DWORD dwFlags,_In_ LPCTSTR lptstrFilename,_Reserved_ DWORD dwHandle,_In_ DWORD dwLen,_Out_ LPVOID lpData)
BOOL WINAPI api-ms-win-core-version-l1-1-0.GetFileVersionInfoExA(_In_ DWORD dwFlags,_In_ LPCTSTR lptstrFilename,_Reserved_ DWORD dwHandle,_In_ DWORD dwLen,_Out_ LPVOID lpData)
HRESULT None shell32.GetCurrentInfo(LPFOLDERSETTINGS lpfs None)
HRESULT None None.GetSourceDisplayName([out] LPOLESTR *ppszDisplayName)
protected void None.OnResize(EventArgs eventargs None)
BOOL WINAPI kernel32.VirtualUnlock(_In_ LPVOID lpAddress,_In_ SIZE_T dwSize)
typedef None shell32.BOOL(* LPFNADDPROPSHEETPAGE None)
BOOL WINAPI kernel32.GetFileTime(_In_ HANDLE hFile,_Out_opt_ LPFILETIME lpCreationTime,_Out_opt_ LPFILETIME lpLastAccessTime,_Out_opt_ LPFILETIME lpLastWriteTime)
PSTR None shlwapi.StrFormatByteSize64(LONGLONG qdw None,_Out_ PSTR pszBuf,UINT cchBuf None)
PSTR None shlwapi.StrFormatByteSize64A(LONGLONG qdw None,_Out_ PSTR pszBuf,UINT cchBuf None)
protected void None.OnParentVisibleChanged(EventArgs e None)
BOOL WINAPI advapi32.EncryptionDisable(_In_ LPCWSTR DirPath,_In_ BOOL Disable)
uint32 None ncserverpsprovider.InstallUpdates([in] string UpdateIds,[out] string AllUpdateIds)
public void None.SaveFile(Stream data None,RichTextBoxStreamType fileType None)
uint32 None ncserverpsprovider.GetRunningManifestVersion([out] string RunningManifestVersion)
DWORD None shlwapi.SHQueryValueEx(_In_ HKEY hkey,_In_opt_ LPCTSTR pszValue,LPDWORD pdwReserved None,_Out_opt_ LPDWORD pdwType,_Out_opt_ LPVOID pvData,_Inout_opt_ LPDWORD pcbData)
DWORD None shlwapi.SHQueryValueExW(_In_ HKEY hkey,_In_opt_ LPCTSTR pszValue,LPDWORD pdwReserved None,_Out_opt_ LPDWORD pdwType,_Out_opt_ LPVOID pvData,_Inout_opt_ LPDWORD pcbData)
DWORD None shlwapi.SHQueryValueExA(_In_ HKEY hkey,_In_opt_ LPCTSTR pszValue,LPDWORD pdwReserved None,_Out_opt_ LPDWORD pdwType,_Out_opt_ LPVOID pvData,_Inout_opt_ LPDWORD pcbData)
LSTATUS None shlwapi.SHDeleteKey(_In_ HKEY hkey,_In_opt_ LPCTSTR pszSubKey)
LSTATUS None shlwapi.SHDeleteKeyW(_In_ HKEY hkey,_In_opt_ LPCTSTR pszSubKey)
LSTATUS None shlwapi.SHDeleteKeyA(_In_ HKEY hkey,_In_opt_ LPCTSTR pszSubKey)
protected void None.OnParentVisibleChanged(EventArgs e None)
private void None.MyForm_Layout(Object sender None,System.Windows.Forms.LayoutEventArgs e None)
uint32 None ramgmtpsprovider.Set([in] uint8 SslCertificate[],[in] string ComputerName,[in] string InternetInterface,[in] string InternalInterface,[in] uint64 CapacityKbps,[in] boolean UseHttp,[in] boolean Force,[in] boolean PassThru,[out] RemoteAccessCommon cmdletOutput)
private void None.comboBox1_SelectedIndexChanged(Object sender None,System.EventArgs e None)
HANDLE WINAPI kernel32.FindFirstFile(_In_ LPCTSTR lpFileName,_Out_ LPWIN32_FIND_DATA lpFindFileData)
HANDLE WINAPI kernel32.FindFirstFileW(_In_ LPCTSTR lpFileName,_Out_ LPWIN32_FIND_DATA lpFindFileData)
HANDLE WINAPI kernel32.FindFirstFileA(_In_ LPCTSTR lpFileName,_Out_ LPWIN32_FIND_DATA lpFindFileData)
public void None.SetBounds(int x None,int y None,int width None,int height None,BoundsSpecified specified None)
DIALOG_DPI_CHANGE_BEHAVIORS WINAPI user32.GetDialogDpiChangeBehavior(HWDN hDlg None)
BOOL WINAPI kernel32.GetFileBandwidthReservation(_In_ HANDLE hFile,_Out_ LPDWORD lpPeriodMilliseconds,_Out_ LPDWORD lpBytesPerPeriod,_Out_ LPBOOL pDiscardable,_Out_ LPDWORD lpTransferSize,_Out_ LPDWORD lpNumOutstandingRequests)
private void None.Menu_Copy(Object sender None,System.EventArgs e None)
LSTATUS None shlwapi.SHRegCloseUSKey(_In_ HUSKEY hUSKey)
PSTR None shlwapi.StrFormatByteSizeA(DWORD dw None,_Out_ PSTR pszBuf,UINT cchBuf None)
BOOL WINAPI kernel32.SetFileAttributesTransacted(_In_ LPCTSTR lpFileName,_In_ DWORD dwFileAttributes,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.SetFileAttributesTransactedW(_In_ LPCTSTR lpFileName,_In_ DWORD dwFileAttributes,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.SetFileAttributesTransactedA(_In_ LPCTSTR lpFileName,_In_ DWORD dwFileAttributes,_In_ HANDLE hTransaction)
private void None.textBox1_Enter(Object sender None,System.EventArgs e None)
public boolean None.IsValid(Object value None)
private void None.Menu_Copy(Object sender None,System.EventArgs e None)
BOOL None None.Header_GetUnicodeFormat(HWND hwnd None)
protected void None.ScaleCore(float dx None,float dy None)
private void None.currencyTextBox_TextChanged(Object sender None,EventArgs e None)
private void None.Link_Clicked(Object sender None,System.Windows.Forms.LinkClickedEventArgs e None)
DWORD WINAPI advapi32.RemoveUsersFromEncryptedFile(_In_ LPCWSTR lpFileName,_In_ PENCRYPTION_CERTIFICATE_HASH_LIST pHashes)
DWORD WINAPI kernel32.GetCompressedFileSizeTransacted(_In_ LPCTSTR lpFileName,_Out_opt_ LPDWORD lpFileSizeHigh,_In_ HANDLE hTransaction)
DWORD WINAPI kernel32.GetCompressedFileSizeTransactedW(_In_ LPCTSTR lpFileName,_Out_opt_ LPDWORD lpFileSizeHigh,_In_ HANDLE hTransaction)
DWORD WINAPI kernel32.GetCompressedFileSizeTransactedA(_In_ LPCTSTR lpFileName,_Out_opt_ LPDWORD lpFileSizeHigh,_In_ HANDLE hTransaction)
HRESULT None shlwapi.StrRetToBSTR(_Inout_ STRRET *pstr,_In_ PCUITEMID_CHILD pidl,_Out_ BSTR *pbstr)
NTSTATUS WINAPI ntdll.RtlLocalTimeToSystemTime(_In_ PLARGE_INTEGER LocalTime,_Out_ PLARGE_INTEGER SystemTime)
HRESULT None shlwapi.StrRetToBuf(_Inout_ STRRET *pstr,_In_ PCUITEMID_CHILD pidl,_Out_ LPTSTR pszBuf,_In_ UINT cchBuf)
HRESULT None shlwapi.StrRetToBufW(_Inout_ STRRET *pstr,_In_ PCUITEMID_CHILD pidl,_Out_ LPTSTR pszBuf,_In_ UINT cchBuf)
HRESULT None shlwapi.StrRetToBufA(_Inout_ STRRET *pstr,_In_ PCUITEMID_CHILD pidl,_Out_ LPTSTR pszBuf,_In_ UINT cchBuf)
protected void None.OnCausesValidationChanged(EventArgs e None)
HRESULT None shlwapi.SHStrDup(_In_ LPCTSTR pszSource,_Out_ LPTSTR *ppwsz)
HRESULT None shlwapi.SHStrDupW(_In_ LPCTSTR pszSource,_Out_ LPTSTR *ppwsz)
HRESULT None shlwapi.SHStrDupA(_In_ LPCTSTR pszSource,_Out_ LPTSTR *ppwsz)
PTSTR None shlwapi.StrChrI(_In_ PTSTR pszStart,TCHAR wMatch None)
PTSTR None shlwapi.StrChrIW(_In_ PTSTR pszStart,TCHAR wMatch None)
PTSTR None shlwapi.StrChrIA(_In_ PTSTR pszStart,TCHAR wMatch None)
DWORD WINAPI kernel32.GetTempPath(_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer)
DWORD WINAPI kernel32.GetTempPathW(_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer)
DWORD WINAPI kernel32.GetTempPathA(_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer)
BOOLEAN WINAPI kernel32.CreateSymbolicLink(_In_ LPTSTR lpSymlinkFileName,_In_ LPTSTR lpTargetFileName,_In_ DWORD dwFlags)
BOOLEAN WINAPI kernel32.CreateSymbolicLinkW(_In_ LPTSTR lpSymlinkFileName,_In_ LPTSTR lpTargetFileName,_In_ DWORD dwFlags)
BOOLEAN WINAPI kernel32.CreateSymbolicLinkA(_In_ LPTSTR lpSymlinkFileName,_In_ LPTSTR lpTargetFileName,_In_ DWORD dwFlags)
INT WINAPI lz32.GetExpandedName(_In_ LPTSTR lpszSource,_Out_ LPTSTR lpszBuffer)
INT WINAPI lz32.GetExpandedNameW(_In_ LPTSTR lpszSource,_Out_ LPTSTR lpszBuffer)
INT WINAPI lz32.GetExpandedNameA(_In_ LPTSTR lpszSource,_Out_ LPTSTR lpszBuffer)
UINT WINAPI kernel32.GetTempFileName(_In_ LPCTSTR lpPathName,_In_ LPCTSTR lpPrefixString,_In_ UINT uUnique,_Out_ LPTSTR lpTempFileName)
UINT WINAPI kernel32.GetTempFileNameW(_In_ LPCTSTR lpPathName,_In_ LPCTSTR lpPrefixString,_In_ UINT uUnique,_Out_ LPTSTR lpTempFileName)
UINT WINAPI kernel32.GetTempFileNameA(_In_ LPCTSTR lpPathName,_In_ LPCTSTR lpPrefixString,_In_ UINT uUnique,_Out_ LPTSTR lpTempFileName)
VOID WINAPI kernel32.GetSystemTimePreciseAsFileTime(_Out_ LPFILETIME lpSystemTimeAsFileTime)
uint32 None dhcpserverpsprovider.Get([in] string ComputerName,[out] DhcpServerv6StatelessStatistics cmdletOutput[])
BOOL None kernel32.SetThreadLocale(_In_ LCID Locale)
BOOL None kernel32.IsNLSDefinedString(_In_ NLS_FUNCTION Function,_In_ DWORD dwFlags,_In_ LPNLSVERSIONINFO lpVersionInformation,_In_ LPCWSTR lpString,_In_ INT cchStr)
uint32 None ramgmtpsprovider.InstallByMultiTenant([in] string ComputerName,[in] boolean MultiTenancy,[in] string VpnType,[in] string MsgAuthenticator,[in] boolean PassThru,[in] uint16 RadiusPort,[in] uint8 RadiusScore,[in] string RadiusServer,[in] uint32 RadiusTimeout,[in] string SharedSecret,[in] uint64 CapacityKbps,[out] RemoteAccessCommon cmdletOutput)
uint32 None ncserverpsprovider.Configure([in] NetworkControllerClusterConfiguration ClusterConfiguration,[in] NetworkControllerApplicationConfiguration ApplicationConfiguration,[in] uint32 InitialReplicaSize)
uint32 None ramgmtpsprovider.Get([in] string ComputerName,[in] string EntrypointName,[out] RemoteAccessCommon cmdletOutput)
BOOL WINAPI kernel32.SetFilePointerEx(_In_ HANDLE hFile,_In_ LARGE_INTEGER liDistanceToMove,_Out_opt_ PLARGE_INTEGER lpNewFilePointer,_In_ DWORD dwMoveMethod)
HIMAGELIST None None.Header_GetImageList(HWND hwndHD None)
protected void None.OnCausesValidationChanged(EventArgs e None)
public boolean None.Match(Object obj None)
private void None.Button_HideLabel(Object sender None,EventArgs e None)
BOOL None None.Header_SetStateImageList(HWND hwndHD None,HIMAGELIST himl None)
INT_PTR None comctl32.PropertySheet(LPCPROPSHEETHEADER lppsph None)
INT_PTR None comctl32.PropertySheetW(LPCPROPSHEETHEADER lppsph None)
INT_PTR None comctl32.PropertySheetA(LPCPROPSHEETHEADER lppsph None)
uint32 None raserverpsprovider.GetInterfaces([in None None,out] uint32 DeploymentMode,[in] string ConnectTo,[in] boolean isNlbDeployed,[out] string IntranetInterfaces[],[out] string InternetInterfaces[])
HRESULT WINAPI kernel32.ConvertAuxiliaryCounterToPerformanceCounter(_In_ ULONGLONG ullAuxiliaryCounterValue,_Out_ PULONGLONG lpPerformanceCounterValue,_Out_opt_ PULONGLONG lpConversionError)
uint32 None None.GetKeyProtectorType([in] string VolumeKeyProtectorID,[out] uint32 KeyProtectorType)
uint32 None dhcpserverpsprovider.Add([in] string ComputerName,[in] string Name,[in] string StartRange,[in] string EndRange,[in] boolean PassThru,[out] DhcpServerv4MulticastExclusionRange cmdletOutput)
public void None.Add(Binding binding None)
private void None.AboutDialog_Load(Object sender None,EventArgs e None)
VOID None kernel32.QueryInterruptTimePrecise(_Out_ PULONGLONG lpInterruptTimePrecise)
uint32 None dnsserverpsprovider.AddByReverseLookupZone([in] boolean LoadExisting,[in] string MasterServers[],[in] string NetworkId,[in] string ZoneFile,[in] string ComputerName,[in] boolean PassThru,[out] DnsServerSecondaryZone cmdletOutput[])
private void None.Form1_Load(Object sender None,System.EventArgs e None)
LSTATUS None shlwapi.SHRegGetPath(_In_ HKEY hkey,_In_ LPCTSTR pszSubkey,_In_ LPCTSTR pszValue,_Out_ LPTSTR pszPath,DWORD dwFlags None)
LSTATUS None shlwapi.SHRegGetPathW(_In_ HKEY hkey,_In_ LPCTSTR pszSubkey,_In_ LPCTSTR pszValue,_Out_ LPTSTR pszPath,DWORD dwFlags None)
LSTATUS None shlwapi.SHRegGetPathA(_In_ HKEY hkey,_In_ LPCTSTR pszSubkey,_In_ LPCTSTR pszValue,_Out_ LPTSTR pszPath,DWORD dwFlags None)
private void None.BindControl(DataTable myTable None)
BOOL WINAPI kernel32.CopyFile(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName,_In_ BOOL bFailIfExists)
BOOL WINAPI kernel32.CopyFileW(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName,_In_ BOOL bFailIfExists)
BOOL WINAPI kernel32.CopyFileA(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName,_In_ BOOL bFailIfExists)
private void None.Menu_Copy(Object sender None,System.EventArgs e None)
uint32 None dhcpserverpsprovider.Remove([in] string ComputerName,[in] string Prefix,[in] string ReservedIP,[in] uint32 OptionId[],[in] boolean PassThru,[in] string VendorClass,[in] string UserClass,[out] DhcpServerv6OptionValue cmdletOutput[])
BOOL WINAPI kernel32.SetSearchPathMode(_In_ DWORD Flags)
DWORD WINAPI kernel32.GetFileType(_In_ HANDLE hFile)
HANDLE WINAPI kernel32.OpenFileById(_In_ HANDLE hFile,_In_ LPFILE_ID_DESCRIPTOR lpFileID,_In_ DWORD dwDesiredAccess,_In_ DWORD dwShareMode,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ DWORD dwFlags)
uint32 None ramgmtpsprovider.Uninstall([in] string VpnType,[in] string EntrypointName,[in] string ComputerName,[in] boolean Force)
protected void None.OnMouseUp(MouseEventArgs e None)
BOOL WINAPI kernel32.UnlockFile(_In_ HANDLE hFile,_In_ DWORD dwFileOffsetLow,_In_ DWORD dwFileOffsetHigh,_In_ DWORD nNumberOfBytesToUnlockLow,_In_ DWORD nNumberOfBytesToUnlockHigh)
protected void None.OnParentForeColorChanged(EventArgs e None)
protected void None.OnMouseDoubleClick(MouseEventArgs e None)
VOID CALLBACK None.FileIOCompletionRoutine(_In_ DWORD dwErrorCode,_In_ DWORD dwNumberOfBytesTransfered,_Inout_ LPOVERLAPPED lpOverlapped)
public Message None.RemoveCurrent(TimeSpan timeout None,MessageQueueTransactionType transactionType None)
protected void None.SetItemCore(int index None,Object value None)
private void None.comboBox1_SelectedIndexChanged(Object sender None,System.EventArgs e None)
uint32 None None.GetHardwareEncryptionStatus([out] uint32 HardwareEncryptionStatus)
uint32 None dnsserverpsprovider.GetByAll([in] boolean All,[in] string ComputerName,[out] DnsServerSetting cmdletOutput)
HRESULT WINAPI wofutil.WofWimEnumFiles(_In_ PCWSTR VolumeName,_In_ LARGE_INTEGER DataSourceId,_In_ WofEnumFilesProc EnumProc,_In_opt_ PVOID UserData)
INT WINAPI lz32.LZInit(_In_ INT hfSource)
protected void None.OnRightToLeftChanged(EventArgs e None)
BOOL WINAPI kernel32.MoveFile(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName)
BOOL WINAPI kernel32.MoveFileW(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName)
BOOL WINAPI kernel32.MoveFileA(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName)
BOOLEAN WINAPI ntdll.RtlTimeToSecondsSince1970(_In_ PLARGE_INTEGER Time,_Out_ PULONG ElapsedSeconds)
uint32 None ramgmtpsprovider.Add([in] string MgmtServer[],[in] string ComputerName,[in] boolean PassThru,[out] string cmdletOutput[])
public AccessibleObject None.HitTest(int x None,int y None)
public boolean None.Match(Object obj None)
private void None.Form1_Load(Object sender None,System.EventArgs e None)
BOOL WINAPI kernel32.FindNextFile(_In_ HANDLE hFindFile,_Out_ LPWIN32_FIND_DATA lpFindFileData)
BOOL WINAPI kernel32.FindNextFileW(_In_ HANDLE hFindFile,_Out_ LPWIN32_FIND_DATA lpFindFileData)
BOOL WINAPI kernel32.FindNextFileA(_In_ HANDLE hFindFile,_Out_ LPWIN32_FIND_DATA lpFindFileData)
uint32 None None.Encrypt([in None None,optional] uint32 EncryptionMethod,[in None None,optional] uint32 EncryptionFlags)
BOOL WINAPI kernel32.WriteFileEx(_In_ HANDLE hFile,_In_opt_ LPCVOID lpBuffer,_In_ DWORD nNumberOfBytesToWrite,_Inout_ LPOVERLAPPED lpOverlapped,_In_ LPOVERLAPPED_COMPLETION_ROUTINE lpCompletionRoutine)
RPC_STATUS RPC_ENTRY rpcrt4.RpcAsyncCancelCall(PRPC_ASYNC_STATE pAsync None,BOOL fAbortCall None)
BOOL WINAPI kernel32.SetEndOfFile(_In_ HANDLE hFile)
public None None.Hashtable(int capacity None)
DWORD WINAPI kernel32.GetDynamicTimeZoneInformation(_Out_ PDYNAMIC_TIME_ZONE_INFORMATION pTimeZoneInformation)
BOOL WINAPI kernel32.CancelIo(_In_ HANDLE hFile)
uint32 None dhcpserverpsprovider.Set([in] string Name,[in] string Type,[in] string Data,[in] string Description,[in] string ComputerName,[in] boolean PassThru,[out] DhcpServerv4Class cmdletOutput)
HRESULT None None.GetSecondarySecurity([out] PSECURITY_OBJECT *pSecurityObjects,[out] PULONG pSecurityObjectCount)
DWORD WINAPI kernel32.GetFileAttributes(_In_ LPCTSTR lpFileName)
DWORD WINAPI kernel32.GetFileAttributesW(_In_ LPCTSTR lpFileName)
DWORD WINAPI kernel32.GetFileAttributesA(_In_ LPCTSTR lpFileName)
INT WINAPI lz32.LZOpenFile(_In_ LPTSTR lpFileName,_Out_ LPOFSTRUCT lpReOpenBuf,_In_ WORD wStyle)
INT WINAPI lz32.LZOpenFileW(_In_ LPTSTR lpFileName,_Out_ LPOFSTRUCT lpReOpenBuf,_In_ WORD wStyle)
INT WINAPI lz32.LZOpenFileA(_In_ LPTSTR lpFileName,_Out_ LPOFSTRUCT lpReOpenBuf,_In_ WORD wStyle)
DWORD WINAPI advapi32.AddUsersToEncryptedFile(_In_ LPCWSTR lpFileName,_In_ PENCRYPTION_CERTIFICATE_LIST pUsers)
DWORD WINAPI advapi32.RemoveUsersFromEncryptedFile(_In_ LPCWSTR lpFileName,_In_ PENCRYPTION_CERTIFICATE_HASH_LIST pHashes)
private void None.listDragSource_QueryContinueDrag(Object sender None,System.Windows.Forms.QueryContinueDragEventArgs e None)
DWORD WINAPI kernel32.GetFullPathNameTransacted(_In_ LPCTSTR lpFileName,_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer,_Out_ LPTSTR *lpFilePart,_In_ HANDLE hTransaction)
DWORD WINAPI kernel32.GetFullPathNameTransactedW(_In_ LPCTSTR lpFileName,_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer,_Out_ LPTSTR *lpFilePart,_In_ HANDLE hTransaction)
DWORD WINAPI kernel32.GetFullPathNameTransactedA(_In_ LPCTSTR lpFileName,_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer,_Out_ LPTSTR *lpFilePart,_In_ HANDLE hTransaction)
protected void None.OnRightToLeftChanged(EventArgs e None)
public StandardValuesCollection None.GetStandardValues(ITypeDescriptorContext context None)
BOOL WINAPI kernel32.GetFileAttributesTransacted(_In_ LPCTSTR lpFileName,_In_ GET_FILEEX_INFO_LEVELS fInfoLevelId,_Out_ LPVOID lpFileInformation,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.GetFileAttributesTransactedW(_In_ LPCTSTR lpFileName,_In_ GET_FILEEX_INFO_LEVELS fInfoLevelId,_Out_ LPVOID lpFileInformation,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.GetFileAttributesTransactedA(_In_ LPCTSTR lpFileName,_In_ GET_FILEEX_INFO_LEVELS fInfoLevelId,_Out_ LPVOID lpFileInformation,_In_ HANDLE hTransaction)
RPC_STATUS RPC_ENTRY rpcrt4.RpcRevertToSelfEx(RPC_BINDING_HANDLE BindingHandle None)
uint32 None None.UnlockWithCertificateThumbprint([in] string CertThumbprint,[in] string PIN)
BOOL CALLBACK None.EnumCalendarInfoProcExEx(_In_ LPWSTR lpCalendarInfoString,_In_ CALID Calendar,_In_ LPWSTR lpReserved,_In_ LPARAM lParam)
private void None.button1_Click(Object sender None,System.EventArgs e None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcCancelThreadEx(HANDLE ThreadHandle None,LONG Timeout None)
BOOL WINAPI kernel32.Wow64RevertWow64FsRedirection(_In_ PVOID OldValue)
protected void None.OnBackgroundImageChanged(EventArgs e None)
BOOL WINAPI kernel32.UnlockFileEx(_In_ HANDLE hFile,_Reserved_ DWORD dwReserved,_In_ DWORD nNumberOfBytesToUnlockLow,_In_ DWORD nNumberOfBytesToUnlockHigh,_Inout_ LPOVERLAPPED lpOverlapped)
BOOL WINAPI kernel32.GetFileSizeEx(_In_ HANDLE hFile,_Out_ PLARGE_INTEGER lpFileSize)
BOOL None kernel32.RtlIsValidLocaleName(_In_ LPCWSTR LocaleName,_In_ ULONG Flags)
uint32 None ramgmtpsprovider.Remove([in] string MgmtServer[],[in] string ComputerName,[in] boolean PassThru,[out] string cmdletOutput[])
RPC_STATUS None rpcrt4.RpcBindingUnbind(_In_ RPC_BINDING_HANDLE Binding)
private void None.AboutDialog_Load(Object sender None,EventArgs e None)
uint32 None None.GetKeyPackage([in] string VolumeKeyProtectorID,[out] uint8 KeyPackage[])
BOOL WINAPI kernel32.FindNextStreamW(_In_ HANDLE hFindStream,_Out_ LPVOID lpFindStreamData)
HRESULT WINAPI wofutil.WofGetDriverVersion(_In_ HANDLE FileOrVolumeHandle,_In_ ULONG Provider,_Out_ PULONG WofVersion)
public Message None.RemoveCurrent(TimeSpan timeout None,MessageQueueTransactionType transactionType None)
DWORD WINAPI kernel32.GetCompressedFileSize(_In_ LPCTSTR lpFileName,_Out_opt_ LPDWORD lpFileSizeHigh)
DWORD WINAPI kernel32.GetCompressedFileSizeW(_In_ LPCTSTR lpFileName,_Out_opt_ LPDWORD lpFileSizeHigh)
DWORD WINAPI kernel32.GetCompressedFileSizeA(_In_ LPCTSTR lpFileName,_Out_opt_ LPDWORD lpFileSizeHigh)
private void None.currencyTextBox_TextChanged(Object sender None,EventArgs e None)
public int None.GetFirstCharIndexFromLine(int lineNumber None)
DWORD WINAPI kernel32.SetFilePointer(_In_ HANDLE hFile,_In_ LONG lDistanceToMove,_Inout_opt_ PLONG lpDistanceToMoveHigh,_In_ DWORD dwMoveMethod)
uint32 None None.GetIdentificationField([out] string IdentificationField)
RPC_STATUS RPC_ENTRY rpcrt4.RpcEpResolveBinding(RPC_BINDING_HANDLE Binding None,RPC_IF_HANDLE IfSpec None)
private void None.button1_Click(Object sender None,System.EventArgs e None)
HANDLE WINAPI kernel32.FindFirstStreamTransactedW(_In_ LPCWSTR lpFileName,_In_ STREAM_INFO_LEVELS InfoLevel,_Out_ LPVOID lpFindStreamData,_Reserved_ DWORD dwFlags,_In_ HANDLE hTransaction)
public void None.LinkComponentEvent(IComponentChangeService changeService None)
public DragDropEffects None.DoDragDrop(Object data None,DragDropEffects allowedEffects None)
DWORD WINAPI advapi32.SetUserFileEncryptionKey(_In_ PENCRYPTION_CERTIFICATE pEncryptionCertificate)
BOOL WINAPI kernel32.DeleteFile(_In_ LPCTSTR lpFileName)
BOOL WINAPI kernel32.DeleteFileW(_In_ LPCTSTR lpFileName)
BOOL WINAPI kernel32.DeleteFileA(_In_ LPCTSTR lpFileName)
uint32 None None.EnableAutoUnlock([in] string VolumeKeyProtectorID)
protected void None.OnMove(EventArgs e None)
BOOL WINAPI kernel32.LockFileEx(_In_ HANDLE hFile,_In_ DWORD dwFlags,_Reserved_ DWORD dwReserved,_In_ DWORD nNumberOfBytesToLockLow,_In_ DWORD nNumberOfBytesToLockHigh,_Inout_ LPOVERLAPPED lpOverlapped)
BOOL WINAPI kernel32.EnumSystemGeoNames(_In_ GEOCLASS geoClass,_In_ GEO_ENUMNAMEPROC geoEnumProc,_In_opt_ LPARAM data)
uint32 None None.GetLockStatus([out] uint32 LockStatus)
uint32 None None.UnlockWithPassphrase([in] string Passphrase)
HANDLE WINAPI kernel32.FindFirstFileTransacted(_In_ LPCTSTR lpFileName,_In_ FINDEX_INFO_LEVELS fInfoLevelId,_Out_ LPVOID lpFindFileData,_In_ FINDEX_SEARCH_OPS fSearchOp,_Reserved_ LPVOID lpSearchFilter,_In_ DWORD dwAdditionalFlags,_In_ HANDLE hTransaction)
HANDLE WINAPI kernel32.FindFirstFileTransactedW(_In_ LPCTSTR lpFileName,_In_ FINDEX_INFO_LEVELS fInfoLevelId,_Out_ LPVOID lpFindFileData,_In_ FINDEX_SEARCH_OPS fSearchOp,_Reserved_ LPVOID lpSearchFilter,_In_ DWORD dwAdditionalFlags,_In_ HANDLE hTransaction)
HANDLE WINAPI kernel32.FindFirstFileTransactedA(_In_ LPCTSTR lpFileName,_In_ FINDEX_INFO_LEVELS fInfoLevelId,_Out_ LPVOID lpFindFileData,_In_ FINDEX_SEARCH_OPS fSearchOp,_Reserved_ LPVOID lpSearchFilter,_In_ DWORD dwAdditionalFlags,_In_ HANDLE hTransaction)
protected void None.OnRightToLeftChanged(EventArgs e None)
protected void None.dataGrid1_KeyUp(Object sender None,System.Windows.Forms.KeyEventArgs e None)
HRESULT WINAPI wofutil.WofFileEnumFiles(_In_ PCWSTR VolumeName,_In_ ULONG Algorithm,_In_ WofEnumFilesProc EnumProc,_In_opt_ PVOID UserData)
private void None.listView1_BeforeLabelEdit(Object sender None,System.Windows.Forms.LabelEditEventArgs e None)
public void None.ControlSetFocus(Control control None)
DWORD WINAPI kernel32.SearchPath(_In_opt_ LPCTSTR lpPath,_In_ LPCTSTR lpFileName,_In_opt_ LPCTSTR lpExtension,_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer,_Out_opt_ LPTSTR *lpFilePart)
DWORD WINAPI kernel32.SearchPathW(_In_opt_ LPCTSTR lpPath,_In_ LPCTSTR lpFileName,_In_opt_ LPCTSTR lpExtension,_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer,_Out_opt_ LPTSTR *lpFilePart)
DWORD WINAPI kernel32.SearchPathA(_In_opt_ LPCTSTR lpPath,_In_ LPCTSTR lpFileName,_In_opt_ LPCTSTR lpExtension,_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer,_Out_opt_ LPTSTR *lpFilePart)
public int None.LastIndexOf(T item None,int index None)
BOOL WINAPI kernel32.SetFileValidData(_In_ HANDLE hFile,_In_ LONGLONG ValidDataLength)
DWORD WINAPI advapi32.QueryUsersOnEncryptedFile(_In_ LPCWSTR lpFileName,_Out_ PENCRYPTION_CERTIFICATE_HASH_LIST *pUsers)
public void None.ControlSelect(Control control None)
uint32 None None.UnlockWithExternalKey([in] uint8 ExternalKey[])
HRESULT None shell32.InvokeCommand(LPCMINVOKECOMMANDINFO pici None)
public boolean None.Match(Object obj None)
uint32 None None.GetKeyProtectorCertificate([in] string VolumeKeyProtectorID,[out] uint8 PublicKey[],[out] string CertThumbprint,[out] uint32 CertType)
RPC_STATUS RPC_ENTRY rpcrt4.RpcBindingReset(RPC_BINDING_HANDLE Binding None)
private void None.listDragSource_QueryContinueDrag(Object sender None,System.Windows.Forms.QueryContinueDragEventArgs e None)
protected void None.button1_Click(Object sender None,System.EventArgs e None)
protected void None.button1_Click(Object sender None,System.EventArgs e None)
uint32 None None.ProtectKeyWithNumericalPassword([in None None,optional] string FriendlyName,[in None None,optional] string NumericalPassword,[out] string VolumeKeyProtectorID)
HANDLE WINAPI kernel32.ReOpenFile(_In_ HANDLE hOriginalFile,_In_ DWORD dwDesiredAccess,_In_ DWORD dwShareMode,_In_ DWORD dwFlags)
DWORD WINAPI kernel32.GetLongPathName(_In_ LPCTSTR lpszShortPath,_Out_ LPTSTR lpszLongPath,_In_ DWORD cchBuffer)
DWORD WINAPI kernel32.GetLongPathNameW(_In_ LPCTSTR lpszShortPath,_Out_ LPTSTR lpszLongPath,_In_ DWORD cchBuffer)
DWORD WINAPI kernel32.GetLongPathNameA(_In_ LPCTSTR lpszShortPath,_Out_ LPTSTR lpszLongPath,_In_ DWORD cchBuffer)
uint32 None None.GetKeyProtectorFriendlyName([in] string VolumeKeyProtectorID,[out] string FriendlyName)
UINT CALLBACK None.PropSheetPageProc(HWND hwnd None,_In_ UINT uMsg,_Inout_ LPPROPSHEETPAGE ppsp)
BOOL None kernel32.EnumCalendarInfoEx(_In_ CALINFO_ENUMPROCEX pCalInfoEnumProcEx,_In_ LCID Locale,_In_ CALID Calendar,_In_ CALTYPE CalType)
BOOL None kernel32.EnumCalendarInfoExW(_In_ CALINFO_ENUMPROCEX pCalInfoEnumProcEx,_In_ LCID Locale,_In_ CALID Calendar,_In_ CALTYPE CalType)
BOOL None kernel32.EnumCalendarInfoExA(_In_ CALINFO_ENUMPROCEX pCalInfoEnumProcEx,_In_ LCID Locale,_In_ CALID Calendar,_In_ CALTYPE CalType)
RPC_STATUS RPC_ENTRY rpcrt4.RpcMgmtInqStats(RPC_BINDING_HANDLE Binding None,RPC_STATS_VECTOR **Statistics None)
BOOL WINAPI kernel32.MoveFile(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName)
BOOL WINAPI kernel32.MoveFileW(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName)
BOOL WINAPI kernel32.MoveFileA(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName)
DWORD WINAPI kernel32.GetLongPathNameTransacted(_In_ LPCTSTR lpszShortPath,_Out_ LPTSTR lpszLongPath,_In_ DWORD cchBuffer,_In_ HANDLE hTransaction)
DWORD WINAPI kernel32.GetLongPathNameTransactedW(_In_ LPCTSTR lpszShortPath,_Out_ LPTSTR lpszLongPath,_In_ DWORD cchBuffer,_In_ HANDLE hTransaction)
DWORD WINAPI kernel32.GetLongPathNameTransactedA(_In_ LPCTSTR lpszShortPath,_Out_ LPTSTR lpszLongPath,_In_ DWORD cchBuffer,_In_ HANDLE hTransaction)
DWORD WINAPI advapi32.OpenEncryptedFileRaw(_In_ LPCTSTR lpFileName,_In_ ULONG ulFlags,_Out_ PVOID *pvContext)
DWORD WINAPI advapi32.OpenEncryptedFileRawW(_In_ LPCTSTR lpFileName,_In_ ULONG ulFlags,_Out_ PVOID *pvContext)
DWORD WINAPI advapi32.OpenEncryptedFileRawA(_In_ LPCTSTR lpFileName,_In_ ULONG ulFlags,_Out_ PVOID *pvContext)
uint32 None dnsserverpsprovider.Get([in] string ComputerName,[out] DnsServerStatistics cmdletOutput)
BOOL CALLBACK None.EnumTimeFormatsProc(_In_ LPTSTR lpTimeFormatString)
uint32 None None.IsAutoUnlockKeyStored([out] boolean IsAutoUnlockKeyStored)
private void None.Form1_Resize(Object sender None,System.EventArgs e None)
BOOL WINAPI kernel32.SetFileInformationByHandle(_In_ HANDLE hFile,_In_ FILE_INFO_BY_HANDLE_CLASS FileInformationClass,_In_ LPVOID lpFileInformation,_In_ DWORD dwBufferSize)
RPC_SS_THREAD_HANDLE RPC_ENTRY rpcrt4.RpcSmGetThreadHandle(RPC_STATUS *pStatus None)
uint32 None None.SaveExternalKeyToFile([in] string VolumeKeyProtectorID,[in] string Path)
BOOL CALLBACK None.EnumLocalesProc(_In_ LPTSTR lpLocaleString)
public void None.Invalidate(Rectangle rc None,boolean invalidateChildren None)
BOOL WINAPI kernel32.GetDiskFreeSpace(_In_ LPCTSTR lpRootPathName,_Out_ LPDWORD lpSectorsPerCluster,_Out_ LPDWORD lpBytesPerSector,_Out_ LPDWORD lpNumberOfFreeClusters,_Out_ LPDWORD lpTotalNumberOfClusters)
BOOL WINAPI kernel32.GetDiskFreeSpaceW(_In_ LPCTSTR lpRootPathName,_Out_ LPDWORD lpSectorsPerCluster,_Out_ LPDWORD lpBytesPerSector,_Out_ LPDWORD lpNumberOfFreeClusters,_Out_ LPDWORD lpTotalNumberOfClusters)
BOOL WINAPI kernel32.GetDiskFreeSpaceA(_In_ LPCTSTR lpRootPathName,_Out_ LPDWORD lpSectorsPerCluster,_Out_ LPDWORD lpBytesPerSector,_Out_ LPDWORD lpNumberOfFreeClusters,_Out_ LPDWORD lpTotalNumberOfClusters)
uint32 None dnsserverpsprovider.Get([in] string ComputerName,[out] DnsServerGlobalQueryBlockList cmdletOutput)
uint32 None None.IsKeyProtectorAvailable([in None None,optional] uint32 KeyProtectorType,[out] boolean IsKeyProtectorAvailable)
BOOL WINAPI kernel32.MoveFileTransacted(_In_ LPCTSTR lpExistingFileName,_In_opt_ LPCTSTR lpNewFileName,_In_opt_ LPPROGRESS_ROUTINE lpProgressRoutine,_In_opt_ LPVOID lpData,_In_ DWORD dwFlags,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.MoveFileTransactedW(_In_ LPCTSTR lpExistingFileName,_In_opt_ LPCTSTR lpNewFileName,_In_opt_ LPPROGRESS_ROUTINE lpProgressRoutine,_In_opt_ LPVOID lpData,_In_ DWORD dwFlags,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.MoveFileTransactedA(_In_ LPCTSTR lpExistingFileName,_In_opt_ LPCTSTR lpNewFileName,_In_opt_ LPPROGRESS_ROUTINE lpProgressRoutine,_In_opt_ LPVOID lpData,_In_ DWORD dwFlags,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.CancelIoEx(_In_ HANDLE hFile,_In_opt_ LPOVERLAPPED lpOverlapped)
RPC_STATUS RPC_ENTRY rpcrt4.RpcErrorSaveErrorInfo(_In_ RPC_ERROR_ENUM_HANDLE *EnumHandle,_Out_ PVOID *ErrorBlob,_Out_ size_t *BlobSize)
BOOL WINAPI kernel32.CancelSynchronousIo(_In_ HANDLE hThread)
BOOL WINAPI advapi32.EncryptFile(_In_ LPCTSTR lpFileName)
BOOL WINAPI advapi32.EncryptFileW(_In_ LPCTSTR lpFileName)
BOOL WINAPI advapi32.EncryptFileA(_In_ LPCTSTR lpFileName)
RPC_STATUS RPC_ENTRY rpcrt4.RpcImpersonateClient(RPC_BINDING_HANDLE BindingHandle None)
uint32 None None.SetPowerState([in] uint16 PowerState,[in] datetime Time)
uint32 None None.GetKeyProtectorExternalKey([in] string VolumeKeyProtectorID,[out] uint8 ExternalKey[])
public int None.SelectActiveFrame(FrameDimension dimension None,int frameIndex None)
BOOL WINAPI kernel32.MoveFileWithProgress(_In_ LPCTSTR lpExistingFileName,_In_opt_ LPCTSTR lpNewFileName,_In_opt_ LPPROGRESS_ROUTINE lpProgressRoutine,_In_opt_ LPVOID lpData,_In_ DWORD dwFlags)
BOOL WINAPI kernel32.MoveFileWithProgressW(_In_ LPCTSTR lpExistingFileName,_In_opt_ LPCTSTR lpNewFileName,_In_opt_ LPPROGRESS_ROUTINE lpProgressRoutine,_In_opt_ LPVOID lpData,_In_ DWORD dwFlags)
BOOL WINAPI kernel32.MoveFileWithProgressA(_In_ LPCTSTR lpExistingFileName,_In_opt_ LPCTSTR lpNewFileName,_In_opt_ LPPROGRESS_ROUTINE lpProgressRoutine,_In_opt_ LPVOID lpData,_In_ DWORD dwFlags)
protected void None.button1_Click(Object sender None,System.EventArgs e None)
HANDLE WINAPI kernel32.FindFirstStreamW(_In_ LPCWSTR lpFileName,_In_ STREAM_INFO_LEVELS InfoLevel,_Out_ LPVOID lpFindStreamData,_Reserved_ DWORD dwFlags)
uint32 None None.ProtectKeyWithCertificateThumbprint([in None None,optional] string FriendlyName,[in] string CertThumbprint,[out] string VolumeKeyProtectorID)
BOOL CALLBACK None.EnumCalendarInfoProcEx(_In_ LPTSTR lpCalendarInfoString,_In_ CALID Calendar)
BOOL CALLBACK None.EnumCalendarInfoProcExW(_In_ LPTSTR lpCalendarInfoString,_In_ CALID Calendar)
BOOL CALLBACK None.EnumCalendarInfoProcExA(_In_ LPTSTR lpCalendarInfoString,_In_ CALID Calendar)
protected void None.dataGrid1_KeyUp(Object sender None,System.Windows.Forms.KeyEventArgs e None)
LCID None kernel32.LocaleNameToLCID(_In_ LPCWSTR lpName,_In_ DWORD dwFlags)
BOOL WINAPI wofutil.WofShouldCompressBinaries(_In_ LPCWSTR Volume,_Out_ PULONG Algorithm)
RPC_STATUS RPC_ENTRY rpcrt4.RpcStringBindingCompose(TCHAR *ObjUuid None,TCHAR *ProtSeq None,TCHAR *NetworkAddr None,TCHAR *EndPoint None,TCHAR *Options None,TCHAR **StringBinding None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcStringBindingComposeW(TCHAR *ObjUuid None,TCHAR *ProtSeq None,TCHAR *NetworkAddr None,TCHAR *EndPoint None,TCHAR *Options None,TCHAR **StringBinding None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcStringBindingComposeA(TCHAR *ObjUuid None,TCHAR *ProtSeq None,TCHAR *NetworkAddr None,TCHAR *EndPoint None,TCHAR *Options None,TCHAR **StringBinding None)
uint32 None None.Lock([in None None,optional] boolean ForceDismount)
uint32 None None.IsAutoUnlockEnabled([out] boolean IsAutoUnlockEnabled,[out] string VolumeKeyProtectorID)
RPC_STATUS RPC_ENTRY rpcrt4.RpcBindingCopy(RPC_BINDING_HANDLE SourceBinding None,RPC_BINDING_HANDLE *DestinationBinding None)
private void None.listDragSource_QueryContinueDrag(Object sender None,System.Windows.Forms.QueryContinueDragEventArgs e None)
RPC_STATUS RPC_ENTRY rpcrt4.UuidCreateSequential(UUID __RPC_FAR *Uuid)
uint32 None None.DisableKeyProtectors([in None None,optional] uint32 DisableCount)
protected void None.dataGrid1_KeyUp(Object sender None,System.Windows.Forms.KeyEventArgs e None)
protected void None.button1_Click(Object sender None,System.EventArgs e None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcFreeAuthorizationContext(_In_ PVOID *pAuthzClientContext)
uint32 None None.GetExternalKeyFileName([in] string VolumeKeyProtectorID,[out] string FileName)
BOOL WINAPI kernel32.MoveFileTransacted(_In_ LPCTSTR lpExistingFileName,_In_opt_ LPCTSTR lpNewFileName,_In_opt_ LPPROGRESS_ROUTINE lpProgressRoutine,_In_opt_ LPVOID lpData,_In_ DWORD dwFlags,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.MoveFileTransactedW(_In_ LPCTSTR lpExistingFileName,_In_opt_ LPCTSTR lpNewFileName,_In_opt_ LPPROGRESS_ROUTINE lpProgressRoutine,_In_opt_ LPVOID lpData,_In_ DWORD dwFlags,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.MoveFileTransactedA(_In_ LPCTSTR lpExistingFileName,_In_opt_ LPCTSTR lpNewFileName,_In_opt_ LPPROGRESS_ROUTINE lpProgressRoutine,_In_opt_ LPVOID lpData,_In_ DWORD dwFlags,_In_ HANDLE hTransaction)
uint32 None None.GetExternalKeyFromFile([in] string PathWithFileName,[out] uint8 ExternalKey[])
RPC_STATUS RPC_ENTRY rpcrt4.RpcBindingVectorFree(RPC_BINDING_VECTOR **BindingVector None)
BOOL WINAPI kernel32.SetFileCompletionNotificationModes(_In_ HANDLE FileHandle,_In_ UCHAR Flags)
uint32 None None.EncryptAfterHardwareTest([in None None,optional] uint32 EncryptionMethod,[in None None,optional] uint32 EncryptionFlags)
uint32 None None.GetKeyProtectorCertificate([in] string VolumeKeyProtectorID,[out] string SidString,[out] uint32 Flags)
uint32 None None.FindValidCertificates([out] string CertificateThumbprint[])
uint32 None None.UnlockWithCertificateFile([in] string FileName,[in] string PIN)
RPC_STATUS RPC_ENTRY rpcrt4.RpcSmSetClientAllocFree(RPC_CLIENT_ALLOC *pfnAllocate None,RPC_CLIENT_FREE *pfnFree None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcSmSwapClientAllocFree(RPC_CLIENT_ALLOC *pfnAllocate None,RPC_CLIENT_FREE *pfnFree None,RPC_CLIENT_ALLOC **pfnOldAllocate None,RPC_CLIENT_FREE **pfnOldFree None)
DWORD WINAPI advapi32.QueryRecoveryAgentsOnEncryptedFile(_In_ LPCWSTR lpFileName,_Out_ PENCRYPTION_CERTIFICATE_HASH_LIST *pRecoveryAgents)
RPC_STATUS None rpcrt4.RpcSsContextLockExclusive(_In_ RPC_BINDING_HANDLE ServerBindingHandle,_In_ PVOID UserContext)
RPC_STATUS RPC_ENTRY rpcrt4.UuidCreate(UUID __RPC_FAR *Uuid)
RPC_STATUS RPC_ENTRY rpcrt4.RpcMgmtSetAuthorizationFn(RPC_MGMT_AUTHORIZATION_FN AuthorizationFn None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcServerTestCancel(RPC_BINDING_HANDLE BindingHandle None)
protected void None.button1_Click(Object sender None,System.EventArgs e None)
BOOL None kernel32.EnumCalendarInfoExEx(_In_ CALINFO_ENUMPROCEXEX pCalInfoEnumProcExEx,_In_opt_ LPCWSTR lpLocaleName,_In_ CALID Calendar,_In_opt_ LPCWSTR lpReserved,_In_ CALTYPE CalType,_In_ LPARAM lParam)
DWORD WINAPI kernel32.GetFileSize(_In_ HANDLE hFile,_Out_opt_ LPDWORD lpFileSizeHigh)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsBindingSelect(RPC_BINDING_VECTOR *BindingVec None,RPC_BINDING_HANDLE *Binding None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcErrorAddRecord(_In_ RPC_EXTENDED_ERROR_INFO *ErrorInfo)
RPC_STATUS RPC_ENTRY rpcrt4.RpcEpUnregister(RPC_IF_HANDLE IfSpec None,RPC_BINDING_VECTOR *BindingVector None,UUID_VECTOR *UuidVector None)
public ListViewItem None.GetItemAt(int x None,int y None)
public boolean None.SelectNextControl(Control ctl None,boolean forward None,boolean tabStopOnly None,boolean nested None,boolean wrap None)
uint32 None None.ProtectKeyWithCertificateFile([in None None,optional] string FriendlyName,[in] string FileName,[out] string VolumeKeyProtectorID)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsEntryObjectInqDone(RPC_NS_HANDLE *InquiryContext None)
uint32 None None.ProtectKeyWithTPMAndStartupKey([in None None,optional] string FriendlyName,[in None None,optional] uint8 PlatformValidationProfile[],[in None None,optional] uint8 ExternalKey[],[out] string VolumeKeyProtectorID)
RPC_STATUS None rpcrt4.RpcServerInqBindingHandle(RPC_BINDING_HANDLE *Binding None)
uint32 None None.SetPowerState([in] uint16 PowerState,[in] datetime Time)
BOOL WINAPI advapi32.FileEncryptionStatus(_In_ LPCTSTR lpFileName,_Out_ LPDWORD lpStatus)
BOOL WINAPI advapi32.FileEncryptionStatusW(_In_ LPCTSTR lpFileName,_Out_ LPDWORD lpStatus)
BOOL WINAPI advapi32.FileEncryptionStatusA(_In_ LPCTSTR lpFileName,_Out_ LPDWORD lpStatus)
HANDLE WINAPI kernel32.CreateFile2(_In_ LPCWSTR lpFileName,_In_ DWORD dwDesiredAccess,_In_ DWORD dwShareMode,_In_ DWORD dwCreationDisposition,_In_opt_ LPCREATEFILE2_EXTENDED_PARAMETERS pCreateExParams)
uint32 None None.UnlockWithNumericalPassword([in] string NumericalPassword)
RPC_STATUS None rpcrt4.RpcSsContextLockShared(_In_ RPC_BINDING_HANDLE ServerBindingHandle,_In_ PVOID UserContext)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsEntryObjectInqNext(RPC_NS_HANDLE InquiryContext None,UUID *ObjUuid None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcMgmtInqIfIds(RPC_BINDING_HANDLE Binding None,RPC_IF_ID_VECTOR **IfIdVector None)
BOOL None kernel32.GetNLSVersionEx(_In_ NLS_FUNCTION function,_In_opt_ LPCWSTR lpLocaleName,_Inout_ LPNLSVERSIONINFOEX lpVersionInformation)
RPC_STATUS RPC_ENTRY rpcrt4.RpcAsyncCompleteCall(PRPC_SYNC_STATE pAsync None,PVOID Reply None)
RPC_STATUS None rpcrt4.RpcBindingCreate(_In_ RPC_BINDING_HANDLE_TEMPLATE *Template,_In_opt_ RPC_BINDING_HANDLE_SECURITY *Security,_In_opt_ RPC_BINDING_HANDLE_OPTIONS *Options,_Out_ RPC_BINDING_HANDLE *Binding)
RPC_STATUS None rpcrt4.RpcBindingCreateW(_In_ RPC_BINDING_HANDLE_TEMPLATE *Template,_In_opt_ RPC_BINDING_HANDLE_SECURITY *Security,_In_opt_ RPC_BINDING_HANDLE_OPTIONS *Options,_Out_ RPC_BINDING_HANDLE *Binding)
RPC_STATUS None rpcrt4.RpcBindingCreateA(_In_ RPC_BINDING_HANDLE_TEMPLATE *Template,_In_opt_ RPC_BINDING_HANDLE_SECURITY *Security,_In_opt_ RPC_BINDING_HANDLE_OPTIONS *Options,_Out_ RPC_BINDING_HANDLE *Binding)
BOOL WINAPI kernel32.SetFileAttributes(_In_ LPCTSTR lpFileName,_In_ DWORD dwFileAttributes)
BOOL WINAPI kernel32.SetFileAttributesW(_In_ LPCTSTR lpFileName,_In_ DWORD dwFileAttributes)
BOOL WINAPI kernel32.SetFileAttributesA(_In_ LPCTSTR lpFileName,_In_ DWORD dwFileAttributes)
uint32 None None.ProtectKeyWithExternalKey([in None None,optional] string FriendlyName,[in None None,optional] uint8 ExternalKey[],[out] string VolumeKeyProtectorID)
uint32 None None.ChangePIN([in] string VolumeKeyProtectorID,[in] string NewPIN)
RPC_STATUS RPC_ENTRY rpcrt4.RpcMgmtEpUnregister(RPC_BINDING_HANDLE EpBinding None,RPC_IF_ID *IfId None,RPC_BINDING_HANDLE Binding None,UUID *ObjectUuid None)
BOOL WINAPI kernel32.ReadFileEx(_In_ HANDLE hFile,_Out_opt_ LPVOID lpBuffer,_In_ DWORD nNumberOfBytesToRead,_Inout_ LPOVERLAPPED lpOverlapped,_In_ LPOVERLAPPED_COMPLETION_ROUTINE lpCompletionRoutine)
RPC_STATUS None rpcrt4.RpcSsContextLockShared(_In_ RPC_BINDING_HANDLE ServerBindingHandle,_In_ PVOID UserContext)
DWORD WINAPI None.ExportCallback(_In_ PBYTE pbData,_In_opt_ PVOID pvCallbackContext,_In_ ULONG ulLength)
RPC_STATUS RPC_ENTRY rpcrt4.RpcNetworkInqProtseqs(RPC_PROTSEQ_VECTOR **ProtSeqVector None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcNetworkInqProtseqsW(RPC_PROTSEQ_VECTOR **ProtSeqVector None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcNetworkInqProtseqsA(RPC_PROTSEQ_VECTOR **ProtSeqVector None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcServerInterfaceGroupActivate(_In_ RPC_INTERFACE_GROUP IfGroup)
RPC_STATUS RPC_ENTRY rpcrt4.RpcServerInterfaceGroupClose(_In_ RPC_INTERFACE_GROUP IfGroup)
RPC_ENTRY None rpcrt4.UuidCreateNil(UUID __RPC_FAR *Nil_Uuid)
RPC_STATUS RPC_ENTRY rpcrt4.RpcMgmtStatsVectorFree(RPC_STATS_VECTOR **StatsVector None)
BOOL None kernel32.IsValidLocaleName(_In_ LPCWSTR lpLocaleName)
RPC_STATUS RPC_ENTRY rpcrt4.RpcBindingInqObject(RPC_BINDING_HANDLE Binding None,UUID *ObjectUuid None)
private void None.listDragSource_QueryContinueDrag(Object sender None,System.Windows.Forms.QueryContinueDragEventArgs e None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcIfIdVectorFree(RPC_IF_ID_VECTOR **IfIdVec None)
HRESULT WINAPI wofutil.WofWimUpdateEntry(_In_ PCWSTR VolumeName,_In_ LARGE_INTEGER DataSourceId,_In_ PCWSTR NewWimPath)
uint32 None None.GetProtectionStatus([out] uint32 ProtectionStatus)
private void None.currencyTextBox_TextChanged(Object sender None,EventArgs e None)
BOOL WINAPI kernel32.GetBinaryType(_In_ LPCTSTR lpApplicationName,_Out_ LPDWORD lpBinaryType)
BOOL WINAPI kernel32.GetBinaryTypeW(_In_ LPCTSTR lpApplicationName,_Out_ LPDWORD lpBinaryType)
BOOL WINAPI kernel32.GetBinaryTypeA(_In_ LPCTSTR lpApplicationName,_Out_ LPDWORD lpBinaryType)
HRESULT WINAPI wofutil.WofWimAddEntry(_In_ PCWSTR VolumeName,_In_ PCWSTR WimPath,_In_ DWORD WimType,_In_ DWORD WimIndex,_Out_ PLARGE_INTEGER DataSourceId)
private void None.On_Click(Object source None,System.EventArgs e None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcObjectSetType(UUID *ObjUuid None,UUID *TypeUuid None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcErrorLoadErrorInfo(_In_ PVOID ErrorBlob,_In_ size_t BlobSize,_Out_ RPC_ERROR_ENUM_HANDLE *EnumHandle)
RPC_STATUS RPC_ENTRY rpcrt4.RpcBindingSetObject(RPC_BINDING_HANDLE Binding None,UUID *ObjectUuid None)
BOOL CALLBACK None.EnumDateFormatsProcEx(_In_ LPTSTR lpDateFormatString,_In_ CALID CalendarID)
RPC_STATUS None rpcrt4.RpcBindingBind(_In_opt_ PRPC_ASYNC_STATE pAsync,_In_ RPC_BINDING_HANDLE Binding,_In_ RPC_IF_HANDLE IfSpec)
BOOL None kernel32.EnumLanguageGroupLocales(_In_ LANGGROUPLOCALE_ENUMPROC lpLangGroupLocaleEnumProc,_In_ LGRPID LanguageGroup,_In_ DWORD dwFlags,_In_ LONG_PTR lParam)
BOOL None kernel32.EnumLanguageGroupLocalesW(_In_ LANGGROUPLOCALE_ENUMPROC lpLangGroupLocaleEnumProc,_In_ LGRPID LanguageGroup,_In_ DWORD dwFlags,_In_ LONG_PTR lParam)
BOOL None kernel32.EnumLanguageGroupLocalesA(_In_ LANGGROUPLOCALE_ENUMPROC lpLangGroupLocaleEnumProc,_In_ LGRPID LanguageGroup,_In_ DWORD dwFlags,_In_ LONG_PTR lParam)
RPC_STATUS RPC_ENTRY rpcrt4.RpcProtseqVectorFree(RPC_PROTSEQ_VECTOR **ProtSeqVector None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcProtseqVectorFreeW(RPC_PROTSEQ_VECTOR **ProtSeqVector None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcProtseqVectorFreeA(RPC_PROTSEQ_VECTOR **ProtSeqVector None)
DWORD WINAPI kernel32.GetFinalPathNameByHandle(_In_ HANDLE hFile,_Out_ LPTSTR lpszFilePath,_In_ DWORD cchFilePath,_In_ DWORD dwFlags)
DWORD WINAPI kernel32.GetFinalPathNameByHandleW(_In_ HANDLE hFile,_Out_ LPTSTR lpszFilePath,_In_ DWORD cchFilePath,_In_ DWORD dwFlags)
DWORD WINAPI kernel32.GetFinalPathNameByHandleA(_In_ HANDLE hFile,_Out_ LPTSTR lpszFilePath,_In_ DWORD cchFilePath,_In_ DWORD dwFlags)
protected void None.OnSizeChanged(EventArgs e None)
uint32 None None.UnlockWithAdSid([in] string SidString)
uint32 None dnsserverpsprovider.Remove([in] string IPAddress[],[in] string ComputerName,[in] boolean PassThru,[in] boolean Force,[out] DnsServerForwarder cmdletOutput)
RPC_STATUS None rpcrt4.RpcServerSubscribeForNotification(_In_ RPC_BINDING_HANDLE Binding,_In_ DWORD Notification,_In_ RPC_NOTIFICATION_TYPES NotificationType,_In_ RPC_ASYNC_NOTIFICATION_INFO *NotificationInfo)
RPC_STATUS RPC_ENTRY rpcrt4.RpcStringBindingParse(TCHAR *StringBinding None,TCHAR **ObjectUuid None,TCHAR **ProtSeq None,TCHAR **NetworkAddr None,TCHAR **EndPoint None,TCHAR **NetworkOptions None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcStringBindingParseW(TCHAR *StringBinding None,TCHAR **ObjectUuid None,TCHAR **ProtSeq None,TCHAR **NetworkAddr None,TCHAR **EndPoint None,TCHAR **NetworkOptions None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcStringBindingParseA(TCHAR *StringBinding None,TCHAR **ObjectUuid None,TCHAR **ProtSeq None,TCHAR **NetworkAddr None,TCHAR **EndPoint None,TCHAR **NetworkOptions None)
uint32 None dnsserverpsprovider.Add([in] string Name,[in] string Forwarder[],[in] boolean EnableRecursion,[in] boolean PassThru,[in] string ComputerName,[out] DnsServerRecursionScope cmdletOutput)
RPC_STATUS RPC_ENTRY rpcrt4.MesHandleFree(handle_t Handle None)
public Message None.ReceiveByCorrelationId(String correlationId None,MessageQueueTransactionType transactionType None)
uint32 None None.GetKeyProtectorNumericalPassword([in] string VolumeKeyProtectorID,[out] string NumericalPassword)
DWORD WINAPI advapi32.QueryRecoveryAgentsOnEncryptedFile(_In_ LPCWSTR lpFileName,_Out_ PENCRYPTION_CERTIFICATE_HASH_LIST *pRecoveryAgents)
BOOL None kernel32.EnumSystemGeoID(_In_ GEOCLASS GeoClass,_In_ GEOID ParentGeoId,_In_ GEO_ENUMPROC lpGeoEnumProc)
RPC_STATUS RPC_ENTRY rpcrt4.RpcIfInqId(RPC_IF_HANDLE RpcIfHandle None,RPC_IF_ID *RpcIfId None)
uint32 None None.EnableDevice([in] boolean Enabled)
BOOL None kernel32.SetCalendarInfo(_In_ LCID Locale,_In_ CALID Calendar,_In_ CALTYPE CalType,_In_ LPCTSTR lpCalData)
BOOL None kernel32.SetCalendarInfoW(_In_ LCID Locale,_In_ CALID Calendar,_In_ CALTYPE CalType,_In_ LPCTSTR lpCalData)
BOOL None kernel32.SetCalendarInfoA(_In_ LCID Locale,_In_ CALID Calendar,_In_ CALTYPE CalType,_In_ LPCTSTR lpCalData)
public void None.EnumerateMetafile(Metafile metafile None,Point destPoint None,EnumerateMetafileProc callback None,IntPtr callbackData None,ImageAttributes imageAttr None)
uint32 None None.SetIdentificationField([in None None,optional] string IdentificationField)
uint32 None None.GetSuspendCount(uint32 SuspendCount None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcBindingServerFromClient(RPC_BINDING_HANDLE ClientBinding None,RPC_BINDING_HANDLE *ServerBinding None)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsProfileEltInqDone(RPC_NS_HANDLE *InquiryContext None)
uint32 None None.ProtectKeyWithTPMAndPIN([in None None,optional] string FriendlyName,[in None None,optional] uint8 PlatformValidationProfile[],[in] string PIN,[out] string VolumeKeyProtectorID)
DWORD None kernel32.IsValidNLSVersion(_In_ NLS_FUNCTION function,_In_opt_ LPCWSTR lpLocaleName,_In_ LPNLSVERSIONINFOEX lpVersionInformation)
uint32 None None.EnableDevice([in] boolean Enabled)
BOOL None kernel32.GetCPInfo(_In_ UINT CodePage,_Out_ LPCPINFO lpCPInfo)
uint32 None None.DeleteKeyProtector([in] string VolumeKeyProtectorID)
BOOL WINAPI kernel32.ReplaceFile(_In_ LPCTSTR lpReplacedFileName,_In_ LPCTSTR lpReplacementFileName,_In_opt_ LPCTSTR lpBackupFileName,_In_ DWORD dwReplaceFlags,_Reserved_ LPVOID lpExclude,_Reserved_ LPVOID lpReserved)
BOOL WINAPI kernel32.ReplaceFileW(_In_ LPCTSTR lpReplacedFileName,_In_ LPCTSTR lpReplacementFileName,_In_opt_ LPCTSTR lpBackupFileName,_In_ DWORD dwReplaceFlags,_Reserved_ LPVOID lpExclude,_Reserved_ LPVOID lpReserved)
BOOL WINAPI kernel32.ReplaceFileA(_In_ LPCTSTR lpReplacedFileName,_In_ LPCTSTR lpReplacementFileName,_In_opt_ LPCTSTR lpBackupFileName,_In_ DWORD dwReplaceFlags,_Reserved_ LPVOID lpExclude,_Reserved_ LPVOID lpReserved)
RPC_STATUS RPC_ENTRY rpcrt4.RpcAsyncGetCallStatus(PRPC_ASYNC_STATE pAsync None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcImpersonateClientContainer(_In_opt_ RPC_BINDING_HANDLE BindingHandle)
RPC_STATUS RPC_ENTRY rpcrt4.RpcServerInqBindings(RPC_BINDING_VECTOR **BindingVector None)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsBindingImportDone(RPC_NS_HANDLE *ImportContext None)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsBindingLookupDone(RPC_NS_HANDLE *LookupContext None)
RPC_STATUS RPC_ENTRY rpcdiag.RpcDiagnoseError(_In_ RPC_BINDING_HANDLE BindingHandle,_In_ RPC_IF_HANDLE IfSpec,_In_ RPC_STATUS RpcStatus,_In_opt_ RPC_ERROR_ENUM_HANDLE *EnumHandle,_In_ ULONG Options,_In_opt_ HWND ParentWindow)
RPC_STATUS RPC_ENTRY rpcrt4.RpcErrorGetNextRecord(_In_ RPC_ERROR_ENUM_HANDLE *EnumHandle,_In_ BOOL CopyStrings,_Out_ RPC_EXTENDED_ERROR_INFO *ErrorInfo)
RPC_STATUS RPC_ENTRY rpcrt4.RpcBindingFree(RPC_BINDING_HANDLE *Binding None)
uint32 None netadaptercim.Disable([out] string cmdletOutput)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsBindingImportNext(RPC_NS_HANDLE ImportContext None,RPC_BINDING_HANDLE *Binding None)
BOOL CALLBACK None.EnumDateFormatsProcExEx(_In_ LPWSTR lpDateFormatString,_In_ CALID CalendarID,_In_ LPARAM lParam)
BOOL None kernel32.EnumTimeFormatsEx(_In_ TIMEFMT_ENUMPROCEX lpTimeFmtEnumProcEx,_In_opt_ LPCWSTR lpLocaleName,_In_ DWORD dwFlags,_In_ LPARAM lParam)
BOOL None kernel32.GetCPInfoEx(_In_ UINT CodePage,_In_ DWORD dwFlags,_Out_ LPCPINFOEX lpCPInfoEx)
BOOL None kernel32.GetCPInfoExW(_In_ UINT CodePage,_In_ DWORD dwFlags,_Out_ LPCPINFOEX lpCPInfoEx)
BOOL None kernel32.GetCPInfoExA(_In_ UINT CodePage,_In_ DWORD dwFlags,_Out_ LPCPINFOEX lpCPInfoEx)
uint32 None ramgmtpsprovider.Set([in] string Name,[in] string LocalIPAddress,[in] string PeerIPAddress,[in] uint32 LocalASN,[in] uint32 PeerASN,[in] uint32 OperationMode,[in] uint32 PeeringMode,[in] uint16 HoldTimeSec,[in] uint16 IdleHoldTimeSec,[in] uint16 Weight,[in] boolean RouteReflectorClient,[in] uint32 MaxAllowedPrefix,[in] string RoutingDomain,[in] boolean PassThru,[in] boolean Force,[in] boolean ClearPrefixLimit,[out] BgpPeerConfig cmdletOutput)
LCID None nlsmap.DownlevelGetParentLocaleLCID(_In_ LCID Locale)
private void None.DrawCursorsOnForm(Cursor cursor None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcServerInqIf(RPC_IF_HANDLE IfSpec None,UUID *MgrTypeUuid None,RPC_MGR_EPV **MgrEpv None)
GEOID None kernel32.GetUserGeoID(_In_ GEOCLASS GeoClass)
BOOL None kernel32.EnumSystemLanguageGroups(_In_ LANGUAGEGROUP_ENUMPROC lpLanguageGroupEnumProc,_In_ DWORD dwFlags,_In_ LONG_PTR lParam)
BOOL None kernel32.EnumSystemLanguageGroupsW(_In_ LANGUAGEGROUP_ENUMPROC lpLanguageGroupEnumProc,_In_ DWORD dwFlags,_In_ LONG_PTR lParam)
BOOL None kernel32.EnumSystemLanguageGroupsA(_In_ LANGUAGEGROUP_ENUMPROC lpLanguageGroupEnumProc,_In_ DWORD dwFlags,_In_ LONG_PTR lParam)
RPC_STATUS RPC_ENTRY rpcrt4.RpcMgmtEpEltInqDone(RPC_EP_INQ_HANDLE *InquiryContext None)
uint32 None None.SetPowerState([in] uint16 PowerState,[in] datetime Time)
RPC_STATUS RPC_ENTRY rpcrt4.RpcObjectSetInqFn(RPC_OBJECT_INQ_FN InquiryFn None)
uint32 None None.ProtectKeyWithTPMAndPINAndStartupKey([in None None,optional] string FriendlyName,[in None None,optional] uint8 PlatformValidationProfile,[in] string PIN,[in None None,optional] uint8 ExternalKey[],[out] string VolumeKeyProtectorID)
uint32 None None.SetPowerState([in] uint16 PowerState,[in] datetime Time)
uint32 None ramgmtpsprovider.Get([in] string RoutingDomain,[in] string Prefix[],[out] BgpRouteAggregateConfig cmdletOutput[])
RPC_STATUS RPC_ENTRY rpcns4.RpcNsGroupMbrInqDone(RPC_NS_HANDLE *InquiryContext None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcServerRegisterIf(RPC_IF_HANDLE IfSpec None,UUID *MgrTypeUuid None,RPC_MGR_EPV *MgrEpv None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcCancelThread(HANDLE ThreadHandle None)
uint32 None None.EnableDevice([in] boolean Enabled)
RPC_STATUS RPC_ENTRY rpcrt4.RpcMgmtIsServerListening(RPC_BINDING_HANDLE Binding None)
uint32 None wfascim.CloneObject([in] string NewName,[in] string NewID,[in] string NewPolicyStore,[in] string NewGPOSession)
RPC_STATUS WINAPI rpcrt4.RpcServerInterfaceGroupInqBindings(_In_ RPC_INTERFACE_GROUP IfGroup,_Out_ RPC_BINDING_VECTOR *BindingVector)
BOOL None kernel32.GetNLSVersion(_In_ NLS_FUNCTION Function,_In_ LCID Locale,_Inout_ LPNLSVERSIONINFO lpVersionInformation)
RPC_STATUS RPC_ENTRY rpcrt4.RpcMgmtStatsVectorFree(RPC_STATS_VECTOR **StatsVector None)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsBindingLookupNext(RPC_NS_HANDLE LookupContext None,RPC_BINDING_VECTOR **BindingVec None)
BOOL WINAPI kernel32.GetQueuedCompletionStatusEx(_In_ HANDLE CompletionPort,_Out_ LPOVERLAPPED_ENTRY lpCompletionPortEntries,_In_ ULONG ulCount,_Out_ PULONG ulNumEntriesRemoved,_In_ DWORD dwMilliseconds,_In_ BOOL fAlertable)
protected void None.OnClick(EventArgs e None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcSmSetThreadHandle(RPC_SS_THREAD_HANDLE Handle None)
uint32 None None.SetPowerState([in] uint16 PowerState,[in] datetime Time)
BOOL None kernel32.EnumDateFormatsEx(_In_ DATEFMT_ENUMPROCEX lpDateFmtEnumProcEx,_In_ LCID Locale,_In_ DWORD dwFlags)
BOOL None kernel32.EnumDateFormatsExW(_In_ DATEFMT_ENUMPROCEX lpDateFmtEnumProcEx,_In_ LCID Locale,_In_ DWORD dwFlags)
BOOL None kernel32.EnumDateFormatsExA(_In_ DATEFMT_ENUMPROCEX lpDateFmtEnumProcEx,_In_ LCID Locale,_In_ DWORD dwFlags)
BOOL CALLBACK None.EnumLanguageGroupLocalesProc(_In_ LGRPID LanguageGroup,_In_ LCID Locale,_In_ LPTSTR lpLocaleString,_In_ LONG_PTR lParam)
uint32 None ramgmtpsprovider.Remove([in] string Name[],[in] string RoutingDomain,[in] boolean Force)
uint32 None None.GetErrorEx([out] string Errors[])
uint32 None None.QuiesceDevice([in] boolean Quiesce)
RPC_STATUS RPC_ENTRY rpcrt4.RpcMgmtStopServerListening(RPC_BINDING_HANDLE Binding None)
uint32 None None.KillJob([in] boolean DeleteOnKill)
private void None.On_Click(Object source None,System.EventArgs e None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcGetAuthorizationContextForClient(_In_opt_ RPC_BINDING_HANDLE ClientBinding,_In_ BOOL ImpersonateOnReturn,_In_ PVOID Reserved1,_In_opt_ PLARGE_INTEGER pExpirationTime,_In_ LUID Reserved2,_In_ DWORD Reserved3,_In_ PVOID Reserved4,_Out_ PVOID *pAuthzClientContext)
uint32 None None.LockMedia([in] boolean Lock)
uint32 None None.ChangeOwnerAuth([in] string OldOwnerAuth,[in] string NewOwnerAuth)
BOOL None kernel32.SetUserGeoID(_In_ GEOID GeoId)
BOOL None kernel32.EnumDateFormats(_In_ DATEFMT_ENUMPROC lpDateFmtEnumProc,_In_ LCID Locale,_In_ DWORD dwFlags)
BOOL None kernel32.EnumDateFormatsW(_In_ DATEFMT_ENUMPROC lpDateFmtEnumProc,_In_ LCID Locale,_In_ DWORD dwFlags)
BOOL None kernel32.EnumDateFormatsA(_In_ DATEFMT_ENUMPROC lpDateFmtEnumProc,_In_ LCID Locale,_In_ DWORD dwFlags)
public Message None.EndReceive(IAsyncResult asyncResult None)
uint32 None ramgmtpsprovider.Remove([in] string RoutingDomain,[in] string Prefix[],[in] boolean Force)
BOOL CALLBACK None.Geo_EnumNameProc(_In_ PWSTR GeoName,LPARAM data None)
private void None.listDragSource_QueryContinueDrag(Object sender None,System.Windows.Forms.QueryContinueDragEventArgs e None)
protected void None.OnImeModeChanged(EventArgs e None)
BOOL None kernel32.SetLocaleInfo(_In_ LCID Locale,_In_ LCTYPE LCType,_In_ LPCTSTR lpLCData)
BOOL None kernel32.SetLocaleInfoW(_In_ LCID Locale,_In_ LCTYPE LCType,_In_ LPCTSTR lpLCData)
BOOL None kernel32.SetLocaleInfoA(_In_ LCID Locale,_In_ LCTYPE LCType,_In_ LPCTSTR lpLCData)
protected void None.OnLostFocus(EventArgs e None)
uint32 None wfascim.CloneObject([in] string NewName,[in] string NewID,[in] string NewPolicyStore,[in] string NewGPOSession)
protected void None.OnDragOver(DragEventArgs drgevent None)
uint32 None None.QuiesceDevice([in] boolean Quiesce)
uint32 None nettcpip.Create([in] uint32 InterfaceIndex,[in] string InterfaceAlias,[in] string DestinationPrefix,[in] string NextHop,[in] uint8 Publish,[in] uint16 RouteMetric,[in] uint16 Protocol,[in] datetime ValidLifetime,[in] datetime PreferredLifetime,[in] string PolicyStore,[in] uint16 AddressFamily,[in] boolean PassThru,[out] MSFT_NetRoute CmdletOutput[])
BOOL CALLBACK None.EnumLanguageGroupsProc(_In_ LGRPID LanguageGroup,_In_ LPTSTR lpLanguageGroupString,_In_ LPTSTR lpLanguageGroupNameString,_In_ DWORD dwFlags,_In_ LONG_PTR lParam)
BOOL CALLBACK None.EnumDateFormatsProc(_In_ LPTSTR lpDateFormatString)
DWORD None None.MAKELCID(WORD wLanguageID None,WORD wSortID None)
private void None.On_Click(Object source None,System.EventArgs e None)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsBindingLookupNext(RPC_NS_HANDLE LookupContext None,RPC_BINDING_VECTOR **BindingVec None)
BOOL None kernel32.IsValidLocale(_In_ LCID Locale,_In_ DWORD dwFlags)
short None None.ToInt16(IFormatProvider provider None)
protected void None.OnDragOver(DragEventArgs drgevent None)
SerializableAttribute None None.ClassInterfaceAttribute(ClassInterfaceType.None None None)
public void None.TranslateClip(int dx None,int dy None)
protected void None.OnPaintBackground(PaintEventArgs e None)
protected void None.OnImeModeChanged(EventArgs e None)
protected void None.OnMouseDown(MouseEventArgs mea None)
private void None.OnDSUpdatedHandler(Object source None,SqlDataSourceStatusEventArgs e None)
private void None.listDragTarget_DragOver(Object sender None,System.Windows.Forms.DragEventArgs e None)
byte None None.ToByte(IFormatProvider provider None)
protected void None.OnColumnStateChanged(DataGridViewColumnStateChangedEventArgs e None)
public void None.TranslateClip(int dx None,int dy None)
private void None.InsertShipper(Object source None,System.EventArgs e None)
private void None.InsertShipper(Object source None,System.EventArgs e None)
private void None.OnDSUpdatedHandler(Object source None,SqlDataSourceStatusEventArgs e None)
protected void None.OnImeModeChanged(EventArgs e None)
void None None.Insert(int index None,Object value None)
HRESULT None None.SetSD([in] uint8 SD[])
Object None None.GetFormat(Type formatType None)
public HitTestInfo None.HitTest(int x None,int y None)
byte None None.ToByte(IFormatProvider provider None)
void None None.AddInheritedComponents(IComponent component None,IContainer container None)
private void None.On_Click(Object source None,System.EventArgs e None)
Object None None.GetFormat(Type formatType None)
private void None.listDragTarget_DragOver(Object sender None,System.Windows.Forms.DragEventArgs e None)
DateTime None None.ToDateTime(IFormatProvider provider None)
private void None.UpdateRecords(Object source None,System.EventArgs e None)
private void None.ChangePageUnit(PaintEventArgs e None)
protected void None.OnParentRightToLeftChanged(EventArgs e None)
DateTime None None.ToDateTime(IFormatProvider provider None)
uint32 None netadaptercim.Disable([out] string cmdletOutput)
SerializableAttribute None None.ClassInterfaceAttribute(ClassInterfaceType.None None None)
public DateTime None.ToDateTime(int year None,int month None,int day None,int hour None,int minute None,int second None,int millisecond None,int era None)
protected boolean None.ProcessInsertKey(Keys keyData None)
protected void None.OnHandleCreated(EventArgs e None)
Object None None.GetFormat(Type formatType None)
protected void None.OnClientSizeChanged(EventArgs e None)
private void None.listDragTarget_DragDrop(Object sender None,System.Windows.Forms.DragEventArgs e None)
void None None.Insert(int index None,Object value None)
private void None.button1_Click(Object sender None,System.EventArgs e None)
SerializableAttribute None None.ClassInterfaceAttribute(ClassInterfaceType.None None None)
short None None.ToInt16(IFormatProvider provider None)
DateTime None None.ToDateTime(IFormatProvider provider None)
private void None.On_Click(Object source None,System.EventArgs e None)
public boolean None.CanRemove(DataColumn column None)
public int None.GetWeekOfYear(DateTime time None,CalendarWeekRule rule None,DayOfWeek firstDayOfWeek None)
private void None.listDragTarget_DragOver(Object sender None,System.Windows.Forms.DragEventArgs e None)
private void None.listDragTarget_DragDrop(Object sender None,System.Windows.Forms.DragEventArgs e None)
private void None.UpdateRecords(Object source None,System.EventArgs e None)
protected void None.OnHandleCreated(EventArgs e None)
uint32 None netadaptercim.Disable([out] string cmdletOutput)
uint32 None netadaptercim.Enable([out] string cmdletOutput)
short None None.ToInt16(IFormatProvider provider None)
private void None.button1_Click(Object sender None,System.EventArgs e None)
uint32 None cimwin32.SetConfigurationSecurityDescriptor([in] Win32_SecurityDescriptor Descriptor)
private void None.listDragSource_QueryContinueDrag(Object sender None,System.Windows.Forms.QueryContinueDragEventArgs e None)
protected void None.AccessibilityNotifyClients(AccessibleEvents accEvent None,int childID None)
public String None.ToString(String format None)
private void None.AddShadow(PaintEventArgs e None)
public void None.Send(Object obj None)
public None None.DateTime(int year None,int month None,int day None,int hour None,int minute None,int second None,DateTimeKind kind None)
uint32 None None.SetSecurityDescriptor([in] __SecurityDescriptor Descriptor)
private void None.On_Click(Object source None,System.EventArgs e None)
private void None.DataGridTableStyleSampleLoad(Object sender None,EventArgs e None)
protected Type None.GetTypeFromName(String typeName None)
private void None.listDragTarget_DragOver(Object sender None,System.Windows.Forms.DragEventArgs e None)
public None None.DateTime(int year None,int month None,int day None,int hour None,int minute None,int second None,DateTimeKind kind None)
protected void None.OnHandleCreated(EventArgs e None)
private void None.DataGridTableStyleSampleLoad(Object sender None,EventArgs e None)
public void None.Send(Object obj None)
public String None.TrimStart(char[] trimChars None)
private void None.listDragTarget_DragOver(Object sender None,System.Windows.Forms.DragEventArgs e None)
public DayOfWeek None.GetDayOfWeek(DateTime time None)
private void None.MyListView_AfterLabelEdit(Object sender None,System.Windows.Forms.LabelEditEventArgs e None)
private void None.On_Inserting(Object sender None,SqlDataSourceCommandEventArgs e None)
public int None.GetDaysInMonth(int year None,int month None)
public None None.DateTime(int year None,int month None,int day None,Calendar calendar None)
private void None.listDragSource_QueryContinueDrag(Object sender None,System.Windows.Forms.QueryContinueDragEventArgs e None)
public None None.DateTime(int year None,int month None,int day None,int hour None,int minute None,int second None,DateTimeKind kind None)
private void None.whatIsChecked_Click(Object sender None,System.EventArgs e None)
public String None.TrimStart(char[] trimChars None)
private void None.ShowPropertiesOfSlateBlue(PaintEventArgs e None)
private void None.On_Click(Object source None,System.EventArgs e None)
protected void None.InsertItem(int index None,T item None)
public DayOfWeek None.GetDayOfWeek(DateTime time None)
private void None.Page_Load(Object sender None,System.EventArgs e None)
public boolean None.IsQNameEqual(XPathNavigator n1 None,XPathNavigator n2 None)
protected void None.OnDoubleClick(EventArgs e None)
public String None.Replace(String oldValue None,String newValue None)
public String None.PadRight(int totalWidth None)
protected None None.Menu(MenuItem[] items None)
private void None.OnRecordDeleting(Object source None,SqlDataSourceCommandEventArgs e None)
private void None.listDragTarget_DragOver(Object sender None,System.Windows.Forms.DragEventArgs e None)
protected void None.OnDoubleClick(EventArgs e None)
private void None.listDragTarget_DragOver(Object sender None,System.Windows.Forms.DragEventArgs e None)
public int None.GetYear(DateTime time None)
public String None.Replace(String oldValue None,String newValue None)
public void None.ExtractValuesFromCell(IOrderedDictionary dictionary None,DataControlFieldCell cell None,DataControlRowState rowState None,boolean includeReadOnly None)
public void None.DrawToBitmap(Bitmap bitmap None,Rectangle targetBounds None)
public void None.InvalidateRow(int rowIndex None)
private void None.listDragTarget_DragLeave(Object sender None,System.EventArgs e None)
private void None.listDragTarget_DragOver(Object sender None,System.Windows.Forms.DragEventArgs e None)
public void None.InvalidateRow(int rowIndex None)
protected void None.RaisePaintEvent(Object key None,PaintEventArgs e None)
public String None.Replace(String oldValue None,String newValue None)
public IEnumerable None.Select(DataSourceSelectArguments arguments None)
private void None.listDragTarget_DragOver(Object sender None,System.Windows.Forms.DragEventArgs e None)
public double None.GetMilliseconds(DateTime time None)
public Control None.GetNextControl(Control ctl None,boolean forward None)
public boolean None.MoveToChild(XPathNodeType type None)
private void None.listView1_BeforeLabelEdit(Object sender None,System.Windows.Forms.LabelEditEventArgs e None)
protected void None.OnBackgroundColorChanged(EventArgs e None)
protected void None.OnLoad(EventArgs e None)
protected void None.OnMouseDoubleClick(MouseEventArgs e None)
private void None.listDragTarget_DragOver(Object sender None,System.Windows.Forms.DragEventArgs e None)
protected void None.OnColumnHeaderMouseDoubleClick(DataGridViewCellMouseEventArgs e None)
protected String None.MapPathSecure(String virtualPath None)
public void None.RenderEndTag(HtmlTextWriter writer None)
public boolean None.MoveToChild(XPathNodeType type None)
public CultureInfo None.GetLoadLanguage(Object o None)
public None None.XmlSerializer(Type type None)
public boolean None.MoveToChild(XPathNodeType type None)
private void None.listView1_BeforeLabelEdit(Object sender None,System.Windows.Forms.LabelEditEventArgs e None)
private void None.DataGridTableStyleSampleLoad(Object sender None,EventArgs e None)
protected void None.OnControlAdded(ControlEventArgs e None)
void None None.Page_Init(Object sender None,EventArgs e None)
public String None.Trim(char[] trimChars None)
private void None.listView1_BeforeLabelEdit(Object sender None,System.Windows.Forms.LabelEditEventArgs e None)
public String None.TrimEnd(char[] trimChars None)
protected void None.RaiseKeyEvent(Object key None,KeyEventArgs e None)
protected void None.OnCellMouseLeave(DataGridViewCellEventArgs e None)
public String None.Insert(int startIndex None,String value None)
public double None.GetMilliseconds(DateTime time None)
public None None.MenuItem(String text None,MenuItem[] items None)
protected void None.SetAutoSizeMode(AutoSizeMode mode None)
int None None.CompareTo(T other None)
public boolean None.MoveToChild(XPathNodeType type None)
protected boolean None.ProcessDialogChar(char charCode None)
private void None.Page_Load(Object sender None,System.EventArgs e None)
public void None.Serialize(XmlWriter xmlWriter None,Object o None,XmlSerializerNamespaces namespaces None)
int None None.DoSomething(long l None)
public None None.LocalizationExtenderProvider(ISite serviceProvider None,IComponent baseComponent None)
void None None.Remove(Object value None)
SerializableAttribute None None.TypeConverterAttribute(System.Windows.Forms.ListViewItemConverter None None)
protected Rectangle None.GetScaledBounds(Rectangle bounds None,SizeF factor None,BoundsSpecified specified None)
public None None.XmlSerializer(Type type None)
protected boolean None.ProcessEscapeKey(Keys keyData None)
public void None.Serialize(XmlWriter xmlWriter None,Object o None)
private void None.NorthwindEmployeeInserting(Object source None,ObjectDataSourceMethodEventArgs e None)
Dim None None.prices(3 None None,4 None None,5 None None)
public void None.Page_Load(Object sender None,EventArgs e None)
private void None.button1_Click(Object sender None,System.EventArgs e None)
protected LiteralControl None.CreateResourceBasedLiteralControl(int offset None,int size None,boolean fAsciiOnly None)
public void None.Page_Load(Object sender None,EventArgs e None)
public int None.GetMonth(DateTime time None)
public void None.Page_Load(Object sender None,EventArgs e None)
protected void None.AddedControl(Control control None,int index None)
private void None.NorthwindEmployeeInserting(Object source None,ObjectDataSourceMethodEventArgs e None)
public None None.EncoderReplacementFallback(String replacement None)
private void None.Menu_Copy(Object sender None,System.EventArgs e None)
public void None.Page_Load(Object sender None,EventArgs e None)
static void None.WriteObjectInfo(Object testObject None)
public boolean None.RequiresControlState(Control control None)
protected void None.ListErrors(IList errorList None)
SerializableAttribute None None.TypeConverterAttribute(System.Windows.Forms.ListViewItemConverter None None)
private void None.PrintCurrentListName(DataGrid myDataGrid None)
protected void None.OnResize(EventArgs e None)
public boolean None.IsNormalized(NormalizationForm normalizationForm None)
private void None.button4_Click(Object sender None,EventArgs e None)
public boolean None.RequiresControlState(Control control None)
protected void None.PreSerialize(XmlWriter writer None)
protected void None.AddParsedSubObject(Object obj None)
private void None.NorthwindEmployeeInserting(Object source None,ObjectDataSourceMethodEventArgs e None)
protected void None.ListErrors(IList errorList None)
public int None.LastIndexOfAny(char[] anyOf None,int startIndex None)
public boolean None.RequiresControlState(Control control None)
protected void None.OnParentChanged(EventArgs e None)
public String None.ToString(String format None)
public ListViewSubItem None.GetSubItemAt(int x None,int y None)
public boolean None.IsNormalized(NormalizationForm normalizationForm None)
void None None.Page_Load(Object sender None,System.EventArgs e None)
private void None.NorthwindEmployeeInserting(Object source None,ObjectDataSourceMethodEventArgs e None)
public DayOfWeek None.GetDayOfWeek(DateTime time None)
protected void None.OnParentChanged(EventArgs e None)
public DateTime None.ToDateTime(int year None,int month None,int day None,int hour None,int minute None,int second None,int millisecond None)
protected void None.OnParentChanged(EventArgs e None)
protected HorizontalAlignment None.RtlTranslateHorizontal(HorizontalAlignment align None)
protected void None.Render(HtmlTextWriter writer None)
char None None.ToChar(IFormatProvider provider None)
public int None.IndexOf(String value None,int startIndex None,StringComparison comparisonType None)
public String None.ToLower(CultureInfo culture None)
public String None.PadLeft(int totalWidth None)
protected LeftRightAlignment None.RtlTranslateLeftRight(LeftRightAlignment align None)
public DateTime None.AddMilliseconds(DateTime time None,double milliseconds None)
private void None.NorthwindEmployeeInserting(Object source None,ObjectDataSourceMethodEventArgs e None)
protected void None.OnPaint(PaintEventArgs e None)
void None None.ValidateBtn_Click(Object sender None,EventArgs e None)
protected void None.InitializePager(FormViewRow row None,PagedDataSource pagedDataSource None)
public String None.Normalize(NormalizationForm normalizationForm None)
protected void None.OnPaint(PaintEventArgs e None)
String None None.ToString(String format None,IFormatProvider formatProvider None)
public Point None.PointToClient(Point p None)
public void None.RenderBeginTag(HtmlTextWriter writer None)
protected void None.InvokeGotFocus(Control toInvoke None,EventArgs e None)
private void None.NorthwindEmployeeDeleting(Object source None,ObjectDataSourceMethodEventArgs e None)
public int None.Add(Object value None)
public void None.RemoveAt(int index None)
protected void None.LoadControlState(Object state None)
protected void None.LoadViewState(Object savedState None)
protected boolean None.BaseIsRemoved(Object key None)
protected Object None.CreateKnownType(int index None)
public void None.RenderBeginTag(HtmlTextWriter writer None)
private void None.Button1_Click(Object sender None,EventArgs myEventArgs None)
public Type None.GetChildControlType(String tagName None,IDictionary attribs None)
private void None.NorthwindEmployeeDeleting(Object source None,ObjectDataSourceMethodEventArgs e None)
public int None.SetValue(UInt32 value None)
private void None.NorthwindEmployeeDeleting(Object source None,ObjectDataSourceMethodEventArgs e None)
static String None.IsFileURI(String path None)
private void None.NorthwindEmployeeDeleting(Object source None,ObjectDataSourceMethodEventArgs e None)
Sub None None.ValidationFunctionName(source None None,arguments None None)
public int None.SetValue(UInt32 value None)
protected boolean None.SerializeToXmlElement(XmlWriter writer None,String elementName None)
public int None.LastIndexOfAny(char[] anyOf None)
private void None.Button1_Click(Object sender None,EventArgs myEventArgs None)
protected void None.LoadControlState(Object savedState None)
protected Object None.CreateKnownType(int index None)
public void None.RenderBeginTag(HtmlTextWriter writer None)
private void None.NorthwindEmployeeDeleting(Object source None,ObjectDataSourceMethodEventArgs e None)
public None None.TraceSource(String name None)
protected void None.OnStylusOutOfRange(StylusEventArgs e None)
private void None.NorthwindEmployeeDeleting(Object source None,ObjectDataSourceMethodEventArgs e None)
public void None.ApplyStyleSheetSkin(Page page None)
protected void None.OnItemUpdating(FormViewUpdateEventArgs e None)
protected Object None.CreateKnownType(int index None)
public boolean None.StartsWith(String value None,boolean ignoreCase None,CultureInfo culture None)
protected void None.Render(HtmlTextWriter output None)
void None None.SetOwnerControl(Control owner None)
public int None.SetValue(UInt32 value None)
public None None.FormViewRow(int itemIndex None,DataControlRowType rowType None,DataControlRowState rowState None)
public void None.Write(char[] buffer None,int index None,int count None)
protected void None.EntityDataSource2_ContextDisposing(object sender None,EntityDataSourceContextDisposingEventArgs e None)
public StringBuilder None.Replace(String oldValue None,String newValue None)
protected void None.OnRowStateChanged(int rowIndex None,DataGridViewRowStateChangedEventArgs e None)
protected Style None.CreateWebPartChromeStyle(WebPart webPart None,PartChromeType chromeType None)
private void None.button1_Click(Object sender None,System.EventArgs e None)
protected IInputElement None.InputHitTestCore(Point point None)
protected int None.CreateChildControls(IEnumerable dataSource None,boolean dataBinding None)
protected void None.RaiseDataSourceChangedEvent(EventArgs e None)
private void None.Page_Init(Object sender None,EventArgs e None)
create table None.MyTable(col1 int None,col2 smallmoney None,col3 decimal None)
void None None.Page_Load(Object sender None,System.EventArgs e None)
private void None.On_Inserting(Object sender None,SqlDataSourceCommandEventArgs e None)
protected void None.OnStylusMove(StylusEventArgs e None)
public void None.Insert(IDictionary values None,DataSourceViewOperationCallback callback None)
public boolean None.Equals(Object o None)
public boolean None.IsClientScriptIncludeRegistered(Type type None,String key None)
public void None.InvalidateProperty(DependencyProperty dp None)
void None None.LoadViewState(Object state None)
private void None.OnDSUpdatedHandler(Object source None,SqlDataSourceStatusEventArgs e None)
public void None.Insert(IDictionary values None,DataSourceViewOperationCallback callback None)
void None None.Page_Load(Object sender None,System.EventArgs e None)
public boolean None.IsClientScriptIncludeRegistered(Type type None,String key None)
void None None.Button1_Click(Object sender None,EventArgs e None)
protected Style None.CreateEditorPartChromeStyle(EditorPart editorPart None,PartChromeType chromeType None)
void None None.Button1_Click(Object sender None,EventArgs e None)
private void None.OnDSUpdatedHandler(Object source None,SqlDataSourceStatusEventArgs e None)
public boolean None.Contains(WizardStepBase wizardStep None)
protected void None.OnIsKeyboardFocusWithinChanged(DependencyPropertyChangedEventArgs e None)
protected void None.OnResize(EventArgs e None)
protected boolean None.FreezeCore(boolean isChecking None)
protected void None.SetDesignModeState(IDictionary data None)
private void None.OnDSUpdatedHandler(Object source None,SqlDataSourceStatusEventArgs e None)
protected void None.RenderContents(HtmlTextWriter writer None)
public void None.ApplyStyleSheetSkin(Page page None)
void None None.Button1_Click(Object sender None,EventArgs e None)
public void None.MoveTo(String destFileName None)
private void None.OnDSUpdatedHandler(Object source None,SqlDataSourceStatusEventArgs e None)
private void None.NorthwindEmployeeInserting(Object source None,ObjectDataSourceMethodEventArgs e None)
protected void None.InsertItem(int index None,T item None)
void None None.ValidateBtn_Click(Object sender None,EventArgs e None)
protected void None.OnPreviewStylusButtonDown(StylusButtonEventArgs e None)
protected void None.OnMouseLeftButtonUp(MouseButtonEventArgs e None)
public StringBuilder None.Insert(int index None,short value None)
public void None.Remove(DateTime date None)
static String None.IsFileURI(String path None)
protected void None.OnSelecting(ObjectDataSourceSelectingEventArgs e None)
private void None.NorthwindEmployeeInserting(Object source None,ObjectDataSourceMethodEventArgs e None)
public TimeSpan None.Subtract(DateTime value None)
protected void None.DataBind(boolean raiseOnDataBinding None)
protected void None.OnLoad(EventArgs e None)
void None None.Page_Load(Object sender None,EventArgs e None)
static String None.IsFileURI(String path None)
private void None.NorthwindEmployeeInserting(Object source None,ObjectDataSourceMethodEventArgs e None)
private void None.NorthwindEmployeeInserting(Object source None,ObjectDataSourceMethodEventArgs e None)
public None None.FontUnit(Unit value None)
public boolean None.Equals(Object value None)
void None None.Page_Load(Object sender None,EventArgs e None)
static String None.IsFileURI(String path None)
protected void None.OnInit(EventArgs e None)
private void None.NorthwindEmployeeInserting(Object source None,ObjectDataSourceMethodEventArgs e None)
protected void None.OnDeleted(ObjectDataSourceStatusEventArgs e None)
void None None.Page_Load(Object sender None,System.EventArgs e None)
public None None.GregorianCalendar(GregorianCalendarTypes type None)
public String None.Replace(String input None,MatchEvaluator evaluator None,int count None)
void None None.Page_Load(Object sender None,EventArgs e None)
public None None.StringBuilder(int capacity None)
static String None.IsFileURI(String path None)
public None None.StringBuilder(int capacity None,int maxCapacity None)
static String None.IsFileURI(String path None)
void None None.Page_Load(Object sender None,EventArgs e None)
public void None.SetValue(DependencyPropertyKey key None,Object value None)
static String None.IsFileURI(String path None)
void None None.Page_Load(Object sender None,System.EventArgs e None)
public None None.StringBuilder(String value None,int capacity None)
private void None.NorthwindEmployeeInserting(Object source None,ObjectDataSourceMethodEventArgs e None)
private void None.NorthwindEmployeeInserting(Object source None,ObjectDataSourceMethodEventArgs e None)
public None None.GridViewDeleteEventArgs(int rowIndex None)
static String None.IsFileURI(String path None)
private void None.NorthwindEmployeeInserting(Object source None,ObjectDataSourceMethodEventArgs e None)
void None None.Page_Load(Object sender None,System.EventArgs e None)
void None None.Page_Load(Object sender None,System.EventArgs e None)
DateTime None None.ToDateTime(IFormatProvider provider None)
private void None.NorthwindEmployeeInserting(Object source None,ObjectDataSourceMethodEventArgs e None)
protected void None.OnPagePreLoad(Object sender None,EventArgs e None)
static String None.IsFileURI(String path None)
DateTime None None.ToDateTime(IFormatProvider provider None)
public String None.GetString(String name None)
public void None.ConvertLongFloat(long longVal None)
public None None.WebPartVerbCollection(ICollection verbs None)
public int None.IndexOfAny(char[] anyOf None,int startIndex None)
protected Stream None.OpenFile(String path None)
protected void None.ArrangeCore(Rect finalRect None)
protected Size None.ArrangeOverride(Size finalSize None)
public void None.MoveTo(WizardStepBase wizardStep None)
protected void None.ArrangeCore(Rect finalRect None)
static void None.WriteObjectInfo(Object testObject None)
protected boolean None.FreezeCore(boolean isChecking None)
protected Size None.ArrangeOverride(Size finalSize None)
protected void None.CloneCore(Freezable sourceFreezable None)
public int None.LastIndexOf(String source None,char value None)
protected void None.CloneCurrentValueCore(Freezable sourceFreezable None)
protected void None.OnMouseDoubleClick(MouseButtonEventArgs e None)
public void None.Inflate(double width None,double height None)
public long None.Seek(long offset None,SeekOrigin origin None)
private void None.OnDelete(Object sender None,System.EventArgs e None)
public void None.Write(String message None)
protected Geometry None.GetLayoutClip(Size layoutSlotSize None)
protected void None.RemoveLogicalChild(Object child None)
public DateTime None.ToLocalTime(DateTime time None)
public GeneralTransform None.TransformToDescendant(Visual descendant None)
public void None.CopyTo(WizardStepBase[] array None,int index None)
protected void None.RemoveLogicalChild(Object child None)
protected Geometry None.GetLayoutClip(Size layoutSlotSize None)
public String None.PadRight(int totalWidth None,char paddingChar None)
protected void None.OnKeyDown(KeyEventArgs e None)
public int None.LastIndexOf(char value None)
protected void None.OnPreviewDragEnter(DragEventArgs e None)
public float None.GetCurrentValue(float defaultOriginValue None,float defaultDestinationValue None,AnimationClock animationClock None)
public char None.ToLower(char c None)
public DateTime None.ToLocalTime(DateTime time None)
public void None.RenderCatalogPart(HtmlTextWriter writer None,CatalogPart catalogPart None)
Object None None.ToType(Type conversionType None,IFormatProvider provider None)
protected void None.OnTextInput(TextCompositionEventArgs e None)
protected void None.OnStylusInAirMove(StylusEventArgs e None)
protected void None.OnStylusDown(StylusDownEventArgs e None)
protected void None.OnPreviewMouseLeftButtonUp(MouseButtonEventArgs e None)
protected Visual None.GetVisualChild(int index None)
protected Style None.CreateCatalogPartChromeStyle(CatalogPart catalogPart None,PartChromeType chromeType None)
public void None.RenderCatalogPart(HtmlTextWriter writer None,CatalogPart catalogPart None)
public void None.RenderCatalogPart(HtmlTextWriter writer None,CatalogPart catalogPart None)
protected void None.OnStylusEnter(StylusEventArgs e None)
Object None None.ToType(Type conversionType None,IFormatProvider provider None)
protected void None.OnDataSourceViewChanged(Object sender None,EventArgs e None)
Object None None.ToType(Type conversionType None,IFormatProvider provider None)
public void None.RenderCatalogPart(HtmlTextWriter writer None,CatalogPart catalogPart None)
Object None None.ToType(Type conversionType None,IFormatProvider provider None)
protected void None.OnMouseMove(MouseEventArgs e None)
public void None.RenderCatalogPart(HtmlTextWriter writer None,CatalogPart catalogPart None)
protected void None.OnMouseLeave(MouseEventArgs e None)
protected Style None.CreateCatalogPartChromeStyle(CatalogPart catalogPart None,PartChromeType chromeType None)
public IInputElement None.InputHitTest(Point point None)
Object None None.ToType(Type conversionType None,IFormatProvider provider None)
public int None.LastIndexOf(String value None,int startIndex None,StringComparison comparisonType None)
protected void None.OnRender(DrawingContext dc None)
protected void None.OnPreviewMouseRightButtonUp(MouseButtonEventArgs e None)
public IInputElement None.InputHitTest(Point point None)
Decimal None None.ToDecimal(IFormatProvider provider None)
public int None.Compare(String string1 None,String string2 None)
protected void None.OnLoad(EventArgs e None)
protected void None.OnIsStylusCapturedChanged(DependencyPropertyChangedEventArgs e None)
public IInputElement None.InputHitTest(Point point None)
public void None.ApplyStyle(Style s None)
protected void None.OnWebPartAdded(WebPartEventArgs e None)
public None None.StringInfo(String value None)
public String None.ToString(String format None,IFormatProvider provider None)
protected boolean None.ShouldSerializeProperty(DependencyProperty dp None)
void None None.TreeView1_SelectedNodeChanged(Object sender None,System.EventArgs e None)
public String None.ToUpper(CultureInfo culture None)
protected boolean None.ShouldSerializeProperty(DependencyProperty dp None)
protected void None.LinqDataSource_Updating(object sender None,LinqDataSourceUpdateEventArgs e None)
public StringBuilder None.Insert(int index None,short value None)
protected void None.OnPreRender(EventArgs e None)
public void None.Seek(FrameworkElement containingObject None,TimeSpan offset None,TimeSeekOrigin origin None)
private void None.TransformEventHandler(Object sender None,System.EventArgs e None)
protected void None.mgr1_AuthorizeWebPart(object sender None,WebPartAuthorizationEventArgs e None)
public String None.ToUpper(CultureInfo culture None)
protected void None.mgr1_AuthorizeWebPart(object sender None,WebPartAuthorizationEventArgs e None)
private void None.TransformEventHandler(Object sender None,System.EventArgs e None)
protected void None.OnLoad(EventArgs e None)
private void None.TransformEventHandler(Object sender None,System.EventArgs e None)
private void None.Button1_Click(Object sender None,EventArgs myEventArgs None)
private void None.TransformEventHandler(Object sender None,System.EventArgs e None)
public int None.IndexOf(char value None,int startIndex None,int count None)
public GeneralTransform None.TransformToVisual(Visual visual None)
protected void None.OnMouseUp(MouseButtonEventArgs e None)
public String None.ToUpper(CultureInfo culture None)
public void None.RenderEndTag(HtmlTextWriter writer None)
public void None.PerformLayout(Control affectedControl None,String affectedProperty None)
void None None.Page_Init(Object sender None,EventArgs e None)
public None None.StringBuilder(String value None,int capacity None)
protected void None.OnPreRender(EventArgs e None)
public ConfigurationSectionGroup None.GetSectionGroup(String sectionGroupName None)
protected void None.OnIsStylusDirectlyOverChanged(DependencyPropertyChangedEventArgs e None)
void None None.Page_Init(Object sender None,EventArgs e None)
void None None.Page_Init(Object sender None,EventArgs e None)
public String None.ResolveUrl(String relativeUrl None)
public StringBuilder None.Insert(int index None,Object value None)
public void None.RemoveAt(int index None)
protected void None.mgr1_AuthorizeWebPart(object sender None,WebPartAuthorizationEventArgs e None)
protected void None.OnPageIndexChanging(GridViewPageEventArgs e None)
public StringBuilder None.Insert(int index None,char[] value None)
public int None.IndexOf(String source None,String value None,int startIndex None,CompareOptions options None)
public ConsumerConnectionPointCollection None.GetConsumerConnectionPoints(WebPart webPart None)
public boolean None.IsPrefix(String source None,String prefix None,CompareOptions options None)
public void None.WriteByte(byte value None)
protected void None.OnPageIndexChanged(EventArgs e None)
public int None.IndexOf(String source None,String value None,int startIndex None,CompareOptions options None)
public None None.MenuItem(String text None,String value None,String imageUrl None,String navigateUrl None)
public XmlReadMode None.ReadXml(TextReader reader None)
public None None.MenuItem(String text None,String value None,String imageUrl None,String navigateUrl None)
public XmlReadMode None.ReadXml(TextReader reader None)
void None None.Page_Load(Object sender None,System.EventArgs e None)
public int None.Add(MenuItemBinding binding None)
public None None.MenuItem(String text None,String value None,String imageUrl None,String navigateUrl None)
public void None.ConvertDoubleDecimal(double doubleVal None)
public ListViewHitTestInfo None.HitTest(int x None,int y None)
public int None.IndexOf(String source None,char value None,int startIndex None,int count None)
void None None.Button1_Click(Object sender None,EventArgs e None)
protected String None.MapPathSecure(String virtualPath None)
protected void None.OnParentCursorChanged(EventArgs e None)
protected boolean None.IsInputKey(Keys keyData None)
public None None.GridViewPageEventArgs(int newPageIndex None)
public long None.Seek(int offset None,SeekOrigin origin None)
protected void None.OnRender(DrawingContext drawingContext None)
public void None.ConvertDoubleDecimal(double doubleVal None)
protected void None.button1_Click(Object sender None,System.EventArgs e None)
protected void None.OnParentCursorChanged(EventArgs e None)
public boolean None.IsVisible(float x None,float y None,float width None,float height None,Graphics g None)
public StringBuilder None.AppendFormat(String format None,Object arg0 None)
protected int None.ExecuteDelete(IDictionary keys None,IDictionary oldValues None)
protected void None.Dispose(boolean disposing None)
protected void None.LoadViewState(Object savedState None)
protected void None.AddAttributesToRender(HtmlTextWriter writer None)
private void None.OnRecordDeleting(Object source None,SqlDataSourceCommandEventArgs e None)
protected void None.Dispose(boolean disposing None)
public StringBuilder None.AppendFormat(String format None,Object arg0 None)
protected void None.AddParsedSubObject(Object obj None)
private void None.buttonNewCustomer_Click(Object sender None,EventArgs e None)
public AssemblyName None.GetAssemblyName(String assemblyFile None)
protected void None.ScaleCore(float dx None,float dy None)
protected void None.OnPaint(PaintEventArgs e None)
protected void None.ScaleCore(float dx None,float dy None)
protected void None.AddAttributesToRender(HtmlTextWriter writer None)
protected void None.AddChild(Object child None)
private void None.listDragTarget_DragOver(Object sender None,System.Windows.Forms.DragEventArgs e None)
protected void None.ScaleCore(float dx None,float dy None)
protected void None.OnMouseLeave(EventArgs e None)
private void None.listDragTarget_DragDrop(Object sender None,System.Windows.Forms.DragEventArgs e None)
private void None.MyForm_Layout(Object sender None,System.Windows.Forms.LayoutEventArgs e None)
private void None.listDragTarget_DragOver(Object sender None,System.Windows.Forms.DragEventArgs e None)
protected void None.AddAttributesToRender(HtmlTextWriter writer None)
public Object None.GetValue(DependencyProperty dp None)
protected void None.OnDragDrop(DragEventArgs drgevent None)
private void None.listDragTarget_DragOver(Object sender None,System.Windows.Forms.DragEventArgs e None)
protected void None.SetBoundsCore(int x None,int y None,int width None,int height None,BoundsSpecified specified None)
protected void None.OnPaint(PaintEventArgs e None)
protected void None.OnItemCheck(ItemCheckEventArgs ice None)
private void None.currencyTextBox_TextChanged(Object sender None,EventArgs e None)
public Point None.PointToClient(Point p None)
protected void None.DrawFocus(Graphics graphics None,Rectangle clipBounds None,Rectangle bounds None,int rowIndex None,DataGridViewElementStates rowState None,DataGridViewCellStyle cellStyle None,boolean cellsPaintSelectionBackground None)
public boolean None.Contains(Control ctl None)
protected void None.Add(Object dataSource None,BindingManagerBase listManager None)
protected void None.OnResizeEnd(EventArgs e None)
protected void None.Add(Object dataSource None,BindingManagerBase listManager None)
public None None.ListViewItem(String[] items None)
protected void None.SetBoundsCore(int x None,int y None,int width None,int height None,BoundsSpecified specified None)
protected void None.RenderBody(HtmlTextWriter writer None)
private void None.button1_Click(Object sender None,System.EventArgs e None)
protected void None.PaintHeader(Graphics graphics None,Rectangle clipBounds None,Rectangle rowBounds None,int rowIndex None,DataGridViewElementStates rowState None,boolean isFirstDisplayedRow None,boolean isLastVisibleRow None,DataGridViewPaintParts paintParts None)
protected void None.OnKeyDown(KeyEventArgs e None)
protected void None.OnParentChanged(EventArgs e None)
public None None.TimeoutException(String message None,Exception innerException None)
protected void None.OnKeyDown(KeyEventArgs e None)
protected void None.Dispose(boolean disposing None)
protected void None.OnParentEnabledChanged(EventArgs e None)
protected void None.Render(HtmlTextWriter writer None)
protected void None.OnSelectedItemChanged(Object source None,EventArgs e None)
protected void None.OnQueryContinueDrag(QueryContinueDragEventArgs qcdevent None)
protected void None.OnKeyDown(KeyEventArgs e None)
protected void None.Dispose(boolean disposing None)
public int None.Add(Object item None)
protected void None.OnKeyPress(KeyPressEventArgs e None)
protected void None.Dispose(boolean disposing None)
protected void None.Render(HtmlTextWriter writer None)
protected void None.OnKeyPress(KeyPressEventArgs e None)
private void None.radioButton1_CheckedChanged(Object sender None,EventArgs e None)
protected void None.Render(HtmlTextWriter writer None)
private void None.radioButton1_CheckedChanged(Object sender None,EventArgs e None)
private void None.addGrandButton_Click(Object sender None,System.EventArgs e None)
public Object None.GetEditor(Type editorBaseType None)
public String None.GetString(byte[] bytes None,int index None,int count None)
protected void None.OnLostFocus(EventArgs e None)
public void None.InvalidateProperty(DependencyProperty dp None)
public String None.GetString(byte[] bytes None,int index None,int count None)
private void None.radioButton1_CheckedChanged(Object sender None,EventArgs e None)
private void None.radioButton1_CheckedChanged(Object sender None,EventArgs e None)
protected void None.OnPropertyChanged(DependencyPropertyChangedEventArgs e None)
public StringBuilder None.AppendFormat(String format None,Object arg0 None,Object arg1 None)
public String None.GetString(byte[] bytes None,int index None,int count None)
public String None.GetString(byte[] bytes None,int index None,int count None)
protected void None.OnMouseLeave(EventArgs eventargs None)
public void None.EnumerateMetafile(Metafile metafile None,Point[] destPoints None,EnumerateMetafileProc callback None,IntPtr callbackData None,ImageAttributes imageAttr None)
public StringBuilder None.AppendFormat(String format None,Object arg0 None,Object arg1 None,Object arg2 None)
public void None.EnumerateMetafile(Metafile metafile None,Point[] destPoints None,EnumerateMetafileProc callback None)
public None None.SecurityException(String message None,Type type None,String state None)
void None None.OnDeserialization(Object sender None)
public void None.EnumerateMetafile(Metafile metafile None,Point[] destPoints None,EnumerateMetafileProc callback None,IntPtr callbackData None,ImageAttributes imageAttr None)
private void None.CreatePointsAndSizes(PaintEventArgs e None)
public void None.EnumerateMetafile(Metafile metafile None,Rectangle destRect None,Rectangle srcRect None,GraphicsUnit srcUnit None,EnumerateMetafileProc callback None)
public DirectoryEntry None.Add(String name None,String schemaClassName None)
protected void None.OnCheckedChanged(EventArgs e None)
protected void None.OnDockChanged(EventArgs e None)
public void None.PlayRecord(EmfPlusRecordType recordType None,int flags None,int dataSize None,byte[] data None)
protected void None.SetTopLevel(boolean value None)
public None None.KeyEventArgs(Keys keyData None)
public void None.SetClip(Graphics g None)
public void None.DrawImage(Image image None,Rectangle destRect None,float srcX None,float srcY None,float srcWidth None,float srcHeight None,GraphicsUnit srcUnit None,ImageAttributes imageAttrs None,DrawImageAbort callback None)
public TreeNode None.GetNodeAt(Point pt None)
public StringBuilder None.Insert(int index None,char[] value None,int startIndex None,int charCount None)
protected void None.SetTopLevel(boolean value None)
public void None.DrawCurve(Pen pen None,PointF[] points None)
private void None.Page_Load(Object sender None,System.EventArgs e None)
protected void None.SetTopLevel(boolean value None)
public boolean None.WaitOne(TimeSpan timeout None,boolean exitContext None)
public None None.Hashtable(IDictionary d None,float loadFactor None,IEqualityComparer equalityComparer None)
protected void None.OnForeColorChanged(EventArgs e None)
public boolean None.WaitOne(TimeSpan timeout None,boolean exitContext None)
public void None.EnumerateMetafile(Metafile metafile None,Rectangle destRect None,Rectangle srcRect None,GraphicsUnit srcUnit None,EnumerateMetafileProc callback None,IntPtr callbackData None)
public None None.Hashtable(IDictionary d None,float loadFactor None,IEqualityComparer equalityComparer None)
public void None.RemoveAt(int index None)
private void None.currencyTextBox_TextChanged(Object sender None,EventArgs e None)
private void None.Page_Load(Object sender None,System.EventArgs e None)
public void None.SetAutoScrollMargin(int x None,int y None)
public boolean None.Contains(Object item None)
public long None.Seek(long offset None,SeekOrigin origin None)
public boolean None.Validate(boolean checkAutoValidate None)
protected Stream None.OpenFile(String path None)
protected void None.RenderBody(HtmlTextWriter writer None)
protected void None.SetStyle(ControlStyles flag None,boolean value None)
public StringBuilder None.Append(int value None)
public void None.DrawToBitmap(Bitmap bitmap None,Rectangle targetBounds None)
private void None.button1_Click(Object sender None,EventArgs e None)
public None None.FormViewCommandEventArgs(Object commandSource None,CommandEventArgs originalArgs None)
public String None.GetAbbreviatedDayName(DayOfWeek dayofweek None)
public void None.Add(Object key None,Object value None)
public None None.FormViewCommandEventArgs(Object commandSource None,CommandEventArgs originalArgs None)
private void None.AddToolbarButtons(ToolBar toolBar None)
protected void None.OnPreviewGotKeyboardFocus(KeyboardFocusChangedEventArgs e None)
protected void None.OnLeave(EventArgs e None)
public void None.Remove(ToolBarButton button None)
public None None.FormViewCommandEventArgs(Object commandSource None,CommandEventArgs originalArgs None)
private void None.AddToolbarButtons(ToolBar toolBar None)
public None None.FormViewCommandEventArgs(Object commandSource None,CommandEventArgs originalArgs None)
protected void None.OnItemCommand(FormViewCommandEventArgs e None)
public int None.FindStringExact(String s None)
private void None.comboBox1_SelectedIndexChanged(Object sender None,EventArgs e None)
public GraphicsContainer None.BeginContainer(Rectangle dstrect None,Rectangle srcrect None,GraphicsUnit unit None)
