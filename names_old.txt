BOOL WINAPI kernel32.CopyFile(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName,_In_ BOOL bFailIfExists)
BOOL WINAPI kernel32.CopyFileW(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName,_In_ BOOL bFailIfExists)
BOOL WINAPI kernel32.CopyFileA(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName,_In_ BOOL bFailIfExists)
BOOL WINAPI kernel32.SetFileBandwidthReservation(_In_ HANDLE hFile,_In_ DWORD nPeriodMilliseconds,_In_ DWORD nBytesPerPeriod,_In_ BOOL bDiscardable,_Out_ LPDWORD lpTransferSize,_Out_ LPDWORD lpNumOutstandingRequests)
DWORD WINAPI advapi32.SetUserFileEncryptionKey(_In_ PENCRYPTION_CERTIFICATE pEncryptionCertificate)
DWORD WINAPI advapi32.WriteEncryptedFileRaw(_In_ PFE_IMPORT_FUNC pfImportCallback,_In_opt_ PVOID pvCallbackContext,_In_ PVOID pvContext)
BOOL WINAPI kernel32.FlushFileBuffers(_In_ HANDLE hFile)
DWORD WINAPI kernel32.GetFinalPathNameByHandle(_In_ HANDLE hFile,_Out_ LPTSTR lpszFilePath,_In_ DWORD cchFilePath,_In_ DWORD dwFlags)
DWORD WINAPI kernel32.GetFinalPathNameByHandleW(_In_ HANDLE hFile,_Out_ LPTSTR lpszFilePath,_In_ DWORD cchFilePath,_In_ DWORD dwFlags)
DWORD WINAPI kernel32.GetFinalPathNameByHandleA(_In_ HANDLE hFile,_Out_ LPTSTR lpszFilePath,_In_ DWORD cchFilePath,_In_ DWORD dwFlags)
INT WINAPI lz32.LZInit(_In_ INT hfSource)
BOOL WINAPI kernel32.ReadFileEx(_In_ HANDLE hFile,_Out_opt_ LPVOID lpBuffer,_In_ DWORD nNumberOfBytesToRead,_Inout_ LPOVERLAPPED lpOverlapped,_In_ LPOVERLAPPED_COMPLETION_ROUTINE lpCompletionRoutine)
DWORD CALLBACK None.CopyProgressRoutine(_In_ LARGE_INTEGER TotalFileSize,_In_ LARGE_INTEGER TotalBytesTransferred,_In_ LARGE_INTEGER StreamSize,_In_ LARGE_INTEGER StreamBytesTransferred,_In_ DWORD dwStreamNumber,_In_ DWORD dwCallbackReason,_In_ HANDLE hSourceFile,_In_ HANDLE hDestinationFile,_In_opt_ LPVOID lpData)
BOOLEAN WINAPI kernel32.CreateSymbolicLinkTransacted(_In_ LPTSTR lpSymlinkFileName,_In_ LPTSTR lpTargetFileName,_In_ DWORD dwFlags,_In_ HANDLE hTransaction)
BOOLEAN WINAPI kernel32.CreateSymbolicLinkTransactedW(_In_ LPTSTR lpSymlinkFileName,_In_ LPTSTR lpTargetFileName,_In_ DWORD dwFlags,_In_ HANDLE hTransaction)
BOOLEAN WINAPI kernel32.CreateSymbolicLinkTransactedA(_In_ LPTSTR lpSymlinkFileName,_In_ LPTSTR lpTargetFileName,_In_ DWORD dwFlags,_In_ HANDLE hTransaction)
HANDLE WINAPI kernel32.OpenFileById(_In_ HANDLE hFile,_In_ LPFILE_ID_DESCRIPTOR lpFileID,_In_ DWORD dwDesiredAccess,_In_ DWORD dwShareMode,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ DWORD dwFlags)
HANDLE WINAPI kernel32.CreateFile2(_In_ LPCWSTR lpFileName,_In_ DWORD dwDesiredAccess,_In_ DWORD dwShareMode,_In_ DWORD dwCreationDisposition,_In_opt_ LPCREATEFILE2_EXTENDED_PARAMETERS pCreateExParams)
BOOL WINAPI kernel32.ReplaceFile(_In_ LPCTSTR lpReplacedFileName,_In_ LPCTSTR lpReplacementFileName,_In_opt_ LPCTSTR lpBackupFileName,_In_ DWORD dwReplaceFlags,_Reserved_ LPVOID lpExclude,_Reserved_ LPVOID lpReserved)
BOOL WINAPI kernel32.ReplaceFileW(_In_ LPCTSTR lpReplacedFileName,_In_ LPCTSTR lpReplacementFileName,_In_opt_ LPCTSTR lpBackupFileName,_In_ DWORD dwReplaceFlags,_Reserved_ LPVOID lpExclude,_Reserved_ LPVOID lpReserved)
BOOL WINAPI kernel32.ReplaceFileA(_In_ LPCTSTR lpReplacedFileName,_In_ LPCTSTR lpReplacementFileName,_In_opt_ LPCTSTR lpBackupFileName,_In_ DWORD dwReplaceFlags,_Reserved_ LPVOID lpExclude,_Reserved_ LPVOID lpReserved)
HRESULT WINAPI kernel32.CopyFile2(_In_ PCWSTR pwszExistingFileName,_In_ PCWSTR pwszNewFileName,_In_opt_ COPYFILE2_EXTENDED_PARAMETERS *pExtendedParameters)
BOOL WINAPI kernel32.GetBinaryType(_In_ LPCTSTR lpApplicationName,_Out_ LPDWORD lpBinaryType)
BOOL WINAPI kernel32.GetBinaryTypeW(_In_ LPCTSTR lpApplicationName,_Out_ LPDWORD lpBinaryType)
BOOL WINAPI kernel32.GetBinaryTypeA(_In_ LPCTSTR lpApplicationName,_Out_ LPDWORD lpBinaryType)
BOOL WINAPI kernel32.CopyFile(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName,_In_ BOOL bFailIfExists)
BOOL WINAPI kernel32.CopyFileW(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName,_In_ BOOL bFailIfExists)
BOOL WINAPI kernel32.CopyFileA(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName,_In_ BOOL bFailIfExists)
BOOL WINAPI kernel32.FindNextStreamW(_In_ HANDLE hFindStream,_Out_ LPVOID lpFindStreamData)
BOOL WINAPI kernel32.GetFileAttributesTransacted(_In_ LPCTSTR lpFileName,_In_ GET_FILEEX_INFO_LEVELS fInfoLevelId,_Out_ LPVOID lpFileInformation,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.GetFileAttributesTransactedW(_In_ LPCTSTR lpFileName,_In_ GET_FILEEX_INFO_LEVELS fInfoLevelId,_Out_ LPVOID lpFileInformation,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.GetFileAttributesTransactedA(_In_ LPCTSTR lpFileName,_In_ GET_FILEEX_INFO_LEVELS fInfoLevelId,_Out_ LPVOID lpFileInformation,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.CopyFile(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName,_In_ BOOL bFailIfExists)
BOOL WINAPI kernel32.CopyFileW(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName,_In_ BOOL bFailIfExists)
BOOL WINAPI kernel32.CopyFileA(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName,_In_ BOOL bFailIfExists)
BOOL WINAPI kernel32.SetFileInformationByHandle(_In_ HANDLE hFile,_In_ FILE_INFO_BY_HANDLE_CLASS FileInformationClass,_In_ LPVOID lpFileInformation,_In_ DWORD dwBufferSize)
BOOL WINAPI advapi32.FileEncryptionStatus(_In_ LPCTSTR lpFileName,_Out_ LPDWORD lpStatus)
BOOL WINAPI advapi32.FileEncryptionStatusW(_In_ LPCTSTR lpFileName,_Out_ LPDWORD lpStatus)
BOOL WINAPI advapi32.FileEncryptionStatusA(_In_ LPCTSTR lpFileName,_Out_ LPDWORD lpStatus)
BOOL WINAPI advapi32.EncryptionDisable(_In_ LPCWSTR DirPath,_In_ BOOL Disable)
BOOL WINAPI kernel32.FindNextFileNameW(_In_ HANDLE hFindStream,_Inout_ LPDWORD StringLength,_Inout_ PWCHAR LinkName)
HRESULT WINAPI wofutil.WofWimAddEntry(_In_ PCWSTR VolumeName,_In_ PCWSTR WimPath,_In_ DWORD WimType,_In_ DWORD WimIndex,_Out_ PLARGE_INTEGER DataSourceId)
BOOL WINAPI kernel32.CopyFile(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName,_In_ BOOL bFailIfExists)
BOOL WINAPI kernel32.CopyFileW(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName,_In_ BOOL bFailIfExists)
BOOL WINAPI kernel32.CopyFileA(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName,_In_ BOOL bFailIfExists)
BOOL WINAPI kernel32.WriteFileGather(_In_ HANDLE hFile,_In_ FILE_SEGMENT_ELEMENT aSegmentArray[],_In_ DWORD nNumberOfBytesToWrite,_Reserved_ LPDWORD lpReserved,_Inout_ LPOVERLAPPED lpOverlapped)
BOOL WINAPI kernel32.SetFileCompletionNotificationModes(_In_ HANDLE FileHandle,_In_ UCHAR Flags)
BOOL WINAPI kernel32.ReadFile(_In_ HANDLE hFile,_Out_ LPVOID lpBuffer,_In_ DWORD nNumberOfBytesToRead,_Out_opt_ LPDWORD lpNumberOfBytesRead,_Inout_opt_ LPOVERLAPPED lpOverlapped)
BOOL WINAPI kernel32.CopyFile(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName,_In_ BOOL bFailIfExists)
BOOL WINAPI kernel32.CopyFileW(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName,_In_ BOOL bFailIfExists)
BOOL WINAPI kernel32.CopyFileA(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName,_In_ BOOL bFailIfExists)
HANDLE WINAPI kernel32.CreateIoCompletionPort(_In_ HANDLE FileHandle,_In_opt_ HANDLE ExistingCompletionPort,_In_ ULONG_PTR CompletionKey,_In_ DWORD NumberOfConcurrentThreads)
HRESULT WINAPI wofutil.WofWimRemoveEntry(_In_ PCWSTR VolumeName,_In_ LARGE_INTEGER DataSourceId)
BOOL WINAPI kernel32.CopyFile(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName,_In_ BOOL bFailIfExists)
BOOL WINAPI kernel32.CopyFileW(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName,_In_ BOOL bFailIfExists)
BOOL WINAPI kernel32.CopyFileA(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName,_In_ BOOL bFailIfExists)
BOOLEAN WINAPI kernel32.CreateSymbolicLink(_In_ LPTSTR lpSymlinkFileName,_In_ LPTSTR lpTargetFileName,_In_ DWORD dwFlags)
BOOLEAN WINAPI kernel32.CreateSymbolicLinkW(_In_ LPTSTR lpSymlinkFileName,_In_ LPTSTR lpTargetFileName,_In_ DWORD dwFlags)
BOOLEAN WINAPI kernel32.CreateSymbolicLinkA(_In_ LPTSTR lpSymlinkFileName,_In_ LPTSTR lpTargetFileName,_In_ DWORD dwFlags)
BOOL WINAPI kernel32.DeleteFile(_In_ LPCTSTR lpFileName)
BOOL WINAPI kernel32.DeleteFileW(_In_ LPCTSTR lpFileName)
BOOL WINAPI kernel32.DeleteFileA(_In_ LPCTSTR lpFileName)
BOOL WINAPI kernel32.CancelIoEx(_In_ HANDLE hFile,_In_opt_ LPOVERLAPPED lpOverlapped)
BOOL WINAPI kernel32.Wow64RevertWow64FsRedirection(_In_ PVOID OldValue)
BOOL WINAPI kernel32.CopyFile(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName,_In_ BOOL bFailIfExists)
BOOL WINAPI kernel32.CopyFileW(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName,_In_ BOOL bFailIfExists)
BOOL WINAPI kernel32.CopyFileA(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName,_In_ BOOL bFailIfExists)
HRESULT WINAPI wofutil.WofGetDriverVersion(_In_ HANDLE FileOrVolumeHandle,_In_ ULONG Provider,_Out_ PULONG WofVersion)
BOOL WINAPI kernel32.PostQueuedCompletionStatus(_In_ HANDLE CompletionPort,_In_ DWORD dwNumberOfBytesTransferred,_In_ ULONG_PTR dwCompletionKey,_In_opt_ LPOVERLAPPED lpOverlapped)
LONG WINAPI lz32.LZCopy(_In_ INT hfSource,_In_ INT hfDest)
BOOL WINAPI kernel32.SetFileValidData(_In_ HANDLE hFile,_In_ LONGLONG ValidDataLength)
HRESULT WINAPI wofutil.WofIsExternalFile(_In_ LPCWSTR FilePath,_Out_opt_ PBOOL IsExternalFile,_Out_opt_ PULONG Provider,_Out_opt_ PVOID ExternalFileInfo,_Inout_opt_ PULONG BufferLength)
BOOL WINAPI kernel32.SetSearchPathMode(_In_ DWORD Flags)
DWORD WINAPI kernel32.GetFileType(_In_ HANDLE hFile)
LONG WINAPI lz32.LZSeek(_In_ INT hFile,_In_ LONG lOffset,_In_ INT iOrigin)
DWORD WINAPI advapi32.RemoveUsersFromEncryptedFile(_In_ LPCWSTR lpFileName,_In_ PENCRYPTION_CERTIFICATE_HASH_LIST pHashes)
BOOL WINAPI advapi32.DecryptFile(_In_ LPCTSTR lpFileName,_Reserved_ DWORD dwReserved)
BOOL WINAPI advapi32.DecryptFileW(_In_ LPCTSTR lpFileName,_Reserved_ DWORD dwReserved)
BOOL WINAPI advapi32.DecryptFileA(_In_ LPCTSTR lpFileName,_Reserved_ DWORD dwReserved)
DWORD WINAPI kernel32.GetFullPathName(_In_ LPCTSTR lpFileName,_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer,_Out_ LPTSTR *lpFilePart)
DWORD WINAPI kernel32.GetFullPathNameW(_In_ LPCTSTR lpFileName,_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer,_Out_ LPTSTR *lpFilePart)
DWORD WINAPI kernel32.GetFullPathNameA(_In_ LPCTSTR lpFileName,_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer,_Out_ LPTSTR *lpFilePart)
BOOL WINAPI kernel32.GetFileBandwidthReservation(_In_ HANDLE hFile,_Out_ LPDWORD lpPeriodMilliseconds,_Out_ LPDWORD lpBytesPerPeriod,_Out_ LPBOOL pDiscardable,_Out_ LPDWORD lpTransferSize,_Out_ LPDWORD lpNumOutstandingRequests)
INT WINAPI lz32.LZOpenFile(_In_ LPTSTR lpFileName,_Out_ LPOFSTRUCT lpReOpenBuf,_In_ WORD wStyle)
INT WINAPI lz32.LZOpenFileW(_In_ LPTSTR lpFileName,_Out_ LPOFSTRUCT lpReOpenBuf,_In_ WORD wStyle)
INT WINAPI lz32.LZOpenFileA(_In_ LPTSTR lpFileName,_Out_ LPOFSTRUCT lpReOpenBuf,_In_ WORD wStyle)
HANDLE WINAPI kernel32.FindFirstStreamW(_In_ LPCWSTR lpFileName,_In_ STREAM_INFO_LEVELS InfoLevel,_Out_ LPVOID lpFindStreamData,_Reserved_ DWORD dwFlags)
DWORD WINAPI advapi32.AddUsersToEncryptedFile(_In_ LPCWSTR lpFileName,_In_ PENCRYPTION_CERTIFICATE_LIST pUsers)
BOOL WINAPI kernel32.CreateHardLinkTransacted(_In_ LPCTSTR lpFileName,_In_ LPCTSTR lpExistingFileName,_Reserved_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.CreateHardLinkTransactedW(_In_ LPCTSTR lpFileName,_In_ LPCTSTR lpExistingFileName,_Reserved_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.CreateHardLinkTransactedA(_In_ LPCTSTR lpFileName,_In_ LPCTSTR lpExistingFileName,_Reserved_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.SetFileIoOverlappedRange(_In_ HANDLE FileHandle,_In_ PUCHAR OverlappedRangeStart,_In_ ULONG Length)
HRESULT WINAPI wofutil.WofEnumEntries(_In_ PCWSTR VolumeName,_In_ ULONG Provider,_In_ WofEnumEntryProc EnumProc,_In_opt_ PVOID UserData)
BOOL WINAPI kernel32.GetQueuedCompletionStatusEx(_In_ HANDLE CompletionPort,_Out_ LPOVERLAPPED_ENTRY lpCompletionPortEntries,_In_ ULONG ulCount,_Out_ PULONG ulNumEntriesRemoved,_In_ DWORD dwMilliseconds,_In_ BOOL fAlertable)
HRESULT WINAPI wofutil.WofWimSuspendEntry(_In_ PCWSTR VolumeName,_In_ LARGE_INTEGER DataSourceId)
BOOL WINAPI kernel32.GetFileInformationByHandleEx(_In_ HANDLE hFile,_In_ FILE_INFO_BY_HANDLE_CLASS FileInformationClass,_Out_ LPVOID lpFileInformation,_In_ DWORD dwBufferSize)
INT WINAPI lz32.LZRead(_In_ INT hFile,_Out_ LPSTR lpBuffer,_In_ INT cbRead)
BOOL WINAPI kernel32.FindNextFile(_In_ HANDLE hFindFile,_Out_ LPWIN32_FIND_DATA lpFindFileData)
BOOL WINAPI kernel32.FindNextFileW(_In_ HANDLE hFindFile,_Out_ LPWIN32_FIND_DATA lpFindFileData)
BOOL WINAPI kernel32.FindNextFileA(_In_ HANDLE hFindFile,_Out_ LPWIN32_FIND_DATA lpFindFileData)
HRESULT WINAPI wofutil.WofFileEnumFiles(_In_ PCWSTR VolumeName,_In_ ULONG Algorithm,_In_ WofEnumFilesProc EnumProc,_In_opt_ PVOID UserData)
DWORD WINAPI advapi32.QueryRecoveryAgentsOnEncryptedFile(_In_ LPCWSTR lpFileName,_Out_ PENCRYPTION_CERTIFICATE_HASH_LIST *pRecoveryAgents)
DWORD WINAPI None.ImportCallback(_In_ PBYTE pbData,_In_opt_ PVOID pvCallbackContext,_Inout_ PULONG ulLength)
BOOL WINAPI kernel32.DeleteFileTransacted(_In_ LPCTSTR lpFileName,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.DeleteFileTransactedW(_In_ LPCTSTR lpFileName,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.DeleteFileTransactedA(_In_ LPCTSTR lpFileName,_In_ HANDLE hTransaction)
DWORD WINAPI None.ExportCallback(_In_ PBYTE pbData,_In_opt_ PVOID pvCallbackContext,_In_ ULONG ulLength)
HANDLE WINAPI kernel32.FindFirstFileNameW(_In_ LPCWSTR lpFileName,_In_ DWORD dwFlags,_Inout_ LPDWORD StringLength,_Inout_ PWCHAR LinkName)
BOOL WINAPI kernel32.GetQueuedCompletionStatus(_In_ HANDLE CompletionPort,_Out_ LPDWORD lpNumberOfBytes,_Out_ PULONG_PTR lpCompletionKey,_Out_ LPOVERLAPPED *lpOverlapped,_In_ DWORD dwMilliseconds)
BOOL WINAPI kernel32.FindClose(_Inout_ HANDLE hFindFile)
BOOL WINAPI kernel32.WriteFile(_In_ HANDLE hFile,_In_ LPCVOID lpBuffer,_In_ DWORD nNumberOfBytesToWrite,_Out_opt_ LPDWORD lpNumberOfBytesWritten,_Inout_opt_ LPOVERLAPPED lpOverlapped)
HFILE WINAPI kernel32.OpenFile(_In_ LPCSTR lpFileName,_Out_ LPOFSTRUCT lpReOpenBuff,_In_ UINT uStyle)
BOOL WINAPI advapi32.EncryptFile(_In_ LPCTSTR lpFileName)
BOOL WINAPI advapi32.EncryptFileW(_In_ LPCTSTR lpFileName)
BOOL WINAPI advapi32.EncryptFileA(_In_ LPCTSTR lpFileName)
HRESULT WINAPI wofutil.WofWimEnumFiles(_In_ PCWSTR VolumeName,_In_ LARGE_INTEGER DataSourceId,_In_ WofEnumFilesProc EnumProc,_In_opt_ PVOID UserData)
DWORD WINAPI advapi32.ReadEncryptedFileRaw(_In_ PFE_EXPORT_FUNC pfExportCallback,_In_opt_ PVOID pvCallbackContext,_In_ PVOID pvContext)
HANDLE WINAPI kernel32.ReOpenFile(_In_ HANDLE hOriginalFile,_In_ DWORD dwDesiredAccess,_In_ DWORD dwShareMode,_In_ DWORD dwFlags)
BOOL WINAPI kernel32.CancelIo(_In_ HANDLE hFile)
DWORD WINAPI kernel32.SetFilePointer(_In_ HANDLE hFile,_In_ LONG lDistanceToMove,_Inout_opt_ PLONG lpDistanceToMoveHigh,_In_ DWORD dwMoveMethod)
DWORD WINAPI kernel32.GetFileAttributes(_In_ LPCTSTR lpFileName)
DWORD WINAPI kernel32.GetFileAttributesW(_In_ LPCTSTR lpFileName)
DWORD WINAPI kernel32.GetFileAttributesA(_In_ LPCTSTR lpFileName)
BOOL WINAPI kernel32.GetFileAttributesEx(_In_ LPCTSTR lpFileName,_In_ GET_FILEEX_INFO_LEVELS fInfoLevelId,_Out_ LPVOID lpFileInformation)
BOOL WINAPI kernel32.GetFileAttributesExW(_In_ LPCTSTR lpFileName,_In_ GET_FILEEX_INFO_LEVELS fInfoLevelId,_Out_ LPVOID lpFileInformation)
BOOL WINAPI kernel32.GetFileAttributesExA(_In_ LPCTSTR lpFileName,_In_ GET_FILEEX_INFO_LEVELS fInfoLevelId,_Out_ LPVOID lpFileInformation)
DWORD WINAPI kernel32.GetCompressedFileSizeTransacted(_In_ LPCTSTR lpFileName,_Out_opt_ LPDWORD lpFileSizeHigh,_In_ HANDLE hTransaction)
DWORD WINAPI kernel32.GetCompressedFileSizeTransactedW(_In_ LPCTSTR lpFileName,_Out_opt_ LPDWORD lpFileSizeHigh,_In_ HANDLE hTransaction)
DWORD WINAPI kernel32.GetCompressedFileSizeTransactedA(_In_ LPCTSTR lpFileName,_Out_opt_ LPDWORD lpFileSizeHigh,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.SetFileAttributesTransacted(_In_ LPCTSTR lpFileName,_In_ DWORD dwFileAttributes,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.SetFileAttributesTransactedW(_In_ LPCTSTR lpFileName,_In_ DWORD dwFileAttributes,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.SetFileAttributesTransactedA(_In_ LPCTSTR lpFileName,_In_ DWORD dwFileAttributes,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.CopyFile(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName,_In_ BOOL bFailIfExists)
BOOL WINAPI kernel32.CopyFileW(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName,_In_ BOOL bFailIfExists)
BOOL WINAPI kernel32.CopyFileA(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName,_In_ BOOL bFailIfExists)
HRESULT WINAPI wofutil.WofWimUpdateEntry(_In_ PCWSTR VolumeName,_In_ LARGE_INTEGER DataSourceId,_In_ PCWSTR NewWimPath)
BOOL WINAPI kernel32.CheckNameLegalDOS8Dot3(_In_ LPCTSTR lpName,_Out_opt_ LPSTR lpOemName,_In_ DWORD OemNameSize,_Out_opt_ PBOOL pbNameContainsSpaces,_Out_ PBOOL pbNameLegal)
BOOL WINAPI kernel32.CheckNameLegalDOS8Dot3W(_In_ LPCTSTR lpName,_Out_opt_ LPSTR lpOemName,_In_ DWORD OemNameSize,_Out_opt_ PBOOL pbNameContainsSpaces,_Out_ PBOOL pbNameLegal)
BOOL WINAPI kernel32.CheckNameLegalDOS8Dot3A(_In_ LPCTSTR lpName,_Out_opt_ LPSTR lpOemName,_In_ DWORD OemNameSize,_Out_opt_ PBOOL pbNameContainsSpaces,_Out_ PBOOL pbNameLegal)
BOOL WINAPI kernel32.SetFileAttributes(_In_ LPCTSTR lpFileName,_In_ DWORD dwFileAttributes)
BOOL WINAPI kernel32.SetFileAttributesW(_In_ LPCTSTR lpFileName,_In_ DWORD dwFileAttributes)
BOOL WINAPI kernel32.SetFileAttributesA(_In_ LPCTSTR lpFileName,_In_ DWORD dwFileAttributes)
BOOL WINAPI kernel32.SetEndOfFile(_In_ HANDLE hFile)
BOOL WINAPI kernel32.MoveFileWithProgress(_In_ LPCTSTR lpExistingFileName,_In_opt_ LPCTSTR lpNewFileName,_In_opt_ LPPROGRESS_ROUTINE lpProgressRoutine,_In_opt_ LPVOID lpData,_In_ DWORD dwFlags)
BOOL WINAPI kernel32.MoveFileWithProgressW(_In_ LPCTSTR lpExistingFileName,_In_opt_ LPCTSTR lpNewFileName,_In_opt_ LPPROGRESS_ROUTINE lpProgressRoutine,_In_opt_ LPVOID lpData,_In_ DWORD dwFlags)
BOOL WINAPI kernel32.MoveFileWithProgressA(_In_ LPCTSTR lpExistingFileName,_In_opt_ LPCTSTR lpNewFileName,_In_opt_ LPPROGRESS_ROUTINE lpProgressRoutine,_In_opt_ LPVOID lpData,_In_ DWORD dwFlags)
HANDLE WINAPI kernel32.FindFirstStreamTransactedW(_In_ LPCWSTR lpFileName,_In_ STREAM_INFO_LEVELS InfoLevel,_Out_ LPVOID lpFindStreamData,_Reserved_ DWORD dwFlags,_In_ HANDLE hTransaction)
DWORD WINAPI kernel32.GetLongPathName(_In_ LPCTSTR lpszShortPath,_Out_ LPTSTR lpszLongPath,_In_ DWORD cchBuffer)
DWORD WINAPI kernel32.GetLongPathNameW(_In_ LPCTSTR lpszShortPath,_Out_ LPTSTR lpszLongPath,_In_ DWORD cchBuffer)
DWORD WINAPI kernel32.GetLongPathNameA(_In_ LPCTSTR lpszShortPath,_Out_ LPTSTR lpszLongPath,_In_ DWORD cchBuffer)
DWORD WINAPI kernel32.GetLongPathNameTransacted(_In_ LPCTSTR lpszShortPath,_Out_ LPTSTR lpszLongPath,_In_ DWORD cchBuffer,_In_ HANDLE hTransaction)
DWORD WINAPI kernel32.GetLongPathNameTransactedW(_In_ LPCTSTR lpszShortPath,_Out_ LPTSTR lpszLongPath,_In_ DWORD cchBuffer,_In_ HANDLE hTransaction)
DWORD WINAPI kernel32.GetLongPathNameTransactedA(_In_ LPCTSTR lpszShortPath,_Out_ LPTSTR lpszLongPath,_In_ DWORD cchBuffer,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.CopyFileTransacted(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName,_In_opt_ LPPROGRESS_ROUTINE lpProgressRoutine,_In_opt_ LPVOID lpData,_In_opt_ LPBOOL pbCancel,_In_ DWORD dwCopyFlags,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.CopyFileTransactedW(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName,_In_opt_ LPPROGRESS_ROUTINE lpProgressRoutine,_In_opt_ LPVOID lpData,_In_opt_ LPBOOL pbCancel,_In_ DWORD dwCopyFlags,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.CopyFileTransactedA(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName,_In_opt_ LPPROGRESS_ROUTINE lpProgressRoutine,_In_opt_ LPVOID lpData,_In_opt_ LPBOOL pbCancel,_In_ DWORD dwCopyFlags,_In_ HANDLE hTransaction)
INT WINAPI lz32.GetExpandedName(_In_ LPTSTR lpszSource,_Out_ LPTSTR lpszBuffer)
INT WINAPI lz32.GetExpandedNameW(_In_ LPTSTR lpszSource,_Out_ LPTSTR lpszBuffer)
INT WINAPI lz32.GetExpandedNameA(_In_ LPTSTR lpszSource,_Out_ LPTSTR lpszBuffer)
DWORD WINAPI kernel32.SearchPath(_In_opt_ LPCTSTR lpPath,_In_ LPCTSTR lpFileName,_In_opt_ LPCTSTR lpExtension,_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer,_Out_opt_ LPTSTR *lpFilePart)
DWORD WINAPI kernel32.SearchPathW(_In_opt_ LPCTSTR lpPath,_In_ LPCTSTR lpFileName,_In_opt_ LPCTSTR lpExtension,_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer,_Out_opt_ LPTSTR *lpFilePart)
DWORD WINAPI kernel32.SearchPathA(_In_opt_ LPCTSTR lpPath,_In_ LPCTSTR lpFileName,_In_opt_ LPCTSTR lpExtension,_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer,_Out_opt_ LPTSTR *lpFilePart)
BOOL WINAPI kernel32.UnlockFile(_In_ HANDLE hFile,_In_ DWORD dwFileOffsetLow,_In_ DWORD dwFileOffsetHigh,_In_ DWORD nNumberOfBytesToUnlockLow,_In_ DWORD nNumberOfBytesToUnlockHigh)
BOOL WINAPI kernel32.CopyFile(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName,_In_ BOOL bFailIfExists)
BOOL WINAPI kernel32.CopyFileW(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName,_In_ BOOL bFailIfExists)
BOOL WINAPI kernel32.CopyFileA(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName,_In_ BOOL bFailIfExists)
DWORD WINAPI kernel32.GetFullPathNameTransacted(_In_ LPCTSTR lpFileName,_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer,_Out_ LPTSTR *lpFilePart,_In_ HANDLE hTransaction)
DWORD WINAPI kernel32.GetFullPathNameTransactedW(_In_ LPCTSTR lpFileName,_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer,_Out_ LPTSTR *lpFilePart,_In_ HANDLE hTransaction)
DWORD WINAPI kernel32.GetFullPathNameTransactedA(_In_ LPCTSTR lpFileName,_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer,_Out_ LPTSTR *lpFilePart,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.LockFile(_In_ HANDLE hFile,_In_ DWORD dwFileOffsetLow,_In_ DWORD dwFileOffsetHigh,_In_ DWORD nNumberOfBytesToLockLow,_In_ DWORD nNumberOfBytesToLockHigh)
BOOL WINAPI kernel32.MoveFile(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName)
BOOL WINAPI kernel32.MoveFileW(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName)
BOOL WINAPI kernel32.MoveFileA(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName)
BOOL WINAPI wofutil.WofShouldCompressBinaries(_In_ LPCWSTR Volume,_Out_ PULONG Algorithm)
BOOL WINAPI kernel32.LockFileEx(_In_ HANDLE hFile,_In_ DWORD dwFlags,_Reserved_ DWORD dwReserved,_In_ DWORD nNumberOfBytesToLockLow,_In_ DWORD nNumberOfBytesToLockHigh,_Inout_ LPOVERLAPPED lpOverlapped)
HANDLE WINAPI kernel32.FindFirstFileNameTransactedW(_In_ LPCWSTR lpFileName,_In_ DWORD dwFlags,_Inout_ LPDWORD StringLength,_Inout_ PWCHAR LinkName,_In_opt_ HANDLE hTransaction)
DWORD WINAPI kernel32.GetCompressedFileSize(_In_ LPCTSTR lpFileName,_Out_opt_ LPDWORD lpFileSizeHigh)
DWORD WINAPI kernel32.GetCompressedFileSizeW(_In_ LPCTSTR lpFileName,_Out_opt_ LPDWORD lpFileSizeHigh)
DWORD WINAPI kernel32.GetCompressedFileSizeA(_In_ LPCTSTR lpFileName,_Out_opt_ LPDWORD lpFileSizeHigh)
BOOL WINAPI kernel32.CopyFile(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName,_In_ BOOL bFailIfExists)
BOOL WINAPI kernel32.CopyFileW(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName,_In_ BOOL bFailIfExists)
BOOL WINAPI kernel32.CopyFileA(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName,_In_ BOOL bFailIfExists)
HANDLE WINAPI kernel32.FindFirstFile(_In_ LPCTSTR lpFileName,_Out_ LPWIN32_FIND_DATA lpFindFileData)
HANDLE WINAPI kernel32.FindFirstFileW(_In_ LPCTSTR lpFileName,_Out_ LPWIN32_FIND_DATA lpFindFileData)
HANDLE WINAPI kernel32.FindFirstFileA(_In_ LPCTSTR lpFileName,_Out_ LPWIN32_FIND_DATA lpFindFileData)
HANDLE WINAPI kernel32.FindFirstFileEx(_In_ LPCTSTR lpFileName,_In_ FINDEX_INFO_LEVELS fInfoLevelId,_Out_ LPVOID lpFindFileData,_In_ FINDEX_SEARCH_OPS fSearchOp,_Reserved_ LPVOID lpSearchFilter,_In_ DWORD dwAdditionalFlags)
HANDLE WINAPI kernel32.FindFirstFileExW(_In_ LPCTSTR lpFileName,_In_ FINDEX_INFO_LEVELS fInfoLevelId,_Out_ LPVOID lpFindFileData,_In_ FINDEX_SEARCH_OPS fSearchOp,_Reserved_ LPVOID lpSearchFilter,_In_ DWORD dwAdditionalFlags)
HANDLE WINAPI kernel32.FindFirstFileExA(_In_ LPCTSTR lpFileName,_In_ FINDEX_INFO_LEVELS fInfoLevelId,_Out_ LPVOID lpFindFileData,_In_ FINDEX_SEARCH_OPS fSearchOp,_Reserved_ LPVOID lpSearchFilter,_In_ DWORD dwAdditionalFlags)
DWORD WINAPI kernel32.GetShortPathName(_In_ LPCTSTR lpszLongPath,_Out_ LPTSTR lpszShortPath,_In_ DWORD cchBuffer)
DWORD WINAPI kernel32.GetShortPathNameW(_In_ LPCTSTR lpszLongPath,_Out_ LPTSTR lpszShortPath,_In_ DWORD cchBuffer)
DWORD WINAPI kernel32.GetShortPathNameA(_In_ LPCTSTR lpszLongPath,_Out_ LPTSTR lpszShortPath,_In_ DWORD cchBuffer)
DWORD WINAPI advapi32.OpenEncryptedFileRaw(_In_ LPCTSTR lpFileName,_In_ ULONG ulFlags,_Out_ PVOID *pvContext)
DWORD WINAPI advapi32.OpenEncryptedFileRawW(_In_ LPCTSTR lpFileName,_In_ ULONG ulFlags,_Out_ PVOID *pvContext)
DWORD WINAPI advapi32.OpenEncryptedFileRawA(_In_ LPCTSTR lpFileName,_In_ ULONG ulFlags,_Out_ PVOID *pvContext)
BOOL WINAPI kernel32.CreateHardLink(_In_ LPCTSTR lpFileName,_In_ LPCTSTR lpExistingFileName,_Reserved_ LPSECURITY_ATTRIBUTES lpSecurityAttributes)
BOOL WINAPI kernel32.CreateHardLinkW(_In_ LPCTSTR lpFileName,_In_ LPCTSTR lpExistingFileName,_Reserved_ LPSECURITY_ATTRIBUTES lpSecurityAttributes)
BOOL WINAPI kernel32.CreateHardLinkA(_In_ LPCTSTR lpFileName,_In_ LPCTSTR lpExistingFileName,_Reserved_ LPSECURITY_ATTRIBUTES lpSecurityAttributes)
BOOLEAN WINAPI kernel32.Wow64EnableWow64FsRedirection(_In_ BOOLEAN Wow64FsEnableRedirection)
BOOL WINAPI kernel32.GetFileSizeEx(_In_ HANDLE hFile,_Out_ PLARGE_INTEGER lpFileSize)
HANDLE WINAPI kernel32.CreateFileTransacted(_In_ LPCTSTR lpFileName,_In_ DWORD dwDesiredAccess,_In_ DWORD dwShareMode,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ DWORD dwCreationDisposition,_In_ DWORD dwFlagsAndAttributes,_In_opt_ HANDLE hTemplateFile,_In_ HANDLE hTransaction,_In_opt_ PUSHORT pusMiniVersion,_Reserved_ PVOID pExtendedParameter)
HANDLE WINAPI kernel32.CreateFileTransactedW(_In_ LPCTSTR lpFileName,_In_ DWORD dwDesiredAccess,_In_ DWORD dwShareMode,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ DWORD dwCreationDisposition,_In_ DWORD dwFlagsAndAttributes,_In_opt_ HANDLE hTemplateFile,_In_ HANDLE hTransaction,_In_opt_ PUSHORT pusMiniVersion,_Reserved_ PVOID pExtendedParameter)
HANDLE WINAPI kernel32.CreateFileTransactedA(_In_ LPCTSTR lpFileName,_In_ DWORD dwDesiredAccess,_In_ DWORD dwShareMode,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ DWORD dwCreationDisposition,_In_ DWORD dwFlagsAndAttributes,_In_opt_ HANDLE hTemplateFile,_In_ HANDLE hTransaction,_In_opt_ PUSHORT pusMiniVersion,_Reserved_ PVOID pExtendedParameter)
VOID CALLBACK None.FileIOCompletionRoutine(_In_ DWORD dwErrorCode,_In_ DWORD dwNumberOfBytesTransfered,_Inout_ LPOVERLAPPED lpOverlapped)
BOOL WINAPI kernel32.ReadFileScatter(_In_ HANDLE hFile,_In_ FILE_SEGMENT_ELEMENT aSegmentArray[],_In_ DWORD nNumberOfBytesToRead,_Reserved_ LPDWORD lpReserved,_Inout_ LPOVERLAPPED lpOverlapped)
UINT WINAPI kernel32.GetTempFileName(_In_ LPCTSTR lpPathName,_In_ LPCTSTR lpPrefixString,_In_ UINT uUnique,_Out_ LPTSTR lpTempFileName)
UINT WINAPI kernel32.GetTempFileNameW(_In_ LPCTSTR lpPathName,_In_ LPCTSTR lpPrefixString,_In_ UINT uUnique,_Out_ LPTSTR lpTempFileName)
UINT WINAPI kernel32.GetTempFileNameA(_In_ LPCTSTR lpPathName,_In_ LPCTSTR lpPrefixString,_In_ UINT uUnique,_Out_ LPTSTR lpTempFileName)
HANDLE WINAPI kernel32.CreateFile(_In_ LPCTSTR lpFileName,_In_ DWORD dwDesiredAccess,_In_ DWORD dwShareMode,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ DWORD dwCreationDisposition,_In_ DWORD dwFlagsAndAttributes,_In_opt_ HANDLE hTemplateFile)
HANDLE WINAPI kernel32.CreateFileW(_In_ LPCTSTR lpFileName,_In_ DWORD dwDesiredAccess,_In_ DWORD dwShareMode,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ DWORD dwCreationDisposition,_In_ DWORD dwFlagsAndAttributes,_In_opt_ HANDLE hTemplateFile)
HANDLE WINAPI kernel32.CreateFileA(_In_ LPCTSTR lpFileName,_In_ DWORD dwDesiredAccess,_In_ DWORD dwShareMode,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ DWORD dwCreationDisposition,_In_ DWORD dwFlagsAndAttributes,_In_opt_ HANDLE hTemplateFile)
BOOL WINAPI kernel32.MoveFileEx(_In_ LPCTSTR lpExistingFileName,_In_opt_ LPCTSTR lpNewFileName,_In_ DWORD dwFlags)
BOOL WINAPI kernel32.MoveFileExW(_In_ LPCTSTR lpExistingFileName,_In_opt_ LPCTSTR lpNewFileName,_In_ DWORD dwFlags)
BOOL WINAPI kernel32.MoveFileExA(_In_ LPCTSTR lpExistingFileName,_In_opt_ LPCTSTR lpNewFileName,_In_ DWORD dwFlags)
DWORD WINAPI advapi32.QueryUsersOnEncryptedFile(_In_ LPCWSTR lpFileName,_Out_ PENCRYPTION_CERTIFICATE_HASH_LIST *pUsers)
BOOL WINAPI kernel32.MoveFileTransacted(_In_ LPCTSTR lpExistingFileName,_In_opt_ LPCTSTR lpNewFileName,_In_opt_ LPPROGRESS_ROUTINE lpProgressRoutine,_In_opt_ LPVOID lpData,_In_ DWORD dwFlags,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.MoveFileTransactedW(_In_ LPCTSTR lpExistingFileName,_In_opt_ LPCTSTR lpNewFileName,_In_opt_ LPPROGRESS_ROUTINE lpProgressRoutine,_In_opt_ LPVOID lpData,_In_ DWORD dwFlags,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.MoveFileTransactedA(_In_ LPCTSTR lpExistingFileName,_In_opt_ LPCTSTR lpNewFileName,_In_opt_ LPPROGRESS_ROUTINE lpProgressRoutine,_In_opt_ LPVOID lpData,_In_ DWORD dwFlags,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.SetFilePointerEx(_In_ HANDLE hFile,_In_ LARGE_INTEGER liDistanceToMove,_Out_opt_ PLARGE_INTEGER lpNewFilePointer,_In_ DWORD dwMoveMethod)
DWORD WINAPI kernel32.GetFileSize(_In_ HANDLE hFile,_Out_opt_ LPDWORD lpFileSizeHigh)
BOOL WINAPI kernel32.Wow64DisableWow64FsRedirection(_Out_ PVOID *OldValue)
BOOL WINAPI kernel32.WriteFileEx(_In_ HANDLE hFile,_In_opt_ LPCVOID lpBuffer,_In_ DWORD nNumberOfBytesToWrite,_Inout_ LPOVERLAPPED lpOverlapped,_In_ LPOVERLAPPED_COMPLETION_ROUTINE lpCompletionRoutine)
BOOL WINAPI kernel32.SetFileShortName(_In_ HANDLE hFile,_In_ LPCTSTR lpShortName)
BOOL WINAPI kernel32.SetFileShortNameW(_In_ HANDLE hFile,_In_ LPCTSTR lpShortName)
BOOL WINAPI kernel32.SetFileShortNameA(_In_ HANDLE hFile,_In_ LPCTSTR lpShortName)
BOOL WINAPI kernel32.CopyFileEx(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName,_In_opt_ LPPROGRESS_ROUTINE lpProgressRoutine,_In_opt_ LPVOID lpData,_In_opt_ LPBOOL pbCancel,_In_ DWORD dwCopyFlags)
BOOL WINAPI kernel32.CopyFileExW(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName,_In_opt_ LPPROGRESS_ROUTINE lpProgressRoutine,_In_opt_ LPVOID lpData,_In_opt_ LPBOOL pbCancel,_In_ DWORD dwCopyFlags)
BOOL WINAPI kernel32.CopyFileExA(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName,_In_opt_ LPPROGRESS_ROUTINE lpProgressRoutine,_In_opt_ LPVOID lpData,_In_opt_ LPBOOL pbCancel,_In_ DWORD dwCopyFlags)
DWORD WINAPI kernel32.GetTempPath(_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer)
DWORD WINAPI kernel32.GetTempPathW(_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer)
DWORD WINAPI kernel32.GetTempPathA(_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer)
BOOL WINAPI kernel32.CancelSynchronousIo(_In_ HANDLE hThread)
BOOL WINAPI kernel32.GetFileInformationByHandle(_In_ HANDLE hFile,_Out_ LPBY_HANDLE_FILE_INFORMATION lpFileInformation)
HRESULT WINAPI wofutil.WofSetFileDataLocation(_In_ HANDLE FileHandle,_In_ ULONG Provider,_In_ PVOID ExternalFileInfo,_In_ ULONG Length)
BOOL WINAPI kernel32.UnlockFileEx(_In_ HANDLE hFile,_Reserved_ DWORD dwReserved,_In_ DWORD nNumberOfBytesToUnlockLow,_In_ DWORD nNumberOfBytesToUnlockHigh,_Inout_ LPOVERLAPPED lpOverlapped)
DWORD WINAPI advapi32.WriteEncryptedFileRaw(_In_ PFE_IMPORT_FUNC pfImportCallback,_In_opt_ PVOID pvCallbackContext,_In_ PVOID pvContext)
HANDLE WINAPI kernel32.FindFirstFileTransacted(_In_ LPCTSTR lpFileName,_In_ FINDEX_INFO_LEVELS fInfoLevelId,_Out_ LPVOID lpFindFileData,_In_ FINDEX_SEARCH_OPS fSearchOp,_Reserved_ LPVOID lpSearchFilter,_In_ DWORD dwAdditionalFlags,_In_ HANDLE hTransaction)
HANDLE WINAPI kernel32.FindFirstFileTransactedW(_In_ LPCTSTR lpFileName,_In_ FINDEX_INFO_LEVELS fInfoLevelId,_Out_ LPVOID lpFindFileData,_In_ FINDEX_SEARCH_OPS fSearchOp,_Reserved_ LPVOID lpSearchFilter,_In_ DWORD dwAdditionalFlags,_In_ HANDLE hTransaction)
HANDLE WINAPI kernel32.FindFirstFileTransactedA(_In_ LPCTSTR lpFileName,_In_ FINDEX_INFO_LEVELS fInfoLevelId,_Out_ LPVOID lpFindFileData,_In_ FINDEX_SEARCH_OPS fSearchOp,_Reserved_ LPVOID lpSearchFilter,_In_ DWORD dwAdditionalFlags,_In_ HANDLE hTransaction)
DWORD WINAPI kernel32.FormatMessage(_In_ DWORD dwFlags,_In_opt_ LPCVOID lpSource,_In_ DWORD dwMessageId,_In_ DWORD dwLanguageId,_Out_ LPTSTR lpBuffer,_In_ DWORD nSize,_In_opt_ va_list *Arguments)
DWORD WINAPI kernel32.FormatMessageW(_In_ DWORD dwFlags,_In_opt_ LPCVOID lpSource,_In_ DWORD dwMessageId,_In_ DWORD dwLanguageId,_Out_ LPTSTR lpBuffer,_In_ DWORD nSize,_In_opt_ va_list *Arguments)
DWORD WINAPI kernel32.FormatMessageA(_In_ DWORD dwFlags,_In_opt_ LPCVOID lpSource,_In_ DWORD dwMessageId,_In_ DWORD dwLanguageId,_Out_ LPTSTR lpBuffer,_In_ DWORD nSize,_In_opt_ va_list *Arguments)
BOOL WINAPI kernel32.SetFileBandwidthReservation(_In_ HANDLE hFile,_In_ DWORD nPeriodMilliseconds,_In_ DWORD nBytesPerPeriod,_In_ BOOL bDiscardable,_Out_ LPDWORD lpTransferSize,_Out_ LPDWORD lpNumOutstandingRequests)
BOOL WINAPI kernel32.CopyFile(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName,_In_ BOOL bFailIfExists)
BOOL WINAPI kernel32.CopyFileW(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName,_In_ BOOL bFailIfExists)
BOOL WINAPI kernel32.CopyFileA(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName,_In_ BOOL bFailIfExists)
DWORD WINAPI advapi32.WriteEncryptedFileRaw(_In_ PFE_IMPORT_FUNC pfImportCallback,_In_opt_ PVOID pvCallbackContext,_In_ PVOID pvContext)
BOOL WINAPI kernel32.SetFileBandwidthReservation(_In_ HANDLE hFile,_In_ DWORD nPeriodMilliseconds,_In_ DWORD nBytesPerPeriod,_In_ BOOL bDiscardable,_Out_ LPDWORD lpTransferSize,_Out_ LPDWORD lpNumOutstandingRequests)
DWORD WINAPI advapi32.WriteEncryptedFileRaw(_In_ PFE_IMPORT_FUNC pfImportCallback,_In_opt_ PVOID pvCallbackContext,_In_ PVOID pvContext)
BOOLEAN WINAPI kernel32.CreateSymbolicLinkTransacted(_In_ LPTSTR lpSymlinkFileName,_In_ LPTSTR lpTargetFileName,_In_ DWORD dwFlags,_In_ HANDLE hTransaction)
BOOLEAN WINAPI kernel32.CreateSymbolicLinkTransactedW(_In_ LPTSTR lpSymlinkFileName,_In_ LPTSTR lpTargetFileName,_In_ DWORD dwFlags,_In_ HANDLE hTransaction)
BOOLEAN WINAPI kernel32.CreateSymbolicLinkTransactedA(_In_ LPTSTR lpSymlinkFileName,_In_ LPTSTR lpTargetFileName,_In_ DWORD dwFlags,_In_ HANDLE hTransaction)
DWORD WINAPI advapi32.SetUserFileEncryptionKey(_In_ PENCRYPTION_CERTIFICATE pEncryptionCertificate)
DWORD WINAPI advapi32.WriteEncryptedFileRaw(_In_ PFE_IMPORT_FUNC pfImportCallback,_In_opt_ PVOID pvCallbackContext,_In_ PVOID pvContext)
BOOL WINAPI kernel32.SetFileBandwidthReservation(_In_ HANDLE hFile,_In_ DWORD nPeriodMilliseconds,_In_ DWORD nBytesPerPeriod,_In_ BOOL bDiscardable,_Out_ LPDWORD lpTransferSize,_Out_ LPDWORD lpNumOutstandingRequests)
DWORD WINAPI advapi32.SetUserFileEncryptionKey(_In_ PENCRYPTION_CERTIFICATE pEncryptionCertificate)
BOOL WINAPI kernel32.GetFileInformationByHandleEx(_In_ HANDLE hFile,_In_ FILE_INFO_BY_HANDLE_CLASS FileInformationClass,_Out_ LPVOID lpFileInformation,_In_ DWORD dwBufferSize)
HANDLE WINAPI kernel32.OpenFileById(_In_ HANDLE hFile,_In_ LPFILE_ID_DESCRIPTOR lpFileID,_In_ DWORD dwDesiredAccess,_In_ DWORD dwShareMode,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ DWORD dwFlags)
BOOL WINAPI kernel32.SetFileBandwidthReservation(_In_ HANDLE hFile,_In_ DWORD nPeriodMilliseconds,_In_ DWORD nBytesPerPeriod,_In_ BOOL bDiscardable,_Out_ LPDWORD lpTransferSize,_Out_ LPDWORD lpNumOutstandingRequests)
DWORD WINAPI advapi32.SetUserFileEncryptionKey(_In_ PENCRYPTION_CERTIFICATE pEncryptionCertificate)
BOOL WINAPI kernel32.SetFileBandwidthReservation(_In_ HANDLE hFile,_In_ DWORD nPeriodMilliseconds,_In_ DWORD nBytesPerPeriod,_In_ BOOL bDiscardable,_Out_ LPDWORD lpTransferSize,_Out_ LPDWORD lpNumOutstandingRequests)
DWORD WINAPI advapi32.SetUserFileEncryptionKey(_In_ PENCRYPTION_CERTIFICATE pEncryptionCertificate)
HANDLE WINAPI kernel32.CreateIoCompletionPort(_In_ HANDLE FileHandle,_In_opt_ HANDLE ExistingCompletionPort,_In_ ULONG_PTR CompletionKey,_In_ DWORD NumberOfConcurrentThreads)
DWORD WINAPI advapi32.SetUserFileEncryptionKey(_In_ PENCRYPTION_CERTIFICATE pEncryptionCertificate)
DWORD WINAPI advapi32.SetUserFileEncryptionKey(_In_ PENCRYPTION_CERTIFICATE pEncryptionCertificate)
BOOL WINAPI kernel32.ReadFileEx(_In_ HANDLE hFile,_Out_opt_ LPVOID lpBuffer,_In_ DWORD nNumberOfBytesToRead,_Inout_ LPOVERLAPPED lpOverlapped,_In_ LPOVERLAPPED_COMPLETION_ROUTINE lpCompletionRoutine)
BOOL WINAPI kernel32.FindNextStreamW(_In_ HANDLE hFindStream,_Out_ LPVOID lpFindStreamData)
BOOL WINAPI kernel32.FlushFileBuffers(_In_ HANDLE hFile)
BOOL WINAPI kernel32.GetFileAttributesTransacted(_In_ LPCTSTR lpFileName,_In_ GET_FILEEX_INFO_LEVELS fInfoLevelId,_Out_ LPVOID lpFileInformation,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.GetFileAttributesTransactedW(_In_ LPCTSTR lpFileName,_In_ GET_FILEEX_INFO_LEVELS fInfoLevelId,_Out_ LPVOID lpFileInformation,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.GetFileAttributesTransactedA(_In_ LPCTSTR lpFileName,_In_ GET_FILEEX_INFO_LEVELS fInfoLevelId,_Out_ LPVOID lpFileInformation,_In_ HANDLE hTransaction)
HANDLE WINAPI kernel32.OpenFileById(_In_ HANDLE hFile,_In_ LPFILE_ID_DESCRIPTOR lpFileID,_In_ DWORD dwDesiredAccess,_In_ DWORD dwShareMode,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ DWORD dwFlags)
BOOL WINAPI kernel32.GetOverlappedResult(_In_ HANDLE hFile,_In_ LPOVERLAPPED lpOverlapped,_Out_ LPDWORD lpNumberOfBytesTransferred,_In_ BOOL bWait)
DWORD CALLBACK None.CopyProgressRoutine(_In_ LARGE_INTEGER TotalFileSize,_In_ LARGE_INTEGER TotalBytesTransferred,_In_ LARGE_INTEGER StreamSize,_In_ LARGE_INTEGER StreamBytesTransferred,_In_ DWORD dwStreamNumber,_In_ DWORD dwCallbackReason,_In_ HANDLE hSourceFile,_In_ HANDLE hDestinationFile,_In_opt_ LPVOID lpData)
BOOL WINAPI kernel32.SetFileCompletionNotificationModes(_In_ HANDLE FileHandle,_In_ UCHAR Flags)
BOOL WINAPI advapi32.DecryptFile(_In_ LPCTSTR lpFileName,_Reserved_ DWORD dwReserved)
BOOL WINAPI advapi32.DecryptFileW(_In_ LPCTSTR lpFileName,_Reserved_ DWORD dwReserved)
BOOL WINAPI advapi32.DecryptFileA(_In_ LPCTSTR lpFileName,_Reserved_ DWORD dwReserved)
BOOL WINAPI kernel32.FindNextFileNameW(_In_ HANDLE hFindStream,_Inout_ LPDWORD StringLength,_Inout_ PWCHAR LinkName)
BOOL WINAPI kernel32.GetQueuedCompletionStatus(_In_ HANDLE CompletionPort,_Out_ LPDWORD lpNumberOfBytes,_Out_ PULONG_PTR lpCompletionKey,_Out_ LPOVERLAPPED *lpOverlapped,_In_ DWORD dwMilliseconds)
DWORD WINAPI kernel32.GetFullPathName(_In_ LPCTSTR lpFileName,_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer,_Out_ LPTSTR *lpFilePart)
DWORD WINAPI kernel32.GetFullPathNameW(_In_ LPCTSTR lpFileName,_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer,_Out_ LPTSTR *lpFilePart)
DWORD WINAPI kernel32.GetFullPathNameA(_In_ LPCTSTR lpFileName,_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer,_Out_ LPTSTR *lpFilePart)
DWORD WINAPI kernel32.GetFileType(_In_ HANDLE hFile)
BOOL WINAPI kernel32.SetFileAttributes(_In_ LPCTSTR lpFileName,_In_ DWORD dwFileAttributes)
BOOL WINAPI kernel32.SetFileAttributesW(_In_ LPCTSTR lpFileName,_In_ DWORD dwFileAttributes)
BOOL WINAPI kernel32.SetFileAttributesA(_In_ LPCTSTR lpFileName,_In_ DWORD dwFileAttributes)
HRESULT WINAPI wofutil.WofWimRemoveEntry(_In_ PCWSTR VolumeName,_In_ LARGE_INTEGER DataSourceId)
HFILE WINAPI kernel32.OpenFile(_In_ LPCSTR lpFileName,_Out_ LPOFSTRUCT lpReOpenBuff,_In_ UINT uStyle)
USHORT WINAPI kernel32.CaptureStackBackTrace(_In_ ULONG FramesToSkip,_In_ ULONG FramesToCapture,_Out_ PVOID *BackTrace,_Out_opt_ PULONG BackTraceHash)
DWORD WINAPI kernel32.GetLongPathNameTransacted(_In_ LPCTSTR lpszShortPath,_Out_ LPTSTR lpszLongPath,_In_ DWORD cchBuffer,_In_ HANDLE hTransaction)
DWORD WINAPI kernel32.GetLongPathNameTransactedW(_In_ LPCTSTR lpszShortPath,_Out_ LPTSTR lpszLongPath,_In_ DWORD cchBuffer,_In_ HANDLE hTransaction)
DWORD WINAPI kernel32.GetLongPathNameTransactedA(_In_ LPCTSTR lpszShortPath,_Out_ LPTSTR lpszLongPath,_In_ DWORD cchBuffer,_In_ HANDLE hTransaction)
HLOCAL WINAPI kernel32.LocalAlloc(_In_ UINT uFlags,_In_ SIZE_T uBytes)
BOOL WINAPI kernel32.CloseHandle(_In_ HANDLE hObject)
BOOL WINAPI kernel32.FindClose(_Inout_ HANDLE hFindFile)
BOOL WINAPI kernel32.SetFileAttributesTransacted(_In_ LPCTSTR lpFileName,_In_ DWORD dwFileAttributes,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.SetFileAttributesTransactedW(_In_ LPCTSTR lpFileName,_In_ DWORD dwFileAttributes,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.SetFileAttributesTransactedA(_In_ LPCTSTR lpFileName,_In_ DWORD dwFileAttributes,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.Beep(_In_ DWORD dwFreq,_In_ DWORD dwDuration)
BOOL WINAPI kernel32.CloseHandle(_In_ HANDLE hObject)
BOOL WINAPI user32.FlashWindowEx(_In_ PFLASHWINFO pfwi)
HRESULT WINAPI wofutil.WofWimEnumFiles(_In_ PCWSTR VolumeName,_In_ LARGE_INTEGER DataSourceId,_In_ WofEnumFilesProc EnumProc,_In_opt_ PVOID UserData)
BOOL WINAPI kernel32.SetStdHandle(_In_ DWORD nStdHandle,_In_ HANDLE hHandle)
BOOL WINAPI kernel32.WritePrivateProfileString(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ LPCTSTR lpString,_In_ LPCTSTR lpFileName)
BOOL WINAPI kernel32.WritePrivateProfileStringW(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ LPCTSTR lpString,_In_ LPCTSTR lpFileName)
BOOL WINAPI kernel32.WritePrivateProfileStringA(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ LPCTSTR lpString,_In_ LPCTSTR lpFileName)
BOOL WINAPI kernel32.SetFileBandwidthReservation(_In_ HANDLE hFile,_In_ DWORD nPeriodMilliseconds,_In_ DWORD nBytesPerPeriod,_In_ BOOL bDiscardable,_Out_ LPDWORD lpTransferSize,_Out_ LPDWORD lpNumOutstandingRequests)
DWORD WINAPI advapi32.WriteEncryptedFileRaw(_In_ PFE_IMPORT_FUNC pfImportCallback,_In_opt_ PVOID pvCallbackContext,_In_ PVOID pvContext)
DWORD WINAPI kernel32.GetFullPathNameTransacted(_In_ LPCTSTR lpFileName,_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer,_Out_ LPTSTR *lpFilePart,_In_ HANDLE hTransaction)
DWORD WINAPI kernel32.GetFullPathNameTransactedW(_In_ LPCTSTR lpFileName,_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer,_Out_ LPTSTR *lpFilePart,_In_ HANDLE hTransaction)
DWORD WINAPI kernel32.GetFullPathNameTransactedA(_In_ LPCTSTR lpFileName,_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer,_Out_ LPTSTR *lpFilePart,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.SetFileValidData(_In_ HANDLE hFile,_In_ LONGLONG ValidDataLength)
DWORD WINAPI kernel32.GetCompressedFileSize(_In_ LPCTSTR lpFileName,_Out_opt_ LPDWORD lpFileSizeHigh)
DWORD WINAPI kernel32.GetCompressedFileSizeW(_In_ LPCTSTR lpFileName,_Out_opt_ LPDWORD lpFileSizeHigh)
DWORD WINAPI kernel32.GetCompressedFileSizeA(_In_ LPCTSTR lpFileName,_Out_opt_ LPDWORD lpFileSizeHigh)
BOOL WINAPI kernel32.GetFileInformationByHandleEx(_In_ HANDLE hFile,_In_ FILE_INFO_BY_HANDLE_CLASS FileInformationClass,_Out_ LPVOID lpFileInformation,_In_ DWORD dwBufferSize)
BOOL WINAPI kernel32.CancelSynchronousIo(_In_ HANDLE hThread)
BOOL WINAPI kernel32.GetFileBandwidthReservation(_In_ HANDLE hFile,_Out_ LPDWORD lpPeriodMilliseconds,_Out_ LPDWORD lpBytesPerPeriod,_Out_ LPBOOL pDiscardable,_Out_ LPDWORD lpTransferSize,_Out_ LPDWORD lpNumOutstandingRequests)
PVOID WINAPI kernel32.RtlPcToFileHeader(_In_ PVOID PcValue,_Out_ PVOID *BaseOfImage)
BOOL WINAPI kernel32.FindNextFile(_In_ HANDLE hFindFile,_Out_ LPWIN32_FIND_DATA lpFindFileData)
BOOL WINAPI kernel32.FindNextFileW(_In_ HANDLE hFindFile,_Out_ LPWIN32_FIND_DATA lpFindFileData)
BOOL WINAPI kernel32.FindNextFileA(_In_ HANDLE hFindFile,_Out_ LPWIN32_FIND_DATA lpFindFileData)
BOOL WINAPI kernel32.SetFileBandwidthReservation(_In_ HANDLE hFile,_In_ DWORD nPeriodMilliseconds,_In_ DWORD nBytesPerPeriod,_In_ BOOL bDiscardable,_Out_ LPDWORD lpTransferSize,_Out_ LPDWORD lpNumOutstandingRequests)
DWORD WINAPI advapi32.QueryUsersOnEncryptedFile(_In_ LPCWSTR lpFileName,_Out_ PENCRYPTION_CERTIFICATE_HASH_LIST *pUsers)
BOOL WINAPI kernel32.SetFileBandwidthReservation(_In_ HANDLE hFile,_In_ DWORD nPeriodMilliseconds,_In_ DWORD nBytesPerPeriod,_In_ BOOL bDiscardable,_Out_ LPDWORD lpTransferSize,_Out_ LPDWORD lpNumOutstandingRequests)
DWORD WINAPI kernel32.FormatMessage(_In_ DWORD dwFlags,_In_opt_ LPCVOID lpSource,_In_ DWORD dwMessageId,_In_ DWORD dwLanguageId,_Out_ LPTSTR lpBuffer,_In_ DWORD nSize,_In_opt_ va_list *Arguments)
DWORD WINAPI kernel32.FormatMessageW(_In_ DWORD dwFlags,_In_opt_ LPCVOID lpSource,_In_ DWORD dwMessageId,_In_ DWORD dwLanguageId,_Out_ LPTSTR lpBuffer,_In_ DWORD nSize,_In_opt_ va_list *Arguments)
DWORD WINAPI kernel32.FormatMessageA(_In_ DWORD dwFlags,_In_opt_ LPCVOID lpSource,_In_ DWORD dwMessageId,_In_ DWORD dwLanguageId,_Out_ LPTSTR lpBuffer,_In_ DWORD nSize,_In_opt_ va_list *Arguments)
BOOL WINAPI advapi32.EncryptionDisable(_In_ LPCWSTR DirPath,_In_ BOOL Disable)
BOOL WINAPI kernel32.MoveFile(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName)
BOOL WINAPI kernel32.MoveFileW(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName)
BOOL WINAPI kernel32.MoveFileA(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName)
BOOL WINAPI kernel32.GetFileInformationByHandle(_In_ HANDLE hFile,_Out_ LPBY_HANDLE_FILE_INFORMATION lpFileInformation)
BOOL WINAPI advapi32.EncryptFile(_In_ LPCTSTR lpFileName)
BOOL WINAPI advapi32.EncryptFileW(_In_ LPCTSTR lpFileName)
BOOL WINAPI advapi32.EncryptFileA(_In_ LPCTSTR lpFileName)
BOOL WINAPI kernel32.SetFileBandwidthReservation(_In_ HANDLE hFile,_In_ DWORD nPeriodMilliseconds,_In_ DWORD nBytesPerPeriod,_In_ BOOL bDiscardable,_Out_ LPDWORD lpTransferSize,_Out_ LPDWORD lpNumOutstandingRequests)
BOOL WINAPI kernel32.WriteFileEx(_In_ HANDLE hFile,_In_opt_ LPCVOID lpBuffer,_In_ DWORD nNumberOfBytesToWrite,_Inout_ LPOVERLAPPED lpOverlapped,_In_ LPOVERLAPPED_COMPLETION_ROUTINE lpCompletionRoutine)
DWORD WINAPI kernel32.GetLongPathName(_In_ LPCTSTR lpszShortPath,_Out_ LPTSTR lpszLongPath,_In_ DWORD cchBuffer)
DWORD WINAPI kernel32.GetLongPathNameW(_In_ LPCTSTR lpszShortPath,_Out_ LPTSTR lpszLongPath,_In_ DWORD cchBuffer)
DWORD WINAPI kernel32.GetLongPathNameA(_In_ LPCTSTR lpszShortPath,_Out_ LPTSTR lpszLongPath,_In_ DWORD cchBuffer)
DWORD CALLBACK None.CopyProgressRoutine(_In_ LARGE_INTEGER TotalFileSize,_In_ LARGE_INTEGER TotalBytesTransferred,_In_ LARGE_INTEGER StreamSize,_In_ LARGE_INTEGER StreamBytesTransferred,_In_ DWORD dwStreamNumber,_In_ DWORD dwCallbackReason,_In_ HANDLE hSourceFile,_In_ HANDLE hDestinationFile,_In_opt_ LPVOID lpData)
DWORD WINAPI kernel32.GetLongPathNameTransacted(_In_ LPCTSTR lpszShortPath,_Out_ LPTSTR lpszLongPath,_In_ DWORD cchBuffer,_In_ HANDLE hTransaction)
DWORD WINAPI kernel32.GetLongPathNameTransactedW(_In_ LPCTSTR lpszShortPath,_Out_ LPTSTR lpszLongPath,_In_ DWORD cchBuffer,_In_ HANDLE hTransaction)
DWORD WINAPI kernel32.GetLongPathNameTransactedA(_In_ LPCTSTR lpszShortPath,_Out_ LPTSTR lpszLongPath,_In_ DWORD cchBuffer,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.GetFileBandwidthReservation(_In_ HANDLE hFile,_Out_ LPDWORD lpPeriodMilliseconds,_Out_ LPDWORD lpBytesPerPeriod,_Out_ LPBOOL pDiscardable,_Out_ LPDWORD lpTransferSize,_Out_ LPDWORD lpNumOutstandingRequests)
BOOL WINAPI kernel32.CopyFileEx(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName,_In_opt_ LPPROGRESS_ROUTINE lpProgressRoutine,_In_opt_ LPVOID lpData,_In_opt_ LPBOOL pbCancel,_In_ DWORD dwCopyFlags)
BOOL WINAPI kernel32.CopyFileExW(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName,_In_opt_ LPPROGRESS_ROUTINE lpProgressRoutine,_In_opt_ LPVOID lpData,_In_opt_ LPBOOL pbCancel,_In_ DWORD dwCopyFlags)
BOOL WINAPI kernel32.CopyFileExA(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName,_In_opt_ LPPROGRESS_ROUTINE lpProgressRoutine,_In_opt_ LPVOID lpData,_In_opt_ LPBOOL pbCancel,_In_ DWORD dwCopyFlags)
HANDLE WINAPI kernel32.FindFirstFileEx(_In_ LPCTSTR lpFileName,_In_ FINDEX_INFO_LEVELS fInfoLevelId,_Out_ LPVOID lpFindFileData,_In_ FINDEX_SEARCH_OPS fSearchOp,_Reserved_ LPVOID lpSearchFilter,_In_ DWORD dwAdditionalFlags)
HANDLE WINAPI kernel32.FindFirstFileExW(_In_ LPCTSTR lpFileName,_In_ FINDEX_INFO_LEVELS fInfoLevelId,_Out_ LPVOID lpFindFileData,_In_ FINDEX_SEARCH_OPS fSearchOp,_Reserved_ LPVOID lpSearchFilter,_In_ DWORD dwAdditionalFlags)
HANDLE WINAPI kernel32.FindFirstFileExA(_In_ LPCTSTR lpFileName,_In_ FINDEX_INFO_LEVELS fInfoLevelId,_Out_ LPVOID lpFindFileData,_In_ FINDEX_SEARCH_OPS fSearchOp,_Reserved_ LPVOID lpSearchFilter,_In_ DWORD dwAdditionalFlags)
BOOL WINAPI kernel32.GetQueuedCompletionStatus(_In_ HANDLE CompletionPort,_Out_ LPDWORD lpNumberOfBytes,_Out_ PULONG_PTR lpCompletionKey,_Out_ LPOVERLAPPED *lpOverlapped,_In_ DWORD dwMilliseconds)
UINT WINAPI kernel32.GetTempFileName(_In_ LPCTSTR lpPathName,_In_ LPCTSTR lpPrefixString,_In_ UINT uUnique,_Out_ LPTSTR lpTempFileName)
UINT WINAPI kernel32.GetTempFileNameW(_In_ LPCTSTR lpPathName,_In_ LPCTSTR lpPrefixString,_In_ UINT uUnique,_Out_ LPTSTR lpTempFileName)
UINT WINAPI kernel32.GetTempFileNameA(_In_ LPCTSTR lpPathName,_In_ LPCTSTR lpPrefixString,_In_ UINT uUnique,_Out_ LPTSTR lpTempFileName)
DWORD WINAPI kernel32.GetFinalPathNameByHandle(_In_ HANDLE hFile,_Out_ LPTSTR lpszFilePath,_In_ DWORD cchFilePath,_In_ DWORD dwFlags)
DWORD WINAPI kernel32.GetFinalPathNameByHandleW(_In_ HANDLE hFile,_Out_ LPTSTR lpszFilePath,_In_ DWORD cchFilePath,_In_ DWORD dwFlags)
DWORD WINAPI kernel32.GetFinalPathNameByHandleA(_In_ HANDLE hFile,_Out_ LPTSTR lpszFilePath,_In_ DWORD cchFilePath,_In_ DWORD dwFlags)
BOOL WINAPI advapi32.FileEncryptionStatus(_In_ LPCTSTR lpFileName,_Out_ LPDWORD lpStatus)
BOOL WINAPI advapi32.FileEncryptionStatusW(_In_ LPCTSTR lpFileName,_Out_ LPDWORD lpStatus)
BOOL WINAPI advapi32.FileEncryptionStatusA(_In_ LPCTSTR lpFileName,_Out_ LPDWORD lpStatus)
BOOL WINAPI kernel32.SetFileInformationByHandle(_In_ HANDLE hFile,_In_ FILE_INFO_BY_HANDLE_CLASS FileInformationClass,_In_ LPVOID lpFileInformation,_In_ DWORD dwBufferSize)
HRESULT WINAPI wofutil.WofWimUpdateEntry(_In_ PCWSTR VolumeName,_In_ LARGE_INTEGER DataSourceId,_In_ PCWSTR NewWimPath)
BOOL WINAPI kernel32.CancelIo(_In_ HANDLE hFile)
UINT WINAPI kernel32.GetTempFileName(_In_ LPCTSTR lpPathName,_In_ LPCTSTR lpPrefixString,_In_ UINT uUnique,_Out_ LPTSTR lpTempFileName)
UINT WINAPI kernel32.GetTempFileNameW(_In_ LPCTSTR lpPathName,_In_ LPCTSTR lpPrefixString,_In_ UINT uUnique,_Out_ LPTSTR lpTempFileName)
UINT WINAPI kernel32.GetTempFileNameA(_In_ LPCTSTR lpPathName,_In_ LPCTSTR lpPrefixString,_In_ UINT uUnique,_Out_ LPTSTR lpTempFileName)
BOOL WINAPI kernel32.GetQueuedCompletionStatus(_In_ HANDLE CompletionPort,_Out_ LPDWORD lpNumberOfBytes,_Out_ PULONG_PTR lpCompletionKey,_Out_ LPOVERLAPPED *lpOverlapped,_In_ DWORD dwMilliseconds)
DWORD WINAPI kernel32.GetCompressedFileSizeTransacted(_In_ LPCTSTR lpFileName,_Out_opt_ LPDWORD lpFileSizeHigh,_In_ HANDLE hTransaction)
DWORD WINAPI kernel32.GetCompressedFileSizeTransactedW(_In_ LPCTSTR lpFileName,_Out_opt_ LPDWORD lpFileSizeHigh,_In_ HANDLE hTransaction)
DWORD WINAPI kernel32.GetCompressedFileSizeTransactedA(_In_ LPCTSTR lpFileName,_Out_opt_ LPDWORD lpFileSizeHigh,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.CancelIo(_In_ HANDLE hFile)
DWORD WINAPI kernel32.GetShortPathName(_In_ LPCTSTR lpszLongPath,_Out_ LPTSTR lpszShortPath,_In_ DWORD cchBuffer)
DWORD WINAPI kernel32.GetShortPathNameW(_In_ LPCTSTR lpszLongPath,_Out_ LPTSTR lpszShortPath,_In_ DWORD cchBuffer)
DWORD WINAPI kernel32.GetShortPathNameA(_In_ LPCTSTR lpszLongPath,_Out_ LPTSTR lpszShortPath,_In_ DWORD cchBuffer)
BOOL WINAPI advapi32.EncryptFile(_In_ LPCTSTR lpFileName)
BOOL WINAPI advapi32.EncryptFileW(_In_ LPCTSTR lpFileName)
BOOL WINAPI advapi32.EncryptFileA(_In_ LPCTSTR lpFileName)
DWORD WINAPI advapi32.QueryRecoveryAgentsOnEncryptedFile(_In_ LPCWSTR lpFileName,_Out_ PENCRYPTION_CERTIFICATE_HASH_LIST *pRecoveryAgents)
HANDLE WINAPI kernel32.OpenFileById(_In_ HANDLE hFile,_In_ LPFILE_ID_DESCRIPTOR lpFileID,_In_ DWORD dwDesiredAccess,_In_ DWORD dwShareMode,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ DWORD dwFlags)
BOOL WINAPI kernel32.FlushFileBuffers(_In_ HANDLE hFile)
BOOL WINAPI kernel32.GetBinaryType(_In_ LPCTSTR lpApplicationName,_Out_ LPDWORD lpBinaryType)
BOOL WINAPI kernel32.GetBinaryTypeW(_In_ LPCTSTR lpApplicationName,_Out_ LPDWORD lpBinaryType)
BOOL WINAPI kernel32.GetBinaryTypeA(_In_ LPCTSTR lpApplicationName,_Out_ LPDWORD lpBinaryType)
UINT WINAPI kernel32.GetTempFileName(_In_ LPCTSTR lpPathName,_In_ LPCTSTR lpPrefixString,_In_ UINT uUnique,_Out_ LPTSTR lpTempFileName)
UINT WINAPI kernel32.GetTempFileNameW(_In_ LPCTSTR lpPathName,_In_ LPCTSTR lpPrefixString,_In_ UINT uUnique,_Out_ LPTSTR lpTempFileName)
UINT WINAPI kernel32.GetTempFileNameA(_In_ LPCTSTR lpPathName,_In_ LPCTSTR lpPrefixString,_In_ UINT uUnique,_Out_ LPTSTR lpTempFileName)
HRESULT WINAPI wofutil.WofWimEnumFiles(_In_ PCWSTR VolumeName,_In_ LARGE_INTEGER DataSourceId,_In_ WofEnumFilesProc EnumProc,_In_opt_ PVOID UserData)
BOOL WINAPI kernel32.FindNextFile(_In_ HANDLE hFindFile,_Out_ LPWIN32_FIND_DATA lpFindFileData)
BOOL WINAPI kernel32.FindNextFileW(_In_ HANDLE hFindFile,_Out_ LPWIN32_FIND_DATA lpFindFileData)
BOOL WINAPI kernel32.FindNextFileA(_In_ HANDLE hFindFile,_Out_ LPWIN32_FIND_DATA lpFindFileData)
BOOL WINAPI kernel32.FlushFileBuffers(_In_ HANDLE hFile)
VOID CALLBACK None.TimerAPCProc(_In_opt_ LPVOID lpArgToCompletionRoutine,_In_ DWORD dwTimerLowValue,_In_ DWORD dwTimerHighValue)
BOOL WINAPI kernel32.FlushFileBuffers(_In_ HANDLE hFile)
LONG WINAPI advapi32.RegCreateKey(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_Out_ PHKEY phkResult)
LONG WINAPI advapi32.RegCreateKeyW(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_Out_ PHKEY phkResult)
LONG WINAPI advapi32.RegCreateKeyA(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_Out_ PHKEY phkResult)
BOOL WINAPI kernel32.GetVolumeNameForVolumeMountPoint(_In_ LPCTSTR lpszVolumeMountPoint,_Out_ LPTSTR lpszVolumeName,_In_ DWORD cchBufferLength)
BOOL WINAPI kernel32.GetVolumeNameForVolumeMountPointW(_In_ LPCTSTR lpszVolumeMountPoint,_Out_ LPTSTR lpszVolumeName,_In_ DWORD cchBufferLength)
BOOL WINAPI kernel32.GetVolumeNameForVolumeMountPointA(_In_ LPCTSTR lpszVolumeMountPoint,_Out_ LPTSTR lpszVolumeName,_In_ DWORD cchBufferLength)
BOOL WINAPI kernel32.CheckNameLegalDOS8Dot3(_In_ LPCTSTR lpName,_Out_opt_ LPSTR lpOemName,_In_ DWORD OemNameSize,_Out_opt_ PBOOL pbNameContainsSpaces,_Out_ PBOOL pbNameLegal)
BOOL WINAPI kernel32.CheckNameLegalDOS8Dot3W(_In_ LPCTSTR lpName,_Out_opt_ LPSTR lpOemName,_In_ DWORD OemNameSize,_Out_opt_ PBOOL pbNameContainsSpaces,_Out_ PBOOL pbNameLegal)
BOOL WINAPI kernel32.CheckNameLegalDOS8Dot3A(_In_ LPCTSTR lpName,_Out_opt_ LPSTR lpOemName,_In_ DWORD OemNameSize,_Out_opt_ PBOOL pbNameContainsSpaces,_Out_ PBOOL pbNameLegal)
PVOID WINAPI kernel32.RtlPcToFileHeader(_In_ PVOID PcValue,_Out_ PVOID *BaseOfImage)
BOOL WINAPI user32.FlashWindowEx(_In_ PFLASHWINFO pfwi)
DWORD WINAPI kernel32.GetShortPathName(_In_ LPCTSTR lpszLongPath,_Out_ LPTSTR lpszShortPath,_In_ DWORD cchBuffer)
DWORD WINAPI kernel32.GetShortPathNameW(_In_ LPCTSTR lpszLongPath,_Out_ LPTSTR lpszShortPath,_In_ DWORD cchBuffer)
DWORD WINAPI kernel32.GetShortPathNameA(_In_ LPCTSTR lpszLongPath,_Out_ LPTSTR lpszShortPath,_In_ DWORD cchBuffer)
DWORD WINAPI kernel32.GetFinalPathNameByHandle(_In_ HANDLE hFile,_Out_ LPTSTR lpszFilePath,_In_ DWORD cchFilePath,_In_ DWORD dwFlags)
DWORD WINAPI kernel32.GetFinalPathNameByHandleW(_In_ HANDLE hFile,_Out_ LPTSTR lpszFilePath,_In_ DWORD cchFilePath,_In_ DWORD dwFlags)
DWORD WINAPI kernel32.GetFinalPathNameByHandleA(_In_ HANDLE hFile,_Out_ LPTSTR lpszFilePath,_In_ DWORD cchFilePath,_In_ DWORD dwFlags)
HRESULT WINAPI wofutil.WofFileEnumFiles(_In_ PCWSTR VolumeName,_In_ ULONG Algorithm,_In_ WofEnumFilesProc EnumProc,_In_opt_ PVOID UserData)
VOID CALLBACK None.FileIOCompletionRoutine(_In_ DWORD dwErrorCode,_In_ DWORD dwNumberOfBytesTransfered,_Inout_ LPOVERLAPPED lpOverlapped)
HANDLE WINAPI kernel32.CreateFile2(_In_ LPCWSTR lpFileName,_In_ DWORD dwDesiredAccess,_In_ DWORD dwShareMode,_In_ DWORD dwCreationDisposition,_In_opt_ LPCREATEFILE2_EXTENDED_PARAMETERS pCreateExParams)
HRESULT WINAPI wofutil.WofWimUpdateEntry(_In_ PCWSTR VolumeName,_In_ LARGE_INTEGER DataSourceId,_In_ PCWSTR NewWimPath)
PVOID WINAPI kernel32.RtlPcToFileHeader(_In_ PVOID PcValue,_Out_ PVOID *BaseOfImage)
BOOL WINAPI kernel32.UnmapViewOfFile(_In_ LPCVOID lpBaseAddress)
BOOL WINAPI advapi32.EncryptionDisable(_In_ LPCWSTR DirPath,_In_ BOOL Disable)
PVOID WINAPI kernel32.RtlPcToFileHeader(_In_ PVOID PcValue,_Out_ PVOID *BaseOfImage)
DWORD WINAPI kernel32.GetProfileString(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ LPCTSTR lpDefault,_Out_ LPTSTR lpReturnedString,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetProfileStringW(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ LPCTSTR lpDefault,_Out_ LPTSTR lpReturnedString,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetProfileStringA(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ LPCTSTR lpDefault,_Out_ LPTSTR lpReturnedString,_In_ DWORD nSize)
PSLIST_ENTRY FASTCALL kernel32.InterlockedPushListSList(_Inout_ PSLIST_HEADER ListHead,_Inout_ PSLIST_ENTRY List,_Inout_ PSLIST_ENTRY ListEnd,_In_ ULONG Count)
DWORD WINAPI kernel32.GetShortPathName(_In_ LPCTSTR lpszLongPath,_Out_ LPTSTR lpszShortPath,_In_ DWORD cchBuffer)
DWORD WINAPI kernel32.GetShortPathNameW(_In_ LPCTSTR lpszLongPath,_Out_ LPTSTR lpszShortPath,_In_ DWORD cchBuffer)
DWORD WINAPI kernel32.GetShortPathNameA(_In_ LPCTSTR lpszLongPath,_Out_ LPTSTR lpszShortPath,_In_ DWORD cchBuffer)
BOOL WINAPI kernel32.WriteFileEx(_In_ HANDLE hFile,_In_opt_ LPCVOID lpBuffer,_In_ DWORD nNumberOfBytesToWrite,_Inout_ LPOVERLAPPED lpOverlapped,_In_ LPOVERLAPPED_COMPLETION_ROUTINE lpCompletionRoutine)
BOOL WINAPI user32.FlashWindowEx(_In_ PFLASHWINFO pfwi)
BOOL WINAPI kernel32.SetSystemFileCacheSize(_In_ SIZE_T MinimumFileCacheSize,_In_ SIZE_T MaximumFileCacheSize,_In_ DWORD Flags)
LONG WINAPI advapi32.RegGetValue(_In_ HKEY hkey,_In_opt_ LPCTSTR lpSubKey,_In_opt_ LPCTSTR lpValue,_In_opt_ DWORD dwFlags,_Out_opt_ LPDWORD pdwType,_Out_opt_ PVOID pvData,_Inout_opt_ LPDWORD pcbData)
LONG WINAPI advapi32.RegGetValueW(_In_ HKEY hkey,_In_opt_ LPCTSTR lpSubKey,_In_opt_ LPCTSTR lpValue,_In_opt_ DWORD dwFlags,_Out_opt_ LPDWORD pdwType,_Out_opt_ PVOID pvData,_Inout_opt_ LPDWORD pcbData)
LONG WINAPI advapi32.RegGetValueA(_In_ HKEY hkey,_In_opt_ LPCTSTR lpSubKey,_In_opt_ LPCTSTR lpValue,_In_opt_ DWORD dwFlags,_Out_opt_ LPDWORD pdwType,_Out_opt_ PVOID pvData,_Inout_opt_ LPDWORD pcbData)
BOOL WINAPI kernel32.GetVolumeNameForVolumeMountPoint(_In_ LPCTSTR lpszVolumeMountPoint,_Out_ LPTSTR lpszVolumeName,_In_ DWORD cchBufferLength)
BOOL WINAPI kernel32.GetVolumeNameForVolumeMountPointW(_In_ LPCTSTR lpszVolumeMountPoint,_Out_ LPTSTR lpszVolumeName,_In_ DWORD cchBufferLength)
BOOL WINAPI kernel32.GetVolumeNameForVolumeMountPointA(_In_ LPCTSTR lpszVolumeMountPoint,_Out_ LPTSTR lpszVolumeName,_In_ DWORD cchBufferLength)
HRESULT WINAPI wofutil.WofWimUpdateEntry(_In_ PCWSTR VolumeName,_In_ LARGE_INTEGER DataSourceId,_In_ PCWSTR NewWimPath)
BOOL WINAPI kernel32.WriteFile(_In_ HANDLE hFile,_In_ LPCVOID lpBuffer,_In_ DWORD nNumberOfBytesToWrite,_Out_opt_ LPDWORD lpNumberOfBytesWritten,_Inout_opt_ LPOVERLAPPED lpOverlapped)
BOOL WINAPI kernel32.SetVolumeMountPoint(_In_ LPCTSTR lpszVolumeMountPoint,_In_ LPCTSTR lpszVolumeName)
BOOL WINAPI kernel32.SetVolumeMountPointW(_In_ LPCTSTR lpszVolumeMountPoint,_In_ LPCTSTR lpszVolumeName)
BOOL WINAPI kernel32.SetVolumeMountPointA(_In_ LPCTSTR lpszVolumeMountPoint,_In_ LPCTSTR lpszVolumeName)
DWORD WINAPI kernel32.WaitForSingleObjectEx(_In_ HANDLE hHandle,_In_ DWORD dwMilliseconds,_In_ BOOL bAlertable)
BOOL WINAPI kernel32.SetConsoleActiveScreenBuffer(_In_ HANDLE hConsoleOutput)
BOOL WINAPI kernel32.LockFile(_In_ HANDLE hFile,_In_ DWORD dwFileOffsetLow,_In_ DWORD dwFileOffsetHigh,_In_ DWORD nNumberOfBytesToLockLow,_In_ DWORD nNumberOfBytesToLockHigh)
HANDLE WINAPI kernel32.CreateFileMappingFromApp(_In_ HANDLE hFile,_In_opt_ PSECURITY_ATTRIBUTES SecurityAttributes,_In_ ULONG PageProtection,_In_ ULONG64 MaximumSize,_In_opt_ PCWSTR Name)
LPVOID WINAPI kernel32.GlobalLock(_In_ HGLOBAL hMem)
BOOL WINAPI kernel32.LockFile(_In_ HANDLE hFile,_In_ DWORD dwFileOffsetLow,_In_ DWORD dwFileOffsetHigh,_In_ DWORD nNumberOfBytesToLockLow,_In_ DWORD nNumberOfBytesToLockHigh)
BOOL WINAPI kernel32.FindNextStreamW(_In_ HANDLE hFindStream,_Out_ LPVOID lpFindStreamData)
BOOL WINAPI kernel32.GetVolumeNameForVolumeMountPoint(_In_ LPCTSTR lpszVolumeMountPoint,_Out_ LPTSTR lpszVolumeName,_In_ DWORD cchBufferLength)
BOOL WINAPI kernel32.GetVolumeNameForVolumeMountPointW(_In_ LPCTSTR lpszVolumeMountPoint,_Out_ LPTSTR lpszVolumeName,_In_ DWORD cchBufferLength)
BOOL WINAPI kernel32.GetVolumeNameForVolumeMountPointA(_In_ LPCTSTR lpszVolumeMountPoint,_Out_ LPTSTR lpszVolumeName,_In_ DWORD cchBufferLength)
BOOL WINAPI kernel32.BindIoCompletionCallback(_In_ HANDLE FileHandle,_In_ LPOVERLAPPED_COMPLETION_ROUTINE Function,_In_ ULONG Flags)
BOOL WINAPI kernel32.CloseHandle(_In_ HANDLE hObject)
BOOL WINAPI kernel32.GetMemoryErrorHandlingCapabilities(_Out_ PULONG Capabilities)
VOID WINAPI kernel32.WakeByAddressAll(_In_ PVOID Address)
BOOL WINAPI kernel32.ReplaceFile(_In_ LPCTSTR lpReplacedFileName,_In_ LPCTSTR lpReplacementFileName,_In_opt_ LPCTSTR lpBackupFileName,_In_ DWORD dwReplaceFlags,_Reserved_ LPVOID lpExclude,_Reserved_ LPVOID lpReserved)
BOOL WINAPI kernel32.ReplaceFileW(_In_ LPCTSTR lpReplacedFileName,_In_ LPCTSTR lpReplacementFileName,_In_opt_ LPCTSTR lpBackupFileName,_In_ DWORD dwReplaceFlags,_Reserved_ LPVOID lpExclude,_Reserved_ LPVOID lpReserved)
BOOL WINAPI kernel32.ReplaceFileA(_In_ LPCTSTR lpReplacedFileName,_In_ LPCTSTR lpReplacementFileName,_In_opt_ LPCTSTR lpBackupFileName,_In_ DWORD dwReplaceFlags,_Reserved_ LPVOID lpExclude,_Reserved_ LPVOID lpReserved)
HANDLE WINAPI kernel32.ReOpenFile(_In_ HANDLE hOriginalFile,_In_ DWORD dwDesiredAccess,_In_ DWORD dwShareMode,_In_ DWORD dwFlags)
HRESULT WINAPI wofutil.WofIsExternalFile(_In_ LPCWSTR FilePath,_Out_opt_ PBOOL IsExternalFile,_Out_opt_ PULONG Provider,_Out_opt_ PVOID ExternalFileInfo,_Inout_opt_ PULONG BufferLength)
BOOL WINAPI kernel32.SetFileIoOverlappedRange(_In_ HANDLE FileHandle,_In_ PUCHAR OverlappedRangeStart,_In_ ULONG Length)
LPVOID WINAPI kernel32.HeapAlloc(_In_ HANDLE hHeap,_In_ DWORD dwFlags,_In_ SIZE_T dwBytes)
DWORD WINAPI advapi32.WriteEncryptedFileRaw(_In_ PFE_IMPORT_FUNC pfImportCallback,_In_opt_ PVOID pvCallbackContext,_In_ PVOID pvContext)
BOOL WINAPI kernel32.GetVolumeNameForVolumeMountPoint(_In_ LPCTSTR lpszVolumeMountPoint,_Out_ LPTSTR lpszVolumeName,_In_ DWORD cchBufferLength)
BOOL WINAPI kernel32.GetVolumeNameForVolumeMountPointW(_In_ LPCTSTR lpszVolumeMountPoint,_Out_ LPTSTR lpszVolumeName,_In_ DWORD cchBufferLength)
BOOL WINAPI kernel32.GetVolumeNameForVolumeMountPointA(_In_ LPCTSTR lpszVolumeMountPoint,_Out_ LPTSTR lpszVolumeName,_In_ DWORD cchBufferLength)
BOOL WINAPI kernel32.SetSearchPathMode(_In_ DWORD Flags)
BOOL WINAPI advapi32.FileEncryptionStatus(_In_ LPCTSTR lpFileName,_Out_ LPDWORD lpStatus)
BOOL WINAPI advapi32.FileEncryptionStatusW(_In_ LPCTSTR lpFileName,_Out_ LPDWORD lpStatus)
BOOL WINAPI advapi32.FileEncryptionStatusA(_In_ LPCTSTR lpFileName,_Out_ LPDWORD lpStatus)
DWORD WINAPI kernel32.SearchPath(_In_opt_ LPCTSTR lpPath,_In_ LPCTSTR lpFileName,_In_opt_ LPCTSTR lpExtension,_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer,_Out_opt_ LPTSTR *lpFilePart)
DWORD WINAPI kernel32.SearchPathW(_In_opt_ LPCTSTR lpPath,_In_ LPCTSTR lpFileName,_In_opt_ LPCTSTR lpExtension,_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer,_Out_opt_ LPTSTR *lpFilePart)
DWORD WINAPI kernel32.SearchPathA(_In_opt_ LPCTSTR lpPath,_In_ LPCTSTR lpFileName,_In_opt_ LPCTSTR lpExtension,_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer,_Out_opt_ LPTSTR *lpFilePart)
BOOL WINAPI kernel32.SetStdHandle(_In_ DWORD nStdHandle,_In_ HANDLE hHandle)
BOOL WINAPI kernel32.WriteFile(_In_ HANDLE hFile,_In_ LPCVOID lpBuffer,_In_ DWORD nNumberOfBytesToWrite,_Out_opt_ LPDWORD lpNumberOfBytesWritten,_Inout_opt_ LPOVERLAPPED lpOverlapped)
BOOL WINAPI kernel32.CopyFileEx(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName,_In_opt_ LPPROGRESS_ROUTINE lpProgressRoutine,_In_opt_ LPVOID lpData,_In_opt_ LPBOOL pbCancel,_In_ DWORD dwCopyFlags)
BOOL WINAPI kernel32.CopyFileExW(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName,_In_opt_ LPPROGRESS_ROUTINE lpProgressRoutine,_In_opt_ LPVOID lpData,_In_opt_ LPBOOL pbCancel,_In_ DWORD dwCopyFlags)
BOOL WINAPI kernel32.CopyFileExA(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName,_In_opt_ LPPROGRESS_ROUTINE lpProgressRoutine,_In_opt_ LPVOID lpData,_In_opt_ LPBOOL pbCancel,_In_ DWORD dwCopyFlags)
BOOL WINAPI kernel32.SetFileCompletionNotificationModes(_In_ HANDLE FileHandle,_In_ UCHAR Flags)
DWORD WINAPI kernel32.GetFullPathNameTransacted(_In_ LPCTSTR lpFileName,_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer,_Out_ LPTSTR *lpFilePart,_In_ HANDLE hTransaction)
DWORD WINAPI kernel32.GetFullPathNameTransactedW(_In_ LPCTSTR lpFileName,_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer,_Out_ LPTSTR *lpFilePart,_In_ HANDLE hTransaction)
DWORD WINAPI kernel32.GetFullPathNameTransactedA(_In_ LPCTSTR lpFileName,_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer,_Out_ LPTSTR *lpFilePart,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.GetPrivateProfileStruct(_In_ LPCTSTR lpszSection,_In_ LPCTSTR lpszKey,_Out_ LPVOID lpStruct,_In_ UINT uSizeStruct,_In_ LPCTSTR szFile)
BOOL WINAPI kernel32.GetPrivateProfileStructW(_In_ LPCTSTR lpszSection,_In_ LPCTSTR lpszKey,_Out_ LPVOID lpStruct,_In_ UINT uSizeStruct,_In_ LPCTSTR szFile)
BOOL WINAPI kernel32.GetPrivateProfileStructA(_In_ LPCTSTR lpszSection,_In_ LPCTSTR lpszKey,_Out_ LPVOID lpStruct,_In_ UINT uSizeStruct,_In_ LPCTSTR szFile)
ULONG WINAPI ntdll.RtlNtStatusToDosErrorNoTeb(_In_ NTSTATUS Status)
BOOL WINAPI kernel32.GetCurrentConsoleFontEx(_In_ HANDLE hConsoleOutput,_In_ BOOL bMaximumWindow,_Out_ PCONSOLE_FONT_INFOEX lpConsoleCurrentFontEx)
BOOL WINAPI kernel32.InitializeCriticalSectionAndSpinCount(_Out_ LPCRITICAL_SECTION lpCriticalSection,_In_ DWORD dwSpinCount)
BOOL WINAPI kernel32.LocalUnlock(_In_ HLOCAL hMem)
BOOL WINAPI kernel32.Wow64RevertWow64FsRedirection(_In_ PVOID OldValue)
DWORD WINAPI advapi32.RemoveUsersFromEncryptedFile(_In_ LPCWSTR lpFileName,_In_ PENCRYPTION_CERTIFICATE_HASH_LIST pHashes)
BOOL WINAPI kernel32.GetConsoleHistoryInfo(_Out_ PCONSOLE_HISTORY_INFO lpConsoleHistoryInfo)
LONG WINAPI advapi32.RegQueryValueEx(_In_ HKEY hKey,_In_opt_ LPCTSTR lpValueName,_Reserved_ LPDWORD lpReserved,_Out_opt_ LPDWORD lpType,_Out_opt_ LPBYTE lpData,_Inout_opt_ LPDWORD lpcbData)
LONG WINAPI advapi32.RegQueryValueExW(_In_ HKEY hKey,_In_opt_ LPCTSTR lpValueName,_Reserved_ LPDWORD lpReserved,_Out_opt_ LPDWORD lpType,_Out_opt_ LPBYTE lpData,_Inout_opt_ LPDWORD lpcbData)
LONG WINAPI advapi32.RegQueryValueExA(_In_ HKEY hKey,_In_opt_ LPCTSTR lpValueName,_Reserved_ LPDWORD lpReserved,_Out_opt_ LPDWORD lpType,_Out_opt_ LPBYTE lpData,_Inout_opt_ LPDWORD lpcbData)
LPVOID WINAPI kernel32.MapViewOfFileEx(_In_ HANDLE hFileMappingObject,_In_ DWORD dwDesiredAccess,_In_ DWORD dwFileOffsetHigh,_In_ DWORD dwFileOffsetLow,_In_ SIZE_T dwNumberOfBytesToMap,_In_opt_ LPVOID lpBaseAddress)
DWORD WINAPI kernel32.GetPrivateProfileString(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ LPCTSTR lpDefault,_Out_ LPTSTR lpReturnedString,_In_ DWORD nSize,_In_ LPCTSTR lpFileName)
DWORD WINAPI kernel32.GetPrivateProfileStringW(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ LPCTSTR lpDefault,_Out_ LPTSTR lpReturnedString,_In_ DWORD nSize,_In_ LPCTSTR lpFileName)
DWORD WINAPI kernel32.GetPrivateProfileStringA(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ LPCTSTR lpDefault,_Out_ LPTSTR lpReturnedString,_In_ DWORD nSize,_In_ LPCTSTR lpFileName)
LONG WINAPI advapi32.RegOverridePredefKey(_In_ HKEY hKey,_In_opt_ HKEY hNewHKey)
BOOL WINAPI kernel32.UnmapViewOfFile(_In_ LPCVOID lpBaseAddress)
INT WINAPI lz32.LZOpenFile(_In_ LPTSTR lpFileName,_Out_ LPOFSTRUCT lpReOpenBuf,_In_ WORD wStyle)
INT WINAPI lz32.LZOpenFileW(_In_ LPTSTR lpFileName,_Out_ LPOFSTRUCT lpReOpenBuf,_In_ WORD wStyle)
INT WINAPI lz32.LZOpenFileA(_In_ LPTSTR lpFileName,_Out_ LPOFSTRUCT lpReOpenBuf,_In_ WORD wStyle)
COORD WINAPI kernel32.GetConsoleFontSize(_In_ HANDLE hConsoleOutput,_In_ DWORD nFont)
HANDLE WINAPI kernel32.OpenWaitableTimer(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpTimerName)
HANDLE WINAPI kernel32.OpenWaitableTimerW(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpTimerName)
HANDLE WINAPI kernel32.OpenWaitableTimerA(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpTimerName)
BOOL WINAPI advapi32.FileEncryptionStatus(_In_ LPCTSTR lpFileName,_Out_ LPDWORD lpStatus)
BOOL WINAPI advapi32.FileEncryptionStatusW(_In_ LPCTSTR lpFileName,_Out_ LPDWORD lpStatus)
BOOL WINAPI advapi32.FileEncryptionStatusA(_In_ LPCTSTR lpFileName,_Out_ LPDWORD lpStatus)
SIZE_T WINAPI kernel32.GlobalSize(_In_ HGLOBAL hMem)
USHORT WINAPI kernel32.QueryDepthSList(_In_ PSLIST_HEADER ListHead)
DWORD WINAPI kernel32.GetFileAttributes(_In_ LPCTSTR lpFileName)
DWORD WINAPI kernel32.GetFileAttributesW(_In_ LPCTSTR lpFileName)
DWORD WINAPI kernel32.GetFileAttributesA(_In_ LPCTSTR lpFileName)
BOOL WINAPI kernel32.DisableThreadLibraryCalls(_In_ HMODULE hModule)
BOOL WINAPI kernel32.QueryMemoryResourceNotification(_In_ HANDLE ResourceNotificationHandle,_Out_ PBOOL ResourceState)
BOOL WINAPI kernel32.GetSystemFileCacheSize(_Out_ PSIZE_T lpMinimumFileCacheSize,_Out_ PSIZE_T lpMaximumFileCacheSize,_Out_ PDWORD lpFlags)
DWORD WINAPI advapi32.WriteEncryptedFileRaw(_In_ PFE_IMPORT_FUNC pfImportCallback,_In_opt_ PVOID pvCallbackContext,_In_ PVOID pvContext)
LONG WINAPI advapi32.RegOpenCurrentUser(_In_ REGSAM samDesired,_Out_ PHKEY phkResult)
BOOL WINAPI kernel32.SetStdHandle(_In_ DWORD nStdHandle,_In_ HANDLE hHandle)
BOOL WINAPI advapi32.DecryptFile(_In_ LPCTSTR lpFileName,_Reserved_ DWORD dwReserved)
BOOL WINAPI advapi32.DecryptFileW(_In_ LPCTSTR lpFileName,_Reserved_ DWORD dwReserved)
BOOL WINAPI advapi32.DecryptFileA(_In_ LPCTSTR lpFileName,_Reserved_ DWORD dwReserved)
BOOL WINAPI kernel32.ReplaceFile(_In_ LPCTSTR lpReplacedFileName,_In_ LPCTSTR lpReplacementFileName,_In_opt_ LPCTSTR lpBackupFileName,_In_ DWORD dwReplaceFlags,_Reserved_ LPVOID lpExclude,_Reserved_ LPVOID lpReserved)
BOOL WINAPI kernel32.ReplaceFileW(_In_ LPCTSTR lpReplacedFileName,_In_ LPCTSTR lpReplacementFileName,_In_opt_ LPCTSTR lpBackupFileName,_In_ DWORD dwReplaceFlags,_Reserved_ LPVOID lpExclude,_Reserved_ LPVOID lpReserved)
BOOL WINAPI kernel32.ReplaceFileA(_In_ LPCTSTR lpReplacedFileName,_In_ LPCTSTR lpReplacementFileName,_In_opt_ LPCTSTR lpBackupFileName,_In_ DWORD dwReplaceFlags,_Reserved_ LPVOID lpExclude,_Reserved_ LPVOID lpReserved)
VOID WINAPI kernel32.ExitThread(_In_ DWORD dwExitCode)
LONG WINAPI advapi32.RegQueryInfoKey(_In_ HKEY hKey,_Out_opt_ LPTSTR lpClass,_Inout_opt_ LPDWORD lpcClass,_Reserved_ LPDWORD lpReserved,_Out_opt_ LPDWORD lpcSubKeys,_Out_opt_ LPDWORD lpcMaxSubKeyLen,_Out_opt_ LPDWORD lpcMaxClassLen,_Out_opt_ LPDWORD lpcValues,_Out_opt_ LPDWORD lpcMaxValueNameLen,_Out_opt_ LPDWORD lpcMaxValueLen,_Out_opt_ LPDWORD lpcbSecurityDescriptor,_Out_opt_ PFILETIME lpftLastWriteTime)
LONG WINAPI advapi32.RegQueryInfoKeyW(_In_ HKEY hKey,_Out_opt_ LPTSTR lpClass,_Inout_opt_ LPDWORD lpcClass,_Reserved_ LPDWORD lpReserved,_Out_opt_ LPDWORD lpcSubKeys,_Out_opt_ LPDWORD lpcMaxSubKeyLen,_Out_opt_ LPDWORD lpcMaxClassLen,_Out_opt_ LPDWORD lpcValues,_Out_opt_ LPDWORD lpcMaxValueNameLen,_Out_opt_ LPDWORD lpcMaxValueLen,_Out_opt_ LPDWORD lpcbSecurityDescriptor,_Out_opt_ PFILETIME lpftLastWriteTime)
LONG WINAPI advapi32.RegQueryInfoKeyA(_In_ HKEY hKey,_Out_opt_ LPTSTR lpClass,_Inout_opt_ LPDWORD lpcClass,_Reserved_ LPDWORD lpReserved,_Out_opt_ LPDWORD lpcSubKeys,_Out_opt_ LPDWORD lpcMaxSubKeyLen,_Out_opt_ LPDWORD lpcMaxClassLen,_Out_opt_ LPDWORD lpcValues,_Out_opt_ LPDWORD lpcMaxValueNameLen,_Out_opt_ LPDWORD lpcMaxValueLen,_Out_opt_ LPDWORD lpcbSecurityDescriptor,_Out_opt_ PFILETIME lpftLastWriteTime)
BOOL WINAPI kernel32.SetFileValidData(_In_ HANDLE hFile,_In_ LONGLONG ValidDataLength)
LONG WINAPI advapi32.RegQueryMultipleValues(_In_ HKEY hKey,_Out_ PVALENT val_list,_In_ DWORD num_vals,_Out_opt_ LPTSTR lpValueBuf,_Inout_opt_ LPDWORD ldwTotsize)
LONG WINAPI advapi32.RegQueryMultipleValuesW(_In_ HKEY hKey,_Out_ PVALENT val_list,_In_ DWORD num_vals,_Out_opt_ LPTSTR lpValueBuf,_Inout_opt_ LPDWORD ldwTotsize)
LONG WINAPI advapi32.RegQueryMultipleValuesA(_In_ HKEY hKey,_Out_ PVALENT val_list,_In_ DWORD num_vals,_Out_opt_ LPTSTR lpValueBuf,_Inout_opt_ LPDWORD ldwTotsize)
BOOL WINAPI kernel32.HeapWalk(_In_ HANDLE hHeap,_Inout_ LPPROCESS_HEAP_ENTRY lpEntry)
LPVOID WINAPI kernel32.CreateFiber(_In_ SIZE_T dwStackSize,_In_ LPFIBER_START_ROUTINE lpStartAddress,_In_opt_ LPVOID lpParameter)
BOOL WINAPI kernel32.RemoveSecureMemoryCacheCallback(_In_ PSECURE_MEMORY_CACHE_CALLBACK pfnCallBack)
BOOL WINAPI kernel32.AttachConsole(_In_ DWORD dwProcessId)
BOOL WINAPI None.IsEnclaveTypeSupported(_In_ DWORD flEnclaveType)
BOOL WINAPI kernel32.SetCommTimeouts(_In_ HANDLE hFile,_In_ LPCOMMTIMEOUTS lpCommTimeouts)
LONG WINAPI advapi32.RegGetValue(_In_ HKEY hkey,_In_opt_ LPCTSTR lpSubKey,_In_opt_ LPCTSTR lpValue,_In_opt_ DWORD dwFlags,_Out_opt_ LPDWORD pdwType,_Out_opt_ PVOID pvData,_Inout_opt_ LPDWORD pcbData)
LONG WINAPI advapi32.RegGetValueW(_In_ HKEY hkey,_In_opt_ LPCTSTR lpSubKey,_In_opt_ LPCTSTR lpValue,_In_opt_ DWORD dwFlags,_Out_opt_ LPDWORD pdwType,_Out_opt_ PVOID pvData,_Inout_opt_ LPDWORD pcbData)
LONG WINAPI advapi32.RegGetValueA(_In_ HKEY hkey,_In_opt_ LPCTSTR lpSubKey,_In_opt_ LPCTSTR lpValue,_In_opt_ DWORD dwFlags,_Out_opt_ LPDWORD pdwType,_Out_opt_ PVOID pvData,_Inout_opt_ LPDWORD pcbData)
VOID CALLBACK None.WaitOrTimerCallback(_In_ PVOID lpParameter,_In_ BOOLEAN TimerOrWaitFired)
BOOL WINAPI kernel32.FlushFileBuffers(_In_ HANDLE hFile)
BOOL WINAPI kernel32.DuplicateHandle(_In_ HANDLE hSourceProcessHandle,_In_ HANDLE hSourceHandle,_In_ HANDLE hTargetProcessHandle,_Out_ LPHANDLE lpTargetHandle,_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ DWORD dwOptions)
BOOL WINAPI kernel32.ReplaceFile(_In_ LPCTSTR lpReplacedFileName,_In_ LPCTSTR lpReplacementFileName,_In_opt_ LPCTSTR lpBackupFileName,_In_ DWORD dwReplaceFlags,_Reserved_ LPVOID lpExclude,_Reserved_ LPVOID lpReserved)
BOOL WINAPI kernel32.ReplaceFileW(_In_ LPCTSTR lpReplacedFileName,_In_ LPCTSTR lpReplacementFileName,_In_opt_ LPCTSTR lpBackupFileName,_In_ DWORD dwReplaceFlags,_Reserved_ LPVOID lpExclude,_Reserved_ LPVOID lpReserved)
BOOL WINAPI kernel32.ReplaceFileA(_In_ LPCTSTR lpReplacedFileName,_In_ LPCTSTR lpReplacementFileName,_In_opt_ LPCTSTR lpBackupFileName,_In_ DWORD dwReplaceFlags,_Reserved_ LPVOID lpExclude,_Reserved_ LPVOID lpReserved)
LONG WINAPI advapi32.RegDeleteValue(_In_ HKEY hKey,_In_opt_ LPCTSTR lpValueName)
LONG WINAPI advapi32.RegDeleteValueW(_In_ HKEY hKey,_In_opt_ LPCTSTR lpValueName)
LONG WINAPI advapi32.RegDeleteValueA(_In_ HKEY hKey,_In_opt_ LPCTSTR lpValueName)
VOID WINAPI kernel32.WakeByAddressAll(_In_ PVOID Address)
BOOL WINAPI kernel32.GetCurrentConsoleFont(_In_ HANDLE hConsoleOutput,_In_ BOOL bMaximumWindow,_Out_ PCONSOLE_FONT_INFO lpConsoleCurrentFont)
BOOL WINAPI kernel32.IsBadWritePtr(_In_ LPVOID lp,_In_ UINT_PTR ucb)
BOOL WINAPI kernel32.DeleteFile(_In_ LPCTSTR lpFileName)
BOOL WINAPI kernel32.DeleteFileW(_In_ LPCTSTR lpFileName)
BOOL WINAPI kernel32.DeleteFileA(_In_ LPCTSTR lpFileName)
DWORD WINAPI advapi32.ReadEncryptedFileRaw(_In_ PFE_EXPORT_FUNC pfExportCallback,_In_opt_ PVOID pvCallbackContext,_In_ PVOID pvContext)
HANDLE WINAPI kernel32.CreateMutexEx(_In_opt_ LPSECURITY_ATTRIBUTES lpMutexAttributes,_In_opt_ LPCTSTR lpName,_In_ DWORD dwFlags,_In_ DWORD dwDesiredAccess)
HANDLE WINAPI kernel32.CreateMutexExW(_In_opt_ LPSECURITY_ATTRIBUTES lpMutexAttributes,_In_opt_ LPCTSTR lpName,_In_ DWORD dwFlags,_In_ DWORD dwDesiredAccess)
HANDLE WINAPI kernel32.CreateMutexExA(_In_opt_ LPSECURITY_ATTRIBUTES lpMutexAttributes,_In_opt_ LPCTSTR lpName,_In_ DWORD dwFlags,_In_ DWORD dwDesiredAccess)
HANDLE WINAPI kernel32.CreateEvent(_In_opt_ LPSECURITY_ATTRIBUTES lpEventAttributes,_In_ BOOL bManualReset,_In_ BOOL bInitialState,_In_opt_ LPCTSTR lpName)
HANDLE WINAPI kernel32.CreateEventW(_In_opt_ LPSECURITY_ATTRIBUTES lpEventAttributes,_In_ BOOL bManualReset,_In_ BOOL bInitialState,_In_opt_ LPCTSTR lpName)
HANDLE WINAPI kernel32.CreateEventA(_In_opt_ LPSECURITY_ATTRIBUTES lpEventAttributes,_In_ BOOL bManualReset,_In_ BOOL bInitialState,_In_opt_ LPCTSTR lpName)
BOOL WINAPI kernel32.InitOnceBeginInitialize(_Inout_ LPINIT_ONCE lpInitOnce,_In_ DWORD dwFlags,_Out_ PBOOL fPending,_Out_opt_ LPVOID *lpContext)
BOOL WINAPI kernel32.PostQueuedCompletionStatus(_In_ HANDLE CompletionPort,_In_ DWORD dwNumberOfBytesTransferred,_In_ ULONG_PTR dwCompletionKey,_In_opt_ LPOVERLAPPED lpOverlapped)
BOOL WINAPI kernel32.UnregisterBadMemoryNotification(_In_ PVOID RegistrationHandle)
BOOLEAN WINAPI kernel32.TryAcquireSRWLockShared(_Inout_ PSRWLOCK SRWLock)
VOID WINAPI None.BadMemoryCallbackRoutine(VOID None None)
LONG WINAPI advapi32.RegLoadKey(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_ LPCTSTR lpFile)
LONG WINAPI advapi32.RegLoadKeyW(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_ LPCTSTR lpFile)
LONG WINAPI advapi32.RegLoadKeyA(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_ LPCTSTR lpFile)
BOOL WINAPI kernel32.InitOnceExecuteOnce(_Inout_ PINIT_ONCE InitOnce,_In_ PINIT_ONCE_FN InitFn,_Inout_opt_ PVOID Parameter,_Out_opt_ LPVOID *Context)
BOOL WINAPI kernel32.CreateDirectory(_In_ LPCTSTR lpPathName,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes)
BOOL WINAPI kernel32.CreateDirectoryW(_In_ LPCTSTR lpPathName,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes)
BOOL WINAPI kernel32.CreateDirectoryA(_In_ LPCTSTR lpPathName,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes)
HANDLE WINAPI kernel32.CreateFileMappingNuma(_In_ HANDLE hFile,_In_opt_ LPSECURITY_ATTRIBUTES lpFileMappingAttributes,_In_ DWORD flProtect,_In_ DWORD dwMaximumSizeHigh,_In_ DWORD dwMaximumSizeLow,_In_opt_ LPCTSTR lpName,_In_ DWORD nndPreferred)
HANDLE WINAPI kernel32.CreateFileMappingNumaW(_In_ HANDLE hFile,_In_opt_ LPSECURITY_ATTRIBUTES lpFileMappingAttributes,_In_ DWORD flProtect,_In_ DWORD dwMaximumSizeHigh,_In_ DWORD dwMaximumSizeLow,_In_opt_ LPCTSTR lpName,_In_ DWORD nndPreferred)
HANDLE WINAPI kernel32.CreateFileMappingNumaA(_In_ HANDLE hFile,_In_opt_ LPSECURITY_ATTRIBUTES lpFileMappingAttributes,_In_ DWORD flProtect,_In_ DWORD dwMaximumSizeHigh,_In_ DWORD dwMaximumSizeLow,_In_opt_ LPCTSTR lpName,_In_ DWORD nndPreferred)
LPVOID WINAPI kernel32.VirtualAllocEx(_In_ HANDLE hProcess,_In_opt_ LPVOID lpAddress,_In_ SIZE_T dwSize,_In_ DWORD flAllocationType,_In_ DWORD flProtect)
HRESULT WINAPI wofutil.WofIsExternalFile(_In_ LPCWSTR FilePath,_Out_opt_ PBOOL IsExternalFile,_Out_opt_ PULONG Provider,_Out_opt_ PVOID ExternalFileInfo,_Inout_opt_ PULONG BufferLength)
LONG WINAPI advapi32.RegDeleteKey(_In_ HKEY hKey,_In_ LPCTSTR lpSubKey)
LONG WINAPI advapi32.RegDeleteKeyW(_In_ HKEY hKey,_In_ LPCTSTR lpSubKey)
LONG WINAPI advapi32.RegDeleteKeyA(_In_ HKEY hKey,_In_ LPCTSTR lpSubKey)
BOOL WINAPI kernel32.SetCurrentConsoleFontEx(_In_ HANDLE hConsoleOutput,_In_ BOOL bMaximumWindow,_In_ PCONSOLE_FONT_INFOEX lpConsoleCurrentFontEx)
BOOL CALLBACK None.InitOnceCallback(_Inout_ PINIT_ONCE InitOnce,_Inout_opt_ PVOID Parameter,_Out_opt_ PVOID *Context)
BOOL WINAPI kernel32.SetFileBandwidthReservation(_In_ HANDLE hFile,_In_ DWORD nPeriodMilliseconds,_In_ DWORD nBytesPerPeriod,_In_ BOOL bDiscardable,_Out_ LPDWORD lpTransferSize,_Out_ LPDWORD lpNumOutstandingRequests)
PVOID WINAPI kernel32.VirtualAllocFromApp(_In_opt_ PVOID BaseAddress,_In_ SIZE_T Size,_In_ ULONG AllocationType,_In_ ULONG Protection)
BOOL WINAPI kernel32.UnlockFileEx(_In_ HANDLE hFile,_Reserved_ DWORD dwReserved,_In_ DWORD nNumberOfBytesToUnlockLow,_In_ DWORD nNumberOfBytesToUnlockHigh,_Inout_ LPOVERLAPPED lpOverlapped)
PVOID WINAPI kernel32.RtlPcToFileHeader(_In_ PVOID PcValue,_Out_ PVOID *BaseOfImage)
HANDLE WINAPI ktmw32.CreateTransaction(_In_opt_ LPSECURITY_ATTRIBUTES lpTransactionAttributes,_In_opt_ LPGUID UOW,_In_opt_ DWORD CreateOptions,_In_opt_ DWORD IsolationLevel,_In_opt_ DWORD IsolationFlags,_In_opt_ DWORD Timeout,_In_opt_ LPWSTR Description)
DWORD WINAPI kernel32.SetFilePointer(_In_ HANDLE hFile,_In_ LONG lDistanceToMove,_Inout_opt_ PLONG lpDistanceToMoveHigh,_In_ DWORD dwMoveMethod)
BOOL WINAPI kernel32.SetFilePointerEx(_In_ HANDLE hFile,_In_ LARGE_INTEGER liDistanceToMove,_Out_opt_ PLARGE_INTEGER lpNewFilePointer,_In_ DWORD dwMoveMethod)
VOID WINAPI kernel32.ReleaseSRWLockShared(_Inout_ PSRWLOCK SRWLock)
BOOL WINAPI kernel32.MoveFileTransacted(_In_ LPCTSTR lpExistingFileName,_In_opt_ LPCTSTR lpNewFileName,_In_opt_ LPPROGRESS_ROUTINE lpProgressRoutine,_In_opt_ LPVOID lpData,_In_ DWORD dwFlags,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.MoveFileTransactedW(_In_ LPCTSTR lpExistingFileName,_In_opt_ LPCTSTR lpNewFileName,_In_opt_ LPPROGRESS_ROUTINE lpProgressRoutine,_In_opt_ LPVOID lpData,_In_ DWORD dwFlags,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.MoveFileTransactedA(_In_ LPCTSTR lpExistingFileName,_In_opt_ LPCTSTR lpNewFileName,_In_opt_ LPPROGRESS_ROUTINE lpProgressRoutine,_In_opt_ LPVOID lpData,_In_ DWORD dwFlags,_In_ HANDLE hTransaction)
VOID WINAPI kernel32.Sleep(_In_ DWORD dwMilliseconds)
PVOID WINAPI kernel32.RegisterBadMemoryNotification(_In_ PBAD_MEMORY_CALLBACK_ROUTINE Callback)
DWORD WINAPI kernel32.GetProfileString(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ LPCTSTR lpDefault,_Out_ LPTSTR lpReturnedString,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetProfileStringW(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ LPCTSTR lpDefault,_Out_ LPTSTR lpReturnedString,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetProfileStringA(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ LPCTSTR lpDefault,_Out_ LPTSTR lpReturnedString,_In_ DWORD nSize)
WNDPROC __stdcall atlthunk.AtlThunk_DataToCode(AtlThunkData_t * None)
BOOL WINAPI kernel32.LockFile(_In_ HANDLE hFile,_In_ DWORD dwFileOffsetLow,_In_ DWORD dwFileOffsetHigh,_In_ DWORD nNumberOfBytesToLockLow,_In_ DWORD nNumberOfBytesToLockHigh)
SIZE_T WINAPI kernel32.HeapSize(_In_ HANDLE hHeap,_In_ DWORD dwFlags,_In_ LPCVOID lpMem)
UINT WINAPI kernel32.SetErrorMode(_In_ UINT uMode)
BOOL WINAPI kernel32.SetSearchPathMode(_In_ DWORD Flags)
LONG WINAPI advapi32.RegRestoreKey(_In_ HKEY hKey,_In_ LPCTSTR lpFile,_In_ DWORD dwFlags)
LONG WINAPI advapi32.RegRestoreKeyW(_In_ HKEY hKey,_In_ LPCTSTR lpFile,_In_ DWORD dwFlags)
LONG WINAPI advapi32.RegRestoreKeyA(_In_ HKEY hKey,_In_ LPCTSTR lpFile,_In_ DWORD dwFlags)
BOOL WINAPI kernel32.QueryProtectedPolicy(_In_ LPCGUID PolicyGuid,_Out_ PULONG_PTR PolicyValue)
VOID WINAPI kernel32.DeleteBoundaryDescriptor(_In_ HANDLE BoundaryDescriptor)
SHORT WINAPI user32.VkKeyScan(_In_ TCHAR ch)
SHORT WINAPI user32.VkKeyScanW(_In_ TCHAR ch)
SHORT WINAPI user32.VkKeyScanA(_In_ TCHAR ch)
BOOL WINAPI kernel32.WriteFileGather(_In_ HANDLE hFile,_In_ FILE_SEGMENT_ELEMENT aSegmentArray[],_In_ DWORD nNumberOfBytesToWrite,_Reserved_ LPDWORD lpReserved,_Inout_ LPOVERLAPPED lpOverlapped)
LONG WINAPI advapi32.RegLoadMUIString(_In_ HKEY hKey,_In_opt_ LPCTSTR pszValue,_Out_opt_ LPTSTR pszOutBuf,_In_ DWORD cbOutBuf,_Out_opt_ LPDWORD pcbData,_In_ DWORD Flags,_In_opt_ LPCTSTR pszDirectory)
LONG WINAPI advapi32.RegLoadMUIStringW(_In_ HKEY hKey,_In_opt_ LPCTSTR pszValue,_Out_opt_ LPTSTR pszOutBuf,_In_ DWORD cbOutBuf,_Out_opt_ LPDWORD pcbData,_In_ DWORD Flags,_In_opt_ LPCTSTR pszDirectory)
LONG WINAPI advapi32.RegLoadMUIStringA(_In_ HKEY hKey,_In_opt_ LPCTSTR pszValue,_Out_opt_ LPTSTR pszOutBuf,_In_ DWORD cbOutBuf,_Out_opt_ LPDWORD pcbData,_In_ DWORD Flags,_In_opt_ LPCTSTR pszDirectory)
BOOL WINAPI kernel32.GetMemoryErrorHandlingCapabilities(_Out_ PULONG Capabilities)
BOOL WINAPI kernel32.Wow64DisableWow64FsRedirection(_Out_ PVOID *OldValue)
HRESULT WINAPI wofutil.WofWimEnumFiles(_In_ PCWSTR VolumeName,_In_ LARGE_INTEGER DataSourceId,_In_ WofEnumFilesProc EnumProc,_In_opt_ PVOID UserData)
BOOL WINAPI kernel32.GetCurrentConsoleFontEx(_In_ HANDLE hConsoleOutput,_In_ BOOL bMaximumWindow,_Out_ PCONSOLE_FONT_INFOEX lpConsoleCurrentFontEx)
DWORD WINAPI advapi32.WriteEncryptedFileRaw(_In_ PFE_IMPORT_FUNC pfImportCallback,_In_opt_ PVOID pvCallbackContext,_In_ PVOID pvContext)
BOOL WINAPI kernel32.DeleteFile(_In_ LPCTSTR lpFileName)
BOOL WINAPI kernel32.DeleteFileW(_In_ LPCTSTR lpFileName)
BOOL WINAPI kernel32.DeleteFileA(_In_ LPCTSTR lpFileName)
LONG WINAPI advapi32.RegCreateKeyEx(_In_ HKEY hKey,_In_ LPCTSTR lpSubKey,_Reserved_ DWORD Reserved,_In_opt_ LPTSTR lpClass,_In_ DWORD dwOptions,_In_ REGSAM samDesired,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_Out_ PHKEY phkResult,_Out_opt_ LPDWORD lpdwDisposition)
LONG WINAPI advapi32.RegCreateKeyExW(_In_ HKEY hKey,_In_ LPCTSTR lpSubKey,_Reserved_ DWORD Reserved,_In_opt_ LPTSTR lpClass,_In_ DWORD dwOptions,_In_ REGSAM samDesired,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_Out_ PHKEY phkResult,_Out_opt_ LPDWORD lpdwDisposition)
LONG WINAPI advapi32.RegCreateKeyExA(_In_ HKEY hKey,_In_ LPCTSTR lpSubKey,_Reserved_ DWORD Reserved,_In_opt_ LPTSTR lpClass,_In_ DWORD dwOptions,_In_ REGSAM samDesired,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_Out_ PHKEY phkResult,_Out_opt_ LPDWORD lpdwDisposition)
BOOL WINAPI kernel32.CancelIo(_In_ HANDLE hFile)
UINT WINAPI kernel32.GetWriteWatch(_In_ DWORD dwFlags,_In_ PVOID lpBaseAddress,_In_ SIZE_T dwRegionSize,_Out_ PVOID *lpAddresses,_Inout_ PULONG_PTR lpdwCount,_Out_ PULONG lpdwGranularity)
BOOL WINAPI kernel32.ReadConsoleOutputCharacter(_In_ HANDLE hConsoleOutput,_Out_ LPTSTR lpCharacter,_In_ DWORD nLength,_In_ COORD dwReadCoord,_Out_ LPDWORD lpNumberOfCharsRead)
BOOL WINAPI kernel32.ReadConsoleOutputCharacterW(_In_ HANDLE hConsoleOutput,_Out_ LPTSTR lpCharacter,_In_ DWORD nLength,_In_ COORD dwReadCoord,_Out_ LPDWORD lpNumberOfCharsRead)
BOOL WINAPI kernel32.ReadConsoleOutputCharacterA(_In_ HANDLE hConsoleOutput,_Out_ LPTSTR lpCharacter,_In_ DWORD nLength,_In_ COORD dwReadCoord,_Out_ LPDWORD lpNumberOfCharsRead)
DWORD WINAPI kernel32.GetProfileString(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ LPCTSTR lpDefault,_Out_ LPTSTR lpReturnedString,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetProfileStringW(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ LPCTSTR lpDefault,_Out_ LPTSTR lpReturnedString,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetProfileStringA(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ LPCTSTR lpDefault,_Out_ LPTSTR lpReturnedString,_In_ DWORD nSize)
LPVOID WINAPI kernel32.HeapAlloc(_In_ HANDLE hHeap,_In_ DWORD dwFlags,_In_ SIZE_T dwBytes)
LONG WINAPI advapi32.RegSetKeyValue(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_opt_ LPCTSTR lpValueName,_In_ DWORD dwType,_In_opt_ LPCVOID lpData,_In_ DWORD cbData)
LONG WINAPI advapi32.RegSetKeyValueW(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_opt_ LPCTSTR lpValueName,_In_ DWORD dwType,_In_opt_ LPCVOID lpData,_In_ DWORD cbData)
LONG WINAPI advapi32.RegSetKeyValueA(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_opt_ LPCTSTR lpValueName,_In_ DWORD dwType,_In_opt_ LPCVOID lpData,_In_ DWORD cbData)
BOOL WINAPI kernel32.GetBinaryType(_In_ LPCTSTR lpApplicationName,_Out_ LPDWORD lpBinaryType)
BOOL WINAPI kernel32.GetBinaryTypeW(_In_ LPCTSTR lpApplicationName,_Out_ LPDWORD lpBinaryType)
BOOL WINAPI kernel32.GetBinaryTypeA(_In_ LPCTSTR lpApplicationName,_Out_ LPDWORD lpBinaryType)
SIZE_T WINAPI kernel32.VirtualQuery(_In_opt_ LPCVOID lpAddress,_Out_ PMEMORY_BASIC_INFORMATION lpBuffer,_In_ SIZE_T dwLength)
HANDLE WINAPI kernel32.OpenMutex(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpName)
HANDLE WINAPI kernel32.OpenMutexW(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpName)
HANDLE WINAPI kernel32.OpenMutexA(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpName)
BOOL WINAPI kernel32.GetConsoleHistoryInfo(_Out_ PCONSOLE_HISTORY_INFO lpConsoleHistoryInfo)
BOOL WINAPI kernel32.WriteConsoleOutputCharacter(_In_ HANDLE hConsoleOutput,_In_ LPCTSTR lpCharacter,_In_ DWORD nLength,_In_ COORD dwWriteCoord,_Out_ LPDWORD lpNumberOfCharsWritten)
BOOL WINAPI kernel32.WriteConsoleOutputCharacterW(_In_ HANDLE hConsoleOutput,_In_ LPCTSTR lpCharacter,_In_ DWORD nLength,_In_ COORD dwWriteCoord,_Out_ LPDWORD lpNumberOfCharsWritten)
BOOL WINAPI kernel32.WriteConsoleOutputCharacterA(_In_ HANDLE hConsoleOutput,_In_ LPCTSTR lpCharacter,_In_ DWORD nLength,_In_ COORD dwWriteCoord,_Out_ LPDWORD lpNumberOfCharsWritten)
BOOL WINAPI kernel32.ReadFile(_In_ HANDLE hFile,_Out_ LPVOID lpBuffer,_In_ DWORD nNumberOfBytesToRead,_Out_opt_ LPDWORD lpNumberOfBytesRead,_Inout_opt_ LPOVERLAPPED lpOverlapped)
HGLOBAL WINAPI kernel32.GlobalAlloc(_In_ UINT uFlags,_In_ SIZE_T dwBytes)
DWORD WINAPI kernel32.GetConsoleAliases(_Out_ LPTSTR lpAliasBuffer,_In_ DWORD AliasBufferLength,_In_ LPTSTR lpExeName)
DWORD WINAPI kernel32.GetConsoleAliasesW(_Out_ LPTSTR lpAliasBuffer,_In_ DWORD AliasBufferLength,_In_ LPTSTR lpExeName)
DWORD WINAPI kernel32.GetConsoleAliasesA(_Out_ LPTSTR lpAliasBuffer,_In_ DWORD AliasBufferLength,_In_ LPTSTR lpExeName)
BOOL WINAPI advapi32.EncryptionDisable(_In_ LPCWSTR DirPath,_In_ BOOL Disable)
VOID WINAPI kernel32.WakeByAddressAll(_In_ PVOID Address)
BOOL WINAPI kernel32.GetConsoleMode(_In_ HANDLE hConsoleHandle,_Out_ LPDWORD lpMode)
BOOL WINAPI user32.AttachThreadInput(_In_ DWORD idAttach,_In_ DWORD idAttachTo,_In_ BOOL fAttach)
HANDLE WINAPI kernel32.CreateFileMappingFromApp(_In_ HANDLE hFile,_In_opt_ PSECURITY_ATTRIBUTES SecurityAttributes,_In_ ULONG PageProtection,_In_ ULONG64 MaximumSize,_In_opt_ PCWSTR Name)
DWORD WINAPI kernel32.GetProfileString(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ LPCTSTR lpDefault,_Out_ LPTSTR lpReturnedString,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetProfileStringW(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ LPCTSTR lpDefault,_Out_ LPTSTR lpReturnedString,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetProfileStringA(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ LPCTSTR lpDefault,_Out_ LPTSTR lpReturnedString,_In_ DWORD nSize)
BOOL WINAPI kernel32.DeleteFileTransacted(_In_ LPCTSTR lpFileName,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.DeleteFileTransactedW(_In_ LPCTSTR lpFileName,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.DeleteFileTransactedA(_In_ LPCTSTR lpFileName,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.VirtualProtectEx(_In_ HANDLE hProcess,_In_ LPVOID lpAddress,_In_ SIZE_T dwSize,_In_ DWORD flNewProtect,_Out_ PDWORD lpflOldProtect)
UINT WINAPI kernel32.LocalFlags(_In_ HLOCAL hMem)
BOOL WINAPI kernel32.AttachConsole(_In_ DWORD dwProcessId)
BOOL WINAPI kernel32.GetPrivateProfileStruct(_In_ LPCTSTR lpszSection,_In_ LPCTSTR lpszKey,_Out_ LPVOID lpStruct,_In_ UINT uSizeStruct,_In_ LPCTSTR szFile)
BOOL WINAPI kernel32.GetPrivateProfileStructW(_In_ LPCTSTR lpszSection,_In_ LPCTSTR lpszKey,_Out_ LPVOID lpStruct,_In_ UINT uSizeStruct,_In_ LPCTSTR szFile)
BOOL WINAPI kernel32.GetPrivateProfileStructA(_In_ LPCTSTR lpszSection,_In_ LPCTSTR lpszKey,_Out_ LPVOID lpStruct,_In_ UINT uSizeStruct,_In_ LPCTSTR szFile)
DWORD WINAPI kernel32.GetConsoleAliasesLength(_In_ LPTSTR lpExeName)
DWORD WINAPI kernel32.GetConsoleAliasesLengthW(_In_ LPTSTR lpExeName)
DWORD WINAPI kernel32.GetConsoleAliasesLengthA(_In_ LPTSTR lpExeName)
UINT WINAPI kernel32.GlobalFlags(_In_ HGLOBAL hMem)
BOOL WINAPI kernel32.SetProcessShutdownParameters(_In_ DWORD dwLevel,_In_ DWORD dwFlags)
BOOL WINAPI kernel32.QueryWorkingSetEx(_In_ HANDLE hProcess,_Inout_ PVOID pv,_In_ DWORD cb)
BOOL WINAPI kernel32.SetEvent(_In_ HANDLE hEvent)
BOOL WINAPI kernel32.UnmapViewOfFileEx(_In_ LPCVOID lpBaseAddress,_In_ DWORD UnmapFlags)
LONG WINAPI advapi32.RegQueryValueEx(_In_ HKEY hKey,_In_opt_ LPCTSTR lpValueName,_Reserved_ LPDWORD lpReserved,_Out_opt_ LPDWORD lpType,_Out_opt_ LPBYTE lpData,_Inout_opt_ LPDWORD lpcbData)
LONG WINAPI advapi32.RegQueryValueExW(_In_ HKEY hKey,_In_opt_ LPCTSTR lpValueName,_Reserved_ LPDWORD lpReserved,_Out_opt_ LPDWORD lpType,_Out_opt_ LPBYTE lpData,_Inout_opt_ LPDWORD lpcbData)
LONG WINAPI advapi32.RegQueryValueExA(_In_ HKEY hKey,_In_opt_ LPCTSTR lpValueName,_Reserved_ LPDWORD lpReserved,_Out_opt_ LPDWORD lpType,_Out_opt_ LPBYTE lpData,_Inout_opt_ LPDWORD lpcbData)
USHORT WINAPI kernel32.QueryDepthSList(_In_ PSLIST_HEADER ListHead)
HLOCAL WINAPI kernel32.LocalFree(_In_ HLOCAL hMem)
LONG WINAPI advapi32.RegQueryMultipleValues(_In_ HKEY hKey,_Out_ PVALENT val_list,_In_ DWORD num_vals,_Out_opt_ LPTSTR lpValueBuf,_Inout_opt_ LPDWORD ldwTotsize)
LONG WINAPI advapi32.RegQueryMultipleValuesW(_In_ HKEY hKey,_Out_ PVALENT val_list,_In_ DWORD num_vals,_Out_opt_ LPTSTR lpValueBuf,_Inout_opt_ LPDWORD ldwTotsize)
LONG WINAPI advapi32.RegQueryMultipleValuesA(_In_ HKEY hKey,_Out_ PVALENT val_list,_In_ DWORD num_vals,_Out_opt_ LPTSTR lpValueBuf,_Inout_opt_ LPDWORD ldwTotsize)
VOID WINAPI kernel32.GetSystemTimePreciseAsFileTime(_Out_ LPFILETIME lpSystemTimeAsFileTime)
VOID WINAPI kernel32.InitOnceInitialize(_Out_ PINIT_ONCE InitOnce)
HANDLE WINAPI kernel32.CreateBoundaryDescriptor(_In_ LPCTSTR Name,_In_ ULONG Flags)
HANDLE WINAPI kernel32.CreateBoundaryDescriptorW(_In_ LPCTSTR Name,_In_ ULONG Flags)
HANDLE WINAPI kernel32.CreateBoundaryDescriptorA(_In_ LPCTSTR Name,_In_ ULONG Flags)
VOID CALLBACK None.WaitOrTimerCallback(_In_ PVOID lpParameter,_In_ BOOLEAN TimerOrWaitFired)
LONG WINAPI advapi32.RegOpenKey(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_Out_ PHKEY phkResult)
LONG WINAPI advapi32.RegOpenKeyW(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_Out_ PHKEY phkResult)
LONG WINAPI advapi32.RegOpenKeyA(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_Out_ PHKEY phkResult)
BOOL WINAPI kernel32.AddConsoleAlias(_In_ LPCTSTR Source,_In_ LPCTSTR Target,_In_ LPCTSTR ExeName)
BOOL WINAPI kernel32.AddConsoleAliasW(_In_ LPCTSTR Source,_In_ LPCTSTR Target,_In_ LPCTSTR ExeName)
BOOL WINAPI kernel32.AddConsoleAliasA(_In_ LPCTSTR Source,_In_ LPCTSTR Target,_In_ LPCTSTR ExeName)
BOOL WINAPI kernel32.SetConsoleScreenBufferInfoEx(_In_ HANDLE hConsoleOutput,_In_ PCONSOLE_SCREEN_BUFFER_INFOEX lpConsoleScreenBufferInfoEx)
BOOL WINAPI advapi32.FileEncryptionStatus(_In_ LPCTSTR lpFileName,_Out_ LPDWORD lpStatus)
BOOL WINAPI advapi32.FileEncryptionStatusW(_In_ LPCTSTR lpFileName,_Out_ LPDWORD lpStatus)
BOOL WINAPI advapi32.FileEncryptionStatusA(_In_ LPCTSTR lpFileName,_Out_ LPDWORD lpStatus)
BOOLEAN CALLBACK None.SecureMemoryCacheCallback(_In_ PVOID Addr,_In_ SIZE_T Range)
HGLOBAL WINAPI kernel32.GlobalAlloc(_In_ UINT uFlags,_In_ SIZE_T dwBytes)
DWORD WINAPI kernel32.GetConsoleAliases(_Out_ LPTSTR lpAliasBuffer,_In_ DWORD AliasBufferLength,_In_ LPTSTR lpExeName)
DWORD WINAPI kernel32.GetConsoleAliasesW(_Out_ LPTSTR lpAliasBuffer,_In_ DWORD AliasBufferLength,_In_ LPTSTR lpExeName)
DWORD WINAPI kernel32.GetConsoleAliasesA(_Out_ LPTSTR lpAliasBuffer,_In_ DWORD AliasBufferLength,_In_ LPTSTR lpExeName)
BOOL WINAPI kernel32.ReleaseMutex(_In_ HANDLE hMutex)
PSLIST_ENTRY WINAPI kernel32.InterlockedFlushSList(_Inout_ PSLIST_HEADER ListHead)
HGLOBAL WINAPI kernel32.GlobalFree(_In_ HGLOBAL hMem)
BOOL WINAPI kernel32.FillConsoleOutputCharacter(_In_ HANDLE hConsoleOutput,_In_ TCHAR cCharacter,_In_ DWORD nLength,_In_ COORD dwWriteCoord,_Out_ LPDWORD lpNumberOfCharsWritten)
BOOL WINAPI kernel32.FillConsoleOutputCharacterW(_In_ HANDLE hConsoleOutput,_In_ TCHAR cCharacter,_In_ DWORD nLength,_In_ COORD dwWriteCoord,_Out_ LPDWORD lpNumberOfCharsWritten)
BOOL WINAPI kernel32.FillConsoleOutputCharacterA(_In_ HANDLE hConsoleOutput,_In_ TCHAR cCharacter,_In_ DWORD nLength,_In_ COORD dwWriteCoord,_Out_ LPDWORD lpNumberOfCharsWritten)
PSLIST_ENTRY WINAPI ntdll.RtlInterlockedPopEntrySList(_In_ PSLIST_HEADER ListHead)
BOOL WINAPI kernel32.VirtualProtectEx(_In_ HANDLE hProcess,_In_ LPVOID lpAddress,_In_ SIZE_T dwSize,_In_ DWORD flNewProtect,_Out_ PDWORD lpflOldProtect)
LONG WINAPI advapi32.RegQueryValue(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_Out_opt_ LPTSTR lpValue,_Inout_opt_ PLONG lpcbValue)
LONG WINAPI advapi32.RegQueryValueW(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_Out_opt_ LPTSTR lpValue,_Inout_opt_ PLONG lpcbValue)
LONG WINAPI advapi32.RegQueryValueA(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_Out_opt_ LPTSTR lpValue,_Inout_opt_ PLONG lpcbValue)
PVOID WINAPI None.CreateEnclave(_In_ HANDLE hProcess,_In_opt_ LPVOID lpAddress,_In_ SIZE_T dwSize,_In_ SIZE_T dwInitialCommittment,_In_ DWORD flEnclaveType,_In_ LPCVOID lpEnclaveInformation,_In_ DWORD dwInfoLength,_Out_opt_ LPDWORD lpEnclaveError)
LPVOID WINAPI kernel32.MapViewOfFileExNuma(_In_ HANDLE hFileMappingObject,_In_ DWORD dwDesiredAccess,_In_ DWORD dwFileOffsetHigh,_In_ DWORD dwFileOffsetLow,_In_ SIZE_T dwNumberOfBytesToMap,_In_opt_ LPVOID lpBaseAddress,_In_ DWORD nndPreferred)
BOOL WINAPI kernel32.FlushInstructionCache(_In_ HANDLE hProcess,_In_ LPCVOID lpBaseAddress,_In_ SIZE_T dwSize)
BOOL WINAPI ktmw32.RecoverEnlistment(_In_ HANDLE EnlistmentHandle,_In_opt_ PVOID EnlistmentKey)
BOOL WINAPI kernel32.GetNumberOfConsoleMouseButtons(_Out_ LPDWORD lpNumberOfMouseButtons)
BOOL WINAPI kernel32.PulseEvent(_In_ HANDLE hEvent)
LONG WINAPI advapi32.RegDeleteKeyEx(_In_ HKEY hKey,_In_ LPCTSTR lpSubKey,_In_ REGSAM samDesired,_Reserved_ DWORD Reserved)
LONG WINAPI advapi32.RegDeleteKeyExW(_In_ HKEY hKey,_In_ LPCTSTR lpSubKey,_In_ REGSAM samDesired,_Reserved_ DWORD Reserved)
LONG WINAPI advapi32.RegDeleteKeyExA(_In_ HKEY hKey,_In_ LPCTSTR lpSubKey,_In_ REGSAM samDesired,_Reserved_ DWORD Reserved)
BOOL WINAPI kernel32.VirtualUnlock(_In_ LPVOID lpAddress,_In_ SIZE_T dwSize)
PSLIST_ENTRY WINAPI ntdll.RtlInterlockedFlushSList(_In_ PSLIST_HEADER ListHead)
BOOL WINAPI kernel32.VirtualProtectFromApp(_In_ PVOID Address,_In_ SIZE_T Size,_In_ ULONG NewProtection,_Out_ PULONG OldProtection)
BOOL WINAPI kernel32.FillConsoleOutputAttribute(_In_ HANDLE hConsoleOutput,_In_ WORD wAttribute,_In_ DWORD nLength,_In_ COORD dwWriteCoord,_Out_ LPDWORD lpNumberOfAttrsWritten)
HGLOBAL WINAPI kernel32.GlobalHandle(_In_ LPCVOID pMem)
SIZE_T WINAPI kernel32.HeapCompact(_In_ HANDLE hHeap,_In_ DWORD dwFlags)
BOOL WINAPI kernel32.DeleteTimerQueueTimer(_In_opt_ HANDLE TimerQueue,_In_ HANDLE Timer,_In_opt_ HANDLE CompletionEvent)
UINT WINAPI kernel32.GetSystemWow64Directory(_Out_ LPTSTR lpBuffer,_In_ UINT uSize)
UINT WINAPI kernel32.GetSystemWow64DirectoryW(_Out_ LPTSTR lpBuffer,_In_ UINT uSize)
UINT WINAPI kernel32.GetSystemWow64DirectoryA(_Out_ LPTSTR lpBuffer,_In_ UINT uSize)
BOOL WINAPI kernel32.CancelWaitableTimer(_In_ HANDLE hTimer)
BOOL WINAPI kernel32.FlushConsoleInputBuffer(_In_ HANDLE hConsoleInput)
VOID WINAPI kernel32.ReleaseSRWLockExclusive(_Inout_ PSRWLOCK SRWLock)
UINT WINAPI kernel32.LocalSize(_In_ HLOCAL hMem)
BOOL WINAPI kernel32.GetConsoleCursorInfo(_In_ HANDLE hConsoleOutput,_Out_ PCONSOLE_CURSOR_INFO lpConsoleCursorInfo)
HANDLE WINAPI kernel32.GetStdHandle(_In_ DWORD nStdHandle)
BOOL WINAPI kernel32.AddIntegrityLabelToBoundaryDescriptor(_Inout_ HANDLE *BoundaryDescriptor,_In_ PSID IntegrityLabel)
DWORD WINAPI kernel32.GetConsoleOriginalTitle(_Out_ LPTSTR lpConsoleTitle,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetConsoleOriginalTitleW(_Out_ LPTSTR lpConsoleTitle,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetConsoleOriginalTitleA(_Out_ LPTSTR lpConsoleTitle,_In_ DWORD nSize)
BOOL WINAPI kernel32.VirtualProtect(_In_ LPVOID lpAddress,_In_ SIZE_T dwSize,_In_ DWORD flNewProtect,_Out_ PDWORD lpflOldProtect)
BOOL WINAPI kernel32.SetCommTimeouts(_In_ HANDLE hFile,_In_ LPCOMMTIMEOUTS lpCommTimeouts)
BOOL WINAPI kernel32.HeapSetInformation(_In_opt_ HANDLE HeapHandle,_In_ HEAP_INFORMATION_CLASS HeapInformationClass,_In_ PVOID HeapInformation,_In_ SIZE_T HeapInformationLength)
LONG WINAPI advapi32.RegDeleteTree(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey)
LONG WINAPI advapi32.RegDeleteTreeW(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey)
LONG WINAPI advapi32.RegDeleteTreeA(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey)
VOID WINAPI kernel32.WakeByAddressAll(_In_ PVOID Address)
BOOL WINAPI kernel32.HeapDestroy(_In_ HANDLE hHeap)
BOOL WINAPI kernel32.AddSecureMemoryCacheCallback(_In_ PSECURE_MEMORY_CACHE_CALLBACK pfnCallBack)
LONG WINAPI advapi32.RegOpenKeyEx(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_ DWORD ulOptions,_In_ REGSAM samDesired,_Out_ PHKEY phkResult)
LONG WINAPI advapi32.RegOpenKeyExW(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_ DWORD ulOptions,_In_ REGSAM samDesired,_Out_ PHKEY phkResult)
LONG WINAPI advapi32.RegOpenKeyExA(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_ DWORD ulOptions,_In_ REGSAM samDesired,_Out_ PHKEY phkResult)
BOOL WINAPI kernel32.FreeUserPhysicalPages(_In_ HANDLE hProcess,_Inout_ PULONG_PTR NumberOfPages,_In_ PULONG_PTR UserPfnArray)
HANDLE WINAPI kernel32.CreateMailslot(_In_ LPCTSTR lpName,_In_ DWORD nMaxMessageSize,_In_ DWORD lReadTimeout,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes)
HANDLE WINAPI kernel32.CreateMailslotW(_In_ LPCTSTR lpName,_In_ DWORD nMaxMessageSize,_In_ DWORD lReadTimeout,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes)
HANDLE WINAPI kernel32.CreateMailslotA(_In_ LPCTSTR lpName,_In_ DWORD nMaxMessageSize,_In_ DWORD lReadTimeout,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes)
LONG WINAPI advapi32.RegOverridePredefKey(_In_ HKEY hKey,_In_opt_ HKEY hNewHKey)
UINT WINAPI user32.MapVirtualKeyEx(_In_ UINT uCode,_In_ UINT uMapType,_Inout_opt_ HKL dwhkl)
UINT WINAPI user32.MapVirtualKeyExW(_In_ UINT uCode,_In_ UINT uMapType,_Inout_opt_ HKL dwhkl)
UINT WINAPI user32.MapVirtualKeyExA(_In_ UINT uCode,_In_ UINT uMapType,_Inout_opt_ HKL dwhkl)
BOOL WINAPI kernel32.GetCurrentConsoleFont(_In_ HANDLE hConsoleOutput,_In_ BOOL bMaximumWindow,_Out_ PCONSOLE_FONT_INFO lpConsoleCurrentFont)
BOOL WINAPI kernel32.SetConsoleScreenBufferInfoEx(_In_ HANDLE hConsoleOutput,_In_ PCONSOLE_SCREEN_BUFFER_INFOEX lpConsoleScreenBufferInfoEx)
BOOL WINAPI kernel32.SetProcessDEPPolicy(_In_ DWORD dwFlags)
DWORD WINAPI kernel32.GetConsoleAlias(_In_ LPTSTR lpSource,_Out_ LPTSTR lpTargetBuffer,_In_ DWORD TargetBufferLength,_In_ LPTSTR lpExeName)
DWORD WINAPI kernel32.GetConsoleAliasW(_In_ LPTSTR lpSource,_Out_ LPTSTR lpTargetBuffer,_In_ DWORD TargetBufferLength,_In_ LPTSTR lpExeName)
DWORD WINAPI kernel32.GetConsoleAliasA(_In_ LPTSTR lpSource,_Out_ LPTSTR lpTargetBuffer,_In_ DWORD TargetBufferLength,_In_ LPTSTR lpExeName)
HANDLE WINAPI kernel32.CreateMemoryResourceNotification(_In_ MEMORY_RESOURCE_NOTIFICATION_TYPE NotificationType)
VOID WINAPI kernel32.AcquireSRWLockShared(_Inout_ PSRWLOCK SRWLock)
BOOL WINAPI kernel32.InitializeSynchronizationBarrier(_Out_ LPSYNCHRONIZATION_BARRIER lpBarrier,_In_ LONG lTotalThreads,_In_ LONG lSpinCount)
BOOL WINAPI kernel32.MapUserPhysicalPagesScatter(_In_ PVOID *VirtualAddresses,_In_ ULONG_PTR NumberOfPages,_In_ PULONG_PTR PageArray)
BOOL WINAPI kernel32.SetConsoleCursorPosition(_In_ HANDLE hConsoleOutput,_In_ COORD dwCursorPosition)
VOID WINAPI kernel32.InitializeConditionVariable(_Out_ PCONDITION_VARIABLE ConditionVariable)
LONG WINAPI advapi32.RegDisableReflectionKey(_In_ HKEY hBase)
HGLOBAL WINAPI kernel32.GlobalReAlloc(_In_ HGLOBAL hMem,_In_ SIZE_T dwBytes,_In_ UINT uFlags)
BOOL WINAPI kernel32.VirtualFree(_In_ LPVOID lpAddress,_In_ SIZE_T dwSize,_In_ DWORD dwFreeType)
HANDLE WINAPI kernel32.CreateWaitableTimerEx(_In_opt_ LPSECURITY_ATTRIBUTES lpTimerAttributes,_In_opt_ LPCTSTR lpTimerName,_In_ DWORD dwFlags,_In_ DWORD dwDesiredAccess)
HANDLE WINAPI kernel32.CreateWaitableTimerExW(_In_opt_ LPSECURITY_ATTRIBUTES lpTimerAttributes,_In_opt_ LPCTSTR lpTimerName,_In_ DWORD dwFlags,_In_ DWORD dwDesiredAccess)
HANDLE WINAPI kernel32.CreateWaitableTimerExA(_In_opt_ LPSECURITY_ATTRIBUTES lpTimerAttributes,_In_opt_ LPCTSTR lpTimerName,_In_ DWORD dwFlags,_In_ DWORD dwDesiredAccess)
BOOL WINAPI kernel32.IsBadStringPtr(_In_ LPCTSTR lpsz,_In_ UINT_PTR ucchMax)
BOOL WINAPI kernel32.IsBadStringPtrW(_In_ LPCTSTR lpsz,_In_ UINT_PTR ucchMax)
BOOL WINAPI kernel32.IsBadStringPtrA(_In_ LPCTSTR lpsz,_In_ UINT_PTR ucchMax)
BOOL WINAPI kernel32.VirtualFreeEx(_In_ HANDLE hProcess,_In_ LPVOID lpAddress,_In_ SIZE_T dwSize,_In_ DWORD dwFreeType)
BOOL WINAPI kernel32.AllocateUserPhysicalPagesNuma(_In_ HANDLE hProcess,_Inout_ PULONG_PTR NumberOfPages,_Out_ PULONG_PTR PageArray,_In_ DWORD nndPreferred)
BOOL WINAPI kernel32.GetNumberOfConsoleInputEvents(_In_ HANDLE hConsoleInput,_Out_ LPDWORD lpcNumberOfEvents)
DWORD WINAPI kernel32.GetConsoleProcessList(_Out_ LPDWORD lpdwProcessList,_In_ DWORD dwProcessCount)
BOOL WINAPI kernel32.ReleaseMutex(_In_ HANDLE hMutex)
BOOL WINAPI kernel32.InitializeCriticalSectionEx(_Out_ LPCRITICAL_SECTION lpCriticalSection,_In_ DWORD dwSpinCount,_In_ DWORD Flags)
BOOL WINAPI kernel32.ReadConsoleOutputAttribute(_In_ HANDLE hConsoleOutput,_Out_ LPWORD lpAttribute,_In_ DWORD nLength,_In_ COORD dwReadCoord,_Out_ LPDWORD lpNumberOfAttrsRead)
SIZE_T WINAPI kernel32.VirtualQueryEx(_In_ HANDLE hProcess,_In_opt_ LPCVOID lpAddress,_Out_ PMEMORY_BASIC_INFORMATION lpBuffer,_In_ SIZE_T dwLength)
BOOL WINAPI kernel32.GetNumaProcessorNode(_In_ UCHAR Processor,_Out_ PUCHAR NodeNumber)
HANDLE WINAPI kernel32.OpenFileMapping(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpName)
HANDLE WINAPI kernel32.OpenFileMappingW(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpName)
HANDLE WINAPI kernel32.OpenFileMappingA(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpName)
BOOL WINAPI kernel32.GetThreadTimes(_In_ HANDLE hThread,_Out_ LPFILETIME lpCreationTime,_Out_ LPFILETIME lpExitTime,_Out_ LPFILETIME lpKernelTime,_Out_ LPFILETIME lpUserTime)
BOOLEAN CALLBACK None.SecureMemoryCacheCallback(_In_ PVOID Addr,_In_ SIZE_T Range)
BOOL WINAPI kernel32.GlobalMemoryStatusEx(_Inout_ LPMEMORYSTATUSEX lpBuffer)
BOOL WINAPI kernel32.DeleteTimerQueueEx(_In_ HANDLE TimerQueue,_In_opt_ HANDLE CompletionEvent)
BOOL WINAPI kernel32.GetConsoleScreenBufferInfo(_In_ HANDLE hConsoleOutput,_Out_ PCONSOLE_SCREEN_BUFFER_INFO lpConsoleScreenBufferInfo)
BOOL WINAPI kernel32.ResetEvent(_In_ HANDLE hEvent)
BOOL WINAPI kernel32.SetConsoleMode(_In_ HANDLE hConsoleHandle,_In_ DWORD dwMode)
BOOL WINAPI kernel32.UnregisterWaitEx(_In_ HANDLE WaitHandle,_In_opt_ HANDLE CompletionEvent)
HANDLE WINAPI kernel32.CreatePrivateNamespace(_In_opt_ LPSECURITY_ATTRIBUTES lpPrivateNamespaceAttributes,_In_ LPVOID lpBoundaryDescriptor,_In_ LPCTSTR lpAliasPrefix)
HANDLE WINAPI kernel32.CreatePrivateNamespaceW(_In_opt_ LPSECURITY_ATTRIBUTES lpPrivateNamespaceAttributes,_In_ LPVOID lpBoundaryDescriptor,_In_ LPCTSTR lpAliasPrefix)
HANDLE WINAPI kernel32.CreatePrivateNamespaceA(_In_opt_ LPSECURITY_ATTRIBUTES lpPrivateNamespaceAttributes,_In_ LPVOID lpBoundaryDescriptor,_In_ LPCTSTR lpAliasPrefix)
HANDLE WINAPI kernel32.OpenPrivateNamespace(_In_ LPVOID lpBoundaryDescriptor,_In_ LPCTSTR lpAliasPrefix)
HANDLE WINAPI kernel32.OpenPrivateNamespaceW(_In_ LPVOID lpBoundaryDescriptor,_In_ LPCTSTR lpAliasPrefix)
HANDLE WINAPI kernel32.OpenPrivateNamespaceA(_In_ LPVOID lpBoundaryDescriptor,_In_ LPCTSTR lpAliasPrefix)
VOID WINAPI kernel32.InitializeSRWLock(_Out_ PSRWLOCK SRWLock)
VOID CALLBACK None.APCProc(_In_ ULONG_PTR dwParam)
BOOLEAN WINAPI kernel32.ClosePrivateNamespace(_In_ HANDLE Handle,_In_ ULONG Flags)
BOOL WINAPI kernel32.SetConsoleHistoryInfo(_In_ PCONSOLE_HISTORY_INFO lpConsoleHistoryInfo)
BOOL WINAPI kernel32.GetThreadSelectedCpuSets(_In_ HANDLE Thread,_Out_opt_ PULONG CpuSetIds,_In_ ULONG CpuSetIdCount,_Out_ PULONG RequiredIdCount)
BOOL WINAPI kernel32.UnregisterWait(_In_ HANDLE WaitHandle)
DWORD WINAPI kernel32.SetCriticalSectionSpinCount(_Inout_ LPCRITICAL_SECTION lpCriticalSection,_In_ DWORD dwSpinCount)
DWORD WINAPI kernel32.WaitForSingleObject(_In_ HANDLE hHandle,_In_ DWORD dwMilliseconds)
LPVOID WINAPI kernel32.MapViewOfFileExNuma(_In_ HANDLE hFileMappingObject,_In_ DWORD dwDesiredAccess,_In_ DWORD dwFileOffsetHigh,_In_ DWORD dwFileOffsetLow,_In_ SIZE_T dwNumberOfBytesToMap,_In_opt_ LPVOID lpBaseAddress,_In_ DWORD nndPreferred)
BOOL WINAPI kernel32.SetConsoleDisplayMode(_In_ HANDLE hConsoleOutput,_In_ DWORD dwFlags,_Out_opt_ PCOORD lpNewScreenBufferDimensions)
BOOL WINAPI ktmw32.GetEnlistmentId(_In_ HANDLE EnlistmentHandle,_Out_ LPGUID EnlistmentId)
HANDLE WINAPI kernel32.CreateFileMapping(_In_ HANDLE hFile,_In_opt_ LPSECURITY_ATTRIBUTES lpAttributes,_In_ DWORD flProtect,_In_ DWORD dwMaximumSizeHigh,_In_ DWORD dwMaximumSizeLow,_In_opt_ LPCTSTR lpName)
HANDLE WINAPI kernel32.CreateFileMappingW(_In_ HANDLE hFile,_In_opt_ LPSECURITY_ATTRIBUTES lpAttributes,_In_ DWORD flProtect,_In_ DWORD dwMaximumSizeHigh,_In_ DWORD dwMaximumSizeLow,_In_opt_ LPCTSTR lpName)
HANDLE WINAPI kernel32.CreateFileMappingA(_In_ HANDLE hFile,_In_opt_ LPSECURITY_ATTRIBUTES lpAttributes,_In_ DWORD flProtect,_In_ DWORD dwMaximumSizeHigh,_In_ DWORD dwMaximumSizeLow,_In_opt_ LPCTSTR lpName)
BOOL WINAPI None.LoadEnclaveData(_In_ HANDLE hProcess,_In_ LPVOID lpAddress,_In_ LPCVOID lpBuffer,_In_ SIZE_T nSize,_In_ DWORD flProtect,_In_ LPCVOID lpPageInformation,_In_ DWORD dwInfoLength,_Out_ PSIZE_T lpNumberOfBytesWritten,_Out_opt_ LPDWORD lpEnclaveError)
VOID WINAPI kernel32.WakeConditionVariable(_Inout_ PCONDITION_VARIABLE ConditionVariable)
PTP_WORK WINAPI kernel32.CreateThreadpoolWork(_In_ PTP_WORK_CALLBACK pfnwk,_Inout_opt_ PVOID pv,_In_opt_ PTP_CALLBACK_ENVIRON pcbe)
BOOL WINAPI kernel32.VirtualLock(_In_ LPVOID lpAddress,_In_ SIZE_T dwSize)
BOOL WINAPI kernel32.ConnectNamedPipe(_In_ HANDLE hNamedPipe,_Inout_opt_ LPOVERLAPPED lpOverlapped)
BOOL WINAPI kernel32.CallbackMayRunLong(_Inout_ PTP_CALLBACK_INSTANCE pci)
BOOL WINAPI kernel.GetDisplayAutoRotationPreferences(_Out_ ORIENTATION_PREFERENCE *pOrientation)
DWORD WINAPI kernel32.GetConsoleTitle(_Out_ LPTSTR lpConsoleTitle,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetConsoleTitleW(_Out_ LPTSTR lpConsoleTitle,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetConsoleTitleA(_Out_ LPTSTR lpConsoleTitle,_In_ DWORD nSize)
BOOL WINAPI kernel32.HeapFree(_In_ HANDLE hHeap,_In_ DWORD dwFlags,_In_ LPVOID lpMem)
SIZE_T WINAPI kernel32.GlobalSize(_In_ HGLOBAL hMem)
VOID WINAPI None.BadMemoryCallbackRoutine(VOID None None)
HANDLE WINAPI kernel32.CreateEventEx(_In_opt_ LPSECURITY_ATTRIBUTES lpEventAttributes,_In_opt_ LPCTSTR lpName,_In_ DWORD dwFlags,_In_ DWORD dwDesiredAccess)
HANDLE WINAPI kernel32.CreateEventExW(_In_opt_ LPSECURITY_ATTRIBUTES lpEventAttributes,_In_opt_ LPCTSTR lpName,_In_ DWORD dwFlags,_In_ DWORD dwDesiredAccess)
HANDLE WINAPI kernel32.CreateEventExA(_In_opt_ LPSECURITY_ATTRIBUTES lpEventAttributes,_In_opt_ LPCTSTR lpName,_In_ DWORD dwFlags,_In_ DWORD dwDesiredAccess)
BOOL WINAPI kernel32.SetConsoleScreenBufferSize(_In_ HANDLE hConsoleOutput,_In_ COORD dwSize)
BOOL WINAPI kernel32.DequeueUmsCompletionListItems(_In_ PUMS_COMPLETION_LIST UmsCompletionList,_In_ DWORD WaitTimeOut,_Out_ PUMS_CONTEXT *UmsThreadList)
UINT WINAPI kernel32.GetSystemWow64Directory(_Out_ LPTSTR lpBuffer,_In_ UINT uSize)
UINT WINAPI kernel32.GetSystemWow64DirectoryW(_Out_ LPTSTR lpBuffer,_In_ UINT uSize)
UINT WINAPI kernel32.GetSystemWow64DirectoryA(_Out_ LPTSTR lpBuffer,_In_ UINT uSize)
BOOL WINAPI kernel32.GlobalUnlock(_In_ HGLOBAL hMem)
BOOL WINAPI kernel32.GetNumaNodeProcessorMask(_In_ UCHAR Node,_Out_ PULONGLONG ProcessorMask)
VOID WINAPI kernel32.CloseThreadpoolCleanupGroupMembers(_Inout_ PTP_CLEANUP_GROUP ptpcg,_In_ BOOL fCancelPendingCallbacks,_Inout_opt_ PVOID pvCleanupContext)
PSLIST_ENTRY WINAPI kernel32.InterlockedPushEntrySList(_Inout_ PSLIST_HEADER ListHead,_Inout_ PSLIST_ENTRY ListEntry)
BOOL WINAPI kernel32.SetInformationJobObject(_In_ HANDLE hJob,_In_ JOBOBJECTINFOCLASS JobObjectInfoClass,_In_ LPVOID lpJobObjectInfo,_In_ DWORD cbJobObjectInfoLength)
VOID WINAPI kernel32.WakeAllConditionVariable(_Inout_ PCONDITION_VARIABLE ConditionVariable)
LONG WINAPI advapi32.RegOpenKey(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_Out_ PHKEY phkResult)
LONG WINAPI advapi32.RegOpenKeyW(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_Out_ PHKEY phkResult)
LONG WINAPI advapi32.RegOpenKeyA(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_Out_ PHKEY phkResult)
BOOL WINAPI kernel32.AllocateUserPhysicalPages(_In_ HANDLE hProcess,_Inout_ PULONG_PTR NumberOfPages,_Out_ PULONG_PTR UserPfnArray)
HANDLE WINAPI kernel32.OpenSemaphore(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpName)
HANDLE WINAPI kernel32.OpenSemaphoreW(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpName)
HANDLE WINAPI kernel32.OpenSemaphoreA(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpName)
LONG WINAPI advapi32.RegOpenKey(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_Out_ PHKEY phkResult)
LONG WINAPI advapi32.RegOpenKeyW(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_Out_ PHKEY phkResult)
LONG WINAPI advapi32.RegOpenKeyA(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_Out_ PHKEY phkResult)
HANDLE WINAPI ktmw32.OpenTransaction(_In_ DWORD dwDesiredAccess,_In_ LPGUID TransactionId)
VOID FORCEINLINE None.TpSetCallbackPriority(_Inout_ PTP_CALLBACK_ENVIRON CallbackEnviron,_In_ TP_CALLBACK_PRIORITY Priority)
BOOL WINAPI user32.UserHandleGrantAccess(_In_ HANDLE hUserHandle,_In_ HANDLE hJob,_In_ BOOL bGrant)
HRESULT WINAPI kernel32.GetThreadDescription(_In_ HANDLE hThread,_Out_ PWSTR *threadDescription)
PSLIST_ENTRY WINAPI kernel32.InterlockedFlushSList(_Inout_ PSLIST_HEADER ListHead)
UINT WINAPI kernel32.GetProfileInt(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ INT nDefault)
UINT WINAPI kernel32.GetProfileIntW(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ INT nDefault)
UINT WINAPI kernel32.GetProfileIntA(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ INT nDefault)
BOOL WINAPI advapi32.FileEncryptionStatus(_In_ LPCTSTR lpFileName,_Out_ LPDWORD lpStatus)
BOOL WINAPI advapi32.FileEncryptionStatusW(_In_ LPCTSTR lpFileName,_Out_ LPDWORD lpStatus)
BOOL WINAPI advapi32.FileEncryptionStatusA(_In_ LPCTSTR lpFileName,_Out_ LPDWORD lpStatus)
LONG WINAPI advapi32.RegOpenKeyTransacted(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_ DWORD ulOptions,_In_ REGSAM samDesired,_Out_ PHKEY phkResult,_In_ HANDLE hTransaction,_Reserved_ PVOID pExtendedParameter)
LONG WINAPI advapi32.RegOpenKeyTransactedW(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_ DWORD ulOptions,_In_ REGSAM samDesired,_Out_ PHKEY phkResult,_In_ HANDLE hTransaction,_Reserved_ PVOID pExtendedParameter)
LONG WINAPI advapi32.RegOpenKeyTransactedA(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_ DWORD ulOptions,_In_ REGSAM samDesired,_Out_ PHKEY phkResult,_In_ HANDLE hTransaction,_Reserved_ PVOID pExtendedParameter)
BOOL WINAPI kernel32.SleepConditionVariableCS(_Inout_ PCONDITION_VARIABLE ConditionVariable,_Inout_ PCRITICAL_SECTION CriticalSection,_In_ DWORD dwMilliseconds)
HANDLE WINAPI kernel32.CreateMutex(_In_opt_ LPSECURITY_ATTRIBUTES lpMutexAttributes,_In_ BOOL bInitialOwner,_In_opt_ LPCTSTR lpName)
HANDLE WINAPI kernel32.CreateMutexW(_In_opt_ LPSECURITY_ATTRIBUTES lpMutexAttributes,_In_ BOOL bInitialOwner,_In_opt_ LPCTSTR lpName)
HANDLE WINAPI kernel32.CreateMutexA(_In_opt_ LPSECURITY_ATTRIBUTES lpMutexAttributes,_In_ BOOL bInitialOwner,_In_opt_ LPCTSTR lpName)
BOOL WINAPI kernel32.HeapValidate(_In_ HANDLE hHeap,_In_ DWORD dwFlags,_In_opt_ LPCVOID lpMem)
BOOL WINAPI kernel32.PrefetchVirtualMemory(_In_ HANDLE hProcess,_In_ ULONG_PTR NumberOfEntries,_In_ PWIN32_MEMORY_RANGE_ENTRY VirtualAddresses,_In_ ULONG Flags)
BOOL WINAPI kernel32.ChangeTimerQueueTimer(_In_opt_ HANDLE TimerQueue,_Inout_ HANDLE Timer,_In_ ULONG DueTime,_In_ ULONG Period)
BOOL WINAPI kernel32.HeapSetInformation(_In_opt_ HANDLE HeapHandle,_In_ HEAP_INFORMATION_CLASS HeapInformationClass,_In_ PVOID HeapInformation,_In_ SIZE_T HeapInformationLength)
DWORD WINAPI kernel32.GetThreadId(_In_ HANDLE Thread)
VOID CALLBACK None.CleanupGroupCancelCallback(_Inout_opt_ PVOID ObjectContext,_Inout_opt_ PVOID CleanupContext)
BOOL WINAPI kernel32.DeleteSynchronizationBarrier(_Inout_ LPSYNCHRONIZATION_BARRIER lpBarrier)
BOOL WINAPI kernel32.QueryThreadCycleTime(_In_ HANDLE ThreadHandle,_Out_ PULONG64 CycleTime)
HGLOBAL WINAPI kernel32.GlobalFree(_In_ HGLOBAL hMem)
BOOL WINAPI kernel32.SetProcessDEPPolicy(_In_ DWORD dwFlags)
BOOL WINAPI kernel32.CancelWaitableTimer(_In_ HANDLE hTimer)
PSLIST_ENTRY WINAPI kernel32.InterlockedFlushSList(_Inout_ PSLIST_HEADER ListHead)
DWORD WINAPI kernel32.SignalObjectAndWait(_In_ HANDLE hObjectToSignal,_In_ HANDLE hObjectToWaitOn,_In_ DWORD dwMilliseconds,_In_ BOOL bAlertable)
BOOL WINAPI kernel32.DeleteUmsCompletionList(_In_ PUMS_COMPLETION_LIST UmsCompletionList)
LPVOID WINAPI kernel32.VirtualAllocExNuma(_In_ HANDLE hProcess,_In_opt_ LPVOID lpAddress,_In_ SIZE_T dwSize,_In_ DWORD flAllocationType,_In_ DWORD flProtect,_In_ DWORD nndPreferred)
DWORD WINAPI kernel32.QueueUserAPC(_In_ PAPCFUNC pfnAPC,_In_ HANDLE hThread,_In_ ULONG_PTR dwData)
DWORD WINAPI kernel32.GetProcessHeaps(_In_ DWORD NumberOfHeaps,_Out_ PHANDLE ProcessHeaps)
BOOL WINAPI kernel32.SleepConditionVariableSRW(_Inout_ PCONDITION_VARIABLE ConditionVariable,_Inout_ PSRWLOCK SRWLock,_In_ DWORD dwMilliseconds,_In_ ULONG Flags)
VOID WINAPI kernel32.WaitForThreadpoolWaitCallbacks(_Inout_ PTP_WAIT pwa,_In_ BOOL fCancelPendingCallbacks)
VOID WINAPI kernel32.AcquireSRWLockExclusive(_Inout_ PSRWLOCK SRWLock)
UINT WINAPI kernel32.ResetWriteWatch(_In_ LPVOID lpBaseAddress,_In_ SIZE_T dwRegionSize)
BOOL WINAPI kernel32.SetThreadpoolTimerEx(_Inout_ PTP_TIMER pti,_In_opt_ PFILETIME pftDueTime,_In_ DWORD msPeriod,_In_opt_ DWORD msWindowLength)
BOOL WINAPI kernel32.GetConsoleDisplayMode(_Out_ LPDWORD lpModeFlags)
BOOL WINAPI kernel32.AssignProcessToJobObject(_In_ HANDLE hJob,_In_ HANDLE hProcess)
PSLIST_ENTRY WINAPI kernel32.InterlockedPushListSListEx(_Inout_ PSLIST_HEADER ListHead,_Inout_ PSLIST_ENTRY List,_Inout_ PSLIST_ENTRY ListEnd,_In_ ULONG Count)
DWORD WINAPI user32.GetGuiResources(_In_ HANDLE hProcess,_In_ DWORD uiFlags)
VOID WINAPI kernel32.SwitchToFiber(_In_ LPVOID lpFiber)
VOID WINAPI kernel32.WakeByAddressSingle(_In_ PVOID Address)
PSLIST_ENTRY WINAPI ntdll.RtlInterlockedPushEntrySList(_In_ PSLIST_HEADER ListHead,_In_ PSLIST_ENTRY ListEntry)
BOOL WINAPI kernel32.DeleteTimerQueue(_In_ HANDLE TimerQueue)
VOID WINAPI kernel32.WaitForThreadpoolWorkCallbacks(_Inout_ PTP_WORK pwk,_In_ BOOL fCancelPendingCallbacks)
VOID WINAPI kernel32.CloseThreadpool(_Inout_ PTP_POOL ptpp)
BOOL WINAPI avrt.AvRtJoinThreadOrderingGroup(_Out_ PHANDLE Context,_In_ GUID *ThreadOrderingGuid,_In_ BOOL Before)
BOOL WINAPI kernel32.UnregisterWaitEx(_In_ HANDLE WaitHandle,_In_opt_ HANDLE CompletionEvent)
DWORD WINAPI kernel32.ResumeThread(_In_ HANDLE hThread)
BOOL WINAPI kernel32.SetProcessWorkingSetSizeEx(_In_ HANDLE hProcess,_In_ SIZE_T dwMinimumWorkingSetSize,_In_ SIZE_T dwMaximumWorkingSetSize,_In_ DWORD Flags)
BOOL WINAPI kernel32.TerminateProcess(_In_ HANDLE hProcess,_In_ UINT uExitCode)
DWORD WINAPI kernel32.SetThreadIdealProcessor(_In_ HANDLE hThread,_In_ DWORD dwIdealProcessor)
LONG WINAPI advapi32.RegEnumValue(_In_ HKEY hKey,_In_ DWORD dwIndex,_Out_ LPTSTR lpValueName,_Inout_ LPDWORD lpcchValueName,_Reserved_ LPDWORD lpReserved,_Out_opt_ LPDWORD lpType,_Out_opt_ LPBYTE lpData,_Inout_opt_ LPDWORD lpcbData)
LONG WINAPI advapi32.RegEnumValueW(_In_ HKEY hKey,_In_ DWORD dwIndex,_Out_ LPTSTR lpValueName,_Inout_ LPDWORD lpcchValueName,_Reserved_ LPDWORD lpReserved,_Out_opt_ LPDWORD lpType,_Out_opt_ LPBYTE lpData,_Inout_opt_ LPDWORD lpcbData)
LONG WINAPI advapi32.RegEnumValueA(_In_ HKEY hKey,_In_ DWORD dwIndex,_Out_ LPTSTR lpValueName,_Inout_ LPDWORD lpcchValueName,_Reserved_ LPDWORD lpReserved,_Out_opt_ LPDWORD lpType,_Out_opt_ LPBYTE lpData,_Inout_opt_ LPDWORD lpcbData)
BOOL WINAPI user32.IsImmersiveProcess(_In_ HANDLE hProcess)
LONG WINAPI advapi32.RegCloseKey(_In_ HKEY hKey)
BOOL WINAPI kernel32.UmsThreadYield(_In_ PVOID SchedulerParam)
BOOL WINAPI kernel32.TryEnterCriticalSection(_Inout_ LPCRITICAL_SECTION lpCriticalSection)
WORD WINAPI ntdll.RtlQueryDepthSList(_In_ PSLIST_HEADER ListHead)
LONG WINAPI advapi32.RegOpenKey(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_Out_ PHKEY phkResult)
LONG WINAPI advapi32.RegOpenKeyW(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_Out_ PHKEY phkResult)
LONG WINAPI advapi32.RegOpenKeyA(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_Out_ PHKEY phkResult)
HANDLE WINAPI kernel32.OpenPrivateNamespace(_In_ LPVOID lpBoundaryDescriptor,_In_ LPCTSTR lpAliasPrefix)
HANDLE WINAPI kernel32.OpenPrivateNamespaceW(_In_ LPVOID lpBoundaryDescriptor,_In_ LPCTSTR lpAliasPrefix)
HANDLE WINAPI kernel32.OpenPrivateNamespaceA(_In_ LPVOID lpBoundaryDescriptor,_In_ LPCTSTR lpAliasPrefix)
BOOL WINAPI kernel32.HeapFree(_In_ HANDLE hHeap,_In_ DWORD dwFlags,_In_ LPVOID lpMem)
BOOL WINAPI kernel32.GetConsoleScreenBufferInfoEx(_In_ HANDLE hConsoleOutput,_Out_ PCONSOLE_SCREEN_BUFFER_INFOEX lpConsoleScreenBufferInfoEx)
PTP_TIMER WINAPI kernel32.CreateThreadpoolTimer(_In_ PTP_TIMER_CALLBACK pfnti,_Inout_opt_ PVOID pv,_In_opt_ PTP_CALLBACK_ENVIRON pcbe)
VOID CALLBACK None.WaitOrTimerCallback(_In_ PVOID lpParameter,_In_ BOOLEAN TimerOrWaitFired)
HGLOBAL WINAPI kernel32.GlobalReAlloc(_In_ HGLOBAL hMem,_In_ SIZE_T dwBytes,_In_ UINT uFlags)
BOOL WINAPI kernel32.AddSIDToBoundaryDescriptor(_Inout_ HANDLE *BoundaryDescriptor,_In_ PSID RequiredSid)
BOOL WINAPI kernel32.CreateTimerQueueTimer(_Out_ PHANDLE phNewTimer,_In_opt_ HANDLE TimerQueue,_In_ WAITORTIMERCALLBACK Callback,_In_opt_ PVOID Parameter,_In_ DWORD DueTime,_In_ DWORD Period,_In_ ULONG Flags)
BOOL WINAPI kernel32.GetNumberOfConsoleInputEvents(_In_ HANDLE hConsoleInput,_Out_ LPDWORD lpcNumberOfEvents)
BOOL WINAPI advapi32.CreateProcessWithTokenW(_In_ HANDLE hToken,_In_ DWORD dwLogonFlags,_In_opt_ LPCWSTR lpApplicationName,_Inout_opt_ LPWSTR lpCommandLine,_In_ DWORD dwCreationFlags,_In_opt_ LPVOID lpEnvironment,_In_opt_ LPCWSTR lpCurrentDirectory,_In_ LPSTARTUPINFOW lpStartupInfo,_Out_ LPPROCESS_INFORMATION lpProcessInfo)
BOOL WINAPI kernel32.SetUmsThreadInformation(_In_ PUMS_CONTEXT UmsThread,_In_ UMS_THREAD_INFO_CLASS UmsThreadInfoClass,_In_ PVOID UmsThreadInformation,_In_ ULONG UmsThreadInformationLength)
DWORD WINAPI kernel32.ReclaimVirtualMemory(_In_ PVOID VirtualAddress,_In_ SIZE_T Size)
BOOLEAN WINAPI kernel32.TryAcquireSRWLockExclusive(_Inout_ PSRWLOCK SRWLock)
BOOL WINAPI kernel32.QueryInformationJobObject(_In_opt_ HANDLE hJob,_In_ JOBOBJECTINFOCLASS JobObjectInfoClass,_Out_ LPVOID lpJobObjectInfo,_In_ DWORD cbJobObjectInfoLength,_Out_opt_ LPDWORD lpReturnLength)
DWORD WINAPI kernel32.GetEnvironmentVariable(_In_opt_ LPCTSTR lpName,_Out_opt_ LPTSTR lpBuffer,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetEnvironmentVariableW(_In_opt_ LPCTSTR lpName,_Out_opt_ LPTSTR lpBuffer,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetEnvironmentVariableA(_In_opt_ LPCTSTR lpName,_Out_opt_ LPTSTR lpBuffer,_In_ DWORD nSize)
VOID WINAPI kernel32.CloseThreadpoolWait(_Inout_ PTP_WAIT pwa)
HANDLE WINAPI kernel32.OpenEvent(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpName)
HANDLE WINAPI kernel32.OpenEventW(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpName)
HANDLE WINAPI kernel32.OpenEventA(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpName)
PSLIST_ENTRY WINAPI kernel32.InterlockedPopEntrySList(_Inout_ PSLIST_HEADER ListHead)
BOOL WINAPI kernel.GetDisplayAutoRotationPreferences(_Out_ PAR_STATE pState)
BOOL WINAPI kernel32.GetSystemCpuSetInformation(_Out_opt_ PSYSTEM_CPU_SET_INFORMATION Information,_In_ ULONG BufferLength,_Out_ PULONG ReturnedLength,_In_opt_ HANDLE Process,_Reserved_ ULONG Flags)
DWORD WINAPI kernel32.GetProcessId(_In_ HANDLE Process)
VOID WINAPI kernel32.InitializeConditionVariable(_Out_ PCONDITION_VARIABLE ConditionVariable)
BOOL WINAPI avrt.AvSetMmThreadPriority(_In_ HANDLE AvrtHandle,_In_ AVRT_PRIORITY Priority)
LONG WINAPI advapi32.RegOpenKeyTransacted(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_ DWORD ulOptions,_In_ REGSAM samDesired,_Out_ PHKEY phkResult,_In_ HANDLE hTransaction,_Reserved_ PVOID pExtendedParameter)
LONG WINAPI advapi32.RegOpenKeyTransactedW(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_ DWORD ulOptions,_In_ REGSAM samDesired,_Out_ PHKEY phkResult,_In_ HANDLE hTransaction,_Reserved_ PVOID pExtendedParameter)
LONG WINAPI advapi32.RegOpenKeyTransactedA(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_ DWORD ulOptions,_In_ REGSAM samDesired,_Out_ PHKEY phkResult,_In_ HANDLE hTransaction,_Reserved_ PVOID pExtendedParameter)
VOID WINAPI kernel32.SetEventWhenCallbackReturns(_Inout_ PTP_CALLBACK_INSTANCE pci,_In_ HANDLE evt)
BOOL WINAPI advapi32.CreateProcessAsUser(_In_opt_ HANDLE hToken,_In_opt_ LPCTSTR lpApplicationName,_Inout_opt_ LPTSTR lpCommandLine,_In_opt_ LPSECURITY_ATTRIBUTES lpProcessAttributes,_In_opt_ LPSECURITY_ATTRIBUTES lpThreadAttributes,_In_ BOOL bInheritHandles,_In_ DWORD dwCreationFlags,_In_opt_ LPVOID lpEnvironment,_In_opt_ LPCTSTR lpCurrentDirectory,_In_ LPSTARTUPINFO lpStartupInfo,_Out_ LPPROCESS_INFORMATION lpProcessInformation)
BOOL WINAPI advapi32.CreateProcessAsUserW(_In_opt_ HANDLE hToken,_In_opt_ LPCTSTR lpApplicationName,_Inout_opt_ LPTSTR lpCommandLine,_In_opt_ LPSECURITY_ATTRIBUTES lpProcessAttributes,_In_opt_ LPSECURITY_ATTRIBUTES lpThreadAttributes,_In_ BOOL bInheritHandles,_In_ DWORD dwCreationFlags,_In_opt_ LPVOID lpEnvironment,_In_opt_ LPCTSTR lpCurrentDirectory,_In_ LPSTARTUPINFO lpStartupInfo,_Out_ LPPROCESS_INFORMATION lpProcessInformation)
BOOL WINAPI advapi32.CreateProcessAsUserA(_In_opt_ HANDLE hToken,_In_opt_ LPCTSTR lpApplicationName,_Inout_opt_ LPTSTR lpCommandLine,_In_opt_ LPSECURITY_ATTRIBUTES lpProcessAttributes,_In_opt_ LPSECURITY_ATTRIBUTES lpThreadAttributes,_In_ BOOL bInheritHandles,_In_ DWORD dwCreationFlags,_In_opt_ LPVOID lpEnvironment,_In_opt_ LPCTSTR lpCurrentDirectory,_In_ LPSTARTUPINFO lpStartupInfo,_Out_ LPPROCESS_INFORMATION lpProcessInformation)
DWORD WINAPI kernel32.SuspendThread(_In_ HANDLE hThread)
BOOL WINAPI kernel32.GlobalMemoryStatusEx(_Inout_ LPMEMORYSTATUSEX lpBuffer)
BOOL WINAPI kernel32.GetUmsSystemThreadInformation(_In_ HANDLE ThreadHandle,_Inout_ PUMS_SYSTEM_THREAD_INFORMATION SystemThreadInfo)
HANDLE WINAPI kernel32.CreateWaitableTimer(_In_opt_ LPSECURITY_ATTRIBUTES lpTimerAttributes,_In_ BOOL bManualReset,_In_opt_ LPCTSTR lpTimerName)
HANDLE WINAPI kernel32.CreateWaitableTimerW(_In_opt_ LPSECURITY_ATTRIBUTES lpTimerAttributes,_In_ BOOL bManualReset,_In_opt_ LPCTSTR lpTimerName)
HANDLE WINAPI kernel32.CreateWaitableTimerA(_In_opt_ LPSECURITY_ATTRIBUTES lpTimerAttributes,_In_ BOOL bManualReset,_In_opt_ LPCTSTR lpTimerName)
BOOL WINAPI avrt.AvRevertMmThreadCharacteristics(_In_ HANDLE AvrtHandle)
BOOL WINAPI kernel32.FlushViewOfFile(_In_ LPCVOID lpBaseAddress,_In_ SIZE_T dwNumberOfBytesToFlush)
PUMS_CONTEXT WINAPI kernel32.GetNextUmsListItem(_Inout_ PUMS_CONTEXT UmsContext)
BOOL WINAPI kernelbase.TlsFree(_In_ DWORD dwTlsIndex)
DWORD WINAPI kernel32.QueryIoRateControlInformationJobObject(_In_opt_ HANDLE hJob,_In_opt_ PCWSTR VolumeName,_Out_ JOBOBJECT_IO_RATE_CONTROL_INFORMATION **InfoBlocks,_Out_ ULONG *InfoBlockCount)
VOID WINAPI kernel32.CloseThreadpoolCleanupGroupMembers(_Inout_ PTP_CLEANUP_GROUP ptpcg,_In_ BOOL fCancelPendingCallbacks,_Inout_opt_ PVOID pvCleanupContext)
PTP_WORK WINAPI kernel32.CreateThreadpoolWork(_In_ PTP_WORK_CALLBACK pfnwk,_Inout_opt_ PVOID pv,_In_opt_ PTP_CALLBACK_ENVIRON pcbe)
VOID CALLBACK None.IoCompletionCallback(_Inout_ PTP_CALLBACK_INSTANCE Instance,_Inout_opt_ PVOID Context,_Inout_opt_ PVOID Overlapped,_In_ ULONG IoResult,_In_ ULONG_PTR NumberOfBytesTransferred,_Inout_ PTP_IO Io)
BOOL WINAPI kernel32.SetComputerNameEx(_In_ COMPUTER_NAME_FORMAT NameType,_In_ LPCTSTR lpBuffer)
BOOL WINAPI kernel32.SetComputerNameExW(_In_ COMPUTER_NAME_FORMAT NameType,_In_ LPCTSTR lpBuffer)
BOOL WINAPI kernel32.SetComputerNameExA(_In_ COMPUTER_NAME_FORMAT NameType,_In_ LPCTSTR lpBuffer)
BOOL WINAPI avrt.AvRtCreateThreadOrderingGroupEx(_Out_ PHANDLE Context,_In_ PLARGE_INTEGER Period,_Inout_ GUID *ThreadOrderingGuid,_In_opt_ PLARGE_INTEGER Timeout,_In_ LPCTSTR TaskName)
BOOL WINAPI avrt.AvRtCreateThreadOrderingGroupExW(_Out_ PHANDLE Context,_In_ PLARGE_INTEGER Period,_Inout_ GUID *ThreadOrderingGuid,_In_opt_ PLARGE_INTEGER Timeout,_In_ LPCTSTR TaskName)
BOOL WINAPI avrt.AvRtCreateThreadOrderingGroupExA(_Out_ PHANDLE Context,_In_ PLARGE_INTEGER Period,_Inout_ GUID *ThreadOrderingGuid,_In_opt_ PLARGE_INTEGER Timeout,_In_ LPCTSTR TaskName)
HANDLE WINAPI kernel32.OpenJobObject(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandles,_In_ LPCTSTR lpName)
HANDLE WINAPI kernel32.OpenJobObjectW(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandles,_In_ LPCTSTR lpName)
HANDLE WINAPI kernel32.OpenJobObjectA(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandles,_In_ LPCTSTR lpName)
DWORD WINAPI kernel32.GetProcessHeaps(_In_ DWORD NumberOfHeaps,_Out_ PHANDLE ProcessHeaps)
BOOL WINAPI kernel32.IsBadCodePtr(_In_ FARPROC lpfn)
VOID CALLBACK None.CleanupGroupCancelCallback(_Inout_opt_ PVOID ObjectContext,_Inout_opt_ PVOID CleanupContext)
BOOL WINAPI kernel32.AllocateUserPhysicalPagesNuma(_In_ HANDLE hProcess,_Inout_ PULONG_PTR NumberOfPages,_Out_ PULONG_PTR PageArray,_In_ DWORD nndPreferred)
HANDLE WINAPI kernel32.OpenPrivateNamespace(_In_ LPVOID lpBoundaryDescriptor,_In_ LPCTSTR lpAliasPrefix)
HANDLE WINAPI kernel32.OpenPrivateNamespaceW(_In_ LPVOID lpBoundaryDescriptor,_In_ LPCTSTR lpAliasPrefix)
HANDLE WINAPI kernel32.OpenPrivateNamespaceA(_In_ LPVOID lpBoundaryDescriptor,_In_ LPCTSTR lpAliasPrefix)
BOOL WINAPI kernel32.GetConsoleSelectionInfo(_Out_ PCONSOLE_SELECTION_INFO lpConsoleSelectionInfo)
WORD WINAPI ntdll.RtlQueryDepthSList(_In_ PSLIST_HEADER ListHead)
VOID WINAPI kernel32.DisassociateCurrentThreadFromCallback(_Inout_ PTP_CALLBACK_INSTANCE pci)
BOOL WINAPI kernel32.CreateProcess(_In_opt_ LPCTSTR lpApplicationName,_Inout_opt_ LPTSTR lpCommandLine,_In_opt_ LPSECURITY_ATTRIBUTES lpProcessAttributes,_In_opt_ LPSECURITY_ATTRIBUTES lpThreadAttributes,_In_ BOOL bInheritHandles,_In_ DWORD dwCreationFlags,_In_opt_ LPVOID lpEnvironment,_In_opt_ LPCTSTR lpCurrentDirectory,_In_ LPSTARTUPINFO lpStartupInfo,_Out_ LPPROCESS_INFORMATION lpProcessInformation)
BOOL WINAPI kernel32.CreateProcessW(_In_opt_ LPCTSTR lpApplicationName,_Inout_opt_ LPTSTR lpCommandLine,_In_opt_ LPSECURITY_ATTRIBUTES lpProcessAttributes,_In_opt_ LPSECURITY_ATTRIBUTES lpThreadAttributes,_In_ BOOL bInheritHandles,_In_ DWORD dwCreationFlags,_In_opt_ LPVOID lpEnvironment,_In_opt_ LPCTSTR lpCurrentDirectory,_In_ LPSTARTUPINFO lpStartupInfo,_Out_ LPPROCESS_INFORMATION lpProcessInformation)
BOOL WINAPI kernel32.CreateProcessA(_In_opt_ LPCTSTR lpApplicationName,_Inout_opt_ LPTSTR lpCommandLine,_In_opt_ LPSECURITY_ATTRIBUTES lpProcessAttributes,_In_opt_ LPSECURITY_ATTRIBUTES lpThreadAttributes,_In_ BOOL bInheritHandles,_In_ DWORD dwCreationFlags,_In_opt_ LPVOID lpEnvironment,_In_opt_ LPCTSTR lpCurrentDirectory,_In_ LPSTARTUPINFO lpStartupInfo,_Out_ LPPROCESS_INFORMATION lpProcessInformation)
BOOL WINAPI kernel32.PulseEvent(_In_ HANDLE hEvent)
BOOL WINAPI kernel32.EnterSynchronizationBarrier(_Inout_ LPSYNCHRONIZATION_BARRIER lpBarrier,_In_ DWORD dwFlags)
BOOL WINAPI kernel32.InitializeSynchronizationBarrier(_Out_ LPSYNCHRONIZATION_BARRIER lpBarrier,_In_ LONG lTotalThreads,_In_ LONG lSpinCount)
HANDLE WINAPI kernel32.CreateSemaphore(_In_opt_ LPSECURITY_ATTRIBUTES lpSemaphoreAttributes,_In_ LONG lInitialCount,_In_ LONG lMaximumCount,_In_opt_ LPCTSTR lpName)
HANDLE WINAPI kernel32.CreateSemaphoreW(_In_opt_ LPSECURITY_ATTRIBUTES lpSemaphoreAttributes,_In_ LONG lInitialCount,_In_ LONG lMaximumCount,_In_opt_ LPCTSTR lpName)
HANDLE WINAPI kernel32.CreateSemaphoreA(_In_opt_ LPSECURITY_ATTRIBUTES lpSemaphoreAttributes,_In_ LONG lInitialCount,_In_ LONG lMaximumCount,_In_opt_ LPCTSTR lpName)
BOOL WINAPI kernel32.SetProcessMitigationPolicy(_In_ PROCESS_MITIGATION_POLICY MitigationPolicy,_In_ PVOID lpBuffer,_In_ SIZE_T dwLength)
BOOL WINAPI kernel32.QueryProtectedPolicy(_In_ LPCGUID PolicyGuid,_Out_ PULONG_PTR PolicyValue)
LPVOID WINAPI kernel32.LocalLock(_In_ HLOCAL hMem)
BOOL WINAPI kernel32.QueryWorkingSet(_In_ HANDLE hProcess,_Out_ PVOID pv,_In_ DWORD cb)
UINT WINAPI kernel32.ResetWriteWatch(_In_ LPVOID lpBaseAddress,_In_ SIZE_T dwRegionSize)
BOOL WINAPI kernel32.ReleaseSemaphore(_In_ HANDLE hSemaphore,_In_ LONG lReleaseCount,_Out_opt_ LPLONG lpPreviousCount)
BOOL WINAPI kernel32.QueryProcessAffinityUpdateMode(_In_ HANDLE ProcessHandle,_Out_opt_ DWORD lpdwFlags)
VOID WINAPI kernel32.ExitThread(_In_ DWORD dwExitCode)
BOOL WINAPI kernel32.GetConsoleScreenBufferInfoEx(_In_ HANDLE hConsoleOutput,_Out_ PCONSOLE_SCREEN_BUFFER_INFOEX lpConsoleScreenBufferInfoEx)
VOID WINAPI kernel32.WaitForThreadpoolTimerCallbacks(_Inout_ PTP_TIMER pti,_In_ BOOL fCancelPendingCallbacks)
BOOL WINAPI kernel32.SetProcessDefaultCpuSets(_In_ HANDLE Process,_In_opt_ ULONG CpuSetIds,_In_ ULONG CpuSetIdCound)
BOOL WINAPI user32.SetProcessRestrictionExemption(BOOL fEnableExemption None)
BOOL WINAPI kernel32.GetProcessIoCounters(_In_ HANDLE hProcess,_Out_ PIO_COUNTERS lpIoCounters)
BOOL WINAPI kernel32.EnterUmsSchedulingMode(_In_ PUMS_SCHEDULER_STARTUP_INFO SchedulerStartupInfo)
DWORD WINAPI kernel32.Wow64SuspendThread(_In_ HANDLE hThread)
BOOL WINAPI kernel32.GetConsoleScreenBufferInfoEx(_In_ HANDLE hConsoleOutput,_Out_ PCONSOLE_SCREEN_BUFFER_INFOEX lpConsoleScreenBufferInfoEx)
VOID FORCEINLINE None.TpSetCallbackNoActivationContext(_Inout_ PTP_CALLBACK_ENVIRON CallbackEnviron)
BOOL WINAPI kernel32.FlushViewOfFile(_In_ LPCVOID lpBaseAddress,_In_ SIZE_T dwNumberOfBytesToFlush)
HANDLE WINAPI kernel32.CreateRemoteThread(_In_ HANDLE hProcess,_In_ LPSECURITY_ATTRIBUTES lpThreadAttributes,_In_ SIZE_T dwStackSize,_In_ LPTHREAD_START_ROUTINE lpStartAddress,_In_ LPVOID lpParameter,_In_ DWORD dwCreationFlags,_Out_ LPDWORD lpThreadId)
BOOL WINAPI kernel32.GlobalMemoryStatusEx(_Inout_ LPMEMORYSTATUSEX lpBuffer)
LONG WINAPI advapi32.RegQueryReflectionKey(_In_ HKEY hBase,_Out_ BOOL *bIsReflectionDisabled)
BOOL WINAPI None.InitializeEnclave(_In_ HANDLE hProcess,_In_ LPVOID lpAddress,_In_ LPVOID lpEnclaveInformation,_In_ DWORD dwInfoLength,_In_ LPDWORD lpEnclaveError)
HLOCAL WINAPI kernel32.LocalHandle(_In_ LPCVOID pMem)
BOOL WINAPI kernel32.SetThreadpoolWaitEx(_Inout_ PTP_WAIT pwa,_In_opt_ HANDLE h,_In_opt_ PFILETIME pftTimeout,_Reserved_ PVOID Reserved)
BOOL WINAPI kernel32.SetComputerNameEx(_In_ COMPUTER_NAME_FORMAT NameType,_In_ LPCTSTR lpBuffer)
BOOL WINAPI kernel32.SetComputerNameExW(_In_ COMPUTER_NAME_FORMAT NameType,_In_ LPCTSTR lpBuffer)
BOOL WINAPI kernel32.SetComputerNameExA(_In_ COMPUTER_NAME_FORMAT NameType,_In_ LPCTSTR lpBuffer)
DWORD WINAPI kernel32.GetProcessIdOfThread(_In_ HANDLE Thread)
HRESULT WINAPI kernel32.SetThreadDescription(_In_ HANDLE hThread,_In_ PCWSTR lpThreadDescription)
BOOL WINAPI kernel32.GetPhysicallyInstalledSystemMemory(_Out_ PULONGLONG TotalMemoryInKilobytes)
BOOL WINAPI kernel32.RegisterWaitForSingleObject(_Out_ PHANDLE phNewWaitObject,_In_ HANDLE hObject,_In_ WAITORTIMERCALLBACK Callback,_In_opt_ PVOID Context,_In_ ULONG dwMilliseconds,_In_ ULONG dwFlags)
HANDLE WINAPI kernel32.OpenProcess(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ DWORD dwProcessId)
BOOL WINAPI kernel32.QueueUserWorkItem(_In_ LPTHREAD_START_ROUTINE Function,_In_opt_ PVOID Context,_In_ ULONG Flags)
BOOL WINAPI kernel.GetDisplayAutoRotationPreferencesByProcessId(_In_ DWORD *dwProcessId,_Out_ ORIENTATION_PREFERENCE *pOrientation,_Out_ BOOL *fRotateScreen)
UINT WINAPI kernel32.GetSystemWindowsDirectory(_Out_ LPTSTR lpBuffer,_In_ UINT uSize)
UINT WINAPI kernel32.GetSystemWindowsDirectoryW(_Out_ LPTSTR lpBuffer,_In_ UINT uSize)
UINT WINAPI kernel32.GetSystemWindowsDirectoryA(_Out_ LPTSTR lpBuffer,_In_ UINT uSize)
VOID WINAPI kernel32.CloseThreadpoolTimer(_Inout_ PTP_TIMER pti)
VOID WINAPI kernel32.GetCurrentThreadStackLimits(_Out_ PULONG_PTR LowLimit,_Out_ PULONG_PTR HighLimit)
DWORD WINAPI kernelbase.SleepEx(_In_ DWORD dwMilliseconds,_In_ BOOL bAlertable)
BOOL WINAPI kernel32.QueryIdleProcessorCycleTime(_Inout_ PULONG BufferLength,_Out_ PULONG64 ProcessorIdleCycleTime)
BOOL WINAPI kernel32.SetThreadpoolThreadMinimum(_Inout_ PTP_POOL ptpp,_In_ DWORD cthrdMic)
BOOL WINAPI kernel32.GetConsoleSelectionInfo(_Out_ PCONSOLE_SELECTION_INFO lpConsoleSelectionInfo)
LPVOID WINAPI kernelbase.TlsGetValue(_In_ DWORD dwTlsIndex)
BOOL WINAPI kernel32.IsThreadpoolTimerSet(_Inout_ PTP_TIMER pti)
BOOL WINAPI kernel32.SetComputerNameEx(_In_ COMPUTER_NAME_FORMAT NameType,_In_ LPCTSTR lpBuffer)
BOOL WINAPI kernel32.SetComputerNameExW(_In_ COMPUTER_NAME_FORMAT NameType,_In_ LPCTSTR lpBuffer)
BOOL WINAPI kernel32.SetComputerNameExA(_In_ COMPUTER_NAME_FORMAT NameType,_In_ LPCTSTR lpBuffer)
BOOL WINAPI kernel32.NeedCurrentDirectoryForExePath(_In_ LPCTSTR ExeName)
BOOL WINAPI kernel32.NeedCurrentDirectoryForExePathW(_In_ LPCTSTR ExeName)
BOOL WINAPI kernel32.NeedCurrentDirectoryForExePathA(_In_ LPCTSTR ExeName)
HLOCAL WINAPI kernel32.LocalReAlloc(_In_ HLOCAL hMem,_In_ SIZE_T uBytes,_In_ UINT uFlags)
BOOL WINAPI kernel32.ReadConsoleOutput(_In_ HANDLE hConsoleOutput,_Out_ PCHAR_INFO lpBuffer,_In_ COORD dwBufferSize,_In_ COORD dwBufferCoord,_Inout_ PSMALL_RECT lpReadRegion)
BOOL WINAPI kernel32.ReadConsoleOutputW(_In_ HANDLE hConsoleOutput,_Out_ PCHAR_INFO lpBuffer,_In_ COORD dwBufferSize,_In_ COORD dwBufferCoord,_Inout_ PSMALL_RECT lpReadRegion)
BOOL WINAPI kernel32.ReadConsoleOutputA(_In_ HANDLE hConsoleOutput,_Out_ PCHAR_INFO lpBuffer,_In_ COORD dwBufferSize,_In_ COORD dwBufferCoord,_Inout_ PSMALL_RECT lpReadRegion)
BOOL WINAPI kernel32.GetLogicalProcessorInformation(_Out_ PSYSTEM_LOGICAL_PROCESSOR_INFORMATION Buffer,_Inout_ PDWORD ReturnLength)
VOID FORCEINLINE None.TpSetCallbackLongFunction(_Inout_ PTP_CALLBACK_ENVIRON CallbackEnviron)
VOID WINAPI kernel32.WakeConditionVariable(_Inout_ PCONDITION_VARIABLE ConditionVariable)
VOID WINAPI kernel32.ExitProcess(_In_ UINT uExitCode)
BOOL WINAPI kernel32.GetPerformanceInfo(_Out_ PPERFORMANCE_INFORMATION pPerformanceInformation,_In_ DWORD cb)
BOOL WINAPI avrt.AvRtWaitOnThreadOrderingGroup(_In_ HANDLE Context)
BOOL WINAPI kernel32.FlsFree(_In_ DWORD dwFlsIndex)
BOOL WINAPI kernel32.SetProcessPriorityBoost(_In_ HANDLE hProcess,_In_ BOOL DisablePriorityBoost)
BOOL WINAPI kernel32.InitOnceComplete(_Inout_ LPINIT_ONCE lpInitOnce,_In_ DWORD dwFlags,_In_opt_ LPVOID lpContext)
BOOL WINAPI kernel32.GetProcessWorkingSetSize(_In_ HANDLE hProcess,_Out_ PSIZE_T lpMinimumWorkingSetSize,_Out_ PSIZE_T lpMaximumWorkingSetSize)
DWORD WINAPI kernel32.GetProcessId(_In_ HANDLE Process)
DWORD WINAPI kernel32.FlsAlloc(_In_ PFLS_CALLBACK_FUNCTION lpCallback)
BOOL WINAPI kernel32.GetNumaProximityNode(_In_ ULONG ProximityId,_Out_ PUCHAR NodeNumber)
BOOL WINAPI kernel32.GetNumaAvailableMemoryNode(_In_ UCHAR Node,_Out_ PULONGLONG AvailableBytes)
VOID WINAPI kernel32.FreeLibraryWhenCallbackReturns(_Inout_ PTP_CALLBACK_INSTANCE pci,_In_ HMODULE mod)
BOOL WINAPI kernel32.IsProcessorFeaturePresent(_In_ DWORD ProcessorFeature)
VOID WINAPI kernel32.DeleteProcThreadAttributeList(_Inout_ LPPROC_THREAD_ATTRIBUTE_LIST lpAttributeList)
DWORD WINAPI kernel32.OfferVirtualMemory(_In_ PVOID VirtualAddress,_In_ SIZE_T Size,_In_ OFFER_PRIORITY Priority)
BOOL WINAPI kernel32.QueryWorkingSet(_In_ HANDLE hProcess,_Out_ PVOID pv,_In_ DWORD cb)
VOID CALLBACK None.SimpleCallback(_Inout_ PTP_CALLBACK_INSTANCE Instance,_Inout_opt_ PVOID Context)
BOOL WINAPI kernel32.GetProcessMitigationPolicy(_In_ HANDLE hProcess,_In_ PROCESS_MITIGATION_POLICY MitigationPolicy,_Out_ PVOID lpBuffer,_In_ SIZE_T dwLength)
VOID FORCEINLINE None.TpSetCallbackRaceWithDll(_Inout_ PTP_CALLBACK_ENVIRON CallbackEnviron,_In_ PVOID DllHandle)
BOOL WINAPI kernel32.GetExitCodeProcess(_In_ HANDLE hProcess,_Out_ LPDWORD lpExitCode)
BOOL WINAPI kernel32.UpdateProcThreadAttribute(_Inout_ LPPROC_THREAD_ATTRIBUTE_LIST lpAttributeList,_In_ DWORD dwFlags,_In_ DWORD_PTR Attribute,_In_ PVOID lpValue,_In_ SIZE_T cbSize,_Out_opt_ PVOID lpPreviousValue,_In_opt_ PSIZE_T lpReturnSize)
DWORD WINAPI kernel32.SetIoRateControlInformationJobObject(_In_ HANDLE hJob,_In_ JOBOBJECT_IO_RATE_CONTROL_INFORMATION *IoRateControlInfo)
BOOL WINAPI kernelbase.TlsSetValue(_In_ DWORD dwTlsIndex,_In_opt_ LPVOID lpTlsValue)
PTP_WAIT WINAPI kernel32.CreateThreadpoolWait(_In_ PTP_WAIT_CALLBACK pfnwa,_Inout_opt_ PVOID pv,_In_opt_ PTP_CALLBACK_ENVIRON pcbe)
BOOL WINAPI avrt.AvRtDeleteThreadOrderingGroup(_In_ HANDLE Context)
BOOL WINAPI kernel32.CreateUmsThreadContext(_Out_ PUMS_CONTEXT *lpUmsThread)
NTSTATUS WINAPI ntdll.NtQueryInformationProcess(_In_ HANDLE ProcessHandle,_In_ PROCESSINFOCLASS ProcessInformationClass,_Out_ PVOID ProcessInformation,_In_ ULONG ProcessInformationLength,_Out_opt_ PULONG ReturnLength)
HANDLE WINAPI kernel32.OpenFileMappingFromApp(_In_ ULONG DesiredAccess,_In_ BOOL InheritHandle,_In_ PCWSTR Name)
HANDLE WINAPI avrt.AvSetMmThreadCharacteristics(_In_ LPCTSTR TaskName,_Inout_ LPDWORD TaskIndex)
HANDLE WINAPI avrt.AvSetMmThreadCharacteristicsW(_In_ LPCTSTR TaskName,_Inout_ LPDWORD TaskIndex)
HANDLE WINAPI avrt.AvSetMmThreadCharacteristicsA(_In_ LPCTSTR TaskName,_Inout_ LPDWORD TaskIndex)
DWORD_PTR WINAPI kernel32.SetThreadAffinityMask(_In_ HANDLE hThread,_In_ DWORD_PTR dwThreadAffinityMask)
BOOL WINAPI avrt.AvRevertMmThreadCharacteristics(_In_ HANDLE AvrtHandle)
LPVOID WINAPI kernel32.CreateFiberEx(_In_ SIZE_T dwStackCommitSize,_In_ SIZE_T dwStackReserveSize,_In_ DWORD dwFlags,_In_ LPFIBER_START_ROUTINE lpStartAddress,_In_opt_ LPVOID lpParameter)
VOID FORCEINLINE None.TpDestroyCallbackEnviron(_In_ PTP_CALLBACK_ENVIRON CallbackEnviron)
PSLIST_ENTRY WINAPI ntdll.RtlFirstEntrySList(_In_ PSLIST_HEADER ListHead)
VOID WINAPI kernel32.FreeMemoryJobObject(_In_ VOID *Buffer)
BOOL WINAPI kernel32.SetThreadStackGuarantee(_Inout_ PULONG StackSizeInBytes)
BOOL WINAPI kernel32.GetExitCodeThread(_In_ HANDLE hThread,_Out_ LPDWORD lpExitCode)
HLOCAL WINAPI kernel32.LocalHandle(_In_ LPCVOID pMem)
BOOL WINAPI kernel32.HeapQueryInformation(_In_opt_ HANDLE HeapHandle,_In_ HEAP_INFORMATION_CLASS HeapInformationClass,_Out_ PVOID HeapInformation,_In_ SIZE_T HeapInformationLength,_Out_opt_ PSIZE_T ReturnLength)
BOOL WINAPI kernel32.TrySubmitThreadpoolCallback(_In_ PTP_SIMPLE_CALLBACK pfns,_Inout_opt_ PVOID pv,_In_opt_ PTP_CALLBACK_ENVIRON pcbe)
BOOL WINAPI kernel32.CreateUmsCompletionList(_Out_ PUMS_COMPLETION_LIST *UmsCompletionList)
BOOL WINAPI kernel32.SetThreadPriorityBoost(_In_ HANDLE hThread,_In_ BOOL DisablePriorityBoost)
BOOL WINAPI kernel32.GetProcessAffinityMask(_In_ HANDLE hProcess,_Out_ PDWORD_PTR lpProcessAffinityMask,_Out_ PDWORD_PTR lpSystemAffinityMask)
BOOL WINAPI kernel32.InitializeProcessForWsWatch(_In_ HANDLE hProcess)
DWORD WINAPI kernel32.GetProcessVersion(_In_ DWORD ProcessId)
BOOL WINAPI kernel32.GetThreadIOPendingFlag(_In_ HANDLE hThread,_Inout_ PBOOL lpIOIsPending)
VOID CALLBACK None.WaitCallback(_Inout_ PTP_CALLBACK_INSTANCE Instance,_Inout_opt_ PVOID Context,_Inout_ PTP_WAIT Wait,_In_ TP_WAIT_RESULT WaitResult)
HANDLE WINAPI kernel32.OpenThread(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ DWORD dwThreadId)
BOOL WINAPI kernel32.SetProcessAffinityUpdateMode(_In_ HANDLE ProcessHandle,_In_ DWORD dwFlags)
BOOL WINAPI kernel32.TerminateJobObject(_In_ HANDLE hJob,_In_ UINT uExitCode)
BOOL WINAPI advapi32.CreateProcessWithLogonW(_In_ LPCWSTR lpUsername,_In_opt_ LPCWSTR lpDomain,_In_ LPCWSTR lpPassword,_In_ DWORD dwLogonFlags,_In_opt_ LPCWSTR lpApplicationName,_Inout_opt_ LPWSTR lpCommandLine,_In_ DWORD dwCreationFlags,_In_opt_ LPVOID lpEnvironment,_In_opt_ LPCWSTR lpCurrentDirectory,_In_ LPSTARTUPINFOW lpStartupInfo,_Out_ LPPROCESS_INFORMATION lpProcessInfo)
BOOL WINAPI kernel32.DeleteUmsThreadContext(_In_ PUMS_CONTEXT UmsThread)
BOOL WINAPI kernel32.SetProtectedPolicy(_In_ LPCGUID PolicyGuid,_In_ ULONG_PTR PolicyValue,_Out_ PULONG_PTR OldPolicyValue)
BOOL WINAPI kernel32.IsWow64Process(_In_ HANDLE hProcess,_Out_ PBOOL Wow64Process)
BOOL WINAPI kernel32.GetThreadSelectedCpuSets(_In_ HANDLE Thread,_Out_opt_ PULONG CpuSetIds,_In_ ULONG CpuSetIdCount,_Out_ PULONG RequiredIdCount)
BOOL WINAPI kernel32.GetProcessDefaultCpuSets(_In_ HANDLE Process,_Out_opt_ PULONG CpuSetIds,_In_ ULONG CpuSetIdCount,_Out_ PULONG RequiredIdCount)
BOOL WINAPI kernel32.GetProcessPriorityBoost(_In_ HANDLE hProcess,_Out_ PBOOL pDisablePriorityBoost)
BOOLEAN WINAPI secur32.GetComputerObjectName(_In_ EXTENDED_NAME_FORMAT NameFormat,_Out_ LPTSTR lpNameBuffer,_Inout_ PULONG lpnSize)
BOOLEAN WINAPI secur32.GetComputerObjectNameW(_In_ EXTENDED_NAME_FORMAT NameFormat,_Out_ LPTSTR lpNameBuffer,_Inout_ PULONG lpnSize)
BOOLEAN WINAPI secur32.GetComputerObjectNameA(_In_ EXTENDED_NAME_FORMAT NameFormat,_Out_ LPTSTR lpNameBuffer,_Inout_ PULONG lpnSize)
VOID WINAPI kernel32.CancelThreadpoolIo(_Inout_ PTP_IO pio)
BOOL WINAPI kernel32.GetProcessShutdownParameters(_Out_ LPDWORD lpdwLevel,_Out_ LPDWORD lpdwFlags)
BOOL WINAPI kernel32.GetComputerName(_Out_ LPTSTR lpBuffer,_Inout_ LPDWORD lpnSize)
BOOL WINAPI kernel32.GetComputerNameW(_Out_ LPTSTR lpBuffer,_Inout_ LPDWORD lpnSize)
BOOL WINAPI kernel32.GetComputerNameA(_Out_ LPTSTR lpBuffer,_Inout_ LPDWORD lpnSize)
VOID WINAPI kernel32.SetThreadpoolTimer(_Inout_ PTP_TIMER pti,_In_opt_ PFILETIME pftDueTime,_In_ DWORD msPeriod,_In_opt_ DWORD msWindowLength)
PVOID WINAPI kernel32.MapViewOfFileFromApp(_In_ HANDLE hFileMappingObject,_In_ ULONG DesiredAccess,_In_ ULONG64 FileOffset,_In_ SIZE_T NumberOfBytesToMap)
BOOL WINAPI kernel32.GetProcessMemoryInfo(_In_ HANDLE Process,_Out_ PPROCESS_MEMORY_COUNTERS ppsmemCounters,_In_ DWORD cb)
VOID WINAPI kernel32.SetThreadpoolThreadMaximum(_Inout_ PTP_POOL ptpp,_In_ DWORD cthrdMost)
VOID WINAPI kernel32.StartThreadpoolIo(_Inout_ PTP_IO pio)
LPVOID WINAPI kernel32.ConvertThreadToFiber(_In_opt_ LPVOID lpParameter)
VOID WINAPI kernel32.DeleteFiber(_In_ LPVOID lpFiber)
VOID FORCEINLINE None.TpSetCallbackLongFunction(_Inout_ PTP_CALLBACK_ENVIRON CallbackEnviron)
VOID CALLBACK None.WorkCallback(_Inout_ PTP_CALLBACK_INSTANCE Instance,_Inout_opt_ PVOID Context,_Inout_ PTP_WORK Work)
BOOL WINAPI kernel32.VerifyVersionInfo(_In_ LPOSVERSIONINFOEX lpVersionInfo,_In_ DWORD dwTypeMask,_In_ DWORDLONG dwlConditionMask)
BOOL WINAPI kernel32.VerifyVersionInfoW(_In_ LPOSVERSIONINFOEX lpVersionInfo,_In_ DWORD dwTypeMask,_In_ DWORDLONG dwlConditionMask)
BOOL WINAPI kernel32.VerifyVersionInfoA(_In_ LPOSVERSIONINFOEX lpVersionInfo,_In_ DWORD dwTypeMask,_In_ DWORDLONG dwlConditionMask)
BOOL WINAPI avrt.AvSetMmThreadPriority(_In_ HANDLE AvrtHandle,_In_ AVRT_PRIORITY Priority)
BOOLEAN WINAPI secur32.GetUserNameEx(_In_ EXTENDED_NAME_FORMAT NameFormat,_Out_ LPTSTR lpNameBuffer,_Inout_ PULONG lpnSize)
BOOLEAN WINAPI secur32.GetUserNameExW(_In_ EXTENDED_NAME_FORMAT NameFormat,_Out_ LPTSTR lpNameBuffer,_Inout_ PULONG lpnSize)
BOOLEAN WINAPI secur32.GetUserNameExA(_In_ EXTENDED_NAME_FORMAT NameFormat,_Out_ LPTSTR lpNameBuffer,_Inout_ PULONG lpnSize)
BOOL WINAPI kernel32.IsWow64Process(_In_ HANDLE hProcess,_Out_ PBOOL Wow64Process)
BOOL WINAPI kernel32.SetComputerNameEx(_In_ COMPUTER_NAME_FORMAT NameType,_In_ LPCTSTR lpBuffer)
BOOL WINAPI kernel32.SetComputerNameExW(_In_ COMPUTER_NAME_FORMAT NameType,_In_ LPCTSTR lpBuffer)
BOOL WINAPI kernel32.SetComputerNameExA(_In_ COMPUTER_NAME_FORMAT NameType,_In_ LPCTSTR lpBuffer)
VOID WINAPI kernel32.LeaveCriticalSectionWhenCallbackReturns(_Inout_ PTP_CALLBACK_INSTANCE pci,_Inout_ PCRITICAL_SECTION pcs)
BOOL WINAPI advapi32.GetUserName(_Out_ LPTSTR lpBuffer,_Inout_ LPDWORD lpnSize)
BOOL WINAPI advapi32.GetUserNameW(_Out_ LPTSTR lpBuffer,_Inout_ LPDWORD lpnSize)
BOOL WINAPI advapi32.GetUserNameA(_Out_ LPTSTR lpBuffer,_Inout_ LPDWORD lpnSize)
DWORD WINAPI kernel32.GetEnvironmentVariable(_In_opt_ LPCTSTR lpName,_Out_opt_ LPTSTR lpBuffer,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetEnvironmentVariableW(_In_opt_ LPCTSTR lpName,_Out_opt_ LPTSTR lpBuffer,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetEnvironmentVariableA(_In_opt_ LPCTSTR lpName,_Out_opt_ LPTSTR lpBuffer,_In_ DWORD nSize)
VOID CALLBACK None.TimerCallback(_Inout_ PTP_CALLBACK_INSTANCE Instance,_Inout_opt_ PVOID Context,_Inout_ PTP_TIMER Timer)
VOID CALLBACK None.FiberProc(_In_ PVOID lpParameter)
BOOL WINAPI kernel32.SetUmsThreadInformation(_In_ PUMS_CONTEXT UmsThread,_In_ UMS_THREAD_INFO_CLASS UmsThreadInfoClass,_In_ PVOID UmsThreadInformation,_In_ ULONG UmsThreadInformationLength)
BOOL WINAPI avrt.AvRtCreateThreadOrderingGroup(_Out_ PHANDLE Context,_In_ PLARGE_INTEGER Period,_Inout_ GUID *ThreadOrderingGuid,_In_opt_ PLARGE_INTEGER Timeout)
BOOL WINAPI kernel32.GetUmsCompletionListEvent(_In_ PUMS_COMPLETION_LIST UmsCompletionList,_Inout_ PHANDLE UmsCompletionEvent)
BOOL WINAPI avrt.AvQuerySystemResponsiveness(_In_ HANDLE AvrtHandle,_Out_ PULONG SystemResponsivenessValue)
BOOL WINAPI kernel32.QueryPerformanceFrequency(_Out_ LARGE_INTEGER *lpFrequency)
BOOL WINAPI kernel32.GetProcessWorkingSetSizeEx(_In_ HANDLE hProcess,_Out_ PSIZE_T lpMinimumWorkingSetSize,_Out_ PSIZE_T lpMaximumWorkingSetSize,_Out_ PDWORD Flags)
HANDLE WINAPI kernel32.CreateThread(_In_opt_ LPSECURITY_ATTRIBUTES lpThreadAttributes,_In_ SIZE_T dwStackSize,_In_ LPTHREAD_START_ROUTINE lpStartAddress,_In_opt_ LPVOID lpParameter,_In_ DWORD dwCreationFlags,_Out_opt_ LPDWORD lpThreadId)
LPVOID WINAPI kernel32.ConvertThreadToFiberEx(_In_opt_ LPVOID lpParameter,_In_ DWORD dwFlags)
VOID FORCEINLINE None.TpSetCallbackFinalizationCallback(_Inout_ PTP_CALLBACK_ENVIRON CallbackEnviron,_In_ PTP_SIMPLE_CALLBACK FinalizationCallback)
VOID WINAPI kernel32.SubmitThreadpoolWork(_Inout_ PTP_WORK pwk)
VOID WINAPI kernel32.WaitForThreadpoolIoCallbacks(_Inout_ PTP_IO pio,_In_ BOOL fCancelPendingCallbacks)
VOID FORCEINLINE None.TpInitializeCallbackEnviron(_Out_ PTP_CALLBACK_ENVIRON CallbackEnviron)
VOID WINAPI kernel32.SetEventWhenCallbackReturns(_Inout_ PTP_CALLBACK_INSTANCE pci,_In_ HANDLE evt)
HANDLE WINAPI kernel32.CreateMutex(_In_opt_ LPSECURITY_ATTRIBUTES lpMutexAttributes,_In_ BOOL bInitialOwner,_In_opt_ LPCTSTR lpName)
HANDLE WINAPI kernel32.CreateMutexW(_In_opt_ LPSECURITY_ATTRIBUTES lpMutexAttributes,_In_ BOOL bInitialOwner,_In_opt_ LPCTSTR lpName)
HANDLE WINAPI kernel32.CreateMutexA(_In_opt_ LPSECURITY_ATTRIBUTES lpMutexAttributes,_In_ BOOL bInitialOwner,_In_opt_ LPCTSTR lpName)
BOOL WINAPI kernel32.GetThreadPriorityBoost(_In_ HANDLE hThread,_Out_ PBOOL pDisablePriorityBoost)
BOOL WINAPI kernel32.QueryProcessCycleTime(_In_ HANDLE ProcessHandle,_Out_ PULONG64 CycleTime)
DWORD WINAPI kernel32.GetEnvironmentVariable(_In_opt_ LPCTSTR lpName,_Out_opt_ LPTSTR lpBuffer,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetEnvironmentVariableW(_In_opt_ LPCTSTR lpName,_Out_opt_ LPTSTR lpBuffer,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetEnvironmentVariableA(_In_opt_ LPCTSTR lpName,_Out_opt_ LPTSTR lpBuffer,_In_ DWORD nSize)
BOOL WINAPI kernel32.DeleteUmsCompletionList(_In_ PUMS_COMPLETION_LIST UmsCompletionList)
BOOL WINAPI avrt.AvSetMmThreadPriority(_In_ HANDLE AvrtHandle,_In_ AVRT_PRIORITY Priority)
BOOL WINAPI kernel32.GetPhysicallyInstalledSystemMemory(_Out_ PULONGLONG TotalMemoryInKilobytes)
DWORD WINAPI kernel32.SuspendThread(_In_ HANDLE hThread)
VOID CALLBACK None.SimpleCallback(_Inout_ PTP_CALLBACK_INSTANCE Instance,_Inout_opt_ PVOID Context)
BOOL WINAPI kernel.GetDisplayAutoRotationPreferences(_Out_ ORIENTATION_PREFERENCE *pOrientation)
PTP_IO WINAPI kernel32.CreateThreadpoolIo(_In_ HANDLE fl,_In_ PTP_WIN32_IO_CALLBACK pfnio,_Inout_opt_ PVOID pv,_In_opt_ PTP_CALLBACK_ENVIRON pcbe)
DWORD WINAPI kernel32.GetPriorityClass(_In_ HANDLE hProcess)
DWORD WINAPI user32.WaitForInputIdle(_In_ HANDLE hProcess,_In_ DWORD dwMilliseconds)
BOOL WINAPI user32.GetMessage(_Out_ LPMSG lpMsg,_In_opt_ HWND hWnd,_In_ UINT wMsgFilterMin,_In_ UINT wMsgFilterMax)
BOOL WINAPI user32.GetMessageW(_Out_ LPMSG lpMsg,_In_opt_ HWND hWnd,_In_ UINT wMsgFilterMin,_In_ UINT wMsgFilterMax)
BOOL WINAPI user32.GetMessageA(_Out_ LPMSG lpMsg,_In_opt_ HWND hWnd,_In_ UINT wMsgFilterMin,_In_ UINT wMsgFilterMax)
BOOL WINAPI avrt.AvRtLeaveThreadOrderingGroup(_In_ HANDLE Context)
NTSTATUS WINAPI ntdll.NtQueryInformationThread(_In_ HANDLE ThreadHandle,_In_ THREADINFOCLASS ThreadInformationClass,_Inout_ PVOID ThreadInformation,_In_ ULONG ThreadInformationLength,_Out_opt_ PULONG ReturnLength)
VOID FORCEINLINE None.TpSetCallbackCleanupGroup(_Inout_ PTP_CALLBACK_ENVIRON CallbackEnviron,_In_ PTP_CLEANUP_GROUP CleanupGroup,_In_opt_ PTP_CLEANUP_GROUP_CANCEL_CALLBACK CleanupGroupCancelCallback)
HRESULT WINAPI shell32.SHGetFolderPathEx(_In_ REFKNOWNFOLDERID rfid,_In_ DWORD dwFlags,_In_opt_ HANDLE hToken,_Out_ LPWSTR pszPath,_In_ UINT cchPath)
BOOL WINAPI kernel32.GetSystemRegistryQuota(_Out_opt_ PDWORD pdwQuotaAllowed,_Out_opt_ PDWORD pdwQuotaUsed)
BOOL WINAPI kernel32.SetProcessWorkingSetSizeEx(_In_ HANDLE hProcess,_In_ SIZE_T dwMinimumWorkingSetSize,_In_ SIZE_T dwMaximumWorkingSetSize,_In_ DWORD Flags)
DWORD WINAPI kernel32.GetMappedFileName(_In_ HANDLE hProcess,_In_ LPVOID lpv,_Out_ LPTSTR lpFilename,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetMappedFileNameW(_In_ HANDLE hProcess,_In_ LPVOID lpv,_Out_ LPTSTR lpFilename,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetMappedFileNameA(_In_ HANDLE hProcess,_In_ LPVOID lpv,_Out_ LPTSTR lpFilename,_In_ DWORD nSize)
VOID WINAPI kernel32.SetThreadpoolWait(_Inout_ PTP_WAIT pwa,_In_opt_ HANDLE h,_In_opt_ PFILETIME pftTimeout)
BOOL WINAPI kernel32.GetFirmwareType(_Inout_ PFIRMWARE_TYPE FirmwareType)
BOOL WINAPI kernel32.HeapUnlock(_In_ HANDLE hHeap)
BOOL WINAPI kernel32.GetProcessIoCounters(_In_ HANDLE hProcess,_Out_ PIO_COUNTERS lpIoCounters)
BOOL WINAPI kernel32.IsProcessInJob(_In_ HANDLE ProcessHandle,_In_opt_ HANDLE JobHandle,_Out_ PBOOL Result)
VOID WINAPI kernel32.CloseThreadpoolWork(_Inout_ PTP_WORK pwk)
BOOL WINAPI kernel32.SetProcessMitigationPolicy(_In_ PROCESS_MITIGATION_POLICY MitigationPolicy,_In_ PVOID lpBuffer,_In_ SIZE_T dwLength)
BOOL WINAPI kernel32.TerminateThread(_Inout_ HANDLE hThread,_In_ DWORD dwExitCode)
BOOL WINAPI kernel32.NeedCurrentDirectoryForExePath(_In_ LPCTSTR ExeName)
BOOL WINAPI kernel32.NeedCurrentDirectoryForExePathW(_In_ LPCTSTR ExeName)
BOOL WINAPI kernel32.NeedCurrentDirectoryForExePathA(_In_ LPCTSTR ExeName)
BOOL WINAPI kernel32.FreeEnvironmentStrings(_In_ LPTCH lpszEnvironmentBlock)
BOOL WINAPI kernel32.FreeEnvironmentStringsW(_In_ LPTCH lpszEnvironmentBlock)
BOOL WINAPI kernel32.FreeEnvironmentStringsA(_In_ LPTCH lpszEnvironmentBlock)
PVOID WINAPI kernel32.FlsGetValue(_In_ DWORD dwFlsIndex)
BOOL WINAPI kernel32.SetThreadpoolTimerEx(_Inout_ PTP_TIMER pti,_In_opt_ PFILETIME pftDueTime,_In_ DWORD msPeriod,_In_opt_ DWORD msWindowLength)
NTSTATUS WINAPI ntdll.ZwQueryInformationProcess(_In_ HANDLE ProcessHandle,_In_ PROCESSINFOCLASS ProcessInformationClass,_Out_ PVOID ProcessInformation,_In_ ULONG ProcessInformationLength,_Out_opt_ PULONG ReturnLength)
BOOL WINAPI advapi32.SetTokenInformation(_In_ HANDLE TokenHandle,_In_ TOKEN_INFORMATION_CLASS TokenInformationClass,_In_ LPVOID TokenInformation,_In_ DWORD TokenInformationLength)
BOOL WINAPI kernel32.GetProcessDEPPolicy(_In_ HANDLE hProcess,_Out_ LPDWORD lpFlags,_Out_ PBOOL lpPermanent)
BOOL WINAPI kernel32.GetProcessMemoryInfo(_In_ HANDLE Process,_Out_ PPROCESS_MEMORY_COUNTERS ppsmemCounters,_In_ DWORD cb)
HANDLE WINAPI avrt.AvSetMmMaxThreadCharacteristics(_In_ LPCTSTR FirstTask,_In_ LPCTSTR SecondTask,_Inout_ LPDWORD TaskIndex)
HANDLE WINAPI avrt.AvSetMmMaxThreadCharacteristicsW(_In_ LPCTSTR FirstTask,_In_ LPCTSTR SecondTask,_Inout_ LPDWORD TaskIndex)
HANDLE WINAPI avrt.AvSetMmMaxThreadCharacteristicsA(_In_ LPCTSTR FirstTask,_In_ LPCTSTR SecondTask,_Inout_ LPDWORD TaskIndex)
BOOL WINAPI kernel32.IsProcessInJob(_In_ HANDLE ProcessHandle,_In_opt_ HANDLE JobHandle,_Out_ PBOOL Result)
BOOL WINAPI kernel32.TerminateJobObject(_In_ HANDLE hJob,_In_ UINT uExitCode)
BOOL WINAPI kernel32.ReleaseSemaphore(_In_ HANDLE hSemaphore,_In_ LONG lReleaseCount,_Out_opt_ LPLONG lpPreviousCount)
BOOL WINAPI kernel32.ReleaseSemaphore(_In_ HANDLE hSemaphore,_In_ LONG lReleaseCount,_Out_opt_ LPLONG lpPreviousCount)
BOOL WINAPI kernel32.QueryFullProcessImageName(_In_ HANDLE hProcess,_In_ DWORD dwFlags,_Out_ LPTSTR lpExeName,_Inout_ PDWORD lpdwSize)
BOOL WINAPI kernel32.QueryFullProcessImageNameW(_In_ HANDLE hProcess,_In_ DWORD dwFlags,_Out_ LPTSTR lpExeName,_Inout_ PDWORD lpdwSize)
BOOL WINAPI kernel32.QueryFullProcessImageNameA(_In_ HANDLE hProcess,_In_ DWORD dwFlags,_Out_ LPTSTR lpExeName,_Inout_ PDWORD lpdwSize)
VOID WINAPI kernel32.SetEventWhenCallbackReturns(_Inout_ PTP_CALLBACK_INSTANCE pci,_In_ HANDLE evt)
BOOL WINAPI kernel32.GetSystemCpuSetInformation(_Out_opt_ PSYSTEM_CPU_SET_INFORMATION Information,_In_ ULONG BufferLength,_Out_ PULONG ReturnedLength,_In_opt_ HANDLE Process,_Reserved_ ULONG Flags)
BOOL WINAPI kernel32.SetProcessWorkingSetSize(_In_ HANDLE hProcess,_In_ SIZE_T dwMinimumWorkingSetSize,_In_ SIZE_T dwMaximumWorkingSetSize)
BOOL WINAPI advapi32.CreateProcessWithTokenW(_In_ HANDLE hToken,_In_ DWORD dwLogonFlags,_In_opt_ LPCWSTR lpApplicationName,_Inout_opt_ LPWSTR lpCommandLine,_In_ DWORD dwCreationFlags,_In_opt_ LPVOID lpEnvironment,_In_opt_ LPCWSTR lpCurrentDirectory,_In_ LPSTARTUPINFOW lpStartupInfo,_Out_ LPPROCESS_INFORMATION lpProcessInfo)
BOOL WINAPI kernel32.InitOnceComplete(_Inout_ LPINIT_ONCE lpInitOnce,_In_ DWORD dwFlags,_In_opt_ LPVOID lpContext)
BOOL WINAPI kernel32.QueryProcessAffinityUpdateMode(_In_ HANDLE ProcessHandle,_Out_opt_ DWORD lpdwFlags)
BOOL WINAPI kernel32.InitializeProcessForWsWatch(_In_ HANDLE hProcess)
UINT WINAPI kernel32.GetSystemFirmwareTable(_In_ DWORD FirmwareTableProviderSignature,_In_ DWORD FirmwareTableID,_Out_ PVOID pFirmwareTableBuffer,_In_ DWORD BufferSize)
DWORD WINAPI kernel32.GetEnvironmentVariable(_In_opt_ LPCTSTR lpName,_Out_opt_ LPTSTR lpBuffer,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetEnvironmentVariableW(_In_opt_ LPCTSTR lpName,_Out_opt_ LPTSTR lpBuffer,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetEnvironmentVariableA(_In_opt_ LPCTSTR lpName,_Out_opt_ LPTSTR lpBuffer,_In_ DWORD nSize)
DWORD WINAPI kernelbase.SleepEx(_In_ DWORD dwMilliseconds,_In_ BOOL bAlertable)
BOOL WINAPI kernel32.GetNumaProximityNode(_In_ ULONG ProximityId,_Out_ PUCHAR NodeNumber)
BOOL WINBASEAPI kernel32.SetFirmwareEnvironmentVariableEx(_In_ LPCTSTR lpName,_In_ LPCTSTR lpGuid,_In_ PVOID pValue,_In_ DWORD nSize,_In_ DWORD dwAttributes)
BOOL WINBASEAPI kernel32.SetFirmwareEnvironmentVariableExW(_In_ LPCTSTR lpName,_In_ LPCTSTR lpGuid,_In_ PVOID pValue,_In_ DWORD nSize,_In_ DWORD dwAttributes)
BOOL WINBASEAPI kernel32.SetFirmwareEnvironmentVariableExA(_In_ LPCTSTR lpName,_In_ LPCTSTR lpGuid,_In_ PVOID pValue,_In_ DWORD nSize,_In_ DWORD dwAttributes)
VOID WINAPI kernel32.CloseThreadpoolIo(_Inout_ PTP_IO pio)
VOID WINAPI kernel32.WaitForThreadpoolTimerCallbacks(_Inout_ PTP_TIMER pti,_In_ BOOL fCancelPendingCallbacks)
PTP_TIMER WINAPI kernel32.CreateThreadpoolTimer(_In_ PTP_TIMER_CALLBACK pfnti,_Inout_opt_ PVOID pv,_In_opt_ PTP_CALLBACK_ENVIRON pcbe)
HANDLE WINAPI kernel32.OpenEvent(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpName)
HANDLE WINAPI kernel32.OpenEventW(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpName)
HANDLE WINAPI kernel32.OpenEventA(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpName)
VOID CALLBACK None.WorkCallback(_Inout_ PTP_CALLBACK_INSTANCE Instance,_Inout_opt_ PVOID Context,_Inout_ PTP_WORK Work)
BOOL WINAPI kernel32.HeapQueryInformation(_In_opt_ HANDLE HeapHandle,_In_ HEAP_INFORMATION_CLASS HeapInformationClass,_Out_ PVOID HeapInformation,_In_ SIZE_T HeapInformationLength,_Out_opt_ PSIZE_T ReturnLength)
BOOL WINAPI kernel32.GetComputerName(_Out_ LPTSTR lpBuffer,_Inout_ LPDWORD lpnSize)
BOOL WINAPI kernel32.GetComputerNameW(_Out_ LPTSTR lpBuffer,_Inout_ LPDWORD lpnSize)
BOOL WINAPI kernel32.GetComputerNameA(_Out_ LPTSTR lpBuffer,_Inout_ LPDWORD lpnSize)
BOOL WINAPI kernel32.IsNativeVhdBoot(_Out_ PBOOL *NativeVhdBoot)
BOOL WINAPI kernel32.RegisterWaitForSingleObject(_Out_ PHANDLE phNewWaitObject,_In_ HANDLE hObject,_In_ WAITORTIMERCALLBACK Callback,_In_opt_ PVOID Context,_In_ ULONG dwMilliseconds,_In_ ULONG dwFlags)
DWORD WINAPI kernel32.GetPriorityClass(_In_ HANDLE hProcess)
BOOL WINAPI api-ms-win-core-apiquery-l1-1-0.ApiSetQueryApiSetPresence(_In_ PCUNICODE_STRING Namespace,_Out_ PBOOLEAN Present)
BOOL WINAPI kernel32.GetComputerNameEx(_In_ COMPUTER_NAME_FORMAT NameType,_Out_ LPTSTR lpBuffer,_Inout_ LPDWORD lpnSize)
BOOL WINAPI kernel32.GetComputerNameExW(_In_ COMPUTER_NAME_FORMAT NameType,_Out_ LPTSTR lpBuffer,_Inout_ LPDWORD lpnSize)
BOOL WINAPI kernel32.GetComputerNameExA(_In_ COMPUTER_NAME_FORMAT NameType,_Out_ LPTSTR lpBuffer,_Inout_ LPDWORD lpnSize)
BOOL WINAPI kernel32.InitializeProcessForWsWatch(_In_ HANDLE hProcess)
DWORD WINAPI kernel32.GetDeviceDriverFileName(_In_ LPVOID ImageBase,_Out_ LPTSTR lpFilename,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetDeviceDriverFileNameW(_In_ LPVOID ImageBase,_Out_ LPTSTR lpFilename,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetDeviceDriverFileNameA(_In_ LPVOID ImageBase,_Out_ LPTSTR lpFilename,_In_ DWORD nSize)
VOID WINAPI kernel32.FreeLibraryWhenCallbackReturns(_Inout_ PTP_CALLBACK_INSTANCE pci,_In_ HMODULE mod)
VOID FORCEINLINE None.TpSetCallbackRaceWithDll(_Inout_ PTP_CALLBACK_ENVIRON CallbackEnviron,_In_ PVOID DllHandle)
BOOL WINAPI kernel32.QueryProcessCycleTime(_In_ HANDLE ProcessHandle,_Out_ PULONG64 CycleTime)
BOOL WINAPI kernel32.GetProcessMitigationPolicy(_In_ HANDLE hProcess,_In_ PROCESS_MITIGATION_POLICY MitigationPolicy,_Out_ PVOID lpBuffer,_In_ SIZE_T dwLength)
BOOL WINAPI kernel32.GetProcessMemoryInfo(_In_ HANDLE Process,_Out_ PPROCESS_MEMORY_COUNTERS ppsmemCounters,_In_ DWORD cb)
PVOID WINAPI kernel32.MapViewOfFileFromApp(_In_ HANDLE hFileMappingObject,_In_ ULONG DesiredAccess,_In_ ULONG64 FileOffset,_In_ SIZE_T NumberOfBytesToMap)
BOOL WINAPI kernel32.EnumPageFiles(_Out_ PENUM_PAGE_CALLBACK pCallbackRoutine,_In_ LPVOID lpContext)
BOOL WINAPI kernel32.EnumPageFilesW(_Out_ PENUM_PAGE_CALLBACK pCallbackRoutine,_In_ LPVOID lpContext)
BOOL WINAPI kernel32.EnumPageFilesA(_Out_ PENUM_PAGE_CALLBACK pCallbackRoutine,_In_ LPVOID lpContext)
BOOL WINAPI kernel32.SetThreadPriorityBoost(_In_ HANDLE hThread,_In_ BOOL DisablePriorityBoost)
HANDLE WINAPI kernel32.OpenThread(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ DWORD dwThreadId)
UINT WINAPI kernel32.GetSystemDirectory(_Out_ LPTSTR lpBuffer,_In_ UINT uSize)
UINT WINAPI kernel32.GetSystemDirectoryW(_Out_ LPTSTR lpBuffer,_In_ UINT uSize)
UINT WINAPI kernel32.GetSystemDirectoryA(_Out_ LPTSTR lpBuffer,_In_ UINT uSize)
VOID WINAPI kernel32.FreeMemoryJobObject(_In_ VOID *Buffer)
BOOL WINAPI kernel32.QueryPerformanceFrequency(_Out_ LARGE_INTEGER *lpFrequency)
BOOL WINAPI kernel32.QueryInformationJobObject(_In_opt_ HANDLE hJob,_In_ JOBOBJECTINFOCLASS JobObjectInfoClass,_Out_ LPVOID lpJobObjectInfo,_In_ DWORD cbJobObjectInfoLength,_Out_opt_ LPDWORD lpReturnLength)
NTSTATUS NTAPI ntdll.NtCompareTokens(_In_ HANDLE FirstTokenHandle,_In_ HANDLE SecondTokenHandle,_Out_ PBOOLEAN Equal)
BOOL WINAPI advapi32.GetCurrentHwProfile(_Out_ LPHW_PROFILE_INFO lpHwProfileInfo)
BOOL WINAPI advapi32.GetCurrentHwProfileW(_Out_ LPHW_PROFILE_INFO lpHwProfileInfo)
BOOL WINAPI advapi32.GetCurrentHwProfileA(_Out_ LPHW_PROFILE_INFO lpHwProfileInfo)
HANDLE WINAPI kernel32.OpenProcess(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ DWORD dwProcessId)
BOOL WINAPI kernel32.SetProtectedPolicy(_In_ LPCGUID PolicyGuid,_In_ ULONG_PTR PolicyValue,_Out_ PULONG_PTR OldPolicyValue)
BOOL WINAPI advapi32.GetAce(_In_ PACL pAcl,_In_ DWORD dwAceIndex,_Out_ LPVOID *pAce)
BOOL WINAPI kernel32.InitializeProcessForWsWatch(_In_ HANDLE hProcess)
DWORD WINAPI kernel32.GetMappedFileName(_In_ HANDLE hProcess,_In_ LPVOID lpv,_Out_ LPTSTR lpFilename,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetMappedFileNameW(_In_ HANDLE hProcess,_In_ LPVOID lpv,_Out_ LPTSTR lpFilename,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetMappedFileNameA(_In_ HANDLE hProcess,_In_ LPVOID lpv,_Out_ LPTSTR lpFilename,_In_ DWORD nSize)
UINT WINAPI kernel32.GetWindowsDirectory(_Out_ LPTSTR lpBuffer,_In_ UINT uSize)
UINT WINAPI kernel32.GetWindowsDirectoryW(_Out_ LPTSTR lpBuffer,_In_ UINT uSize)
UINT WINAPI kernel32.GetWindowsDirectoryA(_Out_ LPTSTR lpBuffer,_In_ UINT uSize)
BOOL WINAPI kernel32.GetComputerName(_Out_ LPTSTR lpBuffer,_Inout_ LPDWORD lpnSize)
BOOL WINAPI kernel32.GetComputerNameW(_Out_ LPTSTR lpBuffer,_Inout_ LPDWORD lpnSize)
BOOL WINAPI kernel32.GetComputerNameA(_Out_ LPTSTR lpBuffer,_Inout_ LPDWORD lpnSize)
BOOL WINAPI kernel32.InitializeProcThreadAttributeList(_Out_opt_ LPPROC_THREAD_ATTRIBUTE_LIST lpAttributeList,_In_ DWORD dwAttributeCount,_Reserved_ DWORD dwFlags,_Inout_ PSIZE_T lpSize)
PSLIST_ENTRY WINAPI ntdll.RtlFirstEntrySList(_In_ PSLIST_HEADER ListHead)
BOOL WINAPI kernel32.GetVersionEx(_Inout_ LPOSVERSIONINFO lpVersionInfo)
BOOL WINAPI kernel32.GetVersionExW(_Inout_ LPOSVERSIONINFO lpVersionInfo)
BOOL WINAPI kernel32.GetVersionExA(_Inout_ LPOSVERSIONINFO lpVersionInfo)
BOOL WINAPI kernel32.GetComputerName(_Out_ LPTSTR lpBuffer,_Inout_ LPDWORD lpnSize)
BOOL WINAPI kernel32.GetComputerNameW(_Out_ LPTSTR lpBuffer,_Inout_ LPDWORD lpnSize)
BOOL WINAPI kernel32.GetComputerNameA(_Out_ LPTSTR lpBuffer,_Inout_ LPDWORD lpnSize)
BOOL WINAPI kernel32.GetFirmwareType(_Inout_ PFIRMWARE_TYPE FirmwareType)
BOOL WINAPI kernel32.GetModuleInformation(_In_ HANDLE hProcess,_In_ HMODULE hModule,_Out_ LPMODULEINFO lpmodinfo,_In_ DWORD cb)
BOOL WINAPI kernel32.QueryPerformanceFrequency(_Out_ LARGE_INTEGER *lpFrequency)
VOID CALLBACK None.WaitCallback(_Inout_ PTP_CALLBACK_INSTANCE Instance,_Inout_opt_ PVOID Context,_Inout_ PTP_WAIT Wait,_In_ TP_WAIT_RESULT WaitResult)
BOOL WINAPI advapi32.SetPrivateObjectSecurityEx(_In_ SECURITY_INFORMATION SecurityInformation,_In_ PSECURITY_DESCRIPTOR ModificationDescriptor,_Inout_ PSECURITY_DESCRIPTOR *ObjectsSecurityDescriptor,_In_ ULONG AutoInheritFlags,_In_ PGENERIC_MAPPING GenericMapping,_In_opt_ HANDLE Token)
BOOL WINAPI kernel32.GetLogicalProcessorInformation(_Out_ PSYSTEM_LOGICAL_PROCESSOR_INFORMATION Buffer,_Inout_ PDWORD ReturnLength)
DWORD WINAPI kernel32.GetPriorityClass(_In_ HANDLE hProcess)
BOOL WINAPI avrt.AvRtLeaveThreadOrderingGroup(_In_ HANDLE Context)
BOOL WINAPI kernel32.VerifyVersionInfo(_In_ LPOSVERSIONINFOEX lpVersionInfo,_In_ DWORD dwTypeMask,_In_ DWORDLONG dwlConditionMask)
BOOL WINAPI kernel32.VerifyVersionInfoW(_In_ LPOSVERSIONINFOEX lpVersionInfo,_In_ DWORD dwTypeMask,_In_ DWORDLONG dwlConditionMask)
BOOL WINAPI kernel32.VerifyVersionInfoA(_In_ LPOSVERSIONINFOEX lpVersionInfo,_In_ DWORD dwTypeMask,_In_ DWORDLONG dwlConditionMask)
DWORD WINAPI kernel32.GetMappedFileName(_In_ HANDLE hProcess,_In_ LPVOID lpv,_Out_ LPTSTR lpFilename,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetMappedFileNameW(_In_ HANDLE hProcess,_In_ LPVOID lpv,_Out_ LPTSTR lpFilename,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetMappedFileNameA(_In_ HANDLE hProcess,_In_ LPVOID lpv,_Out_ LPTSTR lpFilename,_In_ DWORD nSize)
PVOID WINAPI kernel32.MapViewOfFileFromApp(_In_ HANDLE hFileMappingObject,_In_ ULONG DesiredAccess,_In_ ULONG64 FileOffset,_In_ SIZE_T NumberOfBytesToMap)
DWORD WINAPI user32.WaitForInputIdle(_In_ HANDLE hProcess,_In_ DWORD dwMilliseconds)
BOOL WINBASEAPI kernel32.SetFirmwareEnvironmentVariableEx(_In_ LPCTSTR lpName,_In_ LPCTSTR lpGuid,_In_ PVOID pValue,_In_ DWORD nSize,_In_ DWORD dwAttributes)
BOOL WINBASEAPI kernel32.SetFirmwareEnvironmentVariableExW(_In_ LPCTSTR lpName,_In_ LPCTSTR lpGuid,_In_ PVOID pValue,_In_ DWORD nSize,_In_ DWORD dwAttributes)
BOOL WINBASEAPI kernel32.SetFirmwareEnvironmentVariableExA(_In_ LPCTSTR lpName,_In_ LPCTSTR lpGuid,_In_ PVOID pValue,_In_ DWORD nSize,_In_ DWORD dwAttributes)
DWORD WINAPI kernel32.GetMappedFileName(_In_ HANDLE hProcess,_In_ LPVOID lpv,_Out_ LPTSTR lpFilename,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetMappedFileNameW(_In_ HANDLE hProcess,_In_ LPVOID lpv,_Out_ LPTSTR lpFilename,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetMappedFileNameA(_In_ HANDLE hProcess,_In_ LPVOID lpv,_Out_ LPTSTR lpFilename,_In_ DWORD nSize)
BOOL WINAPI advapi32.GetUserName(_Out_ LPTSTR lpBuffer,_Inout_ LPDWORD lpnSize)
BOOL WINAPI advapi32.GetUserNameW(_Out_ LPTSTR lpBuffer,_Inout_ LPDWORD lpnSize)
BOOL WINAPI advapi32.GetUserNameA(_Out_ LPTSTR lpBuffer,_Inout_ LPDWORD lpnSize)
VOID WINAPI kernel32.FreeMemoryJobObject(_In_ VOID *Buffer)
BOOL WINAPI kernel32.EnumProcesses(_Out_ DWORD *pProcessIds,_In_ DWORD cb,_Out_ DWORD *pBytesReturned)
VOID FORCEINLINE None.TpSetCallbackFinalizationCallback(_Inout_ PTP_CALLBACK_ENVIRON CallbackEnviron,_In_ PTP_SIMPLE_CALLBACK FinalizationCallback)
BOOL WINAPI kernel32.FlsSetValue(_In_ DWORD dwFlsIndex,_In_opt_ PVOID lpFlsData)
BOOL WINAPI kernel32.CheckTokenCapability(_In_opt_ HANDLE TokenHandle,_In_ PSID CapabilitySidToCheck,_Out_ PBOOL HasCapability)
BOOL WINAPI kernel32.SetProcessAffinityMask(_In_ HANDLE hProcess,_In_ DWORD_PTR dwProcessAffinityMask)
BOOL WINAPI advapi32.ConvertToAutoInheritPrivateObjectSecurity(_In_opt_ PSECURITY_DESCRIPTOR ParentDescriptor,_In_ PSECURITY_DESCRIPTOR CurrentSecurityDescriptor,_Out_ PSECURITY_DESCRIPTOR *NewSecurityDescriptor,_In_opt_ GUID *ObjectType,_In_ BOOLEAN IsDirectoryObject,_In_ PGENERIC_MAPPING GenericMapping)
BOOL WINAPI advapi32.AccessCheckByTypeAndAuditAlarm(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ LPCTSTR ObjectTypeName,_In_opt_ LPCTSTR ObjectName,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_opt_ PSID PrincipalSelfSid,_In_ DWORD DesiredAccess,_In_ AUDIT_EVENT_TYPE AuditType,_In_ DWORD Flags,_Inout_opt_ POBJECT_TYPE_LIST ObjectTypeList,_In_ DWORD ObjectTypeListLength,_In_ PGENERIC_MAPPING GenericMapping,_In_ BOOL ObjectCreation,_Out_ LPDWORD GrantedAccess,_Out_ LPBOOL AccessStatus,_Out_ LPBOOL pfGenerateOnClose)
BOOL WINAPI advapi32.AccessCheckByTypeAndAuditAlarmW(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ LPCTSTR ObjectTypeName,_In_opt_ LPCTSTR ObjectName,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_opt_ PSID PrincipalSelfSid,_In_ DWORD DesiredAccess,_In_ AUDIT_EVENT_TYPE AuditType,_In_ DWORD Flags,_Inout_opt_ POBJECT_TYPE_LIST ObjectTypeList,_In_ DWORD ObjectTypeListLength,_In_ PGENERIC_MAPPING GenericMapping,_In_ BOOL ObjectCreation,_Out_ LPDWORD GrantedAccess,_Out_ LPBOOL AccessStatus,_Out_ LPBOOL pfGenerateOnClose)
BOOL WINAPI advapi32.AccessCheckByTypeAndAuditAlarmA(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ LPCTSTR ObjectTypeName,_In_opt_ LPCTSTR ObjectName,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_opt_ PSID PrincipalSelfSid,_In_ DWORD DesiredAccess,_In_ AUDIT_EVENT_TYPE AuditType,_In_ DWORD Flags,_Inout_opt_ POBJECT_TYPE_LIST ObjectTypeList,_In_ DWORD ObjectTypeListLength,_In_ PGENERIC_MAPPING GenericMapping,_In_ BOOL ObjectCreation,_Out_ LPDWORD GrantedAccess,_Out_ LPBOOL AccessStatus,_Out_ LPBOOL pfGenerateOnClose)
DWORD WINAPI kernel32.ExpandEnvironmentStrings(_In_ LPCTSTR lpSrc,_Out_opt_ LPTSTR lpDst,_In_ DWORD nSize)
DWORD WINAPI kernel32.ExpandEnvironmentStringsW(_In_ LPCTSTR lpSrc,_Out_opt_ LPTSTR lpDst,_In_ DWORD nSize)
DWORD WINAPI kernel32.ExpandEnvironmentStringsA(_In_ LPCTSTR lpSrc,_Out_opt_ LPTSTR lpDst,_In_ DWORD nSize)
BOOL WINAPI kernel32.GetComputerName(_Out_ LPTSTR lpBuffer,_Inout_ LPDWORD lpnSize)
BOOL WINAPI kernel32.GetComputerNameW(_Out_ LPTSTR lpBuffer,_Inout_ LPDWORD lpnSize)
BOOL WINAPI kernel32.GetComputerNameA(_Out_ LPTSTR lpBuffer,_Inout_ LPDWORD lpnSize)
ULONGLONG WINAPI kernel32.VerSetConditionMask(_In_ ULONGLONG dwlConditionMask,_In_ DWORD dwTypeBitMask,_In_ BYTE dwConditionMask)
BOOL WINAPI kernel32.GetSystemRegistryQuota(_Out_opt_ PDWORD pdwQuotaAllowed,_Out_opt_ PDWORD pdwQuotaUsed)
BOOL WINAPI kernel32.GetSystemRegistryQuota(_Out_opt_ PDWORD pdwQuotaAllowed,_Out_opt_ PDWORD pdwQuotaUsed)
VOID WINAPI kernel32.CloseThreadpoolCleanupGroup(_Inout_ PTP_CLEANUP_GROUP ptpcg)
BOOL WINAPI kernel32.GetProcessHandleCount(_In_ HANDLE hProcess,_Inout_ PDWORD pdwHandleCount)
BOOL WINAPI kernel32.GetVersionEx(_Inout_ LPOSVERSIONINFO lpVersionInfo)
BOOL WINAPI kernel32.GetVersionExW(_Inout_ LPOSVERSIONINFO lpVersionInfo)
BOOL WINAPI kernel32.GetVersionExA(_Inout_ LPOSVERSIONINFO lpVersionInfo)
BOOL WINAPI kernel32.GetVersionEx(_Inout_ LPOSVERSIONINFO lpVersionInfo)
BOOL WINAPI kernel32.GetVersionExW(_Inout_ LPOSVERSIONINFO lpVersionInfo)
BOOL WINAPI kernel32.GetVersionExA(_Inout_ LPOSVERSIONINFO lpVersionInfo)
BOOL WINAPI kernel32.SetProcessAffinityUpdateMode(_In_ HANDLE ProcessHandle,_In_ DWORD dwFlags)
DWORD WINAPI kernel32.GetModuleBaseName(_In_ HANDLE hProcess,_In_opt_ HMODULE hModule,_Out_ LPTSTR lpBaseName,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetModuleBaseNameW(_In_ HANDLE hProcess,_In_opt_ HMODULE hModule,_Out_ LPTSTR lpBaseName,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetModuleBaseNameA(_In_ HANDLE hProcess,_In_opt_ HMODULE hModule,_Out_ LPTSTR lpBaseName,_In_ DWORD nSize)
NTSTATUS WINAPI ntdll.ZwQuerySystemInformation(_In_ SYSTEM_INFORMATION_CLASS SystemInformationClass,_Inout_ PVOID SystemInformation,_In_ ULONG SystemInformationLength,_Out_opt_ PULONG ReturnLength)
BOOL WINAPI kernel32.GetWsChanges(_In_ HANDLE hProcess,_Out_ PPSAPI_WS_WATCH_INFORMATION lpWatchInfo,_In_ DWORD cb)
BOOL WINAPI kernel32.EnumDeviceDrivers(_Out_ LPVOID *lpImageBase,_In_ DWORD cb,_Out_ LPDWORD lpcbNeeded)
VOID WINAPI kernel32.ReleaseSemaphoreWhenCallbackReturns(_Inout_ PTP_CALLBACK_INSTANCE pci,_In_ HANDLE sem,_In_ DWORD crel)
BOOL WINAPI kernel32.IsNativeVhdBoot(_Out_ PBOOL *NativeVhdBoot)
BOOLEAN WINAPI advapi32.AuditLookupCategoryGuidFromCategoryId(_In_ POLICY_AUDIT_EVENT_TYPE AuditCategoryId,_Out_ GUID *pAuditCategoryGuid)
VOID WINAPI kernel32.ReleaseMutexWhenCallbackReturns(_Inout_ PTP_CALLBACK_INSTANCE pci,_In_ HANDLE mut)
BOOL WINAPI kernel32.GetSystemTimes(_Out_opt_ LPFILETIME lpIdleTime,_Out_opt_ LPFILETIME lpKernelTime,_Out_opt_ LPFILETIME lpUserTime)
BOOL WINAPI kernel32.SetProcessPriorityBoost(_In_ HANDLE hProcess,_In_ BOOL DisablePriorityBoost)
HANDLE WINAPI kernel32.CreateJobObject(_In_opt_ LPSECURITY_ATTRIBUTES lpJobAttributes,_In_opt_ LPCTSTR lpName)
HANDLE WINAPI kernel32.CreateJobObjectW(_In_opt_ LPSECURITY_ATTRIBUTES lpJobAttributes,_In_opt_ LPCTSTR lpName)
HANDLE WINAPI kernel32.CreateJobObjectA(_In_opt_ LPSECURITY_ATTRIBUTES lpJobAttributes,_In_opt_ LPCTSTR lpName)
BOOL WINAPI kernel32.GetNumaHighestNodeNumber(_Out_ PULONG HighestNodeNumber)
UINT WINAPI kernel32.GetWindowsDirectory(_Out_ LPTSTR lpBuffer,_In_ UINT uSize)
UINT WINAPI kernel32.GetWindowsDirectoryW(_Out_ LPTSTR lpBuffer,_In_ UINT uSize)
UINT WINAPI kernel32.GetWindowsDirectoryA(_Out_ LPTSTR lpBuffer,_In_ UINT uSize)
BOOL WINAPI advapi32.GetSecurityDescriptorSacl(_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_Out_ LPBOOL lpbSaclPresent,_Out_ PACL *pSacl,_Out_ LPBOOL lpbSaclDefaulted)
BOOLEAN WINAPI secur32.TranslateName(_In_ LPCTSTR lpAccountName,_In_ EXTENDED_NAME_FORMAT AccountNameFormat,_In_ EXTENDED_NAME_FORMAT DesiredNameFormat,_Out_ LPTSTR lpTranslatedName,_Inout_ PULONG nSize)
BOOLEAN WINAPI secur32.TranslateNameW(_In_ LPCTSTR lpAccountName,_In_ EXTENDED_NAME_FORMAT AccountNameFormat,_In_ EXTENDED_NAME_FORMAT DesiredNameFormat,_Out_ LPTSTR lpTranslatedName,_Inout_ PULONG nSize)
BOOLEAN WINAPI secur32.TranslateNameA(_In_ LPCTSTR lpAccountName,_In_ EXTENDED_NAME_FORMAT AccountNameFormat,_In_ EXTENDED_NAME_FORMAT DesiredNameFormat,_Out_ LPTSTR lpTranslatedName,_Inout_ PULONG nSize)
DWORD WINAPI advapi32.SetSecurityDescriptorRMControl(_Inout_ PSECURITY_DESCRIPTOR SecurityDescriptor,_In_opt_ PUCHAR RMControl)
UINT WINAPI kernel32.WinExec(_In_ LPCSTR lpCmdLine,_In_ UINT uCmdShow)
BOOL WINAPI kernel32.SetComputerName(_In_ LPCTSTR lpComputerName)
BOOL WINAPI kernel32.SetComputerNameW(_In_ LPCTSTR lpComputerName)
BOOL WINAPI kernel32.SetComputerNameA(_In_ LPCTSTR lpComputerName)
PTP_POOL WINAPI kernel32.CreateThreadpool(_Reserved_ PVOID reserved)
BOOL WINAPI kernel32.DnsHostnameToComputerName(_In_ LPCTSTR Hostname,_Out_ LPTSTR ComputerName,_Inout_ LPDWORD nSize)
BOOL WINAPI kernel32.DnsHostnameToComputerNameW(_In_ LPCTSTR Hostname,_Out_ LPTSTR ComputerName,_Inout_ LPDWORD nSize)
BOOL WINAPI kernel32.DnsHostnameToComputerNameA(_In_ LPCTSTR Hostname,_Out_ LPTSTR ComputerName,_Inout_ LPDWORD nSize)
BOOL WINAPI kernel.SetDisplayAutoRotationPreferences(_In_ ORIENTATION_PREFERENCE *pOrientation)
BOOL WINAPI kernel32.IsWow64Process(_In_ HANDLE hProcess,_Out_ PBOOL Wow64Process)
BOOL WINAPI kernel32.HeapLock(_In_ HANDLE hHeap)
BOOL WINAPI userenv.DeleteProfile(_In_ LPCTSTR lpSidString,_In_opt_ LPCTSTR lpProfilePath,_In_opt_ LPCTSTR lpComputerName)
BOOL WINAPI userenv.DeleteProfileW(_In_ LPCTSTR lpSidString,_In_opt_ LPCTSTR lpProfilePath,_In_opt_ LPCTSTR lpComputerName)
BOOL WINAPI userenv.DeleteProfileA(_In_ LPCTSTR lpSidString,_In_opt_ LPCTSTR lpProfilePath,_In_opt_ LPCTSTR lpComputerName)
BOOL WINAPI userenv.DestroyEnvironmentBlock(_In_ LPVOID lpEnvironment)
VOID WINAPI kernel32.GetStartupInfo(_Out_ LPSTARTUPINFO lpStartupInfo)
VOID WINAPI kernel32.GetStartupInfoW(_Out_ LPSTARTUPINFO lpStartupInfo)
VOID WINAPI kernel32.GetStartupInfoA(_Out_ LPSTARTUPINFO lpStartupInfo)
BOOL WINAPI kernel32.SetPriorityClass(_In_ HANDLE hProcess,_In_ DWORD dwPriorityClass)
BOOL WINAPI advapi32.GetKernelObjectSecurity(_In_ HANDLE Handle,_In_ SECURITY_INFORMATION RequestedInformation,_Out_opt_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_ DWORD nLength,_Out_ LPDWORD lpnLengthNeeded)
BOOL WINAPI kernel32.GetFirmwareType(_Inout_ PFIRMWARE_TYPE FirmwareType)
UINT WINAPI kernel32.EnumSystemFirmwareTables(_In_ DWORD FirmwareTableProviderSignature,_Out_ PVOID pFirmwareTableBuffer,_In_ DWORD BufferSize)
BOOL WINAPI kernel32.ExecuteUmsThread(_Inout_ PUMS_CONTEXT UmsThread)
DWORD WINAPI advapi32.GetExplicitEntriesFromAcl(_In_ PACL pacl,_Out_ PULONG pcCountOfExplicitEntries,_Out_ PEXPLICIT_ACCESS *pListOfExplicitEntries)
DWORD WINAPI advapi32.GetExplicitEntriesFromAclW(_In_ PACL pacl,_Out_ PULONG pcCountOfExplicitEntries,_Out_ PEXPLICIT_ACCESS *pListOfExplicitEntries)
DWORD WINAPI advapi32.GetExplicitEntriesFromAclA(_In_ PACL pacl,_Out_ PULONG pcCountOfExplicitEntries,_Out_ PEXPLICIT_ACCESS *pListOfExplicitEntries)
BOOL WINAPI kernel32.VerifyVersionInfo(_In_ LPOSVERSIONINFOEX lpVersionInfo,_In_ DWORD dwTypeMask,_In_ DWORDLONG dwlConditionMask)
BOOL WINAPI kernel32.VerifyVersionInfoW(_In_ LPOSVERSIONINFOEX lpVersionInfo,_In_ DWORD dwTypeMask,_In_ DWORDLONG dwlConditionMask)
BOOL WINAPI kernel32.VerifyVersionInfoA(_In_ LPOSVERSIONINFOEX lpVersionInfo,_In_ DWORD dwTypeMask,_In_ DWORDLONG dwlConditionMask)
DWORD WINAPI advapi32.SetNamedSecurityInfo(_In_ LPTSTR pObjectName,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_In_opt_ PSID psidOwner,_In_opt_ PSID psidGroup,_In_opt_ PACL pDacl,_In_opt_ PACL pSacl)
DWORD WINAPI advapi32.SetNamedSecurityInfoW(_In_ LPTSTR pObjectName,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_In_opt_ PSID psidOwner,_In_opt_ PSID psidGroup,_In_opt_ PACL pDacl,_In_opt_ PACL pSacl)
DWORD WINAPI advapi32.SetNamedSecurityInfoA(_In_ LPTSTR pObjectName,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_In_opt_ PSID psidOwner,_In_opt_ PSID psidGroup,_In_opt_ PACL pDacl,_In_opt_ PACL pSacl)
UINT WINAPI kernel32.GetSystemFirmwareTable(_In_ DWORD FirmwareTableProviderSignature,_In_ DWORD FirmwareTableID,_Out_ PVOID pFirmwareTableBuffer,_In_ DWORD BufferSize)
BOOL WINAPI advapi32.GetSecurityDescriptorOwner(_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_Out_ PSID *pOwner,_Out_ LPBOOL lpbOwnerDefaulted)
NTSTATUS WINAPI ntdll.ZwQuerySystemInformation(_In_ SYSTEM_INFORMATION_CLASS SystemInformationClass,_Inout_ PVOID SystemInformation,_In_ ULONG SystemInformationLength,_Out_opt_ PULONG ReturnLength)
PDWORD WINAPI advapi32.GetSidSubAuthority(_In_ PSID pSid,_In_ DWORD nSubAuthority)
VOID WINAPI kernel32.SetEventWhenCallbackReturns(_Inout_ PTP_CALLBACK_INSTANCE pci,_In_ HANDLE evt)
BOOLEAN WINAPI advapi32.AuditEnumerateCategories(_Out_ GUID **ppAuditCategoriesArray,_Out_ PULONG pCountReturned)
BOOL CALLBACK None.AuthzComputeGroupsCallback(_In_ AUTHZ_CLIENT_CONTEXT_HANDLE hAuthzClientContext,_In_ PVOID Args,_Out_ PSID_AND_ATTRIBUTES *pSidAttrArray,_Out_ PDWORD pSidCount,_Out_ PSID_AND_ATTRIBUTES *pRestrictedSidAttrArray,_Out_ PDWORD pRestrictedSidCount)
BOOL WINAPI advapi32.DuplicateTokenEx(_In_ HANDLE hExistingToken,_In_ DWORD dwDesiredAccess,_In_opt_ LPSECURITY_ATTRIBUTES lpTokenAttributes,_In_ SECURITY_IMPERSONATION_LEVEL ImpersonationLevel,_In_ TOKEN_TYPE TokenType,_Out_ PHANDLE phNewToken)
DWORD WINAPI None.ThreadProc(_In_ LPVOID lpParameter)
BOOL WINAPI kernel32.GetProductInfo(_In_ DWORD dwOSMajorVersion,_In_ DWORD dwOSMinorVersion,_In_ DWORD dwSpMajorVersion,_In_ DWORD dwSpMinorVersion,_Out_ PDWORD pdwReturnedProductType)
BOOL WINAPI kernel32.SetEnvironmentVariable(_In_ LPCTSTR lpName,_In_opt_ LPCTSTR lpValue)
BOOL WINAPI kernel32.SetEnvironmentVariableW(_In_ LPCTSTR lpName,_In_opt_ LPCTSTR lpValue)
BOOL WINAPI kernel32.SetEnvironmentVariableA(_In_ LPCTSTR lpName,_In_opt_ LPCTSTR lpValue)
TRUSTEE_TYPE WINAPI advapi32.GetTrusteeType(_In_opt_ PTRUSTEE pTrustee)
TRUSTEE_TYPE WINAPI advapi32.GetTrusteeTypeW(_In_opt_ PTRUSTEE pTrustee)
TRUSTEE_TYPE WINAPI advapi32.GetTrusteeTypeA(_In_opt_ PTRUSTEE pTrustee)
BOOL WINAPI advapi32.AddAccessDeniedAce(_Inout_ PACL pAcl,_In_ DWORD dwAceRevision,_In_ DWORD AccessMask,_In_ PSID pSid)
BOOL WINAPI kernel32.GetThreadIOPendingFlag(_In_ HANDLE hThread,_Inout_ PBOOL lpIOIsPending)
BOOL CALLBACK None.AuthzFreeCentralAccessPolicyCallback(_In_ PVOID pCentralAccessPolicy)
BOOL WINAPI advapi32.AddAccessDeniedObjectAce(_Inout_ PACL pAcl,_In_ DWORD dwAceRevision,_In_ DWORD AceFlags,_In_ DWORD AccessMask,_In_opt_ GUID *ObjectTypeGuid,_In_opt_ GUID *InheritedObjectTypeGuid,_In_ PSID pSid)
NTSTATUS WINAPI ntdll.RtlConvertSidToUnicodeString(_Out_ PUNICODE_STRING UnicodeString,_In_ PSID Sid,_In_ BOOLEAN AllocateDestinationString)
BOOL __inline None.IDListContainerIsConsistent(_In_ PCUIDLIST_RELATIVE pidl,_In_ UINT cbAlloc)
VOID WINAPI kernel32.CloseThreadpoolWork(_Inout_ PTP_WORK pwk)
VOID WINAPI None.FlsCallback(_In_ PVOID lpFlsData)
VOID WINAPI advapi32.QuerySecurityAccessMask(_In_ SECURITY_INFORMATION SecurityInformation,_Out_ LPDWORD DesiredAccess)
BOOLEAN WINAPI advapi32.AuditSetSecurity(_In_ SECURITY_INFORMATION SecurityInformation,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor)
VOID WINAPI kernel32.DeleteProcThreadAttributeList(_Inout_ LPPROC_THREAD_ATTRIBUTE_LIST lpAttributeList)
HRESULT WINAPI userenv.DeriveRestrictedAppContainerSidFromAppContainerSidAndRestrictedName(_In_ PSID psidAppContainerSid,_In_ PCWSTR pszRestrictedAppContainerName,_Out_ PSID *ppsidRestrictedAppContainerSid)
HANDLE WINAPI kernel32.CreateSemaphoreEx(_In_opt_ LPSECURITY_ATTRIBUTES lpSemaphoreAttributes,_In_ LONG lInitialCount,_In_ LONG lMaximumCount,_In_opt_ LPCTSTR lpName,_Reserved_ DWORD dwFlags,_In_ DWORD dwDesiredAccess)
HANDLE WINAPI kernel32.CreateSemaphoreExW(_In_opt_ LPSECURITY_ATTRIBUTES lpSemaphoreAttributes,_In_ LONG lInitialCount,_In_ LONG lMaximumCount,_In_opt_ LPCTSTR lpName,_Reserved_ DWORD dwFlags,_In_ DWORD dwDesiredAccess)
HANDLE WINAPI kernel32.CreateSemaphoreExA(_In_opt_ LPSECURITY_ATTRIBUTES lpSemaphoreAttributes,_In_ LONG lInitialCount,_In_ LONG lMaximumCount,_In_opt_ LPCTSTR lpName,_Reserved_ DWORD dwFlags,_In_ DWORD dwDesiredAccess)
HANDLE WINAPI avrt.AvSetMmMaxThreadCharacteristics(_In_ LPCTSTR FirstTask,_In_ LPCTSTR SecondTask,_Inout_ LPDWORD TaskIndex)
HANDLE WINAPI avrt.AvSetMmMaxThreadCharacteristicsW(_In_ LPCTSTR FirstTask,_In_ LPCTSTR SecondTask,_Inout_ LPDWORD TaskIndex)
HANDLE WINAPI avrt.AvSetMmMaxThreadCharacteristicsA(_In_ LPCTSTR FirstTask,_In_ LPCTSTR SecondTask,_Inout_ LPDWORD TaskIndex)
VOID WINAPI advapi32.BuildTrusteeWithName(_Inout_ PTRUSTEE pTrustee,_In_opt_ LPTSTR pName)
VOID WINAPI advapi32.BuildTrusteeWithNameW(_Inout_ PTRUSTEE pTrustee,_In_opt_ LPTSTR pName)
VOID WINAPI advapi32.BuildTrusteeWithNameA(_Inout_ PTRUSTEE pTrustee,_In_opt_ LPTSTR pName)
BOOL WINAPI advapi32.AddAccessDeniedAceEx(_Inout_ PACL pAcl,_In_ DWORD dwAceRevision,_In_ DWORD AceFlags,_In_ DWORD AccessMask,_In_ PSID pSid)
BOOL WINAPI kernel32.GetProcessWorkingSetSize(_In_ HANDLE hProcess,_Out_ PSIZE_T lpMinimumWorkingSetSize,_Out_ PSIZE_T lpMaximumWorkingSetSize)
BOOL WINAPI kernel32.GetProcessPriorityBoost(_In_ HANDLE hProcess,_Out_ PBOOL pDisablePriorityBoost)
BOOL WINAPI kernel32.UpdateProcThreadAttribute(_Inout_ LPPROC_THREAD_ATTRIBUTE_LIST lpAttributeList,_In_ DWORD dwFlags,_In_ DWORD_PTR Attribute,_In_ PVOID lpValue,_In_ SIZE_T cbSize,_Out_opt_ PVOID lpPreviousValue,_In_opt_ PSIZE_T lpReturnSize)
DWORD WINAPI kernel32.SuspendThread(_In_ HANDLE hThread)
NTSTATUS WINAPI ntdll.ZwQuerySystemInformation(_In_ SYSTEM_INFORMATION_CLASS SystemInformationClass,_Inout_ PVOID SystemInformation,_In_ ULONG SystemInformationLength,_Out_opt_ PULONG ReturnLength)
BOOL WINAPI advapi32.AccessCheck(_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_ HANDLE ClientToken,_In_ DWORD DesiredAccess,_In_ PGENERIC_MAPPING GenericMapping,_Out_opt_ PPRIVILEGE_SET PrivilegeSet,_Inout_ LPDWORD PrivilegeSetLength,_Out_ LPDWORD GrantedAccess,_Out_ LPBOOL AccessStatus)
BOOL WINAPI kernel32.CheckTokenCapability(_In_opt_ HANDLE TokenHandle,_In_ PSID CapabilitySidToCheck,_Out_ PBOOL HasCapability)
DWORD WINAPI kernel32.SetIoRateControlInformationJobObject(_In_ HANDLE hJob,_In_ JOBOBJECT_IO_RATE_CONTROL_INFORMATION *IoRateControlInfo)
BOOL WINAPI kernel32.GetNumaProximityNode(_In_ ULONG ProximityId,_Out_ PUCHAR NodeNumber)
BOOL WINAPI advapi32.SetTokenInformation(_In_ HANDLE TokenHandle,_In_ TOKEN_INFORMATION_CLASS TokenInformationClass,_In_ LPVOID TokenInformation,_In_ DWORD TokenInformationLength)
VOID WINAPI kernel32.CancelThreadpoolIo(_Inout_ PTP_IO pio)
DWORD WINAPI kernel32.SuspendThread(_In_ HANDLE hThread)
BOOL WINAPI advapi32.LookupPrivilegeDisplayName(_In_opt_ LPCTSTR lpSystemName,_In_ LPCTSTR lpName,_Out_opt_ LPTSTR lpDisplayName,_Inout_ LPDWORD cchDisplayName,_Out_ LPDWORD lpLanguageId)
BOOL WINAPI advapi32.LookupPrivilegeDisplayNameW(_In_opt_ LPCTSTR lpSystemName,_In_ LPCTSTR lpName,_Out_opt_ LPTSTR lpDisplayName,_Inout_ LPDWORD cchDisplayName,_Out_ LPDWORD lpLanguageId)
BOOL WINAPI advapi32.LookupPrivilegeDisplayNameA(_In_opt_ LPCTSTR lpSystemName,_In_ LPCTSTR lpName,_Out_opt_ LPTSTR lpDisplayName,_Inout_ LPDWORD cchDisplayName,_Out_ LPDWORD lpLanguageId)
VOID WINAPI kernel32.ReleaseMutexWhenCallbackReturns(_Inout_ PTP_CALLBACK_INSTANCE pci,_In_ HANDLE mut)
BOOL WINAPI kernel32.SetThreadPriorityBoost(_In_ HANDLE hThread,_In_ BOOL DisablePriorityBoost)
HRESULT WINAPI shell32.SHGetFolderPathEx(_In_ REFKNOWNFOLDERID rfid,_In_ DWORD dwFlags,_In_opt_ HANDLE hToken,_Out_ LPWSTR pszPath,_In_ UINT cchPath)
VOID WINAPI kernel32.SetThreadpoolWait(_Inout_ PTP_WAIT pwa,_In_opt_ HANDLE h,_In_opt_ PFILETIME pftTimeout)
BOOL WINAPI authz.AuthzInitializeRemoteResourceManager(_In_ PAUTHZ_RPC_INIT_INFO_CLIENT pRpcInitInfo,_Out_ PAUTHZ_RESOURCE_MANAGER_HANDLE phAuthzResourceManager)
BOOL WINAPI authz.AuthzFreeContext(_In_ AUTHZ_CLIENT_CONTEXT_HANDLE AuthzClientContext)
BOOL WINAPI authz.AuthzAccessCheck(_In_ DWORD flags,_In_ AUTHZ_CLIENT_CONTEXT_HANDLE hAuthzClientContext,_In_ PAUTHZ_ACCESS_REQUEST pRequest,_In_opt_ AUTHZ_AUDIT_EVENT_HANDLE AuditEvent,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_opt_ PSECURITY_DESCRIPTOR *OptionalSecurityDescriptorArray,_In_opt_ DWORD OptionalSecurityDescriptorCount,_Inout_ PAUTHZ_ACCESS_REPLY pReply,_Out_opt_ PAUTHZ_ACCESS_CHECK_RESULTS_HANDLE phAccessCheckResults)
BOOL WINAPI advapi32.EqualDomainSid(_In_ PSID pSid1,_In_ PSID pSid2,_Out_ BOOL *pfEqual)
UINT WINAPI kernel32.GetWindowsDirectory(_Out_ LPTSTR lpBuffer,_In_ UINT uSize)
UINT WINAPI kernel32.GetWindowsDirectoryW(_Out_ LPTSTR lpBuffer,_In_ UINT uSize)
UINT WINAPI kernel32.GetWindowsDirectoryA(_Out_ LPTSTR lpBuffer,_In_ UINT uSize)
BOOL WINAPI advapi32.AccessCheckByTypeResultList(_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_opt_ PSID PrincipalSelfSid,_In_ HANDLE ClientToken,_In_ DWORD DesiredAccess,_Inout_opt_ POBJECT_TYPE_LIST ObjectTypeList,_In_ DWORD ObjectTypeListLength,_Out_ PGENERIC_MAPPING GenericMapping,_Out_opt_ PPRIVILEGE_SET PrivilegeSet,_Inout_ LPDWORD PrivilegeSetLength,_Out_ LPDWORD GrantedAccessList,_Out_ LPDWORD AccessStatusList)
VOID WINAPI kernel32.CloseThreadpoolWork(_Inout_ PTP_WORK pwk)
BOOL WINAPI advapi32.LookupPrivilegeName(_In_opt_ LPCTSTR lpSystemName,_In_ PLUID lpLuid,_Out_opt_ LPTSTR lpName,_Inout_ LPDWORD cchName)
BOOL WINAPI advapi32.LookupPrivilegeNameW(_In_opt_ LPCTSTR lpSystemName,_In_ PLUID lpLuid,_Out_opt_ LPTSTR lpName,_Inout_ LPDWORD cchName)
BOOL WINAPI advapi32.LookupPrivilegeNameA(_In_opt_ LPCTSTR lpSystemName,_In_ PLUID lpLuid,_Out_opt_ LPTSTR lpName,_Inout_ LPDWORD cchName)
BOOL WINAPI authz.AuthzUnregisterSecurityEventSource(_In_ DWORD dwFlags,_Inout_ PAUTHZ_SECURITY_EVENT_PROVIDER_HANDLE phEventProvider)
BOOL WINAPI advapi32.GetKernelObjectSecurity(_In_ HANDLE Handle,_In_ SECURITY_INFORMATION RequestedInformation,_Out_opt_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_ DWORD nLength,_Out_ LPDWORD lpnLengthNeeded)
HRESULT WINAPI webservices.WsResetMessage(_In_ WS_MESSAGE* message,_In_opt_ WS_ERROR* error)
BOOL WINAPI kernel32.SetProcessWorkingSetSize(_In_ HANDLE hProcess,_In_ SIZE_T dwMinimumWorkingSetSize,_In_ SIZE_T dwMaximumWorkingSetSize)
BOOL WINAPI advapi32.SetSecurityDescriptorGroup(_Inout_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_opt_ PSID pGroup,_In_ BOOL bGroupDefaulted)
TRUSTEE_FORM WINAPI advapi32.GetTrusteeForm(_In_ PTRUSTEE pTrustee)
TRUSTEE_FORM WINAPI advapi32.GetTrusteeFormW(_In_ PTRUSTEE pTrustee)
TRUSTEE_FORM WINAPI advapi32.GetTrusteeFormA(_In_ PTRUSTEE pTrustee)
LONG WINAPI advapi32.RegSetKeySecurity(_In_ HKEY hKey,_In_ SECURITY_INFORMATION SecurityInformation,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor)
BOOL WINAPI advapi32.LookupPrivilegeValue(_In_opt_ LPCTSTR lpSystemName,_In_ LPCTSTR lpName,_Out_ PLUID lpLuid)
BOOL WINAPI advapi32.LookupPrivilegeValueW(_In_opt_ LPCTSTR lpSystemName,_In_ LPCTSTR lpName,_Out_ PLUID lpLuid)
BOOL WINAPI advapi32.LookupPrivilegeValueA(_In_opt_ LPCTSTR lpSystemName,_In_ LPCTSTR lpName,_Out_ PLUID lpLuid)
BOOL WINAPI advapi32.ObjectOpenAuditAlarm(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ LPTSTR ObjectTypeName,_In_opt_ LPTSTR ObjectName,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_ HANDLE ClientToken,_In_ DWORD DesiredAccess,_In_ DWORD GrantedAccess,_In_opt_ PPRIVILEGE_SET Privileges,_In_ BOOL ObjectCreation,_In_ BOOL AccessGranted,_Out_ LPBOOL GenerateOnClose)
BOOL WINAPI advapi32.ObjectOpenAuditAlarmW(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ LPTSTR ObjectTypeName,_In_opt_ LPTSTR ObjectName,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_ HANDLE ClientToken,_In_ DWORD DesiredAccess,_In_ DWORD GrantedAccess,_In_opt_ PPRIVILEGE_SET Privileges,_In_ BOOL ObjectCreation,_In_ BOOL AccessGranted,_Out_ LPBOOL GenerateOnClose)
BOOL WINAPI advapi32.ObjectOpenAuditAlarmA(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ LPTSTR ObjectTypeName,_In_opt_ LPTSTR ObjectName,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_ HANDLE ClientToken,_In_ DWORD DesiredAccess,_In_ DWORD GrantedAccess,_In_opt_ PPRIVILEGE_SET Privileges,_In_ BOOL ObjectCreation,_In_ BOOL AccessGranted,_Out_ LPBOOL GenerateOnClose)
HRESULT WINAPI webservices.WsCopyNode(_In_ WS_XML_WRITER* writer,_In_ WS_XML_READER* reader,_In_opt_ WS_ERROR* error)
BOOL WINAPI advapi32.GetWindowsAccountDomainSid(_In_ PSID pSid,_Out_opt_ PSID ppDomainSid,_Inout_ DWORD *cbSid)
BOOL WINAPI kernel32.QueryUmsThreadInformation(_In_ PUMS_CONTEXT UmsThread,_In_ UMS_THREAD_INFO_CLASS UmsThreadInfoClass,_Out_ PVOID UmsThreadInformation,_In_ ULONG UmsThreadInformationLength,_Out_opt_ PULONG ReturnLength)
BOOL WINAPI kernel32.GetProcessShutdownParameters(_Out_ LPDWORD lpdwLevel,_Out_ LPDWORD lpdwFlags)
BOOL WINAPI advapi32.SetServiceObjectSecurity(_In_ SC_HANDLE hService,_In_ SECURITY_INFORMATION dwSecurityInformation,_In_ PSECURITY_DESCRIPTOR lpSecurityDescriptor)
VOID FORCEINLINE None.TpSetCallbackPersistent(_Inout_ PTP_CALLBACK_ENVIRON CallbackEnviron)
DWORD WINAPI advapi32.GetLengthSid(_In_ PSID pSid)
BOOLEAN WINAPI secur32.TranslateName(_In_ LPCTSTR lpAccountName,_In_ EXTENDED_NAME_FORMAT AccountNameFormat,_In_ EXTENDED_NAME_FORMAT DesiredNameFormat,_Out_ LPTSTR lpTranslatedName,_Inout_ PULONG nSize)
BOOLEAN WINAPI secur32.TranslateNameW(_In_ LPCTSTR lpAccountName,_In_ EXTENDED_NAME_FORMAT AccountNameFormat,_In_ EXTENDED_NAME_FORMAT DesiredNameFormat,_Out_ LPTSTR lpTranslatedName,_Inout_ PULONG nSize)
BOOLEAN WINAPI secur32.TranslateNameA(_In_ LPCTSTR lpAccountName,_In_ EXTENDED_NAME_FORMAT AccountNameFormat,_In_ EXTENDED_NAME_FORMAT DesiredNameFormat,_Out_ LPTSTR lpTranslatedName,_Inout_ PULONG nSize)
BOOL WINAPI userenv.LoadUserProfile(_In_ HANDLE hToken,_Inout_ LPPROFILEINFO lpProfileInfo)
BOOL WINAPI userenv.LoadUserProfileW(_In_ HANDLE hToken,_Inout_ LPPROFILEINFO lpProfileInfo)
BOOL WINAPI userenv.LoadUserProfileA(_In_ HANDLE hToken,_Inout_ LPPROFILEINFO lpProfileInfo)
HRESULT WINOLEAPI combase.CoRegisterChannelHook(_In_ REFGUID ExtensionUuid,_In_ IChannelHook *pChannelHook)
BOOL WINAPI advapi32.ObjectCloseAuditAlarm(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ BOOL GenerateOnClose)
BOOL WINAPI advapi32.ObjectCloseAuditAlarmW(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ BOOL GenerateOnClose)
BOOL WINAPI advapi32.ObjectCloseAuditAlarmA(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ BOOL GenerateOnClose)
BOOL WINAPI ntdll.IsProcessCritical(_In_ HANDLE hProcess,_Out_ PBOOL Critical)
BOOL WINAPI avrt.AvRtLeaveThreadOrderingGroup(_In_ HANDLE Context)
HRESULT WINAPI webservices.WsGetReaderPosition(_In_ WS_XML_READER* reader,_Out_ WS_XML_NODE_POSITION* *nodePosition,_In_opt_ WS_ERROR* error)
BOOL WINAPI advapi32.CreatePrivateObjectSecurity(_In_opt_ PSECURITY_DESCRIPTOR ParentDescriptor,_In_opt_ PSECURITY_DESCRIPTOR CreatorDescriptor,_Out_ PSECURITY_DESCRIPTOR *NewDescriptor,_In_ BOOL IsDirectoryObject,_In_opt_ HANDLE Token,_In_ PGENERIC_MAPPING GenericMapping)
PSID_IDENTIFIER_AUTHORITY WINAPI advapi32.GetSidIdentifierAuthority(_In_ PSID pSid)
BOOL WINAPI advapi32.MakeSelfRelativeSD(_In_ PSECURITY_DESCRIPTOR pAbsoluteSD,_Out_opt_ PSECURITY_DESCRIPTOR pSelfRelativeSD,_Inout_ LPDWORD lpdwBufferLength)
BOOL WINAPI authz.AuthzOpenObjectAudit(_In_ DWORD Flags,_In_ AUTHZ_CLIENT_CONTEXT_HANDLE hAuthzClientContext,_In_ PAUTHZ_ACCESS_REQUEST pRequest,_In_ AUTHZ_AUDIT_EVENT_HANDLE hAuditEvent,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_ PSECURITY_DESCRIPTOR *SecurityDescriptorArray,_In_ DWORD SecurityDescriptorCount,_In_ PAUTHZ_ACCESS_REPLY pReply)
BOOL WINAPI advapi32.AccessCheckByType(_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_opt_ PSID PrincipalSelfSid,_In_ HANDLE ClientToken,_In_ DWORD DesiredAccess,_Inout_opt_ POBJECT_TYPE_LIST ObjectTypeList,_In_ DWORD ObjectTypeListLength,_In_ PGENERIC_MAPPING GenericMapping,_Out_opt_ PPRIVILEGE_SET PrivilegeSet,_Inout_ LPDWORD PrivilegeSetLength,_Out_ LPDWORD GrantedAccess,_Out_ LPBOOL AccessStatus)
VOID WINAPI advapi32.SetSecurityAccessMask(_In_ SECURITY_INFORMATION SecurityInformation,_Out_ LPDWORD DesiredAccess)
BOOL WINAPI advapi32.FindFirstFreeAce(_In_ PACL pAcl,_Out_ LPVOID *pAce)
HRESULT WINAPI webservices.WsWriteEndStartElement(_In_ WS_XML_WRITER* writer,_In_opt_ WS_ERROR* error)
BOOL WINAPI advapi32.GetTokenInformation(_In_ HANDLE TokenHandle,_In_ TOKEN_INFORMATION_CLASS TokenInformationClass,_Out_opt_ LPVOID TokenInformation,_In_ DWORD TokenInformationLength,_Out_ PDWORD ReturnLength)
HRESULT WINAPI webservices.WsCopyError(_In_ WS_ERROR* source,_In_ WS_ERROR* destination)
LONG WINAPI advapi32.RegGetKeySecurity(_In_ HKEY hKey,_In_ SECURITY_INFORMATION SecurityInformation,_Out_opt_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_Inout_ LPDWORD lpcbSecurityDescriptor)
BOOL WINAPI advapi32.SetKernelObjectSecurity(_In_ HANDLE Handle,_In_ SECURITY_INFORMATION SecurityInformation,_In_ PSECURITY_DESCRIPTOR SecurityDescriptor)
HRESULT WINAPI webservices.WsAbortChannel(_In_ WS_CHANNEL* channel,_In_opt_ WS_ERROR* error)
BOOL WINAPI authz.AuthzInitializeObjectAccessAuditEvent2(_In_ DWORD Flags,_In_ AUTHZ_AUDIT_EVENT_TYPE_HANDLE hAuditEventType,_In_ PWSTR szOperationType,_In_ PWSTR szObjectType,_In_ PWSTR szObjectName,_In_ PWSTR szAdditionalInfo,_In_ PWSTR szAdditionalInfo2,_Out_ PAUTHZ_AUDIT_EVENT_HANDLE phAuditEvent,_In_ DWORD dwAdditionalParameterCount)
DWORD WINAPI advapi32.GetSecurityInfo(_In_ HANDLE handle,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_Out_opt_ PSID *ppsidOwner,_Out_opt_ PSID *ppsidGroup,_Out_opt_ PACL *ppDacl,_Out_opt_ PACL *ppSacl,_Out_opt_ PSECURITY_DESCRIPTOR *ppSecurityDescriptor)
BOOL WINAPI advapi32.AddAce(_Inout_ PACL pAcl,_In_ DWORD dwAceRevision,_In_ DWORD dwStartingAceIndex,_In_ LPVOID pAceList,_In_ DWORD nAceListLength)
BOOL WINAPI kernel32.SetProcessWorkingSetSize(_In_ HANDLE hProcess,_In_ SIZE_T dwMinimumWorkingSetSize,_In_ SIZE_T dwMaximumWorkingSetSize)
DWORD WINAPI advapi32.GetSidLengthRequired(_In_ UCHAR nSubAuthorityCount)
DWORD WINAPI advapi32.GetInheritanceSource(_In_ LPTSTR pObjectName,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_In_ BOOL Container,_In_opt_ GUID **pObjectClassGuids,_In_ DWORD GuidCount,_In_ PACL pAcl,_In_opt_ PFN_OBJECT_MGR_FUNCTS pfnArray,_In_ PGENERIC_MAPPING pGenericMapping,_Out_ PINHERITED_FROM pInheritArray)
DWORD WINAPI advapi32.GetInheritanceSourceW(_In_ LPTSTR pObjectName,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_In_ BOOL Container,_In_opt_ GUID **pObjectClassGuids,_In_ DWORD GuidCount,_In_ PACL pAcl,_In_opt_ PFN_OBJECT_MGR_FUNCTS pfnArray,_In_ PGENERIC_MAPPING pGenericMapping,_Out_ PINHERITED_FROM pInheritArray)
DWORD WINAPI advapi32.GetInheritanceSourceA(_In_ LPTSTR pObjectName,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_In_ BOOL Container,_In_opt_ GUID **pObjectClassGuids,_In_ DWORD GuidCount,_In_ PACL pAcl,_In_opt_ PFN_OBJECT_MGR_FUNCTS pfnArray,_In_ PGENERIC_MAPPING pGenericMapping,_Out_ PINHERITED_FROM pInheritArray)
BOOL WINAPI advapi32.IsValidAcl(_In_ PACL pAcl)
HRESULT WINAPI userenv.CreateAppContainerProfile(_In_ PCWSTR pszAppContainerName,_In_ PCWSTR pszDisplayName,_In_ PCWSTR pszDescription,_In_ PSID_AND_ATTRIBUTES pCapabilities,_In_ DWORD dwCapabilityCount,_Out_ PSID *ppSidAppContainerSid)
BOOL WINAPI advapi32.IsTokenRestricted(_In_ HANDLE TokenHandle)
BOOL WINAPI authz.AuthzFreeAuditEvent(_In_ AUTHZ_AUDIT_EVENT_HANDLE pAuditEventInfo)
BOOL WINAPI authz.AuthzUnregisterSecurityEventSource(_In_ DWORD dwFlags,_Inout_ PAUTHZ_SECURITY_EVENT_PROVIDER_HANDLE phEventProvider)
BOOL WINAPI advapi32.InitializeSid(_Out_ PSID Sid,_In_ PSID_IDENTIFIER_AUTHORITY pIdentifierAuthority,_In_ BYTE nSubAuthorityCount)
BOOL WINAPI kernel32.GetProcessHandleCount(_In_ HANDLE hProcess,_Inout_ PDWORD pdwHandleCount)
BOOL WINAPI advapi32.GetFileSecurity(_In_ LPCTSTR lpFileName,_In_ SECURITY_INFORMATION RequestedInformation,_Out_opt_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_ DWORD nLength,_Out_ LPDWORD lpnLengthNeeded)
BOOL WINAPI advapi32.GetFileSecurityW(_In_ LPCTSTR lpFileName,_In_ SECURITY_INFORMATION RequestedInformation,_Out_opt_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_ DWORD nLength,_Out_ LPDWORD lpnLengthNeeded)
BOOL WINAPI advapi32.GetFileSecurityA(_In_ LPCTSTR lpFileName,_In_ SECURITY_INFORMATION RequestedInformation,_Out_opt_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_ DWORD nLength,_Out_ LPDWORD lpnLengthNeeded)
BOOL WINAPI advapi32.SetFileSecurity(_In_ LPCTSTR lpFileName,_In_ SECURITY_INFORMATION SecurityInformation,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor)
BOOL WINAPI advapi32.SetFileSecurityW(_In_ LPCTSTR lpFileName,_In_ SECURITY_INFORMATION SecurityInformation,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor)
BOOL WINAPI advapi32.SetFileSecurityA(_In_ LPCTSTR lpFileName,_In_ SECURITY_INFORMATION SecurityInformation,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor)
HRESULT CALLBACK shell32.DllGetVersion(DLLVERSIONINFO *pdvi None)
DWORD WINAPI advapi32.GetEffectiveRightsFromAcl(_In_ PACL pacl,_In_ PTRUSTEE pTrustee,_Out_ PACCESS_MASK pAccessRights)
DWORD WINAPI advapi32.GetEffectiveRightsFromAclW(_In_ PACL pacl,_In_ PTRUSTEE pTrustee,_Out_ PACCESS_MASK pAccessRights)
DWORD WINAPI advapi32.GetEffectiveRightsFromAclA(_In_ PACL pacl,_In_ PTRUSTEE pTrustee,_Out_ PACCESS_MASK pAccessRights)
BOOL WINAPI kernel32.InitializeProcThreadAttributeList(_Out_opt_ LPPROC_THREAD_ATTRIBUTE_LIST lpAttributeList,_In_ DWORD dwAttributeCount,_Reserved_ DWORD dwFlags,_Inout_ PSIZE_T lpSize)
BOOL WINAPI advapi32.SetSecurityDescriptorControl(_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_ SECURITY_DESCRIPTOR_CONTROL ControlBitsOfInterest,_In_ SECURITY_DESCRIPTOR_CONTROL ControlBitsToSet)
BOOL WINAPI advapi32.CreatePrivateObjectSecurityWithMultipleInheritance(_In_opt_ PSECURITY_DESCRIPTOR ParentDescriptor,_In_opt_ PSECURITY_DESCRIPTOR CreatorDescriptor,_Out_ PSECURITY_DESCRIPTOR *NewDescriptor,_In_opt_ GUID **ObjectTypes,_In_ ULONG GuidCount,_In_ BOOL IsContainerObject,_In_ ULONG AutoInheritFlags,_In_opt_ HANDLE Token,_In_ PGENERIC_MAPPING GenericMapping)
BOOL WINAPI advapi32.ImpersonateNamedPipeClient(_In_ HANDLE hNamedPipe)
BOOL WINAPI userenv.GetAllUsersProfileDirectory(_Out_opt_ LPTSTR lpProfileDir,_Inout_ LPDWORD lpcchSize)
BOOL WINAPI userenv.GetAllUsersProfileDirectoryW(_Out_opt_ LPTSTR lpProfileDir,_Inout_ LPDWORD lpcchSize)
BOOL WINAPI userenv.GetAllUsersProfileDirectoryA(_Out_opt_ LPTSTR lpProfileDir,_Inout_ LPDWORD lpcchSize)
BOOL WINAPI authz.AuthzGetInformationFromContext(_In_ AUTHZ_CLIENT_CONTEXT_HANDLE hAuthzClientContext,_In_ AUTHZ_CONTEXT_INFORMATION_CLASS InfoClass,_In_ DWORD BufferSize,_Out_ PDWORD pSizeRequired,_Out_ PVOID Buffer)
NTSTATUS WINAPI ntdll.ZwQueryInformationProcess(_In_ HANDLE ProcessHandle,_In_ PROCESSINFOCLASS ProcessInformationClass,_Out_ PVOID ProcessInformation,_In_ ULONG ProcessInformationLength,_Out_opt_ PULONG ReturnLength)
HRESULT WINOLEAPI None.CoSetMessageDispatcher(_In_opt_ *pMessageDispatcher None)
BOOL WINAPI advapi32.AreAnyAccessesGranted(_In_ DWORD GrantedAccess,_In_ DWORD DesiredAccess)
DWORD WINAPI advapi32.SetSecurityInfo(_In_ HANDLE handle,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_In_opt_ PSID psidOwner,_In_opt_ PSID psidGroup,_In_opt_ PACL pDacl,_In_opt_ PACL pSacl)
HRESULT WINAPI combase.CoGetSystemSecurityPermissions(_In_ COMSD comSDType,_Out_ PSECURITY_DESCRIPTOR *ppSD)
BOOL WINAPI userenv.UnloadUserProfile(_In_ HANDLE hToken,_In_ HANDLE hProfile)
BOOL WINAPI authz.AuthzSetAppContainerInformation(_In_ AUTHZ_CLIENT_CONTEXT_HANDLE hAuthzClientContext,_In_ PSID pAppContainerSid,_In_ DWORD CapabilityCount,_In_opt_ PSID_AND_ATTRIBUTES pCapabilitySids[CapabilityCount])
BOOL WINAPI advapi32.DestroyPrivateObjectSecurity(_Inout_ PSECURITY_DESCRIPTOR *ObjectDescriptor)
PDWORD WINAPI advapi32.GetSidSubAuthority(_In_ PSID pSid,_In_ DWORD nSubAuthority)
DWORD WINAPI kernel32.GetPriorityClass(_In_ HANDLE hProcess)
VOID WINAPI kernel32.SetThreadpoolTimer(_Inout_ PTP_TIMER pti,_In_opt_ PFILETIME pftDueTime,_In_ DWORD msPeriod,_In_opt_ DWORD msWindowLength)
HANDLE WINAPI kernel32.OpenThread(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ DWORD dwThreadId)
BOOL WINAPI advapi32.GetSecurityDescriptorControl(_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_Out_ PSECURITY_DESCRIPTOR_CONTROL pControl,_Out_ LPDWORD lpdwRevision)
BOOL CALLBACK None.AuthzFreeCentralAccessPolicyCallback(_In_ PVOID pCentralAccessPolicy)
DWORD WINAPI advapi32.SetNamedSecurityInfo(_In_ LPTSTR pObjectName,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_In_opt_ PSID psidOwner,_In_opt_ PSID psidGroup,_In_opt_ PACL pDacl,_In_opt_ PACL pSacl)
DWORD WINAPI advapi32.SetNamedSecurityInfoW(_In_ LPTSTR pObjectName,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_In_opt_ PSID psidOwner,_In_opt_ PSID psidGroup,_In_opt_ PACL pDacl,_In_opt_ PACL pSacl)
DWORD WINAPI advapi32.SetNamedSecurityInfoA(_In_ LPTSTR pObjectName,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_In_opt_ PSID psidOwner,_In_opt_ PSID psidGroup,_In_opt_ PACL pDacl,_In_opt_ PACL pSacl)
HANDLE WINAPI kernel32.CreateJobObject(_In_opt_ LPSECURITY_ATTRIBUTES lpJobAttributes,_In_opt_ LPCTSTR lpName)
HANDLE WINAPI kernel32.CreateJobObjectW(_In_opt_ LPSECURITY_ATTRIBUTES lpJobAttributes,_In_opt_ LPCTSTR lpName)
HANDLE WINAPI kernel32.CreateJobObjectA(_In_opt_ LPSECURITY_ATTRIBUTES lpJobAttributes,_In_opt_ LPCTSTR lpName)
BOOLEAN WINAPI advapi32.AuditSetSystemPolicy(_In_ PCAUDIT_POLICY_INFORMATION pAuditPolicy,_In_ ULONG PolicyCount)
BOOL WINAPI advapi32.SetSecurityDescriptorOwner(_Inout_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_opt_ PSID pOwner,_In_ BOOL bOwnerDefaulted)
BOOL WINAPI authz.AuthzRegisterSecurityEventSource(_In_ DWORD dwFlags,_In_ PCWSTR szEventSourceName,_Out_ PAUTHZ_SECURITY_EVENT_PROVIDER_HANDLE phEventProvider)
BOOL WINAPI advapi32.AccessCheckAndAuditAlarm(_In_ LPCTSTR SubsystemName,_In_opt_ LPVOID HandleId,_In_ LPTSTR ObjectTypeName,_In_opt_ LPTSTR ObjectName,_In_ PSECURITY_DESCRIPTOR SecurityDescriptor,_In_ DWORD DesiredAccess,_In_ PGENERIC_MAPPING GenericMapping,_In_ BOOL ObjectCreation,_Out_ LPDWORD GrantedAccess,_Out_ LPBOOL AccessStatus,_Out_ LPBOOL pfGenerateOnClose)
BOOL WINAPI advapi32.AccessCheckAndAuditAlarmW(_In_ LPCTSTR SubsystemName,_In_opt_ LPVOID HandleId,_In_ LPTSTR ObjectTypeName,_In_opt_ LPTSTR ObjectName,_In_ PSECURITY_DESCRIPTOR SecurityDescriptor,_In_ DWORD DesiredAccess,_In_ PGENERIC_MAPPING GenericMapping,_In_ BOOL ObjectCreation,_Out_ LPDWORD GrantedAccess,_Out_ LPBOOL AccessStatus,_Out_ LPBOOL pfGenerateOnClose)
BOOL WINAPI advapi32.AccessCheckAndAuditAlarmA(_In_ LPCTSTR SubsystemName,_In_opt_ LPVOID HandleId,_In_ LPTSTR ObjectTypeName,_In_opt_ LPTSTR ObjectName,_In_ PSECURITY_DESCRIPTOR SecurityDescriptor,_In_ DWORD DesiredAccess,_In_ PGENERIC_MAPPING GenericMapping,_In_ BOOL ObjectCreation,_Out_ LPDWORD GrantedAccess,_Out_ LPBOOL AccessStatus,_Out_ LPBOOL pfGenerateOnClose)
HRESULT WINAPI userenv.DeriveAppContainerSidFromAppContainerName(_In_ PCWSTR pszAppContainerName,_Out_ PSID *ppsidAppContainerSid)
BOOL WINAPI advapi32.IsValidSecurityDescriptor(_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor)
DWORD WINAPI advapi32.GetSecurityDescriptorRMControl(_In_ PSECURITY_DESCRIPTOR SecurityDescriptor,_Out_ PUCHAR RMControl)
BOOL WINAPI advapi32.AccessCheck(_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_ HANDLE ClientToken,_In_ DWORD DesiredAccess,_In_ PGENERIC_MAPPING GenericMapping,_Out_opt_ PPRIVILEGE_SET PrivilegeSet,_Inout_ LPDWORD PrivilegeSetLength,_Out_ LPDWORD GrantedAccess,_Out_ LPBOOL AccessStatus)
HRESULT WINAPI webservices.WsAbortServiceHost(_In_ WS_SERVICE_HOST* serviceHost,_In_opt_ WS_ERROR* error)
DWORD WINAPI advapi32.SetEntriesInAcl(_In_ ULONG cCountOfExplicitEntries,_In_opt_ PEXPLICIT_ACCESS pListOfExplicitEntries,_In_opt_ PACL OldAcl,_Out_ PACL *NewAcl)
DWORD WINAPI advapi32.SetEntriesInAclW(_In_ ULONG cCountOfExplicitEntries,_In_opt_ PEXPLICIT_ACCESS pListOfExplicitEntries,_In_opt_ PACL OldAcl,_Out_ PACL *NewAcl)
DWORD WINAPI advapi32.SetEntriesInAclA(_In_ ULONG cCountOfExplicitEntries,_In_opt_ PEXPLICIT_ACCESS pListOfExplicitEntries,_In_opt_ PACL OldAcl,_Out_ PACL *NewAcl)
HRESULT WINAPI userenv.DeleteAppContainerProfile(_In_ PCWSTR pszAppContainerName)
DWORD WINAPI advapi32.LookupSecurityDescriptorParts(_Out_opt_ PTRUSTEE *pOwner,_Out_opt_ PTRUSTEE *pGroup,_Out_opt_ PULONG cCountOfAccessEntries,_Out_opt_ PEXPLICIT_ACCESS *pListOfAccessEntries,_Out_opt_ PULONG cCountOfAuditEntries,_Out_opt_ PEXPLICIT_ACCESS *pListOfAuditEntries,_In_ PSECURITY_DESCRIPTOR pSD)
DWORD WINAPI advapi32.LookupSecurityDescriptorPartsW(_Out_opt_ PTRUSTEE *pOwner,_Out_opt_ PTRUSTEE *pGroup,_Out_opt_ PULONG cCountOfAccessEntries,_Out_opt_ PEXPLICIT_ACCESS *pListOfAccessEntries,_Out_opt_ PULONG cCountOfAuditEntries,_Out_opt_ PEXPLICIT_ACCESS *pListOfAuditEntries,_In_ PSECURITY_DESCRIPTOR pSD)
DWORD WINAPI advapi32.LookupSecurityDescriptorPartsA(_Out_opt_ PTRUSTEE *pOwner,_Out_opt_ PTRUSTEE *pGroup,_Out_opt_ PULONG cCountOfAccessEntries,_Out_opt_ PEXPLICIT_ACCESS *pListOfAccessEntries,_Out_opt_ PULONG cCountOfAuditEntries,_Out_opt_ PEXPLICIT_ACCESS *pListOfAuditEntries,_In_ PSECURITY_DESCRIPTOR pSD)
BOOL WINAPI advapi32.AddAccessAllowedAce(_Inout_ PACL pAcl,_In_ DWORD dwAceRevision,_In_ DWORD AccessMask,_In_ PSID pSid)
HPROPSHEETPAGE WINAPI aclui.CreateSecurityPage(_In_ LPSECURITYINFO psi)
BOOL WINAPI authz.AuthzUnregisterSecurityEventSource(_In_ DWORD dwFlags,_Inout_ PAUTHZ_SECURITY_EVENT_PROVIDER_HANDLE phEventProvider)
DWORD WINAPI advapi32.FreeInheritedFromArray(_In_ PINHERITED_FROM pInheritArray,_In_ USHORT AceCnt,_In_opt_ PFN_OBJECT_MGR_FUNCTS pfnArray)
BOOL WINAPI advapi32.IsWellKnownSid(_In_ PSID pSid,_In_ WELL_KNOWN_SID_TYPE WellKnownSidType)
BOOL WINAPI kernel32.AddScopedPolicyIDAce(_Inout_ PACL pAcl,_In_ DWORD dwAceRevision,_In_ DWORD AceFlags,_In_ DWORD AccessMask,_In_ PSID pSid)
BOOL WINAPI advapi32.AddMandatoryAce(_Inout_ PACL pAcl,_In_ DWORD dwAceRevision,_In_ DWORD AceFlags,_In_ DWORD MandatoryPolicy,_In_ PSID pLabelSid)
BOOL WINAPI authz.AuthzInitializeContextFromAuthzContext(_In_ DWORD flags,_In_ AUTHZ_CLIENT_CONTEXT_HANDLE hAuthzClientContext,_In_opt_ PLARGE_INTEGER pExpirationTime,_In_ LUID Identifier,_In_ PVOID DynamicGroupArgs,_Out_ PAUTHZ_CLIENT_CONTEXT_HANDLE phNewAuthzClientContext)
BOOL WINAPI advapi32.SetPrivateObjectSecurity(_In_ SECURITY_INFORMATION SecurityInformation,_In_ PSECURITY_DESCRIPTOR ModificationDescriptor,_Inout_ PSECURITY_DESCRIPTOR *ObjectsSecurityDescriptor,_In_ PGENERIC_MAPPING GenericMapping,_In_opt_ HANDLE Token)
DWORD WINAPI advapi32.GetSecurityDescriptorLength(_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor)
BOOL WINAPI advapi32.ImpersonateLoggedOnUser(_In_ HANDLE hToken)
BOOL WINAPI advapi32.AddAuditAccessAceEx(_Inout_ PACL pAcl,_In_ DWORD dwAceRevision,_In_ DWORD AceFlags,_In_ DWORD dwAccessMask,_In_ PSID pSid,_In_ BOOL bAuditSuccess,_In_ BOOL bAuditFailure)
BOOL WINAPI advapi32.PrivilegedServiceAuditAlarm(_In_ LPCTSTR SubsystemName,_In_ LPCTSTR ServiceName,_In_ HANDLE ClientToken,_In_ PPRIVILEGE_SET Privileges,_In_ BOOL AccessGranted)
BOOL WINAPI advapi32.PrivilegedServiceAuditAlarmW(_In_ LPCTSTR SubsystemName,_In_ LPCTSTR ServiceName,_In_ HANDLE ClientToken,_In_ PPRIVILEGE_SET Privileges,_In_ BOOL AccessGranted)
BOOL WINAPI advapi32.PrivilegedServiceAuditAlarmA(_In_ LPCTSTR SubsystemName,_In_ LPCTSTR ServiceName,_In_ HANDLE ClientToken,_In_ PPRIVILEGE_SET Privileges,_In_ BOOL AccessGranted)
BOOL WINAPI authz.AuthzReportSecurityEvent(_In_ DWORD dwFlags,_Inout_ AUTHZ_SECURITY_EVENT_PROVIDER_HANDLE hEventProvider,_In_ DWORD dwAuditId,_In_opt_ PSID pUserSid,_In_ DWORD dwCount,_In_ ... None)
BOOL WINAPI advapi32.MakeAbsoluteSD(_In_ PSECURITY_DESCRIPTOR pSelfRelativeSD,_Out_opt_ PSECURITY_DESCRIPTOR pAbsoluteSD,_Inout_ LPDWORD lpdwAbsoluteSDSize,_Out_opt_ PACL pDacl,_Inout_ LPDWORD lpdwDaclSize,_Out_opt_ PACL pSacl,_Inout_ LPDWORD lpdwSaclSize,_Out_opt_ PSID pOwner,_Inout_ LPDWORD lpdwOwnerSize,_Out_opt_ PSID pPrimaryGroup,_Inout_ LPDWORD lpdwPrimaryGroupSize)
BOOL WINAPI advapi32.CheckTokenMembership(_In_opt_ HANDLE TokenHandle,_In_ PSID SidToCheck,_Out_ PBOOL IsMember)
BOOL WINAPI authz.AuthzInitializeResourceManager(_In_ DWORD flags,_In_opt_ PFN_AUTHZ_DYNAMIC_ACCESS_CHECK pfnAccessCheck,_In_opt_ PFN_AUTHZ_COMPUTE_DYNAMIC_GROUPS pfnComputeDynamicGroups,_In_opt_ PFN_AUTHZ_FREE_DYNAMIC_GROUPS pfnFreeDynamicGroups,_In_ PCWSTR szResourceManagerName,_Out_ PAUTHZ_RESOURCE_MANAGER_HANDLE phAuthzResourceManager)
BOOL WINAPI advapi32.CreateWellKnownSid(_In_ WELL_KNOWN_SID_TYPE WellKnownSidType,_In_opt_ PSID DomainSid,_Out_opt_ PSID pSid,_Inout_ DWORD *cbSid)
BOOL WINAPI authz.AuthzReportSecurityEventFromParams(_In_ DWORD dwFlags,_In_ AUTHZ_SECURITY_EVENT_PROVIDER_HANDLE hEventProvider,_In_ DWORD dwAuditId,_In_opt_ PSID pUserSid,_In_ PAUDIT_PARAMS pParams)
BOOL CALLBACK None.AuthzGetCentralAccessPolicyCallback(_In_ AUTHZ_CLIENT_CONTEXT_HANDLE hAuthzClientContext,_In_ PSID capid,_In_opt_ PVOID pArgs,_Out_ PBOOL pCentralAccessPolicyApplicable,_Out_ PVOID ppCentralAccessPolicy)
BOOL WINAPI advapi32.GetAclInformation(_In_ PACL pAcl,_Out_ LPVOID pAclInformation,_In_ DWORD nAclInformationLength,_In_ ACL_INFORMATION_CLASS dwAclInformationClass)
BOOL WINAPI advapi32.CopySid(_In_ DWORD nDestinationSidLength,_Out_ PSID pDestinationSid,_In_ PSID pSourceSid)
BOOL WINAPI advapi32.SetSecurityDescriptorDacl(_Inout_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_ BOOL bDaclPresent,_In_opt_ PACL pDacl,_In_ BOOL bDaclDefaulted)
DWORD WINAPI advapi32.GetSidLengthRequired(_In_ UCHAR nSubAuthorityCount)
BOOL WINAPI advapi32.OpenProcessToken(_In_ HANDLE ProcessHandle,_In_ DWORD DesiredAccess,_Out_ PHANDLE TokenHandle)
HRESULT WINAPI shell32.SHGetFolderPathEx(_In_ REFKNOWNFOLDERID rfid,_In_ DWORD dwFlags,_In_opt_ HANDLE hToken,_Out_ LPWSTR pszPath,_In_ UINT cchPath)
HRESULT WINAPI webservices.WsReadStartAttribute(_In_ WS_XML_READER* reader,_In_ ULONG attributeIndex,_In_opt_ WS_ERROR* error)
HRESULT WINAPI ole32.CoDecrementMTAUsage(_In_ CO_MTA_USAGE_COOKIE Cookie)
BOOL WINAPI advapi32.GetPrivateObjectSecurity(_In_ PSECURITY_DESCRIPTOR ObjectDescriptor,_In_ SECURITY_INFORMATION SecurityInformation,_Out_opt_ PSECURITY_DESCRIPTOR ResultantDescriptor,_In_ DWORD DescriptorLength,_Out_ PDWORD ReturnLength)
PUCHAR WINAPI advapi32.GetSidSubAuthorityCount(_In_ PSID pSid)
BOOL WINAPI advapi32.DuplicateToken(_In_ HANDLE ExistingTokenHandle,_In_ SECURITY_IMPERSONATION_LEVEL ImpersonationLevel,_Out_ PHANDLE DuplicateTokenHandle)
BOOL WINAPI authz.AuthzInstallSecurityEventSource(_In_ DWORD dwFlags,_In_ PAUTHZ_SOURCE_SCHEMA_REGISTRATION pRegistration)
BOOL WINAPI advapi32.SetAclInformation(_Inout_ PACL pAcl,_In_ LPVOID pAclInformation,_In_ DWORD nAclInformationLength,_In_ ACL_INFORMATION_CLASS dwAclInformationClass)
DWORD WINAPI advapi32.GetSecurityInfo(_In_ HANDLE handle,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_Out_opt_ PSID *ppsidOwner,_Out_opt_ PSID *ppsidGroup,_Out_opt_ PACL *ppDacl,_Out_opt_ PACL *ppSacl,_Out_opt_ PSECURITY_DESCRIPTOR *ppSecurityDescriptor)
BOOL WINAPI aclui.EditSecurity(_In_ HWND hwndOwner,_In_ LPSECURITYINFO psi)
HRESULT WINAPI dssec.DSCreateISecurityInfoObject(_In_ LPCWSTR pwszObjectPath,_In_ LPCWSTR pwszObjectClass,_In_ DWORD dwFlags,_Out_ LPSECURITYINFO *ppSI,_In_opt_ PFNREADOBJECTSECURITY pfnReadSD,_In_opt_ PFNWRITEOBJECTSECURITY pfnWriteSD,_In_ LPARAM lpContext)
BOOL APIENTRY kernel32.CheckTokenMembershipEx(_In_opt_ HANDLE TokenHandle,_In_ PSID SidToCheck,_In_ DWORD Flags,_Out_ PBOOL IsMember)
BOOL WINAPI authz.AuthzFreeResourceManager(_In_ AUTHZ_RESOURCE_MANAGER_HANDLE AuthzResourceManager)
HRESULT WINAPI userenv.GetAppContainerRegistryLocation(_In_ REGSAM desiredAccess,_Out_ PHKEY phAppContainerKey)
BOOL WINAPI advapi32.AddAuditAccessObjectAce(_Inout_ PACL pAcl,_In_ DWORD dwAceRevision,_In_ DWORD AceFlags,_In_ DWORD AccessMask,_In_opt_ GUID *ObjectTypeGuid,_In_opt_ GUID *InheritedObjectTypeGuid,_In_ PSID pSid,_In_ BOOL bAuditSuccess,_In_ BOOL bAuditFailure)
VOID WINAPI advapi32.AuditFree(_In_ PVOID Buffer)
BOOLEAN WINAPI advapi32.AuditQuerySecurity(_In_ SECURITY_INFORMATION SecurityInformation,_Out_ PSECURITY_DESCRIPTOR *ppSecurityDescriptor)
BOOL WINAPI authz.AuthzModifyClaims(_In_ AUTHZ_CLIENT_CONTEXT_HANDLE hAuthzClientContext,_In_ AUTHZ_CONTEXT_INFORMATION_CLASS ClaimClass,_In_ PAUTHZ_SECURITY_ATTRIBUTE_OPERATION pClaimOperations,_In_opt_ PAUTHZ_SECURITY_ATTRIBUTES_INFORMATION pClaims)
BOOL WINAPI advapi32.LookupAccountName(_In_opt_ LPCTSTR lpSystemName,_In_ LPCTSTR lpAccountName,_Out_opt_ PSID Sid,_Inout_ LPDWORD cbSid,_Out_opt_ LPTSTR ReferencedDomainName,_Inout_ LPDWORD cchReferencedDomainName,_Out_ PSID_NAME_USE peUse)
BOOL WINAPI advapi32.LookupAccountNameW(_In_opt_ LPCTSTR lpSystemName,_In_ LPCTSTR lpAccountName,_Out_opt_ PSID Sid,_Inout_ LPDWORD cbSid,_Out_opt_ LPTSTR ReferencedDomainName,_Inout_ LPDWORD cchReferencedDomainName,_Out_ PSID_NAME_USE peUse)
BOOL WINAPI advapi32.LookupAccountNameA(_In_opt_ LPCTSTR lpSystemName,_In_ LPCTSTR lpAccountName,_Out_opt_ PSID Sid,_Inout_ LPDWORD cbSid,_Out_opt_ LPTSTR ReferencedDomainName,_Inout_ LPDWORD cchReferencedDomainName,_Out_ PSID_NAME_USE peUse)
HRESULT WINAPI userenv.GetAppContainerFolderPath(_In_ PCWSTR pszAppContainerSid,_Out_ PWSTR *ppszPath)
HRESULT WINAPI dssec.DSEditSecurity(_In_ HWND hwndOwner,_In_ LPCWSTR pwszObjectPath,_In_opt_ LPCWSTR pwszObjectClass,_In_ DWORD dwFlags,_In_opt_ LPCWSTR *pwszCaption,_In_opt_ PFNREADOBJECTSECURITY pfnReadSD,_In_opt_ PFNWRITEOBJECTSECURITY pfnWriteSD,_In_ LPARAM lpContext)
BOOL WINAPI advapi32.AreAllAccessesGranted(_In_ DWORD GrantedAccess,_In_ DWORD DesiredAccess)
BOOL WINAPI advapi32.ConvertStringSidToSid(_In_ LPCTSTR StringSid,_Out_ PSID *Sid)
BOOL WINAPI advapi32.ConvertStringSidToSidW(_In_ LPCTSTR StringSid,_Out_ PSID *Sid)
BOOL WINAPI advapi32.ConvertStringSidToSidA(_In_ LPCTSTR StringSid,_Out_ PSID *Sid)
BOOL WINAPI advapi32.IsValidSid(_In_ PSID pSid)
HRESULT WINAPI webservices.WsResetServiceProxy(_In_ WS_SERVICE_PROXY* serviceProxy,_In_opt_ WS_ERROR* error)
BOOL WINAPI advapi32.ConvertSecurityDescriptorToStringSecurityDescriptor(_In_ PSECURITY_DESCRIPTOR SecurityDescriptor,_In_ DWORD RequestedStringSDRevision,_In_ SECURITY_INFORMATION SecurityInformation,_Out_ LPTSTR *StringSecurityDescriptor,_Out_ PULONG StringSecurityDescriptorLen)
BOOL WINAPI advapi32.ConvertSecurityDescriptorToStringSecurityDescriptorW(_In_ PSECURITY_DESCRIPTOR SecurityDescriptor,_In_ DWORD RequestedStringSDRevision,_In_ SECURITY_INFORMATION SecurityInformation,_Out_ LPTSTR *StringSecurityDescriptor,_Out_ PULONG StringSecurityDescriptorLen)
BOOL WINAPI advapi32.ConvertSecurityDescriptorToStringSecurityDescriptorA(_In_ PSECURITY_DESCRIPTOR SecurityDescriptor,_In_ DWORD RequestedStringSDRevision,_In_ SECURITY_INFORMATION SecurityInformation,_Out_ LPTSTR *StringSecurityDescriptor,_Out_ PULONG StringSecurityDescriptorLen)
BOOL WINAPI advapi32.QueryServiceObjectSecurity(_In_ SC_HANDLE hService,_In_ SECURITY_INFORMATION dwSecurityInformation,_Out_opt_ PSECURITY_DESCRIPTOR lpSecurityDescriptor,_In_ DWORD cbBufSize,_Out_ LPDWORD pcbBytesNeeded)
BOOL WINAPI advapi32.InitializeSecurityDescriptor(_Out_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_ DWORD dwRevision)
DWORD WINAPI advapi32.GetLengthSid(_In_ PSID pSid)
BOOL WINAPI advapi32.AdjustTokenGroups(_In_ HANDLE TokenHandle,_In_ BOOL ResetToDefault,_In_opt_ PTOKEN_GROUPS NewState,_In_ DWORD BufferLength,_Out_opt_ PTOKEN_GROUPS PreviousState,_Out_opt_ PDWORD ReturnLength)
BOOL WINAPI advapi32.AccessCheckAndAuditAlarm(_In_ LPCTSTR SubsystemName,_In_opt_ LPVOID HandleId,_In_ LPTSTR ObjectTypeName,_In_opt_ LPTSTR ObjectName,_In_ PSECURITY_DESCRIPTOR SecurityDescriptor,_In_ DWORD DesiredAccess,_In_ PGENERIC_MAPPING GenericMapping,_In_ BOOL ObjectCreation,_Out_ LPDWORD GrantedAccess,_Out_ LPBOOL AccessStatus,_Out_ LPBOOL pfGenerateOnClose)
BOOL WINAPI advapi32.AccessCheckAndAuditAlarmW(_In_ LPCTSTR SubsystemName,_In_opt_ LPVOID HandleId,_In_ LPTSTR ObjectTypeName,_In_opt_ LPTSTR ObjectName,_In_ PSECURITY_DESCRIPTOR SecurityDescriptor,_In_ DWORD DesiredAccess,_In_ PGENERIC_MAPPING GenericMapping,_In_ BOOL ObjectCreation,_Out_ LPDWORD GrantedAccess,_Out_ LPBOOL AccessStatus,_Out_ LPBOOL pfGenerateOnClose)
BOOL WINAPI advapi32.AccessCheckAndAuditAlarmA(_In_ LPCTSTR SubsystemName,_In_opt_ LPVOID HandleId,_In_ LPTSTR ObjectTypeName,_In_opt_ LPTSTR ObjectName,_In_ PSECURITY_DESCRIPTOR SecurityDescriptor,_In_ DWORD DesiredAccess,_In_ PGENERIC_MAPPING GenericMapping,_In_ BOOL ObjectCreation,_Out_ LPDWORD GrantedAccess,_Out_ LPBOOL AccessStatus,_Out_ LPBOOL pfGenerateOnClose)
BOOL WINAPI authz.AuthzRegisterCapChangeNotification(_Out_ PAUTHZ_CAP_CHANGE_SUBSCRIPTION_HANDLE phCapChangeSubscription,_In_ LPTHREAD_START_ROUTINE pfnCapChangeCallback,_In_opt_ PVOID pCallbackContext)
BOOL WINAPI advapi32.AddConditionalAce(_Inout_ PACL pAcl,_In_ DWORD dwAceRevision,_In_ DWORD AceFlags,_In_ UCHAR AceType,_In_ DWORD AccessMask,_In_ PSID pSid,_In_ PWCHAR ConditionStr,_Out_ DWORD *ReturnLength)
HRESULT WINAPI webservices.WsResetChannel(_In_ WS_CHANNEL* channel,_In_opt_ WS_ERROR* error)
BOOL WINAPI authz.AuthzInitializeContextFromSid(_In_ DWORD Flags,_In_ PSID UserSid,_In_opt_ AUTHZ_RESOURCE_MANAGER_HANDLE hAuthzResourceManager,_In_ PLARGE_INTEGER pExpirationTime,_In_ LUID Identifier,_In_opt_ PVOID DynamicGroupArgs,_Out_ PAUTHZ_CLIENT_CONTEXT_HANDLE pAuthzClientContext)
BOOL WINAPI kernel32.AddResourceAttributeAce(_Inout_ PACL pAcl,_In_ DWORD dwAceRevision,_In_ DWORD AceFlags,_In_ DWORD AccessMask,_In_ PSID pSid,_In_ PCLAIM_SECURITY_ATTRIBUTES_INFORMATION pAttributeInfo,_Out_ PDWORD pReturnLength)
HRESULT WINAPI webservices.WsReadQualifiedName(_In_ WS_XML_READER* reader,_In_ WS_HEAP* heap,WS_XML_STRING* prefix None,_Out_ WS_XML_STRING* *localName,WS_XML_STRING* ns None,_In_opt_ WS_ERROR* error)
BOOL WINAPI advapi32.AccessCheckByTypeResultListAndAuditAlarmByHandle(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ HANDLE ClientToken,_In_ LPCTSTR ObjectTypeName,_In_opt_ LPCTSTR ObjectName,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_opt_ PSID PrincipalSelfSid,_In_ DWORD DesiredAccess,_In_ AUDIT_EVENT_TYPE AuditType,_In_ DWORD Flags,_Inout_opt_ POBJECT_TYPE_LIST ObjectTypeList,_In_ DWORD ObjectTypeListLength,_In_ PGENERIC_MAPPING GenericMapping,_In_ BOOL ObjectCreation,_Out_ LPDWORD GrantedAccess,_Out_ LPDWORD AccessStatusList,_Out_ LPBOOL pfGenerateOnClose)
BOOL WINAPI advapi32.AccessCheckByTypeResultListAndAuditAlarmByHandleW(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ HANDLE ClientToken,_In_ LPCTSTR ObjectTypeName,_In_opt_ LPCTSTR ObjectName,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_opt_ PSID PrincipalSelfSid,_In_ DWORD DesiredAccess,_In_ AUDIT_EVENT_TYPE AuditType,_In_ DWORD Flags,_Inout_opt_ POBJECT_TYPE_LIST ObjectTypeList,_In_ DWORD ObjectTypeListLength,_In_ PGENERIC_MAPPING GenericMapping,_In_ BOOL ObjectCreation,_Out_ LPDWORD GrantedAccess,_Out_ LPDWORD AccessStatusList,_Out_ LPBOOL pfGenerateOnClose)
BOOL WINAPI advapi32.AccessCheckByTypeResultListAndAuditAlarmByHandleA(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ HANDLE ClientToken,_In_ LPCTSTR ObjectTypeName,_In_opt_ LPCTSTR ObjectName,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_opt_ PSID PrincipalSelfSid,_In_ DWORD DesiredAccess,_In_ AUDIT_EVENT_TYPE AuditType,_In_ DWORD Flags,_Inout_opt_ POBJECT_TYPE_LIST ObjectTypeList,_In_ DWORD ObjectTypeListLength,_In_ PGENERIC_MAPPING GenericMapping,_In_ BOOL ObjectCreation,_Out_ LPDWORD GrantedAccess,_Out_ LPDWORD AccessStatusList,_Out_ LPBOOL pfGenerateOnClose)
BOOLEAN WINAPI advapi32.AuditEnumeratePerUserPolicy(_Out_ PPOLICY_AUDIT_SID_ARRAY *ppAuditSidArray)
VOID WINAPI kernel32.SetThreadpoolTimer(_Inout_ PTP_TIMER pti,_In_opt_ PFILETIME pftDueTime,_In_ DWORD msPeriod,_In_opt_ DWORD msWindowLength)
VOID WINAPI advapi32.MapGenericMask(_Inout_ PDWORD AccessMask,_In_ PGENERIC_MAPPING GenericMapping)
BOOL WINAPI userenv.GetProfileType(_Out_ DWORD *pdwFlags)
BOOL WINAPI advapi32.AddAuditAccessAce(_Inout_ PACL pAcl,_In_ DWORD dwAceRevision,_In_ DWORD dwAccessMask,_In_ PSID pSid,_In_ BOOL bAuditSuccess,_In_ BOOL bAuditFailure)
BOOL WINAPI authz.AuthzModifySids(_In_ AUTHZ_CLIENT_CONTEXT_HANDLE hAuthzClientContext,_In_ AUTHZ_CONTEXT_INFORMATION_CLASS SidClass,_In_ PAUTHZ_SID_OPERATION pSidOperations,_In_opt_ PTOKEN_GROUPS pSids)
BOOL WINAPI authz.AuthzInitializeContextFromToken(_In_ DWORD Flags,_In_ HANDLE TokenHandle,_In_ AUTHZ_RESOURCE_MANAGER_HANDLE hAuthzResourceManager,_In_opt_ PLARGE_INTEGER pExpirationTime,_In_ LUID Identifier,_In_opt_ PVOID DynamicGroupArgs,_Out_ PAUTHZ_CLIENT_CONTEXT_HANDLE phAuthzClientContext)
BOOL WINAPI userenv.CreateEnvironmentBlock(_Out_ LPVOID *lpEnvironment,_In_opt_ HANDLE hToken,_In_ BOOL bInherit)
BOOL WINAPI advapi32.AddAuditAccessAce(_Inout_ PACL pAcl,_In_ DWORD dwAceRevision,_In_ DWORD dwAccessMask,_In_ PSID pSid,_In_ BOOL bAuditSuccess,_In_ BOOL bAuditFailure)
BOOL WINAPI authz.AuthzFreeHandle(_In_ AUTHZ_ACCESS_CHECK_RESULTS_HANDLE AuthzHandle)
BOOL WINAPI advapi32.ObjectPrivilegeAuditAlarm(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ HANDLE ClientToken,_In_ DWORD DesiredAccess,_In_ PPRIVILEGE_SET Privileges,_In_ BOOL AccessGranted)
BOOL WINAPI advapi32.ObjectPrivilegeAuditAlarmW(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ HANDLE ClientToken,_In_ DWORD DesiredAccess,_In_ PPRIVILEGE_SET Privileges,_In_ BOOL AccessGranted)
BOOL WINAPI advapi32.ObjectPrivilegeAuditAlarmA(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ HANDLE ClientToken,_In_ DWORD DesiredAccess,_In_ PPRIVILEGE_SET Privileges,_In_ BOOL AccessGranted)
HRESULT WINAPI dssec.DSCreateSecurityPage(_In_ LPCWSTR pwszObjectPath,_In_opt_ LPCWSTR pwszObjectClass,_In_ DWORD dwFlags,_Out_ HPROPSHEETPAGE *phPage,_In_opt_ PFNREADOBJECTSECURITY pfnReadSD,_In_opt_ PFNWRITEOBJECTSECURITY pfnWriteSD,_In_ LPARAM lpContext)
BOOLEAN WINAPI advapi32.AuditQueryGlobalSacl(_In_ PCWSTR ObjectTypeName,_Out_ PACL *Acl)
BOOLEAN WINAPI advapi32.AuditQueryGlobalSaclW(_In_ PCWSTR ObjectTypeName,_Out_ PACL *Acl)
BOOLEAN WINAPI advapi32.AuditQueryGlobalSaclA(_In_ PCWSTR ObjectTypeName,_Out_ PACL *Acl)
BOOL WINAPI advapi32.ImpersonateNamedPipeClient(_In_ HANDLE hNamedPipe)
BOOL WINAPI user32.GetUserObjectSecurity(_In_ HANDLE hObj,_In_ PSECURITY_INFORMATION pSIRequested,_Inout_opt_ PSECURITY_DESCRIPTOR pSD,_In_ DWORD nLength,_Out_ LPDWORD lpnLengthNeeded)
BOOL WINAPI authz.AuthzModifySecurityAttributes(_In_ AUTHZ_CLIENT_CONTEXT_HANDLE hAuthzClientContext,_In_ PAUTHZ_SECURITY_ATTRIBUTE_OPERATION pOperations,_In_ PAUTHZ_SECURITY_ATTRUBUTES_INFORMATION pAttributes)
BOOL WINAPI advapi32.EqualPrefixSid(_In_ PSID pSid1,_In_ PSID pSid2)
DWORD WINAPI advapi32.TreeSetNamedSecurityInfo(_In_ LPTSTR pObjectName,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_In_opt_ PSID pOwner,_In_opt_ PSID pGroup,_In_opt_ PACL pDacl,_In_opt_ PACL pSacl,_In_ DWORD dwAction,_In_ FN_PROGRESS fnProgress,_In_ PROG_INVOKE_SETTING ProgressInvokeSetting,_In_opt_ PVOID Args)
DWORD WINAPI advapi32.TreeSetNamedSecurityInfoW(_In_ LPTSTR pObjectName,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_In_opt_ PSID pOwner,_In_opt_ PSID pGroup,_In_opt_ PACL pDacl,_In_opt_ PACL pSacl,_In_ DWORD dwAction,_In_ FN_PROGRESS fnProgress,_In_ PROG_INVOKE_SETTING ProgressInvokeSetting,_In_opt_ PVOID Args)
DWORD WINAPI advapi32.TreeSetNamedSecurityInfoA(_In_ LPTSTR pObjectName,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_In_opt_ PSID pOwner,_In_opt_ PSID pGroup,_In_opt_ PACL pDacl,_In_opt_ PACL pSacl,_In_ DWORD dwAction,_In_ FN_PROGRESS fnProgress,_In_ PROG_INVOKE_SETTING ProgressInvokeSetting,_In_opt_ PVOID Args)
BOOL WINAPI advapi32.AccessCheckByType(_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_opt_ PSID PrincipalSelfSid,_In_ HANDLE ClientToken,_In_ DWORD DesiredAccess,_Inout_opt_ POBJECT_TYPE_LIST ObjectTypeList,_In_ DWORD ObjectTypeListLength,_In_ PGENERIC_MAPPING GenericMapping,_Out_opt_ PPRIVILEGE_SET PrivilegeSet,_Inout_ LPDWORD PrivilegeSetLength,_Out_ LPDWORD GrantedAccess,_Out_ LPBOOL AccessStatus)
BOOL WINAPI advapi32.LookupAccountSid(_In_opt_ LPCTSTR lpSystemName,_In_ PSID lpSid,_Out_opt_ LPTSTR lpName,_Inout_ LPDWORD cchName,_Out_opt_ LPTSTR lpReferencedDomainName,_Inout_ LPDWORD cchReferencedDomainName,_Out_ PSID_NAME_USE peUse)
BOOL WINAPI advapi32.LookupAccountSidW(_In_opt_ LPCTSTR lpSystemName,_In_ PSID lpSid,_Out_opt_ LPTSTR lpName,_Inout_ LPDWORD cchName,_Out_opt_ LPTSTR lpReferencedDomainName,_Inout_ LPDWORD cchReferencedDomainName,_Out_ PSID_NAME_USE peUse)
BOOL WINAPI advapi32.LookupAccountSidA(_In_opt_ LPCTSTR lpSystemName,_In_ PSID lpSid,_Out_opt_ LPTSTR lpName,_Inout_ LPDWORD cchName,_Out_opt_ LPTSTR lpReferencedDomainName,_Inout_ LPDWORD cchReferencedDomainName,_Out_ PSID_NAME_USE peUse)
BOOLEAN WINAPI advapi32.AuditSetGlobalSacl(_In_ PCWSTR ObjectTypeName,_In_opt_ PACL Acl)
BOOLEAN WINAPI advapi32.AuditSetGlobalSaclW(_In_ PCWSTR ObjectTypeName,_In_opt_ PACL Acl)
BOOLEAN WINAPI advapi32.AuditSetGlobalSaclA(_In_ PCWSTR ObjectTypeName,_In_opt_ PACL Acl)
BOOL WINAPI advapi32.AddAccessAllowedAceEx(_Inout_ PACL pAcl,_In_ DWORD dwAceRevision,_In_ DWORD AceFlags,_In_ DWORD AccessMask,_In_ PSID pSid)
BOOL WINAPI advapi32.AccessCheckByTypeResultListAndAuditAlarm(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ LPCTSTR ObjectTypeName,_In_opt_ LPCTSTR ObjectName,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_opt_ PSID PrincipalSelfSid,_In_ DWORD DesiredAccess,_In_ AUDIT_EVENT_TYPE AuditType,_In_ DWORD Flags,_Inout_opt_ POBJECT_TYPE_LIST ObjectTypeList,_In_ DWORD ObjectTypeListLength,_In_ PGENERIC_MAPPING GenericMapping,_In_ BOOL ObjectCreation,_Out_ LPDWORD GrantedAccess,_Out_ LPDWORD AccessStatusList,_Out_ LPBOOL pfGenerateOnClose)
BOOL WINAPI advapi32.AccessCheckByTypeResultListAndAuditAlarmW(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ LPCTSTR ObjectTypeName,_In_opt_ LPCTSTR ObjectName,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_opt_ PSID PrincipalSelfSid,_In_ DWORD DesiredAccess,_In_ AUDIT_EVENT_TYPE AuditType,_In_ DWORD Flags,_Inout_opt_ POBJECT_TYPE_LIST ObjectTypeList,_In_ DWORD ObjectTypeListLength,_In_ PGENERIC_MAPPING GenericMapping,_In_ BOOL ObjectCreation,_Out_ LPDWORD GrantedAccess,_Out_ LPDWORD AccessStatusList,_Out_ LPBOOL pfGenerateOnClose)
BOOL WINAPI advapi32.AccessCheckByTypeResultListAndAuditAlarmA(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ LPCTSTR ObjectTypeName,_In_opt_ LPCTSTR ObjectName,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_opt_ PSID PrincipalSelfSid,_In_ DWORD DesiredAccess,_In_ AUDIT_EVENT_TYPE AuditType,_In_ DWORD Flags,_Inout_opt_ POBJECT_TYPE_LIST ObjectTypeList,_In_ DWORD ObjectTypeListLength,_In_ PGENERIC_MAPPING GenericMapping,_In_ BOOL ObjectCreation,_Out_ LPDWORD GrantedAccess,_Out_ LPDWORD AccessStatusList,_Out_ LPBOOL pfGenerateOnClose)
BOOL WINAPI advapi32.SetSecurityDescriptorDacl(_Inout_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_ BOOL bDaclPresent,_In_opt_ PACL pDacl,_In_ BOOL bDaclDefaulted)
DWORD WINAPI advapi32.GetSecurityDescriptorRMControl(_In_ PSECURITY_DESCRIPTOR SecurityDescriptor,_Out_ PUCHAR RMControl)
BOOL WINAPI advapi32.InitializeAcl(_Out_ PACL pAcl,_In_ DWORD nAclLength,_In_ DWORD dwAclRevision)
PUCHAR WINAPI advapi32.GetSidSubAuthorityCount(_In_ PSID pSid)
HRESULT WINAPI None.WsDumpMemory(_In_opt_ WS_ERROR* error)
BOOL WINAPI advapi32.SetSecurityDescriptorSacl(_Inout_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_ BOOL bSaclPresent,_In_opt_ PACL pSacl,_In_ BOOL bSaclDefaulted)
BOOL WINAPI advapi32.AllocateAndInitializeSid(_In_ PSID_IDENTIFIER_AUTHORITY pIdentifierAuthority,_In_ BYTE nSubAuthorityCount,_In_ DWORD dwSubAuthority0,_In_ DWORD dwSubAuthority1,_In_ DWORD dwSubAuthority2,_In_ DWORD dwSubAuthority3,_In_ DWORD dwSubAuthority4,_In_ DWORD dwSubAuthority5,_In_ DWORD dwSubAuthority6,_In_ DWORD dwSubAuthority7,_Out_ PSID *pSid)
BOOL WINAPI userenv.GetDefaultUserProfileDirectory(_Out_opt_ LPTSTR lpProfileDir,_Inout_ LPDWORD lpcchSize)
BOOL WINAPI userenv.GetDefaultUserProfileDirectoryW(_Out_opt_ LPTSTR lpProfileDir,_Inout_ LPDWORD lpcchSize)
BOOL WINAPI userenv.GetDefaultUserProfileDirectoryA(_Out_opt_ LPTSTR lpProfileDir,_Inout_ LPDWORD lpcchSize)
HRESULT WINAPI webservices.WsWriteEndCData(_In_ WS_XML_WRITER* writer,_In_opt_ WS_ERROR* error)
DWORD WINAPI advapi32.LookupSecurityDescriptorParts(_Out_opt_ PTRUSTEE *pOwner,_Out_opt_ PTRUSTEE *pGroup,_Out_opt_ PULONG cCountOfAccessEntries,_Out_opt_ PEXPLICIT_ACCESS *pListOfAccessEntries,_Out_opt_ PULONG cCountOfAuditEntries,_Out_opt_ PEXPLICIT_ACCESS *pListOfAuditEntries,_In_ PSECURITY_DESCRIPTOR pSD)
DWORD WINAPI advapi32.LookupSecurityDescriptorPartsW(_Out_opt_ PTRUSTEE *pOwner,_Out_opt_ PTRUSTEE *pGroup,_Out_opt_ PULONG cCountOfAccessEntries,_Out_opt_ PEXPLICIT_ACCESS *pListOfAccessEntries,_Out_opt_ PULONG cCountOfAuditEntries,_Out_opt_ PEXPLICIT_ACCESS *pListOfAuditEntries,_In_ PSECURITY_DESCRIPTOR pSD)
DWORD WINAPI advapi32.LookupSecurityDescriptorPartsA(_Out_opt_ PTRUSTEE *pOwner,_Out_opt_ PTRUSTEE *pGroup,_Out_opt_ PULONG cCountOfAccessEntries,_Out_opt_ PEXPLICIT_ACCESS *pListOfAccessEntries,_Out_opt_ PULONG cCountOfAuditEntries,_Out_opt_ PEXPLICIT_ACCESS *pListOfAuditEntries,_In_ PSECURITY_DESCRIPTOR pSD)
BOOL WINAPI advapi32.ImpersonateSelf(_In_ SECURITY_IMPERSONATION_LEVEL ImpersonationLevel)
HRESULT WINAPI webservices.WsGetMetadataEndpoints(_In_ WS_METADATA* metadata,_Out_ WS_METADATA_ENDPOINTS* endpoints,_In_opt_ WS_ERROR* error)
BOOL WINAPI userenv.CreateEnvironmentBlock(_Out_ LPVOID *lpEnvironment,_In_opt_ HANDLE hToken,_In_ BOOL bInherit)
BOOL WINAPI advapi32.ImpersonateAnonymousToken(_In_ HANDLE ThreadHandle)
DWORD WINAPI advapi32.GetAuditedPermissionsFromAcl(_In_ PACL pacl,_In_ PTRUSTEE pTrustee,_Out_ PACCESS_MASK pSuccessfulAuditedRights,_Out_ PACCESS_MASK pFailedAuditRights)
DWORD WINAPI advapi32.GetAuditedPermissionsFromAclW(_In_ PACL pacl,_In_ PTRUSTEE pTrustee,_Out_ PACCESS_MASK pSuccessfulAuditedRights,_Out_ PACCESS_MASK pFailedAuditRights)
DWORD WINAPI advapi32.GetAuditedPermissionsFromAclA(_In_ PACL pacl,_In_ PTRUSTEE pTrustee,_Out_ PACCESS_MASK pSuccessfulAuditedRights,_Out_ PACCESS_MASK pFailedAuditRights)
HRESULT WINAPI webservices.WsMoveReader(_In_ WS_XML_READER* reader,_In_ WS_MOVE_TO moveTo,BOOL* found None,_In_opt_ WS_ERROR* error)
BOOL WINAPI advapi32.GetSecurityDescriptorGroup(_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_Out_ PSID *pGroup,_Out_ LPBOOL lpbGroupDefaulted)
HRESULT WINAPI webservices.WsTrimXmlWhitespace(WCHAR* chars None,_In_ ULONG charCount,WCHAR** trimmedChars None,_Out_ ULONG* *trimmedCount,_In_opt_ WS_ERROR* error)
HRESULT WINAPI webservices.WsInitializeMessage(_In_ WS_MESSAGE* message,_In_ WS_MESSAGE_INITIALIZATION initialization,_In_opt_ WS_MESSAGE* sourceMessage,_In_opt_ WS_ERROR* error)
BOOL WINAPI advapi32.PrivilegeCheck(_In_ HANDLE ClientToken,_Inout_ PPRIVILEGE_SET RequiredPrivileges,_Out_ LPBOOL pfResult)
BOOL WINAPI authz.AuthzEnumerateSecurityEventSources(_In_ DWORD dwFlags,_Out_ PAUTHZ_SOURCE_SCHEMA_REGISTRATION Buffer,_Out_ PDWORD pdwCount,_Inout_ PDWORD pdwLength)
HRESULT WINAPI webservices.WsWriteEnvelopeEnd(_In_ WS_MESSAGE* message,_In_opt_ WS_ERROR* error)
HRESULT WINAPI dssec.DSCreateISecurityInfoObjectEx(_In_ LPCWSTR pwszObjectPath,_In_ LPCWSTR pwszObjectClass,_In_ LPCWSTR pwszServer,_In_ LPCWSTR pwszUserName,_In_ LPCWSTR pwszPassword,_In_ DWORD dwFlags,_Out_ LPSECURITYINFO *ppSI,_In_opt_ PFNREADOBJECTSECURITY pfnReadSD,_In_opt_ PFNWRITEOBJECTSECURITY pfnWriteSD,_In_ LPARAM lpContext)
DWORD WINAPI advapi32.BuildSecurityDescriptor(_In_opt_ PTRUSTEE pOwner,_In_opt_ PTRUSTEE pGroup,_In_ ULONG cCountOfAccessEntries,_In_opt_ PEXPLICIT_ACCESS pListOfAccessEntries,_In_ ULONG cCountOfAuditEntries,_In_opt_ PEXPLICIT_ACCESS pListOfAuditEntries,_In_opt_ PSECURITY_DESCRIPTOR pOldSD,_Out_ PULONG pSizeNewSD,_Out_ PSECURITY_DESCRIPTOR *pNewSD)
DWORD WINAPI advapi32.BuildSecurityDescriptorW(_In_opt_ PTRUSTEE pOwner,_In_opt_ PTRUSTEE pGroup,_In_ ULONG cCountOfAccessEntries,_In_opt_ PEXPLICIT_ACCESS pListOfAccessEntries,_In_ ULONG cCountOfAuditEntries,_In_opt_ PEXPLICIT_ACCESS pListOfAuditEntries,_In_opt_ PSECURITY_DESCRIPTOR pOldSD,_Out_ PULONG pSizeNewSD,_Out_ PSECURITY_DESCRIPTOR *pNewSD)
DWORD WINAPI advapi32.BuildSecurityDescriptorA(_In_opt_ PTRUSTEE pOwner,_In_opt_ PTRUSTEE pGroup,_In_ ULONG cCountOfAccessEntries,_In_opt_ PEXPLICIT_ACCESS pListOfAccessEntries,_In_ ULONG cCountOfAuditEntries,_In_opt_ PEXPLICIT_ACCESS pListOfAuditEntries,_In_opt_ PSECURITY_DESCRIPTOR pOldSD,_Out_ PULONG pSizeNewSD,_Out_ PSECURITY_DESCRIPTOR *pNewSD)
HRESULT WINAPI webservices.WsResetHeap(_In_ WS_HEAP* heap,_In_opt_ WS_ERROR* error)
BOOL WINAPI userenv.ExpandEnvironmentStringsForUser(_In_opt_ HANDLE hToken,_In_ LPCTSTR lpSrc,_Out_ LPTSTR lpDest,_In_ DWORD dwSize)
BOOL WINAPI userenv.ExpandEnvironmentStringsForUserW(_In_opt_ HANDLE hToken,_In_ LPCTSTR lpSrc,_Out_ LPTSTR lpDest,_In_ DWORD dwSize)
BOOL WINAPI userenv.ExpandEnvironmentStringsForUserA(_In_opt_ HANDLE hToken,_In_ LPCTSTR lpSrc,_Out_ LPTSTR lpDest,_In_ DWORD dwSize)
BOOL WINAPI advapi32.AddAccessAllowedObjectAce(_Inout_ PACL pAcl,_In_ DWORD dwAceRevision,_In_ DWORD AceFlags,_In_ DWORD AccessMask,_In_opt_ GUID *ObjectTypeGuid,_In_opt_ GUID *InheritedObjectTypeGuid,_In_ PSID pSid)
BOOL WINAPI authz.AuthzUnregisterCapChangeNotification(_In_ AUTHZ_CAP_CHANGE_SUBSCRIPTION_HANDLE hCapChangeSubscription)
BOOL WINAPI authz.AuthzInitializeObjectAccessAuditEvent(_In_ DWORD Flags,_In_ AUTHZ_AUDIT_EVENT_TYPE_HANDLE hAuditEventType,_In_ PWSTR szOperationType,_In_ PWSTR szObjectType,_In_ PWSTR szObjectName,_In_ PWSTR szAdditionalInfo,_Out_ PAUTHZ_AUDIT_EVENT_HANDLE phAuditEvent,_In_ DWORD dwAdditionalParamCount)
HRESULT WINAPI webservices.WsGetDictionary(_In_ WS_ENCODING encoding,WS_XML_DICTIONARY** dictionary None,_In_opt_ WS_ERROR* error)
HRESULT WINAPI webservices.WsWriteXmlBuffer(_In_ WS_XML_WRITER* writer,_In_ WS_XML_BUFFER* xmlBuffer,_In_opt_ WS_ERROR* error)
HRESULT WINAPI webservices.WsWriteStartCData(_In_ WS_XML_WRITER* writer,_In_opt_ WS_ERROR* error)
BOOL WINAPI authz.AuthzInitializeCompoundContext(_In_ AUTHZ_CLIENT_CONTEXT_HANDLE UserContext,_In_ AUTHZ_CLIENT_CONTEXT_HANDLE DeviceContext,_Out_ PAUTHZ_CLIENT_CONTEXT_HANDLE phCompoundContext)
HRESULT WINAPI webservices.WsReadEnvelopeEnd(_In_ WS_MESSAGE* message,_In_opt_ WS_ERROR* error)
HRESULT WINAPI webservices.WsMoveReader(_In_ WS_XML_READER* reader,_In_ WS_MOVE_TO moveTo,BOOL* found None,_In_opt_ WS_ERROR* error)
HRESULT WINAPI webservices.WsCreateFaultFromError(_In_ WS_ERROR* error,_In_ HRESULT errorCode,_In_ WS_FAULT_DISCLOSURE disclosure,_In_ WS_HEAP* heap,_Out_ WS_FAULT* fault)
BOOL WINAPI authz.AuthzUninstallSecurityEventSource(_In_ DWORD dwFlags,_In_ PCWSTR szEventSourceName)
HRESULT WINAPI ole32.CoIncrementMTAUsage(_Out_ CO_MTA_USAGE_COOKIE *pCookie)
BOOL WINAPI authz.AuthzFreeResourceManager(_In_ AUTHZ_RESOURCE_MANAGER_HANDLE AuthzResourceManager)
DWORD WINAPI advapi32.BuildSecurityDescriptor(_In_opt_ PTRUSTEE pOwner,_In_opt_ PTRUSTEE pGroup,_In_ ULONG cCountOfAccessEntries,_In_opt_ PEXPLICIT_ACCESS pListOfAccessEntries,_In_ ULONG cCountOfAuditEntries,_In_opt_ PEXPLICIT_ACCESS pListOfAuditEntries,_In_opt_ PSECURITY_DESCRIPTOR pOldSD,_Out_ PULONG pSizeNewSD,_Out_ PSECURITY_DESCRIPTOR *pNewSD)
DWORD WINAPI advapi32.BuildSecurityDescriptorW(_In_opt_ PTRUSTEE pOwner,_In_opt_ PTRUSTEE pGroup,_In_ ULONG cCountOfAccessEntries,_In_opt_ PEXPLICIT_ACCESS pListOfAccessEntries,_In_ ULONG cCountOfAuditEntries,_In_opt_ PEXPLICIT_ACCESS pListOfAuditEntries,_In_opt_ PSECURITY_DESCRIPTOR pOldSD,_Out_ PULONG pSizeNewSD,_Out_ PSECURITY_DESCRIPTOR *pNewSD)
DWORD WINAPI advapi32.BuildSecurityDescriptorA(_In_opt_ PTRUSTEE pOwner,_In_opt_ PTRUSTEE pGroup,_In_ ULONG cCountOfAccessEntries,_In_opt_ PEXPLICIT_ACCESS pListOfAccessEntries,_In_ ULONG cCountOfAuditEntries,_In_opt_ PEXPLICIT_ACCESS pListOfAuditEntries,_In_opt_ PSECURITY_DESCRIPTOR pOldSD,_Out_ PULONG pSizeNewSD,_Out_ PSECURITY_DESCRIPTOR *pNewSD)
LPTSTR WINAPI advapi32.GetTrusteeName(_In_ PTRUSTEE pTrustee)
LPTSTR WINAPI advapi32.GetTrusteeNameW(_In_ PTRUSTEE pTrustee)
LPTSTR WINAPI advapi32.GetTrusteeNameA(_In_ PTRUSTEE pTrustee)
BOOL WINAPI userenv.GetUserProfileDirectory(_In_ HANDLE hToken,_Out_opt_ LPTSTR lpProfileDir,_Inout_ LPDWORD lpcchSize)
BOOL WINAPI userenv.GetUserProfileDirectoryW(_In_ HANDLE hToken,_Out_opt_ LPTSTR lpProfileDir,_Inout_ LPDWORD lpcchSize)
BOOL WINAPI userenv.GetUserProfileDirectoryA(_In_ HANDLE hToken,_Out_opt_ LPTSTR lpProfileDir,_Inout_ LPDWORD lpcchSize)
HRESULT WINAPI webservices.WsResetServiceHost(_In_ WS_SERVICE_HOST *serviceHost,_In_opt_ WS_ERROR *error)
BOOL WINAPI advapi32.AddAuditAccessObjectAce(_Inout_ PACL pAcl,_In_ DWORD dwAceRevision,_In_ DWORD AceFlags,_In_ DWORD AccessMask,_In_opt_ GUID *ObjectTypeGuid,_In_opt_ GUID *InheritedObjectTypeGuid,_In_ PSID pSid,_In_ BOOL bAuditSuccess,_In_ BOOL bAuditFailure)
BOOL WINAPI advapi32.AdjustTokenPrivileges(_In_ HANDLE TokenHandle,_In_ BOOL DisableAllPrivileges,_In_opt_ PTOKEN_PRIVILEGES NewState,_In_ DWORD BufferLength,_Out_opt_ PTOKEN_PRIVILEGES PreviousState,_Out_opt_ PDWORD ReturnLength)
HRESULT WINAPI webservices.WsReadStartElement(_In_ WS_XML_READER* reader,_In_opt_ WS_ERROR* error)
HRESULT WINAPI webservices.WsGetHeaderAttributes(_In_ WS_MESSAGE* message,_In_ WS_XML_READER* reader,_Out_ ULONG* headerAttributes,_In_opt_ WS_ERROR* error)
BOOL WINAPI advapi32.OpenThreadToken(_In_ HANDLE ThreadHandle,_In_ DWORD DesiredAccess,_In_ BOOL OpenAsSelf,_Out_ PHANDLE TokenHandle)
HRESULT WINAPI None.WsSetAutoFail(_In_ ULONG count,_In_opt_ WS_ERROR* error)
HRESULT WINAPI webservices.WsReadChars(_In_ WS_XML_READER* reader,WCHAR* chars None,_In_ ULONG maxCharCount,_Out_ ULONG* actualCharCount,_In_opt_ WS_ERROR* error)
HRESULT WINAPI webservices.WsResetMetadata(_In_ WS_METADATA* metadata,_In_opt_ WS_ERROR* error)
HRESULT WINAPI webservices.WsWriteEndElement(_In_ WS_XML_WRITER* writer,_In_opt_ WS_ERROR* error)
HRESULT WINAPI webservices.WsGetDictionary(_In_ WS_ENCODING encoding,WS_XML_DICTIONARY** dictionary None,_In_opt_ WS_ERROR* error)
HRESULT WINAPI webservices.WsAbortListener(_In_ WS_LISTENER* listener,_In_opt_ WS_ERROR* error)
HRESULT WINAPI webservices.WsResetHeap(_In_ WS_HEAP* heap,_In_opt_ WS_ERROR* error)
HRESULT WINAPI webservices.WsAbandonCall(_In_ WS_SERVICE_PROXY* serviceProxy,_In_ ULONG callId,_In_opt_ WS_ERROR* error)
HRESULT WINAPI webservices.WsSkipNode(_In_ WS_XML_READER* reader,_In_opt_ WS_ERROR* error)
VOID WINAPI advapi32.BuildTrusteeWithSid(_Inout_ PTRUSTEE pTrustee,_In_opt_ PSID pSid)
VOID WINAPI advapi32.BuildTrusteeWithSidW(_Inout_ PTRUSTEE pTrustee,_In_opt_ PSID pSid)
VOID WINAPI advapi32.BuildTrusteeWithSidA(_Inout_ PTRUSTEE pTrustee,_In_opt_ PSID pSid)
BOOL WINAPI userenv.GetUserProfileDirectory(_In_ HANDLE hToken,_Out_opt_ LPTSTR lpProfileDir,_Inout_ LPDWORD lpcchSize)
BOOL WINAPI userenv.GetUserProfileDirectoryW(_In_ HANDLE hToken,_Out_opt_ LPTSTR lpProfileDir,_Inout_ LPDWORD lpcchSize)
BOOL WINAPI userenv.GetUserProfileDirectoryA(_In_ HANDLE hToken,_Out_opt_ LPTSTR lpProfileDir,_Inout_ LPDWORD lpcchSize)
HRESULT WINAPI webservices.WsAbortServiceProxy(_In_ WS_SERVICE_PROXY* serviceProxy,_In_opt_ WS_ERROR* error)
INT_PTR WINAPI user32.DialogBoxParam(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpTemplateName,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc,_In_ LPARAM dwInitParam)
INT_PTR WINAPI user32.DialogBoxParamW(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpTemplateName,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc,_In_ LPARAM dwInitParam)
INT_PTR WINAPI user32.DialogBoxParamA(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpTemplateName,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc,_In_ LPARAM dwInitParam)
HRESULT WINAPI ole32.CoGetApartmentType(_Out_ APTTYPE *pAptType,_Out_ APTTYPEQUALIFIER *pAptQualifier)
BOOL WINAPI user32.InsertMenuItem(_In_ HMENU hMenu,_In_ UINT uItem,_In_ BOOL fByPosition,_In_ LPCMENUITEMINFO lpmii)
BOOL WINAPI user32.InsertMenuItemW(_In_ HMENU hMenu,_In_ UINT uItem,_In_ BOOL fByPosition,_In_ LPCMENUITEMINFO lpmii)
BOOL WINAPI user32.InsertMenuItemA(_In_ HMENU hMenu,_In_ UINT uItem,_In_ BOOL fByPosition,_In_ LPCMENUITEMINFO lpmii)
HRESULT WINAPI webservices.WsResetListener(_In_ WS_LISTENER* listener,_In_opt_ WS_ERROR* error)
HRESULT WINOLEAPI combase.CoWaitForMultipleObjects(_In_ DWORD dwFlags,_In_ DWORD dwTimeout,_In_ ULONG cHandles,_In_ LPHANDLE pHandles,_Out_ LPDWORD lpdwIndex)
HRESULT WINAPI webservices.WsRemoveHeader(_In_ WS_MESSAGE *message,_In_ WS_HEADER_TYPE headerType,_In_opt_ WS_ERROR* *error)
VOID WINAPI advapi32.BuildTrusteeWithSid(_Inout_ PTRUSTEE pTrustee,_In_opt_ PSID pSid)
VOID WINAPI advapi32.BuildTrusteeWithSidW(_Inout_ PTRUSTEE pTrustee,_In_opt_ PSID pSid)
VOID WINAPI advapi32.BuildTrusteeWithSidA(_Inout_ PTRUSTEE pTrustee,_In_opt_ PSID pSid)
LPCWSTR WINAPI user32.MB_GetString(UINT wBtn None)
INT_PTR CALLBACK None.DialogProc(_In_ HWND hwndDlg,_In_ UINT uMsg,_In_ WPARAM wParam,_In_ LPARAM lParam)
HRESULT WINAPI webservices.WsRevokeSecurityContext(_In_ WS_SECURITY_CONTEXT* securityContext,_In_opt_ WS_ERROR* error)
HRESULT WINAPI webservices.WsGetWriterPosition(_In_ WS_XML_WRITER* writer,_Out_ WS_XML_NODE_POSITION* *nodePosition,_In_opt_ WS_ERROR* error)
LPCWSTR WINAPI user32.MB_GetString(UINT wBtn None)
HRESULT WINAPI ole32.CoGetApartmentType(_Out_ APTTYPE *pAptType,_Out_ APTTYPEQUALIFIER *pAptQualifier)
HRESULT WINAPI webservices.WsGetPolicyAlternativeCount(_In_ WS_POLICY* policy,_Out_ ULONG* count,_In_opt_ WS_ERROR* error)
HWND WINAPI user32.CreateDialog(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc)
HWND WINAPI user32.CreateDialogW(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc)
HWND WINAPI user32.CreateDialogA(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc)
HRESULT __stdcall None.DllGetClassObject(_In_ REFCLSID rclsid,_In_ REFIID riid,_Out_ LPVOID *ppv)
LONG CALLBACK None.FMExtensionProc(HWND hwnd None,WORD wMsg None,LONG lParam None)
LONG CALLBACK None.FMExtensionProcW(HWND hwnd None,WORD wMsg None,LONG lParam None)
HRESULT WINAPI webservices.WsGetErrorString(_In_ WS_ERROR* error,_In_ ULONG index,_Out_ WS_STRING* *string)
HRESULT WINAPI webservices.WsReadXmlBuffer(_In_ WS_XML_READER* reader,_In_ WS_HEAP* heap,WS_XML_BUFFER** xmlBuffer None,_In_opt_ WS_ERROR* error)
HRESULT WINAPI webservices.WsRevokeSecurityContext(_In_ WS_SECURITY_CONTEXT* securityContext,_In_opt_ WS_ERROR* error)
BOOL WINAPI user32.PhysicalToLogicalPoint(_In_ HWND hWnd,_Inout_ LPPOINT lpPoint)
BOOL WINAPI user32.EndDialog(_In_ HWND hDlg,_In_ INT_PTR nResult)
LONG CALLBACK None.FMExtensionProc(HWND hwnd None,WORD wMsg None,LONG lParam None)
LONG CALLBACK None.FMExtensionProcW(HWND hwnd None,WORD wMsg None,LONG lParam None)
BOOL WINAPI user32.ChangeWindowMessageFilterEx(_In_ HWND hWnd,_In_ UINT message,_In_ DWORD action,_Inout_opt_ PCHANGEFILTERSTRUCT pChangeFilterStruct)
BOOL WINAPI user32.CloseWindow(_In_ HWND hWnd)
BOOL WINAPI user32.IsHungAppWindow(_In_ HWND hWnd)
HRESULT WINAPI webservices.WsReadEndElement(_In_ WS_XML_READER* reader,_In_opt_ WS_ERROR* error)
BOOL WINAPI user32.EndDialog(_In_ HWND hDlg,_In_ INT_PTR nResult)
LRESULT CALLBACK None.WndProc(HWND hWnd None,UINT uMessage None,WPARAM wParam None,LPARAM lParam None)
HWND WINAPI user32.FindWindowEx(_In_opt_ HWND hwndParent,_In_opt_ HWND hwndChildAfter,_In_opt_ LPCTSTR lpszClass,_In_opt_ LPCTSTR lpszWindow)
HWND WINAPI user32.FindWindowExW(_In_opt_ HWND hwndParent,_In_opt_ HWND hwndChildAfter,_In_opt_ LPCTSTR lpszClass,_In_opt_ LPCTSTR lpszWindow)
HWND WINAPI user32.FindWindowExA(_In_opt_ HWND hwndParent,_In_opt_ HWND hwndChildAfter,_In_opt_ LPCTSTR lpszClass,_In_opt_ LPCTSTR lpszWindow)
BOOL WINAPI user32.PhysicalToLogicalPoint(_In_ HWND hWnd,_Inout_ LPPOINT lpPoint)
HWND WINAPI user32.FindWindow(_In_opt_ LPCTSTR lpClassName,_In_opt_ LPCTSTR lpWindowName)
HWND WINAPI user32.FindWindowW(_In_opt_ LPCTSTR lpClassName,_In_opt_ LPCTSTR lpWindowName)
HWND WINAPI user32.FindWindowA(_In_opt_ LPCTSTR lpClassName,_In_opt_ LPCTSTR lpWindowName)
BOOL WINAPI user32.SetLayeredWindowAttributes(_In_ HWND hwnd,_In_ COLORREF crKey,_In_ BYTE bAlpha,_In_ DWORD dwFlags)
BOOL WINAPI user32.SetProcessDefaultLayout(_In_ DWORD dwDefaultLayout)
HWND WINAPI user32.GetLastActivePopup(_In_ HWND hWnd)
BOOL WINAPI user32.IsWindow(_In_opt_ HWND hWnd)
BOOL WINAPI user32.DeregisterShellHookWindow(_In_ HWND hWnd)
BOOL WINAPI user32.UpdateLayeredWindow(_In_ HWND hwnd,_In_opt_ HDC hdcDst,_In_opt_ POINT *pptDst,_In_opt_ SIZE *psize,_In_opt_ HDC hdcSrc,_In_opt_ POINT *pptSrc,_In_ COLORREF crKey,_In_opt_ BLENDFUNCTION *pblend,_In_ DWORD dwFlags)
HRESULT WINAPI webservices.WsWriteEndAttribute(_In_ WS_XML_WRITER* writer,_In_opt_ WS_ERROR* error)
BOOL WINAPI user32.EndTask(_In_ HWND hWnd,_In_ BOOL fShutDown,_In_ BOOL fForce)
HRESULT WINOLEAPI combase.CoGetApplicationThreadReference(_Out_ IUnknown **ppThreadReference)
HWND WINAPI user32.WindowFromPoint(_In_ POINT Point)
HRESULT WINAPI webservices.WsGetMissingMetadataDocumentAddress(_In_ WS_METADATA* metadata,WS_ENDPOINT_ADDRESS** address None,_In_opt_ WS_ERROR* error)
HWND WINAPI user32.FindWindow(_In_opt_ LPCTSTR lpClassName,_In_opt_ LPCTSTR lpWindowName)
HWND WINAPI user32.FindWindowW(_In_opt_ LPCTSTR lpClassName,_In_opt_ LPCTSTR lpWindowName)
HWND WINAPI user32.FindWindowA(_In_opt_ LPCTSTR lpClassName,_In_opt_ LPCTSTR lpWindowName)
BOOL WINAPI user32.OpenIcon(_In_ HWND hWnd)
HRESULT WINAPI webservices.WsReadEndAttribute(_In_ WS_XML_READER* reader,_In_opt_ WS_ERROR* error)
BOOL WINAPI user32.GetWindowDisplayAffinity(_In_ HWND hWnd,_Out_ DWORD *dwAffinity)
BOOL WINAPI user32.SetProcessDefaultLayout(_In_ DWORD dwDefaultLayout)
HWND WINAPI user32.ChildWindowFromPoint(_In_ HWND hWndParent,_In_ POINT Point)
BOOL WINAPI user32.ShowOwnedPopups(_In_ HWND hWnd,_In_ BOOL fShow)
BOOL WINAPI user32.AnimateWindow(_In_ HWND hwnd,_In_ DWORD dwTime,_In_ DWORD dwFlags)
BOOL WINAPI user32.BringWindowToTop(_In_ HWND hWnd)
FARPROC WINAPI kernel32.GetProcAddress(_In_ HMODULE hModule,_In_ LPCSTR lpProcName)
BOOL WINAPI user32.IsWindowUnicode(_In_ HWND hWnd)
BOOL WINAPI user32.SetLayeredWindowAttributes(_In_ HWND hwnd,_In_ COLORREF crKey,_In_ BYTE bAlpha,_In_ DWORD dwFlags)
HRESULT WINAPI webservices.WsReadCharsUtf8(_In_ WS_XML_READER* reader,BYTE* bytes None,_In_ ULONG maxByteCount,_Out_ ULONG* actualByteCount,_In_opt_ WS_ERROR* error)
BOOL WINAPI user32.SetProcessDefaultLayout(_In_ DWORD dwDefaultLayout)
HRESULT WINOLEAPI combase.CoGetApplicationThreadReference(_Out_ IUnknown **ppThreadReference)
BOOL WINAPI user32.ShowOwnedPopups(_In_ HWND hWnd,_In_ BOOL fShow)
BOOL WINAPI user32.AdjustWindowRectEx(_Inout_ LPRECT lpRect,_In_ DWORD dwStyle,_In_ BOOL bMenu,_In_ DWORD dwExStyle)
HRESULT WINAPI webservices.WsEndReaderCanonicalization(_In_ WS_XML_READER* reader,_In_opt_ WS_ERROR* error)
HRESULT WINAPI webservices.WsReadNode(_In_ WS_XML_READER* reader,_In_opt_ WS_ERROR* error)
BOOL WINAPI user32.AllowSetForegroundWindow(_In_ DWORD dwProcessId)
VOID WINAPI user32.SwitchToThisWindow(_In_ HWND hWnd,_In_ BOOL fAltTab)
BOOL WINAPI user32.GetWindowInfo(_In_ HWND hwnd,_Inout_ PWINDOWINFO pwi)
BOOL WINAPI user32.UpdateLayeredWindow(_In_ HWND hwnd,_In_opt_ HDC hdcDst,_In_opt_ POINT *pptDst,_In_opt_ SIZE *psize,_In_opt_ HDC hdcSrc,_In_opt_ POINT *pptSrc,_In_ COLORREF crKey,_In_opt_ BLENDFUNCTION *pblend,_In_ DWORD dwFlags)
HWND WINAPI user32.GetAncestor(_In_ HWND hwnd,_In_ UINT gaFlags)
BOOL WINAPI user32.LockSetForegroundWindow(_In_ UINT uLockCode)
HRESULT WINAPI webservices.WsResetError(_In_ WS_ERROR* error)
BOOL WINAPI user32.IsZoomed(_In_ HWND hWnd)
BOOL WINAPI user32.GetGUIThreadInfo(_In_ DWORD idThread,_Inout_ LPGUITHREADINFO lpgui)
BOOL WINAPI user32.SetWindowDisplayAffinity(_In_ HWND hWnd,_In_ DWORD dwAffinity)
BOOL WINAPI user32.AnimateWindow(_In_ HWND hwnd,_In_ DWORD dwTime,_In_ DWORD dwFlags)
HWND WINAPI None.GetNextWindow(_In_ HWND hWnd,_In_ UINT wCmd)
BOOL WINAPI user32.ShowOwnedPopups(_In_ HWND hWnd,_In_ BOOL fShow)
UINT WINAPI user32.RealGetWindowClass(_In_ HWND hwnd,_Out_ LPTSTR pszType,_In_ UINT cchType)
UINT WINAPI user32.RealGetWindowClassW(_In_ HWND hwnd,_Out_ LPTSTR pszType,_In_ UINT cchType)
BOOL WINAPI user32.GetTitleBarInfo(_In_ HWND hwnd,_Inout_ PTITLEBARINFO pti)
BOOL WINAPI user32.GetGUIThreadInfo(_In_ DWORD idThread,_Inout_ LPGUITHREADINFO lpgui)
BOOL WINAPI user32.IsWindowUnicode(_In_ HWND hWnd)
BOOL WINAPI user32.EnumChildWindows(_In_opt_ HWND hWndParent,_In_ WNDENUMPROC lpEnumFunc,_In_ LPARAM lParam)
HWND WINAPI user32.GetParent(_In_ HWND hWnd)
BOOL WINAPI user32.IsGUIThread(_In_ BOOL bConvert)
BOOL WINAPI user32.AnimateWindow(_In_ HWND hwnd,_In_ DWORD dwTime,_In_ DWORD dwFlags)
BOOL WINAPI user32.AdjustWindowRectEx(_Inout_ LPRECT lpRect,_In_ DWORD dwStyle,_In_ BOOL bMenu,_In_ DWORD dwExStyle)
UINT WINAPI user32.RealGetWindowClass(_In_ HWND hwnd,_Out_ LPTSTR pszType,_In_ UINT cchType)
UINT WINAPI user32.RealGetWindowClassW(_In_ HWND hwnd,_Out_ LPTSTR pszType,_In_ UINT cchType)
BOOL WINAPI user32.LockSetForegroundWindow(_In_ UINT uLockCode)
HRESULT WINAPI webservices.WsMatchPolicyAlternative(_In_ WS_POLICY* policy,_In_ ULONG alternativeIndex,_In_ WS_POLICY_CONSTRAINTS* policyConstraints,_In_ BOOL matchRequired,_In_ WS_HEAP* heap,_In_opt_ WS_ERROR* error)
BOOL WINAPI user32.EndDeferWindowPos(_In_ HDWP hWinPosInfo)
UINT WINAPI user32.GetWindowModuleFileName(_In_ HWND hwnd,_Out_ LPTSTR lpszFileName,_In_ UINT cchFileNameMax)
UINT WINAPI user32.GetWindowModuleFileNameW(_In_ HWND hwnd,_Out_ LPTSTR lpszFileName,_In_ UINT cchFileNameMax)
UINT WINAPI user32.GetWindowModuleFileNameA(_In_ HWND hwnd,_Out_ LPTSTR lpszFileName,_In_ UINT cchFileNameMax)
HRESULT WINAPI webservices.WsEndReaderCanonicalization(_In_ WS_XML_READER* reader,_In_opt_ WS_ERROR* error)
BOOL WINAPI user32.IsChild(_In_ HWND hWndParent,_In_ HWND hWnd)
HRESULT WINAPI webservices.WsGetMissingMetadataDocumentAddress(_In_ WS_METADATA* metadata,WS_ENDPOINT_ADDRESS** address None,_In_opt_ WS_ERROR* error)
BOOL WINAPI user32.SetWindowText(_In_ HWND hWnd,_In_opt_ LPCTSTR lpString)
BOOL WINAPI user32.SetWindowTextW(_In_ HWND hWnd,_In_opt_ LPCTSTR lpString)
BOOL WINAPI user32.SetWindowTextA(_In_ HWND hWnd,_In_opt_ LPCTSTR lpString)
HRESULT WINAPI webservices.WsEndWriterCanonicalization(_In_ WS_XML_WRITER* writer,_In_opt_ WS_ERROR* error)
HRESULT WINAPI webservices.WsMatchPolicyAlternative(_In_ WS_POLICY* policy,_In_ ULONG alternativeIndex,_In_ WS_POLICY_CONSTRAINTS* policyConstraints,_In_ BOOL matchRequired,_In_ WS_HEAP* heap,_In_opt_ WS_ERROR* error)
BOOL WINAPI user32.ChangeWindowMessageFilter(_In_ UINT message,_In_ DWORD dwFlag)
HWND WINAPI user32.GetTopWindow(_In_opt_ HWND hWnd)
BOOL WINAPI user32.GetProcessDefaultLayout(_Out_ DWORD *pdwDefaultLayout)
BOOL WINAPI user32.GetGUIThreadInfo(_In_ DWORD idThread,_Inout_ LPGUITHREADINFO lpgui)
HRESULT WINAPI webservices.WsMatchPolicyAlternative(_In_ WS_POLICY* policy,_In_ ULONG alternativeIndex,_In_ WS_POLICY_CONSTRAINTS* policyConstraints,_In_ BOOL matchRequired,_In_ WS_HEAP* heap,_In_opt_ WS_ERROR* error)
HRESULT WINAPI webservices.WsCheckMustUnderstandHeaders(_In_ WS_MESSAGE* message,_In_opt_ WS_ERROR* error)
HWND WINAPI user32.SetParent(_In_ HWND hWndChild,_In_opt_ HWND hWndNewParent)
HWND WINAPI user32.ChildWindowFromPointEx(_In_ HWND hwndParent,_In_ POINT pt,_In_ UINT uFlags)
BOOL WINAPI user32.GetClientRect(_In_ HWND hWnd,_Out_ LPRECT lpRect)
HWND WINAPI None.GetNextWindow(_In_ HWND hWnd,_In_ UINT wCmd)
HRESULT WINAPI webservices.WsAbandonMessage(_In_ WS_CHANNEL* channel,_In_ WS_MESSAGE* message,_In_opt_ WS_ERROR* error)
DWORD WINAPI user32.GetWindowThreadProcessId(_In_ HWND hWnd,_Out_opt_ LPDWORD lpdwProcessId)
BOOL CALLBACK None.EnumThreadWndProc(_In_ HWND hwnd,_In_ LPARAM lParam)
HWND WINAPI user32.RealChildWindowFromPoint(_In_ HWND hwndParent,_In_ POINT ptParentClientCoords)
HWND WINAPI user32.WindowFromPhysicalPoint(_In_ POINT Point)
HRESULT CALLBACK None.MessageRecieved(const WS_OPERATION_CONTEXT* context,const WS_ASYNC_CONTEXT* asyncContext,WS_ERROR* error None)
BOOL WINAPI user32.ShowOwnedPopups(_In_ HWND hWnd,_In_ BOOL fShow)
BOOL WINAPI user32.ShowOwnedPopups(_In_ HWND hWnd,_In_ BOOL fShow)
HRESULT WINAPI webservices.WsReadNode(_In_ WS_XML_READER* reader,_In_opt_ WS_ERROR* error)
BOOL WINAPI user32.EnumThreadWindows(_In_ DWORD dwThreadId,_In_ WNDENUMPROC lpfn,_In_ LPARAM lParam)
HWND WINAPI user32.GetWindow(_In_ HWND hWnd,_In_ UINT uCmd)
BOOL WINAPI user32.IsChild(_In_ HWND hWndParent,_In_ HWND hWnd)
HWND WINAPI None.GetNextWindow(_In_ HWND hWnd,_In_ UINT wCmd)
BOOL WINAPI user32.IsWindowVisible(_In_ HWND hWnd)
BOOL WINAPI user32.GetLayeredWindowAttributes(_In_ HWND hwnd,_Out_opt_ COLORREF *pcrKey,_Out_opt_ BYTE *pbAlpha,_Out_opt_ DWORD *pdwFlags)
BOOL WINAPI user32.EnumChildWindows(_In_opt_ HWND hWndParent,_In_ WNDENUMPROC lpEnumFunc,_In_ LPARAM lParam)
BOOL WINAPI user32.DestroyWindow(_In_ HWND hWnd)
HRESULT WINAPI None.Initialize(RO_INIT_TYPE initType None)
HRESULT WINAPI webservices.WsEndReaderCanonicalization(_In_ WS_XML_READER* reader,_In_opt_ WS_ERROR* error)
BOOL WINAPI user32.GetWindowRect(_In_ HWND hWnd,_Out_ LPRECT lpRect)
BOOL WINAPI user32.SetForegroundWindow(_In_ HWND hWnd)
BOOL WINAPI user32.EnumWindows(_In_ WNDENUMPROC lpEnumFunc,_In_ LPARAM lParam)
BOOL CALLBACK None.EnumChildProc(_In_ HWND hwnd,_In_ LPARAM lParam)
BOOL WINAPI user32.AdjustWindowRect(_Inout_ LPRECT lpRect,_In_ DWORD dwStyle,_In_ BOOL bMenu)
HRESULT CALLBACK None.CreateSessionCalculator(const WS_OPERATION_CONTEXT* context,void** userChannelState None,const WS_ASYNC_CONTEXT* asyncContext,WS_ERROR* error None)
HWND WINAPI user32.WindowFromPhysicalPoint(_In_ POINT Point)
BOOL WINAPI user32.GetWindowRect(_In_ HWND hWnd,_Out_ LPRECT lpRect)
BOOL WINAPI user32.IsIconic(_In_ HWND hWnd)
BOOL WINAPI user32.GetWindowPlacement(_In_ HWND hWnd,_Inout_ WINDOWPLACEMENT *lpwndpl)
BOOL CALLBACK None.EnumChildProc(_In_ HWND hwnd,_In_ LPARAM lParam)
BOOL WINAPI user32.AdjustWindowRect(_Inout_ LPRECT lpRect,_In_ DWORD dwStyle,_In_ BOOL bMenu)
HWND WINAPI user32.SetParent(_In_ HWND hWndChild,_In_opt_ HWND hWndNewParent)
HRESULT CALLBACK None.FreeSessionCalculator(const WS_OPERATION_CONTEXT* context,const WS_ASYNC_CONTEXT* asyncContext)
HWND WINAPI user32.RealChildWindowFromPoint(_In_ HWND hwndParent,_In_ POINT ptParentClientCoords)
HWND WINAPI user32.SetParent(_In_ HWND hWndChild,_In_opt_ HWND hWndNewParent)
UINT WINAPI user32.ArrangeIconicWindows(_In_ HWND hWnd)
BOOL WINAPI user32.RegisterShellHookWindow(_In_ HWND hWnd)
BOOL WINAPI user32.AdjustWindowRect(_Inout_ LPRECT lpRect,_In_ DWORD dwStyle,_In_ BOOL bMenu)
BOOL WINAPI user32.GetClassInfo(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpClassName,_Out_ LPWNDCLASS lpWndClass)
BOOL WINAPI user32.GetClassInfoW(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpClassName,_Out_ LPWNDCLASS lpWndClass)
BOOL WINAPI user32.GetClassInfoA(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpClassName,_Out_ LPWNDCLASS lpWndClass)
HRESULT CALLBACK None.CreateSessionCalculator(const WS_OPERATION_CONTEXT* context,void** userChannelState None,const WS_ASYNC_CONTEXT* asyncContext,WS_ERROR* error None)
BOOL WINAPI user32.IsIconic(_In_ HWND hWnd)
BOOL WINAPI user32.GetWindowRect(_In_ HWND hWnd,_Out_ LPRECT lpRect)
BOOL CALLBACK None.EnumChildProc(_In_ HWND hwnd,_In_ LPARAM lParam)
BOOL CALLBACK None.EnumChildProc(_In_ HWND hwnd,_In_ LPARAM lParam)
HRESULT CALLBACK None.FreeSessionCalculator(const WS_OPERATION_CONTEXT* context,const WS_ASYNC_CONTEXT* asyncContext)
HWND WINAPI user32.RealChildWindowFromPoint(_In_ HWND hwndParent,_In_ POINT ptParentClientCoords)
UINT WINAPI user32.ArrangeIconicWindows(_In_ HWND hWnd)
BOOL WINAPI user32.GetClassInfo(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpClassName,_Out_ LPWNDCLASS lpWndClass)
BOOL WINAPI user32.GetClassInfoW(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpClassName,_Out_ LPWNDCLASS lpWndClass)
BOOL WINAPI user32.GetClassInfoA(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpClassName,_Out_ LPWNDCLASS lpWndClass)
LRESULT WINAPI user32.CallWindowProc(_In_ WNDPROC lpPrevWndFunc,_In_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
LRESULT WINAPI user32.CallWindowProcW(_In_ WNDPROC lpPrevWndFunc,_In_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
LRESULT WINAPI user32.CallWindowProcA(_In_ WNDPROC lpPrevWndFunc,_In_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
HWND WINAPI user32.RealChildWindowFromPoint(_In_ HWND hwndParent,_In_ POINT ptParentClientCoords)
BOOL WINAPI user32.EnumDesktopWindows(_In_opt_ HDESK hDesktop,_In_ WNDENUMPROC lpfn,_In_ LPARAM lParam)
UINT WINAPI user32.ArrangeIconicWindows(_In_ HWND hWnd)
BOOL WINAPI user32.AdjustWindowRect(_Inout_ LPRECT lpRect,_In_ DWORD dwStyle,_In_ BOOL bMenu)
HWND WINAPI user32.RealChildWindowFromPoint(_In_ HWND hwndParent,_In_ POINT ptParentClientCoords)
BOOL WINAPI user32.SwitchDesktop(_In_ HDESK hDesktop)
BOOL WINAPI user32.EnumDesktopWindows(_In_opt_ HDESK hDesktop,_In_ WNDENUMPROC lpfn,_In_ LPARAM lParam)
LRESULT WINAPI user32.DefWindowProc(_In_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
LRESULT WINAPI user32.DefWindowProcW(_In_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
LRESULT WINAPI user32.DefWindowProcA(_In_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
BOOL WINAPI user32.RegisterShellHookWindow(_In_ HWND hWnd)
HWINSTA WINAPI user32.CreateWindowStation(_In_opt_ LPCTSTR lpwinsta,DWORD dwFlags None,_In_ ACCESS_MASK dwDesiredAccess,_In_opt_ LPSECURITY_ATTRIBUTES lpsa)
HWINSTA WINAPI user32.CreateWindowStationW(_In_opt_ LPCTSTR lpwinsta,DWORD dwFlags None,_In_ ACCESS_MASK dwDesiredAccess,_In_opt_ LPSECURITY_ATTRIBUTES lpsa)
HWINSTA WINAPI user32.CreateWindowStationA(_In_opt_ LPCTSTR lpwinsta,DWORD dwFlags None,_In_ ACCESS_MASK dwDesiredAccess,_In_opt_ LPSECURITY_ATTRIBUTES lpsa)
LRESULT WINAPI user32.CallWindowProc(_In_ WNDPROC lpPrevWndFunc,_In_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
LRESULT WINAPI user32.CallWindowProcW(_In_ WNDPROC lpPrevWndFunc,_In_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
LRESULT WINAPI user32.CallWindowProcA(_In_ WNDPROC lpPrevWndFunc,_In_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
HDESK WINAPI user32.GetThreadDesktop(_In_ DWORD dwThreadId)
LRESULT CALLBACK None.WindowProc(_In_ HWND hwnd,_In_ UINT uMsg,_In_ WPARAM wParam,_In_ LPARAM lParam)
BOOL CALLBACK None.EnumWindowStationProc(_In_ LPTSTR lpszWindowStation,_In_ LPARAM lParam)
BOOL CALLBACK None.WINSTAENUMPROCW(_In_ LPTSTR lpszWindowStation,_In_ LPARAM lParam)
BOOL CALLBACK None.WINSTAENUMPROCA(_In_ LPTSTR lpszWindowStation,_In_ LPARAM lParam)
BOOL WINAPI user32.EnumDesktopWindows(_In_opt_ HDESK hDesktop,_In_ WNDENUMPROC lpfn,_In_ LPARAM lParam)
BOOL WINAPI user32.SetThreadDesktop(_In_ HDESK hDesktop)
BOOL WINAPI user32.EnumDesktopWindows(_In_opt_ HDESK hDesktop,_In_ WNDENUMPROC lpfn,_In_ LPARAM lParam)
BOOL CALLBACK None.EnumWindowStationProc(_In_ LPTSTR lpszWindowStation,_In_ LPARAM lParam)
BOOL CALLBACK None.WINSTAENUMPROCW(_In_ LPTSTR lpszWindowStation,_In_ LPARAM lParam)
BOOL CALLBACK None.WINSTAENUMPROCA(_In_ LPTSTR lpszWindowStation,_In_ LPARAM lParam)
BOOL WINAPI user32.EnumDesktopWindows(_In_opt_ HDESK hDesktop,_In_ WNDENUMPROC lpfn,_In_ LPARAM lParam)
BOOL WINAPI user32.SetProcessWindowStation(_In_ HWINSTA hWinSta)
LRESULT CALLBACK None.WindowProc(_In_ HWND hwnd,_In_ UINT uMsg,_In_ WPARAM wParam,_In_ LPARAM lParam)
HWINSTA WINAPI user32.CreateWindowStation(_In_opt_ LPCTSTR lpwinsta,DWORD dwFlags None,_In_ ACCESS_MASK dwDesiredAccess,_In_opt_ LPSECURITY_ATTRIBUTES lpsa)
HWINSTA WINAPI user32.CreateWindowStationW(_In_opt_ LPCTSTR lpwinsta,DWORD dwFlags None,_In_ ACCESS_MASK dwDesiredAccess,_In_opt_ LPSECURITY_ATTRIBUTES lpsa)
HWINSTA WINAPI user32.CreateWindowStationA(_In_opt_ LPCTSTR lpwinsta,DWORD dwFlags None,_In_ ACCESS_MASK dwDesiredAccess,_In_opt_ LPSECURITY_ATTRIBUTES lpsa)
HWINSTA WINAPI user32.CreateWindowStation(_In_opt_ LPCTSTR lpwinsta,DWORD dwFlags None,_In_ ACCESS_MASK dwDesiredAccess,_In_opt_ LPSECURITY_ATTRIBUTES lpsa)
HWINSTA WINAPI user32.CreateWindowStationW(_In_opt_ LPCTSTR lpwinsta,DWORD dwFlags None,_In_ ACCESS_MASK dwDesiredAccess,_In_opt_ LPSECURITY_ATTRIBUTES lpsa)
HWINSTA WINAPI user32.CreateWindowStationA(_In_opt_ LPCTSTR lpwinsta,DWORD dwFlags None,_In_ ACCESS_MASK dwDesiredAccess,_In_opt_ LPSECURITY_ATTRIBUTES lpsa)
BOOL WINAPI user32.SetThreadDesktop(_In_ HDESK hDesktop)
BOOL CALLBACK None.EnumWindowStationProc(_In_ LPTSTR lpszWindowStation,_In_ LPARAM lParam)
BOOL CALLBACK None.WINSTAENUMPROCW(_In_ LPTSTR lpszWindowStation,_In_ LPARAM lParam)
BOOL CALLBACK None.WINSTAENUMPROCA(_In_ LPTSTR lpszWindowStation,_In_ LPARAM lParam)
HDESK WINAPI user32.CreateDesktopEx(_In_ LPCTSTR lpszDesktop,_Reserved_ LPCTSTR lpszDevice,_Reserved_ DEVMODE *pDevmode,_In_ DWORD dwFlags,_In_ ACCESS_MASK dwDesiredAccess,_In_opt_ LPSECURITY_ATTRIBUTES lpsa,_In_ ULONG ulHeapSize,_Reserved_ PVOID pvoid)
HDESK WINAPI user32.CreateDesktopExW(_In_ LPCTSTR lpszDesktop,_Reserved_ LPCTSTR lpszDevice,_Reserved_ DEVMODE *pDevmode,_In_ DWORD dwFlags,_In_ ACCESS_MASK dwDesiredAccess,_In_opt_ LPSECURITY_ATTRIBUTES lpsa,_In_ ULONG ulHeapSize,_Reserved_ PVOID pvoid)
HDESK WINAPI user32.CreateDesktopExA(_In_ LPCTSTR lpszDesktop,_Reserved_ LPCTSTR lpszDevice,_Reserved_ DEVMODE *pDevmode,_In_ DWORD dwFlags,_In_ ACCESS_MASK dwDesiredAccess,_In_opt_ LPSECURITY_ATTRIBUTES lpsa,_In_ ULONG ulHeapSize,_Reserved_ PVOID pvoid)
BOOL WINAPI user32.SetProcessWindowStation(_In_ HWINSTA hWinSta)
BOOL WINAPI user32.CloseDesktop(_In_ HDESK hDesktop)
HDESK WINAPI user32.OpenDesktop(_In_ LPTSTR lpszDesktop,_In_ DWORD dwFlags,_In_ BOOL fInherit,_In_ ACCESS_MASK dwDesiredAccess)
HDESK WINAPI user32.OpenDesktopW(_In_ LPTSTR lpszDesktop,_In_ DWORD dwFlags,_In_ BOOL fInherit,_In_ ACCESS_MASK dwDesiredAccess)
HDESK WINAPI user32.OpenDesktopA(_In_ LPTSTR lpszDesktop,_In_ DWORD dwFlags,_In_ BOOL fInherit,_In_ ACCESS_MASK dwDesiredAccess)
HDESK WINAPI user32.OpenInputDesktop(_In_ DWORD dwFlags,_In_ BOOL fInherit,_In_ ACCESS_MASK dwDesiredAccess)
BOOL WINAPI user32.CloseWindowStation(_In_ HWINSTA hWinSta)
BOOL WINAPI user32.EnumDesktopWindows(_In_opt_ HDESK hDesktop,_In_ WNDENUMPROC lpfn,_In_ LPARAM lParam)
BOOL WINAPI user32.RegisterShellHookWindow(_In_ HWND hWnd)
HDESK WINAPI user32.OpenInputDesktop(_In_ DWORD dwFlags,_In_ BOOL fInherit,_In_ ACCESS_MASK dwDesiredAccess)
HDESK WINAPI user32.OpenDesktop(_In_ LPTSTR lpszDesktop,_In_ DWORD dwFlags,_In_ BOOL fInherit,_In_ ACCESS_MASK dwDesiredAccess)
HDESK WINAPI user32.OpenDesktopW(_In_ LPTSTR lpszDesktop,_In_ DWORD dwFlags,_In_ BOOL fInherit,_In_ ACCESS_MASK dwDesiredAccess)
HDESK WINAPI user32.OpenDesktopA(_In_ LPTSTR lpszDesktop,_In_ DWORD dwFlags,_In_ BOOL fInherit,_In_ ACCESS_MASK dwDesiredAccess)
HWINSTA WINAPI user32.OpenWindowStation(_In_ LPTSTR lpszWinSta,_In_ BOOL fInherit,_In_ ACCESS_MASK dwDesiredAccess)
HWINSTA WINAPI user32.OpenWindowStationW(_In_ LPTSTR lpszWinSta,_In_ BOOL fInherit,_In_ ACCESS_MASK dwDesiredAccess)
HWINSTA WINAPI user32.OpenWindowStationA(_In_ LPTSTR lpszWinSta,_In_ BOOL fInherit,_In_ ACCESS_MASK dwDesiredAccess)
BOOL WINAPI user32.CloseWindowStation(_In_ HWINSTA hWinSta)
VOID CALLBACK None.SendAsyncProc(_In_ HWND hwnd,_In_ UINT uMsg,_In_ ULONG_PTR dwData,_In_ LRESULT lResult)
BOOL WINAPI user32.EnumWindowStations(_In_ WINSTAENUMPROC lpEnumFunc,_In_ LPARAM lParam)
BOOL WINAPI user32.EnumWindowStationsW(_In_ WINSTAENUMPROC lpEnumFunc,_In_ LPARAM lParam)
BOOL WINAPI user32.EnumWindowStationsA(_In_ WINSTAENUMPROC lpEnumFunc,_In_ LPARAM lParam)
BOOL WINAPI user32.EnumDesktops(_In_opt_ HWINSTA hwinsta,_In_ DESKTOPENUMPROC lpEnumFunc,_In_ LPARAM lParam)
BOOL WINAPI user32.EnumDesktopsW(_In_opt_ HWINSTA hwinsta,_In_ DESKTOPENUMPROC lpEnumFunc,_In_ LPARAM lParam)
BOOL WINAPI user32.EnumDesktopsA(_In_opt_ HWINSTA hwinsta,_In_ DESKTOPENUMPROC lpEnumFunc,_In_ LPARAM lParam)
BOOL WINAPI user32.PeekMessage(_Out_ LPMSG lpMsg,_In_opt_ HWND hWnd,_In_ UINT wMsgFilterMin,_In_ UINT wMsgFilterMax,_In_ UINT wRemoveMsg)
BOOL WINAPI user32.PeekMessageW(_Out_ LPMSG lpMsg,_In_opt_ HWND hWnd,_In_ UINT wMsgFilterMin,_In_ UINT wMsgFilterMax,_In_ UINT wRemoveMsg)
BOOL WINAPI user32.PeekMessageA(_Out_ LPMSG lpMsg,_In_opt_ HWND hWnd,_In_ UINT wMsgFilterMin,_In_ UINT wMsgFilterMax,_In_ UINT wRemoveMsg)
BOOL CALLBACK None.EnumWindowsProc(_In_ HWND hwnd,_In_ LPARAM lParam)
BOOL WINAPI user32.EnumDesktops(_In_opt_ HWINSTA hwinsta,_In_ DESKTOPENUMPROC lpEnumFunc,_In_ LPARAM lParam)
BOOL WINAPI user32.EnumDesktopsW(_In_opt_ HWINSTA hwinsta,_In_ DESKTOPENUMPROC lpEnumFunc,_In_ LPARAM lParam)
BOOL WINAPI user32.EnumDesktopsA(_In_opt_ HWINSTA hwinsta,_In_ DESKTOPENUMPROC lpEnumFunc,_In_ LPARAM lParam)
INT_PTR CALLBACK None.DlgProc(HWND hDlg None,UINT message None,WPARAM wParam None,LPARAM lParam None)
BOOL WINAPI user32.RegisterShellHookWindow(_In_ HWND hWnd)
BOOL WINAPI user32.EnumWindowStations(_In_ WINSTAENUMPROC lpEnumFunc,_In_ LPARAM lParam)
BOOL WINAPI user32.EnumWindowStationsW(_In_ WINSTAENUMPROC lpEnumFunc,_In_ LPARAM lParam)
BOOL WINAPI user32.EnumWindowStationsA(_In_ WINSTAENUMPROC lpEnumFunc,_In_ LPARAM lParam)
BOOL WINAPI user32.SendMessageCallback(_In_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam,_In_ SENDASYNCPROC lpCallBack,_In_ ULONG_PTR dwData)
BOOL WINAPI user32.SendMessageCallbackW(_In_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam,_In_ SENDASYNCPROC lpCallBack,_In_ ULONG_PTR dwData)
BOOL WINAPI user32.SendMessageCallbackA(_In_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam,_In_ SENDASYNCPROC lpCallBack,_In_ ULONG_PTR dwData)
INT_PTR CALLBACK None.DlgProc(HWND hDlg None,UINT message None,WPARAM wParam None,LPARAM lParam None)
BOOL WINAPI user32.PeekMessage(_Out_ LPMSG lpMsg,_In_opt_ HWND hWnd,_In_ UINT wMsgFilterMin,_In_ UINT wMsgFilterMax,_In_ UINT wRemoveMsg)
BOOL WINAPI user32.PeekMessageW(_Out_ LPMSG lpMsg,_In_opt_ HWND hWnd,_In_ UINT wMsgFilterMin,_In_ UINT wMsgFilterMax,_In_ UINT wRemoveMsg)
BOOL WINAPI user32.PeekMessageA(_Out_ LPMSG lpMsg,_In_opt_ HWND hWnd,_In_ UINT wMsgFilterMin,_In_ UINT wMsgFilterMax,_In_ UINT wRemoveMsg)
UINT WINAPI user32.RegisterWindowMessage(_In_ LPCTSTR lpString)
UINT WINAPI user32.RegisterWindowMessageW(_In_ LPCTSTR lpString)
UINT WINAPI user32.RegisterWindowMessageA(_In_ LPCTSTR lpString)
int CALLBACK None.CompareFunc(LPARAM lParam1 None,LPARAM lParam2 None,LPARAM lParamSort None)
BOOL WINAPI user32.EnumWindowStations(_In_ WINSTAENUMPROC lpEnumFunc,_In_ LPARAM lParam)
BOOL WINAPI user32.EnumWindowStationsW(_In_ WINSTAENUMPROC lpEnumFunc,_In_ LPARAM lParam)
BOOL WINAPI user32.EnumWindowStationsA(_In_ WINSTAENUMPROC lpEnumFunc,_In_ LPARAM lParam)
HRESULT WINAPI gamingtcui.ProcessPendingGameUI(_In_ BOOL waitForCompletion)
UINT WINAPI user32.RegisterWindowMessage(_In_ LPCTSTR lpString)
UINT WINAPI user32.RegisterWindowMessageW(_In_ LPCTSTR lpString)
UINT WINAPI user32.RegisterWindowMessageA(_In_ LPCTSTR lpString)
HRESULT WINAPI gamingtcui.ProcessPendingGameUI(_In_ BOOL waitForCompletion)
int CALLBACK None.CompareFunc(LPARAM lParam1 None,LPARAM lParam2 None,LPARAM lParamSort None)
int CALLBACK None.CompareFunc(LPARAM lParam1 None,LPARAM lParam2 None,LPARAM lParamSort None)
HKL WINAPI user32.LoadKeyboardLayout(_In_ LPCTSTR pwszKLID,_In_ UINT Flags)
HKL WINAPI user32.LoadKeyboardLayoutW(_In_ LPCTSTR pwszKLID,_In_ UINT Flags)
HKL WINAPI user32.LoadKeyboardLayoutA(_In_ LPCTSTR pwszKLID,_In_ UINT Flags)
BOOL WINAPI user32.GetKeyboardState(_Out_ PBYTE lpKeyState)
DWORD WINAPI shlwapi.SHGetAssocKeys(_In_ IQueryAssociations *pqa,_Out_ HKEY *rgKeys,DWORD cKeys None)
int CALLBACK None.CompareFunc(LPARAM lParam1 None,LPARAM lParam2 None,LPARAM lParamSort None)
int CALLBACK None.CompareFunc(LPARAM lParam1 None,LPARAM lParam2 None,LPARAM lParamSort None)
VOID WINAPI kernel32.FreeLibraryAndExitThread(_In_ HMODULE hModule,_In_ DWORD dwExitCode)
BOOL WINAPI authz.AuthzCachedAccessCheck(_In_ DWORD Flags,_In_ AUTHZ_ACCESS_CHECK_RESULTS_HANDLE AuthzHandle,_In_ PAUTHZ_ACCESS_REQUEST pRequest,_In_ AUTHZ_AUDIT_EVENT_HANDLE AuditInfo,_Out_ PAUTHZ_ACCESS_REPLY pReply)
VOID WINAPI kernel32.FreeLibraryAndExitThread(_In_ HMODULE hModule,_In_ DWORD dwExitCode)
DWORD WINAPI kernel32.GetModuleFileName(_In_opt_ HMODULE hModule,_Out_ LPTSTR lpFilename,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetModuleFileNameW(_In_opt_ HMODULE hModule,_Out_ LPTSTR lpFilename,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetModuleFileNameA(_In_opt_ HMODULE hModule,_Out_ LPTSTR lpFilename,_In_ DWORD nSize)
BOOL WINAPI kernel32.FreeLibrary(_In_ HMODULE hModule)
DWORD WINAPI shlwapi.ThreadProc(LPVOID pData None)
int CALLBACK None.CompareFunc(LPARAM lParam1 None,LPARAM lParam2 None,LPARAM lParamSort None)
DWORD WINAPI kernel32.GetModuleFileName(_In_opt_ HMODULE hModule,_Out_ LPTSTR lpFilename,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetModuleFileNameW(_In_opt_ HMODULE hModule,_Out_ LPTSTR lpFilename,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetModuleFileNameA(_In_opt_ HMODULE hModule,_Out_ LPTSTR lpFilename,_In_ DWORD nSize)
BOOL WINAPI kernel32.GetModuleHandleEx(_In_ DWORD dwFlags,_In_opt_ LPCTSTR lpModuleName,_Out_ HMODULE *phModule)
BOOL WINAPI kernel32.GetModuleHandleExW(_In_ DWORD dwFlags,_In_opt_ LPCTSTR lpModuleName,_Out_ HMODULE *phModule)
BOOL WINAPI kernel32.GetModuleHandleExA(_In_ DWORD dwFlags,_In_opt_ LPCTSTR lpModuleName,_Out_ HMODULE *phModule)
HMODULE WINAPI kernel32.LoadLibraryEx(_In_ LPCTSTR lpFileName,_Reserved_ HANDLE hFile,_In_ DWORD dwFlags)
HMODULE WINAPI kernel32.LoadLibraryExW(_In_ LPCTSTR lpFileName,_Reserved_ HANDLE hFile,_In_ DWORD dwFlags)
HMODULE WINAPI kernel32.LoadLibraryExA(_In_ LPCTSTR lpFileName,_Reserved_ HANDLE hFile,_In_ DWORD dwFlags)
DWORD WINAPI kernel32.GetModuleFileName(_In_opt_ HMODULE hModule,_Out_ LPTSTR lpFilename,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetModuleFileNameW(_In_opt_ HMODULE hModule,_Out_ LPTSTR lpFilename,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetModuleFileNameA(_In_opt_ HMODULE hModule,_Out_ LPTSTR lpFilename,_In_ DWORD nSize)
LRESULT CALLBACK None.WindowProc(HWND hwnd None,WM_IME_COMPOSITION None None,WPARAM wParam None,LPARAM lParam None)
HWND WINAPI user32.SetFocus(_In_opt_ HWND hWnd)
LRESULT CALLBACK None.WindowProc(HWND hwnd None,WM_IME_COMPOSITION None None,WPARAM wParam None,LPARAM lParam None)
BOOL WINAPI user32.GetLastInputInfo(_Out_ PLASTINPUTINFO plii)
DWORD WINAPI shlwapi.ThreadProc(LPVOID pData None)
VOID WINAPI user32.keybd_event(_In_ BYTE bVk,_In_ BYTE bScan,_In_ DWORD dwFlags,_In_ ULONG_PTR dwExtraInfo)
HKL WINAPI user32.ActivateKeyboardLayout(_In_ HKL hkl,_In_ UINT Flags)
BOOL WINAPI user32.EnableWindow(_In_ HWND hWnd,_In_ BOOL bEnable)
VOID WINAPI user32.keybd_event(_In_ BYTE bVk,_In_ BYTE bScan,_In_ DWORD dwFlags,_In_ ULONG_PTR dwExtraInfo)
DWORD WINAPI user32.OemKeyScan(_In_ WORD wOemChar)
VOID WINAPI user32.keybd_event(_In_ BYTE bVk,_In_ BYTE bScan,_In_ DWORD dwFlags,_In_ ULONG_PTR dwExtraInfo)
BOOL WINAPI user32.SetKeyboardState(_In_ LPBYTE lpKeyState)
UINT WINAPI user32.MapVirtualKey(_In_ UINT uCode,_In_ UINT uMapType)
UINT WINAPI user32.MapVirtualKeyW(_In_ UINT uCode,_In_ UINT uMapType)
UINT WINAPI user32.MapVirtualKeyA(_In_ UINT uCode,_In_ UINT uMapType)
HKL WINAPI user32.GetKeyboardLayout(_In_ DWORD idThread)
HKL WINAPI user32.ActivateKeyboardLayout(_In_ HKL hkl,_In_ UINT Flags)
BOOL WINAPI user32.GetKeyboardLayoutName(_Out_ LPTSTR pwszKLID)
BOOL WINAPI user32.GetKeyboardLayoutNameW(_Out_ LPTSTR pwszKLID)
BOOL WINAPI user32.GetKeyboardLayoutNameA(_Out_ LPTSTR pwszKLID)
DWORD WINAPI None.ThreadProc(LPVOID lpParameter None)
BOOL WINAPI user32.BlockInput(_In_ BOOL fBlockIt)
BOOL WINAPI user32.UnloadKeyboardLayout(_In_ HKL hkl)
BOOL WINAPI user32.SetKeyboardState(_In_ LPBYTE lpKeyState)
HWND WINAPI user32.SetActiveWindow(_In_ HWND hWnd)
DWORD WINAPI user32.OemKeyScan(_In_ WORD wOemChar)
BOOL WINAPI user32.SetKeyboardState(_In_ LPBYTE lpKeyState)
UINT WINAPI user32.MapVirtualKey(_In_ UINT uCode,_In_ UINT uMapType)
UINT WINAPI user32.MapVirtualKeyW(_In_ UINT uCode,_In_ UINT uMapType)
UINT WINAPI user32.MapVirtualKeyA(_In_ UINT uCode,_In_ UINT uMapType)
SHORT WINAPI user32.VkKeyScanEx(_In_ TCHAR ch,_In_ HKL dwhkl)
SHORT WINAPI user32.VkKeyScanExW(_In_ TCHAR ch,_In_ HKL dwhkl)
SHORT WINAPI user32.VkKeyScanExA(_In_ TCHAR ch,_In_ HKL dwhkl)
BOOL WINAPI user32.EnableWindow(_In_ HWND hWnd,_In_ BOOL bEnable)
HWND WINAPI user32.SetActiveWindow(_In_ HWND hWnd)
BOOL WINAPI user32.IsWindowEnabled(_In_ HWND hWnd)
HKL WINAPI user32.GetKeyboardLayout(_In_ DWORD idThread)
BOOL WINAPI user32.UnloadKeyboardLayout(_In_ HKL hkl)
BOOL WINAPI user32.SetKeyboardState(_In_ LPBYTE lpKeyState)
BOOL WINAPI user32.GetKeyboardLayoutName(_Out_ LPTSTR pwszKLID)
BOOL WINAPI user32.GetKeyboardLayoutNameW(_Out_ LPTSTR pwszKLID)
BOOL WINAPI user32.GetKeyboardLayoutNameA(_Out_ LPTSTR pwszKLID)
HKL WINAPI user32.GetKeyboardLayout(_In_ DWORD idThread)
HKL WINAPI user32.GetKeyboardLayout(_In_ DWORD idThread)
BOOL WINAPI user32.SetKeyboardState(_In_ LPBYTE lpKeyState)
BOOL CALLBACK None.EnumCalendarInfoProc(_In_ LPTSTR lpCalendarInfoString)
BOOL WINAPI user32.UnloadKeyboardLayout(_In_ HKL hkl)
HWND WINAPI user32.SetActiveWindow(_In_ HWND hWnd)
LRESULT CALLBACK None.WindowProc(HWND hwnd None,UINT uMsg None,WPARAM wParam None,LPARAM lParam None)
BOOL CALLBACK None.EnumLanguageGroupsProc(_In_ LGRPID LanguageGroup,_In_ LPTSTR lpLanguageGroupString,_In_ LPTSTR lpLanguageGroupNameString,_In_ DWORD dwFlags,_In_ LONG_PTR lParam)
BOOL WINAPI user32.IsWindowEnabled(_In_ HWND hWnd)
SHORT WINAPI user32.VkKeyScanEx(_In_ TCHAR ch,_In_ HKL dwhkl)
SHORT WINAPI user32.VkKeyScanExW(_In_ TCHAR ch,_In_ HKL dwhkl)
SHORT WINAPI user32.VkKeyScanExA(_In_ TCHAR ch,_In_ HKL dwhkl)
BOOL CALLBACK None.EnumCodePagesProc(_In_ LPTSTR lpCodePageString)
HWND WINAPI user32.SetActiveWindow(_In_ HWND hWnd)
BOOL WINAPI user32.BlockInput(_In_ BOOL fBlockIt)
BOOL CALLBACK None.EnumLocalesProc(_In_ LPTSTR lpLocaleString)
BOOL CALLBACK None.EnumCalendarInfoProc(_In_ LPTSTR lpCalendarInfoString)
BOOL WINAPI user32.SystemParametersInfo(_In_ UINT uiAction,_In_ UINT uiParam,_Inout_ PVOID pvParam,_In_ UINT fWinIni)
BOOL WINAPI user32.SystemParametersInfoW(_In_ UINT uiAction,_In_ UINT uiParam,_Inout_ PVOID pvParam,_In_ UINT fWinIni)
BOOL WINAPI user32.SystemParametersInfoA(_In_ UINT uiAction,_In_ UINT uiParam,_Inout_ PVOID pvParam,_In_ UINT fWinIni)
BOOL WINAPI user32.IsWindowEnabled(_In_ HWND hWnd)
BOOL WINAPI user32.BlockInput(_In_ BOOL fBlockIt)
LRESULT CALLBACK None.WindowProc(HWND hwnd None,UINT uMsg None,WPARAM wParam None,LPARAM lParam None)
BOOL WINAPI user32.SystemParametersInfo(_In_ UINT uiAction,_In_ UINT uiParam,_Inout_ PVOID pvParam,_In_ UINT fWinIni)
BOOL WINAPI user32.SystemParametersInfoW(_In_ UINT uiAction,_In_ UINT uiParam,_Inout_ PVOID pvParam,_In_ UINT fWinIni)
BOOL WINAPI user32.SystemParametersInfoA(_In_ UINT uiAction,_In_ UINT uiParam,_Inout_ PVOID pvParam,_In_ UINT fWinIni)
private Bitmap None.GetCursorImage(int id None)
LRESULT CALLBACK None.WindowProc(HWND hwnd None,UINT uMsg None,WPARAM wParam None,LPARAM lParam None)
HWND WINAPI user32.SetActiveWindow(_In_ HWND hWnd)
private void None.MultipointDeviceArrivalEvent(object sender None,DeviceNotifyEventArgs e None)
HMODULE WINAPI kernel32.LoadLibrary(_In_ LPCTSTR lpFileName)
HMODULE WINAPI kernel32.LoadLibraryW(_In_ LPCTSTR lpFileName)
HMODULE WINAPI kernel32.LoadLibraryA(_In_ LPCTSTR lpFileName)
BOOL WINAPI None.DllMain(_In_ HINSTANCE hinstDLL,_In_ DWORD fdwReason,_In_ LPVOID lpvReserved)
private Bitmap None.GetCursorImage(int id None)
BOOL CALLBACK None.EnumLocalesProcEx(_In_ LPWSTR lpLocaleString,_In_ DWORD dwFlags,_In_ LPARAM lParam)
BOOL WINAPI comctl32.MirrorIcon(_Inout_opt_ HICON *phIconSmall,_Inout_opt_ HICON *phIconLarge)
HMODULE WINAPI kernel32.LoadLibrary(_In_ LPCTSTR lpFileName)
HMODULE WINAPI kernel32.LoadLibraryW(_In_ LPCTSTR lpFileName)
HMODULE WINAPI kernel32.LoadLibraryA(_In_ LPCTSTR lpFileName)
BOOL WINAPI kernel32.NotifyUILanguageChange(_In_ DWORD dwFlags,_In_opt_ PCWSTR pcwstrNewLanguage,_In_opt_ PCWSTR pcwstrPreviousLanguage,_In_ DWORD dwReserved,_Out_opt_ PDWORD pdwStatusRtrn)
HWND WINAPI user32.SetActiveWindow(_In_ HWND hWnd)
LRESULT CALLBACK None.WndProc(HWND hWnd None,UINT uMessage None,WPARAM wParam None,LPARAM lParam None)
BOOL CALLBACK None.EnumLanguageGroupsProc(_In_ LGRPID LanguageGroup,_In_ LPTSTR lpLanguageGroupString,_In_ LPTSTR lpLanguageGroupNameString,_In_ DWORD dwFlags,_In_ LONG_PTR lParam)
BOOL CALLBACK None.EnumLanguageGroupLocalesProc(_In_ LGRPID LanguageGroup,_In_ LCID Locale,_In_ LPTSTR lpLocaleString,_In_ LONG_PTR lParam)
BOOL WINAPI comctl32.DPA_Sort(HDPA pdpa None,PFNDPACOMPARE pfnCmp None,LPARAM lParam None)
BOOL CALLBACK None.EnumGeoInfoProc(_In_ GEOID GeoId)
BOOL WINAPI user32.SystemParametersInfo(_In_ UINT uiAction,_In_ UINT uiParam,_Inout_ PVOID pvParam,_In_ UINT fWinIni)
BOOL WINAPI user32.SystemParametersInfoW(_In_ UINT uiAction,_In_ UINT uiParam,_Inout_ PVOID pvParam,_In_ UINT fWinIni)
BOOL WINAPI user32.SystemParametersInfoA(_In_ UINT uiAction,_In_ UINT uiParam,_Inout_ PVOID pvParam,_In_ UINT fWinIni)
BOOL WINAPI None.DllMain(_In_ HINSTANCE hinstDLL,_In_ DWORD fdwReason,_In_ LPVOID lpvReserved)
BOOL CALLBACK None.EnumCalendarInfoProcEx(_In_ LPTSTR lpCalendarInfoString,_In_ CALID Calendar)
BOOL CALLBACK None.EnumCalendarInfoProcExW(_In_ LPTSTR lpCalendarInfoString,_In_ CALID Calendar)
BOOL CALLBACK None.EnumCalendarInfoProcExA(_In_ LPTSTR lpCalendarInfoString,_In_ CALID Calendar)
BOOL WINAPI comctl32.DPA_DeleteAllPtrs(HDPA pdpa None)
HWND WINAPI user32.SetActiveWindow(_In_ HWND hWnd)
LPTSTR WINAPI user32.CharPrev(_In_ LPCTSTR lpszStart,_In_ LPCTSTR lpszCurrent)
LPTSTR WINAPI user32.CharPrevW(_In_ LPCTSTR lpszStart,_In_ LPCTSTR lpszCurrent)
LPTSTR WINAPI user32.CharPrevA(_In_ LPCTSTR lpszStart,_In_ LPCTSTR lpszCurrent)
BOOL CALLBACK None.EnumLanguageGroupLocalesProc(_In_ LGRPID LanguageGroup,_In_ LCID Locale,_In_ LPTSTR lpLocaleString,_In_ LONG_PTR lParam)
BOOL CALLBACK None.EnumDateFormatsProcExEx(_In_ LPWSTR lpDateFormatString,_In_ CALID CalendarID,_In_ LPARAM lParam)
BOOL WINAPI comctl32.Str_SetPtr(_Inout_ LPTSTR *ppszCurrent,LPCTSTR pszNew None)
BOOL WINAPI comctl32.Str_SetPtrW(_Inout_ LPTSTR *ppszCurrent,LPCTSTR pszNew None)
BOOL WINAPI comctl32.Str_SetPtrA(_Inout_ LPTSTR *ppszCurrent,LPCTSTR pszNew None)
BOOL CALLBACK None.EnumCalendarInfoProcExEx(_In_ LPWSTR lpCalendarInfoString,_In_ CALID Calendar,_In_ LPWSTR lpReserved,_In_ LPARAM lParam)
BOOL CALLBACK None.EnumDateFormatsProc(_In_ LPTSTR lpDateFormatString)
BOOL CALLBACK None.EnumCodePagesProc(_In_ LPTSTR lpCodePageString)
BOOL CALLBACK None.EnumLanguageGroupsProc(_In_ LGRPID LanguageGroup,_In_ LPTSTR lpLanguageGroupString,_In_ LPTSTR lpLanguageGroupNameString,_In_ DWORD dwFlags,_In_ LONG_PTR lParam)
BOOL CALLBACK None.EnumCalendarInfoProc(_In_ LPTSTR lpCalendarInfoString)
BOOL CALLBACK None.EnumTimeFormatsProc(_In_ LPTSTR lpTimeFormatString)
BOOL WINAPI comctl32.DPA_Merge(_Inout_ HDPA hdpaDest,_In_ HDPA hdpaSrc,_In_ DWORD dwFlags,_In_ PFNDPACOMPARE pfnCompare,_In_ PFNDPAMERGE pfnMerge,_In_ LPARAM lParam)
BOOL WINAPI comctl32.DPA_Destroy(HDPA pdpa None)
BOOL CALLBACK None.EnumDateFormatsProcEx(_In_ LPTSTR lpDateFormatString,_In_ CALID CalendarID)
BOOL CALLBACK None.EnumTimeFormatsProcEx(_In_ LPWSTR lpTimeFormatString,_In_ LPARAM lParam)
BOOL WINAPI kernel32.LoadStringByReference(_In_ DWORD Flags,_In_opt_ PCWSTR Language,_In_ PCWSTR SourceString,_Out_opt_ PWSTR Buffer,_In_ ULONG cchBuffer,_In_opt_ PCWSTR Directory,_Out_opt_ PULONG pcchBufferOut)
BOOL WINAPI kernel32.NotifyUILanguageChange(_In_ DWORD dwFlags,_In_opt_ PCWSTR pcwstrNewLanguage,_In_opt_ PCWSTR pcwstrPreviousLanguage,_In_ DWORD dwReserved,_Out_opt_ PDWORD pdwStatusRtrn)
BOOL WINAPI comctl32.DSA_Destroy(_In_ HDSA pdsa)
BOOL WINAPI kernel32.NotifyUILanguageChange(_In_ DWORD dwFlags,_In_opt_ PCWSTR pcwstrNewLanguage,_In_opt_ PCWSTR pcwstrPreviousLanguage,_In_ DWORD dwReserved,_Out_opt_ PDWORD pdwStatusRtrn)
BOOL CALLBACK None.EnumUILanguagesProc(_In_ LPTSTR lpUILanguageString,_In_ LONG_PTR lParam)
BOOL WINAPI comctl32.Str_SetPtr(_Inout_ LPTSTR *ppszCurrent,LPCTSTR pszNew None)
BOOL WINAPI comctl32.Str_SetPtrW(_Inout_ LPTSTR *ppszCurrent,LPCTSTR pszNew None)
BOOL WINAPI comctl32.Str_SetPtrA(_Inout_ LPTSTR *ppszCurrent,LPCTSTR pszNew None)
LPSTR WINAPI user32.CharPrevExA(_In_ WORD CodePage,_In_ LPCSTR lpStart,_In_ LPCSTR lpCurrentChar,_In_ DWORD dwFlags)
LPSTR WINAPI user32.CharPrevExA(_In_ WORD CodePage,_In_ LPCSTR lpStart,_In_ LPCSTR lpCurrentChar,_In_ DWORD dwFlags)
BOOL WINAPI comctl32.DPA_Destroy(HDPA pdpa None)
BOOL WINAPI comctl32.DPA_Destroy(HDPA pdpa None)
BOOL WINAPI comctl32.Str_SetPtr(_Inout_ LPTSTR *ppszCurrent,LPCTSTR pszNew None)
BOOL WINAPI comctl32.Str_SetPtrW(_Inout_ LPTSTR *ppszCurrent,LPCTSTR pszNew None)
BOOL WINAPI comctl32.Str_SetPtrA(_Inout_ LPTSTR *ppszCurrent,LPCTSTR pszNew None)
BOOL WINAPI user32.IsCharLower(_In_ TCHAR ch)
BOOL WINAPI user32.IsCharLowerA(_In_ TCHAR ch)
BOOL CALLBACK None.EnumLanguageGroupLocalesProc(_In_ LGRPID LanguageGroup,_In_ LCID Locale,_In_ LPTSTR lpLocaleString,_In_ LONG_PTR lParam)
HICON WINAPI shell32.ExtractIcon(_Reserved_ HINSTANCE hInst,_In_ LPCTSTR lpszExeFileName,_In_ UINT nIconIndex)
HICON WINAPI shell32.ExtractIconW(_Reserved_ HINSTANCE hInst,_In_ LPCTSTR lpszExeFileName,_In_ UINT nIconIndex)
HICON WINAPI shell32.ExtractIconA(_Reserved_ HINSTANCE hInst,_In_ LPCTSTR lpszExeFileName,_In_ UINT nIconIndex)
DWORD WINAPI user32.CharLowerBuff(_Inout_ LPTSTR lpsz,_In_ DWORD cchLength)
DWORD WINAPI user32.CharLowerBuffW(_Inout_ LPTSTR lpsz,_In_ DWORD cchLength)
DWORD WINAPI user32.CharLowerBuffA(_Inout_ LPTSTR lpsz,_In_ DWORD cchLength)
BOOL WINAPI comctl32.Str_SetPtr(_Inout_ LPTSTR *ppszCurrent,LPCTSTR pszNew None)
BOOL WINAPI comctl32.Str_SetPtrW(_Inout_ LPTSTR *ppszCurrent,LPCTSTR pszNew None)
BOOL WINAPI comctl32.Str_SetPtrA(_Inout_ LPTSTR *ppszCurrent,LPCTSTR pszNew None)
BOOL CALLBACK None.EnumDateFormatsProcEx(_In_ LPTSTR lpDateFormatString,_In_ CALID CalendarID)
BOOL CALLBACK None.EnumUILanguagesProc(_In_ LPTSTR lpUILanguageString,_In_ LONG_PTR lParam)
BOOL WINAPI comctl32.DPA_Merge(_Inout_ HDPA hdpaDest,_In_ HDPA hdpaSrc,_In_ DWORD dwFlags,_In_ PFNDPACOMPARE pfnCompare,_In_ PFNDPAMERGE pfnMerge,_In_ LPARAM lParam)
BOOL WINAPI user32.DestroyIcon(_In_ HICON hIcon)
LPTSTR WINAPI kernel32.lstrcpy(_Out_ LPTSTR lpString1,_In_ LPTSTR lpString2)
LPTSTR WINAPI kernel32.lstrcpyW(_Out_ LPTSTR lpString1,_In_ LPTSTR lpString2)
LPTSTR WINAPI kernel32.lstrcpyA(_Out_ LPTSTR lpString1,_In_ LPTSTR lpString2)
BOOL WINAPI user32.CharToOemBuff(_In_ LPCTSTR lpszSrc,_Out_ LPSTR lpszDst,_In_ DWORD cchDstLength)
BOOL WINAPI user32.CharToOemBuffW(_In_ LPCTSTR lpszSrc,_Out_ LPSTR lpszDst,_In_ DWORD cchDstLength)
BOOL WINAPI user32.CharToOemBuffA(_In_ LPCTSTR lpszSrc,_Out_ LPSTR lpszDst,_In_ DWORD cchDstLength)
BOOL WINAPI user32.IsCharAlpha(_In_ TCHAR ch)
BOOL WINAPI user32.IsCharAlphaW(_In_ TCHAR ch)
BOOL WINAPI user32.IsCharAlphaA(_In_ TCHAR ch)
LPSTR WINAPI user32.CharPrevExA(_In_ WORD CodePage,_In_ LPCSTR lpStart,_In_ LPCSTR lpCurrentChar,_In_ DWORD dwFlags)
LPSTR WINAPI user32.CharPrevExA(_In_ WORD CodePage,_In_ LPCSTR lpStart,_In_ LPCSTR lpCurrentChar,_In_ DWORD dwFlags)
BOOL CALLBACK None.EnumUILanguagesProc(_In_ LPTSTR lpUILanguageString,_In_ LONG_PTR lParam)
HICON WINAPI user32.LoadIcon(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpIconName)
HICON WINAPI user32.LoadIconW(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpIconName)
HICON WINAPI user32.LoadIconA(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpIconName)
LPSTR WINAPI user32.CharPrevExA(_In_ WORD CodePage,_In_ LPCSTR lpStart,_In_ LPCSTR lpCurrentChar,_In_ DWORD dwFlags)
LPSTR WINAPI user32.CharPrevExA(_In_ WORD CodePage,_In_ LPCSTR lpStart,_In_ LPCSTR lpCurrentChar,_In_ DWORD dwFlags)
BOOL CALLBACK None.EnumTimeFormatsProc(_In_ LPTSTR lpTimeFormatString)
BOOL CALLBACK None.EnumDateFormatsProcEx(_In_ LPTSTR lpDateFormatString,_In_ CALID CalendarID)
HICON WINAPI shell32.ExtractIcon(_Reserved_ HINSTANCE hInst,_In_ LPCTSTR lpszExeFileName,_In_ UINT nIconIndex)
HICON WINAPI shell32.ExtractIconW(_Reserved_ HINSTANCE hInst,_In_ LPCTSTR lpszExeFileName,_In_ UINT nIconIndex)
HICON WINAPI shell32.ExtractIconA(_Reserved_ HINSTANCE hInst,_In_ LPCTSTR lpszExeFileName,_In_ UINT nIconIndex)
BOOL WINAPI kernel32.LoadStringByReference(_In_ DWORD Flags,_In_opt_ PCWSTR Language,_In_ PCWSTR SourceString,_Out_opt_ PWSTR Buffer,_In_ ULONG cchBuffer,_In_opt_ PCWSTR Directory,_Out_opt_ PULONG pcchBufferOut)
HICON WINAPI shell32.ExtractIcon(_Reserved_ HINSTANCE hInst,_In_ LPCTSTR lpszExeFileName,_In_ UINT nIconIndex)
HICON WINAPI shell32.ExtractIconW(_Reserved_ HINSTANCE hInst,_In_ LPCTSTR lpszExeFileName,_In_ UINT nIconIndex)
HICON WINAPI shell32.ExtractIconA(_Reserved_ HINSTANCE hInst,_In_ LPCTSTR lpszExeFileName,_In_ UINT nIconIndex)
BOOL WINAPI user32.GetIconInfo(_In_ HICON hIcon,_Out_ PICONINFO piconinfo)
BOOL WINAPI user32.IsCharLower(_In_ TCHAR ch)
BOOL WINAPI user32.IsCharLowerA(_In_ TCHAR ch)
HICON WINAPI shell32.ExtractIcon(_Reserved_ HINSTANCE hInst,_In_ LPCTSTR lpszExeFileName,_In_ UINT nIconIndex)
HICON WINAPI shell32.ExtractIconW(_Reserved_ HINSTANCE hInst,_In_ LPCTSTR lpszExeFileName,_In_ UINT nIconIndex)
HICON WINAPI shell32.ExtractIconA(_Reserved_ HINSTANCE hInst,_In_ LPCTSTR lpszExeFileName,_In_ UINT nIconIndex)
BOOL WINAPI user32.CharToOemBuff(_In_ LPCTSTR lpszSrc,_Out_ LPSTR lpszDst,_In_ DWORD cchDstLength)
BOOL WINAPI user32.CharToOemBuffW(_In_ LPCTSTR lpszSrc,_Out_ LPSTR lpszDst,_In_ DWORD cchDstLength)
BOOL WINAPI user32.CharToOemBuffA(_In_ LPCTSTR lpszSrc,_Out_ LPSTR lpszDst,_In_ DWORD cchDstLength)
HICON WINAPI user32.LoadIcon(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpIconName)
HICON WINAPI user32.LoadIconW(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpIconName)
HICON WINAPI user32.LoadIconA(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpIconName)
DWORD WINAPI user32.CharLowerBuff(_Inout_ LPTSTR lpsz,_In_ DWORD cchLength)
DWORD WINAPI user32.CharLowerBuffW(_Inout_ LPTSTR lpsz,_In_ DWORD cchLength)
DWORD WINAPI user32.CharLowerBuffA(_Inout_ LPTSTR lpsz,_In_ DWORD cchLength)
BOOL WINAPI user32.OemToChar(_In_ LPCSTR lpszSrc,_Out_ LPTSTR lpszDst)
BOOL WINAPI user32.OemToCharW(_In_ LPCSTR lpszSrc,_Out_ LPTSTR lpszDst)
BOOL WINAPI user32.OemToCharA(_In_ LPCSTR lpszSrc,_Out_ LPTSTR lpszDst)
LPTSTR WINAPI user32.CharUpper(_Inout_ LPTSTR lpsz)
LPTSTR WINAPI user32.CharUpperW(_Inout_ LPTSTR lpsz)
LPTSTR WINAPI user32.CharUpperA(_Inout_ LPTSTR lpsz)
DWORD WINAPI user32.CharUpperBuff(_Inout_ LPTSTR lpsz,_In_ DWORD cchLength)
DWORD WINAPI user32.CharUpperBuffW(_Inout_ LPTSTR lpsz,_In_ DWORD cchLength)
DWORD WINAPI user32.CharUpperBuffA(_Inout_ LPTSTR lpsz,_In_ DWORD cchLength)
BOOL WINAPI user32.IsCharUpper(_In_ TCHAR ch)
BOOL WINAPI user32.IsCharUpperW(_In_ TCHAR ch)
BOOL WINAPI user32.IsCharUpperA(_In_ TCHAR ch)
HICON WINAPI user32.LoadIcon(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpIconName)
HICON WINAPI user32.LoadIconW(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpIconName)
HICON WINAPI user32.LoadIconA(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpIconName)
LPTSTR WINAPI user32.CharLower(_Inout_ LPTSTR lpsz)
LPTSTR WINAPI user32.CharLowerW(_Inout_ LPTSTR lpsz)
LPTSTR WINAPI user32.CharLowerA(_Inout_ LPTSTR lpsz)
LPTSTR WINAPI kernel32.lstrcat(_Inout_ LPTSTR lpString1,_In_ LPTSTR lpString2)
LPTSTR WINAPI kernel32.lstrcatW(_Inout_ LPTSTR lpString1,_In_ LPTSTR lpString2)
LPTSTR WINAPI kernel32.lstrcatA(_Inout_ LPTSTR lpString1,_In_ LPTSTR lpString2)
BOOL WINAPI user32.CharToOemBuff(_In_ LPCTSTR lpszSrc,_Out_ LPSTR lpszDst,_In_ DWORD cchDstLength)
BOOL WINAPI user32.CharToOemBuffW(_In_ LPCTSTR lpszSrc,_Out_ LPSTR lpszDst,_In_ DWORD cchDstLength)
BOOL WINAPI user32.CharToOemBuffA(_In_ LPCTSTR lpszSrc,_Out_ LPSTR lpszDst,_In_ DWORD cchDstLength)
LPTSTR WINAPI kernel32.lstrcpy(_Out_ LPTSTR lpString1,_In_ LPTSTR lpString2)
LPTSTR WINAPI kernel32.lstrcpyW(_Out_ LPTSTR lpString1,_In_ LPTSTR lpString2)
LPTSTR WINAPI kernel32.lstrcpyA(_Out_ LPTSTR lpString1,_In_ LPTSTR lpString2)
BOOL WINAPI user32.OemToCharBuff(_In_ LPCSTR lpszSrc,_Out_ LPTSTR lpszDst,_In_ DWORD cchDstLength)
BOOL WINAPI user32.OemToCharBuffW(_In_ LPCSTR lpszSrc,_Out_ LPTSTR lpszDst,_In_ DWORD cchDstLength)
BOOL WINAPI user32.OemToCharBuffA(_In_ LPCSTR lpszSrc,_Out_ LPTSTR lpszDst,_In_ DWORD cchDstLength)
LPTSTR WINAPI user32.CharNext(_In_ LPCTSTR lpsz)
LPTSTR WINAPI user32.CharNextW(_In_ LPCTSTR lpsz)
LPTSTR WINAPI user32.CharNextA(_In_ LPCTSTR lpsz)
HICON WINAPI shell32.ExtractAssociatedIcon(_Reserved_ HINSTANCE hInst,_Inout_ LPTSTR lpIconPath,_Inout_ WORD *lpiIcon)
HICON WINAPI shell32.ExtractAssociatedIconW(_Reserved_ HINSTANCE hInst,_Inout_ LPTSTR lpIconPath,_Inout_ WORD *lpiIcon)
HICON WINAPI shell32.ExtractAssociatedIconA(_Reserved_ HINSTANCE hInst,_Inout_ LPTSTR lpIconPath,_Inout_ WORD *lpiIcon)
HICON WINAPI user32.CreateIconIndirect(_In_ PICONINFO piconinfo)
BOOL WINAPI user32.DdeImpersonateClient(_In_ HCONV hConv)
BOOL WINAPI user32.IsCharAlpha(_In_ TCHAR ch)
BOOL WINAPI user32.IsCharAlphaW(_In_ TCHAR ch)
BOOL WINAPI user32.IsCharAlphaA(_In_ TCHAR ch)
HICON WINAPI shell32.ExtractIcon(_Reserved_ HINSTANCE hInst,_In_ LPCTSTR lpszExeFileName,_In_ UINT nIconIndex)
HICON WINAPI shell32.ExtractIconW(_Reserved_ HINSTANCE hInst,_In_ LPCTSTR lpszExeFileName,_In_ UINT nIconIndex)
HICON WINAPI shell32.ExtractIconA(_Reserved_ HINSTANCE hInst,_In_ LPCTSTR lpszExeFileName,_In_ UINT nIconIndex)
BOOL WINAPI kernel32.GetFileTime(_In_ HANDLE hFile,_Out_opt_ LPFILETIME lpCreationTime,_Out_opt_ LPFILETIME lpLastAccessTime,_Out_opt_ LPFILETIME lpLastWriteTime)
BOOL WINAPI user32.IsCharAlphaNumeric(_In_ TCHAR ch)
BOOL WINAPI user32.IsCharAlphaNumericW(_In_ TCHAR ch)
BOOL WINAPI user32.IsCharAlphaNumericA(_In_ TCHAR ch)
BOOL WINAPI user32.GetIconInfo(_In_ HICON hIcon,_Out_ PICONINFO piconinfo)
LPSTR WINAPI user32.CharNextExA(_In_ WORD CodePage,_In_ LPCSTR lpCurrentChar,_In_ DWORD dwFlags)
LPSTR WINAPI user32.CharNextExA(_In_ WORD CodePage,_In_ LPCSTR lpCurrentChar,_In_ DWORD dwFlags)
BOOL WINAPI kernel32.SystemTimeToTzSpecificLocalTime(_In_opt_ LPTIME_ZONE_INFORMATION lpTimeZone,_In_ LPSYSTEMTIME lpUniversalTime,_Out_ LPSYSTEMTIME lpLocalTime)
BOOL WINAPI user32.DdeKeepStringHandle(_In_ DWORD idInst,_In_ HSZ hsz)
BOOL WINAPI user32.OemToCharBuff(_In_ LPCSTR lpszSrc,_Out_ LPTSTR lpszDst,_In_ DWORD cchDstLength)
BOOL WINAPI user32.OemToCharBuffW(_In_ LPCSTR lpszSrc,_Out_ LPTSTR lpszDst,_In_ DWORD cchDstLength)
BOOL WINAPI user32.OemToCharBuffA(_In_ LPCSTR lpszSrc,_Out_ LPTSTR lpszDst,_In_ DWORD cchDstLength)
BOOL WINAPI kernel32.DosDateTimeToFileTime(_In_ WORD wFatDate,_In_ WORD wFatTime,_Out_ LPFILETIME lpFileTime)
BOOL WINAPI kernel32.SetSystemTimeAdjustment(_In_ DWORD dwTimeAdjustment,_In_ BOOL bTimeAdjustmentDisabled)
HRSRC WINAPI kernel32.FindResourceEx(_In_opt_ HMODULE hModule,_In_ LPCTSTR lpType,_In_ LPCTSTR lpName,_In_ WORD wLanguage)
HRSRC WINAPI kernel32.FindResourceExW(_In_opt_ HMODULE hModule,_In_ LPCTSTR lpType,_In_ LPCTSTR lpName,_In_ WORD wLanguage)
HRSRC WINAPI kernel32.FindResourceExA(_In_opt_ HMODULE hModule,_In_ LPCTSTR lpType,_In_ LPCTSTR lpName,_In_ WORD wLanguage)
BOOL WINAPI kernel32.GetFileTime(_In_ HANDLE hFile,_Out_opt_ LPFILETIME lpCreationTime,_Out_opt_ LPFILETIME lpLastAccessTime,_Out_opt_ LPFILETIME lpLastWriteTime)
HDDEDATA WINAPI user32.DdeAddData(_In_ HDDEDATA hData,_In_ LPBYTE pSrc,_In_ DWORD cb,_In_ DWORD cbOff)
BOOL WINAPI comctl32.Str_SetPtr(_Inout_ LPTSTR *ppszCurrent,LPCTSTR pszNew None)
BOOL WINAPI comctl32.Str_SetPtrW(_Inout_ LPTSTR *ppszCurrent,LPCTSTR pszNew None)
BOOL WINAPI comctl32.Str_SetPtrA(_Inout_ LPTSTR *ppszCurrent,LPCTSTR pszNew None)
LPTSTR WINAPI user32.CharUpper(_Inout_ LPTSTR lpsz)
LPTSTR WINAPI user32.CharUpperW(_Inout_ LPTSTR lpsz)
LPTSTR WINAPI user32.CharUpperA(_Inout_ LPTSTR lpsz)
BOOL WINAPI user32.IsCharUpper(_In_ TCHAR ch)
BOOL WINAPI user32.IsCharUpperW(_In_ TCHAR ch)
BOOL WINAPI user32.IsCharUpperA(_In_ TCHAR ch)
BOOL WINAPI user32.OemToCharBuff(_In_ LPCSTR lpszSrc,_Out_ LPTSTR lpszDst,_In_ DWORD cchDstLength)
BOOL WINAPI user32.OemToCharBuffW(_In_ LPCSTR lpszSrc,_Out_ LPTSTR lpszDst,_In_ DWORD cchDstLength)
BOOL WINAPI user32.OemToCharBuffA(_In_ LPCSTR lpszSrc,_Out_ LPTSTR lpszDst,_In_ DWORD cchDstLength)
BOOL WINAPI kernel32.GetTimeZoneInformationForYear(_In_ USHORT wYear,_In_opt_ PDYNAMIC_TIME_ZONE_INFORMATION pdtzi,_Out_ LPTIME_ZONE_INFORMATION ptzi)
BOOL WINAPI user32.DdeImpersonateClient(_In_ HCONV hConv)
NTSTATUS WINAPI ntdll.RtlLocalTimeToSystemTime(_In_ PLARGE_INTEGER LocalTime,_Out_ PLARGE_INTEGER SystemTime)
BOOL WINAPI kernel32.SystemTimeToTzSpecificLocalTime(_In_opt_ LPTIME_ZONE_INFORMATION lpTimeZone,_In_ LPSYSTEMTIME lpUniversalTime,_Out_ LPSYSTEMTIME lpLocalTime)
BOOL CALLBACK None.EnumResNameProc(_In_opt_ HMODULE hModule,_In_ LPCTSTR lpszType,_In_ LPTSTR lpszName,_In_ LONG_PTR lParam)
BOOL CALLBACK None.EnumResNameProcW(_In_opt_ HMODULE hModule,_In_ LPCTSTR lpszType,_In_ LPTSTR lpszName,_In_ LONG_PTR lParam)
BOOL CALLBACK None.EnumResNameProcA(_In_opt_ HMODULE hModule,_In_ LPCTSTR lpszType,_In_ LPTSTR lpszName,_In_ LONG_PTR lParam)
BOOL WINAPI kernel32.DosDateTimeToFileTime(_In_ WORD wFatDate,_In_ WORD wFatTime,_Out_ LPFILETIME lpFileTime)
DWORD WINAPI kernel32.GetTimeZoneInformation(_Out_ LPTIME_ZONE_INFORMATION lpTimeZoneInformation)
HCONV WINAPI user32.DdeQueryNextServer(_In_ HCONVLIST hConvList,_In_ HCONV hConvPrev)
BOOL WINAPI kernel32.GetTimeZoneInformationForYear(_In_ USHORT wYear,_In_opt_ PDYNAMIC_TIME_ZONE_INFORMATION pdtzi,_Out_ LPTIME_ZONE_INFORMATION ptzi)
LPTSTR WINAPI user32.CharUpper(_Inout_ LPTSTR lpsz)
LPTSTR WINAPI user32.CharUpperW(_Inout_ LPTSTR lpsz)
LPTSTR WINAPI user32.CharUpperA(_Inout_ LPTSTR lpsz)
HICON WINAPI shell32.ExtractAssociatedIcon(_Reserved_ HINSTANCE hInst,_Inout_ LPTSTR lpIconPath,_Inout_ WORD *lpiIcon)
HICON WINAPI shell32.ExtractAssociatedIconW(_Reserved_ HINSTANCE hInst,_Inout_ LPTSTR lpIconPath,_Inout_ WORD *lpiIcon)
HICON WINAPI shell32.ExtractAssociatedIconA(_Reserved_ HINSTANCE hInst,_Inout_ LPTSTR lpIconPath,_Inout_ WORD *lpiIcon)
LPTSTR WINAPI user32.CharLower(_Inout_ LPTSTR lpsz)
LPTSTR WINAPI user32.CharLowerW(_Inout_ LPTSTR lpsz)
LPTSTR WINAPI user32.CharLowerA(_Inout_ LPTSTR lpsz)
HICON WINAPI user32.CreateIconFromResource(_In_ PBYTE presbits,_In_ DWORD dwResSize,_In_ BOOL fIcon,_In_ DWORD dwVer)
HCURSOR WINAPI user32.LoadCursor(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpCursorName)
HCURSOR WINAPI user32.LoadCursorW(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpCursorName)
HCURSOR WINAPI user32.LoadCursorA(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpCursorName)
BOOL WINAPI user32.IsCharAlphaNumeric(_In_ TCHAR ch)
BOOL WINAPI user32.IsCharAlphaNumericW(_In_ TCHAR ch)
BOOL WINAPI user32.IsCharAlphaNumericA(_In_ TCHAR ch)
BOOL CALLBACK None.EnumResNameProc(_In_opt_ HMODULE hModule,_In_ LPCTSTR lpszType,_In_ LPTSTR lpszName,_In_ LONG_PTR lParam)
BOOL CALLBACK None.EnumResNameProcW(_In_opt_ HMODULE hModule,_In_ LPCTSTR lpszType,_In_ LPTSTR lpszName,_In_ LONG_PTR lParam)
BOOL CALLBACK None.EnumResNameProcA(_In_opt_ HMODULE hModule,_In_ LPCTSTR lpszType,_In_ LPTSTR lpszName,_In_ LONG_PTR lParam)
BOOL WINAPI user32.CharToOem(_In_ LPCTSTR lpszSrc,_Out_ LPSTR lpszDst)
BOOL WINAPI user32.CharToOemW(_In_ LPCTSTR lpszSrc,_Out_ LPSTR lpszDst)
BOOL WINAPI user32.CharToOemA(_In_ LPCTSTR lpszSrc,_Out_ LPSTR lpszDst)
BOOL WINAPI user32.DdeKeepStringHandle(_In_ DWORD idInst,_In_ HSZ hsz)
LPSTR WINAPI user32.CharNextExA(_In_ WORD CodePage,_In_ LPCSTR lpCurrentChar,_In_ DWORD dwFlags)
LPSTR WINAPI user32.CharNextExA(_In_ WORD CodePage,_In_ LPCSTR lpCurrentChar,_In_ DWORD dwFlags)
HANDLE WINAPI user32.SetClipboardData(_In_ UINT uFormat,_In_opt_ HANDLE hMem)
LPSTR WINAPI user32.CharNextExA(_In_ WORD CodePage,_In_ LPCSTR lpCurrentChar,_In_ DWORD dwFlags)
LPSTR WINAPI user32.CharNextExA(_In_ WORD CodePage,_In_ LPCSTR lpCurrentChar,_In_ DWORD dwFlags)
BOOL WINAPI kernel32.GetSystemTimeAdjustment(_Out_ PDWORD lpTimeAdjustment,_Out_ PDWORD lpTimeIncrement,_Out_ PBOOL lpTimeAdjustmentDisabled)
UINT WINAPI user32.DdeQueryConvInfo(_In_ HCONV hConv,_In_ DWORD idTransaction,_Inout_ PCONVINFO pConvInfo)
LPTSTR WINAPI user32.CharUpper(_Inout_ LPTSTR lpsz)
LPTSTR WINAPI user32.CharUpperW(_Inout_ LPTSTR lpsz)
LPTSTR WINAPI user32.CharUpperA(_Inout_ LPTSTR lpsz)
LPTSTR WINAPI kernel32.lstrcpy(_Out_ LPTSTR lpString1,_In_ LPTSTR lpString2)
LPTSTR WINAPI kernel32.lstrcpyW(_Out_ LPTSTR lpString1,_In_ LPTSTR lpString2)
LPTSTR WINAPI kernel32.lstrcpyA(_Out_ LPTSTR lpString1,_In_ LPTSTR lpString2)
BOOL WINAPI kernel32.EnumResourceNames(_In_opt_ HMODULE hModule,_In_ LPCTSTR lpszType,_In_ ENUMRESNAMEPROC lpEnumFunc,_In_ LONG_PTR lParam)
BOOL WINAPI kernel32.EnumResourceNamesW(_In_opt_ HMODULE hModule,_In_ LPCTSTR lpszType,_In_ ENUMRESNAMEPROC lpEnumFunc,_In_ LONG_PTR lParam)
BOOL WINAPI kernel32.EnumResourceNamesA(_In_opt_ HMODULE hModule,_In_ LPCTSTR lpszType,_In_ ENUMRESNAMEPROC lpEnumFunc,_In_ LONG_PTR lParam)
BOOL WINAPI user32.IsCharUpper(_In_ TCHAR ch)
BOOL WINAPI user32.IsCharUpperW(_In_ TCHAR ch)
BOOL WINAPI user32.IsCharUpperA(_In_ TCHAR ch)
BOOL WINAPI user32.DdeAbandonTransaction(_In_ DWORD idInst,_In_ HCONV hConv,_In_ DWORD idTransaction)
HCONV WINAPI user32.DdeQueryNextServer(_In_ HCONVLIST hConvList,_In_ HCONV hConvPrev)
BOOL WINAPI kernel32.EnumResourceLanguages(_In_ HMODULE hModule,_In_ LPCTSTR lpType,_In_ LPCTSTR lpName,_In_ ENUMRESLANGPROC lpEnumFunc,_In_ LONG_PTR lParam)
BOOL WINAPI kernel32.EnumResourceLanguagesW(_In_ HMODULE hModule,_In_ LPCTSTR lpType,_In_ LPCTSTR lpName,_In_ ENUMRESLANGPROC lpEnumFunc,_In_ LONG_PTR lParam)
BOOL WINAPI kernel32.EnumResourceLanguagesA(_In_ HMODULE hModule,_In_ LPCTSTR lpType,_In_ LPCTSTR lpName,_In_ ENUMRESLANGPROC lpEnumFunc,_In_ LONG_PTR lParam)
BOOL WINAPI kernel32.FreeResource(_In_ HGLOBAL hglbResource)
BOOL WINAPI kernel32.EndUpdateResource(_In_ HANDLE hUpdate,_In_ BOOL fDiscard)
BOOL WINAPI kernel32.EndUpdateResourceW(_In_ HANDLE hUpdate,_In_ BOOL fDiscard)
BOOL WINAPI kernel32.EndUpdateResourceA(_In_ HANDLE hUpdate,_In_ BOOL fDiscard)
LPTSTR WINAPI user32.CharLower(_Inout_ LPTSTR lpsz)
LPTSTR WINAPI user32.CharLowerW(_Inout_ LPTSTR lpsz)
LPTSTR WINAPI user32.CharLowerA(_Inout_ LPTSTR lpsz)
HANDLE WINAPI user32.SetClipboardData(_In_ UINT uFormat,_In_opt_ HANDLE hMem)
LPSTR WINAPI user32.CharNextExA(_In_ WORD CodePage,_In_ LPCSTR lpCurrentChar,_In_ DWORD dwFlags)
LPSTR WINAPI user32.CharNextExA(_In_ WORD CodePage,_In_ LPCSTR lpCurrentChar,_In_ DWORD dwFlags)
BOOL WINAPI user32.DdeFreeDataHandle(_In_ HDDEDATA hData)
BOOL WINAPI user32.AddClipboardFormatListener(_In_ HWND hwnd)
BOOL WINAPI kernel32.TzSpecificLocalTimeToSystemTime(_In_opt_ LPTIME_ZONE_INFORMATION lpTimeZoneInformation,_In_ LPSYSTEMTIME lpLocalTime,_Out_ LPSYSTEMTIME lpUniversalTime)
HCONVLIST WINAPI user32.DdeConnectList(_In_ DWORD idInst,_In_ HSZ hszService,_In_ HSZ hszTopic,_In_ HCONVLIST hConvList,_In_opt_ PCONVCONTEXT pCC)
BOOL WINAPI user32.GetUpdatedClipboardFormats(_Out_ PUINT lpuiFormats,_In_ UINT cFormats,_Out_ PUINT pcFormatsOut)
NTSTATUS WINAPI ntdll.RtlLocalTimeToSystemTime(_In_ PLARGE_INTEGER LocalTime,_Out_ PLARGE_INTEGER SystemTime)
HCONV WINAPI user32.DdeConnect(_In_ DWORD idInst,_In_ HSZ hszService,_In_ HSZ hszTopic,_In_opt_ PCONVCONTEXT pCC)
BOOL WINAPI user32.OpenClipboard(_In_opt_ HWND hWndNewOwner)
BOOL WINAPI kernel32.EnumResourceTypesEx(_In_opt_ HMODULE hModule,_In_ ENUMRESTYPEPROC lpEnumFunc,_In_ LONG_PTR lParam,_In_ DWORD dwFlags,_In_ LANGID LangId)
BOOL WINAPI kernel32.EnumResourceTypesExW(_In_opt_ HMODULE hModule,_In_ ENUMRESTYPEPROC lpEnumFunc,_In_ LONG_PTR lParam,_In_ DWORD dwFlags,_In_ LANGID LangId)
BOOL WINAPI kernel32.EnumResourceTypesExA(_In_opt_ HMODULE hModule,_In_ ENUMRESTYPEPROC lpEnumFunc,_In_ LONG_PTR lParam,_In_ DWORD dwFlags,_In_ LANGID LangId)
HANDLE WINAPI user32.SetClipboardData(_In_ UINT uFormat,_In_opt_ HANDLE hMem)
HWND WINAPI user32.SetClipboardViewer(_In_ HWND hWndNewViewer)
BOOL WINAPI user32.AddClipboardFormatListener(_In_ HWND hwnd)
BOOLEAN WINAPI ntdll.RtlTimeToSecondsSince1970(_In_ PLARGE_INTEGER Time,_Out_ PULONG ElapsedSeconds)
BOOL WINAPI kernel32.FreeResource(_In_ HGLOBAL hglbResource)
BOOL WINAPI kernel32.DosDateTimeToFileTime(_In_ WORD wFatDate,_In_ WORD wFatTime,_Out_ LPFILETIME lpFileTime)
BOOL WINAPI user32.DdeKeepStringHandle(_In_ DWORD idInst,_In_ HSZ hsz)
BOOL WINAPI user32.DdeKeepStringHandle(_In_ DWORD idInst,_In_ HSZ hsz)
BOOL WINAPI user32.DdeDisconnectList(_In_ HCONVLIST hConvList)
BOOL WINAPI kernel32.UpdateResource(_In_ HANDLE hUpdate,_In_ LPCTSTR lpType,_In_ LPCTSTR lpName,_In_ WORD wLanguage,_In_opt_ LPVOID lpData,_In_ DWORD cbData)
BOOL WINAPI kernel32.UpdateResourceW(_In_ HANDLE hUpdate,_In_ LPCTSTR lpType,_In_ LPCTSTR lpName,_In_ WORD wLanguage,_In_opt_ LPVOID lpData,_In_ DWORD cbData)
BOOL WINAPI kernel32.UpdateResourceA(_In_ HANDLE hUpdate,_In_ LPCTSTR lpType,_In_ LPCTSTR lpName,_In_ WORD wLanguage,_In_opt_ LPVOID lpData,_In_ DWORD cbData)
BOOL WINAPI user32.DdeFreeDataHandle(_In_ HDDEDATA hData)
HANDLE WINAPI user32.SetClipboardData(_In_ UINT uFormat,_In_opt_ HANDLE hMem)
HDDEDATA WINAPI user32.DdeNameService(_In_ DWORD idInst,_In_opt_ HSZ hsz1,_In_opt_ HSZ hsz2,_In_ UINT afCmd)
HGLOBAL WINAPI kernel32.LoadResource(_In_opt_ HMODULE hModule,_In_ HRSRC hResInfo)
BOOL WINAPI kernel32.EnumResourceNames(_In_opt_ HMODULE hModule,_In_ LPCTSTR lpszType,_In_ ENUMRESNAMEPROC lpEnumFunc,_In_ LONG_PTR lParam)
BOOL WINAPI kernel32.EnumResourceNamesW(_In_opt_ HMODULE hModule,_In_ LPCTSTR lpszType,_In_ ENUMRESNAMEPROC lpEnumFunc,_In_ LONG_PTR lParam)
BOOL WINAPI kernel32.EnumResourceNamesA(_In_opt_ HMODULE hModule,_In_ LPCTSTR lpszType,_In_ ENUMRESNAMEPROC lpEnumFunc,_In_ LONG_PTR lParam)
DWORD WINAPI kernel32.GetTimeZoneInformation(_Out_ LPTIME_ZONE_INFORMATION lpTimeZoneInformation)
UINT WINAPI user32.DdeQueryConvInfo(_In_ HCONV hConv,_In_ DWORD idTransaction,_Inout_ PCONVINFO pConvInfo)
BOOL WINAPI user32.OpenClipboard(_In_opt_ HWND hWndNewOwner)
HRSRC WINAPI kernel32.FindResource(_In_opt_ HMODULE hModule,_In_ LPCTSTR lpName,_In_ LPCTSTR lpType)
HRSRC WINAPI kernel32.FindResourceW(_In_opt_ HMODULE hModule,_In_ LPCTSTR lpName,_In_ LPCTSTR lpType)
HRSRC WINAPI kernel32.FindResourceA(_In_opt_ HMODULE hModule,_In_ LPCTSTR lpName,_In_ LPCTSTR lpType)
BOOL WINAPI user32.DdeEnableCallback(_In_ DWORD idInst,_In_ HCONV hConv,_In_ UINT wCmd)
BOOL WINAPI user32.OpenClipboard(_In_opt_ HWND hWndNewOwner)
BOOL WINAPI kernel32.EnumResourceTypesEx(_In_opt_ HMODULE hModule,_In_ ENUMRESTYPEPROC lpEnumFunc,_In_ LONG_PTR lParam,_In_ DWORD dwFlags,_In_ LANGID LangId)
BOOL WINAPI kernel32.EnumResourceTypesExW(_In_opt_ HMODULE hModule,_In_ ENUMRESTYPEPROC lpEnumFunc,_In_ LONG_PTR lParam,_In_ DWORD dwFlags,_In_ LANGID LangId)
BOOL WINAPI kernel32.EnumResourceTypesExA(_In_opt_ HMODULE hModule,_In_ ENUMRESTYPEPROC lpEnumFunc,_In_ LONG_PTR lParam,_In_ DWORD dwFlags,_In_ LANGID LangId)
HRSRC WINAPI kernel32.FindResourceEx(_In_opt_ HMODULE hModule,_In_ LPCTSTR lpType,_In_ LPCTSTR lpName,_In_ WORD wLanguage)
HRSRC WINAPI kernel32.FindResourceExW(_In_opt_ HMODULE hModule,_In_ LPCTSTR lpType,_In_ LPCTSTR lpName,_In_ WORD wLanguage)
HRSRC WINAPI kernel32.FindResourceExA(_In_opt_ HMODULE hModule,_In_ LPCTSTR lpType,_In_ LPCTSTR lpName,_In_ WORD wLanguage)
NTSTATUS WINAPI ntdll.NtQuerySystemTime(_Out_ PLARGE_INTEGER SystemTime)
BOOL WINAPI kernel32.GetTimeZoneInformationForYear(_In_ USHORT wYear,_In_opt_ PDYNAMIC_TIME_ZONE_INFORMATION pdtzi,_Out_ LPTIME_ZONE_INFORMATION ptzi)
BOOLEAN WINAPI ntdll.RtlTimeToSecondsSince1970(_In_ PLARGE_INTEGER Time,_Out_ PULONG ElapsedSeconds)
BOOL WINAPI kernel32.GetTimeZoneInformationForYear(_In_ USHORT wYear,_In_opt_ PDYNAMIC_TIME_ZONE_INFORMATION pdtzi,_Out_ LPTIME_ZONE_INFORMATION ptzi)
HDDEDATA WINAPI user32.DdeNameService(_In_ DWORD idInst,_In_opt_ HSZ hsz1,_In_opt_ HSZ hsz2,_In_ UINT afCmd)
BOOL WINAPI kernel32.EnumResourceTypesEx(_In_opt_ HMODULE hModule,_In_ ENUMRESTYPEPROC lpEnumFunc,_In_ LONG_PTR lParam,_In_ DWORD dwFlags,_In_ LANGID LangId)
BOOL WINAPI kernel32.EnumResourceTypesExW(_In_opt_ HMODULE hModule,_In_ ENUMRESTYPEPROC lpEnumFunc,_In_ LONG_PTR lParam,_In_ DWORD dwFlags,_In_ LANGID LangId)
BOOL WINAPI kernel32.EnumResourceTypesExA(_In_opt_ HMODULE hModule,_In_ ENUMRESTYPEPROC lpEnumFunc,_In_ LONG_PTR lParam,_In_ DWORD dwFlags,_In_ LANGID LangId)
BOOL WINAPI user32.GetUpdatedClipboardFormats(_Out_ PUINT lpuiFormats,_In_ UINT cFormats,_Out_ PUINT pcFormatsOut)
BOOL WINAPI user32.DdeKeepStringHandle(_In_ DWORD idInst,_In_ HSZ hsz)
BOOL WINAPI kernel32.UpdateResource(_In_ HANDLE hUpdate,_In_ LPCTSTR lpType,_In_ LPCTSTR lpName,_In_ WORD wLanguage,_In_opt_ LPVOID lpData,_In_ DWORD cbData)
BOOL WINAPI kernel32.UpdateResourceW(_In_ HANDLE hUpdate,_In_ LPCTSTR lpType,_In_ LPCTSTR lpName,_In_ WORD wLanguage,_In_opt_ LPVOID lpData,_In_ DWORD cbData)
BOOL WINAPI kernel32.UpdateResourceA(_In_ HANDLE hUpdate,_In_ LPCTSTR lpType,_In_ LPCTSTR lpName,_In_ WORD wLanguage,_In_opt_ LPVOID lpData,_In_ DWORD cbData)
BOOL WINAPI kernel32.EnumResourceTypesEx(_In_opt_ HMODULE hModule,_In_ ENUMRESTYPEPROC lpEnumFunc,_In_ LONG_PTR lParam,_In_ DWORD dwFlags,_In_ LANGID LangId)
BOOL WINAPI kernel32.EnumResourceTypesExW(_In_opt_ HMODULE hModule,_In_ ENUMRESTYPEPROC lpEnumFunc,_In_ LONG_PTR lParam,_In_ DWORD dwFlags,_In_ LANGID LangId)
BOOL WINAPI kernel32.EnumResourceTypesExA(_In_opt_ HMODULE hModule,_In_ ENUMRESTYPEPROC lpEnumFunc,_In_ LONG_PTR lParam,_In_ DWORD dwFlags,_In_ LANGID LangId)
BOOL WINAPI user32.DdeSetUserHandle(_In_ HCONV hConv,_In_ DWORD id,_In_ DWORD_PTR hUser)
BOOL WINAPI user32.DdeFreeDataHandle(_In_ HDDEDATA hData)
BOOL WINAPI kernel32.EnumResourceNamesEx(_In_opt_ HMODULE hModule,_In_ LPCTSTR lpszType,_In_ ENUMRESNAMEPROC lpEnumFunc,_In_ LONG_PTR lParam,_In_ DWORD dwFlags,_In_ LANGID LangId)
BOOL WINAPI kernel32.EnumResourceNamesExW(_In_opt_ HMODULE hModule,_In_ LPCTSTR lpszType,_In_ ENUMRESNAMEPROC lpEnumFunc,_In_ LONG_PTR lParam,_In_ DWORD dwFlags,_In_ LANGID LangId)
BOOL WINAPI kernel32.EnumResourceNamesExA(_In_opt_ HMODULE hModule,_In_ LPCTSTR lpszType,_In_ ENUMRESNAMEPROC lpEnumFunc,_In_ LONG_PTR lParam,_In_ DWORD dwFlags,_In_ LANGID LangId)
BOOL WINAPI user32.DdeDisconnect(_In_ HCONV hConv)
LPVOID WINAPI kernel32.LockResource(_In_ HGLOBAL hResData)
BOOL WINAPI kernel32.EnumResourceTypesEx(_In_opt_ HMODULE hModule,_In_ ENUMRESTYPEPROC lpEnumFunc,_In_ LONG_PTR lParam,_In_ DWORD dwFlags,_In_ LANGID LangId)
BOOL WINAPI kernel32.EnumResourceTypesExW(_In_opt_ HMODULE hModule,_In_ ENUMRESTYPEPROC lpEnumFunc,_In_ LONG_PTR lParam,_In_ DWORD dwFlags,_In_ LANGID LangId)
BOOL WINAPI kernel32.EnumResourceTypesExA(_In_opt_ HMODULE hModule,_In_ ENUMRESTYPEPROC lpEnumFunc,_In_ LONG_PTR lParam,_In_ DWORD dwFlags,_In_ LANGID LangId)
BOOL WINAPI kernel32.EnumResourceLanguagesEx(_In_ HMODULE hModule,_In_ LPCTSTR lpType,_In_ LPCTSTR lpName,_In_ ENUMRESLANGPROC lpEnumFunc,_In_ LONG_PTR lParam,_In_ DWORD dwFlags,_In_ LANGID LangId)
BOOL WINAPI kernel32.EnumResourceLanguagesExW(_In_ HMODULE hModule,_In_ LPCTSTR lpType,_In_ LPCTSTR lpName,_In_ ENUMRESLANGPROC lpEnumFunc,_In_ LONG_PTR lParam,_In_ DWORD dwFlags,_In_ LANGID LangId)
BOOL WINAPI kernel32.EnumResourceLanguagesExA(_In_ HMODULE hModule,_In_ LPCTSTR lpType,_In_ LPCTSTR lpName,_In_ ENUMRESLANGPROC lpEnumFunc,_In_ LONG_PTR lParam,_In_ DWORD dwFlags,_In_ LANGID LangId)
HCONV WINAPI user32.DdeConnect(_In_ DWORD idInst,_In_ HSZ hszService,_In_ HSZ hszTopic,_In_opt_ PCONVCONTEXT pCC)
BOOL WINAPI kernel32.EnumResourceNames(_In_opt_ HMODULE hModule,_In_ LPCTSTR lpszType,_In_ ENUMRESNAMEPROC lpEnumFunc,_In_ LONG_PTR lParam)
BOOL WINAPI kernel32.EnumResourceNamesW(_In_opt_ HMODULE hModule,_In_ LPCTSTR lpszType,_In_ ENUMRESNAMEPROC lpEnumFunc,_In_ LONG_PTR lParam)
BOOL WINAPI kernel32.EnumResourceNamesA(_In_opt_ HMODULE hModule,_In_ LPCTSTR lpszType,_In_ ENUMRESNAMEPROC lpEnumFunc,_In_ LONG_PTR lParam)
HANDLE WINAPI kernel32.BeginUpdateResource(_In_ LPCTSTR pFileName,_In_ BOOL bDeleteExistingResources)
HANDLE WINAPI kernel32.BeginUpdateResourceW(_In_ LPCTSTR pFileName,_In_ BOOL bDeleteExistingResources)
HANDLE WINAPI kernel32.BeginUpdateResourceA(_In_ LPCTSTR pFileName,_In_ BOOL bDeleteExistingResources)
UINT WINAPI user32.DdeGetLastError(_In_ DWORD idInst)
HGLOBAL WINAPI kernel32.LoadResource(_In_opt_ HMODULE hModule,_In_ HRSRC hResInfo)
BOOL WINAPI user32.RemoveClipboardFormatListener(_In_ HWND hwnd)
BOOL WINAPI kernel32.FreeResource(_In_ HGLOBAL hglbResource)
BOOL WINAPI kernel32.EndUpdateResource(_In_ HANDLE hUpdate,_In_ BOOL fDiscard)
BOOL WINAPI kernel32.EndUpdateResourceW(_In_ HANDLE hUpdate,_In_ BOOL fDiscard)
BOOL WINAPI kernel32.EndUpdateResourceA(_In_ HANDLE hUpdate,_In_ BOOL fDiscard)
DWORD WINAPI kernel32.GetTimeZoneInformation(_Out_ LPTIME_ZONE_INFORMATION lpTimeZoneInformation)
HDDEDATA WINAPI user32.DdeNameService(_In_ DWORD idInst,_In_opt_ HSZ hsz1,_In_opt_ HSZ hsz2,_In_ UINT afCmd)
DWORD WINAPI kernel32.GetDynamicTimeZoneInformation(_Out_ PDYNAMIC_TIME_ZONE_INFORMATION pTimeZoneInformation)
HCONV WINAPI user32.DdeReconnect(_In_ HCONV hConv)
HCONV WINAPI user32.DdeConnect(_In_ DWORD idInst,_In_ HSZ hszService,_In_ HSZ hszTopic,_In_opt_ PCONVCONTEXT pCC)
DWORD WINAPI user32.DdeGetData(_In_ HDDEDATA hData,_Out_opt_ LPBYTE pDst,_In_ DWORD cbMax,_In_ DWORD cbOff)
NTSTATUS WINAPI ntdll.NtQuerySystemTime(_Out_ PLARGE_INTEGER SystemTime)
DWORD WINAPI kernel32.SizeofResource(_In_opt_ HMODULE hModule,_In_ HRSRC hResInfo)
BOOL WINAPI user32.RemoveClipboardFormatListener(_In_ HWND hwnd)
BOOL WINAPI user32.IsClipboardFormatAvailable(_In_ UINT format)
BOOL WINAPI kernel32.EnumResourceTypesEx(_In_opt_ HMODULE hModule,_In_ ENUMRESTYPEPROC lpEnumFunc,_In_ LONG_PTR lParam,_In_ DWORD dwFlags,_In_ LANGID LangId)
BOOL WINAPI kernel32.EnumResourceTypesExW(_In_opt_ HMODULE hModule,_In_ ENUMRESTYPEPROC lpEnumFunc,_In_ LONG_PTR lParam,_In_ DWORD dwFlags,_In_ LANGID LangId)
BOOL WINAPI kernel32.EnumResourceTypesExA(_In_opt_ HMODULE hModule,_In_ ENUMRESTYPEPROC lpEnumFunc,_In_ LONG_PTR lParam,_In_ DWORD dwFlags,_In_ LANGID LangId)
HDDEDATA WINAPI user32.DdeCreateDataHandle(_In_ DWORD idInst,_In_opt_ LPBYTE pSrc,_In_ DWORD cb,_In_ DWORD cbOff,_In_opt_ HSZ hszItem,_In_ UINT wFmt,_In_ UINT afCmd)
HRSRC WINAPI kernel32.FindResource(_In_opt_ HMODULE hModule,_In_ LPCTSTR lpName,_In_ LPCTSTR lpType)
HRSRC WINAPI kernel32.FindResourceW(_In_opt_ HMODULE hModule,_In_ LPCTSTR lpName,_In_ LPCTSTR lpType)
HRSRC WINAPI kernel32.FindResourceA(_In_opt_ HMODULE hModule,_In_ LPCTSTR lpName,_In_ LPCTSTR lpType)
DWORD WINAPI kernel32.GetDynamicTimeZoneInformation(_Out_ PDYNAMIC_TIME_ZONE_INFORMATION pTimeZoneInformation)
HANDLE WINAPI user32.GetClipboardData(_In_ UINT uFormat)
BOOL CALLBACK None.EnumResTypeProc(_In_opt_ HMODULE hModule,_In_ LPTSTR lpszType,_In_ LONG_PTR lParam)
BOOL CALLBACK None.EnumResTypeProcW(_In_opt_ HMODULE hModule,_In_ LPTSTR lpszType,_In_ LONG_PTR lParam)
BOOL CALLBACK None.EnumResTypeProcA(_In_opt_ HMODULE hModule,_In_ LPTSTR lpszType,_In_ LONG_PTR lParam)
HANDLE WINAPI kernel32.BeginUpdateResource(_In_ LPCTSTR pFileName,_In_ BOOL bDeleteExistingResources)
HANDLE WINAPI kernel32.BeginUpdateResourceW(_In_ LPCTSTR pFileName,_In_ BOOL bDeleteExistingResources)
HANDLE WINAPI kernel32.BeginUpdateResourceA(_In_ LPCTSTR pFileName,_In_ BOOL bDeleteExistingResources)
BOOL WINAPI kernel32.EnumResourceLanguagesEx(_In_ HMODULE hModule,_In_ LPCTSTR lpType,_In_ LPCTSTR lpName,_In_ ENUMRESLANGPROC lpEnumFunc,_In_ LONG_PTR lParam,_In_ DWORD dwFlags,_In_ LANGID LangId)
BOOL WINAPI kernel32.EnumResourceLanguagesExW(_In_ HMODULE hModule,_In_ LPCTSTR lpType,_In_ LPCTSTR lpName,_In_ ENUMRESLANGPROC lpEnumFunc,_In_ LONG_PTR lParam,_In_ DWORD dwFlags,_In_ LANGID LangId)
BOOL WINAPI kernel32.EnumResourceLanguagesExA(_In_ HMODULE hModule,_In_ LPCTSTR lpType,_In_ LPCTSTR lpName,_In_ ENUMRESLANGPROC lpEnumFunc,_In_ LONG_PTR lParam,_In_ DWORD dwFlags,_In_ LANGID LangId)
HCONV WINAPI user32.DdeConnect(_In_ DWORD idInst,_In_ HSZ hszService,_In_ HSZ hszTopic,_In_opt_ PCONVCONTEXT pCC)
UINT WINAPI user32.DdeGetLastError(_In_ DWORD idInst)
NTSTATUS WINAPI ntdll.NtQuerySystemTime(_Out_ PLARGE_INTEGER SystemTime)
BOOL WINAPI user32.DdePostAdvise(_In_ DWORD idInst,_In_ HSZ hszTopic,_In_ HSZ hszItem)
BOOL WINAPI wininet.InternetSetPerSiteCookieDecision(_In_ LPCTSTR pchHostName,_In_ DWORD dwDecision)
BOOL WINAPI wininet.InternetSetPerSiteCookieDecisionW(_In_ LPCTSTR pchHostName,_In_ DWORD dwDecision)
BOOL WINAPI wininet.InternetSetPerSiteCookieDecisionA(_In_ LPCTSTR pchHostName,_In_ DWORD dwDecision)
HDDEDATA WINAPI user32.DdeNameService(_In_ DWORD idInst,_In_opt_ HSZ hsz1,_In_opt_ HSZ hsz2,_In_ UINT afCmd)
HDDEDATA CALLBACK None.DdeCallback(_In_ UINT uType,_In_ UINT uFmt,_In_ HCONV hconv,_In_ HSZ hsz1,_In_ HSZ hsz2,_In_ HDDEDATA hdata,_In_ ULONG_PTR dwData1,_In_ ULONG_PTR dwData2)
BOOLEAN WINAPI ntdll.RtlTimeToSecondsSince1970(_In_ PLARGE_INTEGER Time,_Out_ PULONG ElapsedSeconds)
BOOL WINAPI user32.DdeUnaccessData(_In_ HDDEDATA hData)
BOOL WINAPI kernel32.EnumResourceTypes(_In_opt_ HMODULE hModule,_In_ ENUMRESTYPEPROC lpEnumFunc,_In_ LONG_PTR lParam)
BOOL WINAPI kernel32.EnumResourceTypesW(_In_opt_ HMODULE hModule,_In_ ENUMRESTYPEPROC lpEnumFunc,_In_ LONG_PTR lParam)
BOOL WINAPI kernel32.EnumResourceTypesA(_In_opt_ HMODULE hModule,_In_ ENUMRESTYPEPROC lpEnumFunc,_In_ LONG_PTR lParam)
UINT WINAPI user32.DdeInitialize(_Inout_ LPDWORD pidInst,_In_ PFNCALLBACK pfnCallback,_In_ DWORD afCmd,_Reserved_ DWORD ulRes)
UINT WINAPI user32.DdeInitializeW(_Inout_ LPDWORD pidInst,_In_ PFNCALLBACK pfnCallback,_In_ DWORD afCmd,_Reserved_ DWORD ulRes)
UINT WINAPI user32.DdeInitializeA(_Inout_ LPDWORD pidInst,_In_ PFNCALLBACK pfnCallback,_In_ DWORD afCmd,_Reserved_ DWORD ulRes)
HCONV WINAPI user32.DdeReconnect(_In_ HCONV hConv)
BOOL WINAPI user32.DdeUninitialize(_In_ DWORD idInst)
BOOL WINAPI user32.RemoveClipboardFormatListener(_In_ HWND hwnd)
BOOL WINAPI kernel32.EnumResourceNamesEx(_In_opt_ HMODULE hModule,_In_ LPCTSTR lpszType,_In_ ENUMRESNAMEPROC lpEnumFunc,_In_ LONG_PTR lParam,_In_ DWORD dwFlags,_In_ LANGID LangId)
BOOL WINAPI kernel32.EnumResourceNamesExW(_In_opt_ HMODULE hModule,_In_ LPCTSTR lpszType,_In_ ENUMRESNAMEPROC lpEnumFunc,_In_ LONG_PTR lParam,_In_ DWORD dwFlags,_In_ LANGID LangId)
BOOL WINAPI kernel32.EnumResourceNamesExA(_In_opt_ HMODULE hModule,_In_ LPCTSTR lpszType,_In_ ENUMRESNAMEPROC lpEnumFunc,_In_ LONG_PTR lParam,_In_ DWORD dwFlags,_In_ LANGID LangId)
HDDEDATA WINAPI user32.DdeCreateDataHandle(_In_ DWORD idInst,_In_opt_ LPBYTE pSrc,_In_ DWORD cb,_In_ DWORD cbOff,_In_opt_ HSZ hszItem,_In_ UINT wFmt,_In_ UINT afCmd)
BOOL WINAPI user32.DdePostAdvise(_In_ DWORD idInst,_In_ HSZ hszTopic,_In_ HSZ hszItem)
BOOL CALLBACK None.EnumResLangProc(_In_opt_ HMODULE hModule,_In_ LPCTSTR lpszType,_In_ LPCTSTR lpszName,_In_ WORD wIDLanguage,_In_ LONG_PTR lParam)
BOOL CALLBACK None.EnumResLangProcW(_In_opt_ HMODULE hModule,_In_ LPCTSTR lpszType,_In_ LPCTSTR lpszName,_In_ WORD wIDLanguage,_In_ LONG_PTR lParam)
BOOL CALLBACK None.EnumResLangProcA(_In_opt_ HMODULE hModule,_In_ LPCTSTR lpszType,_In_ LPCTSTR lpszName,_In_ WORD wIDLanguage,_In_ LONG_PTR lParam)
BOOL WINAPI user32.IsClipboardFormatAvailable(_In_ UINT format)
HRSRC WINAPI kernel32.FindResource(_In_opt_ HMODULE hModule,_In_ LPCTSTR lpName,_In_ LPCTSTR lpType)
HRSRC WINAPI kernel32.FindResourceW(_In_opt_ HMODULE hModule,_In_ LPCTSTR lpName,_In_ LPCTSTR lpType)
HRSRC WINAPI kernel32.FindResourceA(_In_opt_ HMODULE hModule,_In_ LPCTSTR lpName,_In_ LPCTSTR lpType)
BOOL WINAPI wininet.InternetSetPerSiteCookieDecision(_In_ LPCTSTR pchHostName,_In_ DWORD dwDecision)
BOOL WINAPI wininet.InternetSetPerSiteCookieDecisionW(_In_ LPCTSTR pchHostName,_In_ DWORD dwDecision)
BOOL WINAPI wininet.InternetSetPerSiteCookieDecisionA(_In_ LPCTSTR pchHostName,_In_ DWORD dwDecision)
virtual HRESULT None.SetInlineObject(IDWriteInlineObject * inlineObject,DWRITE_TEXT_RANGE textRange None)
UINT WINAPI user32.DdeInitialize(_Inout_ LPDWORD pidInst,_In_ PFNCALLBACK pfnCallback,_In_ DWORD afCmd,_Reserved_ DWORD ulRes)
UINT WINAPI user32.DdeInitializeW(_Inout_ LPDWORD pidInst,_In_ PFNCALLBACK pfnCallback,_In_ DWORD afCmd,_Reserved_ DWORD ulRes)
UINT WINAPI user32.DdeInitializeA(_Inout_ LPDWORD pidInst,_In_ PFNCALLBACK pfnCallback,_In_ DWORD afCmd,_Reserved_ DWORD ulRes)
UINT WINAPI user32.DdeInitialize(_Inout_ LPDWORD pidInst,_In_ PFNCALLBACK pfnCallback,_In_ DWORD afCmd,_Reserved_ DWORD ulRes)
UINT WINAPI user32.DdeInitializeW(_Inout_ LPDWORD pidInst,_In_ PFNCALLBACK pfnCallback,_In_ DWORD afCmd,_Reserved_ DWORD ulRes)
UINT WINAPI user32.DdeInitializeA(_Inout_ LPDWORD pidInst,_In_ PFNCALLBACK pfnCallback,_In_ DWORD afCmd,_Reserved_ DWORD ulRes)
BOOL WINAPI kernel32.EnumResourceTypes(_In_opt_ HMODULE hModule,_In_ ENUMRESTYPEPROC lpEnumFunc,_In_ LONG_PTR lParam)
BOOL WINAPI kernel32.EnumResourceTypesW(_In_opt_ HMODULE hModule,_In_ ENUMRESTYPEPROC lpEnumFunc,_In_ LONG_PTR lParam)
BOOL WINAPI kernel32.EnumResourceTypesA(_In_opt_ HMODULE hModule,_In_ ENUMRESTYPEPROC lpEnumFunc,_In_ LONG_PTR lParam)
BOOL WINAPI user32.ModifyMenu(_In_ HMENU hMnu,_In_ UINT uPosition,_In_ UINT uFlags,_In_ UINT_PTR uIDNewItem,_In_opt_ LPCTSTR lpNewItem)
BOOL WINAPI user32.ModifyMenuW(_In_ HMENU hMnu,_In_ UINT uPosition,_In_ UINT uFlags,_In_ UINT_PTR uIDNewItem,_In_opt_ LPCTSTR lpNewItem)
BOOL WINAPI user32.ModifyMenuA(_In_ HMENU hMnu,_In_ UINT uPosition,_In_ UINT uFlags,_In_ UINT_PTR uIDNewItem,_In_opt_ LPCTSTR lpNewItem)
BOOL WINAPI user32.DdePostAdvise(_In_ DWORD idInst,_In_ HSZ hszTopic,_In_ HSZ hszItem)
HDDEDATA WINAPI user32.DdeNameService(_In_ DWORD idInst,_In_opt_ HSZ hsz1,_In_opt_ HSZ hsz2,_In_ UINT afCmd)
BOOL WINAPI user32.DdePostAdvise(_In_ DWORD idInst,_In_ HSZ hszTopic,_In_ HSZ hszItem)
Bool WINAPI wininet.GetUrlCacheConfigInfo(_Inout_ LPINTERNET_CACHE_CONFIG_INFO lpCacheConfigInfo,_Reserved_ LPDWORD lpcbCacheConfigInfo,_In_ DWORD dwFieldControl)
Bool WINAPI wininet.GetUrlCacheConfigInfoW(_Inout_ LPINTERNET_CACHE_CONFIG_INFO lpCacheConfigInfo,_Reserved_ LPDWORD lpcbCacheConfigInfo,_In_ DWORD dwFieldControl)
Bool WINAPI wininet.GetUrlCacheConfigInfoA(_Inout_ LPINTERNET_CACHE_CONFIG_INFO lpCacheConfigInfo,_Reserved_ LPDWORD lpcbCacheConfigInfo,_In_ DWORD dwFieldControl)
UINT WINAPI user32.DdeInitialize(_Inout_ LPDWORD pidInst,_In_ PFNCALLBACK pfnCallback,_In_ DWORD afCmd,_Reserved_ DWORD ulRes)
UINT WINAPI user32.DdeInitializeW(_Inout_ LPDWORD pidInst,_In_ PFNCALLBACK pfnCallback,_In_ DWORD afCmd,_Reserved_ DWORD ulRes)
UINT WINAPI user32.DdeInitializeA(_Inout_ LPDWORD pidInst,_In_ PFNCALLBACK pfnCallback,_In_ DWORD afCmd,_Reserved_ DWORD ulRes)
BOOL WINAPI user32.DdeUninitialize(_In_ DWORD idInst)
BOOL WINAPI user32.DdePostAdvise(_In_ DWORD idInst,_In_ HSZ hszTopic,_In_ HSZ hszItem)
LPBYTE WINAPI user32.DdeAccessData(_In_ HDDEDATA hData,_Out_opt_ LPDWORD pcbDataSize)
UINT WINAPI user32.DdeInitialize(_Inout_ LPDWORD pidInst,_In_ PFNCALLBACK pfnCallback,_In_ DWORD afCmd,_Reserved_ DWORD ulRes)
UINT WINAPI user32.DdeInitializeW(_Inout_ LPDWORD pidInst,_In_ PFNCALLBACK pfnCallback,_In_ DWORD afCmd,_Reserved_ DWORD ulRes)
UINT WINAPI user32.DdeInitializeA(_Inout_ LPDWORD pidInst,_In_ PFNCALLBACK pfnCallback,_In_ DWORD afCmd,_Reserved_ DWORD ulRes)
BOOL WINAPI user32.EnableMenuItem(_In_ HMENU hMenu,_In_ UINT uIDEnableItem,_In_ UINT uEnable)
virtual HRESULT None.SetWordWrapping(DWRITE_WORD_WRAPPING wordWrapping None)
HDDEDATA WINAPI user32.DdeClientTransaction(_In_opt_ LPBYTE pData,_In_ DWORD cbData,_In_ HCONV hConv,_In_opt_ HSZ hszItem,_In_ UINT wFmt,_In_ UINT wType,_In_ DWORD dwTimeout,_Out_opt_ LPDWORD pdwResult)
LPBYTE WINAPI user32.DdeAccessData(_In_ HDDEDATA hData,_Out_opt_ LPDWORD pcbDataSize)
BOOL WINAPI user32.IsMenu(_In_ HMENU hMenu)
BOOL WINAPI user32.HiliteMenuItem(_In_ HWND hwnd,_In_ HMENU hmenu,_In_ UINT uItemHilite,_In_ UINT uHilite)
UINT WINAPI user32.DdeInitialize(_Inout_ LPDWORD pidInst,_In_ PFNCALLBACK pfnCallback,_In_ DWORD afCmd,_Reserved_ DWORD ulRes)
UINT WINAPI user32.DdeInitializeW(_Inout_ LPDWORD pidInst,_In_ PFNCALLBACK pfnCallback,_In_ DWORD afCmd,_Reserved_ DWORD ulRes)
UINT WINAPI user32.DdeInitializeA(_Inout_ LPDWORD pidInst,_In_ PFNCALLBACK pfnCallback,_In_ DWORD afCmd,_Reserved_ DWORD ulRes)
BOOL WINAPI user32.SetMenuDefaultItem(_In_ HMENU hMenu,_In_ UINT uItem,_In_ UINT fByPos)
BOOL WINAPI user32.GetMenuItemRect(_In_opt_ HWND hWnd,_In_ HMENU hMenu,_In_ UINT uItem,_Out_ LPRECT lprcItem)
HDDEDATA WINAPI user32.DdeClientTransaction(_In_opt_ LPBYTE pData,_In_ DWORD cbData,_In_ HCONV hConv,_In_opt_ HSZ hszItem,_In_ UINT wFmt,_In_ UINT wType,_In_ DWORD dwTimeout,_Out_opt_ LPDWORD pdwResult)
BOOL WINAPI user32.GetMenuItemInfo(_In_ HMENU hMenu,_In_ UINT uItem,_In_ BOOL fByPosition,_Inout_ LPMENUITEMINFO lpmii)
BOOL WINAPI user32.GetMenuItemInfoW(_In_ HMENU hMenu,_In_ UINT uItem,_In_ BOOL fByPosition,_Inout_ LPMENUITEMINFO lpmii)
BOOL WINAPI user32.GetMenuItemInfoA(_In_ HMENU hMenu,_In_ UINT uItem,_In_ BOOL fByPosition,_Inout_ LPMENUITEMINFO lpmii)
BOOL WINAPI user32.InsertMenu(_In_ HMENU hMenu,_In_ UINT uPosition,_In_ UINT uFlags,_In_ UINT_PTR uIDNewItem,_In_opt_ LPCTSTR lpNewItem)
BOOL WINAPI user32.InsertMenuW(_In_ HMENU hMenu,_In_ UINT uPosition,_In_ UINT uFlags,_In_ UINT_PTR uIDNewItem,_In_opt_ LPCTSTR lpNewItem)
BOOL WINAPI user32.InsertMenuA(_In_ HMENU hMenu,_In_ UINT uPosition,_In_ UINT uFlags,_In_ UINT_PTR uIDNewItem,_In_opt_ LPCTSTR lpNewItem)
BOOL WINAPI user32.RemoveMenu(_In_ HMENU hMenu,_In_ UINT uPosition,_In_ UINT uFlags)
BOOL WINAPI user32.SetMenuItemBitmaps(_In_ HMENU hMenu,_In_ UINT uPosition,_In_ UINT uFlags,_In_opt_ HBITMAP hBitmapUnchecked,_In_opt_ HBITMAP hBitmapChecked)
HMENU WINAPI user32.GetSystemMenu(_In_ HWND hWnd,_In_ BOOL bRevert)
virtual HRESULT dwrite.UnregisterFontCollectionLoader(IDWriteFontCollectionLoader * fontCollectionLoader)
BOOL WINAPI user32.SetMenuDefaultItem(_In_ HMENU hMenu,_In_ UINT uItem,_In_ UINT fByPos)
UINT WINAPI user32.GetMenuDefaultItem(_In_ HMENU hMenu,_In_ UINT fByPos,_In_ UINT gmdiFlags)
DWORD WINAPI wininet.PrivacyGetZonePreferenceW(_In_ DWORD dwZone,_In_ DWORD dwType,_Out_opt_ LPDWORD pdwTemplate,_Out_opt_ LPWSTR *pszBuffer,_Inout_opt_ LPDWORD pdwBufferLength)
DWORD WINAPI wininet.PrivacyGetZonePreferenceW(_In_ DWORD dwZone,_In_ DWORD dwType,_Out_opt_ LPDWORD pdwTemplate,_Out_opt_ LPWSTR *pszBuffer,_Inout_opt_ LPDWORD pdwBufferLength)
BOOL WINAPI user32.AppendMenu(_In_ HMENU hMenu,_In_ UINT uFlags,_In_ UINT_PTR uIDNewItem,_In_opt_ LPCTSTR lpNewItem)
BOOL WINAPI user32.AppendMenuW(_In_ HMENU hMenu,_In_ UINT uFlags,_In_ UINT_PTR uIDNewItem,_In_opt_ LPCTSTR lpNewItem)
BOOL WINAPI user32.AppendMenuA(_In_ HMENU hMenu,_In_ UINT uFlags,_In_ UINT_PTR uIDNewItem,_In_opt_ LPCTSTR lpNewItem)
BOOL WINAPI wininet.InternetSetPerSiteCookieDecision(_In_ LPCTSTR pchHostName,_In_ DWORD dwDecision)
BOOL WINAPI wininet.InternetSetPerSiteCookieDecisionW(_In_ LPCTSTR pchHostName,_In_ DWORD dwDecision)
BOOL WINAPI wininet.InternetSetPerSiteCookieDecisionA(_In_ LPCTSTR pchHostName,_In_ DWORD dwDecision)
DWORD WINAPI user32.CheckMenuItem(_In_ HMENU hmenu,_In_ UINT uIDCheckItem,_In_ UINT uCheck)
BOOL WINAPI user32.HiliteMenuItem(_In_ HWND hwnd,_In_ HMENU hmenu,_In_ UINT uItemHilite,_In_ UINT uHilite)
BOOL WINAPI user32.SetMenuInfo(_In_ HMENU hmenu,_In_ LPCMENUINFO lpcmi)
HMENU WINAPI user32.GetMenu(_In_ HWND hWnd)
BOOL WINAPI user32.RemoveMenu(_In_ HMENU hMenu,_In_ UINT uPosition,_In_ UINT uFlags)
UINT WINAPI user32.GetMenuState(_In_ HMENU hMenu,_In_ UINT uId,_In_ UINT uFlags)
BOOL WINAPI user32.AppendMenu(_In_ HMENU hMenu,_In_ UINT uFlags,_In_ UINT_PTR uIDNewItem,_In_opt_ LPCTSTR lpNewItem)
BOOL WINAPI user32.AppendMenuW(_In_ HMENU hMenu,_In_ UINT uFlags,_In_ UINT_PTR uIDNewItem,_In_opt_ LPCTSTR lpNewItem)
BOOL WINAPI user32.AppendMenuA(_In_ HMENU hMenu,_In_ UINT uFlags,_In_ UINT_PTR uIDNewItem,_In_opt_ LPCTSTR lpNewItem)
BOOL WINAPI user32.SetMenu(_In_ HWND hWnd,_In_opt_ HMENU hMenu)
BOOL WINAPI user32.GetMenuInfo(_In_ HMENU hmenu,_Inout_ LPMENUINFO lpcmi)
BOOL WINAPI user32.InsertMenu(_In_ HMENU hMenu,_In_ UINT uPosition,_In_ UINT uFlags,_In_ UINT_PTR uIDNewItem,_In_opt_ LPCTSTR lpNewItem)
BOOL WINAPI user32.InsertMenuW(_In_ HMENU hMenu,_In_ UINT uPosition,_In_ UINT uFlags,_In_ UINT_PTR uIDNewItem,_In_opt_ LPCTSTR lpNewItem)
BOOL WINAPI user32.InsertMenuA(_In_ HMENU hMenu,_In_ UINT uPosition,_In_ UINT uFlags,_In_ UINT_PTR uIDNewItem,_In_opt_ LPCTSTR lpNewItem)
BOOL WINAPI user32.GetMenuBarInfo(_In_ HWND hwnd,_In_ LONG idObject,_In_ LONG idItem,_Inout_ PMENUBARINFO pmbi)
virtual HRESULT None.SetTextAlignment(DWRITE_TEXT_ALIGNMENT textAlignment None)
BOOL WINAPI user32.DeleteMenu(_In_ HMENU hMenu,_In_ UINT uPosition,_In_ UINT uFlags)
HMENU WINAPI user32.GetMenu(_In_ HWND hWnd)
BOOL WINAPI user32.DrawMenuBar(_In_ HWND hWnd)
BOOL WINAPI user32.RemoveMenu(_In_ HMENU hMenu,_In_ UINT uPosition,_In_ UINT uFlags)
BOOL WINAPI user32.CheckMenuRadioItem(_In_ HMENU hmenu,_In_ UINT idFirst,_In_ UINT idLast,_In_ UINT idCheck,_In_ UINT uFlags)
BOOL WINAPI user32.SetMenuItemInfo(_In_ HMENU hMenu,_In_ UINT uItem,_In_ BOOL fByPosition,_In_ LPMENUITEMINFO lpmii)
BOOL WINAPI user32.SetMenuItemInfoW(_In_ HMENU hMenu,_In_ UINT uItem,_In_ BOOL fByPosition,_In_ LPMENUITEMINFO lpmii)
BOOL WINAPI user32.SetMenuItemInfoA(_In_ HMENU hMenu,_In_ UINT uItem,_In_ BOOL fByPosition,_In_ LPMENUITEMINFO lpmii)
virtual void None.SetTextAntialiasMode(D2D1_TEXT_ANTIALIAS_MODE textAntialiasMode None)
BOOL WINAPI user32.GetMenuInfo(_In_ HMENU hmenu,_Inout_ LPMENUINFO lpcmi)
HMENU WINAPI user32.GetMenu(_In_ HWND hWnd)
HMENU WINAPI user32.LoadMenu(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpMenuName)
HMENU WINAPI user32.LoadMenuW(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpMenuName)
HMENU WINAPI user32.LoadMenuA(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpMenuName)
BOOL WINAPI user32.AppendMenu(_In_ HMENU hMenu,_In_ UINT uFlags,_In_ UINT_PTR uIDNewItem,_In_opt_ LPCTSTR lpNewItem)
BOOL WINAPI user32.AppendMenuW(_In_ HMENU hMenu,_In_ UINT uFlags,_In_ UINT_PTR uIDNewItem,_In_opt_ LPCTSTR lpNewItem)
BOOL WINAPI user32.AppendMenuA(_In_ HMENU hMenu,_In_ UINT uFlags,_In_ UINT_PTR uIDNewItem,_In_opt_ LPCTSTR lpNewItem)
BOOL WINAPI user32.SetMenu(_In_ HWND hWnd,_In_opt_ HMENU hMenu)
BOOL WINAPI user32.GetMenuBarInfo(_In_ HWND hwnd,_In_ LONG idObject,_In_ LONG idItem,_Inout_ PMENUBARINFO pmbi)
BOOL WINAPI user32.DestroyMenu(_In_ HMENU hMenu)
BOOL WINAPI user32.SetMenuInfo(_In_ HMENU hmenu,_In_ LPCMENUINFO lpcmi)
BOOL WINAPI user32.CheckMenuRadioItem(_In_ HMENU hmenu,_In_ UINT idFirst,_In_ UINT idLast,_In_ UINT idCheck,_In_ UINT uFlags)
BOOL WINAPI user32.GetMenuItemInfo(_In_ HMENU hMenu,_In_ UINT uItem,_In_ BOOL fByPosition,_Inout_ LPMENUITEMINFO lpmii)
BOOL WINAPI user32.GetMenuItemInfoW(_In_ HMENU hMenu,_In_ UINT uItem,_In_ BOOL fByPosition,_Inout_ LPMENUITEMINFO lpmii)
BOOL WINAPI user32.GetMenuItemInfoA(_In_ HMENU hMenu,_In_ UINT uItem,_In_ BOOL fByPosition,_Inout_ LPMENUITEMINFO lpmii)
BOOL WINAPI user32.GetMenuBarInfo(_In_ HWND hwnd,_In_ LONG idObject,_In_ LONG idItem,_Inout_ PMENUBARINFO pmbi)
BOOL WINAPI user32.DeleteMenu(_In_ HMENU hMenu,_In_ UINT uPosition,_In_ UINT uFlags)
DWORD WINAPI user32.CheckMenuItem(_In_ HMENU hmenu,_In_ UINT uIDCheckItem,_In_ UINT uCheck)
HMENU WINAPI user32.GetMenu(_In_ HWND hWnd)
BOOL WINAPI user32.SetMenuItemInfo(_In_ HMENU hMenu,_In_ UINT uItem,_In_ BOOL fByPosition,_In_ LPMENUITEMINFO lpmii)
BOOL WINAPI user32.SetMenuItemInfoW(_In_ HMENU hMenu,_In_ UINT uItem,_In_ BOOL fByPosition,_In_ LPMENUITEMINFO lpmii)
BOOL WINAPI user32.SetMenuItemInfoA(_In_ HMENU hMenu,_In_ UINT uItem,_In_ BOOL fByPosition,_In_ LPMENUITEMINFO lpmii)
BOOL WINAPI user32.AppendMenu(_In_ HMENU hMenu,_In_ UINT uFlags,_In_ UINT_PTR uIDNewItem,_In_opt_ LPCTSTR lpNewItem)
BOOL WINAPI user32.AppendMenuW(_In_ HMENU hMenu,_In_ UINT uFlags,_In_ UINT_PTR uIDNewItem,_In_opt_ LPCTSTR lpNewItem)
BOOL WINAPI user32.AppendMenuA(_In_ HMENU hMenu,_In_ UINT uFlags,_In_ UINT_PTR uIDNewItem,_In_opt_ LPCTSTR lpNewItem)
HMENU WINAPI user32.LoadMenu(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpMenuName)
HMENU WINAPI user32.LoadMenuW(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpMenuName)
HMENU WINAPI user32.LoadMenuA(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpMenuName)
BOOL WINAPI user32.DestroyMenu(_In_ HMENU hMenu)
BOOL WINAPI user32.CheckMenuRadioItem(_In_ HMENU hmenu,_In_ UINT idFirst,_In_ UINT idLast,_In_ UINT idCheck,_In_ UINT uFlags)
BOOL WINAPI winhttp.WinHttpReceiveResponse(_In_ HINTERNET hRequest,_Reserved_ LPVOID lpReserved)
BOOL WINAPI user32.DrawMenuBar(_In_ HWND hWnd)
BOOL WINAPI user32.GetMenuBarInfo(_In_ HWND hwnd,_In_ LONG idObject,_In_ LONG idItem,_Inout_ PMENUBARINFO pmbi)
BOOL WINAPI user32.SetMenuItemInfo(_In_ HMENU hMenu,_In_ UINT uItem,_In_ BOOL fByPosition,_In_ LPMENUITEMINFO lpmii)
BOOL WINAPI user32.SetMenuItemInfoW(_In_ HMENU hMenu,_In_ UINT uItem,_In_ BOOL fByPosition,_In_ LPMENUITEMINFO lpmii)
BOOL WINAPI user32.SetMenuItemInfoA(_In_ HMENU hMenu,_In_ UINT uItem,_In_ BOOL fByPosition,_In_ LPMENUITEMINFO lpmii)
BOOL WINAPI user32.SetMenuItemInfo(_In_ HMENU hMenu,_In_ UINT uItem,_In_ BOOL fByPosition,_In_ LPMENUITEMINFO lpmii)
BOOL WINAPI user32.SetMenuItemInfoW(_In_ HMENU hMenu,_In_ UINT uItem,_In_ BOOL fByPosition,_In_ LPMENUITEMINFO lpmii)
BOOL WINAPI user32.SetMenuItemInfoA(_In_ HMENU hMenu,_In_ UINT uItem,_In_ BOOL fByPosition,_In_ LPMENUITEMINFO lpmii)
BOOL WINAPI winhttp.WinHttpReceiveResponse(_In_ HINTERNET hRequest,_Reserved_ LPVOID lpReserved)
PCCERT_CONTEXT WINAPI crypt32.CertDuplicateCertificateContext(_In_ PCCERT_CONTEXT pCertContext)
BOOL WINAPI winhttp.WinHttpReceiveResponse(_In_ HINTERNET hRequest,_Reserved_ LPVOID lpReserved)
virtual void None.SetTags(D2D1_TAG tag1 None,D2D1_TAG tag2 None)
HRESULT WINAPI d3dcompiler_47.D3DCreateFunctionLinkingGraph(_In_ UINT uFlags,_Out_ ID3D11FunctionLinkingGraph **ppFunctionLinkingGraph)
BOOL WINAPI winhttp.WinHttpGetProxyForUrl(_In_ HINTERNET hSession,_In_ LPCWSTR lpcwszUrl,_In_ WINHTTP_AUTOPROXY_OPTIONS *pAutoProxyOptions,_Out_ WINHTTP_PROXY_INFO *pProxyInfo)
BOOL WINAPI user32.CheckMenuRadioItem(_In_ HMENU hmenu,_In_ UINT idFirst,_In_ UINT idLast,_In_ UINT idCheck,_In_ UINT uFlags)
BOOL WINAPI winhttp.WinHttpAddRequestHeaders(_In_ HINTERNET hRequest,_In_ LPCWSTR pwszHeaders,_In_ DWORD dwHeadersLength,_In_ DWORD dwModifiers)
VOID WINAPI winhttp.WinHttpFreeProxyResult(_Inout_ WINHTTP_PROXY_RESULT *pProxyResult)
BOOL WINAPI crypt32.CryptSIPVerifyIndirectData(_In_ SIP_SUBJECTINFO *pSubjectInfo,_In_ SIP_INDIRECT_DATA *pIndirectData)
HINTERNET WINAPI winhttp.WinHttpOpenRequest(_In_ HINTERNET hConnect,_In_ LPCWSTR pwszVerb,_In_ LPCWSTR pwszObjectName,_In_ LPCWSTR pwszVersion,_In_ LPCWSTR pwszReferrer,_In_ LPCWSTR *ppwszAcceptTypes,_In_ DWORD dwFlags)
BOOL WINAPI crypt32.CertSetCertificateContextPropertiesFromCTLEntry(_In_ PCCERT_CONTEXT pCertContext,_In_ PCTL_ENTRY pCtlEntry,_In_ DWORD dwFlags)
LPCSTR WINAPI crypt32.CertAlgIdToOID(_In_ DWORD dwAlgId)
PCCTL_CONTEXT WINAPI crypt32.CertDuplicateCTLContext(_In_ PCCTL_CONTEXT pCtlContext)
BOOL WINAPI advapi32.CryptGetKeyParam(_In_ HCRYPTKEY hKey,_In_ DWORD dwParam,_Out_ BYTE *pbData,_Inout_ DWORD *pdwDataLen,_In_ DWORD dwFlags)
BOOL WINAPI winhttp.WinHttpCloseHandle(_In_ HINTERNET hInternet)
BOOL WINAPI crypt32.CryptImportPublicKeyInfo(_In_ HCRYPTPROV hCryptProv,_In_ DWORD dwCertEncodingType,_In_ PCERT_PUBLIC_KEY_INFO pInfo,_Out_ HCRYPTKEY *phKey)
CRYPT_PROVIDER_PRIVDATA* WINAPI wintrust.WTHelperGetProvPrivateDataFromChain(_In_ CRYPT_PROVIDER_DATA *pProvData,GUID *pgProviderID None)
HRESULT WINAPI d3dcompiler_47.D3DGetTraceInstructionOffsets(in LPCVOID pSrcData,in SIZE_T SrcDataSize,in UINT Flags,in SIZE_T StartInstIndex,in SIZE_T NumInsts,out_opt SIZE_T pOffsets,out_opt SIZE_T pTotalInsts)
BOOL WINAPI winhttp.WinHttpGetProxyForUrl(_In_ HINTERNET hSession,_In_ LPCWSTR lpcwszUrl,_In_ WINHTTP_AUTOPROXY_OPTIONS *pAutoProxyOptions,_Out_ WINHTTP_PROXY_INFO *pProxyInfo)
BOOL WINAPI crypt32.CertDeleteCRLFromStore(_In_ PCCRL_CONTEXT pCrlContext)
BOOL WINAPI crypt32.CertDeleteCRLFromStore(_In_ PCCRL_CONTEXT pCrlContext)
BOOL WINAPI winhttp.WinHttpTimeToSystemTime(_In_ LPCWSTR pwszTime,_Out_ SYSTEMTIME *pst)
LPCSTR WINAPI crypt32.CertAlgIdToOID(_In_ DWORD dwAlgId)
BOOL WINAPI winhttp.WinHttpQueryAuthSchemes(_In_ HINTERNET hRequest,_Out_ LPDWORD lpdwSupportedSchemes,_Out_ LPDWORD lpdwFirstScheme,_Out_ LPDWORD pdwAuthTarget)
BOOL WINAPI winhttp.WinHttpQueryHeaders(_In_ HINTERNET hRequest,_In_ DWORD dwInfoLevel,_In_opt_ LPCWSTR pwszName,_Out_ LPVOID lpBuffer,_Inout_ LPDWORD lpdwBufferLength,_Inout_ LPDWORD lpdwIndex)
BOOL WINAPI crypt32.CertCompareCertificate(_In_ DWORD dwCertEncodingType,_In_ PCERT_INFO pCertId1,_In_ PCERT_INFO pCertId2)
BOOL WINAPI crypt32.CryptSIPCreateIndirectData(_In_ SIP_SUBJECTINFO *pSubjectInfo,_Inout_ DWORD *pcbIndirectData,_Out_ SIP_INDIRECT_DATA *pIndirectData)
HRESULT WINAPI d3dcompiler_47.D3DStripShader(in LPCVOID pShaderBytecode,in SIZE_T BytecodeLength,in UINT uStripFlags,out ID3DBlob ppStrippedBlob)
BOOL WINAPI winhttp.WinHttpDetectAutoProxyConfigUrl(_In_ DWORD dwAutoDetectFlags,_Out_ LPWSTR *ppwszAutoConfigUrl)
HRESULT WINAPI d3dcompiler_47.D3DDisassemble11Trace(in LPCVOID pSrcData,in SIZE_T SrcDataSize,in ID3D11ShaderTrace pTrace,in UINT StartStep,in UINT NumSteps,in UINT Flags,out ID3DBlob ppDisassembly)
BOOL WINAPI advapi32.CryptContextAddRef(_In_ HCRYPTPROV hProv,_In_ DWORD *pdwReserved,_In_ DWORD dwFlags)
BOOL WINAPI winhttp.WinHttpCreateUrl(_In_ LPURL_COMPONENTS lpUrlComponents,_In_ DWORD dwFlags,_Out_ LPWSTR pwszUrl,_Inout_ LPDWORD lpdwUrlLength)
BOOL WINAPI crypt32.CryptMsgSignCTL(_In_ DWORD dwMsgEncodingType,_In_ BYTE *pbCtlContent,_In_ DWORD cbCtlContent,_In_ PCMSG_SIGNED_ENCODE_INFO pSignInfo,_In_ DWORD dwFlags,_Out_ BYTE *pbEncoded,_Inout_ DWORD *pcbEncoded)
HRESULT WINAPI mssign32.SignerTimeStampEx2(_Reserved_ DWORD dwFlags,_In_ SIGNER_SUBJECT_INFO *pSubjectInfo,_In_ LPCWSTR pwszHttpTimeStamp,_In_ ALG_ID dwAlgId,_In_ PCRYPT_ATTRIBUTES psRequest,_In_ LPVOID pSipData,_Out_ SIGNER_CONTEXT **ppSignerContext)
BOOL WINAPI advapi32.CryptEnumProviderTypes(_In_ DWORD dwIndex,_In_ DWORD *pdwReserved,_In_ DWORD dwFlags,_Out_ DWORD *pdwProvType,_Out_ LPTSTR pszTypeName,_Inout_ DWORD *pcbTypeName)
BOOL WINAPI advapi32.CryptEnumProviderTypesW(_In_ DWORD dwIndex,_In_ DWORD *pdwReserved,_In_ DWORD dwFlags,_Out_ DWORD *pdwProvType,_Out_ LPTSTR pszTypeName,_Inout_ DWORD *pcbTypeName)
BOOL WINAPI advapi32.CryptEnumProviderTypesA(_In_ DWORD dwIndex,_In_ DWORD *pdwReserved,_In_ DWORD dwFlags,_Out_ DWORD *pdwProvType,_Out_ LPTSTR pszTypeName,_Inout_ DWORD *pcbTypeName)
BOOL WINAPI winhttp.WinHttpGetProxyForUrl(_In_ HINTERNET hSession,_In_ LPCWSTR lpcwszUrl,_In_ WINHTTP_AUTOPROXY_OPTIONS *pAutoProxyOptions,_Out_ WINHTTP_PROXY_INFO *pProxyInfo)
BOOL WINAPI advapi32.CryptHashSessionKey(_In_ HCRYPTHASH hHash,_In_ HCRYPTKEY hKey,_In_ DWORD dwFlags)
BOOL WINAPI crypt32.CertIsStrongHashToSign(_In_ PCCERT_STRONG_SIGN_PARA pStrongSignPara,_In_ LPCWSTR pwszCNGHashAlgid,_In_opt_ PCCERT_CONTEXT pSigningCert)
BOOL WINAPI crypt32.CertResyncCertificateChainEngine(_In_opt_ HCERTCHAINENGINE hChainEngine)
HCRYPTOIDFUNCSET WINAPI crypt32.CryptInitOIDFunctionSet(_In_ LPCSTR pszFuncName,_In_ DWORD dwFlags)
BOOL WINAPI crypt32.CertDeleteCTLFromStore(_In_ PCCTL_CONTEXT pCtlContext)
HINTERNET WINAPI winhttp.WinHttpConnect(_In_ HINTERNET hSession,_In_ LPCWSTR pswzServerName,_In_ INTERNET_PORT nServerPort,_Reserved_ DWORD dwReserved)
BOOL WINAPI crypt32.CertDeleteCertificateFromStore(_In_ PCCERT_CONTEXT pCertContext)
BOOL WINAPI crypt32.CertCloseStore(_In_ HCERTSTORE hCertStore,_In_ DWORD dwFlags)
BOOL WINAPI None.CertStoreProvReadCertCallback(_In_ HCERTSTOREPROV hStoreProv,_In_ PCCERT_CONTEXT pStoreCertContext,_In_ DWORD dwFlags,_Out_ PCCERT_CONTEXT *ppProvCertContext)
BOOL WINAPI crypt32.CertSerializeCRLStoreElement(_In_ PCCRL_CONTEXT pCrlContext,_In_ DWORD dwFlags,_Out_ BYTE *pbElement,_Inout_ DWORD *pcbElement)
HRESULT WINAPI cryptxml.CryptXmlImportPublicKey(DWORD dwFlags None,_In_ CRYPT_XML_KEY_VALUE *pKeyValue,_Out_ BCRYPT_KEY_HANDLE *phKey)
BOOL WINAPI advapi32.CryptGetUserKey(_In_ HCRYPTPROV hProv,_In_ DWORD dwKeySpec,_Out_ HCRYPTKEY *phUserKey)
BOOL WINAPI advapi32.CryptSetProvider(_In_ LPCTSTR pszProvName,_In_ DWORD dwProvType)
BOOL WINAPI advapi32.CryptSetProviderW(_In_ LPCTSTR pszProvName,_In_ DWORD dwProvType)
BOOL WINAPI advapi32.CryptSetProviderA(_In_ LPCTSTR pszProvName,_In_ DWORD dwProvType)
BOOL WINAPI None.CryptGetLocalKeyLimits(_In_ ALG_ID algId,_In_ DWORD dwFlags,_Out_ PCRYPT_KEY_LIMITS pLimits,_Inout_ LPDWORD cbLimitLength)
BOOL WINAPI crypt32.PFXIsPFXBlob(_In_ CRYPT_DATA_BLOB *pPFX)
BOOL WINAPI winhttp.WinHttpQueryOption(_In_ HINTERNET hInternet,_In_ DWORD dwOption,_Out_ LPVOID lpBuffer,_Inout_ LPDWORD lpdwBufferLength)
BOOL WINAPI wintrust.IsCatalogFile(_In_opt_ HANDLE hFile,_In_opt_ WCHAR *pwszFileName)
BOOL WINAPI winhttp.WinHttpCreateUrl(_In_ LPURL_COMPONENTS lpUrlComponents,_In_ DWORD dwFlags,_Out_ LPWSTR pwszUrl,_Inout_ LPDWORD lpdwUrlLength)
CRYPT_PROVIDER_DATA* WINAPI wintrust.WTHelperProvDataFromStateData(_In_ HANDLE hStateData)
PCCERT_CONTEXT WINAPI crypt32.CertDuplicateCertificateContext(_In_ PCCERT_CONTEXT pCertContext)
DWORD WINAPI winhttp.WinHttpWebSocketSend(_In_ HINTERNET hWebSocket,_In_ WINHTTP_WEB_SOCKET_BUFFER_TYPE eBufferType,_In_ PVOID pvBuffer,_In_ DWORD dwBufferLength)
HRESULT WINAPI d3dcompiler_47.D3DLoadModule(_In_ LPCVOID pSrcData,_In_ SIZE_T cbSrcDataSize,_Out_ ID3D11Module **ppModule)
BOOL WINAPI crypt32.CertIsStrongHashToSign(_In_ PCCERT_STRONG_SIGN_PARA pStrongSignPara,_In_ LPCWSTR pwszCNGHashAlgid,_In_opt_ PCCERT_CONTEXT pSigningCert)
BOOL WINAPI crypt32.CryptUnregisterOIDFunction(_In_ DWORD dwEncodingType,_In_ LPCSTR pszFuncName,_In_ LPCSTR pszOID)
HRESULT WINAPI d3dcompiler_47.D3DGetDebugInfo(in LPCVOID pSrcData,in SIZE_T SrcDataSize,out ID3DBlob ppDebugInfo)
BOOL WINAPI crypt32.CryptMsgCountersignEncoded(_In_ DWORD dwEncodingType,_In_ PBYTE pbSignerInfo,_In_ DWORD cbSignerInfo,_In_ DWORD cCountersigners,_In_ PCMSG_SIGNER_ENCODE_INFO rgCountersigners,_Out_ PBYTE pbCountersignature,_Inout_ PDWORD pcbCountersignature)
BOOL WINAPI advapi32.CryptContextAddRef(_In_ HCRYPTPROV hProv,_In_ DWORD *pdwReserved,_In_ DWORD dwFlags)
BOOL WINAPI winhttp.WinHttpCreateUrl(_In_ LPURL_COMPONENTS lpUrlComponents,_In_ DWORD dwFlags,_Out_ LPWSTR pwszUrl,_Inout_ LPDWORD lpdwUrlLength)
PCCERT_CONTEXT WINAPI crypt32.CertDuplicateCertificateContext(_In_ PCCERT_CONTEXT pCertContext)
BOOL WINAPI crypt32.PFXVerifyPassword(_In_ CRYPT_DATA_BLOB *pPFX,_In_ LPCWSTR szPassword,_In_ DWORD dwFlags)
BOOL WINAPI crypt32.CertFreeCertificateContext(_In_ PCCERT_CONTEXT pCertContext)
BOOL WINAPI advapi32.CryptGetKeyParam(_In_ HCRYPTKEY hKey,_In_ DWORD dwParam,_Out_ BYTE *pbData,_Inout_ DWORD *pdwDataLen,_In_ DWORD dwFlags)
BOOL WINAPI winhttp.WinHttpDetectAutoProxyConfigUrl(_In_ DWORD dwAutoDetectFlags,_Out_ LPWSTR *ppwszAutoConfigUrl)
BOOL WINAPI crypt32.CertAddCTLLinkToStore(_In_ HCERTSTORE hCertStore,_In_ PCCTL_CONTEXT pCtlContext,_In_ DWORD dwAddDisposition,_Out_opt_ PCCTL_CONTEXT *ppStoreContext)
VOID WINAPI crypt32.CertFreeCertificateChain(_In_ PCCERT_CHAIN_CONTEXT pChainContext)
PCCERT_CONTEXT WINAPI wintrust.WTHelperCertFindIssuerCertificate(_In_ PCCERT_CONTEXT pChildContext,_In_ DWORD chStores,_In_ HCERTSTORE *pahStores,_In_ FILETIME *psftVerifyAsOf,_In_ DWORD dwEncoding,_Out_opt_ DWORD *pdwConfidence,_Out_ DWORD *dwError)
BOOL WINAPI crypt32.CryptSIPGetCaps(_In_ SIP_SUBJECTINFO *pSubjInfo,_Inout_ SIP_CAP_SET *pCaps)
BOOL WINAPI crypt32.CryptRegisterOIDFunction(_In_ DWORD dwEncodingType,_In_ LPCSTR pszFuncName,_In_ LPCSTR pszOID,_In_ LPCWSTR pwszDll,_In_ LPCSTR pszOverrideFuncName)
BOOL WINAPI userenv.GetProfilesDirectory(_Out_ LPTSTR lpProfilesDir,_Inout_ LPDWORD lpcchSize)
BOOL WINAPI userenv.GetProfilesDirectoryW(_Out_ LPTSTR lpProfilesDir,_Inout_ LPDWORD lpcchSize)
BOOL WINAPI userenv.GetProfilesDirectoryA(_Out_ LPTSTR lpProfilesDir,_Inout_ LPDWORD lpcchSize)
BOOL WINAPI crypt32.CertGetEnhancedKeyUsage(_In_ PCCERT_CONTEXT pCertContext,_In_ DWORD dwFlags,_Out_ PCERT_ENHKEY_USAGE pUsage,_Inout_ DWORD *pcbUsage)
BOOL WINAPI wintrust.CryptCATPersistStore(_In_ HANDLE hCatalog)
HRESULT WINAPI mssign32.SignerTimeStampEx(_Reserved_ DWORD dwFlags,_In_ SIGNER_SUBJECT_INFO *pSubjectInfo,_In_ LPCWSTR pwszHttpTimeStamp,_In_ PCRYPT_ATTRIBUTES psRequest,_In_ LPVOID pSipData,_Out_ SIGNER_CONTEXT **ppSignerContext)
HRESULT WINAPI mssign32.SignerSign(_In_ SIGNER_SUBJECT_INFO *pSubjectInfo,_In_ SIGNER_CERT *pSignerCert,_In_ SIGNER_SIGNATURE_INFO *pSignatureInfo,_In_opt_ SIGNER_PROVIDER_INFO *pProviderInfo,_In_opt_ LPCWSTR pwszHttpTimeStamp,_In_opt_ PCRYPT_ATTRIBUTES psRequest,_In_opt_ LPVOID pSipData)
HRESULT WINAPI cryptxml.CryptXmlOpenToEncode(_In_opt_ CRYPT_XML_TRANSFORM_CHAIN_CONFIG *pConfig,DWORD dwFlags None,_In_opt_ LPCWSTR wszId,_In_ CRYPT_XML_PROPERTY *rgProperty,_In_ ULONG cProperty,_In_opt_ CRYPT_XML_BLOB *pEncoded,HCRYPTXML *phSignature None)
HRESULT WINAPI d3dcompiler_47.D3DDisassemble11Trace(in LPCVOID pSrcData,in SIZE_T SrcDataSize,in ID3D11ShaderTrace pTrace,in UINT StartStep,in UINT NumSteps,in UINT Flags,out ID3DBlob ppDisassembly)
HINTERNET WINAPI winhttp.WinHttpWebSocketCompleteUpgrade(_In_ HINTERNET hRequest,_In_opt_ DWORD_PTR pContext)
HRESULT WINAPI mssign32.SignerSignEx2(_In_ DWORD dwFlags,_In_ SIGNER_SUBJECT_INFO *pSubjectInfo,_In_ SIGNER_CERT *pSignerCert,_In_ SIGNER_SIGNATURE_INFO *pSignatureInfo,_In_opt_ SIGNER_PROVIDER_INFO *pProviderInfo,_In_opt_ DWORD dwTimestampFlags,_In_opt_ PCSTR pszTimestampAlgorithmOid,_In_opt_ PCWSTR pwszHttpTimeStamp,_In_opt_ PCRYPT_ATTRIBUTES psRequest,_In_opt_ PVOID pSipData,_Out_ SIGNER_CONTEXT **ppSignerContext,_In_opt_ PCERT_STRONG_SIGN_PARA pCryptoPolicy,_Reserved_ PVOID pReserved)
BOOL WINAPI crypt32.CertSerializeCTLStoreElement(_In_ PCCTL_CONTEXT pCtlContext,_In_ DWORD dwFlags,_Out_ BYTE *pbElement,_Inout_ DWORD *pcbElement)
BOOL WINAPI winhttp.WinHttpSetCredentials(_In_ HINTERNET hRequest,_In_ DWORD AuthTargets,_In_ DWORD AuthScheme,_In_ LPCWSTR pwszUserName,_In_ LPCWSTR pwszPassword,_Reserved_ LPVOID pAuthParams)
WINHTTP_STATUS_CALLBACK WINAPI winhttp.WinHttpSetStatusCallback(_In_ HINTERNET hInternet,_In_ WINHTTP_STATUS_CALLBACK lpfnInternetCallback,_In_ DWORD dwNotificationFlags,_Reserved_ DWORD_PTR dwReserved)
BOOL WINAPI crypt32.CertVerifySubjectCertificateContext(_In_ PCCERT_CONTEXT pSubject,_In_opt_ PCCERT_CONTEXT pIssuer,_Inout_ DWORD *pdwFlags)
HRESULT WINAPI wintrust.WTHelperCertCheckValidSignature(CRYPT_PROVIDER_DATA *pProvData None)
BOOL WINAPI advapi32.CryptHashData(_In_ HCRYPTHASH hHash,_In_ BYTE *pbData,_In_ DWORD dwDataLen,_In_ DWORD dwFlags)
BOOL WINAPI crypt32.CryptUnprotectMemory(_Inout_ LPVOID pData,_In_ DWORD cbData,_In_ DWORD dwFlags)
BOOL WINAPI crypt32.CryptRegisterDefaultOIDFunction(_In_ DWORD dwEncodingType,_In_ LPCSTR pszFuncName,_In_ DWORD dwIndex,_In_ LPCWSTR pwszDll)
CRYPT_PROVIDER_PRIVDATA* WINAPI wintrust.WTHelperGetProvPrivateDataFromChain(_In_ CRYPT_PROVIDER_DATA *pProvData,GUID *pgProviderID None)
BOOL WINAPI cryptui.CryptUIWizImport(_In_ DWORD dwFlags,_In_ HWND hwndParent,_In_ LPCWSTR pwszWizardTitle,_In_ PCCRYPTUI_WIZ_IMPORT_SRC_INFO pImportSrc,_In_ HCERTSTORE hDestCertStore)
DWORD WINAPI crypt32.CertEnumCTLContextProperties(_In_ PCCTL_CONTEXT pCtlContext,_In_ DWORD dwPropId)
HRESULT WINAPI cryptxml.CryptXmlGetStatus(HCRYPTXML hCryptXml None,CRYPT_XML_STATUS *pStatus None)
PCCTL_CONTEXT WINAPI crypt32.CertEnumCTLsInStore(_In_ HCERTSTORE hCertStore,_In_ PCCTL_CONTEXT pPrevCtlContext)
BOOL WINAPI wintrust.OpenPersonalTrustDBDialog(_In_opt_ HWND hwndParent)
DWORD WINAPI crypt32.CertOIDToAlgId(_In_ LPCSTR pszObjId)
HRESULT WINAPI mssign32.SignerTimeStampEx3(_In_ DWORD dwFlags,_In_ DWORD dwIndex,_In_ SIGNER_SUBJECT_INFO *pSubjectInfo,_In_ PCWSTR pwszHttpTimeStamp,_In_ PCWSTR pszAlgorithmOid,_In_opt_ PCRYPT_ATTRIBUTES psRequest,_In_opt_ PVOID pSipData,_Out_ SIGNER_CONTEXT **ppSignerContext,_In_opt_ PCERT_STRONG_SIGN_PARA pCryptoPolicy,_Reserved_ PVOID pReserved)
BOOL WINAPI crypt32.CryptSIPCreateIndirectData(_In_ SIP_SUBJECTINFO *pSubjectInfo,_Inout_ DWORD *pcbIndirectData,_Out_ SIP_INDIRECT_DATA *pIndirectData)
CRYPTCATATTRIBUTE* WINAPI wintrust.CryptCATPutCatAttrInfo(_In_ HANDLE hCatalog,_In_ LPWSTR pwszReferenceTag,_In_ DWORD dwAttrTypeAndAction,_In_ DWORD cbData,_In_ BYTE *pbData)
BOOL WINAPI advapi32.CryptSignHash(_In_ HCRYPTHASH hHash,_In_ DWORD dwKeySpec,_In_ LPCTSTR sDescription,_In_ DWORD dwFlags,_Out_ BYTE *pbSignature,_Inout_ DWORD *pdwSigLen)
BOOL WINAPI advapi32.CryptSignHashW(_In_ HCRYPTHASH hHash,_In_ DWORD dwKeySpec,_In_ LPCTSTR sDescription,_In_ DWORD dwFlags,_Out_ BYTE *pbSignature,_Inout_ DWORD *pdwSigLen)
BOOL WINAPI advapi32.CryptSignHashA(_In_ HCRYPTHASH hHash,_In_ DWORD dwKeySpec,_In_ LPCTSTR sDescription,_In_ DWORD dwFlags,_Out_ BYTE *pbSignature,_Inout_ DWORD *pdwSigLen)
BOOL WINAPI crypt32.CertSetEnhancedKeyUsage(_In_ PCCERT_CONTEXT pCertContext,_In_ PCERT_ENHKEY_USAGE pUsage)
BOOL WINAPI advapi32.CryptReleaseContext(_In_ HCRYPTPROV hProv,_In_ DWORD dwFlags)
PCCERT_CONTEXT WINAPI crypt32.CertDuplicateCertificateContext(_In_ PCCERT_CONTEXT pCertContext)
BOOL WINAPI advapi32.CryptDeriveKey(_In_ HCRYPTPROV hProv,_In_ ALG_ID Algid,_In_ HCRYPTHASH hBaseData,_In_ DWORD dwFlags,_Inout_ HCRYPTKEY *phKey)
BOOL WINAPI crypt32.CryptMsgGetAndVerifySigner(_In_ HCRYPTMSG hCryptMsg,_In_ DWORD cSignerStore,_In_opt_ HCERTSTORE *rghSignerStore,_In_ DWORD dwFlags,_Out_opt_ PCCERT_CONTEXT *ppSigner,_Inout_opt_ DWORD *pdwSignerIndex)
BOOL WINAPI crypt32.CryptUnregisterDefaultOIDFunction(_In_ DWORD dwEncodingType,_In_ LPCSTR pszFuncName,_In_ LPCWSTR pwszDll)
BOOL WINAPI crypt32.CryptVerifyMessageHash(_In_ PCRYPT_HASH_MESSAGE_PARA pHashPara,_In_ BYTE *pbHashedBlob,_In_ DWORD cbHashedBlob,_Out_ BYTE *pbToBeHashed,_Inout_ DWORD *pcbToBeHashed,_Out_opt_ BYTE *pbComputedHash,_Inout_opt_ DWORD *pcbComputedHash)
BOOL WINAPI crypt32.CertAddCRLContextToStore(_In_ HCERTSTORE hCertStore,_In_ PCCRL_CONTEXT pCrlContext,_In_ DWORD dwAddDisposition,_Out_opt_ PCCRL_CONTEXT *ppStoreContext)
BOOL WINAPI cryptnet.CryptGetTimeValidObject(_In_ LPCSTR pszTimeValidOid,_In_ LPVOID pvPara,_In_ PCCERT_CONTEXT pIssuer,_In_opt_ LPFILETIME pftValidFor,_In_ DWORD dwFlags,_In_ DWORD dwTimeout,_Out_opt_ LPVOID *ppvObject,_In_opt_ PCRYPT_CREDENTIALS pCredentials,_Inout_opt_ PCRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO pExtraInfo)
BOOL WINAPI advapi32.CryptExportKey(_In_ HCRYPTKEY hKey,_In_ HCRYPTKEY hExpKey,_In_ DWORD dwBlobType,_In_ DWORD dwFlags,_Out_ BYTE *pbData,_Inout_ DWORD *pdwDataLen)
BOOL WINAPI crypt32.CertAddCertificateContextToStore(_In_ HCERTSTORE hCertStore,_In_ PCCERT_CONTEXT pCertContext,_In_ DWORD dwAddDisposition,_Out_opt_ PCCERT_CONTEXT *ppStoreContext)
BOOL WINAPI crypt32.CertAddCertificateLinkToStore(_In_ HCERTSTORE hCertStore,_In_ PCCERT_CONTEXT pCertContext,_In_ DWORD dwAddDisposition,_Out_opt_ PCCERT_CONTEXT *ppStoreContext)
VOID WINAPI crypt32.CertCloseServerOcspResponse(_In_ HCERT_SERVER_OCSP_RESPONSE hServerOcspResponse,_In_ DWORD dwFlags)
BOOL WINAPI advapi32.CryptVerifySignature(_In_ HCRYPTHASH hHash,_In_ BYTE *pbSignature,_In_ DWORD dwSigLen,_In_ HCRYPTKEY hPubKey,_In_ LPCTSTR sDescription,_In_ DWORD dwFlags)
BOOL WINAPI advapi32.CryptVerifySignatureW(_In_ HCRYPTHASH hHash,_In_ BYTE *pbSignature,_In_ DWORD dwSigLen,_In_ HCRYPTKEY hPubKey,_In_ LPCTSTR sDescription,_In_ DWORD dwFlags)
BOOL WINAPI advapi32.CryptVerifySignatureA(_In_ HCRYPTHASH hHash,_In_ BYTE *pbSignature,_In_ DWORD dwSigLen,_In_ HCRYPTKEY hPubKey,_In_ LPCTSTR sDescription,_In_ DWORD dwFlags)
BOOL WINAPI advapi32.CryptImportKey(_In_ HCRYPTPROV hProv,_In_ BYTE *pbData,_In_ DWORD dwDataLen,_In_ HCRYPTKEY hPubKey,_In_ DWORD dwFlags,_Out_ HCRYPTKEY *phKey)
BOOL WINAPI crypt32.CertGetIntendedKeyUsage(_In_ DWORD dwCertEncodingType,_In_ PCERT_INFO pCertInfo,_Out_ BYTE *pbKeyUsage,_In_ DWORD cbKeyUsage)
BOOL WINAPI crypt32.CryptGetDefaultOIDDllList(_In_ HCRYPTOIDFUNCSET hFuncSet,_In_ DWORD dwEncodingType,_Out_ LPWSTR pwszDllList,_Inout_ DWORD *pcchDllList)
BOOL WINAPI crypt32.CryptUnregisterDefaultOIDFunction(_In_ DWORD dwEncodingType,_In_ LPCSTR pszFuncName,_In_ LPCWSTR pwszDll)
HRESULT WINAPI mssign32.SignerSignEx2(_In_ DWORD dwFlags,_In_ SIGNER_SUBJECT_INFO *pSubjectInfo,_In_ SIGNER_CERT *pSignerCert,_In_ SIGNER_SIGNATURE_INFO *pSignatureInfo,_In_opt_ SIGNER_PROVIDER_INFO *pProviderInfo,_In_opt_ DWORD dwTimestampFlags,_In_opt_ PCSTR pszTimestampAlgorithmOid,_In_opt_ PCWSTR pwszHttpTimeStamp,_In_opt_ PCRYPT_ATTRIBUTES psRequest,_In_opt_ PVOID pSipData,_Out_ SIGNER_CONTEXT **ppSignerContext,_In_opt_ PCERT_STRONG_SIGN_PARA pCryptoPolicy,_Reserved_ PVOID pReserved)
LONG WINAPI crypt32.CertVerifyTimeValidity(_In_ LPFILETIME pTimeToVerify,_In_ PCERT_INFO pCertInfo)
DWORD WINAPI crypt32.CertEnumCertificateContextProperties(_In_ PCCERT_CONTEXT pCertContext,_In_ DWORD dwPropId)
BOOL WINAPI winhttp.WinHttpGetIEProxyConfigForCurrentUser(_Inout_ WINHTTP_CURRENT_USER_IE_PROXY_CONFIG *pProxyConfig)
BOOL WINAPI cryptnet.CryptGetObjectUrl(_In_ LPCSTR pszUrlOid,_In_ LPVOID pvPara,_In_ DWORD dwFlags,_Out_ PCRYPT_URL_ARRAY pUrlArray,_Inout_ DWORD *pcbUrlArray,_Out_ PCRYPT_URL_INFO pUrlInfo,_Inout_ DWORD *pcbUrlInfo,_Reserved_ LPVOID pvReserved)
BOOL WINAPI crypt32.CryptHashPublicKeyInfo(_In_ HCRYPTPROV_LEGACY hCryptProv,_In_ ALG_ID Algid,_In_ DWORD dwFlags,_In_ DWORD dwCertEncodingType,_In_ PCERT_PUBLIC_KEY_INFO pInfo,_Out_ BYTE *pbComputedHash,_Inout_ DWORD *pcbComputedHash)
BOOL WINAPI crypt32.CryptUpdateProtectedState(_In_ PSID pOldSid,_In_ LPCWSTR pwszOldPassword,_In_ DWORD dwFlags,_Out_ DWORD *pdwSuccessCount,_Out_ DWORD *pdwFailureCount)
BOOL WINAPI crypt32.CryptSIPRemoveSignedDataMsg(_In_ SIP_SUBJECTINFO *pSubjectInfo,_In_ DWORD dwIndex)
BOOL WINAPI crypt32.CertVerifyValidityNesting(_In_ PCERT_INFO pSubjectInfo,_In_ PCERT_INFO pIssuerInfo)
PCCERT_CONTEXT WINAPI crypt32.CertGetIssuerCertificateFromStore(_In_ HCERTSTORE hCertStore,_In_ PCCERT_CONTEXT pSubjectContext,_In_opt_ PCCERT_CONTEXT pPrevIssuerContext,_Inout_ DWORD *pdwFlags)
HCERTSTORE WINAPI crypt32.CertOpenSystemStore(_In_ HCRYPTPROV_LEGACY hprov,_In_ LPTCSTR szSubsystemProtocol)
HCERTSTORE WINAPI crypt32.CertOpenSystemStoreW(_In_ HCRYPTPROV_LEGACY hprov,_In_ LPTCSTR szSubsystemProtocol)
HCERTSTORE WINAPI crypt32.CertOpenSystemStoreA(_In_ HCRYPTPROV_LEGACY hprov,_In_ LPTCSTR szSubsystemProtocol)
BOOL WINAPI crypt32.CertFreeCRLContext(_In_ PCCRL_CONTEXT pCrlContext)
BOOL WINAPI None.CertStoreProvReadCTL(_In_ HCERTSTOREPROV hStoreProv,_In_ PCCTL_CONTEXT pStoreCtlContext,_In_ DWORD dwFlags,_Out_ PCCTL_CONTEXT *ppProvCtlContext)
CRYPTCATATTRIBUTE* WINAPI wintrust.CryptCATPutAttrInfo(_In_ HANDLE hCatalog,_In_ CRYPTCATMEMBER *pCatMember,_In_ LPWSTR pwszReferenceTag,_In_ DWORD dwAttrTypeAndAction,_In_ DWORD cbData,_In_ BYTE *pbData)
BOOL WINAPI cryptui.CryptUIWizDigitalSign(_In_ DWORD dwFlags,_In_opt_ HWND hwndParent,_In_opt_ LPCWSTR pwszWizardTitle,_In_ PCCRYPTUI_WIZ_DIGITAL_SIGN_INFO pDigitalSignInfo,_Out_opt_ PCCRYPTUI_WIZ_DIGITAL_SIGN_CONTEXT *ppSignContext)
BOOL WINAPI mssign32.PvkPrivateKeyAcquireContextFromMemory(_In_ LPCWSTR pwszProvName,_In_ DWORD dwProvType,_In_ BYTE *pbData,_In_ DWORD cbData,_In_ HWND hwndOwner,_In_ LPCWSTR pwszKeyName,_Inout_opt_ DWORD *pdwKeySpec,_Out_ HCRYPTPROV *phCryptProv,_Out_ LPTSTR *ppwszTmpContainer)
PCCRL_CONTEXT WINAPI crypt32.CertGetCRLFromStore(_In_ HCERTSTORE hCertStore,_In_opt_ PCCERT_CONTEXT pIssuerContext,_In_ PCCRL_CONTEXT pPrevCrlContext,_Inout_ DWORD *pdwFlags)
BOOL WINAPI crypt32.CertSelectCertificateChains(_In_opt_ LPCGUID pSelectionContext,_In_ DWORD dwFlags,_In_opt_ PCCERT_SELECT_CHAIN_PARA pChainParameters,_In_ DWORD cCriteria,_In_opt_ PCCERT_SELECT_CRITERIA rgpCriteria,_In_ HCERTSTORE hStore,_Out_ PDWORD pcSelection,_Out_ PCCERT_CHAIN_CONTEXT **pprgpSelection)
HRESULT WINAPI mssign32.SignerFreeSignerContext(_In_ SIGNER_CONTEXT *pSignerContext)
PCERT_EXTENSION WINAPI crypt32.CertFindExtension(_In_ LPCSTR pszObjId,_In_ DWORD cExtensions,_In_ CERT_EXTENSION rgExtensions[])
CRYPTCATSTORE* WINAPI wintrust.CryptCATStoreFromHandle(_In_ HANDLE hCatalog)
BOOL WINAPI crypt32.CryptStringToBinary(_In_ LPCTSTR pszString,_In_ DWORD cchString,_In_ DWORD dwFlags,_In_ BYTE *pbBinary,_Inout_ DWORD *pcbBinary,_Out_ DWORD *pdwSkip,_Out_ DWORD *pdwFlags)
BOOL WINAPI crypt32.CryptStringToBinaryW(_In_ LPCTSTR pszString,_In_ DWORD cchString,_In_ DWORD dwFlags,_In_ BYTE *pbBinary,_Inout_ DWORD *pcbBinary,_Out_ DWORD *pdwSkip,_Out_ DWORD *pdwFlags)
BOOL WINAPI crypt32.CryptStringToBinaryA(_In_ LPCTSTR pszString,_In_ DWORD cchString,_In_ DWORD dwFlags,_In_ BYTE *pbBinary,_Inout_ DWORD *pcbBinary,_Out_ DWORD *pdwSkip,_Out_ DWORD *pdwFlags)
HRESULT WINAPI cryptxml.CryptXmlGetTransforms(_Out_ PCRYPT_XML_TRANSFORM_CHAIN_CONFIG **pConfig)
BOOL WINAPI None.CertStoreProvDeleteCTL(_In_ HCERTSTOREPROV hStoreProv,_In_ PCCTL_CONTEXT pCtlContext,_In_ DWORD dwFlags)
CRYPTCATATTRIBUTE* WINAPI wintrust.CryptCATCDFEnumAttributesWithCDFTag(_In_ CRYPTCATCDF *pCDF,_In_ LPWSTR pwszMemberTag,_In_ CRYPTCATMEMBER *pMember,_In_ CRYPTCATATTRIBUTE *pPrevAttr,_In_ PFN_CDF_PARSE_ERROR_CALLBACK pfnParseError)
PCCERT_SERVER_OCSP_RESPONSE_CONTEXT WINAPI crypt32.CertGetServerOcspResponseContext(_In_ HCERT_SERVER_OCSP_RESPONSE hServerOcspResponse,_In_ DWORD dwFlags,_Reserved_ LPVOID pvReserved)
BOOL WINAPI advapi32.CryptDestroyKey(_In_ HCRYPTKEY hKey)
PCCRL_CONTEXT WINAPI crypt32.CertDuplicateCRLContext(_In_ PCCRL_CONTEXT pCrlContext)
PCERT_RDN_ATTR WINAPI crypt32.CertFindRDNAttr(_In_ LPCSTR pszObjId,_In_ PCERT_NAME_INFO pName)
HCRYPTMSG WINAPI crypt32.CryptMsgOpenToDecode(_In_ DWORD dwMsgEncodingType,_In_ DWORD dwFlags,_In_ DWORD dwMsgType,_In_ HCRYPTPROV_LEGACY hCryptProv,_In_ PCERT_INFO pRecipientInfo,_In_opt_ PCMSG_STREAM_INFO pStreamInfo)
BOOL WINAPI wintrust.WintrustSetRegPolicyFlags(_In_ DWORD dwPolicyFlags)
DWORD WINAPI crypt32.CertNameToStr(_In_ DWORD dwCertEncodingType,_In_ PCERT_NAME_BLOB pName,_In_ DWORD dwStrType,_Out_ LPTSTR psz,_In_ DWORD csz)
DWORD WINAPI crypt32.CertNameToStrW(_In_ DWORD dwCertEncodingType,_In_ PCERT_NAME_BLOB pName,_In_ DWORD dwStrType,_Out_ LPTSTR psz,_In_ DWORD csz)
DWORD WINAPI crypt32.CertNameToStrA(_In_ DWORD dwCertEncodingType,_In_ PCERT_NAME_BLOB pName,_In_ DWORD dwStrType,_Out_ LPTSTR psz,_In_ DWORD csz)
BOOL WINAPI advapi32.CryptEnumProviders(_In_ DWORD dwIndex,_In_ DWORD *pdwReserved,_In_ DWORD dwFlags,_Out_ DWORD *pdwProvType,_Out_ LPTSTR pszProvName,_Inout_ DWORD *pcbProvName)
BOOL WINAPI advapi32.CryptEnumProvidersW(_In_ DWORD dwIndex,_In_ DWORD *pdwReserved,_In_ DWORD dwFlags,_Out_ DWORD *pdwProvType,_Out_ LPTSTR pszProvName,_Inout_ DWORD *pcbProvName)
BOOL WINAPI advapi32.CryptEnumProvidersA(_In_ DWORD dwIndex,_In_ DWORD *pdwReserved,_In_ DWORD dwFlags,_Out_ DWORD *pdwProvType,_Out_ LPTSTR pszProvName,_Inout_ DWORD *pcbProvName)
BOOL WINAPI crypt32.CryptFreeOIDFunctionAddress(_In_ HCRYPTOIDFUNCADDR hFuncAddr,_In_ DWORD dwFlags)
VOID WINAPI crypt32.CertCloseServerOcspResponse(_In_ HCERT_SERVER_OCSP_RESPONSE hServerOcspResponse,_In_ DWORD dwFlags)
BOOL WINAPI winhttp.WinHttpGetIEProxyConfigForCurrentUser(_Inout_ WINHTTP_CURRENT_USER_IE_PROXY_CONFIG *pProxyConfig)
PCCERT_CHAIN_CONTEXT WINAPI crypt32.CertDuplicateCertificateChain(_In_ PCCERT_CHAIN_CONTEXT pChainContext)
BOOL WINAPI crypt32.CertCompareCertificateName(_In_ DWORD dwCertEncodingType,_In_ PCERT_NAME_BLOB pCertName1,_In_ PCERT_NAME_BLOB pCertName2)
PCCERT_CONTEXT WINAPI cryptui.CryptUIDlgSelectCertificate(_In_ PCCRYPTUI_SELECTCERTIFICATE_STRUCT pcsc)
PCCERT_CONTEXT WINAPI cryptui.CryptUIDlgSelectCertificateW(_In_ PCCRYPTUI_SELECTCERTIFICATE_STRUCT pcsc)
PCCERT_CONTEXT WINAPI cryptui.CryptUIDlgSelectCertificateA(_In_ PCCRYPTUI_SELECTCERTIFICATE_STRUCT pcsc)
BOOL WINAPI crypt32.CryptMsgClose(_In_ HCRYPTMSG hCryptMsg)
BOOL WINAPI cryptui.CryptUIDlgViewCertificate(_In_ PCCRYPTUI_VIEWCERTIFICATE_STRUCTW pCertViewInfo,_Out_ BOOL *pfPropertiesChanged)
BOOL WINAPI cryptui.CryptUIDlgViewCertificateW(_In_ PCCRYPTUI_VIEWCERTIFICATE_STRUCTW pCertViewInfo,_Out_ BOOL *pfPropertiesChanged)
BOOL WINAPI cryptui.CryptUIDlgViewCertificateA(_In_ PCCRYPTUI_VIEWCERTIFICATE_STRUCTW pCertViewInfo,_Out_ BOOL *pfPropertiesChanged)
BOOL WINAPI advapi32.CryptDestroyHash(_In_ HCRYPTHASH hHash)
BOOL WINAPI crypt32.CertSerializeCertificateStoreElement(_In_ PCCERT_CONTEXT pCertContext,_In_ DWORD dwFlags,_Out_ BYTE *pbElement,_Inout_ DWORD *pcbElement)
BOOL WINAPI cryptui.CryptUIDlgCertMgr(_In_ PCCRYPTUI_CERT_MGR_STRUCT pCryptUICertMgr)
BOOL WINAPI advapi32.CryptDuplicateHash(_In_ HCRYPTHASH hHash,_In_ DWORD *pdwReserved,_In_ DWORD dwFlags,_Out_ HCRYPTHASH *phHash)
HCERT_SERVER_OCSP_RESPONSE WINAPI crypt32.CertOpenServerOcspResponse(_In_ PCCERT_CHAIN_CONTEXT pChainContext,_In_ DWORD dwFlags,_Reserved_ LPVOID pvReserved)
LPCWSTR WINAPI crypt32.CryptFindLocalizedName(_In_ LPCWSTR pwszCryptName)
PCRYPT_ATTRIBUTE WINAPI crypt32.CertFindAttribute(_In_ LPCSTR pszObjId,_In_ DWORD cAttr,_In_ CRYPT_ATTRIBUTE rgAttr[])
HRESULT WINAPI mssign32.SignerTimeStamp(_In_ SIGNER_SUBJECT_INFO *pSubjectInfo,_In_ LPCWSTR pwszHttpTimeStamp,_In_opt_ PCRYPT_ATTRIBUTES psRequest,_In_opt_ LPVOID pSipData)
PCCERT_CONTEXT WINAPI crypt32.CertCreateSelfSignCertificate(_In_opt_ HCRYPTPROV_OR_NCRYPT_KEY_HANDLE hCryptProvOrNCryptKey,_In_ PCERT_NAME_BLOB pSubjectIssuerBlob,_In_ DWORD dwFlags,_In_opt_ PCRYPT_KEY_PROV_INFO pKeyProvInfo,_In_opt_ PCRYPT_ALGORITHM_IDENTIFIER pSignatureAlgorithm,_In_opt_ PSYSTEMTIME pStartTime,_In_opt_ PSYSTEMTIME pEndTime,PCERT_EXTENSIONS pExtensions None)
BOOL WINAPI advapi32.CryptDuplicateKey(_In_ HCRYPTKEY hKey,_In_ DWORD *pdwReserved,_In_ DWORD dwFlags,_Out_ HCRYPTKEY *phKey)
BOOL WINAPI advapi32.CryptGetHashParam(_In_ HCRYPTHASH hHash,_In_ DWORD dwParam,_Out_ BYTE *pbData,_Inout_ DWORD *pdwDataLen,_In_ DWORD dwFlags)
BOOL WINAPI crypt32.CryptSIPGetSignedDataMsg(_In_ SIP_SUBJECTINFO *pSubjectInfo,_Out_ DWORD *pdwEncodingType,_In_ DWORD dwIndex,_Inout_ DWORD *pcbSignedDataMsg,_Out_ BYTE *pbSignedDataMsg)
HRESULT WINAPI mssign32.PvkGetCryptProv(_In_ HWND hwnd,_In_ LPCWSTR pwszCaption,_In_ LPCWSTR pwszCapiProvider,_In_ DWORD dwProviderType,_In_ LPCWSTR pwszPvkFile,_In_ LPCWSTR pwszKeyContainerName,_Out_ DWORD *pdwKeySpec,_Out_opt_ LPWSTR *ppwszTmpContainer,_Out_ HCRYPTPROV *phCryptProv)
BOOL WINAPI advapi32.CryptDestroyKey(_In_ HCRYPTKEY hKey)
HCRYPTMSG WINAPI crypt32.CryptMsgDuplicate(_In_ HCRYPTMSG hCryptMsg)
BOOL WINAPI advapi32.CryptGenKey(_In_ HCRYPTPROV hProv,_In_ ALG_ID Algid,_In_ DWORD dwFlags,_Out_ HCRYPTKEY *phKey)
BOOL WINAPI cryptui.CryptUIWizFreeDigitalSignContext(_In_ PCCRYPTUI_WIZ_DIGITAL_SIGN_CONTEXT pSignContext)
BOOL WINAPI crypt32.CryptSIPPutSignedDataMsg(_In_ SIP_SUBJECTINFO *pSubjectInfo,_In_ DWORD dwEncodingType,_Out_ DWORD *pdwIndex,_In_ DWORD cbSignedDataMsg,_In_ BYTE *pbSignedDataMsg)
BOOL WINAPI crypt32.CertVerifyRevocation(_In_ DWORD dwEncodingType,_In_ DWORD dwRevType,_In_ DWORD cContext,_In_ PVOID rgpvContext[],_In_ DWORD dwFlags,_In_opt_ PCERT_REVOCATION_PARA pRevPara,_Inout_ PCERT_REVOCATION_STATUS pRevStatus)
HCERTSTORE WINAPI crypt32.CertDuplicateStore(_In_ HCERTSTORE hCertStore)
BOOL WINAPI crypt32.CertComparePublicKeyInfo(_In_ DWORD dwCertEncodingType,_In_ PCERT_PUBLIC_KEY_INFO pPublicKey1,_In_ PCERT_PUBLIC_KEY_INFO pPublicKey2)
BOOL WINAPI None.CertStoreProvDeleteCRLCallback(_In_ HCERTSTOREPROV hStoreProv,_In_ PCCRL_CONTEXT pCrlContext,_In_ DWORD dwFlags)
BOOL WINAPI advapi32.CryptGenRandom(_In_ HCRYPTPROV hProv,_In_ DWORD dwLen,_Inout_ BYTE *pbBuffer)
HRESULT WINAPI cryptxml.CryptXmlClose(_In_ HXML hCryptXml)
BOOL WINAPI crypt32.CryptUnprotectData(_In_ DATA_BLOB *pDataIn,_Out_opt_ LPWSTR *ppszDataDescr,_In_opt_ DATA_BLOB *pOptionalEntropy,_Reserved_ PVOID pvReserved,_In_opt_ CRYPTPROTECT_PROMPTSTRUCT *pPromptStruct,_In_ DWORD dwFlags,_Out_ DATA_BLOB *pDataOut)
BOOL WINAPI advapi32.CryptGetDefaultProvider(_In_ DWORD dwProvType,_In_ DWORD *pdwReserved,_In_ DWORD dwFlags,_Out_ LPTSTR pszProvName,_Inout_ DWORD *pcbProvName)
BOOL WINAPI advapi32.CryptGetDefaultProviderW(_In_ DWORD dwProvType,_In_ DWORD *pdwReserved,_In_ DWORD dwFlags,_Out_ LPTSTR pszProvName,_Inout_ DWORD *pcbProvName)
BOOL WINAPI advapi32.CryptGetDefaultProviderA(_In_ DWORD dwProvType,_In_ DWORD *pdwReserved,_In_ DWORD dwFlags,_Out_ LPTSTR pszProvName,_Inout_ DWORD *pcbProvName)
BOOL __cdecl instrsa5.GetEncSChannel(_Out_ BYTE **pData,_Out_ DWORD *dwDecSize)
BOOL WINAPI cryptdlg.CertSelectCertificate(_Inout_ PCERT_SELECT_STRUCT_W pCertSelectInfo)
VOID WINAPI crypt32.CertFreeCertificateChainList(_In_ PCCERT_CHAIN_CONTEXT *prgpSelection)
BOOL WINAPI crypt32.CryptProtectData(_In_ DATA_BLOB *pDataIn,_In_opt_ LPCWSTR szDataDescr,_In_opt_ DATA_BLOB *pOptionalEntropy,_Reserved_ PVOID pvReserved,_In_opt_ CRYPTPROTECT_PROMPTSTRUCT *pPromptStruct,_In_ DWORD dwFlags,_Out_ DATA_BLOB *pDataOut)
BOOL WINAPI crypt32.CryptGetOIDFunctionValue(_In_ DWORD dwEncodingType,_In_ LPCSTR pszFuncName,_In_ LPCSTR pszOID,_In_ LPCWSTR pwszValueName,_Out_ DWORD *pdwValueType,_Out_ BYTE *pbValueData,_Inout_ DWORD *pcbValueData)
BOOL WINAPI crypt32.CryptGetOIDFunctionValue(_In_ DWORD dwEncodingType,_In_ LPCSTR pszFuncName,_In_ LPCSTR pszOID,_In_ LPCWSTR pwszValueName,_Out_ DWORD *pdwValueType,_Out_ BYTE *pbValueData,_Inout_ DWORD *pcbValueData)
DWORD WINAPI crypt32.CertNameToStr(_In_ DWORD dwCertEncodingType,_In_ PCERT_NAME_BLOB pName,_In_ DWORD dwStrType,_Out_ LPTSTR psz,_In_ DWORD csz)
DWORD WINAPI crypt32.CertNameToStrW(_In_ DWORD dwCertEncodingType,_In_ PCERT_NAME_BLOB pName,_In_ DWORD dwStrType,_Out_ LPTSTR psz,_In_ DWORD csz)
DWORD WINAPI crypt32.CertNameToStrA(_In_ DWORD dwCertEncodingType,_In_ PCERT_NAME_BLOB pName,_In_ DWORD dwStrType,_Out_ LPTSTR psz,_In_ DWORD csz)
CRYPTCATMEMBER WINAPI wintrust.CryptCATEnumerateMember(_In_ HANDLE hCatalog,_In_ CRYPTCATMEMBER *pPrevMember)
BOOL WINAPI crypt32.CryptMsgVerifyCountersignatureEncoded(_In_ HCRYPTPROV_LEGACY hCryptProv,_In_ DWORD dwEncodingType,_In_ PBYTE pbSignerInfo,_In_ DWORD cbSignerInfo,_In_ PBYTE pbSignerInfoCountersignature,_In_ DWORD cbSignerInfoCountersignature,_In_ PCERT_INFO pciCountersigner)
BOOL WINAPI crypt32.CryptHashPublicKeyInfo(_In_ HCRYPTPROV_LEGACY hCryptProv,_In_ ALG_ID Algid,_In_ DWORD dwFlags,_In_ DWORD dwCertEncodingType,_In_ PCERT_PUBLIC_KEY_INFO pInfo,_Out_ BYTE *pbComputedHash,_Inout_ DWORD *pcbComputedHash)
CRYPTCATMEMBER* WINAPI wintrust.CryptCATPutMemberInfo(_In_ HANDLE hCatalog,_In_opt_ LPWSTR pwszFileName,_In_ LPWSTR pwszReferenceTag,_In_ GUID *pgSubjectType,_In_ DWORD dwCertVersion,_In_ DWORD cbSIPIndirectData,_In_ BYTE *pbSIPIndirectData)
BOOL WINAPI advapi32.CryptGetHashParam(_In_ HCRYPTHASH hHash,_In_ DWORD dwParam,_Out_ BYTE *pbData,_Inout_ DWORD *pdwDataLen,_In_ DWORD dwFlags)
BOOL WINAPI crypt32.CryptProtectMemory(_Inout_ LPVOID pData,_In_ DWORD cbData,_In_ DWORD dwFlags)
LONG WINAPI crypt32.CertVerifyTimeValidity(_In_ LPFILETIME pTimeToVerify,_In_ PCERT_INFO pCertInfo)
BOOL WINAPI crypt32.CryptSIPRemoveSignedDataMsg(_In_ SIP_SUBJECTINFO *pSubjectInfo,_In_ DWORD dwIndex)
CRYPTCATATTRIBUTE* WINAPI wintrust.CryptCATPutAttrInfo(_In_ HANDLE hCatalog,_In_ CRYPTCATMEMBER *pCatMember,_In_ LPWSTR pwszReferenceTag,_In_ DWORD dwAttrTypeAndAction,_In_ DWORD cbData,_In_ BYTE *pbData)
BOOL WINAPI advapi32.CryptEncrypt(_In_ HCRYPTKEY hKey,_In_ HCRYPTHASH hHash,_In_ BOOL Final,_In_ DWORD dwFlags,_Inout_ BYTE *pbData,_Inout_ DWORD *pdwDataLen,_In_ DWORD dwBufLen)
BOOL WINAPI wintrust.WintrustSetRegPolicyFlags(_In_ DWORD dwPolicyFlags)
BOOL WINAPI crypt32.CryptSIPPutSignedDataMsg(_In_ SIP_SUBJECTINFO *pSubjectInfo,_In_ DWORD dwEncodingType,_Out_ DWORD *pdwIndex,_In_ DWORD cbSignedDataMsg,_In_ BYTE *pbSignedDataMsg)
BOOL WINAPI crypt32.CertCompareIntegerBlob(_In_ PCRYPT_INTEGER_BLOB pInt1,_In_ PCRYPT_INTEGER_BLOB pInt2)
BOOL WINAPI advapi32.CryptDecrypt(_In_ HCRYPTKEY hKey,_In_ HCRYPTHASH hHash,_In_ BOOL Final,_In_ DWORD dwFlags,_Inout_ BYTE *pbData,_Inout_ DWORD *pdwDataLen)
LONG WINAPI crypt32.CertVerifyTimeValidity(_In_ LPFILETIME pTimeToVerify,_In_ PCERT_INFO pCertInfo)
BOOL WINAPI crypt32.CertAddCTLContextToStore(_In_ HCERTSTORE hCertStore,_In_ PCCTL_CONTEXT pCtlContext,_In_ DWORD dwAddDisposition,_Out_opt_ PCCTL_CONTEXT *ppStoreContext)
BOOL WINAPI crypt32.CryptMsgVerifyCountersignatureEncoded(_In_ HCRYPTPROV_LEGACY hCryptProv,_In_ DWORD dwEncodingType,_In_ PBYTE pbSignerInfo,_In_ DWORD cbSignerInfo,_In_ PBYTE pbSignerInfoCountersignature,_In_ DWORD cbSignerInfoCountersignature,_In_ PCERT_INFO pciCountersigner)
PCCERT_SERVER_OCSP_RESPONSE_CONTEXT WINAPI crypt32.CertGetServerOcspResponseContext(_In_ HCERT_SERVER_OCSP_RESPONSE hServerOcspResponse,_In_ DWORD dwFlags,_Reserved_ LPVOID pvReserved)
PCCERT_CONTEXT WINAPI crypt32.CertGetIssuerCertificateFromStore(_In_ HCERTSTORE hCertStore,_In_ PCCERT_CONTEXT pSubjectContext,_In_opt_ PCCERT_CONTEXT pPrevIssuerContext,_Inout_ DWORD *pdwFlags)
LONG WINAPI wintrust.WinVerifyTrust(_In_ HWND hWnd,_In_ GUID *pgActionID,_In_ LPVOID pWVTData)
DWORD WINAPI crypt32.CertRDNValueToStr(_In_ DWORD dwValueType,_In_ PCERT_RDN_VALUE_BLOB pValue,_Out_ LPTSTR psz,_In_ DWORD csz)
DWORD WINAPI crypt32.CertRDNValueToStrW(_In_ DWORD dwValueType,_In_ PCERT_RDN_VALUE_BLOB pValue,_Out_ LPTSTR psz,_In_ DWORD csz)
DWORD WINAPI crypt32.CertRDNValueToStrA(_In_ DWORD dwValueType,_In_ PCERT_RDN_VALUE_BLOB pValue,_Out_ LPTSTR psz,_In_ DWORD csz)
BOOL WINAPI advapi32.CryptEnumProviders(_In_ DWORD dwIndex,_In_ DWORD *pdwReserved,_In_ DWORD dwFlags,_Out_ DWORD *pdwProvType,_Out_ LPTSTR pszProvName,_Inout_ DWORD *pcbProvName)
BOOL WINAPI advapi32.CryptEnumProvidersW(_In_ DWORD dwIndex,_In_ DWORD *pdwReserved,_In_ DWORD dwFlags,_Out_ DWORD *pdwProvType,_Out_ LPTSTR pszProvName,_Inout_ DWORD *pcbProvName)
BOOL WINAPI advapi32.CryptEnumProvidersA(_In_ DWORD dwIndex,_In_ DWORD *pdwReserved,_In_ DWORD dwFlags,_Out_ DWORD *pdwProvType,_Out_ LPTSTR pszProvName,_Inout_ DWORD *pcbProvName)
HCRYPTMSG WINAPI crypt32.CryptMsgDuplicate(_In_ HCRYPTMSG hCryptMsg)
BOOL WINAPI wintrust.OpenPersonalTrustDBDialogEx(_In_opt_ HWND hwndParent,_In_ DWORD dwFlags,_Inout_opt_ PVOID *pvReserved)
HRESULT WINAPI mssign32.PvkGetCryptProv(_In_ HWND hwnd,_In_ LPCWSTR pwszCaption,_In_ LPCWSTR pwszCapiProvider,_In_ DWORD dwProviderType,_In_ LPCWSTR pwszPvkFile,_In_ LPCWSTR pwszKeyContainerName,_Out_ DWORD *pdwKeySpec,_Out_opt_ LPWSTR *ppwszTmpContainer,_Out_ HCRYPTPROV *phCryptProv)
BOOL WINAPI None.CertStoreProvDeleteCRLCallback(_In_ HCERTSTOREPROV hStoreProv,_In_ PCCRL_CONTEXT pCrlContext,_In_ DWORD dwFlags)
HCERTSTORE WINAPI crypt32.CertOpenSystemStore(_In_ HCRYPTPROV_LEGACY hprov,_In_ LPTCSTR szSubsystemProtocol)
HCERTSTORE WINAPI crypt32.CertOpenSystemStoreW(_In_ HCRYPTPROV_LEGACY hprov,_In_ LPTCSTR szSubsystemProtocol)
HCERTSTORE WINAPI crypt32.CertOpenSystemStoreA(_In_ HCRYPTPROV_LEGACY hprov,_In_ LPTCSTR szSubsystemProtocol)
BOOL WINAPI crypt32.CertComparePublicKeyInfo(_In_ DWORD dwCertEncodingType,_In_ PCERT_PUBLIC_KEY_INFO pPublicKey1,_In_ PCERT_PUBLIC_KEY_INFO pPublicKey2)
PCCERT_CONTEXT WINAPI crypt32.CertCreateSelfSignCertificate(_In_opt_ HCRYPTPROV_OR_NCRYPT_KEY_HANDLE hCryptProvOrNCryptKey,_In_ PCERT_NAME_BLOB pSubjectIssuerBlob,_In_ DWORD dwFlags,_In_opt_ PCRYPT_KEY_PROV_INFO pKeyProvInfo,_In_opt_ PCRYPT_ALGORITHM_IDENTIFIER pSignatureAlgorithm,_In_opt_ PSYSTEMTIME pStartTime,_In_opt_ PSYSTEMTIME pEndTime,PCERT_EXTENSIONS pExtensions None)
BOOL WINAPI advapi32.CryptGetDefaultProvider(_In_ DWORD dwProvType,_In_ DWORD *pdwReserved,_In_ DWORD dwFlags,_Out_ LPTSTR pszProvName,_Inout_ DWORD *pcbProvName)
BOOL WINAPI advapi32.CryptGetDefaultProviderW(_In_ DWORD dwProvType,_In_ DWORD *pdwReserved,_In_ DWORD dwFlags,_Out_ LPTSTR pszProvName,_Inout_ DWORD *pcbProvName)
BOOL WINAPI advapi32.CryptGetDefaultProviderA(_In_ DWORD dwProvType,_In_ DWORD *pdwReserved,_In_ DWORD dwFlags,_Out_ LPTSTR pszProvName,_Inout_ DWORD *pcbProvName)
BOOL WINAPI advapi32.CryptDuplicateKey(_In_ HCRYPTKEY hKey,_In_ DWORD *pdwReserved,_In_ DWORD dwFlags,_Out_ HCRYPTKEY *phKey)
BOOL WINAPI crypt32.CryptHashPublicKeyInfo(_In_ HCRYPTPROV_LEGACY hCryptProv,_In_ ALG_ID Algid,_In_ DWORD dwFlags,_In_ DWORD dwCertEncodingType,_In_ PCERT_PUBLIC_KEY_INFO pInfo,_Out_ BYTE *pbComputedHash,_Inout_ DWORD *pcbComputedHash)
SECURITY_STATUS WINAPI ncrypt.NCryptExportKey(_In_ NCRYPT_KEY_HANDLE hKey,_In_opt_ NCRYPT_KEY_HANDLE hExportKey,_In_ LPCWSTR pszBlobType,_In_opt_ NCryptBufferDesc *pParameterList,_Out_opt_ PBYTE pbOutput,_In_ DWORD cbOutput,_Out_ DWORD *pcbResult,_In_ DWORD dwFlags)
BOOL WINAPI crypt32.CertGetCertificateChain(_In_opt_ HCERTCHAINENGINE hChainEngine,_In_ PCCERT_CONTEXT pCertContext,_In_opt_ LPFILETIME pTime,_In_ HCERTSTORE hAdditionalStore,_In_ PCERT_CHAIN_PARA pChainPara,_In_ DWORD dwFlags,_In_ LPVOID pvReserved,_Out_ PCCERT_CHAIN_CONTEXT *ppChainContext)
BOOL WINAPI crypt32.CertRemoveEnhancedKeyUsageIdentifier(_In_ PCCERT_CONTEXT pCertContext,_In_ LPCSTR pszUsageIdentifier)
HRESULT WINAPI cryptxml.CryptXmlVerifySignature(_In_ HCRYPTXML hSignature,_In_opt_ BCRYPT_KEY_HANDLE hKey,DWORD dwFlags None)
BOOL WINAPI advapi32.CryptAcquireContext(_Out_ HCRYPTPROV *phProv,_In_ LPCTSTR pszContainer,_In_ LPCTSTR pszProvider,_In_ DWORD dwProvType,_In_ DWORD dwFlags)
BOOL WINAPI advapi32.CryptAcquireContextW(_Out_ HCRYPTPROV *phProv,_In_ LPCTSTR pszContainer,_In_ LPCTSTR pszProvider,_In_ DWORD dwProvType,_In_ DWORD dwFlags)
BOOL WINAPI advapi32.CryptAcquireContextA(_Out_ HCRYPTPROV *phProv,_In_ LPCTSTR pszContainer,_In_ LPCTSTR pszProvider,_In_ DWORD dwProvType,_In_ DWORD dwFlags)
BOOL WINAPI None.CertStoreProvReadCRLCallback(_In_ HCERTSTOREPROV hStoreProv,_In_ PCCRL_CONTEXT pStoreCrlContext,_In_ DWORD dwFlags,_Out_ PCCRL_CONTEXT *ppProvCrlContext)
HRESULT WINAPI cryptxml.CryptXmlClose(_In_ HXML hCryptXml)
BOOL WINAPI crypt32.CertAddCRLLinkToStore(_In_ HCERTSTORE hCertStore,_In_ PCCRL_CONTEXT pCrlContext,_In_ DWORD dwAddDisposition,_Out_opt_ PCCRL_CONTEXT *ppStoreContext)
BOOL WINAPI crypt32.CryptMsgCountersign(_Inout_ HCRYPTMSG hCryptMsg,_In_ DWORD dwIndex,_In_ DWORD cCountersigners,_In_ PCMSG_SIGNER_ENCODE_INFO rgCountersigners)
PCCERT_CONTEXT WINAPI crypt32.CertEnumCertificatesInStore(_In_ HCERTSTORE hCertStore,_In_ PCCERT_CONTEXT pPrevCertContext)
PCCERT_CONTEXT WINAPI crypt32.CertGetSubjectCertificateFromStore(_In_ HCERTSTORE hCertStore,_In_ DWORD dwCertEncodingType,_In_ PCERT_INFO pCertId)
BOOL WINAPI mssign32.GetCryptProvFromCert(_In_ HWND hwnd,_In_ PCCERT_CONTEXT pCert,_Out_ HCRYPTPROV *phCryptProv,_Out_ DWORD *pdwKeySpec,_In_ BOOL *pfDidCryptAcquire,_Out_opt_ LPWSTR *ppwszTmpContainer,_Out_opt_ LPWSTR *ppwszProviderName,_Out_ DWORD *pdwProviderType)
HRESULT WINAPI cryptxml.CryptXmlVerifySignature(_In_ HCRYPTXML hSignature,_In_opt_ BCRYPT_KEY_HANDLE hKey,DWORD dwFlags None)
CRYPT_PROVIDER_CERT* WINAPI wintrust.WTHelperGetProvCertFromChain(_In_ CRYPT_PROVIDER_SGNR *pSgnr,_In_ DWORD idxCert)
CRYPTCATATTRIBUTE* WINAPI wintrust.CryptCATGetAttrInfo(_In_ HANDLE hCatalog,_In_ CRYPTCATMEMBER *pCatMember,_In_ LPWSTR pwszReferenceTag)
CRYPTCATMEMBER WINAPI wintrust.CryptCATEnumerateMember(_In_ HANDLE hCatalog,_In_ CRYPTCATMEMBER *pPrevMember)
LPCWSTR WINAPI crypt32.CryptFindLocalizedName(_In_ LPCWSTR pwszCryptName)
BOOL WINAPI cryptdlg.CertSelectCertificate(_Inout_ PCERT_SELECT_STRUCT_W pCertSelectInfo)
VOID WINAPI crypt32.CertAddRefServerOcspResponseContext(_In_ PCCERT_SERVER_OCSP_RESPONSE_CONTEXT pServerOcspResponseContext)
BOOL WINAPI crypt32.CryptMsgEncodeAndSignCTL(_In_ DWORD dwMsgEncodingType,_In_ PCTL_INFO pCtlInfo,_In_ PCMSG_SIGNED_ENCODE_INFO pSignInfo,_In_ DWORD dwFlags,_Out_ BYTE *pbEncoded,_Inout_ DWORD *pcbEncoded)
BOOL WINAPI advapi32.CryptDestroyHash(_In_ HCRYPTHASH hHash)
BOOL WINAPI crypt32.CryptExportPublicKeyInfo(_In_ HCRYPTPROV_OR_NCRYPT_KEY_HANDLE hCryptProvOrNCryptKey,_In_ DWORD dwKeySpec,_In_ DWORD dwCertEncodingType,_Out_ PCERT_PUBLIC_KEY_INFO pInfo,_Inout_ DWORD *pcbInfo)
BOOL WINAPI None.CertStoreProvWriteCTL(_In_ HCERTSTOREPROV hStoreProv,_In_ PCCTL_CONTEXT pCtlContext,_In_ DWORD dwFlags)
BOOL WINAPI crypt32.CertFreeCTLContext(_In_ PCCTL_CONTEXT pCtlContext)
HCERTSTORE WINAPI crypt32.PFXImportCertStore(_In_ CRYPT_DATA_BLOB *pPFX,_In_ LPCWSTR szPassword,_In_ DWORD dwFlags)
PCCRL_CONTEXT WINAPI crypt32.CertEnumCRLsInStore(_In_ HCERTSTORE hCertStore,_In_ PCCRL_CONTEXT pPrevCrlContext)
VOID WINAPI crypt32.CertFreeCertificateChainList(_In_ PCCERT_CHAIN_CONTEXT *prgpSelection)
BOOL WINAPI crypt32.CryptSIPRetrieveSubjectGuid(_In_ LPCWSTR FileName,_In_opt_ HANDLE hFileIn,_Out_ GUID *pgSubject)
BOOL WINAPI crypt32.CertVerifyCertificateChainPolicy(_In_ LPCSTR pszPolicyOID,_In_ PCCERT_CHAIN_CONTEXT pChainContext,_In_ PCERT_CHAIN_POLICY_PARA pPolicyPara,_Inout_ PCERT_CHAIN_POLICY_STATUS pPolicyStatus)
CRYPTCATCDF* WINAPI wintrust.CryptCATCDFOpen(_In_ LPWSTR pwszFilePath,_In_opt_ PFN_CDF_PARSE_ERROR_CALLBACK pfnParseError)
BOOL WINAPI crypt32.CryptSIPPutSignedDataMsg(_In_ SIP_SUBJECTINFO *pSubjectInfo,_In_ DWORD dwEncodingType,_Out_ DWORD *pdwIndex,_In_ DWORD cbSignedDataMsg,_In_ BYTE *pbSignedDataMsg)
BOOL WINAPI cryptdlg.CertSelectCertificate(_Inout_ PCERT_SELECT_STRUCT_W pCertSelectInfo)
BOOL WINAPI crypt32.CertAddEnhancedKeyUsageIdentifier(_In_ PCCERT_CONTEXT pCertContext,_In_ LPCSTR pszUsageIdentifier)
LPVOID WINAPI crypt32.CryptMemRealloc(_In_ LPVOID pv,_In_ ULONG cbSize)
BOOL WINAPI advapi32.CryptGenKey(_In_ HCRYPTPROV hProv,_In_ ALG_ID Algid,_In_ DWORD dwFlags,_Out_ HCRYPTKEY *phKey)
CRYPT_PROVIDER_CERT* WINAPI wintrust.WTHelperGetProvCertFromChain(_In_ CRYPT_PROVIDER_SGNR *pSgnr,_In_ DWORD idxCert)
HRESULT WINAPI mssign32.PvkGetCryptProv(_In_ HWND hwnd,_In_ LPCWSTR pwszCaption,_In_ LPCWSTR pwszCapiProvider,_In_ DWORD dwProviderType,_In_ LPCWSTR pwszPvkFile,_In_ LPCWSTR pwszKeyContainerName,_Out_ DWORD *pdwKeySpec,_Out_opt_ LPWSTR *ppwszTmpContainer,_Out_ HCRYPTPROV *phCryptProv)
BOOL WINAPI crypt32.CryptProtectMemory(_Inout_ LPVOID pData,_In_ DWORD cbData,_In_ DWORD dwFlags)
CRYPTCATATTRIBUTE* WINAPI wintrust.CryptCATCDFEnumCatAttributes(_In_ CRYPTCATCDF *pCDF,_In_ CRYPTCATATTRIBUTE *pPrevAttr,_In_ PFN_CDF_PARSE_ERROR_CALLBACK pfnParseError)
PCCERT_CONTEXT WINAPI crypt32.CertGetSubjectCertificateFromStore(_In_ HCERTSTORE hCertStore,_In_ DWORD dwCertEncodingType,_In_ PCERT_INFO pCertId)
HRESULT WINAPI mssign32.PvkGetCryptProv(_In_ HWND hwnd,_In_ LPCWSTR pwszCaption,_In_ LPCWSTR pwszCapiProvider,_In_ DWORD dwProviderType,_In_ LPCWSTR pwszPvkFile,_In_ LPCWSTR pwszKeyContainerName,_Out_ DWORD *pdwKeySpec,_Out_opt_ LPWSTR *ppwszTmpContainer,_Out_ HCRYPTPROV *phCryptProv)
BOOL WINAPI crypt32.CertRemoveEnhancedKeyUsageIdentifier(_In_ PCCERT_CONTEXT pCertContext,_In_ LPCSTR pszUsageIdentifier)
BOOL WINAPI None.CertStoreProvWriteCTL(_In_ HCERTSTOREPROV hStoreProv,_In_ PCCTL_CONTEXT pCtlContext,_In_ DWORD dwFlags)
LPWSTR WINAPI wintrust.CryptCATCDFEnumMembersByCDFTagEx(_In_ CRYPTCATCDF *pCDF,_Inout_ LPWSTR pwszPrevCDFTag,_In_ PFN_CDF_PARSE_ERROR_CALLBACK pfnParseError,_In_ CRYPTCATMEMBER **ppMember,_In_ BOOL fContinueOnError,_In_ LPVOID pvReserved)
BOOL WINAPI crypt32.CryptVerifyCertificateSignature(_In_ HCRYPTPROV_LEGACY hCryptProv,_In_ DWORD dwCertEncodingType,_In_ BYTE *pbEncoded,_In_ DWORD cbEncoded,_In_ PCERT_PUBLIC_KEY_INFO pPublicKey)
BOOL WINAPI crypt32.CryptUnregisterOIDInfo(_In_ PCCRYPT_OID_INFO pInfo)
BOOL WINAPI None.CertStoreProvDeleteCertCallback(_In_ HCERTSTOREPROV hStoreProv,_In_ PCCERT_CONTEXT pCertContext,_In_ DWORD dwFlags)
LONG WINAPI wintrust.WTHelperGetFileHash(_In_ LPCWSTR pwszFilename,_In_ DWORD dwFlags,_Inout_opt_ PVOID pvReserved,_Out_opt_ BYTE *pbFileHash,_Inout_opt_ DWORD *pcbFileHash,_Out_opt_ ALG_ID *pHashAlgid)
CRYPTCATCDF* WINAPI wintrust.CryptCATCDFOpen(_In_ LPWSTR pwszFilePath,_In_opt_ PFN_CDF_PARSE_ERROR_CALLBACK pfnParseError)
LPVOID WINAPI crypt32.CryptMemAlloc(_In_ ULONG cbSize)
BOOL WINAPI None.CertStoreProvWriteCertCallback(_In_ HCERTSTOREPROV hStoreProv,_In_ PCCERT_CONTEXT pCertContext,_In_ DWORD dwFlags)
HCRYPTMSG WINAPI crypt32.CryptMsgDuplicate(_In_ HCRYPTMSG hCryptMsg)
BOOL WINAPI crypt32.CertAddCRLLinkToStore(_In_ HCERTSTORE hCertStore,_In_ PCCRL_CONTEXT pCrlContext,_In_ DWORD dwAddDisposition,_Out_opt_ PCCRL_CONTEXT *ppStoreContext)
BOOL WINAPI crypt32.CryptRegisterOIDInfo(_In_ PCCRYPT_OID_INFO pInfo,_In_ DWORD dwFlags)
HRESULT WINAPI cryptxml.CryptXmlDigestReference(_In_ HCRYPTXML hReference,DWORD dwFlags None,_In_ CRYPT_XML_DATA_PROVIDER *pDataProviderIn)
DWORD WINAPI crypt32.CertEnumCRLContextProperties(_In_ PCCRL_CONTEXT pCrlContext,_In_ DWORD dwPropId)
BOOL WINAPI crypt32.CryptSIPRetrieveSubjectGuidForCatalogFile(_In_ LPCWSTR FileName,_In_opt_ HANDLE hFileIn,_Out_ GUID *pgSubject)
BOOL WINAPI advapi32.CryptSetProviderEx(_In_ LPCTSTR pszProvName,_In_ DWORD dwProvType,_In_ DWORD *pdwReserved,_In_ DWORD dwFlags)
BOOL WINAPI advapi32.CryptSetProviderExW(_In_ LPCTSTR pszProvName,_In_ DWORD dwProvType,_In_ DWORD *pdwReserved,_In_ DWORD dwFlags)
BOOL WINAPI advapi32.CryptSetProviderExA(_In_ LPCTSTR pszProvName,_In_ DWORD dwProvType,_In_ DWORD *pdwReserved,_In_ DWORD dwFlags)
BOOL WINAPI crypt32.PFXExportCertStore(_In_ HCERTSTORE hStore,_Inout_ CRYPT_DATA_BLOB *pPFX,_In_ LPCWSTR szPassword,_In_ DWORD dwFlags)
BOOL WINAPI crypt32.CertCreateCertificateChainEngine(_In_ PCERT_CHAIN_ENGINE_CONFIG pConfig,_Out_ HCERTCHAINENGINE *phChainEngine)
DWORD WINAPI crypt32.CertGetPublicKeyLength(_In_ DWORD dwCertEncodingType,_In_ PCERT_PUBLIC_KEY_INFO pPublicKey)
BOOL WINAPI wintrust.CryptCATCDFClose(_In_ CRYPTCATCDF *pCDF)
BOOL WINAPI crypt32.CertAddCRLLinkToStore(_In_ HCERTSTORE hCertStore,_In_ PCCRL_CONTEXT pCrlContext,_In_ DWORD dwAddDisposition,_Out_opt_ PCCRL_CONTEXT *ppStoreContext)
HANDLE WINAPI wintrust.CryptCATHandleFromStore(_In_ CRYPTCATSTORE *pCatStore)
NTSTATUS NTAPI advapi32.LsaSetDomainInformationPolicy(_In_ LSA_HANDLE PolicyHandle,_In_ POLICY_DOMAIN_INFORMATION_CLASS InformationClass,_In_ PVOID Buffer)
NTSTATUS NTAPI None.Msv1_0SubAuthenticationRoutine(_In_ NETLOGON_LOGON_INFO_CLASS LogonLevel,_In_ PVOID LogonInformation,_In_ ULONG Flags,_In_ PUSER_ALL_INFORMATION UserAll,_Out_ PULONG WhichFields,_Out_ PULONG UserFlags,_Out_ PBOOLEAN Authoritative,_Out_ PLARGE_INTEGER LogoffTime,_Out_ PLARGE_INTEGER KickoffTime)
BOOL WINAPI mssign32.GetCryptProvFromCert(_In_ HWND hwnd,_In_ PCCERT_CONTEXT pCert,_Out_ HCRYPTPROV *phCryptProv,_Out_ DWORD *pdwKeySpec,_In_ BOOL *pfDidCryptAcquire,_Out_opt_ LPWSTR *ppwszTmpContainer,_Out_opt_ LPWSTR *ppwszProviderName,_Out_ DWORD *pdwProviderType)
PVOID WINAPI None.AllocatePrivateHeap(_In_ SIZE_T Length)
BOOL WINAPI crypt32.CryptRegisterOIDInfo(_In_ PCCRYPT_OID_INFO pInfo,_In_ DWORD dwFlags)
VOID WINAPI crypt32.CertAddRefServerOcspResponseContext(_In_ PCCERT_SERVER_OCSP_RESPONSE_CONTEXT pServerOcspResponseContext)
LONG WINAPI winscard.SCardRemoveReaderFromGroup(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReaderName,_In_ LPCTSTR szGroupName)
LONG WINAPI winscard.SCardRemoveReaderFromGroupW(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReaderName,_In_ LPCTSTR szGroupName)
LONG WINAPI winscard.SCardRemoveReaderFromGroupA(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReaderName,_In_ LPCTSTR szGroupName)
BOOL WINAPI None.CertStoreProvWriteCRLCallback(_In_ HCERTSTOREPROV hStoreProv,_In_ PCCRL_CONTEXT pCrlContext,_In_ DWORD dwFlags)
SECURITY_STATUS SEC_Entry secur32.EncryptMessage(_In_ PCtxtHandle phContext,_In_ ULONG fQOP,_Inout_ PSecBufferDesc pMessage,_In_ ULONG MessageSeqNo)
BOOL WINAPI crypt32.CryptSIPRetrieveSubjectGuid(_In_ LPCWSTR FileName,_In_opt_ HANDLE hFileIn,_Out_ GUID *pgSubject)
SECURITY_STATUS SEC_Entry secur32.EncryptMessage(_In_ PCtxtHandle phContext,_In_ ULONG fQOP,_Inout_ PSecBufferDesc pMessage,_In_ ULONG MessageSeqNo)
SECURITY_STATUS SEC_Entry secur32.InitializeSecurityContext(_In_opt_ PCredHandle phCredential,_In_opt_ PCtxtHandle phContext,_In_opt_ SEC_CHAR *pszTargetName,_In_ ULONG fContextReq,_In_ ULONG Reserved1,_In_ ULONG TargetDataRep,_In_opt_ PSecBufferDesc pInput,_In_ ULONG Reserved2,_Inout_opt_ PCtxtHandle phNewContext,_Inout_opt_ PSecBufferDesc pOutput,_Out_ PULONG pfContextAttr,_Out_opt_ PTimeStamp ptsExpiry)
SECURITY_STATUS SEC_Entry secur32.InitializeSecurityContextW(_In_opt_ PCredHandle phCredential,_In_opt_ PCtxtHandle phContext,_In_opt_ SEC_CHAR *pszTargetName,_In_ ULONG fContextReq,_In_ ULONG Reserved1,_In_ ULONG TargetDataRep,_In_opt_ PSecBufferDesc pInput,_In_ ULONG Reserved2,_Inout_opt_ PCtxtHandle phNewContext,_Inout_opt_ PSecBufferDesc pOutput,_Out_ PULONG pfContextAttr,_Out_opt_ PTimeStamp ptsExpiry)
SECURITY_STATUS SEC_Entry secur32.InitializeSecurityContextA(_In_opt_ PCredHandle phCredential,_In_opt_ PCtxtHandle phContext,_In_opt_ SEC_CHAR *pszTargetName,_In_ ULONG fContextReq,_In_ ULONG Reserved1,_In_ ULONG TargetDataRep,_In_opt_ PSecBufferDesc pInput,_In_ ULONG Reserved2,_Inout_opt_ PCtxtHandle phNewContext,_Inout_opt_ PSecBufferDesc pOutput,_Out_ PULONG pfContextAttr,_Out_opt_ PTimeStamp ptsExpiry)
SECURITY_STATUS SEC_Entry secur32.EncryptMessage(_In_ PCtxtHandle phContext,_In_ ULONG fQOP,_Inout_ PSecBufferDesc pMessage,_In_ ULONG MessageSeqNo)
BOOL WINAPI crypt32.CryptInstallOIDFunctionAddress(_In_ HMODULE hModule,_In_ DWORD dwEncodingType,_In_ LPCSTR pszFuncName,_In_ DWORD cFuncEntry,_In_ CRYPT_OID_FUNC_ENTRY rgFuncEntry[],_In_ DWORD dwFlags)
SECURITY_STATUS SEC_Entry secur32.FreeCredentialsHandle(_In_ PCredHandle phCredential)
CRYPT_PROVIDER_SGNR* WINAPI wintrust.WTHelperGetProvSignerFromChain(_In_ CRYPT_PROVIDER_DATA *pProvData,_In_ DWORD idxSigner,_In_ BOOL fCounterSigner,_In_ DWORD idxCounterSigner)
LONG WINAPI winscard.SCardIsValidContext(_In_ SCARDCONTEXT hContext)
NTSTATUS NTAPI None.CrediFreeCredentials(_In_ ULONG Count,_Inout_ PENCRYPTED_CREDENTIALW *Credentials)
BOOL WINAPI advapi32.CryptSetProviderEx(_In_ LPCTSTR pszProvName,_In_ DWORD dwProvType,_In_ DWORD *pdwReserved,_In_ DWORD dwFlags)
BOOL WINAPI advapi32.CryptSetProviderExW(_In_ LPCTSTR pszProvName,_In_ DWORD dwProvType,_In_ DWORD *pdwReserved,_In_ DWORD dwFlags)
BOOL WINAPI advapi32.CryptSetProviderExA(_In_ LPCTSTR pszProvName,_In_ DWORD dwProvType,_In_ DWORD *pdwReserved,_In_ DWORD dwFlags)
NTSTATUS NTAPI None.SpLsaModeInitialize(_In_ ULONG LsaVersion,_Out_ PULONG PackageVersion,_Out_ PSECPKG_FUNCTION_TABLE *ppTables,_Out_ PULONG pcTables)
NTSTATUS WINAPI certpoleng.PstAcquirePrivateKey(_In_ PCCERT_CONTEXT pCert)
BOOL WINAPI advapi32.CredIsProtected(_In_ LPTSTR pszProtectedCredentials,_Out_ CRED_PROTECTION_TYPE *pProtectionType)
BOOL WINAPI advapi32.CredIsProtectedW(_In_ LPTSTR pszProtectedCredentials,_Out_ CRED_PROTECTION_TYPE *pProtectionType)
BOOL WINAPI advapi32.CredIsProtectedA(_In_ LPTSTR pszProtectedCredentials,_Out_ CRED_PROTECTION_TYPE *pProtectionType)
LONG WINAPI scarddlg.SCardUIDlgSelectCard(_In_ LPOPENCARDNAME_EX pDlgStruc)
LONG WINAPI scarddlg.SCardUIDlgSelectCardW(_In_ LPOPENCARDNAME_EX pDlgStruc)
LONG WINAPI scarddlg.SCardUIDlgSelectCardA(_In_ LPOPENCARDNAME_EX pDlgStruc)
PVOID WINAPI None.AllocatePrivateHeap(_In_ SIZE_T Length)
LONG WINAPI winscard.SCardForgetCardType(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCardName)
LONG WINAPI winscard.SCardForgetCardTypeW(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCardName)
LONG WINAPI winscard.SCardForgetCardTypeA(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCardName)
BOOL WINAPI crypt32.CertAddEnhancedKeyUsageIdentifier(_In_ PCCERT_CONTEXT pCertContext,_In_ LPCSTR pszUsageIdentifier)
HRESULT WINAPI mssign32.SignerSignEx(_In_ DWORD dwFlags,_In_ SIGNER_SUBJECT_INFO *pSubjectInfo,_In_ SIGNER_CERT *pSignerCert,_In_ SIGNER_SIGNATURE_INFO *pSignatureInfo,_In_opt_ SIGNER_PROVIDER_INFO *pProviderInfo,_In_opt_ LPCWSTR pwszHttpTimeStamp,_In_opt_ PCRYPT_ATTRIBUTES psRequest,_In_opt_ LPVOID pSipData,_Out_ SIGNER_CONTEXT **ppSignerContext)
CRYPTCATATTRIBUTE* WINAPI wintrust.CryptCATCDFEnumCatAttributes(_In_ CRYPTCATCDF *pCDF,_In_ CRYPTCATATTRIBUTE *pPrevAttr,_In_ PFN_CDF_PARSE_ERROR_CALLBACK pfnParseError)
DWORD WINAPI crypt32.CertGetPublicKeyLength(_In_ DWORD dwCertEncodingType,_In_ PCERT_PUBLIC_KEY_INFO pPublicKey)
NTSTATUS WINAPI None.SpValidateTargetInfoFn(_In_opt_ PLSA_CLIENT_REQUEST ClientRequest,_In_ PVOID ProtocolSubmitBuffer,_In_ PVOID ClientBufferBase,_In_ ULONG SubmitBufferLength,_In_ PSECPKG_TARGETINFO TargetInfo)
DWORD WINAPI crypt32.CertEnumCRLContextProperties(_In_ PCCRL_CONTEXT pCrlContext,_In_ DWORD dwPropId)
SECURITY_STATUS SEC_Entry secur32.ImportSecurityContext(_In_ PSECURITY_STRING *pszPackage,_In_ PSecBuffer pPackedContext,_In_opt_ HANDLE pToken,_Out_ PCtxtHandle phContext)
SECURITY_STATUS SEC_Entry secur32.ImportSecurityContextW(_In_ PSECURITY_STRING *pszPackage,_In_ PSecBuffer pPackedContext,_In_opt_ HANDLE pToken,_Out_ PCtxtHandle phContext)
SECURITY_STATUS SEC_Entry secur32.ImportSecurityContextA(_In_ PSECURITY_STRING *pszPackage,_In_ PSecBuffer pPackedContext,_In_opt_ HANDLE pToken,_Out_ PCtxtHandle phContext)
BOOL WINAPI crypt32.CertFreeCTLContext(_In_ PCCTL_CONTEXT pCtlContext)
SECURITY_STATUS SEC_ENTRY secur32.SaslGetContextOption(_In_ PCtxtHandle ContextHandle,_In_ ULONG Option,_Out_ PVOID Value,_Out_ ULONG Size,_Out_opt_ PULONG Needed)
BOOL WINAPI wintrust.CryptCATCDFClose(_In_ CRYPTCATCDF *pCDF)
LONG WINAPI winscard.SCardForgetReaderGroup(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szGroupName)
LONG WINAPI winscard.SCardForgetReaderGroupW(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szGroupName)
LONG WINAPI winscard.SCardForgetReaderGroupA(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szGroupName)
SECURITY_STATUS SEC_Entry secur32.AcceptSecurityContext(_In_opt_ PCredHandle phCredential,_Inout_ PCtxtHandle phContext,_In_opt_ PSecBufferDesc pInput,_In_ ULONG fContextReq,_In_ ULONG TargetDataRep,_Inout_opt_ PCtxtHandle phNewContext,_Inout_opt_ PSecBufferDesc pOutput,_Out_ PULONG pfContextAttr,_Out_opt_ PTimeStamp ptsTimeStamp)
LONG WINAPI winscard.SCardGetCardTypeProviderName(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCardName,_In_ DWORD dwProviderId,_Out_ LPTSTR szProvider,_Inout_ LPDWORD pcchProvider)
LONG WINAPI winscard.SCardGetCardTypeProviderNameW(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCardName,_In_ DWORD dwProviderId,_Out_ LPTSTR szProvider,_Inout_ LPDWORD pcchProvider)
LONG WINAPI winscard.SCardGetCardTypeProviderNameA(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCardName,_In_ DWORD dwProviderId,_Out_ LPTSTR szProvider,_Inout_ LPDWORD pcchProvider)
SECURITY_STATUS SEC_Entry secur32.MakeSignature(_In_ PCtxtHandle phContext,_In_ ULONG fQOP,_Inout_ PSecBufferDesc pMessage,_In_ ULONG MessageSeqNo)
LONG WINAPI winscard.SCardFreeMemory(_In_ SCARDCONTEXT hContext,_In_ LPCVOID pvMem)
BOOL WINAPI mssign32.GetCryptProvFromCert(_In_ HWND hwnd,_In_ PCCERT_CONTEXT pCert,_Out_ HCRYPTPROV *phCryptProv,_Out_ DWORD *pdwKeySpec,_In_ BOOL *pfDidCryptAcquire,_Out_opt_ LPWSTR *ppwszTmpContainer,_Out_opt_ LPWSTR *ppwszProviderName,_Out_ DWORD *pdwProviderType)
DWORD APIENTRY None.NPPasswordChangeNotify(_In_ LPCWSTR lpAuthentInfoType,_In_ LPVOID lpAuthentInfo,_In_ LPCWSTR lpPreviousAuthentInfoType,_In_ LPVOID lpPreviousAuthentInfo,_In_ LPWSTR lpStationName,_In_ LPVOID StationHandle,_In_ DWORD dwChangeInfo)
LONG WINAPI winscard.SCardStatus(_In_ SCARDHANDLE hCard,_Out_ LPTSTR szReaderName,_Inout_opt_ LPDWORD pcchReaderLen,_Out_opt_ LPDWORD pdwState,_Out_opt_ LPDWORD pdwProtocol,_Out_ LPBYTE pbAtr,_Inout_opt_ LPDWORD pcbAtrLen)
LONG WINAPI winscard.SCardStatusW(_In_ SCARDHANDLE hCard,_Out_ LPTSTR szReaderName,_Inout_opt_ LPDWORD pcchReaderLen,_Out_opt_ LPDWORD pdwState,_Out_opt_ LPDWORD pdwProtocol,_Out_ LPBYTE pbAtr,_Inout_opt_ LPDWORD pcbAtrLen)
LONG WINAPI winscard.SCardStatusA(_In_ SCARDHANDLE hCard,_Out_ LPTSTR szReaderName,_Inout_opt_ LPDWORD pcchReaderLen,_Out_opt_ LPDWORD pdwState,_Out_opt_ LPDWORD pdwProtocol,_Out_ LPBYTE pbAtr,_Inout_opt_ LPDWORD pcbAtrLen)
BOOL WINAPI advapi32.CryptGetProvParam(_In_ HCRYPTPROV hProv,_In_ DWORD dwParam,_Out_ BYTE *pbData,_Inout_ DWORD *pdwDataLen,_In_ DWORD dwFlags)
BOOL WINAPI credui.CredUnPackAuthenticationBuffer(_In_ DWORD dwFlags,_In_ PVOID pAuthBuffer,_In_ DWORD cbAuthBuffer,_Out_ LPTSTR pszUserName,_Inout_ DWORD *pcchMaxUserName,_Out_ LPTSTR pszDomainName,_Inout_ DWORD *pcchMaxDomainname,_Out_ LPTSTR pszPassword,_Inout_ DWORD *pcchMaxPassword)
BOOL WINAPI credui.CredUnPackAuthenticationBufferW(_In_ DWORD dwFlags,_In_ PVOID pAuthBuffer,_In_ DWORD cbAuthBuffer,_Out_ LPTSTR pszUserName,_Inout_ DWORD *pcchMaxUserName,_Out_ LPTSTR pszDomainName,_Inout_ DWORD *pcchMaxDomainname,_Out_ LPTSTR pszPassword,_Inout_ DWORD *pcchMaxPassword)
BOOL WINAPI credui.CredUnPackAuthenticationBufferA(_In_ DWORD dwFlags,_In_ PVOID pAuthBuffer,_In_ DWORD cbAuthBuffer,_Out_ LPTSTR pszUserName,_Inout_ DWORD *pcchMaxUserName,_Out_ LPTSTR pszDomainName,_Inout_ DWORD *pcchMaxDomainname,_Out_ LPTSTR pszPassword,_Inout_ DWORD *pcchMaxPassword)
LONG WINAPI winscard.SCardReadCache(_In_ SCARDCONTEXT hContext,_In_ UUID *CardIdentifier,_In_ DWORD FreshnessCounter,_In_ LPTSTR LookupName,_Out_ PBYTE Data,_Out_ DWORD *DataLen)
LONG WINAPI winscard.SCardReadCacheW(_In_ SCARDCONTEXT hContext,_In_ UUID *CardIdentifier,_In_ DWORD FreshnessCounter,_In_ LPTSTR LookupName,_Out_ PBYTE Data,_Out_ DWORD *DataLen)
LONG WINAPI winscard.SCardReadCacheA(_In_ SCARDCONTEXT hContext,_In_ UUID *CardIdentifier,_In_ DWORD FreshnessCounter,_In_ LPTSTR LookupName,_Out_ PBYTE Data,_Out_ DWORD *DataLen)
BOOL WINAPI cryptnet.CryptRetrieveObjectByUrl(_In_ LPCTSTR pszUrl,_In_ LPCSTR pszObjectOid,_In_ DWORD dwRetrievalFlags,_In_ DWORD dwTimeout,_Out_ LPVOID *ppvObject,_In_ HCRYPTASYNC hAsyncRetrieve,_In_opt_ PCRYPT_CREDENTIALS pCredentials,_In_opt_ LPVOID pvVerify,_In_ PCRYPT_RETRIEVE_AUX_INFO pAuxInfo)
BOOL WINAPI cryptnet.CryptRetrieveObjectByUrlW(_In_ LPCTSTR pszUrl,_In_ LPCSTR pszObjectOid,_In_ DWORD dwRetrievalFlags,_In_ DWORD dwTimeout,_Out_ LPVOID *ppvObject,_In_ HCRYPTASYNC hAsyncRetrieve,_In_opt_ PCRYPT_CREDENTIALS pCredentials,_In_opt_ LPVOID pvVerify,_In_ PCRYPT_RETRIEVE_AUX_INFO pAuxInfo)
BOOL WINAPI cryptnet.CryptRetrieveObjectByUrlA(_In_ LPCTSTR pszUrl,_In_ LPCSTR pszObjectOid,_In_ DWORD dwRetrievalFlags,_In_ DWORD dwTimeout,_Out_ LPVOID *ppvObject,_In_ HCRYPTASYNC hAsyncRetrieve,_In_opt_ PCRYPT_CREDENTIALS pCredentials,_In_opt_ LPVOID pvVerify,_In_ PCRYPT_RETRIEVE_AUX_INFO pAuxInfo)
LONG WINAPI winscard.SCardForgetReader(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReaderName)
LONG WINAPI winscard.SCardForgetReaderW(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReaderName)
LONG WINAPI winscard.SCardForgetReaderA(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReaderName)
SECURITY_STATUS SEC_Entry secur32.VerifySignature(_In_ PCtxtHandle phContext,_In_ PSecBufferDesc pMessage,_In_ ULONG MessageSeqNo,_Out_ PULONG pfQOP)
LONG WINAPI winscard.SCardLocateCards(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR mszCards,_Inout_ LPSCARD_READERSTATE rgReaderStates,_In_ DWORD cReaders)
LONG WINAPI winscard.SCardLocateCardsW(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR mszCards,_Inout_ LPSCARD_READERSTATE rgReaderStates,_In_ DWORD cReaders)
LONG WINAPI winscard.SCardLocateCardsA(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR mszCards,_Inout_ LPSCARD_READERSTATE rgReaderStates,_In_ DWORD cReaders)
LONG WINAPI winscard.SCardSetAttrib(_In_ SCARDHANDLE hCard,_In_ DWORD dwAttrId,_In_ LPCBYTE pbAttr,_In_ DWORD cbAttrLen)
NTSTATUS NTAPI advapi32.LsaGetAppliedCAPIDs(_In_opt_ PLSA_UNICODE_STRING SystemName,_Out_ PSID **CAPIDs,_Out_ PULONG CAPIDCount)
PVOID NTAPI None.CreateSharedMemory(_In_ ULONG MaxSize,_In_ ULONG InitialSize)
BOOL WINAPI crypt32.CertAddStoreToCollection(_In_ HCERTSTORE hCollectionStore,_In_opt_ HCERTSTORE hSiblingStore,_In_ DWORD dwUpdateFlag,_In_ DWORD dwPriority)
DWORD APIENTRY None.CancelConnectNotify(_Inout_ LPNOTIFYINFO lpNotifyInfo,_In_ LPNOTIFYCANCEL lpCancelInfo)
NTSTATUS WINAPI None.Msv1_0SubAuthenticationRoutineGeneric(PVOID SubmitBuffer None,ULONG SubmitBufferLength None,_Out_ PULONG ReturnBufferLength,_Out_ PVOID *ReturnBuffer)
NTSTATUS NTAPI secur32.LsaGetLogonSessionData(_In_ PLUID LogonId,_Out_ PSECURITY_LOGON_SESSION_DATA *ppLogonSessionData)
BOOL WINAPI crypt32.CertVerifyCRLRevocation(_In_ DWORD dwCertEncodingType,_In_ PCERT_INFO pCertId,_In_ DWORD cCrlInfo,_In_ PCRL_INFO rgpCrlInfo[])
LONG WINAPI winscard.SCardRemoveReaderFromGroup(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReaderName,_In_ LPCTSTR szGroupName)
LONG WINAPI winscard.SCardRemoveReaderFromGroupW(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReaderName,_In_ LPCTSTR szGroupName)
LONG WINAPI winscard.SCardRemoveReaderFromGroupA(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReaderName,_In_ LPCTSTR szGroupName)
PVOID WINAPI None.AllocatePrivateHeap(_In_ SIZE_T Length)
NTSTATUS NTAPI None.Msv1_0SubAuthenticationFilter(_In_ NETLOGON_LOGON_INFO_CLASS LogonLevel,_In_ PVOID LogonInformation,_In_ ULONG Flags,_In_ PUSER_ALL_INFORMATION UserAll,_Out_ PULONG WhichFields,_Out_ PULONG UserFlags,_Out_ PBOOLEAN Authoritative,_Out_ PLARGE_INTEGER LogoffTime,_Out_ PLARGE_INTEGER KickoffTime)
LONG WINAPI None.SCardGetReaderIcon(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReaderName,_Out_ LPBYTE pbIcon,_Inout_ LPDWORD pcbIcon)
SECURITY_STATUS SEC_Entry secur32.RevertSecurityContext(_In_ PCtxtHandle phContext)
LONG WINAPI None.SCardGetReaderDeviceInstanceId(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReaderName,_Out_opt_ LPTSTR szDeviceInstanceId,_Inout_ LPDWORD cchDeviceInstanceId)
NTSTATUS NTAPI None.SpGetCredUIContextFn(_In_ LSA_SEC_HANDLE ContextHandle,_In_ GUID *CredType,_Out_ PULONG FlatCredUIContextLength,_Out_ PUCHAR *FlatCredUIContext)
LONG WINAPI winscard.SCardAddReaderToGroup(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReaderName,_In_ LPCTSTR szGroupName)
LONG WINAPI winscard.SCardAddReaderToGroupW(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReaderName,_In_ LPCTSTR szGroupName)
LONG WINAPI winscard.SCardAddReaderToGroupA(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReaderName,_In_ LPCTSTR szGroupName)
NTSTATUS NTAPI None.CrediWrite(_In_ PLUID LogonId,_In_ ULONG CredFlags,_In_ PENCRYPTED_CREDENTIALW Credential,_In_ ULONG Flags)
NTSTATUS NTAPI None.SpUpdateCredentialsFn(_In_ LSA_SEC_HANDLE ContextHandle,_In_ GUID *CredType,_In_ ULONG FlatCredUIContextLength,PUCHAR FlatCredUIContext None)
LONG WINAPI winscard.SCardBeginTransaction(_In_ SCARDHANDLE hCard)
LONG WINAPI winscard.SCardCancel(_In_ SCARDCONTEXT hContext)
SECURITY_STATUS SEC_ENTRY secur32.SaslGetProfilePackage(_In_ LPTSTR ProfileName,_Out_ PSecPkgInfo *PackageInfo)
SECURITY_STATUS SEC_ENTRY secur32.SaslGetProfilePackageW(_In_ LPTSTR ProfileName,_Out_ PSecPkgInfo *PackageInfo)
SECURITY_STATUS SEC_ENTRY secur32.SaslGetProfilePackageA(_In_ LPTSTR ProfileName,_Out_ PSecPkgInfo *PackageInfo)
LONG WINAPI winscard.SCardAudit(_In_ SCARDCONTEXT hContext,_In_ DWORD dwEvent)
BOOL WINAPI advapi32.CredProtect(_In_ BOOL fAsSelf,_In_ LPTSTR pszCredentials,_In_ DWORD cchCredentials,_Out_ LPTSTR pszProtectedCredentials,_Inout_ DWORD *pcchMaxChars,_Out_ CRED_PROTECTION_TYPE *ProtectionType)
BOOL WINAPI advapi32.CredProtectW(_In_ BOOL fAsSelf,_In_ LPTSTR pszCredentials,_In_ DWORD cchCredentials,_Out_ LPTSTR pszProtectedCredentials,_Inout_ DWORD *pcchMaxChars,_Out_ CRED_PROTECTION_TYPE *ProtectionType)
BOOL WINAPI advapi32.CredProtectA(_In_ BOOL fAsSelf,_In_ LPTSTR pszCredentials,_In_ DWORD cchCredentials,_Out_ LPTSTR pszProtectedCredentials,_Inout_ DWORD *pcchMaxChars,_Out_ CRED_PROTECTION_TYPE *ProtectionType)
SECURITY_STATUS SEC_Entry secur32.AcquireCredentialsHandle(_In_ SEC_CHAR *pszPrincipal,_In_ SEC_CHAR *pszPackage,_In_ ULONG fCredentialUse,_In_ PLUID pvLogonID,_In_ PVOID pAuthData,_In_ SEC_GET_KEY_FN pGetKeyFn,_In_ PVOID pvGetKeyArgument,_Out_ PCredHandle phCredential,_Out_ PTimeStamp ptsExpiry)
SECURITY_STATUS SEC_Entry secur32.AcquireCredentialsHandleW(_In_ SEC_CHAR *pszPrincipal,_In_ SEC_CHAR *pszPackage,_In_ ULONG fCredentialUse,_In_ PLUID pvLogonID,_In_ PVOID pAuthData,_In_ SEC_GET_KEY_FN pGetKeyFn,_In_ PVOID pvGetKeyArgument,_Out_ PCredHandle phCredential,_Out_ PTimeStamp ptsExpiry)
SECURITY_STATUS SEC_Entry secur32.AcquireCredentialsHandleA(_In_ SEC_CHAR *pszPrincipal,_In_ SEC_CHAR *pszPackage,_In_ ULONG fCredentialUse,_In_ PLUID pvLogonID,_In_ PVOID pAuthData,_In_ SEC_GET_KEY_FN pGetKeyFn,_In_ PVOID pvGetKeyArgument,_Out_ PCredHandle phCredential,_Out_ PTimeStamp ptsExpiry)
BOOL WINAPI None.WlxGetConsoleSwitchCredentials(_In_ PVOID pWlxContext,_Out_ PVOID pInfo)
SECURITY_STATUS SEC_Entry secur32.FreeContextBuffer(_In_ PVOID pvContextBuffer)
DWORD APIENTRY None.AddConnectNotify(_Inout_ LPNOTIFYINFO lpNotifyInfo,_In_ LPNOTIFYADD lpAddInfo)
VOID WINAPI sas.SendSAS(_In_ BOOL AsUser)
SECURITY_STATUS SEC_Entry secur32.ExportSecurityContext(_In_ PCtxtHandle phContext,_In_ Ulong fFlags,_Out_ PSecBuffer pPackedContext,_Out_opt_ HANDLE *pToken)
SECURITY_STATUS SEC_Entry secur32.QuerySecurityPackageInfo(_In_ SEC_CHAR *pszPackageName,_Out_ PSecPkgInfo *ppPackageInfo)
SECURITY_STATUS SEC_Entry secur32.QuerySecurityPackageInfoW(_In_ SEC_CHAR *pszPackageName,_Out_ PSecPkgInfo *ppPackageInfo)
SECURITY_STATUS SEC_Entry secur32.QuerySecurityPackageInfoA(_In_ SEC_CHAR *pszPackageName,_Out_ PSecPkgInfo *ppPackageInfo)
NTSTATUS NTAPI secur32.LsaEnumerateLogonSessions(_Out_ PULONG LogonSessionCount,_Out_ PLUID *LogonSessionList)
LONG WINAPI winscard.SCardTransmit(_In_ SCARDHANDLE hCard,_In_ LPCSCARD_IO_REQUEST pioSendPci,_In_ LPCBYTE pbSendBuffer,_In_ DWORD cbSendLength,_Inout_opt_ LPSCARD_IO_REQUEST pioRecvPci,_Out_ LPBYTE pbRecvBuffer,_Inout_ LPDWORD pcbRecvLength)
NTSTATUS WINAPI certpoleng.PstValidate(_In_opt_ PUNICODE_STRING pTargetName,_In_ BOOL bIsClient,_In_opt_ CERT_USAGE_MATCH *pRequestedIssuancePolicy,_In_opt_ HCERTSTORE *phAdditionalCertStore,_In_ PCCERT_CONTEXT pCert,_Out_opt_ GUID *pProvGUID)
NTSTATUS WINAPI certpoleng.PstMapCertificate(_In_ PCCERT_CONTEXT pCert,_Out_ LSA_TOKEN_INFORMATION_TYPE *pTokenInformationType,_Out_ PVOID *ppTokenInformation)
HRESULT NET_API_FUNCTION netapi32.NetGetAadJoinInformation(_In_opt_ LPCWSTR pcszTenantId,_Out_ PDSREG_JOIN_INFO *ppJoinInfo)
NTSTATUS WINAPI advapi32.CredMarshalTargetInfo(_In_ PCREDENTIAL_TARGET_INFORMATIONW InTargetInfo,_Out_ PUSHORT *Buffer,PULONG BufferSize None)
SECURITY_STATUS SEC_Entry secur32.QueryContextAttributes(_In_ PCtxtHandle phContext,_In_ ULONG ulAttribute,_Out_ PVOID pBuffer)
SECURITY_STATUS SEC_Entry secur32.QueryContextAttributesW(_In_ PCtxtHandle phContext,_In_ ULONG ulAttribute,_Out_ PVOID pBuffer)
SECURITY_STATUS SEC_Entry secur32.QueryContextAttributesA(_In_ PCtxtHandle phContext,_In_ ULONG ulAttribute,_Out_ PVOID pBuffer)
LONG WINAPI winscard.SCardDisconnect(_In_ SCARDHANDLE hCard,_In_ DWORD dwDisposition)
LONG WINAPI winscard.SCardFreeMemory(_In_ SCARDCONTEXT hContext,_In_ LPCVOID pvMem)
SECURITY_STATUS SEC_Entry secur32.ImpersonateSecurityContext(_In_ PCtxtHandle phContext)
BOOL WINAPI crypt32.CertIsRDNAttrsInCertificateName(_In_ DWORD dwCertEncodingType,_In_ DWORD dwFlags,_In_ PCERT_NAME_BLOB pCertName,_In_ PCERT_RDN pRDN)
LONG WINAPI winscard.SCardWriteCache(_In_ SCARDCONTEXT hContext,_In_ UUID *CardIdentifier,_In_ DWORD FreshnessCounter,_In_ LPTSTR LookupName,_In_ PBYTE Data,_In_ DWORD DataLen)
LONG WINAPI winscard.SCardWriteCacheW(_In_ SCARDCONTEXT hContext,_In_ UUID *CardIdentifier,_In_ DWORD FreshnessCounter,_In_ LPTSTR LookupName,_In_ PBYTE Data,_In_ DWORD DataLen)
LONG WINAPI winscard.SCardWriteCacheA(_In_ SCARDCONTEXT hContext,_In_ UUID *CardIdentifier,_In_ DWORD FreshnessCounter,_In_ LPTSTR LookupName,_In_ PBYTE Data,_In_ DWORD DataLen)
SECURITY_STATUS SEC_ENTRY secur32.SaslGetContextOption(_In_ PCtxtHandle ContextHandle,_In_ ULONG Option,_Out_ PVOID Value,_Out_ ULONG Size,_Out_opt_ PULONG Needed)
LONG WINAPI winscard.SCardSetAttrib(_In_ SCARDHANDLE hCard,_In_ DWORD dwAttrId,_In_ LPCBYTE pbAttr,_In_ DWORD cbAttrLen)
LONG WINAPI None.SCardGetReaderIcon(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReaderName,_Out_ LPBYTE pbIcon,_Inout_ LPDWORD pcbIcon)
SECURITY_STATUS SEC_ENTRY secur32.SaslEnumerateProfiles(_Out_ LPTSTR *ProfileList,_Out_ ULONG *ProfileCount)
SECURITY_STATUS SEC_ENTRY secur32.SaslEnumerateProfilesW(_Out_ LPTSTR *ProfileList,_Out_ ULONG *ProfileCount)
SECURITY_STATUS SEC_ENTRY secur32.SaslEnumerateProfilesA(_Out_ LPTSTR *ProfileList,_Out_ ULONG *ProfileCount)
DWORD WINAPI credui.CredUIPromptForWindowsCredentials(_In_opt_ PCREDUI_INFO pUiInfo,_In_ DWORD dwAuthError,_Inout_ ULONG *pulAuthPackage,_In_opt_ LPCVOID pvInAuthBuffer,_In_ ULONG ulInAuthBufferSize,_Out_ LPVOID *ppvOutAuthBuffer,_Out_ ULONG *pulOutAuthBufferSize,_Inout_opt_ BOOL *pfSave,_In_ DWORD dwFlags)
DWORD WINAPI credui.CredUIPromptForWindowsCredentialsW(_In_opt_ PCREDUI_INFO pUiInfo,_In_ DWORD dwAuthError,_Inout_ ULONG *pulAuthPackage,_In_opt_ LPCVOID pvInAuthBuffer,_In_ ULONG ulInAuthBufferSize,_Out_ LPVOID *ppvOutAuthBuffer,_Out_ ULONG *pulOutAuthBufferSize,_Inout_opt_ BOOL *pfSave,_In_ DWORD dwFlags)
DWORD WINAPI credui.CredUIPromptForWindowsCredentialsA(_In_opt_ PCREDUI_INFO pUiInfo,_In_ DWORD dwAuthError,_Inout_ ULONG *pulAuthPackage,_In_opt_ LPCVOID pvInAuthBuffer,_In_ ULONG ulInAuthBufferSize,_Out_ LPVOID *ppvOutAuthBuffer,_Out_ ULONG *pulOutAuthBufferSize,_Inout_opt_ BOOL *pfSave,_In_ DWORD dwFlags)
SECURITY_STATUS SEC_Entry secur32.InitializeSecurityContext(_In_opt_ PCredHandle phCredential,_In_opt_ PCtxtHandle phContext,_In_opt_ SEC_CHAR *pszTargetName,_In_ ULONG fContextReq,_In_ ULONG Reserved1,_In_ ULONG TargetDataRep,_In_opt_ PSecBufferDesc pInput,_In_ ULONG Reserved2,_Inout_opt_ PCtxtHandle phNewContext,_Inout_opt_ PSecBufferDesc pOutput,_Out_ PULONG pfContextAttr,_Out_opt_ PTimeStamp ptsExpiry)
SECURITY_STATUS SEC_Entry secur32.InitializeSecurityContextW(_In_opt_ PCredHandle phCredential,_In_opt_ PCtxtHandle phContext,_In_opt_ SEC_CHAR *pszTargetName,_In_ ULONG fContextReq,_In_ ULONG Reserved1,_In_ ULONG TargetDataRep,_In_opt_ PSecBufferDesc pInput,_In_ ULONG Reserved2,_Inout_opt_ PCtxtHandle phNewContext,_Inout_opt_ PSecBufferDesc pOutput,_Out_ PULONG pfContextAttr,_Out_opt_ PTimeStamp ptsExpiry)
SECURITY_STATUS SEC_Entry secur32.InitializeSecurityContextA(_In_opt_ PCredHandle phCredential,_In_opt_ PCtxtHandle phContext,_In_opt_ SEC_CHAR *pszTargetName,_In_ ULONG fContextReq,_In_ ULONG Reserved1,_In_ ULONG TargetDataRep,_In_opt_ PSecBufferDesc pInput,_In_ ULONG Reserved2,_Inout_opt_ PCtxtHandle phNewContext,_Inout_opt_ PSecBufferDesc pOutput,_Out_ PULONG pfContextAttr,_Out_opt_ PTimeStamp ptsExpiry)
BOOL WINAPI crypt32.CryptVerifyCertificateSignature(_In_ HCRYPTPROV_LEGACY hCryptProv,_In_ DWORD dwCertEncodingType,_In_ BYTE *pbEncoded,_In_ DWORD cbEncoded,_In_ PCERT_PUBLIC_KEY_INFO pPublicKey)
LONG WINAPI winscard.SCardIntroduceReader(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReaderName,_In_ LPCTSTR szDeviceName)
LONG WINAPI winscard.SCardIntroduceReaderW(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReaderName,_In_ LPCTSTR szDeviceName)
LONG WINAPI winscard.SCardIntroduceReaderA(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReaderName,_In_ LPCTSTR szDeviceName)
SECURITY_STATUS SEC_Entry sspicli.EnumerateSecurityPackages(_In_ PULONG pcPackages,_In_ PSecPkgInfo *ppPackageInfo)
SECURITY_STATUS SEC_Entry sspicli.EnumerateSecurityPackagesW(_In_ PULONG pcPackages,_In_ PSecPkgInfo *ppPackageInfo)
SECURITY_STATUS SEC_Entry sspicli.EnumerateSecurityPackagesA(_In_ PULONG pcPackages,_In_ PSecPkgInfo *ppPackageInfo)
SECURITY_STATUS SEC_Entry secur32.VerifySignature(_In_ PCtxtHandle phContext,_In_ PSecBufferDesc pMessage,_In_ ULONG MessageSeqNo,_Out_ PULONG pfQOP)
LONG WINAPI winscard.SCardConnect(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReader,_In_ DWORD dwShareMode,_In_ DWORD dwPreferredProtocols,_Out_ LPSCARDHANDLE phCard,_Out_ LPDWORD pdwActiveProtocol)
LONG WINAPI winscard.SCardConnectW(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReader,_In_ DWORD dwShareMode,_In_ DWORD dwPreferredProtocols,_Out_ LPSCARDHANDLE phCard,_Out_ LPDWORD pdwActiveProtocol)
LONG WINAPI winscard.SCardConnectA(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReader,_In_ DWORD dwShareMode,_In_ DWORD dwPreferredProtocols,_Out_ LPSCARDHANDLE phCard,_Out_ LPDWORD pdwActiveProtocol)
LONG WINAPI winscard.SCardGetProviderId(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCard,_Out_ LPGUID pguidProviderId)
LONG WINAPI winscard.SCardGetProviderIdW(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCard,_Out_ LPGUID pguidProviderId)
LONG WINAPI winscard.SCardGetProviderIdA(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCard,_Out_ LPGUID pguidProviderId)
NTSTATUS WINAPI certpoleng.PstGetTrustAnchors(_In_ PUNICODE_STRING pTargetName,_In_ DWORD cCriteria,_In_opt_ PCCERT_SELECT_CRITERIA rgpCriteria,_Out_ PSecPkgContext_IssuerListInfoEx *ppTrustedIssuers)
NTSTATUS NTAPI None.ExpandAuthDataForDomain(_In_ PUCHAR UserAuthData,_In_ ULONG UserAuthDataSize,_In_ PVOID Reserved,_Out_ PUCHAR *ExpandedAuthData,_Out_ PULONG ExpandedAuthDataSize)
BOOL WINAPI cryptnet.CryptRetrieveObjectByUrl(_In_ LPCTSTR pszUrl,_In_ LPCSTR pszObjectOid,_In_ DWORD dwRetrievalFlags,_In_ DWORD dwTimeout,_Out_ LPVOID *ppvObject,_In_ HCRYPTASYNC hAsyncRetrieve,_In_opt_ PCRYPT_CREDENTIALS pCredentials,_In_opt_ LPVOID pvVerify,_In_ PCRYPT_RETRIEVE_AUX_INFO pAuxInfo)
BOOL WINAPI cryptnet.CryptRetrieveObjectByUrlW(_In_ LPCTSTR pszUrl,_In_ LPCSTR pszObjectOid,_In_ DWORD dwRetrievalFlags,_In_ DWORD dwTimeout,_Out_ LPVOID *ppvObject,_In_ HCRYPTASYNC hAsyncRetrieve,_In_opt_ PCRYPT_CREDENTIALS pCredentials,_In_opt_ LPVOID pvVerify,_In_ PCRYPT_RETRIEVE_AUX_INFO pAuxInfo)
BOOL WINAPI cryptnet.CryptRetrieveObjectByUrlA(_In_ LPCTSTR pszUrl,_In_ LPCSTR pszObjectOid,_In_ DWORD dwRetrievalFlags,_In_ DWORD dwTimeout,_Out_ LPVOID *ppvObject,_In_ HCRYPTASYNC hAsyncRetrieve,_In_opt_ PCRYPT_CREDENTIALS pCredentials,_In_opt_ LPVOID pvVerify,_In_ PCRYPT_RETRIEVE_AUX_INFO pAuxInfo)
LONG WINAPI winscard.SCardListReaderGroups(_In_ SCARDCONTEXT hContext,_Out_ LPTSTR mszGroups,_Inout_ LPDWORD pcchGroups)
LONG WINAPI winscard.SCardListReaderGroupsW(_In_ SCARDCONTEXT hContext,_Out_ LPTSTR mszGroups,_Inout_ LPDWORD pcchGroups)
LONG WINAPI winscard.SCardListReaderGroupsA(_In_ SCARDCONTEXT hContext,_Out_ LPTSTR mszGroups,_Inout_ LPDWORD pcchGroups)
LONG WINAPI winscard.SCardGetStatusChange(_In_ SCARDCONTEXT hContext,_In_ DWORD dwTimeout,_Inout_ LPSCARD_READERSTATE rgReaderStates,_In_ DWORD cReaders)
LONG WINAPI winscard.SCardGetStatusChangeW(_In_ SCARDCONTEXT hContext,_In_ DWORD dwTimeout,_Inout_ LPSCARD_READERSTATE rgReaderStates,_In_ DWORD cReaders)
LONG WINAPI winscard.SCardGetStatusChangeA(_In_ SCARDCONTEXT hContext,_In_ DWORD dwTimeout,_Inout_ LPSCARD_READERSTATE rgReaderStates,_In_ DWORD cReaders)
LONG WINAPI winscard.SCardSetCardTypeProviderName(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCardName,_In_ DWORD dwProviderId,_In_ LPCTSTR szProvider)
LONG WINAPI winscard.SCardSetCardTypeProviderNameW(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCardName,_In_ DWORD dwProviderId,_In_ LPCTSTR szProvider)
LONG WINAPI winscard.SCardSetCardTypeProviderNameA(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCardName,_In_ DWORD dwProviderId,_In_ LPCTSTR szProvider)
NTSTATUS WINAPI None.Msv1_0SubAuthenticationRoutineEx(_In_ NETLOGON_LOGON_INFO_CLASS LogonLevel,_In_ PVOID LogonInformation,_In_ ULONG Flags,_In_ PUSER_ALL_INFORMATION UserAll,_In_ SAM_HANDLE UserHandle,_Inout_ PMSV1_0_VALIDATION_INFO ValidationInfo,_Out_ PULONG ActionsPerformed)
LONG WINAPI winscard.SCardListInterfaces(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCard,_Out_ LPGUID pguidInterfaces,_Inout_ LPDWORD pcguidInterfaces)
LONG WINAPI winscard.SCardListInterfacesW(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCard,_Out_ LPGUID pguidInterfaces,_Inout_ LPDWORD pcguidInterfaces)
LONG WINAPI winscard.SCardListInterfacesA(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCard,_Out_ LPGUID pguidInterfaces,_Inout_ LPDWORD pcguidInterfaces)
SECURITY_STATUS WINAPI schannel.SslGetServerIdentity(_In_ PBYTE ClientHello,_In_ DWORD ClientHelloSize,_Out_ PBYTE *ServerIdentity,_Out_ PDWORD ServerIdentitySize,_In_ DWORD Flags)
BOOL WINAPI mssign32.PvkPrivateKeySave(_In_ HCRYPTPROV hCryptProv,_In_ HANDLE hFile,_In_ DWORD dwKeySpec,_In_ HWND hwndOwner,_In_ LPCWSTR pwszKeyName,_In_ DWORD dwFlags)
NTSTATUS NTAPI advapi32.LsaQueryForestTrustInformation(_In_ LSA_HANDLE PolicyHandle,_In_ PLSA_UNICODE_STRING TrustedDomainName,_Out_ PLSA_FOREST_TRUST_INFORMATION *ForestTrustInfo)
HRESULT NET_API_FUNCTION netapi32.NetGetAadJoinInformation(_In_opt_ LPCWSTR pcszTenantId,_Out_ PDSREG_JOIN_INFO *ppJoinInfo)
DWORD APIENTRY None.NPLogonNotify(_In_ PLUID lpLogon,_In_ LPCWSTR lpAuthentInfoType,_In_ LPVOID lpAuthentInfo,_In_ LPCWSTR lpPreviousAuthentInfoType,_In_ LPVOID lpPreviousAuthentInfo,_In_ LPWSTR lpStationName,_In_ LPVOID StationHandle,_Out_ LPWSTR *lpLogonScript)
BOOL WINAPI credui.CredUnPackAuthenticationBuffer(_In_ DWORD dwFlags,_In_ PVOID pAuthBuffer,_In_ DWORD cbAuthBuffer,_Out_ LPTSTR pszUserName,_Inout_ DWORD *pcchMaxUserName,_Out_ LPTSTR pszDomainName,_Inout_ DWORD *pcchMaxDomainname,_Out_ LPTSTR pszPassword,_Inout_ DWORD *pcchMaxPassword)
BOOL WINAPI credui.CredUnPackAuthenticationBufferW(_In_ DWORD dwFlags,_In_ PVOID pAuthBuffer,_In_ DWORD cbAuthBuffer,_Out_ LPTSTR pszUserName,_Inout_ DWORD *pcchMaxUserName,_Out_ LPTSTR pszDomainName,_Inout_ DWORD *pcchMaxDomainname,_Out_ LPTSTR pszPassword,_Inout_ DWORD *pcchMaxPassword)
BOOL WINAPI credui.CredUnPackAuthenticationBufferA(_In_ DWORD dwFlags,_In_ PVOID pAuthBuffer,_In_ DWORD cbAuthBuffer,_Out_ LPTSTR pszUserName,_Inout_ DWORD *pcchMaxUserName,_Out_ LPTSTR pszDomainName,_Inout_ DWORD *pcchMaxDomainname,_Out_ LPTSTR pszPassword,_Inout_ DWORD *pcchMaxPassword)
BOOL WINAPI crypt32.CertAddStoreToCollection(_In_ HCERTSTORE hCollectionStore,_In_opt_ HCERTSTORE hSiblingStore,_In_ DWORD dwUpdateFlag,_In_ DWORD dwPriority)
SECURITY_STATUS SEC_Entry secur32.EncryptMessage(_In_ PCtxtHandle phContext,_In_ ULONG fQOP,_Inout_ PSecBufferDesc pMessage,_In_ ULONG MessageSeqNo)
LONG WINAPI winscard.SCardIntroduceReader(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReaderName,_In_ LPCTSTR szDeviceName)
LONG WINAPI winscard.SCardIntroduceReaderW(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReaderName,_In_ LPCTSTR szDeviceName)
LONG WINAPI winscard.SCardIntroduceReaderA(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReaderName,_In_ LPCTSTR szDeviceName)
NTSTATUS NTAPI None.SpGetCredUIContextFn(_In_ LSA_SEC_HANDLE ContextHandle,_In_ GUID *CredType,_Out_ PULONG FlatCredUIContextLength,_Out_ PUCHAR *FlatCredUIContext)
LONG WINAPI winscard.SCardFreeMemory(_In_ SCARDCONTEXT hContext,_In_ LPCVOID pvMem)
LONG WINAPI winscard.SCardSetAttrib(_In_ SCARDHANDLE hCard,_In_ DWORD dwAttrId,_In_ LPCBYTE pbAttr,_In_ DWORD cbAttrLen)
LONG WINAPI None.SCardGetReaderIcon(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReaderName,_Out_ LPBYTE pbIcon,_Inout_ LPDWORD pcbIcon)
LONG WINAPI winscard.SCardFreeMemory(_In_ SCARDCONTEXT hContext,_In_ LPCVOID pvMem)
BOOL WINAPI mssign32.GetCryptProvFromCert(_In_ HWND hwnd,_In_ PCCERT_CONTEXT pCert,_Out_ HCRYPTPROV *phCryptProv,_Out_ DWORD *pdwKeySpec,_In_ BOOL *pfDidCryptAcquire,_Out_opt_ LPWSTR *ppwszTmpContainer,_Out_opt_ LPWSTR *ppwszProviderName,_Out_ DWORD *pdwProviderType)
BOOL WINAPI crypt32.CryptVerifyCertificateSignature(_In_ HCRYPTPROV_LEGACY hCryptProv,_In_ DWORD dwCertEncodingType,_In_ BYTE *pbEncoded,_In_ DWORD cbEncoded,_In_ PCERT_PUBLIC_KEY_INFO pPublicKey)
NTSTATUS WINAPI certpoleng.PstMapCertificate(_In_ PCCERT_CONTEXT pCert,_Out_ LSA_TOKEN_INFORMATION_TYPE *pTokenInformationType,_Out_ PVOID *ppTokenInformation)
SECURITY_STATUS SEC_Entry secur32.ExportSecurityContext(_In_ PCtxtHandle phContext,_In_ Ulong fFlags,_Out_ PSecBuffer pPackedContext,_Out_opt_ HANDLE *pToken)
DWORD WINAPI credui.CredUIPromptForWindowsCredentials(_In_opt_ PCREDUI_INFO pUiInfo,_In_ DWORD dwAuthError,_Inout_ ULONG *pulAuthPackage,_In_opt_ LPCVOID pvInAuthBuffer,_In_ ULONG ulInAuthBufferSize,_Out_ LPVOID *ppvOutAuthBuffer,_Out_ ULONG *pulOutAuthBufferSize,_Inout_opt_ BOOL *pfSave,_In_ DWORD dwFlags)
DWORD WINAPI credui.CredUIPromptForWindowsCredentialsW(_In_opt_ PCREDUI_INFO pUiInfo,_In_ DWORD dwAuthError,_Inout_ ULONG *pulAuthPackage,_In_opt_ LPCVOID pvInAuthBuffer,_In_ ULONG ulInAuthBufferSize,_Out_ LPVOID *ppvOutAuthBuffer,_Out_ ULONG *pulOutAuthBufferSize,_Inout_opt_ BOOL *pfSave,_In_ DWORD dwFlags)
DWORD WINAPI credui.CredUIPromptForWindowsCredentialsA(_In_opt_ PCREDUI_INFO pUiInfo,_In_ DWORD dwAuthError,_Inout_ ULONG *pulAuthPackage,_In_opt_ LPCVOID pvInAuthBuffer,_In_ ULONG ulInAuthBufferSize,_Out_ LPVOID *ppvOutAuthBuffer,_Out_ ULONG *pulOutAuthBufferSize,_Inout_opt_ BOOL *pfSave,_In_ DWORD dwFlags)
DWORD WINAPI credui.CredUIParseUserName(_In_ PCTSTR pszUserName,_Out_ PTSTR pszUser,_In_ ULONG ulUserMaxChars,_Out_ PTSTR pszDomain,_In_ ULONG ulDomainMaxChars)
DWORD WINAPI credui.CredUIParseUserNameW(_In_ PCTSTR pszUserName,_Out_ PTSTR pszUser,_In_ ULONG ulUserMaxChars,_Out_ PTSTR pszDomain,_In_ ULONG ulDomainMaxChars)
DWORD WINAPI credui.CredUIParseUserNameA(_In_ PCTSTR pszUserName,_Out_ PTSTR pszUser,_In_ ULONG ulUserMaxChars,_Out_ PTSTR pszDomain,_In_ ULONG ulDomainMaxChars)
BOOL WINAPI crypt32.CertFreeCTLContext(_In_ PCCTL_CONTEXT pCtlContext)
LONG WINAPI winscard.SCardDisconnect(_In_ SCARDHANDLE hCard,_In_ DWORD dwDisposition)
LONG WINAPI winscard.SCardEstablishContext(_In_ DWORD dwScope,_In_ LPCVOID pvReserved1,_In_ LPCVOID pvReserved2,_Out_ LPSCARDCONTEXT phContext)
LONG WINAPI winscard.SCardEstablishContext(_In_ DWORD dwScope,_In_ LPCVOID pvReserved1,_In_ LPCVOID pvReserved2,_Out_ LPSCARDCONTEXT phContext)
BOOL WINAPI advapi32.SaferRecordEventLogEntry(_In_ SAFER_LEVEL_HANDLE hLevel,_In_ LPCWSTR szTargetPath,_Reserved_ LPVOID lpReserved)
SECURITY_STATUS SEC_Entry secur32.CompleteAuthToken(_In_ PCtxtHandle phContext,_In_ PSecBufferDesc pToken)
NTSTATUS WINAPI certpoleng.PstGetTrustAnchors(_In_ PUNICODE_STRING pTargetName,_In_ DWORD cCriteria,_In_opt_ PCCERT_SELECT_CRITERIA rgpCriteria,_Out_ PSecPkgContext_IssuerListInfoEx *ppTrustedIssuers)
LONG WINAPI winscard.SCardListReaders(_In_ SCARDCONTEXT hContext,_In_opt_ LPCTSTR mszGroups,_Out_ LPTSTR mszReaders,_Inout_ LPDWORD pcchReaders)
LONG WINAPI winscard.SCardListReadersW(_In_ SCARDCONTEXT hContext,_In_opt_ LPCTSTR mszGroups,_Out_ LPTSTR mszReaders,_Inout_ LPDWORD pcchReaders)
LONG WINAPI winscard.SCardListReadersA(_In_ SCARDCONTEXT hContext,_In_opt_ LPCTSTR mszGroups,_Out_ LPTSTR mszReaders,_Inout_ LPDWORD pcchReaders)
BOOL WINAPI advapi32.CryptCreateHash(_In_ HCRYPTPROV hProv,_In_ ALG_ID Algid,_In_ HCRYPTKEY hKey,_In_ DWORD dwFlags,_Out_ HCRYPTHASH *phHash)
LONG WINAPI winscard.SCardEndTransaction(_In_ SCARDHANDLE hCard,_In_ DWORD dwDisposition)
SECURITY_STATUS SEC_Entry secur32.QuerySecurityContextToken(_In_ PCtxtHandle phContext,_Out_ HANDLE *phToken)
NTSTATUS NTAPI None.OpenTokenByLogonId(_In_ PLUID LogonId,_Out_ HANDLE *RetTokenHandle)
BOOL WINAPI advapi32.LogonUserExExW(_In_ LPTSTR lpszUsername,_In_opt_ LPTSTR lpszDomain,_In_opt_ LPTSTR lpszPassword,_In_ DWORD dwLogonType,_In_ DWORD dwLogonProvider,_In_opt_ PTOKEN_GROUPS pTokenGroups,_Out_opt_ PHANDLE phToken,_Out_opt_ PSID *ppLogonSid,_Out_opt_ PVOID *ppProfileBuffer,_Out_opt_ LPDWORD pdwProfileLength,_Out_opt_ PQUOTA_LIMITS pQuotaLimits)
NTSTATUS NTAPI None.CrediRead(_In_ PLUID LogonId,_In_ ULONG CredFlags,_In_ LPWSTR TargetName,_In_ ULONG Type,_In_ ULONG Flags,_Out_ PENCRYPTED_CREDENTIALW *Credential)
BOOL WINAPI crypt32.CryptVerifyCertificateSignature(_In_ HCRYPTPROV_LEGACY hCryptProv,_In_ DWORD dwCertEncodingType,_In_ BYTE *pbEncoded,_In_ DWORD cbEncoded,_In_ PCERT_PUBLIC_KEY_INFO pPublicKey)
BOOL WINAPI winhttp.WinHttpSendRequest(_In_ HINTERNET hRequest,_In_opt_ LPCWSTR pwszHeaders,_In_ DWORD dwHeadersLength,_In_opt_ LPVOID lpOptional,_In_ DWORD dwOptionalLength,_In_ DWORD dwTotalLength,_In_ DWORD_PTR dwContext)
DWORD WINAPI credui.CredUICmdLinePromptForCredentials(_In_ PCTSTR pszTargetName,_In_ PCtxtHandle Reserved,_In_opt_ DWORD dwAuthError,_Inout_ PTSTR pszUserName,_In_ ULONG ulUserNameMaxChars,_Inout_ PTSTR pszPassword,_In_ ULONG ulPasswordMaxChars,_Inout_ PBOOL pfSave,_In_ DWORD dwFlags)
DWORD WINAPI credui.CredUICmdLinePromptForCredentialsW(_In_ PCTSTR pszTargetName,_In_ PCtxtHandle Reserved,_In_opt_ DWORD dwAuthError,_Inout_ PTSTR pszUserName,_In_ ULONG ulUserNameMaxChars,_Inout_ PTSTR pszPassword,_In_ ULONG ulPasswordMaxChars,_Inout_ PBOOL pfSave,_In_ DWORD dwFlags)
DWORD WINAPI credui.CredUICmdLinePromptForCredentialsA(_In_ PCTSTR pszTargetName,_In_ PCtxtHandle Reserved,_In_opt_ DWORD dwAuthError,_Inout_ PTSTR pszUserName,_In_ ULONG ulUserNameMaxChars,_Inout_ PTSTR pszPassword,_In_ ULONG ulPasswordMaxChars,_Inout_ PBOOL pfSave,_In_ DWORD dwFlags)
NTSTATUS NTAPI None.SpQueryMetaDataFn(_In_ LSA_SEC_HANDLE CredentialHandle,_In_opt_ PUNICODE_STRING TargetName,_In_ ULONG ContextRequirements,_Out_ ULONG MetaDataLength,_Out_ PUCHAR MetaData,_Inout_ PLSA_SEC_HANDLE ContextHandle)
BOOL WINAPI crypt32.CryptVerifyCertificateSignature(_In_ HCRYPTPROV_LEGACY hCryptProv,_In_ DWORD dwCertEncodingType,_In_ BYTE *pbEncoded,_In_ DWORD cbEncoded,_In_ PCERT_PUBLIC_KEY_INFO pPublicKey)
LONG WINAPI winscard.SCardGetAttrib(_In_ SCARDHANDLE hCard,_In_ DWORD dwAttrId,_Out_ LPBYTE pbAttr,_Inout_ LPDWORD pcbAttrLen)
LONG WINAPI winscard.SCardControl(_In_ SCARDHANDLE hCard,_In_ DWORD dwControlCode,_In_ LPCVOID lpInBuffer,_In_ DWORD nInBufferSize,_Out_ LPVOID lpOutBuffer,_In_ DWORD nOutBufferSize,_Out_ LPDWORD lpBytesReturned)
SECURITY_STATUS SEC_Entry secur32.AcquireCredentialsHandle(_In_ SEC_CHAR *pszPrincipal,_In_ SEC_CHAR *pszPackage,_In_ ULONG fCredentialUse,_In_ PLUID pvLogonID,_In_ PVOID pAuthData,_In_ SEC_GET_KEY_FN pGetKeyFn,_In_ PVOID pvGetKeyArgument,_Out_ PCredHandle phCredential,_Out_ PTimeStamp ptsExpiry)
SECURITY_STATUS SEC_Entry secur32.AcquireCredentialsHandleW(_In_ SEC_CHAR *pszPrincipal,_In_ SEC_CHAR *pszPackage,_In_ ULONG fCredentialUse,_In_ PLUID pvLogonID,_In_ PVOID pAuthData,_In_ SEC_GET_KEY_FN pGetKeyFn,_In_ PVOID pvGetKeyArgument,_Out_ PCredHandle phCredential,_Out_ PTimeStamp ptsExpiry)
SECURITY_STATUS SEC_Entry secur32.AcquireCredentialsHandleA(_In_ SEC_CHAR *pszPrincipal,_In_ SEC_CHAR *pszPackage,_In_ ULONG fCredentialUse,_In_ PLUID pvLogonID,_In_ PVOID pAuthData,_In_ SEC_GET_KEY_FN pGetKeyFn,_In_ PVOID pvGetKeyArgument,_Out_ PCredHandle phCredential,_Out_ PTimeStamp ptsExpiry)
BOOL WINAPI advapi32.CredProtect(_In_ BOOL fAsSelf,_In_ LPTSTR pszCredentials,_In_ DWORD cchCredentials,_Out_ LPTSTR pszProtectedCredentials,_Inout_ DWORD *pcchMaxChars,_Out_ CRED_PROTECTION_TYPE *ProtectionType)
BOOL WINAPI advapi32.CredProtectW(_In_ BOOL fAsSelf,_In_ LPTSTR pszCredentials,_In_ DWORD cchCredentials,_Out_ LPTSTR pszProtectedCredentials,_Inout_ DWORD *pcchMaxChars,_Out_ CRED_PROTECTION_TYPE *ProtectionType)
BOOL WINAPI advapi32.CredProtectA(_In_ BOOL fAsSelf,_In_ LPTSTR pszCredentials,_In_ DWORD cchCredentials,_Out_ LPTSTR pszProtectedCredentials,_Inout_ DWORD *pcchMaxChars,_Out_ CRED_PROTECTION_TYPE *ProtectionType)
LONG WINAPI winscard.SCardLocateCardsByATR(_In_ SCARDCONTEXT hContext,_In_ LPSCARD_ATRMASK rgAtrMasks,_In_ DWORD cAtrs,_Inout_ LPSCARD_READERSTATE rgReaderStates,_In_ DWORD cReaders)
LONG WINAPI winscard.SCardLocateCardsByATRW(_In_ SCARDCONTEXT hContext,_In_ LPSCARD_ATRMASK rgAtrMasks,_In_ DWORD cAtrs,_Inout_ LPSCARD_READERSTATE rgReaderStates,_In_ DWORD cReaders)
LONG WINAPI winscard.SCardLocateCardsByATRA(_In_ SCARDCONTEXT hContext,_In_ LPSCARD_ATRMASK rgAtrMasks,_In_ DWORD cAtrs,_Inout_ LPSCARD_READERSTATE rgReaderStates,_In_ DWORD cReaders)
DWORD WINAPI credui.CredUIConfirmCredentials(_In_ PCTSTR pszTargetName,_In_ BOOL bConfirm)
DWORD WINAPI credui.CredUIConfirmCredentialsW(_In_ PCTSTR pszTargetName,_In_ BOOL bConfirm)
DWORD WINAPI credui.CredUIConfirmCredentialsA(_In_ PCTSTR pszTargetName,_In_ BOOL bConfirm)
SECURITY_STATUS WINAPI schannel.SslGetServerIdentity(_In_ PBYTE ClientHello,_In_ DWORD ClientHelloSize,_Out_ PBYTE *ServerIdentity,_Out_ PDWORD ServerIdentitySize,_In_ DWORD Flags)
SECURITY_STATUS SEC_Entry secur32.VerifySignature(_In_ PCtxtHandle phContext,_In_ PSecBufferDesc pMessage,_In_ ULONG MessageSeqNo,_Out_ PULONG pfQOP)
SECURITY_STATUS SEC_Entry sspicli.EnumerateSecurityPackages(_In_ PULONG pcPackages,_In_ PSecPkgInfo *ppPackageInfo)
SECURITY_STATUS SEC_Entry sspicli.EnumerateSecurityPackagesW(_In_ PULONG pcPackages,_In_ PSecPkgInfo *ppPackageInfo)
SECURITY_STATUS SEC_Entry sspicli.EnumerateSecurityPackagesA(_In_ PULONG pcPackages,_In_ PSecPkgInfo *ppPackageInfo)
NET_API_STATUS WINAPI netapi32.NetRequestProvisioningPackageInstall(_In_ BYTE *pPackageBinData,_In_ DWORD dwPackageBinDataSize,_In_ DWORD dwProvisionOptions,_In_ LPCWSTR lpWindowsPath,_Reserved_ PVOID pvReserved)
LONG WINAPI winscard.SCardIntroduceReader(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReaderName,_In_ LPCTSTR szDeviceName)
LONG WINAPI winscard.SCardIntroduceReaderW(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReaderName,_In_ LPCTSTR szDeviceName)
LONG WINAPI winscard.SCardIntroduceReaderA(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReaderName,_In_ LPCTSTR szDeviceName)
LONG WINAPI winscard.SCardDisconnect(_In_ SCARDHANDLE hCard,_In_ DWORD dwDisposition)
BOOL WINAPI crypt32.CryptVerifyCertificateSignature(_In_ HCRYPTPROV_LEGACY hCryptProv,_In_ DWORD dwCertEncodingType,_In_ BYTE *pbEncoded,_In_ DWORD cbEncoded,_In_ PCERT_PUBLIC_KEY_INFO pPublicKey)
BOOL WINAPI crypt32.CertIsRDNAttrsInCertificateName(_In_ DWORD dwCertEncodingType,_In_ DWORD dwFlags,_In_ PCERT_NAME_BLOB pCertName,_In_ PCERT_RDN pRDN)
LONG WINAPI winscard.SCardGetTransmitCount(_In_ SCARDHANDLE hCard,_Out_ LPDWORD pcTransmitCount)
SECURITY_STATUS SEC_Entry secur32.VerifySignature(_In_ PCtxtHandle phContext,_In_ PSecBufferDesc pMessage,_In_ ULONG MessageSeqNo,_Out_ PULONG pfQOP)
SECURITY_STATUS WINAPI schannel.SslGetServerIdentity(_In_ PBYTE ClientHello,_In_ DWORD ClientHelloSize,_Out_ PBYTE *ServerIdentity,_Out_ PDWORD ServerIdentitySize,_In_ DWORD Flags)
NET_API_STATUS WINAPI netapi32.NetCreateProvisioningPackage(_In_ PNETSETUP_PROVISIONING_PARAMS pProvisioningParams,_Out_opt_ PBYTE *pPackageBinData,_Out_opt_ DWORD *pdwPackageBinDataSize,_Out_opt_ LPWSTR *pPackageTextData)
NET_API_STATUS WINAPI netapi32.NetCreateProvisioningPackage(_In_ PNETSETUP_PROVISIONING_PARAMS pProvisioningParams,_Out_opt_ PBYTE *pPackageBinData,_Out_opt_ DWORD *pdwPackageBinDataSize,_Out_opt_ LPWSTR *pPackageTextData)
LONG WINAPI winscard.SCardSetCardTypeProviderName(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCardName,_In_ DWORD dwProviderId,_In_ LPCTSTR szProvider)
LONG WINAPI winscard.SCardSetCardTypeProviderNameW(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCardName,_In_ DWORD dwProviderId,_In_ LPCTSTR szProvider)
LONG WINAPI winscard.SCardSetCardTypeProviderNameA(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCardName,_In_ DWORD dwProviderId,_In_ LPCTSTR szProvider)
NET_API_STATUS WINAPI netapi32.NetCreateProvisioningPackage(_In_ PNETSETUP_PROVISIONING_PARAMS pProvisioningParams,_Out_opt_ PBYTE *pPackageBinData,_Out_opt_ DWORD *pdwPackageBinDataSize,_Out_opt_ LPWSTR *pPackageTextData)
NTSTATUS WINAPI certpoleng.PstGetTrustAnchors(_In_ PUNICODE_STRING pTargetName,_In_ DWORD cCriteria,_In_opt_ PCCERT_SELECT_CRITERIA rgpCriteria,_Out_ PSecPkgContext_IssuerListInfoEx *ppTrustedIssuers)
SECURITY_STATUS SEC_Entry secur32.ApplyControlToken(_In_ PCtxtHandle phContext,_In_ PSecBufferDesc pInput)
DWORD WINAPI credui.CredUIPromptForCredentials(_In_opt_ PCREDUI_INFO pUiInfo,_In_ PCTSTR pszTargetName,_In_ PCtxtHandle Reserved,_In_opt_ DWORD dwAuthError,_Inout_ PCTSTR pszUserName,_In_ ULONG ulUserNameMaxChars,_Inout_ PCTSTR pszPassword,_In_ ULONG ulPasswordMaxChars,_Inout_ PBOOL pfSave,_In_ DWORD dwFlags)
DWORD WINAPI credui.CredUIPromptForCredentialsW(_In_opt_ PCREDUI_INFO pUiInfo,_In_ PCTSTR pszTargetName,_In_ PCtxtHandle Reserved,_In_opt_ DWORD dwAuthError,_Inout_ PCTSTR pszUserName,_In_ ULONG ulUserNameMaxChars,_Inout_ PCTSTR pszPassword,_In_ ULONG ulPasswordMaxChars,_Inout_ PBOOL pfSave,_In_ DWORD dwFlags)
DWORD WINAPI credui.CredUIPromptForCredentialsA(_In_opt_ PCREDUI_INFO pUiInfo,_In_ PCTSTR pszTargetName,_In_ PCtxtHandle Reserved,_In_opt_ DWORD dwAuthError,_Inout_ PCTSTR pszUserName,_In_ ULONG ulUserNameMaxChars,_Inout_ PCTSTR pszPassword,_In_ ULONG ulPasswordMaxChars,_Inout_ PBOOL pfSave,_In_ DWORD dwFlags)
NTSTATUS NTAPI advapi32.LsaSetForestTrustInformation(_In_ LSA_HANDLE PolicyHandle,_In_ PLSA_UNICODE_STRING TrustedDomainName,_In_ PLSA_FOREST_TRUST_INFORMATION ForestTrustInfo,_In_ BOOLEAN CheckOnly,_Out_ PLSA_FOREST_TRUST_COLLISION_INFORMATION *CollisionInfo)
LONG WINAPI winscard.SCardAudit(_In_ SCARDCONTEXT hContext,_In_ DWORD dwEvent)
SECURITY_STATUS SEC_Entry secur32.AcquireCredentialsHandle(_In_ SEC_CHAR *pszPrincipal,_In_ SEC_CHAR *pszPackage,_In_ ULONG fCredentialUse,_In_ PLUID pvLogonID,_In_ PVOID pAuthData,_In_ SEC_GET_KEY_FN pGetKeyFn,_In_ PVOID pvGetKeyArgument,_Out_ PCredHandle phCredential,_Out_ PTimeStamp ptsExpiry)
SECURITY_STATUS SEC_Entry secur32.AcquireCredentialsHandleW(_In_ SEC_CHAR *pszPrincipal,_In_ SEC_CHAR *pszPackage,_In_ ULONG fCredentialUse,_In_ PLUID pvLogonID,_In_ PVOID pAuthData,_In_ SEC_GET_KEY_FN pGetKeyFn,_In_ PVOID pvGetKeyArgument,_Out_ PCredHandle phCredential,_Out_ PTimeStamp ptsExpiry)
SECURITY_STATUS SEC_Entry secur32.AcquireCredentialsHandleA(_In_ SEC_CHAR *pszPrincipal,_In_ SEC_CHAR *pszPackage,_In_ ULONG fCredentialUse,_In_ PLUID pvLogonID,_In_ PVOID pAuthData,_In_ SEC_GET_KEY_FN pGetKeyFn,_In_ PVOID pvGetKeyArgument,_Out_ PCredHandle phCredential,_Out_ PTimeStamp ptsExpiry)
SECURITY_STATUS SEC_ENTRY secur32.SaslIdentifyPackage(_In_ PSecBufferDesc pInput,_Out_ PSecPkgInfo *PackageInfo)
SECURITY_STATUS SEC_ENTRY secur32.SaslIdentifyPackageW(_In_ PSecBufferDesc pInput,_Out_ PSecPkgInfo *PackageInfo)
SECURITY_STATUS SEC_ENTRY secur32.SaslIdentifyPackageA(_In_ PSecBufferDesc pInput,_Out_ PSecPkgInfo *PackageInfo)
NTSTATUS NTAPI advapi32.LsaQueryDomainInformationPolicy(_In_ LSA_HANDLE PolicyHandle,_In_ POLICY_DOMAIN_INFORMATION_CLASS InformationClass,_Out_ PVOID *Buffer)
NTSTATUS NTAPI None.CrediReadDomainCredentials(_In_ PLUID LogonId,_In_ ULONG CredFlags,_In_ PCREDENTIAL_TARGET_INFORMATIONW TargetInfo,ULONG Flags None,PULONG Count None,_Out_ PENCRYPTED_CREDENTIALW **Credential)
LONG WINAPI winscard.SCardControl(_In_ SCARDHANDLE hCard,_In_ DWORD dwControlCode,_In_ LPCVOID lpInBuffer,_In_ DWORD nInBufferSize,_Out_ LPVOID lpOutBuffer,_In_ DWORD nOutBufferSize,_Out_ LPDWORD lpBytesReturned)
NTSTATUS WINAPI certpoleng.PstGetCertificates(_In_ PUNICODE_STRING pTargetName,_In_ DWORD cCriteria,_In_opt_ PCCERT_SELECT_CRITERIA rgpCriteria,_In_ BOOL bIsClient,_Out_ PDWORD pdwCertChainContextCount,_Out_ PCCERT_CHAIN_CONTEXT **ppCertChainContexts)
SECURITY_STATUS SEC_ENTRY secur32.SaslGetProfilePackage(_In_ LPTSTR ProfileName,_Out_ PSecPkgInfo *PackageInfo)
SECURITY_STATUS SEC_ENTRY secur32.SaslGetProfilePackageW(_In_ LPTSTR ProfileName,_Out_ PSecPkgInfo *PackageInfo)
SECURITY_STATUS SEC_ENTRY secur32.SaslGetProfilePackageA(_In_ LPTSTR ProfileName,_Out_ PSecPkgInfo *PackageInfo)
SECURITY_STATUS SEC_Entry secur32.ExportSecurityContext(_In_ PCtxtHandle phContext,_In_ Ulong fFlags,_Out_ PSecBuffer pPackedContext,_Out_opt_ HANDLE *pToken)
LONG WINAPI winscard.SCardEstablishContext(_In_ DWORD dwScope,_In_ LPCVOID pvReserved1,_In_ LPCVOID pvReserved2,_Out_ LPSCARDCONTEXT phContext)
NTSTATUS NTAPI None.SpQueryMetaDataFn(_In_ LSA_SEC_HANDLE CredentialHandle,_In_opt_ PUNICODE_STRING TargetName,_In_ ULONG ContextRequirements,_Out_ ULONG MetaDataLength,_Out_ PUCHAR MetaData,_Inout_ PLSA_SEC_HANDLE ContextHandle)
LONG WINAPI winscard.SCardEstablishContext(_In_ DWORD dwScope,_In_ LPCVOID pvReserved1,_In_ LPCVOID pvReserved2,_Out_ LPSCARDCONTEXT phContext)
LONG WINAPI winscard.SCardGetStatusChange(_In_ SCARDCONTEXT hContext,_In_ DWORD dwTimeout,_Inout_ LPSCARD_READERSTATE rgReaderStates,_In_ DWORD cReaders)
LONG WINAPI winscard.SCardGetStatusChangeW(_In_ SCARDCONTEXT hContext,_In_ DWORD dwTimeout,_Inout_ LPSCARD_READERSTATE rgReaderStates,_In_ DWORD cReaders)
LONG WINAPI winscard.SCardGetStatusChangeA(_In_ SCARDCONTEXT hContext,_In_ DWORD dwTimeout,_Inout_ LPSCARD_READERSTATE rgReaderStates,_In_ DWORD cReaders)
LONG WINAPI winscard.SCardIntroduceReader(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReaderName,_In_ LPCTSTR szDeviceName)
LONG WINAPI winscard.SCardIntroduceReaderW(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReaderName,_In_ LPCTSTR szDeviceName)
LONG WINAPI winscard.SCardIntroduceReaderA(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReaderName,_In_ LPCTSTR szDeviceName)
LONG WINAPI winscard.SCardWriteCache(_In_ SCARDCONTEXT hContext,_In_ UUID *CardIdentifier,_In_ DWORD FreshnessCounter,_In_ LPTSTR LookupName,_In_ PBYTE Data,_In_ DWORD DataLen)
LONG WINAPI winscard.SCardWriteCacheW(_In_ SCARDCONTEXT hContext,_In_ UUID *CardIdentifier,_In_ DWORD FreshnessCounter,_In_ LPTSTR LookupName,_In_ PBYTE Data,_In_ DWORD DataLen)
LONG WINAPI winscard.SCardWriteCacheA(_In_ SCARDCONTEXT hContext,_In_ UUID *CardIdentifier,_In_ DWORD FreshnessCounter,_In_ LPTSTR LookupName,_In_ PBYTE Data,_In_ DWORD DataLen)
NTSTATUS NTAPI secur32.LsaEnumerateLogonSessions(_Out_ PULONG LogonSessionCount,_Out_ PLUID *LogonSessionList)
LONG WINAPI winscard.SCardSetCardTypeProviderName(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCardName,_In_ DWORD dwProviderId,_In_ LPCTSTR szProvider)
LONG WINAPI winscard.SCardSetCardTypeProviderNameW(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCardName,_In_ DWORD dwProviderId,_In_ LPCTSTR szProvider)
LONG WINAPI winscard.SCardSetCardTypeProviderNameA(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCardName,_In_ DWORD dwProviderId,_In_ LPCTSTR szProvider)
DWORD WINAPI credui.CredUIConfirmCredentials(_In_ PCTSTR pszTargetName,_In_ BOOL bConfirm)
DWORD WINAPI credui.CredUIConfirmCredentialsW(_In_ PCTSTR pszTargetName,_In_ BOOL bConfirm)
DWORD WINAPI credui.CredUIConfirmCredentialsA(_In_ PCTSTR pszTargetName,_In_ BOOL bConfirm)
LONG WINAPI winscard.SCardGetProviderId(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCard,_Out_ LPGUID pguidProviderId)
LONG WINAPI winscard.SCardGetProviderIdW(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCard,_Out_ LPGUID pguidProviderId)
LONG WINAPI winscard.SCardGetProviderIdA(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCard,_Out_ LPGUID pguidProviderId)
LONG WINAPI winscard.SCardEndTransaction(_In_ SCARDHANDLE hCard,_In_ DWORD dwDisposition)
LONG WINAPI winscard.SCardListReaderGroups(_In_ SCARDCONTEXT hContext,_Out_ LPTSTR mszGroups,_Inout_ LPDWORD pcchGroups)
LONG WINAPI winscard.SCardListReaderGroupsW(_In_ SCARDCONTEXT hContext,_Out_ LPTSTR mszGroups,_Inout_ LPDWORD pcchGroups)
LONG WINAPI winscard.SCardListReaderGroupsA(_In_ SCARDCONTEXT hContext,_Out_ LPTSTR mszGroups,_Inout_ LPDWORD pcchGroups)
BOOL WINAPI mssign32.PvkPrivateKeySave(_In_ HCRYPTPROV hCryptProv,_In_ HANDLE hFile,_In_ DWORD dwKeySpec,_In_ HWND hwndOwner,_In_ LPCWSTR pwszKeyName,_In_ DWORD dwFlags)
NTSTATUS WINAPI certpoleng.PstMapCertificate(_In_ PCCERT_CONTEXT pCert,_Out_ LSA_TOKEN_INFORMATION_TYPE *pTokenInformationType,_Out_ PVOID *ppTokenInformation)
NTSTATUS WINAPI advapi32.CredMarshalTargetInfo(_In_ PCREDENTIAL_TARGET_INFORMATIONW InTargetInfo,_Out_ PUSHORT *Buffer,PULONG BufferSize None)
NET_API_STATUS WINAPI netapi32.NetRequestProvisioningPackageInstall(_In_ BYTE *pPackageBinData,_In_ DWORD dwPackageBinDataSize,_In_ DWORD dwProvisionOptions,_In_ LPCWSTR lpWindowsPath,_Reserved_ PVOID pvReserved)
NET_API_STATUS WINAPI netapi32.NetCreateProvisioningPackage(_In_ PNETSETUP_PROVISIONING_PARAMS pProvisioningParams,_Out_opt_ PBYTE *pPackageBinData,_Out_opt_ DWORD *pdwPackageBinDataSize,_Out_opt_ LPWSTR *pPackageTextData)
NET_API_STATUS WINAPI netapi32.NetCreateProvisioningPackage(_In_ PNETSETUP_PROVISIONING_PARAMS pProvisioningParams,_Out_opt_ PBYTE *pPackageBinData,_Out_opt_ DWORD *pdwPackageBinDataSize,_Out_opt_ LPWSTR *pPackageTextData)
NTSTATUS SEC_ENTRY None.SpUserModeInitialize(_In_ ULONG LsaVersion,_Out_ PULONG PackageVersion,_Out_ PSECPKG_USER_FUNCTION_TABLE *ppTables,_Out_ PULONG pcTables)
NTSTATUS WINAPI certpoleng.PstGetUserNameForCertificate(_In_ PCCERT_CONTEXT pCertContext,_Out_ PUNICODE_STRING UserName)
BOOL WINAPI advapi32.SaferComputeTokenFromLevel(_In_ SAFER_LEVEL_HANDLE LevelHandle,_In_opt_ HANDLE InAccessToken,_Out_ PHANDLE OutAccessToken,_In_ DWORD dwFlags,_Inout_opt_ LPVOID lpReserved)
SCESTATUS WINAPI None.SceSvcAttachmentAnalyze(_In_ PSCESVC_CALLBACK_INFO pSceCbInfo)
SCESTATUS WINAPI None.SceSvcAttachmentConfig(_In_ PSCESVC_CALLBACK_INFO pSceCbInfo)
LONG WINAPI winscard.SCardReconnect(_In_ SCARDHANDLE hCard,_In_ DWORD dwShareMode,_In_ DWORD dwPreferredProtocols,_In_ DWORD dwInitialization,_Out_opt_ LPDWORD pdwActiveProtocol)
NET_API_STATUS WINAPI netapi32.NetCreateProvisioningPackage(_In_ PNETSETUP_PROVISIONING_PARAMS pProvisioningParams,_Out_opt_ PBYTE *pPackageBinData,_Out_opt_ DWORD *pdwPackageBinDataSize,_Out_opt_ LPWSTR *pPackageTextData)
NTSTATUS NTAPI None.SpExchangeMetaDataFn(_In_ LSA_SEC_HANDLE CredentialHandle,_In_opt_ PUNICODE_STRING TargetName,_In_ ULONG ContextRequirements,_In_ ULONG MetaDataLength,_In_ PUCHAR MetaData,_Inout_ PLSA_SEC_HANDLE ContextHandle)
SECURITY_STATUS SEC_Entry secur32.QueryContextAttributes(_In_ PCtxtHandle phContext,_In_ ULONG ulAttribute,_Out_ PVOID pBuffer)
SECURITY_STATUS SEC_Entry secur32.QueryContextAttributesW(_In_ PCtxtHandle phContext,_In_ ULONG ulAttribute,_Out_ PVOID pBuffer)
SECURITY_STATUS SEC_Entry secur32.QueryContextAttributesA(_In_ PCtxtHandle phContext,_In_ ULONG ulAttribute,_Out_ PVOID pBuffer)
BOOL WINAPI advapi32.CredUnprotect(_In_ BOOL fAsSelf,_In_ LPTSTR pszProtectedCredentials,_In_ DWORD cchCredentials,_Out_ LPTSTR pszCredentials,_Inout_ DWORD *pcchMaxChars)
BOOL WINAPI advapi32.CredUnprotectW(_In_ BOOL fAsSelf,_In_ LPTSTR pszProtectedCredentials,_In_ DWORD cchCredentials,_Out_ LPTSTR pszCredentials,_Inout_ DWORD *pcchMaxChars)
BOOL WINAPI advapi32.CredUnprotectA(_In_ BOOL fAsSelf,_In_ LPTSTR pszProtectedCredentials,_In_ DWORD cchCredentials,_Out_ LPTSTR pszCredentials,_Inout_ DWORD *pcchMaxChars)
SCESTATUS WINAPI None.SceSvcAttachmentUpdate(_In_ PSCESVC_CALLBACK_INFO pSceCbInfo,_In_ SCESVC_CONFIGURATION_INFO *ServiceInfo)
NTSTATUS NTAPI None.CreateTokenEx(_In_ PLUID LogonId,_In_ PTOKEN_SOURCE TokenSource,_In_ SECURITY_LOGON_TYPE LogonType,_In_ SECURITY_IMPERSONATION_LEVEL ImpersonationLevel,_In_ LSA_TOKEN_INFORMATION_TYPE TokenInformationType,_In_ PVOID TokenInformation,_In_ PTOKEN_GROUPS TokenGroups,_In_ PUNICODE_STRING Workstation,_In_ PUNICODE_STRING ProfilePath,_In_ PVOID SessionInformation,_In_ SECPKG_SESSIONINFO_TYPE SessionInformationType,_Out_ PHANDLE Token,_Out_ PNTSTATUS SubStatus)
SECURITY_STATUS SEC_Entry secur32.QueryCredentialsAttributes(_In_ PCredHandle phCredential,_In_ ULONG ulAttribute,_Out_ PVOID pBuffer)
SECURITY_STATUS SEC_Entry secur32.QueryCredentialsAttributesW(_In_ PCredHandle phCredential,_In_ ULONG ulAttribute,_Out_ PVOID pBuffer)
SECURITY_STATUS SEC_Entry secur32.QueryCredentialsAttributesA(_In_ PCredHandle phCredential,_In_ ULONG ulAttribute,_Out_ PVOID pBuffer)
LONG WINAPI winscard.SCardReconnect(_In_ SCARDHANDLE hCard,_In_ DWORD dwShareMode,_In_ DWORD dwPreferredProtocols,_In_ DWORD dwInitialization,_Out_opt_ LPDWORD pdwActiveProtocol)
SECURITY_STATUS SEC_Entry secur32.AcquireCredentialsHandle(_In_opt_ SEC_CHAR *pszPrincipal,_In_ SEC_CHAR *pszPackage,_In_ ULONG fCredentialUse,_In_opt_ PLUID pvLogonID,_In_opt_ PVOID pAuthData,_In_opt_ SEC_GET_KEY_FN pGetKeyFn,_In_opt_ PVOID pvGetKeyArgument,_Out_ PCredHandle phCredential,_Out_opt_ PTimeStamp ptsExpiry)
SECURITY_STATUS SEC_Entry secur32.AcquireCredentialsHandleW(_In_opt_ SEC_CHAR *pszPrincipal,_In_ SEC_CHAR *pszPackage,_In_ ULONG fCredentialUse,_In_opt_ PLUID pvLogonID,_In_opt_ PVOID pAuthData,_In_opt_ SEC_GET_KEY_FN pGetKeyFn,_In_opt_ PVOID pvGetKeyArgument,_Out_ PCredHandle phCredential,_Out_opt_ PTimeStamp ptsExpiry)
SECURITY_STATUS SEC_Entry secur32.AcquireCredentialsHandleA(_In_opt_ SEC_CHAR *pszPrincipal,_In_ SEC_CHAR *pszPackage,_In_ ULONG fCredentialUse,_In_opt_ PLUID pvLogonID,_In_opt_ PVOID pAuthData,_In_opt_ SEC_GET_KEY_FN pGetKeyFn,_In_opt_ PVOID pvGetKeyArgument,_Out_ PCredHandle phCredential,_Out_opt_ PTimeStamp ptsExpiry)
SECURITY_STATUS SEC_ENTRY secur32.SaslSetContextOption(_In_ PCtxtHandle ContextHandle,_In_ ULONG Option,_In_ PVOID Value,_In_ ULONG Size)
BOOL WINAPI credui.CredPackAuthenticationBuffer(_In_ DWORD dwFlags,_In_ LPTSTR pszUserName,_In_ LPTSTR pszPassword,_Out_ PBYTE pPackedCredentials,_Inout_ DWORD *pcbPackedCredentials)
BOOL WINAPI credui.CredPackAuthenticationBufferW(_In_ DWORD dwFlags,_In_ LPTSTR pszUserName,_In_ LPTSTR pszPassword,_Out_ PBYTE pPackedCredentials,_Inout_ DWORD *pcbPackedCredentials)
BOOL WINAPI credui.CredPackAuthenticationBufferA(_In_ DWORD dwFlags,_In_ LPTSTR pszUserName,_In_ LPTSTR pszPassword,_Out_ PBYTE pPackedCredentials,_Inout_ DWORD *pcbPackedCredentials)
NTSTATUS NTAPI None.OpenTokenByLogonId(_In_ PLUID LogonId,_Out_ HANDLE *RetTokenHandle)
LONG WINAPI winscard.SCardIntroduceReaderGroup(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szGroupName)
LONG WINAPI winscard.SCardIntroduceReaderGroupW(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szGroupName)
LONG WINAPI winscard.SCardIntroduceReaderGroupA(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szGroupName)
BOOL WINAPI advapi32.SaferIdentifyLevel(_In_ DWORD dwNumProperties,_In_opt_ PSAFER_CODE_PROPERTIES pCodeProperties,_Out_ SAFER_LEVEL_HANDLE *pLevelHandle,_Reserved_ LPVOID lpReserved)
SECURITY_STATUS SEC_Entry secur32.DecryptMessage(_In_ PCtxtHandle phContext,_Inout_ PSecBufferDesc pMessage,_In_ ULONG MessageSeqNo,_Out_ PULONG pfQOP)
LONG WINAPI winscard.SCardGetAttrib(_In_ SCARDHANDLE hCard,_In_ DWORD dwAttrId,_Out_ LPBYTE pbAttr,_Inout_ LPDWORD pcbAttrLen)
DWORD WINAPI credui.CredUICmdLinePromptForCredentials(_In_ PCTSTR pszTargetName,_In_ PCtxtHandle Reserved,_In_opt_ DWORD dwAuthError,_Inout_ PTSTR pszUserName,_In_ ULONG ulUserNameMaxChars,_Inout_ PTSTR pszPassword,_In_ ULONG ulPasswordMaxChars,_Inout_ PBOOL pfSave,_In_ DWORD dwFlags)
DWORD WINAPI credui.CredUICmdLinePromptForCredentialsW(_In_ PCTSTR pszTargetName,_In_ PCtxtHandle Reserved,_In_opt_ DWORD dwAuthError,_Inout_ PTSTR pszUserName,_In_ ULONG ulUserNameMaxChars,_Inout_ PTSTR pszPassword,_In_ ULONG ulPasswordMaxChars,_Inout_ PBOOL pfSave,_In_ DWORD dwFlags)
DWORD WINAPI credui.CredUICmdLinePromptForCredentialsA(_In_ PCTSTR pszTargetName,_In_ PCtxtHandle Reserved,_In_opt_ DWORD dwAuthError,_Inout_ PTSTR pszUserName,_In_ ULONG ulUserNameMaxChars,_Inout_ PTSTR pszPassword,_In_ ULONG ulPasswordMaxChars,_Inout_ PBOOL pfSave,_In_ DWORD dwFlags)
LONG WINAPI winscard.SCardEndTransaction(_In_ SCARDHANDLE hCard,_In_ DWORD dwDisposition)
SECURITY_STATUS SEC_Entry secur32.ApplyControlToken(_In_ PCtxtHandle phContext,_In_ PSecBufferDesc pInput)
BOOL WINAPI crypt32.CryptVerifyCertificateSignature(_In_ HCRYPTPROV_LEGACY hCryptProv,_In_ DWORD dwCertEncodingType,_In_ BYTE *pbEncoded,_In_ DWORD cbEncoded,_In_ PCERT_PUBLIC_KEY_INFO pPublicKey)
SECURITY_STATUS SEC_Entry secur32.QueryContextAttributes(_In_ PCtxtHandle phContext,_In_ ULONG ulAttribute,_Out_ PVOID pBuffer)
SECURITY_STATUS SEC_Entry secur32.QueryContextAttributesW(_In_ PCtxtHandle phContext,_In_ ULONG ulAttribute,_Out_ PVOID pBuffer)
SECURITY_STATUS SEC_Entry secur32.QueryContextAttributesA(_In_ PCtxtHandle phContext,_In_ ULONG ulAttribute,_Out_ PVOID pBuffer)
RPC_STATUS RPC_ENTRY rpcrt4.RpcCancelThreadEx(HANDLE ThreadHandle None,LONG Timeout None)
BOOL WINAPI advapi32.SaferIdentifyLevel(_In_ DWORD dwNumProperties,_In_opt_ PSAFER_CODE_PROPERTIES pCodeProperties,_Out_ SAFER_LEVEL_HANDLE *pLevelHandle,_Reserved_ LPVOID lpReserved)
BOOL WINAPI advapi32.SaferIdentifyLevel(_In_ DWORD dwNumProperties,_In_opt_ PSAFER_CODE_PROPERTIES pCodeProperties,_Out_ SAFER_LEVEL_HANDLE *pLevelHandle,_Reserved_ LPVOID lpReserved)
LONG WINAPI winscard.SCardReconnect(_In_ SCARDHANDLE hCard,_In_ DWORD dwShareMode,_In_ DWORD dwPreferredProtocols,_In_ DWORD dwInitialization,_Out_opt_ LPDWORD pdwActiveProtocol)
NTSTATUS NTAPI None.CreateTokenEx(_In_ PLUID LogonId,_In_ PTOKEN_SOURCE TokenSource,_In_ SECURITY_LOGON_TYPE LogonType,_In_ SECURITY_IMPERSONATION_LEVEL ImpersonationLevel,_In_ LSA_TOKEN_INFORMATION_TYPE TokenInformationType,_In_ PVOID TokenInformation,_In_ PTOKEN_GROUPS TokenGroups,_In_ PUNICODE_STRING Workstation,_In_ PUNICODE_STRING ProfilePath,_In_ PVOID SessionInformation,_In_ SECPKG_SESSIONINFO_TYPE SessionInformationType,_Out_ PHANDLE Token,_Out_ PNTSTATUS SubStatus)
LONG WINAPI winscard.SCardIntroduceCardType(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCardName,_In_opt_ LPCGUID pguidPrimaryProvider,_In_opt_ LPCGUID rgguidInterfaces,_In_ DWORD dwInterfaceCount,_In_ LPCBYTE pbAtr,_In_ LPCBYTE pbAtrMask,_In_ DWORD cbAtrLen)
LONG WINAPI winscard.SCardIntroduceCardTypeW(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCardName,_In_opt_ LPCGUID pguidPrimaryProvider,_In_opt_ LPCGUID rgguidInterfaces,_In_ DWORD dwInterfaceCount,_In_ LPCBYTE pbAtr,_In_ LPCBYTE pbAtrMask,_In_ DWORD cbAtrLen)
LONG WINAPI winscard.SCardIntroduceCardTypeA(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCardName,_In_opt_ LPCGUID pguidPrimaryProvider,_In_opt_ LPCGUID rgguidInterfaces,_In_ DWORD dwInterfaceCount,_In_ LPCBYTE pbAtr,_In_ LPCBYTE pbAtrMask,_In_ DWORD cbAtrLen)
RPC_SS_THREAD_HANDLE RPC_ENTRY rpcrt4.RpcSmGetThreadHandle(RPC_STATUS *pStatus None)
SECURITY_STATUS SEC_Entry secur32.ExportSecurityContext(_In_ PCtxtHandle phContext,_In_ Ulong fFlags,_Out_ PSecBuffer pPackedContext,_Out_opt_ HANDLE *pToken)
VOID NET_API_FUNCTION netapi32.NetFreeAadJoinInformation(_In_opt_ PDSREG_JOIN_INFO pJoinInfo)
NTSTATUS WINAPI certpoleng.PstGetCertificates(_In_ PUNICODE_STRING pTargetName,_In_ DWORD cCriteria,_In_opt_ PCCERT_SELECT_CRITERIA rgpCriteria,_In_ BOOL bIsClient,_Out_ PDWORD pdwCertChainContextCount,_Out_ PCCERT_CHAIN_CONTEXT **ppCertChainContexts)
BOOL WINAPI mssign32.PvkPrivateKeySave(_In_ HCRYPTPROV hCryptProv,_In_ HANDLE hFile,_In_ DWORD dwKeySpec,_In_ HWND hwndOwner,_In_ LPCWSTR pwszKeyName,_In_ DWORD dwFlags)
BOOL WINAPI advapi32.SaferIdentifyLevel(_In_ DWORD dwNumProperties,_In_opt_ PSAFER_CODE_PROPERTIES pCodeProperties,_Out_ SAFER_LEVEL_HANDLE *pLevelHandle,_Reserved_ LPVOID lpReserved)
NTSTATUS WINAPI netapi32.NetAddServiceAccount(_In_opt_ LPWSTR ServerName,_In_ LPWSTR AccountName,_In_ LPWSTR Reserved,_In_ DWORD Flags)
BOOL WINAPI advapi32.SaferSetPolicyInformation(_In_ DWORD dwScopeId,_In_ SAFER_POLICY_INFO_CLASS SaferPolicyInfoClass,_In_ DWORD InfoBufferSize,_In_ PVOID InfoBuffer,_Reserved_ LPVOID lpReserved)
NTSTATUS WINAPI netapi32.NetQueryServiceAccount(_In_opt_ LPWSTR ServerName,_In_ LPWSTR AccountName,_In_ DWORD InfoLevel,_Out_ PBYTE *Buffer)
BOOL WINAPI advapi32.CredFindBestCredential(_In_ LPCTSTR TargetName,_In_ DWORD Type,_In_ DWORD Flags,_Out_ PCREDENTIAL *Credential)
BOOL WINAPI advapi32.CredFindBestCredentialW(_In_ LPCTSTR TargetName,_In_ DWORD Type,_In_ DWORD Flags,_Out_ PCREDENTIAL *Credential)
BOOL WINAPI advapi32.CredFindBestCredentialA(_In_ LPCTSTR TargetName,_In_ DWORD Type,_In_ DWORD Flags,_Out_ PCREDENTIAL *Credential)
BOOL WINAPI advapi32.SaferGetLevelInformation(_In_ SAFER_LEVEL_HANDLE LevelHandle,_In_ SAFER_OBJECT_INFO_CLASS dwInfoType,_Out_opt_ LPVOID lpQueryBuffer,_In_ DWORD dwInBufferSize,_Out_ LPDWORD lpdwOutBufferSize)
NTSTATUS WINAPI netapi32.NetRemoveServiceAccount(_In_opt_ LPWSTR ServerName,_In_ LPWSTR AccountName,_In_ DWORD Flags)
RPC_STATUS RPC_ENTRY rpcrt4.RpcIfInqId(RPC_IF_HANDLE RpcIfHandle None,RPC_IF_ID *RpcIfId None)
HRESULT WINAPI srpapi.srpInheritOriginClaim(_In_ Handle OriginToken,_In_ Handle InheritingToken,Handle ResultToken None)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsProfileEltInqDone(RPC_NS_HANDLE *InquiryContext None)
NTSTATUS WINAPI advapi32.LsaLookupPrivilegeValue(LSA_HANDLE PolicyHandle None,PUNICODE_STRING Name None,PLUID Value None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcBindingSetObject(RPC_BINDING_HANDLE Binding None,UUID *ObjectUuid None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcMgmtInqStats(RPC_BINDING_HANDLE Binding None,RPC_STATS_VECTOR **Statistics None)
NTSTATUS NTAPI None.CrediUnmarshalandDecodeString(_In_ LPWSTR MarshaledString,_Out_ LPBYTE *Blob,_Out_ ULONG *BlobSize,_Out_ BOOLEAN *IsFailureFatal)
RPC_STATUS RPC_ENTRY rpcrt4.RpcServerTestCancel(RPC_BINDING_HANDLE BindingHandle None)
RPC_STATUS RPC_ENTRY rpcrt4.UuidCreateSequential(UUID __RPC_FAR *Uuid)
RPC_STATUS RPC_ENTRY rpcrt4.RpcEpUnregister(RPC_IF_HANDLE IfSpec None,RPC_BINDING_VECTOR *BindingVector None,UUID_VECTOR *UuidVector None)
LONG WINAPI None.SCardGetDeviceTypeId(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReaderName,_Inout_ LPDWORD pdwDeviceTypeId)
SECURITY_STATUS SEC_Entry secur32.QueryCredentialsAttributes(_In_ PCredHandle phCredential,_In_ ULONG ulAttribute,_Out_ PVOID pBuffer)
SECURITY_STATUS SEC_Entry secur32.QueryCredentialsAttributesW(_In_ PCredHandle phCredential,_In_ ULONG ulAttribute,_Out_ PVOID pBuffer)
SECURITY_STATUS SEC_Entry secur32.QueryCredentialsAttributesA(_In_ PCredHandle phCredential,_In_ ULONG ulAttribute,_Out_ PVOID pBuffer)
RPC_SS_THREAD_HANDLE RPC_ENTRY rpcrt4.RpcSmGetThreadHandle(RPC_STATUS *pStatus None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcCancelThreadEx(HANDLE ThreadHandle None,LONG Timeout None)
BOOL WINAPI advapi32.CryptCreateHash(_In_ HCRYPTPROV hProv,_In_ ALG_ID Algid,_In_ HCRYPTKEY hKey,_In_ DWORD dwFlags,_Out_ HCRYPTHASH *phHash)
LONG WINAPI winscard.SCardEstablishContext(_In_ DWORD dwScope,_In_ LPCVOID pvReserved1,_In_ LPCVOID pvReserved2,_Out_ LPSCARDCONTEXT phContext)
BOOL WINAPI advapi32.SaferIdentifyLevel(_In_ DWORD dwNumProperties,_In_opt_ PSAFER_CODE_PROPERTIES pCodeProperties,_Out_ SAFER_LEVEL_HANDLE *pLevelHandle,_Reserved_ LPVOID lpReserved)
LONG WINAPI winscard.SCardListCards(_In_ SCARDCONTEXT hContext,_In_opt_ LPCBYTE pbAtr,_In_ LPCGUID rgguidInterfaces,_In_ DWORD cguidInterfaceCount,_Out_ LPTSTR mszCards,_Inout_ LPDWORD pcchCards)
LONG WINAPI winscard.SCardListCardsW(_In_ SCARDCONTEXT hContext,_In_opt_ LPCBYTE pbAtr,_In_ LPCGUID rgguidInterfaces,_In_ DWORD cguidInterfaceCount,_Out_ LPTSTR mszCards,_Inout_ LPDWORD pcchCards)
LONG WINAPI winscard.SCardListCardsA(_In_ SCARDCONTEXT hContext,_In_opt_ LPCBYTE pbAtr,_In_ LPCGUID rgguidInterfaces,_In_ DWORD cguidInterfaceCount,_Out_ LPTSTR mszCards,_Inout_ LPDWORD pcchCards)
RPC_STATUS RPC_ENTRY rpcrt4.RpcErrorAddRecord(_In_ RPC_EXTENDED_ERROR_INFO *ErrorInfo)
RPC_STATUS RPC_ENTRY rpcrt4.RpcIfIdVectorFree(RPC_IF_ID_VECTOR **IfIdVec None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcImpersonateClientContainer(_In_opt_ RPC_BINDING_HANDLE BindingHandle)
RPC_STATUS RPC_ENTRY rpcrt4.RpcStringBindingCompose(TCHAR *ObjUuid None,TCHAR *ProtSeq None,TCHAR *NetworkAddr None,TCHAR *EndPoint None,TCHAR *Options None,TCHAR **StringBinding None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcStringBindingComposeW(TCHAR *ObjUuid None,TCHAR *ProtSeq None,TCHAR *NetworkAddr None,TCHAR *EndPoint None,TCHAR *Options None,TCHAR **StringBinding None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcStringBindingComposeA(TCHAR *ObjUuid None,TCHAR *ProtSeq None,TCHAR *NetworkAddr None,TCHAR *EndPoint None,TCHAR *Options None,TCHAR **StringBinding None)
LONG WINAPI winscard.SCardIntroduceCardType(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCardName,_In_opt_ LPCGUID pguidPrimaryProvider,_In_opt_ LPCGUID rgguidInterfaces,_In_ DWORD dwInterfaceCount,_In_ LPCBYTE pbAtr,_In_ LPCBYTE pbAtrMask,_In_ DWORD cbAtrLen)
LONG WINAPI winscard.SCardIntroduceCardTypeW(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCardName,_In_opt_ LPCGUID pguidPrimaryProvider,_In_opt_ LPCGUID rgguidInterfaces,_In_ DWORD dwInterfaceCount,_In_ LPCBYTE pbAtr,_In_ LPCBYTE pbAtrMask,_In_ DWORD cbAtrLen)
LONG WINAPI winscard.SCardIntroduceCardTypeA(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCardName,_In_opt_ LPCGUID pguidPrimaryProvider,_In_opt_ LPCGUID rgguidInterfaces,_In_ DWORD dwInterfaceCount,_In_ LPCBYTE pbAtr,_In_ LPCBYTE pbAtrMask,_In_ DWORD cbAtrLen)
SECURITY_STATUS SEC_Entry secur32.ExportSecurityContext(_In_ PCtxtHandle phContext,_In_ Ulong fFlags,_Out_ PSecBuffer pPackedContext,_Out_opt_ HANDLE *pToken)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsEntryObjectInqDone(RPC_NS_HANDLE *InquiryContext None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcErrorSaveErrorInfo(_In_ RPC_ERROR_ENUM_HANDLE *EnumHandle,_Out_ PVOID *ErrorBlob,_Out_ size_t *BlobSize)
NTSTATUS WINAPI netapi32.NetIsServiceAccount(_In_opt_ LPWSTR ServerName,_In_ LPWSTR AccountName,_Out_ BOOL *IsService)
RPC_STATUS RPC_ENTRY rpcrt4.RpcServerInterfaceGroupClose(_In_ RPC_INTERFACE_GROUP IfGroup)
NTSTATUS WINAPI netapi32.NetEnumerateServiceAccounts(_In_opt_ LPWSTR ServerName,_In_ DWORD Flags,_Out_ DWORD *AccountsCount,_Out_ PZPWSTR *Accounts)
BOOL WINAPI advapi32.SaferSetLevelInformation(_In_ SAFER_LEVEL_HANDLE LevelHandle,_In_ SAFER_OBJECT_INFO_CLASS dwInfoType,_In_ LPVOID lpQueryBuffer,_In_ DWORD dwInBufferSize)
RPC_STATUS RPC_ENTRY rpcrt4.RpcRevertToSelfEx(RPC_BINDING_HANDLE BindingHandle None)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsBindingImportNext(RPC_NS_HANDLE ImportContext None,RPC_BINDING_HANDLE *Binding None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcServerInqIf(RPC_IF_HANDLE IfSpec None,UUID *MgrTypeUuid None,RPC_MGR_EPV **MgrEpv None)
BOOL WINAPI advapi32.SaferGetLevelInformation(_In_ SAFER_LEVEL_HANDLE LevelHandle,_In_ SAFER_OBJECT_INFO_CLASS dwInfoType,_Out_opt_ LPVOID lpQueryBuffer,_In_ DWORD dwInBufferSize,_Out_ LPDWORD lpdwOutBufferSize)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsGroupMbrInqDone(RPC_NS_HANDLE *InquiryContext None)
BOOL WINAPI advapi32.SaferIdentifyLevel(_In_ DWORD dwNumProperties,_In_opt_ PSAFER_CODE_PROPERTIES pCodeProperties,_Out_ SAFER_LEVEL_HANDLE *pLevelHandle,_Reserved_ LPVOID lpReserved)
NTSTATUS WINAPI certpoleng.PstGetUserNameForCertificate(_In_ PCCERT_CONTEXT pCertContext,_Out_ PUNICODE_STRING UserName)
RPC_STATUS RPC_ENTRY rpcrt4.RpcBindingReset(RPC_BINDING_HANDLE Binding None)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsEntryObjectInqNext(RPC_NS_HANDLE InquiryContext None,UUID *ObjUuid None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcAsyncCompleteCall(PRPC_SYNC_STATE pAsync None,PVOID Reply None)
NTSTATUS WINAPI netapi32.NetAddServiceAccount(_In_opt_ LPWSTR ServerName,_In_ LPWSTR AccountName,_In_ LPWSTR Reserved,_In_ DWORD Flags)
NTSTATUS WINAPI advapi32.LsaLookupPrivilegeValue(LSA_HANDLE PolicyHandle None,PUNICODE_STRING Name None,PLUID Value None)
BOOL WINAPI advapi32.CredFindBestCredential(_In_ LPCTSTR TargetName,_In_ DWORD Type,_In_ DWORD Flags,_Out_ PCREDENTIAL *Credential)
BOOL WINAPI advapi32.CredFindBestCredentialW(_In_ LPCTSTR TargetName,_In_ DWORD Type,_In_ DWORD Flags,_Out_ PCREDENTIAL *Credential)
BOOL WINAPI advapi32.CredFindBestCredentialA(_In_ LPCTSTR TargetName,_In_ DWORD Type,_In_ DWORD Flags,_Out_ PCREDENTIAL *Credential)
NTSTATUS NTAPI None.SpExchangeMetaDataFn(_In_ LSA_SEC_HANDLE CredentialHandle,_In_opt_ PUNICODE_STRING TargetName,_In_ ULONG ContextRequirements,_In_ ULONG MetaDataLength,_In_ PUCHAR MetaData,_Inout_ PLSA_SEC_HANDLE ContextHandle)
RPC_STATUS RPC_ENTRY rpcrt4.RpcBindingSetObject(RPC_BINDING_HANDLE Binding None,UUID *ObjectUuid None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcBindingCopy(RPC_BINDING_HANDLE SourceBinding None,RPC_BINDING_HANDLE *DestinationBinding None)
BOOL WINAPI advapi32.CredUnprotect(_In_ BOOL fAsSelf,_In_ LPTSTR pszProtectedCredentials,_In_ DWORD cchCredentials,_Out_ LPTSTR pszCredentials,_Inout_ DWORD *pcchMaxChars)
BOOL WINAPI advapi32.CredUnprotectW(_In_ BOOL fAsSelf,_In_ LPTSTR pszProtectedCredentials,_In_ DWORD cchCredentials,_Out_ LPTSTR pszCredentials,_Inout_ DWORD *pcchMaxChars)
BOOL WINAPI advapi32.CredUnprotectA(_In_ BOOL fAsSelf,_In_ LPTSTR pszProtectedCredentials,_In_ DWORD cchCredentials,_Out_ LPTSTR pszCredentials,_Inout_ DWORD *pcchMaxChars)
BOOL WINAPI advapi32.CredFindBestCredential(_In_ LPCTSTR TargetName,_In_ DWORD Type,_In_ DWORD Flags,_Out_ PCREDENTIAL *Credential)
BOOL WINAPI advapi32.CredFindBestCredentialW(_In_ LPCTSTR TargetName,_In_ DWORD Type,_In_ DWORD Flags,_Out_ PCREDENTIAL *Credential)
BOOL WINAPI advapi32.CredFindBestCredentialA(_In_ LPCTSTR TargetName,_In_ DWORD Type,_In_ DWORD Flags,_Out_ PCREDENTIAL *Credential)
RPC_STATUS RPC_ENTRY rpcrt4.RpcObjectSetType(UUID *ObjUuid None,UUID *TypeUuid None)
RPC_STATUS RPC_ENTRY rpcrt4.UuidCreate(UUID __RPC_FAR *Uuid)
RPC_STATUS RPC_ENTRY rpcrt4.RpcServerInterfaceGroupActivate(_In_ RPC_INTERFACE_GROUP IfGroup)
RPC_STATUS RPC_ENTRY rpcrt4.RpcMgmtSetAuthorizationFn(RPC_MGMT_AUTHORIZATION_FN AuthorizationFn None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcCancelThread(HANDLE ThreadHandle None)
NTSTATUS NTAPI None.CrediReadDomainCredentials(_In_ PLUID LogonId,_In_ ULONG CredFlags,_In_ PCREDENTIAL_TARGET_INFORMATIONW TargetInfo,ULONG Flags None,PULONG Count None,_Out_ PENCRYPTED_CREDENTIALW **Credential)
SECURITY_STATUS SEC_Entry secur32.QueryCredentialsAttributes(_In_ PCredHandle phCredential,_In_ ULONG ulAttribute,_Out_ PVOID pBuffer)
SECURITY_STATUS SEC_Entry secur32.QueryCredentialsAttributesW(_In_ PCredHandle phCredential,_In_ ULONG ulAttribute,_Out_ PVOID pBuffer)
SECURITY_STATUS SEC_Entry secur32.QueryCredentialsAttributesA(_In_ PCredHandle phCredential,_In_ ULONG ulAttribute,_Out_ PVOID pBuffer)
RPC_STATUS RPC_ENTRY rpcrt4.RpcSmSwapClientAllocFree(RPC_CLIENT_ALLOC *pfnAllocate None,RPC_CLIENT_FREE *pfnFree None,RPC_CLIENT_ALLOC **pfnOldAllocate None,RPC_CLIENT_FREE **pfnOldFree None)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsEntryObjectInqNext(RPC_NS_HANDLE InquiryContext None,UUID *ObjUuid None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcServerTestCancel(RPC_BINDING_HANDLE BindingHandle None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcMgmtInqIfIds(RPC_BINDING_HANDLE Binding None,RPC_IF_ID_VECTOR **IfIdVector None)
RPC_STATUS WINAPI rpcrt4.RpcServerInterfaceGroupInqBindings(_In_ RPC_INTERFACE_GROUP IfGroup,_Out_ RPC_BINDING_VECTOR *BindingVector)
RPC_STATUS RPC_ENTRY rpcrt4.RpcSmSetClientAllocFree(RPC_CLIENT_ALLOC *pfnAllocate None,RPC_CLIENT_FREE *pfnFree None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcProtseqVectorFree(RPC_PROTSEQ_VECTOR **ProtSeqVector None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcProtseqVectorFreeW(RPC_PROTSEQ_VECTOR **ProtSeqVector None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcProtseqVectorFreeA(RPC_PROTSEQ_VECTOR **ProtSeqVector None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcServerRegisterIf(RPC_IF_HANDLE IfSpec None,UUID *MgrTypeUuid None,RPC_MGR_EPV *MgrEpv None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcServerInqIf(RPC_IF_HANDLE IfSpec None,UUID *MgrTypeUuid None,RPC_MGR_EPV **MgrEpv None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcBindingReset(RPC_BINDING_HANDLE Binding None)
SECURITY_STATUS SEC_Entry secur32.QueryContextAttributes(_In_ PCtxtHandle phContext,_In_ ULONG ulAttribute,_Out_ PVOID pBuffer)
SECURITY_STATUS SEC_Entry secur32.QueryContextAttributesW(_In_ PCtxtHandle phContext,_In_ ULONG ulAttribute,_Out_ PVOID pBuffer)
SECURITY_STATUS SEC_Entry secur32.QueryContextAttributesA(_In_ PCtxtHandle phContext,_In_ ULONG ulAttribute,_Out_ PVOID pBuffer)
BOOL WINAPI advapi32.CryptCreateHash(_In_ HCRYPTPROV hProv,_In_ ALG_ID Algid,_In_ HCRYPTKEY hKey,_In_ DWORD dwFlags,_Out_ HCRYPTHASH *phHash)
RPC_STATUS RPC_ENTRY rpcrt4.RpcStringBindingParse(TCHAR *StringBinding None,TCHAR **ObjectUuid None,TCHAR **ProtSeq None,TCHAR **NetworkAddr None,TCHAR **EndPoint None,TCHAR **NetworkOptions None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcStringBindingParseW(TCHAR *StringBinding None,TCHAR **ObjectUuid None,TCHAR **ProtSeq None,TCHAR **NetworkAddr None,TCHAR **EndPoint None,TCHAR **NetworkOptions None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcStringBindingParseA(TCHAR *StringBinding None,TCHAR **ObjectUuid None,TCHAR **ProtSeq None,TCHAR **NetworkAddr None,TCHAR **EndPoint None,TCHAR **NetworkOptions None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcBindingInqObject(RPC_BINDING_HANDLE Binding None,UUID *ObjectUuid None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcImpersonateClient(RPC_BINDING_HANDLE BindingHandle None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcAsyncCancelCall(PRPC_ASYNC_STATE pAsync None,BOOL fAbortCall None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcErrorGetNextRecord(_In_ RPC_ERROR_ENUM_HANDLE *EnumHandle,_In_ BOOL CopyStrings,_Out_ RPC_EXTENDED_ERROR_INFO *ErrorInfo)
RPC_STATUS RPC_ENTRY rpcdiag.RpcDiagnoseError(_In_ RPC_BINDING_HANDLE BindingHandle,_In_ RPC_IF_HANDLE IfSpec,_In_ RPC_STATUS RpcStatus,_In_opt_ RPC_ERROR_ENUM_HANDLE *EnumHandle,_In_ ULONG Options,_In_opt_ HWND ParentWindow)
RPC_STATUS RPC_ENTRY rpcrt4.RpcRevertToSelfEx(RPC_BINDING_HANDLE BindingHandle None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcBindingFree(RPC_BINDING_HANDLE *Binding None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcMgmtEpEltInqDone(RPC_EP_INQ_HANDLE *InquiryContext None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcObjectSetInqFn(RPC_OBJECT_INQ_FN InquiryFn None)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsBindingImportDone(RPC_NS_HANDLE *ImportContext None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcErrorLoadErrorInfo(_In_ PVOID ErrorBlob,_In_ size_t BlobSize,_Out_ RPC_ERROR_ENUM_HANDLE *EnumHandle)
RPC_STATUS RPC_ENTRY rpcrt4.RpcMgmtIsServerListening(RPC_BINDING_HANDLE Binding None)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsEntryObjectInqDone(RPC_NS_HANDLE *InquiryContext None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcFreeAuthorizationContext(_In_ PVOID *pAuthzClientContext)
RPC_STATUS RPC_ENTRY rpcrt4.RpcMgmtEpUnregister(RPC_BINDING_HANDLE EpBinding None,RPC_IF_ID *IfId None,RPC_BINDING_HANDLE Binding None,UUID *ObjectUuid None)
LONG WINAPI winscard.SCardListCards(_In_ SCARDCONTEXT hContext,_In_opt_ LPCBYTE pbAtr,_In_ LPCGUID rgguidInterfaces,_In_ DWORD cguidInterfaceCount,_Out_ LPTSTR mszCards,_Inout_ LPDWORD pcchCards)
LONG WINAPI winscard.SCardListCardsW(_In_ SCARDCONTEXT hContext,_In_opt_ LPCBYTE pbAtr,_In_ LPCGUID rgguidInterfaces,_In_ DWORD cguidInterfaceCount,_Out_ LPTSTR mszCards,_Inout_ LPDWORD pcchCards)
LONG WINAPI winscard.SCardListCardsA(_In_ SCARDCONTEXT hContext,_In_opt_ LPCBYTE pbAtr,_In_ LPCGUID rgguidInterfaces,_In_ DWORD cguidInterfaceCount,_Out_ LPTSTR mszCards,_Inout_ LPDWORD pcchCards)
RPC_STATUS RPC_ENTRY rpcrt4.RpcNetworkInqProtseqs(RPC_PROTSEQ_VECTOR **ProtSeqVector None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcNetworkInqProtseqsW(RPC_PROTSEQ_VECTOR **ProtSeqVector None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcNetworkInqProtseqsA(RPC_PROTSEQ_VECTOR **ProtSeqVector None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcCancelThread(HANDLE ThreadHandle None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcBindingVectorFree(RPC_BINDING_VECTOR **BindingVector None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcMgmtStopServerListening(RPC_BINDING_HANDLE Binding None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcStringBindingParse(TCHAR *StringBinding None,TCHAR **ObjectUuid None,TCHAR **ProtSeq None,TCHAR **NetworkAddr None,TCHAR **EndPoint None,TCHAR **NetworkOptions None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcStringBindingParseW(TCHAR *StringBinding None,TCHAR **ObjectUuid None,TCHAR **ProtSeq None,TCHAR **NetworkAddr None,TCHAR **EndPoint None,TCHAR **NetworkOptions None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcStringBindingParseA(TCHAR *StringBinding None,TCHAR **ObjectUuid None,TCHAR **ProtSeq None,TCHAR **NetworkAddr None,TCHAR **EndPoint None,TCHAR **NetworkOptions None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcServerInqBindings(RPC_BINDING_VECTOR **BindingVector None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcMgmtStatsVectorFree(RPC_STATS_VECTOR **StatsVector None)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsEntryObjectInqNext(RPC_NS_HANDLE InquiryContext None,UUID *ObjUuid None)
BOOL WINAPI wintrust.CryptCATAdminResolveCatalogPath(_In_ HCATADMIN hCatAdmin,_In_ WCHAR *pwszCatalogFile,_Inout_ CATALOG_INFO *psCatInfo,_In_ DWORD dwFlags)
RPC_STATUS RPC_ENTRY rpcrt4.RpcGetAuthorizationContextForClient(_In_opt_ RPC_BINDING_HANDLE ClientBinding,_In_ BOOL ImpersonateOnReturn,_In_ PVOID Reserved1,_In_opt_ PLARGE_INTEGER pExpirationTime,_In_ LUID Reserved2,_In_ DWORD Reserved3,_In_ PVOID Reserved4,_Out_ PVOID *pAuthzClientContext)
RPC_STATUS RPC_ENTRY rpcrt4.RpcServerInterfaceGroupActivate(_In_ RPC_INTERFACE_GROUP IfGroup)
BOOL WINAPI advapi32.CryptCreateHash(_In_ HCRYPTPROV hProv,_In_ ALG_ID Algid,_In_ HCRYPTKEY hKey,_In_ DWORD dwFlags,_Out_ HCRYPTHASH *phHash)
RPC_STATUS RPC_ENTRY rpcrt4.RpcBindingServerFromClient(RPC_BINDING_HANDLE ClientBinding None,RPC_BINDING_HANDLE *ServerBinding None)
RPC_STATUS RPC_ENTRY rpcrt4.MesHandleFree(handle_t Handle None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcMgmtSetAuthorizationFn(RPC_MGMT_AUTHORIZATION_FN AuthorizationFn None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcStringBindingParse(TCHAR *StringBinding None,TCHAR **ObjectUuid None,TCHAR **ProtSeq None,TCHAR **NetworkAddr None,TCHAR **EndPoint None,TCHAR **NetworkOptions None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcStringBindingParseW(TCHAR *StringBinding None,TCHAR **ObjectUuid None,TCHAR **ProtSeq None,TCHAR **NetworkAddr None,TCHAR **EndPoint None,TCHAR **NetworkOptions None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcStringBindingParseA(TCHAR *StringBinding None,TCHAR **ObjectUuid None,TCHAR **ProtSeq None,TCHAR **NetworkAddr None,TCHAR **EndPoint None,TCHAR **NetworkOptions None)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsBindingSelect(RPC_BINDING_VECTOR *BindingVec None,RPC_BINDING_HANDLE *Binding None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcAsyncGetCallStatus(PRPC_ASYNC_STATE pAsync None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcEpResolveBinding(RPC_BINDING_HANDLE Binding None,RPC_IF_HANDLE IfSpec None)
BOOL WINAPI advapi32.CredFindBestCredential(_In_ LPCTSTR TargetName,_In_ DWORD Type,_In_ DWORD Flags,_Out_ PCREDENTIAL *Credential)
BOOL WINAPI advapi32.CredFindBestCredentialW(_In_ LPCTSTR TargetName,_In_ DWORD Type,_In_ DWORD Flags,_Out_ PCREDENTIAL *Credential)
BOOL WINAPI advapi32.CredFindBestCredentialA(_In_ LPCTSTR TargetName,_In_ DWORD Type,_In_ DWORD Flags,_Out_ PCREDENTIAL *Credential)
RPC_STATUS RPC_ENTRY rpcrt4.RpcSmSetThreadHandle(RPC_SS_THREAD_HANDLE Handle None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcBindingServerFromClient(RPC_BINDING_HANDLE ClientBinding None,RPC_BINDING_HANDLE *ServerBinding None)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsBindingLookupNext(RPC_NS_HANDLE LookupContext None,RPC_BINDING_VECTOR **BindingVec None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcBindingVectorFree(RPC_BINDING_VECTOR **BindingVector None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcAsyncGetCallStatus(PRPC_ASYNC_STATE pAsync None)
RPC_STATUS RPC_ENTRY rpcdiag.RpcDiagnoseError(_In_ RPC_BINDING_HANDLE BindingHandle,_In_ RPC_IF_HANDLE IfSpec,_In_ RPC_STATUS RpcStatus,_In_opt_ RPC_ERROR_ENUM_HANDLE *EnumHandle,_In_ ULONG Options,_In_opt_ HWND ParentWindow)
RPC_STATUS RPC_ENTRY rpcrt4.RpcFreeAuthorizationContext(_In_ PVOID *pAuthzClientContext)
RPC_STATUS RPC_ENTRY rpcdiag.RpcDiagnoseError(_In_ RPC_BINDING_HANDLE BindingHandle,_In_ RPC_IF_HANDLE IfSpec,_In_ RPC_STATUS RpcStatus,_In_opt_ RPC_ERROR_ENUM_HANDLE *EnumHandle,_In_ ULONG Options,_In_opt_ HWND ParentWindow)
RPC_STATUS RPC_ENTRY rpcrt4.RpcMgmtStopServerListening(RPC_BINDING_HANDLE Binding None)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsBindingSelect(RPC_BINDING_VECTOR *BindingVec None,RPC_BINDING_HANDLE *Binding None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcStringBindingParse(TCHAR *StringBinding None,TCHAR **ObjectUuid None,TCHAR **ProtSeq None,TCHAR **NetworkAddr None,TCHAR **EndPoint None,TCHAR **NetworkOptions None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcStringBindingParseW(TCHAR *StringBinding None,TCHAR **ObjectUuid None,TCHAR **ProtSeq None,TCHAR **NetworkAddr None,TCHAR **EndPoint None,TCHAR **NetworkOptions None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcStringBindingParseA(TCHAR *StringBinding None,TCHAR **ObjectUuid None,TCHAR **ProtSeq None,TCHAR **NetworkAddr None,TCHAR **EndPoint None,TCHAR **NetworkOptions None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcMgmtEpUnregister(RPC_BINDING_HANDLE EpBinding None,RPC_IF_ID *IfId None,RPC_BINDING_HANDLE Binding None,UUID *ObjectUuid None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcErrorGetNextRecord(_In_ RPC_ERROR_ENUM_HANDLE *EnumHandle,_In_ BOOL CopyStrings,_Out_ RPC_EXTENDED_ERROR_INFO *ErrorInfo)
RPC_STATUS RPC_ENTRY rpcrt4.RpcErrorGetNextRecord(_In_ RPC_ERROR_ENUM_HANDLE *EnumHandle,_In_ BOOL CopyStrings,_Out_ RPC_EXTENDED_ERROR_INFO *ErrorInfo)
RPC_STATUS RPC_ENTRY rpcrt4.RpcGetAuthorizationContextForClient(_In_opt_ RPC_BINDING_HANDLE ClientBinding,_In_ BOOL ImpersonateOnReturn,_In_ PVOID Reserved1,_In_opt_ PLARGE_INTEGER pExpirationTime,_In_ LUID Reserved2,_In_ DWORD Reserved3,_In_ PVOID Reserved4,_Out_ PVOID *pAuthzClientContext)
RPC_STATUS RPC_ENTRY rpcrt4.RpcEpResolveBinding(RPC_BINDING_HANDLE Binding None,RPC_IF_HANDLE IfSpec None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcImpersonateClient(RPC_BINDING_HANDLE BindingHandle None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcSmSetThreadHandle(RPC_SS_THREAD_HANDLE Handle None)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsBindingLookupDone(RPC_NS_HANDLE *LookupContext None)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsBindingSelect(RPC_BINDING_VECTOR *BindingVec None,RPC_BINDING_HANDLE *Binding None)
ULONG STDMETHODCALLTYPE rpcrt4.IUnknown_Release_Proxy(IUnknown __RPC_FAR *This)
RPC_STATUS RPC_ENTRY rpcrt4.RpcEpResolveBinding(RPC_BINDING_HANDLE Binding None,RPC_IF_HANDLE IfSpec None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcMgmtStopServerListening(RPC_BINDING_HANDLE Binding None)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsBindingLookupDone(RPC_NS_HANDLE *LookupContext None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcEpResolveBinding(RPC_BINDING_HANDLE Binding None,RPC_IF_HANDLE IfSpec None)
NDR_SCONTEXT RPC_ENTRY rpcrt4.NdrContextHandleInitialize(PMIDL_STUB_MESSAGE pStubMsg None,PFORMAT_STRING pFormat None)
HRESULT STDMETHODCALLTYPE ole32.CStdAsyncStubBuffer_Connect(_In_ IRpcStubBuffer *pthis,_In_ IUnknown *pUnkServer)
RPC_STATUS RPC_ENTRY rpcrt4.RpcEpResolveBinding(RPC_BINDING_HANDLE Binding None,RPC_IF_HANDLE IfSpec None)
ULONG STDMETHODCALLTYPE ole32.CStdAsyncStubBuffer2_Release(_In_ IRpcStubBuffer *pthis)
HRESULT STDMETHODCALLTYPE ole32.CStdAsyncStubBuffer_Invoke(_In_ IRpcStubBuffer *pthis,_In_ RPCOLEMESSAGE *_prpcmsg,_In_ IRpcChannelBuffer *_pRpcChannelBuffer)
HRESULT STDMETHODCALLTYPE ole32.CStdAsyncStubBuffer_Connect(_In_ IRpcStubBuffer *pthis,_In_ IUnknown *pUnkServer)
RPC_STATUS RPC_ENTRY rpcrt4.RpcImpersonateClient(RPC_BINDING_HANDLE BindingHandle None)
HRESULT STDMETHODCALLTYPE ole32.CStdAsyncStubBuffer_Connect(_In_ IRpcStubBuffer *pthis,_In_ IUnknown *pUnkServer)
ULONG STDMETHODCALLTYPE rpcrt4.NdrCStdStubBuffer2_Release(_In_ IRpcStubBuffer *This,_In_ IPSFactoryBuffer *pPSF)
CLIENT_CALL_RETURN RPC_VAR_ENTRY rpcrt4.NdrClientCall2(_In_ PMIDL_STUB_DESC pStubDescriptor,_In_ PFORMAT_STRING pFormat,_Inout_ ... None)
ULONG STDMETHODCALLTYPE rpcrt4.CStdStubBuffer_CountRefs(_In_ IRpcStubBuffer *This)
ULONG STDMETHODCALLTYPE rpcrt4.IUnknown_AddRef_Proxy(IUnknown __RPC_FAR *This)
ULONG STDMETHODCALLTYPE ole32.CStdAsyncStubBuffer_AddRef(_In_ IRpcStubBuffer *pthis)
ULONG STDMETHODCALLTYPE rpcrt4.NdrCStdStubBuffer_Release(_In_ IRpcStubBuffer *This,_In_ IPSFactoryBuffer *pPSF)
ULONG STDMETHODCALLTYPE rpcrt4.NdrCStdStubBuffer2_Release(_In_ IRpcStubBuffer *This,_In_ IPSFactoryBuffer *pPSF)
IRpcStubBuffer* STDMETHODCALLTYPE rpcrt4.CStdStubBuffer_IsIIDSupported(_In_ IRpcStubBuffer *This,_In_ REFIID riid)
HRESULT STDMETHODCALLTYPE rpcrt4.CStdStubBuffer_Connect(_In_ IRpcStubBuffer *This,_In_ IUnknown *pUnkServer)
CLIENT_CALL_RETURN RPC_VAR_ENTRY rpcrt4.NdrClientCall(_In_ PMIDL_STUB_DESC pStubDescriptor,_In_ PFORMAT_STRING pFormat,_Inout_ ... None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcBindingServerFromClient(RPC_BINDING_HANDLE ClientBinding None,RPC_BINDING_HANDLE *ServerBinding None)
ULONG STDMETHODCALLTYPE rpcrt4.IUnknown_AddRef_Proxy(IUnknown __RPC_FAR *This)
ULONG STDMETHODCALLTYPE ole32.CStdAsyncStubBuffer_AddRef(_In_ IRpcStubBuffer *pthis)
RPC_STATUS RPC_ENTRY rpcrt4.RpcBindingServerFromClient(RPC_BINDING_HANDLE ClientBinding None,RPC_BINDING_HANDLE *ServerBinding None)
ULONG STDMETHODCALLTYPE rpcrt4.CStdStubBuffer_CountRefs(_In_ IRpcStubBuffer *This)
HRESULT STDMETHODCALLTYPE ole32.CStdStubBuffer2_Connect(_In_ IRpcStubBuffer *pthis,_In_ IUnknown *pUnkServer)
ULONG STDMETHODCALLTYPE ole32.CStdStubBuffer2_CountRefs(_In_ IRpcStubBuffer *pthis)
ULONG STDMETHODCALLTYPE ole32.CStdAsyncStubBuffer_Release(_In_ IRpcStubBuffer *pthis)
HRESULT STDMETHODCALLTYPE ole32.CStdAsyncStubBuffer2_Connect(_In_ IRpcStubBuffer *pthis,_In_ IUnknown *pUnkServer)
RPC_STATUS RPC_ENTRY rpcrt4.RpcSmSetThreadHandle(RPC_SS_THREAD_HANDLE Handle None)
HRESULT STDMETHODCALLTYPE rpcrt4.CStdStubBuffer_Invoke(_In_ IRpcStubBuffer *This,_In_ RPCOLEMESSAGE *pRpcMsg,_In_ IRpcChannelBuffer *pRpcChannelBuffer)
ULONG STDMETHODCALLTYPE rpcrt4.CStdStubBuffer_CountRefs(_In_ IRpcStubBuffer *This)
ULONG STDMETHODCALLTYPE ole32.CStdStubBuffer2_CountRefs(_In_ IRpcStubBuffer *pthis)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsBindingLookupDone(RPC_NS_HANDLE *LookupContext None)
ULONG STDMETHODCALLTYPE rpcrt4.NdrCStdStubBuffer2_Release(_In_ IRpcStubBuffer *This,_In_ IPSFactoryBuffer *pPSF)
ULONG STDMETHODCALLTYPE ole32.CStdAsyncStubBuffer_Release(_In_ IRpcStubBuffer *pthis)
ULONG STDMETHODCALLTYPE ole32.CStdStubBuffer2_CountRefs(_In_ IRpcStubBuffer *pthis)
CLIENT_CALL_RETURN RPC_VAR_ENTRY rpcrt4.NdrClientCall2(_In_ PMIDL_STUB_DESC pStubDescriptor,_In_ PFORMAT_STRING pFormat,_Inout_ ... None)
HRESULT STDMETHODCALLTYPE ole32.CStdStubBuffer2_Connect(_In_ IRpcStubBuffer *pthis,_In_ IUnknown *pUnkServer)
HRESULT STDMETHODCALLTYPE ole32.CStdAsyncStubBuffer2_Connect(_In_ IRpcStubBuffer *pthis,_In_ IUnknown *pUnkServer)
ULONG STDMETHODCALLTYPE ole32.CStdStubBuffer2_CountRefs(_In_ IRpcStubBuffer *pthis)
ULONG STDMETHODCALLTYPE ole32.CStdAsyncStubBuffer_Release(_In_ IRpcStubBuffer *pthis)
ULONG STDMETHODCALLTYPE rpcrt4.CStdStubBuffer_CountRefs(_In_ IRpcStubBuffer *This)
ULONG STDMETHODCALLTYPE rpcrt4.NdrCStdStubBuffer2_Release(_In_ IRpcStubBuffer *This,_In_ IPSFactoryBuffer *pPSF)
HRESULT STDMETHODCALLTYPE ole32.CStdAsyncStubBuffer2_Connect(_In_ IRpcStubBuffer *pthis,_In_ IUnknown *pUnkServer)
CLIENT_CALL_RETURN RPC_VAR_ENTRY rpcrt4.NdrClientCall(_In_ PMIDL_STUB_DESC pStubDescriptor,_In_ PFORMAT_STRING pFormat,_Inout_ ... None)
ULONG STDMETHODCALLTYPE ole32.CStdStubBuffer2_CountRefs(_In_ IRpcStubBuffer *pthis)
BOOL WINAPI advapi32.ConvertStringSecurityDescriptorToSecurityDescriptor(_In_ LPCTSTR StringSecurityDescriptor,_In_ DWORD StringSDRevision,_Out_ PSECURITY_DESCRIPTOR *SecurityDescriptor,_Out_ PULONG SecurityDescriptorSize)
BOOL WINAPI advapi32.ConvertStringSecurityDescriptorToSecurityDescriptorW(_In_ LPCTSTR StringSecurityDescriptor,_In_ DWORD StringSDRevision,_Out_ PSECURITY_DESCRIPTOR *SecurityDescriptor,_Out_ PULONG SecurityDescriptorSize)
BOOL WINAPI advapi32.ConvertStringSecurityDescriptorToSecurityDescriptorA(_In_ LPCTSTR StringSecurityDescriptor,_In_ DWORD StringSDRevision,_Out_ PSECURITY_DESCRIPTOR *SecurityDescriptor,_Out_ PULONG SecurityDescriptorSize)
BOOL WINAPI authz.AuthzAddSidsToContext(_In_ AUTHZ_CLIENT_CONTEXT_HANDLE OrigClientContext,_In_ PSID_AND_ATTRIBUTES Sids,_In_ DWORD SidCount,_In_ PSID_AND_ATTRIBUTES RestrictedSids,_In_ DWORD RestrictedSidCount,_Out_ PAUTHZ_CLIENT_CONTEXT_HANDLE pNewClientContext)
UINT WINAPI kernel32.GetPrivateProfileInt(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ INT nDefault,_In_ LPCTSTR lpFileName)
UINT WINAPI kernel32.GetPrivateProfileIntW(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ INT nDefault,_In_ LPCTSTR lpFileName)
UINT WINAPI kernel32.GetPrivateProfileIntA(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ INT nDefault,_In_ LPCTSTR lpFileName)
UINT WINAPI kernel32.GetPrivateProfileInt(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ INT nDefault,_In_ LPCTSTR lpFileName)
UINT WINAPI kernel32.GetPrivateProfileIntW(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ INT nDefault,_In_ LPCTSTR lpFileName)
UINT WINAPI kernel32.GetPrivateProfileIntA(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ INT nDefault,_In_ LPCTSTR lpFileName)
BOOL WINAPI advapi32.EqualSid(_In_ PSID pSid1,_In_ PSID pSid2)
BOOL WINAPI advapi32.ConvertStringSecurityDescriptorToSecurityDescriptor(_In_ LPCTSTR StringSecurityDescriptor,_In_ DWORD StringSDRevision,_Out_ PSECURITY_DESCRIPTOR *SecurityDescriptor,_Out_ PULONG SecurityDescriptorSize)
BOOL WINAPI advapi32.ConvertStringSecurityDescriptorToSecurityDescriptorW(_In_ LPCTSTR StringSecurityDescriptor,_In_ DWORD StringSDRevision,_Out_ PSECURITY_DESCRIPTOR *SecurityDescriptor,_Out_ PULONG SecurityDescriptorSize)
BOOL WINAPI advapi32.ConvertStringSecurityDescriptorToSecurityDescriptorA(_In_ LPCTSTR StringSecurityDescriptor,_In_ DWORD StringSDRevision,_Out_ PSECURITY_DESCRIPTOR *SecurityDescriptor,_Out_ PULONG SecurityDescriptorSize)
BOOL WINAPI advapi32.CreatePrivateObjectSecurityEx(_In_opt_ PSECURITY_DESCRIPTOR ParentDescriptor,_In_opt_ PSECURITY_DESCRIPTOR CreatorDescriptor,_Out_ PSECURITY_DESCRIPTOR *NewDescriptor,_In_opt_ GUID *ObjectType,_In_ BOOL IsContainerObject,_In_ ULONG AutoInheritFlags,_In_opt_ HANDLE Token,_In_ PGENERIC_MAPPING GenericMapping)
VOID WINAPI advapi32.BuildExplicitAccessWithName(_Inout_ PEXPLICIT_ACCESS pExplicitAccess,_In_opt_ LPTSTR pTrusteeName,_In_ DWORD AccessPermissions,_In_ ACCESS_MODE AccessMode,_In_ DWORD Inheritance)
VOID WINAPI advapi32.BuildExplicitAccessWithNameW(_Inout_ PEXPLICIT_ACCESS pExplicitAccess,_In_opt_ LPTSTR pTrusteeName,_In_ DWORD AccessPermissions,_In_ ACCESS_MODE AccessMode,_In_ DWORD Inheritance)
VOID WINAPI advapi32.BuildExplicitAccessWithNameA(_Inout_ PEXPLICIT_ACCESS pExplicitAccess,_In_opt_ LPTSTR pTrusteeName,_In_ DWORD AccessPermissions,_In_ ACCESS_MODE AccessMode,_In_ DWORD Inheritance)
UINT WINAPI kernel32.GetPrivateProfileInt(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ INT nDefault,_In_ LPCTSTR lpFileName)
UINT WINAPI kernel32.GetPrivateProfileIntW(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ INT nDefault,_In_ LPCTSTR lpFileName)
UINT WINAPI kernel32.GetPrivateProfileIntA(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ INT nDefault,_In_ LPCTSTR lpFileName)
BOOL WINAPI advapi32.CreatePrivateObjectSecurityEx(_In_opt_ PSECURITY_DESCRIPTOR ParentDescriptor,_In_opt_ PSECURITY_DESCRIPTOR CreatorDescriptor,_Out_ PSECURITY_DESCRIPTOR *NewDescriptor,_In_opt_ GUID *ObjectType,_In_ BOOL IsContainerObject,_In_ ULONG AutoInheritFlags,_In_opt_ HANDLE Token,_In_ PGENERIC_MAPPING GenericMapping)
DWORD WINAPI advapi32.GetNamedSecurityInfo(_In_ LPTSTR pObjectName,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_Out_opt_ PSID *ppsidOwner,_Out_opt_ PSID *ppsidGroup,_Out_opt_ PACL *ppDacl,_Out_opt_ PACL *ppSacl,_Out_opt_ PSECURITY_DESCRIPTOR *ppSecurityDescriptor)
DWORD WINAPI advapi32.GetNamedSecurityInfoW(_In_ LPTSTR pObjectName,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_Out_opt_ PSID *ppsidOwner,_Out_opt_ PSID *ppsidGroup,_Out_opt_ PACL *ppDacl,_Out_opt_ PACL *ppSacl,_Out_opt_ PSECURITY_DESCRIPTOR *ppSecurityDescriptor)
DWORD WINAPI advapi32.GetNamedSecurityInfoA(_In_ LPTSTR pObjectName,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_Out_opt_ PSID *ppsidOwner,_Out_opt_ PSID *ppsidGroup,_Out_opt_ PACL *ppDacl,_Out_opt_ PACL *ppSacl,_Out_opt_ PSECURITY_DESCRIPTOR *ppSecurityDescriptor)
BOOL WINAPI advapi32.ConvertStringSecurityDescriptorToSecurityDescriptor(_In_ LPCTSTR StringSecurityDescriptor,_In_ DWORD StringSDRevision,_Out_ PSECURITY_DESCRIPTOR *SecurityDescriptor,_Out_ PULONG SecurityDescriptorSize)
BOOL WINAPI advapi32.ConvertStringSecurityDescriptorToSecurityDescriptorW(_In_ LPCTSTR StringSecurityDescriptor,_In_ DWORD StringSDRevision,_Out_ PSECURITY_DESCRIPTOR *SecurityDescriptor,_Out_ PULONG SecurityDescriptorSize)
BOOL WINAPI advapi32.ConvertStringSecurityDescriptorToSecurityDescriptorA(_In_ LPCTSTR StringSecurityDescriptor,_In_ DWORD StringSDRevision,_Out_ PSECURITY_DESCRIPTOR *SecurityDescriptor,_Out_ PULONG SecurityDescriptorSize)
BOOL WINAPI advapi32.ObjectDeleteAuditAlarm(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ BOOL GenerateOnClose)
BOOL WINAPI advapi32.ObjectDeleteAuditAlarmW(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ BOOL GenerateOnClose)
BOOL WINAPI advapi32.ObjectDeleteAuditAlarmA(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ BOOL GenerateOnClose)
BOOL WINAPI advapi32.ObjectDeleteAuditAlarm(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ BOOL GenerateOnClose)
BOOL WINAPI advapi32.ObjectDeleteAuditAlarmW(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ BOOL GenerateOnClose)
BOOL WINAPI advapi32.ObjectDeleteAuditAlarmA(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ BOOL GenerateOnClose)
BOOL WINAPI advapi32.GetSecurityDescriptorDacl(_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_Out_ LPBOOL lpbDaclPresent,_Out_ PACL *pDacl,_Out_ LPBOOL lpbDaclDefaulted)
BOOL WINAPI kernel32.DeviceIoControl(_In_ HANDLE hDevice,_In_ DWORD dwIoControlCode,_In_opt_ LPVOID lpInBuffer,_In_ DWORD nInBufferSize,_Out_opt_ LPVOID lpOutBuffer,_In_ DWORD nOutBufferSize,_Out_opt_ LPDWORD lpBytesReturned,_Inout_opt_ LPOVERLAPPED lpOverlapped)
LONG WINAPI storprop.CdromDisableDigitalPlayback(_In_ HDEVINFO DevInfo,_In_ PSP_DEVINFO_DATA DevInfoData)
BOOL WINAPI newdev.InstallNewDevice(_In_ HWND hwndParent,_In_ LPGUID ClassGuid,_Out_ PDWORD pReboot)
LONG WINAPI storprop.CdromDisableDigitalPlayback(_In_ HDEVINFO DevInfo,_In_ PSP_DEVINFO_DATA DevInfoData)
LONG WINAPI storprop.CdromDisableDigitalPlayback(_In_ HDEVINFO DevInfo,_In_ PSP_DEVINFO_DATA DevInfoData)
BOOL WINAPI advapi32.EqualSid(_In_ PSID pSid1,_In_ PSID pSid2)
LONG WINAPI storprop.CdromDisableDigitalPlayback(_In_ HDEVINFO DevInfo,_In_ PSP_DEVINFO_DATA DevInfoData)
LONG WINAPI storprop.CdromDisableDigitalPlayback(_In_ HDEVINFO DevInfo,_In_ PSP_DEVINFO_DATA DevInfoData)
BOOL WINAPI advapi32.EqualSid(_In_ PSID pSid1,_In_ PSID pSid2)
BOOL WINAPI authz.AuthzInitializeResourceManagerEx(_In_opt_ DWORD Flags,_In_opt_ PVOID pAuthzInitInfo,_Out_ PAUTHZ_RESOURCE_MANAGER_HANDLE phAuthzResourceManager)
BOOL WINAPI user32.SetUserObjectSecurity(_In_ HANDLE hObj,_In_ PSECURITY_INFORMATION pSIRequested,_In_ PSECURITY_DESCRIPTOR pSID)
BOOL WINAPI storprop.DvdLauncher(_In_ HWND HWnd,_In_ CHAR DriveLetter)
LONG WINAPI storprop.CdromDisableDigitalPlayback(_In_ HDEVINFO DevInfo,_In_ PSP_DEVINFO_DATA DevInfoData)
LONG WINAPI storprop.CdromIsDigitalPlaybackEnabled(_In_ HDEVINFO DevInfo,_In_ PSP_DEVINFO_DATA DevInfoData,_Out_ PBOOLEAN Enabled)
BOOL WINAPI newdev.InstallNewDevice(_In_ HWND hwndParent,_In_ LPGUID ClassGuid,_Out_ PDWORD pReboot)
BOOL WINAPI advapi32.SetThreadToken(_In_opt_ PHANDLE Thread,_In_opt_ HANDLE Token)
LONG WINAPI storprop.CdromDisableDigitalPlayback(_In_ HDEVINFO DevInfo,_In_ PSP_DEVINFO_DATA DevInfoData)
BOOL WINAPI advapi32.ObjectDeleteAuditAlarm(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ BOOL GenerateOnClose)
BOOL WINAPI advapi32.ObjectDeleteAuditAlarmW(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ BOOL GenerateOnClose)
BOOL WINAPI advapi32.ObjectDeleteAuditAlarmA(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ BOOL GenerateOnClose)
BOOL WINAPI advapi32.EqualSid(_In_ PSID pSid1,_In_ PSID pSid2)
LONG WINAPI storprop.CdromIsDigitalPlaybackEnabled(_In_ HDEVINFO DevInfo,_In_ PSP_DEVINFO_DATA DevInfoData,_Out_ PBOOLEAN Enabled)
BOOL WINAPI newdev.InstallNewDevice(_In_ HWND hwndParent,_In_ LPGUID ClassGuid,_Out_ PDWORD pReboot)
BOOL WINAPI user32.UnregisterDeviceNotification(_In_ HDEVNOTIFY Handle)
HDEVNOTIFY WINAPI user32.RegisterDeviceNotification(_In_ HANDLE hRecipient,_In_ LPVOID NotificationFilter,_In_ DWORD Flags)
HDEVNOTIFY WINAPI user32.RegisterDeviceNotificationW(_In_ HANDLE hRecipient,_In_ LPVOID NotificationFilter,_In_ DWORD Flags)
HDEVNOTIFY WINAPI user32.RegisterDeviceNotificationA(_In_ HANDLE hRecipient,_In_ LPVOID NotificationFilter,_In_ DWORD Flags)
BOOL WINAPI advapi32.CreateRestrictedToken(_In_ HANDLE ExistingTokenHandle,_In_ DWORD Flags,_In_ DWORD DisableSidCount,_In_opt_ PSID_AND_ATTRIBUTES SidsToDisable,_In_ DWORD DeletePrivilegeCount,_In_opt_ PLUID_AND_ATTRIBUTES PrivilegesToDelete,_In_ DWORD RestrictedSidCount,_In_opt_ PSID_AND_ATTRIBUTES SidsToRestrict,_Out_ PHANDLE NewTokenHandle)
LONG WINAPI storprop.CdromIsDigitalPlaybackEnabled(_In_ HDEVINFO DevInfo,_In_ PSP_DEVINFO_DATA DevInfoData,_Out_ PBOOLEAN Enabled)
BOOL CALLBACK None.AuthzAccessCheckCallback(_In_ AUTHZ_CLIENT_CONTEXT_HANDLE hAuthzClientContext,_In_ PACE_HEADER pAce,_In_opt_ PVOID pArgs,_Inout_ PBOOL pbAceApplicable)
BOOL WINAPI storprop.DvdLauncher(_In_ HWND HWnd,_In_ CHAR DriveLetter)
BOOL WINAPI user32.UnregisterDeviceNotification(_In_ HDEVNOTIFY Handle)
LONG WINAPI storprop.CdromEnableDigitalPlayback(_In_ HDEVINFO DevInfo,_In_ PSP_DEVINFO_DATA DevInfoData,_In_ BOOLEAN ForceUnknown)
LONG WINAPI storprop.CdromIsDigitalPlaybackEnabled(_In_ HDEVINFO DevInfo,_In_ PSP_DEVINFO_DATA DevInfoData,_Out_ PBOOLEAN Enabled)
BOOL WINAPI storprop.CdromKnownGoodDigitalPlayback(_In_ HDEVINFO DevInfo,_In_ PSP_DEVINFO_DATA DevInfoData)
BOOL WINAPI user32.UnregisterDeviceNotification(_In_ HDEVNOTIFY Handle)
BOOL WINAPI advapi32.AllocateLocallyUniqueId(_Out_ PLUID Luid)
HRESULT WINAPI aclui.EditSecurityAdvanced(_In_ HWND hwndOwner,_In_ LPSECURITYINFO psi,_In_ SI_PAGE_TYPE uSIPage)
HDEVNOTIFY WINAPI user32.RegisterDeviceNotification(_In_ HANDLE hRecipient,_In_ LPVOID NotificationFilter,_In_ DWORD Flags)
HDEVNOTIFY WINAPI user32.RegisterDeviceNotificationW(_In_ HANDLE hRecipient,_In_ LPVOID NotificationFilter,_In_ DWORD Flags)
HDEVNOTIFY WINAPI user32.RegisterDeviceNotificationA(_In_ HANDLE hRecipient,_In_ LPVOID NotificationFilter,_In_ DWORD Flags)
HDEVNOTIFY WINAPI user32.RegisterDeviceNotification(_In_ HANDLE hRecipient,_In_ LPVOID NotificationFilter,_In_ DWORD Flags)
HDEVNOTIFY WINAPI user32.RegisterDeviceNotificationW(_In_ HANDLE hRecipient,_In_ LPVOID NotificationFilter,_In_ DWORD Flags)
HDEVNOTIFY WINAPI user32.RegisterDeviceNotificationA(_In_ HANDLE hRecipient,_In_ LPVOID NotificationFilter,_In_ DWORD Flags)
BOOL WINAPI user32.UnregisterDeviceNotification(_In_ HDEVNOTIFY Handle)
LONG WINAPI storprop.CdromEnableDigitalPlayback(_In_ HDEVINFO DevInfo,_In_ PSP_DEVINFO_DATA DevInfoData,_In_ BOOLEAN ForceUnknown)
BOOL WINAPI advapi32.ObjectDeleteAuditAlarm(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ BOOL GenerateOnClose)
BOOL WINAPI advapi32.ObjectDeleteAuditAlarmW(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ BOOL GenerateOnClose)
BOOL WINAPI advapi32.ObjectDeleteAuditAlarmA(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ BOOL GenerateOnClose)
BOOL WINAPI user32.UnregisterDeviceNotification(_In_ HDEVNOTIFY Handle)
BOOL WINAPI authz.AuthzInitializeResourceManagerEx(_In_opt_ DWORD Flags,_In_opt_ PVOID pAuthzInitInfo,_Out_ PAUTHZ_RESOURCE_MANAGER_HANDLE phAuthzResourceManager)
LONG WINAPI storprop.CdromEnableDigitalPlayback(_In_ HDEVINFO DevInfo,_In_ PSP_DEVINFO_DATA DevInfoData,_In_ BOOLEAN ForceUnknown)
HDEVNOTIFY WINAPI user32.RegisterDeviceNotification(_In_ HANDLE hRecipient,_In_ LPVOID NotificationFilter,_In_ DWORD Flags)
HDEVNOTIFY WINAPI user32.RegisterDeviceNotificationW(_In_ HANDLE hRecipient,_In_ LPVOID NotificationFilter,_In_ DWORD Flags)
HDEVNOTIFY WINAPI user32.RegisterDeviceNotificationA(_In_ HANDLE hRecipient,_In_ LPVOID NotificationFilter,_In_ DWORD Flags)
LONG WINAPI storprop.CdromEnableDigitalPlayback(_In_ HDEVINFO DevInfo,_In_ PSP_DEVINFO_DATA DevInfoData,_In_ BOOLEAN ForceUnknown)
BOOL CALLBACK None.AuthzAccessCheckCallback(_In_ AUTHZ_CLIENT_CONTEXT_HANDLE hAuthzClientContext,_In_ PACE_HEADER pAce,_In_opt_ PVOID pArgs,_Inout_ PBOOL pbAceApplicable)
BOOL WINAPI authz.AuthzInitializeResourceManagerEx(_In_opt_ DWORD Flags,_In_opt_ PVOID pAuthzInitInfo,_Out_ PAUTHZ_RESOURCE_MANAGER_HANDLE phAuthzResourceManager)
LONG WINAPI storprop.CdromEnableDigitalPlayback(_In_ HDEVINFO DevInfo,_In_ PSP_DEVINFO_DATA DevInfoData,_In_ BOOLEAN ForceUnknown)
BOOL WINAPI storprop.CdromKnownGoodDigitalPlayback(_In_ HDEVINFO DevInfo,_In_ PSP_DEVINFO_DATA DevInfoData)
HDEVNOTIFY WINAPI user32.RegisterDeviceNotification(_In_ HANDLE hRecipient,_In_ LPVOID NotificationFilter,_In_ DWORD Flags)
HDEVNOTIFY WINAPI user32.RegisterDeviceNotificationW(_In_ HANDLE hRecipient,_In_ LPVOID NotificationFilter,_In_ DWORD Flags)
HDEVNOTIFY WINAPI user32.RegisterDeviceNotificationA(_In_ HANDLE hRecipient,_In_ LPVOID NotificationFilter,_In_ DWORD Flags)
BOOL WINAPI user32.UnregisterDeviceNotification(_In_ HDEVNOTIFY Handle)
BOOL WINAPI advapi32.SetThreadToken(_In_opt_ PHANDLE Thread,_In_opt_ HANDLE Token)
DWORD WINAPI advapi32.TreeResetNamedSecurityInfo(_In_ LPTSTR pObjectName,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_In_opt_ PSID pOwner,_In_opt_ PSID pGroup,_In_opt_ PACL pDacl,_In_opt_ PACL pSacl,_In_ BOOL KeepExplicit,_In_opt_ FN_PROGRESS fnProgress,_In_ PROG_INVOKE_SETTING ProgressInvokeSetting,_In_opt_ PVOID Args)
DWORD WINAPI advapi32.TreeResetNamedSecurityInfoW(_In_ LPTSTR pObjectName,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_In_opt_ PSID pOwner,_In_opt_ PSID pGroup,_In_opt_ PACL pDacl,_In_opt_ PACL pSacl,_In_ BOOL KeepExplicit,_In_opt_ FN_PROGRESS fnProgress,_In_ PROG_INVOKE_SETTING ProgressInvokeSetting,_In_opt_ PVOID Args)
DWORD WINAPI advapi32.TreeResetNamedSecurityInfoA(_In_ LPTSTR pObjectName,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_In_opt_ PSID pOwner,_In_opt_ PSID pGroup,_In_opt_ PACL pDacl,_In_opt_ PACL pSacl,_In_ BOOL KeepExplicit,_In_opt_ FN_PROGRESS fnProgress,_In_ PROG_INVOKE_SETTING ProgressInvokeSetting,_In_opt_ PVOID Args)
DWORD WINAPI None.HandlerEx(_In_ DWORD dwControl,_In_ DWORD dwEventType,_In_ LPVOID lpEventData,_In_ LPVOID lpContext)
HDEVNOTIFY WINAPI user32.RegisterDeviceNotification(_In_ HANDLE hRecipient,_In_ LPVOID NotificationFilter,_In_ DWORD Flags)
HDEVNOTIFY WINAPI user32.RegisterDeviceNotificationW(_In_ HANDLE hRecipient,_In_ LPVOID NotificationFilter,_In_ DWORD Flags)
HDEVNOTIFY WINAPI user32.RegisterDeviceNotificationA(_In_ HANDLE hRecipient,_In_ LPVOID NotificationFilter,_In_ DWORD Flags)
DWORD WINAPI advapi32.GetNamedSecurityInfo(_In_ LPTSTR pObjectName,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_Out_opt_ PSID *ppsidOwner,_Out_opt_ PSID *ppsidGroup,_Out_opt_ PACL *ppDacl,_Out_opt_ PACL *ppSacl,_Out_opt_ PSECURITY_DESCRIPTOR *ppSecurityDescriptor)
DWORD WINAPI advapi32.GetNamedSecurityInfoW(_In_ LPTSTR pObjectName,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_Out_opt_ PSID *ppsidOwner,_Out_opt_ PSID *ppsidGroup,_Out_opt_ PACL *ppDacl,_Out_opt_ PACL *ppSacl,_Out_opt_ PSECURITY_DESCRIPTOR *ppSecurityDescriptor)
DWORD WINAPI advapi32.GetNamedSecurityInfoA(_In_ LPTSTR pObjectName,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_Out_opt_ PSID *ppsidOwner,_Out_opt_ PSID *ppsidGroup,_Out_opt_ PACL *ppDacl,_Out_opt_ PACL *ppSacl,_Out_opt_ PSECURITY_DESCRIPTOR *ppSecurityDescriptor)
HDEVNOTIFY WINAPI user32.RegisterDeviceNotification(_In_ HANDLE hRecipient,_In_ LPVOID NotificationFilter,_In_ DWORD Flags)
HDEVNOTIFY WINAPI user32.RegisterDeviceNotificationW(_In_ HANDLE hRecipient,_In_ LPVOID NotificationFilter,_In_ DWORD Flags)
HDEVNOTIFY WINAPI user32.RegisterDeviceNotificationA(_In_ HANDLE hRecipient,_In_ LPVOID NotificationFilter,_In_ DWORD Flags)
BOOL WINAPI user32.PostThreadMessage(_In_ DWORD idThread,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
BOOL WINAPI user32.PostThreadMessageW(_In_ DWORD idThread,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
BOOL WINAPI user32.PostThreadMessageA(_In_ DWORD idThread,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
DWORD WINAPI None.HandlerEx(_In_ DWORD dwControl,_In_ DWORD dwEventType,_In_ LPVOID lpEventData,_In_ LPVOID lpContext)
BOOL WINAPI user32.SetUserObjectSecurity(_In_ HANDLE hObj,_In_ PSECURITY_INFORMATION pSIRequested,_In_ PSECURITY_DESCRIPTOR pSID)
BOOL WINAPI user32.UnregisterDeviceNotification(_In_ HDEVNOTIFY Handle)
BOOL WINAPI advapi32.DeleteService(_In_ SC_HANDLE hService)
BOOL WINAPI advapi32.SetThreadToken(_In_opt_ PHANDLE Thread,_In_opt_ HANDLE Token)
BOOL WINAPI advapi32.ControlService(_In_ SC_HANDLE hService,_In_ DWORD dwControl,_Out_ LPSERVICE_STATUS lpServiceStatus)
BOOL WINAPI advapi32.SetServiceBits(_In_ SERVICE_STATUS_HANDLE hServiceStatus,_In_ DWORD dwServiceBits,_In_ BOOL bSetBitsOn,_In_ BOOL bUpdateImmediately)
BOOL WINAPI user32.PostThreadMessage(_In_ DWORD idThread,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
BOOL WINAPI user32.PostThreadMessageW(_In_ DWORD idThread,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
BOOL WINAPI user32.PostThreadMessageA(_In_ DWORD idThread,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
LRESULT WINAPI user32.SendMessageTimeout(_In_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam,_In_ UINT fuFlags,_In_ UINT uTimeout,_Out_opt_ PDWORD_PTR lpdwResult)
LRESULT WINAPI user32.SendMessageTimeoutW(_In_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam,_In_ UINT fuFlags,_In_ UINT uTimeout,_Out_opt_ PDWORD_PTR lpdwResult)
LRESULT WINAPI user32.SendMessageTimeoutA(_In_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam,_In_ UINT fuFlags,_In_ UINT uTimeout,_Out_opt_ PDWORD_PTR lpdwResult)
BOOL WINAPI kernel32.InstallELAMCertificateInfo(_In_ HANDLE ELAMFile)
LRESULT WINAPI user32.SendMessage(_In_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
LRESULT WINAPI user32.SendMessageW(_In_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
LRESULT WINAPI user32.SendMessageA(_In_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
DWORD WINAPI advapi32.TreeResetNamedSecurityInfo(_In_ LPTSTR pObjectName,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_In_opt_ PSID pOwner,_In_opt_ PSID pGroup,_In_opt_ PACL pDacl,_In_opt_ PACL pSacl,_In_ BOOL KeepExplicit,_In_opt_ FN_PROGRESS fnProgress,_In_ PROG_INVOKE_SETTING ProgressInvokeSetting,_In_opt_ PVOID Args)
DWORD WINAPI advapi32.TreeResetNamedSecurityInfoW(_In_ LPTSTR pObjectName,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_In_opt_ PSID pOwner,_In_opt_ PSID pGroup,_In_opt_ PACL pDacl,_In_opt_ PACL pSacl,_In_ BOOL KeepExplicit,_In_opt_ FN_PROGRESS fnProgress,_In_ PROG_INVOKE_SETTING ProgressInvokeSetting,_In_opt_ PVOID Args)
DWORD WINAPI advapi32.TreeResetNamedSecurityInfoA(_In_ LPTSTR pObjectName,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_In_opt_ PSID pOwner,_In_opt_ PSID pGroup,_In_opt_ PACL pDacl,_In_opt_ PACL pSacl,_In_ BOOL KeepExplicit,_In_opt_ FN_PROGRESS fnProgress,_In_ PROG_INVOKE_SETTING ProgressInvokeSetting,_In_opt_ PVOID Args)
SC_HANDLE WINAPI advapi32.CreateService(_In_ SC_HANDLE hSCManager,_In_ LPCTSTR lpServiceName,_In_opt_ LPCTSTR lpDisplayName,_In_ DWORD dwDesiredAccess,_In_ DWORD dwServiceType,_In_ DWORD dwStartType,_In_ DWORD dwErrorControl,_In_opt_ LPCTSTR lpBinaryPathName,_In_opt_ LPCTSTR lpLoadOrderGroup,_Out_opt_ LPDWORD lpdwTagId,_In_opt_ LPCTSTR lpDependencies,_In_opt_ LPCTSTR lpServiceStartName,_In_opt_ LPCTSTR lpPassword)
SC_HANDLE WINAPI advapi32.CreateServiceW(_In_ SC_HANDLE hSCManager,_In_ LPCTSTR lpServiceName,_In_opt_ LPCTSTR lpDisplayName,_In_ DWORD dwDesiredAccess,_In_ DWORD dwServiceType,_In_ DWORD dwStartType,_In_ DWORD dwErrorControl,_In_opt_ LPCTSTR lpBinaryPathName,_In_opt_ LPCTSTR lpLoadOrderGroup,_Out_opt_ LPDWORD lpdwTagId,_In_opt_ LPCTSTR lpDependencies,_In_opt_ LPCTSTR lpServiceStartName,_In_opt_ LPCTSTR lpPassword)
SC_HANDLE WINAPI advapi32.CreateServiceA(_In_ SC_HANDLE hSCManager,_In_ LPCTSTR lpServiceName,_In_opt_ LPCTSTR lpDisplayName,_In_ DWORD dwDesiredAccess,_In_ DWORD dwServiceType,_In_ DWORD dwStartType,_In_ DWORD dwErrorControl,_In_opt_ LPCTSTR lpBinaryPathName,_In_opt_ LPCTSTR lpLoadOrderGroup,_Out_opt_ LPDWORD lpdwTagId,_In_opt_ LPCTSTR lpDependencies,_In_opt_ LPCTSTR lpServiceStartName,_In_opt_ LPCTSTR lpPassword)
BOOL WINAPI advapi32.ControlService(_In_ SC_HANDLE hService,_In_ DWORD dwControl,_Out_ LPSERVICE_STATUS lpServiceStatus)
LRESULT WINAPI user32.SendMessageTimeout(_In_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam,_In_ UINT fuFlags,_In_ UINT uTimeout,_Out_opt_ PDWORD_PTR lpdwResult)
LRESULT WINAPI user32.SendMessageTimeoutW(_In_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam,_In_ UINT fuFlags,_In_ UINT uTimeout,_Out_opt_ PDWORD_PTR lpdwResult)
LRESULT WINAPI user32.SendMessageTimeoutA(_In_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam,_In_ UINT fuFlags,_In_ UINT uTimeout,_Out_opt_ PDWORD_PTR lpdwResult)
BOOL WINAPI user32.SendNotifyMessage(_In_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
BOOL WINAPI user32.SendNotifyMessageW(_In_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
BOOL WINAPI user32.SendNotifyMessageA(_In_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
LRESULT WINAPI user32.SendMessage(_In_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
LRESULT WINAPI user32.SendMessageW(_In_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
LRESULT WINAPI user32.SendMessageA(_In_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
SC_LOCK WINAPI advapi32.LockServiceDatabase(_In_ SC_HANDLE hSCManager)
BOOL WINAPI advapi32.CloseServiceHandle(_In_ SC_HANDLE hSCObject)
BOOL WINAPI user32.PostThreadMessage(_In_ DWORD idThread,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
BOOL WINAPI user32.PostThreadMessageW(_In_ DWORD idThread,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
BOOL WINAPI user32.PostThreadMessageA(_In_ DWORD idThread,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
DWORD WINAPI sechost.SubscribeServiceChangeNotifications(_In_ SC_HANDLE hService,_In_ SC_EVENT_TYPE eEventType,_In_ PSC_NOTIFICATION_CALLBACK pCallback,_In_opt_ PVOID pCallbackContext,_Out_ PSC_NOTIFICATION_REGISTRATION *pSubscription)
LRESULT WINAPI user32.SendMessage(_In_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
LRESULT WINAPI user32.SendMessageW(_In_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
LRESULT WINAPI user32.SendMessageA(_In_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
BOOL WINAPI advapi32.SetThreadToken(_In_opt_ PHANDLE Thread,_In_opt_ HANDLE Token)
BOOL WINAPI advapi32.GetServiceDisplayName(_In_ SC_HANDLE hSCManager,_In_ LPCTSTR lpServiceName,_Out_opt_ LPTSTR lpDisplayName,_Inout_ LPDWORD lpcchBuffer)
BOOL WINAPI advapi32.GetServiceDisplayNameW(_In_ SC_HANDLE hSCManager,_In_ LPCTSTR lpServiceName,_Out_opt_ LPTSTR lpDisplayName,_Inout_ LPDWORD lpcchBuffer)
BOOL WINAPI advapi32.GetServiceDisplayNameA(_In_ SC_HANDLE hSCManager,_In_ LPCTSTR lpServiceName,_Out_opt_ LPTSTR lpDisplayName,_Inout_ LPDWORD lpcchBuffer)
DWORD WINAPI user32.InSendMessageEx(_Reserved_ LPVOID lpReserved)
LRESULT WINAPI user32.SendMessage(_In_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
LRESULT WINAPI user32.SendMessageW(_In_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
LRESULT WINAPI user32.SendMessageA(_In_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
VOID WINAPI None.ServiceMain(_In_ DWORD dwArgc,_In_ LPTSTR *lpszArgv)
BOOL WINAPI authz.AuthzInitializeResourceManagerEx(_In_opt_ DWORD Flags,_In_opt_ PVOID pAuthzInitInfo,_Out_ PAUTHZ_RESOURCE_MANAGER_HANDLE phAuthzResourceManager)
LRESULT WINAPI user32.SendMessageTimeout(_In_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam,_In_ UINT fuFlags,_In_ UINT uTimeout,_Out_opt_ PDWORD_PTR lpdwResult)
LRESULT WINAPI user32.SendMessageTimeoutW(_In_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam,_In_ UINT fuFlags,_In_ UINT uTimeout,_Out_opt_ PDWORD_PTR lpdwResult)
LRESULT WINAPI user32.SendMessageTimeoutA(_In_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam,_In_ UINT fuFlags,_In_ UINT uTimeout,_Out_opt_ PDWORD_PTR lpdwResult)
DWORD WINAPI advapi32.NotifyServiceStatusChange(_In_ SC_HANDLE hService,_In_ DWORD dwNotifyMask,_In_ PSERVICE_NOTIFY pNotifyBuffer)
DWORD WINAPI advapi32.NotifyServiceStatusChangeW(_In_ SC_HANDLE hService,_In_ DWORD dwNotifyMask,_In_ PSERVICE_NOTIFY pNotifyBuffer)
DWORD WINAPI advapi32.NotifyServiceStatusChangeA(_In_ SC_HANDLE hService,_In_ DWORD dwNotifyMask,_In_ PSERVICE_NOTIFY pNotifyBuffer)
BOOL WINAPI advapi32.QueryServiceConfig(_In_ SC_HANDLE hService,_Out_opt_ LPQUERY_SERVICE_CONFIG lpServiceConfig,_In_ DWORD cbBufSize,_Out_ LPDWORD pcbBytesNeeded)
BOOL WINAPI advapi32.QueryServiceConfigW(_In_ SC_HANDLE hService,_Out_opt_ LPQUERY_SERVICE_CONFIG lpServiceConfig,_In_ DWORD cbBufSize,_Out_ LPDWORD pcbBytesNeeded)
BOOL WINAPI advapi32.QueryServiceConfigA(_In_ SC_HANDLE hService,_Out_opt_ LPQUERY_SERVICE_CONFIG lpServiceConfig,_In_ DWORD cbBufSize,_Out_ LPDWORD pcbBytesNeeded)
BOOL WINAPI user32.ReplyMessage(_In_ LRESULT lResult)
SERVICE_STATUS_HANDLE WINAPI advapi32.RegisterServiceCtrlHandlerEx(_In_ LPCTSTR lpServiceName,_In_ LPHANDLER_FUNCTION_EX lpHandlerProc,_In_opt_ LPVOID lpContext)
SERVICE_STATUS_HANDLE WINAPI advapi32.RegisterServiceCtrlHandlerExW(_In_ LPCTSTR lpServiceName,_In_ LPHANDLER_FUNCTION_EX lpHandlerProc,_In_opt_ LPVOID lpContext)
SERVICE_STATUS_HANDLE WINAPI advapi32.RegisterServiceCtrlHandlerExA(_In_ LPCTSTR lpServiceName,_In_ LPHANDLER_FUNCTION_EX lpHandlerProc,_In_opt_ LPVOID lpContext)
VOID WINAPI None.ServiceMain(_In_ DWORD dwArgc,_In_ LPTSTR *lpszArgv)
BOOL WINAPI advapi32.SetServiceStatus(_In_ SERVICE_STATUS_HANDLE hServiceStatus,_In_ LPSERVICE_STATUS lpServiceStatus)
SC_HANDLE WINAPI advapi32.CreateService(_In_ SC_HANDLE hSCManager,_In_ LPCTSTR lpServiceName,_In_opt_ LPCTSTR lpDisplayName,_In_ DWORD dwDesiredAccess,_In_ DWORD dwServiceType,_In_ DWORD dwStartType,_In_ DWORD dwErrorControl,_In_opt_ LPCTSTR lpBinaryPathName,_In_opt_ LPCTSTR lpLoadOrderGroup,_Out_opt_ LPDWORD lpdwTagId,_In_opt_ LPCTSTR lpDependencies,_In_opt_ LPCTSTR lpServiceStartName,_In_opt_ LPCTSTR lpPassword)
SC_HANDLE WINAPI advapi32.CreateServiceW(_In_ SC_HANDLE hSCManager,_In_ LPCTSTR lpServiceName,_In_opt_ LPCTSTR lpDisplayName,_In_ DWORD dwDesiredAccess,_In_ DWORD dwServiceType,_In_ DWORD dwStartType,_In_ DWORD dwErrorControl,_In_opt_ LPCTSTR lpBinaryPathName,_In_opt_ LPCTSTR lpLoadOrderGroup,_Out_opt_ LPDWORD lpdwTagId,_In_opt_ LPCTSTR lpDependencies,_In_opt_ LPCTSTR lpServiceStartName,_In_opt_ LPCTSTR lpPassword)
SC_HANDLE WINAPI advapi32.CreateServiceA(_In_ SC_HANDLE hSCManager,_In_ LPCTSTR lpServiceName,_In_opt_ LPCTSTR lpDisplayName,_In_ DWORD dwDesiredAccess,_In_ DWORD dwServiceType,_In_ DWORD dwStartType,_In_ DWORD dwErrorControl,_In_opt_ LPCTSTR lpBinaryPathName,_In_opt_ LPCTSTR lpLoadOrderGroup,_Out_opt_ LPDWORD lpdwTagId,_In_opt_ LPCTSTR lpDependencies,_In_opt_ LPCTSTR lpServiceStartName,_In_opt_ LPCTSTR lpPassword)
DWORD WINAPI None.HandlerEx(_In_ DWORD dwControl,_In_ DWORD dwEventType,_In_ LPVOID lpEventData,_In_ LPVOID lpContext)
BOOL WINAPI advapi32.QueryServiceDynamicInformation(_In_ SERVICE_STATUS_HANDLE hServiceStatus,_In_ DWORD dwInfoLevel,_Outptr_ PVOID *ppDynamicInfo)
BOOL WINAPI advapi32.EnumServicesStatusEx(_In_ SC_HANDLE hSCManager,_In_ SC_ENUM_TYPE InfoLevel,_In_ DWORD dwServiceType,_In_ DWORD dwServiceState,_Out_opt_ LPBYTE lpServices,_In_ DWORD cbBufSize,_Out_ LPDWORD pcbBytesNeeded,_Out_ LPDWORD lpServicesReturned,_Inout_opt_ LPDWORD lpResumeHandle,_In_opt_ LPCTSTR pszGroupName)
BOOL WINAPI advapi32.EnumServicesStatusExW(_In_ SC_HANDLE hSCManager,_In_ SC_ENUM_TYPE InfoLevel,_In_ DWORD dwServiceType,_In_ DWORD dwServiceState,_Out_opt_ LPBYTE lpServices,_In_ DWORD cbBufSize,_Out_ LPDWORD pcbBytesNeeded,_Out_ LPDWORD lpServicesReturned,_Inout_opt_ LPDWORD lpResumeHandle,_In_opt_ LPCTSTR pszGroupName)
BOOL WINAPI advapi32.EnumServicesStatusExA(_In_ SC_HANDLE hSCManager,_In_ SC_ENUM_TYPE InfoLevel,_In_ DWORD dwServiceType,_In_ DWORD dwServiceState,_Out_opt_ LPBYTE lpServices,_In_ DWORD cbBufSize,_Out_ LPDWORD pcbBytesNeeded,_Out_ LPDWORD lpServicesReturned,_Inout_opt_ LPDWORD lpResumeHandle,_In_opt_ LPCTSTR pszGroupName)
VOID WINAPI None.Handler(_In_ DWORD fdwControl)
BOOL WINAPI advapi32.ChangeServiceConfig2(_In_ SC_HANDLE hService,_In_ DWORD dwInfoLevel,_In_opt_ LPVOID lpInfo)
BOOL WINAPI advapi32.ChangeServiceConfig2W(_In_ SC_HANDLE hService,_In_ DWORD dwInfoLevel,_In_opt_ LPVOID lpInfo)
BOOL WINAPI advapi32.ChangeServiceConfig2A(_In_ SC_HANDLE hService,_In_ DWORD dwInfoLevel,_In_opt_ LPVOID lpInfo)
DWORD WINAPI None.HandlerEx(_In_ DWORD dwControl,_In_ DWORD dwEventType,_In_ LPVOID lpEventData,_In_ LPVOID lpContext)
BOOL WINAPI advapi32.ControlService(_In_ SC_HANDLE hService,_In_ DWORD dwControl,_Out_ LPSERVICE_STATUS lpServiceStatus)
DWORD WINAPI user32.GetQueueStatus(_In_ UINT flags)
DWORD WINAPI None.HandlerEx(_In_ DWORD dwControl,_In_ DWORD dwEventType,_In_ LPVOID lpEventData,_In_ LPVOID lpContext)
LRESULT WINAPI user32.SendMessage(_In_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
LRESULT WINAPI user32.SendMessageW(_In_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
LRESULT WINAPI user32.SendMessageA(_In_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
BOOL WINAPI advapi32.DeleteService(_In_ SC_HANDLE hService)
BOOL WINAPI advapi32.ControlServiceEx(_In_ SC_HANDLE hService,_In_ DWORD dwControl,_In_ DWORD dwInfoLevel,_Inout_ PVOID pControlParams)
BOOL WINAPI advapi32.ControlServiceExW(_In_ SC_HANDLE hService,_In_ DWORD dwControl,_In_ DWORD dwInfoLevel,_Inout_ PVOID pControlParams)
BOOL WINAPI advapi32.ControlServiceExA(_In_ SC_HANDLE hService,_In_ DWORD dwControl,_In_ DWORD dwInfoLevel,_Inout_ PVOID pControlParams)
BOOL WINAPI advapi32.UnlockServiceDatabase(_In_ SC_LOCK ScLock)
BOOL WINAPI advapi32.EnumServicesStatus(_In_ SC_HANDLE hSCManager,_In_ DWORD dwServiceType,_In_ DWORD dwServiceState,_Out_opt_ LPENUM_SERVICE_STATUS lpServices,_In_ DWORD cbBufSize,_Out_ LPDWORD pcbBytesNeeded,_Out_ LPDWORD lpServicesReturned,_Inout_opt_ LPDWORD lpResumeHandle)
BOOL WINAPI advapi32.EnumServicesStatusW(_In_ SC_HANDLE hSCManager,_In_ DWORD dwServiceType,_In_ DWORD dwServiceState,_Out_opt_ LPENUM_SERVICE_STATUS lpServices,_In_ DWORD cbBufSize,_Out_ LPDWORD pcbBytesNeeded,_Out_ LPDWORD lpServicesReturned,_Inout_opt_ LPDWORD lpResumeHandle)
BOOL WINAPI advapi32.EnumServicesStatusA(_In_ SC_HANDLE hSCManager,_In_ DWORD dwServiceType,_In_ DWORD dwServiceState,_Out_opt_ LPENUM_SERVICE_STATUS lpServices,_In_ DWORD cbBufSize,_Out_ LPDWORD pcbBytesNeeded,_Out_ LPDWORD lpServicesReturned,_Inout_opt_ LPDWORD lpResumeHandle)
DWORD WINAPI None.HandlerEx(_In_ DWORD dwControl,_In_ DWORD dwEventType,_In_ LPVOID lpEventData,_In_ LPVOID lpContext)
BOOL WINAPI advapi32.QueryServiceConfig(_In_ SC_HANDLE hService,_Out_opt_ LPQUERY_SERVICE_CONFIG lpServiceConfig,_In_ DWORD cbBufSize,_Out_ LPDWORD pcbBytesNeeded)
BOOL WINAPI advapi32.QueryServiceConfigW(_In_ SC_HANDLE hService,_Out_opt_ LPQUERY_SERVICE_CONFIG lpServiceConfig,_In_ DWORD cbBufSize,_Out_ LPDWORD pcbBytesNeeded)
BOOL WINAPI advapi32.QueryServiceConfigA(_In_ SC_HANDLE hService,_Out_opt_ LPQUERY_SERVICE_CONFIG lpServiceConfig,_In_ DWORD cbBufSize,_Out_ LPDWORD pcbBytesNeeded)
BOOL WINAPI advapi32.QueryServiceStatus(_In_ SC_HANDLE hService,_Out_ LPSERVICE_STATUS lpServiceStatus)
BOOL WINAPI advapi32.NotifyBootConfigStatus(_In_ BOOL BootAcceptable)
DWORD WINAPI user32.InSendMessageEx(_Reserved_ LPVOID lpReserved)
BOOL WINAPI user32.PostThreadMessage(_In_ DWORD idThread,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
BOOL WINAPI user32.PostThreadMessageW(_In_ DWORD idThread,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
BOOL WINAPI user32.PostThreadMessageA(_In_ DWORD idThread,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
BOOL WINAPI advapi32.ChangeServiceConfig(_In_ SC_HANDLE hService,_In_ DWORD dwServiceType,_In_ DWORD dwStartType,_In_ DWORD dwErrorControl,_In_opt_ LPCTSTR lpBinaryPathName,_In_opt_ LPCTSTR lpLoadOrderGroup,_Out_opt_ LPDWORD lpdwTagId,_In_opt_ LPCTSTR lpDependencies,_In_opt_ LPCTSTR lpServiceStartName,_In_opt_ LPCTSTR lpPassword,_In_opt_ LPCTSTR lpDisplayName)
BOOL WINAPI advapi32.ChangeServiceConfigW(_In_ SC_HANDLE hService,_In_ DWORD dwServiceType,_In_ DWORD dwStartType,_In_ DWORD dwErrorControl,_In_opt_ LPCTSTR lpBinaryPathName,_In_opt_ LPCTSTR lpLoadOrderGroup,_Out_opt_ LPDWORD lpdwTagId,_In_opt_ LPCTSTR lpDependencies,_In_opt_ LPCTSTR lpServiceStartName,_In_opt_ LPCTSTR lpPassword,_In_opt_ LPCTSTR lpDisplayName)
BOOL WINAPI advapi32.ChangeServiceConfigA(_In_ SC_HANDLE hService,_In_ DWORD dwServiceType,_In_ DWORD dwStartType,_In_ DWORD dwErrorControl,_In_opt_ LPCTSTR lpBinaryPathName,_In_opt_ LPCTSTR lpLoadOrderGroup,_Out_opt_ LPDWORD lpdwTagId,_In_opt_ LPCTSTR lpDependencies,_In_opt_ LPCTSTR lpServiceStartName,_In_opt_ LPCTSTR lpPassword,_In_opt_ LPCTSTR lpDisplayName)
BOOL WINAPI advapi32.EnumDependentServices(_In_ SC_HANDLE hService,_In_ DWORD dwServiceState,_Out_opt_ LPENUM_SERVICE_STATUS lpServices,_In_ DWORD cbBufSize,_Out_ LPDWORD pcbBytesNeeded,_Out_ LPDWORD lpServicesReturned)
BOOL WINAPI advapi32.EnumDependentServicesW(_In_ SC_HANDLE hService,_In_ DWORD dwServiceState,_Out_opt_ LPENUM_SERVICE_STATUS lpServices,_In_ DWORD cbBufSize,_Out_ LPDWORD pcbBytesNeeded,_Out_ LPDWORD lpServicesReturned)
BOOL WINAPI advapi32.EnumDependentServicesA(_In_ SC_HANDLE hService,_In_ DWORD dwServiceState,_Out_opt_ LPENUM_SERVICE_STATUS lpServices,_In_ DWORD cbBufSize,_Out_ LPDWORD pcbBytesNeeded,_Out_ LPDWORD lpServicesReturned)
public VerifyResult None.VerifySignatures(boolean exitOnFailure None)
BOOL WINAPI advapi32.QueryServiceLockStatus(_In_ SC_HANDLE hSCManager,_Out_opt_ LPQUERY_SERVICE_LOCK_STATUS lpLockStatus,_In_ DWORD cbBufSize,_Out_ LPDWORD pcbBytesNeeded)
BOOL WINAPI advapi32.QueryServiceLockStatusW(_In_ SC_HANDLE hSCManager,_Out_opt_ LPQUERY_SERVICE_LOCK_STATUS lpLockStatus,_In_ DWORD cbBufSize,_Out_ LPDWORD pcbBytesNeeded)
BOOL WINAPI advapi32.QueryServiceLockStatusA(_In_ SC_HANDLE hSCManager,_Out_opt_ LPQUERY_SERVICE_LOCK_STATUS lpLockStatus,_In_ DWORD cbBufSize,_Out_ LPDWORD pcbBytesNeeded)
BOOL WINAPI advapi32.QueryServiceConfig2(_In_ SC_HANDLE hService,_In_ DWORD dwInfoLevel,_Out_opt_ LPBYTE lpBuffer,_In_ DWORD cbBufSize,_Out_ LPDWORD pcbBytesNeeded)
BOOL WINAPI advapi32.QueryServiceConfig2W(_In_ SC_HANDLE hService,_In_ DWORD dwInfoLevel,_Out_opt_ LPBYTE lpBuffer,_In_ DWORD cbBufSize,_Out_ LPDWORD pcbBytesNeeded)
BOOL WINAPI advapi32.QueryServiceConfig2A(_In_ SC_HANDLE hService,_In_ DWORD dwInfoLevel,_Out_opt_ LPBYTE lpBuffer,_In_ DWORD cbBufSize,_Out_ LPDWORD pcbBytesNeeded)
DWORD WINAPI user32.GetQueueStatus(_In_ UINT flags)
DWORD WINAPI None.HandlerEx(_In_ DWORD dwControl,_In_ DWORD dwEventType,_In_ LPVOID lpEventData,_In_ LPVOID lpContext)
BOOL WINAPI advapi32.GetServiceKeyName(_In_ SC_HANDLE hSCManager,_In_ LPCTSTR lpDisplayName,_Out_opt_ LPTSTR lpServiceName,_Inout_ LPDWORD lpcchBuffer)
BOOL WINAPI advapi32.GetServiceKeyNameW(_In_ SC_HANDLE hSCManager,_In_ LPCTSTR lpDisplayName,_Out_opt_ LPTSTR lpServiceName,_Inout_ LPDWORD lpcchBuffer)
BOOL WINAPI advapi32.GetServiceKeyNameA(_In_ SC_HANDLE hSCManager,_In_ LPCTSTR lpDisplayName,_Out_opt_ LPTSTR lpServiceName,_Inout_ LPDWORD lpcchBuffer)
DWORD WINAPI user32.InSendMessageEx(_Reserved_ LPVOID lpReserved)
BOOL WINAPI advapi32.QueryServiceStatusEx(_In_ SC_HANDLE hService,_In_ SC_STATUS_TYPE InfoLevel,_Out_opt_ LPBYTE lpBuffer,_In_ DWORD cbBufSize,_Out_ LPDWORD pcbBytesNeeded)
SC_HANDLE WINAPI advapi32.OpenSCManager(_In_opt_ LPCTSTR lpMachineName,_In_opt_ LPCTSTR lpDatabaseName,_In_ DWORD dwDesiredAccess)
SC_HANDLE WINAPI advapi32.OpenSCManagerW(_In_opt_ LPCTSTR lpMachineName,_In_opt_ LPCTSTR lpDatabaseName,_In_ DWORD dwDesiredAccess)
SC_HANDLE WINAPI advapi32.OpenSCManagerA(_In_opt_ LPCTSTR lpMachineName,_In_opt_ LPCTSTR lpDatabaseName,_In_ DWORD dwDesiredAccess)
BOOL WINAPI authz.AuthzInitializeResourceManagerEx(_In_opt_ DWORD Flags,_In_opt_ PVOID pAuthzInitInfo,_Out_ PAUTHZ_RESOURCE_MANAGER_HANDLE phAuthzResourceManager)
BOOL WINAPI advapi32.NotifyBootConfigStatus(_In_ BOOL BootAcceptable)
public VerifyResult None.VerifySignatures(boolean exitOnFailure None)
BOOL WINAPI advapi32.SetServiceStatus(_In_ SERVICE_STATUS_HANDLE hServiceStatus,_In_ LPSERVICE_STATUS lpServiceStatus)
BOOL WINAPI advapi32.DeleteAce(_Inout_ PACL pAcl,_In_ DWORD dwAceIndex)
BOOL WINAPI advapi32.GetServiceDisplayName(_In_ SC_HANDLE hSCManager,_In_ LPCTSTR lpServiceName,_Out_opt_ LPTSTR lpDisplayName,_Inout_ LPDWORD lpcchBuffer)
BOOL WINAPI advapi32.GetServiceDisplayNameW(_In_ SC_HANDLE hSCManager,_In_ LPCTSTR lpServiceName,_Out_opt_ LPTSTR lpDisplayName,_Inout_ LPDWORD lpcchBuffer)
BOOL WINAPI advapi32.GetServiceDisplayNameA(_In_ SC_HANDLE hSCManager,_In_ LPCTSTR lpServiceName,_Out_opt_ LPTSTR lpDisplayName,_Inout_ LPDWORD lpcchBuffer)
public VerifyResult None.VerifySignatures(boolean exitOnFailure None)
BOOL WINAPI user32.ReplyMessage(_In_ LRESULT lResult)
BOOL WINAPI advapi32.QueryServiceConfig2(_In_ SC_HANDLE hService,_In_ DWORD dwInfoLevel,_Out_opt_ LPBYTE lpBuffer,_In_ DWORD cbBufSize,_Out_ LPDWORD pcbBytesNeeded)
BOOL WINAPI advapi32.QueryServiceConfig2W(_In_ SC_HANDLE hService,_In_ DWORD dwInfoLevel,_Out_opt_ LPBYTE lpBuffer,_In_ DWORD cbBufSize,_Out_ LPDWORD pcbBytesNeeded)
BOOL WINAPI advapi32.QueryServiceConfig2A(_In_ SC_HANDLE hService,_In_ DWORD dwInfoLevel,_Out_opt_ LPBYTE lpBuffer,_In_ DWORD cbBufSize,_Out_ LPDWORD pcbBytesNeeded)
BOOL WINAPI advapi32.ControlService(_In_ SC_HANDLE hService,_In_ DWORD dwControl,_Out_ LPSERVICE_STATUS lpServiceStatus)
BOOL WINAPI advapi32.UnlockServiceDatabase(_In_ SC_LOCK ScLock)
BOOL WINAPI advapi32.GetServiceDisplayName(_In_ SC_HANDLE hSCManager,_In_ LPCTSTR lpServiceName,_Out_opt_ LPTSTR lpDisplayName,_Inout_ LPDWORD lpcchBuffer)
BOOL WINAPI advapi32.GetServiceDisplayNameW(_In_ SC_HANDLE hSCManager,_In_ LPCTSTR lpServiceName,_Out_opt_ LPTSTR lpDisplayName,_Inout_ LPDWORD lpcchBuffer)
BOOL WINAPI advapi32.GetServiceDisplayNameA(_In_ SC_HANDLE hSCManager,_In_ LPCTSTR lpServiceName,_Out_opt_ LPTSTR lpDisplayName,_Inout_ LPDWORD lpcchBuffer)
BOOL WINAPI wtsapi32.WTSEnumerateProcessesEx(_In_ HANDLE hServer,_Inout_ DWORD *pLevel,_In_ DWORD SessionID,_Out_ LPTSTR *ppProcessInfo,_Out_ DWORD *pCount)
BOOL WINAPI wtsapi32.WTSEnumerateProcessesExW(_In_ HANDLE hServer,_Inout_ DWORD *pLevel,_In_ DWORD SessionID,_Out_ LPTSTR *ppProcessInfo,_Out_ DWORD *pCount)
BOOL WINAPI wtsapi32.WTSEnumerateProcessesExA(_In_ HANDLE hServer,_Inout_ DWORD *pLevel,_In_ DWORD SessionID,_Out_ LPTSTR *ppProcessInfo,_Out_ DWORD *pCount)
SERVICE_STATUS_HANDLE WINAPI advapi32.RegisterServiceCtrlHandler(_In_ LPCTSTR lpServiceName,_In_ LPHANDLER_FUNCTION lpHandlerProc)
SERVICE_STATUS_HANDLE WINAPI advapi32.RegisterServiceCtrlHandlerW(_In_ LPCTSTR lpServiceName,_In_ LPHANDLER_FUNCTION lpHandlerProc)
SERVICE_STATUS_HANDLE WINAPI advapi32.RegisterServiceCtrlHandlerA(_In_ LPCTSTR lpServiceName,_In_ LPHANDLER_FUNCTION lpHandlerProc)
BOOL WINAPI advapi32.SetServiceStatus(_In_ SERVICE_STATUS_HANDLE hServiceStatus,_In_ LPSERVICE_STATUS lpServiceStatus)
BOOL WINAPI user32.ReplyMessage(_In_ LRESULT lResult)
WSDAPI Debug None.HostCopyright(C None None)
BOOL WINAPI advapi32.GetServiceKeyName(_In_ SC_HANDLE hSCManager,_In_ LPCTSTR lpDisplayName,_Out_opt_ LPTSTR lpServiceName,_Inout_ LPDWORD lpcchBuffer)
BOOL WINAPI advapi32.GetServiceKeyNameW(_In_ SC_HANDLE hSCManager,_In_ LPCTSTR lpDisplayName,_Out_opt_ LPTSTR lpServiceName,_Inout_ LPDWORD lpcchBuffer)
BOOL WINAPI advapi32.GetServiceKeyNameA(_In_ SC_HANDLE hSCManager,_In_ LPCTSTR lpDisplayName,_Out_opt_ LPTSTR lpServiceName,_Inout_ LPDWORD lpcchBuffer)
BOOL WINAPI advapi32.StartService(_In_ SC_HANDLE hService,_In_ DWORD dwNumServiceArgs,_In_opt_ LPCTSTR *lpServiceArgVectors)
BOOL WINAPI advapi32.StartServiceW(_In_ SC_HANDLE hService,_In_ DWORD dwNumServiceArgs,_In_opt_ LPCTSTR *lpServiceArgVectors)
BOOL WINAPI advapi32.StartServiceA(_In_ SC_HANDLE hService,_In_ DWORD dwNumServiceArgs,_In_opt_ LPCTSTR *lpServiceArgVectors)
BOOL WINAPI advapi32.SetServiceStatus(_In_ SERVICE_STATUS_HANDLE hServiceStatus,_In_ LPSERVICE_STATUS lpServiceStatus)
BOOL WINAPI user32.ReplyMessage(_In_ LRESULT lResult)
BOOL WINAPI advapi32.EnumServicesStatusEx(_In_ SC_HANDLE hSCManager,_In_ SC_ENUM_TYPE InfoLevel,_In_ DWORD dwServiceType,_In_ DWORD dwServiceState,_Out_opt_ LPBYTE lpServices,_In_ DWORD cbBufSize,_Out_ LPDWORD pcbBytesNeeded,_Out_ LPDWORD lpServicesReturned,_Inout_opt_ LPDWORD lpResumeHandle,_In_opt_ LPCTSTR pszGroupName)
BOOL WINAPI advapi32.EnumServicesStatusExW(_In_ SC_HANDLE hSCManager,_In_ SC_ENUM_TYPE InfoLevel,_In_ DWORD dwServiceType,_In_ DWORD dwServiceState,_Out_opt_ LPBYTE lpServices,_In_ DWORD cbBufSize,_Out_ LPDWORD pcbBytesNeeded,_Out_ LPDWORD lpServicesReturned,_Inout_opt_ LPDWORD lpResumeHandle,_In_opt_ LPCTSTR pszGroupName)
BOOL WINAPI advapi32.EnumServicesStatusExA(_In_ SC_HANDLE hSCManager,_In_ SC_ENUM_TYPE InfoLevel,_In_ DWORD dwServiceType,_In_ DWORD dwServiceState,_Out_opt_ LPBYTE lpServices,_In_ DWORD cbBufSize,_Out_ LPDWORD pcbBytesNeeded,_Out_ LPDWORD lpServicesReturned,_Inout_opt_ LPDWORD lpResumeHandle,_In_opt_ LPCTSTR pszGroupName)
BOOL WINAPI advapi32.QueryServiceConfig2(_In_ SC_HANDLE hService,_In_ DWORD dwInfoLevel,_Out_opt_ LPBYTE lpBuffer,_In_ DWORD cbBufSize,_Out_ LPDWORD pcbBytesNeeded)
BOOL WINAPI advapi32.QueryServiceConfig2W(_In_ SC_HANDLE hService,_In_ DWORD dwInfoLevel,_Out_opt_ LPBYTE lpBuffer,_In_ DWORD cbBufSize,_Out_ LPDWORD pcbBytesNeeded)
BOOL WINAPI advapi32.QueryServiceConfig2A(_In_ SC_HANDLE hService,_In_ DWORD dwInfoLevel,_Out_opt_ LPBYTE lpBuffer,_In_ DWORD cbBufSize,_Out_ LPDWORD pcbBytesNeeded)
VOID WINAPI wtsapi32.WTSCloseServer(_In_ HANDLE hServer)
BOOL WINAPI advapi32.QueryServiceDynamicInformation(_In_ SERVICE_STATUS_HANDLE hServiceStatus,_In_ DWORD dwInfoLevel,_Outptr_ PVOID *ppDynamicInfo)
BOOL WINAPI advapi32.QueryServiceConfig(_In_ SC_HANDLE hService,_Out_opt_ LPQUERY_SERVICE_CONFIG lpServiceConfig,_In_ DWORD cbBufSize,_Out_ LPDWORD pcbBytesNeeded)
BOOL WINAPI advapi32.QueryServiceConfigW(_In_ SC_HANDLE hService,_Out_opt_ LPQUERY_SERVICE_CONFIG lpServiceConfig,_In_ DWORD cbBufSize,_Out_ LPDWORD pcbBytesNeeded)
BOOL WINAPI advapi32.QueryServiceConfigA(_In_ SC_HANDLE hService,_Out_opt_ LPQUERY_SERVICE_CONFIG lpServiceConfig,_In_ DWORD cbBufSize,_Out_ LPDWORD pcbBytesNeeded)
BOOL WINAPI advapi32.ControlServiceEx(_In_ SC_HANDLE hService,_In_ DWORD dwControl,_In_ DWORD dwInfoLevel,_Inout_ PVOID pControlParams)
BOOL WINAPI advapi32.ControlServiceExW(_In_ SC_HANDLE hService,_In_ DWORD dwControl,_In_ DWORD dwInfoLevel,_Inout_ PVOID pControlParams)
BOOL WINAPI advapi32.ControlServiceExA(_In_ SC_HANDLE hService,_In_ DWORD dwControl,_In_ DWORD dwInfoLevel,_Inout_ PVOID pControlParams)
DWORD WINAPI mstlsapi.TLSKeyPackEnumBegin(_In_ TLS_HANDLE hHandle,_In_ DWORD dwSearchParm,_In_ BOOL bMatchAll,_In_ LSKeyPack *lpSearchParm,_Out_ PDWORD pdwErrCode)
TLS_HANDLE WINAPI mstlsapi.TLSConnectToLsServer(_In_ LPTSTR pszLsServer)
BOOL WINAPI advapi32.CreateRestrictedToken(_In_ HANDLE ExistingTokenHandle,_In_ DWORD Flags,_In_ DWORD DisableSidCount,_In_opt_ PSID_AND_ATTRIBUTES SidsToDisable,_In_ DWORD DeletePrivilegeCount,_In_opt_ PLUID_AND_ATTRIBUTES PrivilegesToDelete,_In_ DWORD RestrictedSidCount,_In_opt_ PSID_AND_ATTRIBUTES SidsToRestrict,_Out_ PHANDLE NewTokenHandle)
BOOL WINAPI advapi32.ChangeServiceConfig2(_In_ SC_HANDLE hService,_In_ DWORD dwInfoLevel,_In_opt_ LPVOID lpInfo)
BOOL WINAPI advapi32.ChangeServiceConfig2W(_In_ SC_HANDLE hService,_In_ DWORD dwInfoLevel,_In_opt_ LPVOID lpInfo)
BOOL WINAPI advapi32.ChangeServiceConfig2A(_In_ SC_HANDLE hService,_In_ DWORD dwInfoLevel,_In_opt_ LPVOID lpInfo)
BOOL WINAPI advapi32.GetServiceKeyName(_In_ SC_HANDLE hSCManager,_In_ LPCTSTR lpDisplayName,_Out_opt_ LPTSTR lpServiceName,_Inout_ LPDWORD lpcchBuffer)
BOOL WINAPI advapi32.GetServiceKeyNameW(_In_ SC_HANDLE hSCManager,_In_ LPCTSTR lpDisplayName,_Out_opt_ LPTSTR lpServiceName,_Inout_ LPDWORD lpcchBuffer)
BOOL WINAPI advapi32.GetServiceKeyNameA(_In_ SC_HANDLE hSCManager,_In_ LPCTSTR lpDisplayName,_Out_opt_ LPTSTR lpServiceName,_Inout_ LPDWORD lpcchBuffer)
PVOID WINAPI advapi32.FreeSid(_In_ PSID pSid)
BOOL WINAPI None.GetPrintExecutionData(_Out_ PRINT_EXECUTION_DATA *pData)
BOOL WINAPI advapi32.GetServiceKeyName(_In_ SC_HANDLE hSCManager,_In_ LPCTSTR lpDisplayName,_Out_opt_ LPTSTR lpServiceName,_Inout_ LPDWORD lpcchBuffer)
BOOL WINAPI advapi32.GetServiceKeyNameW(_In_ SC_HANDLE hSCManager,_In_ LPCTSTR lpDisplayName,_Out_opt_ LPTSTR lpServiceName,_Inout_ LPDWORD lpcchBuffer)
BOOL WINAPI advapi32.GetServiceKeyNameA(_In_ SC_HANDLE hSCManager,_In_ LPCTSTR lpDisplayName,_Out_opt_ LPTSTR lpServiceName,_Inout_ LPDWORD lpcchBuffer)
INT_PTR WINAPI user32.DialogBox(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc)
INT_PTR WINAPI user32.DialogBoxW(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc)
INT_PTR WINAPI user32.DialogBoxA(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc)
BOOL WINAPI wtsapi32.WTSEnumerateListeners(_In_ HANDLE hServer,_In_ PVOID pReserved,_In_ DWORD Reserved,_Out_opt_ PWTSLISTENERNAME pListeners,_Inout_ DWORD *pCount)
BOOL WINAPI wtsapi32.WTSEnumerateListenersW(_In_ HANDLE hServer,_In_ PVOID pReserved,_In_ DWORD Reserved,_Out_opt_ PWTSLISTENERNAME pListeners,_Inout_ DWORD *pCount)
BOOL WINAPI wtsapi32.WTSEnumerateListenersA(_In_ HANDLE hServer,_In_ PVOID pReserved,_In_ DWORD Reserved,_Out_opt_ PWTSLISTENERNAME pListeners,_Inout_ DWORD *pCount)
HWND WINAPI user32.CreateDialogIndirect(_In_opt_ HINSTANCE hInstance,_In_ LPCDLGTEMPLATE lpTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc)
HWND WINAPI user32.CreateDialogIndirectW(_In_opt_ HINSTANCE hInstance,_In_ LPCDLGTEMPLATE lpTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc)
HWND WINAPI user32.CreateDialogIndirectA(_In_opt_ HINSTANCE hInstance,_In_ LPCDLGTEMPLATE lpTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc)
SC_HANDLE WINAPI advapi32.OpenService(_In_ SC_HANDLE hSCManager,_In_ LPCTSTR lpServiceName,_In_ DWORD dwDesiredAccess)
SC_HANDLE WINAPI advapi32.OpenServiceW(_In_ SC_HANDLE hSCManager,_In_ LPCTSTR lpServiceName,_In_ DWORD dwDesiredAccess)
SC_HANDLE WINAPI advapi32.OpenServiceA(_In_ SC_HANDLE hSCManager,_In_ LPCTSTR lpServiceName,_In_ DWORD dwDesiredAccess)
BOOL WINAPI user32.SetUserObjectSecurity(_In_ HANDLE hObj,_In_ PSECURITY_INFORMATION pSIRequested,_In_ PSECURITY_DESCRIPTOR pSID)
WSDAPI Debug None.HostCopyright(C None None)
HWND WINAPI user32.CreateDialogIndirectParam(_In_opt_ HINSTANCE hInstance,_In_ LPCDLGTEMPLATE lpTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc,_In_ LPARAM lParamInit)
HWND WINAPI user32.CreateDialogIndirectParamW(_In_opt_ HINSTANCE hInstance,_In_ LPCDLGTEMPLATE lpTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc,_In_ LPARAM lParamInit)
HWND WINAPI user32.CreateDialogIndirectParamA(_In_opt_ HINSTANCE hInstance,_In_ LPCDLGTEMPLATE lpTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc,_In_ LPARAM lParamInit)
BOOL WINAPI advapi32.ChangeServiceConfig(_In_ SC_HANDLE hService,_In_ DWORD dwServiceType,_In_ DWORD dwStartType,_In_ DWORD dwErrorControl,_In_opt_ LPCTSTR lpBinaryPathName,_In_opt_ LPCTSTR lpLoadOrderGroup,_Out_opt_ LPDWORD lpdwTagId,_In_opt_ LPCTSTR lpDependencies,_In_opt_ LPCTSTR lpServiceStartName,_In_opt_ LPCTSTR lpPassword,_In_opt_ LPCTSTR lpDisplayName)
BOOL WINAPI advapi32.ChangeServiceConfigW(_In_ SC_HANDLE hService,_In_ DWORD dwServiceType,_In_ DWORD dwStartType,_In_ DWORD dwErrorControl,_In_opt_ LPCTSTR lpBinaryPathName,_In_opt_ LPCTSTR lpLoadOrderGroup,_Out_opt_ LPDWORD lpdwTagId,_In_opt_ LPCTSTR lpDependencies,_In_opt_ LPCTSTR lpServiceStartName,_In_opt_ LPCTSTR lpPassword,_In_opt_ LPCTSTR lpDisplayName)
BOOL WINAPI advapi32.ChangeServiceConfigA(_In_ SC_HANDLE hService,_In_ DWORD dwServiceType,_In_ DWORD dwStartType,_In_ DWORD dwErrorControl,_In_opt_ LPCTSTR lpBinaryPathName,_In_opt_ LPCTSTR lpLoadOrderGroup,_Out_opt_ LPDWORD lpdwTagId,_In_opt_ LPCTSTR lpDependencies,_In_opt_ LPCTSTR lpServiceStartName,_In_opt_ LPCTSTR lpPassword,_In_opt_ LPCTSTR lpDisplayName)
BOOL WINAPI advapi32.NotifyBootConfigStatus(_In_ BOOL BootAcceptable)
BOOL WINAPI wtsapi32.WTSEnableChildSessions(BOOL bEnable None)
DWORD WINAPI mstlsapi.TLSKeyPackEnumBegin(_In_ TLS_HANDLE hHandle,_In_ DWORD dwSearchParm,_In_ BOOL bMatchAll,_In_ LSKeyPack *lpSearchParm,_Out_ PDWORD pdwErrCode)
BOOL WINAPI wtsapi32.WTSGetChildSessionId(_Out_ ULONG *pSessionId)
DWORD WINAPI mstlsapi.TLSKeyPackEnumEnd(_In_ TLS_HANDLE hHandle,_Out_ PDWORD pdwErrCode)
HRESULT WINAPI aclui.EditSecurityAdvanced(_In_ HWND hwndOwner,_In_ LPSECURITYINFO psi,_In_ SI_PAGE_TYPE uSIPage)
DWORD WINAPI mstlsapi.TLSLicenseEnumNext(_In_ TLS_HANDLE hHandle,_In_ LSLicense *lpLicense,_Out_ PDWORD pdwErrCode)
BOOL WINAPI wtsapi32.WTSSetListenerSecurity(_In_ HANDLE hServer,_In_ PVOID pReserved,_In_ DWORD Reserved,_In_ LPTSTR pListenerName,_In_ SECURITY_INFORMATION SecurityInformation,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor)
BOOL WINAPI wtsapi32.WTSSetListenerSecurityW(_In_ HANDLE hServer,_In_ PVOID pReserved,_In_ DWORD Reserved,_In_ LPTSTR pListenerName,_In_ SECURITY_INFORMATION SecurityInformation,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor)
BOOL WINAPI wtsapi32.WTSSetListenerSecurityA(_In_ HANDLE hServer,_In_ PVOID pReserved,_In_ DWORD Reserved,_In_ LPTSTR pListenerName,_In_ SECURITY_INFORMATION SecurityInformation,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor)
BOOL WINAPI user32.MapDialogRect(_In_ HWND hDlg,_Inout_ LPRECT lpRect)
BOOL WINAPI wtsapi32.WTSGetListenerSecurity(_In_ HANDLE hServer,_In_ PVOID pReserved,_In_ DWORD Reserved,_In_ LPTSTR pListenerName,_In_ SECURITY_INFORMATION SecurityInformation,_Out_opt_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_ DWORD nLength,_Out_ LPDWORD lpnLengthNeeded)
BOOL WINAPI wtsapi32.WTSGetListenerSecurityW(_In_ HANDLE hServer,_In_ PVOID pReserved,_In_ DWORD Reserved,_In_ LPTSTR pListenerName,_In_ SECURITY_INFORMATION SecurityInformation,_Out_opt_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_ DWORD nLength,_Out_ LPDWORD lpnLengthNeeded)
BOOL WINAPI wtsapi32.WTSGetListenerSecurityA(_In_ HANDLE hServer,_In_ PVOID pReserved,_In_ DWORD Reserved,_In_ LPTSTR pListenerName,_In_ SECURITY_INFORMATION SecurityInformation,_Out_opt_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_ DWORD nLength,_Out_ LPDWORD lpnLengthNeeded)
SC_HANDLE WINAPI advapi32.OpenService(_In_ SC_HANDLE hSCManager,_In_ LPCTSTR lpServiceName,_In_ DWORD dwDesiredAccess)
SC_HANDLE WINAPI advapi32.OpenServiceW(_In_ SC_HANDLE hSCManager,_In_ LPCTSTR lpServiceName,_In_ DWORD dwDesiredAccess)
SC_HANDLE WINAPI advapi32.OpenServiceA(_In_ SC_HANDLE hSCManager,_In_ LPCTSTR lpServiceName,_In_ DWORD dwDesiredAccess)
VOID WINAPI wtsapi32.WTSCloseServer(_In_ HANDLE hServer)
SERVICE_STATUS_HANDLE WINAPI advapi32.RegisterServiceCtrlHandler(_In_ LPCTSTR lpServiceName,_In_ LPHANDLER_FUNCTION lpHandlerProc)
SERVICE_STATUS_HANDLE WINAPI advapi32.RegisterServiceCtrlHandlerW(_In_ LPCTSTR lpServiceName,_In_ LPHANDLER_FUNCTION lpHandlerProc)
SERVICE_STATUS_HANDLE WINAPI advapi32.RegisterServiceCtrlHandlerA(_In_ LPCTSTR lpServiceName,_In_ LPHANDLER_FUNCTION lpHandlerProc)
SERVICE_STATUS_HANDLE WINAPI advapi32.RegisterServiceCtrlHandler(_In_ LPCTSTR lpServiceName,_In_ LPHANDLER_FUNCTION lpHandlerProc)
SERVICE_STATUS_HANDLE WINAPI advapi32.RegisterServiceCtrlHandlerW(_In_ LPCTSTR lpServiceName,_In_ LPHANDLER_FUNCTION lpHandlerProc)
SERVICE_STATUS_HANDLE WINAPI advapi32.RegisterServiceCtrlHandlerA(_In_ LPCTSTR lpServiceName,_In_ LPHANDLER_FUNCTION lpHandlerProc)
INT_PTR WINAPI user32.DialogBox(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc)
INT_PTR WINAPI user32.DialogBoxW(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc)
INT_PTR WINAPI user32.DialogBoxA(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc)
DWORD WINAPI mstlsapi.TLSKeyPackEnumEnd(_In_ TLS_HANDLE hHandle,_Out_ PDWORD pdwErrCode)
HANDLE WINAPI wtsapi32.WTSOpenServerEx(_In_ LPTSTR pServerName)
HANDLE WINAPI wtsapi32.WTSOpenServerExW(_In_ LPTSTR pServerName)
HANDLE WINAPI wtsapi32.WTSOpenServerExA(_In_ LPTSTR pServerName)
DWORD WINAPI mstlsapi.TLSKeyPackEnumEnd(_In_ TLS_HANDLE hHandle,_Out_ PDWORD pdwErrCode)
HWND WINAPI user32.GetNextDlgTabItem(_In_ HWND hDlg,_In_opt_ HWND hCtl,_In_ BOOL bPrevious)
BOOL WINAPI advapi32.GetServiceKeyName(_In_ SC_HANDLE hSCManager,_In_ LPCTSTR lpDisplayName,_Out_opt_ LPTSTR lpServiceName,_Inout_ LPDWORD lpcchBuffer)
BOOL WINAPI advapi32.GetServiceKeyNameW(_In_ SC_HANDLE hSCManager,_In_ LPCTSTR lpDisplayName,_Out_opt_ LPTSTR lpServiceName,_Inout_ LPDWORD lpcchBuffer)
BOOL WINAPI advapi32.GetServiceKeyNameA(_In_ SC_HANDLE hSCManager,_In_ LPCTSTR lpDisplayName,_Out_opt_ LPTSTR lpServiceName,_Inout_ LPDWORD lpcchBuffer)
LONG WINAPI advapi32.RegSetValue(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_ DWORD dwType,_In_ LPCTSTR lpData,_In_ DWORD cbData)
LONG WINAPI advapi32.RegSetValueW(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_ DWORD dwType,_In_ LPCTSTR lpData,_In_ DWORD cbData)
LONG WINAPI advapi32.RegSetValueA(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_ DWORD dwType,_In_ LPCTSTR lpData,_In_ DWORD cbData)
BOOL WINAPI advapi32.SetThreadToken(_In_opt_ PHANDLE Thread,_In_opt_ HANDLE Token)
HWND WINAPI user32.CreateDialogIndirectParam(_In_opt_ HINSTANCE hInstance,_In_ LPCDLGTEMPLATE lpTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc,_In_ LPARAM lParamInit)
HWND WINAPI user32.CreateDialogIndirectParamW(_In_opt_ HINSTANCE hInstance,_In_ LPCDLGTEMPLATE lpTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc,_In_ LPARAM lParamInit)
HWND WINAPI user32.CreateDialogIndirectParamA(_In_opt_ HINSTANCE hInstance,_In_ LPCDLGTEMPLATE lpTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc,_In_ LPARAM lParamInit)
BOOL WINAPI advapi32.AllocateLocallyUniqueId(_Out_ PLUID Luid)
HWND WINAPI user32.CreateDialogIndirect(_In_opt_ HINSTANCE hInstance,_In_ LPCDLGTEMPLATE lpTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc)
HWND WINAPI user32.CreateDialogIndirectW(_In_opt_ HINSTANCE hInstance,_In_ LPCDLGTEMPLATE lpTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc)
HWND WINAPI user32.CreateDialogIndirectA(_In_opt_ HINSTANCE hInstance,_In_ LPCDLGTEMPLATE lpTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc)
DWORD WINAPI mstlsapi.TLSGetServerCertificate(_In_ TLS_HANDLE hHandle,_In_ BOOL bSignCert,_Out_ LPBYTE *ppbCertBlob,_Out_ LPDWORD lpdwCertBlobLen,_Out_ PDWORD pdwErrCode)
DWORD WINAPI kernel32.GetPrivateProfileSectionNames(_Out_ LPTSTR lpszReturnBuffer,_In_ DWORD nSize,_In_ LPCTSTR lpFileName)
DWORD WINAPI kernel32.GetPrivateProfileSectionNamesW(_Out_ LPTSTR lpszReturnBuffer,_In_ DWORD nSize,_In_ LPCTSTR lpFileName)
DWORD WINAPI kernel32.GetPrivateProfileSectionNamesA(_Out_ LPTSTR lpszReturnBuffer,_In_ DWORD nSize,_In_ LPCTSTR lpFileName)
BOOL WINAPI wtsapi32.WTSEnableChildSessions(BOOL bEnable None)
BOOL WINAPI wtsapi32.WTSFreeMemoryEx(_In_ WTS_TYPE_CLASS WTSTypeClass,_In_ PVOID pMemory,_In_ ULONG NumberOfEntries)
BOOL WINAPI wtsapi32.WTSFreeMemoryExW(_In_ WTS_TYPE_CLASS WTSTypeClass,_In_ PVOID pMemory,_In_ ULONG NumberOfEntries)
BOOL WINAPI wtsapi32.WTSFreeMemoryExA(_In_ WTS_TYPE_CLASS WTSTypeClass,_In_ PVOID pMemory,_In_ ULONG NumberOfEntries)
DWORD WINAPI mstlsapi.TLSKeyPackEnumNext(_In_ TLS_HANDLE hHandle,_In_ LsKeyPack *lpKeyPack,_Out_ PDWORD pdwErrCode)
BOOL WINAPI wtsapi32.WTSStartRemoteControlSession(_In_ LPTSTR pTargetServerName,_In_ ULONG TargetLogonId,_In_ BYTE HotkeyVk,_In_ USHORT HotkeyModifiers)
BOOL WINAPI wtsapi32.WTSStartRemoteControlSessionW(_In_ LPTSTR pTargetServerName,_In_ ULONG TargetLogonId,_In_ BYTE HotkeyVk,_In_ USHORT HotkeyModifiers)
BOOL WINAPI wtsapi32.WTSStartRemoteControlSessionA(_In_ LPTSTR pTargetServerName,_In_ ULONG TargetLogonId,_In_ BYTE HotkeyVk,_In_ USHORT HotkeyModifiers)
HWND WINAPI user32.GetNextDlgTabItem(_In_ HWND hDlg,_In_opt_ HWND hCtl,_In_ BOOL bPrevious)
DWORD WINAPI mstlsapi.TLSGetServerCertificate(_In_ TLS_HANDLE hHandle,_In_ BOOL bSignCert,_Out_ LPBYTE *ppbCertBlob,_Out_ LPDWORD lpdwCertBlobLen,_Out_ PDWORD pdwErrCode)
INT_PTR WINAPI user32.DialogBoxIndirect(_In_opt_ HINSTANCE hInstance,_In_ LPCDLGTEMPLATE lpTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc)
INT_PTR WINAPI user32.DialogBoxIndirectW(_In_opt_ HINSTANCE hInstance,_In_ LPCDLGTEMPLATE lpTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc)
INT_PTR WINAPI user32.DialogBoxIndirectA(_In_opt_ HINSTANCE hInstance,_In_ LPCDLGTEMPLATE lpTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc)
BOOL WINAPI wtsapi32.WTSEnumerateSessionsEx(_In_ HANDLE hServer,_Inout_ DWORD *pLevel,_In_ DWORD Filter,_Out_ PWTS_SESSION_INFO_1 *ppSessionInfo,_Out_ DWORD *pCount)
BOOL WINAPI wtsapi32.WTSEnumerateSessionsExW(_In_ HANDLE hServer,_Inout_ DWORD *pLevel,_In_ DWORD Filter,_Out_ PWTS_SESSION_INFO_1 *ppSessionInfo,_Out_ DWORD *pCount)
BOOL WINAPI wtsapi32.WTSEnumerateSessionsExA(_In_ HANDLE hServer,_Inout_ DWORD *pLevel,_In_ DWORD Filter,_Out_ PWTS_SESSION_INFO_1 *ppSessionInfo,_Out_ DWORD *pCount)
BOOL WINAPI kernel32.WritePrivateProfileSection(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpString,_In_ LPCTSTR lpFileName)
BOOL WINAPI kernel32.WritePrivateProfileSectionW(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpString,_In_ LPCTSTR lpFileName)
BOOL WINAPI kernel32.WritePrivateProfileSectionA(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpString,_In_ LPCTSTR lpFileName)
DWORD WINAPI mstlsapi.TLSLicenseEnumNext(_In_ TLS_HANDLE hHandle,_In_ LSLicense *lpLicense,_Out_ PDWORD pdwErrCode)
HWND WINAPI user32.CreateDialogIndirect(_In_opt_ HINSTANCE hInstance,_In_ LPCDLGTEMPLATE lpTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc)
HWND WINAPI user32.CreateDialogIndirectW(_In_opt_ HINSTANCE hInstance,_In_ LPCDLGTEMPLATE lpTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc)
HWND WINAPI user32.CreateDialogIndirectA(_In_opt_ HINSTANCE hInstance,_In_ LPCDLGTEMPLATE lpTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc)
DWORD WINAPI mstlsapi.TLSLicenseEnumBegin(_In_ TLS_HANDLE hHandle,_In_ DWORD dwSearchParm,_In_ BOOL bMatchAll,_In_ LSLicense *lpSearchParm,_Out_ PDWORD pdwErrCode)
BOOL WINAPI wtsapi32.WTSConnectSession(_In_ ULONG LogonId,_In_ ULONG TargetLogonId,_In_ PTSTR pPassword,_In_ BOOL bWait)
BOOL WINAPI wtsapi32.WTSConnectSessionW(_In_ ULONG LogonId,_In_ ULONG TargetLogonId,_In_ PTSTR pPassword,_In_ BOOL bWait)
BOOL WINAPI wtsapi32.WTSConnectSessionA(_In_ ULONG LogonId,_In_ ULONG TargetLogonId,_In_ PTSTR pPassword,_In_ BOOL bWait)
DWORD WINAPI mstlsapi.TLSLicenseEnumNext(_In_ TLS_HANDLE hHandle,_In_ LSLicense *lpLicense,_Out_ PDWORD pdwErrCode)
BOOL WINAPI wtsapi32.WTSFreeMemoryEx(_In_ WTS_TYPE_CLASS WTSTypeClass,_In_ PVOID pMemory,_In_ ULONG NumberOfEntries)
BOOL WINAPI wtsapi32.WTSFreeMemoryExW(_In_ WTS_TYPE_CLASS WTSTypeClass,_In_ PVOID pMemory,_In_ ULONG NumberOfEntries)
BOOL WINAPI wtsapi32.WTSFreeMemoryExA(_In_ WTS_TYPE_CLASS WTSTypeClass,_In_ PVOID pMemory,_In_ ULONG NumberOfEntries)
BOOL WINAPI wtsapi32.WTSCreateListener(_In_ HANDLE hServer,_In_ PVOID pReserved,_In_ DWORD Reserved,_In_ LPTSTR pListenerName,_In_ PWTSLISTENERCONFIG pBuffer,_In_ DWORD flag)
BOOL WINAPI wtsapi32.WTSCreateListenerW(_In_ HANDLE hServer,_In_ PVOID pReserved,_In_ DWORD Reserved,_In_ LPTSTR pListenerName,_In_ PWTSLISTENERCONFIG pBuffer,_In_ DWORD flag)
BOOL WINAPI wtsapi32.WTSCreateListenerA(_In_ HANDLE hServer,_In_ PVOID pReserved,_In_ DWORD Reserved,_In_ LPTSTR pListenerName,_In_ PWTSLISTENERCONFIG pBuffer,_In_ DWORD flag)
LONG WINAPI advapi32.RegUnLoadKey(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey)
LONG WINAPI advapi32.RegUnLoadKeyW(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey)
LONG WINAPI advapi32.RegUnLoadKeyA(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey)
DWORD WINAPI mstlsapi.TLSKeyPackEnumEnd(_In_ TLS_HANDLE hHandle,_Out_ PDWORD pdwErrCode)
INT_PTR WINAPI user32.DialogBoxIndirect(_In_opt_ HINSTANCE hInstance,_In_ LPCDLGTEMPLATE lpTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc)
INT_PTR WINAPI user32.DialogBoxIndirectW(_In_opt_ HINSTANCE hInstance,_In_ LPCDLGTEMPLATE lpTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc)
INT_PTR WINAPI user32.DialogBoxIndirectA(_In_opt_ HINSTANCE hInstance,_In_ LPCDLGTEMPLATE lpTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc)
BOOL WINAPI wtsapi32.WTSQueryListenerConfig(_In_ HANDLE hServer,_In_ PVOID pReserved,_In_ DWORD Reserved,_In_ LPTSTR pListenerName,_Out_ PWTSLISTENERCONFIG pBuffer)
BOOL WINAPI wtsapi32.WTSQueryListenerConfigW(_In_ HANDLE hServer,_In_ PVOID pReserved,_In_ DWORD Reserved,_In_ LPTSTR pListenerName,_Out_ PWTSLISTENERCONFIG pBuffer)
BOOL WINAPI wtsapi32.WTSQueryListenerConfigA(_In_ HANDLE hServer,_In_ PVOID pReserved,_In_ DWORD Reserved,_In_ LPTSTR pListenerName,_Out_ PWTSLISTENERCONFIG pBuffer)
DWORD WINAPI mstlsapi.TLSLicenseEnumBegin(_In_ TLS_HANDLE hHandle,_In_ DWORD dwSearchParm,_In_ BOOL bMatchAll,_In_ LSLicense *lpSearchParm,_Out_ PDWORD pdwErrCode)
LONG WINAPI advapi32.RegSetValue(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_ DWORD dwType,_In_ LPCTSTR lpData,_In_ DWORD cbData)
LONG WINAPI advapi32.RegSetValueW(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_ DWORD dwType,_In_ LPCTSTR lpData,_In_ DWORD cbData)
LONG WINAPI advapi32.RegSetValueA(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_ DWORD dwType,_In_ LPCTSTR lpData,_In_ DWORD cbData)
BOOL WINAPI kernel32.WritePrivateProfileSection(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpString,_In_ LPCTSTR lpFileName)
BOOL WINAPI kernel32.WritePrivateProfileSectionW(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpString,_In_ LPCTSTR lpFileName)
BOOL WINAPI kernel32.WritePrivateProfileSectionA(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpString,_In_ LPCTSTR lpFileName)
BOOL WINAPI wtsapi32.WTSCreateListener(_In_ HANDLE hServer,_In_ PVOID pReserved,_In_ DWORD Reserved,_In_ LPTSTR pListenerName,_In_ PWTSLISTENERCONFIG pBuffer,_In_ DWORD flag)
BOOL WINAPI wtsapi32.WTSCreateListenerW(_In_ HANDLE hServer,_In_ PVOID pReserved,_In_ DWORD Reserved,_In_ LPTSTR pListenerName,_In_ PWTSLISTENERCONFIG pBuffer,_In_ DWORD flag)
BOOL WINAPI wtsapi32.WTSCreateListenerA(_In_ HANDLE hServer,_In_ PVOID pReserved,_In_ DWORD Reserved,_In_ LPTSTR pListenerName,_In_ PWTSLISTENERCONFIG pBuffer,_In_ DWORD flag)
DWORD WINAPI mstlsapi.TLSLicenseEnumNext(_In_ TLS_HANDLE hHandle,_In_ LSLicense *lpLicense,_Out_ PDWORD pdwErrCode)
BOOL WINAPI wtsapi32.WTSIsChildSessionsEnabled(_Out_ BOOL *pbEnabled)
BOOL WINAPI wtsapi32.WTSConnectSession(_In_ ULONG LogonId,_In_ ULONG TargetLogonId,_In_ PTSTR pPassword,_In_ BOOL bWait)
BOOL WINAPI wtsapi32.WTSConnectSessionW(_In_ ULONG LogonId,_In_ ULONG TargetLogonId,_In_ PTSTR pPassword,_In_ BOOL bWait)
BOOL WINAPI wtsapi32.WTSConnectSessionA(_In_ ULONG LogonId,_In_ ULONG TargetLogonId,_In_ PTSTR pPassword,_In_ BOOL bWait)
DWORD WINAPI mstlsapi.TLSKeyPackEnumEnd(_In_ TLS_HANDLE hHandle,_Out_ PDWORD pdwErrCode)
BOOL WINAPI wtsapi32.WTSGetListenerSecurity(_In_ HANDLE hServer,_In_ PVOID pReserved,_In_ DWORD Reserved,_In_ LPTSTR pListenerName,_In_ SECURITY_INFORMATION SecurityInformation,_Out_opt_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_ DWORD nLength,_Out_ LPDWORD lpnLengthNeeded)
BOOL WINAPI wtsapi32.WTSGetListenerSecurityW(_In_ HANDLE hServer,_In_ PVOID pReserved,_In_ DWORD Reserved,_In_ LPTSTR pListenerName,_In_ SECURITY_INFORMATION SecurityInformation,_Out_opt_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_ DWORD nLength,_Out_ LPDWORD lpnLengthNeeded)
BOOL WINAPI wtsapi32.WTSGetListenerSecurityA(_In_ HANDLE hServer,_In_ PVOID pReserved,_In_ DWORD Reserved,_In_ LPTSTR pListenerName,_In_ SECURITY_INFORMATION SecurityInformation,_Out_opt_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_ DWORD nLength,_Out_ LPDWORD lpnLengthNeeded)
INT_PTR WINAPI user32.DialogBoxIndirectParam(_In_opt_ HINSTANCE hInstance,_In_ LPCDLGTEMPLATE hDialogTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc,_In_ LPARAM dwInitParam)
INT_PTR WINAPI user32.DialogBoxIndirectParamW(_In_opt_ HINSTANCE hInstance,_In_ LPCDLGTEMPLATE hDialogTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc,_In_ LPARAM dwInitParam)
INT_PTR WINAPI user32.DialogBoxIndirectParamA(_In_opt_ HINSTANCE hInstance,_In_ LPCDLGTEMPLATE hDialogTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc,_In_ LPARAM dwInitParam)
BOOL WINAPI wtsapi32.WTSGetListenerSecurity(_In_ HANDLE hServer,_In_ PVOID pReserved,_In_ DWORD Reserved,_In_ LPTSTR pListenerName,_In_ SECURITY_INFORMATION SecurityInformation,_Out_opt_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_ DWORD nLength,_Out_ LPDWORD lpnLengthNeeded)
BOOL WINAPI wtsapi32.WTSGetListenerSecurityW(_In_ HANDLE hServer,_In_ PVOID pReserved,_In_ DWORD Reserved,_In_ LPTSTR pListenerName,_In_ SECURITY_INFORMATION SecurityInformation,_Out_opt_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_ DWORD nLength,_Out_ LPDWORD lpnLengthNeeded)
BOOL WINAPI wtsapi32.WTSGetListenerSecurityA(_In_ HANDLE hServer,_In_ PVOID pReserved,_In_ DWORD Reserved,_In_ LPTSTR pListenerName,_In_ SECURITY_INFORMATION SecurityInformation,_Out_opt_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_ DWORD nLength,_Out_ LPDWORD lpnLengthNeeded)
BOOL WINAPI wtsapi32.WTSFreeMemoryEx(_In_ WTS_TYPE_CLASS WTSTypeClass,_In_ PVOID pMemory,_In_ ULONG NumberOfEntries)
BOOL WINAPI wtsapi32.WTSFreeMemoryExW(_In_ WTS_TYPE_CLASS WTSTypeClass,_In_ PVOID pMemory,_In_ ULONG NumberOfEntries)
BOOL WINAPI wtsapi32.WTSFreeMemoryExA(_In_ WTS_TYPE_CLASS WTSTypeClass,_In_ PVOID pMemory,_In_ ULONG NumberOfEntries)
INT_PTR WINAPI user32.DialogBoxIndirect(_In_opt_ HINSTANCE hInstance,_In_ LPCDLGTEMPLATE lpTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc)
INT_PTR WINAPI user32.DialogBoxIndirectW(_In_opt_ HINSTANCE hInstance,_In_ LPCDLGTEMPLATE lpTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc)
INT_PTR WINAPI user32.DialogBoxIndirectA(_In_opt_ HINSTANCE hInstance,_In_ LPCDLGTEMPLATE lpTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc)
INT_PTR WINAPI user32.DialogBoxIndirect(_In_opt_ HINSTANCE hInstance,_In_ LPCDLGTEMPLATE lpTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc)
INT_PTR WINAPI user32.DialogBoxIndirectW(_In_opt_ HINSTANCE hInstance,_In_ LPCDLGTEMPLATE lpTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc)
INT_PTR WINAPI user32.DialogBoxIndirectA(_In_opt_ HINSTANCE hInstance,_In_ LPCDLGTEMPLATE lpTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc)
INT_PTR WINAPI user32.DialogBoxIndirect(_In_opt_ HINSTANCE hInstance,_In_ LPCDLGTEMPLATE lpTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc)
INT_PTR WINAPI user32.DialogBoxIndirectW(_In_opt_ HINSTANCE hInstance,_In_ LPCDLGTEMPLATE lpTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc)
INT_PTR WINAPI user32.DialogBoxIndirectA(_In_opt_ HINSTANCE hInstance,_In_ LPCDLGTEMPLATE lpTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc)
DWORD WINAPI mstlsapi.TLSLicenseEnumNext(_In_ TLS_HANDLE hHandle,_In_ LSLicense *lpLicense,_Out_ PDWORD pdwErrCode)
INT_PTR WINAPI user32.DialogBoxIndirectParam(_In_opt_ HINSTANCE hInstance,_In_ LPCDLGTEMPLATE hDialogTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc,_In_ LPARAM dwInitParam)
INT_PTR WINAPI user32.DialogBoxIndirectParamW(_In_opt_ HINSTANCE hInstance,_In_ LPCDLGTEMPLATE hDialogTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc,_In_ LPARAM dwInitParam)
INT_PTR WINAPI user32.DialogBoxIndirectParamA(_In_opt_ HINSTANCE hInstance,_In_ LPCDLGTEMPLATE hDialogTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc,_In_ LPARAM dwInitParam)
DWORD WINAPI kernel32.GetProfileSection(_In_ LPCTSTR lpAppName,_Out_ LPTSTR lpReturnedString,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetProfileSectionW(_In_ LPCTSTR lpAppName,_Out_ LPTSTR lpReturnedString,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetProfileSectionA(_In_ LPCTSTR lpAppName,_Out_ LPTSTR lpReturnedString,_In_ DWORD nSize)
LONG WINAPI advapi32.RegOpenUserClassesRoot(_In_ HANDLE hToken,_Reserved_ DWORD dwOptions,_In_ REGSAM samDesired,_Out_ PHKEY phkResult)
BOOL WINAPI wtsapi32.WTSFreeMemoryEx(_In_ WTS_TYPE_CLASS WTSTypeClass,_In_ PVOID pMemory,_In_ ULONG NumberOfEntries)
BOOL WINAPI wtsapi32.WTSFreeMemoryExW(_In_ WTS_TYPE_CLASS WTSTypeClass,_In_ PVOID pMemory,_In_ ULONG NumberOfEntries)
BOOL WINAPI wtsapi32.WTSFreeMemoryExA(_In_ WTS_TYPE_CLASS WTSTypeClass,_In_ PVOID pMemory,_In_ ULONG NumberOfEntries)
DWORD WINAPI kernel32.GetPrivateProfileSection(_In_ LPCTSTR lpAppName,_Out_ LPTSTR lpReturnedString,_In_ DWORD nSize,_In_ LPCTSTR lpFileName)
DWORD WINAPI kernel32.GetPrivateProfileSectionW(_In_ LPCTSTR lpAppName,_Out_ LPTSTR lpReturnedString,_In_ DWORD nSize,_In_ LPCTSTR lpFileName)
DWORD WINAPI kernel32.GetPrivateProfileSectionA(_In_ LPCTSTR lpAppName,_Out_ LPTSTR lpReturnedString,_In_ DWORD nSize,_In_ LPCTSTR lpFileName)
DWORD WINAPI mstlsapi.TLSGetServerCertificate(_In_ TLS_HANDLE hHandle,_In_ BOOL bSignCert,_Out_ LPBYTE *ppbCertBlob,_Out_ LPDWORD lpdwCertBlobLen,_Out_ PDWORD pdwErrCode)
DWORD WINAPI mstlsapi.TLSLicenseEnumEnd(_In_ TLS_HANDLE hHandle,_Out_ PDWORD pdwErrCode)
BOOLEAN WINAPI powrprof.ReadPwrScheme(_In_ UINT uiID,_Out_ PPOWER_POLICY pPowerPolicy)
BOOL WINAPI wtsapi32.WTSConnectSession(_In_ ULONG LogonId,_In_ ULONG TargetLogonId,_In_ PTSTR pPassword,_In_ BOOL bWait)
BOOL WINAPI wtsapi32.WTSConnectSessionW(_In_ ULONG LogonId,_In_ ULONG TargetLogonId,_In_ PTSTR pPassword,_In_ BOOL bWait)
BOOL WINAPI wtsapi32.WTSConnectSessionA(_In_ ULONG LogonId,_In_ ULONG TargetLogonId,_In_ PTSTR pPassword,_In_ BOOL bWait)
BOOL WINAPI kernel32.WritePrivateProfileSection(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpString,_In_ LPCTSTR lpFileName)
BOOL WINAPI kernel32.WritePrivateProfileSectionW(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpString,_In_ LPCTSTR lpFileName)
BOOL WINAPI kernel32.WritePrivateProfileSectionA(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpString,_In_ LPCTSTR lpFileName)
BOOL WINAPI authz.AuthzInitializeResourceManagerEx(_In_opt_ DWORD Flags,_In_opt_ PVOID pAuthzInitInfo,_Out_ PAUTHZ_RESOURCE_MANAGER_HANDLE phAuthzResourceManager)
DWORD WINAPI powrprof.PowerSettingRegisterNotification(_In_ LPCGUID SettingGuid,_In_ DWORD Flags,_In_ HANDLE Recipient,_Out_ PHPOWERNOTIFY RegistrationHandle)
HRESULT WINAPI wsdapi.WSDCreateUdpAddress(_In_ IWSDUdpAddress **ppAddress)
BOOL WINAPI wtsapi32.WTSIsChildSessionsEnabled(_Out_ BOOL *pbEnabled)
LRESULT WINAPI user32.DefDlgProc(_In_ HWND hDlg,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
LRESULT WINAPI user32.DefDlgProcW(_In_ HWND hDlg,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
BOOL WINAPI advapi32.DeleteAce(_Inout_ PACL pAcl,_In_ DWORD dwAceIndex)
DWORD WINAPI mstlsapi.TLSLicenseEnumNext(_In_ TLS_HANDLE hHandle,_In_ LSLicense *lpLicense,_Out_ PDWORD pdwErrCode)
HRESULT WINAPI wsdapi.WSDXMLCreateContext(_Out_ IWSDXMLContext **ppContext)
BOOL WINAPI wtsapi32.WTSStopRemoteControlSession(_In_ ULONG LogonId)
DWORD WINAPI powrprof.PowerSettingUnregisterNotification(_Inout_ HPOWERNOTIFY RegistrationHandle)
BOOL WINAPI kernel32.WritePrivateProfileSection(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpString,_In_ LPCTSTR lpFileName)
BOOL WINAPI kernel32.WritePrivateProfileSectionW(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpString,_In_ LPCTSTR lpFileName)
BOOL WINAPI kernel32.WritePrivateProfileSectionA(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpString,_In_ LPCTSTR lpFileName)
BOOLEAN WINAPI powrprof.GetCurrentPowerPolicies(_Out_ PGLOBAL_POWER_POLICY pGlobalPowerPolicy,_Out_ PPOWER_POLICY pPowerPolicy)
LONG WINAPI advapi32.RegUnLoadKey(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey)
LONG WINAPI advapi32.RegUnLoadKeyW(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey)
LONG WINAPI advapi32.RegUnLoadKeyA(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey)
BOOL WINAPI user32.SetDoubleClickTime(_In_ UINT uInterval)
BOOL WINAPI wtsapi32.WTSCreateListener(_In_ HANDLE hServer,_In_ PVOID pReserved,_In_ DWORD Reserved,_In_ LPTSTR pListenerName,_In_ PWTSLISTENERCONFIG pBuffer,_In_ DWORD flag)
BOOL WINAPI wtsapi32.WTSCreateListenerW(_In_ HANDLE hServer,_In_ PVOID pReserved,_In_ DWORD Reserved,_In_ LPTSTR pListenerName,_In_ PWTSLISTENERCONFIG pBuffer,_In_ DWORD flag)
BOOL WINAPI wtsapi32.WTSCreateListenerA(_In_ HANDLE hServer,_In_ PVOID pReserved,_In_ DWORD Reserved,_In_ LPTSTR pListenerName,_In_ PWTSLISTENERCONFIG pBuffer,_In_ DWORD flag)
INT_PTR WINAPI user32.DialogBoxIndirectParam(_In_opt_ HINSTANCE hInstance,_In_ LPCDLGTEMPLATE hDialogTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc,_In_ LPARAM dwInitParam)
INT_PTR WINAPI user32.DialogBoxIndirectParamW(_In_opt_ HINSTANCE hInstance,_In_ LPCDLGTEMPLATE hDialogTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc,_In_ LPARAM dwInitParam)
INT_PTR WINAPI user32.DialogBoxIndirectParamA(_In_opt_ HINSTANCE hInstance,_In_ LPCDLGTEMPLATE hDialogTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc,_In_ LPARAM dwInitParam)
BOOL WINAPI wtsapi32.WTSIsChildSessionsEnabled(_Out_ BOOL *pbEnabled)
BOOLEAN WINAPI powrprof.ReadPwrScheme(_In_ UINT uiID,_Out_ PPOWER_POLICY pPowerPolicy)
BOOL WINAPI wtsapi32.WTSEnumerateSessionsEx(_In_ HANDLE hServer,_Inout_ DWORD *pLevel,_In_ DWORD Filter,_Out_ PWTS_SESSION_INFO_1 *ppSessionInfo,_Out_ DWORD *pCount)
BOOL WINAPI wtsapi32.WTSEnumerateSessionsExW(_In_ HANDLE hServer,_Inout_ DWORD *pLevel,_In_ DWORD Filter,_Out_ PWTS_SESSION_INFO_1 *ppSessionInfo,_Out_ DWORD *pCount)
BOOL WINAPI wtsapi32.WTSEnumerateSessionsExA(_In_ HANDLE hServer,_Inout_ DWORD *pLevel,_In_ DWORD Filter,_Out_ PWTS_SESSION_INFO_1 *ppSessionInfo,_Out_ DWORD *pCount)
POWER_PLATFORM_ROLE WINAPI powrprof.PowerDeterminePlatformRoleEx(_In_ ULONG Version)
LRESULT WINAPI user32.DefDlgProc(_In_ HWND hDlg,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
LRESULT WINAPI user32.DefDlgProcW(_In_ HWND hDlg,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
BOOL WINAPI wtsapi32.WTSQueryListenerConfig(_In_ HANDLE hServer,_In_ PVOID pReserved,_In_ DWORD Reserved,_In_ LPTSTR pListenerName,_Out_ PWTSLISTENERCONFIG pBuffer)
BOOL WINAPI wtsapi32.WTSQueryListenerConfigW(_In_ HANDLE hServer,_In_ PVOID pReserved,_In_ DWORD Reserved,_In_ LPTSTR pListenerName,_Out_ PWTSLISTENERCONFIG pBuffer)
BOOL WINAPI wtsapi32.WTSQueryListenerConfigA(_In_ HANDLE hServer,_In_ PVOID pReserved,_In_ DWORD Reserved,_In_ LPTSTR pListenerName,_Out_ PWTSLISTENERCONFIG pBuffer)
LONG WINAPI advapi32.RegUnLoadKey(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey)
LONG WINAPI advapi32.RegUnLoadKeyW(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey)
LONG WINAPI advapi32.RegUnLoadKeyA(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey)
BOOL WINAPI wtsapi32.WTSIsChildSessionsEnabled(_Out_ BOOL *pbEnabled)
BOOLEAN WINAPI powrprof.SetSuspendState(_In_ BOOLEAN Hibernate,_In_ BOOLEAN ForceCritical,_In_ BOOLEAN DisableWakeEvent)
HRESULT WINAPI wsdapi.WSDSetConfigurationOption(DWORD dwOption None,_In_ LPVOID pVoid,DWORD cbInBuffer None)
BOOLEAN WINAPI powrprof.GetCurrentPowerPolicies(_Out_ PGLOBAL_POWER_POLICY pGlobalPowerPolicy,_Out_ PPOWER_POLICY pPowerPolicy)
DWORD WINAPI mstlsapi.TLSLicenseEnumBegin(_In_ TLS_HANDLE hHandle,_In_ DWORD dwSearchParm,_In_ BOOL bMatchAll,_In_ LSLicense *lpSearchParm,_Out_ PDWORD pdwErrCode)
BOOL WINAPI advapi32.DeleteAce(_Inout_ PACL pAcl,_In_ DWORD dwAceIndex)
HPOWERNOTIFY WINAPI user32.RegisterSuspendResumeNotification(_In_ HANDLE hRecipient,_In_ DWORD Flags)
HRESULT WINAPI wsdapi.WSDUriEncode(_In_ LPCWSTR source,_In_ DWORD cchSource,_Out_ LPWSTR *destOut,_Out_opt_ DWORD *cchDestOut)
HRESULT WINAPI wsdapi.WSDXMLCreateContext(_Out_ IWSDXMLContext **ppContext)
HRESULT WINAPI wsdapi.WSDCreateUdpAddress(_In_ IWSDUdpAddress **ppAddress)
LONG WINAPI advapi32.RegEnumKey(_In_ HKEY hKey,_In_ DWORD dwIndex,_Out_ LPTSTR lpName,_In_ DWORD cchName)
LONG WINAPI advapi32.RegEnumKeyW(_In_ HKEY hKey,_In_ DWORD dwIndex,_Out_ LPTSTR lpName,_In_ DWORD cchName)
LONG WINAPI advapi32.RegEnumKeyA(_In_ HKEY hKey,_In_ DWORD dwIndex,_Out_ LPTSTR lpName,_In_ DWORD cchName)
PVOID WINAPI advapi32.FreeSid(_In_ PSID pSid)
INT_PTR WINAPI user32.DialogBoxIndirect(_In_opt_ HINSTANCE hInstance,_In_ LPCDLGTEMPLATE lpTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc)
INT_PTR WINAPI user32.DialogBoxIndirectW(_In_opt_ HINSTANCE hInstance,_In_ LPCDLGTEMPLATE lpTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc)
INT_PTR WINAPI user32.DialogBoxIndirectA(_In_opt_ HINSTANCE hInstance,_In_ LPCDLGTEMPLATE lpTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc)
BOOLEAN WINAPI powrprof.DevicePowerOpen(ULONG Flags None)
BOOL WINAPI user32.IsDialogMessage(_In_ HWND hDlg,_In_ LPMSG lpMsg)
BOOL WINAPI user32.IsDialogMessageW(_In_ HWND hDlg,_In_ LPMSG lpMsg)
BOOL WINAPI user32.IsDialogMessageA(_In_ HWND hDlg,_In_ LPMSG lpMsg)
LRESULT WINAPI user32.DefDlgProc(_In_ HWND hDlg,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
LRESULT WINAPI user32.DefDlgProcW(_In_ HWND hDlg,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
HRESULT WINAPI wsdapi.WSDCreateUdpAddress(_In_ IWSDUdpAddress **ppAddress)
BOOLEAN WINAPI powrprof.WriteGlobalPwrPolicy(_In_ PGLOBAL_POWER_POLICY pGlobalPowerPolicy)
DWORD WINAPI powrprof.PowerRegisterSuspendResumeNotification(_In_ DWORD Flags,_In_ HANDLE Recipient,_Out_ PHPOWERNOTIFY RegistrationHandle)
BOOLEAN WINAPI powrprof.ReadProcessorPwrScheme(_In_ UINT uiID,_Out_ PMACHINE_PROCESSOR_POWER_POLICY pMachineProcessorPowerPolicy)
LONG WINAPI advapi32.RegNotifyChangeKeyValue(_In_ HKEY hKey,_In_ BOOL bWatchSubtree,_In_ DWORD dwNotifyFilter,_In_opt_ HANDLE hEvent,_In_ BOOL fAsynchronous)
DWORD WINAPI powrprof.PowerUnregisterSuspendResumeNotification(_Inout_ HPOWERNOTIFY RegistrationHandle)
DWORD WINAPI mstlsapi.TLSLicenseEnumBegin(_In_ TLS_HANDLE hHandle,_In_ DWORD dwSearchParm,_In_ BOOL bMatchAll,_In_ LSLicense *lpSearchParm,_Out_ PDWORD pdwErrCode)
HRESULT WINAPI wsdapi.WSDUriEncode(_In_ LPCWSTR source,_In_ DWORD cchSource,_Out_ LPWSTR *destOut,_Out_opt_ DWORD *cchDestOut)
BOOL WINAPI user32.SetDoubleClickTime(_In_ UINT uInterval)
DWORD WINAPI powrprof.PowerImportPowerScheme(_In_ HKEY RootPowerKey,_In_ LPCWSTR ImportFileNamePath,_Inout_ GUID **DestinationSchemeGuid)
HPOWERNOTIFY WINAPI user32.RegisterPowerSettingNotification(_In_ HANDLE hRecipient,_In_ LPCGUID PowerSettingGuid,_In_ DWORD Flags)
DWORD WINAPI powrprof.DevicePowerSetDeviceState(_In_ LPCWSTR DeviceDescription,_In_ ULONG SetFlags,_In_ PCVOID SetData)
BOOLEAN WINAPI powrprof.EnumPwrSchemes(_In_ PWRSCHEMESENUMPROC lpfnPwrSchemesEnumProc,_In_ LPARAM lParam)
HRESULT WINAPI wsdapi.WSDGetConfigurationOption(DWORD dwOption None,_Out_ LPVOID pVoid,DWORD cbOutBuffer None)
HRESULT WINAPI wsdapi.WSDXMLCreateContext(_Out_ IWSDXMLContext **ppContext)
BOOLEAN WINAPI powrprof.SetActivePwrScheme(_In_ UINT uiID,_In_opt_ PGLOBAL_POWER_POLICY lpGlobalPowerPolicy,_In_opt_ PPOWER_POLICY lpPowerPolicy)
HRESULT WINAPI wsdapi.WSDCreateUdpMessageParameters(_Out_ IWSDUdpMessageParameters **ppTxParams)
BOOLEAN WINAPI powrprof.ReadGlobalPwrPolicy(_Out_ PGLOBAL_POWER_POLICY pGlobalPowerPolicy)
BOOL WINAPI wtsapi32.WTSStopRemoteControlSession(_In_ ULONG LogonId)
LONG WINAPI advapi32.RegEnumKeyEx(_In_ HKEY hKey,_In_ DWORD dwIndex,_Out_ LPTSTR lpName,_Inout_ LPDWORD lpcName,_Reserved_ LPDWORD lpReserved,_Inout_ LPTSTR lpClass,_Inout_opt_ LPDWORD lpcClass,_Out_opt_ PFILETIME lpftLastWriteTime)
LONG WINAPI advapi32.RegEnumKeyExW(_In_ HKEY hKey,_In_ DWORD dwIndex,_Out_ LPTSTR lpName,_Inout_ LPDWORD lpcName,_Reserved_ LPDWORD lpReserved,_Inout_ LPTSTR lpClass,_Inout_opt_ LPDWORD lpcClass,_Out_opt_ PFILETIME lpftLastWriteTime)
LONG WINAPI advapi32.RegEnumKeyExA(_In_ HKEY hKey,_In_ DWORD dwIndex,_Out_ LPTSTR lpName,_Inout_ LPDWORD lpcName,_Reserved_ LPDWORD lpReserved,_Inout_ LPTSTR lpClass,_Inout_opt_ LPDWORD lpcClass,_Out_opt_ PFILETIME lpftLastWriteTime)
LRESULT WINAPI user32.DefDlgProc(_In_ HWND hDlg,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
LRESULT WINAPI user32.DefDlgProcW(_In_ HWND hDlg,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
HRESULT WINAPI wsdapi.WSDCreateDeviceHost2(_In_ LPCWSTR pszLocalId,_In_ IWSDXMLContext *pContext,_In_ WSD_CONFIG_PARAM *pConfigParams,_In_ DWORD dwConfigParamCount,_Out_ IWSDDeviceHost **ppDeviceHost)
HRESULT WINAPI wsdapi.WSDXMLCreateContext(_Out_ IWSDXMLContext **ppContext)
HWND WINAPI user32.GetNextDlgGroupItem(_In_ HWND hDlg,_In_opt_ HWND hCtl,_In_ BOOL bPrevious)
BOOL WINAPI user32.IsDialogMessage(_In_ HWND hDlg,_In_ LPMSG lpMsg)
BOOL WINAPI user32.IsDialogMessageW(_In_ HWND hDlg,_In_ LPMSG lpMsg)
BOOL WINAPI user32.IsDialogMessageA(_In_ HWND hDlg,_In_ LPMSG lpMsg)
DWORD WINAPI kernel32.GetPrivateProfileSection(_In_ LPCTSTR lpAppName,_Out_ LPTSTR lpReturnedString,_In_ DWORD nSize,_In_ LPCTSTR lpFileName)
DWORD WINAPI kernel32.GetPrivateProfileSectionW(_In_ LPCTSTR lpAppName,_Out_ LPTSTR lpReturnedString,_In_ DWORD nSize,_In_ LPCTSTR lpFileName)
DWORD WINAPI kernel32.GetPrivateProfileSectionA(_In_ LPCTSTR lpAppName,_Out_ LPTSTR lpReturnedString,_In_ DWORD nSize,_In_ LPCTSTR lpFileName)
HRESULT WINAPI wsdapi.WSDUriEncode(_In_ LPCWSTR source,_In_ DWORD cchSource,_Out_ LPWSTR *destOut,_Out_opt_ DWORD *cchDestOut)
NTSTATUS WINAPI powrprof.CallNtPowerInformation(_In_ POWER_INFORMATION_LEVEL InformationLevel,_In_ PVOID lpInputBuffer,_In_ ULONG nInputBufferSize,_Out_ PVOID lpOutputBuffer,_In_ ULONG nOutputBufferSize)
BOOL WINAPI kernel32.GetDevicePowerState(_In_ HANDLE hDevice,_Out_ BOOL *pfOn)
BOOL WINAPI user32.IsDialogMessage(_In_ HWND hDlg,_In_ LPMSG lpMsg)
BOOL WINAPI user32.IsDialogMessageW(_In_ HWND hDlg,_In_ LPMSG lpMsg)
BOOL WINAPI user32.IsDialogMessageA(_In_ HWND hDlg,_In_ LPMSG lpMsg)
BOOLEAN WINAPI powrprof.SetActivePwrScheme(_In_ UINT uiID,_In_opt_ PGLOBAL_POWER_POLICY lpGlobalPowerPolicy,_In_opt_ PPOWER_POLICY lpPowerPolicy)
DWORD WINAPI powrprof.PowerReportThermalEvent(_In_ PTHERMAL_EVENT Event)
BOOLEAN WINAPI powrprof.WriteProcessorPwrScheme(_In_ UINT ID,_In_ PMACHINE_PROCESSOR_POWER_POLICY pMachineProcessorPowerPolicy)
DWORD WINAPI powrprof.PowerUnregisterSuspendResumeNotification(_Inout_ HPOWERNOTIFY RegistrationHandle)
DWORD WINAPI mstlsapi.TLSLicenseEnumEnd(_In_ TLS_HANDLE hHandle,_Out_ PDWORD pdwErrCode)
HRESULT WINAPI wsdapi.WSDCreateDeviceHost2(_In_ LPCWSTR pszLocalId,_In_ IWSDXMLContext *pContext,_In_ WSD_CONFIG_PARAM *pConfigParams,_In_ DWORD dwConfigParamCount,_Out_ IWSDDeviceHost **ppDeviceHost)
HRESULT WINAPI wsdapi.WSDXMLCreateContext(_Out_ IWSDXMLContext **ppContext)
BOOLEAN WINAPI powrprof.SetSuspendState(_In_ BOOLEAN Hibernate,_In_ BOOLEAN ForceCritical,_In_ BOOLEAN DisableWakeEvent)
BOOLEAN WINAPI powrprof.ReadPwrScheme(_In_ UINT uiID,_Out_ PPOWER_POLICY pPowerPolicy)
HRESULT WINAPI wsdapi.WSDGetConfigurationOption(DWORD dwOption None,_Out_ LPVOID pVoid,DWORD cbOutBuffer None)
HRESULT WINAPI wsdapi.WSDXMLCreateContext(_Out_ IWSDXMLContext **ppContext)
BOOL WINAPI kernel32.RequestWakeupLatency(_In_ LATENCY_TIME latency)
DWORD WINAPI kernel32.GetPrivateProfileSection(_In_ LPCTSTR lpAppName,_Out_ LPTSTR lpReturnedString,_In_ DWORD nSize,_In_ LPCTSTR lpFileName)
DWORD WINAPI kernel32.GetPrivateProfileSectionW(_In_ LPCTSTR lpAppName,_Out_ LPTSTR lpReturnedString,_In_ DWORD nSize,_In_ LPCTSTR lpFileName)
DWORD WINAPI kernel32.GetPrivateProfileSectionA(_In_ LPCTSTR lpAppName,_Out_ LPTSTR lpReturnedString,_In_ DWORD nSize,_In_ LPCTSTR lpFileName)
HWND WINAPI user32.CreateDialogParam(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpTemplateName,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc,_In_ LPARAM dwInitParam)
HWND WINAPI user32.CreateDialogParamW(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpTemplateName,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc,_In_ LPARAM dwInitParam)
HWND WINAPI user32.CreateDialogParamA(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpTemplateName,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc,_In_ LPARAM dwInitParam)
BOOL WINAPI kernel32.SetSystemPowerState(_In_ BOOL fSuspend,_In_ BOOL fForce)
HRESULT WINAPI wsdapi.WSDCreateDeviceHost2(_In_ LPCWSTR pszLocalId,_In_ IWSDXMLContext *pContext,_In_ WSD_CONFIG_PARAM *pConfigParams,_In_ DWORD dwConfigParamCount,_Out_ IWSDDeviceHost **ppDeviceHost)
HRESULT WINAPI wsdapi.WSDXMLCreateContext(_Out_ IWSDXMLContext **ppContext)
HRESULT WINAPI wsdapi.WSDCreateDiscoveryProvider2(_In_ IWSDXMLContext *pContext,_In_ WSD_CONFIG_PARAM *pConfigParams,_In_ DWORD dwConfigParamCount,_Out_ IWSDiscoveryProvider **ppProvider)
BOOL WINAPI wtsapi32.WTSStopRemoteControlSession(_In_ ULONG LogonId)
HRESULT WINAPI wsdapi.WSDUriDecode(_In_ LPCWSTR source,_In_ DWORD cchSource,_Out_ LPWSTR *destOut,_Out_opt_ DWORD *cchDestOut)
DWORD WINAPI mstlsapi.TLSLicenseEnumEnd(_In_ TLS_HANDLE hHandle,_Out_ PDWORD pdwErrCode)
HRESULT WINAPI wsdapi.WSDXMLGetNameFromBuiltinNamespace(LPCWSTR pszNamespace None,LPCWSTR pszName None,WSDXML_NAME **ppName None)
HWND WINAPI user32.GetNextDlgGroupItem(_In_ HWND hDlg,_In_opt_ HWND hCtl,_In_ BOOL bPrevious)
BOOLEAN WINAPI powrprof.GetPwrDiskSpindownRange(_Out_ PUINT RangeMax,_Out_ PUINT RangeMin)
EXECUTION_STATE WINAPI kernel32.SetThreadExecutionState(_In_ EXECUTION_STATE esFlags)
DWORD WINAPI powrprof.PowerGetActiveScheme(_In_opt_ HKEY UserRootPowerKey,_Out_ GUID **ActivePolicyGuid)
HRESULT WINAPI wsdapi.WSDUriEncode(_In_ LPCWSTR source,_In_ DWORD cchSource,_Out_ LPWSTR *destOut,_Out_opt_ DWORD *cchDestOut)
HRESULT WINAPI wsdapi.WSDCreateDeviceHost2(_In_ LPCWSTR pszLocalId,_In_ IWSDXMLContext *pContext,_In_ WSD_CONFIG_PARAM *pConfigParams,_In_ DWORD dwConfigParamCount,_Out_ IWSDDeviceHost **ppDeviceHost)
BOOL WINUSERAPI user32.UnregisterSuspendResumeNotification(_Inout_ HPOWERNOTIFY RegistrationHandle)
HRESULT WINAPI wsdapi.WSDCreateDeviceHost2(_In_ LPCWSTR pszLocalId,_In_ IWSDXMLContext *pContext,_In_ WSD_CONFIG_PARAM *pConfigParams,_In_ DWORD dwConfigParamCount,_Out_ IWSDDeviceHost **ppDeviceHost)
HRESULT WINAPI wsdapi.WSDUriDecode(_In_ LPCWSTR source,_In_ DWORD cchSource,_Out_ LPWSTR *destOut,_Out_opt_ DWORD *cchDestOut)
BOOL WINAPI user32.UnregisterPowerSettingNotification(_In_ HPOWERNOTIFY Handle)
BOOL WINAPI kernel32.WriteProfileSection(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpString)
BOOL WINAPI kernel32.WriteProfileSectionW(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpString)
BOOL WINAPI kernel32.WriteProfileSectionA(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpString)
BOOLEAN WINAPI powrprof.EnumPwrSchemes(_In_ PWRSCHEMESENUMPROC lpfnPwrSchemesEnumProc,_In_ LPARAM lParam)
BOOL WINAPI kernel32.GetDevicePowerState(_In_ HANDLE hDevice,_Out_ BOOL *pfOn)
BOOLEAN WINAPI powrprof.GetPwrCapabilities(_Out_ PSYSTEM_POWER_CAPABILITIES lpSystemPowerCapabilities)
HRESULT WINAPI wsdapi.WSDXMLGetNameFromBuiltinNamespace(LPCWSTR pszNamespace None,LPCWSTR pszName None,WSDXML_NAME **ppName None)
LONG WINAPI advapi32.RegCopyTree(_In_ HKEY hKeySrc,_In_opt_ LPCTSTR lpSubKey,_In_ HKEY hKeyDest)
LONG WINAPI advapi32.RegCopyTreeW(_In_ HKEY hKeySrc,_In_opt_ LPCTSTR lpSubKey,_In_ HKEY hKeyDest)
LONG WINAPI advapi32.RegCopyTreeA(_In_ HKEY hKeySrc,_In_opt_ LPCTSTR lpSubKey,_In_ HKEY hKeyDest)
LONG WINAPI advapi32.RegNotifyChangeKeyValue(_In_ HKEY hKey,_In_ BOOL bWatchSubtree,_In_ DWORD dwNotifyFilter,_In_opt_ HANDLE hEvent,_In_ BOOL fAsynchronous)
DWORD WINAPI powrprof.DevicePowerSetDeviceState(_In_ LPCWSTR DeviceDescription,_In_ ULONG SetFlags,_In_ PCVOID SetData)
BOOLEAN WINAPI powrprof.DeletePwrScheme(_In_ UINT uiIndex)
BOOLEAN WINAPI powrprof.GetActivePwrScheme(_Out_ PUINT puiID)
LONG WINAPI advapi32.RegEnableReflectionKey(_In_ HKEY hBase)
DWORD WINAPI powrprof.PowerGetActiveScheme(_In_opt_ HKEY UserRootPowerKey,_Out_ GUID **ActivePolicyGuid)
HRESULT WINAPI wsdapi.WSDCreateDeviceProxy2(_In_ LPCWSTR pszDeviceId,_In_ LPCWSTR pszLocalId,_In_ IWSDXMLContext *pContext,_In_ WSD_CONFIG_PARAM *pConfigParams,_In_ DWORD dwConfigParamCount,_Out_ IWSDDeviceProxy **ppDeviceProxy)
BOOL WINAPI kernel32.RequestWakeupLatency(_In_ LATENCY_TIME latency)
HRESULT WINAPI wsdapi.WSDCreateDeviceHost2(_In_ LPCWSTR pszLocalId,_In_ IWSDXMLContext *pContext,_In_ WSD_CONFIG_PARAM *pConfigParams,_In_ DWORD dwConfigParamCount,_Out_ IWSDDeviceHost **ppDeviceHost)
HRESULT WINAPI wsdapi.WSDUriDecode(_In_ LPCWSTR source,_In_ DWORD cchSource,_Out_ LPWSTR *destOut,_Out_opt_ DWORD *cchDestOut)
BOOLEAN WINAPI powrprof.ReadPwrScheme(_In_ UINT uiID,_Out_ PPOWER_POLICY pPowerPolicy)
DWORD WINAPI powrprof.PowerGetActiveScheme(_In_opt_ HKEY UserRootPowerKey,_Out_ GUID **ActivePolicyGuid)
BOOLEAN WINAPI powrprof.ReadProcessorPwrScheme(_In_ UINT uiID,_Out_ PMACHINE_PROCESSOR_POWER_POLICY pMachineProcessorPowerPolicy)
BOOL WINAPI kernel32.WriteProfileSection(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpString)
BOOL WINAPI kernel32.WriteProfileSectionW(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpString)
BOOL WINAPI kernel32.WriteProfileSectionA(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpString)
HRESULT WINAPI wsdapi.WSDCreateDiscoveryPublisher2(_In_ IWSDXMLContext *pContext,_In_ WSD_CONFIG_PARAM *pConfigParams,_In_ DWORD dwConfigParamCount,_Out_ IWSDiscoveryPublisher **ppPublisher)
HRESULT WINAPI wsdapi.WSDCreateDeviceHost2(_In_ LPCWSTR pszLocalId,_In_ IWSDXMLContext *pContext,_In_ WSD_CONFIG_PARAM *pConfigParams,_In_ DWORD dwConfigParamCount,_Out_ IWSDDeviceHost **ppDeviceHost)
BOOLEAN WINAPI powrprof.WriteProcessorPwrScheme(_In_ UINT ID,_In_ PMACHINE_PROCESSOR_POWER_POLICY pMachineProcessorPowerPolicy)
BOOLEAN WINAPI powrprof.DevicePowerEnumDevices(_In_ ULONG QueryIndex,_In_ ULONG QueryInterpretationFlags,_In_ ULONG QueryFlags,_Out_opt_ PBYTE pReturnBuffer,_Inout_ PULONG pBufferSize)
BOOLEAN WINAPI powrprof.GetCurrentPowerPolicies(_Out_ PGLOBAL_POWER_POLICY pGlobalPowerPolicy,_Out_ PPOWER_POLICY pPowerPolicy)
BOOLEAN WINAPI powrprof.WriteGlobalPwrPolicy(_In_ PGLOBAL_POWER_POLICY pGlobalPowerPolicy)
BOOL WINAPI kernel32.GetSystemPowerStatus(_Out_ LPSYSTEM_POWER_STATUS lpSystemPowerStatus)
BOOLEAN WINAPI powrprof.WritePwrScheme(_In_ PUINT puiID,_In_ LPWSTR lpszName,_In_opt_ LPWSTR lpszDescription,_In_ PPOWER_POLICY pPowerPolicy)
HRESULT WINAPI wsdapi.WSDCreateDeviceHost2(_In_ LPCWSTR pszLocalId,_In_ IWSDXMLContext *pContext,_In_ WSD_CONFIG_PARAM *pConfigParams,_In_ DWORD dwConfigParamCount,_Out_ IWSDDeviceHost **ppDeviceHost)
HWND WINAPI user32.GetNextDlgGroupItem(_In_ HWND hDlg,_In_opt_ HWND hCtl,_In_ BOOL bPrevious)
BOOLEAN WINAPI powrprof.DevicePowerOpen(ULONG Flags None)
DWORD WINAPI powrprof.DevicePowerSetDeviceState(_In_ LPCWSTR DeviceDescription,_In_ ULONG SetFlags,_In_ PCVOID SetData)
HRESULT WINAPI wsdapi.WSDCreateDeviceHost2(_In_ LPCWSTR pszLocalId,_In_ IWSDXMLContext *pContext,_In_ WSD_CONFIG_PARAM *pConfigParams,_In_ DWORD dwConfigParamCount,_Out_ IWSDDeviceHost **ppDeviceHost)
DWORD WINAPI powrprof.PowerGetActiveScheme(_In_opt_ HKEY UserRootPowerKey,_Out_ GUID **ActivePolicyGuid)
HRESULT WINAPI wsdapi.WSDCreateDiscoveryProvider2(_In_ IWSDXMLContext *pContext,_In_ WSD_CONFIG_PARAM *pConfigParams,_In_ DWORD dwConfigParamCount,_Out_ IWSDiscoveryProvider **ppProvider)
HWND WINAPI user32.CreateDialogParam(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpTemplateName,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc,_In_ LPARAM dwInitParam)
HWND WINAPI user32.CreateDialogParamW(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpTemplateName,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc,_In_ LPARAM dwInitParam)
HWND WINAPI user32.CreateDialogParamA(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpTemplateName,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc,_In_ LPARAM dwInitParam)
HRESULT WINAPI wsdapi.WSDCreateDeviceHost2(_In_ LPCWSTR pszLocalId,_In_ IWSDXMLContext *pContext,_In_ WSD_CONFIG_PARAM *pConfigParams,_In_ DWORD dwConfigParamCount,_Out_ IWSDDeviceHost **ppDeviceHost)
DWORD WINAPI powrprof.PowerReportThermalEvent(_In_ PTHERMAL_EVENT Event)
BOOL WINAPI user32.UnregisterPowerSettingNotification(_In_ HPOWERNOTIFY Handle)
BOOLEAN WINAPI powrprof.GetActivePwrScheme(_Out_ PUINT puiID)
BOOLEAN WINAPI powrprof.GetPwrDiskSpindownRange(_Out_ PUINT RangeMax,_Out_ PUINT RangeMin)
DWORD WINAPI powrprof.DevicePowerSetDeviceState(_In_ LPCWSTR DeviceDescription,_In_ ULONG SetFlags,_In_ PCVOID SetData)
BOOLEAN WINAPI powrprof.GetPwrCapabilities(_Out_ PSYSTEM_POWER_CAPABILITIES lpSystemPowerCapabilities)
DWORD WINAPI powrprof.PowerReportThermalEvent(_In_ PTHERMAL_EVENT Event)
HRESULT WINAPI wsdapi.WSDCreateDeviceProxy2(_In_ LPCWSTR pszDeviceId,_In_ LPCWSTR pszLocalId,_In_ IWSDXMLContext *pContext,_In_ WSD_CONFIG_PARAM *pConfigParams,_In_ DWORD dwConfigParamCount,_Out_ IWSDDeviceProxy **ppDeviceProxy)
LONG WINAPI advapi32.RegSaveKey(_In_ HKEY hKey,_In_ LPCTSTR lpFile,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes)
LONG WINAPI advapi32.RegSaveKeyW(_In_ HKEY hKey,_In_ LPCTSTR lpFile,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes)
LONG WINAPI advapi32.RegSaveKeyA(_In_ HKEY hKey,_In_ LPCTSTR lpFile,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes)
DWORD WINAPI powrprof.DevicePowerSetDeviceState(_In_ LPCWSTR DeviceDescription,_In_ ULONG SetFlags,_In_ PCVOID SetData)
LONG WINAPI advapi32.RegCopyTree(_In_ HKEY hKeySrc,_In_opt_ LPCTSTR lpSubKey,_In_ HKEY hKeyDest)
LONG WINAPI advapi32.RegCopyTreeW(_In_ HKEY hKeySrc,_In_opt_ LPCTSTR lpSubKey,_In_ HKEY hKeyDest)
LONG WINAPI advapi32.RegCopyTreeA(_In_ HKEY hKeySrc,_In_opt_ LPCTSTR lpSubKey,_In_ HKEY hKeyDest)
HRESULT WINAPI wsdapi.WSDCreateDiscoveryPublisher2(_In_ IWSDXMLContext *pContext,_In_ WSD_CONFIG_PARAM *pConfigParams,_In_ DWORD dwConfigParamCount,_Out_ IWSDiscoveryPublisher **ppPublisher)
DWORD WINAPI powrprof.DevicePowerSetDeviceState(_In_ LPCWSTR DeviceDescription,_In_ ULONG SetFlags,_In_ PCVOID SetData)
BOOLEAN WINAPI powrprof.WriteProcessorPwrScheme(_In_ UINT ID,_In_ PMACHINE_PROCESSOR_POWER_POLICY pMachineProcessorPowerPolicy)
BOOLEAN WINAPI powrprof.EnumPwrSchemes(_In_ PWRSCHEMESENUMPROC lpfnPwrSchemesEnumProc,_In_ LPARAM lParam)
BOOLEAN WINAPI powrprof.ReadProcessorPwrScheme(_In_ UINT uiID,_Out_ PMACHINE_PROCESSOR_POWER_POLICY pMachineProcessorPowerPolicy)
BOOL WINAPI kernel32.RequestWakeupLatency(_In_ LATENCY_TIME latency)
DWORD WINAPI powrprof.PowerReportThermalEvent(_In_ PTHERMAL_EVENT Event)
BOOLEAN WINAPI powrprof.EnumPwrSchemes(_In_ PWRSCHEMESENUMPROC lpfnPwrSchemesEnumProc,_In_ LPARAM lParam)
BOOLEAN WINAPI powrprof.ReadProcessorPwrScheme(_In_ UINT uiID,_Out_ PMACHINE_PROCESSOR_POWER_POLICY pMachineProcessorPowerPolicy)
HRESULT WINAPI wsdapi.WSDCreateDiscoveryPublisher2(_In_ IWSDXMLContext *pContext,_In_ WSD_CONFIG_PARAM *pConfigParams,_In_ DWORD dwConfigParamCount,_Out_ IWSDiscoveryPublisher **ppPublisher)
HPOWERNOTIFY WINAPI user32.RegisterPowerSettingNotification(_In_ HANDLE hRecipient,_In_ LPCGUID PowerSettingGuid,_In_ DWORD Flags)
HRESULT WINAPI wsdapi.WSDCreateDiscoveryPublisher2(_In_ IWSDXMLContext *pContext,_In_ WSD_CONFIG_PARAM *pConfigParams,_In_ DWORD dwConfigParamCount,_Out_ IWSDiscoveryPublisher **ppPublisher)
LONG WINAPI advapi32.RegReplaceKey(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_ LPCTSTR lpNewFile,_In_ LPCTSTR lpOldFile)
LONG WINAPI advapi32.RegReplaceKeyW(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_ LPCTSTR lpNewFile,_In_ LPCTSTR lpOldFile)
LONG WINAPI advapi32.RegReplaceKeyA(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_ LPCTSTR lpNewFile,_In_ LPCTSTR lpOldFile)
HRESULT WINAPI wsdapi.WSDCreateDiscoveryPublisher2(_In_ IWSDXMLContext *pContext,_In_ WSD_CONFIG_PARAM *pConfigParams,_In_ DWORD dwConfigParamCount,_Out_ IWSDiscoveryPublisher **ppPublisher)
LONG WINAPI advapi32.RegEnableReflectionKey(_In_ HKEY hBase)
DWORD WINAPI powrprof.PowerImportPowerScheme(_In_ HKEY RootPowerKey,_In_ LPCWSTR ImportFileNamePath,_Inout_ GUID **DestinationSchemeGuid)
BOOL WINAPI kernel32.WritePrivateProfileStruct(_In_ LPCTSTR lpszSection,_In_ LPCTSTR lpszKey,_In_ LPVOID lpStruct,_In_ UINT uSizeStruct,_In_ LPCTSTR szFile)
BOOL WINAPI kernel32.WritePrivateProfileStructW(_In_ LPCTSTR lpszSection,_In_ LPCTSTR lpszKey,_In_ LPVOID lpStruct,_In_ UINT uSizeStruct,_In_ LPCTSTR szFile)
BOOL WINAPI kernel32.WritePrivateProfileStructA(_In_ LPCTSTR lpszSection,_In_ LPCTSTR lpszKey,_In_ LPVOID lpStruct,_In_ UINT uSizeStruct,_In_ LPCTSTR szFile)
BOOL WINAPI kernel32.GetDevicePowerState(_In_ HANDLE hDevice,_Out_ BOOL *pfOn)
BOOL WINAPI user32.UnregisterPowerSettingNotification(_In_ HPOWERNOTIFY Handle)
LONG WINAPI advapi32.RegConnectRegistry(_In_opt_ LPCTSTR lpMachineName,_In_ HKEY hKey,_Out_ PHKEY phkResult)
LONG WINAPI advapi32.RegConnectRegistryW(_In_opt_ LPCTSTR lpMachineName,_In_ HKEY hKey,_Out_ PHKEY phkResult)
LONG WINAPI advapi32.RegConnectRegistryA(_In_opt_ LPCTSTR lpMachineName,_In_ HKEY hKey,_Out_ PHKEY phkResult)
LONG WINAPI advapi32.RegFlushKey(_In_ HKEY hKey)
EXECUTION_STATE WINAPI kernel32.SetThreadExecutionState(_In_ EXECUTION_STATE esFlags)
BOOLEAN WINAPI powrprof.EnumPwrSchemes(_In_ PWRSCHEMESENUMPROC lpfnPwrSchemesEnumProc,_In_ LPARAM lParam)
DWORD WINAPI powrprof.DevicePowerSetDeviceState(_In_ LPCWSTR DeviceDescription,_In_ ULONG SetFlags,_In_ PCVOID SetData)
BOOL WINAPI kernel32.GetDevicePowerState(_In_ HANDLE hDevice,_Out_ BOOL *pfOn)
BOOLEAN WINAPI powrprof.WriteProcessorPwrScheme(_In_ UINT ID,_In_ PMACHINE_PROCESSOR_POWER_POLICY pMachineProcessorPowerPolicy)
BOOLEAN WINAPI powrprof.WritePwrScheme(_In_ PUINT puiID,_In_ LPWSTR lpszName,_In_opt_ LPWSTR lpszDescription,_In_ PPOWER_POLICY pPowerPolicy)
LONG WINAPI advapi32.RegReplaceKey(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_ LPCTSTR lpNewFile,_In_ LPCTSTR lpOldFile)
LONG WINAPI advapi32.RegReplaceKeyW(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_ LPCTSTR lpNewFile,_In_ LPCTSTR lpOldFile)
LONG WINAPI advapi32.RegReplaceKeyA(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_ LPCTSTR lpNewFile,_In_ LPCTSTR lpOldFile)
LRESULT CALLBACK None.WindowProc(HWND hwnd None,UINT uMsg None,WPARAM wParam None,LPARAM lParam None)
DWORD WINAPI powrprof.PowerReportThermalEvent(_In_ PTHERMAL_EVENT Event)
BOOLEAN WINAPI powrprof.GetPwrDiskSpindownRange(_Out_ PUINT RangeMax,_Out_ PUINT RangeMin)
DWORD WINAPI powrprof.PowerReportThermalEvent(_In_ PTHERMAL_EVENT Event)
BOOLEAN WINAPI powrprof.GetPwrCapabilities(_Out_ PSYSTEM_POWER_CAPABILITIES lpSystemPowerCapabilities)
BOOL WINUSERAPI user32.UnregisterSuspendResumeNotification(_Inout_ HPOWERNOTIFY RegistrationHandle)
LONG WINAPI advapi32.RegFlushKey(_In_ HKEY hKey)
BOOLEAN WINAPI powrprof.GetPwrDiskSpindownRange(_Out_ PUINT RangeMax,_Out_ PUINT RangeMin)
LRESULT CALLBACK None.WindowProc(HWND hwnd None,UINT uMsg None,WPARAM wParam None,LPARAM lParam None)
BOOLEAN WINAPI powrprof.GetPwrCapabilities(_Out_ PSYSTEM_POWER_CAPABILITIES lpSystemPowerCapabilities)
LRESULT CALLBACK None.WindowProc(HWND hwnd None,UINT uMsg None,WPARAM wParam None,LPARAM lParam None)
LONG WINAPI advapi32.RegDeleteKeyTransacted(_In_ HKEY hKey,_In_ LPCTSTR lpSubKey,_In_ REGSAM samDesired,_Reserved_ DWORD Reserved,_In_ HANDLE hTransaction,_Reserved_ PVOID pExtendedParameter)
LONG WINAPI advapi32.RegDeleteKeyTransactedW(_In_ HKEY hKey,_In_ LPCTSTR lpSubKey,_In_ REGSAM samDesired,_Reserved_ DWORD Reserved,_In_ HANDLE hTransaction,_Reserved_ PVOID pExtendedParameter)
LONG WINAPI advapi32.RegDeleteKeyTransactedA(_In_ HKEY hKey,_In_ LPCTSTR lpSubKey,_In_ REGSAM samDesired,_Reserved_ DWORD Reserved,_In_ HANDLE hTransaction,_Reserved_ PVOID pExtendedParameter)
BOOLEAN WINAPI powrprof.WritePwrScheme(_In_ PUINT puiID,_In_ LPWSTR lpszName,_In_opt_ LPWSTR lpszDescription,_In_ PPOWER_POLICY pPowerPolicy)
BOOLEAN WINAPI powrprof.GetPwrDiskSpindownRange(_Out_ PUINT RangeMax,_Out_ PUINT RangeMin)
LONG WINAPI advapi32.RegLoadAppKey(_In_ LPCTSTR lpFile,_Out_ PHKEY phkResult,_In_ REGSAM samDesired,_In_ DWORD dwOptions,_Reserved_ DWORD Reserved)
LONG WINAPI advapi32.RegLoadAppKeyW(_In_ LPCTSTR lpFile,_Out_ PHKEY phkResult,_In_ REGSAM samDesired,_In_ DWORD dwOptions,_Reserved_ DWORD Reserved)
LONG WINAPI advapi32.RegLoadAppKeyA(_In_ LPCTSTR lpFile,_Out_ PHKEY phkResult,_In_ REGSAM samDesired,_In_ DWORD dwOptions,_Reserved_ DWORD Reserved)
LONG WINAPI advapi32.RegConnectRegistry(_In_opt_ LPCTSTR lpMachineName,_In_ HKEY hKey,_Out_ PHKEY phkResult)
LONG WINAPI advapi32.RegConnectRegistryW(_In_opt_ LPCTSTR lpMachineName,_In_ HKEY hKey,_Out_ PHKEY phkResult)
LONG WINAPI advapi32.RegConnectRegistryA(_In_opt_ LPCTSTR lpMachineName,_In_ HKEY hKey,_Out_ PHKEY phkResult)
UINT WINAPI user32.GetRawInputDeviceInfo(_In_opt_ HANDLE hDevice,_In_ UINT uiCommand,_Inout_opt_ LPVOID pData,_Inout_ PUINT pcbSize)
UINT WINAPI user32.GetRawInputDeviceInfoW(_In_opt_ HANDLE hDevice,_In_ UINT uiCommand,_Inout_opt_ LPVOID pData,_Inout_ PUINT pcbSize)
UINT WINAPI user32.GetRawInputDeviceInfoA(_In_opt_ HANDLE hDevice,_In_ UINT uiCommand,_Inout_opt_ LPVOID pData,_Inout_ PUINT pcbSize)
LRESULT CALLBACK None.WindowProc(HWND hwnd None,UINT uMsg None,WPARAM wParam None,LPARAM lParam None)
BOOL WINAPI kernel32.GetSystemPowerStatus(_Out_ LPSYSTEM_POWER_STATUS lpSystemPowerStatus)
LONG WINAPI advapi32.RegReplaceKey(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_ LPCTSTR lpNewFile,_In_ LPCTSTR lpOldFile)
LONG WINAPI advapi32.RegReplaceKeyW(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_ LPCTSTR lpNewFile,_In_ LPCTSTR lpOldFile)
LONG WINAPI advapi32.RegReplaceKeyA(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_ LPCTSTR lpNewFile,_In_ LPCTSTR lpOldFile)
HRESULT __stdcall comsvcs.GetManagedExtensions(_Out_ DWORD *dwExts)
DWORD WINAPI powrprof.PowerReportThermalEvent(_In_ PTHERMAL_EVENT Event)
HRESULT __cdecl mtxdm.GetDispenserManager(_Out_ IDispenserManager **ppIDispenserManager)
LONG WINAPI advapi32.RegFlushKey(_In_ HKEY hKey)
UINT WINAPI user32.GetRawInputData(_In_ HRAWINPUT hRawInput,_In_ UINT uiCommand,_Out_opt_ LPVOID pData,_Inout_ PUINT pcbSize,_In_ UINT cbSizeHeader)
UINT WINAPI user32.GetRawInputDeviceInfo(_In_opt_ HANDLE hDevice,_In_ UINT uiCommand,_Inout_opt_ LPVOID pData,_Inout_ PUINT pcbSize)
UINT WINAPI user32.GetRawInputDeviceInfoW(_In_opt_ HANDLE hDevice,_In_ UINT uiCommand,_Inout_opt_ LPVOID pData,_Inout_ PUINT pcbSize)
UINT WINAPI user32.GetRawInputDeviceInfoA(_In_opt_ HANDLE hDevice,_In_ UINT uiCommand,_Inout_opt_ LPVOID pData,_Inout_ PUINT pcbSize)
BOOLEAN WINAPI powrprof.ReadProcessorPwrScheme(_In_ UINT uiID,_Out_ PMACHINE_PROCESSOR_POWER_POLICY pMachineProcessorPowerPolicy)
LONG WINAPI advapi32.RegDeleteKeyTransacted(_In_ HKEY hKey,_In_ LPCTSTR lpSubKey,_In_ REGSAM samDesired,_Reserved_ DWORD Reserved,_In_ HANDLE hTransaction,_Reserved_ PVOID pExtendedParameter)
LONG WINAPI advapi32.RegDeleteKeyTransactedW(_In_ HKEY hKey,_In_ LPCTSTR lpSubKey,_In_ REGSAM samDesired,_Reserved_ DWORD Reserved,_In_ HANDLE hTransaction,_Reserved_ PVOID pExtendedParameter)
LONG WINAPI advapi32.RegDeleteKeyTransactedA(_In_ HKEY hKey,_In_ LPCTSTR lpSubKey,_In_ REGSAM samDesired,_Reserved_ DWORD Reserved,_In_ HANDLE hTransaction,_Reserved_ PVOID pExtendedParameter)
BOOL WINAPI user32.RegisterRawInputDevices(_In_ PCRAWINPUTDEVICE pRawInputDevices,_In_ UINT uiNumDevices,_In_ UINT cbSize)
LONG WINAPI advapi32.RegConnectRegistry(_In_opt_ LPCTSTR lpMachineName,_In_ HKEY hKey,_Out_ PHKEY phkResult)
LONG WINAPI advapi32.RegConnectRegistryW(_In_opt_ LPCTSTR lpMachineName,_In_ HKEY hKey,_Out_ PHKEY phkResult)
LONG WINAPI advapi32.RegConnectRegistryA(_In_opt_ LPCTSTR lpMachineName,_In_ HKEY hKey,_Out_ PHKEY phkResult)
BOOL WINAPI kernel32.WriteProfileString(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ LPCTSTR lpString)
BOOL WINAPI kernel32.WriteProfileStringW(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ LPCTSTR lpString)
BOOL WINAPI kernel32.WriteProfileStringA(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ LPCTSTR lpString)
LRESULT CALLBACK None.WindowProc(HWND hwnd None,UINT uMsg None,WPARAM wParam None,LPARAM lParam None)
LONG WINAPI advapi32.RegFlushKey(_In_ HKEY hKey)
LONG WINAPI advapi32.RegSaveKeyEx(_In_ HKEY hKey,_In_ LPCTSTR lpFile,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ DWORD Flags)
LONG WINAPI advapi32.RegSaveKeyExW(_In_ HKEY hKey,_In_ LPCTSTR lpFile,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ DWORD Flags)
LONG WINAPI advapi32.RegSaveKeyExA(_In_ HKEY hKey,_In_ LPCTSTR lpFile,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ DWORD Flags)
UINT WINAPI user32.GetRawInputDeviceInfo(_In_opt_ HANDLE hDevice,_In_ UINT uiCommand,_Inout_opt_ LPVOID pData,_Inout_ PUINT pcbSize)
UINT WINAPI user32.GetRawInputDeviceInfoW(_In_opt_ HANDLE hDevice,_In_ UINT uiCommand,_Inout_opt_ LPVOID pData,_Inout_ PUINT pcbSize)
UINT WINAPI user32.GetRawInputDeviceInfoA(_In_opt_ HANDLE hDevice,_In_ UINT uiCommand,_Inout_opt_ LPVOID pData,_Inout_ PUINT pcbSize)
LRESULT CALLBACK None.WindowProc(HWND hwnd None,UINT uMsg None,WPARAM wParam None,LPARAM lParam None)
HRESULT __cdecl mtxdm.GetDispenserManager(_Out_ IDispenserManager **ppIDispenserManager)
BOOLEAN WINAPI powrprof.WritePwrScheme(_In_ PUINT puiID,_In_ LPWSTR lpszName,_In_opt_ LPWSTR lpszDescription,_In_ PPOWER_POLICY pPowerPolicy)
BOOL WINAPI dbghelp.MiniDumpWriteDump(_In_ HANDLE hProcess,_In_ DWORD ProcessId,_In_ HANDLE hFile,_In_ MINIDUMP_TYPE DumpType,_In_ PMINIDUMP_EXCEPTION_INFORMATION ExceptionParam,_In_ PMINIDUMP_USER_STREAM_INFORMATION UserStreamParam,_In_ PMINIDUMP_CALLBACK_INFORMATION CallbackParam)
HRESULT __cdecl mtxdm.GetDispenserManager(_Out_ IDispenserManager **ppIDispenserManager)
BOOL WINAPI dbghelp.SymEnumSourceFiles(_In_ HANDLE hProcess,_In_ ULONG64 ModBase,_In_opt_ PCTSTR Mask,_In_ PSYM_ENUMSOURCEFILES_CALLBACK EnumSymbolsCallback,_In_opt_ PVOID UserContext)
BOOL WINAPI dbghelp.SymEnumSourceFilesW(_In_ HANDLE hProcess,_In_ ULONG64 ModBase,_In_opt_ PCTSTR Mask,_In_ PSYM_ENUMSOURCEFILES_CALLBACK EnumSymbolsCallback,_In_opt_ PVOID UserContext)
BOOL WINAPI dbghelp.SymEnumSourceFiles(_In_ HANDLE hProcess,_In_ ULONG64 ModBase,_In_opt_ PCTSTR Mask,_In_ PSYM_ENUMSOURCEFILES_CALLBACK EnumSymbolsCallback,_In_opt_ PVOID UserContext)
LRESULT CALLBACK None.WindowProc(HWND hwnd None,UINT uMsg None,WPARAM wParam None,LPARAM lParam None)
LONG WINAPI advapi32.RegLoadAppKey(_In_ LPCTSTR lpFile,_Out_ PHKEY phkResult,_In_ REGSAM samDesired,_In_ DWORD dwOptions,_Reserved_ DWORD Reserved)
LONG WINAPI advapi32.RegLoadAppKeyW(_In_ LPCTSTR lpFile,_Out_ PHKEY phkResult,_In_ REGSAM samDesired,_In_ DWORD dwOptions,_Reserved_ DWORD Reserved)
LONG WINAPI advapi32.RegLoadAppKeyA(_In_ LPCTSTR lpFile,_Out_ PHKEY phkResult,_In_ REGSAM samDesired,_In_ DWORD dwOptions,_Reserved_ DWORD Reserved)
BOOL CALLBACK None.SymEnumSourceFilesProc(_In_ PSOURCEFILE pSourceFile,_In_opt_ PVOID UserContext)
DWORD WINAPI powrprof.PowerReportThermalEvent(_In_ PTHERMAL_EVENT Event)
BOOLEAN WINAPI powrprof.WritePwrScheme(_In_ PUINT puiID,_In_ LPWSTR lpszName,_In_opt_ LPWSTR lpszDescription,_In_ PPOWER_POLICY pPowerPolicy)
HRESULT __stdcall comsvcs.CoEnterServiceDomain(_In_ IUnknown *pConfigObject)
HRESULT __cdecl mtxdm.GetDispenserManager(_Out_ IDispenserManager **ppIDispenserManager)
UINT WINAPI user32.GetRegisteredRawInputDevices(_Out_opt_ PRAWINPUTDEVICE pRawInputDevices,_Inout_ PUINT puiNumDevices,_In_ UINT cbSize)
UINT WINAPI user32.GetRawInputDeviceInfo(_In_opt_ HANDLE hDevice,_In_ UINT uiCommand,_Inout_opt_ LPVOID pData,_Inout_ PUINT pcbSize)
UINT WINAPI user32.GetRawInputDeviceInfoW(_In_opt_ HANDLE hDevice,_In_ UINT uiCommand,_Inout_opt_ LPVOID pData,_Inout_ PUINT pcbSize)
UINT WINAPI user32.GetRawInputDeviceInfoA(_In_opt_ HANDLE hDevice,_In_ UINT uiCommand,_Inout_opt_ LPVOID pData,_Inout_ PUINT pcbSize)
LRESULT CALLBACK None.WindowProc(HWND hwnd None,UINT uMsg None,WPARAM wParam None,LPARAM lParam None)
LRESULT CALLBACK None.WindowProc(HWND hwnd None,UINT uMsg None,WPARAM wParam None,LPARAM lParam None)
UINT WINAPI user32.GetRawInputData(_In_ HRAWINPUT hRawInput,_In_ UINT uiCommand,_Out_opt_ LPVOID pData,_Inout_ PUINT pcbSize,_In_ UINT cbSizeHeader)
BOOL WINAPI dbghelp.SymFromToken(_In_ HANDLE hProcess,_In_ DWORD64 Base,_In_ DWORD Token,_Inout_ PSYMBOL_INFO Symbol)
BOOL WINAPI dbghelp.SymFromTokenW(_In_ HANDLE hProcess,_In_ DWORD64 Base,_In_ DWORD Token,_Inout_ PSYMBOL_INFO Symbol)
BOOL WINAPI dbghelp.SymFromToken(_In_ HANDLE hProcess,_In_ DWORD64 Base,_In_ DWORD Token,_Inout_ PSYMBOL_INFO Symbol)
BOOLEAN WINAPI powrprof.WritePwrScheme(_In_ PUINT puiID,_In_ LPWSTR lpszName,_In_opt_ LPWSTR lpszDescription,_In_ PPOWER_POLICY pPowerPolicy)
BOOL WINAPI dbghelp.SymGetSymFromName64(_In_ HANDLE hProcess,_In_ PCSTR Name,_Inout_ PIMAGEHLP_SYMBOL64 Symbol)
BOOL WINAPI dbghelp.SymEnumSourceFileTokens(_In_ HANDLE hProcess,_In_ ULONG64 Base,_In_ PENUMSOURCEFILETOKENSCALLBACK Callback)
BOOLEAN WINAPI powrprof.WritePwrScheme(_In_ PUINT puiID,_In_ LPWSTR lpszName,_In_opt_ LPWSTR lpszDescription,_In_ PPOWER_POLICY pPowerPolicy)
LONG WINAPI advapi32.RegDeleteKeyValue(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_opt_ LPCTSTR lpValueName)
LONG WINAPI advapi32.RegDeleteKeyValueW(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_opt_ LPCTSTR lpValueName)
LONG WINAPI advapi32.RegDeleteKeyValueA(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_opt_ LPCTSTR lpValueName)
PCTSTR WINAPI dbghelp.SymSrvDeltaName(_In_ HANDLE hProcess,_In_opt_ PCTSTR SymPath,_In_ PCTSTR Type,_In_ PCTSTR File1,_In_ PCTSTR File2)
PCTSTR WINAPI dbghelp.SymSrvDeltaNameW(_In_ HANDLE hProcess,_In_opt_ PCTSTR SymPath,_In_ PCTSTR Type,_In_ PCTSTR File1,_In_ PCTSTR File2)
PCTSTR WINAPI dbghelp.SymSrvDeltaName(_In_ HANDLE hProcess,_In_opt_ PCTSTR SymPath,_In_ PCTSTR Type,_In_ PCTSTR File1,_In_ PCTSTR File2)
BOOL WINAPI dbghelp.SymFromIndex(_In_ HANDLE hProcess,_In_ ULONG64 BaseOfDll,_In_ DWORD Index,_Inout_ PSYMBOL_INFO Symbol)
BOOL WINAPI dbghelp.SymFromIndexW(_In_ HANDLE hProcess,_In_ ULONG64 BaseOfDll,_In_ DWORD Index,_Inout_ PSYMBOL_INFO Symbol)
BOOL WINAPI dbghelp.SymFromIndex(_In_ HANDLE hProcess,_In_ ULONG64 BaseOfDll,_In_ DWORD Index,_Inout_ PSYMBOL_INFO Symbol)
HRESULT __cdecl mtxdm.GetDispenserManager(_Out_ IDispenserManager **ppIDispenserManager)
BOOL WINAPI dbghelp.EnumerateLoadedModules64(_In_ HANDLE hProcess,_In_ PENUMLOADED_MODULES_CALLBACK64 EnumLoadedModulesCallback,_In_opt_ PVOID UserContext)
BOOL WINAPI dbghelp.EnumerateLoadedModulesW64(_In_ HANDLE hProcess,_In_ PENUMLOADED_MODULES_CALLBACK64 EnumLoadedModulesCallback,_In_opt_ PVOID UserContext)
BOOL WINAPI dbghelp.EnumerateLoadedModules64(_In_ HANDLE hProcess,_In_ PENUMLOADED_MODULES_CALLBACK64 EnumLoadedModulesCallback,_In_opt_ PVOID UserContext)
BOOL WINAPI dbghelp.SymSearch(_In_ HANDLE hProcess,_In_ ULONG64 BaseOfDll,_In_opt_ DWORD Index,_In_opt_ DWORD SymTag,_In_opt_ PCTSTR Mask,_In_opt_ DWORD64 Address,_In_ PSYM_ENUMERATESYMBOLS_CALLBACK EnumSymbolsCallback,_In_opt_ PVOID UserContext,_In_ DWORD Options)
BOOL WINAPI dbghelp.SymSearchW(_In_ HANDLE hProcess,_In_ ULONG64 BaseOfDll,_In_opt_ DWORD Index,_In_opt_ DWORD SymTag,_In_opt_ PCTSTR Mask,_In_opt_ DWORD64 Address,_In_ PSYM_ENUMERATESYMBOLS_CALLBACK EnumSymbolsCallback,_In_opt_ PVOID UserContext,_In_ DWORD Options)
BOOL WINAPI dbghelp.SymSearch(_In_ HANDLE hProcess,_In_ ULONG64 BaseOfDll,_In_opt_ DWORD Index,_In_opt_ DWORD SymTag,_In_opt_ PCTSTR Mask,_In_opt_ DWORD64 Address,_In_ PSYM_ENUMERATESYMBOLS_CALLBACK EnumSymbolsCallback,_In_opt_ PVOID UserContext,_In_ DWORD Options)
BOOL WINAPI dbghelp.SymGetOmaps(_In_ HANDLE hProcess,_In_ ULONG64 BaseOfDll,_Out_ POMAP *OmapTo,_Out_ PDWORD64 cOmapTo,_Out_ POMAP *OmapFrom,_Out_ PDWORD64 cOmapFrom)
BOOL WINAPI dbghelp.SymSetParentWindow(_In_ HWND hwnd)
DWORD WINAPI dbghelp.SymSetOptions(_In_ DWORD SymOptions)
HRESULT __cdecl mtxdm.GetDispenserManager(_Out_ IDispenserManager **ppIDispenserManager)
BOOL WINAPI dbghelp.SymGetLineFromName64(_In_ HANDLE hProcess,_In_opt_ PCTSTR ModuleName,_In_opt_ PCTSTR FileName,_In_ DWORD dwLineNumber,_Out_ PLONG lpDisplacement,_Inout_ PIMAGEHLP_LINE64 Line)
BOOL WINAPI dbghelp.SymGetLineFromNameW64(_In_ HANDLE hProcess,_In_opt_ PCTSTR ModuleName,_In_opt_ PCTSTR FileName,_In_ DWORD dwLineNumber,_Out_ PLONG lpDisplacement,_Inout_ PIMAGEHLP_LINE64 Line)
BOOL WINAPI dbghelp.SymGetLineFromName64(_In_ HANDLE hProcess,_In_opt_ PCTSTR ModuleName,_In_opt_ PCTSTR FileName,_In_ DWORD dwLineNumber,_Out_ PLONG lpDisplacement,_Inout_ PIMAGEHLP_LINE64 Line)
LRESULT CALLBACK None.WindowProc(HWND hwnd None,UINT uMsg None,WPARAM wParam None,LPARAM lParam None)
BOOL WINAPI dbghelp.SymAddSourceStream(_In_ HANDLE hProcess,_In_ ULONG64 Base,_In_opt_ PCTSTR StreamFile,_In_opt_ PBYTE Buffer,_In_ size_t Size)
BOOL WINAPI dbghelp.SymAddSourceStreamW(_In_ HANDLE hProcess,_In_ ULONG64 Base,_In_opt_ PCTSTR StreamFile,_In_opt_ PBYTE Buffer,_In_ size_t Size)
BOOL WINAPI dbghelp.SymAddSourceStream(_In_ HANDLE hProcess,_In_ ULONG64 Base,_In_opt_ PCTSTR StreamFile,_In_opt_ PBYTE Buffer,_In_ size_t Size)
BOOL WINAPI dbghelp.SymSetScopeFromIndex(_In_ HANDLE hProcess,_In_ ULONG64 BaseOfDll,_In_ DWORD Index)
PIMAGE_NT_HEADERS WINAPI dbghelp.ImageNtHeader(_In_ PVOID ImageBase)
LRESULT CALLBACK None.WindowProc(HWND hwnd None,UINT uMsg None,WPARAM wParam None,LPARAM lParam None)
LRESULT CALLBACK None.WindowProc(HWND hwnd None,UINT uMsg None,WPARAM wParam None,LPARAM lParam None)
UINT WINAPI user32.GetRegisteredRawInputDevices(_Out_opt_ PRAWINPUTDEVICE pRawInputDevices,_Inout_ PUINT puiNumDevices,_In_ UINT cbSize)
LRESULT CALLBACK None.WindowProc(HWND hwnd None,UINT uMsg None,WPARAM wParam None,LPARAM lParam None)
LRESULT CALLBACK None.WindowProc(HWND hwnd None,UINT uMsg None,WPARAM wParam None,LPARAM lParam None)
UINT WINAPI user32.GetRegisteredRawInputDevices(_Out_opt_ PRAWINPUTDEVICE pRawInputDevices,_Inout_ PUINT puiNumDevices,_In_ UINT cbSize)
LRESULT CALLBACK None.WindowProc(HWND hwnd None,UINT uMsg None,WPARAM wParam None,LPARAM lParam None)
BOOL WINAPI dbghelp.EnumDirTree(_In_opt_ HANDLE hProcess,_In_ PCTSTR RootPath,_In_ PCTSTR InputPathName,_Out_opt_ PTSTR OutputPathBuffer,_In_opt_ PENUMDIRTREE_CALLBACK Callback,_In_opt_ PVOID CallbackData)
BOOL WINAPI dbghelp.EnumDirTreeW(_In_opt_ HANDLE hProcess,_In_ PCTSTR RootPath,_In_ PCTSTR InputPathName,_Out_opt_ PTSTR OutputPathBuffer,_In_opt_ PENUMDIRTREE_CALLBACK Callback,_In_opt_ PVOID CallbackData)
BOOL WINAPI dbghelp.EnumDirTree(_In_opt_ HANDLE hProcess,_In_ PCTSTR RootPath,_In_ PCTSTR InputPathName,_Out_opt_ PTSTR OutputPathBuffer,_In_opt_ PENUMDIRTREE_CALLBACK Callback,_In_opt_ PVOID CallbackData)
BOOL WINAPI dbghelp.SymAddSymbol(_In_ HANDLE hProcess,_In_ ULONG64 BaseOfDll,_In_ PCTSTR Name,_In_ DWORD64 Address,_In_ DWORD Size,_In_ DWORD Flags)
BOOL WINAPI dbghelp.SymAddSymbolW(_In_ HANDLE hProcess,_In_ ULONG64 BaseOfDll,_In_ PCTSTR Name,_In_ DWORD64 Address,_In_ DWORD Size,_In_ DWORD Flags)
BOOL WINAPI dbghelp.SymAddSymbol(_In_ HANDLE hProcess,_In_ ULONG64 BaseOfDll,_In_ PCTSTR Name,_In_ DWORD64 Address,_In_ DWORD Size,_In_ DWORD Flags)
BOOL IMAGEAPI dbghelp.SymFromInlineContext(_In_ HANDLE hProcess,_In_ DWORD64 Address,_In_ ULONG InlineContext,_Out_opt_ PDWORD64 Displacement,_Inout_ PSYMBOL_INFOW Symbol)
BOOL IMAGEAPI dbghelp.SymFromInlineContextW(_In_ HANDLE hProcess,_In_ DWORD64 Address,_In_ ULONG InlineContext,_Out_opt_ PDWORD64 Displacement,_Inout_ PSYMBOL_INFOW Symbol)
BOOL IMAGEAPI dbghelp.SymFromInlineContext(_In_ HANDLE hProcess,_In_ DWORD64 Address,_In_ ULONG InlineContext,_Out_opt_ PDWORD64 Displacement,_Inout_ PSYMBOL_INFOW Symbol)
LONG WINAPI advapi32.RegDeleteKeyTransacted(_In_ HKEY hKey,_In_ LPCTSTR lpSubKey,_In_ REGSAM samDesired,_Reserved_ DWORD Reserved,_In_ HANDLE hTransaction,_Reserved_ PVOID pExtendedParameter)
LONG WINAPI advapi32.RegDeleteKeyTransactedW(_In_ HKEY hKey,_In_ LPCTSTR lpSubKey,_In_ REGSAM samDesired,_Reserved_ DWORD Reserved,_In_ HANDLE hTransaction,_Reserved_ PVOID pExtendedParameter)
LONG WINAPI advapi32.RegDeleteKeyTransactedA(_In_ HKEY hKey,_In_ LPCTSTR lpSubKey,_In_ REGSAM samDesired,_Reserved_ DWORD Reserved,_In_ HANDLE hTransaction,_Reserved_ PVOID pExtendedParameter)
LONG WINAPI advapi32.RegDeleteKeyValue(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_opt_ LPCTSTR lpValueName)
LONG WINAPI advapi32.RegDeleteKeyValueW(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_opt_ LPCTSTR lpValueName)
LONG WINAPI advapi32.RegDeleteKeyValueA(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_opt_ LPCTSTR lpValueName)
DWORD WINAPI dbghelp.SymSetOptions(_In_ DWORD SymOptions)
LRESULT CALLBACK None.WindowProc(HWND hwnd None,UINT uMsg None,WPARAM wParam None,LPARAM lParam None)
LRESULT CALLBACK None.WindowProc(HWND hwnd None,UINT uMsg None,WPARAM wParam None,LPARAM lParam None)
BOOL IMAGEAPI dbghelp.SymSetScopeFromInlineContext(_In_ HANDLE hProcess,_In_ ULONG64 Address,_In_ ULONG InlineContext)
DWORD WINAPI dbghelp.UnDecorateSymbolName(_In_ PCTSTR DecoratedName,_Out_ PTSTR UnDecoratedName,_In_ DWORD UndecoratedLength,_In_ DWORD Flags)
DWORD WINAPI dbghelp.UnDecorateSymbolNameW(_In_ PCTSTR DecoratedName,_Out_ PTSTR UnDecoratedName,_In_ DWORD UndecoratedLength,_In_ DWORD Flags)
DWORD WINAPI dbghelp.UnDecorateSymbolName(_In_ PCTSTR DecoratedName,_Out_ PTSTR UnDecoratedName,_In_ DWORD UndecoratedLength,_In_ DWORD Flags)
LRESULT CALLBACK None.WindowProc(HWND hwnd None,UINT uMsg None,WPARAM wParam None,LPARAM lParam None)
LRESULT CALLBACK None.WindowProc(HWND hwnd None,UINT uMsg None,WPARAM wParam None,LPARAM lParam None)
BOOL WINAPI dbghelp.MiniDumpWriteDump(_In_ HANDLE hProcess,_In_ DWORD ProcessId,_In_ HANDLE hFile,_In_ MINIDUMP_TYPE DumpType,_In_ PMINIDUMP_EXCEPTION_INFORMATION ExceptionParam,_In_ PMINIDUMP_USER_STREAM_INFORMATION UserStreamParam,_In_ PMINIDUMP_CALLBACK_INFORMATION CallbackParam)
UINT WINAPI user32.GetRegisteredRawInputDevices(_Out_opt_ PRAWINPUTDEVICE pRawInputDevices,_Inout_ PUINT puiNumDevices,_In_ UINT cbSize)
BOOL WINAPI dbghelp.SymFindFileInPath(_In_ HANDLE hProcess,_In_opt_ PCTSTR SearchPath,_In_ PCTSTR FileName,_In_opt_ PVOID id,_In_ DWORD two,_In_ DWORD three,_In_ DWORD flags,_Out_ PTSTR FilePath,_In_opt_ PFINDFILEINPATHCALLBACK callback,_In_opt_ PVOID context)
BOOL WINAPI dbghelp.SymFindFileInPathW(_In_ HANDLE hProcess,_In_opt_ PCTSTR SearchPath,_In_ PCTSTR FileName,_In_opt_ PVOID id,_In_ DWORD two,_In_ DWORD three,_In_ DWORD flags,_Out_ PTSTR FilePath,_In_opt_ PFINDFILEINPATHCALLBACK callback,_In_opt_ PVOID context)
BOOL WINAPI dbghelp.SymFindFileInPath(_In_ HANDLE hProcess,_In_opt_ PCTSTR SearchPath,_In_ PCTSTR FileName,_In_opt_ PVOID id,_In_ DWORD two,_In_ DWORD three,_In_ DWORD flags,_Out_ PTSTR FilePath,_In_opt_ PFINDFILEINPATHCALLBACK callback,_In_opt_ PVOID context)
LONG WINAPI advapi32.RegSaveKeyEx(_In_ HKEY hKey,_In_ LPCTSTR lpFile,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ DWORD Flags)
LONG WINAPI advapi32.RegSaveKeyExW(_In_ HKEY hKey,_In_ LPCTSTR lpFile,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ DWORD Flags)
LONG WINAPI advapi32.RegSaveKeyExA(_In_ HKEY hKey,_In_ LPCTSTR lpFile,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ DWORD Flags)
LRESULT CALLBACK None.WindowProc(HWND hwnd None,UINT uMsg None,WPARAM wParam None,LPARAM lParam None)
BOOL WINAPI dbghelp.SymGetLineFromAddr64(_In_ HANDLE hProcess,_In_ DWORD64 dwAddr,_Out_ PDWORD pdwDisplacement,_Out_ PIMAGEHLP_LINE64 Line)
BOOL WINAPI dbghelp.SymGetLineFromAddrW64(_In_ HANDLE hProcess,_In_ DWORD64 dwAddr,_Out_ PDWORD pdwDisplacement,_Out_ PIMAGEHLP_LINE64 Line)
BOOL WINAPI dbghelp.SymGetLineFromAddr64(_In_ HANDLE hProcess,_In_ DWORD64 dwAddr,_Out_ PDWORD pdwDisplacement,_Out_ PIMAGEHLP_LINE64 Line)
BOOL WINAPI kernel32.WriteProfileString(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ LPCTSTR lpString)
BOOL WINAPI kernel32.WriteProfileStringW(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ LPCTSTR lpString)
BOOL WINAPI kernel32.WriteProfileStringA(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ LPCTSTR lpString)
PTCHAR WINAPI dbghelp.SymGetHomeDirectory(_In_ DWORD type,_Out_ PTSTR dir,_In_ size_t size)
PTCHAR WINAPI dbghelp.SymGetHomeDirectoryW(_In_ DWORD type,_Out_ PTSTR dir,_In_ size_t size)
PTCHAR WINAPI dbghelp.SymGetHomeDirectory(_In_ DWORD type,_Out_ PTSTR dir,_In_ size_t size)
BOOL CALLBACK None.SymRegisterCallbackProc64(_In_ HANDLE hProcess,_In_ ULONG ActionCode,_In_opt_ ULONG64 CallbackData,_In_opt_ ULONG64 UserContext)
BOOL WINAPI dbghelp.SymAddSymbol(_In_ HANDLE hProcess,_In_ ULONG64 BaseOfDll,_In_ PCTSTR Name,_In_ DWORD64 Address,_In_ DWORD Size,_In_ DWORD Flags)
BOOL WINAPI dbghelp.SymAddSymbolW(_In_ HANDLE hProcess,_In_ ULONG64 BaseOfDll,_In_ PCTSTR Name,_In_ DWORD64 Address,_In_ DWORD Size,_In_ DWORD Flags)
BOOL WINAPI dbghelp.SymAddSymbol(_In_ HANDLE hProcess,_In_ ULONG64 BaseOfDll,_In_ PCTSTR Name,_In_ DWORD64 Address,_In_ DWORD Size,_In_ DWORD Flags)
PVOID WINAPI dbghelp.ImageRvaToVa(_In_ PIMAGE_NT_HEADERS NtHeaders,_In_ PVOID Base,_In_ ULONG Rva,_In_opt_ PIMAGE_SECTION_HEADER *LastRvaSection)
BOOL WINAPI dbghelp.SymEnumTypes(_In_ HANDLE hProcess,_In_ ULONG64 BaseOfDll,_In_ PSYM_ENUMERATESYMBOLS_CALLBACK EnumSymbolsCallback,_In_opt_ PVOID UserContext)
BOOL WINAPI dbghelp.SymEnumTypesW(_In_ HANDLE hProcess,_In_ ULONG64 BaseOfDll,_In_ PSYM_ENUMERATESYMBOLS_CALLBACK EnumSymbolsCallback,_In_opt_ PVOID UserContext)
BOOL WINAPI dbghelp.SymEnumTypes(_In_ HANDLE hProcess,_In_ ULONG64 BaseOfDll,_In_ PSYM_ENUMERATESYMBOLS_CALLBACK EnumSymbolsCallback,_In_opt_ PVOID UserContext)
UINT WINAPI user32.GetRegisteredRawInputDevices(_Out_opt_ PRAWINPUTDEVICE pRawInputDevices,_Inout_ PUINT puiNumDevices,_In_ UINT cbSize)
PTCHAR WINAPI dbghelp.SymSetHomeDirectory(_In_ HANDLE hProcess,_In_opt_ PCTSTR dir)
PTCHAR WINAPI dbghelp.SymSetHomeDirectoryW(_In_ HANDLE hProcess,_In_opt_ PCTSTR dir)
PTCHAR WINAPI dbghelp.SymSetHomeDirectory(_In_ HANDLE hProcess,_In_opt_ PCTSTR dir)
BOOL WINAPI dbghelp.SymGetSymFromName64(_In_ HANDLE hProcess,_In_ PCSTR Name,_Inout_ PIMAGEHLP_SYMBOL64 Symbol)
UINT WINAPI user32.GetRegisteredRawInputDevices(_Out_opt_ PRAWINPUTDEVICE pRawInputDevices,_Inout_ PUINT puiNumDevices,_In_ UINT cbSize)
LONG WINAPI advapi32.RegDeleteKeyValue(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_opt_ LPCTSTR lpValueName)
LONG WINAPI advapi32.RegDeleteKeyValueW(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_opt_ LPCTSTR lpValueName)
LONG WINAPI advapi32.RegDeleteKeyValueA(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_opt_ LPCTSTR lpValueName)
BOOL WINAPI dbghelp.SymEnumProcesses(_In_ PSYM_ENUMPROCESSES_CALLBACK EnumProcessesCallback,_In_ PVOID UserContext)
BOOL IMAGEAPI dbghelp.SymGetLineFromInlineContext(_In_ HANDLE hProcess,_In_ DWORD64 dwAddr,_In_ ULONG InlineContext,_In_opt_ DWORD64 qwModuleBaseAddress,_Out_ PDWORD pdwDisplacement,_Out_ PIMAGEHLP_LINEW64 Line)
BOOL IMAGEAPI dbghelp.SymGetLineFromInlineContextW(_In_ HANDLE hProcess,_In_ DWORD64 dwAddr,_In_ ULONG InlineContext,_In_opt_ DWORD64 qwModuleBaseAddress,_Out_ PDWORD pdwDisplacement,_Out_ PIMAGEHLP_LINEW64 Line)
BOOL IMAGEAPI dbghelp.SymGetLineFromInlineContext(_In_ HANDLE hProcess,_In_ DWORD64 dwAddr,_In_ ULONG InlineContext,_In_opt_ DWORD64 qwModuleBaseAddress,_Out_ PDWORD pdwDisplacement,_Out_ PIMAGEHLP_LINEW64 Line)
LONG WINAPI advapi32.RegDeleteKeyValue(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_opt_ LPCTSTR lpValueName)
LONG WINAPI advapi32.RegDeleteKeyValueW(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_opt_ LPCTSTR lpValueName)
LONG WINAPI advapi32.RegDeleteKeyValueA(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_opt_ LPCTSTR lpValueName)
BOOL WINAPI dbghelp.SymRegisterCallback64(_In_ HANDLE hProcess,_In_ PSYMBOL_REGISTERED_CALLBACK64 CallbackFunction,_In_ ULONG64 UserContext)
BOOL WINAPI dbghelp.SymRegisterCallbackW64(_In_ HANDLE hProcess,_In_ PSYMBOL_REGISTERED_CALLBACK64 CallbackFunction,_In_ ULONG64 UserContext)
BOOL WINAPI dbghelp.SymRegisterCallback64(_In_ HANDLE hProcess,_In_ PSYMBOL_REGISTERED_CALLBACK64 CallbackFunction,_In_ ULONG64 UserContext)
BOOL WINAPI dbghelp.SymEnumSourceFiles(_In_ HANDLE hProcess,_In_ ULONG64 ModBase,_In_opt_ PCTSTR Mask,_In_ PSYM_ENUMSOURCEFILES_CALLBACK EnumSymbolsCallback,_In_opt_ PVOID UserContext)
BOOL WINAPI dbghelp.SymEnumSourceFilesW(_In_ HANDLE hProcess,_In_ ULONG64 ModBase,_In_opt_ PCTSTR Mask,_In_ PSYM_ENUMSOURCEFILES_CALLBACK EnumSymbolsCallback,_In_opt_ PVOID UserContext)
BOOL WINAPI dbghelp.SymEnumSourceFiles(_In_ HANDLE hProcess,_In_ ULONG64 ModBase,_In_opt_ PCTSTR Mask,_In_ PSYM_ENUMSOURCEFILES_CALLBACK EnumSymbolsCallback,_In_opt_ PVOID UserContext)
BOOLEAN WINAPI powrprof.WritePwrScheme(_In_ PUINT puiID,_In_ LPWSTR lpszName,_In_opt_ LPWSTR lpszDescription,_In_ PPOWER_POLICY pPowerPolicy)
ULONG WINAPI dbghelp.SymGetFileLineOffsets64(_In_ HANDLE hProcess,_In_opt_ PCSTR ModuleName,_In_ PCSTR FileName,_Out_ PDWORD64 Buffer,_In_ ULONG BufferLines)
LONG WINAPI advapi32.RegDeleteKeyTransacted(_In_ HKEY hKey,_In_ LPCTSTR lpSubKey,_In_ REGSAM samDesired,_Reserved_ DWORD Reserved,_In_ HANDLE hTransaction,_Reserved_ PVOID pExtendedParameter)
LONG WINAPI advapi32.RegDeleteKeyTransactedW(_In_ HKEY hKey,_In_ LPCTSTR lpSubKey,_In_ REGSAM samDesired,_Reserved_ DWORD Reserved,_In_ HANDLE hTransaction,_Reserved_ PVOID pExtendedParameter)
LONG WINAPI advapi32.RegDeleteKeyTransactedA(_In_ HKEY hKey,_In_ LPCTSTR lpSubKey,_In_ REGSAM samDesired,_Reserved_ DWORD Reserved,_In_ HANDLE hTransaction,_Reserved_ PVOID pExtendedParameter)
BOOLEAN WINAPI powrprof.WritePwrScheme(_In_ PUINT puiID,_In_ LPWSTR lpszName,_In_opt_ LPWSTR lpszDescription,_In_ PPOWER_POLICY pPowerPolicy)
BOOL WINAPI dbghelp.SymPrev(_In_ HANDLE hProcess,_Inout_ PSYMBOL_INFO Symbol)
BOOL WINAPI dbghelp.SymPrevW(_In_ HANDLE hProcess,_Inout_ PSYMBOL_INFO Symbol)
BOOL WINAPI dbghelp.SymPrev(_In_ HANDLE hProcess,_Inout_ PSYMBOL_INFO Symbol)
LONG WINAPI advapi32.RegDeleteKeyTransacted(_In_ HKEY hKey,_In_ LPCTSTR lpSubKey,_In_ REGSAM samDesired,_Reserved_ DWORD Reserved,_In_ HANDLE hTransaction,_Reserved_ PVOID pExtendedParameter)
LONG WINAPI advapi32.RegDeleteKeyTransactedW(_In_ HKEY hKey,_In_ LPCTSTR lpSubKey,_In_ REGSAM samDesired,_Reserved_ DWORD Reserved,_In_ HANDLE hTransaction,_Reserved_ PVOID pExtendedParameter)
LONG WINAPI advapi32.RegDeleteKeyTransactedA(_In_ HKEY hKey,_In_ LPCTSTR lpSubKey,_In_ REGSAM samDesired,_Reserved_ DWORD Reserved,_In_ HANDLE hTransaction,_Reserved_ PVOID pExtendedParameter)
PCTSTR WINAPI dbghelp.SymSrvDeltaName(_In_ HANDLE hProcess,_In_opt_ PCTSTR SymPath,_In_ PCTSTR Type,_In_ PCTSTR File1,_In_ PCTSTR File2)
PCTSTR WINAPI dbghelp.SymSrvDeltaNameW(_In_ HANDLE hProcess,_In_opt_ PCTSTR SymPath,_In_ PCTSTR Type,_In_ PCTSTR File1,_In_ PCTSTR File2)
PCTSTR WINAPI dbghelp.SymSrvDeltaName(_In_ HANDLE hProcess,_In_opt_ PCTSTR SymPath,_In_ PCTSTR Type,_In_ PCTSTR File1,_In_ PCTSTR File2)
BOOL CALLBACK None.SymEnumProcessesProc(_In_ HANDLE hProcess,_In_ PVOID UserContext)
BOOL WINAPI dbghelp.SymGetSearchPath(_In_ HANDLE hProcess,_Out_ PTSTR SearchPath,_In_ DWORD SearchPathLength)
BOOL WINAPI dbghelp.SymGetSearchPathW(_In_ HANDLE hProcess,_Out_ PTSTR SearchPath,_In_ DWORD SearchPathLength)
BOOL WINAPI dbghelp.SymGetSearchPath(_In_ HANDLE hProcess,_Out_ PTSTR SearchPath,_In_ DWORD SearchPathLength)
LRESULT CALLBACK None.WindowProc(HWND hwnd None,UINT uMsg None,WPARAM wParam None,LPARAM lParam None)
BOOLEAN WINAPI powrprof.WritePwrScheme(_In_ PUINT puiID,_In_ LPWSTR lpszName,_In_opt_ LPWSTR lpszDescription,_In_ PPOWER_POLICY pPowerPolicy)
BOOL WINAPI dbghelp.SymUnDName64(_In_ PIMAGEHLP_SYMBOL64 sym,_Out_ PSTR UnDecName,_In_ DWORD UnDecNameLength)
BOOLEAN WINAPI powrprof.GetPwrCapabilities(_Out_ PSYSTEM_POWER_CAPABILITIES lpSystemPowerCapabilities)
BOOL WINAPI dbghelp.SymGetSourceVarFromToken(_In_ HANDLE hProcess,_In_ PVOID Token,_In_opt_ PCTSTR Params,_In_ PCTSTR VarName,_Out_ PTSTR Value,_In_ DWORD Size)
BOOL WINAPI dbghelp.SymGetSourceVarFromTokenW(_In_ HANDLE hProcess,_In_ PVOID Token,_In_opt_ PCTSTR Params,_In_ PCTSTR VarName,_Out_ PTSTR Value,_In_ DWORD Size)
BOOL WINAPI dbghelp.SymGetSourceVarFromToken(_In_ HANDLE hProcess,_In_ PVOID Token,_In_opt_ PCTSTR Params,_In_ PCTSTR VarName,_Out_ PTSTR Value,_In_ DWORD Size)
BOOL WINAPI dbghelp.SymCleanup(_In_ HANDLE hProcess)
LONG WINAPI advapi32.RegLoadAppKey(_In_ LPCTSTR lpFile,_Out_ PHKEY phkResult,_In_ REGSAM samDesired,_In_ DWORD dwOptions,_Reserved_ DWORD Reserved)
LONG WINAPI advapi32.RegLoadAppKeyW(_In_ LPCTSTR lpFile,_Out_ PHKEY phkResult,_In_ REGSAM samDesired,_In_ DWORD dwOptions,_Reserved_ DWORD Reserved)
LONG WINAPI advapi32.RegLoadAppKeyA(_In_ LPCTSTR lpFile,_Out_ PHKEY phkResult,_In_ REGSAM samDesired,_In_ DWORD dwOptions,_Reserved_ DWORD Reserved)
DWORD WINAPI dbghelp.GetTimestampForLoadedLibrary(_In_ HMODULE ImageBase)
BOOL WINAPI kernel32.WriteProfileString(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ LPCTSTR lpString)
BOOL WINAPI kernel32.WriteProfileStringW(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ LPCTSTR lpString)
BOOL WINAPI kernel32.WriteProfileStringA(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ LPCTSTR lpString)
PTCHAR WINAPI dbghelp.SymSetHomeDirectory(_In_ HANDLE hProcess,_In_opt_ PCTSTR dir)
PTCHAR WINAPI dbghelp.SymSetHomeDirectoryW(_In_ HANDLE hProcess,_In_opt_ PCTSTR dir)
PTCHAR WINAPI dbghelp.SymSetHomeDirectory(_In_ HANDLE hProcess,_In_opt_ PCTSTR dir)
HRESULT CALLBACK None.ComPlusCompleteCbbSetup(_In_ IUnknown *pUnk,_In_ HANDLE hSetupLogFile)
BOOL WINAPI dbghelp.SymAddSourceStream(_In_ HANDLE hProcess,_In_ ULONG64 Base,_In_opt_ PCTSTR StreamFile,_In_opt_ PBYTE Buffer,_In_ size_t Size)
BOOL WINAPI dbghelp.SymAddSourceStreamW(_In_ HANDLE hProcess,_In_ ULONG64 Base,_In_opt_ PCTSTR StreamFile,_In_opt_ PBYTE Buffer,_In_ size_t Size)
BOOL WINAPI dbghelp.SymAddSourceStream(_In_ HANDLE hProcess,_In_ ULONG64 Base,_In_opt_ PCTSTR StreamFile,_In_opt_ PBYTE Buffer,_In_ size_t Size)
BOOL IMAGEAPI dbghelp.StackWalkEx(_In_ DWORD MachineType,_In_ HANDLE hProcess,_In_ HANDLE hThread,_Inout_ LPSTACKFRAME_EX StackFrame,_Inout_ PVOID ContextRecord,_In_opt_ PREAD_PROCESS_MEMORY_ROUTINE64 ReadMemoryRoutine,_In_opt_ PFUNCTION_TABLE_ACCESS_ROUTINE64 FunctionTableAccessRoutine,_In_opt_ PGET_MODULE_BASE_ROUTINE64 GetModuleBaseRoutine,_In_opt_ PTRANSLATE_ADDRESS_ROUTINE64 TranslateAddress,_In_ DWORD Flags)
PCTSTR WINAPI dbghelp.SymSrvStoreFile(_In_ HANDLE hProcess,_In_opt_ PCTSTR SrvPath,_In_ PCTSTR File,_In_ DWORD Flags)
PCTSTR WINAPI dbghelp.SymSrvStoreFileW(_In_ HANDLE hProcess,_In_opt_ PCTSTR SrvPath,_In_ PCTSTR File,_In_ DWORD Flags)
PCTSTR WINAPI dbghelp.SymSrvStoreFile(_In_ HANDLE hProcess,_In_opt_ PCTSTR SrvPath,_In_ PCTSTR File,_In_ DWORD Flags)
BOOLEAN WINAPI powrprof.GetPwrDiskSpindownRange(_Out_ PUINT RangeMax,_Out_ PUINT RangeMin)
PVOID CALLBACK None.FunctionTableAccessProc64(_In_ HANDLE hProcess,_In_ DWORD64 AddrBase)
BOOL WINAPI dbghelp.SymEnumSourceFileTokens(_In_ HANDLE hProcess,_In_ ULONG64 Base,_In_ PENUMSOURCEFILETOKENSCALLBACK Callback)
LONG WINAPI advapi32.RegSaveKeyEx(_In_ HKEY hKey,_In_ LPCTSTR lpFile,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ DWORD Flags)
LONG WINAPI advapi32.RegSaveKeyExW(_In_ HKEY hKey,_In_ LPCTSTR lpFile,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ DWORD Flags)
LONG WINAPI advapi32.RegSaveKeyExA(_In_ HKEY hKey,_In_ LPCTSTR lpFile,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ DWORD Flags)
BOOL WINAPI dbghelp.SymFromIndex(_In_ HANDLE hProcess,_In_ ULONG64 BaseOfDll,_In_ DWORD Index,_Inout_ PSYMBOL_INFO Symbol)
BOOL WINAPI dbghelp.SymFromIndexW(_In_ HANDLE hProcess,_In_ ULONG64 BaseOfDll,_In_ DWORD Index,_Inout_ PSYMBOL_INFO Symbol)
BOOL WINAPI dbghelp.SymFromIndex(_In_ HANDLE hProcess,_In_ ULONG64 BaseOfDll,_In_ DWORD Index,_Inout_ PSYMBOL_INFO Symbol)
PVOID WINAPI dbghelp.ImageDirectoryEntryToDataEx(_In_ PVOID Base,_In_ BOOLEAN MappedAsImage,_In_ USHORT DirectoryEntry,_Out_ PULONG Size,_Out_opt_ PIMAGE_SECTION_HEADER *FoundHeader)
BOOL WINAPI dbghelp.SymNext(_In_ HANDLE hProcess,_Inout_ PSYMBOL_INFO Symbol)
BOOL WINAPI dbghelp.SymNextW(_In_ HANDLE hProcess,_Inout_ PSYMBOL_INFO Symbol)
BOOL WINAPI dbghelp.SymNext(_In_ HANDLE hProcess,_Inout_ PSYMBOL_INFO Symbol)
BOOL WINAPI dbghelp.MiniDumpWriteDump(_In_ HANDLE hProcess,_In_ DWORD ProcessId,_In_ HANDLE hFile,_In_ MINIDUMP_TYPE DumpType,_In_ PMINIDUMP_EXCEPTION_INFORMATION ExceptionParam,_In_ PMINIDUMP_USER_STREAM_INFORMATION UserStreamParam,_In_ PMINIDUMP_CALLBACK_INFORMATION CallbackParam)
BOOL CALLBACK None.FindDebugInfoFileProc(_In_ HANDLE FileHandle,_In_ PCTSTR FileName,_In_ PVOID CallerData)
BOOL WINAPI dbghelp.SymGetLineNext64(_In_ HANDLE hProcess,_Inout_ PIMAGEHLP_LINE64 Line)
BOOL WINAPI dbghelp.SymGetLineNextW64(_In_ HANDLE hProcess,_Inout_ PIMAGEHLP_LINE64 Line)
BOOL WINAPI dbghelp.SymGetLineNext64(_In_ HANDLE hProcess,_Inout_ PIMAGEHLP_LINE64 Line)
BOOL CALLBACK None.SymEnumerateSymbolsProc64(_In_ PCTSTR SymbolName,_In_ DWORD64 SymbolAddress,_In_ ULONG SymbolSize,_In_opt_ PVOID UserContext)
BOOL WINAPI dbghelp.SymEnumSourceFiles(_In_ HANDLE hProcess,_In_ ULONG64 ModBase,_In_opt_ PCTSTR Mask,_In_ PSYM_ENUMSOURCEFILES_CALLBACK EnumSymbolsCallback,_In_opt_ PVOID UserContext)
BOOL WINAPI dbghelp.SymEnumSourceFilesW(_In_ HANDLE hProcess,_In_ ULONG64 ModBase,_In_opt_ PCTSTR Mask,_In_ PSYM_ENUMSOURCEFILES_CALLBACK EnumSymbolsCallback,_In_opt_ PVOID UserContext)
BOOL WINAPI dbghelp.SymEnumSourceFiles(_In_ HANDLE hProcess,_In_ ULONG64 ModBase,_In_opt_ PCTSTR Mask,_In_ PSYM_ENUMSOURCEFILES_CALLBACK EnumSymbolsCallback,_In_opt_ PVOID UserContext)
BOOL WINAPI dbghelp.SymSetParentWindow(_In_ HWND hwnd)
BOOL WINAPI dbghelp.SymFindFileInPath(_In_ HANDLE hProcess,_In_opt_ PCTSTR SearchPath,_In_ PCTSTR FileName,_In_opt_ PVOID id,_In_ DWORD two,_In_ DWORD three,_In_ DWORD flags,_Out_ PTSTR FilePath,_In_opt_ PFINDFILEINPATHCALLBACK callback,_In_opt_ PVOID context)
BOOL WINAPI dbghelp.SymFindFileInPathW(_In_ HANDLE hProcess,_In_opt_ PCTSTR SearchPath,_In_ PCTSTR FileName,_In_opt_ PVOID id,_In_ DWORD two,_In_ DWORD three,_In_ DWORD flags,_Out_ PTSTR FilePath,_In_opt_ PFINDFILEINPATHCALLBACK callback,_In_opt_ PVOID context)
BOOL WINAPI dbghelp.SymFindFileInPath(_In_ HANDLE hProcess,_In_opt_ PCTSTR SearchPath,_In_ PCTSTR FileName,_In_opt_ PVOID id,_In_ DWORD two,_In_ DWORD three,_In_ DWORD flags,_Out_ PTSTR FilePath,_In_opt_ PFINDFILEINPATHCALLBACK callback,_In_opt_ PVOID context)
HANDLE WINAPI dbghelp.SymFindDebugInfoFile(_In_ HANDLE hProcess,_In_ PCTSTR FileName,_Out_ PTSTR DebugFilePath,_In_opt_ PFIND_DEBUG_FILE_CALLBACK Callback,_In_opt_ PVOID CallerData)
HANDLE WINAPI dbghelp.SymFindDebugInfoFileW(_In_ HANDLE hProcess,_In_ PCTSTR FileName,_Out_ PTSTR DebugFilePath,_In_opt_ PFIND_DEBUG_FILE_CALLBACK Callback,_In_opt_ PVOID CallerData)
HANDLE WINAPI dbghelp.SymFindDebugInfoFile(_In_ HANDLE hProcess,_In_ PCTSTR FileName,_Out_ PTSTR DebugFilePath,_In_opt_ PFIND_DEBUG_FILE_CALLBACK Callback,_In_opt_ PVOID CallerData)
BOOL WINAPI dbghelp.UnmapDebugInformation(_In_ PIMAGE_DEBUG_INFORMATION DebugInfo)
BOOL WINAPI dbghelp.SymEnumProcesses(_In_ PSYM_ENUMPROCESSES_CALLBACK EnumProcessesCallback,_In_ PVOID UserContext)
BOOL CALLBACK None.SymEnumerateModulesProc64(_In_ PCTSTR ModuleName,_In_ DWORD64 BaseOfDll,_In_opt_ PVOID UserContext)
BOOL WINAPI dbghelp.SymFromIndex(_In_ HANDLE hProcess,_In_ ULONG64 BaseOfDll,_In_ DWORD Index,_Inout_ PSYMBOL_INFO Symbol)
BOOL WINAPI dbghelp.SymFromIndexW(_In_ HANDLE hProcess,_In_ ULONG64 BaseOfDll,_In_ DWORD Index,_Inout_ PSYMBOL_INFO Symbol)
BOOL WINAPI dbghelp.SymFromIndex(_In_ HANDLE hProcess,_In_ ULONG64 BaseOfDll,_In_ DWORD Index,_Inout_ PSYMBOL_INFO Symbol)
BOOL WINAPI dbghelp.SymGetSourceVarFromToken(_In_ HANDLE hProcess,_In_ PVOID Token,_In_opt_ PCTSTR Params,_In_ PCTSTR VarName,_Out_ PTSTR Value,_In_ DWORD Size)
BOOL WINAPI dbghelp.SymGetSourceVarFromTokenW(_In_ HANDLE hProcess,_In_ PVOID Token,_In_opt_ PCTSTR Params,_In_ PCTSTR VarName,_Out_ PTSTR Value,_In_ DWORD Size)
BOOL WINAPI dbghelp.SymGetSourceVarFromToken(_In_ HANDLE hProcess,_In_ PVOID Token,_In_opt_ PCTSTR Params,_In_ PCTSTR VarName,_Out_ PTSTR Value,_In_ DWORD Size)
BOOL WINAPI dbghelp.SymCleanup(_In_ HANDLE hProcess)
BOOL IMAGEAPI dbghelp.SymGetLineFromInlineContext(_In_ HANDLE hProcess,_In_ DWORD64 dwAddr,_In_ ULONG InlineContext,_In_opt_ DWORD64 qwModuleBaseAddress,_Out_ PDWORD pdwDisplacement,_Out_ PIMAGEHLP_LINEW64 Line)
BOOL IMAGEAPI dbghelp.SymGetLineFromInlineContextW(_In_ HANDLE hProcess,_In_ DWORD64 dwAddr,_In_ ULONG InlineContext,_In_opt_ DWORD64 qwModuleBaseAddress,_Out_ PDWORD pdwDisplacement,_Out_ PIMAGEHLP_LINEW64 Line)
BOOL IMAGEAPI dbghelp.SymGetLineFromInlineContext(_In_ HANDLE hProcess,_In_ DWORD64 dwAddr,_In_ ULONG InlineContext,_In_opt_ DWORD64 qwModuleBaseAddress,_Out_ PDWORD pdwDisplacement,_Out_ PIMAGEHLP_LINEW64 Line)
BOOL WINAPI dbghelp.SymFromToken(_In_ HANDLE hProcess,_In_ DWORD64 Base,_In_ DWORD Token,_Inout_ PSYMBOL_INFO Symbol)
BOOL WINAPI dbghelp.SymFromTokenW(_In_ HANDLE hProcess,_In_ DWORD64 Base,_In_ DWORD Token,_Inout_ PSYMBOL_INFO Symbol)
BOOL WINAPI dbghelp.SymFromToken(_In_ HANDLE hProcess,_In_ DWORD64 Base,_In_ DWORD Token,_Inout_ PSYMBOL_INFO Symbol)
HRESULT __cdecl comsvcs.GetObjectContext(_Out_ IObjectContext **ppInstanceContext)
BOOLEAN WINAPI powrprof.GetPwrDiskSpindownRange(_Out_ PUINT RangeMax,_Out_ PUINT RangeMin)
BOOL WINAPI dbghelp.SymSrvGetFileIndexInfo(_In_ PCTSTR File,_Out_ PSYMSRV_INDEX_INFO Info,_In_ DWORD Flags)
BOOL WINAPI dbghelp.SymSrvGetFileIndexInfoW(_In_ PCTSTR File,_Out_ PSYMSRV_INDEX_INFO Info,_In_ DWORD Flags)
BOOL WINAPI dbghelp.SymSrvGetFileIndexInfo(_In_ PCTSTR File,_Out_ PSYMSRV_INDEX_INFO Info,_In_ DWORD Flags)
BOOL WINAPI dbghelp.SymSrvGetFileIndexes(_In_ PCTSTR File,_Out_ GUID *Id,_Out_ DWORD *Val1,_Out_opt_ DWORD *Val2,_In_ DWORD Flags)
BOOL WINAPI dbghelp.SymSrvGetFileIndexesW(_In_ PCTSTR File,_Out_ GUID *Id,_Out_ DWORD *Val1,_Out_opt_ DWORD *Val2,_In_ DWORD Flags)
BOOL WINAPI dbghelp.SymSrvGetFileIndexes(_In_ PCTSTR File,_Out_ GUID *Id,_Out_ DWORD *Val1,_Out_opt_ DWORD *Val2,_In_ DWORD Flags)
HRESULT CALLBACK None.ComPlusCompleteCbbSetup(_In_ IUnknown *pUnk,_In_ HANDLE hSetupLogFile)
BOOL WINAPI dbghelp.SymFindFileInPath(_In_ HANDLE hProcess,_In_opt_ PCTSTR SearchPath,_In_ PCTSTR FileName,_In_opt_ PVOID id,_In_ DWORD two,_In_ DWORD three,_In_ DWORD flags,_Out_ PTSTR FilePath,_In_opt_ PFINDFILEINPATHCALLBACK callback,_In_opt_ PVOID context)
BOOL WINAPI dbghelp.SymFindFileInPathW(_In_ HANDLE hProcess,_In_opt_ PCTSTR SearchPath,_In_ PCTSTR FileName,_In_opt_ PVOID id,_In_ DWORD two,_In_ DWORD three,_In_ DWORD flags,_Out_ PTSTR FilePath,_In_opt_ PFINDFILEINPATHCALLBACK callback,_In_opt_ PVOID context)
BOOL WINAPI dbghelp.SymFindFileInPath(_In_ HANDLE hProcess,_In_opt_ PCTSTR SearchPath,_In_ PCTSTR FileName,_In_opt_ PVOID id,_In_ DWORD two,_In_ DWORD three,_In_ DWORD flags,_Out_ PTSTR FilePath,_In_opt_ PFINDFILEINPATHCALLBACK callback,_In_opt_ PVOID context)
BOOL WINAPI dbghelp.SymEnumerateSymbols64(_In_ HANDLE hProcess,_In_ ULONG64 BaseOfDll,_In_ PSYM_ENUMSYMBOLS_CALLBACK64 EnumSymbolsCallback,_In_opt_ PVOID UserContext)
BOOL WINAPI dbghelp.SymEnumerateSymbolsW64(_In_ HANDLE hProcess,_In_ ULONG64 BaseOfDll,_In_ PSYM_ENUMSYMBOLS_CALLBACK64 EnumSymbolsCallback,_In_opt_ PVOID UserContext)
BOOL WINAPI dbghelp.SymEnumerateSymbols64(_In_ HANDLE hProcess,_In_ ULONG64 BaseOfDll,_In_ PSYM_ENUMSYMBOLS_CALLBACK64 EnumSymbolsCallback,_In_opt_ PVOID UserContext)
BOOL IMAGEAPI dbghelp.SymQueryInlineTrace(_In_ HANDLE hProcess,_In_ DWORD64 StartAddress,_In_ DWORD StartContext,_In_ DWORD64 StartRetAddress,_In_ DWORD64 CurAddress,_Out_ LPDWORD CurContext,_Out_ LPDWORD CurFrameIndex)
BOOL WINAPI dbghelp.SymGetSourceFileFromToken(_In_ HANDLE hProcess,_In_ PVOID Token,_In_opt_ PCTSTR Params,_Out_ PTSTR FilePath,_In_ DWORD Size)
BOOL WINAPI dbghelp.SymGetSourceFileFromTokenW(_In_ HANDLE hProcess,_In_ PVOID Token,_In_opt_ PCTSTR Params,_Out_ PTSTR FilePath,_In_ DWORD Size)
BOOL WINAPI dbghelp.SymGetSourceFileFromToken(_In_ HANDLE hProcess,_In_ PVOID Token,_In_opt_ PCTSTR Params,_Out_ PTSTR FilePath,_In_ DWORD Size)
BOOL WINAPI dbghelp.SymEnumTypesByName(_In_ HANDLE hProcess,_In_ ULONG64 BaseOfDll,_In_opt_ PCSTR mask,_In_ PSYM_ENUMERATESYMBOLS_CALLBACK EnumSymbolsCallback,_In_ PVOID UserContext)
BOOL WINAPI dbghelp.SymEnumTypesByNameW(_In_ HANDLE hProcess,_In_ ULONG64 BaseOfDll,_In_opt_ PCSTR mask,_In_ PSYM_ENUMERATESYMBOLS_CALLBACK EnumSymbolsCallback,_In_ PVOID UserContext)
BOOL WINAPI dbghelp.SymEnumTypesByName(_In_ HANDLE hProcess,_In_ ULONG64 BaseOfDll,_In_opt_ PCSTR mask,_In_ PSYM_ENUMERATESYMBOLS_CALLBACK EnumSymbolsCallback,_In_ PVOID UserContext)
BOOL WINAPI dbghelp.SymFromToken(_In_ HANDLE hProcess,_In_ DWORD64 Base,_In_ DWORD Token,_Inout_ PSYMBOL_INFO Symbol)
BOOL WINAPI dbghelp.SymFromTokenW(_In_ HANDLE hProcess,_In_ DWORD64 Base,_In_ DWORD Token,_Inout_ PSYMBOL_INFO Symbol)
BOOL WINAPI dbghelp.SymFromToken(_In_ HANDLE hProcess,_In_ DWORD64 Base,_In_ DWORD Token,_Inout_ PSYMBOL_INFO Symbol)
BOOL WINAPI dbghelp.SymGetLineFromName64(_In_ HANDLE hProcess,_In_opt_ PCTSTR ModuleName,_In_opt_ PCTSTR FileName,_In_ DWORD dwLineNumber,_Out_ PLONG lpDisplacement,_Inout_ PIMAGEHLP_LINE64 Line)
BOOL WINAPI dbghelp.SymGetLineFromNameW64(_In_ HANDLE hProcess,_In_opt_ PCTSTR ModuleName,_In_opt_ PCTSTR FileName,_In_ DWORD dwLineNumber,_Out_ PLONG lpDisplacement,_Inout_ PIMAGEHLP_LINE64 Line)
BOOL WINAPI dbghelp.SymGetLineFromName64(_In_ HANDLE hProcess,_In_opt_ PCTSTR ModuleName,_In_opt_ PCTSTR FileName,_In_ DWORD dwLineNumber,_Out_ PLONG lpDisplacement,_Inout_ PIMAGEHLP_LINE64 Line)
BOOL CALLBACK None.EnumDirTreeProc(_In_ PCTSTR FilePath,_In_opt_ PVOID CallerData)
DWORD WINAPI dbghelp.SymSetOptions(_In_ DWORD SymOptions)
BOOL WINAPI dbghelp.EnumerateLoadedModulesEx(_In_ HANDLE hProcess,_In_ PENUMLOADED_MODULES_CALLBACK64 EnumLoadedModulesCallback,_In_opt_ PVOID UserContext)
BOOL WINAPI dbghelp.EnumerateLoadedModulesExW(_In_ HANDLE hProcess,_In_ PENUMLOADED_MODULES_CALLBACK64 EnumLoadedModulesCallback,_In_opt_ PVOID UserContext)
BOOL WINAPI dbghelp.EnumerateLoadedModulesEx(_In_ HANDLE hProcess,_In_ PENUMLOADED_MODULES_CALLBACK64 EnumLoadedModulesCallback,_In_opt_ PVOID UserContext)
PVOID WINAPI dbghelp.ImageDirectoryEntryToData(_In_ PVOID Base,_In_ BOOLEAN MappedAsImage,_In_ USHORT DirectoryEntry,_Out_ PULONG Size)
BOOL WINAPI dbghelp.SymGetOmaps(_In_ HANDLE hProcess,_In_ ULONG64 BaseOfDll,_Out_ POMAP *OmapTo,_Out_ PDWORD64 cOmapTo,_Out_ POMAP *OmapFrom,_Out_ PDWORD64 cOmapFrom)
BOOL WINAPI dbghelp.SymUnloadModule64(_In_ HANDLE hProcess,_In_ DWORD64 BaseOfDll)
BOOL WINAPI dbghelp.SymDeleteSymbol(_In_ HANDLE hProcess,_In_ ULONG64 BaseOfDll,_In_opt_ PCTSTR Name,_In_ DWORD64 Address,_In_ DWORD Flags)
BOOL WINAPI dbghelp.SymDeleteSymbolW(_In_ HANDLE hProcess,_In_ ULONG64 BaseOfDll,_In_opt_ PCTSTR Name,_In_ DWORD64 Address,_In_ DWORD Flags)
BOOL WINAPI dbghelp.SymDeleteSymbol(_In_ HANDLE hProcess,_In_ ULONG64 BaseOfDll,_In_opt_ PCTSTR Name,_In_ DWORD64 Address,_In_ DWORD Flags)
BOOL WINAPI dbghelp.MiniDumpReadDumpStream(_In_ PVOID BaseOfDump,_In_ ULONG StreamNumber,_Out_ PMINIDUMP_DIRECTORY *Dir,_Out_ PVOID *StreamPointer,_Out_ ULONG *StreamSize)
HRESULT CALLBACK None.ComPlusCompleteCbbSetup(_In_ IUnknown *pUnk,_In_ HANDLE hSetupLogFile)
BOOL CALLBACK None.SymFindFileInPathProc(_In_ PCTSTR fileName,_In_ PVOID context)
HRESULT CALLBACK None.ComPlusCompleteCbbSetup(_In_ IUnknown *pUnk,_In_ HANDLE hSetupLogFile)
PVOID WINAPI dbghelp.ImageRvaToVa(_In_ PIMAGE_NT_HEADERS NtHeaders,_In_ PVOID Base,_In_ ULONG Rva,_In_opt_ PIMAGE_SECTION_HEADER *LastRvaSection)
BOOL WINAPI dbghelp.SearchTreeForFile(_In_ PCTSTR RootPath,_In_ PCTSTR InputPathName,_Out_ PTSTR OutputPathBuffer)
BOOL WINAPI dbghelp.SearchTreeForFileW(_In_ PCTSTR RootPath,_In_ PCTSTR InputPathName,_Out_ PTSTR OutputPathBuffer)
BOOL WINAPI dbghelp.SearchTreeForFile(_In_ PCTSTR RootPath,_In_ PCTSTR InputPathName,_Out_ PTSTR OutputPathBuffer)
BOOL WINAPI dbghelp.SymEnumSymbolsForAddr(_In_ HANDLE hProcess,_In_ DWORD64 Address,_In_ PSYM_ENUMERATESYMBOLS_CALLBACK EnumSymbolsCallback,_In_opt_ PVOID UserContext)
BOOL WINAPI dbghelp.SymEnumSymbolsForAddrW(_In_ HANDLE hProcess,_In_ DWORD64 Address,_In_ PSYM_ENUMERATESYMBOLS_CALLBACK EnumSymbolsCallback,_In_opt_ PVOID UserContext)
BOOL WINAPI dbghelp.SymEnumSymbolsForAddr(_In_ HANDLE hProcess,_In_ DWORD64 Address,_In_ PSYM_ENUMERATESYMBOLS_CALLBACK EnumSymbolsCallback,_In_opt_ PVOID UserContext)
BOOL CALLBACK None.SymEnumSourceFileTokensProc(_In_ PVOID token,_In_ size_t size)
BOOL IMAGEAPI dbghelp.SymFromInlineContext(_In_ HANDLE hProcess,_In_ DWORD64 Address,_In_ ULONG InlineContext,_Out_opt_ PDWORD64 Displacement,_Inout_ PSYMBOL_INFOW Symbol)
BOOL IMAGEAPI dbghelp.SymFromInlineContextW(_In_ HANDLE hProcess,_In_ DWORD64 Address,_In_ ULONG InlineContext,_Out_opt_ PDWORD64 Displacement,_Inout_ PSYMBOL_INFOW Symbol)
BOOL IMAGEAPI dbghelp.SymFromInlineContext(_In_ HANDLE hProcess,_In_ DWORD64 Address,_In_ ULONG InlineContext,_Out_opt_ PDWORD64 Displacement,_Inout_ PSYMBOL_INFOW Symbol)
BOOL WINAPI dbghelp.SymSetParentWindow(_In_ HWND hwnd)
BOOL WINAPI dbghelp.SymGetSymNext64(_In_ HANDLE hProcess,_Inout_ PIMAGEHLP_SYMBOL64 Symbol)
BOOL IMAGEAPI dbghelp.SymGetLineFromInlineContext(_In_ HANDLE hProcess,_In_ DWORD64 dwAddr,_In_ ULONG InlineContext,_In_opt_ DWORD64 qwModuleBaseAddress,_Out_ PDWORD pdwDisplacement,_Out_ PIMAGEHLP_LINEW64 Line)
BOOL IMAGEAPI dbghelp.SymGetLineFromInlineContextW(_In_ HANDLE hProcess,_In_ DWORD64 dwAddr,_In_ ULONG InlineContext,_In_opt_ DWORD64 qwModuleBaseAddress,_Out_ PDWORD pdwDisplacement,_Out_ PIMAGEHLP_LINEW64 Line)
BOOL IMAGEAPI dbghelp.SymGetLineFromInlineContext(_In_ HANDLE hProcess,_In_ DWORD64 dwAddr,_In_ ULONG InlineContext,_In_opt_ DWORD64 qwModuleBaseAddress,_Out_ PDWORD pdwDisplacement,_Out_ PIMAGEHLP_LINEW64 Line)
BOOL IMAGEAPI dbghelp.StackWalkEx(_In_ DWORD MachineType,_In_ HANDLE hProcess,_In_ HANDLE hThread,_Inout_ LPSTACKFRAME_EX StackFrame,_Inout_ PVOID ContextRecord,_In_opt_ PREAD_PROCESS_MEMORY_ROUTINE64 ReadMemoryRoutine,_In_opt_ PFUNCTION_TABLE_ACCESS_ROUTINE64 FunctionTableAccessRoutine,_In_opt_ PGET_MODULE_BASE_ROUTINE64 GetModuleBaseRoutine,_In_opt_ PTRANSLATE_ADDRESS_ROUTINE64 TranslateAddress,_In_ DWORD Flags)
BOOL WINAPI dbghelp.SymFromName(_In_ HANDLE hProcess,_In_ PCTSTR Name,_Inout_ PSYMBOL_INFO Symbol)
BOOL WINAPI dbghelp.SymFromNameW(_In_ HANDLE hProcess,_In_ PCTSTR Name,_Inout_ PSYMBOL_INFO Symbol)
BOOL WINAPI dbghelp.SymFromName(_In_ HANDLE hProcess,_In_ PCTSTR Name,_Inout_ PSYMBOL_INFO Symbol)
HRESULT CALLBACK None.ComPlusCompleteCbbSetup(_In_ IUnknown *pUnk,_In_ HANDLE hSetupLogFile)
BOOL IMAGEAPI dbghelp.SymSetScopeFromInlineContext(_In_ HANDLE hProcess,_In_ ULONG64 Address,_In_ ULONG InlineContext)
BOOL WINAPI dbghelp.StackWalk64(_In_ DWORD MachineType,_In_ HANDLE hProcess,_In_ HANDLE hThread,_Inout_ LPSTACKFRAME64 StackFrame,_Inout_ PVOID ContextRecord,_In_opt_ PREAD_PROCESS_MEMORY_ROUTINE64 ReadMemoryRoutine,_In_opt_ PFUNCTION_TABLE_ACCESS_ROUTINE64 FunctionTableAccessRoutine,_In_opt_ PGET_MODULE_BASE_ROUTINE64 GetModuleBaseRoutine,_In_opt_ PTRANSLATE_ADDRESS_ROUTINE64 TranslateAddress)
BOOL WINAPI dbghelp.SymEnumSourceLines(_In_ HANDLE hProcess,_In_ ULONG64 Base,_In_opt_ PCTSTR Obj,_In_opt_ PCTSTR File,_In_opt_ DWORD Line,_In_ DWORD Flags,_In_ PSYM_ENUMLINES_CALLBACK EnumLinesCallback,_In_opt_ PVOID UserContext)
BOOL WINAPI dbghelp.SymEnumSourceLinesW(_In_ HANDLE hProcess,_In_ ULONG64 Base,_In_opt_ PCTSTR Obj,_In_opt_ PCTSTR File,_In_opt_ DWORD Line,_In_ DWORD Flags,_In_ PSYM_ENUMLINES_CALLBACK EnumLinesCallback,_In_opt_ PVOID UserContext)
BOOL WINAPI dbghelp.SymEnumSourceLines(_In_ HANDLE hProcess,_In_ ULONG64 Base,_In_opt_ PCTSTR Obj,_In_opt_ PCTSTR File,_In_opt_ DWORD Line,_In_ DWORD Flags,_In_ PSYM_ENUMLINES_CALLBACK EnumLinesCallback,_In_opt_ PVOID UserContext)
BOOL WINAPI dbghelp.SymEnumSymbolsForAddr(_In_ HANDLE hProcess,_In_ DWORD64 Address,_In_ PSYM_ENUMERATESYMBOLS_CALLBACK EnumSymbolsCallback,_In_opt_ PVOID UserContext)
BOOL WINAPI dbghelp.SymEnumSymbolsForAddrW(_In_ HANDLE hProcess,_In_ DWORD64 Address,_In_ PSYM_ENUMERATESYMBOLS_CALLBACK EnumSymbolsCallback,_In_opt_ PVOID UserContext)
BOOL WINAPI dbghelp.SymEnumSymbolsForAddr(_In_ HANDLE hProcess,_In_ DWORD64 Address,_In_ PSYM_ENUMERATESYMBOLS_CALLBACK EnumSymbolsCallback,_In_opt_ PVOID UserContext)
BOOL CALLBACK None.SymEnumLinesProc(_In_ PSRCCODEINFO LineInfo,_In_ PVOID UserContext)
BOOL WINAPI dbghelp.SymEnumerateModules64(_In_ HANDLE hProcess,_In_ PSYM_ENUMMODULES_CALLBACK64 EnumModulesCallback,_In_opt_ PVOID UserContext)
BOOL WINAPI dbghelp.SymEnumerateModulesW64(_In_ HANDLE hProcess,_In_ PSYM_ENUMMODULES_CALLBACK64 EnumModulesCallback,_In_opt_ PVOID UserContext)
BOOL WINAPI dbghelp.SymEnumerateModules64(_In_ HANDLE hProcess,_In_ PSYM_ENUMMODULES_CALLBACK64 EnumModulesCallback,_In_opt_ PVOID UserContext)
BOOL WINAPI dbghelp.EnumerateLoadedModules64(_In_ HANDLE hProcess,_In_ PENUMLOADED_MODULES_CALLBACK64 EnumLoadedModulesCallback,_In_opt_ PVOID UserContext)
BOOL WINAPI dbghelp.EnumerateLoadedModulesW64(_In_ HANDLE hProcess,_In_ PENUMLOADED_MODULES_CALLBACK64 EnumLoadedModulesCallback,_In_opt_ PVOID UserContext)
BOOL WINAPI dbghelp.EnumerateLoadedModules64(_In_ HANDLE hProcess,_In_ PENUMLOADED_MODULES_CALLBACK64 EnumLoadedModulesCallback,_In_opt_ PVOID UserContext)
HANDLE WINAPI dbghelp.SymFindExecutableImage(_In_ HANDLE hProcess,_In_ PCTSTR FileName,_Out_ PTSTR ImageFilePath,_In_ PFIND_EXE_FILE_CALLBACK Callback,_In_ PVOID CallerData)
HANDLE WINAPI dbghelp.SymFindExecutableImageW(_In_ HANDLE hProcess,_In_ PCTSTR FileName,_Out_ PTSTR ImageFilePath,_In_ PFIND_EXE_FILE_CALLBACK Callback,_In_ PVOID CallerData)
HANDLE WINAPI dbghelp.SymFindExecutableImage(_In_ HANDLE hProcess,_In_ PCTSTR FileName,_Out_ PTSTR ImageFilePath,_In_ PFIND_EXE_FILE_CALLBACK Callback,_In_ PVOID CallerData)
BOOL IMAGEAPI dbghelp.SymFromInlineContext(_In_ HANDLE hProcess,_In_ DWORD64 Address,_In_ ULONG InlineContext,_Out_opt_ PDWORD64 Displacement,_Inout_ PSYMBOL_INFOW Symbol)
BOOL IMAGEAPI dbghelp.SymFromInlineContextW(_In_ HANDLE hProcess,_In_ DWORD64 Address,_In_ ULONG InlineContext,_Out_opt_ PDWORD64 Displacement,_Inout_ PSYMBOL_INFOW Symbol)
BOOL IMAGEAPI dbghelp.SymFromInlineContext(_In_ HANDLE hProcess,_In_ DWORD64 Address,_In_ ULONG InlineContext,_Out_opt_ PDWORD64 Displacement,_Inout_ PSYMBOL_INFOW Symbol)
BOOL WINAPI dbghelp.EnumerateLoadedModules64(_In_ HANDLE hProcess,_In_ PENUMLOADED_MODULES_CALLBACK64 EnumLoadedModulesCallback,_In_opt_ PVOID UserContext)
BOOL WINAPI dbghelp.EnumerateLoadedModulesW64(_In_ HANDLE hProcess,_In_ PENUMLOADED_MODULES_CALLBACK64 EnumLoadedModulesCallback,_In_opt_ PVOID UserContext)
BOOL WINAPI dbghelp.EnumerateLoadedModules64(_In_ HANDLE hProcess,_In_ PENUMLOADED_MODULES_CALLBACK64 EnumLoadedModulesCallback,_In_opt_ PVOID UserContext)
BOOLEAN WINAPI kernel32.RtlAddFunctionTable(_In_ PRUNTIME_FUNCTION FunctionTable,_In_ DWORD EntryCount,_In_ DWORD64 BaseAddress,_In_ ULONGLONG TargetGp)
BOOL WINAPI dbghelp.SymSetScopeFromIndex(_In_ HANDLE hProcess,_In_ ULONG64 BaseOfDll,_In_ DWORD Index)
HANDLE WINAPI dbghelp.FindDebugInfoFile(_In_ PCSTR FileName,_In_ PCSTR SymbolPath,_Out_ PSTR DebugFilePath)
BOOL WINAPI dbghelp.SymGetSourceFileToken(_In_ HANDLE hProcess,_In_ ULONG64 Base,_In_ PCTSTR FileSpec,_Out_ PVOID *Token,_Out_ DWORD *Size)
BOOL WINAPI dbghelp.SymGetSourceFileTokenW(_In_ HANDLE hProcess,_In_ ULONG64 Base,_In_ PCTSTR FileSpec,_Out_ PVOID *Token,_Out_ DWORD *Size)
BOOL WINAPI dbghelp.SymGetSourceFileToken(_In_ HANDLE hProcess,_In_ ULONG64 Base,_In_ PCTSTR FileSpec,_Out_ PVOID *Token,_Out_ DWORD *Size)
BOOL WINAPI dbghelp.SymEnumerateSymbols64(_In_ HANDLE hProcess,_In_ ULONG64 BaseOfDll,_In_ PSYM_ENUMSYMBOLS_CALLBACK64 EnumSymbolsCallback,_In_opt_ PVOID UserContext)
BOOL WINAPI dbghelp.SymEnumerateSymbolsW64(_In_ HANDLE hProcess,_In_ ULONG64 BaseOfDll,_In_ PSYM_ENUMSYMBOLS_CALLBACK64 EnumSymbolsCallback,_In_opt_ PVOID UserContext)
BOOL WINAPI dbghelp.SymEnumerateSymbols64(_In_ HANDLE hProcess,_In_ ULONG64 BaseOfDll,_In_ PSYM_ENUMSYMBOLS_CALLBACK64 EnumSymbolsCallback,_In_opt_ PVOID UserContext)
BOOL WINAPI dbghelp.SymGetTypeFromName(_In_ HANDLE hProcess,_In_ ULONG64 BaseOfDll,_In_ PCTSTR Name,_Inout_ PSYMBOL_INFO Symbol)
BOOL WINAPI dbghelp.SymGetTypeFromNameW(_In_ HANDLE hProcess,_In_ ULONG64 BaseOfDll,_In_ PCTSTR Name,_Inout_ PSYMBOL_INFO Symbol)
BOOL WINAPI dbghelp.SymGetTypeFromName(_In_ HANDLE hProcess,_In_ ULONG64 BaseOfDll,_In_ PCTSTR Name,_Inout_ PSYMBOL_INFO Symbol)
BOOL WINAPI dbghelp.SymEnumSourceFileTokens(_In_ HANDLE hProcess,_In_ ULONG64 Base,_In_ PENUMSOURCEFILETOKENSCALLBACK Callback)
BOOL WINAPI dbghelp.SearchTreeForFile(_In_ PCTSTR RootPath,_In_ PCTSTR InputPathName,_Out_ PTSTR OutputPathBuffer)
BOOL WINAPI dbghelp.SearchTreeForFileW(_In_ PCTSTR RootPath,_In_ PCTSTR InputPathName,_Out_ PTSTR OutputPathBuffer)
BOOL WINAPI dbghelp.SearchTreeForFile(_In_ PCTSTR RootPath,_In_ PCTSTR InputPathName,_Out_ PTSTR OutputPathBuffer)
BOOL WINAPI dbghelp.SymSrvGetFileIndexString(_In_ HANDLE hProcess,_In_opt_ PCTSTR SrvPath,_In_ PCTSTR File,_Out_ PTSTR Index,_In_ size_t Size,_In_ DWORD Flags)
BOOL WINAPI dbghelp.SymSrvGetFileIndexStringW(_In_ HANDLE hProcess,_In_opt_ PCTSTR SrvPath,_In_ PCTSTR File,_Out_ PTSTR Index,_In_ size_t Size,_In_ DWORD Flags)
BOOL WINAPI dbghelp.SymSrvGetFileIndexString(_In_ HANDLE hProcess,_In_opt_ PCTSTR SrvPath,_In_ PCTSTR File,_Out_ PTSTR Index,_In_ size_t Size,_In_ DWORD Flags)
BOOL IMAGEAPI dbghelp.SymQueryInlineTrace(_In_ HANDLE hProcess,_In_ DWORD64 StartAddress,_In_ DWORD StartContext,_In_ DWORD64 StartRetAddress,_In_ DWORD64 CurAddress,_Out_ LPDWORD CurContext,_Out_ LPDWORD CurFrameIndex)
BOOL WINAPI dbghelp.SymEnumTypes(_In_ HANDLE hProcess,_In_ ULONG64 BaseOfDll,_In_ PSYM_ENUMERATESYMBOLS_CALLBACK EnumSymbolsCallback,_In_opt_ PVOID UserContext)
BOOL WINAPI dbghelp.SymEnumTypesW(_In_ HANDLE hProcess,_In_ ULONG64 BaseOfDll,_In_ PSYM_ENUMERATESYMBOLS_CALLBACK EnumSymbolsCallback,_In_opt_ PVOID UserContext)
BOOL WINAPI dbghelp.SymEnumTypes(_In_ HANDLE hProcess,_In_ ULONG64 BaseOfDll,_In_ PSYM_ENUMERATESYMBOLS_CALLBACK EnumSymbolsCallback,_In_opt_ PVOID UserContext)
BOOL WINAPI dbghelp.SymGetLineFromName64(_In_ HANDLE hProcess,_In_opt_ PCTSTR ModuleName,_In_opt_ PCTSTR FileName,_In_ DWORD dwLineNumber,_Out_ PLONG lpDisplacement,_Inout_ PIMAGEHLP_LINE64 Line)
BOOL WINAPI dbghelp.SymGetLineFromNameW64(_In_ HANDLE hProcess,_In_opt_ PCTSTR ModuleName,_In_opt_ PCTSTR FileName,_In_ DWORD dwLineNumber,_Out_ PLONG lpDisplacement,_Inout_ PIMAGEHLP_LINE64 Line)
BOOL WINAPI dbghelp.SymGetLineFromName64(_In_ HANDLE hProcess,_In_opt_ PCTSTR ModuleName,_In_opt_ PCTSTR FileName,_In_ DWORD dwLineNumber,_Out_ PLONG lpDisplacement,_Inout_ PIMAGEHLP_LINE64 Line)
BOOL WINAPI dbghelp.SymEnumSourceLines(_In_ HANDLE hProcess,_In_ ULONG64 Base,_In_opt_ PCTSTR Obj,_In_opt_ PCTSTR File,_In_opt_ DWORD Line,_In_ DWORD Flags,_In_ PSYM_ENUMLINES_CALLBACK EnumLinesCallback,_In_opt_ PVOID UserContext)
BOOL WINAPI dbghelp.SymEnumSourceLinesW(_In_ HANDLE hProcess,_In_ ULONG64 Base,_In_opt_ PCTSTR Obj,_In_opt_ PCTSTR File,_In_opt_ DWORD Line,_In_ DWORD Flags,_In_ PSYM_ENUMLINES_CALLBACK EnumLinesCallback,_In_opt_ PVOID UserContext)
BOOL WINAPI dbghelp.SymEnumSourceLines(_In_ HANDLE hProcess,_In_ ULONG64 Base,_In_opt_ PCTSTR Obj,_In_opt_ PCTSTR File,_In_opt_ DWORD Line,_In_ DWORD Flags,_In_ PSYM_ENUMLINES_CALLBACK EnumLinesCallback,_In_opt_ PVOID UserContext)
BOOL WINAPI dbghelp.SymEnumSourceFileTokens(_In_ HANDLE hProcess,_In_ ULONG64 Base,_In_ PENUMSOURCEFILETOKENSCALLBACK Callback)
BOOL WINAPI dbghelp.SymEnumTypesByName(_In_ HANDLE hProcess,_In_ ULONG64 BaseOfDll,_In_opt_ PCSTR mask,_In_ PSYM_ENUMERATESYMBOLS_CALLBACK EnumSymbolsCallback,_In_ PVOID UserContext)
BOOL WINAPI dbghelp.SymEnumTypesByNameW(_In_ HANDLE hProcess,_In_ ULONG64 BaseOfDll,_In_opt_ PCSTR mask,_In_ PSYM_ENUMERATESYMBOLS_CALLBACK EnumSymbolsCallback,_In_ PVOID UserContext)
BOOL WINAPI dbghelp.SymEnumTypesByName(_In_ HANDLE hProcess,_In_ ULONG64 BaseOfDll,_In_opt_ PCSTR mask,_In_ PSYM_ENUMERATESYMBOLS_CALLBACK EnumSymbolsCallback,_In_ PVOID UserContext)
BOOL WINAPI dbghelp.SymSetScopeFromAddr(_In_ HANDLE hProcess,_In_ ULONG64 Address)
BOOL CALLBACK None.EnumerateLoadedModulesProc64(_In_ PCTSTR ModuleName,_In_ DWORD64 ModuleBase,_In_ ULONG ModuleSize,_In_opt_ PVOID UserContext)
BOOL WINAPI dbghelp.MakeSureDirectoryPathExists(_In_ PCSTR DirPath)
BOOL WINAPI dbghelp.EnumerateLoadedModules64(_In_ HANDLE hProcess,_In_ PENUMLOADED_MODULES_CALLBACK64 EnumLoadedModulesCallback,_In_opt_ PVOID UserContext)
BOOL WINAPI dbghelp.EnumerateLoadedModulesW64(_In_ HANDLE hProcess,_In_ PENUMLOADED_MODULES_CALLBACK64 EnumLoadedModulesCallback,_In_opt_ PVOID UserContext)
BOOL WINAPI dbghelp.EnumerateLoadedModules64(_In_ HANDLE hProcess,_In_ PENUMLOADED_MODULES_CALLBACK64 EnumLoadedModulesCallback,_In_opt_ PVOID UserContext)
BOOL WINAPI dbghelp.SymGetSearchPath(_In_ HANDLE hProcess,_Out_ PTSTR SearchPath,_In_ DWORD SearchPathLength)
BOOL WINAPI dbghelp.SymGetSearchPathW(_In_ HANDLE hProcess,_Out_ PTSTR SearchPath,_In_ DWORD SearchPathLength)
BOOL WINAPI dbghelp.SymGetSearchPath(_In_ HANDLE hProcess,_Out_ PTSTR SearchPath,_In_ DWORD SearchPathLength)
BOOLEAN WINAPI powrprof.GetPwrCapabilities(_Out_ PSYSTEM_POWER_CAPABILITIES lpSystemPowerCapabilities)
PVOID WINAPI dbghelp.SymFunctionTableAccess64(_In_ HANDLE hProcess,_In_ DWORD64 AddrBase)
BOOL WINAPI dbghelp.SymFromAddr(_In_ HANDLE hProcess,_In_ DWORD64 Address,_Out_opt_ PDWORD64 Displacement,_Inout_ PSYMBOL_INFO Symbol)
BOOL WINAPI dbghelp.SymFromAddrW(_In_ HANDLE hProcess,_In_ DWORD64 Address,_Out_opt_ PDWORD64 Displacement,_Inout_ PSYMBOL_INFO Symbol)
BOOL WINAPI dbghelp.SymFromAddr(_In_ HANDLE hProcess,_In_ DWORD64 Address,_Out_opt_ PDWORD64 Displacement,_Inout_ PSYMBOL_INFO Symbol)
BOOL WINAPI dbghelp.SymGetSymFromName64(_In_ HANDLE hProcess,_In_ PCSTR Name,_Inout_ PIMAGEHLP_SYMBOL64 Symbol)
BOOL WINAPI dbghelp.SymGetSymbolFile(_In_opt_ HANDLE hProcess,_In_opt_ PCTSTR SymPath,_In_ PCTSTR ImageFile,_In_ DWORD Type,_Out_ PTSTR SymbolFile,_In_ size_t cSymbolFile,_Out_ PTSTR DbgFile,_In_ size_t cDbgFile)
BOOL WINAPI dbghelp.SymGetSymbolFileW(_In_opt_ HANDLE hProcess,_In_opt_ PCTSTR SymPath,_In_ PCTSTR ImageFile,_In_ DWORD Type,_Out_ PTSTR SymbolFile,_In_ size_t cSymbolFile,_Out_ PTSTR DbgFile,_In_ size_t cDbgFile)
BOOL WINAPI dbghelp.SymGetSymbolFile(_In_opt_ HANDLE hProcess,_In_opt_ PCTSTR SymPath,_In_ PCTSTR ImageFile,_In_ DWORD Type,_Out_ PTSTR SymbolFile,_In_ size_t cSymbolFile,_Out_ PTSTR DbgFile,_In_ size_t cDbgFile)
BOOL WINAPI dbghelp.SymEnumSourceLines(_In_ HANDLE hProcess,_In_ ULONG64 Base,_In_opt_ PCTSTR Obj,_In_opt_ PCTSTR File,_In_opt_ DWORD Line,_In_ DWORD Flags,_In_ PSYM_ENUMLINES_CALLBACK EnumLinesCallback,_In_opt_ PVOID UserContext)
BOOL WINAPI dbghelp.SymEnumSourceLinesW(_In_ HANDLE hProcess,_In_ ULONG64 Base,_In_opt_ PCTSTR Obj,_In_opt_ PCTSTR File,_In_opt_ DWORD Line,_In_ DWORD Flags,_In_ PSYM_ENUMLINES_CALLBACK EnumLinesCallback,_In_opt_ PVOID UserContext)
BOOL WINAPI dbghelp.SymEnumSourceLines(_In_ HANDLE hProcess,_In_ ULONG64 Base,_In_opt_ PCTSTR Obj,_In_opt_ PCTSTR File,_In_opt_ DWORD Line,_In_ DWORD Flags,_In_ PSYM_ENUMLINES_CALLBACK EnumLinesCallback,_In_opt_ PVOID UserContext)
HANDLE WINAPI dbghelp.FindExecutableImage(_In_ PCSTR FileName,_In_ PCSTR SymbolPath,_Out_ PSTR ImageFilePath)
BOOL WINAPI dbghelp.SymSetScopeFromAddr(_In_ HANDLE hProcess,_In_ ULONG64 Address)
BOOL WINAPI dbghelp.SymPrev(_In_ HANDLE hProcess,_Inout_ PSYMBOL_INFO Symbol)
BOOL WINAPI dbghelp.SymPrevW(_In_ HANDLE hProcess,_Inout_ PSYMBOL_INFO Symbol)
BOOL WINAPI dbghelp.SymPrev(_In_ HANDLE hProcess,_Inout_ PSYMBOL_INFO Symbol)
BOOL WINAPI dbghelp.SymSrvGetFileIndexString(_In_ HANDLE hProcess,_In_opt_ PCTSTR SrvPath,_In_ PCTSTR File,_Out_ PTSTR Index,_In_ size_t Size,_In_ DWORD Flags)
BOOL WINAPI dbghelp.SymSrvGetFileIndexStringW(_In_ HANDLE hProcess,_In_opt_ PCTSTR SrvPath,_In_ PCTSTR File,_Out_ PTSTR Index,_In_ size_t Size,_In_ DWORD Flags)
BOOL WINAPI dbghelp.SymSrvGetFileIndexString(_In_ HANDLE hProcess,_In_opt_ PCTSTR SrvPath,_In_ PCTSTR File,_Out_ PTSTR Index,_In_ size_t Size,_In_ DWORD Flags)
BOOLEAN WINAPI kernel32.RtlAddFunctionTable(_In_ PRUNTIME_FUNCTION FunctionTable,_In_ DWORD EntryCount,_In_ DWORD64 BaseAddress,_In_ ULONGLONG TargetGp)
BOOL CALLBACK None.SymEnumerateSymbolsProc64(_In_ PCTSTR SymbolName,_In_ DWORD64 SymbolAddress,_In_ ULONG SymbolSize,_In_opt_ PVOID UserContext)
BOOL WINAPI dbghelp.SymRegisterFunctionEntryCallback64(_In_ HANDLE hProcess,_In_ PSYMBOL_FUNCENTRY_CALLBACK64 CallbackFunction,_In_ ULONG64 UserContext)
LONG CALLBACK None.VectoredHandler(_In_ PEXCEPTION_POINTERS ExceptionInfo)
BOOL WINAPI dbghelp.SymSetContext(_In_ HANDLE hProcess,_In_ PIMAGEHLP_STACK_FRAME StackFrame,_In_opt_ PIMAGEHLP_CONTEXT Context)
HANDLE WINAPI dbghelp.FindExecutableImageEx(_In_ PCTSTR FileName,_In_ PCTSTR SymbolPath,_Out_ PTSTR ImageFilePath,_In_opt_ PFIND_EXE_FILE_CALLBACK Callback,_In_opt_ PVOID CallerData)
HANDLE WINAPI dbghelp.FindExecutableImageExW(_In_ PCTSTR FileName,_In_ PCTSTR SymbolPath,_Out_ PTSTR ImageFilePath,_In_opt_ PFIND_EXE_FILE_CALLBACK Callback,_In_opt_ PVOID CallerData)
HANDLE WINAPI dbghelp.FindExecutableImageEx(_In_ PCTSTR FileName,_In_ PCTSTR SymbolPath,_Out_ PTSTR ImageFilePath,_In_opt_ PFIND_EXE_FILE_CALLBACK Callback,_In_opt_ PVOID CallerData)
BOOL WINAPI dbghelp.SymEnumLines(_In_ HANDLE hProcess,_In_ ULONG64 Base,_In_opt_ PCTSTR Obj,_In_opt_ PCTSTR File,_In_ PSYM_ENUMLINES_CALLBACK EnumLinesCallback,_In_opt_ PVOID UserContext)
BOOL WINAPI dbghelp.SymEnumLinesW(_In_ HANDLE hProcess,_In_ ULONG64 Base,_In_opt_ PCTSTR Obj,_In_opt_ PCTSTR File,_In_ PSYM_ENUMLINES_CALLBACK EnumLinesCallback,_In_opt_ PVOID UserContext)
BOOL WINAPI dbghelp.SymEnumLines(_In_ HANDLE hProcess,_In_ ULONG64 Base,_In_opt_ PCTSTR Obj,_In_opt_ PCTSTR File,_In_ PSYM_ENUMLINES_CALLBACK EnumLinesCallback,_In_opt_ PVOID UserContext)
PVOID CALLBACK None.FunctionTableAccessProc64(_In_ HANDLE hProcess,_In_ DWORD64 AddrBase)
BOOL WINAPI dbghelp.SymGetLinePrev64(_In_ HANDLE hProcess,_Inout_ PIMAGEHLP_LINE64 Line)
BOOL WINAPI dbghelp.SymGetLinePrevW64(_In_ HANDLE hProcess,_Inout_ PIMAGEHLP_LINE64 Line)
BOOL WINAPI dbghelp.SymGetLinePrev64(_In_ HANDLE hProcess,_Inout_ PIMAGEHLP_LINE64 Line)
DWORD WINAPI dbghelp.UnDecorateSymbolName(_In_ PCTSTR DecoratedName,_Out_ PTSTR UnDecoratedName,_In_ DWORD UndecoratedLength,_In_ DWORD Flags)
DWORD WINAPI dbghelp.UnDecorateSymbolNameW(_In_ PCTSTR DecoratedName,_Out_ PTSTR UnDecoratedName,_In_ DWORD UndecoratedLength,_In_ DWORD Flags)
DWORD WINAPI dbghelp.UnDecorateSymbolName(_In_ PCTSTR DecoratedName,_Out_ PTSTR UnDecoratedName,_In_ DWORD UndecoratedLength,_In_ DWORD Flags)
PIMAGE_DEBUG_INFORMATION WINAPI dbghelp.MapDebugInformation(_In_opt_ HANDLE FileHandle,_In_ PCSTR FileName,_In_opt_ PCSTR SymbolPath,_In_ ULONG ImageBase)
BOOLEAN WINAPI kernel32.RtlAddFunctionTable(_In_ PRUNTIME_FUNCTION FunctionTable,_In_ DWORD EntryCount,_In_ DWORD64 BaseAddress,_In_ ULONGLONG TargetGp)
BOOLEAN WINAPI kernel32.RtlAddFunctionTable(_In_ PRUNTIME_FUNCTION FunctionTable,_In_ DWORD EntryCount,_In_ DWORD64 BaseAddress,_In_ ULONGLONG TargetGp)
BOOL WINAPI dbghelp.SymEnumerateModules64(_In_ HANDLE hProcess,_In_ PSYM_ENUMMODULES_CALLBACK64 EnumModulesCallback,_In_opt_ PVOID UserContext)
BOOL WINAPI dbghelp.SymEnumerateModulesW64(_In_ HANDLE hProcess,_In_ PSYM_ENUMMODULES_CALLBACK64 EnumModulesCallback,_In_opt_ PVOID UserContext)
BOOL WINAPI dbghelp.SymEnumerateModules64(_In_ HANDLE hProcess,_In_ PSYM_ENUMMODULES_CALLBACK64 EnumModulesCallback,_In_opt_ PVOID UserContext)
BOOL WINAPI dbghelp.SymSearch(_In_ HANDLE hProcess,_In_ ULONG64 BaseOfDll,_In_opt_ DWORD Index,_In_opt_ DWORD SymTag,_In_opt_ PCTSTR Mask,_In_opt_ DWORD64 Address,_In_ PSYM_ENUMERATESYMBOLS_CALLBACK EnumSymbolsCallback,_In_opt_ PVOID UserContext,_In_ DWORD Options)
BOOL WINAPI dbghelp.SymSearchW(_In_ HANDLE hProcess,_In_ ULONG64 BaseOfDll,_In_opt_ DWORD Index,_In_opt_ DWORD SymTag,_In_opt_ PCTSTR Mask,_In_opt_ DWORD64 Address,_In_ PSYM_ENUMERATESYMBOLS_CALLBACK EnumSymbolsCallback,_In_opt_ PVOID UserContext,_In_ DWORD Options)
BOOL WINAPI dbghelp.SymSearch(_In_ HANDLE hProcess,_In_ ULONG64 BaseOfDll,_In_opt_ DWORD Index,_In_opt_ DWORD SymTag,_In_opt_ PCTSTR Mask,_In_opt_ DWORD64 Address,_In_ PSYM_ENUMERATESYMBOLS_CALLBACK EnumSymbolsCallback,_In_opt_ PVOID UserContext,_In_ DWORD Options)
PCTSTR WINAPI dbghelp.SymSrvGetSupplement(_In_ HANDLE hProcess,_In_opt_ PCTSTR SymPath,_In_ PCTSTR Node,_In_ PCTSTR File)
PCTSTR WINAPI dbghelp.SymSrvGetSupplementW(_In_ HANDLE hProcess,_In_opt_ PCTSTR SymPath,_In_ PCTSTR Node,_In_ PCTSTR File)
PCTSTR WINAPI dbghelp.SymSrvGetSupplement(_In_ HANDLE hProcess,_In_opt_ PCTSTR SymPath,_In_ PCTSTR Node,_In_ PCTSTR File)
LPAPI_VERSION WINAPI dbghelp.ImagehlpApiVersionEx(_In_ LPAPI_VERSION AppVersion)
public void None.FromXmlString(String xmlString None)
BOOL WINAPI dbghelp.SymGetSymFromName64(_In_ HANDLE hProcess,_In_ PCSTR Name,_Inout_ PIMAGEHLP_SYMBOL64 Symbol)
BOOL WINAPI dbghelp.SymSetSearchPath(_In_ HANDLE hProcess,_In_opt_ PCTSTR SearchPath)
BOOL WINAPI dbghelp.SymSetSearchPathW(_In_ HANDLE hProcess,_In_opt_ PCTSTR SearchPath)
BOOL WINAPI dbghelp.SymSetSearchPath(_In_ HANDLE hProcess,_In_opt_ PCTSTR SearchPath)
BOOL WINAPI dbghelp.SymFromToken(_In_ HANDLE hProcess,_In_ DWORD64 Base,_In_ DWORD Token,_Inout_ PSYMBOL_INFO Symbol)
BOOL WINAPI dbghelp.SymFromTokenW(_In_ HANDLE hProcess,_In_ DWORD64 Base,_In_ DWORD Token,_Inout_ PSYMBOL_INFO Symbol)
BOOL WINAPI dbghelp.SymFromToken(_In_ HANDLE hProcess,_In_ DWORD64 Base,_In_ DWORD Token,_Inout_ PSYMBOL_INFO Symbol)
PTCHAR WINAPI dbghelp.SymGetHomeDirectory(_In_ DWORD type,_Out_ PTSTR dir,_In_ size_t size)
PTCHAR WINAPI dbghelp.SymGetHomeDirectoryW(_In_ DWORD type,_Out_ PTSTR dir,_In_ size_t size)
PTCHAR WINAPI dbghelp.SymGetHomeDirectory(_In_ DWORD type,_Out_ PTSTR dir,_In_ size_t size)
BOOL CALLBACK None.SymEnumSymbolsProc(_In_ PSYMBOL_INFO pSymInfo,_In_ ULONG SymbolSize,_In_opt_ PVOID UserContext)
BOOL CALLBACK None.PSYM_ENUMERATESYMBOLS_CALLBACKW(_In_ PSYMBOL_INFO pSymInfo,_In_ ULONG SymbolSize,_In_opt_ PVOID UserContext)
BOOL CALLBACK None.PSYM_ENUMERATESYMBOLS_CALLBACK(_In_ PSYMBOL_INFO pSymInfo,_In_ ULONG SymbolSize,_In_opt_ PVOID UserContext)
HANDLE WINAPI dbghelp.SymFindDebugInfoFile(_In_ HANDLE hProcess,_In_ PCTSTR FileName,_Out_ PTSTR DebugFilePath,_In_opt_ PFIND_DEBUG_FILE_CALLBACK Callback,_In_opt_ PVOID CallerData)
HANDLE WINAPI dbghelp.SymFindDebugInfoFileW(_In_ HANDLE hProcess,_In_ PCTSTR FileName,_Out_ PTSTR DebugFilePath,_In_opt_ PFIND_DEBUG_FILE_CALLBACK Callback,_In_opt_ PVOID CallerData)
HANDLE WINAPI dbghelp.SymFindDebugInfoFile(_In_ HANDLE hProcess,_In_ PCTSTR FileName,_Out_ PTSTR DebugFilePath,_In_opt_ PFIND_DEBUG_FILE_CALLBACK Callback,_In_opt_ PVOID CallerData)
BOOL WINAPI dbghelp.SymGetSymFromName64(_In_ HANDLE hProcess,_In_ PCSTR Name,_Inout_ PIMAGEHLP_SYMBOL64 Symbol)
BOOL WINAPI dbghelp.SymSrvGetFileIndexInfo(_In_ PCTSTR File,_Out_ PSYMSRV_INDEX_INFO Info,_In_ DWORD Flags)
BOOL WINAPI dbghelp.SymSrvGetFileIndexInfoW(_In_ PCTSTR File,_Out_ PSYMSRV_INDEX_INFO Info,_In_ DWORD Flags)
BOOL WINAPI dbghelp.SymSrvGetFileIndexInfo(_In_ PCTSTR File,_Out_ PSYMSRV_INDEX_INFO Info,_In_ DWORD Flags)
BOOL WINAPI dbghelp.SymRefreshModuleList(_In_ HANDLE hProcess)
PIMAGE_SECTION_HEADER WINAPI dbghelp.ImageRvaToSection(_In_ PIMAGE_NT_HEADERS NtHeaders,_In_ PVOID Base,_In_ ULONG Rva)
BOOL WINAPI dbghelp.SymAddSourceStream(_In_ HANDLE hProcess,_In_ ULONG64 Base,_In_opt_ PCTSTR StreamFile,_In_opt_ PBYTE Buffer,_In_ size_t Size)
BOOL WINAPI dbghelp.SymAddSourceStreamW(_In_ HANDLE hProcess,_In_ ULONG64 Base,_In_opt_ PCTSTR StreamFile,_In_opt_ PBYTE Buffer,_In_ size_t Size)
BOOL WINAPI dbghelp.SymAddSourceStream(_In_ HANDLE hProcess,_In_ ULONG64 Base,_In_opt_ PCTSTR StreamFile,_In_opt_ PBYTE Buffer,_In_ size_t Size)
BOOL WINAPI dbghelp.SymEnumLines(_In_ HANDLE hProcess,_In_ ULONG64 Base,_In_opt_ PCTSTR Obj,_In_opt_ PCTSTR File,_In_ PSYM_ENUMLINES_CALLBACK EnumLinesCallback,_In_opt_ PVOID UserContext)
BOOL WINAPI dbghelp.SymEnumLinesW(_In_ HANDLE hProcess,_In_ ULONG64 Base,_In_opt_ PCTSTR Obj,_In_opt_ PCTSTR File,_In_ PSYM_ENUMLINES_CALLBACK EnumLinesCallback,_In_opt_ PVOID UserContext)
BOOL WINAPI dbghelp.SymEnumLines(_In_ HANDLE hProcess,_In_ ULONG64 Base,_In_opt_ PCTSTR Obj,_In_opt_ PCTSTR File,_In_ PSYM_ENUMLINES_CALLBACK EnumLinesCallback,_In_opt_ PVOID UserContext)
BOOL WINAPI dbghelp.SymSrvGetFileIndexInfo(_In_ PCTSTR File,_Out_ PSYMSRV_INDEX_INFO Info,_In_ DWORD Flags)
BOOL WINAPI dbghelp.SymSrvGetFileIndexInfoW(_In_ PCTSTR File,_Out_ PSYMSRV_INDEX_INFO Info,_In_ DWORD Flags)
BOOL WINAPI dbghelp.SymSrvGetFileIndexInfo(_In_ PCTSTR File,_Out_ PSYMSRV_INDEX_INFO Info,_In_ DWORD Flags)
BOOL WINAPI dbghelp.SymInitialize(_In_ HANDLE hProcess,_In_opt_ PCTSTR UserSearchPath,_In_ BOOL fInvadeProcess)
BOOL WINAPI dbghelp.SymInitializeW(_In_ HANDLE hProcess,_In_opt_ PCTSTR UserSearchPath,_In_ BOOL fInvadeProcess)
BOOL WINAPI dbghelp.SymInitialize(_In_ HANDLE hProcess,_In_opt_ PCTSTR UserSearchPath,_In_ BOOL fInvadeProcess)
DWORD IMAGEAPI dbghelp.SymAddrIncludeInlineTrace(_In_ HANDLE hProcess,_In_ DWORD64 Address)
BOOL WINAPI dbghelp.SymGetTypeInfoEx(_In_ HANDLE hProcess,_In_ DWORD64 ModBase,_Inout_ PIMAGEHLP_GET_TYPE_INFO_PARAMS Params)
BOOL WINAPI dbghelp.EnumerateLoadedModules64(_In_ HANDLE hProcess,_In_ PENUMLOADED_MODULES_CALLBACK64 EnumLoadedModulesCallback,_In_opt_ PVOID UserContext)
BOOL WINAPI dbghelp.EnumerateLoadedModulesW64(_In_ HANDLE hProcess,_In_ PENUMLOADED_MODULES_CALLBACK64 EnumLoadedModulesCallback,_In_opt_ PVOID UserContext)
BOOL WINAPI dbghelp.EnumerateLoadedModules64(_In_ HANDLE hProcess,_In_ PENUMLOADED_MODULES_CALLBACK64 EnumLoadedModulesCallback,_In_opt_ PVOID UserContext)
BOOL WINAPI dbghelp.SymGetSourceFile(_In_ HANDLE hProcess,_In_ ULONG64 Base,_In_opt_ PCTSTR Params,_In_ PCTSTR FileSpec,_Out_ PTSTR FilePath,_In_ DWORD Size)
BOOL WINAPI dbghelp.SymGetSourceFileW(_In_ HANDLE hProcess,_In_ ULONG64 Base,_In_opt_ PCTSTR Params,_In_ PCTSTR FileSpec,_Out_ PTSTR FilePath,_In_ DWORD Size)
BOOL WINAPI dbghelp.SymGetSourceFile(_In_ HANDLE hProcess,_In_ ULONG64 Base,_In_opt_ PCTSTR Params,_In_ PCTSTR FileSpec,_Out_ PTSTR FilePath,_In_ DWORD Size)
HANDLE WINAPI dbghelp.FindExecutableImageEx(_In_ PCTSTR FileName,_In_ PCTSTR SymbolPath,_Out_ PTSTR ImageFilePath,_In_opt_ PFIND_EXE_FILE_CALLBACK Callback,_In_opt_ PVOID CallerData)
HANDLE WINAPI dbghelp.FindExecutableImageExW(_In_ PCTSTR FileName,_In_ PCTSTR SymbolPath,_Out_ PTSTR ImageFilePath,_In_opt_ PFIND_EXE_FILE_CALLBACK Callback,_In_opt_ PVOID CallerData)
HANDLE WINAPI dbghelp.FindExecutableImageEx(_In_ PCTSTR FileName,_In_ PCTSTR SymbolPath,_Out_ PTSTR ImageFilePath,_In_opt_ PFIND_EXE_FILE_CALLBACK Callback,_In_opt_ PVOID CallerData)
DWORD IMAGEAPI dbghelp.SymCompareInlineTrace(_In_ HANDLE hProcess,_In_ DWORD64 Address1,_In_ DWORD InlineContext1,_In_ DWORD64 RetAddress1,_In_ DWORD64 Address2,_In_ DWORD64 RetAddress2)
VOID WINAPI kernel32.RtlCaptureContext(_Out_ PCONTEXT ContextRecord)
BOOL IMAGEAPI dbghelp.SymEnumSymbolsEx(_In_ HANDLE hProcess,_In_ ULONG64 BaseOfDll,_In_opt_ PCTSTR Mask,_In_ PSYM_ENUMERATESYMBOLS_CALLBACK EnumSymbolsCallback,_In_opt_ PVOID UserContext,_In_ DWORD Options)
BOOL IMAGEAPI dbghelp.SymEnumSymbolsExW(_In_ HANDLE hProcess,_In_ ULONG64 BaseOfDll,_In_opt_ PCTSTR Mask,_In_ PSYM_ENUMERATESYMBOLS_CALLBACK EnumSymbolsCallback,_In_opt_ PVOID UserContext,_In_ DWORD Options)
BOOL IMAGEAPI dbghelp.SymEnumSymbolsEx(_In_ HANDLE hProcess,_In_ ULONG64 BaseOfDll,_In_opt_ PCTSTR Mask,_In_ PSYM_ENUMERATESYMBOLS_CALLBACK EnumSymbolsCallback,_In_opt_ PVOID UserContext,_In_ DWORD Options)
BOOL WINAPI dbghelp.MiniDumpReadDumpStream(_In_ PVOID BaseOfDump,_In_ ULONG StreamNumber,_Out_ PMINIDUMP_DIRECTORY *Dir,_Out_ PVOID *StreamPointer,_Out_ ULONG *StreamSize)
BOOL WINAPI dbghelp.SymGetSymFromAddr64(_In_ HANDLE hProcess,_In_ DWORD64 Address,_Out_opt_ PDWORD64 Displacement,_Inout_ PIMAGEHLP_SYMBOL64 Symbol)
BOOL WINAPI dbghelp.SymMatchString(_In_ PCTSTR string,_In_ PCTSTR expression,_In_ BOOL fCase)
BOOL WINAPI dbghelp.SymMatchStringW(_In_ PCTSTR string,_In_ PCTSTR expression,_In_ BOOL fCase)
BOOL WINAPI dbghelp.SymMatchString(_In_ PCTSTR string,_In_ PCTSTR expression,_In_ BOOL fCase)
VOID WINAPI kernel32.RaiseFailFastException(_In_opt_ PEXCEPTION_RECORD pExceptionRecord,_In_opt_ PCONTEXT pContextRecord,_In_ DWORD dwFlags)
BOOLEAN WINAPI kernel32.RtlAddFunctionTable(_In_ PRUNTIME_FUNCTION FunctionTable,_In_ DWORD EntryCount,_In_ DWORD64 BaseAddress,_In_ ULONGLONG TargetGp)
BOOL WINAPI dbghelp.SymGetSymbolFile(_In_opt_ HANDLE hProcess,_In_opt_ PCTSTR SymPath,_In_ PCTSTR ImageFile,_In_ DWORD Type,_Out_ PTSTR SymbolFile,_In_ size_t cSymbolFile,_Out_ PTSTR DbgFile,_In_ size_t cDbgFile)
BOOL WINAPI dbghelp.SymGetSymbolFileW(_In_opt_ HANDLE hProcess,_In_opt_ PCTSTR SymPath,_In_ PCTSTR ImageFile,_In_ DWORD Type,_Out_ PTSTR SymbolFile,_In_ size_t cSymbolFile,_Out_ PTSTR DbgFile,_In_ size_t cDbgFile)
BOOL WINAPI dbghelp.SymGetSymbolFile(_In_opt_ HANDLE hProcess,_In_opt_ PCTSTR SymPath,_In_ PCTSTR ImageFile,_In_ DWORD Type,_Out_ PTSTR SymbolFile,_In_ size_t cSymbolFile,_Out_ PTSTR DbgFile,_In_ size_t cDbgFile)
PVOID WINAPI dbghelp.SymFunctionTableAccess64(_In_ HANDLE hProcess,_In_ DWORD64 AddrBase)
BOOL WINAPI dbghelp.SymGetSymNext64(_In_ HANDLE hProcess,_Inout_ PIMAGEHLP_SYMBOL64 Symbol)
void CALLBACK ws2_32.CompletionROUTINE(IN DWORD dwError,IN DWORD cbTransferred,IN LPWSAOVERLAPPED lpOverlapped,IN DWORD dwFlags)
HANDLE WINAPI dbghelp.FindExecutableImageEx(_In_ PCTSTR FileName,_In_ PCTSTR SymbolPath,_Out_ PTSTR ImageFilePath,_In_opt_ PFIND_EXE_FILE_CALLBACK Callback,_In_opt_ PVOID CallerData)
HANDLE WINAPI dbghelp.FindExecutableImageExW(_In_ PCTSTR FileName,_In_ PCTSTR SymbolPath,_Out_ PTSTR ImageFilePath,_In_opt_ PFIND_EXE_FILE_CALLBACK Callback,_In_opt_ PVOID CallerData)
HANDLE WINAPI dbghelp.FindExecutableImageEx(_In_ PCTSTR FileName,_In_ PCTSTR SymbolPath,_Out_ PTSTR ImageFilePath,_In_opt_ PFIND_EXE_FILE_CALLBACK Callback,_In_opt_ PVOID CallerData)
BOOL WINAPI dbghelp.SymUnDName64(_In_ PIMAGEHLP_SYMBOL64 sym,_Out_ PSTR UnDecName,_In_ DWORD UnDecNameLength)
BOOL CALLBACK None.ReadProcessMemoryProc64(_In_ HANDLE hProcess,_In_ DWORD64 lpBaseAddress,_Out_ PVOID lpBuffer,_In_ DWORD nSize,_Out_ LPDWORD lpNumberOfBytesRead)
BOOL WINAPI dbghelp.SymSrvIsStore(_In_opt_ HANDLE hProcess,_In_ PCTSTR path)
BOOL WINAPI dbghelp.SymSrvIsStoreW(_In_opt_ HANDLE hProcess,_In_ PCTSTR path)
BOOL WINAPI dbghelp.SymSrvIsStore(_In_opt_ HANDLE hProcess,_In_ PCTSTR path)
LPTOP_LEVEL_EXCEPTION_FILTER WINAPI kernel32.SetUnhandledExceptionFilter(_In_ LPTOP_LEVEL_EXCEPTION_FILTER lpTopLevelExceptionFilter)
BOOL CALLBACK None.FindExecutableImageProc(_In_ HANDLE FileHandle,_In_ PCTSTR FileName,_In_ PVOID CallerData)
BOOL WINAPI dbghelp.SymGetSymPrev64(_In_ HANDLE hProcess,_Inout_ PIMAGEHLP_SYMBOL64 Symbol)
HANDLE WINAPI dbghelp.SymFindExecutableImage(_In_ HANDLE hProcess,_In_ PCTSTR FileName,_Out_ PTSTR ImageFilePath,_In_ PFIND_EXE_FILE_CALLBACK Callback,_In_ PVOID CallerData)
HANDLE WINAPI dbghelp.SymFindExecutableImageW(_In_ HANDLE hProcess,_In_ PCTSTR FileName,_Out_ PTSTR ImageFilePath,_In_ PFIND_EXE_FILE_CALLBACK Callback,_In_ PVOID CallerData)
HANDLE WINAPI dbghelp.SymFindExecutableImage(_In_ HANDLE hProcess,_In_ PCTSTR FileName,_Out_ PTSTR ImageFilePath,_In_ PFIND_EXE_FILE_CALLBACK Callback,_In_ PVOID CallerData)
BOOL WINAPI dbghelp.SymSetScopeFromAddr(_In_ HANDLE hProcess,_In_ ULONG64 Address)
HANDLE WINAPI dbghelp.FindDebugInfoFileEx(_In_ PCTSTR FileName,_In_ PCTSTR SymbolPath,_Out_ PTSTR DebugFilePath,_In_opt_ PFIND_DEBUG_FILE_CALLBACK Callback,_In_opt_ PVOID CallerData)
HANDLE WINAPI dbghelp.FindDebugInfoFileExW(_In_ PCTSTR FileName,_In_ PCTSTR SymbolPath,_Out_ PTSTR DebugFilePath,_In_opt_ PFIND_DEBUG_FILE_CALLBACK Callback,_In_opt_ PVOID CallerData)
HANDLE WINAPI dbghelp.FindDebugInfoFileEx(_In_ PCTSTR FileName,_In_ PCTSTR SymbolPath,_Out_ PTSTR DebugFilePath,_In_opt_ PFIND_DEBUG_FILE_CALLBACK Callback,_In_opt_ PVOID CallerData)
BOOL WINAPI dbghelp.SymMatchFileName(_In_ PCTSTR FileName,_In_ PCTSTR Match,_Out_opt_ PTSTR *FileNameStop,_Out_opt_ PTSTR *MatchStop)
BOOL WINAPI dbghelp.SymMatchFileNameW(_In_ PCTSTR FileName,_In_ PCTSTR Match,_Out_opt_ PTSTR *FileNameStop,_Out_opt_ PTSTR *MatchStop)
BOOL WINAPI dbghelp.SymMatchFileName(_In_ PCTSTR FileName,_In_ PCTSTR Match,_Out_opt_ PTSTR *FileNameStop,_Out_opt_ PTSTR *MatchStop)
INT WSAAPI ws2_32.InetPton(_In_ INT Family,_In_ PCTSTR pszAddrString,_Out_ PVOID pAddrBuf)
INT WSAAPI ws2_32.InetPtonW(_In_ INT Family,_In_ PCTSTR pszAddrString,_Out_ PVOID pAddrBuf)
INT WSAAPI ws2_32.InetPtonA or inet_pton(_In_ INT Family,_In_ PCTSTR pszAddrString,_Out_ PVOID pAddrBuf)
VOID WINAPI kernel32.RtlCaptureContext(_Out_ PCONTEXT ContextRecord)
BOOL WINAPI dbghelp.SymGetScope(_In_ HANDLE hProcess,_In_ ULONG64 BaseOfDll,_In_ DWORD Index,_Inout_ PSYMBOL_INFO Symbol)
BOOL WINAPI dbghelp.SymGetScopeW(_In_ HANDLE hProcess,_In_ ULONG64 BaseOfDll,_In_ DWORD Index,_Inout_ PSYMBOL_INFO Symbol)
BOOL WINAPI dbghelp.SymGetScope(_In_ HANDLE hProcess,_In_ ULONG64 BaseOfDll,_In_ DWORD Index,_Inout_ PSYMBOL_INFO Symbol)
BOOL CALLBACK None.SymFindFileInPathProc(_In_ PCTSTR fileName,_In_ PVOID context)
PVOID WINAPI dbghelp.ImageRvaToVa(_In_ PIMAGE_NT_HEADERS NtHeaders,_In_ PVOID Base,_In_ ULONG Rva,_In_opt_ PIMAGE_SECTION_HEADER *LastRvaSection)
PVOID CALLBACK None.SymRegisterFunctionEntryCallbackProc64(_In_ HANDLE hProcess,_In_ ULONG64 AddrBase,_In_opt_ ULONG64 UserContext)
BOOL WINAPI dbghelp.SymGetSymNext64(_In_ HANDLE hProcess,_Inout_ PIMAGEHLP_SYMBOL64 Symbol)
PCTSTR WINAPI dbghelp.SymSrvStoreFile(_In_ HANDLE hProcess,_In_opt_ PCTSTR SrvPath,_In_ PCTSTR File,_In_ DWORD Flags)
PCTSTR WINAPI dbghelp.SymSrvStoreFileW(_In_ HANDLE hProcess,_In_opt_ PCTSTR SrvPath,_In_ PCTSTR File,_In_ DWORD Flags)
PCTSTR WINAPI dbghelp.SymSrvStoreFile(_In_ HANDLE hProcess,_In_opt_ PCTSTR SrvPath,_In_ PCTSTR File,_In_ DWORD Flags)
BOOL WINAPI dbghelp.SymGetTypeInfoEx(_In_ HANDLE hProcess,_In_ DWORD64 ModBase,_Inout_ PIMAGEHLP_GET_TYPE_INFO_PARAMS Params)
BOOL WINAPI dbghelp.SymGetTypeInfo(_In_ HANDLE hProcess,_In_ DWORD64 ModBase,_In_ ULONG TypeId,_In_ IMAGEHLP_SYMBOL_TYPE_INFO GetType,_Out_ PVOID pInfo)
VOID WINAPI kernel32.RaiseFailFastException(_In_opt_ PEXCEPTION_RECORD pExceptionRecord,_In_opt_ PCONTEXT pContextRecord,_In_ DWORD dwFlags)
BOOL WINAPI dbghelp.SymEnumSourceLines(_In_ HANDLE hProcess,_In_ ULONG64 Base,_In_opt_ PCTSTR Obj,_In_opt_ PCTSTR File,_In_opt_ DWORD Line,_In_ DWORD Flags,_In_ PSYM_ENUMLINES_CALLBACK EnumLinesCallback,_In_opt_ PVOID UserContext)
BOOL WINAPI dbghelp.SymEnumSourceLinesW(_In_ HANDLE hProcess,_In_ ULONG64 Base,_In_opt_ PCTSTR Obj,_In_opt_ PCTSTR File,_In_opt_ DWORD Line,_In_ DWORD Flags,_In_ PSYM_ENUMLINES_CALLBACK EnumLinesCallback,_In_opt_ PVOID UserContext)
BOOL WINAPI dbghelp.SymEnumSourceLines(_In_ HANDLE hProcess,_In_ ULONG64 Base,_In_opt_ PCTSTR Obj,_In_opt_ PCTSTR File,_In_opt_ DWORD Line,_In_ DWORD Flags,_In_ PSYM_ENUMLINES_CALLBACK EnumLinesCallback,_In_opt_ PVOID UserContext)
public void None.FromXmlString(String xmlString None)
BOOL WINAPI dbghelp.SymGetModuleInfo64(_In_ HANDLE hProcess,_In_ DWORD64 dwAddr,_Out_ PIMAGEHLP_MODULE64 ModuleInfo)
BOOL WINAPI dbghelp.SymGetModuleInfoW64(_In_ HANDLE hProcess,_In_ DWORD64 dwAddr,_Out_ PIMAGEHLP_MODULE64 ModuleInfo)
BOOL WINAPI dbghelp.SymGetModuleInfo64(_In_ HANDLE hProcess,_In_ DWORD64 dwAddr,_Out_ PIMAGEHLP_MODULE64 ModuleInfo)
BOOL CALLBACK None.SymFindFileInPathProc(_In_ PCTSTR fileName,_In_ PVOID context)
BOOL PASCAL mswsock.TransmitFile(SOCKET hSocket None,HANDLE hFile None,DWORD nNumberOfBytesToWrite None,DWORD nNumberOfBytesPerSend None,LPOVERLAPPED lpOverlapped None,LPTRANSMIT_FILE_BUFFERS lpTransmitBuffers None,DWORD dwFlags None)
u_long WSAAPI ws2_32.ntohl(_In_ u_long netlong)
ULONG WINAPI dbghelp.SymGetFileLineOffsets64(_In_ HANDLE hProcess,_In_opt_ PCSTR ModuleName,_In_ PCSTR FileName,_Out_ PDWORD64 Buffer,_In_ ULONG BufferLines)
PCTSTR WSAAPI ws2_32.InetNtop(_In_ INT Family,_In_ PVOID pAddr,_Out_ PTSTR pStringBuf,_In_ size_t StringBufSize)
PCTSTR WSAAPI ws2_32.InetNtopW(_In_ INT Family,_In_ PVOID pAddr,_Out_ PTSTR pStringBuf,_In_ size_t StringBufSize)
PCTSTR WSAAPI ws2_32.InetNtopA or inet_ntop(_In_ INT Family,_In_ PVOID pAddr,_Out_ PTSTR pStringBuf,_In_ size_t StringBufSize)
BOOL WINAPI dbghelp.SymGetSearchPath(_In_ HANDLE hProcess,_Out_ PTSTR SearchPath,_In_ DWORD SearchPathLength)
BOOL WINAPI dbghelp.SymGetSearchPathW(_In_ HANDLE hProcess,_Out_ PTSTR SearchPath,_In_ DWORD SearchPathLength)
BOOL WINAPI dbghelp.SymGetSearchPath(_In_ HANDLE hProcess,_Out_ PTSTR SearchPath,_In_ DWORD SearchPathLength)
BOOL WINAPI dbghelp.SymEnumTypesByName(_In_ HANDLE hProcess,_In_ ULONG64 BaseOfDll,_In_opt_ PCSTR mask,_In_ PSYM_ENUMERATESYMBOLS_CALLBACK EnumSymbolsCallback,_In_ PVOID UserContext)
BOOL WINAPI dbghelp.SymEnumTypesByNameW(_In_ HANDLE hProcess,_In_ ULONG64 BaseOfDll,_In_opt_ PCSTR mask,_In_ PSYM_ENUMERATESYMBOLS_CALLBACK EnumSymbolsCallback,_In_ PVOID UserContext)
BOOL WINAPI dbghelp.SymEnumTypesByName(_In_ HANDLE hProcess,_In_ ULONG64 BaseOfDll,_In_opt_ PCSTR mask,_In_ PSYM_ENUMERATESYMBOLS_CALLBACK EnumSymbolsCallback,_In_ PVOID UserContext)
BOOL WINAPI dbghelp.SymRefreshModuleList(_In_ HANDLE hProcess)
u_short WSAAPI ws2_32.htons(_In_ u_short hostshort)
public boolean None.CheckSignature(AsymmetricAlgorithm key None)
PVOID WINAPI kernel32.AddVectoredContinueHandler(_In_ ULONG FirstHandler,_In_ PVECTORED_EXCEPTION_HANDLER VectoredHandler)
PTCHAR WINAPI dbghelp.SymSetHomeDirectory(_In_ HANDLE hProcess,_In_opt_ PCTSTR dir)
PTCHAR WINAPI dbghelp.SymSetHomeDirectoryW(_In_ HANDLE hProcess,_In_opt_ PCTSTR dir)
PTCHAR WINAPI dbghelp.SymSetHomeDirectory(_In_ HANDLE hProcess,_In_opt_ PCTSTR dir)
BOOL CALLBACK None.SymFindFileInPathProc(_In_ PCTSTR fileName,_In_ PVOID context)
PCTSTR WINAPI dbghelp.SymSrvStoreFile(_In_ HANDLE hProcess,_In_opt_ PCTSTR SrvPath,_In_ PCTSTR File,_In_ DWORD Flags)
PCTSTR WINAPI dbghelp.SymSrvStoreFileW(_In_ HANDLE hProcess,_In_opt_ PCTSTR SrvPath,_In_ PCTSTR File,_In_ DWORD Flags)
PCTSTR WINAPI dbghelp.SymSrvStoreFile(_In_ HANDLE hProcess,_In_opt_ PCTSTR SrvPath,_In_ PCTSTR File,_In_ DWORD Flags)
BOOL WINAPI dbghelp.SymGetSymbolFile(_In_opt_ HANDLE hProcess,_In_opt_ PCTSTR SymPath,_In_ PCTSTR ImageFile,_In_ DWORD Type,_Out_ PTSTR SymbolFile,_In_ size_t cSymbolFile,_Out_ PTSTR DbgFile,_In_ size_t cDbgFile)
BOOL WINAPI dbghelp.SymGetSymbolFileW(_In_opt_ HANDLE hProcess,_In_opt_ PCTSTR SymPath,_In_ PCTSTR ImageFile,_In_ DWORD Type,_Out_ PTSTR SymbolFile,_In_ size_t cSymbolFile,_Out_ PTSTR DbgFile,_In_ size_t cDbgFile)
BOOL WINAPI dbghelp.SymGetSymbolFile(_In_opt_ HANDLE hProcess,_In_opt_ PCTSTR SymPath,_In_ PCTSTR ImageFile,_In_ DWORD Type,_Out_ PTSTR SymbolFile,_In_ size_t cSymbolFile,_Out_ PTSTR DbgFile,_In_ size_t cDbgFile)
BOOL WINAPI dbghelp.EnumerateLoadedModules64(_In_ HANDLE hProcess,_In_ PENUMLOADED_MODULES_CALLBACK64 EnumLoadedModulesCallback,_In_opt_ PVOID UserContext)
BOOL WINAPI dbghelp.EnumerateLoadedModulesW64(_In_ HANDLE hProcess,_In_ PENUMLOADED_MODULES_CALLBACK64 EnumLoadedModulesCallback,_In_opt_ PVOID UserContext)
BOOL WINAPI dbghelp.EnumerateLoadedModules64(_In_ HANDLE hProcess,_In_ PENUMLOADED_MODULES_CALLBACK64 EnumLoadedModulesCallback,_In_opt_ PVOID UserContext)
INT WSAAPI ws2_32.WSAAddressToString(_In_ LPSOCKADDR lpsaAddress,_In_ DWORD dwAddressLength,_In_opt_ LPWSAPROTOCOL_INFO lpProtocolInfo,_Inout_ LPTSTR lpszAddressString,_Inout_ LPDWORD lpdwAddressStringLength)
INT WSAAPI ws2_32.WSAAddressToStringW(_In_ LPSOCKADDR lpsaAddress,_In_ DWORD dwAddressLength,_In_opt_ LPWSAPROTOCOL_INFO lpProtocolInfo,_Inout_ LPTSTR lpszAddressString,_Inout_ LPDWORD lpdwAddressStringLength)
INT WSAAPI ws2_32.WSAAddressToStringA(_In_ LPSOCKADDR lpsaAddress,_In_ DWORD dwAddressLength,_In_opt_ LPWSAPROTOCOL_INFO lpProtocolInfo,_Inout_ LPTSTR lpszAddressString,_Inout_ LPDWORD lpdwAddressStringLength)
BOOL CALLBACK None.EnumDirTreeProc(_In_ PCTSTR FilePath,_In_opt_ PVOID CallerData)
BOOL WINAPI dbghelp.SymFindFileInPath(_In_ HANDLE hProcess,_In_opt_ PCTSTR SearchPath,_In_ PCTSTR FileName,_In_opt_ PVOID id,_In_ DWORD two,_In_ DWORD three,_In_ DWORD flags,_Out_ PTSTR FilePath,_In_opt_ PFINDFILEINPATHCALLBACK callback,_In_opt_ PVOID context)
BOOL WINAPI dbghelp.SymFindFileInPathW(_In_ HANDLE hProcess,_In_opt_ PCTSTR SearchPath,_In_ PCTSTR FileName,_In_opt_ PVOID id,_In_ DWORD two,_In_ DWORD three,_In_ DWORD flags,_Out_ PTSTR FilePath,_In_opt_ PFINDFILEINPATHCALLBACK callback,_In_opt_ PVOID context)
BOOL WINAPI dbghelp.SymFindFileInPath(_In_ HANDLE hProcess,_In_opt_ PCTSTR SearchPath,_In_ PCTSTR FileName,_In_opt_ PVOID id,_In_ DWORD two,_In_ DWORD three,_In_ DWORD flags,_Out_ PTSTR FilePath,_In_opt_ PFINDFILEINPATHCALLBACK callback,_In_opt_ PVOID context)
u_long WSAAPI ws2_32.htonl(_In_ u_long hostlong)
HANDLE WINAPI dbghelp.FindDebugInfoFile(_In_ PCSTR FileName,_In_ PCSTR SymbolPath,_Out_ PSTR DebugFilePath)
HANDLE WINAPI dbghelp.FindDebugInfoFileEx(_In_ PCTSTR FileName,_In_ PCTSTR SymbolPath,_Out_ PTSTR DebugFilePath,_In_opt_ PFIND_DEBUG_FILE_CALLBACK Callback,_In_opt_ PVOID CallerData)
HANDLE WINAPI dbghelp.FindDebugInfoFileExW(_In_ PCTSTR FileName,_In_ PCTSTR SymbolPath,_Out_ PTSTR DebugFilePath,_In_opt_ PFIND_DEBUG_FILE_CALLBACK Callback,_In_opt_ PVOID CallerData)
HANDLE WINAPI dbghelp.FindDebugInfoFileEx(_In_ PCTSTR FileName,_In_ PCTSTR SymbolPath,_Out_ PTSTR DebugFilePath,_In_opt_ PFIND_DEBUG_FILE_CALLBACK Callback,_In_opt_ PVOID CallerData)
BOOL WINAPI dbghelp.SymSrvGetFileIndexString(_In_ HANDLE hProcess,_In_opt_ PCTSTR SrvPath,_In_ PCTSTR File,_Out_ PTSTR Index,_In_ size_t Size,_In_ DWORD Flags)
BOOL WINAPI dbghelp.SymSrvGetFileIndexStringW(_In_ HANDLE hProcess,_In_opt_ PCTSTR SrvPath,_In_ PCTSTR File,_Out_ PTSTR Index,_In_ size_t Size,_In_ DWORD Flags)
BOOL WINAPI dbghelp.SymSrvGetFileIndexString(_In_ HANDLE hProcess,_In_opt_ PCTSTR SrvPath,_In_ PCTSTR File,_Out_ PTSTR Index,_In_ size_t Size,_In_ DWORD Flags)
BOOL CALLBACK None.SymEnumLinesProc(_In_ PSRCCODEINFO LineInfo,_In_ PVOID UserContext)
BOOL WINAPI dbghelp.SymSetParentWindow(_In_ HWND hwnd)
BOOL WINAPI dbghelp.SymEnumerateModules64(_In_ HANDLE hProcess,_In_ PSYM_ENUMMODULES_CALLBACK64 EnumModulesCallback,_In_opt_ PVOID UserContext)
BOOL WINAPI dbghelp.SymEnumerateModulesW64(_In_ HANDLE hProcess,_In_ PSYM_ENUMMODULES_CALLBACK64 EnumModulesCallback,_In_opt_ PVOID UserContext)
BOOL WINAPI dbghelp.SymEnumerateModules64(_In_ HANDLE hProcess,_In_ PSYM_ENUMMODULES_CALLBACK64 EnumModulesCallback,_In_opt_ PVOID UserContext)
BOOL CALLBACK None.SymEnumLinesProc(_In_ PSRCCODEINFO LineInfo,_In_ PVOID UserContext)
HANDLE WINAPI dbghelp.FindExecutableImage(_In_ PCSTR FileName,_In_ PCSTR SymbolPath,_Out_ PSTR ImageFilePath)
BOOL WINAPI dbghelp.SymGetLinePrev64(_In_ HANDLE hProcess,_Inout_ PIMAGEHLP_LINE64 Line)
BOOL WINAPI dbghelp.SymGetLinePrevW64(_In_ HANDLE hProcess,_Inout_ PIMAGEHLP_LINE64 Line)
BOOL WINAPI dbghelp.SymGetLinePrev64(_In_ HANDLE hProcess,_Inout_ PIMAGEHLP_LINE64 Line)
BOOL WINAPI dbghelp.SymGetSymNext64(_In_ HANDLE hProcess,_Inout_ PIMAGEHLP_SYMBOL64 Symbol)
BOOL CALLBACK None.SymEnumLinesProc(_In_ PSRCCODEINFO LineInfo,_In_ PVOID UserContext)
BOOL WINAPI dbghelp.SymRegisterFunctionEntryCallback64(_In_ HANDLE hProcess,_In_ PSYMBOL_FUNCENTRY_CALLBACK64 CallbackFunction,_In_ ULONG64 UserContext)
BOOL WSAAPI ws2_32.WSAGetOverlappedResult(_In_ SOCKET s,_In_ LPWSAOVERLAPPED lpOverlapped,_Out_ LPDWORD lpcbTransfer,_In_ BOOL fWait,_Out_ LPDWORD lpdwFlags)
INT WSPAPI ws2_32.WSAEnumNameSpaceProvidersEx(_Inout_ LPDWORD lpdwBufferLength,_Out_ LPWSANAMESPACE_INFOEX lpnspBuffer)
INT WSPAPI ws2_32.WSAEnumNameSpaceProvidersExW(_Inout_ LPDWORD lpdwBufferLength,_Out_ LPWSANAMESPACE_INFOEX lpnspBuffer)
INT WSPAPI ws2_32.WSAEnumNameSpaceProvidersExA(_Inout_ LPDWORD lpdwBufferLength,_Out_ LPWSANAMESPACE_INFOEX lpnspBuffer)
INT WSAAPI ws2_32.WSAEnumNameSpaceProviders(_Inout_ LPDWORD lpdwBufferLength,_Out_ LPWSANAMESPACE_INFO lpnspBuffer)
INT WSAAPI ws2_32.WSAEnumNameSpaceProvidersW(_Inout_ LPDWORD lpdwBufferLength,_Out_ LPWSANAMESPACE_INFO lpnspBuffer)
INT WSAAPI ws2_32.WSAEnumNameSpaceProvidersA(_Inout_ LPDWORD lpdwBufferLength,_Out_ LPWSANAMESPACE_INFO lpnspBuffer)
BOOL WINAPI dbghelp.SymSetScopeFromAddr(_In_ HANDLE hProcess,_In_ ULONG64 Address)
HANDLE WINAPI dbghelp.FindExecutableImage(_In_ PCSTR FileName,_In_ PCSTR SymbolPath,_Out_ PSTR ImageFilePath)
BOOL CALLBACK None.SymEnumSymbolsProc(_In_ PSYMBOL_INFO pSymInfo,_In_ ULONG SymbolSize,_In_opt_ PVOID UserContext)
BOOL CALLBACK None.PSYM_ENUMERATESYMBOLS_CALLBACKW(_In_ PSYMBOL_INFO pSymInfo,_In_ ULONG SymbolSize,_In_opt_ PVOID UserContext)
BOOL CALLBACK None.PSYM_ENUMERATESYMBOLS_CALLBACK(_In_ PSYMBOL_INFO pSymInfo,_In_ ULONG SymbolSize,_In_opt_ PVOID UserContext)
PVOID WINAPI dbghelp.SymFunctionTableAccess64(_In_ HANDLE hProcess,_In_ DWORD64 AddrBase)
BOOL CALLBACK None.SymEnumSymbolsProc(_In_ PSYMBOL_INFO pSymInfo,_In_ ULONG SymbolSize,_In_opt_ PVOID UserContext)
BOOL CALLBACK None.PSYM_ENUMERATESYMBOLS_CALLBACKW(_In_ PSYMBOL_INFO pSymInfo,_In_ ULONG SymbolSize,_In_opt_ PVOID UserContext)
BOOL CALLBACK None.PSYM_ENUMERATESYMBOLS_CALLBACK(_In_ PSYMBOL_INFO pSymInfo,_In_ ULONG SymbolSize,_In_opt_ PVOID UserContext)
BOOL PASCAL None.TransmitPackets(SOCKET hSocket None,LPTRANSMIT_PACKETS_ELEMENT lpPacketArray None,DWORD nElementCount None,DWORD nSendSize None,LPOVERLAPPED lpOverlapped None,DWORD dwFlags None)
BOOL WINAPI dbghelp.SymGetLinePrev64(_In_ HANDLE hProcess,_Inout_ PIMAGEHLP_LINE64 Line)
BOOL WINAPI dbghelp.SymGetLinePrevW64(_In_ HANDLE hProcess,_Inout_ PIMAGEHLP_LINE64 Line)
BOOL WINAPI dbghelp.SymGetLinePrev64(_In_ HANDLE hProcess,_Inout_ PIMAGEHLP_LINE64 Line)
BOOL WINAPI dbghelp.SymSetSearchPath(_In_ HANDLE hProcess,_In_opt_ PCTSTR SearchPath)
BOOL WINAPI dbghelp.SymSetSearchPathW(_In_ HANDLE hProcess,_In_opt_ PCTSTR SearchPath)
BOOL WINAPI dbghelp.SymSetSearchPath(_In_ HANDLE hProcess,_In_opt_ PCTSTR SearchPath)
BOOL WINAPI dbghelp.SymSrvIsStore(_In_opt_ HANDLE hProcess,_In_ PCTSTR path)
BOOL WINAPI dbghelp.SymSrvIsStoreW(_In_opt_ HANDLE hProcess,_In_ PCTSTR path)
BOOL WINAPI dbghelp.SymSrvIsStore(_In_opt_ HANDLE hProcess,_In_ PCTSTR path)
BOOL PASCAL mswsock.TransmitFile(SOCKET hSocket None,HANDLE hFile None,DWORD nNumberOfBytesToWrite None,DWORD nNumberOfBytesPerSend None,LPOVERLAPPED lpOverlapped None,LPTRANSMIT_FILE_BUFFERS lpTransmitBuffers None,DWORD dwFlags None)
INT WSAAPI ws2_32.WSAStringToAddress(_In_ LPTSTR AddressString,_In_ INT AddressFamily,_In_opt_ LPWSAPROTOCOL_INFO lpProtocolInfo,_Out_ LPSOCKADDR lpAddress,_Inout_ LPINT lpAddressLength)
INT WSAAPI ws2_32.WSAStringToAddressW(_In_ LPTSTR AddressString,_In_ INT AddressFamily,_In_opt_ LPWSAPROTOCOL_INFO lpProtocolInfo,_Out_ LPSOCKADDR lpAddress,_Inout_ LPINT lpAddressLength)
INT WSAAPI ws2_32.WSAStringToAddressA(_In_ LPTSTR AddressString,_In_ INT AddressFamily,_In_opt_ LPWSAPROTOCOL_INFO lpProtocolInfo,_Out_ LPSOCKADDR lpAddress,_Inout_ LPINT lpAddressLength)
BOOL WSAAPI ws2_32.WSAGetOverlappedResult(_In_ SOCKET s,_In_ LPWSAOVERLAPPED lpOverlapped,_Out_ LPDWORD lpcbTransfer,_In_ BOOL fWait,_Out_ LPDWORD lpdwFlags)
u_short WSAAPI ws2_32.ntohs(_In_ u_short netshort)
PCTSTR WSAAPI ws2_32.InetNtop(_In_ INT Family,_In_ PVOID pAddr,_Out_ PTSTR pStringBuf,_In_ size_t StringBufSize)
PCTSTR WSAAPI ws2_32.InetNtopW(_In_ INT Family,_In_ PVOID pAddr,_Out_ PTSTR pStringBuf,_In_ size_t StringBufSize)
PCTSTR WSAAPI ws2_32.InetNtopA or inet_ntop(_In_ INT Family,_In_ PVOID pAddr,_Out_ PTSTR pStringBuf,_In_ size_t StringBufSize)
BOOL WINAPI dbghelp.SymGetTypeInfo(_In_ HANDLE hProcess,_In_ DWORD64 ModBase,_In_ ULONG TypeId,_In_ IMAGEHLP_SYMBOL_TYPE_INFO GetType,_Out_ PVOID pInfo)
BOOL CALLBACK None.EnumDirTreeProc(_In_ PCTSTR FilePath,_In_opt_ PVOID CallerData)
u_long WSAAPI ws2_32.ntohl(_In_ u_long netlong)
HANDLE WINAPI dbghelp.FindDebugInfoFileEx(_In_ PCTSTR FileName,_In_ PCTSTR SymbolPath,_Out_ PTSTR DebugFilePath,_In_opt_ PFIND_DEBUG_FILE_CALLBACK Callback,_In_opt_ PVOID CallerData)
HANDLE WINAPI dbghelp.FindDebugInfoFileExW(_In_ PCTSTR FileName,_In_ PCTSTR SymbolPath,_Out_ PTSTR DebugFilePath,_In_opt_ PFIND_DEBUG_FILE_CALLBACK Callback,_In_opt_ PVOID CallerData)
HANDLE WINAPI dbghelp.FindDebugInfoFileEx(_In_ PCTSTR FileName,_In_ PCTSTR SymbolPath,_Out_ PTSTR DebugFilePath,_In_opt_ PFIND_DEBUG_FILE_CALLBACK Callback,_In_opt_ PVOID CallerData)
ULONG WINAPI iphlpapi.SetPerTcp6ConnectionEStats(PMIB_TCP6ROW Row None,TCP_ESTATS_TYPE EstatsType None,PUCHAR Rw None,ULONG RwVersion None,ULONG RwSize None,ULONG Offset None)
INT WSPAPI ws2_32.WSCEnumNameSpaceProvidersEx32(_Inout_ LPDWORD lpdwBufferLength,_Out_ LPWSANAMESPACE_INFOEXW lpnspBuffer)
ULONG WINAPI iphlpapi.SetPerTcpConnectionEStats(PMIB_TCPROW Row None,TCP_ESTATS_TYPE EstatsType None,PUCHAR Rw None,ULONG RwVersion None,ULONG RwSize None,ULONG Offset None)
u_long WSAAPI ws2_32.htonl(_In_ u_long hostlong)
ULONG WINAPI iphlpapi.GetTcp6Table(_Out_ PMIB_TCP6TABLE TcpTable,_Inout_ PULONG SizePointer,_In_ BOOL Order)
LONG NTAPI ntdll.RtlIpv6StringToAddressEx(_In_ PCTSTR AddressString,_Out_ IN6_ADDR *Address,_Out_ PULONG ScopeId,_Out_ PUSHORT Port)
LONG NTAPI ntdll.RtlIpv6StringToAddressExW(_In_ PCTSTR AddressString,_Out_ IN6_ADDR *Address,_Out_ PULONG ScopeId,_Out_ PUSHORT Port)
LONG NTAPI ntdll.RtlIpv6StringToAddressEx(_In_ PCTSTR AddressString,_Out_ IN6_ADDR *Address,_Out_ PULONG ScopeId,_Out_ PUSHORT Port)
ULONG WINAPI iphlpapi.CreatePersistentTcpPortReservation(_In_ USHORT StartPort,_In_ USHORT NumberOfPorts,_Out_ PULONG64 Token)
INT WSPAPI ws2_32.WSCEnumNameSpaceProviders32(_Inout_ LPDWORD lpdwBufferLength,_Out_ LPWSANAMESPACE_INFOW lpnspBuffer)
INT WSAAPI ws2_32.WSAAddressToString(_In_ LPSOCKADDR lpsaAddress,_In_ DWORD dwAddressLength,_In_opt_ LPWSAPROTOCOL_INFO lpProtocolInfo,_Inout_ LPTSTR lpszAddressString,_Inout_ LPDWORD lpdwAddressStringLength)
INT WSAAPI ws2_32.WSAAddressToStringW(_In_ LPSOCKADDR lpsaAddress,_In_ DWORD dwAddressLength,_In_opt_ LPWSAPROTOCOL_INFO lpProtocolInfo,_Inout_ LPTSTR lpszAddressString,_Inout_ LPDWORD lpdwAddressStringLength)
INT WSAAPI ws2_32.WSAAddressToStringA(_In_ LPSOCKADDR lpsaAddress,_In_ DWORD dwAddressLength,_In_opt_ LPWSAPROTOCOL_INFO lpProtocolInfo,_Inout_ LPTSTR lpszAddressString,_Inout_ LPDWORD lpdwAddressStringLength)
BOOL WINAPI iphlpapi.CancelIPChangeNotify(_In_ LPOVERLAPPED notifyOverlapped)
NETIO_STATUS WINAPI iphlpapi.ConvertInterfaceIndexToLuid(_In_ NET_IFINDEX InterfaceIndex,_Out_ PNET_LUID InterfaceLuid)
u_short WSAAPI ws2_32.ntohs(_In_ u_short netshort)
DWORD WINAPI iphlpapi.AllocateAndGetTcpExTableFromStack(_Out_ PVOID *ppTcpTable,_In_ BOOL bOrder,_In_ HANDLE hHeap,_In_ DWORD dwFlags,_In_ DWORD dwFamily)
LONG NTAPI ntdll.RtlIpv6StringToAddressEx(_In_ PCTSTR AddressString,_Out_ IN6_ADDR *Address,_Out_ PULONG ScopeId,_Out_ PUSHORT Port)
LONG NTAPI ntdll.RtlIpv6StringToAddressExW(_In_ PCTSTR AddressString,_Out_ IN6_ADDR *Address,_Out_ PULONG ScopeId,_Out_ PUSHORT Port)
LONG NTAPI ntdll.RtlIpv6StringToAddressEx(_In_ PCTSTR AddressString,_Out_ IN6_ADDR *Address,_Out_ PULONG ScopeId,_Out_ PUSHORT Port)
INT WSPAPI ws2_32.WSAProviderCompleteAsyncCall(HANDLE hAsyncCall None,INT iRetCode None)
DWORD WINAPI iphlpapi.SetIpStatistics(_In_ PMIB_IPSTATS pIpStats)
DWORD WINAPI iphlpapi.AllocateAndGetUdpExTableFromStack(_Out_ PVOID *ppUDPTable,_In_ BOOL bOrder,_In_ HANDLE hHeap,_In_ DWORD dwFlags,_In_ DWORD dwFamily)
LONG NTAPI ntdll.RtlIpv4StringToAddress(_In_ PCTSTR S,_In_ BOOLEAN Strict,_Out_ LPCTSTR *Terminator,_Out_ IN_ADDR *Addr)
LONG NTAPI ntdll.RtlIpv4StringToAddressW(_In_ PCTSTR S,_In_ BOOLEAN Strict,_Out_ LPCTSTR *Terminator,_Out_ IN_ADDR *Addr)
LONG NTAPI ntdll.RtlIpv4StringToAddressA(_In_ PCTSTR S,_In_ BOOLEAN Strict,_Out_ LPCTSTR *Terminator,_Out_ IN_ADDR *Addr)
DWORD WINAPI iphlpapi.NotifySecurityHealthChange(PHANDLE pHandle None,LPOVERLAPPED pOverLapped None,PULONG SecurityHealthFlags None)
INT WSPAPI None.WPUCloseThread(_In_ LPWSATHREADID lpThreadId,_Out_ LPINT lpErrno)
ULONG WINAPI iphlpapi.CreatePersistentTcpPortReservation(_In_ USHORT StartPort,_In_ USHORT NumberOfPorts,_Out_ PULONG64 Token)
DWORD WINAPI iphlpapi.UnenableRouter(OVERLAPPED *pOverlapped None,_Out_opt_ LPDWORD lpdwEnableCount)
ULONG WINAPI iphlpapi.LookupPersistentUdpPortReservation(_In_ USHORT StartPort,_In_ USHORT NumberOfPorts,_Out_ PULONG64 Token)
INT WSAAPI ws2_32.WSAStringToAddress(_In_ LPTSTR AddressString,_In_ INT AddressFamily,_In_opt_ LPWSAPROTOCOL_INFO lpProtocolInfo,_Out_ LPSOCKADDR lpAddress,_Inout_ LPINT lpAddressLength)
INT WSAAPI ws2_32.WSAStringToAddressW(_In_ LPTSTR AddressString,_In_ INT AddressFamily,_In_opt_ LPWSAPROTOCOL_INFO lpProtocolInfo,_Out_ LPSOCKADDR lpAddress,_Inout_ LPINT lpAddressLength)
INT WSAAPI ws2_32.WSAStringToAddressA(_In_ LPTSTR AddressString,_In_ INT AddressFamily,_In_opt_ LPWSAPROTOCOL_INFO lpProtocolInfo,_Out_ LPSOCKADDR lpAddress,_Inout_ LPINT lpAddressLength)
NETIO_STATUS WINAPI iphlpapi.ConvertLengthToIpv4Mask(_In_ ULONG MaskLength,_Out_ PULONG Mask)
VOID NETIOAPI_API_ iphlpapi.FreeMibTable(_In_ PVOID Memory)
int WSAAPI None.NSPLookupServiceBegin(__in LPGUID lpProviderId,__in LPWSAQUERYSETW lpqsRestrictions,__in LPWSASERVICECLASSINFOW lpServiceClassInfo,__in DWORD dwControlFlags,__out LPHANDLE lphLookup)
LONG NTAPI ntdll.RtlIpv6StringToAddressEx(_In_ PCTSTR AddressString,_Out_ IN6_ADDR *Address,_Out_ PULONG ScopeId,_Out_ PUSHORT Port)
LONG NTAPI ntdll.RtlIpv6StringToAddressExW(_In_ PCTSTR AddressString,_Out_ IN6_ADDR *Address,_Out_ PULONG ScopeId,_Out_ PUSHORT Port)
LONG NTAPI ntdll.RtlIpv6StringToAddressEx(_In_ PCTSTR AddressString,_Out_ IN6_ADDR *Address,_Out_ PULONG ScopeId,_Out_ PUSHORT Port)
VOID NETIOAPI iphlpapi.InitializeUnicastIpAddressEntry(_Out_ PMIB_UNICASTIPADDRESS_ROW Row)
DWORD WINAPI iphlpapi.NotifySecurityHealthChange(PHANDLE pHandle None,LPOVERLAPPED pOverLapped None,PULONG SecurityHealthFlags None)
DWORD WINAPI iphlpapi.IcmpSendEcho2(_In_ HANDLE IcmpHandle,_In_opt_ HANDLE Event,_In_opt_ PIO_APC_ROUTINE ApcRoutine,_In_opt_ PVOID ApcContext,_In_ IPAddr DestinationAddress,_In_ LPVOID RequestData,_In_ WORD RequestSize,_In_opt_ PIP_OPTION_INFORMATION RequestOptions,_Out_ LPVOID ReplyBuffer,_In_ DWORD ReplySize,_In_ DWORD Timeout)
DWORD WINAPI iphlpapi.IcmpSendEcho2Ex(_In_ HANDLE IcmpHandle,_In_opt_ HANDLE Event,_In_opt_ PIO_APC_ROUTINE ApcRoutine,_In_opt_ PVOID ApcContext,_In_ IPAddr SourceAddress,_In_ IPAddr DestinationAddress,_In_ LPVOID RequestData,_In_ WORD RequestSize,_In_opt_ PIP_OPTION_INFORMATION RequestOptions,_Out_ LPVOID ReplyBuffer,_In_ DWORD ReplySize,_In_ DWORD Timeout)
LONG NTAPI ntdll.RtlIpv4StringToAddressEx(_In_ PCTSTR AddressString,_In_ BOOLEAN Strict,_Out_ IN_ADDR *Address,_Out_ PUSHORT Port)
LONG NTAPI ntdll.RtlIpv4StringToAddressExW(_In_ PCTSTR AddressString,_In_ BOOLEAN Strict,_Out_ IN_ADDR *Address,_Out_ PUSHORT Port)
LONG NTAPI ntdll.RtlIpv4StringToAddressEx(_In_ PCTSTR AddressString,_In_ BOOLEAN Strict,_Out_ IN_ADDR *Address,_Out_ PUSHORT Port)
DWORD WINAPI iphlpapi.EnableRouter(HANDLE *pHandle None,OVERLAPPED *pOverlapped None)
NET_IFINDEX WINAPI iphlpapi.if_nametoindex(_In_ PCSTR InterfaceName)
ULONG WINAPI iphlpapi.CreatePersistentUdpPortReservation(_In_ USHORT StartPort,_In_ USHORT NumberOfPorts,_Out_ PULONG64 Token)
ULONG WINAPI iphlpapi.GetAdaptersAddresses(_In_ ULONG Family,_In_ ULONG Flags,_In_ PVOID Reserved,_Inout_ PIP_ADAPTER_ADDRESSES AdapterAddresses,_Inout_ PULONG SizePointer)
DWORD WINAPI iphlpapi.AllocateAndGetUdpExTableFromStack(_Out_ PVOID *ppUDPTable,_In_ BOOL bOrder,_In_ HANDLE hHeap,_In_ DWORD dwFlags,_In_ DWORD dwFamily)
INT WSAAPI ws2_32.WSAStringToAddress(_In_ LPTSTR AddressString,_In_ INT AddressFamily,_In_opt_ LPWSAPROTOCOL_INFO lpProtocolInfo,_Out_ LPSOCKADDR lpAddress,_Inout_ LPINT lpAddressLength)
INT WSAAPI ws2_32.WSAStringToAddressW(_In_ LPTSTR AddressString,_In_ INT AddressFamily,_In_opt_ LPWSAPROTOCOL_INFO lpProtocolInfo,_Out_ LPSOCKADDR lpAddress,_Inout_ LPINT lpAddressLength)
INT WSAAPI ws2_32.WSAStringToAddressA(_In_ LPTSTR AddressString,_In_ INT AddressFamily,_In_opt_ LPWSAPROTOCOL_INFO lpProtocolInfo,_Out_ LPSOCKADDR lpAddress,_Inout_ LPINT lpAddressLength)
ULONG WINAPI iphlpapi.GetUdp6Table(_Out_ PMIB_UDP6TABLE Udp6Table,_Inout_ PULONG SizePointer,_In_ BOOL Order)
ULONG WINAPI iphlpapi.GetPerTcp6ConnectionEStats(PMIB_TCP6ROW Row None,TCP_ESTATS_TYPE EstatsType None,_Out_ PUCHAR Rw,ULONG RwVersion None,ULONG RwSize None,_Out_ PUCHAR Ros,ULONG RosVersion None,ULONG RosSize None,_Out_ PUCHAR Rod,ULONG RodVersion None,ULONG RodSize None)
DWORD WINAPI iphlpapi.IcmpSendEcho2(_In_ HANDLE IcmpHandle,_In_opt_ HANDLE Event,_In_opt_ PIO_APC_ROUTINE ApcRoutine,_In_opt_ PVOID ApcContext,_In_ IPAddr DestinationAddress,_In_ LPVOID RequestData,_In_ WORD RequestSize,_In_opt_ PIP_OPTION_INFORMATION RequestOptions,_Out_ LPVOID ReplyBuffer,_In_ DWORD ReplySize,_In_ DWORD Timeout)
LONG NTAPI ntdll.RtlEthernetStringToAddress(_In_ PCTSTR S,_Out_ PCTSTR *Terminator,_Out_ DL_EUI48 *Addr)
LONG NTAPI ntdll.RtlEthernetStringToAddressW(_In_ PCTSTR S,_Out_ PCTSTR *Terminator,_Out_ DL_EUI48 *Addr)
LONG NTAPI ntdll.RtlEthernetStringToAddressA(_In_ PCTSTR S,_Out_ PCTSTR *Terminator,_Out_ DL_EUI48 *Addr)
void WSAAPI ws2_32.FreeAddrInfoEx(__in PADDRINFOEX pAddrInfo)
ULONG WINAPI iphlpapi.GetPerTcpConnectionEStats(PMIB_TCPROW Row None,TCP_ESTATS_TYPE EstatsType None,_Out_ PUCHAR Rw,ULONG RwVersion None,ULONG RwSize None,_Out_ PUCHAR Ros,ULONG RosVersion None,ULONG RosSize None,_Out_ PUCHAR Rod,ULONG RodVersion None,ULONG RodSize None)
ULONG WINAPI iphlpapi.DeletePersistentTcpPortReservation(_In_ USHORT StartPort,_In_ USHORT NumberOfPorts)
ULONG WINAPI iphlpapi.GetTcp6Table2(_Out_ PMIB_TCP6TABLE2 TcpTable,_Inout_ PULONG SizePointer,_In_ BOOL Order)
LONG NTAPI ntdll.RtlIpv6StringToAddress(_In_ PCTSTR S,_Out_ PCTSTR *Terminator,_Out_ IN6_ADDR *Addr)
LONG NTAPI ntdll.RtlIpv6StringToAddressW(_In_ PCTSTR S,_Out_ PCTSTR *Terminator,_Out_ IN6_ADDR *Addr)
LONG NTAPI ntdll.RtlIpv6StringToAddressA(_In_ PCTSTR S,_Out_ PCTSTR *Terminator,_Out_ IN6_ADDR *Addr)
VOID NETIOAPI iphlpapi.InitializeUnicastIpAddressEntry(_Out_ PMIB_UNICASTIPADDRESS_ROW Row)
NETIOAPI_API WINAPI iphlpapi.GetIpNetworkConnectionBandwidthEstimates(_In_ NET_IFINDEX InterfaceIndex,_In_ ADDRESS_FAMILY AddressFamily,_Out_ PMIB_IP_NETWORK_CONNECTION_BANDWIDTH_ESTIMATES BandwidthEstimates)
ULONG WINAPI iphlpapi.ResolveNeighbor(_In_ SOCKADDR *NetworkAddress,_Out_ PVOID PhysicalAddress,_Inout_ PULONG PhysicalAddressLength)
ULONG WINAPI iphlpapi.CreatePersistentTcpPortReservation(_In_ USHORT StartPort,_In_ USHORT NumberOfPorts,_Out_ PULONG64 Token)
ULONG WINAPI iphlpapi.DeletePersistentUdpPortReservation(_In_ USHORT StartPort,_In_ USHORT NumberOfPorts)
DWORD WINAPI iphlpapi.SetIpStatisticsEx(_In_ PMIB_IPSTATS pIpStats,ULONG Family None)
NETIO_STATUS WINAPI iphlpapi.ConvertIpv4MaskToLength(_In_ ULONG Mask,_Out_ PUINT8 MaskLength)
PCHAR WINAPI iphlpapi.if_indextoname(_In_ NET_IFINDEX InterfaceIndex,_Out_ PCHAR InterfaceName)
BOOL WINAPI iphlpapi.CancelSecurityHealthChangeNotify(LPOVERLAPPED notifyOverlapped None)
ULONG WINAPI iphlpapi.GetTcp6Table2(_Out_ PMIB_TCP6TABLE2 TcpTable,_Inout_ PULONG SizePointer,_In_ BOOL Order)
DWORD WINAPI iphlpapi.AllocateAndGetUdpExTableFromStack(_Out_ PVOID *ppUDPTable,_In_ BOOL bOrder,_In_ HANDLE hHeap,_In_ DWORD dwFlags,_In_ DWORD dwFamily)
ULONG WINAPI iphlpapi.CreatePersistentUdpPortReservation(_In_ USHORT StartPort,_In_ USHORT NumberOfPorts,_Out_ PULONG64 Token)
ULONG WINAPI iphlpapi.LookupPersistentUdpPortReservation(_In_ USHORT StartPort,_In_ USHORT NumberOfPorts,_Out_ PULONG64 Token)
DWORD WINAPI iphlpapi.SetIpStatistics(_In_ PMIB_IPSTATS pIpStats)
NETIO_STATUS WINAPI iphlpapi.ConvertInterfaceIndexToLuid(_In_ NET_IFINDEX InterfaceIndex,_Out_ PNET_LUID InterfaceLuid)
DWORD WINAPI iphlpapi.GetTcpTable(_Out_ PMIB_TCPTABLE pTcpTable,_Inout_ PDWORD pdwSize,_In_ BOOL bOrder)
NETIO_STATUS WINAPI iphlpapi.ConvertLengthToIpv4Mask(_In_ ULONG MaskLength,_Out_ PULONG Mask)
ULONG WINAPI iphlpapi.GetTcpTable2(_Out_ PMIB_TCPTABLE2 TcpTable,_Inout_ PULONG SizePointer,_In_ BOOL Order)
ULONG WINAPI iphlpapi.LookupPersistentTcpPortReservation(_In_ USHORT StartPort,_In_ USHORT NumberOfPorts,_Out_ PULONG64 Token)
LONG NTAPI ntdll.RtlIpv6StringToAddress(_In_ PCTSTR S,_Out_ PCTSTR *Terminator,_Out_ IN6_ADDR *Addr)
LONG NTAPI ntdll.RtlIpv6StringToAddressW(_In_ PCTSTR S,_Out_ PCTSTR *Terminator,_Out_ IN6_ADDR *Addr)
LONG NTAPI ntdll.RtlIpv6StringToAddressA(_In_ PCTSTR S,_Out_ PCTSTR *Terminator,_Out_ IN6_ADDR *Addr)
DWORD WINAPI iphlpapi.SetIpStatistics(_In_ PMIB_IPSTATS pIpStats)
ULONG WINAPI iphlpapi.GetAdaptersAddresses(_In_ ULONG Family,_In_ ULONG Flags,_In_ PVOID Reserved,_Inout_ PIP_ADAPTER_ADDRESSES AdapterAddresses,_Inout_ PULONG SizePointer)
INT WSAAPI ws2_32.WSAStringToAddress(_In_ LPTSTR AddressString,_In_ INT AddressFamily,_In_opt_ LPWSAPROTOCOL_INFO lpProtocolInfo,_Out_ LPSOCKADDR lpAddress,_Inout_ LPINT lpAddressLength)
INT WSAAPI ws2_32.WSAStringToAddressW(_In_ LPTSTR AddressString,_In_ INT AddressFamily,_In_opt_ LPWSAPROTOCOL_INFO lpProtocolInfo,_Out_ LPSOCKADDR lpAddress,_Inout_ LPINT lpAddressLength)
INT WSAAPI ws2_32.WSAStringToAddressA(_In_ LPTSTR AddressString,_In_ INT AddressFamily,_In_opt_ LPWSAPROTOCOL_INFO lpProtocolInfo,_Out_ LPSOCKADDR lpAddress,_Inout_ LPINT lpAddressLength)
DWORD WINAPI iphlpapi.UnenableRouter(OVERLAPPED *pOverlapped None,_Out_opt_ LPDWORD lpdwEnableCount)
NETIO_STATUS WINAPI iphlpapi.ConvertLengthToIpv4Mask(_In_ ULONG MaskLength,_Out_ PULONG Mask)
void CALLBACK None.CompletionRoutine(IN DWORD dwError,IN DWORD cbTransferred,IN LPWSAOVERLAPPED lpOverlapped,IN DWORD dwFlags)
int WSAAPI None.NSPRemoveServiceClass(__in LPGUID lpProviderId,__in LPGUID lpServiceClassId)
VOID NETIOAPI_API_ iphlpapi.FreeMibTable(_In_ PVOID Memory)
LONG NTAPI ntdll.RtlIpv4StringToAddress(_In_ PCTSTR S,_In_ BOOLEAN Strict,_Out_ LPCTSTR *Terminator,_Out_ IN_ADDR *Addr)
LONG NTAPI ntdll.RtlIpv4StringToAddressW(_In_ PCTSTR S,_In_ BOOLEAN Strict,_Out_ LPCTSTR *Terminator,_Out_ IN_ADDR *Addr)
LONG NTAPI ntdll.RtlIpv4StringToAddressA(_In_ PCTSTR S,_In_ BOOLEAN Strict,_Out_ LPCTSTR *Terminator,_Out_ IN_ADDR *Addr)
DWORD WINAPI iphlpapi.NotifySecurityHealthChange(PHANDLE pHandle None,LPOVERLAPPED pOverLapped None,PULONG SecurityHealthFlags None)
LONG NTAPI ntdll.RtlIpv4StringToAddressEx(_In_ PCTSTR AddressString,_In_ BOOLEAN Strict,_Out_ IN_ADDR *Address,_Out_ PUSHORT Port)
LONG NTAPI ntdll.RtlIpv4StringToAddressExW(_In_ PCTSTR AddressString,_In_ BOOLEAN Strict,_Out_ IN_ADDR *Address,_Out_ PUSHORT Port)
LONG NTAPI ntdll.RtlIpv4StringToAddressEx(_In_ PCTSTR AddressString,_In_ BOOLEAN Strict,_Out_ IN_ADDR *Address,_Out_ PUSHORT Port)
DWORD WINAPI iphlpapi.SetIpStatisticsEx(_In_ PMIB_IPSTATS pIpStats,ULONG Family None)
DWORD WINAPI iphlpapi.GetTcpTable(_Out_ PMIB_TCPTABLE pTcpTable,_Inout_ PDWORD pdwSize,_In_ BOOL bOrder)
LONG NTAPI ntdll.RtlIpv6StringToAddress(_In_ PCTSTR S,_Out_ PCTSTR *Terminator,_Out_ IN6_ADDR *Addr)
LONG NTAPI ntdll.RtlIpv6StringToAddressW(_In_ PCTSTR S,_Out_ PCTSTR *Terminator,_Out_ IN6_ADDR *Addr)
LONG NTAPI ntdll.RtlIpv6StringToAddressA(_In_ PCTSTR S,_Out_ PCTSTR *Terminator,_Out_ IN6_ADDR *Addr)
BOOL WINAPI user32.PostMessage(_In_opt_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
BOOL WINAPI user32.PostMessageW(_In_opt_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
BOOL WINAPI user32.PostMessageA(_In_opt_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
ULONG WINAPI iphlpapi.CreatePersistentUdpPortReservation(_In_ USHORT StartPort,_In_ USHORT NumberOfPorts,_Out_ PULONG64 Token)
LONG NTAPI ntdll.RtlIpv6StringToAddress(_In_ PCTSTR S,_Out_ PCTSTR *Terminator,_Out_ IN6_ADDR *Addr)
LONG NTAPI ntdll.RtlIpv6StringToAddressW(_In_ PCTSTR S,_Out_ PCTSTR *Terminator,_Out_ IN6_ADDR *Addr)
LONG NTAPI ntdll.RtlIpv6StringToAddressA(_In_ PCTSTR S,_Out_ PCTSTR *Terminator,_Out_ IN6_ADDR *Addr)
PCHAR WINAPI iphlpapi.if_indextoname(_In_ NET_IFINDEX InterfaceIndex,_Out_ PCHAR InterfaceName)
ULONG WINAPI iphlpapi.DeletePersistentTcpPortReservation(_In_ USHORT StartPort,_In_ USHORT NumberOfPorts)
ULONG WINAPI iphlpapi.GetPerTcp6ConnectionEStats(PMIB_TCP6ROW Row None,TCP_ESTATS_TYPE EstatsType None,_Out_ PUCHAR Rw,ULONG RwVersion None,ULONG RwSize None,_Out_ PUCHAR Ros,ULONG RosVersion None,ULONG RosSize None,_Out_ PUCHAR Rod,ULONG RodVersion None,ULONG RodSize None)
ULONG WINAPI iphlpapi.GetTcp6Table2(_Out_ PMIB_TCP6TABLE2 TcpTable,_Inout_ PULONG SizePointer,_In_ BOOL Order)
ULONG WINAPI iphlpapi.GetTcp6Table2(_Out_ PMIB_TCP6TABLE2 TcpTable,_Inout_ PULONG SizePointer,_In_ BOOL Order)
ULONG WINAPI iphlpapi.GetUdp6Table(_Out_ PMIB_UDP6TABLE Udp6Table,_Inout_ PULONG SizePointer,_In_ BOOL Order)
ULONG WINAPI iphlpapi.ResolveNeighbor(_In_ SOCKADDR *NetworkAddress,_Out_ PVOID PhysicalAddress,_Inout_ PULONG PhysicalAddressLength)
BOOL WINAPI user32.PostMessage(_In_opt_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
BOOL WINAPI user32.PostMessageW(_In_opt_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
BOOL WINAPI user32.PostMessageA(_In_opt_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
DWORD WINAPI iphlpapi.GetTcpTable(_Out_ PMIB_TCPTABLE pTcpTable,_Inout_ PDWORD pdwSize,_In_ BOOL bOrder)
DWORD WINAPI iphlpapi.GetTcpTable(_Out_ PMIB_TCPTABLE pTcpTable,_Inout_ PDWORD pdwSize,_In_ BOOL bOrder)
int WSAAPI None.NSPLookupServiceEnd(__in HANDLE hLookup)
NETIOAPI_API WINAPI iphlpapi.GetIpNetworkConnectionBandwidthEstimates(_In_ NET_IFINDEX InterfaceIndex,_In_ ADDRESS_FAMILY AddressFamily,_Out_ PMIB_IP_NETWORK_CONNECTION_BANDWIDTH_ESTIMATES BandwidthEstimates)
ULONG WINAPI iphlpapi.LookupPersistentTcpPortReservation(_In_ USHORT StartPort,_In_ USHORT NumberOfPorts,_Out_ PULONG64 Token)
DWORD WINAPI iphlpapi.GetTcpTable(_Out_ PMIB_TCPTABLE pTcpTable,_Inout_ PDWORD pdwSize,_In_ BOOL bOrder)
BOOL WINAPI iphlpapi.CancelSecurityHealthChangeNotify(LPOVERLAPPED notifyOverlapped None)
ULONG WINAPI iphlpapi.GetTcp6Table2(_Out_ PMIB_TCP6TABLE2 TcpTable,_Inout_ PULONG SizePointer,_In_ BOOL Order)
PCHAR WINAPI iphlpapi.if_indextoname(_In_ NET_IFINDEX InterfaceIndex,_Out_ PCHAR InterfaceName)
ULONG WINAPI iphlpapi.GetTcpTable2(_Out_ PMIB_TCPTABLE2 TcpTable,_Inout_ PULONG SizePointer,_In_ BOOL Order)
DWORD CALLBACK None.MgmDisableIgmpCallback(_In_ DWORD dwIfIndex,_In_ DWORD dwIfNextHopAddr)
LONG NTAPI ntdll.RtlIpv6StringToAddress(_In_ PCTSTR S,_Out_ PCTSTR *Terminator,_Out_ IN6_ADDR *Addr)
LONG NTAPI ntdll.RtlIpv6StringToAddressW(_In_ PCTSTR S,_Out_ PCTSTR *Terminator,_Out_ IN6_ADDR *Addr)
LONG NTAPI ntdll.RtlIpv6StringToAddressA(_In_ PCTSTR S,_Out_ PCTSTR *Terminator,_Out_ IN6_ADDR *Addr)
DWORD CALLBACK None.MgmCreationAlertCallback(_In_ DWORD dwSourceAddr,_In_ DWORD dwSourceMask,_In_ DWORD dwGroupAddr,_In_ DWORD dwGroupMask,_In_ DWORD dwInIfIndex,_In_ DWORD dwInIfNextHopAddr,_In_ DWORD dwIfCount,_Inout_ PMGM_IF_ENTRY pmieOutIfList)
DWORD WINAPI iphlpapi.GetTcpTable(_Out_ PMIB_TCPTABLE pTcpTable,_Inout_ PDWORD pdwSize,_In_ BOOL bOrder)
ULONG WINAPI iphlpapi.GetTcpTable2(_Out_ PMIB_TCPTABLE2 TcpTable,_Inout_ PULONG SizePointer,_In_ BOOL Order)
DWORD CALLBACK None.PMGM_ENABLE_IGMP_CALLBACK(_In_ DWORD dwIfIndex,_In_ DWORD dwIfNextHopAddr)
DWORD CALLBACK None.MgmLocalJoinCallback(_In_ DWORD dwSourceAddr,_In_ DWORD dwSourceMask,_In_ DWORD dwGroupAddr,_In_ DWORD dwGroupMask,_In_ DWORD dwIfIndex,_In_ DWORD dwIfNextHopAddr)
DWORD CALLBACK None.MgmDisableIgmpCallback(_In_ DWORD dwIfIndex,_In_ DWORD dwIfNextHopAddr)
DWORD CALLBACK None.MgmCreationAlertCallback(_In_ DWORD dwSourceAddr,_In_ DWORD dwSourceMask,_In_ DWORD dwGroupAddr,_In_ DWORD dwGroupMask,_In_ DWORD dwInIfIndex,_In_ DWORD dwInIfNextHopAddr,_In_ DWORD dwIfCount,_Inout_ PMGM_IF_ENTRY pmieOutIfList)
DWORD CALLBACK None.MgmDisableIgmpCallback(_In_ DWORD dwIfIndex,_In_ DWORD dwIfNextHopAddr)
DWORD CALLBACK None.MgmDisableIgmpCallback(_In_ DWORD dwIfIndex,_In_ DWORD dwIfNextHopAddr)
DWORD CALLBACK None.MgmRpfCallback(_In_ DWORD dwSourceAddr,_In_ DWORD dwSourceMask,_In_ DWORD dwGroupAddr,_In_ DWORD dwGroupMask,_Inout_ PDWORD pdwInIfIndex,_Inout_ PDWORD pdwInIfNextHopAddr,_Inout_ PDWORD pdwUpStreamNbr,_In_ DWORD dwHdrSize,_In_ PBYTE pbPacketHdr,_Inout_ PBYTE pbRoute)
DWORD WINAPI iphlpapi.GetTcpTable(_Out_ PMIB_TCPTABLE pTcpTable,_Inout_ PDWORD pdwSize,_In_ BOOL bOrder)
DWORD CALLBACK None.MgmDisableIgmpCallback(_In_ DWORD dwIfIndex,_In_ DWORD dwIfNextHopAddr)
DWORD CALLBACK None.MgmLocalJoinCallback(_In_ DWORD dwSourceAddr,_In_ DWORD dwSourceMask,_In_ DWORD dwGroupAddr,_In_ DWORD dwGroupMask,_In_ DWORD dwIfIndex,_In_ DWORD dwIfNextHopAddr)
DWORD CALLBACK None.MgmLocalJoinCallback(_In_ DWORD dwSourceAddr,_In_ DWORD dwSourceMask,_In_ DWORD dwGroupAddr,_In_ DWORD dwGroupMask,_In_ DWORD dwIfIndex,_In_ DWORD dwIfNextHopAddr)
DWORD CALLBACK None.MgmDisableIgmpCallback(_In_ DWORD dwIfIndex,_In_ DWORD dwIfNextHopAddr)
DWORD CALLBACK None.MgmCreationAlertCallback(_In_ DWORD dwSourceAddr,_In_ DWORD dwSourceMask,_In_ DWORD dwGroupAddr,_In_ DWORD dwGroupMask,_In_ DWORD dwInIfIndex,_In_ DWORD dwInIfNextHopAddr,_In_ DWORD dwIfCount,_Inout_ PMGM_IF_ENTRY pmieOutIfList)
DWORD CALLBACK None.MgmLocalJoinCallback(_In_ DWORD dwSourceAddr,_In_ DWORD dwSourceMask,_In_ DWORD dwGroupAddr,_In_ DWORD dwGroupMask,_In_ DWORD dwIfIndex,_In_ DWORD dwIfNextHopAddr)
DWORD CALLBACK None.MgmLocalJoinCallback(_In_ DWORD dwSourceAddr,_In_ DWORD dwSourceMask,_In_ DWORD dwGroupAddr,_In_ DWORD dwGroupMask,_In_ DWORD dwIfIndex,_In_ DWORD dwIfNextHopAddr)
ULONG WINAPI iphlpapi.ResolveNeighbor(_In_ SOCKADDR *NetworkAddress,_Out_ PVOID PhysicalAddress,_Inout_ PULONG PhysicalAddressLength)
ULONG WINAPI iphlpapi.ResolveNeighbor(_In_ SOCKADDR *NetworkAddress,_Out_ PVOID PhysicalAddress,_Inout_ PULONG PhysicalAddressLength)
DWORD CALLBACK None.MgmPruneAlertCallback(_In_ DWORD dwSourceAddr,_In_ DWORD dwSourceMask,_In_ DWORD dwGroupAddr,_In_ DWORD dwGroupMask,_In_ DWORD dwIfIndex,_In_ DWORD dwIfNextHopAddr,_In_ BOOL bMemberDelete,_Inout_ PDWORD pdwTimeout)
DWORD CALLBACK None.MgmLocalJoinCallback(_In_ DWORD dwSourceAddr,_In_ DWORD dwSourceMask,_In_ DWORD dwGroupAddr,_In_ DWORD dwGroupMask,_In_ DWORD dwIfIndex,_In_ DWORD dwIfNextHopAddr)
DWORD CALLBACK None.PMGM_ENABLE_IGMP_CALLBACK(_In_ DWORD dwIfIndex,_In_ DWORD dwIfNextHopAddr)
DWORD CALLBACK None.MgmJoinAlertCallback(_In_ DWORD dwSourceAddr,_In_ DWORD dwSourceMask,_In_ DWORD dwGroupAddr,_In_ DWORD dwGroupMask,_In_ BOOL bMemberUpdate)
DWORD CALLBACK None.MgmRpfCallback(_In_ DWORD dwSourceAddr,_In_ DWORD dwSourceMask,_In_ DWORD dwGroupAddr,_In_ DWORD dwGroupMask,_Inout_ PDWORD pdwInIfIndex,_Inout_ PDWORD pdwInIfNextHopAddr,_Inout_ PDWORD pdwUpStreamNbr,_In_ DWORD dwHdrSize,_In_ PBYTE pbPacketHdr,_Inout_ PBYTE pbRoute)
DWORD CALLBACK None.PMGM_ENABLE_IGMP_CALLBACK(_In_ DWORD dwIfIndex,_In_ DWORD dwIfNextHopAddr)
DWORD CALLBACK None.MgmPruneAlertCallback(_In_ DWORD dwSourceAddr,_In_ DWORD dwSourceMask,_In_ DWORD dwGroupAddr,_In_ DWORD dwGroupMask,_In_ DWORD dwIfIndex,_In_ DWORD dwIfNextHopAddr,_In_ BOOL bMemberDelete,_Inout_ PDWORD pdwTimeout)
DWORD CALLBACK None.MgmJoinAlertCallback(_In_ DWORD dwSourceAddr,_In_ DWORD dwSourceMask,_In_ DWORD dwGroupAddr,_In_ DWORD dwGroupMask,_In_ BOOL bMemberUpdate)
DWORD CALLBACK None.MgmRpfCallback(_In_ DWORD dwSourceAddr,_In_ DWORD dwSourceMask,_In_ DWORD dwGroupAddr,_In_ DWORD dwGroupMask,_Inout_ PDWORD pdwInIfIndex,_Inout_ PDWORD pdwInIfNextHopAddr,_Inout_ PDWORD pdwUpStreamNbr,_In_ DWORD dwHdrSize,_In_ PBYTE pbPacketHdr,_Inout_ PBYTE pbRoute)
DWORD CALLBACK None.MgmLocalJoinCallback(_In_ DWORD dwSourceAddr,_In_ DWORD dwSourceMask,_In_ DWORD dwGroupAddr,_In_ DWORD dwGroupMask,_In_ DWORD dwIfIndex,_In_ DWORD dwIfNextHopAddr)
DWORD CALLBACK None.MgmRpfCallback(_In_ DWORD dwSourceAddr,_In_ DWORD dwSourceMask,_In_ DWORD dwGroupAddr,_In_ DWORD dwGroupMask,_Inout_ PDWORD pdwInIfIndex,_Inout_ PDWORD pdwInIfNextHopAddr,_Inout_ PDWORD pdwUpStreamNbr,_In_ DWORD dwHdrSize,_In_ PBYTE pbPacketHdr,_Inout_ PBYTE pbRoute)
DWORD CALLBACK None.MgmLocalJoinCallback(_In_ DWORD dwSourceAddr,_In_ DWORD dwSourceMask,_In_ DWORD dwGroupAddr,_In_ DWORD dwGroupMask,_In_ DWORD dwIfIndex,_In_ DWORD dwIfNextHopAddr)
DWORD CALLBACK None.MgmRpfCallback(_In_ DWORD dwSourceAddr,_In_ DWORD dwSourceMask,_In_ DWORD dwGroupAddr,_In_ DWORD dwGroupMask,_Inout_ PDWORD pdwInIfIndex,_Inout_ PDWORD pdwInIfNextHopAddr,_Inout_ PDWORD pdwUpStreamNbr,_In_ DWORD dwHdrSize,_In_ PBYTE pbPacketHdr,_Inout_ PBYTE pbRoute)
DWORD CALLBACK None.MgmLocalJoinCallback(_In_ DWORD dwSourceAddr,_In_ DWORD dwSourceMask,_In_ DWORD dwGroupAddr,_In_ DWORD dwGroupMask,_In_ DWORD dwIfIndex,_In_ DWORD dwIfNextHopAddr)
DWORD CALLBACK None.MgmJoinAlertCallback(_In_ DWORD dwSourceAddr,_In_ DWORD dwSourceMask,_In_ DWORD dwGroupAddr,_In_ DWORD dwGroupMask,_In_ BOOL bMemberUpdate)
DWORD CALLBACK None.MgmJoinAlertCallback(_In_ DWORD dwSourceAddr,_In_ DWORD dwSourceMask,_In_ DWORD dwGroupAddr,_In_ DWORD dwGroupMask,_In_ BOOL bMemberUpdate)
DWORD CALLBACK None.MgmRpfCallback(_In_ DWORD dwSourceAddr,_In_ DWORD dwSourceMask,_In_ DWORD dwGroupAddr,_In_ DWORD dwGroupMask,_Inout_ PDWORD pdwInIfIndex,_Inout_ PDWORD pdwInIfNextHopAddr,_Inout_ PDWORD pdwUpStreamNbr,_In_ DWORD dwHdrSize,_In_ PBYTE pbPacketHdr,_Inout_ PBYTE pbRoute)
DWORD CALLBACK None.MgmJoinAlertCallback(_In_ DWORD dwSourceAddr,_In_ DWORD dwSourceMask,_In_ DWORD dwGroupAddr,_In_ DWORD dwGroupMask,_In_ BOOL bMemberUpdate)
DWORD CALLBACK None.MgmRpfCallback(_In_ DWORD dwSourceAddr,_In_ DWORD dwSourceMask,_In_ DWORD dwGroupAddr,_In_ DWORD dwGroupMask,_Inout_ PDWORD pdwInIfIndex,_Inout_ PDWORD pdwInIfNextHopAddr,_Inout_ PDWORD pdwUpStreamNbr,_In_ DWORD dwHdrSize,_In_ PBYTE pbPacketHdr,_Inout_ PBYTE pbRoute)
DWORD CALLBACK None.MgmLocalLeaveCallback(_In_ DWORD dwSourceAddr,_In_ DWORD dwSourceMask,_In_ DWORD dwGroupAddr,_In_ DWORD dwGroupMask,_In_ DWORD dwIfIndex,_In_ DWORD dwIfNextHopAddr)
ULONG WINAPI wnvapi.WnvRequestNotification(HANDLE WnvHandle None,PWNV_NOTIFICATION_PARAM NotificationParam None,LPOVERLAPPED Overlapped None,PULONG BytesTransferred None)
LONG NTAPI ntdll.RtlIpv6StringToAddress(_In_ PCTSTR S,_Out_ PCTSTR *Terminator,_Out_ IN6_ADDR *Addr)
LONG NTAPI ntdll.RtlIpv6StringToAddressW(_In_ PCTSTR S,_Out_ PCTSTR *Terminator,_Out_ IN6_ADDR *Addr)
LONG NTAPI ntdll.RtlIpv6StringToAddressA(_In_ PCTSTR S,_Out_ PCTSTR *Terminator,_Out_ IN6_ADDR *Addr)
DWORD CALLBACK None.MgmRpfCallback(_In_ DWORD dwSourceAddr,_In_ DWORD dwSourceMask,_In_ DWORD dwGroupAddr,_In_ DWORD dwGroupMask,_Inout_ PDWORD pdwInIfIndex,_Inout_ PDWORD pdwInIfNextHopAddr,_Inout_ PDWORD pdwUpStreamNbr,_In_ DWORD dwHdrSize,_In_ PBYTE pbPacketHdr,_Inout_ PBYTE pbRoute)
DWORD CALLBACK None.MgmRpfCallback(_In_ DWORD dwSourceAddr,_In_ DWORD dwSourceMask,_In_ DWORD dwGroupAddr,_In_ DWORD dwGroupMask,_Inout_ PDWORD pdwInIfIndex,_Inout_ PDWORD pdwInIfNextHopAddr,_Inout_ PDWORD pdwUpStreamNbr,_In_ DWORD dwHdrSize,_In_ PBYTE pbPacketHdr,_Inout_ PBYTE pbRoute)
LONG NTAPI ntdll.RtlIpv6StringToAddress(_In_ PCTSTR S,_Out_ PCTSTR *Terminator,_Out_ IN6_ADDR *Addr)
LONG NTAPI ntdll.RtlIpv6StringToAddressW(_In_ PCTSTR S,_Out_ PCTSTR *Terminator,_Out_ IN6_ADDR *Addr)
LONG NTAPI ntdll.RtlIpv6StringToAddressA(_In_ PCTSTR S,_Out_ PCTSTR *Terminator,_Out_ IN6_ADDR *Addr)
ULONG WINAPI wnvapi.WnvRequestNotification(HANDLE WnvHandle None,PWNV_NOTIFICATION_PARAM NotificationParam None,LPOVERLAPPED Overlapped None,PULONG BytesTransferred None)
ULONG WINAPI wnvapi.WnvRequestNotification(HANDLE WnvHandle None,PWNV_NOTIFICATION_PARAM NotificationParam None,LPOVERLAPPED Overlapped None,PULONG BytesTransferred None)
ULONG WINAPI iphlpapi.ResolveNeighbor(_In_ SOCKADDR *NetworkAddress,_Out_ PVOID PhysicalAddress,_Inout_ PULONG PhysicalAddressLength)
BOOL CALLBACK None.MprAdminAcceptReauthenticationEx(_In_ RAS_CONNECTION_EX *pRasConn)
BOOL CALLBACK None.MprAdminAcceptReauthentication(_In_ RAS_CONNECTION_0 *pRasConnection0,_In_ RAS_CONNECTION_1 *pRasConnection1,_In_ RAS_CONNECTION_2 *pRasConnection2,_In_ RAS_CONNECTION_3 *pRasConnection3)
DWORD CALLBACK None.MprAdminGetIpv6AddressForUser(_In_ WCHAR *lpwszUserName,_In_ WCHAR *lpwszPortName,_Inout_ in6_addr *lpdwIpv6Address,_Out_ BOOL *bNotifyRelease)
DWORD APIENTRY mprapi.MprAdminConnectionGetInfoEx(_In_ RAS_SERVER_HANDLE hRasServer,_In_ HANDLE hConnection,_Out_ PRAS_CONNECTION_EX pRasConnection)
BOOL CALLBACK None.MprAdminAcceptReauthentication(_In_ RAS_CONNECTION_0 *pRasConnection0,_In_ RAS_CONNECTION_1 *pRasConnection1,_In_ RAS_CONNECTION_2 *pRasConnection2,_In_ RAS_CONNECTION_3 *pRasConnection3)
BOOL CALLBACK None.MprAdminAcceptNewConnection2(_In_ RAS_CONNECTION_0 *pRasConnection0,_In_ RAS_CONNECTION_1 *pRasConnection1,_In_ RAS_CONNECTION_2 *pRasConnection2)
DWORD APIENTRY None.MprAdminInitializeDll(PMPRAPI_ADMIN_DLL_CALLBACKS pAdminCallbacks None)
BOOL CALLBACK None.MprAdminAcceptReauthentication(_In_ RAS_CONNECTION_0 *pRasConnection0,_In_ RAS_CONNECTION_1 *pRasConnection1,_In_ RAS_CONNECTION_2 *pRasConnection2,_In_ RAS_CONNECTION_3 *pRasConnection3)
BOOL CALLBACK None.MprAdminAcceptReauthenticationEx(_In_ RAS_CONNECTION_EX *pRasConn)
DWORD APIENTRY mprapi.MprAdminConnectionGetInfoEx(_In_ RAS_SERVER_HANDLE hRasServer,_In_ HANDLE hConnection,_Out_ PRAS_CONNECTION_EX pRasConnection)
DWORD APIENTRY mprapi.MprAdminConnectionEnumEx(_In_ RAS_SERVER_HANDLE hRasServer,_In_ PMPRAPI_OBJECT_HEADER pObjectHeader,_In_ DWORD dwPreferedMaxLen,_Out_ LPDWORD lpdwEntriesRead,_Out_ LPDWORD lpdwTotalEntries,_Out_ PRAS_CONNECTION_EX *ppRasConn,_In_ LPDWORD lpdwResumeHandle)
BOOL CALLBACK None.MprAdminAcceptNewConnection(_In_ RAS_CONNECTION_0 *pRasConnection0,_In_ RAS_CONNECTION_1 *pRasConnection1)
BOOL CALLBACK None.MprAdminAcceptReauthentication(_In_ RAS_CONNECTION_0 *pRasConnection0,_In_ RAS_CONNECTION_1 *pRasConnection1,_In_ RAS_CONNECTION_2 *pRasConnection2,_In_ RAS_CONNECTION_3 *pRasConnection3)
DWORD CALLBACK None.MprAdminGetIpv6AddressForUser(_In_ WCHAR *lpwszUserName,_In_ WCHAR *lpwszPortName,_Inout_ in6_addr *lpdwIpv6Address,_Out_ BOOL *bNotifyRelease)
DWORD CALLBACK None.MprAdminReleaseIpv6AddressForUser(_In_ WCHAR *lpwszUserName,_In_ WCHAR *lpwszPortName,_In_ in6_addr *lpdwIpv6Address)
DWORD APIENTRY mprapi.MprAdminConnectionGetInfoEx(_In_ RAS_SERVER_HANDLE hRasServer,_In_ HANDLE hConnection,_Out_ PRAS_CONNECTION_EX pRasConnection)
DWORD APIENTRY mprapi.MprAdminConnectionEnumEx(_In_ RAS_SERVER_HANDLE hRasServer,_In_ PMPRAPI_OBJECT_HEADER pObjectHeader,_In_ DWORD dwPreferedMaxLen,_Out_ LPDWORD lpdwEntriesRead,_Out_ LPDWORD lpdwTotalEntries,_Out_ PRAS_CONNECTION_EX *ppRasConn,_In_ LPDWORD lpdwResumeHandle)
BOOL CALLBACK None.MprAdminAcceptNewConnection(_In_ RAS_CONNECTION_0 *pRasConnection0,_In_ RAS_CONNECTION_1 *pRasConnection1)
DWORD APIENTRY mprapi.MprAdminConnectionEnumEx(_In_ RAS_SERVER_HANDLE hRasServer,_In_ PMPRAPI_OBJECT_HEADER pObjectHeader,_In_ DWORD dwPreferedMaxLen,_Out_ LPDWORD lpdwEntriesRead,_Out_ LPDWORD lpdwTotalEntries,_Out_ PRAS_CONNECTION_EX *ppRasConn,_In_ LPDWORD lpdwResumeHandle)
BOOL CALLBACK None.MprAdminAcceptNewConnection(_In_ RAS_CONNECTION_0 *pRasConnection0,_In_ RAS_CONNECTION_1 *pRasConnection1)
DWORD CALLBACK None.MprAdminGetIpAddressForUser(_In_ WCHAR *lpwszUserName,_In_ WCHAR *lpwszPortName,_Inout_ DWORD *lpdwIpAddress,_Out_ BOOL *bNotifyRelease)
DWORD APIENTRY mprapi.MprAdminConnectionGetInfoEx(_In_ RAS_SERVER_HANDLE hRasServer,_In_ HANDLE hConnection,_Out_ PRAS_CONNECTION_EX pRasConnection)
BOOL CALLBACK None.MprAdminAcceptNewConnection(_In_ RAS_CONNECTION_0 *pRasConnection0,_In_ RAS_CONNECTION_1 *pRasConnection1)
DWORD APIENTRY mprapi.MprAdminServerSetInfo(_In_ MPR_SERVER_HANDLE hMprServer,_In_ MPR_SERVER_SET_CONFIG_EX *pServerInfo)
DWORD APIENTRY mprapi.MprAdminConnectionEnumEx(_In_ RAS_SERVER_HANDLE hRasServer,_In_ PMPRAPI_OBJECT_HEADER pObjectHeader,_In_ DWORD dwPreferedMaxLen,_Out_ LPDWORD lpdwEntriesRead,_Out_ LPDWORD lpdwTotalEntries,_Out_ PRAS_CONNECTION_EX *ppRasConn,_In_ LPDWORD lpdwResumeHandle)
BOOL CALLBACK None.MprAdminAcceptNewConnection(_In_ RAS_CONNECTION_0 *pRasConnection0,_In_ RAS_CONNECTION_1 *pRasConnection1)
DWORD CALLBACK None.MprAdminGetIpAddressForUser(_In_ WCHAR *lpwszUserName,_In_ WCHAR *lpwszPortName,_Inout_ DWORD *lpdwIpAddress,_Out_ BOOL *bNotifyRelease)
DWORD APIENTRY mprapi.MprAdminInterfaceGetCustomInfoEx(_In_ MPR_SERVER_HANDLE hMprServer,_In_ HANDLE hInterface,_Out_ PMPR_IF_CUSTOMINFOEX pCustomInfo)
HRESULT WINOLEAPI ole32.CoAllowUnmarshalerCLSID(_In_ REFCLSID clsid)
DWORD APIENTRY mprapi.MprAdminConnectionEnumEx(_In_ RAS_SERVER_HANDLE hRasServer,_In_ PMPRAPI_OBJECT_HEADER pObjectHeader,_In_ DWORD dwPreferedMaxLen,_Out_ LPDWORD lpdwEntriesRead,_Out_ LPDWORD lpdwTotalEntries,_Out_ PRAS_CONNECTION_EX *ppRasConn,_In_ LPDWORD lpdwResumeHandle)
DWORD WINAPI rasman.RasSecurityDialogReceive(_In_ HPORT hPort,_In_ PBYTE pBuffer,_In_ PWORD pBufferLength,_In_ DWORD Timeout,_In_ HANDLE hEvent)
DWORD APIENTRY mprapi.MprAdminInterfaceGetCustomInfoEx(_In_ MPR_SERVER_HANDLE hMprServer,_In_ HANDLE hInterface,_Out_ PMPR_IF_CUSTOMINFOEX pCustomInfo)
DWORD WINAPI rasman.RasSecurityDialogReceive(_In_ HPORT hPort,_In_ PBYTE pBuffer,_In_ PWORD pBufferLength,_In_ DWORD Timeout,_In_ HANDLE hEvent)
DWORD APIENTRY mprapi.MprConfigServerSetInfo(_In_ LPWSTR lpwsServerName,_In_ BOOL *fIsServiceInitialized)
DWORD WINAPI rasman.RasSecurityDialogReceive(_In_ HPORT hPort,_In_ PBYTE pBuffer,_In_ PWORD pBufferLength,_In_ DWORD Timeout,_In_ HANDLE hEvent)
DWORD WINAPI mprapi.MprAdminDeviceEnum(_In_ MPR_SERVER_HANDLE hMprServer,_In_ DWORD dwLevel,_Out_ LPBYTE *lplpbBuffer,_Out_ LPDWORD lpdwTotalEntries)
HRESULT WINOLEAPI ole32.CoAllowUnmarshalerCLSID(_In_ REFCLSID clsid)
DWORD APIENTRY mprapi.MprConfigServerSetInfo(_In_ LPWSTR lpwsServerName,_In_ BOOL *fIsServiceInitialized)
DWORD APIENTRY mprapi.MprConfigServerSetInfo(_In_ LPWSTR lpwsServerName,_In_ BOOL *fIsServiceInitialized)
HRESULT WINOLEAPI ole32.CoAllowUnmarshalerCLSID(_In_ REFCLSID clsid)
DWORD WINAPI mprapi.MprConfigFilterGetInfo(_In_ HANDLE hMprConfig,_In_ DWORD dwLevel,_In_ DWORD dwTransportId,_Out_ LPBYTE lpBuffer)
DWORD APIENTRY mprapi.MprConfigServerSetInfo(_In_ HANDLE hMprConfig,_In_ MPR_SERVER_SET_CONFIG_EX *pSetServerConfig)
DWORD WINAPI mprapi.MprConfigFilterSetInfo(_In_ HANDLE hMprConfig,_In_ DWORD dwLevel,_In_ DWORD dwTransportId,_In_ LPBYTE lpBuffer)
DWORD APIENTRY mprapi.MprConfigServerGetInfoEx(_In_ HANDLE hMprConfig,_Out_ MPR_SERVER_EX *pServerInfo)
DWORD WINAPI mprapi.MprConfigFilterSetInfo(_In_ HANDLE hMprConfig,_In_ DWORD dwLevel,_In_ DWORD dwTransportId,_In_ LPBYTE lpBuffer)
DWORD APIENTRY mprapi.MprConfigInterfaceSetCustomInfoEx(_In_ HANDLE hMprConfig,_In_ HANDLE hRouterInterface,_In_ PMPR_IF_CUSTOMINFOEX pCustomInfo)
DWORD APIENTRY mprapi.MprConfigServerSetInfo(_In_ HANDLE hMprConfig,_In_ MPR_SERVER_SET_CONFIG_EX *pSetServerConfig)
DWORD WINAPI mprapi.MprConfigFilterSetInfo(_In_ HANDLE hMprConfig,_In_ DWORD dwLevel,_In_ DWORD dwTransportId,_In_ LPBYTE lpBuffer)
DWORD APIENTRY mprapi.MprConfigServerGetInfoEx(_In_ HANDLE hMprConfig,_Out_ MPR_SERVER_EX *pServerInfo)
