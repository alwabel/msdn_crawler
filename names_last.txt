BOOL WINAPI kernel32.CopyFile(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName,_In_ BOOL bFailIfExists)
BOOL WINAPI kernel32.CopyFileW(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName,_In_ BOOL bFailIfExists)
BOOL WINAPI kernel32.CopyFileA(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName,_In_ BOOL bFailIfExists)
BOOL WINAPI kernel32.Wow64RevertWow64FsRedirection(_In_ PVOID OldValue)
HRESULT WINAPI wofutil.WofGetDriverVersion(_In_ HANDLE FileOrVolumeHandle,_In_ ULONG Provider,_Out_ PULONG WofVersion)
HRESULT WINAPI wofutil.WofFileEnumFiles(_In_ PCWSTR VolumeName,_In_ ULONG Algorithm,_In_ WofEnumFilesProc EnumProc,_In_opt_ PVOID UserData)
DWORD WINAPI advapi32.ReadEncryptedFileRaw(_In_ PFE_EXPORT_FUNC pfExportCallback,_In_opt_ PVOID pvCallbackContext,_In_ PVOID pvContext)
BOOL WINAPI wofutil.WofShouldCompressBinaries(_In_ LPCWSTR Volume,_Out_ PULONG Algorithm)
HANDLE WINAPI kernel32.FindFirstFileNameTransactedW(_In_ LPCWSTR lpFileName,_In_ DWORD dwFlags,_Inout_ LPDWORD StringLength,_Inout_ PWCHAR LinkName,_In_opt_ HANDLE hTransaction)
DWORD WINAPI kernel32.GetLongPathNameTransacted(_In_ LPCTSTR lpszShortPath,_Out_ LPTSTR lpszLongPath,_In_ DWORD cchBuffer,_In_ HANDLE hTransaction)
DWORD WINAPI kernel32.GetLongPathNameTransactedW(_In_ LPCTSTR lpszShortPath,_Out_ LPTSTR lpszLongPath,_In_ DWORD cchBuffer,_In_ HANDLE hTransaction)
DWORD WINAPI kernel32.GetLongPathNameTransactedA(_In_ LPCTSTR lpszShortPath,_Out_ LPTSTR lpszLongPath,_In_ DWORD cchBuffer,_In_ HANDLE hTransaction)
DWORD WINAPI kernel32.SearchPath(_In_opt_ LPCTSTR lpPath,_In_ LPCTSTR lpFileName,_In_opt_ LPCTSTR lpExtension,_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer,_Out_opt_ LPTSTR *lpFilePart)
DWORD WINAPI kernel32.SearchPathW(_In_opt_ LPCTSTR lpPath,_In_ LPCTSTR lpFileName,_In_opt_ LPCTSTR lpExtension,_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer,_Out_opt_ LPTSTR *lpFilePart)
DWORD WINAPI kernel32.SearchPathA(_In_opt_ LPCTSTR lpPath,_In_ LPCTSTR lpFileName,_In_opt_ LPCTSTR lpExtension,_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer,_Out_opt_ LPTSTR *lpFilePart)
BOOL WINAPI kernel32.CopyFileEx(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName,_In_opt_ LPPROGRESS_ROUTINE lpProgressRoutine,_In_opt_ LPVOID lpData,_In_opt_ LPBOOL pbCancel,_In_ DWORD dwCopyFlags)
BOOL WINAPI kernel32.CopyFileExW(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName,_In_opt_ LPPROGRESS_ROUTINE lpProgressRoutine,_In_opt_ LPVOID lpData,_In_opt_ LPBOOL pbCancel,_In_ DWORD dwCopyFlags)
BOOL WINAPI kernel32.CopyFileExA(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName,_In_opt_ LPPROGRESS_ROUTINE lpProgressRoutine,_In_opt_ LPVOID lpData,_In_opt_ LPBOOL pbCancel,_In_ DWORD dwCopyFlags)
BOOL WINAPI kernel32.CopyFileTransacted(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName,_In_opt_ LPPROGRESS_ROUTINE lpProgressRoutine,_In_opt_ LPVOID lpData,_In_opt_ LPBOOL pbCancel,_In_ DWORD dwCopyFlags,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.CopyFileTransactedW(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName,_In_opt_ LPPROGRESS_ROUTINE lpProgressRoutine,_In_opt_ LPVOID lpData,_In_opt_ LPBOOL pbCancel,_In_ DWORD dwCopyFlags,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.CopyFileTransactedA(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName,_In_opt_ LPPROGRESS_ROUTINE lpProgressRoutine,_In_opt_ LPVOID lpData,_In_opt_ LPBOOL pbCancel,_In_ DWORD dwCopyFlags,_In_ HANDLE hTransaction)
DWORD WINAPI advapi32.SetUserFileEncryptionKey(_In_ PENCRYPTION_CERTIFICATE pEncryptionCertificate)
BOOL WINAPI kernel32.WriteFile(_In_ HANDLE hFile,_In_ LPCVOID lpBuffer,_In_ DWORD nNumberOfBytesToWrite,_Out_opt_ LPDWORD lpNumberOfBytesWritten,_Inout_opt_ LPOVERLAPPED lpOverlapped)
DWORD WINAPI kernel32.GetFullPathName(_In_ LPCTSTR lpFileName,_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer,_Out_ LPTSTR *lpFilePart)
DWORD WINAPI kernel32.GetFullPathNameW(_In_ LPCTSTR lpFileName,_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer,_Out_ LPTSTR *lpFilePart)
DWORD WINAPI kernel32.GetFullPathNameA(_In_ LPCTSTR lpFileName,_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer,_Out_ LPTSTR *lpFilePart)
HRESULT WINAPI wofutil.WofWimSuspendEntry(_In_ PCWSTR VolumeName,_In_ LARGE_INTEGER DataSourceId)
DWORD WINAPI kernel32.GetFileType(_In_ HANDLE hFile)
HANDLE WINAPI kernel32.CreateIoCompletionPort(_In_ HANDLE FileHandle,_In_opt_ HANDLE ExistingCompletionPort,_In_ ULONG_PTR CompletionKey,_In_ DWORD NumberOfConcurrentThreads)
BOOL WINAPI kernel32.CreateHardLink(_In_ LPCTSTR lpFileName,_In_ LPCTSTR lpExistingFileName,_Reserved_ LPSECURITY_ATTRIBUTES lpSecurityAttributes)
BOOL WINAPI kernel32.CreateHardLinkW(_In_ LPCTSTR lpFileName,_In_ LPCTSTR lpExistingFileName,_Reserved_ LPSECURITY_ATTRIBUTES lpSecurityAttributes)
BOOL WINAPI kernel32.CreateHardLinkA(_In_ LPCTSTR lpFileName,_In_ LPCTSTR lpExistingFileName,_Reserved_ LPSECURITY_ATTRIBUTES lpSecurityAttributes)
INT WINAPI lz32.LZInit(_In_ INT hfSource)
HRESULT WINAPI wofutil.WofWimEnumFiles(_In_ PCWSTR VolumeName,_In_ LARGE_INTEGER DataSourceId,_In_ WofEnumFilesProc EnumProc,_In_opt_ PVOID UserData)
HRESULT WINAPI wofutil.WofEnumEntries(_In_ PCWSTR VolumeName,_In_ ULONG Provider,_In_ WofEnumEntryProc EnumProc,_In_opt_ PVOID UserData)
BOOL WINAPI kernel32.GetFileBandwidthReservation(_In_ HANDLE hFile,_Out_ LPDWORD lpPeriodMilliseconds,_Out_ LPDWORD lpBytesPerPeriod,_Out_ LPBOOL pDiscardable,_Out_ LPDWORD lpTransferSize,_Out_ LPDWORD lpNumOutstandingRequests)
BOOL WINAPI kernel32.FlushFileBuffers(_In_ HANDLE hFile)
BOOL WINAPI kernel32.GetFileAttributesTransacted(_In_ LPCTSTR lpFileName,_In_ GET_FILEEX_INFO_LEVELS fInfoLevelId,_Out_ LPVOID lpFileInformation,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.GetFileAttributesTransactedW(_In_ LPCTSTR lpFileName,_In_ GET_FILEEX_INFO_LEVELS fInfoLevelId,_Out_ LPVOID lpFileInformation,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.GetFileAttributesTransactedA(_In_ LPCTSTR lpFileName,_In_ GET_FILEEX_INFO_LEVELS fInfoLevelId,_Out_ LPVOID lpFileInformation,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.MoveFileTransacted(_In_ LPCTSTR lpExistingFileName,_In_opt_ LPCTSTR lpNewFileName,_In_opt_ LPPROGRESS_ROUTINE lpProgressRoutine,_In_opt_ LPVOID lpData,_In_ DWORD dwFlags,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.MoveFileTransactedW(_In_ LPCTSTR lpExistingFileName,_In_opt_ LPCTSTR lpNewFileName,_In_opt_ LPPROGRESS_ROUTINE lpProgressRoutine,_In_opt_ LPVOID lpData,_In_ DWORD dwFlags,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.MoveFileTransactedA(_In_ LPCTSTR lpExistingFileName,_In_opt_ LPCTSTR lpNewFileName,_In_opt_ LPPROGRESS_ROUTINE lpProgressRoutine,_In_opt_ LPVOID lpData,_In_ DWORD dwFlags,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.CancelIo(_In_ HANDLE hFile)
HRESULT WINAPI wofutil.WofWimUpdateEntry(_In_ PCWSTR VolumeName,_In_ LARGE_INTEGER DataSourceId,_In_ PCWSTR NewWimPath)
VOID CALLBACK None.FileIOCompletionRoutine(_In_ DWORD dwErrorCode,_In_ DWORD dwNumberOfBytesTransfered,_Inout_ LPOVERLAPPED lpOverlapped)
DWORD WINAPI advapi32.QueryRecoveryAgentsOnEncryptedFile(_In_ LPCWSTR lpFileName,_Out_ PENCRYPTION_CERTIFICATE_HASH_LIST *pRecoveryAgents)
BOOL WINAPI kernel32.GetBinaryType(_In_ LPCTSTR lpApplicationName,_Out_ LPDWORD lpBinaryType)
BOOL WINAPI kernel32.GetBinaryTypeW(_In_ LPCTSTR lpApplicationName,_Out_ LPDWORD lpBinaryType)
BOOL WINAPI kernel32.GetBinaryTypeA(_In_ LPCTSTR lpApplicationName,_Out_ LPDWORD lpBinaryType)
BOOL WINAPI kernel32.MoveFile(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName)
BOOL WINAPI kernel32.MoveFileW(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName)
BOOL WINAPI kernel32.MoveFileA(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName)
BOOL WINAPI kernel32.GetFileSizeEx(_In_ HANDLE hFile,_Out_ PLARGE_INTEGER lpFileSize)
BOOL WINAPI kernel32.CopyFile(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName,_In_ BOOL bFailIfExists)
BOOL WINAPI kernel32.CopyFileW(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName,_In_ BOOL bFailIfExists)
BOOL WINAPI kernel32.CopyFileA(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName,_In_ BOOL bFailIfExists)
BOOL WINAPI advapi32.FileEncryptionStatus(_In_ LPCTSTR lpFileName,_Out_ LPDWORD lpStatus)
BOOL WINAPI advapi32.FileEncryptionStatusW(_In_ LPCTSTR lpFileName,_Out_ LPDWORD lpStatus)
BOOL WINAPI advapi32.FileEncryptionStatusA(_In_ LPCTSTR lpFileName,_Out_ LPDWORD lpStatus)
INT WINAPI lz32.LZRead(_In_ INT hFile,_Out_ LPSTR lpBuffer,_In_ INT cbRead)
BOOL WINAPI kernel32.SetFilePointerEx(_In_ HANDLE hFile,_In_ LARGE_INTEGER liDistanceToMove,_Out_opt_ PLARGE_INTEGER lpNewFilePointer,_In_ DWORD dwMoveMethod)
BOOL WINAPI kernel32.ReadFile(_In_ HANDLE hFile,_Out_ LPVOID lpBuffer,_In_ DWORD nNumberOfBytesToRead,_Out_opt_ LPDWORD lpNumberOfBytesRead,_Inout_opt_ LPOVERLAPPED lpOverlapped)
DWORD WINAPI None.ExportCallback(_In_ PBYTE pbData,_In_opt_ PVOID pvCallbackContext,_In_ ULONG ulLength)
BOOL WINAPI kernel32.ReadFileEx(_In_ HANDLE hFile,_Out_opt_ LPVOID lpBuffer,_In_ DWORD nNumberOfBytesToRead,_Inout_ LPOVERLAPPED lpOverlapped,_In_ LPOVERLAPPED_COMPLETION_ROUTINE lpCompletionRoutine)
DWORD WINAPI kernel32.GetFileSize(_In_ HANDLE hFile,_Out_opt_ LPDWORD lpFileSizeHigh)
BOOL WINAPI kernel32.SetFileCompletionNotificationModes(_In_ HANDLE FileHandle,_In_ UCHAR Flags)
DWORD WINAPI kernel32.GetCompressedFileSizeTransacted(_In_ LPCTSTR lpFileName,_Out_opt_ LPDWORD lpFileSizeHigh,_In_ HANDLE hTransaction)
DWORD WINAPI kernel32.GetCompressedFileSizeTransactedW(_In_ LPCTSTR lpFileName,_Out_opt_ LPDWORD lpFileSizeHigh,_In_ HANDLE hTransaction)
DWORD WINAPI kernel32.GetCompressedFileSizeTransactedA(_In_ LPCTSTR lpFileName,_Out_opt_ LPDWORD lpFileSizeHigh,_In_ HANDLE hTransaction)
HRESULT WINAPI kernel32.CopyFile2(_In_ PCWSTR pwszExistingFileName,_In_ PCWSTR pwszNewFileName,_In_opt_ COPYFILE2_EXTENDED_PARAMETERS *pExtendedParameters)
BOOL WINAPI kernel32.CancelSynchronousIo(_In_ HANDLE hThread)
HANDLE WINAPI kernel32.CreateFile2(_In_ LPCWSTR lpFileName,_In_ DWORD dwDesiredAccess,_In_ DWORD dwShareMode,_In_ DWORD dwCreationDisposition,_In_opt_ LPCREATEFILE2_EXTENDED_PARAMETERS pCreateExParams)
HANDLE WINAPI kernel32.FindFirstFile(_In_ LPCTSTR lpFileName,_Out_ LPWIN32_FIND_DATA lpFindFileData)
HANDLE WINAPI kernel32.FindFirstFileW(_In_ LPCTSTR lpFileName,_Out_ LPWIN32_FIND_DATA lpFindFileData)
HANDLE WINAPI kernel32.FindFirstFileA(_In_ LPCTSTR lpFileName,_Out_ LPWIN32_FIND_DATA lpFindFileData)
BOOL WINAPI kernel32.DeleteFile(_In_ LPCTSTR lpFileName)
BOOL WINAPI kernel32.DeleteFileW(_In_ LPCTSTR lpFileName)
BOOL WINAPI kernel32.DeleteFileA(_In_ LPCTSTR lpFileName)
HRESULT WINAPI wofutil.WofWimAddEntry(_In_ PCWSTR VolumeName,_In_ PCWSTR WimPath,_In_ DWORD WimType,_In_ DWORD WimIndex,_Out_ PLARGE_INTEGER DataSourceId)
LONG WINAPI lz32.LZCopy(_In_ INT hfSource,_In_ INT hfDest)
UINT WINAPI kernel32.GetTempFileName(_In_ LPCTSTR lpPathName,_In_ LPCTSTR lpPrefixString,_In_ UINT uUnique,_Out_ LPTSTR lpTempFileName)
UINT WINAPI kernel32.GetTempFileNameW(_In_ LPCTSTR lpPathName,_In_ LPCTSTR lpPrefixString,_In_ UINT uUnique,_Out_ LPTSTR lpTempFileName)
UINT WINAPI kernel32.GetTempFileNameA(_In_ LPCTSTR lpPathName,_In_ LPCTSTR lpPrefixString,_In_ UINT uUnique,_Out_ LPTSTR lpTempFileName)
BOOL WINAPI kernel32.SetFileAttributesTransacted(_In_ LPCTSTR lpFileName,_In_ DWORD dwFileAttributes,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.SetFileAttributesTransactedW(_In_ LPCTSTR lpFileName,_In_ DWORD dwFileAttributes,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.SetFileAttributesTransactedA(_In_ LPCTSTR lpFileName,_In_ DWORD dwFileAttributes,_In_ HANDLE hTransaction)
HANDLE WINAPI kernel32.CreateFile(_In_ LPCTSTR lpFileName,_In_ DWORD dwDesiredAccess,_In_ DWORD dwShareMode,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ DWORD dwCreationDisposition,_In_ DWORD dwFlagsAndAttributes,_In_opt_ HANDLE hTemplateFile)
HANDLE WINAPI kernel32.CreateFileW(_In_ LPCTSTR lpFileName,_In_ DWORD dwDesiredAccess,_In_ DWORD dwShareMode,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ DWORD dwCreationDisposition,_In_ DWORD dwFlagsAndAttributes,_In_opt_ HANDLE hTemplateFile)
HANDLE WINAPI kernel32.CreateFileA(_In_ LPCTSTR lpFileName,_In_ DWORD dwDesiredAccess,_In_ DWORD dwShareMode,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ DWORD dwCreationDisposition,_In_ DWORD dwFlagsAndAttributes,_In_opt_ HANDLE hTemplateFile)
BOOL WINAPI kernel32.UnlockFile(_In_ HANDLE hFile,_In_ DWORD dwFileOffsetLow,_In_ DWORD dwFileOffsetHigh,_In_ DWORD nNumberOfBytesToUnlockLow,_In_ DWORD nNumberOfBytesToUnlockHigh)
BOOL WINAPI kernel32.UnlockFileEx(_In_ HANDLE hFile,_Reserved_ DWORD dwReserved,_In_ DWORD nNumberOfBytesToUnlockLow,_In_ DWORD nNumberOfBytesToUnlockHigh,_Inout_ LPOVERLAPPED lpOverlapped)
BOOL WINAPI kernel32.CheckNameLegalDOS8Dot3(_In_ LPCTSTR lpName,_Out_opt_ LPSTR lpOemName,_In_ DWORD OemNameSize,_Out_opt_ PBOOL pbNameContainsSpaces,_Out_ PBOOL pbNameLegal)
BOOL WINAPI kernel32.CheckNameLegalDOS8Dot3W(_In_ LPCTSTR lpName,_Out_opt_ LPSTR lpOemName,_In_ DWORD OemNameSize,_Out_opt_ PBOOL pbNameContainsSpaces,_Out_ PBOOL pbNameLegal)
BOOL WINAPI kernel32.CheckNameLegalDOS8Dot3A(_In_ LPCTSTR lpName,_Out_opt_ LPSTR lpOemName,_In_ DWORD OemNameSize,_Out_opt_ PBOOL pbNameContainsSpaces,_Out_ PBOOL pbNameLegal)
HRESULT WINAPI wofutil.WofSetFileDataLocation(_In_ HANDLE FileHandle,_In_ ULONG Provider,_In_ PVOID ExternalFileInfo,_In_ ULONG Length)
DWORD WINAPI advapi32.WriteEncryptedFileRaw(_In_ PFE_IMPORT_FUNC pfImportCallback,_In_opt_ PVOID pvCallbackContext,_In_ PVOID pvContext)
HRESULT WINAPI wofutil.WofWimRemoveEntry(_In_ PCWSTR VolumeName,_In_ LARGE_INTEGER DataSourceId)
BOOL WINAPI kernel32.CancelIoEx(_In_ HANDLE hFile,_In_opt_ LPOVERLAPPED lpOverlapped)
BOOL WINAPI kernel32.LockFile(_In_ HANDLE hFile,_In_ DWORD dwFileOffsetLow,_In_ DWORD dwFileOffsetHigh,_In_ DWORD nNumberOfBytesToLockLow,_In_ DWORD nNumberOfBytesToLockHigh)
BOOL WINAPI kernel32.Wow64DisableWow64FsRedirection(_Out_ PVOID *OldValue)
BOOL WINAPI kernel32.SetFileValidData(_In_ HANDLE hFile,_In_ LONGLONG ValidDataLength)
DWORD WINAPI kernel32.GetShortPathName(_In_ LPCTSTR lpszLongPath,_Out_ LPTSTR lpszShortPath,_In_ DWORD cchBuffer)
DWORD WINAPI kernel32.GetShortPathNameW(_In_ LPCTSTR lpszLongPath,_Out_ LPTSTR lpszShortPath,_In_ DWORD cchBuffer)
DWORD WINAPI kernel32.GetShortPathNameA(_In_ LPCTSTR lpszLongPath,_Out_ LPTSTR lpszShortPath,_In_ DWORD cchBuffer)
BOOL WINAPI kernel32.GetFileInformationByHandle(_In_ HANDLE hFile,_Out_ LPBY_HANDLE_FILE_INFORMATION lpFileInformation)
DWORD WINAPI advapi32.QueryUsersOnEncryptedFile(_In_ LPCWSTR lpFileName,_Out_ PENCRYPTION_CERTIFICATE_HASH_LIST *pUsers)
BOOL WINAPI kernel32.GetFileAttributesEx(_In_ LPCTSTR lpFileName,_In_ GET_FILEEX_INFO_LEVELS fInfoLevelId,_Out_ LPVOID lpFileInformation)
BOOL WINAPI kernel32.GetFileAttributesExW(_In_ LPCTSTR lpFileName,_In_ GET_FILEEX_INFO_LEVELS fInfoLevelId,_Out_ LPVOID lpFileInformation)
BOOL WINAPI kernel32.GetFileAttributesExA(_In_ LPCTSTR lpFileName,_In_ GET_FILEEX_INFO_LEVELS fInfoLevelId,_Out_ LPVOID lpFileInformation)
BOOL WINAPI kernel32.WriteFileEx(_In_ HANDLE hFile,_In_opt_ LPCVOID lpBuffer,_In_ DWORD nNumberOfBytesToWrite,_Inout_ LPOVERLAPPED lpOverlapped,_In_ LPOVERLAPPED_COMPLETION_ROUTINE lpCompletionRoutine)
BOOL WINAPI kernel32.FindNextStreamW(_In_ HANDLE hFindStream,_Out_ LPVOID lpFindStreamData)
BOOL WINAPI kernel32.SetFileBandwidthReservation(_In_ HANDLE hFile,_In_ DWORD nPeriodMilliseconds,_In_ DWORD nBytesPerPeriod,_In_ BOOL bDiscardable,_Out_ LPDWORD lpTransferSize,_Out_ LPDWORD lpNumOutstandingRequests)
LONG WINAPI lz32.LZSeek(_In_ INT hFile,_In_ LONG lOffset,_In_ INT iOrigin)
HANDLE WINAPI kernel32.FindFirstStreamTransactedW(_In_ LPCWSTR lpFileName,_In_ STREAM_INFO_LEVELS InfoLevel,_Out_ LPVOID lpFindStreamData,_Reserved_ DWORD dwFlags,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.GetQueuedCompletionStatusEx(_In_ HANDLE CompletionPort,_Out_ LPOVERLAPPED_ENTRY lpCompletionPortEntries,_In_ ULONG ulCount,_Out_ PULONG ulNumEntriesRemoved,_In_ DWORD dwMilliseconds,_In_ BOOL fAlertable)
DWORD WINAPI kernel32.GetFileAttributes(_In_ LPCTSTR lpFileName)
DWORD WINAPI kernel32.GetFileAttributesW(_In_ LPCTSTR lpFileName)
DWORD WINAPI kernel32.GetFileAttributesA(_In_ LPCTSTR lpFileName)
BOOL WINAPI kernel32.SetEndOfFile(_In_ HANDLE hFile)
BOOL WINAPI kernel32.PostQueuedCompletionStatus(_In_ HANDLE CompletionPort,_In_ DWORD dwNumberOfBytesTransferred,_In_ ULONG_PTR dwCompletionKey,_In_opt_ LPOVERLAPPED lpOverlapped)
BOOLEAN WINAPI kernel32.CreateSymbolicLinkTransacted(_In_ LPTSTR lpSymlinkFileName,_In_ LPTSTR lpTargetFileName,_In_ DWORD dwFlags,_In_ HANDLE hTransaction)
BOOLEAN WINAPI kernel32.CreateSymbolicLinkTransactedW(_In_ LPTSTR lpSymlinkFileName,_In_ LPTSTR lpTargetFileName,_In_ DWORD dwFlags,_In_ HANDLE hTransaction)
BOOLEAN WINAPI kernel32.CreateSymbolicLinkTransactedA(_In_ LPTSTR lpSymlinkFileName,_In_ LPTSTR lpTargetFileName,_In_ DWORD dwFlags,_In_ HANDLE hTransaction)
DWORD WINAPI kernel32.GetLongPathName(_In_ LPCTSTR lpszShortPath,_Out_ LPTSTR lpszLongPath,_In_ DWORD cchBuffer)
DWORD WINAPI kernel32.GetLongPathNameW(_In_ LPCTSTR lpszShortPath,_Out_ LPTSTR lpszLongPath,_In_ DWORD cchBuffer)
DWORD WINAPI kernel32.GetLongPathNameA(_In_ LPCTSTR lpszShortPath,_Out_ LPTSTR lpszLongPath,_In_ DWORD cchBuffer)
HANDLE WINAPI kernel32.FindFirstFileTransacted(_In_ LPCTSTR lpFileName,_In_ FINDEX_INFO_LEVELS fInfoLevelId,_Out_ LPVOID lpFindFileData,_In_ FINDEX_SEARCH_OPS fSearchOp,_Reserved_ LPVOID lpSearchFilter,_In_ DWORD dwAdditionalFlags,_In_ HANDLE hTransaction)
HANDLE WINAPI kernel32.FindFirstFileTransactedW(_In_ LPCTSTR lpFileName,_In_ FINDEX_INFO_LEVELS fInfoLevelId,_Out_ LPVOID lpFindFileData,_In_ FINDEX_SEARCH_OPS fSearchOp,_Reserved_ LPVOID lpSearchFilter,_In_ DWORD dwAdditionalFlags,_In_ HANDLE hTransaction)
HANDLE WINAPI kernel32.FindFirstFileTransactedA(_In_ LPCTSTR lpFileName,_In_ FINDEX_INFO_LEVELS fInfoLevelId,_Out_ LPVOID lpFindFileData,_In_ FINDEX_SEARCH_OPS fSearchOp,_Reserved_ LPVOID lpSearchFilter,_In_ DWORD dwAdditionalFlags,_In_ HANDLE hTransaction)
BOOLEAN WINAPI kernel32.Wow64EnableWow64FsRedirection(_In_ BOOLEAN Wow64FsEnableRedirection)
BOOLEAN WINAPI kernel32.CreateSymbolicLink(_In_ LPTSTR lpSymlinkFileName,_In_ LPTSTR lpTargetFileName,_In_ DWORD dwFlags)
BOOLEAN WINAPI kernel32.CreateSymbolicLinkW(_In_ LPTSTR lpSymlinkFileName,_In_ LPTSTR lpTargetFileName,_In_ DWORD dwFlags)
BOOLEAN WINAPI kernel32.CreateSymbolicLinkA(_In_ LPTSTR lpSymlinkFileName,_In_ LPTSTR lpTargetFileName,_In_ DWORD dwFlags)
BOOL WINAPI kernel32.SetFileAttributes(_In_ LPCTSTR lpFileName,_In_ DWORD dwFileAttributes)
BOOL WINAPI kernel32.SetFileAttributesW(_In_ LPCTSTR lpFileName,_In_ DWORD dwFileAttributes)
BOOL WINAPI kernel32.SetFileAttributesA(_In_ LPCTSTR lpFileName,_In_ DWORD dwFileAttributes)
BOOL WINAPI kernel32.SetFileIoOverlappedRange(_In_ HANDLE FileHandle,_In_ PUCHAR OverlappedRangeStart,_In_ ULONG Length)
BOOL WINAPI kernel32.FindNextFileNameW(_In_ HANDLE hFindStream,_Inout_ LPDWORD StringLength,_Inout_ PWCHAR LinkName)
DWORD WINAPI advapi32.AddUsersToEncryptedFile(_In_ LPCWSTR lpFileName,_In_ PENCRYPTION_CERTIFICATE_LIST pUsers)
BOOL WINAPI kernel32.LockFileEx(_In_ HANDLE hFile,_In_ DWORD dwFlags,_Reserved_ DWORD dwReserved,_In_ DWORD nNumberOfBytesToLockLow,_In_ DWORD nNumberOfBytesToLockHigh,_Inout_ LPOVERLAPPED lpOverlapped)
HRESULT WINAPI wofutil.WofIsExternalFile(_In_ LPCWSTR FilePath,_Out_opt_ PBOOL IsExternalFile,_Out_opt_ PULONG Provider,_Out_opt_ PVOID ExternalFileInfo,_Inout_opt_ PULONG BufferLength)
BOOL WINAPI kernel32.SetSearchPathMode(_In_ DWORD Flags)
HANDLE WINAPI kernel32.FindFirstStreamW(_In_ LPCWSTR lpFileName,_In_ STREAM_INFO_LEVELS InfoLevel,_Out_ LPVOID lpFindStreamData,_Reserved_ DWORD dwFlags)
BOOL WINAPI kernel32.FindClose(_Inout_ HANDLE hFindFile)
BOOL WINAPI kernel32.ReadFileScatter(_In_ HANDLE hFile,_In_ FILE_SEGMENT_ELEMENT aSegmentArray[],_In_ DWORD nNumberOfBytesToRead,_Reserved_ LPDWORD lpReserved,_Inout_ LPOVERLAPPED lpOverlapped)
INT WINAPI lz32.GetExpandedName(_In_ LPTSTR lpszSource,_Out_ LPTSTR lpszBuffer)
INT WINAPI lz32.GetExpandedNameW(_In_ LPTSTR lpszSource,_Out_ LPTSTR lpszBuffer)
INT WINAPI lz32.GetExpandedNameA(_In_ LPTSTR lpszSource,_Out_ LPTSTR lpszBuffer)
INT WINAPI lz32.LZOpenFile(_In_ LPTSTR lpFileName,_Out_ LPOFSTRUCT lpReOpenBuf,_In_ WORD wStyle)
INT WINAPI lz32.LZOpenFileW(_In_ LPTSTR lpFileName,_Out_ LPOFSTRUCT lpReOpenBuf,_In_ WORD wStyle)
INT WINAPI lz32.LZOpenFileA(_In_ LPTSTR lpFileName,_Out_ LPOFSTRUCT lpReOpenBuf,_In_ WORD wStyle)
HANDLE WINAPI kernel32.FindFirstFileNameW(_In_ LPCWSTR lpFileName,_In_ DWORD dwFlags,_Inout_ LPDWORD StringLength,_Inout_ PWCHAR LinkName)
DWORD WINAPI kernel32.GetTempPath(_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer)
DWORD WINAPI kernel32.GetTempPathW(_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer)
DWORD WINAPI kernel32.GetTempPathA(_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer)
BOOL WINAPI kernel32.GetQueuedCompletionStatus(_In_ HANDLE CompletionPort,_Out_ LPDWORD lpNumberOfBytes,_Out_ PULONG_PTR lpCompletionKey,_Out_ LPOVERLAPPED *lpOverlapped,_In_ DWORD dwMilliseconds)
HANDLE WINAPI kernel32.ReOpenFile(_In_ HANDLE hOriginalFile,_In_ DWORD dwDesiredAccess,_In_ DWORD dwShareMode,_In_ DWORD dwFlags)
BOOL WINAPI kernel32.FindNextFile(_In_ HANDLE hFindFile,_Out_ LPWIN32_FIND_DATA lpFindFileData)
BOOL WINAPI kernel32.FindNextFileW(_In_ HANDLE hFindFile,_Out_ LPWIN32_FIND_DATA lpFindFileData)
BOOL WINAPI kernel32.FindNextFileA(_In_ HANDLE hFindFile,_Out_ LPWIN32_FIND_DATA lpFindFileData)
BOOL WINAPI kernel32.GetFileInformationByHandleEx(_In_ HANDLE hFile,_In_ FILE_INFO_BY_HANDLE_CLASS FileInformationClass,_Out_ LPVOID lpFileInformation,_In_ DWORD dwBufferSize)
DWORD WINAPI kernel32.GetFullPathNameTransacted(_In_ LPCTSTR lpFileName,_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer,_Out_ LPTSTR *lpFilePart,_In_ HANDLE hTransaction)
DWORD WINAPI kernel32.GetFullPathNameTransactedW(_In_ LPCTSTR lpFileName,_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer,_Out_ LPTSTR *lpFilePart,_In_ HANDLE hTransaction)
DWORD WINAPI kernel32.GetFullPathNameTransactedA(_In_ LPCTSTR lpFileName,_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer,_Out_ LPTSTR *lpFilePart,_In_ HANDLE hTransaction)
BOOL WINAPI advapi32.EncryptionDisable(_In_ LPCWSTR DirPath,_In_ BOOL Disable)
BOOL WINAPI kernel32.CreateHardLinkTransacted(_In_ LPCTSTR lpFileName,_In_ LPCTSTR lpExistingFileName,_Reserved_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.CreateHardLinkTransactedW(_In_ LPCTSTR lpFileName,_In_ LPCTSTR lpExistingFileName,_Reserved_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.CreateHardLinkTransactedA(_In_ LPCTSTR lpFileName,_In_ LPCTSTR lpExistingFileName,_Reserved_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ HANDLE hTransaction)
DWORD WINAPI kernel32.GetCompressedFileSize(_In_ LPCTSTR lpFileName,_Out_opt_ LPDWORD lpFileSizeHigh)
DWORD WINAPI kernel32.GetCompressedFileSizeW(_In_ LPCTSTR lpFileName,_Out_opt_ LPDWORD lpFileSizeHigh)
DWORD WINAPI kernel32.GetCompressedFileSizeA(_In_ LPCTSTR lpFileName,_Out_opt_ LPDWORD lpFileSizeHigh)
DWORD WINAPI kernel32.SetFilePointer(_In_ HANDLE hFile,_In_ LONG lDistanceToMove,_Inout_opt_ PLONG lpDistanceToMoveHigh,_In_ DWORD dwMoveMethod)
BOOL WINAPI advapi32.DecryptFile(_In_ LPCTSTR lpFileName,_Reserved_ DWORD dwReserved)
BOOL WINAPI advapi32.DecryptFileW(_In_ LPCTSTR lpFileName,_Reserved_ DWORD dwReserved)
BOOL WINAPI advapi32.DecryptFileA(_In_ LPCTSTR lpFileName,_Reserved_ DWORD dwReserved)
DWORD CALLBACK None.CopyProgressRoutine(_In_ LARGE_INTEGER TotalFileSize,_In_ LARGE_INTEGER TotalBytesTransferred,_In_ LARGE_INTEGER StreamSize,_In_ LARGE_INTEGER StreamBytesTransferred,_In_ DWORD dwStreamNumber,_In_ DWORD dwCallbackReason,_In_ HANDLE hSourceFile,_In_ HANDLE hDestinationFile,_In_opt_ LPVOID lpData)
DWORD WINAPI kernel32.GetFinalPathNameByHandle(_In_ HANDLE hFile,_Out_ LPTSTR lpszFilePath,_In_ DWORD cchFilePath,_In_ DWORD dwFlags)
DWORD WINAPI kernel32.GetFinalPathNameByHandleW(_In_ HANDLE hFile,_Out_ LPTSTR lpszFilePath,_In_ DWORD cchFilePath,_In_ DWORD dwFlags)
DWORD WINAPI kernel32.GetFinalPathNameByHandleA(_In_ HANDLE hFile,_Out_ LPTSTR lpszFilePath,_In_ DWORD cchFilePath,_In_ DWORD dwFlags)
HANDLE WINAPI kernel32.OpenFileById(_In_ HANDLE hFile,_In_ LPFILE_ID_DESCRIPTOR lpFileID,_In_ DWORD dwDesiredAccess,_In_ DWORD dwShareMode,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ DWORD dwFlags)
DWORD WINAPI advapi32.OpenEncryptedFileRaw(_In_ LPCTSTR lpFileName,_In_ ULONG ulFlags,_Out_ PVOID *pvContext)
DWORD WINAPI advapi32.OpenEncryptedFileRawW(_In_ LPCTSTR lpFileName,_In_ ULONG ulFlags,_Out_ PVOID *pvContext)
DWORD WINAPI advapi32.OpenEncryptedFileRawA(_In_ LPCTSTR lpFileName,_In_ ULONG ulFlags,_Out_ PVOID *pvContext)
HANDLE WINAPI kernel32.CreateFileTransacted(_In_ LPCTSTR lpFileName,_In_ DWORD dwDesiredAccess,_In_ DWORD dwShareMode,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ DWORD dwCreationDisposition,_In_ DWORD dwFlagsAndAttributes,_In_opt_ HANDLE hTemplateFile,_In_ HANDLE hTransaction,_In_opt_ PUSHORT pusMiniVersion,_Reserved_ PVOID pExtendedParameter)
HANDLE WINAPI kernel32.CreateFileTransactedW(_In_ LPCTSTR lpFileName,_In_ DWORD dwDesiredAccess,_In_ DWORD dwShareMode,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ DWORD dwCreationDisposition,_In_ DWORD dwFlagsAndAttributes,_In_opt_ HANDLE hTemplateFile,_In_ HANDLE hTransaction,_In_opt_ PUSHORT pusMiniVersion,_Reserved_ PVOID pExtendedParameter)
HANDLE WINAPI kernel32.CreateFileTransactedA(_In_ LPCTSTR lpFileName,_In_ DWORD dwDesiredAccess,_In_ DWORD dwShareMode,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ DWORD dwCreationDisposition,_In_ DWORD dwFlagsAndAttributes,_In_opt_ HANDLE hTemplateFile,_In_ HANDLE hTransaction,_In_opt_ PUSHORT pusMiniVersion,_Reserved_ PVOID pExtendedParameter)
BOOL WINAPI advapi32.EncryptFile(_In_ LPCTSTR lpFileName)
BOOL WINAPI advapi32.EncryptFileW(_In_ LPCTSTR lpFileName)
BOOL WINAPI advapi32.EncryptFileA(_In_ LPCTSTR lpFileName)
DWORD WINAPI None.ImportCallback(_In_ PBYTE pbData,_In_opt_ PVOID pvCallbackContext,_Inout_ PULONG ulLength)
HFILE WINAPI kernel32.OpenFile(_In_ LPCSTR lpFileName,_Out_ LPOFSTRUCT lpReOpenBuff,_In_ UINT uStyle)
BOOL WINAPI kernel32.WriteFileGather(_In_ HANDLE hFile,_In_ FILE_SEGMENT_ELEMENT aSegmentArray[],_In_ DWORD nNumberOfBytesToWrite,_Reserved_ LPDWORD lpReserved,_Inout_ LPOVERLAPPED lpOverlapped)
DWORD WINAPI advapi32.RemoveUsersFromEncryptedFile(_In_ LPCWSTR lpFileName,_In_ PENCRYPTION_CERTIFICATE_HASH_LIST pHashes)
BOOL WINAPI kernel32.ReplaceFile(_In_ LPCTSTR lpReplacedFileName,_In_ LPCTSTR lpReplacementFileName,_In_opt_ LPCTSTR lpBackupFileName,_In_ DWORD dwReplaceFlags,_Reserved_ LPVOID lpExclude,_Reserved_ LPVOID lpReserved)
BOOL WINAPI kernel32.ReplaceFileW(_In_ LPCTSTR lpReplacedFileName,_In_ LPCTSTR lpReplacementFileName,_In_opt_ LPCTSTR lpBackupFileName,_In_ DWORD dwReplaceFlags,_Reserved_ LPVOID lpExclude,_Reserved_ LPVOID lpReserved)
BOOL WINAPI kernel32.ReplaceFileA(_In_ LPCTSTR lpReplacedFileName,_In_ LPCTSTR lpReplacementFileName,_In_opt_ LPCTSTR lpBackupFileName,_In_ DWORD dwReplaceFlags,_Reserved_ LPVOID lpExclude,_Reserved_ LPVOID lpReserved)
BOOL WINAPI kernel32.SetFileInformationByHandle(_In_ HANDLE hFile,_In_ FILE_INFO_BY_HANDLE_CLASS FileInformationClass,_In_ LPVOID lpFileInformation,_In_ DWORD dwBufferSize)
BOOL WINAPI kernel32.MoveFileWithProgress(_In_ LPCTSTR lpExistingFileName,_In_opt_ LPCTSTR lpNewFileName,_In_opt_ LPPROGRESS_ROUTINE lpProgressRoutine,_In_opt_ LPVOID lpData,_In_ DWORD dwFlags)
BOOL WINAPI kernel32.MoveFileWithProgressW(_In_ LPCTSTR lpExistingFileName,_In_opt_ LPCTSTR lpNewFileName,_In_opt_ LPPROGRESS_ROUTINE lpProgressRoutine,_In_opt_ LPVOID lpData,_In_ DWORD dwFlags)
BOOL WINAPI kernel32.MoveFileWithProgressA(_In_ LPCTSTR lpExistingFileName,_In_opt_ LPCTSTR lpNewFileName,_In_opt_ LPPROGRESS_ROUTINE lpProgressRoutine,_In_opt_ LPVOID lpData,_In_ DWORD dwFlags)
BOOL WINAPI kernel32.SetFileShortName(_In_ HANDLE hFile,_In_ LPCTSTR lpShortName)
BOOL WINAPI kernel32.SetFileShortNameW(_In_ HANDLE hFile,_In_ LPCTSTR lpShortName)
BOOL WINAPI kernel32.SetFileShortNameA(_In_ HANDLE hFile,_In_ LPCTSTR lpShortName)
BOOL WINAPI kernel32.MoveFileEx(_In_ LPCTSTR lpExistingFileName,_In_opt_ LPCTSTR lpNewFileName,_In_ DWORD dwFlags)
BOOL WINAPI kernel32.MoveFileExW(_In_ LPCTSTR lpExistingFileName,_In_opt_ LPCTSTR lpNewFileName,_In_ DWORD dwFlags)
BOOL WINAPI kernel32.MoveFileExA(_In_ LPCTSTR lpExistingFileName,_In_opt_ LPCTSTR lpNewFileName,_In_ DWORD dwFlags)
HANDLE WINAPI kernel32.FindFirstFileEx(_In_ LPCTSTR lpFileName,_In_ FINDEX_INFO_LEVELS fInfoLevelId,_Out_ LPVOID lpFindFileData,_In_ FINDEX_SEARCH_OPS fSearchOp,_Reserved_ LPVOID lpSearchFilter,_In_ DWORD dwAdditionalFlags)
HANDLE WINAPI kernel32.FindFirstFileExW(_In_ LPCTSTR lpFileName,_In_ FINDEX_INFO_LEVELS fInfoLevelId,_Out_ LPVOID lpFindFileData,_In_ FINDEX_SEARCH_OPS fSearchOp,_Reserved_ LPVOID lpSearchFilter,_In_ DWORD dwAdditionalFlags)
HANDLE WINAPI kernel32.FindFirstFileExA(_In_ LPCTSTR lpFileName,_In_ FINDEX_INFO_LEVELS fInfoLevelId,_Out_ LPVOID lpFindFileData,_In_ FINDEX_SEARCH_OPS fSearchOp,_Reserved_ LPVOID lpSearchFilter,_In_ DWORD dwAdditionalFlags)
BOOL WINAPI kernel32.DeleteFileTransacted(_In_ LPCTSTR lpFileName,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.DeleteFileTransactedW(_In_ LPCTSTR lpFileName,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.DeleteFileTransactedA(_In_ LPCTSTR lpFileName,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.GetFileInformationByHandleEx(_In_ HANDLE hFile,_In_ FILE_INFO_BY_HANDLE_CLASS FileInformationClass,_Out_ LPVOID lpFileInformation,_In_ DWORD dwBufferSize)
BOOL WINAPI kernel32.GetBinaryType(_In_ LPCTSTR lpApplicationName,_Out_ LPDWORD lpBinaryType)
BOOL WINAPI kernel32.GetBinaryTypeW(_In_ LPCTSTR lpApplicationName,_Out_ LPDWORD lpBinaryType)
BOOL WINAPI kernel32.GetBinaryTypeA(_In_ LPCTSTR lpApplicationName,_Out_ LPDWORD lpBinaryType)
BOOL WINAPI kernel32.GetOverlappedResult(_In_ HANDLE hFile,_In_ LPOVERLAPPED lpOverlapped,_Out_ LPDWORD lpNumberOfBytesTransferred,_In_ BOOL bWait)
BOOL WINAPI kernel32.UnmapViewOfFile(_In_ LPCVOID lpBaseAddress)
BOOL WINAPI wofutil.WofShouldCompressBinaries(_In_ LPCWSTR Volume,_Out_ PULONG Algorithm)
BOOL None None.HasOverlappedIoCompleted(LPOVERLAPPED lpOverlapped None)
HANDLE WINAPI kernel32.CreateIoCompletionPort(_In_ HANDLE FileHandle,_In_opt_ HANDLE ExistingCompletionPort,_In_ ULONG_PTR CompletionKey,_In_ DWORD NumberOfConcurrentThreads)
BOOL WINAPI kernel32.CreateDirectory(_In_ LPCTSTR lpPathName,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes)
BOOL WINAPI kernel32.CreateDirectoryW(_In_ LPCTSTR lpPathName,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes)
BOOL WINAPI kernel32.CreateDirectoryA(_In_ LPCTSTR lpPathName,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes)
PEXCEPTION_ROUTINE WINAPI kernel32.RtlVirtualUnwind(_In_ HandlerType None,_In_ ImageBase None,_In_ ControlPC None,_In_ FunctionEntry None,_Inout_ ContextRecord None,_Out_ InFunction None,_Out_ EstablisherFrame None,_Inout_opt_ ContextPointers None)
BOOL None kernel32.SetThreadErrorMode(_In_ DWORD dwNewMode,_Out_ LPDWORD lpOldMode)
HRESULT WINAPI wofutil.WofWimEnumFiles(_In_ PCWSTR VolumeName,_In_ LARGE_INTEGER DataSourceId,_In_ WofEnumFilesProc EnumProc,_In_opt_ PVOID UserData)
BOOL WINAPI kernel32.GetDiskFreeSpace(_In_ LPCTSTR lpRootPathName,_Out_ LPDWORD lpSectorsPerCluster,_Out_ LPDWORD lpBytesPerSector,_Out_ LPDWORD lpNumberOfFreeClusters,_Out_ LPDWORD lpTotalNumberOfClusters)
BOOL WINAPI kernel32.GetDiskFreeSpaceW(_In_ LPCTSTR lpRootPathName,_Out_ LPDWORD lpSectorsPerCluster,_Out_ LPDWORD lpBytesPerSector,_Out_ LPDWORD lpNumberOfFreeClusters,_Out_ LPDWORD lpTotalNumberOfClusters)
BOOL WINAPI kernel32.GetDiskFreeSpaceA(_In_ LPCTSTR lpRootPathName,_Out_ LPDWORD lpSectorsPerCluster,_Out_ LPDWORD lpBytesPerSector,_Out_ LPDWORD lpNumberOfFreeClusters,_Out_ LPDWORD lpTotalNumberOfClusters)
BOOL WINAPI kernel32.GetFileAttributesEx(_In_ LPCTSTR lpFileName,_In_ GET_FILEEX_INFO_LEVELS fInfoLevelId,_Out_ LPVOID lpFileInformation)
BOOL WINAPI kernel32.GetFileAttributesExW(_In_ LPCTSTR lpFileName,_In_ GET_FILEEX_INFO_LEVELS fInfoLevelId,_Out_ LPVOID lpFileInformation)
BOOL WINAPI kernel32.GetFileAttributesExA(_In_ LPCTSTR lpFileName,_In_ GET_FILEEX_INFO_LEVELS fInfoLevelId,_Out_ LPVOID lpFileInformation)
DWORD WINAPI kernel32.GetCurrentDirectory(_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer)
DWORD WINAPI kernel32.GetCurrentDirectoryW(_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer)
DWORD WINAPI kernel32.GetCurrentDirectoryA(_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer)
BOOL WINAPI kernel32.ReadFileEx(_In_ HANDLE hFile,_Out_opt_ LPVOID lpBuffer,_In_ DWORD nNumberOfBytesToRead,_Inout_ LPOVERLAPPED lpOverlapped,_In_ LPOVERLAPPED_COMPLETION_ROUTINE lpCompletionRoutine)
ULONG WINAPI ntdll.RtlNtStatusToDosError(_In_ NTSTATUS Status)
BOOL WINAPI kernel32.GetVolumeInformation(_In_opt_ LPCTSTR lpRootPathName,_Out_opt_ LPTSTR lpVolumeNameBuffer,_In_ DWORD nVolumeNameSize,_Out_opt_ LPDWORD lpVolumeSerialNumber,_Out_opt_ LPDWORD lpMaximumComponentLength,_Out_opt_ LPDWORD lpFileSystemFlags,_Out_opt_ LPTSTR lpFileSystemNameBuffer,_In_ DWORD nFileSystemNameSize)
BOOL WINAPI kernel32.GetVolumeInformationW(_In_opt_ LPCTSTR lpRootPathName,_Out_opt_ LPTSTR lpVolumeNameBuffer,_In_ DWORD nVolumeNameSize,_Out_opt_ LPDWORD lpVolumeSerialNumber,_Out_opt_ LPDWORD lpMaximumComponentLength,_Out_opt_ LPDWORD lpFileSystemFlags,_Out_opt_ LPTSTR lpFileSystemNameBuffer,_In_ DWORD nFileSystemNameSize)
BOOL WINAPI kernel32.GetVolumeInformationA(_In_opt_ LPCTSTR lpRootPathName,_Out_opt_ LPTSTR lpVolumeNameBuffer,_In_ DWORD nVolumeNameSize,_Out_opt_ LPDWORD lpVolumeSerialNumber,_Out_opt_ LPDWORD lpMaximumComponentLength,_Out_opt_ LPDWORD lpFileSystemFlags,_Out_opt_ LPTSTR lpFileSystemNameBuffer,_In_ DWORD nFileSystemNameSize)
BOOL WINAPI kernel32.MoveFileTransacted(_In_ LPCTSTR lpExistingFileName,_In_opt_ LPCTSTR lpNewFileName,_In_opt_ LPPROGRESS_ROUTINE lpProgressRoutine,_In_opt_ LPVOID lpData,_In_ DWORD dwFlags,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.MoveFileTransactedW(_In_ LPCTSTR lpExistingFileName,_In_opt_ LPCTSTR lpNewFileName,_In_opt_ LPPROGRESS_ROUTINE lpProgressRoutine,_In_opt_ LPVOID lpData,_In_ DWORD dwFlags,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.MoveFileTransactedA(_In_ LPCTSTR lpExistingFileName,_In_opt_ LPCTSTR lpNewFileName,_In_opt_ LPPROGRESS_ROUTINE lpProgressRoutine,_In_opt_ LPVOID lpData,_In_ DWORD dwFlags,_In_ HANDLE hTransaction)
UINT WINAPI kernel32.SetErrorMode(_In_ UINT uMode)
BOOL WINAPI kernel32.CloseHandle(_In_ HANDLE hObject)
BOOL WINAPI kernel32.SetEndOfFile(_In_ HANDLE hFile)
DWORD CALLBACK None.CopyProgressRoutine(_In_ LARGE_INTEGER TotalFileSize,_In_ LARGE_INTEGER TotalBytesTransferred,_In_ LARGE_INTEGER StreamSize,_In_ LARGE_INTEGER StreamBytesTransferred,_In_ DWORD dwStreamNumber,_In_ DWORD dwCallbackReason,_In_ HANDLE hSourceFile,_In_ HANDLE hDestinationFile,_In_opt_ LPVOID lpData)
BOOL WINAPI kernel32.Wow64DisableWow64FsRedirection(_Out_ PVOID *OldValue)
BOOL PASCAL mswsock.TransmitFile(SOCKET hSocket None,HANDLE hFile None,DWORD nNumberOfBytesToWrite None,DWORD nNumberOfBytesPerSend None,LPOVERLAPPED lpOverlapped None,LPTRANSMIT_FILE_BUFFERS lpTransmitBuffers None,DWORD dwFlags None)
VOID CALLBACK None.FileIOCompletionRoutine(_In_ DWORD dwErrorCode,_In_ DWORD dwNumberOfBytesTransfered,_Inout_ LPOVERLAPPED lpOverlapped)
HRESULT WINAPI kernel32.CopyFile2(_In_ PCWSTR pwszExistingFileName,_In_ PCWSTR pwszNewFileName,_In_opt_ COPYFILE2_EXTENDED_PARAMETERS *pExtendedParameters)
DWORD WINAPI kernel32.FormatMessage(_In_ DWORD dwFlags,_In_opt_ LPCVOID lpSource,_In_ DWORD dwMessageId,_In_ DWORD dwLanguageId,_Out_ LPTSTR lpBuffer,_In_ DWORD nSize,_In_opt_ va_list *Arguments)
DWORD WINAPI kernel32.FormatMessageW(_In_ DWORD dwFlags,_In_opt_ LPCVOID lpSource,_In_ DWORD dwMessageId,_In_ DWORD dwLanguageId,_Out_ LPTSTR lpBuffer,_In_ DWORD nSize,_In_opt_ va_list *Arguments)
DWORD WINAPI kernel32.FormatMessageA(_In_ DWORD dwFlags,_In_opt_ LPCVOID lpSource,_In_ DWORD dwMessageId,_In_ DWORD dwLanguageId,_Out_ LPTSTR lpBuffer,_In_ DWORD nSize,_In_opt_ va_list *Arguments)
BOOL WINAPI kernel32.GetVolumeNameForVolumeMountPoint(_In_ LPCTSTR lpszVolumeMountPoint,_Out_ LPTSTR lpszVolumeName,_In_ DWORD cchBufferLength)
BOOL WINAPI kernel32.GetVolumeNameForVolumeMountPointW(_In_ LPCTSTR lpszVolumeMountPoint,_Out_ LPTSTR lpszVolumeName,_In_ DWORD cchBufferLength)
BOOL WINAPI kernel32.GetVolumeNameForVolumeMountPointA(_In_ LPCTSTR lpszVolumeMountPoint,_Out_ LPTSTR lpszVolumeName,_In_ DWORD cchBufferLength)
BOOL WINAPI kernel32.SetFileValidData(_In_ HANDLE hFile,_In_ LONGLONG ValidDataLength)
BOOL WINAPI user32.FlashWindow(_In_ HWND hWnd,_In_ BOOL bInvert)
DWORD WINAPI kernel32.WaitForSingleObjectEx(_In_ HANDLE hHandle,_In_ DWORD dwMilliseconds,_In_ BOOL bAlertable)
BOOL WINAPI kernel32.SetFileAttributes(_In_ LPCTSTR lpFileName,_In_ DWORD dwFileAttributes)
BOOL WINAPI kernel32.SetFileAttributesW(_In_ LPCTSTR lpFileName,_In_ DWORD dwFileAttributes)
BOOL WINAPI kernel32.SetFileAttributesA(_In_ LPCTSTR lpFileName,_In_ DWORD dwFileAttributes)
BOOL WINAPI kernel32.DeleteFileTransacted(_In_ LPCTSTR lpFileName,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.DeleteFileTransactedW(_In_ LPCTSTR lpFileName,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.DeleteFileTransactedA(_In_ LPCTSTR lpFileName,_In_ HANDLE hTransaction)
PVOID WINAPI kernel32.RtlLookupFunctionEntry(_In_ ULONGLONG ControlPc,_Out_ PULONGLONG ImageBase,_Out_ PULONGLONG TargetGp)
BOOL WINAPI kernel32.ReplaceFile(_In_ LPCTSTR lpReplacedFileName,_In_ LPCTSTR lpReplacementFileName,_In_opt_ LPCTSTR lpBackupFileName,_In_ DWORD dwReplaceFlags,_Reserved_ LPVOID lpExclude,_Reserved_ LPVOID lpReserved)
BOOL WINAPI kernel32.ReplaceFileW(_In_ LPCTSTR lpReplacedFileName,_In_ LPCTSTR lpReplacementFileName,_In_opt_ LPCTSTR lpBackupFileName,_In_ DWORD dwReplaceFlags,_Reserved_ LPVOID lpExclude,_Reserved_ LPVOID lpReserved)
BOOL WINAPI kernel32.ReplaceFileA(_In_ LPCTSTR lpReplacedFileName,_In_ LPCTSTR lpReplacementFileName,_In_opt_ LPCTSTR lpBackupFileName,_In_ DWORD dwReplaceFlags,_Reserved_ LPVOID lpExclude,_Reserved_ LPVOID lpReserved)
BOOL WINAPI user32.MessageBeep(_In_ UINT uType)
BOOL WINAPI kernel32.CreateDirectoryTransacted(_In_opt_ LPCTSTR lpTemplateDirectory,_In_ LPCTSTR lpNewDirectory,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.CreateDirectoryTransactedW(_In_opt_ LPCTSTR lpTemplateDirectory,_In_ LPCTSTR lpNewDirectory,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.CreateDirectoryTransactedA(_In_opt_ LPCTSTR lpTemplateDirectory,_In_ LPCTSTR lpNewDirectory,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ HANDLE hTransaction)
DWORD WINAPI kernel32.GetFileAttributes(_In_ LPCTSTR lpFileName)
DWORD WINAPI kernel32.GetFileAttributesW(_In_ LPCTSTR lpFileName)
DWORD WINAPI kernel32.GetFileAttributesA(_In_ LPCTSTR lpFileName)
BOOL WINAPI kernel32.SetCurrentDirectory(_In_ LPCTSTR lpPathName)
BOOL WINAPI kernel32.SetCurrentDirectoryW(_In_ LPCTSTR lpPathName)
BOOL WINAPI kernel32.SetCurrentDirectoryA(_In_ LPCTSTR lpPathName)
BOOL None kernel32.BackupWrite(_In_ HANDLE hFile,_In_ LPBYTE lpBuffer,_In_ DWORD nNumberOfBytesToWrite,_Out_ LPDWORD lpNumberOfBytesWritten,_In_ BOOL bAbort,_In_ BOOL bProcessSecurity,_Out_ LPVOID *lpContext)
BOOL WINAPI kernel32.WritePrivateProfileString(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ LPCTSTR lpString,_In_ LPCTSTR lpFileName)
BOOL WINAPI kernel32.WritePrivateProfileStringW(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ LPCTSTR lpString,_In_ LPCTSTR lpFileName)
BOOL WINAPI kernel32.WritePrivateProfileStringA(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ LPCTSTR lpString,_In_ LPCTSTR lpFileName)
HRESULT WINAPI wofutil.WofWimUpdateEntry(_In_ PCWSTR VolumeName,_In_ LARGE_INTEGER DataSourceId,_In_ PCWSTR NewWimPath)
HRESULT WINAPI wofutil.WofGetDriverVersion(_In_ HANDLE FileOrVolumeHandle,_In_ ULONG Provider,_Out_ PULONG WofVersion)
BOOL WINAPI kernel32.CancelIo(_In_ HANDLE hFile)
BOOL WINAPI kernel32.CopyFileEx(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName,_In_opt_ LPPROGRESS_ROUTINE lpProgressRoutine,_In_opt_ LPVOID lpData,_In_opt_ LPBOOL pbCancel,_In_ DWORD dwCopyFlags)
BOOL WINAPI kernel32.CopyFileExW(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName,_In_opt_ LPPROGRESS_ROUTINE lpProgressRoutine,_In_opt_ LPVOID lpData,_In_opt_ LPBOOL pbCancel,_In_ DWORD dwCopyFlags)
BOOL WINAPI kernel32.CopyFileExA(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName,_In_opt_ LPPROGRESS_ROUTINE lpProgressRoutine,_In_opt_ LPVOID lpData,_In_opt_ LPBOOL pbCancel,_In_ DWORD dwCopyFlags)
DWORD WINAPI kernel32.GetFileType(_In_ HANDLE hFile)
HRESULT WINAPI wofutil.WofFileEnumFiles(_In_ PCWSTR VolumeName,_In_ ULONG Algorithm,_In_ WofEnumFilesProc EnumProc,_In_opt_ PVOID UserData)
BOOL None kernel32.BackupRead(_In_ HANDLE hFile,_Out_ LPBYTE lpBuffer,_In_ DWORD nNumberOfBytesToRead,_Out_ LPDWORD lpNumberOfBytesRead,_In_ BOOL bAbort,_In_ BOOL bProcessSecurity,_Out_ LPVOID *lpContext)
ULONG WINAPI ntdll.RtlNtStatusToDosErrorNoTeb(_In_ NTSTATUS Status)
BOOL WINAPI kernel32.MoveFileEx(_In_ LPCTSTR lpExistingFileName,_In_opt_ LPCTSTR lpNewFileName,_In_ DWORD dwFlags)
BOOL WINAPI kernel32.MoveFileExW(_In_ LPCTSTR lpExistingFileName,_In_opt_ LPCTSTR lpNewFileName,_In_ DWORD dwFlags)
BOOL WINAPI kernel32.MoveFileExA(_In_ LPCTSTR lpExistingFileName,_In_opt_ LPCTSTR lpNewFileName,_In_ DWORD dwFlags)
PVOID WINAPI kernel32.RtlPcToFileHeader(_In_ PVOID PcValue,_Out_ PVOID *BaseOfImage)
BOOL WINAPI kernel32.UnlockFileEx(_In_ HANDLE hFile,_Reserved_ DWORD dwReserved,_In_ DWORD nNumberOfBytesToUnlockLow,_In_ DWORD nNumberOfBytesToUnlockHigh,_Inout_ LPOVERLAPPED lpOverlapped)
DWORD WINAPI advapi32.WriteEncryptedFileRaw(_In_ PFE_IMPORT_FUNC pfImportCallback,_In_opt_ PVOID pvCallbackContext,_In_ PVOID pvContext)
BOOL WINAPI kernel32.SetFileAttributesTransacted(_In_ LPCTSTR lpFileName,_In_ DWORD dwFileAttributes,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.SetFileAttributesTransactedW(_In_ LPCTSTR lpFileName,_In_ DWORD dwFileAttributes,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.SetFileAttributesTransactedA(_In_ LPCTSTR lpFileName,_In_ DWORD dwFileAttributes,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.CloseHandle(_In_ HANDLE hObject)
BOOL WINAPI advapi32.EncryptionDisable(_In_ LPCWSTR DirPath,_In_ BOOL Disable)
BOOL WINAPI kernel32.CloseHandle(_In_ HANDLE hObject)
BOOL WINAPI kernel32.CloseHandle(_In_ HANDLE hObject)
BOOL WINAPI kernel32.ReadFileScatter(_In_ HANDLE hFile,_In_ FILE_SEGMENT_ELEMENT aSegmentArray[],_In_ DWORD nNumberOfBytesToRead,_Reserved_ LPDWORD lpReserved,_Inout_ LPOVERLAPPED lpOverlapped)
BOOL WINAPI kernel32.WaitCommEvent(_In_ HANDLE hFile,_Out_ LPDWORD lpEvtMask,_In_ LPOVERLAPPED lpOverlapped)
DWORD WINAPI kernel32.SearchPath(_In_opt_ LPCTSTR lpPath,_In_ LPCTSTR lpFileName,_In_opt_ LPCTSTR lpExtension,_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer,_Out_opt_ LPTSTR *lpFilePart)
DWORD WINAPI kernel32.SearchPathW(_In_opt_ LPCTSTR lpPath,_In_ LPCTSTR lpFileName,_In_opt_ LPCTSTR lpExtension,_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer,_Out_opt_ LPTSTR *lpFilePart)
DWORD WINAPI kernel32.SearchPathA(_In_opt_ LPCTSTR lpPath,_In_ LPCTSTR lpFileName,_In_opt_ LPCTSTR lpExtension,_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer,_Out_opt_ LPTSTR *lpFilePart)
BOOL WINAPI kernel32.CloseHandle(_In_ HANDLE hObject)
BOOL WINAPI kernel32.GetVolumeNameForVolumeMountPoint(_In_ LPCTSTR lpszVolumeMountPoint,_Out_ LPTSTR lpszVolumeName,_In_ DWORD cchBufferLength)
BOOL WINAPI kernel32.GetVolumeNameForVolumeMountPointW(_In_ LPCTSTR lpszVolumeMountPoint,_Out_ LPTSTR lpszVolumeName,_In_ DWORD cchBufferLength)
BOOL WINAPI kernel32.GetVolumeNameForVolumeMountPointA(_In_ LPCTSTR lpszVolumeMountPoint,_Out_ LPTSTR lpszVolumeName,_In_ DWORD cchBufferLength)
BOOL WINAPI kernel32.CloseHandle(_In_ HANDLE hObject)
BOOL WINAPI user32.FlashWindowEx(_In_ PFLASHWINFO pfwi)
BOOL None mswsock.AcceptEx(_In_ SOCKET sListenSocket,_In_ SOCKET sAcceptSocket,_In_ PVOID lpOutputBuffer,_In_ DWORD dwReceiveDataLength,_In_ DWORD dwLocalAddressLength,_In_ DWORD dwRemoteAddressLength,_Out_ LPDWORD lpdwBytesReceived,_In_ LPOVERLAPPED lpOverlapped)
HMODULE WINAPI kernel32.LoadLibrary(_In_ LPCTSTR lpFileName)
HMODULE WINAPI kernel32.LoadLibraryW(_In_ LPCTSTR lpFileName)
HMODULE WINAPI kernel32.LoadLibraryA(_In_ LPCTSTR lpFileName)
BOOL WINAPI kernel32.FindNextStreamW(_In_ HANDLE hFindStream,_Out_ LPVOID lpFindStreamData)
DWORD WINAPI None.ExportCallback(_In_ PBYTE pbData,_In_opt_ PVOID pvCallbackContext,_In_ ULONG ulLength)
DWORD WINAPI kernel32.GetFileSize(_In_ HANDLE hFile,_Out_opt_ LPDWORD lpFileSizeHigh)
BOOL WINAPI kernel32.DefineDosDevice(_In_ DWORD dwFlags,_In_ LPCTSTR lpDeviceName,_In_opt_ LPCTSTR lpTargetPath)
BOOL WINAPI kernel32.DefineDosDeviceW(_In_ DWORD dwFlags,_In_ LPCTSTR lpDeviceName,_In_opt_ LPCTSTR lpTargetPath)
BOOL WINAPI kernel32.DefineDosDeviceA(_In_ DWORD dwFlags,_In_ LPCTSTR lpDeviceName,_In_opt_ LPCTSTR lpTargetPath)
BOOL WINAPI kernel32.GetVolumeNameForVolumeMountPoint(_In_ LPCTSTR lpszVolumeMountPoint,_Out_ LPTSTR lpszVolumeName,_In_ DWORD cchBufferLength)
BOOL WINAPI kernel32.GetVolumeNameForVolumeMountPointW(_In_ LPCTSTR lpszVolumeMountPoint,_Out_ LPTSTR lpszVolumeName,_In_ DWORD cchBufferLength)
BOOL WINAPI kernel32.GetVolumeNameForVolumeMountPointA(_In_ LPCTSTR lpszVolumeMountPoint,_Out_ LPTSTR lpszVolumeName,_In_ DWORD cchBufferLength)
BOOL WINAPI kernel32.CreateHardLinkTransacted(_In_ LPCTSTR lpFileName,_In_ LPCTSTR lpExistingFileName,_Reserved_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.CreateHardLinkTransactedW(_In_ LPCTSTR lpFileName,_In_ LPCTSTR lpExistingFileName,_Reserved_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.CreateHardLinkTransactedA(_In_ LPCTSTR lpFileName,_In_ LPCTSTR lpExistingFileName,_Reserved_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.CancelSynchronousIo(_In_ HANDLE hThread)
HRESULT None None.HRESULT_FROM_WIN32(DWORD x None)
USHORT WINAPI kernel32.CaptureStackBackTrace(_In_ ULONG FramesToSkip,_In_ ULONG FramesToCapture,_Out_ PVOID *BackTrace,_Out_opt_ PULONG BackTraceHash)
DWORD WINAPI advapi32.ReadEncryptedFileRaw(_In_ PFE_EXPORT_FUNC pfExportCallback,_In_opt_ PVOID pvCallbackContext,_In_ PVOID pvContext)
BOOL WINAPI kernel32.Beep(_In_ DWORD dwFreq,_In_ DWORD dwDuration)
BOOL WINAPI kernel32.GetFileAttributesTransacted(_In_ LPCTSTR lpFileName,_In_ GET_FILEEX_INFO_LEVELS fInfoLevelId,_Out_ LPVOID lpFileInformation,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.GetFileAttributesTransactedW(_In_ LPCTSTR lpFileName,_In_ GET_FILEEX_INFO_LEVELS fInfoLevelId,_Out_ LPVOID lpFileInformation,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.GetFileAttributesTransactedA(_In_ LPCTSTR lpFileName,_In_ GET_FILEEX_INFO_LEVELS fInfoLevelId,_Out_ LPVOID lpFileInformation,_In_ HANDLE hTransaction)
HANDLE WINAPI kernel32.FindFirstFileEx(_In_ LPCTSTR lpFileName,_In_ FINDEX_INFO_LEVELS fInfoLevelId,_Out_ LPVOID lpFindFileData,_In_ FINDEX_SEARCH_OPS fSearchOp,_Reserved_ LPVOID lpSearchFilter,_In_ DWORD dwAdditionalFlags)
HANDLE WINAPI kernel32.FindFirstFileExW(_In_ LPCTSTR lpFileName,_In_ FINDEX_INFO_LEVELS fInfoLevelId,_Out_ LPVOID lpFindFileData,_In_ FINDEX_SEARCH_OPS fSearchOp,_Reserved_ LPVOID lpSearchFilter,_In_ DWORD dwAdditionalFlags)
HANDLE WINAPI kernel32.FindFirstFileExA(_In_ LPCTSTR lpFileName,_In_ FINDEX_INFO_LEVELS fInfoLevelId,_Out_ LPVOID lpFindFileData,_In_ FINDEX_SEARCH_OPS fSearchOp,_Reserved_ LPVOID lpSearchFilter,_In_ DWORD dwAdditionalFlags)
BOOL WINAPI kernel32.FindNextFileNameW(_In_ HANDLE hFindStream,_Inout_ LPDWORD StringLength,_Inout_ PWCHAR LinkName)
BOOL WINAPI kernel32.SetFilePointerEx(_In_ HANDLE hFile,_In_ LARGE_INTEGER liDistanceToMove,_Out_opt_ PLARGE_INTEGER lpNewFilePointer,_In_ DWORD dwMoveMethod)
LRESULT CALLBACK atlthunk.AtlThunk(_In_ HWND hwnd,_In_ UINT uMsg,_In_ WPARAM wParam,_In_ LPARAM lParam)
DWORD None kernel32.GetTapePosition(_In_ HANDLE hDevice,_In_ DWORD dwPositionType,_Out_ LPDWORD lpdwPartition,_Out_ LPDWORD lpdwOffsetLow,_Out_ LPDWORD lpdwOffsetHigh)
DWORD WINAPI kernel32.GetShortPathName(_In_ LPCTSTR lpszLongPath,_Out_ LPTSTR lpszShortPath,_In_ DWORD cchBuffer)
DWORD WINAPI kernel32.GetShortPathNameW(_In_ LPCTSTR lpszLongPath,_Out_ LPTSTR lpszShortPath,_In_ DWORD cchBuffer)
DWORD WINAPI kernel32.GetShortPathNameA(_In_ LPCTSTR lpszLongPath,_Out_ LPTSTR lpszShortPath,_In_ DWORD cchBuffer)
BOOL WINAPI kernel32.GetVolumePathName(_In_ LPCTSTR lpszFileName,_Out_ LPTSTR lpszVolumePathName,_In_ DWORD cchBufferLength)
BOOL WINAPI kernel32.GetVolumePathNameW(_In_ LPCTSTR lpszFileName,_Out_ LPTSTR lpszVolumePathName,_In_ DWORD cchBufferLength)
BOOL WINAPI kernel32.GetVolumePathNameA(_In_ LPCTSTR lpszFileName,_Out_ LPTSTR lpszVolumePathName,_In_ DWORD cchBufferLength)
DWORD WINAPI kernel32.GetProfileString(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ LPCTSTR lpDefault,_Out_ LPTSTR lpReturnedString,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetProfileStringW(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ LPCTSTR lpDefault,_Out_ LPTSTR lpReturnedString,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetProfileStringA(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ LPCTSTR lpDefault,_Out_ LPTSTR lpReturnedString,_In_ DWORD nSize)
INT None mswsock.RIONotify(_In_ RIO_CQ CQ)
BOOL WINAPI kernel32.SetFileBandwidthReservation(_In_ HANDLE hFile,_In_ DWORD nPeriodMilliseconds,_In_ DWORD nBytesPerPeriod,_In_ BOOL bDiscardable,_Out_ LPDWORD lpTransferSize,_Out_ LPDWORD lpNumOutstandingRequests)
DWORD WINAPI advapi32.OpenEncryptedFileRaw(_In_ LPCTSTR lpFileName,_In_ ULONG ulFlags,_Out_ PVOID *pvContext)
DWORD WINAPI advapi32.OpenEncryptedFileRawW(_In_ LPCTSTR lpFileName,_In_ ULONG ulFlags,_Out_ PVOID *pvContext)
DWORD WINAPI advapi32.OpenEncryptedFileRawA(_In_ LPCTSTR lpFileName,_In_ ULONG ulFlags,_Out_ PVOID *pvContext)
LPVOID WINAPI kernel32.MapViewOfFileEx(_In_ HANDLE hFileMappingObject,_In_ DWORD dwDesiredAccess,_In_ DWORD dwFileOffsetHigh,_In_ DWORD dwFileOffsetLow,_In_ SIZE_T dwNumberOfBytesToMap,_In_opt_ LPVOID lpBaseAddress)
BOOL WINAPI advapi32.LookupAccountName(_In_opt_ LPCTSTR lpSystemName,_In_ LPCTSTR lpAccountName,_Out_opt_ PSID Sid,_Inout_ LPDWORD cbSid,_Out_opt_ LPTSTR ReferencedDomainName,_Inout_ LPDWORD cchReferencedDomainName,_Out_ PSID_NAME_USE peUse)
BOOL WINAPI advapi32.LookupAccountNameW(_In_opt_ LPCTSTR lpSystemName,_In_ LPCTSTR lpAccountName,_Out_opt_ PSID Sid,_Inout_ LPDWORD cbSid,_Out_opt_ LPTSTR ReferencedDomainName,_Inout_ LPDWORD cchReferencedDomainName,_Out_ PSID_NAME_USE peUse)
BOOL WINAPI advapi32.LookupAccountNameA(_In_opt_ LPCTSTR lpSystemName,_In_ LPCTSTR lpAccountName,_Out_opt_ PSID Sid,_Inout_ LPDWORD cbSid,_Out_opt_ LPTSTR ReferencedDomainName,_Inout_ LPDWORD cchReferencedDomainName,_Out_ PSID_NAME_USE peUse)
BOOL WINAPI kernel32.DisableThreadLibraryCalls(_In_ HMODULE hModule)
BOOL None kernel32.BackupRead(_In_ HANDLE hFile,_Out_ LPBYTE lpBuffer,_In_ DWORD nNumberOfBytesToRead,_Out_ LPDWORD lpNumberOfBytesRead,_In_ BOOL bAbort,_In_ BOOL bProcessSecurity,_Out_ LPVOID *lpContext)
BOOL WINAPI kernel32.EscapeCommFunction(_In_ HANDLE hFile,_In_ DWORD dwFunc)
LONG WINAPI advapi32.RegCreateKey(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_Out_ PHKEY phkResult)
LONG WINAPI advapi32.RegCreateKeyW(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_Out_ PHKEY phkResult)
LONG WINAPI advapi32.RegCreateKeyA(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_Out_ PHKEY phkResult)
BOOL WINAPI kernel32.GetPrivateProfileStruct(_In_ LPCTSTR lpszSection,_In_ LPCTSTR lpszKey,_Out_ LPVOID lpStruct,_In_ UINT uSizeStruct,_In_ LPCTSTR szFile)
BOOL WINAPI kernel32.GetPrivateProfileStructW(_In_ LPCTSTR lpszSection,_In_ LPCTSTR lpszKey,_Out_ LPVOID lpStruct,_In_ UINT uSizeStruct,_In_ LPCTSTR szFile)
BOOL WINAPI kernel32.GetPrivateProfileStructA(_In_ LPCTSTR lpszSection,_In_ LPCTSTR lpszKey,_Out_ LPVOID lpStruct,_In_ UINT uSizeStruct,_In_ LPCTSTR szFile)
BOOL WINAPI kernel32.WriteFile(_In_ HANDLE hFile,_In_ LPCVOID lpBuffer,_In_ DWORD nNumberOfBytesToWrite,_Out_opt_ LPDWORD lpNumberOfBytesWritten,_Inout_opt_ LPOVERLAPPED lpOverlapped)
HLOCAL WINAPI kernel32.LocalFree(_In_ HLOCAL hMem)
BOOL WINAPI kernel32.SetCommTimeouts(_In_ HANDLE hFile,_In_ LPCOMMTIMEOUTS lpCommTimeouts)
DWORD WINAPI kernel32.GetTempPath(_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer)
DWORD WINAPI kernel32.GetTempPathW(_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer)
DWORD WINAPI kernel32.GetTempPathA(_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer)
BOOL None None.SUCCEEDED(HRESULT hr None)
DWORD None kernel32.CreateTapePartition(_In_ HANDLE hDevice,_In_ DWORD dwPartitionMethod,_In_ DWORD dwCount,_In_ DWORD dwSize)
BOOL WINAPI api-ms-win-core-libraryloader-l1-1-1.QueryOptionalDelayLoadedAPI(_In_ HMODULE hParentModule,_In_ LPCSTR lpDllName,_In_ LPCSTR lpProcName,_Reserved_ DWORD Reserved)
WORD None None.SCODE_FACILITY(SCODE sc None)
DWORD None None.SCODE_SEVERITY(SCODE sc None)
BOOL WINAPI advapi32.CreateProcessAsUser(_In_opt_ HANDLE hToken,_In_opt_ LPCTSTR lpApplicationName,_Inout_opt_ LPTSTR lpCommandLine,_In_opt_ LPSECURITY_ATTRIBUTES lpProcessAttributes,_In_opt_ LPSECURITY_ATTRIBUTES lpThreadAttributes,_In_ BOOL bInheritHandles,_In_ DWORD dwCreationFlags,_In_opt_ LPVOID lpEnvironment,_In_opt_ LPCTSTR lpCurrentDirectory,_In_ LPSTARTUPINFO lpStartupInfo,_Out_ LPPROCESS_INFORMATION lpProcessInformation)
BOOL WINAPI advapi32.CreateProcessAsUserW(_In_opt_ HANDLE hToken,_In_opt_ LPCTSTR lpApplicationName,_Inout_opt_ LPTSTR lpCommandLine,_In_opt_ LPSECURITY_ATTRIBUTES lpProcessAttributes,_In_opt_ LPSECURITY_ATTRIBUTES lpThreadAttributes,_In_ BOOL bInheritHandles,_In_ DWORD dwCreationFlags,_In_opt_ LPVOID lpEnvironment,_In_opt_ LPCTSTR lpCurrentDirectory,_In_ LPSTARTUPINFO lpStartupInfo,_Out_ LPPROCESS_INFORMATION lpProcessInformation)
BOOL WINAPI advapi32.CreateProcessAsUserA(_In_opt_ HANDLE hToken,_In_opt_ LPCTSTR lpApplicationName,_Inout_opt_ LPTSTR lpCommandLine,_In_opt_ LPSECURITY_ATTRIBUTES lpProcessAttributes,_In_opt_ LPSECURITY_ATTRIBUTES lpThreadAttributes,_In_ BOOL bInheritHandles,_In_ DWORD dwCreationFlags,_In_opt_ LPVOID lpEnvironment,_In_opt_ LPCTSTR lpCurrentDirectory,_In_ LPSTARTUPINFO lpStartupInfo,_Out_ LPPROCESS_INFORMATION lpProcessInformation)
BOOL WINAPI kernel32.CheckNameLegalDOS8Dot3(_In_ LPCTSTR lpName,_Out_opt_ LPSTR lpOemName,_In_ DWORD OemNameSize,_Out_opt_ PBOOL pbNameContainsSpaces,_Out_ PBOOL pbNameLegal)
BOOL WINAPI kernel32.CheckNameLegalDOS8Dot3W(_In_ LPCTSTR lpName,_Out_opt_ LPSTR lpOemName,_In_ DWORD OemNameSize,_Out_opt_ PBOOL pbNameContainsSpaces,_Out_ PBOOL pbNameLegal)
BOOL WINAPI kernel32.CheckNameLegalDOS8Dot3A(_In_ LPCTSTR lpName,_Out_opt_ LPSTR lpOemName,_In_ DWORD OemNameSize,_Out_opt_ PBOOL pbNameContainsSpaces,_Out_ PBOOL pbNameLegal)
LONG WINAPI advapi32.RegQueryValueEx(_In_ HKEY hKey,_In_opt_ LPCTSTR lpValueName,_Reserved_ LPDWORD lpReserved,_Out_opt_ LPDWORD lpType,_Out_opt_ LPBYTE lpData,_Inout_opt_ LPDWORD lpcbData)
LONG WINAPI advapi32.RegQueryValueExW(_In_ HKEY hKey,_In_opt_ LPCTSTR lpValueName,_Reserved_ LPDWORD lpReserved,_Out_opt_ LPDWORD lpType,_Out_opt_ LPBYTE lpData,_Inout_opt_ LPDWORD lpcbData)
LONG WINAPI advapi32.RegQueryValueExA(_In_ HKEY hKey,_In_opt_ LPCTSTR lpValueName,_Reserved_ LPDWORD lpReserved,_Out_opt_ LPDWORD lpType,_Out_opt_ LPBYTE lpData,_Inout_opt_ LPDWORD lpcbData)
BOOL WINAPI kernel32.VirtualProtectEx(_In_ HANDLE hProcess,_In_ LPVOID lpAddress,_In_ SIZE_T dwSize,_In_ DWORD flNewProtect,_Out_ PDWORD lpflOldProtect)
NTSTATUS None None.ZwFsControlFile(_In_ HANDLE FileHandle,_In_opt_ HANDLE Event,_In_opt_ PIO_APC_ROUTINE ApcRoutine,_In_opt_ PVOID ApcContext,_Out_ PIO_STATUS_BLOCK IoStatusBlock,_In_ ULONG FsControlCode,_In_opt_ PVOID InputBuffer,_In_ ULONG InputBufferLength,_Out_opt_ PVOID OutputBuffer,_In_ ULONG OutputBufferLength)
BOOL None mswsock.AcceptEx(_In_ SOCKET sListenSocket,_In_ SOCKET sAcceptSocket,_In_ PVOID lpOutputBuffer,_In_ DWORD dwReceiveDataLength,_In_ DWORD dwLocalAddressLength,_In_ DWORD dwRemoteAddressLength,_Out_ LPDWORD lpdwBytesReceived,_In_ LPOVERLAPPED lpOverlapped)
PSLIST_ENTRY WINAPI kernel32.InterlockedPushEntrySList(_Inout_ PSLIST_HEADER ListHead,_Inout_ PSLIST_ENTRY ListEntry)
BOOL None None.HasOverlappedIoCompleted(LPOVERLAPPED lpOverlapped None)
LONG WINAPI advapi32.RegLoadMUIString(_In_ HKEY hKey,_In_opt_ LPCTSTR pszValue,_Out_opt_ LPTSTR pszOutBuf,_In_ DWORD cbOutBuf,_Out_opt_ LPDWORD pcbData,_In_ DWORD Flags,_In_opt_ LPCTSTR pszDirectory)
LONG WINAPI advapi32.RegLoadMUIStringW(_In_ HKEY hKey,_In_opt_ LPCTSTR pszValue,_Out_opt_ LPTSTR pszOutBuf,_In_ DWORD cbOutBuf,_Out_opt_ LPDWORD pcbData,_In_ DWORD Flags,_In_opt_ LPCTSTR pszDirectory)
LONG WINAPI advapi32.RegLoadMUIStringA(_In_ HKEY hKey,_In_opt_ LPCTSTR pszValue,_Out_opt_ LPTSTR pszOutBuf,_In_ DWORD cbOutBuf,_Out_opt_ LPDWORD pcbData,_In_ DWORD Flags,_In_opt_ LPCTSTR pszDirectory)
DWORD WINAPI advapi32.QueryRecoveryAgentsOnEncryptedFile(_In_ LPCWSTR lpFileName,_Out_ PENCRYPTION_CERTIFICATE_HASH_LIST *pRecoveryAgents)
LONG WINAPI advapi32.RegQueryMultipleValues(_In_ HKEY hKey,_Out_ PVALENT val_list,_In_ DWORD num_vals,_Out_opt_ LPTSTR lpValueBuf,_Inout_opt_ LPDWORD ldwTotsize)
LONG WINAPI advapi32.RegQueryMultipleValuesW(_In_ HKEY hKey,_Out_ PVALENT val_list,_In_ DWORD num_vals,_Out_opt_ LPTSTR lpValueBuf,_Inout_opt_ LPDWORD ldwTotsize)
LONG WINAPI advapi32.RegQueryMultipleValuesA(_In_ HKEY hKey,_Out_ PVALENT val_list,_In_ DWORD num_vals,_Out_opt_ LPTSTR lpValueBuf,_Inout_opt_ LPDWORD ldwTotsize)
BOOL WINAPI kernel32.CommConfigDialog(_In_ LPCTSTR lpszName,_In_ HWND hWnd,_Inout_ LPCOMMCONFIG lpCC)
BOOL WINAPI kernel32.CommConfigDialogW(_In_ LPCTSTR lpszName,_In_ HWND hWnd,_Inout_ LPCOMMCONFIG lpCC)
BOOL WINAPI kernel32.CommConfigDialogA(_In_ LPCTSTR lpszName,_In_ HWND hWnd,_Inout_ LPCOMMCONFIG lpCC)
PSLIST_ENTRY WINAPI ntdll.RtlFirstEntrySList(_In_ PSLIST_HEADER ListHead)
BOOL WINAPI kernel32.DeleteVolumeMountPoint(_In_ LPCTSTR lpszVolumeMountPoint)
BOOL WINAPI kernel32.DeleteVolumeMountPointW(_In_ LPCTSTR lpszVolumeMountPoint)
BOOL WINAPI kernel32.DeleteVolumeMountPointA(_In_ LPCTSTR lpszVolumeMountPoint)
HANDLE WINAPI kernel32.FindFirstVolume(_Out_ LPTSTR lpszVolumeName,_In_ DWORD cchBufferLength)
HANDLE WINAPI kernel32.FindFirstVolumeW(_Out_ LPTSTR lpszVolumeName,_In_ DWORD cchBufferLength)
HANDLE WINAPI kernel32.FindFirstVolumeA(_Out_ LPTSTR lpszVolumeName,_In_ DWORD cchBufferLength)
BOOLEAN WINAPI kernel32.Wow64EnableWow64FsRedirection(_In_ BOOLEAN Wow64FsEnableRedirection)
BOOL WINAPI kernel32.RemoveDirectoryTransacted(_In_ LPCTSTR lpPathName,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.RemoveDirectoryTransactedW(_In_ LPCTSTR lpPathName,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.RemoveDirectoryTransactedA(_In_ LPCTSTR lpPathName,_In_ HANDLE hTransaction)
LPVOID WINAPI kernel32.LocalLock(_In_ HLOCAL hMem)
HMODULE WINAPI kernel32.LoadLibraryEx(_In_ LPCTSTR lpFileName,_Reserved_ HANDLE hFile,_In_ DWORD dwFlags)
HMODULE WINAPI kernel32.LoadLibraryExW(_In_ LPCTSTR lpFileName,_Reserved_ HANDLE hFile,_In_ DWORD dwFlags)
HMODULE WINAPI kernel32.LoadLibraryExA(_In_ LPCTSTR lpFileName,_Reserved_ HANDLE hFile,_In_ DWORD dwFlags)
HRESULT WINAPI wofutil.WofWimAddEntry(_In_ PCWSTR VolumeName,_In_ PCWSTR WimPath,_In_ DWORD WimType,_In_ DWORD WimIndex,_Out_ PLARGE_INTEGER DataSourceId)
HRESULT None None.StringCchPrintf(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszFormat,_In_ ... None)
HRESULT None None.StringCchPrintfW(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszFormat,_In_ ... None)
HRESULT None None.StringCchPrintfA(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszFormat,_In_ ... None)
BOOL WINAPI advapi32.AccessCheckByTypeResultList(_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_opt_ PSID PrincipalSelfSid,_In_ HANDLE ClientToken,_In_ DWORD DesiredAccess,_Inout_opt_ POBJECT_TYPE_LIST ObjectTypeList,_In_ DWORD ObjectTypeListLength,_Out_ PGENERIC_MAPPING GenericMapping,_Out_opt_ PPRIVILEGE_SET PrivilegeSet,_Inout_ LPDWORD PrivilegeSetLength,_Out_ LPDWORD GrantedAccessList,_Out_ LPDWORD AccessStatusList)
BOOL WINAPI kernel32.PurgeComm(_In_ HANDLE hFile,_In_ DWORD dwFlags)
PVOID WINAPI api-ms-win-core-memory-l1-1-5.MapViewOfFileNuma2(_In_ HANDLE FileMappingHandle,_In_ HANDLE ProcessHandle,_In_ ULONG64 Offset,_In_opt_ PVOID BaseAddress,_In_ SIZE_T ViewSize,_In_ ULONG AllocationType,_In_ ULONG PageProtection,_In_ ULONG PreferredNode)
DLL_DIRECTORY_COOKIE WINAPI kernel32.AddDllDirectory(_In_ PCWSTR NewDirectory)
DWORD None kernel32.EraseTape(_In_ HANDLE hDevice,_In_ DWORD dwEraseType,_In_ BOOL bImmediate)
HLOCAL WINAPI kernel32.LocalFree(_In_ HLOCAL hMem)
NTSTATUS None None.ZwDeviceIoControlFile(_In_ HANDLE FileHandle,_In_opt_ HANDLE Event,_In_opt_ PIO_APC_ROUTINE ApcRoutine,_In_opt_ PVOID ApcContext,_Out_ PIO_STATUS_BLOCK IoStatusBlock,_In_ ULONG IoControlCode,_In_opt_ PVOID InputBuffer,_In_ ULONG InputBufferLength,_Out_opt_ PVOID OutputBuffer,_In_ ULONG OutputBufferLength)
BOOL WINAPI crypt32.CertFreeCertificateContext(_In_ PCCERT_CONTEXT pCertContext)
BOOL WINAPI kernel32.GetMailslotInfo(_In_ HANDLE hMailslot,_Out_opt_ LPDWORD lpMaxMessageSize,_Out_opt_ LPDWORD lpNextSize,_Out_opt_ LPDWORD lpMessageCount,_Out_opt_ LPDWORD lpReadTimeout)
UINT WINAPI kernel32.GetDriveType(_In_opt_ LPCTSTR lpRootPathName)
UINT WINAPI kernel32.GetDriveTypeW(_In_opt_ LPCTSTR lpRootPathName)
UINT WINAPI kernel32.GetDriveTypeA(_In_opt_ LPCTSTR lpRootPathName)
BOOL PASCAL mswsock.TransmitFile(SOCKET hSocket None,HANDLE hFile None,DWORD nNumberOfBytesToWrite None,DWORD nNumberOfBytesPerSend None,LPOVERLAPPED lpOverlapped None,LPTRANSMIT_FILE_BUFFERS lpTransmitBuffers None,DWORD dwFlags None)
DWORD WINAPI kernel32.GetPrivateProfileString(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ LPCTSTR lpDefault,_Out_ LPTSTR lpReturnedString,_In_ DWORD nSize,_In_ LPCTSTR lpFileName)
DWORD WINAPI kernel32.GetPrivateProfileStringW(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ LPCTSTR lpDefault,_Out_ LPTSTR lpReturnedString,_In_ DWORD nSize,_In_ LPCTSTR lpFileName)
DWORD WINAPI kernel32.GetPrivateProfileStringA(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ LPCTSTR lpDefault,_Out_ LPTSTR lpReturnedString,_In_ DWORD nSize,_In_ LPCTSTR lpFileName)
LONG WINAPI advapi32.RegQueryInfoKey(_In_ HKEY hKey,_Out_opt_ LPTSTR lpClass,_Inout_opt_ LPDWORD lpcClass,_Reserved_ LPDWORD lpReserved,_Out_opt_ LPDWORD lpcSubKeys,_Out_opt_ LPDWORD lpcMaxSubKeyLen,_Out_opt_ LPDWORD lpcMaxClassLen,_Out_opt_ LPDWORD lpcValues,_Out_opt_ LPDWORD lpcMaxValueNameLen,_Out_opt_ LPDWORD lpcMaxValueLen,_Out_opt_ LPDWORD lpcbSecurityDescriptor,_Out_opt_ PFILETIME lpftLastWriteTime)
LONG WINAPI advapi32.RegQueryInfoKeyW(_In_ HKEY hKey,_Out_opt_ LPTSTR lpClass,_Inout_opt_ LPDWORD lpcClass,_Reserved_ LPDWORD lpReserved,_Out_opt_ LPDWORD lpcSubKeys,_Out_opt_ LPDWORD lpcMaxSubKeyLen,_Out_opt_ LPDWORD lpcMaxClassLen,_Out_opt_ LPDWORD lpcValues,_Out_opt_ LPDWORD lpcMaxValueNameLen,_Out_opt_ LPDWORD lpcMaxValueLen,_Out_opt_ LPDWORD lpcbSecurityDescriptor,_Out_opt_ PFILETIME lpftLastWriteTime)
LONG WINAPI advapi32.RegQueryInfoKeyA(_In_ HKEY hKey,_Out_opt_ LPTSTR lpClass,_Inout_opt_ LPDWORD lpcClass,_Reserved_ LPDWORD lpReserved,_Out_opt_ LPDWORD lpcSubKeys,_Out_opt_ LPDWORD lpcMaxSubKeyLen,_Out_opt_ LPDWORD lpcMaxClassLen,_Out_opt_ LPDWORD lpcValues,_Out_opt_ LPDWORD lpcMaxValueNameLen,_Out_opt_ LPDWORD lpcMaxValueLen,_Out_opt_ LPDWORD lpcbSecurityDescriptor,_Out_opt_ PFILETIME lpftLastWriteTime)
LONG WINAPI advapi32.RegCloseKey(_In_ HKEY hKey)
DWORD WINAPI kernel32.QueueUserAPC(_In_ PAPCFUNC pfnAPC,_In_ HANDLE hThread,_In_ ULONG_PTR dwData)
BOOL WINAPI kernel32.GetFileSizeEx(_In_ HANDLE hFile,_Out_ PLARGE_INTEGER lpFileSize)
UINT WINAPI kernel32.GlobalFlags(_In_ HGLOBAL hMem)
HANDLE WINAPI kernel32.FindFirstVolumeMountPoint(_In_ LPTSTR lpszRootPathName,_Out_ LPTSTR lpszVolumeMountPoint,_In_ DWORD cchBufferLength)
HANDLE WINAPI kernel32.FindFirstVolumeMountPointW(_In_ LPTSTR lpszRootPathName,_Out_ LPTSTR lpszVolumeMountPoint,_In_ DWORD cchBufferLength)
HANDLE WINAPI kernel32.FindFirstVolumeMountPointA(_In_ LPTSTR lpszRootPathName,_Out_ LPTSTR lpszVolumeMountPoint,_In_ DWORD cchBufferLength)
BOOL WINAPI kernel32.SetDefaultCommConfig(_In_ LPCTSTR lpszName,_In_ LPCOMMCONFIG lpCC,_In_ DWORD dwSize)
BOOL WINAPI kernel32.SetDefaultCommConfigW(_In_ LPCTSTR lpszName,_In_ LPCOMMCONFIG lpCC,_In_ DWORD dwSize)
BOOL WINAPI kernel32.SetDefaultCommConfigA(_In_ LPCTSTR lpszName,_In_ LPCOMMCONFIG lpCC,_In_ DWORD dwSize)
DWORD None kernel32.CreateTapePartition(_In_ HANDLE hDevice,_In_ DWORD dwPartitionMethod,_In_ DWORD dwCount,_In_ DWORD dwSize)
BOOL WINAPI advapi32.AddAccessDeniedAceEx(_Inout_ PACL pAcl,_In_ DWORD dwAceRevision,_In_ DWORD AceFlags,_In_ DWORD AccessMask,_In_ PSID pSid)
LPVOID WINAPI kernel32.CreateFiber(_In_ SIZE_T dwStackSize,_In_ LPFIBER_START_ROUTINE lpStartAddress,_In_opt_ LPVOID lpParameter)
PSLIST_ENTRY WINAPI kernel32.InterlockedFlushSList(_Inout_ PSLIST_HEADER ListHead)
BOOL WINAPI kernel32.AddResourceAttributeAce(_Inout_ PACL pAcl,_In_ DWORD dwAceRevision,_In_ DWORD AceFlags,_In_ DWORD AccessMask,_In_ PSID pSid,_In_ PCLAIM_SECURITY_ATTRIBUTES_INFORMATION pAttributeInfo,_Out_ PDWORD pReturnLength)
LONG WINAPI advapi32.RegSaveKeyEx(_In_ HKEY hKey,_In_ LPCTSTR lpFile,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ DWORD Flags)
LONG WINAPI advapi32.RegSaveKeyExW(_In_ HKEY hKey,_In_ LPCTSTR lpFile,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ DWORD Flags)
LONG WINAPI advapi32.RegSaveKeyExA(_In_ HKEY hKey,_In_ LPCTSTR lpFile,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ DWORD Flags)
BOOL WINAPI kernel32.VirtualProtectFromApp(_In_ PVOID Address,_In_ SIZE_T Size,_In_ ULONG NewProtection,_Out_ PULONG OldProtection)
DWORD WINAPI kernel32.GetPrivateProfileSectionNames(_Out_ LPTSTR lpszReturnBuffer,_In_ DWORD nSize,_In_ LPCTSTR lpFileName)
DWORD WINAPI kernel32.GetPrivateProfileSectionNamesW(_Out_ LPTSTR lpszReturnBuffer,_In_ DWORD nSize,_In_ LPCTSTR lpFileName)
DWORD WINAPI kernel32.GetPrivateProfileSectionNamesA(_Out_ LPTSTR lpszReturnBuffer,_In_ DWORD nSize,_In_ LPCTSTR lpFileName)
BOOL WINAPI user32.FlashWindowEx(_In_ PFLASHWINFO pfwi)
VOID WINAPI kernel32.FreeLibraryAndExitThread(_In_ HMODULE hModule,_In_ DWORD dwExitCode)
BOOL WINAPI advapi32.AccessCheckAndAuditAlarm(_In_ LPCTSTR SubsystemName,_In_opt_ LPVOID HandleId,_In_ LPTSTR ObjectTypeName,_In_opt_ LPTSTR ObjectName,_In_ PSECURITY_DESCRIPTOR SecurityDescriptor,_In_ DWORD DesiredAccess,_In_ PGENERIC_MAPPING GenericMapping,_In_ BOOL ObjectCreation,_Out_ LPDWORD GrantedAccess,_Out_ LPBOOL AccessStatus,_Out_ LPBOOL pfGenerateOnClose)
BOOL WINAPI advapi32.AccessCheckAndAuditAlarmW(_In_ LPCTSTR SubsystemName,_In_opt_ LPVOID HandleId,_In_ LPTSTR ObjectTypeName,_In_opt_ LPTSTR ObjectName,_In_ PSECURITY_DESCRIPTOR SecurityDescriptor,_In_ DWORD DesiredAccess,_In_ PGENERIC_MAPPING GenericMapping,_In_ BOOL ObjectCreation,_Out_ LPDWORD GrantedAccess,_Out_ LPBOOL AccessStatus,_Out_ LPBOOL pfGenerateOnClose)
BOOL WINAPI advapi32.AccessCheckAndAuditAlarmA(_In_ LPCTSTR SubsystemName,_In_opt_ LPVOID HandleId,_In_ LPTSTR ObjectTypeName,_In_opt_ LPTSTR ObjectName,_In_ PSECURITY_DESCRIPTOR SecurityDescriptor,_In_ DWORD DesiredAccess,_In_ PGENERIC_MAPPING GenericMapping,_In_ BOOL ObjectCreation,_Out_ LPDWORD GrantedAccess,_Out_ LPBOOL AccessStatus,_Out_ LPBOOL pfGenerateOnClose)
BOOL WINAPI kernel32.ReadFile(_In_ HANDLE hFile,_Out_ LPVOID lpBuffer,_In_ DWORD nNumberOfBytesToRead,_Out_opt_ LPDWORD lpNumberOfBytesRead,_Inout_opt_ LPOVERLAPPED lpOverlapped)
BOOL WINAPI user32.AttachThreadInput(_In_ DWORD idAttach,_In_ DWORD idAttachTo,_In_ BOOL fAttach)
WORD None None.SCODE_FACILITY(SCODE sc None)
BOOL WINAPI kernel32.Process32First(_In_ HANDLE hSnapshot,_Inout_ LPPROCESSENTRY32 lppe)
BOOL WINAPI kernel32.Process32FirstW(_In_ HANDLE hSnapshot,_Inout_ LPPROCESSENTRY32 lppe)
BOOL WINAPI kernel32.Process32First(_In_ HANDLE hSnapshot,_Inout_ LPPROCESSENTRY32 lppe)
PVOID WINAPI kernel32.MapViewOfFileFromApp(_In_ HANDLE hFileMappingObject,_In_ ULONG DesiredAccess,_In_ ULONG64 FileOffset,_In_ SIZE_T NumberOfBytesToMap)
PSLIST_ENTRY FASTCALL kernel32.InterlockedPushListSList(_Inout_ PSLIST_HEADER ListHead,_Inout_ PSLIST_ENTRY List,_Inout_ PSLIST_ENTRY ListEnd,_In_ ULONG Count)
DWORD None None.RecallFile(PTCHAR FileName None)
DWORD None kernel32.GetTapeParameters(_In_ HANDLE hDevice,_In_ DWORD dwOperation,_Out_ LPDWORD lpdwSize,_Out_ LPVOID lpTapeInformation)
BOOLEAN WINAPI kernel32.CreateSymbolicLink(_In_ LPTSTR lpSymlinkFileName,_In_ LPTSTR lpTargetFileName,_In_ DWORD dwFlags)
BOOLEAN WINAPI kernel32.CreateSymbolicLinkW(_In_ LPTSTR lpSymlinkFileName,_In_ LPTSTR lpTargetFileName,_In_ DWORD dwFlags)
BOOLEAN WINAPI kernel32.CreateSymbolicLinkA(_In_ LPTSTR lpSymlinkFileName,_In_ LPTSTR lpTargetFileName,_In_ DWORD dwFlags)
BOOL WINAPI advapi32.CreateRestrictedToken(_In_ HANDLE ExistingTokenHandle,_In_ DWORD Flags,_In_ DWORD DisableSidCount,_In_opt_ PSID_AND_ATTRIBUTES SidsToDisable,_In_ DWORD DeletePrivilegeCount,_In_opt_ PLUID_AND_ATTRIBUTES PrivilegesToDelete,_In_ DWORD RestrictedSidCount,_In_opt_ PSID_AND_ATTRIBUTES SidsToRestrict,_Out_ PHANDLE NewTokenHandle)
BOOL WINAPI user32.UnregisterDeviceNotification(_In_ HDEVNOTIFY Handle)
BOOL WINAPI advapi32.CreatePrivateObjectSecurityEx(_In_opt_ PSECURITY_DESCRIPTOR ParentDescriptor,_In_opt_ PSECURITY_DESCRIPTOR CreatorDescriptor,_Out_ PSECURITY_DESCRIPTOR *NewDescriptor,_In_opt_ GUID *ObjectType,_In_ BOOL IsContainerObject,_In_ ULONG AutoInheritFlags,_In_opt_ HANDLE Token,_In_ PGENERIC_MAPPING GenericMapping)
VOID None None.DestroyThreadpoolEnvironment(_Inout_ PTP_CALLBACK_ENVIRON pcbe)
LPVOID WINAPI kernel32.MapViewOfFileExNuma(_In_ HANDLE hFileMappingObject,_In_ DWORD dwDesiredAccess,_In_ DWORD dwFileOffsetHigh,_In_ DWORD dwFileOffsetLow,_In_ SIZE_T dwNumberOfBytesToMap,_In_opt_ LPVOID lpBaseAddress,_In_ DWORD nndPreferred)
NTSTATUS None None.FltFsControlFile(_In_ PFLT_INSTANCE Instance,_In_ PFILE_OBJECT FileObject,_In_ ULONG FsControlCode,_In_opt_ PVOID InputBuffer,_In_ ULONG InputBufferLength,_Out_opt_ PVOID OutputBuffer,_In_ ULONG OutputBufferLength,_Out_opt_ PULONG LengthReturned)
BOOL WINAPI kernel32.DeleteVolumeMountPoint(_In_ LPCTSTR lpszVolumeMountPoint)
BOOL WINAPI kernel32.DeleteVolumeMountPointW(_In_ LPCTSTR lpszVolumeMountPoint)
BOOL WINAPI kernel32.DeleteVolumeMountPointA(_In_ LPCTSTR lpszVolumeMountPoint)
HRESULT None None.StringCbCopy(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc)
HRESULT None None.StringCbCopyW(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc)
HRESULT None None.StringCbCopyA(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc)
BOOL WINAPI crypt32.CertDeleteCRLFromStore(_In_ PCCRL_CONTEXT pCrlContext)
BOOL WINAPI kernel32.SetVolumeLabel(_In_opt_ LPCTSTR lpRootPathName,_In_opt_ LPCTSTR lpVolumeName)
BOOL WINAPI kernel32.SetVolumeLabelW(_In_opt_ LPCTSTR lpRootPathName,_In_opt_ LPCTSTR lpVolumeName)
BOOL WINAPI kernel32.SetVolumeLabelA(_In_opt_ LPCTSTR lpRootPathName,_In_opt_ LPCTSTR lpVolumeName)
BOOL None ole32.CoDosDateTimeToFileTime(_In_ WORD nDosDate,_In_ WORD nDosTime,_Out_ FILETIME *lpFileTime)
BOOL WINAPI kernel32.GetHandleInformation(_In_ HANDLE hObject,_Out_ LPDWORD lpdwFlags)
DWORD WINAPI kernel32.GetCurrentDirectory(_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer)
DWORD WINAPI kernel32.GetCurrentDirectoryW(_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer)
DWORD WINAPI kernel32.GetCurrentDirectoryA(_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer)
NTSTATUS NTAPI ntdll.NtCompareTokens(_In_ HANDLE FirstTokenHandle,_In_ HANDLE SecondTokenHandle,_Out_ PBOOLEAN Equal)
LONG WINAPI advapi32.RegOpenKey(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_Out_ PHKEY phkResult)
LONG WINAPI advapi32.RegOpenKeyW(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_Out_ PHKEY phkResult)
LONG WINAPI advapi32.RegOpenKeyA(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_Out_ PHKEY phkResult)
DWORD None kernel32.PrepareTape(_In_ HANDLE hDevice,_In_ DWORD dwOperation,_In_ BOOL bImmediate)
BOOL WINAPI kernel32.ClearCommError(_In_ HANDLE hFile,_Out_opt_ LPDWORD lpErrors,_Out_opt_ LPCOMSTAT lpStat)
BOOL WINAPI kernel32.FreeLibrary(_In_ HMODULE hModule)
BOOL WINAPI kernel32.BindIoCompletionCallback(_In_ HANDLE FileHandle,_In_ LPOVERLAPPED_COMPLETION_ROUTINE Function,_In_ ULONG Flags)
BOOL WINAPI kernelbase.TlsSetValue(_In_ DWORD dwTlsIndex,_In_opt_ LPVOID lpTlsValue)
BOOL WINAPI advapi32.AllocateLocallyUniqueId(_Out_ PLUID Luid)
HRESULT None None.FindCorePropertiesPart(IOpcPackage *package None,IOpcPart **part None)
BOOL WINAPI kernel32.HeapQueryInformation(_In_opt_ HANDLE HeapHandle,_In_ HEAP_INFORMATION_CLASS HeapInformationClass,_Out_ PVOID HeapInformation,_In_ SIZE_T HeapInformationLength,_Out_opt_ PSIZE_T ReturnLength)
BOOL None kernel32.IsValidLanguageGroup(_In_ LGRPID LanguageGroup,_In_ DWORD dwFlags)
BOOL WINAPI authz.AuthzModifySids(_In_ AUTHZ_CLIENT_CONTEXT_HANDLE hAuthzClientContext,_In_ AUTHZ_CONTEXT_INFORMATION_CLASS SidClass,_In_ PAUTHZ_SID_OPERATION pSidOperations,_In_opt_ PTOKEN_GROUPS pSids)
BOOL WINAPI advapi32.LookupPrivilegeName(_In_opt_ LPCTSTR lpSystemName,_In_ PLUID lpLuid,_Out_opt_ LPTSTR lpName,_Inout_ LPDWORD cchName)
BOOL WINAPI advapi32.LookupPrivilegeNameW(_In_opt_ LPCTSTR lpSystemName,_In_ PLUID lpLuid,_Out_opt_ LPTSTR lpName,_Inout_ LPDWORD cchName)
BOOL WINAPI advapi32.LookupPrivilegeNameA(_In_opt_ LPCTSTR lpSystemName,_In_ PLUID lpLuid,_Out_opt_ LPTSTR lpName,_Inout_ LPDWORD cchName)
BOOL WINAPI kernel32.CreateDirectory(_In_ LPCTSTR lpPathName,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes)
BOOL WINAPI kernel32.CreateDirectoryW(_In_ LPCTSTR lpPathName,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes)
BOOL WINAPI kernel32.CreateDirectoryA(_In_ LPCTSTR lpPathName,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes)
PIRP None None.IoBuildSynchronousFsdRequest(_In_ ULONG MajorFunction,_In_ PDEVICE_OBJECT DeviceObject,_Inout_ PVOID Buffer,_In_opt_ ULONG Length,_In_opt_ PLARGE_INTEGER StartingOffset,_In_ PKEVENT Event,_Out_ PIO_STATUS_BLOCK IoStatusBlock)
BOOL WINAPI kernel32.SetVolumeMountPoint(_In_ LPCTSTR lpszVolumeMountPoint,_In_ LPCTSTR lpszVolumeName)
BOOL WINAPI kernel32.SetVolumeMountPointW(_In_ LPCTSTR lpszVolumeMountPoint,_In_ LPCTSTR lpszVolumeName)
BOOL WINAPI kernel32.SetVolumeMountPointA(_In_ LPCTSTR lpszVolumeMountPoint,_In_ LPCTSTR lpszVolumeName)
BOOL WINAPI advapi32.AccessCheckByTypeResultListAndAuditAlarm(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ LPCTSTR ObjectTypeName,_In_opt_ LPCTSTR ObjectName,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_opt_ PSID PrincipalSelfSid,_In_ DWORD DesiredAccess,_In_ AUDIT_EVENT_TYPE AuditType,_In_ DWORD Flags,_Inout_opt_ POBJECT_TYPE_LIST ObjectTypeList,_In_ DWORD ObjectTypeListLength,_In_ PGENERIC_MAPPING GenericMapping,_In_ BOOL ObjectCreation,_Out_ LPDWORD GrantedAccess,_Out_ LPDWORD AccessStatusList,_Out_ LPBOOL pfGenerateOnClose)
BOOL WINAPI advapi32.AccessCheckByTypeResultListAndAuditAlarmW(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ LPCTSTR ObjectTypeName,_In_opt_ LPCTSTR ObjectName,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_opt_ PSID PrincipalSelfSid,_In_ DWORD DesiredAccess,_In_ AUDIT_EVENT_TYPE AuditType,_In_ DWORD Flags,_Inout_opt_ POBJECT_TYPE_LIST ObjectTypeList,_In_ DWORD ObjectTypeListLength,_In_ PGENERIC_MAPPING GenericMapping,_In_ BOOL ObjectCreation,_Out_ LPDWORD GrantedAccess,_Out_ LPDWORD AccessStatusList,_Out_ LPBOOL pfGenerateOnClose)
BOOL WINAPI advapi32.AccessCheckByTypeResultListAndAuditAlarmA(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ LPCTSTR ObjectTypeName,_In_opt_ LPCTSTR ObjectName,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_opt_ PSID PrincipalSelfSid,_In_ DWORD DesiredAccess,_In_ AUDIT_EVENT_TYPE AuditType,_In_ DWORD Flags,_Inout_opt_ POBJECT_TYPE_LIST ObjectTypeList,_In_ DWORD ObjectTypeListLength,_In_ PGENERIC_MAPPING GenericMapping,_In_ BOOL ObjectCreation,_Out_ LPDWORD GrantedAccess,_Out_ LPDWORD AccessStatusList,_Out_ LPBOOL pfGenerateOnClose)
BOOL WINAPI authz.AuthzGetInformationFromContext(_In_ AUTHZ_CLIENT_CONTEXT_HANDLE hAuthzClientContext,_In_ AUTHZ_CONTEXT_INFORMATION_CLASS InfoClass,_In_ DWORD BufferSize,_Out_ PDWORD pSizeRequired,_Out_ PVOID Buffer)
DWORD WINAPI advapi32.TreeSetNamedSecurityInfo(_In_ LPTSTR pObjectName,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_In_opt_ PSID pOwner,_In_opt_ PSID pGroup,_In_opt_ PACL pDacl,_In_opt_ PACL pSacl,_In_ DWORD dwAction,_In_ FN_PROGRESS fnProgress,_In_ PROG_INVOKE_SETTING ProgressInvokeSetting,_In_opt_ PVOID Args)
DWORD WINAPI advapi32.TreeSetNamedSecurityInfoW(_In_ LPTSTR pObjectName,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_In_opt_ PSID pOwner,_In_opt_ PSID pGroup,_In_opt_ PACL pDacl,_In_opt_ PACL pSacl,_In_ DWORD dwAction,_In_ FN_PROGRESS fnProgress,_In_ PROG_INVOKE_SETTING ProgressInvokeSetting,_In_opt_ PVOID Args)
DWORD WINAPI advapi32.TreeSetNamedSecurityInfoA(_In_ LPTSTR pObjectName,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_In_opt_ PSID pOwner,_In_opt_ PSID pGroup,_In_opt_ PACL pDacl,_In_opt_ PACL pSacl,_In_ DWORD dwAction,_In_ FN_PROGRESS fnProgress,_In_ PROG_INVOKE_SETTING ProgressInvokeSetting,_In_opt_ PVOID Args)
BOOL WINAPI kernel32.CreateTimerQueueTimer(_Out_ PHANDLE phNewTimer,_In_opt_ HANDLE TimerQueue,_In_ WAITORTIMERCALLBACK Callback,_In_opt_ PVOID Parameter,_In_ DWORD DueTime,_In_ DWORD Period,_In_ ULONG Flags)
BOOL WINAPI advapi32.GetTokenInformation(_In_ HANDLE TokenHandle,_In_ TOKEN_INFORMATION_CLASS TokenInformationClass,_Out_opt_ LPVOID TokenInformation,_In_ DWORD TokenInformationLength,_Out_ PDWORD ReturnLength)
BOOL WINAPI advapi32.AccessCheckByTypeAndAuditAlarm(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ LPCTSTR ObjectTypeName,_In_opt_ LPCTSTR ObjectName,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_opt_ PSID PrincipalSelfSid,_In_ DWORD DesiredAccess,_In_ AUDIT_EVENT_TYPE AuditType,_In_ DWORD Flags,_Inout_opt_ POBJECT_TYPE_LIST ObjectTypeList,_In_ DWORD ObjectTypeListLength,_In_ PGENERIC_MAPPING GenericMapping,_In_ BOOL ObjectCreation,_Out_ LPDWORD GrantedAccess,_Out_ LPBOOL AccessStatus,_Out_ LPBOOL pfGenerateOnClose)
BOOL WINAPI advapi32.AccessCheckByTypeAndAuditAlarmW(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ LPCTSTR ObjectTypeName,_In_opt_ LPCTSTR ObjectName,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_opt_ PSID PrincipalSelfSid,_In_ DWORD DesiredAccess,_In_ AUDIT_EVENT_TYPE AuditType,_In_ DWORD Flags,_Inout_opt_ POBJECT_TYPE_LIST ObjectTypeList,_In_ DWORD ObjectTypeListLength,_In_ PGENERIC_MAPPING GenericMapping,_In_ BOOL ObjectCreation,_Out_ LPDWORD GrantedAccess,_Out_ LPBOOL AccessStatus,_Out_ LPBOOL pfGenerateOnClose)
BOOL WINAPI advapi32.AccessCheckByTypeAndAuditAlarmA(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ LPCTSTR ObjectTypeName,_In_opt_ LPCTSTR ObjectName,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_opt_ PSID PrincipalSelfSid,_In_ DWORD DesiredAccess,_In_ AUDIT_EVENT_TYPE AuditType,_In_ DWORD Flags,_Inout_opt_ POBJECT_TYPE_LIST ObjectTypeList,_In_ DWORD ObjectTypeListLength,_In_ PGENERIC_MAPPING GenericMapping,_In_ BOOL ObjectCreation,_Out_ LPDWORD GrantedAccess,_Out_ LPBOOL AccessStatus,_Out_ LPBOOL pfGenerateOnClose)
DWORD WINAPI advapi32.TreeResetNamedSecurityInfo(_In_ LPTSTR pObjectName,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_In_opt_ PSID pOwner,_In_opt_ PSID pGroup,_In_opt_ PACL pDacl,_In_opt_ PACL pSacl,_In_ BOOL KeepExplicit,_In_opt_ FN_PROGRESS fnProgress,_In_ PROG_INVOKE_SETTING ProgressInvokeSetting,_In_opt_ PVOID Args)
DWORD WINAPI advapi32.TreeResetNamedSecurityInfoW(_In_ LPTSTR pObjectName,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_In_opt_ PSID pOwner,_In_opt_ PSID pGroup,_In_opt_ PACL pDacl,_In_opt_ PACL pSacl,_In_ BOOL KeepExplicit,_In_opt_ FN_PROGRESS fnProgress,_In_ PROG_INVOKE_SETTING ProgressInvokeSetting,_In_opt_ PVOID Args)
DWORD WINAPI advapi32.TreeResetNamedSecurityInfoA(_In_ LPTSTR pObjectName,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_In_opt_ PSID pOwner,_In_opt_ PSID pGroup,_In_opt_ PACL pDacl,_In_opt_ PACL pSacl,_In_ BOOL KeepExplicit,_In_opt_ FN_PROGRESS fnProgress,_In_ PROG_INVOKE_SETTING ProgressInvokeSetting,_In_opt_ PVOID Args)
BOOL WINAPI authz.AuthzModifySecurityAttributes(_In_ AUTHZ_CLIENT_CONTEXT_HANDLE hAuthzClientContext,_In_ PAUTHZ_SECURITY_ATTRIBUTE_OPERATION pOperations,_In_ PAUTHZ_SECURITY_ATTRUBUTES_INFORMATION pAttributes)
BOOL WINAPI advapi32.CreateWellKnownSid(_In_ WELL_KNOWN_SID_TYPE WellKnownSidType,_In_opt_ PSID DomainSid,_Out_opt_ PSID pSid,_Inout_ DWORD *cbSid)
BOOL WINAPI kernel32.SetCommMask(_In_ HANDLE hFile,_In_ DWORD dwEvtMask)
BOOL WINAPI advapi32.SetTokenInformation(_In_ HANDLE TokenHandle,_In_ TOKEN_INFORMATION_CLASS TokenInformationClass,_In_ LPVOID TokenInformation,_In_ DWORD TokenInformationLength)
LONG WINAPI advapi32.RegGetValue(_In_ HKEY hkey,_In_opt_ LPCTSTR lpSubKey,_In_opt_ LPCTSTR lpValue,_In_opt_ DWORD dwFlags,_Out_opt_ LPDWORD pdwType,_Out_opt_ PVOID pvData,_Inout_opt_ LPDWORD pcbData)
LONG WINAPI advapi32.RegGetValueW(_In_ HKEY hkey,_In_opt_ LPCTSTR lpSubKey,_In_opt_ LPCTSTR lpValue,_In_opt_ DWORD dwFlags,_Out_opt_ LPDWORD pdwType,_Out_opt_ PVOID pvData,_Inout_opt_ LPDWORD pcbData)
LONG WINAPI advapi32.RegGetValueA(_In_ HKEY hkey,_In_opt_ LPCTSTR lpSubKey,_In_opt_ LPCTSTR lpValue,_In_opt_ DWORD dwFlags,_Out_opt_ LPDWORD pdwType,_Out_opt_ PVOID pvData,_Inout_opt_ LPDWORD pcbData)
BOOL WINAPI crypt32.PFXIsPFXBlob(_In_ CRYPT_DATA_BLOB *pPFX)
SCODE None None.MAKE_SCODE(WORD sev None,WORD fac None,WORD code None)
VOID WINAPI kernel32.InitializeSRWLock(_Out_ PSRWLOCK SRWLock)
DWORD WINAPI advapi32.GetAuditedPermissionsFromAcl(_In_ PACL pacl,_In_ PTRUSTEE pTrustee,_Out_ PACCESS_MASK pSuccessfulAuditedRights,_Out_ PACCESS_MASK pFailedAuditRights)
DWORD WINAPI advapi32.GetAuditedPermissionsFromAclW(_In_ PACL pacl,_In_ PTRUSTEE pTrustee,_Out_ PACCESS_MASK pSuccessfulAuditedRights,_Out_ PACCESS_MASK pFailedAuditRights)
DWORD WINAPI advapi32.GetAuditedPermissionsFromAclA(_In_ PACL pacl,_In_ PTRUSTEE pTrustee,_Out_ PACCESS_MASK pSuccessfulAuditedRights,_Out_ PACCESS_MASK pFailedAuditRights)
BOOL WINAPI kernel32.DisableThreadLibraryCalls(_In_ HMODULE hModule)
BOOL None None.SUCCEEDED(HRESULT hr None)
LONG WINAPI advapi32.RegQueryValueEx(_In_ HKEY hKey,_In_opt_ LPCTSTR lpValueName,_Reserved_ LPDWORD lpReserved,_Out_opt_ LPDWORD lpType,_Out_opt_ LPBYTE lpData,_Inout_opt_ LPDWORD lpcbData)
LONG WINAPI advapi32.RegQueryValueExW(_In_ HKEY hKey,_In_opt_ LPCTSTR lpValueName,_Reserved_ LPDWORD lpReserved,_Out_opt_ LPDWORD lpType,_Out_opt_ LPBYTE lpData,_Inout_opt_ LPDWORD lpcbData)
LONG WINAPI advapi32.RegQueryValueExA(_In_ HKEY hKey,_In_opt_ LPCTSTR lpValueName,_Reserved_ LPDWORD lpReserved,_Out_opt_ LPDWORD lpType,_Out_opt_ LPBYTE lpData,_Inout_opt_ LPDWORD lpcbData)
VOID CALLBACK None.CleanupGroupCancelCallback(_Inout_opt_ PVOID ObjectContext,_Inout_opt_ PVOID CleanupContext)
SIZE_T WINAPI kernel32.HeapCompact(_In_ HANDLE hHeap,_In_ DWORD dwFlags)
HRESULT None None.StringCbCopyNEx(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc,_In_ size_t cbSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCbCopyNExW(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc,_In_ size_t cbSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCbCopyNExA(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc,_In_ size_t cbSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags)
BOOL WINAPI advapi32.GetFileSecurity(_In_ LPCTSTR lpFileName,_In_ SECURITY_INFORMATION RequestedInformation,_Out_opt_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_ DWORD nLength,_Out_ LPDWORD lpnLengthNeeded)
BOOL WINAPI advapi32.GetFileSecurityW(_In_ LPCTSTR lpFileName,_In_ SECURITY_INFORMATION RequestedInformation,_Out_opt_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_ DWORD nLength,_Out_ LPDWORD lpnLengthNeeded)
BOOL WINAPI advapi32.GetFileSecurityA(_In_ LPCTSTR lpFileName,_In_ SECURITY_INFORMATION RequestedInformation,_Out_opt_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_ DWORD nLength,_Out_ LPDWORD lpnLengthNeeded)
BOOL None ole32.IsEqualIID(_In_ REFGUID riid1,_In_ REFGUID riid2)
BOOL CALLBACK None.EnumCodePagesProc(_In_ LPTSTR lpCodePageString)
BOOL WINAPI kernel32.GetDiskFreeSpace(_In_ LPCTSTR lpRootPathName,_Out_ LPDWORD lpSectorsPerCluster,_Out_ LPDWORD lpBytesPerSector,_Out_ LPDWORD lpNumberOfFreeClusters,_Out_ LPDWORD lpTotalNumberOfClusters)
BOOL WINAPI kernel32.GetDiskFreeSpaceW(_In_ LPCTSTR lpRootPathName,_Out_ LPDWORD lpSectorsPerCluster,_Out_ LPDWORD lpBytesPerSector,_Out_ LPDWORD lpNumberOfFreeClusters,_Out_ LPDWORD lpTotalNumberOfClusters)
BOOL WINAPI kernel32.GetDiskFreeSpaceA(_In_ LPCTSTR lpRootPathName,_Out_ LPDWORD lpSectorsPerCluster,_Out_ LPDWORD lpBytesPerSector,_Out_ LPDWORD lpNumberOfFreeClusters,_Out_ LPDWORD lpTotalNumberOfClusters)
LONG WINAPI advapi32.RegSetValue(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_ DWORD dwType,_In_ LPCTSTR lpData,_In_ DWORD cbData)
LONG WINAPI advapi32.RegSetValueW(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_ DWORD dwType,_In_ LPCTSTR lpData,_In_ DWORD cbData)
LONG WINAPI advapi32.RegSetValueA(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_ DWORD dwType,_In_ LPCTSTR lpData,_In_ DWORD cbData)
BOOL WINAPI user32.MessageBeep(_In_ UINT uType)
DWORD WINAPI kernel32.GetLogicalDriveStrings(_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer)
DWORD WINAPI kernel32.GetLogicalDriveStringsW(_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer)
DWORD WINAPI kernel32.GetLogicalDriveStringsA(_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer)
VOID WINAPI kernel32.WakeByAddressAll(_In_ PVOID Address)
BOOL WINAPI advapi32.ImpersonateSelf(_In_ SECURITY_IMPERSONATION_LEVEL ImpersonationLevel)
NET_API_STATUS None netapi32.NetDfsSetStdContainerSecurity(_In_ LPWSTR MachineName,_In_ SECURITY_INFORMATION SecurityInformation,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor)
BOOL None user32.PhysicalToLogicalPointForPerMonitorDPI(_In_ HWND hwnd,_Inout_ LPPOINT lpPoint)
BOOL None sisbkup.SisRestoredCommonStoreFile(_In_ PVOID sisRestoreStructure,_In_ PWCHAR commonStoreFileName)
BOOL WINAPI kernel32.FindVolumeMountPointClose(_In_ HANDLE hFindVolumeMountPoint)
BOOL WINAPI kernel32.SetCommConfig(_In_ HANDLE hCommDev,_In_ LPCOMMCONFIG lpCC,_In_ DWORD dwSize)
DWORD WINAPI advapi32.GetNamedSecurityInfo(_In_ LPTSTR pObjectName,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_Out_opt_ PSID *ppsidOwner,_Out_opt_ PSID *ppsidGroup,_Out_opt_ PACL *ppDacl,_Out_opt_ PACL *ppSacl,_Out_opt_ PSECURITY_DESCRIPTOR *ppSecurityDescriptor)
DWORD WINAPI advapi32.GetNamedSecurityInfoW(_In_ LPTSTR pObjectName,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_Out_opt_ PSID *ppsidOwner,_Out_opt_ PSID *ppsidGroup,_Out_opt_ PACL *ppDacl,_Out_opt_ PACL *ppSacl,_Out_opt_ PSECURITY_DESCRIPTOR *ppSecurityDescriptor)
DWORD WINAPI advapi32.GetNamedSecurityInfoA(_In_ LPTSTR pObjectName,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_Out_opt_ PSID *ppsidOwner,_Out_opt_ PSID *ppsidGroup,_Out_opt_ PACL *ppDacl,_Out_opt_ PACL *ppSacl,_Out_opt_ PSECURITY_DESCRIPTOR *ppSecurityDescriptor)
BOOL WINAPI advapi32.AreAllAccessesGranted(_In_ DWORD GrantedAccess,_In_ DWORD DesiredAccess)
USHORT WINAPI kernel32.QueryDepthSList(_In_ PSLIST_HEADER ListHead)
BOOL WINAPI kernel32.SetProcessMitigationPolicy(_In_ PROCESS_MITIGATION_POLICY MitigationPolicy,_In_ PVOID lpBuffer,_In_ SIZE_T dwLength)
HRESULT None None.StringCbPrintf_lEx(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_Out_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ ... None)
HRESULT None None.StringCbPrintf_lExW(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_Out_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ ... None)
HRESULT None None.StringCbPrintf_lExA(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_Out_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ ... None)
HRESULT None wintrust.WinVerifyTrustEx(_In_ HWND hwnd,_In_ GUID *pgActionID,_In_ WINTRUST_DATA *pWinTrustData)
BOOL CALLBACK None.EnumCalendarInfoProc(_In_ LPTSTR lpCalendarInfoString)
UINT WINAPI kernel32.GetDriveType(_In_opt_ LPCTSTR lpRootPathName)
UINT WINAPI kernel32.GetDriveTypeW(_In_opt_ LPCTSTR lpRootPathName)
UINT WINAPI kernel32.GetDriveTypeA(_In_opt_ LPCTSTR lpRootPathName)
HRESULT None ole32.CreateItemMoniker(_In_ LPCOLESTR lpszDelim,_In_ LPCOLESTR lpszItem,_Out_ LPMONIKER *ppmk)
HRESULT None shell32.Resolve(HWND hwnd None,DWORD fFlags None)
HRESULT None ole32.StringFromCLSID(_In_ REFCLSID rclsid,_Out_ LPOLESTR *lplpsz)
HANDLE WINAPI kernel32.FindFirstChangeNotification(_In_ LPCTSTR lpPathName,_In_ BOOL bWatchSubtree,_In_ DWORD dwNotifyFilter)
HANDLE WINAPI kernel32.FindFirstChangeNotificationW(_In_ LPCTSTR lpPathName,_In_ BOOL bWatchSubtree,_In_ DWORD dwNotifyFilter)
HANDLE WINAPI kernel32.FindFirstChangeNotificationA(_In_ LPCTSTR lpPathName,_In_ BOOL bWatchSubtree,_In_ DWORD dwNotifyFilter)
BOOL WINAPI advapi32.SetPrivateObjectSecurityEx(_In_ SECURITY_INFORMATION SecurityInformation,_In_ PSECURITY_DESCRIPTOR ModificationDescriptor,_Inout_ PSECURITY_DESCRIPTOR *ObjectsSecurityDescriptor,_In_ ULONG AutoInheritFlags,_In_ PGENERIC_MAPPING GenericMapping,_In_opt_ HANDLE Token)
BOOL WINAPI kernel32.Heap32ListNext(_In_ HANDLE hSnapshot,_Out_ LPHEAPLIST32 lphl)
DWORD WINAPI kernel32.GetDllDirectory(_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer)
DWORD WINAPI kernel32.GetDllDirectoryW(_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer)
DWORD WINAPI kernel32.GetDllDirectoryA(_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer)
BOOL WINAPI kernel32.FlushFileBuffers(_In_ HANDLE hFile)
BOOL WINAPI dbghelp.MiniDumpWriteDump(_In_ HANDLE hProcess,_In_ DWORD ProcessId,_In_ HANDLE hFile,_In_ MINIDUMP_TYPE DumpType,_In_ PMINIDUMP_EXCEPTION_INFORMATION ExceptionParam,_In_ PMINIDUMP_USER_STREAM_INFORMATION UserStreamParam,_In_ PMINIDUMP_CALLBACK_INFORMATION CallbackParam)
DWORD WINAPI advapi32.SetEntriesInAcl(_In_ ULONG cCountOfExplicitEntries,_In_opt_ PEXPLICIT_ACCESS pListOfExplicitEntries,_In_opt_ PACL OldAcl,_Out_ PACL *NewAcl)
DWORD WINAPI advapi32.SetEntriesInAclW(_In_ ULONG cCountOfExplicitEntries,_In_opt_ PEXPLICIT_ACCESS pListOfExplicitEntries,_In_opt_ PACL OldAcl,_Out_ PACL *NewAcl)
DWORD WINAPI advapi32.SetEntriesInAclA(_In_ ULONG cCountOfExplicitEntries,_In_opt_ PEXPLICIT_ACCESS pListOfExplicitEntries,_In_opt_ PACL OldAcl,_Out_ PACL *NewAcl)
LRESULT CALLBACK None.MyWndProc(HWND hWnd None,UINT msg None,WPARAM wParam None,LPARAM lParam None,UINT_PTR uIdSubclass None,DWORD_PTR dwRefData None)
BOOL WINAPI kernel32.CommConfigDialog(_In_ LPCTSTR lpszName,_In_ HWND hWnd,_Inout_ LPCOMMCONFIG lpCC)
BOOL WINAPI kernel32.CommConfigDialogW(_In_ LPCTSTR lpszName,_In_ HWND hWnd,_Inout_ LPCOMMCONFIG lpCC)
BOOL WINAPI kernel32.CommConfigDialogA(_In_ LPCTSTR lpszName,_In_ HWND hWnd,_Inout_ LPCOMMCONFIG lpCC)
PIRP None None.IoBuildDeviceIoControlRequest(_In_ ULONG IoControlCode,_In_ PDEVICE_OBJECT DeviceObject,_In_opt_ PVOID InputBuffer,_In_ ULONG InputBufferLength,_Out_opt_ PVOID OutputBuffer,_In_ ULONG OutputBufferLength,_In_ BOOLEAN InternalDeviceIoControl,_In_opt_ PKEVENT Event,_Out_ PIO_STATUS_BLOCK IoStatusBlock)
DWORD None None.SCODE_SEVERITY(SCODE sc None)
HRESULT WINAPI dssec.DSCreateISecurityInfoObject(_In_ LPCWSTR pwszObjectPath,_In_ LPCWSTR pwszObjectClass,_In_ DWORD dwFlags,_Out_ LPSECURITYINFO *ppSI,_In_opt_ PFNREADOBJECTSECURITY pfnReadSD,_In_opt_ PFNWRITEOBJECTSECURITY pfnWriteSD,_In_ LPARAM lpContext)
HRESULT None None.StringCbCatEx(_Inout_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCbCatExW(_Inout_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCbCatExA(_Inout_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags)
BOOL WINAPI kernel32.SetPriorityClass(_In_ HANDLE hProcess,_In_ DWORD dwPriorityClass)
BOOL WINAPI kernel32.SetProcessShutdownParameters(_In_ DWORD dwLevel,_In_ DWORD dwFlags)
PCCTL_CONTEXT WINAPI crypt32.CertDuplicateCTLContext(_In_ PCCTL_CONTEXT pCtlContext)
UINT WINAPI kernel32.GetSystemDirectory(_Out_ LPTSTR lpBuffer,_In_ UINT uSize)
UINT WINAPI kernel32.GetSystemDirectoryW(_Out_ LPTSTR lpBuffer,_In_ UINT uSize)
UINT WINAPI kernel32.GetSystemDirectoryA(_Out_ LPTSTR lpBuffer,_In_ UINT uSize)
BOOL WINAPI kernel32.GetDiskFreeSpaceEx(_In_opt_ LPCTSTR lpDirectoryName,_Out_opt_ PULARGE_INTEGER lpFreeBytesAvailable,_Out_opt_ PULARGE_INTEGER lpTotalNumberOfBytes,_Out_opt_ PULARGE_INTEGER lpTotalNumberOfFreeBytes)
BOOL WINAPI kernel32.GetDiskFreeSpaceExW(_In_opt_ LPCTSTR lpDirectoryName,_Out_opt_ PULARGE_INTEGER lpFreeBytesAvailable,_Out_opt_ PULARGE_INTEGER lpTotalNumberOfBytes,_Out_opt_ PULARGE_INTEGER lpTotalNumberOfFreeBytes)
BOOL WINAPI kernel32.GetDiskFreeSpaceExA(_In_opt_ LPCTSTR lpDirectoryName,_Out_opt_ PULARGE_INTEGER lpFreeBytesAvailable,_Out_opt_ PULARGE_INTEGER lpTotalNumberOfBytes,_Out_opt_ PULARGE_INTEGER lpTotalNumberOfFreeBytes)
BOOL WINAPI advapi32.ObjectDeleteAuditAlarm(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ BOOL GenerateOnClose)
BOOL WINAPI advapi32.ObjectDeleteAuditAlarmW(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ BOOL GenerateOnClose)
BOOL WINAPI advapi32.ObjectDeleteAuditAlarmA(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ BOOL GenerateOnClose)
BOOL WINAPI kernel32.HeapFree(_In_ HANDLE hHeap,_In_ DWORD dwFlags,_In_ LPVOID lpMem)
UINT WINAPI kernel32.GetPrivateProfileInt(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ INT nDefault,_In_ LPCTSTR lpFileName)
UINT WINAPI kernel32.GetPrivateProfileIntW(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ INT nDefault,_In_ LPCTSTR lpFileName)
UINT WINAPI kernel32.GetPrivateProfileIntA(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ INT nDefault,_In_ LPCTSTR lpFileName)
BOOL WINAPI user32.EnableNonClientDpiScaling(_In_ HWND hwnd)
BOOL None sisbkup.SisFreeBackupStructure(_In_ PVOID sisBackupStructure)
HRESULT None None.HRESULT_FROM_NT(DWORD x None)
VOID WINAPI kernel32.ReleaseSRWLockExclusive(_Inout_ PSRWLOCK SRWLock)
BOOL None kernel32.GetNumaProximityNodeEx(_In_ ULONG ProximityId,_Out_ PUSHORT NodeNumber)
DWORD WINAPI advapi32.TreeSetNamedSecurityInfo(_In_ LPTSTR pObjectName,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_In_opt_ PSID pOwner,_In_opt_ PSID pGroup,_In_opt_ PACL pDacl,_In_opt_ PACL pSacl,_In_ DWORD dwAction,_In_ FN_PROGRESS fnProgress,_In_ PROG_INVOKE_SETTING ProgressInvokeSetting,_In_opt_ PVOID Args)
DWORD WINAPI advapi32.TreeSetNamedSecurityInfoW(_In_ LPTSTR pObjectName,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_In_opt_ PSID pOwner,_In_opt_ PSID pGroup,_In_opt_ PACL pDacl,_In_opt_ PACL pSacl,_In_ DWORD dwAction,_In_ FN_PROGRESS fnProgress,_In_ PROG_INVOKE_SETTING ProgressInvokeSetting,_In_opt_ PVOID Args)
DWORD WINAPI advapi32.TreeSetNamedSecurityInfoA(_In_ LPTSTR pObjectName,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_In_opt_ PSID pOwner,_In_opt_ PSID pGroup,_In_opt_ PACL pDacl,_In_opt_ PACL pSacl,_In_ DWORD dwAction,_In_ FN_PROGRESS fnProgress,_In_ PROG_INVOKE_SETTING ProgressInvokeSetting,_In_opt_ PVOID Args)
BOOL WINAPI advapi32.PrivilegedServiceAuditAlarm(_In_ LPCTSTR SubsystemName,_In_ LPCTSTR ServiceName,_In_ HANDLE ClientToken,_In_ PPRIVILEGE_SET Privileges,_In_ BOOL AccessGranted)
BOOL WINAPI advapi32.PrivilegedServiceAuditAlarmW(_In_ LPCTSTR SubsystemName,_In_ LPCTSTR ServiceName,_In_ HANDLE ClientToken,_In_ PPRIVILEGE_SET Privileges,_In_ BOOL AccessGranted)
BOOL WINAPI advapi32.PrivilegedServiceAuditAlarmA(_In_ LPCTSTR SubsystemName,_In_ LPCTSTR ServiceName,_In_ HANDLE ClientToken,_In_ PPRIVILEGE_SET Privileges,_In_ BOOL AccessGranted)
HRESULT None None.StringCbVPrintf_lEx(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_Out_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ va_list argList)
HRESULT None None.StringCbVPrintf_lExW(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_Out_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ va_list argList)
HRESULT None None.StringCbVPrintf_lExA(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_Out_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ va_list argList)
LONG WINAPI advapi32.RegSaveKey(_In_ HKEY hKey,_In_ LPCTSTR lpFile,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes)
LONG WINAPI advapi32.RegSaveKeyW(_In_ HKEY hKey,_In_ LPCTSTR lpFile,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes)
LONG WINAPI advapi32.RegSaveKeyA(_In_ HKEY hKey,_In_ LPCTSTR lpFile,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes)
BOOL WINAPI kernel32.ConnectNamedPipe(_In_ HANDLE hNamedPipe,_Inout_opt_ LPOVERLAPPED lpOverlapped)
LPTSTR WINAPI advapi32.GetTrusteeName(_In_ PTRUSTEE pTrustee)
LPTSTR WINAPI advapi32.GetTrusteeNameW(_In_ PTRUSTEE pTrustee)
LPTSTR WINAPI advapi32.GetTrusteeNameA(_In_ PTRUSTEE pTrustee)
BOOL None kernel32.GetCalendarSupportedDateRange(_In_ CALID Calendar,_Out_ LPCALDATETIME lpCalMinDateTime,_Out_ LPCALDATETIME lpCalMaxDateTime)
LONG WINAPI storprop.CdromDisableDigitalPlayback(_In_ HDEVINFO DevInfo,_In_ PSP_DEVINFO_DATA DevInfoData)
HRESULT WINAPI ondemandconnroutehelper.GetInterfaceContextTableForHostName(_In_opt_ PCWSTR HostName,_In_opt_ PCWSTR ProxyName,_In_ DWORD Flags,_In_opt_ BYTE *ConnectionProfileFilterRawData,_In_ DWORD ConnectionProfileFilterRawDataSize,_Out_ NET_INTERFACE_CONTEXT_TABLE **InterfaceContextTable)
NET_API_STATUS NET_API_FUNCTION netapi32.NetDfsGetSupportedNamespaceVersion(_In_ DFS_NAMESPACE_VERSION_ORIGIN Origin,_In_ PWSTR pName,_Out_ PDFS_SUPPORTED_NAMESPACE_VERSION_INFO *ppVersionInfo)
VOID WINAPI kernel32.GetSystemTimePreciseAsFileTime(_Out_ LPFILETIME lpSystemTimeAsFileTime)
BOOL WINAPI advapi32.FindFirstFreeAce(_In_ PACL pAcl,_Out_ LPVOID *pAce)
LPCSTR WINAPI crypt32.CertAlgIdToOID(_In_ DWORD dwAlgId)
LRESULT CALLBACK gdi32.WndProc(HWND hWnd None,UINT message None,WPARAM wParam None,LPARAM lParam None)
LRESULT CALLBACK gdi32.CreateFontW(HWND hWnd None,UINT message None,WPARAM wParam None,LPARAM lParam None)
LRESULT CALLBACK gdi32.CreateFontA(HWND hWnd None,UINT message None,WPARAM wParam None,LPARAM lParam None)
HLOCAL WINAPI kernel32.LocalAlloc(_In_ UINT uFlags,_In_ SIZE_T uBytes)
VOID WINAPI kernel32.ExitThread(_In_ DWORD dwExitCode)
UINT WINAPI kernel32.GetWindowsDirectory(_Out_ LPTSTR lpBuffer,_In_ UINT uSize)
UINT WINAPI kernel32.GetWindowsDirectoryW(_Out_ LPTSTR lpBuffer,_In_ UINT uSize)
UINT WINAPI kernel32.GetWindowsDirectoryA(_Out_ LPTSTR lpBuffer,_In_ UINT uSize)
BOOL None kernel32.SetThreadErrorMode(_In_ DWORD dwNewMode,_Out_ LPDWORD lpOldMode)
BOOL WINAPI advapi32.InitializeSid(_Out_ PSID Sid,_In_ PSID_IDENTIFIER_AUTHORITY pIdentifierAuthority,_In_ BYTE nSubAuthorityCount)
WORD None None.HRESULT_CODE(HRESULT hr None)
DWORD WINAPI kernel32.QueryDosDevice(_In_opt_ LPCTSTR lpDeviceName,_Out_ LPTSTR lpTargetPath,_In_ DWORD ucchMax)
DWORD WINAPI kernel32.QueryDosDeviceW(_In_opt_ LPCTSTR lpDeviceName,_Out_ LPTSTR lpTargetPath,_In_ DWORD ucchMax)
DWORD WINAPI kernel32.QueryDosDeviceA(_In_opt_ LPCTSTR lpDeviceName,_Out_ LPTSTR lpTargetPath,_In_ DWORD ucchMax)
LONG WINAPI advapi32.RegEnumKeyEx(_In_ HKEY hKey,_In_ DWORD dwIndex,_Out_ LPTSTR lpName,_Inout_ LPDWORD lpcName,_Reserved_ LPDWORD lpReserved,_Inout_ LPTSTR lpClass,_Inout_opt_ LPDWORD lpcClass,_Out_opt_ PFILETIME lpftLastWriteTime)
LONG WINAPI advapi32.RegEnumKeyExW(_In_ HKEY hKey,_In_ DWORD dwIndex,_Out_ LPTSTR lpName,_Inout_ LPDWORD lpcName,_Reserved_ LPDWORD lpReserved,_Inout_ LPTSTR lpClass,_Inout_opt_ LPDWORD lpcClass,_Out_opt_ PFILETIME lpftLastWriteTime)
LONG WINAPI advapi32.RegEnumKeyExA(_In_ HKEY hKey,_In_ DWORD dwIndex,_Out_ LPTSTR lpName,_Inout_ LPDWORD lpcName,_Reserved_ LPDWORD lpReserved,_Inout_ LPTSTR lpClass,_Inout_opt_ LPDWORD lpcClass,_Out_opt_ PFILETIME lpftLastWriteTime)
BOOL WINAPI kernel32.GetModuleHandleEx(_In_ DWORD dwFlags,_In_opt_ LPCTSTR lpModuleName,_Out_ HMODULE *phModule)
BOOL WINAPI kernel32.GetModuleHandleExW(_In_ DWORD dwFlags,_In_opt_ LPCTSTR lpModuleName,_Out_ HMODULE *phModule)
BOOL WINAPI kernel32.GetModuleHandleExA(_In_ DWORD dwFlags,_In_opt_ LPCTSTR lpModuleName,_Out_ HMODULE *phModule)
HRESULT None shell32.GetIDList([out] PIDLIST_ABSOLUTE *ppidl)
DWORD WINAPI advapi32.SetNamedSecurityInfo(_In_ LPTSTR pObjectName,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_In_opt_ PSID psidOwner,_In_opt_ PSID psidGroup,_In_opt_ PACL pDacl,_In_opt_ PACL pSacl)
DWORD WINAPI advapi32.SetNamedSecurityInfoW(_In_ LPTSTR pObjectName,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_In_opt_ PSID psidOwner,_In_opt_ PSID psidGroup,_In_opt_ PACL pDacl,_In_opt_ PACL pSacl)
DWORD WINAPI advapi32.SetNamedSecurityInfoA(_In_ LPTSTR pObjectName,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_In_opt_ PSID psidOwner,_In_opt_ PSID psidGroup,_In_opt_ PACL pDacl,_In_opt_ PACL pSacl)
BOOL WINAPI advapi32.OpenThreadToken(_In_ HANDLE ThreadHandle,_In_ DWORD DesiredAccess,_In_ BOOL OpenAsSelf,_Out_ PHANDLE TokenHandle)
HANDLE WINAPI kernel32.CreateRemoteThread(_In_ HANDLE hProcess,_In_ LPSECURITY_ATTRIBUTES lpThreadAttributes,_In_ SIZE_T dwStackSize,_In_ LPTHREAD_START_ROUTINE lpStartAddress,_In_ LPVOID lpParameter,_In_ DWORD dwCreationFlags,_Out_ LPDWORD lpThreadId)
BOOL WINAPI user32.PhysicalToLogicalPoint(_In_ HWND hWnd,_Inout_ LPPOINT lpPoint)
LPVOID None ole32.CoTaskMemAlloc(_In_ SIZE_T cb)
BOOL WINAPI kernel32.Thread32Next(_In_ HANDLE hSnapshot,_Out_ LPTHREADENTRY32 lpte)
BOOL None sisbkup.SisCSFilesToBackupForLink(_In_ PVOID sisBackupStructure,_In_ PVOID reparseData,_In_ ULONG reparseDataSize,_Out_ PVOID thisFileContext,_Out_ PVOID *matchingFileContext,_Out_ PULONG countOfCommonStoreFilesToBackUp,_Out_ PWCHAR **commonStoreFilesToBackUp)
HLOCAL WINAPI kernel32.LocalReAlloc(_In_ HLOCAL hMem,_In_ SIZE_T uBytes,_In_ UINT uFlags)
BOOL WINAPI advapi32.AllocateAndInitializeSid(_In_ PSID_IDENTIFIER_AUTHORITY pIdentifierAuthority,_In_ BYTE nSubAuthorityCount,_In_ DWORD dwSubAuthority0,_In_ DWORD dwSubAuthority1,_In_ DWORD dwSubAuthority2,_In_ DWORD dwSubAuthority3,_In_ DWORD dwSubAuthority4,_In_ DWORD dwSubAuthority5,_In_ DWORD dwSubAuthority6,_In_ DWORD dwSubAuthority7,_Out_ PSID *pSid)
uint32 None vdswmi.AddMountPoint([in] string Directory)
public void None.GoToPage(int pageNumber None)
BOOL WINAPI dbghelp.SymEnumSourceFiles(_In_ HANDLE hProcess,_In_ ULONG64 ModBase,_In_opt_ PCTSTR Mask,_In_ PSYM_ENUMSOURCEFILES_CALLBACK EnumSymbolsCallback,_In_opt_ PVOID UserContext)
BOOL WINAPI dbghelp.SymEnumSourceFilesW(_In_ HANDLE hProcess,_In_ ULONG64 ModBase,_In_opt_ PCTSTR Mask,_In_ PSYM_ENUMSOURCEFILES_CALLBACK EnumSymbolsCallback,_In_opt_ PVOID UserContext)
BOOL WINAPI dbghelp.SymEnumSourceFiles(_In_ HANDLE hProcess,_In_ ULONG64 ModBase,_In_opt_ PCTSTR Mask,_In_ PSYM_ENUMSOURCEFILES_CALLBACK EnumSymbolsCallback,_In_opt_ PVOID UserContext)
HANDLE WINAPI kernel32.FindFirstFileTransacted(_In_ LPCTSTR lpFileName,_In_ FINDEX_INFO_LEVELS fInfoLevelId,_Out_ LPVOID lpFindFileData,_In_ FINDEX_SEARCH_OPS fSearchOp,_Reserved_ LPVOID lpSearchFilter,_In_ DWORD dwAdditionalFlags,_In_ HANDLE hTransaction)
HANDLE WINAPI kernel32.FindFirstFileTransactedW(_In_ LPCTSTR lpFileName,_In_ FINDEX_INFO_LEVELS fInfoLevelId,_Out_ LPVOID lpFindFileData,_In_ FINDEX_SEARCH_OPS fSearchOp,_Reserved_ LPVOID lpSearchFilter,_In_ DWORD dwAdditionalFlags,_In_ HANDLE hTransaction)
HANDLE WINAPI kernel32.FindFirstFileTransactedA(_In_ LPCTSTR lpFileName,_In_ FINDEX_INFO_LEVELS fInfoLevelId,_Out_ LPVOID lpFindFileData,_In_ FINDEX_SEARCH_OPS fSearchOp,_Reserved_ LPVOID lpSearchFilter,_In_ DWORD dwAdditionalFlags,_In_ HANDLE hTransaction)
BOOL WINAPI advapi32.LookupPrivilegeValue(_In_opt_ LPCTSTR lpSystemName,_In_ LPCTSTR lpName,_Out_ PLUID lpLuid)
BOOL WINAPI advapi32.LookupPrivilegeValueW(_In_opt_ LPCTSTR lpSystemName,_In_ LPCTSTR lpName,_Out_ PLUID lpLuid)
BOOL WINAPI advapi32.LookupPrivilegeValueA(_In_opt_ LPCTSTR lpSystemName,_In_ LPCTSTR lpName,_Out_ PLUID lpLuid)
NTSTATUS None None.IoInitializeTimer(_In_ PDEVICE_OBJECT DeviceObject,_In_ PIO_TIMER_ROUTINE TimerRoutine,_In_opt_ PVOID Context)
VOID WINAPI kernel32.ReleaseSRWLockShared(_Inout_ PSRWLOCK SRWLock)
BOOL WINAPI ktmw32.CommitTransaction(_In_ HANDLE TransactionHandle)
BOOL WINAPI kernel32.WaitCommEvent(_In_ HANDLE hFile,_Out_ LPDWORD lpEvtMask,_In_ LPOVERLAPPED lpOverlapped)
LPTSTR WINAPI kernel32.lstrcpy(_Out_ LPTSTR lpString1,_In_ LPTSTR lpString2)
LPTSTR WINAPI kernel32.lstrcpyW(_Out_ LPTSTR lpString1,_In_ LPTSTR lpString2)
LPTSTR WINAPI kernel32.lstrcpyA(_Out_ LPTSTR lpString1,_In_ LPTSTR lpString2)
BOOL CALLBACK None.SymEnumSourceFilesProc(_In_ PSOURCEFILE pSourceFile,_In_opt_ PVOID UserContext)
HRESULT WINAPI wofutil.WofWimRemoveEntry(_In_ PCWSTR VolumeName,_In_ LARGE_INTEGER DataSourceId)
BOOL WINAPI kernel32.EscapeCommFunction(_In_ HANDLE hFile,_In_ DWORD dwFunc)
LONG WINAPI advapi32.RegQueryValue(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_Out_opt_ LPTSTR lpValue,_Inout_opt_ PLONG lpcbValue)
LONG WINAPI advapi32.RegQueryValueW(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_Out_opt_ LPTSTR lpValue,_Inout_opt_ PLONG lpcbValue)
LONG WINAPI advapi32.RegQueryValueA(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_Out_opt_ LPTSTR lpValue,_Inout_opt_ PLONG lpcbValue)
HRESULT None qmgrprxy.EnumFiles([out] IEnumBackgroundCopyFiles **ppEnumFiles)
BOOL WINAPI advapi32.SetSecurityDescriptorGroup(_Inout_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_opt_ PSID pGroup,_In_ BOOL bGroupDefaulted)
BOOL WINAPI advapi32.ImpersonateAnonymousToken(_In_ HANDLE ThreadHandle)
BOOL WINAPI kernel32.SetComputerNameEx(_In_ COMPUTER_NAME_FORMAT NameType,_In_ LPCTSTR lpBuffer)
BOOL WINAPI kernel32.SetComputerNameExW(_In_ COMPUTER_NAME_FORMAT NameType,_In_ LPCTSTR lpBuffer)
BOOL WINAPI kernel32.SetComputerNameExA(_In_ COMPUTER_NAME_FORMAT NameType,_In_ LPCTSTR lpBuffer)
NET_API_STATUS None netapi32.NetDfsMove(_In_ LPWSTR Path,_In_ LPWSTR NewPath,_In_ ULONG Flags)
BOOL WINAPI kernel32.ReadDirectoryChangesExW(_In_ HANDLE hDirectory,_Out_ LPVOID lpBuffer,_In_ DWORD nBufferLength,_In_ BOOL bWatchSubtree,_In_ DWORD dwNotifyFilter,_Out_opt_ LPDWORD lpBytesReturned,_Inout_opt_ LPOVERLAPPED lpOverlapped,_In_opt_ LPOVERLAPPED_COMPLETION_ROUTINE lpCompletionRoutine,_In_ READ_DIRECTORY_NOTIFY_INFORMATION_CLASS ReadDirectoryNotifyInformationClass)
uint32 None vdswmi.DefragAnalysis([out] boolean DefragRecommended,[out] object DefragAnalysis)
BOOL WINAPI kernel32.QueryProcessAffinityUpdateMode(_In_ HANDLE ProcessHandle,_Out_opt_ DWORD lpdwFlags)
HDEVNOTIFY WINAPI user32.RegisterDeviceNotification(_In_ HANDLE hRecipient,_In_ LPVOID NotificationFilter,_In_ DWORD Flags)
HDEVNOTIFY WINAPI user32.RegisterDeviceNotificationW(_In_ HANDLE hRecipient,_In_ LPVOID NotificationFilter,_In_ DWORD Flags)
HDEVNOTIFY WINAPI user32.RegisterDeviceNotificationA(_In_ HANDLE hRecipient,_In_ LPVOID NotificationFilter,_In_ DWORD Flags)
HRESULT None ole32.CoRevokeClassObject(_In_ DWORD dwRegister)
BOOL WINAPI user32.SystemParametersInfoForDpi(_In_ UINT uiAction,_In_ UINT uiParam,_Inout_ PVOID pvParam,_In_ UINT fWinIni,_In_ UINT dpi)
BOOL CALLBACK None.EnumLocalesProc(_In_ LPTSTR lpLocaleString)
DLL_DIRECTORY_COOKIE WINAPI kernel32.AddDllDirectory(_In_ PCWSTR NewDirectory)
BOOL WINAPI advapi32.SetPrivateObjectSecurity(_In_ SECURITY_INFORMATION SecurityInformation,_In_ PSECURITY_DESCRIPTOR ModificationDescriptor,_Inout_ PSECURITY_DESCRIPTOR *ObjectsSecurityDescriptor,_In_ PGENERIC_MAPPING GenericMapping,_In_opt_ HANDLE Token)
TRUSTEE_FORM WINAPI advapi32.GetTrusteeForm(_In_ PTRUSTEE pTrustee)
TRUSTEE_FORM WINAPI advapi32.GetTrusteeFormW(_In_ PTRUSTEE pTrustee)
TRUSTEE_FORM WINAPI advapi32.GetTrusteeFormA(_In_ PTRUSTEE pTrustee)
BOOL WINAPI kernel32.InitOnceBeginInitialize(_Inout_ LPINIT_ONCE lpInitOnce,_In_ DWORD dwFlags,_Out_ PBOOL fPending,_Out_opt_ LPVOID *lpContext)
HRESULT None None.StringCchCopyNEx(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_In_ size_t cchSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCchCopyNExW(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_In_ size_t cchSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCchCopyNExA(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_In_ size_t cchSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
HGLOBAL WINAPI kernel32.GlobalHandle(_In_ LPCVOID pMem)
LPVOID WINAPI kernel32.VirtualAlloc(_In_opt_ LPVOID lpAddress,_In_ SIZE_T dwSize,_In_ DWORD flAllocationType,_In_ DWORD flProtect)
VOID WINAPI kernel32.WakeConditionVariable(_Inout_ PCONDITION_VARIABLE ConditionVariable)
ULONG WINAPI ntdll.RtlNtStatusToDosError(_In_ NTSTATUS Status)
BOOL WINAPI kernel32.FindNextVolume(_In_ HANDLE hFindVolume,_Out_ LPTSTR lpszVolumeName,_In_ DWORD cchBufferLength)
BOOL WINAPI kernel32.FindNextVolumeW(_In_ HANDLE hFindVolume,_Out_ LPTSTR lpszVolumeName,_In_ DWORD cchBufferLength)
BOOL WINAPI kernel32.FindNextVolumeA(_In_ HANDLE hFindVolume,_Out_ LPTSTR lpszVolumeName,_In_ DWORD cchBufferLength)
NTSTATUS None None.IoCreateDevice(_In_ PDRIVER_OBJECT DriverObject,_In_ ULONG DeviceExtensionSize,_In_opt_ PUNICODE_STRING DeviceName,_In_ DEVICE_TYPE DeviceType,_In_ ULONG DeviceCharacteristics,_In_ BOOLEAN Exclusive,_Out_ PDEVICE_OBJECT *DeviceObject)
BOOLEAN WINAPI advapi32.AuditSetGlobalSacl(_In_ PCWSTR ObjectTypeName,_In_opt_ PACL Acl)
BOOLEAN WINAPI advapi32.AuditSetGlobalSaclW(_In_ PCWSTR ObjectTypeName,_In_opt_ PACL Acl)
BOOLEAN WINAPI advapi32.AuditSetGlobalSaclA(_In_ PCWSTR ObjectTypeName,_In_opt_ PACL Acl)
BOOL WINAPI kernel32.SetMailslotInfo(_In_ HANDLE hMailslot,_In_ DWORD lReadTimeout)
DWORD WINAPI advapi32.GetSecurityInfo(_In_ HANDLE handle,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_Out_opt_ PSID *ppsidOwner,_Out_opt_ PSID *ppsidGroup,_Out_opt_ PACL *ppDacl,_Out_opt_ PACL *ppSacl,_Out_opt_ PSECURITY_DESCRIPTOR *ppSecurityDescriptor)
BOOL WINAPI kernel32.SetProcessDefaultCpuSets(_In_ HANDLE Process,_In_opt_ ULONG CpuSetIds,_In_ ULONG CpuSetIdCound)
DWORD WINAPI kernel32.LoadModule(_In_ LPCSTR lpModuleName,_In_ LPVOID lpParameterBlock)
UINT None nddeapi.NDdeShareAdd(_In_ LPTSTR lpszServer,_In_ UINT nLevel,_In_ PSECURITY_DESCRIPTOR pSD,_In_ LPBYTE lpBuffer,_In_ DWORD cBufSize)
UINT None nddeapi.NDdeShareAddW(_In_ LPTSTR lpszServer,_In_ UINT nLevel,_In_ PSECURITY_DESCRIPTOR pSD,_In_ LPBYTE lpBuffer,_In_ DWORD cBufSize)
UINT None nddeapi.NDdeShareAddA(_In_ LPTSTR lpszServer,_In_ UINT nLevel,_In_ PSECURITY_DESCRIPTOR pSD,_In_ LPBYTE lpBuffer,_In_ DWORD cBufSize)
BOOL WINAPI authz.AuthzInitializeContextFromAuthzContext(_In_ DWORD flags,_In_ AUTHZ_CLIENT_CONTEXT_HANDLE hAuthzClientContext,_In_opt_ PLARGE_INTEGER pExpirationTime,_In_ LUID Identifier,_In_ PVOID DynamicGroupArgs,_Out_ PAUTHZ_CLIENT_CONTEXT_HANDLE phNewAuthzClientContext)
HRESULT None None.MAKE_HRESULT(WORD sev None,WORD fac None,WORD code None)
BOOL WINAPI kernel32.RemoveDirectory(_In_ LPCTSTR lpPathName)
BOOL WINAPI kernel32.RemoveDirectoryW(_In_ LPCTSTR lpPathName)
BOOL WINAPI kernel32.RemoveDirectoryA(_In_ LPCTSTR lpPathName)
BOOL WINAPI kernel32.GetCommProperties(_In_ HANDLE hFile,_Out_ LPCOMMPROP lpCommProp)
WORD None None.LOWORD(DWORD dwValue None)
NET_API_STATUS None netapi32.NetDfsSetSecurity(_In_ LPWSTR DfsEntryPath,_In_ SECURITY_INFORMATION SecurityInformation,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor)
BOOL WINAPI dbghelp.SymGetOmaps(_In_ HANDLE hProcess,_In_ ULONG64 BaseOfDll,_Out_ POMAP *OmapTo,_Out_ PDWORD64 cOmapTo,_Out_ POMAP *OmapFrom,_Out_ PDWORD64 cOmapFrom)
BOOL WINAPI kernel32.UnregisterWaitEx(_In_ HANDLE WaitHandle,_In_opt_ HANDLE CompletionEvent)
LONG WINAPI advapi32.RegDeleteKeyEx(_In_ HKEY hKey,_In_ LPCTSTR lpSubKey,_In_ REGSAM samDesired,_Reserved_ DWORD Reserved)
LONG WINAPI advapi32.RegDeleteKeyExW(_In_ HKEY hKey,_In_ LPCTSTR lpSubKey,_In_ REGSAM samDesired,_Reserved_ DWORD Reserved)
LONG WINAPI advapi32.RegDeleteKeyExA(_In_ HKEY hKey,_In_ LPCTSTR lpSubKey,_In_ REGSAM samDesired,_Reserved_ DWORD Reserved)
BOOL WINAPI kernel32.CloseHandle(_In_ HANDLE hObject)
BOOL None kernel32.IsNLSDefinedString(_In_ NLS_FUNCTION Function,_In_ DWORD dwFlags,_In_ LPNLSVERSIONINFO lpVersionInformation,_In_ LPCWSTR lpString,_In_ INT cchStr)
VOID WINAPI advapi32.BuildTrusteeWithSid(_Inout_ PTRUSTEE pTrustee,_In_opt_ PSID pSid)
VOID WINAPI advapi32.BuildTrusteeWithSidW(_Inout_ PTRUSTEE pTrustee,_In_opt_ PSID pSid)
VOID WINAPI advapi32.BuildTrusteeWithSidA(_Inout_ PTRUSTEE pTrustee,_In_opt_ PSID pSid)
BOOL WINAPI kernel32.DosDateTimeToFileTime(_In_ WORD wFatDate,_In_ WORD wFatTime,_Out_ LPFILETIME lpFileTime)
uint32 None cscobj.RenameItem([in] string OriginalPath,[in] string NewPath,[in] boolean ReplaceIfExists)
DWORD None kernel32.PrepareTape(_In_ HANDLE hDevice,_In_ DWORD dwOperation,_In_ BOOL bImmediate)
BOOL WINAPI kernel32.GetExitCodeThread(_In_ HANDLE hThread,_Out_ LPDWORD lpExitCode)
BOOL WINAPI advapi32.GetThreadWaitChain(_In_ HWCT WctHandle,_In_opt_ DWORD_PTR Context,_In_ DWORD Flags,_In_ DWORD ThreadId,_Inout_ LPDWORD NodeCount,_Out_ PWAITCHAIN_NODE_INFO NodeInfoArray,_Out_ LPBOOL IsCycle)
BOOL WINAPI advapi32.GetPrivateObjectSecurity(_In_ PSECURITY_DESCRIPTOR ObjectDescriptor,_In_ SECURITY_INFORMATION SecurityInformation,_Out_opt_ PSECURITY_DESCRIPTOR ResultantDescriptor,_In_ DWORD DescriptorLength,_Out_ PDWORD ReturnLength)
BOOL WINAPI fmapi.DetectEncryptedVolumeEx(_In_ PFILE_RESTORE_CONTEXT Context,_Out_ PDWORD VolumeEncryptionInfo,_Out_ PULONGLONG VolumeSize)
HRESULT None None.StringCchCat(_Inout_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc)
HRESULT None None.StringCchCatW(_Inout_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc)
HRESULT None None.StringCchCatA(_Inout_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc)
HRESULT None None.GetRelationshipSet([out None None,retval] IOpcRelationshipSet **relationshipSet)
BOOL WINAPI kernel32.PulseEvent(_In_ HANDLE hEvent)
BOOLEAN WINAPI kernel32.TryAcquireSRWLockExclusive(_Inout_ PSRWLOCK SRWLock)
BOOL None gdi32.DeleteMetaFile(_In_ HMETAFILE hmf)
LONG WINAPI storprop.CdromDisableDigitalPlayback(_In_ HDEVINFO DevInfo,_In_ PSP_DEVINFO_DATA DevInfoData)
LPTSTR WINAPI advapi32.GetTrusteeName(_In_ PTRUSTEE pTrustee)
LPTSTR WINAPI advapi32.GetTrusteeNameW(_In_ PTRUSTEE pTrustee)
LPTSTR WINAPI advapi32.GetTrusteeNameA(_In_ PTRUSTEE pTrustee)
BOOL WINAPI advapi32.ConvertToAutoInheritPrivateObjectSecurity(_In_opt_ PSECURITY_DESCRIPTOR ParentDescriptor,_In_ PSECURITY_DESCRIPTOR CurrentSecurityDescriptor,_Out_ PSECURITY_DESCRIPTOR *NewSecurityDescriptor,_In_opt_ GUID *ObjectType,_In_ BOOLEAN IsDirectoryObject,_In_ PGENERIC_MAPPING GenericMapping)
BOOL WINAPI kernel32.DeviceIoControl(_In_ HANDLE hDevice,_In_ DWORD dwIoControlCode,_In_opt_ LPVOID lpInBuffer,_In_ DWORD nInBufferSize,_Out_opt_ LPVOID lpOutBuffer,_In_ DWORD nOutBufferSize,_Out_opt_ LPDWORD lpBytesReturned,_Inout_opt_ LPOVERLAPPED lpOverlapped)
BOOL WINAPI kernel32.InitializeCriticalSectionAndSpinCount(_Out_ LPCRITICAL_SECTION lpCriticalSection,_In_ DWORD dwSpinCount)
BOOL WINAPI kernel32.Thread32First(_In_ HANDLE hSnapshot,_Inout_ LPTHREADENTRY32 lpte)
BOOL WINAPI kernel32.SetHandleInformation(_In_ HANDLE hObject,_In_ DWORD dwMask,_In_ DWORD dwFlags)
BOOL WINAPI kernel32.GetVolumePathNamesForVolumeName(_In_ LPCTSTR lpszVolumeName,_Out_ LPTSTR lpszVolumePathNames,_In_ DWORD cchBufferLength,_Out_ PDWORD lpcchReturnLength)
BOOL WINAPI kernel32.GetVolumePathNamesForVolumeNameW(_In_ LPCTSTR lpszVolumeName,_Out_ LPTSTR lpszVolumePathNames,_In_ DWORD cchBufferLength,_Out_ PDWORD lpcchReturnLength)
BOOL WINAPI kernel32.GetVolumePathNamesForVolumeNameA(_In_ LPCTSTR lpszVolumeName,_Out_ LPTSTR lpszVolumePathNames,_In_ DWORD cchBufferLength,_Out_ PDWORD lpcchReturnLength)
BOOL WINAPI kernel32.GetVolumePathNamesForVolumeName(_In_ LPCTSTR lpszVolumeName,_Out_ LPTSTR lpszVolumePathNames,_In_ DWORD cchBufferLength,_Out_ PDWORD lpcchReturnLength)
BOOL WINAPI kernel32.GetVolumePathNamesForVolumeNameW(_In_ LPCTSTR lpszVolumeName,_Out_ LPTSTR lpszVolumePathNames,_In_ DWORD cchBufferLength,_Out_ PDWORD lpcchReturnLength)
BOOL WINAPI kernel32.GetVolumePathNamesForVolumeNameA(_In_ LPCTSTR lpszVolumeName,_Out_ LPTSTR lpszVolumePathNames,_In_ DWORD cchBufferLength,_Out_ PDWORD lpcchReturnLength)
LONG WINAPI advapi32.RegQueryReflectionKey(_In_ HKEY hBase,_Out_ BOOL *bIsReflectionDisabled)
BOOL None sisbkup.SisCreateRestoreStructure(_In_ PWCHAR volumeRoot,_Out_ PVOID *sisRestoreStructure,_Out_ PWCHAR *commonStoreRootPathname,_Out_ PULONG countOfCommonStoreFilesToRestore,_Out_ PWCHAR **commonStoreFilesToRestore)
BOOL WINAPI kernel32.SetCommBreak(_In_ HANDLE hFile)
BOOL None None.DoCancelableRead(HANDLE hFile None,LPVOID lpBuffer None,DWORD nNumberOfBytesToRead None,LPDWORD lpNumberOfBytesRead None,LPOVERLAPPED lpOverlapped None,DWORD dwTimeout None,LPBOOL pbCancelCalled None)
ULONG None None.IoGetFunctionCodeFromCtlCode(_In_ ULONG ControlCode)
BOOL None advapi32.OperationStart(_In_ OPERATION_START_PARAMETERS *OperationParams)
DWORD WINAPI None.HandlerEx(_In_ DWORD dwControl,_In_ DWORD dwEventType,_In_ LPVOID lpEventData,_In_ LPVOID lpContext)
PIMAGE_NT_HEADERS WINAPI dbghelp.ImageNtHeader(_In_ PVOID ImageBase)
LPVOID WINAPI kernelbase.TlsGetValue(_In_ DWORD dwTlsIndex)
HTHEME None uxtheme.OpenThemeData(_In_ HWND hwnd,_In_ LPCWSTR pszClassList)
BOOL None None.IS_ERROR(HRESULT Status None)
DWORD None cscapi.OfflineFilesQueryStatusEx(_Out_ BOOL *pbActive,_Out_ BOOL *pbEnabled,_Out_ BOOL *pbAvailable)
VOID None None.IoStopTimer(_In_ PDEVICE_OBJECT DeviceObject)
BOOL None ktmw32.PrePrepareEnlistment(_In_ HANDLE EnlistmentHandle,_In_ PLARGE_INTEGER TmVirtualClock)
SIZE_T WINAPI kernel32.GlobalSize(_In_ HGLOBAL hMem)
BOOL CALLBACK None.InitOnceCallback(_Inout_ PINIT_ONCE InitOnce,_Inout_opt_ PVOID Parameter,_Out_opt_ PVOID *Context)
BOOL WINAPI fmapi.CloseFileRestoreContext(_In_ PFILE_RESTORE_CONTEXT Context)
BOOL WINAPI advapi32.GetKernelObjectSecurity(_In_ HANDLE Handle,_In_ SECURITY_INFORMATION RequestedInformation,_Out_opt_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_ DWORD nLength,_Out_ LPDWORD lpnLengthNeeded)
HRESULT None qmgrprxy.GetDisplayName([out] LPWSTR *ppDisplayName)
BOOL WINAPI user32.DdeKeepStringHandle(_In_ DWORD idInst,_In_ HSZ hsz)
BOOL WINAPI crypt32.CryptMsgCountersignEncoded(_In_ DWORD dwEncodingType,_In_ PBYTE pbSignerInfo,_In_ DWORD cbSignerInfo,_In_ DWORD cCountersigners,_In_ PCMSG_SIGNER_ENCODE_INFO rgCountersigners,_Out_ PBYTE pbCountersignature,_Inout_ PDWORD pcbCountersignature)
HLOCAL WINAPI kernel32.LocalAlloc(_In_ UINT uFlags,_In_ SIZE_T uBytes)
DWORD None None.DetectSectorSize(WCHAR * devName,PSTORAGE_ACCESS_ALIGNMENT_DESCRIPTOR pAlignmentDescriptor None)
LPITEMIDLIST None None.CreatePIDL(DWORD dwType None,LPCWSTR pwszDisplayName None)
void None None.DismProgressCallback(_In_ UINT Current,_In_ UINT Total,_In_ PVOID UserData)
BOOL WINAPI advapi32.PrivilegedServiceAuditAlarm(_In_ LPCTSTR SubsystemName,_In_ LPCTSTR ServiceName,_In_ HANDLE ClientToken,_In_ PPRIVILEGE_SET Privileges,_In_ BOOL AccessGranted)
BOOL WINAPI advapi32.PrivilegedServiceAuditAlarmW(_In_ LPCTSTR SubsystemName,_In_ LPCTSTR ServiceName,_In_ HANDLE ClientToken,_In_ PPRIVILEGE_SET Privileges,_In_ BOOL AccessGranted)
BOOL WINAPI advapi32.PrivilegedServiceAuditAlarmA(_In_ LPCTSTR SubsystemName,_In_ LPCTSTR ServiceName,_In_ HANDLE ClientToken,_In_ PPRIVILEGE_SET Privileges,_In_ BOOL AccessGranted)
BOOL WINAPI kernel32.CancelWaitableTimer(_In_ HANDLE hTimer)
BOOL WINAPI wevtapi.EvtSetChannelConfigProperty(_In_ EVT_HANDLE ChannelConfig,_In_ EVT_CHANNEL_CONFIG_PROPERTY_ID PropertyId,_In_ DWORD Flags,_In_ PEVT_VARIANT PropertyValue)
HWND WINAPI user32.FindWindow(_In_opt_ LPCTSTR lpClassName,_In_opt_ LPCTSTR lpWindowName)
HWND WINAPI user32.FindWindowW(_In_opt_ LPCTSTR lpClassName,_In_opt_ LPCTSTR lpWindowName)
HWND WINAPI user32.FindWindowA(_In_opt_ LPCTSTR lpClassName,_In_opt_ LPCTSTR lpWindowName)
BOOL WINAPI kernel32.GetVolumeInformationByHandleW(_In_ HANDLE hFile,_Out_opt_ LPWSTR lpVolumeNameBuffer,_In_ DWORD nVolumeNameSize,_Out_opt_ LPDWORD lpVolumeSerialNumber,_Out_opt_ LPDWORD lpMaximumComponentLength,_Out_opt_ LPDWORD lpFileSystemFlags,_Out_opt_ LPWSTR lpFileSystemNameBuffer,_In_ DWORD nFileSystemNameSize)
BOOL None advapi32.ConvertSidToStringSid(_In_ PSID Sid,_Out_ LPTSTR *StringSid)
BOOL None advapi32.ConvertSidToStringSidW(_In_ PSID Sid,_Out_ LPTSTR *StringSid)
BOOL None advapi32.ConvertSidToStringSidA(_In_ PSID Sid,_Out_ LPTSTR *StringSid)
BOOL WINAPI None.DllMain(_In_ HINSTANCE hinstDLL,_In_ DWORD fdwReason,_In_ LPVOID lpvReserved)
BOOL WINAPI kernel32.TerminateThread(_Inout_ HANDLE hThread,_In_ DWORD dwExitCode)
HRESULT None None.StringCbPrintf_lEx(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_Out_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ ... None)
HRESULT None None.StringCbPrintf_lExW(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_Out_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ ... None)
HRESULT None None.StringCbPrintf_lExA(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_Out_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ ... None)
BOOL WINAPI advapi32.GetSecurityDescriptorSacl(_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_Out_ LPBOOL lpbSaclPresent,_Out_ PACL *pSacl,_Out_ LPBOOL lpbSaclDefaulted)
BOOL WINAPI kernel32.GetCommConfig(_In_ HANDLE hCommDev,_Out_ LPCOMMCONFIG lpCC,_Inout_ LPDWORD lpdwSize)
HANDLE WINAPI kernel32.CreateFile(_In_ LPCTSTR lpFileName,_In_ DWORD dwDesiredAccess,_In_ DWORD dwShareMode,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ DWORD dwCreationDisposition,_In_ DWORD dwFlagsAndAttributes,_In_opt_ HANDLE hTemplateFile)
HANDLE WINAPI kernel32.CreateFileW(_In_ LPCTSTR lpFileName,_In_ DWORD dwDesiredAccess,_In_ DWORD dwShareMode,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ DWORD dwCreationDisposition,_In_ DWORD dwFlagsAndAttributes,_In_opt_ HANDLE hTemplateFile)
HANDLE WINAPI kernel32.CreateFileA(_In_ LPCTSTR lpFileName,_In_ DWORD dwDesiredAccess,_In_ DWORD dwShareMode,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ DWORD dwCreationDisposition,_In_ DWORD dwFlagsAndAttributes,_In_opt_ HANDLE hTemplateFile)
DWORD WINAPI kernel32.Wow64SuspendThread(_In_ HANDLE hThread)
BOOL WINAPI kernel32.GetProcessIoCounters(_In_ HANDLE hProcess,_Out_ PIO_COUNTERS lpIoCounters)
MMRESULT None winmm.timeBeginPeriod(UINT uPeriod None)
BOOL WINAPI advapi32.SetSecurityDescriptorControl(_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_ SECURITY_DESCRIPTOR_CONTROL ControlBitsOfInterest,_In_ SECURITY_DESCRIPTOR_CONTROL ControlBitsToSet)
PCTSTR WINAPI dbghelp.SymSrvDeltaName(_In_ HANDLE hProcess,_In_opt_ PCTSTR SymPath,_In_ PCTSTR Type,_In_ PCTSTR File1,_In_ PCTSTR File2)
PCTSTR WINAPI dbghelp.SymSrvDeltaNameW(_In_ HANDLE hProcess,_In_opt_ PCTSTR SymPath,_In_ PCTSTR Type,_In_ PCTSTR File1,_In_ PCTSTR File2)
PCTSTR WINAPI dbghelp.SymSrvDeltaName(_In_ HANDLE hProcess,_In_opt_ PCTSTR SymPath,_In_ PCTSTR Type,_In_ PCTSTR File1,_In_ PCTSTR File2)
BOOL WINAPI kernel32.GetFileTime(_In_ HANDLE hFile,_Out_opt_ LPFILETIME lpCreationTime,_Out_opt_ LPFILETIME lpLastAccessTime,_Out_opt_ LPFILETIME lpLastWriteTime)
BOOL WINAPI kernel32.GetComputerName(_Out_ LPTSTR lpBuffer,_Inout_ LPDWORD lpnSize)
BOOL WINAPI kernel32.GetComputerNameW(_Out_ LPTSTR lpBuffer,_Inout_ LPDWORD lpnSize)
BOOL WINAPI kernel32.GetComputerNameA(_Out_ LPTSTR lpBuffer,_Inout_ LPDWORD lpnSize)
NET_API_STATUS None netapi32.NetDfsEnum(_In_ LPWSTR DfsName,_In_ DWORD Level,_In_ DWORD PrefMaxLen,_Out_ LPBYTE *Buffer,_Out_ LPDWORD EntriesRead,_Inout_ LPDWORD ResumeHandle)
WORD None None.HRESULT_FACILITY(HRESULT hr None)
BOOL None nddeapi.NDdeIsValidAppTopicList(_In_ LPTSTR targetTopic)
BOOL None nddeapi.NDdeIsValidAppTopicListW(_In_ LPTSTR targetTopic)
BOOL None nddeapi.NDdeIsValidAppTopicListA(_In_ LPTSTR targetTopic)
BOOL WINAPI storprop.DvdLauncher(_In_ HWND HWnd,_In_ CHAR DriveLetter)
BOOL WINAPI kernel32.GetMemoryErrorHandlingCapabilities(_Out_ PULONG Capabilities)
BOOL WINAPI kernel32.SetSystemTimeAdjustment(_In_ DWORD dwTimeAdjustment,_In_ BOOL bTimeAdjustmentDisabled)
BOOL WINAPI kernel32.DeleteTimerQueueEx(_In_ HANDLE TimerQueue,_In_opt_ HANDLE CompletionEvent)
BOOL WINAPI kernel32.DeleteTimerQueue(_In_ HANDLE TimerQueue)
GEOID None kernel32.GetUserGeoID(_In_ GEOCLASS GeoClass)
HRESULT None None.StringCchCopyEx(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCchCopyExW(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCchCopyExA(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
LARGE_INTEGER None hal.KeQueryPerformanceCounter(_Out_opt_ PLARGE_INTEGER PerformanceFrequency)
VOID None None.FltSetCallbackDataDirty(_Inout_ PFLT_CALLBACK_DATA Data)
BOOL WINAPI user32.AdjustWindowRectEx(_Inout_ LPRECT lpRect,_In_ DWORD dwStyle,_In_ BOOL bMenu,_In_ DWORD dwExStyle)
BOOL WINAPI wevtapi.EvtGetObjectArraySize(_In_ EVT_OBJECT_ARRAY_PROPERTY_HANDLE ObjectArray,_Out_ PDWORD ObjectArraySize)
BOOL WINAPI user32.SwitchDesktop(_In_ HDESK hDesktop)
HRESULT None qmgrprxy.GetError([out] IBackgroundCopyError **ppError)
HANDLE WINAPI kernel32.CreateBoundaryDescriptor(_In_ LPCTSTR Name,_In_ ULONG Flags)
HANDLE WINAPI kernel32.CreateBoundaryDescriptorW(_In_ LPCTSTR Name,_In_ ULONG Flags)
HANDLE WINAPI kernel32.CreateBoundaryDescriptorA(_In_ LPCTSTR Name,_In_ ULONG Flags)
NTSTATUS None None.IoGetDeviceObjectPointer(_In_ PUNICODE_STRING ObjectName,_In_ ACCESS_MASK DesiredAccess,_Out_ PFILE_OBJECT *FileObject,_Out_ PDEVICE_OBJECT *DeviceObject)
INT WSAAPI ws2_32.WSAEnumNameSpaceProviders(_Inout_ LPDWORD lpdwBufferLength,_Out_ LPWSANAMESPACE_INFO lpnspBuffer)
INT WSAAPI ws2_32.WSAEnumNameSpaceProvidersW(_Inout_ LPDWORD lpdwBufferLength,_Out_ LPWSANAMESPACE_INFO lpnspBuffer)
INT WSAAPI ws2_32.WSAEnumNameSpaceProvidersA(_Inout_ LPDWORD lpdwBufferLength,_Out_ LPWSANAMESPACE_INFO lpnspBuffer)
BOOL WINAPI kernel32.BuildCommDCB(_In_ LPCTSTR lpDef,_Out_ LPDCB lpDCB)
BOOL WINAPI kernel32.BuildCommDCBW(_In_ LPCTSTR lpDef,_Out_ LPDCB lpDCB)
BOOL WINAPI kernel32.BuildCommDCBA(_In_ LPCTSTR lpDef,_Out_ LPDCB lpDCB)
BOOL WINAPI kernel32.WritePrivateProfileSection(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpString,_In_ LPCTSTR lpFileName)
BOOL WINAPI kernel32.WritePrivateProfileSectionW(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpString,_In_ LPCTSTR lpFileName)
BOOL WINAPI kernel32.WritePrivateProfileSectionA(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpString,_In_ LPCTSTR lpFileName)
LPWSTR None None.OLESTR(LPSTR str None)
XMVECTOR None None.XMVectorPermuteControl(UINT ElementIndex0 None,UINT ElementIndex1 None,UINT ElementIndex2 None,UINT ElementIndex3 None)
BOOL WINAPI kernel32.OOBEComplete(_Out_ PBOOL OOBEComplete)
BOOL WINAPI kernel32.TerminateJobObject(_In_ HANDLE hJob,_In_ UINT uExitCode)
BOOL WINAPI kernel32.SetCommTimeouts(_In_ HANDLE hFile,_In_ LPCOMMTIMEOUTS lpCommTimeouts)
BOOL WINAPI kernel32.SetCommMask(_In_ HANDLE hFile,_In_ DWORD dwEvtMask)
BOOL WINAPI advapi32.AccessCheck(_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_ HANDLE ClientToken,_In_ DWORD DesiredAccess,_In_ PGENERIC_MAPPING GenericMapping,_Out_opt_ PPRIVILEGE_SET PrivilegeSet,_Inout_ LPDWORD PrivilegeSetLength,_Out_ LPDWORD GrantedAccess,_Out_ LPBOOL AccessStatus)
BOOL WINAPI dbghelp.SymAddSymbol(_In_ HANDLE hProcess,_In_ ULONG64 BaseOfDll,_In_ PCTSTR Name,_In_ DWORD64 Address,_In_ DWORD Size,_In_ DWORD Flags)
BOOL WINAPI dbghelp.SymAddSymbolW(_In_ HANDLE hProcess,_In_ ULONG64 BaseOfDll,_In_ PCTSTR Name,_In_ DWORD64 Address,_In_ DWORD Size,_In_ DWORD Flags)
BOOL WINAPI dbghelp.SymAddSymbol(_In_ HANDLE hProcess,_In_ ULONG64 BaseOfDll,_In_ PCTSTR Name,_In_ DWORD64 Address,_In_ DWORD Size,_In_ DWORD Flags)
NTSTATUS None None.IoCreateDevice(_In_ PDRIVER_OBJECT DriverObject,_In_ ULONG DeviceExtensionSize,_In_opt_ PUNICODE_STRING DeviceName,_In_ DEVICE_TYPE DeviceType,_In_ ULONG DeviceCharacteristics,_In_ BOOLEAN Exclusive,_Out_ PDEVICE_OBJECT *DeviceObject)
HANDLE WINAPI kernel32.CreateFile2(_In_ LPCWSTR lpFileName,_In_ DWORD dwDesiredAccess,_In_ DWORD dwShareMode,_In_ DWORD dwCreationDisposition,_In_opt_ LPCREATEFILE2_EXTENDED_PARAMETERS pCreateExParams)
HRESULT None wmpmediasharing.getAllDevices([out] IWindowsMediaLibrarySharingDevices **devices)
HRESULT None None.get_ObjectPicker([out] IAzObjectPicker **ppObjectPicker)
DWORD WINAPI kernel32.LoadModule(_In_ LPCSTR lpModuleName,_In_ LPVOID lpParameterBlock)
BOOL WINAPI kernel32.WaitNamedPipe(_In_ LPCTSTR lpNamedPipeName,_In_ DWORD nTimeOut)
BOOL WINAPI kernel32.WaitNamedPipeW(_In_ LPCTSTR lpNamedPipeName,_In_ DWORD nTimeOut)
BOOL WINAPI kernel32.WaitNamedPipeA(_In_ LPCTSTR lpNamedPipeName,_In_ DWORD nTimeOut)
UINT None nddeapi.NDdeShareDel(_In_ LPTSTR lpszServer,_In_ LPTSTR lpszShareName,_In_ UINT wReserved)
UINT None nddeapi.NDdeShareDelW(_In_ LPTSTR lpszServer,_In_ LPTSTR lpszShareName,_In_ UINT wReserved)
UINT None nddeapi.NDdeShareDelA(_In_ LPTSTR lpszServer,_In_ LPTSTR lpszShareName,_In_ UINT wReserved)
BOOL WINAPI kernel32.GetHandleInformation(_In_ HANDLE hObject,_Out_ LPDWORD lpdwFlags)
BOOL WINAPI ktmw32.SetTransactionInformation(_In_ HANDLE TransactionHandle,_In_opt_ DWORD IsolationLevel,_In_opt_ DWORD IsolationFlags,_In_opt_ DWORD Timeout,_In_opt_ LPWSTR Description)
DWORD WINAPI advapi32.AddUsersToEncryptedFile(_In_ LPCWSTR lpFileName,_In_ PENCRYPTION_CERTIFICATE_LIST pUsers)
HRESULT WINAPI ondemandconnroutehelper.OnDemandRegisterNotification(_In_ ONDEMAND_NOTIFICATION_CALLBACK funcCallback,_In_opt_ PVOID pCallbackContext,_Out_ PHANDLE pRegistrationHandle)
DWORD WINAPI user32.CharLowerBuff(_Inout_ LPTSTR lpsz,_In_ DWORD cchLength)
DWORD WINAPI user32.CharLowerBuffW(_Inout_ LPTSTR lpsz,_In_ DWORD cchLength)
DWORD WINAPI user32.CharLowerBuffA(_Inout_ LPTSTR lpsz,_In_ DWORD cchLength)
UINT WINAPI kernel32.ResetWriteWatch(_In_ LPVOID lpBaseAddress,_In_ SIZE_T dwRegionSize)
HRESULT None None.StringCbGets(_Out_ LPTSTR pszDest,_In_ size_t cbDest)
HRESULT None None.StringCbGetsW(_Out_ LPTSTR pszDest,_In_ size_t cbDest)
HRESULT None None.StringCbGetsA(_Out_ LPTSTR pszDest,_In_ size_t cbDest)
LONG WINAPI storprop.CdromIsDigitalPlaybackEnabled(_In_ HDEVINFO DevInfo,_In_ PSP_DEVINFO_DATA DevInfoData,_Out_ PBOOLEAN Enabled)
VOID WINAPI kernel32.InitOnceInitialize(_Out_ PINIT_ONCE InitOnce)
BOOLEAN WINAPI kernel32.ClosePrivateNamespace(_In_ HANDLE Handle,_In_ ULONG Flags)
BOOLEAN None None.FltDoCompletionProcessingWhenSafe(_In_ PFLT_CALLBACK_DATA Data,_In_ PCFLT_RELATED_OBJECTS FltObjects,_In_opt_ PVOID CompletionContext,_In_ FLT_POST_OPERATION_FLAGS Flags,_In_ PFLT_POST_OPERATION_CALLBACK SafePostCallback,_Out_ PFLT_POSTOP_CALLBACK_STATUS RetPostOperationStatus)
NTSTATUS None advapi32.LsaStorePrivateData(_In_ LSA_HANDLE PolicyHandle,_In_ PLSA_UNICODE_STRING KeyName,_In_ PLSA_UNICODE_STRING PrivateData)
BOOL WINAPI wevtapi.EvtGetEventMetadataProperty(_In_ EVT_HANDLE EventMetadata,_In_ EVT_EVENT_METADATA_PROPERTY_ID PropertyId,_In_ DWORD Flags,_In_ DWORD EventMetadataPropertyBufferSize,_In_ PEVT_VARIANT EventMetadataPropertyBuffer,_Out_ PDWORD EventMetadataPropertyBufferUsed)
LONG WINAPI advapi32.RegSaveKey(_In_ HKEY hKey,_In_ LPCTSTR lpFile,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes)
LONG WINAPI advapi32.RegSaveKeyW(_In_ HKEY hKey,_In_ LPCTSTR lpFile,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes)
LONG WINAPI advapi32.RegSaveKeyA(_In_ HKEY hKey,_In_ LPCTSTR lpFile,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes)
NTSTATUS None None.ZwQueryInformationFile(_In_ HANDLE FileHandle,_Out_ PIO_STATUS_BLOCK IoStatusBlock,_Out_ PVOID FileInformation,_In_ ULONG Length,_In_ FILE_INFORMATION_CLASS FileInformationClass)
VOID WINAPI kernel32.FreeLibraryAndExitThread(_In_ HMODULE hModule,_In_ DWORD dwExitCode)
BOOL WINAPI kernel32.GetVolumeNameForVolumeMountPoint(_In_ LPCTSTR lpszVolumeMountPoint,_Out_ LPTSTR lpszVolumeName,_In_ DWORD cchBufferLength)
BOOL WINAPI kernel32.GetVolumeNameForVolumeMountPointW(_In_ LPCTSTR lpszVolumeMountPoint,_Out_ LPTSTR lpszVolumeName,_In_ DWORD cchBufferLength)
BOOL WINAPI kernel32.GetVolumeNameForVolumeMountPointA(_In_ LPCTSTR lpszVolumeMountPoint,_Out_ LPTSTR lpszVolumeName,_In_ DWORD cchBufferLength)
HANDLE WINAPI kernel32.OpenSemaphore(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpName)
HANDLE WINAPI kernel32.OpenSemaphoreW(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpName)
HANDLE WINAPI kernel32.OpenSemaphoreA(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpName)
BOOL WINAPI user32.OpenIcon(_In_ HWND hWnd)
BOOL WINAPI kernel32.ReadDirectoryChangesW(_In_ HANDLE hDirectory,_Out_ LPVOID lpBuffer,_In_ DWORD nBufferLength,_In_ BOOL bWatchSubtree,_In_ DWORD dwNotifyFilter,_Out_opt_ LPDWORD lpBytesReturned,_Inout_opt_ LPOVERLAPPED lpOverlapped,_In_opt_ LPOVERLAPPED_COMPLETION_ROUTINE lpCompletionRoutine)
BOOL WINAPI user32.SetProp(_In_ HWND hWnd,_In_ LPCTSTR lpString,_In_opt_ HANDLE hData)
BOOL WINAPI user32.SetPropW(_In_ HWND hWnd,_In_ LPCTSTR lpString,_In_opt_ HANDLE hData)
BOOL WINAPI user32.SetPropA(_In_ HWND hWnd,_In_ LPCTSTR lpString,_In_opt_ HANDLE hData)
HRESULT None None.StringCbCopy(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc)
HRESULT None None.StringCbCopyW(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc)
HRESULT None None.StringCbCopyA(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc)
INT None mswsock.GetAddressByName(_In_ DWORD dwNameSpace,_In_ LPGUID lpServiceType,_In_opt_ LPTSTR lpServiceName,_In_opt_ LPINT lpiProtocols,_In_ DWORD dwResolution,_In_opt_ LPSERVICE_ASYNC_INFO lpServiceAsyncInfo,_Out_ LPVOID lpCsaddrBuffer,_Inout_ LPDWORD lpdwBufferLength,_Inout_ LPTSTR lpAliasBuffer,_Inout_ LPDWORD lpdwAliasBufferLength)
INT None mswsock.GetAddressByNameW(_In_ DWORD dwNameSpace,_In_ LPGUID lpServiceType,_In_opt_ LPTSTR lpServiceName,_In_opt_ LPINT lpiProtocols,_In_ DWORD dwResolution,_In_opt_ LPSERVICE_ASYNC_INFO lpServiceAsyncInfo,_Out_ LPVOID lpCsaddrBuffer,_Inout_ LPDWORD lpdwBufferLength,_Inout_ LPTSTR lpAliasBuffer,_Inout_ LPDWORD lpdwAliasBufferLength)
INT None mswsock.GetAddressByNameA(_In_ DWORD dwNameSpace,_In_ LPGUID lpServiceType,_In_opt_ LPTSTR lpServiceName,_In_opt_ LPINT lpiProtocols,_In_ DWORD dwResolution,_In_opt_ LPSERVICE_ASYNC_INFO lpServiceAsyncInfo,_Out_ LPVOID lpCsaddrBuffer,_Inout_ LPDWORD lpdwBufferLength,_Inout_ LPTSTR lpAliasBuffer,_Inout_ LPDWORD lpdwAliasBufferLength)
UINT WINAPI kernel32.SetErrorMode(_In_ UINT uMode)
HRESULT None None.put_ondataavailable(VARIANT ondataavailableSink None)
NTSTATUS None None.ZwQueryFullAttributesFile(_In_ POBJECT_ATTRIBUTES ObjectAttributes,_Out_ PFILE_NETWORK_OPEN_INFORMATION FileInformation)
BOOL WINAPI kernel32.SetPriorityClass(_In_ HANDLE hProcess,_In_ DWORD dwPriorityClass)
UINT WINAPI kernel32.GetSystemDirectory(_Out_ LPTSTR lpBuffer,_In_ UINT uSize)
UINT WINAPI kernel32.GetSystemDirectoryW(_Out_ LPTSTR lpBuffer,_In_ UINT uSize)
UINT WINAPI kernel32.GetSystemDirectoryA(_Out_ LPTSTR lpBuffer,_In_ UINT uSize)
PVOID WINAPI kernel32.RtlPcToFileHeader(_In_ PVOID PcValue,_Out_ PVOID *BaseOfImage)
NTSTATUS None None.FltAllocateCallbackData(_In_ PFLT_INSTANCE Instance,_In_opt_ PFILE_OBJECT FileObject,_Out_ PFLT_CALLBACK_DATA *RetNewCallbackData)
BOOL WINAPI kernel32.Toolhelp32ReadProcessMemory(_In_ DWORD th32ProcessID,_In_ LPCVOID lpBaseAddress,_Out_ LPVOID lpBuffer,_In_ SIZE_T cbRead,_Out_ SIZE_T lpNumberOfBytesRead)
HRESULT None None.WriteRaw(WCHAR * pwszData)
BOOL WINAPI kernel32.FindNextChangeNotification(_In_ HANDLE hChangeHandle)
HANDLE WINAPI kernel32.CreateMailslot(_In_ LPCTSTR lpName,_In_ DWORD nMaxMessageSize,_In_ DWORD lReadTimeout,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes)
HANDLE WINAPI kernel32.CreateMailslotW(_In_ LPCTSTR lpName,_In_ DWORD nMaxMessageSize,_In_ DWORD lReadTimeout,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes)
HANDLE WINAPI kernel32.CreateMailslotA(_In_ LPCTSTR lpName,_In_ DWORD nMaxMessageSize,_In_ DWORD lReadTimeout,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes)
BOOL WINAPI dbghelp.EnumerateLoadedModules64(_In_ HANDLE hProcess,_In_ PENUMLOADED_MODULES_CALLBACK64 EnumLoadedModulesCallback,_In_opt_ PVOID UserContext)
BOOL WINAPI dbghelp.EnumerateLoadedModulesW64(_In_ HANDLE hProcess,_In_ PENUMLOADED_MODULES_CALLBACK64 EnumLoadedModulesCallback,_In_opt_ PVOID UserContext)
BOOL WINAPI dbghelp.EnumerateLoadedModules64(_In_ HANDLE hProcess,_In_ PENUMLOADED_MODULES_CALLBACK64 EnumLoadedModulesCallback,_In_opt_ PVOID UserContext)
HRESULT WINAPI dismapi.DismOpenSession(_In_ PCWSTR ImagePath,_In_opt_ PCWSTR WindowsDirectory,_In_opt_ PCWSTR SystemDrive,_Out_ DismSession *Session)
BOOL WINAPI api-ms-win-core-libraryloader-l1-1-1.QueryOptionalDelayLoadedAPI(_In_ HMODULE hParentModule,_In_ LPCSTR lpDllName,_In_ LPCSTR lpProcName,_Reserved_ DWORD Reserved)
BOOL None kernel32.GetThreadIdealProcessorEx(_In_ HANDLE hThread,_Out_ PPROCESSOR_NUMBER lpIdealProcessor)
DWORD WINAPI advapi32.LookupSecurityDescriptorParts(_Out_opt_ PTRUSTEE *pOwner,_Out_opt_ PTRUSTEE *pGroup,_Out_opt_ PULONG cCountOfAccessEntries,_Out_opt_ PEXPLICIT_ACCESS *pListOfAccessEntries,_Out_opt_ PULONG cCountOfAuditEntries,_Out_opt_ PEXPLICIT_ACCESS *pListOfAuditEntries,_In_ PSECURITY_DESCRIPTOR pSD)
DWORD WINAPI advapi32.LookupSecurityDescriptorPartsW(_Out_opt_ PTRUSTEE *pOwner,_Out_opt_ PTRUSTEE *pGroup,_Out_opt_ PULONG cCountOfAccessEntries,_Out_opt_ PEXPLICIT_ACCESS *pListOfAccessEntries,_Out_opt_ PULONG cCountOfAuditEntries,_Out_opt_ PEXPLICIT_ACCESS *pListOfAuditEntries,_In_ PSECURITY_DESCRIPTOR pSD)
DWORD WINAPI advapi32.LookupSecurityDescriptorPartsA(_Out_opt_ PTRUSTEE *pOwner,_Out_opt_ PTRUSTEE *pGroup,_Out_opt_ PULONG cCountOfAccessEntries,_Out_opt_ PEXPLICIT_ACCESS *pListOfAccessEntries,_Out_opt_ PULONG cCountOfAuditEntries,_Out_opt_ PEXPLICIT_ACCESS *pListOfAuditEntries,_In_ PSECURITY_DESCRIPTOR pSD)
BOOL WINAPI advapi32.ImpersonateNamedPipeClient(_In_ HANDLE hNamedPipe)
NTSTATUS None None.ZwFsControlFile(_In_ HANDLE FileHandle,_In_opt_ HANDLE Event,_In_opt_ PIO_APC_ROUTINE ApcRoutine,_In_opt_ PVOID ApcContext,_Out_ PIO_STATUS_BLOCK IoStatusBlock,_In_ ULONG FsControlCode,_In_opt_ PVOID InputBuffer,_In_ ULONG InputBufferLength,_Out_opt_ PVOID OutputBuffer,_In_ ULONG OutputBufferLength)
BOOL WINAPI advapi32.IsWellKnownSid(_In_ PSID pSid,_In_ WELL_KNOWN_SID_TYPE WellKnownSidType)
DWORD None kernel32.GetTapePosition(_In_ HANDLE hDevice,_In_ DWORD dwPositionType,_Out_ LPDWORD lpdwPartition,_Out_ LPDWORD lpdwOffsetLow,_Out_ LPDWORD lpdwOffsetHigh)
protected void None.OnPreviewStylusDown(StylusDownEventArgs e None)
BOOL WINAPI advapi32.GetAce(_In_ PACL pAcl,_In_ DWORD dwAceIndex,_Out_ LPVOID *pAce)
HANDLE WINAPI ktmw32.OpenTransactionManagerById(_In_ LPGUID TransactionManagerId,_In_ ACCESS_MASK DesiredAccess,_In_opt_ ULONG OpenOptions)
DPI_AWARENESS_CONTEXT WINAPI user32.SetThreadDpiAwarenessContext(_In_ DPI_AWARENESS_CONTEXT dpiContext)
BOOL WINAPI kernel32.GetSystemFileCacheSize(_Out_ PSIZE_T lpMinimumFileCacheSize,_Out_ PSIZE_T lpMaximumFileCacheSize,_Out_ PDWORD lpFlags)
HRESULT WINAPI ondemandconnroutehelper.OnDemandGetRoutingHint(_In_ PCWSTR DestinationHostName,_Out_ DWORD *pInterfaceIndex)
HRESULT WINAPI kernel32.ConvertPerformanceCounterToAuxiliaryCounter(_In_ ULONGLONG ullPerformanceCounterValue,_Out_ PULONGLONG lpAuxiliaryCounterValue,_Out_opt_ PULONGLONG lpConversionError)
HRESULT None None.SetAuthorAndModifiedBy(IOpcPackage *package None,LPCWSTR AuthorName None)
BOOL WINAPI advapi32.SetFileSecurity(_In_ LPCTSTR lpFileName,_In_ SECURITY_INFORMATION SecurityInformation,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor)
BOOL WINAPI advapi32.SetFileSecurityW(_In_ LPCTSTR lpFileName,_In_ SECURITY_INFORMATION SecurityInformation,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor)
BOOL WINAPI advapi32.SetFileSecurityA(_In_ LPCTSTR lpFileName,_In_ SECURITY_INFORMATION SecurityInformation,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor)
HRESULT None qmgrprxy.SetNotifyInterface(IUnknown *pNotifyInterface None)
BOOL WINAPI kernel32.GetFirmwareType(_Inout_ PFIRMWARE_TYPE FirmwareType)
BOOL WINAPI kernel32.TransactNamedPipe(_In_ HANDLE hNamedPipe,_In_ LPVOID lpInBuffer,_In_ DWORD nInBufferSize,_Out_ LPVOID lpOutBuffer,_In_ DWORD nOutBufferSize,_Out_ LPDWORD lpBytesRead,_Inout_opt_ LPOVERLAPPED lpOverlapped)
HRESULT None srmsvc.get_Name([out] BSTR *pName)
STDAPI None wsclient.RemoveDeveloperLicense(_In_opt_ HWND hwndParent)
BOOL WINAPI kernel32.SetEvent(_In_ HANDLE hEvent)
NET_API_STATUS None netapi32.NetDfsGetSecurity(_In_ LPWSTR DfsEntryPath,_In_ SECURITY_INFORMATION SecurityInformation,_Out_ PSECURITY_DESCRIPTOR *ppSecurityDescriptor,_Out_ LPDWORD lpcbSecurityDescriptor)
BOOLEAN None None.PsGetVersion(_Out_opt_ PULONG MajorVersion,_Out_opt_ PULONG MinorVersion,_Out_opt_ PULONG BuildNumber,_Out_opt_ PUNICODE_STRING CSDVersion)
BOOL WINAPI fmapi.DetectEncryptedVolumeEx(_In_ PFILE_RESTORE_CONTEXT Context,_Out_ PDWORD VolumeEncryptionInfo,_Out_ PULONGLONG VolumeSize)
BOOL WINAPI user32.AllowSetForegroundWindow(_In_ DWORD dwProcessId)
NET_API_STATUS None netapi32.NetDfsAddStdRoot(_In_ LPWSTR ServerName,_In_ LPWSTR RootShare,_In_opt_ LPWSTR Comment,_In_ DWORD Flags)
INT WSPAPI ws2_32.WSAEnumNameSpaceProvidersEx(_Inout_ LPDWORD lpdwBufferLength,_Out_ LPWSANAMESPACE_INFOEX lpnspBuffer)
INT WSPAPI ws2_32.WSAEnumNameSpaceProvidersExW(_Inout_ LPDWORD lpdwBufferLength,_Out_ LPWSANAMESPACE_INFOEX lpnspBuffer)
INT WSPAPI ws2_32.WSAEnumNameSpaceProvidersExA(_Inout_ LPDWORD lpdwBufferLength,_Out_ LPWSANAMESPACE_INFOEX lpnspBuffer)
BOOL WINAPI kernel32.CreateDirectoryEx(_In_ LPCTSTR lpTemplateDirectory,_In_ LPCTSTR lpNewDirectory,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes)
BOOL WINAPI kernel32.CreateDirectoryExW(_In_ LPCTSTR lpTemplateDirectory,_In_ LPCTSTR lpNewDirectory,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes)
BOOL WINAPI kernel32.CreateDirectoryExA(_In_ LPCTSTR lpTemplateDirectory,_In_ LPCTSTR lpNewDirectory,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes)
DWORD None None.PrintEvent(EVT_HANDLE hEvent None)
WORD None None.SCODE_CODE(SCODE sc None)
HANDLE WINAPI kernel32.CreateEvent(_In_opt_ LPSECURITY_ATTRIBUTES lpEventAttributes,_In_ BOOL bManualReset,_In_ BOOL bInitialState,_In_opt_ LPCTSTR lpName)
HANDLE WINAPI kernel32.CreateEventW(_In_opt_ LPSECURITY_ATTRIBUTES lpEventAttributes,_In_ BOOL bManualReset,_In_ BOOL bInitialState,_In_opt_ LPCTSTR lpName)
HANDLE WINAPI kernel32.CreateEventA(_In_opt_ LPSECURITY_ATTRIBUTES lpEventAttributes,_In_ BOOL bManualReset,_In_ BOOL bInitialState,_In_opt_ LPCTSTR lpName)
BOOL WINAPI wevtapi.EvtExportLog(_In_opt_ EVT_HANDLE Session,_In_ LPCWSTR Path,_In_ LPCWSTR Query,_In_ LPCWSTR TargetFilePath,_In_ DWORD Flags)
uint32 None vdswmi.AddMountPoint([in] string Directory)
LONG WINAPI advapi32.RegEnumValue(_In_ HKEY hKey,_In_ DWORD dwIndex,_Out_ LPTSTR lpValueName,_Inout_ LPDWORD lpcchValueName,_Reserved_ LPDWORD lpReserved,_Out_opt_ LPDWORD lpType,_Out_opt_ LPBYTE lpData,_Inout_opt_ LPDWORD lpcbData)
LONG WINAPI advapi32.RegEnumValueW(_In_ HKEY hKey,_In_ DWORD dwIndex,_Out_ LPTSTR lpValueName,_Inout_ LPDWORD lpcchValueName,_Reserved_ LPDWORD lpReserved,_Out_opt_ LPDWORD lpType,_Out_opt_ LPBYTE lpData,_Inout_opt_ LPDWORD lpcbData)
LONG WINAPI advapi32.RegEnumValueA(_In_ HKEY hKey,_In_ DWORD dwIndex,_Out_ LPTSTR lpValueName,_Inout_ LPDWORD lpcchValueName,_Reserved_ LPDWORD lpReserved,_Out_opt_ LPDWORD lpType,_Out_opt_ LPBYTE lpData,_Inout_opt_ LPDWORD lpcbData)
BOOL WINAPI crypt32.CertCloseStore(_In_ HCERTSTORE hCertStore,_In_ DWORD dwFlags)
BOOL None ole32.IsEqualGUID(_In_ REFGUID rguid1,_In_ REFGUID rguid2)
ULONG None None.IoGetFunctionCodeFromCtlCode(_In_ ULONG ControlCode)
BOOL None dxva2.GetMonitorBrightness(_In_ HANDLE hMonitor,_Out_ LPDWORD pdwMinimumBrightness,_Out_ LPDWORD pdwCurrentBrightness,_Out_ LPDWORD pdwMaximumBrightness)
BOOLEAN None None.IoIsOperationSynchronous(_In_ PIRP Irp)
HDC None gdi32.CreateMetaFile(_In_ LPCTSTR lpszFile)
HDC None gdi32.CreateMetaFileW(_In_ LPCTSTR lpszFile)
HDC None gdi32.CreateMetaFileA(_In_ LPCTSTR lpszFile)
VOID None None.KeQueryTickCount(_Out_ PLARGE_INTEGER TickCount)
HRESULT None None.MAKE_HRESULT(WORD sev None,WORD fac None,WORD code None)
BOOL WINAPI kernel32.GetVolumePathName(_In_ LPCTSTR lpszFileName,_Out_ LPTSTR lpszVolumePathName,_In_ DWORD cchBufferLength)
BOOL WINAPI kernel32.GetVolumePathNameW(_In_ LPCTSTR lpszFileName,_Out_ LPTSTR lpszVolumePathName,_In_ DWORD cchBufferLength)
BOOL WINAPI kernel32.GetVolumePathNameA(_In_ LPCTSTR lpszFileName,_Out_ LPTSTR lpszVolumePathName,_In_ DWORD cchBufferLength)
BOOL WINAPI advapi32.SetServiceBits(_In_ SERVICE_STATUS_HANDLE hServiceStatus,_In_ DWORD dwServiceBits,_In_ BOOL bSetBitsOn,_In_ BOOL bUpdateImmediately)
BOOLEAN WINAPI advapi32.AuditEnumeratePerUserPolicy(_Out_ PPOLICY_AUDIT_SID_ARRAY *ppAuditSidArray)
BOOL WINAPI kernel32.GetFileInformationByHandle(_In_ HANDLE hFile,_Out_ LPBY_HANDLE_FILE_INFORMATION lpFileInformation)
BOOL None advapi32.OperationStart(_In_ OPERATION_START_PARAMETERS *OperationParams)
HRESULT WINAPI dismapi.DismCloseSession(_In_ DismSession Session)
BOOL None ole32.CoIsOle1Class(_In_ REFCLSID rclsid)
HRESULT None wmpmediasharing.get_userInternetMediaSharingState([out] VARIANT_BOOL *sharingEnabled)
BOOL WINAPI ktmw32.CommitTransactionAsync(_In_ HANDLE TransactionHandle)
BOOL WINAPI kernel32.VirtualLock(_In_ LPVOID lpAddress,_In_ SIZE_T dwSize)
DWORD WINAPI kernel32.SetFilePointer(_In_ HANDLE hFile,_In_ LONG lDistanceToMove,_Inout_opt_ PLONG lpDistanceToMoveHigh,_In_ DWORD dwMoveMethod)
LPSTR WINAPI user32.CharPrevExA(_In_ WORD CodePage,_In_ LPCSTR lpStart,_In_ LPCSTR lpCurrentChar,_In_ DWORD dwFlags)
LPSTR WINAPI user32.CharPrevExA(_In_ WORD CodePage,_In_ LPCSTR lpStart,_In_ LPCSTR lpCurrentChar,_In_ DWORD dwFlags)
BOOL WINAPI kernel32.CheckRemoteDebuggerPresent(_In_ HANDLE hProcess,_Inout_ PBOOL pbDebuggerPresent)
BOOL WINAPI kernel32.ClearCommError(_In_ HANDLE hFile,_Out_opt_ LPDWORD lpErrors,_Out_opt_ LPCOMSTAT lpStat)
HRESULT None None.StringCchCatNEx(_Inout_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_In_ size_t cchMaxAppend,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCchCatNExW(_Inout_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_In_ size_t cchMaxAppend,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCchCatNExA(_Inout_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_In_ size_t cchMaxAppend,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
BOOL WINAPI fmapi.RestoreFile(_In_ PFILE_RESTORE_CONTEXT Context,_In_ PRESTORABLE_FILE_INFO RestorableFile,_In_ PCWSTR DstFile,_In_opt_ FILE_RESTORE_CALLBACK Callback,_In_opt_ PVOID ClbkArg)
LONG WINAPI storprop.CdromEnableDigitalPlayback(_In_ HDEVINFO DevInfo,_In_ PSP_DEVINFO_DATA DevInfoData,_In_ BOOLEAN ForceUnknown)
BOOL WINAPI kernel32.ReadDirectoryChangesExW(_In_ HANDLE hDirectory,_Out_ LPVOID lpBuffer,_In_ DWORD nBufferLength,_In_ BOOL bWatchSubtree,_In_ DWORD dwNotifyFilter,_Out_opt_ LPDWORD lpBytesReturned,_Inout_opt_ LPOVERLAPPED lpOverlapped,_In_opt_ LPOVERLAPPED_COMPLETION_ROUTINE lpCompletionRoutine,_In_ READ_DIRECTORY_NOTIFY_INFORMATION_CLASS ReadDirectoryNotifyInformationClass)
BOOL WINAPI crypt32.PFXVerifyPassword(_In_ CRYPT_DATA_BLOB *pPFX,_In_ LPCWSTR szPassword,_In_ DWORD dwFlags)
protected void None.AddLogicalChild(Object child None)
DWORD WINAPI None.ExpertIndicateStatus(HEXPERTKEY hExpertKey None,EXPERTSTATUSENUMERATION Status None,DWORD SubStatus None,char* sztext None,long PercentDone None)
BOOL WINAPI advapi32.SaferRecordEventLogEntry(_In_ SAFER_LEVEL_HANDLE hLevel,_In_ LPCWSTR szTargetPath,_Reserved_ LPVOID lpReserved)
function None shell32.EnumUsers(Volume_Label None None)
BOOL None None.DisconnectEx(_In_ SOCKET hSocket,_In_ LPOVERLAPPED lpOverlapped,_In_ DWORD dwFlags,_In_ DWORD reserved)
BOOL WINAPI None.DllMain(HINSTANCE hInstance None,ULONG ulReason None,LPVOID Reserved None)
DWORD None kernel32.GetTapeStatus(_In_ HANDLE hDevice)
HRESULT None None.StringCchCat(_Inout_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc)
HRESULT None None.StringCchCatW(_Inout_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc)
HRESULT None None.StringCchCatA(_Inout_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc)
BOOL None comctl32.SetWindowSubclass(_In_ HWND hWnd,_In_ SUBCLASSPROC pfnSubclass,_In_ UINT_PTR uIdSubclass,_In_ DWORD_PTR dwRefData)
DWORD None None.HRESULT_SEVERITY(HRESULT hr None)
NTSTATUS None None.FltPerformAsynchronousIo(_Inout_ PFLT_CALLBACK_DATA CallbackData,_In_ PFLT_COMPLETED_ASYNC_IO_CALLBACK CallbackRoutine,_In_ PVOID CallbackContext)
BOOL WINAPI kernel32.SetCurrentDirectory(_In_ LPCTSTR lpPathName)
BOOL WINAPI kernel32.SetCurrentDirectoryW(_In_ LPCTSTR lpPathName)
BOOL WINAPI kernel32.SetCurrentDirectoryA(_In_ LPCTSTR lpPathName)
BOOL WINAPI wevtapi.EvtRender(_In_ EVT_HANDLE Context,_In_ EVT_HANDLE Fragment,_In_ DWORD Flags,_In_ DWORD BufferSize,_In_ PVOID Buffer,_Out_ PDWORD BufferUsed,_Out_ PDWORD PropertyCount)
NTSTATUS None None.FltCreateFile(_In_ PFLT_FILTER Filter,_In_opt_ PFLT_INSTANCE Instance,_Out_ PHANDLE FileHandle,_In_ ACCESS_MASK DesiredAccess,_In_ POBJECT_ATTRIBUTES ObjectAttributes,_Out_ PIO_STATUS_BLOCK IoStatusBlock,_In_opt_ PLARGE_INTEGER AllocationSize,_In_ ULONG FileAttributes,_In_ ULONG ShareAccess,_In_ ULONG CreateDisposition,_In_ ULONG CreateOptions,_In_opt_ PVOID EaBuffer,_In_ ULONG EaLength,_In_ ULONG Flags)
PFILE_OBJECT None None.IoCreateStreamFileObject(_In_opt_ PFILE_OBJECT FileObject,_In_opt_ PDEVICE_OBJECT DeviceObject)
NTSTATUS None secur32.LsaLogonUser(_In_ HANDLE LsaHandle,_In_ PLSA_STRING OriginName,_In_ SECURITY_LOGON_TYPE LogonType,_In_ ULONG AuthenticationPackage,_In_ PVOID AuthenticationInformation,_In_ ULONG AuthenticationInformationLength,_In_opt_ PTOKEN_GROUPS LocalGroups,_In_ PTOKEN_SOURCE SourceContext,_Out_ PVOID *ProfileBuffer,_Out_ PULONG ProfileBufferLength,_Out_ PLUID LogonId,_Out_ PHANDLE Token,_Out_ PQUOTA_LIMITS Quotas,_Out_ PNTSTATUS SubStatus)
BOOL WINAPI kernel32.GetCommModemStatus(_In_ HANDLE hFile,_Out_ LPDWORD lpModemStat)
HRESULT None None.get_allErrors(IXMLDOMParseErrorCollection **oAllErrs None)
NET_API_STATUS NET_API_FUNCTION netapi32.NetDfsGetClientInfo(_In_ LPWSTR DfsEntryPath,_In_opt_ LPWSTR ServerName,_In_opt_ LPWSTR ShareName,_In_ DWORD Level,_Out_ LPBYTE *Buffer)
EVT_HANDLE WINAPI wevtapi.EvtCreateBookmark(_In_opt_ LPCWSTR BookmarkXml)
BOOL WINAPI kernel32.VirtualProtect(_In_ LPVOID lpAddress,_In_ SIZE_T dwSize,_In_ DWORD flNewProtect,_Out_ PDWORD lpflOldProtect)
BOOL WINAPI user32.GetWindowRect(_In_ HWND hWnd,_Out_ LPRECT lpRect)
HRESULT WINAPI kernel32.SetThreadDescription(_In_ HANDLE hThread,_In_ PCWSTR lpThreadDescription)
HANDLE WINAPI kernel32.CreateToolhelp32Snapshot(_In_ DWORD dwFlags,_In_ DWORD th32ProcessID)
HRESULT WINAPI dismapi.DismEnableFeature(_In_ DismSession Session,_In_ PCWSTR FeatureName,_In_opt_ PCWSTR Identifier,_In_opt_ DismPackageIdentifier PackageIdentifier,_In_ BOOL LimitAccess,_In_opt_ PCWSTR *SourcePaths,_In_opt_ UINT SourcePathCount,_In_ BOOL EnableAll,_In_opt_ HANDLE CancelEvent,_In_opt_ DISM_PROGRESS_CALLBACK Progress,_In_opt_ PVOID UserData)
BOOL None dxva2.SetMonitorContrast(_In_ HANDLE hMonitor,_In_ DWORD dwNewContrast)
VOID WINAPI None.Handler(_In_ DWORD fdwControl)
HWND WINAPI user32.CreateDialogIndirectParam(_In_opt_ HINSTANCE hInstance,_In_ LPCDLGTEMPLATE lpTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc,_In_ LPARAM lParamInit)
HWND WINAPI user32.CreateDialogIndirectParamW(_In_opt_ HINSTANCE hInstance,_In_ LPCDLGTEMPLATE lpTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc,_In_ LPARAM lParamInit)
HWND WINAPI user32.CreateDialogIndirectParamA(_In_opt_ HINSTANCE hInstance,_In_ LPCDLGTEMPLATE lpTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc,_In_ LPARAM lParamInit)
NTSTATUS None None.IoGetDeviceObjectPointer(_In_ PUNICODE_STRING ObjectName,_In_ ACCESS_MASK DesiredAccess,_Out_ PFILE_OBJECT *FileObject,_Out_ PDEVICE_OBJECT *DeviceObject)
BOOL WINAPI dbghelp.SymGetTypeInfoEx(_In_ HANDLE hProcess,_In_ DWORD64 ModBase,_Inout_ PIMAGEHLP_GET_TYPE_INFO_PARAMS Params)
NTSTATUS None advapi32.LsaLookupNames2(_In_ LSA_HANDLE PolicyHandle,_In_ ULONG Flags,_In_ ULONG Count,_In_ PLSA_UNICODE_STRING Names,_Out_ PLSA_REFERENCED_DOMAIN_LIST *ReferencedDomains,_Out_ PLSA_TRANSLATED_SID2 *Sids)
DWORD WINAPI kernel32.SignalObjectAndWait(_In_ HANDLE hObjectToSignal,_In_ HANDLE hObjectToWaitOn,_In_ DWORD dwMilliseconds,_In_ BOOL bAlertable)
HRESULT None shlwapi.UrlFixupW(_In_ PCWSTR pcszUrl,_Out_ PWSTR pszTranslatedUrl,DWORD cchMax None)
HRESULT None shlwapi.UrlFixupW(_In_ PCWSTR pcszUrl,_Out_ PWSTR pszTranslatedUrl,DWORD cchMax None)
HRESULT None ole32.CoGetClassObject(_In_ REFCLSID rclsid,_In_ DWORD dwClsContext,_In_opt_ COSERVERINFO *pServerInfo,_In_ REFIID riid,_Out_ LPVOID *ppv)
uint32 None cimwin32.SDDLToWin32SD([in] string SDDL,[out] __SecurityDescriptor Descriptor)
BOOLEAN WINAPI kernel32.TryAcquireSRWLockShared(_Inout_ PSRWLOCK SRWLock)
BOOL WINAPI kernel32.GetVolumeInformationByHandleW(_In_ HANDLE hFile,_Out_opt_ LPWSTR lpVolumeNameBuffer,_In_ DWORD nVolumeNameSize,_Out_opt_ LPDWORD lpVolumeSerialNumber,_Out_opt_ LPDWORD lpMaximumComponentLength,_Out_opt_ LPDWORD lpFileSystemFlags,_Out_opt_ LPWSTR lpFileSystemNameBuffer,_In_ DWORD nFileSystemNameSize)
LCID None kernel32.LocaleNameToLCID(_In_ LPCWSTR lpName,_In_ DWORD dwFlags)
BOOL WINAPI crypt32.CryptSIPCreateIndirectData(_In_ SIP_SUBJECTINFO *pSubjectInfo,_Inout_ DWORD *pcbIndirectData,_Out_ SIP_INDIRECT_DATA *pIndirectData)
BOOL WINAPI kernel32.SetProcessDEPPolicy(_In_ DWORD dwFlags)
BOOL WINAPI kernel32.InitOnceExecuteOnce(_Inout_ PINIT_ONCE InitOnce,_In_ PINIT_ONCE_FN InitFn,_Inout_opt_ PVOID Parameter,_Out_opt_ LPVOID *Context)
typedef None None.VOID(CALLBACK * PFN_SC_NOTIFY_CALLBACK)
typedef None None.SERVICE_NOTIFYW(CALLBACK * PFN_SC_NOTIFY_CALLBACK)
typedef None None.SERVICE_NOTIFYA(CALLBACK * PFN_SC_NOTIFY_CALLBACK)
BOOL WINAPI ktmw32.SinglePhaseReject(_In_ HANDLE EnlistmentHandle,_In_ PLARGE_INTEGER TmVirtualClock)
LPSTR WINAPI user32.CharNextExA(_In_ WORD CodePage,_In_ LPCSTR lpCurrentChar,_In_ DWORD dwFlags)
LPSTR WINAPI user32.CharNextExA(_In_ WORD CodePage,_In_ LPCSTR lpCurrentChar,_In_ DWORD dwFlags)
BOOL WINAPI newdev.InstallNewDevice(_In_ HWND hwndParent,_In_ LPGUID ClassGuid,_Out_ PDWORD pReboot)
DWORD WINAPI advapi32.GetExplicitEntriesFromAcl(_In_ PACL pacl,_Out_ PULONG pcCountOfExplicitEntries,_Out_ PEXPLICIT_ACCESS *pListOfExplicitEntries)
DWORD WINAPI advapi32.GetExplicitEntriesFromAclW(_In_ PACL pacl,_Out_ PULONG pcCountOfExplicitEntries,_Out_ PEXPLICIT_ACCESS *pListOfExplicitEntries)
DWORD WINAPI advapi32.GetExplicitEntriesFromAclA(_In_ PACL pacl,_Out_ PULONG pcCountOfExplicitEntries,_Out_ PEXPLICIT_ACCESS *pListOfExplicitEntries)
UINT WINAPI user32.DdeInitialize(_Inout_ LPDWORD pidInst,_In_ PFNCALLBACK pfnCallback,_In_ DWORD afCmd,_Reserved_ DWORD ulRes)
UINT WINAPI user32.DdeInitializeW(_Inout_ LPDWORD pidInst,_In_ PFNCALLBACK pfnCallback,_In_ DWORD afCmd,_Reserved_ DWORD ulRes)
UINT WINAPI user32.DdeInitializeA(_Inout_ LPDWORD pidInst,_In_ PFNCALLBACK pfnCallback,_In_ DWORD afCmd,_Reserved_ DWORD ulRes)
VOID WINAPI advapi32.CloseThreadWaitChainSession(_In_ HWCT WctHandle)
uint32 None vdswmi.ExcludeFromAutoChk([in] string Volume[])
HDC None user32.GetDC(_In_ HWND hWnd)
DWORD WINAPI kernel32.ExpandEnvironmentStrings(_In_ LPCTSTR lpSrc,_Out_opt_ LPTSTR lpDst,_In_ DWORD nSize)
DWORD WINAPI kernel32.ExpandEnvironmentStringsW(_In_ LPCTSTR lpSrc,_Out_opt_ LPTSTR lpDst,_In_ DWORD nSize)
DWORD WINAPI kernel32.ExpandEnvironmentStringsA(_In_ LPCTSTR lpSrc,_Out_opt_ LPTSTR lpDst,_In_ DWORD nSize)
HRESULT None fltlib.FilterDetach(_In_ LPCWSTR lpFilterName,_In_ LPCWSTR lpVolumeName,_In_opt_ LPCWSTR lpInstanceName)
DWORD WINAPI None.ThreadProc(LPVOID lpParameter None)
NTSTATUS None advapi32.LsaLookupNames(_In_ LSA_HANDLE PolicyHandle,_In_ ULONG Count,_In_ PLSA_UNICODE_STRING Names,_Out_ PLSA_REFERENCED_DOMAIN_LIST *ReferencedDomains,_Out_ PLSA_TRANSLATED_SID *Sids)
NTSTATUS None None.FltDeviceIoControlFile(_In_ PFLT_INSTANCE Instance,_In_ PFILE_OBJECT FileObject,_In_ ULONG IoControlCode,_In_opt_ PVOID InputBuffer,_In_ ULONG InputBufferLength,_Out_ PVOID OutputBuffer,_In_ ULONG OutputBufferLength,_Out_opt_ PULONG LengthReturned)
DWORD None cscapi.OfflineFilesQueryStatusEx(_Out_ BOOL *pbActive,_Out_ BOOL *pbEnabled,_Out_ BOOL *pbAvailable)
HDESK WINAPI user32.CreateDesktopEx(_In_ LPCTSTR lpszDesktop,_Reserved_ LPCTSTR lpszDevice,_Reserved_ DEVMODE *pDevmode,_In_ DWORD dwFlags,_In_ ACCESS_MASK dwDesiredAccess,_In_opt_ LPSECURITY_ATTRIBUTES lpsa,_In_ ULONG ulHeapSize,_Reserved_ PVOID pvoid)
HDESK WINAPI user32.CreateDesktopExW(_In_ LPCTSTR lpszDesktop,_Reserved_ LPCTSTR lpszDevice,_Reserved_ DEVMODE *pDevmode,_In_ DWORD dwFlags,_In_ ACCESS_MASK dwDesiredAccess,_In_opt_ LPSECURITY_ATTRIBUTES lpsa,_In_ ULONG ulHeapSize,_Reserved_ PVOID pvoid)
HDESK WINAPI user32.CreateDesktopExA(_In_ LPCTSTR lpszDesktop,_Reserved_ LPCTSTR lpszDevice,_Reserved_ DEVMODE *pDevmode,_In_ DWORD dwFlags,_In_ ACCESS_MASK dwDesiredAccess,_In_opt_ LPSECURITY_ATTRIBUTES lpsa,_In_ ULONG ulHeapSize,_Reserved_ PVOID pvoid)
BOOL WINAPI kernel32.CallNamedPipe(_In_ LPCTSTR lpNamedPipeName,_In_ LPVOID lpInBuffer,_In_ DWORD nInBufferSize,_Out_ LPVOID lpOutBuffer,_In_ DWORD nOutBufferSize,_Out_ LPDWORD lpBytesRead,_In_ DWORD nTimeOut)
BOOL WINAPI kernel32.CallNamedPipeW(_In_ LPCTSTR lpNamedPipeName,_In_ LPVOID lpInBuffer,_In_ DWORD nInBufferSize,_Out_ LPVOID lpOutBuffer,_In_ DWORD nOutBufferSize,_Out_ LPDWORD lpBytesRead,_In_ DWORD nTimeOut)
BOOL WINAPI kernel32.CallNamedPipeA(_In_ LPCTSTR lpNamedPipeName,_In_ LPVOID lpInBuffer,_In_ DWORD nInBufferSize,_Out_ LPVOID lpOutBuffer,_In_ DWORD nOutBufferSize,_Out_ LPDWORD lpBytesRead,_In_ DWORD nTimeOut)
PSLIST_ENTRY WINAPI kernel32.InterlockedPushListSListEx(_Inout_ PSLIST_HEADER ListHead,_Inout_ PSLIST_ENTRY List,_Inout_ PSLIST_ENTRY ListEnd,_In_ ULONG Count)
BOOL WINAPI kernelbase.CompareObjectHandles(_In_ HANDLE hFirstObjectHandle,_In_ HANDLE hSecondObjectHandle)
NTSTATUS None None.IoUnregisterPlugPlayNotification(_In_ PVOID NotificationEntry)
BOOL WINAPI advapi32.IsTokenRestricted(_In_ HANDLE TokenHandle)
PIRP None None.IoBuildDeviceIoControlRequest(_In_ ULONG IoControlCode,_In_ PDEVICE_OBJECT DeviceObject,_In_opt_ PVOID InputBuffer,_In_ ULONG InputBufferLength,_Out_opt_ PVOID OutputBuffer,_In_ ULONG OutputBufferLength,_In_ BOOLEAN InternalDeviceIoControl,_In_opt_ PKEVENT Event,_Out_ PIO_STATUS_BLOCK IoStatusBlock)
HRESULT None None.StringCbPrintfEx(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags,_In_ LPCTSTR pszFormat,_In_ ... None)
HRESULT None None.StringCbPrintfExW(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags,_In_ LPCTSTR pszFormat,_In_ ... None)
HRESULT None None.StringCbPrintfExA(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags,_In_ LPCTSTR pszFormat,_In_ ... None)
BOOL WINAPI advapi32.GetSecurityDescriptorGroup(_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_Out_ PSID *pGroup,_Out_ LPBOOL lpbGroupDefaulted)
BOOL WINAPI kernel32.DefineDosDevice(_In_ DWORD dwFlags,_In_ LPCTSTR lpDeviceName,_In_opt_ LPCTSTR lpTargetPath)
BOOL WINAPI kernel32.DefineDosDeviceW(_In_ DWORD dwFlags,_In_ LPCTSTR lpDeviceName,_In_opt_ LPCTSTR lpTargetPath)
BOOL WINAPI kernel32.DefineDosDeviceA(_In_ DWORD dwFlags,_In_ LPCTSTR lpDeviceName,_In_opt_ LPCTSTR lpTargetPath)
uint32 None cscobj.RenameItem([in] string OriginalPath,[in] string NewPath,[in] boolean ReplaceIfExists)
BOOL None None.FAILED(HRESULT hr None)
BOOL None kernel32.IsNLSDefinedString(_In_ NLS_FUNCTION Function,_In_ DWORD dwFlags,_In_ LPNLSVERSIONINFO lpVersionInformation,_In_ LPCWSTR lpString,_In_ INT cchStr)
BOOL WINAPI kernel32.Process32First(_In_ HANDLE hSnapshot,_Inout_ LPPROCESSENTRY32 lppe)
BOOL WINAPI kernel32.Process32FirstW(_In_ HANDLE hSnapshot,_Inout_ LPPROCESSENTRY32 lppe)
BOOL WINAPI kernel32.Process32First(_In_ HANDLE hSnapshot,_Inout_ LPPROCESSENTRY32 lppe)
HRESULT WINAPI dismapi.DismUnmountImage(_In_ PCWSTR MountPath,_In_ DWORD Flags,_In_opt_ HANDLE CancelEvent,_In_opt_ DISM_PROGRESS_CALLBACK Progress,_In_opt_ PVOID UserData)
DWORD None kernel32.WriteTapemark(_In_ HANDLE hDevice,_In_ DWORD dwTapemarkType,_In_ DWORD dwTapemarkCount,_In_ BOOL bImmediate)
NTSTATUS None None.RtlGetVersion(_Out_ PRTL_OSVERSIONINFOW lpVersionInformation)
HRESULT None esscli.Clone([out] IWbemContext **ppNewCopy)
HRESULT None None.GetClassInfo([out] ITypeInfo **ppTI)
HRESULT None None.GetSignatureValue([out] UINT8 **signatureHashValue,[out] UINT32 *count)
UINT WINAPI kernel32.GetSystemWow64Directory(_Out_ LPTSTR lpBuffer,_In_ UINT uSize)
UINT WINAPI kernel32.GetSystemWow64DirectoryW(_Out_ LPTSTR lpBuffer,_In_ UINT uSize)
UINT WINAPI kernel32.GetSystemWow64DirectoryA(_Out_ LPTSTR lpBuffer,_In_ UINT uSize)
public boolean None.Match(Object obj None)
VOID None kernel32.QueryInterruptTime(_Out_ PULONGLONG lpInterruptTime)
DWORD WINAPI advapi32.SetSecurityDescriptorRMControl(_Inout_ PSECURITY_DESCRIPTOR SecurityDescriptor,_In_opt_ PUCHAR RMControl)
protected void None.OnStylusButtonDown(StylusButtonEventArgs e None)
HWINSTA WINAPI user32.CreateWindowStation(_In_opt_ LPCTSTR lpwinsta,DWORD dwFlags None,_In_ ACCESS_MASK dwDesiredAccess,_In_opt_ LPSECURITY_ATTRIBUTES lpsa)
HWINSTA WINAPI user32.CreateWindowStationW(_In_opt_ LPCTSTR lpwinsta,DWORD dwFlags None,_In_ ACCESS_MASK dwDesiredAccess,_In_opt_ LPSECURITY_ATTRIBUTES lpsa)
HWINSTA WINAPI user32.CreateWindowStationA(_In_opt_ LPCTSTR lpwinsta,DWORD dwFlags None,_In_ ACCESS_MASK dwDesiredAccess,_In_opt_ LPSECURITY_ATTRIBUTES lpsa)
NTSTATUS None None.IoAttachDevice(_In_ PDEVICE_OBJECT SourceDevice,_In_ PUNICODE_STRING TargetDevice,_Out_ PDEVICE_OBJECT *AttachedDevice)
MMRESULT None winmm.timeBeginPeriod(UINT uPeriod None)
HRESULT None shell32.SHGetKnownFolderPath(_In_ REFKNOWNFOLDERID rfid,_In_ DWORD dwFlags,_In_opt_ HANDLE hToken,_Out_ PWSTR *ppszPath)
ULONG None None.IsReparseTagNameSurrogate(ULONG _tag None)
NTSTATUS None None.IsSecureProcess(_In_ HANDLE ProcessHandle,_Out_ BOOLEAN *SecureProcess)
HRESULT None None.GetObjectInformation([out] PSI_OBJECT_INFO pObjectInfo)
BOOL None None.AddJob(_In_ HANDLE hPrinter,_In_ DWORD Level,_Out_ LPBYTE pData,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded)
BOOL None None.AddJobW(_In_ HANDLE hPrinter,_In_ DWORD Level,_Out_ LPBYTE pData,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded)
BOOL None None.AddJobA(_In_ HANDLE hPrinter,_In_ DWORD Level,_Out_ LPBYTE pData,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded)
HRESULT None ole32.OleRun(_In_ LPUNKNOWN pUnknown)
DWORD WINAPI kernelbase.SleepEx(_In_ DWORD dwMilliseconds,_In_ BOOL bAlertable)
HRESULT None ole32.CoDisconnectObject(_In_ LPUNKNOWN pUnk,_In_ DWORD dwReserved)
BOOL WINAPI dbghelp.SymEnumSourceFileTokens(_In_ HANDLE hProcess,_In_ ULONG64 Base,_In_ PENUMSOURCEFILETOKENSCALLBACK Callback)
BOOL WINAPI kernel32.HeapSetInformation(_In_opt_ HANDLE HeapHandle,_In_ HEAP_INFORMATION_CLASS HeapInformationClass,_In_ PVOID HeapInformation,_In_ SIZE_T HeapInformationLength)
BOOL WINAPI user32.CharToOemBuff(_In_ LPCTSTR lpszSrc,_Out_ LPSTR lpszDst,_In_ DWORD cchDstLength)
BOOL WINAPI user32.CharToOemBuffW(_In_ LPCTSTR lpszSrc,_Out_ LPSTR lpszDst,_In_ DWORD cchDstLength)
BOOL WINAPI user32.CharToOemBuffA(_In_ LPCTSTR lpszSrc,_Out_ LPSTR lpszDst,_In_ DWORD cchDstLength)
PIO_STACK_LOCATION None None.IoGetNextIrpStackLocation(_In_ PIRP Irp)
HRESULT None None.GetPortableDevice([out] IPortableDevice **ppIPortableDevice)
PIRP None None.IoBuildAsynchronousFsdRequest(_In_ ULONG MajorFunction,_In_ PDEVICE_OBJECT DeviceObject,_Inout_ PVOID Buffer,_In_opt_ ULONG Length,_In_opt_ PLARGE_INTEGER StartingOffset,_In_opt_ PIO_STATUS_BLOCK IoStatusBlock)
BOOL WINAPI user32.DdeAbandonTransaction(_In_ DWORD idInst,_In_ HCONV hConv,_In_ DWORD idTransaction)
HRESULT None certadm.CertSrvBackupGetDynamicFileList(_In_ HCSBC hbc,_Out_ WCHAR **ppwszzFileList,_Out_ DWORD *pcbSize)
HRESULT None certadm.CertSrvBackupGetDynamicFileListW(_In_ HCSBC hbc,_Out_ WCHAR **ppwszzFileList,_Out_ DWORD *pcbSize)
protected void None.OnLostStylusCapture(StylusEventArgs e None)
BOOL WINAPI None.Run(HEXPERTKEY hExpertKey None,PEXPERTCONFIG pConfig None,PEXPERTSTARTUPINFO pExpertStartupInfo None,DWORD StartupFlags None,HWND hWndParent None)
BOOL WINAPI wevtapi.EvtClose(_In_ EVT_HANDLE Object)
BOOL WINAPI wevtapi.EvtGetLogInfo(_In_ EVT_HANDLE Log,_In_ EVT_LOG_PROPERTY_ID PropertyId,_In_ DWORD PropertyValueBufferSize,_In_ PEVT_VARIANT PropertyValueBuffer,_Out_ PDWORD PropertyValueBufferUsed)
PEXCEPTION_ROUTINE WINAPI kernel32.RtlVirtualUnwind(_In_ HandlerType None,_In_ ImageBase None,_In_ ControlPC None,_In_ FunctionEntry None,_Inout_ ContextRecord None,_Out_ InFunction None,_Out_ EstablisherFrame None,_Inout_opt_ ContextPointers None)
BOOL WINAPI kernel32.SleepConditionVariableCS(_Inout_ PCONDITION_VARIABLE ConditionVariable,_Inout_ PCRITICAL_SECTION CriticalSection,_In_ DWORD dwMilliseconds)
HRESULT WINAPI ondemandconnroutehelper.GetInterfaceContextTableForHostName(_In_opt_ PCWSTR HostName,_In_opt_ PCWSTR ProxyName,_In_ DWORD Flags,_In_opt_ BYTE *ConnectionProfileFilterRawData,_In_ DWORD ConnectionProfileFilterRawDataSize,_Out_ NET_INTERFACE_CONTEXT_TABLE **InterfaceContextTable)
BOOL None userenv.RegisterGPNotification(_In_ HANDLE hEvent,_In_ BOOL bMachine)
HRESULT None qmgrprxy.GetId([out] GUID *pJobID)
BOOL WINAPI kernel32.TryEnterCriticalSection(_Inout_ LPCRITICAL_SECTION lpCriticalSection)
FARPROC WINAPI kernel32.GetProcAddress(_In_ HMODULE hModule,_In_ LPCSTR lpProcName)
NTSTATUS None None.ZwOpenKey(_Out_ PHANDLE KeyHandle,_In_ ACCESS_MASK DesiredAccess,_In_ POBJECT_ATTRIBUTES ObjectAttributes)
STDAPI None wsclient.AcquireDeveloperLicense(_In_opt_ HWND hwndParent,_Out_ FILETIME *pExpiration)
HANDLE WINAPI kernel32.FindFirstChangeNotification(_In_ LPCTSTR lpPathName,_In_ BOOL bWatchSubtree,_In_ DWORD dwNotifyFilter)
HANDLE WINAPI kernel32.FindFirstChangeNotificationW(_In_ LPCTSTR lpPathName,_In_ BOOL bWatchSubtree,_In_ DWORD dwNotifyFilter)
HANDLE WINAPI kernel32.FindFirstChangeNotificationA(_In_ LPCTSTR lpPathName,_In_ BOOL bWatchSubtree,_In_ DWORD dwNotifyFilter)
XMMATRIX XM_CALLCONV None.XMMatrixLookAtLH(FXMVECTOR EyePosition None,FXMVECTOR FocusPosition None,FXMVECTOR UpDirection None)
FARPROC WINAPI kernel32.GetProcAddress(_In_ HMODULE hModule,_In_ LPCSTR lpProcName)
HRESULT None azroles.get_Count(LONG *plCount None)
BOOL WINAPI kernel32.Module32First(_In_ HANDLE hSnapshot,_Inout_ LPMODULEENTRY32 lpme)
BOOL WINAPI kernel32.Module32FirstW(_In_ HANDLE hSnapshot,_Inout_ LPMODULEENTRY32 lpme)
BOOL WINAPI kernel32.Module32First(_In_ HANDLE hSnapshot,_Inout_ LPMODULEENTRY32 lpme)
BOOL None None.CheckForSupportedDataFields(ISensor* pSensor None)
BOOL WINAPI kernel32.FindNextVolumeMountPoint(_In_ HANDLE hFindVolumeMountPoint,_Out_ LPTSTR lpszVolumeMountPoint,_In_ DWORD cchBufferLength)
BOOL WINAPI kernel32.FindNextVolumeMountPointW(_In_ HANDLE hFindVolumeMountPoint,_Out_ LPTSTR lpszVolumeMountPoint,_In_ DWORD cchBufferLength)
BOOL WINAPI kernel32.FindNextVolumeMountPointA(_In_ HANDLE hFindVolumeMountPoint,_Out_ LPTSTR lpszVolumeMountPoint,_In_ DWORD cchBufferLength)
HRESULT WINAPI shell32.SHGetFolderPathEx(_In_ REFKNOWNFOLDERID rfid,_In_ DWORD dwFlags,_In_opt_ HANDLE hToken,_Out_ LPWSTR pszPath,_In_ UINT cchPath)
HANDLE WINAPI kernel32.CreateFileMapping(_In_ HANDLE hFile,_In_opt_ LPSECURITY_ATTRIBUTES lpAttributes,_In_ DWORD flProtect,_In_ DWORD dwMaximumSizeHigh,_In_ DWORD dwMaximumSizeLow,_In_opt_ LPCTSTR lpName)
HANDLE WINAPI kernel32.CreateFileMappingW(_In_ HANDLE hFile,_In_opt_ LPSECURITY_ATTRIBUTES lpAttributes,_In_ DWORD flProtect,_In_ DWORD dwMaximumSizeHigh,_In_ DWORD dwMaximumSizeLow,_In_opt_ LPCTSTR lpName)
HANDLE WINAPI kernel32.CreateFileMappingA(_In_ HANDLE hFile,_In_opt_ LPSECURITY_ATTRIBUTES lpAttributes,_In_ DWORD flProtect,_In_ DWORD dwMaximumSizeHigh,_In_ DWORD dwMaximumSizeLow,_In_opt_ LPCTSTR lpName)
NTSTATUS None None.FltQueryVolumeInformation(_In_ PFLT_INSTANCE Instance,_Out_ PIO_STATUS_BLOCK Iosb,_Out_ PVOID FsInformation,_In_ ULONG Length,_In_ FS_INFORMATION_CLASS FsInformationClass)
BOOL WINAPI kernel32.QueryPerformanceFrequency(_Out_ LARGE_INTEGER *lpFrequency)
DWORD WINAPI kernel32.GetLogicalDriveStrings(_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer)
DWORD WINAPI kernel32.GetLogicalDriveStringsW(_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer)
DWORD WINAPI kernel32.GetLogicalDriveStringsA(_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer)
BOOL None None.WlxGetSourceDesktop(_In_ HANDLE hWlx,_Out_ PWLX_DESKTOP *ppDesktop)
BOOL WINAPI kernelbase.TlsFree(_In_ DWORD dwTlsIndex)
VOID CALLBACK None.OOBE_COMPLETED_CALLBACK(_In_opt_ PVOID CallbackContext)
BOOL WINAPI dbghelp.SymFindFileInPath(_In_ HANDLE hProcess,_In_opt_ PCTSTR SearchPath,_In_ PCTSTR FileName,_In_opt_ PVOID id,_In_ DWORD two,_In_ DWORD three,_In_ DWORD flags,_Out_ PTSTR FilePath,_In_opt_ PFINDFILEINPATHCALLBACK callback,_In_opt_ PVOID context)
BOOL WINAPI dbghelp.SymFindFileInPathW(_In_ HANDLE hProcess,_In_opt_ PCTSTR SearchPath,_In_ PCTSTR FileName,_In_opt_ PVOID id,_In_ DWORD two,_In_ DWORD three,_In_ DWORD flags,_Out_ PTSTR FilePath,_In_opt_ PFINDFILEINPATHCALLBACK callback,_In_opt_ PVOID context)
BOOL WINAPI dbghelp.SymFindFileInPath(_In_ HANDLE hProcess,_In_opt_ PCTSTR SearchPath,_In_ PCTSTR FileName,_In_opt_ PVOID id,_In_ DWORD two,_In_ DWORD three,_In_ DWORD flags,_Out_ PTSTR FilePath,_In_opt_ PFINDFILEINPATHCALLBACK callback,_In_opt_ PVOID context)
DWORD WINAPI kernel32.GetProfileString(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ LPCTSTR lpDefault,_Out_ LPTSTR lpReturnedString,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetProfileStringW(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ LPCTSTR lpDefault,_Out_ LPTSTR lpReturnedString,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetProfileStringA(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ LPCTSTR lpDefault,_Out_ LPTSTR lpReturnedString,_In_ DWORD nSize)
BOOL WINAPI advapi32.AdjustTokenPrivileges(_In_ HANDLE TokenHandle,_In_ BOOL DisableAllPrivileges,_In_opt_ PTOKEN_PRIVILEGES NewState,_In_ DWORD BufferLength,_Out_opt_ PTOKEN_PRIVILEGES PreviousState,_Out_opt_ PDWORD ReturnLength)
BOOL WINAPI user32.CloseDesktop(_In_ HDESK hDesktop)
HRESULT None dxva2.GetPhysicalMonitorsFromIDirect3DDevice9(_In_ IDirect3DDevice9 *pDirect3DDevice9,_In_ DWORD dwPhysicalMonitorArraySize,_Out_ LPPHYSICAL_MONITOR pPhysicalMonitorArray)
HWND WINAPI user32.CreateDialogParam(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpTemplateName,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc,_In_ LPARAM dwInitParam)
HWND WINAPI user32.CreateDialogParamW(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpTemplateName,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc,_In_ LPARAM dwInitParam)
HWND WINAPI user32.CreateDialogParamA(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpTemplateName,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc,_In_ LPARAM dwInitParam)
BOOL WINAPI kernel32.GetThreadContext(_In_ HANDLE hThread,_Inout_ LPCONTEXT lpContext)
UINT None nddeapi.NDdeShareSetInfo(_In_ LPTSTR lpszServer,_In_ LPTSTR lpszShareName,_In_ UINT nLevel,_In_ LPBYTE lpBuffer,_In_ DWORD cBufSize,_In_ WORD sParmNum)
UINT None nddeapi.NDdeShareSetInfoW(_In_ LPTSTR lpszServer,_In_ LPTSTR lpszShareName,_In_ UINT nLevel,_In_ LPBYTE lpBuffer,_In_ DWORD cBufSize,_In_ WORD sParmNum)
UINT None nddeapi.NDdeShareSetInfoA(_In_ LPTSTR lpszServer,_In_ LPTSTR lpszShareName,_In_ UINT nLevel,_In_ LPBYTE lpBuffer,_In_ DWORD cBufSize,_In_ WORD sParmNum)
BOOL WINAPI ktmw32.GetCurrentClockTransactionManager(_In_ HANDLE TransactionManagerHandle,_Out_ PLARGE_INTEGER TmVirtualClock)
BOOL WINAPI user32.IsCharAlpha(_In_ TCHAR ch)
BOOL WINAPI user32.IsCharAlphaW(_In_ TCHAR ch)
BOOL WINAPI user32.IsCharAlphaA(_In_ TCHAR ch)
HRESULT WINAPI wdsclientapi.WdsCliFreeStringArray(_Inout_opt_ PWSTR *ppwszArray,_In_ ULONG ulCount)
LONG None None.KeReadStateMutex(_In_ PRKMUTEX Mutex)
BOOL WINAPI fmapi.CreateFileRestoreContext(_In_ PCWSTR Volume,_In_ RESTORE_CONTEXT_FLAGS Flags,_In_opt_ LONGLONG StartSector,_In_ LONGLONG BootSector,_In_ DWORD Version,_Out_ PFILE_RESTORE_CONTEXT Context)
HCONVLIST WINAPI user32.DdeConnectList(_In_ DWORD idInst,_In_ HSZ hszService,_In_ HSZ hszTopic,_In_ HCONVLIST hConvList,_In_opt_ PCONVCONTEXT pCC)
BOOL WINAPI storprop.CdromKnownGoodDigitalPlayback(_In_ HDEVINFO DevInfo,_In_ PSP_DEVINFO_DATA DevInfoData)
BOOLEAN None None.IoIsOperationSynchronous(_In_ PIRP Irp)
HRESULT None None.StringCbCopyN(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc,_In_ size_t cbSrc)
HRESULT None None.StringCbCopyNW(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc,_In_ size_t cbSrc)
HRESULT None None.StringCbCopyNA(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc,_In_ size_t cbSrc)
BOOL WINAPI kernel32.FindCloseChangeNotification(_In_ HANDLE hChangeHandle)
HRESULT None None.SetEchoEffect(IDirectMusicPerformance8 *pPerformance None,IDirectMusicAudioPath* p3DAudioPath None,IDirectSoundBuffer8* pDSBuffer None)
uint32 None smiscsitargetprov.SetPowerState([in] uint16 PowerState,[in] datetime Time)
HWCT WINAPI advapi32.OpenThreadWaitChainSession(_In_ DWORD Flags,_In_opt_ PWAITCHAINCALLBACK callback)
HRESULT None None.MonitorJobProgress(__in IBackgroundCopyJob* Job)
HGDIOBJ None gdi32.SelectObject(_In_ HDC hdc,_In_ HGDIOBJ hgdiobj)
BOOL WINAPI kernel32.ReleaseSemaphore(_In_ HANDLE hSemaphore,_In_ LONG lReleaseCount,_Out_opt_ LPLONG lpPreviousCount)
void None None.SinglePhaseCommit(SinglePhaseEnlistment singlePhaseEnlistment None)
BOOL WINAPI kernel32.GetProcessShutdownParameters(_Out_ LPDWORD lpdwLevel,_Out_ LPDWORD lpdwFlags)
BOOL WINAPI kernel32.Thread32Next(_In_ HANDLE hSnapshot,_Out_ LPTHREADENTRY32 lpte)
BOOL WINAPI kernel32.ReleaseMutex(_In_ HANDLE hMutex)
HRESULT None ole32.CoInitializeEx(_In_opt_ LPVOID pvReserved,_In_ DWORD dwCoInit)
HRESULT WINAPI ondemandconnroutehelper.OnDemandRegisterNotification(_In_ ONDEMAND_NOTIFICATION_CALLBACK funcCallback,_In_opt_ PVOID pCallbackContext,_Out_ PHANDLE pRegistrationHandle)
BOOL WINAPI kernel32.GetFirmwareType(_Inout_ PFIRMWARE_TYPE FirmwareType)
NTSTATUS None advapi32.LsaDeleteTrustedDomain(_In_ LSA_HANDLE PolicyHandle,_In_ PSID TrustedDomainSid)
HRESULT None None.MyMethod([out None None,retval] InMyFace** ReturnVal)
BOOL WINAPI advapi32.PrivilegeCheck(_In_ HANDLE ClientToken,_Inout_ PPRIVILEGE_SET RequiredPrivileges,_Out_ LPBOOL pfResult)
BOOL CALLBACK None.EnumModules(PCTSTR ModuleName None,DWORD64 BaseOfDll None,PVOID UserContext None)
BOOL WINAPI kernel32.GetCommTimeouts(_In_ HANDLE hFile,_Out_ LPCOMMTIMEOUTS lpCommTimeouts)
HRESULT None None.PrintSensorProperty(ISensor* pSensor None,REFPROPERTYKEY pk None)
NET_API_STATUS None netapi32.NetDfsGetFtContainerSecurity(_In_ LPWSTR DomainName,_In_ SECURITY_INFORMATION SecurityInformation,_Out_ PSECURITY_DESCRIPTOR *ppSecurityDescriptor,_Out_ LPDWORD lpcbSecurityDescriptor)
RoInitializeWrapper None None.initialize(RO_INIT_MULTITHREADED None None)
BOOL WINAPI kernel32.BuildCommDCBAndTimeouts(_In_ LPCTSTR lpDef,_Out_ LPDCB lpDCB,_Out_ LPCOMMTIMEOUTS lpCommTimeouts)
BOOL WINAPI kernel32.BuildCommDCBAndTimeoutsW(_In_ LPCTSTR lpDef,_Out_ LPDCB lpDCB,_Out_ LPCOMMTIMEOUTS lpCommTimeouts)
BOOL WINAPI kernel32.BuildCommDCBAndTimeoutsA(_In_ LPCTSTR lpDef,_Out_ LPDCB lpDCB,_Out_ LPCOMMTIMEOUTS lpCommTimeouts)
NTSTATUS None None.ZwQuerySecurityObject(_In_ HANDLE Handle,_In_ SECURITY_INFORMATION SecurityInformation,_Out_ PSECURITY_DESCRIPTOR SecurityDescriptor,_In_ ULONG Length,_Out_ PULONG LengthNeeded)
NTSTATUS None None.IoRegisterLastChanceShutdownNotification(_In_ PDEVICE_OBJECT DeviceObject)
HCERTSTORE WINAPI crypt32.CertOpenSystemStore(_In_ HCRYPTPROV_LEGACY hprov,_In_ LPTCSTR szSubsystemProtocol)
HCERTSTORE WINAPI crypt32.CertOpenSystemStoreW(_In_ HCRYPTPROV_LEGACY hprov,_In_ LPTCSTR szSubsystemProtocol)
HCERTSTORE WINAPI crypt32.CertOpenSystemStoreA(_In_ HCRYPTPROV_LEGACY hprov,_In_ LPTCSTR szSubsystemProtocol)
DWORD None kernel32.SetTapePosition(_In_ HANDLE hDevice,_In_ DWORD dwPositionMethod,_In_ DWORD dwPartition,_In_ DWORD dwOffsetLow,_In_ DWORD dwOffsetHigh,_In_ BOOL bImmediate)
uint32 None cscobj.TransitionOffline([in] string Path,[in] boolean Force,[in] uint32 Flags,[out] boolean OpenFiles)
HMODULE WINAPI kernel32.LoadPackagedLibrary(_In_ LPCWSTR lpwLibFileName,_Reserved_ DWORD Reserved)
HRESULT None shell32.GetHotkey(WORD *pwHotkey None)
HRESULT None shell32.GetCurrentProcessExplicitAppUserModelID(_Out_ PWSTR *AppID)
BOOL None gdi32.GetBrushOrgEx(_In_ HDC hdc,_Out_ LPPOINT lppt)
NTSTATUS None None.FltPerformAsynchronousIo(_Inout_ PFLT_CALLBACK_DATA CallbackData,_In_ PFLT_COMPLETED_ASYNC_IO_CALLBACK CallbackRoutine,_In_ PVOID CallbackContext)
NTSTATUS None None.ObReferenceObjectByHandle(_In_ HANDLE Handle,_In_ ACCESS_MASK DesiredAccess,_In_opt_ POBJECT_TYPE ObjectType,_In_ KPROCESSOR_MODE AccessMode,_Out_ PVOID *Object,_Out_opt_ POBJECT_HANDLE_INFORMATION HandleInformation)
SECURITY_STATUS SEC_Entry secur32.EncryptMessage(_In_ PCtxtHandle phContext,_In_ ULONG fQOP,_Inout_ PSecBufferDesc pMessage,_In_ ULONG MessageSeqNo)
HRESULT None None.ComposeSegmentFromShape(IDirectMusicStyle* pStyle None,WORD wNumMeasures None,WORD wShape None,WORD wActivity None,BOOL fIntro None,BOOL fEnd None,IDirectMusicChordMap* pChordMap None,IDirectMusicSegment** ppSegment None)
BOOL CALLBACK None.PropEnumProc(_In_ HWND hwnd,_In_ LPCTSTR lpszString,_In_ HANDLE hData)
BOOL CALLBACK None.PropEnumProcW(_In_ HWND hwnd,_In_ LPCTSTR lpszString,_In_ HANDLE hData)
BOOL CALLBACK None.PropEnumProcA(_In_ HWND hwnd,_In_ LPCTSTR lpszString,_In_ HANDLE hData)
UINT WINAPI kernel32.GetTempFileName(_In_ LPCTSTR lpPathName,_In_ LPCTSTR lpPrefixString,_In_ UINT uUnique,_Out_ LPTSTR lpTempFileName)
UINT WINAPI kernel32.GetTempFileNameW(_In_ LPCTSTR lpPathName,_In_ LPCTSTR lpPrefixString,_In_ UINT uUnique,_Out_ LPTSTR lpTempFileName)
UINT WINAPI kernel32.GetTempFileNameA(_In_ LPCTSTR lpPathName,_In_ LPCTSTR lpPrefixString,_In_ UINT uUnique,_Out_ LPTSTR lpTempFileName)
BOOL WINAPI crypt32.CryptSIPRetrieveSubjectGuidForCatalogFile(_In_ LPCWSTR FileName,_In_opt_ HANDLE hFileIn,_Out_ GUID *pgSubject)
BOOL WINAPI advapi32.DuplicateTokenEx(_In_ HANDLE hExistingToken,_In_ DWORD dwDesiredAccess,_In_opt_ LPSECURITY_ATTRIBUTES lpTokenAttributes,_In_ SECURITY_IMPERSONATION_LEVEL ImpersonationLevel,_In_ TOKEN_TYPE TokenType,_Out_ PHANDLE phNewToken)
VOID FORCEINLINE None.TpInitializeCallbackEnviron(_Out_ PTP_CALLBACK_ENVIRON CallbackEnviron)
NTSTATUS None None.FltUntagFile(_In_ PFLT_INSTANCE InitiatingInstance,_In_ PFILE_OBJECT FileObject,_In_ ULONG FileTag,_In_opt_ GUID *Guid)
LONG WINAPI advapi32.RegCreateKey(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_Out_ PHKEY phkResult)
LONG WINAPI advapi32.RegCreateKeyW(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_Out_ PHKEY phkResult)
LONG WINAPI advapi32.RegCreateKeyA(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_Out_ PHKEY phkResult)
BOOL None shell32.Win32DeleteFile(_In_ PCWSTR pszFileName)
HANDLE WINAPI ktmw32.CreateTransaction(_In_opt_ LPSECURITY_ATTRIBUTES lpTransactionAttributes,_In_opt_ LPGUID UOW,_In_opt_ DWORD CreateOptions,_In_opt_ DWORD IsolationLevel,_In_opt_ DWORD IsolationFlags,_In_opt_ DWORD Timeout,_In_opt_ LPWSTR Description)
HRESULT WINAPI dismapi.DismApplyUnattend(_In_ DismSession Session,_In_ PCWSTR UnattendFile,_In_ BOOL SingleSession)
HRESULT None ole32.GetClassFile(_In_ LPCOLESTR szFilename,_Out_ CLSID *pclsid)
HRESULT WINAPI None.Initialize(RO_INIT_TYPE initType None)
BOOL WINAPI dbghelp.SymSetScopeFromIndex(_In_ HANDLE hProcess,_In_ ULONG64 BaseOfDll,_In_ DWORD Index)
PDEVICE_OBJECT None None.IoAttachDeviceToDeviceStack(_In_ PDEVICE_OBJECT SourceDevice,_In_ PDEVICE_OBJECT TargetDevice)
BOOL WINAPI advapi32.DeleteService(_In_ SC_HANDLE hService)
BYTE None None.HIBYTE(WORD wValue None)
BOOL WINAPI kernel32.GetFileTime(_In_ HANDLE hFile,_Out_opt_ LPFILETIME lpCreationTime,_Out_opt_ LPFILETIME lpLastAccessTime,_Out_opt_ LPFILETIME lpLastWriteTime)
public boolean None.Match(Object obj None)
HRESULT None wmpmediasharing.get_internetMediaSharingSecurityGroup([out] BSTR *securityGroup)
HRESULT None prntvpt.BindPTProviderThunk(_In_ LPTSTR pszPrinterName,_In_ INT maxVersion,_In_ INT prefVersion,_Out_ HPTPROVIDER *phProvider,_Out_ INT *usedVersion)
VOID None ole32.OleDestroyMenuDescriptor(_In_ HOLEMENU holemenu)
HRESULT WDSCLIAPI wdsclientapi.WdsCliObtainDriverPackages(_In_ HANDLE hImage,_Out_ PWSTR *ppwszServerName,_Out_ PWSTR **pppwszDriverPackages,_Out_ ULONG *pulCount)
BOOL WINAPI ktmw32.GetNotificationResourceManager(_In_ HANDLE ResourceManagerHandle,_Out_ PTRANSACTION_NOTIFICATION TransactionNotification,_In_ ULONG NotificationLength,_In_opt_ DWORD dwMilliseconds,_Out_opt_ PULONG ReturnLength)
VOID WINAPI kernel32.InitializeSRWLock(_Out_ PSRWLOCK SRWLock)
BOOL WINAPI kernel32.WaitNamedPipe(_In_ LPCTSTR lpNamedPipeName,_In_ DWORD nTimeOut)
BOOL WINAPI kernel32.WaitNamedPipeW(_In_ LPCTSTR lpNamedPipeName,_In_ DWORD nTimeOut)
BOOL WINAPI kernel32.WaitNamedPipeA(_In_ LPCTSTR lpNamedPipeName,_In_ DWORD nTimeOut)
BOOL WINAPI kernel32.CreateProcess(_In_opt_ LPCTSTR lpApplicationName,_Inout_opt_ LPTSTR lpCommandLine,_In_opt_ LPSECURITY_ATTRIBUTES lpProcessAttributes,_In_opt_ LPSECURITY_ATTRIBUTES lpThreadAttributes,_In_ BOOL bInheritHandles,_In_ DWORD dwCreationFlags,_In_opt_ LPVOID lpEnvironment,_In_opt_ LPCTSTR lpCurrentDirectory,_In_ LPSTARTUPINFO lpStartupInfo,_Out_ LPPROCESS_INFORMATION lpProcessInformation)
BOOL WINAPI kernel32.CreateProcessW(_In_opt_ LPCTSTR lpApplicationName,_Inout_opt_ LPTSTR lpCommandLine,_In_opt_ LPSECURITY_ATTRIBUTES lpProcessAttributes,_In_opt_ LPSECURITY_ATTRIBUTES lpThreadAttributes,_In_ BOOL bInheritHandles,_In_ DWORD dwCreationFlags,_In_opt_ LPVOID lpEnvironment,_In_opt_ LPCTSTR lpCurrentDirectory,_In_ LPSTARTUPINFO lpStartupInfo,_Out_ LPPROCESS_INFORMATION lpProcessInformation)
BOOL WINAPI kernel32.CreateProcessA(_In_opt_ LPCTSTR lpApplicationName,_Inout_opt_ LPTSTR lpCommandLine,_In_opt_ LPSECURITY_ATTRIBUTES lpProcessAttributes,_In_opt_ LPSECURITY_ATTRIBUTES lpThreadAttributes,_In_ BOOL bInheritHandles,_In_ DWORD dwCreationFlags,_In_opt_ LPVOID lpEnvironment,_In_opt_ LPCTSTR lpCurrentDirectory,_In_ LPSTARTUPINFO lpStartupInfo,_Out_ LPPROCESS_INFORMATION lpProcessInformation)
BOOL WINAPI kernel32.GetPhysicallyInstalledSystemMemory(_Out_ PULONGLONG TotalMemoryInKilobytes)
HRESULT None None.EnumAdvise([out] IEnumSTATDATA **ppenumAdvise)
NTSTATUS None None.ExInitializeResourceLite(_Out_ PERESOURCE Resource)
BOOLEAN WINAPI secur32.GetComputerObjectName(_In_ EXTENDED_NAME_FORMAT NameFormat,_Out_ LPTSTR lpNameBuffer,_Inout_ PULONG lpnSize)
BOOLEAN WINAPI secur32.GetComputerObjectNameW(_In_ EXTENDED_NAME_FORMAT NameFormat,_Out_ LPTSTR lpNameBuffer,_Inout_ PULONG lpnSize)
BOOLEAN WINAPI secur32.GetComputerObjectNameA(_In_ EXTENDED_NAME_FORMAT NameFormat,_Out_ LPTSTR lpNameBuffer,_Inout_ PULONG lpnSize)
BOOL None dxva2.GetMonitorBrightness(_In_ HANDLE hMonitor,_Out_ LPDWORD pdwMinimumBrightness,_Out_ LPDWORD pdwCurrentBrightness,_Out_ LPDWORD pdwMaximumBrightness)
uint32 None cimwin32.Win32SDToSDDL([in] __SecurityDescriptor Descriptor,[out] string SDDL)
uint32 None cimwin32.Win32SDToBinarySD([in] __SecurityDescriptor Descriptor,[out] uint8 BinarySD[])
uint32 None cimwin32.SDDLToWin32SD([in] string SDDL,[out] __SecurityDescriptor Descriptor)
uint32 None cimwin32.BinarySDToSDDL([in] uint8 BinarySD[],[out] string SDDL)
uint32 None cimwin32.SDDLToBinarySD([in] string SDDL,[out] uint8 BinarySD[])
uint32 None cimwin32.BinarySDToWin32SD([in] uint8 BinarySD[],[out] __SecurityDescriptor Descriptor)
NTSTATUS None None.IoCreateFileEx(_Out_ PHANDLE FileHandle,_In_ ACCESS_MASK DesiredAccess,_In_ POBJECT_ATTRIBUTES ObjectAttributes,_Out_ PIO_STATUS_BLOCK IoStatusBlock,_In_opt_ PLARGE_INTEGER AllocationSize,_In_ ULONG FileAttributes,_In_ ULONG ShareAccess,_In_ ULONG Disposition,_In_ ULONG CreateOptions,_In_opt_ PVOID EaBuffer,_In_ ULONG EaLength,_In_ CREATE_FILE_TYPE CreateFileType,_In_opt_ PVOID InternalParameters,_In_ ULONG Options,_In_opt_ PIO_DRIVER_CREATE_CONTEXT DriverContext)
HRESULT None None.IsUpdateNeeded([out] VARIANT_BOOL *pbIsUpdateNeeded)
NTSTATUS None None.ZwDeviceIoControlFile(_In_ HANDLE FileHandle,_In_opt_ HANDLE Event,_In_opt_ PIO_APC_ROUTINE ApcRoutine,_In_opt_ PVOID ApcContext,_Out_ PIO_STATUS_BLOCK IoStatusBlock,_In_ ULONG IoControlCode,_In_opt_ PVOID InputBuffer,_In_ ULONG InputBufferLength,_Out_opt_ PVOID OutputBuffer,_In_ ULONG OutputBufferLength)
NET_API_STATUS NET_API_FUNCTION netapi32.NetDfsAddRootTarget(_In_ LPWSTR pDfsPath,_In_opt_ LPWSTR pTargetPath,_In_ ULONG MajorVersion,_In_opt_ LPWSTR pComment,_In_ ULONG Flags)
HANDLE WINAPI kernel32.CreateSemaphore(_In_opt_ LPSECURITY_ATTRIBUTES lpSemaphoreAttributes,_In_ LONG lInitialCount,_In_ LONG lMaximumCount,_In_opt_ LPCTSTR lpName)
HANDLE WINAPI kernel32.CreateSemaphoreW(_In_opt_ LPSECURITY_ATTRIBUTES lpSemaphoreAttributes,_In_ LONG lInitialCount,_In_ LONG lMaximumCount,_In_opt_ LPCTSTR lpName)
HANDLE WINAPI kernel32.CreateSemaphoreA(_In_opt_ LPSECURITY_ATTRIBUTES lpSemaphoreAttributes,_In_ LONG lInitialCount,_In_ LONG lMaximumCount,_In_opt_ LPCTSTR lpName)
BOOL None None.AddPrinterDriverEx(_In_ LPTSTR pName,_In_ DWORD Level,_Inout_ LPBYTE pDriverInfo,_In_ DWORD dwFileCopyFlags)
BOOL None None.AddPrinterDriverExW(_In_ LPTSTR pName,_In_ DWORD Level,_Inout_ LPBYTE pDriverInfo,_In_ DWORD dwFileCopyFlags)
BOOL None None.AddPrinterDriverExA(_In_ LPTSTR pName,_In_ DWORD Level,_Inout_ LPBYTE pDriverInfo,_In_ DWORD dwFileCopyFlags)
HRESULT None None.LoadPackage(IOpcFactory *factory None,LPCWSTR packageName None,IOpcPackage **outPackage None)
uint32 None servermanager.deploymentprovider.RemoveServerComponentAsync([in] MSFT_ServerManagerRequestGuid RequestGuid,[in] Boolean DeleteComponents,[in] MSFT_ServerManagerServerComponentDescriptor ServerComponentDescriptors[],[out] MSFT_ServerManagerRequestState AlterationState)
NTSTATUS None advapi32.LsaLookupSids2(_In_ LSA_HANDLE PolicyHandle,_In_ ULONG LookupOptions,_In_ ULONG Count,_In_ PSID *Sids,_Out_ PLSA_REFERENCED_DOMAIN_LIST *ReferencedDomains,_Out_ PLSA_TRANSLATED_NAME *Names)
DWORD None cscapi.OfflineFilesQueryStatus(_Out_ BOOL *pbActive,_Out_ BOOL *pbEnabled)
long None None.sample(... None None)
HRESULT None msrdc.GetRDCVersion([out] ULONG *currentVersion,[out] ULONG *minimumCompatibleAppVersion)
BOOL None gdi32.EqualRgn(_In_ HRGN hSrcRgn1,_In_ HRGN hSrcRgn2)
HRESULT None None.GetSecondarySecurity([out] PSECURITY_OBJECT *pSecurityObjects,[out] PULONG pSecurityObjectCount)
HRESULT None ole32.CoRegisterClassObject(_In_ REFCLSID rclsid,_In_ LPUNKNOWN pUnk,_In_ DWORD dwClsContext,_In_ DWORD flags,_Out_ LPDWORD lpdwRegister)
HRESULT None azroles.get_PolicyReadersName([out] VARIANT *pvarReaders)
DWORD WINAPI kernel32.SetCriticalSectionSpinCount(_Inout_ LPCRITICAL_SECTION lpCriticalSection,_In_ DWORD dwSpinCount)
HRESULT None None.StringCbLength(_In_ LPCTSTR psz,_In_ size_t cbMax,_Out_ size_t *pcb)
HRESULT None None.StringCbLengthW(_In_ LPCTSTR psz,_In_ size_t cbMax,_Out_ size_t *pcb)
HRESULT None None.StringCbLengthA(_In_ LPCTSTR psz,_In_ size_t cbMax,_Out_ size_t *pcb)
BOOL WINAPI kernel32.FindVolumeClose(_In_ HANDLE hFindVolume)
BOOL None kernel32.BackupWrite(_In_ HANDLE hFile,_In_ LPBYTE lpBuffer,_In_ DWORD nNumberOfBytesToWrite,_Out_ LPDWORD lpNumberOfBytesWritten,_In_ BOOL bAbort,_In_ BOOL bProcessSecurity,_Out_ LPVOID *lpContext)
HRESULT None None.GetTransactionCookie(IUnknown * pITransaction,ULONG cbTransactionCookie None,byte * rgbTransactionCookie,ULONG * pcbUsed)
HRESULT None None.GetRelationshipSet([out None None,retval] IOpcRelationshipSet **relationshipSet)
HRESULT None None.get_data(BSTR *strData None)
PVOID WINAPI kernel32.LocateXStateFeature(_In_ PCONTEXT Context,_In_ DWORD FeatureId,_Out_opt_ PDWORD Length)
NTSTATUS None None.ZwCreateKey(_Out_ PHANDLE KeyHandle,_In_ ACCESS_MASK DesiredAccess,_In_ POBJECT_ATTRIBUTES ObjectAttributes,_Reserved_ ULONG TitleIndex,_In_opt_ PUNICODE_STRING Class,_In_ ULONG CreateOptions,_Out_opt_ PULONG Disposition)
HRESULT None shell32.SHSetTemporaryPropertyForItem(_In_ IShellItem *psi,_In_ REFPROPERTYKEY propkey,_In_ REFPROPVARIANT propvar)
HRESULT WINAPI iscsidsc.ReportActiveIscsiTargetMappings(_Inout_ PULONG BufferSize,_Out_ PULONG MappingCount,_Out_ PISCSI_TARGET_MAPPING Mappings)
HRESULT WINAPI iscsidsc.ReportActiveIscsiTargetMappingsW(_Inout_ PULONG BufferSize,_Out_ PULONG MappingCount,_Out_ PISCSI_TARGET_MAPPING Mappings)
HRESULT WINAPI iscsidsc.ReportActiveIscsiTargetMappingsA(_Inout_ PULONG BufferSize,_Out_ PULONG MappingCount,_Out_ PISCSI_TARGET_MAPPING Mappings)
LONG WINAPI winscard.SCardForgetReaderGroup(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szGroupName)
LONG WINAPI winscard.SCardForgetReaderGroupW(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szGroupName)
LONG WINAPI winscard.SCardForgetReaderGroupA(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szGroupName)
NTSTATUS None None.FltWriteFile(_In_ PFLT_INSTANCE InitiatingInstance,_In_ PFILE_OBJECT FileObject,_In_opt_ PLARGE_INTEGER ByteOffset,_In_ ULONG Length,_In_ PVOID Buffer,_In_ FLT_IO_OPERATION_FLAGS Flags,_Out_opt_ PULONG BytesWritten,_In_opt_ PFLT_COMPLETED_ASYNC_IO_CALLBACK CallbackRoutine,_In_opt_ PVOID CallbackContext)
public Enlistment None.EnlistDurable(Guid resourceManagerIdentifier None,ISinglePhaseNotification singlePhaseNotification None,EnlistmentOptions enlistmentOptions None)
VOID None kernel32.QueryUnbiasedInterruptTimePrecise(_Out_ PULONGLONG lpUnbiasedInterruptTimePrecise)
BOOL WINAPI kernel32.SetVolumeLabel(_In_opt_ LPCTSTR lpRootPathName,_In_opt_ LPCTSTR lpVolumeName)
BOOL WINAPI kernel32.SetVolumeLabelW(_In_opt_ LPCTSTR lpRootPathName,_In_opt_ LPCTSTR lpVolumeName)
BOOL WINAPI kernel32.SetVolumeLabelA(_In_opt_ LPCTSTR lpRootPathName,_In_opt_ LPCTSTR lpVolumeName)
HRESULT WINAPI dismapi.DismInitialize(_In_ DismLogLevel LogLevel,_In_opt_ PCWSTR LogFilePath,_In_opt_ PCWSTR ScratchDirectory)
DWORD WINAPI advapi32.GetSidLengthRequired(_In_ UCHAR nSubAuthorityCount)
BOOL WINAPI advapi32.CopySid(_In_ DWORD nDestinationSidLength,_Out_ PSID pDestinationSid,_In_ PSID pSourceSid)
HRESULT None ole32.CoSetCancelObject(_In_opt_ IUnknown *pUnk)
BOOL WINAPI dbghelp.SymFromIndex(_In_ HANDLE hProcess,_In_ ULONG64 BaseOfDll,_In_ DWORD Index,_Inout_ PSYMBOL_INFO Symbol)
BOOL WINAPI dbghelp.SymFromIndexW(_In_ HANDLE hProcess,_In_ ULONG64 BaseOfDll,_In_ DWORD Index,_Inout_ PSYMBOL_INFO Symbol)
BOOL WINAPI dbghelp.SymFromIndex(_In_ HANDLE hProcess,_In_ ULONG64 BaseOfDll,_In_ DWORD Index,_Inout_ PSYMBOL_INFO Symbol)
VOID None None.FltClearCallbackDataDirty(_Inout_ PFLT_CALLBACK_DATA Data)
VOID WINAPI kernel32.SubmitThreadpoolWork(_Inout_ PTP_WORK pwk)
BOOL None dxva2.GetMonitorRedGreenOrBlueDrive(_In_ HANDLE hMonitor,_In_ MC_DRIVE_TYPE dtDriveType,_Out_ LPDWORD pdwMinimumDrive,_Out_ LPDWORD pdwCurrentDrive,_Out_ LPDWORD pdwMaximumDrive)
BOOL None gdi32.DeleteMetaFile(_In_ HMETAFILE hmf)
BOOL WINAPI kernel32.SetCommBreak(_In_ HANDLE hFile)
BOOL WINAPI kernel32.Process32Next(_In_ HANDLE hSnapshot,_Out_ LPPROCESSENTRY32 lppe)
BOOL WINAPI kernel32.Process32NextW(_In_ HANDLE hSnapshot,_Out_ LPPROCESSENTRY32 lppe)
BOOL WINAPI kernel32.Process32Next(_In_ HANDLE hSnapshot,_Out_ LPPROCESSENTRY32 lppe)
BOOL WINAPI user32.SetThreadDesktop(_In_ HDESK hDesktop)
BOOL WINAPI kernel32.SetMailslotInfo(_In_ HANDLE hMailslot,_In_ DWORD lReadTimeout)
BOOL WINAPI kernel32.CreatePipe(_Out_ PHANDLE hReadPipe,_Out_ PHANDLE hWritePipe,_In_opt_ LPSECURITY_ATTRIBUTES lpPipeAttributes,_In_ DWORD nSize)
typedef None None.NTSTATUS(*PFS_FILTER_CALLBACK None None)
public Object None.Invoke(DispatcherPriority priority None,TimeSpan timeout None,Delegate method None,Object arg None)
NTSTATUS None None.FltQueryVolumeInformation(_In_ PFLT_INSTANCE Instance,_Out_ PIO_STATUS_BLOCK Iosb,_Out_ PVOID FsInformation,_In_ ULONG Length,_In_ FS_INFORMATION_CLASS FsInformationClass)
BOOL WINAPI advapi32.ControlService(_In_ SC_HANDLE hService,_In_ DWORD dwControl,_Out_ LPSERVICE_STATUS lpServiceStatus)
ULONG None advapi32.EventWriteString(_In_ REGHANDLE RegHandle,_In_ UCHAR Level,_In_ ULONGLONG Keyword,_In_ PCWSTR String)
BOOL WINAPI kernel32.ResetEvent(_In_ HANDLE hEvent)
NTSTATUS None None.RtlVerifyVersionInfo(_In_ PRTL_OSVERSIONINFOEXW VersionInfo,_In_ ULONG TypeMask,_In_ ULONGLONG ConditionMask)
LPVOID WINAPI resutils.ResUtilGetEnvironmentWithNetName(_In_ HRESOURCE hResource)
HRESULT STDMETHODCALLTYPE None.Connect(HBLOB hInputBlob None,DWORD StatusCallbackProc None,DWORD UserContext None,HBLOB hErrorBlob None)
HRESULT None wmpmediasharing.get_userHomeMediaSharingState([out] VARIANT_BOOL *sharingEnabled)
NTSTATUS None None.IsSecureProcess(_In_ HANDLE ProcessHandle,_Out_ BOOLEAN *SecureProcess)
HRESULT None ole32.OleSetContainedObject(_In_ LPUNKNOWN pUnknown,_In_ BOOL fContained)
BOOL None dxva2.SetMonitorContrast(_In_ HANDLE hMonitor,_In_ DWORD dwNewContrast)
BOOL WINAPI kernel32.SetFileInformationByHandle(_In_ HANDLE hFile,_In_ FILE_INFO_BY_HANDLE_CLASS FileInformationClass,_In_ LPVOID lpFileInformation,_In_ DWORD dwBufferSize)
VOID WINAPI kernel32.SetThreadpoolWait(_Inout_ PTP_WAIT pwa,_In_opt_ HANDLE h,_In_opt_ PFILETIME pftTimeout)
BOOL WINAPI user32.AreDpiAwarenessContextsEqual(_In_ DPI_AWARENESS_CONTEXT dpiContextA,_In_ DPI_AWARENESS_CONTEXT dpiContextB)
HANDLE WINAPI kernel32.CreateWaitableTimer(_In_opt_ LPSECURITY_ATTRIBUTES lpTimerAttributes,_In_ BOOL bManualReset,_In_opt_ LPCTSTR lpTimerName)
HANDLE WINAPI kernel32.CreateWaitableTimerW(_In_opt_ LPSECURITY_ATTRIBUTES lpTimerAttributes,_In_ BOOL bManualReset,_In_opt_ LPCTSTR lpTimerName)
HANDLE WINAPI kernel32.CreateWaitableTimerA(_In_opt_ LPSECURITY_ATTRIBUTES lpTimerAttributes,_In_ BOOL bManualReset,_In_opt_ LPCTSTR lpTimerName)
BOOL WINAPI kernel32.AddSecureMemoryCacheCallback(_In_ PSECURE_MEMORY_CACHE_CALLBACK pfnCallBack)
HWND WINAPI user32.CreateDialog(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc)
HWND WINAPI user32.CreateDialogW(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc)
HWND WINAPI user32.CreateDialogA(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc)
BOOL WINAPI kernel32.FreeLibrary(_In_ HMODULE hModule)
VOID None None.ExWaitForRundownProtectionRelease(_Inout_ PEX_RUNDOWN_REF RunRef)
BOOL WINAPI kernel32.GetThreadSelectorEntry(_In_ HANDLE hThread,_In_ DWORD dwSelector,_Out_ LPLDT_ENTRY lpSelectorEntry)
BOOL WINAPI kernel32.TerminateProcess(_In_ HANDLE hProcess,_In_ UINT uExitCode)
ULONGLONG None None.MAKEDLLVERULL(WORD wMajorVersion None,WORD wMinorVersion None,WORD wBuild None,WORD wSP None)
WORD None None.HRESULT_CODE(HRESULT hr None)
HRESULT None ole32.CoCreateFreeThreadedMarshaler(_In_ LPUNKNOWN punkOuter,_Out_ LPUNKNOWN *ppunkMarshal)
LONG None None.KeReadStateMutex(_In_ PRKMUTEX Mutex)
HRESULT None spoolss.UploadPrinterDriverPackage(_In_ LPCTSTR pszServer,_In_ LPCTSTR pszInfPath,_In_ LPCTSTR pszEnvironment,_In_ DWORD dwFlags,_In_ HWND hwnd,_Out_ LPTSTR pszDestInfPath,_Inout_ PULONG pcchDestInfPath)
HRESULT None spoolss.UploadPrinterDriverPackageW(_In_ LPCTSTR pszServer,_In_ LPCTSTR pszInfPath,_In_ LPCTSTR pszEnvironment,_In_ DWORD dwFlags,_In_ HWND hwnd,_Out_ LPTSTR pszDestInfPath,_Inout_ PULONG pcchDestInfPath)
HRESULT None spoolss.UploadPrinterDriverPackageA(_In_ LPCTSTR pszServer,_In_ LPCTSTR pszInfPath,_In_ LPCTSTR pszEnvironment,_In_ DWORD dwFlags,_In_ HWND hwnd,_Out_ LPTSTR pszDestInfPath,_Inout_ PULONG pcchDestInfPath)
protected void None.OnPreviewStylusDown(StylusDownEventArgs e None)
HRESULT None azroles.get_CanBeDelegated([out] BOOL *pfProp)
HRESULT None azroles.get_Members([out] VARIANT *pvarProp)
HRESULT None None.GetDevicePath([out] LPWSTR *ppwszSiloDevicePath)
BOOLEAN None None.FltDoCompletionProcessingWhenSafe(_In_ PFLT_CALLBACK_DATA Data,_In_ PCFLT_RELATED_OBJECTS FltObjects,_In_opt_ PVOID CompletionContext,_In_ FLT_POST_OPERATION_FLAGS Flags,_In_ PFLT_POST_OPERATION_CALLBACK SafePostCallback,_Out_ PFLT_POSTOP_CALLBACK_STATUS RetPostOperationStatus)
DWORD WINAPI None.ExpertSubmitEvent(HEXPERTKEY hExpertKey None,PNMEVENTDATA pExpertEvent None)
HRESULT None upnp.Id([out] BSTR *pbstrId)
NTSTATUS None advapi32.LsaClose(_In_ LSA_HANDLE ObjectHandle)
HRESULT None None.ReadChunkData(HANDLE hFile None,void * buffer,DWORD buffersize None,DWORD bufferoffset None)
NTSTATUS None None.FltFsControlFile(_In_ PFLT_INSTANCE Instance,_In_ PFILE_OBJECT FileObject,_In_ ULONG FsControlCode,_In_opt_ PVOID InputBuffer,_In_ ULONG InputBufferLength,_Out_opt_ PVOID OutputBuffer,_In_ ULONG OutputBufferLength,_Out_opt_ PULONG LengthReturned)
HANDLE WINAPI kernel32.OpenWaitableTimer(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpTimerName)
HANDLE WINAPI kernel32.OpenWaitableTimerW(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpTimerName)
HANDLE WINAPI kernel32.OpenWaitableTimerA(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpTimerName)
BOOL CALLBACK None.EnumThreadWndProc(_In_ HWND hwnd,_In_ LPARAM lParam)
HRESULT None azroles.get_UserDn([out] BSTR *pbstrProp)
HRESULT None None.EnableBlurBehind(HWND hwnd None)
HRESULT None srmsvc.get__NewEnum([out] IUnknown **unknown)
RPC_STATUS RPC_ENTRY rpcrt4.RpcCancelThreadEx(HANDLE ThreadHandle None,LONG Timeout None)
LONG WINAPI advapi32.RegDeleteTree(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey)
LONG WINAPI advapi32.RegDeleteTreeW(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey)
LONG WINAPI advapi32.RegDeleteTreeA(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey)
BOOL None sisbkup.SisCreateBackupStructure(_In_ PWCHAR volumeRoot,_Out_ PVOID *sisBackupStructure,_Out_ PWCHAR *commonStoreRootPathname,_Out_ PULONG countOfCommonStoreFilesToBackUp,_Out_ PWCHAR **commonStoreFilesToBackUp)
uint32 None cscobj.TransitionOnline([in] string Path,[in] uint32 Flags)
HRESULT None None.EnlistResourceManager(DWORD dwRMCookie None,DWORD * pdwITransaction)
NTSTATUS None None.FltDeviceIoControlFile(_In_ PFLT_INSTANCE Instance,_In_ PFILE_OBJECT FileObject,_In_ ULONG IoControlCode,_In_opt_ PVOID InputBuffer,_In_ ULONG InputBufferLength,_Out_ PVOID OutputBuffer,_In_ ULONG OutputBufferLength,_Out_opt_ PULONG LengthReturned)
HRESULT None None.get_publicId(VARIANT *publicID None)
USHORT WINAPI kernel32.CaptureStackBackTrace(_In_ ULONG FramesToSkip,_In_ ULONG FramesToCapture,_Out_ PVOID *BackTrace,_Out_opt_ PULONG BackTraceHash)
HRESULT None None.HRESULT_FROM_WIN32(DWORD x None)
HRESULT None bitsprx3.GetFileACLFlags([out] DWORD *Flags)
HRESULT None userenv.RSoPSetPolicySettingStatus(_In_ DWORD dwFlags,_In_ IWbemServices *pServices,_In_ IWbemClassObject *pSettingInstance,_In_ DWORD nInfo,_In_ POLICYSETTINGSTATUSINFO *pStatus)
DWORD WINAPI kernel32.GetProcessId(_In_ HANDLE Process)
BOOL WINAPI user32.UnpackDDElParam(_In_ UINT msg,_In_ LPARAM lParam,_Out_ PUINT_PTR puiLo,_Out_ PUINT_PTR puiHi)
NTSTATUS None None.IoUnregisterPlugPlayNotification(_In_ PVOID NotificationEntry)
NTSTATUS None None.IoUnregisterPlugPlayNotificationEx(_In_ PVOID NotificationEntry)
NTSTATUS None None.IoRegisterPlugPlayNotification(_In_ IO_NOTIFICATION_EVENT_CATEGORY EventCategory,_In_ ULONG EventCategoryFlags,_In_opt_ PVOID EventCategoryData,_In_ PDRIVER_OBJECT DriverObject,_In_ PDRIVER_NOTIFICATION_CALLBACK_ROUTINE CallbackRoutine,_In_opt_ PVOID Context,_Out_ PVOID *NotificationEntry)
void None None.Rollback(Enlistment enlistment None)
HRESULT None shell32.SHSetUnreadMailCount(_In_ LPCTSTR pszMailAddress,DWORD dwCount None,_In_ LPCTSTR pszShellExecuteCommand)
HRESULT None shell32.SHSetUnreadMailCountW(_In_ LPCTSTR pszMailAddress,DWORD dwCount None,_In_ LPCTSTR pszShellExecuteCommand)
void None None.VoidFunc1(void None None)
HRESULT None None.get_FollowDirectories([out None None,retval] BOOL *pfFollowDirectories)
HRESULT None None.GetFlags([out] EXPCMDFLAGS *pFlags)
NTSTATUS None None.RegisterCallback(_In_ ULONG CallbackId,_In_ PLSA_CALLBACK_FUNCTION Callback)
LRESULT CALLBACK None.WindowProc(HWND hwnd None,UINT uMsg None,WPARAM wParam None,LPARAM lParam None)
HRESULT None None.SetPatternByName(IDirectMusicSegmentState* pSegState None,WCHAR* wszName None,IDirectMusicStyle* pStyle None,DWORD dwPatternType None,DWORD* pdwLength None)
UINT None nddeapi.NDdeSetShareSecurity(_In_ LPTSTR lpszServer,_In_ LPTSTR lpszShareName,_In_ SECURITY_INFORMATION si,_In_ PSECURITY_DESCRIPTOR pSD)
UINT None nddeapi.NDdeSetShareSecurityW(_In_ LPTSTR lpszServer,_In_ LPTSTR lpszShareName,_In_ SECURITY_INFORMATION si,_In_ PSECURITY_DESCRIPTOR pSD)
UINT None nddeapi.NDdeSetShareSecurityA(_In_ LPTSTR lpszServer,_In_ LPTSTR lpszShareName,_In_ SECURITY_INFORMATION si,_In_ PSECURITY_DESCRIPTOR pSD)
HRESULT None None.ConnectToLogicalSensor(PCWSTR* wszHardwareID None,GUID guidLogicalID None)
BOOL WINAPI kernel32.SetFileCompletionNotificationModes(_In_ HANDLE FileHandle,_In_ UCHAR Flags)
HRESULT None None.HandleConfirmationFromOurXln([in] DTXLUXLNCONFIRMATION Confirmation)
BOOL WINAPI user32.PeekMessage(_Out_ LPMSG lpMsg,_In_opt_ HWND hWnd,_In_ UINT wMsgFilterMin,_In_ UINT wMsgFilterMax,_In_ UINT wRemoveMsg)
BOOL WINAPI user32.PeekMessageW(_Out_ LPMSG lpMsg,_In_opt_ HWND hWnd,_In_ UINT wMsgFilterMin,_In_ UINT wMsgFilterMax,_In_ UINT wRemoveMsg)
BOOL WINAPI user32.PeekMessageA(_Out_ LPMSG lpMsg,_In_opt_ HWND hWnd,_In_ UINT wMsgFilterMin,_In_ UINT wMsgFilterMax,_In_ UINT wRemoveMsg)
HRESULT None ole32.CoGetTreatAsClass(_In_ REFCLSID clsidOld,_Out_ LPCLSID pClsidNew)
BOOL WINAPI dbghelp.SymSearch(_In_ HANDLE hProcess,_In_ ULONG64 BaseOfDll,_In_opt_ DWORD Index,_In_opt_ DWORD SymTag,_In_opt_ PCTSTR Mask,_In_opt_ DWORD64 Address,_In_ PSYM_ENUMERATESYMBOLS_CALLBACK EnumSymbolsCallback,_In_opt_ PVOID UserContext,_In_ DWORD Options)
BOOL WINAPI dbghelp.SymSearchW(_In_ HANDLE hProcess,_In_ ULONG64 BaseOfDll,_In_opt_ DWORD Index,_In_opt_ DWORD SymTag,_In_opt_ PCTSTR Mask,_In_opt_ DWORD64 Address,_In_ PSYM_ENUMERATESYMBOLS_CALLBACK EnumSymbolsCallback,_In_opt_ PVOID UserContext,_In_ DWORD Options)
BOOL WINAPI dbghelp.SymSearch(_In_ HANDLE hProcess,_In_ ULONG64 BaseOfDll,_In_opt_ DWORD Index,_In_opt_ DWORD SymTag,_In_opt_ PCTSTR Mask,_In_opt_ DWORD64 Address,_In_ PSYM_ENUMERATESYMBOLS_CALLBACK EnumSymbolsCallback,_In_opt_ PVOID UserContext,_In_ DWORD Options)
DWORD WINAPI advapi32.SetSecurityInfo(_In_ HANDLE handle,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_In_opt_ PSID psidOwner,_In_opt_ PSID psidGroup,_In_opt_ PACL pDacl,_In_opt_ PACL pSacl)
BOOL WINAPI ktmw32.RollbackTransaction(_In_ HANDLE TransactionHandle)
HRESULT None None.SendPMsg(DMUS_PMSG* pPMSG None)
HRESULT None dxva2.GetNumberOfPhysicalMonitorsFromIDirect3DDevice9(_In_ IDirect3DDevice9 *pDirect3DDevice9,_Out_ LPDWORD pdwNumberOfPhysicalMonitors)
BOOL None shlwapi.SHFreeShared(_In_ HANDLE hData,_In_ DWORD dwProcessId)
BOOL WINAPI kernel32.GetVolumePathNamesForVolumeName(_In_ LPCTSTR lpszVolumeName,_Out_ LPTSTR lpszVolumePathNames,_In_ DWORD cchBufferLength,_Out_ PDWORD lpcchReturnLength)
BOOL WINAPI kernel32.GetVolumePathNamesForVolumeNameW(_In_ LPCTSTR lpszVolumeName,_Out_ LPTSTR lpszVolumePathNames,_In_ DWORD cchBufferLength,_Out_ PDWORD lpcchReturnLength)
BOOL WINAPI kernel32.GetVolumePathNamesForVolumeNameA(_In_ LPCTSTR lpszVolumeName,_Out_ LPTSTR lpszVolumePathNames,_In_ DWORD cchBufferLength,_Out_ PDWORD lpcchReturnLength)
NTSTATUS None None.ZwCreateFile(_Out_ PHANDLE FileHandle,_In_ ACCESS_MASK DesiredAccess,_In_ POBJECT_ATTRIBUTES ObjectAttributes,_Out_ PIO_STATUS_BLOCK IoStatusBlock,_In_opt_ PLARGE_INTEGER AllocationSize,_In_ ULONG FileAttributes,_In_ ULONG ShareAccess,_In_ ULONG CreateDisposition,_In_ ULONG CreateOptions,_In_opt_ PVOID EaBuffer,_In_ ULONG EaLength)
HRESULT None windowscodecs.IWICPalette_InitializeFromBitmap_Proxy(_In_ IWICPalette *THIS_PTR,_In_ IWICBitmapSource *pISurface,_In_ UINT colorCount,_In_ BOOL fAddTransparentColor)
protected void None.RemoveVisualChild(Visual child None)
BOOL WINAPI kernel32.GetNamedPipeInfo(_In_ HANDLE hNamedPipe,_Out_opt_ LPDWORD lpFlags,_Out_opt_ LPDWORD lpOutBufferSize,_Out_opt_ LPDWORD lpInBufferSize,_Out_opt_ LPDWORD lpMaxInstances)
public Object None.Invoke(DispatcherPriority priority None,Delegate method None,Object arg None)
HANDLE WINAPI ktmw32.OpenTransaction(_In_ DWORD dwDesiredAccess,_In_ LPGUID TransactionId)
VOID WINAPI sechost.UnsubscribeServiceChangeNotifications(_In_ PSC_NOTIFICATION_REGISTRATION pSubscription)
DWORD None None.MAKELONG(WORD wLow None,WORD wHigh None)
HRESULT None None.ComposeTransition(IDirectMusicSegment* pFromSeg None,IDirectMusicSegment* pToSeg None,MUSIC_TIME mtTime None,WORD wCommand None,DWORD dwFlags None,IDirectMusicChordMap* pChordMap None,IDirectMusicSegment** ppTransSeg None)
PDEVICE_OBJECT None None.IoAttachDeviceToDeviceStack(_In_ PDEVICE_OBJECT SourceDevice,_In_ PDEVICE_OBJECT TargetDevice)
HRESULT None None.EnumRecords([out] IEnumBitsPeerCacheRecords **ppEnum)
LSTATUS None shlwapi.SHDeleteKey(_In_ HKEY hkey,_In_opt_ LPCTSTR pszSubKey)
LSTATUS None shlwapi.SHDeleteKeyW(_In_ HKEY hkey,_In_opt_ LPCTSTR pszSubKey)
LSTATUS None shlwapi.SHDeleteKeyA(_In_ HKEY hkey,_In_opt_ LPCTSTR pszSubKey)
WPARAM None None.MAKEWPARAM(WORD wLow None,WORD wHigh None)
BYTE None None.HIBYTE(WORD wValue None)
HRESULT STDMETHODCALLTYPE None.QueryStations(QUERYTABLE* lpQueryTable None)
BOOL None None.AddPrinterConnection(_In_ LPTSTR pName)
BOOL None None.AddPrinterConnectionW(_In_ LPTSTR pName)
BOOL None None.AddPrinterConnectionA(_In_ LPTSTR pName)
HRESULT None ole32.OleLoad(_In_ LPSTORAGE pStg,_In_ REFIID riid,_In_ LPOLECLIENTSITE pClientSite,_Out_ LPVOID *ppvObj)
HANDLE WINAPI ktmw32.CreateResourceManager(_In_opt_ LPSECURITY_ATTRIBUTES lpResourceManagerAttributes,_In_ LPGUID ResourceManagerID,_In_opt_ DWORD CreateOptions,_In_ HANDLE TmHandle,_In_opt_ LPWSTR Description)
BOOLEAN WINAPI advapi32.AuditQuerySecurity(_In_ SECURITY_INFORMATION SecurityInformation,_Out_ PSECURITY_DESCRIPTOR *ppSecurityDescriptor)
BOOL None dxva2.GetMonitorContrast(_In_ HANDLE hMonitor,_Out_ LPDWORD pdwMinimumContrast,_Out_ LPDWORD pdwCurrentContrast,_Out_ LPDWORD pdwMaximumContrast)
BOOL WINAPI kernel32.ContinueDebugEvent(_In_ DWORD dwProcessId,_In_ DWORD dwThreadId,_In_ DWORD dwContinueStatus)
BOOL WINAPI kernel32.ChangeTimerQueueTimer(_In_opt_ HANDLE TimerQueue,_Inout_ HANDLE Timer,_In_ ULONG DueTime,_In_ ULONG Period)
BOOL WINAPI advapi32.SetKernelObjectSecurity(_In_ HANDLE Handle,_In_ SECURITY_INFORMATION SecurityInformation,_In_ PSECURITY_DESCRIPTOR SecurityDescriptor)
LPTSTR WINAPI user32.CharNext(_In_ LPCTSTR lpsz)
LPTSTR WINAPI user32.CharNextW(_In_ LPCTSTR lpsz)
LPTSTR WINAPI user32.CharNextA(_In_ LPCTSTR lpsz)
INT_PTR WINAPI user32.DialogBox(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc)
INT_PTR WINAPI user32.DialogBoxW(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc)
INT_PTR WINAPI user32.DialogBoxA(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc)
NTSTATUS None None.ZwRollbackComplete(_In_ HANDLE EnlistmentHandle,_In_opt_ PLARGE_INTEGER TmVirtualClock)
BOOL WINAPI kernel32.GetTimeZoneInformationForYear(_In_ USHORT wYear,_In_opt_ PDYNAMIC_TIME_ZONE_INFORMATION pdtzi,_Out_ LPTIME_ZONE_INFORMATION ptzi)
DWORD None None.UpdateDefaultPassword(WCHAR * pwszSecret)
HRESULT None None.GetSilos([out] IEnhancedStorageSilo ***ppIEnhancedStorageSilos,[out] ULONG *pcEnhancedStorageSilos)
HRESULT None None.GetSecurityCallContext([out] ISecurityCallContext **ppObject)
MMRESULT None winmm.timeKillEvent(UINT uTimerID None)
UINT WINAPI kernel32.GetSystemWindowsDirectory(_Out_ LPTSTR lpBuffer,_In_ UINT uSize)
UINT WINAPI kernel32.GetSystemWindowsDirectoryW(_Out_ LPTSTR lpBuffer,_In_ UINT uSize)
UINT WINAPI kernel32.GetSystemWindowsDirectoryA(_Out_ LPTSTR lpBuffer,_In_ UINT uSize)
public boolean None.Match(Object obj None)
VOID CALLBACK None.WaitChainCallback(HWCT WctHandle None,DWORD_PTR Context None,DWORD CallbackStatus None,LPDWORD NodeCount None,PWAITCHAIN_NODE_INFO NodeInfoArray None,LPBOOL IsCycle None)
EVT_HANDLE WINAPI wevtapi.EvtOpenPublisherMetadata(_In_opt_ EVT_HANDLE Session,_In_ LPCWSTR PublisherIdentity,_In_opt_ LPCWSTR LogFilePath,_In_ LCID Locale,_In_ DWORD Flags)
DWORD WINAPI kernel32.SuspendThread(_In_ HANDLE hThread)
uint32 None vdswmi.ScheduleAutoChk([in] string Volume[])
protected void None.OnIsStylusCapturedChanged(DependencyPropertyChangedEventArgs e None)
DWORD WINAPI advapi32.SetNamedSecurityInfo(_In_ LPTSTR pObjectName,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_In_opt_ PSID psidOwner,_In_opt_ PSID psidGroup,_In_opt_ PACL pDacl,_In_opt_ PACL pSacl)
DWORD WINAPI advapi32.SetNamedSecurityInfoW(_In_ LPTSTR pObjectName,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_In_opt_ PSID psidOwner,_In_opt_ PSID psidGroup,_In_opt_ PACL pDacl,_In_opt_ PACL pSacl)
DWORD WINAPI advapi32.SetNamedSecurityInfoA(_In_ LPTSTR pObjectName,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_In_opt_ PSID psidOwner,_In_opt_ PSID psidGroup,_In_opt_ PACL pDacl,_In_opt_ PACL pSacl)
VOID None None.FltCbdqDisable(_Inout_ PFLT_CALLBACK_DATA_QUEUE Cbdq)
BOOL WINAPI advapi32.GetSecurityDescriptorControl(_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_Out_ PSECURITY_DESCRIPTOR_CONTROL pControl,_Out_ LPDWORD lpdwRevision)
HANDLE WINAPI kernel32.OpenPrivateNamespace(_In_ LPVOID lpBoundaryDescriptor,_In_ LPCTSTR lpAliasPrefix)
HANDLE WINAPI kernel32.OpenPrivateNamespaceW(_In_ LPVOID lpBoundaryDescriptor,_In_ LPCTSTR lpAliasPrefix)
HANDLE WINAPI kernel32.OpenPrivateNamespaceA(_In_ LPVOID lpBoundaryDescriptor,_In_ LPCTSTR lpAliasPrefix)
HRESULT None spoolss.InstallPrinterDriverFromPackage(_In_ LPCTSTR pszServer,_In_ LPCTSTR pszInfPath,_In_ LPCTSTR pszDriverName,_In_ LPCTSTR pszEnvironment,_In_ DWORD dwFlags)
HRESULT None spoolss.InstallPrinterDriverFromPackageW(_In_ LPCTSTR pszServer,_In_ LPCTSTR pszInfPath,_In_ LPCTSTR pszDriverName,_In_ LPCTSTR pszEnvironment,_In_ DWORD dwFlags)
HRESULT None spoolss.InstallPrinterDriverFromPackageA(_In_ LPCTSTR pszServer,_In_ LPCTSTR pszInfPath,_In_ LPCTSTR pszDriverName,_In_ LPCTSTR pszEnvironment,_In_ DWORD dwFlags)
uint32 None smiscsitargetprov.SetPowerState([in] uint16 PowerState,[in] datetime Time)
protected void None.AddLogicalChild(Object child None)
HRESULT None oleaut32.VariantClear(_Inout_ VARIANTARG *pvarg)
LONGLONG WINAPI None.MultiplyHigh(_In_ LONG64 Multiplier,_In_ LONG64 Multiplicand)
VOID WINAPI kernel32.SwitchToFiber(_In_ LPVOID lpFiber)
HWND WINAPI user32.ChildWindowFromPoint(_In_ HWND hWndParent,_In_ POINT Point)
HRESULT None azroles.get_UserDnsSamCompat([out] BSTR *pbstrProp)
HWND WINAPI user32.WindowFromPhysicalPoint(_In_ POINT Point)
LPCSTR WINAPI crypt32.CertAlgIdToOID(_In_ DWORD dwAlgId)
DWORD WINAPI None.ThreadProc(_In_ LPVOID lpParameter)
HRESULT None qmgrprxy.GetDescription([out] LPWSTR *ppDescription)
HBRUSH None gdi32.CreatePatternBrush(_In_ HBITMAP hbmp)
HRESULT None None.StringCbPrintf_l(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ ... None)
HRESULT None None.StringCbPrintf_lW(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ ... None)
HRESULT None None.StringCbPrintf_lA(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ ... None)
RPC_SS_THREAD_HANDLE RPC_ENTRY rpcrt4.RpcSmGetThreadHandle(RPC_STATUS *pStatus None)
NTSTATUS None advapi32.LsaEnumerateAccountsWithUserRight(_In_ LSA_HANDLE PolicyHandle,_In_ PLSA_UNICODE_STRING UserRights,_Out_ PVOID *EnumerationBuffer,_Out_ PULONG CountReturned)
LSTATUS None shlwapi.SHCopyKey(_In_ HKEY hkeySrc,_In_opt_ LPCTSTR pszSrcSubKey,_In_ HKEY hkeyDest,_Reserved_ DWORD fReserved)
LSTATUS None shlwapi.SHCopyKeyW(_In_ HKEY hkeySrc,_In_opt_ LPCTSTR pszSrcSubKey,_In_ HKEY hkeyDest,_Reserved_ DWORD fReserved)
LSTATUS None shlwapi.SHCopyKeyA(_In_ HKEY hkeySrc,_In_opt_ LPCTSTR pszSrcSubKey,_In_ HKEY hkeyDest,_Reserved_ DWORD fReserved)
BOOL None sisbkup.SisRestoredLink(_In_ PVOID sisRestoreStructure,_In_ PWCHAR restoredFileName,_In_ PVOID reparseData,_In_ ULONG reparseDataSize,_Out_ PULONG countOfCommonStoreFilesToRestore,_Out_ PWCHAR **commonStoreFilesToRestore)
NTSTATUS None None.ZwUnloadDriver(_In_ PUNICODE_STRING DriverServiceName)
BOOL WINAPI kernel32.SetupComm(_In_ HANDLE hFile,_In_ DWORD dwInQueue,_In_ DWORD dwOutQueue)
HRESULT STDAPI ndfapi.NdfCreatePnrpIncident(_In_ LPCWSTR cloudname,_In_opt_ LPCWSTR peername,_In_ BOOL diagnosePublish,_In_opt_ LPCWSTR appId,_Out_ NDFHANDLE *handle)
HRESULT None None.get_responseXML(IDispatch** ppBody None)
HRESULT WINAPI dismapi.DismGetLastErrorMessage(_Out_ DismString **ErrorMessage)
LRESULT CALLBACK None.MyWndProc(HWND hWnd None,UINT msg None,WPARAM wParam None,LPARAM lParam None,UINT_PTR uIdSubclass None,DWORD_PTR dwRefData None)
SerializableAttribute None None.ClassInterfaceAttribute(ClassInterfaceType.None None None)
public int None.CompareTo(Object obj None)
HRESULT None None.GetIntent([out None None,retval] LPWSTR *intent)
BOOL WINAPI txfw32.TxfLogDestroyReadContext(_In_ PVOID TxfLogContext)
HRESULT WINAPI iscsidsc.ReportIscsiSendTargetPortals(_Out_ PULONG PortalCount,_Inout_ PISCSI_TARGET_PORTAL_INFO PortalInfo)
HRESULT WINAPI iscsidsc.ReportIscsiSendTargetPortalsW(_Out_ PULONG PortalCount,_Inout_ PISCSI_TARGET_PORTAL_INFO PortalInfo)
HRESULT WINAPI iscsidsc.ReportIscsiSendTargetPortalsA(_Out_ PULONG PortalCount,_Inout_ PISCSI_TARGET_PORTAL_INFO PortalInfo)
uint32 None ramgmtpsprovider.SetByEnableLoadBalancing([in] boolean UseThirdPartyLoadBalancer,[in] string InternetDedicatedIPAddress[],[in] string InternalDedicatedIPAddress[],[in] string InternetVirtualIPAddress[],[in] string InternalVirtualIPAddress[],[in] string ComputerName,[in] boolean PassThru,[out] RemoteAccessLoadBalancer cmdletOutput)
HRESULT None qmgrprxy.GetCount([out] ULONG *pCount)
UINT None shell32.DragQueryFile(_In_ HDROP hDrop,_In_ UINT iFile,_Out_ LPTSTR lpszFile,UINT cch None)
UINT None shell32.DragQueryFileW(_In_ HDROP hDrop,_In_ UINT iFile,_Out_ LPTSTR lpszFile,UINT cch None)
UINT None shell32.DragQueryFileA(_In_ HDROP hDrop,_In_ UINT iFile,_Out_ LPTSTR lpszFile,UINT cch None)
export float None.identity(float x None)
NTSTATUS None None.SpInstanceInit(_In_ ULONG Version,_In_ PSECPKG_DLL_FUNCTIONS FunctionTable,_Out_ PVOID *UserFunctions)
NTSTATUS None None.ZwQueryFullAttributesFile(_In_ POBJECT_ATTRIBUTES ObjectAttributes,_Out_ PFILE_NETWORK_OPEN_INFORMATION FileInformation)
EVT_HANDLE WINAPI wevtapi.EvtCreateRenderContext(_In_ DWORD ValuePathsCount,_In_ LPCWSTR *ValuePaths,_In_ DWORD Flags)
HANDLE WINAPI user32.RemoveProp(_In_ HWND hWnd,_In_ LPCTSTR lpString)
HANDLE WINAPI user32.RemovePropW(_In_ HWND hWnd,_In_ LPCTSTR lpString)
HANDLE WINAPI user32.RemovePropA(_In_ HWND hWnd,_In_ LPCTSTR lpString)
BOOL WINAPI kernel32.Heap32First(_Inout_ LPHEAPENTRY32 lphe,_In_ DWORD th32ProcessID,_In_ ULONG_PTR th32HeapID)
BOOL None kernel32.QueryUnbiasedInterruptTime(_Out_ PULONGLONG lpUnbiasedInterruptTime)
VOID WINAPI kernel32.AcquireSRWLockShared(_Inout_ PSRWLOCK SRWLock)
BOOL None kernel32.EnumDateFormatsEx(_In_ DATEFMT_ENUMPROCEX lpDateFmtEnumProcEx,_In_ LCID Locale,_In_ DWORD dwFlags)
BOOL None kernel32.EnumDateFormatsExW(_In_ DATEFMT_ENUMPROCEX lpDateFmtEnumProcEx,_In_ LCID Locale,_In_ DWORD dwFlags)
BOOL None kernel32.EnumDateFormatsExA(_In_ DATEFMT_ENUMPROCEX lpDateFmtEnumProcEx,_In_ LCID Locale,_In_ DWORD dwFlags)
BOOL WINAPI dbghelp.SymSetParentWindow(_In_ HWND hwnd)
BOOL WINAPI advapi32.EqualSid(_In_ PSID pSid1,_In_ PSID pSid2)
protected void None.OnPreviewDragLeave(DragEventArgs e None)
BOOL WINAPI kernel32.FlushInstructionCache(_In_ HANDLE hProcess,_In_ LPCVOID lpBaseAddress,_In_ SIZE_T dwSize)
BOOLEAN None None.FltIsCallbackDataDirty(_In_ PFLT_CALLBACK_DATA Data)
VOID None None.KeQuerySystemTime(_Out_ PLARGE_INTEGER CurrentTime)
HRESULT WDSBPAPI wdsbp.WdsBpAddOption(_In_ HANDLE hHandle,_In_ ULONG uOption,_In_ ULONG uValueLen,_In_ PVOID pValue)
BOOL WINAPI kernel32.WritePrivateProfileSection(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpString,_In_ LPCTSTR lpFileName)
BOOL WINAPI kernel32.WritePrivateProfileSectionW(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpString,_In_ LPCTSTR lpFileName)
BOOL WINAPI kernel32.WritePrivateProfileSectionA(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpString,_In_ LPCTSTR lpFileName)
HRESULT None dskquota.GetSidLength([out] LPDWORD pdwLength)
BOOL WINAPI advapi32.QueryServiceConfig(_In_ SC_HANDLE hService,_Out_opt_ LPQUERY_SERVICE_CONFIG lpServiceConfig,_In_ DWORD cbBufSize,_Out_ LPDWORD pcbBytesNeeded)
BOOL WINAPI advapi32.QueryServiceConfigW(_In_ SC_HANDLE hService,_Out_opt_ LPQUERY_SERVICE_CONFIG lpServiceConfig,_In_ DWORD cbBufSize,_Out_ LPDWORD pcbBytesNeeded)
BOOL WINAPI advapi32.QueryServiceConfigA(_In_ SC_HANDLE hService,_Out_opt_ LPQUERY_SERVICE_CONFIG lpServiceConfig,_In_ DWORD cbBufSize,_Out_ LPDWORD pcbBytesNeeded)
public void None.GetObjectData(SerializationInfo info None,StreamingContext context None)
BOOL WINAPI kernel32.GetNamedPipeServerSessionId(_In_ HANDLE Pipe,_Out_ PULONG ServerSessionId)
UINT None oledlg.OleUIEditLinks(_In_ LPOLEUIEDITLINKS lpEL)
UINT None oledlg.OleUIEditLinksW(_In_ LPOLEUIEDITLINKS lpEL)
UINT None oledlg.OleUIEditLinksA(_In_ LPOLEUIEDITLINKS lpEL)
LPARAM WINAPI None.MAKELPARAM(WORD wLow None,WORD wHigh None)
HRESULT None vssapi.CreateVssBackupComponents(_Out_ IVssBackupComponents **ppBackup)
NTSTATUS None None.IoAttachDevice(_In_ PDEVICE_OBJECT SourceDevice,_In_ PUNICODE_STRING TargetDevice,_Out_ PDEVICE_OBJECT *AttachedDevice)
HRESULT STDMETHODCALLTYPE None.Stop(LPSTATISTICS lpStats None)
VOID None None.IoDeleteDevice(_In_ PDEVICE_OBJECT DeviceObject)
HRESULT None wmpmediasharing.get_computerInternetMediaSharingAllowedState([out] VARIANT_BOOL *sharingAllowed)
HRESULT None None.get_ObjectPicker([out] IAzObjectPicker **ppObjectPicker)
HWND WINAPI user32.CreateDialogParam(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpTemplateName,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc,_In_ LPARAM dwInitParam)
HWND WINAPI user32.CreateDialogParamW(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpTemplateName,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc,_In_ LPARAM dwInitParam)
HWND WINAPI user32.CreateDialogParamA(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpTemplateName,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc,_In_ LPARAM dwInitParam)
HRESULT STDMETHODCALLTYPE None.GetConversationStatistics(DWORD* nSessions None,LPSESSIONSTATS lpSessionStats None,DWORD* nStations None,LPSTATIONSTATS lpStationStats None,BOOL fClearAfterReading None)
HRESULT None ole32.OleSaveToStream(_In_ LPPERSISTSTREAM pPStm,_In_ LPSTREAM pStm)
BOOL WINAPI kernel32.QueryMemoryResourceNotification(_In_ HANDLE ResourceNotificationHandle,_Out_ PBOOL ResourceState)
HANDLE WINAPI kernel32.FindFirstStreamW(_In_ LPCWSTR lpFileName,_In_ STREAM_INFO_LEVELS InfoLevel,_Out_ LPVOID lpFindStreamData,_Reserved_ DWORD dwFlags)
HRESULT WDSCLIAPI wdsclientapi.WdsCliGetEnumerationFlags(_In_ HANDLE Handle,_Out_ PDWORD pdwFlags)
BOOL WINAPI ktmw32.GetEnlistmentRecoveryInformation(_In_ HANDLE EnlistmentHandle,_In_ ULONG BufferSize,_Out_ PVOID Buffer,_Out_opt_ PULONG BufferUsed)
BOOL WINAPI user32.MapDialogRect(_In_ HWND hDlg,_Inout_ LPRECT lpRect)
HANDLE WINAPI kernel32.CreateMailslot(_In_ LPCTSTR lpName,_In_ DWORD nMaxMessageSize,_In_ DWORD lReadTimeout,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes)
HANDLE WINAPI kernel32.CreateMailslotW(_In_ LPCTSTR lpName,_In_ DWORD nMaxMessageSize,_In_ DWORD lReadTimeout,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes)
HANDLE WINAPI kernel32.CreateMailslotA(_In_ LPCTSTR lpName,_In_ DWORD nMaxMessageSize,_In_ DWORD lReadTimeout,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes)
BOOLEAN WINAPI kernel32.TryAcquireSRWLockShared(_Inout_ PSRWLOCK SRWLock)
UINT WINAPI None.GetSystemWow64Directory2(_Out_ LPTSTR lpBuffer,_In_ UINT uSize,_In_ WORD ImageFileMachineType)
UINT WINAPI None.GetSystemWow64Directory2W(_Out_ LPTSTR lpBuffer,_In_ UINT uSize,_In_ WORD ImageFileMachineType)
UINT WINAPI None.GetSystemWow64Directory2A(_Out_ LPTSTR lpBuffer,_In_ UINT uSize,_In_ WORD ImageFileMachineType)
BOOL None None.EnumForms(_In_ HANDLE hPrinter,_In_ DWORD Level,_Out_ LPBYTE pForm,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded,_Out_ LPDWORD pcReturned)
BOOL None None.EnumFormsW(_In_ HANDLE hPrinter,_In_ DWORD Level,_Out_ LPBYTE pForm,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded,_Out_ LPDWORD pcReturned)
BOOL None None.EnumFormsA(_In_ HANDLE hPrinter,_In_ DWORD Level,_Out_ LPBYTE pForm,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded,_Out_ LPDWORD pcReturned)
BOOL WINAPI crypt32.CryptImportPublicKeyInfo(_In_ HCRYPTPROV hCryptProv,_In_ DWORD dwCertEncodingType,_In_ PCERT_PUBLIC_KEY_INFO pInfo,_Out_ HCRYPTKEY *phKey)
uint32 None eventtracingmanagement.Send([in] string destinationFolder,[in] boolean deleteFile,[out] string sourceFilePath,[out] uint32 ErrorCode)
INT_PTR CALLBACK None.DlgProc(HWND hDlg None,UINT message None,WPARAM wParam None,LPARAM lParam None)
LRESULT WINAPI user32.SendMessage(_In_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
LRESULT WINAPI user32.SendMessageW(_In_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
LRESULT WINAPI user32.SendMessageA(_In_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
BOOL WINAPI kernel32.SetProcessPriorityBoost(_In_ HANDLE hProcess,_In_ BOOL DisablePriorityBoost)
HDDEDATA WINAPI user32.DdeNameService(_In_ DWORD idInst,_In_opt_ HSZ hsz1,_In_opt_ HSZ hsz2,_In_ UINT afCmd)
VOID None None.IoCopyCurrentIrpStackLocationToNext(_Inout_ PIRP Irp)
NTSTATUS None None.ExDeleteResourceLite(_Inout_ PERESOURCE Resource)
HDC None user32.GetWindowDC(_In_ HWND hWnd)
VOID None None.ObDereferenceObjectWithTag(_In_ PVOID Object,_In_ ULONG Tag)
BOOL WINAPI user32.EndDialog(_In_ HWND hDlg,_In_ INT_PTR nResult)
NTSTATUS WINAPI netapi32.NetLogonSetServiceBits(_In_ LPWSTR ServerName,_In_ DWORD ServiceBitsOfInterest,_In_ DWORD ServiceBits)
ULONGLONG None None.MAKEDLLVERULL(WORD wMajorVersion None,WORD wMinorVersion None,WORD wBuild None,WORD wSP None)
HRESULT None shell32.GetIDList([out] PIDLIST_ABSOLUTE *ppidl)
ULONG None advapi32.LsaNtStatusToWinError(_In_ NTSTATUS Status)
HRESULT None propsys.PSFormatForDisplay(_In_ REFPROPERTYKEY propkey,_In_ REFPROPVARIANT propvar,_In_ PROPDESC_FORMAT_FLAGS pdfFlags,_Out_ LPWSTR pwszText,_In_ DWORD cchText)
DWORD64 None None.UnsignedMultiplyExtract128(_In_ DWORD64 Multiplier,_In_ DWORD64 Multiplicand,_In_ BYTE Shift)
HANDLE WINAPI clfsw32.CreateLogFile(_In_ LPCWSTR pszLogFileName,_In_ ACCESS_MASK fDesiredAccess,_In_ DWORD dwShareMode,_In_opt_ LPSECURITY_ATTRIBUTES psaLogFile,_In_ ULONG fCreateDisposition,_In_ ULONG fFlagsAndAttributes)
VOID WINAPI kernel32.InitializeConditionVariable(_Out_ PCONDITION_VARIABLE ConditionVariable)
BOOL WINAPI user32.DdeDisconnectList(_In_ HCONVLIST hConvList)
HRESULT None None.Abort(BOID * pboidReason,BOOL fRetaining None,BOOL fAsync None)
DWORD WINAPI None.ThreadProc(LPVOID lpParameter None)
NTSTATUS None advapi32.LsaRemoveAccountRights(_In_ LSA_HANDLE PolicyHandle,_In_ PSID AccountSid,_In_ BOOLEAN AllRights,_In_ PLSA_UNICODE_STRING UserRights,_In_ ULONG CountOfRights)
BOOL WINAPI kernel32.SetDefaultCommConfig(_In_ LPCTSTR lpszName,_In_ LPCOMMCONFIG lpCC,_In_ DWORD dwSize)
BOOL WINAPI kernel32.SetDefaultCommConfigW(_In_ LPCTSTR lpszName,_In_ LPCOMMCONFIG lpCC,_In_ DWORD dwSize)
BOOL WINAPI kernel32.SetDefaultCommConfigA(_In_ LPCTSTR lpszName,_In_ LPCOMMCONFIG lpCC,_In_ DWORD dwSize)
HRESULT None None.StringCchPrintfEx(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags,_In_ LPCTSTR pszFormat,_In_ ... None)
HRESULT None None.StringCchPrintfExW(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags,_In_ LPCTSTR pszFormat,_In_ ... None)
HRESULT None None.StringCchPrintfExA(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags,_In_ LPCTSTR pszFormat,_In_ ... None)
BOOL WINAPI user32.FlashWindow(_In_ HWND hWnd,_In_ BOOL bInvert)
PVOID WINAPI kernel32.RtlLookupFunctionEntry(_In_ ULONGLONG ControlPc,_Out_ PULONGLONG ImageBase,_Out_ PULONGLONG TargetGp)
BOOL WINAPI kernel32.CreateDirectoryTransacted(_In_opt_ LPCTSTR lpTemplateDirectory,_In_ LPCTSTR lpNewDirectory,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.CreateDirectoryTransactedW(_In_opt_ LPCTSTR lpTemplateDirectory,_In_ LPCTSTR lpNewDirectory,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.CreateDirectoryTransactedA(_In_opt_ LPCTSTR lpTemplateDirectory,_In_ LPCTSTR lpNewDirectory,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ HANDLE hTransaction)
NTSTATUS None None.IoWMIAllocateInstanceIds(_In_ GUID *Guid,_In_ ULONG InstanceCount,_Out_ ULONG *FirstInstanceId)
HRESULT None None.SetCurrentReportInterval(ISensor* pSensor None,ULONG ulNewInterval None)
BOOL None kernel32.BackupSeek(_In_ HANDLE hFile,_In_ DWORD dwLowBytesToSeek,_In_ DWORD dwHighBytesToSeek,_Out_ LPDWORD lpdwLowByteSeeked,_Out_ LPDWORD lpdwHighByteSeeked,_In_ LPVOID *lpContext)
HRESULT None azroles.get_Writable([out] BOOL *pfProp)
HRESULT STDAPI ndfapi.NdfGetTraceFile(_In_ NDFHANDLE Handle,_Out_ LPCWSTR *TraceFileLocation)
HGLOBAL WINAPI kernel32.LoadResource(_In_opt_ HMODULE hModule,_In_ HRSRC hResInfo)
BOOL WINAPI kernel32.Beep(_In_ DWORD dwFreq,_In_ DWORD dwDuration)
HRESULT None shell32.SetRelativePath(LPCTSTR pszPathRel None,DWORD dwReserved None)
HRESULT WINAPI dismapi.DismRemountImage(_In_ PCWSTR MountPath)
HRESULT None None.get_schemas(VARIANT* otherCollection None)
BOOL WINAPI advapi32.GetFileSecurity(_In_ LPCTSTR lpFileName,_In_ SECURITY_INFORMATION RequestedInformation,_Out_opt_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_ DWORD nLength,_Out_ LPDWORD lpnLengthNeeded)
BOOL WINAPI advapi32.GetFileSecurityW(_In_ LPCTSTR lpFileName,_In_ SECURITY_INFORMATION RequestedInformation,_Out_opt_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_ DWORD nLength,_Out_ LPDWORD lpnLengthNeeded)
BOOL WINAPI advapi32.GetFileSecurityA(_In_ LPCTSTR lpFileName,_In_ SECURITY_INFORMATION RequestedInformation,_Out_opt_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_ DWORD nLength,_Out_ LPDWORD lpnLengthNeeded)
HRESULT None None.StringCbLength(_In_ LPCTSTR psz,_In_ size_t cbMax,_Out_ size_t *pcb)
HRESULT None None.StringCbLengthW(_In_ LPCTSTR psz,_In_ size_t cbMax,_Out_ size_t *pcb)
HRESULT None None.StringCbLengthA(_In_ LPCTSTR psz,_In_ size_t cbMax,_Out_ size_t *pcb)
BOOL WINAPI kernelbase.CompareObjectHandles(_In_ HANDLE hFirstObjectHandle,_In_ HANDLE hSecondObjectHandle)
BOOL WINAPI None.DllMain(HINSTANCE hInstance None,ULONG ulReason None,LPVOID Reserved None)
HRESULT WINAPI iscsidsc.GetIscsiInitiatorNodeName(PTCHAR InitiatorNodeName None)
HRESULT WINAPI iscsidsc.GetIscsiInitiatorNodeNameW(PTCHAR InitiatorNodeName None)
HRESULT WINAPI iscsidsc.GetIscsiInitiatorNodeNameA(PTCHAR InitiatorNodeName None)
HRESULT None None.getNamedItem(BSTR name None,IXMLDOMNode **namedItem None)
HRESULT None shell32.SHCreateShellItemArray(_In_ PCIDLIST_ABSOLUTE pidlParent,_In_ IShellFolder *psf,_In_ UINT cidl,_In_ PCUITEMID_CHILD_ARRAY ppidl,_Out_ IShellItemArray **ppsiItemArray)
HRESULT None combase.CoGetInstanceFromFile(_In_opt_ COSERVERINFO *pServerInfo,_In_opt_ CLSID *pClsid,_In_opt_ IUnknown *punkOuter,_In_ DWORD dwClsCtx,_In_ DWORD grfMode,_In_ OLECHAR *pwszName,_In_ DWORD dwCount,_Inout_ MULTI_QI *pResults)
SECURITY_STATUS None sspicli.SspiEncodeAuthIdentityAsStrings(_In_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE pAuthIdentity,_Out_ PCWSTR *ppszUserName,_Out_ PCWSTR *ppszDomainName,_Out_ PCWSTR *ppszPackedCredentialsString)
SECURITY_STATUS None sspicli.SspiEncodeAuthIdentityAsStringsW(_In_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE pAuthIdentity,_Out_ PCWSTR *ppszUserName,_Out_ PCWSTR *ppszDomainName,_Out_ PCWSTR *ppszPackedCredentialsString)
SECURITY_STATUS None sspicli.SspiEncodeAuthIdentityAsStringsA(_In_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE pAuthIdentity,_Out_ PCWSTR *ppszUserName,_Out_ PCWSTR *ppszDomainName,_Out_ PCWSTR *ppszPackedCredentialsString)
NET_API_STATUS None netapi32.NetDfsAddStdRoot(_In_ LPWSTR ServerName,_In_ LPWSTR RootShare,_In_opt_ LPWSTR Comment,_In_ DWORD Flags)
DWORD None None.PrintEvent(EVT_HANDLE hEvent None)
BOOL WINAPI user32.UnpackDDElParam(_In_ UINT msg,_In_ LPARAM lParam,_Out_ PUINT_PTR puiLo,_Out_ PUINT_PTR puiHi)
BOOL WINAPI kernel32.GetExitCodeProcess(_In_ HANDLE hProcess,_Out_ LPDWORD lpExitCode)
BOOL WINAPI kernel32.FindNextChangeNotification(_In_ HANDLE hChangeHandle)
HRESULT None None.WriteAttributes(IXmlReader * pReader,BOOL fWriteDefaultAttributes None)
BOOL None user32.LogicalToPhysicalPointForPerMonitorDPI(_In_ HWND hwnd,_Inout_ LPPOINT lpPoint)
DWORD WINAPI kernel32.GetPrivateProfileSectionNames(_Out_ LPTSTR lpszReturnBuffer,_In_ DWORD nSize,_In_ LPCTSTR lpFileName)
DWORD WINAPI kernel32.GetPrivateProfileSectionNamesW(_Out_ LPTSTR lpszReturnBuffer,_In_ DWORD nSize,_In_ LPCTSTR lpFileName)
DWORD WINAPI kernel32.GetPrivateProfileSectionNamesA(_Out_ LPTSTR lpszReturnBuffer,_In_ DWORD nSize,_In_ LPCTSTR lpFileName)
BOOL WINAPI kernel32.SleepConditionVariableSRW(_Inout_ PCONDITION_VARIABLE ConditionVariable,_Inout_ PSRWLOCK SRWLock,_In_ DWORD dwMilliseconds,_In_ ULONG Flags)
BOOL None sisbkup.SisRestoredCommonStoreFile(_In_ PVOID sisRestoreStructure,_In_ PWCHAR commonStoreFileName)
BOOL None kernel32.EnumTimeFormats(_In_ TIMEFMT_ENUMPROC lpTimeFmtEnumProc,_In_ LCID Locale,_In_ DWORD dwFlags)
BOOL None kernel32.EnumTimeFormatsW(_In_ TIMEFMT_ENUMPROC lpTimeFmtEnumProc,_In_ LCID Locale,_In_ DWORD dwFlags)
BOOL None kernel32.EnumTimeFormatsA(_In_ TIMEFMT_ENUMPROC lpTimeFmtEnumProc,_In_ LCID Locale,_In_ DWORD dwFlags)
BOOL IMAGEAPI dbghelp.SymGetLineFromInlineContext(_In_ HANDLE hProcess,_In_ DWORD64 dwAddr,_In_ ULONG InlineContext,_In_opt_ DWORD64 qwModuleBaseAddress,_Out_ PDWORD pdwDisplacement,_Out_ PIMAGEHLP_LINEW64 Line)
BOOL IMAGEAPI dbghelp.SymGetLineFromInlineContextW(_In_ HANDLE hProcess,_In_ DWORD64 dwAddr,_In_ ULONG InlineContext,_In_opt_ DWORD64 qwModuleBaseAddress,_Out_ PDWORD pdwDisplacement,_Out_ PIMAGEHLP_LINEW64 Line)
BOOL IMAGEAPI dbghelp.SymGetLineFromInlineContext(_In_ HANDLE hProcess,_In_ DWORD64 dwAddr,_In_ ULONG InlineContext,_In_opt_ DWORD64 qwModuleBaseAddress,_Out_ PDWORD pdwDisplacement,_Out_ PIMAGEHLP_LINEW64 Line)
BOOL WINAPI advapi32.CreatePrivateObjectSecurity(_In_opt_ PSECURITY_DESCRIPTOR ParentDescriptor,_In_opt_ PSECURITY_DESCRIPTOR CreatorDescriptor,_Out_ PSECURITY_DESCRIPTOR *NewDescriptor,_In_ BOOL IsDirectoryObject,_In_opt_ HANDLE Token,_In_ PGENERIC_MAPPING GenericMapping)
BOOL WINAPI advapi32.AreAnyAccessesGranted(_In_ DWORD GrantedAccess,_In_ DWORD DesiredAccess)
BOOL None user32.UpdateWindow(_In_ HWND hWnd)
BOOL None dxva2.DestroyPhysicalMonitor(_In_ HANDLE hMonitor)
HRESULT None actxprxy.EnumDiscMasterFormats([out] IEnumDiscMasterFormats **ppEnum)
UINT None nddeapi.NDdeShareAdd(_In_ LPTSTR lpszServer,_In_ UINT nLevel,_In_ PSECURITY_DESCRIPTOR pSD,_In_ LPBYTE lpBuffer,_In_ DWORD cBufSize)
UINT None nddeapi.NDdeShareAddW(_In_ LPTSTR lpszServer,_In_ UINT nLevel,_In_ PSECURITY_DESCRIPTOR pSD,_In_ LPBYTE lpBuffer,_In_ DWORD cBufSize)
UINT None nddeapi.NDdeShareAddA(_In_ LPTSTR lpszServer,_In_ UINT nLevel,_In_ PSECURITY_DESCRIPTOR pSD,_In_ LPBYTE lpBuffer,_In_ DWORD cBufSize)
NTSTATUS None None.FltGetVolumeProperties(_In_ PFLT_VOLUME Volume,_Out_ PFLT_VOLUME_PROPERTIES VolumeProperties,_In_ ULONG Length,_Out_ PULONG LengthReturned)
HRESULT STDMETHODCALLTYPE None.GetConversationStatistics(DWORD* nSessions None,LPSESSIONSTATS lpSessionStats None,DWORD* nStations None,LPSTATIONSTATS lpStationStats None,BOOL fClearAfterReading None)
VOID None None.IoDetachDevice(_Inout_ PDEVICE_OBJECT TargetDevice)
HRESULT None windowscodecs.IWICPalette_InitializeFromPalette_Proxy(_In_ IWICPalette *THIS_PTR,_In_ IWICPalette *pIMILPalette)
HRESULT None wmpmediasharing.put_computerHomeMediaSharingAllowedState(VARIANT_BOOL sharingAllowed None)
UINT None gdi32.GetEnhMetaFileBits(_In_ HENHMETAFILE hemf,_In_ UINT cbBuffer,_Out_ LPBYTE lpbBuffer)
ULONG None tdh.TdhGetWppProperty(_In_ TDH_HANDLE Handle,_In_ PEVENT_RECORD EventRecord,_In_ PWSTR PropertyName,_Inout_ PULONG BufferSize,_Out_ PBYTE Buffer)
ULONG WINAPI tdh.TdhFormatProperty(_In_ PTRACE_EVENT_INFO EventInfo,_In_opt_ PEVENT_MAP_INFO MapInfo,_In_ ULONG PointerSize,_In_ USHORT PropertyInType,_In_ USHORT PropertyOutType,_In_ USHORT PropertyLength,_In_ USHORT UserDataLength,_In_ PBYTE UserData,_Inout_ PULONG BufferSize,_Out_opt_ PWCHAR Buffer,_Out_ PUSHORT UserDataConsumed)
HRESULT None None.GetObjectInformation([out] PSI_OBJECT_INFO pObjectInfo)
HRESULT None oleaut32.VarCmp(_In_ LPVARIANT pvarLeft,_In_ LPVARIANT pvarRight,_In_ LCID lcid,_In_ ULONG dwFlags)
VOID None None.IoSetShareAccess(_In_ ACCESS_MASK DesiredAccess,_In_ ULONG DesiredShareAccess,_Inout_ PFILE_OBJECT FileObject,_Out_ PSHARE_ACCESS ShareAccess)
BOOL WINAPI dbghelp.SymEnumSourceFileTokens(_In_ HANDLE hProcess,_In_ ULONG64 Base,_In_ PENUMSOURCEFILETOKENSCALLBACK Callback)
UINT WINAPI kernel32.LocalSize(_In_ HLOCAL hMem)
DWORD WINAPI advapi32.RemoveUsersFromEncryptedFile(_In_ LPCWSTR lpFileName,_In_ PENCRYPTION_CERTIFICATE_HASH_LIST pHashes)
HMODULE WINAPI kernel32.GetModuleHandle(_In_opt_ LPCTSTR lpModuleName)
HMODULE WINAPI kernel32.GetModuleHandleW(_In_opt_ LPCTSTR lpModuleName)
HMODULE WINAPI kernel32.GetModuleHandleA(_In_opt_ LPCTSTR lpModuleName)
EVT_HANDLE WINAPI wevtapi.EvtOpenSession(_In_ EVT_LOGIN_CLASS LoginClass,_In_ PVOID Login,_In_ DWORD Timeout,_In_ DWORD Flags)
HRESULT None None.GetClientSite([out] IOleClientSite **ppClientSite)
NTSTATUS None advapi32.LsaLookupNames2(_In_ LSA_HANDLE PolicyHandle,_In_ ULONG Flags,_In_ ULONG Count,_In_ PLSA_UNICODE_STRING Names,_Out_ PLSA_REFERENCED_DOMAIN_LIST *ReferencedDomains,_Out_ PLSA_TRANSLATED_SID2 *Sids)
NTSTATUS None None.ZwGetNotificationResourceManager(_In_ HANDLE ResourceManagerHandle,_Out_ PTRANSACTION_NOTIFICATION TransactionNotification,_In_ ULONG NotificationLength,_In_ PLARGE_INTEGER Timeout,_Out_opt_ PULONG ReturnLength,_In_ ULONG Asynchronous,_In_opt_ ULONG_PTR AsynchronousContext)
LPITEMIDLIST None None.PidlBrowse(HWND hwnd None,int nCSIDL None,LPSTR pszDisplayName None)
uint32 None ddpwmi.Update([in] string Volume[],[out] MSFT_DedupVolumeStatus DedupVolumeStatus[])
WPARAM None None.MAKEWPARAM(WORD wLow None,WORD wHigh None)
BOOL WINAPI wevtapi.EvtGetObjectArrayProperty(_In_ EVT_OBJECT_ARRAY_PROPERTY_HANDLE ObjectArray,_In_ DWORD PropertyId,_In_ DWORD ArrayIndex,_In_ DWORD Flags,_In_ DWORD PropertyValueBufferSize,_In_ PEVT_VARIANT PropertyValueBuffer,_Out_ PDWORD PropertyValueBufferUsed)
BOOL None None.SetForm(_In_ HANDLE hPrinter,_In_ LPTSTR pFormName,_In_ DWORD Level,_In_ LPTSTR pForm)
BOOL None None.SetFormW(_In_ HANDLE hPrinter,_In_ LPTSTR pFormName,_In_ DWORD Level,_In_ LPTSTR pForm)
BOOL None None.SetFormA(_In_ HANDLE hPrinter,_In_ LPTSTR pFormName,_In_ DWORD Level,_In_ LPTSTR pForm)
public void None.Arrange(Rect finalRect None)
HRESULT None certadm.CertSrvBackupGetDatabaseNames(_In_ HCSBC hbc,_Out_ WCHAR **ppwszzAttachmentInformation,_Out_ DWORD *pcbSize)
HRESULT None certadm.CertSrvBackupGetDatabaseNamesW(_In_ HCSBC hbc,_Out_ WCHAR **ppwszzAttachmentInformation,_Out_ DWORD *pcbSize)
BOOL WINAPI kernel32.GetMailslotInfo(_In_ HANDLE hMailslot,_Out_opt_ LPDWORD lpMaxMessageSize,_Out_opt_ LPDWORD lpNextSize,_Out_opt_ LPDWORD lpMessageCount,_Out_opt_ LPDWORD lpReadTimeout)
VOID WINAPI kernel32.CloseThreadpoolCleanupGroupMembers(_Inout_ PTP_CLEANUP_GROUP ptpcg,_In_ BOOL fCancelPendingCallbacks,_Inout_opt_ PVOID pvCleanupContext)
BOOL WINAPI kernel32.FlushViewOfFile(_In_ LPCVOID lpBaseAddress,_In_ SIZE_T dwNumberOfBytesToFlush)
void None None.SetImageInformation(string imageInformation None)
protected void None.OnGiveFeedback(GiveFeedbackEventArgs e None)
HRESULT None None.GetPrepareInfoSize(ULONG * pcbPrepInfo)
HRESULT None None.EnumAdvise([out] IEnumSTATDATA **ppenumAdvise)
PIO_STACK_LOCATION None None.IoGetCurrentIrpStackLocation(_In_ PIRP Irp)
BOOL WINAPI None.ExitWindows(DWORD dwReserved None,UINT uReserved None)
HRESULT None None.GetSegmentFromState(IDirectMusicSegmentState* pSegState None,IDirectMusicSegment8** ppSeg None)
uint32 None smiscsitargetprov.OnlineDevice([in] boolean Online)
UINT None msi.MsiGetProductProperty(_In_ MSIHANDLE hProduct,_In_ LPCTSTR szProperty,_Out_ LPTSTR lpValueBuf,_Inout_ DWORD *pcchValueBuf)
UINT None msi.MsiGetProductPropertyW(_In_ MSIHANDLE hProduct,_In_ LPCTSTR szProperty,_Out_ LPTSTR lpValueBuf,_Inout_ DWORD *pcchValueBuf)
UINT None msi.MsiGetProductPropertyA(_In_ MSIHANDLE hProduct,_In_ LPCTSTR szProperty,_Out_ LPTSTR lpValueBuf,_Inout_ DWORD *pcchValueBuf)
INSTALLSTATE None msi.MsiQueryFeatureState(_In_ LPCTSTR szProduct,_In_ LPCTSTR szFeature)
INSTALLSTATE None msi.MsiQueryFeatureStateW(_In_ LPCTSTR szProduct,_In_ LPCTSTR szFeature)
INSTALLSTATE None msi.MsiQueryFeatureStateA(_In_ LPCTSTR szProduct,_In_ LPCTSTR szFeature)
BOOL WINAPI wecapi.EcClose(_In_ EC_HANDLE Object)
HRESULT None shlwapi.StrRetToStr(_Inout_ STRRET *pstr,_In_opt_ PCUITEMID_CHILD pidl,_Out_ LPTSTR *ppszName)
HRESULT None shlwapi.StrRetToStrW(_Inout_ STRRET *pstr,_In_opt_ PCUITEMID_CHILD pidl,_Out_ LPTSTR *ppszName)
HRESULT None shlwapi.StrRetToStrA(_Inout_ STRRET *pstr,_In_opt_ PCUITEMID_CHILD pidl,_Out_ LPTSTR *ppszName)
VOID None None.KeInitializeMutex(_Out_ PRKMUTEX Mutex,_In_ ULONG Level)
NET_API_STATUS None netapi32.NetUserGetInfo(_In_ LPCWSTR servername,_In_ LPCWSTR username,_In_ DWORD level,_Out_ LPBYTE *bufptr)
uint32 None cimwin32.SetAccessSecurityDescriptor([in] Win32_SecurityDescriptor Descriptor)
HRESULT WINAPI ondemandconnroutehelper.OnDemandGetRoutingHint(_In_ PCWSTR DestinationHostName,_Out_ DWORD *pInterfaceIndex)
HRESULT None None.GetContextId([out] GUID *pGuid)
HRESULT None ole32.OleInitialize(_In_ LPVOID pvReserved)
DWORD WINAPI credui.CredUIConfirmCredentials(_In_ PCTSTR pszTargetName,_In_ BOOL bConfirm)
DWORD WINAPI credui.CredUIConfirmCredentialsW(_In_ PCTSTR pszTargetName,_In_ BOOL bConfirm)
DWORD WINAPI credui.CredUIConfirmCredentialsA(_In_ PCTSTR pszTargetName,_In_ BOOL bConfirm)
NTSTATUS WINAPI netapi32.NetEnumerateServiceAccounts(_In_opt_ LPWSTR ServerName,_In_ DWORD Flags,_Out_ DWORD *AccountsCount,_Out_ PZPWSTR *Accounts)
HRESULT None None.MyFunction([in] short count)
protected void None.OnPreviewStylusDown(StylusDownEventArgs e None)
BOOL WINAPI wevtapi.EvtGetQueryInfo(_In_ EVT_HANDLE QueryOrSubscription,_In_ EVT_QUERY_PROPERTY_ID PropertyId,_In_ DWORD PropertyValueBufferSize,_In_ PEVT_VARIANT PropertyValueBuffer,_Out_ PDWORD PropertyValueBufferUsed)
HRESULT None None.GetContentStream([out None None,retval] IStream **stream)
BOOL None gdi32.PaintRgn(_In_ HDC hdc,_In_ HRGN hrgn)
HRESULT WINAPI ondemandconnroutehelper.OnDemandUnregisterNotification(_In_ HANDLE RegistrationHandle)
BOOL WINAPI user32.SetProcessDefaultLayout(_In_ DWORD dwDefaultLayout)
HENHMETAFILE None gdi32.CloseEnhMetaFile(_In_ HDC hdc)
NET_API_STATUS None netapi32.NetDfsGetStdContainerSecurity(_In_ LPWSTR MachineName,_In_ SECURITY_INFORMATION SecurityInformation,_Out_ PSECURITY_DESCRIPTOR *ppSecurityDescriptor,_Out_ LPDWORD lpcbSecurityDescriptor)
BOOL WINAPI advapi32.CheckTokenMembership(_In_opt_ HANDLE TokenHandle,_In_ PSID SidToCheck,_Out_ PBOOL IsMember)
DWORD None kernel32.SetTapeParameters(_In_ HANDLE hDevice,_In_ DWORD dwOperation,_In_ LPVOID lpTapeInformation)
BOOL WINAPI kernel32.SetCommState(_In_ HANDLE hFile,_In_ LPDCB lpDCB)
HRESULT None wmpmediasharing.get_Authorization([out] WindowsMediaLibrarySharingDeviceAuthorizationStatus *authorization)
BOOL WINAPI kernel32.Module32Next(_In_ HANDLE hSnapshot,_Out_ LPMODULEENTRY32 lpme)
BOOL WINAPI kernel32.Module32NextW(_In_ HANDLE hSnapshot,_Out_ LPMODULEENTRY32 lpme)
BOOL WINAPI kernel32.Module32Next(_In_ HANDLE hSnapshot,_Out_ LPMODULEENTRY32 lpme)
BOOL WINAPI kernel32.EnumProcesses(_Out_ DWORD *pProcessIds,_In_ DWORD cb,_Out_ DWORD *pBytesReturned)
VOID None None.FltFreeCallbackData(_In_ PFLT_CALLBACK_DATA CallbackData)
LONG WINAPI advapi32.RegOpenUserClassesRoot(_In_ HANDLE hToken,_Reserved_ DWORD dwOptions,_In_ REGSAM samDesired,_Out_ PHKEY phkResult)
BOOL WINAPI kernel32.DuplicateHandle(_In_ HANDLE hSourceProcessHandle,_In_ HANDLE hSourceHandle,_In_ HANDLE hTargetProcessHandle,_Out_ LPHANDLE lpTargetHandle,_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ DWORD dwOptions)
HRESULT None None.StringCchCopy(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc)
HRESULT None None.StringCchCopyW(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc)
HRESULT None None.StringCchCopyA(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc)
HRESULT None None.get_doctype(IXMLDOMDocumentType **documentType None)
HRESULT WINAPI wofutil.WofWimSuspendEntry(_In_ PCWSTR VolumeName,_In_ LARGE_INTEGER DataSourceId)
HBRUSH None gdi32.CreatePatternBrush(_In_ HBITMAP hbmp)
HRESULT CALLBACK None.ComPlusCompleteCbbSetup(_In_ IUnknown *pUnk,_In_ HANDLE hSetupLogFile)
BOOL None kernel32.EnumCalendarInfoExEx(_In_ CALINFO_ENUMPROCEXEX pCalInfoEnumProcExEx,_In_opt_ LPCWSTR lpLocaleName,_In_ CALID Calendar,_In_opt_ LPCWSTR lpReserved,_In_ CALTYPE CalType,_In_ LPARAM lParam)
NTSTATUS None None.ZwQuerySecurityObject(_In_ HANDLE Handle,_In_ SECURITY_INFORMATION SecurityInformation,_Out_ PSECURITY_DESCRIPTOR SecurityDescriptor,_In_ ULONG Length,_Out_ PULONG LengthNeeded)
protected void None.OnGotMouseCapture(MouseEventArgs e None)
HRESULT STDMETHODCALLTYPE ole32.CStdAsyncStubBuffer_Connect(_In_ IRpcStubBuffer *pthis,_In_ IUnknown *pUnkServer)
RPC_STATUS RPC_ENTRY rpcrt4.RpcGetAuthorizationContextForClient(_In_opt_ RPC_BINDING_HANDLE ClientBinding,_In_ BOOL ImpersonateOnReturn,_In_ PVOID Reserved1,_In_opt_ PLARGE_INTEGER pExpirationTime,_In_ LUID Reserved2,_In_ DWORD Reserved3,_In_ PVOID Reserved4,_Out_ PVOID *pAuthzClientContext)
HRESULT WINAPI iscsidsc.RefreshIsnsServer(_In_ PTCHAR Address)
HRESULT WINAPI iscsidsc.RefreshIsnsServerW(_In_ PTCHAR Address)
HRESULT WINAPI iscsidsc.RefreshIsnsServerA(_In_ PTCHAR Address)
HRESULT None None.getSchema(BSTR namespaceURI None,ISchema** schema None)
NTSTATUS None None.IoRegisterPlugPlayNotification(_In_ IO_NOTIFICATION_EVENT_CATEGORY EventCategory,_In_ ULONG EventCategoryFlags,_In_opt_ PVOID EventCategoryData,_In_ PDRIVER_OBJECT DriverObject,_In_ PDRIVER_NOTIFICATION_CALLBACK_ROUTINE CallbackRoutine,_In_opt_ PVOID Context,_Out_ PVOID *NotificationEntry)
BOOL WINAPI wevtapi.EvtGetChannelConfigProperty(_In_ EVT_HANDLE ChannelConfig,_In_ EVT_CHANNEL_CONFIG_PROPERTY_ID PropertyId,_In_ DWORD Flags,_In_ DWORD PropertyValueBufferSize,_In_ PEVT_VARIANT PropertyValueBuffer,_Out_ PDWORD PropertyValueBufferUsed)
public Enlistment None.EnlistDurable(Guid resourceManagerIdentifier None,IEnlistmentNotification enlistmentNotification None,EnlistmentOptions enlistmentOptions None)
BOOL CALLBACK None.PropEnumProcEx(_In_ HWND hwnd,_In_ LPTSTR lpszString,_In_ HANDLE hData,_In_ ULONG_PTR dwData)
BOOL CALLBACK None.PropEnumProcExW(_In_ HWND hwnd,_In_ LPTSTR lpszString,_In_ HANDLE hData,_In_ ULONG_PTR dwData)
BOOL CALLBACK None.PropEnumProcExA(_In_ HWND hwnd,_In_ LPTSTR lpszString,_In_ HANDLE hData,_In_ ULONG_PTR dwData)
HRESULT None None.SetOutput(IUnknown * pOutput)
EVT_HANDLE WINAPI wevtapi.EvtQuery(_In_ EVT_HANDLE Session,_In_ LPCWSTR Path,_In_ LPCWSTR Query,_In_ DWORD Flags)
BOOL WINAPI user32.IsDialogMessage(_In_ HWND hDlg,_In_ LPMSG lpMsg)
BOOL WINAPI user32.IsDialogMessageW(_In_ HWND hDlg,_In_ LPMSG lpMsg)
BOOL WINAPI user32.IsDialogMessageA(_In_ HWND hDlg,_In_ LPMSG lpMsg)
BOOL WINAPI advapi32.AccessCheckByTypeResultListAndAuditAlarm(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ LPCTSTR ObjectTypeName,_In_opt_ LPCTSTR ObjectName,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_opt_ PSID PrincipalSelfSid,_In_ DWORD DesiredAccess,_In_ AUDIT_EVENT_TYPE AuditType,_In_ DWORD Flags,_Inout_opt_ POBJECT_TYPE_LIST ObjectTypeList,_In_ DWORD ObjectTypeListLength,_In_ PGENERIC_MAPPING GenericMapping,_In_ BOOL ObjectCreation,_Out_ LPDWORD GrantedAccess,_Out_ LPDWORD AccessStatusList,_Out_ LPBOOL pfGenerateOnClose)
BOOL WINAPI advapi32.AccessCheckByTypeResultListAndAuditAlarmW(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ LPCTSTR ObjectTypeName,_In_opt_ LPCTSTR ObjectName,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_opt_ PSID PrincipalSelfSid,_In_ DWORD DesiredAccess,_In_ AUDIT_EVENT_TYPE AuditType,_In_ DWORD Flags,_Inout_opt_ POBJECT_TYPE_LIST ObjectTypeList,_In_ DWORD ObjectTypeListLength,_In_ PGENERIC_MAPPING GenericMapping,_In_ BOOL ObjectCreation,_Out_ LPDWORD GrantedAccess,_Out_ LPDWORD AccessStatusList,_Out_ LPBOOL pfGenerateOnClose)
BOOL WINAPI advapi32.AccessCheckByTypeResultListAndAuditAlarmA(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ LPCTSTR ObjectTypeName,_In_opt_ LPCTSTR ObjectName,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_opt_ PSID PrincipalSelfSid,_In_ DWORD DesiredAccess,_In_ AUDIT_EVENT_TYPE AuditType,_In_ DWORD Flags,_Inout_opt_ POBJECT_TYPE_LIST ObjectTypeList,_In_ DWORD ObjectTypeListLength,_In_ PGENERIC_MAPPING GenericMapping,_In_ BOOL ObjectCreation,_Out_ LPDWORD GrantedAccess,_Out_ LPDWORD AccessStatusList,_Out_ LPBOOL pfGenerateOnClose)
HRESULT WINAPI dismapi.DismDisableFeature(_In_ DismSession Session,_In_ PCWSTR FeatureName,_In_opt_ PCWSTR PackageName,_In_ BOOL RemovePayload,_In_opt_ HANDLE CancelEvent,_In_opt_ DISM_PROGRESS_CALLBACK Progress,_In_opt_ PVOID UserData)
BOOL WINAPI dbghelp.EnumDirTree(_In_opt_ HANDLE hProcess,_In_ PCTSTR RootPath,_In_ PCTSTR InputPathName,_Out_opt_ PTSTR OutputPathBuffer,_In_opt_ PENUMDIRTREE_CALLBACK Callback,_In_opt_ PVOID CallbackData)
BOOL WINAPI dbghelp.EnumDirTreeW(_In_opt_ HANDLE hProcess,_In_ PCTSTR RootPath,_In_ PCTSTR InputPathName,_Out_opt_ PTSTR OutputPathBuffer,_In_opt_ PENUMDIRTREE_CALLBACK Callback,_In_opt_ PVOID CallbackData)
BOOL WINAPI dbghelp.EnumDirTree(_In_opt_ HANDLE hProcess,_In_ PCTSTR RootPath,_In_ PCTSTR InputPathName,_Out_opt_ PTSTR OutputPathBuffer,_In_opt_ PENUMDIRTREE_CALLBACK Callback,_In_opt_ PVOID CallbackData)
HRESULT None ole32.CoRevokeInitializeSpy(_In_ ULARGE_INTEGER uliCookie)
BOOL WINAPI advapi32.GetAclInformation(_In_ PACL pAcl,_Out_ LPVOID pAclInformation,_In_ DWORD nAclInformationLength,_In_ ACL_INFORMATION_CLASS dwAclInformationClass)
HRESULT None shell32.SHSetTemporaryPropertyForItem(_In_ IShellItem *psi,_In_ REFPROPERTYKEY propkey,_In_ REFPROPVARIANT propvar)
BOOLEAN WINAPI advapi32.AuditSetSecurity(_In_ SECURITY_INFORMATION SecurityInformation,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor)
DWORD WINAPI kernel32.GetModuleFileName(_In_opt_ HMODULE hModule,_Out_ LPTSTR lpFilename,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetModuleFileNameW(_In_opt_ HMODULE hModule,_Out_ LPTSTR lpFilename,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetModuleFileNameA(_In_opt_ HMODULE hModule,_Out_ LPTSTR lpFilename,_In_ DWORD nSize)
LPVOID WINAPI kernel32.VirtualAllocEx(_In_ HANDLE hProcess,_In_opt_ LPVOID lpAddress,_In_ SIZE_T dwSize,_In_ DWORD flAllocationType,_In_ DWORD flProtect)
BOOL None gdi32.DeleteEnhMetaFile(_In_ HENHMETAFILE hemf)
BOOL None gdi32.DeleteEnhMetaFileW(_In_ HENHMETAFILE hemf)
HRESULT None ole32.CreateBindCtx(_In_ DWORD reserved,_Out_ LPBC *ppbc)
BOOL WINAPI user32.SetProcessWindowStation(_In_ HWINSTA hWinSta)
UINT None nddeapi.NDdeTrustedShareEnum(_In_ LPTSTR lpszServer,_In_ UINT nLevel,_Out_ LPBYTE lpBuffer,_In_ DWORD cBufSize,_Out_ LPDWORD lpnEntriesRead,_Out_ LPDWORD lpcbTotalAvailable)
UINT None nddeapi.NDdeTrustedShareEnumW(_In_ LPTSTR lpszServer,_In_ UINT nLevel,_Out_ LPBYTE lpBuffer,_In_ DWORD cBufSize,_Out_ LPDWORD lpnEntriesRead,_Out_ LPDWORD lpcbTotalAvailable)
UINT None nddeapi.NDdeTrustedShareEnumA(_In_ LPTSTR lpszServer,_In_ UINT nLevel,_Out_ LPBYTE lpBuffer,_In_ DWORD cBufSize,_Out_ LPDWORD lpnEntriesRead,_Out_ LPDWORD lpcbTotalAvailable)
BOOL None dxva2.SaveCurrentSettings(_In_ HANDLE hMonitor)
UINT None shell32.SHReplaceFromPropSheetExtArray(_In_ HPSXA hpsxa,UINT uPageID None,_In_ LPFNADDPROPSHEETPAGE lpfnReplaceWith,LPARAM lParam None)
HRESULT WDSBPAPI wdsbp.WdsBpInitialize(_In_ BYTE bPacketType,_Out_ HANDLE *phHandle)
HANDLE WINAPI kernel32.OpenProcess(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ DWORD dwProcessId)
BOOL None nddeapi.NDdeIsValidShareName(_In_ LPTSTR shareName)
BOOL None nddeapi.NDdeIsValidShareNameW(_In_ LPTSTR shareName)
BOOL None nddeapi.NDdeIsValidShareNameA(_In_ LPTSTR shareName)
uint32 None ddpwmi.Disable([in] string Volume[],[in] boolean DataAccess,[out] MSFT_DedupVolume DedupVolume[])
LPARAM WINAPI user32.SetMessageExtraInfo(_In_ LPARAM lParam)
BOOL WINAPI kernel32.GetCommProperties(_In_ HANDLE hFile,_Out_ LPCOMMPROP lpCommProp)
HRESULT None prntvpt.ConvertDevModeToPrintTicketThunk2(_In_ HPTPROVIDER hProvider,_In_ BYTE *pDevmode,_In_ ULONG cbSize,_In_ DWORD scope,_Out_ BYTE **ppPrintTicket,_Out_ INT *pcbPrintTicketLength)
HRESULT None dskquota.GetQuotaThreshold([out] PLONGLONG pllThreshold)
WORD None None.LOWORD(DWORD dwValue None)
uint32 None smiscsitargetprov.GetSupportedStripeLengthRange([out] uint16 MinimumStripeLength,[out] uint16 MaximumStripeLength,[out] uint32 StripeLengthDivisor)
NTSTATUS None None.FltUntagFile(_In_ PFLT_INSTANCE InitiatingInstance,_In_ PFILE_OBJECT FileObject,_In_ ULONG FileTag,_In_opt_ GUID *Guid)
public None None.KeyboardHook(int targetProcessID None,KeyEventHandler keyDown None)
HRESULT None windowscodecs.IWICBitmapSource_CopyPalette_Proxy(_In_ IWICBitmapSource *THIS_PTR,_In_ IWICPalette *pIPalette)
BOOL None dxva2.DestroyPhysicalMonitors(_In_ DWORD dwPhysicalMonitorArraySize,_In_ LPPHYSICAL_MONITOR pPhysicalMonitorArray)
public boolean None.Match(Object obj None)
HRESULT None uxtheme.GetBufferedPaintTargetRect(HPAINTBUFFER hBufferedPaint None,_Out_ RECT *prc)
BOOL WINAPI kernel32.CreatePipe(_Out_ PHANDLE hReadPipe,_Out_ PHANDLE hWritePipe,_In_opt_ LPSECURITY_ATTRIBUTES lpPipeAttributes,_In_ DWORD nSize)
ULONG None sechost.StopTrace(_In_ TRACEHANDLE SessionHandle,_In_ LPCTSTR SessionName,_Out_ PEVENT_TRACE_PROPERTIES Properties)
ULONG None sechost.StopTraceW(_In_ TRACEHANDLE SessionHandle,_In_ LPCTSTR SessionName,_Out_ PEVENT_TRACE_PROPERTIES Properties)
ULONG None sechost.StopTraceA(_In_ TRACEHANDLE SessionHandle,_In_ LPCTSTR SessionName,_Out_ PEVENT_TRACE_PROPERTIES Properties)
HRESULT None None.get_NameResolver([out] IAzNameResolver **ppNameResolver)
protected void None.OnStylusButtonDown(StylusButtonEventArgs e None)
BOOL None spoolss.ReadPrinter(_In_ HANDLE hPrinter,_Out_ LPVOID pBuf,_In_ DWORD cbBuf,_Out_ LPDWORD pNoBytesRead)
BOOL None None.SetJob(_In_ HANDLE hPrinter,_In_ DWORD JobId,_In_ DWORD Level,_In_ LPBYTE pJob,_In_ DWORD Command)
BOOL None None.SetJobW(_In_ HANDLE hPrinter,_In_ DWORD JobId,_In_ DWORD Level,_In_ LPBYTE pJob,_In_ DWORD Command)
BOOL None None.SetJobA(_In_ HANDLE hPrinter,_In_ DWORD JobId,_In_ DWORD Level,_In_ LPBYTE pJob,_In_ DWORD Command)
BOOL None None.ResetPrinter(_In_ HANDLE hPrinter,_In_ LPPRINTER_DEFAULTS pDefault)
BOOL None None.ResetPrinterW(_In_ HANDLE hPrinter,_In_ LPPRINTER_DEFAULTS pDefault)
BOOL None None.ResetPrinterA(_In_ HANDLE hPrinter,_In_ LPPRINTER_DEFAULTS pDefault)
DWORD None None.EnumPrinterData(_In_ HANDLE hPrinter,_In_ DWORD dwIndex,_Out_ LPTSTR pValueName,_In_ DWORD cbValueName,_Out_ LPDWORD pcbValueName,_Out_ LPDWORD pType,_Out_ LPBYTE pData,_In_ DWORD cbData,_Out_ LPDWORD pcbData)
DWORD None None.EnumPrinterDataW(_In_ HANDLE hPrinter,_In_ DWORD dwIndex,_Out_ LPTSTR pValueName,_In_ DWORD cbValueName,_Out_ LPDWORD pcbValueName,_Out_ LPDWORD pType,_Out_ LPBYTE pData,_In_ DWORD cbData,_Out_ LPDWORD pcbData)
DWORD None None.EnumPrinterDataA(_In_ HANDLE hPrinter,_In_ DWORD dwIndex,_Out_ LPTSTR pValueName,_In_ DWORD cbValueName,_Out_ LPDWORD pcbValueName,_Out_ LPDWORD pType,_Out_ LPBYTE pData,_In_ DWORD cbData,_Out_ LPDWORD pcbData)
HANDLE None None.CommitSpoolData(_In_ HANDLE hPrinter,_In_ HANDLE hSpoolFile,DWORD cbCommit None)
BOOL None None.FlushPrinter(_In_ HANDLE hPrinter,_In_ LPVOID pBuf,_In_ DWORD cbBuf,_Out_ LPDWORD pcWritten,_In_ DWORD cSleep)
HRESULT None msdrm.DRMRegisterProtectedWindow(_In_ DRMENVHANDLE hEnv,_In_ HWND hwnd)
HRESULT None ole32.OleCreateFromData(_In_ LPDATAOBJECT pSrcDataObj,_In_ REFIID riid,_In_ DWORD renderopt,_In_ LPFORMATETC pFormatEtc,_In_ LPOLECLIENTSITE pClientSite,_In_ LPSTORAGE pStg,_Out_ LPVOID *ppvObj)
HRESULT None msdrm.DRMCheckSecurity(_In_ DRMENVHANDLE hEnv,_In_ UINT cLevel)
HRESULT None msdrm.DRMGetSignedIssuanceLicense(_In_ DRMENVHANDLE hEnv,_In_ DRMPUBHANDLE hIssuanceLicense,_In_ UINT uFlags,_In_ BYTE *pbSymKey,_In_ UINT cbSymKey,_In_ PWSTR wszSymKeyType,_In_ PWSTR wszClientLicensorCertificate,_In_ DRMCALLBACK pfnCallback,_In_ PWSTR wszURL,_In_ VOID *pvContext)
HRESULT None None.ResolveTargetUriToPart(IOpcRelationship * relativeUri,IOpcPartUri **resolvedUri None)
VOID None comctl32.InitMUILanguage(LANGID uiLang None)
DWORD WINAPI kernel32.GetFullPathNameTransacted(_In_ LPCTSTR lpFileName,_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer,_Out_ LPTSTR *lpFilePart,_In_ HANDLE hTransaction)
DWORD WINAPI kernel32.GetFullPathNameTransactedW(_In_ LPCTSTR lpFileName,_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer,_Out_ LPTSTR *lpFilePart,_In_ HANDLE hTransaction)
DWORD WINAPI kernel32.GetFullPathNameTransactedA(_In_ LPCTSTR lpFileName,_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer,_Out_ LPTSTR *lpFilePart,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.GetQueuedCompletionStatus(_In_ HANDLE CompletionPort,_Out_ LPDWORD lpNumberOfBytes,_Out_ PULONG_PTR lpCompletionKey,_Out_ LPOVERLAPPED *lpOverlapped,_In_ DWORD dwMilliseconds)
VOID WDSCLIAPI None.PFN_WdsCliTraceFunction(_In_ LPCWSTR pwszFormat,_In_ va_list Params)
HFILE WINAPI kernel32.OpenFile(_In_ LPCSTR lpFileName,_Out_ LPOFSTRUCT lpReOpenBuff,_In_ UINT uStyle)
HRESULT None None.EnumPeers([out] IEnumBitsPeers **ppEnum)
HRESULT None oleaut32.VarImp(_In_ LPVARIANT pvarLeft,_In_ LPVARIANT pvarRight,_Out_ LPVARIANT pvarResult)
HANDLE WINAPI kernel32.CreateNamedPipe(_In_ LPCTSTR lpName,_In_ DWORD dwOpenMode,_In_ DWORD dwPipeMode,_In_ DWORD nMaxInstances,_In_ DWORD nOutBufferSize,_In_ DWORD nInBufferSize,_In_ DWORD nDefaultTimeOut,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes)
HANDLE WINAPI kernel32.CreateNamedPipeW(_In_ LPCTSTR lpName,_In_ DWORD dwOpenMode,_In_ DWORD dwPipeMode,_In_ DWORD nMaxInstances,_In_ DWORD nOutBufferSize,_In_ DWORD nInBufferSize,_In_ DWORD nDefaultTimeOut,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes)
HANDLE WINAPI kernel32.CreateNamedPipeA(_In_ LPCTSTR lpName,_In_ DWORD dwOpenMode,_In_ DWORD dwPipeMode,_In_ DWORD nMaxInstances,_In_ DWORD nOutBufferSize,_In_ DWORD nInBufferSize,_In_ DWORD nDefaultTimeOut,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes)
BOOL WINAPI user32.UnregisterDeviceNotification(_In_ HDEVNOTIFY Handle)
HRESULT None oleaut32.VarSub(_In_ LPVARIANT pvarLeft,_In_ LPVARIANT pvarRight,_Out_ LPVARIANT pvarResult)
MMRESULT None winmm.timeGetSystemTime(LPMMTIME pmmt None,UINT cbmmt None)
uint32 None vdswmi.Defrag([in] boolean Force,[out] object DefragAnalysis)
NTSTATUS None None.FsRtlOplockFsctrl(_In_ POPLOCK Oplock,_In_ PIRP Irp,_In_ ULONG OpenCount)
HANDLE WINAPI kernel32.CreatePrivateNamespace(_In_opt_ LPSECURITY_ATTRIBUTES lpPrivateNamespaceAttributes,_In_ LPVOID lpBoundaryDescriptor,_In_ LPCTSTR lpAliasPrefix)
HANDLE WINAPI kernel32.CreatePrivateNamespaceW(_In_opt_ LPSECURITY_ATTRIBUTES lpPrivateNamespaceAttributes,_In_ LPVOID lpBoundaryDescriptor,_In_ LPCTSTR lpAliasPrefix)
HANDLE WINAPI kernel32.CreatePrivateNamespaceA(_In_opt_ LPSECURITY_ATTRIBUTES lpPrivateNamespaceAttributes,_In_ LPVOID lpBoundaryDescriptor,_In_ LPCTSTR lpAliasPrefix)
BOOL None kernel32.GetNumaAvailableMemoryNodeEx(_In_ USHORT Node,_Out_ PULONGLONG AvailableBytes)
HRESULT None None.IsSecurityEnabled([out] VARIANT_BOOL *pfIsEnabled)
LONG WINAPI storprop.CdromEnableDigitalPlayback(_In_ HDEVINFO DevInfo,_In_ PSP_DEVINFO_DATA DevInfoData,_In_ BOOLEAN ForceUnknown)
HRESULT None None.SetEchoEffect(IDirectMusicPerformance8 *pPerformance None,IDirectMusicAudioPath* p3DAudioPath None,IDirectSoundBuffer8* pDSBuffer None)
NET_API_STATUS None netapi32.NetEnumerateComputerNames(_In_opt_ LPCWSTR Server,_In_ NET_COMPUTER_NAME_TYPE NameType,_In_ ULONG Reserved,_Out_ PDWORD EntryCount,_Out_ LPWSTR **ComputerNames)
HRESULT None azroles.get_MembersName([out] VARIANT *pvarProp)
NTSTATUS None None.FltObjectReference(_Inout_ PVOID FltObject)
UINT WINAPI kernel32.ResetWriteWatch(_In_ LPVOID lpBaseAddress,_In_ SIZE_T dwRegionSize)
HRESULT None None.GetPortableDevice([out] IPortableDevice **ppIPortableDevice)
uint32 None cimwin32.GetSecurityDescriptor([out] Win32_SecurityDescriptor Descriptor)
HRESULT None spoolss.GetPrinterDriverPackagePath(_In_ LPCTSTR pszServer,_In_ LPCTSTR pszEnvironment,_In_ LPCTSTR pszLanguage,_In_ LPCTSTR pszPackageID,_Inout_ LPTSTR pszDriverPackageCab,_In_ DWORD cchDriverPackageCab,_Out_ LPDWORD pcchRequiredSize)
HRESULT None spoolss.GetPrinterDriverPackagePathW(_In_ LPCTSTR pszServer,_In_ LPCTSTR pszEnvironment,_In_ LPCTSTR pszLanguage,_In_ LPCTSTR pszPackageID,_Inout_ LPTSTR pszDriverPackageCab,_In_ DWORD cchDriverPackageCab,_Out_ LPDWORD pcchRequiredSize)
HRESULT None spoolss.GetPrinterDriverPackagePathA(_In_ LPCTSTR pszServer,_In_ LPCTSTR pszEnvironment,_In_ LPCTSTR pszLanguage,_In_ LPCTSTR pszPackageID,_Inout_ LPTSTR pszDriverPackageCab,_In_ DWORD cchDriverPackageCab,_Out_ LPDWORD pcchRequiredSize)
HDDEDATA CALLBACK None.DdeCallback(_In_ UINT uType,_In_ UINT uFmt,_In_ HCONV hconv,_In_ HSZ hsz1,_In_ HSZ hsz2,_In_ HDDEDATA hdata,_In_ ULONG_PTR dwData1,_In_ ULONG_PTR dwData2)
VOID None None.ExReleaseResourceForThreadLite(_Inout_ PERESOURCE Resource,_In_ ERESOURCE_THREAD ResourceThreadId)
LPVOID None ole32.CoTaskMemAlloc(_In_ SIZE_T cb)
VOID None None.IoMarkIrpPending(_Inout_ PIRP Irp)
VOID None None.ObDereferenceObjectDeferDeleteWithTag(_In_ PVOID Object,_In_ ULONG Tag)
NET_API_STATUS None netapi32.NetUnjoinDomain(_In_ LPCWSTR lpServer,_In_ LPCWSTR lpAccount,_In_ LPCWSTR lpPassword,_In_ DWORD fUnjoinOptions)
NTSTATUS None None.FltDetachVolume(_Inout_ PFLT_FILTER Filter,_Inout_ PFLT_VOLUME Volume,_In_opt_ PCUNICODE_STRING InstanceName)
BOOL WINAPI kernel32.DeleteSynchronizationBarrier(_Inout_ LPSYNCHRONIZATION_BARRIER lpBarrier)
HDESK WINAPI user32.OpenDesktop(_In_ LPTSTR lpszDesktop,_In_ DWORD dwFlags,_In_ BOOL fInherit,_In_ ACCESS_MASK dwDesiredAccess)
HDESK WINAPI user32.OpenDesktopW(_In_ LPTSTR lpszDesktop,_In_ DWORD dwFlags,_In_ BOOL fInherit,_In_ ACCESS_MASK dwDesiredAccess)
HDESK WINAPI user32.OpenDesktopA(_In_ LPTSTR lpszDesktop,_In_ DWORD dwFlags,_In_ BOOL fInherit,_In_ ACCESS_MASK dwDesiredAccess)
NET_API_STATUS None netapi32.NetDfsRemoveFtRoot(_In_ LPWSTR ServerName,_In_ LPWSTR RootShare,_In_ LPWSTR FtDfsName,_Reserved_ DWORD Flags)
HRESULT None propsys.PSUnregisterPropertySchema(_In_ PCWSTR pszPath)
HRESULT None azroles.get_Applications([out] IAzApplications **ppAppCollection)
HDDEDATA WINAPI user32.DdeAddData(_In_ HDDEDATA hData,_In_ LPBYTE pSrc,_In_ DWORD cb,_In_ DWORD cbOff)
HRESULT None None.DisableNCRendering(HWND hwnd None)
NET_API_STATUS None netapi32.NetDfsSetFtContainerSecurity(_In_ LPWSTR DomainName,_In_ SECURITY_INFORMATION SecurityInformation,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor)
NTSTATUS None advapi32.LsaAddAccountRights(_In_ LSA_HANDLE PolicyHandle,_In_ PSID AccountSid,_In_ PLSA_UNICODE_STRING UserRights,_In_ ULONG CountOfRights)
HRESULT None None.StringCchCatEx(_Inout_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCchCatExW(_Inout_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCchCatExA(_Inout_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
void None None.Rollback(SinglePhaseEnlistment singlePhaseEnlistment None)
LONG WINAPI advapi32.RegEnableReflectionKey(_In_ HKEY hBase)
BOOL None sisbkup.SisFreeRestoreStructure(_In_ PVOID sisRestoreStructure)
BOOL WINAPI kernel32.GetDefaultCommConfig(_In_ LPCTSTR lpszName,_Out_ LPCOMMCONFIG lpCC,_Inout_ LPDWORD lpdwSize)
BOOL WINAPI kernel32.GetDefaultCommConfigW(_In_ LPCTSTR lpszName,_Out_ LPCOMMCONFIG lpCC,_Inout_ LPDWORD lpdwSize)
BOOL WINAPI kernel32.GetDefaultCommConfigA(_In_ LPCTSTR lpszName,_Out_ LPCOMMCONFIG lpCC,_Inout_ LPDWORD lpdwSize)
uint32 None cscobj.Encrypt([in] boolean Encrypt,[in] uint32 Flags)
HRESULT None shell32.Resolve(HWND hwnd None,DWORD fFlags None)
BOOL None kernel32.SetThreadPreferredUILanguages(_In_ DWORD dwFlags,_In_opt_ PCZZWSTR pwszLanguagesBuffer,_Out_opt_ PULONG pulNumLanguages)
HRESULT None qmgrprxy.GetProtocol([out] LPWSTR *ppProtocol)
HRESULT WINAPI None.DismGetImageInfo(_In_ PCWSTR ImageFilePath,_Out_ DismImageInfo **ImageInfo,_Out_ UINT *Count)
HRESULT None None.get_nodeTypedValue(VARIANT *typedValue None)
HRESULT None None.GetEnumerator([out None None,retval] IOpcPartEnumerator **partEnumerator)
HRESULT None bitsprx2.GetReplyProgress([out] BG_JOB_REPLY_PROGRESS *pProgress)
LSTATUS None shlwapi.SHRegOpenUSKey(_In_ LPCTSTR pszPath,_In_ REGSAM samDesired,_In_opt_ HUSKEY hRelativeUSKey,_Out_ PHUSKEY phNewUSKey,_In_ BOOL fIgnoreHKCU)
LSTATUS None shlwapi.SHRegOpenUSKeyW(_In_ LPCTSTR pszPath,_In_ REGSAM samDesired,_In_opt_ HUSKEY hRelativeUSKey,_Out_ PHUSKEY phNewUSKey,_In_ BOOL fIgnoreHKCU)
LSTATUS None shlwapi.SHRegOpenUSKeyA(_In_ LPCTSTR pszPath,_In_ REGSAM samDesired,_In_opt_ HUSKEY hRelativeUSKey,_Out_ PHUSKEY phNewUSKey,_In_ BOOL fIgnoreHKCU)
HRESULT WINOLEAPI combase.CoWaitForMultipleObjects(_In_ DWORD dwFlags,_In_ DWORD dwTimeout,_In_ ULONG cHandles,_In_ LPHANDLE pHandles,_Out_ LPDWORD lpdwIndex)
BOOL WINAPI None.Configure(HEXPERTKEY hExpertKey None,PEXPERTCONFIG* ppConfig None,PEXPERTSTARTUPINFO pExpertStartupInfo None,DWORD StartupFlags None,HWND hWnd None)
void None None.DismProgressCallback(_In_ UINT Current,_In_ UINT Total,_In_ PVOID UserData)
LPARAM WINAPI user32.PackDDElParam(_In_ UINT msg,_In_ UINT_PTR uiLo,_In_ UINT_PTR uiHi)
HRESULT None wmpmediasharing.get_Properties([out] IWindowsMediaLibrarySharingDeviceProperties **deviceProperties)
uint32 None cimwin32.Terminate([in] uint32 Reason)
HRESULT None None.URLBeingIndexed([out None None,retval] LPWSTR *pszUrl)
void None None.Prepare(PreparingEnlistment preparingEnlistment None)
NTSTATUS None None.ZwSetSecurityObject(_In_ HANDLE Handle,_In_ SECURITY_INFORMATION SecurityInformation,_In_ PSECURITY_DESCRIPTOR SecurityDescriptor)
NTSTATUS None None.IoRegisterShutdownNotification(_In_ PDEVICE_OBJECT DeviceObject)
HRESULT None None.ChangeACLtoAllowUserRW(WCHAR* strDir None)
NTSTATUS WINAPI ncrypt.NCryptQueryProtectionDescriptorName(_In_ LPCWSTR pwszName,_Out_ LPWSTR pwszDescriptorString,_Inout_ SIZE_T *pcDescriptorString,DWORD dwFlags None)
HRESULT WINAPI iscsidsc.SendScsiInquiry(_In_ PISCSI_UNIQUE_SESSION_ID *UniqueSessionId,_In_ ULONGLONG Lun,_In_ UCHAR EvpdCmddt,_In_ UCHAR PageCode,_Out_ PUCHAR *ScsiStatus,_Inout_ PULONG *ReponseSize,_Out_ PUCHAR ReponseBuffer,_Inout_ PULONG *SenseSize,_Out_ PUCHAR SenseBuffer)
PIDLIST_RELATIVE None shell32.ILClone(_In_ PCUIDLIST_RELATIVE pidl)
DWORD None None.NPEnumResource(_In_ HANDLE hEnum,_Inout_ LPDWORD lpcCount,_Out_ LPVOID lpBuffer,_Inout_ LPDWORD lpBufferSize)
BOOL WINAPI user32.SetProp(_In_ HWND hWnd,_In_ LPCTSTR lpString,_In_opt_ HANDLE hData)
BOOL WINAPI user32.SetPropW(_In_ HWND hWnd,_In_ LPCTSTR lpString,_In_opt_ HANDLE hData)
BOOL WINAPI user32.SetPropA(_In_ HWND hWnd,_In_ LPCTSTR lpString,_In_opt_ HANDLE hData)
DWORD WINAPI dbghelp.UnDecorateSymbolName(_In_ PCTSTR DecoratedName,_Out_ PTSTR UnDecoratedName,_In_ DWORD UndecoratedLength,_In_ DWORD Flags)
DWORD WINAPI dbghelp.UnDecorateSymbolNameW(_In_ PCTSTR DecoratedName,_Out_ PTSTR UnDecoratedName,_In_ DWORD UndecoratedLength,_In_ DWORD Flags)
DWORD WINAPI dbghelp.UnDecorateSymbolName(_In_ PCTSTR DecoratedName,_Out_ PTSTR UnDecoratedName,_In_ DWORD UndecoratedLength,_In_ DWORD Flags)
HRESULT None None.GetCertificateEnumerator([out None None,retval] IOpcCertificateEnumerator **certificateEnumerator)
BOOLEAN None None.SeAccessCheck(_In_ PSECURITY_DESCRIPTOR SecurityDescriptor,_In_ PSECURITY_SUBJECT_CONTEXT SubjectSecurityContext,_In_ BOOLEAN SubjectContextLocked,_In_ ACCESS_MASK DesiredAccess,_In_ ACCESS_MASK PreviouslyGrantedAccess,_Out_ PPRIVILEGE_SET *Privileges,_In_ PGENERIC_MAPPING GenericMapping,_In_ KPROCESSOR_MODE AccessMode,_Out_ PACCESS_MASK GrantedAccess,_Out_ PNTSTATUS AccessStatus)
EVT_HANDLE WINAPI wevtapi.EvtOpenChannelEnum(_In_ EVT_HANDLE Session,_In_ DWORD Flags)
HRESULT None None.WriteStartDocument(XmlStandalone standalone None)
HRESULT None None.HRESULT_FROM_NT(DWORD x None)
void None None.Rollback(Enlistment enlistment None)
HRESULT None None.add(BSTR namespaceURI None,VARIANT var None)
BOOL WINAPI kernel32.SetCommConfig(_In_ HANDLE hCommDev,_In_ LPCOMMCONFIG lpCC,_In_ DWORD dwSize)
BOOL None kernel32.EnumSystemCodePages(_In_ CODEPAGE_ENUMPROC lpCodePageEnumProc,_In_ DWORD dwFlags)
BOOL None kernel32.EnumSystemCodePagesW(_In_ CODEPAGE_ENUMPROC lpCodePageEnumProc,_In_ DWORD dwFlags)
BOOL None kernel32.EnumSystemCodePagesA(_In_ CODEPAGE_ENUMPROC lpCodePageEnumProc,_In_ DWORD dwFlags)
BOOL WINAPI dbghelp.SymAddSourceStream(_In_ HANDLE hProcess,_In_ ULONG64 Base,_In_opt_ PCTSTR StreamFile,_In_opt_ PBYTE Buffer,_In_ size_t Size)
BOOL WINAPI dbghelp.SymAddSourceStreamW(_In_ HANDLE hProcess,_In_ ULONG64 Base,_In_opt_ PCTSTR StreamFile,_In_opt_ PBYTE Buffer,_In_ size_t Size)
BOOL WINAPI dbghelp.SymAddSourceStream(_In_ HANDLE hProcess,_In_ ULONG64 Base,_In_opt_ PCTSTR StreamFile,_In_opt_ PBYTE Buffer,_In_ size_t Size)
STDMETHODIMP None None.CheckFileSystem(PCWSTR pcwszDrive None)
HRESULT None ole32.CoGetStdMarshalEx(_In_ LPUNKNOWN pUnkOuter,_In_ DWORD smexflags,_Out_ LPUNKNOWN *ppUnkInner)
SECURITY_STATUS SEC_Entry secur32.AcceptSecurityContext(_In_opt_ PCredHandle phCredential,_Inout_ PCtxtHandle phContext,_In_opt_ PSecBufferDesc pInput,_In_ ULONG fContextReq,_In_ ULONG TargetDataRep,_Inout_opt_ PCtxtHandle phNewContext,_Inout_opt_ PSecBufferDesc pOutput,_Out_ PULONG pfContextAttr,_Out_opt_ PTimeStamp ptsTimeStamp)
protected GeometryHitTestResult None.HitTestCore(GeometryHitTestParameters hitTestParameters None)
protected void None.OnKeyDown(KeyEventArgs e None)
HANDLE WINAPI ktmw32.OpenEnlistment(_In_ DWORD dwDesiredAccess,_In_ ResourceManagerHandle None,_In_ LPGUID EnlistmentId)
BOOL WINAPI kernel32.GetNamedPipeClientSessionId(_In_ HANDLE Pipe,_Out_ PULONG ClientSessionId)
UINT None nddeapi.NDdeGetTrustedShare(_In_ LPTSTR lpszServer,_In_ LPTSTR lpszShareName,_Out_ LPDWORD lpdwTrustOptions,_Out_ LPDWORD lpdwShareModId0,_Out_ LPDWORD lpdwShareModId1)
UINT None nddeapi.NDdeGetTrustedShareW(_In_ LPTSTR lpszServer,_In_ LPTSTR lpszShareName,_Out_ LPDWORD lpdwTrustOptions,_Out_ LPDWORD lpdwShareModId0,_Out_ LPDWORD lpdwShareModId1)
UINT None nddeapi.NDdeGetTrustedShareA(_In_ LPTSTR lpszServer,_In_ LPTSTR lpszShareName,_Out_ LPDWORD lpdwTrustOptions,_Out_ LPDWORD lpdwShareModId0,_Out_ LPDWORD lpdwShareModId1)
LPVOID WINAPI kernel32.HeapAlloc(_In_ HANDLE hHeap,_In_ DWORD dwFlags,_In_ SIZE_T dwBytes)
function None None.onScaleEvent(vScale None None)
HRESULT None None.get_AuthoringClientBinary([out None None,retval] BSTR *designModeDllPath)
INT_PTR WINAPI user32.DialogBoxIndirectParam(_In_opt_ HINSTANCE hInstance,_In_ LPCDLGTEMPLATE hDialogTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc,_In_ LPARAM dwInitParam)
INT_PTR WINAPI user32.DialogBoxIndirectParamW(_In_opt_ HINSTANCE hInstance,_In_ LPCDLGTEMPLATE hDialogTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc,_In_ LPARAM dwInitParam)
INT_PTR WINAPI user32.DialogBoxIndirectParamA(_In_opt_ HINSTANCE hInstance,_In_ LPCDLGTEMPLATE hDialogTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc,_In_ LPARAM dwInitParam)
BOOL None kernel32.SetThreadLocale(_In_ LCID Locale)
HRESULT None prntvpt.MergeAndValidatePrintTicketThunk2(_In_ HPTPROVIDER hProvider,_In_ BYTE *pBasePrintTicket,_In_ INT basePrintTicketLength,_In_opt_ BYTE *pDeltaPrintTicket,_In_ INT deltaPrintTicketLength,_In_ DWORD scope,_Out_ BYTE **ppValidatedPrintTicket,_Out_ INT *pValidatedPrintTicketLength,_Out_opt_ BSTR *pbstrErrorMessage)
HRESULT WINAPI dismapi.DismInitialize(_In_ DismLogLevel LogLevel,_In_opt_ PCWSTR LogFilePath,_In_opt_ PCWSTR ScratchDirectory)
HRESULT WINAPI dismapi.DismApplyUnattend(_In_ DismSession Session,_In_ PCWSTR UnattendFile,_In_ BOOL SingleSession)
HRESULT STDAPICALLTYPE efswrt.ProtectFileToEnterpriseIdentity(_In_ PCWSTR fileOrFolderPath,_In_ PCWSTR identity)
BOOL WINAPI crypt32.CryptProtectMemory(_Inout_ LPVOID pData,_In_ DWORD cbData,_In_ DWORD dwFlags)
public boolean None.Match(Object obj None)
uint32 None netpeerdistcim.Add_BCDataCacheExtensionByPercentage([in] uint32 Percentage,[in] string Path,[in] boolean PassThru,[in] boolean Force,[out] string cmdletOutput)
typedef None None.NTSTATUS(*PFS_FILTER_CALLBACK None None)
ULONG WINAPI advapi32.QueryTraceProcessingHandle(_In_ TRACEHANDLE ProcessingHandle,_In_ ETW_PROCESS_HANDLE_INFO_TYPE InformationClass,_In_opt_ PVOID InBuffer,_In_ ULONG InBufferSize,_Out_opt_ PVOID OutBuffer,_In_ ULONG OutBufferSize,_Out_ PULONG ReturnLength)
LPARAM WINAPI None.MAKELPARAM(WORD wLow None,WORD wHigh None)
VOID WINAPI None.EventCallback(_In_ PEVENT_TRACE pEvent)
BOOL None None.AddPrinterConnection2(_In_ HWND hWnd,_In_ LPCTSTR pszName,DWORD dwLevel None,_In_ PVOID pConnectionInfo)
BOOL None None.AddPrinterConnection2W(_In_ HWND hWnd,_In_ LPCTSTR pszName,DWORD dwLevel None,_In_ PVOID pConnectionInfo)
HRESULT None None.GetRelationshipSelectorEnumerator([out None None,retval] IOpcRelationshipSelectorEnumerator **selectorEnumerator)
HRESULT None ole32.OleTranslateAccelerator(_In_ LPOLEINPLACEFRAME lpFrame,_In_ LPOLEINPLACEFRAMEINFO lpFrameInfo,_In_ LPMSG lpmsg)
HRESULT WDSCLIAPI wdsclientapi.WdsCliGetImagePath(_In_ HANDLE hIfh,_Out_ PWSTR *ppwszValue)
BOOL None comctl32.GetTextExtentPoint32Wrap(_In_ HDC hdc,_In_ LPCTSTR lpString,_In_ UINT cbCount,_Out_ LPSIZE lpSize)
DWORD WINAPI advapi32.GetLengthSid(_In_ PSID pSid)
BOOL WINAPI ktmw32.GetEnlistmentId(_In_ HANDLE EnlistmentHandle,_Out_ LPGUID EnlistmentId)
LONG WINAPI advapi32.RegQueryMultipleValues(_In_ HKEY hKey,_Out_ PVALENT val_list,_In_ DWORD num_vals,_Out_opt_ LPTSTR lpValueBuf,_Inout_opt_ LPDWORD ldwTotsize)
LONG WINAPI advapi32.RegQueryMultipleValuesW(_In_ HKEY hKey,_Out_ PVALENT val_list,_In_ DWORD num_vals,_Out_opt_ LPTSTR lpValueBuf,_Inout_opt_ LPDWORD ldwTotsize)
LONG WINAPI advapi32.RegQueryMultipleValuesA(_In_ HKEY hKey,_Out_ PVALENT val_list,_In_ DWORD num_vals,_Out_opt_ LPTSTR lpValueBuf,_Inout_opt_ LPDWORD ldwTotsize)
HRESULT None vssapi.CreateVssExpressWriter(_Out_ IVssExpressWriter **ppWriter)
BOOL WINAPI kernel32.DeleteTimerQueueTimer(_In_opt_ HANDLE TimerQueue,_In_ HANDLE Timer,_In_opt_ HANDLE CompletionEvent)
BOOL WINAPI kernel32.EnumProcessModules(_In_ HANDLE hProcess,_Out_ HMODULE *lphModule,_In_ DWORD cb,_Out_ LPDWORD lpcbNeeded)
HWND WINAPI user32.CreateDialogIndirect(_In_opt_ HINSTANCE hInstance,_In_ LPCDLGTEMPLATE lpTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc)
HWND WINAPI user32.CreateDialogIndirectW(_In_opt_ HINSTANCE hInstance,_In_ LPCDLGTEMPLATE lpTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc)
HWND WINAPI user32.CreateDialogIndirectA(_In_opt_ HINSTANCE hInstance,_In_ LPCDLGTEMPLATE lpTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc)
BOOL None ole32.OleIsRunning(_In_ LPOLEOBJECT pObject)
HRESULT None oleaut32.VarFix(_In_ LPVARIANT pvarIn,_Out_ LPVARIANT pvarResult)
BOOL None dxva2.GetPhysicalMonitorsFromHMONITOR(_In_ HMONITOR hMonitor,_In_ DWORD dwPhysicalMonitorArraySize,_Out_ LPPHYSICAL_MONITOR pPhysicalMonitorArray)
BOOL WINAPI advapi32.GetUserName(_Out_ LPTSTR lpBuffer,_Inout_ LPDWORD lpnSize)
BOOL WINAPI advapi32.GetUserNameW(_Out_ LPTSTR lpBuffer,_Inout_ LPDWORD lpnSize)
BOOL WINAPI advapi32.GetUserNameA(_Out_ LPTSTR lpBuffer,_Inout_ LPDWORD lpnSize)
VOID WINAPI advapi32.QuerySecurityAccessMask(_In_ SECURITY_INFORMATION SecurityInformation,_Out_ LPDWORD DesiredAccess)
BOOL WINAPI ktmw32.GetTransactionInformation(_In_ HANDLE TransactionHandle,_Out_opt_ PDWORD Outcome,_Out_opt_ PDWORD IsolationLevel,_Out_opt_ PDWORD IsolationFlags,_Out_opt_ PDWORD Timeout,_In_ DWORD BufferLength,_Out_opt_ LPWSTR Description)
DWORD PXEAPI wdspxe.PxeSendReply(_In_ HANDLE hClientRequest,_In_ PVOID pPacket,_In_ ULONG uPacketLen,_In_ PXE_ADDRESS *pAddress)
HRESULT None None.GetConfigurationFlags([out] DWORD *pFlags)
HRESULT WINAPI mssign32.SignerTimeStampEx(_Reserved_ DWORD dwFlags,_In_ SIGNER_SUBJECT_INFO *pSubjectInfo,_In_ LPCWSTR pwszHttpTimeStamp,_In_ PCRYPT_ATTRIBUTES psRequest,_In_ LPVOID pSipData,_Out_ SIGNER_CONTEXT **ppSignerContext)
public DispatcherOperation None.BeginInvoke(DispatcherPriority priority None,Delegate method None)
LONG WINAPI advapi32.RegQueryInfoKey(_In_ HKEY hKey,_Out_opt_ LPTSTR lpClass,_Inout_opt_ LPDWORD lpcClass,_Reserved_ LPDWORD lpReserved,_Out_opt_ LPDWORD lpcSubKeys,_Out_opt_ LPDWORD lpcMaxSubKeyLen,_Out_opt_ LPDWORD lpcMaxClassLen,_Out_opt_ LPDWORD lpcValues,_Out_opt_ LPDWORD lpcMaxValueNameLen,_Out_opt_ LPDWORD lpcMaxValueLen,_Out_opt_ LPDWORD lpcbSecurityDescriptor,_Out_opt_ PFILETIME lpftLastWriteTime)
LONG WINAPI advapi32.RegQueryInfoKeyW(_In_ HKEY hKey,_Out_opt_ LPTSTR lpClass,_Inout_opt_ LPDWORD lpcClass,_Reserved_ LPDWORD lpReserved,_Out_opt_ LPDWORD lpcSubKeys,_Out_opt_ LPDWORD lpcMaxSubKeyLen,_Out_opt_ LPDWORD lpcMaxClassLen,_Out_opt_ LPDWORD lpcValues,_Out_opt_ LPDWORD lpcMaxValueNameLen,_Out_opt_ LPDWORD lpcMaxValueLen,_Out_opt_ LPDWORD lpcbSecurityDescriptor,_Out_opt_ PFILETIME lpftLastWriteTime)
LONG WINAPI advapi32.RegQueryInfoKeyA(_In_ HKEY hKey,_Out_opt_ LPTSTR lpClass,_Inout_opt_ LPDWORD lpcClass,_Reserved_ LPDWORD lpReserved,_Out_opt_ LPDWORD lpcSubKeys,_Out_opt_ LPDWORD lpcMaxSubKeyLen,_Out_opt_ LPDWORD lpcMaxClassLen,_Out_opt_ LPDWORD lpcValues,_Out_opt_ LPDWORD lpcMaxValueNameLen,_Out_opt_ LPDWORD lpcMaxValueLen,_Out_opt_ LPDWORD lpcbSecurityDescriptor,_Out_opt_ PFILETIME lpftLastWriteTime)
BOOL WINAPI user32.IsImmersiveProcess(_In_ HANDLE hProcess)
VOID None None.FltGetContexts(_In_ PCFLT_RELATED_OBJECTS FltObjects,_In_ FLT_CONTEXT_TYPE DesiredContexts,_Out_ PFLT_RELATED_CONTEXTS Contexts)
BOOL None gdi32.DeleteObject(_In_ HGDIOBJ hObject)
BOOL None gdi32.DeleteObjectW(_In_ HGDIOBJ hObject)
HRESULT None wmpmediasharing.get_userInternetMediaSharingState([out] VARIANT_BOOL *sharingEnabled)
DWORD WINAPI kernel32.QueryDosDevice(_In_opt_ LPCTSTR lpDeviceName,_Out_ LPTSTR lpTargetPath,_In_ DWORD ucchMax)
DWORD WINAPI kernel32.QueryDosDeviceW(_In_opt_ LPCTSTR lpDeviceName,_Out_ LPTSTR lpTargetPath,_In_ DWORD ucchMax)
DWORD WINAPI kernel32.QueryDosDeviceA(_In_opt_ LPCTSTR lpDeviceName,_Out_ LPTSTR lpTargetPath,_In_ DWORD ucchMax)
BOOL WINAPI user32.ShutdownBlockReasonDestroy(_In_ HWND hWnd)
BOOL None None.CheckCachedAccess(AUTHZ_CLIENT_CONTEXT_HANDLE hClientContext None)
LONG None None.KeReleaseMutex(_Inout_ PRKMUTEX Mutex,_In_ BOOLEAN Wait)
VOID None None.IoInitializeDriverCreateContext(PIO_DRIVER_CREATE_CONTEXT DriverContext None)
BOOL None None.EnumPrinterDrivers(_In_ LPTSTR pName,_In_ LPTSTR pEnvironment,_In_ DWORD Level,_Out_ LPBYTE pDriverInfo,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded,_Out_ LPDWORD pcReturned)
BOOL None None.EnumPrinterDriversW(_In_ LPTSTR pName,_In_ LPTSTR pEnvironment,_In_ DWORD Level,_Out_ LPBYTE pDriverInfo,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded,_Out_ LPDWORD pcReturned)
BOOL None None.EnumPrinterDriversA(_In_ LPTSTR pName,_In_ LPTSTR pEnvironment,_In_ DWORD Level,_Out_ LPBYTE pDriverInfo,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded,_Out_ LPDWORD pcReturned)
HRESULT None None.GetPropertyKey([out] PROPERTYKEY *pkey)
HRESULT None None.GetCount([out None None,retval] UINT32 *count)
uint32 None smiscsitargetprov.QuiesceDevice([in] boolean Quiesce)
ULONG None None.ExIsResourceAcquiredSharedLite(_In_ PERESOURCE Resource)
HRESULT None None.GetActions([out] IEnhancedStorageSiloActions ***pppIEnhancedStorageSiloActions,[out] ULONG *pcEnhancedStorageSiloActions)
HRESULT None None.PreRestore([out] IVssAsync **ppAsync)
HRESULT None mstask.SetNetScheduleAccountInformation(_In_ LPCWSTR pwszServerName,_In_ LPCWSTR pwszAccount,_In_ LPCWSTR pwszPassword)
INSTALLSTATE None msi.MsiUseFeature(_In_ LPCTSTR szProduct,_In_ LPCTSTR szFeature)
INSTALLSTATE None msi.MsiUseFeatureW(_In_ LPCTSTR szProduct,_In_ LPCTSTR szFeature)
INSTALLSTATE None msi.MsiUseFeatureA(_In_ LPCTSTR szProduct,_In_ LPCTSTR szFeature)
no_namespace None None.rename("EOF" None None,"ADOEOF" None None)
NTSTATUS None advapi32.LsaQueryTrustedDomainInfoByName(_In_ LSA_HANDLE PolicyHandle,_In_ PLSA_UNICODE_STRING TrustedDomainName,_In_ TRUSTED_INFORMATION_CLASS InformationClass,_Out_ PVOID *Buffer)
HRESULT None shell32.SHGetDesktopFolder(_Out_ IShellFolder **ppshf)
BOOL WINAPI ktmw32.SinglePhaseReject(_In_ HANDLE EnlistmentHandle,_In_ PLARGE_INTEGER TmVirtualClock)
BOOL WINAPI kernel32.DebugSetProcessKillOnExit(_In_ BOOL KillOnExit)
HRESULT None None.GetRelationshipsPartUri([out None None,retval] IOpcPartUri **relationshipPartUri)
VOID None None.ObDereferenceObjectWithTag(_In_ PVOID Object,_In_ ULONG Tag)
NET_API_STATUS None netapi32.NetUserSetGroups(_In_ LPCWSTR servername,_In_ LPCWSTR username,_In_ DWORD level,_In_ LPBYTE buf,_In_ DWORD num_entries)
PTSTR None shlwapi.StrRChr(_In_ PTSTR pszStart,_In_opt_ PCTSTR pszEnd,TCHAR wMatch None)
PTSTR None shlwapi.StrRChrW(_In_ PTSTR pszStart,_In_opt_ PCTSTR pszEnd,TCHAR wMatch None)
PTSTR None shlwapi.StrRChrA(_In_ PTSTR pszStart,_In_opt_ PCTSTR pszEnd,TCHAR wMatch None)
BOOL WINAPI None.Register(PEXPERTENUMINFO pExpertInfo None)
BYTE None None.MCI_TMSF_SECOND(DWORD dwTMSF None)
HRESULT None pla.get_Xml([out] BSTR *Xml)
HRESULT None None.get_QueryContentProperties([out None None,retval] LPWSTR *ppszContentProperties)
LPITEMIDLIST None None.CreatePIDL(DWORD dwType None,LPCWSTR pwszDisplayName None)
BOOL WINAPI wevtapi.EvtGetEventInfo(_In_ EVT_HANDLE Event,_In_ EVT_EVENT_PROPERTY_ID PropertyId,_In_ DWORD PropertyValueBufferSize,_In_ PEVT_VARIANT PropertyValueBuffer,_Out_ PDWORD PropertyValueBufferUsed)
DWORD None cscapi.OfflineFilesEnable(_In_ BOOL bEnable,_Out_ BOOL *pbRebootRequired)
Image Color None.Matching(ICM None None)
HRESULT None ole32.CreateAntiMoniker(_Out_ LPMONIKER *ppmk)
BOOL None kernel32.GetProcessPreferredUILanguages(_In_ DWORD dwFlags,_Out_ PULONG pulNumLanguages,_Out_opt_ PZZWSTR pwszLanguagesBuffer,_Inout_ PULONG pcchLanguagesBuffer)
HRESULT None qmgrprxy.GetState([out] BG_JOB_STATE *pJobState)
BOOL WINAPI user32.DdeEnableCallback(_In_ DWORD idInst,_In_ HCONV hConv,_In_ UINT wCmd)
HRESULT None None.GetSignatureEnumerator([out None None,retval] IOpcDigitalSignatureEnumerator **signatureEnumerator)
NTSTATUS None advapi32.LsaEnumerateAccountRights(_In_ LSA_HANDLE PolicyHandle,_In_ PSID AccountSid,_Out_ PLSA_UNICODE_STRING *UserRights,_Out_ PULONG CountOfRights)
HRESULT None None.StringCchVPrintf(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszFormat,_In_ va_list argList)
HRESULT None None.StringCchVPrintfW(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszFormat,_In_ va_list argList)
HRESULT None None.StringCchVPrintfA(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszFormat,_In_ va_list argList)
BOOL None advapi32.LogonUser(_In_ LPTSTR lpszUsername,_In_opt_ LPTSTR lpszDomain,_In_opt_ LPTSTR lpszPassword,_In_ DWORD dwLogonType,_In_ DWORD dwLogonProvider,_Out_ PHANDLE phToken)
BOOL None advapi32.LogonUserW(_In_ LPTSTR lpszUsername,_In_opt_ LPTSTR lpszDomain,_In_opt_ LPTSTR lpszPassword,_In_ DWORD dwLogonType,_In_ DWORD dwLogonProvider,_Out_ PHANDLE phToken)
BOOL None advapi32.LogonUserA(_In_ LPTSTR lpszUsername,_In_opt_ LPTSTR lpszDomain,_In_opt_ LPTSTR lpszPassword,_In_ DWORD dwLogonType,_In_ DWORD dwLogonProvider,_Out_ PHANDLE phToken)
VOID None None.FltPerformSynchronousIo(_Inout_ PFLT_CALLBACK_DATA CallbackData)
BOOL WINAPI advapi32.SetSecurityDescriptorSacl(_Inout_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_ BOOL bSaclPresent,_In_opt_ PACL pSacl,_In_ BOOL bSaclDefaulted)
ULONG WINAPI ntdll.RtlNtStatusToDosErrorNoTeb(_In_ NTSTATUS Status)
NTSTATUS None None.ZwQueryVolumeInformationFile(_In_ HANDLE FileHandle,_Out_ PIO_STATUS_BLOCK IoStatusBlock,_Out_ PVOID FsInformation,_In_ ULONG Length,_In_ FS_INFORMATION_CLASS FsInformationClass)
UINT WINAPI kernel32.GetProfileInt(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ INT nDefault)
UINT WINAPI kernel32.GetProfileIntW(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ INT nDefault)
UINT WINAPI kernel32.GetProfileIntA(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ INT nDefault)
uint32 None cimwin32.SetPriority([in] sint32 Priority)
HRESULT None None.get_ownerTemplate(IXSLTemplate** ppTemplate None)
HRESULT None userenv.RSoPFileAccessCheck(_In_ LPWSTR pszFileName,_In_ PRSOPTOKEN pRsopToken,_In_ DWORD dwDesiredAccessMask,_Out_ LPDWORD pdwGrantedAccessMask,_Out_ LPBOOL pbAccessStatus)
HRESULT None None.Abort(BOID * pboidReason,BOOL fRetaining None,BOOL fAsync None)
HRESULT None None.SetCurrentReportInterval(ISensor* pSensor None,ULONG ulNewInterval None)
HRESULT None None.ondataavailable(void None None)
LPARAM WINAPI user32.ReuseDDElParam(_In_ LPARAM lParam,_In_ UINT msgIn,_In_ UINT msgOut,_In_ UINT_PTR uiLo,_In_ UINT_PTR uiHi)
VOID None None.FreeHelperAttributes(_In_ HELPER_ATTRIBUTE *pInfo,ULONG HelperAttributeCount None,BOOL bFreePointer None)
HRESULT None None.GetOutputCount([out] DWORD *pcOutputs)
HRESULT None None.PlaySegmentEx(IUnknown* pSource None,WCHAR *pwzSegmentName None,IUnknown* pTransition None,DWORD dwFlags None,__int64 i64StartTime None,IDirectMusicSegmentState** ppSegmentState None,IUnknown* pFrom None,IUnknown* pAudioPath None)
DWORD WINAPI None.ExpertIndicateStatus(HEXPERTKEY hExpertKey None,EXPERTSTATUSENUMERATION Status None,DWORD SubStatus None,char* sztext None,long PercentDone None)
DWORD None iphlpapi.GetIpAddrTable(_Out_ PMIB_IPADDRTABLE pIpAddrTable,_Inout_ PULONG pdwSize,_In_ BOOL bOrder)
BOOL None shlwapi.AssocIsDangerous(_In_ PCWSTR pszAssoc)
INT None ws2_32.WSAInstallServiceClass(_In_ LPWSASERVICECLASSINFO lpServiceClassInfo)
INT None ws2_32.WSAInstallServiceClassW(_In_ LPWSASERVICECLASSINFO lpServiceClassInfo)
INT None ws2_32.WSAInstallServiceClassA(_In_ LPWSASERVICECLASSINFO lpServiceClassInfo)
UINT None oleaut32.SysStringLen(_In_opt_ BSTR bstr)
HRESULT None dcomp.CreateRotateTransform3D([out] IDCompositionRotateTransform3D **rotateTransform3D)
HRESULT WINAPI dismapi.DismMountImage(_In_ PCWSTR ImageFilePath,_In_ PCWSTR MountPath,_In_ UINT ImageIndex,_In_opt_ PCWSTR ImageName,_In_ DismImageIdentifier ImageIdentifier,_In_ DWORD Flags,_In_opt_ HANDLE CancelEvent,_In_opt_ DISM_PROGRESS_CALLBACK Progress,_In_opt_ PVOID UserData)
BOOL WINAPI txfw32.TxfLogCreateFileReadContext(_In_ LPCWSTR LogPath,_In_ CLFS_LSN BeginningLsn,_In_ CLFS_LSN EndingLSN,_In_ PTXF_ID TxfFileId,_Out_ PVOID *TxfLogContext)
void None None.SinglePhaseCommit(SinglePhaseEnlistment singlePhaseEnlistment None)
HRESULT None azroles.get__NewEnum(LPUNKNOWN *ppEnumPtr None)
RPC_STATUS None rpcrt4.RpcSsContextLockExclusive(_In_ RPC_BINDING_HANDLE ServerBindingHandle,_In_ PVOID UserContext)
PVOID WINAPI kernel32.AddVectoredContinueHandler(_In_ ULONG FirstHandler,_In_ PVECTORED_EXCEPTION_HANDLER VectoredHandler)
inline XMVECTOR None.XMVector2NormalizeRobust(FXMVECTOR V None)
WINAPI None iscsidsc.ReportIscsiTargets(_In_ BOOLEAN ForceUpdate,_Inout_ PULONG BufferSize,_Out_ PTCHAR Buffer)
WINAPI None iscsidsc.ReportIscsiTargetsW(_In_ BOOLEAN ForceUpdate,_Inout_ PULONG BufferSize,_Out_ PTCHAR Buffer)
WINAPI None iscsidsc.ReportIscsiTargetsA(_In_ BOOLEAN ForceUpdate,_Inout_ PULONG BufferSize,_Out_ PTCHAR Buffer)
PIDLIST_ABSOLUTE None shell32.ILCreateFromPath(_In_ PCTSTR pszPath)
PIDLIST_ABSOLUTE None shell32.ILCreateFromPathW(_In_ PCTSTR pszPath)
PIDLIST_ABSOLUTE None shell32.ILCreateFromPathA(_In_ PCTSTR pszPath)
HRESULT None None.selectNodes(BSTR expression None,IXMLDOMNodeList **resultList None)
NTSTATUS None None.ZwReadFile(_In_ HANDLE FileHandle,_In_opt_ HANDLE Event,_In_opt_ PIO_APC_ROUTINE ApcRoutine,_In_opt_ PVOID ApcContext,_Out_ PIO_STATUS_BLOCK IoStatusBlock,_Out_ PVOID Buffer,_In_ ULONG Length,_In_opt_ PLARGE_INTEGER ByteOffset,_In_opt_ PULONG Key)
VOID None None.ObDereferenceObject(_In_ PVOID Object)
PFILE_OBJECT None None.IoCreateStreamFileObjectEx(_In_opt_ PFILE_OBJECT FileObject,_In_opt_ PDEVICE_OBJECT DeviceObject,_Out_opt_ PHANDLE FileHandle)
LONG WINAPI winscard.SCardGetCardTypeProviderName(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCardName,_In_ DWORD dwProviderId,_Out_ LPTSTR szProvider,_Inout_ LPDWORD pcchProvider)
LONG WINAPI winscard.SCardGetCardTypeProviderNameW(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCardName,_In_ DWORD dwProviderId,_Out_ LPTSTR szProvider,_Inout_ LPDWORD pcchProvider)
LONG WINAPI winscard.SCardGetCardTypeProviderNameA(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCardName,_In_ DWORD dwProviderId,_Out_ LPTSTR szProvider,_Inout_ LPDWORD pcchProvider)
HRESULT None None.MyFunc([in None None,optional] VARIANT Param1,[out None None,optional] VARIANT Param2)
HRESULT None ole32.CoLockObjectExternal(_In_ LPUNKNOWN pUnk,_In_ BOOL fLock,_In_ BOOL fLastUnlockReleases)
NTSTATUS None None.ZwCreateKey(_Out_ PHANDLE KeyHandle,_In_ ACCESS_MASK DesiredAccess,_In_ POBJECT_ATTRIBUTES ObjectAttributes,_Reserved_ ULONG TitleIndex,_In_opt_ PUNICODE_STRING Class,_In_ ULONG CreateOptions,_Out_opt_ PULONG Disposition)
BOOL None user32.PhysicalToLogicalPointForPerMonitorDPI(_In_ HWND hwnd,_Inout_ LPPOINT lpPoint)
BOOL WINAPI kernel32.SetVolumeMountPoint(_In_ LPCTSTR lpszVolumeMountPoint,_In_ LPCTSTR lpszVolumeName)
BOOL WINAPI kernel32.SetVolumeMountPointW(_In_ LPCTSTR lpszVolumeMountPoint,_In_ LPCTSTR lpszVolumeName)
BOOL WINAPI kernel32.SetVolumeMountPointA(_In_ LPCTSTR lpszVolumeMountPoint,_In_ LPCTSTR lpszVolumeName)
HRESULT None None.put_SelectedOption([in] IPrintSchemaOption *pOption)
void None None.Rollback(Enlistment enlistment None)
protected void None.OnPreviewLostKeyboardFocus(KeyboardFocusChangedEventArgs e None)
BOOL WINAPI kernel32.HeapWalk(_In_ HANDLE hHeap,_Inout_ LPPROCESS_HEAP_ENTRY lpEntry)
BOOL WINAPI kernel32.AllocateUserPhysicalPages(_In_ HANDLE hProcess,_Inout_ PULONG_PTR NumberOfPages,_Out_ PULONG_PTR UserPfnArray)
WINAPI None kernel32.UnmapViewOfFile2(_In_ HANDLE ProcessHandle,_In_ PVOID BaseAddress,_In_ ULONG UnmapFlags)
HANDLE WINAPI kernel32.CreateFileMappingFromApp(_In_ HANDLE hFile,_In_opt_ PSECURITY_ATTRIBUTES SecurityAttributes,_In_ ULONG PageProtection,_In_ ULONG64 MaximumSize,_In_opt_ PCWSTR Name)
SIZE_T WINAPI kernel32.VirtualQuery(_In_opt_ LPCVOID lpAddress,_Out_ PMEMORY_BASIC_INFORMATION lpBuffer,_In_ SIZE_T dwLength)
HANDLE WINAPI kernel32.HeapCreate(_In_ DWORD flOptions,_In_ SIZE_T dwInitialSize,_In_ SIZE_T dwMaximumSize)
BOOL WINAPI kernel32.RemoveSecureMemoryCacheCallback(_In_ PSECURE_MEMORY_CACHE_CALLBACK pfnCallBack)
LPVOID WINAPI kernel32.GlobalLock(_In_ HGLOBAL hMem)
BOOL WINAPI kernel32.IsBadCodePtr(_In_ FARPROC lpfn)
PVOID WINAPI kernel32.VirtualAllocFromApp(_In_opt_ PVOID BaseAddress,_In_ SIZE_T Size,_In_ ULONG AllocationType,_In_ ULONG Protection)
HANDLE WINAPI kernel32.OpenFileMappingFromApp(_In_ ULONG DesiredAccess,_In_ BOOL InheritHandle,_In_ PCWSTR Name)
BOOL WINAPI kernel32.HeapDestroy(_In_ HANDLE hHeap)
VOID CALLBACK None.PFN_WdsTransportClientSessionStartEx(_In_ HANDLE hSessionKey,_In_ PVOID pCallerData,_In_ PTRANSPORTCLIENT_SESSION_INFO Info)
BOOL WINAPI kernel32.LocalUnlock(_In_ HLOCAL hMem)
HGLOBAL WINAPI kernel32.GlobalReAlloc(_In_ HGLOBAL hMem,_In_ SIZE_T dwBytes,_In_ UINT uFlags)
UINT None nddeapi.NDdeShareEnum(_In_ LPTSTR lpszServer,_In_ UINT nLevel,_Out_ LPBYTE lpBuffer,_In_ DWORD cBufSize,_Out_ LPDWORD lpnEntriesRead,_Out_ LPDWORD lpcbTotalAvailable)
UINT None nddeapi.NDdeShareEnumW(_In_ LPTSTR lpszServer,_In_ UINT nLevel,_Out_ LPBYTE lpBuffer,_In_ DWORD cBufSize,_Out_ LPDWORD lpnEntriesRead,_Out_ LPDWORD lpcbTotalAvailable)
UINT None nddeapi.NDdeShareEnumA(_In_ LPTSTR lpszServer,_In_ UINT nLevel,_Out_ LPBYTE lpBuffer,_In_ DWORD cBufSize,_Out_ LPDWORD lpnEntriesRead,_Out_ LPDWORD lpcbTotalAvailable)
BOOL None shell32.SHInvokePrinterCommand(_In_opt_ HWND hwnd,UINT uAction None,_In_ LPCTSTR lpBuf1,_In_opt_ LPCTSTR lpBuf2,BOOL fModal None)
BOOL None shell32.SHInvokePrinterCommandW(_In_opt_ HWND hwnd,UINT uAction None,_In_ LPCTSTR lpBuf1,_In_opt_ LPCTSTR lpBuf2,BOOL fModal None)
BOOL None shell32.SHInvokePrinterCommandA(_In_opt_ HWND hwnd,UINT uAction None,_In_ LPCTSTR lpBuf1,_In_opt_ LPCTSTR lpBuf2,BOOL fModal None)
HRESULT None None.CollectPartResources([out None None,retval] IXpsOMPartResources **partResources)
BOOL WINAPI kernel32.GetNamedPipeServerProcessId(_In_ HANDLE Pipe,_Out_ PULONG ServerProcessId)
uint32 None smiscsitargetprov.GetSupportedStripeLengths([out] uint16 StripeLengths[])
DWORD WINAPI credui.CredUICmdLinePromptForCredentials(_In_ PCTSTR pszTargetName,_In_ PCtxtHandle Reserved,_In_opt_ DWORD dwAuthError,_Inout_ PTSTR pszUserName,_In_ ULONG ulUserNameMaxChars,_Inout_ PTSTR pszPassword,_In_ ULONG ulPasswordMaxChars,_Inout_ PBOOL pfSave,_In_ DWORD dwFlags)
DWORD WINAPI credui.CredUICmdLinePromptForCredentialsW(_In_ PCTSTR pszTargetName,_In_ PCtxtHandle Reserved,_In_opt_ DWORD dwAuthError,_Inout_ PTSTR pszUserName,_In_ ULONG ulUserNameMaxChars,_Inout_ PTSTR pszPassword,_In_ ULONG ulPasswordMaxChars,_Inout_ PBOOL pfSave,_In_ DWORD dwFlags)
DWORD WINAPI credui.CredUICmdLinePromptForCredentialsA(_In_ PCTSTR pszTargetName,_In_ PCtxtHandle Reserved,_In_opt_ DWORD dwAuthError,_Inout_ PTSTR pszUserName,_In_ ULONG ulUserNameMaxChars,_Inout_ PTSTR pszPassword,_In_ ULONG ulPasswordMaxChars,_Inout_ PBOOL pfSave,_In_ DWORD dwFlags)
public Object None.Invoke(DispatcherPriority priority None,Delegate method None)
HRESULT STDMETHODCALLTYPE None.Stop(LPSTATISTICS lpStats None)
SC_LOCK WINAPI advapi32.LockServiceDatabase(_In_ SC_HANDLE hSCManager)
HRESULT None None.GetUpdateOptions([out] DWORD *pdwUpdateOpt)
HRESULT None None.AutoTransition(IDirectMusicPerformance* pPerformance None,IDirectMusicSegment* pToSeg None,WORD wCommand None,DWORD dwFlags None,IDirectMusicChordMap* pChordMap None,IDirectMusicSegment** ppTransSeg None,IDirectMusicSegmentState** ppToSegState None,IDirectMusicSegmentState** ppTransSegState None)
HRESULT None None.StampPMsg(DMUS_PMSG* pPMSG None)
HRESULT None sensorsapi.ConnectToLogicalSensor(PCWSTR* wszHardwareID None,GUID guidLogicalID None)
DWORD APIENTRY kernel32.EnableThreadProfiling(_In_ HANDLE ThreadHandle,_In_ DWORD Flags,_In_ DWORD64 HardwareCounters,_Out_ HANDLE PerformanceDataHandle)
protected void None.RemoveVisualChild(Visual child None)
HRESULT None windowscodecs.IWICImagingFactory_CreateBitmapFromHBITMAP_Proxy(_In_ IWICImagingFactory *pFactory,_In_ HBITMAP hBitmap,_In_ HPALETTE hPalette,_In_ WICBitmapAlphaChannelOption options,_Out_ IWICBitmap **ppIBitmap)
HRESULT None None.Clone([out] IEnumBitsPeerCacheRecords **ppEnum)
LPVOID WINAPI kernel32.MapViewOfFile(_In_ HANDLE hFileMappingObject,_In_ DWORD dwDesiredAccess,_In_ DWORD dwFileOffsetHigh,_In_ DWORD dwFileOffsetLow,_In_ SIZE_T dwNumberOfBytesToMap)
NTSTATUS None None.FltGetVolumeProperties(_In_ PFLT_VOLUME Volume,_Out_ PFLT_VOLUME_PROPERTIES VolumeProperties,_In_ ULONG Length,_Out_ PULONG LengthReturned)
uint32 None netpeerdistcim.Disable_BC([in] string PolicyStore,[in] boolean Force)
NTSTATUS None None.FltSetVolumeInformation(_In_ PFLT_INSTANCE Instance,_Out_ PIO_STATUS_BLOCK Iosb,_Out_ PVOID FsInformation,_In_ ULONG Length,_In_ FS_INFORMATION_CLASS FsInformationClass)
VOID WINAPI None.EventRecordCallback(_In_ PEVENT_RECORD EventRecord)
BOOL None None.SetPrinter(_In_ HANDLE hPrinter,_In_ DWORD Level,_In_ LPBYTE pPrinter,_In_ DWORD Command)
BOOL None None.SetPrinterW(_In_ HANDLE hPrinter,_In_ DWORD Level,_In_ LPBYTE pPrinter,_In_ DWORD Command)
BOOL None None.SetPrinterA(_In_ HANDLE hPrinter,_In_ DWORD Level,_In_ LPBYTE pPrinter,_In_ DWORD Command)
DWORD WINAPI resutils.ResUtilSetResourceServiceStartParameters(_In_ LPCWSTR pszServiceName,_In_ SC_HANDLE schSCMHandle,_Inout_ LPSC_HANDLE phService,_In_ DWORD dwDesiredAccess,_In_ PLOG_EVENT_ROUTINE pfnLogEvent,_In_ RESOURCE_HANDLE hResourceHandle)
HRESULT None ole32.CoDisconnectObject(_In_ LPUNKNOWN pUnk,_In_ DWORD dwReserved)
BOOL None ktmw32.PrepareEnlistment(_In_ HANDLE EnlistmentHandle,_In_ PLARGE_INTEGER TmVirtualClock)
HRESULT WDSCLIAPI wdsclientapi.WdsCliObtainDriverPackagesEx(_In_ HANDLE hSession,_Out_ PWSTR pwszDriverQuery,_Out_ PWSTR *ppwszServerName,_Out_ PWSTR **pppwszDriverPackages,_Out_ ULONG *pulCount)
VOID WINAPI kernel32.ReleaseSRWLockShared(_Inout_ PSRWLOCK SRWLock)
DWORD WINAPI mstlsapi.TLSKeyPackEnumEnd(_In_ TLS_HANDLE hHandle,_Out_ PDWORD pdwErrCode)
SOCKET None None.WPUModifyIFSHandle(_In_ DWORD dwCatalogEntryId,_In_ SOCKET ProposedHandle,_Out_ LPINT lpErrno)
VOID None None.KeSetSystemAffinityThread(_In_ KAFFINITY Affinity)
HRESULT STDMETHODCALLTYPE None.QueryStations(QUERYTABLE* lpQueryTable None)
HRESULT None cscsvc.GetPathFilter([out] LPWSTR *ppszFilter,[out] OFFLINEFILES_PATHFILTER_MATCH *pMatch)
HRESULT None msdrm.DRMGetUnboundLicenseObject(_In_ DRMQUERYHANDLE hQueryRoot,_In_ PWSTR wszSubObjectType,_In_ UINT iIndex,_Out_ DRMQUERYHANDLE *phSubQuery)
HRESULT None msdrm.DRMGetUnboundLicenseObject(_In_ DRMQUERYHANDLE hQueryRoot,_In_ PWSTR wszSubObjectType,_In_ UINT iIndex,_Out_ DRMQUERYHANDLE *phSubQuery)
WINOLEAPI None ole32.WriteClassStm(_In_ IStream *pStm,_In_ REFCLSID rclsid)
DWORD PXEAPI None.PxeProviderShutdown(_In_ PVOID pContext)
VOID WINAPI advapi32.SetSecurityAccessMask(_In_ SECURITY_INFORMATION SecurityInformation,_Out_ LPDWORD DesiredAccess)
NET_API_STATUS NET_API_FUNCTION netapi32.NetDfsRemoveRootTarget(_In_ LPWSTR pDfsPath,_In_opt_ LPWSTR pTargetPath,_In_ ULONG Flags)
void CALLBACK ws2_32.CompletionROUTINE(IN DWORD dwError,IN DWORD cbTransferred,IN LPWSAOVERLAPPED lpOverlapped,IN DWORD dwFlags)
BOOL WINAPI kernel32.SetProcessWorkingSetSizeEx(_In_ HANDLE hProcess,_In_ SIZE_T dwMinimumWorkingSetSize,_In_ SIZE_T dwMaximumWorkingSetSize,_In_ DWORD Flags)
LRESULT CALLBACK gdi32.WndProc(HWND hWnd None,UINT message None,WPARAM wParam None,LPARAM lParam None)
LRESULT CALLBACK gdi32.CreateFontW(HWND hWnd None,UINT message None,WPARAM wParam None,LPARAM lParam None)
LRESULT CALLBACK gdi32.CreateFontA(HWND hWnd None,UINT message None,WPARAM wParam None,LPARAM lParam None)
BOOL WINAPI user32.AdjustWindowRectExForDpi(_Inout_ LPRECT lpRect,_In_ DWORD dwStyle,_In_ BOOL bMenu,_In_ DWORD dwExStyle,_In_ UINT dpi)
BOOL WINAPI ktmw32.GetCurrentClockTransactionManager(_In_ HANDLE TransactionManagerHandle,_Out_ PLARGE_INTEGER TmVirtualClock)
HRESULT None propsys.PSPropertyKeyFromString(_In_ LPCWSTR pszString,_Out_ PROPERTYKEY *pkey)
VOID None None.IoSetHardErrorOrVerifyDevice(_In_ PIRP Irp,_In_ PDEVICE_OBJECT DeviceObject)
NET_API_STATUS NET_API_FUNCTION netapi32.NetDfsAddRootTarget(_In_ LPWSTR pDfsPath,_In_opt_ LPWSTR pTargetPath,_In_ ULONG MajorVersion,_In_opt_ LPWSTR pComment,_In_ ULONG Flags)
HRESULT None srmsvc.get_Value([out] BSTR *pValue)
BOOL WINAPI advapi32.InitiateSystemShutdown(_In_opt_ LPTSTR lpMachineName,_In_opt_ LPTSTR lpMessage,_In_ DWORD dwTimeout,_In_ BOOL bForceAppsClosed,_In_ BOOL bRebootAfterShutdown)
BOOL WINAPI advapi32.InitiateSystemShutdownW(_In_opt_ LPTSTR lpMachineName,_In_opt_ LPTSTR lpMessage,_In_ DWORD dwTimeout,_In_ BOOL bForceAppsClosed,_In_ BOOL bRebootAfterShutdown)
BOOL WINAPI advapi32.InitiateSystemShutdownA(_In_opt_ LPTSTR lpMachineName,_In_opt_ LPTSTR lpMessage,_In_ DWORD dwTimeout,_In_ BOOL bForceAppsClosed,_In_ BOOL bRebootAfterShutdown)
NTSTATUS NTAPI None.SpLsaModeInitialize(_In_ ULONG LsaVersion,_Out_ PULONG PackageVersion,_Out_ PSECPKG_FUNCTION_TABLE *ppTables,_Out_ PULONG pcTables)
NTSTATUS None None.FltStartFiltering(_In_ PFLT_FILTER Filter)
public void None.AddHandler(RoutedEvent routedEvent None,Delegate handler None,boolean handledEventsToo None)
HRESULT None None.CreatePackageRootUri([out None None,retval] IOpcUri **rootUri)
BOOLEAN None None.ExAcquireResourceSharedLite(_Inout_ PERESOURCE Resource,_In_ BOOLEAN Wait)
DWORD64 WINAPI None.UnsignedMultiply128(_In_ DWORD64 Multiplier,_In_ DWORD64 Multiplicand,_Out_ DWORD64 *HighProduct)
BOOL None None.DeleteMonitor(_In_ LPTSTR pName,_In_ LPTSTR pEnvironment,_In_ LPTSTR pMonitorName)
BOOL None None.DeleteMonitorW(_In_ LPTSTR pName,_In_ LPTSTR pEnvironment,_In_ LPTSTR pMonitorName)
BOOL None None.DeleteMonitorA(_In_ LPTSTR pName,_In_ LPTSTR pEnvironment,_In_ LPTSTR pMonitorName)
BOOL None None.AddSidsToContext(AUTHZ_CLIENT_CONTEXT_HANDLE *phClientContext None)
DWORD CALLBACK None.ProcessGroupPolicy(DWORD dwFlags None,HANDLE hToken None,HKEY hKeyRoot None,PGROUP_POLICY_OBJECT pDeletedGPOList None,PGROUP_POLICY_OBJECT pChangedGPOList None,ASYNCCOMPLETIONHANDLE pHandle None,BOOL *pbAbort None,PFNSTATUSMESSAGECALLBACK pStatusCallback None)
NET_API_STATUS None netapi32.NetWkstaUserEnum(_In_ LPWSTR servername,_In_ DWORD level,_Out_ LPBYTE *bufptr,_In_ DWORD prefmaxlen,_Out_ LPDWORD entriesread,_Out_ LPDWORD totalentries,_Inout_ LPDWORD resumehandle)
HRESULT WINAPI wsdapi.WSDGetConfigurationOption(DWORD dwOption None,_Out_ LPVOID pVoid,DWORD cbOutBuffer None)
HRESULT None fltlib.FilterDetach(_In_ LPCWSTR lpFilterName,_In_ LPCWSTR lpVolumeName,_In_opt_ LPCWSTR lpInstanceName)
HRESULT None None.get_ConnectionString([out None None,retval] LPWSTR *pwszConnectionString)
BOOL None kernel32.IsDBCSLeadByte(_In_ BYTE TestChar)
public boolean None.CanGoToPage(int pageNumber None)
HANDLE None advapi32.OpenEventLog(_In_ LPCTSTR lpUNCServerName,_In_ LPCTSTR lpSourceName)
HANDLE None advapi32.OpenEventLogW(_In_ LPCTSTR lpUNCServerName,_In_ LPCTSTR lpSourceName)
HANDLE None advapi32.OpenEventLogA(_In_ LPCTSTR lpUNCServerName,_In_ LPCTSTR lpSourceName)
BOOL WINAPI api-ms-win-core-enclave-l1-1-0.InitializeEnclave(_In_ HANDLE hProcess,_In_ LPVOID lpAddress,_In_ LPVOID lpEnclaveInformation,_In_ DWORD dwInfoLength,_In_ LPDWORD lpEnclaveError)
VOID None None.IoStartTimer(_In_ PDEVICE_OBJECT DeviceObject)
RPC_STATUS RPC_ENTRY rpcrt4.RpcSmSwapClientAllocFree(RPC_CLIENT_ALLOC *pfnAllocate None,RPC_CLIENT_FREE *pfnFree None,RPC_CLIENT_ALLOC **pfnOldAllocate None,RPC_CLIENT_FREE **pfnOldFree None)
HRESULT None None.StringCchVPrintf_l(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ va_list argList)
HRESULT None None.StringCchVPrintf_lW(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ va_list argList)
HRESULT None None.StringCchVPrintf_lA(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ va_list argList)
BOOLEAN WINAPI advapi32.AuditSetSystemPolicy(_In_ PCAUDIT_POLICY_INFORMATION pAuditPolicy,_In_ ULONG PolicyCount)
HRESULT None None.StringCbCopyNEx(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc,_In_ size_t cbSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCbCopyNExW(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc,_In_ size_t cbSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCbCopyNExA(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc,_In_ size_t cbSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags)
HRSRC WINAPI kernel32.FindResource(_In_opt_ HMODULE hModule,_In_ LPCTSTR lpName,_In_ LPCTSTR lpType)
HRSRC WINAPI kernel32.FindResourceW(_In_opt_ HMODULE hModule,_In_ LPCTSTR lpName,_In_ LPCTSTR lpType)
HRSRC WINAPI kernel32.FindResourceA(_In_opt_ HMODULE hModule,_In_ LPCTSTR lpName,_In_ LPCTSTR lpType)
STDAPI None wsclient.CheckDeveloperLicense(_Out_ FILETIME *pExpiration)
HRESULT None None.get_next(IXMLDOMParseError2 **objErr None)
HRESULT None None.DownloadInstrument(IDirectMusicInstrument* pInstrument None,IDirectMusicDownloadedInstrument** ppDownloadedInstrument None,DMUS_NOTERANGE* pNoteRanges None,DWORD dwNumNoteRanges; None)
HRESULT None azroles.get_UserDnsSamCompat([out] BSTR *pbstrProp)
HRESULT None userenv.RSoPAccessCheckByType(_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_ PSID pPrincipalSelfSid,_In_ PRSOPTOKEN pRsopToken,_In_ DWORD dwDesiredAccessMask,_In_ POBJECT_TYPE_LIST pObjectTypeList,_In_ DWORD ObjectTypeListLength,_In_ PGENERIC_MAPPING pGenericMapping,_In_ PPRIVILEGE_SET pPrivilegeSet,_In_ LPDWORD pdwPrivilegeSetLength,_Out_ LPDWORD pdwGrantedAccessMask,_Out_ LPBOOL pbAccessStatus)
BOOL WINAPI msajapi.AllJoynEventSelect(_In_ HANDLE connectedBusHandle,_In_ HANDLE eventHandle,_In_ DWORD eventTypes)
HRESULT __cdecl mtxdm.GetDispenserManager(_Out_ IDispenserManager **ppIDispenserManager)
NTSTATUS None None.IoWMIAllocateInstanceIds(_In_ GUID *Guid,_In_ ULONG InstanceCount,_Out_ ULONG *FirstInstanceId)
HCONV WINAPI user32.DdeConnect(_In_ DWORD idInst,_In_ HSZ hszService,_In_ HSZ hszTopic,_In_opt_ PCONVCONTEXT pCC)
HRESULT None None.StringCchCopy(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc)
HRESULT None None.StringCchCopyW(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc)
HRESULT None None.StringCchCopyA(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc)
BOOL CALLBACK None.EnumUILanguagesProc(_In_ LPTSTR lpUILanguageString,_In_ LONG_PTR lParam)
BOOL WINAPI user32.DestroyIcon(_In_ HICON hIcon)
HRESULT WINAPI gamemode.HasExpandedResources(_Out_ BOOL *hasExpandedResources)
BOOL WINAPI user32.GetClientRect(_In_ HWND hWnd,_Out_ LPRECT lpRect)
BOOL None kernel32.EnumCalendarInfoEx(_In_ CALINFO_ENUMPROCEX pCalInfoEnumProcEx,_In_ LCID Locale,_In_ CALID Calendar,_In_ CALTYPE CalType)
BOOL None kernel32.EnumCalendarInfoExW(_In_ CALINFO_ENUMPROCEX pCalInfoEnumProcEx,_In_ LCID Locale,_In_ CALID Calendar,_In_ CALTYPE CalType)
BOOL None kernel32.EnumCalendarInfoExA(_In_ CALINFO_ENUMPROCEX pCalInfoEnumProcEx,_In_ LCID Locale,_In_ CALID Calendar,_In_ CALTYPE CalType)
VOID WINAPI kernel32.InitializeConditionVariable(_Out_ PCONDITION_VARIABLE ConditionVariable)
BOOL None wtsapi32.WTSRegisterSessionNotification(_In_ HWND hWnd,_In_ DWORD dwFlags)
public void None.OnEndPrint(PrintDocument document None,PrintEventArgs e None)
HRESULT WINAPI dismapi.DismGetMountedImageInfo(_Out_ DismMountedImageInfo **MountedImageInfo,_Out_ UINT *Count)
HRESULT None None.get_previousSibling(IXMLDOMNode **previousSibling None)
LRESULT CALLBACK None.MainWndProc(HWND hwnd None,UINT uMsg None,WPARAM wParam None,LPARAM lParam None)
DWORD None cscapi.OfflineFilesQueryStatus(_Out_ BOOL *pbActive,_Out_ BOOL *pbEnabled)
LONG WINAPI advapi32.RegNotifyChangeKeyValue(_In_ HKEY hKey,_In_ BOOL bWatchSubtree,_In_ DWORD dwNotifyFilter,_In_opt_ HANDLE hEvent,_In_ BOOL fAsynchronous)
HRESULT None None.GetReplicaKeyMap([out] IReplicaKeyMap **ppReplicaKeyMap)
HRESULT STDMETHODCALLTYPE rpcrt4.CStdStubBuffer_Connect(_In_ IRpcStubBuffer *This,_In_ IUnknown *pUnkServer)
ULONG WINAPI kernel32.RemoveVectoredExceptionHandler(_In_ PVOID Handler)
LPARAM WINAPI user32.PackDDElParam(_In_ UINT msg,_In_ UINT_PTR uiLo,_In_ UINT_PTR uiHi)
HRESULT None None.nextNode(IXMLDOMNode **nextItem None)
HRESULT None qmgrprxy.Clone([out] IEnumBackgroundCopyFiles **ppEnumFiles)
BOOL None shell32.SHGetPathFromIDListEx(_In_ PCIDLIST_ABSOLUTE pidl,_Out_ PWSTR pszPath,DWORD cchPath None,GPFIDL_FLAGS uOpts None)
HRESULT None None.FeedRenamed(LPCWSTR pszPath None,LPCWSTR pszOldPath None)
HRESULT None None.get_IsHierarchical([out None None,retval] BOOL *pfIsHierarchical)
NTSTATUS None None.CreateLogonSession(_In_ PLUID LogonId)
BOOLEAN None None.PsGetVersion(_Out_opt_ PULONG MajorVersion,_Out_opt_ PULONG MinorVersion,_Out_opt_ PULONG BuildNumber,_Out_opt_ PUNICODE_STRING CSDVersion)
HRESULT None None.GetSignatures([out None None,retval] IXpsSignatureCollection **signatures)
WINOLEAPI None ole32.PropVariantClear(_In_ PROPVARIANT *pvar)
HRESULT WINAPI d3dcompiler_47.D3DDisassemble(in LPCVOID pSrcData,in SIZE_T SrcDataSize,in UINT Flags,in_opt LPCSTR szComments,out ID3DBlob ppDisassembly)
BOOL None setupapi.SetupDiSetDeviceInterfaceDefault(_In_ HDEVINFO DeviceInfoSet,_Inout_ PSP_DEVICE_INTERFACE_DATA DeviceInterfaceData,_In_ DWORD Flags,_Reserved_ PVOID Reserved)
NTSTATUS None None.IoUnregisterPlugPlayNotificationEx(_In_ PVOID NotificationEntry)
HRESULT None None.GetSignatureXml([out] UINT8 **signatureXml,[out] UINT32 *count)
BOOL WINAPI user32.GetMessage(_Out_ LPMSG lpMsg,_In_opt_ HWND hWnd,_In_ UINT wMsgFilterMin,_In_ UINT wMsgFilterMax)
BOOL WINAPI user32.GetMessageW(_Out_ LPMSG lpMsg,_In_opt_ HWND hWnd,_In_ UINT wMsgFilterMin,_In_ UINT wMsgFilterMax)
BOOL WINAPI user32.GetMessageA(_Out_ LPMSG lpMsg,_In_opt_ HWND hWnd,_In_ UINT wMsgFilterMin,_In_ UINT wMsgFilterMax)
HRESULT WINAPI dismapi.DismRemovePackage(_In_ DismSession Session,_In_ PCWSTR Identifier,_In_ DismPackageIdentifier PackageIdentifier,_In_opt_ HANDLE CancelEvent,_In_opt_ DISM_PROGRESS_CALLBACK Progress,_In_opt_ PVOID UserData)
uint32 None ramgmtpsprovider.SetByDisableLoadBalancing([in] boolean Disable,[in] string ComputerName,[in] boolean Force,[in] boolean PassThru,[out] RemoteAccessLoadBalancer cmdletOutput)
HRESULT WINAPI ole32.CoGetApartmentType(_Out_ APTTYPE *pAptType,_Out_ APTTYPEQUALIFIER *pAptQualifier)
BOOL WINAPI dbghelp.SymEnumSymbolsForAddr(_In_ HANDLE hProcess,_In_ DWORD64 Address,_In_ PSYM_ENUMERATESYMBOLS_CALLBACK EnumSymbolsCallback,_In_opt_ PVOID UserContext)
BOOL WINAPI dbghelp.SymEnumSymbolsForAddrW(_In_ HANDLE hProcess,_In_ DWORD64 Address,_In_ PSYM_ENUMERATESYMBOLS_CALLBACK EnumSymbolsCallback,_In_opt_ PVOID UserContext)
BOOL WINAPI dbghelp.SymEnumSymbolsForAddr(_In_ HANDLE hProcess,_In_ DWORD64 Address,_In_ PSYM_ENUMERATESYMBOLS_CALLBACK EnumSymbolsCallback,_In_opt_ PVOID UserContext)
HRESULT None None.get_SelectionType([out None None,retval] PrintSchemaSelectionType *pSelectionType)
BOOL WINAPI advapi32.LookupPrivilegeDisplayName(_In_opt_ LPCTSTR lpSystemName,_In_ LPCTSTR lpName,_Out_opt_ LPTSTR lpDisplayName,_Inout_ LPDWORD cchDisplayName,_Out_ LPDWORD lpLanguageId)
BOOL WINAPI advapi32.LookupPrivilegeDisplayNameW(_In_opt_ LPCTSTR lpSystemName,_In_ LPCTSTR lpName,_Out_opt_ LPTSTR lpDisplayName,_Inout_ LPDWORD cchDisplayName,_Out_ LPDWORD lpLanguageId)
BOOL WINAPI advapi32.LookupPrivilegeDisplayNameA(_In_opt_ LPCTSTR lpSystemName,_In_ LPCTSTR lpName,_Out_opt_ LPTSTR lpDisplayName,_Inout_ LPDWORD cchDisplayName,_Out_ LPDWORD lpLanguageId)
VOID None None.SeFreePrivileges(_In_ PPRIVILEGE_SET Privileges)
BOOL WINAPI kernel32.SetDllDirectory(_In_opt_ LPCTSTR lpPathName)
BOOL WINAPI kernel32.SetDllDirectoryW(_In_opt_ LPCTSTR lpPathName)
BOOL WINAPI kernel32.SetDllDirectoryA(_In_opt_ LPCTSTR lpPathName)
BOOL WINAPI avrt.AvRtJoinThreadOrderingGroup(_Out_ PHANDLE Context,_In_ GUID *ThreadOrderingGuid,_In_ BOOL Before)
BOOL None kernel32.SetThreadIdealProcessorEx(_In_ HANDLE hThread,_In_ PPROCESSOR_NUMBER lpIdealProcessor,_Out_opt_ PPROCESSOR_NUMBER lpPreviousIdealProcessor)
BOOL WINAPI kernel32.GetProcessWorkingSetSize(_In_ HANDLE hProcess,_Out_ PSIZE_T lpMinimumWorkingSetSize,_Out_ PSIZE_T lpMaximumWorkingSetSize)
LONG WINAPI advapi32.RegQueryReflectionKey(_In_ HKEY hBase,_Out_ BOOL *bIsReflectionDisabled)
BOOL None gdi32.UnrealizeObject(_In_ HGDIOBJ hgdiobj)
LARGE_INTEGER None hal.KeQueryPerformanceCounter(_Out_opt_ PLARGE_INTEGER PerformanceFrequency)
UINT None nddeapi.NDdeShareGetInfo(_In_ LPTSTR lpszServer,_In_ LPTSTR lpszShareName,_In_ UINT nLevel,_Out_ LPBYTE lpBuffer,_In_ DWORD cBufSize,_Out_ LPDWORD lpnTotalAvailable,_In_ LPWORD lpnItems)
UINT None nddeapi.NDdeShareGetInfoW(_In_ LPTSTR lpszServer,_In_ LPTSTR lpszShareName,_In_ UINT nLevel,_Out_ LPBYTE lpBuffer,_In_ DWORD cBufSize,_Out_ LPDWORD lpnTotalAvailable,_In_ LPWORD lpnItems)
UINT None nddeapi.NDdeShareGetInfoA(_In_ LPTSTR lpszServer,_In_ LPTSTR lpszShareName,_In_ UINT nLevel,_Out_ LPBYTE lpBuffer,_In_ DWORD cBufSize,_Out_ LPDWORD lpnTotalAvailable,_In_ LPWORD lpnItems)
HRESULT None actxprxy.EnumDiscRecorders([out] IEnumDiscRecorders **ppEnum)
uint32 None None.RemoveConnection([in] string UniqueConnectionId)
BOOL WINAPI kernel32.GetCommConfig(_In_ HANDLE hCommDev,_Out_ LPCOMMCONFIG lpCC,_Inout_ LPDWORD lpdwSize)
BOOL WINAPI kernel32.QueryInformationJobObject(_In_opt_ HANDLE hJob,_In_ JOBOBJECTINFOCLASS JobObjectInfoClass,_Out_ LPVOID lpJobObjectInfo,_In_ DWORD cbJobObjectInfoLength,_Out_opt_ LPDWORD lpReturnLength)
VOID None kernel32.QueryUnbiasedInterruptTimePrecise(_Out_ PULONGLONG lpUnbiasedInterruptTimePrecise)
VOID None None.IoFreeIrp(_In_ PIRP Irp)
HRESULT None prntvpt.PTConvertDevModeToPrintTicket(_In_ HPTPROVIDER hProvider,ULONG cbDevmode None,_In_ PDEVMODE pDevmode,_In_ EPrintTicketScope scope,IStream *pPrintTicket None)
HRESULT None None.GetSourceMoniker([out] IMoniker **ppmk)
WORD None None.HIWORD(DWORD dwValue None)
VOID None None.FltClearCallbackDataDirty(_Inout_ PFLT_CALLBACK_DATA Data)
HRESULT None None.DoSnapshotSet([out] IVssAsync **ppAsync)
BOOL None advapi32.OperationEnd(_In_ OPERATION_END_PARAMETERS *OperationParams)
protected void None.GetCurrentValueAsFrozenCore(Freezable sourceFreezable None)
HANDLE WINAPI kernel32.CreateEventEx(_In_opt_ LPSECURITY_ATTRIBUTES lpEventAttributes,_In_opt_ LPCTSTR lpName,_In_ DWORD dwFlags,_In_ DWORD dwDesiredAccess)
HANDLE WINAPI kernel32.CreateEventExW(_In_opt_ LPSECURITY_ATTRIBUTES lpEventAttributes,_In_opt_ LPCTSTR lpName,_In_ DWORD dwFlags,_In_ DWORD dwDesiredAccess)
HANDLE WINAPI kernel32.CreateEventExA(_In_opt_ LPSECURITY_ATTRIBUTES lpEventAttributes,_In_opt_ LPCTSTR lpName,_In_ DWORD dwFlags,_In_ DWORD dwDesiredAccess)
HRESULT None dskquota.GetAccountStatus([out] LPDWORD pdwStatus)
HRESULT None windowscodecs.IWICImagingFactory_CreateFormatConverter_Proxy(_In_ IWICImagingFactory *pFactory,_Out_ IWICFormatConverter **ppIFormatConverter)
ULONGLONG None None.VER_SET_CONDITION(ULONGLONG dwlConditionMask None,DWORD dwTypeBitMask None,BYTE dwConditionMask None)
HRESULT None wmpmediasharing.put_userHomeMediaSharingState(VARIANT_BOOL sharingEnabled None)
ULONG WINAPI None.BufferCallback(_In_ PEVENT_TRACE_LOGFILE Buffer)
HRESULT STDMETHODCALLTYPE None.GetConversationStatistics(DWORD* nSessions None,LPSESSIONSTATS lpSessionStats None,DWORD* nStations None,LPSTATIONSTATS lpStationStats None,BOOL fClearAfterReading None)
HRESULT None None.MoveNext([out None None,retval] BOOL *hasNext)
DWORD None None.EnumPrinterDataEx(_In_ HANDLE hPrinter,_In_ LPCTSTR pKeyName,_Out_ LPBYTE pEnumValues,_In_ DWORD cbEnumValues,_Out_ LPDWORD pcbEnumValues,_Out_ LPDWORD pnEnumValues)
DWORD None None.EnumPrinterDataExW(_In_ HANDLE hPrinter,_In_ LPCTSTR pKeyName,_Out_ LPBYTE pEnumValues,_In_ DWORD cbEnumValues,_Out_ LPDWORD pcbEnumValues,_Out_ LPDWORD pnEnumValues)
DWORD None None.EnumPrinterDataExA(_In_ HANDLE hPrinter,_In_ LPCTSTR pKeyName,_Out_ LPBYTE pEnumValues,_In_ DWORD cbEnumValues,_Out_ LPDWORD pcbEnumValues,_Out_ LPDWORD pnEnumValues)
HRESULT None oleaut32.OleLoadPicture(_In_ LPSTREAM lpstream,_In_ LONG lSize,_In_ BOOL fRunmode,_In_ REFIID riid,_Out_ LPVOID *lplpvObj)
HRESULT None None.GetContainingOutput([out] IDXGIOutput **ppOutput)
HWND None None.Animate_Create(HWND hwndP None,UINT id None,DWORD dwStyle None,HINSTANCE hInstance None)
HRESULT None msdrm.DRMInitEnvironment(_In_ DRMSECURITYPROVIDERTYPE eSecurityProviderType,_In_ DRMSPECTYPE eSpecification,_In_ PWSTR wszSecurityProvider,_In_ PWSTR wszManifestCredentials,_In_ PWSTR wszMachineCredentials,_Out_ DRMENVHANDLE *phEnv,_Out_ DRMHANDLE *phDefaultLibrary)
protected void None.PrepareContainerForItemOverride(DependencyObject element None,Object item None)
public boolean None.Match(Object obj None)
HRESULT WDSCLIAPI wdsclientapi.WdsCliInitializeLog(_In_ HANDLE hSession,_In_ ULONG ulClientArchitecture,_In_ PWSTR pwszClientId,_In_ PWSTR pwszClientAddress)
HRESULT STDMETHODCALLTYPE None.Stop(LPSTATISTICS lpStats None)
public boolean None.Match(Object obj None)
HANDLE WINAPI kernel32.FindFirstVolume(_Out_ LPTSTR lpszVolumeName,_In_ DWORD cchBufferLength)
HANDLE WINAPI kernel32.FindFirstVolumeW(_Out_ LPTSTR lpszVolumeName,_In_ DWORD cchBufferLength)
HANDLE WINAPI kernel32.FindFirstVolumeA(_Out_ LPTSTR lpszVolumeName,_In_ DWORD cchBufferLength)
DWORD WINAPI advapi32.GetAuditedPermissionsFromAcl(_In_ PACL pacl,_In_ PTRUSTEE pTrustee,_Out_ PACCESS_MASK pSuccessfulAuditedRights,_Out_ PACCESS_MASK pFailedAuditRights)
DWORD WINAPI advapi32.GetAuditedPermissionsFromAclW(_In_ PACL pacl,_In_ PTRUSTEE pTrustee,_Out_ PACCESS_MASK pSuccessfulAuditedRights,_Out_ PACCESS_MASK pFailedAuditRights)
DWORD WINAPI advapi32.GetAuditedPermissionsFromAclA(_In_ PACL pacl,_In_ PTRUSTEE pTrustee,_Out_ PACCESS_MASK pSuccessfulAuditedRights,_Out_ PACCESS_MASK pFailedAuditRights)
BOOL WINAPI fmapi.SupplyDecryptionInfo(_In_ PFILE_RESTORE_CONTEXT Context,_In_opt_ PCWSTR RecoveryKeyFilePath,_In_opt_ PVOID RecoveryPassword,_In_opt_ PVOID KeyPackage,_In_opt_ ULONG KeyPackageSize)
HRESULT None msdrm.DRMGetCertificateChainCount(_In_ PWSTR wszChain,_Out_ UINT *pcCertCount)
public void None.Begin(FrameworkElement containingObject None)
NTSTATUS None None.ZwOpenFile(_Out_ PHANDLE FileHandle,_In_ ACCESS_MASK DesiredAccess,_In_ POBJECT_ATTRIBUTES ObjectAttributes,_Out_ PIO_STATUS_BLOCK IoStatusBlock,_In_ ULONG ShareAccess,_In_ ULONG OpenOptions)
BOOL WINAPI crypt32.CertCompareCertificate(_In_ DWORD dwCertEncodingType,_In_ PCERT_INFO pCertId1,_In_ PCERT_INFO pCertId2)
LRESULT WINAPI user32.DefWindowProc(_In_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
LRESULT WINAPI user32.DefWindowProcW(_In_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
LRESULT WINAPI user32.DefWindowProcA(_In_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
HRESULT None None.WriteAttributes(IXmlReader* pReader None)
NTSTATUS None None.PoCallDriver(_In_ PDEVICE_OBJECT DeviceObject,_Inout_ PIRP Irp)
FLT_PREOP_CALLBACK_STATUS None None.SwapPreReadBuffers(_Inout_ PFLT_CALLBACK_DATA Data,_In_ PCFLT_RELATED_OBJECTS FltObjects,_Flt_CompletionContext_Outptr_ PVOID *CompletionContext)
DWORD WINAPI advapi32.GetSecurityDescriptorRMControl(_In_ PSECURITY_DESCRIPTOR SecurityDescriptor,_Out_ PUCHAR RMControl)
BOOL WINAPI advapi32.InitializeSid(_Out_ PSID Sid,_In_ PSID_IDENTIFIER_AUTHORITY pIdentifierAuthority,_In_ BYTE nSubAuthorityCount)
BOOL WINAPI magnification.MagSetWindowSource(_In_ HWND hwnd,_In_ RECT rect)
HRESULT None propsys.PSStringFromPropertyKey(_In_ REFPROPERTYKEY pkey,_Out_ LPWSTR psz,_In_ UINT cch)
HRESULT None ole32.CoMarshalInterThreadInterfaceInStream(_In_ REFIID riid,_In_ LPUNKNOWN pUnk,_Out_ LPSTREAM *ppStm)
DWORD None None.GetNPPBlobTable(HBLOB hFilterBlob None,PBLOB_TABLE* ppBlobTable None)
void None None.SinglePhaseCommit(SinglePhaseEnlistment singlePhaseEnlistment None)
PFLT_CALLBACK_DATA None None.FltCbdqRemoveIo(_Inout_ PFLT_CALLBACK_DATA_QUEUE Cbdq,_In_ PFLT_CALLBACK_DATA_QUEUE_IO_CONTEXT Context)
public None None.CroppedBitmap(BitmapSource source None,Int32Rect sourceRect None)
VOID None None.CcPrepareMdlWrite(_In_ PFILE_OBJECT FileObject,_In_ PLARGE_INTEGER FileOffset,_In_ ULONG Length,_Out_ PMDL *MdlChain,_Out_ PIO_STATUS_BLOCK IoStatus)
BOOL None shlwapi.StrToInt64Ex(_In_ PCTSTR pszString,STIF_FLAGS dwFlags None,_Out_ LONGLONG *pllRet)
BOOL None shlwapi.StrToInt64ExW(_In_ PCTSTR pszString,STIF_FLAGS dwFlags None,_Out_ LONGLONG *pllRet)
BOOL None shlwapi.StrToInt64ExA(_In_ PCTSTR pszString,STIF_FLAGS dwFlags None,_Out_ LONGLONG *pllRet)
HRESULT WINAPI wsdapi.WSDCreateUdpMessageParameters(_Out_ IWSDUdpMessageParameters **ppTxParams)
BOOL WINAPI kernel32.FlsSetValue(_In_ DWORD dwFlsIndex,_In_opt_ PVOID lpFlsData)
NET_API_STATUS None netapi32.NetEnumerateComputerNames(_In_opt_ LPCWSTR Server,_In_ NET_COMPUTER_NAME_TYPE NameType,_In_ ULONG Reserved,_Out_ PDWORD EntryCount,_Out_ LPWSTR **ComputerNames)
NET_API_STATUS None netapi32.NetRemoveAlternateComputerName(_In_opt_ LPCWSTR Server,_In_ LPCWSTR AlternateName,_In_opt_ LPCWSTR DomainAccount,_In_opt_ LPCWSTR DomainAccountPassword,_In_ ULONG Reserved)
BOOL WINAPI comdlg32.ChooseFont(_Inout_ LPCHOOSEFONT lpcf)
BOOL WINAPI comdlg32.ChooseFontW(_Inout_ LPCHOOSEFONT lpcf)
BOOL WINAPI comdlg32.ChooseFontA(_Inout_ LPCHOOSEFONT lpcf)
protected void None.AddLogicalChild(Object child None)
BOOLEAN None None.FsRtlCurrentBatchOplock(_In_ POPLOCK Oplock)
BOOL None None.InitInstance(HINSTANCE hinst None)
NET_API_STATUS None netapi32.NetProvisionComputerAccount(_In_ LPCWSTR lpDomain,_In_ LPCWSTR lpMachineName,_In_opt_ LPCWSTR lpMachineAccountOU,_In_opt_ LPCWSTR lpDcName,_In_ DWORD dwOptions,_Out_opt_ PBYTE *pProvisionBinData,_Out_opt_ DWORD *pdwProvisionBinDataSize,_Out_opt_ LPWSTR *pProvisionTextData)
NTSTATUS None None.FltAllocateExtraCreateParameterFromLookasideList(_In_ PFLT_FILTER Filter,_In_ LPCGUID EcpType,_In_ ULONG SizeOfContext,_In_ FSRTL_ALLOCATE_ECP_FLAGS Flags,_In_opt_ PFSRTL_EXTRA_CREATE_PARAMETER_CLEANUP_CALLBACK CleanupCallback,_Inout_ PVOID LookasideList,_Out_ PVOID *EcpContext)
UINT None msi.MsiSourceListClearAll(_In_ LPCTSTR szProduct,_In_ LPCTSTR szUserName,_In_ DWORD dwReserved)
UINT None msi.MsiSourceListClearAllW(_In_ LPCTSTR szProduct,_In_ LPCTSTR szUserName,_In_ DWORD dwReserved)
UINT None msi.MsiSourceListClearAllA(_In_ LPCTSTR szProduct,_In_ LPCTSTR szUserName,_In_ DWORD dwReserved)
BOOLEAN None None.KeSetTimer(_Inout_ PKTIMER Timer,_In_ LARGE_INTEGER DueTime,_In_opt_ PKDPC Dpc)
HCONVLIST WINAPI user32.DdeConnectList(_In_ DWORD idInst,_In_ HSZ hszService,_In_ HSZ hszTopic,_In_ HCONVLIST hConvList,_In_opt_ PCONVCONTEXT pCC)
HRESULT None None.VoteRequestDone(HRESULT hr None,BOID * pboidReason)
BOOL WINAPI newdev.InstallNewDevice(_In_ HWND hwndParent,_In_ LPGUID ClassGuid,_Out_ PDWORD pReboot)
HRESULT None None.SetAuthorAndModifiedBy(IOpcPackage *package None,LPCWSTR AuthorName None)
protected void None.OnGiveFeedback(GiveFeedbackEventArgs e None)
HRESULT None ole32.CreateOleAdviseHolder(_Out_ LPOLEADVISEHOLDER *ppOAHolder)
HRESULT None None.GetMatchingVolume([out] LPCWSTR *pszVolume)
HRESULT None ole32.CoInitialize(_In_opt_ LPVOID pvReserved)
BOOL None kernel32.GetCPInfoEx(_In_ UINT CodePage,_In_ DWORD dwFlags,_Out_ LPCPINFOEX lpCPInfoEx)
BOOL None kernel32.GetCPInfoExW(_In_ UINT CodePage,_In_ DWORD dwFlags,_Out_ LPCPINFOEX lpCPInfoEx)
BOOL None kernel32.GetCPInfoExA(_In_ UINT CodePage,_In_ DWORD dwFlags,_Out_ LPCPINFOEX lpCPInfoEx)
BOOL WINAPI wevtapi.EvtNextPublisherId(_In_ EVT_HANDLE PublisherEnum,_In_ DWORD PublisherIdBufferSize,_In_ LPWSTR PublisherIdBuffer,_Out_ PDWORD PublisherIdBufferUsed)
HRESULT None msrdc.ReadHeader([out] RDC_ErrorCode *rdc_ErrorCode)
BOOL WINAPI kernel32.InitializeSynchronizationBarrier(_Out_ LPSYNCHRONIZATION_BARRIER lpBarrier,_In_ LONG lTotalThreads,_In_ LONG lSpinCount)
HANDLE WINAPI kernel32.FindFirstVolumeMountPoint(_In_ LPTSTR lpszRootPathName,_Out_ LPTSTR lpszVolumeMountPoint,_In_ DWORD cchBufferLength)
HANDLE WINAPI kernel32.FindFirstVolumeMountPointW(_In_ LPTSTR lpszRootPathName,_Out_ LPTSTR lpszVolumeMountPoint,_In_ DWORD cchBufferLength)
HANDLE WINAPI kernel32.FindFirstVolumeMountPointA(_In_ LPTSTR lpszRootPathName,_Out_ LPTSTR lpszVolumeMountPoint,_In_ DWORD cchBufferLength)
public void None.GoToPage(int pageNumber None)
BOOL None advapi32.ClearEventLog(_In_ HANDLE hEventLog,_In_ LPCTSTR lpBackupFileName)
BOOL None advapi32.ClearEventLogW(_In_ HANDLE hEventLog,_In_ LPCTSTR lpBackupFileName)
BOOL None advapi32.ClearEventLogA(_In_ HANDLE hEventLog,_In_ LPCTSTR lpBackupFileName)
NET_API_STATUS None netapi32.NetDfsRemove(_In_ LPWSTR DfsEntryPath,_In_opt_ LPWSTR ServerName,_In_opt_ LPWSTR ShareName)
NTSTATUS None None.WdfWmiInstanceCreate(_In_ WDFDEVICE Device,_In_ PWDF_WMI_INSTANCE_CONFIG InstanceConfig,_In_opt_ PWDF_OBJECT_ATTRIBUTES InstanceAttributes,_Out_opt_ WDFWMIINSTANCE *Instance)
RPC_STATUS None rpcrt4.RpcBindingUnbind(_In_ RPC_BINDING_HANDLE Binding)
BOOL WINAPI clfsw32.CloseAndResetLogFile(_In_ HANDLE hLog)
BOOL WINAPI user32.DdeSetUserHandle(_In_ HCONV hConv,_In_ DWORD id,_In_ DWORD_PTR hUser)
public DependencyProperty None.AddOwner(Type ownerType None)
BOOL WINAPI kernel32.ClearCommBreak(_In_ HANDLE hFile)
uint32 None cscobj.Unpin([in] string Paths[],[in] uint32 Flags,[in] boolean Deep)
VOID WINAPI advapi32.RegisterWaitChainCOMCallback(_In_ PCOGETCALLSTATE CallStateCallback,_In_ PCOGETACTIVATIONSTATE ActivationStateCallback)
HRESULT None None.GetSyncBatchParameters([out] ISyncKnowledge **ppSyncKnowledge,[out] DWORD *pdwRequestedBatchSize)
DWORD None advapi32.UninstallApplication(_In_ WCHAR *ProductCode,_In_ DWORD dwStatus)
function None None.onxform(code None None,doc None None)
LSTATUS None shlwapi.SHGetValue(_In_ HKEY hkey,_In_opt_ LPCTSTR pszSubKey,_In_opt_ LPCTSTR pszValue,_Out_opt_ LPDWORD pdwType,_Out_opt_ LPVOID pvData,_Inout_opt_ LPDWORD pcbData)
LSTATUS None shlwapi.SHGetValueW(_In_ HKEY hkey,_In_opt_ LPCTSTR pszSubKey,_In_opt_ LPCTSTR pszValue,_Out_opt_ LPDWORD pdwType,_Out_opt_ LPVOID pvData,_Inout_opt_ LPDWORD pcbData)
LSTATUS None shlwapi.SHGetValueA(_In_ HKEY hkey,_In_opt_ LPCTSTR pszSubKey,_In_opt_ LPCTSTR pszValue,_Out_opt_ LPDWORD pdwType,_Out_opt_ LPVOID pvData,_Inout_opt_ LPDWORD pcbData)
uint32 None cscobj.TransitionOnline([in] string Path,[in] uint32 Flags)
BOOL WINAPI advapi32.GetSecurityDescriptorGroup(_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_Out_ PSID *pGroup,_Out_ LPBOOL lpbGroupDefaulted)
HRESULT None None.CreateWiaDeviceManager(IWiaDevMgr **ppWiaDevMgr None)
BOOL None setupapi.SetupDiDestroyDeviceInfoList(_In_ HDEVINFO DeviceInfoSet)
NTSTATUS None advapi32.LsaRemoveAccountRights(_In_ LSA_HANDLE PolicyHandle,_In_ PSID AccountSid,_In_ BOOLEAN AllRights,_In_ PLSA_UNICODE_STRING UserRights,_In_ ULONG CountOfRights)
MCIERROR None winmm.mciSendCommand(MCIDEVICEID IDDevice None,UINT uMsg None,DWORD_PTR fdwCommand None,DWORD_PTR dwParam None)
MCIERROR None winmm.mciSendCommandW(MCIDEVICEID IDDevice None,UINT uMsg None,DWORD_PTR fdwCommand None,DWORD_PTR dwParam None)
MCIERROR None winmm.mciSendCommandA(MCIDEVICEID IDDevice None,UINT uMsg None,DWORD_PTR fdwCommand None,DWORD_PTR dwParam None)
HRESULT None qmgrprxy.GetProgress([out] BG_FILE_PROGRESS *pProgress)
HRESULT None dcomp.CreateRectangleClip([out] IDCompositionRectangleClip **clip)
LPVOID WINAPI None.ExpertReallocMemory(HEXPERTKEY hExpertKey None,LPVOID pOriginalMemory None,SIZE_T nBytes None,LPDWORD pError None)
HRESULT None msrdc.GetParametersVersion([out] ULONG *currentVersion,[out] ULONG *minimumCompatibleAppVersion)
HRESULT None None.get_url(BSTR *urlString None)
HRESULT None azroles.get_Count(LONG *plCount None)
HICON WINAPI user32.LoadIcon(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpIconName)
HICON WINAPI user32.LoadIconW(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpIconName)
HICON WINAPI user32.LoadIconA(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpIconName)
HRESULT None shell32.SetPath(LPCTSTR pszFile None)
LONG WINAPI advapi32.RegOpenKeyEx(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_ DWORD ulOptions,_In_ REGSAM samDesired,_Out_ PHKEY phkResult)
LONG WINAPI advapi32.RegOpenKeyExW(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_ DWORD ulOptions,_In_ REGSAM samDesired,_Out_ PHKEY phkResult)
LONG WINAPI advapi32.RegOpenKeyExA(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_ DWORD ulOptions,_In_ REGSAM samDesired,_Out_ PHKEY phkResult)
BOOL WINAPI None.FaxDevStartJob(__in HLINE LineHandle,__in DWORD DeviceId,__out PHANDLE FaxHandle,__in HANDLE CompletionPortHandle,__in ULONG_PTR CompletionKey)
MMRESULT None winmm.midiOutCachePatches(HMIDIOUT hmo None,UINT wBank None,WORD *lpPatchArray None,UINT wFlags None)
NTSTATUS None None.ZwUnloadDriver(_In_ PUNICODE_STRING DriverServiceName)
HRESULT WINAPI userenv.DeriveAppContainerSidFromAppContainerName(_In_ PCWSTR pszAppContainerName,_Out_ PSID *ppsidAppContainerSid)
HRESULT None None.transformNodeToObject(IXMLDOMNode *stylesheet None,VARIANT outputObject None)
NETIOAPI_API None iphlpapi.FlushIpNetTable2(_In_ ADDRESS_FAMILY Family,_In_ NET_IFINDEX InterfaceIndex)
HRESULT None None.FeedDeleted(LPCWSTR pszPath None)
NTSTATUS None None.RtlCreateSecurityDescriptor(_Out_ PSECURITY_DESCRIPTOR SecurityDescriptor,_In_ ULONG Revision)
NTSTATUS None None.ZwQueryInformationFile(_In_ HANDLE FileHandle,_Out_ PIO_STATUS_BLOCK IoStatusBlock,_Out_ PVOID FileInformation,_In_ ULONG Length,_In_ FILE_INFORMATION_CLASS FileInformationClass)
HRESULT None None.UInt8Sub(_In_ UINT8 u8Minuend,_In_ UINT8 u8Subtrahend,_Out_ UINT8 *pu8Result)
HRESULT None None.WriteNodeShallow(IXmlReader pReader None,BOOL fWriteDefaultAttributes None)
MMRESULT None msacm32.acmStreamReset(HACMSTREAM has None,DWORD fdwReset None)
public String None.Insert(int startIndex None,String value None)
BOOL WINAPI dbghelp.SymPrev(_In_ HANDLE hProcess,_Inout_ PSYMBOL_INFO Symbol)
BOOL WINAPI dbghelp.SymPrevW(_In_ HANDLE hProcess,_Inout_ PSYMBOL_INFO Symbol)
BOOL WINAPI dbghelp.SymPrev(_In_ HANDLE hProcess,_Inout_ PSYMBOL_INFO Symbol)
BOOL WINAPI advapi32.SetAclInformation(_Inout_ PACL pAcl,_In_ LPVOID pAclInformation,_In_ DWORD nAclInformationLength,_In_ ACL_INFORMATION_CLASS dwAclInformationClass)
COLORREF None None.RGB(BYTE byRed None,BYTE byGreen None,BYTE byBlue None)
HRESULT None None.GetSignaturePartName([out None None,retval] IOpcPartUri **signaturePartName)
HRESULT None None.JoinTransaction(IUnknown *punkTransactionCoord None,ISOLEVEL isoLevel None,ULONG isoFlags None,ITransactionOptions *pOtherOptions None)
BOOL WINAPI kernel32.SetDefaultDllDirectories(_In_ DWORD DirectoryFlags)
protected void None.OnIsMouseCaptureWithinChanged(DependencyPropertyChangedEventArgs e None)
HANDLE WINAPI kernel32.CreateFileMappingNuma(_In_ HANDLE hFile,_In_opt_ LPSECURITY_ATTRIBUTES lpFileMappingAttributes,_In_ DWORD flProtect,_In_ DWORD dwMaximumSizeHigh,_In_ DWORD dwMaximumSizeLow,_In_opt_ LPCTSTR lpName,_In_ DWORD nndPreferred)
HANDLE WINAPI kernel32.CreateFileMappingNumaW(_In_ HANDLE hFile,_In_opt_ LPSECURITY_ATTRIBUTES lpFileMappingAttributes,_In_ DWORD flProtect,_In_ DWORD dwMaximumSizeHigh,_In_ DWORD dwMaximumSizeLow,_In_opt_ LPCTSTR lpName,_In_ DWORD nndPreferred)
HANDLE WINAPI kernel32.CreateFileMappingNumaA(_In_ HANDLE hFile,_In_opt_ LPSECURITY_ATTRIBUTES lpFileMappingAttributes,_In_ DWORD flProtect,_In_ DWORD dwMaximumSizeHigh,_In_ DWORD dwMaximumSizeLow,_In_opt_ LPCTSTR lpName,_In_ DWORD nndPreferred)
NTSTATUS None None.ZwClose(_In_ HANDLE Handle)
HANDLE WINAPI kernel32.CreateThread(_In_opt_ LPSECURITY_ATTRIBUTES lpThreadAttributes,_In_ SIZE_T dwStackSize,_In_ LPTHREAD_START_ROUTINE lpStartAddress,_In_opt_ LPVOID lpParameter,_In_ DWORD dwCreationFlags,_Out_opt_ LPDWORD lpThreadId)
void None None.Rollback(Enlistment enlistment None)
HMETAFILE None gdi32.CopyMetaFile(_In_ HMETAFILE hmfSrc,_In_ LPCTSTR lpszFile)
HMETAFILE None gdi32.CopyMetaFileW(_In_ HMETAFILE hmfSrc,_In_ LPCTSTR lpszFile)
HMETAFILE None gdi32.CopyMetaFileA(_In_ HMETAFILE hmfSrc,_In_ LPCTSTR lpszFile)
NTSTATUS None None.FltWriteFile(_In_ PFLT_INSTANCE InitiatingInstance,_In_ PFILE_OBJECT FileObject,_In_opt_ PLARGE_INTEGER ByteOffset,_In_ ULONG Length,_In_ PVOID Buffer,_In_ FLT_IO_OPERATION_FLAGS Flags,_Out_opt_ PULONG BytesWritten,_In_opt_ PFLT_COMPLETED_ASYNC_IO_CALLBACK CallbackRoutine,_In_opt_ PVOID CallbackContext)
NTSTATUS None None.FltTagFile(_In_ PFLT_INSTANCE InitiatingInstance,_In_ PFILE_OBJECT FileObject,_In_ ULONG FileTag,_In_opt_ GUID *Guid,_In_ PVOID DataBuffer,_In_ USHORT DataBufferLength)
BOOL CALLBACK None.EnumWindowStationProc(_In_ LPTSTR lpszWindowStation,_In_ LPARAM lParam)
BOOL CALLBACK None.WINSTAENUMPROCW(_In_ LPTSTR lpszWindowStation,_In_ LPARAM lParam)
BOOL CALLBACK None.WINSTAENUMPROCA(_In_ LPTSTR lpszWindowStation,_In_ LPARAM lParam)
BOOL WINAPI user32.SystemParametersInfo(_In_ UINT uiAction,_In_ UINT uiParam,_Inout_ PVOID pvParam,_In_ UINT fWinIni)
BOOL WINAPI user32.SystemParametersInfoW(_In_ UINT uiAction,_In_ UINT uiParam,_Inout_ PVOID pvParam,_In_ UINT fWinIni)
BOOL WINAPI user32.SystemParametersInfoA(_In_ UINT uiAction,_In_ UINT uiParam,_Inout_ PVOID pvParam,_In_ UINT fWinIni)
DWORD WINAPI kernel32.Wow64SuspendThread(_In_ HANDLE hThread)
NTSTATUS None None.RtlGetVersion(_Out_ PRTL_OSVERSIONINFOW lpVersionInformation)
HRESULT None None.GetLastUndoDescription([out] BSTR *pBstr)
HRESULT None dxva2.GetNumberOfPhysicalMonitorsFromIDirect3DDevice9(_In_ IDirect3DDevice9 *pDirect3DDevice9,_Out_ LPDWORD pdwNumberOfPhysicalMonitors)
HRESULT None None.AllocPMsg(ULONG cb None,DMUS_PMSG** ppPMSG None)
public Object None.Invoke(DispatcherPriority priority None,Delegate method None,Object arg None)
HRESULT None windowscodecs.IWICBitmapDecoder_GetDecoderInfo_Proxy(_In_ IWICBitmapDecoder *THIS_PTR,_Out_ IWICBitmapDecoderInfo **ppIDecoderInfo)
HRESULT None None.DocumentEvent(_In_ HANDLE hPrinter,_In_ HDC hdc,INT iEsc None,ULONG cbIn None,_In_ PVOID pvIn,ULONG cbOut None,_Out_ PVOID pvOut)
HRESULT None None.DocumentEventW(_In_ HANDLE hPrinter,_In_ HDC hdc,INT iEsc None,ULONG cbIn None,_In_ PVOID pvIn,ULONG cbOut None,_Out_ PVOID pvOut)
HRESULT None None.DocumentEventA(_In_ HANDLE hPrinter,_In_ HDC hdc,INT iEsc None,ULONG cbIn None,_In_ PVOID pvIn,ULONG cbOut None,_Out_ PVOID pvOut)
HRESULT None None.get_AuthoringClientBinary([out None None,retval] BSTR *designModeDllPath)
DWORD APIENTRY kernel32.DisableThreadProfiling(_In_ HANDLE PerformanceDataHandle)
PDEVICE_OBJECT None None.IoGetRelatedDeviceObject(_In_ PFILE_OBJECT FileObject)
BOOL WINAPI kernel32.Heap32ListFirst(_In_ HANDLE hSnapshot,_Inout_ LPHEAPLIST32 lphl)
HRESULT None None.GetTypeInfoCount([out] UINT *pctinfo)
NTSTATUS None None.FsRtlRegisterUncProvider(_Out_ PHANDLE MupHandle,_In_ PUNICODE_STRING RedirDevName,_In_ BOOLEAN MailslotsSupported)
HRESULT None None.GetSecurityProvider([out] CLSID *pSPClsid)
BOOL WINAPI kernel32.PeekNamedPipe(_In_ HANDLE hNamedPipe,_Out_opt_ LPVOID lpBuffer,_In_ DWORD nBufferSize,_Out_opt_ LPDWORD lpBytesRead,_Out_opt_ LPDWORD lpTotalBytesAvail,_Out_opt_ LPDWORD lpBytesLeftThisMessage)
UINT None nddeapi.NDdeShareSetInfo(_In_ LPTSTR lpszServer,_In_ LPTSTR lpszShareName,_In_ UINT nLevel,_In_ LPBYTE lpBuffer,_In_ DWORD cBufSize,_In_ WORD sParmNum)
UINT None nddeapi.NDdeShareSetInfoW(_In_ LPTSTR lpszServer,_In_ LPTSTR lpszShareName,_In_ UINT nLevel,_In_ LPBYTE lpBuffer,_In_ DWORD cBufSize,_In_ WORD sParmNum)
UINT None nddeapi.NDdeShareSetInfoA(_In_ LPTSTR lpszServer,_In_ LPTSTR lpszShareName,_In_ UINT nLevel,_In_ LPBYTE lpBuffer,_In_ DWORD cBufSize,_In_ WORD sParmNum)
DWORD WINAPI resutils.ResUtilSetResourceServiceEnvironment(_In_ LPCWSTR pszServiceName,_In_ HRESOURCE hResource,_In_ PLOG_EVENT_ROUTINE pfnLogEvent,_In_ RESOURCE_HANDLE hResourceHandle)
HRESULT None ole32.OleCreateLinkFromData(_In_ LPDATAOBJECT pSrcDataObj,_In_ REFIID riid,_In_ DWORD renderopt,_In_ LPFORMATETC pFormatEtc,_In_ LPOLECLIENTSITE pClientSite,_In_ LPSTORAGE pStg,_Out_ LPVOID *ppvObj)
HRESULT None None.FileRangesTransferred(IBackgroundCopyJob *pJob None,IBackgroundCopyFile pFile None,DWORD *rangeCount None,BG_FILE_RANGE ranges None)
BOOL None kernel32.SetThreadInformation(_In_ HANDLE hThread,_In_ THREAD_INFORMATION_CLASS ThreadInformationClass,_In_reads_bytes_ ThreadInformation None,_In_ DWORD ThreadInformationSize)
BOOL None ktmw32.CommitEnlistment(_In_ HANDLE EnlistmentHandle,_In_ PLARGE_INTEGER TmVirtualClock)
HRESULT WDSCLIAPI wdsclientapi.WdsCliTransferFile(_In_ PCWSTR pwszServer,_In_ PCWSTR pwszNamespace,_In_ PCWSTR pwszRemoteFilePath,_In_ PCWSTR pwszLocalFilePath,_In_ DWORD dwFlags,_Reserved_ DWORD dwReserved,_In_opt_ PFN_WdsCliCallback pfnWdsCliCallback,_In_opt_ PVOID pvUserData,_Out_ PHANDLE phTransfer)
HRESULT WDSCLIAPI wdsclientapi.WdsCliTransferImage(_In_ HANDLE hImage,_In_ PWSTR pwszLocalPath,_In_ DWORD dwFlags,_Reserved_ DWORD dwReserved,_In_opt_ PFN_WdsCliCallback pfnWdsCliCallback,_In_opt_ PVOID pvUserData,_Out_ PHANDLE phTransfer)
public boolean None.Match(Object obj None)
protected void None.RemoveVisualChild(Visual child None)
public boolean None.ShouldSerializeInlines(XamlDesignerSerializationManager manager None)
HMODULE WINAPI kernel32.LoadLibraryEx(_In_ LPCTSTR lpFileName,_Reserved_ HANDLE hFile,_In_ DWORD dwFlags)
HMODULE WINAPI kernel32.LoadLibraryExW(_In_ LPCTSTR lpFileName,_Reserved_ HANDLE hFile,_In_ DWORD dwFlags)
HMODULE WINAPI kernel32.LoadLibraryExA(_In_ LPCTSTR lpFileName,_Reserved_ HANDLE hFile,_In_ DWORD dwFlags)
BOOL None kernel32.GetNLSVersion(_In_ NLS_FUNCTION Function,_In_ LCID Locale,_Inout_ LPNLSVERSIONINFO lpVersionInformation)
PVOID None None.SecureZeroMemory(_In_ PVOID ptr,_In_ SIZE_T cnt)
VOID None None.ExUnregisterCallback(_Inout_ PVOID CbRegistration)
uint32 None nettcpip.RequestStateChange([in] uint16 RequestedState,[out] CIM_ConcreteJob Job,[in] datetime TimeoutPeriod)
uint32 None ddpwmi.Create([in] string Name,[in] uint32 Type,[in] boolean Disable,[in] datetime Start,[in] uint32 DurationHours,[in] sint32 Days[],[in] boolean StopWhenSystemBusy,[in] uint32 Memory,[in] uint32 Cores,[in] uint32 Priority,[in] uint32 InputOutputThrottle,[in] uint32 InputOutputThrottleLevel,[in] boolean Full,[in] boolean ReadOnly,[out] MSFT_DedupJobSchedule DedupJobSchedule)
HRESULT None msdrm.DRMDuplicateEnvironmentHandle(_In_ DRMENVHANDLE hToCopy,_Out_ DRMENVHANDLE *phCopy)
BOOLEAN WINAPI secur32.GetUserNameEx(_In_ EXTENDED_NAME_FORMAT NameFormat,_Out_ LPTSTR lpNameBuffer,_Inout_ PULONG lpnSize)
BOOLEAN WINAPI secur32.GetUserNameExW(_In_ EXTENDED_NAME_FORMAT NameFormat,_Out_ LPTSTR lpNameBuffer,_Inout_ PULONG lpnSize)
BOOLEAN WINAPI secur32.GetUserNameExA(_In_ EXTENDED_NAME_FORMAT NameFormat,_Out_ LPTSTR lpNameBuffer,_Inout_ PULONG lpnSize)
VOID None None.IoSetShareAccess(_In_ ACCESS_MASK DesiredAccess,_In_ ULONG DesiredShareAccess,_Inout_ PFILE_OBJECT FileObject,_Out_ PSHARE_ACCESS ShareAccess)
PVOID PXEAPI wdspxe.PxePacketAllocate(_In_ HANDLE hProvider,_In_ HANDLE hClientRequest,_In_ ULONG uSize)
HRESULT None None.LoadScript(IDirectMusicPerformance8 * pPerf,IDirectMusicLoader8* pLoader None,WCHAR* wstrFileName None,IDirectMusicScript8** ppScript None)
VOID WINAPI wtsapi32.WTSCloseServer(_In_ HANDLE hServer)
HRESULT WINAPI mssign32.SignerSignEx2(_In_ DWORD dwFlags,_In_ SIGNER_SUBJECT_INFO *pSubjectInfo,_In_ SIGNER_CERT *pSignerCert,_In_ SIGNER_SIGNATURE_INFO *pSignatureInfo,_In_opt_ SIGNER_PROVIDER_INFO *pProviderInfo,_In_opt_ DWORD dwTimestampFlags,_In_opt_ PCSTR pszTimestampAlgorithmOid,_In_opt_ PCWSTR pwszHttpTimeStamp,_In_opt_ PCRYPT_ATTRIBUTES psRequest,_In_opt_ PVOID pSipData,_Out_ SIGNER_CONTEXT **ppSignerContext,_In_opt_ PCERT_STRONG_SIGN_PARA pCryptoPolicy,_Reserved_ PVOID pReserved)
BOOL None None.EnumPrinters(_In_ DWORD Flags,_In_ LPTSTR Name,_In_ DWORD Level,_Out_ LPBYTE pPrinterEnum,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded,_Out_ LPDWORD pcReturned)
BOOL None None.EnumPrintersW(_In_ DWORD Flags,_In_ LPTSTR Name,_In_ DWORD Level,_Out_ LPBYTE pPrinterEnum,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded,_Out_ LPDWORD pcReturned)
BOOL None None.EnumPrintersA(_In_ DWORD Flags,_In_ LPTSTR Name,_In_ DWORD Level,_Out_ LPBYTE pPrinterEnum,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded,_Out_ LPDWORD pcReturned)
HRESULT CALLBACK shell32.DllGetVersion(DLLVERSIONINFO *pdvi None)
uint32 None ddpwmi.Measure([in] string Path[],[out] MSFT_DedupFileMetadata DedupFileMetadata)
WINOLEAPI None ole32.ReadFmtUserTypeStg(_In_ IStorage *pStg,_Out_ CLIPFORMAT *pcf,_Out_ LPWSTR *lplpszUserType)
public Object None.TryFindResource(Object resourceKey None)
HRESULT None None.GetAllResponseHeaders([out] WCHAR **ppwszHeaders)
DPI_AWARENESS_CONTEXT WINAPI user32.SetThreadDpiAwarenessContext(_In_ DPI_AWARENESS_CONTEXT dpiContext)
HRESULT None None.GetUniqueIdentity([out] LPWSTR *ppwszIdentity)
BOOL None None.DeletePrinterDriverEx(_In_ LPTSTR pName,_In_ LPTSTR pEnvironment,_In_ LPTSTR pDriverName,_In_ DWORD dwDeleteFlag,_In_ DWORD dwVersionFlag)
BOOL None None.DeletePrinterDriverExW(_In_ LPTSTR pName,_In_ LPTSTR pEnvironment,_In_ LPTSTR pDriverName,_In_ DWORD dwDeleteFlag,_In_ DWORD dwVersionFlag)
BOOL None None.DeletePrinterDriverExA(_In_ LPTSTR pName,_In_ LPTSTR pEnvironment,_In_ LPTSTR pDriverName,_In_ DWORD dwDeleteFlag,_In_ DWORD dwVersionFlag)
UINT WINAPI user32.DdeInitialize(_Inout_ LPDWORD pidInst,_In_ PFNCALLBACK pfnCallback,_In_ DWORD afCmd,_Reserved_ DWORD ulRes)
UINT WINAPI user32.DdeInitializeW(_Inout_ LPDWORD pidInst,_In_ PFNCALLBACK pfnCallback,_In_ DWORD afCmd,_Reserved_ DWORD ulRes)
UINT WINAPI user32.DdeInitializeA(_Inout_ LPDWORD pidInst,_In_ PFNCALLBACK pfnCallback,_In_ DWORD afCmd,_Reserved_ DWORD ulRes)
HRESULT None shell32.Clone(IEnumIDList **ppenum None)
VOID None None.FsRtlUninitializeOplock(_Inout_ POPLOCK Oplock)
NTSTATUS None None.FltCbdqInsertIo(_Inout_ PFLT_CALLBACK_DATA_QUEUE Cbdq,_In_ PFLT_CALLBACK_DATA Cbd,_In_opt_ PFLT_CALLBACK_DATA_QUEUE_IO_CONTEXT Context,_In_opt_ PVOID InsertContext)
protected void None.OnLostStylusCapture(StylusEventArgs e None)
BOOL None None.SafeDiv(INT32 dividend None,INT32 divisor None,INT32 *pResult None)
HRESULT None None.GetParam(REFGUID rguidType None,DWORD dwGroupBits None,DWORD dwIndex None,MUSIC_TIME mtTime None,MUSIC_TIME* pmtNext None,void* pParam None)
ULONGLONG WINAPI None.UnsignedMultiplyHigh(_In_ DWORD64 Multiplier,_In_ DWORD64 Multiplicand)
public void None.ScrollToVerticalOffset(double offset None)
HRESULT None azroles.get_MembersName([out] VARIANT *pvarProp)
HRESULT None windowscodecs.GetDcHuffmanTable(UINT scanIndex None,UINT tableIndex None,[out] DXGI_JPEG_AC_HUFFMAN_TABLE *pAcHuffmanTable)
HANDLE WINAPI kernel32.OpenFileMapping(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpName)
HANDLE WINAPI kernel32.OpenFileMappingW(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpName)
HANDLE WINAPI kernel32.OpenFileMappingA(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpName)
HRESULT None None.GetContextId([out] GUID *pGuid)
NTSTATUS None None.KeWaitForMultipleObjects(_In_ ULONG Count,_In_ PVOID Object[],_In_ WAIT_TYPE WaitType,_In_ KWAIT_REASON WaitReason,_In_ KPROCESSOR_MODE WaitMode,_In_ BOOLEAN Alertable,_In_opt_ PLARGE_INTEGER Timeout,_Out_opt_ PKWAIT_BLOCK WaitBlockArray)
BOOL WINAPI wevtapi.EvtUpdateBookmark(_In_ EVT_HANDLE Bookmark,_In_ EVT_HANDLE Event)
void None wtwmiprov.Create([in] uint32 WTD,[out] string Id)
NET_API_STATUS None netapi32.NetUserEnum(_In_ LPCWSTR servername,_In_ DWORD level,_In_ DWORD filter,_Out_ LPBYTE *bufptr,_In_ DWORD prefmaxlen,_Out_ LPDWORD entriesread,_Out_ LPDWORD totalentries,_Inout_ LPDWORD resume_handle)
UINT None msi.MsiSummaryInfoGetProperty(_In_ MSIHANDLE hSummaryInfo,_In_ UINT uiProperty,_Out_ UINT *puiDataType,_Out_ INT *piValue,_Out_ FILETIME *pftValue,_Out_ LPTSTR szValueBuf,_Inout_ DWORD *pcchValueBuf)
UINT None msi.MsiSummaryInfoGetPropertyW(_In_ MSIHANDLE hSummaryInfo,_In_ UINT uiProperty,_Out_ UINT *puiDataType,_Out_ INT *piValue,_Out_ FILETIME *pftValue,_Out_ LPTSTR szValueBuf,_Inout_ DWORD *pcchValueBuf)
UINT None msi.MsiSummaryInfoGetPropertyA(_In_ MSIHANDLE hSummaryInfo,_In_ UINT uiProperty,_Out_ UINT *puiDataType,_Out_ INT *piValue,_Out_ FILETIME *pftValue,_Out_ LPTSTR szValueBuf,_Inout_ DWORD *pcchValueBuf)
BOOL WINAPI None.ExitWindows(DWORD dwReserved None,UINT uReserved None)
UINT None gdi32.GetTextAlign(_In_ HDC hdc)
HRESULT None shlwapi.SHCreateStreamOnFile(_In_ LPCTSTR pszFile,_In_ DWORD grfMode,_Out_ IStream **ppstm)
HRESULT None shlwapi.SHCreateStreamOnFileW(_In_ LPCTSTR pszFile,_In_ DWORD grfMode,_Out_ IStream **ppstm)
HRESULT None shlwapi.SHCreateStreamOnFileA(_In_ LPCTSTR pszFile,_In_ DWORD grfMode,_Out_ IStream **ppstm)
HRESULT None None.GetName([out None None,retval] IOpcPartUri **name)
UINT None msi.MsiInstallProduct(_In_ LPCTSTR szPackagePath,_In_ LPCTSTR szCommandLine)
UINT None msi.MsiInstallProductW(_In_ LPCTSTR szPackagePath,_In_ LPCTSTR szCommandLine)
UINT None msi.MsiInstallProductA(_In_ LPCTSTR szPackagePath,_In_ LPCTSTR szCommandLine)
BOOL WINAPI kernel32.EnterSynchronizationBarrier(_Inout_ LPSYNCHRONIZATION_BARRIER lpBarrier,_In_ DWORD dwFlags)
Bool None sensapi.IsNetworkAlive(_Out_ LPDWORD lpdwFlags)
uint32 None smiscsitargetprov.EnableDevice([in] boolean Enabled)
HRESULT None None.GetSchemaVersion([out] LONG *plMajorVersion,[out] LONG *plMinorVersion)
HRESULT None oleaut32.VariantClear(_Inout_ VARIANTARG *pvarg)
BOOL WINAPI None.Register(PEXPERTENUMINFO pExpertInfo None)
ULONG WINAPI wnvapi.WnvRequestNotification(HANDLE WnvHandle None,PWNV_NOTIFICATION_PARAM NotificationParam None,LPOVERLAPPED Overlapped None,PULONG BytesTransferred None)
HRESULT None shlwapi.SHSetThreadRef(_In_opt_ IUnknown *punk)
INSTALLSTATE None msi.MsiLocateComponent(_In_ LPCTSTR szComponent,_Out_ LPTSTR lpPathBuf,_Inout_ DWORD *pcchBuf)
INSTALLSTATE None msi.MsiLocateComponentW(_In_ LPCTSTR szComponent,_Out_ LPTSTR lpPathBuf,_Inout_ DWORD *pcchBuf)
INSTALLSTATE None msi.MsiLocateComponentA(_In_ LPCTSTR szComponent,_Out_ LPTSTR lpPathBuf,_Inout_ DWORD *pcchBuf)
VOID None None.WdfRequestMarkCancelable(_In_ WDFREQUEST Request,_In_ PFN_WDF_REQUEST_CANCEL EvtRequestCancel)
HRESULT None None.get_QueryContentProperties([out None None,retval] LPWSTR *ppszContentProperties)
VOID WINAPI kernel32.DeleteBoundaryDescriptor(_In_ HANDLE BoundaryDescriptor)
PUCHAR WINAPI advapi32.GetSidSubAuthorityCount(_In_ PSID pSid)
HRESULT None None.PlayMotif(IDirectMusicPerformance8* pPerf None,IDirectMusicStyle8* pStyle None,WCHAR* pwszMotifName None)
VOID WINAPI kernel32.SwitchToFiber(_In_ LPVOID lpFiber)
HRESULT None azroles.get_Writable([out] BOOL *pfProp)
PTSTR None shlwapi.StrCpy(_Out_ PTSTR psz1,_In_ PCTSTR psz2)
PTSTR None shlwapi.StrCpyW(_Out_ PTSTR psz1,_In_ PCTSTR psz2)
LONG WINAPI advapi32.RegDeleteKeyValue(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_opt_ LPCTSTR lpValueName)
LONG WINAPI advapi32.RegDeleteKeyValueW(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_opt_ LPCTSTR lpValueName)
LONG WINAPI advapi32.RegDeleteKeyValueA(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_opt_ LPCTSTR lpValueName)
HRESULT None None.GetDisplayType([out] PROPDESC_DISPLAYTYPE *pdt)
public DependencyProperty None.AddOwner(Type ownerType None,PropertyMetadata typeMetadata None)
NTSTATUS None None.ZwPrePrepareComplete(_In_ HANDLE EnlistmentHandle,_In_opt_ PLARGE_INTEGER TmVirtualClock)
uint32 None cscobj.Pin([in] string Paths[],[in] uint32 Flags,[in] boolean Deep)
HRESULT None wmpmediasharing.get_DeviceID([out] BSTR *deviceID)
HRESULT WINAPI None.RoInitialize(_In_ RO_INIT_TYPE initType)
public void None.Prepare(PreparingEnlistment preparingEnlistment None)
DWORD WINAPI kernel32.GetMappedFileName(_In_ HANDLE hProcess,_In_ LPVOID lpv,_Out_ LPTSTR lpFilename,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetMappedFileNameW(_In_ HANDLE hProcess,_In_ LPVOID lpv,_Out_ LPTSTR lpFilename,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetMappedFileNameA(_In_ HANDLE hProcess,_In_ LPVOID lpv,_Out_ LPTSTR lpFilename,_In_ DWORD nSize)
HRESULT None None.ReleaseResourceManager(DWORD dwRMCookie None)
BOOL None kernel32.GetFileMUIPath(_In_ DWORD dwFlags,_In_ PCWSTR pcwszFilePath,_Inout_opt_ PWSTR pwszLanguage,_Inout_ PULONG pcchLanguage,_Out_opt_ PWSTR pwszFileMUIPath,_Inout_ PULONG pcchFileMUIPath,_Inout_ PULONGLONG pululEnumerator)
protected void None.Merge(PropertyMetadata baseMetadata None,DependencyProperty dp None)
HRESULT None None.GetEnumerator([out None None,retval] IOpcRelationshipEnumerator **relationshipEnumerator)
HRESULT None upnp.GetDocumentURL([out] BSTR *pbstrDocument)
NTSTATUS WINAPI ncrypt.NCryptStreamOpenToUnprotect(_In_ NCRYPT_PROTECT_STREAM_INFO *pStreamInfo,DWORD dwFlags None,_In_opt_ HWND hWnd,_Out_ NCRYPT_STREAM_HANDLE *phStream)
BOOLEAN WINAPI kernel32.RtlInstallFunctionTableCallback(_In_ DWORD64 TableIdentifier,_In_ DWORD64 BaseAddress,_In_ DWORD Length,_In_ PGET_RUNTIME_FUNCTION_CALLBACK Callback,_In_ PVOID Context,_In_ PCWSTR OutOfProcessCallbackDll)
HRESULT WINAPI iscsidsc.ReportRadiusServerList(_Inout_ PULONG BufferSizeInChar,_Out_opt_ PTCHAR Buffer)
HRESULT WINAPI iscsidsc.ReportRadiusServerListW(_Inout_ PULONG BufferSizeInChar,_Out_opt_ PTCHAR Buffer)
HRESULT WINAPI iscsidsc.ReportRadiusServerListA(_Inout_ PULONG BufferSizeInChar,_Out_opt_ PTCHAR Buffer)
NTSTATUS None None.ZwQueryVolumeInformationFile(_In_ HANDLE FileHandle,_Out_ PIO_STATUS_BLOCK IoStatusBlock,_Out_ PVOID FsInformation,_In_ ULONG Length,_In_ FS_INFORMATION_CLASS FsInformationClass)
BOOL None shell32.DragQueryPoint(_In_ HDROP hDrop,_Out_ POINT *lppt)
ULONG WINAPI iphlpapi.SetPerTcp6ConnectionEStats(PMIB_TCP6ROW Row None,TCP_ESTATS_TYPE EstatsType None,PUCHAR Rw None,ULONG RwVersion None,ULONG RwSize None,ULONG Offset None)
RoInitializeWrapper None None.initialize(RO_INIT_MULTITHREADED None None)
HRESULT None azroles.get_PolicyReaders([out] VARIANT *pvarReaders)
NTSTATUS None None.SeDeassignSecurity(_Inout_ PSECURITY_DESCRIPTOR *SecurityDescriptor)
VOID None None.IoCancelFileOpen(_In_ PDEVICE_OBJECT DeviceObject,_In_ PFILE_OBJECT FileObject)
VOID None None.IoCompleteRequest(_In_ PIRP Irp,_In_ CCHAR PriorityBoost)
HRESULT None None.URLBeingIndexed([out None None,retval] LPWSTR *pszUrl)
HRESULT None None.AbortRequest(BOID * pboidReason,BOOL fRetaining None,XACTUOW * pNewUOW)
NTSTATUS None None.FltClose(_In_ HANDLE FileHandle)
HRESULT None None.CreateDomainShader(const void *pShaderBytecode,// SIZE_T BytecodeLength,// ID3D11ClassLinkage *pClassLinkage,// ID3D11DomainShader **ppDomainShader)
uint32 None cimwin32.BinarySDToSDDL([in] uint8 BinarySD[],[out] string SDDL)
NTSTATUS None None.ZwSetSecurityObject(_In_ HANDLE Handle,_In_ SECURITY_INFORMATION SecurityInformation,_In_ PSECURITY_DESCRIPTOR SecurityDescriptor)
BOOL None advapi32.CredWriteDomainCredentials(_In_ PCREDENTIAL_TARGET_INFORMATION TargetInfo,_In_ PCREDENTIAL Credential,_In_ DWORD Flags)
BOOL None advapi32.CredWriteDomainCredentialsW(_In_ PCREDENTIAL_TARGET_INFORMATION TargetInfo,_In_ PCREDENTIAL Credential,_In_ DWORD Flags)
BOOL None advapi32.CredWriteDomainCredentialsA(_In_ PCREDENTIAL_TARGET_INFORMATION TargetInfo,_In_ PCREDENTIAL Credential,_In_ DWORD Flags)
NET_API_STATUS None netapi32.NetApiBufferFree(_In_ LPVOID Buffer)
void None None.SinglePhaseCommit(SinglePhaseEnlistment singlePhaseEnlistment None)
public Enlistment None.EnlistVolatile(ISinglePhaseNotification singlePhaseNotification None,EnlistmentOptions enlistmentOptions None)
BOOL None kernel32.EnumSystemLocalesEx(_In_ LOCALE_ENUMPROCEX lpLocaleEnumProcEx,_In_ DWORD dwFlags,_In_ LPARAM lParam,_In_opt_ LPVOID lpReserved)
HRESULT WINAPI dismapi.DismRemoveCapability(_In_ DismSession Session,_In_ PCWSTR Name,_In_opt_ HANDLE CancelEvent,_In_opt_ DISM_PROGRESS_CALLBACK Progress,_In_opt_ PVOID UserData)
ULONG WINAPI dbghelp.SymGetFileLineOffsets64(_In_ HANDLE hProcess,_In_opt_ PCSTR ModuleName,_In_ PCSTR FileName,_Out_ PDWORD64 Buffer,_In_ ULONG BufferLines)
NTSTATUS None None.IoAcquireRemoveLock(_In_ PIO_REMOVE_LOCK RemoveLock,_In_opt_ PVOID Tag)
INT None mswsock.RIONotify(_In_ RIO_CQ CQ)
LONG WINAPI lz32.LZCopy(_In_ INT hfSource,_In_ INT hfDest)
HRESULT None None.GetRunningObjectTable([out] IRunningObjectTable **pprot)
BOOL WINAPI kernel32.RegisterWaitForSingleObject(_Out_ PHANDLE phNewWaitObject,_In_ HANDLE hObject,_In_ WAITORTIMERCALLBACK Callback,_In_opt_ PVOID Context,_In_ ULONG dwMilliseconds,_In_ ULONG dwFlags)
uint32 None cimwin32.SetPowerState([in] uint16 PowerState,[in] datetime Time)
BOOL WINAPI kernel32.RemoveDllDirectory(_In_ DLL_DIRECTORY_COOKIE Cookie)
HRESULT None None.WriteSurrogateCharEntity(WCHAR lowChar None,WCHAR highChar None)
UINT WINAPI kernel32.GetWriteWatch(_In_ DWORD dwFlags,_In_ PVOID lpBaseAddress,_In_ SIZE_T dwRegionSize,_Out_ PVOID *lpAddresses,_Inout_ PULONG_PTR lpdwCount,_Out_ PULONG lpdwGranularity)
void None None.Rollback(Enlistment enlistment None)
BOOL WINAPI kernel32.Thread32First(_In_ HANDLE hSnapshot,_Inout_ LPTHREADENTRY32 lpte)
VOID None None.ObReferenceObject(_In_ PVOID Object)
BOOL WINAPI user32.SwitchDesktop(_In_ HDESK hDesktop)
VOID None None.FltSetCallbackDataDirty(_Inout_ PFLT_CALLBACK_DATA Data)
uint32 None None.SendScsiReportLuns([out] uint8 ScsiStatus,[out] uint8 ResponseBuffer[],[out] uint8 SenseBuffer[])
NTSTATUS WINAPI gdi32.DDCCISetVCPFeature(_In_ HANDLE hMonitor,_In_ DWORD dwVCPCode,_In_ DWORD dwNewValue)
protected String None.GetResourceFileName(CultureInfo culture None)
Dim None None.outArgs(0 None None)
HRESULT None azroles.get__NewEnum(LPUNKNOWN *ppEnumPtr None)
HRESULT None None.AsyncSyncAll(VOID None None)
BOOL WINAPI kernel32.GetXStateFeaturesMask(_In_ PCONTEXT Context,_Out_ PWORD64 FeatureMask)
BOOL WINAPI kernel32.GetSystemTimeAdjustment(_Out_ PDWORD lpTimeAdjustment,_Out_ PDWORD lpTimeIncrement,_Out_ PBOOL lpTimeAdjustmentDisabled)
BOOL WINAPI dbghelp.SymSearch(_In_ HANDLE hProcess,_In_ ULONG64 BaseOfDll,_In_opt_ DWORD Index,_In_opt_ DWORD SymTag,_In_opt_ PCTSTR Mask,_In_opt_ DWORD64 Address,_In_ PSYM_ENUMERATESYMBOLS_CALLBACK EnumSymbolsCallback,_In_opt_ PVOID UserContext,_In_ DWORD Options)
BOOL WINAPI dbghelp.SymSearchW(_In_ HANDLE hProcess,_In_ ULONG64 BaseOfDll,_In_opt_ DWORD Index,_In_opt_ DWORD SymTag,_In_opt_ PCTSTR Mask,_In_opt_ DWORD64 Address,_In_ PSYM_ENUMERATESYMBOLS_CALLBACK EnumSymbolsCallback,_In_opt_ PVOID UserContext,_In_ DWORD Options)
BOOL WINAPI dbghelp.SymSearch(_In_ HANDLE hProcess,_In_ ULONG64 BaseOfDll,_In_opt_ DWORD Index,_In_opt_ DWORD SymTag,_In_opt_ PCTSTR Mask,_In_opt_ DWORD64 Address,_In_ PSYM_ENUMERATESYMBOLS_CALLBACK EnumSymbolsCallback,_In_opt_ PVOID UserContext,_In_ DWORD Options)
HRESULT None prntvpt.PTMergeAndValidatePrintTicket(_In_ HPTPROVIDER hProvider,_In_ IStream *pBaseTicket,_In_ IStream *pDeltaTicket,_In_ EPrintTicketScope scope,IStream *pResultTicket None,_Out_ BSTR *pbstrErrorMessage)
BOOL None shell32.GUIDFromString(_In_ LPCTSTR psz,_Out_ LPGUID pguid)
BOOL None shell32.GUIDFromStringW(_In_ LPCTSTR psz,_Out_ LPGUID pguid)
BOOL None shell32.GUIDFromStringA(_In_ LPCTSTR psz,_Out_ LPGUID pguid)
HRESULT None windowscodecs.IWICBitmapFlipRotator_Initialize_Proxy(_In_ IWICBitmapFlipRotator *THIS_PTR,_In_ IWICBitmapSource *pISource,_In_ WICBitmapTransformOptions options)
HRESULT STDMETHODCALLTYPE None.Configure(HBLOB hConfigurationBlob None,HBLOB hErrorBlob None)
public void None.GetObjectData(SerializationInfo info None,StreamingContext context None)
HRESULT WINAPI srpapi.SrpRestoreEnterpriseContext(_In_opt_ HANDLE tokenHandle)
public PackageRelationship None.CreateRelationship(Uri targetUri None,TargetMode targetMode None,String relationshipType None,String id None)
MMRESULT None winmm.timeEndPeriod(UINT uPeriod None)
VOID None None.KeQuerySystemTime(_Out_ PLARGE_INTEGER CurrentTime)
ULONG WINAPI tdh.TdhLoadManifest(_In_ PWSTR Manifest)
DWORD WDSTCIAPI wdstptc.WdsTransportClientStartSession(_In_ HANDLE hSessionKey)
BOOL WINAPI kernel32.GetNamedPipeClientComputerName(_In_ HANDLE Pipe,_Out_ LPTSTR ClientComputerName,_In_ ULONG ClientComputerNameLength)
BOOL WINAPI kernel32.GetNamedPipeClientComputerNameW(_In_ HANDLE Pipe,_Out_ LPTSTR ClientComputerName,_In_ ULONG ClientComputerNameLength)
BOOL WINAPI kernel32.GetNamedPipeClientComputerNameA(_In_ HANDLE Pipe,_Out_ LPTSTR ClientComputerName,_In_ ULONG ClientComputerNameLength)
HRESULT None None.get_types(ISchemaItemCollection** types None)
HRESULT None ole32.OleSetClipboard(_In_ LPDATAOBJECT pDataObj)
HRESULT None windowscodecs.IWICImagingFactory_CreateBitmap_Proxy(_In_ IWICImagingFactory *pFactory,_In_ UINT uiWidth,_In_ UINT uiHeight,_In_ REFWICPixelFormatGUID pixelFormat,_In_ WICBitmapCreateCacheOption option,_Out_ IWICBitmap **ppIBitmap)
HRESULT None None.GetInheritTypes([out] PSI_INHERIT_TYPE *ppInheritTypes,[out] ULONG *pcInheritTypes)
HRESULT None windowscodecs.IWICBitmapEncoder_SetThumbnail_Proxy(_In_ IWICBitmapEncoder *THIS_PTR,_In_ IWICBitmapSource *pIThumbnail)
HRESULT None windowscodecs.IWICComponentInfo_GetFriendlyName_Proxy(_In_ IWICComponentInfo *THIS_PTR,_In_ UINT cchFriendlyName,_Inout_ WCHAR *wzFriendlyName,_Out_ UINT *pcchActual)
HRESULT None windowscodecs.IWICBitmapFrameDecode_GetThumbnail_Proxy(_In_ IWICBitmapFrameDecode *THIS_PTR,_Out_ IWICBitmapSource **ppIThumbnail)
BOOL None None.GetDefaultPrinter(_In_ LPTSTR pszBuffer,_Inout_ LPDWORD pcchBuffer)
BOOL None None.GetDefaultPrinterW(_In_ LPTSTR pszBuffer,_Inout_ LPDWORD pcchBuffer)
BOOL None None.GetDefaultPrinterA(_In_ LPTSTR pszBuffer,_Inout_ LPDWORD pcchBuffer)
HRESULT None None.GetCurrent([out None None,retval] IOpcSignatureRelationshipReference **relationshipReference)
BOOL WINAPI ktmw32.RecoverTransactionManager(_In_ HANDLE TransactionManagerHandle)
public boolean None.Match(Object obj None)
LPTSTR WINAPI user32.CharPrev(_In_ LPCTSTR lpszStart,_In_ LPCTSTR lpszCurrent)
LPTSTR WINAPI user32.CharPrevW(_In_ LPCTSTR lpszStart,_In_ LPCTSTR lpszCurrent)
LPTSTR WINAPI user32.CharPrevA(_In_ LPCTSTR lpszStart,_In_ LPCTSTR lpszCurrent)
protected void None.OnMouseEnter(MouseEventArgs e None)
HTHEME WINAPI user32.OpenThemeDataForDpi(HWDN hwnd None,PCWSTR pszClassIdList None,UINT dpi None)
HRESULT None None.EnumRecords([out] IEnumBitsPeerCacheRecords **ppEnum)
DWORD WINAPI mstlsapi.TLSKeyPackEnumBegin(_In_ TLS_HANDLE hHandle,_In_ DWORD dwSearchParm,_In_ BOOL bMatchAll,_In_ LSKeyPack *lpSearchParm,_Out_ PDWORD pdwErrCode)
BOOL WINAPI kernel32.InitOnceComplete(_Inout_ LPINIT_ONCE lpInitOnce,_In_ DWORD dwFlags,_In_opt_ LPVOID lpContext)
BOOL WINAPI advapi32.GetServiceDisplayName(_In_ SC_HANDLE hSCManager,_In_ LPCTSTR lpServiceName,_Out_opt_ LPTSTR lpDisplayName,_Inout_ LPDWORD lpcchBuffer)
BOOL WINAPI advapi32.GetServiceDisplayNameW(_In_ SC_HANDLE hSCManager,_In_ LPCTSTR lpServiceName,_Out_opt_ LPTSTR lpDisplayName,_Inout_ LPDWORD lpcchBuffer)
BOOL WINAPI advapi32.GetServiceDisplayNameA(_In_ SC_HANDLE hSCManager,_In_ LPCTSTR lpServiceName,_Out_opt_ LPTSTR lpDisplayName,_Inout_ LPDWORD lpcchBuffer)
protected void None.OnStylusButtonDown(StylusButtonEventArgs e None)
DWORD WINAPI kernel32.GetTimeZoneInformation(_Out_ LPTIME_ZONE_INFORMATION lpTimeZoneInformation)
public boolean None.Match(Object obj None)
HRESULT None None.get_NameResolver([out] IAzNameResolver **ppNameResolver)
BOOL WINAPI user32.AddClipboardFormatListener(_In_ HWND hwnd)
BOOL WINAPI ktmw32.CommitComplete(_In_ HANDLE EnlistmentHandle,_In_ PLARGE_INTEGER TmVirtualClock)
VOID CALLBACK None.CleanupGroupCancelCallback(_Inout_opt_ PVOID ObjectContext,_Inout_opt_ PVOID CleanupContext)
HRESULT None None.FindCorePropertiesPart(IOpcPackage *package None,IOpcPart **part None)
DWORD WINAPI clusapi.MoveClusterGroup(_In_ HGROUP hGroup,_In_opt_ HNODE hDestinationNode)
BOOL WINAPI kernel32.GetComputerNameEx(_In_ COMPUTER_NAME_FORMAT NameType,_Out_ LPTSTR lpBuffer,_Inout_ LPDWORD lpnSize)
BOOL WINAPI kernel32.GetComputerNameExW(_In_ COMPUTER_NAME_FORMAT NameType,_Out_ LPTSTR lpBuffer,_Inout_ LPDWORD lpnSize)
BOOL WINAPI kernel32.GetComputerNameExA(_In_ COMPUTER_NAME_FORMAT NameType,_Out_ LPTSTR lpBuffer,_Inout_ LPDWORD lpnSize)
HRESULT None None.ValidateSignature(IOpcDigitalSignatureManager* opcDigSigManager None,IOpcDigitalSignature* signature None,BOOL* isValid None,PCCERT_CONTEXT* signerCert None)
BOOL WINAPI ktmw32.RollbackTransactionAsync(_In_ HANDLE TransactionHandle)
uint32 None vdswmi.DefragAnalysis([out] boolean DefragRecommended,[out] object DefragAnalysis)
DWORD WINAPI kernel32.WaitForSingleObject(_In_ HANDLE hHandle,_In_ DWORD dwMilliseconds)
WINOLEAPI None ole32.CreateILockBytesOnHGlobal(_In_ HGLOBAL hGlobal,_In_ BOOL fDeleteOnRelease,_Out_ ILockBytes **ppLkbyt)
protected void None.OnGotKeyboardFocus(KeyboardFocusChangedEventArgs e None)
DNS_STATUS WINAPI dnsapi.DnsValidateName(_In_ PCTSTR pszName,_In_ DNS_NAME_FORMAT Format)
DNS_STATUS WINAPI dnsapi.DnsValidateName_W(_In_ PCTSTR pszName,_In_ DNS_NAME_FORMAT Format)
DNS_STATUS WINAPI dnsapi.DnsValidateName_A(_In_ PCTSTR pszName,_In_ DNS_NAME_FORMAT Format)
uint32 None cimwin32.GetSecurityDescriptor([out] Win32_SecurityDescriptor Descriptor)
public void None.Arrange(Rect finalRect None)
UINT None msi.MsiProvideQualifiedComponent(_In_ LPCTSTR szComponent,_In_ LPCTSTR szQualifier,_In_ DWORD dwInstallMode,_Out_ LPTSTR lpPathBuf,_Inout_ DWORD *pcchPathBuf)
UINT None msi.MsiProvideQualifiedComponentW(_In_ LPCTSTR szComponent,_In_ LPCTSTR szQualifier,_In_ DWORD dwInstallMode,_Out_ LPTSTR lpPathBuf,_Inout_ DWORD *pcchPathBuf)
UINT None msi.MsiProvideQualifiedComponentA(_In_ LPCTSTR szComponent,_In_ LPCTSTR szQualifier,_In_ DWORD dwInstallMode,_Out_ LPTSTR lpPathBuf,_Inout_ DWORD *pcchPathBuf)
INT_PTR None comctl32.PropertySheet(LPCPROPSHEETHEADER lppsph None)
INT_PTR None comctl32.PropertySheetW(LPCPROPSHEETHEADER lppsph None)
INT_PTR None comctl32.PropertySheetA(LPCPROPSHEETHEADER lppsph None)
BOOL WINAPI user32.DdeAbandonTransaction(_In_ DWORD idInst,_In_ HCONV hConv,_In_ DWORD idTransaction)
HRESULT None None.get_ISO9660InterchangeLevel([out] LONG *pVal)
BOOLEAN None None.FltCancelIo(_In_ PFLT_CALLBACK_DATA CallbackData)
SerializableAttribute None None.TypeConverterAttribute(System.UriTypeConverter None None)
DWORD None None.CreateBlob(HBLOB* phBlob None)
HRESULT None None.get_QueryWhereRestrictions([out None None,retval] LPWSTR *ppszRestrictions)
BOOLEAN None None.ExAcquireSharedWaitForExclusive(_Inout_ PERESOURCE Resource,_In_ BOOLEAN Wait)
PVOID None None.WdfMemoryGetBuffer(_In_ WDFMEMORY Memory,_Out_opt_ size_t *BufferSize)
HRESULT None None.Clone([out None None,retval] IXpsOMLinearGradientBrush **linearGradientBrush)
DWORD None None.MonthCal_HitTest(HWND hwndMC None,PMCHITTESTINFO pMCHitTest None)
void None wtwmiprov.Export([out] uint32 WTD)
HRESULT None None.GetComponentInfo([out] PVSSCOMPONENTINFO *ppInfo)
UINT_PTR CALLBACK None.FRHookProc(_In_ HWND hdlg,_In_ UINT uiMsg,_In_ WPARAM wParam,_In_ LPARAM lParam)
DWORD WINAPI None.ExpertSubmitEvent(HEXPERTKEY hExpertKey None,PNMEVENTDATA pExpertEvent None)
BOOL WINAPI kernel32.GetLogicalProcessorInformation(_Out_ PSYSTEM_LOGICAL_PROCESSOR_INFORMATION Buffer,_Inout_ PDWORD ReturnLength)
NET_API_STATUS None netapi32.NetDfsRemoveStdRoot(_In_ LPWSTR ServerName,_In_ LPWSTR RootShare,_In_ DWORD Flags)
LONG None None.FltCompareInstanceAltitudes(_In_ PFLT_INSTANCE Instance1,_In_ PFLT_INSTANCE Instance2)
BOOL WINAPI clfsw32.GetNextLogArchiveExtent(_In_ CLFS_LOG_ARCHIVE_CONTEXT pvArchiveContext,_Inout_ CLFS_ARCHIVE_DESCRIPTOR rgadExtent[],_In_ ULONG cDescriptors,_Out_ PULONG pcDescriptorsReturned)
DWORD None None.DetectSectorSize(WCHAR * devName,PSTORAGE_ACCESS_ALIGNMENT_DESCRIPTOR pAlignmentDescriptor None)
HRESULT None None.StringCchPrintf_lEx(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_Out_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ ... None)
HRESULT None None.StringCchPrintf_lExW(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_Out_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ ... None)
HRESULT None None.StringCchPrintf_lExA(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_Out_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ ... None)
HRESULT WINAPI dssec.DSCreateSecurityPage(_In_ LPCWSTR pwszObjectPath,_In_opt_ LPCWSTR pwszObjectClass,_In_ DWORD dwFlags,_Out_ HPROPSHEETPAGE *phPage,_In_opt_ PFNREADOBJECTSECURITY pfnReadSD,_In_opt_ PFNWRITEOBJECTSECURITY pfnWriteSD,_In_ LPARAM lpContext)
NTSTATUS None None.ZwOpenKeyEx(_Out_ PHANDLE KeyHandle,_In_ ACCESS_MASK DesiredAccess,_In_ POBJECT_ATTRIBUTES ObjectAttributes,_In_ ULONG OpenOptions)
HRESULT None None.MusicToMIDI(WORD wMusicValue None,DMUS_CHORD_KEY* pChord None,BYTE bPlayMode None,BYTE bChordLevel None,BYTE* pbMIDIValue None)
BOOL WINAPI kernel32.CopyFileTransacted(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName,_In_opt_ LPPROGRESS_ROUTINE lpProgressRoutine,_In_opt_ LPVOID lpData,_In_opt_ LPBOOL pbCancel,_In_ DWORD dwCopyFlags,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.CopyFileTransactedW(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName,_In_opt_ LPPROGRESS_ROUTINE lpProgressRoutine,_In_opt_ LPVOID lpData,_In_opt_ LPBOOL pbCancel,_In_ DWORD dwCopyFlags,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.CopyFileTransactedA(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName,_In_opt_ LPPROGRESS_ROUTINE lpProgressRoutine,_In_opt_ LPVOID lpData,_In_opt_ LPBOOL pbCancel,_In_ DWORD dwCopyFlags,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.GetDiskFreeSpaceEx(_In_opt_ LPCTSTR lpDirectoryName,_Out_opt_ PULARGE_INTEGER lpFreeBytesAvailable,_Out_opt_ PULARGE_INTEGER lpTotalNumberOfBytes,_Out_opt_ PULARGE_INTEGER lpTotalNumberOfFreeBytes)
BOOL WINAPI kernel32.GetDiskFreeSpaceExW(_In_opt_ LPCTSTR lpDirectoryName,_Out_opt_ PULARGE_INTEGER lpFreeBytesAvailable,_Out_opt_ PULARGE_INTEGER lpTotalNumberOfBytes,_Out_opt_ PULARGE_INTEGER lpTotalNumberOfFreeBytes)
BOOL WINAPI kernel32.GetDiskFreeSpaceExA(_In_opt_ LPCTSTR lpDirectoryName,_Out_opt_ PULARGE_INTEGER lpFreeBytesAvailable,_Out_opt_ PULARGE_INTEGER lpTotalNumberOfBytes,_Out_opt_ PULARGE_INTEGER lpTotalNumberOfFreeBytes)
HRESULT None None.get_publicId(BSTR *publicID None)
HRESULT None gpedit.ExportRSoPData(_In_ LPOLESTR lpNameSpace,_In_ LPOLESTR lpFileName)
HANDLE WINAPI msajapi.AllJoynConnectToBus(_In_opt_ PCWSTR connectionSpec)
BOOL WINAPI dbghelp.SymEnumerateModules64(_In_ HANDLE hProcess,_In_ PSYM_ENUMMODULES_CALLBACK64 EnumModulesCallback,_In_opt_ PVOID UserContext)
BOOL WINAPI dbghelp.SymEnumerateModulesW64(_In_ HANDLE hProcess,_In_ PSYM_ENUMMODULES_CALLBACK64 EnumModulesCallback,_In_opt_ PVOID UserContext)
BOOL WINAPI dbghelp.SymEnumerateModules64(_In_ HANDLE hProcess,_In_ PSYM_ENUMMODULES_CALLBACK64 EnumModulesCallback,_In_opt_ PVOID UserContext)
BOOL WINAPI kernel32.EnumResourceTypes(_In_opt_ HMODULE hModule,_In_ ENUMRESTYPEPROC lpEnumFunc,_In_ LONG_PTR lParam)
BOOL WINAPI kernel32.EnumResourceTypesW(_In_opt_ HMODULE hModule,_In_ ENUMRESTYPEPROC lpEnumFunc,_In_ LONG_PTR lParam)
BOOL WINAPI kernel32.EnumResourceTypesA(_In_opt_ HMODULE hModule,_In_ ENUMRESTYPEPROC lpEnumFunc,_In_ LONG_PTR lParam)
HRESULT None shell32.SetRelativePath(LPCTSTR pszPathRel None,DWORD dwReserved None)
HRESULT None None.GetCount([out None None,retval] UINT32 *count)
HWND WINAPI user32.SetParent(_In_ HWND hWndChild,_In_opt_ HWND hWndNewParent)
HRESULT WINAPI iscsidsc.SetIscsiTunnelModeOuterAddress(_In_opt_ PTCHAR InitiatorName,_In_ ULONG InitiatorPortNumber,_In_ PTCHAR DestinationAddress,_In_ PTCHAR OuterModeAddress,_In_ BOOLEAN Persist)
HRESULT WINAPI iscsidsc.SetIscsiTunnelModeOuterAddressW(_In_opt_ PTCHAR InitiatorName,_In_ ULONG InitiatorPortNumber,_In_ PTCHAR DestinationAddress,_In_ PTCHAR OuterModeAddress,_In_ BOOLEAN Persist)
HRESULT WINAPI iscsidsc.SetIscsiTunnelModeOuterAddressA(_In_opt_ PTCHAR InitiatorName,_In_ ULONG InitiatorPortNumber,_In_ PTCHAR DestinationAddress,_In_ PTCHAR OuterModeAddress,_In_ BOOLEAN Persist)
HRESULT WINAPI userenv.DeriveRestrictedAppContainerSidFromAppContainerSidAndRestrictedName(_In_ PSID psidAppContainerSid,_In_ PCWSTR pszRestrictedAppContainerName,_Out_ PSID *ppsidRestrictedAppContainerSid)
BOOL WINAPI None.FaxDevReportStatus(__in HANDLE FaxHandle,__out PFAX_DEV_STATUS FaxStatus,__in DWORD FaxStatusSize,__out LPDWORD FaxStatusSizeRequired)
DWORD None iphlpapi.DeleteIpForwardEntry(_In_ PMIB_IPFORWARDROW pRoute)
DWORD None kernel32.WriteTapemark(_In_ HANDLE hDevice,_In_ DWORD dwTapemarkType,_In_ DWORD dwTapemarkCount,_In_ BOOL bImmediate)
HRESULT None None.addCollection(IXMLDOMSchemaCollection * otherCollection)
HICON WINAPI user32.CreateIconIndirect(_In_ PICONINFO piconinfo)
HRESULT None None.CueSegmentAfterBand(IDirectMusicPerformance8* pPerf None,IDirectMusicSegment8* pBandSeg None,IDirectMusicSegment8* pStyleSeg None)
BOOL CALLBACK None.MprAdminAcceptNewConnection(_In_ RAS_CONNECTION_0 *pRasConnection0,_In_ RAS_CONNECTION_1 *pRasConnection1)
BOOL WINAPI user32.FreeDDElParam(_In_ UINT msg,_In_ LPARAM lParam)
BOOL WINAPI user32.ImpersonateDdeClientWindow(_In_ HWND hWndClient,_In_ HWND hWndServer)
uint32 None cscobj.TransitionOffline([in] string Path,[in] boolean Force,[in] uint32 Flags,[out] boolean OpenFiles)
BOOL None None.WlxScreenSaverNotify(_In_ PVOID pWlxContext,_Inout_ BOOL *pSecure)
HRESULT None qmgrprxy.GetLocalName([out] LPWSTR *ppName)
VOID None None.FreeRepairInfos(_In_ RepairInfo *pInfo,ULONG RepairCount None,BOOL bFreePointer None)
HRESULT WINAPI gamemode.GetExpandedResourceExclusiveCpuCount(_Out_ ULONG *exclusiveCpuCount)
BOOL WINAPI user32.ChangeWindowMessageFilter(_In_ UINT message,_In_ DWORD dwFlag)
LPVOID WINAPI kernel32.ConvertThreadToFiber(_In_opt_ LPVOID lpParameter)
HRESULT None None.Commit(BOOL fRetaining None,DWORD grfTC None,DWORD grfRM None)
BOOL None gdi32.EqualRgn(_In_ HRGN hSrcRgn1,_In_ HRGN hSrcRgn2)
BOOL WINAPI kernel32.CreateDirectoryEx(_In_ LPCTSTR lpTemplateDirectory,_In_ LPCTSTR lpNewDirectory,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes)
BOOL WINAPI kernel32.CreateDirectoryExW(_In_ LPCTSTR lpTemplateDirectory,_In_ LPCTSTR lpNewDirectory,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes)
BOOL WINAPI kernel32.CreateDirectoryExA(_In_ LPCTSTR lpTemplateDirectory,_In_ LPCTSTR lpNewDirectory,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes)
HANDLE WINAPI user32.GetProp(_In_ HWND hWnd,_In_ LPCTSTR lpString)
HANDLE WINAPI user32.GetPropW(_In_ HWND hWnd,_In_ LPCTSTR lpString)
HANDLE WINAPI user32.GetPropA(_In_ HWND hWnd,_In_ LPCTSTR lpString)
UINT None nddeapi.NDdeSetTrustedShare(_In_ LPTSTR lpszServer,_In_ LPTSTR lpszShareName,_In_ DWORD dwTrustOptions)
UINT None nddeapi.NDdeSetTrustedShareW(_In_ LPTSTR lpszServer,_In_ LPTSTR lpszShareName,_In_ DWORD dwTrustOptions)
UINT None nddeapi.NDdeSetTrustedShareA(_In_ LPTSTR lpszServer,_In_ LPTSTR lpszShareName,_In_ DWORD dwTrustOptions)
WINAPI None kernelbase.SetProcessValidCallTargets(_In_ HANDLE hProcess,_In_ PVOID VirtualAddress,_In_ SIZE_T RegionSize,_In_ ULONG NumberOfOffsets,_Inout_ PCFG_CALL_TARGET_INFO OffsetInformation)
VOID WINAPI kernel32.AcquireSRWLockExclusive(_Inout_ PSRWLOCK SRWLock)
BOOL CALLBACK None.Geo_EnumNameProc(_In_ PWSTR GeoName,LPARAM data None)
HRESULT None ole32.CoRegisterPSClsid(_In_ REFIID riid,_In_ REFCLSID rclsid)
HRESULT None None.UInt8Add(_In_ UINT8 u8Augend,_In_ UINT8 u8Addend,_Out_ UINT8 *pu8Result)
HRESULT WINAPI d3dcompiler_47.D3DDisassemble(in LPCVOID pSrcData,in SIZE_T SrcDataSize,in UINT Flags,in_opt LPCSTR szComments,out ID3DBlob ppDisassembly)
BOOL WINAPI authz.AuthzInstallSecurityEventSource(_In_ DWORD dwFlags,_In_ PAUTHZ_SOURCE_SCHEMA_REGISTRATION pRegistration)
HRESULT None None.GetFlags([out] EXPCMDFLAGS *pFlags)
HRESULT None None.GetCertificateEnumerator([out None None,retval] IOpcCertificateEnumerator **certificateEnumerator)
public Object None.ReadLocalValue(DependencyProperty dp None)
PTCHAR WINAPI dbghelp.SymGetHomeDirectory(_In_ DWORD type,_Out_ PTSTR dir,_In_ size_t size)
PTCHAR WINAPI dbghelp.SymGetHomeDirectoryW(_In_ DWORD type,_Out_ PTSTR dir,_In_ size_t size)
PTCHAR WINAPI dbghelp.SymGetHomeDirectory(_In_ DWORD type,_Out_ PTSTR dir,_In_ size_t size)
HRESULT None None.GetCreator([out None None,retval] LPWSTR *creator)
BOOL IMAGEAPI dbghelp.SymFromInlineContext(_In_ HANDLE hProcess,_In_ DWORD64 Address,_In_ ULONG InlineContext,_Out_opt_ PDWORD64 Displacement,_Inout_ PSYMBOL_INFOW Symbol)
BOOL IMAGEAPI dbghelp.SymFromInlineContextW(_In_ HANDLE hProcess,_In_ DWORD64 Address,_In_ ULONG InlineContext,_Out_opt_ PDWORD64 Displacement,_Inout_ PSYMBOL_INFOW Symbol)
BOOL IMAGEAPI dbghelp.SymFromInlineContext(_In_ HANDLE hProcess,_In_ DWORD64 Address,_In_ ULONG InlineContext,_Out_opt_ PDWORD64 Displacement,_Inout_ PSYMBOL_INFOW Symbol)
WNDPROC __stdcall atlthunk.AtlThunk_DataToCode(AtlThunkData_t * None)
BOOL WINAPI advapi32.LookupAccountSid(_In_opt_ LPCTSTR lpSystemName,_In_ PSID lpSid,_Out_opt_ LPTSTR lpName,_Inout_ LPDWORD cchName,_Out_opt_ LPTSTR lpReferencedDomainName,_Inout_ LPDWORD cchReferencedDomainName,_Out_ PSID_NAME_USE peUse)
BOOL WINAPI advapi32.LookupAccountSidW(_In_opt_ LPCTSTR lpSystemName,_In_ PSID lpSid,_Out_opt_ LPTSTR lpName,_Inout_ LPDWORD cchName,_Out_opt_ LPTSTR lpReferencedDomainName,_Inout_ LPDWORD cchReferencedDomainName,_Out_ PSID_NAME_USE peUse)
BOOL WINAPI advapi32.LookupAccountSidA(_In_opt_ LPCTSTR lpSystemName,_In_ PSID lpSid,_Out_opt_ LPTSTR lpName,_Inout_ LPDWORD cchName,_Out_opt_ LPTSTR lpReferencedDomainName,_Inout_ LPDWORD cchReferencedDomainName,_Out_ PSID_NAME_USE peUse)
NTSTATUS None None.ZwReadFile(_In_ HANDLE FileHandle,_In_opt_ HANDLE Event,_In_opt_ PIO_APC_ROUTINE ApcRoutine,_In_opt_ PVOID ApcContext,_Out_ PIO_STATUS_BLOCK IoStatusBlock,_Out_ PVOID Buffer,_In_ ULONG Length,_In_opt_ PLARGE_INTEGER ByteOffset,_In_opt_ PULONG Key)
NET_API_STATUS None netapi32.NetDfsSetStdContainerSecurity(_In_ LPWSTR MachineName,_In_ SECURITY_INFORMATION SecurityInformation,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor)
DWORD None kernel32.GetTapeParameters(_In_ HANDLE hDevice,_In_ DWORD dwOperation,_Out_ LPDWORD lpdwSize,_Out_ LPVOID lpTapeInformation)
HRESULT None msrdc.GetHashWindowSize([out] ULONG *hashWindowSize)
VOID None kernel32.QueryInterruptTimePrecise(_Out_ PULONGLONG lpInterruptTimePrecise)
void None None.Rollback(Enlistment enlistment None)
BOOL None sisbkup.SisFreeBackupStructure(_In_ PVOID sisBackupStructure)
HRESULT None sensorsapi.GetID([out] SENSOR_ID *pID)
DWORD WINAPI user32.GetGuiResources(_In_ HANDLE hProcess,_In_ DWORD uiFlags)
HRESULT WINAPI None.WindowsCompareStringOrdinal(_In_ HSTRING string1,_In_ HSTRING string2,_Out_ INT32 *result)
HRESULT None dcomp.CreateAnimation([out] IDCompositionAnimation **animation)
VOID None None.WDF_WMI_INSTANCE_CONFIG_INIT_PROVIDER_CONFIG(_Out_ PWDF_WMI_INSTANCE_CONFIG Config,_In_ PWDF_WMI_PROVIDER_CONFIG ProviderConfig)
BOOL CALLBACK None.EnumSymProc(PSYMBOL_INFO pSymInfo None,ULONG SymbolSize None,PVOID UserContext None)
BOOL None comctl32.RemoveWindowSubclass(_In_ HWND hWnd,_In_ SUBCLASSPROC pfnSubclass,_In_ UINT_PTR uIdSubclass)
uint32 None cscobj.DeleteItems([in] string Paths[],[in] uint32 Flags)
BOOL WINAPI user32.CloseWindowStation(_In_ HWINSTA hWinSta)
BOOL WINAPI wevtapi.EvtGetObjectArraySize(_In_ EVT_OBJECT_ARRAY_PROPERTY_HANDLE ObjectArray,_Out_ PDWORD ObjectArraySize)
LONG WINAPI advapi32.RegEnumKey(_In_ HKEY hKey,_In_ DWORD dwIndex,_Out_ LPTSTR lpName,_In_ DWORD cchName)
LONG WINAPI advapi32.RegEnumKeyW(_In_ HKEY hKey,_In_ DWORD dwIndex,_Out_ LPTSTR lpName,_In_ DWORD cchName)
LONG WINAPI advapi32.RegEnumKeyA(_In_ HKEY hKey,_In_ DWORD dwIndex,_Out_ LPTSTR lpName,_In_ DWORD cchName)
public Enlistment None.EnlistDurable(Guid resourceManagerIdentifier None,ISinglePhaseNotification singlePhaseNotification None,EnlistmentOptions enlistmentOptions None)
HRESULT None fltlib.FilterAttachAtAltitude(_In_ LPCWSTR lpFilterName,_In_ LPCWSTR lpVolumeName,_In_ LPCWSTR lpAltitude,_In_opt_ LPCWSTR lpInstanceName,_In_opt_ DWORD dwCreatedInstanceNameLength,_Out_opt_ LPWSTR lpCreatedInstanceName)
BOOL None shell32.DAD_DragMove(POINT pt None)
RPC_STATUS RPC_ENTRY rpcrt4.UuidCreate(UUID __RPC_FAR *Uuid)
NTSTATUS None None.ObReferenceObjectByPointer(_In_ PVOID Object,_In_ ACCESS_MASK DesiredAccess,_In_opt_ POBJECT_TYPE ObjectType,_In_ KPROCESSOR_MODE AccessMode)
BOOL WINAPI kernel32.BuildCommDCB(_In_ LPCTSTR lpDef,_Out_ LPDCB lpDCB)
BOOL WINAPI kernel32.BuildCommDCBW(_In_ LPCTSTR lpDef,_Out_ LPDCB lpDCB)
BOOL WINAPI kernel32.BuildCommDCBA(_In_ LPCTSTR lpDef,_Out_ LPDCB lpDCB)
LRESULT None None.MAKELRESULT(WORD wLow None,WORD wHigh None)
HRESULT WDSBPAPI wdsbp.WdsBpAddOption(_In_ HANDLE hHandle,_In_ ULONG uOption,_In_ ULONG uValueLen,_In_ PVOID pValue)
UINT WINAPI kernel32.GetSystemWow64Directory(_Out_ LPTSTR lpBuffer,_In_ UINT uSize)
UINT WINAPI kernel32.GetSystemWow64DirectoryW(_Out_ LPTSTR lpBuffer,_In_ UINT uSize)
UINT WINAPI kernel32.GetSystemWow64DirectoryA(_Out_ LPTSTR lpBuffer,_In_ UINT uSize)
HRESULT STDAPI srpapi.SrpCreateThreadNetworkContext(_In_ PCWSTR enterpriseId,_Out_ HTHREAD_NETWORK_CONTEXT *threadNetworkContext)
uint32 None netpeerdistcim.Set_BCSecretKey([in] string Passphrase,[in] boolean Force)
ULONG None advapi32.UnregisterTraceGuids(_In_ TRACEHANDLE RegistrationHandle)
protected Visual None.GetVisualChild(int index None)
NTSTATUS None None.IoInitializeTimer(_In_ PDEVICE_OBJECT DeviceObject,_In_ PIO_TIMER_ROUTINE TimerRoutine,_In_opt_ PVOID Context)
protected void None.OnStylusButtonDown(StylusButtonEventArgs e None)
protected void None.RemoveVisualChild(Visual child None)
DWORD WINAPI resutils.ResUtilStopResourceService(_In_ LPCWSTR pszServiceName)
HRESULT None fundisc.GetProviderInstanceID([out] WCHAR **ppszCoMemProviderInstanceID)
HRESULT None None.Clone([out] IEnumBitsPeerCacheRecords **ppEnum)
VOID None None.XMVectorGetIntByIndexPtr([out] uint32_t *x,XMVECTOR V None,size_t i None)
HRESULT None ole32.OleSetMenuDescriptor(_In_ HOLEMENU holemenu,_In_ HWND hwndFrame,_In_ HWND hwndActiveObject,_In_ LPOLEINPLACEFRAME lpFrame,_In_ LPOLEINPLACEACTIVEOBJECT lpActiveObj)
POINTS None None.MAKEPOINTS(DWORD dwValue None)
HRESULT None None.SendPMsg(DMUS_PMSG* pPMSG None)
DWORD APIENTRY kernel32.ReadThreadProfilingData(_In_ HANDLE PerformanceDataHandle,_In_ DWORD Flags,_Out_ PPERFORMANCE_DATA PerformanceData)
HRESULT None actxprxy.EnumDiscRecorders([out] IEnumDiscRecorders **ppEnum)
public boolean None.Match(Object obj None)
BOOL WINAPI kernel32.Wow64GetThreadContext(_In_ HANDLE hThread,_Inout_ PWOW64_CONTEXT lpContext)
HRESULT None None.GetWriterStatusCount([out] UINT *pcWriters)
DWORD WINAPI user32.CharUpperBuff(_Inout_ LPTSTR lpsz,_In_ DWORD cchLength)
DWORD WINAPI user32.CharUpperBuffW(_Inout_ LPTSTR lpsz,_In_ DWORD cchLength)
DWORD WINAPI user32.CharUpperBuffA(_Inout_ LPTSTR lpsz,_In_ DWORD cchLength)
protected void None.OnKeyDown(KeyEventArgs e None)
HRESULT None None.ShouldIndexItemContent([out] BOOL *pfIndexContent)
NTSTATUS None None.IoCallDriver(_In_ PDEVICE_OBJECT DeviceObject,_Inout_ PIRP Irp)
HWND WINAPI user32.SetFocus(_In_opt_ HWND hWnd)
BOOL WINAPI kernel32.RemoveDirectoryTransacted(_In_ LPCTSTR lpPathName,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.RemoveDirectoryTransactedW(_In_ LPCTSTR lpPathName,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.RemoveDirectoryTransactedA(_In_ LPCTSTR lpPathName,_In_ HANDLE hTransaction)
void None None.longjmp(jmp_buf env None,int value None)
DWORD WINAPI sechost.SubscribeServiceChangeNotifications(_In_ SC_HANDLE hService,_In_ SC_EVENT_TYPE eEventType,_In_ PSC_NOTIFICATION_CALLBACK pCallback,_In_opt_ PVOID pCallbackContext,_Out_ PSC_NOTIFICATION_REGISTRATION *pSubscription)
HRESULT None srmsvc.EnumActions([out] IFsrmCollection **actions)
DWORD WINAPI user32.InSendMessageEx(_Reserved_ LPVOID lpReserved)
NTSTATUS None None.ZwPowerInformation(_In_ POWER_INFORMATION_LEVEL InformationLevel,_In_opt_ PVOID InputBuffer,_In_ ULONG InputBufferLength,_Out_opt_ PVOID OutputBuffer,_In_ ULONG OutputBufferLength)
public boolean None.Equals(Object obj None)
HRESULT WDSBPAPI wdsbp.WdsBpGetOptionBuffer(_In_ HANDLE hHandle,_In_ ULONG uBufferLen,_Out_ PVOID pBuffer,_Out_ PULONG puBytes)
HRESULT None None.CollectLinkTargets([out None None,retval] IXpsOMNameCollection **linkTargets)
BOOL WINAPI fmapi.DetectEncryptedVolume(_In_ PFILE_RESTORE_CONTEXT Context,_Out_ PDWORD VolumeEncryptionInfo)
LPVOID WINAPI kernel32.ConvertThreadToFiber(_In_opt_ LPVOID lpParameter)
uint32 None cimwin32.SetLaunchSecurityDescriptor([in] Win32_SecurityDescriptor Descriptor)
BOOL WINAPI wecapi.EcGetSubscriptionRunTimeStatus(_In_ LPCWSTR SubscriptionName,_In_ EC_SUBSCRIPTION_RUNTIME_STATUS_INFO_ID StatusInfoId,_In_ LPCWSTR EventSourceName,_In_ DWORD Flags,_In_ DWORD StatusValueBufferSize,_In_ PEC_VARIANT StatusValueBuffer,_Out_ PDWORD StatusValueBufferUsed)
HRESULT None None.GetAlternateLocation([out] BSTR *pbstrAlternateLocation)
HRESULT None msdrm.DRMActivate(_In_ DRMHSESSION hClient,_In_ UINT uFlags,_In_ UINT uLangID,_In_ DRM_ACTSERV_INFO *pActServInfo,_In_ VOID *pvContext,_In_ HWND hParentWnd)
HRESULT None None.GetACTs([out] IEnhancedStorageACT ***pppIEnhancedStorageACTs,ULONG *pcEnhancedStorageACTs None)
HRESULT None oleaut32.GetRecordInfoFromTypeInfo(_In_ ITypeInfo *pTypeInfo,_Out_ IRecordInfo **ppRecInfo)
BOOL WINAPI kernel32.TransactNamedPipe(_In_ HANDLE hNamedPipe,_In_ LPVOID lpInBuffer,_In_ DWORD nInBufferSize,_Out_ LPVOID lpOutBuffer,_In_ DWORD nOutBufferSize,_Out_ LPDWORD lpBytesRead,_Inout_opt_ LPOVERLAPPED lpOverlapped)
VOID None None.KeQueryTickCount(_Out_ PLARGE_INTEGER TickCount)
protected void None.OnLostStylusCapture(StylusEventArgs e None)
DWORD PXEAPI wdspxe.PxeDhcpv6AppendOptionRaw(_Inout_ PVOID pReply,_In_ ULONG cbReply,_Inout_ PULONG pcbReplyUsed,_In_ USHORT cbBuffer,_In_ PVOID pBuffer)
BOOL WINAPI wintrust.CryptCATPersistStore(_In_ HANDLE hCatalog)
HRESULT None None.GetMaximumCacheSize([out] DWORD *pBytes)
uint32 None nettcpip.RequestStateChange([in] uint16 RequestedState,[out] CIM_ConcreteJob Job,[in] datetime TimeoutPeriod)
BOOL CALLBACK None.PaintHook(HWND hwndDlg None,UINT uMsg None,WPARAM wParam None,LPARAM lParam None)
HRESULT None None.TMDown(void None None)
uint32 None ddpwmi.Create([in] string Name,[in] uint32 Type,[in] boolean Disable,[in] datetime Start,[in] uint32 DurationHours,[in] sint32 Days[],[in] boolean StopWhenSystemBusy,[in] uint32 Memory,[in] uint32 Cores,[in] uint32 Priority,[in] uint32 InputOutputThrottle,[in] uint32 InputOutputThrottleLevel,[in] boolean Full,[in] boolean ReadOnly,[out] MSFT_DedupJobSchedule DedupJobSchedule)
HRESULT None None.SetAllParameters(LPCDS3DLISTENER pcListener None,DWORD dwApply None)
LPTSTR WINAPI user32.CharNext(_In_ LPCTSTR lpsz)
LPTSTR WINAPI user32.CharNextW(_In_ LPCTSTR lpsz)
LPTSTR WINAPI user32.CharNextA(_In_ LPCTSTR lpsz)
HRESULT None None.CancelLink(DWORD dwLink None)
HRESULT None azroles.get_NonMembers([out] VARIANT *pvarProp)
BOOLEAN None None.ExAcquireSharedWaitForExclusive(_Inout_ PERESOURCE Resource,_In_ BOOLEAN Wait)
PIO_STACK_LOCATION None None.IoGetNextIrpStackLocation(_In_ PIRP Irp)
BOOL None None.EnumMonitors(_In_ LPTSTR pName,_In_ DWORD Level,_Out_ LPBYTE pMonitors,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded,_Out_ LPDWORD pcReturned)
BOOL None None.EnumMonitorsW(_In_ LPTSTR pName,_In_ DWORD Level,_Out_ LPBYTE pMonitors,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded,_Out_ LPDWORD pcReturned)
BOOL None None.EnumMonitorsA(_In_ LPTSTR pName,_In_ DWORD Level,_Out_ LPBYTE pMonitors,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded,_Out_ LPDWORD pcReturned)
HRESULT None None.SetCustomResponseStream(ISequentialStream *pSequentialStream None)
LRESULT None None.Button_SetState(HWND hwndCtl None,BOOL state None)
protected void None.OnMouseLeftButtonDown(MouseButtonEventArgs e None)
BOOL WINAPI kernel32.AddSIDToBoundaryDescriptor(_Inout_ HANDLE *BoundaryDescriptor,_In_ PSID RequiredSid)
HRESULT None None.setBurnVerification(IDiscFormat2Data *DataWriter None,IMAPI_BURN_VERIFICATION_LEVEL VerificationLevel None)
BOOL WINAPI magnification.MagSetFullscreenColorEffect(_In_ PMAGCOLOREFFECT pEffect)
SERVICE_STATUS_HANDLE WINAPI advapi32.RegisterServiceCtrlHandlerEx(_In_ LPCTSTR lpServiceName,_In_ LPHANDLER_FUNCTION_EX lpHandlerProc,_In_opt_ LPVOID lpContext)
SERVICE_STATUS_HANDLE WINAPI advapi32.RegisterServiceCtrlHandlerExW(_In_ LPCTSTR lpServiceName,_In_ LPHANDLER_FUNCTION_EX lpHandlerProc,_In_opt_ LPVOID lpContext)
SERVICE_STATUS_HANDLE WINAPI advapi32.RegisterServiceCtrlHandlerExA(_In_ LPCTSTR lpServiceName,_In_ LPHANDLER_FUNCTION_EX lpHandlerProc,_In_opt_ LPVOID lpContext)
LPSTR WINAPI user32.CharNextExA(_In_ WORD CodePage,_In_ LPCSTR lpCurrentChar,_In_ DWORD dwFlags)
LPSTR WINAPI user32.CharNextExA(_In_ WORD CodePage,_In_ LPCSTR lpCurrentChar,_In_ DWORD dwFlags)
BOOL None None.AddPrinterDriver(_In_ LPTSTR pName,_In_ DWORD Level,_In_ LPBYTE pDriverInfo)
BOOL None None.AddPrinterDriverW(_In_ LPTSTR pName,_In_ DWORD Level,_In_ LPBYTE pDriverInfo)
BOOL None None.AddPrinterDriverA(_In_ LPTSTR pName,_In_ DWORD Level,_In_ LPBYTE pDriverInfo)
public void None.Arrange(Rect finalRect None)
UINT None msi.MsiOpenProduct(_In_ LPCTSTR szProduct,_Out_ MSIHANDLE *hProduct)
UINT None msi.MsiOpenProductW(_In_ LPCTSTR szProduct,_Out_ MSIHANDLE *hProduct)
UINT None msi.MsiOpenProductA(_In_ LPCTSTR szProduct,_Out_ MSIHANDLE *hProduct)
HRESULT None None.get_BootImageOptions([out] IBootOptions **pVal)
DWORD WINAPI credui.CredUIParseUserName(_In_ PCTSTR pszUserName,_Out_ PTSTR pszUser,_In_ ULONG ulUserMaxChars,_Out_ PTSTR pszDomain,_In_ ULONG ulDomainMaxChars)
DWORD WINAPI credui.CredUIParseUserNameW(_In_ PCTSTR pszUserName,_Out_ PTSTR pszUser,_In_ ULONG ulUserMaxChars,_Out_ PTSTR pszDomain,_In_ ULONG ulDomainMaxChars)
DWORD WINAPI credui.CredUIParseUserNameA(_In_ PCTSTR pszUserName,_Out_ PTSTR pszUser,_In_ ULONG ulUserMaxChars,_Out_ PTSTR pszDomain,_In_ ULONG ulDomainMaxChars)
LPVOID WINAPI kernel32.MapViewOfFile(_In_ HANDLE hFileMappingObject,_In_ DWORD dwDesiredAccess,_In_ DWORD dwFileOffsetHigh,_In_ DWORD dwFileOffsetLow,_In_ SIZE_T dwNumberOfBytesToMap)
UINT None msi.MsiDatabaseGetPrimaryKeys(_In_ MSIHANDLE hDatabase,_In_ LPCTSTR szTableName,_Out_ MSIHANDLE *phRecord)
UINT None msi.MsiDatabaseGetPrimaryKeysW(_In_ MSIHANDLE hDatabase,_In_ LPCTSTR szTableName,_Out_ MSIHANDLE *phRecord)
UINT None msi.MsiDatabaseGetPrimaryKeysA(_In_ MSIHANDLE hDatabase,_In_ LPCTSTR szTableName,_Out_ MSIHANDLE *phRecord)
EVT_HANDLE WINAPI wevtapi.EvtSubscribe(_In_ EVT_HANDLE Session,_In_ HANDLE SignalEvent,_In_ LPCWSTR ChannelPath,_In_ LPCWSTR Query,_In_ EVT_HANDLE Bookmark,_In_ PVOID context,_In_ EVT_SUBSCRIBE_CALLBACK Callback,_In_ DWORD Flags)
BOOL WINAPI None.RegisterDialogClasses(hInst None None)
HRESULT None None.GetRelationshipSet([out None None,retval] IOpcRelationshipSet **relationshipSet)
NTSTATUS None None.FltInsertExtraCreateParameter(_In_ PFLT_FILTER Filter,_Inout_ PECP_LIST EcpList,_Inout_ PVOID EcpContext)
protected void None.AddLogicalChild(Object child None)
BOOL None kernel32.SetUserGeoID(_In_ GEOID GeoId)
public DependentTransaction None.DependentClone(DependentCloneOption cloneOption None)
HRESULT None None.GetMatchingVolume([out] LPCWSTR *pszVolume)
BYTE None None.MCI_TMSF_SECOND(DWORD dwTMSF None)
u_long WSAAPI ws2_32.ntohl(_In_ u_long netlong)
HRESULT None qmgrprxy.GetType([out] BG_JOB_TYPE *pJobType)
BOOL WINAPI authz.AuthzFreeResourceManager(_In_ AUTHZ_RESOURCE_MANAGER_HANDLE AuthzResourceManager)
HRESULT None None.StringCbVPrintf(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszFormat,_In_ va_list argList)
HRESULT None None.StringCbVPrintfW(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszFormat,_In_ va_list argList)
HRESULT None None.StringCbVPrintfA(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszFormat,_In_ va_list argList)
PKEVENT None None.IoCreateSynchronizationEvent(_In_ PUNICODE_STRING EventName,_Out_ PHANDLE EventHandle)
BOOL WINAPI kernel32.GetCommMask(_In_ HANDLE hFile,_Out_ LPDWORD lpEvtMask)
VOID None None.IoStartNextPacket(_In_ PDEVICE_OBJECT DeviceObject,_In_ BOOLEAN Cancelable)
uint32 None cscobj.Enable([in] boolean Enable,[out] boolean RebootRequired)
HRESULT None ole32.CoCreateInstance(_In_ REFCLSID rclsid,_In_ LPUNKNOWN pUnkOuter,_In_ DWORD dwClsContext,_In_ REFIID riid,_Out_ LPVOID *ppv)
HINSTANCE None shell32.ShellExecute(_In_opt_ HWND hwnd,_In_opt_ LPCTSTR lpOperation,_In_ LPCTSTR lpFile,_In_opt_ LPCTSTR lpParameters,_In_opt_ LPCTSTR lpDirectory,_In_ INT nShowCmd)
HINSTANCE None shell32.ShellExecuteW(_In_opt_ HWND hwnd,_In_opt_ LPCTSTR lpOperation,_In_ LPCTSTR lpFile,_In_opt_ LPCTSTR lpParameters,_In_opt_ LPCTSTR lpDirectory,_In_ INT nShowCmd)
HINSTANCE None shell32.ShellExecuteA(_In_opt_ HWND hwnd,_In_opt_ LPCTSTR lpOperation,_In_ LPCTSTR lpFile,_In_opt_ LPCTSTR lpParameters,_In_opt_ LPCTSTR lpDirectory,_In_ INT nShowCmd)
NTSTATUS WINAPI ncrypt.NCryptStreamClose(_In_ NCRYPT_STREAM_HANDLE hStream)
HRESULT None None.PlaySegment(IDirectMusicSegment* pSegment None,DWORD dwFlags None,__int64 i64StartTime None,IDirectMusicSegmentState** ppSegmentState None)
MMRESULT None winmm.midiOutReset(HMIDIOUT hmo None)
BOOL WINAPI None.FaxDevAbortOperation(__in HANDLE FaxHandle)
HRESULT None shell32.SHEmptyRecycleBin(_In_opt_ HWND hwnd,_In_opt_ LPCTSTR pszRootPath,DWORD dwFlags None)
HRESULT None shell32.SHEmptyRecycleBinW(_In_opt_ HWND hwnd,_In_opt_ LPCTSTR pszRootPath,DWORD dwFlags None)
HRESULT None shell32.SHEmptyRecycleBinA(_In_opt_ HWND hwnd,_In_opt_ LPCTSTR pszRootPath,DWORD dwFlags None)
BOOL None None.CheckProductSuite(WORD wSuite None)
BOOL WINAPI user32.TranslateMDISysAccel(_In_ HWND hWndClient,_In_ LPMSG lpMsg)
STDAPI None wsclient.RemoveDeveloperLicense(_In_opt_ HWND hwndParent)
NTSTATUS None None.FltCreateFileEx(_In_ PFLT_FILTER Filter,_In_opt_ PFLT_INSTANCE Instance,_Out_ PHANDLE FileHandle,_Out_ PFILE_OBJECT *FileObject,_In_ ACCESS_MASK DesiredAccess,_In_ POBJECT_ATTRIBUTES ObjectAttributes,_Out_ PIO_STATUS_BLOCK IoStatusBlock,_In_opt_ PLARGE_INTEGER AllocationSize,_In_ ULONG FileAttributes,_In_ ULONG ShareAccess,_In_ ULONG CreateDisposition,_In_ ULONG CreateOptions,_In_opt_ PVOID EaBuffer,_In_ ULONG EaLength,_In_ ULONG Flags)
LPVOID WINAPI None.ExpertReallocMemory(HEXPERTKEY hExpertKey None,LPVOID pOriginalMemory None,SIZE_T nBytes None,LPDWORD pError None)
HRESULT None shell32.SetPath(LPCTSTR pszFile None)
public void None.OnEndPrint(PrintDocument document None,PrintEventArgs e None)
HRESULT WINAPI ole32.CoGetApartmentType(_Out_ APTTYPE *pAptType,_Out_ APTTYPEQUALIFIER *pAptQualifier)
public None None.DistributedTransactionPermissionAttribute(SecurityAction action None)
HRESULT None None.GetResolvedTime(REFERENCE_TIME rtTime None,REFERENCE_TIME* prtResolved None,DWORD dwTimeResolveFlags None)
NTSTATUS None None.ZwQueryKey(_In_ HANDLE KeyHandle,_In_ KEY_INFORMATION_CLASS KeyInformationClass,_Out_opt_ PVOID KeyInformation,_In_ ULONG Length,_Out_ PULONG ResultLength)
HRESULT None None.GetBandwidthSharingCount([out] DWORD *pcBS)
HRESULT None None.ReleaseObject(IUnknown * pObject)
protected void None.OnGotMouseCapture(MouseEventArgs e None)
HRESULT None None.EnumerateItems(IWiaItem *pWiaItem None)
HRESULT None None.GetHelpFile([out] BSTR *pBstrHelpFile)
MMRESULT None msacm32.acmFormatSuggest(HACMDRIVER had None,LPWAVEFORMATEX pwfxSrc None,LPWAVEFORMATEX pwfxDst None,DWORD cbwfxDst None,DWORD fdwSuggest None)
BOOL WINAPI dbghelp.SymEnumProcesses(_In_ PSYM_ENUMPROCESSES_CALLBACK EnumProcessesCallback,_In_ PVOID UserContext)
HRESULT None None.WordAdd(_In_ WORD wAugend,_In_ WORD wAddend,_Out_ WORD *pwResult)
protected void None.OnPreviewMouseRightButtonDown(MouseButtonEventArgs e None)
SIZE_T WINAPI kernel32.HeapSize(_In_ HANDLE hHeap,_In_ DWORD dwFlags,_In_ LPCVOID lpMem)
public String None.GetString(String name None,CultureInfo culture None)
void None None.Rollback(Enlistment enlistment None)
VOID WINAPI kernel32.CloseThreadpoolTimer(_Inout_ PTP_TIMER pti)
HRESULT WINAPI dismapi.DismRemovePackage(_In_ DismSession Session,_In_ PCWSTR Identifier,_In_ DismPackageIdentifier PackageIdentifier,_In_opt_ HANDLE CancelEvent,_In_opt_ DISM_PROGRESS_CALLBACK Progress,_In_opt_ PVOID UserData)
void None None.Store(in uint address,in uint value)
BOOL None dxva2.GetMonitorRedGreenOrBlueGain(_In_ HANDLE hMonitor,_In_ MC_GAIN_TYPE gtGainType,_Out_ LPDWORD pdwMinimumGain,_Out_ LPDWORD pdwCurrentGain,_Out_ LPDWORD pdwMaximumGain)
HRESULT None None.ConnectToLogicalSensor(PCWSTR* wszHardwareID None,GUID guidLogicalID None)
HRESULT None None.ExistsFolder(BSTR folderPath None,VARIANT_BOOL *exists None)
HRESULT None None.put_JobCopiesAllDocuments([in] ULONG ulJobCopiesAllDocuments)
INT_PTR WINAPI user32.DialogBoxParam(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpTemplateName,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc,_In_ LPARAM dwInitParam)
INT_PTR WINAPI user32.DialogBoxParamW(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpTemplateName,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc,_In_ LPARAM dwInitParam)
INT_PTR WINAPI user32.DialogBoxParamA(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpTemplateName,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc,_In_ LPARAM dwInitParam)
protected GeometryHitTestResult None.HitTestCore(GeometryHitTestParameters hitTestParameters None)
BOOL WINAPI None.WIMExtractImagePath(HANDLE hImage None,PWSTR pszImagePath None,PWSTR pszDestinationPath None,DWORD dwExtractFlags None)
BOOL WINAPI kernel32.UnregisterWait(_In_ HANDLE WaitHandle)
DWORD None None.GetNPPMacTypeAsNumber(HBLOB hBlob None,LPDWORD lpMacType None)
uint32 None smiscsitargetprov.GetSupportedParityLayouts([out] uint16 ParityLayout[])
LONG TSPIAPI None.TSPI_providerInit(DWORD dwTSPIVersion None,DWORD dwPermanentProviderID None,DWORD dwLineDeviceIDBase None,DWORD dwPhoneDeviceIDBase None,DWORD_PTR dwNumLines None,DWORD_PTR dwNumPhones None,ASYNC_COMPLETION lpfnCompletionProc None,LPDWORD lpdwTSPIOptions None)
DWORD None gdi32.GetRegionData(_In_ HRGN hRgn,_In_ DWORD dwCount,_Out_ LPRGNDATA lpRgnData)
HRESULT STDMETHODCALLTYPE None.GetTotalStatistics(LPSTATISTICS lpStats None,BOOL fClearAfterReading None)
BOOL None spoolss.ClosePrinter(_In_ HANDLE hPrinter)
BOOL None d2d1.IsBufferPrecisionSupported(D2D1_BUFFER_PRECISION bufferPrecision None)
NTSTATUS None None.FltGetFileNameInformation(_In_ PFLT_CALLBACK_DATA CallbackData,_In_ FLT_FILE_NAME_OPTIONS NameOptions,_Out_ PFLT_FILE_NAME_INFORMATION *FileNameInformation)
HRESULT None srmsvc.EnumReports([out] IFsrmCollection **reports)
HRESULT None msdrm.DRMCreateBoundLicense(_In_ DRMENVHANDLE hEnv,_In_ DRMBOUNDLICENSEPARAMS *pParams,_In_ PWSTR wszLicenseChain,_Out_ DRMHANDLE *phBoundLicense,_Out_ DRMHANDLE *phErrorLog)
UINT None oledlg.OleUIBusy(_In_ LPOLEUIBUSY lpBZ)
UINT None oledlg.OleUIBusyW(_In_ LPOLEUIBUSY lpBZ)
UINT None oledlg.OleUIBusyA(_In_ LPOLEUIBUSY lpBZ)
public boolean None.Match(Object obj None)
HRESULT None windowscodecs.IWICBitmapFrameEncode_SetThumbnail_Proxy(_In_ IWICBitmapFrameEncode *THIS_PTR,_In_ IWICBitmapSource *pIThumbnail)
HRESULT None oleaut32.DispGetParam(_In_ DISPPARAMS *pdispparams,UINT position None,VARTYPE vtTarg None,_Out_ VARIANT *pvarResult,_Out_opt_ UINT *puArgErr)
VOID WINAPI None.EventRecordCallback(_In_ PEVENT_RECORD EventRecord)
VOID None None.IoAssignArcName(_In_ PUNICODE_STRING ArcName,_In_ PUNICODE_STRING DeviceName)
DWORD WINAPI shlwapi.SHGetAssocKeys(_In_ IQueryAssociations *pqa,_Out_ HKEY *rgKeys,DWORD cKeys None)
HRESULT None None.GetRelationshipSigningOption([out None None,retval] OPC_RELATIONSHIPS_SIGNING_OPTION *relationshipSigningOption)
HRESULT None None.ShouldIndexItemContent([out] BOOL *pfIndexContent)
HRESULT None msdrm.DRMGetUnboundLicenseAttribute(_In_ DRMQUERYHANDLE hQueryRoot,_In_ PWSTR wszAttributeType,_In_ UINT iWhich,_Out_ DRMENCODINGTYPE *peEncoding,_Inout_ UINT *pcBuffer,_Out_ BYTE *pbBuffer)
protected void None.RemoveVisualChild(Visual child None)
HRESULT None None.EnumAdapters1(UINT Adapter None,[out] IDXGIAdapter1 **ppAdapter)
VOID None None.IoReleaseRemoveLockAndWait(_In_ PIO_REMOVE_LOCK RemoveLock,_In_ PVOID Tag)
HANDLE None wtsapi32.WTSVirtualChannelOpenEx(_In_ DWORD SessionId,_In_ LPSTR pVirtualName,_In_ DWORD flags)
BOOL WINAPI kernel32.EnumProcessModules(_In_ HANDLE hProcess,_Out_ HMODULE *lphModule,_In_ DWORD cb,_Out_ LPDWORD lpcbNeeded)
BOOL WINAPI crypt32.CertGetEnhancedKeyUsage(_In_ PCCERT_CONTEXT pCertContext,_In_ DWORD dwFlags,_Out_ PCERT_ENHKEY_USAGE pUsage,_Inout_ DWORD *pcbUsage)
public boolean None.ShouldSerializeInlines(XamlDesignerSerializationManager manager None)
ULONG None None.KeQueryMaximumProcessorCountEx(_In_ USHORT GroupNumber)
VOID CALLBACK None.WaitOrTimerCallback(_In_ PVOID lpParameter,_In_ BOOLEAN TimerOrWaitFired)
HRESULT None None.Create(GUID * pguidRM,CHAR * pszRMName,IResourceManagerSink * pIResMgrSink,IResourceManager ** ppResMgr)
WINAPI None clusapi.MoveClusterGroupEx(_In_ HGROUP hGroup,_In_opt_ HNODE hDestinationNode,_In_ DWORD dwMoveFlags,_In_opt_ LPBYTE lpInBuffer,_In_ DWORD cbInBufferSize)
NTSTATUS None None.ExCreateCallback(_Out_ PCALLBACK_OBJECT *CallbackObject,_In_ POBJECT_ATTRIBUTES ObjectAttributes,_In_ BOOLEAN Create,_In_ BOOLEAN AllowMultipleCallbacks)
NTSTATUS None None.FltGetDestinationFileNameInformation(_In_ PFLT_INSTANCE Instance,_In_ PFILE_OBJECT FileObject,_In_opt_ HANDLE RootDirectory,_In_ PWSTR FileName,_In_ ULONG FileNameLength,_In_ FLT_FILE_NAME_OPTIONS NameOptions,_Out_ PFLT_FILE_NAME_INFORMATION *RetFileNameInformation)
FLT_PREOP_CALLBACK_STATUS None None.FltOplockFsctrl(_In_ POPLOCK Oplock,_In_ PFLT_CALLBACK_DATA CallbackData,_In_ ULONG OpenCount)
HRESULT None qmgrprxy.GetProgress([out] BG_JOB_PROGRESS *pProgress)
DWORD PXEAPI wdspxe.PxeDhcpAppendOption(_Inout_ PVOID pReplyPacket,_In_ ULONG uMaxReplyPacketLen,_Inout_ PULONG puReplyPacketLen,_In_ BYTE bOption,_In_ BYTE bOptionLen,_In_ PVOID pValue)
HRESULT None None.GetItemType([out] LONG *pItemType)
BOOL WINAPI user32.SetUserObjectSecurity(_In_ HANDLE hObj,_In_ PSECURITY_INFORMATION pSIRequested,_In_ PSECURITY_DESCRIPTOR pSID)
public boolean None.Match(Object obj None)
MMRESULT None winmm.timeGetDevCaps(LPTIMECAPS ptc None,UINT cbtc None)
VOID None None.IoRemoveShareAccess(_In_ PFILE_OBJECT FileObject,_Inout_ PSHARE_ACCESS ShareAccess)
VOID WINAPI kernel32.ExitProcess(_In_ UINT uExitCode)
PIDLIST_ABSOLUTE None shell32.SHBrowseForFolder(_In_ LPBROWSEINFO lpbi)
PIDLIST_ABSOLUTE None shell32.SHBrowseForFolderW(_In_ LPBROWSEINFO lpbi)
PIDLIST_ABSOLUTE None shell32.SHBrowseForFolderA(_In_ LPBROWSEINFO lpbi)
VOID WINAPI advapi32.BuildTrusteeWithName(_Inout_ PTRUSTEE pTrustee,_In_opt_ LPTSTR pName)
VOID WINAPI advapi32.BuildTrusteeWithNameW(_Inout_ PTRUSTEE pTrustee,_In_opt_ LPTSTR pName)
VOID WINAPI advapi32.BuildTrusteeWithNameA(_Inout_ PTRUSTEE pTrustee,_In_opt_ LPTSTR pName)
HRESULT __cdecl comsvcs.GetObjectContext(_Out_ IObjectContext **ppInstanceContext)
HRESULT None None.GetProperties([out] VDS_ISCSI_TARGET_PROP *pTargetProp)
BOOL None None.IS_ERROR(HRESULT Status None)
HRESULT STDMETHODCALLTYPE None.GetControlState(BOOL* IsRunnning None,BOOL* IsPaused None)
BOOL WINAPI kernel32.GetNamedPipeClientSessionId(_In_ HANDLE Pipe,_Out_ PULONG ClientSessionId)
HWND WINAPI user32.CreateDialog(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc)
HWND WINAPI user32.CreateDialogW(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc)
HWND WINAPI user32.CreateDialogA(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc)
public Object None.Invoke(DispatcherPriority priority None,Delegate method None,Object arg None)
HRESULT None srmsvc.get_Name([out] BSTR *name)
public void None.Resume(FrameworkContentElement containingObject None)
HRESULT None None.GetAuthorizationState([out] ACT_AUTHORIZATION_STATE *pState)
HRESULT None None.GetSecurityCallContext([out] ISecurityCallContext **ppObject)
BOOL WINAPI kernel32.GetThreadSelectorEntry(_In_ HANDLE hThread,_In_ DWORD dwSelector,_Out_ LPLDT_ENTRY lpSelectorEntry)
BOOL None None.GetPrinterDriverDirectory(_In_ LPTSTR pName,_In_ LPTSTR pEnvironment,_In_ DWORD Level,_Out_ LPBYTE pDriverDirectory,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded)
BOOL None None.GetPrinterDriverDirectoryW(_In_ LPTSTR pName,_In_ LPTSTR pEnvironment,_In_ DWORD Level,_Out_ LPBYTE pDriverDirectory,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded)
BOOL None None.GetPrinterDriverDirectoryA(_In_ LPTSTR pName,_In_ LPTSTR pEnvironment,_In_ DWORD Level,_Out_ LPBYTE pDriverDirectory,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded)
HPROPSHEETPAGE None comctl32.CreatePropertySheetPage(LPCPROPSHEETPAGE lppsp None)
HPROPSHEETPAGE None comctl32.CreatePropertySheetPageW(LPCPROPSHEETPAGE lppsp None)
HPROPSHEETPAGE None comctl32.CreatePropertySheetPageA(LPCPROPSHEETPAGE lppsp None)
public void None.EndCommit(IAsyncResult asyncResult None)
BOOL WINAPI user32.HideCaret(_In_opt_ HWND hWnd)
BOOL WINAPI kernel.GetDisplayAutoRotationPreferences(_Out_ PAR_STATE pState)
RESULT None None.GetObjectInPath(DWORD dwPChannel None,DWORD dwStage None,DWORD dwBuffer None,REFGUID guidObject None,DWORD dwIndex None,REFGUID iidInterface None,void ** ppObject)
protected void None.OnRowUpdated(RowUpdatedEventArgs value None)
HRESULT None None.GetPartitionId([out] GUID *pGuid)
BOOL WINAPI wecapi.EcDeleteSubscription(_In_ LPCWSTR SubscriptionName,_In_ DWORD Flags)
HRESULT None windowscodecs.CreatePalette([out] IWICPalette **ppIPalette)
PSTR None shlwapi.StrFormatByteSize64(LONGLONG qdw None,_Out_ PSTR pszBuf,UINT cchBuf None)
PSTR None shlwapi.StrFormatByteSize64A(LONGLONG qdw None,_Out_ PSTR pszBuf,UINT cchBuf None)
HRESULT None None.GetCurrent([out None None,retval] IOpcPart **part)
HRESULT None oleaut32.RegisterTypeLib(ITypeLib *ptlib None,_In_ LPCOLESTR szFullPath,_In_opt_ LPCOLESTR szHelpDir)
PTSTR None shlwapi.StrStr(_In_ PTSTR pszFirst,_In_ PCTSTR pszSrch)
PTSTR None shlwapi.StrStrW(_In_ PTSTR pszFirst,_In_ PCTSTR pszSrch)
PTSTR None shlwapi.StrStrA(_In_ PTSTR pszFirst,_In_ PCTSTR pszSrch)
BOOL WINAPI clfsw32.AllocReservedLog(_Inout_ PVOID pvMarshal,_In_ ULONG cReservedRecords,_Inout_ PLONGLONG pcbAdjustment)
BOOL None None.MonthCal_SetRange(HWND hwndMC None,DWORD fWhichLimit None,LPSYSTEMTIME lprgSysTimeArray None)
HRESULT None None.Clone([out None None,retval] IXpsOMLinearGradientBrush **linearGradientBrush)
WDF_DEVICE_POWER_POLICY_STATE None None.WdfDeviceGetDevicePowerPolicyState(_In_ WDFDEVICE Device)
HRESULT None propsys.PSFormatForDisplay(_In_ REFPROPERTYKEY propkey,_In_ REFPROPVARIANT propvar,_In_ PROPDESC_FORMAT_FLAGS pdfFlags,_Out_ LPWSTR pwszText,_In_ DWORD cchText)
EVT_HANDLE WINAPI wevtapi.EvtSubscribe(_In_ EVT_HANDLE Session,_In_ HANDLE SignalEvent,_In_ LPCWSTR ChannelPath,_In_ LPCWSTR Query,_In_ EVT_HANDLE Bookmark,_In_ PVOID context,_In_ EVT_SUBSCRIBE_CALLBACK Callback,_In_ DWORD Flags)
RPC_STATUS RPC_ENTRY rpcrt4.RpcErrorSaveErrorInfo(_In_ RPC_ERROR_ENUM_HANDLE *EnumHandle,_Out_ PVOID *ErrorBlob,_Out_ size_t *BlobSize)
protected void None.OnPreviewMouseUp(MouseButtonEventArgs e None)
HRESULT None None.get_LastBlock([out] ULONG *block)
BOOL WINAPI advapi32.GetSecurityDescriptorDacl(_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_Out_ LPBOOL lpbDaclPresent,_Out_ PACL *pDacl,_Out_ LPBOOL lpbDaclDefaulted)
HRESULT None qmgrprxy.GetError([out] BG_ERROR_CONTEXT *pContext,[out] HRESULT *pErrorCode)
LRESULT None comctl32.DefSubclassProc(_In_ HWND hWnd,_In_ UINT uMsg,_In_ WPARAM WPARAM,_In_ LPARAM LPARAM)
HRESULT None None.GetKnowledgeCookie([out] IUnknown **ppKnowledgeCookie)
void None None.Rollback(SinglePhaseEnlistment singlePhaseEnlistment None)
NET_API_STATUS None netapi32.NetGroupAdd(_In_ LPCWSTR servername,_In_ DWORD level,_In_ LPBYTE buf,_Out_ LPDWORD parm_err)
DWORD WINAPI kernel32.GetMappedFileName(_In_ HANDLE hProcess,_In_ LPVOID lpv,_Out_ LPTSTR lpFilename,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetMappedFileNameW(_In_ HANDLE hProcess,_In_ LPVOID lpv,_Out_ LPTSTR lpFilename,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetMappedFileNameA(_In_ HANDLE hProcess,_In_ LPVOID lpv,_Out_ LPTSTR lpFilename,_In_ DWORD nSize)
BOOL None advapi32.CredIsMarshaledCredential(_In_ LPCTSTR MarshaledCredential)
BOOL None advapi32.CredIsMarshaledCredentialW(_In_ LPCTSTR MarshaledCredential)
BOOL None advapi32.CredIsMarshaledCredentialA(_In_ LPCTSTR MarshaledCredential)
public void None.Printing(String printer None)
HRESULT None None.GetCount([out None None,retval] UINT32 *count)
void None None.Prepare(PreparingEnlistment preparingEnlistment None)
BOOL CALLBACK None.MprAdminAcceptReauthentication(_In_ RAS_CONNECTION_0 *pRasConnection0,_In_ RAS_CONNECTION_1 *pRasConnection1,_In_ RAS_CONNECTION_2 *pRasConnection2,_In_ RAS_CONNECTION_3 *pRasConnection3)
HRESULT None None.CloneWithCommitDisabled(ITransaction ** ppITransaction)
BOOL WINAPI wevtapi.EvtFormatMessage(_In_ EVT_HANDLE PublisherMetadata,_In_ EVT_HANDLE Event,_In_ DWORD MessageId,_In_ DWORD ValueCount,_In_ PEVT_VARIANT Values,_In_ DWORD Flags,_In_ DWORD BufferSize,_In_ LPWSTR Buffer,_Out_ PDWORD BufferUsed)
UINT None nddeapi.NDdeGetShareSecurity(_In_ LPTSTR lpszServer,_In_ LPTSTR lpszShareName,_In_ SECURITY_INFORMATION si,_Out_ PSECURITY_DESCRIPTOR pSD,_In_ DWORD cbSD,_Out_ LPDWORD lpcbsdRequired)
UINT None nddeapi.NDdeGetShareSecurityW(_In_ LPTSTR lpszServer,_In_ LPTSTR lpszShareName,_In_ SECURITY_INFORMATION si,_Out_ PSECURITY_DESCRIPTOR pSD,_In_ DWORD cbSD,_Out_ LPDWORD lpcbsdRequired)
UINT None nddeapi.NDdeGetShareSecurityA(_In_ LPTSTR lpszServer,_In_ LPTSTR lpszShareName,_In_ SECURITY_INFORMATION si,_Out_ PSECURITY_DESCRIPTOR pSD,_In_ DWORD cbSD,_Out_ LPDWORD lpcbsdRequired)
HRESULT None dcomp.CheckDeviceState([out] BOOL *pfValid)
HRESULT None cscsvc.GetFilterFlags([out] ULONGLONG *pullFlags,[out] ULONGLONG *pullMask)
DPI_AWARENESS_CONTEXT WINAPI user32.GetWindowDpiAwarenessContext(_In_ HWND hwnd)
RPC_STATUS RPC_ENTRY rpcrt4.RpcGetAuthorizationContextForClient(_In_opt_ RPC_BINDING_HANDLE ClientBinding,_In_ BOOL ImpersonateOnReturn,_In_ PVOID Reserved1,_In_opt_ PLARGE_INTEGER pExpirationTime,_In_ LUID Reserved2,_In_ DWORD Reserved3,_In_ PVOID Reserved4,_Out_ PVOID *pAuthzClientContext)
HRESULT WINAPI dismapi.DismAddCapability(_In_ DismSession Session,_In_ PCWSTR Name,_In_ BOOL LimitAccess,_In_ PCWSTR* SourcePaths,_In_opt_ UINT SourcePathCount,_In_opt_ HANDLE CancelEvent,_In_opt_ DISM_PROGRESS_CALLBACK Progress,_In_opt_ PVOID UserData)
HRESULT None None.SIZETSub(_In_ SIZE_T cbMinuend,_In_ SIZE_T cbSubtrahend,_Out_ SIZE_T *pcbResult)
uint32 None wvrcimprov.DeactivateReplicaSet([in] string ReplicationGroupName,[in] string ReplicaSetId[])
BOOL WINAPI dbghelp.SymFromToken(_In_ HANDLE hProcess,_In_ DWORD64 Base,_In_ DWORD Token,_Inout_ PSYMBOL_INFO Symbol)
BOOL WINAPI dbghelp.SymFromTokenW(_In_ HANDLE hProcess,_In_ DWORD64 Base,_In_ DWORD Token,_Inout_ PSYMBOL_INFO Symbol)
BOOL WINAPI dbghelp.SymFromToken(_In_ HANDLE hProcess,_In_ DWORD64 Base,_In_ DWORD Token,_Inout_ PSYMBOL_INFO Symbol)
WINAPI None iscsidsc.ReportPersistentIscsiDevices(_Inout_ PULONG BufferSizeInChar,_Out_ PTCHAR Buffer)
WINAPI None iscsidsc.ReportPersistentIscsiDevicesW(_Inout_ PULONG BufferSizeInChar,_Out_ PTCHAR Buffer)
WINAPI None iscsidsc.ReportPersistentIscsiDevicesA(_Inout_ PULONG BufferSizeInChar,_Out_ PTCHAR Buffer)
void None None.Rollback(Enlistment enlistment None)
BOOL WINAPI user32.GetMessage(_Out_ LPMSG lpMsg,_In_opt_ HWND hWnd,_In_ UINT wMsgFilterMin,_In_ UINT wMsgFilterMax)
BOOL WINAPI user32.GetMessageW(_Out_ LPMSG lpMsg,_In_opt_ HWND hWnd,_In_ UINT wMsgFilterMin,_In_ UINT wMsgFilterMax)
BOOL WINAPI user32.GetMessageA(_Out_ LPMSG lpMsg,_In_opt_ HWND hWnd,_In_ UINT wMsgFilterMin,_In_ UINT wMsgFilterMax)
BOOL None kernel32.QueryThreadpoolStackInformation(_In_ PTP_POOL ptpp,_Out_ PTP_POOL_STACK_INFORMATION ptpsi)
BOOL WINAPI kernel32.GetProcessAffinityMask(_In_ HANDLE hProcess,_Out_ PDWORD_PTR lpProcessAffinityMask,_Out_ PDWORD_PTR lpSystemAffinityMask)
public void None.GetPageAsync(int pageNumber None)
MMRESULT None msacm32.acmStreamPrepareHeader(HACMSTREAM has None,LPACMSTREAMHEADER pash None,DWORD fdwPrepare None)
HRESULT None None.GetName([out None None,retval] LPWSTR *name)
VOID None None.IoReleaseRemoveLock(_In_ PIO_REMOVE_LOCK RemoveLock,_In_ PVOID Tag)
public void None.Delete(IDictionary keys None,IDictionary oldValues None,DataSourceViewOperationCallback callback None)
uint32 None ramgmtpsprovider.SetByDisableLoadBalancing([in] boolean Disable,[in] string ComputerName,[in] boolean Force,[in] boolean PassThru,[out] RemoteAccessLoadBalancer cmdletOutput)
HRESULT None None.ComposeSegmentFromTemplate(IDirectMusicStyle* pStyle None,IDirectMusicSegment* pTemplate None,WORD wActivity None,IDirectMusicChordMap* pChordMap None,IDirectMusicSegment** ppSegment None)
HRESULT None None.SendCurveMsg(IDirectMusicPerformance8* pPerf None)
HRESULT None dskquota.GetQuotaLimit([out] PLONGLONG pllLimit)
HRESULT None None.BackgroundSync(FEEDS_BACKGROUNDSYNC_ACTION action None)
WORD None None.SORTVERSIONFROMLCID(LCID lcid None)
uint32 None dnsserverpsprovider.Set([in] boolean Enable,[in] string List[],[in] string ComputerName,[in] boolean PassThru,[out] DnsServerGlobalQueryBlockList cmdletOutput)
DWORD WINAPI kernel32.GetModuleFileName(_In_opt_ HMODULE hModule,_Out_ LPTSTR lpFilename,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetModuleFileNameW(_In_opt_ HMODULE hModule,_Out_ LPTSTR lpFilename,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetModuleFileNameA(_In_opt_ HMODULE hModule,_Out_ LPTSTR lpFilename,_In_ DWORD nSize)
HRESULT None None.get_Sids([out] VARIANT *)
protected GeometryHitTestResult None.HitTestCore(GeometryHitTestParameters hitTestParameters None)
HRESULT None azroles.get_Writable([out] BOOL *pfProp)
HRESULT None azroles.get_Count(LONG *plCount None)
DWORD WINAPI advapi32.GetInheritanceSource(_In_ LPTSTR pObjectName,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_In_ BOOL Container,_In_opt_ GUID **pObjectClassGuids,_In_ DWORD GuidCount,_In_ PACL pAcl,_In_opt_ PFN_OBJECT_MGR_FUNCTS pfnArray,_In_ PGENERIC_MAPPING pGenericMapping,_Out_ PINHERITED_FROM pInheritArray)
DWORD WINAPI advapi32.GetInheritanceSourceW(_In_ LPTSTR pObjectName,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_In_ BOOL Container,_In_opt_ GUID **pObjectClassGuids,_In_ DWORD GuidCount,_In_ PACL pAcl,_In_opt_ PFN_OBJECT_MGR_FUNCTS pfnArray,_In_ PGENERIC_MAPPING pGenericMapping,_Out_ PINHERITED_FROM pInheritArray)
DWORD WINAPI advapi32.GetInheritanceSourceA(_In_ LPTSTR pObjectName,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_In_ BOOL Container,_In_opt_ GUID **pObjectClassGuids,_In_ DWORD GuidCount,_In_ PACL pAcl,_In_opt_ PFN_OBJECT_MGR_FUNCTS pfnArray,_In_ PGENERIC_MAPPING pGenericMapping,_Out_ PINHERITED_FROM pInheritArray)
BOOL WINAPI user32.SetProcessWindowStation(_In_ HWINSTA hWinSta)
HRESULT None dxva2.GetPhysicalMonitorsFromIDirect3DDevice9(_In_ IDirect3DDevice9 *pDirect3DDevice9,_In_ DWORD dwPhysicalMonitorArraySize,_Out_ LPPHYSICAL_MONITOR pPhysicalMonitorArray)
LONG WINAPI advapi32.CveEventWrite(_In_ PCWSTR CveId,_In_opt_ PCWSTR AdditionalDetails)
HRESULT STDMETHODCALLTYPE None.Connect(HBLOB hInputBlob None,LPVOID StatusCallbackProc None,LPVOID FramesCallbackProc None,LPVOID UserContext None,HBLOB hErrorBlob None)
HRESULT WINAPI None.DeviceDialog(_In_ PDEVICEDIALOGDATA pDeviceDialogData)
NTSTATUS None None.FsRtlRegisterUncProvider(_Out_ PHANDLE MupHandle,_In_ PUNICODE_STRING RedirDevName,_In_ BOOLEAN MailslotsSupported)
NTSTATUS None None.IoCheckShareAccess(_In_ ACCESS_MASK DesiredAccess,_In_ ULONG DesiredShareAccess,_Inout_ PFILE_OBJECT FileObject,_Inout_ PSHARE_ACCESS ShareAccess,_In_ BOOLEAN Update)
BOOL None wtsapi32.WTSQueryUserConfig(_In_ LPTSTR pServerName,_In_ LPTSTR pUserName,_In_ WTS_CONFIG_CLASS WTSConfigClass,_Out_ LPTSTR *ppBuffer,_Out_ DWORD *pBytesReturned)
BOOL None wtsapi32.WTSQueryUserConfigW(_In_ LPTSTR pServerName,_In_ LPTSTR pUserName,_In_ WTS_CONFIG_CLASS WTSConfigClass,_Out_ LPTSTR *ppBuffer,_Out_ DWORD *pBytesReturned)
BOOL None wtsapi32.WTSQueryUserConfigA(_In_ LPTSTR pServerName,_In_ LPTSTR pUserName,_In_ WTS_CONFIG_CLASS WTSConfigClass,_Out_ LPTSTR *ppBuffer,_Out_ DWORD *pBytesReturned)
BOOL None ktmw32.RollforwardTransactionManager(_In_ HANDLE TransactionManagerHandle,_In_ PLARGE_INTEGER TmVirtualClock)
HRESULT None None.GetCertificateSet([out None None,retval] IOpcCertificateSet **certificateSet)
HRESULT WDSCLIAPI wdsclientapi.WdsCliGetImageLanguages(_In_ HANDLE hIfh,_Out_ PTSTR **pppszValues,_Out_ PDWORD pdwNumValues)
HRESULT None None.EnumStorage([out] IWMDMEnumStorage **pEnumStorage)
ULONGLONG None comctl32.DPA_GetSize(_In_ HDPA pdpa)
NTSTATUS None None.ZwQueryQuotaInformationFile(_In_ HANDLE FileHandle,_Out_ PIO_STATUS_BLOCK IoStatusBlock,_Out_ PVOID Buffer,_In_ ULONG Length,_In_ BOOLEAN ReturnSingleEntry,_In_opt_ PVOID SidList,_In_ ULONG SidListLength,_In_opt_ PSID StartSid,_In_ BOOLEAN RestartScan)
UINT None gdi32.GetPaletteEntries(_In_ HPALETTE hpal,_In_ UINT iStartIndex,_In_ UINT nEntries,_Out_ LPPALETTEENTRY lppe)
UINT None gdi32.GetWinMetaFileBits(_In_ HENHMETAFILE hemf,_In_ UINT cbBuffer,_Out_ LPBYTE lpbBuffer,_In_ INT fnMapMode,_In_ HDC hdcRef)
HRESULT None None.FileRangesTransferred(IBackgroundCopyJob *pJob None,IBackgroundCopyFile pFile None,DWORD *rangeCount None,BG_FILE_RANGE ranges None)
BOOL WINAPI ktmw32.RollbackComplete(_In_ HANDLE EnlistmentHandle,_In_ PLARGE_INTEGER TmVirtualClock)
HRESULT None cscsvc.EnumItems(IOfflineFilesItemContainer *pContainer None)
HRESULT None oleaut32.VarAdd(_In_ LPVARIANT pvarLeft,_In_ LPVARIANT pvarRight,_Out_ LPVARIANT pvarResult)
DWORD WINAPI clusapi.DeleteClusterResource(_In_ HRESOURCE hResource)
BOOL None None.LoadIPXAddresses(const char* pConfig,const char* pVarName,IPX_ADDRESS** ppAddresses None,DWORD* pNumAddresses None)
NTSTATUS None None.IoCreateFile(_Out_ PHANDLE FileHandle,_In_ ACCESS_MASK DesiredAccess,_In_ POBJECT_ATTRIBUTES ObjectAttributes,_Out_ PIO_STATUS_BLOCK IoStatusBlock,_In_opt_ PLARGE_INTEGER AllocationSize,_In_ ULONG FileAttributes,_In_ ULONG ShareAccess,_In_ ULONG Disposition,_In_ ULONG CreateOptions,_In_opt_ PVOID EaBuffer,_In_ ULONG EaLength,_In_ CREATE_FILE_TYPE CreateFileType,_In_opt_ PVOID InternalParameters,_In_ ULONG Options)
void None None.longjmp(jmp_buf env None,int value None)
HRESULT None prntvpt.BindPTProviderThunk(_In_ LPTSTR pszPrinterName,_In_ INT maxVersion,_In_ INT prefVersion,_Out_ HPTPROVIDER *phProvider,_Out_ INT *usedVersion)
BOOL None wtsapi32.WTSVirtualChannelRead(_In_ HANDLE hChannelHandle,_In_ ULONG TimeOut,_Out_ PCHAR Buffer,_In_ ULONG BufferSize,_Out_ PULONG pBytesRead)
MMRESULT None msacm32.acmFilterTagDetails(HACMDRIVER had None,LPACMFILTERTAGDETAILS paftd None,DWORD_PTR fdwDetails None)
MMRESULT None msacm32.acmFilterTagDetailsW(HACMDRIVER had None,LPACMFILTERTAGDETAILS paftd None,DWORD_PTR fdwDetails None)
MMRESULT None msacm32.acmFilterTagDetailsA(HACMDRIVER had None,LPACMFILTERTAGDETAILS paftd None,DWORD_PTR fdwDetails None)
HRESULT None msdrm.DRMInitEnvironment(_In_ DRMSECURITYPROVIDERTYPE eSecurityProviderType,_In_ DRMSPECTYPE eSpecification,_In_ PWSTR wszSecurityProvider,_In_ PWSTR wszManifestCredentials,_In_ PWSTR wszMachineCredentials,_Out_ DRMENVHANDLE *phEnv,_Out_ DRMHANDLE *phDefaultLibrary)
public boolean None.ShouldSerializeInlines(XamlDesignerSerializationManager manager None)
protected void None.OnMouseEnter(MouseEventArgs e None)
ULONG None None.KeQueryActiveProcessorCount(_Out_opt_ PKAFFINITY ActiveProcessors)
HRESULT None ole32.OleSave(_In_ LPPERSISTSTORAGE pPS,_In_ LPSTORAGE pStg,_In_ BOOL fSameAsLoad)
HRESULT None None.GetId([out] GUID *Id)
BOOL None dxva2.GetMonitorContrast(_In_ HANDLE hMonitor,_Out_ LPDWORD pdwMinimumContrast,_Out_ LPDWORD pdwCurrentContrast,_Out_ LPDWORD pdwMaximumContrast)
public void None.WriteAsync(String documentPath None)
BOOL None dxva2.GetPhysicalMonitorsFromHMONITOR(_In_ HMONITOR hMonitor,_In_ DWORD dwPhysicalMonitorArraySize,_Out_ LPPHYSICAL_MONITOR pPhysicalMonitorArray)
UINT WINAPI user32.GetDpiForWindow(_In_ HWND hwnd)
protected void None.OnPreviewMouseMove(MouseEventArgs e None)
BOOL WINBASEAPI kernel32.SetFirmwareEnvironmentVariableEx(_In_ LPCTSTR lpName,_In_ LPCTSTR lpGuid,_In_ PVOID pValue,_In_ DWORD nSize,_In_ DWORD dwAttributes)
BOOL WINBASEAPI kernel32.SetFirmwareEnvironmentVariableExW(_In_ LPCTSTR lpName,_In_ LPCTSTR lpGuid,_In_ PVOID pValue,_In_ DWORD nSize,_In_ DWORD dwAttributes)
BOOL WINBASEAPI kernel32.SetFirmwareEnvironmentVariableExA(_In_ LPCTSTR lpName,_In_ LPCTSTR lpGuid,_In_ PVOID pValue,_In_ DWORD nSize,_In_ DWORD dwAttributes)
HRESULT None None.get_Name(long lIndex None,ITransformProperty** ppProperty None)
public void None.SkipToFill(FrameworkElement containingObject None)
HRESULT None None.Create(ITransactionPhase0NotifyAsync * pITransactionPhase0Notify,ITransactionPhase0EnlistmentAsync ** ppITransactionPhase0Enlistment)
LRESULT None None.Button_SetState(HWND hwndCtl None,BOOL state None)
BOOL None None.AuthzInitFromToken(AUTHZ_CLIENT_CONTEXT_HANDLE *phClientContext None)
HRESULT WDSCLIAPI wdsclientapi.WdsCliGetImageLastModifiedTime(_In_ HANDLE hIfh,_Out_ PSYSTEMTIME *ppSysTimeValue)
BOOL None None.SetWindowText(HWND hwnd None,LPCTSTR lpText None)
BOOL WINAPI magnification.MagGetWindowSource(_In_ HWND hwnd,_Out_ RECT *pRect)
HRESULT None None.get_VolumeNameJoliet([out] BSTR *pVal)
BOOL None None.SupportsSignatureAlgorithm(__in LPCWSTR signingMethodToCheck,__in PCCERT_CONTEXT certificateToCheck)
HWND None msvfw32.MCIWndCreate(HWND hwndParent None,HINSTANCE hInstance None,DWORD dwStyle None,LPCTSTR szFile None)
protected void None.OnPreviewStylusDown(StylusDownEventArgs e None)
UINT None msi.MsiViewGetColumnInfo(_In_ MSIHANDLE hView,_In_ MSICOLINFO eColumnInfo,_Out_ MSIHANDLE *phRecord)
BOOL WINAPI clfsw32.HandleLogFull(_In_ HANDLE hLog)
BOOL WINAPI comdlg32.GetOpenFileName(_Inout_ LPOPENFILENAME lpofn)
BOOL WINAPI comdlg32.GetOpenFileNameW(_Inout_ LPOPENFILENAME lpofn)
BOOL WINAPI comdlg32.GetOpenFileNameA(_Inout_ LPOPENFILENAME lpofn)
BOOL WINAPI authz.AuthzReportSecurityEvent(_In_ DWORD dwFlags,_Inout_ AUTHZ_SECURITY_EVENT_PROVIDER_HANDLE hEventProvider,_In_ DWORD dwAuditId,_In_opt_ PSID pUserSid,_In_ DWORD dwCount,_In_ ... None)
uint32 None mttmprov.GetWindowsEventChannels([out] MSFT_MTEventChannel Result[])
BOOL None None.MonthCal_SetSelRange(HWND hwndMC None,LPSYSTEMTIME lprgSysTimeArray None)
HRESULT None propsys.PSGetPropertyKeyFromName(_In_ PCWSTR pszName,_Out_ PROPERTYKEY *ppropkey)
BOOL None mswsock.RIOSend(_In_ RIO_RQ SocketQueue,_In_ PRIO_BUF pData,_In_ ULONG DataBufferCount,_In_ DWORD Flags,_In_ PVOID RequestContext)
BOOL WINAPI clfsw32.FlushLogBuffers(_In_ PVOID pvMarshal,_Inout_opt_ LPOVERLAPPED pOverlapped)
LONG WINAPI advapi32.RegDeleteKeyTransacted(_In_ HKEY hKey,_In_ LPCTSTR lpSubKey,_In_ REGSAM samDesired,_Reserved_ DWORD Reserved,_In_ HANDLE hTransaction,_Reserved_ PVOID pExtendedParameter)
LONG WINAPI advapi32.RegDeleteKeyTransactedW(_In_ HKEY hKey,_In_ LPCTSTR lpSubKey,_In_ REGSAM samDesired,_Reserved_ DWORD Reserved,_In_ HANDLE hTransaction,_Reserved_ PVOID pExtendedParameter)
LONG WINAPI advapi32.RegDeleteKeyTransactedA(_In_ HKEY hKey,_In_ LPCTSTR lpSubKey,_In_ REGSAM samDesired,_Reserved_ DWORD Reserved,_In_ HANDLE hTransaction,_Reserved_ PVOID pExtendedParameter)
BOOL WINAPI kernel32.Heap32Next(_Out_ LPHEAPENTRY32 lphe)
public void None.GoToPage(int pageNumber None)
HRESULT WINAPI wsbonline.DeregisterOnlineBackupFromWindowsServerBackup(_In_ GUID guidSnapinId)
protected void None.OnMouseDown(MouseButtonEventArgs e None)
BOOL None advapi32.DeregisterEventSource(_Inout_ HANDLE hEventLog)
Sub None None.OnWMSEConnect(HR None None,UserCtx None None,PresCtx None None,CmdCtx None None)
BOOL None gdi32.PaintRgn(_In_ HDC hdc,_In_ HRGN hrgn)
NTSTATUS None advapi32.LsaEnumerateTrustedDomains(_In_ LSA_HANDLE PolicyHandle,_In_ PLSA_ENUMERATION_HANDLE EnumerationContext,_Out_ PVOID *Buffer,_In_ ULONG PreferedMaximumLength,_Out_ PULONG CountReturned)
HRESULT None None.readyState(long* pReadyState None)
HRESULT None None.GetSecondarySecurity([out] PSECURITY_OBJECT *pSecurityObjects,[out] PULONG pSecurityObjectCount)
BOOL None userenv.RefreshPolicy(_In_ BOOL bMachine)
VOID WINAPI advapi32.RegisterWaitChainCOMCallback(_In_ PCOGETCALLSTATE CallStateCallback,_In_ PCOGETACTIVATIONSTATE ActivationStateCallback)
HRESULT None None.GetEnumerator([out None None,retval] IOpcPartEnumerator **partEnumerator)
DWORD None None.GetNPPBlobFromUI(HWND hwnd None,HBLOB hFilterBlob None,HBLOB* phBlob None)
ULONG STDMETHODCALLTYPE ole32.CStdAsyncStubBuffer_AddRef(_In_ IRpcStubBuffer *pthis)
LONG None gdi32.GetBitmapBits(_In_ HBITMAP hbmp,_In_ LONG cbBuffer,_Out_ LPVOID lpvBits)
BOOL CALLBACK None.FaxSendCallback(__in HANDLE FaxHandle,__in HCALL CallHandle,__in DWORD Reserved1,__in DWORD Reserved2)
HRESULT None None.send(VARIANT varBody None)
HRESULT None None.get_DataTimeout([out None None,retval] DWORD *pdwDataTimeout)
HICON WINAPI shell32.ExtractAssociatedIcon(_Reserved_ HINSTANCE hInst,_Inout_ LPTSTR lpIconPath,_Inout_ WORD *lpiIcon)
HICON WINAPI shell32.ExtractAssociatedIconW(_Reserved_ HINSTANCE hInst,_Inout_ LPTSTR lpIconPath,_Inout_ WORD *lpiIcon)
HICON WINAPI shell32.ExtractAssociatedIconA(_Reserved_ HINSTANCE hInst,_Inout_ LPTSTR lpIconPath,_Inout_ WORD *lpiIcon)
LRESULT CALLBACK None.MainWndProc(HWND hwnd None,UINT uMsg None,WPARAM wParam None,LPARAM lParam None)
HRESULT None dcomp.InitializeDirectCompositionDevice(HWND hwndTarget None,ID3D11Device **ppD3D11Device None,IDCompositionDevice **ppDevice None,IDCompositionTarget **ppCompTarget None)
HRESULT None None.StringCchVPrintf(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszFormat,_In_ va_list argList)
HRESULT None None.StringCchVPrintfW(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszFormat,_In_ va_list argList)
HRESULT None None.StringCchVPrintfA(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszFormat,_In_ va_list argList)
protected void None.Merge(PropertyMetadata baseMetadata None,DependencyProperty dp None)
HRESULT None None.get_parentNode(IXMLDOMNode **parent None)
BOOL WINAPI kernel32.Toolhelp32ReadProcessMemory(_In_ DWORD th32ProcessID,_In_ LPCVOID lpBaseAddress,_Out_ LPVOID lpBuffer,_In_ SIZE_T cbRead,_Out_ SIZE_T lpNumberOfBytesRead)
HRESULT WINAPI userenv.DeriveAppContainerSidFromAppContainerName(_In_ PCWSTR pszAppContainerName,_Out_ PSID *ppsidAppContainerSid)
protected void None.OnGotMouseCapture(MouseEventArgs e None)
UINT WINAPI kernel32.GetPrivateProfileInt(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ INT nDefault,_In_ LPCTSTR lpFileName)
UINT WINAPI kernel32.GetPrivateProfileIntW(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ INT nDefault,_In_ LPCTSTR lpFileName)
UINT WINAPI kernel32.GetPrivateProfileIntA(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ INT nDefault,_In_ LPCTSTR lpFileName)
HRESULT None None.GetGUID([out] GUID *pGUID)
Sub None None.Monitor_OnCounterAdded(index None None)
NTSTATUS None None.KeWaitForSingleObject(_In_ PVOID Object,_In_ KWAIT_REASON WaitReason,_In_ KPROCESSOR_MODE WaitMode,_In_ BOOLEAN Alertable,_In_opt_ PLARGE_INTEGER Timeout)
MMRESULT ACMAPI msacm32.acmStreamMessage(HACMSTREAM has None,UINT uMsg None,LPARAM lParam1 None,LPARAM lParam2 None)
uint32 None ramgmtpsprovider.SetByThirdPartyLoadBalancer([in] string ThirdPartyLoadBalancer,[in] string ComputerName,[in] boolean PassThru,[out] RemoteAccessLoadBalancer cmdletOutput)
BOOL WINAPI kernel32.FindVolumeMountPointClose(_In_ HANDLE hFindVolumeMountPoint)
BOOL None setupapi.SetupDiSetDeviceInterfaceDefault(_In_ HDEVINFO DeviceInfoSet,_Inout_ PSP_DEVICE_INTERFACE_DATA DeviceInterfaceData,_In_ DWORD Flags,_Reserved_ PVOID Reserved)
uint32 None wvrcimprov.SmapiAddMember([in] string ReplicationGroupName,[in] string VolumeNames[],[in] string PartitionObjectIds[])
MI_INLINE MI_Result None.MI_Instance_Delete(_Inout_ MI_Instance *self)
HRESULT None None.GetConnectionInterface([out] IID *pIID)
BOOL WINAPI kernel32.GetProcessWorkingSetSizeEx(_In_ HANDLE hProcess,_Out_ PSIZE_T lpMinimumWorkingSetSize,_Out_ PSIZE_T lpMaximumWorkingSetSize,_Out_ PDWORD Flags)
LRESULT CALLBACK None.WindowProc(HWND hwnd None,UINT uMsg None,WPARAM wParam None,LPARAM lParam None)
uint32 None wvrcimprov.VerifyReplicablePartition([in] string PartitionId)
HANDLE WINAPI kernel32.CreateMutexEx(_In_opt_ LPSECURITY_ATTRIBUTES lpMutexAttributes,_In_opt_ LPCTSTR lpName,_In_ DWORD dwFlags,_In_ DWORD dwDesiredAccess)
HANDLE WINAPI kernel32.CreateMutexExW(_In_opt_ LPSECURITY_ATTRIBUTES lpMutexAttributes,_In_opt_ LPCTSTR lpName,_In_ DWORD dwFlags,_In_ DWORD dwDesiredAccess)
HANDLE WINAPI kernel32.CreateMutexExA(_In_opt_ LPSECURITY_ATTRIBUTES lpMutexAttributes,_In_opt_ LPCTSTR lpName,_In_ DWORD dwFlags,_In_ DWORD dwDesiredAccess)
HRESULT None None.GetOpacityMaskBrushLocal([out None None,retval] IXpsOMBrush **opacityMaskBrush)
BOOL None dxva2.SetMonitorRedGreenOrBlueDrive(_In_ HANDLE hMonitor,_In_ MC_DRIVE_TYPE dtDriveType,_In_ DWORD dwNewDrive)
HRESULT WDSBPAPI wdsbp.WdsBpParseInitialize(_In_ PVOID pPacket,_In_ ULONG uPacketLen,_Out_opt_ PBYTE pbPacketType,_Out_ HANDLE *phHandle)
SC_HANDLE WINAPI advapi32.CreateService(_In_ SC_HANDLE hSCManager,_In_ LPCTSTR lpServiceName,_In_opt_ LPCTSTR lpDisplayName,_In_ DWORD dwDesiredAccess,_In_ DWORD dwServiceType,_In_ DWORD dwStartType,_In_ DWORD dwErrorControl,_In_opt_ LPCTSTR lpBinaryPathName,_In_opt_ LPCTSTR lpLoadOrderGroup,_Out_opt_ LPDWORD lpdwTagId,_In_opt_ LPCTSTR lpDependencies,_In_opt_ LPCTSTR lpServiceStartName,_In_opt_ LPCTSTR lpPassword)
SC_HANDLE WINAPI advapi32.CreateServiceW(_In_ SC_HANDLE hSCManager,_In_ LPCTSTR lpServiceName,_In_opt_ LPCTSTR lpDisplayName,_In_ DWORD dwDesiredAccess,_In_ DWORD dwServiceType,_In_ DWORD dwStartType,_In_ DWORD dwErrorControl,_In_opt_ LPCTSTR lpBinaryPathName,_In_opt_ LPCTSTR lpLoadOrderGroup,_Out_opt_ LPDWORD lpdwTagId,_In_opt_ LPCTSTR lpDependencies,_In_opt_ LPCTSTR lpServiceStartName,_In_opt_ LPCTSTR lpPassword)
SC_HANDLE WINAPI advapi32.CreateServiceA(_In_ SC_HANDLE hSCManager,_In_ LPCTSTR lpServiceName,_In_opt_ LPCTSTR lpDisplayName,_In_ DWORD dwDesiredAccess,_In_ DWORD dwServiceType,_In_ DWORD dwStartType,_In_ DWORD dwErrorControl,_In_opt_ LPCTSTR lpBinaryPathName,_In_opt_ LPCTSTR lpLoadOrderGroup,_Out_opt_ LPDWORD lpdwTagId,_In_opt_ LPCTSTR lpDependencies,_In_opt_ LPCTSTR lpServiceStartName,_In_opt_ LPCTSTR lpPassword)
HRESULT None None.JoinTransaction(IUnknown *punkTransactionCoord None,ISOLEVEL isoLevel None,ULONG isoFlags None,ITransactionOptions *pOtherOptions None)
BOOL None kernel32.EnumLanguageGroupLocales(_In_ LANGGROUPLOCALE_ENUMPROC lpLangGroupLocaleEnumProc,_In_ LGRPID LanguageGroup,_In_ DWORD dwFlags,_In_ LONG_PTR lParam)
BOOL None kernel32.EnumLanguageGroupLocalesW(_In_ LANGGROUPLOCALE_ENUMPROC lpLangGroupLocaleEnumProc,_In_ LGRPID LanguageGroup,_In_ DWORD dwFlags,_In_ LONG_PTR lParam)
BOOL None kernel32.EnumLanguageGroupLocalesA(_In_ LANGGROUPLOCALE_ENUMPROC lpLangGroupLocaleEnumProc,_In_ LGRPID LanguageGroup,_In_ DWORD dwFlags,_In_ LONG_PTR lParam)
NTSTATUS WINAPI gdi32.DDCCISetVCPFeature(_In_ HANDLE hMonitor,_In_ DWORD dwVCPCode,_In_ DWORD dwNewValue)
HRESULT None None.PostRestore([out] IVssAsync **ppAsync)
BOOL WINAPI kernel32.SetEnvironmentVariable(_In_ LPCTSTR lpName,_In_opt_ LPCTSTR lpValue)
BOOL WINAPI kernel32.SetEnvironmentVariableW(_In_ LPCTSTR lpName,_In_opt_ LPCTSTR lpValue)
BOOL WINAPI kernel32.SetEnvironmentVariableA(_In_ LPCTSTR lpName,_In_opt_ LPCTSTR lpValue)
DWORD None None.GetStringFromBlob(HBLOB hBlob None,const char* pOwnerName,const char* pCategoryName,const char* pTagName,const char** ppString)
HRESULT None None.SetSegmentNotification(IDirectMusicPerformance8* pPerformance None)
HRESULT None ole32.CreateDataCache(_In_ LPUNKNOWN pUnkOuter,_In_ REFCLSID rclsid,_In_ REFIID iid,_Out_ LPVOID *ppv)
HRESULT None msdrm.DRMCreateEnablingPrincipal(_In_ DRMENVHANDLE hEnv,_In_ DRMHANDLE hLibrary,_In_ PWSTR wszObject,_In_ DRMID *pidPrincipal,_In_ PWSTR wszCredentials,_Out_ DRMHANDLE *pHEnablingPrincipal)
DWORD WINAPI None.InstallWiaDevice(_In_ PWIADEVICEINSTALL *pWiaDeviceInstall)
sint32 None storageqos.CreatePolicy([in None None,out] MSFT_StorageQoSPolicy Policy)
HRESULT None None.GetSignatureRelationshipReferenceSet([out None None,retval] IOpcSignatureRelationshipReferenceSet **relationshipReferenceSet)
VOID WINAPI None.ServiceMain(_In_ DWORD dwArgc,_In_ LPTSTR *lpszArgv)
void None None.GetObjectData(SerializationInfo info None,StreamingContext context None)
BOOL None None.Animate_IsPlaying(HWND hwndAnim None)
HRESULT None None.get_KeepOriginalFormat([out] BOOL *pKeep)
UINT None gdi32.SetSystemPaletteUse(_In_ HDC hdc,_In_ UINT uUsage)
BOOL None None.LoadIPAddresses(const char* pConfig,const char* pVarName,DWORD** ppAddresses None,DWORD* pNumAddresses None)
BOOL WINAPI kernel32.SetComputerNameEx(_In_ COMPUTER_NAME_FORMAT NameType,_In_ LPCTSTR lpBuffer)
BOOL WINAPI kernel32.SetComputerNameExW(_In_ COMPUTER_NAME_FORMAT NameType,_In_ LPCTSTR lpBuffer)
BOOL WINAPI kernel32.SetComputerNameExA(_In_ COMPUTER_NAME_FORMAT NameType,_In_ LPCTSTR lpBuffer)
HRESULT None msdrm.DRMGetIssuanceLicenseInfo(_In_ DRMPUBHANDLE hIssuanceLicense,_Out_ SYSTEMTIME *pstTimeFrom,_Out_ SYSTEMTIME *pstTimeUntil,_In_ UINT uFlags,_Inout_ UINT *puDistributionPointNameLength,_Out_ PWSTR wszDistributionPointName,_Inout_ UINT *puDistributionPointURLLength,_Out_ PWSTR wszDistributionPointURL,_Out_ DRMPUBHANDLE *phOwner,_Out_ BOOL *pfOfficial)
BOOL WINAPI dbghelp.EnumerateLoadedModules64(_In_ HANDLE hProcess,_In_ PENUMLOADED_MODULES_CALLBACK64 EnumLoadedModulesCallback,_In_opt_ PVOID UserContext)
BOOL WINAPI dbghelp.EnumerateLoadedModulesW64(_In_ HANDLE hProcess,_In_ PENUMLOADED_MODULES_CALLBACK64 EnumLoadedModulesCallback,_In_opt_ PVOID UserContext)
BOOL WINAPI dbghelp.EnumerateLoadedModules64(_In_ HANDLE hProcess,_In_ PENUMLOADED_MODULES_CALLBACK64 EnumLoadedModulesCallback,_In_opt_ PVOID UserContext)
HDC None gdi32.CreateMetaFile(_In_ LPCTSTR lpszFile)
HDC None gdi32.CreateMetaFileW(_In_ LPCTSTR lpszFile)
HDC None gdi32.CreateMetaFileA(_In_ LPCTSTR lpszFile)
HRESULT None wmpmediasharing.get_internetMediaSharingSecurityGroup([out] BSTR *securityGroup)
BOOL None dxva2.GetMonitorCapabilities(_In_ HANDLE hMonitor,_Out_ LPDWORD pdwMonitorCapabilities,_Out_ LPDWORD pdwSupportedColorTemperatures)
NET_API_STATUS None netapi32.NetGroupGetInfo(_In_ LPCWSTR servername,_In_ LPCWSTR groupname,_In_ DWORD level,_Out_ LPBYTE *bufptr)
NTSTATUS None None.IoCheckQuotaBufferValidity(_In_ PFILE_QUOTA_INFORMATION QuotaBuffer,_In_ ULONG QuotaLength,_Out_ PULONG ErrorOffset)
public boolean None.Equals(Object obj None)
INT WSAAPI ws2_32.WSAAddressToString(_In_ LPSOCKADDR lpsaAddress,_In_ DWORD dwAddressLength,_In_opt_ LPWSAPROTOCOL_INFO lpProtocolInfo,_Inout_ LPTSTR lpszAddressString,_Inout_ LPDWORD lpdwAddressStringLength)
INT WSAAPI ws2_32.WSAAddressToStringW(_In_ LPSOCKADDR lpsaAddress,_In_ DWORD dwAddressLength,_In_opt_ LPWSAPROTOCOL_INFO lpProtocolInfo,_Inout_ LPTSTR lpszAddressString,_Inout_ LPDWORD lpdwAddressStringLength)
INT WSAAPI ws2_32.WSAAddressToStringA(_In_ LPSOCKADDR lpsaAddress,_In_ DWORD dwAddressLength,_In_opt_ LPWSAPROTOCOL_INFO lpProtocolInfo,_Inout_ LPTSTR lpszAddressString,_Inout_ LPDWORD lpdwAddressStringLength)
HRESULT None None.GetCount([out] ULONG *celt)
HRESULT None wmvcore.WMCreateReader(_In_ IUnknown *pUnkReserved,_In_ DWORD dwRights,_Out_ IWMReader **ppReader)
HRESULT None None.GetOptions([out] EXPLORER_BROWSER_OPTIONS *pdwFlag)
ULONG None None.KeQueryActiveProcessorCountEx(_In_ USHORT GroupNumber)
protected boolean None.Purge(Object source None,Object data None,boolean purgeAll None)
DWORD PXEAPI wdspxe.PxeDhcpIsValid(_In_ PVOID pPacket,_In_ ULONG uPacketLen,_In_ BOOL bRequestPacket,_Out_ PBOOL pbPxeOptionPresent)
BOOL WINAPI None.OnContextMenu(HWND hwnd None,int x None,int y None)
public bool None.IsEntryPointRegistered(Guid guidEntryPoint None)
BOOL WINAPI kernel32.IsNativeVhdBoot(_Out_ PBOOL *NativeVhdBoot)
VOID None None.IoRemoveShareAccess(_In_ PFILE_OBJECT FileObject,_Inout_ PSHARE_ACCESS ShareAccess)
NET_API_STATUS NET_API_FUNCTION netapi32.NetDfsRemoveRootTarget(_In_ LPWSTR pDfsPath,_In_opt_ LPWSTR pTargetPath,_In_ ULONG Flags)
BOOL None magnification.MagSetColorEffect(_In_ HWND hwnd,_In_ PMAGCOLOREFFECT pEffect)
HRESULT None qmgrprxy.Clone([out] IEnumBackgroundCopyJobs **ppEnumJobs)
NTSTATUS None None.ExInitializeResourceLite(_Out_ PERESOURCE Resource)
public boolean None.Match(Object obj None)
HRESULT STDMETHODCALLTYPE None.GetNetworkConnections([out] IEnumNetworkConnections **ppEnumNetworkConnection)
BOOL WINAPI user32.IsCharAlphaNumeric(_In_ TCHAR ch)
BOOL WINAPI user32.IsCharAlphaNumericW(_In_ TCHAR ch)
BOOL WINAPI user32.IsCharAlphaNumericA(_In_ TCHAR ch)
BOOL WINAPI user32.IsCharUpper(_In_ TCHAR ch)
BOOL WINAPI user32.IsCharUpperW(_In_ TCHAR ch)
BOOL WINAPI user32.IsCharUpperA(_In_ TCHAR ch)
uint32 None cimwin32.Win32SDToSDDL([in] __SecurityDescriptor Descriptor,[out] string SDDL)
HRESULT WDSCLIAPI wdsclientapi.WdsCliGetImageIndex(_In_ HANDLE hIfh,_Out_ PDWORD pdwValue)
BOOL None gdi32.CreateScalableFontResource(_In_ DWORD fdwHidden,_In_ LPCTSTR lpszFontRes,_In_ LPCTSTR lpszFontFile,_In_ LPCTSTR lpszCurrentPath)
BOOL None gdi32.CreateScalableFontResourceW(_In_ DWORD fdwHidden,_In_ LPCTSTR lpszFontRes,_In_ LPCTSTR lpszFontFile,_In_ LPCTSTR lpszCurrentPath)
BOOL None gdi32.CreateScalableFontResourceA(_In_ DWORD fdwHidden,_In_ LPCTSTR lpszFontRes,_In_ LPCTSTR lpszFontFile,_In_ LPCTSTR lpszCurrentPath)
HRESULT None srmsvc.get_Id([out] FSRM_OBJECT_ID *id)
HDC None user32.GetDC(_In_ HWND hWnd)
UINT None msi.MsiSourceListAddSourceEx(_In_ LPCTSTR szProductCodeOrPatchCode,_In_opt_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD dwOptions,_In_ LPCTSTR szSource,_In_opt_ DWORD dwIndex)
UINT None msi.MsiSourceListAddSourceExW(_In_ LPCTSTR szProductCodeOrPatchCode,_In_opt_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD dwOptions,_In_ LPCTSTR szSource,_In_opt_ DWORD dwIndex)
UINT None msi.MsiSourceListAddSourceExA(_In_ LPCTSTR szProductCodeOrPatchCode,_In_opt_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD dwOptions,_In_ LPCTSTR szSource,_In_opt_ DWORD dwIndex)
PWSTR None shlwapi.StrChrNIW(_In_ PCWSTR pszStart,WCHAR wMatch None,UINT cchMax None)
HRESULT None azroles.get_NonMembersName([out] VARIANT *pvarProp)
UINT_PTR CALLBACK None.CCHookProc(_In_ HWND hdlg,_In_ UINT uiMsg,_In_ WPARAM wParam,_In_ LPARAM lParam)
HRESULT None None.GetCompressionOptions([out None None,retval] OPC_COMPRESSION_OPTIONS *compressionOptions)
BOOLEAN None None.FsRtlCurrentBatchOplock(_In_ POPLOCK Oplock)
NTSTATUS None None.WdfFdoInitAllocAndQueryPropertyEx(_In_ PWDFDEVICE_INIT DeviceInit,_In_ PWDF_DEVICE_PROPERTY_DATA DeviceProperty,_In_ POOL_TYPE PoolType,_In_opt_ PWDF_OBJECT_ATTRIBUTES PropertyMemoryAttributes,_Out_ WDFMEMORY *PropertyMemory,_Out_ PDEVPROPTYPE Type)
BOOL WINAPI kernel32.GetVolumeInformation(_In_opt_ LPCTSTR lpRootPathName,_Out_opt_ LPTSTR lpVolumeNameBuffer,_In_ DWORD nVolumeNameSize,_Out_opt_ LPDWORD lpVolumeSerialNumber,_Out_opt_ LPDWORD lpMaximumComponentLength,_Out_opt_ LPDWORD lpFileSystemFlags,_Out_opt_ LPTSTR lpFileSystemNameBuffer,_In_ DWORD nFileSystemNameSize)
BOOL WINAPI kernel32.GetVolumeInformationW(_In_opt_ LPCTSTR lpRootPathName,_Out_opt_ LPTSTR lpVolumeNameBuffer,_In_ DWORD nVolumeNameSize,_Out_opt_ LPDWORD lpVolumeSerialNumber,_Out_opt_ LPDWORD lpMaximumComponentLength,_Out_opt_ LPDWORD lpFileSystemFlags,_Out_opt_ LPTSTR lpFileSystemNameBuffer,_In_ DWORD nFileSystemNameSize)
BOOL WINAPI kernel32.GetVolumeInformationA(_In_opt_ LPCTSTR lpRootPathName,_Out_opt_ LPTSTR lpVolumeNameBuffer,_In_ DWORD nVolumeNameSize,_Out_opt_ LPDWORD lpVolumeSerialNumber,_Out_opt_ LPDWORD lpMaximumComponentLength,_Out_opt_ LPDWORD lpFileSystemFlags,_Out_opt_ LPTSTR lpFileSystemNameBuffer,_In_ DWORD nFileSystemNameSize)
BOOL None None.RegisterDialogClasses(HANDLE hInst None)
BOOL WINAPI clfsw32.ScanLogContainers(_Inout_ PCLFS_SCAN_CONTEXT pcxScan,_In_ CLFS_SCAN_MODE eScanMode,_Inout_opt_ LPVOID pReserved)
HRESULT None None.StringCchCopyN(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_In_ size_t cchSrc)
HRESULT None None.StringCchCopyNW(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_In_ size_t cchSrc)
HRESULT None None.StringCchCopyNA(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_In_ size_t cchSrc)
VOID None None.IoStartTimer(_In_ PDEVICE_OBJECT DeviceObject)
HRESULT None shlwapi.IUnknown_GetSite(_In_ IUnknown *punk,_In_ REFIID riid,_Out_ VOID **ppvSite)
NTSTATUS WINAPI netapi32.NetIsServiceAccount(_In_opt_ LPWSTR ServerName,_In_ LPWSTR AccountName,_Out_ BOOL *IsService)
BOOL WINAPI avrt.AvSetMmThreadPriority(_In_ HANDLE AvrtHandle,_In_ AVRT_PRIORITY Priority)
public DependencyProperty None.AddOwner(Type ownerType None,PropertyMetadata typeMetadata None)
BOOL WINAPI kernel32.EnumProcessModulesEx(_In_ HANDLE hProcess,_Out_ HMODULE *lphModule,_In_ DWORD cb,_Out_ LPDWORD lpcbNeeded,_In_ DWORD dwFilterFlag)
NTSTATUS None None.IoRegisterLastChanceShutdownNotification(_In_ PDEVICE_OBJECT DeviceObject)
PVOID WINAPI kernel32.AddVectoredExceptionHandler(_In_ ULONG FirstHandler,_In_ PVECTORED_EXCEPTION_HANDLER VectoredHandler)
public void None.OnEndPage(PrintDocument document None,PrintPageEventArgs e None)
NTSTATUS None None.FltSetSecurityObject(_In_ PFLT_INSTANCE Instance,_In_ PFILE_OBJECT FileObject,_In_ SECURITY_INFORMATION SecurityInformation,_In_ PSECURITY_DESCRIPTOR SecurityDescriptor)
HRESULT None None.PrepareRequest(BOOL fRetaining None,DWORD grfRM None,BOOL fWantMoniker None,BOOL fSinglePhase None)
HRESULT None None.FeedUrlChanged(LPCWSTR pszPath None)
HRESULT _stdcall wiaservc.wiasSetValidRangeLong(_In_ BYTE *pWiasContext,PROPID propid None,LONG lMin None,LONG lNom None,LONG lMax None,LONG lStep None)
BOOL WINAPI advapi32.InitializeSecurityDescriptor(_Out_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_ DWORD dwRevision)
uint32 None wvrcimprov.GetNetworkConstraint([in] string SourceRGName,[in] string SourceComputerName,[in] string DestinationRGName,[in] string DestinationComputerName,[out] MSFT_WvrNetworkConstraint Output[])
HKEY None setupapi.SetupDiOpenDeviceInterfaceRegKey(_In_ HDEVINFO DeviceInfoSet,_In_ PSP_DEVICE_INTERFACE_DATA DeviceInterfaceData,_Reserved_ DWORD Reserved,_In_ REGSAM samDesired)
protected void None.RemoveLogicalChild(Object child None)
HGLOBAL WINAPI kernel32.GlobalAlloc(_In_ UINT uFlags,_In_ SIZE_T dwBytes)
LRESULT CALLBACK None.WindowProc(HWND hwnd None,UINT uMsg None,WPARAM wParam None,LPARAM lParam None)
BOOL WINAPI user32.EnumDesktops(_In_opt_ HWINSTA hwinsta,_In_ DESKTOPENUMPROC lpEnumFunc,_In_ LPARAM lParam)
BOOL WINAPI user32.EnumDesktopsW(_In_opt_ HWINSTA hwinsta,_In_ DESKTOPENUMPROC lpEnumFunc,_In_ LPARAM lParam)
BOOL WINAPI user32.EnumDesktopsA(_In_opt_ HWINSTA hwinsta,_In_ DESKTOPENUMPROC lpEnumFunc,_In_ LPARAM lParam)
public StreamInfo None.GetStreamInfo(String name None)
uint32 None cimwin32.SetPowerState([in] uint16 PowerState,[in] datetime Time)
HRESULT None shell32.QueryContextMenu(HMENU hmenu None,UINT indexMenu None,UINT idCmdFirst None,UINT idCmdLast None,UINT uFlags None)
BOOL None user32.UpdateWindow(_In_ HWND hWnd)
BOOL WINAPI kernel32.OOBEComplete(_Out_ PBOOL OOBEComplete)
HRESULT None srmsvc.get_LastRun([out] DATE *lastRun)
UINT None shell32.SHReplaceFromPropSheetExtArray(_In_ HPSXA hpsxa,UINT uPageID None,_In_ LPFNADDPROPSHEETPAGE lpfnReplaceWith,LPARAM lParam None)
HRESULT None None.GetPage([out None None,retval] IXpsOMPage **page)
BOOL WINAPI kernel32.GetNamedPipeInfo(_In_ HANDLE hNamedPipe,_Out_opt_ LPDWORD lpFlags,_Out_opt_ LPDWORD lpOutBufferSize,_Out_opt_ LPDWORD lpInBufferSize,_Out_opt_ LPDWORD lpMaxInstances)
LONG WINAPI winscard.SCardCancel(_In_ SCARDCONTEXT hContext)
uint32 None smiscsitargetprov.GetSupportedStripeDepths([out] uint64 StripeDepths[])
WORD None None.HRESULT_FACILITY(HRESULT hr None)
HRESULT None windowscodecs.IWICBitmapDecoder_GetFrame_Proxy(_In_ IWICBitmapDecoder *THIS_PTR,_In_ UINT index,_Out_ IWICBitmapFrameDecode **ppIBitmapFrame)
HRESULT None None.get_elements(ISchemaItemCollection** elements None)
BOOL None dxva2.DestroyPhysicalMonitors(_In_ DWORD dwPhysicalMonitorArraySize,_In_ LPPHYSICAL_MONITOR pPhysicalMonitorArray)
HRESULT None None.GetCLSID([out] CLSID *pClsid)
uint32 None netpeerdistcim.Enable_BCHostedServer([in] boolean RegisterSCP,[in] boolean Force)
BOOL WINAPI kernel32.SetXStateFeaturesMask(_Inout_ PCONTEXT Context,_In_ DWORD64 FeatureMask)
public void None.GetObjectData(SerializationInfo info None,StreamingContext context None)
protected Visual None.GetVisualChild(int index None)
protected void None.OnStylusButtonDown(StylusButtonEventArgs e None)
DWORD None shell32.SHRestricted(RESTRICTIONS rest None)
HRESULT None oleaut32.VarInt(_In_ LPVARIANT pvarIn,_Out_ LPVARIANT pvarResult)
BOOL WINAPI fmapi.ScanRestorableFiles(_In_ PFILE_RESTORE_CONTEXT Context,_In_ PCWSTR Path,_In_ ULONG FileInfoSize,_Out_ PRESTORABLE_FILE_INFO FileInfo,_Out_ PULONG FileInfoUsed)
HRESULT WDSCLIAPI wdsclientapi.WdsCliGetImageLanguages(_In_ HANDLE hIfh,_Out_ PTSTR **pppszValues,_Out_ PDWORD pdwNumValues)
NTSTATUS None None.ZwSetInformationFile(_In_ HANDLE FileHandle,_Out_ PIO_STATUS_BLOCK IoStatusBlock,_In_ PVOID FileInformation,_In_ ULONG Length,_In_ FILE_INFORMATION_CLASS FileInformationClass)
STDAPI None avifil32.AVIFileInfo(PAVIFILE pfile None,AVIFILEINFO *pfi None,LONG lSize None)
STDAPI None avifil32.AVIFileInfoW(PAVIFILE pfile None,AVIFILEINFO *pfi None,LONG lSize None)
STDAPI None avifil32.AVIFileInfoA(PAVIFILE pfile None,AVIFILEINFO *pfi None,LONG lSize None)
HRESULT WDSBPAPI wdsbp.WdsBpGetOptionBuffer(_In_ HANDLE hHandle,_In_ ULONG uBufferLen,_Out_ PVOID pBuffer,_Out_ PULONG puBytes)
HRESULT STDMETHODCALLTYPE None.DoConfigure(char* pName None,char* pConfiguration None,char** ppScriptInstance None)
PVOID None None.ExRegisterCallback(_Inout_ PCALLBACK_OBJECT CallbackObject,_In_ PCALLBACK_FUNCTION CallbackFunction,_In_opt_ PVOID CallbackContext)
BOOL WINAPI kernel32.SetProcessDEPPolicy(_In_ DWORD dwFlags)
BOOL WINAPI kernel32.GetSystemTimes(_Out_opt_ LPFILETIME lpIdleTime,_Out_opt_ LPFILETIME lpKernelTime,_Out_opt_ LPFILETIME lpUserTime)
BOOLEAN None None.ExAcquireSharedWaitForExclusive(_Inout_ PERESOURCE Resource,_In_ BOOLEAN Wait)
HRESULT None oleaut32.VarDecFromI2(_In_ SHORT uiIn,_Out_ DECIMAL *pdecOut)
HRESULT None None.GetAllParameters(LPDSFXWavesReverb pDsFXWavesReverb None)
HRESULT None None.GetConfigurationFlags([out] DWORD *pFlags)
VOID None None.ExInitializeRundownProtection(_Out_ PEX_RUNDOWN_REF RunRef)
public void None.SeekAlignedToLastTick(FrameworkElement containingObject None,TimeSpan offset None,TimeSeekOrigin origin None)
public void None.Arrange(Rect finalRect None)
HRESULT None cscsvc.GetRawData([out] BYTE_BLOB **ppBlob)
BOOL None None.GetPrinterDriver(_In_ HANDLE hPrinter,_In_ LPTSTR pEnvironment,_In_ DWORD Level,_Out_ LPBYTE pDriverInfo,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded)
BOOL None None.GetPrinterDriverW(_In_ HANDLE hPrinter,_In_ LPTSTR pEnvironment,_In_ DWORD Level,_Out_ LPBYTE pDriverInfo,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded)
BOOL None None.GetPrinterDriverA(_In_ HANDLE hPrinter,_In_ LPTSTR pEnvironment,_In_ DWORD Level,_Out_ LPBYTE pDriverInfo,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded)
UINT None msi.MsiSourceListSetInfo(_In_ LPCTSTR szProductCodeOrPatchCode,_In_opt_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD dwOptions,_In_ LPCTSTR szProperty,_In_ LPCTSTR szValue)
UINT None msi.MsiSourceListSetInfoW(_In_ LPCTSTR szProductCodeOrPatchCode,_In_opt_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD dwOptions,_In_ LPCTSTR szProperty,_In_ LPCTSTR szValue)
UINT None msi.MsiSourceListSetInfoA(_In_ LPCTSTR szProductCodeOrPatchCode,_In_opt_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD dwOptions,_In_ LPCTSTR szProperty,_In_ LPCTSTR szValue)
NTSTATUS None None.FltQueueDeferredIoWorkItem(_In_ PFLT_DEFERRED_IO_WORKITEM FltWorkItem,_In_ PFLT_CALLBACK_DATA Data,_In_ PFLT_DEFERRED_IO_WORKITEM_ROUTINE WorkerRoutine,_In_ WORK_QUEUE_TYPE QueueType,_In_ PVOID Context)
BOOL WINAPI user32.PostMessage(_In_opt_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
BOOL WINAPI user32.PostMessageW(_In_opt_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
BOOL WINAPI user32.PostMessageA(_In_opt_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
HRESULT None shell32.SHCreateShellItemArrayFromIDLists(_In_ UINT cidl,_In_ PCIDLIST_ABSOLUTE_ARRAY rgpidl,_Out_ IShellItemArray **ppsiItemArray)
VOID None None.FltUnregisterFilter(_In_ PFLT_FILTER Filter)
DWORD WINAPI credui.CredUIPromptForCredentials(_In_opt_ PCREDUI_INFO pUiInfo,_In_ PCTSTR pszTargetName,_In_ PCtxtHandle Reserved,_In_opt_ DWORD dwAuthError,_Inout_ PCTSTR pszUserName,_In_ ULONG ulUserNameMaxChars,_Inout_ PCTSTR pszPassword,_In_ ULONG ulPasswordMaxChars,_Inout_ PBOOL pfSave,_In_ DWORD dwFlags)
DWORD WINAPI credui.CredUIPromptForCredentialsW(_In_opt_ PCREDUI_INFO pUiInfo,_In_ PCTSTR pszTargetName,_In_ PCtxtHandle Reserved,_In_opt_ DWORD dwAuthError,_Inout_ PCTSTR pszUserName,_In_ ULONG ulUserNameMaxChars,_Inout_ PCTSTR pszPassword,_In_ ULONG ulPasswordMaxChars,_Inout_ PBOOL pfSave,_In_ DWORD dwFlags)
DWORD WINAPI credui.CredUIPromptForCredentialsA(_In_opt_ PCREDUI_INFO pUiInfo,_In_ PCTSTR pszTargetName,_In_ PCtxtHandle Reserved,_In_opt_ DWORD dwAuthError,_Inout_ PCTSTR pszUserName,_In_ ULONG ulUserNameMaxChars,_Inout_ PCTSTR pszPassword,_In_ ULONG ulPasswordMaxChars,_Inout_ PBOOL pfSave,_In_ DWORD dwFlags)
HRESULT None None.GetOutputConnector([in] ULONG uiIndex,[out None None,retval] IMILBitmapEffectOutputConnector **ppConnector)
BOOL WINAPI wtsapi32.WTSFreeMemoryEx(_In_ WTS_TYPE_CLASS WTSTypeClass,_In_ PVOID pMemory,_In_ ULONG NumberOfEntries)
BOOL WINAPI wtsapi32.WTSFreeMemoryExW(_In_ WTS_TYPE_CLASS WTSTypeClass,_In_ PVOID pMemory,_In_ ULONG NumberOfEntries)
BOOL WINAPI wtsapi32.WTSFreeMemoryExA(_In_ WTS_TYPE_CLASS WTSTypeClass,_In_ PVOID pMemory,_In_ ULONG NumberOfEntries)
HRESULT None srmsvc.get_State([out] FsrmCollectionState *state)
HRESULT None None.UnalignedStringCchLength(_In_ LPCTSTR psz,_In_ size_t cchMax,_Out_opt_ size_t *pcchLength)
HRESULT None None.UnalignedStringCchLengthW(_In_ LPCTSTR psz,_In_ size_t cchMax,_Out_opt_ size_t *pcchLength)
HRESULT None None.StringCchLengthA(_In_ LPCTSTR psz,_In_ size_t cchMax,_Out_opt_ size_t *pcchLength)
boolean None None.Equals(T other None)
HRESULT None None.put_onreadystatechange(VARIANT readystatechangeSink None)
BOOL None cabinet.Compress(_In_ COMPRESSOR_HANDLE CompressorHandle,_In_ PVOID UncompressedData,_In_ SIZE_T UncompressedDataSize,_Out_ PVOID CompressedBuffer,_In_ SIZE_T CompressedBufferSize,_Out_ PSIZE_T CompressedDataSize)
HRESULT None None.GetPartName([out None None,retval] IOpcPartUri **partName)
RPC_ENTRY None rpcrt4.UuidCreateNil(UUID __RPC_FAR *Nil_Uuid)
uint32 None cscobj.Enable([in] boolean Enable,[out] boolean RebootRequired)
NTSTATUS None advapi32.LsaEnumerateAccountRights(_In_ LSA_HANDLE PolicyHandle,_In_ PSID AccountSid,_Out_ PLSA_UNICODE_STRING *UserRights,_Out_ PULONG CountOfRights)
STDAPI None wsclient.AcquireDeveloperLicense(_In_opt_ HWND hwndParent,_Out_ FILETIME *pExpiration)
CLIENT_CALL_RETURN None rpcrt4.NdrClientCall4(_In_ PMIDL_STUB_DESC pStubDescriptor,_In_ PFORMAT_STRING pFormat,_Inout_ ... None)
HICON WINAPI user32.CopyIcon(_In_ HICON hIcon)
HRESULT None None.get_previousSibling(IXMLDOMNode **previousSibling None)
HRESULT None None.GetStreamPrioritization([out] IWMStreamPrioritization **ppSP)
JET_ERR JET_API None.JetExternalRestore2(__in JET_PSTR szCheckpointFilePath,__in JET_PSTR szLogPath,__in_opt JET_RSTMAP* rgrstmap,__in long crstfilemap,__in JET_PSTR szBackupLogPath,__in_out JET_LOGINFO* pLogInfo,__in_opt JET_PSTR szTargetInstanceName,__in_opt JET_PSTR szTargetInstanceLogPath,__in_opt JET_PSTR szTargetInstanceCheckpointPath,__in JET_PFNSTATUS pfn)
LRESULT None msacm32.acmDriverMessage(HACMDRIVER had None,UINT uMsg None,LPARAM lParam1 None,LPARAM lParam2 None)
HRESULT None None.IsSystemMoniker([out] DWORD *pdwMksys)
HANDLE WINAPI user32.GetProp(_In_ HWND hWnd,_In_ LPCTSTR lpString)
HANDLE WINAPI user32.GetPropW(_In_ HWND hWnd,_In_ LPCTSTR lpString)
HANDLE WINAPI user32.GetPropA(_In_ HWND hWnd,_In_ LPCTSTR lpString)
uint32 None wvrcimprov.GetGroupFromPartnership([in] string SourceRGName,[in] string SourceComputerName,[in] string DestinationRGName,[in] string DestinationComputerName,[out] MSFT_WvrReplicationGroup Output[])
HRESULT WINAPI d3dcompiler_47.D3DGetBlobPart(in LPCVOID pSrcData,in SIZE_T SrcDataSize,in D3D_BLOB_PART Part,in UINT Flags,out ID3DBlob ppPart)
HRESULT None None.Int8Sub(_In_ INT8 i8Minuend,_In_ INT8 i8Subtrahend,_Out_ INT8 *pi8Result)
BOOL WINAPI crypt32.CryptSIPRetrieveSubjectGuid(_In_ LPCWSTR FileName,_In_opt_ HANDLE hFileIn,_Out_ GUID *pgSubject)
HRESULT None None.OnLowResource(DB_DWRESERVE dwReserved None)
HRESULT None None.GetHelpFile([out] BSTR *pBstrHelpFile)
public Enlistment None.EnlistDurable(Guid resourceManagerIdentifier None,IEnlistmentNotification enlistmentNotification None,EnlistmentOptions enlistmentOptions None)
HRESULT None None.SetPatternByName(IDirectMusicSegmentState* pSegState None,WCHAR* wszName None,IDirectMusicStyle* pStyle None,DWORD dwPatternType None,DWORD* pdwLength None)
public void None.CopyFrom(Style s None)
VOID None None.IoAcquireCancelSpinLock(_Out_ PKIRQL Irql)
BOOL WINAPI kernel32.DisconnectNamedPipe(_In_ HANDLE hNamedPipe)
HRESULT None fundisc.GetCount([out] DWORD *pdwCount)
HRESULT None None.GetOwner([out None None,retval] IXpsOMDocument **document)
PDEVICE_OBJECT None None.IoGetRelatedDeviceObject(_In_ PFILE_OBJECT FileObject)
BOOL WINAPI vertdll.TerminateEnclave(_In_ LPVOID lpAddress,_In_ BOOL fWait)
HRESULT STDAPI srpapi.SrpEnablePermissiveModeFileEncryption(_In_opt_ PCWSTR enterpriseId)
HRESULT None wmpmediasharing.get_Name([out] BSTR *name)
HRESULT None None.GetSignaturePartReferenceSet([out None None,retval] IOpcSignaturePartReferenceSet **partReferenceSet)
HRESULT None None.GetDeviceID(LPCGUID pGuidSrc None,LPGUID pGuidDest None)
DWORD WINAPI mstlsapi.TLSKeyPackEnumNext(_In_ TLS_HANDLE hHandle,_In_ LsKeyPack *lpKeyPack,_Out_ PDWORD pdwErrCode)
protected void None.OnStylusButtonDown(StylusButtonEventArgs e None)
HRESULT None oleaut32.GetErrorInfo(_In_ ULONG dwReserved,_Out_ IErrorInfo **pperrinfo)
public boolean None.Match(Object obj None)
HRESULT None None.open(BSTR bstrMethod None,BSTR bstrUrl None,VARIANT varAsync None,VARIANT bstrUser None,VARIANT bstrPassword None)
HRESULT None None.GetVideoProcessorDeviceCaps([out] DXVAHD_VPDEVCAPS *pCaps)
INT_PTR WINAPI user32.DialogBoxIndirect(_In_opt_ HINSTANCE hInstance,_In_ LPCDLGTEMPLATE lpTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc)
INT_PTR WINAPI user32.DialogBoxIndirectW(_In_opt_ HINSTANCE hInstance,_In_ LPCDLGTEMPLATE lpTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc)
INT_PTR WINAPI user32.DialogBoxIndirectA(_In_opt_ HINSTANCE hInstance,_In_ LPCDLGTEMPLATE lpTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc)
HRESULT WINAPI iscsidsc.GetIscsiSessionList(_Inout_ ULONG *BufferSize,_Out_ ULONG *SessionCount,_Out_ PISCSI_SESSION_INFO SessionInfo)
HRESULT WINAPI iscsidsc.GetIscsiSessionListW(_Inout_ ULONG *BufferSize,_Out_ ULONG *SessionCount,_Out_ PISCSI_SESSION_INFO SessionInfo)
HRESULT WINAPI iscsidsc.GetIscsiSessionListA(_Inout_ ULONG *BufferSize,_Out_ ULONG *SessionCount,_Out_ PISCSI_SESSION_INFO SessionInfo)
HCURSOR WINAPI user32.LoadCursorFromFile(_In_ LPCTSTR lpFileName)
HCURSOR WINAPI user32.LoadCursorFromFileW(_In_ LPCTSTR lpFileName)
HCURSOR WINAPI user32.LoadCursorFromFileA(_In_ LPCTSTR lpFileName)
HRESULT None wmvcore.WMCreateDRMTranscryptor(_Out_ IWMDRMTranscryptor **ppTranscryptor)
HRESULT None mfplat.MFScheduleWorkItem(_In_ IMFAsyncCallback *pCallback,_In_ IUnknown *pState,_In_ INT64 Timeout,_Out_ MFWORKITEM_KEY *pKey)
BOOL WINAPI user32.SetWindowText(_In_ HWND hWnd,_In_opt_ LPCTSTR lpString)
BOOL WINAPI user32.SetWindowTextW(_In_ HWND hWnd,_In_opt_ LPCTSTR lpString)
BOOL WINAPI user32.SetWindowTextA(_In_ HWND hWnd,_In_opt_ LPCTSTR lpString)
BOOL None nddeapi.NDdeIsValidAppTopicList(_In_ LPTSTR targetTopic)
BOOL None nddeapi.NDdeIsValidAppTopicListW(_In_ LPTSTR targetTopic)
BOOL None nddeapi.NDdeIsValidAppTopicListA(_In_ LPTSTR targetTopic)
HRESULT None None.GetDistanceFactor(D3DVALUE * pflDistanceFactor)
HRESULT None None.GetObjectContext([out None None,retval] ObjectContext **ppContext)
LPTSTR WINAPI user32.CharUpper(_Inout_ LPTSTR lpsz)
LPTSTR WINAPI user32.CharUpperW(_Inout_ LPTSTR lpsz)
LPTSTR WINAPI user32.CharUpperA(_Inout_ LPTSTR lpsz)
BOOL None gdi32.GetCharWidthI(_In_ HDC hdc,_In_ UINT giFirst,_In_ UINT cgi,_In_ LPWORD pgi,_Out_ LPINT lpBuffer)
public void None.FillPath(Brush brush None,GraphicsPath path None)
HRESULT None cscsvc.GetFileTimes([out] FILETIME *pftLastWrite,[out] FILETIME *pftChange)
void None None.SetImageInformation(string imageInformation None)
NTSTATUS None None.ExDeleteResourceLite(_Inout_ PERESOURCE Resource)
HRESULT WINAPI wsdapi.WSDUriEncode(_In_ LPCWSTR source,_In_ DWORD cchSource,_Out_ LPWSTR *destOut,_Out_opt_ DWORD *cchDestOut)
NTSTATUS None None.FltStartFiltering(_In_ PFLT_FILTER Filter)
NET_API_STATUS None netapi32.NetLocalGroupGetMembers(_In_ LPCWSTR servername,_In_ LPCWSTR localgroupname,_In_ DWORD level,_Out_ LPBYTE *bufptr,_In_ DWORD prefmaxlen,_Out_ LPDWORD entriesread,_Out_ LPDWORD totalentries,_Inout_ PDWORD_PTR resumehandle)
WDFOBJECT None None.WdfDpcGetParentObject(_In_ WDFDPC Dpc)
BOOL None ws2_32.WSASetEvent(_In_ WSAEVENT hEvent)
BOOL WINAPI kernel32.InitializeContext(_Out_opt_ PVOID Buffer,_In_ DWORD ContextFlags,_Out_opt_ PCONTEXT *Context,_Inout_ PWORD ContextLength)
HRESULT WINAPI wsbonline.DeregisterOnlineBackupFromWindowsServerBackup(_In_ GUID guidSnapinId)
BOOL WINAPI msajapi.AllJoynReceiveFromBus(_In_ HANDLE connectedBusHandle,_Out_ VOID* buffer,_In_ DWORD bytesToRead,_Out_opt_ PDWORD *bytesTransferred,_Inout_ PVOID reserved)
HRESULT None srmsvc.get__NewEnum([out] IUnknown **unknown)
uint32 None cscobj.Unpin([in] string Paths[],[in] uint32 Flags,[in] boolean Deep)
UINT None oleacc.GetRoleText(_In_ DWORD dwRole,_Out_ LPTSTR lpszRole,_In_ UINT cchRoleMax)
UINT None oleacc.GetRoleTextW(_In_ DWORD dwRole,_Out_ LPTSTR lpszRole,_In_ UINT cchRoleMax)
UINT None oleacc.GetRoleTextA(_In_ DWORD dwRole,_Out_ LPTSTR lpszRole,_In_ UINT cchRoleMax)
HRESULT None mrmsupport.IndexFilePath(_In_ PVOID resourceIndexer,_In_ PCWSTR filePath,_Out_ PWSTR *ppResourceUri,_Out_ ULONG *pQualifierCount,_Out_ IndexedResourceQualifier **ppQualifiers)
BOOL WINAPI None.Configure(HEXPERTKEY hExpertKey None,PEXPERTCONFIG* ppConfig None,PEXPERTSTARTUPINFO pExpertStartupInfo None,DWORD StartupFlags None,HWND hWnd None)
HRESULT None None.QueryStatus([out] HRESULT *phrResult)
HRESULT None None.GetRowStatus(HCHAPTER hReserved None,DBCOUNTITEM cRows None,const HROW rghRows[],DBPENDINGSTATUS rgPendingStatus[] None)
HRESULT STDAPI cldapi.CfRevertPlaceholder(_In_ HANDLE FileHandle,_In_ CF_REVERT_FLAGS RevertFlags,_Inout_opt_ LPOVERLAPPED Overlapped)
HRESULT None None.get_PatternOrURL([out None None,retval] LPWSTR *ppszPatternOrURL)
HRESULT None None.CreateSigningOptions([out None None,retval] IXpsSigningOptions **signingOptions)
ATOM WINAPI kernel32.GlobalAddAtom(_In_ LPCTSTR lpString)
ATOM WINAPI kernel32.GlobalAddAtomW(_In_ LPCTSTR lpString)
ATOM WINAPI kernel32.GlobalAddAtomA(_In_ LPCTSTR lpString)
ULONG None None.IsReparseTagMicrosoft(ULONG _tag None)
BOOL WINAPI user32.EnableWindow(_In_ HWND hWnd,_In_ BOOL bEnable)
HRESULT WINAPI d3dcompiler_47.D3DDecompressShaders(in LPCVOID pSrcData,in SIZE_T SrcDataSize,in UINT uNumShaders,in UINT uStartIndex,in_opt UINT pIndices,in UINT uFlags,out ID3DBlob ppShaders,out_opt UINT pTotalShaders)
HRESULT None None.IntPtrSub(_In_ INT_PTR iMinuend,_In_ INT_PTR iSubtrahend,_Out_ INT_PTR *piResult)
HRESULT _stdcall wiaservc.wiasSetValidRangeFloat(_In_ BYTE *pWiasContext,PROPID propid None,FLOAT fMin None,FLOAT fNom None,FLOAT fMax None,FLOAT fStep None)
SIZE_T WINAPI kernel32.VirtualQueryEx(_In_ HANDLE hProcess,_In_opt_ LPCVOID lpAddress,_Out_ PMEMORY_BASIC_INFORMATION lpBuffer,_In_ SIZE_T dwLength)
HRESULT None cimwin32.GetQualifierSet([out] IWbemQualifierSet **ppQualSet)
HBA_STATUS HBA_API hbaapi.HBA_GetDiscoveredPortAttributes(_In_ HBA_HANDLE HbaHandle,_In_ HBA_UINT32 PortIndex,_In_ HBA_UINT32 DiscoveredPortIndex,_Out_ HBA_PORTATTRIBUTES *HbaPortAttributes)
STDMETHODIMP None None.CheckFileSystem(PCWSTR pcwszDrive None)
HRESULT None None.StartTransaction(ISOLEVEL isoLevel None,ULONG isoFlags None,ITransactionOptions *pOtherOptions None,ULONG *pulTransactionLevel None)
HRESULT None dwrite.GetPropertyValues(DWRITE_FONT_PROPERTY_ID propertyId None,[out] IDWriteStringList **values)
HDESK WINAPI user32.GetThreadDesktop(_In_ DWORD dwThreadId)
HRESULT None None.GetSigningTime([out None None,retval] LPWSTR *sigDateTimeString)
BOOL WINAPI kernel32.SystemTimeToTzSpecificLocalTime(_In_opt_ LPTIME_ZONE_INFORMATION lpTimeZone,_In_ LPSYSTEMTIME lpUniversalTime,_Out_ LPSYSTEMTIME lpLocalTime)
UINT WINAPI user32.RegisterWindowMessage(_In_ LPCTSTR lpString)
UINT WINAPI user32.RegisterWindowMessageW(_In_ LPCTSTR lpString)
UINT WINAPI user32.RegisterWindowMessageA(_In_ LPCTSTR lpString)
HRESULT None None.StampPMsg(DMUS_PMSG* pPMSG None)
HRESULT None sensorsapi.UninstallLogicalSensor(REFGUID guidLogicalID None)
BOOL None shell32.PathMakeUniqueName(_Out_ PWSTR pszUniqueName,UINT cchMax None,_In_ PCWSTR pszTemplate,_In_opt_ PCWSTR pszLongPlate,_In_opt_ PCWSTR pszDir)
public void None.BeginInvokeShutdown(DispatcherPriority priority None)
BOOL None plotui.PrinterProperties(_In_ HWND hWnd,_In_ HANDLE hPrinter)
VOID CALLBACK None.PFN_WdsCliCallback(_In_ DWORD dwMessageId,_In_opt_ WPARAM wParam,_In_opt_ LPARAM lParam,_In_opt_ PVOID pvUserData)
HRESULT None msrdc.GetRecordCount([out] DWORD *recordCount)
HRESULT None None.MoveNext([out None None,retval] BOOL *hasNext)
HRESULT STDMETHODCALLTYPE None.QueryStations(QUERYTABLE* lpQueryTable None)
HRESULT None d2d1.CreateSvgGlyphStyle([out] ID2D1SvgGlyphStyle **svgGlyphStyle)
HRESULT None oleaut32.VarMul(_In_ LPVARIANT pvarLeft,_In_ LPVARIANT pvarRight,_Out_ LPVARIANT pvarResult)
public boolean None.Match(Object obj None)
HRESULT None None.GetCustomHeaders([out] LPWSTR *pRequestHeaders)
HRESOURCE WINAPI clusapi.ClusterSharedVolumeSetSnapshotState(_In_ GUID guidSnapshotSet,_In_ LPCWSTR lpszVolumeName,_In_ CLUSTER_SHARED_VOLUME_SNAPSHOT_STATE state)
NTSTATUS None None.ZwCreateResourceManager(_Out_ PHANDLE ResourceManagerHandle,_In_ ACCESS_MASK DesiredAccess,_In_ HANDLE TmHandle,_In_opt_ LPGUID ResourceManagerGuid,_In_opt_ POBJECT_ATTRIBUTES ObjectAttributes,_In_opt_ ULONG CreateOptions,_In_opt_ PUNICODE_STRING Description)
protected void None.OnMouseEnter(MouseEventArgs e None)
HRESULT None mfplat.MFCreateSample(IMFSample **ppIMFSample None)
DWORD PXEAPI wdspxe.PxeGetServerInfoEx(_In_ PXE_GSI_TYPE uInfoType,_Out_ PVOID pBuffer,_In_ ULONG uBufferLen,_Out_ PULONG puBufferUsed)
BOOL WINAPI clfsw32.AddLogContainerSet(_In_ HANDLE hLog,_In_ USHORT cContainers,_In_opt_ PULONGLONG pcbContainer,_In_ LPWSTR *rgwszContainerPath,_Inout_opt_ PVOID Reserved)
BOOL WINAPI user32.OemToChar(_In_ LPCSTR lpszSrc,_Out_ LPTSTR lpszDst)
BOOL WINAPI user32.OemToCharW(_In_ LPCSTR lpszSrc,_Out_ LPTSTR lpszDst)
BOOL WINAPI user32.OemToCharA(_In_ LPCSTR lpszSrc,_Out_ LPTSTR lpszDst)
protected void None.OnPreviewMouseMove(MouseEventArgs e None)
VOID WINAPI advapi32.CloseThreadWaitChainSession(_In_ HWCT WctHandle)
HRESULT None None.GetRelativeDescriptionType([out] PROPDESC_RELATIVEDESCRIPTION_TYPE *prdt)
HRESULT None None.SetParam(REFGUID rguidType None,DWORD dwGroupBits None,DWORD dwIndex None,MUSIC_TIME mtTime None,void* pParam None)
HWND WINAPI user32.GetParent(_In_ HWND hWnd)
BOOL WINAPI user32.GetCaretPos(_Out_ LPPOINT lpPoint)
BOOL WINAPI advapi32.SaferComputeTokenFromLevel(_In_ SAFER_LEVEL_HANDLE LevelHandle,_In_opt_ HANDLE InAccessToken,_Out_ PHANDLE OutAccessToken,_In_ DWORD dwFlags,_Inout_opt_ LPVOID lpReserved)
UINT WINAPI msi.MsiEndTransaction(_In_ DWORD dwTransactionState)
NET_API_STATUS None netapi32.NetGetJoinInformation(_In_ LPCWSTR lpServer,_Out_ LPWSTR *lpNameBuffer,_Out_ PNETSETUP_JOIN_STATUS BufferType)
HRESULT None spoolss.GetPrinterDriverPackagePath(_In_ LPCTSTR pszServer,_In_ LPCTSTR pszEnvironment,_In_ LPCTSTR pszLanguage,_In_ LPCTSTR pszPackageID,_Inout_ LPTSTR pszDriverPackageCab,_In_ DWORD cchDriverPackageCab,_Out_ LPDWORD pcchRequiredSize)
HRESULT None spoolss.GetPrinterDriverPackagePathW(_In_ LPCTSTR pszServer,_In_ LPCTSTR pszEnvironment,_In_ LPCTSTR pszLanguage,_In_ LPCTSTR pszPackageID,_Inout_ LPTSTR pszDriverPackageCab,_In_ DWORD cchDriverPackageCab,_Out_ LPDWORD pcchRequiredSize)
HRESULT None spoolss.GetPrinterDriverPackagePathA(_In_ LPCTSTR pszServer,_In_ LPCTSTR pszEnvironment,_In_ LPCTSTR pszLanguage,_In_ LPCTSTR pszPackageID,_Inout_ LPTSTR pszDriverPackageCab,_In_ DWORD cchDriverPackageCab,_Out_ LPDWORD pcchRequiredSize)
public void None.GoToPage(int pageNumber None)
NET_API_STATUS None netapi32.NetUserGetGroups(_In_ LPCWSTR servername,_In_ LPCWSTR username,_In_ DWORD level,_Out_ LPBYTE *bufptr,_In_ DWORD prefmaxlen,_Out_ LPDWORD entriesread,_Out_ LPDWORD totalentries)
BOOL WINAPI clfsw32.ReadLogRecord(_In_ PVOID pvMarshal,_In_ PCLFS_LSN plsnFirst,_In_ CLFS_CONTEXT_MODE eContextMode,_Out_ PVOID *ppvReadBuffer,_Out_ PULONG pcbReadBuffer,_Out_ PCLFS_RECORD_TYPE peRecordType,_Out_ PCLFS_LSN plsnUndoNext,_Out_ PCLFS_LSN plsnPrevious,_Out_ PVOID *ppvReadContext,_Inout_opt_ LPOVERLAPPED pOverlapped)
HRESULT None azroles.get_NonMembersName([out] VARIANT *pvarProp)
BOOL None None.MonthCal_SetUnicodeFormat(HWND hwnd None,BOOL fUnicode None)
VOID None None.WdfDeviceInitSetPowerPolicyEventCallbacks(_In_ PWDFDEVICE_INIT DeviceInit,_In_ PWDF_POWER_POLICY_EVENT_CALLBACKS PowerPolicyEventCallbacks)
HRESULT None shlwapi.IStream_Copy(_In_ IStream *pstmFrom,_In_ IStream *pstmTo,_In_ DWORD cb)
BOOL None None.Header_SetUnicodeFormat(HWND hwnd None,BOOL fUnicode None)
HRESULT None azroles.get_ApplicationGroups([out] IAzApplicationGroups **ppGroupCollection)
LPVOID WINAPI None.ExpertAllocMemory(HEXPERTKEY hExpertKey None,SIZE_T nBytes None,LPDWORD pError None)
BOOL None winmm.mciGetErrorString(DWORD fdwError None,LPTSTR lpszErrorText None,UINT cchErrorText None)
BOOL None winmm.mciGetErrorStringW(DWORD fdwError None,LPTSTR lpszErrorText None,UINT cchErrorText None)
BOOL None winmm.mciGetErrorStringA(DWORD fdwError None,LPTSTR lpszErrorText None,UINT cchErrorText None)
HRESULT WINAPI iscsidsc.SendScsiInquiry(_In_ PISCSI_UNIQUE_SESSION_ID *UniqueSessionId,_In_ ULONGLONG Lun,_In_ UCHAR EvpdCmddt,_In_ UCHAR PageCode,_Out_ PUCHAR *ScsiStatus,_Inout_ PULONG *ReponseSize,_Out_ PUCHAR ReponseBuffer,_Inout_ PULONG *SenseSize,_Out_ PUCHAR SenseBuffer)
HRESULT WINAPI d3dcompiler_47.D3DLoadModule(_In_ LPCVOID pSrcData,_In_ SIZE_T cbSrcDataSize,_Out_ ID3D11Module **ppModule)
HANDLE WINAPI kernel32.CreateMutex(_In_opt_ LPSECURITY_ATTRIBUTES lpMutexAttributes,_In_ BOOL bInitialOwner,_In_opt_ LPCTSTR lpName)
HANDLE WINAPI kernel32.CreateMutexW(_In_opt_ LPSECURITY_ATTRIBUTES lpMutexAttributes,_In_ BOOL bInitialOwner,_In_opt_ LPCTSTR lpName)
HANDLE WINAPI kernel32.CreateMutexA(_In_opt_ LPSECURITY_ATTRIBUTES lpMutexAttributes,_In_ BOOL bInitialOwner,_In_opt_ LPCTSTR lpName)
HRESULT None None.GetCreated([out None None,retval] SYSTEMTIME *created)
protected void None.OnPropertyChanged(DependencyPropertyChangedEventArgs e None)
HRESULT None wmpmediasharing.get_Count([out] LONG *count)
HKEY None None.SetupDiCreateDeviceInterfaceRegKey(_In_ HDEVINFO DeviceInfoSet,_In_ PSP_DEVICE_INTERFACE_DATA DeviceInterfaceData,_Reserved_ DWORD Reserved,_In_ REGSAM samDesired,_In_opt_ HINF InfHandle,_In_opt_ PCTSTR InfSectionName)
public boolean None.StreamExists(String name None)
MI_INLINE MI_Result None.MI_Context_RefuseUnload(_In_ MI_Context *context)
LONG WINAPI tapi32.lineSetCallQualityOfService(HCALL hCall None,LPVOID lpSendingFlowspec None,DWORD dwSendingFlowspecSize None,LPVOID lpReceivingFlowspec None,DWORD dwReceivingFlowspecSize None)
VOID None None.ObReferenceObject(_In_ PVOID Object)
BOOL WINAPI None.WIMMountImage(PWSTR pszMountPath None,PWSTR pszWimFileName None,DWORD dwImageIndex None,PWSTR pszTempPath None)
HRESULT None shell32.GetCommandString(UINT_PTR idCmd None,UINT uFlags None,UINT *pwReserved None,LPSTR pszName None,UINT cchMax None)
uint32 None cimwin32.Create([in] string Command,[in] datetime StartTime,[in None None,optional] boolean RunRepeatedly,[in None None,optional] uint32 DaysOfWeek,[in None None,optional] uint32 DaysOfMonth,[in None None,optional] boolean InteractWithDesktop,[out] uint32 JobId)
HRESULT None None.GetAdvisoryPageDimensions([out None None,retval] XPS_SIZE *pageDimensions)
DWORD WINAPI user32.GetQueueStatus(_In_ UINT flags)
protected void None.OnMouseEnter(MouseEventArgs e None)
public None None.InvalidOperationException(String message None,Exception innerException None)
uint32 None netpeerdistcim.Enable_BCDowngrading([in] uint32 Version,[in] string PolicyStore,[in] boolean Force)
HRESULT None None.UnalignedStringCbLength(_In_ LPCTSTR psz,_In_ size_t cbMax,_Out_opt_ size_t *pcbLength)
HRESULT None None.UnalignedStringCbLengthW(_In_ LPCTSTR psz,_In_ size_t cbMax,_Out_opt_ size_t *pcbLength)
HRESULT None None.StringCbLengthA(_In_ LPCTSTR psz,_In_ size_t cbMax,_Out_opt_ size_t *pcbLength)
HRESULT None actxprxy.GetRecorderProperties([out] IPropertyStorage **pPropStg)
DWORD PXEAPI None.PxeProviderInitialize(_In_ HANDLE hProvider,_In_ HKEY hProviderKey)
protected void None.OnMouseEnter(MouseEventArgs e None)
DWORD PXEAPI wdspxe.PxeSendReply(_In_ HANDLE hClientRequest,_In_ PVOID pPacket,_In_ ULONG uPacketLen,_In_ PXE_ADDRESS *pAddress)
FLT_PREOP_CALLBACK_STATUS None None.FltOplockFsctrl(_In_ POPLOCK Oplock,_In_ PFLT_CALLBACK_DATA CallbackData,_In_ ULONG OpenCount)
BOOL WINAPI clfsw32.AddLogContainer(_In_ HANDLE hLog,_In_opt_ PULONGLONG pcbContainer,_In_ LPWSTR pwszContainerPath,_Inout_opt_ LPVOID pReserved)
BOOL WINAPI kernel32.IsWow64Process(_In_ HANDLE hProcess,_Out_ PBOOL Wow64Process)
BOOL WINAPI user32.OemToCharBuff(_In_ LPCSTR lpszSrc,_Out_ LPTSTR lpszDst,_In_ DWORD cchDstLength)
BOOL WINAPI user32.OemToCharBuffW(_In_ LPCSTR lpszSrc,_Out_ LPTSTR lpszDst,_In_ DWORD cchDstLength)
BOOL WINAPI user32.OemToCharBuffA(_In_ LPCSTR lpszSrc,_Out_ LPTSTR lpszDst,_In_ DWORD cchDstLength)
HRESULT None None.EnumVerbs([out] IEnumOLEVERB **ppEnumOleVerb)
HRESULT None None.EnumCache([out] IEnumSTATDATA **ppenumSTATDATA)
HRESULT __stdcall None.DllGetClassObject(_In_ REFCLSID rclsid,_In_ REFIID riid,_Out_ LPVOID *ppv)
BOOL WINAPI fmapi.CreateFileRestoreContext(_In_ PCWSTR Volume,_In_ RESTORE_CONTEXT_FLAGS Flags,_In_opt_ LONGLONG StartSector,_In_ LONGLONG BootSector,_In_ DWORD Version,_Out_ PFILE_RESTORE_CONTEXT Context)
HRESULT None spoolss.CorePrinterDriverInstalled(_In_ LPCTSTR pszServer,_In_ LPCTSTR pszEnvironment,_In_ GUID CoreDriverGUID,_In_ FILETIME ftDriverDate,_In_ DWORDLONG dwlDriverVersion,_Out_ BOOL *pbDriverInstalled)
HRESULT None spoolss.CorePrinterDriverInstalledW(_In_ LPCTSTR pszServer,_In_ LPCTSTR pszEnvironment,_In_ GUID CoreDriverGUID,_In_ FILETIME ftDriverDate,_In_ DWORDLONG dwlDriverVersion,_Out_ BOOL *pbDriverInstalled)
HRESULT None spoolss.CorePrinterDriverInstalledA(_In_ LPCTSTR pszServer,_In_ LPCTSTR pszEnvironment,_In_ GUID CoreDriverGUID,_In_ FILETIME ftDriverDate,_In_ DWORDLONG dwlDriverVersion,_Out_ BOOL *pbDriverInstalled)
HRESULT None None.SetAllParameters(LPCDSFXDistortion pcDsFxDistortion None)
BOOL WINAPI wecapi.EcSaveSubscription(_In_ EC_HANDLE Subscription,_In_ DWORD Flags)
VOID None None.IoSetNextIrpStackLocation(_Inout_ PIRP Irp)
HRESULT None propsys.PSGetPropertyValue(_In_ IPropertyStore *pps,_In_ IPropertyDescription *ppd,_Out_ PROPVARIANT *ppropvar)
HRESULT None uxtheme.SetWindowTheme(_In_ HWND hwnd,_In_ LPCWSTR pszSubAppName,_In_ LPCWSTR pszSubIdList)
HRESULT None azroles.get_Writable([out] BOOL *pfProp)
protected void None.OnPreviewStylusDown(StylusDownEventArgs e None)
TLS_HANDLE WINAPI mstlsapi.TLSConnectToLsServer(_In_ LPTSTR pszLsServer)
HRESULT None azroles.get_ApplicationGroups([out] IAzApplicationGroups **ppGroupCollection)
UINT None msi.MsiQueryFeatureStateEx(_In_ LPTSTR szProductCode,_In_ LPTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ LPCTSTR szFeature,_Out_opt_ INSTALLSTATE *pdwState)
UINT None msi.MsiQueryFeatureStateExW(_In_ LPTSTR szProductCode,_In_ LPTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ LPCTSTR szFeature,_Out_opt_ INSTALLSTATE *pdwState)
UINT None msi.MsiQueryFeatureStateExA(_In_ LPTSTR szProductCode,_In_ LPTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ LPCTSTR szFeature,_Out_opt_ INSTALLSTATE *pdwState)
HRESULT WINAPI shcore.GetDpiForMonitor(_In_ HMONITOR hmonitor,_In_ MONITOR_DPI_TYPE dpiType,_Out_ UINT *dpiX,_Out_ UINT *dpiY)
VOID None None.WDF_DRIVER_CONFIG_INIT(_Out_ PWDF_DRIVER_CONFIG Config,_In_opt_ PFN_WDF_DRIVER_DEVICE_ADD EvtDriverDeviceAdd)
HRESULT None windowscodecs.GetQuantizationTable(UINT scanIndex None,UINT tableIndex None,[out] DXGI_JPEG_QUANTIZATION_TABLE *pQuantizationTable)
VOID None None.ObDereferenceObjectDeferDeleteWithTag(_In_ PVOID Object,_In_ ULONG Tag)
HRESULT None None.get_PlayerAllocatedBandwidth(long* pVal None)
public DependentTransaction None.DependentClone(DependentCloneOption cloneOption None)
NET_API_STATUS None netapi32.NetGroupEnum(_In_ LPCWSTR servername,_In_ DWORD level,_Out_ LPBYTE *bufptr,_In_ DWORD prefmaxlen,_Out_ LPDWORD entriesread,_Out_ LPDWORD totalentries,_Inout_ PDWORD_PTR resume_handle)
HRSRC WINAPI kernel32.FindResourceEx(_In_opt_ HMODULE hModule,_In_ LPCTSTR lpType,_In_ LPCTSTR lpName,_In_ WORD wLanguage)
HRSRC WINAPI kernel32.FindResourceExW(_In_opt_ HMODULE hModule,_In_ LPCTSTR lpType,_In_ LPCTSTR lpName,_In_ WORD wLanguage)
HRSRC WINAPI kernel32.FindResourceExA(_In_opt_ HMODULE hModule,_In_ LPCTSTR lpType,_In_ LPCTSTR lpName,_In_ WORD wLanguage)
HRESULT WINAPI dismapi.DismDelete(_In_ VOID *DismStructure)
ULONG STDMETHODCALLTYPE rpcrt4.IUnknown_Release_Proxy(IUnknown __RPC_FAR *This)
public boolean None.IsValidType(Object value None)
void None None.HSSetShader(ID3D11HullShader *pHullShader None,ID3D11ClassInstance *const *ppClassInstances,UINT NumClassInstances None)
HRESULT __stdcall comsvcs.CoEnterServiceDomain(_In_ IUnknown *pConfigObject)
HRESULT None None.ReleaseObject(IDirectMusicObject * pObject)
HRESULT None None.Unload(IDirectMusicPerformance* pPerformance None)
NTSTATUS None None.LsapChangeBlankPasswordRestriction(_In_ BOOLEAN Enable)
function None None.onSilverlightError(sender None None,args None None)
NETIOAPI_API None iphlpapi.GetMulticastIpAddressTable(_In_ ADDRESS_FAMILY Family,_Out_ PMIB_MULTICASTIPADDRESS_TABLE *Table)
BOOL None dxva2.SetMonitorDisplayAreaPosition(_In_ HANDLE hMonitor,_In_ MC_POSITION_TYPE ptPositionType,_In_ DWORD dwNewPosition)
TRACEHANDLE None sechost.OpenTrace(_Inout_ PEVENT_TRACE_LOGFILE Logfile)
TRACEHANDLE None sechost.OpenTraceW(_Inout_ PEVENT_TRACE_LOGFILE Logfile)
TRACEHANDLE None sechost.OpenTraceA(_Inout_ PEVENT_TRACE_LOGFILE Logfile)
HRESULT None None.LongLongMult(_In_ LONGLONG llMultiplicand,_In_ LONGLONG llMultiplier,_Out_ LONGLONG *pllResult)
void None None.Rollback(Enlistment enlistment None)
WORD None None.SORTIDFROMLCID(LCID lcid None)
public Object None.Invoke(DispatcherPriority priority None,Delegate method None,Object arg None,Object[] args None)
protected void None.OnPreviewLostKeyboardFocus(KeyboardFocusChangedEventArgs e None)
BOOL WINAPI kernel32.GetNamedPipeClientProcessId(_In_ HANDLE Pipe,_Out_ PULONG ClientProcessId)
BOOL WINAPI kernel32.RemoveDirectory(_In_ LPCTSTR lpPathName)
BOOL WINAPI kernel32.RemoveDirectoryW(_In_ LPCTSTR lpPathName)
BOOL WINAPI kernel32.RemoveDirectoryA(_In_ LPCTSTR lpPathName)
BOOL WINAPI None.WIMGetMountedImageInfo(MOUNTED_IMAGE_INFO_LEVELS fInfoLevelId None,PDWORD pdwImageCount None,PVOID pMountInfo None,DWORD cbMountInfoLength None,PDWORD pcbReturnLength None)
DWORD WINAPI kernel32.GetEnvironmentVariable(_In_opt_ LPCTSTR lpName,_Out_opt_ LPTSTR lpBuffer,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetEnvironmentVariableW(_In_opt_ LPCTSTR lpName,_Out_opt_ LPTSTR lpBuffer,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetEnvironmentVariableA(_In_opt_ LPCTSTR lpName,_Out_opt_ LPTSTR lpBuffer,_In_ DWORD nSize)
HRESULT None prntvpt.PTCloseProvider(_In_ HPTPROVIDER hProvider)
HRESULT None uxtheme.BufferedPaintStopAllAnimations(HWND hwnd None)
ULONGLONG None None.VER_SET_CONDITION(ULONGLONG dwlConditionMask None,DWORD dwTypeBitMask None,BYTE dwConditionMask None)
BOOL WINAPI user32.OpenClipboard(_In_opt_ HWND hWndNewOwner)
BOOL WINAPI advapi32.SetServiceStatus(_In_ SERVICE_STATUS_HANDLE hServiceStatus,_In_ LPSERVICE_STATUS lpServiceStatus)
HRESULT None wmpmediasharing.get_userHomeMediaSharingState([out] VARIANT_BOOL *sharingEnabled)
HRESULT None qmgrprxy.GetOwner([out] LPWSTR *ppOwner)
VOID None None.FsRtlDeregisterUncProvider(_In_ HANDLE Handle)
ULONG TDHAPI tdh.TdhEnumerateManifestProviderEvents(_In_ LPGUID ProviderGuid,_Out_ PPROVIDER_EVENT_INFO ProviderInfo,_Inout_ ULONG *BufferSize)
protected void None.OnStylusButtonDown(StylusButtonEventArgs e None)
public PrintSystemJobInfo None.AddJob(String jobName None,String documentPath None,boolean fastCopy None)
HRESULT None vssapi.IsVolumeSnapshotted(_In_ VSS_PWSZ pwszVolumeName,_Out_ BOOL *pbSnapshotsPresent,_Out_ LONG *plSnapshotCapability)
HRESULT None None.get_Width([out] OLE_XSIZE_HIMETRIC *pWidth)
NTSTATUS None None.IoCsqInsertIrpEx(_Inout_ PIO_CSQ Csq,_Inout_ PIRP Irp,_Out_opt_ PIO_CSQ_IRP_CONTEXT Context,_In_opt_ PVOID InsertContext)
HANDLE WINAPI kernel32.OpenJobObject(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandles,_In_ LPCTSTR lpName)
HANDLE WINAPI kernel32.OpenJobObjectW(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandles,_In_ LPCTSTR lpName)
HANDLE WINAPI kernel32.OpenJobObjectA(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandles,_In_ LPCTSTR lpName)
HRESULT None None.get_output(VARIANT* pOutput None)
DWORD WINAPI clusapi.CancelClusterGroupOperation(_In_ HGROUP hGroup,_In_ DWORD dwCancelFlags_RESERVED)
BOOL None sisbkup.SisCSFilesToBackupForLink(_In_ PVOID sisBackupStructure,_In_ PVOID reparseData,_In_ ULONG reparseDataSize,_Out_ PVOID thisFileContext,_Out_ PVOID *matchingFileContext,_Out_ PULONG countOfCommonStoreFilesToBackUp,_Out_ PWCHAR **commonStoreFilesToBackUp)
HRESULT None azroles.get_Scopes([out] IAzScopes **ppScopeCollection)
public bool None.IsEntryPointRegistered(Guid guidEntryPoint None)
WINOLEAPI None ole32.FreePropVariantArray(_In_ ULONG cVariants,_In_ PROPVARIANT *rgvars)
HRESULT None oleaut32.VarBstrFromCy(_In_ CY cyIn,_In_ LCID lcid,_In_ ULONG dwFlags,_Out_ BSTR *pbstrOut)
HRESULT None qmgrprxy.Clone([out] IEnumBackgroundCopyJobs **ppEnumJobs)
HWND None user32.WindowFromDC(_In_ HDC hDC)
EC_HANDLE WINAPI wecapi.EcOpenSubscription(_In_ LPCWSTR SubscriptionName,_In_ DWORD AccessMask,_In_ DWORD Flags)
NTSTATUS WINAPI netapi32.NetLogonSetServiceBits(_In_ LPWSTR ServerName,_In_ DWORD ServiceBitsOfInterest,_In_ DWORD ServiceBits)
PWSTR None shlwapi.StrFormatByteSizeW(LONGLONG qdw None,_Out_ PWSTR pszBuf,UINT cchBuf None)
PWSTR None shlwapi.StrFormatByteSizeW(LONGLONG qdw None,_Out_ PWSTR pszBuf,UINT cchBuf None)
HRESULT None None.CreateSessionManager(IAudioSessionManager2** ppSessionManager None)
HRESULT None None.GetTransformLocal([out None None,retval] IXpsOMMatrixTransform **transform)
BOOL None gdi32.GetCharABCWidths(_In_ HDC hdc,_In_ UINT uFirstChar,_In_ UINT uLastChar,_Out_ LPABC lpabc)
BOOL None gdi32.GetCharABCWidthsW(_In_ HDC hdc,_In_ UINT uFirstChar,_In_ UINT uLastChar,_Out_ LPABC lpabc)
BOOL None gdi32.GetCharABCWidthsA(_In_ HDC hdc,_In_ UINT uFirstChar,_In_ UINT uLastChar,_Out_ LPABC lpabc)
public IAsyncResult None.BeginInvoke(Delegate method None)
uint32 None mttmprov.SetInterval([in] uint16 Seconds)
BOOL None gdi32.InvertRgn(_In_ HDC hdc,_In_ HRGN hrgn)
VOID None None.FreeUiInfo(_In_ UiInfo *pInfo)
BOOL None None.TreeView_DeleteAllItems(HWND hwndTV None)
uint32 None ramgmtpsprovider.Enable([in] string RoutingDomain,[in] boolean PassThru,[in] boolean Force,[out] BgpRouteFlapDampeningConfig cmdletOutput)
BOOL CALLBACK None.EnumResNameProc(_In_opt_ HMODULE hModule,_In_ LPCTSTR lpszType,_In_ LPTSTR lpszName,_In_ LONG_PTR lParam)
BOOL CALLBACK None.EnumResNameProcW(_In_opt_ HMODULE hModule,_In_ LPCTSTR lpszType,_In_ LPTSTR lpszName,_In_ LONG_PTR lParam)
BOOL CALLBACK None.EnumResNameProcA(_In_opt_ HMODULE hModule,_In_ LPCTSTR lpszType,_In_ LPTSTR lpszName,_In_ LONG_PTR lParam)
HRESULT None None.EnumSubCommands([out] IEnumExplorerCommand **ppEnum)
PVOID WINAPI kernel32.RtlLookupFunctionEntry(_In_ ULONGLONG ControlPc,_Out_ PULONGLONG ImageBase,_Out_ PULONGLONG TargetGp)
ULONG STDMETHODCALLTYPE ole32.CStdAsyncStubBuffer_AddRef(_In_ IRpcStubBuffer *pthis)
HRESULT STDAPI cldapi.CfDisconnectSyncRoot(_In_ CF_CONNECTION_KEY ConnectionKey)
BOOL WINAPI user32.GetClassInfo(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpClassName,_Out_ LPWNDCLASS lpWndClass)
BOOL WINAPI user32.GetClassInfoW(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpClassName,_Out_ LPWNDCLASS lpWndClass)
BOOL WINAPI user32.GetClassInfoA(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpClassName,_Out_ LPWNDCLASS lpWndClass)
LONG WINAPI advapi32.RegLoadAppKey(_In_ LPCTSTR lpFile,_Out_ PHKEY phkResult,_In_ REGSAM samDesired,_In_ DWORD dwOptions,_Reserved_ DWORD Reserved)
LONG WINAPI advapi32.RegLoadAppKeyW(_In_ LPCTSTR lpFile,_Out_ PHKEY phkResult,_In_ REGSAM samDesired,_In_ DWORD dwOptions,_Reserved_ DWORD Reserved)
LONG WINAPI advapi32.RegLoadAppKeyA(_In_ LPCTSTR lpFile,_Out_ PHKEY phkResult,_In_ REGSAM samDesired,_In_ DWORD dwOptions,_Reserved_ DWORD Reserved)
VOID WINAPI kernel32.AcquireSRWLockShared(_Inout_ PSRWLOCK SRWLock)
uint32 None cscobj.DeleteItems([in] string Paths[],[in] uint32 Flags)
BOOL None dxva2.GetMonitorRedGreenOrBlueDrive(_In_ HANDLE hMonitor,_In_ MC_DRIVE_TYPE dtDriveType,_Out_ LPDWORD pdwMinimumDrive,_Out_ LPDWORD pdwCurrentDrive,_Out_ LPDWORD pdwMaximumDrive)
VOID None None.KeInitializeEvent(_Out_ PRKEVENT Event,_In_ EVENT_TYPE Type,_In_ BOOLEAN State)
UINT None shell32.Shell_MergeMenus(_In_ HMENU hmDst,_In_ HMENU hmSrc,UINT uInsert None,UINT uIDAdjust None,UINT uIDAdjustMax None,ULONG uFlags None)
uint32 None dhcpserverpsprovider.Get([in] string Prefix[],[in] string ComputerName,[out] DhcpServerv6StatelessStore cmdletOutput[])
uint32 None netpeerdistcim.Export_BCSecretKey([in] string Filename,[in] string FilePassphrase,[in] boolean Force)
BOOL WINAPI user32.ReplyMessage(_In_ LRESULT lResult)
HRESULT None ole32.OleCreateFromDataEx(_In_ LPDATAOBJECT pSrcDataObj,_In_ REFIID riid,_In_ DWORD dwFlags,_In_ DWORD renderopt,_In_ ULONG cFormats,_In_ DWORD *rgAdvf,_In_ LPFORMATETC rgFormatEtc,_In_ IAdviseSink *lpAdviseSink,_Out_ DWORD *rgdwConnection,_In_ LPOLECLIENTSITE pClientSite,_In_ LPSTORAGE pStg,_Out_ LPVOID *ppvObj)
ULONG __stdcall tdh.TdhGetPropertySize(_In_ PEVENT_RECORD pEvent,_In_ ULONG TdhContextCount,_In_ PTDH_CONTEXT pTdhContext,_In_ ULONG PropertyDataCount,_In_ PPROPERTY_DATA_DESCRIPTOR pPropertyData,_Out_ ULONG *pPropertySize)
LSTATUS None shlwapi.SHRegDeleteUSValue(_In_ HUSKEY hUSKey,_In_ LPCTSTR pszValue,_In_ SHREGDEL_FLAGS delRegFlags)
LSTATUS None shlwapi.SHRegDeleteUSValueW(_In_ HUSKEY hUSKey,_In_ LPCTSTR pszValue,_In_ SHREGDEL_FLAGS delRegFlags)
LSTATUS None shlwapi.SHRegDeleteUSValueA(_In_ HUSKEY hUSKey,_In_ LPCTSTR pszValue,_In_ SHREGDEL_FLAGS delRegFlags)
BOOL None None.Animate_Play(HWND hwndAnim None,UINT wFrom None,UINT wTo None,UINT cRepeat None)
HRESULT STDMETHODCALLTYPE None.QueryStations(QUERYTABLE* lpQueryTable None)
HRESULT None msdrm.DRMGetRightExtendedInfo(_In_ DRMPUBHANDLE hRight,_In_ UINT uIndex,_Inout_ UINT *puExtendedInfoNameLength,_Out_ PWSTR wszExtendedInfoName,_Inout_ UINT *puExtendedInfoValueLength,_Out_ PWSTR wszExtendedInfoValue)
HANDLE WINAPI wtsapi32.WTSOpenServerEx(_In_ LPTSTR pServerName)
HANDLE WINAPI wtsapi32.WTSOpenServerExW(_In_ LPTSTR pServerName)
HANDLE WINAPI wtsapi32.WTSOpenServerExA(_In_ LPTSTR pServerName)
DWORD WINAPI advapi32.NotifyServiceStatusChange(_In_ SC_HANDLE hService,_In_ DWORD dwNotifyMask,_In_ PSERVICE_NOTIFY pNotifyBuffer)
DWORD WINAPI advapi32.NotifyServiceStatusChangeW(_In_ SC_HANDLE hService,_In_ DWORD dwNotifyMask,_In_ PSERVICE_NOTIFY pNotifyBuffer)
DWORD WINAPI advapi32.NotifyServiceStatusChangeA(_In_ SC_HANDLE hService,_In_ DWORD dwNotifyMask,_In_ PSERVICE_NOTIFY pNotifyBuffer)
BOOL WINAPI kernel32.DebugActiveProcessStop(_In_ DWORD dwProcessId)
BOOL WINAPI fmapi.RestoreFile(_In_ PFILE_RESTORE_CONTEXT Context,_In_ PRESTORABLE_FILE_INFO RestorableFile,_In_ PCWSTR DstFile,_In_opt_ FILE_RESTORE_CALLBACK Callback,_In_opt_ PVOID ClbkArg)
HRESULT None ole32.CoGetInterfaceAndReleaseStream(_In_ LPSTREAM pStm,_In_ REFIID iid,_Out_ LPVOID *ppv)
uint32 None cimwin32.SetSecurityDescriptor([in] Win32_SecurityDescriptor Descriptor)
HRESULT None None.GetStyle(IDirectMusicSegment8* pSegment None,DWORD dwStyleIndex None,IDirectMusicStyle8** ppStyle None)
uint32 None servermanager.deploymentprovider.AddServerComponentAsync([in] MSFT_ServerManagerRequestGuid RequestGuid,[in] String Source[],[in] Boolean ScanForUpdates,[in] MSFT_ServerManagerServerComponentDescriptor ServerComponentDescriptors[],[out] MSFT_ServerManagerRequestState AlterationState)
BOOL None sfc.SfcIsFileProtected(_In_ HANDLE RpcHandle,_In_ LPCWSTR ProtFileName)
BOOL WINAPI wecapi.EcSetSubscriptionProperty(_In_ EC_HANDLE Subscription,_In_ EC_SUBSCRIPTION_PROPERTY_ID PropertyId,_In_ DWORD Flags,_In_ PEC_VARIANT PropertyValue)
PUIDLIST_RELATIVE None None.ILNext(_In_ PUIDLIST_RELATIVE pidl)
HRESULT None windowscodecs.GetPixelFormat([out] WICPixelFormatGUID *pPixelFormat)
HRESULT None None.GetAffineMatrix([in] ULONG uiIndex,[in None None,out] MIL_MATRIX3X2D *pMatrix)
HRESULT None None.AddText(IWMHeaderInfo3* pHeaderInfo None,WCHAR* pwszDesc None,WCHAR* pwszText None,WORD* pwIndex None)
HRESULT None windowscodecs.GetSize([out] UINT *puiWidth,[out] UINT *puiHeight)
HRESULT None azroles.get_PolicyAdministrators([out] VARIANT *pvarAdmins)
BOOLEAN None None.WdfUsbTargetPipeIsInEndpoint(_In_ WDFUSBPIPE Pipe)
BOOL WINAPI user32.DdeUnaccessData(_In_ HDDEDATA hData)
HANDLE WINAPI msajapi.AllJoynConnectToBus(_In_opt_ PCWSTR connectionSpec)
HRESULT None None.CacheObject(IDirectMusicObject * pObject)
HRESULT None None.GetRequestSignByDate([out None None,retval] LPWSTR *dateString)
HRESULT None None.Update(HCHAPTER hReserved None,DBCOUNTITEM cRows None,const HROW rghRows[],DBCOUNTITEM *pcRows None,HROW **prgRows None,DBROWSTATUS **prgRowStatus None)
HRESULT None dcomp.CreateTranslateTransform3D([out] IDCompositionTranslateTransform3D **translateTransform3D)
VOID WINAPI kernel32.RtlRestoreContext(_In_ PCONTEXT ContextRecord,_In_ PEXCEPTION_RECORD ExceptionRecord)
LRESULT WINAPI uiautomationcore.UiaReturnRawElementProvider(_In_ HWND hwnd,_In_ WPARAM wparam,_In_ LPARAM lparam,_In_ IRawElementProviderSimple *el)
HRESULT None None.setAttribute(BSTR name None,VARIANT value None)
HRESULT None None.GetResolvedTime(REFERENCE_TIME rtTime None,REFERENCE_TIME* prtResolved None,DWORD dwTimeResolveFlags None)
protected void None.OnApply(DependencyProperty dp None,Type targetType None)
HRESULT None None.GetTime(REFERENCE_TIME* prtNow None,MUSIC_TIME* pmtNow None)
uint32 None wvrcimprov.RevokeSrUserAccess([in] string ComputerName,[in] string UserName,[in] boolean RemoveFromRemoteManagementUsersGroup)
HRESULT None None.GetBoundSource([out] IUnknown **ppunk)
HRESULT WINAPI iscsidsc.GetDevicesForIscsiSession(_In_ PISCSI_UNIQUE_SESSION_ID UniqueSessionId,_Inout_ ULONG *DeviceCount,_Out_ PISCSI_DEVICE_ON_SESSION Devices)
HRESULT WINAPI iscsidsc.GetDevicesForIscsiSessionW(_In_ PISCSI_UNIQUE_SESSION_ID UniqueSessionId,_Inout_ ULONG *DeviceCount,_Out_ PISCSI_DEVICE_ON_SESSION Devices)
HRESULT WINAPI iscsidsc.GetDevicesForIscsiSessionA(_In_ PISCSI_UNIQUE_SESSION_ID UniqueSessionId,_Inout_ ULONG *DeviceCount,_Out_ PISCSI_DEVICE_ON_SESSION Devices)
LRESULT CALLBACK None.WindowProc(_In_ HWND hwnd,_In_ UINT uMsg,_In_ WPARAM wParam,_In_ LPARAM lParam)
BOOL WINAPI advapi32.GetSecurityDescriptorOwner(_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_Out_ PSID *pOwner,_Out_ LPBOOL lpbOwnerDefaulted)
BOOL WINAPI aclui.EditSecurity(_In_ HWND hwndOwner,_In_ LPSECURITYINFO psi)
HRESULT None wmpmediasharing.get_Count([out] LONG *count)
NTSTATUS None None.FreeClientBuffer(_In_ PLSA_CLIENT_REQUEST ClientRequest,_In_ PVOID ClientBaseAddress)
HRESULT None None.EnumerateTerminals([out] IEnumTerminal **ppEnumTerminal)
public PackageRelationshipCollection None.GetRelationshipsByType(String relationshipType None)
uint32 None dnsserverpsprovider.Get([in] string ComputerName,[out] DnsServerGlobalQueryBlockList cmdletOutput)
LONG WINAPI tapi32.lineDeallocateCall(HCALL hCall None)
BOOL WINAPI advapi32.CloseServiceHandle(_In_ SC_HANDLE hSCObject)
char None None.ToChar(IFormatProvider provider None)
VOID None None.FltReissueSynchronousIo(_In_ PFLT_INSTANCE InitiatingInstance,_In_ PFLT_CALLBACK_DATA CallbackData)
uint32 None netttcim.Disable([in] boolean PassThru,[out] MSFT_NetNatTransitionConfiguration OutputObject)
HRESULT None wmpmediasharing.put_userHomeMediaSharingState(VARIANT_BOOL sharingEnabled None)
DWORD WINAPI rstrtmgr.RmEndSession(_In_ DWORD dwSessionHandle)
BOOL WINAPI advapi32.ControlServiceEx(_In_ SC_HANDLE hService,_In_ DWORD dwControl,_In_ DWORD dwInfoLevel,_Inout_ PVOID pControlParams)
BOOL WINAPI advapi32.ControlServiceExW(_In_ SC_HANDLE hService,_In_ DWORD dwControl,_In_ DWORD dwInfoLevel,_Inout_ PVOID pControlParams)
BOOL WINAPI advapi32.ControlServiceExA(_In_ SC_HANDLE hService,_In_ DWORD dwControl,_In_ DWORD dwInfoLevel,_Inout_ PVOID pControlParams)
DWORD WINAPI resutils.ResUtilStartResourceService(_In_ LPCWSTR pszServiceName,_Out_ LPSC_HANDLE phServiceHandle)
public PackageRelationship None.GetRelationship(String id None)
HRESULT None msdrm.DRMGetBoundLicenseObject(_In_ DRMHANDLE hQueryRoot,_In_ PWSTR wszSubObjectType,_In_ UINT iWhich,_Out_ DRMHANDLE *phSubObject)
MMRESULT None winmm.timeSetEvent(UINT uDelay None,UINT uResolution None,LPTIMECALLBACK lpTimeProc None,DWORD_PTR dwUser None,UINT fuEvent None)
public boolean None.Match(Object obj None)
HMONITOR None user32.MonitorFromWindow(_In_ HWND hwnd,_In_ DWORD dwFlags)
HRESULT None wmvcore.WMCreateDRMTranscryptor(_Out_ IWMDRMTranscryptor **ppTranscryptor)
BOOL WINAPI user32.SystemParametersInfoForDpi(_In_ UINT uiAction,_In_ UINT uiParam,_Inout_ PVOID pvParam,_In_ UINT fWinIni,_In_ UINT dpi)
PVOID None None.KeRegisterProcessorChangeCallback(_In_ PPROCESSOR_CALLBACK_FUNCTION CallbackFunction,_In_opt_ PVOID CallbackContext,_In_ ULONG Flags)
BOOL WINAPI user32.CharToOem(_In_ LPCTSTR lpszSrc,_Out_ LPSTR lpszDst)
BOOL WINAPI user32.CharToOemW(_In_ LPCTSTR lpszSrc,_Out_ LPSTR lpszDst)
BOOL WINAPI user32.CharToOemA(_In_ LPCTSTR lpszSrc,_Out_ LPSTR lpszDst)
BOOLEAN None None.FsRtlOplockIsFastIoPossible(_In_ POPLOCK Oplock)
UINT WINAPI user32.GetMenuDefaultItem(_In_ HMENU hMenu,_In_ UINT fByPos,_In_ UINT gmdiFlags)
MagImageScalingCallback WINAPI magnification.MagGetImageScalingCallback(_In_ HWND hwnd)
BOOL WINAPI kernel32.GetProductInfo(_In_ DWORD dwOSMajorVersion,_In_ DWORD dwOSMinorVersion,_In_ DWORD dwSpMajorVersion,_In_ DWORD dwSpMinorVersion,_Out_ PDWORD pdwReturnedProductType)
BOOL WINAPI user32.EndDialog(_In_ HWND hDlg,_In_ INT_PTR nResult)
VOID None None.FltCbdqEnable(_Inout_ PFLT_CALLBACK_DATA_QUEUE Cbdq)
UINT None msi.MsiGetSourcePath(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szFolder,_Out_ LPTSTR szPathBuf,_Inout_ DWORD *pcchPathBuf)
UINT None msi.MsiGetSourcePathW(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szFolder,_Out_ LPTSTR szPathBuf,_Inout_ DWORD *pcchPathBuf)
UINT None msi.MsiGetSourcePathA(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szFolder,_Out_ LPTSTR szPathBuf,_Inout_ DWORD *pcchPathBuf)
HRESULT None None.GetContentType([out None None,retval] LPCWSTR *contentType)
VOID None None.FltFreeExtraCreateParameter(_In_ PFLT_FILTER Filter,_In_ PVOID EcpContext)
HRESULT None None.get_Root([out] IFsiDirectoryItem **pVal)
HRESULT None wsdapi.WSDCreateDiscoveryProvider(_In_ IWSDXMLContext *pContext,_Out_ IWSDiscoveryProvider **ppProvider)
protected void None.OnPreviewStylusDown(StylusDownEventArgs e None)
uint32 None mttmprov.GetEventRecords([in] string FilterXml,[in] uint64 Skip,[in] uint64 Top,[in] boolean ReverseDirection,[in] uint32 BatchSize,[out] MSFT_MTEventRecord Result[])
HRESULT None upnp.ServiceTypeIdentifier([out] BSTR *pVal)
HRESULT WINAPI cryptxml.CryptXmlOpenToEncode(_In_opt_ CRYPT_XML_TRANSFORM_CHAIN_CONFIG *pConfig,DWORD dwFlags None,_In_opt_ LPCWSTR wszId,_In_ CRYPT_XML_PROPERTY *rgProperty,_In_ ULONG cProperty,_In_opt_ CRYPT_XML_BLOB *pEncoded,HCRYPTXML *phSignature None)
HRESULT None None.get_MinClientPacketSize(long* plMinClientMtu None)
protected void None.OnPreviewStylusDown(StylusDownEventArgs e None)
BOOL CALLBACK None.EnumCalendarInfoProcEx(_In_ LPTSTR lpCalendarInfoString,_In_ CALID Calendar)
BOOL CALLBACK None.EnumCalendarInfoProcExW(_In_ LPTSTR lpCalendarInfoString,_In_ CALID Calendar)
BOOL CALLBACK None.EnumCalendarInfoProcExA(_In_ LPTSTR lpCalendarInfoString,_In_ CALID Calendar)
private void None.AutoSizeControl(Control control None,int textPadding None)
NTSTATUS WINAPI ncrypt.NCryptRegisterProtectionDescriptorName(_In_ LPCWSTR pwszName,_In_opt_ LPCWSTR pwszDescriptorString,DWORD dwFlags None)
BOOL WINAPI txfw32.TxfLogReadRecords(_In_ PVOID TxfLogContext,_In_ ULONG BufferLength,_Out_ PVOID Buffer,_Out_ PULONG BytesUsed,_Out_ PULONG RecordCount)
DWORD None mprapi.MprAdminPortEnum(_In_ RAS_SERVER_HANDLE hRasServer,_In_ DWORD dwLevel,_In_ HANDLE hConnection,_Out_ LPBYTE *lplpbBuffer,_In_ DWORD dwPrefMaxLen,_Out_ LPDWORD lpdwEntriesRead,_Out_ LPDWORD lpdwTotalEntries,_In_ LPDWORD lpdwResumeHandle)
HRESULT None None.GetActivationPolicy([out] DWORD *pdwPolicy)
HRESULT WINAPI dismapi.DismGetCapabilities(_In_ DismSession Session,_In_ DismCapability Capability,_In_ UINT Count)
NTSTATUS None None.ZwFlushKey(_In_ HANDLE KeyHandle)
HRESULT None None.CreateDomainShader(const void *pShaderBytecode,// SIZE_T BytecodeLength,// ID3D11ClassLinkage *pClassLinkage,// ID3D11DomainShader **ppDomainShader)
inline XMVECTOR None.XMQuaternionBlend(FXMVECTOR Q0 None,FXMVECTOR Q1 None,FXMVECTOR Q2 None,float w1 None,float w2 None)
NTSTATUS WINAPI ncrypt.NCryptQueryProtectionDescriptorName(_In_ LPCWSTR pwszName,_Out_ LPWSTR pwszDescriptorString,_Inout_ SIZE_T *pcDescriptorString,DWORD dwFlags None)
HRESULT None None.GetMasterClock(LPGUID pguidClock None,IReferenceClock** ppReferenceClock None)
JET_ERR JET_API None.JetExternalRestore(__in JET_PSTR szCheckpointFilePath,__in JET_PSTR szLogPath,__in_opt JET_RSTMAP* rgrstmap,__in long crstfilemap,__in JET_PSTR szBackupLogPath,__in long genLow,__in long genHigh,__in JET_PFNSTATUS pfn)
HRESULT None None.SetSpeakerConfig(DWORD dwSpeakerConfig None)
HRESULT _stdcall wiaservc.wiasSetValidRangeLong(_In_ BYTE *pWiasContext,PROPID propid None,LONG lMin None,LONG lNom None,LONG lMax None,LONG lStep None)
NTSTATUS None None.SpDeleteContext(_In_ LSA_SEC_HANDLE ContextHandle)
HRESULT None None.GetCanonicalName([out] GUID *pguidCommandName)
VOID None None.FltReuseCallbackData(_Inout_ PFLT_CALLBACK_DATA CallbackData)
HRESULT None None.GetConnectionPointContainer([out] IConnectionPointContainer **ppCPC)
VOID None None.SeFreePrivileges(_In_ PPRIVILEGE_SET Privileges)
BOOL None advapi32.CredRead(_In_ LPCTSTR TargetName,_In_ DWORD Type,_In_ DWORD Flags,_Out_ PCREDENTIAL *Credential)
BOOL None advapi32.CredReadW(_In_ LPCTSTR TargetName,_In_ DWORD Type,_In_ DWORD Flags,_Out_ PCREDENTIAL *Credential)
BOOL None advapi32.CredReadA(_In_ LPCTSTR TargetName,_In_ DWORD Type,_In_ DWORD Flags,_Out_ PCREDENTIAL *Credential)
public Enlistment None.EnlistDurable(Guid resourceManagerIdentifier None,ISinglePhaseNotification singlePhaseNotification None,EnlistmentOptions enlistmentOptions None)
HRESULT None None.GetOwnerIntegrityLevel([out] ULONG *pLevel)
BOOL WINAPI None.WIMGetMountedImageInfo(MOUNTED_IMAGE_INFO_LEVELS fInfoLevelId None,PDWORD pdwImageCount None,PVOID pMountInfo None,DWORD cbMountInfoLength None,PDWORD pcbReturnLength None)
DWORD None npptools.MergeBlob(_Inout_ HBLOB hDstBlob,_In_ HBLOB hSrcBlob)
HRESULT None None.GetProperties([out None None,retval] IAppxManifestProperties **packageProperties)
HRESULT None srmsvc.get_LastGeneratedInDirectory([out] BSTR path)
HRESULT None msdrm.DRMGetIntervalTime(_In_ DRMPUBHANDLE hIssuanceLicense,_In_ UINT *pcDays)
HRESULT None msdrm.DRMGetRevocationPoint(_In_ DRMPUBHANDLE hIssuanceLicense,_Inout_ UINT *puIdLength,_Out_ PWSTR wszId,_Inout_ UINT *puIdTypeLength,_Out_ PWSTR wszIdType,_Inout_ UINT *puURLLength,_Out_ PWSTR wszURL,_Out_ SYSTEMTIME *pstFrequency,_Inout_ UINT *puNameLength,_Out_ PWSTR wszName,_Inout_ UINT *puPublicKeyLength,_Out_ PWSTR wszPublicKey)
DWORD None None.SetPrinterData(_In_ HANDLE hPrinter,_In_ LPTSTR pValueName,_In_ DWORD Type,_In_ LPBYTE pData,_In_ DWORD cbData)
DWORD None None.SetPrinterDataW(_In_ HANDLE hPrinter,_In_ LPTSTR pValueName,_In_ DWORD Type,_In_ LPBYTE pData,_In_ DWORD cbData)
DWORD None None.SetPrinterDataA(_In_ HANDLE hPrinter,_In_ LPTSTR pValueName,_In_ DWORD Type,_In_ LPBYTE pData,_In_ DWORD cbData)
public DispatcherOperation None.BeginInvoke(DispatcherPriority priority None,Delegate method None,Object arg None)
BOOL None None.GetPrinter(_In_ HANDLE hPrinter,_In_ DWORD Level,_Out_ LPBYTE pPrinter,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded)
BOOL None None.GetPrinterW(_In_ HANDLE hPrinter,_In_ DWORD Level,_Out_ LPBYTE pPrinter,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded)
BOOL None None.GetPrinterA(_In_ HANDLE hPrinter,_In_ DWORD Level,_Out_ LPBYTE pPrinter,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded)
HRESULT None None.GetOrientation(D3DVECTOR * pvOrientFront,D3DVECTOR * pvOrientTop)
HRESULT None ole32.StgOpenStorageOnILockBytes(_In_ ILockBytes *plkbyt,_In_ IStorage *pStgPriority,_In_ DWORD grfMode,_In_ SNB snbExclude,_In_ DWORD reserved,_Out_ IStorage **ppstgOpen)
public boolean None.Match(Object obj None)
VOID WINAPI None.QuorumResourceLost(_In_ RESOURCE_HANDLE ResourceHandle)
HRESULT None oleaut32.VarUI1FromR8(_In_ DOUBLE dblIn,_Out_ BYTE *pbOut)
DWORD WINAPI mstlsapi.TLSLicenseEnumBegin(_In_ TLS_HANDLE hHandle,_In_ DWORD dwSearchParm,_In_ BOOL bMatchAll,_In_ LSLicense *lpSearchParm,_Out_ PDWORD pdwErrCode)
VOID None None.WDF_MEMORY_DESCRIPTOR_INIT_HANDLE(_Out_ PWDF_MEMORY_DESCRIPTOR Descriptor,_In_ WDFMEMORY Memory,_In_opt_ PWDFMEMORY_OFFSET Offsets)
HRESULT None None.get_FileCount([out] LONG *pVal)
LRESULT None shell32.SHShellFolderView_Message(_In_ HWND hwndMain,UINT uMsg None,LPARAM lParam None)
BOOL WINAPI kernel32.GetCommState(_In_ HANDLE hFile,_Inout_ LPDCB lpDCB)
BOOL WINAPI advapi32.SaferSetPolicyInformation(_In_ DWORD dwScopeId,_In_ SAFER_POLICY_INFO_CLASS SaferPolicyInfoClass,_In_ DWORD InfoBufferSize,_In_ PVOID InfoBuffer,_Reserved_ LPVOID lpReserved)
HRESULT None ndfapi.NdfCreateIncident(_In_ LPCWSTR helperClassName,ULONG celt None,_In_ HELPER_ATTRIBUTE *attributes,_Out_ NDFHANDLE *handle)
HRESULT None None.StringCchPrintf_l(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ ... None)
HRESULT None None.StringCchPrintf_lW(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ ... None)
HRESULT None None.StringCchPrintf_lA(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ ... None)
BOOL WINAPI user32.EnumWindowStations(_In_ WINSTAENUMPROC lpEnumFunc,_In_ LPARAM lParam)
BOOL WINAPI user32.EnumWindowStationsW(_In_ WINSTAENUMPROC lpEnumFunc,_In_ LPARAM lParam)
BOOL WINAPI user32.EnumWindowStationsA(_In_ WINSTAENUMPROC lpEnumFunc,_In_ LPARAM lParam)
HRESULT None gpedit.DeleteGPOLink(_In_ LPOLESTR lpGPO,_In_ LPOLESTR lpContainer)
HRESULT None None.GetProperties([out] VDS_VOLUME_PROP *pVolumeProperties)
void None None.GetFieldValue(FieldCallback callback None)
uint32 None wvrcimprov.GetPartnershipFromGroup([in] string Name,[in] string ComputerName,[out] MSFT_WvrReplicationPartnership Output[])
NTSTATUS WINAPI certpoleng.PstGetUserNameForCertificate(_In_ PCCERT_CONTEXT pCertContext,_Out_ PUNICODE_STRING UserName)
HRESULT None None.GetCreationProperties(ULONG cPropertyIDSets None,const DBPROPIDSET rgPropertyIDSets[],ULONG *pcPropertyInfoSets None,DBPROPINFOSET **prgPropertyInfoSets None,OLECHAR **ppDescBuffer None)
BOOL WINAPI crypt32.CertAddCertificateContextToStore(_In_ HCERTSTORE hCertStore,_In_ PCCERT_CONTEXT pCertContext,_In_ DWORD dwAddDisposition,_Out_opt_ PCCERT_CONTEXT *ppStoreContext)
BOOL WINAPI user32.GetClassInfoEx(_In_opt_ HINSTANCE hinst,_In_ LPCTSTR lpszClass,_Out_ LPWNDCLASSEX lpwcx)
BOOL WINAPI user32.GetClassInfoExW(_In_opt_ HINSTANCE hinst,_In_ LPCTSTR lpszClass,_Out_ LPWNDCLASSEX lpwcx)
BOOL WINAPI user32.GetClassInfoExA(_In_opt_ HINSTANCE hinst,_In_ LPCTSTR lpszClass,_Out_ LPWNDCLASSEX lpwcx)
BOOL WINAPI wevtapi.EvtClearLog(_In_opt_ EVT_HANDLE Session,_In_ LPCWSTR ChannelPath,_In_opt_ LPCWSTR TargetFilePath,_In_ DWORD Flags)
NTSTATUS None None.ZwSetSecurityObject(_In_ HANDLE Handle,_In_ SECURITY_INFORMATION SecurityInformation,_In_ PSECURITY_DESCRIPTOR SecurityDescriptor)
NTSTATUS None None.GetAuthDataForUser(_In_ PSECURITY_STRING Name,_In_ SECPKG_NAME_TYPE NameType,_In_ PSECURITY_STRING Prefix,_Out_ PUCHAR *UserAuthData,_Out_ PULONG UserAuthDataSize,_Out_ PUNICODE_STRING UserFlatName)
MI_INLINE MI_Result None.MI_Instance_Normalize(_Inout_ MI_Instance **self)
BOOL None None.WlxNetworkProviderLoad(_In_ PVOID pWlxContext,_Out_ PWLX_MPR_NOTIFY_INFO pNprNotifyInfo)
HRESULT WDSCLIAPI wdsclientapi.WdsCliGetImageArchitecture(_In_ HANDLE hIfh,_Out_ PDWORD pdwValue)
VOID CALLBACK None.PFN_WdsTransportClientSessionStart(_In_ HANDLE hSessionKey,_In_ PVOID pCallerData,_In_ PULARGE_INTEGER FileSize)
LONG TSPIAPI None.TSPI_providerConfig(HWND hwndOwner None,DWORD dwPermanentProviderID None)
HRESULT STDMETHODCALLTYPE None.Connect(HBLOB hInputBlob None,DWORD StatusCallbackProc None,DWORD UserContext None,HBLOB hErrorBlob None)
UINT None gdi32.GetEnhMetaFileBits(_In_ HENHMETAFILE hemf,_In_ UINT cbBuffer,_Out_ LPBYTE lpbBuffer)
ULONG __stdcall tdh.TdhEnumerateProviderFilters(_In_ LPGUID pGuid,_In_ ULONG TdhContextCount,_In_opt_ PTDH_CONTEXT pTdhContext,_In_ ULONG *FilterCount,_Out_opt_ PPROVIDER_FILTER_INFO *pBuffer,_Inout_ ULONG *pBufferSize)
LSTATUS None shlwapi.SHRegSetUSValue(_In_ LPCTSTR pszSubKey,_In_ LPCTSTR pszValue,_In_ DWORD dwType,_In_opt_ LPVOID *pvData,_In_opt_ DWORD cbData,_In_opt_ DWORD dwFlags)
LSTATUS None shlwapi.SHRegSetUSValueW(_In_ LPCTSTR pszSubKey,_In_ LPCTSTR pszValue,_In_ DWORD dwType,_In_opt_ LPVOID *pvData,_In_opt_ DWORD cbData,_In_opt_ DWORD dwFlags)
LSTATUS None shlwapi.SHRegSetUSValueA(_In_ LPCTSTR pszSubKey,_In_ LPCTSTR pszValue,_In_ DWORD dwType,_In_opt_ LPVOID *pvData,_In_opt_ DWORD cbData,_In_opt_ DWORD dwFlags)
BOOL WINAPI user32.UnloadKeyboardLayout(_In_ HKL hkl)
public void None.SetFontSize(double emSize None)
NTSTATUS None None.ZwGetNotificationResourceManager(_In_ HANDLE ResourceManagerHandle,_Out_ PTRANSACTION_NOTIFICATION TransactionNotification,_In_ ULONG NotificationLength,_In_ PLARGE_INTEGER Timeout,_Out_opt_ PULONG ReturnLength,_In_ ULONG Asynchronous,_In_opt_ ULONG_PTR AsynchronousContext)
protected void None.OnMouseLeftButtonDown(MouseButtonEventArgs e None)
BOOL None gdi32.GetCharWidth32(_In_ HDC hdc,_In_ UINT iFirstChar,_In_ UINT iLastChar,_Out_ LPINT lpBuffer)
BOOL None gdi32.GetCharWidth32W(_In_ HDC hdc,_In_ UINT iFirstChar,_In_ UINT iLastChar,_Out_ LPINT lpBuffer)
BOOL None gdi32.GetCharWidth32A(_In_ HDC hdc,_In_ UINT iFirstChar,_In_ UINT iLastChar,_Out_ LPINT lpBuffer)
HDC None user32.GetDCEx(_In_ HWND hWnd,_In_ HRGN hrgnClip,_In_ DWORD flags)
BOOL WINAPI magnification.MagGetWindowTransform(_In_ HWND hwnd,_Out_ PMAGTRANSFORM pTransform)
NET_API_STATUS None netapi32.NetServerTransportEnum(_In_ LPWSTR servername,_In_ DWORD level,_Out_ LPBYTE *bufptr,_In_ DWORD prefmaxlen,_Out_ LPDWORD entriesread,_Out_ LPDWORD totalentries,_Inout_ LPDWORD resumehandle)
protected void None.OnLostStylusCapture(StylusEventArgs e None)
DWORD WINAPI kernel32.GetModuleFileNameEx(_In_ HANDLE hProcess,_In_opt_ HMODULE hModule,_Out_ LPTSTR lpFilename,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetModuleFileNameExW(_In_ HANDLE hProcess,_In_opt_ HMODULE hModule,_Out_ LPTSTR lpFilename,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetModuleFileNameExA(_In_ HANDLE hProcess,_In_opt_ HMODULE hModule,_Out_ LPTSTR lpFilename,_In_ DWORD nSize)
public DependentTransaction None.DependentClone(DependentCloneOption cloneOption None)
BOOL None gdi32.FillRgn(_In_ HDC hdc,_In_ HRGN hrgn,_In_ HBRUSH hbr)
HRESULT None dcomp.CreateRotateTransform([out] IDCompositionRotateTransform **rotateTransform)
HRESULT None shell32.SHAddDefaultPropertiesByExt(_In_ PCWSTR pszExt,_In_ IPropertyStore *pPropStore)
uint32 None cscobj.Synchronize([in] string Paths[],[in] uint32 Flags)
HRESULT None None.GetDocumentIndex([out None None,retval] UINT32 *fixedDocumentIndex)
DWORD None advapi32.UninstallApplication(_In_ WCHAR *ProductCode,_In_ DWORD dwStatus)
DWORD None mprapi.MprAdminSendUserMessage(_In_ MPR_SERVER_HANDLE hMprServer,_In_ HANDLE hConnection,_In_ LPWSTR lpwszMessage)
DWORD None iphlpapi.GetUdpStatistics(_Out_ PMIB_UDPSTATS pStats)
ULONG WINAPI kernel32.RemoveVectoredContinueHandler(_In_ PVOID Handler)
MMRESULT None msacm32.acmDriverEnum(ACMDRIVERENUMCB fnCallback None,DWORD_PTR dwInstance None,DWORD fdwEnum None)
MMRESULT None msacm32.acmDriverPriority(HACMDRIVERID hadid None,DWORD dwPriority None,DWORD fdwPriority None)
public Enlistment None.EnlistDurable(Guid resourceManagerIdentifier None,ISinglePhaseNotification singlePhaseNotification None,EnlistmentOptions enlistmentOptions None)
NTSTATUS None None.IoCreateSymbolicLink(_In_ PUNICODE_STRING SymbolicLinkName,_In_ PUNICODE_STRING DeviceName)
HRESULT None None.WordMult(_In_ WORD wMultiplicand,_In_ WORD wMultiplier,_Out_ WORD *pwResult)
HRESULT WDSTRANSPORTPROVIDERAPI None.WdsTransportProviderInitialize(_In_ PWDS_TRANSPORTPROVIDER_INIT_PARAMS pInParameters,_Out_ PWDS_TRANSPORTPROVIDER_SETTINGS pSettings,_In_ ULONG ulLength)
UINT ACMFILTERCHOOSEHOOKPROC None.acmFilterChooseHookProc(HWND hwnd None,UINT uMsg None,WPARAM wParam None,LPARAM lParam None)
NTSTATUS None None.CreateToken(_In_ PLUID LogonId,_In_ PTOKEN_SOURCE TokenSource,_In_ SECURITY_LOGON_TYPE LogonType,_In_ SECURITY_IMPERSONATION_LEVEL ImpersonationLevel,_In_ LSA_TOKEN_INFORMATION_TYPE TokenInformationType,_In_ PVOID TokenInformation,_In_ PTOKEN_GROUPS TokenGroups,_In_ PUNICODE_STRING AccountName,_In_ PUNICODE_STRING AuthorityName,_In_ PUNICODE_STRING Workstation,_In_ PUNICODE_STRING ProfilePath,_Out_ PHANDLE Token,_Out_ PNTSTATUS SubStatus)
INT_PTR CALLBACK None.DialogProc(_In_ HWND hwndDlg,_In_ UINT uMsg,_In_ WPARAM wParam,_In_ LPARAM lParam)
HRESULT None None.get_minLength(VARIANT* minLength None)
ULONG WINAPI None.BufferCallback(_In_ PEVENT_TRACE_LOGFILE Buffer)
protected void None.RemoveVisualChild(Visual child None)
protected Visual None.GetVisualChild(int index None)
public boolean None.Match(Object obj None)
PLIST_ENTRY None None.ExInterlockedInsertHeadList(_Inout_ PLIST_ENTRY ListHead,_Inout_ PLIST_ENTRY ListEntry,_Inout_ PKSPIN_LOCK Lock)
BOOL WINAPI advapi32.SetSecurityDescriptorOwner(_Inout_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_opt_ PSID pOwner,_In_ BOOL bOwnerDefaulted)
UINT None oledlg.OleUIInsertObject(_In_ LPOLEUIINSERTOBJECT lpIO)
UINT None oledlg.OleUIInsertObjectW(_In_ LPOLEUIINSERTOBJECT lpIO)
UINT None oledlg.OleUIInsertObjectA(_In_ LPOLEUIINSERTOBJECT lpIO)
Sub None None.ignorableWhitespace(strChars As String)
protected void None.RemoveVisualChild(Visual child None)
BOOL None dxva2.GetCapabilitiesStringLength(_In_ HANDLE hMonitor,_Out_ LPDWORD pdwCapabilitiesStringLengthInCharacters)
HRESULT None oleaut32.VarSub(_In_ LPVARIANT pvarLeft,_In_ LPVARIANT pvarRight,_Out_ LPVARIANT pvarResult)
HRESULT STDMETHODCALLTYPE None.WMCreateSecureChannel_Certified(IWMSecureChannel **ppChannel None)
HRESULT None None.GetInputConnector([in] ULONG uiIndex,[out None None,retval] IMILBitmapEffectInputConnector **ppConnector)
HDDEDATA WINAPI user32.DdeCreateDataHandle(_In_ DWORD idInst,_In_opt_ LPBYTE pSrc,_In_ DWORD cb,_In_ DWORD cbOff,_In_opt_ HSZ hszItem,_In_ UINT wFmt,_In_ UINT afCmd)
HRESULT None None.RegisterForEvent([out] HANDLE *phEvent)
DWORD WINAPI dbghelp.GetTimestampForLoadedLibrary(_In_ HMODULE ImageBase)
NET_API_STATUS None netapi32.NetLocalGroupGetInfo(_In_ LPCWSTR servername,_In_ LPCWSTR groupname,_In_ DWORD level,_Out_ LPBYTE *bufptr)
NET_API_STATUS None netapi32.NetMessageBufferSend(_In_ LPCWSTR servername,_In_ LPCWSTR msgname,_In_ LPCWSTR fromname,_In_ LPBYTE buf,_In_ DWORD buflen)
BOOL None user32.WinHelp(HWND hWndMain None,LPCTSTR lpszHelp None,UINT uCommand None,ULONG_PTR dwData None)
BOOL None user32.WinHelpW(HWND hWndMain None,LPCTSTR lpszHelp None,UINT uCommand None,ULONG_PTR dwData None)
BOOL None user32.WinHelpA(HWND hWndMain None,LPCTSTR lpszHelp None,UINT uCommand None,ULONG_PTR dwData None)
HRESULT None windowscodecs.WriteScan(UINT cbScanData None,BYTE *pbScanData None)
uint32 None cscobj.RenameItemEx([in] string OriginalPath,[in] string NewPath,[in] boolean ReplaceIfExists)
BOOL None userenv.LeaveCriticalPolicySection(_In_ HANDLE hSection)
SerializableAttribute None None.ClassInterfaceAttribute(ClassInterfaceType.None None None)
CLIENT_CALL_RETURN None rpcrt4.NdrDcomAsyncClientCall2(_In_ PMIDL_STUB_DESC pStubDescriptor,_In_ PFORMAT_STRING pFormat,_Inout_ ... None)
uint32 None mspsservice.KillJob([in] boolean DeleteOnKill)
VOID None None.WdfIoResourceRequirementsListRemoveByIoResList(_In_ WDFIORESREQLIST RequirementsList,_In_ WDFIORESLIST IoResList)
public Object None.Invoke(DispatcherPriority priority None,TimeSpan timeout None,Delegate method None)
HRESULT None None.StartTransaction(ISOLEVEL isoLevel None,ULONG isoFlags None,ITransactionOptions *pOtherOptions None,ULONG *pulTransactionLevel None)
void None None.DestroyComponent(IComponent component None)
uint32 None dfsrwmiv2.GetOutboundBacklogFileCount([in] string VersionVector,[out] uint32 BacklogFileCount,[out] uint32 IdRecordIndex)
BOOL WINAPI user32.BlockInput(_In_ BOOL fBlockIt)
HRESULT None None.Clone([out None None,retval] IOpcSignatureRelationshipReferenceEnumerator **copy)
BOOL None spoolss.FindClosePrinterChangeNotification(_In_ HANDLE hChange)
protected void None.RemoveVisualChild(Visual child None)
BOOL WINAPI wtsapi32.WTSEnableChildSessions(BOOL bEnable None)
BOOL None kernel32.EnumDateFormatsExEx(_In_ DATEFMT_ENUMPROCEXEX lpDateFmtEnumProcExEx,_In_opt_ LPCWSTR lpLocaleName,_In_ DWORD dwFlags,_In_ LPARAM lParam)
protected void None.OnPreviewKeyDown(KeyEventArgs e None)
DWORD WINAPI user32.DdeGetData(_In_ HDDEDATA hData,_Out_opt_ LPBYTE pDst,_In_ DWORD cbMax,_In_ DWORD cbOff)
protected void None.OnPropertyChanged(DependencyPropertyChangedEventArgs e None)
private void None.MultipointDeviceArrivalEvent(object sender None,DeviceNotifyEventArgs e None)
BOOL WINAPI wecapi.EcGetSubscriptionProperty(_In_ EC_HANDLE Subscription,_In_ EC_SUBSCRIPTION_PROPERTY_ID PropertyId,_In_ DWORD Flags,_In_ DWORD PropertyValueBufferSize,_In_ PEC_VARIANT PropertyValueBuffer,_Out_ PDWORD PropertyValueBufferUsed)
HRESULT None spoolss.CorePrinterDriverInstalled(_In_ LPCTSTR pszServer,_In_ LPCTSTR pszEnvironment,_In_ GUID CoreDriverGUID,_In_ FILETIME ftDriverDate,_In_ DWORDLONG dwlDriverVersion,_Out_ BOOL *pbDriverInstalled)
HRESULT None spoolss.CorePrinterDriverInstalledW(_In_ LPCTSTR pszServer,_In_ LPCTSTR pszEnvironment,_In_ GUID CoreDriverGUID,_In_ FILETIME ftDriverDate,_In_ DWORDLONG dwlDriverVersion,_Out_ BOOL *pbDriverInstalled)
HRESULT None spoolss.CorePrinterDriverInstalledA(_In_ LPCTSTR pszServer,_In_ LPCTSTR pszEnvironment,_In_ GUID CoreDriverGUID,_In_ FILETIME ftDriverDate,_In_ DWORDLONG dwlDriverVersion,_Out_ BOOL *pbDriverInstalled)
public void None.ScrollToVerticalOffset(double offset None)
BOOL WINAPI dbghelp.SymEnumTypes(_In_ HANDLE hProcess,_In_ ULONG64 BaseOfDll,_In_ PSYM_ENUMERATESYMBOLS_CALLBACK EnumSymbolsCallback,_In_opt_ PVOID UserContext)
BOOL WINAPI dbghelp.SymEnumTypesW(_In_ HANDLE hProcess,_In_ ULONG64 BaseOfDll,_In_ PSYM_ENUMERATESYMBOLS_CALLBACK EnumSymbolsCallback,_In_opt_ PVOID UserContext)
BOOL WINAPI dbghelp.SymEnumTypes(_In_ HANDLE hProcess,_In_ ULONG64 BaseOfDll,_In_ PSYM_ENUMERATESYMBOLS_CALLBACK EnumSymbolsCallback,_In_opt_ PVOID UserContext)
HRESULT None None.RequestNewResourceManager(CHAR * pszDSN,CHAR * pszClientDllName,DWORD * pdwRMCookie)
HRESULT None wiaservc.GetRootItem([out] IWiaItem **ppIWiaItem)
HRESULT None None.get_readyState(long* pvarVal None)
HRESULT WINAPI iscsidsc.GetIscsiTargetInformation(_In_ PTCHAR TargetName,_In_opt_ PTCHAR DiscoveryMechanism,_In_ TARGET_INFORMATION_CLASS InfoClass,_Inout_ PULONG BufferSize,_Out_ PVOID Buffer)
HRESULT WINAPI iscsidsc.GetIscsiTargetInformationW(_In_ PTCHAR TargetName,_In_opt_ PTCHAR DiscoveryMechanism,_In_ TARGET_INFORMATION_CLASS InfoClass,_Inout_ PULONG BufferSize,_Out_ PVOID Buffer)
HRESULT WINAPI iscsidsc.GetIscsiTargetInformationA(_In_ PTCHAR TargetName,_In_opt_ PTCHAR DiscoveryMechanism,_In_ TARGET_INFORMATION_CLASS InfoClass,_Inout_ PULONG BufferSize,_Out_ PVOID Buffer)
HRESULT None dcomp.GetFrameStatistics([out] DCOMPOSITION_FRAME_STATISTICS *statistics)
HRESULT None None.FeedDownloading(LPCWSTR pszPath None)
public void None.Printing(String printer None)
uint32 None wvrcimprov.SetPartnershipModifyPartnership([in] string SourceRGName,[in] string SourceComputerName,[in] string DestinationRGName,[in] string DestinationComputerName,[in] uint32 ReplicationMode,[in] uint32 AsyncRPO,[in] uint64 LogSizeInBytes,[in] boolean Encryption)
BOOL WINAPI dbghelp.SymRegisterCallback64(_In_ HANDLE hProcess,_In_ PSYMBOL_REGISTERED_CALLBACK64 CallbackFunction,_In_ ULONG64 UserContext)
BOOL WINAPI dbghelp.SymRegisterCallbackW64(_In_ HANDLE hProcess,_In_ PSYMBOL_REGISTERED_CALLBACK64 CallbackFunction,_In_ ULONG64 UserContext)
BOOL WINAPI dbghelp.SymRegisterCallback64(_In_ HANDLE hProcess,_In_ PSYMBOL_REGISTERED_CALLBACK64 CallbackFunction,_In_ ULONG64 UserContext)
HRESULT WINAPI dismapi.DismRemoveDriver(_In_ DismSession Session,_In_ PCWSTR DriverPath)
HRESULT STDAPI srpapi.SrpIsTokenService(_In_ HANDLE tokenHandle,_Out_ BOOL *IsTokenService)
HRESULT None windowscodecs.IWICMetadataQueryReader_GetLocation_Proxy(_In_ IWICMetadataQueryReader *THIS_PTR,_In_ UINT cchMaxLength,_Inout_ WCHAR *wzNamespace,_Out_ UINT *pcchActualLength)
public void None.DeleteStream(String name None)
HRESULT None msdrm.DRMGetUserRights(_In_ DRMPUBHANDLE hIssuanceLicense,_In_ DRMPUBHANDLE hUser,_In_ UINT uIndex,_Out_ DRMPUBHANDLE *phRight)
HRESULT None None.schemaLocations(ISchemaStringCollection** schemaLocations None)
BOOL None None.SetDefaultPrinter(_In_ LPCTSTR pszPrinter)
BOOL None None.SetDefaultPrinterW(_In_ LPCTSTR pszPrinter)
BOOL None None.SetDefaultPrinterA(_In_ LPCTSTR pszPrinter)
HRESULT None winsatapi.get_Info([out] IProvideWinSATResultsInfo **ppWinSATAssessmentInfo)
HRESULT None srmsvc.EnumActions([out] IFsrmCollection **actions)
Sub None None.ignorableWhitespace(strChars As String)
ULONG TDHAPI tdh.TdhGetManifestEventInformation(_In_ LPGUID ProviderGuid,_In_ PEVENT_DESCRIPTOR EventDescriptor,_Out_ PTRACE_EVENT_INFO Buffer,_Inout_ ULONG *BufferSize)
HRESULT None None.GetGammaControlCapabilities([out] DXGI_GAMMA_CONTROL_CAPABILITIES *pGammaCaps)
HRESULT None qmgrprxy.GetProxySettings([out] BG_JOB_PROXY_USAGE *pProxyUsage,[out] LPWSTR *ppProxyList,[out] LPWSTR *ppProxyBypassList)
HRESULT None oleaut32.VarI1FromI2(_In_ SHORT uiIn,_Out_ CHAR *pcOut)
Object None None.GetData(String format None)
VOID None None.FltCompletePendedPostOperation(_In_ PFLT_CALLBACK_DATA CallbackData)
HRESULT None None.get_QueryTermExpansion([out None None,retval] SEARCH_TERM_EXPANSION *pExpandTerms)
HRESULT None None.get_QuerySyntax([out None None,retval] SEARCH_QUERY_SYNTAX *pQuerySyntax)
NTSTATUS None None.PasswordChangeNotify(_In_ PUNICODE_STRING UserName,_In_ ULONG RelativeId,_In_ PUNICODE_STRING NewPassword)
HRESULT None None.get_UsedBlocks([out] LONG *pVal)
size_t None None.WdfCommonBufferGetLength(_In_ WDFCOMMONBUFFER CommonBuffer)
DWORD None None.MonthCal_SetFirstDayOfWeek(HWND hwndMC None,INT iDay None)
BOOL WINAPI kernel.GetDisplayAutoRotationPreferencesByProcessId(_In_ DWORD *dwProcessId,_Out_ ORIENTATION_PREFERENCE *pOrientation,_Out_ BOOL *fRotateScreen)
BOOL WINAPI advapi32.SetSecurityDescriptorDacl(_Inout_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_ BOOL bDaclPresent,_In_opt_ PACL pDacl,_In_ BOOL bDaclDefaulted)
HRESULT None None.RemoveAt(UINT32 index None)
BOOL WINAPI kernel32.CallNamedPipe(_In_ LPCTSTR lpNamedPipeName,_In_ LPVOID lpInBuffer,_In_ DWORD nInBufferSize,_Out_ LPVOID lpOutBuffer,_In_ DWORD nOutBufferSize,_Out_ LPDWORD lpBytesRead,_In_ DWORD nTimeOut)
BOOL WINAPI kernel32.CallNamedPipeW(_In_ LPCTSTR lpNamedPipeName,_In_ LPVOID lpInBuffer,_In_ DWORD nInBufferSize,_Out_ LPVOID lpOutBuffer,_In_ DWORD nOutBufferSize,_Out_ LPDWORD lpBytesRead,_In_ DWORD nTimeOut)
BOOL WINAPI kernel32.CallNamedPipeA(_In_ LPCTSTR lpNamedPipeName,_In_ LPVOID lpInBuffer,_In_ DWORD nInBufferSize,_Out_ LPVOID lpOutBuffer,_In_ DWORD nOutBufferSize,_Out_ LPDWORD lpBytesRead,_In_ DWORD nTimeOut)
HRESULT None userenv.RSoPSetPolicySettingStatus(_In_ DWORD dwFlags,_In_ IWbemServices *pServices,_In_ IWbemClassObject *pSettingInstance,_In_ DWORD nInfo,_In_ POLICYSETTINGSTATUSINFO *pStatus)
HRESULT None None.GetWriterMetadataCount([out] UINT pcWriters)
HRESULT STDMETHODCALLTYPE ole32.CStdAsyncStubBuffer_Connect(_In_ IRpcStubBuffer *pthis,_In_ IUnknown *pUnkServer)
BOOL None msimg32.GradientFill(_In_ HDC hdc,_In_ PTRIVERTEX pVertex,_In_ ULONG nVertex,_In_ PVOID pMesh,_In_ ULONG nMesh,_In_ ULONG ulMode)
HRESULT WINAPI iscsidsc.AddRadiusServer(_In_ PWCHAR Address)
HRESULT WINAPI iscsidsc.AddRadiusServerW(_In_ PWCHAR Address)
HRESULT WINAPI iscsidsc.AddRadiusServerA(_In_ PWCHAR Address)
HRESULT None None.IntAdd(_In_ INT iAugend,_In_ INT iAddend,_Out_ INT *piResult)
LRESULT CALLBACK None.WindowProc(HWND hwnd None,UINT uMsg None,WPARAM wParam None,LPARAM lParam None)
NTSTATUS None None.WdfMemoryCreatePreallocated(_In_opt_ PWDF_OBJECT_ATTRIBUTES Attributes,_In_ PVOID Buffer,_In_ size_t BufferSize,_Out_ WDFMEMORY *Memory)
HMETAFILE None gdi32.CloseMetaFile(_In_ HDC hdc)
HRESULT None None.GetClipGeometryLocal([out None None,retval] IXpsOMGeometry **clipGeometry)
HRESULT None dskquota.GetID([out] ULONG *pulID)
BOOL None None.Animate_Close(HWND hwnd None)
HRESULT None None.GetEnumerator([out None None,retval] IOpcSignatureRelationshipReferenceEnumerator **relationshipReferenceEnumerator)
HRESULT None windowscodecs.WICSerializeMetadataContent(_In_ REFGUID guidContainerFormat,_In_ IWICMetadataWriter *pIWriter,_In_ DWORD dwPersistOptions,_In_ IStream *pIStream)
BOOL WINAPI wtsapi32.WTSEnumerateListeners(_In_ HANDLE hServer,_In_ PVOID pReserved,_In_ DWORD Reserved,_Out_opt_ PWTSLISTENERNAME pListeners,_Inout_ DWORD *pCount)
BOOL WINAPI wtsapi32.WTSEnumerateListenersW(_In_ HANDLE hServer,_In_ PVOID pReserved,_In_ DWORD Reserved,_Out_opt_ PWTSLISTENERNAME pListeners,_Inout_ DWORD *pCount)
BOOL WINAPI wtsapi32.WTSEnumerateListenersA(_In_ HANDLE hServer,_In_ PVOID pReserved,_In_ DWORD Reserved,_Out_opt_ PWTSLISTENERNAME pListeners,_Inout_ DWORD *pCount)
DWORD PXEAPI None.PxeProviderShutdown(_In_ PVOID pContext)
HRESULT STDMETHODCALLTYPE None.Pause(LPSTATISTICS lpStats None)
BOOL WINAPI ktmw32.GetTransactionManagerId(_In_ HANDLE TransactionManagerHandle,_Out_ LPGUID TransactionManagerId)
DWORD PXEAPI wdspxe.PxeDhcpIsValid(_In_ PVOID pPacket,_In_ ULONG uPacketLen,_In_ BOOL bRequestPacket,_Out_ PBOOL pbPxeOptionPresent)
BOOLEAN None None.FltCurrentBatchOplock(_In_ POPLOCK Oplock)
HRESULT None windows.media.audio.XAudio2CreateReverb(_Inout_ IUnknown **ppApo,_In_ UINT32 Flags)
HRESULT None None.StringCchVPrintfEx(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags,_In_ LPCTSTR pszFormat,_In_ va_list argList)
HRESULT None None.StringCchVPrintfExW(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags,_In_ LPCTSTR pszFormat,_In_ va_list argList)
HRESULT None None.StringCchVPrintfExA(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags,_In_ LPCTSTR pszFormat,_In_ va_list argList)
BOOL WINAPI comdlg32.PrintDlg(_Inout_ LPPRINTDLG lppd)
BOOL WINAPI comdlg32.PrintDlgW(_Inout_ LPPRINTDLG lppd)
BOOL WINAPI comdlg32.PrintDlgA(_Inout_ LPPRINTDLG lppd)
HRESULT WINAPI wsbonline.UpdateOBStatusInWindowsServerBackup(_In_ WSB_OB_STATUS_INFO *pOBRegistrationInfo)
DWORD WINAPI kernel32.GetPrivateProfileSection(_In_ LPCTSTR lpAppName,_Out_ LPTSTR lpReturnedString,_In_ DWORD nSize,_In_ LPCTSTR lpFileName)
DWORD WINAPI kernel32.GetPrivateProfileSectionW(_In_ LPCTSTR lpAppName,_Out_ LPTSTR lpReturnedString,_In_ DWORD nSize,_In_ LPCTSTR lpFileName)
DWORD WINAPI kernel32.GetPrivateProfileSectionA(_In_ LPCTSTR lpAppName,_Out_ LPTSTR lpReturnedString,_In_ DWORD nSize,_In_ LPCTSTR lpFileName)
BOOL WINAPI authz.AuthzInitializeCompoundContext(_In_ AUTHZ_CLIENT_CONTEXT_HANDLE UserContext,_In_ AUTHZ_CLIENT_CONTEXT_HANDLE DeviceContext,_Out_ PAUTHZ_CLIENT_CONTEXT_HANDLE phCompoundContext)
UINT None msi.MsiDatabaseImport(_In_ MSIHANDLE hDatabase,_In_ LPCTSTR szFolderPath,_In_ LPCTSTR szFileName)
UINT None msi.MsiDatabaseImportW(_In_ MSIHANDLE hDatabase,_In_ LPCTSTR szFolderPath,_In_ LPCTSTR szFileName)
UINT None msi.MsiDatabaseImportA(_In_ MSIHANDLE hDatabase,_In_ LPCTSTR szFolderPath,_In_ LPCTSTR szFileName)
RPC_STATUS RPC_ENTRY rpcrt4.RpcCancelThreadEx(HANDLE ThreadHandle None,LONG Timeout None)
COLORREF None None.MonthCal_SetColor(HWND hwndMC None,INT iColor None,COLORREF clr None)
HRESULT None None.GetRequestedSigner([out None None,retval] LPWSTR *signerName)
DWORD None None.GenerateGroupPolicy(_In_ DWORD dwFlags,_In_ BOOL *pbAbort,_In_ WCHAR *pwszSite,_In_ PRSOP_TARGET pComputerTarget,_In_ PRSOP_TARGET pUserTarget)
DWORD None userenv.ProcessGroupPolicyCompletedEx(_In_ REFGPEXTENSIONID extensionId,_In_ ASYNCCOMPLETIONHANDLE pAsyncHandle,_In_ DWORD dwStatus,_In_ HRESULT RsopStatus)
BOOL WINAPI user32.GetIconInfo(_In_ HICON hIcon,_Out_ PICONINFO piconinfo)
LONG WINAPI advapi32.RegOpenCurrentUser(_In_ REGSAM samDesired,_Out_ PHKEY phkResult)
HRESULT None None.GetHostInfo(DOCHOSTUIINFO *pInfo None)
HRESULT None None.CreateDataSource(ULONG cPropertySets None,DBPROPSET rgPropertySets[] None,IUnknown *pUnkOuter None,REFIID riid None,IUnknown **ppSession None)
HRESULT None None.DWordSub(_In_ DWORD dwMinuend,_In_ DWORD dwSubtrahend,_Out_ DWORD *pdwResult)
HRESULT None None.DeleteFeed(BSTR feedPath None)
LONG WINAPI tapi32.lineRemoveFromConference(HCALL hCall None)
HRESULT WDSTRANSPORTPROVIDERAPI None.WdsTransportProviderInitialize(_In_ PWDS_TRANSPORTPROVIDER_INIT_PARAMS pInParameters,_Out_ PWDS_TRANSPORTPROVIDER_SETTINGS pSettings,_In_ ULONG ulLength)
HRESULT None None.EnumConnections([out] IEnumConnections **ppEnum)
UCHAR None advapi32.GetTraceEnableLevel(_In_ TRACEHANDLE SessionHandle)
HRESULT None ole32.OleCreateLinkFromDataEx(_In_ LPDATAOBJECT pSrcDataObj,_In_ REFIID riid,_In_ DWORD dwFlags,_In_ DWORD renderopt,_In_ ULONG cFormats,_In_ DWORD *rgAdvf,_In_ LPFORMATETC rgFormatEtc,_In_ IAdviseSink *lpAdviseSink,_Inout_ DWORD *rgdwConnection,_In_ LPOLECLIENTSITE pClientSite,_In_ LPSTORAGE pStg,_Out_ LPVOID *ppvObj)
DWORD WDSTCIAPI wdstptc.WdsTransportClientCancelSession(_In_ HANDLE hSessionKey)
HRESULT None windowscodecs.IWICBitmapCodecInfo_GetDeviceModels_Proxy(_In_ IWICBitmapCodecInfo *THIS_PTR,_In_ UINT cchDeviceModels,_Inout_ WCHAR *wzDeviceModels,_Inout_ UINT *pcchActual)
HRESULT None uxtheme.SetWindowThemeNonClientAttributes(_In_ HWND hwnd,_In_ DWORD dwMask,_In_ DWORD dwAttributes)
HKL WINAPI user32.ActivateKeyboardLayout(_In_ HKL hkl,_In_ UINT Flags)
HRESULT None None.GetAllParameters(LPDS3DLISTENER pListener None)
HRESULT None None.GetOrientation(D3DVECTOR * pvOrientFront,D3DVECTOR * pvOrientTop)
NTSTATUS None None.FltSetInformationFile(_In_ PFLT_INSTANCE Instance,_In_ PFILE_OBJECT FileObject,_In_ PVOID FileInformation,_In_ ULONG Length,_In_ FILE_INFORMATION_CLASS FileInformationClass)
NET_API_STATUS None netapi32.NetLocalGroupDel(_In_ LPCWSTR servername,_In_ LPCWSTR groupname)
BOOL WINAPI ktmw32.RecoverEnlistment(_In_ HANDLE EnlistmentHandle,_In_opt_ PVOID EnlistmentKey)
HRESULT None spoolss.DeletePrinterDriverPackage(_In_ LPCTSTR pszServer,_In_ LPCTSTR pszInfPath,_In_ LPCTSTR pszEnvironment)
HRESULT None spoolss.DeletePrinterDriverPackageW(_In_ LPCTSTR pszServer,_In_ LPCTSTR pszInfPath,_In_ LPCTSTR pszEnvironment)
HRESULT None spoolss.DeletePrinterDriverPackageA(_In_ LPCTSTR pszServer,_In_ LPCTSTR pszInfPath,_In_ LPCTSTR pszEnvironment)
NTSTATUS WINAPI ntdll.ZwQuerySystemInformation(_In_ SYSTEM_INFORMATION_CLASS SystemInformationClass,_Inout_ PVOID SystemInformation,_In_ ULONG SystemInformationLength,_Out_opt_ PULONG ReturnLength)
HRESULT WINOLEAPI combase.CoRegisterChannelHook(_In_ REFGUID ExtensionUuid,_In_ IChannelHook *pChannelHook)
HRESULT None cscsvc.GetFileAttributes([out] DWORD *pdwAttributes)
HRESULT None azroles.get_Tasks([out] VARIANT *pvarProp)
VOID None None.FltUnregisterFilter(_In_ PFLT_FILTER Filter)
UINT WINAPI user32.DdeQueryConvInfo(_In_ HCONV hConv,_In_ DWORD idTransaction,_Inout_ PCONVINFO pConvInfo)
PDISK_DETECTION_INFO None None.DiskGeometryGetDetect(PDISK_GEOMETRY_EX Geometry None)
NTSTATUS None None.IoSetDeviceInterfaceState(_In_ PUNICODE_STRING SymbolicLinkName,_In_ BOOLEAN Enable)
DWORD WINAPI dbghelp.SymSetOptions(_In_ DWORD SymOptions)
HRESULT WINAPI ndfapi.NdfCreateNetConnectionIncident(_Out_ NDFHANDLE *handle,GUID id None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcBindingInqObject(RPC_BINDING_HANDLE Binding None,UUID *ObjectUuid None)
HRESULT None azroles.get__NewEnum(LPUNKNOWN *ppEnumPtr None)
HRESULT None propsys.PSPropertyBag_WriteUnknown(_In_ IPropertyBag *propBag,_In_ LPCWSTR propName,_In_ IUnknown *punk)
HRESULT None None.get_OutgoingDistributionConnections(long* pVal None)
HRESULT None None.get_entities(IXMLDOMNamedNodeMap **entityMap None)
HRESULT None ndfapi.NdfCreateWinSockIncident(SOCKET sock None,_In_opt_ LPCWSTR host,USHORT port None,_In_opt_ LPCWSTR appID,_In_opt_ SID *userId,_Out_ NDFHANDLE *handle)
HDC None user32.BeginPaint(_In_ HWND hwnd,_Out_ LPPAINTSTRUCT lpPaint)
NTSTATUS None None.WdfUsbTargetDeviceAllocAndQueryString(_In_ WDFUSBDEVICE UsbDevice,_In_opt_ PWDF_OBJECT_ATTRIBUTES StringMemoryAttributes,_Out_ WDFMEMORY *StringMemory,_Out_opt_ PUSHORT NumCharacters,_In_ UCHAR StringIndex,_In_opt_ USHORT LangID)
NTSTATUS WINAPI ncrypt.NCryptCloseProtectionDescriptor(_In_ NCRYPT_DESCRIPTOR_HANDLE hDescriptor)
HRESULT None azroles.get_DelegatedPolicyUsers([out] VARIANT *pvarDelegatedPolicyUsers)
VOID CALLBACK None.APCProc(_In_ ULONG_PTR dwParam)
HRESULT None shell32.SHOpenFolderAndSelectItems(_In_ PCIDLIST_ABSOLUTE pidlFolder,UINT cidl None,_In_opt_ PCUITEMID_CHILD_ARRAY apidl,DWORD dwFlags None)
SECURITY_STATUS SEC_Entry secur32.DeleteSecurityContext(_In_ PCtxtHandle phContext)
uint32 None None.SendScsiReadCapacity([in] uint64 Lun,[out] uint8 ScsiStatus,[out] uint8 ResponseBuffer[],[out] uint8 SenseBuffer[])
LONG WINAPI tapi32.lineGetStatusMessages(HLINE hLine None,LPDWORD lpdwLineStates None,LPDWORD lpdwAddressStates None)
UINT None oledlg.OleUIConvert(_In_ LPOLEUICONVERT lpCV)
UINT None oledlg.OleUIConvertW(_In_ LPOLEUICONVERT lpCV)
UINT None oledlg.OleUIConvertA(_In_ LPOLEUICONVERT lpCV)
DWORD WINAPI resutils.ResUtilFreeEnvironment(_In_ LPVOID lpEnvironment)
protected void None.RemoveVisualChild(Visual child None)
HRESULT STDAPI srpapi.SrpGetEnterpriseIds(_In_ HANDLE tokenHandle,_Inout_opt_ PULONG numberOfBytes,_Out_opt_ PCWSTR enterpriseIds,_Out_ PULONG enterpriseIdCount)
HTHEME None uxtheme.GetWindowTheme(_In_ HWND hWnd)
HRESULT WDSCLIAPI wdsclientapi.WdsCliAuthorizeSession(_Inout_ HANDLE hSession,_In_opt_ PWDS_CLI_CRED pCred)
BOOL WINAPI advapi32.QueryServiceDynamicInformation(_In_ SERVICE_STATUS_HANDLE hServiceStatus,_In_ DWORD dwInfoLevel,_Outptr_ PVOID *ppDynamicInfo)
HANDLE WINAPI kernel32.OpenMutex(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpName)
HANDLE WINAPI kernel32.OpenMutexW(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpName)
HANDLE WINAPI kernel32.OpenMutexA(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpName)
LRESULT None None.WndProc(HWND hwnd None,UINT msg None,WPARAM wParam None,LPARAM lParam None)
HRESULT None None.GetGammaControl([out] DXGI_GAMMA_CONTROL *pArray)
public void None.InstallApplication(string package None,InstallationOptions options None)
BOOL WINAPI wecapi.EcGetObjectArraySize(_In_ EC_OBJECT_ARRAY_PROPERTY_HANDLE ObjectArray,_Out_ PDWORD ObjectArraySize)
HRESULT None None.GetSecurityFlags([out] ULONG *pFlags)
BOOL APIENTRY kernel32.CheckTokenMembershipEx(_In_opt_ HANDLE TokenHandle,_In_ PSID SidToCheck,_In_ DWORD Flags,_Out_ PBOOL IsMember)
HRESULT None azroles.get_Writable([out] BOOL *pfProp)
BOOL WINAPI kernel32.GetModuleInformation(_In_ HANDLE hProcess,_In_ HMODULE hModule,_Out_ LPMODULEINFO lpmodinfo,_In_ DWORD cb)
SCESTATUS WINAPI None.SceSvcAttachmentAnalyze(_In_ PSCESVC_CALLBACK_INFO pSceCbInfo)
VOID None None.IoAllocateController(_In_ PCONTROLLER_OBJECT ControllerObject,_In_ PDEVICE_OBJECT DeviceObject,_In_ PDRIVER_CONTROL ExecutionRoutine,_In_opt_ PVOID Context)
RPC_STATUS RPC_ENTRY rpcrt4.RpcServerInterfaceGroupClose(_In_ RPC_INTERFACE_GROUP IfGroup)
HRESULT None None.get_StreamingMMSPlayers(long* pVal None)
HRESULT None None.get_DVDROMDrives([out] IVMDVDDriveCollection **dvdROMCollection)
void CALLBACK None.FaxLineCallback(__in HANDLE FaxHandle,__in DWORD hDevice,__in DWORD dwMessage,DWORD_PTR dwInstance None,__in DWORD_PTR dwParam1,__in DWORD_PTR dwParam2,__in DWORD_PTR dwParam3)
HRESULT WINAPI iscsidsc.RefreshIscsiSendTargetPortal(_In_opt_ PTCHAR InitiatorInstance,_In_ ULONG InitiatorPortNumber,_In_ PISCSI_TARGET_PORTAL Portal)
HRESULT WINAPI iscsidsc.RefreshIscsiSendTargetPortalW(_In_opt_ PTCHAR InitiatorInstance,_In_ ULONG InitiatorPortNumber,_In_ PISCSI_TARGET_PORTAL Portal)
HRESULT WINAPI iscsidsc.RefreshIscsiSendTargetPortalA(_In_opt_ PTCHAR InitiatorInstance,_In_ ULONG InitiatorPortNumber,_In_ PISCSI_TARGET_PORTAL Portal)
LSTATUS None shlwapi.SHRegCreateUSKey(_In_ LPCTSTR pszPath,_In_ REGSAM samDesired,_In_opt_ HUSKEY hRelativeUSKey,_Out_ PHUSKEY phNewUSKey,_In_ DWORD dwFlags)
LSTATUS None shlwapi.SHRegCreateUSKeyW(_In_ LPCTSTR pszPath,_In_ REGSAM samDesired,_In_opt_ HUSKEY hRelativeUSKey,_Out_ PHUSKEY phNewUSKey,_In_ DWORD dwFlags)
LSTATUS None shlwapi.SHRegCreateUSKeyA(_In_ LPCTSTR pszPath,_In_ REGSAM samDesired,_In_opt_ HUSKEY hRelativeUSKey,_Out_ PHUSKEY phNewUSKey,_In_ DWORD dwFlags)
HRESULT None None.get_ConnectTimeout([out None None,retval] DWORD *pdwConnectTimeout)
DWORD None iphlpapi.GetUdpTable(_Out_ PMIB_UDPTABLE pUdpTable,_Inout_ PDWORD pdwSize,_In_ BOOL bOrder)
BOOL WINAPI None.FaxDevInitialize(__in HLINEAPP LineAppHandle,__in HANDLE HeapHandle,__out PFAX_LINECALLBACK *LineCallbackFunction,__in PFAX_SERVICE_CALLBACK FaxServiceCallback)
HRESULT None None.GetPolicy([out None None,retval] XPS_SIGN_POLICY *policy)
NTSTATUS SEC_ENTRY None.SpUserModeInitialize(_In_ ULONG LsaVersion,_Out_ PULONG PackageVersion,_Out_ PSECPKG_USER_FUNCTION_TABLE *ppTables,_Out_ PULONG pcTables)
void None None.Rollback(Enlistment enlistment None)
public Enlistment None.EnlistDurable(Guid resourceManagerIdentifier None,ISinglePhaseNotification singlePhaseNotification None,EnlistmentOptions enlistmentOptions None)
HRESULT WINAPI webservices.WsEndWriterCanonicalization(_In_ WS_XML_WRITER* writer,_In_opt_ WS_ERROR* error)
BOOL WINAPI kernel32.GetVersionEx(_Inout_ LPOSVERSIONINFO lpVersionInfo)
BOOL WINAPI kernel32.GetVersionExW(_Inout_ LPOSVERSIONINFO lpVersionInfo)
BOOL WINAPI kernel32.GetVersionExA(_Inout_ LPOSVERSIONINFO lpVersionInfo)
LONG WINAPI tapi32.lineSetCurrentLocation(HLINEAPP hLineApp None,DWORD dwLocation None)
HWINSTA WINAPI user32.CreateWindowStation(_In_opt_ LPCTSTR lpwinsta,DWORD dwFlags None,_In_ ACCESS_MASK dwDesiredAccess,_In_opt_ LPSECURITY_ATTRIBUTES lpsa)
HWINSTA WINAPI user32.CreateWindowStationW(_In_opt_ LPCTSTR lpwinsta,DWORD dwFlags None,_In_ ACCESS_MASK dwDesiredAccess,_In_opt_ LPSECURITY_ATTRIBUTES lpsa)
HWINSTA WINAPI user32.CreateWindowStationA(_In_opt_ LPCTSTR lpwinsta,DWORD dwFlags None,_In_ ACCESS_MASK dwDesiredAccess,_In_opt_ LPSECURITY_ATTRIBUTES lpsa)
BOOL WINAPI advapi32.ChangeServiceConfig(_In_ SC_HANDLE hService,_In_ DWORD dwServiceType,_In_ DWORD dwStartType,_In_ DWORD dwErrorControl,_In_opt_ LPCTSTR lpBinaryPathName,_In_opt_ LPCTSTR lpLoadOrderGroup,_Out_opt_ LPDWORD lpdwTagId,_In_opt_ LPCTSTR lpDependencies,_In_opt_ LPCTSTR lpServiceStartName,_In_opt_ LPCTSTR lpPassword,_In_opt_ LPCTSTR lpDisplayName)
BOOL WINAPI advapi32.ChangeServiceConfigW(_In_ SC_HANDLE hService,_In_ DWORD dwServiceType,_In_ DWORD dwStartType,_In_ DWORD dwErrorControl,_In_opt_ LPCTSTR lpBinaryPathName,_In_opt_ LPCTSTR lpLoadOrderGroup,_Out_opt_ LPDWORD lpdwTagId,_In_opt_ LPCTSTR lpDependencies,_In_opt_ LPCTSTR lpServiceStartName,_In_opt_ LPCTSTR lpPassword,_In_opt_ LPCTSTR lpDisplayName)
BOOL WINAPI advapi32.ChangeServiceConfigA(_In_ SC_HANDLE hService,_In_ DWORD dwServiceType,_In_ DWORD dwStartType,_In_ DWORD dwErrorControl,_In_opt_ LPCTSTR lpBinaryPathName,_In_opt_ LPCTSTR lpLoadOrderGroup,_Out_opt_ LPDWORD lpdwTagId,_In_opt_ LPCTSTR lpDependencies,_In_opt_ LPCTSTR lpServiceStartName,_In_opt_ LPCTSTR lpPassword,_In_opt_ LPCTSTR lpDisplayName)
HRESULT WINAPI dismapi.DismGetFeatureParent(_In_ DismSession Session,_In_ PCWSTR FeatureName,_In_opt_ PCWSTR Identifier,_In_opt_ DismPackageIdentifier PackageIdentifier,_Out_ DismFeature **Feature,_Out_ UINT *Count)
BOOL WINAPI crypt32.CryptUnprotectData(_In_ DATA_BLOB *pDataIn,_Out_opt_ LPWSTR *ppszDataDescr,_In_opt_ DATA_BLOB *pOptionalEntropy,_Reserved_ PVOID pvReserved,_In_opt_ CRYPTPROTECT_PROMPTSTRUCT *pPromptStruct,_In_ DWORD dwFlags,_Out_ DATA_BLOB *pDataOut)
HRESULT None prntvpt.PTOpenProviderEx(_In_ PCWSTR pszPrinterName,DWORD maxVersion None,DWORD prefVersion None,_Out_ HPTPROVIDER *phProvider,_Out_ DWORD *usedVersion)
LONG None None.KeReadStateEvent(_In_ PRKEVENT Event)
uint32 None dhcpserverpsprovider.Set([in] string Prefix,[in] boolean Enabled,[in] datetime PurgeInterval,[in] string ComputerName,[in] boolean PassThru,[out] DhcpServerv6StatelessStore cmdletOutput)
HRESULT None windowscodecs.IWICMetadataQueryWriter_RemoveMetadataByName_Proxy(_In_ IWICMetadataQueryWriter *THIS_PTR,_In_ LPCWSTR wzName)
HRESULT None uxtheme.GetBufferedPaintTargetRect(HPAINTBUFFER hBufferedPaint None,_Out_ RECT *prc)
BOOL WINAPI kernel32.TzSpecificLocalTimeToSystemTime(_In_opt_ LPTIME_ZONE_INFORMATION lpTimeZoneInformation,_In_ LPSYSTEMTIME lpLocalTime,_Out_ LPSYSTEMTIME lpUniversalTime)
BOOL None None.Animate_Seek(HWND hwndAnim None,UINT wFrame None)
HRESULT None None.SetSearchDirectory(REFGUID rguidClass None,WCHAR* pwszPath None,BOOL fClear None)
public None None.ToolStripMenuItem(String text None,Image image None,EventHandler onClick None,Keys shortcutKeys None)
HRESULT None None.StringCbVPrintfEx(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags,_In_ LPCTSTR pszFormat,_In_ va_list argList)
HRESULT None None.StringCbVPrintfExW(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags,_In_ LPCTSTR pszFormat,_In_ va_list argList)
HRESULT None None.StringCbVPrintfExA(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags,_In_ LPCTSTR pszFormat,_In_ va_list argList)
BOOL CALLBACK None.EnumLocalesProcEx(_In_ LPWSTR lpLocaleString,_In_ DWORD dwFlags,_In_ LPARAM lParam)
HRESULT None actxprxy.GetActiveDiscRecorder([out] IDiscRecorder **ppRecorder)
WINOLEAPI None ole32.CreateStreamOnHGlobal(_In_ HGLOBAL hGlobal,_In_ BOOL fDeleteOnRelease,_Out_ LPSTREAM *ppstm)
HRESULT None mfplat.MFCreateWICBitmapBuffer(_In_ REFIID riid,_In_ IUnknown *punkSurface,_Out_ IMFMediaBuffer **ppBuffer)
HRESULT None None.get__NewEnum([out] IUnknown **ppEnum)
PDNS_RECORD WINAPI dnsapi.DnsRecordSetCopyEx(_In_ PDNS_RECORD pRecordSet,_In_ DNS_CHARSET CharSetIn,_In_ DNS_CHARSET CharSetOut)
HRESULT None None.ScheduleDCS(IDataCollectorSet* pdcs None)
HRESULT None None.get_StageFiles([out] VARIANT_BOOL *pVal)
BOOL WINAPI clfsw32.CreateLogMarshallingArea(_In_ HANDLE hLog,_In_opt_ CLFS_BLOCK_ALLOCATION pfnAllocBuffer,_In_opt_ CLFS_BLOCK_DEALLOCATION pfnFreeBuffer,_In_opt_ PVOID pvBlockAllocContext,_In_ ULONG cbMarshallingBuffer,_In_ ULONG cMaxWriteBuffers,_In_ ULONG cMaxReadBuffers,_Out_ PVOID *ppvMarshal)
PVOID None None.MmMapLockedPages(_In_ PMDL MemoryDescriptorList,_In_ KPROCESSOR_MODE AccessMode)
NTSTATUS None None.IoCheckEaBufferValidity(_In_ PFILE_FULL_EA_INFORMATION EaBuffer,_In_ ULONG EaLength,_Out_ PULONG ErrorOffset)
SOCKET None None.WPUCreateSocketHandle(_In_ DWORD dwCatalogEntryId,_In_ DWORD_PTR dwContext,_Out_ LPINT lpErrno)
NET_API_STATUS None netapi32.NetLocalGroupDelMembers(_In_ LPCWSTR servername,_In_ LPCWSTR groupname,_In_ DWORD level,_In_ LPBYTE buf,_In_ DWORD totalentries)
BOOL WINAPI clfsw32.FlushLogToLsn(_In_ PVOID pvMarshalContext,_In_ PCLFS_LSN plsnFlush,_Out_opt_ PCLFS_LSN plsnLastFlushed,_Inout_opt_ LPOVERLAPPED pOverlapped)
BOOL WINAPI clfsw32.ReadNextLogRecord(_Inout_ PVOID pvReadContext,_Out_ PVOID *ppvBuffer,_Out_ PULONG pcbBuffer,_Inout_ PCLFS_RECORD_TYPE peRecordType,_In_opt_ PCLFS_LSN plsnUser,_Out_ PCLFS_LSN plsnUndoNext,_Out_ PCLFS_LSN plsnPrevious,_Out_ PCLFS_LSN plsnRecord,_Inout_opt_ LPOVERLAPPED pOverlapped)
HRESOURCE WINAPI resutils.ResUtilGetResourceDependencyByClass(_In_ HCLUSTER hCluster,_In_ HANDLE hSelf,_In_ PCLUS_RESOURCE_CLASS_INFO prci,_In_ BOOL bRecurse,_In_ DWORD dwDesiredAccess)
protected void None.PaintBorder(Graphics graphics None,Rectangle clipBounds None,Rectangle bounds None,DataGridViewCellStyle cellStyle None,DataGridViewAdvancedBorderStyle advancedBorderStyle None)
HRESULT None certadm.CertSrvBackupTruncateLogs(_In_ HCSBC hbc)
BOOL WINAPI wecapi.EcGetObjectArrayProperty(_In_ EC_OBJECT_ARRAY_PROPERTY_HANDLE ObjectArray,_In_ EC_SUBSCRIPTION_PROPERTY_ID PropertyId,_In_ DWORD ArrayIndex,_In_ DWORD Flags,_In_ DWORD PropertyValueBufferSize,_In_ PEC_VARIANT PropertyValueBuffer,_Out_ PDWORD PropertyValueBufferUsed)
HRESULT None None.CreatePackage([out None None,retval] IOpcPackage **package)
UINT None msi.MsiNotifySidChange(_In_ LPCTSTR szOldSid,_In_ LPCTSTR szNewSid)
UINT None msi.MsiNotifySidChangeW(_In_ LPCTSTR szOldSid,_In_ LPCTSTR szNewSid)
UINT None msi.MsiNotifySidChangeA(_In_ LPCTSTR szOldSid,_In_ LPCTSTR szNewSid)
BOOL WINAPI advapi32.CryptContextAddRef(_In_ HCRYPTPROV hProv,_In_ DWORD *pdwReserved,_In_ DWORD dwFlags)
NTSTATUS None None.WdfDriverCreate(_In_ PDRIVER_OBJECT DriverObject,_In_ PCUNICODE_STRING RegistryPath,_In_opt_ PWDF_OBJECT_ATTRIBUTES DriverAttributes,_In_ PWDF_DRIVER_CONFIG DriverConfig,_Out_opt_ WDFDRIVER *Driver)
protected void None.OnRowUpdating(RowUpdatingEventArgs value None)
protected void None.OnPreviewMouseUp(MouseButtonEventArgs e None)
HRESULT None cimwin32.Clone([out] IWbemClassObject **ppCopy)
int CALLBACK None.CompareFunc(LPARAM lParam1 None,LPARAM lParam2 None,LPARAM lParamSort None)
ULONG WINAPI iphlpapi.LookupPersistentTcpPortReservation(_In_ USHORT StartPort,_In_ USHORT NumberOfPorts,_Out_ PULONG64 Token)
BOOL WINAPI None.FaxDevSend(__in HANDLE FaxHandle,__in PFAX_SEND FaxSend,PFAX_SEND_CALLBACK FaxSendCallback None)
HANDLE WINAPI kernel32.FindFirstFile(_In_ LPCTSTR lpFileName,_Out_ LPWIN32_FIND_DATA lpFindFileData)
HANDLE WINAPI kernel32.FindFirstFileW(_In_ LPCTSTR lpFileName,_Out_ LPWIN32_FIND_DATA lpFindFileData)
HANDLE WINAPI kernel32.FindFirstFileA(_In_ LPCTSTR lpFileName,_Out_ LPWIN32_FIND_DATA lpFindFileData)
NTSTATUS None None.ZwQueryValueKey(_In_ HANDLE KeyHandle,_In_ PUNICODE_STRING ValueName,_In_ KEY_VALUE_INFORMATION_CLASS KeyValueInformationClass,_Out_opt_ PVOID KeyValueInformation,_In_ ULONG Length,_Out_ PULONG ResultLength)
BOOL WINAPI user32.DrawMenuBar(_In_ HWND hWnd)
NTSTATUS None None.LsaApCallPackageUntrusted(_In_ PLSA_CLIENT_REQUEST ClientRequest,_In_ PVOID ProtocolSubmitBuffer,_In_ PVOID ClientBufferBase,_In_ ULONG SubmitBufferLength,_Out_ PVOID *ProtocolReturnBuffer,_Out_ PULONG ReturnBufferLength,_Out_ PNTSTATUS ProtocolStatus)
HANDLE WINAPI kernel32.CreateWaitableTimerEx(_In_opt_ LPSECURITY_ATTRIBUTES lpTimerAttributes,_In_opt_ LPCTSTR lpTimerName,_In_ DWORD dwFlags,_In_ DWORD dwDesiredAccess)
HANDLE WINAPI kernel32.CreateWaitableTimerExW(_In_opt_ LPSECURITY_ATTRIBUTES lpTimerAttributes,_In_opt_ LPCTSTR lpTimerName,_In_ DWORD dwFlags,_In_ DWORD dwDesiredAccess)
HANDLE WINAPI kernel32.CreateWaitableTimerExA(_In_opt_ LPSECURITY_ATTRIBUTES lpTimerAttributes,_In_opt_ LPCTSTR lpTimerName,_In_ DWORD dwFlags,_In_ DWORD dwDesiredAccess)
NTSTATUS None None.FltReadFile(_In_ PFLT_INSTANCE InitiatingInstance,_In_ PFILE_OBJECT FileObject,_In_opt_ PLARGE_INTEGER ByteOffset,_In_ ULONG Length,_Out_ PVOID Buffer,_In_ FLT_IO_OPERATION_FLAGS Flags,_Out_opt_ PULONG BytesRead,_In_opt_ PFLT_COMPLETED_ASYNC_IO_CALLBACK CallbackRoutine,_In_opt_ PVOID CallbackContext)
HRESULT None None.LongAdd(_In_ LONG lAugend,_In_ LONG lAddend,_Out_ LONG *plResult)
HRESULT None None.EnumUndoable([out] IEnumOleUndoUnits **ppEnum)
NET_API_STATUS None netapi32.NetDfsGetInfo(_In_ LPWSTR DfsEntryPath,_In_opt_ LPWSTR ServerName,_In_opt_ LPWSTR ShareName,_In_ DWORD Level,_Out_ LPBYTE *Buffer)
HRESULT None windowscodecs.IPropertyBag2_Write_Proxy(_In_ IPropertyBag2 *THIS_PTR,_In_ ULONG cProperties,_In_ PROPBAG2 *ppropBag,_In_ VARIANT *pvarValue)
VOID None None.WlxSasNotify(_In_ HANDLE hWlx,_In_ DWORD dwSasType)
ARC_STATUS None None.HalpCopyNVRamBuffer(IN PCHAR NvDestPtr,IN PCHAR NvSrcPtr,IN ULONG Length)
HRESULT None windowscodecs.IWICPixelFormatInfo_GetChannelMask_Proxy(_In_ IWICPixelFormatInfo *THIS_PTR,_In_ UINT uiChannelIndex,_In_ UINT cbMaskBuffer,_Inout_ BYTE *pbMaskBuffer,_Out_ UINT *pcbActual)
ULONG __stdcall tdh.TdhQueryProviderFieldInformation(_In_ LPGUID pGuid,_In_ ULONGLONG EventFieldValue,_In_ EVENT_FIELD_TYPE EventFieldType,_Out_ PPROVIDER_FIELD_INFOARRAY pBuffer,_Inout_ ULONG *pBufferSize)
public void None.BeginInvokeShutdown(DispatcherPriority priority None)
BOOL WINAPI advapi32.StartService(_In_ SC_HANDLE hService,_In_ DWORD dwNumServiceArgs,_In_opt_ LPCTSTR *lpServiceArgVectors)
BOOL WINAPI advapi32.StartServiceW(_In_ SC_HANDLE hService,_In_ DWORD dwNumServiceArgs,_In_opt_ LPCTSTR *lpServiceArgVectors)
BOOL WINAPI advapi32.StartServiceA(_In_ SC_HANDLE hService,_In_ DWORD dwNumServiceArgs,_In_opt_ LPCTSTR *lpServiceArgVectors)
HRESULT STDAPI srpapi.SrpSetTokenEnterpriseId(_In_ HANDLE tokenHandle,_In_opt_ PCWSTR enterpriseId)
HRESULT None None.GetApplications([out None None,retval] IAppxManifestApplicationsEnumerator **applications)
HRESULT STDAPI srpapi.SrpEnablePermissiveModeFileEncryption(_In_opt_ PCWSTR enterpriseId)
ULONG None advapi32.EventSetInformation(_In_ REGHANDLE RegHandle,_In_ EVENT_INFO_CLASS InformationClass,_In_ PVOID EventInformation,_In_ ULONG InformationLength)
HRESULT None None.GetStorageGlobals([out] IWMDMStorageGlobals **ppStorageGlobals)
HANDLE None kernel32.CreateRemoteThreadEx(_In_ HANDLE hProcess,_In_opt_ LPSECURITY_ATTRIBUTES lpThreadAttributes,_In_ SIZE_T dwStackSize,_In_ LPTHREAD_START_ROUTINE lpStartAddress,_In_opt_ LPVOID lpParameter,_In_ DWORD dwCreationFlags,_In_opt_ LPPROC_THREAD_ATTRIBUTE_LIST lpAttributeList,_Out_opt_ LPDWORD lpThreadId)
SECURITY_STATUS SEC_Entry secur32.MakeSignature(_In_ PCtxtHandle phContext,_In_ ULONG fQOP,_Inout_ PSecBufferDesc pMessage,_In_ ULONG MessageSeqNo)
BOOL None wtsapi32.WTSVirtualChannelQuery(_In_ HANDLE hChannelHandle,_In_ WTS_VIRTUAL_CLASS WtsVirtualClass,_Out_ PVOID *ppBuffer,_Out_ DWORD *pBytesReturned)
WINOLEAPI None ole32.PropVariantClear(_In_ PROPVARIANT *pvar)
BOOL WINAPI clfsw32.ReadPreviousLogRestartArea(_In_ PVOID pvReadContext,_Out_ PVOID *ppvRestartBuffer,_Out_ PULONG pcbRestartBuffer,_Out_ PCLFS_LSN plsnRestart,_Inout_opt_ LPOVERLAPPED pOverlapped)
BOOL WINAPI magnification.MagSetWindowTransform(_In_ HWND hwnd,_Out_ PMAGTRANSFORM pTransform)
BOOL WINAPI kernel32.IsProcessorFeaturePresent(_In_ DWORD ProcessorFeature)
NTSTATUS None None.IoSetCompletionRoutineEx(_In_ PDEVICE_OBJECT DeviceObject,_In_ PIRP Irp,_In_ PIO_COMPLETION_ROUTINE CompletionRoutine,_In_opt_ PVOID Context,_In_ BOOLEAN InvokeOnSuccess,_In_ BOOLEAN InvokeOnError,_In_ BOOLEAN InvokeOnCancel)
HRESULT None shell32.SHQueryUserNotificationState(_Out_ QUERY_USER_NOTIFICATION_STATE *pquns)
UINT None msi.MsiEnumComponentQualifiers(_In_ LPTSTR szComponent,_In_ DWORD iIndex,_Out_ LPTSTR lpQualifierBuf,_Inout_ DWORD *pcchQualifierBuf,_Out_ LPTSTR lpApplicationDataBuf,_Inout_ DWORD *pcchApplicationDataBuf)
UINT None msi.MsiEnumComponentQualifiersW(_In_ LPTSTR szComponent,_In_ DWORD iIndex,_Out_ LPTSTR lpQualifierBuf,_Inout_ DWORD *pcchQualifierBuf,_Out_ LPTSTR lpApplicationDataBuf,_Inout_ DWORD *pcchApplicationDataBuf)
UINT None msi.MsiEnumComponentQualifiersA(_In_ LPTSTR szComponent,_In_ DWORD iIndex,_Out_ LPTSTR lpQualifierBuf,_Inout_ DWORD *pcchQualifierBuf,_Out_ LPTSTR lpApplicationDataBuf,_Inout_ DWORD *pcchApplicationDataBuf)
MSICONDITION None msi.MsiDatabaseIsTablePersistent(_In_ MSIHANDLE hDatabase,_In_ LPCTSTR szTableName)
MSICONDITION None msi.MsiDatabaseIsTablePersistentW(_In_ MSIHANDLE hDatabase,_In_ LPCTSTR szTableName)
MSICONDITION None msi.MsiDatabaseIsTablePersistentA(_In_ MSIHANDLE hDatabase,_In_ LPCTSTR szTableName)
NTSTATUS None advapi32.LsaFreeMemory(_In_ PVOID Buffer)
NET_API_STATUS None netapi32.NetFileGetInfo(_In_ LMSTR servername,_In_ DWORD fileid,_In_ DWORD level,_Out_ LPBYTE *bufptr)
HRESULT None None.GetSourceUri([out None None,retval] IOpcUri **sourceUri)
BOOL WINAPI clfsw32.FlushLogBuffers(_In_ PVOID pvMarshal,_Inout_opt_ LPOVERLAPPED pOverlapped)
HRESULT None shlwapi.IStream_Read(_In_ IStream *pstm,_Out_ VOID *pv,_In_ ULONG cb)
HRESULT None wsdapi.GetAlias([out] GUID *pAlias)
HRESULT None None.get_validateOnLoad(VARIANT_BOOL *validate None)
DWORD None userenv.GetAppliedGPOList(_In_ DWORD dwFlags,_In_ LPCTSTR pMachineName,_In_ PSID pSidUser,_In_ GUID *pGuidExtension,_Out_ PGROUP_POLICY_OBJECT *ppGPOList)
DWORD None userenv.GetAppliedGPOListW(_In_ DWORD dwFlags,_In_ LPCTSTR pMachineName,_In_ PSID pSidUser,_In_ GUID *pGuidExtension,_Out_ PGROUP_POLICY_OBJECT *ppGPOList)
DWORD None userenv.GetAppliedGPOListA(_In_ DWORD dwFlags,_In_ LPCTSTR pMachineName,_In_ PSID pSidUser,_In_ GUID *pGuidExtension,_Out_ PGROUP_POLICY_OBJECT *ppGPOList)
ULONG WINAPI iphlpapi.ResolveNeighbor(_In_ SOCKADDR *NetworkAddress,_Out_ PVOID PhysicalAddress,_Inout_ PULONG PhysicalAddressLength)
NTSTATUS WINAPI ncrypt.NCryptStreamOpenToUnprotectEx(_In_ NCRYPT_PROTECT_STREAM_INFO_EX pStreamInfo,DWORD dwFlags None,_In_opt_ HWND hWnd,_Out_ NCRYPT_STREAM_HANDLE phStream)
HRESULT None None.getElementsByTagName(BSTR tagName None,IXMLDOMNodeList **resultList None)
BOOL WINAPI dbghelp.SymSetSearchPath(_In_ HANDLE hProcess,_In_opt_ PCTSTR SearchPath)
BOOL WINAPI dbghelp.SymSetSearchPathW(_In_ HANDLE hProcess,_In_opt_ PCTSTR SearchPath)
BOOL WINAPI dbghelp.SymSetSearchPath(_In_ HANDLE hProcess,_In_opt_ PCTSTR SearchPath)
HRESULT None None.FeedMoved(LPCWSTR pszPath None,LPCWSTR pszOldPath None)
NETIOAPI_API None iphlpapi.GetAnycastIpAddressEntry(_Inout_ PMIB_ANYCASTIPADDRESS_ROW Row)
protected void None.OnGotMouseCapture(MouseEventArgs e None)
WINOLEAPI None ole32.GetConvertStg(_In_ IStorage *pStg)
HRESULT WINAPI webservices.WsCreateFaultFromError(_In_ WS_ERROR* error,_In_ HRESULT errorCode,_In_ WS_FAULT_DISCLOSURE disclosure,_In_ WS_HEAP* heap,_Out_ WS_FAULT* fault)
HENHMETAFILE None gdi32.CopyEnhMetaFile(_In_ HENHMETAFILE hemfSrc,_In_ LPCTSTR lpszFile)
HENHMETAFILE None gdi32.CopyEnhMetaFileW(_In_ HENHMETAFILE hemfSrc,_In_ LPCTSTR lpszFile)
HENHMETAFILE None gdi32.CopyEnhMetaFileA(_In_ HENHMETAFILE hemfSrc,_In_ LPCTSTR lpszFile)
DWORD APIENTRY None.NPPasswordChangeNotify(_In_ LPCWSTR lpAuthentInfoType,_In_ LPVOID lpAuthentInfo,_In_ LPCWSTR lpPreviousAuthentInfoType,_In_ LPVOID lpPreviousAuthentInfo,_In_ LPWSTR lpStationName,_In_ LPVOID StationHandle,_In_ DWORD dwChangeInfo)
HRESULT None None.DeleteFolder(BSTR folderPath None)
HRESULT None None.GetLanguage([out None None,retval] LPWSTR *language)
BYTE None None.LOBYTE(WORD wValue None)
HRESULT None shell32.GetCommandString(UINT_PTR idCmd None,UINT uFlags None,UINT *pwReserved None,LPSTR pszName None,UINT cchMax None)
DWORD None None.GetNPPTriggerFromBlob(HBLOB hBlob None,LPTRIGGER pTrigger None,HBLOB hErrorBlob None)
HANDLE WINAPI kernel32.OpenFileMapping(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpName)
HANDLE WINAPI kernel32.OpenFileMappingW(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpName)
HANDLE WINAPI kernel32.OpenFileMappingA(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpName)
BOOL WINAPI user32.RegisterRawInputDevices(_In_ PCRAWINPUTDEVICE pRawInputDevices,_In_ UINT uiNumDevices,_In_ UINT cbSize)
HRESULT None prntvpt.GetPrintCapabilitiesThunk2(_In_ HPTPROVIDER hProvider,_In_ BYTE *pPrintTicket,_In_ INT cbPrintTicket,_Out_ BYTE **ppbPrintCapabilities,_Out_ INT *pcbPrintCapabilitiesLength,_Out_opt_ BSTR *pbstrErrorMessage)
LRESULT CALLBACK None.WindowProc(HWND hwnd None,UINT uMsg None,WPARAM wParam None,LPARAM lParam None)
BOOL WINAPI kernel32.EmptyWorkingSet(_In_ HANDLE hProcess)
HRESULT None None.get_stylesheet(IXMLDOMNode** stylesheet None)
public ErrorWarning None.AddError(UInt32 hresult None,String message None)
BOOLEAN None None.KeInsertByKeyDeviceQueue(_Inout_ PKDEVICE_QUEUE DeviceQueue,_Inout_ PKDEVICE_QUEUE_ENTRY DeviceQueueEntry,_In_ ULONG SortKey)
HRESULT None msdrm.DRMAcquireAdvisories(_In_ DRMHSESSION hLicenseStorage,_In_ PWSTR wszLicense,_In_opt_ PWSTR wszURL,_In_ VOID *pvContext)
protected void None.RemoveVisualChild(Visual child None)
DWORD WINAPI winhttp.WinHttpWebSocketShutdown(_In_ HINTERNET hWebSocket,_In_ USHORT usStatus,_In_opt_ PVOID pvReason,_In_ DWORD dwReasonLength)
UINT None msi.MsiApplyPatch(_In_ LPCTSTR szPatchPackage,_In_ LPCTSTR szInstallPackage,_In_ INSTALLTYPE eInstallType,_In_ LPCTSTR szCommandLine)
UINT None msi.MsiApplyPatchW(_In_ LPCTSTR szPatchPackage,_In_ LPCTSTR szInstallPackage,_In_ INSTALLTYPE eInstallType,_In_ LPCTSTR szCommandLine)
UINT None msi.MsiApplyPatchA(_In_ LPCTSTR szPatchPackage,_In_ LPCTSTR szInstallPackage,_In_ INSTALLTYPE eInstallType,_In_ LPCTSTR szCommandLine)
RPC_STATUS RPC_ENTRY rpcrt4.RpcMgmtSetAuthorizationFn(RPC_MGMT_AUTHORIZATION_FN AuthorizationFn None)
PTSTR None shlwapi.StrRStrI(_In_ PTSTR pszSource,_In_opt_ PCTSTR pszLast,_In_ PCTSTR pszSrch)
PTSTR None shlwapi.StrRStrIW(_In_ PTSTR pszSource,_In_opt_ PCTSTR pszLast,_In_ PCTSTR pszSrch)
PTSTR None shlwapi.StrRStrIA(_In_ PTSTR pszSource,_In_opt_ PCTSTR pszLast,_In_ PCTSTR pszSrch)
BOOL WINAPI wevtapi.EvtNextChannelPath(_In_ EVT_HANDLE ChannelEnum,_In_ DWORD ChannelPathBufferSize,_In_ LPWSTR ChannelPathBuffer,_Out_ PDWORD ChannelPathBufferUsed)
public XmlReadMode None.ReadXml(XmlReader reader None)
BOOL WINAPI kernel32.QueryPerformanceCounter(_Out_ LARGE_INTEGER *lpPerformanceCount)
BOOL None shlwapi.ChrCmpI(_In_ TCHAR w1,_In_ TCHAR w2)
BOOL None shlwapi.ChrCmpIW(_In_ TCHAR w1,_In_ TCHAR w2)
BOOL None shlwapi.ChrCmpIA(_In_ TCHAR w1,_In_ TCHAR w2)
DWORD WINAPI kernel32.GetDynamicTimeZoneInformation(_Out_ PDYNAMIC_TIME_ZONE_INFORMATION pTimeZoneInformation)
NTSTATUS None None.FltGetEcpListFromCallbackData(_In_ PFLT_FILTER Filter,_In_ PFLT_CALLBACK_DATA Data,_Out_ PECP_LIST *EcpList)
BOOL WINAPI advapi32.IsValidAcl(_In_ PACL pAcl)
UINT None msi.MsiViewGetColumnInfo(_In_ MSIHANDLE hView,_In_ MSICOLINFO eColumnInfo,_Out_ MSIHANDLE *phRecord)
NTSTATUS WINAPI netapi32.NetRemoveServiceAccount(_In_opt_ LPWSTR ServerName,_In_ LPWSTR AccountName,_In_ DWORD Flags)
BOOL WINAPI wevtapi.EvtNext(_In_ EVT_HANDLE ResultSet,_In_ DWORD EventArraySize,_In_ EVT_HANDLE* EventArray,_In_ DWORD Timeout,_In_ DWORD Flags,_Out_ PDWORD Returned)
BOOL WINAPI advapi32.CryptHashSessionKey(_In_ HCRYPTHASH hHash,_In_ HCRYPTKEY hKey,_In_ DWORD dwFlags)
uint32 None cscobj.SuspendRoot([in] string Path,[in] boolean Suspend)
HRESULT None None.get_ownerTemplate(IXSLTemplate** ppTemplate None)
BOOL WINAPI kernel32.EnumResourceNamesEx(_In_opt_ HMODULE hModule,_In_ LPCTSTR lpszType,_In_ ENUMRESNAMEPROC lpEnumFunc,_In_ LONG_PTR lParam,_In_ DWORD dwFlags,_In_ LANGID LangId)
BOOL WINAPI kernel32.EnumResourceNamesExW(_In_opt_ HMODULE hModule,_In_ LPCTSTR lpszType,_In_ ENUMRESNAMEPROC lpEnumFunc,_In_ LONG_PTR lParam,_In_ DWORD dwFlags,_In_ LANGID LangId)
BOOL WINAPI kernel32.EnumResourceNamesExA(_In_opt_ HMODULE hModule,_In_ LPCTSTR lpszType,_In_ ENUMRESNAMEPROC lpEnumFunc,_In_ LONG_PTR lParam,_In_ DWORD dwFlags,_In_ LANGID LangId)
protected void None.Merge(PropertyMetadata baseMetadata None,DependencyProperty dp None)
BOOL WINAPI user32.SetDialogResizeBehavior(HWND hwnd None,DIALOG_CONTROL_DPI_CHANGE_BEHAVIORS mask None,DIALOG_CONTROL_DPI_CHANGE_BEHAVIORS values None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcErrorGetNextRecord(_In_ RPC_ERROR_ENUM_HANDLE *EnumHandle,_In_ BOOL CopyStrings,_Out_ RPC_EXTENDED_ERROR_INFO *ErrorInfo)
HRESULT None None.setTimeouts(long resolveTimeout None,long connectTimeout None,long sendTimeout None,long receiveTimeout None)
DWORD None rtm.MgmGroupEnumerationStart(_In_ HANDLE hProtocol,_In_ MGM_ENUM_TYPES metEnumType,_Out_ HANDLE *phEnumHandle)
HRESULT None None.GetDepthStencilSurface([out None None,retval] IDirect3DSurface9 **ppZStencilSurface)
SECURITY_STATUS SEC_Entry secur32.RevertSecurityContext(_In_ PCtxtHandle phContext)
public void None.SetResourceReference(DependencyProperty dp None,Object name None)
VOID NTAPI ntdll.RtlDeleteGrowableFunctionTable(_In_ PVOID DynamicTable)
BOOL None kernel32.QueryIdleProcessorCycleTimeEx(_In_ USHORT Group,_Inout_ PULONG BufferLength,_Out_ PULONG64 ProcessorIdleCycleTime)
DWORD APIENTRY mprapi.MprAdminConnectionGetInfoEx(_In_ RAS_SERVER_HANDLE hRasServer,_In_ HANDLE hConnection,_Out_ PRAS_CONNECTION_EX pRasConnection)
void None None.Rollback(Enlistment enlistment None)
uint32 None wvrcimprov.WvrAddVolumePartnerStretchById([in] string SourceReplicationGroupName,[in] string TargetReplicationGroupName,[in] string ReplicaSetId[])
void None None.InterlockedAnd(in UINT dest,in UINT value,out UINT original_value)
HRESULT None prntvpt.PTGetPrintCapabilities(_In_ HPTPROVIDER hProvider,_In_ IStream *pPrintTicket,IStream *pCapabilities None,_Out_ BSTR *pbstrErrorMessage)
HDESK WINAPI user32.OpenInputDesktop(_In_ DWORD dwFlags,_In_ BOOL fInherit,_In_ ACCESS_MASK dwDesiredAccess)
VOID __stdcall None.ReadFiberFunc(LPVOID lpParameter None)
HRESULT None dskquota.GetQuotaUsed([out] PLONGLONG pllUsed)
LRESULT None shlwapi.SHSendMessageBroadcast(_In_ UINT uMsg,_In_ WPARAM wParam,_In_ LPARAM lParam)
LRESULT None shlwapi.SHSendMessageBroadcastW(_In_ UINT uMsg,_In_ WPARAM wParam,_In_ LPARAM lParam)
LRESULT None shlwapi.SHSendMessageBroadcastA(_In_ UINT uMsg,_In_ WPARAM wParam,_In_ LPARAM lParam)
MI_INLINE MI_Result None.MI_Application_NewDestinationOptions(_In_ MI_Application *application,_Out_ MI_DestinationOptions *options)
BOOL CALLBACK None.SymEnumerateModulesProc64(_In_ PCTSTR ModuleName,_In_ DWORD64 BaseOfDll,_In_opt_ PVOID UserContext)
uint32 None dnsserverpsprovider.Get([in] string ComputerName,[out] DnsServerGlobalQueryBlockList cmdletOutput)
BOOL WINAPI api-ms-win-core-enclave-l1-1-0.IsEnclaveTypeSupported(_In_ DWORD flEnclaveType)
uint32 None dhcpserverpsprovider.Get([in] string Prefix[],[in] string ComputerName,[out] DhcpServerv6StatelessStore cmdletOutput[])
BOOL None ktmw32.RenameTransactionManager(_In_ LPWSTR LogFileName,_In_ LPGUID ExistingTransactionManagerGuid)
HRESULT None None.AssignPChannel(DWORD dwPChannel None,IDirectMusicPort* pPort None,DWORD dwGroup None,DWORD dwMChannel None)
ULONG None advapi32.TraceMessageVa(_In_ TRACEHANDLE SessionHandle,_In_ ULONG MessageFlags,_In_ LPGUID MessageGuid,_In_ USHORT MessageNumber,_In_ va_list MessageArgList)
ULONG None sechost.StartTrace(_Out_ PTRACEHANDLE SessionHandle,_In_ LPCTSTR SessionName,_Inout_ PEVENT_TRACE_PROPERTIES Properties)
ULONG None sechost.StartTraceW(_Out_ PTRACEHANDLE SessionHandle,_In_ LPCTSTR SessionName,_Inout_ PEVENT_TRACE_PROPERTIES Properties)
ULONG None sechost.StartTraceA(_Out_ PTRACEHANDLE SessionHandle,_In_ LPCTSTR SessionName,_Inout_ PEVENT_TRACE_PROPERTIES Properties)
HRESOURCE WINAPI clusapi.OpenClusterResource(_In_ HCLUSTER hCluster,_In_ LPCWSTR lpszResourceName)
HRESULT None None.get__NewEnum([out None None,retval] IUnknown **ppEnumVariant)
public None None.InvalidOperationException(String message None,Exception innerException None)
NTSTATUS None None.IoCreateFile(_Out_ PHANDLE FileHandle,_In_ ACCESS_MASK DesiredAccess,_In_ POBJECT_ATTRIBUTES ObjectAttributes,_Out_ PIO_STATUS_BLOCK IoStatusBlock,_In_opt_ PLARGE_INTEGER AllocationSize,_In_ ULONG FileAttributes,_In_ ULONG ShareAccess,_In_ ULONG Disposition,_In_ ULONG CreateOptions,_In_opt_ PVOID EaBuffer,_In_ ULONG EaLength,_In_ CREATE_FILE_TYPE CreateFileType,_In_opt_ PVOID InternalParameters,_In_ ULONG Options)
HRESULT None mfplat.MFCreateMediaBufferFromMediaType(_In_ IMFMediaType *pMediaType,_In_ LONGLONG llDuration,_In_ DWORD dwMinLength,_In_ DWORD dwMinAlignment,_Out_ IMFMediaBuffer **ppBuffer)
public boolean None.ShouldSerializeInlines(XamlDesignerSerializationManager manager None)
uint32 None None.SetCHAPSecret([in] string ChapSecret)
BOOL None None.GetPrinterDriver2(_In_opt_ HWND hWnd,_In_ HANDLE hPrinter,_In_opt_ LPTSTR pEnvironment,_In_ DWORD Level,_Out_ LPBYTE pDriverInfo,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded)
BOOL None None.GetPrinterDriver2W(_In_opt_ HWND hWnd,_In_ HANDLE hPrinter,_In_opt_ LPTSTR pEnvironment,_In_ DWORD Level,_Out_ LPBYTE pDriverInfo,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded)
HRESULT None sti.GetSTILaunchInformation([out] LPWSTR pwszDeviceName,DWORD pdwEventCode None,[out] LPWSTR pwszEventName)
HRESULT None azroles.get_AppNonMembers([out] VARIANT *pvarProp)
HRESULT None None.GetInputConnector([in] ULONG uiIndex,[out None None,retval] IMILBitmapEffectInputConnector **ppConnector)
UINT_PTR CALLBACK None.OFNHookProcOldStyle(_In_ HWND hdlg,_In_ UINT uiMsg,_In_ WPARAM wParam,_In_ LPARAM lParam)
HRESULT STDAPI ndfapi.NdfCreateGroupingIncident(_In_opt_ LPCWSTR CloudName,_In_opt_ LPCWSTR GroupName,_In_opt_ LPCWSTR Identity,_In_opt_ LPCWSTR Invitation,_In_opt_ SOCKET_ADDRESS_LIST *Addresses,_In_opt_ LPCWSTR appId,_Out_ NDFHANDLE *handle)
HRESULT None None.Proc3([in] short Arr[MAX_SIZE])
HRESULT None None.FreePMsg(DMUS_PMSG* pPMSG None)
BOOL CALLBACK None.EnumWindowsProc(_In_ HWND hwnd,_In_ LPARAM lParam)
RPC_STATUS RPC_ENTRY rpcrt4.RpcImpersonateClient(RPC_BINDING_HANDLE BindingHandle None)
HRESULT None ndfapi.NdfCloseIncident(_In_ NDFHANDLE handle)
HRESULT None None.SetNetworkClientAccess(BOOL bNetworkClientAccess None)
NET_API_STATUS None netapi32.NetDfsSetInfo(_In_ LPWSTR DfsEntryPath,_In_opt_ LPWSTR ServerName,_In_opt_ LPWSTR ShareName,_In_ DWORD Level,_In_ LPBYTE Buffer)
UCHAR None None.WdfUsbTargetDeviceGetNumInterfaces(_In_ WDFUSBDEVICE UsbDevice)
HRESULT None gpedit.DeleteAllGPOLinks(_In_ LPOLESTR lpContainer)
BOOL None cabinet.Decompress(_In_ DECOMPRESSOR_HANDLE DecompressorHandle,_In_ PVOID CompressedData,_In_ SIZE_T CompressedDataSize,_Out_ PVOID UncompressedBuffer,_In_ SIZE_T UncompressedBufferSize,_Out_ PSIZE_T UncompressedDataSize)
LPTOP_LEVEL_EXCEPTION_FILTER WINAPI kernel32.SetUnhandledExceptionFilter(_In_ LPTOP_LEVEL_EXCEPTION_FILTER lpTopLevelExceptionFilter)
JET_ERR JET_API None.JetBeginExternalBackup(__in JET_GRBIT grbit)
HRESULT None None.get_ProvidesNotifications([out None None,retval] BOOL *pfProvidesNotifications)
BOOL None ws2_32.WSACloseEvent(_In_ WSAEVENT hEvent)
HRESULT WINAPI iscsidsc.LoginIscsiTarget(_In_ PTCHAR TargetName,_In_ BOOLEAN IsInformationalSession,_In_opt_ PTCHAR InitiatorName,_In_opt_ ULONG InitiatorPortNumber,_In_opt_ PISCSI_TARGET_PORTAL TargetPortal,_In_opt_ ISCSI_SECURITY_FLAGS SecurityFlags,_In_opt_ PISCSI_TARGET_MAPPING Mappings,_In_opt_ PISCSI_LOGIN_OPTIONS LoginOptions,_In_opt_ ULONG KeySize,_In_opt_ PCHAR Key,_In_ BOOLEAN IsPersistent,_Out_ PISCSI_UNIQUE_SESSION_ID UniqueSessionId,_Out_ PISCSI_UNIQUE_CONNECTION_ID UniqueConnectionId)
HRESULT WINAPI iscsidsc.LoginIscsiTargetW(_In_ PTCHAR TargetName,_In_ BOOLEAN IsInformationalSession,_In_opt_ PTCHAR InitiatorName,_In_opt_ ULONG InitiatorPortNumber,_In_opt_ PISCSI_TARGET_PORTAL TargetPortal,_In_opt_ ISCSI_SECURITY_FLAGS SecurityFlags,_In_opt_ PISCSI_TARGET_MAPPING Mappings,_In_opt_ PISCSI_LOGIN_OPTIONS LoginOptions,_In_opt_ ULONG KeySize,_In_opt_ PCHAR Key,_In_ BOOLEAN IsPersistent,_Out_ PISCSI_UNIQUE_SESSION_ID UniqueSessionId,_Out_ PISCSI_UNIQUE_CONNECTION_ID UniqueConnectionId)
HRESULT WINAPI iscsidsc.LoginIscsiTargetA(_In_ PTCHAR TargetName,_In_ BOOLEAN IsInformationalSession,_In_opt_ PTCHAR InitiatorName,_In_opt_ ULONG InitiatorPortNumber,_In_opt_ PISCSI_TARGET_PORTAL TargetPortal,_In_opt_ ISCSI_SECURITY_FLAGS SecurityFlags,_In_opt_ PISCSI_TARGET_MAPPING Mappings,_In_opt_ PISCSI_LOGIN_OPTIONS LoginOptions,_In_opt_ ULONG KeySize,_In_opt_ PCHAR Key,_In_ BOOLEAN IsPersistent,_Out_ PISCSI_UNIQUE_SESSION_ID UniqueSessionId,_Out_ PISCSI_UNIQUE_CONNECTION_ID UniqueConnectionId)
public XpsThumbnail None.AddThumbnail(XpsImageType imageType None)
BOOL WINAPI advapi32.ConvertToAutoInheritPrivateObjectSecurity(_In_opt_ PSECURITY_DESCRIPTOR ParentDescriptor,_In_ PSECURITY_DESCRIPTOR CurrentSecurityDescriptor,_Out_ PSECURITY_DESCRIPTOR *NewSecurityDescriptor,_In_opt_ GUID *ObjectType,_In_ BOOLEAN IsDirectoryObject,_In_ PGENERIC_MAPPING GenericMapping)
UINT WINAPI user32.MapVirtualKey(_In_ UINT uCode,_In_ UINT uMapType)
UINT WINAPI user32.MapVirtualKeyW(_In_ UINT uCode,_In_ UINT uMapType)
UINT WINAPI user32.MapVirtualKeyA(_In_ UINT uCode,_In_ UINT uMapType)
BOOL CALLBACK None.EnumDesktopProc(_In_ LPTSTR lpszDesktop,_In_ LPARAM lParam)
void None None.Rollback(Enlistment enlistment None)
NTSTATUS WINAPI ntdll.RtlLocalTimeToSystemTime(_In_ PLARGE_INTEGER LocalTime,_Out_ PLARGE_INTEGER SystemTime)
HRESULT None None.GetOpenParentState([out] DWORD *pdwState)
static void gpsvc.RsopCreateSession([in] uint32 flags,[in] string userSid,[out] string nameSpace,[out] uint32 hResult,[out] uint32 ExtendedInfo)
ULONG None sechost.ProcessTrace(_In_ PTRACEHANDLE HandleArray,_In_ ULONG HandleCount,_In_ LPFILETIME StartTime,_In_ LPFILETIME EndTime)
public Object None.Invoke(DispatcherPriority priority None,TimeSpan timeout None,Delegate method None,Object arg None)
HRESULT None None.GetJobStatus([out None None,retval] XPS_JOB_STATUS *jobStatus)
ULONG None advapi32.TraceEvent(_In_ TRACEHANDLE SessionHandle,_In_ PEVENT_TRACE_HEADER EventTrace)
HRESULT None wmpmediasharing.get_computerHomeMediaSharingAllowedState([out] VARIANT_BOOL *sharingAllowed)
HIMAGELIST None None.TabCtrl_GetImageList(HWND hwnd None)
ULONG None sechost.EventAccessRemove(_In_ LPGUID Guid)
UINT WINAPI user32.GetRawInputData(_In_ HRAWINPUT hRawInput,_In_ UINT uiCommand,_Out_opt_ LPVOID pData,_Inout_ PUINT pcbSize,_In_ UINT cbSizeHeader)
HRESULT None None.GetTimeFormat([out None None,retval] OPC_SIGNATURE_TIME_FORMAT *timeFormat)
PVOID WINAPI api-ms-win-core-memory-l1-1-5.MapViewOfFileNuma2(_In_ HANDLE FileMappingHandle,_In_ HANDLE ProcessHandle,_In_ ULONG64 Offset,_In_opt_ PVOID BaseAddress,_In_ SIZE_T ViewSize,_In_ ULONG AllocationType,_In_ ULONG PageProtection,_In_ ULONG PreferredNode)
HRESULT None None.GetAttributes([out] DWORD *pdwAttributes,[out] _WAVEFORMATEX *pFormat)
DWORD WINAPI clusapi.ClusterResourceEnum(_In_ HRESENUM hResEnum,_In_ DWORD dwIndex,_Out_ LPDWORD lpdwType,_Out_ LPWSTR lpszName,_Inout_ LPDWORD lpcchName)
DWORD WINAPI clusapi.SetClusterGroupName(_In_ HGROUP hGroup,_In_ LPCWSTR lpszGroupName)
HRESULT None mfplat.MFLockWorkQueue(_In_ DWORD dwWorkQueue)
DWORD PXEAPI wdspxe.PxeProviderEnumNext(_In_ HANDLE hEnum,_Out_ PPXE_PROVIDER *ppProvider)
HRESULT None None.SetSearchDirectory(REFGUID rguidClass None,WCHAR* pwszPath None,BOOL fClear None)
BOOL WINAPI kernel32.VerifyVersionInfo(_In_ LPOSVERSIONINFOEX lpVersionInfo,_In_ DWORD dwTypeMask,_In_ DWORDLONG dwlConditionMask)
BOOL WINAPI kernel32.VerifyVersionInfoW(_In_ LPOSVERSIONINFOEX lpVersionInfo,_In_ DWORD dwTypeMask,_In_ DWORDLONG dwlConditionMask)
BOOL WINAPI kernel32.VerifyVersionInfoA(_In_ LPOSVERSIONINFOEX lpVersionInfo,_In_ DWORD dwTypeMask,_In_ DWORDLONG dwlConditionMask)
LONG WINAPI advapi32.RegCopyTree(_In_ HKEY hKeySrc,_In_opt_ LPCTSTR lpSubKey,_In_ HKEY hKeyDest)
LONG WINAPI advapi32.RegCopyTreeW(_In_ HKEY hKeySrc,_In_opt_ LPCTSTR lpSubKey,_In_ HKEY hKeyDest)
LONG WINAPI advapi32.RegCopyTreeA(_In_ HKEY hKeySrc,_In_opt_ LPCTSTR lpSubKey,_In_ HKEY hKeyDest)
LRESULT CALLBACK None.WndProc(HWND hwnd None,UINT msg None,WPARAM wParam None,LPARAM lParam None)
HRESULT None mf.MFCreateMPEG4MediaSink(_In_ IMFByteStream *pIByteStream,_In_ IMFMediaType *pVideoMediaType,_In_ IMFMediaType *pAudioMediaType,_Out_ IMFMediaSink **ppIMediaSink)
HRESULT None None.GetProperties([out] VDS_PROVIDER_PROP *pProviderProp)
HRESULT WINAPI kernel32.ConvertAuxiliaryCounterToPerformanceCounter(_In_ ULONGLONG ullAuxiliaryCounterValue,_Out_ PULONGLONG lpPerformanceCounterValue,_Out_opt_ PULONGLONG lpConversionError)
HRESULT None mf.MFRequireProtectedEnvironment(_In_ IMFPresentationDescriptor *pPresentationDescriptor)
NET_API_STATUS None netapi32.NetUserModalsGet(_In_opt_ LPCWSTR servername,_In_ DWORD level,_Out_ LPBYTE *bufptr)
BOOL WINAPI ktmw32.GetTransactionId(_In_ HANDLE TransactionHandle,_Out_ LPGUID TransactionId)
HANDLE None advapi32.OpenBackupEventLog(_In_ LPCTSTR lpUNCServerName,_In_ LPCTSTR lpFileName)
HANDLE None advapi32.OpenBackupEventLogW(_In_ LPCTSTR lpUNCServerName,_In_ LPCTSTR lpFileName)
HANDLE None advapi32.OpenBackupEventLogA(_In_ LPCTSTR lpUNCServerName,_In_ LPCTSTR lpFileName)
public Point None.GetPosition(IInputElement relativeTo None)
HRESULT None qmgrprxy.GetError([out] BG_ERROR_CONTEXT *pContext,[out] HRESULT *pErrorCode)
HRESULT None None.CreateSegment(IDirectMusicSegment** ppSegment None)
HRESULT None None.removeAttribute(BSTR name None)
protected void None.OnUnload(EventArgs e None)
BOOL WINAPI crypt32.CryptSIPVerifyIndirectData(_In_ SIP_SUBJECTINFO *pSubjectInfo,_In_ SIP_INDIRECT_DATA *pIndirectData)
typedef VOID iphlpapi.WINAPI(*PIO_APC_ROUTINE None None)
JET_ERR JET_API None.JetInit(__in_out_opt JET_INSTANCE* pinstance)
HRESULT WINAPI d3dcompiler_47.D3DGetInputAndOutputSignatureBlob(in LPCVOID pSrcData,in SIZE_T SrcDataSize,out ID3DBlob ppSignatureBlob)
HRESULT None None.SetMasterClock(REFGUID rguidClock None)
VOID WINAPI kernel32.GetStartupInfo(_Out_ LPSTARTUPINFO lpStartupInfo)
VOID WINAPI kernel32.GetStartupInfoW(_Out_ LPSTARTUPINFO lpStartupInfo)
VOID WINAPI kernel32.GetStartupInfoA(_Out_ LPSTARTUPINFO lpStartupInfo)
MMRESULT None msacm32.acmDriverPriority(HACMDRIVERID hadid None,DWORD dwPriority None,DWORD fdwPriority None)
HRESULT None None.GetSubject([out None None,retval] LPWSTR *subject)
MI_INLINE MI_Result None.MI_Operation_GetSession(_In_ MI_Operation *operation,_Out_ MI_Session *session)
BOOL WINAPI None.WIMSetBootImage(HANDLE hWim None,DWORD dwImageIndex None)
DWORD CALLBACK None.WIMMessageCallback(DWORD dwMessageId None,WPARAM wParam None,LPARAM lParam None,PVOID pvUserData None)
BOOL WINAPI comctl32.DPA_DeleteAllPtrs(HDPA pdpa None)
HRESULT None ole32.OleCreateLinkToFile(_In_ LPCOLESTR lpszFileName,_In_ REFIID riid,_In_ DWORD renderopt,_In_ LPFORMATETC lpFormatEtc,_In_ LPOLECLIENTSITE pClientSite,_In_ LPSTORAGE pStg,_Out_ LPVOID *ppvObj)
BOOL WINAPI api-ms-win-core-enclave-l1-1-0.LoadEnclaveData(_In_ HANDLE hProcess,_In_ LPVOID lpAddress,_In_ LPCVOID lpBuffer,_In_ SIZE_T nSize,_In_ DWORD flProtect,_In_ LPCVOID lpPageInformation,_In_ DWORD dwInfoLength,_Out_ PSIZE_T lpNumberOfBytesWritten,_Out_opt_ LPDWORD lpEnclaveError)
HRESULT None msdrm.DRMAttest(_In_ DRMHANDLE hEnablingPrincipal,_In_ PWSTR wszData,_In_ DRMATTESTTYPE eType,_Inout_ UINT *pcStrLen,_Out_ PWSTR wszAttestedBlob)
HRESULT None None.GetSigningTime([out None None,retval] LPCWSTR *signingTime)
HRESULT None None.GetCustomObjectSet([out None None,retval] IOpcSignatureCustomObjectSet **customObjectSet)
BOOL WINAPI kernel32.GetProcessPriorityBoost(_In_ HANDLE hProcess,_Out_ PBOOL pDisablePriorityBoost)
NTSTATUS None None.ZwQueryQuotaInformationFile(_In_ HANDLE FileHandle,_Out_ PIO_STATUS_BLOCK IoStatusBlock,_Out_ PVOID Buffer,_In_ ULONG Length,_In_ BOOLEAN ReturnSingleEntry,_In_opt_ PVOID SidList,_In_ ULONG SidListLength,_In_opt_ PSID StartSid,_In_ BOOLEAN RestartScan)
DIALOG_CONTROL_DPI_CHANGE_BEHAVIORS WINAPI user32.GetDialogControlDpiChangeBehavior(HWDN hWnd None)
UINT None gdi32.GetWinMetaFileBits(_In_ HENHMETAFILE hemf,_In_ UINT cbBuffer,_Out_ LPBYTE lpbBuffer,_In_ INT fnMapMode,_In_ HDC hdcRef)
public boolean None.Equals(Object obj None)
ULONG None advapi32.TraceEventInstance(_In_ TRACEHANDLE SessionHandle,_In_ PEVENT_INSTANCE_HEADER EventTrace,_In_ PEVENT_INSTANCE_INFO pInstInfo,_In_ PEVENT_INSTANCE_INFO pParentInstInfo)
HRESULT None None.CreateSoundBuffer(LPCDSBUFFERDESC pcDSBufferDesc None,LPDIRECTSOUNDBUFFER * ppDSBuffer,LPUNKNOWN pUnkOuter None)
HRESULT None None.createEntityReference(BSTR name None,IXMLDOMEntityReference **entityRef None)
BOOL None None.Button_SetTextMargin(HWND hwnd None,RECT *pmargin None)
HRESULT None None.SetOrientation(D3DVALUE xFront None,D3DVALUE yFront None,D3DVALUE zFront None,D3DVALUE xTop None,D3DVALUE yTop None,D3DVALUE zTop None,DWORD dwApply None)
LRESULT WINAPI user32.SendMessageTimeout(_In_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam,_In_ UINT fuFlags,_In_ UINT uTimeout,_Out_opt_ PDWORD_PTR lpdwResult)
LRESULT WINAPI user32.SendMessageTimeoutW(_In_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam,_In_ UINT fuFlags,_In_ UINT uTimeout,_Out_opt_ PDWORD_PTR lpdwResult)
LRESULT WINAPI user32.SendMessageTimeoutA(_In_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam,_In_ UINT fuFlags,_In_ UINT uTimeout,_Out_opt_ PDWORD_PTR lpdwResult)
HRESULT None azroles.get_AppMembers([out] VARIANT *pvarProp)
HRESULT None windowscodecs.CreateStream([out] IWICStream **ppIWICStream)
NET_API_STATUS None netapi32.NetUserModalsSet(_In_ LPCWSTR servername,_In_ DWORD level,_In_ LPBYTE buf,_Out_ LPDWORD parm_err)
DWORD WINAPI wevtapi.EvtGetExtendedStatus(_In_ DWORD BufferSize,_In_ LPWSTR Buffer,_Out_ PDWORD BufferUsed)
ULONG None None.IsReparseTagMicrosoft(_In_ ULONG _tag)
UINT None msi.MsiDatabaseOpenView(_In_ MSIHANDLE hDatabase,_In_ LPCTSTR szQuery,_Out_ MSIHANDLE *phView)
UINT None msi.MsiDatabaseOpenViewW(_In_ MSIHANDLE hDatabase,_In_ LPCTSTR szQuery,_Out_ MSIHANDLE *phView)
UINT None msi.MsiDatabaseOpenViewA(_In_ MSIHANDLE hDatabase,_In_ LPCTSTR szQuery,_Out_ MSIHANDLE *phView)
UINT None msi.MsiSourceListEnumMediaDisks(_In_ LPCTSTR szProductCodeOrPatchCode,_In_opt_ LPCTSTR szUserSID,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD dwOptions,_In_ DWORD dwIndex,_Out_opt_ LPWORD pdwDiskId,_Out_opt_ LPTSTR szVolumeLabel,_Inout_opt_ LPDWORD pcchVolumeLabel,_Out_opt_ LPTSTR szDiskPrompt,_Inout_opt_ LPDWORD pcchDiskPrompt)
UINT None msi.MsiSourceListEnumMediaDisksW(_In_ LPCTSTR szProductCodeOrPatchCode,_In_opt_ LPCTSTR szUserSID,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD dwOptions,_In_ DWORD dwIndex,_Out_opt_ LPWORD pdwDiskId,_Out_opt_ LPTSTR szVolumeLabel,_Inout_opt_ LPDWORD pcchVolumeLabel,_Out_opt_ LPTSTR szDiskPrompt,_Inout_opt_ LPDWORD pcchDiskPrompt)
UINT None msi.MsiSourceListEnumMediaDisksA(_In_ LPCTSTR szProductCodeOrPatchCode,_In_opt_ LPCTSTR szUserSID,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD dwOptions,_In_ DWORD dwIndex,_Out_opt_ LPWORD pdwDiskId,_Out_opt_ LPTSTR szVolumeLabel,_Inout_opt_ LPDWORD pcchVolumeLabel,_Out_opt_ LPTSTR szDiskPrompt,_Inout_opt_ LPDWORD pcchDiskPrompt)
NTSTATUS None advapi32.LsaLookupSids(_In_ LSA_HANDLE PolicyHandle,_In_ ULONG Count,_In_ PSID *Sids,_Out_ PLSA_REFERENCED_DOMAIN_LIST *ReferencedDomains,_Out_ PLSA_TRANSLATED_NAME *Names)
BOOL WINAPI crypt32.CertResyncCertificateChainEngine(_In_opt_ HCERTCHAINENGINE hChainEngine)
NTSTATUS None None.WdfDeviceStopIdle(_In_ WDFDEVICE Device,_In_ BOOLEAN WaitForD0)
public PropertyMetadata None.GetMetadata(DependencyObjectType dependencyObjectType None)
BOOL WINAPI clfsw32.DeleteLogByHandle(_In_ HANDLE hLog)
HRESULT None shell32.SetDescription(LPCTSTR pszName None)
public void None.SetApartmentState(ApartmentState state None)
HRESULT None rtworkq.RtwqCancelWorkItem(_In_ RTWQWORKITEM_KEY Key)
BOOL WINAPI wevtapi.EvtSeek(_In_ EVT_HANDLE ResultSet,_In_ LONGLONG Position,_In_ EVT_HANDLE Bookmark,_In_ DWORD Timeout,_In_ DWORD Flags)
public IAsyncResult None.BeginWrite(byte[] buffer None,int offset None,int count None,AsyncCallback callback None,Object state None)
HRESULT None None.GetResponseHeader(const WCHAR *pwszHeader,WCHAR *ppwszValue None)
INT None ws2_32.WSARemoveServiceClass(_In_ LPGUID lpServiceClassId)
BOOL WINAPI kernel32.CheckTokenCapability(_In_opt_ HANDLE TokenHandle,_In_ PSID CapabilitySidToCheck,_Out_ PBOOL HasCapability)
HRESULT None None.CorBindToRuntimeEx([in] LPWSTR pwszVersion,[in] LPWSTR pwszBuildFlavor,[in] DWORD startupFlags,[in] REFCLSID rclsid,[in] REFIID riid,[out] LPVOID* ppv)
LONG WINAPI advapi32.RegReplaceKey(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_ LPCTSTR lpNewFile,_In_ LPCTSTR lpOldFile)
LONG WINAPI advapi32.RegReplaceKeyW(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_ LPCTSTR lpNewFile,_In_ LPCTSTR lpOldFile)
LONG WINAPI advapi32.RegReplaceKeyA(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_ LPCTSTR lpNewFile,_In_ LPCTSTR lpOldFile)
BOOL WINAPI kernel32.AllocateUserPhysicalPagesNuma(_In_ HANDLE hProcess,_Inout_ PULONG_PTR NumberOfPages,_Out_ PULONG_PTR PageArray,_In_ DWORD nndPreferred)
HRESULT None shell32.EnumSearches(IEnumExtraSearch **ppEnum None)
JET_ERR JET_API None.JetEndExternalBackup(void None None)
HWND WINAPI user32.GetTopWindow(_In_opt_ HWND hWnd)
VOID None None.IoSetCompletionRoutine(_In_ PIRP Irp,_In_opt_ PIO_COMPLETION_ROUTINE CompletionRoutine,_In_opt_ PVOID Context,_In_ BOOLEAN InvokeOnSuccess,_In_ BOOLEAN InvokeOnError,_In_ BOOLEAN InvokeOnCancel)
MI_INLINE MI_Result None.MI_DestinationOptions_GetEncodePortInSPN(_In_ MI_DestinationOptions *options,_Out_ MI_Boolean *encodePort)
HRESULT None None.UShortMult(_In_ USHORT usMultiplicand,_In_ USHORT usMultiplier,_Out_ USHORT *pusResult)
PCTSTR WINAPI dbghelp.SymSrvStoreFile(_In_ HANDLE hProcess,_In_opt_ PCTSTR SrvPath,_In_ PCTSTR File,_In_ DWORD Flags)
PCTSTR WINAPI dbghelp.SymSrvStoreFileW(_In_ HANDLE hProcess,_In_opt_ PCTSTR SrvPath,_In_ PCTSTR File,_In_ DWORD Flags)
PCTSTR WINAPI dbghelp.SymSrvStoreFile(_In_ HANDLE hProcess,_In_opt_ PCTSTR SrvPath,_In_ PCTSTR File,_In_ DWORD Flags)
public void None.OnDeserialization(Object sender None)
NTSTATUS None None.FltGetTunneledName(_In_ PFLT_CALLBACK_DATA CallbackData,_In_ PFLT_FILE_NAME_INFORMATION FileNameInformation,_Out_ PFLT_FILE_NAME_INFORMATION *RetTunneledFileNameInformation)
LSTATUS None shlwapi.SHEnumValue(_In_ HKEY hkey,_In_ DWORD dwIndex,LPTSTR pszValueName None,_Inout_opt_ LPDWORD pcchValueName,_Out_opt_ LPDWORD pdwType,LPVOID pvData None,_Inout_opt_ LPDWORD pcbData)
LSTATUS None shlwapi.SHEnumValueW(_In_ HKEY hkey,_In_ DWORD dwIndex,LPTSTR pszValueName None,_Inout_opt_ LPDWORD pcchValueName,_Out_opt_ LPDWORD pdwType,LPVOID pvData None,_Inout_opt_ LPDWORD pcbData)
LSTATUS None shlwapi.SHEnumValueA(_In_ HKEY hkey,_In_ DWORD dwIndex,LPTSTR pszValueName None,_Inout_opt_ LPDWORD pcchValueName,_Out_opt_ LPDWORD pdwType,LPVOID pvData None,_Inout_opt_ LPDWORD pcbData)
DWORD WINAPI resutils.ResUtilRemoveResourceServiceEnvironment(_In_ LPCWSTR pszServiceName,_In_ PLOG_EVENT_ROUTINE pfnLogEvent,_In_ RESOURCE_HANDLE hResourceHandle)
BOOL None gdi32.GetColorAdjustment(_In_ HDC hdc,_Out_ LPCOLORADJUSTMENT lpca)
HRESULT None oleaut32.VarEqv(_In_ LPVARIANT pvarLeft,_In_ LPVARIANT pvarRight,_Out_ LPVARIANT pvarResult)
uint32 None netpeerdistcim.Disable_BCDowngrading([in] string PolicyStore,[in] boolean Force)
protected Visual None.GetVisualChild(int index None)
BOOL None None.WPUPostMessage(_In_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
BOOL WINAPI authz.AuthzUnregisterCapChangeNotification(_In_ AUTHZ_CAP_CHANGE_SUBSCRIPTION_HANDLE hCapChangeSubscription)
DWORD None None.DeletePrinterData(_In_ HANDLE hPrinter,_In_ LPTSTR pValueName)
DWORD None None.DeletePrinterDataW(_In_ HANDLE hPrinter,_In_ LPTSTR pValueName)
DWORD None None.DeletePrinterDataA(_In_ HANDLE hPrinter,_In_ LPTSTR pValueName)
LONG TSPIAPI None.TSPI_phoneConfigDialog(DWORD dwDeviceID None,HWND hwndOwner None,LPCWSTR lpszDeviceClass None)
DWORD PXEAPI wdspxe.PxeProviderSetAttribute(_In_ HANDLE hProvider,_In_ PXE_PROVIDER_ATTRIBUTE Attribute,_In_ PVOID pParameterBuffer,_In_ ULONG uParamLen)
uint32 None cimwin32.GetLaunchSecurityDescriptor([out] Win32_SecurityDescriptor Descriptor)
BOOL None gdi32.GetWindowExtEx(_In_ HDC hdc,_Out_ LPSIZE lpSize)
BOOL WINAPI avrt.AvRtWaitOnThreadOrderingGroup(_In_ HANDLE Context)
HDDEDATA CALLBACK None.DDECallback(uType None None,uFmt None None,hconv None None,hsz1 None None,hsz2 None None,hdata None None,dwData1 None None,dwData2 None None)
ULONGLONG WINAPI kernel32.VerSetConditionMask(_In_ ULONGLONG dwlConditionMask,_In_ DWORD dwTypeBitMask,_In_ BYTE dwConditionMask)
HWND WINAPI user32.WindowFromPoint(_In_ POINT Point)
NET_API_STATUS None netapi32.NetRemoteComputerSupports(_In_ LPCWSTR UncServerName,_In_ DWORD OptionsWanted,_Out_ LPDWORD OptionsSupported)
INT WSPAPI ws2_32.WSAProviderCompleteAsyncCall(HANDLE hAsyncCall None,INT iRetCode None)
HRESULT WDSCLIAPI wdsclientapi.WdsCliGetDriverQueryXml(_In_opt_ PWSTR pwszWinDirPath,_Out_ PWSTR *ppwszDriverQuery)
HRESULT None None.VerifyAllDigitalSignaturesAndAuthenticateCertificates(IXpsSignatureManager *signatureManager None)
HRESULT None cscsvc.GetFileTimes([out] FILETIME *pftLastWrite,[out] FILETIME *pftChange)
HRESULT None azroles.get_DelegatedPolicyUsersName([out] VARIANT *pvarDelegatedPolicyUsers)
BOOL WINAPI advapi32.QueryServiceStatusEx(_In_ SC_HANDLE hService,_In_ SC_STATUS_TYPE InfoLevel,_Out_opt_ LPBYTE lpBuffer,_In_ DWORD cbBufSize,_Out_ LPDWORD pcbBytesNeeded)
BOOLEAN WINAPI kernel32.ClosePrivateNamespace(_In_ HANDLE Handle,_In_ ULONG Flags)
HRESULT None ole32.OleRegEnumFormatEtc(_In_ REFCLSID clsid,_In_ DWORD dwDirection,_Out_ LPENUMFORMATETC *ppenum)
HRESULT WINAPI wsdapi.WSDCreateDeviceHost2(_In_ LPCWSTR pszLocalId,_In_ IWSDXMLContext *pContext,_In_ WSD_CONFIG_PARAM *pConfigParams,_In_ DWORD dwConfigParamCount,_Out_ IWSDDeviceHost **ppDeviceHost)
HRESULT None None.GetComponentType([out] VSS_COMPONENT_TYPE *pType)
BOOL None msi.MsiGetMode(_In_ MSIHANDLE hInstall,_In_ MSIRUNMODE iRunMode)
BOOL WINAPI kernel32.DnsHostnameToComputerName(_In_ LPCTSTR Hostname,_Out_ LPTSTR ComputerName,_Inout_ LPDWORD nSize)
BOOL WINAPI kernel32.DnsHostnameToComputerNameW(_In_ LPCTSTR Hostname,_Out_ LPTSTR ComputerName,_Inout_ LPDWORD nSize)
BOOL WINAPI kernel32.DnsHostnameToComputerNameA(_In_ LPCTSTR Hostname,_Out_ LPTSTR ComputerName,_Inout_ LPDWORD nSize)
HRESULT None azroles.get_Tasks([out] IAzTasks **ppTaskCollection)
VOID None None.FltFreeExtraCreateParameter(_In_ PFLT_FILTER Filter,_In_ PVOID EcpContext)
HRESULT WINAPI ndfapi.NdfCreateDNSIncident(_In_ LPCWSTR hostname,WORD querytype None,_Out_ NDFHANDLE *handle)
HRESULT None None.GetBackupStamp([out] BSTR *pbstrBackupStamp)
void None None.MyProcedure_notify_flag(boolean __MIDL_NotifyFlag None)
HRESULT None None.get_Document([out None None,retval] IHTMLDocument2 **htmlDocument)
private void None.myButton_Click(Object sender None,EventArgs e None)
HRESULT WINAPI wsbonline.RegisterOnlineBackupWithWindowsServerBackup(_In_ WSB_OB_REGISTRATION_INFO *pOBRegistrationInfo)
DWORD64 None None.ShiftLeft128(DWORD64 LowPart None,DWORD64 HighPart None,BYTE Shift None)
HTREEITEM None None.TreeView_GetDropHilight(HWND hwndTV None)
BOOL WINAPI user32.AdjustWindowRectEx(_Inout_ LPRECT lpRect,_In_ DWORD dwStyle,_In_ BOOL bMenu,_In_ DWORD dwExStyle)
HRESULT None None.GetSigningLocale([out None None,retval] LPWSTR *place)
DWORD WINAPI user32.GetWindowThreadProcessId(_In_ HWND hWnd,_Out_opt_ LPDWORD lpdwProcessId)
NTSTATUS WINAPI ncrypt.NCryptCreateProtectionDescriptor(_In_ LPCWSTR pwszDescriptorString,_In_ DWORD dwFlags,_Out_ NCRYPT_DESCRIPTOR_HANDLE *phDescriptor)
NET_API_STATUS None netapi32.NetDfsAdd(_In_ LPWSTR DfsEntryPath,_In_ LPWSTR ServerName,_In_ LPWSTR PathName,_In_opt_ LPWSTR Comment,_In_ DWORD Flags)
BOOLEAN WINAPI kernel32.RtlDeleteFunctionTable(_In_ PRUNTIME_FUNCTION FunctionTable)
BOOL WINAPI wevtapi.EvtGetPublisherMetadataProperty(_In_ EVT_HANDLE PublisherMetadata,_In_ EVT_PUBLISHER_METADATA_PROPERTY_ID PropertyId,_In_ DWORD Flags,_In_ DWORD PublisherMetadataPropertyBufferSize,_In_ PEVT_VARIANT PublisherMetadataPropertyBuffer,_Out_ PDWORD PublisherMetadataPropertyBufferUsed)
void None None.Prepare(PreparingEnlistment preparingEnlistment None)
DWORD None iphlpapi.GetIpStatistics(_Out_ PMIB_IPSTATS pStats)
HRESULT None qmgrprxy.GetRemoteName([out] LPWSTR *ppName)
NTSTATUS WINAPI ncrypt.NCryptStreamOpenToProtect(_In_ NCRYPT_DESCRIPTOR_HANDLE hDescriptor,DWORD dwFlags None,_In_opt_ HWND hWnd,_In_ NCRYPT_PROTECT_STREAM_INFO *pStreamInfo,_Out_ NCRYPT_STREAM_HANDLE *phStream)
NET_API_STATUS None netapi32.NetShareGetInfo(_In_ LPWSTR servername,_In_ LPWSTR netname,_In_ DWORD level,_Out_ LPBYTE *bufptr)
LONG WINAPI advapi32.RegUnLoadKey(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey)
LONG WINAPI advapi32.RegUnLoadKeyW(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey)
LONG WINAPI advapi32.RegUnLoadKeyA(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey)
uint32 None wvrcimprov.WvrRemoveNetworkConstraint([in] string ReplicationGroupName,[in] string PartnerReplicationGroupName)
HRESULT None None.GetCustomObjectEnumerator([out None None,retval] IOpcSignatureCustomObjectEnumerator **customObjectEnumerator)
protected int None.ExecuteUpdate(IDictionary keys None,IDictionary values None,IDictionary oldValues None)
void None None.Rollback(Enlistment enlistment None)
HRESULT WINAPI webservices.WsReadChars(_In_ WS_XML_READER* reader,WCHAR* chars None,_In_ ULONG maxCharCount,_Out_ ULONG* actualCharCount,_In_opt_ WS_ERROR* error)
MI_INLINE MI_Result None.MI_DestinationOptions_GetMaxEnvelopeSize(_In_ MI_DestinationOptions *options,_Out_ MI_Uint32 *sizeInKB)
HWINSTA WINAPI user32.OpenWindowStation(_In_ LPTSTR lpszWinSta,_In_ BOOL fInherit,_In_ ACCESS_MASK dwDesiredAccess)
HWINSTA WINAPI user32.OpenWindowStationW(_In_ LPTSTR lpszWinSta,_In_ BOOL fInherit,_In_ ACCESS_MASK dwDesiredAccess)
HWINSTA WINAPI user32.OpenWindowStationA(_In_ LPTSTR lpszWinSta,_In_ BOOL fInherit,_In_ ACCESS_MASK dwDesiredAccess)
public Object None.Invoke(DispatcherPriority priority None,Delegate method None,Object arg None,Object[] args None)
BOOL WINAPI kernel32.GetNamedPipeHandleState(_In_ HANDLE hNamedPipe,_Out_opt_ LPDWORD lpState,_Out_opt_ LPDWORD lpCurInstances,_Out_opt_ LPDWORD lpMaxCollectionCount,_Out_opt_ LPDWORD lpCollectDataTimeout,_Out_opt_ LPTSTR lpUserName,_In_ DWORD nMaxUserNameSize)
BOOL WINAPI kernel32.GetNamedPipeHandleStateW(_In_ HANDLE hNamedPipe,_Out_opt_ LPDWORD lpState,_Out_opt_ LPDWORD lpCurInstances,_Out_opt_ LPDWORD lpMaxCollectionCount,_Out_opt_ LPDWORD lpCollectDataTimeout,_Out_opt_ LPTSTR lpUserName,_In_ DWORD nMaxUserNameSize)
BOOL WINAPI kernel32.GetNamedPipeHandleStateA(_In_ HANDLE hNamedPipe,_Out_opt_ LPDWORD lpState,_Out_opt_ LPDWORD lpCurInstances,_Out_opt_ LPDWORD lpMaxCollectionCount,_Out_opt_ LPDWORD lpCollectDataTimeout,_Out_opt_ LPTSTR lpUserName,_In_ DWORD nMaxUserNameSize)
ULONG None sechost.CloseTrace(_In_ TRACEHANDLE TraceHandle)
static void gpsvc.RsopDeleteSession([in] string nameSpace,[out] uint32 hResult)
HRESULT None None.GetSigningTimeFormat([out None None,retval] OPC_SIGNATURE_TIME_FORMAT *timeFormat)
UINT None gdi32.GetEnhMetaFileHeader(_In_ HENHMETAFILE hemf,_In_ UINT cbBuffer,_Out_ LPENHMETAHEADER lpemh)
BOOL WINAPI None.WIMUnmountImage(PWSTR pszMountPath None,PWSTR pszWimFileName None,DWORD dwImageIndex None,BOOL bCommitChanges None)
BOOL WINAPI dbghelp.SymGetSourceVarFromToken(_In_ HANDLE hProcess,_In_ PVOID Token,_In_opt_ PCTSTR Params,_In_ PCTSTR VarName,_Out_ PTSTR Value,_In_ DWORD Size)
BOOL WINAPI dbghelp.SymGetSourceVarFromTokenW(_In_ HANDLE hProcess,_In_ PVOID Token,_In_opt_ PCTSTR Params,_In_ PCTSTR VarName,_Out_ PTSTR Value,_In_ DWORD Size)
BOOL WINAPI dbghelp.SymGetSourceVarFromToken(_In_ HANDLE hProcess,_In_ PVOID Token,_In_opt_ PCTSTR Params,_In_ PCTSTR VarName,_Out_ PTSTR Value,_In_ DWORD Size)
HRESULT None oleaut32.VarCat(_In_ LPVARIANT pvarLeft,_In_ LPVARIANT pvarRight,_Out_ LPVARIANT pvarResult)
HRESULT None None.get_Handle([out] OLE_HANDLE *pHandle)
SERVICE_STATUS_HANDLE WINAPI advapi32.RegisterServiceCtrlHandler(_In_ LPCTSTR lpServiceName,_In_ LPHANDLER_FUNCTION lpHandlerProc)
SERVICE_STATUS_HANDLE WINAPI advapi32.RegisterServiceCtrlHandlerW(_In_ LPCTSTR lpServiceName,_In_ LPHANDLER_FUNCTION lpHandlerProc)
SERVICE_STATUS_HANDLE WINAPI advapi32.RegisterServiceCtrlHandlerA(_In_ LPCTSTR lpServiceName,_In_ LPHANDLER_FUNCTION lpHandlerProc)
HRESULT None oleaut32.VarIdiv(_In_ LPVARIANT pvarLeft,_In_ LPVARIANT pvarRight,_Out_ LPVARIANT pvarResult)
protected void None.OnLostStylusCapture(StylusEventArgs e None)
NTSTATUS None None.FltGetVolumeGuidName(_In_ PFLT_VOLUME Volume,_Out_ PUNICODE_STRING VolumeGuidName,_Out_opt_ PULONG BufferSizeNeeded)
HRESULT WINAPI dismapi.DismAddDriver(_In_ DismSession Session,_In_ PCWSTR DriverPath,_In_ BOOL ForceUnsigned)
public boolean None.Match(Object obj None)
SECURITY_STATUS SEC_Entry secur32.InitializeSecurityContext(_In_opt_ PCredHandle phCredential,_In_opt_ PCtxtHandle phContext,_In_ SEC_CHAR *pszTargetName,_In_ ULONG fContextReq,_In_ ULONG Reserved1,_In_ ULONG TargetDataRep,_In_opt_ PSecBufferDesc pInput,_In_ ULONG Reserved2,_Inout_opt_ PCtxtHandle phNewContext,_Inout_opt_ PSecBufferDesc pOutput,_Out_ PULONG pfContextAttr,_Out_opt_ PTimeStamp ptsExpiry)
SECURITY_STATUS SEC_Entry secur32.InitializeSecurityContextW(_In_opt_ PCredHandle phCredential,_In_opt_ PCtxtHandle phContext,_In_ SEC_CHAR *pszTargetName,_In_ ULONG fContextReq,_In_ ULONG Reserved1,_In_ ULONG TargetDataRep,_In_opt_ PSecBufferDesc pInput,_In_ ULONG Reserved2,_Inout_opt_ PCtxtHandle phNewContext,_Inout_opt_ PSecBufferDesc pOutput,_Out_ PULONG pfContextAttr,_Out_opt_ PTimeStamp ptsExpiry)
SECURITY_STATUS SEC_Entry secur32.InitializeSecurityContextA(_In_opt_ PCredHandle phCredential,_In_opt_ PCtxtHandle phContext,_In_ SEC_CHAR *pszTargetName,_In_ ULONG fContextReq,_In_ ULONG Reserved1,_In_ ULONG TargetDataRep,_In_opt_ PSecBufferDesc pInput,_In_ ULONG Reserved2,_Inout_opt_ PCtxtHandle phNewContext,_Inout_opt_ PSecBufferDesc pOutput,_Out_ PULONG pfContextAttr,_Out_opt_ PTimeStamp ptsExpiry)
HRESULT None msdrm.DRMGetProcAddress(_In_ DRMHANDLE hLibrary,_In_ PWSTR wszProcName,_Out_ FARPROC *ppfnProcAddress)
HRESULT None None.EnumAdapters(UINT Adapter None,[out] IDXGIAdapter **ppAdapter)
HRESULT None mfplat.MFGetStrideForBitmapInfoHeader(_In_ DWORD format,_In_ DWORD dwWidth,_Out_ LONG *pStride)
BOOL WINAPI ktmw32.PrepareComplete(_In_ HANDLE EnlistmentHandle,_In_ PLARGE_INTEGER TmVirtualClock)
WINOLEAPI None ole32.OleConvertIStorageToOLESTREAMEx(_In_ IStorage *pStg,_In_ CLIPFORMAT cfFormat,_In_ LONG lWidth,_In_ LONG lHeight,_In_ DWORD dwSize,_In_ STGMEDIUM pmedium,_Out_ LPOLESTREAM lpolestm)
DWORD APIENTRY None.NPLogonNotify(_In_ PLUID lpLogon,_In_ LPCWSTR lpAuthentInfoType,_In_ LPVOID lpAuthentInfo,_In_ LPCWSTR lpPreviousAuthentInfoType,_In_ LPVOID lpPreviousAuthentInfo,_In_ LPWSTR lpStationName,_In_ LPVOID StationHandle,_Out_ LPWSTR *lpLogonScript)
HRESULT None oleaut32.VarOr(_In_ LPVARIANT pvarLeft,_In_ LPVARIANT pvarRight,_Out_ LPVARIANT pvarResult)
Sub None None.startEntity(strName As String)
HRESULT None None.removeChild(IXMLDOMNode *childNode None,IXMLDOMNode **outOldChild None)
HRESULT None actxprxy.GetPath([out] BSTR *pbstrPath)
BOOL WINAPI kernel32.WaitForDebugEvent(_Out_ LPDEBUG_EVENT lpDebugEvent,_In_ DWORD dwMilliseconds)
HRESULT None oleaut32.VarUI4FromCy(_In_ CY cyIn,_Out_ ULONG *pulOut)
BOOL None None.GetAccessPermissionsForLUAServer(SECURITY_DESCRIPTOR **ppSD None)
HRESULT None propsys.PSGetNameFromPropertyKey(_In_ REFPROPERTYKEY propkey,_Out_ PWSTR *ppszCanonicalName)
HRESULT STDAPI sxs.CreateAssemblyCache(IAssemblyCache **ppAsmCache None,DWORD dwReserved None)
BOOL None None.AddMonitor(_In_ LPTSTR pName,_In_ DWORD Level,_In_ LPBYTE pMonitors)
BOOL None None.AddMonitorW(_In_ LPTSTR pName,_In_ DWORD Level,_In_ LPBYTE pMonitors)
BOOL None None.AddMonitorA(_In_ LPTSTR pName,_In_ DWORD Level,_In_ LPBYTE pMonitors)
LONG WINAPI winscard.SCardReleaseContext(_In_ SCARDCONTEXT hContext)
NTSTATUS None None.FltAllocateExtraCreateParameterList(_In_ PFLT_FILTER Filter,_In_ FSRTL_ALLOCATE_ECPLIST_FLAGS Flags,_Out_ PECP_LIST *EcpList)
NTSTATUS None None.WdfRegistryAssignUnicodeString(_In_ WDFKEY Key,_In_ PCUNICODE_STRING ValueName,_In_ PCUNICODE_STRING Value)
HRESULT None None.StringCchGetsEx(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCchGetsExW(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCchGetsExA(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
HRESULT WINAPI aclui.EditSecurityAdvanced(_In_ HWND hwndOwner,_In_ LPSECURITYINFO psi,_In_ SI_PAGE_TYPE uSIPage)
BOOL WINAPI user32.PostThreadMessage(_In_ DWORD idThread,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
BOOL WINAPI user32.PostThreadMessageW(_In_ DWORD idThread,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
BOOL WINAPI user32.PostThreadMessageA(_In_ DWORD idThread,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
HRESULT None None.GetIndexerVersion([out] DWORD *pdwMajor,[out] DWORD *pdwMinor)
BOOL None mswsock.RIOSend(_In_ RIO_RQ SocketQueue,_In_ PRIO_BUF pData,_In_ ULONG DataBufferCount,_In_ DWORD Flags,_In_ PVOID RequestContext)
NTSTATUS None None.IoCreateFileSpecifyDeviceObjectHint(_Out_ PHANDLE FileHandle,_In_ ACCESS_MASK DesiredAccess,_In_ POBJECT_ATTRIBUTES ObjectAttributes,_Out_ PIO_STATUS_BLOCK IoStatusBlock,_In_opt_ PLARGE_INTEGER AllocationSize,_In_ ULONG FileAttributes,_In_ ULONG ShareAccess,_In_ ULONG Disposition,_In_ ULONG CreateOptions,_In_opt_ PVOID EaBuffer,_In_ ULONG EaLength,_In_ CREATE_FILE_TYPE CreateFileType,_In_opt_ PVOID InternalParameters,_In_ ULONG Options,_In_opt_ PVOID DeviceObject)
BOOL WINAPI clfsw32.ReserveAndAppendLogAligned(_In_ PVOID pvMarshal,_In_opt_ PCLFS_WRITE_ENTRY rgWriteEntries,_In_ ULONG cWriteEntries,_In_ ULONG cbEntryAlignment,_In_opt_ PCLFS_LSN plsnUndoNext,_In_opt_ PCLFS_LSN plsnPrevious,_In_ ULONG cReserveRecords,_Inout_opt_ LONGLONG rgcbReservation[],_In_ ULONG fFlags,_Out_opt_ PCLFS_LSN plsn,_Inout_opt_ LPOVERLAPPED overlapped)
HRESULT None azroles.get_AppMembers([out] VARIANT *pvarProp)
NET_API_STATUS None netapi32.NetDfsAddFtRoot(_In_ LPWSTR ServerName,_In_ LPWSTR RootShare,_In_ LPWSTR FtDfsName,_In_opt_ LPWSTR Comment,_In_ DWORD Flags)
NTSTATUS None None.ZwCreateEnlistment(_Out_ PHANDLE EnlistmentHandle,_In_ ACCESS_MASK DesiredAccess,_In_ HANDLE ResourceManagerHandle,_In_ HANDLE TransactionHandle,_In_opt_ POBJECT_ATTRIBUTES ObjectAttributes,_In_opt_ ULONG CreateOptions,_In_ NOTIFICATION_MASK NotificationMask,_In_opt_ PVOID EnlistmentKey)
BOOL WINAPI kernel32.GetWsChanges(_In_ HANDLE hProcess,_Out_ PPSAPI_WS_WATCH_INFORMATION lpWatchInfo,_In_ DWORD cb)
public None None.String(char[] value None)
HRESULT None None.SendExternalTransMsg(LPCWSTR wszDestFormatName None)
HRESULT None None.GetMinimumSupportedVersion([out] DWORD *pVersion)
int None None._setmbcp(int codepage None)
BOOL None kernel32.GetFileMUIInfo(_In_ DWORD dwFlags,_In_ PCWSTR pcwszFilePath,_Inout_opt_ PFILEMUIINFO pFileMUIInfo,_Inout_ DWORD *pcbFileMUIInfo)
BOOL WINAPI wtsapi32.WTSGetListenerSecurity(_In_ HANDLE hServer,_In_ PVOID pReserved,_In_ DWORD Reserved,_In_ LPTSTR pListenerName,_In_ SECURITY_INFORMATION SecurityInformation,_Out_opt_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_ DWORD nLength,_Out_ LPDWORD lpnLengthNeeded)
BOOL WINAPI wtsapi32.WTSGetListenerSecurityW(_In_ HANDLE hServer,_In_ PVOID pReserved,_In_ DWORD Reserved,_In_ LPTSTR pListenerName,_In_ SECURITY_INFORMATION SecurityInformation,_Out_opt_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_ DWORD nLength,_Out_ LPDWORD lpnLengthNeeded)
BOOL WINAPI wtsapi32.WTSGetListenerSecurityA(_In_ HANDLE hServer,_In_ PVOID pReserved,_In_ DWORD Reserved,_In_ LPTSTR pListenerName,_In_ SECURITY_INFORMATION SecurityInformation,_Out_opt_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_ DWORD nLength,_Out_ LPDWORD lpnLengthNeeded)
BOOL None winmm.sndPlaySound(LPCTSTR lpszSound None,UINT fuSound None)
BOOL None winmm.sndPlaySoundW(LPCTSTR lpszSound None,UINT fuSound None)
BOOL None winmm.sndPlaySoundA(LPCTSTR lpszSound None,UINT fuSound None)
HRESULT None None.GetRequestId([out None None,retval] LPWSTR *requestId)
DWORD_PTR None shell32.SHGetFileInfo(_In_ LPCTSTR pszPath,DWORD dwFileAttributes None,_Inout_ SHFILEINFO *psfi,UINT cbFileInfo None,UINT uFlags None)
DWORD_PTR None shell32.SHGetFileInfoW(_In_ LPCTSTR pszPath,DWORD dwFileAttributes None,_Inout_ SHFILEINFO *psfi,UINT cbFileInfo None,UINT uFlags None)
DWORD_PTR None shell32.SHGetFileInfoA(_In_ LPCTSTR pszPath,DWORD dwFileAttributes None,_Inout_ SHFILEINFO *psfi,UINT cbFileInfo None,UINT uFlags None)
BOOL WINAPI user32.ChangeWindowMessageFilterEx(_In_ HWND hWnd,_In_ UINT message,_In_ DWORD action,_Inout_opt_ PCHANGEFILTERSTRUCT pChangeFilterStruct)
HRESULT None None.setRequestHeader(BSTR bstrHeader None,BSTR bstrValue None)
LONG None None.ScreenSaverProc(HWND hWnd None,UINT message None,WPARAM wParam None,LPARAM lParam None)
HRESULT None qmgrprxy.GetNotifyFlags([out] ULONG *pNotifyFlags)
HRESULT None None.get_UseNotificationsOnly([out None None,retval] BOOL *pfUseNotificationsOnly)
HRESULT WINAPI iscsidsc.SetIscsiIKEInfo(_In_ PTCHAR InitiatorName,_In_ ULONG PortNumber,_In_ PIKE_AUTHENTICATION_INFORMATION AuthInfo,_In_ BOOLEAN Persist)
HRESULT WINAPI iscsidsc.SetIscsiIKEInfoW(_In_ PTCHAR InitiatorName,_In_ ULONG PortNumber,_In_ PIKE_AUTHENTICATION_INFORMATION AuthInfo,_In_ BOOLEAN Persist)
HRESULT WINAPI iscsidsc.SetIscsiIKEInfoA(_In_ PTCHAR InitiatorName,_In_ ULONG PortNumber,_In_ PIKE_AUTHENTICATION_INFORMATION AuthInfo,_In_ BOOLEAN Persist)
DWORD None netapi32.DsGetDcName(_In_ LPCTSTR ComputerName,_In_ LPCTSTR DomainName,_In_ GUID *DomainGuid,_In_ LPCTSTR SiteName,_In_ ULONG Flags,_Out_ PDOMAIN_CONTROLLER_INFO *DomainControllerInfo)
DWORD None netapi32.DsGetDcNameW(_In_ LPCTSTR ComputerName,_In_ LPCTSTR DomainName,_In_ GUID *DomainGuid,_In_ LPCTSTR SiteName,_In_ ULONG Flags,_Out_ PDOMAIN_CONTROLLER_INFO *DomainControllerInfo)
DWORD None netapi32.DsGetDcNameA(_In_ LPCTSTR ComputerName,_In_ LPCTSTR DomainName,_In_ GUID *DomainGuid,_In_ LPCTSTR SiteName,_In_ ULONG Flags,_Out_ PDOMAIN_CONTROLLER_INFO *DomainControllerInfo)
HRESULT WINAPI webservices.WsReadEndAttribute(_In_ WS_XML_READER* reader,_In_opt_ WS_ERROR* error)
HRESULT None shlwapi.SHGetInverseCMAP(_Out_ BYTE *pbMap,_In_ ULONG cbMap)
HRESULT None ole32.OleGetClipboard(_Out_ LPDATAOBJECT *ppDataObj)
HRESULT STDAPI srpapi.SrpCloseThreadNetworkContext(_Inout_ HTHREAD_NETWORK_CONTEXT *threadNetworkContext)
BOOL WINAPI dbghelp.SymCleanup(_In_ HANDLE hProcess)
BOOL None None.WlxNegotiate(_In_ DWORD dwWinLogonVersion,_Out_ PDWORD pdwDllVersion)
HRESULT WDSCLIAPI wdsclientapi.WdsCliGetImageHalName(_In_ HANDLE hIfh,_Out_ PWSTR *ppwszValue)
uint32 None netpeerdistcim.Set_BCDataCacheEntryMaxAge([in] uint32 TimeDays,[in] string PolicyStore,[in] boolean Force)
HRESULT STDMETHODCALLTYPE None.Start(char* pFileName None)
BOOL WINAPI advapi32.EnumServicesStatus(_In_ SC_HANDLE hSCManager,_In_ DWORD dwServiceType,_In_ DWORD dwServiceState,_Out_opt_ LPENUM_SERVICE_STATUS lpServices,_In_ DWORD cbBufSize,_Out_ LPDWORD pcbBytesNeeded,_Out_ LPDWORD lpServicesReturned,_Inout_opt_ LPDWORD lpResumeHandle)
BOOL WINAPI advapi32.EnumServicesStatusW(_In_ SC_HANDLE hSCManager,_In_ DWORD dwServiceType,_In_ DWORD dwServiceState,_Out_opt_ LPENUM_SERVICE_STATUS lpServices,_In_ DWORD cbBufSize,_Out_ LPDWORD pcbBytesNeeded,_Out_ LPDWORD lpServicesReturned,_Inout_opt_ LPDWORD lpResumeHandle)
BOOL WINAPI advapi32.EnumServicesStatusA(_In_ SC_HANDLE hSCManager,_In_ DWORD dwServiceType,_In_ DWORD dwServiceState,_Out_opt_ LPENUM_SERVICE_STATUS lpServices,_In_ DWORD cbBufSize,_Out_ LPDWORD pcbBytesNeeded,_Out_ LPDWORD lpServicesReturned,_Inout_opt_ LPDWORD lpResumeHandle)
sint32 None storageqos.SetAttributes([in] string NewName,[in] uint64 Limit,[in] uint64 Reservation,[in] uint64 BandwidthLimit)
HKL WINAPI user32.LoadKeyboardLayout(_In_ LPCTSTR pwszKLID,_In_ UINT Flags)
HKL WINAPI user32.LoadKeyboardLayoutW(_In_ LPCTSTR pwszKLID,_In_ UINT Flags)
HKL WINAPI user32.LoadKeyboardLayoutA(_In_ LPCTSTR pwszKLID,_In_ UINT Flags)
HRESULT None wmvcore.WMCreateIndexer(_Out_ IWMIndexer **ppIndexer)
HRESULT None None.RemoveMutexes(IMFASFProfile *pProfile None)
LPTSTR WINAPI user32.CharLower(_Inout_ LPTSTR lpsz)
LPTSTR WINAPI user32.CharLowerW(_Inout_ LPTSTR lpsz)
LPTSTR WINAPI user32.CharLowerA(_Inout_ LPTSTR lpsz)
public BindingExpression None.GetBindingExpression(DependencyProperty dp None)
LRESULT WINAPI user32.CallWindowProc(_In_ WNDPROC lpPrevWndFunc,_In_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
LRESULT WINAPI user32.CallWindowProcW(_In_ WNDPROC lpPrevWndFunc,_In_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
LRESULT WINAPI user32.CallWindowProcA(_In_ WNDPROC lpPrevWndFunc,_In_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
public Object None.TryFindResource(Object resourceKey None)
DWORD WINAPI winhttp.WinHttpWebSocketSend(_In_ HINTERNET hWebSocket,_In_ WINHTTP_WEB_SOCKET_BUFFER_TYPE eBufferType,_In_ PVOID pvBuffer,_In_ DWORD dwBufferLength)
HRESULT None qmgrprxy.GetCount([out] ULONG *pCount)
HRESULT None shell32.SetHotkey(WORD wHotkey None)
HRESULT STDAPI wsdapi.WSDXMLAddChild(WSDXML_ELEMENT *pParent None,WSDXML_ELEMENT *pChild None)
BOOLEAN None None.ExAcquireSharedStarveExclusive(_Inout_ PERESOURCE Resource,_In_ BOOLEAN Wait)
BOOL WINAPI crypt32.CertDeleteCertificateFromStore(_In_ PCCERT_CONTEXT pCertContext)
HBRUSH None gdi32.CreateSolidBrush(_In_ COLORREF crColor)
BOOL WINAPI user32.DdeFreeStringHandle(_In_ DWORD idInst,_In_ HSZ hsz)
private void None.MultipointDeviceArrivalEvent(object sender None,DeviceNotifyEventArgs e None)
BOOL WINAPI comdlg32.PageSetupDlg(_Inout_ LPPAGESETUPDLG lppsd)
BOOL WINAPI comdlg32.PageSetupDlgW(_Inout_ LPPAGESETUPDLG lppsd)
BOOL WINAPI comdlg32.PageSetupDlgA(_Inout_ LPPAGESETUPDLG lppsd)
VOID WINAPI kernel32.CloseThreadpoolWait(_Inout_ PTP_WAIT pwa)
LONG WINAPI advapi32.RegCreateKeyEx(_In_ HKEY hKey,_In_ LPCTSTR lpSubKey,_Reserved_ DWORD Reserved,_In_opt_ LPTSTR lpClass,_In_ DWORD dwOptions,_In_ REGSAM samDesired,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_Out_ PHKEY phkResult,_Out_opt_ LPDWORD lpdwDisposition)
LONG WINAPI advapi32.RegCreateKeyExW(_In_ HKEY hKey,_In_ LPCTSTR lpSubKey,_Reserved_ DWORD Reserved,_In_opt_ LPTSTR lpClass,_In_ DWORD dwOptions,_In_ REGSAM samDesired,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_Out_ PHKEY phkResult,_Out_opt_ LPDWORD lpdwDisposition)
LONG WINAPI advapi32.RegCreateKeyExA(_In_ HKEY hKey,_In_ LPCTSTR lpSubKey,_Reserved_ DWORD Reserved,_In_opt_ LPTSTR lpClass,_In_ DWORD dwOptions,_In_ REGSAM samDesired,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_Out_ PHKEY phkResult,_Out_opt_ LPDWORD lpdwDisposition)
HRESULT WINAPI comdlg32.PrintDlgEx(_Inout_ LPPRINTDLGEX lppd)
HRESULT WINAPI comdlg32.PrintDlgExW(_Inout_ LPPRINTDLGEX lppd)
HRESULT WINAPI comdlg32.PrintDlgExA(_Inout_ LPPRINTDLGEX lppd)
BOOL None spoolss.OpenPrinter2(_In_ LPCTSTR pPrinterName,_Out_ LPHANDLE phPrinter,_In_ LPPRINTER_DEFAULTS pDefault,_In_ PPRINTER_OPTIONS pOptions)
BOOL None spoolss.OpenPrinter2W(_In_ LPCTSTR pPrinterName,_Out_ LPHANDLE phPrinter,_In_ LPPRINTER_DEFAULTS pDefault,_In_ PPRINTER_OPTIONS pOptions)
BOOL None spoolss.OpenPrinter2A(_In_ LPCTSTR pPrinterName,_Out_ LPHANDLE phPrinter,_In_ LPPRINTER_DEFAULTS pDefault,_In_ PPRINTER_OPTIONS pOptions)
NTSTATUS None None.ZwEnumerateTransactionObject(_In_opt_ HANDLE RootObjectHandle,_In_ KTMOBJECT_TYPE QueryType,_Inout_ PKTMOBJECT_CURSOR ObjectCursor,_In_ ULONG ObjectCursorLength,_Out_ PULONG ReturnLength)
public void None.Prepare(PreparingEnlistment preparingEnlistment None)
HRESULT None gpedit.ImportRSoPData(_In_ LPOLESTR lpNameSpace,_In_ LPOLESTR lpFileName)
HRESULT None None.GetParentFolder([out] ppShellFolder **IShellFolder,[out] ppidl *LPITEMIDLIST)
DWORD None iphlpapi.GetTcpStatisticsEx(_Out_ PMIB_TCPSTATS pStats,_In_ DWORD dwFamily)
HRESULT None None.get_AuthenticationType([out None None,retval] AUTH_TYPE *pAuthType)
void None None.GetPlayerName(char *pDatafromNet None)
LONG WINAPI advapi32.RegSetKeyValue(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_opt_ LPCTSTR lpValueName,_In_ DWORD dwType,_In_opt_ LPCVOID lpData,_In_ DWORD cbData)
LONG WINAPI advapi32.RegSetKeyValueW(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_opt_ LPCTSTR lpValueName,_In_ DWORD dwType,_In_opt_ LPCVOID lpData,_In_ DWORD cbData)
LONG WINAPI advapi32.RegSetKeyValueA(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_opt_ LPCTSTR lpValueName,_In_ DWORD dwType,_In_opt_ LPCVOID lpData,_In_ DWORD cbData)
BOOL None ole32.CoFileTimeToDosDateTime(_In_ FILETIME *lpFileTime,_Out_ LPWORD lpDosDate,_Out_ LPWORD lpDosTime)
DWORD WINAPI iphlpapi.AllocateAndGetTcpExTableFromStack(_Out_ PVOID *ppTcpTable,_In_ BOOL bOrder,_In_ HANDLE hHeap,_In_ DWORD dwFlags,_In_ DWORD dwFamily)
HRESULT None ole32.CoRegisterSurrogate(_In_ LPSURROGATE pSurrogate)
DWORD WINAPI advapi32.FreeInheritedFromArray(_In_ PINHERITED_FROM pInheritArray,_In_ USHORT AceCnt,_In_opt_ PFN_OBJECT_MGR_FUNCTS pfnArray)
void None None.InDoubt(Enlistment enlistment None)
BOOL WINAPI user32.UnregisterClass(_In_ LPCTSTR lpClassName,_In_opt_ HINSTANCE hInstance)
BOOL WINAPI user32.UnregisterClassW(_In_ LPCTSTR lpClassName,_In_opt_ HINSTANCE hInstance)
BOOL WINAPI user32.UnregisterClassA(_In_ LPCTSTR lpClassName,_In_opt_ HINSTANCE hInstance)
HRESULT None None.get_HostDepth([out] DWORD *pdwDepth)
NTSTATUS None None.FltTagFile(_In_ PFLT_INSTANCE InitiatingInstance,_In_ PFILE_OBJECT FileObject,_In_ ULONG FileTag,_In_opt_ GUID *Guid,_In_ PVOID DataBuffer,_In_ USHORT DataBufferLength)
DWORD64 CALLBACK None.TranslateAddressProc64(_In_ HANDLE hProcess,_In_ HANDLE hThread,_In_ LPADDRESS64 lpaddr)
HRESULT None srmsvc.CreateFileManagementJob([out] IFsrmFileManagementJob **fileManagementJob)
LONG WINAPI tapi32.lineUnpark(HLINE hLine None,DWORD dwAddressID None,LPHCALL lphCall None,LPCSTR lpszDestAddress None)
LONG WINAPI tapi32.lineUnparkW(HLINE hLine None,DWORD dwAddressID None,LPHCALL lphCall None,LPCSTR lpszDestAddress None)
LONG WINAPI tapi32.lineUnparkA(HLINE hLine None,DWORD dwAddressID None,LPHCALL lphCall None,LPCSTR lpszDestAddress None)
void None None.LoadViewState(Object state None)
HRESULT None windowscodecs.IWICBitmapScaler_Initialize_Proxy(_In_ IWICBitmapScaler *THIS_PTR,_In_ IWICBitmapSource *pISource,_In_ UINT uiWidth,_In_ UINT uiHeight,_In_ WICBitmapInterpolationMode mode)
float None None.ToSingle(IFormatProvider provider None)
HRESULT None windowscodecs.IWICImagingFactory_CreateComponentInfo_Proxy(_In_ IWICImagingFactory *pFactory,_In_ REFCLSID clsidComponent,_Out_ IWICComponentInfo **ppIInfo)
HRESULT None ole32.DoDragDrop(_In_ LPDATAOBJECT pDataObj,_In_ LPDROPSOURCE pDropSource,_In_ DWORD dwOKEffects,_Out_ LPDWORD pdwEffect)
uint32 None netpeerdistcim.Import_BCCachePackage([in] string Path,[in] boolean Force)
HRESULT None windowscodecs.IWICBitmapSource_GetPixelFormat_Proxy(_In_ IWICBitmapSource *THIS_PTR,_Out_ WICPixelFormatGUID *pPixelFormat)
BOOL WINAPI authz.AuthzInitializeObjectAccessAuditEvent(_In_ DWORD Flags,_In_ AUTHZ_AUDIT_EVENT_TYPE_HANDLE hAuditEventType,_In_ PWSTR szOperationType,_In_ PWSTR szObjectType,_In_ PWSTR szObjectName,_In_ PWSTR szAdditionalInfo,_Out_ PAUTHZ_AUDIT_EVENT_HANDLE phAuditEvent,_In_ DWORD dwAdditionalParamCount)
HRESULT None None.GetTimeFormat([out None None,retval] OPC_SIGNATURE_TIME_FORMAT *timeFormat)
HRESULT None msdrm.DRMGetBoundLicenseObjectCount(_In_ DRMHANDLE hQueryRoot,_In_ PWSTR wszSubObjectType,_Out_ UINT *pcSubObject)
HRESULT None msdrm.DRMActivate(_In_ DRMHSESSION hClient,_In_ UINT uFlags,_In_ UINT uLangID,_In_ DRM_ACTSERV_INFO *pActServInfo,_In_ VOID *pvContext,_In_ HWND hParentWnd)
DWORD WINAPI kernel32.GetDeviceDriverFileName(_In_ LPVOID ImageBase,_Out_ LPTSTR lpFilename,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetDeviceDriverFileNameW(_In_ LPVOID ImageBase,_Out_ LPTSTR lpFilename,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetDeviceDriverFileNameA(_In_ LPVOID ImageBase,_Out_ LPTSTR lpFilename,_In_ DWORD nSize)
BOOL WINAPI api-ms-win-core-apiquery-l1-1-0.ApiSetQueryApiSetPresence(_In_ PCUNICODE_STRING Namespace,_Out_ PBOOLEAN Present)
HRESULT None None.GetIdentity([out] VSS_ID *pidInstance,[out] VSS_ID *pidWriter,[out] BSTR *pbstrWriterName,[out] VSS_USAGE_TYPE *pUsage,[out] VSS_SOURCE_TYPE *pSource)
UINT WINAPI kernel32.GetSystemFirmwareTable(_In_ DWORD FirmwareTableProviderSignature,_In_ DWORD FirmwareTableID,_Out_ PVOID pFirmwareTableBuffer,_In_ DWORD BufferSize)
VOID None None.NdisMIndicateStatusComplete(_In_ NDIS_HANDLE MiniportAdapterHandle)
DWORD PXEAPI wdspxe.PxeProviderEnumFirst(_Out_ HANDLE *phEnum)
BOOL WINAPI kernel32.SetNamedPipeHandleState(_In_ HANDLE hNamedPipe,_In_opt_ LPDWORD lpMode,_In_opt_ LPDWORD lpMaxCollectionCount,_In_opt_ LPDWORD lpCollectDataTimeout)
HRESULT None propsys.PSFormatForDisplayAlloc(_In_ REFPROPERTYKEY key,_In_ REFPROPVARIANT propvar,_In_ PROPDESC_FORMAT_FLAGS pdfFlags,_Out_ PWSTR *ppszDisplay)
HWND WINAPI user32.SetClipboardViewer(_In_ HWND hWndNewViewer)
HANDLE None kernel32.CreateActCtx(_Inout_ PACTCTX pActCtx)
HANDLE None kernel32.CreateActCtxW(_Inout_ PACTCTX pActCtx)
HANDLE None kernel32.CreateActCtxA(_Inout_ PACTCTX pActCtx)
BOOL WINAPI user32.DdeFreeDataHandle(_In_ HDDEDATA hData)
BOOL None kernel32.Wow64GetThreadSelectorEntry(_In_ HANDLE hThread,_In_ DWORD dwSelector,_Out_ PWOW64_LDT_ENTRY lpSelectorEntry)
PLIST_ENTRY None None.RemoveHeadList(_Inout_ PLIST_ENTRY ListHead)
BOOL None None.DeletePrintProcessor(_In_ LPTSTR pName,_In_ LPTSTR pEnvironment,_In_ LPTSTR pPrintProcessorName)
BOOL None None.DeletePrintProcessorW(_In_ LPTSTR pName,_In_ LPTSTR pEnvironment,_In_ LPTSTR pPrintProcessorName)
BOOL None None.DeletePrintProcessorA(_In_ LPTSTR pName,_In_ LPTSTR pEnvironment,_In_ LPTSTR pPrintProcessorName)
HCURSOR None None.ListView_SetHotCursor(HWND hwndLV None,HCURSOR hCursor None)
HRESULT None shell32.SetWorkingDirectory(LPCTSTR pszDir None)
NET_API_STATUS None netapi32.NetUserChangePassword(_In_ LPCWSTR domainname,_In_ LPCWSTR username,_In_ LPCWSTR oldpassword,_In_ LPCWSTR newpassword)
public None None.CroppedBitmap(BitmapSource source None,Int32Rect sourceRect None)
HRESULT None mf.MFCreateWMAEncoderActivate(IMFMediaType *pMediaType None,IPropertyStore *pEncodingConfigurationProperties None,IMFActivate **ppActivate None)
BOOL WINAPI wecapi.EcInsertObjectArrayElement(_In_ EC_OBJECT_ARRAY_PROPERTY_HANDLE ObjectArray,_In_ DWORD ArrayIndex)
RPC_STATUS RPC_ENTRY rpcrt4.RpcRevertToSelfEx(RPC_BINDING_HANDLE BindingHandle None)
RIO_RQ None mswsock.RIOCreateRequestQueue(_In_ SOCKET Socket,_In_ ULONG MaxOutstandingReceive,_In_ ULONG MaxReceiveDataBuffers,_In_ ULONG MaxOutstandingSend,_In_ ULONG MaxSendDataBuffers,_In_ RIO_CQ ReceiveCQ,_In_ RIO_CQ SendCQ,_In_ PVOID SocketContext)
NTSTATUS None None.RtlSetOwnerSecurityDescriptor(_Inout_ PSECURITY_DESCRIPTOR SecurityDescriptor,_In_opt_ PSID Owner,_In_opt_ BOOLEAN OwnerDefaulted)
HWND WINAPI comdlg32.FindText(_In_ LPFINDREPLACE lpfr)
HWND WINAPI comdlg32.FindTextW(_In_ LPFINDREPLACE lpfr)
HWND WINAPI comdlg32.FindTextA(_In_ LPFINDREPLACE lpfr)
BOOL None shell32.StrRetToStrN(_Out_ LPTSTR pszOut,_In_ UINT cchOut,_Inout_ LPSTRRET pStrRet,_In_ LPCITEMIDLIST pidl)
BOOL None kernel32.EnumDateFormats(_In_ DATEFMT_ENUMPROC lpDateFmtEnumProc,_In_ LCID Locale,_In_ DWORD dwFlags)
BOOL None kernel32.EnumDateFormatsW(_In_ DATEFMT_ENUMPROC lpDateFmtEnumProc,_In_ LCID Locale,_In_ DWORD dwFlags)
BOOL None kernel32.EnumDateFormatsA(_In_ DATEFMT_ENUMPROC lpDateFmtEnumProc,_In_ LCID Locale,_In_ DWORD dwFlags)
BOOL WINAPI clfsw32.FlushLogToLsn(_In_ PVOID pvMarshalContext,_In_ PCLFS_LSN plsnFlush,_Out_opt_ PCLFS_LSN plsnLastFlushed,_Inout_opt_ LPOVERLAPPED pOverlapped)
BOOL WINAPI advapi32.CryptGetKeyParam(_In_ HCRYPTKEY hKey,_In_ DWORD dwParam,_Out_ BYTE *pbData,_Inout_ DWORD *pdwDataLen,_In_ DWORD dwFlags)
LANGID None msi.MsiGetLanguage(_In_ MSIHANDLE hInstall)
HRESULT None propsys.PSSetPropertyValue(_In_ IPropertyStore *pps,_In_ IPropertyDescription *ppd,_In_ REFPROPVARIANT propvar)
HRESULT None None.StringCchLength(_In_ LPCTSTR psz,_In_ size_t cchMax,_Out_ size_t *pcch)
HRESULT None None.StringCchLengthW(_In_ LPCTSTR psz,_In_ size_t cchMax,_Out_ size_t *pcch)
HRESULT None None.StringCchLengthA(_In_ LPCTSTR psz,_In_ size_t cchMax,_Out_ size_t *pcch)
CString None None.GetErrorMessage(HRESULT hr None)
HRESULT None None.StringCbPrintf(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszFormat,_In_ ... None)
HRESULT None None.StringCbPrintfW(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszFormat,_In_ ... None)
HRESULT None None.StringCbPrintfA(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszFormat,_In_ ... None)
BOOL WINAPI user32.SetDialogDpiChangeBehavior(HWND hDlg None,DIALOG_DPI_CHANGE_BEHAVIORS mask None,DIALOG_DPI_CHANGE_BEHAVIORS values None)
HRESULT None None.GetRelationshipType([out None None,retval] LPCWSTR *relationshipType)
HRESULT None None.get_statusText(BSTR* pbstrStatus None)
HRESULT None None.get_readyState(long* plState None)
BOOL None None.Header_GetUnicodeFormat(HWND hwnd None)
uint32 None cimwin32.GetOwner([out] string User,[out] string Domain)
DWORD CALLBACK None.MprAdminGetIpv6AddressForUser(_In_ WCHAR *lpwszUserName,_In_ WCHAR *lpwszPortName,_Inout_ in6_addr *lpdwIpv6Address,_Out_ BOOL *bNotifyRelease)
HRESULT None None.SizeTAdd(_In_ size_t cbAugend,_In_ size_t cbAddend,_Out_ size_t *pcbResult)
HRESULT WINAPI uiautomationcore.UiaRaiseNotificationEvent(_In_ IRawElementProviderSimple *provider,NotificationKind notificationKind None,NotificationProcessing notificationProcessing None,_In_opt_ BSTR displayString,_In_ BSTR activityId)
HRESULT WINAPI dismapi.DismRestoreImageHealth(_In_ DismSession Session,_In_opt_ PCWSTR *SourcePaths,_In_opt_ UINT SourcePathCount,_In_ BOOL LimitAccess,_In_opt_ HANDLE CancelEvent,_In_opt_ DISM_PROGRESS_CALLBACK Progress,_In_opt_ PVOID UserData)
protected void None.OnGotMouseCapture(MouseEventArgs e None)
HICON WINAPI shell32.DuplicateIcon(_Reserved_ HINSTANCE hInst,_In_ HICON hIcon)
HRESULT None None.LongSub(_In_ LONG lMinuend,_In_ LONG lSubtrahend,_Out_ LONG *plResult)
BOOL ACMFILTERENUMCB None.acmFilterEnumCallback(HACMDRIVERID hadid None,LPACMFILTERDETAILS pafd None,DWORD_PTR dwInstance None,DWORD fdwSupport None)
protected void None.ArrangeCore(Rect finalRect None)
HRESULT None None.UShortSub(_In_ USHORT usMinuend,_In_ USHORT usSubtrahend,_Out_ USHORT *pusResult)
DWORD None None.GetClassIDFromBlob(HBLOB hBlob None,const char* pOwnerName,const char* pCategoryName,const char* pTagName,CLSID* pClsID None)
public void None.Prepare(PreparingEnlistment preparingEnlistment None)
HANDLE WINAPI dbghelp.SymFindDebugInfoFile(_In_ HANDLE hProcess,_In_ PCTSTR FileName,_Out_ PTSTR DebugFilePath,_In_opt_ PFIND_DEBUG_FILE_CALLBACK Callback,_In_opt_ PVOID CallerData)
HANDLE WINAPI dbghelp.SymFindDebugInfoFileW(_In_ HANDLE hProcess,_In_ PCTSTR FileName,_Out_ PTSTR DebugFilePath,_In_opt_ PFIND_DEBUG_FILE_CALLBACK Callback,_In_opt_ PVOID CallerData)
HANDLE WINAPI dbghelp.SymFindDebugInfoFile(_In_ HANDLE hProcess,_In_ PCTSTR FileName,_Out_ PTSTR DebugFilePath,_In_opt_ PFIND_DEBUG_FILE_CALLBACK Callback,_In_opt_ PVOID CallerData)
NET_API_STATUS NET_API_FUNCTION netapi32.NetDfsSetClientInfo(_In_ LPWSTR DfsEntryPath,_In_opt_ LPWSTR ServerName,_In_opt_ LPWSTR ShareName,_In_ DWORD Level,_In_ LPBYTE Buffer)
LRESULT WINAPI user32.DefDlgProc(_In_ HWND hDlg,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
LRESULT WINAPI user32.DefDlgProcW(_In_ HWND hDlg,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
UINT None oledlg.OleUIChangeSource(_In_ LPOLEUICHANGESOURCE lpCS)
UINT None oledlg.OleUIChangeSourceW(_In_ LPOLEUICHANGESOURCE lpCS)
UINT None oledlg.OleUIChangeSourceA(_In_ LPOLEUICHANGESOURCE lpCS)
HRESULT None None.IsPageLoaded([out None None,retval] BOOL *isPageLoaded)
public void None.Delete(IDictionary keys None,IDictionary oldValues None,DataSourceViewOperationCallback callback None)
HRESULT None ole32.CoUnmarshalHresult(_In_ LPSTREAM pstm,_Out_ HRESULT *phresult)
protected void None.OnMouseUp(MouseButtonEventArgs e None)
BOOL WINAPI user32.GetProcessDefaultLayout(_Out_ DWORD *pdwDefaultLayout)
uint32 None netpeerdistcim.Import_BCSecretKey([in] string Filename,[in] string FilePassphrase,[in] boolean Force)
LONG WINAPI advapi32.RegDeleteValue(_In_ HKEY hKey,_In_opt_ LPCTSTR lpValueName)
LONG WINAPI advapi32.RegDeleteValueW(_In_ HKEY hKey,_In_opt_ LPCTSTR lpValueName)
LONG WINAPI advapi32.RegDeleteValueA(_In_ HKEY hKey,_In_opt_ LPCTSTR lpValueName)
BOOL None gdi32.EnumMetaFile(_In_ HDC hdc,_In_ HMETAFILE hmf,_In_ MFENUMPROC lpMetaFunc,_In_ LPARAM lParam)
HRESULT None None.GetCallerAccessRights([out] sint32 rights)
BOOL WINAPI advapi32.NotifyBootConfigStatus(_In_ BOOL BootAcceptable)
UINT None nddeapi.NDdeGetErrorString(_In_ UINT uErrorCode,_Out_ LPTSTR lpszErrorString,_In_ DWORD cBufSize)
UINT None nddeapi.NDdeGetErrorStringW(_In_ UINT uErrorCode,_Out_ LPTSTR lpszErrorString,_In_ DWORD cBufSize)
UINT None nddeapi.NDdeGetErrorStringA(_In_ UINT uErrorCode,_Out_ LPTSTR lpszErrorString,_In_ DWORD cBufSize)
ULONG None advapi32.EventUnregister(_In_ REGHANDLE RegHandle)
BOOL WINAPI comctl32.DPA_Destroy(HDPA pdpa None)
HRESULT None oleaut32.VarXor(_In_ LPVARIANT pvarLeft,_In_ LPVARIANT pvarRight,_Out_ LPVARIANT pvarResult)
BOOL WINAPI user32.GetUserObjectSecurity(_In_ HANDLE hObj,_In_ PSECURITY_INFORMATION pSIRequested,_Inout_opt_ PSECURITY_DESCRIPTOR pSD,_In_ DWORD nLength,_Out_ LPDWORD lpnLengthNeeded)
HRESULT None None.get_Attributes([out] DWORD *pDwAttr)
BOOL None None.WSPGetQOSByName(_In_ SOCKET s,_Inout_ LPWSABUF lpQOSName,_Out_ LPQOS lpQOS,_Out_ LPINT lpErrno)
NTSTATUS None None.FltGetTunneledName(_In_ PFLT_CALLBACK_DATA CallbackData,_In_ PFLT_FILE_NAME_INFORMATION FileNameInformation,_Out_ PFLT_FILE_NAME_INFORMATION *RetTunneledFileNameInformation)
protected void None.OnMouseEnter(MouseEventArgs e None)
HRESULT None None.get_maxExclusive(BSTR* maxExclusive None)
int None None.setjmp(jmp_buf env None)
protected void None.OnStylusButtonDown(StylusButtonEventArgs e None)
INSTALLSTATE None msi.MsiGetComponentPath(_In_ LPCTSTR szProduct,_In_ LPCTSTR szComponent,_Out_ LPTSTR lpPathBuf,_Inout_ DWORD *pcchBuf)
INSTALLSTATE None msi.MsiGetComponentPathW(_In_ LPCTSTR szProduct,_In_ LPCTSTR szComponent,_Out_ LPTSTR lpPathBuf,_Inout_ DWORD *pcchBuf)
INSTALLSTATE None msi.MsiGetComponentPathA(_In_ LPCTSTR szProduct,_In_ LPCTSTR szComponent,_Out_ LPTSTR lpPathBuf,_Inout_ DWORD *pcchBuf)
HRESULT None None.SetEvictionPriority(UINT EvictionPriority None)
LRESULT None None.Button_GetCheck(HWND hwndCtl None)
protected void None.OnGotStylusCapture(StylusEventArgs e None)
HRESULT WINAPI ole32.CoDecrementMTAUsage(_In_ CO_MTA_USAGE_COOKIE Cookie)
WINOLEAPI None ole32.WriteFmtUserTypeStg(_In_ IStorage *pStg,_In_ CLIPFORMAT cf,_In_ LPWSTR *lpszUserType)
HRESULT None None.UpdateRegion(IN DWORD dwRegionNumber)
PTSTR None shlwapi.StrPBrk(_In_ PTSTR psz,_In_ PCTSTR pszSet)
PTSTR None shlwapi.StrPBrkW(_In_ PTSTR psz,_In_ PCTSTR pszSet)
PTSTR None shlwapi.StrPBrkA(_In_ PTSTR psz,_In_ PCTSTR pszSet)
BOOL None None.EnumPrintProcessors(_In_ LPTSTR pName,_In_ LPTSTR pEnvironment,_In_ DWORD Level,_Out_ LPBYTE pPrintProcessorInfo,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded,_Out_ LPDWORD pcReturned)
BOOL None None.EnumPrintProcessorsW(_In_ LPTSTR pName,_In_ LPTSTR pEnvironment,_In_ DWORD Level,_Out_ LPBYTE pPrintProcessorInfo,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded,_Out_ LPDWORD pcReturned)
BOOL None None.EnumPrintProcessorsA(_In_ LPTSTR pName,_In_ LPTSTR pEnvironment,_In_ DWORD Level,_Out_ LPBYTE pPrintProcessorInfo,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded,_Out_ LPDWORD pcReturned)
public void None.WriteByte(byte value None)
HRESULT APIENTRY None.MQDeleteQueue(LPCWSTR lpwcsFormatName None)
HRESULT None activeds.SetServicePassword(LPCWSTR pwszADsPath None,LPCWSTR None None,pwszPasword None None)
unsigned int None._mbctolower(unsigned int c)
LONG WINAPI advapi32.RegSaveKeyEx(_In_ HKEY hKey,_In_ LPCTSTR lpFile,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ DWORD Flags)
LONG WINAPI advapi32.RegSaveKeyExW(_In_ HKEY hKey,_In_ LPCTSTR lpFile,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ DWORD Flags)
LONG WINAPI advapi32.RegSaveKeyExA(_In_ HKEY hKey,_In_ LPCTSTR lpFile,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ DWORD Flags)
HRESULT None None.get_Item(const VARIANT varIndex,IWMSPlayer** pVal None)
HRESULT None prntvpt.PTConvertPrintTicketToDevMode(_In_ HPTPROVIDER hProvider,_In_ IStream *pPrintTicket,EDefaultDevmodeType baseDevmodeType None,_In_ EPrintTicketScope scope,_Out_ ULONG *pcbDevmode,_Out_ PDEVMODE *ppDevmode,_Out_ BSTR *pbstrErrorMessage)
public boolean None.CanGoToPage(int pageNumber None)
HRESULT None None.get_QueryKeywordLocale([out None None,retval] LCID *plcid)
HRESULT None None.StringCchVPrintf_lEx(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_Out_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ va_list argList)
HRESULT None None.StringCchVPrintf_lExW(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_Out_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ va_list argList)
HRESULT None None.StringCchVPrintf_lExA(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_Out_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ va_list argList)
BOOL None kernel32.GetSystemPreferredUILanguages(_In_ DWORD dwFlags,_Out_ PULONG pulNumLanguages,_Out_opt_ PZZWSTR pwszLanguagesBuffer,_Inout_ PULONG pcchLanguagesBuffer)
HRESULT None None.get_prefix(BSTR *prefixString None)
HRESULT None None.StringCbVPrintf_l(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ va_list argList)
HRESULT None None.StringCbVPrintf_lW(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ va_list argList)
HRESULT None None.StringCbVPrintf_lA(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ va_list argList)
MMRESULT None winmm.midiOutSetVolume(HMIDIOUT hmo None,DWORD dwVolume None)
EVT_HANDLE WINAPI wevtapi.EvtOpenLog(_In_ EVT_HANDLE Session,_In_ LPCWSTR Path,_In_ DWORD Flags)
HRESULT None None.SetNetworkAdministrationAccess(BOOL bNetworkAdministrationAccess None)
HRESULT WINAPI iscsidsc.SendScsiReadCapacity(_In_ PISCSI_UNIQUE_SESSION_ID UniqueSessionId,_In_ ULONGLONG Lun,_Out_ PUCHAR *ScsiStatus,_Inout_ PULONG *ResponseSize,_Out_ PUCHAR ResponseBuffer,_Inout_ PULONG *SenseSize,_Out_ PUCHAR SenseBuffer)
BOOL None shell32.SHRunControlPanel(_In_ PCWSTR lpcszCmdLine,_In_opt_ HWND hwndMsgParent)
uint32 None nettcpip.Create([in] string Prefix,[in] uint32 Precedence,[in] uint32 Label,[in] string PolicyStore,[in] boolean PassThru,[out] MSFT_NetPrefixPolicy CmdletOutput[])
HRESULT None None.setProxy(SXH_PROXY_SETTING proxySetting None,VARIANT varProxyServer None,VARIANT varBypassList None)
HRESULT None dwrite.GetFontFaceReference([out] IDWriteFontFaceReference **fontFaceReference)
VOID WINAPI kernel32.RtlCaptureContext(_Out_ PCONTEXT ContextRecord)
LPTSTR WINAPI kernel32.lstrcat(_Inout_ LPTSTR lpString1,_In_ LPTSTR lpString2)
LPTSTR WINAPI kernel32.lstrcatW(_Inout_ LPTSTR lpString1,_In_ LPTSTR lpString2)
LPTSTR WINAPI kernel32.lstrcatA(_Inout_ LPTSTR lpString1,_In_ LPTSTR lpString2)
HRESULT WINAPI dismapi.DismGetPackages(_In_ DismSession Session,_Out_ DismPackage **Package,_Out_ UINT *Count)
void None None.InDoubt(Enlistment enlistment None)
BOOL WINAPI None.WIMSetImageInformation(HANDLE hImage None,PVOID pvImageInfo None,DWORD cbImageInfo None)
EXECUTION_STATE WINAPI kernel32.SetThreadExecutionState(_In_ EXECUTION_STATE esFlags)
uint32 None netpeerdistcim.Set_BCAuthentication([in] uint32 Mode,[in] boolean Force)
SC_HANDLE WINAPI advapi32.OpenService(_In_ SC_HANDLE hSCManager,_In_ LPCTSTR lpServiceName,_In_ DWORD dwDesiredAccess)
SC_HANDLE WINAPI advapi32.OpenServiceW(_In_ SC_HANDLE hSCManager,_In_ LPCTSTR lpServiceName,_In_ DWORD dwDesiredAccess)
SC_HANDLE WINAPI advapi32.OpenServiceA(_In_ SC_HANDLE hSCManager,_In_ LPCTSTR lpServiceName,_In_ DWORD dwDesiredAccess)
public boolean None.Match(Object obj None)
HRESULT None None.GetFigures([out None None,retval] IXpsOMGeometryFigureCollection **figures)
uint32 None netpeerdistcim.Enable_BCLocal([in] string PolicyStore,[in] boolean Force)
HRESULT None windowscodecs.IWICBitmapDecoder_CopyPalette_Proxy(_In_ IWICBitmapDecoder *THIS_PTR,_In_ IWICPalette *pIPalette)
HRESULT None windowscodecs.IWICMetadataQueryReader_GetMetadataByName_Proxy(_In_ IWICMetadataQueryReader *THIS_PTR,_In_ LPCWSTR wzName,_Inout_ PROPVARIANT *pvarValue)
DWORD WINAPI resutils.ResUtilStopResourceService(_In_ LPCWSTR pszServiceName)
ULONG None advapi32.CreateTraceInstanceId(_In_ HANDLE RegHandle,_Out_ PEVENT_INSTANCE_INFO pInstInfo)
LONG None None.DocumentProperties(_In_ HWND hWnd,_In_ HANDLE hPrinter,_In_ LPTSTR pDeviceName,_Out_ PDEVMODE pDevModeOutput,_In_ PDEVMODE pDevModeInput,_In_ DWORD fMode)
LONG None None.DocumentPropertiesW(_In_ HWND hWnd,_In_ HANDLE hPrinter,_In_ LPTSTR pDeviceName,_Out_ PDEVMODE pDevModeOutput,_In_ PDEVMODE pDevModeInput,_In_ DWORD fMode)
LONG None None.DocumentPropertiesA(_In_ HWND hWnd,_In_ HANDLE hPrinter,_In_ LPTSTR pDeviceName,_Out_ PDEVMODE pDevModeOutput,_In_ PDEVMODE pDevModeInput,_In_ DWORD fMode)
HRESULT None spoolss.ReportJobProcessingProgress(_In_ HANDLE printerHandle,_In_ ULONG jobId,EPrintXPSJobOperation jobOperation None,EPrintXPSJobProgress jobProgress None)
HRESULT None srmsvc.EnumReports([out] IFsrmCollection **reports)
LPSTR WINAPI None.GetPropertyText(HFRAME hFrame None,LPPROPERTYINST lpPI None,LPSTR szBuffer None,DWORD BufferSize None)
BOOL WINAPI ktmw32.SetResourceManagerCompletionPort(_In_ HANDLE ResourceManagerHandle,_In_ HANDLE IoCompletionPortHandle,_In_ ULONG_PTR CompletionKey)
MI_INLINE MI_Result None.MI_PropertySet_Destruct(_Inout_ MI_PropertySet *self)
BOOL None spoolss.FindNextPrinterChangeNotification(_In_ HANDLE hChange,_Out_opt_ PDWORD pdwChange,_In_opt_ LPVOID pPrinterNotifyOptions,_Out_opt_ LPVOID *ppPrinterNotifyInfo)
HRESULT None None.GetSignaturePartName([out None None,retval] IOpcPartUri **signaturePartName)
HRESULT None None.GetSDFromIDirectoryObject(IDirectoryObject *pObject None,PSECURITY_DESCRIPTOR *pSecurityDescriptor None)
HRESULT None msdrm.DRMCreateEnablingBitsEncryptor(_In_ DRMHANDLE hBoundLicense,_In_opt_ PWSTR wszRight,_In_ DRMHANDLE hAuxLib,_In_opt_ PWSTR wszAuxPlug,_Out_ DRMHANDLE *phEncryptor)
HRESULT WINAPI dismapi.DismCommitImage(_In_ DismSession Session,_In_ DWORD Flags,_In_opt_ HANDLE CancelEvent,_In_opt_ DISM_PROGRESS_CALLBACK Progress,_In_opt_ PVOID UserData)
HRESULT None d2d1.CreateColorContextFromFilename(PCWSTR Filename None,[out] ID2D1ColorContext **colorContext)
DWORD PXEAPI None.PxeProviderRecvRequest(_In_ HANDLE hClientRequest,_In_ PVOID pPacket,_In_ ULONG uPacketLen,_In_ PXE_ADDRESS *pLocalAddress,_In_ PXE_ADDRESS *pRemoteAddress,_Out_ PXE_BOOT_ACTION pAction,_In_ PVOID pContext)
VOID None None.NdisInitializeEvent(_Out_ PNDIS_EVENT Event)
BOOL None None.CloseSpoolFileHandle(_In_ HANDLE hPrinter,_In_ HANDLE hSpoolFile)
HRESULT None msdrm.DRMDeleteLicense(_In_ DRMHSESSION hSession,_In_ PWSTR wszLicenseId)
LONG WINAPI advapi32.RegConnectRegistry(_In_opt_ LPCTSTR lpMachineName,_In_ HKEY hKey,_Out_ PHKEY phkResult)
LONG WINAPI advapi32.RegConnectRegistryW(_In_opt_ LPCTSTR lpMachineName,_In_ HKEY hKey,_Out_ PHKEY phkResult)
LONG WINAPI advapi32.RegConnectRegistryA(_In_opt_ LPCTSTR lpMachineName,_In_ HKEY hKey,_Out_ PHKEY phkResult)
BOOL WINAPI kernel32.EnumPageFiles(_Out_ PENUM_PAGE_CALLBACK pCallbackRoutine,_In_ LPVOID lpContext)
BOOL WINAPI kernel32.EnumPageFilesW(_Out_ PENUM_PAGE_CALLBACK pCallbackRoutine,_In_ LPVOID lpContext)
BOOL WINAPI kernel32.EnumPageFilesA(_Out_ PENUM_PAGE_CALLBACK pCallbackRoutine,_In_ LPVOID lpContext)
BOOLEAN None None.KeInsertByKeyDeviceQueue(_Inout_ PKDEVICE_QUEUE DeviceQueue,_Inout_ PKDEVICE_QUEUE_ENTRY DeviceQueueEntry,_In_ ULONG SortKey)
HRESULT None srmsvc.get_Size([out] VARIANT *size)
RPC_STATUS RPC_ENTRY rpcrt4.RpcEpResolveBinding(RPC_BINDING_HANDLE Binding None,RPC_IF_HANDLE IfSpec None)
BOOL WINAPI kernel32.WaitForDebugEventEx(_Out_ LPDEBUG_EVENT lpDebugEvent,_In_ DWORD dwMilliseconds)
BOOL None comctl32.GetWindowSubclass(_In_ HWND hWnd,_In_ SUBCLASSPROC pfnSubclass,_In_ UINT_PTR uIdSubclass,_Out_ DWORD_PTR *pdwRefData)
UINT None msi.MsiConfigureFeature(_In_ LPCTSTR szProduct,_In_ LPCTSTR szFeature,_In_ INSTALLSTATE eInstallState)
UINT None msi.MsiConfigureFeatureW(_In_ LPCTSTR szProduct,_In_ LPCTSTR szFeature,_In_ INSTALLSTATE eInstallState)
UINT None msi.MsiConfigureFeatureA(_In_ LPCTSTR szProduct,_In_ LPCTSTR szFeature,_In_ INSTALLSTATE eInstallState)
HRESULT None spoolss.GetCorePrinterDrivers(_In_ LPCTSTR pszServer,_In_ LPCTSTR pszEnvironment,_In_ LPCTSTR pszzCoreDriverDependencies,_In_ DWORD cCorePrinterDrivers,_Out_ PCORE_PRINTER_DRIVER pCorePrinterDrivers)
HRESULT None spoolss.GetCorePrinterDriversW(_In_ LPCTSTR pszServer,_In_ LPCTSTR pszEnvironment,_In_ LPCTSTR pszzCoreDriverDependencies,_In_ DWORD cCorePrinterDrivers,_Out_ PCORE_PRINTER_DRIVER pCorePrinterDrivers)
HRESULT None spoolss.GetCorePrinterDriversA(_In_ LPCTSTR pszServer,_In_ LPCTSTR pszEnvironment,_In_ LPCTSTR pszzCoreDriverDependencies,_In_ DWORD cCorePrinterDrivers,_Out_ PCORE_PRINTER_DRIVER pCorePrinterDrivers)
NET_API_STATUS None netapi32.NetServerDiskEnum(_In_ LPWSTR servername,_In_ DWORD level,_Out_ LPBYTE *bufptr,_In_ DWORD prefmaxlen,_Out_ LPDWORD entriesread,_Out_ LPDWORD totalentries,_Inout_ LPDWORD resume_handle)
BOOL WINAPI user32.ShowCaret(_In_opt_ HWND hWnd)
LONG WINAPI winscard.SCardControl(_In_ SCARDHANDLE hCard,_In_ DWORD dwControlCode,_In_ LPCVOID lpInBuffer,_In_ DWORD nInBufferSize,_Out_ LPVOID lpOutBuffer,_In_ DWORD nOutBufferSize,_Out_ LPDWORD lpBytesReturned)
NTSTATUS None None.WdfRegistryCreateKey(_In_opt_ WDFKEY ParentKey,_In_ PCUNICODE_STRING KeyName,_In_ ACCESS_MASK DesiredAccess,_In_ ULONG CreateOptions,_Out_opt_ PULONG CreateDisposition,_In_opt_ PWDF_OBJECT_ATTRIBUTES KeyAttributes,_Out_ WDFKEY *Key)
HRESULT WINAPI wsdapi.WSDSetConfigurationOption(DWORD dwOption None,_In_ LPVOID pVoid,DWORD cbInBuffer None)
HRESULT WINAPI wsdapi.WSDXMLCreateContext(_Out_ IWSDXMLContext **ppContext)
HRESULT None wmvcore.WMCheckURLExtension(_In_ LPCWSTR pwszURL)
EVT_HANDLE WINAPI wevtapi.EvtOpenPublisherEnum(_In_ EVT_HANDLE Session,_In_ DWORD Flags)
BOOL WINAPI crypt32.CertSerializeCRLStoreElement(_In_ PCCRL_CONTEXT pCrlContext,_In_ DWORD dwFlags,_Out_ BYTE *pbElement,_Inout_ DWORD *pcbElement)
HRESULT None windowscodecs.CreateBitmapFlipRotator([out] IWICBitmapFlipRotator **ppIBitmapFlipRotator)
LONG WINAPI advapi32.RegDeleteKey(_In_ HKEY hKey,_In_ LPCTSTR lpSubKey)
LONG WINAPI advapi32.RegDeleteKeyW(_In_ HKEY hKey,_In_ LPCTSTR lpSubKey)
LONG WINAPI advapi32.RegDeleteKeyA(_In_ HKEY hKey,_In_ LPCTSTR lpSubKey)
HRESULT None sti.GetSTILaunchInformation([out] LPWSTR pwszDeviceName,DWORD pdwEventCode None,[out] LPWSTR pwszEventName)
HRESULT None None.get_TCPEnabled(VARIANT_BOOL* pfEnabled None)
HRESULT None oleaut32.RegisterTypeLibForUser(ITypeLib *ptlib None,_In_ OLECHAR *szFullPath,_In_opt_ OLECHAR *szHelpDir)
BOOL None advapi32.GetOldestEventLogRecord(_In_ HANDLE hEventLog,_Out_ PDWORD OldestRecord)
PCTSTR WSAAPI ws2_32.InetNtop(_In_ INT Family,_In_ PVOID pAddr,_Out_ PTSTR pStringBuf,_In_ size_t StringBufSize)
PCTSTR WSAAPI ws2_32.InetNtopW(_In_ INT Family,_In_ PVOID pAddr,_Out_ PTSTR pStringBuf,_In_ size_t StringBufSize)
PCTSTR WSAAPI ws2_32.InetNtopA or inet_ntop(_In_ INT Family,_In_ PVOID pAddr,_Out_ PTSTR pStringBuf,_In_ size_t StringBufSize)
INT None None.MonthCal_GetMonthDelta(HWND hwndMC None)
BOOL WINAPI crypt32.PFXExportCertStore(_In_ HCERTSTORE hStore,_Inout_ CRYPT_DATA_BLOB *pPFX,_In_ LPCWSTR szPassword,_In_ DWORD dwFlags)
BOOL WINAPI clfsw32.RemoveLogContainerSet(_In_ HANDLE hLog,_In_ USHORT cContainers,_In_ LPWSTR *rgwszContainerPath,_In_ BOOL fForce,_Inout_opt_ LPVOID pReserved)
VOID None None.WDF_DMA_ENABLER_CONFIG_INIT(_Out_ PWDF_DMA_ENABLER_CONFIG Config,_In_ WDF_DMA_PROFILE Profile,_In_ size_t MaximumLength)
BOOL WINAPI kernel32.GetWsChangesEx(_In_ HANDLE hProcess,_Out_ PPSAPI_WS_WATCH_INFORMATION_EX lpWatchInfoEx,_Inout_ PDWORD cb)
LONG64 None None.MultiplyExtract128(_In_ LONG64 Multiplier,_In_ LONG64 Multiplicand,_In_ BYTE Shift)
public Object None.Invoke(DispatcherPriority priority None,TimeSpan timeout None,Delegate method None,Object arg None,Object[] args None)
NTSTATUS NTAPI None.GetServiceAccountPassword(_In_ PUNICODE_STRING AccountName,_In_opt_ PUNICODE_STRING DomainName,_In_ CRED_FETCH CredFetch,_Inout_opt_ FILETIME *FileTimeExpiry,_Out_ PUNICODE_STRING CurrentPassword,_Out_ PUNICODE_STRING PreviousPassword,_Out_opt_ FILETIME *FileTimeCurrPwdValidForOutbound)
FLT_PREOP_CALLBACK_STATUS None None.FltCheckOplock(_In_ POPLOCK Oplock,_In_ PFLT_CALLBACK_DATA CallbackData,_In_opt_ PVOID Context,_In_opt_ PFLTOPLOCK_WAIT_COMPLETE_ROUTINE WaitCompletionRoutine,_In_opt_ PFLTOPLOCK_PREPOST_CALLBACKDATA_ROUTINE PrePostCallbackDataRoutine)
HRESULT None None.GetPartSet([out None None,retval] IOpcPartSet **partSet)
HRESULT None None.get_status(long* plStatus None)
HRESULT None None.get_linepos(long *linePosition None)
HRESULT None None.GetDocumentName([out None None,retval] IOpcPartUri **fixedDocumentName)
HRESULT None shell32.SHGetNameFromIDList(_In_ PCIDLIST_ABSOLUTE pidl,_In_ SIGDN sigdnName,_Out_ PWSTR *ppszName)
BOOL WINAPI kernel32.GetThreadPriorityBoost(_In_ HANDLE hThread,_Out_ PBOOL pDisablePriorityBoost)
HRESULT None None.GetTargetUri([out None None,retval] IUri **targetUri)
HRESULT WINAPI ndfapi.NdfCreateWebIncident(_In_ LPCWSTR url,_Out_ NDFHANDLE *handle)
BOOL WINAPI advapi32.QueryServiceConfig2(_In_ SC_HANDLE hService,_In_ DWORD dwInfoLevel,_Out_opt_ LPBYTE lpBuffer,_In_ DWORD cbBufSize,_Out_ LPDWORD pcbBytesNeeded)
BOOL WINAPI advapi32.QueryServiceConfig2W(_In_ SC_HANDLE hService,_In_ DWORD dwInfoLevel,_Out_opt_ LPBYTE lpBuffer,_In_ DWORD cbBufSize,_Out_ LPDWORD pcbBytesNeeded)
BOOL WINAPI advapi32.QueryServiceConfig2A(_In_ SC_HANDLE hService,_In_ DWORD dwInfoLevel,_Out_opt_ LPBYTE lpBuffer,_In_ DWORD cbBufSize,_Out_ LPDWORD pcbBytesNeeded)
SECURITY_STATUS None sspicli.SspiValidateAuthIdentity(_In_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE AuthData)
VOID CALLBACK None.TimerCallback(_Inout_ PTP_CALLBACK_INSTANCE Instance,_Inout_opt_ PVOID Context,_Inout_ PTP_TIMER Timer)
void None None.DoPasteLink(hwndClientDDE None None)
HRESULT None None.get_AccountName([out] BSTR *accountName)
HRESULT None dcomp.RenderAVisual(IDCompositionDevice *pDCompDevice None,HWND hwndTarget None,UINT surfaceWidth None,UINT surfaceHeight None)
HRESULT None None.CreateNewBandwidthSharing([out] IWMBandwidthSharing **ppBS)
D2D1_EFFECT_INPUT_DESCRIPTION None d2d1.EffectInputDescription(ID2D1Effect *effect None,UINT32 inputIndex None,D2D1_RECT_F inputRectangle None)
HRESULT None dcomp.CreateVisual([out] IDCompositionVisual **visual)
HRESULT None None.WriteCharEntity(WCHAR character None)
BOOLEAN WINAPI powrprof.SetActivePwrScheme(_In_ UINT uiID,_In_opt_ PGLOBAL_POWER_POLICY lpGlobalPowerPolicy,_In_opt_ PPOWER_POLICY lpPowerPolicy)
HRESULT WINAPI webservices.WsReadQualifiedName(_In_ WS_XML_READER* reader,_In_ WS_HEAP* heap,WS_XML_STRING* prefix None,_Out_ WS_XML_STRING* *localName,WS_XML_STRING* ns None,_In_opt_ WS_ERROR* error)
HRESULT None None.GetActivationPolicy([out] DWORD *pdwPolicy)
BOOL None kernel32.GetProcessorSystemCycleTime(_In_ USHORT Group,_Out_ PSYSTEM_PROCESSOR_CYCLE_TIME_INFORMATION Buffer,_Inout_ PDWORD ReturnedLength)
LONG WINAPI tapi32.lineGetAddressStatus(HLINE hLine None,DWORD dwAddressID None,LPLINEADDRESSSTATUS lpAddressStatus None)
LONG WINAPI tapi32.lineGetAddressStatusW(HLINE hLine None,DWORD dwAddressID None,LPLINEADDRESSSTATUS lpAddressStatus None)
LONG WINAPI tapi32.lineGetAddressStatusA(HLINE hLine None,DWORD dwAddressID None,LPLINEADDRESSSTATUS lpAddressStatus None)
uint32 None wvrcimprov.RemoveStretchPartnership([in] string ClusterName,[in] string SourceRGName,[in] string DestinationRGName)
HRESULT CALLBACK None.FreeSessionCalculator(const WS_OPERATION_CONTEXT* context,const WS_ASYNC_CONTEXT* asyncContext)
HDESK WINAPI user32.CreateDesktop(_In_ LPCTSTR lpszDesktop,_Reserved_ LPCTSTR lpszDevice,_Reserved_ DEVMODE *pDevmode,_In_ DWORD dwFlags,_In_ ACCESS_MASK dwDesiredAccess,_In_opt_ LPSECURITY_ATTRIBUTES lpsa)
HDESK WINAPI user32.CreateDesktopW(_In_ LPCTSTR lpszDesktop,_Reserved_ LPCTSTR lpszDevice,_Reserved_ DEVMODE *pDevmode,_In_ DWORD dwFlags,_In_ ACCESS_MASK dwDesiredAccess,_In_opt_ LPSECURITY_ATTRIBUTES lpsa)
HDESK WINAPI user32.CreateDesktopA(_In_ LPCTSTR lpszDesktop,_Reserved_ LPCTSTR lpszDevice,_Reserved_ DEVMODE *pDevmode,_In_ DWORD dwFlags,_In_ ACCESS_MASK dwDesiredAccess,_In_opt_ LPSECURITY_ATTRIBUTES lpsa)
BOOL WINAPI user32.SendNotifyMessage(_In_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
BOOL WINAPI user32.SendNotifyMessageW(_In_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
BOOL WINAPI user32.SendNotifyMessageA(_In_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
public boolean None.Match(Object obj None)
HRESULT None None.GetEnumerator([out None None,retval] IOpcCertificateEnumerator **certificateEnumerator)
void None None.Commit(Enlistment enlistment None)
BOOL WINAPI wtsapi32.WTSEnumerateProcessesEx(_In_ HANDLE hServer,_Inout_ DWORD *pLevel,_In_ DWORD SessionID,_Out_ LPTSTR *ppProcessInfo,_Out_ DWORD *pCount)
BOOL WINAPI wtsapi32.WTSEnumerateProcessesExW(_In_ HANDLE hServer,_Inout_ DWORD *pLevel,_In_ DWORD SessionID,_Out_ LPTSTR *ppProcessInfo,_Out_ DWORD *pCount)
BOOL WINAPI wtsapi32.WTSEnumerateProcessesExA(_In_ HANDLE hServer,_Inout_ DWORD *pLevel,_In_ DWORD SessionID,_Out_ LPTSTR *ppProcessInfo,_Out_ DWORD *pCount)
INSTALLUI_HANDLER None msi.MsiSetExternalUI(_In_ INSTALLUI_HANDLER puiHandler,_In_ DWORD dwMessageFilter,_In_ LPVOID pvContext)
INSTALLUI_HANDLER None msi.MsiSetExternalUIW(_In_ INSTALLUI_HANDLER puiHandler,_In_ DWORD dwMessageFilter,_In_ LPVOID pvContext)
INSTALLUI_HANDLER None msi.MsiSetExternalUIA(_In_ INSTALLUI_HANDLER puiHandler,_In_ DWORD dwMessageFilter,_In_ LPVOID pvContext)
BOOL WINAPI authz.AuthzEnumerateSecurityEventSources(_In_ DWORD dwFlags,_Out_ PAUTHZ_SOURCE_SCHEMA_REGISTRATION Buffer,_Out_ PDWORD pdwCount,_Inout_ PDWORD pdwLength)
HRESULT None uxtheme.EnableTheming(_In_ BOOL fEnable)
DWORD WINAPI kernel32.GetCompressedFileSize(_In_ LPCTSTR lpFileName,_Out_opt_ LPDWORD lpFileSizeHigh)
DWORD WINAPI kernel32.GetCompressedFileSizeW(_In_ LPCTSTR lpFileName,_Out_opt_ LPDWORD lpFileSizeHigh)
DWORD WINAPI kernel32.GetCompressedFileSizeA(_In_ LPCTSTR lpFileName,_Out_opt_ LPDWORD lpFileSizeHigh)
INT None ws2_32.WSALookupServiceBegin(_In_ LPWSAQUERYSET lpqsRestrictions,_In_ DWORD dwControlFlags,_Out_ LPHANDLE lphLookup)
INT None ws2_32.WSALookupServiceBeginW(_In_ LPWSAQUERYSET lpqsRestrictions,_In_ DWORD dwControlFlags,_Out_ LPHANDLE lphLookup)
INT None ws2_32.WSALookupServiceBeginA(_In_ LPWSAQUERYSET lpqsRestrictions,_In_ DWORD dwControlFlags,_Out_ LPHANDLE lphLookup)
HRESULT None None.GetPackageDependencies([out None None,retval] IAppxManifestPackageDependenciesEnumerator **dependencies)
DWORD None None.EnumPrinterKey(_In_ HANDLE hPrinter,_In_ LPCTSTR pKeyName,_Out_ LPTSTR pSubkey,_In_ DWORD cbSubkey,_Out_ LPDWORD pcbSubkey)
DWORD None None.EnumPrinterKeyW(_In_ HANDLE hPrinter,_In_ LPCTSTR pKeyName,_Out_ LPTSTR pSubkey,_In_ DWORD cbSubkey,_Out_ LPDWORD pcbSubkey)
DWORD None None.EnumPrinterKeyA(_In_ HANDLE hPrinter,_In_ LPCTSTR pKeyName,_Out_ LPTSTR pSubkey,_In_ DWORD cbSubkey,_Out_ LPDWORD pcbSubkey)
HRESULT None oleaut32.OleLoadPicture(_In_ LPSTREAM lpstream,_In_ LONG lSize,_In_ BOOL fRunmode,_In_ REFIID riid,_Out_ LPVOID *lplpvObj)
DWORD None kernel32.GetMaximumProcessorCount(_In_ WORD GroupNumber)
BOOL WINAPI kernel32.SetComputerName(_In_ LPCTSTR lpComputerName)
BOOL WINAPI kernel32.SetComputerNameW(_In_ LPCTSTR lpComputerName)
BOOL WINAPI kernel32.SetComputerNameA(_In_ LPCTSTR lpComputerName)
BOOL WINAPI kernel32.CopyContext(_Inout_ PCONTEXT Destination,_In_ DWORD ContextFlags,_In_ PCONTEXT Source)
public boolean None.Match(Object obj None)
public boolean None.Match(Object obj None)
HRESULT None ole32.OleLoad(_In_ LPSTORAGE pStg,_In_ REFIID riid,_In_ LPOLECLIENTSITE pClientSite,_Out_ LPVOID *ppvObj)
HANDLE None None.WIMLoadImage(HANDLE hWim None,DWORD dwImageIndex None)
VOID WINAPI None.Terminate(_In_ RESID Resource)
DWORD PXEAPI wdspxe.PxeDhcpv6ParseRelayForw(_In_ PVOID pRelayForwPacket,_In_ ULONG uRelayForwPacketLen,_Out_ PPXE_DHCPV6_NESTED_RELAY_MESSAGE pRelayMessages,_In_ ULONG nRelayMessages,_Out_ PULONG pnRelayMessages,_Out_ PBYTE *ppInnerPacket,_Out_ PULONG pcbInnerPacket)
BOOL WINAPI user32.GetKeyboardState(_Out_ PBYTE lpKeyState)
VOID None None.FltUninitializeOplock(_In_ POPLOCK Oplock)
HRESULT None azroles.get_Roles([out] IAzRoles **ppRoleCollection)
HRESULT None wmpmediasharing.get_customSettingsApplied([out] VARIANT_BOOL *customSettingsApplied)
NET_API_STATUS None netapi32.NetApiBufferAllocate(_In_ DWORD ByteCount,_Out_ LPVOID *Buffer)
BOOL WINAPI winhttp.WinHttpTimeToSystemTime(_In_ LPCWSTR pwszTime,_Out_ SYSTEMTIME *pst)
BOOL None None.ListView_GetCheckState(HWND hwndLV None,UINT iIndex None)
HRESULT None azroles.get_DelegatedPolicyUsers([out] VARIANT *pvarDelegatedPolicyUsers)
HRESULT None None.get_hFont([out] HFONT *phFont)
ULONG None None.WdfPreDeviceInstallEx(_In_ LPCWSTR InfPath,_In_opt_ LPCWSTR InfSectionName,_In_ PWDF_COINSTALLER_INSTALL_OPTIONS ClientOptions)
BOOL WINAPI winhttp.WinHttpCrackUrl(_In_ LPCWSTR pwszUrl,_In_ DWORD dwUrlLength,_In_ DWORD dwFlags,_Inout_ LPURL_COMPONENTS lpUrlComponents)
LRESULT CALLBACK None.WindowProc(HWND hwnd None,WM_IME_SETCONTEXT None None,WPARAM wParam None,LPARAM lParam None)
HRESULT None None.get_QueryMaxResults([out None None,retval] LONG *pcMaxResults)
BOOL None mswsock.RIOReceiveEx(_In_ RIO_RQ SocketQueue,_In_ PRIO_BUF pData,_In_ ULONG DataBufferCount,_In_ PRIO_BUF pLocalAddress,_In_ PRIO_BUF pRemoteAddress,_In_ PRIO_BUF pControlContext,_In_ PRIO_BUF pFlags,_In_ DWORD Flags,_In_ PVOID RequestContext)
HRESULT None None.GetQueryHelper([out None None,retval] ISearchQueryHelper **ppSearchQueryHelper)
HRESULT APIENTRY None.MQGetSecurityContextEx(LPVOID lpCertBuffer None,DWORD dwCertBufferLength None,HANDLE * phSecurityContext)
BOOL WINBASEAPI kernel32.GetFirmwareEnvironmentVariableEx(LPCSTR lpName None,LPCSTR lpGuid None,PVOID pValue None,DWORD nSize None,PDWORD pdwAttributes None)
BOOL WINBASEAPI kernel32.GetFirmwareEnvironmentVariableExW(LPCSTR lpName None,LPCSTR lpGuid None,PVOID pValue None,DWORD nSize None,PDWORD pdwAttributes None)
BOOL WINBASEAPI kernel32.GetFirmwareEnvironmentVariableExA(LPCSTR lpName None,LPCSTR lpGuid None,PVOID pValue None,DWORD nSize None,PDWORD pdwAttributes None)
DWORD None advapi32.GetManagedApplicationCategories(_Out_ DWORD dwReserved,_Out_ APPCATEGORYINFOLIST *pAppCategory)
BOOL WINAPI user32.CloseWindow(_In_ HWND hWnd)
BOOL WINAPI user32.SetForegroundWindow(_In_ HWND hWnd)
BOOL WINAPI kernel32.DebugBreakProcess(_In_ HANDLE Process)
BOOL None cabinet.CreateDecompressor(_In_ DWORD Algorithm,_In_opt_ PCOMPRESS_ALLOCATION_ROUTINES AllocationRoutines,_Out_ PDECOMPRESSOR_HANDLE DecompressorHandle)
HRESULT None None.get_documentElement(IXMLDOMElement** DOMElement None)
HRESULT None None.get_readyState(long * value)
HRESULT WINAPI dismapi.DismGetDriverInfo(_In_ DismSession Session,_In_ PCWSTR DriverPath,_Out_ DismDriver **Driver,_Out_ UINT *Count,_Out_opt_ DismDriverPackage **DriverPackage)
HRESULT None None.get_text(BSTR *text None)
HICON WINAPI shell32.ExtractIcon(_Reserved_ HINSTANCE hInst,_In_ LPCTSTR lpszExeFileName,_In_ UINT nIconIndex)
HICON WINAPI shell32.ExtractIconW(_Reserved_ HINSTANCE hInst,_In_ LPCTSTR lpszExeFileName,_In_ UINT nIconIndex)
HICON WINAPI shell32.ExtractIconA(_Reserved_ HINSTANCE hInst,_In_ LPCTSTR lpszExeFileName,_In_ UINT nIconIndex)
HRESULT None mfplat.MFCreateMediaExtensionActivate(_In_ PCWSTR szActivatableClassId,_In_ IUnknown *pConfiguration,_In_ REFIID riid,_Out_ LPVOID *ppvObject)
uint32 None wvrcimprov.UnpairRemoteSubsystem([in] string ComputerName)
HRESULT WINAPI iscsidsc.RemoveIscsiSendTargetPortal(_In_opt_ PTCHAR InitiatorInstance,_In_opt_ ULONG InitiatorPortNumber,_In_ PISCSI_TARGET_PORTAL Portal)
HRESULT WINAPI iscsidsc.RemoveIscsiSendTargetPortalW(_In_opt_ PTCHAR InitiatorInstance,_In_opt_ ULONG InitiatorPortNumber,_In_ PISCSI_TARGET_PORTAL Portal)
HRESULT WINAPI iscsidsc.RemoveIscsiSendTargetPortalA(_In_opt_ PTCHAR InitiatorInstance,_In_opt_ ULONG InitiatorPortNumber,_In_ PISCSI_TARGET_PORTAL Portal)
MI_INLINE MI_Result None.MI_DestinationOptions_SetCertRevocationCheck(_Inout_ MI_DestinationOptions *options,MI_Boolean check None)
uint32 None cimwin32.AddPrinterConnection([in] string Name)
HRESULT WINAPI dismapi.DismAddPackage(_In_ DismSession Session,_In_ PCWSTR PackagePath,_In_ BOOL IgnoreCheck,_In_ BOOL PreventPending,_In_opt_ HANDLE CancelEvent,_In_opt_ DISM_PROGRESS_CALLBACK Progress,_In_opt_ PVOID UserData)
HRESULT WINAPI d3dcompiler_47.D3DDisassemble(in LPCVOID pSrcData,in SIZE_T SrcDataSize,in UINT Flags,in_opt LPCSTR szComments,out ID3DBlob ppDisassembly)
BOOL WINAPI user32.EnumDesktopWindows(_In_opt_ HDESK hDesktop,_In_ WNDENUMPROC lpfn,_In_ LPARAM lParam)
void None None.Store(in uint address,in uint value)
BOOL WINAPI ktmw32.SetEnlistmentRecoveryInformation(_In_ HANDLE EnlistmentHandle,_In_ ULONG BufferSize,_In_ PVOID Buffer)
BOOL WINAPI dbghelp.SymDeleteSymbol(_In_ HANDLE hProcess,_In_ ULONG64 BaseOfDll,_In_opt_ PCTSTR Name,_In_ DWORD64 Address,_In_ DWORD Flags)
BOOL WINAPI dbghelp.SymDeleteSymbolW(_In_ HANDLE hProcess,_In_ ULONG64 BaseOfDll,_In_opt_ PCTSTR Name,_In_ DWORD64 Address,_In_ DWORD Flags)
BOOL WINAPI dbghelp.SymDeleteSymbol(_In_ HANDLE hProcess,_In_ ULONG64 BaseOfDll,_In_opt_ PCTSTR Name,_In_ DWORD64 Address,_In_ DWORD Flags)
WORD None None.MAKELANGID(USHORT usPrimaryLanguage None,USHORT usSubLanguage None)
ULONG None None.WdfIoResourceListGetCount(_In_ WDFIORESLIST ResourceList)
HRESULT None ole32.OleCreateLink(_In_ LPMONIKER pmkLinkSrc,_In_ REFIID riid,_In_ DWORD renderopt,_In_ LPFORMATETC lpFormatEtc,_In_ LPOLECLIENTSITE pClientSite,_In_ LPSTORAGE pStg,_Out_ LPVOID *ppvObj)
BOOL WINAPI user32.GetWindowInfo(_In_ HWND hwnd,_Inout_ PWINDOWINFO pwi)
ULONG None advapi32.QueryTrace(_In_ TRACEHANDLE SessionHandle,_In_ LPCTSTR SessionName,_Inout_ PEVENT_TRACE_PROPERTIES Properties)
ULONG None advapi32.QueryTraceW(_In_ TRACEHANDLE SessionHandle,_In_ LPCTSTR SessionName,_Inout_ PEVENT_TRACE_PROPERTIES Properties)
ULONG None advapi32.QueryTraceA(_In_ TRACEHANDLE SessionHandle,_In_ LPCTSTR SessionName,_Inout_ PEVENT_TRACE_PROPERTIES Properties)
HRESULT None None.GetSignatureId([out None None,retval] LPWSTR *sigId)
protected void None.OnMouseWheel(MouseWheelEventArgs e None)
HRESULT WDSCLIAPI wdsclientapi.WdsCliCreateSession(_In_ PWSTR pwszServer,_In_opt_ PWDS_CLI_CRED pCred,_Out_ PHANDLE phSession)
HRESULT None qmgrprxy.GetNotifyInterface([out] IUnknown **ppNotifyInterface)
HRESULT None None.appendChild(IXMLDOMNode *newChild None,IXMLDOMNode **outNewChild None)
HRESULT None msdrm.DRMCloseSession(_In_ DRMHSESSION hSession)
HRESULT None oleaut32.VarDiv(_In_ LPVARIANT pvarLeft,_In_ LPVARIANT pvarRight,_Out_ LPVARIANT pvarResult)
DWORD WINAPI clusapi.SetGroupDependencyExpression(_In_ HGROUP hGroup,_In_ LPCWSTR lpszDependencyExpression)
HRESULT None None.GetSourceDisplayName([out] LPOLESTR *ppszDisplayName)
public boolean None.Match(Object obj None)
DWORD WINAPI kernel32.GetProcessVersion(_In_ DWORD ProcessId)
public boolean None.IsSubsetOf(IPermission target None)
INT None None.WPUOpenCurrentThread(_Out_ LPWSATHREADID lpThreadId,_Out_ LPINT lpErrno)
BOOL WINAPI magnification.MagGetInputTransform(_Out_ BOOL *pfEnabled,_Out_ LPRECT prcSource,_Out_ LPRECT prcDest)
BOOL None None.DeletePort(_In_ LPTSTR pName,_In_ HWND hWnd,_In_ LPTSTR pPortName)
BOOL None None.DeletePortW(_In_ LPTSTR pName,_In_ HWND hWnd,_In_ LPTSTR pPortName)
BOOL None None.DeletePortA(_In_ LPTSTR pName,_In_ HWND hWnd,_In_ LPTSTR pPortName)
BOOL IMAGEAPI dbghelp.StackWalkEx(_In_ DWORD MachineType,_In_ HANDLE hProcess,_In_ HANDLE hThread,_Inout_ LPSTACKFRAME_EX StackFrame,_Inout_ PVOID ContextRecord,_In_opt_ PREAD_PROCESS_MEMORY_ROUTINE64 ReadMemoryRoutine,_In_opt_ PFUNCTION_TABLE_ACCESS_ROUTINE64 FunctionTableAccessRoutine,_In_opt_ PGET_MODULE_BASE_ROUTINE64 GetModuleBaseRoutine,_In_opt_ PTRANSLATE_ADDRESS_ROUTINE64 TranslateAddress,_In_ DWORD Flags)
NTSTATUS None advapi32.LsaSetTrustedDomainInfoByName(_In_ LSA_HANDLE PolicyHandle,_In_ PLSA_UNICODE_STRING TrustedDomainName,_In_ TRUSTED_INFORMATION_CLASS InformationClass,_In_ PVOID Buffer)
BOOL WINAPI authz.AuthzInitializeContextFromToken(_In_ DWORD Flags,_In_ HANDLE TokenHandle,_In_ AUTHZ_RESOURCE_MANAGER_HANDLE hAuthzResourceManager,_In_opt_ PLARGE_INTEGER pExpirationTime,_In_ LUID Identifier,_In_opt_ PVOID DynamicGroupArgs,_Out_ PAUTHZ_CLIENT_CONTEXT_HANDLE phAuthzClientContext)
HRESULT None azroles.get_PolicyAdministrators([out] VARIANT *pvarAdmins)
DWORD WINAPI resutils.ResUtilEnumResourcesEx(_In_ HCLUSTER hCluster,_In_opt_ HRESOURCE hSelf,_In_ LPCWSTR lpszResTypeName,_In_ LPRESOURCE_CALLBACK_EX pResCallBack,_In_ PVOID pParameter)
HRESULT None srmsvc.get_SizeAllocated([out] VARIANT *sizeAllocated)
typedef NTSTATUS None.EVT_SERCX_PURGE(__in WDFDEVICE Device,__in ULONG PurgeMask)
HRESULT None None.GetDefaultColumnWidth([out] DWORD *pcxChars)
HCURSOR WINAPI user32.LoadCursor(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpCursorName)
HCURSOR WINAPI user32.LoadCursorW(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpCursorName)
HCURSOR WINAPI user32.LoadCursorA(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpCursorName)
HRESULT STDAPI cldapi.CfGetCorrelationVector(_In_ HANDLE FileHandle,_Out_ PCORRELATION_VECTOR CorrelationVector)
HRESULT None None.get_tagName(BSTR *tagName None)
HRESULT None None.get_definition(IXMLDOMNode **definitionNode None)
HRESULT None shlwapi.IStream_Reset(_In_ IStream *pstm)
BOOL WINAPI dbghelp.SymGetSourceFileToken(_In_ HANDLE hProcess,_In_ ULONG64 Base,_In_ PCTSTR FileSpec,_Out_ PVOID *Token,_Out_ DWORD *Size)
BOOL WINAPI dbghelp.SymGetSourceFileTokenW(_In_ HANDLE hProcess,_In_ ULONG64 Base,_In_ PCTSTR FileSpec,_Out_ PVOID *Token,_Out_ DWORD *Size)
BOOL WINAPI dbghelp.SymGetSourceFileToken(_In_ HANDLE hProcess,_In_ ULONG64 Base,_In_ PCTSTR FileSpec,_Out_ PVOID *Token,_Out_ DWORD *Size)
BSTR None oleaut32.SysAllocStringByteLen(_In_opt_ LPCSTR psz,_In_ UINT len)
HRESULT None None.startMode(BSTR mode None)
HRESULT None srmsvc.get_DerivedObjects([out] IFsrmCollection **derivedObjects)
HRESULT None pla.get_DataCollectorSet([out] IDataCollectorSet **pGroup)
DWORD APIENTRY None.MprAdminInitializeDll(PMPRAPI_ADMIN_DLL_CALLBACKS pAdminCallbacks None)
uint32 None cimwin32.GetOwnerSid([out] string Sid)
BOOL WINAPI dbghelp.SymRefreshModuleList(_In_ HANDLE hProcess)
BOOL WINAPI userenv.CreateEnvironmentBlock(_Out_ LPVOID *lpEnvironment,_In_opt_ HANDLE hToken,_In_ BOOL bInherit)
NTSTATUS NTAPI None.CrediReadDomainCredentials(_In_ PLUID LogonId,_In_ ULONG CredFlags,_In_ PCREDENTIAL_TARGET_INFORMATIONW TargetInfo,ULONG Flags None,PULONG Count None,_Out_ PENCRYPTED_CREDENTIALW **Credential)
BOOL WINAPI wevtapi.EvtGetChannelConfigProperty(_In_ EVT_HANDLE ChannelConfig,_In_ EVT_CHANNEL_CONFIG_PROPERTY_ID PropertyId,_In_ DWORD Flags,_In_ DWORD PropertyValueBufferSize,_In_ PEVT_VARIANT PropertyValueBuffer,_Out_ PDWORD PropertyValueBufferUsed)
NTSTATUS WINAPI ntdll.NtQueryInformationProcess(_In_ HANDLE ProcessHandle,_In_ PROCESSINFOCLASS ProcessInformationClass,_Out_ PVOID ProcessInformation,_In_ ULONG ProcessInformationLength,_Out_opt_ PULONG ReturnLength)
HRESULT WINAPI iscsidsc.SetIscsiGroupPresharedKey(_In_ ULONG KeyLength,_In_ PUCHAR Key,BOOLEAN Persist None)
private void None.myButtonPrint_OnClick(Object sender None,System.EventArgs e None)
WINOLEAPI None ole32.GetHGlobalFromILockBytes(_In_ ILockBytes *pLkbyt,_Out_ HGLOBAL *phglobal)
LRESULT CALLBACK None.WndProc(HWND hWnd None,UINT message None,WPARAM wParam None,LPARAM lParam None)
protected void None.OnPropertyChanged(DependencyPropertyChangedEventArgs e None)
MI_INLINE MI_Result None.MI_DestinationOptions_SetMaxEnvelopeSize(_Inout_ MI_DestinationOptions *options,MI_Uint32 sizeInKB None)
BOOL CALLBACK None.FindDebugInfoFileProc(_In_ HANDLE FileHandle,_In_ PCTSTR FileName,_In_ PVOID CallerData)
BOOL None gdi32.PlayMetaFileRecord(_In_ HDC hdc,_In_ LPHANDLETABLE lpHandletable,_In_ LPMETARECORD lpMetaRecord,_In_ UINT nHandles)
HRESULT None azroles.get_RoleDefinitions([out] IAzRoleDefinitions **ppRoleDefs)
public boolean None.Equals(Object obj None)
BOOL WINAPI advapi32.SetThreadToken(_In_opt_ PHANDLE Thread,_In_opt_ HANDLE Token)
VOID None None.FltReissueSynchronousIo(_In_ PFLT_INSTANCE InitiatingInstance,_In_ PFLT_CALLBACK_DATA CallbackData)
BOOL None spoolss.AddForm(_In_ HANDLE hPrinter,_In_ DWORD Level,_In_ LPBYTE pForm)
DWORD WINAPI clusapi.ChangeClusterResourceGroup(_In_ HRESOURCE hResource,_In_ HGROUP hGroup)
uint32 None netpeerdistcim.Disable_BCServeOnBattery([in] boolean Force)
HRESULT None None.GetSignatureMethod([out None None,retval] LPCWSTR *signatureMethod)
HRESULT None None.GetUserClassID([out] CLSID *pClsid)
DWORD PXEAPI wdspxe.PxeDhcpv6IsValid(_In_ PVOID pPacket,_In_ ULONG uPacketLen,_In_ BOOL bRequestPacket,_Out_ PBOOL pbPxeOptionPresent)
HRESULT None oleaut32.SafeArrayUnaccessData(_In_ SAFEARRAY *psa)
HRESULT WINAPI None.MFCreateSensorActivityMonitor(_In_ IMFSensorActivitiesReportCallback *pCallback,_Out_ IMFSensorActivityMonitor **ppActivityMonitor)
protected void None.OnGotMouseCapture(MouseEventArgs e None)
HRESULT APIENTRY None.MQLocateNext(HANDLE hEnum None,DWORD * pcProps,MQPROPVARIANT aPropVar[] None)
HRESULT CALLBACK None.CreateSessionCalculator(const WS_OPERATION_CONTEXT* context,void** userChannelState None,const WS_ASYNC_CONTEXT* asyncContext,WS_ERROR* error None)
VOID None None.NdisSendPackets(_In_ NDIS_HANDLE NdisBindingHandle,_In_ PPNDIS_PACKET PacketArray,_In_ UINT NumberOfPackets)
LRESULT None None.Button_GetState(HWND hwndCtl None)
UINT None msi.MsiExtractPatchXMLData(_In_ LPCTSTR szPatchPath,_In_ DWORD dwReserved,_Out_opt_ LPTSTR szXMLData,_Inout_opt_ DWORD *pcchXMLData)
UINT None msi.MsiExtractPatchXMLDataW(_In_ LPCTSTR szPatchPath,_In_ DWORD dwReserved,_Out_opt_ LPTSTR szXMLData,_Inout_opt_ DWORD *pcchXMLData)
UINT None msi.MsiExtractPatchXMLDataA(_In_ LPCTSTR szPatchPath,_In_ DWORD dwReserved,_Out_opt_ LPTSTR szXMLData,_Inout_opt_ DWORD *pcchXMLData)
BOOL WINAPI user32.DdeUninitialize(_In_ DWORD idInst)
NTSTATUS WINAPI ntdll.NtQuerySystemInformation(_In_ SYSTEM_INFORMATION_CLASS SystemInformationClass,_Inout_ PVOID SystemInformation,_In_ ULONG SystemInformationLength,_Out_opt_ PULONG ReturnLength)
INSTALLSTATE None msi.MsiUseFeatureEx(_In_ LPCTSTR szProduct,_In_ LPCTSTR szFeature,_In_ DWORD dwInstallMode,_In_ DWORD dwReserved)
INSTALLSTATE None msi.MsiUseFeatureExW(_In_ LPCTSTR szProduct,_In_ LPCTSTR szFeature,_In_ DWORD dwInstallMode,_In_ DWORD dwReserved)
INSTALLSTATE None msi.MsiUseFeatureExA(_In_ LPCTSTR szProduct,_In_ LPCTSTR szFeature,_In_ DWORD dwInstallMode,_In_ DWORD dwReserved)
UINT None msi.MsiGetProductInfoEx(_In_ LPCTSTR szProductCode,_In_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ LPCTSTR szProperty,_Out_opt_ LPTSTR lpValue,_Inout_opt_ LPDWORD pcchValue)
UINT None msi.MsiGetProductInfoExW(_In_ LPCTSTR szProductCode,_In_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ LPCTSTR szProperty,_Out_opt_ LPTSTR lpValue,_Inout_opt_ LPDWORD pcchValue)
UINT None msi.MsiGetProductInfoExA(_In_ LPCTSTR szProductCode,_In_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ LPCTSTR szProperty,_Out_opt_ LPTSTR lpValue,_Inout_opt_ LPDWORD pcchValue)
HRESULT None windowscodecs.CreateFormatConverter([out] IWICFormatConverter **ppIFormatConverter)
UINT WINAPI msi.MsiEnumComponentsEx(_In_opt_ LPCTSTR szUserSid,_In_ DWORD dwContext,_In_ DWORD dwIndex,_Out_opt_ TCHAR szInstalledComponentCode[39],_Out_opt_ MSIINSTALLCONTEXT *pdwInstalledContext,_Out_opt_ LPTSTR szSid,_Inout_ LPDWORD pcchSid)
UINT WINAPI msi.MsiEnumComponentsExW(_In_opt_ LPCTSTR szUserSid,_In_ DWORD dwContext,_In_ DWORD dwIndex,_Out_opt_ TCHAR szInstalledComponentCode[39],_Out_opt_ MSIINSTALLCONTEXT *pdwInstalledContext,_Out_opt_ LPTSTR szSid,_Inout_ LPDWORD pcchSid)
UINT WINAPI msi.MsiEnumComponentsExA(_In_opt_ LPCTSTR szUserSid,_In_ DWORD dwContext,_In_ DWORD dwIndex,_Out_opt_ TCHAR szInstalledComponentCode[39],_Out_opt_ MSIINSTALLCONTEXT *pdwInstalledContext,_Out_opt_ LPTSTR szSid,_Inout_ LPDWORD pcchSid)
public None None.SessionEndingEventArgs(SessionEndReasons reason None)
UINT_PTR CALLBACK None.PageSetupHook(_In_ HWND hdlg,_In_ UINT uiMsg,_In_ WPARAM wParam,_In_ LPARAM lParam)
HRESULT None oleaut32.VarBoolFromR8(_In_ DOUBLE dblIn,_Out_ VARIANT_BOOL *pboolOut)
LONG WINAPI advapi32.RegDisableReflectionKey(_In_ HKEY hBase)
public boolean None.EnlistPromotableSinglePhase(IPromotableSinglePhaseNotification promotableSinglePhaseNotification None)
BOOL WINAPI advapi32.SaferGetLevelInformation(_In_ SAFER_LEVEL_HANDLE LevelHandle,_In_ SAFER_OBJECT_INFO_CLASS dwInfoType,_Out_opt_ LPVOID lpQueryBuffer,_In_ DWORD dwInBufferSize,_Out_ LPDWORD lpdwOutBufferSize)
public void None.CoerceValue(DependencyProperty dp None)
VOID WINAPI kernel32.ReleaseSemaphoreWhenCallbackReturns(_Inout_ PTP_CALLBACK_INSTANCE pci,_In_ HANDLE sem,_In_ DWORD crel)
HRESOURCE WINAPI resutils.ResUtilGetResourceDependencyByName(_In_ HCLUSTER hCluster,_In_ HANDLE hSelf,_In_ LPCWSTR lpszResourceType,_In_ BOOL bRecurse,_In_ DWORD dwDesiredAccess)
HRESULT None shlwapi.SHAutoComplete(_In_ HWND hwndEdit,DWORD dwFlags None)
ULONG None advapi32.EventWriteEx(_In_ REGHANDLE RegHandle,_In_ PCEVENT_DESCRIPTOR EventDescriptor,_In_ ULONG64 Filter,_In_ ULONG Flags,_In_opt_ LPCGUID ActivityId,_In_opt_ LPCGUID RelatedActivityId,_In_ ULONG UserDataCount,_In_opt_ PEVENT_DATA_DESCRIPTOR UserData)
HRESULT None shell32.SHEvaluateSystemCommandTemplate(_In_ PCWSTR pszCmdTemplate,_Out_ PWSTR *ppszApplication,_Out_opt_ PWSTR *ppszCommandLine,_Out_opt_ PWSTR *ppszParameters)
HRESULT None shlwapi.StrRetToBuf(_Inout_ STRRET *pstr,_In_ PCUITEMID_CHILD pidl,_Out_ LPTSTR pszBuf,_In_ UINT cchBuf)
HRESULT None shlwapi.StrRetToBufW(_Inout_ STRRET *pstr,_In_ PCUITEMID_CHILD pidl,_Out_ LPTSTR pszBuf,_In_ UINT cchBuf)
HRESULT None shlwapi.StrRetToBufA(_Inout_ STRRET *pstr,_In_ PCUITEMID_CHILD pidl,_Out_ LPTSTR pszBuf,_In_ UINT cchBuf)
HRESULT None None.get_DiacriticSensitivity([out None None,retval] BOOL *pfDiacriticSensitive)
NET_API_STATUS None netapi32.NetFileClose(_In_ LMSTR servername,_In_ DWORD fileid)
BOOL WINAPI advapi32.SaferGetPolicyInformation(_In_ DWORD dwScopeId,_In_ SAFER_POLICY_INFO_CLASS SaferPolicyInfoClass,_In_ DWORD InfoBufferSize,_Out_ PVOID InfoBuffer,_Out_ PDWORD InfoBufferRetSize,_Reserved_ LPVOID lpReserved)
BOOL None kernel32.GetUserPreferredUILanguages(_In_ DWORD dwFlags,_Out_ PULONG pulNumLanguages,_Out_opt_ PZZWSTR pwszLanguagesBuffer,_Inout_ PULONG pcchLanguagesBuffer)
HRESULT None None.get_async(VARIANT_BOOL *isAsync None)
HANDLE WINAPI dbghelp.FindDebugInfoFile(_In_ PCSTR FileName,_In_ PCSTR SymbolPath,_Out_ PSTR DebugFilePath)
public DependencyProperty None.AddOwner(Type ownerType None,PropertyMetadata typeMetadata None)
HRESULT None None.GetNetworkTIPAccess(BOOL * pbNetworkTIPAccess)
BOOL None shell32.SHGetDiskFreeSpace(LPCTSTR pszVolume None,ULARGE_INTEGER *pqwFreeCaller None,ULARGE_INTEGER *pqwTot None,ULARGE_INTEGER *pqwFree None)
HRESULT STDAPI cldapi.CfGetSyncRootInfoByHandle(_In_ HANDLE FileHandle,_In_ CF_SYNC_ROOT_INFO_CLASS InfoClass,_Out_ PVOID InfoBuffer,_In_ DWORD InfoBufferLength,_Out_opt_ PDWORD *ReturnedLength)
HRESULT None None.StringCchGets(_Out_ LPTSTR pszDest,_In_ size_t cchDest)
HRESULT None None.StringCchGetsW(_Out_ LPTSTR pszDest,_In_ size_t cchDest)
HRESULT None None.StringCchGetsA(_Out_ LPTSTR pszDest,_In_ size_t cchDest)
public void None.OnEndPrint(PrintDocument document None,PrintEventArgs e None)
HRESULT None srmsvc.CreateQuotaCollection([out] IFsrmCommittableCollection **collection)
void None None.Prepare(PreparingEnlistment preparingEnlistment None)
HRESULT None None.Clone([out None None,retval] IEnumSearchScopeRules **ppenum)
PCUIDLIST_RELATIVE None None.ILNext(_In_ PCUIDLIST_RELATIVE pidl)
VOID None None.XMStoreSInt3([out] XMINT3 *pDestination,XMVECTOR V None)
BOOL WINAPI crypt32.CertGetCertificateChain(_In_opt_ HCERTCHAINENGINE hChainEngine,_In_ PCCERT_CONTEXT pCertContext,_In_opt_ LPFILETIME pTime,_In_ HCERTSTORE hAdditionalStore,_In_ PCERT_CHAIN_PARA pChainPara,_In_ DWORD dwFlags,_In_ LPVOID pvReserved,_Out_ PCCERT_CHAIN_CONTEXT *ppChainContext)
INT WSAAPI ws2_32.InetPton(_In_ INT Family,_In_ PCTSTR pszAddrString,_Out_ PVOID pAddrBuf)
INT WSAAPI ws2_32.InetPtonW(_In_ INT Family,_In_ PCTSTR pszAddrString,_Out_ PVOID pAddrBuf)
INT WSAAPI ws2_32.InetPtonA or inet_pton(_In_ INT Family,_In_ PCTSTR pszAddrString,_Out_ PVOID pAddrBuf)
HRESULT None None.WriteStartDocument(XmlStandalone standalone None)
uint32 None wvrcimprov.WvrGetOrphanedPartitionDbRecords([in] string ReplicationGroupName,[out] MSFT_WvrPartitionDbRecord OrphanedDbRecords[])
HRESULT None None.LongPtrSub(_In_ LONG_PTR lMinuend,_In_ LONG_PTR lSubtrahend,_Out_ LONG_PTR *plResult)
BOOL WINAPI advapi32.AddAce(_Inout_ PACL pAcl,_In_ DWORD dwAceRevision,_In_ DWORD dwStartingAceIndex,_In_ LPVOID pAceList,_In_ DWORD nAceListLength)
HRESULT None None.SetLatency(IDirectMusicPort8 *pDMPort None,DWORD dwLatency None)
HRESULT None None.CorBindToRuntimeEx([in] LPWSTR pwszVersion,[in] LPWSTR pwszBuildFlavor,[in] DWORD flags,[in] REFCLSID rclsid,[in] REFIID riid,[out] LPVOID* ppv)
JET_ERR JET_API None.JetStopService(void None None)
HANDLE WINAPI ktmw32.OpenResourceManager(_In_ DWORD dwDesiredAccess,_In_ TmHandle None,_In_ LPGUID RmGuid)
private void None.Page_Load(Object sender None,System.EventArgs e None)
HRESULT None ole32.CoSetProxyBlanket(_In_ IUnknown *pProxy,_In_ DWORD dwAuthnSvc,_In_ DWORD dwAuthzSvc,_In_opt_ OLECHAR *pServerPrincName,_In_ DWORD dwAuthnLevel,_In_ DWORD dwImpLevel,_In_opt_ RPC_AUTH_IDENTITY_HANDLE pAuthInfo,_In_ DWORD dwCapabilities)
HDC None uxtheme.GetBufferedPaintTargetDC(HPAINTBUFFER hBufferedPaint None)
ULONG None advapi32.EventRegister(_In_ LPCGUID ProviderId,_In_opt_ PENABLECALLBACK EnableCallback,_In_opt_ PVOID CallbackContext,_Out_ PREGHANDLE RegHandle)
BOOL None oledlg.OleUICanConvertOrActivateAs(_In_ REFCLSID rClsid,_In_ BOOL fIsLinkedObject,_In_ WORD wFormat)
HRESULT None None.GetSubSystem([out] IVdsSubSystem **ppSubSystem)
ULONG None tdh.TdhSetDecodingParameter(_In_ TDH_HANDLE Handle,_In_ PTDH_CONTEXT TdhContext)
HRESULT WDSCLIAPI wdsclientapi.WdsCliFindNextImage(_In_ HANDLE Handle)
void None None.Store4(in uint address,in uint4 values)
HRESULT None windowscodecs.IWICBitmapEncoder_SetPalette_Proxy(_In_ IWICBitmapEncoder *THIS_PTR,_In_ IWICPalette *pIPalette)
LPSYSTEMTIME WINAPI None.GetCaptureTimeStamp(HCAPTURE hCapture None)
UINT None gdi32.GetSystemPaletteEntries(_In_ HDC hdc,_In_ UINT iStartIndex,_In_ UINT nEntries,_Out_ LPPALETTEENTRY lppe)
float None None.ToSingle(IFormatProvider provider None)
BOOL WINAPI kernel32.GetNumaProximityNode(_In_ ULONG ProximityId,_Out_ PUCHAR NodeNumber)
public void None.Invalidate(boolean invalidateChildren None)
HRESULT None oleaut32.VarPow(_In_ LPVARIANT pvarLeft,_In_ LPVARIANT pvarRight,_Out_ LPVARIANT pvarResult)
BOOL WINAPI advapi32.CreateProcessWithLogonW(_In_ LPCWSTR lpUsername,_In_opt_ LPCWSTR lpDomain,_In_ LPCWSTR lpPassword,_In_ DWORD dwLogonFlags,_In_opt_ LPCWSTR lpApplicationName,_Inout_opt_ LPWSTR lpCommandLine,_In_ DWORD dwCreationFlags,_In_opt_ LPVOID lpEnvironment,_In_opt_ LPCWSTR lpCurrentDirectory,_In_ LPSTARTUPINFOW lpStartupInfo,_Out_ LPPROCESS_INFORMATION lpProcessInfo)
INT None mswsock.SetService(_In_ DWORD dwNameSpace,_In_ DWORD dwOperation,_In_ DWORD dwFlags,_In_ LPSERVICE_INFO lpServiceInfo,_In_opt_ LPSERVICE_ASYNC_INFO lpServiceAsyncInfo,_Out_ LPDWORD lpdwStatusFlags)
INT None mswsock.SetServiceW(_In_ DWORD dwNameSpace,_In_ DWORD dwOperation,_In_ DWORD dwFlags,_In_ LPSERVICE_INFO lpServiceInfo,_In_opt_ LPSERVICE_ASYNC_INFO lpServiceAsyncInfo,_Out_ LPDWORD lpdwStatusFlags)
INT None mswsock.SetServiceA(_In_ DWORD dwNameSpace,_In_ DWORD dwOperation,_In_ DWORD dwFlags,_In_ LPSERVICE_INFO lpServiceInfo,_In_opt_ LPSERVICE_ASYNC_INFO lpServiceAsyncInfo,_Out_ LPDWORD lpdwStatusFlags)
protected void None.OnLostStylusCapture(StylusEventArgs e None)
HRESULT None activeds.SetOption(LONG lnOption None,VARIANT vValue None)
HRESULT None None.SetProperty([in] UINT nProperty,[in] LONG_PTR pValue)
protected void None.OnMouseEnter(MouseEventArgs e None)
uint32 None cluswmi.UpdateFunctionalLevel([in] boolean WhatIf)
BOOL CALLBACK None.EnumPageFilesProc(_In_ LPVOID pContext,_In_ PENUM_PAGE_FILE_INFORMATION pPageFileInfo,_In_ LPCTSTR lpFilename)
BOOL CALLBACK None.PENUM_PAGE_FILE_CALLBACKW(_In_ LPVOID pContext,_In_ PENUM_PAGE_FILE_INFORMATION pPageFileInfo,_In_ LPCTSTR lpFilename)
BOOL CALLBACK None.PENUM_PAGE_FILE_CALLBACKA(_In_ LPVOID pContext,_In_ PENUM_PAGE_FILE_INFORMATION pPageFileInfo,_In_ LPCTSTR lpFilename)
BOOL None magnification.MagSetImageScalingCallback(_In_ HWND hwnd,_In_ MagImageScalingCallback callback)
DNS_STATUS WINAPI dnsapi.DnsQueryConfig(_In_ DNS_CONFIG_TYPE Config,_In_ DWORD Flag,_In_opt_ PCWSTR pwsAdapterName,_In_opt_ PVOID pReserved,_Out_ PVOID pBuffer,_Inout_ PDWORD pBufferLength)
BOOL WINAPI wecapi.EcRemoveObjectArrayElement(_In_ EC_OBJECT_ARRAY_PROPERTY_HANDLE ObjectArray,_In_ DWORD ArrayIndex)
HRESULT None None.CreateResultImage([out] IFileSystemImageResult **resultStream)
HRESULT None sti.StiCreateInstance(_In_ HINSTANCE hinst,_In_ DWORD dwVer,_Out_ PSTI *ppSti,_In_ LPUNKNOWN punkOuter)
HRESULT None sti.StiCreateInstanceW(_In_ HINSTANCE hinst,_In_ DWORD dwVer,_Out_ PSTI *ppSti,_In_ LPUNKNOWN punkOuter)
HRESULT None sti.StiCreateInstanceA(_In_ HINSTANCE hinst,_In_ DWORD dwVer,_Out_ PSTI *ppSti,_In_ LPUNKNOWN punkOuter)
protected void None.OnPreviewStylusDown(StylusDownEventArgs e None)
BOOL WINAPI wecapi.EcDeleteSubscription(_In_ LPCWSTR SubscriptionName,_In_ DWORD Flags)
BOOL WINAPI clfsw32.ReadLogRestartArea(_In_ PVOID pvMarshal,_Out_ PVOID *ppvRestartBuffer,_Out_ PULONG pcbRestartBuffer,_Out_ PCLFS_LSN plsn,_Out_ PVOID *ppvContext,_Inout_opt_ LPOVERLAPPED pOverlapped)
SCESTATUS WINAPI None.SceSvcAttachmentUpdate(_In_ PSCESVC_CALLBACK_INFO pSceCbInfo,_In_ SCESVC_CONFIGURATION_INFO *ServiceInfo)
VOID None None.SetThreadpoolCallbackCleanupGroup(_Inout_ PTP_CALLBACK_ENVIRON pcbe,_In_ PTP_CLEANUP_GROUP ptpcg,_In_opt_ PTP_CLEANUP_GROUP_CANCEL_CALLBACK pfng)
HRESULT WINAPI wsdapi.WSDSetConfigurationOption(DWORD dwOption None,_In_ LPVOID pVoid,DWORD cbInBuffer None)
HRESULT None None.GetWriterInfo([out] VSS_ID *pidInstance,[out] VSS_ID *pidWriter)
public IAsyncResult None.BeginInvoke(Delegate method None)
BOOL WINAPI user32.DdePostAdvise(_In_ DWORD idInst,_In_ HSZ hszTopic,_In_ HSZ hszItem)
HRESULT None oleaut32.UnRegisterTypeLib(REFGUID libID None,WORD wVerMajor None,WORD wVerMinor None,LCID lcid None,SYSKIND syskind None)
BOOL None userenv.GetGPOList(_In_ HANDLE hToken,_In_ LPCTSTR lpName,_In_ LPCTSTR lpHostName,_In_ LPCTSTR lpComputerName,_In_ DWORD dwFlags,_Out_ PGROUP_POLICY_OBJECT *pGPOList)
BOOL None userenv.GetGPOListW(_In_ HANDLE hToken,_In_ LPCTSTR lpName,_In_ LPCTSTR lpHostName,_In_ LPCTSTR lpComputerName,_In_ DWORD dwFlags,_Out_ PGROUP_POLICY_OBJECT *pGPOList)
BOOL None userenv.GetGPOListA(_In_ HANDLE hToken,_In_ LPCTSTR lpName,_In_ LPCTSTR lpHostName,_In_ LPCTSTR lpComputerName,_In_ DWORD dwFlags,_Out_ PGROUP_POLICY_OBJECT *pGPOList)
public void None.AddHandler(RoutedEvent routedEvent None,Delegate handler None,boolean handledEventsToo None)
HRESULT None azroles.get_Tasks([out] VARIANT *pvarProp)
HRESULT None None.GetSignature([out None None,retval] IXpsSignature **signature)
PVOID None kernel32.MapViewOfFile2(_In_ HANDLE FileMappingHandle,_In_ HANDLE ProcessHandle,_In_ ULONG64 Offset,_In_opt_ PVOID BaseAddress,_In_ SIZE_T ViewSize,_In_ ULONG AllocationType,_In_ ULONG PageProtection)
BOOL WINAPI kernel32.VirtualFreeEx(_In_ HANDLE hProcess,_In_ LPVOID lpAddress,_In_ SIZE_T dwSize,_In_ DWORD dwFreeType)
DWORD WINAPI iphlpapi.EnableRouter(HANDLE *pHandle None,OVERLAPPED *pOverlapped None)
BOOL WINAPI dbghelp.SymFromAddr(_In_ HANDLE hProcess,_In_ DWORD64 Address,_Out_opt_ PDWORD64 Displacement,_Inout_ PSYMBOL_INFO Symbol)
BOOL WINAPI dbghelp.SymFromAddrW(_In_ HANDLE hProcess,_In_ DWORD64 Address,_Out_opt_ PDWORD64 Displacement,_Inout_ PSYMBOL_INFO Symbol)
BOOL WINAPI dbghelp.SymFromAddr(_In_ HANDLE hProcess,_In_ DWORD64 Address,_Out_opt_ PDWORD64 Displacement,_Inout_ PSYMBOL_INFO Symbol)
BOOL WINAPI user32.GetIconInfoEx(_In_ HICON hIcon,_Inout_ PICONINFOEX piconinfoex)
BOOL WINAPI user32.GetIconInfoExW(_In_ HICON hIcon,_Inout_ PICONINFOEX piconinfoex)
BOOL WINAPI user32.GetIconInfoExA(_In_ HICON hIcon,_Inout_ PICONINFOEX piconinfoex)
HRESULT None None.GetTransform([out None None,retval] IXpsOMMatrixTransform **matrixTransform)
HRESULT None None.get_EnumerationDepth([out None None,retval] DWORD *pdwDepth)
HRESULT WINAPI uiautomationcore.UiaRaiseNotificationEvent(_In_ IRawElementProviderSimple *provider,NotificationKind notificationKind None,NotificationProcessing notificationProcessing None,_In_opt_ BSTR displayString,_In_ BSTR activityId)
HRESULT WINAPI kernel32.QueryAuxiliaryCounterFrequency(_Out_ PULONGLONG lpAuxiliaryCounterFrequency)
DWORD64 CALLBACK None.GetModuleBaseProc64(_In_ HANDLE hProcess,_In_ DWORD64 Address)
DWORD None npptools.DuplicateBlob(_In_ HBLOB hSrcBlob,_Out_ HBLOB *hBlobThatWillBeCreated)
BOOL WINAPI dbghelp.SymGetSourceFileFromToken(_In_ HANDLE hProcess,_In_ PVOID Token,_In_opt_ PCTSTR Params,_Out_ PTSTR FilePath,_In_ DWORD Size)
BOOL WINAPI dbghelp.SymGetSourceFileFromTokenW(_In_ HANDLE hProcess,_In_ PVOID Token,_In_opt_ PCTSTR Params,_Out_ PTSTR FilePath,_In_ DWORD Size)
BOOL WINAPI dbghelp.SymGetSourceFileFromToken(_In_ HANDLE hProcess,_In_ PVOID Token,_In_opt_ PCTSTR Params,_Out_ PTSTR FilePath,_In_ DWORD Size)
public void None.FormatCustomEventDetails(WebEventFormatter formatter None)
HRESULT None None.get_PlatformId([out] PlatformId *pVal)
LONG WINAPI tapi32.lineDevSpecific(HLINE hLine None,DWORD dwAddressID None,HCALL hCall None,LPVOID lpParams None,DWORD dwSize None)
HRESULT None azroles.get_Members([out] VARIANT *pvarProp)
public void None.Prepare(PreparingEnlistment preparingEnlistment None)
public void None.BeginInvokeShutdown(DispatcherPriority priority None)
BOOL WINAPI advapi32.LookupAccountSid(_In_ PSID lpSid,_Out_opt_ LPTSTR lpName,_Inout_ LPDWORD cchName,_Out_opt_ LPTSTR lpReferencedDomainName,_Inout_ LPDWORD cchReferencedDomainName,_Out_ PSID_NAME_USE peUse)
BOOL WINAPI advapi32.LookupAccountSidLocalW(_In_ PSID lpSid,_Out_opt_ LPTSTR lpName,_Inout_ LPDWORD cchName,_Out_opt_ LPTSTR lpReferencedDomainName,_Inout_ LPDWORD cchReferencedDomainName,_Out_ PSID_NAME_USE peUse)
BOOL WINAPI advapi32.LookupAccountSidLocalA(_In_ PSID lpSid,_Out_opt_ LPTSTR lpName,_Inout_ LPDWORD cchName,_Out_opt_ LPTSTR lpReferencedDomainName,_Inout_ LPDWORD cchReferencedDomainName,_Out_ PSID_NAME_USE peUse)
DWORD None None.GetPrinterData(_In_ HANDLE hPrinter,_In_ LPTSTR pValueName,_Out_ LPDWORD pType,_Out_ LPBYTE pData,_In_ DWORD nSize,_Out_ LPDWORD pcbNeeded)
DWORD None None.GetPrinterDataW(_In_ HANDLE hPrinter,_In_ LPTSTR pValueName,_Out_ LPDWORD pType,_Out_ LPBYTE pData,_In_ DWORD nSize,_Out_ LPDWORD pcbNeeded)
DWORD None None.GetPrinterDataA(_In_ HANDLE hPrinter,_In_ LPTSTR pValueName,_Out_ LPDWORD pType,_Out_ LPBYTE pData,_In_ DWORD nSize,_Out_ LPDWORD pcbNeeded)
BOOL WINAPI comctl32.Str_SetPtr(_Inout_ LPTSTR *ppszCurrent,LPCTSTR pszNew None)
BOOL WINAPI comctl32.Str_SetPtrW(_Inout_ LPTSTR *ppszCurrent,LPCTSTR pszNew None)
BOOL WINAPI comctl32.Str_SetPtrA(_Inout_ LPTSTR *ppszCurrent,LPCTSTR pszNew None)
HRESULT None ole32.OleCreateStaticFromData(_In_ LPDATAOBJECT pSrcDataObj,_In_ REFIID iid,_In_ DWORD renderopt,_In_ LPFORMATETC pFormatEtc,_In_ LPOLECLIENTSITE pClientSite,_In_ LPSTORAGE pStg,_Out_ LPVOID *ppvObj)
public boolean None.Match(Object obj None)
private void None.currencyTextBox_TextChanged(Object sender None,EventArgs e None)
BOOL None spoolss.StartPagePrinter(_In_ HANDLE hPrinter)
BOOL None wtsapi32.WTSVirtualChannelPurgeOutput(_In_ HANDLE hChannelHandle)
DWORD WINAPI rstrtmgr.RmRemoveFilter(_In_ DWORD dwSessionHandle,_In_opt_ LPCWSTR strFilename,_In_opt_ RM_UNIQUE_PROCESS *Application,_In_opt_ LPCWSTR strShortServiceName)
BOOL None dxva2.GetMonitorTechnologyType(_In_ HANDLE hMonitor,_Out_ LPMC_DISPLAY_TECHNOLOGY_TYPE pdtyDisplayTechnologyType)
HRESULT None mf.RenderingParametersUpdateHandler(_In_ IMediaRenderer *sender,_In_ RenderingParameters arg)
HRESULT None ole32.MonikerRelativePathTo(_In_ LPMONIKER pmkSrc,_In_ LPMONIKER pmkDest,_Out_ LPMONIKER *ppmkRelPath,_In_ BOOL dwReserved)
protected void None.OnMouseEnter(MouseEventArgs e None)
BOOL WINAPI user32.IsCharLower(_In_ TCHAR ch)
BOOL WINAPI user32.IsCharLowerA(_In_ TCHAR ch)
HRESULT WDSCLIAPI wdsclientapi.WdsCliGetImageLanguage(_In_ HANDLE hIfh,_Out_ PWSTR *ppwszValue)
protected void None.OnMouseEnter(MouseEventArgs e None)
BOOLEAN WINAPI ntdll.RtlTimeToSecondsSince1970(_In_ PLARGE_INTEGER Time,_Out_ PULONG ElapsedSeconds)
BOOL None shell32.SHGetPathFromIDList(_In_ PCIDLIST_ABSOLUTE pidl,_Out_ LPTSTR pszPath)
BOOL None shell32.SHGetPathFromIDListW(_In_ PCIDLIST_ABSOLUTE pidl,_Out_ LPTSTR pszPath)
BOOL None shell32.SHGetPathFromIDListA(_In_ PCIDLIST_ABSOLUTE pidl,_Out_ LPTSTR pszPath)
HDDEDATA WINAPI user32.DdeClientTransaction(_In_opt_ LPBYTE pData,_In_ DWORD cbData,_In_ HCONV hConv,_In_opt_ HSZ hszItem,_In_ UINT wFmt,_In_ UINT wType,_In_ DWORD dwTimeout,_Out_opt_ LPDWORD pdwResult)
BOOL WINAPI user32.InsertMenu(_In_ HMENU hMenu,_In_ UINT uPosition,_In_ UINT uFlags,_In_ UINT_PTR uIDNewItem,_In_opt_ LPCTSTR lpNewItem)
BOOL WINAPI user32.InsertMenuW(_In_ HMENU hMenu,_In_ UINT uPosition,_In_ UINT uFlags,_In_ UINT_PTR uIDNewItem,_In_opt_ LPCTSTR lpNewItem)
BOOL WINAPI user32.InsertMenuA(_In_ HMENU hMenu,_In_ UINT uPosition,_In_ UINT uFlags,_In_ UINT_PTR uIDNewItem,_In_opt_ LPCTSTR lpNewItem)
BOOL WINAPI userenv.DeleteProfile(_In_ LPCTSTR lpSidString,_In_opt_ LPCTSTR lpProfilePath,_In_opt_ LPCTSTR lpComputerName)
BOOL WINAPI userenv.DeleteProfileW(_In_ LPCTSTR lpSidString,_In_opt_ LPCTSTR lpProfilePath,_In_opt_ LPCTSTR lpComputerName)
BOOL WINAPI userenv.DeleteProfileA(_In_ LPCTSTR lpSidString,_In_opt_ LPCTSTR lpProfilePath,_In_opt_ LPCTSTR lpComputerName)
BOOL WINAPI user32.RegisterShellHookWindow(_In_ HWND hWnd)
HRESULT None pla.CreateSchedule([out] ISchedule **Schedule)
protected void None.RaisePropertyChanging(String name None)
HRESULT None None.MQMgmtGetInfo(LPCWSTR pMachineName None,LPCWSTR pObjectName None,MQMGMTPROPS * pMgmtProps)
BOOL WINAPI kernel32.ReadProcessMemory(_In_ HANDLE hProcess,_In_ LPCVOID lpBaseAddress,_Out_ LPVOID lpBuffer,_In_ SIZE_T nSize,_Out_ SIZE_T *lpNumberOfBytesRead)
HRESULT None oleaut32.SafeArrayGetIID(_In_ SAFEARRAY *psa,_Out_ GUID *pguid)
DWORD None shlwapi.StrCatChainW(_Out_ PWSTR pszDst,DWORD cchDst None,DWORD ichAt None,_In_ PCWSTR pszSrc)
DWORD None shlwapi.StrCatChainW(_Out_ PWSTR pszDst,DWORD cchDst None,DWORD ichAt None,_In_ PCWSTR pszSrc)
VOID None None.IoDisconnectInterrupt(_In_ PKINTERRUPT InterruptObject)
VOID None None.FltCompletePendedPreOperation(_In_ PFLT_CALLBACK_DATA Data,_In_ FLT_PREOP_CALLBACK_STATUS CallbackStatus,_In_opt_ PVOID Context)
HRESULT None wmvcore.WMCreateWriterFileSink(_Out_ IWMWriterFileSink **ppSink)
VOID None None.FltCompletePendedPostOperation(_In_ PFLT_CALLBACK_DATA CallbackData)
HRESULT STDMETHODCALLTYPE wmdrmsdk.WMDRMCreateProvider(_Out_ IWMDRMProvider **ppDRMProvider)
HRESULT None None.GetCatalogStatus([out] CatalogStatus *pStatus,[out] CatalogPausedReason *pPausedReason)
HRESULT WINAPI iscsidsc.RemoveIscsiPersistentTarget(_In_ PTCHAR InitiatorInstance,_In_opt_ ULONG InitiatorPortNumber,_In_ PTCHAR TargetName,_In_ PISCSI_TARGET_PORTAL Portal)
HRESULT WINAPI iscsidsc.RemoveIscsiPersistentTargetW(_In_ PTCHAR InitiatorInstance,_In_opt_ ULONG InitiatorPortNumber,_In_ PTCHAR TargetName,_In_ PISCSI_TARGET_PORTAL Portal)
HRESULT WINAPI iscsidsc.RemoveIscsiPersistentTargetA(_In_ PTCHAR InitiatorInstance,_In_opt_ ULONG InitiatorPortNumber,_In_ PTCHAR TargetName,_In_ PISCSI_TARGET_PORTAL Portal)
HRESULT WINAPI iscsidsc.ReportIscsiSendTargetPortalsEx(_Out_ PULONG PortalCount,_Inout_ PULONG PortalInfoSize,_Inout_ PISCSI_TARGET_PORTAL_INFO_EX PortalInfo)
HRESULT WINAPI iscsidsc.ReportIscsiSendTargetPortalsExW(_Out_ PULONG PortalCount,_Inout_ PULONG PortalInfoSize,_Inout_ PISCSI_TARGET_PORTAL_INFO_EX PortalInfo)
HRESULT WINAPI iscsidsc.ReportIscsiSendTargetPortalsExA(_Out_ PULONG PortalCount,_Inout_ PULONG PortalInfoSize,_Inout_ PISCSI_TARGET_PORTAL_INFO_EX PortalInfo)
HRESULT None shell32.InvokeCommand(LPCMINVOKECOMMANDINFO pici None)
BOOL WINAPI kernel32.WriteFileEx(_In_ HANDLE hFile,_In_opt_ LPCVOID lpBuffer,_In_ DWORD nNumberOfBytesToWrite,_Inout_ LPOVERLAPPED lpOverlapped,_In_ LPOVERLAPPED_COMPLETION_ROUTINE lpCompletionRoutine)
HRESULT WINAPI iscsidsc.SendScsiReportLuns(_In_ PISCSI_UNIQUE_SESSION_ID UniqueSessionId,_Out_ PUCHAR *ScsiStatus,_Inout_ PULONG *ResponseSize,_Out_ PUCHAR ResponseBuffer,_Inout_ PULONG *SenseSize,_Out_ PUCHAR SenseBuffer)
HRESULT None None.GetSignatureOriginPartName([out None None,retval] IOpcPartUri **signatureOriginPartName)
HRESULT None shell32.SHGetIDListFromObject(_In_ IUnknown *punk,_Out_ PIDLIST_ABSOLUTE *ppidl)
LONG WINAPI winscard.SCardFreeMemory(_In_ SCARDCONTEXT hContext,_In_ LPCVOID pvMem)
uint32 None wfascim.EnumerateFull([out] string Dependents[])
HRESULT None None.GetModified([out None None,retval] SYSTEMTIME *modified)
BOOL WINAPI dbghelp.SymRefreshModuleList(_In_ HANDLE hProcess)
BOOL WINAPI dbghelp.SymNext(_In_ HANDLE hProcess,_Inout_ PSYMBOL_INFO Symbol)
BOOL WINAPI dbghelp.SymNextW(_In_ HANDLE hProcess,_Inout_ PSYMBOL_INFO Symbol)
BOOL WINAPI dbghelp.SymNext(_In_ HANDLE hProcess,_Inout_ PSYMBOL_INFO Symbol)
LONG WINAPI advapi32.RegConnectRegistry(_In_opt_ LPCTSTR lpMachineName,_In_ HKEY hKey,_Out_ PHKEY phkResult)
LONG WINAPI advapi32.RegConnectRegistryW(_In_opt_ LPCTSTR lpMachineName,_In_ HKEY hKey,_Out_ PHKEY phkResult)
LONG WINAPI advapi32.RegConnectRegistryA(_In_opt_ LPCTSTR lpMachineName,_In_ HKEY hKey,_Out_ PHKEY phkResult)
HRESULT WINAPI webservices.WsGetWriterPosition(_In_ WS_XML_WRITER* writer,_Out_ WS_XML_NODE_POSITION* *nodePosition,_In_opt_ WS_ERROR* error)
HRESULT None None.GetDefaultDigestMethod([out None None,retval] LPCWSTR *digestMethod)
void None None.Rollback(Enlistment enlistment None)
HRESULT None windowscodecs.SetIndexing(WICJpegIndexingOptions options None,UINT horizontalIntervalSize None)
DWORD None npptools.GetNetworkInfoFromBlob(_In_ HBLOB hBlob,_Inout_ LPNETWORKINFO lpNetworkInfo)
BOOL WINAPI userenv.GetProfilesDirectory(_Out_ LPTSTR lpProfilesDir,_Inout_ LPDWORD lpcchSize)
BOOL WINAPI userenv.GetProfilesDirectoryW(_Out_ LPTSTR lpProfilesDir,_Inout_ LPDWORD lpcchSize)
BOOL WINAPI userenv.GetProfilesDirectoryA(_Out_ LPTSTR lpProfilesDir,_Inout_ LPDWORD lpcchSize)
ULONG None tdh.TdhGetDecodingParameter(_In_ TDH_HANDLE Handle,_Inout_ PTDH_CONTEXT TdhContext)
HRESULT None windowscodecs.IWICBitmapFrameEncode_SetSize_Proxy(_In_ IWICBitmapFrameEncode *THIS_PTR,_In_ UINT uiWidth,_In_ UINT uiHeight)
HRESULT None srmsvc.get_CustomAction([out] IFsrmActionCommand **pAction)
HRESULT None None.LongPtrMult(_In_ LONG_PTR lMultiplicand,_In_ LONG_PTR lMultiplier,_Out_ LONG_PTR *plResult)
BOOL None comctl32.DSA_Sort(_In_ HDSA pdsa,_In_ PFNDACOMPARE pfnCompare,_In_ LPARAM lParam)
LONG WINAPI tapi32.lineGetNewCalls(HLINE hLine None,DWORD dwAddressID None,DWORD dwSelect None,LPLINECALLLIST lpCallList None)
XMVECTOR None None.XMVectorSetIntByIndex(XMVECTOR V None,uint32_t x None,size_t i None)
STDAPI None oleacc.AccessibleChildren(_In_ IAccessible *paccContainer,_In_ LONG iChildStart,_In_ LONG cChildren,_Out_ VARIANT *rgvarChildren,_Out_ LONG *pcObtained)
PVOID WINAPI api-ms-win-core-enclave-l1-1-0.CreateEnclave(_In_ HANDLE hProcess,_In_opt_ LPVOID lpAddress,_In_ SIZE_T dwSize,_In_ SIZE_T dwInitialCommittment,_In_ DWORD flEnclaveType,_In_ LPCVOID lpEnclaveInformation,_In_ DWORD dwInfoLength,_Out_opt_ LPDWORD lpEnclaveError)
DWORD WINAPI clusapi.OnlineClusterGroup(_In_ HGROUP hGroup,_In_opt_ HNODE hDestinationNode)
HRESULT None None.GetDesc1([out] DXGI_SWAP_CHAIN_DESC1 *pDesc)
LONG TSPIAPI None.TSPI_providerConfig(HWND hwndOwner None,DWORD dwPermanentProviderID None)
BOOL CALLBACK None.AuthzFreeCentralAccessPolicyCallback(_In_ PVOID pCentralAccessPolicy)
HRESULT None wmpmediasharing.get_userHomeMediaSharingLibraryName([out] BSTR *libraryName)
BOOL WINAPI dbghelp.SymGetLineNext64(_In_ HANDLE hProcess,_Inout_ PIMAGEHLP_LINE64 Line)
BOOL WINAPI dbghelp.SymGetLineNextW64(_In_ HANDLE hProcess,_Inout_ PIMAGEHLP_LINE64 Line)
BOOL WINAPI dbghelp.SymGetLineNext64(_In_ HANDLE hProcess,_Inout_ PIMAGEHLP_LINE64 Line)
HRESULT None None.GetObjectAttributes2([out] DWORD *pdwAttributes,[out] DWORD *pdwAttributesEx,[out] _WAVEFORMATEX *pAudioFormat,[out] _VIDEOINFOHEADER *pVideoFormat)
BOOLEAN None None.KeInsertQueueDpc(_Inout_ PRKDPC Dpc,_In_opt_ PVOID SystemArgument1,_In_opt_ PVOID SystemArgument2)
DWORD PXEAPI wdspxe.PxeRegisterCallback(_In_ HANDLE hProvider,_In_ PXE_CALLBACK_TYPE CallbackType,_In_ PVOID pCallbackFunction,_In_ PVOID pContext)
VOID WINAPI kernel32.DeleteFiber(_In_ LPVOID lpFiber)
DWORD WINAPI None.Startup(_In_ LPCWSTR ResourceType,_In_ DWORD MinVersionSupported,_In_ DWORD MaxVersionSupported,_In_ PSET_RESOURCE_STATUS_ROUTINE SetResourceStatus,_In_ PLOG_EVENT_ROUTINE LogEvent,_Out_ CLRES_FUNCTION_TABLE *FunctionTable)
HRESULT None mfplat.MFTGetInfo(_In_ CLSID clsidMFT,_Out_ LPWSTR *pszName,_Out_ MFT_REGISTER_TYPE_INFO **ppInputTypes,_Out_ UINT32 *pcInputTypes,_Out_ MFT_REGISTER_TYPE_INFO **ppOutputTypes,_Out_ UINT32 *pcOutputTypes,_Out_ IMFAttributes **ppAttributes)
HRESULT None None.MFSetAttributeRatio(_In_ IMFAttributes *pAttributes,_In_ REFGUID guidKey,_In_ UINT32 unNumerator,_In_ UINT32 unDenominator)
HRESULT None mfcaptureengine.MFCreateCaptureEngine(_Out_ IMFCaptureEngine **ppCaptureEngine)
uint32 None None.GetSecurityDescriptor([out] __SystemSecurity Descriptor)
HRESULT None None.RequestingAcknowledgment(LPCWSTR wszDestQueueFormatName None,LPCWSTR wszAdminQueueFormatName None,UCHAR bAckLevel None,ULONG ulTimeToBeReceived None)
NTSTATUS None None.ZwWriteFile(_In_ HANDLE FileHandle,_In_opt_ HANDLE Event,_In_opt_ PIO_APC_ROUTINE ApcRoutine,_In_opt_ PVOID ApcContext,_Out_ PIO_STATUS_BLOCK IoStatusBlock,_In_ PVOID Buffer,_In_ ULONG Length,_In_opt_ PLARGE_INTEGER ByteOffset,_In_opt_ PULONG Key)
protected void None.OnPreviewMouseMove(MouseEventArgs e None)
BOOL None None.AddPrintProvidor(_In_ LPTSTR pName,_In_ DWORD Level,_In_ LPBYTE pProviderInfo)
BOOL None None.AddPrintProvidorW(_In_ LPTSTR pName,_In_ DWORD Level,_In_ LPBYTE pProviderInfo)
BOOL None None.AddPrintProvidorA(_In_ LPTSTR pName,_In_ DWORD Level,_In_ LPBYTE pProviderInfo)
DWORD WINAPI wlanapi.WFDCloseHandle(_In_ HANDLE hClientHandle)
protected void None.OnLostKeyboardFocus(KeyboardFocusChangedEventArgs e None)
NET_API_STATUS None netapi32.NetLocalGroupGetMembers(_In_ LPCWSTR servername,_In_ LPCWSTR localgroupname,_In_ DWORD level,_Out_ LPBYTE *bufptr,_In_ DWORD prefmaxlen,_Out_ LPDWORD entriesread,_Out_ LPDWORD totalentries,_Inout_ PDWORD_PTR resumehandle)
UINT None msi.MsiReinstallFeature(_In_ LPCTSTR szProduct,_In_ LPCTSTR szFeature,_In_ DWORD dwReinstallMode)
UINT None msi.MsiReinstallFeatureW(_In_ LPCTSTR szProduct,_In_ LPCTSTR szFeature,_In_ DWORD dwReinstallMode)
UINT None msi.MsiReinstallFeatureA(_In_ LPCTSTR szProduct,_In_ LPCTSTR szFeature,_In_ DWORD dwReinstallMode)
public DataTable None.GetOleDbSchemaTable(Guid schema None,Object[] restrictions None)
DWORD WINAPI resutils.ResUtilEnumResourcesEx2(_In_ HCLUSTER hCluster,_In_opt_ HRESOURCE hSelf,_In_ LPCWSTR lpszResTypeName,_In_ LPRESOURCE_CALLBACK_EX pResCallBack,_In_ PVOID pParameter,_In_ DWORD dwDesiredAccess)
BOOL WINAPI wevtapi.EvtSaveChannelConfig(_In_ EVT_HANDLE ChannelConfig,_In_ DWORD Flags)
UINT None msi.MsiViewClose(_In_ MSIHANDLE hView)
NTSTATUS None None.PsSetCreateThreadNotifyRoutine(_In_ PCREATE_THREAD_NOTIFY_ROUTINE NotifyRoutine)
BOOL None advapi32.ReadEventLog(_In_ HANDLE hEventLog,_In_ DWORD dwReadFlags,_In_ DWORD dwRecordOffset,_Out_ LPVOID lpBuffer,_In_ DWORD nNumberOfBytesToRead,_Out_ DWORD *pnBytesRead,_Out_ DWORD *pnMinNumberOfBytesNeeded)
BOOL None advapi32.ReadEventLogW(_In_ HANDLE hEventLog,_In_ DWORD dwReadFlags,_In_ DWORD dwRecordOffset,_Out_ LPVOID lpBuffer,_In_ DWORD nNumberOfBytesToRead,_Out_ DWORD *pnBytesRead,_Out_ DWORD *pnMinNumberOfBytesNeeded)
BOOL None advapi32.ReadEventLogA(_In_ HANDLE hEventLog,_In_ DWORD dwReadFlags,_In_ DWORD dwRecordOffset,_Out_ LPVOID lpBuffer,_In_ DWORD nNumberOfBytesToRead,_Out_ DWORD *pnBytesRead,_Out_ DWORD *pnMinNumberOfBytesNeeded)
CLFS_LSN WINAPI clfsw32.LsnCreate(_In_ CLFS_CONTAINER_ID cidContainer,_In_ ULONG offBlock,_In_ ULONG cRecord)
BOOL WINAPI clfsw32.TerminateLogArchive(_In_ CLFS_LOG_ARCHIVE_CONTEXT pvArchiveContext)
UINT None msi.MsiGetFeatureState(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szFeature,_Out_ INSTALLSTATE *piInstalled,_Out_ INSTALLSTATE *piAction)
UINT None msi.MsiGetFeatureStateW(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szFeature,_Out_ INSTALLSTATE *piInstalled,_Out_ INSTALLSTATE *piAction)
UINT None msi.MsiGetFeatureStateA(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szFeature,_Out_ INSTALLSTATE *piInstalled,_Out_ INSTALLSTATE *piAction)
BOOL WINAPI kernel32.GetProcessMemoryInfo(_In_ HANDLE Process,_Out_ PPROCESS_MEMORY_COUNTERS ppsmemCounters,_In_ DWORD cb)
public Object None.ConvertFromString(ITypeDescriptorContext context None,CultureInfo culture None,String text None)
BOOL WINAPI kernel32.QueryWorkingSet(_In_ HANDLE hProcess,_Out_ PVOID pv,_In_ DWORD cb)
HRESULT WINAPI iscsidsc.GetIscsiIKEInfo(_In_opt_ PTCHAR InitiatorName,_In_ ULONG PortNumber,_In_ PULONG Reserved,_In_ PIKE_AUTHENTICATION_INFORMATION *AuthInfo)
HRESULT WINAPI iscsidsc.GetIscsiIKEInfoW(_In_opt_ PTCHAR InitiatorName,_In_ ULONG PortNumber,_In_ PULONG Reserved,_In_ PIKE_AUTHENTICATION_INFORMATION *AuthInfo)
HRESULT WINAPI iscsidsc.GetIscsiIKEInfoA(_In_opt_ PTCHAR InitiatorName,_In_ ULONG PortNumber,_In_ PULONG Reserved,_In_ PIKE_AUTHENTICATION_INFORMATION *AuthInfo)
BOOL WINAPI wevtapi.EvtArchiveExportedLog(_In_ EVT_HANDLE Session,_In_ LPCWSTR LogFilePath,_In_ LCID Locale,_In_ DWORD Flags)
HRESULT None wiaservc.EnumChildItems([out] IEnumWiaItem **ppIEnumWiaItem)
HRESULT None dcomp.CreateTranslateTransform([out] IDCompositionTranslateTransform **translateTransform)
JET_ERR JET_API None.JetDupSession(__in JET_SESID sesid,__out JET_SESID* psesid)
NTSTATUS NTAPI None.Msv1_0SubAuthenticationRoutine(_In_ NETLOGON_LOGON_INFO_CLASS LogonLevel,_In_ PVOID LogonInformation,_In_ ULONG Flags,_In_ PUSER_ALL_INFORMATION UserAll,_Out_ PULONG WhichFields,_Out_ PULONG UserFlags,_Out_ PBOOLEAN Authoritative,_Out_ PLARGE_INTEGER LogoffTime,_Out_ PLARGE_INTEGER KickoffTime)
uint32 None nettcpip.RequestStateChange([in] uint16 RequestedState,[out] CIM_ConcreteJob Job,[in] datetime TimeoutPeriod)
BOOL WINAPI kernel32.WriteProfileString(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ LPCTSTR lpString)
BOOL WINAPI kernel32.WriteProfileStringW(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ LPCTSTR lpString)
BOOL WINAPI kernel32.WriteProfileStringA(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ LPCTSTR lpString)
HRESULT None None.GetSortOrder(DBORDINAL *pcColumns None,DBORDINAL *prgColumns[] None,DBSORT *prgOrders[] None)
HRESULT None None.ULongPtrSub(_In_ ULONG_PTR ulMinuend,_In_ ULONG_PTR ulSubtrahend,_Out_ ULONG_PTR *pulResult)
BOOL None advapi32.CredWrite(_In_ PCREDENTIAL Credential,_In_ DWORD Flags)
BOOL None advapi32.CredWriteW(_In_ PCREDENTIAL Credential,_In_ DWORD Flags)
BOOL None advapi32.CredWriteA(_In_ PCREDENTIAL Credential,_In_ DWORD Flags)
DWORD None iphlpapi.DeleteIpNetEntry(_In_ PMIB_IPNETROW pArpEntry)
HRESULT None None.GetDropTarget([out] IDropTarget **ppDropTarget)
void None None.Button1_Click(Object sender None,EventArgs e None)
VOID WINAPI netapi32.DsGetDcClose(_In_ HANDLE GetDcContextHandle)
VOID WINAPI netapi32.DsGetDcCloseW(_In_ HANDLE GetDcContextHandle)
HRESULT None None.UIntSub(_In_ UINT uMinuend,_In_ UINT uSubtrahend,_Out_ UINT *puResult)
HRESULT None None.GetKeywords([out None None,retval] LPWSTR *keywords)
BOOL __inline None.IDListContainerIsConsistent(_In_ PCUIDLIST_RELATIVE pidl,_In_ UINT cbAlloc)
ULONG None advapi32.TraceMessage(_In_ TRACEHANDLE SessionHandle,_In_ ULONG MessageFlags,_In_ LPGUID MessageGuid,_In_ USHORT MessageNumber,... None None)
HRESULT None ole32.OleCreateLinkToFileEx(_In_ LPCOLESTR lpszFileName,_In_ REFIID riid,_In_ DWORD dwFlags,_In_ DWORD renderopt,_In_ ULONG cFormats,_In_ DWORD *rgAdvf,_In_ LPFORMATETC rgFormatEtc,_In_ IAdviseSink *lpAdviseSink,_Out_ DWORD *rgdwConnection,_In_ LPOLECLIENTSITE pClientSite,_In_ LPSTORAGE pStg,_Out_ LPVOID *ppvObj)
BOOL None shell32.SignalFileOpen(_In_ PCIDLIST_ABSOLUTE pidl)
LONG WINAPI tapi32.lineDevSpecificFeature(HLINE hLine None,DWORD dwFeature None,LPVOID lpParams None,DWORD dwSize None)
uint32 None netpeerdistcim.Enable_BCServeOnBattery([in] boolean Force)
HRESULT WDSTRANSPORTPROVIDERAPI None.WdsTransportProviderCloseContent(_In_ HANDLE hContent)
BOOL None spoolss.DeletePrinter(_Inout_ HANDLE hPrinter)
public Object None.GetObject(String name None)
HRESULT None msdrm.DRMCloseEnvironmentHandle(_In_ DRMENVHANDLE hEnv)
BOOL WINAPI user32.DdeDisconnect(_In_ HCONV hConv)
HBITMAP None user32.LoadBitmap(_In_ HINSTANCE hInstance,_In_ LPCTSTR lpBitmapName)
HBITMAP None user32.LoadBitmapW(_In_ HINSTANCE hInstance,_In_ LPCTSTR lpBitmapName)
HBITMAP None user32.LoadBitmapA(_In_ HINSTANCE hInstance,_In_ LPCTSTR lpBitmapName)
HRESULT WDSCLIAPI wdsclientapi.WdsCliGetImageSize(_In_ HANDLE hIfh,_Out_ PULONGLONG pullValue)
HRESULT None msdrm.DRMAcquireIssuanceLicenseTemplate(_In_ DRMHSESSION hClient,_In_ UINT uFlags,_In_ VOID *pvReserved,_In_ UINT cReserved,_In_opt_ PWSTR *pwszReserved,_In_ PWSTR wszURL,_In_ VOID *pvContext)
HRESULT None None.setProxyCredentials(BSTR bstrUserName None,BSTR bstrPassword None)
HRESULT None msdrm.DRMSetNameAndDescription(_In_ DRMPUBHANDLE hIssuanceLicense,_In_ BOOL fDelete,_In_ UINT lcid,_In_ PWSTR wszName,_In_ PWSTR wszDescription)
DWORD WDSTCIAPI wdstptc.WdsTransportClientReleaseBuffer(_In_ PVOID pvBuffer)
SERVICE_STATUS_HANDLE WINAPI advapi32.RegisterServiceCtrlHandler(_In_ LPCTSTR lpServiceName,_In_ LPHANDLER_FUNCTION lpHandlerProc)
SERVICE_STATUS_HANDLE WINAPI advapi32.RegisterServiceCtrlHandlerW(_In_ LPCTSTR lpServiceName,_In_ LPHANDLER_FUNCTION lpHandlerProc)
SERVICE_STATUS_HANDLE WINAPI advapi32.RegisterServiceCtrlHandlerA(_In_ LPCTSTR lpServiceName,_In_ LPHANDLER_FUNCTION lpHandlerProc)
BOOL WINAPI ktmw32.ReadOnlyEnlistment(_In_ HANDLE EnlistmentHandle,_In_ PLARGE_INTEGER TmVirtualClock)
HRESULT None oleaut32.VarOr(_In_ LPVARIANT pvarLeft,_In_ LPVARIANT pvarRight,_Out_ LPVARIANT pvarResult)
HRESULT None None.GetVelocity(D3DVECTOR * pvVelocity)
uint32 None cimwin32.GetSecurityDescriptor([out] Win32_SecurityDescriptor Descriptor)
UINT None msi.MsiGetProductInfoFromScript(_In_ LPCTSTR szScriptFile,_Out_ LPTSTR lpProductBuf39,_Out_ LANGID *plgidLanguage,_Out_ DWORD *pdwVersion,_Out_ LPTSTR lpNameBuf,_Inout_ DWORD *pcchNameBuf,_Out_ LPTSTR lpPackageBuf,_Inout_ DWORD *pcchPackageBuf)
UINT None msi.MsiGetProductInfoFromScriptW(_In_ LPCTSTR szScriptFile,_Out_ LPTSTR lpProductBuf39,_Out_ LANGID *plgidLanguage,_Out_ DWORD *pdwVersion,_Out_ LPTSTR lpNameBuf,_Inout_ DWORD *pcchNameBuf,_Out_ LPTSTR lpPackageBuf,_Inout_ DWORD *pcchPackageBuf)
UINT None msi.MsiGetProductInfoFromScriptA(_In_ LPCTSTR szScriptFile,_Out_ LPTSTR lpProductBuf39,_Out_ LANGID *plgidLanguage,_Out_ DWORD *pdwVersion,_Out_ LPTSTR lpNameBuf,_Inout_ DWORD *pcchNameBuf,_Out_ LPTSTR lpPackageBuf,_Inout_ DWORD *pcchPackageBuf)
BOOL WINAPI kernel32.GetProcessTimes(_In_ HANDLE hProcess,_Out_ LPFILETIME lpCreationTime,_Out_ LPFILETIME lpExitTime,_Out_ LPFILETIME lpKernelTime,_Out_ LPFILETIME lpUserTime)
BOOL WINAPI wtsapi32.WTSCreateListener(_In_ HANDLE hServer,_In_ PVOID pReserved,_In_ DWORD Reserved,_In_ LPTSTR pListenerName,_In_ PWTSLISTENERCONFIG pBuffer,_In_ DWORD flag)
BOOL WINAPI wtsapi32.WTSCreateListenerW(_In_ HANDLE hServer,_In_ PVOID pReserved,_In_ DWORD Reserved,_In_ LPTSTR pListenerName,_In_ PWTSLISTENERCONFIG pBuffer,_In_ DWORD flag)
BOOL WINAPI wtsapi32.WTSCreateListenerA(_In_ HANDLE hServer,_In_ PVOID pReserved,_In_ DWORD Reserved,_In_ LPTSTR pListenerName,_In_ PWTSLISTENERCONFIG pBuffer,_In_ DWORD flag)
NTSTATUS None None.RtlInitializeSid(_Out_ PSID Sid,_In_ PSID_IDENTIFIER_AUTHORITY IdentifierAuthority,_In_ UCHAR SubAuthorityCount)
NET_API_STATUS None netapi32.NetWkstaTransportEnum(_In_ LPWSTR servername,_In_ DWORD level,_Out_ LPBYTE *bufptr,_In_ DWORD prefmaxlen,_Out_ LPDWORD entriesread,_Out_ LPDWORD totalentries,_Inout_ LPDWORD resumehandle)
HWND WINAPI user32.GetWindow(_In_ HWND hWnd,_In_ UINT uCmd)
HRESULT None None.Individualize(IWMDRMSecurity* pSecurity None)
HRESULT None None.put_UDPEnabled(VARIANT_BOOL fEnabled None)
VOID None None.FltFreeExtraCreateParameterList(_In_ PFLT_FILTER Filter,_In_ PECP_LIST EcpList)
BOOL WINAPI advapi32.OpenProcessToken(_In_ HANDLE ProcessHandle,_In_ DWORD DesiredAccess,_Out_ PHANDLE TokenHandle)
BOOL WINAPI dbghelp.SymGetLinePrev64(_In_ HANDLE hProcess,_Inout_ PIMAGEHLP_LINE64 Line)
BOOL WINAPI dbghelp.SymGetLinePrevW64(_In_ HANDLE hProcess,_Inout_ PIMAGEHLP_LINE64 Line)
BOOL WINAPI dbghelp.SymGetLinePrev64(_In_ HANDLE hProcess,_Inout_ PIMAGEHLP_LINE64 Line)
HRESULT None None.SetDirectSound(LPDIRECTSOUND pDirectSound None,LPDIRECTSOUNDBUFFER pDirectSoundBuffer None)
BOOL WINAPI user32.AnimateWindow(_In_ HWND hwnd,_In_ DWORD dwTime,_In_ DWORD dwFlags)
UINT None msi.MsiViewExecute(_In_ MSIHANDLE hView,_In_ MSIHANDLE hRecord)
HRESULT None None.get_preserveWhiteSpace(VARIANT_BOOL *isPreserving None)
HRESULT STDAPI cldapi.CfSetPinState(_In_ HANDLE FileHandle,_In_ CF_PIN_STATE PinState,_In_ CF_SET_PIN_FLAGS PinFlags,_Inout_opt_ LPOVERLAPPED Overlapped)
SECURITY_STATUS None None.SspiEncryptAuthIdentityEx(_In_ ULONG Options,_Inout_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE AuthData)
ULONG STDMETHODCALLTYPE ole32.CStdAsyncStubBuffer_Release(_In_ IRpcStubBuffer *pthis)
DWORD WINAPI shlwapi.ThreadProc(LPVOID pData None)
HRESULT None None.SendSingleTransMessage(LPCWSTR wszDestFormatName None)
void None None.HSSetShader(ID3D11HullShader *pHullShader None,ID3D11ClassInstance *const *ppClassInstances,UINT NumClassInstances None)
HRESULT None None.appendData(BSTR data None)
HRESULT None faxcom.get_CanModify([out None None,retval] BSTR *pVal)
HRESULT WINAPI webservices.WsAbortServiceProxy(_In_ WS_SERVICE_PROXY* serviceProxy,_In_opt_ WS_ERROR* error)
HRESULT None None.GetVertexDeclaration([out] IDirect3DVertexDeclaration9 **ppDecl)
BOOL WINAPI dbghelp.SymPrev(_In_ HANDLE hProcess,_Inout_ PSYMBOL_INFO Symbol)
BOOL WINAPI dbghelp.SymPrevW(_In_ HANDLE hProcess,_Inout_ PSYMBOL_INFO Symbol)
BOOL WINAPI dbghelp.SymPrev(_In_ HANDLE hProcess,_Inout_ PSYMBOL_INFO Symbol)
EVT_HANDLE WINAPI wevtapi.EvtOpenEventMetadataEnum(_In_ EVT_HANDLE PublisherMetadata,_In_ DWORD Flags)
HRESULT None dcomp.CreateSkewTransform([out] IDCompositionSkewTransform **skewTransform)
BOOL WINAPI kernel32.QueryWorkingSetEx(_In_ HANDLE hProcess,_Inout_ PVOID pv,_In_ DWORD cb)
HRESULT WINAPI dismapi.DismGetFeatures(_In_ DismSession Session,_In_opt_ PCWSTR Identifier,_In_opt_ DismPackageIdentifier PackageIdentifier,_Out_ DismFeature **Feature,_Out_ UINT *Count)
public None None.FormattedText(String textToFormat None,CultureInfo culture None,FlowDirection flowDirection None,Typeface typeface None,double emSize None,Brush foreground None)
HRESULT None None.UShortAdd(_In_ USHORT usAugend,_In_ USHORT usAddend,_Out_ USHORT *pusResult)
uint32 None dfsrwmiv2.Fence([in] uint8 Mode,[in] string FilePath,[in] boolean IsRecursive)
HRESULT None None.IntSub(_In_ INT iMinuend,_In_ INT iSubtrahend,_Out_ INT *piResult)
BOOL WINAPI None.WIMSetReferenceFile(HANDLE hWim None,PWSTR pszPath None,DWORD dwFlags None)
protected void None.OnPreviewDrop(DragEventArgs e None)
HRESULT None None.get_attributes(ISchemaItemCollection** attributes None)
DWORD None None.SetNPPTriggerInBlob(HBLOB hBlob None,LPTRIGGER pTrigger None,HBLOB hErrorBlob None)
HRESULT None windowscodecs.IWICPalette_HasAlpha_Proxy(_In_ IWICPalette *THIS_PTR,_Out_ BOOL *pfHasAlpha)
uint32 None netpeerdistcim.Enable_BCHostedClientByServerNames([in] string ServerNames[],[in] uint32 UseVersion,[in] string PolicyStore,[in] boolean Force)
NTSTATUS WINAPI certpoleng.PstGetCertificates(_In_ PUNICODE_STRING pTargetName,_In_ DWORD cCriteria,_In_opt_ PCCERT_SELECT_CRITERIA rgpCriteria,_In_ BOOL bIsClient,_Out_ PDWORD pdwCertChainContextCount,_Out_ PCCERT_CHAIN_CONTEXT **ppCertChainContexts)
SECURITY_STATUS None sspicli.SspiEncryptAuthIdentity(_Inout_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE AuthData)
public PackageRelationship None.GetRelationship(String id None)
BOOL None shell32.ShellExecuteEx(_Inout_ SHELLEXECUTEINFO *pExecInfo)
BOOL None shell32.ShellExecuteExW(_Inout_ SHELLEXECUTEINFO *pExecInfo)
BOOL None shell32.ShellExecuteExA(_Inout_ SHELLEXECUTEINFO *pExecInfo)
HRESULT None windowscodecs.IWICBitmapFrameEncode_Commit_Proxy(_In_ IWICBitmapFrameEncode *THIS_PTR)
float None None.ToSingle(IFormatProvider provider None)
DWORD WINAPI resutils.ResUtilVerifyResourceService(_In_ LPCWSTR pszServiceName)
HRESULT None None.GetTool(DWORD dwIndex None,IDirectMusicTool** ppTool None)
BOOL WINAPI user32.IsWindowEnabled(_In_ HWND hWnd)
MCIDEVICEID None winmm.mciGetDeviceIDFromElementID(DWORD dwElementID None,LPCTSTR lpstrType None)
MCIDEVICEID None winmm.mciGetDeviceIDFromElementIDW(DWORD dwElementID None,LPCTSTR lpstrType None)
MCIDEVICEID None winmm.mciGetDeviceIDFromElementIDA(DWORD dwElementID None,LPCTSTR lpstrType None)
HRESULT None windowscodecs.IWICImagingFactory_CreateBitmapClipper_Proxy(_In_ IWICImagingFactory *pFactory,_Out_ IWICBitmapClipper **ppIBitmapClipper)
HRESULT None ole32.OleIsCurrentClipboard(_In_ LPDATAOBJECT pDataObj)
BOOL WINAPI advapi32.EnumDependentServices(_In_ SC_HANDLE hService,_In_ DWORD dwServiceState,_Out_opt_ LPENUM_SERVICE_STATUS lpServices,_In_ DWORD cbBufSize,_Out_ LPDWORD pcbBytesNeeded,_Out_ LPDWORD lpServicesReturned)
BOOL WINAPI advapi32.EnumDependentServicesW(_In_ SC_HANDLE hService,_In_ DWORD dwServiceState,_Out_opt_ LPENUM_SERVICE_STATUS lpServices,_In_ DWORD cbBufSize,_Out_ LPDWORD pcbBytesNeeded,_Out_ LPDWORD lpServicesReturned)
BOOL WINAPI advapi32.EnumDependentServicesA(_In_ SC_HANDLE hService,_In_ DWORD dwServiceState,_Out_opt_ LPENUM_SERVICE_STATUS lpServices,_In_ DWORD cbBufSize,_Out_ LPDWORD pcbBytesNeeded,_Out_ LPDWORD lpServicesReturned)
DWORD PXEAPI wdspxe.PxeProviderEnumClose(_In_ HANDLE hEnum)
protected Visual None.GetVisualChild(int index None)
HRESULT None oleacc.SelectItemAtPoint(POINT point None)
HRESULT None None.GetCaps(LPDSCAPS pDSCaps None)
PSSTDAPI None propsys.PSGetNamedPropertyFromPropertyStorage(_In_ PCUSERIALIZEDPROPSTORAGE psps,_In_ DWORD cb,_In_ LPCWSTR pszName,_Out_ PROPVARIANT *ppropvar)
VOID None None.MQFreeMemory(PVOID pvMemory None)
BOOL WINAPI resutils.ResUtilResourceTypesEqual(_In_ LPCWSTR lpszResourceTypeName,_In_ HRESOURCE hResource)
HRESULT None None.get_notations(IXMLDOMNamedNodeMap **notationMap None)
DWORD PXEAPI wdspxe.PxePacketFree(_In_ HANDLE hProvider,_In_ HANDLE hClientRequest,_In_ PVOID pPacket)
DWORD WINAPI clusapi.ClusterGroupCloseEnum(_In_ HGROUPENUM hGroupEnum)
UINT None msi.MsiSourceListAddSource(_In_ LPCTSTR szProduct,_In_ LPCTSTR szUserName,_In_ DWORD dwReserved,_In_ LPCTSTR szSource)
UINT None msi.MsiSourceListAddSourceW(_In_ LPCTSTR szProduct,_In_ LPCTSTR szUserName,_In_ DWORD dwReserved,_In_ LPCTSTR szSource)
UINT None msi.MsiSourceListAddSourceA(_In_ LPCTSTR szProduct,_In_ LPCTSTR szUserName,_In_ DWORD dwReserved,_In_ LPCTSTR szSource)
HRESULT None srmsvc.get_OwnerSid([out] BSTR *ownerSid)
VOID None None.NdisMIndicateStatus(_In_ NDIS_HANDLE MiniportAdapterHandle,_In_ NDIS_STATUS GeneralStatus,_In_ PVOID StatusBuffer,_In_ UINT StatusBufferSize)
LPBYTE WINAPI user32.DdeAccessData(_In_ HDDEDATA hData,_Out_opt_ LPDWORD pcbDataSize)
BOOL WINAPI wecapi.EcSetObjectArrayProperty(_In_ EC_OBJECT_ARRAY_PROPERTY_HANDLE ObjectArray,_In_ EC_SUBSCRIPTION_PROPERTY_ID PropertyId,_In_ DWORD ArrayIndex,_In_ DWORD Flags,_In_ PEC_VARIANT PropertyValue)
HRESULT APIENTRY None.MQReceiveMessageByLookupId(QUEUEHANDLE hSource None,ULONGLONG ullLookupId None,DWORD dwLookupAction None,MQMSGPROPS * pMessageProps,LPOVERLAPPED lpOverlapped None,PMQRECEIVECALLBACK fnReceiveCallback None,ITransaction * pTransaction)
DWORD WINAPI wlanapi.WlanSetSecuritySettings(_In_ HANDLE hClientHandle,_In_ WLAN_SECURABLE_OBJECT SecurableObject,_In_ LPCWSTR strModifiedSDDL)
RPC_STATUS RPC_ENTRY rpcrt4.RpcAsyncGetCallStatus(PRPC_ASYNC_STATE pAsync None)
HRESULT None None.get_ImportedVolumeName([out] BSTR *pVal)
HRESULT None None.CalculateDiscIdentifier([out] BSTR *discIdentifier)
HRESULT APIENTRY None.MQGetPrivateComputerInformation(LPCWSTR lpwcsComputerName None,MQPRIVATEPROPS * pPrivateProps)
HRESULT None None.get_FileSystemsSupported([out] FsiFileSystems *pVal)
NTSTATUS None advapi32.LsaCreateTrustedDomainEx(_In_ LSA_HANDLE PolicyHandle,_In_ PTRUSTED_DOMAIN_INFORMATION_EX TrustedDomainInformation,_In_ PTRUSTED_DOMAIN_AUTH_INFORMATION AuthenticationInformation,_In_ ACCESS_MASK DesiredAccess,_Out_ PLSA_HANDLE TrustedDomainHandle)
HRESULT None gpedit.CreateGPOLink(_In_ LPOLESTR lpGPO,_In_ LPOLESTR lpContainer,_In_ BOOL fHighPriority)
HRESULT APIENTRY None.MQReceiveMessage(QUEUEHANDLE hSource None,DWORD dwTimeout None,DWORD dwAction None,MQMSGPROPS * pMessageProps,LPOVERLAPPED lpOverlapped None,PMQRECEIVECALLBACK fnReceiveCallback None,HANDLE hCursor None,ITransaction * pTransaction)
HRESULT None None.put_DestinationMulticastIPAddress(BSTR bstrMulticastIpAddress None)
HRESULT None None.HandleConfirmationOfOurXln([in] DTXLUXLNCONFIRMATION Confirmation)
HRESULT None None.get_data(BSTR *value None)
NTSTATUS None None.ZwOpenTransaction(_Out_ PHANDLE TransactionHandle,_In_ ACCESS_MASK DesiredAccess,_In_opt_ POBJECT_ATTRIBUTES ObjectAttributes,_In_ LPGUID Uow,_In_opt_ HANDLE TmHandle)
HRESULT WINAPI iscsidsc.SetIscsiInitiatorCHAPSharedSecret(_In_ ULONG SharedSecretLength,_In_ PUCHAR SharedSecret)
HICON WINAPI user32.CopyIcon(_In_ HICON hIcon)
HRESULT None None.PrepareRequestDone(HRESULT hr None,IMoniker * pmk,BOID * pboidReason)
BOOL WINAPI dbghelp.EnumerateLoadedModulesEx(_In_ HANDLE hProcess,_In_ PENUMLOADED_MODULES_CALLBACK64 EnumLoadedModulesCallback,_In_opt_ PVOID UserContext)
BOOL WINAPI dbghelp.EnumerateLoadedModulesExW(_In_ HANDLE hProcess,_In_ PENUMLOADED_MODULES_CALLBACK64 EnumLoadedModulesCallback,_In_opt_ PVOID UserContext)
BOOL WINAPI dbghelp.EnumerateLoadedModulesEx(_In_ HANDLE hProcess,_In_ PENUMLOADED_MODULES_CALLBACK64 EnumLoadedModulesCallback,_In_opt_ PVOID UserContext)
SECURITY_STATUS SEC_Entry secur32.InitializeSecurityContext(_In_opt_ PCredHandle phCredential,_In_opt_ PCtxtHandle phContext,_In_opt_ SEC_CHAR *pszTargetName,_In_ ULONG fContextReq,_In_ ULONG Reserved1,_In_ ULONG TargetDataRep,_In_opt_ PSecBufferDesc pInput,_In_ ULONG Reserved2,_Inout_opt_ PCtxtHandle phNewContext,_Inout_opt_ PSecBufferDesc pOutput,_Out_ PULONG pfContextAttr,_Out_opt_ PTimeStamp ptsExpiry)
SECURITY_STATUS SEC_Entry secur32.InitializeSecurityContextW(_In_opt_ PCredHandle phCredential,_In_opt_ PCtxtHandle phContext,_In_opt_ SEC_CHAR *pszTargetName,_In_ ULONG fContextReq,_In_ ULONG Reserved1,_In_ ULONG TargetDataRep,_In_opt_ PSecBufferDesc pInput,_In_ ULONG Reserved2,_Inout_opt_ PCtxtHandle phNewContext,_Inout_opt_ PSecBufferDesc pOutput,_Out_ PULONG pfContextAttr,_Out_opt_ PTimeStamp ptsExpiry)
SECURITY_STATUS SEC_Entry secur32.InitializeSecurityContextA(_In_opt_ PCredHandle phCredential,_In_opt_ PCtxtHandle phContext,_In_opt_ SEC_CHAR *pszTargetName,_In_ ULONG fContextReq,_In_ ULONG Reserved1,_In_ ULONG TargetDataRep,_In_opt_ PSecBufferDesc pInput,_In_ ULONG Reserved2,_Inout_opt_ PCtxtHandle phNewContext,_Inout_opt_ PSecBufferDesc pOutput,_Out_ PULONG pfContextAttr,_Out_opt_ PTimeStamp ptsExpiry)
HRESULT None None.GetRequestId([out None None,retval] LPWSTR *requestId)
BOOL WINAPI advapi32.CryptSignHash(_In_ HCRYPTHASH hHash,_In_ DWORD dwKeySpec,_In_ LPCTSTR sDescription,_In_ DWORD dwFlags,_Out_ BYTE *pbSignature,_Inout_ DWORD *pdwSigLen)
BOOL WINAPI advapi32.CryptSignHashW(_In_ HCRYPTHASH hHash,_In_ DWORD dwKeySpec,_In_ LPCTSTR sDescription,_In_ DWORD dwFlags,_Out_ BYTE *pbSignature,_Inout_ DWORD *pdwSigLen)
BOOL WINAPI advapi32.CryptSignHashA(_In_ HCRYPTHASH hHash,_In_ DWORD dwKeySpec,_In_ LPCTSTR sDescription,_In_ DWORD dwFlags,_Out_ BYTE *pbSignature,_Inout_ DWORD *pdwSigLen)
MI_INLINE MI_Result None.MI_OperationOptions_SetPromptUserMode(_Inout_ MI_OperationOptions *options,_In_ MI_CallbackMode mode)
BOOL WINAPI kernel32.AddScopedPolicyIDAce(_Inout_ PACL pAcl,_In_ DWORD dwAceRevision,_In_ DWORD AceFlags,_In_ DWORD AccessMask,_In_ PSID pSid)
HRESULT None None.GetAdvisoryPageDimensions([out None None,retval] XPS_SIZE *pageDimensions)
HRESULT None None.get_GuestOS([out] IVMGuestOS **guestOS)
T None None.XMMin([in] T a,[in] T b)
HRESULT WINAPI webservices.WsReadNode(_In_ WS_XML_READER* reader,_In_opt_ WS_ERROR* error)
public void None.InvalidateProperty(DependencyProperty dp None)
HRESULT WINAPI webservices.WsEndReaderCanonicalization(_In_ WS_XML_READER* reader,_In_opt_ WS_ERROR* error)
HANDLE WINAPI None.WIMCreateFile(PWSTR pszWimPath None,DWORD dwDesiredAccess None,DWORD dwCreationDisposition None,DWORD dwFlagsAndAttributes None,DWORD dwCompressionType None,PDWORD pdwCreationResult None)
uint32 None wvrcimprov.SetGroupAddVolumes([in] string ComputerName,[in] string Name,[in] string AddVolumeName[])
void None None.Rollback(Enlistment enlistment None)
HTHEME None uxtheme.OpenThemeData(_In_ HWND hwnd,_In_ LPCWSTR pszClassList)
PVOID None None.ExAllocatePoolWithTag(_In_ POOL_TYPE PoolType,_In_ SIZE_T NumberOfBytes,_In_ ULONG Tag)
BOOL None None.SetJob(_In_ HANDLE hPrinter,_In_ DWORD JobId,_In_ DWORD Level,_In_ LPBYTE pJob,_In_ DWORD Command)
BOOL None None.SetJobW(_In_ HANDLE hPrinter,_In_ DWORD JobId,_In_ DWORD Level,_In_ LPBYTE pJob,_In_ DWORD Command)
BOOL None None.SetJobA(_In_ HANDLE hPrinter,_In_ DWORD JobId,_In_ DWORD Level,_In_ LPBYTE pJob,_In_ DWORD Command)
BOOL None wtsapi32.WTSEnumerateServers(_In_ LPTSTR pDomainName,_In_ DWORD Reserved,_In_ DWORD Version,PWTS_SERVER_INFO *ppServerInfo None,DWORD *pCount None)
BOOL None wtsapi32.WTSEnumerateServersW(_In_ LPTSTR pDomainName,_In_ DWORD Reserved,_In_ DWORD Version,PWTS_SERVER_INFO *ppServerInfo None,DWORD *pCount None)
BOOL None wtsapi32.WTSEnumerateServersA(_In_ LPTSTR pDomainName,_In_ DWORD Reserved,_In_ DWORD Version,PWTS_SERVER_INFO *ppServerInfo None,DWORD *pCount None)
DWORD WINAPI None.WIMGetMessagecallbackCount(HANDLE hWim None)
LONG WINAPI advapi32.RegGetKeySecurity(_In_ HKEY hKey,_In_ SECURITY_INFORMATION SecurityInformation,_Out_opt_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_Inout_ LPDWORD lpcbSecurityDescriptor)
LPTSTR None None.MAKEINTRESOURCE(WORD wInteger None)
public void None.Abort(Object stateInfo None)
BOOL WINAPI kernel32.DebugActiveProcess(_In_ DWORD dwProcessId)
BOOL WINAPI resutils.ClusWorkerCheckTerminate(_In_ PCLUS_WORKER lpWorker)
BOOL WINAPI ktmw32.RollbackEnlistment(_In_ HANDLE EnlistmentHandle,_In_ PLARGE_INTEGER TmVirtualClock)
HRESULT None None.get_AddEnabled([out None None,retval] VARIANT_BOOL *pVarBool)
BOOL WINAPI kernel32.RequestWakeupLatency(_In_ LATENCY_TIME latency)
HRESULT None None.GetCertificateEmbeddingOption([out None None,retval] OPC_CERTIFICATE_EMBEDDING_OPTION *embeddingOption)
protected void None.OnStylusButtonDown(StylusButtonEventArgs e None)
HRESULT APIENTRY None.MQLocateBegin(LPCWSTR lpwcsContext None,MQRESTRICTION * pRestriction,MQCOLUMNSET * pColumns,MQSORTSET * pSort,PHANDLE phEnum None)
HRESULT None None.GetSourceDisplayName([out] LPOLESTR *ppszDisplayName)
protected void None.OnPreviewStylusDown(StylusDownEventArgs e None)
HANDLE None shell32.PifMgr_OpenProperties(_In_ PCWSTR pszApp,_In_opt_ PCWSTR lpszPIF,UINT hInf None,UINT flOpt None)
public void None.SetFontSize(double emSize None)
BOOL WINAPI magnification.MagShowSystemCursor(_In_ BOOL fShowCursor)
BOOL None kernel32.GetCPInfo(_In_ UINT CodePage,_Out_ LPCPINFO lpCPInfo)
WINOLEAPI None ole32.ReadClassStm(_In_ IStream *pStm,_Out_ CLSID *pclsid)
NET_API_STATUS None netapi32.NetSessionGetInfo(_In_ LPWSTR servername,_In_ LPWSTR UncClientName,_In_ LPWSTR username,_In_ DWORD level,_Out_ LPBYTE *bufptr)
UINT None msi.MsiProcessAdvertiseScript(_In_ LPCTSTR szScriptFile,_In_ LPCTSTR szIconFolder,_In_ HKEY hRegData,_In_ BOOL fShortcuts,_In_ BOOL fRemoveItems)
UINT None msi.MsiProcessAdvertiseScriptW(_In_ LPCTSTR szScriptFile,_In_ LPCTSTR szIconFolder,_In_ HKEY hRegData,_In_ BOOL fShortcuts,_In_ BOOL fRemoveItems)
UINT None msi.MsiProcessAdvertiseScriptA(_In_ LPCTSTR szScriptFile,_In_ LPCTSTR szIconFolder,_In_ HKEY hRegData,_In_ BOOL fShortcuts,_In_ BOOL fRemoveItems)
NTSTATUS NTAPI None.SpExchangeMetaDataFn(_In_ LSA_SEC_HANDLE CredentialHandle,_In_opt_ PUNICODE_STRING TargetName,_In_ ULONG ContextRequirements,_In_ ULONG MetaDataLength,_In_ PUCHAR MetaData,_Inout_ PLSA_SEC_HANDLE ContextHandle)
public None None.ResXResourceReader(String fileName None)
MSIDBSTATE None msi.MsiGetDatabaseState(_In_ MSIHANDLE hDatabase)
HANDLE None wtsapi32.WTSOpenServer(_In_ LPTSTR pServerName)
HANDLE None wtsapi32.WTSOpenServerW(_In_ LPTSTR pServerName)
HANDLE None wtsapi32.WTSOpenServerA(_In_ LPTSTR pServerName)
HRESULT None None.CreateCertificateChain(__in PCCERT_CONTEXT certificate,__in HCERTSTORE certificateStore,__out PCCERT_CHAIN_CONTEXT* certificateChain)
BOOL WINAPI clfsw32.ReadLogArchiveMetadata(_In_ CLFS_LOG_ARCHIVE_CONTEXT pvArchiveContext,_In_ ULONG cbOffset,_In_ ULONG cbBytesToRead,_Inout_ PBYTE pbReadBuffer,_Out_ PULONG pcbBytesRead)
UINT_PTR CALLBACK None.PagePaintHook(_In_ HWND hdlg,_In_ UINT uiMsg,_In_ WPARAM wParam,_In_ LPARAM lParam)
HRESULT None azroles.get_PolicyAdministrators([out] VARIANT *pvarAdmins)
HRESULT None mf.MFCreateADTSMediaSink(_In_ IMFByteStream *pTargetByteStream,_In_ IMFMediaType *pAudioMediaType,_Out_ IMFMediaSink **ppMediaSink)
HRESULT None None.Notify(UINT NotificationMask None)
BOOL WINAPI clfsw32.FreeReservedLog(_Inout_ PVOID pvMarshal,_In_ ULONG cReservedRecords,_Inout_ PLONGLONG pcbAdjustment)
HRESULT WINAPI mssign32.SignerTimeStampEx2(_Reserved_ DWORD dwFlags,_In_ SIGNER_SUBJECT_INFO *pSubjectInfo,_In_ LPCWSTR pwszHttpTimeStamp,_In_ ALG_ID dwAlgId,_In_ PCRYPT_ATTRIBUTES psRequest,_In_ LPVOID pSipData,_Out_ SIGNER_CONTEXT **ppSignerContext)
HRESULT APIENTRY None.MQRegisterCertificate(DWORD dwFlags None,PVOID lpCertBuffer None,DWORD dwCertBufferLength None)
PVOID None None.ExAllocatePoolWithTagPriority(_In_ POOL_TYPE PoolType,_In_ SIZE_T NumberOfBytes,_In_ ULONG Tag,_In_ EX_POOL_PRIORITY Priority)
typedef NTSTATUS None.EVT_SERCX_PURGE(__in WDFDEVICE Device,__in ULONG PurgeMask)
BOOL WINAPI user32.EnumWindows(_In_ WNDENUMPROC lpEnumFunc,_In_ LPARAM lParam)
HRESULT None None.get_item(long index None,IXMLDOMNode **listItem None)
HRESULT None None.SetXAAccess(BOOL bXAAccess None)
HRESULT None windowscodecs.GetPreview([out] IWICBitmapSource **ppIBitmapSource)
NET_API_STATUS None netapi32.NetWkstaUserGetInfo(LPWSTR reserved None,_In_ DWORD level,_Out_ LPBYTE *bufptr)
BOOL WINAPI advapi32.AddAccessDeniedObjectAce(_Inout_ PACL pAcl,_In_ DWORD dwAceRevision,_In_ DWORD AceFlags,_In_ DWORD AccessMask,_In_opt_ GUID *ObjectTypeGuid,_In_opt_ GUID *InheritedObjectTypeGuid,_In_ PSID pSid)
BOOL CALLBACK None.SymFindFileInPathProc(_In_ PCTSTR fileName,_In_ PVOID context)
HRESULT None None.get_PeakCounters(IWMSServerPeakCounters** pVal None)
HRESULT WINAPI iscsidsc.ReportIscsiPersistentLogins(_Out_ ULONG *Count,_Inout_ PPERSISTENT_ISCSI_LOGIN_INFO PersistentLoginInfo,_Inout_ PULONG BufferSizeInBytes)
HRESULT WINAPI iscsidsc.ReportIscsiPersistentLoginsW(_Out_ ULONG *Count,_Inout_ PPERSISTENT_ISCSI_LOGIN_INFO PersistentLoginInfo,_Inout_ PULONG BufferSizeInBytes)
HRESULT WINAPI iscsidsc.ReportIscsiPersistentLoginsA(_Out_ ULONG *Count,_Inout_ PPERSISTENT_ISCSI_LOGIN_INFO PersistentLoginInfo,_Inout_ PULONG BufferSizeInBytes)
HRESULT None None.DWordMult(_In_ DWORD dwMultiplicand,_In_ DWORD dwMultiplier,_Out_ DWORD *pdwResult)
PVOID WINAPI dbghelp.ImageDirectoryEntryToDataEx(_In_ PVOID Base,_In_ BOOLEAN MappedAsImage,_In_ USHORT DirectoryEntry,_Out_ PULONG Size,_Out_opt_ PIMAGE_SECTION_HEADER *FoundHeader)
NTSTATUS WINAPI ntdll.NtQuerySystemTime(_Out_ PLARGE_INTEGER SystemTime)
BOOL WINAPI kernel32.CreateUmsThreadContext(_Out_ PUMS_CONTEXT *lpUmsThread)
NETIO_STATUS WINAPI iphlpapi.ConvertInterfaceIndexToLuid(_In_ NET_IFINDEX InterfaceIndex,_Out_ PNET_LUID InterfaceLuid)
HRESULT None None.GetOpacityMaskBrushLocal([out None None,retval] IXpsOMBrush **opacityMaskBrush)
HRESULT None None.GetClipGeometryLookup([out None None,retval] LPWSTR *key)
uint32 None wvrcimprov.RemovePartnership([in] string SourceComputerName,[in] string SourceRGName,[in] string DestinationComputerName,[in] string DestinationRGName,[in] boolean IgnoreRemovalFailure)
DWORD None None.RegCreateBlobKey(HKEY hkey None,const char* szBlobName,HBLOB hBlob None)
uint32 None netpeerdistcim.Enable_BCDistributed([in] string PolicyStore,[in] boolean Force)
BOOL IMAGEAPI dbghelp.SymQueryInlineTrace(_In_ HANDLE hProcess,_In_ DWORD64 StartAddress,_In_ DWORD StartContext,_In_ DWORD64 StartRetAddress,_In_ DWORD64 CurAddress,_Out_ LPDWORD CurContext,_Out_ LPDWORD CurFrameIndex)
HGLOBAL None ole32.OleMetafilePictFromIconAndLabel(_In_ HICON hIcon,_In_ LPOLESTR lpszLabel,_In_ LPOLESTR lpszSourceFile,_In_ UINT iIconIndex)
protected void None.OnGroupStyleSelectorChanged(GroupStyleSelector oldGroupStyleSelector None,GroupStyleSelector newGroupStyleSelector None)
IHierarchyData None None.GetHierarchyData(Object enumeratedItem None)
void None None.GetDimensions(out uint dim)
HRESULT None None.GetSubSystem([out] IVdsSubSystem **ppSubSystem)
BOOL None wtsapi32.WTSDisconnectSession(_In_ HANDLE hServer,_In_ DWORD SessionId,_In_ BOOL bWait)
HRESULT None msdrm.DRMEncode(_In_ PWSTR wszAlgID,_In_ UINT uDataLen,_In_ BYTE *pbDecodedData,_Inout_ UINT *puEncodedStringLen,_Out_ PWSTR wszEncodedString)
LONG WINAPI tapi32.lineSetCallPrivilege(HCALL hCall None,DWORD dwCallPrivilege None)
DIALOG_DPI_CHANGE_BEHAVIORS WINAPI user32.GetDialogDpiChangeBehavior(HWDN hDlg None)
DWORD WINAPI clusapi.OfflineClusterResource(_In_ HRESOURCE hResource)
HRESULT None azroles.get_UserGuid([out] BSTR *pbstrProp)
BOOL None kernel32.GetLogicalProcessorInformationEx(_In_ LOGICAL_PROCESSOR_RELATIONSHIP RelationshipType,_Out_opt_ PSYSTEM_LOGICAL_PROCESSOR_INFORMATION_EX Buffer,_Inout_ PDWORD ReturnedLength)
VOID WINAPI kernel32.Sleep(_In_ DWORD dwMilliseconds)
BOOL WINAPI kernel32.SetFirmwareEnvironmentVariable(_In_ LPCTSTR lpName,_In_ LPCTSTR lpGuid,_In_ PVOID pBuffer,_In_ DWORD nSize)
BOOL WINAPI kernel32.SetFirmwareEnvironmentVariableW(_In_ LPCTSTR lpName,_In_ LPCTSTR lpGuid,_In_ PVOID pBuffer,_In_ DWORD nSize)
BOOL WINAPI kernel32.SetFirmwareEnvironmentVariableA(_In_ LPCTSTR lpName,_In_ LPCTSTR lpGuid,_In_ PVOID pBuffer,_In_ DWORD nSize)
DWORD PXEAPI wdspxe.PxeDhcpv6AppendOption(_Inout_ PVOID pReply,_In_ ULONG cbReply,_Inout_ PULONG pcbReplyUsed,_In_ WORD wOptionType,_In_ WORD cbOption,_In_ PVOID pOption)
uint32 None cimwin32.GetSecurityDescriptor([out] Win32_SecurityDescriptor Descriptor)
DWORD PXEAPI wdspxe.PxeTrace(_In_ HANDLE hProvider,_In_ PXE_SEVERITY Severity,_In_ LPCWSTR pszFormat,... None None)
BOOL WINAPI resutils.ClusterIsPathOnSharedVolume(_In_ LPCWSTR lpszPathName)
boolean None None.CanExecute(Object parameter None)
BOOL WINAPI user32.DdeImpersonateClient(_In_ HCONV hConv)
HRESULT None ole32.StgOpenStorageOnILockBytes(_In_ ILockBytes *plkbyt,_In_ IStorage *pStgPriority,_In_ DWORD grfMode,_In_ SNB snbExclude,_In_ DWORD reserved,_Out_ IStorage **ppstgOpen)
UINT None msi.MsiSourceListEnumSources(_In_ LPCTSTR szProductCodeOrPatchCode,_In_opt_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD dwOptions,_In_ DWORD dwIndex,_In_opt_ LPTSTR szSource,_Inout_opt_ LPDWORD pcchSource)
UINT None msi.MsiSourceListEnumSourcesW(_In_ LPCTSTR szProductCodeOrPatchCode,_In_opt_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD dwOptions,_In_ DWORD dwIndex,_In_opt_ LPTSTR szSource,_Inout_opt_ LPDWORD pcchSource)
UINT None msi.MsiSourceListEnumSourcesA(_In_ LPCTSTR szProductCodeOrPatchCode,_In_opt_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD dwOptions,_In_ DWORD dwIndex,_In_opt_ LPTSTR szSource,_Inout_opt_ LPDWORD pcchSource)
UINT None msi.MsiSourceListForceResolutionEx(_In_ LPCTSTR szProductCodeOrPatchCode,_In_opt_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD dwOptions)
UINT None msi.MsiSourceListForceResolutionExW(_In_ LPCTSTR szProductCodeOrPatchCode,_In_opt_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD dwOptions)
UINT None msi.MsiSourceListForceResolutionExA(_In_ LPCTSTR szProductCodeOrPatchCode,_In_opt_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD dwOptions)
public void None.FillPath(Brush brush None,GraphicsPath path None)
HRESULT None azroles.get_Operations([out] VARIANT *pvarProp)
HRESULT None None.get_DirectoryCount([out] LONG *pVal)
UINT None msi.MsiInstallMissingFile(_In_ LPCTSTR szProduct,_In_ LPCTSTR szFile)
UINT None msi.MsiInstallMissingFileW(_In_ LPCTSTR szProduct,_In_ LPCTSTR szFile)
UINT None msi.MsiInstallMissingFileA(_In_ LPCTSTR szProduct,_In_ LPCTSTR szFile)
HRESULT None mfplat.MFBeginRegisterWorkQueueWithMMCSSEx(_In_ DWORD dwWorkQueueId,_In_ LPCWSTR wszClass,_In_ DWORD dwTaskId,_In_ LONG lPriority,_In_ IMFAsyncCallback *pDoneCallback,_In_ IUnknown *pDoneState)
BOOL WINAPI kernel32.VirtualFree(_In_ LPVOID lpAddress,_In_ SIZE_T dwSize,_In_ DWORD dwFreeType)
protected boolean None.MouseEnterUnsharesRow(int rowIndex None)
HRESULT APIENTRY None.MQCloseCursor(HANDLE hCursor None)
HRESULT None oleaut32.SafeArraySetRecordInfo(_In_ SAFEARRAY *psa,_In_ IRecordInfo *prinfo)
HRESULT None None.get_Count(long* pVal None)
BOOL None shlwapi.IsOS(_In_ DWORD dwOS)
BOOL WINAPI user32.GetGUIThreadInfo(_In_ DWORD idThread,_Inout_ LPGUITHREADINFO lpgui)
LSTATUS None shlwapi.SHDeleteEmptyKey(_In_ HKEY hkey,_In_opt_ LPCTSTR pszSubKey)
LSTATUS None shlwapi.SHDeleteEmptyKeyW(_In_ HKEY hkey,_In_opt_ LPCTSTR pszSubKey)
LSTATUS None shlwapi.SHDeleteEmptyKeyA(_In_ HKEY hkey,_In_opt_ LPCTSTR pszSubKey)
HRESULT None None.get_parseError(IXMLDOMParseError **errorObj None)
HRESULT None None.transform(VARIANT_BOOL* pDone None)
BOOL WINAPI kernel32.EnumDeviceDrivers(_Out_ LPVOID *lpImageBase,_In_ DWORD cb,_Out_ LPDWORD lpcbNeeded)
BOOL WINAPI wevtapi.EvtGetEventMetadataProperty(_In_ EVT_HANDLE EventMetadata,_In_ EVT_EVENT_METADATA_PROPERTY_ID PropertyId,_In_ DWORD Flags,_In_ DWORD EventMetadataPropertyBufferSize,_In_ PEVT_VARIANT EventMetadataPropertyBuffer,_Out_ PDWORD EventMetadataPropertyBufferUsed)
EDITWORDBREAKPROC None None.Edit_GetWordBreakProc(HWND hwndCtl None)
DateTime None None.ToDateTime(IFormatProvider provider None)
HRESULT None None.Activate(BOOL fActive None)
NTSTATUS None None.FltCreateFileEx(_In_ PFLT_FILTER Filter,_In_opt_ PFLT_INSTANCE Instance,_Out_ PHANDLE FileHandle,_Out_ PFILE_OBJECT *FileObject,_In_ ACCESS_MASK DesiredAccess,_In_ POBJECT_ATTRIBUTES ObjectAttributes,_Out_ PIO_STATUS_BLOCK IoStatusBlock,_In_opt_ PLARGE_INTEGER AllocationSize,_In_ ULONG FileAttributes,_In_ ULONG ShareAccess,_In_ ULONG CreateDisposition,_In_ ULONG CreateOptions,_In_opt_ PVOID EaBuffer,_In_ ULONG EaLength,_In_ ULONG Flags)
HRESULT WINAPI None.RoGetErrorReportingFlags(_Out_ UINT32 *pflags)
PTP_WORK WINAPI kernel32.CreateThreadpoolWork(_In_ PTP_WORK_CALLBACK pfnwk,_Inout_opt_ PVOID pv,_In_opt_ PTP_CALLBACK_ENVIRON pcbe)
public void None.Printing(String printer None)
HRESULT None None.abort(void None None)
VOID NETIOAPI_API_ iphlpapi.FreeMibTable(_In_ PVOID Memory)
BOOL WINAPI dbghelp.SymGetSymNext64(_In_ HANDLE hProcess,_Inout_ PIMAGEHLP_SYMBOL64 Symbol)
HRESULT None None.ULongMult(_In_ ULONG ulMultiplicand,_In_ ULONG ulMultiplier,_Out_ ULONG *pulResult)
BOOLEAN None None.GetCallInfo(_Out_ PSECPKG_CALL_INFO Info)
LONG None None.DefScreenSaverProc(HWND hWnd None,UINT msg None,WPARAM wParam None,LPARAM lParam None)
HRESULT None None.ULongAdd(_In_ ULONG ulAugend,_In_ ULONG ulAddend,_Out_ ULONG *pulResult)
protected void None.OnGoToPageCommand(int pageNumber None)
HRESULT None srmsvc.CreateCustomAction([out] IFsrmActionCommand **customAction)
HRESULT None None.QueryControllers([out] IEnumVdsObject **ppEnum)
DWORD None None.MAKESORTLCID(WORD wLanguageID None,WORD wSortID None,WORD wSortVersion None)
DWORD WINAPI rstrtmgr.RmShutdown(_In_ DWORD dwSessionHandle,_In_ ULONG lActionFlags,_In_opt_ RM_WRITE_STATUS_CALLBACK fnStatus)
HANDLE None None.GetSpoolFileHandle(_In_ HANDLE hPrinter)
HANDLE None None.GetSpoolFileHandleW(_In_ HANDLE hPrinter)
HANDLE None None.GetSpoolFileHandleA(_In_ HANDLE hPrinter)
BOOL None None.WlxSetReturnDesktop(_In_ HANDLE hWlx,_In_ PWLX_DESKTOP pDesktop)
HRESULT WDSCLIAPI wdsclientapi.WdsCliInitializeLog(_In_ HANDLE hSession,_In_ ULONG ulClientArchitecture,_In_ PWSTR pwszClientId,_In_ PWSTR pwszClientAddress)
BOOL WINAPI advapi32.AccessCheckByType(_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_opt_ PSID PrincipalSelfSid,_In_ HANDLE ClientToken,_In_ DWORD DesiredAccess,_Inout_opt_ POBJECT_TYPE_LIST ObjectTypeList,_In_ DWORD ObjectTypeListLength,_In_ PGENERIC_MAPPING GenericMapping,_Out_opt_ PPRIVILEGE_SET PrivilegeSet,_Inout_ LPDWORD PrivilegeSetLength,_Out_ LPDWORD GrantedAccess,_Out_ LPBOOL AccessStatus)
HRESULT WDSCLIAPI wdsclientapi.WdsCliGetImageVersion(_In_ HANDLE hIfh,_Out_ PWSTR *ppwszValue)
LONG WINAPI tapi32.lineConfigDialog(DWORD dwDeviceID None,HWND hwndOwner None,LPCSTR lpszDeviceClass None)
LONG WINAPI tapi32.lineConfigDialogW(DWORD dwDeviceID None,HWND hwndOwner None,LPCSTR lpszDeviceClass None)
LONG WINAPI tapi32.lineConfigDialogA(DWORD dwDeviceID None,HWND hwndOwner None,LPCSTR lpszDeviceClass None)
BOOL WINAPI advapi32.UnlockServiceDatabase(_In_ SC_LOCK ScLock)
HRESULT None mfplat.MFCreateAsyncResult(IUnknown *punkObject None,IMFAsyncCallback *pCallback None,IUnknown *punkState None,IMFAsyncResult **ppAsyncResult None)
public boolean None.IsSubsetOf(IPermission target None)
HRESULT None None.CreatePartUriCollection([out None None,retval] IXpsOMPartUriCollection **partUriCollection)
DWORD WINAPI mstlsapi.TLSLicenseEnumEnd(_In_ TLS_HANDLE hHandle,_Out_ PDWORD pdwErrCode)
BOOL None None.IsValidDevmode(_In_ PDEVMODE pDevmode,size_t DevmodeSize None)
BOOL None None.IsValidDevmodeW(_In_ PDEVMODE pDevmode,size_t DevmodeSize None)
BOOL None None.IsValidDevmodeA(_In_ PDEVMODE pDevmode,size_t DevmodeSize None)
BOOL None None.Button_Enable(HWND hwndCtl None,BOOL fEnable None)
HRESULT None None.EnumAdapters(UINT Adapter None,[out] IDXGIAdapter **ppAdapter)
UINT WINAPI kernel32.EnumSystemFirmwareTables(_In_ DWORD FirmwareTableProviderSignature,_Out_ PVOID pFirmwareTableBuffer,_In_ DWORD BufferSize)
HRESULT None wmvcore.WMCreateCertificate(_Out_ IUnknown **pUnkCert)
HRESULT None None.get_UseRestrictedCharacterSet([out] VARIANT_BOOL *pVal)
BOOL None shell32.Shell_NotifyIcon(_In_ DWORD dwMessage,_In_ PNOTIFYICONDATA lpdata)
BOOL None shell32.Shell_NotifyIconW(_In_ DWORD dwMessage,_In_ PNOTIFYICONDATA lpdata)
BOOL None shell32.Shell_NotifyIconA(_In_ DWORD dwMessage,_In_ PNOTIFYICONDATA lpdata)
HRESULT WINAPI wsdapi.WSDCreateDeviceProxy2(_In_ LPCWSTR pszDeviceId,_In_ LPCWSTR pszLocalId,_In_ IWSDXMLContext *pContext,_In_ WSD_CONFIG_PARAM *pConfigParams,_In_ DWORD dwConfigParamCount,_Out_ IWSDDeviceProxy **ppDeviceProxy)
BOOL WINAPI user32.SetMenuItemBitmaps(_In_ HMENU hMenu,_In_ UINT uPosition,_In_ UINT uFlags,_In_opt_ HBITMAP hBitmapUnchecked,_In_opt_ HBITMAP hBitmapChecked)
BOOL WINAPI comdlg32.GetSaveFileName(_Inout_ LPOPENFILENAME lpofn)
BOOL WINAPI comdlg32.GetSaveFileNameW(_Inout_ LPOPENFILENAME lpofn)
BOOL WINAPI comdlg32.GetSaveFileNameA(_Inout_ LPOPENFILENAME lpofn)
HRESULT WDSCLIAPI wdsclientapi.WdsCliGetDriverQueryXml(_In_opt_ PWSTR pwszWinDirPath,_Out_ PWSTR *ppwszDriverQuery)
BOOL WINAPI clfsw32.AlignReservedLog(_Inout_ PVOID pvMarshal,_In_ ULONG cReservedRecords,_In_ LONGLONG rgcbReservation,_Out_ PLONGLONG pcbAlignReservation)
LONG WINAPI advapi32.RegOpenKeyTransacted(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_ DWORD ulOptions,_In_ REGSAM samDesired,_Out_ PHKEY phkResult,_In_ HANDLE hTransaction,_Reserved_ PVOID pExtendedParameter)
LONG WINAPI advapi32.RegOpenKeyTransactedW(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_ DWORD ulOptions,_In_ REGSAM samDesired,_Out_ PHKEY phkResult,_In_ HANDLE hTransaction,_Reserved_ PVOID pExtendedParameter)
LONG WINAPI advapi32.RegOpenKeyTransactedA(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_ DWORD ulOptions,_In_ REGSAM samDesired,_Out_ PHKEY phkResult,_In_ HANDLE hTransaction,_Reserved_ PVOID pExtendedParameter)
PTSTR None shlwapi.StrRChrI(_In_ PTSTR pszStart,_In_opt_ PCTSTR pszEnd,TCHAR wMatch None)
PTSTR None shlwapi.StrRChrIW(_In_ PTSTR pszStart,_In_opt_ PCTSTR pszEnd,TCHAR wMatch None)
PTSTR None shlwapi.StrRChrIA(_In_ PTSTR pszStart,_In_opt_ PCTSTR pszEnd,TCHAR wMatch None)
NTSTATUS None None.PsRemoveLoadImageNotifyRoutine(_In_ PLOAD_IMAGE_NOTIFY_ROUTINE NotifyRoutine)
VOID WINAPI kernel32.FreeLibraryWhenCallbackReturns(_Inout_ PTP_CALLBACK_INSTANCE pci,_In_ HMODULE mod)
LONG WINAPI msports.ComDBClose(_In_ HCOMDB HComDB)
BOOL WINAPI user32.SetLayeredWindowAttributes(_In_ HWND hwnd,_In_ COLORREF crKey,_In_ BYTE bAlpha,_In_ DWORD dwFlags)
HRESULT None oleaut32.SafeArrayGetRecordInfo(_In_ SAFEARRAY *psa,_Out_ IRecordInfo **prinfo)
VOID None None.WdfInterruptAcquireLock(_In_ WDFINTERRUPT Interrupt)
HRESULT None None.get_validateOnParse(VARIANT_BOOL *isValidating None)
HRESULT None shlwapi.AssocQueryStringByKey(_In_ ASSOCF flags,_In_ ASSOCSTR str,_In_ HKEY hkAssoc,_In_opt_ LPCTSTR pszExtra,_Out_opt_ LPTSTR pszOut,_Inout_ DWORD *pcchOut)
HRESULT None shlwapi.AssocQueryStringByKeyW(_In_ ASSOCF flags,_In_ ASSOCSTR str,_In_ HKEY hkAssoc,_In_opt_ LPCTSTR pszExtra,_Out_opt_ LPTSTR pszOut,_Inout_ DWORD *pcchOut)
HRESULT None shlwapi.AssocQueryStringByKeyA(_In_ ASSOCF flags,_In_ ASSOCSTR str,_In_ HKEY hkAssoc,_In_opt_ LPCTSTR pszExtra,_Out_opt_ LPTSTR pszOut,_Inout_ DWORD *pcchOut)
RPC_STATUS RPC_ENTRY rpcrt4.RpcServerInqBindings(RPC_BINDING_VECTOR **BindingVector None)
HRESULT None None.get_filepos(long *filePosition None)
HRESULT WINAPI ndfapi.NdfCreateSharingIncident(_In_ LPCWSTR sharename,_Out_ NDFHANDLE *handle)
HRESULT None gpedit.ImportRSoPData(_In_ LPOLESTR lpNameSpace,_In_ LPOLESTR lpFileName)
STDAPI None avifil32.AVIGetFromClipboard(PAVIFILE *lppf None)
HRESULT WINAPI iscsidsc.RemoveIscsiConnection(_In_ PISCSI_UNIQUE_SESSION_ID UniqueSessionId,_In_ PISCSI_UNIQUE_CONNECTION_ID UniqueConnectionId)
BOOL CALLBACK None.SymEnumSourceFileTokensProc(_In_ PVOID token,_In_ size_t size)
BOOL CALLBACK None.SymEnumLinesProc(_In_ PSRCCODEINFO LineInfo,_In_ PVOID UserContext)
uint32 None wvrcimprov.WvrCreateReplicationPartnership([in] string SourceReplicationGroupName,[in] string TargetReplicationGroupName,[in] string TargetComputerName)
DWORD None iphlpapi.GetUdpStatisticsEx2(_Out_ PMIB_UDPSTATS2 Statistics,_In_ ULONG Family)
LPVOID None shell32.SHAlloc(_In_ SIZE_T cb)
HRESULT None None.TransferWiaItem(IWiaItem *pWiaItem None)
HRESULT None shell32.EnumSearches(IEnumExtraSearch **ppEnum None)
BOOL WINAPI None.WIMSplitFile(HANDLE hWim None,PWSTR pszPartPath None,LARGE_INTEGER pliPartSize None,DWORD dwFlags None)
DWORD None None.WriteBlobToFile(HBLOB hBlob None,const char* pFileName)
BOOL WINAPI advapi32.QueryServiceStatus(_In_ SC_HANDLE hService,_Out_ LPSERVICE_STATUS lpServiceStatus)
UINT None oledlg.OleUIEditLinks(_In_ LPOLEUIEDITLINKS lpEL)
UINT None oledlg.OleUIEditLinksW(_In_ LPOLEUIEDITLINKS lpEL)
UINT None oledlg.OleUIEditLinksA(_In_ LPOLEUIEDITLINKS lpEL)
void None None.InterlockedCompareStore(in UINT dest,in UINT compare_value,in UINT value)
HRESULT None None.get_Name([out] BSTR *ppName)
PVOID None None.MmMapLockedPagesSpecifyCache(_In_ PMDLX MemoryDescriptorList,_In_ KPROCESSOR_MODE AccessMode,_In_ MEMORY_CACHING_TYPE CacheType,_In_opt_ PVOID BaseAddress,_In_ ULONG BugCheckOnFailure,_In_ MM_PAGE_PRIORITY Priority)
HRESULT WDSCLIAPI wdsclientapi.WdsCliFindFirstImage(_In_ HANDLE hSession,_Out_ PHANDLE phFindHandle)
LONG None None.AdvancedDocumentProperties(_In_ HWND hWnd,_In_ HANDLE hPrinter,_In_ LPTSTR pDeviceName,_Out_ PDEVMODE pDevModeOutput,_In_ PDEVMODE pDevModeInput)
LONG None None.AdvancedDocumentPropertiesW(_In_ HWND hWnd,_In_ HANDLE hPrinter,_In_ LPTSTR pDeviceName,_Out_ PDEVMODE pDevModeOutput,_In_ PDEVMODE pDevModeInput)
LONG None None.AdvancedDocumentPropertiesA(_In_ HWND hWnd,_In_ HANDLE hPrinter,_In_ LPTSTR pDeviceName,_Out_ PDEVMODE pDevModeOutput,_In_ PDEVMODE pDevModeInput)
HRESULT None qmgrprxy.GetErrorCount([out] ULONG *pErrors)
BOOL WINAPI None.CertStoreProvReadCertCallback(_In_ HCERTSTOREPROV hStoreProv,_In_ PCCERT_CONTEXT pStoreCertContext,_In_ DWORD dwFlags,_Out_ PCCERT_CONTEXT *ppProvCertContext)
VOID None None.FltReleaseFileNameInformation(_In_ PFLT_FILE_NAME_INFORMATION FileNameInformation)
VOID None None.XMStoreSInt2([out] XMINT2 *pDestination,XMVECTOR V None)
protected void None.RemoveVisualChild(Visual child None)
HRESULT None None.GetOutputStatus([out] DWORD *pdwFlags)
BOOL None wtsapi32.WTSVirtualChannelWrite(_In_ HANDLE hChannelHandle,_In_ PCHAR Buffer,_In_ ULONG Length,_Out_ PULONG pBytesWritten)
HRESULT None ole32.StgOpenPropStg(_In_ IUnknown *pUnk,_In_ REFFMTID fmtid,_In_ DWORD grfFlags,_In_ DWORD dwReserved,_Out_ IPropertyStorage **ppPropStg)
HANDLE None wtsapi32.WTSVirtualChannelOpen(_In_ HANDLE hServer,_In_ DWORD SessionId,_In_ LPSTR pVirtualName)
HRESULT None None.SetDistanceFactor(D3DVALUE flDistanceFactor None,DWORD dwApply None)
HRESULT None mf.MFCreateRemoteDesktopPlugin(IMFRemoteDesktopPlugin **ppPlugin None)
protected void None.SetVisibleCore(boolean value None)
HRESULT WDSCLIAPI wdsclientapi.WdsCliClose(_In_ HANDLE Handle)
UINT None msi.MsiDetermineApplicablePatches(_In_ LPCTSTR szProductPackagePath,_In_ DWORD cPatchInfo,_In_ PMSIPATCHSEQUENCEINFO pPatchInfo)
UINT None msi.MsiDetermineApplicablePatchesW(_In_ LPCTSTR szProductPackagePath,_In_ DWORD cPatchInfo,_In_ PMSIPATCHSEQUENCEINFO pPatchInfo)
UINT None msi.MsiDetermineApplicablePatchesA(_In_ LPCTSTR szProductPackagePath,_In_ DWORD cPatchInfo,_In_ PMSIPATCHSEQUENCEINFO pPatchInfo)
HRESULT WINAPI wsdapi.WSDUriDecode(_In_ LPCWSTR source,_In_ DWORD cchSource,_Out_ LPWSTR *destOut,_Out_opt_ DWORD *cchDestOut)
BOOL WINAPI clfsw32.ReserveAndAppendLog(_In_ PVOID pvMarshal,_In_opt_ PCLFS_WRITE_ENTRY rgWriteEntries,_In_ ULONG cWriteEntries,_In_opt_ PCLFS_LSN plsnUndoNext,_In_opt_ PCLFS_LSN plsnPrevious,_In_ ULONG cReserveRecords,_Inout_opt_ LONGLONG rgcbReservation[],_In_ ULONG fFlags,_Out_opt_ PCLFS_LSN plsn,_Inout_opt_ LPOVERLAPPED pOverlapped)
BOOL WINAPI winhttp.WinHttpSetCredentials(_In_ HINTERNET hRequest,_In_ DWORD AuthTargets,_In_ DWORD AuthScheme,_In_ LPCWSTR pwszUserName,_In_ LPCWSTR pwszPassword,_Reserved_ LPVOID pAuthParams)
HRESULT None wsdapi.IsMessageSigned([out] BOOL *pbSigned)
PTP_TIMER WINAPI kernel32.CreateThreadpoolTimer(_In_ PTP_TIMER_CALLBACK pfnti,_Inout_opt_ PVOID pv,_In_opt_ PTP_CALLBACK_ENVIRON pcbe)
HRESULT APIENTRY None.MQLocateEnd(HANDLE hEnum None)
HRESULT None shell32.SHSetKnownFolderPath(_In_ REFKNOWNFOLDERID rfid,_In_ DWORD dwFlags,_In_ HANDLE hToken,_In_ PCWSTR pszPath)
BOOL WINAPI crypt32.CertSetCertificateContextPropertiesFromCTLEntry(_In_ PCCERT_CONTEXT pCertContext,_In_ PCTL_ENTRY pCtlEntry,_In_ DWORD dwFlags)
BOOL WINAPI authz.AuthzAddSidsToContext(_In_ AUTHZ_CLIENT_CONTEXT_HANDLE OrigClientContext,_In_ PSID_AND_ATTRIBUTES Sids,_In_ DWORD SidCount,_In_ PSID_AND_ATTRIBUTES RestrictedSids,_In_ DWORD RestrictedSidCount,_Out_ PAUTHZ_CLIENT_CONTEXT_HANDLE pNewClientContext)
HRESULT WINAPI iscsidsc.ReportIscsiInitiatorList(_Inout_ ULONG *BufferSize,_Out_ PTCHAR Buffer)
HRESULT WINAPI iscsidsc.ReportIscsiInitiatorListW(_Inout_ ULONG *BufferSize,_Out_ PTCHAR Buffer)
HRESULT WINAPI iscsidsc.ReportIscsiInitiatorListA(_Inout_ ULONG *BufferSize,_Out_ PTCHAR Buffer)
HRESULT WINAPI dismapi.DismGetDrivers(_In_ DismSession Session,_In_ BOOL AllDrivers,_Out_ DismDriverPackage **DriverPackage,_Out_ UINT *Count)
BOOL WINAPI wevtapi.EvtCancel(EVT_HANDLE Object None)
LCID None kernel32.ConvertDefaultLocale(_In_ LCID Locale)
DWORD CALLBACK None.MprAdminReleaseIpv6AddressForUser(_In_ WCHAR *lpwszUserName,_In_ WCHAR *lpwszPortName,_In_ in6_addr *lpdwIpv6Address)
LSTATUS None shlwapi.SHRegDeleteEmptyUSKey(_In_ HUSKEY hUSKey,_In_ LPCSTR pszValue,_In_ SHREGDEL_FLAGS delRegFlags)
LSTATUS None shlwapi.SHRegDeleteEmptyUSKeyW(_In_ HUSKEY hUSKey,_In_ LPCSTR pszValue,_In_ SHREGDEL_FLAGS delRegFlags)
LSTATUS None shlwapi.SHRegDeleteEmptyUSKeyA(_In_ HUSKEY hUSKey,_In_ LPCSTR pszValue,_In_ SHREGDEL_FLAGS delRegFlags)
BOOL CALLBACK None.EnumResTypeProc(_In_opt_ HMODULE hModule,_In_ LPTSTR lpszType,_In_ LONG_PTR lParam)
BOOL CALLBACK None.EnumResTypeProcW(_In_opt_ HMODULE hModule,_In_ LPTSTR lpszType,_In_ LONG_PTR lParam)
BOOL CALLBACK None.EnumResTypeProcA(_In_opt_ HMODULE hModule,_In_ LPTSTR lpszType,_In_ LONG_PTR lParam)
HTREEITEM None None.TreeView_GetPrevSibling(HWND hwndTV None,HTREEITEM hitem None)
HRESULT WINAPI d3dcompiler_47.D3DDisassemble10Effect(in ID3D10Effect pEffect,in UINT Flags,out ID3DBlob ppDisassembly)
HRESULT None pla.get_OutputLocation([out] BSTR *pPath)
BOOL None cabinet.ResetDecompressor(_In_ DECOMPRESSOR_HANDLE DecompressorHandle)
VOID CALLBACK None.TimerAPCProc(_In_opt_ LPVOID lpArgToCompletionRoutine,_In_ DWORD dwTimerLowValue,_In_ DWORD dwTimerHighValue)
HRESULT None None.SetOutput(IUnknown * pOutput)
long None None.atol(const char *str)
PDH_STATUS None pdh.PdhCollectQueryDataEx(_In_ PDH_HQUERY hQuery,_In_ DWORD dwIntervalTime,_In_ HANDLE hNewDataEvent)
HRESULT None None.EnableCache(REFGUID rguidClass None,BOOL fEnable None)
VOID WINAPI kernel32.WakeByAddressSingle(_In_ PVOID Address)
void None None.InterlockedOr(in UINT dest,in UINT value,out UINT original_value)
HRESULT None ole32.CreatePointerMoniker(_In_opt_ LPUNKNOWN punk,_Out_ LPMONIKER *ppmk)
public None None.CultureInfo(String name None)
BOOL WINAPI dbghelp.SymAddSymbol(_In_ HANDLE hProcess,_In_ ULONG64 BaseOfDll,_In_ PCTSTR Name,_In_ DWORD64 Address,_In_ DWORD Size,_In_ DWORD Flags)
BOOL WINAPI dbghelp.SymAddSymbolW(_In_ HANDLE hProcess,_In_ ULONG64 BaseOfDll,_In_ PCTSTR Name,_In_ DWORD64 Address,_In_ DWORD Size,_In_ DWORD Flags)
BOOL WINAPI dbghelp.SymAddSymbol(_In_ HANDLE hProcess,_In_ ULONG64 BaseOfDll,_In_ PCTSTR Name,_In_ DWORD64 Address,_In_ DWORD Size,_In_ DWORD Flags)
public boolean None.Equals(Object oCompare None)
uint32 None wvrcimprov.ExchangeReplicationGroupId([in] string SourceReplicationGroupName,[in] string SourceReplicationGroupId,[in] string TargetReplicationGroupName,[out] string TargetReplicationGroupId)
HRESULT WINAPI uiautomationcore.UiaRaiseAutomationEvent(_In_ IRawElementProviderSimple *pProvider,_In_ EVENTID id)
TRACEHANDLE None advapi32.GetTraceLoggerHandle(_In_ PVOID Buffer)
HRESULT None prntvpt.PTReleaseMemory(_In_ PVOID pBuffer)
HRESULT None msdrm.DRMCloseHandle(_In_ DRMHANDLE handle)
BOOL WINAPI authz.AuthzEnumerateSecurityEventSources(_In_ DWORD dwFlags,_Out_ PAUTHZ_SOURCE_SCHEMA_REGISTRATION Buffer,_Out_ PDWORD pdwCount,_Inout_ PDWORD pdwLength)
ULONG None tdh.TdhOpenDecodingHandle(_Out_ PTDH_HANDLE Handle)
HRESULT WDSCLIAPI wdsclientapi.WdsCliWaitForTransfer(_In_ HANDLE hTransfer)
DWORD WINAPI kernel32.GetFirmwareEnvironmentVariable(_In_ LPCTSTR lpName,_In_ LPCTSTR lpGuid,_Out_ PVOID pBuffer,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetFirmwareEnvironmentVariableW(_In_ LPCTSTR lpName,_In_ LPCTSTR lpGuid,_Out_ PVOID pBuffer,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetFirmwareEnvironmentVariableA(_In_ LPCTSTR lpName,_In_ LPCTSTR lpGuid,_Out_ PVOID pBuffer,_In_ DWORD nSize)
DWORD WINAPI resutils.ResUtilStopService(_In_ SC_HANDLE hServiceHandle)
BOOL WINAPI advapi32.CryptEnumProviders(_In_ DWORD dwIndex,_In_ DWORD *pdwReserved,_In_ DWORD dwFlags,_Out_ DWORD *pdwProvType,_Out_ LPTSTR pszProvName,_Inout_ DWORD *pcbProvName)
BOOL WINAPI advapi32.CryptEnumProvidersW(_In_ DWORD dwIndex,_In_ DWORD *pdwReserved,_In_ DWORD dwFlags,_Out_ DWORD *pdwProvType,_Out_ LPTSTR pszProvName,_Inout_ DWORD *pcbProvName)
BOOL WINAPI advapi32.CryptEnumProvidersA(_In_ DWORD dwIndex,_In_ DWORD *pdwReserved,_In_ DWORD dwFlags,_Out_ DWORD *pdwProvType,_Out_ LPTSTR pszProvName,_Inout_ DWORD *pcbProvName)
HRESULT None msdrm.DRMIsWindowProtected(_In_ HWND hwnd,_Out_ BOOL *pfProtected)
HRESULT None None.get_attributes(IXMLDOMNamedNodeMap **attributeMap None)
protected Visual None.GetVisualChild(int index None)
HCRYPTOIDFUNCSET WINAPI crypt32.CryptInitOIDFunctionSet(_In_ LPCSTR pszFuncName,_In_ DWORD dwFlags)
HRESULT None ole32.CoMarshalInterface(_In_ LPSTREAM pStm,_In_ REFIID riid,_In_ LPUNKNOWN pUnk,_In_ DWORD dwDestContext,_In_opt_ LPVOID pvDestContext,_In_ DWORD mshlflags)
HANDLE WINAPI ktmw32.CreateTransactionManager(_In_opt_ LPSECURITY_ATTRIBUTES lpTransactionAttributes,_In_opt_ LPWSTR LogFileName,_In_opt_ ULONG CreateOptions,_In_opt_ ULONG CommitStrength)
BOOL None gdi32.RemoveFontResource(_In_ LPCTSTR lpFileName)
BOOL None gdi32.RemoveFontResourceW(_In_ LPCTSTR lpFileName)
BOOL None gdi32.RemoveFontResourceA(_In_ LPCTSTR lpFileName)
HRESULT None None.GetVideoProcessorService(IDirect3DDeviceManager9 *pDeviceManager None,IDirectXVideoProcessorService **ppVPService None)
HRESULT None None.get_SupportedWriteSpeedDescriptors([out] SAFEARRAY *supportedSpeedDescriptors)
VOID None None.IoDeassignArcName(_In_ PUNICODE_STRING ArcName)
BOOL WINAPI user32.DeleteMenu(_In_ HMENU hMenu,_In_ UINT uPosition,_In_ UINT uFlags)
HRESULT None None.setOption(SERVERXMLHTTP_OPTION option None,VARIANT value None)
NTSTATUS WINAPI bcrypt.BCryptConfigureContext(_In_ ULONG dwTable,_In_ LPCWSTR pszContext,_In_ PCRYPT_CONTEXT_CONFIG pConfig)
protected void None.OnMouseEnter(MouseEventArgs e None)
public Object None.CreateInstanceFromAndUnwrap(String assemblyName None,String typeName None)
HRESULT None oleaut32.VarCyFromUI8(_In_ ULONG64 ui64In,_Out_ CY *pcyOut)
BOOL None None.DeletePrinterDriver(_In_ LPTSTR pName,_In_ LPTSTR pEnvironment,_In_ LPTSTR pDriverName)
BOOL None None.DeletePrinterDriverW(_In_ LPTSTR pName,_In_ LPTSTR pEnvironment,_In_ LPTSTR pDriverName)
BOOL None None.DeletePrinterDriverA(_In_ LPTSTR pName,_In_ LPTSTR pEnvironment,_In_ LPTSTR pDriverName)
HRESULT None oleaut32.VarR4FromUI4(_In_ ULONG ulIn,_Out_ FLOAT *pfltOut)
NET_API_STATUS None netapi32.NetUseEnum(_In_ LMSTR UncServerName,_In_ DWORD Level,_Out_ LPBYTE *BufPtr,_In_ DWORD PreferedMaximumSize,_Out_ LPDWORD EntriesRead,_Out_ LPDWORD TotalEntries,_Inout_ LPDWORD ResumeHandle)
NET_API_STATUS None netapi32.NetRenameMachineInDomain(_In_ LPCWSTR lpServer,_In_ LPCWSTR lpNewMachineName,_In_ LPCWSTR lpAccount,_In_ LPCWSTR lpPassword,_In_ DWORD fRenameOptions)
BOOL None None.DeletePrintProvidor(_In_ LPTSTR pName,_In_ LPTSTR pEnvironment,_In_ LPTSTR pPrintProviderName)
BOOL None None.DeletePrintProvidorW(_In_ LPTSTR pName,_In_ LPTSTR pEnvironment,_In_ LPTSTR pPrintProviderName)
BOOL None None.DeletePrintProvidorA(_In_ LPTSTR pName,_In_ LPTSTR pEnvironment,_In_ LPTSTR pPrintProviderName)
ULONG None wudfx02000.WdfFileObjectGetInitiatorProcessId(_In_ WDFFILEOBJECT FileObject)
HRESULT None None.remove_ButtonPressed(EventRegistrationToken token None)
VOID WINAPI kernel32.SetThreadpoolTimer(_Inout_ PTP_TIMER pti,_In_opt_ PFILETIME pftDueTime,_In_ DWORD msPeriod,_In_opt_ DWORD msWindowLength)
NTSTATUS None None.FltRemoveExtraCreateParameter(_In_ PFLT_FILTER Filter,_Inout_ PECP_LIST EcpList,_In_ LPCGUID EcpType,_Out_ PVOID *EcpContext,_Out_opt_ ULONG *EcpContextSize)
HRESULT None srmsvc.get_VolumeName([out] BSTR *volumeName)
NTSTATUS None None.WdfRegistryAssignString(_In_ WDFKEY Key,_In_ PCUNICODE_STRING ValueName,_In_ WDFSTRING String)
DWORD WINAPI wlanapi.WlanHostedNetworkRefreshSecuritySettings(_In_ HANDLE hClientHandle,_Out_opt_ PWLAN_HOSTED_NETWORK_REASON pFailReason,_Reserved_ PVOID pvReserved)
UINT None msi.MsiEnableUIPreview(_In_ MSIHANDLE hDatabase,_Out_ MSIHANDLE *phPreview)
BOOLEAN None None.SeValidSecurityDescriptor(_In_ ULONG Length,_In_ PSECURITY_DESCRIPTOR SecurityDescriptor)
HRESULT None mf.MFCreateNetSchemePlugin(_In_ REFIID riid,_Out_ LPVOID *ppvHandler)
NTSTATUS None advapi32.LsaRetrievePrivateData(_In_ LSA_HANDLE PolicyHandle,_In_ PLSA_UNICODE_STRING KeyName,_Out_ PLSA_UNICODE_STRING *PrivateData)
BOOL WINAPI kernel32.ReadProcessMemory(_In_ HANDLE hProcess,_In_ LPCVOID lpBaseAddress,_Out_ LPVOID lpBuffer,_In_ SIZE_T nSize,_Out_ SIZE_T *lpNumberOfBytesRead)
PWSTR None shlwapi.StrChrNW(_In_ PWSTR pszStart,WCHAR wMatch None,UINT cchMax None)
RPC_STATUS RPC_ENTRY rpcrt4.UuidCreateSequential(UUID __RPC_FAR *Uuid)
HRESULT None shlwapi.SHAutoComplete(_In_ HWND hwndEdit,DWORD dwFlags None)
BOOL WINAPI winhttp.WinHttpReadData(_In_ HINTERNET hRequest,_Out_ LPVOID lpBuffer,_In_ DWORD dwNumberOfBytesToRead,_Out_ LPDWORD lpdwNumberOfBytesRead)
LSTATUS None shlwapi.SHQueryInfoKey(_In_ HKEY hkey,_Out_opt_ LPDWORD pcSubKeys,_Out_opt_ LPDWORD pcchMaxSubKeyLen,_Out_opt_ LPDWORD pcValues,_Out_opt_ LPDWORD pcchMaxValueNameLen)
LSTATUS None shlwapi.SHQueryInfoKeyW(_In_ HKEY hkey,_Out_opt_ LPDWORD pcSubKeys,_Out_opt_ LPDWORD pcchMaxSubKeyLen,_Out_opt_ LPDWORD pcValues,_Out_opt_ LPDWORD pcchMaxValueNameLen)
LSTATUS None shlwapi.SHQueryInfoKeyA(_In_ HKEY hkey,_Out_opt_ LPDWORD pcSubKeys,_Out_opt_ LPDWORD pcchMaxSubKeyLen,_Out_opt_ LPDWORD pcValues,_Out_opt_ LPDWORD pcchMaxValueNameLen)
UInt32 None None.ToUInt32(IFormatProvider provider None)
HRESULT WINAPI iscsidsc.AddPersistentIscsiDevice(_In_ PTCHAR VolumePath)
HRESULT WINAPI iscsidsc.AddPersistentIscsiDeviceW(_In_ PTCHAR VolumePath)
HRESULT WINAPI iscsidsc.AddPersistentIscsiDeviceA(_In_ PTCHAR VolumePath)
LRESULT CALLBACK None.WindowProc(HWND hwnd None,WM_IME_REQUEST None None,WPARAM wParam None,LPARAM lParam None)
HRESULT None None.GetPersistentItemsChangedSink([out None None,retval] ISearchPersistentItemsChangedSink **ppISearchPersistentItemsChangedSink)
HRESULT None shlwapi.IStream_ReadStr(_In_ IStream *pstm,_Out_ PWSTR *ppsz)
HRESULT None None.createProcessor(IXSLProcessor** ppProcessor None)
ULONG None advapi32.FlushTrace(_In_ TRACEHANDLE SessionHandle,_In_ LPCTSTR SessionName,_Inout_ PEVENT_TRACE_PROPERTIES Properties)
ULONG None advapi32.FlushTraceW(_In_ TRACEHANDLE SessionHandle,_In_ LPCTSTR SessionName,_Inout_ PEVENT_TRACE_PROPERTIES Properties)
ULONG None advapi32.FlushTraceA(_In_ TRACEHANDLE SessionHandle,_In_ LPCTSTR SessionName,_Inout_ PEVENT_TRACE_PROPERTIES Properties)
HRESULT None None.LongLongAdd(_In_ LONGLONG llAugend,_In_ LONGLONG llAddend,_Out_ LONGLONG *pllResult)
HRESULT None None.get_MediaParsers(IWMSPlugins** pVal None)
BOOL WINAPI kernel32.GlobalMemoryStatusEx(_Inout_ LPMEMORYSTATUSEX lpBuffer)
HRESULT None None.WordSub(_In_ WORD wMinuend,_In_ WORD wSubtrahend,_Out_ WORD *pwResult)
uint32 None wvrcimprov.SmapiPairCluster([in] string PairClusterName,[in] string PairSubsystemUniqueId)
void None None.Store2(in uint address,in uint2 values)
void None None.InterlockedCompareExchange(in UINT dest,in UINT compare_value,in UINT value,out UINT original_value)
HRESULT None None.FeedDownloading(const BSTR path)
protected void None.RenderContents(HtmlTextWriter writer None)
HRESULT None None.GetOpacityMaskBrushLookup([out None None,retval] LPWSTR *key)
uint32 None wvrcimprov.NewSrGroup([in] string ComputerName,[in] string Description,[in] uint64 LogSizeInBytes,[in] string LogVolumeName,[in] string Name,[in] string VolumeName[],[in] boolean EnableConsistencyGroups,[in] boolean EnableEncryption,[out] MSFT_WvrReplicationGroup Output[])
BOOL WINAPI dbghelp.SymEnumerateSymbols64(_In_ HANDLE hProcess,_In_ ULONG64 BaseOfDll,_In_ PSYM_ENUMSYMBOLS_CALLBACK64 EnumSymbolsCallback,_In_opt_ PVOID UserContext)
BOOL WINAPI dbghelp.SymEnumerateSymbolsW64(_In_ HANDLE hProcess,_In_ ULONG64 BaseOfDll,_In_ PSYM_ENUMSYMBOLS_CALLBACK64 EnumSymbolsCallback,_In_opt_ PVOID UserContext)
BOOL WINAPI dbghelp.SymEnumerateSymbols64(_In_ HANDLE hProcess,_In_ ULONG64 BaseOfDll,_In_ PSYM_ENUMSYMBOLS_CALLBACK64 EnumSymbolsCallback,_In_opt_ PVOID UserContext)
VOID WINAPI kernel32.RaiseFailFastException(_In_opt_ PEXCEPTION_RECORD pExceptionRecord,_In_opt_ PCONTEXT pContextRecord,_In_ DWORD dwFlags)
BOOL WINAPI crypt32.CertCreateCertificateChainEngine(_In_ PCERT_CHAIN_ENGINE_CONFIG pConfig,_Out_ HCERTCHAINENGINE *phChainEngine)
BOOL WINAPI kernel32.MapUserPhysicalPagesScatter(_In_ PVOID *VirtualAddresses,_In_ ULONG_PTR NumberOfPages,_In_ PULONG_PTR PageArray)
BOOL None spoolss.AbortPrinter(_In_ HANDLE hPrinter)
BOOL None uxtheme.BufferedPaintRenderAnimation(HWND hwnd None,HDC hdcTarget None)
UINT WINAPI user32.MapVirtualKeyEx(_In_ UINT uCode,_In_ UINT uMapType,_Inout_opt_ HKL dwhkl)
UINT WINAPI user32.MapVirtualKeyExW(_In_ UINT uCode,_In_ UINT uMapType,_Inout_opt_ HKL dwhkl)
UINT WINAPI user32.MapVirtualKeyExA(_In_ UINT uCode,_In_ UINT uMapType,_Inout_opt_ HKL dwhkl)
BOOLEAN CALLBACK None.SecureMemoryCacheCallback(_In_ PVOID Addr,_In_ SIZE_T Range)
DWORD WINAPI clusapi.OnlineClusterResourceEx(_In_ HRESOURCE hResource,_In_ DWORD dwOnlineFlags,_In_opt_ PBYTE lpInBuffer,_In_ DWORD cbInBufferSize)
else None None.if(majorType == MFMediaType_Audio)
HRESULT None oleaut32.VarAbs(_In_ LPVARIANT pvarIn,_Out_ LPVARIANT pvarResult)
DWORD PXEAPI wdspxe.PxeDhcpv6Initialize(_In_ PVOID pRequest,_In_ ULONG cbRequest,_Inout_ PVOID pReply,_In_ ULONG cbReply,_Out_ PULONG pcbReplyUsed)
LONG WINAPI advapi32.RegLoadKey(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_ LPCTSTR lpFile)
LONG WINAPI advapi32.RegLoadKeyW(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_ LPCTSTR lpFile)
LONG WINAPI advapi32.RegLoadKeyA(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_ LPCTSTR lpFile)
HRESULT None windowscodecs.IWICMetadataBlockReader_GetCount_Proxy(_In_ IWICMetadataBlockReader *THIS_PTR,_Out_ UINT *pcCount)
BOOL WINAPI wtsapi32.WTSQueryListenerConfig(_In_ HANDLE hServer,_In_ PVOID pReserved,_In_ DWORD Reserved,_In_ LPTSTR pListenerName,_Out_ PWTSLISTENERCONFIG pBuffer)
BOOL WINAPI wtsapi32.WTSQueryListenerConfigW(_In_ HANDLE hServer,_In_ PVOID pReserved,_In_ DWORD Reserved,_In_ LPTSTR pListenerName,_Out_ PWTSLISTENERCONFIG pBuffer)
BOOL WINAPI wtsapi32.WTSQueryListenerConfigA(_In_ HANDLE hServer,_In_ PVOID pReserved,_In_ DWORD Reserved,_In_ LPTSTR pListenerName,_Out_ PWTSLISTENERCONFIG pBuffer)
DWORD WINAPI clusapi.OnlineClusterGroupEx(_In_ HGROUP hGroup,_In_opt_ HNODE hDestinationNode,_In_ DWORD dwOnlineFlags,_In_opt_ PBYTE lpInBuffer,_In_ DWORD cbInBufferSize)
int None None.feof(FILE *stream None)
HRESULT None None.GetDeactivateOnReturn([out] VARIANT_BOOL *pbDeactivate)
protected void None.OnGotKeyboardFocus(KeyboardFocusChangedEventArgs e None)
UINT None msi.MsiFormatRecord(_In_ MSIHANDLE hInstall,_In_ MSIHANDLE hRecord,_Out_ LPTSTR szResultBuf,_Inout_ DWORD *pcchResultBuf)
UINT None msi.MsiFormatRecordW(_In_ MSIHANDLE hInstall,_In_ MSIHANDLE hRecord,_Out_ LPTSTR szResultBuf,_Inout_ DWORD *pcchResultBuf)
UINT None msi.MsiFormatRecordA(_In_ MSIHANDLE hInstall,_In_ MSIHANDLE hRecord,_Out_ LPTSTR szResultBuf,_Inout_ DWORD *pcchResultBuf)
HRESULT APIENTRY None.MQGetQueueSecurity(LPCWSTR lpwcsFormatName None,SECURITY_INFORMATION SecurityInformation None,PSECURITY_DESCRIPTOR pSecurityDescriptor None,DWORD nLength None,LPDWORD lpnLengthNeeded None)
HRESULT None None.StringCbGetsEx(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCbGetsExW(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCbGetsExA(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags)
LONG WINAPI msports.ComDBClaimPort(_In_ HCOMDB HComDB,_In_ DWORD ComNumber,_In_ BOOL ForceClaim,_Out_opt_ PBOOL Forced)
BOOL None userenv.UnregisterGPNotification(_In_ HANDLE hEvent)
DWORD None mprapi.MprAdminServerConnect(_In_opt_ LPWSTR lpwsServerName,_Out_ MPR_SERVER_HANDLE *phMprServer)
BOOL WINAPI user32.GetLayeredWindowAttributes(_In_ HWND hwnd,_Out_opt_ COLORREF *pcrKey,_Out_opt_ BYTE *pbAlpha,_Out_opt_ DWORD *pdwFlags)
BOOL None kernel32.GetThreadPreferredUILanguages(_In_ DWORD dwFlags,_Out_ PULONG pulNumLanguages,_Out_opt_ PZZWSTR pwszLanguagesBuffer,_Inout_ PULONG pcchLanguagesBuffer)
BOOL None None.TreeView_SetItem(HWND hwndTV None,LPTVITEM pitem None)
HRESULT None windowscodecs.GetMetadataQueryWriter([out] IWICMetadataQueryWriter **ppIMetadataQueryWriter)
STDAPI None shcore.RegisterScaleChangeNotifications(_In_ DISPLAY_DEVICE_TYPE displayDevice,_In_ HWND hwndNotify,_In_ UINT uMsgNotify,_Out_ DWORD *pdwCookie)
protected void None.OnVisualParentChanged(DependencyObject oldParent None)
HRESULT None None.get_ParallelPorts([out] IVMParallelPortCollection **parallelPortCollection)
XpsThumbnail None None.AddThumbnail(XpsImageType imageType None)
HRESULT None None.GetDescription([out None None,retval] LPWSTR *description)
inline XMVECTOR None.XMVector3NormalizeRobust(FXMVECTOR V None)
LONG WINAPI tapi32.lineAddProvider(LPCSTR lpszProviderFilename None,HWND hwndOwner None,LPDWORD lpdwPermanentProviderID None)
LONG WINAPI tapi32.lineAddProviderW(LPCSTR lpszProviderFilename None,HWND hwndOwner None,LPDWORD lpdwPermanentProviderID None)
LONG WINAPI tapi32.lineAddProviderA(LPCSTR lpszProviderFilename None,HWND hwndOwner None,LPDWORD lpdwPermanentProviderID None)
HRESULT None None.GetCreationParameters([out] D3DDEVICE_CREATION_PARAMETERS *pParameters)
BOOL WINAPI kernel32.QueryWorkingSetEx(_In_ HANDLE hProcess,_Inout_ PVOID pv,_In_ DWORD cb)
HRESULT WINAPI d3dcompiler_47.D3DGetInputSignatureBlob(in LPCVOID pSrcData,in SIZE_T SrcDataSize,out ID3DBlob ppSignatureBlob)
public Object None.FindResource(Object resourceKey None)
LONG WINAPI tapi32.lineSetAppSpecific(HCALL hCall None,DWORD dwAppSpecific None)
void None None.Rollback(Enlistment enlistment None)
HRESULT None None.GetTransformLookup([out None None,retval] LPWSTR *key)
HRESULT None dxgi.GetDesc3([out] DXGI_ADAPTER_DESC3 *pDesc)
NTSTATUS None None.ZwOpenTransactionManager(_Out_ PHANDLE TmHandle,_In_ ACCESS_MASK DesiredAccess,_In_opt_ POBJECT_ATTRIBUTES ObjectAttributes,_In_opt_ PUNICODE_STRING LogFileName,_In_opt_ LPGUID TmIdentity,_In_opt_ ULONG OpenOptions)
VOID None None.ExFreePoolWithTag(_In_ PVOID P,_In_ ULONG Tag)
uint32 None netpeerdistcim.Enable_BCServeOnBattery([in] boolean Force)
LSTATUS None shlwapi.SHRegCloseUSKey(_In_ HUSKEY hUSKey)
HRESULT None None.get_elements(ISchemaItemCollection** elements None)
BOOL WINAPI wtsapi32.WTSGetChildSessionId(_Out_ ULONG *pSessionId)
HRESULT None None.GetSDFromIADs(IADs *pObject None,IADsSecurityDescriptor **ppSD None)
DWORD None advapi32.GetManagedApplications(_In_ GUID *pCategory,_In_ DWORD dwQueryFlags,_In_ DWORD dwInfoLevel,_Out_ LPDWORD pdwApps,_Out_ PMANAGEDAPPLICATION *prgManagedApps)
RESID WINAPI None.Open(_In_ LPCWSTR ResourceName,_In_ HKEY ResourceKey,_In_ RESOURCE_HANDLE ResourceHandle)
HRESULT None None.GetNumPropIDS([out] ULONG *num)
DWORD WINAPI clusapi.SetClusterGroupNodeList(_In_ HGROUP hGroup,_In_ DWORD NodeCount,_In_ HNODE NodeList[])
HRESULT None None.get_SupportedWriteSpeeds([out] SAFEARRAY *supportedSpeeds)
HRESULT None oleaut32.VarI1FromCy(_In_ CY cyIn,_Out_ CHAR *pcOut)
BOOL None None.EnumPorts(_In_ LPTSTR pName,_In_ DWORD Level,_Out_ LPBYTE pPorts,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded,_Out_ LPDWORD pcReturned)
BOOL None None.EnumPortsW(_In_ LPTSTR pName,_In_ DWORD Level,_Out_ LPBYTE pPorts,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded,_Out_ LPDWORD pcReturned)
BOOL None None.EnumPortsA(_In_ LPTSTR pName,_In_ DWORD Level,_Out_ LPBYTE pPorts,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded,_Out_ LPDWORD pcReturned)
HRESULT None mfplat.MFGetAttributesAsBlobSize(_In_ IMFAttributes *pAttributes,_Out_ UINT32 *pcbBufSize)
UINT WINAPI msi.MsiEnumClientsEx(_In_ LPCTSTR szComponent,_In_opt_ LPCTSTR szUserSid,_In_ DWORD dwContext,_In_ DWORD dwProductIndex,_Out_opt_ TCHAR szProductBuf,_Out_opt_ MSIINSTALLCONTEXT *pdwInstalledContext,_Out_opt_ LPTSTR szSid,_Inout_opt_ LPDWORD pcchSid)
UINT WINAPI msi.MsiEnumClientsExW(_In_ LPCTSTR szComponent,_In_opt_ LPCTSTR szUserSid,_In_ DWORD dwContext,_In_ DWORD dwProductIndex,_Out_opt_ TCHAR szProductBuf,_Out_opt_ MSIINSTALLCONTEXT *pdwInstalledContext,_Out_opt_ LPTSTR szSid,_Inout_opt_ LPDWORD pcchSid)
UINT WINAPI msi.MsiEnumClientsExA(_In_ LPCTSTR szComponent,_In_opt_ LPCTSTR szUserSid,_In_ DWORD dwContext,_In_ DWORD dwProductIndex,_Out_opt_ TCHAR szProductBuf,_Out_opt_ MSIINSTALLCONTEXT *pdwInstalledContext,_Out_opt_ LPTSTR szSid,_Inout_opt_ LPDWORD pcchSid)
HRESULT None propsys.PSFormatPropertyValue(_In_ IPropertyStore *pps,_In_ IPropertyDescription *ppd,_In_ PROPDESC_FORMAT_FLAGS pdff,_Out_ LPWSTR *ppszDisplay)
BOOL WINAPI resutils.ResUtilResourcesEqual(_In_ HRESOURCE hSelf,_In_ HRESOURCE hResource)
BOOL None None.ListView_SetBkColor(HWND hwnd None,COLORREF clrBk None)
NTSTATUS None None.LsaApCallPackagePassthrough(_In_ PLSA_CLIENT_REQUEST ClientRequest,_In_ PVOID ProtocolSubmitBuffer,_In_ PVOID ClientBufferBase,_In_ ULONG SubmitBufferLength,_Out_ PVOID *ProtocolReturnBuffer,_Out_ PULONG ReturnBufferLength,_Out_ PNTSTATUS ProtocolStatus)
BOOL WINAPI clfsw32.SetEndOfLog(_In_ HANDLE hLog,_In_ PCLFS_LSN plsnEnd,_Inout_opt_ LPOVERLAPPED lpOverlapped)
HRESULT None None.get_QueryContentLocale([out None None,retval] LCID *plcid)
COLORREF None None.ListView_GetInsertMarkColor(HWND hwnd None)
HRESULT None shlwapi.GetAcceptLanguages(_Out_ LPTSTR pszLanguages,_Inout_ DWORD *pcchLanguages)
HRESULT None shlwapi.GetAcceptLanguagesW(_Out_ LPTSTR pszLanguages,_Inout_ DWORD *pcchLanguages)
HRESULT None shlwapi.GetAcceptLanguagesA(_Out_ LPTSTR pszLanguages,_Inout_ DWORD *pcchLanguages)
BOOL WINAPI crypt32.CertVerifySubjectCertificateContext(_In_ PCCERT_CONTEXT pSubject,_In_opt_ PCCERT_CONTEXT pIssuer,_Inout_ DWORD *pdwFlags)
HRESULT None None.StringCchPrintfEx(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags,_In_ LPCTSTR pszFormat,_In_ ... None)
HRESULT None None.StringCchPrintfExW(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags,_In_ LPCTSTR pszFormat,_In_ ... None)
HRESULT None None.StringCchPrintfExA(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags,_In_ LPCTSTR pszFormat,_In_ ... None)
HRESULT None shlwapi.IStream_ReadPidl(_In_ IStream* pstm,_Out_ PIDLIST_RELATIVE* ppidlOut)
BOOL None userenv.RefreshPolicyEx(_In_ BOOL bMachine,_In_ DWORD dwOptions)
BOOL WINAPI advapi32.AddAccessAllowedObjectAce(_Inout_ PACL pAcl,_In_ DWORD dwAceRevision,_In_ DWORD AceFlags,_In_ DWORD AccessMask,_In_opt_ GUID *ObjectTypeGuid,_In_opt_ GUID *InheritedObjectTypeGuid,_In_ PSID pSid)
HCONV WINAPI user32.DdeQueryNextServer(_In_ HCONVLIST hConvList,_In_ HCONV hConvPrev)
NET_API_STATUS None netapi32.NetServerComputerNameAdd(_In_ LPWSTR ServerName,_In_ LPWSTR EmulatedDomainName,_In_ LPWSTR EmulatedServerName)
HRESULT None None.GatherWriterMetadata([out] IVssAsync **ppAsync)
ULONG STDMETHODCALLTYPE ole32.CStdAsyncStubBuffer2_Release(_In_ IRpcStubBuffer *pthis)
HTREEITEM None None.TreeView_InsertItem(HWND hwndTV None,LPTVINSERTSTRUCT lpis None)
DWORD WINAPI kernel32.DiscardVirtualMemory(_In_ PVOID VirtualAddress,_In_ SIZE_T Size)
HRESULT None None.GetXAAccess(BOOL * pbXAAccess)
BOOL WINAPI kernel32.WriteProfileSection(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpString)
BOOL WINAPI kernel32.WriteProfileSectionW(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpString)
BOOL WINAPI kernel32.WriteProfileSectionA(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpString)
HRESULT None rtworkq.RtwqCreateAsyncResult(_In_ IUnknown *appObject,_In_ IRtwqAsyncCallback *callback,_In_ IUnknown *appState,_Out_ IRtwqAsyncResult **asyncResult)
BOOL WINAPI kernel32.EndUpdateResource(_In_ HANDLE hUpdate,_In_ BOOL fDiscard)
BOOL WINAPI kernel32.EndUpdateResourceW(_In_ HANDLE hUpdate,_In_ BOOL fDiscard)
BOOL WINAPI kernel32.EndUpdateResourceA(_In_ HANDLE hUpdate,_In_ BOOL fDiscard)
BOOL WINAPI userenv.GetUserProfileDirectory(_In_ HANDLE hToken,_Out_opt_ LPTSTR lpProfileDir,_Inout_ LPDWORD lpcchSize)
BOOL WINAPI userenv.GetUserProfileDirectoryW(_In_ HANDLE hToken,_Out_opt_ LPTSTR lpProfileDir,_Inout_ LPDWORD lpcchSize)
BOOL WINAPI userenv.GetUserProfileDirectoryA(_In_ HANDLE hToken,_Out_opt_ LPTSTR lpProfileDir,_Inout_ LPDWORD lpcchSize)
BOOL WINAPI None.FaxDevEndJob(__in HANDLE FaxHandle)
void None None.Prepare(PreparingEnlistment preparingEnlistment None)
VOID None None.FreeLsaHeap(_In_ PVOID Base)
HRESULT None None.Int8Mult(_In_ INT8 i8Multiplicand,_In_ INT8 i8Multiplier,_Out_ INT8 *pi8Result)
HRESULT None None.ULongLongAdd(_In_ ULONGLONG ullAugend,_In_ ULONGLONG ullAddend,_Out_ ULONGLONG *pullResult)
HRESULT None None.ShortMult(_In_ SHORT sMultiplicand,_In_ SHORT sMultiplier,_Out_ SHORT *psResult)
BOOL WINAPI ktmw32.GetNotificationResourceManagerAsync(_In_ HANDLE ResourceManagerHandle,_Out_ PTRANSACTION_NOTIFICATION TransactionNotification,_In_ ULONG TransactionNotificationLength,_Out_ PULONG ReturnLength,_In_ LPOVERLAPPED pOverlapped)
MMRESULT None msacm32.acmFilterEnum(HACMDRIVER had None,LPACMFILTERDETAILS pafd None,ACMFILTERENUMCB fnCallback None,DWORD_PTR dwInstance None,DWORD fdwEnum None)
MMRESULT None msacm32.acmFilterEnumW(HACMDRIVER had None,LPACMFILTERDETAILS pafd None,ACMFILTERENUMCB fnCallback None,DWORD_PTR dwInstance None,DWORD fdwEnum None)
MMRESULT None msacm32.acmFilterEnumA(HACMDRIVER had None,LPACMFILTERDETAILS pafd None,ACMFILTERENUMCB fnCallback None,DWORD_PTR dwInstance None,DWORD fdwEnum None)
HRESULT None sensorsapi.GetSupportedDataFields([out] IPortableDeviceKeyCollection **ppDataFields)
HRESULT None windowscodecs.IWICMetadataQueryReader_GetContainerFormat_Proxy(_In_ IWICMetadataQueryReader *THIS_PTR,_Out_ GUID *pguidContainerFormat)
BOOL None uxtheme.UpdatePanningFeedback(_In_ HWND hwnd,_In_ LONG lTotalOverpanOffsetX,_In_ LONG lTotalOverpanOffsetY,_In_ BOOL fInInertia)
HRESULT None windowscodecs.IWICStream_InitializeFromIStream_Proxy(_In_ IWICStream *THIS_PTR,_In_ IStream *pIStream)
void None gpsvc.RsopEnumerateUsers([out] string userSids[],[out] uint32 hResult)
LONG None None.KeSetEvent(_Inout_ PRKEVENT Event,_In_ KPRIORITY Increment,_In_ BOOLEAN Wait)
MMRESULT None msacm32.acmMetrics(HACMOBJ hao None,UINT uMetric None,LPVOID pMetric None)
HRESULT None None.GetTransformLookup([out None None,retval] LPWSTR *lookup)
HRESULT None None.get_lastChild(IXMLDOMNode **lastChild None)
BOOL None None.WIMSetTemporaryPath(HANDLE hWim None,PWSTR pszPath None)
BOOL None None.ConfigurePort(_In_ LPTSTR pName,_In_ HWND hWnd,_In_ LPTSTR pPortName)
BOOL None None.ConfigurePortW(_In_ LPTSTR pName,_In_ HWND hWnd,_In_ LPTSTR pPortName)
BOOL None None.ConfigurePortA(_In_ LPTSTR pName,_In_ HWND hWnd,_In_ LPTSTR pPortName)
HRESULT None ole32.CreateFileMoniker(_In_ LPCOLESTR lpszPathName,_Out_ LPMONIKER *ppmk)
BOOL WINAPI kernel32.HeapLock(_In_ HANDLE hHeap)
HRESULT APIENTRY None.MQCreateCursor(QUEUEHANDLE hQueue None,PHANDLE phCursor None)
HRESULT None azroles.get_NewEnum(LPUNKNOWN *ppEnumPtr None)
HRESULT None propsys.PSRegisterPropertySchema(_In_ PCWSTR pszPath)
UINT None None.ListView_MapIndexToID(HWND hwnd None,UINT index None)
HRESULT None None.VerifyingAcknowledgment(LPCWSTR wszQueueFormatName None)
HCLUSTER WINAPI clusapi.GetClusterFromGroup(_In_ HGROUP hGroup)
DWORD CALLBACK None.ChangeResourceProcessForDumps(_In_ RESOURCE_HANDLE resource,_In_ LPCWSTR processName,_In_ DWORD processId,_In_ BOOL isAdd)
HRESULT None None.QueryCancel([out] BOOL *pfCancelled)
BOOL None None.IsDigitalEndpoint(IMMDevice *pDevice None)
NET_API_STATUS None netapi32.NetGetJoinInformation(_In_ LPCWSTR lpServer,_Out_ LPWSTR *lpNameBuffer,_Out_ PNETSETUP_JOIN_STATUS BufferType)
HRESULT None None.GetFrameStatistics([out] DXGI_FRAME_STATISTICS *pStats)
INT CALLBACK None.EmbeddedUIHandler(UINT uiMessageType None,MSIHANDLE hRecord None)
NTSTATUS None None.FltAllocateExtraCreateParameterList(_In_ PFLT_FILTER Filter,_In_ FSRTL_ALLOCATE_ECPLIST_FLAGS Flags,_Out_ PECP_LIST *EcpList)
HRESULT None None.SetTouchDisableProperty(HWND hwnd None,BOOL fDisableTouch None)
HRESULT None None.GetWriterInfo([out] VSS_ID *pidInstance,[out] VSS_ID *pidWriter)
BOOL None None.ListView_GetBkImage(HWND hwndLV None,LPLVBKIMAGE plvbki None)
NTSTATUS None secur32.LsaRegisterPolicyChangeNotification(_In_ POLICY_NOTIFICATION_INFORMATION_CLASS InformationClass,_In_ HANDLE NotificationEventHandle)
HRESULT None oleaut32.LoadRegTypeLib(REFGUID rguid None,WORD wVerMajor None,WORD wVerMinor None,LCID lcid None,ITypeLib **pptlib None)
HRESULT None None.StringCbCatNEx(_Inout_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc,_In_ size_t cbMaxAppend,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCbCatNExW(_Inout_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc,_In_ size_t cbMaxAppend,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCbCatNExA(_Inout_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc,_In_ size_t cbMaxAppend,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags)
HMENU WINAPI user32.LoadMenu(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpMenuName)
HMENU WINAPI user32.LoadMenuW(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpMenuName)
HMENU WINAPI user32.LoadMenuA(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpMenuName)
LONG WINAPI advapi32.RegFlushKey(_In_ HKEY hKey)
HRESULT None shlwapi.HashData(_In_ BYTE *pbData,DWORD cbData None,_Out_ BYTE *pbHash,DWORD cbHash None)
DWORD None None.MonthCal_GetMaxTodayWidth(HWND hwndMC None)
CALID None None.MonthCal_GetCALID(HWND hmc None)
HRESULT None None.put_LoggingURL(BSTR bstrLoggingURL None)
HRESULT None None.get_length(long *listLength None)
LONG WINAPI msports.ComDBOpen(_Out_ PHCOMDB PHComDB)
NET_API_STATUS None netapi32.NetServerTransportDel(_In_ LPWSTR servername,_In_ DWORD level,_In_ LPBYTE bufptr)
uint32 None dfsrwmiv2.ExportDBClone([in] string Source,[in] string Destination,[in] uint32 ValidationLevel,[in] boolean Overwrite)
DWORD None userenv.ProcessGroupPolicyCompleted(_In_ REFGPEXTENSIONID extensionId,_In_ ASYNCCOMPLETIONHANDLE pAsyncHandle,_In_ DWORD dwStatus)
HRESULT None None.UtilAssembleStringsWithAlloc(_Out_ LPWSTR *Buffer,_In_ UINT BufferMax,_In_ LPCWSTR InputFormat,_In_ LPCWSTR InputString,_In_ BOOLEAN AdditionalArgument,_In_ ULONG AdditionalValue)
BOOL None cabinet.Decompress(_In_ DECOMPRESSOR_HANDLE DecompressorHandle,_In_ PVOID CompressedData,_In_ SIZE_T CompressedDataSize,_Out_ PVOID UncompressedBuffer,_In_ SIZE_T UncompressedBufferSize,_Out_ PSIZE_T UncompressedDataSize)
HRESULT WINAPI wofutil.WofSetFileDataLocation(_In_ HANDLE FileHandle,_In_ ULONG Provider,_In_ PVOID ExternalFileInfo,_In_ ULONG Length)
HRESULT None srmsvc.get_LastModified([out] VARIANT *pLastModified)
void None None.Prepare(PreparingEnlistment preparingEnlistment None)
BOOL WINAPI user32.GetLastInputInfo(_Out_ PLASTINPUTINFO plii)
uint32 None wvrcimprov.SetGroupRemoveVolumes([in] string ComputerName,[in] string Name,[in] string RemoveVolumeName[])
public None None.PrintTicketConverter(String deviceName None,int clientPrintSchemaVersion None)
BOOL WINAPI user32.SetDialogResizeBehavior(HWND hwnd None,DIALOG_CONTROL_DPI_CHANGE_BEHAVIORS mask None,DIALOG_CONTROL_DPI_CHANGE_BEHAVIORS values None)
MI_INLINE MI_Result None.MI_OperationOptions_SetForceFlagPromptUserMode(_Inout_ MI_OperationOptions *options,_In_ MI_Boolean forceflag)
HRESULT None faxcom.put_Csid([in] BSTR newVal)
PVOID WINAPI dbghelp.ImageDirectoryEntryToData(_In_ PVOID Base,_In_ BOOLEAN MappedAsImage,_In_ USHORT DirectoryEntry,_Out_ PULONG Size)
HRESULT None None.get_AllowClientsToConnect(VARIANT_BOOL* pVal None)
BOOL None None.GetUILanguageFallbackList(_Out_opt_ PWSTR pFallbackList,_In_ ULONG cchFallbackList,_Out_opt_ PULONG pcchFallbackListOut)
HRESULT None usp10.ScriptStringGetOrder(_In_ SCRIPT_STRING_ANALYSIS ssa,_Out_ UINT *puOrder)
void None None.Rollback(Enlistment enlistment None)
private void None.myButtonPrint_OnClick(Object sender None,System.EventArgs e None)
BOOL WINAPI credui.CredPackAuthenticationBuffer(_In_ DWORD dwFlags,_In_ LPTSTR pszUserName,_In_ LPTSTR pszPassword,_Out_ PBYTE pPackedCredentials,_Inout_ DWORD *pcbPackedCredentials)
BOOL WINAPI credui.CredPackAuthenticationBufferW(_In_ DWORD dwFlags,_In_ LPTSTR pszUserName,_In_ LPTSTR pszPassword,_Out_ PBYTE pPackedCredentials,_Inout_ DWORD *pcbPackedCredentials)
BOOL WINAPI credui.CredPackAuthenticationBufferA(_In_ DWORD dwFlags,_In_ LPTSTR pszUserName,_In_ LPTSTR pszPassword,_Out_ PBYTE pPackedCredentials,_Inout_ DWORD *pcbPackedCredentials)
HRESULT None windowscodecs.IWICImagingFactory_CreateFastMetadataEncoderFromDecoder_Proxy(_In_ IWICImagingFactory *pFactory,_In_ IWICBitmapDecoder *pIDecoder,_Out_ IWICFastMetadataEncoder **ppIFME)
LPVOID WINAPI kernel32.MapViewOfFile(_In_ HANDLE hFileMappingObject,_In_ DWORD dwDesiredAccess,_In_ DWORD dwFileOffsetHigh,_In_ DWORD dwFileOffsetLow,_In_ SIZE_T dwNumberOfBytesToMap)
ULONG None advapi32.EventWrite(_In_ REGHANDLE RegHandle,_In_ PCEVENT_DESCRIPTOR EventDescriptor,_In_ ULONG UserDataCount,_In_opt_ PEVENT_DATA_DESCRIPTOR UserData)
HRESULT None None.get_fractionDigits(VARIANT* fractionDigits None)
ULONG None sechost.RegisterTraceGuids(_In_ WMIDPREQUEST RequestAddress,_In_ PVOID RequestContext,_In_ LPCGUID ControlGuid,_In_ ULONG GuidCount,_Inout_ PTRACE_GUID_REGISTRATION TraceGuidReg,_In_ LPCTSTR MofImagePath,_In_ LPCTSTR MofResourceName,_Out_ PTRACEHANDLE RegistrationHandle)
ULONG None sechost.RegisterTraceGuidsW(_In_ WMIDPREQUEST RequestAddress,_In_ PVOID RequestContext,_In_ LPCGUID ControlGuid,_In_ ULONG GuidCount,_Inout_ PTRACE_GUID_REGISTRATION TraceGuidReg,_In_ LPCTSTR MofImagePath,_In_ LPCTSTR MofResourceName,_Out_ PTRACEHANDLE RegistrationHandle)
ULONG None sechost.RegisterTraceGuidsA(_In_ WMIDPREQUEST RequestAddress,_In_ PVOID RequestContext,_In_ LPCGUID ControlGuid,_In_ ULONG GuidCount,_Inout_ PTRACE_GUID_REGISTRATION TraceGuidReg,_In_ LPCTSTR MofImagePath,_In_ LPCTSTR MofResourceName,_Out_ PTRACEHANDLE RegistrationHandle)
BOOL WINAPI user32.DestroyWindow(_In_ HWND hWnd)
HRESULT None ole32.OleGetClipboardWithEnterpriseInfo(_Out_ IDATAOBJECT **dataObject,_Out_ PWSTR *dataEnterpriseId,_Out_ PWSTR *sourceDescription,_Out_ PWSTR *targetDescription,_Out_ PWSTR *dataDescription)
LONG TSPIAPI None.TUISPI_phoneConfigDialog(TUISPIDLLCALLBACK lpfnUIDLLCallback None,DWORD dwDeviceID None,HWND hwndOwner None,LPCWSTR lpszDeviceClass None)
INT None mswsock.EnumProtocols(_In_opt_ LPINT lpiProtocols,_Out_ LPVOID lpProtocolBuffer,_Inout_ LPDWORD lpdwBufferLength)
INT None mswsock.EnumProtocolsW(_In_opt_ LPINT lpiProtocols,_Out_ LPVOID lpProtocolBuffer,_Inout_ LPDWORD lpdwBufferLength)
INT None mswsock.EnumProtocolsA(_In_opt_ LPINT lpiProtocols,_Out_ LPVOID lpProtocolBuffer,_Inout_ LPDWORD lpdwBufferLength)
DWORD None None.StartDocPrinter(_In_ HANDLE hPrinter,_In_ DWORD Level,_In_ LPBYTE pDocInfo)
DWORD None None.StartDocPrinterW(_In_ HANDLE hPrinter,_In_ DWORD Level,_In_ LPBYTE pDocInfo)
DWORD None None.StartDocPrinterA(_In_ HANDLE hPrinter,_In_ DWORD Level,_In_ LPBYTE pDocInfo)
HRESULT None shlwapi.AssocQueryKey(_In_ ASSOCF flags,_In_ ASSOCKEY key,_In_ LPCTSTR pszAssoc,_In_ LPCTSTR pszExtra,_Out_ HKEY *phkeyOut)
HRESULT None shlwapi.AssocQueryKeyW(_In_ ASSOCF flags,_In_ ASSOCKEY key,_In_ LPCTSTR pszAssoc,_In_ LPCTSTR pszExtra,_Out_ HKEY *phkeyOut)
HRESULT None shlwapi.AssocQueryKeyA(_In_ ASSOCF flags,_In_ ASSOCKEY key,_In_ LPCTSTR pszAssoc,_In_ LPCTSTR pszExtra,_Out_ HKEY *phkeyOut)
LONG TSPIAPI None.TSPI_phoneNegotiateTSPIVersion(DWORD dwDeviceID None,DWORD dwLowVersion None,DWORD dwHighVersion None,LPDWORD lpdwTSPIVersion None)
EVT_HANDLE WINAPI wevtapi.EvtNextEventMetadata(_In_ EVT_HANDLE EventMetadataEnum,_In_ DWORD Flags)
HRESULT None msdrm.DRMGetServiceLocation(_In_opt_ DRMHSESSION hClient,_In_ UINT uServiceType,_In_ UINT uServiceLocation,_In_ PWSTR wszIssuanceLicense,_Inout_ UINT *puServiceURLLength,_Out_ PWSTR wszServiceURL)
BOOL WINAPI ktmw32.RecoverResourceManager(_In_ HANDLE ResourceManagerHandle)
HRESULT None None.get_Handle([out] OLE_HANDLE *pHandle)
HRESULT None uxtheme.CloseThemeData(_In_ HTHEME hTheme)
DWORD WINAPI resutils.ResUtilSetQwordValue(_In_ HKEY hkeyClusterKey,_In_ LPCWSTR pszValueName,_In_ ULONGLONG qwNewValue,_Inout_opt_ PULONGLONG pqwOutValue)
HRESULT None mfplat.MFAllocateWorkQueueEx(_In_ MFASYNC_WORKQUEUE_TYPE WorkQueueType,_Out_ DWORD *pdwWorkQueue)
BOOLEAN WINAPI secur32.TranslateName(_In_ LPCTSTR lpAccountName,_In_ EXTENDED_NAME_FORMAT AccountNameFormat,_In_ EXTENDED_NAME_FORMAT DesiredNameFormat,_Out_ LPTSTR lpTranslatedName,_Inout_ PULONG nSize)
BOOLEAN WINAPI secur32.TranslateNameW(_In_ LPCTSTR lpAccountName,_In_ EXTENDED_NAME_FORMAT AccountNameFormat,_In_ EXTENDED_NAME_FORMAT DesiredNameFormat,_Out_ LPTSTR lpTranslatedName,_Inout_ PULONG nSize)
BOOLEAN WINAPI secur32.TranslateNameA(_In_ LPCTSTR lpAccountName,_In_ EXTENDED_NAME_FORMAT AccountNameFormat,_In_ EXTENDED_NAME_FORMAT DesiredNameFormat,_Out_ LPTSTR lpTranslatedName,_Inout_ PULONG nSize)
NET_API_STATUS None netapi32.NetLocalGroupSetInfo(_In_ LPCWSTR servername,_In_ LPCWSTR groupname,_In_ DWORD level,_In_ LPBYTE buf,_Out_ LPDWORD parm_err)
LONG WINAPI advapi32.RegLoadKey(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_ LPCTSTR lpFile)
LONG WINAPI advapi32.RegLoadKeyW(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_ LPCTSTR lpFile)
LONG WINAPI advapi32.RegLoadKeyA(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_ LPCTSTR lpFile)
WINOLEAPI None ole32.StgOpenAsyncDocfileOnIFillLockBytes(_In_ IFillLockBytes *ppflb,_In_ DWORD grfmode,_In_ DWORD asyncFlags,_Out_ IStorage **ppstgOpen)
LRESULT None None.Button_SetStyle(HWND hwndCtl None,DWORD style None,BOOL fRedraw None)
protected void None.OnStylusDown(StylusDownEventArgs e None)
HRESULT None oleaut32.VarR8FromDisp(IDispatch *pdispIn None,_In_ LCID lcid,_Out_ DOUBLE *pdblOut)
BOOL WINAPI user32.SetMenu(_In_ HWND hWnd,_In_opt_ HMENU hMenu)
BOOL None url.InetIsOffline(DWORD dwFlags None)
NTSTATUS NTAPI None.CreateTokenEx(_In_ PLUID LogonId,_In_ PTOKEN_SOURCE TokenSource,_In_ SECURITY_LOGON_TYPE LogonType,_In_ SECURITY_IMPERSONATION_LEVEL ImpersonationLevel,_In_ LSA_TOKEN_INFORMATION_TYPE TokenInformationType,_In_ PVOID TokenInformation,_In_ PTOKEN_GROUPS TokenGroups,_In_ PUNICODE_STRING Workstation,_In_ PUNICODE_STRING ProfilePath,_In_ PVOID SessionInformation,_In_ SECPKG_SESSIONINFO_TYPE SessionInformationType,_Out_ PHANDLE Token,_Out_ PNTSTATUS SubStatus)
NET_API_STATUS None netapi32.NetJoinDomain(_In_ LPCWSTR lpServer,_In_ LPCWSTR lpDomain,_In_ LPCWSTR lpAccountOU,_In_ LPCWSTR lpAccount,_In_ LPCWSTR lpPassword,_In_ DWORD fJoinOptions)
NET_API_STATUS None netapi32.NetShareCheck(_In_ LPWSTR servername,_In_ LPWSTR device,_Out_ LPDWORD type)
BOOL WINAPI kernel32.GlobalUnlock(_In_ HGLOBAL hMem)
HRESULT None mfplat.MFLockSharedWorkQueue(_In_ PCWSTR wszClass,_In_ LONG BasePriority,_Inout_ DWORD *pdwTaskId,_Out_ DWORD *pID)
BOOL None None.EnumPrintProcessors(_In_ LPTSTR pName,_In_ LPTSTR pEnvironment,_In_ DWORD Level,_Out_ LPBYTE pPrintProcessorInfo,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded,_Out_ LPDWORD pcReturned)
BOOL None None.EnumPrintProcessorsW(_In_ LPTSTR pName,_In_ LPTSTR pEnvironment,_In_ DWORD Level,_Out_ LPBYTE pPrintProcessorInfo,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded,_Out_ LPDWORD pcReturned)
BOOL None None.EnumPrintProcessorsA(_In_ LPTSTR pName,_In_ LPTSTR pEnvironment,_In_ DWORD Level,_Out_ LPBYTE pPrintProcessorInfo,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded,_Out_ LPDWORD pcReturned)
HRESULT WINAPI userenv.GetAppContainerRegistryLocation(_In_ REGSAM desiredAccess,_Out_ PHKEY phAppContainerKey)
UINT WINAPI msi.MsiOpenPackageEx(_In_ LPCTSTR szPackagePath,_In_ DWORD dwOptions,_Out_ MSIHANDLE *hProduct)
UINT WINAPI msi.MsiOpenPackageExW(_In_ LPCTSTR szPackagePath,_In_ DWORD dwOptions,_Out_ MSIHANDLE *hProduct)
UINT WINAPI msi.MsiOpenPackageExA(_In_ LPCTSTR szPackagePath,_In_ DWORD dwOptions,_Out_ MSIHANDLE *hProduct)
BOOL WINAPI clfsw32.ReadLogArchiveMetadata(_In_ CLFS_LOG_ARCHIVE_CONTEXT pvArchiveContext,_In_ ULONG cbOffset,_In_ ULONG cbBytesToRead,_Inout_ PBYTE pbReadBuffer,_Out_ PULONG pcbBytesRead)
BOOL WINAPI comdlg32.ChooseColor(_Inout_ LPCHOOSECOLOR lpcc)
BOOL WINAPI comdlg32.ChooseColorW(_Inout_ LPCHOOSECOLOR lpcc)
BOOL WINAPI comdlg32.ChooseColorA(_Inout_ LPCHOOSECOLOR lpcc)
NTSTATUS None None.WdfRegistryAssignULong(_In_ WDFKEY Key,_In_ PCUNICODE_STRING ValueName,_In_ ULONG Value)
NTSTATUS None None.PsRemoveLoadImageNotifyRoutine(_In_ PLOAD_IMAGE_NOTIFY_ROUTINE NotifyRoutine)
UINT_PTR CALLBACK None.PagePaintHook(_In_ HWND hdlg,_In_ UINT uiMsg,_In_ WPARAM wParam,_In_ LPARAM lParam)
UINT None msi.MsiDoAction(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szAction)
UINT None msi.MsiDoActionW(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szAction)
UINT None msi.MsiDoActionA(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szAction)
BOOL WINAPI authz.AuthzAccessCheck(_In_ DWORD flags,_In_ AUTHZ_CLIENT_CONTEXT_HANDLE hAuthzClientContext,_In_ PAUTHZ_ACCESS_REQUEST pRequest,_In_opt_ AUTHZ_AUDIT_EVENT_HANDLE AuditEvent,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_opt_ PSECURITY_DESCRIPTOR *OptionalSecurityDescriptorArray,_In_opt_ DWORD OptionalSecurityDescriptorCount,_Inout_ PAUTHZ_ACCESS_REPLY pReply,_Out_opt_ PAUTHZ_ACCESS_CHECK_RESULTS_HANDLE phAccessCheckResults)
public DependentTransaction None.DependentClone(DependentCloneOption cloneOption None)
HRESULT None wmvcore.WMCreateSyncReader(_In_ IUnknown *pUnkCert,_In_ DWORD dwRights,_Out_ IWMSyncReader **ppSyncReader)
HRESULT None None.StringCbCat(_Inout_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc)
HRESULT None None.StringCbCatW(_Inout_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc)
HRESULT None None.StringCbCatA(_Inout_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc)
DWORD None advapi32.InstallApplication(_In_ PINSTALLDATA *pInstallInfo)
LRESULT CALLBACK None.WindowProc(HWND hwnd None,WM_IME_KEYUP None None,WPARAM wParam None,LPARAM lParam None)
UINT_PTR CALLBACK None.CFHookProc(_In_ HWND hdlg,_In_ UINT uiMsg,_In_ WPARAM wParam,_In_ LPARAM lParam)
HRESULT WINAPI ndfapi.NdfCreateConnectivityIncident(_Out_ NDFHANDLE *handle)
ULONG STDMETHODCALLTYPE rpcrt4.CStdStubBuffer_CountRefs(_In_ IRpcStubBuffer *This)
uint64 None srmsvc.Reset([in] string Template,[out] MSFT_FSRMQuota Quota)
protected void None.OnPreviewStylusButtonDown(StylusButtonEventArgs e None)
public void None.SetApartmentState(ApartmentState state None)
NTSTATUS None None.ZwEnumerateKey(_In_ HANDLE KeyHandle,_In_ ULONG Index,_In_ KEY_INFORMATION_CLASS KeyInformationClass,_Out_opt_ PVOID KeyInformation,_In_ ULONG Length,_Out_ PULONG ResultLength)
HANDLE WINAPI kernel32.CreateMemoryResourceNotification(_In_ MEMORY_RESOURCE_NOTIFICATION_TYPE NotificationType)
public String None.Trim(char[] trimChars None)
BOOL None None.TreeView_SelectSetFirstVisible(HWND hwndTV None,HTREEITEM hitem None)
HRESULT None shell32.InvokeCommand(LPCMINVOKECOMMANDINFO pici None)
HRESULT WINAPI d3dcompiler_47.D3DDisassemble11Trace(in LPCVOID pSrcData,in SIZE_T SrcDataSize,in ID3D11ShaderTrace pTrace,in UINT StartStep,in UINT NumSteps,in UINT Flags,out ID3DBlob ppDisassembly)
PVOID CALLBACK None.FunctionTableAccessProc64(_In_ HANDLE hProcess,_In_ DWORD64 AddrBase)
WINAPI None iscsidsc.AddIscsiStaticTarget(_In_ PTCHAR TargetName,_In_opt_ PTCHAR TargetAlias,_In_ ISCSI_TARGET_FLAGS TargetFlags,_In_ BOOLEAN Persist,_In_opt_ PISCSI_TARGET_MAPPING Mappings,_In_opt_ PISCSI_LOGIN_OPTIONS LoginOptions,_In_opt_ PISCSI_TARGET_PORTAL_GROUP PortalGroup)
WINAPI None iscsidsc.AddIscsiStaticTargetW(_In_ PTCHAR TargetName,_In_opt_ PTCHAR TargetAlias,_In_ ISCSI_TARGET_FLAGS TargetFlags,_In_ BOOLEAN Persist,_In_opt_ PISCSI_TARGET_MAPPING Mappings,_In_opt_ PISCSI_LOGIN_OPTIONS LoginOptions,_In_opt_ PISCSI_TARGET_PORTAL_GROUP PortalGroup)
WINAPI None iscsidsc.AddIscsiStaticTargetA(_In_ PTCHAR TargetName,_In_opt_ PTCHAR TargetAlias,_In_ ISCSI_TARGET_FLAGS TargetFlags,_In_ BOOLEAN Persist,_In_opt_ PISCSI_TARGET_MAPPING Mappings,_In_opt_ PISCSI_LOGIN_OPTIONS LoginOptions,_In_opt_ PISCSI_TARGET_PORTAL_GROUP PortalGroup)
BOOL WINAPI dbghelp.SymGetLineFromAddr64(_In_ HANDLE hProcess,_In_ DWORD64 dwAddr,_Out_ PDWORD pdwDisplacement,_Out_ PIMAGEHLP_LINE64 Line)
BOOL WINAPI dbghelp.SymGetLineFromAddrW64(_In_ HANDLE hProcess,_In_ DWORD64 dwAddr,_Out_ PDWORD pdwDisplacement,_Out_ PIMAGEHLP_LINE64 Line)
BOOL WINAPI dbghelp.SymGetLineFromAddr64(_In_ HANDLE hProcess,_In_ DWORD64 dwAddr,_Out_ PDWORD pdwDisplacement,_Out_ PIMAGEHLP_LINE64 Line)
HRESULT None rdpencom.get_Attendees([out] IRDPSRAPIAttendeeManager **ppVal)
HRESULT None None.setProxy(SXH_PROXY_SETTING proxySetting None,VARIANT varProxyServer None,VARIANT varBypassList None)
DWORD None None.NPGetConnection3(_In_ LPCWSTR lpLocalName,_In_ DWORD dwLevel,_Out_ LPVOID lpBuffer,_Inout_ LPDWORD lpBufferSize)
HRESULT WINOLEAPI ole32.CoAllowUnmarshalerCLSID(_In_ REFCLSID clsid)
NTSTATUS None None.WdfUsbTargetDeviceCreateWithParameters(_In_ WDFDEVICE Device,_In_ PWDF_USB_DEVICE_CREATE_CONFIG Config,_In_opt_ PWDF_OBJECT_ATTRIBUTES Attributes,_Out_ WDFUSBDEVICE *UsbDevice)
protected void None.OnGoToPageCommand(int pageNumber None)
ULONG WINAPI sechost.TraceSetInformation(_In_ TRACEHANDLE SessionHandle,_In_ TRACE_INFO_CLASS InformationClass,_In_ PVOID TraceInformation,_In_ ULONG InformationLength)
HRESULT None windowscodecs.GetDcHuffmanTable(UINT scanIndex None,UINT tableIndex None,[out] DXGI_JPEG_AC_HUFFMAN_TABLE *pAcHuffmanTable)
HRESULT None srmsvc.get_LastError([out] BSTR *lastError)
LPPROPERTYINFO WINAPI None.GetPropertyInfo(HPROPERTY hProperty None)
HRESULT None None.RemoveTool(IDirectMusicTool * pTool)
HRESOURCE WINAPI clusapi.CreateClusterResource(_In_ HGROUP hGroup,_In_ LPCWSTR lpszResourceName,_In_ LPCWSTR lpszResourceType,_In_ DWORD dwFlags)
protected Size None.ArrangeOverride(Size finalSize None)
BOOL WINAPI advapi32.ChangeServiceConfig2(_In_ SC_HANDLE hService,_In_ DWORD dwInfoLevel,_In_opt_ LPVOID lpInfo)
BOOL WINAPI advapi32.ChangeServiceConfig2W(_In_ SC_HANDLE hService,_In_ DWORD dwInfoLevel,_In_opt_ LPVOID lpInfo)
BOOL WINAPI advapi32.ChangeServiceConfig2A(_In_ SC_HANDLE hService,_In_ DWORD dwInfoLevel,_In_opt_ LPVOID lpInfo)
ULONG TDHAPI tdh.TdhCreatePayloadFilter(_In_ LPGUID ProviderGuid,_In_ PCEVENT_DESCRIPTOR EventDescriptor,_In_ BOOLEAN EventMatchANY,_In_ ULONG PayloadPredicateCount,_In_ PPAYLOAD_FILTER_PREDICATE PayloadPredicates,_Out_ PVOID *PayloadFilter)
uint32 None netpeerdistcim.Export_BCCachePackageByExportDataCache([in] boolean ExportDataCache,[in] string Destination,[in] boolean Force)
VOID None None.InitializeListHead(_Out_ PLIST_ENTRY ListHead)
HRESULT STDMETHODCALLTYPE None.WMCreateSecureChannel_DES(IWMSecureChannel **ppChannel None)
DWORD WINAPI clusapi.DeleteClusterGroup(_In_ HGROUP hGroup)
HRESULT None mfreadwrite.MFCreateSourceReaderFromByteStream(_In_ IMFByteStream *pByteStream,_In_ IMFAttributes *pAttributes,_Out_ IMFSourceReader **ppSourceReader)
DWORD PXEAPI wdspxe.PxeDhcpv6GetVendorOptionValue(_In_ PVOID pPacket,_In_ ULONG uPacketLen,_In_ DWORD dwEnterpriseNumber,_In_ WORD wOption,_In_ ULONG uInstance,_Out_opt_ PWORD pwOptionLen,_Out_opt_ PVOID *ppOptionValue)
DWORD WINAPI clusapi.CancelClusterGroupOperation(_In_ HGROUP hGroup,_In_ DWORD dwCancelFlags_RESERVED)
WINOLEAPI None ole32.StgGetIFillLockBytesOnFile(_In_ OLECHAR *pwcsName,_Out_ IFillLockBytes **ppflb)
HRESULT None cscsvc.GetOriginalInfo([out] IOfflineFilesSyncErrorItemInfo **ppInfo)
VOID CALLBACK None.PFN_WdsTransportClientReceiveContents(_In_ HANDLE hSessionKey,_In_ PVOID pCallerData,_In_ PVOID pMetadata,_In_ ULONG ulSize,_In_ PULARGE_INTEGER pContentOffset)
public boolean None.CanExecute(Object parameter None,IInputElement target None)
HRESULT None None.GetDesc([out] DXGI_OUTPUT_DESC *pDesc)
UINT None msi.MsiSourceListClearSource(_In_ LPCTSTR szProductCodeOrPatchCode,_In_opt_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD dwOptions,_In_ LPCTSTR szSource)
UINT None msi.MsiSourceListClearSourceW(_In_ LPCTSTR szProductCodeOrPatchCode,_In_opt_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD dwOptions,_In_ LPCTSTR szSource)
UINT None msi.MsiSourceListClearSourceA(_In_ LPCTSTR szProductCodeOrPatchCode,_In_opt_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD dwOptions,_In_ LPCTSTR szSource)
BOOL None None.WPUResetEvent(_In_ WSAEVENT hEvent,_Out_ LPINT lpErrno)
HRESULT None oleaut32.VarUI8FromR8(_In_ DOUBLE dblIn,_Out_ ULONG64 *pi64Out)
HRESULT WINAPI None.IsWow64GuestMachineSupported(_In_ USHORT WowGuestMachine,_Out_ BOOLEAN *MachineIsSupported)
HRESULT None None.QueryTextMetrics([out] TEXTMETRICOLE *pTM)
HRESULT None None.GatherWriterStatus([out] IVssAsync **ppAsync)
BOOL None None.PropSheet_SetCurSel(HWND hPropSheetDlg None,HPROPSHEETPAGE hpage None,UINT index None)
BOOL WINAPI kernel32.ExecuteUmsThread(_Inout_ PUMS_CONTEXT UmsThread)
NTSTATUS None advapi32.LsaOpenPolicy(_In_ PLSA_UNICODE_STRING SystemName,_In_ PLSA_OBJECT_ATTRIBUTES ObjectAttributes,_In_ ACCESS_MASK DesiredAccess,_Inout_ PLSA_HANDLE PolicyHandle)
BOOL WINAPI clfsw32.TerminateReadLog(_In_ PVOID pvCursorContext)
BOOL WINAPI clfsw32.DeleteLogFile(_In_ LPCWSTR pszLogFileName,_In_opt_ PVOID pvReserved)
HRESULT APIENTRY None.MQGetSecurityContext(LPVOID lpCertBuffer None,DWORD dwCertBufferLength None,HANDLE * phSecurityContext)
UINT_PTR CALLBACK None.OFNHookProc(_In_ HWND hdlg,_In_ UINT uiMsg,_In_ WPARAM wParam,_In_ LPARAM lParam)
NTSTATUS None secur32.LsaUnregisterPolicyChangeNotification(_In_ POLICY_NOTIFICATION_INFORMATION_CLASS InformationClass,_In_ HANDLE NotificationEventHandle)
public DependentTransaction None.DependentClone(DependentCloneOption cloneOption None)
HRESULT None None.get_responseText(VARIANT* pvarVal None)
NTSTATUS None None.WdfDeviceStopIdle(_In_ WDFDEVICE Device,_In_ BOOLEAN WaitForD0)
DWORD None iphlpapi.GetIpErrorString(_In_ IP_STATUS ErrorCode,_Out_ PWCHAR Buffer,_Inout_ PDWORD Size)
HRESULT None None.replaceChild(IXMLDOMNode *newChild None,IXMLDOMNode *oldChild None,IXMLDOMNode **outOldChild None)
HRESULT None None.GetVersion([out] DWORD *pdwVersion)
HRESULT WINAPI iscsidsc.RemoveIsnsServer(_In_ PTCHAR Address)
HRESULT WINAPI iscsidsc.RemoveIsnsServerW(_In_ PTCHAR Address)
HRESULT WINAPI iscsidsc.RemoveIsnsServerA(_In_ PTCHAR Address)
BOOL WINAPI kernel32.CancelIoEx(_In_ HANDLE hFile,_In_opt_ LPOVERLAPPED lpOverlapped)
BOOL None None.ScreenSaverConfigureDialog(HWND hDlg None,UINT message None,WPARAM wParam None,LPARAM lParam None)
BOOL WINAPI kernel32.EnumResourceTypesEx(_In_opt_ HMODULE hModule,_In_ ENUMRESTYPEPROC lpEnumFunc,_In_ LONG_PTR lParam,_In_ DWORD dwFlags,_In_ LANGID LangId)
BOOL WINAPI kernel32.EnumResourceTypesExW(_In_opt_ HMODULE hModule,_In_ ENUMRESTYPEPROC lpEnumFunc,_In_ LONG_PTR lParam,_In_ DWORD dwFlags,_In_ LANGID LangId)
BOOL WINAPI kernel32.EnumResourceTypesExA(_In_opt_ HMODULE hModule,_In_ ENUMRESTYPEPROC lpEnumFunc,_In_ LONG_PTR lParam,_In_ DWORD dwFlags,_In_ LANGID LangId)
public void None.StopTracing(String profileFileName None,String propertyName None,String outputFileName None)
MI_INLINE MI_Result mi.MI_OperationOptions_GetPromptUserRegularMode(_Inout_ MI_OperationOptions *options,_Out_ MI_CallbackMode *mode,_Out_ MI_Boolean *ackValue)
HRESULT None None.CreateHullShader(const void *pShaderBytecode,SIZE_T BytecodeLength None,ID3D11ClassLinkage *pClassLinkage None,ID3D11HullShader **ppHullShader None)
public None None.XpsDocument(Package package None,CompressionOption compressionOption None,String path None)
LONG WINAPI tapi32.lineNegotiateAPIVersion(HLINEAPP hLineApp None,DWORD dwDeviceID None,DWORD dwAPILowVersion None,DWORD dwAPIHighVersion None,LPDWORD lpdwAPIVersion None,LPLINEEXTENSIONID lpExtensionID None)
HRESULT None sensorsapi.GetEventInterest([out] GUID **ppValues,[out] ULONG *pCount)
HRESULT None None.get_FloppyDrives([out] IVMFloppyDriveCollection **floppyCollection)
uint32 None wvrcimprov.ClearMetadataAll([in] string ComputerName,[in] boolean AllConfiguration,[in] boolean AllLogs,[in] boolean AllPartitions,[in] boolean NoRestart)
HRESULT None azroles.get_TargetMachine([out] BSTR *pbstrDescription)
HRESULT None None.GetStorageFormat([out] WMT_STORAGE_FORMAT *pnStorageFormat)
ULONG None sechost.EnableTraceEx2(_In_ TRACEHANDLE TraceHandle,_In_ LPCGUID ProviderId,_In_ ULONG ControlCode,_In_ UCHAR Level,_In_ ULONGLONG MatchAnyKeyword,_In_ ULONGLONG MatchAllKeyword,_In_ ULONG Timeout,_In_opt_ PENABLE_TRACE_PARAMETERS EnableParameters)
public Enlistment None.EnlistDurable(Guid resourceManagerIdentifier None,ISinglePhaseNotification singlePhaseNotification None,EnlistmentOptions enlistmentOptions None)
protected void None.RemoveVisualChild(Visual child None)
protected boolean None.ProcessMnemonic(char charCode None)
HRESULT None None.schema(ISchema* schema None)
HRESULT WDSCLIAPI wdsclientapi.WdsCliGetImageDescription(_In_ HANDLE hIfh,_Out_ PWSTR *ppwszValue)
BOOL None kernel32.IsCalendarLeapYear(_In_ CALID calId,_In_ UINT year,_In_ UINT era)
BOOL WINAPI kernel32.SetProcessWorkingSetSize(_In_ HANDLE hProcess,_In_ SIZE_T dwMinimumWorkingSetSize,_In_ SIZE_T dwMaximumWorkingSetSize)
HRESULT None wiaservc.idtGetExtendedTransferInfo([out] PWIA_EXTENDED_TRANSFER_INFO pExtendedTransferInfo)
HRESULT None None.get_BootImage([out] IStream **pVal)
WINAPI None msdrm.DRMGetSignedIssuanceLicenseEx(_In_ DRMENVHANDLE hEnv,_In_ DRMPUBHANDLE hIssuanceLicense,_In_ UINT uFlags,_In_ BYTE *pbSymKey,_In_ UINT cbSymKey,_In_ PWSTR wszSymKeyType,_In_ VOID *pvReserved,_In_ DRMHANDLE hEnablingPrincipal,_In_ DRMHANDLE hBoundLicense,_In_ DRMCALLBACK pfnCallback,_In_ VOID *pvContext)
DWORD WINAPI resutils.ResUtilSetResourceServiceStartParameters(_In_ LPCWSTR pszServiceName,_In_ SC_HANDLE schSCMHandle,_Inout_ LPSC_HANDLE phService,_In_ PLOG_EVENT_ROUTINE pfnLogEvent,_In_ RESOURCE_HANDLE hResourceHandle)
LONG TSPIAPI None.TSPI_phoneOpen(DWORD dwDeviceID None,HTAPIPHONE htPhone None,LPHDRVPHONE lphdPhone None,DWORD dwTSPIVersion None,PHONEEVENT lpfnEventProc None)
HDC None uxtheme.GetBufferedPaintDC(HPAINTBUFFER hBufferedPaint None)
BOOL WINAPI kernel32.GetThreadTimes(_In_ HANDLE hThread,_Out_ LPFILETIME lpCreationTime,_Out_ LPFILETIME lpExitTime,_Out_ LPFILETIME lpKernelTime,_Out_ LPFILETIME lpUserTime)
BOOL WINAPI kernel32.InstallELAMCertificateInfo(_In_ HANDLE ELAMFile)
HRESULT None oleacc.get_accSelection([out None None,retval] VARIANT *pvarChildren)
HRESULT None None.GetStream([out None None,retval] IStream **manifestStream)
HRESULT None None.get_hPal([out] OLE_HANDLE *phPal)
BOOL None None.DeleteForm(_In_ HANDLE hPrinter,_In_ LPTSTR pFormName)
BOOL None None.DeleteFormW(_In_ HANDLE hPrinter,_In_ LPTSTR pFormName)
BOOL None None.DeleteFormA(_In_ HANDLE hPrinter,_In_ LPTSTR pFormName)
BOOL None spoolss.EndPagePrinter(_In_ HANDLE hPrinter)
HRESULT None ole32.StringFromIID(_In_ REFIID rclsid,_Out_ LPOLESTR *lplpsz)
BOOL WINAPI crypt32.CryptUnregisterDefaultOIDFunction(_In_ DWORD dwEncodingType,_In_ LPCSTR pszFuncName,_In_ LPCWSTR pwszDll)
HRESULT None azroles.get_PolicyAdministratorsName([out] VARIANT *pvarAdmins)
HRESULT None None.PlayMediaFile(HWND hwnd None,PCWSTR pszURL None)
HRESULT None oleaut32.VarI2FromI8(_In_ LONG64 i64In,_Out_ SHORT *psOut)
public void None.InstallApplication(string package None,InstallationOptions options None)
HRESULT None None.ImportSnapshots([out] IVssAsync **ppAsync)
HRESULT None azroles.get_Operations([out] IAzOperations **ppOperationCollection)
HRESULT None oleaut32.VarUI4FromUI8(_In_ ULONG64 ui64In,_Out_ ULONG *plOut)
HRESULT WINAPI wsdapi.WSDCreateDiscoveryPublisher2(_In_ IWSDXMLContext *pContext,_In_ WSD_CONFIG_PARAM *pConfigParams,_In_ DWORD dwConfigParamCount,_Out_ IWSDiscoveryPublisher **ppPublisher)
DWORD WINAPI user32.CheckMenuItem(_In_ HMENU hmenu,_In_ UINT uIDCheckItem,_In_ UINT uCheck)
BOOL WINAPI user32.DdeUninitialize(_In_ DWORD idInst)
HRESULT None None.GetGlyphMappingCount([out None None,retval] UINT32 *glyphMappingCount)
DWORD None imm32.ImmGetConversionList(_In_ HKL hKL,_In_ HIMC hIMC,_In_ LPCTSTR lpSrc,_Out_ LPCANDIDATELIST lpDst,_In_ DWORD dwBufLen,_In_ UINT uFlag)
DWORD None imm32.ImmGetConversionListW(_In_ HKL hKL,_In_ HIMC hIMC,_In_ LPCTSTR lpSrc,_Out_ LPCANDIDATELIST lpDst,_In_ DWORD dwBufLen,_In_ UINT uFlag)
DWORD None imm32.ImmGetConversionListA(_In_ HKL hKL,_In_ HIMC hIMC,_In_ LPCTSTR lpSrc,_Out_ LPCANDIDATELIST lpDst,_In_ DWORD dwBufLen,_In_ UINT uFlag)
BOOL WINAPI winhttp.WinHttpGetIEProxyConfigForCurrentUser(_Inout_ WINHTTP_CURRENT_USER_IE_PROXY_CONFIG *pProxyConfig)
NTSTATUS None advapi32.LsaEnumerateTrustedDomainsEx(_In_ LSA_HANDLE PolicyHandle,_In_ PLSA_ENUMERATION_HANDLE EnumerationContext,_Out_ PVOID *Buffer,_In_ ULONG PreferredMaximumLength,_Out_ PULONG CountReturned)
BOOL WINAPI kernel32.EnumResourceLanguagesEx(_In_ HMODULE hModule,_In_ LPCTSTR lpType,_In_ LPCTSTR lpName,_In_ ENUMRESLANGPROC lpEnumFunc,_In_ LONG_PTR lParam,_In_ DWORD dwFlags,_In_ LANGID LangId)
BOOL WINAPI kernel32.EnumResourceLanguagesExW(_In_ HMODULE hModule,_In_ LPCTSTR lpType,_In_ LPCTSTR lpName,_In_ ENUMRESLANGPROC lpEnumFunc,_In_ LONG_PTR lParam,_In_ DWORD dwFlags,_In_ LANGID LangId)
BOOL WINAPI kernel32.EnumResourceLanguagesExA(_In_ HMODULE hModule,_In_ LPCTSTR lpType,_In_ LPCTSTR lpName,_In_ ENUMRESLANGPROC lpEnumFunc,_In_ LONG_PTR lParam,_In_ DWORD dwFlags,_In_ LANGID LangId)
HRESULT None ole32.CLSIDFromProgID(_In_ LPCOLESTR lpszProgID,_Out_ LPCLSID lpclsid)
HANDLE WINAPI kernel32.BeginUpdateResource(_In_ LPCTSTR pFileName,_In_ BOOL bDeleteExistingResources)
HANDLE WINAPI kernel32.BeginUpdateResourceW(_In_ LPCTSTR pFileName,_In_ BOOL bDeleteExistingResources)
HANDLE WINAPI kernel32.BeginUpdateResourceA(_In_ LPCTSTR pFileName,_In_ BOOL bDeleteExistingResources)
BOOL None wtsapi32.WTSShutdownSystem(_In_ HANDLE hServer,_In_ DWORD ShutdownFlag)
JET_ERR JET_API None.JetRollback(__in JET_SESID sesid,__in JET_GRBIT grbit)
uint32 None cimwin32.GetAvailableVirtualSize([out] uint64 AvailableVirtualSize)
HRESULT None None.OpenViewChapter(HCHAPTER hSource None,HCHAPTER *phViewChapter None)
HRESULT WINAPI dwmapi.DwmSetWindowAttribute(HWND hwnd None,DWORD dwAttribute None,_In_ LPCVOID pvAttribute,DWORD cbAttribute None)
BOOL None None.TreeView_SetInsertMark(HWND hwndTV None,HTREEITEM htiInsert None,BOOL fAfter None)
BOOL WINAPI kernel32.InitializeCriticalSectionEx(_Out_ LPCRITICAL_SECTION lpCriticalSection,_In_ DWORD dwSpinCount,_In_ DWORD Flags)
HRESULT None None.load(VARIANT xmlSource None,VARIANT_BOOL *isSuccessful None)
LONG WINAPI tapi32.lineCompleteCall(HCALL hCall None,LPDWORD lpdwCompletionID None,DWORD dwCompletionMode None,DWORD dwMessageID None)
HRESULT None None.GetCategory([out None None,retval] LPWSTR *category)
NTSTATUS None None.SpGetCredentials(_In_ LSA_SEC_HANDLE CredentialHandle,_Out_ PSecBuffer Credentials)
HRESULT None ndfapi.NdfCreateWinSockIncident(SOCKET sock None,_In_opt_ LPCWSTR host,USHORT port None,_In_opt_ LPCWSTR appID,_In_opt_ SID *userId,_Out_ NDFHANDLE *handle)
HRESULT None shell32.SHLoadOLE(_In_ LPARAM lParam)
LPCWSTR WINAPI user32.MB_GetString(UINT wBtn None)
HRESULT None srmsvc.get_ActionType([out] FsrmActionType *actionType)
HRESULT None windowscodecs.IWICBitmapFrameEncode_GetMetadataQueryWriter_Proxy(_In_ IWICBitmapFrameEncode *THIS_PTR,_Out_ IWICMetadataQueryWriter **ppIMetadataQueryWriter)
DWORD None None.WriteBlobToFile(HBLOB hBlob None,const char* pFileName)
NTSTATUS None None.WdfMemoryCreate(_In_opt_ PWDF_OBJECT_ATTRIBUTES Attributes,_In_ POOL_TYPE PoolType,_In_opt_ ULONG PoolTag,_In_ size_t BufferSize,_Out_ WDFMEMORY *Memory,_Out_opt_ PVOID *Buffer)
HRESULT None srmsvc.get_LastReportPathWithoutExtension([out] BSTR *pPath)
HRESULT None None.GetStoryFragmentsResource([out None None,retval] IXpsOMStoryFragmentsResource **storyFragmentsResource)
DWORD None None.GetPrinterDataEx(_In_ HANDLE hPrinter,_In_ LPCTSTR pKeyName,_In_ LPCTSTR pValueName,_Out_ LPDWORD pType,_Out_ LPBYTE pData,_In_ DWORD nSize,_Out_ LPDWORD pcbNeeded)
DWORD None None.GetPrinterDataExW(_In_ HANDLE hPrinter,_In_ LPCTSTR pKeyName,_In_ LPCTSTR pValueName,_Out_ LPDWORD pType,_Out_ LPBYTE pData,_In_ DWORD nSize,_Out_ LPDWORD pcbNeeded)
DWORD None None.GetPrinterDataExA(_In_ HANDLE hPrinter,_In_ LPCTSTR pKeyName,_In_ LPCTSTR pValueName,_Out_ LPDWORD pType,_Out_ LPBYTE pData,_In_ DWORD nSize,_Out_ LPDWORD pcbNeeded)
HRESULT None msdrm.DRMVerify(_In_ PWSTR wszData,_Inout_ UINT *pcStrLenAttestedData,_Out_ PWSTR wszAttestedData,_Out_ DRMATTESTTYPE *peType,_Inout_ UINT *pcPrincipalChain,_Out_ PWSTR wszPrincipalChain,_Inout_ UINT *pcManifestChain,_Out_ PWSTR wszManifestChain)
BOOL None gdi32.PlayMetaFile(_In_ HDC hdc,_In_ HMETAFILE hmf)
HRESULT None shlwapi.AssocGetPerceivedType(_In_ PCWSTR pszExt,_Out_ PERCEIVED *ptype,_Out_ PERCEIVEDFLAG *pflag,_Out_opt_ PWSTR *ppszType)
HRESULT None cscsvc.GetItemType([out] OFFLINEFILES_ITEM_TYPE *pItemType)
HRESULT None msdrm.DRMLoadLibrary(_In_ DRMENVHANDLE hEnv,_In_ DRMSPECTYPE eSpecification,_In_ PWSTR wszLibraryProvider,_In_ PWSTR wszCredentials,_Out_ DRMHANDLE *phLibrary)
BOOL WINAPI avrt.AvRtDeleteThreadOrderingGroup(_In_ HANDLE Context)
HRESULT None mf.MFCreateASFIndexer(IMFASFIndexer **ppIIndexer None)
HRESULT None None.GetManageModule([out] ICertManageModule **ppManageModule)
public PackageRelationship None.GetRelationship(String id None)
public void None.Uninstall(IDictionary savedState None)
DWORD WINAPI clusapi.RestartClusterResource(_In_ HRESOURCE hResource,_In_ DWORD dwFlags)
WINOLEAPI None ole32.ReadClassStg(_In_ IStorage *pStg,_Out_ CLSID *pclsid)
HRESULT None None.get_CurDC([out] HDC *phDC)
public boolean None.ShouldSerializeInlines(XamlDesignerSerializationManager manager None)
HRESULT None ole32.RevokeDragDrop(_In_ HWND hwnd)
UINT None msi.MsiProcessAdvertiseScript(_In_ LPCTSTR szScriptFile,_In_ LPCTSTR szIconFolder,_In_ HKEY hRegData,_In_ BOOL fShortcuts,_In_ BOOL fRemoveItems)
UINT None msi.MsiProcessAdvertiseScriptW(_In_ LPCTSTR szScriptFile,_In_ LPCTSTR szIconFolder,_In_ HKEY hRegData,_In_ BOOL fShortcuts,_In_ BOOL fRemoveItems)
UINT None msi.MsiProcessAdvertiseScriptA(_In_ LPCTSTR szScriptFile,_In_ LPCTSTR szIconFolder,_In_ HKEY hRegData,_In_ BOOL fShortcuts,_In_ BOOL fRemoveItems)
HRESULT None mfplat.MFCreateMFByteStreamWrapper(_In_ IMFByteStream *pStream,_In_ IMFByteStream **ppStreamWrapper)
UINT None msi.MsiPreviewBillboard(_In_ MSIHANDLE hPreview,_In_ LPCTSTR szControlName,_In_ LPCTSTR szBillboard)
UINT None msi.MsiPreviewBillboardW(_In_ MSIHANDLE hPreview,_In_ LPCTSTR szControlName,_In_ LPCTSTR szBillboard)
UINT None msi.MsiPreviewBillboardA(_In_ MSIHANDLE hPreview,_In_ LPCTSTR szControlName,_In_ LPCTSTR szBillboard)
int None None._strnicoll(const char *string1,const char *string2,size_t count None)
HRESULT None shell32.SetHotkey(WORD wHotkey None)
INT None None.MonthCal_GetMonthRange(HWND hwndMC None,DWORD dwFlag None,LPSYSTEMTIME lprgSysTimeArray None)
NTSTATUS WINAPI netapi32.NetQueryServiceAccount(_In_opt_ LPWSTR ServerName,_In_ LPWSTR AccountName,_In_ DWORD InfoLevel,_Out_ PBYTE *Buffer)
PDWORD WINAPI advapi32.GetSidSubAuthority(_In_ PSID pSid,_In_ DWORD nSubAuthority)
DWORD None None.MonthCal_GetRange(HWND hwndMC None,LPSYSTEMTIME lprgSysTimeArray None)
BOOL None None.SupportsDigestAlgorithm(__in LPCWSTR digestMethodToCheck)
SCESTATUS WINAPI None.SceSvcAttachmentConfig(_In_ PSCESVC_CALLBACK_INFO pSceCbInfo)
BOOL WINAPI kernel32.WritePrivateProfileStruct(_In_ LPCTSTR lpszSection,_In_ LPCTSTR lpszKey,_In_ LPVOID lpStruct,_In_ UINT uSizeStruct,_In_ LPCTSTR szFile)
BOOL WINAPI kernel32.WritePrivateProfileStructW(_In_ LPCTSTR lpszSection,_In_ LPCTSTR lpszKey,_In_ LPVOID lpStruct,_In_ UINT uSizeStruct,_In_ LPCTSTR szFile)
BOOL WINAPI kernel32.WritePrivateProfileStructA(_In_ LPCTSTR lpszSection,_In_ LPCTSTR lpszKey,_In_ LPVOID lpStruct,_In_ UINT uSizeStruct,_In_ LPCTSTR szFile)
HRESULT None oleaut32.SafeArraySetIID(_In_ SAFEARRAY *psa,_In_ REFGUID guid)
HRESULT None wsdapi.IsMessageSignatureTrusted([out] BOOL *pbSignatureTrusted)
HRESULT None windowscodecs.CreateBitmapClipper([out] IWICBitmapClipper **ppIBitmapClipper)
BOOL WINAPI user32.LockSetForegroundWindow(_In_ UINT uLockCode)
HRESULT STDAPI cldapi.CfOpenFileWithOplock(_In_ LPCWSTR FilePath,_In_ CF_OPEN_FILE_FLAGS Flags,_Out_ PHANDLE ProtectedHandle)
NTSTATUS WINAPI ncrypt.NCryptCreateProtectionDescriptor(_In_ LPCWSTR pwszDescriptorString,_In_ DWORD dwFlags,_Out_ NCRYPT_DESCRIPTOR_HANDLE *phDescriptor)
DWORD None iphlpapi.DeleteIPAddress(_In_ ULONG NTEContext)
DWORD WINAPI user32.OemKeyScan(_In_ WORD wOemChar)
HRESULT None dcomp.CreateEffectGroup([out] IDCompositionEffectGroup **effectGroup)
BOOL WINAPI None.WIMGetImageInformation(HANDLE hImage None,PVOID *ppvImageInfo None,PDWORD pcbImageInfo None)
BOOL None comctl32.ShowHideMenuCtl(HWND hWnd None,UINT_PTR uFlags None,LPINT lpInfo None)
HRESULT None None.SetIndex(DBID *pIndexID None)
BOOL WINAPI None.WIMMountImageHandle(HANDLE hImage None,PCWSTR pszMountPath None,DWORD dwMountFlags None)
public DependentTransaction None.DependentClone(DependentCloneOption cloneOption None)
HRESULT WINAPI prntvpt.PTGetPrintDeviceResources(_In_ HPTPROVIDER hProvider,_In_ LPCWSTR pzLocaleName,_In_ IStream *pPrintTicket,IStream *pDeviceResources None,_Out_opt_ BSTR *pbstrErrorMessage)
LSTATUS None shlwapi.SHSetValue(_In_ HKEY hkey,_In_opt_ LPCTSTR pszSubKey,_In_opt_ LPCTSTR pszValue,_In_ DWORD dwType,_In_opt_ LPCVOID pvData,_In_ DWORD cbData)
LSTATUS None shlwapi.SHSetValueW(_In_ HKEY hkey,_In_opt_ LPCTSTR pszSubKey,_In_opt_ LPCTSTR pszValue,_In_ DWORD dwType,_In_opt_ LPCVOID pvData,_In_ DWORD cbData)
LSTATUS None shlwapi.SHSetValueA(_In_ HKEY hkey,_In_opt_ LPCTSTR pszSubKey,_In_opt_ LPCTSTR pszValue,_In_ DWORD dwType,_In_opt_ LPCVOID pvData,_In_ DWORD cbData)
HRESULT None ole32.OleCreate(_In_ REFCLSID rclsid,_In_ REFIID riid,_In_ DWORD renderopt,_In_ LPFORMATETC pFormatEtc,_In_ LPOLECLIENTSITE pClientSite,_In_ LPSTORAGE pStg,_Out_ LPVOID *ppvObj)
BOOL None None.SetPort(_In_ LPTSTR pName,_In_ LPTSTR pPortName,_In_ DWORD dwLevel,_In_ LPBYTE pPortInfo)
BOOL None None.SetPortW(_In_ LPTSTR pName,_In_ LPTSTR pPortName,_In_ DWORD dwLevel,_In_ LPBYTE pPortInfo)
BOOL None None.SetPortA(_In_ LPTSTR pName,_In_ LPTSTR pPortName,_In_ DWORD dwLevel,_In_ LPBYTE pPortInfo)
HRESULT None msdrm.DRMGetMetaData(_In_ DRMPUBHANDLE hIssuanceLicense,_Inout_ UINT *puContentIdLength,_Out_opt_ PWSTR wszContentId,_Inout_ UINT *puContentIdTypeLength,_Out_opt_ PWSTR wszContentIdType,_Inout_opt_ UINT *puSKUIdLength,_Out_opt_ PWSTR wszSKUId,_Inout_opt_ UINT *puSKUIdTypeLength,_Out_opt_ PWSTR wszSKUIdType,_Inout_opt_ UINT *puContentTypeLength,_Out_opt_ PWSTR wszContentType,_Inout_opt_ UINT *puContentNameLength,_Out_opt_ PWSTR wszContentName)
HRESULT None windowscodecs.WICCreateImagingFactory_Proxy(_In_ UINT SDKVersion,_Out_ IWICImagingFactory **ppIImagingFactory)
HDSA None comctl32.DSA_Clone(_In_ HDSA hdsa)
LPVOID WINAPI kernel32.HeapReAlloc(_In_ HANDLE hHeap,_In_ DWORD dwFlags,_In_ LPVOID lpMem,_In_ SIZE_T dwBytes)
HRESULT None prntvpt.PTReleaseMemory(_In_ PVOID pBuffer)
BOOL WINAPI vertdll.LoadEnclaveImage(_In_ LPVOID lpEnclaveAddress,_In_ LPCSTR lpImageName)
BOOL WINAPI vertdll.LoadEnclaveImageW(_In_ LPVOID lpEnclaveAddress,_In_ LPCSTR lpImageName)
BOOL WINAPI vertdll.LoadEnclaveIUmageA(_In_ LPVOID lpEnclaveAddress,_In_ LPCSTR lpImageName)
HRESULT None None.GetSigningTime([out None None,retval] LPCWSTR *signingTime)
HRESULT None ole32.OleQueryCreateFromData(_In_ LPDATAOBJECT pSrcDataObject)
HRESULT None d2d1.CreateCommandList([out] ID2D1CommandList **commandList)
DWORD PXEAPI wdspxe.PxeDhcpv6GetOptionValue(_In_ PVOID pPacket,_In_ ULONG uPacketLen,_In_ ULONG uInstance,_In_ WORD wOption,_Out_opt_ PWORD pwOptionLen,_Out_opt_ PVOID *ppOptionValue)
HRESULT None mfplat.MFAllocateWorkQueue(_Out_ DWORD *pdwWorkQueue)
BOOL None None.GetJob(_In_ HANDLE hPrinter,_In_ DWORD JobId,_In_ DWORD Level,_Out_ LPBYTE pJob,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded)
BOOL None None.GetJobW(_In_ HANDLE hPrinter,_In_ DWORD JobId,_In_ DWORD Level,_Out_ LPBYTE pJob,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded)
BOOL None None.GetJobA(_In_ HANDLE hPrinter,_In_ DWORD JobId,_In_ DWORD Level,_Out_ LPBYTE pJob,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded)
HRESULT None None.UpdateDRM(DWORD status None)
HRESULT None None.GetTransactionId([out] GUID *pGuid)
HRESULT None ole32.CreateObjrefMoniker(_In_opt_ LPUNKNOWN punk,_Out_ LPMONIKER *ppmk)
ULONG WINAPI iphlpapi.LookupPersistentUdpPortReservation(_In_ USHORT StartPort,_In_ USHORT NumberOfPorts,_Out_ PULONG64 Token)
PSSTDAPI None propsys.PSGetPropertyFromPropertyStorage(_In_ PCUSERIALIZEDPROPSTORAGE psps,_In_ DWORD cb,_In_ REFPROPERTYKEY rpkey,_Out_ PROPVARIANT **ppropvar)
DWORD WINAPI None.SetResourceStatus(_In_ RESOURCE_HANDLE ResourceHandle,_In_ PRESOURCE_STATUS ResourceStatus)
BOOL WINAPI dbghelp.SymSrvGetFileIndexString(_In_ HANDLE hProcess,_In_opt_ PCTSTR SrvPath,_In_ PCTSTR File,_Out_ PTSTR Index,_In_ size_t Size,_In_ DWORD Flags)
BOOL WINAPI dbghelp.SymSrvGetFileIndexStringW(_In_ HANDLE hProcess,_In_opt_ PCTSTR SrvPath,_In_ PCTSTR File,_Out_ PTSTR Index,_In_ size_t Size,_In_ DWORD Flags)
BOOL WINAPI dbghelp.SymSrvGetFileIndexString(_In_ HANDLE hProcess,_In_opt_ PCTSTR SrvPath,_In_ PCTSTR File,_Out_ PTSTR Index,_In_ size_t Size,_In_ DWORD Flags)
PTSTR None shlwapi.StrCat(_Inout_ PTSTR psz1,_In_ PCTSTR psz2)
PTSTR None shlwapi.StrCatW(_Inout_ PTSTR psz1,_In_ PCTSTR psz2)
LRESULT None None.WndProc(HWND hwnd None,UINT message None,WPARAM wParam None,LPARAM lParam None)
BOOL CALLBACK None.EnumLanguageGroupLocalesProc(_In_ LGRPID LanguageGroup,_In_ LCID Locale,_In_ LPTSTR lpLocaleString,_In_ LONG_PTR lParam)
HRESULT None oleaut32.VarUI8FromI8(_In_ LONG64 ui64In,_Out_ ULONG64 *pi64Out)
HRESULT None None.AddSignatureRequestToDocument(__in IXpsSignatureManager *signatureManager,__in LPCWSTR reasonForSignatureRequest,__in LPCWSTR nameOfRequestedSigner,__in LPCWSTR requestSignByDate)
int None None.ToInt32(IFormatProvider provider None)
HRESULT None srmsvc.get_CreationTime([out] VARIANT *creationTime)
BOOL None None.EnumJobs(_In_ HANDLE hPrinter,_In_ DWORD FirstJob,_In_ DWORD NoJobs,_In_ DWORD Level,_Out_ LPBYTE pJob,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded,_Out_ LPDWORD pcReturned)
BOOL None None.EnumJobsW(_In_ HANDLE hPrinter,_In_ DWORD FirstJob,_In_ DWORD NoJobs,_In_ DWORD Level,_Out_ LPBYTE pJob,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded,_Out_ LPDWORD pcReturned)
BOOL None None.EnumJobsA(_In_ HANDLE hPrinter,_In_ DWORD FirstJob,_In_ DWORD NoJobs,_In_ DWORD Level,_Out_ LPBYTE pJob,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded,_Out_ LPDWORD pcReturned)
NET_API_STATUS None netapi32.NetMessageNameGetInfo(_In_ LPCWSTR servername,_In_ LPCWSTR msgname,_In_ DWORD level,_Out_ LPBYTE *bufptr)
HRESULT APIENTRY None.MQPathNameToFormatName(LPCWSTR lpwcsPathName None,LPWSTR lpwcsFormatName None,LPDWORD lpdwCount None)
RPC_STATUS None rpcrt4.RpcBindingCreate(_In_ RPC_BINDING_HANDLE_TEMPLATE *Template,_In_opt_ RPC_BINDING_HANDLE_SECURITY *Security,_In_opt_ RPC_BINDING_HANDLE_OPTIONS *Options,_Out_ RPC_BINDING_HANDLE *Binding)
RPC_STATUS None rpcrt4.RpcBindingCreateW(_In_ RPC_BINDING_HANDLE_TEMPLATE *Template,_In_opt_ RPC_BINDING_HANDLE_SECURITY *Security,_In_opt_ RPC_BINDING_HANDLE_OPTIONS *Options,_Out_ RPC_BINDING_HANDLE *Binding)
RPC_STATUS None rpcrt4.RpcBindingCreateA(_In_ RPC_BINDING_HANDLE_TEMPLATE *Template,_In_opt_ RPC_BINDING_HANDLE_SECURITY *Security,_In_opt_ RPC_BINDING_HANDLE_OPTIONS *Options,_Out_ RPC_BINDING_HANDLE *Binding)
VOID None None.WdfRegistryClose(_In_ WDFKEY Key)
HRESULT None None.GetId([out None None,retval] LPCWSTR *relationshipIdentifier)
HRESULT WINAPI iscsidsc.RemoveIscsiStaticTarget(_In_ PTCHAR TargetName)
HRESULT WINAPI iscsidsc.RemoveIscsiStaticTargetW(_In_ PTCHAR TargetName)
HRESULT WINAPI iscsidsc.RemoveIscsiStaticTargetA(_In_ PTCHAR TargetName)
HRESULT None shell32.SHGetStockIconInfo(SHSTOCKICONID siid None,UINT uFlags None,_Inout_ SHSTOCKICONINFO *psii)
boolean None None.SetDocumentationFile(String documentationFile None)
public boolean None.ShouldSerializeBlocks(XamlDesignerSerializationManager manager None)
HIMAGELIST None None.Header_GetImageList(HWND hwndHD None)
HRESULT None None.parsed(VARIANT_BOOL *isParsed None)
NTSTATUS None advapi32.LsaEnumerateTrustedDomainsEx(_In_ LSA_HANDLE PolicyHandle,_In_ PLSA_ENUMERATION_HANDLE EnumerationContext,_Out_ PVOID *Buffer,_In_ ULONG PreferredMaximumLength,_Out_ PULONG CountReturned)
BOOL WINAPI kernel32.GetProcessDEPPolicy(_In_ HANDLE hProcess,_Out_ LPDWORD lpFlags,_Out_ PBOOL lpPermanent)
BOOL WINAPI kernel32.HeapValidate(_In_ HANDLE hHeap,_In_ DWORD dwFlags,_In_opt_ LPCVOID lpMem)
LPVOID WINAPI kernel32.MapViewOfFileEx(_In_ HANDLE hFileMappingObject,_In_ DWORD dwDesiredAccess,_In_ DWORD dwFileOffsetHigh,_In_ DWORD dwFileOffsetLow,_In_ SIZE_T dwNumberOfBytesToMap,_In_opt_ LPVOID lpBaseAddress)
uint32 None wvrcimprov.WvrClearOrphanedLogs([in] string ReplicationGroupName)
HRESULT None None.GetOpacity([out None None,retval] FLOAT *opacity)
LONG WINAPI tapi32.lineGetLineDevStatus(HLINE hLine None,LPLINEDEVSTATUS lpLineDevStatus None)
LONG WINAPI tapi32.lineGetLineDevStatusW(HLINE hLine None,LPLINEDEVSTATUS lpLineDevStatus None)
LONG WINAPI tapi32.lineGetLineDevStatusA(HLINE hLine None,LPLINEDEVSTATUS lpLineDevStatus None)
PDH_STATUS None pdh.PdhCalculateCounterFromRawValue(_In_ PDH_HCOUNTER hCounter,_In_ DWORD dwFormat,_In_ PPDH_RAW_COUNTER rawValue1,_In_ PPDH_RAW_COUNTER rawValue2,_Out_ PPDH_FMT_COUNTERVALUE fmtValue)
BOOL WINAPI kernel32.MapUserPhysicalPages(_In_ PVOID lpAddress,_In_ ULONG_PTR NumberOfPages,_In_ PULONG_PTR UserPfnArray)
HRESULT None windowscodecs.IWICBitmapDecoder_GetColorContexts_Proxy(_In_ IWICBitmapDecoder *THIS_PTR,_In_ UINT cCount,_Inout_ IWICColorContext **ppIColorContexts,_Out_ UINT *pcActualCount)
HRESULT None None.GetTimeFormat([out None None,retval] OPC_SIGNATURE_TIME_FORMAT *timeFormat)
HRESULT None windowscodecs.GetColorCount([out] UINT *pcCount)
HRESULT None None.get_HasSSE([out] VARIANT_BOOL *sseEnabled)
LONG TSPIAPI None.TSPI_providerInstall(HWND hwndOwner None,DWORD dwPermanentProviderID None)
void None None.InterlockedAdd(in UINT dest,in UINT value,out UINT original_value)
ULONG __stdcall tdh.TdhGetProperty(_In_ PEVENT_RECORD pEvent,_In_ ULONG TdhContextCount,_In_ PTDH_CONTEXT pTdhContext,_In_ ULONG PropertyDataCount,_In_ PPROPERTY_DATA_DESCRIPTOR pPropertyData,_In_ ULONG BufferSize,_Out_ PBYTE pBuffer)
STDAPI None avifil32.AVIStreamInfo(PAVISTREAM pavi None,AVISTREAMINFO *psi None,LONG lSize None)
STDAPI None avifil32.AVIStreamInfoW(PAVISTREAM pavi None,AVISTREAMINFO *psi None,LONG lSize None)
STDAPI None avifil32.AVIStreamInfoA(PAVISTREAM pavi None,AVISTREAMINFO *psi None,LONG lSize None)
HRESULT None oleaut32.OleLoadPictureEx(_In_ LPSTREAM lpstream,_In_ LONG lSize,_In_ BOOL fRunmode,_In_ REFIID riid,_In_ DWORD xSizeDesired,_In_ DWORD ySizeDesired,_In_ DWORD dwFlags,_Out_ LPVOID *lplpvObj)
HRESULT WDSCLIAPI wdsclientapi.WdsCliCancelTransfer(_In_ HANDLE hTransfer)
NTSTATUS None None.ZwCreateTransactionManager(_Out_ PHANDLE TmHandle,_In_ ACCESS_MASK DesiredAccess,_In_opt_ POBJECT_ATTRIBUTES ObjectAttributes,_In_opt_ PUNICODE_STRING LogFileName,_In_opt_ ULONG CreateOptions,_In_opt_ ULONG CommitStrength)
HRESULT None None.get_Key([out None None,retval] VARIANT *pvarRetVal)
VOID None None.XMVectorGetIntXPtr([out] uint32_t *x,XMVECTOR V None)
LONG TSPIAPI None.TSPI_phoneSelectExtVersion(HDRVPHONE hdPhone None,DWORD dwExtVersion None)
BOOL None spoolss.ScheduleJob(_In_ HANDLE hPrinter,_In_ DWORD dwJobID)
HRESULT None mfplat.MFPutWorkItem2(_In_ DWORD dwQueue,_In_ LONG Priority,_In_ IMFAsyncCallback *pCallback,_In_ IUnknown *pState)
HRESULT None cscsvc.GetRemoteInfo([out] IOfflineFilesSyncErrorItemInfo **ppInfo)
LPTSTR WINAPI user32.CharUpper(_Inout_ LPTSTR lpsz)
LPTSTR WINAPI user32.CharUpperW(_Inout_ LPTSTR lpsz)
LPTSTR WINAPI user32.CharUpperA(_Inout_ LPTSTR lpsz)
HRESULT None ole32.CoGetMarshalSizeMax(_Out_ ULONG *pulSize,_In_ REFIID riid,_In_ LPUNKNOWN pUnk,_In_ DWORD dwDestContext,_In_opt_ LPVOID pvDestContext,_In_ DWORD mshlflags)
UINT None msi.MsiGetFeatureUsage(_In_ LPCTSTR szProduct,_In_ LPCTSTR szFeature,_Out_ DWORD *pdwUseCount,_Out_ WORD *pwDateUsed)
UINT None msi.MsiGetFeatureUsageW(_In_ LPCTSTR szProduct,_In_ LPCTSTR szFeature,_Out_ DWORD *pdwUseCount,_Out_ WORD *pwDateUsed)
UINT None msi.MsiGetFeatureUsageA(_In_ LPCTSTR szProduct,_In_ LPCTSTR szFeature,_Out_ DWORD *pdwUseCount,_Out_ WORD *pwDateUsed)
DWORD WINAPI wlanapi.WlanHostedNetworkSetSecondaryKey(_In_ HANDLE hClientHandle,_In_ DWORD dwKeyLength,_In_ PUCHAR pucKeyData,_In_ BOOL bIsPassPhrase,_In_ BOOL bPersistent,_Out_opt_ PWLAN_HOSTED_NETWORK_REASON pFailReason,_Reserved_ PVOID pvReserved)
HRESULT None None.GetExtendedAttribute(DWORD dwValueName None,VARIANT* pVariantValue None)
BOOL WINAPI dbghelp.SymGetSourceFileChecksum(_In_ HANDLE hProcess,_In_ ULONG64 Base,_In_ PCTSTR FileSpec,_Out_ DWORD *pCheckSumType,_Out_ BYTE *pChecksum,_In_ DWORD checksumSize,_Out_ DWORD *pActualBytesWritten)
BOOL WINAPI dbghelp.SymGetSourceFileChecksumW(_In_ HANDLE hProcess,_In_ ULONG64 Base,_In_ PCTSTR FileSpec,_Out_ DWORD *pCheckSumType,_Out_ BYTE *pChecksum,_In_ DWORD checksumSize,_Out_ DWORD *pActualBytesWritten)
BOOL WINAPI dbghelp.SymGetSourceFileChecksum(_In_ HANDLE hProcess,_In_ ULONG64 Base,_In_ PCTSTR FileSpec,_Out_ DWORD *pCheckSumType,_Out_ BYTE *pChecksum,_In_ DWORD checksumSize,_Out_ DWORD *pActualBytesWritten)
DNS_STATUS WINAPI dnsapi.DnsAcquireContextHandle(_In_ DWORD CredentialFlags,_In_opt_ PVOID Credentials,_Out_ PHANDLE pContext)
DNS_STATUS WINAPI dnsapi.DnsAcquireContextHandle_W(_In_ DWORD CredentialFlags,_In_opt_ PVOID Credentials,_Out_ PHANDLE pContext)
DNS_STATUS WINAPI dnsapi.DnsAcquireContextHandle_A(_In_ DWORD CredentialFlags,_In_opt_ PVOID Credentials,_Out_ PHANDLE pContext)
DWORD WINAPI None.WorkerStartRoutine(_In_ PCLUS_WORKER pWorker,_In_ LPVOID lpThreadParameter)
HRESULT None None.get_UpTime(long* pVal None)
UINT None imm32.ImmGetDescription(_In_ HKL hKL,_Out_opt_ LPTSTR lpszDescription,_In_ UINT uBufLen)
UINT None imm32.ImmGetDescriptionW(_In_ HKL hKL,_Out_opt_ LPTSTR lpszDescription,_In_ UINT uBufLen)
UINT None imm32.ImmGetDescriptionA(_In_ HKL hKL,_Out_opt_ LPTSTR lpszDescription,_In_ UINT uBufLen)
BOOL WINAPI clfsw32.RemoveLogContainer(_In_ HANDLE hLog,_In_ LPWSTR pwszContainerPath,_In_ BOOL fForce,_Inout_opt_ LPVOID pReserved)
public Rect None.TransformBounds(Rect rect None)
BOOL WINAPI kernel32.IsBadWritePtr(_In_ LPVOID lp,_In_ UINT_PTR ucb)
HRESULT None None.StringCbCopyEx(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCbCopyExW(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCbCopyExA(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags)
BOOL WINAPI clfsw32.WriteLogRestartArea(_Inout_ PVOID pvMarshal,_In_ PVOID pvRestartBuffer,_In_ ULONG cbRestartBuffer,_In_opt_ PCLFS_LSN plsnBase,_In_ ULONG fFlags,_Out_opt_ PULONG pcbWritten,_Out_opt_ PCLFS_LSN plsnNext,_Inout_opt_ LPOVERLAPPED pOverlapped)
HRESULT None propsys.PSPropertyBag_ReadType(_In_ IPropertyBag *propBag,_In_ LPCWSTR propName,_Out_ VARIANT *var,_Out_ VARTYPE *type)
int None None._strnicmp(const char *string1,const char *string2,size_t count None)
HRESULT None None.get_value(VARIANT *attributeValue None)
BOOL None cabinet.QueryCompressorInformation(_In_ COMPRESSOR_HANDLE CompressorHandle,_In_ COMPRESS_INFORMATION_CLASS CompressInformationClass,_Out_ PVOID CompressInformation,_In_ SIZE_T CompressInformationSize)
HRESULT APIENTRY None.MQBeginTransaction(ITransaction ** ppTransaction)
HRESULT None None.get_nodeTypeString(BSTR *nodeType None)
uint32 None dnsserverpsprovider.ClearByZoneStatistics([in] boolean Force,[in] string ZoneName[],[in] string ComputerName)
HRESULT STDAPI cldapi.CfGetPlatformInfo(_Out_ CF_PLATFORM_INFO *PlatformVersion)
Function None None.CountFeeds(f None None)
BOOL WINAPI dbghelp.SearchTreeForFile(_In_ PCTSTR RootPath,_In_ PCTSTR InputPathName,_Out_ PTSTR OutputPathBuffer)
BOOL WINAPI dbghelp.SearchTreeForFileW(_In_ PCTSTR RootPath,_In_ PCTSTR InputPathName,_Out_ PTSTR OutputPathBuffer)
BOOL WINAPI dbghelp.SearchTreeForFile(_In_ PCTSTR RootPath,_In_ PCTSTR InputPathName,_Out_ PTSTR OutputPathBuffer)
uint32 None wvrcimprov.WvrResumeReplicationGroup([in] string ReplicationGroupName)
uint32 None wvrcimprov.SmapiQueryPartnerGroupStatus([in] string ReplicationGroupName,[out] uint16 PercentSynced,[out] datetime LastSyncTime,[out] uint32 ReplicationStatus)
BOOL WINAPI dbghelp.SymEnumSourceLines(_In_ HANDLE hProcess,_In_ ULONG64 Base,_In_opt_ PCTSTR Obj,_In_opt_ PCTSTR File,_In_opt_ DWORD Line,_In_ DWORD Flags,_In_ PSYM_ENUMLINES_CALLBACK EnumLinesCallback,_In_opt_ PVOID UserContext)
BOOL WINAPI dbghelp.SymEnumSourceLinesW(_In_ HANDLE hProcess,_In_ ULONG64 Base,_In_opt_ PCTSTR Obj,_In_opt_ PCTSTR File,_In_opt_ DWORD Line,_In_ DWORD Flags,_In_ PSYM_ENUMLINES_CALLBACK EnumLinesCallback,_In_opt_ PVOID UserContext)
BOOL WINAPI dbghelp.SymEnumSourceLines(_In_ HANDLE hProcess,_In_ ULONG64 Base,_In_opt_ PCTSTR Obj,_In_opt_ PCTSTR File,_In_opt_ DWORD Line,_In_ DWORD Flags,_In_ PSYM_ENUMLINES_CALLBACK EnumLinesCallback,_In_opt_ PVOID UserContext)
BOOL None shell32.PathIsSlow(_In_ LPCTSTR pszFile,DWORD dwFileAttr None)
BOOL None shell32.PathIsSlowW(_In_ LPCTSTR pszFile,DWORD dwFileAttr None)
BOOL None shell32.PathIsSlowA(_In_ LPCTSTR pszFile,DWORD dwFileAttr None)
LONG WINAPI tapi32.linePickup(HLINE hLine None,DWORD dwAddressID None,LPHCALL lphCall None,LPCSTR lpszDestAddress None,LPCSTR lpszGroupID None)
LONG WINAPI tapi32.linePickupW(HLINE hLine None,DWORD dwAddressID None,LPHCALL lphCall None,LPCSTR lpszDestAddress None,LPCSTR lpszGroupID None)
LONG WINAPI tapi32.linePickupA(HLINE hLine None,DWORD dwAddressID None,LPHCALL lphCall None,LPCSTR lpszDestAddress None,LPCSTR lpszGroupID None)
HRESULT None windowscodecs.HasAlpha([out] BOOL *pfHasAlpha)
BOOL None spoolss.FreePrinterNotifyInfo(_In_ PPRINTER_NOTIFY_INFO pPrinterNotifyInfo)
HRESULT None None.HasRestrictedFonts([out None None,retval] BOOL *restrictedFonts)
uint32 None nettcpip.RequestStateChange([in] uint16 RequestedState,[out] CIM_ConcreteJob Job,[in] datetime TimeoutPeriod)
HRESULT None windowscodecs.IWICMetadataBlockReader_GetReaderByIndex_Proxy(_In_ IWICMetadataBlockReader *THIS_PTR,_In_ UINT nIndex,_Out_ IWICMetadataReader **ppIMetadataReader)
HRESULT None None.DetectSubregions(IN IStream *pImageStream,IN IWiaItem2 *pWiaItem2)
public void None.BeginInvokeShutdown(DispatcherPriority priority None)
HRESULT None None.item(long index None,ISchemaItem** item None)
LSTATUS None shlwapi.SHSetValue(_In_ HKEY hkey,_In_opt_ LPCTSTR pszSubKey,_In_opt_ LPCTSTR pszValue,_In_ DWORD dwType,_In_opt_ LPCVOID pvData,_In_ DWORD cbData)
LSTATUS None shlwapi.SHSetValueW(_In_ HKEY hkey,_In_opt_ LPCTSTR pszSubKey,_In_opt_ LPCTSTR pszValue,_In_ DWORD dwType,_In_opt_ LPCVOID pvData,_In_ DWORD cbData)
LSTATUS None shlwapi.SHSetValueA(_In_ HKEY hkey,_In_opt_ LPCTSTR pszSubKey,_In_opt_ LPCTSTR pszValue,_In_ DWORD dwType,_In_opt_ LPCVOID pvData,_In_ DWORD cbData)
HRESULT None None.GetCurFile([out] LPOLESTR *ppszFileName)
BOOL WINAPI kernel32.ReadFile(_In_ HANDLE hFile,_Out_ LPVOID lpBuffer,_In_ DWORD nNumberOfBytesToRead,_Out_opt_ LPDWORD lpNumberOfBytesRead,_Inout_opt_ LPOVERLAPPED lpOverlapped)
CLUSTER_RESOURCE_STATE WINAPI clusapi.GetClusterResourceState(_In_ HRESOURCE hResource,_Out_opt_ LPWSTR lpszNodeName,_Inout_opt_ LPDWORD lpcchNodeName,_Out_opt_ LPWSTR lpszGroupName,_Inout_opt_ LPDWORD lpcchGroupName)
BOOL None shell32.SHValidateUNC(_In_opt_ HWND hwndOwner,_Inout_ PWSTR pszFile,UINT fConnect None)
private void None.listDragTarget_DragDrop(Object sender None,System.Windows.Forms.DragEventArgs e None)
HRESULT None actxprxy.QueryMediaInfo([out] byte *pbsessions,[out] byte *pblasttrack,[out] ULONG *ulstartaddress,[out] ULONG *ulnextwritable,[out] ULONG *ulfreeblocks)
public void None.WriteXml(XmlWriter writer None)
public boolean None.ShouldSerializeInlines(XamlDesignerSerializationManager manager None)
HGLOBAL None ole32.OleGetIconOfFile(_In_ LPOLESTR lpszPath,_In_ BOOL fUseFileAsLabel)
INSTALLUILEVEL None msi.MsiSetInternalUI(_In_ INSTALLUILEVEL dwUILevel,_Inout_ HWND *phWnd)
public None None.DataObject(String format None,Object data None)
BOOL WINAPI magnification.MagShowSystemCursor(_In_ BOOL fShowCursor)
HRESULT None oleaut32.VarDateFromDisp(IDispatch *pdispIn None,_In_ LCID lcid,_Out_ DATE *pdateOut)
NET_API_STATUS None netapi32.NetAddAlternateComputerName(_In_opt_ LPCWSTR Server,_In_ LPCWSTR AlternateName,_In_opt_ LPCWSTR DomainAccount,_In_opt_ LPCWSTR DomainAccountPassword,_In_ ULONG Reserved)
BOOL WINAPI kernel32.GetNumaProcessorNode(_In_ UCHAR Processor,_Out_ PUCHAR NodeNumber)
HRESULT None oleaut32.VarR8FromUI4(_In_ ULONG ulIn,_Out_ DOUBLE *pdblOut)
HRESULT None oleaut32.VarDecFromR8(_In_ DOUBLE dblIn,_Out_ DECIMAL *pdecOut)
BOOL CALLBACK None.EnumCalendarInfoProcExEx(_In_ LPWSTR lpCalendarInfoString,_In_ CALID Calendar,_In_ LPWSTR lpReserved,_In_ LPARAM lParam)
BOOL WINAPI user32.AdjustWindowRect(_Inout_ LPRECT lpRect,_In_ DWORD dwStyle,_In_ BOOL bMenu)
HRESULT None propsys.PSUnregisterPropertySchema(_In_ PCWSTR pszPath)
BOOL WINAPI user32.EndDeferWindowPos(_In_ HDWP hWinPosInfo)
BOOL None kernel32.AdjustCalendarDate(_Inout_ LPCALDATETIME lpCalDateTime,_In_ CALDATETIME_DATEUNIT calUnit,_Out_ INT amount)
NTSTATUS None None.WdfRegistryAssignValue(_In_ WDFKEY Key,_In_ PCUNICODE_STRING ValueName,_In_ ULONG ValueType,_In_ ULONG ValueLength,_In_ PVOID Value)
HRESULT WINAPI ndfapi.NdfCreateWebIncidentEx(_In_ LPCWSTR url,_In_ BOOL useWinHTTP,_In_ LPWSTR moduleName,_Out_ NDFHANDLE *handle)
VOID None None.ExFreePool(_In_ PVOID P)
JET_ERR JET_API None.JetCreateTableColumnIndex3(__in JET_SESID sesid,__in JET_DBID dbid,__in_out JET_TABLECREATE3* ptablecreate)
protected void None.OnUnload(EventArgs e None)
HGLOBAL WINAPI kernel32.GlobalFree(_In_ HGLOBAL hMem)
HRESULT None None.CreateNewStreamPrioritization([out] IWMStreamPrioritization **ppSP)
public void None.CloseWebPart(WebPart webPart None)
JET_ERR JET_API None.JetBeginExternalBackup(__in JET_GRBIT grbit)
BOOL None shell32.GetFileNameFromBrowse(_In_opt_ HWND hwnd,_Inout_ PWSTR pszFilePath,UINT cchFilePath None,_In_opt_ PCWSTR pszWorkingDir,_In_ PCWSTR pszDefExt,_In_opt_ PCWSTR pszFilters,_In_opt_ PCWSTR szTitle)
uint32 None smiscsitargetprov.QuiesceDevice([in] boolean Quiesce)
HRESULT None msdrm.DRMCreateClientSession(_In_ DRMCALLBACK pfnCallback,_In_ UINT uCallbackVersion,_In_ PWSTR wszGroupIDProviderType,_In_opt_ PWSTR wszGroupID,_Out_ DRMHSESSION *phClient)
HRESULT WDSCLIAPI wdsclientapi.WdsCliLog(_In_ HANDLE hSession,_In_ ULONG ulLogLevel,_In_ ULONG ulMessageCode,Varies ... None)
UINT None oledlg.OleUIObjectProperties(_In_ LPOLEUIOBJECTPROPS lpOF)
UINT None oledlg.OleUIObjectPropertiesW(_In_ LPOLEUIOBJECTPROPS lpOF)
UINT None oledlg.OleUIObjectPropertiesA(_In_ LPOLEUIOBJECTPROPS lpOF)
ULONG WINAPI sechost.TraceQueryInformation(_In_ TRACEHANDLE SessionHandle,_In_ TRACE_QUERY_INFO_CLASS InformationClass,_Out_ PVOID TraceInformation,_In_ ULONG InformationLength,_Out_opt_ PULONG ReturnLength)
NTSTATUS None secur32.LsaCallAuthenticationPackage(_In_ HANDLE LsaHandle,_In_ ULONG AuthenticationPackage,_In_ PVOID ProtocolSubmitBuffer,_In_ ULONG SubmitBufferLength,_Out_ PVOID *ProtocolReturnBuffer,_Out_ PULONG *ReturnBufferLength,_Out_ PNTSTATUS ProtocolStatus)
BOOL None spoolss.EndDocPrinter(_In_ HANDLE hPrinter)
HRESULT None ole32.IIDFromString(_In_ LPCOLESTR lpsz,_Out_ LPIID lpiid)
BOOL WINAPI kernel32.InstallELAMCertificateInfo(_In_ HANDLE ELAMFile)
HCLUSTER WINAPI clusapi.GetClusterFromResource(_In_ HRESOURCE hResource)
BOOL WINAPI advapi32.CryptGetUserKey(_In_ HCRYPTPROV hProv,_In_ DWORD dwKeySpec,_Out_ HCRYPTKEY *phUserKey)
protected Visual None.GetVisualChild(int index None)
NTSTATUS None None.RtlCreateAcl(_Out_ PACL Acl,_In_ ULONG AclLength,_In_ ULONG AceRevision)
HRESULT None propsys.PSCoerceToCanonicalValue(_In_ REFPROPERTYKEY key,_Inout_ PROPVARIANT *ppropvar)
DWORD WINAPI clusapi.RemoveClusterGroupDependency(_In_ HGROUP hGroup,_In_ HGROUP hDependsOn)
BOOL None None.ListView_SetInfoTip(HWND hwnd None,PLVSETINFOTIP plvSetInfoTip None)
BOOL WINAPI avrt.AvQuerySystemResponsiveness(_In_ HANDLE AvrtHandle,_Out_ PULONG SystemResponsivenessValue)
BOOL WINAPI user32.SetCaretBlinkTime(_In_ UINT uMSeconds)
void None None._free_locale(_locale_t locale None)
HRESULT WINAPI wsdapi.WSDUriDecode(_In_ LPCWSTR source,_In_ DWORD cchSource,_Out_ LPWSTR *destOut,_Out_opt_ DWORD *cchDestOut)
HRESULT None None.GetParentItem([out] IWiaItem2 **ppIWiaItem2)
HRESULT None None.get_File([out] BSTR *virtualMachineXMLFile)
HRESULT None None.get_FsiNamedStreams([out None None,optional] IFsiNamedStreams **streams)
public GeneralTransform None.TransformToDescendant(Visual descendant None)
HRESULT None rtworkq.RtwqGetWorkQueueMMCSSTaskId(_In_ DWORD workQueueId,_Out_ DWORD *taskId)
HRESULT None None.SSIZETMult(_In_ SSIZE_T Multiplicand,_In_ SSIZE_T Multiplier,_Out_ SSIZE_T *pResult)
BOOL None kernel32.EnumSystemGeoID(_In_ GEOCLASS GeoClass,_In_ GEOID ParentGeoId,_In_ GEO_ENUMPROC lpGeoEnumProc)
DWORD WINAPI advapi32.GetEffectiveRightsFromAcl(_In_ PACL pacl,_In_ PTRUSTEE pTrustee,_Out_ PACCESS_MASK pAccessRights)
DWORD WINAPI advapi32.GetEffectiveRightsFromAclW(_In_ PACL pacl,_In_ PTRUSTEE pTrustee,_Out_ PACCESS_MASK pAccessRights)
DWORD WINAPI advapi32.GetEffectiveRightsFromAclA(_In_ PACL pacl,_In_ PTRUSTEE pTrustee,_Out_ PACCESS_MASK pAccessRights)
DWORD CALLBACK None.MprAdminGetIpAddressForUser(_In_ WCHAR *lpwszUserName,_In_ WCHAR *lpwszPortName,_Inout_ DWORD *lpdwIpAddress,_Out_ BOOL *bNotifyRelease)
MMRESULT None msacm32.acmFormatDetails(HACMDRIVER had None,LPACMFORMATDETAILS pafd None,DWORD fdwDetails None)
MMRESULT None msacm32.acmFormatDetailsW(HACMDRIVER had None,LPACMFORMATDETAILS pafd None,DWORD fdwDetails None)
MMRESULT None msacm32.acmFormatDetailsA(HACMDRIVER had None,LPACMFORMATDETAILS pafd None,DWORD fdwDetails None)
uint32 None wvrcimprov.CreateStretchTopology([in] string ClusterName,[in] string SourceRGName,[in] string SourceRGDescription,[in] string SourceVolumeName[],[in] string SourceLogVolumeName,[in] string DestinationRGName,[in] string DestinationRGDescription,[in] string DestinationVolumeName[],[in] string DestinationLogVolumeName,[in] uint64 LogSizeInBytes,[in] boolean PreventReplication,[in] boolean Seeded,[out] MSFT_WvrReplicationGroup Output[])
NTSTATUS None None.RtlQueryRegistryValues(_In_ ULONG RelativeTo,_In_ PCWSTR Path,_Inout_ PRTL_QUERY_REGISTRY_TABLE QueryTable,_In_opt_ PVOID Context,_In_opt_ PVOID Environment)
JET_ERR JET_API None.JetBeginSession(__in JET_INSTANCE instance,__out JET_SESID* psesid,__in_opt JET_PCSTR szUserName,__in_opt JET_PCSTR szPassword)
HRESULT None None.SSIZETSub(_In_ SSIZE_T Minuend,_In_ SSIZE_T Subtrahend,_Out_ SSIZE_T *pResult)
HRESULT None azroles.get__NewEnum(LPUNKNOWN *ppEnumPtr None)
HRESULT None None.UIntPtrSub(_In_ UINT_PTR uMinuend,_In_ UINT_PTR uSubtrahend,_Out_ UINT_PTR *puResult)
HRESULT WINAPI kernel32.GetThreadDescription(_In_ HANDLE hThread,_Out_ PWSTR *threadDescription)
public Object None.Invoke(DispatcherPriority priority None,Delegate method None,Object arg None,Object[] args None)
ULONG None tdh.TdhCloseDecodingHandle(_In_ TDH_HANDLE Handle)
LONG WINAPI advapi32.RegOverridePredefKey(_In_ HKEY hKey,_In_opt_ HKEY hNewHKey)
BOOL None kernel32.GetNumaNodeNumberFromHandle(_In_ HANDLE hFile,_Out_ PUSHORT NodeNumber)
HRESULT None oleaut32.OleCreateFontIndirect(_In_ LPFONTDESC lpFontDesc,_In_ REFIID riid,_Out_ LPVOID *lplpvObj)
HANDLE None None.ConnectToPrinterDlg(_In_ HWND hwnd,_In_ DWORD Flags)
UINT None oledlg.OleUIChangeIcon(_In_ LPOLEUICHANGEICON lpCI)
UINT None oledlg.OleUIChangeIconW(_In_ LPOLEUICHANGEICON lpCI)
UINT None oledlg.OleUIChangeIconA(_In_ LPOLEUICHANGEICON lpCI)
BOOL None shlwapi.SHRegGetBoolUSValue(_In_ LPCTSTR pszSubKey,_In_opt_ LPCTSTR pszValue,_In_ BOOL fIgnoreHKCU,_In_ BOOL fDefault)
BOOL None shlwapi.SHRegGetBoolUSValueW(_In_ LPCTSTR pszSubKey,_In_opt_ LPCTSTR pszValue,_In_ BOOL fIgnoreHKCU,_In_ BOOL fDefault)
BOOL None shlwapi.SHRegGetBoolUSValueA(_In_ LPCTSTR pszSubKey,_In_opt_ LPCTSTR pszValue,_In_ BOOL fIgnoreHKCU,_In_ BOOL fDefault)
HRESULT None None.GetBlocks([out None None,retval] IAppxBlockMapBlocksEnumerator **blocks)
BOOL CALLBACK None.EnumLocalesProcEx(_In_ LPWSTR lpLocaleString,_In_ DWORD dwFlags,_In_ LPARAM lParam)
DWORD PXEAPI wdspxe.PxeDhcpGetVendorOptionValue(_In_ PVOID pPacket,_In_ ULONG uPacketLen,_In_ BYTE bOption,_In_ ULONG uInstance,_Out_opt_ PBYTE pbOptionLen,_Out_opt_ PVOID *ppOptionValue)
BOOL None None.DeletePrinterConnection(_In_ LPTSTR pName)
BOOL None None.DeletePrinterConnectionW(_In_ LPTSTR pName)
BOOL None None.DeletePrinterConnectionA(_In_ LPTSTR pName)
uint32 None netadaptercim.Disable([in] boolean IPv4,[in] boolean IPv6,[out] string cmdletOutput)
DWORD WINAPI clusapi.GetClusterResourceDependencyExpression(_In_ HRESOURCE hResource,_Out_opt_ LPWSTR lpszDependencyExpression,_Inout_ LPDWORD lpcchDependencyExpression)
HRESOURCE WINAPI resutils.ResUtilGetResourceDependencyEx(_In_ HANDLE hSelf,_In_ LPCWSTR lpszResourceType,_In_ DWORD dwDesiredAccess)
HRESULT None msdrm.DRMGetOwnerLicense(_In_ DRMPUBHANDLE hIssuanceLicense,_Inout_ UINT *puLength,_Out_ PWSTR wszOwnerLicense)
HRESULT None None.anyAttribute(ISchemaAny** anyAttribute None)
HRESULT None ole32.CreateGenericComposite(_In_opt_ LPMONIKER pmkFirst,_In_opt_ LPMONIKER pmkRest,_Out_ LPMONIKER *ppmkComposite)
HRESULT None None.StartSnapshotSet([out] VSS_ID *pSnapshotSetId)
HRESOURCE WINAPI resutils.ResUtilGetResourceNameDependency(_In_ LPCWSTR lpszResourceName,_In_ LPCWSTR lpszResourceType)
NET_API_STATUS None netapi32.NetServerTransportAdd(_In_ LPWSTR servername,_In_ DWORD level,_In_ LPBYTE bufptr)
BOOL WINAPI dbghelp.SymEnumTypesByName(_In_ HANDLE hProcess,_In_ ULONG64 BaseOfDll,_In_opt_ PCSTR mask,_In_ PSYM_ENUMERATESYMBOLS_CALLBACK EnumSymbolsCallback,_In_ PVOID UserContext)
BOOL WINAPI dbghelp.SymEnumTypesByNameW(_In_ HANDLE hProcess,_In_ ULONG64 BaseOfDll,_In_opt_ PCSTR mask,_In_ PSYM_ENUMERATESYMBOLS_CALLBACK EnumSymbolsCallback,_In_ PVOID UserContext)
BOOL WINAPI dbghelp.SymEnumTypesByName(_In_ HANDLE hProcess,_In_ ULONG64 BaseOfDll,_In_opt_ PCSTR mask,_In_ PSYM_ENUMERATESYMBOLS_CALLBACK EnumSymbolsCallback,_In_ PVOID UserContext)
PTSTR None shlwapi.StrChr(_In_ PTSTR pszStart,TCHAR wMatch None)
PTSTR None shlwapi.StrChrW(_In_ PTSTR pszStart,TCHAR wMatch None)
PTSTR None shlwapi.StrChrA(_In_ PTSTR pszStart,TCHAR wMatch None)
UINT None msi.MsiRecordSetStream(_In_ MSIHANDLE hRecord,_In_ UNIT iField,_In_ LPCTSTR szFilePath)
UINT None msi.MsiRecordSetStreamW(_In_ MSIHANDLE hRecord,_In_ UNIT iField,_In_ LPCTSTR szFilePath)
UINT None msi.MsiRecordSetStreamA(_In_ MSIHANDLE hRecord,_In_ UNIT iField,_In_ LPCTSTR szFilePath)
HRESULT None None.GetSchemaProvider([out None None,retval] ISchemaProvider **ppSchemaProvider)
NTSTATUS None advapi32.LsaQueryTrustedDomainInfo(_In_ LSA_HANDLE PolicyHandle,_In_ PSID TrustedDomainSid,_In_ TRUSTED_INFORMATION_CLASS InformationClass,_Out_ PVOID *Buffer)
NET_API_STATUS None netapi32.NetUserSetGroups(_In_ LPCWSTR servername,_In_ LPCWSTR username,_In_ DWORD level,_In_ LPBYTE buf,_In_ DWORD num_entries)
DWORD WINAPI wlanapi.WlanHostedNetworkForceStop(_In_ HANDLE hClientHandle,_Out_opt_ PWLAN_HOSTED_NETWORK_REASON pFailReason,_Reserved_ PVOID pvReserved)
HRESULT None oleaut32.VarBoolFromDate(_In_ DATE dateIn,_Out_ VARIANT_BOOL *pboolOut)
HWND WINAPI user32.FindWindowEx(_In_opt_ HWND hwndParent,_In_opt_ HWND hwndChildAfter,_In_opt_ LPCTSTR lpszClass,_In_opt_ LPCTSTR lpszWindow)
HWND WINAPI user32.FindWindowExW(_In_opt_ HWND hwndParent,_In_opt_ HWND hwndChildAfter,_In_opt_ LPCTSTR lpszClass,_In_opt_ LPCTSTR lpszWindow)
HWND WINAPI user32.FindWindowExA(_In_opt_ HWND hwndParent,_In_opt_ HWND hwndChildAfter,_In_opt_ LPCTSTR lpszClass,_In_opt_ LPCTSTR lpszWindow)
HRESULT None None.GetStatus([out None None,retval] DIRECTMANIPULATION_STATUS *status)
HRESULT None None.get_QuerySelectColumns([out None None,retval] LPWSTR *ppszSelectColumns)
INT None mswsock.GetNameByType(_In_ LPGUID lpServiceType,_Out_ LPTSTR lpServiceName,_In_ DWORD dwNameLength)
INT None mswsock.GetNameByTypeW(_In_ LPGUID lpServiceType,_Out_ LPTSTR lpServiceName,_In_ DWORD dwNameLength)
INT None mswsock.GetNameByTypeA(_In_ LPGUID lpServiceType,_Out_ LPTSTR lpServiceName,_In_ DWORD dwNameLength)
HRESULT None None.get_UDFRevision([out] LONG *pVal)
HRESULT None None.get_HardDiskConnections([out] IVMHardDiskConnectionCollection **hardDiskConnectionCollection)
VOID WINAPI wlanapi.WlanFreeMemory(_In_ PVOID pMemory)
ULONG WINAPI iphlpapi.GetTcp6Table(_Out_ PMIB_TCP6TABLE TcpTable,_Inout_ PULONG SizePointer,_In_ BOOL Order)
HINSTANCE None None.LoadMUILibrary(_In_ LPCTSTR pszFullModuleName,_In_ DWORD dwLangConvention,_In_ LANGID LangID)
HINSTANCE None None.LoadMUILibraryW(_In_ LPCTSTR pszFullModuleName,_In_ DWORD dwLangConvention,_In_ LANGID LangID)
HINSTANCE None None.LoadMUILibraryA(_In_ LPCTSTR pszFullModuleName,_In_ DWORD dwLangConvention,_In_ LANGID LangID)
HRESULT None oleaut32.SafeArrayGetVartype(_In_ SAFEARRAY *psa,_Out_ VARTYPE *pvt)
HRESULT None None.GetRestoreSubcomponentCount([out] UINT *pcRestoreSubcomponent)
public ObjRef None.CreateObjRef(Type requestedType None)
HRESULT None None.put_MulticastTtl(long lTtl None)
UINT WINAPI user32.GetWindowModuleFileName(_In_ HWND hwnd,_Out_ LPTSTR lpszFileName,_In_ UINT cchFileNameMax)
UINT WINAPI user32.GetWindowModuleFileNameW(_In_ HWND hwnd,_Out_ LPTSTR lpszFileName,_In_ UINT cchFileNameMax)
UINT WINAPI user32.GetWindowModuleFileNameA(_In_ HWND hwnd,_Out_ LPTSTR lpszFileName,_In_ UINT cchFileNameMax)
HRESULT None None.get_SupportedWriteSpeedDescriptors([out] SAFEARRAY *supportedSpeedDescriptors)
HRESULT WINAPI iscsidsc.SetIscsiInitiatorNodeName(PTCHAR InitiatorNodeName None)
HRESULT WINAPI iscsidsc.SetIscsiInitiatorNodeNameW(PTCHAR InitiatorNodeName None)
HRESULT WINAPI iscsidsc.SetIscsiInitiatorNodeNameA(PTCHAR InitiatorNodeName None)
HRESULT None None.FeedDeleted(const BSTR path)
void None None.Prepare(PreparingEnlistment preparingEnlistment None)
HRESULT None None.CreatePartResources([out None None,retval] IXpsOMPartResources **partResources)
void None None.Prepare(PreparingEnlistment preparingEnlistment None)
VOID WINAPI user32.keybd_event(_In_ BYTE bVk,_In_ BYTE bScan,_In_ DWORD dwFlags,_In_ ULONG_PTR dwExtraInfo)
DWORD None netapi32.DsEnumerateDomainTrusts(_In_opt_ LPTSTR ServerName,_In_ ULONG Flags,_Out_ PDS_DOMAIN_TRUSTS *Domains,_Out_ PULONG DomainCount)
DWORD None netapi32.DsEnumerateDomainTrustsW(_In_opt_ LPTSTR ServerName,_In_ ULONG Flags,_Out_ PDS_DOMAIN_TRUSTS *Domains,_Out_ PULONG DomainCount)
DWORD None netapi32.DsEnumerateDomainTrustsA(_In_opt_ LPTSTR ServerName,_In_ ULONG Flags,_Out_ PDS_DOMAIN_TRUSTS *Domains,_Out_ PULONG DomainCount)
void None None.Rollback(Enlistment enlistment None)
PWSTR None shell32.StrStrNIW(_In_ PWSTR pszFirst,_In_ PCWSTR pszSrch,UINT cchMax None)
HRESULT None None._PositionViewWindow(HWND hwnd None,LPRECT prc None)
NTSTATUS None None.LsaApLogonUser(_In_ PLSA_CLIENT_REQUEST ClientRequest,_In_ SECURITY_LOGON_TYPE LogonType,_In_ PVOID AuthenticationInformation,_In_ PVOID ClientAuthenticationBase,_In_ ULONG AuthenticationInformationLength,_Out_ PVOID *ProfileBuffer,_Out_ PULONG ProfileBufferLength,_Out_ PLUID LogonId,_Out_ PNTSTATUS SubStatus,_Out_ PLSA_TOKEN_INFORMATION_TYPE TokenInformationType,_Out_ PVOID *TokenInformation,_Out_ PLSA_UNICODE_STRING *AccountName,_Out_ PLSA_UNICODE_STRING *AuthenticatingAuthority)
LONG WINAPI tapi32.lineSetCallTreatment(HCALL hCall None,DWORD dwTreatment None)
HRESULT None windowscodecs.IWICBitmapDecoder_GetMetadataQueryReader_Proxy(_In_ IWICBitmapDecoder *THIS_PTR,_Out_ IWICMetadataQueryReader **ppIMetadataQueryReader)
ULONG __stdcall tdh.TdhGetEventMapInformation(_In_ PEVENT_RECORD pEvent,_In_ LPWSTR pMapName,_Out_ PEVENT_MAP_INFO pBuffer,_Inout_ ULONG *pBufferSize)
DWORD None None.SetNetworkInfoInBlob(HBLOB hBlob None,LPNETWORKINFO lpNetworkInfo None)
BOOL CALLBACK None.TranslateDispatchCallback(LPMSG lpmsg None)
HRESULT None msdrm.DRMCreateLicenseStorageSession(_In_ DRMENVHANDLE hEnv,_In_ DRMHANDLE hDefaultLibrary,_In_ DRMHSESSION hClient,_In_ UINT uFlags,_In_ PWSTR wszIssuanceLicense,_Out_ DRMHSESSION *phLicenseStorage)
protected void None.OnLostStylusCapture(StylusEventArgs e None)
HRESULT None ole32.CoQueryProxyBlanket(_In_ IUnknown *pProxy,_Out_opt_ DWORD *pwAuthnSvc,_Out_opt_ DWORD *pAuthzSvc,_Out_opt_ OLECHAR **pServerPrincName,_Out_opt_ DWORD *pAuthnLevel,_Out_opt_ DWORD *pImpLevel,_Out_opt_ RPC_AUTH_IDENTITY_HANDLE *pAuthInfo,_Out_opt_ DWORD *pCapabilites)
HRESULT None None.End3(GUID EventId None,HRESULT hrCompletionCode None,OPAQUECOMMAND* pContext None)
HGROUP WINAPI clusapi.OpenClusterGroup(_In_ HCLUSTER hCluster,_In_ LPCWSTR lpszGroupName)
UINT None msi.MsiDatabaseExport(_In_ MSIHANDLE hDatabase,_In_ LPCTSTR szTableName,_In_ LPCTSTR szFolderPath,_In_ LPCTSTR szFileName)
UINT None msi.MsiDatabaseExportW(_In_ MSIHANDLE hDatabase,_In_ LPCTSTR szTableName,_In_ LPCTSTR szFolderPath,_In_ LPCTSTR szFileName)
UINT None msi.MsiDatabaseExportA(_In_ MSIHANDLE hDatabase,_In_ LPCTSTR szTableName,_In_ LPCTSTR szFolderPath,_In_ LPCTSTR szFileName)
BOOL WINAPI advapi32.AddAccessDeniedAce(_Inout_ PACL pAcl,_In_ DWORD dwAceRevision,_In_ DWORD AccessMask,_In_ PSID pSid)
BOOL WINAPI clfsw32.SetLogArchiveMode(_In_ HANDLE hLog,_In_ CLFS_LOG_ARCHIVE_MODE eMode)
BOOL WINAPI advapi32.SaferCloseLevel(_In_ SAFER_LEVEL_HANDLE hLevelHandle)
HRESULT None None.VerifyAllDigitalSignaturesAndAuthenticateCertificates(IXpsSignatureManager *signatureManager None)
UINT None msi.MsiSourceListGetInfo(_In_ LPCTSTR szProductCodeOrPatchCode,_In_opt_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD dwOptions,_In_ LPCTSTR szProperty,_Out_opt_ LPTSTR szValue,_Inout_opt_ LPDWORD pcchValue)
UINT None msi.MsiSourceListGetInfoW(_In_ LPCTSTR szProductCodeOrPatchCode,_In_opt_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD dwOptions,_In_ LPCTSTR szProperty,_Out_opt_ LPTSTR szValue,_Inout_opt_ LPDWORD pcchValue)
UINT None msi.MsiSourceListGetInfoA(_In_ LPCTSTR szProductCodeOrPatchCode,_In_opt_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD dwOptions,_In_ LPCTSTR szProperty,_Out_opt_ LPTSTR szValue,_Inout_opt_ LPDWORD pcchValue)
HRESULT None windowscodecs.FlipRotateSource(IWICBitmapSource *pBitmapSource None,WICBitmapTransformOptions options None,IWICBitmapFlipRotator **ppFlipRotator None)
HRESULT None None.GetNumExtendedAttributes(DWORD* pdwValueName None)
HRESULT None None.get_statusText(BSTR* pbstrStatus None)
UINT WINAPI user32.DdeGetLastError(_In_ DWORD idInst)
protected void None.OnDragEnter(DragEventArgs e None)
HRESULT None None.get_startModeURI(BSTR * namespaceURI)
BOOL None None.WlxSetTimeout(_In_ HANDLE hWlx,_In_ DWORD Timeout)
void None None.DoPasteLink(hwndClientDDE None None)
BOOL WINAPI kernel32.FreeUserPhysicalPages(_In_ HANDLE hProcess,_Inout_ PULONG_PTR NumberOfPages,_In_ PULONG_PTR UserPfnArray)
void None None.SinglePhaseCommit(SinglePhaseEnlistment singlePhaseEnlistment None)
BOOL None cabinet.ResetCompressor(_In_ COMPRESSOR_HANDLE CompressorHandle)
NTSTATUS WINAPI bcrypt.BCryptEnumContextFunctionProviders(_In_ ULONG dwTable,_In_ LPCWSTR pszContext,_In_ ULONG dwInterface,_In_ LPCWSTR pszFunction,_Inout_ ULONG *pcbBuffer,_Inout_ PCRYPT_CONTEXT_FUNCTION_PROVIDERS *ppBuffer)
BOOL WINAPI kernel32.GetNumaAvailableMemoryNode(_In_ UCHAR Node,_Out_ PULONGLONG AvailableBytes)
uint32 None wvrcimprov.SmapiUnpairCluster([in] string PairClusterName)
HRESULT None None.GetContentStatus([out None None,retval] LPWSTR *contentStatus)
HRESULT None None.GetFontResource([out None None,retval] IXpsOMFontResource **fontResource)
HRESULT None None.GetPrintTicketResource([out None None,retval] IXpsOMPrintTicketResource **printTicketResource)
HRESULT None azroles.get_PolicyAdministratorsName([out] VARIANT *pvarAdmins)
HRESULT None None.Clone([out None None,retval] IXpsOMCoreProperties **coreProperties)
HRESULT None shell32.ILLoadFromStreamEx(_In_ IStream *pstm,_Out_ PIDLIST_RELATIVE *pidl)
HRESULT None windowscodecs.IWICComponentInfo_GetVersion_Proxy(_In_ IWICComponentInfo *THIS_PTR,_In_ UINT cchVersion,_Inout_ WCHAR *wzVersion,_Out_ UINT *pcchActual)
HRESULT None usp10.ScriptStringGetOrder(_In_ SCRIPT_STRING_ANALYSIS ssa,_Out_ UINT *puOrder)
JET_ERR JET_API None.JetTerm(__in JET_INSTANCE instance)
HRESULT None azroles.get__NewEnum(LPUNKNOWN *ppEnumPtr None)
BOOL WINAPI comctl32.DSA_Destroy(_In_ HDSA pdsa)
HANDLE WINAPI dbghelp.SymFindExecutableImage(_In_ HANDLE hProcess,_In_ PCTSTR FileName,_Out_ PTSTR ImageFilePath,_In_ PFIND_EXE_FILE_CALLBACK Callback,_In_ PVOID CallerData)
HANDLE WINAPI dbghelp.SymFindExecutableImageW(_In_ HANDLE hProcess,_In_ PCTSTR FileName,_Out_ PTSTR ImageFilePath,_In_ PFIND_EXE_FILE_CALLBACK Callback,_In_ PVOID CallerData)
HANDLE WINAPI dbghelp.SymFindExecutableImage(_In_ HANDLE hProcess,_In_ PCTSTR FileName,_Out_ PTSTR ImageFilePath,_In_ PFIND_EXE_FILE_CALLBACK Callback,_In_ PVOID CallerData)
DWORD WINAPI mstlsapi.TLSGetServerCertificate(_In_ TLS_HANDLE hHandle,_In_ BOOL bSignCert,_Out_ LPBYTE *ppbCertBlob,_Out_ LPDWORD lpdwCertBlobLen,_Out_ PDWORD pdwErrCode)
LONG WINAPI tapi32.lineUncompleteCall(HLINE hLine None,DWORD dwCompletionID None)
BOOL None wtsapi32.WTSTerminateProcess(_In_ HANDLE hServer,_In_ DWORD ProcessId,_In_ DWORD ExitCode)
HRESULT None msdrm.DRMGetClientVersion(_In_ DRM_CLIENT_VERSION_INFO *pDRMClientVersionInfo)
HANDLE WINAPI ktmw32.CreateEnlistment(_In_opt_ LPSECURITY_ATTRIBUTES lpEnlistmentrAttributes,_In_ HANDLE ResourceManagerHandle,_In_ HANDLE TransactionHandle,_In_ NOTIFICATION_MASK NotificationMask,_In_opt_ DWORD CreateOptions,_In_opt_ PVOID EnlistmentKey)
HRESULT None None.PrepareForBackup([out] IVssAsync **ppAsync)
LSTATUS None shlwapi.SHEnumKeyEx(_In_ HKEY hkey,DWORD dwIndex None,LPTSTR pszName None,_In_ LPDWORD pcchName)
LSTATUS None shlwapi.SHEnumKeyExW(_In_ HKEY hkey,DWORD dwIndex None,LPTSTR pszName None,_In_ LPDWORD pcchName)
LSTATUS None shlwapi.SHEnumKeyExA(_In_ HKEY hkey,DWORD dwIndex None,LPTSTR pszName None,_In_ LPDWORD pcchName)
HRESULT None mfplat.MFCreateMemoryBuffer(DWORD cbMaxLength None,IMFMediaBuffer **ppBuffer None)
MMRESULT None msacm32.acmMetrics(HACMOBJ hao None,UINT uMetric None,LPVOID pMetric None)
BOOL WINAPI kernel32.QueryThreadCycleTime(_In_ HANDLE ThreadHandle,_Out_ PULONG64 CycleTime)
LONG WINAPI advapi32.RegSetKeySecurity(_In_ HKEY hKey,_In_ SECURITY_INFORMATION SecurityInformation,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor)
LONG WINAPI tapi32.lineUnhold(HCALL hCall None)
HRESULT None oleaut32.VarCyMul(_In_ CY cyLeft,_In_ CY cyRight,_Out_ LPCY pcyResult)
HRESULT None None.get_schemaLocations(ISchemaStringCollection** schemaLocations None)
HRESULT None None.parse([in] VARIANT varInput)
HRESULT None None.GetName([out None None,retval] LPWSTR *name)
WINOLEAPI None ole32.GetHGlobalFromStream(_In_ IStream *pstm,_Out_ HGLOBAL *phglobal)
protected void None.OnMouseEnter(MouseEventArgs e None)
HRESULT None shell32.SHQueryRecycleBin(_In_opt_ LPCTSTR pszRootPath,_Inout_ LPSHQUERYRBINFO pSHQueryRBInfo)
HRESULT None shell32.SHQueryRecycleBinW(_In_opt_ LPCTSTR pszRootPath,_Inout_ LPSHQUERYRBINFO pSHQueryRBInfo)
HRESULT None shell32.SHQueryRecycleBinA(_In_opt_ LPCTSTR pszRootPath,_Inout_ LPSHQUERYRBINFO pSHQueryRBInfo)
HRESULT None mf.MFCreateASFSplitter(IMFASFSplitter **ppISplitter None)
protected void None.OnMouseEnter(MouseEventArgs e None)
HRESULT WINAPI srpapi.srpInheritOriginClaim(_In_ Handle OriginToken,_In_ Handle InheritingToken,Handle ResultToken None)
NTSTATUS None None.RtlCreateAcl(_Out_ PACL Acl,_In_ ULONG AclLength,_In_ ULONG AceRevision)
HRESULT None azroles.get_Writable([out] BOOL *pfProp)
BOOL None None.InstallELAMCertificateInfo(_In_ HANDLE ELAMFile)
public boolean None.ShouldSerializeInlines(XamlDesignerSerializationManager manager None)
BOOL None wtsapi32.WTSLogoffSession(_In_ HANDLE hServer,_In_ DWORD SessionId,_In_ BOOL bWait)
HRESULT None ole32.CoMarshalHresult(_In_ LPSTREAM pstm,_In_ HRESULT hresult)
LRESULT None shell32.SHShellFolderView_Message(_In_ HWND hwndMain,UINT uMsg None,LPARAM lParam None)
public int None.Update(DataTable dataTable None)
DWORD WINAPI shlwapi.ThreadProc(LPVOID pData None)
LONG NTAPI ntdll.RtlIpv6StringToAddressEx(_In_ PCTSTR AddressString,_Out_ IN6_ADDR *Address,_Out_ PULONG ScopeId,_Out_ PUSHORT Port)
LONG NTAPI ntdll.RtlIpv6StringToAddressExW(_In_ PCTSTR AddressString,_Out_ IN6_ADDR *Address,_Out_ PULONG ScopeId,_Out_ PUSHORT Port)
LONG NTAPI ntdll.RtlIpv6StringToAddressEx(_In_ PCTSTR AddressString,_Out_ IN6_ADDR *Address,_Out_ PULONG ScopeId,_Out_ PUSHORT Port)
HRESULT None oleaut32.SafeArrayCopy(_In_ SAFEARRAY *psa,_Out_ SAFEARRAY **ppsaOut)
BOOL None kernel32.QueryActCtxSettingsW(_In_opt_ DWORD dwFlags,_In_opt_ HANDLE hActCtx,_In_opt_ PCWSTR settingsNameSpace,_In_ PCWSTR settingName,_Out_ PWSTR pvBuffer,_In_ SIZE_T dwBuffer,_Out_opt_ SIZE_T *pdwWrittenOrRequired)
HRESULT STDMETHODCALLTYPE rpcrt4.CStdStubBuffer_Invoke(_In_ IRpcStubBuffer *This,_In_ RPCOLEMESSAGE *pRpcMsg,_In_ IRpcChannelBuffer *pRpcChannelBuffer)
HRESULT None None.substringData(long offset None,long count None,BSTR *data None)
VOID None None.FreeRootCauseInfos(_In_ RootCauseInfo *pInfo,ULONG RootCauseCount None,BOOL bFreePointer None)
LRESULT CALLBACK None.WindowProc(HWND hwnd None,WM_IME_CHAR None None,WPARAM wParam None,LPARAM lParam None)
HRESULT None None.put_ontransformnode(VARIANT ontransformnodeSink None)
DWORD None iphlpapi.CreateIpForwardEntry(_In_ PMIB_IPFORWARDROW pRoute)
BOOL WINAPI advapi32.ObjectOpenAuditAlarm(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ LPTSTR ObjectTypeName,_In_opt_ LPTSTR ObjectName,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_ HANDLE ClientToken,_In_ DWORD DesiredAccess,_In_ DWORD GrantedAccess,_In_opt_ PPRIVILEGE_SET Privileges,_In_ BOOL ObjectCreation,_In_ BOOL AccessGranted,_Out_ LPBOOL GenerateOnClose)
BOOL WINAPI advapi32.ObjectOpenAuditAlarmW(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ LPTSTR ObjectTypeName,_In_opt_ LPTSTR ObjectName,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_ HANDLE ClientToken,_In_ DWORD DesiredAccess,_In_ DWORD GrantedAccess,_In_opt_ PPRIVILEGE_SET Privileges,_In_ BOOL ObjectCreation,_In_ BOOL AccessGranted,_Out_ LPBOOL GenerateOnClose)
BOOL WINAPI advapi32.ObjectOpenAuditAlarmA(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ LPTSTR ObjectTypeName,_In_opt_ LPTSTR ObjectName,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_ HANDLE ClientToken,_In_ DWORD DesiredAccess,_In_ DWORD GrantedAccess,_In_opt_ PPRIVILEGE_SET Privileges,_In_ BOOL ObjectCreation,_In_ BOOL AccessGranted,_Out_ LPBOOL GenerateOnClose)
HICON None shell32.ExtractAssociatedIcon(_Reserved_ HINSTANCE hInst,_Inout_ LPTSTR lpIconPath,_Inout_ LPWORD lpiIcon)
HICON None shell32.ExtractAssociatedIconW(_Reserved_ HINSTANCE hInst,_Inout_ LPTSTR lpIconPath,_Inout_ LPWORD lpiIcon)
HICON None shell32.ExtractAssociatedIconA(_Reserved_ HINSTANCE hInst,_Inout_ LPTSTR lpIconPath,_Inout_ LPWORD lpiIcon)
DWORD None iphlpapi.GetAdapterIndex(_In_ LPWSTR AdapterName,_Inout_ PULONG IfIndex)
UINT None None.TreeView_SetScrollTime(HWND hwndTV None,UINT uMaxScrollTime None)
CLIENT_CALL_RETURN None rpcrt4.NdrMesProcEncodeDecode4(handle_t Handle None,_In_ PMIDL_STUB_DESC pStubDescriptor,_In_ PFORMAT_STRING pFormat,_Inout_ ... None)
HRESULT None dcomp.CreateMatrixTransform3D([out] IDCompositionMatrixTransform3D **matrixTransform3D)
HRESULT None None.setAttribute(BSTR name None,VARIANT value None)
BOOL WINAPI user32.InsertMenuItem(_In_ HMENU hMenu,_In_ UINT uItem,_In_ BOOL fByPosition,_In_ LPCMENUITEMINFO lpmii)
BOOL WINAPI user32.InsertMenuItemW(_In_ HMENU hMenu,_In_ UINT uItem,_In_ BOOL fByPosition,_In_ LPCMENUITEMINFO lpmii)
BOOL WINAPI user32.InsertMenuItemA(_In_ HMENU hMenu,_In_ UINT uItem,_In_ BOOL fByPosition,_In_ LPCMENUITEMINFO lpmii)
HRESULT None None.LongLongSub(_In_ LONGLONG llMinuend,_In_ LONGLONG llSubtrahend,_Out_ LONGLONG *pllResult)
unit32 None sppwmi.InstallProductKey([in] string ProductKey)
HRESULT None shlwapi.ConnectToConnectionPoint(_In_opt_ IUnknown *punk,_In_ REFIID riidEvent,BOOL fConnect None,_In_ IUnknown *punkTarget,_Out_ DWORD *pdwCookie,_Out_opt_ IConnectionPoint **ppcpOut)
NTSTATUS NTAPI None.CrediUnmarshalandDecodeString(_In_ LPWSTR MarshaledString,_Out_ LPBYTE *Blob,_Out_ ULONG *BlobSize,_Out_ BOOLEAN *IsFailureFatal)
BOOL CALLBACK None.SymEnumerateSymbolsProc64(_In_ PCTSTR SymbolName,_In_ DWORD64 SymbolAddress,_In_ ULONG SymbolSize,_In_opt_ PVOID UserContext)
HRESULT None None.GetLanguage([out None None,retval] LPWSTR *language)
BOOL WINAPI advapi32.LogonUserExExW(_In_ LPTSTR lpszUsername,_In_opt_ LPTSTR lpszDomain,_In_opt_ LPTSTR lpszPassword,_In_ DWORD dwLogonType,_In_ DWORD dwLogonProvider,_In_opt_ PTOKEN_GROUPS pTokenGroups,_Out_opt_ PHANDLE phToken,_Out_opt_ PSID *ppLogonSid,_Out_opt_ PVOID *ppProfileBuffer,_Out_opt_ LPDWORD pdwProfileLength,_Out_opt_ PQUOTA_LIMITS pQuotaLimits)
BOOL WINAPI comctl32.DPA_Sort(HDPA pdpa None,PFNDPACOMPARE pfnCmp None,LPARAM lParam None)
BOOL WINAPI None.WIMGetMountedImageHandle(PWSTR pszMountPath None,DWORD dwFlags None,PHANDLE phWimHandle None,PHANDLE phImageHandle None)
BOOL WINAPI None.WIMUnmountImageHandle(HANDLE hImage None,DWORD dwUnmountFlags None)
ULONG __stdcall tdh.TdhEnumerateProviders(_Out_ PPROVIDER_ENUMERATION_INFO pBuffer,_Inout_ ULONG *pBufferSize)
LONG WINAPI advapi32.RegRestoreKey(_In_ HKEY hKey,_In_ LPCTSTR lpFile,_In_ DWORD dwFlags)
LONG WINAPI advapi32.RegRestoreKeyW(_In_ HKEY hKey,_In_ LPCTSTR lpFile,_In_ DWORD dwFlags)
LONG WINAPI advapi32.RegRestoreKeyA(_In_ HKEY hKey,_In_ LPCTSTR lpFile,_In_ DWORD dwFlags)
BOOL WINAPI crypt32.CertIsStrongHashToSign(_In_ PCCERT_STRONG_SIGN_PARA pStrongSignPara,_In_ LPCWSTR pwszCNGHashAlgid,_In_opt_ PCCERT_CONTEXT pSigningCert)
public Object None.Invoke(DispatcherPriority priority None,TimeSpan timeout None,Delegate method None,Object arg None)
HRESULT None windowscodecs.IWICBitmapCodecInfo_GetMimeTypes_Proxy(_In_ IWICBitmapCodecInfo *THIS_PTR,_In_ UINT cchMimeTypes,_Out_ WCHAR *wzMimeTypes,_Out_ UINT *pcchActual)
HRESULT None ole32.CoWaitForMultipleHandles(_In_ DWORD dwFlags,_In_ DWORD dwTimeout,_In_ ULONG cHandles,_In_ LPHANDLE pHandles,_Out_ LPDWORD lpdwindex)
HRESULT None certcli.Next([out] LONG *pIndex)
void None None.Rollback(Enlistment enlistment None)
NTSTATUS None None.FsRtlGetSectorSizeInformation(_In_ PDEVICE_OBJECT RealDevice,_Out_ PFILE_FS_SECTOR_SIZE_INFORMATION SectorSizeInfo)
HRESULT None None.GetPublisher([out None None,retval] LPWSTR *publisher)
HRESULT WINAPI mfplat.MFCreateMediaTypeFromProperties(_In_ IUnknown *punkStream,_Out_ IMFMediaType **ppMediaType)
protected void None.OnPaint(PaintEventArgs e None)
HRESULT None azroles.get_PolicyAdministratorsName([out] VARIANT *pvarAdmins)
NTSTATUS None advapi32.LsaOpenTrustedDomainByName(_In_ LSA_HANDLE PolicyHandle,_In_ PLSA_UNICODE_STRING TrustedDomainName,_In_ ACCESS_MASK DesiredAccess,_Out_ PLSA_HANDLE TrustedDomainHandle)
public void None.SetValue(DependencyProperty dp None,Object value None)
BOOL WINAPI wtsapi32.WTSStopRemoteControlSession(_In_ ULONG LogonId)
BOOL WINAPI advapi32.CryptSetProvider(_In_ LPCTSTR pszProvName,_In_ DWORD dwProvType)
BOOL WINAPI advapi32.CryptSetProviderW(_In_ LPCTSTR pszProvName,_In_ DWORD dwProvType)
BOOL WINAPI advapi32.CryptSetProviderA(_In_ LPCTSTR pszProvName,_In_ DWORD dwProvType)
HRESULT None wmiutils.GetKeyList([out] IWbemPathKeyList **pOut)
HRESULT APIENTRY None.MQGetQueueProperties(LPCWSTR lpwcsFormatName None,MQQUEUEPROPS * pQueueProps)
BOOL WINAPI advapi32.SaferCreateLevel(_In_ DWORD dwScopeId,_In_ DWORD dwLevelId,_In_ DWORD OpenFlags,_Out_ SAFER_LEVEL_HANDLE *pLevelHandle,_Reserved_ LPVOID lpReserved)
BOOL WINAPI crypt32.CryptUnprotectMemory(_Inout_ LPVOID pData,_In_ DWORD cbData,_In_ DWORD dwFlags)
BOOL WINAPI kernel32.QueryFullProcessImageName(_In_ HANDLE hProcess,_In_ DWORD dwFlags,_Out_ LPTSTR lpExeName,_Inout_ PDWORD lpdwSize)
BOOL WINAPI kernel32.QueryFullProcessImageNameW(_In_ HANDLE hProcess,_In_ DWORD dwFlags,_Out_ LPTSTR lpExeName,_Inout_ PDWORD lpdwSize)
BOOL WINAPI kernel32.QueryFullProcessImageNameA(_In_ HANDLE hProcess,_In_ DWORD dwFlags,_Out_ LPTSTR lpExeName,_Inout_ PDWORD lpdwSize)
BOOL WINAPI winhttp.WinHttpSetDefaultProxyConfiguration(_In_ WINHTTP_PROXY_INFO *pProxyInfo)
HRESULT None ole32.CoGetCallerTID(_Out_ LPDWORD lpdwTID)
HRESULT None None.get_ChangePoint([out] LONG *pVal)
HRESULT None None.SetStreamType(GUID StreamType None)
HRESULT None None.get_QuerySorting([out None None,retval] LPWSTR *ppszSorting)
NTSTATUS None None.WdfCommonBufferCreate(_In_ WDFDMAENABLER DmaEnabler,_In_ size_t Length,_In_opt_ PWDF_OBJECT_ATTRIBUTES Attributes,_Out_ WDFCOMMONBUFFER *CommonBuffer)
HRESULT None None.get_responseBody(VARIANT* pvarVal None)
HRESULT None None.GetNetworkInboundAccess(BOOL * pbInbound)
HRESULT None None.remove(BSTR namespaceURI None)
BOOL WINAPI dbghelp.SymSetContext(_In_ HANDLE hProcess,_In_ PIMAGEHLP_STACK_FRAME StackFrame,_In_opt_ PIMAGEHLP_CONTEXT Context)
HRESULT None shlwapi.IStream_WritePidl(_In_ IStream* pstm,_In_ PCUIDLIST_RELATIVE pidlWrite)
RPC_STATUS RPC_ENTRY rpcrt4.RpcErrorAddRecord(_In_ RPC_EXTENDED_ERROR_INFO *ErrorInfo)
BOOL None None.IsVarTypeUnsignedInteger(_In_ VARTYPE vt)
HRESULT None None.get_status(long* plStatus None)
HRESULT None None.get_implementation(IXMLDOMImplementation **impl None)
HRESULT STDAPI cldapi.CfGetPlaceholderInfo(_In_ HANDLE FileHandle,_In_ CF_PLACEHOLDER_INFO_CLASS InfoClass,_Out_ PVOID InfoBuffer,_In_ DWORD InfoBufferLength,_Out_opt_ PDWORD ReturnedLength)
LPVOID None ole32.CoTaskMemRealloc(_In_opt_ LPVOID pv,_In_ SIZE_T cb)
HRESULT None None.GetCreator([out None None,retval] LPWSTR *creator)
NTSTATUS None None.GetCertificateFromCred(_In_ PVOID ProviderHandle,_In_ HANDLE ClientToken,_In_ PVOID SuppliedCred,_In_ ULONG SuppliedCredSize,_Out_ PVOID *CertContext)
NTSTATUS NTAPI advapi32.LsaSetDomainInformationPolicy(_In_ LSA_HANDLE PolicyHandle,_In_ POLICY_DOMAIN_INFORMATION_CLASS InformationClass,_In_ PVOID Buffer)
public String None.GetErrorText(int axeError None)
HRESULT None None.GetVersion([out None None,retval] LPWSTR *version)
BOOL WINAPI gdi32.SetDeviceGammaRamp(HDC hDC None,LPVOID lpRamp None)
SC_HANDLE WINAPI advapi32.OpenSCManager(_In_opt_ LPCTSTR lpMachineName,_In_opt_ LPCTSTR lpDatabaseName,_In_ DWORD dwDesiredAccess)
SC_HANDLE WINAPI advapi32.OpenSCManagerW(_In_opt_ LPCTSTR lpMachineName,_In_opt_ LPCTSTR lpDatabaseName,_In_ DWORD dwDesiredAccess)
SC_HANDLE WINAPI advapi32.OpenSCManagerA(_In_opt_ LPCTSTR lpMachineName,_In_opt_ LPCTSTR lpDatabaseName,_In_ DWORD dwDesiredAccess)
HRESULT STDAPI ndfapi.NdfDiagnoseIncident(_In_ NDFHANDLE Handle,_Out_ ULONG *RootCauseCount,_Out_ RootCauseInfo **RootCauses,DWORD dwWait None,DWORD dwFlags None)
HRESULT None ole32.RegisterDragDrop(_In_ HWND hwnd,_In_ LPDROPTARGET pDropTarget)
NET_API_STATUS None netapi32.NetServerTransportAddEx(_In_ LPWSTR servername,_In_ DWORD level,_In_ LPBYTE bufptr)
ULONG None tdh.TdhGetWppMessage(_In_ TDH_HANDLE Handle,_In_ PEVENT_RECORD EventRecord,_Inout_ PULONG BufferSize,_Out_ PBYTE Buffer)
HANDLE None ole32.OleDuplicateData(_In_ HANDLE hSrc,_In_ CLIPFORMAT cfFormat,_In_ UINT uiFlags)
BOOL None advapi32.CredMarshalCredential(_In_ CRED_MARSHAL_TYPE CredType,_In_ PVOID Credential,_Out_ LPTSTR *MarshaledCredential)
BOOL None advapi32.CredMarshalCredentialW(_In_ CRED_MARSHAL_TYPE CredType,_In_ PVOID Credential,_Out_ LPTSTR *MarshaledCredential)
BOOL None advapi32.CredMarshalCredentialA(_In_ CRED_MARSHAL_TYPE CredType,_In_ PVOID Credential,_Out_ LPTSTR *MarshaledCredential)
HRESULT None None.ShortSub(_In_ SHORT sMinuend,_In_ SHORT sSubtrahend,_Out_ SHORT *psResult)
BOOL WINAPI None.GetPrintExecutionData(_Out_ PRINT_EXECUTION_DATA *pData)
HRESULT None None.get_Direction([out] TERMINAL_DIRECTION *pTD)
HRESULT None d2d1.CreateEffect(REFCLSID effectId None,[out] ID2D1Effect **effect)
public StateItem None.Add(String key None,Object value None)
UINT WINAPI kernel32.SetErrorMode(_In_ UINT uMode)
BOOL WINAPI mssign32.GetCryptProvFromCert(_In_ HWND hwnd,_In_ PCCERT_CONTEXT pCert,_Out_ HCRYPTPROV *phCryptProv,_Out_ DWORD *pdwKeySpec,_In_ BOOL *pfDidCryptAcquire,_Out_opt_ LPWSTR *ppwszTmpContainer,_Out_opt_ LPWSTR *ppwszProviderName,_Out_ DWORD *pdwProviderType)
HRESULT None qmgrprxy.GetPriority([out] BG_JOB_PRIORITY *pPriority)
HRESULT None windowscodecs.IWICBitmapCodecInfo_GetContainerFormat_Proxy(_In_ IWICBitmapCodecInfo *THIS_PTR,_Out_ GUID *pguidContainerFormat)
void None None.perror(const char *string)
BOOL None wtsapi32.WTSSendMessage(_In_ HANDLE hServer,_In_ DWORD SessionId,_In_ LPTSTR pTitle,_In_ DWORD TitleLength,_In_ LPTSTR pMessage,_In_ DWORD MessageLength,_In_ DWORD Style,_In_ DWORD Timeout,_Out_ DWORD *pResponse,_In_ BOOL bWait)
BOOL None wtsapi32.WTSSendMessageW(_In_ HANDLE hServer,_In_ DWORD SessionId,_In_ LPTSTR pTitle,_In_ DWORD TitleLength,_In_ LPTSTR pMessage,_In_ DWORD MessageLength,_In_ DWORD Style,_In_ DWORD Timeout,_Out_ DWORD *pResponse,_In_ BOOL bWait)
BOOL None wtsapi32.WTSSendMessageA(_In_ HANDLE hServer,_In_ DWORD SessionId,_In_ LPTSTR pTitle,_In_ DWORD TitleLength,_In_ LPTSTR pMessage,_In_ DWORD MessageLength,_In_ DWORD Style,_In_ DWORD Timeout,_Out_ DWORD *pResponse,_In_ BOOL bWait)
public void None.SeekAlignedToLastTick(TimeSpan offset None,TimeSeekOrigin origin None)
DWORD WINAPI None.OfflineV2(_In_ RESID Resource,_In_opt_ LPCWSTR DestinationNodeName,_In_ DWORD OfflineFlags,_In_opt_ PBYTE InBuffer,_In_ DWORD InBufferSize,_In_ DWORD Reserved)
DWORD WINAPI clusapi.OnlineClusterResource(_In_ HRESOURCE hResource)
public None None.TextComposition(InputManager inputManager None,IInputElement source None,String resultText None)
BOOL WINAPI kernel32.PrefetchVirtualMemory(_In_ HANDLE hProcess,_In_ ULONG_PTR NumberOfEntries,_In_ PWIN32_MEMORY_RANGE_ENTRY VirtualAddresses,_In_ ULONG Flags)
HRESULT None None.EnumStorage([out] IMDSPEnumStorage **ppEnumStorage)
DWORD WDSTCIAPI wdstptc.WdsTransportClientWaitForCompletion(_In_ HANDLE hSessionKey,_In_ ULONG uTimeout)
protected void None.RemoveVisualChild(Visual child None)
UINT None msi.MsiInstallMissingComponent(_In_ LPCTSTR szProduct,_In_ LPCTSTR szComponent,_In_ INSTALLSTATE eInstallState)
UINT None msi.MsiInstallMissingComponentW(_In_ LPCTSTR szProduct,_In_ LPCTSTR szComponent,_In_ INSTALLSTATE eInstallState)
UINT None msi.MsiInstallMissingComponentA(_In_ LPCTSTR szProduct,_In_ LPCTSTR szComponent,_In_ INSTALLSTATE eInstallState)
BOOL WINAPI user32.GetMenuBarInfo(_In_ HWND hwnd,_In_ LONG idObject,_In_ LONG idItem,_Inout_ PMENUBARINFO pmbi)
HRESULT None None.get_UDFRevisionsSupported([out] SAFEARRAY *pVal)
VOID CALLBACK None.PFN_WdsTransportClientReceiveContents(_In_ HANDLE hSessionKey,_In_ PVOID pCallerData,_In_ PVOID pMetadata,_In_ ULONG ulSize,_In_ PULARGE_INTEGER pContentOffset)
BOOL None None.Button_GetIdealSize(HWND hwnd None,SIZE *pSize None)
UINT None msi.MsiGetShortcutTarget(_In_ LPCTSTR szShortcutTarget,_Out_ LPTSTR szProductCode,_Out_ LPTSTR szFeatureId,_Out_ LPTSTR szComponentCode)
UINT None msi.MsiGetShortcutTargetW(_In_ LPCTSTR szShortcutTarget,_Out_ LPTSTR szProductCode,_Out_ LPTSTR szFeatureId,_Out_ LPTSTR szComponentCode)
UINT None msi.MsiGetShortcutTargetA(_In_ LPCTSTR szShortcutTarget,_Out_ LPTSTR szProductCode,_Out_ LPTSTR szFeatureId,_Out_ LPTSTR szComponentCode)
UINT None msi.MsiGetFeatureValidStates(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szFeature,_Out_ DWORD *pInstallState)
UINT None msi.MsiGetFeatureValidStatesW(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szFeature,_Out_ DWORD *pInstallState)
UINT None msi.MsiGetFeatureValidStatesA(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szFeature,_Out_ DWORD *pInstallState)
BOOL None kernel32.IsValidCodePage(_In_ UINT CodePage)
HRESOURCE WINAPI resutils.ResUtilGetResourceDependencyByName(_In_ HCLUSTER hCluster,_In_ HANDLE hSelf,_In_ LPCWSTR lpszResourceType,_In_ BOOL bRecurse,_In_ DWORD dwDesiredAccess)
RPC_STATUS RPC_ENTRY rpcrt4.RpcNetworkInqProtseqs(RPC_PROTSEQ_VECTOR **ProtSeqVector None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcNetworkInqProtseqsW(RPC_PROTSEQ_VECTOR **ProtSeqVector None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcNetworkInqProtseqsA(RPC_PROTSEQ_VECTOR **ProtSeqVector None)
LRESULT None None.MonthCal_SetCALID(HWND hmc None,UINT calid None)
HRESULT None None.selectSingleNode(BSTR queryString None,IXMLDOMNode **resultNode None)
LRESULT CALLBACK None.WindowProc(HWND hwnd None,WM_IME_SETCONTEXT None None,WPARAM wParam None,LPARAM lParam None)
HRESULT WINAPI webservices.WsRemoveHeader(_In_ WS_MESSAGE *message,_In_ WS_HEADER_TYPE headerType,_In_opt_ WS_ERROR* *error)
HRESULT None None.GetCustomReferences([out None None,retval] IOpcSignatureReferenceSet **customReferenceSet)
HRESULT None None.get_reason(BSTR *reasonString None)
NET_API_STATUS None netapi32.NetLocalGroupEnum(_In_ LPCWSTR servername,_In_ DWORD level,_Out_ LPBYTE *bufptr,_In_ DWORD prefmaxlen,_Out_ LPDWORD entriesread,_Out_ LPDWORD totalentries,_Inout_ PDWORD_PTR resumehandle)
HCURSOR WINAPI None.CopyCursor(_In_ HCURSOR pcur)
public None None.TransactionScope(Transaction transactionToUse None)
D2D1_GRADIENT_MESH_PATCH None d2d1.GradientMeshPatch(D2D1_POINT_2F point00 None,D2D1_POINT_2F point01 None,D2D1_POINT_2F point02 None,D2D1_POINT_2F point03 None,D2D1_POINT_2F point10 None,D2D1_POINT_2F point11 None,D2D1_POINT_2F point12 None,D2D1_POINT_2F point13 None,D2D1_POINT_2F point20 None,D2D1_POINT_2F point21 None,D2D1_POINT_2F point22 None,D2D1_POINT_2F point23 None,D2D1_POINT_2F point30 None,D2D1_POINT_2F point31 None,D2D1_POINT_2F point32 None,D2D1_POINT_2F point33 None,D2D1_COLOR_F color00 None,D2D1_COLOR_F color03 None,D2D1_COLOR_F color30 None,D2D1_COLOR_F color33 None,D2D1_PATCH_EDGE_MODE topEdgeMode None,D2D1_PATCH_EDGE_MODE leftEdgeMode None,D2D1_PATCH_EDGE_MODE bottomEdgeMode None,D2D1_PATCH_EDGE_MODE rightEdgeMode None)
HRESULT None None.GetAnyOperationsAborted([out] BOOL *pfAnyOperationsAborted)
uint32 None sppwmi.DisableKeyManagementServiceDnsPublishing([in] boolean DisablePublishing)
NTSTATUS None None.WdfUsbTargetDeviceCreateWithParameters(_In_ WDFDEVICE Device,_In_ PWDF_USB_DEVICE_CREATE_CONFIG Config,_In_opt_ PWDF_OBJECT_ATTRIBUTES Attributes,_Out_ WDFUSBDEVICE *UsbDevice)
Boolean None advapi32.EventProviderEnabled(_In_ REGHANDLE RegHandle,_In_ UCHAR Level,_In_ ULONGLONG Keyword)
BOOL None uxtheme.IsThemeDialogTextureEnabled(_In_ HWND hwnd)
NTSTATUS WINAPI ntdll.RtlConvertSidToUnicodeString(_Out_ PUNICODE_STRING UnicodeString,_In_ PSID Sid,_In_ BOOLEAN AllocateDestinationString)
DWORD None None.MAKESORTLCID(WORD wLanguageID None,WORD wSortID None,WORD wSortVersion None)
void None None.LoadViewState(Object state None)
HRESULT None None.deleteData(long offset None,long count None)
typedef union None.switch(DWORD tyspec None)
BOOL WINAPI dbghelp.SymGetSourceVarFromToken(_In_ HANDLE hProcess,_In_ PVOID Token,_In_opt_ PCTSTR Params,_In_ PCTSTR VarName,_Out_ PTSTR Value,_In_ DWORD Size)
BOOL WINAPI dbghelp.SymGetSourceVarFromTokenW(_In_ HANDLE hProcess,_In_ PVOID Token,_In_opt_ PCTSTR Params,_In_ PCTSTR VarName,_Out_ PTSTR Value,_In_ DWORD Size)
BOOL WINAPI dbghelp.SymGetSourceVarFromToken(_In_ HANDLE hProcess,_In_ PVOID Token,_In_opt_ PCTSTR Params,_In_ PCTSTR VarName,_Out_ PTSTR Value,_In_ DWORD Size)
HRESULT None msdrm.DRMClearAllRights(_In_ DRMPUBHANDLE hIssuanceLicense)
BOOL WINAPI wtsapi32.WTSConnectSession(_In_ ULONG LogonId,_In_ ULONG TargetLogonId,_In_ PTSTR pPassword,_In_ BOOL bWait)
BOOL WINAPI wtsapi32.WTSConnectSessionW(_In_ ULONG LogonId,_In_ ULONG TargetLogonId,_In_ PTSTR pPassword,_In_ BOOL bWait)
BOOL WINAPI wtsapi32.WTSConnectSessionA(_In_ ULONG LogonId,_In_ ULONG TargetLogonId,_In_ PTSTR pPassword,_In_ BOOL bWait)
inline XMVECTOR None.XMVector4NormalizeRobust(FXMVECTOR V None)
HRESULT None None.GetDomainMode(IADs *pDomain None,BOOL *bIsMixed None)
HRESULT None None.GetSignaturePartName([out None None,retval] IOpcPartUri **signaturePartName)
HRESULT None oleaut32.VarI4FromUI4(_In_ ULONG ulIn,_Out_ LONG *plOut)
HRESULT None None.GetWriterComponentsCount([out] UINT *pcComponents)
HRESULT STDMETHODCALLTYPE None.WMCreateSecureChannel_DES(IWMSecureChannel **ppChannel None)
protected void None.OnMouseEnter(MouseEventArgs e None)
HRESULT None actxprxy.GetRecorderState([out] ULONG *pulDevStateFlags)
HRESULT None None.GetTypeAttr([out] TYPEATTR **ppTypeAttr)
NET_API_STATUS None netapi32.NetScheduleJobAdd(_In_opt_ LPCWSTR Servername,_In_ LPBYTE Buffer,_Out_ LPDWORD JobId)
VOID None None.NdisQueryBufferOffset(_In_ PNDIS_BUFFER Buffer,_Out_ PUINT Offset,_Out_ PUINT Length)
DWORD WINAPI wlanapi.WlanHostedNetworkSetProperty(_In_ HANDLE hClientHandle,_In_ WLAN_HOSTED_NETWORK_OPCODE OpCode,_In_ DWORD dwDataSize,_In_ PVOID pvData,_Out_opt_ PWLAN_HOSTED_NETWORK_REASON pFailReason,_Reserved_ PVOID pvReserved)
HRESULT None url.TranslateURL(PCTSTR pcszURL None,DWORD dwInFlags None,_Out_ PTSTR *ppszTranslatedURL)
HRESULT None url.TranslateURLW(PCTSTR pcszURL None,DWORD dwInFlags None,_Out_ PTSTR *ppszTranslatedURL)
HRESULT None url.TranslateURLA(PCTSTR pcszURL None,DWORD dwInFlags None,_Out_ PTSTR *ppszTranslatedURL)
LRESULT APIENTRY None.MainWndProc(HWND hwndMain None,UINT uMsg None,WPARAM wParam None,LPARAM lParam None)
BOOL WINAPI advapi32.CreateProcessWithTokenW(_In_ HANDLE hToken,_In_ DWORD dwLogonFlags,_In_opt_ LPCWSTR lpApplicationName,_Inout_opt_ LPWSTR lpCommandLine,_In_ DWORD dwCreationFlags,_In_opt_ LPVOID lpEnvironment,_In_opt_ LPCWSTR lpCurrentDirectory,_In_ LPSTARTUPINFOW lpStartupInfo,_Out_ LPPROCESS_INFORMATION lpProcessInfo)
HCLUSTER WINAPI clusapi.OpenCluster(_In_opt_ LPCWSTR lpszClusterName)
public Object None.ConvertFrom(Object value None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcBindingSetObject(RPC_BINDING_HANDLE Binding None,UUID *ObjectUuid None)
public Object None.TryFindResource(Object resourceKey None)
HRESULT None propsys.PSPropertyBag_Delete(_In_ IPropertyBag *propBag,_In_ LPCWSTR propName)
BOOL WINAPI user32.EnumThreadWindows(_In_ DWORD dwThreadId,_In_ WNDENUMPROC lpfn,_In_ LPARAM lParam)
HRESULT None shlwapi.SHCreateStreamOnFileEx(_In_ LPCWSTR pszFile,_In_ DWORD grfMode,_In_ DWORD dwAttributes,_In_ BOOL fCreate,_Reserved_ IStream *pstmTemplate,_Out_ IStream **ppstm)
HRESULT WINAPI None.MFCreateSensorStream(DWORD StreamId None,_In_opt_ IMFAttributes *pAttributes,_In_ IMFCollection *pMediaTypeCollection,_Out_ IMFSensorStream **ppStream)
LANGID None kernel32.SetThreadUILanguage(_In_ LANGID LangId)
HRESULT None None.GetCrawlScopeManager([out None None,retval] ISearchCrawlScopeManager **ppCrawlScopeManager)
HRESULT None rtworkq.RtwqRegisterPlatformEvents(_In_ IRtwqPlatformEvents *platformEvents)
HRESULT None propsys.PropVariantGetFileTimeElem(_In_ REFPROPVARIANT propvar,_In_ ULONG iElem,_Out_ FILETIME *pftVal)
HRESULT None None.GetOpacityMaskBrushLocal([out None None,retval] IXpsOMBrush **opacityMaskBrush)
DWORD WINAPI kernel32.GetProcessHeaps(_In_ DWORD NumberOfHeaps,_Out_ PHANDLE ProcessHeaps)
HRESULT None None.getResponseHeader(BSTR bstrHeader None,BSTR* pbstrValue None)
HIMAGELIST None None.Header_SetImageList(HWND hwndHD None,HIMAGELIST himl None)
HRESULT WINAPI cldapi.CfGetPlaceholderStateFromFindData(_In_ LPWIN32_FIND_DATA FindData)
Function None shell32.Find(dqc None None,name None None)
HRESULT None None.GetOpacity([out None None,retval] FLOAT *opacity)
HRESULT None None.SIZETMult(_In_ SIZE_T cbMultiplicand,_In_ SIZE_T cbMultiplier,_Out_ SIZE_T *pcbResult)
PDH_STATUS None pdh.PdhGetRawCounterArray(_In_ PDH_HCOUNTER hCounter,_Inout_ LPDWORD lpdwBufferSize,_Out_ LPDWORD lpdwItemCount,_Out_ PPDH_RAW_COUNTER_ITEM ItemBuffer)
PDH_STATUS None pdh.PdhGetRawCounterArrayW(_In_ PDH_HCOUNTER hCounter,_Inout_ LPDWORD lpdwBufferSize,_Out_ LPDWORD lpdwItemCount,_Out_ PPDH_RAW_COUNTER_ITEM ItemBuffer)
PDH_STATUS None pdh.PdhGetRawCounterArrayA(_In_ PDH_HCOUNTER hCounter,_Inout_ LPDWORD lpdwBufferSize,_Out_ LPDWORD lpdwItemCount,_Out_ PPDH_RAW_COUNTER_ITEM ItemBuffer)
MI_INLINE MI_Result None.MI_DestinationOptions_GetDestinationPort(_In_ MI_DestinationOptions *options,_Out_ MI_Uint32 *port)
VOID WINAPI None.FlsCallback(_In_ PVOID lpFlsData)
DWORD None None.SetNPPAddressFilterInBlob(HBLOB hBlob None,LPADDRESSTABLE pAddressTable None)
BOOL None spoolss.WritePrinter(_In_ HANDLE hPrinter,_In_ LPVOID pBuf,_In_ DWORD cbBuf,_Out_ LPDWORD pcWritten)
LONG TSPIAPI None.TUISPI_providerRemove(TUISPIDLLCALLBACK lpfnUIDLLCallback None,HWND hwndOwner None,DWORD dwPermanentProviderID None)
HRESULT None None.CheckImgFilter(IN IWiaItem2 *pWiaItem2,OUT BOOL *pbHasImgFilter)
HRESULT None mfplat.MFGetPluginControl(_Out_ IMFPluginControl **ppPluginControl)
DWORD WINAPI clusapi.CreateClusterResourceType(_In_ HCLUSTER hCluster,_In_ LPCWSTR lpszResourceTypeName,_In_ LPCWSTR lpszDisplayName,_In_ LPCWSTR lpszResourceTypeDll,_In_ DWORD dwLooksAlivePollInterval,_In_ DWORD dwIsAlivePollInterval)
VOID WINAPI crypt32.CertFreeCertificateChain(_In_ PCCERT_CHAIN_CONTEXT pChainContext)
ULONG WINAPI iphlpapi.DeletePersistentTcpPortReservation(_In_ USHORT StartPort,_In_ USHORT NumberOfPorts)
HRESULT None wmvcore.WMCreateWriter(_In_ IUnknown *pUnkReserved,_Out_ IWMWriter **ppWriter)
DWORD WINAPI resutils.ResUtilEnumResources(_In_ HRESOURCE hSelf,_In_ LPCWSTR lpszResTypeName,_In_ LPRESOURCE_CALLBACK pResCallBack,_In_ PVOID pParameter)
WINOLEAPI None ole32.StgGetIFillLockBytesOnILockBytes(_In_ ILockBytes *pilb,_Out_ IFillLockBytes **ppflb)
HRESULT None srmsvc.get_LastModificationTime([out] VARIANT *creationTime)
NET_API_STATUS None netapi32.NetMessageNameEnum(_In_ LPCWSTR servername,_In_ DWORD level,_Out_ LPBYTE *bufptr,_In_ DWORD prefmaxlen,_Out_ LPDWORD entriesread,_Out_ LPDWORD totalentries,_Inout_ LPDWORD resume_handle)
protected void None.OnPreviewStylusDown(StylusDownEventArgs e None)
public Object None.CreateInstanceFromAndUnwrap(String assemblyName None,String typeName None)
HMENU WINAPI user32.GetSystemMenu(_In_ HWND hWnd,_In_ BOOL bRevert)
HRESULT None oleaut32.VarI2FromR8(_In_ DOUBLE dblIn,_Out_ SHORT *psOut)
HRESULT None None.GetType([out None None,retval] XPS_OBJECT_TYPE *type)
protected void None.OnStylusInRange(StylusEventArgs e None)
DWORD WINAPI advapi32.SetUserFileEncryptionKey(_In_ PENCRYPTION_CERTIFICATE pEncryptionCertificate)
RPC_STATUS RPC_ENTRY rpcrt4.RpcBindingReset(RPC_BINDING_HANDLE Binding None)
SCESTATUS WINAPI None.SceSvcAttachmentUpdate(IN PSCESVC_CALLBACK_INFO pSceCbInfo,IN SCESVC_CONFIGURATION_INFO *ServiceInfo)
HRESULT None oleaut32.VarBoolFromI4(_In_ LONG lIn,_Out_ VARIANT_BOOL *pboolOut)
HRESULT None None.get_ownerDocument(IXMLDOMDocument **DOMDocument None)
HRESULT None wsdapi.IsMessageSigned([out] BOOL *pbSigned)
HRESULT None None.setNamedItem(IXMLDOMNode *newItem None,IXMLDOMNode **nameItem None)
HMENU WINAPI user32.GetMenu(_In_ HWND hWnd)
DWORD None iphlpapi.GetIfEntry(_Inout_ PMIB_IFROW pIfRow)
BOOL WINAPI wevtapi.EvtArchiveExportedLog(_In_ EVT_HANDLE Session,_In_ LPCWSTR LogFilePath,_In_ LCID Locale,_In_ DWORD Flags)
HRESULT None None.GetAnyNetworkAccess(BOOL * pbAnyNetworkAccess)
HRESULT None None.GetNetworkTransactionAccess(BOOL * pbNetworkTransactionAccess)
BOOL WINAPI kernel32.VirtualUnlock(_In_ LPVOID lpAddress,_In_ SIZE_T dwSize)
BOOL None kernel32.EnumTimeFormatsEx(_In_ TIMEFMT_ENUMPROCEX lpTimeFmtEnumProcEx,_In_opt_ LPCWSTR lpLocaleName,_In_ DWORD dwFlags,_In_ LPARAM lParam)
HRESULT None None.GetSignature([out None None,retval] IXpsSignature **signature)
HRESULT None None.put_MulticastTtl(long lTtl None)
SerializableAttribute None None.TypeConverterAttribute(System.Windows.Forms.TreeNodeConverter None None)
uint32 None wvrcimprov.CompareReplicationVector([in] string ReplicationVector,[in] string ReplicationGroupName,[in] boolean IsNewPartner)
HRESULT None None.put_DefaultPath(BSTR newVal None)
HRESULT None None.ULongAdd(_In_ ULONG ulAugend,_In_ ULONG ulAddend,_Out_ ULONG *pulResult)
HRESULT None None.get_Display([out] IVMDisplay **display)
HRESULT None None.GetTitle([out None None,retval] LPWSTR *title)
HRESULT WINAPI None.WsDumpMemory(_In_opt_ WS_ERROR* error)
MI_INLINE MI_Result None.MI_OperationOptions_SetWriteErrorMode(_Inout_ MI_OperationOptions *options,_In_ MI_CallbackMode mode)
HRESULT None ole32.OleDraw(_In_ LPUNKNOWN pUnknown,_In_ DWORD dwAspect,_In_ HDC hdcDraw,_In_ LPCRECT lprcBounds)
HRESULT None uxtheme.EnableThemeDialogTexture(_In_ HWND hwnd,_In_ DWORD dwFlags)
HRESULT None windowscodecs.IWICImagingFactory_CreateBitmapFromHICON_Proxy(_In_ IWICImagingFactory *pFactory,_In_ HICON hIcon,_Out_ IWICBitmap **ppIBitmap)
ULONG None advapi32.EnableTraceEx(_In_ LPCGUID ProviderId,_In_opt_ LPCGUID SourceId,_In_ TRACEHANDLE TraceHandle,_In_ ULONG IsEnabled,_In_ UCHAR Level,_In_ ULONGLONG MatchAnyKeyword,_In_ ULONGLONG MatchAllKeyword,_In_ ULONG EnableProperty,_In_opt_ PEVENT_FILTER_DESCRIPTOR EnableFilterDesc)
BOOL None gdi32.DeleteDC(_In_ HDC hdc)
HRESULT None None._PositionViewWindow(HWND hwnd None,LPRECT prc None)
HRESULT None msdrm.DRMSetRevocationPoint(_In_ DRMPUBHANDLE hIssuanceLicense,_In_ BOOL fDelete,_In_ PWSTR wszId,_In_ PWSTR wszIdType,_In_ PWSTR wszURL,_In_ SYSTEMTIME *pstFrequency,_In_ PWSTR wszName,_In_ PWSTR wszPublicKey)
ULONG __stdcall tdh.TdhGetEventInformation(_In_ PEVENT_RECORD pEvent,_In_ ULONG TdhContextCount,_In_ PTDH_CONTEXT pTdhContext,_Out_ PTRACE_EVENT_INFO pBuffer,_Inout_ ULONG *pBufferSize)
uint32 None cimwin32.SetDefaultTTL([in] uint8 DefaultTTL)
BOOL None wtsapi32.WTSVirtualChannelClose(_In_ HANDLE hChannelHandle)
DWORD WINAPI kernel32.QueryIoRateControlInformationJobObject(_In_opt_ HANDLE hJob,_In_opt_ PCWSTR VolumeName,_Out_ JOBOBJECT_IO_RATE_CONTROL_INFORMATION **InfoBlocks,_Out_ ULONG *InfoBlockCount)
HRESULT None None.EnumerateStaticTerminals([out] IEnumTerminal **ppTerminalEnumerator)
BOOL CALLBACK None.EnumLocalesProc(_In_ LPTSTR lpLocaleString)
HRESULT None msdrm.DRMDuplicateHandle(_In_ DRMHANDLE hToCopy,_Out_ DRMHANDLE *phCopy)
BOOL WINAPI advapi32.GetCurrentHwProfile(_Out_ LPHW_PROFILE_INFO lpHwProfileInfo)
BOOL WINAPI advapi32.GetCurrentHwProfileW(_Out_ LPHW_PROFILE_INFO lpHwProfileInfo)
BOOL WINAPI advapi32.GetCurrentHwProfileA(_Out_ LPHW_PROFILE_INFO lpHwProfileInfo)
BOOL WINAPI kernel32.QueryProtectedPolicy(_In_ LPCGUID PolicyGuid,_Out_ PULONG_PTR PolicyValue)
BOOL WINAPI None.WIMRemountImage(PCWSTR pszMountPath None,DWORD dwFlags None)
UINT None None.ListView_GetSelectedCount(HWND hwnd None)
NET_API_STATUS None netapi32.NetGroupSetInfo(_In_ LPCWSTR servername,_In_ LPCWSTR groupname,_In_ DWORD level,_In_ LPBYTE buf,_Out_ LPDWORD parm_err)
HRESULT None ole32.StgCreateDocfileOnILockBytes(_In_ ILockBytes *plkbyt,_In_ DWORD grfMode,_In_ DWORD reserved,_Out_ IStorage **ppstgOpen)
VOID None None.PropSheet_CancelToClose(HWND hPropSheetDlg None)
public void None.OnStartPrint(PrintDocument document None,PrintEventArgs e None)
EVT_HANDLE WINAPI wevtapi.EvtOpenPublisherEnum(_In_ EVT_HANDLE Session,_In_ DWORD Flags)
BOOL WINAPI advapi32.CryptEncrypt(_In_ HCRYPTKEY hKey,_In_ HCRYPTHASH hHash,_In_ BOOL Final,_In_ DWORD dwFlags,_Inout_ BYTE *pbData,_Inout_ DWORD *pdwDataLen,_In_ DWORD dwBufLen)
BOOL None advapi32.SaferiIsExecutableFileType(_In_ LPCWSTR szFullPath,_In_ BOOLEAN bFromShellExecute)
RIO_BUFFERID None mswsock.RIORegisterBuffer(_In_ PCHAR DataBuffer,_In_ DWORD DataLength)
HRESULT None None.GetDifferencedFilesCount([out] UINT *pcDifferencedFiles)
BOOL ACMDRIVERENUMCB None.acmDriverEnumCallback(HACMDRIVERID hadid None,DWORD_PTR dwInstance None,DWORD fdwSupport None)
BOOL WINAPI kernel32.FreeResource(_In_ HGLOBAL hglbResource)
HWND None None.GetContractDelegateWindow(_In_ HWND hwndSource)
ULONG None advapi32.PerfStartProvider(_In_ LPGUID ProviderGuid,_In_opt_ PERFLIBREQUEST ControlCallback,_Out_ HANDLE *phProvider)
HANDLE WINAPI kernel32.CreateJobObject(_In_opt_ LPSECURITY_ATTRIBUTES lpJobAttributes,_In_opt_ LPCTSTR lpName)
HANDLE WINAPI kernel32.CreateJobObjectW(_In_opt_ LPSECURITY_ATTRIBUTES lpJobAttributes,_In_opt_ LPCTSTR lpName)
HANDLE WINAPI kernel32.CreateJobObjectA(_In_opt_ LPSECURITY_ATTRIBUTES lpJobAttributes,_In_opt_ LPCTSTR lpName)
HRESULT None None.IntMult(_In_ INT iMultiplicand,_In_ INT iMultiplier,_Out_ INT *piResult)
HRESULT None None.QueryStatus([out] HRESULT *pHrResult,[out] INT *pReserved)
uint32 None wvrcimprov.ProvisionPartitionsRemove([in] string PartitionIds[])
BOOL None oledlg.OleUIAddVerbMenu(_In_opt_ LPOLEOBJECT lpOleObj,_In_opt_ LPCTSTR lpszShortType,_In_ HMENU hMenu,_In_ UINT uPos,_In_ UINT uIDVerbMin,_In_ UINT uIDVerbMax,_In_ BOOL bAddConvert,_In_ UINT idConvert,_Out_ HMENU *lphMenu)
BOOL None oledlg.OleUIAddVerbMenuW(_In_opt_ LPOLEOBJECT lpOleObj,_In_opt_ LPCTSTR lpszShortType,_In_ HMENU hMenu,_In_ UINT uPos,_In_ UINT uIDVerbMin,_In_ UINT uIDVerbMax,_In_ BOOL bAddConvert,_In_ UINT idConvert,_Out_ HMENU *lphMenu)
BOOL None oledlg.OleUIAddVerbMenuA(_In_opt_ LPOLEOBJECT lpOleObj,_In_opt_ LPCTSTR lpszShortType,_In_ HMENU hMenu,_In_ UINT uPos,_In_ UINT uIDVerbMin,_In_ UINT uIDVerbMax,_In_ BOOL bAddConvert,_In_ UINT idConvert,_Out_ HMENU *lphMenu)
ULONG None advapi32.FlushTrace(_In_ TRACEHANDLE SessionHandle,_In_ LPCTSTR SessionName,_Inout_ PEVENT_TRACE_PROPERTIES Properties)
ULONG None advapi32.FlushTraceW(_In_ TRACEHANDLE SessionHandle,_In_ LPCTSTR SessionName,_Inout_ PEVENT_TRACE_PROPERTIES Properties)
ULONG None advapi32.FlushTraceA(_In_ TRACEHANDLE SessionHandle,_In_ LPCTSTR SessionName,_Inout_ PEVENT_TRACE_PROPERTIES Properties)
DWORD WINAPI None.GetFrameNumber(HFRAME hFrame None)
VOID None None.XMVectorGetIntYPtr([out] uint32_t *y,XMVECTOR V None)
BOOL WINAPI advapi32.SetServiceObjectSecurity(_In_ SC_HANDLE hService,_In_ SECURITY_INFORMATION dwSecurityInformation,_In_ PSECURITY_DESCRIPTOR lpSecurityDescriptor)
BOOL WINAPI dbghelp.StackWalk64(_In_ DWORD MachineType,_In_ HANDLE hProcess,_In_ HANDLE hThread,_Inout_ LPSTACKFRAME64 StackFrame,_Inout_ PVOID ContextRecord,_In_opt_ PREAD_PROCESS_MEMORY_ROUTINE64 ReadMemoryRoutine,_In_opt_ PFUNCTION_TABLE_ACCESS_ROUTINE64 FunctionTableAccessRoutine,_In_opt_ PGET_MODULE_BASE_ROUTINE64 GetModuleBaseRoutine,_In_opt_ PTRANSLATE_ADDRESS_ROUTINE64 TranslateAddress)
String None None.CreateValidIdentifier(String value None)
HRESULT None None.OnGetStreamInfo(HRESULT hr None,IWMSStreamHeaderList* pHeaderList None,IWMSContentDescriptionList* pContentDescription None,QWORD qwContext None)
public StreamInfo None.CreateStream(String name None)
INT WSPAPI ws2_32.WSCEnumNameSpaceProviders32(_Inout_ LPDWORD lpdwBufferLength,_Out_ LPWSANAMESPACE_INFOW lpnspBuffer)
LONG TSPIAPI None.TSPI_phoneSetStatusMessages(HDRVPHONE hdPhone None,DWORD dwPhoneStates None,DWORD dwButtonModes None,DWORD dwButtonStates None)
public PackageRelationship None.GetRelationship(String id None)
BOOL WINAPI kernel32.QueryProcessCycleTime(_In_ HANDLE ProcessHandle,_Out_ PULONG64 CycleTime)
protected void None.OnDataBinding(EventArgs e None)
HRESULT None azroles.get_PolicyReaders([out] VARIANT *pvarReaders)
HRESULT None wmvcore.WMValidateData(_In_ BYTE *pbData,_Inout_ DWORD *pdwDataSize)
NET_API_STATUS None netapi32.NetUseDel(_In_ LMSTR UncServerName,_In_ LMSTR UseName,_In_ DWORD ForceCond)
public boolean None.ShouldSerializeInlines(XamlDesignerSerializationManager manager None)
NTSTATUS None None.ZwQueryEaFile(__in HANDLE FileHandle,__out PIO_STATUS_BLOCK IoStatusBlock,__out PVOID Buffer,__in ULONG Length,__in BOOLEAN ReturnSingleEntry,__in_opt PVOID EaList,__in ULONG EaListLength,__in_opt PULONG EaIndex,__in BOOLEAN RestartScan)
HRESULT WINAPI wsdapi.WSDXMLGetNameFromBuiltinNamespace(LPCWSTR pszNamespace None,LPCWSTR pszName None,WSDXML_NAME **ppName None)
BOOL WINAPI advapi32.SaferIdentifyLevel(_In_ DWORD dwNumProperties,_In_opt_ PSAFER_CODE_PROPERTIES pCodeProperties,_Out_ SAFER_LEVEL_HANDLE *pLevelHandle,_Reserved_ LPVOID lpReserved)
HRESULT None pla.get__NewEnum(IUnknown **ppEnum None)
DWORD WINAPI wlanapi.WlanGetFilterList(_In_ HANDLE hClientHandle,_In_ WLAN_FILTER_LIST_TYPE wlanFilterListType,_Reserved_ PVOID pReserved,_Out_ PDOT11_NETWORK_LIST *ppNetworkList)
HRESULT None None.get_expr(BSTR* expression None)
HRESULT None None.get_item(LONG index None,IXMLDOMParseError2 **objErr None)
HRESULT None None.length(long * length)
HWND None None.TreeView_SetToolTips(HWND hwndTV None,HWND hwndTooltip None)
public Object None.Invoke(DispatcherPriority priority None,TimeSpan timeout None,Delegate method None,Object arg None,Object[] args None)
DWORD None None.MonthCal_GetCurrentView(HWND hmc None)
uint32 None smiscsitargetprov.SetPowerState([in] uint16 PowerState,[in] datetime Time)
HRESULT None None.getDeclaration(IXMLDOMNode* node None,ISchemaItem** item None)
HRESULT None None.get_LoggingURL(BSTR* pbstrLoggingURL None)
HRESULT WINAPI iscsidsc.RemovePersistentIscsiDevice(_In_ PTCHAR VolumePath)
HRESULT WINAPI iscsidsc.RemovePersistentIscsiDeviceW(_In_ PTCHAR VolumePath)
HRESULT WINAPI iscsidsc.RemovePersistentIscsiDeviceA(_In_ PTCHAR VolumePath)
int None None.ferror(FILE *stream None)
BOOL None ws2_32.WSAResetEvent(_In_ WSAEVENT hEvent)
HRESULT None None.normalize(void None None)
uint32 None wvrcimprov.SetSecondaryReplicationGroup([in] string ReplicationGroupName,[in] string PrimaryComputerName,[in] string PrimaryReplicationGroupId,[in] string PrimaryReplicationGroupName,[out] uint32 ReturnedErrorType)
RPC_STATUS RPC_ENTRY rpcrt4.RpcAsyncCompleteCall(PRPC_SYNC_STATE pAsync None,PVOID Reply None)
HRESULT None None.Error(VOID None None)
HRESULT None None.GetTargetViewSizePreference([out] APPLICATION_VIEW_SIZE_PREFERENCE *targetSizeOnLaunch)
protected void None.OnMouseLeftButtonDown(MouseButtonEventArgs e None)
HRESULT WINAPI webservices.WsResetChannel(_In_ WS_CHANNEL* channel,_In_opt_ WS_ERROR* error)
PVOID WINAPI dbghelp.ImageRvaToVa(_In_ PIMAGE_NT_HEADERS NtHeaders,_In_ PVOID Base,_In_ ULONG Rva,_In_opt_ PIMAGE_SECTION_HEADER *LastRvaSection)
HRESULT None None.CreateCanvas([out None None,retval] IXpsOMCanvas **canvas)
BOOL None shell32.WriteCabinetState(_In_ CABINETSTATE *pcs)
HRESULT WINAPI webservices.WsReadCharsUtf8(_In_ WS_XML_READER* reader,BYTE* bytes None,_In_ ULONG maxByteCount,_Out_ ULONG* actualByteCount,_In_opt_ WS_ERROR* error)
private void None.myButtonPrint_OnClick(Object sender None,System.EventArgs e None)
HRESULT None None.get_Name([out None None,retval] VARIANT *pVarName)
protected void None.OnDisplayMemberPathChanged(String oldDisplayMemberPath None,String newDisplayMemberPath None)
LONG WINAPI tapi32.lineGetDevCaps(HLINEAPP hLineApp None,DWORD dwDeviceID None,DWORD dwAPIVersion None,DWORD dwExtVersion None,LPLINEDEVCAPS lpLineDevCaps None)
LONG WINAPI tapi32.lineGetDevCapsW(HLINEAPP hLineApp None,DWORD dwDeviceID None,DWORD dwAPIVersion None,DWORD dwExtVersion None,LPLINEDEVCAPS lpLineDevCaps None)
LONG WINAPI tapi32.lineGetDevCapsA(HLINEAPP hLineApp None,DWORD dwDeviceID None,DWORD dwAPIVersion None,DWORD dwExtVersion None,LPLINEDEVCAPS lpLineDevCaps None)
HRESULT None windowscodecs.IWICBitmapFrameDecode_GetColorContexts_Proxy(_In_ IWICBitmapFrameDecode *THIS_PTR,_In_ UINT cCount,_Inout_ IWICColorContext **ppIColorContexts,_Out_ UINT *pcActualCount)
HRESULT None msdrm.DRMParseUnboundLicense(_In_ PWSTR wszCertificate,_Out_ DRMQUERYHANDLE *phQueryRoot)
HRESULT None srmsvc.get_LastReportPathWithoutExtension([out] BSTR *pPath)
BOOL WINAPI None.WIMGetMountedImages(PWIM_MOUNT_LIST pMountList None,PDWORD pcbMountListLength None)
HRESULT None msdrm.DRMSetApplicationSpecificData(_In_ DRMPUBHANDLE hIssuanceLicense,_In_ BOOL fDelete,_In_ PWSTR wszName,_In_ PWSTR wszValue)
ULONG WINAPI None.ControlCallback(_In_ WMIDPREQUESTCODE RequestCode,_In_ PVOID Context,_In_ ULONG *Reserved,_In_ PVOID Buffer)
WINOLEAPI None ole32.OleConvertIStorageToOLESTREAM(_In_ IStorage *pStg,_Out_ LPOLESTREAM lpolestream)
HRESULT None None.GetDate([out] PWMDMDATETIME pDateTimeUTC)
HRESULT None None.GetAnnotationTypes([out None None,retval] SAFEARRAY **pRetVal)
HRESULT STDAPICALLTYPE None.DllRegisterCluAdminExtension(_In_ HCLUSTER hCluster)
BOOL None None.Button_GetImageList(HWND hwnd None,PBUTTON_IMAGELIST pbuttonImageList None)
LONG TSPIAPI None.TSPI_phoneGetIcon(DWORD dwDeviceID None,LPCWSTR lpszDeviceClass None,LPHICON lphIcon None)
HRESULT None shell32.SHShowManageLibraryUI(_In_ IShellItem *psiLibrary,_In_opt_ HWND hwndOwner,_In_opt_ LPCWSTR pszTitle,_In_opt_ LPCWSTR pszInstruction,_In_ LIBRARYMANAGEDIALOGOPTIONS lmdOptions)
INSTALLSTATE None msi.MsiQueryProductState(_In_ LPCTSTR szProduct)
INSTALLSTATE None msi.MsiQueryProductStateW(_In_ LPCTSTR szProduct)
INSTALLSTATE None msi.MsiQueryProductStateA(_In_ LPCTSTR szProduct)
NTSTATUS WINAPI bcrypt.BCryptRegisterConfigChangeNotify(_Out_ HANDLE *phEvent)
DWORD WINAPI clusapi.ClusterGroupEnum(_In_ HGROUPENUM hGroupEnum,_In_ DWORD dwIndex,_Out_ LPDWORD lpdwType,_Out_ LPWSTR lpszResourceName,_Inout_ LPDWORD lpcchName)
HRESULT None wsdapi.WSDCreateHttpAddress(IWSDHttpAddress **ppAddress None)
NET_API_STATUS None netapi32.NetShareAdd(_In_ LPWSTR servername,_In_ DWORD level,_In_ LPBYTE buf,_Out_ LPDWORD parm_err)
char None None.ToChar(IFormatProvider provider None)
public Stream None.EndGetRequestStream(IAsyncResult asyncResult None)
BOOL WINAPI clfsw32.SetLogArchiveTail(_In_ HANDLE hLog,_In_ PCLFS_LSN plsnArchiveTail,_Inout_opt_ LPVOID pReserved)
INT None None.ListView_SubItemHitTestEx(HWND hwnd None,LPLVHITTESTINFO plvhti None)
byte None None.ToByte(IFormatProvider provider None)
PTSTR None shlwapi.StrStrI(_In_ PTSTR pszFirst,_In_ PCTSTR pszSrch)
PTSTR None shlwapi.StrStrIW(_In_ PTSTR pszFirst,_In_ PCTSTR pszSrch)
PTSTR None shlwapi.StrStrIA(_In_ PTSTR pszFirst,_In_ PCTSTR pszSrch)
MSIHANDLE None msi.MsiGetActiveDatabase(_In_ MSIHANDLE hInstall)
HRESULT None None.GetPolicy([out None None,retval] XPS_SIGN_POLICY *policy)
typedef None shell32.BOOL(* LPFNADDPROPSHEETPAGE None)
HRESULT None None.namespaceURI(long index None,BSTR* length None)
VOID WINAPI user32.SwitchToThisWindow(_In_ HWND hWnd,_In_ BOOL fAltTab)
SerializableAttribute None None.ClassInterfaceAttribute(ClassInterfaceType.None None None)
MI_INLINE MI_Result None.MI_Session_GetApplication(_In_ MI_Session *session,_Out_ MI_Application *application)
BOOL WINAPI user32.GetTitleBarInfo(_In_ HWND hwnd,_Inout_ PTITLEBARINFO pti)
public SystemState None.ManageSystemState(String fileName None)
void None None.Rollback(SinglePhaseEnlistment singlePhaseEnlistment None)
DWORD None npptools.SelectNPPBlobFromTable(_In_ HWND hwnd,_In_ PBLOB_TABLE pBlobTable,_Out_ HBLOB *hBlob)
DWORD None npptools.GetNetworkInfoFromBlob(_In_ HBLOB hBlob,_Inout_ LPNETWORKINFO lpNetworkInfo)
DWORD WINAPI kernel32.OfferVirtualMemory(_In_ PVOID VirtualAddress,_In_ SIZE_T Size,_In_ OFFER_PRIORITY Priority)
HRESULT None uxtheme.EndBufferedPaint(HPAINTBUFFER hBufferedPaint None,BOOL fUpdateTarget None)
HRESULT None rdpencom.get_Properties([out] IRDPSRAPISessionProperties **ppVal)
BOOL None kernel32.GetNLSVersionEx(_In_ NLS_FUNCTION function,_In_opt_ LPCWSTR lpLocaleName,_Inout_ LPNLSVERSIONINFOEX lpVersionInformation)
HRESULT None dwrite.CreateGlyphRunAnalysis(IDWriteFontFace *pFontFace None,IDWriteGlyphRunAnalysis **ppGlyphRunAnalysis None)
WDSCLIAPI None wdsclientapi.WdsCliGetImageHandleFromTransferHandle(HANDLE hTransfer None,_Out_ PHANDLE phImageHandle)
HRESULT None None.GetProvider([out] IVdsProvider **ppProvider)
public String None.Decode(String id None)
BOOL WINAPI clusapi.CloseClusterResource(_In_ HRESOURCE hResource)
HRESULT None None.UnlockAsyncMFT(IMFTransform *pMFT None)
HRESULT None ole32.OleCreateFromFile(_In_ REFCLSID rclsid,_In_ LPCOLESTR lpszFileName,_In_ REFIID riid,_In_ DWORD renderopt,_In_ LPFORMATETC lpFormatEtc,_In_ LPOLECLIENTSITE pClientSite,_In_ LPSTORAGE pStg,_Out_ LPVOID *ppvObj)
HRESULT None oleaut32.VarNeg(_In_ LPVARIANT pvarIn,_Out_ LPVARIANT pvarResult)
NTSTATUS None None.WdfUsbTargetDeviceCreateIsochUrb(_In_ WDFUSBDEVICE UsbDevice,_In_opt_ PWDF_OBJECT_ATTRIBUTES Attributes,_In_ ULONG NumberOfIsochPackets,_Out_ WDFMEMORY *UrbMemory,_Out_opt_ PURB *Urb)
DWORD WINAPI clusapi.ClusterResourceTypeEnum(_In_ HRESTYPEENUM hResTypeEnum,_In_ DWORD dwIndex,_Out_ LPDWORD lpdwType,_Out_ LPWSTR lpszName,_Inout_ LPDWORD lpcchName)
HRESULT None azroles.get_DelegatedPolicyUsersName([out] VARIANT *pvarDelegatedPolicyUsers)
DWORD PXEAPI wdspxe.PxeProviderFreeInfo(_In_ PPXE_PROVIDER pProvider)
HGROUPENUM WINAPI clusapi.ClusterGroupOpenEnum(_In_ HGROUP hGroup,_In_ DWORD dwType)
DWORD PXEAPI wdspxe.PxePacketFree(_In_ HANDLE hProvider,_In_ HANDLE hClientRequest,_In_ PVOID pPacket)
BOOL WINAPI advapi32.EnumServicesStatusEx(_In_ SC_HANDLE hSCManager,_In_ SC_ENUM_TYPE InfoLevel,_In_ DWORD dwServiceType,_In_ DWORD dwServiceState,_Out_opt_ LPBYTE lpServices,_In_ DWORD cbBufSize,_Out_ LPDWORD pcbBytesNeeded,_Out_ LPDWORD lpServicesReturned,_Inout_opt_ LPDWORD lpResumeHandle,_In_opt_ LPCTSTR pszGroupName)
BOOL WINAPI advapi32.EnumServicesStatusExW(_In_ SC_HANDLE hSCManager,_In_ SC_ENUM_TYPE InfoLevel,_In_ DWORD dwServiceType,_In_ DWORD dwServiceState,_Out_opt_ LPBYTE lpServices,_In_ DWORD cbBufSize,_Out_ LPDWORD pcbBytesNeeded,_Out_ LPDWORD lpServicesReturned,_Inout_opt_ LPDWORD lpResumeHandle,_In_opt_ LPCTSTR pszGroupName)
BOOL WINAPI advapi32.EnumServicesStatusExA(_In_ SC_HANDLE hSCManager,_In_ SC_ENUM_TYPE InfoLevel,_In_ DWORD dwServiceType,_In_ DWORD dwServiceState,_Out_opt_ LPBYTE lpServices,_In_ DWORD cbBufSize,_Out_ LPDWORD pcbBytesNeeded,_Out_ LPDWORD lpServicesReturned,_Inout_opt_ LPDWORD lpResumeHandle,_In_opt_ LPCTSTR pszGroupName)
BOOL None None.WPUCloseEvent(_In_ WSAEVENT hEvent,_Out_ LPINT lpErrno)
HRESULT None wmpmediasharing.put_userInternetMediaSharingState(VARIANT_BOOL sharingEnabled None)
HRESULT None None.GetRestoreMetadata([out] BSTR *pbstrRestoreMetadata)
INT CALLBACK None.InstalluiHandlerRecord(LPVOID pvContext None,UINT iMessageType None,MSIHANDLE hRecord None)
DWORD WINAPI clusapi.OfflineClusterGroup(_In_ HGROUP hGroup)
HRESULT None None.GetPartialFileCount([out] UINT *pcPartialFiles)
UINT None msi.MsiSummaryInfoPersist(_In_ MSIHANDLE hSummaryInfo)
Object None None.GetFormat(Type formatType None)
UINT None msi.MsiGetFeatureValidStates(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szFeature,_Out_ DWORD *pInstallState)
UINT None msi.MsiGetFeatureValidStatesW(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szFeature,_Out_ DWORD *pInstallState)
UINT None msi.MsiGetFeatureValidStatesA(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szFeature,_Out_ DWORD *pInstallState)
protected Exception None.GetConvertFromException(Object value None)
HRESULT None windowscodecs.QueryRawCapabilitiesInfo([out] WICRawCapabilitiesInfo *pInfo)
BOOL None userenv.FreeGPOList(_In_ PGROUP_POLICY_OBJECT pGPOList)
BOOL None userenv.FreeGPOListW(_In_ PGROUP_POLICY_OBJECT pGPOList)
BOOL None userenv.FreeGPOListA(_In_ PGROUP_POLICY_OBJECT pGPOList)
BOOL None wtsapi32.WTSEnumerateSessions(_In_ HANDLE hServer,_In_ DWORD Reserved,_In_ DWORD Version,_Out_ PWTS_SESSION_INFO *ppSessionInfo,_Out_ DWORD *pCount)
BOOL None wtsapi32.WTSEnumerateSessionsW(_In_ HANDLE hServer,_In_ DWORD Reserved,_In_ DWORD Version,_Out_ PWTS_SESSION_INFO *ppSessionInfo,_Out_ DWORD *pCount)
BOOL None wtsapi32.WTSEnumerateSessionsA(_In_ HANDLE hServer,_In_ DWORD Reserved,_In_ DWORD Version,_Out_ PWTS_SESSION_INFO *ppSessionInfo,_Out_ DWORD *pCount)
VOID WINAPI wlanapi.WlanFreeMemory(_In_ PVOID pMemory)
HRESULT STDMETHODCALLTYPE ole32.CStdStubBuffer2_Connect(_In_ IRpcStubBuffer *pthis,_In_ IUnknown *pUnkServer)
LWSTDAPI None api-ms-win-shcore-thread-l1-1-0.GetProcessReference(_Out_ IUnknown **punk)
HRESULT WINAPI webservices.WsReadEndElement(_In_ WS_XML_READER* reader,_In_opt_ WS_ERROR* error)
HRESULT None None.UtilLoadStringWithAlloc(_In_ UINT uID,_Out_ LPWSTR *ppwzBuffer,_In_ UINT cchBufferMax)
NETIOAPI_API None iphlpapi.NotifyUnicastIpAddressChange(_In_ ADDRESS_FAMILY Family,_In_ PUNICAST_IPADDRESS_CHANGE_CALLBACK Callback,_In_ PVOID CallerContext,_In_ BOOLEAN InitialNotification,_Inout_ HANDLE *NotificationHandle)
DWORD None iphlpapi.IpReleaseAddress(_In_ PIP_ADAPTER_INDEX_MAP AdapterInfo)
BOOL None sfc.SfcGetNextProtectedFile(_In_ HANDLE RpcHandle,_Inout_ PPROTECTED_FILE_DATA ProtFileData)
HRESULT WINAPI webservices.WsResetServiceProxy(_In_ WS_SERVICE_PROXY* serviceProxy,_In_opt_ WS_ERROR* error)
HRESULT None tapi3.get_ID([out] BSTR *ppID)
HRESULT None None.get_nodeName(BSTR *name None)
BOOL WINAPI nmapi.CompareFrameSourceAddress(_In_ HFRAME hFrame,_In_ LPADDRESS lpAddress)
BOOL WINAPI advapi32.ConvertStringSecurityDescriptorToSecurityDescriptor(_In_ LPCTSTR StringSecurityDescriptor,_In_ DWORD StringSDRevision,_Out_ PSECURITY_DESCRIPTOR *SecurityDescriptor,_Out_ PULONG SecurityDescriptorSize)
BOOL WINAPI advapi32.ConvertStringSecurityDescriptorToSecurityDescriptorW(_In_ LPCTSTR StringSecurityDescriptor,_In_ DWORD StringSDRevision,_Out_ PSECURITY_DESCRIPTOR *SecurityDescriptor,_Out_ PULONG SecurityDescriptorSize)
BOOL WINAPI advapi32.ConvertStringSecurityDescriptorToSecurityDescriptorA(_In_ LPCTSTR StringSecurityDescriptor,_In_ DWORD StringSDRevision,_Out_ PSECURITY_DESCRIPTOR *SecurityDescriptor,_Out_ PULONG SecurityDescriptorSize)
VOID None None.XMVectorGetIntZPtr([out] uint32_t *z,XMVECTOR V None)
BOOL WINAPI user32.SetKeyboardState(_In_ LPBYTE lpKeyState)
HRESULT None None.nodeFromID(BSTR idString None,IXMLDOMNode **node None)
HRESULT None msdrm.DRMGetIssuanceLicenseTemplate(_In_ DRMPUBHANDLE hIssuanceLicense,_Inout_ UINT *puIssuanceLicenseTemplateLength,_Out_ PWSTR wszIssuanceLicenseTemplate)
protected Size None.MeasureOverride(Size availableSize None)
HRESULT None None.get_childNodes(IXMLDOMNodeList **childList None)
HRESULT None wmvcore.WMCreateLicenseRevocationAgent(_In_ IUnknown *pCallback,_Out_ IWMLicenseRevocationAgent **ppLicenseRevocationAgent)
NET_API_STATUS None netapi32.NetAlertRaiseEx(_In_ LPCWSTR AlertEventName,_In_ LPVOID VariableInfo,_In_ DWORD VariableInfoSize,_In_ LPCWSTR ServiceName)
private void None.listDragTarget_DragDrop(Object sender None,System.Windows.Forms.DragEventArgs e None)
private void None.DeserializeItem(String fileName None)
HRESULT None activeds.Resources([out] IADsCollection **ppResources)
HRESULT None None.ImportFileSystem([out] FsiFileSystems *importedFileSystem)
HRESULT None None.CreateColorTransformer([out] IWICColorTransform **ppIWICColorTransform)
INT None None.ListView_SetSelectionMark(HWND hwndLV None,INT iIndex None)
HRESULT None windowscodecs.CreateBitmapScaler([out] IWICBitmapScaler **ppIBitmapScaler)
HRESULT None None.GetImageType([out None None,retval] XPS_IMAGE_TYPE *imageType)
VOID None None.PropSheet_SetNextText(HWND hDlg None,LPTSTR lpszText None)
HRESULT None pla.get_Item(VARIANT vIndex None,IDataCollector **ppCollector None)
HRESULT None oleaut32.VarBstrFromR8(_In_ DOUBLE dblIn,_In_ LCID lcid,_In_ ULONG dwFlags,_Out_ BSTR *pbstrOut)
BOOL WINAPI advapi32.SaferSetLevelInformation(_In_ SAFER_LEVEL_HANDLE LevelHandle,_In_ SAFER_OBJECT_INFO_CLASS dwInfoType,_In_ LPVOID lpQueryBuffer,_In_ DWORD dwInBufferSize)
VOID NETIOAPI iphlpapi.InitializeUnicastIpAddressEntry(_Out_ PMIB_UNICASTIPADDRESS_ROW Row)
HRESULT None shlwapi.IUnknown_SetSite(_In_ IUnknown *punk,_In_ IUnknown *punkSite)
int None None._strnicmp(const char *string1,const char *string2,size_t count None)
HRESULT None None.get_specified(VARIANT_BOOL *isSpecified None)
HRESULT None None.GetTargetMode([out None None,retval] OPC_URI_TARGET_MODE *targetMode)
ULONG WINAPI iphlpapi.CreatePersistentTcpPortReservation(_In_ USHORT StartPort,_In_ USHORT NumberOfPorts,_Out_ PULONG64 Token)
HRESULT None None.GetViewport([out] D3DVIEWPORT9 *pViewport)
HRESULT None None.ULongPtrMult(_In_ ULONG_PTR ulMultiplicand,_In_ ULONG_PTR ulMultiplier,_Out_ ULONG_PTR *pulResult)
HRESULT None rtworkq.RtwqAddPeriodicCallback(_In_ RTWQPERIODICCALLBACK Callback,IUnknown *context None,_Out_opt_ DWORD *key)
BOOL None shlwapi.MLFreeLibrary(_In_ HMODULE hModule)
HRESULT None None.GetGlyphIndexCount([out None None,retval] UINT32 *indexCount)
LONG TSPIAPI None.TSPI_lineCloseCall(HDRVCALL hdCall None)
HRESULT None None.CorBindToRuntimeEx([in] LPWSTR pwszVersion,[in] LPWSTR pwszBuildFlavor,[in] DWORD startupFlags,[in] REFCLSID rclsid,[in] REFIID riid,[out] LPVOID* ppv)
HRESULT None windowscodecs.IWICBitmapCodecInfo_DoesSupportAnimation_Proxy(_In_ IWICBitmapCodecInfo *THIS_PTR,_Out_ BOOL *pfSupportAnimation)
LONG WINAPI tapi32.lineHandoff(HCALL hCall None,LPCSTR lpszFileName None,DWORD dwMediaMode None)
LONG WINAPI tapi32.lineHandoffW(HCALL hCall None,LPCSTR lpszFileName None,DWORD dwMediaMode None)
LONG WINAPI tapi32.lineHandoffA(HCALL hCall None,LPCSTR lpszFileName None,DWORD dwMediaMode None)
PVOID WINAPI kernel32.RegisterBadMemoryNotification(_In_ PBAD_MEMORY_CALLBACK_ROUTINE Callback)
HRESULT None ole32.MkParseDisplayName(_In_ LPBC pbc,_In_ LPCOLESTR szUserName,_Out_ ULONG *pchEaten,_Out_ LPMONIKER *ppmk)
DWORD None None.DeletePrinterKey(_In_ HANDLE hPrinter,_In_ LPCTSTR pKeyName)
DWORD None None.DeletePrinterKeyW(_In_ HANDLE hPrinter,_In_ LPCTSTR pKeyName)
DWORD None None.DeletePrinterKeyA(_In_ HANDLE hPrinter,_In_ LPCTSTR pKeyName)
HRESULT None None.Count(UINT *puiCount None)
HRESULT None windowscodecs.IWICMetadataQueryReader_GetEnumerator_Proxy(_In_ IWICMetadataQueryReader *THIS_PTR,_Out_ IEnumString **ppIEnumString)
public void None.CreateFileList(ICreateFileListHelper createFileListHelper None,InitialListType initialListType None)
public Object None.GetValue(DependencyProperty dp None)
BOOL None shell32.PathIsExe(_In_ PCWSTR szfile)
LONG WINAPI tapi32.lineSecureCall(HCALL hCall None)
HRESULT None oleaut32.VarMod(_In_ LPVARIANT pvarLeft,_In_ LPVARIANT pvarRight,_Out_ LPVARIANT pvarResult)
HRESULT None None.OnGetStreamInfo(HRESULT hr None,IWMSStreamHeaderList* pHeaderList None,IWMSContentDescriptionList* pContentDescription None,QWORD qwContext None)
protected void None.RemoveVisualChild(Visual child None)
SHORT WINAPI user32.VkKeyScanEx(_In_ TCHAR ch,_In_ HKL dwhkl)
SHORT WINAPI user32.VkKeyScanExW(_In_ TCHAR ch,_In_ HKL dwhkl)
SHORT WINAPI user32.VkKeyScanExA(_In_ TCHAR ch,_In_ HKL dwhkl)
HRESULT None None.get_dataType(VARIANT *dataTypeName None)
BOOL WINAPI clfsw32.ValidateLog(_In_ LPCWSTR pszLogFileName,_In_opt_ LPSECURITY_ATTRIBUTES psaLogFile,_Out_opt_ PCLFS_INFORMATION pinfoBuffer,_Inout_ PULONG pcbBuffer)
HRESULT None oleacc.get_accFocus([out None None,retval] VARIANT *pvarID)
uint32 None cimwin32.GetSecurityDescriptor([out] Win32_SecurityDescriptor Descriptor)
HRESULT None shlwapi.SHStrDup(_In_ LPCTSTR pszSource,_Out_ LPTSTR *ppwsz)
HRESULT None shlwapi.SHStrDupW(_In_ LPCTSTR pszSource,_Out_ LPTSTR *ppwsz)
HRESULT None shlwapi.SHStrDupA(_In_ LPCTSTR pszSource,_Out_ LPTSTR *ppwsz)
HRESULT None None.get_FreeMediaBlocks([out] LONG *pVal)
HRESULT None shlwapi.StrFormatByteSizeEx(ULONGLONG ull None,SFBS_FLAGS flags None,_Out_ PWSTR pszBuf,UINT cchBuf None)
DWORD WINAPI wlanapi.WlanHostedNetworkStartUsing(_In_ HANDLE hClientHandle,_Out_opt_ PWLAN_HOSTED_NETWORK_REASON pFailReason,_Reserved_ PVOID pvReserved)
VOID WINAPI kernel32.WaitForThreadpoolWaitCallbacks(_Inout_ PTP_WAIT pwa,_In_ BOOL fCancelPendingCallbacks)
UINT_PTR CALLBACK None.PrintHookProc(_In_ HWND hdlg,_In_ UINT uiMsg,_In_ WPARAM wParam,_In_ LPARAM lParam)
BOOL None mswsock.RIOResizeCompletionQueue(_In_ RIO_CQ CQ,_In_ DWORD QueueSize)
HRESULT None None.get_StrictFileSystemCompliance([out] VARIANT_BOOL *pVal)
HRESULT WINAPI wsdapi.WSDCreateUdpAddress(_In_ IWSDUdpAddress **ppAddress)
HRESULT None None.SetAuthenticationLevel(AUTHENTICATION_LEVEL AuthLevel None)
INT None None.MonthCal_SetMonthDelta(HWND hwndMC None,INT iDelta None)
BOOLEAN None None.PasswordFilter(_In_ PUNICODE_STRING AccountName,_In_ PUNICODE_STRING FullName,_In_ PUNICODE_STRING Password,_In_ BOOLEAN SetOperation)
public IAsyncResult None.BeginInvoke(Delegate method None)
HRESULT None windowscodecs.GetDecoderInfo([out] IWICBitmapDecoderInfo **ppIDecoderInfo)
VOID None shell32.DragAcceptFiles(HWND hWnd None,BOOL fAccept None)
HRESULT None None.GetAllResponseHeaders(WCHAR **ppwszHeaders None)
VOID __stdcall wiaservc.wiasPrintDebugHResult(HINSTANCE hInstance None,HRESULT hr None)
HRESULT None rtworkq.RtwqBeginUnregisterWorkQueueWithMMCSS(_In_ DWORD workQueueId,_In_ IRtwqAsyncCallback *doneCallback,_In_ IUnknown *doneState)
HRESULT None None.get_IsRealTime([out] VARIANT_BOOL *pVal)
BOOL None mswsock.RIOResizeRequestQueue(_In_ RIO_RQ RQ,_In_ DWORD MaxOutstandingReceive,_In_ DWORD MaxOutstandingSend)
BOOL None None.Edit_SetCueBannerText(HWND hwnd None,LPCWSTR lpcwText None)
HRESULT None None.get_CustomInterface(IDispatch** ppVal None)
NTSTATUS WINAPI certpoleng.PstAcquirePrivateKey(_In_ PCCERT_CONTEXT pCert)
HRESULT STDAPI cldapi.CfQuerySyncProviderStatus(_In_ CF_CONNECTION_KEY ConnectionKey,_Out_ CF_SYNC_PROVIDER_STATUS *ProviderStatus)
HRESULT WINAPI iscsidsc.AddIsnsServer(_In_ PTCHAR Address)
HRESULT WINAPI iscsidsc.AddIsnsServerW(_In_ PTCHAR Address)
HRESULT WINAPI iscsidsc.AddIsnsServerA(_In_ PTCHAR Address)
HRESULT STDAPI cldapi.CfGetSyncRootInfoByPath(_In_ LPCWSTR FilePath,_In_ CF_SYNC_ROOT_INFO_CLASS InfoClass,_Out_ PVOID InfoBuffer,_In_ DWORD InfoBufferLength,_Out_opt_ PDWORD *ReturnedLength)
BOOL WINAPI userenv.GetAllUsersProfileDirectory(_Out_opt_ LPTSTR lpProfileDir,_Inout_ LPDWORD lpcchSize)
BOOL WINAPI userenv.GetAllUsersProfileDirectoryW(_Out_opt_ LPTSTR lpProfileDir,_Inout_ LPDWORD lpcchSize)
BOOL WINAPI userenv.GetAllUsersProfileDirectoryA(_Out_opt_ LPTSTR lpProfileDir,_Inout_ LPDWORD lpcchSize)
Function None shell32.Find(dqc None None,name None None)
uint32 None dnsserverpsprovider.ClearByZoneStatistics([in] boolean Force,[in] string ZoneName[],[in] string ComputerName)
PDH_STATUS None pdh.PdhSelectDataSource(_In_ HWND hWndOwner,_In_ DWORD dwFlags,_Out_ LPTSTR szDataSource,_Inout_ LPDWORD pcchBufferLength)
PDH_STATUS None pdh.PdhSelectDataSourceW(_In_ HWND hWndOwner,_In_ DWORD dwFlags,_Out_ LPTSTR szDataSource,_Inout_ LPDWORD pcchBufferLength)
PDH_STATUS None pdh.PdhSelectDataSourceA(_In_ HWND hWndOwner,_In_ DWORD dwFlags,_Out_ LPTSTR szDataSource,_Inout_ LPDWORD pcchBufferLength)
HRESULT None None.GetInputCount([out] DWORD *pcInputs)
DWORD None npptools.SetNPPPatternFilterInBlob(_In_ HBLOB hBlob,_In_ LPEXPRESSION pExpression,_Out_ HBLOB hErrorBlob)
BOOL None wtsapi32.WTSWaitSystemEvent(_In_ HANDLE hServer,_In_ DWORD EventMask,_Out_ DWORD *pEventFlags)
DWORD None netapi32.DsAddressToSiteNames(_In_opt_ LPCTSTR ComputerName,_In_ DWORD EntryCount,_In_ PSOCKET_ADDRESS SocketAddresses,_Out_ LPTSTR **SiteNames)
DWORD None netapi32.DsAddressToSiteNamesW(_In_opt_ LPCTSTR ComputerName,_In_ DWORD EntryCount,_In_ PSOCKET_ADDRESS SocketAddresses,_Out_ LPTSTR **SiteNames)
DWORD None netapi32.DsAddressToSiteNamesA(_In_opt_ LPCTSTR ComputerName,_In_ DWORD EntryCount,_In_ PSOCKET_ADDRESS SocketAddresses,_Out_ LPTSTR **SiteNames)
ULONG __stdcall tdh.TdhEnumerateProviderFieldInformation(_In_ LPGUID pGuid,_In_ EVENT_FIELD_TYPE EventFieldType,_Out_opt_ PPROVIDER_FIELD_INFOARRAY pBuffer,_Inout_ ULONG *pBufferSize)
BOOL WINAPI kernel32.DeriveCapabilitySidsFromName(_In_ LPCWSTR CapName,_Out_ PSID **CapabilityGroupSids,_Out_ DWORD *CapabilityGroupSidCount,_Out_ PSID **CapabilitySids,_Out_ DWORD *CapabilitySidCount)
LPVOID WINAPI kernel32.VirtualAllocExNuma(_In_ HANDLE hProcess,_In_opt_ LPVOID lpAddress,_In_ SIZE_T dwSize,_In_ DWORD flAllocationType,_In_ DWORD flProtect,_In_ DWORD nndPreferred)
HRESULT WDSTRANSPORTPROVIDERAPI None.WdsTransportProviderCompareContent(_In_ HANDLE hInstance,_In_ PCWSTR pwszContentName,_In_ HANDLE hContent,_Out_ PBOOL pbContentMatches)
ULONG None advapi32.PerfStopProvider(_In_ HANDLE hProvider)
long None None._InterlockedDecrement(long * lpAddend)
void None None.InterlockedMax(in UINT dest,in UINT value,out UINT original_value)
LSTATUS None shlwapi.SHRegQueryInfoUSKey(_In_ HUSKEY hUSKey,_Out_opt_ LPDWORD pcSubKeys,_Out_opt_ LPDWORD pcchMaxSubKeyLen,_Out_opt_ LPDWORD pcValues,_Out_opt_ LPDWORD pcchMaxValueNameLen,_In_ SHREGENUM_FLAGS enumRegFlags)
LSTATUS None shlwapi.SHRegQueryInfoUSKeyW(_In_ HUSKEY hUSKey,_Out_opt_ LPDWORD pcSubKeys,_Out_opt_ LPDWORD pcchMaxSubKeyLen,_Out_opt_ LPDWORD pcValues,_Out_opt_ LPDWORD pcchMaxValueNameLen,_In_ SHREGENUM_FLAGS enumRegFlags)
LSTATUS None shlwapi.SHRegQueryInfoUSKeyA(_In_ HUSKEY hUSKey,_Out_opt_ LPDWORD pcSubKeys,_Out_opt_ LPDWORD pcchMaxSubKeyLen,_Out_opt_ LPDWORD pcValues,_Out_opt_ LPDWORD pcchMaxValueNameLen,_In_ SHREGENUM_FLAGS enumRegFlags)
uint32 None nettcpip.RequestStateChange([in] uint16 RequestedState,[out] CIM_ConcreteJob Job,[in] datetime TimeoutPeriod)
HKL WINAPI user32.GetKeyboardLayout(_In_ DWORD idThread)
public Enlistment None.EnlistDurable(Guid resourceManagerIdentifier None,ISinglePhaseNotification singlePhaseNotification None,EnlistmentOptions enlistmentOptions None)
uint32 None netpeerdistcim.Reset_BC([in] boolean ResetFWRulesOnly,[in] boolean ResetPerfCountersOnly,[in] boolean Force)
BOOL WINAPI clusapi.CanResourceBeDependent(_In_ HRESOURCE hResource,_In_ HRESOURCE hResourceDependent)
BOOL WINAPI user32.DeregisterShellHookWindow(_In_ HWND hWnd)
BOOL WINAPI kernel32.EnumSystemGeoNames(_In_ GEOCLASS geoClass,_In_ GEO_ENUMNAMEPROC geoEnumProc,_In_opt_ LPARAM data)
BOOL WINAPI clfsw32.GetLogIoStatistics(_In_ HANDLE hLog,_Inout_ PVOID pvStatsBuffer,_In_ ULONG cbStatsBuffer,_In_ CLFS_IOSTATS_CLASS eStatsClass,_Out_opt_ PULONG pcbStatsWritten)
BOOL None None.PropSheet_IsDialogMessage(HWND hDlg None,LPMSG pMsg None)
HRESULT None ole32.CoCreateGuid(_Out_ GUID *pguid)
BOOL None kernel32.GetAppContainerNamedObjectPath(_In_opt_ HANDLE Token,_In_opt_ PSID AppContainerSid,_In_ ULONG ObjectPathLength,_Out_opt_ LPWSTR ObjectPath,_Out_ PULONG ReturnLength)
VOID None None.WlxSetContextPointer(_In_ HANDLE hWlx,_In_ PVOID pWlxContext)
DWORD None clusapi.DestroyClusterGroup(_In_ HGROUP hGroup)
protected void None.OnPreviewStylusDown(StylusDownEventArgs e None)
HRESULT None ole32.RevokeDragDrop(_In_ HWND hwnd)
BOOL None None.Button_GetTextMargin(HWND hwnd None,RECT* pmargin None)
LRESULT CALLBACK None.WindowProc(HWND hwnd None,UINT uMsg None,WPARAM wParam None,LPARAM lParam None)
BOOL WINAPI user32.IsWindowUnicode(_In_ HWND hWnd)
public boolean None.EnlistPromotableSinglePhase(IPromotableSinglePhaseNotification promotableSinglePhaseNotification None)
HRESULT STDAPI wsdapi.WSDXMLAddSibling(_In_ WSDXML_ELEMENT *pFirst,_In_ WSDXML_ELEMENT *pSecond)
HRESULT None None.Method3([in None None,readonly] int iMmutable)
BOOL None None.Edit_SetReadOnly(HWND hwndCtl None,BOOL fReadOnly None)
CLIENT_CALL_RETURN RPC_VAR_ENTRY rpcrt4.NdrClientCall(_In_ PMIDL_STUB_DESC pStubDescriptor,_In_ PFORMAT_STRING pFormat,_Inout_ ... None)
uint32 None wvrcimprov.ProvisionPartitionsAdd([in] string PartitionIds[])
HRESULT WINAPI None.RtwqCancelDeadline(_In_ HANDLE pRequest)
HRESULT WINAPI webservices.WsGetErrorString(_In_ WS_ERROR* error,_In_ ULONG index,_Out_ WS_STRING* *string)
BOOL None shell32.UpdateAllDesktopSubscriptions(IADesktopP2 *padp2 None)
void None None.AddParsedSubObject(Object obj None)
EVT_HANDLE WINAPI wevtapi.EvtOpenChannelConfig(_In_ EVT_HANDLE Session,_In_ LPCWSTR ChannelPath,_In_ DWORD Flags)
HRESULT None azroles.get__NewEnum(LPUNKNOWN *ppEnumPtr None)
BOOL WINAPI dbghelp.UnmapDebugInformation(_In_ PIMAGE_DEBUG_INFORMATION DebugInfo)
ULONG None advapi32.EventAccessQuery(_In_ LPGUID Guid,_Inout_ PSECURITY_DESCRIPTOR Buffer,_Inout_ PULONG BufferSize)
LONG WINAPI tapi32.lineAnswer(HCALL hCall None,LPCSTR lpsUserUserInfo None,DWORD dwSize None)
HANDLE WINAPI dbghelp.FindExecutableImage(_In_ PCSTR FileName,_In_ PCSTR SymbolPath,_Out_ PSTR ImageFilePath)
HRESULT None None.SizeTSub(_In_ size_t cbMinuend,_In_ size_t cbSubtrahend,_Out_ size_t *pcbResult)
DWORD None netapi32.DsGetDcSiteCoverage(_In_opt_ LPCTSTR ServerName,_Out_ PULONG EntryCount,_Out_ LPTSTR **SiteNames)
DWORD None netapi32.DsGetDcSiteCoverageW(_In_opt_ LPCTSTR ServerName,_Out_ PULONG EntryCount,_Out_ LPTSTR **SiteNames)
DWORD None netapi32.DsGetDcSiteCoverageA(_In_opt_ LPCTSTR ServerName,_Out_ PULONG EntryCount,_Out_ LPTSTR **SiteNames)
HRESULT WINAPI d3dcompiler_47.D3DSetBlobPart(in LPCVOID pSrcData,in SIZE_T SrcDataSize,in D3D_BLOB_PART Part,in UINT Flags,in LPCVOID pPart,in SIZE_T PartSize,out ID3DBlob ppNewShader)
HRESULT None None.GetOriginalData(HROW hRow None,HACCESSOR hAccessor None,void *pData None)
NTSTATUS WINAPI bcrypt.BCryptDecrypt(_Inout_ BCRYPT_KEY_HANDLE hKey,_In_ PUCHAR pbInput,_In_ ULONG cbInput,_In_opt_ VOID *pPaddingInfo,_Inout_opt_ PUCHAR pbIV,_In_ ULONG cbIV,_Out_opt_ PUCHAR pbOutput,_In_ ULONG cbOutput,_Out_ ULONG *pcbResult,_In_ ULONG dwFlags)
HRESULT None urlmon.RegisterBindStatusCallback(_In_ IBindCtx *pbc,_In_ IBindStatusCallback *pbsc,_Out_ IBindStatusCallback **ppbscPrevious,_Reserved_ DWORD dwReserved)
void None gpsvc.RsopEnumerateUsers([out] string userSids[],[out] uint32 hResult)
protected void None.AddVisualChild(Visual child None)
HRESULT None mfplat.MFCreateMediaExtensionActivate(_In_ PCWSTR szActivatableClassId,_In_ IUnknown *pConfiguration,_In_ REFIID riid,_Out_ LPVOID *ppvObject)
HRESULT WINAPI iscsidsc.AddIscsiSendTargetPortal(_In_opt_ PTCHAR InitiatorName,_In_opt_ ULONG InitiatorPortNumber,_In_opt_ PISCI_LOGIN_OPTIONS LoginOptions,_In_opt_ ISCSI_SECURITY_FLAGS SecurityFlags,PISCSI_TARGET_PORTAL Portal None)
HRESULT WINAPI iscsidsc.AddIscsiSendTargetPortalW(_In_opt_ PTCHAR InitiatorName,_In_opt_ ULONG InitiatorPortNumber,_In_opt_ PISCI_LOGIN_OPTIONS LoginOptions,_In_opt_ ISCSI_SECURITY_FLAGS SecurityFlags,PISCSI_TARGET_PORTAL Portal None)
HRESULT WINAPI iscsidsc.AddIscsiSendTargetPortalA(_In_opt_ PTCHAR InitiatorName,_In_opt_ ULONG InitiatorPortNumber,_In_opt_ PISCI_LOGIN_OPTIONS LoginOptions,_In_opt_ ISCSI_SECURITY_FLAGS SecurityFlags,PISCSI_TARGET_PORTAL Portal None)
HRESULT None msdrm.DRMDuplicatePubHandle(_In_ DRMPUBHANDLE hPubIn,_Out_ DRMPUBHANDLE *phPubOut)
HRESULT None cscsvc.GetItemChangeFlags([out] DWORD *pdwItemChangeFlags)
HRESULT None None.Count([out] ULONG *pcelt)
DWORD WINAPI resutils.ClusterPrepareSharedVolumeForBackup(_In_ LPCWSTR lpszFileName,_Out_ LPWSTR lpszVolumePathName,_Inout_ LPDWORD lpcchVolumePathName,_Out_ LPWSTR lpszVolumeName,_Inout_ LPDWORD lpcchVolumeName)
NET_API_STATUS None netapi32.NetValidatePasswordPolicyFree(_In_ LPVOID *OutputArg)
NET_API_STATUS None netapi32.NetQueryDisplayInformation(_In_ LPCWSTR ServerName,_In_ DWORD Level,_In_ DWORD Index,_In_ DWORD EntriesRequested,_In_ DWORD PreferredMaximumLength,_Out_ LPDWORD ReturnedEntryCount,_Out_ PVOID *SortedBuffer)
protected void None.OnMouseEnter(MouseEventArgs e None)
DNS_STATUS WINAPI dnsapi.DnsExtractRecordsFromMessage_W(_In_ PDNS_MESSAGE_BUFFER pDnsBuffer,_In_ WORD wMessageLength,_Out_ PDNS_RECORD *ppRecord)
BOOL WINAPI advapi32.MakeSelfRelativeSD(_In_ PSECURITY_DESCRIPTOR pAbsoluteSD,_Out_opt_ PSECURITY_DESCRIPTOR pSelfRelativeSD,_Inout_ LPDWORD lpdwBufferLength)
BOOL WINAPI kernel32.GetSystemRegistryQuota(_Out_opt_ PDWORD pdwQuotaAllowed,_Out_opt_ PDWORD pdwQuotaUsed)
BOOL WINAPI wintrust.IsCatalogFile(_In_opt_ HANDLE hFile,_In_opt_ WCHAR *pwszFileName)
HRESULT None None.put_AllowStartupProfile(VARIANT_BOOL newVal None)
HRESULT None None.MQMoveMessage(QUEUEHANDLE sourceQueue None,QUEUEHANDLE targetQueue None,ULONGLONG lookupID None,ITransaction* pTransaction None)
LONG WINAPI winscard.SCardReadCache(_In_ SCARDCONTEXT hContext,_In_ UUID *CardIdentifier,_In_ DWORD FreshnessCounter,_In_ LPTSTR LookupName,_Out_ PBYTE Data,_Out_ DWORD *DataLen)
LONG WINAPI winscard.SCardReadCacheW(_In_ SCARDCONTEXT hContext,_In_ UUID *CardIdentifier,_In_ DWORD FreshnessCounter,_In_ LPTSTR LookupName,_Out_ PBYTE Data,_Out_ DWORD *DataLen)
LONG WINAPI winscard.SCardReadCacheA(_In_ SCARDCONTEXT hContext,_In_ UUID *CardIdentifier,_In_ DWORD FreshnessCounter,_In_ LPTSTR LookupName,_Out_ PBYTE Data,_Out_ DWORD *DataLen)
public void None.MoveTo(String destFileName None)
NETIOAPI_API None iphlpapi.CancelMibChangeNotify2(_In_ HANDLE NotificationHandle)
uint32 None dfsrwmiv2.GetFullFilePath([out] string FullPath)
BOOL WINAPI kernel32.GetPerformanceInfo(_Out_ PPERFORMANCE_INFORMATION pPerformanceInformation,_In_ DWORD cb)
DWORD None user32.GetMenuContextHelpId(HMENU hmenu None)
HRESULT None None.UIntMult(_In_ UINT uMultiplicand,_In_ UINT uMultiplier,_Out_ UINT *puResult)
HRESULT None shell32.SHSetDefaultProperties(_In_opt_ HWND hwnd,_In_ IShellItem *psi,DWORD dwFileOpFlags None,_In_opt_ IFileOperationProgressSink *pfops)
protected void None.OnPropertyChanged(DependencyPropertyChangedEventArgs e None)
VOID None None.FreeHeap(_Inout_ PVOID Base)
HRESULT None None.Clone([out] IEnumShellItems **ppenum)
HRESULT None None.Int8Add(_In_ INT8 i8Augend,_In_ INT8 i8Addend,_Out_ INT8 *pi8Result)
BOOL WINAPI kernel32.WriteProcessMemory(_In_ HANDLE hProcess,_In_ LPVOID lpBaseAddress,_In_ LPCVOID lpBuffer,_In_ SIZE_T nSize,_Out_ SIZE_T *lpNumberOfBytesWritten)
HRESULT WINAPI d3dcompiler_47.D3DDisassembleRegion(in LPCVOID pSrcData,in SIZE_T SrcDataSize,in UINT Flags,in_opt LPCSTR szComments,in SIZE_T StartByteOffset,in SIZE_T NumInsts,out_opt SIZE_T pFinishByteOffset,out ID3DBlob ppDisassembly)
uint32 None wvrcimprov.SmapiGetPairCluster([out] string PairClusterName[],[out] string PairSubsystemId[])
HRESULT None uxtheme.EndBufferedAnimation(HANIMATIONBUFFER hbpAnimation None,BOOL fUpdateTarget None)
public String None.Trim(char[] trimChars None)
LONG WINAPI tapi32.lineRegisterRequestRecipient(HLINEAPP hLineApp None,DWORD dwRegistrationInstance None,DWORD dwRequestMode None,DWORD bEnable None)
HRESULT None ole32.OleLoadFromStream(_In_ LPSTREAM pStm,_In_ REFIID iidInterface,_Out_ LPVOID *ppvObj)
ULONG None advapi32.PerfDeleteInstance(_In_ HANDLE hProvider,_In_ PPERF_COUNTERSET_INSTANCE InstanceBlock)
public void None.Write(byte[] array None,int offset None,int count None)
HRESULT None windowscodecs.IWICBitmapDecoder_GetPreview_Proxy(_In_ IWICBitmapDecoder *THIS_PTR,_Out_ IWICBitmapSource **ppIBitmapSource)
HRESULT None windowscodecs.IWICBitmapLock_GetDataPointer_STA_Proxy(_In_ IWICBitmapLock *THIS_PTR,_Out_ UINT *pcbBufferSize,_Out_ BYTE **ppbData)
private void None.MenuSelected(Object sender None,System.EventArgs e None)
void None None.Rollback(Enlistment enlistment None)
HRESULT None msdrm.DRMDecode(_In_ PWSTR wszAlgID,_In_ PWSTR wszEncodedString,_In_ UINT *puDecodedDataLen,_Out_ BYTE *pbDecodedData)
public void None.Begin(FrameworkContentElement containingObject None,HandoffBehavior handoffBehavior None)
unsigned char None._interlockedbittestandset(long *a None,long b None)
BOOL WINAPI advapi32.ConvertStringSidToSid(_In_ LPCTSTR StringSid,_Out_ PSID *Sid)
BOOL WINAPI advapi32.ConvertStringSidToSidW(_In_ LPCTSTR StringSid,_Out_ PSID *Sid)
BOOL WINAPI advapi32.ConvertStringSidToSidA(_In_ LPCTSTR StringSid,_Out_ PSID *Sid)
HRESULT None None.get_defaultValue(BSTR* defaultValue None)
MFP_PAUSE_EVENT None None.MFP_GET_PAUSE_EVENT(MFP_EVENT_HEADER pHdr None)
BOOL WINAPI resutils.ResUtilIsResourceClassEqual(_In_ PCLUS_RESOURCE_CLASS_INFO prci,_In_ HRESOURCE hResource)
HRESULT None certadm.get__NewEnum([out None None,optional] IUnknown **ppVal)
DWORD WINAPI resutils.ResUtilGetResourceDependentIPAddressProps(_In_ HRESOURCE hResource,_Out_ LPWSTR pszAddress,_Inout_ DWORD *pcchAddress,_Out_ LPWSTR pszSubnetMask,_Inout_ DWORD *pcchSubnetMask,_Out_ LPWSTR pszNetwork,_Inout_ DWORD *pcchNetwork)
NET_API_STATUS None netapi32.NetLocalGroupAdd(_In_ LPCWSTR servername,_In_ DWORD level,_In_ LPBYTE buf,_Out_ LPDWORD parm_err)
UINT None oledlg.OleUIPasteSpecial(_In_ LPOLEUIPASTESPECIAL lpPS)
UINT None oledlg.OleUIPasteSpecialW(_In_ LPOLEUIPASTESPECIAL lpPS)
UINT None oledlg.OleUIPasteSpecialA(_In_ LPOLEUIPASTESPECIAL lpPS)
VOID None None.WdfDeviceInitSetIoInCallerContextCallback(_In_ PWDFDEVICE_INIT DeviceInit,_In_ PFN_WDF_IO_IN_CALLER_CONTEXT EvtIoInCallerContext)
BOOL None None.ListView_DeleteAllItems(HWND hwnd None)
BOOL None mswsock.RIOReceive(_In_ RIO_RQ SocketQueue,_In_ PRIO_BUF pData,_In_ ULONG DataBufferCount,_In_ DWORD Flags,_In_ PVOID RequestContext)
RPC_STATUS RPC_ENTRY rpcrt4.RpcIfInqId(RPC_IF_HANDLE RpcIfHandle None,RPC_IF_ID *RpcIfId None)
BOOL WINAPI user32.ShowOwnedPopups(_In_ HWND hWnd,_In_ BOOL fShow)
static void None.AuthenticateClient(TcpClient* clientRequest None)
public DependentTransaction None.DependentClone(DependentCloneOption cloneOption None)
HRESULT None None.LongSub(_In_ LONG lMinuend,_In_ LONG lSubtrahend,_Out_ LONG *plResult)
HRESULT None None.FilterAppSpecific(LPCWSTR wszQueueFormatName None,DWORD dwAppSpecific None)
HRESULT None None.setProperty(BSTR strProp None,VARIANT vBool None)
protected void None.button1_Click(Object sender None,System.EventArgs e None)
D2D1_GRADIENT_MESH_PATCH None d2d1.GradientMeshPatchFromCoonsPatch(D2D1_POINT_2F point0 None,D2D1_POINT_2F point1 None,D2D1_POINT_2F point2 None,D2D1_POINT_2F point3 None,D2D1_POINT_2F point4 None,D2D1_POINT_2F point5 None,D2D1_POINT_2F point6 None,D2D1_POINT_2F point7 None,D2D1_POINT_2F point8 None,D2D1_POINT_2F point9 None,D2D1_POINT_2F point10 None,D2D1_POINT_2F point11 None,D2D1_COLOR_F color0 None,D2D1_COLOR_F color1 None,D2D1_COLOR_F color2 None,D2D1_COLOR_F color3 None,D2D1_PATCH_EDGE_MODE topEdgeMode None,D2D1_PATCH_EDGE_MODE leftEdgeMode None,D2D1_PATCH_EDGE_MODE bottomEdgeMode None,D2D1_PATCH_EDGE_MODE rightEdgeMode None)
BOOL WINAPI kernel32.IsBadStringPtr(_In_ LPCTSTR lpsz,_In_ UINT_PTR ucchMax)
BOOL WINAPI kernel32.IsBadStringPtrW(_In_ LPCTSTR lpsz,_In_ UINT_PTR ucchMax)
BOOL WINAPI kernel32.IsBadStringPtrA(_In_ LPCTSTR lpsz,_In_ UINT_PTR ucchMax)
HRESULT None None.GetViewStatus([out] DWORD *pdwStatus)
HRESULT None ntshrui.ShowShareFolderUI(_In_ HWND hwndParent,_In_ LPCWSTR pszPath)
HRESULT None ntshrui.ShowShareFolderUIW(_In_ HWND hwndParent,_In_ LPCWSTR pszPath)
uint32 None wvrcimprov.WvrRemoveReplicationPartnership([in] string SourceReplicationGroupName,[in] string TargetReplicationGroupName,[in] string TargetComputerName)
HRESULT None None.clone(IXMLDOMSelection ** ppNode)
HRESULT None faxcom.put_Send([in] BOOL newVal)
HRESULT None activeds.get__NewEnum([out] IUnknown **ppEnumerator)
PVOID WINAPI dbghelp.SymFunctionTableAccess64(_In_ HANDLE hProcess,_In_ DWORD64 AddrBase)
HRESULT WINAPI uiautomationcore.UiaGetReservedNotSupportedValue(_Out_ IUnknown **punkNotSupportedValue)
DWORD None npptools.GetNPPMacTypeAsNumber(_In_ HBLOB hBlob,_Out_ LPDWORD lpMacType)
HRESULT None windowscodecs.IWICFastMetadataEncoder_GetMetadataQueryWriter_Proxy(_In_ IWICBitmapFrameDecode *THIS_PTR,_Out_ IWICMetadataQueryWriter **ppIMetadataQueryWriter)
HRESULT None None.GetProperties([out] VDS_PORT_PROP *pPortProp)
BOOL None npptools.IsRemoteNPP(_In_ HBLOB hBlob)
LONG TSPIAPI None.TSPI_lineSecureCall(DRV_REQUESTID dwRequestID None,HDRVCALL hdCall None)
HRESULT None shlwapi.AssocQueryString(_In_ ASSOCF flags,_In_ ASSOCSTR str,_In_ LPCTSTR pszAssoc,_In_opt_ LPCTSTR pszExtra,_Out_opt_ LPTSTR pszOut,_Inout_ DWORD *pcchOut)
HRESULT None shlwapi.AssocQueryStringW(_In_ ASSOCF flags,_In_ ASSOCSTR str,_In_ LPCTSTR pszAssoc,_In_opt_ LPCTSTR pszExtra,_Out_opt_ LPTSTR pszOut,_Inout_ DWORD *pcchOut)
HRESULT None shlwapi.AssocQueryStringA(_In_ ASSOCF flags,_In_ ASSOCSTR str,_In_ LPCTSTR pszAssoc,_In_opt_ LPCTSTR pszExtra,_Out_opt_ LPTSTR pszOut,_Inout_ DWORD *pcchOut)
BOOL None shell32.SHRegGetBoolValueFromHKCUHKLM(PCWSTR pszKey None,_In_ PCWSTR pszValue,_In_ BOOL fDefault)
HRESULT None None.get_ImageSize([out] ULONG *pVal)
HRESULT None oleaut32.VarUI2FromI8(_In_ LONG64 i64In,_Out_ USHORT *puiOut)
HRESULT WDSTRANSPORTPROVIDERAPI None.WdsTransportProviderReadContent(_In_ HANDLE hContent,_In_ PVOID pBuffer,_In_ ULONG ulBytesToRead,_In_ PULARGE_INTEGER pContentOffset,_In_ PVOID pvUserData)
HRESULT None None.identityConstraint(ISchemaItemCollection** constraints None)
BOOL None None.TabCtrl_SetImageList(HWND hwnd None,HIMAGELIST himl None)
HRESULT None None.get_whitespace(SCHEMAWHITESPACE* whitespace None)
HRESULT None ole32.CoQueryClientBlanket(_Out_opt_ DWORD *pAuthnSvc,_Out_opt_ DWORD *pAuthzSvc,_Out_opt_ OLECHAR **pServerPrincName,_Out_opt_ DWORD *pAuthnLevel,_Out_opt_ DWORD *pImpLevel,_Out_opt_ RPC_AUTHZ_HANDLE *pPrivs,_Inout_opt_ DWORD *pCapabilities)
int CALLBACK None.CompareFunc(LPARAM lParam1 None,LPARAM lParam2 None,LPARAM lParamSort None)
NTSTATUS WINAPI bcrypt.BCryptEnumContexts(_In_ ULONG dwTable,_Inout_ ULONG *pcbBuffer,_Inout_ PCRYPT_CONTEXTS *ppBuffer)
HRESULT None None.GetEnumType([out] PROPENUMTYPE *penumtype)
BOOL WINAPI advapi32.AddConditionalAce(_Inout_ PACL pAcl,_In_ DWORD dwAceRevision,_In_ DWORD AceFlags,_In_ UCHAR AceType,_In_ DWORD AccessMask,_In_ PSID pSid,_In_ PWCHAR ConditionStr,_Out_ DWORD *ReturnLength)
BOOL None None.Button_GetImageList(HWND hwnd None,PBUTTON_IMAGELIST pbuttonImageList None)
PSID_IDENTIFIER_AUTHORITY WINAPI advapi32.GetSidIdentifierAuthority(_In_ PSID pSid)
HRESULT None oleaut32.VarUI8FromUI1(_In_ BYTE bIn,_Out_ ULONG64 *pi64Out)
HRESULT None oleaut32.VarI4FromDisp(IDispatch *pdispIn None,_In_ LCID lcid,_Out_ LONG *plOut)
BOOL WINAPI wevtapi.EvtNextChannelPath(_In_ EVT_HANDLE ChannelEnum,_In_ DWORD ChannelPathBufferSize,_In_ LPWSTR ChannelPathBuffer,_Out_ PDWORD ChannelPathBufferUsed)
BOOL WINAPI ntdll.IsProcessCritical(_In_ HANDLE hProcess,_Out_ PBOOL Critical)
HRESULT None None.CreateResultImage([out None None,optional] IStream **resultStream)
uint32 None ramgmtpsprovider.SetByEncryptionType([in] string Destination[],[in] boolean AdminStatus,[in] boolean PromoteAlternate,[in] string AuthenticationMethod,[in] string EapMethod,[in] boolean InternalIPv4,[in] boolean Force,[in] string PostConnectionIPv4Subnet[],[in] string IPv4TriggerFilter[],[in] uint32 IPv4TriggerFilterAction,[in] string PostConnectionIPv6Subnet[],[in] string IPv6TriggerFilter[],[in] uint32 IPv6TriggerFilterAction,[in] string IPv4Subnet[],[in] string Name,[in] string ResponderAuthenticationMethod,[in] boolean PassThru,[in] boolean Persistent,[in] boolean InitiateConfigPayload,[in] string RadiusAttributeClass,[in] uint32 EnableQoS,[in] uint64 TxBandwidthKbps,[in] uint64 RxBandwidthKbps,[in] uint32 NetworkOutageTimeSeconds,[in] uint32 NumberOfTries,[in] uint32 RetryIntervalSeconds,[in] uint32 SADataSizeForRenegotiationKilobytes,[in] uint32 SALifeTimeSeconds,[in] uint32 MMSALifeTimeSeconds,[in] string IPv6Subnet[],[in] boolean InternalIPv6,[in] uint32 IdleDisconnectSeconds,[in] string UserName,[in] string Password,[in] uint8 Certificate[],[in] string SharedSecret,[in] string EncryptionType,[in] string SourceIpAddress,[in] VpnTrafficSelector LocalVpnTrafficSelector[],[in] VpnTrafficSelector RemoteVpnTrafficSelector[],[out] VpnS2SInterface cmdletOutput)
BOOL WINAPI clfsw32.AdvanceLogBase(_Inout_ PVOID pvMarshal,_In_ PCLFS_LSN plsnBase,_In_ ULONG fFlags,_Inout_opt_ LPOVERLAPPED pOverlapped)
HRESULT None None.get_DataProtocol(BSTR* pbstrDataProtocols None)
HRESULT None None.GetGroupingRange([out] PROPDESC_GROUPING_RANGE *pgr)
HRESULT None None.SetStreamType(GUID StreamType None)
HRESULT None propsys.PropVariantToUInt32Vector(_In_ REFPROPVARIANT propvar,_Out_ ULONG *prgn,_In_ ULONG crgn,_Out_ ULONG *pcElem)
UINT None None.TreeView_GetItemState(HWND hwndTV None,HTREEITEM hItem None,UINT stateMask None)
HRESULT None None.get_StreamingPlayers(long* pVal None)
uint32 None wvrcimprov.CreatePartnership([in] string SourceComputerName,[in] string SourceRGName,[in] string DestinationComputerName,[in] string DestinationRGName,[in] uint32 ReplicationMode,[in] boolean PreventReplication,[in] boolean Seeded,[in] uint32 AsyncRPO,[in] boolean EnableEncryption,[out] MSFT_WvrReplicationPartnership Output[])
ULONG STDMETHODCALLTYPE rpcrt4.NdrCStdStubBuffer_Release(_In_ IRpcStubBuffer *This,_In_ IPSFactoryBuffer *pPSF)
protected void None.SaveCustomPersonalizationState(PersonalizationDictionary state None)
BOOL WINAPI dbghelp.SymGetScope(_In_ HANDLE hProcess,_In_ ULONG64 BaseOfDll,_In_ DWORD Index,_Inout_ PSYMBOL_INFO Symbol)
BOOL WINAPI dbghelp.SymGetScopeW(_In_ HANDLE hProcess,_In_ ULONG64 BaseOfDll,_In_ DWORD Index,_Inout_ PSYMBOL_INFO Symbol)
BOOL WINAPI dbghelp.SymGetScope(_In_ HANDLE hProcess,_In_ ULONG64 BaseOfDll,_In_ DWORD Index,_Inout_ PSYMBOL_INFO Symbol)
HRESULT None None.FeedMovedFrom(const BSTR path,const BSTR oldPath)
UINT None None.TreeView_SetItemState(HWND hwndTV None,HTREEITEM hItem None,UINT state None,UINT stateMask None)
NTSTATUS None None.DriverCloseResources(_In_ PDRIVER_CONTEXT Context)
BOOL None None.TreeView_DeleteItem(HWND hwndTV None,HTREEITEM hitem None)
HRESULT None windowscodecs.IWICBitmapFrameEncode_Initialize_Proxy(_In_ IWICBitmapFrameEncode *THIS_PTR,_In_ IPropertyBag2 *pIEncoderOptions)
void None None.Rollback(Enlistment enlistment None)
uint32 None wvrcimprov.QueryReplicaSet([in] string ReplicationGroupName,[in] string VolumeName,[out] string PartitionId,[out] string ReplicaSetId)
HRESULT WINAPI uiautomationcore.UiaRaiseChangesEvent(_In_ IRawElementProviderSimple *pProvider,_In_ eventIdCount None,_In_ *pUiaChanges None)
HRESULT None shell32.SHLimitInputEdit(_In_opt_ HWND hwndEdit,_In_ IShellFolder *psf)
void None None.Rollback(Enlistment enlistment None)
STDAPI None avifil32.AVIStreamBeginStreaming(PAVISTREAM pavi None,LONG lStart None,LONG lEnd None,LONG lRate None)
PVOID WINAPI api-ms-win-core-enclave-l1-1-0.CreateEnclave(_In_ HANDLE hProcess,_In_opt_ LPVOID lpAddress,_In_ SIZE_T dwSize,_In_ SIZE_T dwInitialCommittment,_In_ DWORD flEnclaveType,_In_ LPCVOID lpEnclaveInformation,_In_ DWORD dwInfoLength,_Out_opt_ LPDWORD lpEnclaveError)
HRESULT None None.get_AddEnabled([out None None,retval] VARIANT_BOOL *pVarBool)
DWORD WINAPI None.Online(_In_ RESID Resource,_Inout_ LPHANDLE EventHandle)
HRESULT None azroles.get_Writable([out] BOOL *pfProp)
HRESULT None mfreadwrite.MFCreateSinkWriterFromMediaSink(_In_ IMFMediaSink *pMediaSink,_In_ IMFAttributes *pAttributes,_Out_ IMFSinkWriter **ppSinkWriter)
HRESULT None None.setProperty(BSTR name None,VARIANT value None)
NTSTATUS None advapi32.RtlEncryptMemory(_Inout_ PVOID Memory,_In_ ULONG MemoryLength,_In_ ULONG OptionFlags)
VOID None None.PropSheet_SetButtonText(HWND hDlg None,DWORD dwButton None,LPCTSTR lpszText None)
public VerifyResult None.VerifySignatures(boolean exitOnFailure None)
HRESULT None oleaut32.SafeArrayGetUBound(_In_ SAFEARRAY *psa,_In_ UINT nDim,_Out_ LONG *plUbound)
BOOL CALLBACK None.EnumGeoInfoProc(_In_ GEOID GeoId)
function None None.GetObject(class : String)
UINT None msi.MsiOpenDatabase(_In_ LPCTSTR szDatabasePath,_In_ LPCTSTR szPersist,_Out_ MSIHANDLE *phDatabase)
UINT None msi.MsiOpenDatabaseW(_In_ LPCTSTR szDatabasePath,_In_ LPCTSTR szPersist,_Out_ MSIHANDLE *phDatabase)
UINT None msi.MsiOpenDatabaseA(_In_ LPCTSTR szDatabasePath,_In_ LPCTSTR szPersist,_Out_ MSIHANDLE *phDatabase)
HRESULT None srmsvc.get_RelativeNamespaceRoot([out] BSTR *relativeNamespaceRoot)
HRESULT None oleaut32.VarUI4FromI4(_In_ LONG lIn,_Out_ ULONG *pulOut)
NTSTATUS None None.SpInitUserModeContext(_In_ LSA_SEC_HANDLE ContextHandle,_In_ PSecBuffer PackedContext)
HRESULT None None.get_publicId(VARIANT *publicID None)
Private Sub None.DeviceManager1_OnEvent(EventID None None,DeviceID None None,ItemID None None)
NTSTATUS None secur32.LsaConnectUntrusted(_Out_ PHANDLE LsaHandle)
BOOL WINAPI user32.GetCursorPos(_Out_ LPPOINT lpPoint)
COLORREF None None.TreeView_GetTextColor(HWND hwndTV None)
uint32 None ramgmtpsprovider.Get([in] boolean CheckReachability,[in] string ComputerName,[out] DANetworkLocationServer cmdletOutput)
DWORD None None.DavAuthCallback(_In_ LPWSTR lpwzServerName,_In_ LPWSTR lpwzRemoteName,_In_ DWORD dwAuthScheme,_In_ DWORD dwFlags,_Inout_ PDAV_CALLBACK_CRED pCallbackCred,_Inout_ AUTHNEXTSTEP *NextStep,_Out_ PFNDAVAUTHCALLBACK_FREECRED *pFreeCred)
HRESULT None None.PtrdiffTMult(_In_ ptrdiff_t Multiplicand,_In_ ptrdiff_t Multiplier,_Out_ ptrdiff_t *pResult)
BOOL None mswsock.RIOSendEx(_In_ RIO_RQ SocketQueue,_In_ PRIO_BUF pData,_In_ ULONG DataBufferCount,_In_ PRIO_BUF pLocalAddress,_In_ PRIO_BUF pRemoteAddress,_In_ PRIO_BUF pControlContext,_In_ PRIO_BUF pFlags,_In_ DWORD Flags,_In_ PVOID RequestContext)
BOOL None kernel32.GetCurrentActCtx(_Out_ HANDLE *lphActCtx)
uint32 None wvrcimprov.QueryReplicationPartners([in] string ReplicationGroupName,[in] boolean ContainSourceGroup,[out] string PartnerGroupNames[],[out] string PartnerComputerNames[],[out] string OwnerNode,[out] boolean IsStretch)
HRESULT None qmgrprxy.GetTimes([out] BG_JOB_TIMES *pTimes)
HWND WINAPI user32.GetLastActivePopup(_In_ HWND hWnd)
LONG WINAPI tapi32.lineSetTerminal(HLINE hLine None,DWORD dwAddressID None,HCALL hCall None,DWORD dwSelect None,DWORD dwTerminalModes None,DWORD dwTerminalID None,DWORD bEnable None)
BOOL WINAPI dbghelp.SymGetSymbolFile(_In_opt_ HANDLE hProcess,_In_opt_ PCTSTR SymPath,_In_ PCTSTR ImageFile,_In_ DWORD Type,_Out_ PTSTR SymbolFile,_In_ size_t cSymbolFile,_Out_ PTSTR DbgFile,_In_ size_t cDbgFile)
BOOL WINAPI dbghelp.SymGetSymbolFileW(_In_opt_ HANDLE hProcess,_In_opt_ PCTSTR SymPath,_In_ PCTSTR ImageFile,_In_ DWORD Type,_Out_ PTSTR SymbolFile,_In_ size_t cSymbolFile,_Out_ PTSTR DbgFile,_In_ size_t cDbgFile)
BOOL WINAPI dbghelp.SymGetSymbolFile(_In_opt_ HANDLE hProcess,_In_opt_ PCTSTR SymPath,_In_ PCTSTR ImageFile,_In_ DWORD Type,_Out_ PTSTR SymbolFile,_In_ size_t cSymbolFile,_Out_ PTSTR DbgFile,_In_ size_t cDbgFile)
UINT WINAPI user32.RealGetWindowClass(_In_ HWND hwnd,_Out_ LPTSTR pszType,_In_ UINT cchType)
UINT WINAPI user32.RealGetWindowClassW(_In_ HWND hwnd,_Out_ LPTSTR pszType,_In_ UINT cchType)
BOOL WINAPI None.WIMRegisterLogFile(PCWSTR pszLogFile None,DWORD dwFlags None)
BOOL WINAPI kernel.GetDisplayAutoRotationPreferences(_Out_ ORIENTATION_PREFERENCE *pOrientation)
DWORD None None.DeletePrinterDataEx(_In_ HANDLE hPrinter,_In_ LPCTSTR pKeyName,_In_ LPCTSTR pValueName)
DWORD None None.DeletePrinterDataExW(_In_ HANDLE hPrinter,_In_ LPCTSTR pKeyName,_In_ LPCTSTR pValueName)
DWORD None None.DeletePrinterDataExA(_In_ HANDLE hPrinter,_In_ LPCTSTR pKeyName,_In_ LPCTSTR pValueName)
LPPROPERTYINFO WINAPI nmapi.GetPropertyInfo(_In_ HPROPERTY hProperty)
DWORD WINAPI clusapi.AddClusterResourceDependency(_In_ HRESOURCE hResource,_In_ HRESOURCE hDependsOn)
BOOL None kernel32.ProcessIdToSessionId(_In_ DWORD dwProcessId,_Out_ DWORD *pSessionId)
HRESULT None None.GetCompressedSize([out None None,retval] UINT32 *size)
HRESULT None None.GetSubSystem([out] IVdsSubSystem **ppSubSystem)
DWORD PXEAPI wdspxe.PxeProviderRegister(_In_ LPCWSTR pszProviderName,_In_ LPCWSTR pszModulePath,_In_ PXE_REG_INDEX Index,_In_ BOOL bIsCritical,_Out_ PHKEY phProviderKey)
BOOL WINAPI kernel32.GetThreadSelectedCpuSets(_In_ HANDLE Thread,_Out_opt_ PULONG CpuSetIds,_In_ ULONG CpuSetIdCount,_Out_ PULONG RequiredIdCount)
HRESULT None None.peekNode(IXMLDOMNode** ppNode None)
DWORD WDSTCIAPI wdstptc.WdsTransportClientQueryStatus(_In_ HANDLE hSessionKey,_Out_ PULONG puStatus,_Out_ PULONG puErrorCode)
HRESULT None None.GetNamespaces([out] LPCWSTR **prefixes,[out] LPCWSTR **namespaces,[out] UINT32 *count)
RESID WINAPI None.OpenV2(_In_ LPCWSTR ResourceName,_In_ HKEY ResourceKey,_In_ RESOURCE_HANDLE ResourceHandle,_In_ DWORD OpenFlags)
HRESULT None None.OnDoExtendedCommand(HRESULT hr None,QWORD qwContext None)
UINT WINAPI msi.MsiJoinTransaction(_In_ MSIHANDLE hTransactionID,_In_ DWORD dwTransactionAttributes,_Out_ HANDLE *phChangeOfOwnerEvent)
HRESULT None ole32.OleSetAutoConvert(_In_ REFCLSID clsidOld,_In_ REFCLSID clsidNew)
VOID None None.NdisMIndicateStatus(_In_ NDIS_HANDLE MiniportAdapterHandle,_In_ NDIS_STATUS GeneralStatus,_In_ PVOID StatusBuffer,_In_ UINT StatusBufferSize)
UINT None msi.MsiDatabaseCommit(_In_ MSIHANDLE hDatabase)
NET_API_STATUS None netapi32.NetSessionGetInfo(_In_ LPWSTR servername,_In_ LPWSTR UncClientName,_In_ LPWSTR username,_In_ DWORD level,_Out_ LPBYTE *bufptr)
DWORD None winhttp.WinHttpGetProxyForUrlEx(_In_ HINTERNET hResolver,_In_ PCWSTR pcwszUrl,_In_ WINHTTP_AUTOPROXY_OPTIONS *pAutoProxyOptions,_In_ DWORD_PTR pContext)
BOOL None kernel32.GetThreadGroupAffinity(_In_ HANDLE hThread,_Out_ PGROUP_AFFINITY GroupAffinity)
HRESULT None azroles.get_Operations([out] IAzOperations **ppOperationCollection)
BOOL WINAPI comdlg32.GetSaveFileName(_Inout_ LPOPENFILENAME lpofn)
BOOL WINAPI comdlg32.GetSaveFileNameW(_Inout_ LPOPENFILENAME lpofn)
BOOL WINAPI comdlg32.GetSaveFileNameA(_Inout_ LPOPENFILENAME lpofn)
HRESULT None None.GetGlyphsEditor([out None None,retval] IXpsOMGlyphsEditor **editor)
HRESULT None mf.MFCreateAudioRenderer(_In_ IMFAttributes *pAudioAttributes,_Out_ IMFMediaSink **ppSink)
uint32 None cimwin32.Create([in] string Name,[in] string DisplayName,[in] string PathName,[in] uint8 ServiceType,[in] uint8 ErrorControl,[in] string StartMode,[in] boolean DesktopInteract,[in] string StartName,[in] string StartPassword,[in] string LoadOrderGroup,[in] string LoadOrderGroupDependencies[],[in] string ServiceDependencies[])
VOID None None.WdfDeviceInitSetCharacteristics(_In_ PWDFDEVICE_INIT DeviceInit,_In_ ULONG DeviceCharacteristics,_In_ BOOLEAN OrInValues)
NTSTATUS None None.ZwCreateTransaction(_Out_ PHANDLE TransactionHandle,_In_ ACCESS_MASK DesiredAccess,_In_opt_ POBJECT_ATTRIBUTES ObjectAttributes,_In_opt_ LPGUID Uow,_In_opt_ HANDLE TmHandle,_In_opt_ ULONG CreateOptions,_In_opt_ ULONG IsolationLevel,_In_opt_ ULONG IsolationFlags,_In_opt_ PLARGE_INTEGER Timeout,_In_opt_ PUNICODE_STRING Description)
HRESULT None ndfapi.NdfExecuteDiagnosis(NDFHANDLE handle None,HWND hwnd None)
WINHTTP_STATUS_CALLBACK WINAPI winhttp.WinHttpSetStatusCallback(_In_ HINTERNET hInternet,_In_ WINHTTP_STATUS_CALLBACK lpfnInternetCallback,_In_ DWORD dwNotificationFlags,_Reserved_ DWORD_PTR dwReserved)
DWORD None iphlpapi.CreateIpNetEntry(_In_ PMIB_IPNETROW pArpEntry)
BOOL None kernel32.GetThreadInformation(_In_ HANDLE hThread,_In_ THREAD_INFORMATION_CLASS ThreadInformationClass,_Out_writes_bytes_ ThreadInformation None,_In_ DWORD ThreadInformationSize)
BOOL None None.TreeView_Select(HWND hwndTV None,HTREEITEM hitem None,UINT flag None)
uint32 None wvrcimprov.GetStretchPartnership([in] string SourceRGName,[in] string SourceComputerName,[in] string DestinationRGName,[in] string DestinationComputerName,[out] MSFT_WvrReplicationPartnership Output[])
HRESULT None ole32.OleRegGetUserType(_In_ REFCLSID clsid,_In_ DWORD dwFormOfType,_Out_ LPOLESTR *pszUserType)
WINOLEAPI None ole32.SetConvertStg(IStorage *pStg None,BOOL fConvert None)
public StringBuilder None.AppendFormat(String format None,Object[] args None)
JET_ERR JET_API None.JetBeginExternalBackupInstance(__in JET_INSTANCE instance,__in JET_GRBIT grbit)
DWORD None npptools.GetNPPBlobFromUI(_In_ HWND hwnd,_In_ HBLOB hFilterBlob,_Out_ HBLOB *phBlob)
DXGI_FORMAT_R32G32B32A32_FLOAT None None.DXGI_FORMAT_B4G4R4A4(optional None None)
ULONG None sechost.EventAccessControl(_In_ LPGUID Guid,_In_ ULONG Operation,_In_ PSID Sid,_In_ ULONG Rights,_In_ BOOLEAN AllowOrDeny)
HANDLE None None.AddPrinter(_In_ LPTSTR *pName,_In_ DWORD Level,_In_ LPBYTE pPrinter)
HANDLE None None.AddPrinterW(_In_ LPTSTR *pName,_In_ DWORD Level,_In_ LPBYTE pPrinter)
HANDLE None None.AddPrinterA(_In_ LPTSTR *pName,_In_ DWORD Level,_In_ LPBYTE pPrinter)
VOID None None.WdfRequestComplete(_In_ WDFREQUEST Request,_In_ NTSTATUS Status)
HRESULT None msdrm.DRMAddRightWithUser(_In_ DRMPUBHANDLE hIssuanceLicense,_In_ DRMPUBHANDLE hRight,_In_ DRMPUBHANDLE hUser)
HRESULT None windowscodecs.IWICImagingFactory_CreatePalette_Proxy(_In_ IWICImagingFactory *pFactory,_Out_ IWICPalette **ppIPalette)
uint32 None netpeerdistcim.Remove_BCDataCacheExtensionByDataCacheExtension([in] string DataCacheExtension[],[in] boolean Force)
DWORD WINAPI netapi32.DsGetDcNext(_In_ HANDLE GetDcContextHandle,_Out_opt_ PULONG SockAddressCount,_Out_opt_ LPSOCKET_ADDRESS *SockAddresses,_Out_opt_ LPTSTR *DnsHostName)
DWORD WINAPI netapi32.DsGetDcNextW(_In_ HANDLE GetDcContextHandle,_Out_opt_ PULONG SockAddressCount,_Out_opt_ LPSOCKET_ADDRESS *SockAddresses,_Out_opt_ LPTSTR *DnsHostName)
DWORD WINAPI netapi32.DsGetDcNextA(_In_ HANDLE GetDcContextHandle,_Out_opt_ PULONG SockAddressCount,_Out_opt_ LPSOCKET_ADDRESS *SockAddresses,_Out_opt_ LPTSTR *DnsHostName)
BOOL CALLBACK None.EnumDateFormatsProcExEx(_In_ LPWSTR lpDateFormatString,_In_ CALID CalendarID,_In_ LPARAM lParam)
HRESULT None ole32.OleCreateFromFileEx(_In_ REFCLSID rclsid,_In_ LPCOLESTR lpszFileName,_In_ REFIID riid,_In_ DWORD dwFlags,_In_ DWORD renderopt,_In_ ULONG cFormats,_In_ DWORD *rgAdvf,_In_ LPFORMATETC rgFormatEtc,_In_ IAdviseSink *lpAdviseSink,_Out_ DWORD *rgdwConnection,_In_ LPOLECLIENTSITE pClientSite,_In_ LPSTORAGE pStg,_Out_ LPVOID *ppvObj)
HRESULT WINAPI dismapi.DismGetCapabilityInfo(_In_ DismSession Session,_In_ PCWSTR Name,_In_ DismCapabilityInfo** Info)
HRESULT None msdrm.DRMSetMetaData(_In_ DRMPUBHANDLE hIssuanceLicense,_In_ PWSTR wszContentId,_In_ PWSTR wszContentIdType,_In_opt_ PWSTR wszSKUId,_In_opt_ PWSTR wszSKUIdType,_In_opt_ PWSTR wszContentType,_In_opt_ PWSTR wszContentName)
HRESULT None ole32.CLSIDFromString(_In_ LPCOLESTR lpsz,_Out_ LPCLSID pclsid)
HRESULT None mfplat.MFEndUnregisterWorkQueueWithMMCSS(_In_ IMFAsyncResult *pResult)
BOOL None None.ILIsChild(_In_ PCUIDLIST_RELATIVE pidl)
DWORD PXEAPI wdspxe.PxeDhcpInitialize(_In_ PVOID pRecvPacket,_In_ ULONG uRecvPacketLen,_Inout_ PVOID pReplyPacket,_In_ ULONG uMaxReplyPacketLen,_Out_ PULONG puReplyPacketLen)
HRESULT None oleaut32.VarI4FromInt(_In_ INT intIn,_Out_ LONG *plOut)
BOOL WINAPI clfsw32.ValidateLog(_In_ LPCWSTR pszLogFileName,_In_opt_ LPSECURITY_ATTRIBUTES psaLogFile,_Out_opt_ PCLFS_INFORMATION pinfoBuffer,_Inout_ PULONG pcbBuffer)
BOOL WINAPI userenv.DestroyEnvironmentBlock(_In_ LPVOID lpEnvironment)
protected void None.OnGotKeyboardFocus(KeyboardFocusChangedEventArgs e None)
BOOL WINAPI kernel32.CallbackMayRunLong(_Inout_ PTP_CALLBACK_INSTANCE pci)
BOOL WINAPI kernel32.LoadStringByReference(_In_ DWORD Flags,_In_opt_ PCWSTR Language,_In_ PCWSTR SourceString,_Out_opt_ PWSTR Buffer,_In_ ULONG cchBuffer,_In_opt_ PCWSTR Directory,_Out_opt_ PULONG pcchBufferOut)
HRESULT None actxprxy.QueryMediaInfo([out] byte *pbsessions,[out] byte *pblasttrack,[out] ULONG *ulstartaddress,[out] ULONG *ulnextwritable,[out] ULONG *ulfreeblocks)
HRESULT None None.VerifyingAcknowledgment(LPCWSTR wszQueueFormatName None)
HCLUSTER WINAPI clusapi.GetClusterFromNetwork(_In_ HNETWORK hNetwork)
BOOL None None.ListView_SetTileInfo(HWND hwnd None,PLVTILEINFO plvtinfo None)
BOOL None kernel32.GetAppContainerNamedObjectPath(_In_opt_ HANDLE Token,_In_opt_ PSID AppContainerSid,_In_ ULONG ObjectPathLength,_Out_opt_ LPWSTR ObjectPath,_Out_ PULONG ReturnLength)
HRESULT None oleaut32.VarDecFromR4(_In_ FLOAT fltIn,_Out_ DECIMAL *pdecOut)
NET_API_STATUS None netapi32.NetWkstaSetInfo(_In_ LPWSTR servername,_In_ DWORD level,_In_ LPBYTE buffer,_Out_ LPDWORD parm_err)
DWORD WINAPI winhttp.WinHttpWebSocketQueryCloseStatus(_In_ HINTERNET hWebSocket,_Out_ USHORT *pusStatus,_Out_ PVOID pvReason,_In_ DWORD dwReasonLength,_Out_ DWORD *pdwReasonLengthConsumed)
BOOL None None.EnumPrintProcessorDatatypes(_In_ LPTSTR pName,_In_ LPTSTR pPrintProcessorName,_In_ DWORD Level,_Out_ LPBYTE pDatatypes,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded,_Out_ LPDWORD pcReturned)
BOOL None None.EnumPrintProcessorDatatypesW(_In_ LPTSTR pName,_In_ LPTSTR pPrintProcessorName,_In_ DWORD Level,_Out_ LPBYTE pDatatypes,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded,_Out_ LPDWORD pcReturned)
BOOL None None.EnumPrintProcessorDatatypesA(_In_ LPTSTR pName,_In_ LPTSTR pPrintProcessorName,_In_ DWORD Level,_Out_ LPBYTE pDatatypes,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded,_Out_ LPDWORD pcReturned)
PTP_WAIT WINAPI kernel32.CreateThreadpoolWait(_In_ PTP_WAIT_CALLBACK pfnwa,_Inout_opt_ PVOID pv,_In_opt_ PTP_CALLBACK_ENVIRON pcbe)
HRESULT None oleaut32.VarI2FromI1(_In_ CHAR cIn,_Out_ SHORT *psOut)
HRESULT None ole32.PropVariantClear(_Inout_ PROPVARIANT *pvar)
VOID WINAPI winhttp.WinHttpFreeProxyResult(_Inout_ WINHTTP_PROXY_RESULT *pProxyResult)
public void None.UnregisterName(String name None)
NTSTATUS WINAPI advapi32.LsaLookupPrivilegeValue(LSA_HANDLE PolicyHandle None,PUNICODE_STRING Name None,PLUID Value None)
ULONG None None.ldap_open_fast_bind_session(LPTSTR pHostName None,PLDAP pSession None)
public void None.CopyTo(int sourceIndex None,char[] destination None,int destinationIndex None,int count None)
NTSTATUS None None.WdfUsbTargetPipeWriteSynchronously(_In_ WDFUSBPIPE Pipe,_In_opt_ WDFREQUEST Request,_In_opt_ PWDF_REQUEST_SEND_OPTIONS RequestOptions,_In_opt_ PWDF_MEMORY_DESCRIPTOR MemoryDescriptor,_Out_opt_ PULONG BytesWritten)
HRESULT APIENTRY None.MQCreateQueue(PSECURITY_DESCRIPTOR pSecurityDescriptor None,MQQUEUEPROPS * pQueueProps,LPWSTR lpwcsFormatName None,LPDWORD lpdwFormatNameLength None)
UInt32 None None.ToUInt32(IFormatProvider provider None)
HRESULT None None.SetNetworkOutboundAccess(BOOLbOutbound None None)
HRESULT None None.save(VARIANT destination None)
protected void None.OnPreviewStylusButtonDown(StylusButtonEventArgs e None)
BOOL CALLBACK None.EnumResLangProc(_In_opt_ HMODULE hModule,_In_ LPCTSTR lpszType,_In_ LPCTSTR lpszName,_In_ WORD wIDLanguage,_In_ LONG_PTR lParam)
BOOL CALLBACK None.EnumResLangProcW(_In_opt_ HMODULE hModule,_In_ LPCTSTR lpszType,_In_ LPCTSTR lpszName,_In_ WORD wIDLanguage,_In_ LONG_PTR lParam)
BOOL CALLBACK None.EnumResLangProcA(_In_opt_ HMODULE hModule,_In_ LPCTSTR lpszType,_In_ LPCTSTR lpszName,_In_ WORD wIDLanguage,_In_ LONG_PTR lParam)
HRESULT None None.get_AccountName([out] BSTR *accountName)
uint32 None wvrcimprov.SetPartnershipSetSourcePartnership([in] string SourceRGName,[in] string NewSourceComputerName,[in] string DestinationRGName,[in] string DestinationComputerName)
HRESULT None None.SetNetworkTransactionAccess(BOOL bNetworkTransactionAccess None)
VOID FORCEINLINE None.TpSetCallbackPriority(_Inout_ PTP_CALLBACK_ENVIRON CallbackEnviron,_In_ TP_CALLBACK_PRIORITY Priority)
public void None.SetHasSharedData(WebPart webPart None,boolean hasSharedData None)
HRESULT None None.GetUserProvidedClock([out] BOOL *pfUserClock)
VOID None propsys.ClearPropVariantArray(_In_ PROPVARIANT *rgPropVar,_In_ UINT cVars)
BOOL None shell32.DAD_ShowDragImage(BOOL fShow None)
DWORD None None.WlxQueryConsoleSwitchCredentials(_Out_ PWLX_CONSOLESWITCH_CREDENTIALS_INFO_V1_0 pCred)
HRESULT None None.UtilStringCopyWithAlloc(_Out_ LPWSTR *Buffer,_In_ UINT BufferMax,_In_ LPCWSTR Source)
HRESULT WINAPI windowscodecsext.WICCreateColorTransform_Proxy(_Out_ **ppIColorTransform None)
ULONG None sechost.QueryAllTraces(_Out_ PEVENT_TRACE_PROPERTIES *PropertyArray,_In_ ULONG PropertyArrayCount,_Out_ PULONG SessionCount)
ULONG None sechost.QueryAllTracesW(_Out_ PEVENT_TRACE_PROPERTIES *PropertyArray,_In_ ULONG PropertyArrayCount,_Out_ PULONG SessionCount)
ULONG None sechost.QueryAllTracesA(_Out_ PEVENT_TRACE_PROPERTIES *PropertyArray,_In_ ULONG PropertyArrayCount,_Out_ PULONG SessionCount)
HRESULT None ole32.OleLockRunning(_In_ LPUNKNOWN pUnknown,_In_ BOOL fLock,_In_ BOOL fLastUnlockCloses)
HRESULT None urlmon.CreateFormatEnumerator(_In_ UINT cfmtetc,_In_ FORMATETC *rgfmtetc,_Out_ IEnumFORMATETC **ppenumfmtetc)
uint32 None netpeerdistcim.Set_BCCacheByPath([in] string Path,[in] string MoveTo,[in] uint32 Percentage,[in] uint64 SizeBytes,[in] boolean Defragment,[in] string PolicyStore,[in] boolean PassThru,[in] boolean Force,[out] MSFT_NetBranchCacheCache cmdletOutput)
void None None.LoadViewState(Object state None)
DWORD PXEAPI None.PxeProviderServiceControl(_In_ PVOID pContext,DWORD dwControl None)
DWORD None None.SetNPPPatternFilterInBlob(HBLOB hBlob None,LPEXPRESSION pExpression None,HBLOB hErrorBlob None)
HRESULT None None.GetDecoderDeviceGuids([out] UINT *Count,[out] GUID **pGuids)
HRESULT None None.get_Manufacturer([out] BSTR *pVal)
BOOL None wtsapi32.WTSRegisterSessionNotificationEx(_In_ HANDLE hServer,_In_ HWND hWnd,_In_ DWORD dwFlags)
HRESULT __stdcall None.MFCreateMP3ByteStreamPlugin(_In_ REFIID riid,_Out_ LPVOID *ppvHandler)
BOOL None None.ListView_GetISearchString(HWND hwnd None,LPSTR lpsz None)
UINT None msi.MsiEnumComponents(_In_ DWORD iComponentIndex,_Out_ LPTSTR lpComponentBuf)
UINT None msi.MsiEnumComponentsW(_In_ DWORD iComponentIndex,_Out_ LPTSTR lpComponentBuf)
UINT None msi.MsiEnumComponentsA(_In_ DWORD iComponentIndex,_Out_ LPTSTR lpComponentBuf)
BOOL WINAPI dbghelp.MakeSureDirectoryPathExists(_In_ PCSTR DirPath)
BOOL None spoolss.AddPort(_In_ LPTSTR pName,_In_ HWND hWnd,_In_ LPTSTR pMonitorName)
BOOL None spoolss.AddPortW(_In_ LPTSTR pName,_In_ HWND hWnd,_In_ LPTSTR pMonitorName)
BOOL None spoolss.AddPortA(_In_ LPTSTR pName,_In_ HWND hWnd,_In_ LPTSTR pMonitorName)
CLUSTER_ROLE_STATE WINAPI resutils.ResUtilGetClusterRoleState(_In_ HCLUSTER hCluster,_In_ CLUSTER_ROLE eClusterRole)
HRESULT None azroles.get_BizrulesWritable([out] BOOL *pfProp)
HRESULT None None.OnDataAvailable(IXMLHTTPRequest2 *pXHR None,ISequentialStream *pResponseStream None)
HRESULT None wmiutils.GetNamespaceCount([out] ULONG *puCount)
UINT None msi.MsiSetExternalUIRecord(_In_ PINSTALLUI_HANDLER_RECORD puiHandler,_In_ DWORD dwMessageFilter,_In_ LPVOID pvContext,_Out_opt_ PINSTALLUI_HANDLER_RECORD ppuiPrevHandler)
UINT None msi.MsiSetExternalUIRecord(_In_ PINSTALLUI_HANDLER_RECORD puiHandler,_In_ DWORD dwMessageFilter,_In_ LPVOID pvContext,_Out_opt_ PINSTALLUI_HANDLER_RECORD ppuiPrevHandler)
DWORD WINAPI wlanapi.WlanHostedNetworkForceStart(_In_ HANDLE hClientHandle,_Out_opt_ PWLAN_HOSTED_NETWORK_REASON pFailReason,_Reserved_ PVOID pvReserved)
BOOL None ole32.CoIsHandlerConnected(_In_ LPUNKNOWN pUnk)
RPC_STATUS RPC_ENTRY rpcrt4.RpcFreeAuthorizationContext(_In_ PVOID *pAuthzClientContext)
NTSTATUS None advapi32.LsaSetTrustedDomainInformation(_In_ LSA_HANDLE PolicyHandle,_In_ PSID TrustedDomainSid,_In_ TRUSTED_INFORMATION_CLASS InformationClass,_In_ PVOID Buffer)
HRESULT None ole32.CoGetMalloc(_In_ DWORD dwMemContext,_Out_ LPMALLOC *ppMalloc)
HRESULT None None.get_namespaces(IXMLDOMSchemaCollection ** namespaceCollection)
BOOL None None.MonthCal_GetMinReqRect(HWND hwndMC None,LPRECT lpRectInfo None)
BOOL WINAPI user32.GetWindowDisplayAffinity(_In_ HWND hWnd,_Out_ DWORD *dwAffinity)
NDR_SCONTEXT RPC_ENTRY rpcrt4.NdrContextHandleInitialize(PMIDL_STUB_MESSAGE pStubMsg None,PFORMAT_STRING pFormat None)
BOOL None shell32.FileIconInit(_In_ BOOL fRestoreCache)
DWORD None iphlpapi.IcmpSendEcho(_In_ HANDLE IcmpHandle,_In_ IPAddr DestinationAddress,_In_ LPVOID RequestData,_In_ WORD RequestSize,_In_opt_ PIP_OPTION_INFORMATION RequestOptions,_Out_ LPVOID ReplyBuffer,_In_ DWORD ReplySize,_In_ DWORD Timeout)
HRESULT None None.get_State([out] VMVMState *virtualMachineState)
HRESULT None None.FolderMovedFrom(const BSTR path,const BSTR oldPath)
HRESULT WINAPI webservices.WsMoveWriter(_In_ WS_XML_WRITER* writer,_In_ WS_MOVE_TO moveTo,BOOL* found None,_In_opt_ WS_ERROR* error)
HRESULT None None.hasChildNodes(VARIANT_BOOL *hasChild None)
DWORD None iphlpapi.GetIcmpStatistics(_Out_ PMIB_ICMP pStats)
PIDLIST_ABSOLUTE None shell32.ILCombine(_In_ PCIDLIST_ABSOLUTE pidl1,_In_ PCUIDLIST_RELATIVE pidl2)
HRESULT None None.CreateDeferredContext(UINT ContextFlags None,[out None None,optional] ID3D11DeviceContext **ppDeferredContext)
BOOL IMAGEAPI dbghelp.SymSetScopeFromInlineContext(_In_ HANDLE hProcess,_In_ ULONG64 Address,_In_ ULONG InlineContext)
SECURITY_STATUS None sspicli.SspiZeroAuthIdentity(_In_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE AuthData)
HRESULT None None.get_UnicastRolloverURL(BSTR* pbstrUnicastURL None)
HRESULT None winshfhc.EstimateFileRiskLevel(_In_ LPCWSTR pszFilePath,_In_ LPCWSTR pszExt,_In_ LPCWSTR pszHandler,_Out_ FILE_RISK_LEVEL *pfrlEstimate)
protected void None.OnMouseRightButtonDown(MouseButtonEventArgs e None)
BOOL CALLBACK None.MprAdminAcceptNewConnection3(_In_ RAS_CONNECTION_0 *pRasConnection0,_In_ RAS_CONNECTION_1 *pRasConnection1,_In_ RAS_CONNECTION_2 *pRasConnection2,_In_ RAS_CONNECTION_3 *pRasConnection3)
LONG WINAPI tapi32.lineTranslateDialog(HLINEAPP hLineApp None,DWORD dwDeviceID None,DWORD dwAPIVersion None,HWND hwndOwner None,LPCSTR lpszAddressIn None)
LONG WINAPI tapi32.lineTranslateDialogW(HLINEAPP hLineApp None,DWORD dwDeviceID None,DWORD dwAPIVersion None,HWND hwndOwner None,LPCSTR lpszAddressIn None)
LONG WINAPI tapi32.lineTranslateDialogA(HLINEAPP hLineApp None,DWORD dwDeviceID None,DWORD dwAPIVersion None,HWND hwndOwner None,LPCSTR lpszAddressIn None)
public XpsDigitalSignature None.SignDigitally(X509Certificate certificate None,boolean embedCertificate None,XpsDigSigPartAlteringRestrictions restrictions None,Guid id None,boolean testIsSignable None)
LONG WINAPI tapi32.lineSetTollList(HLINEAPP hLineApp None,DWORD dwDeviceID None,LPCSTR lpszAddressIn None,DWORD dwTollListOption None)
LONG WINAPI tapi32.lineSetTollListW(HLINEAPP hLineApp None,DWORD dwDeviceID None,LPCSTR lpszAddressIn None,DWORD dwTollListOption None)
LONG WINAPI tapi32.lineSetTollListA(HLINEAPP hLineApp None,DWORD dwDeviceID None,LPCSTR lpszAddressIn None,DWORD dwTollListOption None)
ULONG None sechost.CloseTrace(_In_ TRACEHANDLE TraceHandle)
BOOL WINAPI kernel32.QueryMemoryResourceNotification(_In_ HANDLE ResourceNotificationHandle,_Out_ PBOOL ResourceState)
VOID WINAPI kernel32.WakeAllConditionVariable(_Inout_ PCONDITION_VARIABLE ConditionVariable)
protected Visual None.GetVisualChild(int index None)
HRESULT None msdrm.DRMGetRightInfo(_In_ DRMPUBHANDLE hRight,_Inout_ UINT *puRightNameLength,_Out_ PWSTR wszRightName,_Out_ SYSTEMTIME *pstFrom,_Out_ SYSTEMTIME *pstUntil)
private void None.currencyTextBox_TextChanged(Object sender None,EventArgs e None)
public void None.LaunchEntryPoint(Guid appId None,Guid entryPointId None,params object[] parameters)
HRESULT None None.insertBefore(IXMLDOMNode *newChild None,VARIANT refChild None,IXMLDOMNode **outNewChild None)
HRESULT None mf.MFCreateASFContentInfo(IMFASFContentInfo **ppIContentInfo None)
BOOL WINAPI advapi32.CryptVerifySignature(_In_ HCRYPTHASH hHash,_In_ BYTE *pbSignature,_In_ DWORD dwSigLen,_In_ HCRYPTKEY hPubKey,_In_ LPCTSTR sDescription,_In_ DWORD dwFlags)
BOOL WINAPI advapi32.CryptVerifySignatureW(_In_ HCRYPTHASH hHash,_In_ BYTE *pbSignature,_In_ DWORD dwSigLen,_In_ HCRYPTKEY hPubKey,_In_ LPCTSTR sDescription,_In_ DWORD dwFlags)
BOOL WINAPI advapi32.CryptVerifySignatureA(_In_ HCRYPTHASH hHash,_In_ BYTE *pbSignature,_In_ DWORD dwSigLen,_In_ HCRYPTKEY hPubKey,_In_ LPCTSTR sDescription,_In_ DWORD dwFlags)
HRESULT None msdrm.DRMGetInfo(_In_ DRMHANDLE handle,_In_ PWSTR wszAttribute,_Out_ DRMENCODINGTYPE *peEncoding,_Inout_ UINT *pcBuffer,_Out_ BYTE *pbBuffer)
BOOL WINAPI user32.GetMenuItemInfo(_In_ HMENU hMenu,_In_ UINT uItem,_In_ BOOL fByPosition,_Inout_ LPMENUITEMINFO lpmii)
BOOL WINAPI user32.GetMenuItemInfoW(_In_ HMENU hMenu,_In_ UINT uItem,_In_ BOOL fByPosition,_Inout_ LPMENUITEMINFO lpmii)
BOOL WINAPI user32.GetMenuItemInfoA(_In_ HMENU hMenu,_In_ UINT uItem,_In_ BOOL fByPosition,_Inout_ LPMENUITEMINFO lpmii)
BOOL WINAPI None.LooksAlive(_In_ RESID Resource)
UINT None msi.MsiQueryComponentState(_In_ LPTSTR szProductCode,_In_ LPTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ LPCTSTR szComponent,_Out_ INSTALLSTATE *pdwState)
UINT None msi.MsiQueryComponentStateW(_In_ LPTSTR szProductCode,_In_ LPTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ LPCTSTR szComponent,_Out_ INSTALLSTATE *pdwState)
UINT None msi.MsiQueryComponentStateA(_In_ LPTSTR szProductCode,_In_ LPTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ LPCTSTR szComponent,_Out_ INSTALLSTATE *pdwState)
HRESULT None oleaut32.VarBoolFromUI2(_In_ USHORT uiIn,_Out_ VARIANT_BOOL *pboolOut)
BOOL None None.GetPrintProcessorDirectory(_In_ LPTSTR pName,_In_ LPTSTR pEnvironment,_In_ DWORD Level,_Out_ LPBYTE pPrintProcessorInfo,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded)
BOOL None None.GetPrintProcessorDirectoryW(_In_ LPTSTR pName,_In_ LPTSTR pEnvironment,_In_ DWORD Level,_Out_ LPBYTE pPrintProcessorInfo,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded)
BOOL None None.GetPrintProcessorDirectoryA(_In_ LPTSTR pName,_In_ LPTSTR pEnvironment,_In_ DWORD Level,_Out_ LPBYTE pPrintProcessorInfo,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded)
HRESULT None uxtheme.SetWindowTheme(_In_ HWND hwnd,_In_ LPCWSTR pszSubAppName,_In_ LPCWSTR pszSubIdList)
UINT WINAPI user32.RegisterClipboardFormat(_In_ LPCTSTR lpszFormat)
UINT WINAPI user32.RegisterClipboardFormatW(_In_ LPCTSTR lpszFormat)
UINT WINAPI user32.RegisterClipboardFormatA(_In_ LPCTSTR lpszFormat)
HRESULT None oleaut32.VarI4FromCy(_In_ CY cyIn,_Out_ LONG *plOut)
HRESULT None None.GetSessionErrorStatus([out] HRESULT *phrSessionError)
HICON None shell32.ExtractIcon(_Reserved_ HINSTANCE hInst,_In_ LPCTSTR lpszExeFileName,UINT nIconIndex None)
HICON None shell32.ExtractIconW(_Reserved_ HINSTANCE hInst,_In_ LPCTSTR lpszExeFileName,UINT nIconIndex None)
HICON None shell32.ExtractIconA(_Reserved_ HINSTANCE hInst,_In_ LPCTSTR lpszExeFileName,UINT nIconIndex None)
BOOL WINAPI kernel32.EnterUmsSchedulingMode(_In_ PUMS_SCHEDULER_STARTUP_INFO SchedulerStartupInfo)
DWORD WINAPI kernel32.GetProfileSection(_In_ LPCTSTR lpAppName,_Out_ LPTSTR lpReturnedString,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetProfileSectionW(_In_ LPCTSTR lpAppName,_Out_ LPTSTR lpReturnedString,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetProfileSectionA(_In_ LPCTSTR lpAppName,_Out_ LPTSTR lpReturnedString,_In_ DWORD nSize)
public None None.ColorConvertedBitmap(BitmapSource source None,ColorContext sourceColorContext None,ColorContext destinationColorContext None,PixelFormat format None)
HRESULT None None.get_xml(BSTR *xmlString None)
HRESULT None None.NumberOfItemsToIndex([out] LONG *plIncrementalCount,[out] LONG *plNotificationQueue,[out] LONG *plHighPriorityQueue)
NTSTATUS None None.WdfRequestReuse(_In_ WDFREQUEST Request,_In_ PWDF_REQUEST_REUSE_PARAMS ReuseParams)
BOOL None iphlpapi.GetRTTAndHopCount(_In_ IPAddr DestIpAddress,_Out_ PULONG HopCount,_In_ ULONG MaxHops,_Out_ PULONG RTT)
UINT None msi.MsiGetFeatureCost(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szFeature,_In_ MSICOSTTREE iCostTree,_In_ INSTALLSTATE iState,_Out_ INT *piCost)
UINT None msi.MsiGetFeatureCostW(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szFeature,_In_ MSICOSTTREE iCostTree,_In_ INSTALLSTATE iState,_Out_ INT *piCost)
UINT None msi.MsiGetFeatureCostA(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szFeature,_In_ MSICOSTTREE iCostTree,_In_ INSTALLSTATE iState,_Out_ INT *piCost)
HRESULT None None.get_DataProtocol(BSTR* pbstrDataProtocol None)
BOOL WINAPI kernel32.Wow64RevertWow64FsRedirection(_In_ PVOID OldValue)
HRESULT None None.InitVariantFromInt32(_In_ LONG lVal,_Out_ VARIANT *pvar)
HRESULT None None.splitText(long offset None,IXMLDOMText **rightHandTextNode None)
SECURITY_STATUS SEC_Entry secur32.ImpersonateSecurityContext(_In_ PCtxtHandle phContext)
BOOL WINAPI dbghelp.SymFromName(_In_ HANDLE hProcess,_In_ PCTSTR Name,_Inout_ PSYMBOL_INFO Symbol)
BOOL WINAPI dbghelp.SymFromNameW(_In_ HANDLE hProcess,_In_ PCTSTR Name,_Inout_ PSYMBOL_INFO Symbol)
BOOL WINAPI dbghelp.SymFromName(_In_ HANDLE hProcess,_In_ PCTSTR Name,_Inout_ PSYMBOL_INFO Symbol)
HRESULT None None.GetAlternateLocationMappingCount([out] UINT *pcMappings)
HRESULT None shell32.SHCLSIDFromString(_In_ PCWSTR psz,_Out_ CLSID *pcClsid)
HRESULT None None.GetClipGeometry([out None None,retval] IXpsOMGeometry **clipGeometry)
protected void None.OnToolTipClosing(ToolTipEventArgs e None)
HRESULT None windowscodecs.IWICBitmapCodecInfo_DoesSupportMultiframe_Proxy(_In_ IWICBitmapCodecInfo *THIS_PTR,_Out_ BOOL *pfSupportMultiframe)
UInt64 None None.ToUInt64(IFormatProvider provider None)
protected void None.OnGoToPageCommand(int pageNumber None)
HRESULT None oleaut32.OleCreatePictureIndirect(_In_ LPPICTDESC lpPictDesc,_In_ REFIID riid,_In_ BOOL fOwn,_Out_ LPVOID *lplpvObj)
HRESULT None msdrm.DRMCreateEnablingBitsDecryptor(_In_ DRMHANDLE hBoundLicense,_In_opt_ PWSTR wszRight,_In_ DRMHANDLE hAuxLib,_In_opt_ PWSTR wszAuxPlug,_Out_ DRMHANDLE *phDecryptor)
DWORD None npptools.SetNPPTriggerInBlob(_In_ HBLOB hBlob,_In_ LPTRIGGER pTrigger,_Out_ HBLOB hErrorBlob)
ULONG None tdh.TdhLoadManifestFromBinary(_In_ PWSTR BinaryPath)
BOOL WINAPI authz.AuthzInitializeResourceManager(_In_ DWORD flags,_In_opt_ PFN_AUTHZ_DYNAMIC_ACCESS_CHECK pfnAccessCheck,_In_opt_ PFN_AUTHZ_COMPUTE_DYNAMIC_GROUPS pfnComputeDynamicGroups,_In_opt_ PFN_AUTHZ_FREE_DYNAMIC_GROUPS pfnFreeDynamicGroups,_In_ PCWSTR szResourceManagerName,_Out_ PAUTHZ_RESOURCE_MANAGER_HANDLE phAuthzResourceManager)
HRESULT None msdrm.DRMGetApplicationSpecificData(_In_ DRMPUBHANDLE hIssuanceLicense,_In_ UINT uIndex,_Inout_ UINT *puNameLength,_Out_ PWSTR wszName,_Inout_ UINT *puValueLength,_Out_ PWSTR wszValue)
HRESULT None msdrm.DRMGetUnboundLicenseObjectCount(_In_ DRMQUERYHANDLE hQueryRoot,_In_ PWSTR wszSubObjectType,_Out_ UINT *pcSubObjects)
HRESULT WDSCLIAPI wdsclientapi.WdsCliGetTransferSize(_In_ HANDLE hIfh,_Out_ PULONGLONG pullValue)
HRESULT None None.GetCertificateSize([out] UINT *pCertificateSize)
HRESULT None None.GetVideoProcessorService(IDirect3DDeviceManager9 *pDeviceManager None,IDirectXVideoProcessorService **ppVPService None)
DWORD WINAPI kernel32.ReclaimVirtualMemory(_In_ PVOID VirtualAddress,_In_ SIZE_T Size)
HRESULT None None.GetSearchInfoFlags([out] PROPDESC_SEARCHINFO_FLAGS *ppdsiFlags)
BOOL WINAPI avrt.AvRevertMmThreadCharacteristics(_In_ HANDLE AvrtHandle)
VOID None None.InsertHeadList(_Inout_ PLIST_ENTRY ListHead,_Inout_ PLIST_ENTRY Entry)
BOOL WINAPI kernel32.InitializeProcThreadAttributeList(_Out_opt_ LPPROC_THREAD_ATTRIBUTE_LIST lpAttributeList,_In_ DWORD dwAttributeCount,_Reserved_ DWORD dwFlags,_Inout_ PSIZE_T lpSize)
HRESULT None wmvcore.WMCreateProfileManager(_Out_ IWMProfileManager **ppProfileManager)
HRESULT None None.EnumDevices([out] IMDSPEnumDevice **ppEnumDevice)
HRESULT None oleaut32.VarUI1FromStr(_In_ LPCOLESTR strIn,_In_ LCID lcid,_In_ ULONG dwFlags,_Out_ BYTE *pbOut)
NET_API_STATUS None netapi32.NetGroupDelUser(_In_ LPCWSTR servername,_In_ LPCWSTR GroupName,_In_ LPCWSTR Username)
BOOL None None.TabCtrl_GetUnicodeFormat(HWND hwnd None)
private void None.CreatePointsAndSizes(PaintEventArgs e None)
UINT None msi.MsiGetSummaryInformation(_In_ MSIHANDLE hDatabase,_In_ LPCTSTR szDatabasePath,_In_ UINT uiUpdateCount,_Out_ MSIHANDLE *phSummaryInfo)
UINT None msi.MsiGetSummaryInformationW(_In_ MSIHANDLE hDatabase,_In_ LPCTSTR szDatabasePath,_In_ UINT uiUpdateCount,_Out_ MSIHANDLE *phSummaryInfo)
UINT None msi.MsiGetSummaryInformationA(_In_ MSIHANDLE hDatabase,_In_ LPCTSTR szDatabasePath,_In_ UINT uiUpdateCount,_Out_ MSIHANDLE *phSummaryInfo)
BOOL None wtsapi32.WTSEnumerateProcesses(_In_ HANDLE hServer,_In_ DWORD Reserved,_In_ DWORD Version,_Out_ PWTS_PROCESS_INFO *ppProcessInfo,_Out_ DWORD *pCount)
BOOL None wtsapi32.WTSEnumerateProcessesW(_In_ HANDLE hServer,_In_ DWORD Reserved,_In_ DWORD Version,_Out_ PWTS_PROCESS_INFO *ppProcessInfo,_Out_ DWORD *pCount)
BOOL None wtsapi32.WTSEnumerateProcessesA(_In_ HANDLE hServer,_In_ DWORD Reserved,_In_ DWORD Version,_Out_ PWTS_PROCESS_INFO *ppProcessInfo,_Out_ DWORD *pCount)
VOID None None.IoFreeController(_In_ PCONTROLLER_OBJECT ControllerObject)
LCID None nlsmap.DownlevelGetParentLocaleLCID(_In_ LCID Locale)
UINT_PTR CALLBACK None.SetupHookProc(_In_ HWND hdlg,_In_ UINT uiMsg,_In_ WPARAM wParam,_In_ LPARAM lParam)
HRESULT None shell32.SHCreateDefaultPropertiesOp(_In_ IShellItem *psi,_Out_ IFileOperation **ppFileOp)
HRESULT APIENTRY None.MQMarkMessageRejected(QUEUEHANDLE hQueue None,ULONGLONG ullLookupId None)
HRESULT None None.remove_PropertyChanged(EventRegistrationToken token None)
HRESULT None None.get_WorkingDirectory([out] BSTR *pVal)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsProfileEltInqDone(RPC_NS_HANDLE *InquiryContext None)
HRESULT None None.get_errorParametersCount(INT * intParams)
NTSTATUS None None.WdfPdoInitAddHardwareID(_In_ PWDFDEVICE_INIT DeviceInit,_In_ PCUNICODE_STRING HardwareID)
BOOL WINAPI user32.IsMenu(_In_ HMENU hMenu)
INT None mswsock.GetService(_In_ DWORD dwNameSpace,_In_ PGUID lpGuid,_In_ LPTSTR lpServiceName,_In_ DWORD dwProperties,_Out_ LPVOID lpBuffer,_Inout_ LPDWORD lpdwBufferSize,_In_opt_ LPSERVICE_ASYNC_INFO lpServiceAsyncInfo)
INT None mswsock.GetServiceW(_In_ DWORD dwNameSpace,_In_ PGUID lpGuid,_In_ LPTSTR lpServiceName,_In_ DWORD dwProperties,_Out_ LPVOID lpBuffer,_Inout_ LPDWORD lpdwBufferSize,_In_opt_ LPSERVICE_ASYNC_INFO lpServiceAsyncInfo)
INT None mswsock.GetServiceA(_In_ DWORD dwNameSpace,_In_ PGUID lpGuid,_In_ LPTSTR lpServiceName,_In_ DWORD dwProperties,_Out_ LPVOID lpBuffer,_Inout_ LPDWORD lpdwBufferSize,_In_opt_ LPSERVICE_ASYNC_INFO lpServiceAsyncInfo)
HRESULT None oleaut32.SafeArrayUnlock(_In_ SAFEARRAY *psa)
public void None.Select(int start None,int length None)
HRESULT None None.get_SCSIControllers([out] IVMSCSIControllerCollection **scsiControllerCollection)
BOOL WINAPI advapi32.EqualDomainSid(_In_ PSID pSid1,_In_ PSID pSid2,_Out_ BOOL *pfEqual)
SerializableAttribute None None.ClassInterfaceAttribute(ClassInterfaceType.None None None)
private void None.AutoSizeControl(Control control None,int textPadding None)
DWORD None iphlpapi.IpRenewAddress(_In_ PIP_ADAPTER_INDEX_MAP AdapterInfo)
NTSTATUS None None.WdfUsbTargetDeviceIsConnectedSynchronous(_In_ WDFUSBDEVICE UsbDevice)
HRESULT None None.SendToDest(WCHAR *wszComputerName None,WCHAR *wszQueueName None)
UINT None None.TreeView_SetCheckState(HWND hwndTV None,HTREEITEM hItem None,BOOL fCheck None)
HRESULT None None.FolderDeleted(LPCWSTR pszPath None)
BOOL WINAPI None.WlxGetConsoleSwitchCredentials(_In_ PVOID pWlxContext,_Out_ PVOID pInfo)
PDH_STATUS None pdh.PdhGetLogFileSize(_In_ PDH_HLOG hLog,_Out_ LONGLONG *llSize)
HRESULT WINAPI webservices.WsAbortServiceHost(_In_ WS_SERVICE_HOST* serviceHost,_In_opt_ WS_ERROR* error)
UINT WINAPI kernel32.LocalFlags(_In_ HLOCAL hMem)
ULONG WINAPI iphlpapi.SetPerTcpConnectionEStats(PMIB_TCPROW Row None,TCP_ESTATS_TYPE EstatsType None,PUCHAR Rw None,ULONG RwVersion None,ULONG RwSize None,ULONG Offset None)
BOOL None comctl32.DSA_DeleteAllItems(_In_ HDSA hdsa)
DWORD None netapi32.DsRoleGetPrimaryDomainInformation(_In_ LPCWSTR lpServer,_In_ DSROLE_PRIMARY_DOMAIN_INFO_LEVEL InfoLevel,_Out_ PBYTE *Buffer)
LONG WINAPI tapi32.lineGetDevConfig(DWORD dwDeviceID None,LPVARSTRING lpDeviceConfig None,LPCSTR lpszDeviceClass None)
LONG WINAPI tapi32.lineGetDevConfigW(DWORD dwDeviceID None,LPVARSTRING lpDeviceConfig None,LPCSTR lpszDeviceClass None)
LONG WINAPI tapi32.lineGetDevConfigA(DWORD dwDeviceID None,LPVARSTRING lpDeviceConfig None,LPCSTR lpszDeviceClass None)
HRESULT None None.GetOpacityMaskBrush([out None None,retval] IXpsOMBrush **opacityMaskBrush)
HRESULT None None.GetIdentifier([out None None,retval] LPWSTR *identifier)
HRESULT None msdrm.DRMAcquireLicense(_In_ DRMHSESSION hSession,_In_ UINT uFlags,_In_ PWSTR wszGroupIdentityCredential,_In_ PWSTR wszRequestedRights,_In_ PWSTR wszCustomData,_In_ PWSTR wszURL,_In_ VOID *pvContext)
BOOL WINAPI None.WIMGetMountedImageInfoFromHandle(HANDLE hImage None,MOUNTED_IMAGE_INFO_LEVELS fInfoLevelId None,PVOID pMountInfo None,DWORD cbMountInfoLength None,PDWORD pcbReturnLength None)
HRESULT None None.GetIsHyperlinkTarget([out None None,retval] BOOL *isHyperlink)
long None None._InterlockedDecrement(long * lpAddend)
DWORD PXEAPI wdspxe.PxeGetServerInfo(_In_ PXE_GSI_TYPE uInfoType,_Out_ PVOID pBuffer,_In_ ULONG uBufferLen)
DWORD PXEAPI wdspxe.PxeDhcpAppendOption(_Inout_ PVOID pReplyPacket,_In_ ULONG uMaxReplyPacketLen,_Inout_ PULONG puReplyPacketLen,_In_ USHORT uBufferLen,_In_ PVOID pBuffer)
HRESULT None ole32.OleGetAutoConvert(_In_ REFCLSID clsidOld,_Out_ LPCLSID pClsidNew)
HRESULT None oleaut32.SafeArrayAllocDescriptor(_In_ UINT cDims,_Out_ SAFEARRAY **ppsaOut)
UINT None msi.MsiReinstallProduct(_In_ LPCTSTR szProduct,_In_ DWORD dwReinstallMode)
UINT None msi.MsiReinstallProductW(_In_ LPCTSTR szProduct,_In_ DWORD dwReinstallMode)
UINT None msi.MsiReinstallProductA(_In_ LPCTSTR szProduct,_In_ DWORD dwReinstallMode)
BOOL WINAPI user32.GetWindowPlacement(_In_ HWND hWnd,_Inout_ WINDOWPLACEMENT *lpwndpl)
VOID None None.PropSheet_SetWizButtons(HWND hPropSheetDlg None,DWORD dwFlags None)
HRESULT WINAPI dismapi.DismGetPackageInfo(_In_ DismSession Session,_In_ PCWSTR Identifier,_In_ DismPackageIdentifier PackageIdentifier,_Out_ DismPackageInfo **PackageInfo)
BOOL None kernel32.ActivateActCtx(_In_ HANDLE hActCtx,_Out_ ULONG_PTR *lpCookie)
HRESULT None None.GetImageType([out None None,retval] XPS_IMAGE_TYPE *imageType)
DWORD None mprapi.MprAdminServerConnect(_In_opt_ LPWSTR lpwsServerName,_Out_ MPR_SERVER_HANDLE *phMprServer)
INT None ws2_32.WSALookupServiceNext(_In_ HANDLE hLookup,_In_ DWORD dwControlFlags,_Inout_ LPDWORD lpdwBufferLength,_Out_ LPWSAQUERYSET lpqsResults)
INT None ws2_32.WSALookupServiceNextW(_In_ HANDLE hLookup,_In_ DWORD dwControlFlags,_Inout_ LPDWORD lpdwBufferLength,_Out_ LPWSAQUERYSET lpqsResults)
INT None ws2_32.WSALookupServiceNextA(_In_ HANDLE hLookup,_In_ DWORD dwControlFlags,_Inout_ LPDWORD lpdwBufferLength,_Out_ LPWSAQUERYSET lpqsResults)
HRESULT None None.GetIsSideways([out None None,retval] BOOL *isSideways)
HRESULT None None.setProperty(BSTR strProp None,VARIANT vBool None)
BOOL WINAPI kernel32.SetUserGeoName(_In_ PWSTR geoName)
HRESULT None None.get_ExtendedProperties([out None None,retval] BSTR *retVal)
BOOL CALLBACK None.MprAdminAcceptNewLink(_In_ RAS_PORT_0 *pRasPort0,_In_ RAS_PORT_1 *pRasPort1)
uint32 None wvrcimprov.SetGroupModifyConfig([in] string ComputerName,[in] string Name,[in] string Description,[in] uint64 LogSizeInBytes,[in] uint32 ReplicationMode,[in] boolean Encryption)
HRESULT STDAPI cldapi.CfConvertToPlaceholder(_In_ HANDLE FileHandle,_In_opt_ LPCVOID FileIdentity,_In_ DWORD FileIdentityLength,_In_ CF_CONVERT_FLAGS ConvertFlags,_Out_opt_ USN *ConvertUsn,_Inout_opt_ LPOVERLAPPED Overlapped)
INT None mswsock.GetTypeByName(_In_ LPTSTR lpServiceName,_Inout_ PGUID lpServiceType)
INT None mswsock.GetTypeByNameW(_In_ LPTSTR lpServiceName,_Inout_ PGUID lpServiceType)
INT None mswsock.GetTypeByNameA(_In_ LPTSTR lpServiceName,_Inout_ PGUID lpServiceType)
ULONG WINAPI advapi32.PerfQueryCounterInfo(_In_ HANDLE hQuery,_Out_opt_ PPERF_COUNTER_IDENTIFIER pCounters,DWORD cbCounters None,_Out_ LPDWORD pcbCountersActual)
uint32 None wvrcimprov.SuspendGroup([in] string ComputerName,[in] string Name)
BOOL None shlwapi.IsCharAlphaNumericWrapW(_In_ WCHAR ch)
BOOL None uxtheme.EndPanningFeedback(_In_ HWND hwnd,_In_ BOOL fAnimateBack)
HRESULT None windowscodecs.IWICComponentInfo_GetSpecVersion_Proxy(_In_ IWICComponentInfo *THIS_PTR,_In_ UINT cchSpecVersion,_Inout_ WCHAR *wzSpecVersion,_Out_ UINT *pcchActual)
DWORD None netapi32.DsGetSiteName(_In_ LPCTSTR ComputerName,_Out_ LPTSTR *SiteName)
DWORD None netapi32.DsGetSiteNameW(_In_ LPCTSTR ComputerName,_Out_ LPTSTR *SiteName)
DWORD None netapi32.DsGetSiteNameA(_In_ LPCTSTR ComputerName,_Out_ LPTSTR *SiteName)
BOOL WINAPI user32.ExitWindowsEx(_In_ UINT uFlags,_In_ DWORD dwReason)
SHORT WINAPI user32.VkKeyScan(_In_ TCHAR ch)
SHORT WINAPI user32.VkKeyScanW(_In_ TCHAR ch)
SHORT WINAPI user32.VkKeyScanA(_In_ TCHAR ch)
BOOL None sfc.SfcGetNextProtectedFile(_In_ HANDLE RpcHandle,_Inout_ PPROTECTED_FILE_DATA ProtFileData)
BOOL WINAPI kernel32.SetSystemFileCacheSize(_In_ SIZE_T MinimumFileCacheSize,_In_ SIZE_T MaximumFileCacheSize,_In_ DWORD Flags)
DWORD None None.SetBoolInBlob(HBLOB hBlob None,const char* pOwnerName,const char* pCategoryName,const char* pTagName,BOOL Bool None)
BOOL WINAPI comctl32.DPA_Merge(_Inout_ HDPA hdpaDest,_In_ HDPA hdpaSrc,_In_ DWORD dwFlags,_In_ PFNDPACOMPARE pfnCompare,_In_ PFNDPAMERGE pfnMerge,_In_ LPARAM lParam)
PVOID None None.SecureZeroMemory(_In_ PVOID ptr,_In_ SIZE_T cnt)
HRESULT None ole32.OleNoteObjectVisible(_In_ LPUNKNOWN pUnknown,_In_ BOOL fVisible)
PDH_STATUS None pdh.PdhOpenQuery(_In_ LPCTSTR szDataSource,_In_ DWORD_PTR dwUserData,_Out_ PDH_HQUERY *phQuery)
PDH_STATUS None pdh.PdhOpenQueryW(_In_ LPCTSTR szDataSource,_In_ DWORD_PTR dwUserData,_Out_ PDH_HQUERY *phQuery)
PDH_STATUS None pdh.PdhOpenQueryA(_In_ LPCTSTR szDataSource,_In_ DWORD_PTR dwUserData,_Out_ PDH_HQUERY *phQuery)
LONG TSPIAPI None.TSPI_lineGetCallInfo(HDRVCALL hdCall None,LPLINECALLINFO lpCallInfo None)
BOOL WINAPI user32.IsZoomed(_In_ HWND hWnd)
void None None.MyProcedure_notify(void None None)
HRESULT None oleaut32.SafeArrayDestroyDescriptor(_In_ SAFEARRAY *psa)
DWORD WINAPI clusapi.AddResourceToClusterSharedVolumes(_In_ HRESOURCE hResource)
DWORD WINAPI clusapi.ClusterResourceControl(_In_ HRESOURCE hResource,_In_opt_ HNODE hHostNode,_In_ DWORD dwControlCode,_In_opt_ LPVOID lpInBuffer,_In_ DWORD cbInBufferSize,_Out_opt_ LPVOID lpOutBuffer,_In_ DWORD cbOutBufferSize,_Out_opt_ LPDWORD lpBytesReturned)
VOID None None.TabCtrl_AdjustRect(HWND hwnd None,BOOL fLarger None,RECT *prc None)
BOOL WINAPI vertdll.DeleteEnclave(_In_ LPVOID lpAddress)
DWORD PXEAPI wdspxe.PxeDhcpv6CreateRelayRepl(_In_ PPXE_DHCPV6_NESTED_RELAY_MESSAGE pRelayMessages,_In_ ULONG nRelayMessages,_In_ PBYTE pInnerPacket,_In_ ULONG cbInnerPacket,_Out_ PVOID pReplyBuffer,_In_ ULONG cbReplyBuffer,_Out_ PULONG pcbReplyBuffer)
HRESULT None None.GetSourceDuration(IMFMediaSource *pSource None,MFTIME *pDuration None)
HWND None None.PropSheet_GetCurrentPageHwnd(HWND hDlg None)
BOOLEAN WINAPI powrprof.ReadPwrScheme(_In_ UINT uiID,_Out_ PPOWER_POLICY pPowerPolicy)
DWORD WINAPI wlanapi.WFDStartOpenSession(_In_ HANDLE hClientHandle,_In_ PDOT11_MAC_ADDRESS pDeviceAddress,_In_opt_ PVOID pvContext,_In_ WFD_OPEN_SESSION_COMPLETE_CALLBACK pfnCallback,_Out_ PHANDLE phSessionHandle)
BOOL None None.MonthCal_GetCurSel(HWND hwndMC None,LPSYSTEMTIME lpSysTime None)
BOOL WINAPI clfsw32.GetLogContainerName(_In_ HANDLE hLog,_In_ CLFS_CONTAINER_ID cidLogicalContainer,_Inout_ LPCWSTR pwstrContainerName,_In_ ULONG cLenContainerName,_Inout_opt_ PULONG pcActualLenContainerName)
LONG WINAPI advapi32.RegFlushKey(_In_ HKEY hKey)
ULONG WINAPI iphlpapi.DeletePersistentUdpPortReservation(_In_ USHORT StartPort,_In_ USHORT NumberOfPorts)
uint32 None smiscsitargetprov.KillJob([in] boolean DeleteOnKill)
HRESULT None None.put_DestinationMulticastPort(long lPort None)
HRESULT None None.GetDigestMethod([out None None,retval] LPWSTR *digestMethod)
HTREEITEM None None.TreeView_GetSelection(HWND hwndTV None)
DWORD CALLBACK None.MprAdminReleaseIpv6AddressForUser(_In_ WCHAR *lpwszUserName,_In_ WCHAR *lpwszPortName,_In_ in6_addr *lpdwIpv6Address)
ULONG STDMETHODCALLTYPE ole32.CStdAsyncStubBuffer_Release(_In_ IRpcStubBuffer *pthis)
DWORD None shlwapi.SHQueryValueEx(_In_ HKEY hkey,_In_opt_ LPCTSTR pszValue,LPDWORD pdwReserved None,_Out_opt_ LPDWORD pdwType,_Out_opt_ LPVOID pvData,_Inout_opt_ LPDWORD pcbData)
DWORD None shlwapi.SHQueryValueExW(_In_ HKEY hkey,_In_opt_ LPCTSTR pszValue,LPDWORD pdwReserved None,_Out_opt_ LPDWORD pdwType,_Out_opt_ LPVOID pvData,_Inout_opt_ LPDWORD pcbData)
DWORD None shlwapi.SHQueryValueExA(_In_ HKEY hkey,_In_opt_ LPCTSTR pszValue,LPDWORD pdwReserved None,_Out_opt_ LPDWORD pdwType,_Out_opt_ LPVOID pvData,_Inout_opt_ LPDWORD pcbData)
BOOL WINAPI advapi32.CreatePrivateObjectSecurityWithMultipleInheritance(_In_opt_ PSECURITY_DESCRIPTOR ParentDescriptor,_In_opt_ PSECURITY_DESCRIPTOR CreatorDescriptor,_Out_ PSECURITY_DESCRIPTOR *NewDescriptor,_In_opt_ GUID **ObjectTypes,_In_ ULONG GuidCount,_In_ BOOL IsContainerObject,_In_ ULONG AutoInheritFlags,_In_opt_ HANDLE Token,_In_ PGENERIC_MAPPING GenericMapping)
STDAPI None shcore.RegisterScaleChangeEvent(_In_ HANDLE hEvent,_Out_ DWORD_PTR *pdwCookie)
HRESULT None propsys.PropVariantGetInt16Elem(_In_ REFPROPVARIANT propvar,_In_ ULONG iElem,_Out_ SHORT *pnVal)
VOID FORCEINLINE None.TpSetCallbackRaceWithDll(_Inout_ PTP_CALLBACK_ENVIRON CallbackEnviron,_In_ PVOID DllHandle)
HRESULT None ole32.CoDisconnectContext(_In_ DWORD dwTimeout)
LONG WINAPI tapi32.lineGetCountry(DWORD dwCountryID None,DWORD dwAPIVersion None,LPLINECOUNTRYLIST lpLineCountryList None)
LONG WINAPI tapi32.lineGetCountryW(DWORD dwCountryID None,DWORD dwAPIVersion None,LPLINECOUNTRYLIST lpLineCountryList None)
LONG WINAPI tapi32.lineGetCountryA(DWORD dwCountryID None,DWORD dwAPIVersion None,LPLINECOUNTRYLIST lpLineCountryList None)
void None None.Prepare(PreparingEnlistment preparingEnlistment None)
HRESULT None ole32.CoCopyProxy(_In_ IUnknown *pProxy,_Out_ IUnknown **ppCopy)
HRESULT None tapi3.get_AudioFormatForScripting([out] ITScriptableAudioFormat **ppAudioFormat)
NTSTATUS None None.CrackSingleName(_In_ ULONG FormatOffered,_In_ BOOLEAN PerformAtGC,_In_ PUNICODE_STRING NameInput,_In_opt_ PUNICODE_STRING Prefix,_In_ ULONG RequestedFormat,_Out_ PUNICODE_STRING CrackedName,_Out_ PUNICODE_STRING DnsDomainName,_Out_ PULONG SubStatus)
LONG WINAPI tapi32.lineTranslateAddress(HLINEAPP hLineApp None,DWORD dwDeviceID None,DWORD dwAPIVersion None,LPCSTR lpszAddressIn None,DWORD dwCard None,DWORD dwTranslateOptions None,LPLINETRANSLATEOUTPUT lpTranslateOutput None)
LONG WINAPI tapi32.lineTranslateAddressW(HLINEAPP hLineApp None,DWORD dwDeviceID None,DWORD dwAPIVersion None,LPCSTR lpszAddressIn None,DWORD dwCard None,DWORD dwTranslateOptions None,LPLINETRANSLATEOUTPUT lpTranslateOutput None)
LONG WINAPI tapi32.lineTranslateAddressA(HLINEAPP hLineApp None,DWORD dwDeviceID None,DWORD dwAPIVersion None,LPCSTR lpszAddressIn None,DWORD dwCard None,DWORD dwTranslateOptions None,LPLINETRANSLATEOUTPUT lpTranslateOutput None)
protected void None.Dispose(boolean disposing None)
HRESULT None windowscodecs.IWICStream_InitializeFromMemory_Proxy(_In_ IWICStream *THIS_PTR,_In_ BYTE *pbBuffer,_In_ DWORD cbBufferSize)
HLOCAL WINAPI kernel32.LocalHandle(_In_ LPCVOID pMem)
HWND WINAPI user32.ChildWindowFromPointEx(_In_ HWND hwndParent,_In_ POINT pt,_In_ UINT uFlags)
uint32 None netpeerdistcim.Clear_BCCache([in] boolean Force)
BOOL WINAPI advapi32.ConvertSecurityDescriptorToStringSecurityDescriptor(_In_ PSECURITY_DESCRIPTOR SecurityDescriptor,_In_ DWORD RequestedStringSDRevision,_In_ SECURITY_INFORMATION SecurityInformation,_Out_ LPTSTR *StringSecurityDescriptor,_Out_ PULONG StringSecurityDescriptorLen)
BOOL WINAPI advapi32.ConvertSecurityDescriptorToStringSecurityDescriptorW(_In_ PSECURITY_DESCRIPTOR SecurityDescriptor,_In_ DWORD RequestedStringSDRevision,_In_ SECURITY_INFORMATION SecurityInformation,_Out_ LPTSTR *StringSecurityDescriptor,_Out_ PULONG StringSecurityDescriptorLen)
BOOL WINAPI advapi32.ConvertSecurityDescriptorToStringSecurityDescriptorA(_In_ PSECURITY_DESCRIPTOR SecurityDescriptor,_In_ DWORD RequestedStringSDRevision,_In_ SECURITY_INFORMATION SecurityInformation,_Out_ LPTSTR *StringSecurityDescriptor,_Out_ PULONG StringSecurityDescriptorLen)
protected void None.OnGoToPageCommand(int pageNumber None)
BOOLEAN WINAPI powrprof.ReadGlobalPwrPolicy(_Out_ PGLOBAL_POWER_POLICY pGlobalPowerPolicy)
typedef union None.switch(XPS_COLOR_TYPE colorType None)
BOOL WINAPI kernel32.SetThreadpoolWaitEx(_Inout_ PTP_WAIT pwa,_In_opt_ HANDLE h,_In_opt_ PFILETIME pftTimeout,_Reserved_ PVOID Reserved)
BOOL WINAPI advapi32.QueryServiceLockStatus(_In_ SC_HANDLE hSCManager,_Out_opt_ LPQUERY_SERVICE_LOCK_STATUS lpLockStatus,_In_ DWORD cbBufSize,_Out_ LPDWORD pcbBytesNeeded)
BOOL WINAPI advapi32.QueryServiceLockStatusW(_In_ SC_HANDLE hSCManager,_Out_opt_ LPQUERY_SERVICE_LOCK_STATUS lpLockStatus,_In_ DWORD cbBufSize,_Out_ LPDWORD pcbBytesNeeded)
BOOL WINAPI advapi32.QueryServiceLockStatusA(_In_ SC_HANDLE hSCManager,_Out_opt_ LPQUERY_SERVICE_LOCK_STATUS lpLockStatus,_In_ DWORD cbBufSize,_Out_ LPDWORD pcbBytesNeeded)
VOID None None.XMStoreSInt4([out] XMINT4 *pDestination,XMVECTOR V None)
HRESULT None mf.MFCreateSequencerSegmentOffset(_In_ MFSequencerElementId dwId,_In_ MFTIME hnsOffset,_Out_ PROPVARIANT *pvarSegmentOffset)
MyDir None None.SubDir1(mapped from VDir1)
BOOL WINAPI crypt32.CryptMsgSignCTL(_In_ DWORD dwMsgEncodingType,_In_ BYTE *pbCtlContent,_In_ DWORD cbCtlContent,_In_ PCMSG_SIGNED_ENCODE_INFO pSignInfo,_In_ DWORD dwFlags,_Out_ BYTE *pbEncoded,_Inout_ DWORD *pcbEncoded)
UINT None oleaut32.SafeArrayGetDim(_In_ SAFEARRAY *psa)
HRESULT None None.Inverse([out] IMoniker **ppmk)
uint32 None cimwin32.SetForwardBufferMemory([in] uint32 ForwardBufferMemory)
USERINFOSTATE None msi.MsiGetUserInfo(_In_ LPCTSTR szProduct,_Out_ LPTSTR lpUserNameBuf,_Inout_ DWORD *pcchUserNameBuf,_Out_ LPTSTR lpOrgNameBuf,_Inout_ DWORD *pcchOrgNameBuf,_In_ LPTSTR lpSerialBuf,_Inout_ DWORD *pcchSerialBuf)
USERINFOSTATE None msi.MsiGetUserInfoW(_In_ LPCTSTR szProduct,_Out_ LPTSTR lpUserNameBuf,_Inout_ DWORD *pcchUserNameBuf,_Out_ LPTSTR lpOrgNameBuf,_Inout_ DWORD *pcchOrgNameBuf,_In_ LPTSTR lpSerialBuf,_Inout_ DWORD *pcchSerialBuf)
USERINFOSTATE None msi.MsiGetUserInfoA(_In_ LPCTSTR szProduct,_Out_ LPTSTR lpUserNameBuf,_Inout_ DWORD *pcchUserNameBuf,_Out_ LPTSTR lpOrgNameBuf,_Inout_ DWORD *pcchOrgNameBuf,_In_ LPTSTR lpSerialBuf,_Inout_ DWORD *pcchSerialBuf)
BOOL WINAPI authz.AuthzInitializeObjectAccessAuditEvent2(_In_ DWORD Flags,_In_ AUTHZ_AUDIT_EVENT_TYPE_HANDLE hAuditEventType,_In_ PWSTR szOperationType,_In_ PWSTR szObjectType,_In_ PWSTR szObjectName,_In_ PWSTR szAdditionalInfo,_In_ PWSTR szAdditionalInfo2,_Out_ PAUTHZ_AUDIT_EVENT_HANDLE phAuditEvent,_In_ DWORD dwAdditionalParameterCount)
HRESULT None azroles.get_PolicyReaders([out] VARIANT *pvarReaders)
private void None.listDragTarget_DragEnter(Object sender None,System.Windows.Forms.DragEventArgs e None)
HRESULT None certadm.get__NewEnum([out None None,optional] IUnknown **ppVal)
HRESULT APIENTRY None.MQSetQueueSecurity(LPCWSTR lpwcsFormatName None,SECURITY_INFORMATION SecurityInformation None,PSECURITY_DESCRIPTOR pSecurityDescriptor None)
HRESULT None propsys.PropVariantToGUID(_In_ REFPROPVARIANT propvarIn,_Out_ GUID *pguid)
RPC_STATUS RPC_ENTRY rpcrt4.RpcStringBindingCompose(TCHAR *ObjUuid None,TCHAR *ProtSeq None,TCHAR *NetworkAddr None,TCHAR *EndPoint None,TCHAR *Options None,TCHAR **StringBinding None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcStringBindingComposeW(TCHAR *ObjUuid None,TCHAR *ProtSeq None,TCHAR *NetworkAddr None,TCHAR *EndPoint None,TCHAR *Options None,TCHAR **StringBinding None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcStringBindingComposeA(TCHAR *ObjUuid None,TCHAR *ProtSeq None,TCHAR *NetworkAddr None,TCHAR *EndPoint None,TCHAR *Options None,TCHAR **StringBinding None)
HRESULT WINAPI iscsidsc.ReportIsnsServerList(_Inout_ PULONG BufferSizeInChar,_Out_ PTCHAR Buffer)
HRESULT WINAPI iscsidsc.ReportIsnsServerListW(_Inout_ PULONG BufferSizeInChar,_Out_ PTCHAR Buffer)
HRESULT WINAPI iscsidsc.ReportIsnsServerListA(_Inout_ PULONG BufferSizeInChar,_Out_ PTCHAR Buffer)
size_t None None.strspn(const char *str,const char *strCharSet)
uint32 None wvrcimprov.QueryCounterInstance([in] string PartitionId,[out] string DataPartitionCounter,[out] string LogPartitionCounter,[out] string NetworkCounter)
HRESULT WINAPI None.WsSetAutoFail(_In_ ULONG count,_In_opt_ WS_ERROR* error)
LONG WINAPI tapi32.lineGatherDigits(HCALL hCall None,DWORD dwDigitModes None,LPSTR lpsDigits None,DWORD dwNumDigits None,LPCSTR lpszTerminationDigits None,DWORD dwFirstDigitTimeout None,DWORD dwInterDigitTimeout None)
LONG WINAPI tapi32.lineGatherDigitsW(HCALL hCall None,DWORD dwDigitModes None,LPSTR lpsDigits None,DWORD dwNumDigits None,LPCSTR lpszTerminationDigits None,DWORD dwFirstDigitTimeout None,DWORD dwInterDigitTimeout None)
LONG WINAPI tapi32.lineGatherDigitsA(HCALL hCall None,DWORD dwDigitModes None,LPSTR lpsDigits None,DWORD dwNumDigits None,LPCSTR lpszTerminationDigits None,DWORD dwFirstDigitTimeout None,DWORD dwInterDigitTimeout None)
public IAsyncResult None.BeginInvoke(Delegate method None)
uint32 None wvrcimprov.GetSrUserAccess([in] string ComputerName,[out] MSFT_WvrUser Output[])
ULONG None sechost.SetTraceCallback(_In_ LPCGUID pGuid,_In_ PEVENT_CALLBACK EventCallback)
LONG WINAPI tapi32.lineAccept(HCALL hCall None,LPCSTR lpsUserUserInfo None,DWORD dwSize None)
HRESULT None srmsvc.get_PropertyConditions([out] IFsrmCollection **pPropertyConditions)
LONG WINAPI tapi32.lineRemoveProvider(DWORD dwPermanentProviderID None,HWND hwndOwner None)
protected Size None.ArrangeOverride(Size arrangeBounds None)
VOID None None.XMStoreSInt2([out] XMINT2 *pDestination,XMVECTOR V None)
PDH_STATUS None pdh.PdhOpenQuery(_In_ LPCTSTR szDataSource,_In_ DWORD_PTR dwUserData,_Out_ PDH_HQUERY *phQuery)
PDH_STATUS None pdh.PdhOpenQueryW(_In_ LPCTSTR szDataSource,_In_ DWORD_PTR dwUserData,_Out_ PDH_HQUERY *phQuery)
PDH_STATUS None pdh.PdhOpenQueryA(_In_ LPCTSTR szDataSource,_In_ DWORD_PTR dwUserData,_Out_ PDH_HQUERY *phQuery)
HRESULT None None.GetStreamType([out] GUID *pguidStreamType)
HRESULT None None.createNode(VARIANT Type None,BSTR name None,BSTR namespaceURI None,IXMLDOMNode **node None)
DWORD None iphlpapi.NotifyRouteChange(_Out_ PHANDLE Handle,_In_ LPOVERLAPPED overlapped)
HRESULT None oleaut32.VarR4FromDisp(IDispatch *pdispIn None,_In_ LCID lcid,_Out_ FLOAT *pfltOut)
UINT None msi.MsiEnumPatches(_In_ LPCTSTR szProduct,_In_ DWORD iPatchIndex,_Out_ LPTSTR lpPatchBuf,_Out_ LPTSTR lpTransformsBuf,_Inout_ DWORD *pcchTransformsBuf)
UINT None msi.MsiEnumPatchesW(_In_ LPCTSTR szProduct,_In_ DWORD iPatchIndex,_Out_ LPTSTR lpPatchBuf,_Out_ LPTSTR lpTransformsBuf,_Inout_ DWORD *pcchTransformsBuf)
UINT None msi.MsiEnumPatchesA(_In_ LPCTSTR szProduct,_In_ DWORD iPatchIndex,_Out_ LPTSTR lpPatchBuf,_Out_ LPTSTR lpTransformsBuf,_Inout_ DWORD *pcchTransformsBuf)
HRESULT WINAPI dssec.DSCreateISecurityInfoObjectEx(_In_ LPCWSTR pwszObjectPath,_In_ LPCWSTR pwszObjectClass,_In_ LPCWSTR pwszServer,_In_ LPCWSTR pwszUserName,_In_ LPCWSTR pwszPassword,_In_ DWORD dwFlags,_Out_ LPSECURITYINFO *ppSI,_In_opt_ PFNREADOBJECTSECURITY pfnReadSD,_In_opt_ PFNWRITEOBJECTSECURITY pfnWriteSD,_In_ LPARAM lpContext)
HRESULT None oleaut32.SafeArrayRedim(_Inout_ SAFEARRAY *psa,_In_ SAFEARRAYBOUND *psaboundNew)
HRESULT None None.GetItem([out] GUID *pguidCategory)
HRESULT None oleaut32.VarI4FromUI2(_In_ USHORT uiIn,_Out_ LONG *plOut)
HRESULT None oleaut32.VarI1FromDisp(_In_ IDispatch *pdispIn,_In_ LCID lcid,_Out_ CHAR *pcOut)
HRESULT None ole32.CoQueryAuthenticationServices(_Out_ DWORD *pcAuthSvc,_Out_ SOLE_AUTHENTICATION_SERVICE **asAuthSvc)
BOOL CALLBACK None.EnumLanguageGroupsProc(_In_ LGRPID LanguageGroup,_In_ LPTSTR lpLanguageGroupString,_In_ LPTSTR lpLanguageGroupNameString,_In_ DWORD dwFlags,_In_ LONG_PTR lParam)
BOOL WINAPI clfsw32.TruncateLog(_In_ PVOID pvMarshal,_In_ PCLFS_LSN plsnEnd,_Inout_opt_ LPOVERLAPPED lpOverlapped)
HRESULT None None.GetProhibitedCaretStopCount([out None None,retval] UINT32 *prohibitedCaretStopCount)
HRESULT None propsys.VariantToBooleanArray(_In_ REFVARIANT var,_Out_ BOOL *prgf,_In_ ULONG crgn,_Out_ ULONG *pcElem)
HRESULT STDMETHODCALLTYPE None.WMCreateDRMTranscryptionManager(IWMDRMTranscryptionManager ppTranscryptionManager None)
DWORD None None.NPDeviceMode(_In_ HWND hParent)
HRESULT None shlwapi.IStream_ReadStr(_In_ IStream *pstm,_Out_ PWSTR *ppsz)
HRESULT None None.abort(void None None)
HRESULT None ole32.OleDoAutoConvert(_In_ LPSTORAGE pStg,_Out_ LPCLSID pClsidNew)
uint32 None wvrcimprov.RemoveSrGroup([in] string ComputerName,[in] string Name)
BOOL WINAPI dbghelp.SymSetScopeFromAddr(_In_ HANDLE hProcess,_In_ ULONG64 Address)
public String None.TrimStart(char[] trimChars None)
BOOL WINAPI user32.GetMenuItemRect(_In_opt_ HWND hWnd,_In_ HMENU hMenu,_In_ UINT uItem,_Out_ LPRECT lprcItem)
HRESULT None None.LongPtrSub(_In_ LONG_PTR lMinuend,_In_ LONG_PTR lSubtrahend,_Out_ LONG_PTR *plResult)
PSLIST_ENTRY WINAPI ntdll.RtlInterlockedFlushSList(_In_ PSLIST_HEADER ListHead)
HRESULT None None.UInt8Mult(_In_ UINT8 u8Multiplicand,_In_ UINT8 u8Multiplier,_Out_ UINT8 *pu8Result)
ULONG TDHAPI tdh.TdhCleanupPayloadEventFilterDescriptor(_Inout_ PEVENT_FILTER_DESCRIPTOR PayloadEventFilterDescriptor)
HRESULT None shlwapi.ParseURL(_In_ LPCTSTR pcszUrl,_Inout_ PARSEDURL *ppu)
HRESULT None shlwapi.ParseURLW(_In_ LPCTSTR pcszUrl,_Inout_ PARSEDURL *ppu)
HRESULT None shlwapi.ParseURLA(_In_ LPCTSTR pcszUrl,_Inout_ PARSEDURL *ppu)
BOOL WINAPI avrt.AvRtCreateThreadOrderingGroupEx(_Out_ PHANDLE Context,_In_ PLARGE_INTEGER Period,_Inout_ GUID *ThreadOrderingGuid,_In_opt_ PLARGE_INTEGER Timeout,_In_ LPCTSTR TaskName)
BOOL WINAPI avrt.AvRtCreateThreadOrderingGroupExW(_Out_ PHANDLE Context,_In_ PLARGE_INTEGER Period,_Inout_ GUID *ThreadOrderingGuid,_In_opt_ PLARGE_INTEGER Timeout,_In_ LPCTSTR TaskName)
BOOL WINAPI avrt.AvRtCreateThreadOrderingGroupExA(_Out_ PHANDLE Context,_In_ PLARGE_INTEGER Period,_Inout_ GUID *ThreadOrderingGuid,_In_opt_ PLARGE_INTEGER Timeout,_In_ LPCTSTR TaskName)
DWORD WINAPI None.MacTypeToAddressType(DWORD MacType None)
ULONG None advapi32.EnableTrace(_In_ ULONG Enable,_In_ ULONG EnableFlag,_In_ ULONG EnableLevel,_In_ LPCGUID ControlGuid,_In_ TRACEHANDLE SessionHandle)
HRESULT None msdrm.DRMCreateUser(_In_ PWSTR wszUserName,_In_ PWSTR wszUserId,_In_ PWSTR wszUserIdType,_Out_ DRMPUBHANDLE *phUser)
HRESULT WINAPI uiautomationcore.UiaRaiseTextEditTextChangedEvent(_In_ IRawElementProviderSimple *pProvider,_In_ TextEditChangeType textEditChangeType,_In_ SAFEARRAY *pChangedData)
HCONV WINAPI user32.DdeReconnect(_In_ HCONV hConv)
UInt64 None None.ToUInt64(IFormatProvider provider None)
VOID WINAPI netapi32.DsRoleFreeMemory(_In_ PVOID Buffer)
HRESULT None None.get_SelectionContainer([out None None,retval] IRawElementProviderSimple **pRetVal)
HRESULT None mfplat.MFGetTimerPeriodicity(_Out_ DWORD *Periodicity)
LONG TSPIAPI None.TSPI_phoneSetDisplay(DRV_REQUESTID dwRequestID None,HDRVPHONE hdPhone None,DWORD dwRow None,DWORD dwColumn None,LPCWSTR lpsDisplay None,DWORD dwSize None)
LONG TSPIAPI None.TUISPI_providerGenericDialogData(HTAPIDIALOGINSTANCE htDlgInst None,LPVOID lpParams None,DWORD dwSize None)
BOOL None wtsapi32.WTSUnRegisterSessionNotificationEx(_In_ HANDLE hServer,_In_ HWND hWnd)
UINT WINAPI user32.GetMenuState(_In_ HMENU hMenu,_In_ UINT uId,_In_ UINT uFlags)
HGROUP WINAPI clusapi.OpenClusterGroupEx(_In_ HCLUSTER hCluster,_In_opt_ LPCWSTR lpszGroupName,_In_ DWORD dwDesiredAccess,_Out_opt_ DWORD *lpdwGrantedAccess)
NTSTATUS None None.SpQueryContextAttributes(_In_ LSA_SEC_HANDLE ContextHandle,_In_ ULONG ContextAttribute,_Out_ PVOID Buffer)
INT None None.ListView_SubItemHitTest(HWND hwndLV None,LPLVHITTESTINFO pInfo None)
VOID None None.NdisZeroMemory(_In_ PVOID Destination,_In_ ULONG Length)
NET_API_STATUS None netapi32.NetLocalGroupGetInfo(_In_ LPCWSTR servername,_In_ LPCWSTR groupname,_In_ DWORD level,_Out_ LPBYTE *bufptr)
HRESULT None oleaut32.VarBoolFromCy(_In_ CY cyIn,_Out_ VARIANT_BOOL *pboolOut)
PCHAR None wldap32.ldap_dn2ufn(_In_ PCHAR dn)
PCHAR None wldap32.ldap_dn2ufnW(_In_ PCHAR dn)
PCHAR None wldap32.ldap_dn2ufnA(_In_ PCHAR dn)
HRESULT None None.GetFileCounts([out] UINT *pcIncludeFiles,[out] UINT *pcExcludeFiles,[out] UINT *pcComponents)
BOOL WINAPI clfsw32.DeleteLogMarshallingArea(_In_ PVOID pvMarshal)
UINT None msi.MsiSetProperty(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szName,_In_ LPCTSTR szValue)
UINT None msi.MsiSetPropertyW(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szName,_In_ LPCTSTR szValue)
UINT None msi.MsiSetPropertyA(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szName,_In_ LPCTSTR szValue)
BOOL WINAPI user32.IsGUIThread(_In_ BOOL bConvert)
RPC_STATUS RPC_ENTRY rpcrt4.RpcBindingVectorFree(RPC_BINDING_VECTOR **BindingVector None)
DWORD None kernel32.IsValidNLSVersion(_In_ NLS_FUNCTION function,_In_opt_ LPCWSTR lpLocaleName,_In_ LPNLSVERSIONINFOEX lpVersionInformation)
INT None mswsock.GetNameByType(_In_ LPGUID lpServiceType,_Out_ LPTSTR lpServiceName,_In_ DWORD dwNameLength)
INT None mswsock.GetNameByTypeW(_In_ LPGUID lpServiceType,_Out_ LPTSTR lpServiceName,_In_ DWORD dwNameLength)
INT None mswsock.GetNameByTypeA(_In_ LPGUID lpServiceType,_Out_ LPTSTR lpServiceName,_In_ DWORD dwNameLength)
BOOL WINAPI winhttp.WinHttpCloseHandle(_In_ HINTERNET hInternet)
INT None None.ListView_SetHotItem(HWND hwndLV None,INT iIndex None)
HRESULT None None.addParameter(BSTR baseName None,VARIANT parameter None,BSTR namespaceURI None)
BOOL WINAPI user32.EnumChildWindows(_In_opt_ HWND hWndParent,_In_ WNDENUMPROC lpEnumFunc,_In_ LPARAM lParam)
NET_API_STATUS None netapi32.NetUseGetInfo(_In_ LMSTR UncServerName,_In_ LMSTR UseName,_In_ DWORD Level,_Out_ LPBYTE *BufPtr)
HRESULT WINAPI iscsidsc.AddIscsiConnection(_In_ PISCSI_UNIQUE_SESSION_ID UniqueSessionId,_In_ PVOID Reserved,_In_opt_ ULONG InitiatorPortNumber,_In_ PISCSI_TARGET_PORTAL TargetPortal,_In_opt_ ISCSI_SECURITY_FLAGS SecurityFlags,_In_opt_ PSCSI_LOGIN_OPTIONS LoginOptions,_In_opt_ ULONG KeySize,_In_opt_ PCHAR Key,_Out_opt_ PISCSI_UNIQUE_CONNECTION_ID ConnectionId)
HRESULT WINAPI iscsidsc.AddIscsiConnectionW(_In_ PISCSI_UNIQUE_SESSION_ID UniqueSessionId,_In_ PVOID Reserved,_In_opt_ ULONG InitiatorPortNumber,_In_ PISCSI_TARGET_PORTAL TargetPortal,_In_opt_ ISCSI_SECURITY_FLAGS SecurityFlags,_In_opt_ PSCSI_LOGIN_OPTIONS LoginOptions,_In_opt_ ULONG KeySize,_In_opt_ PCHAR Key,_Out_opt_ PISCSI_UNIQUE_CONNECTION_ID ConnectionId)
HRESULT WINAPI iscsidsc.AddIscsiConnectionA(_In_ PISCSI_UNIQUE_SESSION_ID UniqueSessionId,_In_ PVOID Reserved,_In_opt_ ULONG InitiatorPortNumber,_In_ PISCSI_TARGET_PORTAL TargetPortal,_In_opt_ ISCSI_SECURITY_FLAGS SecurityFlags,_In_opt_ PSCSI_LOGIN_OPTIONS LoginOptions,_In_opt_ ULONG KeySize,_In_opt_ PCHAR Key,_Out_opt_ PISCSI_UNIQUE_CONNECTION_ID ConnectionId)
LRESULT CALLBACK None.WindowProc(HWND hwnd None,WM_IME_STARTCOMPOSITION None None,WPARAM wParam None,LPARAM lParam None)
BOOL WINAPI dbghelp.SymSrvIsStore(_In_opt_ HANDLE hProcess,_In_ PCTSTR path)
BOOL WINAPI dbghelp.SymSrvIsStoreW(_In_opt_ HANDLE hProcess,_In_ PCTSTR path)
BOOL WINAPI dbghelp.SymSrvIsStore(_In_opt_ HANDLE hProcess,_In_ PCTSTR path)
DWORD None None.Edit_NoSetFocus(HWND hwndEdit None)
DWORD None None.StatusMessageCallback(_In_ BOOL bVerbose,_In_ LPWSTR lpMessage)
HRESULT None None.SetFormat(GUID Format None)
HRESULT WINAPI webservices.WsCopyNode(_In_ WS_XML_WRITER* writer,_In_ WS_XML_READER* reader,_In_opt_ WS_ERROR* error)
public PackageRelationshipCollection None.GetRelationshipsByType(String relationshipType None)
HRESULT None rtworkq.RtwqUnregisterPlatformEvents(IRtwqPlatformEvents platformEvents None)
HRESULT None d3dcompiler_47.GetDesc([out] D3D11_PARAMETER_DESC *pDesc)
HRESULT None None.DWordPtrSub(_In_ DWORD_PTR dwMinuend,_In_ DWORD_PTR dwSubtrahend,_Out_ DWORD_PTR *pdwResult)
VOID None shell32.DragFinish(HDROP hDrop None)
HIMAGELIST None None.TreeView_SetImageList(HWND hwndTV None,HIMAGELIST himl None,INT iImage None)
VOID WINAPI None.EventClassCallback(_In_ PEVENT_TRACE pEvent)
HRESULT CALLBACK None.MessageRecieved(const WS_OPERATION_CONTEXT* context,const WS_ASYNC_CONTEXT* asyncContext,WS_ERROR* error None)
PIMAGE_SECTION_HEADER WINAPI dbghelp.ImageRvaToSection(_In_ PIMAGE_NT_HEADERS NtHeaders,_In_ PVOID Base,_In_ ULONG Rva)
ULONG None advapi32.UpdateTrace(_In_ TRACEHANDLE SessionHandle,_In_ LPCTSTR SessionName,_Inout_ PEVENT_TRACE_PROPERTIES Properties)
ULONG None advapi32.UpdateTraceW(_In_ TRACEHANDLE SessionHandle,_In_ LPCTSTR SessionName,_Inout_ PEVENT_TRACE_PROPERTIES Properties)
ULONG None advapi32.UpdateTraceA(_In_ TRACEHANDLE SessionHandle,_In_ LPCTSTR SessionName,_Inout_ PEVENT_TRACE_PROPERTIES Properties)
BOOL WINAPI kernel32.GetUmsCompletionListEvent(_In_ PUMS_COMPLETION_LIST UmsCompletionList,_Inout_ PHANDLE UmsCompletionEvent)
LONG WINAPI tapi32.lineHold(HCALL hCall None)
BOOL None uxtheme.BeginPanningFeedback(_In_ HWND hwnd)
DWORD WINAPI clusapi.OnlineClusterResourceEx(_In_ HRESOURCE hResource,_In_ DWORD dwOnlineFlags,_In_opt_ PBYTE lpInBuffer,_In_ DWORD cbInBufferSize)
HRESULT None rdpencom.Initialize([out] __int64* pnPeriodInHundredNsIntervals)
HRESULT None mfplat.MFCalculateImageSize(_In_ REFGUID guidSubtype,_In_ UINT32 unWidth,_In_ UINT32 unHeight,_Out_ UINT32 *pcbImageSize)
DWORD WINAPI crypt32.CertOIDToAlgId(_In_ LPCSTR pszObjId)
BOOL None wintrust.WintrustAddActionID(_In_ GUID *pgActionID,_In_ DWORD fdwFlags,_In_ CRYPT_REGISTER_ACTIONID *psProvInfo)
DWORD WINAPI clusapi.SetClusterResourceName(_In_ HRESOURCE hResource,_In_ LPCWSTR lpszResourceName)
HRESULT None ole32.CreateDataAdviseHolder(_Out_ LPDATAADVISEHOLDER *ppDAHolder)
T None None.N(T t None,U u None)
HRESULT None None.GetMaxSize([out] UINT *pcbMaxSize)
UINT None msi.MsiIsProductElevated(_In_ LPCTSTR szProductCode,_Out_ BOOL *pfElevated)
UINT None msi.MsiIsProductElevatedW(_In_ LPCTSTR szProductCode,_Out_ BOOL *pfElevated)
UINT None msi.MsiIsProductElevatedA(_In_ LPCTSTR szProductCode,_Out_ BOOL *pfElevated)
HRESULT None None.get_Emulation([out] EmulationType *pVal)
HGROUP WINAPI clusapi.CreateClusterGroupEx(_In_ HCLUSTER hCluster,_In_ LPCWSTR lpszGroupName,_In_opt_ PCLUSTER_CREATE_GROUP_INFO pGroupInfo)
VOID None iphlpapi.InitializeIpInterfaceEntry(_Inout_ PMIB_IPINTERFACE_ROW Row)
NET_API_STATUS None netapi32.NetGetDCName(_In_ LPCWSTR servername,_In_ LPCWSTR domainname,_Out_ LPBYTE *bufptr)
BOOL None d2d1.IsDxgiFormatSupported(format DXGI_FORMAT None)
Uint32 None cimwin32.GetDeviceProperties([in None None,optional] string devicePropertyKeys[],[out] Win32_PnPDeviceProperty deviceProperties[])
UINT None msi.MsiRemovePatches(_In_ LPCTSTR szPatchList,_In_ LPCTSTR szProductCode,_In_ INSTALLTYPE eUninstallType,_In_opt_ LPCTSTR szPropertyList)
UINT None msi.MsiRemovePatchesW(_In_ LPCTSTR szPatchList,_In_ LPCTSTR szProductCode,_In_ INSTALLTYPE eUninstallType,_In_opt_ LPCTSTR szPropertyList)
UINT None msi.MsiRemovePatchesA(_In_ LPCTSTR szPatchList,_In_ LPCTSTR szProductCode,_In_ INSTALLTYPE eUninstallType,_In_opt_ LPCTSTR szPropertyList)
RPC_STATUS RPC_ENTRY rpcrt4.RpcMgmtStatsVectorFree(RPC_STATS_VECTOR **StatsVector None)
HRESULT None None.GetVersion([out] DWORD *pdwMajorVersion,[out] DWORD *pdwMinorVersion)
DWORD WINAPI clusapi.SetClusterServiceAccountPassword(_In_ LPCWSTR lpszClusterName,_In_ LPCWSTR lpszNewPassword,_In_opt_ DWORD dwFlags,_Out_ PCLUSTER_SET_PASSWORD_STATUS lpReturnStatusBuffer,_Inout_ LPDWORD lpcbReturnStatusBufferSize)
HRESULT None None.GetStream([out None None,retval] IStream **stream)
public void None.Error(RealTimeStylus sender None,ErrorData data None)
HRESULT None None.InitPropVariantFromGUIDAsBuffer(_In_ REFGUID guid,_Out_ PROPVARIANT *ppropvar)
BOOL None None.Edit_Undo(HWND hwndCtl None)
HRESULT None None.StringCbCatN(_Inout_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc,_In_ size_t cbMaxAppend)
HRESULT None None.StringCbCatNW(_Inout_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc,_In_ size_t cbMaxAppend)
HRESULT None None.StringCbCatNA(_Inout_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc,_In_ size_t cbMaxAppend)
HRESULT None None.get_responseStream(VARIANT* pvarVal None)
BOOL WINAPI user32.SetWindowDisplayAffinity(_In_ HWND hWnd,_In_ DWORD dwAffinity)
protected void None.AddedControl(Control control None,int index None)
HRESULT None None.GetCertificateSet([out None None,retval] IOpcCertificateSet **certificateSet)
DWORD WINAPI wlanapi.WlanEnumInterfaces(_In_ HANDLE hClientHandle,_Reserved_ PVOID pReserved,_Out_ PWLAN_INTERFACE_INFO_LIST *ppInterfaceList)
BOOL WINAPI winhttp.WinHttpQueryHeaders(_In_ HINTERNET hRequest,_In_ DWORD dwInfoLevel,_In_opt_ LPCWSTR pwszName,_Out_ LPVOID lpBuffer,_Inout_ LPDWORD lpdwBufferLength,_Inout_ LPDWORD lpdwIndex)
HRESULT WINAPI webservices.WsAbortChannel(_In_ WS_CHANNEL* channel,_In_opt_ WS_ERROR* error)
BOOL CALLBACK None.EnumChildProc(_In_ HWND hwnd,_In_ LPARAM lParam)
BOOL WINAPI dbghelp.SymUnloadModule64(_In_ HANDLE hProcess,_In_ DWORD64 BaseOfDll)
MI_INLINE MI_Result None.MI_DestinationOptions_SetEncodePortInSPN(_Inout_ MI_DestinationOptions *options,MI_Boolean encodePort None)
BOOL None shell32.SHFindFiles(_In_opt_ PCIDLIST_ABSOLUTE pidlFolder,_In_opt_ PCIDLIST_ABSOLUTE pidlSaveFile)
uint32 None wvrcimprov.PairRemoteSubsystem([in] string ComputerName)
ULONG WINAPI None.ControlCallback(_In_ ULONG RequestCode,_In_ PVOID Buffer,_In_ ULONG BufferSize)
public void None.StartTracing(String profileFileName None,String profileName None)
VOID None propsys.ClearVariantArray(_In_ VARIANT *pvars,_In_ UINT cVars)
HRESULT None azroles.get_PolicyAdministratorsName([out] VARIANT *pvarAdmins)
HRESULT None msdrm.DRMDuplicateSession(_In_ DRMHSESSION hSessionIn,_Out_ DRMHSESSION *phSessionOut)
IPermission None None.Intersect(IPermission target None)
LONG WINAPI tapi32.lineInitializeEx(LPHLINEAPP lphLineApp None,HINSTANCE hInstance None,LINECALLBACK lpfnCallback None,LPCSTR lpszFriendlyAppName None,LPDWORD lpdwNumDevs None,LPDWORD lpdwAPIVersion None,LPLINEINITIALIZEEXPARAMS lpLineInitializeExParams None)
LONG WINAPI tapi32.lineInitializeExW(LPHLINEAPP lphLineApp None,HINSTANCE hInstance None,LINECALLBACK lpfnCallback None,LPCSTR lpszFriendlyAppName None,LPDWORD lpdwNumDevs None,LPDWORD lpdwAPIVersion None,LPLINEINITIALIZEEXPARAMS lpLineInitializeExParams None)
LONG WINAPI tapi32.lineInitializeExA(LPHLINEAPP lphLineApp None,HINSTANCE hInstance None,LINECALLBACK lpfnCallback None,LPCSTR lpszFriendlyAppName None,LPDWORD lpdwNumDevs None,LPDWORD lpdwAPIVersion None,LPLINEINITIALIZEEXPARAMS lpLineInitializeExParams None)
BOOL None wtsapi32.WTSSetUserConfig(_In_ LPTSTR pServerName,_In_ LPTSTR pUserName,_In_ WTS_CONFIG_CLASS WTSConfigClass,_In_ LPTSTR pBuffer,_In_ DWORD DataLength)
BOOL None wtsapi32.WTSSetUserConfigW(_In_ LPTSTR pServerName,_In_ LPTSTR pUserName,_In_ WTS_CONFIG_CLASS WTSConfigClass,_In_ LPTSTR pBuffer,_In_ DWORD DataLength)
BOOL None wtsapi32.WTSSetUserConfigA(_In_ LPTSTR pServerName,_In_ LPTSTR pUserName,_In_ WTS_CONFIG_CLASS WTSConfigClass,_In_ LPTSTR pBuffer,_In_ DWORD DataLength)
HRESULT None None.get_final(SCHEMADERIVATIONMETHOD* final None)
uint32 None netpeerdistcim.Remove_BCDataCacheExtensionByPath([in] string Path,[in] boolean Force)
HRESULT None ole32.CoGetStandardMarshal(_In_ REFIID riid,_In_ LPUNKNOWN pUnk,_In_ DWORD dwDestContext,_In_opt_ LPVOID pvDestContext,_In_ DWORD mshlflags,_Out_ LPMARSHAL *ppMarshal)
HRESULT None None.OnSelectStream(HRESULT hr None,QWORD qwContext None)
DWORD STDAPI mfplat.MFMapDXGIFormatToDX9Format(_In_ DXGI_FORMAT dx11)
DWORD WINAPI None.Arbitrate(_In_ RESID Resource,_In_ PQUORUM_RESOURCE_LOST LostQuorumResource)
unsigned char None._interlockedbittestandset(long *a None,long b None)
HRESULT None None.GetCustomObjectEnumerator([out None None,retval] IOpcSignatureCustomObjectEnumerator **customObjectEnumerator)
UINT None msi.MsiEnumProducts(_In_ DWORD iProductIndex,_Out_ LPTSTR lpProductBuf)
UINT None msi.MsiEnumProductsW(_In_ DWORD iProductIndex,_Out_ LPTSTR lpProductBuf)
UINT None msi.MsiEnumProductsA(_In_ DWORD iProductIndex,_Out_ LPTSTR lpProductBuf)
HCURSOR None oleaut32.OleIconToCursor(_In_ HINSTANCE hinstExe,_In_ HICON hIcon)
BOOL WINAPI kernel32.DequeueUmsCompletionListItems(_In_ PUMS_COMPLETION_LIST UmsCompletionList,_In_ DWORD WaitTimeOut,_Out_ PUMS_CONTEXT *UmsThreadList)
PVOID WINAPI kernel32.MapViewOfFileFromApp(_In_ HANDLE hFileMappingObject,_In_ ULONG DesiredAccess,_In_ ULONG64 FileOffset,_In_ SIZE_T NumberOfBytesToMap)
UINT None msi.MsiSetFeatureAttributes(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szFeature,_In_ DWORD dwAttributes)
UINT None msi.MsiSetFeatureAttributesW(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szFeature,_In_ DWORD dwAttributes)
UINT None msi.MsiSetFeatureAttributesA(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szFeature,_In_ DWORD dwAttributes)
DWORD WINAPI wlanapi.WFDCancelOpenSession(_In_ PHANDLE hSessionHandle)
HRESULT None oleaut32.VarI4FromUI8(_In_ ULONG64 ui64In,_Out_ LONG *plOut)
HRESULT None windowscodecs.CreateInstance([out] IWICMetadataReader **ppIReader)
IPermission None None.Union(IPermission target None)
DWORD None credui.CredUIReadSSOCredW(_In_ PCWSTR pszRealm,_Out_ PWSTR *ppszUsername)
BOOL WINAPI dbghelp.SymEnumLines(_In_ HANDLE hProcess,_In_ ULONG64 Base,_In_opt_ PCTSTR Obj,_In_opt_ PCTSTR File,_In_ PSYM_ENUMLINES_CALLBACK EnumLinesCallback,_In_opt_ PVOID UserContext)
BOOL WINAPI dbghelp.SymEnumLinesW(_In_ HANDLE hProcess,_In_ ULONG64 Base,_In_opt_ PCTSTR Obj,_In_opt_ PCTSTR File,_In_ PSYM_ENUMLINES_CALLBACK EnumLinesCallback,_In_opt_ PVOID UserContext)
BOOL WINAPI dbghelp.SymEnumLines(_In_ HANDLE hProcess,_In_ ULONG64 Base,_In_opt_ PCTSTR Obj,_In_opt_ PCTSTR File,_In_ PSYM_ENUMLINES_CALLBACK EnumLinesCallback,_In_opt_ PVOID UserContext)
HRESULT WINAPI dssec.DSEditSecurity(_In_ HWND hwndOwner,_In_ LPCWSTR pwszObjectPath,_In_opt_ LPCWSTR pwszObjectClass,_In_ DWORD dwFlags,_In_opt_ LPCWSTR *pwszCaption,_In_opt_ PFNREADOBJECTSECURITY pfnReadSD,_In_opt_ PFNWRITEOBJECTSECURITY pfnWriteSD,_In_ LPARAM lpContext)
DWORD APIENTRY None.CancelConnectNotify(_Inout_ LPNOTIFYINFO lpNotifyInfo,_In_ LPNOTIFYCANCEL lpCancelInfo)
HRESULT None None.GetContentRect([out] RECT *contentSize)
HRESULT None None.GetScissorRect([out] RECT *pRect)
HRESULT WINAPI iscsidsc.LogoutIscsiTarget(_In_ PISCSI_UNIQUE_SESSION_ID UniqueSessionId)
LONG WINAPI tapi32.lineSetLineDevStatus(HLINE hLine None,DWORD dwStatusToChange None,DWORD fStatus None)
ULONG None advapi32.PerfDecrementULongCounterValue(_In_ HANDLE hProvider,_In_ PPERF_COUNTERSET_INSTANCE pInstance,_In_ ULONG CounterId,_In_ ULONG lValue)
HRESULT None None.CreatePackage([out None None,retval] IXpsOMPackage **package)
BOOL None None.Header_GetStateImageList(HWND hwndHD None)
HRESULT None None.get_RootURL([out None None,retval] LPWSTR *ppszURL)
ULONG WINAPI advapi32.EnumerateTraceGuidsEx(_In_ TRACE_QUERY_INFO_CLASS TraceQueryInfoClass,_In_ PVOID InBuffer,_In_ ULONG InBufferSize,_Out_ PVOID OutBuffer,_In_ ULONG OutBufferSize,_Out_ PULONG ReturnLength)
HRESULT None rdpencom.get_ConnectivityInfo([out] IUnknown **ppVal)
HRESULT WINAPI d3dcompiler_47.D3DReflectLibrary(_In_ LPCVOID pSrcData,_In_ SIZE_T SrcDataSize,_In_ REFIID riid,_Out_ LPVOID *ppReflector)
uint32 None wvrcimprov.CreateStretchPartnership([in] string ClusterName,[in] string SourceRGName,[in] string DestinationRGName,[in] boolean PreventReplication,[in] boolean Seeded,[out] MSFT_WvrReplicationPartnership Output[])
NTSTATUS None None.ZwQueryObject(_In_opt_ HANDLE Handle,_In_ OBJECT_INFORMATION_CLASS ObjectInformationClass,_Out_opt_ PVOID ObjectInformation,_In_ ULONG ObjectInformationLength,_Out_opt_ PULONG ReturnLength)
uint32 None dhcpserverpsprovider.Set([in] string ComputerName,[in] boolean BindingState,[in] string InterfaceAlias[],[in] boolean PassThru,[out] DhcpServerv6Binding cmdletOutput[])
VOID WINAPI advapi32.BuildExplicitAccessWithName(_Inout_ PEXPLICIT_ACCESS pExplicitAccess,_In_opt_ LPTSTR pTrusteeName,_In_ DWORD AccessPermissions,_In_ ACCESS_MODE AccessMode,_In_ DWORD Inheritance)
VOID WINAPI advapi32.BuildExplicitAccessWithNameW(_Inout_ PEXPLICIT_ACCESS pExplicitAccess,_In_opt_ LPTSTR pTrusteeName,_In_ DWORD AccessPermissions,_In_ ACCESS_MODE AccessMode,_In_ DWORD Inheritance)
VOID WINAPI advapi32.BuildExplicitAccessWithNameA(_Inout_ PEXPLICIT_ACCESS pExplicitAccess,_In_opt_ LPTSTR pTrusteeName,_In_ DWORD AccessPermissions,_In_ ACCESS_MODE AccessMode,_In_ DWORD Inheritance)
BOOL None wtsapi32.WTSVirtualChannelPurgeInput(_In_ HANDLE hChannelHandle)
HRESULT None msdrm.DRMSetUsagePolicy(_In_ DRMPUBHANDLE hIssuanceLicense,_In_ DRM_USAGEPOLICY_TYPE eUsagePolicyType,_In_ BOOL fDelete,_In_ BOOL fExclusion,_In_ PWSTR wszName,_In_ PWSTR wszMinVersion,_In_ PWSTR wszMaxVersion,_In_ PWSTR wszPublicKey,_In_ PWSTR wszDigestAlgorithm,_In_ BYTE *pbDigest,_In_ UINT cbDigest)
HRESULT None msdrm.DRMGetEnvironmentInfo(_In_ DRMENVHANDLE handle,_In_ PWSTR wszAttribute,_Out_ DRMENCODINGTYPE *peEncoding,_Inout_ UINT *pcBuffer,_Out_ BYTE *pbBuffer)
HRESULT None mf.MFCreateSampleGrabberSinkActivate(IMFMediaType *pIMFMediaType None,IMFSampleGrabberSinkCallback *pIMFSampleGrabberSinkCallback None,IMFActivate **ppIActivate None)
HRESULT None usp10.ScriptStringFree(_Inout_ SCRIPT_STRING_ANALYSIS *pssa)
BOOL WINAPI wtsapi32.WTSIsChildSessionsEnabled(_Out_ BOOL *pbEnabled)
DWORD PXEAPI wdspxe.PxeRegisterCallback(_In_ HANDLE hProvider,_In_ PXE_CALLBACK_TYPE CallbackType,_In_ PVOID pCallbackFunction,_In_ PVOID pContext)
LONG TSPIAPI None.TSPI_linePickup(DRV_REQUESTID dwRequestID None,HDRVLINE hdLine None,DWORD dwAddressID None,HTAPICALL htCall None,LPHDRVCALL lphdCall None,LPCWSTR lpszDestAddress None,LPCWSTR lpszGroupID None)
VOID APIENTRY None.MQFreeSecurityContext(HANDLE hSecurityContext None)
NET_API_STATUS None netapi32.NetGroupDel(_In_ LPCWSTR servername,_In_ LPCWSTR groupname)
BOOL WINAPI dbghelp.SymMatchString(_In_ PCTSTR string,_In_ PCTSTR expression,_In_ BOOL fCase)
BOOL WINAPI dbghelp.SymMatchStringW(_In_ PCTSTR string,_In_ PCTSTR expression,_In_ BOOL fCase)
BOOL WINAPI dbghelp.SymMatchString(_In_ PCTSTR string,_In_ PCTSTR expression,_In_ BOOL fCase)
public void None.Commit(IDictionary savedState None)
NET_API_STATUS None netapi32.NetScheduleJobDel(_In_opt_ LPCWSTR Servername,_In_ DWORD MinJobId,_In_ DWORD MaxJobId)
UINT None msi.MsiProvideQualifiedComponentEx(_In_ LPCTSTR szComponent,_In_ LPCTSTR szQualifier,_In_ DWORD dwInstallMode,_In_ LPTSTR szProduct,_In_ DWORD dwUnused1,_In_ DWORD dwUnused2,_Out_ LPTSTR lpPathBuf,_Inout_ DWORD *pcchPathBuf)
UINT None msi.MsiProvideQualifiedComponentExW(_In_ LPCTSTR szComponent,_In_ LPCTSTR szQualifier,_In_ DWORD dwInstallMode,_In_ LPTSTR szProduct,_In_ DWORD dwUnused1,_In_ DWORD dwUnused2,_Out_ LPTSTR lpPathBuf,_Inout_ DWORD *pcchPathBuf)
UINT None msi.MsiProvideQualifiedComponentExA(_In_ LPCTSTR szComponent,_In_ LPCTSTR szQualifier,_In_ DWORD dwInstallMode,_In_ LPTSTR szProduct,_In_ DWORD dwUnused1,_In_ DWORD dwUnused2,_Out_ LPTSTR lpPathBuf,_Inout_ DWORD *pcchPathBuf)
Sub None None.comment(strChars As String)
TRUSTEE_TYPE WINAPI advapi32.GetTrusteeType(_In_opt_ PTRUSTEE pTrustee)
TRUSTEE_TYPE WINAPI advapi32.GetTrusteeTypeW(_In_opt_ PTRUSTEE pTrustee)
TRUSTEE_TYPE WINAPI advapi32.GetTrusteeTypeA(_In_opt_ PTRUSTEE pTrustee)
HRESULT None ole32.OleSetAutoConvert(_In_ REFCLSID clsidOld,_In_ REFCLSID clsidNew)
BOOL WINAPI clusapi.GetClusterResourceNetworkName(_In_ HRESOURCE hResource,_Out_ LPWSTR lpBuffer,_Inout_ LPDWORD nSize)
UINT None msi.MsiEnumFeatures(_In_ LPCTSTR szProduct,_In_ DWORD iFeatureIndex,_Out_ LPTSTR lpFeatureBuf,_Out_ LPTSTR lpParentBuf)
UINT None msi.MsiEnumFeaturesW(_In_ LPCTSTR szProduct,_In_ DWORD iFeatureIndex,_Out_ LPTSTR lpFeatureBuf,_Out_ LPTSTR lpParentBuf)
UINT None msi.MsiEnumFeaturesA(_In_ LPCTSTR szProduct,_In_ DWORD iFeatureIndex,_Out_ LPTSTR lpFeatureBuf,_Out_ LPTSTR lpParentBuf)
BOOL WINAPI kernel32.GetNumaNodeProcessorMask(_In_ UCHAR Node,_Out_ PULONGLONG ProcessorMask)
HRESULT None mf.MFCreateASFIndexerByteStream(_In_ IMFByteStream *pIContentByteStream,_In_ QWORD cbIndexStartOffset,_Out_ IMFByteStream **pIIndexByteStream)
public void None.SetValue(DependencyProperty dp None,Object value None)
DWORD None None.MonthCal_GetMaxSelCount(HWND hwndMC None)
PSSTDAPI None propsys.PSLookupPropertyHandlerCLSID(_In_ PCWSTR pszFilePath,_Out_ CLSID *pclsid)
HCURSOR None None.ListView_GetHotCursor(HWND hwndLV None)
UINT None msi.MsiVerifyDiskSpace(_In_ MSIHANDLE hInstall)
BOOL None kernel32.EnumCalendarInfo(_In_ CALINFO_ENUMPROC pCalInfoEnumProc,_In_ LCID Locale,_In_ CALID Calendar,_In_ CALTYPE CalType)
BOOL None kernel32.EnumCalendarInfoW(_In_ CALINFO_ENUMPROC pCalInfoEnumProc,_In_ LCID Locale,_In_ CALID Calendar,_In_ CALTYPE CalType)
BOOL None kernel32.EnumCalendarInfoA(_In_ CALINFO_ENUMPROC pCalInfoEnumProc,_In_ LCID Locale,_In_ CALID Calendar,_In_ CALTYPE CalType)
BOOL None None.MonthCal_GetToday(HWND hwndMC None,LPSYSTEMTIME lpToday None)
HWND WINAPI comdlg32.ReplaceText(_Inout_ LPFINDREPLACE lpfr)
HWND WINAPI comdlg32.ReplaceTextW(_Inout_ LPFINDREPLACE lpfr)
HWND WINAPI comdlg32.ReplaceTextA(_Inout_ LPFINDREPLACE lpfr)
HRESULT None None.get_responseStream(VARIANT* pvarBody None)
LSTATUS None shlwapi.SHRegSetPath(_In_ HKEY hkey,_In_ LPCTSTR pszSubkey,_In_ LPCTSTR pszValue,_In_ LPCTSTR pszPath,DWORD dwFlags None)
LSTATUS None shlwapi.SHRegSetPathW(_In_ HKEY hkey,_In_ LPCTSTR pszSubkey,_In_ LPCTSTR pszValue,_In_ LPCTSTR pszPath,DWORD dwFlags None)
LSTATUS None shlwapi.SHRegSetPathA(_In_ HKEY hkey,_In_ LPCTSTR pszSubkey,_In_ LPCTSTR pszValue,_In_ LPCTSTR pszPath,DWORD dwFlags None)
public None None.NTAccount(String name None)
DWORD WINAPI clusapi.SetClusterName(_In_ HCLUSTER hCluster,_In_ LPCWSTR lpszNewClusterName)
DWORD None iphlpapi.CreateProxyArpEntry(_In_ DWORD dwAddress,_In_ DWORD dwMask,_In_ DWORD dwIfIndex)
HWND WINAPI user32.GetAncestor(_In_ HWND hwnd,_In_ UINT gaFlags)
LONG None None.CPlApplet(HWND hwndCPl None,UINT uMsg None,LPARAM lParam1 None,LPARAM lParam2 None)
HRESULT APIENTRY None.MQOpenQueue(LPCWSTR lpwcsFormatName None,DWORD dwAccess None,DWORD dwShareMode None,QUEUEHANDLE * phQueue)
BOOL WINAPI user32.SetMenuInfo(_In_ HMENU hmenu,_In_ LPCMENUINFO lpcmi)
NTSTATUS None None.MapBuffer(_In_ PSecBuffer InputBuffer,_Out_ PSecBuffer OutputBuffer)
BOOL None kernel32.IsValidLocale(_In_ LCID Locale,_In_ DWORD dwFlags)
DWORD None shlwapi.CharUpperBuffWrapW(_In_ LPWSTR pch,_In_ DWORD cchLength)
HRESULT None None.get_IsNamedStream([out] VARIANT_BOOL *pVal)
BOOL WINAPI dbghelp.SymGetTypeFromName(_In_ HANDLE hProcess,_In_ ULONG64 BaseOfDll,_In_ PCTSTR Name,_Inout_ PSYMBOL_INFO Symbol)
BOOL WINAPI dbghelp.SymGetTypeFromNameW(_In_ HANDLE hProcess,_In_ ULONG64 BaseOfDll,_In_ PCTSTR Name,_Inout_ PSYMBOL_INFO Symbol)
BOOL WINAPI dbghelp.SymGetTypeFromName(_In_ HANDLE hProcess,_In_ ULONG64 BaseOfDll,_In_ PCTSTR Name,_Inout_ PSYMBOL_INFO Symbol)
HRESULT None windowscodecs.IWICBitmapDecoder_GetFrameCount_Proxy(_In_ IWICBitmapDecoder *THIS_PTR,_Out_ UINT *pCount)
VOID None None.AuditLogon(_In_ NTSTATUS Status,_In_ NTSTATUS SubStatus,_In_ PUNICODE_STRING AccountName,_In_ PUNICODE_STRING AuthenticatingAuthority,_In_ PUNICODE_STRING WorkstationName,_In_opt_ PSID UserSid,_In_ SECURITY_LOGON_TYPE LogonType,_In_ PTOKEN_SOURCE TokenSource,_In_ PLUID LogonId)
MyDir None None.SubDir1(mapped from VDir1)
BOOL None kernel32.DeactivateActCtx(_In_ DWORD dwFlags,_In_ ULONG_PTR ulCookie)
LPVOID WINAPI kernel32.CreateFiberEx(_In_ SIZE_T dwStackCommitSize,_In_ SIZE_T dwStackReserveSize,_In_ DWORD dwFlags,_In_ LPFIBER_START_ROUTINE lpStartAddress,_In_opt_ LPVOID lpParameter)
HRESULT None None.GetLastModifiedBy([out None None,retval] LPWSTR *lastModifiedBy)
SerializableAttribute None None.AttributeUsageAttribute(AttributeTargets.Class None None)
protected void None.OnBindingContextChanged(EventArgs e None)
HRESULT None msdrm.DRMGetUsagePolicy(_In_ DRMPUBHANDLE hIssuanceLicense,_In_ UINT uIndex,_Out_ DRM_USAGEPOLICY_TYPE *peUsagePolicyType,_Out_ BOOL *pfExclusion,_Inout_ UINT *puNameLength,_Out_ PWSTR wszName,_Inout_ UINT *puMinVersionLength,_Out_ PWSTR wszMinVersion,_Inout_ UINT *puMaxVersionLength,_Out_ PWSTR wszMaxVersion,_Inout_ UINT *puPublicKeyLength,_Out_ PWSTR wszPublicKey,_Inout_ UINT *puDigestAlgorithmLength,_Out_ PWSTR wszDigestAlgorithm,_Inout_ UINT *pcbDigest,_Out_ BYTE *pbDigest)
DWORD WINAPI nmapi.MacTypeToAddressType(_In_ DWORD MacType)
HRESULT None msdrm.DRMGetTime(_In_ DRMENVHANDLE hEnv,_In_ DRMTIMETYPE eTimerIdType,_Out_ SYSTEMTIME *poTimeObject)
uint32 None dnsserverpsprovider.AddByAfsdb([in] uint16 SubType,[in] string ZoneName,[in] string ServerName,[in] datetime TimeToLive,[in] boolean AllowUpdateAny,[in] string Name,[in] string ComputerName,[in] boolean AgeRecord,[in] boolean Afsdb,[in] boolean PassThru,[in] string ZoneScope,[out] DnsServerResourceRecord cmdletOutput)
uint32_t None None.XMVectorGetIntByIndex(XMVECTOR V None,size_t i None)
HCONV WINAPI user32.DdeReconnect(_In_ HCONV hConv)
HRESULT None mf.MFGetSupportedSchemes(_Out_ PROPVARIANT *pPropVarSchemeArray)
protected void None.Select(boolean directed None,boolean forward None)
UINT None msi.MsiSourceListAddMediaDisk(_In_ LPCTSTR szProductCodeOrPatchCode,_In_opt_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD dwOptions,_In_ DWORD dwDiskId,_In_ LPCTSTR szVolumeLabel,_In_opt_ LPCTSTR szDiskPrompt)
UINT None msi.MsiSourceListAddMediaDiskW(_In_ LPCTSTR szProductCodeOrPatchCode,_In_opt_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD dwOptions,_In_ DWORD dwDiskId,_In_ LPCTSTR szVolumeLabel,_In_opt_ LPCTSTR szDiskPrompt)
UINT None msi.MsiSourceListAddMediaDiskA(_In_ LPCTSTR szProductCodeOrPatchCode,_In_opt_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD dwOptions,_In_ DWORD dwDiskId,_In_ LPCTSTR szVolumeLabel,_In_opt_ LPCTSTR szDiskPrompt)
BOOL WINAPI clfsw32.GetLogFileInformation(_In_ HANDLE hLog,_Inout_ PCLFS_INFORMATION pinfoBuffer,_Inout_ PULONG cbBuffer)
DWORD WINAPI mstlsapi.TLSLicenseEnumNext(_In_ TLS_HANDLE hHandle,_In_ LSLicense *lpLicense,_Out_ PDWORD pdwErrCode)
HRESULT None None.TransferObjectData(BYTE *pData None,DWORD *pdwSize None,BYTE[WMDM_MAC_LENGTH] abMac None)
NET_API_STATUS None netapi32.NetApiBufferSize(_In_ LPVOID Buffer,_Out_ LPDWORD ByteCount)
VOID None None.PropSheet_EnableWizButtons(HWND hDlg None,DWORD dwState None,DWORD dwMask None)
VOID None None.WdfIoQueueStopSynchronously(_In_ WDFQUEUE Queue)
protected ResourceSet None.InternalGetResourceSet(CultureInfo culture None,boolean createIfNotExists None,boolean tryParents None)
HRESULT None mfplat.MFGetPlaneSize(_In_ DWORD format,_In_ DWORD dwWidth,_In_ DWORD dwHeight,_Out_ DWORD *pdwPlaneSize)
HRESULT None None.get_CurrentPartitionID([out None None,retval] BSTR *pbstrPartitionID)
BOOL WINAPI advapi32.StartService(_In_ SC_HANDLE hService,_In_ DWORD dwNumServiceArgs,_In_opt_ LPCTSTR *lpServiceArgVectors)
BOOL WINAPI advapi32.StartServiceW(_In_ SC_HANDLE hService,_In_ DWORD dwNumServiceArgs,_In_opt_ LPCTSTR *lpServiceArgVectors)
BOOL WINAPI advapi32.StartServiceA(_In_ SC_HANDLE hService,_In_ DWORD dwNumServiceArgs,_In_opt_ LPCTSTR *lpServiceArgVectors)
DWORD None None.MonthCal_GetCalendarCount(HWND hmc None)
HRESULT None None.get_ConfigID([out] BSTR *virtualMachineConfigID)
BOOL WINAPI user32.BringWindowToTop(_In_ HWND hWnd)
BOOL None None.Edit_SetCueBannerTextFocused(HWND hwnd None,LPCWSTR lpcwText None,BOOL fDrawFocused None)
NET_API_STATUS None netapi32.NetUserAdd(_In_ LMSTR servername,_In_ DWORD level,_In_ LPBYTE buf,_Out_ LPDWORD parm_err)
HRESULT STDAPI cldapi.CfReleaseProtectedHandle(_In_ HANDLE ProtectedHandle)
HRESULT None None.NumberOfItems([out None None,retval] LONG *plCount)
BOOL None kernel32.RtlIsValidLocaleName(_In_ LPCWSTR LocaleName,_In_ ULONG Flags)
HRESULT None None.LongPtrAdd(_In_ LONG_PTR lAugend,_In_ LONG_PTR lAddend,_Out_ LONG_PTR *plResult)
HRESULT None None.DWordPtrMult(_In_ DWORD_PTR dwMultiplicand,_In_ DWORD_PTR dwMultiplier,_Out_ DWORD_PTR *pdwResult)
VOID None None.WdfDeviceInitSetPowerPageable(_In_ PWDFDEVICE_INIT DeviceInit)
HRESULT None None.get_DefaultPath(BSTR* pVal None)
BOOL WINAPI dbghelp.MiniDumpReadDumpStream(_In_ PVOID BaseOfDump,_In_ ULONG StreamNumber,_Out_ PMINIDUMP_DIRECTORY *Dir,_Out_ PVOID *StreamPointer,_Out_ ULONG *StreamSize)
BOOL WINAPI userenv.CreateEnvironmentBlock(_Out_ LPVOID *lpEnvironment,_In_opt_ HANDLE hToken,_In_ BOOL bInherit)
uint32 None wvrcimprov.QueryPartitionInfo([in] string ReplicationGroupName,[in] string PartitionId,[out] uint64 CapacityInBytes,[out] uint64 FreeSpaceInBytes,[out] uint16 PercentLogConsumed,[out] uint64 TimeToLogWrapInSeconds,[out] uint64 IndexSizeInBytes)
PVOID WINAPI None.AllocatePrivateHeap(_In_ SIZE_T Length)
BOOLEAN WINAPI powrprof.ReadProcessorPwrScheme(_In_ UINT uiID,_Out_ PMACHINE_PROCESSOR_POWER_POLICY pMachineProcessorPowerPolicy)
HRESULT WINAPI cryptxml.CryptXmlImportPublicKey(DWORD dwFlags None,_In_ CRYPT_XML_KEY_VALUE *pKeyValue,_Out_ BCRYPT_KEY_HANDLE *phKey)
HRESULT None None.FolderRenamed(const BSTR path,const BSTR oldPath)
NTSTATUS None cscapi.CscSearchApiGetInterface(_In_ ULONG Version,_In_ ULONG Cookie,_Out_ CCscSearchApiInterface **Interface)
LRESULT WINAPI uiautomationcore.UiaReturnRawElementProvider(_In_ HWND hwnd,_In_ WPARAM wparam,_In_ LPARAM lparam,_In_ IRawElementProviderSimple *el)
PPERF_COUNTERSET_INSTANCE None advapi32.PerfQueryInstance(_In_ HANDLE hProvider,_In_ LPCGUID CounterSetGuid,_In_ LPCWSTR szInstance,_In_ ULONG dwInstance)
HRESULT None None.Clone([out None None,retval] IXpsOMGlyphs **glyphs)
BOOL WINAPI None.WIMCloseHandle(HANDLE hObject None)
HRESULT None windowscodecs.IWICFastMetadataEncoder_Commit_Proxy(_In_ IWICFastMetadataEncoder *THIS_PTR)
HRESULT None windowscodecs.IWICComponentFactory_CreateQueryWriterFromBlockWriter_Proxy(_In_ IWICComponentFactory *THIS_PTR,_In_ IWICMetadataBlockWriter *pIBlockWriter,_Out_ IWICMetadataQueryWriter **ppIQueryWriter)
BOOL CALLBACK None.MprAdminAcceptNewConnectionEx(_In_ PRAS_CONNECTION_EX *pRasConn)
HRESULT None None.Clone([out None None,retval] IOpcSignatureReferenceEnumerator **copy)
HRESULT None None.GetGlyphMappingCount([out None None,retval] UINT32 *glyphMappingCount)
LPPROPERTYINST WINAPI nmapi.FindPropertyInstance(_In_ HFRAME hFrame,_In_ HPROPERTY hProperty)
HRESULT None None.EnumStorage([out] IMDSPEnumStorage **ppEnumStorage)
UINT None msi.MsiAdvertiseScript(_In_ LPCTSTR szScriptFile,_In_ DWORD dwFlags,_In_ PHKEY phRegData,_In_ BOOL fRemoveItems)
UINT None msi.MsiAdvertiseScriptW(_In_ LPCTSTR szScriptFile,_In_ DWORD dwFlags,_In_ PHKEY phRegData,_In_ BOOL fRemoveItems)
UINT None msi.MsiAdvertiseScriptA(_In_ LPCTSTR szScriptFile,_In_ DWORD dwFlags,_In_ PHKEY phRegData,_In_ BOOL fRemoveItems)
DWORD None None.NPSearchDialog(_In_ HWND hParent,_In_ LPNETRESOURCE lpNetResource,_Out_ LPVOID lpBuffer,_Out_ DWORD cbBuffer,_In_ LPDWORD lpnFlags)
DWORD WINAPI clusapi.AddClusterGroupDependency(_In_ HGROUP hDependentGroup,_In_ HGROUP hProviderGroup)
HRESULT None oleaut32.SafeArrayAllocDescriptorEx(_In_ VARTYPE vt,_In_ UINT cDims,_Out_ SAFEARRAY **ppsaOut)
HRESULT None urlmon.CreateAsyncBindCtx(_In_ DWORD reserved,_In_ IBindStatusCallback *pBSCb,_In_ IEnumFORMATETC *pEFetc,_Out_ IBindCtx **ppBC)
public Evidence None.ProvideAssemblyEvidence(Assembly loadedAssembly None,Evidence inputEvidence None)
INT None ws2_32.WSAGetServiceClassNameByClassId(_In_ LPGUID lpServiceClassId,_Out_ LPTSTR lpszServiceClassName,_Inout_ LPDWORD lpdwBufferLength)
INT None ws2_32.WSAGetServiceClassNameByClassIdW(_In_ LPGUID lpServiceClassId,_Out_ LPTSTR lpszServiceClassName,_Inout_ LPDWORD lpdwBufferLength)
INT None ws2_32.WSAGetServiceClassNameByClassIdA(_In_ LPGUID lpServiceClassId,_Out_ LPTSTR lpszServiceClassName,_Inout_ LPDWORD lpdwBufferLength)
HRESULT None None.GetContainingTypeLib([out] ITypeLib **ppTLib,[out] UINT *pIndex)
UINT None msi.MsiFormatRecord(_In_ MSIHANDLE hInstall,_In_ MSIHANDLE hRecord,_Out_ LPTSTR szResultBuf,_Inout_ DWORD *pcchResultBuf)
UINT None msi.MsiFormatRecordW(_In_ MSIHANDLE hInstall,_In_ MSIHANDLE hRecord,_Out_ LPTSTR szResultBuf,_Inout_ DWORD *pcchResultBuf)
UINT None msi.MsiFormatRecordA(_In_ MSIHANDLE hInstall,_In_ MSIHANDLE hRecord,_Out_ LPTSTR szResultBuf,_Inout_ DWORD *pcchResultBuf)
DWORD WINAPI wlanapi.WlanRegisterNotification(_In_ HANDLE hClientHandle,_In_ DWORD dwNotifSource,_In_ BOOL bIgnoreDuplicate,_In_opt_ WLAN_NOTIFICATION_CALLBACK funcCallback,_In_opt_ PVOID pCallbackContext,_Reserved_ PVOID pReserved,_Out_opt_ PDWORD pdwPrevNotifSource)
DWORD WINAPI wlanapi.WlanHostedNetworkInitSettings(_In_ HANDLE hClientHandle,_Out_opt_ PWLAN_HOSTED_NETWORK_REASON pFailReason,_Reserved_ PVOID pvReserved)
HRESULT None oleaut32.VarBoolFromI4(_In_ LONG lIn,_Out_ VARIANT_BOOL *pboolOut)
UINT None msi.MsiSetTargetPath(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szFolder,_In_ LPCTSTR szFolderPath)
UINT None msi.MsiSetTargetPathW(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szFolder,_In_ LPCTSTR szFolderPath)
UINT None msi.MsiSetTargetPathA(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szFolder,_In_ LPCTSTR szFolderPath)
HWND None None.TreeView_GetToolTips(HWND hwndTV None)
HRESULT None None.GetDeviceFontName([out None None,retval] LPWSTR *deviceFontName)
HRESULT None rtworkq.RtwqAllocateWorkQueue(_In_ RTWQ_WORKQUEUE_TYPE WorkQueueType,_Out_ DWORD *workQueueId)
protected void None.button1_Click(Object sender None,System.EventArgs e None)
HRESULT None rtworkq.RtwqPutWorkItem(_In_ DWORD dwQueue,_In_ LONG lPriority,_In_ IRtwqAsyncResult *result)
BOOL None kernel32.QueryActCtxW(_In_ DWORD dwFlags,_In_ HANDLE hActCtx,_In_opt_ PVOID pvSubInstance,_In_ ULONG ulInfoClass,_Out_ PVOID pvBuffer,_In_opt_ SIZE_T cbBuffer,_Out_opt_ SIZE_T *pcbWrittenOrRequired)
HRESULT None None.GetContentType([out None None,retval] LPWSTR *contentType)
ULONG None advapi32.EnumerateTraceGuids(_Inout_ PTRACE_GUID_PROPERTIES *GuidPropertiesArray,_In_ ULONG PropertyArrayCount,_Out_ PULONG GuidCount)
BOOL WINAPI kernel32.QueryUmsThreadInformation(_In_ PUMS_CONTEXT UmsThread,_In_ UMS_THREAD_INFO_CLASS UmsThreadInfoClass,_Out_ PVOID UmsThreadInformation,_In_ ULONG UmsThreadInformationLength,_Out_opt_ PULONG ReturnLength)
uint32 None wvrcimprov.RemoveTopology([in] string SourceComputerName,[in] string SourceRGName,[in] string DestinationComputerName,[in] string DestinationRGName)
LONG WINAPI tapi32.lineBlindTransfer(HCALL hCall None,LPCSTR lpszDestAddress None,DWORD dwCountryCode None)
LONG WINAPI tapi32.lineBlindTransferW(HCALL hCall None,LPCSTR lpszDestAddress None,DWORD dwCountryCode None)
LONG WINAPI tapi32.lineBlindTransferA(HCALL hCall None,LPCSTR lpszDestAddress None,DWORD dwCountryCode None)
ULONG None advapi32.PerfSetULongCounterValue(_In_ HANDLE hProvider,_In_ PPERF_COUNTERSET_INSTANCE pInstance,_In_ ULONG CounterId,_In_ ULONG lValue)
ULONG TDHAPI tdh.TdhAggregatePayloadFilters(ULONG PayloadFilterCount None,PVOID PayloadFilterPtrs None,_In_opt_ PBOOLEAN EventMatchAllFlags,_Out_ PEVENT_FILTER_DESCRIPTOR EventFilterDescriptor)
ULONG None advapi32.EventActivityIdControl(_In_ ULONG ControlCode,_Inout_ LPGUID ActivityId)
HRESULT None msdrm.DRMRegisterRevocationList(_In_ DRMENVHANDLE hEnv,_In_ PWSTR wszRevocationList)
protected void None.CopyPersonalizationState(WebPart webPartA None,WebPart webPartB None)
HRESULT None ole32.OleRegGetMiscStatus(_In_ REFCLSID clsid,_In_ DWORD dwAspect,_Out_ DWORD *pdwStatus)
void None None.ProcessQuadTessFactorsAvg(in float4 RawEdgeFactors,in float InsideScale,out float4 RoundedEdgeTessFactors,out float2 RoundedInsideTessFactors,out float2 UnroundedInsideTessFactors)
HRESULT None msdrm.DRMGetUserInfo(_In_ DRMPUBHANDLE hUser,_Inout_ UINT *puUserNameLength,_Out_ PWSTR wszUserName,_Inout_ UINT *puUserIdLength,_Out_ PWSTR wszUserId,_Inout_ UINT *puUserIdTypeLength,_Out_ PWSTR wszUserIdType)
HRESULT None ole32.CoSwitchCallContext(_In_opt_ IUnknown *pNewObject,_Out_ IUnknown **ppOldObject)
HRESULT None oleaut32.VarAnd(_In_ LPVARIANT pvarLeft,_In_ LPVARIANT pvarRight,_Out_ LPVARIANT pvarResult)
UINT None msi.MsiProvideAssembly(_In_ LPCTSTR szAssemblyName,_In_ LPCTSTR szAppContext,_In_ DWORD dwInstallMode,_In_ DWORD dwAssemblyInfo,_Out_ LPTSTR lpPathBuf,_Inout_ DWORD *pcchPathBuf)
UINT None msi.MsiProvideAssemblyW(_In_ LPCTSTR szAssemblyName,_In_ LPCTSTR szAppContext,_In_ DWORD dwInstallMode,_In_ DWORD dwAssemblyInfo,_Out_ LPTSTR lpPathBuf,_Inout_ DWORD *pcchPathBuf)
UINT None msi.MsiProvideAssemblyA(_In_ LPCTSTR szAssemblyName,_In_ LPCTSTR szAppContext,_In_ DWORD dwInstallMode,_In_ DWORD dwAssemblyInfo,_Out_ LPTSTR lpPathBuf,_Inout_ DWORD *pcchPathBuf)
NET_API_STATUS None netapi32.NetGetDisplayInformationIndex(_In_ LPCWSTR ServerName,_In_ DWORD Level,_In_ LPCWSTR Prefix,_Out_ LPDWORD Index)
HRESULT None oleaut32.VarI8FromI2(_In_ SHORT sIn,_Out_ LONG64 *pi64Out)
BOOL WINAPI clfsw32.DumpLogRecords(_In_ PWSTR pwszLogFileName,_In_ CLFS_RECORD_TYPE fRecordType,_In_opt_ PCLFS_LSN plsnStart,_In_opt_ PCLFS_LSN plsnEnd,_In_opt_ PFILE pstrmOut,_In_opt_ CLFS_PRINT_RECORD_ROUTINE pfnPrintRecord,_In_opt_ CLFS_BLOCK_ALLOCATION pfnAllocBlock,_In_opt_ CLFS_BLOCK_DEALLOCATION pfnFreeBlock,_In_opt_ PVOID pvBlockAllocContext,_In_ ULONG cbBlock,_In_ ULONG cMaxBlocks)
HRESULT None None.GetFrameCount([out] UINT16 *frameCount)
VOID WINAPI drt.DrtDeletePnrpBootstrapResolver(_In_ DRT_BOOTSTRAP_PROVIDER *pResolver)
RPC_STATUS RPC_ENTRY rpcrt4.RpcImpersonateClientContainer(_In_opt_ RPC_BINDING_HANDLE BindingHandle)
PSTR None shlwapi.StrFormatByteSizeA(DWORD dw None,_Out_ PSTR pszBuf,UINT cchBuf None)
HRESULT APIENTRY None.MQSendMessage(QUEUEHANDLE hDestinationQueue None,MQMSGPROPS * pMessageProps,ITransaction * pTransaction)
BOOL WINAPI user32.IsIconic(_In_ HWND hWnd)
BOOL WINAPI user32.IsHungAppWindow(_In_ HWND hWnd)
int None None._strnicmp(const char *string1,const char *string2,size_t count None)
public void None.Write(byte[] array None,int offset None,int count None)
SECURITY_STATUS SEC_Entry sspicli.EnumerateSecurityPackages(_In_ PULONG pcPackages,_In_ PSecPkgInfo *ppPackageInfo)
SECURITY_STATUS SEC_Entry sspicli.EnumerateSecurityPackagesW(_In_ PULONG pcPackages,_In_ PSecPkgInfo *ppPackageInfo)
SECURITY_STATUS SEC_Entry sspicli.EnumerateSecurityPackagesA(_In_ PULONG pcPackages,_In_ PSecPkgInfo *ppPackageInfo)
int None None._strnicmp(const char *string1,const char *string2,size_t count None)
BOOL WINAPI kernel32.QueueUserWorkItem(_In_ LPTHREAD_START_ROUTINE Function,_In_opt_ PVOID Context,_In_ ULONG Flags)
DWORD64 WINAPI dbghelp.SymLoadModuleEx(_In_ HANDLE hProcess,_In_ HANDLE hFile,_In_ PCTSTR ImageName,_In_ PCTSTR ModuleName,_In_ DWORD64 BaseOfDll,_In_ DWORD DllSize,_In_ PMODLOAD_DATA Data,_In_ DWORD Flags)
DWORD64 WINAPI dbghelp.SymLoadModuleExW(_In_ HANDLE hProcess,_In_ HANDLE hFile,_In_ PCTSTR ImageName,_In_ PCTSTR ModuleName,_In_ DWORD64 BaseOfDll,_In_ DWORD DllSize,_In_ PMODLOAD_DATA Data,_In_ DWORD Flags)
DWORD64 WINAPI dbghelp.SymLoadModuleEx(_In_ HANDLE hProcess,_In_ HANDLE hFile,_In_ PCTSTR ImageName,_In_ PCTSTR ModuleName,_In_ DWORD64 BaseOfDll,_In_ DWORD DllSize,_In_ PMODLOAD_DATA Data,_In_ DWORD Flags)
HRESULT WINAPI iscsidsc.ReportIscsiTargetPortals(_In_opt_ PWCHAR InitiatorName,_In_ PWCHAR TargetName,_In_opt_ PUSHORT TargetPortalTag,_Inout_ PULONG ElementCount,_Out_ PISCSI_TARGET_PORTALW Portals)
HRESULT WINAPI iscsidsc.ReportIscsiTargetPortalsW(_In_opt_ PWCHAR InitiatorName,_In_ PWCHAR TargetName,_In_opt_ PUSHORT TargetPortalTag,_Inout_ PULONG ElementCount,_Out_ PISCSI_TARGET_PORTALW Portals)
HRESULT WINAPI iscsidsc.ReportIscsiTargetPortalsA(_In_opt_ PWCHAR InitiatorName,_In_ PWCHAR TargetName,_In_opt_ PUSHORT TargetPortalTag,_Inout_ PULONG ElementCount,_Out_ PISCSI_TARGET_PORTALW Portals)
uint32 None wvrcimprov.GetPartnership([in] string SourceRGName,[in] string SourceComputerName,[in] string DestinationRGName,[in] string DestinationComputerName,[out] MSFT_WvrReplicationPartnership Output[])
HRESULT WINAPI webservices.WsMatchPolicyAlternative(_In_ WS_POLICY* policy,_In_ ULONG alternativeIndex,_In_ WS_POLICY_CONSTRAINTS* policyConstraints,_In_ BOOL matchRequired,_In_ WS_HEAP* heap,_In_opt_ WS_ERROR* error)
uint32 None wvrcimprov.WvrAddReplicaById([in] string ReplicationGroupName,[in] string VolumeName[],[in] string ReplicaSetId[],[in] boolean IsPrimary,[in] boolean Seeded)
HRESULT None None.Delete(VOID None None)
public void None.StopTracing(String profileFileName None,String propertyName None,String outputFileName None)
HRESULT None windowscodecs.IWICBitmapCodecInfo_DoesSupportLossless_Proxy(_In_ IWICBitmapCodecInfo *THIS_PTR,_Out_ BOOL *pfSupportLossless)
HRESULT None windowscodecs.IWICPalette_GetColorCount_Proxy(_In_ IWICPalette *THIS_PTR,_Out_ UINT *pcCount)
uint32 None wvrcimprov.WvrGetUserAccess([out] MSFT_WvrUser Output[])
HRESULT None None.FolderItemCountChanged(const BSTR path,LONG itemCountType None)
uint32 None wvrcimprov.SmapiQueryReplicatedPartitions([in] string ComputerName,[in] string ReplicationGroupName,[out] string PartitionObjectIds[])
HRESULT None usp10.ScriptSubstituteSingleGlyph(_In_opt_ HDC hdc,_Inout_ SCRIPT_CACHE *psc,_In_opt_ SCRIPT_ANALYSIS *psa,_In_ OPENTYPE_TAG tagScript,_In_ OPENTYPE_TAG tagLangSys,_In_ OPENTYPE_TAG tagFeature,_In_ LONG lParameter,_In_ WORD wGlyphId,_Out_ WORD *pwOutGlyphId)
HRESULT None msdrm.DRMGetUnboundLicenseAttributeCount(_In_ DRMQUERYHANDLE hQueryRoot,_In_ PWSTR wszAttributeType,_Out_ UINT *pcAttributes)
Boolean None advapi32.EventEnabled(_In_ REGHANDLE RegHandle,_In_ PCEVENT_DESCRIPTOR EventDescriptor)
BOOL WINAPI kernel32.GetSystemCpuSetInformation(_Out_opt_ PSYSTEM_CPU_SET_INFORMATION Information,_In_ ULONG BufferLength,_Out_ PULONG ReturnedLength,_In_opt_ HANDLE Process,_Reserved_ ULONG Flags)
BOOL None None.IsVarTypeInteger(_In_ VARTYPE vt)
HRESOURCE WINAPI resutils.ResUtilGetResourceDependencyByName(_In_ HCLUSTER hCluster,_In_ HANDLE hSelf,_In_ LPCWSTR lpszResourceType,_In_ BOOL bRecurse)
HRESULT None windowscodecs.IWICImagingFactory_CreateFastMetadataEncoderFromFrameDecode_Proxy(_In_ IWICImagingFactory *pFactory,_In_ IWICBitmapFrameDecode *pIFrameDecoder,_Out_ IWICFastMetadataEncoder **ppIFME)
DWORD APIENTRY None.OpenPerformanceData(LPWSTR pContext None)
ULONG None advapi32.PerfSetCounterSetInfo(_In_ HANDLE hProvider,_In_ PPERF_COUNTERSET_INFO pTemplate,_In_ ULONG dwTemplateSize)
BOOL WINAPI comctl32.MirrorIcon(_Inout_opt_ HICON *phIconSmall,_Inout_opt_ HICON *phIconLarge)
PVOID WINAPI kernel32.FlsGetValue(_In_ DWORD dwFlsIndex)
DWORD WINAPI powrprof.PowerUnregisterSuspendResumeNotification(_Inout_ HPOWERNOTIFY RegistrationHandle)
DWORD WINAPI netapi32.DsMergeForestTrustInformationW(_In_ LPCWSTR DomainName,_In_ PLSA_FOREST_TRUST_INFORMATION NewForestTrustInfo,_In_opt_ PLSA_FOREST_TRUST_INFORMATION OldForestTrustInfo,_Out_ PLSA_FOREST_TRUST_INFORMATION *ForestTrustInfo)
LONG TSPIAPI None.TSPI_lineGetAddressStatus(HDRVLINE hdLine None,DWORD dwAddressID None,LPLINEADDRESSSTATUS lpAddressStatus None)
BOOL WINAPI d2d1.D2D1InvertMatrix(_Inout_ D2D1_MATRIX_3X2_F *matrix)
HRESULT None None.GetGlyphMappingCount([out None None,retval] UINT32 *glyphMappingCount)
HWND WINAPI user32.RealChildWindowFromPoint(_In_ HWND hwndParent,_In_ POINT ptParentClientCoords)
HRESULT WDSCLIAPI wdsclientapi.WdsCliGetImageHandleFromFindHandle(_In_ HANDLE FindHandle,_Out_ PHANDLE phImageHandle)
HRESULT None mf.MFCreate3GPMediaSink(_In_ IMFByteStream *pIByteStream,_In_ IMFMediaType *pVideoMediaType,_In_ IMFMediaType *pAudioMediaType,_Out_ IMFMediaSink **ppIMediaSink)
HRESULT None shell32.CreateViewWindow2(LPSV2CVW2_PARAMS lpParams None)
HRESULT None scardssp.get_AlternateClassId([out] BYTE *pbyClass)
HRESULT None srmsvc.get_FileId([out] VARIANT *fileId)
UINT None msi.MsiSourceListEnumSources(_In_ LPCTSTR szProductCodeOrPatchCode,_In_opt_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD dwOptions,_In_ DWORD dwIndex,_In_opt_ LPTSTR szSource,_Inout_opt_ LPDWORD pcchSource)
UINT None msi.MsiSourceListEnumSourcesW(_In_ LPCTSTR szProductCodeOrPatchCode,_In_opt_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD dwOptions,_In_ DWORD dwIndex,_In_opt_ LPTSTR szSource,_Inout_opt_ LPDWORD pcchSource)
UINT None msi.MsiSourceListEnumSourcesA(_In_ LPCTSTR szProductCodeOrPatchCode,_In_opt_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD dwOptions,_In_ DWORD dwIndex,_In_opt_ LPTSTR szSource,_Inout_opt_ LPDWORD pcchSource)
HWND None None.ListView_GetEditControl(HWND hwnd None)
VOID CALLBACK None.PFN_WdsTransportClientSessionComplete(_In_ HANDLE hSessionKey,_In_ PVOID pCallerData,_In_ DWORD dwError)
DWORD None None.ListView_GetHoverTime(HWND hwndLV None)
COLORREF None None.TreeView_SetLineColor(HWND hwndTV None,COLORREF clrLine None)
HRESULT None None.GetIndices([out] IDirect3DIndexBuffer9 **ppIndexData,[out] UINT *pBaseVertexIndex)
PCHAR WINAPI iphlpapi.if_indextoname(_In_ NET_IFINDEX InterfaceIndex,_Out_ PCHAR InterfaceName)
HRESULT None None.get(BSTR namespaceURI None,IXMLDOMNode ** schemaNode)
DWORD None iphlpapi.GetFriendlyIfIndex(_In_ DWORD IfIndex)
BOOL WINAPI user32.LogicalToPhysicalPoint(_In_ HWND hWnd,_Inout_ LPPOINT lpPoint)
HRESULT None None.get_ThirdPartyStreamingEnabled(VARIANT_BOOL* pfEnabled None)
ULONG WINAPI iphlpapi.GetPerTcpConnectionEStats(PMIB_TCPROW Row None,TCP_ESTATS_TYPE EstatsType None,_Out_ PUCHAR Rw,ULONG RwVersion None,ULONG RwSize None,_Out_ PUCHAR Ros,ULONG RosVersion None,ULONG RosSize None,_Out_ PUCHAR Rod,ULONG RodVersion None,ULONG RodSize None)
BOOL WINAPI crypt32.CertDeleteCTLFromStore(_In_ PCCTL_CONTEXT pCtlContext)
HRESULT APIENTRY None.MQGetOverlappedResult(LPOVERLAPPED lpOverlapped None)
LONG NTAPI ntdll.RtlIpv4StringToAddress(_In_ PCTSTR S,_In_ BOOLEAN Strict,_Out_ LPCTSTR *Terminator,_Out_ IN_ADDR *Addr)
LONG NTAPI ntdll.RtlIpv4StringToAddressW(_In_ PCTSTR S,_In_ BOOLEAN Strict,_Out_ LPCTSTR *Terminator,_Out_ IN_ADDR *Addr)
LONG NTAPI ntdll.RtlIpv4StringToAddressA(_In_ PCTSTR S,_In_ BOOLEAN Strict,_Out_ LPCTSTR *Terminator,_Out_ IN_ADDR *Addr)
HRESULT None None.replaceData(long offset None,long count None,BSTR data None)
NETIOAPI_API None iphlpapi.NotifyRouteChange2(_In_ ADDRESS_FAMILY Family,_In_ PIPFORWARD_CHANGE_CALLBACK Callback,_In_ PVOID CallerContext,_In_ BOOLEAN InitialNotification,_Inout_ HANDLE *NotificationHandle)
BOOL CALLBACK None.EnumDateFormatsProc(_In_ LPTSTR lpDateFormatString)
BOOL CALLBACK None.EnumTimeFormatsProcEx(_In_ LPWSTR lpTimeFormatString,_In_ LPARAM lParam)
NTSTATUS None None.WdfUsbTargetDeviceResetPortSynchronously(_In_ WDFUSBDEVICE UsbDevice)
HRESULT WINAPI dismapi.DismGetFeatureInfo(_In_ DismSession Session,_In_ PCWSTR FeatureName,_In_opt_ PCWSTR Identifier,_In_opt_ DismPackageIdentifier PackageIdentifier,_Out_ DismFeatureInfo **FeatureInfo)
uint32 None wvrcimprov.RemoveStretchPartnership([in] string ClusterName,[in] string SourceRGName,[in] string DestinationRGName)
NTSTATUS None None.SpAcquireCredentialsHandle(_In_ PUNICODE_STRING PrincipalName,_In_ ULONG CredentialUseFlags,_In_ PLUID LogonId,_In_ PVOID AuthorizationData,_In_ PVOID GetKeyFunction,_In_ PVOID GetKeyArgument,_Out_ PLSA_SEC_HANDLE CredentialHandle,_Out_ PTimeStamp ExpirationTime)
uint32 None dhcpserverpsprovider.GetByPrefix([in] string ComputerName,[in] string Prefix,[out] DhcpServerv6Lease cmdletOutput[])
ULONG None sechost.RemoveTraceCallback(_In_ LPCGUID pGuid)
BOOL WINAPI kernel32.IsProcessInJob(_In_ HANDLE ProcessHandle,_In_opt_ HANDLE JobHandle,_Out_ PBOOL Result)
HRESULT None windowscodecs.IEnumString_Next_WIC_Proxy(_In_ IEnumString *THIS_PTR)
HRESULT None certcli.GetRequestId([out] LONG *pRequestId)
BOOL None None.WPUSetEvent(_In_ WSAEVENT hEvent,_Out_ LPINT lpErrno)
DWORD WINAPI clusapi.ClusterResourceEnumEx(_In_ HRESENUMEX hResourceEnumEx,_In_ DWORD dwIndex,_Inout_ PCLUSTER_RESOURCE_ENUM_ITEM pItem,_Inout_ LPDWORD cbItem)
HRESULT None None.removeNext(IXMLDOMNode ** ppNode)
HRESULT None None.GetFontFaceIndex([out None None,retval] SHORT *fontFaceIndex)
HRESULT None mf.CreateNamedPropertyStore(_Out_ INamedPropertyStore **ppStore)
HRESULT WDSCLIAPI wdsclientapi.WdsCliGetTransferSize(_In_ HANDLE hIfh,_Out_ PULONGLONG pullValue)
HRESULT None None.EnumerateStreams([out] IEnumStream **ppEnumStream)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsEntryObjectInqDone(RPC_NS_HANDLE *InquiryContext None)
HRESULT None None.BackupComplete([out] IVssAsync **ppAsync)
VOID CALLBACK None.IoCompletionCallback(_Inout_ PTP_CALLBACK_INSTANCE Instance,_Inout_opt_ PVOID Context,_Inout_opt_ PVOID Overlapped,_In_ ULONG IoResult,_In_ ULONG_PTR NumberOfBytesTransferred,_Inout_ PTP_IO Io)
HRESULT None None.get_Strikethrough([out] BOOL *pStrikethrough)
UINT None msi.MsiGetProductInfo(_In_ LPCTSTR szProduct,_In_ LPCTSTR szProperty,_Out_ LPTSTR lpValueBuf,_Inout_ DWORD *pcchValueBuf)
UINT None msi.MsiGetProductInfoW(_In_ LPCTSTR szProduct,_In_ LPCTSTR szProperty,_Out_ LPTSTR lpValueBuf,_Inout_ DWORD *pcchValueBuf)
UINT None msi.MsiGetProductInfoA(_In_ LPCTSTR szProduct,_In_ LPCTSTR szProperty,_Out_ LPTSTR lpValueBuf,_Inout_ DWORD *pcchValueBuf)
HRESULT None None.put_AllowClientToStartAndStop(VARIANT_BOOL newVal None)
HRESULT None None.get_firstChild(IXMLDOMNode **firstChild None)
DWORD None None.NPOpenEnum(_In_ DWORD dwScope,_In_ DWORD dwType,_In_ DWORD dwUsage,_In_ LPNETRESOURCE lpNetResource,_Out_ LPHANDLE lphEnum)
HRESULT None None.GetFontResource([out None None,retval] IXpsOMFontResource **fontResource)
STDAPI None shcore.GetScaleFactorForMonitor(_In_ HMONITOR hMon,_Out_ DEVICE_SCALE_FACTOR *pScale)
HRESULT None None.ValidateDevice([out None None,retval] DWORD *pNumPasses)
HINSTANCE None ole32.CoLoadLibrary(_In_ LPOLESTR lpszLibName,_In_ BOOL bAutoFree)
HRESULT None None.AsWeak(_In_ T* p,_Out_ WeakRef* pWeak)
uint32 None wvrcimprov.WvrClearOrphanedPartitionDbRecord([in] MSFT_WvrPartitionDbRecord OrphanedDbRecord,[out] boolean RebootRequired)
DWORD WINAPI iphlpapi.UnenableRouter(OVERLAPPED *pOverlapped None,_Out_opt_ LPDWORD lpdwEnableCount)
protected void None.OnRender(DrawingContext dc None)
HRESULT None rtworkq.RtwqAllocateSerialWorkQueue(_In_ DWORD workQueueIdIn,_Out_ DWORD *workQueueIdOut)
uint32 None wfascim.Rename([in] string NewName)
public ValidatorCollection None.GetValidators(String validationGroup None)
HRESULT None windowscodecs.IWICBitmapEncoder_Initialize_Proxy(_In_ IWICBitmapEncoder *THIS_PTR,_In_ IStream *pIStream,_In_ WICBitmapEncoderCacheOption cacheOption)
INT None ws2_32.WSALookupServiceEnd(_In_ HANDLE hLookup)
protected void None.OnPreviewGotKeyboardFocus(KeyboardFocusChangedEventArgs e None)
DWORD WINAPI iphlpapi.SetIpStatistics(_In_ PMIB_IPSTATS pIpStats)
BOOL WINAPI authz.AuthzRegisterSecurityEventSource(_In_ DWORD dwFlags,_In_ PCWSTR szEventSourceName,_Out_ PAUTHZ_SECURITY_EVENT_PROVIDER_HANDLE phEventProvider)
BOOL WINAPI advapi32.QueryServiceObjectSecurity(_In_ SC_HANDLE hService,_In_ SECURITY_INFORMATION dwSecurityInformation,_Out_opt_ PSECURITY_DESCRIPTOR lpSecurityDescriptor,_In_ DWORD cbBufSize,_Out_ LPDWORD pcbBytesNeeded)
BOOL WINAPI authz.AuthzUnregisterSecurityEventSource(_In_ DWORD dwFlags,_Inout_ PAUTHZ_SECURITY_EVENT_PROVIDER_HANDLE phEventProvider)
HRESULT None windowscodecs.IWICBitmapLock_GetDataPointer_STA_Proxy(_In_ IWICBitmapLock *THIS_PTR,_Out_ UINT *pcbBufferSize,_Out_ BYTE **ppbData)
HRESULT None None.CreateEffect(REFCLSID effectId None,[out] ID2D1Effect **effect)
HRESULT None msdrm.DRMGetSecurityProvider(_In_ UINT uFlags,_Inout_ UINT *puTypeLen,_Out_ PWSTR wszType,_Inout_ UINT *puPathLen,_Out_ PWSTR wszPath)
HRESULT None msdrm.DRMAddLicense(_In_ DRMHSESSION hLicenseStorage,_In_ UINT uFlags,_In_ PWSTR wszLicense)
HRESULT None ole32.CoGetPSClsid(_In_ REFIID riid,_Out_ CLSID *pClsid)
LONG TSPIAPI None.TSPI_lineSetCallData(DRV_REQUESTID dwRequestID None,HDRVCALL hdCall None,LPVOID lpCallData None,DWORD dwSize None)
WORD None None.LANGIDFROMLCID(LCID lcid None)
DWORD WINAPI powrprof.PowerRegisterSuspendResumeNotification(_In_ DWORD Flags,_In_ HANDLE Recipient,_Out_ PHPOWERNOTIFY RegistrationHandle)
LONG TSPIAPI None.TSPI_lineCreateMSPInstance(HDRVLINE hdLine None,DWORD dwAddressID None,HTAPIMSPLINE htMSPLine None,LPHDRVMSPLINE lphdMSPLine None)
HRESULT None None.get_GlobalPartitionID([out None None,retval] BSTR *pbstrGlobalPartitionID)
DWORD WINAPI wlanui.WlanUIEditProfile(_In_ DWORD dwClientVersion,_In_ LPCWSTR wstrProfileName,_In_ GUID *pInterfaceGuid,_In_ HWND hWnd,_In_ WL_DISPLAY_PAGES wlStartPage,PVOID pReserved None,_Out_ PWLAN_REASON_CODE *pWlanReasonCode)
BOOL CALLBACK None.ReadProcessMemoryProc64(_In_ HANDLE hProcess,_In_ DWORD64 lpBaseAddress,_Out_ PVOID lpBuffer,_In_ DWORD nSize,_Out_ LPDWORD lpNumberOfBytesRead)
DWORD WINAPI resutils.ResUtilGetCoreClusterResources(_In_ HCLUSTER hCluster,_Out_ HRESOURCE *phClusterNameResource,_Out_ HRESOURCE *phClusterIPAddressResource,_Out_ HRESOURCE *phClusterQuorumResource,_In_ DWORD dwDesiredAccess)
HINTERNET WINAPI winhttp.WinHttpOpen(_In_opt_ LPCWSTR pwszUserAgent,_In_ DWORD dwAccessType,_In_ LPCWSTR pwszProxyName,_In_ LPCWSTR pwszProxyBypass,_In_ DWORD dwFlags)
DWORD None ntdsapi.DsCrackNames(_In_ HANDLE hDS,_In_ DS_NAME_FLAGS flags,_In_ DS_NAME_FORMAT formatOffered,_In_ DS_NAME_FORMAT formatDesired,_In_ DWORD cNames,_In_ LPCTSTR *rpNames,_Out_ PDS_NAME_RESULT *ppResult)
DWORD None ntdsapi.DsCrackNamesW(_In_ HANDLE hDS,_In_ DS_NAME_FLAGS flags,_In_ DS_NAME_FORMAT formatOffered,_In_ DS_NAME_FORMAT formatDesired,_In_ DWORD cNames,_In_ LPCTSTR *rpNames,_Out_ PDS_NAME_RESULT *ppResult)
DWORD None ntdsapi.DsCrackNamesA(_In_ HANDLE hDS,_In_ DS_NAME_FLAGS flags,_In_ DS_NAME_FORMAT formatOffered,_In_ DS_NAME_FORMAT formatDesired,_In_ DWORD cNames,_In_ LPCTSTR *rpNames,_Out_ PDS_NAME_RESULT *ppResult)
PVOID NTAPI None.CreateSharedMemory(_In_ ULONG MaxSize,_In_ ULONG InitialSize)
HWND WINAPI user32.SetActiveWindow(_In_ HWND hWnd)
HRESULT None oleaut32.VarUI8FromDisp(_In_ IDispatch *pdispIn,_In_ LCID lcid,_Out_ ULONG64 *pi64Out)
HRESULT None ole32.CoDisableCallCancellation(_In_opt_ LPVOID pReserved)
BOOL WINAPI user32.IsChild(_In_ HWND hWndParent,_In_ HWND hWnd)
HANDLE WINAPI user32.GetClipboardData(_In_ UINT uFormat)
HRESULT None comctl32.ImageList_WriteEx(_In_ HIMAGELIST himl,_In_ DWORD dwFlags,_In_ LPSTREAM pstm)
DWORD WINAPI None.SignalFailure(_In_ RESOURCE_HANDLE ResourceHandle,_In_ BOOL IsEmbeddedFailure,_In_ FAILURE_TYPE FailureType,_In_ DWORD ApplicationSpecificErrorCode)
HRESULT None None.get_length(LONG *count None)
HRESULT None None.get_responseBody(VARIANT* pvarBody None)
NETIOAPI_API None iphlpapi.GetIpForwardTable2(_In_ ADDRESS_FAMILY Family,_Out_ PMIB_IPFORWARD_TABLE2 *Table)
HRESULT None oleaut32.SafeArrayGetVartype(_In_ SAFEARRAY *psa,_Out_ VARTYPE *pvt)
PUIDLIST_RELATIVE None shell32.ILFindChild(_In_ PCIDLIST_ABSOLUTE pidlParent,_In_ PCIDLIST_ABSOLUTE pidlChild)
HRESULT None oleaut32.SafeArrayGetLBound(_In_ SAFEARRAY *psa,_In_ UINT nDim,_Out_ LONG *plLbound)
JET_ERR JET_API None.JetCreateTableColumnIndex(__in JET_SESID sesid,__in JET_DBID dbid,__in_out JET_TABLECREATE* ptablecreate)
HRESULT None None.GetDirect3D([out None None,retval] IDirect3D9 **ppD3D9)
HANDLE WINAPI dbghelp.FindExecutableImageEx(_In_ PCTSTR FileName,_In_ PCTSTR SymbolPath,_Out_ PTSTR ImageFilePath,_In_opt_ PFIND_EXE_FILE_CALLBACK Callback,_In_opt_ PVOID CallerData)
HANDLE WINAPI dbghelp.FindExecutableImageExW(_In_ PCTSTR FileName,_In_ PCTSTR SymbolPath,_Out_ PTSTR ImageFilePath,_In_opt_ PFIND_EXE_FILE_CALLBACK Callback,_In_opt_ PVOID CallerData)
HANDLE WINAPI dbghelp.FindExecutableImageEx(_In_ PCTSTR FileName,_In_ PCTSTR SymbolPath,_Out_ PTSTR ImageFilePath,_In_opt_ PFIND_EXE_FILE_CALLBACK Callback,_In_opt_ PVOID CallerData)
VOID None None.TabCtrl_DeselectAll(HWND hwndTab None,UINT fExcludeFocus None)
uint32 None wvrcimprov.CreateTopology([in] string SourceComputerName,[in] string SourceRGName,[in] string SourceRGDescription,[in] string SourceVolumeName[],[in] string SourceLogVolumeName,[in] string DestinationComputerName,[in] string DestinationRGName,[in] string DestinationRGDescription,[in] string DestinationVolumeName[],[in] string DestinationLogVolumeName,[in] uint64 LogSizeInBytes,[in] uint32 ReplicationMode,[in] boolean PreventReplication,[in] boolean Seeded,[in] uint32 AsyncRPO,[in] boolean EnableConsistencyGroups,[in] boolean EnableEncryption,[out] MSFT_WvrReplicationPartnership Output[])
protected void None.OnConnectModeChanged(EventArgs e None)
public void None.Prepare(PreparingEnlistment preparingEnlistment None)
HRESULT None rdpencom.SendMouseWheelEvent(UINT16 wheelRotation None)
DWORD None npptools.GetNPPBlobTable(_In_ HBLOB hFilterBlob,_Out_ PBLOB_TABLE *ppBlobTable)
protected int None.ExecuteInsert(IDictionary values None)
public DataTemplate None.SelectTemplate(Object item None,DependencyObject container None)
ULONG None advapi32.EventWriteTransfer(_In_ REGHANDLE RegHandle,_In_ PCEVENT_DESCRIPTOR EventDescriptor,_In_opt_ LPCGUID ActivityId,_In_opt_ LPCGUID RelatedActivityId,_In_ ULONG UserDataCount,_In_opt_ PEVENT_DATA_DESCRIPTOR UserData)
u_short WSAAPI ws2_32.htons(_In_ u_short hostshort)
HRESULT WINAPI d3dcompiler_47.D3DGetDebugInfo(in LPCVOID pSrcData,in SIZE_T SrcDataSize,out ID3DBlob ppDebugInfo)
HRESULT None None.SetExceptionMode(UINT RaiseFlags None)
PDH_STATUS None pdh.PdhGetDllVersion(_Out_ LPDWORD lpdwVersion)
HRESULT None ole32.StgCreatePropSetStg(_In_ IStorage *pStorage,DWORD dwReserved None,_Out_ IPropertySetStorage **ppPropSetStg)
BOOL None wtsapi32.WTSQueryUserToken(_In_ ULONG SessionId,_Out_ PHANDLE phToken)
HRESULT None direct2d.GetTagName([out] PWSTR name,UINT32 nameCount None)
uint32 None dnsserverpsprovider.AddByPtr([in] string PtrDomainName,[in] string ZoneName,[in] datetime TimeToLive,[in] boolean AllowUpdateAny,[in] string Name,[in] string ComputerName,[in] boolean AgeRecord,[in] boolean Ptr,[in] boolean PassThru,[in] string ZoneScope,[out] DnsServerResourceRecord cmdletOutput)
HRESULT APIENTRY None.MQPurgeQueue(HANDLE hQueue None)
HRESULT NET_API_FUNCTION netapi32.NetGetAadJoinInformation(_In_opt_ LPCWSTR pcszTenantId,_Out_ PDSREG_JOIN_INFO *ppJoinInfo)
HGLOBAL None ole32.OleGetIconOfClass(_In_ REFCLSID rclsid,_In_opt_ LPOLESTR lpszLabel,_In_ BOOL fUseTypeAsLabel)
WINOLEAPI None ole32.WriteClassStg(_In_ IStorage *pStg,_In_ REFCLSID rclsid)
SByte None None.ToSByte(IFormatProvider provider None)
protected void None.OnPreviewStylusDown(StylusDownEventArgs e None)
HRESULT WINAPI wsdapi.WSDCreateDiscoveryProvider2(_In_ IWSDXMLContext *pContext,_In_ WSD_CONFIG_PARAM *pConfigParams,_In_ DWORD dwConfigParamCount,_Out_ IWSDiscoveryProvider **ppProvider)
UINT None msi.MsiSummaryInfoSetProperty(_In_ MSIHANDLE hSummaryInfo,_In_ UINT uiProperty,_In_ UINT uiDataType,_In_ INT iValue,_In_ FILETIME *pftValue,_In_ LPTSTR szValue)
UINT None msi.MsiSummaryInfoSetPropertyW(_In_ MSIHANDLE hSummaryInfo,_In_ UINT uiProperty,_In_ UINT uiDataType,_In_ INT iValue,_In_ FILETIME *pftValue,_In_ LPTSTR szValue)
UINT None msi.MsiSummaryInfoSetPropertyA(_In_ MSIHANDLE hSummaryInfo,_In_ UINT uiProperty,_In_ UINT uiDataType,_In_ INT iValue,_In_ FILETIME *pftValue,_In_ LPTSTR szValue)
HRESULT None None.get_namespaceURI(BSTR *namespaceURI None)
HRESULT None shlwapi.StrRetToBSTR(_Inout_ STRRET *pstr,_In_ PCUITEMID_CHILD pidl,_Out_ BSTR *pbstr)
HRESULT None None.createDocumentFragment(IXMLDOMDocumentFragment **docFrag None)
DWORD WINAPI wlanapi.WlanHostedNetworkQueryStatus(_In_ HANDLE hClientHandle,_Out_ PWLAN_HOSTED_NETWORK_STATUS *ppWlanHostedNetworkStatus,_Reserved_ PVOID pvReserved)
BOOL None wtsapi32.WTSQuerySessionInformation(_In_ HANDLE hServer,_In_ DWORD SessionId,_In_ WTS_INFO_CLASS WTSInfoClass,_Out_ LPTSTR *ppBuffer,_Out_ DWORD *pBytesReturned)
BOOL None wtsapi32.WTSQuerySessionInformationW(_In_ HANDLE hServer,_In_ DWORD SessionId,_In_ WTS_INFO_CLASS WTSInfoClass,_Out_ LPTSTR *ppBuffer,_Out_ DWORD *pBytesReturned)
BOOL None wtsapi32.WTSQuerySessionInformationA(_In_ HANDLE hServer,_In_ DWORD SessionId,_In_ WTS_INFO_CLASS WTSInfoClass,_Out_ LPTSTR *ppBuffer,_Out_ DWORD *pBytesReturned)
UINT WINAPI user32.ArrangeIconicWindows(_In_ HWND hWnd)
HRESULT None None.createProcessingInstruction(BSTR target None,BSTR data None,IXMLDOMProcessingInstruction **pi None)
HANDLE None spoolss.FindFirstPrinterChangeNotification(_In_ HANDLE hPrinter,DWORD fdwFilter None,DWORD fdwOptions None,_In_opt_ LPVOID pPrinterNotifyOptions)
DWORD None mprapi.MprAdminServerGetCredentials(_In_ MPR_SERVER_HANDLE hMprServer,_In_ DWORD dwLevel,_Out_ LPBYTE *lplpbBuffer)
HRESULT None shell32.SHStartNetConnectionDialog(_In_opt_ HWND hwnd,_In_opt_ LPCTSTR pszRemoteName,DWORD dwType None)
HRESULT None shell32.SHStartNetConnectionDialogW(_In_opt_ HWND hwnd,_In_opt_ LPCTSTR pszRemoteName,DWORD dwType None)
HRESULT None shell32.SHStartNetConnectionDialogA(_In_opt_ HWND hwnd,_In_opt_ LPCTSTR pszRemoteName,DWORD dwType None)
HRESULT None None.abort(void None None)
HRESULT None shlwapi.SHGetThreadRef(_In_ IUnknown **ppunk)
BOOL WINAPI kernel32.UnmapViewOfFileEx(_In_ LPCVOID lpBaseAddress,_In_ DWORD UnmapFlags)
LONG WINAPI tapi32.lineMonitorDigits(HCALL hCall None,DWORD dwDigitModes None)
uint32 None sppwmi.DisableKeyManagementServiceDnsPublishing([in] boolean DisablePublishing)
HRESULT None None.ULongPtrAdd(_In_ ULONG_PTR ulAugend,_In_ ULONG_PTR ulAddend,_Out_ ULONG_PTR *pulResult)
public boolean None.CanConvertFrom(ITypeDescriptorContext context None,Type sourceType None)
HRESULT None ole32.OleCreateEmbeddingHelper(_In_ REFCLSID clsid,_In_ LPUNKNOWN pUnkOuter,_In_ DWORD flags,_In_ LPCLASSFACTORY pCF,_In_ REFIID riid,_Out_ LPVOID *lplpObj)
HRESULT None mf.MFCreateTopology(IMFTopology **ppTopo None)
LONG WINAPI tapi32.lineNegotiateExtVersion(HLINEAPP hLineApp None,DWORD dwDeviceID None,DWORD dwAPIVersion None,DWORD dwExtLowVersion None,DWORD dwExtHighVersion None,LPDWORD lpdwExtVersion None)
BOOL WINAPI wtsapi32.WTSSetListenerSecurity(_In_ HANDLE hServer,_In_ PVOID pReserved,_In_ DWORD Reserved,_In_ LPTSTR pListenerName,_In_ SECURITY_INFORMATION SecurityInformation,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor)
BOOL WINAPI wtsapi32.WTSSetListenerSecurityW(_In_ HANDLE hServer,_In_ PVOID pReserved,_In_ DWORD Reserved,_In_ LPTSTR pListenerName,_In_ SECURITY_INFORMATION SecurityInformation,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor)
BOOL WINAPI wtsapi32.WTSSetListenerSecurityA(_In_ HANDLE hServer,_In_ PVOID pReserved,_In_ DWORD Reserved,_In_ LPTSTR pListenerName,_In_ SECURITY_INFORMATION SecurityInformation,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor)
BOOL WINAPI kernel32.ReadFile(_In_ HANDLE hFile,_Out_ LPVOID lpBuffer,_In_ DWORD nNumberOfBytesToRead,_Out_opt_ LPDWORD lpNumberOfBytesRead,_Inout_opt_ LPOVERLAPPED lpOverlapped)
PDH_STATUS None pdh.PdhReadRawLogRecord(_In_ PDH_HLOG hLog,_In_ FILETIME ftRecord,_Out_ PPDH_RAW_LOG_RECORD pRawLogRecord,_In_ LPDWORD pdwBufferLength)
BOOL WINAPI crypt32.CryptMsgCountersign(_Inout_ HCRYPTMSG hCryptMsg,_In_ DWORD dwIndex,_In_ DWORD cCountersigners,_In_ PCMSG_SIGNER_ENCODE_INFO rgCountersigners)
LONG TSPIAPI None.TSPI_lineSelectExtVersion(HDRVLINE hdLine None,DWORD dwExtVersion None)
HRESULT None oleacc.SelectItemAtPoint(IAccessible* pAcc None,POINT point None)
WINOLEAPI None ole32.OleConvertOLESTREAMToIStorageEx(_In_ LPOLESTREAM lpolestm,_Out_ IStorage *pstg,_Out_ CLIPFORMAT *pcfFormat,_Out_ LONG *plWidth,_Out_ LONG *plHeight,_Out_ DWORD *pdwSize,_Out_ STGMEDIUM pmedium)
DWORD WINAPI clusapi.AddClusterResourceNode(_In_ HRESOURCE hResource,_In_ HNODE hNode)
BOOLEAN WINAPI powrprof.GetActivePwrScheme(_Out_ PUINT puiID)
UINT None msi.MsiProvideComponent(_In_ LPCTSTR szProduct,_In_ LPCTSTR szFeature,_In_ LPCTSTR szComponent,_In_ DWORD dwInstallMode,_Out_ LPTSTR lpPathBuf,_Inout_ DWORD *pcchPathBuf)
UINT None msi.MsiProvideComponentW(_In_ LPCTSTR szProduct,_In_ LPCTSTR szFeature,_In_ LPCTSTR szComponent,_In_ DWORD dwInstallMode,_Out_ LPTSTR lpPathBuf,_Inout_ DWORD *pcchPathBuf)
UINT None msi.MsiProvideComponentA(_In_ LPCTSTR szProduct,_In_ LPCTSTR szFeature,_In_ LPCTSTR szComponent,_In_ DWORD dwInstallMode,_Out_ LPTSTR lpPathBuf,_Inout_ DWORD *pcchPathBuf)
public None None.RangedValue(IModelItemOwner owner None)
BOOL None None.PropSheet_AddPage(HWND hPropSheetDlg None,HPROPSHEETPAGE hpage None)
DWORD None advapi32.GetLocalManagedApplications(_In_ BOOL bUserApps,_Out_ LPDWORD pdwApps,_Out_ PLOCALMANAGEDAPPLICATION *prgLocalApps)
UINT None None.TreeView_GetCount(HWND hwndTV None)
HRESULT None srmsvc.get_ClassificationRunningStatus([out] FsrmReportRunningStatus *pRunningStatus)
HRESULT None None.removeQualifiedItem(BSTR baseName None,BSTR namespaceURI None,IXMLDOMNode **qualifiedItem None)
HRESULT None None.get_ConnectedPlayers(long* pVal None)
public String None.ToLower(CultureInfo culture None)
HRESULT None None.GetWriterTime([out] QWORD *pcnsCurrentTime)
HRESULT None None.GetOpacity([out None None,retval] FLOAT *opacity)
ULONG STDMETHODCALLTYPE rpcrt4.IUnknown_AddRef_Proxy(IUnknown __RPC_FAR *This)
ULONG WINAPI dbghelp.SymGetFileLineOffsets64(_In_ HANDLE hProcess,_In_opt_ PCSTR ModuleName,_In_ PCSTR FileName,_Out_ PDWORD64 Buffer,_In_ ULONG BufferLines)
DWORD None iphlpapi.AddIPAddress(_In_ IPAddr Address,_In_ IPMask IpMask,_In_ DWORD IfIndex,_Out_ PULONG NTEContext,_Out_ PULONG NTEInstance)
BOOL WINAPI dbghelp.EnumDirTree(_In_opt_ HANDLE hProcess,_In_ PCTSTR RootPath,_In_ PCTSTR InputPathName,_Out_opt_ PTSTR OutputPathBuffer,_In_opt_ PENUMDIRTREE_CALLBACK Callback,_In_opt_ PVOID CallbackData)
BOOL WINAPI dbghelp.EnumDirTreeW(_In_opt_ HANDLE hProcess,_In_ PCTSTR RootPath,_In_ PCTSTR InputPathName,_Out_opt_ PTSTR OutputPathBuffer,_In_opt_ PENUMDIRTREE_CALLBACK Callback,_In_opt_ PVOID CallbackData)
BOOL WINAPI dbghelp.EnumDirTree(_In_opt_ HANDLE hProcess,_In_ PCTSTR RootPath,_In_ PCTSTR InputPathName,_Out_opt_ PTSTR OutputPathBuffer,_In_opt_ PENUMDIRTREE_CALLBACK Callback,_In_opt_ PVOID CallbackData)
DWORD None mprapi.MprAdminEstablishDomainRasServer(_In_ PWCHAR pszDomain,_In_ PWCHAR pszMachine,_In_ BOOL bEnable)
protected int None.ExecuteInsert(IDictionary values None)
BOOL None shell32.DAD_SetDragImage(HIMAGELIST him None,POINT *pptOffset None)
HRESULT None windowscodecs.IWICPalette_GetColors_Proxy(_In_ IWICPalette *THIS_PTR,_In_ UINT colorCount,_Out_ WICColor *pColors,_Out_ UINT *pcActualColors)
HRESULT WINAPI uiautomationcore.UiaHostProviderFromHwnd(_In_ HWND hwnd,_Out_ IRawElementProviderSimple **pProvider)
HRESULT None None.ShortAdd(_In_ SHORT sAugend,_In_ SHORT sAddend,_Out_ SHORT *psResult)
HRESULT WINAPI webservices.WsAbandonMessage(_In_ WS_CHANNEL* channel,_In_ WS_MESSAGE* message,_In_opt_ WS_ERROR* error)
HRESULT None None.GetFileName([out None None,retval] LPWSTR *fileName)
HRESULT None propsys.VariantToBooleanArrayAlloc(_In_ REFVARIANT var,_Out_ BOOL **pprgf,_Out_ ULONG *pcElem)
protected void None.OnPreviewGotKeyboardFocus(KeyboardFocusChangedEventArgs e None)
void None None._cexit(void None None)
HRESULT None srmsvc.get_RunningStatus([out] FsrmReportRunningStatus *pRunningStatus)
DWORD None netapi32.DsValidateSubnetName(_In_ LPCTSTR SubnetName)
DWORD None netapi32.DsValidateSubnetNameW(_In_ LPCTSTR SubnetName)
DWORD None netapi32.DsValidateSubnetNameA(_In_ LPCTSTR SubnetName)
DWORD WINAPI powrprof.PowerSettingUnregisterNotification(_Inout_ HPOWERNOTIFY RegistrationHandle)
LONG TSPIAPI None.TSPI_lineAnswer(DRV_REQUESTID dwRequestID None,HDRVCALL hdCall None,LPCSTR lpsUserUserInfo None,DWORD dwSize None)
BOOL None kernel32.EnumSystemLanguageGroups(_In_ LANGUAGEGROUP_ENUMPROC lpLanguageGroupEnumProc,_In_ DWORD dwFlags,_In_ LONG_PTR lParam)
BOOL None kernel32.EnumSystemLanguageGroupsW(_In_ LANGUAGEGROUP_ENUMPROC lpLanguageGroupEnumProc,_In_ DWORD dwFlags,_In_ LONG_PTR lParam)
BOOL None kernel32.EnumSystemLanguageGroupsA(_In_ LANGUAGEGROUP_ENUMPROC lpLanguageGroupEnumProc,_In_ DWORD dwFlags,_In_ LONG_PTR lParam)
HRESULT None None.GetMatrixTransform([out] DXGI_MATRIX_3X2_F *pMatrix)
VOID WINAPI None.Close(_In_ RESID ResourceId)
HRESULT None mfplat.MFCreateEventQueue(IMFMediaEventQueue **ppMediaEventQueue None)
BOOL None None.ListView_SetCallbackMask(HWND hwnd None,UINT mask None)
BOOL None None.PropSheet_Changed(HWND hPropSheetDlg None,HWND hwndPage None)
public None None.TraceSwitch(String displayName None,String description None,String defaultSwitchValue None)
UINT None msi.MsiEnumComponentQualifiers(_In_ LPTSTR szComponent,_In_ DWORD iIndex,_Out_ LPTSTR lpQualifierBuf,_Inout_ DWORD *pcchQualifierBuf,_Out_ LPTSTR lpApplicationDataBuf,_Inout_ DWORD *pcchApplicationDataBuf)
UINT None msi.MsiEnumComponentQualifiersW(_In_ LPTSTR szComponent,_In_ DWORD iIndex,_Out_ LPTSTR lpQualifierBuf,_Inout_ DWORD *pcchQualifierBuf,_Out_ LPTSTR lpApplicationDataBuf,_Inout_ DWORD *pcchApplicationDataBuf)
UINT None msi.MsiEnumComponentQualifiersA(_In_ LPTSTR szComponent,_In_ DWORD iIndex,_Out_ LPTSTR lpQualifierBuf,_Inout_ DWORD *pcchQualifierBuf,_Out_ LPTSTR lpApplicationDataBuf,_Inout_ DWORD *pcchApplicationDataBuf)
DWORD None wlanapi.WlanReasonCodeToString(_In_ DWORD dwReasonCode,_In_ DWORD dwBufferSize,_In_ PWCHAR pStringBuffer,_Reserved_ PVOID pReserved)
HRESULT WINAPI cryptxml.CryptXmlGetStatus(HCRYPTXML hCryptXml None,CRYPT_XML_STATUS *pStatus None)
HRESULT WINAPI combase.CoGetSystemSecurityPermissions(_In_ COMSD comSDType,_Out_ PSECURITY_DESCRIPTOR *ppSD)
RPC_STATUS RPC_ENTRY rpcrt4.RpcMgmtEpEltInqDone(RPC_EP_INQ_HANDLE *InquiryContext None)
HRESULT None None.get_nextSibling(IXMLDOMNode **nextSibling None)
protected ResourceSet None.InternalGetResourceSet(CultureInfo culture None,boolean createIfNotExists None,boolean tryParents None)
HRESULT None None.get_notationName(BSTR *name None)
HRESULT None None.get__NewEnum([out] IUnknown **enumerator)
HRESULT None oleaut32.SafeArrayDestroyData(_In_ SAFEARRAY *psa)
BOOL None shell32.ILRemoveLastID(_Inout_opt_ PUIDLIST_RELATIVE pidl)
COLORREF None None.MonthCal_GetColor(HWND hwndMC None,INT iColor None)
HRESULT None None.get_LocalIPAddress(BSTR* pbstrLocalIpAddress None)
BOOL None None.MonthCal_GetToday(HWND hwndMC None,LPSYSTEMTIME lpToday None)
BOOL WINAPI dbghelp.SymGetLineFromName64(_In_ HANDLE hProcess,_In_opt_ PCTSTR ModuleName,_In_opt_ PCTSTR FileName,_In_ DWORD dwLineNumber,_Out_ PLONG lpDisplacement,_Inout_ PIMAGEHLP_LINE64 Line)
BOOL WINAPI dbghelp.SymGetLineFromNameW64(_In_ HANDLE hProcess,_In_opt_ PCTSTR ModuleName,_In_opt_ PCTSTR FileName,_In_ DWORD dwLineNumber,_Out_ PLONG lpDisplacement,_Inout_ PIMAGEHLP_LINE64 Line)
BOOL WINAPI dbghelp.SymGetLineFromName64(_In_ HANDLE hProcess,_In_opt_ PCTSTR ModuleName,_In_opt_ PCTSTR FileName,_In_ DWORD dwLineNumber,_Out_ PLONG lpDisplacement,_Inout_ PIMAGEHLP_LINE64 Line)
HRESULT None None.get_AttachedDriveTypes([out] VARIANT *driveTypes)
LCID None nlsmap.DownlevelLocaleNameToLCID(_In_ LPWSTR lpName,_In_ DWORD dwFlags)
uint32 None wvrcimprov.WvrAddReplicaSet([in] string SourceReplicationGroupName,[in] string SourcePartitionId,[in] string TargetComputerName,[in] string TargetReplicationGroupName,[in] string TargetPartitionId)
HRESULT None None.getProperty(BSTR name None,VARIANT* value None)
HRESULT None mshtml.GetHeight([out] UINT32 *cy)
HRESULT WINAPI webservices.WsResetError(_In_ WS_ERROR* error)
uint32 None wvrcimprov.WvrClearOrphanedLogs([in] string ReplicationGroupName)
HRESULT STDAPI cldapi.CfReportProviderProgress(_In_ CF_CONNECTION_KEY ConnectionKey,_In_ LARGE_INTEGER TransferKey,_In_ LARGE_INTEGER ProviderProgressTotal,_In_ LARGE_INTEGER ProviderProgressCompleted)
HRESULT None None.Path(LPWSTR *ppszPath None)
HRESULT None shell32.SHCreateQueryCancelAutoPlayMoniker(_Out_ IMoniker **ppmoniker)
HRESULT None None.DWordAdd(_In_ DWORD dwAugend,_In_ DWORD dwAddend,_Out_ DWORD *pdwResult)
protected void None.LoadViewState(Object savedState None)
LONG WINAPI tapi32.lineRedirect(HCALL hCall None,LPCSTR lpszDestAddress None,DWORD dwCountryCode None)
LONG WINAPI tapi32.lineRedirectW(HCALL hCall None,LPCSTR lpszDestAddress None,DWORD dwCountryCode None)
LONG WINAPI tapi32.lineRedirectA(HCALL hCall None,LPCSTR lpszDestAddress None,DWORD dwCountryCode None)
LONG WINAPI tapi32.lineGetIcon(DWORD dwDeviceID None,LPCSTR lpszDeviceClass None,LPHICON lphIcon None)
LONG WINAPI tapi32.lineGetIconW(DWORD dwDeviceID None,LPCSTR lpszDeviceClass None,LPHICON lphIcon None)
LONG WINAPI tapi32.lineGetIconA(DWORD dwDeviceID None,LPCSTR lpszDeviceClass None,LPHICON lphIcon None)
HRESULT None msdrm.DRMGetBoundLicenseAttributeCount(_In_ DRMHANDLE hQueryRoot,_In_ PWSTR wszAttribute,_Out_ UINT *pcAttributes)
VOID WINAPI None.BadMemoryCallbackRoutine(VOID None None)
HRESULT None None.MovePrevious([out None None,retval] BOOL *hasPrevious)
HRESULT None None.get_namespaceURI(BSTR* namespaceURI None)
HRESULT None ole32.Stat([out] STATPROPSETSTG *pstatpsstg)
ULONG None advapi32.EventSetInformation(_In_ REGHANDLE RegHandle,_In_ EVENT_INFO_CLASS InformationClass,_In_ PVOID EventInformation,_In_ ULONG InformationLength)
HRESULT None mf.MFCreateASFStreamingMediaSinkActivate(IMFActivate *pByteStreamActivate None,IMFASFContentInfo *pContentInfo None,IMFActivate **ppIActivate None)
HRESULT None None.get_StaticTerminals([out] VARIANT *pVariant)
void None None.Page_Init(Object sender None,EventArgs e None)
HRESULT None mfreadwrite.MFCreateSourceReaderFromURL(_In_ LPCWSTR pwszURL,_In_ IMFAttributes *pAttributes,_Out_ IMFSourceReader **ppSourceReader)
HRESULT None None.GetSignatureValue([out] UINT8 **signatureValue,[out] UINT32 *count)
DWORD PXEAPI wdspxe.PxeDhcpGetOptionValue(_In_ PVOID pPacket,_In_ ULONG uPacketLen,_In_ ULONG uInstance,_In_ BYTE bOption,_Out_opt_ PBYTE pbOptionLen,_Out_opt_ PVOID *ppOptionValue)
UINT None msi.MsiGetFileHash(_In_ LPCTSTR szFilePath,_In_ DWORD dwOptions,_Out_ PMSIFILEHASHINFO pHash)
UINT None msi.MsiGetFileHashW(_In_ LPCTSTR szFilePath,_In_ DWORD dwOptions,_Out_ PMSIFILEHASHINFO pHash)
UINT None msi.MsiGetFileHashA(_In_ LPCTSTR szFilePath,_In_ DWORD dwOptions,_Out_ PMSIFILEHASHINFO pHash)
HRESENUM WINAPI clusapi.ClusterResourceOpenEnumEx(_In_ HCLUSTER hCluster,_In_opt_ LPCWSTR lpszProperties,_In_ DWORD cbProperties,_In_opt_ LPCWSTR lpszRoProperties,_In_ DWORD cbRoProperties,_In_ DWORD dwFlags)
HRESULT None ole32.CoCreateFreeThreadedMarshaler(_In_ LPUNKNOWN punkOuter,_Out_ LPUNKNOWN *ppunkMarshal)
HRESULT None srmsvc.get_RelativePath([out] BSTR *path)
DWORD WINAPI kernel32.GetThreadId(_In_ HANDLE Thread)
WINAPI None drt.DrtCreateNullSecurityProvider(_Out_ DRT_SECURITY_PROVIDER **ppSecurityProvider)
HRESULT None None.createAttribute(BSTR name None,IXMLDOMAttribute **attribute None)
BOOL WINAPI winhttp.WinHttpWriteData(_In_ HINTERNET hRequest,_In_ LPCVOID lpBuffer,_In_ DWORD dwNumberOfBytesToWrite,_Out_ LPDWORD lpdwNumberOfBytesWritten)
protected void None.OnMouseRightButtonDown(MouseButtonEventArgs e None)
LSTATUS None shlwapi.SHRegGetPath(_In_ HKEY hkey,_In_ LPCTSTR pszSubkey,_In_ LPCTSTR pszValue,_Out_ LPTSTR pszPath,DWORD dwFlags None)
LSTATUS None shlwapi.SHRegGetPathW(_In_ HKEY hkey,_In_ LPCTSTR pszSubkey,_In_ LPCTSTR pszValue,_Out_ LPTSTR pszPath,DWORD dwFlags None)
LSTATUS None shlwapi.SHRegGetPathA(_In_ HKEY hkey,_In_ LPCTSTR pszSubkey,_In_ LPCTSTR pszValue,_Out_ LPTSTR pszPath,DWORD dwFlags None)
BOOL WINAPI advapi32.IsValidSecurityDescriptor(_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor)
ULONG WINAPI iphlpapi.CreatePersistentUdpPortReservation(_In_ USHORT StartPort,_In_ USHORT NumberOfPorts,_Out_ PULONG64 Token)
BOOL WSAAPI ws2_32.WSAGetOverlappedResult(_In_ SOCKET s,_In_ LPWSAOVERLAPPED lpOverlapped,_Out_ LPDWORD lpcbTransfer,_In_ BOOL fWait,_Out_ LPDWORD lpdwFlags)
BOOL None None.TreeView_EndEditLabelNow(HWND hwndTV None,BOOL fCancel None)
DWORD WINAPI advapi32.SetUserFileEncryptionKey(_In_ PENCRYPTION_CERTIFICATE pEncryptionCertificate)
CLIENT_CALL_RETURN RPC_VAR_ENTRY rpcrt4.NdrClientCall2(_In_ PMIDL_STUB_DESC pStubDescriptor,_In_ PFORMAT_STRING pFormat,_Inout_ ... None)
HRESULT None None.GetStreamType(GUID* pStreamType None)
BOOL WINAPI kernel32.WriteProfileSection(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpString)
BOOL WINAPI kernel32.WriteProfileSectionW(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpString)
BOOL WINAPI kernel32.WriteProfileSectionA(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpString)
protected boolean None.OnBubbleEvent(Object source None,EventArgs args None)
HRESULT None ole32.CoRegisterActivationFilter(_In_ IActivationFilter *pActivationFilter)
private void None.AutoSizeControl(Control control None,int textPadding None)
HRESULT None None.IntPtrMult(_In_ INT_PTR iMultiplicand,_In_ INT_PTR iMultiplier,_Out_ INT_PTR *piResult)
VOID None None.InitializeThreadpoolEnvironment(_Out_ PTP_CALLBACK_ENVIRON pcbe)
DWORD None None.SetDwordInBlob(HBLOB hBlob None,const char* pOwnerName,const char* pCategoryName,const char* pTagName,DWORD Dword None)
HRESULT None windowscodecs.WICCreateColorContext_Proxy(_In_ IWICImagingFactory *THIS_PTR,IWICColorContext ppIColorContext None)
HTHEME None uxtheme.OpenThemeDataEx(_In_ HWND hwnd,_In_ LPCWSTR pszClassIdList,_In_ DWORD dwFlags)
HRESULT None comctl32.GetDragImage([out] POINT *ppt,[out] POINT *pptHotspot,[out] REFIID riid,[out] PVOID *ppv)
BOOL WINAPI kernel32.SetThreadpoolThreadMinimum(_Inout_ PTP_POOL ptpp,_In_ DWORD cthrdMic)
BOOL WINAPI authz.AuthzInitializeResourceManager(_In_ DWORD flags,_In_opt_ PFN_AUTHZ_DYNAMIC_ACCESS_CHECK pfnAccessCheck,_In_opt_ PFN_AUTHZ_COMPUTE_DYNAMIC_GROUPS pfnComputeDynamicGroups,_In_opt_ PFN_AUTHZ_FREE_DYNAMIC_GROUPS pfnFreeDynamicGroups,_In_ PCWSTR szResourceManagerName,_Out_ PAUTHZ_RESOURCE_MANAGER_HANDLE phAuthzResourceManager)
BOOL WINAPI ktmw32.PrePrepareComplete(_In_ HANDLE EnlistmentHandle,_In_ PLARGE_INTEGER TmVirtualClock)
private void None.MenuSelected(Object sender None,System.EventArgs e None)
public void None.SeekAlignedToLastTick(TimeSpan offset None,TimeSeekOrigin origin None)
UINT None msi.MsiEnumRelatedProducts(_In_ LPCTSTR lpUpgradeCode,_In_ DWORD dwReserved,_In_ DWORD iProductIndex,_Out_ LPTSTR lpProductBuf)
UINT None msi.MsiEnumRelatedProductsW(_In_ LPCTSTR lpUpgradeCode,_In_ DWORD dwReserved,_In_ DWORD iProductIndex,_Out_ LPTSTR lpProductBuf)
UINT None msi.MsiEnumRelatedProductsA(_In_ LPCTSTR lpUpgradeCode,_In_ DWORD dwReserved,_In_ DWORD iProductIndex,_Out_ LPTSTR lpProductBuf)
NET_API_STATUS None netapi32.NetApiBufferReallocate(_In_ LPVOID OldBuffer,_In_ DWORD NewByteCount,_Out_ LPVOID *NewBuffer)
NET_API_STATUS None netapi32.NetLocalGroupAddMembers(_In_ LPCWSTR servername,_In_ LPCWSTR groupname,_In_ DWORD level,_In_ LPBYTE buf,_In_ DWORD totalentries)
BOOL WINAPI advapi32.AllocateAndInitializeSid(_In_ PSID_IDENTIFIER_AUTHORITY pIdentifierAuthority,_In_ BYTE nSubAuthorityCount,_In_ DWORD dwSubAuthority0,_In_ DWORD dwSubAuthority1,_In_ DWORD dwSubAuthority2,_In_ DWORD dwSubAuthority3,_In_ DWORD dwSubAuthority4,_In_ DWORD dwSubAuthority5,_In_ DWORD dwSubAuthority6,_In_ DWORD dwSubAuthority7,_Out_ PSID *pSid)
NTSTATUS None None.SpImportSecurityContext(_In_ PSecBuffer pPackedContext,_In_ HANDLE Token,_Out_ PLSA_SEC_HANDLE phContext)
BOOL WINAPI user32.IsWindowVisible(_In_ HWND hWnd)
HRESULT None None.GetSpecifyPropertyPages([out] ISpecifyPropertyPages **ppSpecifyPropPages,[out] IUnknown ***pppUnknowns,[out] ULONG *pcUnks)
NET_API_STATUS None netapi32.NetUserSetInfo(_In_ LPCWSTR servername,_In_ LPCWSTR username,_In_ DWORD level,_In_ LPBYTE buf,_Out_ LPDWORD parm_err)
HRESULT None oleaut32.VarR4FromBool(_In_ VARIANT_BOOL boolIn,_Out_ FLOAT *pfltOut)
DWORD WINAPI clusapi.ClusterResourceCloseEnum(_In_ HRESENUM hResEnum)
NET_API_STATUS None netapi32.NetStatisticsGet(_In_ LPWSTR server,_In_ LPWSTR service,_In_ DWORD level,_In_ DWORD options,_Out_ LPBYTE *bufptr)
COLORREF None None.ListView_GetBkColor(HWND hwnd None)
HRESULT None wmpmediasharing.get_allowSharingToAllDevices([out] VARIANT_BOOL *sharingEnabled)
HRESULT None None.get_line(long *lineNumber None)
HRESULT None ole32.CoEnableCallCancellation(_In_opt_ LPVOID pReserved)
DWORD WINAPI clusapi.ClusterGetEnumCountEx(_In_ HCLUSENUMEX hClusterEnum)
BOOL WINAPI user32.IsWindow(_In_opt_ HWND hWnd)
RPC_STATUS RPC_ENTRY rpcrt4.RpcBindingFree(RPC_BINDING_HANDLE *Binding None)
int None None.OpenMyQueue(LPWSTR wszPathName None,DWORD dwAccess None,DWORD dwShareMode None,QUEUEHANDLE *phQueue None)
HRESULT WINAPI wsdapi.WSDCreateUdpAddress(_In_ IWSDUdpAddress **ppAddress)
CALID None None.MonthCal_GetCALID(HWND hmc None)
BOOL WINAPI user32.GetPhysicalCursorPos(_Out_ LPPOINT lpPoint)
BOOL CALLBACK None.AuthzComputeGroupsCallback(_In_ AUTHZ_CLIENT_CONTEXT_HANDLE hAuthzClientContext,_In_ PVOID Args,_Out_ PSID_AND_ATTRIBUTES *pSidAttrArray,_Out_ PDWORD pSidCount,_Out_ PSID_AND_ATTRIBUTES *pRestrictedSidAttrArray,_Out_ PDWORD pRestrictedSidCount)
NTSTATUS None None.SpMarshallSupplementalCreds(_In_ ULONG CredentialSize,_In_ PUCHAR Credentials,_Out_ PULONG MarshalledCredSize,_Out_ PVOID *MarshalledCreds)
uint32 None wvrcimprov.SetNetworkConstraint([in] string SourceComputerName,[in] string SourceRGName,[in] string DestinationComputerName,[in] string DestinationRGName,[in] string SourceNWInterfaceIndex[],[in] string DestinationNWInterfaceIndex[],[out] MSFT_WvrNetworkConstraint Output[])
NETIOAPI_API None iphlpapi.FlushIpPathTable(_In_ ADDRESS_FAMILY Family)
HRESULT None None.TreeView_SetExtendedStyle(HWND hwnd None,DWORD dw None,UINT mask None)
HRESULT None None.get_Players(IWMSPlayers** pVal None)
public String None.ToLower(CultureInfo culture None)
uint32 None msiprov.Upgrade([in] string PackageLocation,[in] string Options)
HTREEITEM None None.TreeView_MapAccIDToHTREEITEM(HWND hwnd None,UINT id None)
HRESULT None None.Clone([out None None,retval] IXpsOMRadialGradientBrush **radialGradientBrush)
protected void None.OnDeleted(FileSystemEventArgs e None)
ULONGLONG None comctl32.DSA_GetSize(_In_ HDSA hdsa)
HRESULT None tapi3.get_ACDGroup([out] ITACDGroup **ppACDGroup)
LONG WINAPI tapi32.lineClose(HLINE hLine None)
protected void None.AddChild(Object child None)
BOOL WINAPI kernel32.HeapLock(_In_ HANDLE hHeap)
HRESULT None None.get_baseName(BSTR *nameString None)
UINT None msi.MsiEnumClients(_In_ LPCTSTR szComponent,_In_ DWORD iProductIndex,_Out_ LPTSTR lpProductBuf)
UINT None msi.MsiEnumClientsW(_In_ LPCTSTR szComponent,_In_ DWORD iProductIndex,_Out_ LPTSTR lpProductBuf)
UINT None msi.MsiEnumClientsA(_In_ LPCTSTR szComponent,_In_ DWORD iProductIndex,_Out_ LPTSTR lpProductBuf)
BOOLEAN WINAPI powrprof.SetActivePwrScheme(_In_ UINT uiID,_In_opt_ PGLOBAL_POWER_POLICY lpGlobalPowerPolicy,_In_opt_ PPOWER_POLICY lpPowerPolicy)
LONG TSPIAPI None.TSPI_phoneGetStatus(HDRVPHONE hdPhone None,LPPHONESTATUS lpPhoneStatus None)
UINT None msi.MsiAdvertiseProductEx(_In_ LPCTSTR szPackagePath,_In_ LPCTSTR szScriptfilePath,_In_ LPCTSTR szTransforms,_In_ LANGID lgidLanguage,_In_ DWORD dwPlatform,_In_ DWORD dwOptions)
UINT None msi.MsiAdvertiseProductExW(_In_ LPCTSTR szPackagePath,_In_ LPCTSTR szScriptfilePath,_In_ LPCTSTR szTransforms,_In_ LANGID lgidLanguage,_In_ DWORD dwPlatform,_In_ DWORD dwOptions)
UINT None msi.MsiAdvertiseProductExA(_In_ LPCTSTR szPackagePath,_In_ LPCTSTR szScriptfilePath,_In_ LPCTSTR szTransforms,_In_ LANGID lgidLanguage,_In_ DWORD dwPlatform,_In_ DWORD dwOptions)
HRESULT None None.get_MultisessionInterfaces([out] SAFEARRAY *pVal)
HRESULT None azroles.GetBusinessRuleString([out] BSTR *pbstrBusinessRuleString)
HRESULT None shell32.AssocGetDetailsOfPropKey(_In_ IShellFolder *psf,_In_ PCUITEMID_CHILD pidl,_In_ PROPERTYKEY *pkey,_Out_ VARIANT *pv,_Out_ BOOL *pfFoundPropKey)
NET_API_STATUS None netapi32.NetAlertRaise(_In_ LPCWSTR AlertEventName,_In_ LPVOID Buffer,_In_ DWORD BufferSize)
DWORD PXEAPI wdspxe.PxeAsyncRecvDone(_In_ HANDLE hClientRequest,_In_ PXE_BOOT_ACTION Action)
BOOL CALLBACK None.EnumDateFormatsProcEx(_In_ LPTSTR lpDateFormatString,_In_ CALID CalendarID)
HRESULT None ole32.Enum([out] IEnumSTATPROPSTG **ppenum)
protected void None.OnRemoveRelation(DataRelation relation None)
TCHAR None None.Edit_GetPasswordChar(HWND hwndCtl None)
UINT None msi.MsiSetFeatureState(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szFeature,_In_ INSTALLSTATE iState)
UINT None msi.MsiSetFeatureStateW(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szFeature,_In_ INSTALLSTATE iState)
UINT None msi.MsiSetFeatureStateA(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szFeature,_In_ INSTALLSTATE iState)
HRESULT None None.getElementsByTagName(BSTR tagName None,IXMLDOMNodeList **resultList None)
BOOL WINAPI user32.SetMenuItemInfo(_In_ HMENU hMenu,_In_ UINT uItem,_In_ BOOL fByPosition,_In_ LPMENUITEMINFO lpmii)
BOOL WINAPI user32.SetMenuItemInfoW(_In_ HMENU hMenu,_In_ UINT uItem,_In_ BOOL fByPosition,_In_ LPMENUITEMINFO lpmii)
BOOL WINAPI user32.SetMenuItemInfoA(_In_ HMENU hMenu,_In_ UINT uItem,_In_ BOOL fByPosition,_In_ LPMENUITEMINFO lpmii)
HINTERNET WINAPI winhttp.WinHttpConnect(_In_ HINTERNET hSession,_In_ LPCWSTR pswzServerName,_In_ INTERNET_PORT nServerPort,_Reserved_ DWORD dwReserved)
VOID None None.WdfDeviceInitSetCharacteristics(_In_ PWDFDEVICE_INIT DeviceInit,_In_ ULONG DeviceCharacteristics,_In_ BOOLEAN OrInValues)
HRESULT WINAPI ndfapi.NdfCreateWebIncidentEx(_In_ LPCWSTR url,_In_ BOOL useWinHTTP,_In_ LPWSTR moduleName,_Out_ NDFHANDLE *handle)
BOOL None kernel32.EnumSystemLocales(_In_ LOCALE_ENUMPROC lpLocaleEnumProc,_In_ DWORD dwFlags)
BOOL None kernel32.EnumSystemLocalesW(_In_ LOCALE_ENUMPROC lpLocaleEnumProc,_In_ DWORD dwFlags)
BOOL None kernel32.EnumSystemLocalesA(_In_ LOCALE_ENUMPROC lpLocaleEnumProc,_In_ DWORD dwFlags)
HRESULT None None.GetMaterial([out] D3DMATERIAL9 *pMaterial)
HRESULT None ole32.CoInstall(_In_ IBindCtx *pbc,_In_ DWORD dwFlags,_In_ uCLSSPEC *pClassSpec,_In_ QUERYCONTEXT *pQuery,_In_ LPWSTR pszCodeBase)
HRESULT None ole32.CoTreatAsClass(_In_ REFCLSID clsidOld,_In_ REFCLSID clsidNew)
BOOL None None.Edit_ScrollCaret(HWND hwndCtl None)
PTCHAR WINAPI dbghelp.SymSetHomeDirectory(_In_ HANDLE hProcess,_In_opt_ PCTSTR dir)
PTCHAR WINAPI dbghelp.SymSetHomeDirectoryW(_In_ HANDLE hProcess,_In_opt_ PCTSTR dir)
PTCHAR WINAPI dbghelp.SymSetHomeDirectory(_In_ HANDLE hProcess,_In_opt_ PCTSTR dir)
HRESULT None shlwapi.IStream_WriteStr(_In_ IStream *pstm,_In_ PCWSTR psz)
HRESULT None None.get_SerialPorts([out] IVMSerialPortCollection **serialPortCollection)
HRESULT None windows.media.audio.XAudio2Create(_Out_ IXAudio2 **ppXAudio2,_In_ UINT32 Flags,_In_ XAUDIO2_PROCESSOR XAudio2Processor)
HRESULT None None.ItemCount(UINT *puiItemCount None)
HRESULT None None.PtrdiffTSub(_In_ ptrdiff_t Minuend,_In_ ptrdiff_t Subtrahend,_Out_ ptrdiff_t *pResult)
uint32 None dhcpserverpsprovider.RemoveByPrefix([in] string ComputerName,[in] boolean PassThru,[in] string Prefix,[out] DhcpServerv6Lease cmdletOutput[])
HRESULT STDAPI cldapi.CfSetInSyncState(_In_ HANDLE FileHandle,_In_ CF_IN_SYNC_STATE InSyncState,_In_ CF_SET_IN_SYNC_FLAGS InSyncFlags,_Inout_opt_ USN *InSyncUsn)
HRESULT None None.PtrdiffTAdd(_In_ ptrdiff_t Augend,_In_ ptrdiff_t Addend,_Out_ ptrdiff_t *pResult)
HRESULT None d3dcompiler_47.GetDesc([out] D3D11_LIBRARY_DESC *pDesc)
HRESULT None msdrm.DRMGetBoundLicenseAttribute(_In_ DRMHANDLE hQueryRoot,_In_ PWSTR wszAttribute,_In_ UINT iWhich,_Out_ DRMENCODINGTYPE *peEncoding,_Inout_ UINT *pcBuffer,_Out_ BYTE *pbBuffer)
SerializableAttribute None None.TypeConverterAttribute(System.Windows.Forms.Layout.TableLayoutSettingsTypeConverter None None)
public MethodBuilder None.DefineMethod(String name None,MethodAttributes attributes None,Type returnType None,Type[] parameterTypes None)
D2D1_PROPERTY_TYPE None d2d1.GetType(UINT32 index None)
LONG TSPIAPI None.TSPI_lineSetCallHubTracking(HDRVLINE hdLine None,LPLINECALLHUBTRACKINGINFO lpTrackingInfo None)
HRESULT None mfplat.MFInvokeCallback(IMFAsyncResult *pAsyncResult None)
ULONG None advapi32.GetTraceEnableFlags(_In_ TRACEHANDLE SessionHandle)
HCRYPTMSG WINAPI crypt32.CryptMsgDuplicate(_In_ HCRYPTMSG hCryptMsg)
HRESULT None None.transformNode(IXMLDOMNode *stylesheet None,BSTR *xmlString None)
LONG TSPIAPI None.TSPI_lineGetCallAddressID(HDRVCALL hdCall None,LPDWORD lpdwAddressID None)
private void None.listDragTarget_DragOver(Object sender None,System.Windows.Forms.DragEventArgs e None)
DWORD WINAPI wlanapi.WFDCloseSession(_In_ PHANDLE hSessionHandle)
UINT None msi.MsiGetFeatureInfo(_In_ MSIHANDLE hProduct,_In_ LPCTSTR szFeature,_Out_opt_ LPDWORD lpAttributes,_Out_opt_ LPTSTR lpTitleBuf,_Inout_opt_ LPDWORD pcchTitleBuf,_Out_opt_ LPTSTR lpHelpBuf,_Inout_opt_ LPDWORD pcchHelpBuf)
UINT None msi.MsiGetFeatureInfoW(_In_ MSIHANDLE hProduct,_In_ LPCTSTR szFeature,_Out_opt_ LPDWORD lpAttributes,_Out_opt_ LPTSTR lpTitleBuf,_Inout_opt_ LPDWORD pcchTitleBuf,_Out_opt_ LPTSTR lpHelpBuf,_Inout_opt_ LPDWORD pcchHelpBuf)
UINT None msi.MsiGetFeatureInfoA(_In_ MSIHANDLE hProduct,_In_ LPCTSTR szFeature,_Out_opt_ LPDWORD lpAttributes,_Out_opt_ LPTSTR lpTitleBuf,_Inout_opt_ LPDWORD pcchTitleBuf,_Out_opt_ LPTSTR lpHelpBuf,_Inout_opt_ LPDWORD pcchHelpBuf)
BOOL WINAPI user32.CheckMenuRadioItem(_In_ HMENU hmenu,_In_ UINT idFirst,_In_ UINT idLast,_In_ UINT idCheck,_In_ UINT uFlags)
public void None.WriteXml(TextWriter writer None)
public String None.ToString(String format None)
DWORD WINAPI clusapi.RegisterClusterNotify(_In_ HCHANGE hChange,_In_ DWORD dwFilterType,_In_ HANDLE hObject,_In_ DWORD_PTR dwNotifyKey)
LPWSTR WINAPI resutils.ResUtilExpandEnvironmentStrings(_In_ LPCWSTR pszSrc)
public String None.GetString(StringProperty prop None)
RPC_STATUS None rpcrt4.RpcServerInqBindingHandle(RPC_BINDING_HANDLE *Binding None)
HRESULT None ole32.CoGetObjectContext(_In_ REFIID riid,_Out_ LPVOID *ppv)
HRESULT None None.EnumSessions(IAudioSessionManager2* pSessionManager None)
HRESULT None None.AddNetworkAdapter([out] IVMNetworkAdapter **networkAdapter)
HRESULT None None.GetStrokeDashes([out None None,retval] IXpsOMDashCollection **strokeDashes)
BOOL None imm32.ImmSetCandidateWindow(_In_ HIMC hIMC,_In_ LPCANDIDATEFORM lpCandidate)
HRESULT None None.GetFillBrush([out None None,retval] IXpsOMBrush **fillBrush)
HRESULT None windowscodecs.GetCount([out] UINT *pcCount)
PTSTR None shlwapi.StrFormatKBSize(LONGLONG qdw None,_Out_ PTSTR pszBuf,UINT cchBuf None)
PTSTR None shlwapi.StrFormatKBSizeW(LONGLONG qdw None,_Out_ PTSTR pszBuf,UINT cchBuf None)
PTSTR None shlwapi.StrFormatKBSizeA(LONGLONG qdw None,_Out_ PTSTR pszBuf,UINT cchBuf None)
HRESULT None None.get_PerPlayerConnectionBandwidth(long* pVal None)
int None None.CommDlg_OpenSave_GetFolderIDList(hwnd None None,lparam None None,wparam None None)
public void None.SetValue(DependencyPropertyKey key None,Object value None)
HRESULT STDMETHODCALLTYPE ole32.CStdAsyncStubBuffer_Invoke(_In_ IRpcStubBuffer *pthis,_In_ RPCOLEMESSAGE *_prpcmsg,_In_ IRpcChannelBuffer *_pRpcChannelBuffer)
HRESULT None None.CloneStreamHeader(IWMSStreamHeader** ppHeader None)
protected void None.OnPreviewStylusDown(StylusDownEventArgs e None)
HRESULT None windowscodecs.GetWhitePointKelvin([out] UINT *pWhitePointKelvin)
DWORD WINAPI wifidisplay.WFDStartDisplaySink(_In_ USHORT uDeviceCategory,_In_ USHORT uSubCategory,_In_opt_ PVOID pCallbackContext,_In_ WFD_DISPLAY_SINK_NOTIFICATION_CALLBACK *pfnCallback)
BOOL None None.MonthCal_GetUnicodeFormat(HWND hwnd None)
LONG WINAPI scarddlg.SCardUIDlgSelectCard(_In_ LPOPENCARDNAME_EX pDlgStruc)
LONG WINAPI scarddlg.SCardUIDlgSelectCardW(_In_ LPOPENCARDNAME_EX pDlgStruc)
LONG WINAPI scarddlg.SCardUIDlgSelectCardA(_In_ LPOPENCARDNAME_EX pDlgStruc)
BOOL WINAPI None.FaxConnectFaxServer(__in_opt LPCTSTR MachineName,__out LPHANDLE FaxHandle)
BOOL WINAPI None.FaxConnectFaxServerW(__in_opt LPCTSTR MachineName,__out LPHANDLE FaxHandle)
BOOL WINAPI None.FaxConnectFaxServerA(__in_opt LPCTSTR MachineName,__out LPHANDLE FaxHandle)
PCWSTR None propsys.VariantToStringWithDefault(_In_ REFVARIANT varIn,_In_ LPCWSTR pszDefault)
public boolean None.GetStandardValuesSupported(ITypeDescriptorContext context None)
HRESULT STDAPI cldapi.CfGetPlaceholderRangeInfo(_In_ HANDLE FileHandle,_In_ CF_PLACEHOLDER_RANGE_INFO_CLASS InfoClass,_In_ LARGE_INTEGER StartingOffset,_In_ LARGE_INTEGER Length,_Out_ PVOID InfoBuffer,_In_ DWORD InfoBufferLength,_Out_opt_ PDWORD ReturnedLength)
HRESULT None ole32.CoUnmarshalInterface(_In_ LPSTREAM pStm,_In_ REFIID riid,_Out_ LPVOID *ppv)
INT WSAAPI ws2_32.WSAStringToAddress(_In_ LPTSTR AddressString,_In_ INT AddressFamily,_In_opt_ LPWSAPROTOCOL_INFO lpProtocolInfo,_Out_ LPSOCKADDR lpAddress,_Inout_ LPINT lpAddressLength)
INT WSAAPI ws2_32.WSAStringToAddressW(_In_ LPTSTR AddressString,_In_ INT AddressFamily,_In_opt_ LPWSAPROTOCOL_INFO lpProtocolInfo,_Out_ LPSOCKADDR lpAddress,_Inout_ LPINT lpAddressLength)
INT WSAAPI ws2_32.WSAStringToAddressA(_In_ LPTSTR AddressString,_In_ INT AddressFamily,_In_opt_ LPWSAPROTOCOL_INFO lpProtocolInfo,_Out_ LPSOCKADDR lpAddress,_Inout_ LPINT lpAddressLength)
BOOL None None.Edit_CanUndo(HWND hwndCtl None)
HRESULT WINAPI iscsidsc.ReportIscsiPersistentLogins(_Out_ ULONG *Count,_Inout_ PPERSISTENT_ISCSI_LOGIN_INFO PersistentLoginInfo,_Inout_ PULONG BufferSizeInBytes)
HRESULT WINAPI iscsidsc.ReportIscsiPersistentLoginsW(_Out_ ULONG *Count,_Inout_ PPERSISTENT_ISCSI_LOGIN_INFO PersistentLoginInfo,_Inout_ PULONG BufferSizeInBytes)
HRESULT WINAPI iscsidsc.ReportIscsiPersistentLoginsA(_Out_ ULONG *Count,_Inout_ PPERSISTENT_ISCSI_LOGIN_INFO PersistentLoginInfo,_Inout_ PULONG BufferSizeInBytes)
BOOL None comctl32.ImageList_DragLeave(HWND hwndLock None)
HRESULT WDSTRANSPORTPROVIDERAPI None.WdsTransportProviderCompareContent(_In_ HANDLE hInstance,_In_ PCWSTR pwszContentName,_In_ HANDLE hContent,_Out_ PBOOL pbContentMatches)
HRESULT None msdrm.DRMEnumerateLicense(_In_ DRMHSESSION hSession,_In_ UINT uFlags,_In_ UINT uIndex,_Inout_ BOOL *pfSharedFlag,_Inout_ UINT *puCertificateDataLen,_Out_ PWSTR wszCertificateData)
HRESULT None d2d1.CreateColorContextFromFilename(PCWSTR filename None,[out] ID2D1ColorContext **colorContext)
HWND WINAPI user32.GetNextDlgGroupItem(_In_ HWND hDlg,_In_opt_ HWND hCtl,_In_ BOOL bPrevious)
void None None.GetDimensions(out UINT Width,out UINT Height,out UINT Elements,out UINT NumberOfSamples)
BOOL WINAPI kernel32.UnregisterBadMemoryNotification(_In_ PVOID RegistrationHandle)
DWORD WINAPI None.Offline(_In_ RESID Resource)
WINAPI None crypt32.CertFreeServerOcspResponseContext(_In_ PCCERT_SERVER_OCSP_RESPONSE_CONTEXT pServerOcspResponseContext)
HRESULT None oleaut32.VarDecFromI1(_In_ CHAR cIn,_Out_ DECIMAL *pdecOut)
DWORD PXEAPI wdspxe.PxeDhcpv6GetOptionValue(_In_ PVOID pPacket,_In_ ULONG uPacketLen,_In_ ULONG uInstance,_In_ WORD wOption,_Out_opt_ PWORD pwOptionLen,_Out_opt_ PVOID *ppOptionValue)
DWORD WINAPI None.Release(_In_ RESID Resource)
VOID None None.XMStoreUInt2([out] XMUINT2 *pDestination,XMVECTOR V None)
NET_API_STATUS None netapi32.NetValidatePasswordPolicy(_In_ LPCWSTR ServerName,_In_ LPVOID Qualifier,_In_ NET_VALIDATE_PASSWORD_TYPE ValidationType,_In_ LPVOID InputArg,_Out_ LPVOID OutputArg)
NTSTATUS None None.GetClientInfo(_Out_ PSECPKG_CLIENT_INFO ClientInfo)
NET_API_STATUS None netapi32.NetRequestOfflineDomainJoin(_In_ BYTE *pProvisionBinData,_In_ DWORD cbProvisionBinDataSize,_In_ DWORD dwOptions,_In_ LPCWSTR lpWindowsPath)
BOOL WINAPI user32.ModifyMenu(_In_ HMENU hMnu,_In_ UINT uPosition,_In_ UINT uFlags,_In_ UINT_PTR uIDNewItem,_In_opt_ LPCTSTR lpNewItem)
BOOL WINAPI user32.ModifyMenuW(_In_ HMENU hMnu,_In_ UINT uPosition,_In_ UINT uFlags,_In_ UINT_PTR uIDNewItem,_In_opt_ LPCTSTR lpNewItem)
BOOL WINAPI user32.ModifyMenuA(_In_ HMENU hMnu,_In_ UINT uPosition,_In_ UINT uFlags,_In_ UINT_PTR uIDNewItem,_In_opt_ LPCTSTR lpNewItem)
HRESULT None oleaut32.GetVarConversionLocaleSetting(_Out_ ULONG *dwFlags)
BOOL WINAPI advapi32.CryptEnumProviderTypes(_In_ DWORD dwIndex,_In_ DWORD *pdwReserved,_In_ DWORD dwFlags,_Out_ DWORD *pdwProvType,_Out_ LPTSTR pszTypeName,_Inout_ DWORD *pcbTypeName)
BOOL WINAPI advapi32.CryptEnumProviderTypesW(_In_ DWORD dwIndex,_In_ DWORD *pdwReserved,_In_ DWORD dwFlags,_Out_ DWORD *pdwProvType,_Out_ LPTSTR pszTypeName,_Inout_ DWORD *pcbTypeName)
BOOL WINAPI advapi32.CryptEnumProviderTypesA(_In_ DWORD dwIndex,_In_ DWORD *pdwReserved,_In_ DWORD dwFlags,_Out_ DWORD *pdwProvType,_Out_ LPTSTR pszTypeName,_Inout_ DWORD *pcbTypeName)
HRESULT None oleaut32.VarDateFromI1(_In_ CHAR cIn,_Out_ DATE *pdateOut)
HRESULT None oleaut32.VarI2FromCy(_In_ CY cyIn,SHORT *psOut None)
UINT None msi.MsiSourceListClearMediaDisk(_In_ LPCTSTR szProductCodeOrPatchCode,_In_opt_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD dwOptions,_In_ DWORD dwDiskID)
UINT None msi.MsiSourceListClearMediaDiskW(_In_ LPCTSTR szProductCodeOrPatchCode,_In_opt_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD dwOptions,_In_ DWORD dwDiskID)
UINT None msi.MsiSourceListClearMediaDiskA(_In_ LPCTSTR szProductCodeOrPatchCode,_In_opt_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD dwOptions,_In_ DWORD dwDiskID)
public void None.DownloadFileGroup(String groupName None)
HRESULT None explorerframe.UpdateThumbarButton(HWND hwnd None)
HRESULT None None.get_name(BSTR *rootName None)
ULONG None None.ldap_open_fast_bind_session(LPTSTR pHostName None,PLDAP pSession None)
VOID None None.LsaApLogonTerminated(_In_ PLUID LogonId)
BOOL None advapi32.CredGetTargetInfo(_In_ LPCTSTR TargetName,_In_ DWORD Flags,_Out_ PCREDENTIAL_TARGET_INFORMATION *TargetInfo)
BOOL None advapi32.CredGetTargetInfoW(_In_ LPCTSTR TargetName,_In_ DWORD Flags,_Out_ PCREDENTIAL_TARGET_INFORMATION *TargetInfo)
BOOL None advapi32.CredGetTargetInfoA(_In_ LPCTSTR TargetName,_In_ DWORD Flags,_Out_ PCREDENTIAL_TARGET_INFORMATION *TargetInfo)
HRESULT None None.setStartMode(BSTR mode None,BSTR namespaceURI None)
BOOL WINAPI wtsapi32.WTSEnumerateSessionsEx(_In_ HANDLE hServer,_Inout_ DWORD *pLevel,_In_ DWORD Filter,_Out_ PWTS_SESSION_INFO_1 *ppSessionInfo,_Out_ DWORD *pCount)
BOOL WINAPI wtsapi32.WTSEnumerateSessionsExW(_In_ HANDLE hServer,_Inout_ DWORD *pLevel,_In_ DWORD Filter,_Out_ PWTS_SESSION_INFO_1 *ppSessionInfo,_Out_ DWORD *pCount)
BOOL WINAPI wtsapi32.WTSEnumerateSessionsExA(_In_ HANDLE hServer,_Inout_ DWORD *pLevel,_In_ DWORD Filter,_Out_ PWTS_SESSION_INFO_1 *ppSessionInfo,_Out_ DWORD *pCount)
VOID None mswsock.RIOCloseCompletionQueue(_In_ RIO_CQ CQ)
HRESULT None None.put_OptimalPacketSize(long dwOptimalMtu None)
BOOL WINAPI kernel32.SetThreadStackGuarantee(_Inout_ PULONG StackSizeInBytes)
BOOL WINAPI user32.AppendMenu(_In_ HMENU hMenu,_In_ UINT uFlags,_In_ UINT_PTR uIDNewItem,_In_opt_ LPCTSTR lpNewItem)
BOOL WINAPI user32.AppendMenuW(_In_ HMENU hMenu,_In_ UINT uFlags,_In_ UINT_PTR uIDNewItem,_In_opt_ LPCTSTR lpNewItem)
BOOL WINAPI user32.AppendMenuA(_In_ HMENU hMenu,_In_ UINT uFlags,_In_ UINT_PTR uIDNewItem,_In_opt_ LPCTSTR lpNewItem)
HRESULT None usp10.ScriptGetGlyphABCWidth(_In_ HDC hdc,_Inout_ SCRIPT_CACHE *psc,_In_ WORD wGlyph,_Out_ ABC *pABC)
HRESULT None None.get_DataSources(IWMSPlugins** pVal None)
BOOL WINAPI user32.SetProcessRestrictionExemption(BOOL fEnableExemption None)
HOLEMENU None ole32.OleCreateMenuDescriptor(_In_ HMENU hmenuCombined,_In_ LPOLEMENUGROUPWIDTHS lpMenuWidths)
uint32 None dhcpserverpsprovider.Get([in] string ComputerName,[in] uint32 OptionId[],[in] string VendorClass,[in] boolean All,[out] DhcpServerv6OptionDefinition cmdletOutput[])
MI_INLINE MI_Result None.MI_OperationOptions_SetProviderArchitecture(_Inout_ MI_OperationOptions *options,_In_ MI_ProviderArchitecture architecture,_In_ MI_Boolean mustComply)
BOOLEAN WINAPI advapi32.AuditEnumerateCategories(_Out_ GUID **ppAuditCategoriesArray,_Out_ PULONG pCountReturned)
HRESULT None windowscodecs.IWICPalette_GetType_Proxy(_In_ IWICPalette *THIS_PTR,_Out_ WICBitmapPaletteType *pePaletteType)
HRESULT None None.Link(LPWSTR *ppszHomePage None)
Object None None.ToType(Type conversionType None,IFormatProvider provider None)
BOOL None comctl32.ImageList_SetImageCount(_In_ HIMAGELIST himl,_In_ UINT uNewCount)
HRESULT None None.GetColumnInfo(DBORDINAL *pcColumns None,DBCOLUMNINFO **prgInfo None,OLECHAR **ppStringsBuffer None)
void None None.LoadViewState(Object state None)
HRESULT None d2d1.SetPrimitiveBlend(D2D1_PRIMITIVE_BLEND primitiveBlend None)
HRESULT None None.GetSizeMax([out] ULARGE_INTEGER *pcbSize)
LONG TSPIAPI None.TSPI_lineGetCallStatus(HDRVCALL hdCall None,LPLINECALLSTATUS lpCallStatus None)
HRESULT None mfplat.MFAverageTimePerFrameToFrameRate(_In_ UINT64 unAverageTimePerFrame,_Out_ UINT32 *punNumerator,_Out_ UINT32 *punDenominator)
NET_API_STATUS None netapi32.NetGroupSetUsers(_In_ LPCWSTR servername,_In_ LPCWSTR groupname,_In_ DWORD level,_In_ LPBYTE buf,_In_ DWORD totalentries)
INT None None.ListView_GetHotItem(HWND hwndLV None)
BOOL None shell32.ILIsParent(_In_ PCIDLIST_ABSOLUTE pidl1,_In_ PCIDLIST_ABSOLUTE pidl2,_In_ BOOL fImmediate)
HRESULT None None.get_data(BSTR *strData None)
HRESULT None None.GetBidiLevel([out None None,retval] UINT32 *bidiLevel)
BOOL None kernel32.EnumCalendarInfoEx(_In_ CALINFO_ENUMPROCEX pCalInfoEnumProcEx,_In_ LCID Locale,_In_ CALID Calendar,_In_ CALTYPE CalType)
BOOL None kernel32.EnumCalendarInfoExW(_In_ CALINFO_ENUMPROCEX pCalInfoEnumProcEx,_In_ LCID Locale,_In_ CALID Calendar,_In_ CALTYPE CalType)
BOOL None kernel32.EnumCalendarInfoExA(_In_ CALINFO_ENUMPROCEX pCalInfoEnumProcEx,_In_ LCID Locale,_In_ CALID Calendar,_In_ CALTYPE CalType)
HRESULT None ole32.BindMoniker(_In_ LPMONIKER pmk,_In_ DWORD grfOpt,_In_ REFIID iidResult,_Out_ LPVOID *ppvResult)
SCESTATUS WINAPI None.SceSvcAttachmentConfig(_In_ PSCESVC_CALLBACK_INFO pSceCbInfo)
void None None.f(int32 None None)
HRESULT None ndfapi.NdfExecuteDiagnosis(NDFHANDLE handle None,HWND hwnd None)
COLORREF None None.TreeView_SetInsertMarkColor(HWND hwndTV None,COLORREF clrInsertMark None)
HRESULT None pla.GetRegisteredProcesses([out] IValueMap **Processes)
BOOL WINAPI kernel32.IsThreadpoolTimerSet(_Inout_ PTP_TIMER pti)
NTSTATUS None None.WdfPdoInitAddCompatibleID(_In_ PWDFDEVICE_INIT DeviceInit,_In_ PCUNICODE_STRING CompatibleID)
HRESULT None srmsvc.get_ClassificationLastReportPathWithoutExtension([out] BSTR *pLastReportPath)
DWORD WINAPI davclnt.DavInvalidateCache(_In_ LPWSTR URLName)
HRESULT WINAPI dwmapi.DwmSetDxFrameDuration(HWND hwnd None,INT cRefreshes None)
uint32 None wvrcimprov.RemoveNetworkConstraint([in] string SourceRGName,[in] string SourceComputerName,[in] string DestinationRGName,[in] string DestinationComputerName)
HRESULT None None.get_Status(WMS_SERVER_STATUS* pVal None)
ULONG WINAPI advapi32.PerfCloseQueryHandle(_In_ HANDLE hQuery)
void None None.proc1(void None None)
public boolean None.GetStandardValuesSupported(ITypeDescriptorContext context None)
UINT None None.TreeView_GetScrollTime(HWND hwndTV None)
BOOL None None.WlxQueryInetConnectorCredentials(_Out_ PWLX_CLIENT_CREDENTIALS_INFO_V1_0 pCred)
HRESULT None None.GetDescription([out None None,retval] LPWSTR *description)
LONG WINAPI tapi32.lineShutdown(HLINEAPP hLineApp None)
PDH_STATUS None pdh.PdhValidatePath(_In_ LPCTSTR szFullCounterPath)
PDH_STATUS None pdh.PdhValidatePathW(_In_ LPCTSTR szFullCounterPath)
PDH_STATUS None pdh.PdhValidatePathA(_In_ LPCTSTR szFullCounterPath)
MI_INLINE MI_Result None.MI_DestinationOptions_GetOptionCount(_In_ MI_DestinationOptions *options,_Out_ MI_Uint32 *count)
LONG WINAPI tapi32.lineGetAddressID(HLINE hLine None,LPDWORD lpdwAddressID None,DWORD dwAddressMode None,LPCSTR lpsAddress None,DWORD dwSize None)
LONG WINAPI tapi32.lineGetAddressIDW(HLINE hLine None,LPDWORD lpdwAddressID None,DWORD dwAddressMode None,LPCSTR lpsAddress None,DWORD dwSize None)
LONG WINAPI tapi32.lineGetAddressIDA(HLINE hLine None,LPDWORD lpdwAddressID None,DWORD dwAddressMode None,LPCSTR lpsAddress None,DWORD dwSize None)
protected void None.OnPreviewMouseWheel(MouseWheelEventArgs e None)
HRESULT None None.get_Time(DATE* pVal None)
BOOL WINAPI user32.UserHandleGrantAccess(_In_ HANDLE hUserHandle,_In_ HANDLE hJob,_In_ BOOL bGrant)
void None None.abort(void None None)
void None None.exit(int status None)
HRESULT None msdrm.DRMCreateIssuanceLicense(_In_ SYSTEMTIME *pstTimeFrom,_In_ SYSTEMTIME *pstTimeUntil,_In_ PWSTR wszReferralInfoName,_In_ PWSTR wszReferralInfoURL,_In_opt_ DRMPUBHANDLE hOwner,_In_ PWSTR wszIssuanceLicense,_In_ DRMHANDLE hBoundLicense,_Out_ DRMPUBHANDLE *phIssuanceLicense)
BOOL WINAPI crypt32.CryptRegisterOIDFunction(_In_ DWORD dwEncodingType,_In_ LPCSTR pszFuncName,_In_ LPCSTR pszOID,_In_ LPCWSTR pwszDll,_In_ LPCSTR pszOverrideFuncName)
protected void None.OnClick(EventArgs e None)
uint32 None cimwin32.SetTcpUseRFC1122UrgentPointer([in] boolean TcpUseRFC1122UrgentPointer)
VOID NET_API_FUNCTION netapi32.NetFreeAadJoinInformation(_In_opt_ PDSREG_JOIN_INFO pJoinInfo)
HRESULT None oleaut32.VarDecFromDate(_In_ DATE dateIn,_Out_ DECIMAL *pdecOut)
PDH_STATUS None pdh.PdhExpandCounterPath(_In_ LPCTSTR szWildCardPath,_Out_ LPTSTR mszExpandedPathList,_Inout_ LPDWORD pcchPathListLength)
PDH_STATUS None pdh.PdhExpandCounterPathW(_In_ LPCTSTR szWildCardPath,_Out_ LPTSTR mszExpandedPathList,_Inout_ LPDWORD pcchPathListLength)
PDH_STATUS None pdh.PdhExpandCounterPathA(_In_ LPCTSTR szWildCardPath,_Out_ LPTSTR mszExpandedPathList,_Inout_ LPDWORD pcchPathListLength)
NTSTATUS WINAPI powrprof.CallNtPowerInformation(_In_ POWER_INFORMATION_LEVEL InformationLevel,_In_ PVOID lpInputBuffer,_In_ ULONG nInputBufferSize,_Out_ PVOID lpOutputBuffer,_In_ ULONG nOutputBufferSize)
HRESULT None shell32.SHMultiFileProperties(_In_ IDataObject *pdtobj,DWORD dwFlags None)
NET_API_STATUS None netapi32.NetWkstaGetInfo(_In_ LPWSTR servername,_In_ DWORD level,_Out_ LPBYTE *bufptr)
NTSTATUS None None.LsaApCallPackagePassthrough(_In_ PLSA_CLIENT_REQUEST ClientRequest,_In_ PVOID ProtocolSubmitBuffer,_In_ PVOID ClientBufferBase,_In_ ULONG SubmitBufferLength,_Out_ PVOID *ProtocolReturnBuffer,_Out_ PULONG ReturnBufferLength,_Out_ PNTSTATUS ProtocolStatus)
RPC_STATUS RPC_ENTRY rpcrt4.RpcErrorLoadErrorInfo(_In_ PVOID ErrorBlob,_In_ size_t BlobSize,_Out_ RPC_ERROR_ENUM_HANDLE *EnumHandle)
uint32 None ramgmtpsprovider.Get([in] string ComputerName,[in] string Type,[out] string cmdletOutput[])
HRESULT APIENTRY None.MQCloseQueue(QUEUEHANDLE hQueue None)
HRESULT None shell32.SHGetKnownFolderIDList(_In_ REFKNOWNFOLDERID rfid,_In_ DWORD dwFlags,_In_ HANDLE hToken,_Out_ PIDLIST_ABSOLUTE *ppidl)
BOOL WINAPI advapi32.SaferCreateLevel(_In_ DWORD dwScopeId,_In_ DWORD dwLevelId,_In_ DWORD OpenFlags,_Out_ SAFER_LEVEL_HANDLE *pLevelHandle,_Reserved_ LPVOID lpReserved)
HRESULT None None.abort(void None None)
public void None.CopyTo(int sourceIndex None,char[] destination None,int destinationIndex None,int count None)
HRESULT None shlwapi.IUnknown_GetWindow(_In_ IUnknown *punk,_Out_ HWND *phwnd)
HRESULT WINAPI iscsidsc.RemoveRadiusServer(_In_ PTCHAR Address)
HRESULT WINAPI iscsidsc.RemoveRadiusServerW(_In_ PTCHAR Address)
HRESULT WINAPI iscsidsc.RemoveRadiusServerA(_In_ PTCHAR Address)
HRESULT None rtworkq.RtwqLockWorkQueue(_In_ DWORD workQueueId)
RPC_STATUS RPC_ENTRY rpcrt4.RpcAsyncCancelCall(PRPC_ASYNC_STATE pAsync None,BOOL fAbortCall None)
BOOL None shell32.SHChangeNotifyDeregister(ULONG ulID None)
uint32 None wvrcimprov.WvrRevokeUserAccess([in] string UserName,[in] boolean RemoveFromRemoteManagementUsersGroup)
int None None.strncmp(const char *string1,const char *string2,size_t count None)
uint32 None wvrcimprov.GrantSrAccess([in] string ComputerName,[in] string Cluster)
HRESULT None None.GetColorInterpolationMode([out None None,retval] XPS_COLOR_INTERPOLATION *colorInterpolationMode)
NTSTATUS None None.WdfIoTargetSendIoctlSynchronously(_In_ WDFIOTARGET IoTarget,_In_opt_ WDFREQUEST Request,_In_ ULONG IoctlCode,_In_opt_ PWDF_MEMORY_DESCRIPTOR InputBuffer,_In_opt_ PWDF_MEMORY_DESCRIPTOR OutputBuffer,_In_opt_ PWDF_REQUEST_SEND_OPTIONS RequestOptions,_Out_opt_ PULONG_PTR BytesReturned)
uint32 None cimwin32.ScheduleAutoChk([in] string LogicalDisk[])
uint32 None wvrcimprov.WvrCheckIfGroupsLogVolumeMatchVolume([in] string ReplicationGroupName,[in] string VolumeName)
uint32 None wvrcimprov.WvrModifyReplicationGroup([in] string ReplicationGroupName,[in] string Description,[in] uint32 ReplicationMode,[in] uint64 MaxLogSizeInByte,[in] boolean EnableWriteConsistency,[in] boolean IsSeeded,[in] boolean Encryption,[in] uint32 AsyncRPO,[in] string CertificateThumbprint)
HRESULT None shell32.SHOpenFolderAndSelectItems(_In_ PCIDLIST_ABSOLUTE pidlFolder,UINT cidl None,_In_opt_ PCUITEMID_CHILD_ARRAY apidl,DWORD dwFlags None)
HRESULT None windowscodecs.IWICImagingFactory_CreateStream_Proxy(_In_ IWICImagingFactory *pFactory,_Out_ IWICStream **ppIWICStream)
HRESULT None None.get_ExtendedProperties([out None None,retval] BSTR *retVal)
BOOL WINAPI authz.AuthzInitializeRemoteResourceManager(_In_ PAUTHZ_RPC_INIT_INFO_CLIENT pRpcInitInfo,_Out_ PAUTHZ_RESOURCE_MANAGER_HANDLE phAuthzResourceManager)
DWORD WINAPI None.GetCaptureCommentFromFilename(LPSTR lpFilename None,LPSTR lpComment None,DWORD BufferSize None)
public void None.RegisterName(String name None,Object scopedElement None)
BOOL WINAPI authz.AuthzOpenObjectAudit(_In_ DWORD Flags,_In_ AUTHZ_CLIENT_CONTEXT_HANDLE hAuthzClientContext,_In_ PAUTHZ_ACCESS_REQUEST pRequest,_In_ AUTHZ_AUDIT_EVENT_HANDLE hAuditEvent,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_ PSECURITY_DESCRIPTOR *SecurityDescriptorArray,_In_ DWORD SecurityDescriptorCount,_In_ PAUTHZ_ACCESS_REPLY pReply)
BOOL WINAPI None.WIMDeleteImageMounts(DWORD dwDeleteFlags None)
FLOAT WINAPI d2d1.D2D1Vec3Length(_In_ FLOAT x,_In_ FLOAT y,_In_ FLOAT z)
uint32 None netpeerdistcim.Set_BCCacheByCache([in] string Cache[],[in] string MoveTo,[in] uint32 Percentage,[in] uint64 SizeBytes,[in] boolean Defragment,[in] string PolicyStore,[in] boolean PassThru,[in] boolean Force,[out] MSFT_NetBranchCacheCache cmdletOutput[])
void None None.DeviceMemoryBarrier(void None None)
protected void None.LoadViewState(Object savedState None)
BOOL None None.WSPGetOverlappedResult(_In_ SOCKET s,_In_ LPWSAOVERLAPPED lpOverlapped,_Out_ LPDWORD lpcbTransfer,_In_ BOOL fWait,_Out_ LPDWORD lpdwFlags,_Out_ LPINT lpErrno)
HRESULT None d2d1.D2D1CreateFactory(__in D2D1_FACTORY_TYPE factoryType,__out Factory **factory)
HRESULT None ole32.ProgIDFromCLSID(_In_ REFCLSID clsid,_Out_ LPOLESTR *lplpszProgID)
ULONG WINAPI advapi32.PerfEnumerateCounterSet(_In_opt_ LPCWSTR szMachine,_Out_opt_ LPGUID pCounterSetIds,DWORD cCounterSetIds None,_Out_ LPDWORD pcCounterSetIdsActual)
HRESULT None d2d1.Map(D2D1_MAP_OPTIONS Options None,[out] D2D1_MAPPED_RECT *mappedRect)
public MethodBuilder None.DefineMethod(String name None,MethodAttributes attributes None,Type returnType None,Type[] parameterTypes None)
BOOL None None.ListView_InsertMarkHitTest(HWND hwnd None,LPPOINT point None,PLVINSERTMARK plvim None)
DWORD WINAPI powrprof.PowerImportPowerScheme(_In_ HKEY RootPowerKey,_In_ LPCWSTR ImportFileNamePath,_Inout_ GUID **DestinationSchemeGuid)
VOID WINAPI kernel32.FreeMemoryJobObject(_In_ VOID *Buffer)
HRESULT None None.QueryHardwareSupport([out] DWORD *pdwHardwareSupportMask)
HRESULT None None.RequestingResponse(LPCWSTR wszDestQueueFormatName None,LPCWSTR wszResponseQueueFormatName None)
protected void None.OnIsMouseCapturedChanged(DependencyPropertyChangedEventArgs e None)
HRESULT None ole32.CoInvalidateRemoteMachineBindings(_In_ LPOLESTR pszMachineName)
HRESULT None oleaut32.VarUI4FromDate(_In_ DATE dateIn,_Out_ ULONG *pulOut)
MSICONDITION None msi.MsiEvaluateCondition(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szCondition)
MSICONDITION None msi.MsiEvaluateConditionW(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szCondition)
MSICONDITION None msi.MsiEvaluateConditionA(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szCondition)
HRESULT None None.put_PerOutgoingDistributionConnectionBandwidth(long Val None)
public void None.OnUnload(EventArgs e None)
u_long WSAAPI ws2_32.htonl(_In_ u_long hostlong)
BOOL WINAPI user32.EndTask(_In_ HWND hWnd,_In_ BOOL fShutDown,_In_ BOOL fForce)
PCTSTR WINAPI dbghelp.SymSrvGetSupplement(_In_ HANDLE hProcess,_In_opt_ PCTSTR SymPath,_In_ PCTSTR Node,_In_ PCTSTR File)
PCTSTR WINAPI dbghelp.SymSrvGetSupplementW(_In_ HANDLE hProcess,_In_opt_ PCTSTR SymPath,_In_ PCTSTR Node,_In_ PCTSTR File)
PCTSTR WINAPI dbghelp.SymSrvGetSupplement(_In_ HANDLE hProcess,_In_opt_ PCTSTR SymPath,_In_ PCTSTR Node,_In_ PCTSTR File)
HRESULT None None.get_PlayerAllocatedBandwidth(long* pVal None)
uint32 None wvrcimprov.SetPartnershipAddVolumes([in] string SourceRGName,[in] string SourceComputerName,[in] string SourceAddVolumePartnership[],[in] string DestinationRGName,[in] string DestinationComputerName,[in] string DestinationAddVolumePartnership[],[in] boolean Seeded)
DWORD None mprapi.MprConfigGetGuidName(_In_ HANDLE hMprConfig,_In_ PWCHAR pszFriendlyName,_Out_ PWCHAR pszBuffer,_In_ DWORD dwBufferSize)
ULONG None None.RKeyPFXInstall(_In_ KEYSVCC_HANDLE hKeySvcCli,_In_ PKEYSVC_BLOB pPFX,_In_ PKEYSVC_UNICODE_STRING pPassword,_In_ ULONG ulFlags)
BOOL WINAPI user32.DestroyMenu(_In_ HMENU hMenu)
BOOL None None.WlxCreateUserDesktop(_In_ HANDLE hWlx,_In_ HANDLE hToken,_In_ DWORD Flags,_In_ PWSTR pszDesktopName,_Out_ PWLX_DESKTOP *ppDesktop)
HRESULT None None.get_PublishingPoints(IWMSPublishingPoints** pVal None)
HRESULT None None.GetRevision([out None None,retval] LPWSTR *revision)
HRESULT STDAPI cldapi.CfCreatePlaceholders(_In_ LPCWSTR BaseDirectoryPath,_Inout_ CF_PLACEHOLDER_CREATE_INFO *PlaceholderArray,_In_ DWORD PlaceholderCount,_In_ CF_CREATE_FLAGS CreateFlags,_Out_ PDWORD EntriesProcessed)
public ConsumerConnectionPointCollection None.GetConsumerConnectionPoints(WebPart webPart None)
LONG WINAPI tapi32.lineSendUserUserInfo(HCALL hCall None,LPCSTR lpsUserUserInfo None,DWORD dwSize None)
HRESULT WINAPI d3dcompiler_47.D3DGetOutputSignatureBlob(in LPCVOID pSrcData,in SIZE_T SrcDataSize,out ID3DBlob ppSignatureBlob)
HRESULT None dcomp.CreateGaussianBlurEffect([out] IDCompositionGaussianBlurEffect **gaussianBlurEffect)
typedef None None.VOID(__stdcall *WAITORTIMERCALLBACK None)
HRESULT None windowscodecs.IWICImagingFactory_CreateBitmapFromSource_Proxy(_In_ IWICImagingFactory *pFactory,_In_ IWICBitmapSource *pIBitmapSource,_In_ WICBitmapCreateCacheOption option,_Out_ IWICBitmap **ppIBitmap)
HRESULT None None.GetOrigin([out None None,retval] XPS_POINT *origin)
private void None.textBox1_TextChanged(Object sender None,EventArgs e None)
DWORD None None.SetPrinterDataEx(_In_ HANDLE hPrinter,_In_ LPCTSTR pKeyName,_In_ LPCTSTR pValueName,_In_ DWORD Type,_In_ LPBYTE pData,_In_ DWORD cbData)
DWORD None None.SetPrinterDataExW(_In_ HANDLE hPrinter,_In_ LPCTSTR pKeyName,_In_ LPCTSTR pValueName,_In_ DWORD Type,_In_ LPBYTE pData,_In_ DWORD cbData)
DWORD None None.SetPrinterDataExA(_In_ HANDLE hPrinter,_In_ LPCTSTR pKeyName,_In_ LPCTSTR pValueName,_In_ DWORD Type,_In_ LPBYTE pData,_In_ DWORD cbData)
BOOL WINAPI None.WIMGetAttributes(HANDLE hWim None,PWIM_INFO pWimInfo None,DWORD cbWimInfo None)
LPPROTOCOLTABLE WINAPI nmapi.GetEnabledProtocols(_In_ HCAPTURE hCapture)
DWORD None npptools.SetNPPEtypeSapFilter(_In_ HBLOB hBlob,_In_ WORD nSaps,_In_ WORD nEtypes,_In_ LPBYTE lpSapTable,_In_ LPWORD lpEtypeTable,_In_ DWORD FilterFlags,_Out_ HBLOB hErrorBlob)
HRESULT None msdrm.DRMIsActivated(_In_ DRMHSESSION hClient,_In_ UINT uFlags,_In_ DRM_ACTSERV_INFO *pActServInfo)
BOOL WINAPI user32.GetLastInputInfo(_Out_ PLASTINPUTINFO plii)
HRESULT None rtworkq.RtwqGetWorkQueueMMCSSPriority(_In_ DWORD workQueueId,_Out_ LONG *priority)
LONG TSPIAPI None.TSPI_lineGetNumAddressIDs(HDRVLINE hdLine None,LPDWORD lpdwNumAddressIDs None)
LONG TSPIAPI None.TSPI_phoneGetData(HDRVPHONE hdPhone None,DWORD dwDataID None,LPVOID lpData None,DWORD dwSize None)
DWORD WINAPI powrprof.PowerReportThermalEvent(_In_ PTHERMAL_EVENT Event)
HRESULT None None.GetSizeMax([out] ULARGE_INTEGER *pCbSize)
DWORD WINAPI clusapi.ClusterResourceGetEnumCountEx(_In_ HRESENUMEX hResourceEnumEx)
WORD None None.PRIMARYLANGID(WORD lgid None)
void None None.LoadViewState(Object state None)
UINT None msi.MsiSourceListForceResolution(_In_ LPCTSTR szProduct,_In_ LPCTSTR szUserName,_In_ DWORD dwReserved)
UINT None msi.MsiSourceListForceResolutionW(_In_ LPCTSTR szProduct,_In_ LPCTSTR szUserName,_In_ DWORD dwReserved)
UINT None msi.MsiSourceListForceResolutionA(_In_ LPCTSTR szProduct,_In_ LPCTSTR szUserName,_In_ DWORD dwReserved)
UInt32 None None.SetFriendlyName([in] String FriendlyName,[out] String ExtendedStatus)
UINT None msi.MsiViewFetch(_In_ MSIHANDLE hView,_Out_ MSIHANDLE *phRecord)
DWORD WINAPI wlanapi.WlanHostedNetworkQuerySecondaryKey(_In_ HANDLE hClientHandle,_Out_ DWORD pdwKeyLength,_Out_ PUCHAR *ppucKeyData,_Out_ PBOOL pbIsPassPhrase,_Out_ PBOOL pbPersistent,_Out_opt_ PWLAN_HOSTED_NETWORK_REASON pFailReason,_Reserved_ PVOID pvReserved)
UINT None msi.MsiPreviewDialog(_In_ MSIHANDLE hPreview,_In_ LPCTSTR szDialogName)
UINT None msi.MsiPreviewDialogW(_In_ MSIHANDLE hPreview,_In_ LPCTSTR szDialogName)
UINT None msi.MsiPreviewDialogA(_In_ MSIHANDLE hPreview,_In_ LPCTSTR szDialogName)
UINT None None.ListView_GetCallbackMask(HWND hwnd None)
DWORD WINAPI iphlpapi.NotifySecurityHealthChange(PHANDLE pHandle None,LPOVERLAPPED pOverLapped None,PULONG SecurityHealthFlags None)
VOID None None.SetThreadpoolCallbackLibrary(_Inout_ PTP_CALLBACK_ENVIRON pcbe,_In_ PVOID mod)
HRESULT None None.get_srcText(BSTR *sourceString None)
ULONG None wldap32.ber_first_element(_In_ BerElement *pBerElement,_Out_ ULONG *pLen,_Out_ CHAR **ppOpaque)
BOOL WINAPI winhttp.WinHttpQueryOption(_In_ HINTERNET hInternet,_In_ DWORD dwOption,_Out_ LPVOID lpBuffer,_Inout_ LPDWORD lpdwBufferLength)
HRESULT None None.get_NetworkAdapters([out] IVMNetworkAdapterCollection **networkInterfaceCollection)
HRESULT None ole32.CoGetContextToken(_Out_ ULONG_PTR *pToken)
NETIOAPI_API None iphlpapi.GetUnicastIpAddressEntry(_Inout_ PMIB_UNICASTIPADDRESS_ROW Row)
protected Exception None.GetConvertToException(Object value None,Type destinationType None)
LSTATUS None shlwapi.SHRegQueryUSValue(_In_ HUSKEY hUSKey,_In_opt_ LPCTSTR pszValue,_Inout_opt_ LPDWORD *pdwType,_Out_opt_ LPVOID *pvData,_Inout_ LPDWORD *pcbData,_In_ BOOL fIgnoreHKCU,_In_opt_ LPVOID *pvDefaultData,_In_opt_ DWORD dwDefaultDataSize)
LSTATUS None shlwapi.SHRegQueryUSValueW(_In_ HUSKEY hUSKey,_In_opt_ LPCTSTR pszValue,_Inout_opt_ LPDWORD *pdwType,_Out_opt_ LPVOID *pvData,_Inout_ LPDWORD *pcbData,_In_ BOOL fIgnoreHKCU,_In_opt_ LPVOID *pvDefaultData,_In_opt_ DWORD dwDefaultDataSize)
LSTATUS None shlwapi.SHRegQueryUSValueA(_In_ HUSKEY hUSKey,_In_opt_ LPCTSTR pszValue,_Inout_opt_ LPDWORD *pdwType,_Out_opt_ LPVOID *pvData,_Inout_ LPDWORD *pcbData,_In_ BOOL fIgnoreHKCU,_In_opt_ LPVOID *pvDefaultData,_In_opt_ DWORD dwDefaultDataSize)
HRESULT None None.get_SavedStateFilePath([out] BSTR *savedStateFilePath)
DWORD None None.NPGetUser(_In_ LPTSTR lpName,_Out_ LPTSTR lpUserName,_Inout_ LPDWORD lpBufferSize)
public boolean None.Equals(Object o None)
size_t None None.wcstombs(char *mbstr None,const wchar_t *wcstr,size_t count None)
HRESULT None None.SendInternalTransMsg(LPCWSTR wszDestFormatName None)
BOOL WINAPI dbghelp.SymGetModuleInfo64(_In_ HANDLE hProcess,_In_ DWORD64 dwAddr,_Out_ PIMAGEHLP_MODULE64 ModuleInfo)
BOOL WINAPI dbghelp.SymGetModuleInfoW64(_In_ HANDLE hProcess,_In_ DWORD64 dwAddr,_Out_ PIMAGEHLP_MODULE64 ModuleInfo)
BOOL WINAPI dbghelp.SymGetModuleInfo64(_In_ HANDLE hProcess,_In_ DWORD64 dwAddr,_Out_ PIMAGEHLP_MODULE64 ModuleInfo)
HTREEITEM None None.TreeView_GetNextSibling(HWND hwndTV None,HTREEITEM hitem None)
BOOL CALLBACK None.SymRegisterCallbackProc64(_In_ HANDLE hProcess,_In_ ULONG ActionCode,_In_opt_ ULONG64 CallbackData,_In_opt_ ULONG64 UserContext)
HRESULT None None.GetFontRenderingEmSize([out None None,retval] FLOAT *fontRenderingEmSize)
MI_INLINE MI_Result None.MI_PropertySet_Delete(_Inout_ MI_PropertySet *self)
HRESULT None None.Parent(REFIID riid None,void **ppv None)
HRESULT WINAPI mssign32.SignerTimeStampEx3(_In_ DWORD dwFlags,_In_ DWORD dwIndex,_In_ SIGNER_SUBJECT_INFO *pSubjectInfo,_In_ PCWSTR pwszHttpTimeStamp,_In_ PCWSTR pszAlgorithmOid,_In_opt_ PCRYPT_ATTRIBUTES psRequest,_In_opt_ PVOID pSipData,_Out_ SIGNER_CONTEXT **ppSignerContext,_In_opt_ PCERT_STRONG_SIGN_PARA pCryptoPolicy,_Reserved_ PVOID pReserved)
HRESULT None None.Clone([out None None,retval] IXpsOMMatrixTransform **matrixTransform)
protected void None.CopyPersonalizationState(WebPart webPartA None,WebPart webPartB None)
uint32 None netpeerdistcim.Set_BCCacheByPath([in] string Path,[in] string MoveTo,[in] uint32 Percentage,[in] uint64 SizeBytes,[in] boolean Defragment,[in] string PolicyStore,[in] boolean PassThru,[in] boolean Force,[out] MSFT_NetBranchCacheCache cmdletOutput)
HRESULT None None.GetIsolationLevel([out None None,retval] ISOLATIONLEVEL *pIsolationLevel)
LONG TSPIAPI None.TSPI_lineDial(DRV_REQUESTID dwRequestID None,HDRVCALL hdCall None,LPCWSTR lpszDestAddress None,DWORD dwCountryCode None)
WSAEVENT None None.WPUCompleteOverlappedRequest(_In_ SOCKET s,_In_ LPWSAOVERLAPPED lpOverlapped,_In_ DWORD dwError,_In_ DWORD cbTransferred,_Out_ LPINT lpErrno)
HRESULT None oleaut32.VarI4FromR4(_In_ FLOAT fltIn,_Out_ LONG *plOut)
BOOL WINAPI advapi32.EqualPrefixSid(_In_ PSID pSid1,_In_ PSID pSid2)
BOOL None None.PropSheet_RecalcPageSizes(HWND hPropSheetDlg None)
private void None.listDragTarget_DragOver(Object sender None,System.Windows.Forms.DragEventArgs e None)
BOOL CALLBACK None.EnumerateLoadedModulesProc64(_In_ PCTSTR ModuleName,_In_ DWORD64 ModuleBase,_In_ ULONG ModuleSize,_In_opt_ PVOID UserContext)
HRESULT None oleaut32.VarR4FromStr(_In_ LPCOLESTR strIn,_In_ LCID lcid,_In_ ULONG dwFlags,_Out_ FLOAT *pfltOut)
BOOL None kernel32.SetCalendarInfo(_In_ LCID Locale,_In_ CALID Calendar,_In_ CALTYPE CalType,_In_ LPCTSTR lpCalData)
BOOL None kernel32.SetCalendarInfoW(_In_ LCID Locale,_In_ CALID Calendar,_In_ CALTYPE CalType,_In_ LPCTSTR lpCalData)
BOOL None kernel32.SetCalendarInfoA(_In_ LCID Locale,_In_ CALID Calendar,_In_ CALTYPE CalType,_In_ LPCTSTR lpCalData)
DWORD CALLBACK None.SetInternalState(_In_ RESOURCE_HANDLE None,_In_ CLUSTER_RESOURCE_APPLICATION_STATE stateType,_In_ BOOL active)
BOOL WINAPI advapi32.DeleteAce(_Inout_ PACL pAcl,_In_ DWORD dwAceIndex)
DWORD WINAPI iphlpapi.GetTcpTable(_Out_ PMIB_TCPTABLE pTcpTable,_Inout_ PDWORD pdwSize,_In_ BOOL bOrder)
DWORD None iphlpapi.GetOwnerModuleFromTcp6Entry(_In_ PMIB_TCP6ROW_OWNER_MODULE pTcpEntry,_In_ TCPIP_OWNER_MODULE_INFO_CLASS Class,_Out_ PVOID Buffer,_Inout_ PDWORD pdwSize)
HRESULT None shlwapi.DllInstall(BOOL bInstall None,_In_opt_ PCWSTR pszCmdLine)
uint32 None cimwin32.SetShareInfo([in None None,optional] uint32 MaximumAllowed,[in None None,optional] string Description,[in None None,optional] Win32_SecurityDescriptor Access)
BOOL WINAPI dbghelp.SymSrvGetFileIndexes(_In_ PCTSTR File,_Out_ GUID *Id,_Out_ DWORD *Val1,_Out_opt_ DWORD *Val2,_In_ DWORD Flags)
BOOL WINAPI dbghelp.SymSrvGetFileIndexesW(_In_ PCTSTR File,_Out_ GUID *Id,_Out_ DWORD *Val1,_Out_opt_ DWORD *Val2,_In_ DWORD Flags)
BOOL WINAPI dbghelp.SymSrvGetFileIndexes(_In_ PCTSTR File,_Out_ GUID *Id,_Out_ DWORD *Val1,_Out_opt_ DWORD *Val2,_In_ DWORD Flags)
BOOL WINAPI user32.UpdateLayeredWindow(_In_ HWND hwnd,_In_opt_ HDC hdcDst,_In_opt_ POINT *pptDst,_In_opt_ SIZE *psize,_In_opt_ HDC hdcSrc,_In_opt_ POINT *pptSrc,_In_ COLORREF crKey,_In_opt_ BLENDFUNCTION *pblend,_In_ DWORD dwFlags)
HRESULT None fxscomex.put_SizeQuotaWarning([in] VARIANT_BOOL bSizeQuotaWarning)
HRESULT None oleaut32.SafeArrayLock(_In_ SAFEARRAY *psa)
BOOL None kernel32.SetLocaleInfo(_In_ LCID Locale,_In_ LCTYPE LCType,_In_ LPCTSTR lpLCData)
BOOL None kernel32.SetLocaleInfoW(_In_ LCID Locale,_In_ LCTYPE LCType,_In_ LPCTSTR lpLCData)
BOOL None kernel32.SetLocaleInfoA(_In_ LCID Locale,_In_ LCTYPE LCType,_In_ LPCTSTR lpLCData)
HRESULT None None.get_DefaultPacketSize(VARIANT_BOOL* pfDefault None)
HRESULT None None.IntPtrAdd(_In_ INT_PTR iAugend,_In_ INT_PTR iAddend,_Out_ INT_PTR *piResult)
HRESULT None None.get_MonikerName(BSTR* pbstrVal None)
HRESULT None msdrm.DRMGetUsers(_In_ DRMPUBHANDLE hIssuanceLicense,_In_ UINT uIndex,_Out_ DRMPUBHANDLE *phUser)
HRESULT None direct2d.Clone([out] ID2D1SvgAttribute **attribute)
protected void None.OnToolTipClosing(ToolTipEventArgs e None)
protected void None.OnMouseRightButtonDown(MouseButtonEventArgs e None)
public None None.GridLength(double pixels None)
PDH_STATUS None pdh.PdhLookupPerfIndexByName(_In_ LPCTSTR szMachineName,_In_ LPCTSTR szNameBuffer,_Out_ LPDWORD pdwIndex)
PDH_STATUS None pdh.PdhLookupPerfIndexByNameW(_In_ LPCTSTR szMachineName,_In_ LPCTSTR szNameBuffer,_Out_ LPDWORD pdwIndex)
PDH_STATUS None pdh.PdhLookupPerfIndexByNameA(_In_ LPCTSTR szMachineName,_In_ LPCTSTR szNameBuffer,_Out_ LPDWORD pdwIndex)
HRESULT None None.GetUnicodeString([out None None,retval] LPWSTR *unicodeString)
LONG WINAPI tapi32.lineGetAddressCaps(HLINEAPP hLineApp None,DWORD dwDeviceID None,DWORD dwAddressID None,DWORD dwAPIVersion None,DWORD dwExtVersion None,LPLINEADDRESSCAPS lpAddressCaps None)
LONG WINAPI tapi32.lineGetAddressCapsW(HLINEAPP hLineApp None,DWORD dwDeviceID None,DWORD dwAddressID None,DWORD dwAPIVersion None,DWORD dwExtVersion None,LPLINEADDRESSCAPS lpAddressCaps None)
LONG WINAPI tapi32.lineGetAddressCapsA(HLINEAPP hLineApp None,DWORD dwDeviceID None,DWORD dwAddressID None,DWORD dwAPIVersion None,DWORD dwExtVersion None,LPLINEADDRESSCAPS lpAddressCaps None)
HRESULT None None.GetLastPrinted([out None None,retval] SYSTEMTIME *lastPrinted)
BOOL None wtsapi32.WTSUnRegisterSessionNotification(_In_ HWND hWnd)
HRESULT None mfplat.MFBeginCreateFile(_In_ MF_FILE_ACCESSMODE AccessMode,_In_ MF_FILE_OPENMODE OpenMode,_In_ MF_FILE_FLAGS fFlags,_In_ LPCWSTR pwszFilePath,_In_ IMFAsyncCallback *pCallback,_In_ IUnknown *pState,_Out_ IUnknown **ppCancelCookie)
void None None.DeviceMemoryBarrierWithGroupSync(void None None)
BOOL WINAPI advapi32.ObjectPrivilegeAuditAlarm(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ HANDLE ClientToken,_In_ DWORD DesiredAccess,_In_ PPRIVILEGE_SET Privileges,_In_ BOOL AccessGranted)
BOOL WINAPI advapi32.ObjectPrivilegeAuditAlarmW(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ HANDLE ClientToken,_In_ DWORD DesiredAccess,_In_ PPRIVILEGE_SET Privileges,_In_ BOOL AccessGranted)
BOOL WINAPI advapi32.ObjectPrivilegeAuditAlarmA(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ HANDLE ClientToken,_In_ DWORD DesiredAccess,_In_ PPRIVILEGE_SET Privileges,_In_ BOOL AccessGranted)
HRESULT None oleaut32.VarI8FromCy(_In_ CY cyIn,_Out_ LONG64 *pi64Out)
VOID FORCEINLINE None.TpSetCallbackCleanupGroup(_Inout_ PTP_CALLBACK_ENVIRON CallbackEnviron,_In_ PTP_CLEANUP_GROUP CleanupGroup,_In_opt_ PTP_CLEANUP_GROUP_CANCEL_CALLBACK CleanupGroupCancelCallback)
uint32 None dnsserverpsprovider.AddByDhcId([in] boolean DhcId,[in] string ZoneName,[in] datetime TimeToLive,[in] boolean AllowUpdateAny,[in] string Name,[in] string ComputerName,[in] boolean AgeRecord,[in] boolean PassThru,[in] string ZoneScope,[in] string DhcpIdentifier,[out] DnsServerResourceRecord cmdletOutput)
HRESULT None oleaut32.VarDateFromI8(_In_ LONG64 i64In,_Out_ DATE *pdateOut)
HNETWORK WINAPI clusapi.OpenClusterNetworkEx(_In_ HCLUSTER hCluster,_In_opt_ LPCWSTR lpszNetworkName,_In_ DWORD dwDesiredAccess,_Out_opt_ DWORD *lpdwGrantedAccess)
HRESULT None None.GetName([out] BSTR *pbstrName)
WDFDEVICE None None.WdfPdoGetParent(_In_ WDFDEVICE Device)
HRESULT APIENTRY None.MQGetSecurityContext(LPVOID lpCertBuffer None,DWORD dwCertBufferLength None,HANDLE * phSecurityContext)
BOOL None advapi32.CredRename(_In_ LPCTSTR OldTargetName,_In_ LPCTSTR NewTargetName,_In_ DWORD Type,_In_ DWORD Flags)
BOOL None advapi32.CredRenameW(_In_ LPCTSTR OldTargetName,_In_ LPCTSTR NewTargetName,_In_ DWORD Type,_In_ DWORD Flags)
BOOL None advapi32.CredRenameA(_In_ LPCTSTR OldTargetName,_In_ LPCTSTR NewTargetName,_In_ DWORD Type,_In_ DWORD Flags)
BOOL None None.Edit_HideBalloonTip(HWND hwnd None)
protected void None.OnLostStylusCapture(StylusEventArgs e None)
UINT_PTR None shell32.SHAppBarMessage(_In_ DWORD dwMessage,_Inout_ PAPPBARDATA pData)
HRESULT None None.getOption(SERVERXMLHTTP_OPTION option None,VARIANT * value)
HRESULT None None.get_DiskBytesRead([out] VARIANT *bytesRead)
LRESULT None None.TreeView_SetHot(HWND hwndTV None,HTREEITEM hitem None)
HRESULT None None.GetTransformLocal([out None None,retval] IXpsOMMatrixTransform **matrixTransform)
HRESULT None None.GetClipStatus([out] D3DCLIPSTATUS9 *pClipStatus)
HRESULT None rtworkq.RtwqEndRegisterWorkQueueWithMMCSS(_In_ IRtwqAsyncResult *result,_Out_ DWORD *taskId)
public IAsyncResult None.BeginInvoke(Delegate method None)
SECURITY_STATUS None credui.SspiGetCredUIContext(_In_ HANDLE ContextHandle,_In_ GUID *CredType,_In_ LUID *LogonId,_Out_ PSEC_WINNT_CREDUI_CONTEXT_VECTOR *CredUIContexts,_Out_ HANDLE *TokenHandle)
uint32 None dhcpserverpsprovider.SetByOptionId([in] boolean PassThru,[in] boolean Force,[in] string Value[],[in] uint32 OptionId,[in] string Prefix,[in] string UserClass,[in] string VendorClass,[in] string ComputerName,[in] string ReservedIP,[out] DhcpServerv6OptionValue cmdletOutput)
uint32 None wvrcimprov.SmapiRemoveMember([in] string ReplicationGroupName,[in] string PartitionObjectIds[])
HRESULT None windowscodecs.WICSetEncoderFormat_Proxy(_In_ IWICBitmapSource *pSourceIn,_In_ IWICPalette *pIPalette,_In_ IWICBitmapFrameEncode *pIFrameEncode,_Out_ IWICBitmapSource **ppSourceOut)
DWORD WINAPI advapi32.BuildSecurityDescriptor(_In_opt_ PTRUSTEE pOwner,_In_opt_ PTRUSTEE pGroup,_In_ ULONG cCountOfAccessEntries,_In_opt_ PEXPLICIT_ACCESS pListOfAccessEntries,_In_ ULONG cCountOfAuditEntries,_In_opt_ PEXPLICIT_ACCESS pListOfAuditEntries,_In_opt_ PSECURITY_DESCRIPTOR pOldSD,_Out_ PULONG pSizeNewSD,_Out_ PSECURITY_DESCRIPTOR *pNewSD)
DWORD WINAPI advapi32.BuildSecurityDescriptorW(_In_opt_ PTRUSTEE pOwner,_In_opt_ PTRUSTEE pGroup,_In_ ULONG cCountOfAccessEntries,_In_opt_ PEXPLICIT_ACCESS pListOfAccessEntries,_In_ ULONG cCountOfAuditEntries,_In_opt_ PEXPLICIT_ACCESS pListOfAuditEntries,_In_opt_ PSECURITY_DESCRIPTOR pOldSD,_Out_ PULONG pSizeNewSD,_Out_ PSECURITY_DESCRIPTOR *pNewSD)
DWORD WINAPI advapi32.BuildSecurityDescriptorA(_In_opt_ PTRUSTEE pOwner,_In_opt_ PTRUSTEE pGroup,_In_ ULONG cCountOfAccessEntries,_In_opt_ PEXPLICIT_ACCESS pListOfAccessEntries,_In_ ULONG cCountOfAuditEntries,_In_opt_ PEXPLICIT_ACCESS pListOfAuditEntries,_In_opt_ PSECURITY_DESCRIPTOR pOldSD,_Out_ PULONG pSizeNewSD,_Out_ PSECURITY_DESCRIPTOR *pNewSD)
HRESULT None msdrm.DRMSetIntervalTime(_In_ DRMPUBHANDLE hIssuanceLicense,_In_ UINT cDays)
HRESULT None None.GetDC(BOOL Discard None,[out] HDC *phdc)
HRESULT __stdcall None.DRMCallback(DRM_STATUS_MSG msg None,HRESULT hr None,VOID *pvParam None,VOID *pvContext None)
BOOL WINAPI advapi32.CryptDecrypt(_In_ HCRYPTKEY hKey,_In_ HCRYPTHASH hHash,_In_ BOOL Final,_In_ DWORD dwFlags,_Inout_ BYTE *pbData,_Inout_ DWORD *pdwDataLen)
HRESULT None None.GetMatrix([out None None,retval] XPS_MATRIX *matrix)
HANDLE None None.MmSecureVirtualMemory(_In_ PVOID Address,_In_ SIZE_T Size,_In_ ULONG ProbeMode)
HRESULT None mfplat.MFCreateMFVideoFormatFromMFMediaType(_In_ IMFMediaType *pMFType,_Out_ MFVIDEOFORMAT **ppMFVF,_Out_ UINT32 *pcbSize)
uint32 None mgmtprovider.GetServerEventDetailEx([in] string FilterXml,[in] uint64 Skip,[in] uint64 Top,[in] boolean ReverseDirection,[in] uint32 BatchSize,[out] MSFT_ServerEventDetail cmdletOutput[])
HRESULT None None.Clone([out] IMDSPEnumDevice **ppEnumDevice)
DWORD None loadperf.UnloadPerfCounterTextStrings(_In_ LPCTSTR commandLine,_In_ BOOL bQuietModeArg)
DWORD None loadperf.UnloadPerfCounterTextStringsW(_In_ LPCTSTR commandLine,_In_ BOOL bQuietModeArg)
DWORD None loadperf.UnloadPerfCounterTextStringsA(_In_ LPCTSTR commandLine,_In_ BOOL bQuietModeArg)
HRESULT None None.GetFrameCount([out] UINT16 *frameCount)
static void None.WriteObjectInfo(Object testObject None)
NTSTATUS WINAPI netapi32.NetAddServiceAccount(_In_opt_ LPWSTR ServerName,_In_ LPWSTR AccountName,_In_ LPWSTR Reserved,_In_ DWORD Flags)
BOOL WINAPI kernel32.GlobalUnlock(_In_ HGLOBAL hMem)
NET_API_STATUS None netapi32.NetGroupAddUser(_In_ LPCWSTR servername,_In_ LPCWSTR GroupName,_In_ LPCWSTR username)
HRESULT None ole32.OleQueryLinkFromData(_In_ LPDATAOBJECT pSrcDataObject)
BOOL None None.MonthCal_GetSelRange(HWND hwndMC None,LPSYSTEMTIME lprgSysTimeArray None)
BOOL None kernel32.PowerClearRequest(_In_ HANDLE PowerRequest,_In_ POWER_REQUEST_TYPE RequestType)
DWORD None iphlpapi.GetAdaptersInfo(_Out_ PIP_ADAPTER_INFO pAdapterInfo,_Inout_ PULONG pOutBufLen)
NTSTATUS None None.WdfDmaTransactionInitialize(_In_ WDFDMATRANSACTION DmaTransaction,_In_ PFN_WDF_PROGRAM_DMA EvtProgramDmaFunction,_In_ WDF_DMA_DIRECTION DmaDirection,_In_ PMDL Mdl,_In_ PVOID VirtualAddress,_In_ size_t Length)
void None None.Method2([in] sint32 InParam)
DWORD WINAPI clusapi.ClusterGetEnumCount(_In_ HCLUSENUM hEnum)
BOOL WINAPI user32.RemoveMenu(_In_ HMENU hMenu,_In_ UINT uPosition,_In_ UINT uFlags)
ULONG STDMETHODCALLTYPE ole32.CStdStubBuffer2_CountRefs(_In_ IRpcStubBuffer *pthis)
uint32 None wfascim.Rename([in] string NewName)
protected void None.UpdateBounds(int x None,int y None,int width None,int height None)
private void None.myButtonPrint_OnClick(Object sender None,System.EventArgs e None)
protected void None.GetCurrentValueAsFrozenCore(Freezable sourceFreezable None)
DWORD None mprapi.MprAdminInterfaceTransportAdd(_In_ MPR_SERVER_HANDLE hMprServer,_In_ HANDLE hInterface,_In_ DWORD dwTransportId,_In_ LPBYTE pInterfaceInfo,_In_ DWORD dwInterfaceInfoSize)
DWORD WINAPI winhttp.WinHttpGetProxyResult(_In_ HINTERNET hResolver,_Out_ WINHTTP_PROXY_RESULT *pProxyResult)
public void None.ProcessEvents(HttpRequest Request None)
public None None.ExternalException(String message None)
HRESULT None windowscodecs.IWICImagingFactory_CreateBitmapFromMemory_Proxy(_In_ IWICImagingFactory *pFactory,_In_ UINT uiWidth,_In_ UINT uiHeight,_In_ REFWICPixelFormatGUID pixelFormat,_In_ UINT cbStride,_In_ UINT cbBufferSize,_In_ BYTE *pbBuffer,_Out_ IWICBitmap **ppIBitmap)
HRESULT None None.get_DefaultPluginLoadType(WMS_PLUGIN_LOAD_TYPE* pVal None)
HIMAGELIST None comctl32.ImageList_GetDragImage(POINT *ppt None,POINT *pptHotspot None)
LONG WINAPI tapi32.tapiRequestMakeCall(LPCSTR lpszDestAddress None,LPCSTR lpszAppName None,LPCSTR lpszCalledParty None,LPCSTR lpszComment None)
LONG WINAPI tapi32.tapiRequestMakeCallW(LPCSTR lpszDestAddress None,LPCSTR lpszAppName None,LPCSTR lpszCalledParty None,LPCSTR lpszComment None)
LONG WINAPI tapi32.tapiRequestMakeCallA(LPCSTR lpszDestAddress None,LPCSTR lpszAppName None,LPCSTR lpszCalledParty None,LPCSTR lpszComment None)
BOOL PASCAL None.TransmitPackets(SOCKET hSocket None,LPTRANSMIT_PACKETS_ELEMENT lpPacketArray None,DWORD nElementCount None,DWORD nSendSize None,LPOVERLAPPED lpOverlapped None,DWORD dwFlags None)
int None None.main(void None None)
DWORD None None.NPGetDirectoryType(_In_ LPTSTR lpName,_In_ LPINT lpType,_In_ BOOL bFlushCache)
HRESULT None msdrm.DRMDecrypt(_In_ DRMHANDLE hCryptoProvider,_In_ UINT iPosition,_In_ UINT cNumInBytes,_In_ BYTE *pbInData,_Inout_ UINT *pcNumOutBytes,_Out_ BYTE *pbOutData)
HRESULT None msi.MsiGetFileSignatureInformation(_In_ LPCTSTR szSignedObjectPath,_In_ DWORD dwFlags,_Out_ PCCERT_CONTEXT *ppcCertContext,_Out_ BYTE *pbHashData,_Inout_ DWORD *pcbHashData)
HRESULT None msi.MsiGetFileSignatureInformationW(_In_ LPCTSTR szSignedObjectPath,_In_ DWORD dwFlags,_Out_ PCCERT_CONTEXT *ppcCertContext,_Out_ BYTE *pbHashData,_Inout_ DWORD *pcbHashData)
HRESULT None msi.MsiGetFileSignatureInformationA(_In_ LPCTSTR szSignedObjectPath,_In_ DWORD dwFlags,_Out_ PCCERT_CONTEXT *ppcCertContext,_Out_ BYTE *pbHashData,_Inout_ DWORD *pcbHashData)
DWORD WINAPI clusapi.RemoveClusterResourceNode(_In_ HRESOURCE hResource,_In_ HNODE hNode)
HRESULT None mfplat.MFPutWorkItemEx2(_In_ DWORD dwQueue,_In_ LONG Priority,_In_ IMFAsyncResult *pResult)
uint32 None cimwin32.UserControlService([in] uint8 ControlCode)
HRESULT None oleaut32.VarCyFromDate(_In_ DATE dateIn,_Out_ CY *pcyOut)
BOOL WINAPI advapi32.CryptImportKey(_In_ HCRYPTPROV hProv,_In_ BYTE *pbData,_In_ DWORD dwDataLen,_In_ HCRYPTKEY hPubKey,_In_ DWORD dwFlags,_Out_ HCRYPTKEY *phKey)
protected void None.OnPreviewStylusSystemGesture(StylusSystemGestureEventArgs e None)
UINT None msi.MsiGetShortcutTarget(_In_ LPCTSTR szShortcutTarget,_Out_ LPTSTR szProductCode,_Out_ LPTSTR szFeatureId,_Out_ LPTSTR szComponentCode)
UINT None msi.MsiGetShortcutTargetW(_In_ LPCTSTR szShortcutTarget,_Out_ LPTSTR szProductCode,_Out_ LPTSTR szFeatureId,_Out_ LPTSTR szComponentCode)
UINT None msi.MsiGetShortcutTargetA(_In_ LPCTSTR szShortcutTarget,_Out_ LPTSTR szProductCode,_Out_ LPTSTR szFeatureId,_Out_ LPTSTR szComponentCode)
HRESULT None None.CreateSegmentationFilter(IWiaItem2 *pWiaItem2 None,IWiaSegmentationFilter **ppSegmentationFilter None)
BOOL WINAPI advapi32.AddAuditAccessAce(_Inout_ PACL pAcl,_In_ DWORD dwAceRevision,_In_ DWORD dwAccessMask,_In_ PSID pSid,_In_ BOOL bAuditSuccess,_In_ BOOL bAuditFailure)
HRESULT None azroles.GetBusinessRuleString([out] BSTR *pbstrBusinessRuleString)
DWORD WINAPI wlanapi.WlanHostedNetworkQueryProperty(_In_ HANDLE hClientHandle,_In_ WLAN_HOSTED_NETWORK_OPCODE OpCode,_Out_ PDWORD pdwDataSize,_Out_ PVOID *ppvData,_Out_ PWLAN_OPCODE_VALUE_TYPE *pWlanOpcodeValueType,_Reserved_ PVOID pvReserved)
BOOL WINAPI winhttp.WinHttpDetectAutoProxyConfigUrl(_In_ DWORD dwAutoDetectFlags,_Out_ LPWSTR *ppwszAutoConfigUrl)
uint32 None wvrcimprov.WvrInitializeReplicationGroup([in] string ReplicationGroupName,[in] string ReplicaSetIds[],[in] uint32 ReplicationRole,[in] string PartnerReplicationGroupName,[in] string PartnerReplicationGroupEndpoint,[in] string partnerReplicationGroupId)
BOOL None None.ListView_SetTextColor(HWND hwnd None,COLORREF clrText None)
BOOL CALLBACK None.SymEnumSymbolsProc(_In_ PSYMBOL_INFO pSymInfo,_In_ ULONG SymbolSize,_In_opt_ PVOID UserContext)
BOOL CALLBACK None.PSYM_ENUMERATESYMBOLS_CALLBACKW(_In_ PSYMBOL_INFO pSymInfo,_In_ ULONG SymbolSize,_In_opt_ PVOID UserContext)
BOOL CALLBACK None.PSYM_ENUMERATESYMBOLS_CALLBACK(_In_ PSYMBOL_INFO pSymInfo,_In_ ULONG SymbolSize,_In_opt_ PVOID UserContext)
BOOL None None.Edit_GetCueBannerText(HWND hwnd None,LPCWSTR lpcwText None,LONG cchText None)
protected void None.OnPreviewMouseRightButtonUp(MouseButtonEventArgs e None)
uint32 None wvrcimprov.WvrQueryClusterId([out] string ClusterId)
BOOL WINAPI dbghelp.SymUnDName64(_In_ PIMAGEHLP_SYMBOL64 sym,_Out_ PSTR UnDecName,_In_ DWORD UnDecNameLength)
uint32 None wvrcimprov.ActivateReplicaSet([in] string ReplicationGroupName,[in] string ReplicaSetId[])
HRESULT None oleaut32.SafeArrayUnlock(_In_ SAFEARRAY *psa)
BOOL None shell32.Shell_GetImageLists(_In_ HIMAGELIST *phiml,_In_ HIMAGELIST *phimlSmall)
BOOL WINAPI kernel32.GetDevicePowerState(_In_ HANDLE hDevice,_Out_ BOOL *pfOn)
HRESULT None None.ULongSub(_In_ ULONG ulMinuend,_In_ ULONG ulSubtrahend,_Out_ ULONG *pulResult)
protected void None.OnDeleting(EventArgs e None)
DWORD None iphlpapi.GetIpStatisticsEx(_Out_ PMIB_IPSTATS pStats,_In_ DWORD dwFamily)
HRESULT None None.CreateClassLinkage([out] ID3D11ClassLinkage **ppLinkage)
LONG WINAPI tapi32.lineSetStatusMessages(HLINE hLine None,DWORD dwLineStates None,DWORD dwAddressStates None)
public None None.EventDeliveryFailedException(String message None)
HRESULT None propsys.VariantToStringAlloc(_In_ REFVARIANT varIn,_Out_ PWSTR ppszBuf)
HRESULT None certadm.get_Identifier([out] BSTR *pVal)
HRESULT None windowscodecs.IWICPixelFormatInfo_GetChannelCount_Proxy(_In_ IWICPixelFormatInfo *THIS_PTR,_Out_ UINT *puiChannelCount)
ULONG WINAPI tdh.TdhUnloadManifest(_In_ PWSTR Manifest)
BOOL WINAPI crypt32.CryptSIPGetCaps(_In_ SIP_SUBJECTINFO *pSubjInfo,_Inout_ SIP_CAP_SET *pCaps)
BOOL None None.GetForm(_In_ HANDLE hPrinter,_In_ LPTSTR pFormName,_In_ DWORD Level,_Out_ LPBYTE pForm,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded)
BOOL None None.GetFormW(_In_ HANDLE hPrinter,_In_ LPTSTR pFormName,_In_ DWORD Level,_Out_ LPBYTE pForm,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded)
BOOL None None.GetFormA(_In_ HANDLE hPrinter,_In_ LPTSTR pFormName,_In_ DWORD Level,_Out_ LPBYTE pForm,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded)
DWORD WINAPI clusapi.ClusterResourceCloseEnumEx(_In_ HRESENUMEX hResourceEnumEx)
BOOL WINAPI None.WIMDeleteImage(HANDLE hWim None,DWORD dwImageIndex None)
public Point None.PointFromScreen(Point point None)
VOID None None.XMStoreUInt4([out] XMUINT4 *pDestination,XMVECTOR V None)
STDAPI None mf.MFCreateProtectedEnvironmentAccess(_Out_ IMFProtectedEnvironmentAccess **ppAccess)
HRESULT None certcli.EnumerateAttributes([out] BSTR *pstrAttributeName)
HRESULT None None.Get9XUserList([out] __NTLMUser9X ul[])
HRESULT None direct2d.GetTextValue([out] PWSTR name,UINT32 nameCount None)
HRESULT None oleaut32.VarI4FromR8(_In_ DOUBLE dblIn,_Out_ LONG *plOut)
HRESULT None None.Clone([out None None,retval] IInkDisp **NewInk)
LSTATUS None shlwapi.SHRegGetValue(_In_ HKEY hkey,_In_ LPCTSTR pszSubKey,_In_ LPCTSTR pszValue,_In_ SRRF srrfFlags,_Inout_ LPDWORD pdwType,_Out_ LPVOID pvData,_Inout_ LPDWORD pcbData)
LSTATUS None shlwapi.SHRegGetValueW(_In_ HKEY hkey,_In_ LPCTSTR pszSubKey,_In_ LPCTSTR pszValue,_In_ SRRF srrfFlags,_Inout_ LPDWORD pdwType,_Out_ LPVOID pvData,_Inout_ LPDWORD pcbData)
LSTATUS None shlwapi.SHRegGetValueA(_In_ HKEY hkey,_In_ LPCTSTR pszSubKey,_In_ LPCTSTR pszValue,_In_ SRRF srrfFlags,_Inout_ LPDWORD pdwType,_Out_ LPVOID pvData,_Inout_ LPDWORD pcbData)
RPC_STATUS RPC_ENTRY rpcrt4.RpcProtseqVectorFree(RPC_PROTSEQ_VECTOR **ProtSeqVector None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcProtseqVectorFreeW(RPC_PROTSEQ_VECTOR **ProtSeqVector None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcProtseqVectorFreeA(RPC_PROTSEQ_VECTOR **ProtSeqVector None)
DWORD WINAPI wlanapi.WFDUpdateDeviceVisibility(PDOT11_MAC_ADDRESS pDeviceAddress None)
public None None.FitToDiscException(string message None)
HRESULT None oleaut32.VarI4FromI8(_In_ LONG64 i64In,_Out_ LONG *plOut)
UINT None msi.MsiSetComponentState(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szComponent,_In_ INSTALLSTATE iState)
UINT None msi.MsiSetComponentStateW(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szComponent,_In_ INSTALLSTATE iState)
UINT None msi.MsiSetComponentStateA(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szComponent,_In_ INSTALLSTATE iState)
protected void None.CloneCore(Freezable sourceFreezable None)
HRESULT None shell32.SetCurrentProcessExplicitAppUserModelID(_In_ PCWSTR AppID)
NTSTATUS None None.WdfInterruptCreate(_In_ WDFDEVICE Device,_In_ PWDF_INTERRUPT_CONFIG Configuration,_In_opt_ PWDF_OBJECT_ATTRIBUTES Attributes,_Out_ WDFINTERRUPT *Interrupt)
HRESULT None None.getProperty(BSTR name None,VARIANT* value None)
public void None.ClearValue(DependencyProperty dp None)
NTSTATUS None None.SpAcceptCredentials(_In_ SECURITY_LOGON_TYPE LogonType,_In_ PUNICODE_STRING AccountName,_In_ PSECPKG_PRIMARY_CRED PrimaryCredentials,_In_ PSECPKG_SUPPLEMENTAL_CRED SupplementalCredentials)
BOOL WINAPI kernel32.HeapUnlock(_In_ HANDLE hHeap)
HRESULT None None.FeedItemCountChanged(LPCWSTR pszPath None,FEICF feicfFlags None)
DWORD None iphlpapi.GetUniDirectionalAdapterInfo(_Out_ PIP_UNIDIRECTIONAL_ADAPTER_ADDRESS pIPIfInfo,_Out_ PULONG dwOutBufLen)
private void None.button1_Click(Object sender None,System.EventArgs e None)
NTSTATUS NTAPI None.CrediFreeCredentials(_In_ ULONG Count,_Inout_ PENCRYPTED_CREDENTIALW *Credentials)
protected String None.MapPathSecure(String virtualPath None)
HRESULT None None.UIntAdd(_In_ UINT uAugend,_In_ UINT uAddend,_Out_ UINT *puResult)
HRESULT WINAPI webservices.WsGetMissingMetadataDocumentAddress(_In_ WS_METADATA* metadata,WS_ENDPOINT_ADDRESS** address None,_In_opt_ WS_ERROR* error)
protected void None.OnPreviewDragEnter(DragEventArgs e None)
LONG WINAPI tapi32.lineGetRequest(HLINEAPP hLineApp None,DWORD dwRequestMode None,LPVOID lpRequestBuffer None)
LONG WINAPI tapi32.lineGetRequestW(HLINEAPP hLineApp None,DWORD dwRequestMode None,LPVOID lpRequestBuffer None)
LONG WINAPI tapi32.lineGetRequestA(HLINEAPP hLineApp None,DWORD dwRequestMode None,LPVOID lpRequestBuffer None)
BOOL None gdi32.GetViewportExtEx(_In_ HDC hdc,_Out_ LPSIZE lpSize)
uint32 None dhcpserverpsprovider.GetByIPAddress([in] string ComputerName,[in] string IPAddress[],[out] DhcpServerv6Lease cmdletOutput[])
DWORD None npptools.SelectNPPBlobFromTable(_In_ HWND hwnd,_In_ PBLOB_TABLE pBlobTable,_Out_ HBLOB *hBlob)
HRESULT WINAPI rtworkq.RtwqSetDeadline(_In_ DWORD workQueueId,_In_ LONGLONG llDeadline,_Inout_ HANDLE *pRequest)
LPSTR WINAPI nmapi.GetCaptureComment(_In_ HCAPTURE hCapture)
BOOL WINAPI crypt32.CertVerifyCRLRevocation(_In_ DWORD dwCertEncodingType,_In_ PCERT_INFO pCertId,_In_ DWORD cCrlInfo,_In_ PCRL_INFO rgpCrlInfo[])
HRESULT None None.Xml(FEEDS_XML_INCLUDE_FLAGS fxif None,IStream **pps None)
BOOL WINAPI kernel32.CancelIo(_In_ HANDLE hFile)
LONG WINAPI tapi32.lineSetNumRings(HLINE hLine None,DWORD dwAddressID None,DWORD dwNumRings None)
public boolean None.CanConvertFrom(ITypeDescriptorContext context None,Type sourceType None)
public boolean None.Equals(Size value None)
protected void None.OnVisualChildrenChanged(DependencyObject visualAdded None,DependencyObject visualRemoved None)
private void None.On_Inserting(Object sender None,SqlDataSourceCommandEventArgs e None)
HRESULT None None.reset(void None None)
public Object None.FindResource(Object resourceKey None)
UINT None msi.MsiGetFileHash(_In_ LPCTSTR szFilePath,_In_ DWORD dwOptions,_Out_ PMSIFILEHASHINFO pHash)
UINT None msi.MsiGetFileHashW(_In_ LPCTSTR szFilePath,_In_ DWORD dwOptions,_Out_ PMSIFILEHASHINFO pHash)
UINT None msi.MsiGetFileHashA(_In_ LPCTSTR szFilePath,_In_ DWORD dwOptions,_Out_ PMSIFILEHASHINFO pHash)
BOOL None None.TabCtrl_GetUnicodeFormat(HWND hwnd None)
HRESULT None oleaut32.VarR4FromCy(_In_ CY cyIn,FLOAT *pfltOut None)
BOOL None shlwapi.StrTrim(_Inout_ PTSTR psz,_In_ PCTSTR pszTrimChars)
BOOL None shlwapi.StrTrimW(_Inout_ PTSTR psz,_In_ PCTSTR pszTrimChars)
BOOL None shlwapi.StrTrimA(_Inout_ PTSTR psz,_In_ PCTSTR pszTrimChars)
UINT None msi.MsiEnumProductsEx(_In_opt_ LPCTSTR szProductCode,_In_ LPCTSTR szUserSid,_In_ DWORD dwContext,_In_ DWORD dwIndex,_Out_opt_ TCHAR szInstalledProductCode[39],_Out_opt_ MSIINSTALLCONTEXT *pdwInstalledContext,_Out_opt_ LPTSTR szSid,_Inout_opt_ LPDWORD pcchSid)
UINT None msi.MsiEnumProductsExW(_In_opt_ LPCTSTR szProductCode,_In_ LPCTSTR szUserSid,_In_ DWORD dwContext,_In_ DWORD dwIndex,_Out_opt_ TCHAR szInstalledProductCode[39],_Out_opt_ MSIINSTALLCONTEXT *pdwInstalledContext,_Out_opt_ LPTSTR szSid,_Inout_opt_ LPDWORD pcchSid)
UINT None msi.MsiEnumProductsExA(_In_opt_ LPCTSTR szProductCode,_In_ LPCTSTR szUserSid,_In_ DWORD dwContext,_In_ DWORD dwIndex,_Out_opt_ TCHAR szInstalledProductCode[39],_Out_opt_ MSIINSTALLCONTEXT *pdwInstalledContext,_Out_opt_ LPTSTR szSid,_Inout_opt_ LPDWORD pcchSid)
BOOL None None.ListView_SetBkColor(HWND hwnd None,COLORREF clrBk None)
HRESULT None oleaut32.VarR4FromI8(_In_ LONG64 i64In,_Out_ FLOAT *pfltOut)
Decimal None None.ToDecimal(IFormatProvider provider None)
HRESULT None oleaut32.VarI1FromStr(_In_ LPCOLESTR strIn,_In_ LCID lcid,_In_ ULONG dwFlags,_Out_ CHAR *pcOut)
RPC_STATUS RPC_ENTRY rpcrt4.RpcBindingCopy(RPC_BINDING_HANDLE SourceBinding None,RPC_BINDING_HANDLE *DestinationBinding None)
UINT None oledlg.OleUIPasteSpecial(_In_ LPOLEUIPASTESPECIAL lpPS)
UINT None oledlg.OleUIPasteSpecialW(_In_ LPOLEUIPASTESPECIAL lpPS)
UINT None oledlg.OleUIPasteSpecialA(_In_ LPOLEUIPASTESPECIAL lpPS)
BOOL WINAPI user32.SetDoubleClickTime(_In_ UINT uInterval)
HRESULT None wsdapi.WSDCreateHttpMessageParameters(IWSDHttpMessageParameters **ppTxParams None)
HRESULT None oleaut32.VarUI2FromI1(_In_ CHAR cIn,_Out_ USHORT *puiOut)
HRESULT None None.get_target(BSTR *name None)
HRESULT None None.get_allErrors(IXMLDOMParseErrorCollection **oAllErrs None)
HRESULT None None.EnumerateMetadata(IMFMediaSource *pSource None)
HCLUSENUMEX WINAPI clusapi.ClusterOpenEnumEx(_In_ HCLUSTER hCluster,_In_ DWORD dwType,_In_opt_ PVOID pOptions)
HRESULT None None.get_name(BSTR *attributeName None)
HRESULT None None.PullComplete(HRESULThrPull None None, None None)
DWORD WINAPI clusapi.GetNotifyEventHandle(_In_ HCHANGE hChange,_Out_ LPHANDLE lphTargetEvent)
DWORD None None.MonthCal_GetCalendarBorder(HWND hmc None)
HRESULT None shlwapi.IStream_Size(_In_ IStream *pstm,_Out_ ULARGE_INTEGER *pui)
HRESULT None rtworkq.RtwqUnjoinWorkQueue(_In_ DWORD workQueueId,_In_ HANDLE hFile)
HRESULT None None.get_UDPResendRequestsRate(long* pVal None)
HRESULT None None.GetIsSideways([out None None,retval] BOOL *isSideways)
HRESULT None None.UIntPtrMult(_In_ UINT_PTR uMultiplicand,_In_ UINT_PTR uMultiplier,_Out_ UINT_PTR *puResult)
HRESULT None None.SizeTMult(_In_ size_t cbMultiplicand,_In_ size_t cbMultiplier,_Out_ size_t *pcbResult)
protected boolean None.OnBubbleEvent(Object source None,EventArgs args None)
protected int None.CalculateOptimumPageWeight(int defaultPageWeight None)
protected void None.OnStylusSystemGesture(StylusSystemGestureEventArgs e None)
uint32 None wfascim.Save([in] String GPOSession)
HRESULT None usp10.ScriptStringValidate(_In_ SCRIPT_STRING_ANALYSIS ssa)
assembly None None.name(optional None None)
HRESULT None None.DownloadUrl(LPWSTR *ppszUrl None)
HRESULT None mf.MFCreateTranscodeTopologyFromByteStream(_In_ IMFMediaSource *pSrc,_In_ IMFByteStream *pOutputStream,_In_ IMFTranscodeProfile *pProfile,_Out_ IMFTopology **ppTranscodeTopo)
HRESULT WINAPI uiautomationcore.UiaDisconnectProvider(_In_ IRawElementProviderSimple *pProvider)
int None None.main(void None None)
HRESULT None tapi3.get_OverallCallRate([out] CURRENCY *pcyCallrate)
HRESULT None None.Merge(BSTR feedXml None,BSTR feedUrl None)
HRESULT None None.Items(IXFeedsEnum **ppfe None)
HRESULT None oleaut32.VarR4FromR8(_In_ DOUBLE dblIn,_Out_ FLOAT *pfltOut)
HRESULT None mf.MFCreateSequencerSource(IUnknown *pReserved None,IMFSequencerSource **ppSequencerSource None)
HRESULT None mfplat.CreatePropertyStore(_Out_ IPropertyStore **ppStore)
void None None.Process2DQuadTessFactorsMax(in float4 RawEdgeFactors,in float2 InsideScale,out float4 RoundedEdgeTessFactors,out float2 RoundedInsideTessFactors,out float2 UnroundedInsideTessFactors)
public void None.OnItemRemoved(ListMakerItem item None)
DWORD None None.NPGetConnection(_In_ LPTSTR lpLocalName,_Out_ LPTSTR lpRemoteName,_Inout_ LPDWORD lpBufferSize)
NET_API_STATUS None netapi32.NetServerEnum(_In_opt_ LPCWSTR servername,_In_ DWORD level,_Out_ LPBYTE *bufptr,_In_ DWORD prefmaxlen,_Out_ LPDWORD entriesread,_Out_ LPDWORD totalentries,_In_ DWORD servertype,_In_opt_ LPCWSTR domain,_Inout_opt_ LPDWORD resume_handle)
HRESULT None oleaut32.SafeArrayAllocData(_In_ SAFEARRAY *psa)
NET_API_STATUS None netapi32.NetMessageNameAdd(_In_ LPCWSTR servername,_In_ LPCWSTR msgname)
BOOL None wintrust.CryptCATClose(_In_ HANDLE hCatalog)
public None None.Annotation(XmlQualifiedName annotationType None,Guid id None,DateTime creationTime None,DateTime lastModificationTime None)
HRESOURCE WINAPI resutils.ResUtilGetResourceDependencyByClass(_In_ HCLUSTER hCluster,_In_ HANDLE hSelf,_In_ PCLUS_RESOURCE_CLASS_INFO prci,_In_ BOOL bRecurse)
NTSTATUS WINAPI bcrypt.BCryptQueryProviderRegistration(_In_ LPCWSTR pszProvider,_In_ ULONG dwMode,_In_ ULONG dwInterface,_Inout_ ULONG *pcbBuffer,_Inout_ PCRYPT_PROVIDER_REG *ppBuffer)
BOOL CALLBACK None.AuthzAccessCheckCallback(_In_ AUTHZ_CLIENT_CONTEXT_HANDLE hAuthzClientContext,_In_ PACE_HEADER pAce,_In_opt_ PVOID pArgs,_Inout_ PBOOL pbAceApplicable)
NTSTATUS None None.CloseSamUser(_In_ PVOID UserHandle)
BOOL WINAPI clfsw32.DeleteLogMarshallingArea(_In_ PVOID pvMarshal)
BOOL WINAPI kernel32.NotifyUILanguageChange(_In_ DWORD dwFlags,_In_opt_ PCWSTR pcwstrNewLanguage,_In_opt_ PCWSTR pcwstrPreviousLanguage,_In_ DWORD dwReserved,_Out_opt_ PDWORD pdwStatusRtrn)
DWORD None iphlpapi.NotifyAddrChange(_Out_ PHANDLE Handle,_In_ LPOVERLAPPED overlapped)
BOOL WINAPI dbghelp.SymGetSourceFile(_In_ HANDLE hProcess,_In_ ULONG64 Base,_In_opt_ PCTSTR Params,_In_ PCTSTR FileSpec,_Out_ PTSTR FilePath,_In_ DWORD Size)
BOOL WINAPI dbghelp.SymGetSourceFileW(_In_ HANDLE hProcess,_In_ ULONG64 Base,_In_opt_ PCTSTR Params,_In_ PCTSTR FileSpec,_Out_ PTSTR FilePath,_In_ DWORD Size)
BOOL WINAPI dbghelp.SymGetSourceFile(_In_ HANDLE hProcess,_In_ ULONG64 Base,_In_opt_ PCTSTR Params,_In_ PCTSTR FileSpec,_Out_ PTSTR FilePath,_In_ DWORD Size)
HRESULT None None.ValidateDevice([out None None,retval] DWORD *pNumPasses)
DWORD None iphlpapi.GetUdpStatisticsEx(_Out_ PMIB_UDPSTATS pStats,_In_ DWORD dwFamily)
DWORD IMAGEAPI dbghelp.SymCompareInlineTrace(_In_ HANDLE hProcess,_In_ DWORD64 Address1,_In_ DWORD InlineContext1,_In_ DWORD64 RetAddress1,_In_ DWORD64 Address2,_In_ DWORD64 RetAddress2)
INT_PTR WINAPI user32.DialogBoxIndirect(_In_opt_ HINSTANCE hInstance,_In_ LPCDLGTEMPLATE lpTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc)
INT_PTR WINAPI user32.DialogBoxIndirectW(_In_opt_ HINSTANCE hInstance,_In_ LPCDLGTEMPLATE lpTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc)
INT_PTR WINAPI user32.DialogBoxIndirectA(_In_opt_ HINSTANCE hInstance,_In_ LPCDLGTEMPLATE lpTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc)
VOID None kernel32.GetCurrentProcessorNumberEx(_Out_ PPROCESSOR_NUMBER ProcNumber)
uint32 None wvrcimprov.WvrQueryReplicationGroupInfo([in] string ReplicationGroupName,[out] uint64 LogSizeInBytes,[out] uint32 LogVolumeSectorSize,[out] boolean IsWriteConsistent,[out] uint64 DataVolumeSize[],[out] uint32 DataVolumeSectorSize[])
BOOL CALLBACK None.SymEnumProcessesProc(_In_ HANDLE hProcess,_In_ PVOID UserContext)
HRESULT None windowscodecs.IWICImagingFactory_CreateBitmapScaler_Proxy(_In_ IWICImagingFactory *pFactory,_Out_ IWICBitmapScaler **ppIBitmapScaler)
void None None.HandleCustomEvent(object sender None,CustomEventArgs a None)
HRESULT None None.GetGradientStops([out None None,retval] IXpsOMGradientStopCollection **gradientStops)
public boolean None.SystemSettingCheckBoolean(SystemSetting setting None)
public StringBuilder None.AppendFormat(String format None,Object[] args None)
SECURITY_STATUS SEC_Entry secur32.FreeContextBuffer(_In_ PVOID pvContextBuffer)
HRESULT None windowscodecs.IWICBitmapEncoder_GetMetadataQueryWriter_Proxy(_In_ IWICBitmapEncoder *THIS_PTR,_Out_ IWICMetadataQueryWriter **ppIMetadataQueryWriter)
HRESULT None windowscodecs.IWICBitmapFrameEncode_WriteSource_Proxy(_In_ IWICBitmapFrameEncode *THIS_PTR,_In_ IWICBitmapSource *pIBitmapSource,_In_ WICRect *prc)
uint32 None dhcpserverpsprovider.RemoveByIPAddress([in] boolean PassThru,[in] string ComputerName,[in] string IPAddress[],[out] DhcpServerv4Lease cmdletOutput[])
LONG TSPIAPI None.TSPI_lineReleaseUserUserInfo(DRV_REQUESTID dwRequestID None,HDRVCALL hdCall None)
BOOL WINAPI None.WIMExportImage(HANDLE hImage None,HANDLE hWim None,DWORD dwFlags None)
VOID WINAPI kernel32.WaitForThreadpoolIoCallbacks(_Inout_ PTP_IO pio,_In_ BOOL fCancelPendingCallbacks)
HRESULT None None.ULongLongMult(_In_ ULONGLONG ullMultiplicand,_In_ ULONGLONG ullMultiplier,_Out_ ULONGLONG *pullResult)
protected void None.OnMouseRightButtonUp(MouseButtonEventArgs e None)
BOOL None None.ILIsAligned(_In_ PCUIDLIST_RELATIVE pidl)
HRESULT WINAPI websocket.WebSocketSend(_In_ WEB_SOCKET_HANDLE hWebSocket,_In_ WEB_SOCKET_BUFFER_TYPE BufferType,_In_opt_ WEB_SOCKET_BUFFER *pBuffer,_In_opt_ PVOID Context)
BOOL None ole32.IsEqualCLSID(_In_ REFCLSID rclsid1,_In_ REFCLSID rclsid2)
HRESULT None mf.MFCreateASFProfile(IMFASFProfile **ppIProfile None)
BOOL WINAPI kernel32.HeapWalk(_In_ HANDLE hHeap,_Inout_ LPPROCESS_HEAP_ENTRY lpEntry)
DWORD WINAPI nmapi.GetFrameLength(_In_ HFRAME hFrame)
HRESULT None scardssp.get_ReplyNad([out] BYTE *pbNad)
HRESULT None None.GetCustomReferenceEnumerator([out None None,retval] IOpcSignatureReferenceEnumerator **customReferenceEnumerator)
HRESULT None None.GetCurrent([out None None,retval] IOpcSignatureReference **reference)
DWORD WINAPI None.ResourceTypeControl(_In_ LPCWSTR ResourceTypeName,_In_ DWORD ControlCode,_In_ PVOID InBuffer,_In_ DWORD InBufferSize,_Out_ PVOID OutBuffer,_In_ DWORD OutBufferSize,_Out_ LPDWORD BytesReturned)
HRESULT None oleaut32.VarUI4FromStr(_In_ LPCOLESTR strIn,_In_ LCID lcid,_In_ ULONG dwFlags,_Out_ ULONG *pulOut)
DWORD WINAPI clusapi.RemoveCrossClusterGroupToGroupSetDependency(_In_ HGROUP hDependentGroup,_In_ LPCWSTR lpRemoteClusterName,_In_ LPCWSTR lpRemoteGroupSetName)
DWORD None winhttp.WinHttpCreateProxyResolver(_In_ HINTERNET hSession,_Out_ HINTERNET *phResolver)
UINT None msi.MsiApplyMultiplePatches(_In_ LPCTSTR szPatchPackages,_In_opt_ LPCTSTR szProductCode,_In_opt_ LPCTSTR szPropertiesList)
UINT None msi.MsiApplyMultiplePatchesW(_In_ LPCTSTR szPatchPackages,_In_opt_ LPCTSTR szProductCode,_In_opt_ LPCTSTR szPropertiesList)
UINT None msi.MsiApplyMultiplePatchesA(_In_ LPCTSTR szPatchPackages,_In_opt_ LPCTSTR szProductCode,_In_opt_ LPCTSTR szPropertiesList)
DWORD WINAPI clusapi.RemoveResourceFromClusterSharedVolumes(_In_ HRESOURCE hResource)
HRESULT None oleaut32.VarI8FromR8(_In_ DOUBLE dblIn,_Out_ LONG64 *pi64Out)
NETIOAPI_API None iphlpapi.GetIfEntry2Ex(_In_ MIB_IF_ENTRY_LEVEL Level,_Inout_ PMIB_IF_ROW2 Row)
RPC_STATUS RPC_ENTRY rpcrt4.RpcEpUnregister(RPC_IF_HANDLE IfSpec None,RPC_BINDING_VECTOR *BindingVector None,UUID_VECTOR *UuidVector None)
HRESULT None None.GetLoggingUrlCount([out] DWORD *pdwUrlCount)
HRESULT WINAPI webservices.WsWriteEndElement(_In_ WS_XML_WRITER* writer,_In_opt_ WS_ERROR* error)
HRESULT WINAPI webservices.WsCopyError(_In_ WS_ERROR* source,_In_ WS_ERROR* destination)
private void None.SelectNode(TreeNode node None)
LONG WINAPI tapi32.lineGetCallStatus(HCALL hCall None,LPLINECALLSTATUS lpCallStatus None)
HRESULT None rtworkq.RtwqUnregisterPlatformEvents(IRtwqPlatformEvents platformEvents None)
public IAsyncResult None.BeginInvoke(Delegate method None)
HRESULT WINAPI iscsidsc.SetIscsiInitiatorRADIUSSharedSecret(_In_ ULONG SharedSecretLength,_In_ PUCHAR SharedSecret)
LONG WINAPI tapi32.lineGetConfRelatedCalls(HCALL hCall None,LPLINECALLLIST lpCallList None)
PDH_STATUS None pdh.PdhEnumObjectItemsH(_In_ PDH_HLOG hDataSource,_In_ LPCTSTR szMachineName,_In_ LPCTSTR szObjectName,_Out_ LPTSTR mszCounterList,_Inout_ LPDWORD pcchCounterListLength,_Out_ LPTSTR mszInstanceList,_Inout_ LPDWORD pcchInstanceListLength,_In_ DWORD dwDetailLevel,_In_ DWORD dwFlags)
PDH_STATUS None pdh.PdhEnumObjectItemsHW(_In_ PDH_HLOG hDataSource,_In_ LPCTSTR szMachineName,_In_ LPCTSTR szObjectName,_Out_ LPTSTR mszCounterList,_Inout_ LPDWORD pcchCounterListLength,_Out_ LPTSTR mszInstanceList,_Inout_ LPDWORD pcchInstanceListLength,_In_ DWORD dwDetailLevel,_In_ DWORD dwFlags)
PDH_STATUS None pdh.PdhEnumObjectItemsHA(_In_ PDH_HLOG hDataSource,_In_ LPCTSTR szMachineName,_In_ LPCTSTR szObjectName,_Out_ LPTSTR mszCounterList,_Inout_ LPDWORD pcchCounterListLength,_Out_ LPTSTR mszInstanceList,_Inout_ LPDWORD pcchInstanceListLength,_In_ DWORD dwDetailLevel,_In_ DWORD dwFlags)
DWORD None None.TreeView_ShowInfoTip(HWND hwnd None,HITEM hitem None)
HRESULT None windowscodecs.IWICImagingFactory_CreateBitmapFlipRotator_Proxy(_In_ IWICImagingFactory *pFactory,_Out_ IWICBitmapFlipRotator **ppIBitmapFlipRotator)
MI_INLINE MI_Result None.MI_Deserializer_Close(_Inout_ MI_Deserializer *deserializer)
HRESULT STDAPI cldapi.CfReleaseTransferKey(_In_ HANDLE FileHandle,_In_ PLARGE_INTEGER TransferKey)
public StringBuilder None.AppendFormat(String format None,Object[] args None)
protected void None.OnPreviewStylusUp(StylusEventArgs e None)
protected void None.OnInit(EventArgs e None)
size_t None None.wcstombs(char *mbstr None,const wchar_t *wcstr,size_t count None)
HRESULT None msdrm.DRMSetGlobalOptions(_In_ DRMGLOBALOPTIONS eGlobalOptions,_In_ LPVOID pvdata,_In_ DWORD dwlen)
LONG WINAPI tapi32.lineGetID(HLINE hLine None,DWORD dwAddressID None,HCALL hCall None,DWORD dwSelect None,LPVARSTRING lpDeviceID None,LPCSTR lpszDeviceClass None)
LONG WINAPI tapi32.lineGetIDW(HLINE hLine None,DWORD dwAddressID None,HCALL hCall None,DWORD dwSelect None,LPVARSTRING lpDeviceID None,LPCSTR lpszDeviceClass None)
LONG WINAPI tapi32.lineGetIDA(HLINE hLine None,DWORD dwAddressID None,HCALL hCall None,DWORD dwSelect None,LPVARSTRING lpDeviceID None,LPCSTR lpszDeviceClass None)
HRESULT None msdrm.DRMCreateRight(_In_ PWSTR wszRightName,_In_ SYSTEMTIME *pstFrom,_In_ SYSTEMTIME *pstUntil,_In_ UINT cExtendedInfo,_In_ PWSTR *pwszExtendedInfoName,_In_ PWSTR *pwszExtendedInfoValue,_Out_ DRMPUBHANDLE *phRight)
HRESULT None None.GetMainPackageDependencies([out None None,retval] IAppxManifestMainPackageDependenciesEnumerator **mainPackageDependencies)
HRESULT None shell32.SHRemoveLocalizedName(_In_ PCWSTR pszPath)
HRESULT None mfplat.MFPutWaitingWorkItem(_In_ HANDLE hEvent,_In_ LONG Priority,_In_ IMFAsyncResult *pResult,_Out_ MFWORKITEM_KEY *pKey)
private void None.PopupMyMenu(Object sender None,System.EventArgs e None)
VOID None None.XMStoreUInt3([out] XMUINT3 *pDestination,XMVECTOR V None)
LONG TSPIAPI None.TSPI_lineRemoveFromConference(DRV_REQUESTID dwRequestID None,HDRVCALL hdCall None)
HRESULT None oleacc.get_accParent([out None None,retval] IDispatch **ppdispParent)
UINT None msi.MsiEnableLog(_In_ DWORD dwLogMode,_In_ LPCTSTR szLogFile,_In_ DWORD dwLogAttributes)
UINT None msi.MsiEnableLogW(_In_ DWORD dwLogMode,_In_ LPCTSTR szLogFile,_In_ DWORD dwLogAttributes)
UINT None msi.MsiEnableLogA(_In_ DWORD dwLogMode,_In_ LPCTSTR szLogFile,_In_ DWORD dwLogAttributes)
UINT None msi.MsiSourceListClearAllEx(_In_ LPCTSTR szProductCodeOrPatchCode,_In_opt_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD dwOptions)
UINT None msi.MsiSourceListClearAllExW(_In_ LPCTSTR szProductCodeOrPatchCode,_In_opt_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD dwOptions)
UINT None msi.MsiSourceListClearAllExA(_In_ LPCTSTR szProductCodeOrPatchCode,_In_opt_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD dwOptions)
BOOL WINAPI advapi32.GetKernelObjectSecurity(_In_ HANDLE Handle,_In_ SECURITY_INFORMATION RequestedInformation,_Out_opt_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_ DWORD nLength,_Out_ LPDWORD lpnLengthNeeded)
VOID CALLBACK None.WFD_OPEN_SESSION_COMPLETE_CALLBACK(_In_ PHANDLE hSessionHandle,_In_ PVOID pvContext,_In_ GUID guidSessionInterface,_In_ DWORD dwError,_In_ DWORD dwReasonCode)
INSTALLSTATE None msi.MsiGetComponentPathEx(_In_ LPCTSTR szProductCode,_In_ LPCTSTR szComponentCode,_In_opt_ LPCTSTR szUserSid,_In_opt_ MSIINSTALLCONTEXT dwContext,_Out_opt_ LPTSTR szPathBuf,_Inout_opt_ LPDWORD pcchBuf)
INSTALLSTATE None msi.MsiGetComponentPathExW(_In_ LPCTSTR szProductCode,_In_ LPCTSTR szComponentCode,_In_opt_ LPCTSTR szUserSid,_In_opt_ MSIINSTALLCONTEXT dwContext,_Out_opt_ LPTSTR szPathBuf,_Inout_opt_ LPDWORD pcchBuf)
INSTALLSTATE None msi.MsiGetComponentPathExA(_In_ LPCTSTR szProductCode,_In_ LPCTSTR szComponentCode,_In_opt_ LPCTSTR szUserSid,_In_opt_ MSIINSTALLCONTEXT dwContext,_Out_opt_ LPTSTR szPathBuf,_Inout_opt_ LPDWORD pcchBuf)
LONG TSPIAPI None.TSPI_lineGetAddressID(HDRVLINE hdLine None,LPDWORD lpdwAddressID None,DWORD dwAddressMode None,LPCWSTR lpsAddress None,DWORD dwSize None)
HRESULT None None.GetFillBrushLocal([out None None,retval] IXpsOMBrush **fillBrush)
BOOL WINAPI authz.AuthzFreeContext(_In_ AUTHZ_CLIENT_CONTEXT_HANDLE AuthzClientContext)
HRESULT None ole32.OleCreateDefaultHandler(_In_ REFCLSID clsid,_In_ LPUNKNOWN pUnkOuter,_In_ REFIID riid,_Out_ LPVOID *lplpObj)
public IPermission None.Union(IPermission other None)
DWORD None None.ListView_GetExtendedListViewStyle(HWND hwndLV None)
NTSTATUS None secur32.LsaUnregisterPolicyChangeNotification(_In_ POLICY_NOTIFICATION_INFORMATION_CLASS InformationClass,_In_ HANDLE NotificationEventHandle)
RPC_STATUS RPC_ENTRY rpcrt4.RpcMgmtInqIfIds(RPC_BINDING_HANDLE Binding None,RPC_IF_ID_VECTOR **IfIdVector None)
RPC_STATUS None rpcrt4.RpcSsContextLockShared(_In_ RPC_BINDING_HANDLE ServerBindingHandle,_In_ PVOID UserContext)
HRESULT None None.StringCbVPrintf_l(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ va_list argList)
HRESULT None None.StringCbVPrintf_lW(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ va_list argList)
HRESULT None None.StringCbVPrintf_lA(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ va_list argList)
ULONG None wldap32.ldap_unbind_s(_In_ LDAP *ld)
NTSTATUS WINAPI bcrypt.BCryptCreateContext(_In_ ULONG dwTable,_In_ LPCWSTR pszContext,_In_opt_ PCRYPT_CONTEXT_CONFIG pConfig)
HRESULT None propsys.VariantToUInt16(_In_ REFVARIANT varIn,_Out_ USHORT *puiRet)
HRESULT None None.nextNode(IXMLDOMNode **nextItem None)
VOID None None.WdfIoQueuePurgeSynchronously(_In_ WDFQUEUE Queue)
HRESULT STDAPICALLTYPE oleaut32.SafeArrayAddRef(_In_ SAFEARRAY *psa,_Out_ PVOID **ppDataToRelease)
HRESULT None None.abort(void None None)
UINT None msi.MsiViewFetch(_In_ MSIHANDLE hView,_Out_ MSIHANDLE *phRecord)
PVOID CALLBACK None.SymRegisterFunctionEntryCallbackProc64(_In_ HANDLE hProcess,_In_ ULONG64 AddrBase,_In_opt_ ULONG64 UserContext)
function None None.InitializeRequest(sender None None,args None None)
function None None.ReceiveServerData(arg None None,context None None)
uint32 None wvrcimprov.GrantSrUserAccess([in] string ComputerName,[in] string UserName)
DWORD None mprapi.MprAdminRegisterConnectionNotification(_In_ MPR_SERVER_HANDLE hMprServer,_In_ HANDLE hEventNotification)
HRESULT None None.GetAggregationType([out] PROPDESC_AGGREGATION_TYPE *paggtype)
HRESULT None shell32.SHResolveLibrary(_In_ IShellItem *psiLibrary)
HRESULT None ole32.CoCreateInstanceEx(_In_ REFCLSID rclsid,_In_ IUnknown *punkOuter,_In_ DWORD dwClsCtx,_In_ COSERVERINFO *pServerInfo,_In_ DWORD dwCount,_Inout_ MULTI_QI *pResults)
HRESULT None None.GetPinState([out] ULONG *requestID)
BOOL CALLBACK None.MprAdminAcceptNewConnection3(_In_ RAS_CONNECTION_0 *pRasConnection0,_In_ RAS_CONNECTION_1 *pRasConnection1,_In_ RAS_CONNECTION_2 *pRasConnection2,_In_ RAS_CONNECTION_3 *pRasConnection3)
HRESULT None None.GetGlyphIndexCount([out None None,retval] UINT32 *indexCount)
INT WSPAPI None.WPUCloseThread(_In_ LPWSATHREADID lpThreadId,_Out_ LPINT lpErrno)
HRESULT None d3dcompiler_47.GetDesc([out] D3D11_LIBRARY_DESC *pDesc)
ULONG None advapi32.EventWrite(_In_ REGHANDLE RegHandle,_In_ PCEVENT_DESCRIPTOR EventDescriptor,_In_ ULONG UserDataCount,_In_opt_ PEVENT_DATA_DESCRIPTOR UserData)
HRESULT None msdrm.DRMCreateEnablingBitsEncryptor(_In_ DRMHANDLE hBoundLicense,_In_opt_ PWSTR wszRight,_In_ DRMHANDLE hAuxLib,_In_opt_ PWSTR wszAuxPlug,_Out_ DRMHANDLE *phEncryptor)
HRESULT None msdrm.DRMCreateLicenseStorageSession(_In_ DRMENVHANDLE hEnv,_In_ DRMHANDLE hDefaultLibrary,_In_ DRMHSESSION hClient,_In_ UINT uFlags,_In_ PWSTR wszIssuanceLicense,_Out_ DRMHSESSION *phLicenseStorage)
BOOL WINAPI crypt32.CryptRegisterDefaultOIDFunction(_In_ DWORD dwEncodingType,_In_ LPCSTR pszFuncName,_In_ DWORD dwIndex,_In_ LPCWSTR pwszDll)
COLORREF None None.TreeView_GetInsertMarkColor(HWND hwndTV None)
HRESULT None None.ULongLongSub(_In_ ULONGLONG ullMinuend,_In_ ULONGLONG ullSubtrahend,_Out_ ULONGLONG *pullResult)
HRESULT None mf.MFCreateMP3MediaSink(_In_ IMFByteStream *pTargetByteStream,_Out_ IMFMediaSink **ppMediaSink)
HANDLE WINAPI None.WIMCaptureImage(HANDLE hWim None,PCWSTR pszPath None,DWORD dwCaptureFlags None)
protected boolean None.FreezeCore(boolean isChecking None)
Object None None.ToType(Type conversionType None,IFormatProvider provider None)
HRESULT None azroles.get_Tasks([out] IAzTasks **ppTaskCollection)
protected void None.OnPreviewMouseRightButtonUp(MouseButtonEventArgs e None)
ULONG None advapi32.PerfStartProviderEx(_In_ LPGUID ProviderGuid,_In_opt_ PPERF_PROVIDER_CONTEXT ProviderContext,_Out_ HANDLE *phProvider)
HRESULT WINAPI ole32.CoIncrementMTAUsage(_Out_ CO_MTA_USAGE_COOKIE *pCookie)
BOOL WINAPI kernel32.GetProcessMitigationPolicy(_In_ HANDLE hProcess,_In_ PROCESS_MITIGATION_POLICY MitigationPolicy,_Out_ PVOID lpBuffer,_In_ SIZE_T dwLength)
BOOL WINAPI None.IsAlive(_In_ RESID Resource)
NET_API_STATUS None netapi32.NetScheduleJobEnum(_In_opt_ LPCWSTR Servername,_Out_ LPBYTE *PointerToBuffer,_In_ DWORD PreferredMaximumLength,_Out_ LPDWORD EntriesRead,_Out_ LPDWORD TotalEntries,_Inout_ LPDWORD ResumeHandle)
BOOL WINAPI crypt32.CertAddCTLLinkToStore(_In_ HCERTSTORE hCertStore,_In_ PCCTL_CONTEXT pCtlContext,_In_ DWORD dwAddDisposition,_Out_opt_ PCCTL_CONTEXT *ppStoreContext)
HRESULT None None.IsReusable([out] BOOL *pfIsReusable)
VOID WINAPI kernel32.StartThreadpoolIo(_Inout_ PTP_IO pio)
HRESULT None windowscodecs.CreateInstance([out] IWICFormatConverter **ppIConverter)
UINT None msi.MsiGetProductCode(_In_ LPCTSTR szComponent,_Out_ LPTSTR lpProductBuf)
UINT None msi.MsiGetProductCodeW(_In_ LPCTSTR szComponent,_Out_ LPTSTR lpProductBuf)
UINT None msi.MsiGetProductCodeA(_In_ LPCTSTR szComponent,_Out_ LPTSTR lpProductBuf)
STDAPI None mf.MFGetSystemId(_Out_ IMFSystemId **ppId)
HRESULT None None.get_errorXPath(BSTR *strXPath None)
HRESULT None ole32.CoRegisterMallocSpy(_In_ LPMALLOCSPY pMallocSpy)
DWORD WINAPI clusapi.GetClusterQuorumResource(_In_ HCLUSTER hCluster,_Out_ LPWSTR lpszResourceName,_Inout_ LPDWORD lpcchResourceName,_Out_ LPWSTR lpszDeviceName,_Inout_ LPDWORD lpcchDeviceName,_Out_ LPDWORD lpdwMaxQuorumLogSize)
BOOL WINAPI winhttp.WinHttpGetProxyForUrl(_In_ HINTERNET hSession,_In_ LPCWSTR lpcwszUrl,_In_ WINHTTP_AUTOPROXY_OPTIONS *pAutoProxyOptions,_Out_ WINHTTP_PROXY_INFO *pProxyInfo)
BOOL WINAPI winhttp.WinHttpGetDefaultProxyConfiguration(_Inout_ WINHTTP_PROXY_INFO *pProxyInfo)
VOID None mswsock.RIODeregisterBuffer(_In_ RIO_BUFFERID BufferId)
HRESULT None None.removeAttributeNode(IXMLDOMAttribute *DOMAttribute None,IXMLDOMAttribute **attributeNode None)
UINT None msi.MsiGetComponentState(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szComponent,_Out_ INSTALLSTATE *piInstalled,_Out_ INSTALLSTATE *piAction)
UINT None msi.MsiGetComponentStateW(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szComponent,_Out_ INSTALLSTATE *piInstalled,_Out_ INSTALLSTATE *piAction)
UINT None msi.MsiGetComponentStateA(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szComponent,_Out_ INSTALLSTATE *piInstalled,_Out_ INSTALLSTATE *piAction)
HRESULT None None.GetStyleSimulations([out None None,retval] XPS_STYLE_SIMULATION *styleSimulations)
HRESULT None gpedit.BrowseForGPO(_Inout_ LPGPOBROWSEINFO lpBrowseInfo)
HTREEITEM None None.TreeView_GetNextVisible(HWND hwndTV None,HTREEITEM hitem None)
HRESULT None None.get_Has3DNow([out] VARIANT_BOOL *threeDNowEnabled)
uint32 None wvrcimprov.WvrSetNetworkConstraint([in] string ReplicationGroupName,[in] string PartnerReplicationGroupName,[in] string NWInterfaceIndex[])
uint32 None wvrcimprov.WvrGrantUserAccess([in] string UserName)
HPOWERNOTIFY WINAPI user32.RegisterSuspendResumeNotification(_In_ HANDLE hRecipient,_In_ DWORD Flags)
HRESULT None None.UInt8Sub(_In_ UINT8 u8Minuend,_In_ UINT8 u8Subtrahend,_Out_ UINT8 *pu8Result)
uint32 None wvrcimprov.QueryReplicaSet([in] string ReplicationGroupName,[in] string VolumeName,[out] string PartitionId,[out] string ReplicaSetId)
HRESULT None propsys.PropVariantToString(_In_ REFPROPVARIANT propvar,_Out_ PWSTR psz,_In_ UINT cch)
HRESULT None None.DWordPtrAdd(_In_ DWORD_PTR dwAugend,_In_ DWORD_PTR dwAddend,_Out_ DWORD_PTR *pdwResult)
static void None.WriteObjectInfo(Object testObject None)
MI_INLINE MI_Result None.MI_Instance_ClearElementAt(_Inout_ MI_Instance *self,MI_Uint32 index None)
BOOL WINAPI user32.SendMessageCallback(_In_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam,_In_ SENDASYNCPROC lpCallBack,_In_ ULONG_PTR dwData)
BOOL WINAPI user32.SendMessageCallbackW(_In_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam,_In_ SENDASYNCPROC lpCallBack,_In_ ULONG_PTR dwData)
BOOL WINAPI user32.SendMessageCallbackA(_In_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam,_In_ SENDASYNCPROC lpCallBack,_In_ ULONG_PTR dwData)
HRESULT None None.get_Security([out] IVMSecurity **outSecurity)
HRESULT None oleaut32.VarI4FromUI1(_In_ BYTE bIn,_Out_ LONG *plOut)
HRESULT None mfplat.MFRegisterPlatformWithMMCSS(_In_ PCWSTR wszClass,_Inout_ DWORD *pdwTaskId,_In_ LONG lPriority)
HWND None None.ListView_SetToolTips(HWND hwnd None,HWND hwndToolTip None)
PIDLIST_RELATIVE None shell32.ILAppendID(_In_opt_ PIDLIST_RELATIVE pidl,_In_ LPSHITEMID pmkid,BOOL fAppend None)
uint32 None dnsserverpsprovider.Get([in] string Name,[in] string ComputerName,[in] string ZoneName,[in] boolean Node,[in] string ZoneScope,[in] string RRType,[out] DnsServerResourceRecord cmdletOutput[])
NET_API_STATUS None netapi32.NetWkstaUserSetInfo(LPWSTR reserved None,_In_ DWORD level,_In_ LPBYTE buf,_Out_ LPDWORD parm_err)
NET_API_STATUS None netapi32.NetServerComputerNameDel(_In_ LPWSTR ServerName,_In_ LPWSTR EmulatedServerName)
DWORD WINAPI nmapi.GetFrameNumber(_In_ HFRAME hFrame)
BOOL None kernel32.UpdateCalendarDayOfWeek(_Inout_ LPCALDATETIME lpCalDateTime)
public double None.GetArea(double tolerance None,ToleranceType type None)
BOOL WINAPI kernel32.SetThreadpoolTimerEx(_Inout_ PTP_TIMER pti,_In_opt_ PFILETIME pftDueTime,_In_ DWORD msPeriod,_In_opt_ DWORD msWindowLength)
public bool None.PlayMedia(MediaType mediaType None,object media None,bool addToQueue None)
BOOL WINAPI kernel32.AddIntegrityLabelToBoundaryDescriptor(_Inout_ HANDLE *BoundaryDescriptor,_In_ PSID IntegrityLabel)
HRESULT None None.GetRestoreTarget([out] VSS_RESTORE_TARGET *pTarget)
PDWORD WINAPI advapi32.GetSidSubAuthority(_In_ PSID pSid,_In_ DWORD nSubAuthority)
private void None.listDragTarget_DragOver(Object sender None,System.Windows.Forms.DragEventArgs e None)
ULONG LDAPAPI wldap32.ldap_cleanup(HANDLE hInstance None)
HRESULT None None.get_CLSID(BSTR* pVal None)
HRESULT None shell32.SHIsFileAvailableOffline(_In_ PCWSTR pszPath,_Out_opt_ LPDWORD pdwStatus)
TCHAR None shlwapi.SHStripMneumonic(_Inout_ LPTSTR *pszMenu)
TCHAR None shlwapi.SHStripMneumonicW(_Inout_ LPTSTR *pszMenu)
TCHAR None shlwapi.SHStripMneumonicA(_Inout_ LPTSTR *pszMenu)
HRESULT None None.getEstimatedRows(DBROWCOUNT *pcRows None)
SIZE_T WINAPI kernel32.VirtualQuery(_In_opt_ LPCVOID lpAddress,_Out_ PMEMORY_BASIC_INFORMATION lpBuffer,_In_ SIZE_T dwLength)
HRESULT None rtworkq.RtwqGetWorkQueueMMCSSClass(_In_ DWORD workQueueId,_Out_ LPWSTR usageClass,_Inout_ DWORD *usageClassLength)
BOOL WINAPI advapi32.AdjustTokenGroups(_In_ HANDLE TokenHandle,_In_ BOOL ResetToDefault,_In_opt_ PTOKEN_GROUPS NewState,_In_ DWORD BufferLength,_Out_opt_ PTOKEN_GROUPS PreviousState,_Out_opt_ PDWORD ReturnLength)
public void None.Insert(int index None,Visual visual None)
BOOLEAN None None.WdfTimerStart(_In_ WDFTIMER Timer,_In_ LONGLONG DueTime)
HRESULT None activeds.PrintJobs([out] IADsCollection **ppPrintJobs)
BOOL None mprapi.MprAdminIsServiceRunning(_In_ LPWSTR lpwsServerName)
DWORD None iphlpapi.FlushIpNetTable(_In_ DWORD dwIfIndex)
int None None.__toascii(int c None)
HRESULT None windowscodecs.IWICBitmapDecoder_GetThumbnail_Proxy(_In_ IWICBitmapDecoder *THIS_PTR,_Out_ IWICBitmapSource **ppIThumbnail)
BOOL None spoolss.AbortPrinter(_In_ HANDLE hPrinter)
HRESULT None None.GetAggregationType([out] PROPDESC_AGGREGATION_TYPE *paggtype)
BOOL None None.OpenPrinter(_In_ LPTSTR pPrinterName,_Out_ LPHANDLE phPrinter,_In_ LPPRINTER_DEFAULTS pDefault)
BOOL None None.OpenPrinterW(_In_ LPTSTR pPrinterName,_Out_ LPHANDLE phPrinter,_In_ LPPRINTER_DEFAULTS pDefault)
BOOL None None.OpenPrinterA(_In_ LPTSTR pPrinterName,_Out_ LPHANDLE phPrinter,_In_ LPPRINTER_DEFAULTS pDefault)
VOID WINAPI kernel32.WaitForThreadpoolWorkCallbacks(_Inout_ PTP_WORK pwk,_In_ BOOL fCancelPendingCallbacks)
BOOL None kernel32.IsCalendarLeapYear(_In_ CALID calId,_In_ UINT year,_In_ UINT era)
HRESULT None None.cloneNode(VARIANT_BOOL deep None,IXMLDOMNode **cloneRoot None)
BOOL None None.TabCtrl_SetUnicodeFormat(HWND hwnd None,BOOL fUnicode None)
LONG TSPIAPI None.TSPI_phoneGetHookSwitch(HDRVPHONE hdPhone None,LPDWORD lpdwHookSwitchDevs None)
HRESULT None ole32.CoCancelCall(_In_ DWORD dwThreadId,_In_ ULONG ulTimeout)
LONG TSPIAPI None.TSPI_phoneDevSpecific(DRV_REQUESTID dwRequestID None,HDRVPHONE hdPhone None,LPVOID lpParams None,DWORD dwSize None)
LONG TSPIAPI None.TSPI_lineReceiveMSPData(HDRVLINE hdLine None,HDRVCALL hdCall None,HDRVMSPLINE hdMSPLine None,LPVOID pBuffer None,DWORD dwSize None)
HRESULT None mf.MFCreateTranscodeProfile(_Out_ IMFTranscodeProfile **ppTranscodeProfile)
CLUSTER_GROUP_STATE WINAPI clusapi.GetClusterGroupState(_In_ HGROUP hGroup,_Out_opt_ LPWSTR lpszNodeName,_Inout_opt_ LPDWORD lpcchNodeName)
LPVOID WINAPI kernel32.VirtualAlloc(_In_opt_ LPVOID lpAddress,_In_ SIZE_T dwSize,_In_ DWORD flAllocationType,_In_ DWORD flProtect)
UINT None msi.MsiGetPatchInfoEx(_In_ LPCTSTR szPatchCode,_In_ LPCTSTR szProductCode,_In_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ LPCTSTR szProperty,_Out_opt_ LPTSTR lpValue,_Inout_ DWORD *pcchValue)
UINT None msi.MsiGetPatchInfoExW(_In_ LPCTSTR szPatchCode,_In_ LPCTSTR szProductCode,_In_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ LPCTSTR szProperty,_Out_opt_ LPTSTR lpValue,_Inout_ DWORD *pcchValue)
UINT None msi.MsiGetPatchInfoExA(_In_ LPCTSTR szPatchCode,_In_ LPCTSTR szProductCode,_In_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ LPCTSTR szProperty,_Out_opt_ LPTSTR lpValue,_Inout_ DWORD *pcchValue)
HRESULT None xenroll.GetSupportedKeySpec([out] LONG *pdwKeySpec)
HRESULT None None.GetVideoWindow([out] HWND *phwndVideo)
uint32 None smiscsitargetprov.OnlineDevice([in] boolean Online)
public String None.Replace(String input None,MatchEvaluator evaluator None,int count None)
LRESULT None imm32.ImmRequestMessage(_In_ HIMC hIMC,_In_ WPARAM wParam,_In_ LPARAM lParam)
LRESULT None imm32.ImmRequestMessageW(_In_ HIMC hIMC,_In_ WPARAM wParam,_In_ LPARAM lParam)
LRESULT None imm32.ImmRequestMessageA(_In_ HIMC hIMC,_In_ WPARAM wParam,_In_ LPARAM lParam)
RPC_STATUS RPC_ENTRY rpcrt4.RpcMgmtEpUnregister(RPC_BINDING_HANDLE EpBinding None,RPC_IF_ID *IfId None,RPC_BINDING_HANDLE Binding None,UUID *ObjectUuid None)
BOOL WINAPI winhttp.WinHttpSendRequest(_In_ HINTERNET hRequest,_In_opt_ LPCWSTR pwszHeaders,_In_ DWORD dwHeadersLength,_In_opt_ LPVOID lpOptional,_In_ DWORD dwOptionalLength,_In_ DWORD dwTotalLength,_In_ DWORD_PTR dwContext)
HRESULT None None.setAttributeNode(IXMLDOMAttribute *DOMAttribute None,IXMLDOMAttribute **attributeNode None)
HRESULT None None.GetStreamNumber([out] WORD *pwStreamNum)
NETIOAPI_API WINAPI iphlpapi.GetIpNetworkConnectionBandwidthEstimates(_In_ NET_IFINDEX InterfaceIndex,_In_ ADDRESS_FAMILY AddressFamily,_Out_ PMIB_IP_NETWORK_CONNECTION_BANDWIDTH_ESTIMATES BandwidthEstimates)
protected void None.OnIsKeyboardFocusWithinChanged(DependencyPropertyChangedEventArgs e None)
BOOL WINAPI dbghelp.SymGetTypeInfo(_In_ HANDLE hProcess,_In_ DWORD64 ModBase,_In_ ULONG TypeId,_In_ IMAGEHLP_SYMBOL_TYPE_INFO GetType,_Out_ PVOID pInfo)
BOOL WINAPI user32.SetMenuDefaultItem(_In_ HMENU hMenu,_In_ UINT uItem,_In_ UINT fByPos)
uint32 None wvrcimprov.WvrRemoveReplicaById([in] string ReplicationGroupName,[in] string ReplicaSetId[],[in] boolean IsPrimary)
PCM_PARTIAL_RESOURCE_DESCRIPTOR None None.WdfCmResourceListGetDescriptor(_In_ WDFCMRESLIST List,_In_ ULONG Index)
uint32 None wfascim.CloneObject([in] string NewName,[in] string NewPolicyStore,[in] string NewGPOSession)
BOOL None kernel32.SetThreadpoolStackInformation(_Inout_ PTP_POOL ptpp,_In_ PTP_POOL_STACK_INFORMATION ptpsi)
HRESULT None None.SIZETAdd(_In_ SIZE_T cbAugend,_In_ SIZE_T cbAddend,_Out_ SIZE_T *pcbResult)
VOID None None.SetThreadpoolCallbackRunsLong(_Inout_ PTP_CALLBACK_ENVIRON pcbe)
NETIOAPI_API None iphlpapi.SetIpNetEntry2(_Inout_ PMIB_IPNET_ROW2 Row)
LPRECOGNIZEDATATABLE WINAPI nmapi.GetFrameRecognizeData(_In_ HFRAME hFrame)
HRESULT None windowscodecs.IWICBitmapLock_GetStride_Proxy(_In_ IWICBitmapLock *THIS_PTR,_Out_ UINT *pcbStride)
public void None.WriteLine(double value None)
HRESULT None mfplat.MFCreateMediaBufferWrapper(_In_ IMFMediaBuffer *pBuffer,_In_ DWORD cbOffset,_In_ DWORD dwLength,_Out_ IMFMediaBuffer **ppBuffer)
HRESULT None None.get_CanZoom([out None None,retval] BOOL *pRetVal)
HRESULT None ole32.OleRegEnumVerbs(_In_ REFCLSID clsid,_Out_ LPENUMOLEVERB *ppenum)
LONG TSPIAPI None.TSPI_lineSetCallTreatment(DRV_REQUESTID dwRequestID None,HDRVCALL hdCall None,DWORD dwTreatment None)
LSTATUS None shlwapi.SHRegEnumUSKey(_In_ HUSKEY hUSKey,_In_ DWORD dwIndex,_Out_ LPTSTR pszName,_Inout_ LPDWORD pcchName,_In_ SHREGENUM_FLAGS enumRegFlags)
LSTATUS None shlwapi.SHRegEnumUSKeyW(_In_ HUSKEY hUSKey,_In_ DWORD dwIndex,_Out_ LPTSTR pszName,_Inout_ LPDWORD pcchName,_In_ SHREGENUM_FLAGS enumRegFlags)
LSTATUS None shlwapi.SHRegEnumUSKeyA(_In_ HUSKEY hUSKey,_In_ DWORD dwIndex,_Out_ LPTSTR pszName,_Inout_ LPDWORD pcchName,_In_ SHREGENUM_FLAGS enumRegFlags)
HRESULT None shell32.SHCreateShellItem(_In_opt_ PCIDLIST_ABSOLUTE pidlParent,_In_opt_ IShellFolder *psfParent,_In_ PCUITEMID_CHILD pidl,_Out_ IShellItem **ppsi)
DWORD None iphlpapi.SendARP(_In_ IPAddr DestIP,_In_ IPAddr SrcIP,_Out_ PULONG pMacAddr,_Inout_ PULONG PhyAddrLen)
private void None.On_Inserting(Object sender None,SqlDataSourceCommandEventArgs e None)
BOOL WINAPI advapi32.DuplicateToken(_In_ HANDLE ExistingTokenHandle,_In_ SECURITY_IMPERSONATION_LEVEL ImpersonationLevel,_Out_ PHANDLE DuplicateTokenHandle)
uint32 None cimwin32.SetIPXFrameTypeNetworkPairs([in] string IPXNetworkNumber[],[in] uint32 IPXFrameType[])
HRESULT None None.get_item(long index None,IXMLDOMNode **listItem None)
HRESULT None None.GetWatcher(FEEDS_EVENTS_SCOPE scope None,FEEDS_EVENTS_MASK mask None,REFIID riid None,void **ppv None)
PCCERT_CONTEXT WINAPI wintrust.WTHelperCertFindIssuerCertificate(_In_ PCCERT_CONTEXT pChildContext,_In_ DWORD chStores,_In_ HCERTSTORE *pahStores,_In_ FILETIME *psftVerifyAsOf,_In_ DWORD dwEncoding,_Out_opt_ DWORD *pdwConfidence,_Out_ DWORD *dwError)
PTSTR None shlwapi.StrChrI(_In_ PTSTR pszStart,TCHAR wMatch None)
PTSTR None shlwapi.StrChrIW(_In_ PTSTR pszStart,TCHAR wMatch None)
PTSTR None shlwapi.StrChrIA(_In_ PTSTR pszStart,TCHAR wMatch None)
VOID None None.PropSheet_UnChanged(HWND hPropSheetDlg None,HWND hwndPage None)
public void None.Repeat(ListMakerList lml None)
INT None ws2_32.WSASetService(_In_ LPWSAQUERYSET lpqsRegInfo,_In_ WSAESETSERVICEOP essOperation,_In_ DWORD dwControlFlags)
INT None ws2_32.WSASetServiceW(_In_ LPWSAQUERYSET lpqsRegInfo,_In_ WSAESETSERVICEOP essOperation,_In_ DWORD dwControlFlags)
INT None ws2_32.WSASetServiceA(_In_ LPWSAQUERYSET lpqsRegInfo,_In_ WSAESETSERVICEOP essOperation,_In_ DWORD dwControlFlags)
DWORD None winhttp.WinHttpResetAutoProxy(_In_ HINTERNET hSession,_In_ DWORD dwFlags)
HRESULT None None.GetBackupOptions([out] BSTR *pbstrBackupOptions)
uint32 None ramgmtpsprovider.New([in] string TenantID,[in] string GatewayAddress[],[out] VpnSstpProxyRule cmdletOutput)
NTSTATUS None None.SpAddCredentials(_In_ LSA_SEC_HANDLE CredentialHandle,_In_ PUNICODE_STRING PrincipalName,_In_ PUNICODE_STRING Package,_In_ ULONG CredentialUseFlags,_In_ PVOID AuthorizationData,_In_ PVOID GetKeyFunction,_In_ PVOID GetKeyArgument,_Out_ PTimeStamp ExpirationTime)
boolean None None.SetRootNamespace(String rootNamespace None)
HIMAGELIST None None.TreeView_CreateDragImage(HWND hwndTV None,HTREEITEM hitem None)
BOOL WINAPI dbghelp.SymRegisterFunctionEntryCallback64(_In_ HANDLE hProcess,_In_ PSYMBOL_FUNCENTRY_CALLBACK64 CallbackFunction,_In_ ULONG64 UserContext)
HRESULT None None.get_input(VARIANT * pVar)
HRESULT None wsdapi.GetTransportAddress([out] LPCWSTR *ppszAddress)
BOOL CALLBACK None.MprAdminAcceptNewConnection2(_In_ RAS_CONNECTION_0 *pRasConnection0,_In_ RAS_CONNECTION_1 *pRasConnection1,_In_ RAS_CONNECTION_2 *pRasConnection2)
public void None.OnUnload(EventArgs e None)
HRESULT None None.GetCurrentTexturePalette([out None None,retval] UINT *pPaletteNumber)
LONG WINAPI tapi32.lineSwapHold(HCALL hActiveCall None,HCALL hHeldCall None)
LPAPI_VERSION WINAPI dbghelp.ImagehlpApiVersionEx(_In_ LPAPI_VERSION AppVersion)
MMRESULT None winmm.joyGetThreshold(UINT uJoyID None,LPUINT puThreshold None)
MI_INLINE MI_Result None.MI_Operation_Close(_Inout_ MI_Operation *operation)
DWORD None npptools.SetNetworkInfoInBlob(_In_ HBLOB hBlob,_In_ LPNETWORKINFO lpNetworkInfo)
uint32 None wvrcimprov.WvrGetUserAccess([out] MSFT_WvrUser Output[])
HRESULT None d2d1.GetBounds([out] D2D1_RECT_F *bounds)
HRESULT None None.GetProhibitedCaretStopCount([out None None,retval] UINT32 *prohibitedCaretStopCount)
NTSTATUS None None.WdfDeviceAssignS0IdleSettings(_In_ WDFDEVICE Device,_In_ PWDF_DEVICE_POWER_POLICY_IDLE_SETTINGS Settings)
LONG TSPIAPI None.TSPI_lineCloseMSPInstance(HDRVMSPLINE hdMSPLine None)
HRESULT WINOLEAPI None.CoSetMessageDispatcher(_In_opt_ *pMessageDispatcher None)
SHORT None propsys.PropVariantToInt16WithDefault(_In_ REFPROPVARIANT propvarIn,_In_ SHORT iDefault)
HFRAME WINAPI nmapi.ModifyFrame(_In_ HCAPTURE hCapture,_In_ DWORD FrameNumber,_In_ LPBYTE FrameData,_In_ DWORD FrameLength,_Out_ __int64 TimeStamp)
public Point None.PointFromScreen(Point point None)
HRESULT None None.AllocIWMSPacketList(REFIID riid None,void** ppunk None)
DWORD WINAPI None.OnlineV2(_In_ RESID Resource,_Out_ LPHANDLE EventHandle,_In_ DWORD OnlineFlags,_In_opt_ PBYTE InBuffer,_In_ DWORD InBufferSize,_In_ DWORD Reserved)
NET_API_STATUS None netapi32.NetGroupGetUsers(_In_ LPCWSTR servername,_In_ LPCWSTR groupname,_In_ DWORD level,_Out_ LPBYTE *bufptr,_In_ DWORD prefmaxlen,_Out_ LPDWORD entriesread,_Out_ LPDWORD totalentries,_Inout_ PDWORD_PTR ResumeHandle)
HRESULT WINAPI mssign32.SignerSign(_In_ SIGNER_SUBJECT_INFO *pSubjectInfo,_In_ SIGNER_CERT *pSignerCert,_In_ SIGNER_SIGNATURE_INFO *pSignatureInfo,_In_opt_ SIGNER_PROVIDER_INFO *pProviderInfo,_In_opt_ LPCWSTR pwszHttpTimeStamp,_In_opt_ PCRYPT_ATTRIBUTES psRequest,_In_opt_ LPVOID pSipData)
VOID None None.PropSheet_SetFinishText(HWND hPropSheetDlg None,LPTSTR lpszText None)
VOID None None.PropSheet_SetTitle(HWND hPropSheetDlg None,DWORD dwStyle None,LPTSTR lpszText None)
HRESULT None mfplat.MFCreateDXGIDeviceManager(_Out_ UINT *pResetToken,_Out_ IMFDXGIDeviceManager **ppDXVAManager)
BOOL WINAPI clusapi.CloseClusterGroupSet(_In_ HGROUPSET hGroupSet)
DWORD WINAPI clusapi.ClusterCloseEnumEx(_In_ HCLUSENUMEX hClusterEnum)
DWORD WINAPI wlanapi.WFDOpenLegacySession(HANDLE hClientHandle None,PDOT11_MAC_ADDRESS pLegacyMacAddress None,HANDLE phSessionHandle None,GUID pGuidSessionInterface None)
public boolean None.Equals(Object obj None)
SByte None None.ToSByte(IFormatProvider provider None)
HRESULT None None.get_CPUUtilizationDuringConnection(long* pVal None)
HRESULT None shell32.SHGetDriveMedia(_In_ PCWSTR pszDrive,_Out_ DWORD *pdwMediaContent)
protected void None.OnRowDeleting(DataRowChangeEventArgs e None)
HRESULT None None.StringCchCatEx(_Inout_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCchCatExW(_Inout_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCchCatExA(_Inout_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
HRESULT None None.get_length(long *listLength None)
BOOL WINAPI dbghelp.SymInitialize(_In_ HANDLE hProcess,_In_opt_ PCTSTR UserSearchPath,_In_ BOOL fInvadeProcess)
BOOL WINAPI dbghelp.SymInitializeW(_In_ HANDLE hProcess,_In_opt_ PCTSTR UserSearchPath,_In_ BOOL fInvadeProcess)
BOOL WINAPI dbghelp.SymInitialize(_In_ HANDLE hProcess,_In_opt_ PCTSTR UserSearchPath,_In_ BOOL fInvadeProcess)
int None None.OpenMyQueue(LPWSTR wszPathName None,DWORD dwAccess None,DWORD dwShareMode None,QUEUEHANDLE *phQueue None)
PTCHAR WINAPI dbghelp.SymGetHomeDirectory(_In_ DWORD type,_Out_ PTSTR dir,_In_ size_t size)
PTCHAR WINAPI dbghelp.SymGetHomeDirectoryW(_In_ DWORD type,_Out_ PTSTR dir,_In_ size_t size)
PTCHAR WINAPI dbghelp.SymGetHomeDirectory(_In_ DWORD type,_Out_ PTSTR dir,_In_ size_t size)
protected void None.OnNavigating(NavigatingCancelEventArgs e None)
HRESULT None None.get_DestinationMulticastIPAddress(BSTR* pbstrMulticastIpAddress None)
BOOL WINAPI dbghelp.SymGetSymFromAddr64(_In_ HANDLE hProcess,_In_ DWORD64 Address,_Out_opt_ PDWORD64 Displacement,_Inout_ PIMAGEHLP_SYMBOL64 Symbol)
NTSTATUS None None.AllocateClientBuffer(_In_ PLSA_CLIENT_REQUEST ClientRequest,_In_ ULONG LengthRequired,_Out_ PVOID *ClientBaseAddress)
RIO_CQ None mswsock.RIOCreateCompletionQueue(_In_ DWORD QueueSize,_In_opt_ RIO_NOTIFICATION_COMPLETION NotificationCompletion)
HRESULT None propsys.InitPropVariantFromUInt32(_In_ ULONG ulVal,_Out_ PROPVARIANT *ppropvar)
HRESULT None None.ExportXML(BSTR bstrXMLFileName None)
PVOID WINAPI dbghelp.ImageDirectoryEntryToData(_In_ PVOID Base,_In_ BOOLEAN MappedAsImage,_In_ USHORT DirectoryEntry,_Out_ PULONG Size)
ULONG None advapi32.PerfDecrementULongLongCounterValue(_In_ HANDLE hProvider,_In_ PPERF_COUNTERSET_INSTANCE pInstance,_In_ ULONG CounterId,_In_ ULONGLONG llValue)
HRESULT None windowscodecs.IWICComponentInfo_GetAuthor_Proxy(_In_ IWICComponentInfo *THIS_PTR,_In_ UINT cchAuthor,_Inout_ WCHAR *wzAuthor,_Out_ UINT *pcchActual)
ULONG None sechost.ControlTrace(_In_ TRACEHANDLE SessionHandle,_In_ LPCTSTR SessionName,_Inout_ PEVENT_TRACE_PROPERTIES Properties,_In_ ULONG ControlCode)
ULONG None sechost.ControlTraceW(_In_ TRACEHANDLE SessionHandle,_In_ LPCTSTR SessionName,_Inout_ PEVENT_TRACE_PROPERTIES Properties,_In_ ULONG ControlCode)
ULONG None sechost.ControlTraceA(_In_ TRACEHANDLE SessionHandle,_In_ LPCTSTR SessionName,_Inout_ PEVENT_TRACE_PROPERTIES Properties,_In_ ULONG ControlCode)
ULPFRAME WINAPI nmapi.GetFrameFromFrameHandle(_In_ HFRAME hFrame)
BOOL WINAPI user32.ShutdownBlockReasonQuery(_In_ HWND hWnd,_Out_opt_ LPWSTR pwszBuff,_Inout_ DWORD *pcchBuff)
private void None.MenuSelected(Object sender None,System.EventArgs e None)
HRESULT None None.GetStreamWithoutValidation([out None None,retval] IStream **stream)
PDH_STATUS None pdh.PdhCollectQueryData(_Inout_ PDH_HQUERY hQuery)
HRESULT None None.setRequestHeader(BSTR bstrHeader None,BSTR bstrValue None)
NET_API_STATUS None netapi32.NetRemoteTOD(_In_ LPCWSTR UncServerName,_Out_ LPBYTE *BufferPtr)
HRESULT None oleaut32.VarR4FromI4(_In_ LONG lIn,_Out_ FLOAT *pfltOut)
UINT None msi.MsiEnumPatchesEx(_In_opt_ LPCTSTR szProductCode,_In_opt_ LPCTSTR szUserSid,_In_ DWORD dwContext,_In_ DWORD dwFilter,_In_ DWORD dwIndex,_Out_opt_ TCHAR szPatchCode[39],_Out_opt_ TCHAR szTargetProductCode[39],_Out_opt_ MSIINSTALLCONTEXT *pdwTargetProductContext,_Out_opt_ LPTSTR szTargetUserSid,_Inout_opt_ LPDWORD pcchTargetUserSid)
UINT None msi.MsiEnumPatchesExW(_In_opt_ LPCTSTR szProductCode,_In_opt_ LPCTSTR szUserSid,_In_ DWORD dwContext,_In_ DWORD dwFilter,_In_ DWORD dwIndex,_Out_opt_ TCHAR szPatchCode[39],_Out_opt_ TCHAR szTargetProductCode[39],_Out_opt_ MSIINSTALLCONTEXT *pdwTargetProductContext,_Out_opt_ LPTSTR szTargetUserSid,_Inout_opt_ LPDWORD pcchTargetUserSid)
UINT None msi.MsiEnumPatchesExA(_In_opt_ LPCTSTR szProductCode,_In_opt_ LPCTSTR szUserSid,_In_ DWORD dwContext,_In_ DWORD dwFilter,_In_ DWORD dwIndex,_Out_opt_ TCHAR szPatchCode[39],_Out_opt_ TCHAR szTargetProductCode[39],_Out_opt_ MSIINSTALLCONTEXT *pdwTargetProductContext,_Out_opt_ LPTSTR szTargetUserSid,_Inout_opt_ LPDWORD pcchTargetUserSid)
BOOL WINAPI advapi32.InitializeAcl(_Out_ PACL pAcl,_In_ DWORD nAclLength,_In_ DWORD dwAclRevision)
SECURITY_STATUS SEC_Entry secur32.QuerySecurityPackageInfo(_In_ SEC_CHAR *pszPackageName,_Out_ PSecPkgInfo *ppPackageInfo)
SECURITY_STATUS SEC_Entry secur32.QuerySecurityPackageInfoW(_In_ SEC_CHAR *pszPackageName,_Out_ PSecPkgInfo *ppPackageInfo)
SECURITY_STATUS SEC_Entry secur32.QuerySecurityPackageInfoA(_In_ SEC_CHAR *pszPackageName,_Out_ PSecPkgInfo *ppPackageInfo)
protected void None.CloneCurrentValueCore(Freezable sourceFreezable None)
BOOL WINAPI advapi32.AddMandatoryAce(_Inout_ PACL pAcl,_In_ DWORD dwAceRevision,_In_ DWORD AceFlags,_In_ DWORD MandatoryPolicy,_In_ PSID pLabelSid)
HRESULT None oleaut32.VarR4FromUI1(_In_ BYTE bIn,_Out_ FLOAT *pfltOut)
BOOL None None.EnumPrintProcessorDatatypes(_In_ LPTSTR pName,_In_ LPTSTR pPrintProcessorName,_In_ DWORD Level,_Out_ LPBYTE pDatatypes,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded,_Out_ LPDWORD pcReturned)
BOOL None None.EnumPrintProcessorDatatypesW(_In_ LPTSTR pName,_In_ LPTSTR pPrintProcessorName,_In_ DWORD Level,_Out_ LPBYTE pDatatypes,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded,_Out_ LPDWORD pcReturned)
BOOL None None.EnumPrintProcessorDatatypesA(_In_ LPTSTR pName,_In_ LPTSTR pPrintProcessorName,_In_ DWORD Level,_Out_ LPBYTE pDatatypes,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded,_Out_ LPDWORD pcReturned)
NTSTATUS None None.WdfRequestCreateFromIrp(_In_opt_ PWDF_OBJECT_ATTRIBUTES RequestAttributes,_In_ PIRP Irp,_In_ BOOLEAN RequestFreesIrp,_Out_ WDFREQUEST *Request)
HRESULT None certenroll.get_UserSamName([out] BSTR *pValue)
HRESULT None None.createTextNode(BSTR data None,IXMLDOMText **text None)
midl_pragma None None.warning(warning_option : message_list)
UINT WINAPI shcore.GetDpiForShellUiComponent(_In_ SHELL_UI_COMPONENT component)
public ConsumerConnectionPointCollection None.GetConsumerConnectionPoints(WebPart webPart None)
DWORD WINAPI wlanapi.WlanCloseHandle(_In_ HANDLE hClientHandle,_Reserved_ PVOID pReserved)
DNS_STATUS WINAPI dnsapi.DnsQueryEx(_In_ PDNS_QUERY_REQUEST pQueryRequest,_Inout_ PDNS_QUERY_RESULT pQueryResults,_Inout_opt_ PDNS_QUERY_CANCEL pCancelHandle)
ULONGLONG None propsys.PropVariantToUInt64WithDefault(_In_ REFPROPVARIANT propvarIn,_In_ ULONGLONG ullDefault)
BOOL WINAPI clusapi.CloseCluster(_In_ HCLUSTER hCluster)
NETIOAPI_API None iphlpapi.GetUnicastIpAddressTable(_In_ ADDRESS_FAMILY Family,_Out_ PMIB_UNICASTIPADDRESS_TABLE *Table)
LSTATUS None shlwapi.SHDeleteValue(HKEY hkey None,LPCTSTR pszSubKey None,LPCTSTR pszValue None)
LSTATUS None shlwapi.SHDeleteValueW(HKEY hkey None,LPCTSTR pszSubKey None,LPCTSTR pszValue None)
LSTATUS None shlwapi.SHDeleteValueA(HKEY hkey None,LPCTSTR pszSubKey None,LPCTSTR pszValue None)
BOOL WINAPI dbghelp.SymGetSymPrev64(_In_ HANDLE hProcess,_Inout_ PIMAGEHLP_SYMBOL64 Symbol)
HRESULT None propsys.VariantGetUInt64Elem(_In_ REFVARIANT var,_In_ ULONG iElem,_Out_ ULONGLONG *pnVal)
uint32 None wvrcimprov.ClearMetadataForReplicationGroup([in] string ComputerName,[in] string Name,[in] boolean Logs,[in] boolean Partition,[in] boolean NoRestart)
private void None.myButtonPrint_OnClick(Object sender None,System.EventArgs e None)
private void None.Page_Load(Object sender None,System.EventArgs e None)
CLIENT_CALL_RETURN None rpcrt4.NdrAsyncClientCall(_In_ PMIDL_STUB_DESC pStubDescriptor,_In_ PFORMAT_STRING pFormat,_Inout_ ... None)
MI_INLINE MI_Result None.MI_Operation_Cancel(_Inout_ MI_Operation *operation,MI_CancellationReason reason None)
WORD WINAPI ntdll.RtlQueryDepthSList(_In_ PSLIST_HEADER ListHead)
HRESULT None None.ComputeStateBlockMask(D3DX11_STATE_BLOCK_MASK *pStateBlockMask None)
uint32 None wvrcimprov.WvrSetPrimaryReplicationGroup([in] string ReplicationGroupName,[in] string SecondaryReplicationGroupName[],[in] string SecondaryReplicationGroupId[],[in] string SecondaryComputerName[],[in] boolean Force)
protected void None.LoadViewState(Object savedState None)
LONG WINAPI tapi32.lineGetTranslateCaps(HLINEAPP hLineApp None,DWORD dwAPIVersion None,LPLINETRANSLATECAPS lpTranslateCaps None)
LONG WINAPI tapi32.lineGetTranslateCapsW(HLINEAPP hLineApp None,DWORD dwAPIVersion None,LPLINETRANSLATECAPS lpTranslateCaps None)
LONG WINAPI tapi32.lineGetTranslateCapsA(HLINEAPP hLineApp None,DWORD dwAPIVersion None,LPLINETRANSLATECAPS lpTranslateCaps None)
POWER_PLATFORM_ROLE WINAPI powrprof.PowerDeterminePlatformRoleEx(_In_ ULONG Version)
HRESULT None None.GetDeviceIcon([out] ULONG *hIcon)
LONG TSPIAPI None.TSPI_lineAddToConference(DRV_REQUESTID dwRequestID None,HDRVCALL hdConfCall None,HDRVCALL hdConsultCall None)
DWORD WINAPI powrprof.PowerSettingRegisterNotification(_In_ LPCGUID SettingGuid,_In_ DWORD Flags,_In_ HANDLE Recipient,_Out_ PHPOWERNOTIFY RegistrationHandle)
PSLIST_ENTRY WINAPI kernel32.InterlockedPopEntrySList(_Inout_ PSLIST_HEADER ListHead)
private void None.MenuSelected(Object sender None,System.EventArgs e None)
HRESULT None mfplat.MFCreateMFByteStreamOnStream(_In_ IStream *pStream,_Out_ IMFByteStream **ppByteStream)
protected boolean None.FreezeCore(boolean isChecking None)
protected Geometry None.GetLayoutClip(Size layoutSlotSize None)
HRESULT WDSCLIAPI wdsclientapi.WdsCliRegisterTrace(_In_opt_ PFN_WdsCliTraceFunction pfn)
DWORD WINAPI None.ResourceControl(_In_ RESID Resource,_In_ DWORD ControlCode,_In_opt_ PVOID InBuffer,_In_ DWORD InBufferSize,_Out_opt_ PVOID OutBuffer,_In_ DWORD OutBufferSize,_Out_ LPDWORD BytesReturned)
uint32 None cimwin32.SetArpUseEtherSNAP([in] boolean ArpUseEtherSNAP)
HRESULT WINAPI wsdapi.WSDXMLCleanupElement(_In_ WSDXML_ELEMENT *pAny)
public void None.DrawString(String s None,Font font None,Brush brush None,PointF point None,StringFormat format None)
HRESULT None propsys.InitPropVariantFromPropVariantVectorElem(_In_ REFPROPVARIANT propvarIn,_In_ ULONG iElem,_Out_ PROPVARIANT *ppropvar)
NTSTATUS WINAPI bcrypt.BCryptConfigureContextFunction(_In_ ULONG dwTable,_In_ LPCWSTR pszContext,_In_ ULONG dwInterface,_In_ LPCWSTR pszFunction,_In_ PCRYPT_CONTEXT_FUNCTION_CONFIG pConfig)
HRESULT None None.GetState([out] MFP_MEDIAPLAYER_STATE *peState)
NETIOAPI_API None iphlpapi.GetTeredoPort(_Out_ USHORT *Port)
HRESULT None shell32.SHDoDragDrop(_In_ HWND hwnd,_In_ IDataObject *pdtobj,_In_ IDropSource *pdsrc,_In_ DWORD dwEffect,_Out_ DWORD *pdwEffect)
NET_API_STATUS None netapi32.NetGetAnyDCName(_In_ LPCWSTR servername,_In_ LPCWSTR domainname,_Out_ LPBYTE *bufptr)
DWORD64 WINAPI dbghelp.SymGetModuleBase64(_In_ HANDLE hProcess,_In_ DWORD64 dwAddr)
BOOL WINAPI authz.AuthzModifyClaims(_In_ AUTHZ_CLIENT_CONTEXT_HANDLE hAuthzClientContext,_In_ AUTHZ_CONTEXT_INFORMATION_CLASS ClaimClass,_In_ PAUTHZ_SECURITY_ATTRIBUTE_OPERATION pClaimOperations,_In_opt_ PAUTHZ_SECURITY_ATTRIBUTES_INFORMATION pClaims)
HRESULT None dwrite.CreateGlyphRunAnalysis(IDWriteFontFace *pFontFace None,IDWriteGlyphRunAnalysis **ppGlyphRunAnalysis None)
NETIOAPI_API None iphlpapi.GetIpInterfaceTable(_In_ ADDRESS_FAMILY Family,_Out_ PMIB_IPINTERFACE_TABLE *Table)
HRESULT None mshtml.SetModes(INT32 iModes None)
WDF_IO_TARGET_STATE None None.WdfIoTargetGetState(_In_ WDFIOTARGET IoTarget)
LONG WINAPI advapi32.RegGetValue(_In_ HKEY hkey,_In_opt_ LPCTSTR lpSubKey,_In_opt_ LPCTSTR lpValue,_In_opt_ DWORD dwFlags,_Out_opt_ LPDWORD pdwType,_Out_opt_ PVOID pvData,_Inout_opt_ LPDWORD pcbData)
LONG WINAPI advapi32.RegGetValueW(_In_ HKEY hkey,_In_opt_ LPCTSTR lpSubKey,_In_opt_ LPCTSTR lpValue,_In_opt_ DWORD dwFlags,_Out_opt_ LPDWORD pdwType,_Out_opt_ PVOID pvData,_Inout_opt_ LPDWORD pcbData)
LONG WINAPI advapi32.RegGetValueA(_In_ HKEY hkey,_In_opt_ LPCTSTR lpSubKey,_In_opt_ LPCTSTR lpValue,_In_opt_ DWORD dwFlags,_Out_opt_ LPDWORD pdwType,_Out_opt_ PVOID pvData,_Inout_opt_ LPDWORD pcbData)
ULONG WINAPI advapi32.PerfQueryCounterSetRegistrationInfo(_In_opt_ LPCWSTR szMachine,_In_ LPCGUID pCounterSetId,PerfRegInfoType requestCode None,DWORD requestLangId None,_Out_opt_ LPBYTE pbRegInfo,DWORD cbRegInfo None,_Out_ LPDWORD pcbRegInfoActual)
HRESULT None None.LongMult(_In_ LONG lMultiplicand,_In_ LONG lMultiplier,_Out_ LONG *plResult)
HRESULT WINAPI webservices.WsRemoveHeader(_In_ WS_MESSAGE *message,_In_ WS_HEADER_TYPE headerType,_In_opt_ WS_ERROR* *error)
DWORD None kernel32.GetActiveProcessorCount(_In_ WORD GroupNumber)
uint32 None wvrcimprov.WvrDeleteReplicationGroup([in] string ReplicationGroupName,[in] boolean FullCleanup)
BOOL WINAPI user32.TrackMouseEvent(_Inout_ LPTRACKMOUSEEVENT lpEventTrack)
uint32 None smiscsitargetprov.CloseConformantInstances([in] string EnumerationContext)
HRESULT None windowscodecs.IWICBitmapFrameDecode_GetMetadataQueryReader_Proxy(_In_ IWICBitmapFrameDecode *THIS_PTR,_Out_ IWICMetadataQueryReader **ppIMetadataQueryReader)
HRESULT None None.ILLoadFromStreamEx(_In_ IStream *pstm,_Out_ PIDLIST_ABSOLUTE *ppidl)
LONG WINAPI tapi32.lineGetAppPriority(LPCSTR lpszAppFilename None,DWORD dwMediaMode None,LPLINEEXTENSIONID lpExtensionID None,DWORD dwRequestMode None,LPVARSTRING lpExtensionName None,LPDWORD lpdwPriority None)
LONG WINAPI tapi32.lineGetAppPriorityW(LPCSTR lpszAppFilename None,DWORD dwMediaMode None,LPLINEEXTENSIONID lpExtensionID None,DWORD dwRequestMode None,LPVARSTRING lpExtensionName None,LPDWORD lpdwPriority None)
LONG WINAPI tapi32.lineGetAppPriorityA(LPCSTR lpszAppFilename None,DWORD dwMediaMode None,LPLINEEXTENSIONID lpExtensionID None,DWORD dwRequestMode None,LPVARSTRING lpExtensionName None,LPDWORD lpdwPriority None)
BOOL WINAPI winhttp.WinHttpReceiveResponse(_In_ HINTERNET hRequest,_Reserved_ LPVOID lpReserved)
public boolean None.IsAncestorOf(DependencyObject descendant None)
NTSTATUS NTAPI secur32.LsaGetLogonSessionData(_In_ PLUID LogonId,_Out_ PSECURITY_LOGON_SESSION_DATA *ppLogonSessionData)
HRESULT WINAPI d3dcompiler_47.D3DWriteBlobToFile(in ID3DBlob pBlob,in LPCWSTR pFileName,in BOOL bOverwrite)
BOOL WINAPI clusapi.CloseClusterGroup(_In_ HGROUP hGroup)
PITEMID_CHILD None shell32.ILCloneFirst(_In_ PCUIDLIST_RELATIVE pidl)
LRESULT CALLBACK None.WndProc(HWND hWnd None,UINT uMessage None,WPARAM wParam None,LPARAM lParam None)
DWORD WINAPI powrprof.DevicePowerSetDeviceState(_In_ LPCWSTR DeviceDescription,_In_ ULONG SetFlags,_In_ PCVOID SetData)
HRESULT None mf.MFCreateTopologyNode(_In_ MF_TOPOLOGY_TYPE NodeType,_Out_ IMFTopologyNode **ppNode)
ULONG None mswsock.RIODequeueCompletion(_In_ RIO_CQ CQ,_Out_ PRIORESULT Array,_In_ ULONG ArraySize)
DWORD WINAPI clusapi.IsFileOnClusterSharedVolume(_In_ LPCWSTR lpszPathName,_Out_ PBOOL pbFileIsOnSharedVolume)
DWORD WINAPI wlanapi.WlanOpenHandle(_In_ DWORD dwClientVersion,_Reserved_ PVOID pReserved,_Out_ PDWORD pdwNegotiatedVersion,_Out_ PHANDLE phClientHandle)
HRESULT None oleaut32.VarUI4FromR8(_In_ DOUBLE dblIn,_Out_ ULONG *pulOut)
ULONG None wldap32.ldap_simple_bind(_In_ LDAP *ld,_In_ PCHAR dn,_In_ PCHAR passwd)
ULONG None wldap32.ldap_simple_bindW(_In_ LDAP *ld,_In_ PCHAR dn,_In_ PCHAR passwd)
ULONG None wldap32.ldap_simple_bindA(_In_ LDAP *ld,_In_ PCHAR dn,_In_ PCHAR passwd)
HRESULT None oleaut32.VarUI1FromUI2(_In_ USHORT uiIn,_Out_ BYTE *pbOut)
HRESULT None None.GetIObjectControl([out] IObjectControl **pCtrl)
ULONG None wldap32.ldap_ufn2dn(_In_ PCHAR ufn,_Out_ PCHAR *pDn)
ULONG None wldap32.ldap_ufn2dnW(_In_ PCHAR ufn,_Out_ PCHAR *pDn)
ULONG None wldap32.ldap_ufn2dnA(_In_ PCHAR ufn,_Out_ PCHAR *pDn)
BOOL WINAPI advapi32.AddAccessAllowedAce(_Inout_ PACL pAcl,_In_ DWORD dwAceRevision,_In_ DWORD AccessMask,_In_ PSID pSid)
HRESULT None None.put_AllowStreamSplitting(VARIANT_BOOL newVal None)
HRESULT None shell32.SHBindToParent(_In_ PCIDLIST_ABSOLUTE pidl,_In_ REFIID riid,_Out_ VOID **ppv,_Out_ PCUITEMID_CHILD *ppidlLast)
HRESULT None None.get_responseText(BSTR* pbstrBody None)
PWSTR None shell32.StrStrNW(_In_ PWSTR pszFirst,_In_ PCWSTR pszSrch,UINT cchMax None)
HRESULT None propsys.PropVariantToFileTimeVector(_In_ REFPROPVARIANT propvar,_Out_ FILETIME *prgft,_In_ ULONG crgft,_Out_ ULONG *pcElem)
HRESULT None pla.put_Age(ULONG ulAge None)
BOOL WINAPI clusapi.CloseClusterNotifyPort(_In_ HCHANGE hChange)
BOOL IMAGEAPI dbghelp.SymEnumSymbolsEx(_In_ HANDLE hProcess,_In_ ULONG64 BaseOfDll,_In_opt_ PCTSTR Mask,_In_ PSYM_ENUMERATESYMBOLS_CALLBACK EnumSymbolsCallback,_In_opt_ PVOID UserContext,_In_ DWORD Options)
BOOL IMAGEAPI dbghelp.SymEnumSymbolsExW(_In_ HANDLE hProcess,_In_ ULONG64 BaseOfDll,_In_opt_ PCTSTR Mask,_In_ PSYM_ENUMERATESYMBOLS_CALLBACK EnumSymbolsCallback,_In_opt_ PVOID UserContext,_In_ DWORD Options)
BOOL IMAGEAPI dbghelp.SymEnumSymbolsEx(_In_ HANDLE hProcess,_In_ ULONG64 BaseOfDll,_In_opt_ PCTSTR Mask,_In_ PSYM_ENUMERATESYMBOLS_CALLBACK EnumSymbolsCallback,_In_opt_ PVOID UserContext,_In_ DWORD Options)
RPC_STATUS None rpcrt4.RpcSsContextLockShared(_In_ RPC_BINDING_HANDLE ServerBindingHandle,_In_ PVOID UserContext)
DOUBLE None propsys.PropVariantToDoubleWithDefault(_In_ REFPROPVARIANT propvarIn,_In_ DOUBLE dblDefault)
PIMAGE_DEBUG_INFORMATION WINAPI dbghelp.MapDebugInformation(_In_opt_ HANDLE FileHandle,_In_ PCSTR FileName,_In_opt_ PCSTR SymbolPath,_In_ ULONG ImageBase)
HRESULT None None.GetBackupMetadata([out] BSTR *pbstrMetadata)
HRESULT None windowscodecs.GetWhitePointRGB([out] UINT *pRed,[out] UINT *pGreen,[out] UINT *pBlue)
COLORREF None None.TreeView_SetBkColor(HWND hwndTV None,COLORREF clrBk None)
DWORD IMAGEAPI dbghelp.SymAddrIncludeInlineTrace(_In_ HANDLE hProcess,_In_ DWORD64 Address)
HRESULT None None.GetInclusionList([out] GUID **ppGuids,[out] DWORD *pcGuids)
HRESULT None None.get_CacheDownloads(long* pVal None)
HRESULT None windowscodecs.IWICBitmapEncoder_GetEncoderInfo_Proxy(_In_ IWICBitmapEncoder *THIS_PTR,_Out_ IWICBitmapEncoderInfo **ppIEncoderInfo)
HRESULT None propsys.VariantToBoolean(_In_ REFVARIANT varIn,_Out_ BOOL *pfRet)
HRESULT None windowscodecs.IWICComponentInfo_GetCLSID_Proxy(_In_ IWICComponentInfo *THIS_PTR,_Out_ CLSID *pclsid)
HRESULT None None.SSIZETAdd(_In_ SSIZE_T Augend,_In_ SSIZE_T Addend,_Out_ SSIZE_T *pResult)
HRESULT None windowscodecs.IWICBitmapSource_GetSize_Proxy(_In_ IWICBitmapSource *THIS_PTR,_Out_ UINT *puiWidth,_Out_ UINT *puiHeight)
HRESULT None windowscodecs.IWICBitmapEncoder_Commit_Proxy(_In_ IWICBitmapEncoder *THIS_PTR)
DWORD None cryptdlg.GetFriendlyNameOfCert(_In_ PCCERT_CONTEXT pccert,_Out_ LPTSTR pchBuffer,_In_ DWORD cchBuffer)
DWORD None cryptdlg.GetFriendlyNameOfCertW(_In_ PCCERT_CONTEXT pccert,_Out_ LPTSTR pchBuffer,_In_ DWORD cchBuffer)
DWORD None cryptdlg.GetFriendlyNameOfCertA(_In_ PCCERT_CONTEXT pccert,_Out_ LPTSTR pchBuffer,_In_ DWORD cchBuffer)
function None None.ReceiveServerData(arg None None,context None None)
function None None.ReceiveServerData(arg None None,context None None)
HPOWERNOTIFY WINAPI user32.RegisterPowerSettingNotification(_In_ HANDLE hRecipient,_In_ LPCGUID PowerSettingGuid,_In_ DWORD Flags)
BOOL None None.ListView_GetUnicodeFormat(HWND hwnd None)
NET_API_STATUS None netapi32.NetServerGetInfo(_In_ LPWSTR servername,_In_ DWORD level,_Out_ LPBYTE *bufptr)
NET_API_STATUS None netapi32.NetValidateName(_In_ LPCWSTR lpServer,_In_ LPCWSTR lpName,_In_ LPCWSTR lpAccount,_In_ LPCWSTR lpPassword,_In_ NETSETUP_NAME_TYPE NameType)
LONG TSPIAPI None.TSPI_lineCompleteTransfer(DRV_REQUESTID dwRequestID None,HDRVCALL hdCall None,HDRVCALL hdConsultCall None,HTAPICALL htConfCall None,LPHDRVCALL lphdConfCall None,DWORD dwTransferMode None)
VOID None None.WdfUsbInterfaceGetDescriptor(_In_ WDFUSBINTERFACE UsbInterface,_In_ UCHAR SettingIndex,_Out_ PUSB_INTERFACE_DESCRIPTOR InterfaceDescriptor)
DWORD None None.ListView_GetItemSpacing(HWND hwnd None,BOOL fSmall None)
LONG TSPIAPI None.TSPI_phoneSetRing(DRV_REQUESTID dwRequestID None,HDRVPHONE hdPhone None,DWORD dwRingMode None,DWORD dwVolume None)
HRESULT None None.GetRootItem([out] IWiaItem2 **ppIWiaItem2)
HRESULT None mfplat.CreatePropertyStore(_Out_ IPropertyStore **ppStore)
HRESULT None mstask.GetNetScheduleAccountInformation(_In_ LPCWSTR pwszServerName,_In_ DWORD ccAccount,_Out_ WCHAR wszAccount[])
PCCRL_CONTEXT WINAPI crypt32.CertEnumCRLsInStore(_In_ HCERTSTORE hCertStore,_In_ PCCRL_CONTEXT pPrevCrlContext)
ULONG None wldap32.ldap_search_s(_In_ LDAP *ld,_In_ PCHAR base,_In_ ULONG scope,_In_ PCHAR filter,_In_ PCHAR attrs[],_In_ ULONG attrsonly,_Out_ LDAPMessage **res)
ULONG None wldap32.ldap_search_sW(_In_ LDAP *ld,_In_ PCHAR base,_In_ ULONG scope,_In_ PCHAR filter,_In_ PCHAR attrs[],_In_ ULONG attrsonly,_Out_ LDAPMessage **res)
ULONG None wldap32.ldap_search_sA(_In_ LDAP *ld,_In_ PCHAR base,_In_ ULONG scope,_In_ PCHAR filter,_In_ PCHAR attrs[],_In_ ULONG attrsonly,_Out_ LDAPMessage **res)
HRESULT None None.GetMediaItem([out] IMFPMediaItem **ppIMFPMediaItem)
BOOL None None.ListView_SetInsertMark(HWND hwnd None,PLVINSERTMARK plvim None)
ULONG WINAPI iphlpapi.GetAdaptersAddresses(_In_ ULONG Family,_In_ ULONG Flags,_In_ PVOID Reserved,_Inout_ PIP_ADAPTER_ADDRESSES AdapterAddresses,_Inout_ PULONG SizePointer)
HRESULT None None.get_url(BSTR *urlString None)
HRESULT None None.GetCredentialFlags([out] DWORD *lpdwFlags)
ULONG None wldap32.ldap_get_paged_count(_In_ PLDAP ExternalHandle,_In_ PLDAPSearch SearchBlock,_Out_ ULONG *TotalCount,_Out_ PLDAPMessage Results)
ULONG None wldap32.ldap_modify(_In_ LDAP *ld,_In_ PCHAR dn,_In_ LDAPMod *mods[])
ULONG None wldap32.ldap_modifyW(_In_ LDAP *ld,_In_ PCHAR dn,_In_ LDAPMod *mods[])
ULONG None wldap32.ldap_modifyA(_In_ LDAP *ld,_In_ PCHAR dn,_In_ LDAPMod *mods[])
HRESULT None d3d10_1.D3D10CreateDeviceAndSwapChain1(_In_ IDXGIAdapter *pAdapter,_In_ D3D10_DRIVER_TYPE DriverType,_In_ HMODULE Software,_In_ UINT Flags,_In_ D3D10_FEATURE_LEVEL1 HardwareLevel,_In_ UINT SDKVersion,_In_ DXGI_SWAP_CHAIN_DESC *pSwapChainDesc,_Out_ IDXGISwapChain **ppSwapChain,_Out_ ID3D10Device1 **ppDevice)
RPC_STATUS RPC_ENTRY rpcrt4.RpcServerTestCancel(RPC_BINDING_HANDLE BindingHandle None)
DWORD None iphlpapi.RestoreMediaSense(OVERLAPPED *pOverlapped None,LPDWORD lpdwEnableCount None)
uint32 None licwmi.SetProxySetting([in] string ProxyAddress,[in] string ProxyPortNumber)
public void None.Write(byte[] array None,int offset None,int count None)
private void None.button1_Click(Object sender None,System.EventArgs e None)
HRESULT None windowscodecs.IWICPalette_InitializePredefined_Proxy(_In_ IWICPalette *THIS_PTR,_In_ WICBitmapPaletteType ePaletteType,_In_ BOOL fAddTransparentColor)
DWORD WINAPI clusapi.GetNotifyEventHandle(_In_ HCHANGE hChange,_Out_ LPHANDLE lphTargetEvent)
unsigned int None._mbbtombc(unsigned int c)
NTSTATUS None None.WdfUsbTargetDeviceRetrieveConfigDescriptor(_In_ WDFUSBDEVICE UsbDevice,_Out_ PVOID ConfigDescriptor,_Inout_ PUSHORT ConfigDescriptorLength)
HRESULT None None.GetProperties(const ULONG cPropertyIDSets,const DBPROPIDSET rgPropertyIDSets[],ULONG *pcPropertySets None,DBPROPSET **prgPropertySets None)
DWORD None None.SetStringInBlob(HBLOB hBlob None,const char* pOwnerName,const char* pCategoryName,const char* pTagName,const char* pString)
HRESULT None shell32.GetAppInfo([out] APPINFODATA *pInfo)
HRESULT None ole32.CoFileTimeNow(_Out_ FILETIME *lpFileTime)
public TextPointerContext None.GetPointerContext(LogicalDirection direction None)
HRESULT None tapi3.EnumerateAgentSessions([out] IEnumAgentSession **ppEnumAgentSession)
HRESULT None None.BindToStream([out] IStream **ppStream)
HRESULT None None.GetSizeMax([out] ULARGE_INTEGER *pcbSize)
public boolean None.IsSubsetOf(IPermission target None)
BOOL None ws2_32.WSAGetQOSByName(_In_ SOCKET s,_Inout_ LPWSABUF lpQOSName,_Out_ LPQOS lpQOS)
HRESULT None None.SetQueueJournalProp(LPCWSTR wszQueueFormatName None,UCHAR bValue None)
BOOL None imm32.ImmReleaseContext(_In_ HWND hWnd,_In_ HIMC hIMC)
HRESULT None azroles.get_PolicyAdministrators([out] VARIANT *pvarAdmins)
NET_API_STATUS None netapi32.NetUserGetLocalGroups(_In_ LPCWSTR servername,_In_ LPCWSTR username,_In_ DWORD level,_In_ DWORD flags,_Out_ LPBYTE *bufptr,_In_ DWORD prefmaxlen,_Out_ LPDWORD entriesread,_Out_ LPDWORD totalentries)
UINT None msi.MsiOpenPackage(_In_ LPCTSTR szPackagePath,_Out_ MSIHANDLE *hProduct)
UINT None msi.MsiOpenPackageW(_In_ LPCTSTR szPackagePath,_Out_ MSIHANDLE *hProduct)
UINT None msi.MsiOpenPackageA(_In_ LPCTSTR szPackagePath,_Out_ MSIHANDLE *hProduct)
private void None.On_Inserting(Object sender None,SqlDataSourceCommandEventArgs e None)
HRESULT None None.ConvertTridToXID(DWORD * pdwITransaction,DWORD dwRMCookie None,XID * pXid)
NTSTATUS None None.WdfRequestCreateFromIrp(_In_opt_ PWDF_OBJECT_ATTRIBUTES RequestAttributes,_In_ PIRP Irp,_In_ BOOLEAN RequestFreesIrp,_Out_ WDFREQUEST *Request)
RPC_STATUS RPC_ENTRY rpcrt4.RpcMgmtInqStats(RPC_BINDING_HANDLE Binding None,RPC_STATS_VECTOR **Statistics None)
NTSTATUS NTAPI None.SpGetCredUIContextFn(_In_ LSA_SEC_HANDLE ContextHandle,_In_ GUID *CredType,_Out_ PULONG FlatCredUIContextLength,_Out_ PUCHAR *FlatCredUIContext)
DWORD None iphlpapi.GetNumberOfInterfaces(_Out_ PDWORD pdwNumIf)
BOOL CALLBACK None.EnumTimeFormatsProc(_In_ LPTSTR lpTimeFormatString)
HRESULT None None.get_ConnectImmediately([out] VARIANT_BOOL *connectImmediately)
HRESULT None None.get_ConnectionRate(long* pVal None)
HRESULT None None.GetPreviousBackupStamp([out] BSTR *pbstrBackupStamp)
ULONG WINAPI advapi32.PerfEnumerateCounterSetInstances(_In_opt_ LPCWSTR szMachine,_In_ LPCGUID pCounterSetId,_Out_opt_ PPERF_INSTANCE_HEADER pInstances,DWORD cbInstances None,_Out_ LPDWORD pcbInstancesActual)
LONG WINAPI winscard.SCardRemoveReaderFromGroup(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReaderName,_In_ LPCTSTR szGroupName)
LONG WINAPI winscard.SCardRemoveReaderFromGroupW(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReaderName,_In_ LPCTSTR szGroupName)
LONG WINAPI winscard.SCardRemoveReaderFromGroupA(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReaderName,_In_ LPCTSTR szGroupName)
HRESULT None None.VariantGetElem(_In_ REFVARIANT varIn,_In_ ULONG iElem,_Out_ VARIANT *pvar)
uint32 None wvrcimprov.WvrRemoveReplicaSet([in] string SourceReplicationGroupName,[in] string SourcePartitionId,[in] string TargetComputerName,[in] string TargetReplicationGroupName,[in] string TargetPartitionId)
PDH_STATUS None pdh.PdhBrowseCountersH(_In_ PPDH_BROWSE_DLG_CONFIG pBrowseDlgData)
PDH_STATUS None pdh.PdhBrowseCountersHW(_In_ PPDH_BROWSE_DLG_CONFIG pBrowseDlgData)
PDH_STATUS None pdh.PdhBrowseCountersHA(_In_ PPDH_BROWSE_DLG_CONFIG pBrowseDlgData)
BOOL None None.TreeView_GetISearchString(HWND hwndTV None,LPTSTR lpsz None)
BOOL WINAPI kernel32.SetProcessAffinityMask(_In_ HANDLE hProcess,_In_ DWORD_PTR dwProcessAffinityMask)
HRESULT None windowscodecs.IWICBitmapFrameEncode_SetColorContexts_Proxy(_In_ IWICBitmapFrameEncode *THIS_PTR,_In_ UINT cCount,_In_ IWICColorContext **ppIColorContext)
HRESULT None direct2d.CreatePathGeometry(D2D1_FILL_MODE fillMode None,[out] ID2D1PathGeometry1 **pathGeometry)
HRESULT None usp10.ScriptRecordDigitSubstitution(_In_ LCID Locale,_Out_ SCRIPT_DIGITSUBSTITUTE *psds)
protected void None.RenderBody(HtmlTextWriter writer None)
BOOL WINAPI crypt32.CertAddCRLLinkToStore(_In_ HCERTSTORE hCertStore,_In_ PCCRL_CONTEXT pCrlContext,_In_ DWORD dwAddDisposition,_Out_opt_ PCCRL_CONTEXT *ppStoreContext)
FLOAT WINAPI d2d1.D2D1Tan(_In_ FLOAT angle)
uint32 None netadaptercim.Enable([out] string cmdletOutput)
HRESULT None oleaut32.VarI1FromR4(_In_ FLOAT fltIn,_Out_ CHAR *pcOut)
protected void None.OnIsStylusCapturedChanged(DependencyPropertyChangedEventArgs e None)
function None None.ReceiveServerData(arg None None,context None None)
function None None.ReceiveServerData(arg None None,context None None)
HRESULT None ole32.CoGetMarshalSizeMax(_Out_ ULONG *pulSize,_In_ REFIID riid,_In_ LPUNKNOWN pUnk,_In_ DWORD dwDestContext,_In_opt_ LPVOID pvDestContext,_In_ DWORD mshlflags)
public void None.ShowOnscreenKeyboard(Microsoft.MediaCenter.UI.EditableText editableText None,bool passwordMasked None,int maxLength None)
HRESULT None None.End(HRESULT* phCompletionCode None,IUnknown* pNewObject None)
BOOL None None.WlxQueryClientCredentials(_Out_ PWLX_CLIENT_CREDENTIALS_INFO_V1_0 pCred)
HRESULT None None.get_VolumeName([out] BSTR *pVal)
HRESULT None None.GetVersion([out] LONG **plVersion,[out] HANDLE *phFileMapping)
DWORD WINAPI winhttp.WinHttpWebSocketReceive(_In_ HINTERNET hWebSocket,_Out_ PVOID pvBuffer,_In_ DWORD dwBufferLength,_Out_ DWORD *pdwBytesRead,_Out_ WINHTTP_WEB_SOCKET_BUFFER_TYPE *peBufferType)
HRESULT None None.MQMgmtAction(LPCWSTR pMachineName None,LPCWSTR pObjectName None,LPCWSTR pAction None)
VOID None None.WdfControlFinishInitializing(_In_ WDFDEVICE Device)
HWND WINAPI None.GetNextWindow(_In_ HWND hWnd,_In_ UINT wCmd)
VOID None iphlpapi.InitializeIpForwardEntry(_Out_ PMIB_IPFORWARD_ROW2 Row)
HRESULT None None.get_nodeType(DOMNodeType *type None)
UINT None imm32.ImmGetIMEFileName(_In_ HKL hKL,_Out_opt_ LPTSTR lpszFileName,_In_ UINT uBufLen)
UINT None imm32.ImmGetIMEFileNameW(_In_ HKL hKL,_Out_opt_ LPTSTR lpszFileName,_In_ UINT uBufLen)
UINT None imm32.ImmGetIMEFileNameA(_In_ HKL hKL,_Out_opt_ LPTSTR lpszFileName,_In_ UINT uBufLen)
BOOL WINAPI authz.AuthzInitializeContextFromSid(_In_ DWORD Flags,_In_ PSID UserSid,_In_opt_ AUTHZ_RESOURCE_MANAGER_HANDLE hAuthzResourceManager,_In_ PLARGE_INTEGER pExpirationTime,_In_ LUID Identifier,_In_opt_ PVOID DynamicGroupArgs,_Out_ PAUTHZ_CLIENT_CONTEXT_HANDLE pAuthzClientContext)
BOOLEAN WINAPI advapi32.AuditQueryGlobalSacl(_In_ PCWSTR ObjectTypeName,_Out_ PACL *Acl)
BOOLEAN WINAPI advapi32.AuditQueryGlobalSaclW(_In_ PCWSTR ObjectTypeName,_Out_ PACL *Acl)
BOOLEAN WINAPI advapi32.AuditQueryGlobalSaclA(_In_ PCWSTR ObjectTypeName,_Out_ PACL *Acl)
ULONG None wldap32.ldap_simple_bind_s(_In_ LDAP *ld,_In_ PCHAR dn,_In_ PCHAR passwd)
ULONG None wldap32.ldap_simple_bind_sW(_In_ LDAP *ld,_In_ PCHAR dn,_In_ PCHAR passwd)
ULONG None wldap32.ldap_simple_bind_sA(_In_ LDAP *ld,_In_ PCHAR dn,_In_ PCHAR passwd)
protected void None.OnPreviewStylusDown(StylusDownEventArgs e None)
UINT None oleaut32.SafeArrayGetElemsize(_In_ SAFEARRAY *psa)
HRESULT None shlwapi.SHCreateThreadRef(_In_ LONG *pcRef,_Out_ IUnknown **ppunk)
WSAEVENT None None.WPUCreateEvent(_Out_ LPINT lpErrno)
int WINAPI None.CompareAddresses(LPADDRESS lpAddress1 None,LPADDRESS lpAddress2 None)
HRESULT None None.GetSpreadMethod([out None None,retval] XPS_SPREAD_METHOD *spreadMethod)
HRESULT WINAPI webservices.WsInitializeMessage(_In_ WS_MESSAGE* message,_In_ WS_MESSAGE_INITIALIZATION initialization,_In_opt_ WS_MESSAGE* sourceMessage,_In_opt_ WS_ERROR* error)
BOOL WINAPI user32.GetWindowInfo(_In_ HWND hwnd,_Inout_ PWINDOWINFO pwi)
DWORD None None.GetBoolFromBlob(HBLOB hBlob None,const char* pOwnerName,const char* pCategoryName,const char* pTagName,BOOL* pBool None)
BOOL None gdi32.GetViewportExtEx(_In_ HDC hdc,_Out_ LPSIZE lpSize)
HRESULT WINAPI webservices.WsGetMetadataEndpoints(_In_ WS_METADATA* metadata,_Out_ WS_METADATA_ENDPOINTS* endpoints,_In_opt_ WS_ERROR* error)
DWORD None npptools.DestroyBlob(_In_ HBLOB hBlob)
PDH_STATUS None pdh.PdhCloseLog(_In_ PDH_HLOG hLog,_In_ DWORD dwFlags)
HRESULT None certcli.GetDispositionMessage([out] BSTR *pstrDispositionMessage)
HRESULT None None.GetBidiLevel([out None None,retval] UINT32 *bidiLevel)
HRESULT None usp10.ScriptGetFontProperties(_In_ HDC hdc,_Inout_ SCRIPT_CACHE *psc,_Out_ SCRIPT_FONTPROPERTIES *sfp)
HRESULT None None.GetHyperlinkNavigateUri([out None None,retval] IUri **hyperlinkUri)
PDH_STATUS None pdh.PdhGetFormattedCounterArray(_In_ PDH_HCOUNTER hCounter,_In_ DWORD dwFormat,_Inout_ LPDWORD lpdwBufferSize,_Out_ LPDWORD lpdwBufferCount,_Out_ PPDH_FMT_COUNTERVALUE_ITEM ItemBuffer)
PDH_STATUS None pdh.PdhGetFormattedCounterArrayW(_In_ PDH_HCOUNTER hCounter,_In_ DWORD dwFormat,_Inout_ LPDWORD lpdwBufferSize,_Out_ LPDWORD lpdwBufferCount,_Out_ PPDH_FMT_COUNTERVALUE_ITEM ItemBuffer)
PDH_STATUS None pdh.PdhGetFormattedCounterArrayA(_In_ PDH_HCOUNTER hCounter,_In_ DWORD dwFormat,_Inout_ LPDWORD lpdwBufferSize,_Out_ LPDWORD lpdwBufferCount,_Out_ PPDH_FMT_COUNTERVALUE_ITEM ItemBuffer)
INT WSPAPI ws2_32.WSCEnumNameSpaceProvidersEx32(_Inout_ LPDWORD lpdwBufferLength,_Out_ LPWSANAMESPACE_INFOEXW lpnspBuffer)
HRESULT None None.GetFontFaceIndex([out None None,retval] SHORT *fontFaceIndex)
BOOL None shell32.SHGetNewLinkInfo(_In_ LPCTSTR pszLinkTo,_In_ LPCTSTR pszDir,_Out_ LPTSTR pszName,_Out_ BOOL *pfMustCopy,_In_ UINT uFlags)
BOOL None shell32.SHGetNewLinkInfoW(_In_ LPCTSTR pszLinkTo,_In_ LPCTSTR pszDir,_Out_ LPTSTR pszName,_Out_ BOOL *pfMustCopy,_In_ UINT uFlags)
BOOL None shell32.SHGetNewLinkInfoA(_In_ LPCTSTR pszLinkTo,_In_ LPCTSTR pszDir,_Out_ LPTSTR pszName,_Out_ BOOL *pfMustCopy,_In_ UINT uFlags)
STDAPI None mfplat.MFCreateContentProtectionDevice(_In_ REFGUID ProtectionSystemId,_Out_ IMFContentProtectionDevice **ContentProtectionDevice)
LONG TSPIAPI None.TSPI_lineSetCallQualityOfService(DRV_REQUESTID dwRequestID None,HDRVCALL hdCall None,LPVOID lpSendingFlowspec None,DWORD dwSendingFlowspecSize None,LPVOID lpReceivingFlowspec None,DWORD dwReceivingFlowspecSize None)
HRESULT None None.GetDomainShaderDesc(D3DX11_PASS_SHADER_DESC *pDesc None)
LONG TSPIAPI None.TSPI_lineSetLineDevStatus(DRV_REQUESTID dwRequestID None,HDRVLINE hdLine None,DWORD dwStatusToChange None,DWORD fStatus None)
NETIOAPI_API None iphlpapi.GetMulticastIpAddressEntry(_Inout_ PMIB_MULTICASTIPADDRESS_ROW Row)
public void None.Launch(ListMakerList lml None)
void None None.ProcessQuadTessFactorsMin(in float4 RawEdgeFactors,in float InsideScale,out float4 RoundedEdgeTessFactors,out float2 RoundedInsideTessFactors,out float2 UnroundedInsideTessFactors)
HRESULT None None.MFGetAttribute2UINT32asUINT64(_In_ IMFAttributes *pAttributes,_In_ REFGUID guidKey,_Out_ UINT32 *punHigh32,_Out_ UINT32 *punLow32)
HRESULT None None.GetStrokeBrushLookup([out None None,retval] LPWSTR *lookup)
BOOL WINAPI advapi32.MakeAbsoluteSD(_In_ PSECURITY_DESCRIPTOR pSelfRelativeSD,_Out_opt_ PSECURITY_DESCRIPTOR pAbsoluteSD,_Inout_ LPDWORD lpdwAbsoluteSDSize,_Out_opt_ PACL pDacl,_Inout_ LPDWORD lpdwDaclSize,_Out_opt_ PACL pSacl,_Inout_ LPDWORD lpdwSaclSize,_Out_opt_ PSID pOwner,_Inout_ LPDWORD lpdwOwnerSize,_Out_opt_ PSID pPrimaryGroup,_Inout_ LPDWORD lpdwPrimaryGroupSize)
DWORD None iphlpapi.GetPerAdapterInfo(_In_ ULONG IfIndex,_Out_ PIP_PER_ADAPTER_INFO pPerAdapterInfo,_In_ PULONG pOutBufLen)
DWORD None None.TreeView_GetExtendedStyle(HWND hwnd None)
HRESULT None msctf.Clone([out] IEnumTfUIElements **ppEnum)
NETIOAPI_API None iphlpapi.GetAnycastIpAddressTable(_In_ ADDRESS_FAMILY Family,_Out_ PMIB_ANYCASTIPADDRESS_TABLE *Table)
HRESULT None None.DownloadContent(BSTR bstrSrcURL None,BSTR bstrDestFile None,long lContentSizeLow None,long lContentSizeHigh None,long lBitRate None)
BOOL None None.IsPropVariantString(_In_ REFPROPVARIANT propvar)
UINT_PTR CALLBACK None.OFNHookProcOldStyle(_In_ HWND hdlg,_In_ UINT uiMsg,_In_ WPARAM wParam,_In_ LPARAM lParam)
LONG WINAPI tapi32.lineDrop(HCALL hCall None,LPCSTR lpsUserUserInfo None,DWORD dwSize None)
HRESULT WINAPI dwmapi.DwmUnregisterThumbnail(HTHUMBNAIL hThumbnailId None)
protected void None.OnError(EventArgs e None)
PDH_STATUS None pdh.PdhBindInputDataSource(_Out_ PDH_HLOG *phDataSource,_In_ LPCTSTR szLogFileNameList)
PDH_STATUS None pdh.PdhBindInputDataSourceW(_Out_ PDH_HLOG *phDataSource,_In_ LPCTSTR szLogFileNameList)
PDH_STATUS None pdh.PdhBindInputDataSourceA(_Out_ PDH_HLOG *phDataSource,_In_ LPCTSTR szLogFileNameList)
HRESULT None None.GetConditionType([out] PROPDESC_CONDITION_TYPE *pcontype,[out] CONDITION_OPERATION *popDefault)
PDH_STATUS None pdh.PdhGetDefaultPerfCounter(_In_ LPCTSTR szDataSource,_In_ LPCTSTR szMachineName,_In_ LPCTSTR szObjectName,_Out_ LPTSTR szDefaultCounterName,_Inout_ LPDWORD pcchBufferSize)
PDH_STATUS None pdh.PdhGetDefaultPerfCounterW(_In_ LPCTSTR szDataSource,_In_ LPCTSTR szMachineName,_In_ LPCTSTR szObjectName,_Out_ LPTSTR szDefaultCounterName,_Inout_ LPDWORD pcchBufferSize)
PDH_STATUS None pdh.PdhGetDefaultPerfCounterA(_In_ LPCTSTR szDataSource,_In_ LPCTSTR szMachineName,_In_ LPCTSTR szObjectName,_Out_ LPTSTR szDefaultCounterName,_Inout_ LPDWORD pcchBufferSize)
typedef None None.VOID(__stdcall *WAITORTIMERCALLBACK None)
LPVOID WINAPI crypt32.CryptMemRealloc(_In_ LPVOID pv,_In_ ULONG cbSize)
HRESULT None None.GetActivityReportByDeviceName(LPCWSTR symbolicName None,[out] IMFSensorActivityReport **sensorActivityReport)
HRESULT None msdrm.DRMGetNameAndDescription(_In_ DRMPUBHANDLE hIssuanceLicense,_In_ UINT uIndex,_Out_ UINT *pulcid,_Inout_ UINT *puNameLength,_Out_ PWSTR wszName,_Inout_ UINT *puDescriptionLength,_Out_ PWSTR wszDescription)
HRESULT None ole32.CoGetCurrentLogicalThreadId(_Out_ GUID *pguid)
HRESULT None ole32.CoAllowSetForegroundWindow(_In_ IUnknown *pUnk,_In_ LPVOID lpvReserved)
HRESULT None ole32.CoRegisterInitializeSpy(_In_ LPINITIALIZESPY pSpy,_Out_ ULARGE_INTEGER *puliCookie)
HRESULT None None.Clone([out] IEnumStream **ppEnum)
HRESULT None None.CreateDeferredContext1(UINT ContextFlags None,[out None None,optional] ID3D11DeviceContext1 **ppDeferredContext)
DWORD None None.Edit_GetSel(HWND hwndCtl None)
HRESULT None oleaut32.GetRecordInfoFromGuids(_In_ REFGUID rGuidTypeLib,_In_ ULONG uVerMajor,_In_ ULONG uVerMinor,_In_ LCID lcid,_In_ REFGUID rGuidTypeInfo,_Out_ IRecordInfo **ppRecInfo)
ULONG None wldap32.ldap_count_references(_In_ LDAP *ld,_In_ LDAPMessage *res)
HRESULT None None.GetOptions([out] LIBRARYOPTIONFLAGS *plofOptions)
HRESULT None None.ReadingDestQueue(WCHAR * wszQueueName,WCHAR * wszComputerName)
BOOL WINAPI user32.HiliteMenuItem(_In_ HWND hwnd,_In_ HMENU hmenu,_In_ UINT uItemHilite,_In_ UINT uHilite)
BOOL WINAPI authz.AuthzRegisterCapChangeNotification(_Out_ PAUTHZ_CAP_CHANGE_SUBSCRIPTION_HANDLE phCapChangeSubscription,_In_ LPTHREAD_START_ROUTINE pfnCapChangeCallback,_In_opt_ PVOID pCallbackContext)
HRESULT None None.AddPlaybackEffect(REFGUID clsid None,IMFPMediaPlayer *pPlayer None)
UINT None None.ListView_MapIDToIndex(HWND hwnd None,UINT id None)
BOOL CALLBACK None.FindExecutableImageProc(_In_ HANDLE FileHandle,_In_ PCTSTR FileName,_In_ PVOID CallerData)
BOOL WINAPI user32.IsIconic(_In_ HWND hWnd)
HRESULT APIENTRY None.MQSetQueueProperties(LPCWSTR lpwcsFormatName None,MQQUEUEPROPS * pQueueProps)
MI_INLINE MI_Result None.MI_OperationOptions_DisableChannel(_Inout_ MI_OperationOptions *options,_In_ MI_Uint32 channel)
BOOL None None.Edit_GetModify(HWND hwndCtl None)
DWORD WINAPI clusapi.GetClusterInformation(_In_ HCLUSTER hCluster,_Out_ LPWSTR lpszClusterName,_Inout_ LPDWORD lpcchClusterName,_Out_opt_ LPCLUSTERVERSIONINFO lpClusterInfo)
HRESULT None None.GetMaterial([out] D3DMATERIAL9 *pMaterial)
protected void None.UpdateBounds(int x None,int y None,int width None,int height None)
DWORD None mprapi.MprAdminInterfaceCreate(_In_ MPR_SERVER_HANDLE hMprServer,_In_ DWORD dwLevel,_In_ LPBYTE lpBuffer,_Out_ HANDLE *phInterface)
PDH_STATUS None pdh.PdhFormatFromRawValue(_In_ DWORD dwCounterType,_In_ DWORD dwFormat,_In_ LONGLONG *pTimeBase,_In_ PPDH_RAW_COUNTER rawValue1,_In_ PPDH_RAW_COUNTER rawValue2,_Out_ PPDH_FMT_COUNTERVALUE fmtValue)
HRESULT None ole32.OleCreateEx(_In_ REFCLSID rclsid,_In_ REFIID riid,_In_ DWORD dwFlags,_In_ DWORD renderopt,_In_ ULONG cFormats,_In_ DWORD *rgAdvf,_In_ LPFORMATETC rgFormatEtc,_In_ IAdviseSink *lpAdviseSink,_Out_ DWORD *rgdwConnection,_In_ LPOLECLIENTSITE pClientSite,_In_ LPSTORAGE pStg,_Out_ LPVOID *ppvObj)
HRESULT None windowscodecsext.IWICColorTransform_Initialize_Proxy(_In_ IWICColorTransform *pIColorTransform,_In_ IWICBitmapSource *pIBitmapSource,_In_ IWICColorContext *pIContextSource,_In_ IWICColorContext *pIContextDest,_In_ REFWICPixelFormatGUID pixelFmtDest)
private void None.button1_Click(Object sender None,System.EventArgs e None)
HRESULT None None.QueryAbilities([out] SYNCMGR_RESOLUTION_ABILITIES_FLAGS *pdwAbilities)
HRESULT None url.URLAssociationDialog(HWND hwndParent None,DWORD dwInFlags None,PTCSTR pcszFile None,PTCSTR pcszURL None,_Out_ PTSTR pszAppBuf,UINT ucAppBufLen None)
HRESULT None url.URLAssociationDialogW(HWND hwndParent None,DWORD dwInFlags None,PTCSTR pcszFile None,PTCSTR pcszURL None,_Out_ PTSTR pszAppBuf,UINT ucAppBufLen None)
HRESULT None url.URLAssociationDialogA(HWND hwndParent None,DWORD dwInFlags None,PTCSTR pcszFile None,PTCSTR pcszURL None,_Out_ PTSTR pszAppBuf,UINT ucAppBufLen None)
HRESULT None None.validate(IXMLDOMParseError ** errorObj)
protected boolean None.OnBubbleEvent(Object source None,EventArgs args None)
HRESULT None None.GetContainerItem(BSTR bstrItemName None,IUIAutomationElement *pContainerElement None,IUIAutomationElement **ppItemElement None)
LONG TSPIAPI None.TSPI_lineSetStatusMessages(HDRVLINE hdLine None,DWORD dwLineStates None,DWORD dwAddressStates None)
ULONG None wldap32.ldap_modrdn(_In_ LDAP *ExternalHandle,_In_ PCHAR DistinguishedName,_Out_ PCHAR NewDistinguishedName)
ULONG None wldap32.ldap_modrdnW(_In_ LDAP *ExternalHandle,_In_ PCHAR DistinguishedName,_Out_ PCHAR NewDistinguishedName)
ULONG None wldap32.ldap_modrdnA(_In_ LDAP *ExternalHandle,_In_ PCHAR DistinguishedName,_Out_ PCHAR NewDistinguishedName)
protected void None.CopyPersonalizationState(WebPart webPartA None,WebPart webPartB None)
PDH_STATUS None pdh.PdhMakeCounterPath(_In_ PDH_COUNTER_PATH_ELEMENTS *pCounterPathElements,_Out_ LPTSTR szFullPathBuffer,_Inout_ LPDWORD pcchBufferSize,_In_ DWORD dwFlags)
PDH_STATUS None pdh.PdhMakeCounterPathW(_In_ PDH_COUNTER_PATH_ELEMENTS *pCounterPathElements,_Out_ LPTSTR szFullPathBuffer,_Inout_ LPDWORD pcchBufferSize,_In_ DWORD dwFlags)
PDH_STATUS None pdh.PdhMakeCounterPathA(_In_ PDH_COUNTER_PATH_ELEMENTS *pCounterPathElements,_Out_ LPTSTR szFullPathBuffer,_Inout_ LPDWORD pcchBufferSize,_In_ DWORD dwFlags)
uint32 None cimwin32.SetPMTUDiscovery([in] boolean PMTUDiscoveryEnabled)
float None None.ddy_coarse(in float value)
BOOL WINAPI crypt32.CertFreeCTLContext(_In_ PCCTL_CONTEXT pCtlContext)
DWORD None None.ListView_GetView(HWND hwnd None)
u_short WSAAPI ws2_32.ntohs(_In_ u_short netshort)
protected void None.OnKeyUp(KeyEventArgs e None)
BOOL WINAPI kernel32.DeleteUmsCompletionList(_In_ PUMS_COMPLETION_LIST UmsCompletionList)
HRESULT None None.GetFVF([out] DWORD *pFVF)
BOOL WINAPI user32.RemoveMenu(_In_ HMENU hMenu,_In_ UINT uPosition,_In_ UINT uFlags)
DWORD None None.NPCancelConnection(_In_ LPTSTR lpName,_In_ BOOL fForce)
HCLUSTER WINAPI clusapi.OpenClusterEx(_In_opt_ LPCWSTR lpszClusterName,_In_ DWORD DesiredAccess,_Out_opt_ DWORD *GrantedAccess)
HTREEITEM None None.TreeView_GetChild(HWND hwndTV None,HTREEITEM hitem None)
CLIENT_CALL_RETURN None rpcrt4.NdrDcomAsyncClientCall(_In_ PMIDL_STUB_DESC pStubDescriptor,_In_ PFORMAT_STRING pFormat,_Inout_ ... None)
BOOL WINAPI dbghelp.SymMatchFileName(_In_ PCTSTR FileName,_In_ PCTSTR Match,_Out_opt_ PTSTR *FileNameStop,_Out_opt_ PTSTR *MatchStop)
BOOL WINAPI dbghelp.SymMatchFileNameW(_In_ PCTSTR FileName,_In_ PCTSTR Match,_Out_opt_ PTSTR *FileNameStop,_Out_opt_ PTSTR *MatchStop)
BOOL WINAPI dbghelp.SymMatchFileName(_In_ PCTSTR FileName,_In_ PCTSTR Match,_Out_opt_ PTSTR *FileNameStop,_Out_opt_ PTSTR *MatchStop)
ULONG WINAPI advapi32.PerfOpenQueryHandle(_In_opt_ LPCWSTR szMachine,_Out_ HANDLE hQuery)
MMRESULT None msacm32.acmDriverAdd(LPHACMDRIVERID phadid None,HINSTANCE hinstModule None,LPARAM lParam None,DWORD dwPriority None,DWORD fdwAdd None)
MMRESULT None msacm32.acmDriverAddW(LPHACMDRIVERID phadid None,HINSTANCE hinstModule None,LPARAM lParam None,DWORD dwPriority None,DWORD fdwAdd None)
MMRESULT None msacm32.acmDriverAddA(LPHACMDRIVERID phadid None,HINSTANCE hinstModule None,LPARAM lParam None,DWORD dwPriority None,DWORD fdwAdd None)
HRESULT None ole32.CoRegisterMessageFilter(_In_opt_ LPMESSAGEFILTER lpMessageFilter,_Out_opt_ LPMESSAGEFILTER *lplpMessageFilter)
HRESULT None None.Present(UINT SyncInterval None,UINT Flags None)
BOOL WINAPI kernel32.QueryIdleProcessorCycleTime(_Inout_ PULONG BufferLength,_Out_ PULONG64 ProcessorIdleCycleTime)
HRESULT None None.SHSaveLibraryInFolderPath(_In_ IShellLibrary *plib,_In_ PCWSTR pszFolderPath,_In_ PCWSTR pszLibraryName,_In_ LIBRARYSAVEFLAGS lsf,_Out_opt_ PWSTR *ppszSavedToPath)
DWORD None mprapi.MprAdminInterfaceSetInfo(_In_ MPR_SERVER_HANDLE hMprServer,_In_ HANDLE hInterface,_In_ DWORD dwLevel,_In_ LPBYTE lpbBuffer)
LONG WINAPI tapi32.lineGetMessage(HLINEAPP hLineApp None,LPLINEMESSAGE lpMessage None,DWORD dwTimeout None)
BOOL WINAPI advapi32.ObjectCloseAuditAlarm(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ BOOL GenerateOnClose)
BOOL WINAPI advapi32.ObjectCloseAuditAlarmW(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ BOOL GenerateOnClose)
BOOL WINAPI advapi32.ObjectCloseAuditAlarmA(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ BOOL GenerateOnClose)
HRESULT None None.GetFontRenderingEmSize([out None None,retval] FLOAT *fontRenderingEmSize)
LONG WINAPI winscard.SCardIsValidContext(_In_ SCARDCONTEXT hContext)
HRESULT None propsys.PropVariantGetUInt32Elem(_In_ REFPROPVARIANT propvar,_In_ ULONG iElem,_Out_ ULONG *pnVal)
HRESULT None None.Download(VOID None None)
HRESULT None azroles.get_Tasks([out] IAzTasks **ppTaskCollection)
VOID FORCEINLINE None.TpSetCallbackLongFunction(_Inout_ PTP_CALLBACK_ENVIRON CallbackEnviron)
HRESULT None None.get_FullPath([out] BSTR *pVal)
UINT None msi.MsiCloseHandle(_In_ MSIHANDLE hAny)
RPC_STATUS None rpcrt4.RpcBindingBind(_In_opt_ PRPC_ASYNC_STATE pAsync,_In_ RPC_BINDING_HANDLE Binding,_In_ RPC_IF_HANDLE IfSpec)
void None None.LoadViewState(Object state None)
NET_API_STATUS None netapi32.NetUserDel(_In_ LPCWSTR servername,_In_ LPCWSTR username)
UINT None msi.MsiVerifyPackage(_In_ LPCTSTR szPackagePath)
UINT None msi.MsiVerifyPackageW(_In_ LPCTSTR szPackagePath)
UINT None msi.MsiVerifyPackageA(_In_ LPCTSTR szPackagePath)
HRESULT None cscsvc.IsLocallyModifiedData([out] BOOL *pbLocallyModifiedData)
HPROTOCOL WINAPI nmapi.GetProtocolFromName(_In_ LPSTR ProtocolName)
HRESULT None None.GetColumnHeaders([out None None,retval] SAFEARRAY **pRetVal)
HRESULT None winsatapi.get_AssessmentDateTime([out] VARIANT *fileTime)
HRESULT None None.GetRoamingText([out] BSTR *roamingText)
HRESULT None None.get_StreamingRTSPPlayers(long* pVal None)
HRESULT None ole32.CLSIDFromProgIDEx(_In_ LPCOLESTR lpszProgID,_Out_ LPCLSID lpclsid)
DWORD None None.NPGetCaps(_In_ DWORD nIndex)
protected void None.ScaleControl(SizeF factor None,BoundsSpecified specified None)
HRESULT None None.getAllResponseHeaders(BSTR *pbstrHeaders None)
NTSTATUS None None.LsaApCallPackageUntrusted(_In_ PLSA_CLIENT_REQUEST ClientRequest,_In_ PVOID ProtocolSubmitBuffer,_In_ PVOID ClientBufferBase,_In_ ULONG SubmitBufferLength,_Out_ PVOID *ProtocolReturnBuffer,_Out_ PULONG ReturnBufferLength,_Out_ PNTSTATUS ProtocolStatus)
DWORD None mprapi.MprAdminServerSetCredentials(_In_ MPR_SERVER_HANDLE hMprServer,_In_ DWORD dwLevel,_In_ LPBYTE lpbBuffer)
HRESULT None None.createElement(BSTR tagName None,IXMLDOMElement **element None)
BOOL WINAPI kernel32.SetInformationJobObject(_In_ HANDLE hJob,_In_ JOBOBJECTINFOCLASS JobObjectInfoClass,_In_ LPVOID lpJobObjectInfo,_In_ DWORD cbJobObjectInfoLength)
HRESULT None None.OnTranslateAccelerator(MSG *pMsg None,DWORD grfModifiers None)
BOOL None shell32.SHObjectProperties(_In_ HWND hwnd,_In_ DWORD shopObjectType,_In_ PCWSTR pszObjectName,_In_ PCWSTR pszPropertyPage)
HRESULT WINAPI webservices.WsAbortListener(_In_ WS_LISTENER* listener,_In_opt_ WS_ERROR* error)
HRESULT STDAPI cldapi.CfReferenceProtectedHandle(_In_ HANDLE ProtectedHandle)
HRESULT None None.matches(IXMLDOMNode* pNode None,IXMLDOMNode** ppNode None)
BOOL WINAPI dbghelp.SymSrvGetFileIndexInfo(_In_ PCTSTR File,_Out_ PSYMSRV_INDEX_INFO Info,_In_ DWORD Flags)
BOOL WINAPI dbghelp.SymSrvGetFileIndexInfoW(_In_ PCTSTR File,_Out_ PSYMSRV_INDEX_INFO Info,_In_ DWORD Flags)
BOOL WINAPI dbghelp.SymSrvGetFileIndexInfo(_In_ PCTSTR File,_Out_ PSYMSRV_INDEX_INFO Info,_In_ DWORD Flags)
HRESULT None shell32.SHGetAttributesFromDataObject(_In_opt_ IDataObject *pdo,DWORD dwAttributeMask None,_Out_opt_ DWORD *pdwAttributes,_Out_opt_ UINT *pcItems)
VOID None None.WdfInterruptReleaseLock(_In_ WDFINTERRUPT Interrupt)
HRESULT None mf.MFCreateASFProfileFromPresentationDescriptor(IMFPresentationDescriptor *pIPD None,IMFASFProfile **ppIProfile None)
protected int None.ExecuteInsert(IDictionary values None)
HRESULT None None.GetTotalBad([out] DWORD *pdwBadLow,[out] DWORD *pdwBadHigh)
public boolean None.CanConvertFrom(ITypeDescriptorContext context None,Type sourceType None)
HRESULT None None.hasFeature(BSTR feature None,BSTR version None,VARIANT_BOOL *hasFeature None)
DWORD None npptools.SetNPPAddressFilterInBlob(_In_ HBLOB hBlob,_In_ LPADDRESSTABLE pAddressTable)
HRESULT None None.getResponseHeader(BSTR bstrHeader None,BSTR* pbstrValue None)
HRESULT None ole32.OleCreateLinkEx(_In_ LPMONIKER pmkLinkSrc,_In_ REFIID riid,_In_ DWORD dwFlags,_In_ DWORD renderopt,_In_ ULONG cFormats,_In_ DWORD *rgAdvf,_In_ LPFORMATETC rgFormatEtc,_In_ IAdviseSink *lpAdviseSink,_Out_ DWORD *rgdwConnection,_In_ LPOLECLIENTSITE pClientSite,_In_ LPSTORAGE pStg,_Out_ LPVOID *ppvObj)
HRESULT None ole32.StgCreatePropSetStg(_In_ IStorage *pStorage,DWORD dwReserved None,_Out_ IPropertySetStorage **ppPropSetStg)
HRESULT None ole32.CoReleaseMarshalData(_In_ LPSTREAM pStm)
HRESULT None oleaut32.VarDecFromUI2(_In_ USHORT uiIn,_Out_ DECIMAL *pdecOut)
HKEY None shlwapi.SHRegDuplicateHKey(_In_ HKEY hkey)
UINT None msi.MsiCollectUserInfo(_In_ LPCTSTR szProduct)
UINT None msi.MsiCollectUserInfoW(_In_ LPCTSTR szProduct)
UINT None msi.MsiCollectUserInfoA(_In_ LPCTSTR szProduct)
HRESULT None shell32.Skip(ULONG celt None)
NET_API_STATUS None netapi32.NetScheduleJobGetInfo(_In_opt_ LPCWSTR Servername,_In_ DWORD JobId,_Out_ LPBYTE *PointerToBuffer)
DWORD WINAPI clusapi.RemoveClusterResourceDependency(_In_ HRESOURCE hResource,_In_ HRESOURCE hDependsOn)
HRESULT None None.get_VolumeNameISO9660([out] BSTR *pVal)
protected void None.OnPreviewStylusSystemGesture(StylusSystemGestureEventArgs e None)
HRESULT None None.TranslateTridToXid(ITransaction * pITransaction,GUID * pguidBqual,XID * pXid)
HRESULT None None.get_CurrentPartitionName([out None None,retval] BSTR *pbstrPartitionName)
HRESULT None None.get_ISO9660InterchangeLevelsSupported([out] SAFEARRAY *pVal)
HRESULT None None.GetNetworkOutboundAccess(BOOL * pbOutbound)
BOOL WINAPI user32.IsWindowRedirectedForPrint(_In_ HWND hWnd)
BOOL WINAPI userenv.UnloadUserProfile(_In_ HANDLE hToken,_In_ HANDLE hProfile)
ULONG STDMETHODCALLTYPE rpcrt4.NdrCStdStubBuffer2_Release(_In_ IRpcStubBuffer *This,_In_ IPSFactoryBuffer *pPSF)
HRESULT None shell32.SHGetInstanceExplorer(_Out_ IUnknown **ppunk)
HANDLE WINAPI kernel32.CreateSemaphoreEx(_In_opt_ LPSECURITY_ATTRIBUTES lpSemaphoreAttributes,_In_ LONG lInitialCount,_In_ LONG lMaximumCount,_In_opt_ LPCTSTR lpName,_Reserved_ DWORD dwFlags,_In_ DWORD dwDesiredAccess)
HANDLE WINAPI kernel32.CreateSemaphoreExW(_In_opt_ LPSECURITY_ATTRIBUTES lpSemaphoreAttributes,_In_ LONG lInitialCount,_In_ LONG lMaximumCount,_In_opt_ LPCTSTR lpName,_Reserved_ DWORD dwFlags,_In_ DWORD dwDesiredAccess)
HANDLE WINAPI kernel32.CreateSemaphoreExA(_In_opt_ LPSECURITY_ATTRIBUTES lpSemaphoreAttributes,_In_ LONG lInitialCount,_In_ LONG lMaximumCount,_In_opt_ LPCTSTR lpName,_Reserved_ DWORD dwFlags,_In_ DWORD dwDesiredAccess)
DWORD None iphlpapi.GetBestRoute(_In_ DWORD dwDestAddr,_In_ DWORD dwSourceAddr,_Out_ PMIB_IPFORWARDROW pBestRoute)
in None None.f(R ^ r)
VOID None None.PropSheet_RestartWindows(HWND hPropSheetDlg None)
HTREEITEM None None.TreeView_GetLastVisible(HWND hwndTV None)
HRESULT None None.get_StreamingUDPPlayers(long* pVal None)
HRESULT None fxscomex.put_UseDeviceTSID([in] VARIANT_BOOL bUseDeviceTSID)
HRESULT None None.get_Players(IWMSPlayers** pVal None)
BOOL WINAPI dbghelp.SymGetSymFromName64(_In_ HANDLE hProcess,_In_ PCSTR Name,_Inout_ PIMAGEHLP_SYMBOL64 Symbol)
int None None._setmbcp(int codepage None)
UINT None shell32.SHAddFromPropSheetExtArray(_In_ HPSXA hpsxa,_In_ LPFNADDPROPSHEETPAGE lpfnAddPage,LPARAM lParam None)
public void None.OnUnload(EventArgs e None)
size_t None None.WdfDmaEnablerGetMaximumLength(_In_ WDFDMAENABLER DmaEnabler)
HRESULT None mf.MFCreateASFStreamingMediaSink(IMFByteStream *pIByteStream None,IMFMediaSink **ppIMediaSink None)
DWORD APIENTRY None.CollectPerformanceData(LPWSTR pQuery None,LPVOID *pData None,LPDWORD pcbData None,LPDWORD pObjectsReturned None)
void None None.Page_Load(Object sender None,System.EventArgs e None)
BOOL None wtsapi32.WTSUnRegisterSessionNotification(_In_ HWND hWnd)
BOOL None shell32.SHChangeNotification_Unlock(_In_ HANDLE hLock)
LONG TSPIAPI None.TSPI_lineMonitorMedia(HDRVCALL hdCall None,DWORD dwMediaModes None)
int None None.CompareTo(Object obj None)
BOOL WINAPI authz.AuthzReportSecurityEventFromParams(_In_ DWORD dwFlags,_In_ AUTHZ_SECURITY_EVENT_PROVIDER_HANDLE hEventProvider,_In_ DWORD dwAuditId,_In_opt_ PSID pUserSid,_In_ PAUDIT_PARAMS pParams)
uint32 None cimwin32.SetDeadGWDetect([in] boolean DeadGWDetectEnabled)
BOOL None None.PropSheet_Apply(HWND hPropSheetDlg None)
BOOLEAN WINAPI powrprof.WriteProcessorPwrScheme(_In_ UINT ID,_In_ PMACHINE_PROCESSOR_POWER_POLICY pMachineProcessorPowerPolicy)
HRESULT None None.GetPixelShader([out None None,retval] IDirect3DPixelShader9 **ppShader)
BOOL CALLBACK None.ClusterUpgradeProgressCallback(PVOID pvCallbackArg None,CLUSTER_UPGRADE_PHASE eUpgradePhase None)
DWORD WINAPI kernel32.FlsAlloc(_In_ PFLS_CALLBACK_FUNCTION lpCallback)
HRESULT None None.get_context(IXMLDOMNode ** ppNode)
DWORD None clusapi.DestroyCluster(_In_ HCLUSTER hCluster,_In_opt_ PCLUSTER_SETUP_PROGRESS_CALLBACK pfnProgressCallback,_In_opt_ PVOID pvCallbackArg,_In_ BOOL fdeleteVirtualComputerObjects)
HRESULT None None.get_DiagnosticEvents(long* pVal None)
BOOL IMAGEAPI dbghelp.SymGetExtendedOption(_In_ IMAGEHLP_EXTENDED_OPTIONS option)
MI_INLINE MI_Result None.MI_DestinationOptions_GetCertRevocationCheck(_In_ MI_DestinationOptions *options,_Out_ MI_Boolean *check)
uint32 None wvrcimprov.WvrRemoveVolumePartnerStretch([in] string SourceReplicationGroupName,[in] string SourceComputerName,[in] string SourceVolumeName[])
DWORD WINAPI clusapi.GetClusterNotifyV2(_In_ HCHANGE hChange,_Out_ DWORD_PTR *lpdwNotifyKey,_Inout_opt_ PNOTIFY_FILTER_AND_TYPE pFilterAndType,_Inout_opt_ BYTE *buffer,_Inout_opt_ LPDWORD lpbBufferSize,_Inout_opt_ LPWSTR lpszObjectId,_Inout_opt_ LPDWORD lpcchObjectId,_Inout_opt_ LPWSTR lpszParentId,_Inout_opt_ LPDWORD lpcchParentId,_Inout_opt_ LPWSTR lpszName,_Inout_opt_ LPDWORD lpcchName,_Inout_opt_ LPWSTR lpszType,_Inout_opt_ LPDWORD lpcchType,_In_opt_ DWORD dwMilliseconds)
private void None.button1_Click(Object sender None,System.EventArgs e None)
public void None.SetProperty(String attribName None,PrintProperty attribValue None)
LONG WINAPI tapi32.lineDial(HCALL hCall None,LPCSTR lpszDestAddress None,DWORD dwCountryCode None)
LONG WINAPI tapi32.lineDialW(HCALL hCall None,LPCSTR lpszDestAddress None,DWORD dwCountryCode None)
LONG WINAPI tapi32.lineDialA(HCALL hCall None,LPCSTR lpszDestAddress None,DWORD dwCountryCode None)
uint32 None dhcpserverpsprovider.Remove([in] string ComputerName,[in] string Prefix,[in] string ReservedIP,[in] uint32 OptionId[],[in] boolean PassThru,[in] string VendorClass,[in] string UserClass,[out] DhcpServerv6OptionValue cmdletOutput[])
NET_API_STATUS None netapi32.NetLocalGroupSetMembers(_In_ LPCWSTR servername,_In_ LPCWSTR groupname,_In_ DWORD level,_In_ LPBYTE buf,_In_ DWORD totalentries)
LONG TSPIAPI None.TSPI_lineCompleteCall(DRV_REQUESTID dwRequestID None,HDRVCALL hdCall None,LPDWORD lpdwCompletionID None,DWORD dwCompletionMode None,DWORD dwMessageID None)
public void None.RegisterName(String name None,Object scopedElement None)
HRESULT None mf.MFCreatePresentationDescriptorFromASFProfile(IMFASFProfile *pIProfile None,IMFPresentationDescriptor **ppIPD None)
BOOLEAN WINAPI powrprof.GetCurrentPowerPolicies(_Out_ PGLOBAL_POWER_POLICY pGlobalPowerPolicy,_Out_ PPOWER_POLICY pPowerPolicy)
public void None.UnregisterObject(ModelItem modelItem None)
NET_API_STATUS None netapi32.NetMessageNameDel(_In_ LPCWSTR servername,_In_ LPCWSTR msgname)
STDAPI None mfplat.MFCreateTrackedSample(_Out_ IMFTrackedSample **ppMFSample)
HRESULT None None.GetCanonicalizationMethod([out None None,retval] OPC_CANONICALIZATION_METHOD *canonicalizationMethod)
LONG TSPIAPI None.TSPI_phoneGetDisplay(HDRVPHONE hdPhone None,LPVARSTRING lpDisplay None)
public void None.Install(IDictionary stateSaver None)
protected void None.OnPreviewStylusInRange(StylusEventArgs e None)
BOOL WINAPI kernel32.SetUmsThreadInformation(_In_ PUMS_CONTEXT UmsThread,_In_ UMS_THREAD_INFO_CLASS UmsThreadInfoClass,_In_ PVOID UmsThreadInformation,_In_ ULONG UmsThreadInformationLength)
void None None.CommDlg_OpenSave_SetDefExt(hwnd None None,lparam None None)
HRESULT None propsys.PropVariantToFileTimeVectorAlloc(_In_ REFPROPVARIANT propvar,_Out_ FILETIME **pprgft,_Out_ ULONG *pcElem)
HRESULT None None.InitPropVariantFromInt64(_In_ LONGLONG llVal,_Out_ PROPVARIANT *ppropvar)
void None None.f(int32 None None)
HRESULT None ole32.MonikerCommonPrefixWith(_In_ LPMONIKER pmkThis,_In_ LPMONIKER pmkOther,_Out_ LPMONIKER *ppmkCommon)
HRESULT None rtworkq.RtwqRegisterPlatformWithMMCSS(_In_ PCWSTR usageClass,_Inout_ DWORD *taskId,_In_ LONG lPriority)
ULONG None propsys.PropVariantGetElementCount(_In_ REFPROPVARIANT propvar)
NETIOAPI_API None iphlpapi.GetIpNetEntry2(_Inout_ PMIB_IPNET_ROW2 Row)
HRESULT None None.Send(ISequentialStream *pBody None,ULONGLONG cbBody None)
MI_INLINE MI_Result None.MI_Context_PostResult(_In_ MI_Context *context,MI_Result result None)
uint32 None wvrcimprov.WvrRemoveReplica([in] string ReplicationGroupName,[in] string VolumeName)
size_t None None.strxfrm(char *strDest None,const char *strSource,size_t count None)
HRESULT None None.GetDirectedTargetCount([out] UINT *pcDirectedTarget)
HRESULT None dwrite.GetFontDownloadQueue([out] IDWriteFontDownloadQueue **fontDownloadQueue)
PDH_STATUS __stdcall None.CounterPathCallBack(_In_ DWORD_PTR dwArg)
BOOL WINAPI user32.UnregisterPowerSettingNotification(_In_ HPOWERNOTIFY Handle)
DWORD None None.NPGetPropertyText(_In_ DWORD iButton,_In_ DWORD nPropSel,_In_ LPTSTR lpName,_Out_ LPTSTR lpButtonName,_Inout_ DWORD nButtonNameLen,_In_ DWORD nType)
DWORD WINAPI clusapi.ClusterCloseEnum(_In_ HCLUSENUM hEnum)
HRESULT None None.SetInterval(UINT uiInterval None)
private void None.On_Click(Object source None,System.EventArgs e None)
BOOL WINAPI kernel32.UmsThreadYield(_In_ PVOID SchedulerParam)
HRESULT None fxscomex.put_OutgoingQueuePaused([in] VARIANT_BOOL bOutgoingPaused)
UINT None msi.MsiAdvertiseProduct(_In_ LPCTSTR szPackagePath,_In_ LPCTSTR szScriptfilePath,_In_ LPCTSTR szTransforms,_In_ LANGID lgidLanguage)
UINT None msi.MsiAdvertiseProductW(_In_ LPCTSTR szPackagePath,_In_ LPCTSTR szScriptfilePath,_In_ LPCTSTR szTransforms,_In_ LANGID lgidLanguage)
UINT None msi.MsiAdvertiseProductA(_In_ LPCTSTR szPackagePath,_In_ LPCTSTR szScriptfilePath,_In_ LPCTSTR szTransforms,_In_ LANGID lgidLanguage)
protected void None.mgr1_AuthorizeWebPart(object sender None,WebPartAuthorizationEventArgs e None)
HRESULT None None.GetRequestedRuntimeVersion([in] LPWSTR pExe,[out] LPWSTR pVersion,[in] DWORD cchBuffer,[out] DWORD *pdwLength)
BOOLEAN WINAPI powrprof.DevicePowerOpen(ULONG Flags None)
BOOL None uxtheme.EndPanningFeedback(_In_ HWND hwnd,_In_ BOOL fAnimateBack)
BOOL None shell32.PathIsExe(_In_ PCWSTR szfile)
protected void None.OnDayRender(TableCell cell None,CalendarDay day None)
BOOLEAN WINAPI powrprof.GetPwrDiskSpindownRange(_Out_ PUINT RangeMax,_Out_ PUINT RangeMin)
uint32 None dnsserverpsprovider.AddByHInfo([in] boolean AllowUpdateAny,[in] string Cpu,[in] string OperatingSystem,[in] string ZoneName,[in] datetime TimeToLive,[in] string Name,[in] string ComputerName,[in] boolean AgeRecord,[in] boolean HInfo,[in] boolean PassThru,[in] string ZoneScope,[out] DnsServerResourceRecord cmdletOutput)
DWORD None None.NPGetUniversalName(_In_ LPCTSTR lpLocalPath,_In_ DWORD dwInfoLevel,_Out_ LPVOID lpBuffer,_Inout_ LPDWORD lpBufferSize)
HRESULT WDSCLIAPI wdsclientapi.WdsCliGetImageGroup(_In_ HANDLE hIfh,_Out_ PWSTR *ppwszValue)
PDH_STATUS None pdh.PdhCloseQuery(_In_ PDH_HQUERY hQuery)
HRESULT None None.get_id(BSTR* id None)
DWORD PXEAPI wdspxe.PxeProviderQueryIndex(_In_ LPCWSTR pszProviderName,_Out_ PULONG puIndex)
LONG TSPIAPI None.TSPI_lineAnswer(DRV_REQUESTID dwRequestID None,HDRVCALL hdCall None,LPCSTR lpsUserUserInfo None,DWORD dwSize None)
NET_API_STATUS None netapi32.NetServerSetInfo(_In_ LPWSTR servername,_In_ DWORD level,_In_ LPBYTE buf,_Out_ LPDWORD ParmError)
LONG TSPIAPI None.TSPI_lineGetExtensionID(DWORD dwDeviceID None,DWORD dwTSPIVersion None,LPLINEEXTENSIONID lpExtensionID None)
PSLIST_ENTRY WINAPI ntdll.RtlInterlockedPopEntrySList(_In_ PSLIST_HEADER ListHead)
RPC_STATUS RPC_ENTRY rpcrt4.RpcServerInterfaceGroupActivate(_In_ RPC_INTERFACE_GROUP IfGroup)
UINT None shell32.ILGetSize(_In_opt_ PCUIDLIST_RELATIVE pidl)
HRESULT None None.insertData(long offset None,BSTR data None)
NTSTATUS None None.SpUnsealMessage(_In_ LSA_SEC_HANDLE ContextHandle,_In_ PSecBufferDesc MessageBuffers,_In_ ULONG MessageSequenceNumber,_Out_ PULONG QualityOfProtection)
BOOL WINAPI user32.HiliteMenuItem(_In_ HWND hwnd,_In_ HMENU hmenu,_In_ UINT uItemHilite,_In_ UINT uHilite)
void None None.Insert(int index None,T item None)
BOOL WINAPI advapi32.AddAuditAccessObjectAce(_Inout_ PACL pAcl,_In_ DWORD dwAceRevision,_In_ DWORD AceFlags,_In_ DWORD AccessMask,_In_opt_ GUID *ObjectTypeGuid,_In_opt_ GUID *InheritedObjectTypeGuid,_In_ PSID pSid,_In_ BOOL bAuditSuccess,_In_ BOOL bAuditFailure)
HRESULT None shell32.SHILCreateFromPath(_In_ PCWSTR pszPath,_Out_ PIDLIST_ABSOLUTE *ppidl,_Inout_opt_ DWORD *rgflnOut)
NTSTATUS None None.ClientCallback(_In_ PCHAR Callback,_In_ ULONG_PTR Argument1,_In_ ULONG_PTR Argument2,_In_ PSecBuffer Input,_Out_ PSecBuffer Output)
DWORD None None.DavFreeCredCallback(_In_ PVOID pbuffer)
HRESULT None None.get_LateReadRate(long* pVal None)
protected void None.Dispose(boolean disposing None)
HRESULT STDAPI cldapi.CfCloseHandle(_In_ HANDLE FileHandle)
BOOL WINAPI kernel32.NeedCurrentDirectoryForExePath(_In_ LPCTSTR ExeName)
BOOL WINAPI kernel32.NeedCurrentDirectoryForExePathW(_In_ LPCTSTR ExeName)
BOOL WINAPI kernel32.NeedCurrentDirectoryForExePathA(_In_ LPCTSTR ExeName)
HRESULT None None.CancelAsyncDownload(VOID None None)
typedef None None.VOID(__stdcall *WAITORTIMERCALLBACK None)
HRESULT None certadm.CertSrvRestoreGetDatabaseLocations(_In_ HCSBC hbc,_Out_ WCHAR **ppwszzDatabaseLocationList,_Out_ DWORD *pcbSize)
HRESULT None certadm.CertSrvRestoreGetDatabaseLocationsW(_In_ HCSBC hbc,_Out_ WCHAR **ppwszzDatabaseLocationList,_Out_ DWORD *pcbSize)
HRESULT None mfplat.MFCreateSourceResolver(_Out_ IMFSourceResolver **ppISourceResolver)
HRESULT None None.GetVertexShaderDesc(D3DX11_PASS_SHADER_DESC *pDesc None)
private void None.MenuSelected(Object sender None,System.EventArgs e None)
DWORD None rasapi32.RasGetCountryInfo(_Inout_ LPRASCTRYINFO lpRasCtryInfo,_Inout_ LPDWORD lpdwSize)
DWORD None rasapi32.RasGetCountryInfoW(_Inout_ LPRASCTRYINFO lpRasCtryInfo,_Inout_ LPDWORD lpdwSize)
DWORD None rasapi32.RasGetCountryInfoA(_Inout_ LPRASCTRYINFO lpRasCtryInfo,_Inout_ LPDWORD lpdwSize)
DWORD WINAPI clusapi.SetClusterResourceDependencyExpression(_In_ HRESOURCE hResource,_In_ LPCWSTR lpszDependencyExpression)
HRESULT None None.GetStrokeBrushLocal([out None None,retval] IXpsOMBrush **brush)
HRESULT None mfplat.MFUnwrapMediaType(IMFMediaType *pWrap None,IMFMediaType **ppOrig None)
public Object None.GetService(Type service None)
HRESULT None None.getAttribute(BSTR name None,VARIANT *value None)
DWORD WINAPI clusapi.ClusterGroupGetEnumCountEx(_In_ HGROUPENUMEX hGroupEnumEx)
void None None.RaiseCallbackEvent(String eventArgument None)
HRESULT None ole32.CreateClassMoniker(_In_ REFCLSID rclsid,_Out_ LPMONIKER *ppmk)
HRESULT None None.get_errorCode(long *errorCode None)
HRESULT None azroles.get_PolicyReadersName([out] VARIANT *pvarReaders)
HRESULT None urlmon.CreateURLMonikerEx(IMoniker *pMkCtx None,LPCWSTR szURL None,IMoniker **ppmk None,DWORD dwFlags None)
HRESULT None shell32.SelectItem(PCUITEMID_CHILD pidlItem None,UINT uFlags None)
ULONG None propsys.VariantGetElementCount(_In_ REFVARIANT varIn)
HRESULT None shell32.SHSetUnreadMailCount(_In_ LPCTSTR pszMailAddress,DWORD dwCount None,_In_ LPCTSTR pszShellExecuteCommand)
HRESULT None shell32.SHSetUnreadMailCountW(_In_ LPCTSTR pszMailAddress,DWORD dwCount None,_In_ LPCTSTR pszShellExecuteCommand)
NTSTATUS None None.WdfRequestRetrieveInputBuffer(_In_ WDFREQUEST Request,_In_ size_t MinimumRequiredSize,_Out_ PVOID *Buffer,_Out_opt_ size_t *Length)
BOOL None kernel32.IsValidLocaleName(_In_ LPCWSTR lpLocaleName)
HRESULT None oleacc.DoAction(IAccessible* pAcc None)
DWORD None iphlpapi.GetOwnerModuleFromUdpEntry(_In_ PMIB_UDPROW_OWNER_MODULE pUdpEntry,_In_ TCPIP_OWNER_MODULE_INFO_CLASS Class,_Out_ PVOID Buffer,_Inout_ PDWORD pdwSize)
HRESULT None wsmauto.get_AtEndOfStream([out] VARIANT_BOOL *eos)
PDH_STATUS None pdh.PdhGetRawCounterValue(_In_ PDH_HCOUNTER hCounter,_Out_ LPDWORD lpdwType,_Out_ PPDH_RAW_COUNTER pValue)
HRESULT None None.Link(LPWSTR *ppszUrl None)
BOOL WINAPI advapi32.CredIsProtected(_In_ LPTSTR pszProtectedCredentials,_Out_ CRED_PROTECTION_TYPE *pProtectionType)
BOOL WINAPI advapi32.CredIsProtectedW(_In_ LPTSTR pszProtectedCredentials,_Out_ CRED_PROTECTION_TYPE *pProtectionType)
BOOL WINAPI advapi32.CredIsProtectedA(_In_ LPTSTR pszProtectedCredentials,_Out_ CRED_PROTECTION_TYPE *pProtectionType)
HRESULT None None.put_AllowClientsToConnect(VARIANT_BOOL newVal None)
SerializableAttribute None None.TypeConverterAttribute(System.Windows.Forms.CursorConverter None None)
MI_INLINE MI_Result None.MI_DestinationOptions_SetPacketIntegrity(_Inout_ MI_DestinationOptions *options,MI_Boolean integrity None)
public void None.OnInit(EventArgs e None)
uint32 None netadaptercim.Enable([out] string cmdletOutput)
HRESULT None mf.MFCreatePMPMediaSession(DWORD dwCreationFlags None,IMFAttributes *pConfiguration None,IMFMediaSession **ppMediaSession None,IMFActivate **ppEnablerActivate None)
HRESULT None None.get_itemType(SOMITEMTYPE* itemType None)
HRESULT None mfplat.MFCreatePathFromURL(_In_opt_ LPCWSTR pwszFileURL,_Out_ LPWSTR *ppwszFilePath)
BOOLEAN WINAPI powrprof.SetSuspendState(_In_ BOOLEAN Hibernate,_In_ BOOLEAN ForceCritical,_In_ BOOLEAN DisableWakeEvent)
HRESULT None ole32.GetRunningObjectTable(_In_ DWORD reserved,_Out_ LPRUNNINGOBJECTTABLE *pprot)
UINT None msi.MsiGetPatchInfo(_In_ LPCTSTR szPatch,_In_ LPCTSTR szAttribute,_Out_ LPTSTR lpValueBuf,_Inout_ DWORD *pcchValueBuf)
UINT None msi.MsiGetPatchInfoW(_In_ LPCTSTR szPatch,_In_ LPCTSTR szAttribute,_Out_ LPTSTR lpValueBuf,_Inout_ DWORD *pcchValueBuf)
UINT None msi.MsiGetPatchInfoA(_In_ LPCTSTR szPatch,_In_ LPCTSTR szAttribute,_Out_ LPTSTR lpValueBuf,_Inout_ DWORD *pcchValueBuf)
HRESOURCE WINAPI clusapi.OpenClusterResourceEx(_In_ HCLUSTER hCluster,_In_opt_ LPCWSTR lpszResourceName,_In_ DWORD dwDesiredAccess,_Out_opt_ DWORD *lpdwGrantedAccess)
HRESULT None None.GetCurrentParameterSet([out] IPropertyBag2 **ppCurrentParameterSet)
UINT None msi.MsiGetFileVersion(_In_ LPCTSTR szFilePath,_Out_ LPTSTR lpVersionBuf,_Inout_ DWORD *pcchVersionBuf,_Out_ LPTSTR lpLangBuf,_Inout_ DWORD *pcchLangBuf)
UINT None msi.MsiGetFileVersionW(_In_ LPCTSTR szFilePath,_Out_ LPTSTR lpVersionBuf,_Inout_ DWORD *pcchVersionBuf,_Out_ LPTSTR lpLangBuf,_Inout_ DWORD *pcchLangBuf)
UINT None msi.MsiGetFileVersionA(_In_ LPCTSTR szFilePath,_Out_ LPTSTR lpVersionBuf,_Inout_ DWORD *pcchVersionBuf,_Out_ LPTSTR lpLangBuf,_Inout_ DWORD *pcchLangBuf)
DWORD WINAPI crypt32.CertRDNValueToStr(_In_ DWORD dwValueType,_In_ PCERT_RDN_VALUE_BLOB pValue,_Out_ LPTSTR psz,_In_ DWORD csz)
DWORD WINAPI crypt32.CertRDNValueToStrW(_In_ DWORD dwValueType,_In_ PCERT_RDN_VALUE_BLOB pValue,_Out_ LPTSTR psz,_In_ DWORD csz)
DWORD WINAPI crypt32.CertRDNValueToStrA(_In_ DWORD dwValueType,_In_ PCERT_RDN_VALUE_BLOB pValue,_Out_ LPTSTR psz,_In_ DWORD csz)
HRESULT None None.SetPassthroughGraph(UINT32 effectInputIndex None)
HRESULT None None.get_systemId(BSTR *systemID None)
public PropertyDescriptorCollection None.GetProperties(ITypeDescriptorContext context None,Object value None,Attribute[] attributes None)
NETIO_STATUS WINAPI iphlpapi.ConvertLengthToIpv4Mask(_In_ ULONG MaskLength,_Out_ PULONG Mask)
DWORD WINAPI kernel32.SetThreadIdealProcessor(_In_ HANDLE hThread,_In_ DWORD dwIdealProcessor)
DWORD None mprapi.MprAdminInterfaceDisconnect(_In_ MPR_SERVER_HANDLE hMprServer,_In_ HANDLE hInterface)
public boolean None.Poll(int microSeconds None,SelectMode mode None)
NTSTATUS None None.GetUserAuthData(_In_ PVOID UserHandle,_Out_ PUCHAR *UserAuthData,_Out_ PULONG UserAuthDataSize)
HRESULT None propsys.InitVariantFromStrRet(_In_ STRRET *pstrret,_In_ PCUITEMID_CHILD pidl,_Out_ VARIANT *pvar)
HRESULT None wsdapi.GetPort([out] WORD *pwPort)
HRESULT None None.ILLoadFromStreamEx(_In_ IStream *pstm,_Out_ PITEMID_CHILD *ppidl)
HRESULT WINAPI webservices.WsWriteEndAttribute(_In_ WS_XML_WRITER* writer,_In_opt_ WS_ERROR* error)
DWORD None mprapi.MprConfigInterfaceTransportSetInfo(_In_ HANDLE hMprConfig,_In_ HANDLE hRouterInterface,_In_ HANDLE hRouterIfTransport,_In_opt_ LPBYTE pInterfaceInfo,_In_opt_ DWORD dwInterfaceInfoSize)
LONG WINAPI tapi32.lineMonitorMedia(HCALL hCall None,DWORD dwMediaModes None)
protected void None.OnMouseMove(MouseEventArgs e None)
public void None.CreateTemplatedUI(boolean doDataBind None)
public void None.AddValue(String name None,Object value None,Type type None)
HRESULT None mfplat.MFCreateTransformActivate(_Out_ IMFActivate **ppActivate)
HRESULT None mfplat.MFRemovePeriodicCallback(_In_ DWORD dwKey)
HRESULT None None.MarkAllItemsRead(VOID None None)
HRESULT None tapi3.EnumerateAddresses([out] IEnumAddress **ppEnumAddress)
HRESULT None oleaut32.OleCreatePropertyFrame(_In_ HWND hwndOwner,_In_ UINT x,_In_ UINT y,_In_ LPCOLESTR lpszCaption,_In_ ULONG cObjects,_In_ LPUNKNOWN *ppUnk,_In_ ULONG cPages,_In_ LPCLSID pPageClsID,_In_ LCID lcid,_In_ DWORD dwReserved,_In_ LPVOID pvReserved)
HRESULT None None.GetPostRestoreFailureMsg([out] BSTR *pbstrPostRestoreFailureMsg)
BOOL None comctl32.ImageList_DrawIndirect(IMAGELISTDRAWPARAMS *pimldp None)
BOOL None evr.MFIsFormatYUV(_In_ DWORD Format)
HRESULT None mfplat.MFCreateMFByteStreamOnStreamEx(_In_ IUnknown punkStream,_Out_ IMFByteStream **ppByteStream)
BOOL WINAPI advapi32.CryptDeriveKey(_In_ HCRYPTPROV hProv,_In_ ALG_ID Algid,_In_ HCRYPTHASH hBaseData,_In_ DWORD dwFlags,_Inout_ HCRYPTKEY *phKey)
UINT None msi.MsiGetProperty(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szName,_Out_ LPTSTR szValueBuf,_Inout_ DWORD *pchValueBuf)
UINT None msi.MsiGetPropertyW(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szName,_Out_ LPTSTR szValueBuf,_Inout_ DWORD *pchValueBuf)
UINT None msi.MsiGetPropertyA(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szName,_Out_ LPTSTR szValueBuf,_Inout_ DWORD *pchValueBuf)
BOOL WINAPI kernel32.GetProcessHandleCount(_In_ HANDLE hProcess,_Inout_ PDWORD pdwHandleCount)
NET_API_STATUS None netapi32.NetSetPrimaryComputerName(_In_opt_ LPCWSTR Server,_In_ LPCWSTR PrimaryName,_In_opt_ LPCWSTR DomainAccount,_In_opt_ LPCWSTR DomainAccountPassword,_In_ ULONG Reserved)
DWORD None None.TabCtrl_SetExtendedStyle(HWND hwndTab None,DWORD dwExStyle None)
HRESULT None None.get_stylesheet(IXMLDOMNode** stylesheet None)
NTSTATUS WINAPI bcrypt.BCryptEnumRegisteredProviders(_Inout_ ULONG *pcbBuffer,_Inout_ PCRYPT_PROVIDERS *ppBuffer)
HRESULT None None.get_PlayerBytesSent(VARIANT* pVal None)
HRESULT None None.MyFunc([in None None,optional] VARIANT Param1,[out None None,optional] VARIANT Param2)
NTSTATUS None secur32.LsaRegisterLogonProcess(_In_ PLSA_STRING LogonProcessName,_Out_ PHANDLE LsaHandle,_Out_ PLSA_OPERATIONAL_MODE SecurityMode)
HRESULT None pla.put_SendCabTo(BSTR bstrDestination None)
HTREEITEM None None.TreeView_GetNextItem(HWND hwndTV None,HTREEITEM hitem None,UINT flag None)
DWORD APIENTRY mprapi.MprAdminInterfaceGetCustomInfoEx(_In_ MPR_SERVER_HANDLE hMprServer,_In_ HANDLE hInterface,_Out_ PMPR_IF_CUSTOMINFOEX pCustomInfo)
void None None.MyUpdateImage(LPCWSTR pszHashItem None,int iIndex None,UINT uFlags None,int iImageIndex None)
public StringBuilder None.AppendFormat(String format None,Object[] args None)
void None None.GetDimensions(in UINT MipLevel,out UINT Width,out UINT Height,out UINT Elements,out UINT NumberOfLevels)
protected void None.OnDisplayModeChanged(WebPartDisplayModeEventArgs e None)
HRESULT None None.get_Security([out] SecurityProperty **ppSecurityProperty)
DWORD None npptools.GetNPPAddressFilterFromBlob(_In_ HBLOB hBlob,_Inout_ LPADDRESSTABLE pAddressTable,_Out_ HBLOB hErrorBlob)
HRESULT None propsys.VariantToUInt32(_In_ REFVARIANT varIn,_Out_ ULONG *pulRet)
HRESULT None rtworkq.RtwqInvokeCallback(IRtwqAsyncResult *result None)
double None None.asdouble(in uint lowbits,in uint highbits)
LONG TSPIAPI None.TSPI_phoneSetLamp(DRV_REQUESTID dwRequestID None,HDRVPHONE hdPhone None,DWORD dwButtonLampID None,DWORD dwLampMode None)
HRESULT None None.GetSubType([out] GUID *pSubType)
BOOL WINAPI winhttp.WinHttpQueryDataAvailable(_In_ HINTERNET hRequest,_Out_ LPDWORD lpdwNumberOfBytesAvailable)
HRESULT None None.GetChannelCount([out] UINT *pnChannelCount)
uint32 None ramgmtpsprovider.Set([in] string StoreLimit,[in] string ComputerName,[in] boolean PassThru,[out] RemoteAccessInboxAccounting cmdletOutput)
NTSTATUS None None.CopyFromClientBuffer(_In_ PLSA_CLIENT_REQUEST ClientRequest,_In_ ULONG Length,_In_ PVOID BufferToCopy,_In_ PVOID ClientBaseAddress)
DWORD None user32.GetWindowContextHelpId(HWND hwnd None)
HRESULT None None.get_Mouse([out] IVMMouse **mouse)
DWORD None iphlpapi.GetIcmpStatisticsEx(_Out_ PMIB_ICMP_EX pStats,_In_ DWORD dwFamily)
HRESULT None None.get_nodeValue(VARIANT *value None)
NET_IFINDEX WINAPI iphlpapi.if_nametoindex(_In_ PCSTR InterfaceName)
BOOL WINAPI authz.AuthzFreeHandle(_In_ AUTHZ_ACCESS_CHECK_RESULTS_HANDLE AuthzHandle)
COLORREF None None.TreeView_SetTextColor(HWND hwndTV None,COLORREF clrText None)
DWORD APIENTRY mprapi.MprConfigServerSetInfo(_In_ LPWSTR lpwsServerName,_In_ BOOL *fIsServiceInitialized)
HRESULT None None.loadXML(BSTR bstrXML None,VARIANT_BOOL * isSuccessful)
HRESULT WINAPI webservices.WsTrimXmlWhitespace(WCHAR* chars None,_In_ ULONG charCount,WCHAR** trimmedChars None,_Out_ ULONG* *trimmedCount,_In_opt_ WS_ERROR* error)
HRESULT None rtworkq.RtwqLockSharedWorkQueue(_In_ PCWSTR usageClass,_In_ LONG basePriority,_Inout_ DWORD *taskId,_Out_ DWORD *pID)
HRESULT None None.GetThumbnailResource([out None None,retval] IXpsOMImageResource **imageResource)
DWORD64 CALLBACK None.GetModuleBaseProc64(_In_ HANDLE hProcess,_In_ DWORD64 Address)
protected void None.LinqDataSource_Updating(object sender None,LinqDataSourceUpdateEventArgs e None)
HRESULT None d3dcompiler_47.GetLastError([out None None,optional] ID3DBlob **ppErrorBuffer)
LPSYSTEMTIME WINAPI nmapi.GetCaptureTimeStamp(_In_ HCAPTURE hCapture)
VOID WINAPI kernel32.WaitForThreadpoolTimerCallbacks(_Inout_ PTP_TIMER pti,_In_ BOOL fCancelPendingCallbacks)
LONG TSPIAPI None.TSPI_lineGetID(HDRVLINE hdLine None,DWORD dwAddressID None,HDRVCALL hdCall None,DWORD dwSelect None,LPVARSTRING lpDeviceID None,LPCWSTR lpszDeviceClass None,HANDLE hTargetProcess None)
BOOL WINAPI crypt32.CryptMsgGetAndVerifySigner(_In_ HCRYPTMSG hCryptMsg,_In_ DWORD cSignerStore,_In_opt_ HCERTSTORE *rghSignerStore,_In_ DWORD dwFlags,_Out_opt_ PCCERT_CONTEXT *ppSigner,_Inout_opt_ DWORD *pdwSignerIndex)
DWORD CALLBACK None.BeginResourceControlAsUser(_In_ RESID Resource,_In_ HANDLE TokenHandle,_In_ DWORD ControlCode,_In_ PVOID InBuffer,_In_ DWORD InBufferSize,_Out_ PVOID OutBuffer,_In_ DWORD OutBufferSize,_Out_ LPDWORD BytesReturned,_In_ PRES_CTL_CTX context,_Inout_ PBOOL ReturnedAsynchronously)
HRESULT None tapi3.EnumerateCallHubs([out] IEnumCallHub **ppEnumCallHub)
LONG TSPIAPI None.TSPI_phoneGetDevCaps(DWORD dwDeviceID None,DWORD dwTSPIVersion None,DWORD dwExtVersion None,LPPHONECAPS lpPhoneCaps None)
NET_API_STATUS WINAPI netapi32.NetRequestProvisioningPackageInstall(_In_ BYTE *pPackageBinData,_In_ DWORD dwPackageBinDataSize,_In_ DWORD dwProvisionOptions,_In_ LPCWSTR lpWindowsPath,_Reserved_ PVOID pvReserved)
uint32 None cimwin32.SetKeepAliveTime([in] uint32 KeepAliveTime)
Sub None None.startPrefixMapping(strPrefix As String,strURI As String)
protected void None.OnDragDrop(DragEventArgs dragEvent None)
uint32 None ramgmtpsprovider.Get([in] string ComputerName,[in] string EntrypointName,[out] RemoteAccessCommon cmdletOutput)
HRESULT None None.GetNetworkProtocol([out] WMT_NET_PROTOCOL *pProtocol)
HNETWORK WINAPI clusapi.OpenClusterNetwork(_In_ HCLUSTER hCluster,_In_ LPCWSTR lpszNetworkName)
INT None wldap32.ber_flatten(_In_ BerElement *pBerElement,_Out_ PBERVAL *pBerVal)
public void None.Import(byte[] rawData None,SecureString password None,X509KeyStorageFlags keyStorageFlags None)
DWORD None iphlpapi.SetIpNetEntry(_In_ PMIB_IPNETROW pArpEntry)
public XmlReadMode None.ReadXml(String fileName None,XmlReadMode mode None)
BOOL WINAPI kernel32.AssignProcessToJobObject(_In_ HANDLE hJob,_In_ HANDLE hProcess)
DWORD64 WINAPI dbghelp.SymLoadModule64(_In_ HANDLE hProcess,_In_opt_ HANDLE hFile,_In_opt_ PCSTR ImageName,_In_opt_ PCSTR ModuleName,_In_ DWORD64 BaseOfDll,_In_ DWORD SizeOfDll)
uint32 None nettcpip.RequestStateChange([in] uint16 RequestedState,[out] CIM_ConcreteJob Job,[in] datetime TimeoutPeriod)
HRESULT None None.InitRibbon(CMainFrame* pMainFrame None,IUnknown** ppFramework None)
HRESULT None None.put_DefaultPluginLoadType(WMS_PLUGIN_LOAD_TYPE val None)
BOOL WINAPI advapi32.GetWindowsAccountDomainSid(_In_ PSID pSid,_Out_opt_ PSID ppDomainSid,_Inout_ DWORD *cbSid)
PDH_STATUS None pdh.PdhComputeCounterStatistics(_In_ PDH_HCOUNTER hCounter,_In_ DWORD dwFormat,_In_ DWORD dwFirstEntry,_In_ DWORD dwNumEntries,_In_ PPDH_RAW_COUNTER lpRawValueArray,_Out_ PPDH_STATISTICS data)
HRESULT WINAPI webservices.WsGetPolicyAlternativeCount(_In_ WS_POLICY* policy,_Out_ ULONG* count,_In_opt_ WS_ERROR* error)
ULONG WINAPI None.CounterInitialize(__in_opt PERFLIBREQUEST NotificationCallback,__in_opt PERF_MEM_ALLOC MemoryAllocationFunction,__in_opt PERF_MEM_FREE MemoryFreeFunction,__inout_opt PVOID MemoryFunctionContext)
public StringBuilder None.AppendFormat(String format None,Object[] args None)
BOOLEAN WINAPI powrprof.GetPwrCapabilities(_Out_ PSYSTEM_POWER_CAPABILITIES lpSystemPowerCapabilities)
int None None.main(void None None)
BOOL WINAPI advapi32.CryptHashData(_In_ HCRYPTHASH hHash,_In_ BYTE *pbData,_In_ DWORD dwDataLen,_In_ DWORD dwFlags)
HRESULT None None.GetRequestedRuntimeVersion([in] LPWSTR pExe,[out] LPWSTR pVersion,[in] DWORD cchBuffer,[out] DWORD *pdwLength)
public None None.GridLength(double pixels None)
private void None.MenuSelected(Object sender None,System.EventArgs e None)
HRESULT None None.CreateMutualExclusion([out] IMFASFMutualExclusion **ppIMutex)
VOID None None.WdfIoQueuePurge(_In_ WDFQUEUE Queue,_In_opt_ PFN_WDF_IO_QUEUE_STATE PurgeComplete,_In_opt_ WDFCONTEXT Context)
protected void None.OnGoToPageCommand(int pageNumber None)
BOOL None None.ListView_SetTileViewInfo(HWND hwnd None,PLVTILEVIEWINFO plvtvinfo None)
LONG TSPIAPI None.TSPI_lineDrop(DRV_REQUESTID dwRequestID None,HDRVCALL hdCall None,LPCSTR lpsUserUserInfo None,DWORD dwSize None)
DWORD WINAPI wlanapi.WlanRegisterVirtualStationNotification(_In_ HANDLE hClientHandle,_In_ BOOL bRegister,_Reserved_ PVOID pvReserved)
HRESULT None propsys.PropVariantToUInt64VectorAlloc(_In_ REFPROPVARIANT propvar,_Out_ ULONGLONG **pprgn,_Out_ ULONG *pcElem)
ULONG WINAPI iphlpapi.GetPerTcp6ConnectionEStats(PMIB_TCP6ROW Row None,TCP_ESTATS_TYPE EstatsType None,_Out_ PUCHAR Rw,ULONG RwVersion None,ULONG RwSize None,_Out_ PUCHAR Ros,ULONG RosVersion None,ULONG RosSize None,_Out_ PUCHAR Rod,ULONG RodVersion None,ULONG RodSize None)
HINTERNET WINAPI winhttp.WinHttpOpenRequest(_In_ HINTERNET hConnect,_In_ LPCWSTR pwszVerb,_In_ LPCWSTR pwszObjectName,_In_ LPCWSTR pwszVersion,_In_ LPCWSTR pwszReferrer,_In_ LPCWSTR *ppwszAcceptTypes,_In_ DWORD dwFlags)
VOID None wldap32.ldap_memfree(_In_ PCHAR Block)
VOID None wldap32.ldap_memfreeW(_In_ PCHAR Block)
VOID None wldap32.ldap_memfreeA(_In_ PCHAR Block)
HRESULT None None.DllSetProperty(DWORD dwPropertyID None,LPVOID pv None)
HRESULT STDMETHODCALLTYPE ole32.CStdAsyncStubBuffer2_Connect(_In_ IRpcStubBuffer *pthis,_In_ IUnknown *pUnkServer)
PCHAR None wldap32.ldap_get_dn(_In_ LDAP *ld,_In_ LDAPMessage *entry)
PCHAR None wldap32.ldap_get_dnW(_In_ LDAP *ld,_In_ LDAPMessage *entry)
PCHAR None wldap32.ldap_get_dnA(_In_ LDAP *ld,_In_ LDAPMessage *entry)
BOOL WINAPI user32.DestroyCursor(_In_ HCURSOR hCursor)
HRESULT None propsys.InitVariantFromStringArray(_In_ PCWSTR *prgsz,_In_ ULONG cElems,_Out_ VARIANT *pvar)
void None None.MyUpdateImage(LPCWSTR pszHashItem None,int iIndex None,UINT uFlags None,int iImageIndex None)
MI_INLINE MI_Result None.MI_DestinationOptions_SetDestinationPort(_Inout_ MI_DestinationOptions *options,MI_Uint32 port None)
LONG WINAPI winscard.SCardIntroduceReaderGroup(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szGroupName)
LONG WINAPI winscard.SCardIntroduceReaderGroupW(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szGroupName)
LONG WINAPI winscard.SCardIntroduceReaderGroupA(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szGroupName)
HRESULT None None.Clone([out None None,retval] IXpsOMPage **page)
HRESULT WINAPI webservices.WsResetListener(_In_ WS_LISTENER* listener,_In_opt_ WS_ERROR* error)
HRESULT None fxscomex.put_RetryDelay([in] long lRetryDelay)
VOID WINAPI kernel32.CloseThreadpoolCleanupGroup(_Inout_ PTP_CLEANUP_GROUP ptpcg)
int None None.main(void None None)
HRESULT None evr.MFCreateVideoSampleFromSurface(_In_ IUnknown *pUnkSurface,_Out_ IMFSample **ppSample)
LONG WINAPI tapi32.lineCompleteTransfer(HCALL hCall None,HCALL hConsultCall None,LPHCALL lphConfCall None,DWORD dwTransferMode None)
HIMAGELIST None comctl32.ImageList_Read(LPSTREAM pstm None)
PDH_STATUS None pdh.PdhConnectMachine(_In_ LPCTSTR szMachineName)
PDH_STATUS None pdh.PdhConnectMachineW(_In_ LPCTSTR szMachineName)
PDH_STATUS None pdh.PdhConnectMachineA(_In_ LPCTSTR szMachineName)
PDH_STATUS None pdh.PdhExpandWildCardPathH(_In_ PDH_HLOG hDataSource,_In_ LPCTSTR szWildCardPath,_Out_ LPTSTR mszExpandedPathList,_Inout_ LPDWORD pcchPathListLength,_In_ DWORD dwFlags)
PDH_STATUS None pdh.PdhExpandWildCardPathHW(_In_ PDH_HLOG hDataSource,_In_ LPCTSTR szWildCardPath,_Out_ LPTSTR mszExpandedPathList,_Inout_ LPDWORD pcchPathListLength,_In_ DWORD dwFlags)
PDH_STATUS None pdh.PdhExpandWildCardPathHA(_In_ PDH_HLOG hDataSource,_In_ LPCTSTR szWildCardPath,_Out_ LPTSTR mszExpandedPathList,_Inout_ LPDWORD pcchPathListLength,_In_ DWORD dwFlags)
HRESULT None None.InitVariantFromInt16(_In_ SHORT iVal,_Out_ VARIANT *pvar)
HRESULT None oleaut32.VarBstrFromUI2(_In_ USHORT uiIn,_In_ LCID lcid,_In_ ULONG dwFlags,_Out_ BSTR *pbstrOut)
HRESULT None oleaut32.VarI8FromBool(_In_ VARIANT_BOOL boolIn,_Out_ LONG64 *pi64Out)
HRESULT None oleaut32.VarUI4FromI8(_In_ LONG64 i64In,_Out_ ULONG *plOut)
HRESULT None cscsvc.GetSyncOperation([out] OFFLINEFILES_SYNC_OPERATION *pSyncOp)
HRESULT None oleaut32.VarR8FromStr(_In_ LPCOLESTR strIn,_In_ LCID lcid,_In_ ULONG dwFlags,_Out_ DOUBLE *pdblOut)
ULONG None wldap32.ldap_add_ext_s(_In_ LDAP *ld,_In_ PCHAR dn,_In_ LDAPMod *attrs[],_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls)
ULONG None wldap32.ldap_add_ext_sW(_In_ LDAP *ld,_In_ PCHAR dn,_In_ LDAPMod *attrs[],_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls)
ULONG None wldap32.ldap_add_ext_sA(_In_ LDAP *ld,_In_ PCHAR dn,_In_ LDAPMod *attrs[],_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls)
UINT None msi.MsiViewModify(_In_ MSIHANDLE hView,_In_ MSIMODIFY eModifyMode,_In_ MSIHANDLE hRecord)
HRESULT None oleaut32.VarUI8FromUI2(_In_ USHORT uiIn,_Out_ ULONG64 *pi64Out)
DWORD None iphlpapi.GetOwnerModuleFromTcpEntry(_In_ PMIB_TCPROW_OWNER_MODULE pTcpEntry,_In_ TCPIP_OWNER_MODULE_INFO_CLASS Class,_Out_ PVOID Buffer,_Inout_ PDWORD pdwSize)
HRESULT None None.QueryHardwareSupport([out] DWORD *pdwHardwareSupportMask)
BOOL None None.ListView_GetNumberOfWorkAreas(HWND hwndLV None,LPUINT lpuWorkAreas None)
HRESULT None None.getAttributeNode(BSTR name None,IXMLDOMAttribute **attributeNode None)
HRESULT None None.setProperty(BSTR strProp None,VARIANT vBool None)
public ConnectionInterfaceCollection None.GetSecondaryInterfaces(Control control None)
HRESULT None None.createComment(BSTR data None,IXMLDOMComment **comment None)
BOOL WINAPI advapi32.AddAuditAccessAceEx(_Inout_ PACL pAcl,_In_ DWORD dwAceRevision,_In_ DWORD AceFlags,_In_ DWORD dwAccessMask,_In_ PSID pSid,_In_ BOOL bAuditSuccess,_In_ BOOL bAuditFailure)
HRESULT APIENTRY None.MQCloseQueue(QUEUEHANDLE hQueue None)
HRESULT None azroles.get_PolicyAdministrators([out] VARIANT *pvarAdmins)
PCCERT_CONTEXT WINAPI crypt32.CertGetIssuerCertificateFromStore(_In_ HCERTSTORE hCertStore,_In_ PCCERT_CONTEXT pSubjectContext,_In_opt_ PCCERT_CONTEXT pPrevIssuerContext,_Inout_ DWORD *pdwFlags)
DWORD WINAPI clusapi.ClusterUpgradeFunctionalLevel(_In_ HCLUSTER hCluster,_In_ BOOL perform,_In_opt_ PCLUSTER_UPGRADE_PROGRESS_CALLBACK pfnProgressCallback,_In_opt_ PVOID pvCallbackArg)
uint32 None wvrcimprov.SmapiQueryPartnerPartitions([in] string ReplicationGroupName,[in] string PartitionId,[out] string PartnerComputerName,[out] string PartnerPartitionObjectId,[out] uint16 PartnerPercentSynced,[out] datetime PartnerLastSyncTime,[out] uint32 PartnerReplicationStatus)
public PropertyMetadata None.GetMetadata(Type forType None)
VOID None None.WdfControlDeviceInitSetShutdownNotification(_In_ PWDFDEVICE_INIT DeviceInit,_In_ PFN_WDF_DEVICE_SHUTDOWN_NOTIFICATION Notification,_In_ UCHAR Flags)
PDH_STATUS None pdh.PdhValidatePathEx(_In_opt_ PDH_HLOG hDataSource,_In_ LPCTSTR szFullPathBuffer)
PDH_STATUS None pdh.PdhValidatePathExW(_In_opt_ PDH_HLOG hDataSource,_In_ LPCTSTR szFullPathBuffer)
PDH_STATUS None pdh.PdhValidatePathExA(_In_opt_ PDH_HLOG hDataSource,_In_ LPCTSTR szFullPathBuffer)
HRESULT None fxscomex.get_ArchiveSizeHigh([out None None,retval] long *plSizeHigh)
DWORD None iphlpapi.GetIpForwardTable(_Out_ PMIB_IPFORWARDTABLE pIpForwardTable,_Inout_ PULONG pdwSize,_In_ BOOL bOrder)
BOOL WINAPI kernel32.FlsFree(_In_ DWORD dwFlsIndex)
HTREEITEM None None.TreeView_GetRoot(HWND hwndTV None)
private void None.menuItemHelpAbout_Click(Object sender None,EventArgs e None)
private void None.button1_Click(Object sender None,System.EventArgs e None)
NTSTATUS None None.WdfDeviceCreate(_Inout_ PWDFDEVICE_INIT *DeviceInit,_In_opt_ PWDF_OBJECT_ATTRIBUTES DeviceAttributes,_Out_ WDFDEVICE *Device)
PDH_STATUS None pdh.PdhOpenLog(_In_ LPCTSTR szLogFileName,_In_ DWORD dwAccessFlags,_In_ LPDWORD lpdwLogType,_In_ PDH_HQUERY hQuery,_In_ DWORD dwMaxSize,_In_ LPCTSTR szUserCaption,_Out_ PDH_HLOG *phLog)
PDH_STATUS None pdh.PdhOpenLogW(_In_ LPCTSTR szLogFileName,_In_ DWORD dwAccessFlags,_In_ LPDWORD lpdwLogType,_In_ PDH_HQUERY hQuery,_In_ DWORD dwMaxSize,_In_ LPCTSTR szUserCaption,_Out_ PDH_HLOG *phLog)
PDH_STATUS None pdh.PdhOpenLogA(_In_ LPCTSTR szLogFileName,_In_ DWORD dwAccessFlags,_In_ LPDWORD lpdwLogType,_In_ PDH_HQUERY hQuery,_In_ DWORD dwMaxSize,_In_ LPCTSTR szUserCaption,_Out_ PDH_HLOG *phLog)
HRESULT None msdrm.DRMClosePubHandle(_In_ DRMPUBHANDLE hPub)
LONG TSPIAPI None.TSPI_phoneGetRing(HDRVPHONE hdPhone None,LPDWORD lpdwRingMode None,LPDWORD lpdwVolume None)
NTSTATUS None None.WdfRequestRequeue(_In_ WDFREQUEST Request)
NTSTATUS None None.ZwAllocateVirtualMemory(_In_ HANDLE ProcessHandle,_Inout_ PVOID *BaseAddress,_In_ ULONG_PTR ZeroBits,_Inout_ PSIZE_T RegionSize,_In_ ULONG AllocationType,_In_ ULONG Protect)
public void None.OnItemAdded(ListMakerItem item None)
public void None.Remove(object item None)
uint32 None dnsserverpsprovider.RemoveByName([in] string ZoneName,[in] boolean PassThru,[in] string ComputerName,[in] boolean Force,[in] string ZoneScope,[in] string RRType,[in] string RecordData[],[in] string Name,[out] DnsServerResourceRecord cmdletOutput[])
HRESULT None oleaut32.VarR8FromR4(_In_ FLOAT fltIn,_Out_ DOUBLE *pdblOut)
DWORD WINAPI clusapi.ClusterGroupSetCloseEnum(_In_ HGROUPSETENUM hGroupCollectionEnum)
ULONG None wldap32.ldap_value_free(PCHAR *vals None)
ULONG None wldap32.ldap_value_freeW(PCHAR *vals None)
ULONG None wldap32.ldap_value_freeA(PCHAR *vals None)
HRESULT None propsys.InitPropVariantFromStringVector(_In_ PCWSTR *prgsz,_In_ ULONG cElems,_Out_ PROPVARIANT *ppropvar)
uint32 None cimwin32.SetWINSServer([in] string WINSPrimaryServer,[in] string WINSSecondaryServer)
public void None.CopyTo(int sourceIndex None,char[] destination None,int destinationIndex None,int count None)
HRESULT None None.GetRegisterState([out] MBN_REGISTER_STATE *registerState)
DWORD WINAPI clusapi.ClusterEnumEx(_In_ HCLUSENUMEX hClusterEnum,_In_ DWORD dwIndex,_Inout_ PCLUSTER_ENUM_ITEM pItem,_Inout_ LPDWORD cbItem)
DWORD None iphlpapi.Icmp6ParseReplies(_In_ LPVOID ReplyBuffer,_In_ DWORD ReplySize)
HRESULT None wuapi.get_DeltaCompressedContentAvailable([out] VARIANT_BOOL *retval)
NTSTATUS None None.SpExportSecurityContext(_In_ LSA_SEC_HANDLE phContext,_In_ ULONG fFlags,_Out_ PSecBuffer pPackedContext,_Out_ PHANDLE pToken)
ULONG None propsys.PropVariantGetElementCount(_In_ REFPROPVARIANT propvar)
DWORD WINAPI mprapi.MprAdminDeviceEnum(_In_ MPR_SERVER_HANDLE hMprServer,_In_ DWORD dwLevel,_Out_ LPBYTE *lplpbBuffer,_Out_ LPDWORD lpdwTotalEntries)
public DialogResult None.DialogNotification(string text None,IEnumerable buttons None,int timeout None,string imagePath None)
HRESULT None wsdapi.BeginGetMetadata([out] IWSDAsyncResult **ppResult)
HRESULT None None.get_EventHandlers(IWMSPlugins** pVal None)
DWORD None mprapi.MprAdminInterfaceGetCredentialsEx(_In_ MPR_SERVER_HANDLE hMprServer,_In_ HANDLE hInterface,_In_ DWORD dwLevel,_Out_ LPBYTE *lplpbBuffer)
MI_INLINE MI_Result mi.MI_OperationOptions_SetPromptUserRegularMode(_Inout_ MI_OperationOptions *options,_In_ MI_CallbackMode mode,_In_ MI_Boolean ackValue)
uint32 None dnsserverpsprovider.Remove([in] string ComputerName,[in] boolean Force,[in] string Name,[in] boolean PassThru,[out] DnsServerResponseRateLimitingExceptionlist cmdletOutput)
int None None.main(void None None)
NTSTATUS None None.LsaApLogonUserEx(_In_ PLSA_CLIENT_REQUEST ClientRequest,_In_ SECURITY_LOGON_TYPE LogonType,_In_ PVOID AuthenticationInformation,_In_ PVOID ClientAuthenticationBase,_In_ ULONG AuthenticationInformationLength,_Out_ PVOID *ProfileBuffer,_Out_ PULONG ProfileBufferLength,_Out_ PLUID LogonId,_Out_ PNTSTATUS SubStatus,_Out_ PLSA_TOKEN_INFORMATION_TYPE TokenInformationType,_Out_ PVOID *TokenInformation,_Out_ PUNICODE_STRING *AccountName,_Out_ PUNICODE_STRING *AuthenticatingAuthority,_Out_ PUNICODE_STRING *MachineName)
LONG WINAPI tapi32.lineSetCallData(HCALL hCall None,LPVOID lpCallData None,DWORD dwSize None)
LPVOID WINAPI crypt32.CryptMemAlloc(_In_ ULONG cbSize)
HRESULT None None.Language(LPWSTR *ppszLanguage None)
HRESULT None msdrm.DRMConstructCertificateChain(_In_ UINT cCertificates,_In_ PWSTR *rgwszCertificates,_Inout_ UINT *pcChain,_Out_ PWSTR wszChain)
BOOLEAN WINAPI powrprof.DeletePwrScheme(_In_ UINT uiIndex)
LONG TSPIAPI None.TSPI_lineConfigDialog(DWORD dwDeviceID None,HWND hwndOwner None,LPCWSTR lpszDeviceClass None)
BOOL None spoolss.WritePrinter(_In_ HANDLE hPrinter,_In_ LPVOID pBuf,_In_ DWORD cbBuf,_Out_ LPDWORD pcWritten)
STDAPI None mf.MFLoadSignedLibrary(_In_ LPCWSTR pszName,_Out_ IMFSignedLibrary **ppLib)
public Point None.PointFromScreen(Point point None)
public int None.GetTokenFor(byte[] signature None)
HRESULT None oleaut32.VarCyFromI2(_In_ SHORT sIn,_Out_ CY *pcyOut)
HRESULT None oleaut32.VarBoolFromStr(_In_ LPCOLESTR strIn,_In_ LCID lcid,_In_ ULONG dwFlags,_Out_ VARIANT_BOOL *pboolOut)
BOOLEAN WINAPI powrprof.EnumPwrSchemes(_In_ PWRSCHEMESENUMPROC lpfnPwrSchemesEnumProc,_In_ LPARAM lParam)
DWORD WINAPI clusapi.RemoveCrossClusterGroupSetToGroupSetDependency(_In_ HGROUPSET hDependentGroupSet,_In_ LPCWSTR lpRemoteClusterName,_In_ LPCWSTR lpRemoteGroupSetName)
HRESULT None None.InitPropVariantFromBoolean(_In_ BOOL fVal,_Out_ PROPVARIANT *ppropvar)
DWORD WINAPI advapi32.GetSecurityDescriptorLength(_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor)
HRESULT None None.get_responseXML(IDispatch** ppXmlDom None)
private void None.MyPopupEventHandler(Object sender None,EventArgs e None)
HCLUSTER None clusapi.CreateCluster(_In_ PCREATE_CLUSTER_CONFIG pConfig,_In_opt_ PCLUSTER_SETUP_PROGRESS_CALLBACK pfnProgressCallback,_In_opt_ PVOID pvCallbackArg)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsGroupMbrInqDone(RPC_NS_HANDLE *InquiryContext None)
NETIOAPI_API None iphlpapi.GetIpNetTable2(_In_ ADDRESS_FAMILY Family,_Out_ PMIB_IPNET_TABLE2 *Table)
BOOLEAN None sspicli.SspiIsAuthIdentityEncrypted(_In_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE EncryptedAuthData)
HRESULT None fxscomex.OnIncomingJobRemoved(IFaxServer *pFaxServer None,BSTR bstrJobId None)
HRESULT None None.get_Duration(long* pVal None)
NTSTATUS None None.AddCredential(_In_ PLUID LogonId,_In_ ULONG AuthenticationPackage,_In_ PLSA_STRING PrimaryKeyValue,_In_ PLSA_STRING Credentials)
uint32 None ipmiprv.RequestStateChange([in] uint16 RequestedState,[out] CIM_ConcreteJob Job,[in] datetime TimeoutPeriod)
HRESULT WINAPI webservices.WsResetMessage(_In_ WS_MESSAGE* message,_In_opt_ WS_ERROR* error)
protected void None.InsertItem(int index None,T item None)
public None None.AmbiguousMatchException(String message None,Exception inner None)
long None None._InterlockedExchange(long * Target,long Value None)
LONG WINAPI tapi32.lineInitialize(LPHLINEAPP lphLineApp None,HINSTANCE hInstance None,LINECALLBACK lpfnCallback None,LPCSTR lpszAppName None,LPDWORD lpdwNumDevs None)
HRESULT None None.CreateOffsetTransform(D2D1_POINT_2L offset None,[out] ID2D1OffsetTransform **transform)
BOOL WINAPI advapi32.ImpersonateLoggedOnUser(_In_ HANDLE hToken)
LONG TSPIAPI None.TSPI_phoneGetVolume(HDRVPHONE hdPhone None,DWORD dwHookSwitchDev None,LPDWORD lpdwVolume None)
HRESULT None rtworkq.RtwqInvokeCallback(IRtwqAsyncResult *result None)
INT None None.ListView_GetSelectionMark(HWND hwndLV None)
HRESULT None mf.MFTranscodeGetAudioOutputAvailableTypes(_In_ REFGUID guidSubType,_In_ DWORD dwMFTFlags,_In_ IMFAttributes *pCodecConfig,_Out_ IMFCollection **ppAvailableTypes)
HRESULT None oleaut32.VarI8FromR4(_In_ FLOAT fltIn,_Out_ LONG64 *pi64Out)
LPVOID WINAPI kernel32.ConvertThreadToFiberEx(_In_opt_ LPVOID lpParameter,_In_ DWORD dwFlags)
HRESULT None mf.MFCreateSampleCopierMFT(_Out_ IMFTransform **ppCopierMFT)
HRESULT None None.put_ConnectedPlayers(long newVal None)
HRESULT None None.SetMute(BOOL fMute None)
DWORD None iphlpapi.IcmpParseReplies(_In_ LPVOID ReplyBuffer,_In_ DWORD ReplySize)
public BindingExpression None.GetBindingExpression(DependencyProperty dp None)
ULONG None wldap32.ldap_delete(_In_ LDAP *ld,_In_ PCHAR dn)
ULONG None wldap32.ldap_deleteW(_In_ LDAP *ld,_In_ PCHAR dn)
ULONG None wldap32.ldap_deleteA(_In_ LDAP *ld,_In_ PCHAR dn)
BOOL None imm32.ImmSetStatusWindowPos(_In_ HIMC hIMC,_In_ LPPOINT lpptPos)
HRESULT None fxscomex.get_InboundRouting([out None None,retval] IFaxInboundRouting **ppFaxInboundRouting)
MI_INLINE MI_Result None.MI_PropertySet_Clear(_Inout_ MI_PropertySet *self)
LONG None propsys.PropVariantToInt32WithDefault(_In_ REFPROPVARIANT propvarIn,_In_ LONG lDefault)
BOOL WINAPI winhttp.WinHttpSetOption(_In_ HINTERNET hInternet,_In_ DWORD dwOption,_In_ LPVOID lpBuffer,_In_ DWORD dwBufferLength)
HRESULT None ole32.MonikerCommonPrefixWith(_In_ LPMONIKER pmkThis,_In_ LPMONIKER pmkOther,_Out_ LPMONIKER *ppmkCommon)
VOID WINAPI kernel32.GetCurrentThreadStackLimits(_Out_ PULONG_PTR LowLimit,_Out_ PULONG_PTR HighLimit)
BOOL None advapi32.CredReadDomainCredentials(_In_ PCREDENTIAL_TARGET_INFORMATION TargetInfo,_In_ DWORD Flags,_Out_ DWORD *Count,_Out_ PCREDENTIAL **Credentials)
BOOL None advapi32.CredReadDomainCredentialsW(_In_ PCREDENTIAL_TARGET_INFORMATION TargetInfo,_In_ DWORD Flags,_Out_ DWORD *Count,_Out_ PCREDENTIAL **Credentials)
BOOL None advapi32.CredReadDomainCredentialsA(_In_ PCREDENTIAL_TARGET_INFORMATION TargetInfo,_In_ DWORD Flags,_Out_ DWORD *Count,_Out_ PCREDENTIAL **Credentials)
HRESULT None None.get_CPUUtilization(long* pVal None)
STDAPI None ntshrui.CanShareFolderW(_In_ LPCWSTR pszPath)
STDAPI None ntshrui.CanShareFolderW(_In_ LPCWSTR pszPath)
UINT None None.TreeView_GetIndent(HWND hwndTV None)
DWORD None mprapi.MprAdminBufferFree(_In_ LPVOID pBuffer)
uint32 None wvrcimprov.WvrSuspendReplicationGroup([in] string ReplicationGroupName)
PPERF_COUNTERSET_INSTANCE None advapi32.PerfCreateInstance(_In_ HANDLE hProvider,_In_ LPCGUID CounterSetGuid,_In_ LPCWSTR szInstanceName,_In_ ULONG dwInstance)
HPALETTE None msvfw32.DrawDibGetPalette(HDRAWDIB hdd None)
public void None.Transform(Point4D[] points None)
LONG TSPIAPI None.TSPI_lineSetMediaMode(HDRVCALL hdCall None,DWORD dwMediaMode None)
BOOL WINAPI crypt32.CertSetEnhancedKeyUsage(_In_ PCCERT_CONTEXT pCertContext,_In_ PCERT_ENHKEY_USAGE pUsage)
HRESULT None srmsvc.get_ValueDefinitions([out None None,retval] IFsrmCollection **valueDefinitions)
BOOL None kernel32.GetNLSVersionEx(_In_ NLS_FUNCTION function,_In_opt_ LPCWSTR lpLocaleName,_Inout_ LPNLSVERSIONINFOEX lpVersionInformation)
BOOL WINAPI None.CertStoreProvReadCTL(_In_ HCERTSTOREPROV hStoreProv,_In_ PCCTL_CONTEXT pStoreCtlContext,_In_ DWORD dwFlags,_Out_ PCCTL_CONTEXT *ppProvCtlContext)
HRESULT None oleaut32.VarUI4FromI2(_In_ SHORT uiIn,_Out_ ULONG *pulOut)
PDH_STATUS None pdh.PdhGetDataSourceTimeRangeH(_In_ PDH_HLOG hDataSource,_Out_ LPDWORD pdwNumEntries,_Out_ PPDH_TIME_INFO pInfo,_In_ LPDWORD pdwBufferSize)
HRESULT None None.GetWindowInputRectangle([out] IInkRectangle **WindowInputRectangle)
BOOL WINAPI winhttp.WinHttpQueryAuthSchemes(_In_ HINTERNET hRequest,_Out_ LPDWORD lpdwSupportedSchemes,_Out_ LPDWORD lpdwFirstScheme,_Out_ LPDWORD pdwAuthTarget)
uint32 None dnsserverpsprovider.AddByRt([in] string IntermediateHost,[in] string ZoneName,[in] uint16 Preference,[in] datetime TimeToLive,[in] boolean AllowUpdateAny,[in] string Name,[in] string ComputerName,[in] boolean AgeRecord,[in] boolean RT,[in] boolean PassThru,[in] string ZoneScope,[out] DnsServerResourceRecord cmdletOutput)
BOOL None kernel32.GetProcessGroupAffinity(_In_ HANDLE hProcess,_Inout_ PUSHORT GroupCount,_Out_ PUSHORT GroupArray)
UINT None msi.MsiSetFeatureAttributes(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szFeature,_In_ DWORD dwAttributes)
UINT None msi.MsiSetFeatureAttributesW(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szFeature,_In_ DWORD dwAttributes)
UINT None msi.MsiSetFeatureAttributesA(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szFeature,_In_ DWORD dwAttributes)
HRESULT None None.Clone([out None None,retval] IXpsOMPath **path)
BOOLEAN _cdecl None.VERIFYSERVERCERT(PLDAP Connection None,PCCERT_CONTEXT *ppServerCert None)
BOOL None shell32.SHTestTokenMembership(_In_opt_ HANDLE hToken,ULONG ulRID None)
HRESULT None None.get_SharedPlaylist(IWMSPlaylist** pVal None)
PDH_STATUS None pdh.PdhGetRawCounterArray(_In_ PDH_HCOUNTER hCounter,_Inout_ LPDWORD lpdwBufferSize,_Out_ LPDWORD lpdwItemCount,_Out_ PPDH_RAW_COUNTER_ITEM ItemBuffer)
PDH_STATUS None pdh.PdhGetRawCounterArrayW(_In_ PDH_HCOUNTER hCounter,_Inout_ LPDWORD lpdwBufferSize,_Out_ LPDWORD lpdwItemCount,_Out_ PPDH_RAW_COUNTER_ITEM ItemBuffer)
PDH_STATUS None pdh.PdhGetRawCounterArrayA(_In_ PDH_HCOUNTER hCounter,_Inout_ LPDWORD lpdwBufferSize,_Out_ LPDWORD lpdwItemCount,_Out_ PPDH_RAW_COUNTER_ITEM ItemBuffer)
HRESULT WINAPI webservices.WsAbandonCall(_In_ WS_SERVICE_PROXY* serviceProxy,_In_ ULONG callId,_In_opt_ WS_ERROR* error)
HRESULT None propsys.InitVariantFromResource(_In_ HINSTANCE hinst,_In_ UINT id,_Out_ VARIANT *pvar)
HRESULT None propsys.VariantToStringArrayAlloc(_In_ REFVARIANT var,_Out_ PWSTR **pprgsz,_In_ ULONG crgsz,_Out_ ULONG *pcElem)
public None None.Decimal(float value None)
LONG WINAPI winscard.SCardGetTransmitCount(_In_ SCARDHANDLE hCard,_Out_ LPDWORD pcTransmitCount)
BOOL WINAPI user32.GetMenuInfo(_In_ HMENU hmenu,_Inout_ LPMENUINFO lpcmi)
HRESULT WINAPI webservices.WsRevokeSecurityContext(_In_ WS_SECURITY_CONTEXT* securityContext,_In_opt_ WS_ERROR* error)
HRESULT None propsys.PropVariantToUInt16VectorAlloc(_In_ REFPROPVARIANT propvar,_Out_ USHORT **pprgn,_Out_ ULONG *pcElem)
public boolean None.Equals(Object obj None)
HRESULT None windowscodecs.IWICBitmapCodecInfo_GetFileExtensions_Proxy(_In_ IWICBitmapCodecInfo *THIS_PTR,_In_ UINT cchFileExtensions,_Inout_ WCHAR *wzFileExtensions,_Inout_ UINT *pcchActual)
private void None.myButtonPrint_OnClick(Object sender None,System.EventArgs e None)
HRESULT None windowscodecs.IWICBitmapEncoder_CreateNewFrame_Proxy(_In_ IWICBitmapEncoder *THIS_PTR,_Out_ IWICBitmapFrameEncode **ppIFrameEncode,_Inout_ IPropertyBag2 **ppIEncoderOptions)
HRESULT None None.GetDirectedTargetCount([out] UINT *pcDirectedTarget)
DWORD None None.DateTime_GetSystemtime(HWND hwndDP None,LPSYSTEMTIME lpSysTime None)
DWORD None None.GetMacAddressFromBlob(HBLOB hBlob None,const char* pOwnerName,const char* pCategoryName,const char* pTagName,BYTE* pMacAddress None)
HRESULT None msdrm.DRMDeconstructCertificateChain(_In_ PWSTR wszChain,_In_ UINT iWhich,_Inout_ UINT *pcCert,_Out_ PWSTR wszCert)
HRESULT None oleaut32.VarDecAbs(_In_ LPDECIMAL pdecIn,_Out_ LPDECIMAL pdecResult)
public void None.IncludeType(Type type None)
LONG TSPIAPI None.TSPI_lineMonitorDigits(HDRVCALL hdCall None,DWORD dwDigitModes None)
LPSTR WINAPI nmapi.GetPropertyText(_In_ HFRAME hFrame,_In_ LPPROPERTYINST lpPI,_In_ LPSTR szBuffer,_In_ DWORD BufferSize)
HANDLE WINAPI None.WIMCaptureImage(HANDLE hWim None,PCWSTR pszPath None,DWORD dwCaptureFlags None)
LONG TSPIAPI None.TSPI_lineMSPIdentify(DWORD dwDeviceID None,GUID *pCLSID None)
HRESULT None mf.MFCreateCredentialCache(IMFNetCredentialCache **ppCache None)
HRESULT WINAPI wdsclientapi.WdsCliGetImageName(_In_ HANDLE hIfh,_Out_ PWSTR *ppwszValue)
LONG NTAPI ntdll.RtlIpv6StringToAddress(_In_ PCTSTR S,_Out_ PCTSTR *Terminator,_Out_ IN6_ADDR *Addr)
LONG NTAPI ntdll.RtlIpv6StringToAddressW(_In_ PCTSTR S,_Out_ PCTSTR *Terminator,_Out_ IN6_ADDR *Addr)
LONG NTAPI ntdll.RtlIpv6StringToAddressA(_In_ PCTSTR S,_Out_ PCTSTR *Terminator,_Out_ IN6_ADDR *Addr)
HRESULT None authui.GetAccountOptions([out] CREDENTIAL_PROVIDER_ACCOUNT_OPTIONS *credentialProviderAccountOptions)
HRESULT None comctl32.GetBkColor([out] COLORREF *pclr)
UINT WINAPI msi.MsiBeginTransaction(_In_ LPCWSTR szTransactionName,_In_ DWORD dwTransactionAttributes,_Out_ MSIHANDLE *hTransactionID,_Out_ HANDLE *phChangeOfOwnerEvent)
UINT WINAPI msi.MsiBeginTransactionW(_In_ LPCWSTR szTransactionName,_In_ DWORD dwTransactionAttributes,_Out_ MSIHANDLE *hTransactionID,_Out_ HANDLE *phChangeOfOwnerEvent)
UINT WINAPI msi.MsiBeginTransactionA(_In_ LPCWSTR szTransactionName,_In_ DWORD dwTransactionAttributes,_Out_ MSIHANDLE *hTransactionID,_Out_ HANDLE *phChangeOfOwnerEvent)
BOOL None user32.PrintWindow(HWND hwnd None,HDC hdcBlt None,UINT nFlags None)
BOOL WINAPI kernel32.UpdateProcThreadAttribute(_Inout_ LPPROC_THREAD_ATTRIBUTE_LIST lpAttributeList,_In_ DWORD dwFlags,_In_ DWORD_PTR Attribute,_In_ PVOID lpValue,_In_ SIZE_T cbSize,_Out_opt_ PVOID lpPreviousValue,_In_opt_ PSIZE_T lpReturnSize)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsEntryObjectInqNext(RPC_NS_HANDLE InquiryContext None,UUID *ObjUuid None)
HRESULT None None.get_Streams([out] VARIANT *pVariant)
HRESULT None oleaut32.VarI2FromBool(_In_ VARIANT_BOOL boolIn,_Out_ SHORT *psOut)
UINT None msi.MsiSourceListClearMediaDisk(_In_ LPCTSTR szProductCodeOrPatchCode,_In_opt_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD dwOptions,_In_ DWORD dwDiskID)
UINT None msi.MsiSourceListClearMediaDiskW(_In_ LPCTSTR szProductCodeOrPatchCode,_In_opt_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD dwOptions,_In_ DWORD dwDiskID)
UINT None msi.MsiSourceListClearMediaDiskA(_In_ LPCTSTR szProductCodeOrPatchCode,_In_opt_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD dwOptions,_In_ DWORD dwDiskID)
LONGLONG None propsys.PropVariantToInt64WithDefault(_In_ REFPROPVARIANT propvarIn,_In_ LONGLONG llDefault)
NTSTATUS NTAPI None.Msv1_0SubAuthenticationFilter(_In_ NETLOGON_LOGON_INFO_CLASS LogonLevel,_In_ PVOID LogonInformation,_In_ ULONG Flags,_In_ PUSER_ALL_INFORMATION UserAll,_Out_ PULONG WhichFields,_Out_ PULONG UserFlags,_Out_ PBOOLEAN Authoritative,_Out_ PLARGE_INTEGER LogoffTime,_Out_ PLARGE_INTEGER KickoffTime)
HRESULT None oleaut32.VarCyFromR4(_In_ FLOAT fltIn,_Out_ CY *pcyOut)
HRESULT None None.AddPlaybackEffect(REFGUID clsid None,IMFPMediaPlayer *pPlayer None)
HRESULT None None.UIntPtrAdd(_In_ UINT_PTR uAugend,_In_ UINT_PTR uAddend,_Out_ UINT_PTR *puResult)
protected void None.OnPaint(PaintEventArgs e None)
VOID None None.WdfDeviceInitSetExclusive(_In_ PWDFDEVICE_INIT DeviceInit,_In_ BOOLEAN IsExclusive)
PDH_STATUS None pdh.PdhCollectQueryDataWithTime(_Inout_ PDH_HQUERY hQuery,_Out_ LONGLONG *pllTimeStamp)
HRESULT None rtworkq.RtwqRemovePeriodicCallback(_In_ DWORD dwKey)
HRESULT None None.get_StreamingRTSPPlayers(long* pVal None)
PDH_STATUS None pdh.PdhAddEnglishCounter(_In_ PDH_HQUERY hQuery,_In_ LPCTSTR szFullCounterPath,_In_ DWORD_PTR dwUserData,_Out_ PDH_HCOUNTER *phCounter)
PDH_STATUS None pdh.PdhAddEnglishCounterW(_In_ PDH_HQUERY hQuery,_In_ LPCTSTR szFullCounterPath,_In_ DWORD_PTR dwUserData,_Out_ PDH_HCOUNTER *phCounter)
PDH_STATUS None pdh.PdhAddEnglishCounterA(_In_ PDH_HQUERY hQuery,_In_ LPCTSTR szFullCounterPath,_In_ DWORD_PTR dwUserData,_Out_ PDH_HCOUNTER *phCounter)
DWORD WINAPI nmapi.GetFrameSrcAddressOffset(HFRAME hFrame None,DWORD AddressType None,LPDWORD AddressLength None)
HRESULT None None.GetPendingRows(HCHAPTER hReserved None,DBPENDINGSTATUS dwRowStatus None,DBCOUNTITEM *pcPendingRows None,HROW **prgPendingRows None,DBPENDINGSTATUS **prgPendingStatus None)
PDH_STATUS None pdh.PdhGetDefaultPerfObjectH(_In_ PDH_HLOG hDataSource,_In_ LPCTSTR szMachineName,_Out_ LPTSTR szDefaultObjectName,_Inout_ LPDWORD pcchBufferSize)
PDH_STATUS None pdh.PdhGetDefaultPerfObjectHW(_In_ PDH_HLOG hDataSource,_In_ LPCTSTR szMachineName,_Out_ LPTSTR szDefaultObjectName,_Inout_ LPDWORD pcchBufferSize)
PDH_STATUS None pdh.PdhGetDefaultPerfObjectHA(_In_ PDH_HLOG hDataSource,_In_ LPCTSTR szMachineName,_Out_ LPTSTR szDefaultObjectName,_Inout_ LPDWORD pcchBufferSize)
HRESULT None None.FinishCommandList(BOOL RestoreDeferredContextState None,[out None None,optional] ID3D11CommandList **ppCommandList)
protected void None.CopyPersonalizationState(WebPart webPartA None,WebPart webPartB None)
HRESULT None None.GetCapabilities([out] DWORD *pdwCapabilities)
protected Size None.GetSize(int rowIndex None)
BOOL None user32.SetMenuContextHelpId(HMENU hmenu None,DWORD dwContextHelpId None)
DWORD WINAPI wlanapi.WFDOpenHandle(_In_ DWORD dwClientVersion,_Out_ PDWORD pdwNegotiatedVersion,_Out_ PHANDLE phClientHandle)
HRESULT None oleaut32.VarI1FromUI2(_In_ USHORT uiIn,_Out_ CHAR *pcOut)
DWORD WINAPI iphlpapi.IcmpSendEcho2(_In_ HANDLE IcmpHandle,_In_opt_ HANDLE Event,_In_opt_ PIO_APC_ROUTINE ApcRoutine,_In_opt_ PVOID ApcContext,_In_ IPAddr DestinationAddress,_In_ LPVOID RequestData,_In_ WORD RequestSize,_In_opt_ PIP_OPTION_INFORMATION RequestOptions,_Out_ LPVOID ReplyBuffer,_In_ DWORD ReplySize,_In_ DWORD Timeout)
INT None ws2_32.WSAInstallServiceClass(_In_ LPWSASERVICECLASSINFO lpServiceClassInfo)
INT None ws2_32.WSAInstallServiceClassW(_In_ LPWSASERVICECLASSINFO lpServiceClassInfo)
INT None ws2_32.WSAInstallServiceClassA(_In_ LPWSASERVICECLASSINFO lpServiceClassInfo)
HRESULT None None.put_PlayerBandwidth(long newVal None)
HRESULT None None.Clone([out None None,retval] IInkDisp **NewInk)
DWORD None iphlpapi.SetTcpEntry(_In_ PMIB_TCPROW pTcpRow)
HRESULT None cscsvc.IsCreatedOffline([out] BOOL *pbCreatedOffline)
uint32 None cimwin32.SetIPConnectionMetric([in] uint32 IPConnectionMetric)
HRESULT None None.put_CurrentPlaylistEntry(IXMLDOMElement* pPlaylistEntry None)
SECURITY_STATUS SEC_Entry secur32.DecryptMessage(_In_ PCtxtHandle phContext,_Inout_ PSecBufferDesc pMessage,_In_ ULONG MessageSeqNo,_Out_ PULONG pfQOP)
HRESULT None None.GetStream([out None None,retval] IStream **readerStream)
uint32 None wvrcimprov.SyncGroup([in] string ComputerName,[in] string Name)
protected void None.StopListening(Object source None)
BOOL None None.TreeView_Expand(HWND hwndTV None,HTREEITEM hItem None,UINT flag None)
ULONG None wldap32.ldap_msgfree(_In_ LDAPMessage *res)
private void None.AutoSizeControl(Control control None,int textPadding None)
BOOL WINAPI dbghelp.SymGetSearchPath(_In_ HANDLE hProcess,_Out_ PTSTR SearchPath,_In_ DWORD SearchPathLength)
BOOL WINAPI dbghelp.SymGetSearchPathW(_In_ HANDLE hProcess,_Out_ PTSTR SearchPath,_In_ DWORD SearchPathLength)
BOOL WINAPI dbghelp.SymGetSearchPath(_In_ HANDLE hProcess,_Out_ PTSTR SearchPath,_In_ DWORD SearchPathLength)
protected void None.OnPreviewMouseLeftButtonDown(MouseButtonEventArgs e None)
HRESULT None propsys.VariantToUInt32Array(_In_ REFVARIANT var,_Out_ ULONG *prgn,_In_ ULONG crgn,_Out_ ULONG *pcElem)
protected void None.OnPreviewStylusInAirMove(StylusEventArgs e None)
BOOL WINAPI crypt32.CryptUnregisterOIDFunction(_In_ DWORD dwEncodingType,_In_ LPCSTR pszFuncName,_In_ LPCSTR pszOID)
HRESULT None None.LoadComputeShader(REFGUID resourceId None,BYTE *shaderBuffer None,UINT32 shaderBufferCount None)
HRESULT None oleaut32.VarDecFromBool(_In_ VARIANT_BOOL boolIn,_Out_ DECIMAL *pdecOut)
protected void None.CopyPersonalizationState(WebPart webPartA None,WebPart webPartB None)
HRESULT None oleaut32.OleCreatePropertyFrame(_In_ HWND hwndOwner,_In_ UINT x,_In_ UINT y,_In_ LPCOLESTR lpszCaption,_In_ ULONG cObjects,_In_ LPUNKNOWN *ppUnk,_In_ ULONG cPages,_In_ LPCLSID pPageClsID,_In_ LCID lcid,_In_ DWORD dwReserved,_In_ LPVOID pvReserved)
HRESULT None oleaut32.VarI4FromI2(_In_ SHORT sIn,_Out_ LONG *plOut)
LONG TSPIAPI None.TSPI_lineGatherDigits(HDRVCALL hdCall None,DWORD dwEndToEndID None,DWORD dwDigitModes None,LPWSTR lpsDigits None,DWORD dwNumDigits None,LPCWSTR lpszTerminationDigits None,DWORD dwFirstDigitTimeout None,DWORD dwInterDigitTimeout None)
HRESULT None None.GetGeometryShaderDesc(D3DX11_PASS_SHADER_DESC *pDesc None)
public String None.ConvertToString(Object value None,IValueSerializerContext context None)
DWORD None rasapi32.RasGetSubEntryHandle(_In_ HRASCONN hRasConn,_In_ DWORD dwSubEntry,_Out_ LPHRASCONN lphRasConn)
DWORD None rasapi32.RasGetSubEntryHandleW(_In_ HRASCONN hRasConn,_In_ DWORD dwSubEntry,_Out_ LPHRASCONN lphRasConn)
DWORD None rasapi32.RasGetSubEntryHandleA(_In_ HRASCONN hRasConn,_In_ DWORD dwSubEntry,_Out_ LPHRASCONN lphRasConn)
HRESULT None oleaut32.VarR4FromI2(_In_ SHORT sIn,_Out_ FLOAT *pfltOut)
LONG TSPIAPI None.TSPI_phoneGetGain(HDRVPHONE hdPhone None,DWORD dwHookSwitchDev None,LPDWORD lpdwGain None)
HRESULT None oleaut32.VarUI2FromDate(_In_ DATE dateIn,_Out_ USHORT *puiOut)
INT None ws2_32.WSAGetServiceClassInfo(_In_ LPGUID lpProviderId,_In_ LPGUID lpServiceClassId,_Inout_ LPDWORD lpdwBufferLength,_Out_ LPWSASERVICECLASSINFO lpServiceClassInfo)
INT None ws2_32.WSAGetServiceClassInfoW(_In_ LPGUID lpProviderId,_In_ LPGUID lpServiceClassId,_Inout_ LPDWORD lpdwBufferLength,_Out_ LPWSASERVICECLASSINFO lpServiceClassInfo)
INT None ws2_32.WSAGetServiceClassInfoA(_In_ LPGUID lpProviderId,_In_ LPGUID lpServiceClassId,_Inout_ LPDWORD lpdwBufferLength,_Out_ LPWSASERVICECLASSINFO lpServiceClassInfo)
UINT None msi.MsiSequence(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szTable,_In_ INT iSequenceMode)
UINT None msi.MsiSequenceW(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szTable,_In_ INT iSequenceMode)
UINT None msi.MsiSequenceA(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szTable,_In_ INT iSequenceMode)
NET_API_STATUS None netapi32.NetUseAdd(_In_ LMSTR UncServerName,_In_ DWORD Level,_In_ LPBYTE Buf,_Out_ LPDWORD ParmError)
DWORD WINAPI clusapi.RemoveCrossClusterGroupSetToGroupSetDependency(_In_ HGROUPSET hDependentGroupSet,_In_ LPCWSTR lpRemoteClusterName,_In_ LPCWSTR lpRemoteGroupSetName)
HRESULT None None.get_length(long *dataLength None)
BOOL None None.Edit_ShowBalloonTip(HWND hwnd None,PEDITBALLOONTIP peditballoontip None)
public boolean None.IsSubsetOf(IPermission target None)
DWORD WINAPI iphlpapi.SetIpStatisticsEx(_In_ PMIB_IPSTATS pIpStats,ULONG Family None)
DWORD None imm32.ImmGetProperty(_In_ HKL hKL,_In_ DWORD fdwIndex)
DWORD None mprapi.MprAdminInterfaceGetInfo(_In_ MPR_SERVER_HANDLE hMprServer,_In_ HANDLE hInterface,_In_ DWORD dwLevel,_In_ LPBYTE *lplpbBuffer)
HRESULT STDAPI cldapi.CfGetPlaceholderStateFromAttributeTag(_In_ DWORD FileAttributes,_In_ DWORD ReparseTag)
LONG WINAPI tapi32.lineGetProviderList(DWORD dwAPIVersion None,LPLINEPROVIDERLIST lpProviderList None)
LONG WINAPI tapi32.lineGetProviderListW(DWORD dwAPIVersion None,LPLINEPROVIDERLIST lpProviderList None)
LONG WINAPI tapi32.lineGetProviderListA(DWORD dwAPIVersion None,LPLINEPROVIDERLIST lpProviderList None)
NTSTATUS None None.GetCredentials(_In_ PLUID LogonId,_In_ ULONG AuthenticationPackage,_Inout_ PULONG QueryContext,_In_ BOOLEAN RetrieveAllCredentials,_Inout_ PLSA_STRING PrimaryKeyValue,_Out_ PULONG PrimaryKeyLength,_Out_ PLSA_STRING Credentials)
HRESULT None None.get_OSProductType(WMS_OS_PRODUCT_TYPE* pVal None)
HRESULT None None.get_StreamingPlayers(long* pVal None)
HRESULT None None.get_FileBytesRead(VARIANT* pVal None)
private void None.button1_Click(Object sender None,System.EventArgs e None)
HRESULT None oleaut32.VarUI1FromUI4(_In_ ULONG ulIn,_Out_ BYTE *pbOut)
HRESULT None None.GetDescriptionCount(DWORD* pdwNumDescriptions None)
public String None.GetString(String name None,boolean ignoreCase None)
protected void None.OnBackgroundImageLayoutChanged(EventArgs e None)
BOOLEAN WINAPI powrprof.WriteGlobalPwrPolicy(_In_ PGLOBAL_POWER_POLICY pGlobalPowerPolicy)
BOOL None None.ListView_SortItemsEx(HWND hwnd None,PFNLVCOMPARE pfnCompare None,LPARAM lParamSort None)
uint32 None netpeerdistcim.Add_BCDataCacheExtensionBySizeBytes([in] uint64 SizeBytes,[in] string Path,[in] boolean PassThru,[in] boolean Force,[out] MSFT_NetBranchCacheDataCacheExtension cmdletOutput)
public void None.OnItemRemoved(ListMakerItem item None)
protected void None.ProtectedRemoveListener(Object source None,IWeakEventListener listener None)
ULONG None wldap32.ldap_close_extended_op(_In_ LDAP *ld,_In_ ULONG MessageNumber)
HRESULT None None.put_PlayerBandwidth(long Val None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcObjectSetInqFn(RPC_OBJECT_INQ_FN InquiryFn None)
ULONG None wldap32.ldap_delete_s(_In_ LDAP *ld,_In_ PCHAR dn)
ULONG None wldap32.ldap_delete_sW(_In_ LDAP *ld,_In_ PCHAR dn)
ULONG None wldap32.ldap_delete_sA(_In_ LDAP *ld,_In_ PCHAR dn)
PSLIST_ENTRY WINAPI ntdll.RtlInterlockedPushEntrySList(_In_ PSLIST_HEADER ListHead,_In_ PSLIST_ENTRY ListEntry)
HRESULT None scardssp.get_ReplyStatusSW1([out] LPBYTE pbySW1)
public Point None.PointToScreen(Point point None)
BOOL None None.TreeView_GetItemPartRect(HWND hwnd None,HTREEITEM hitem None,RECT *prc None,TVITEMPART *partid None)
private void None.myButtonPrint_OnClick(Object sender None,System.EventArgs e None)
DWORD None mprapi.MprAdminInterfaceGetHandle(_In_ MPR_SERVER_HANDLE hMprServer,_In_ LPWSTR lpwsInterfaceName,_Out_ HANDLE *phInterface,_In_ BOOL fIncludeClientInterfaces)
HANDLE STDAPI cldapi.CfGetWin32HandleFromProtectedHandle(_In_ HANDLE ProtectedHandle)
HRESULT None None.get_StreamFilters(IWMSPlugins** pVal None)
BOOL WINAPI mssign32.PvkPrivateKeyAcquireContextFromMemory(_In_ LPCWSTR pwszProvName,_In_ DWORD dwProvType,_In_ BYTE *pbData,_In_ DWORD cbData,_In_ HWND hwndOwner,_In_ LPCWSTR pwszKeyName,_Inout_opt_ DWORD *pdwKeySpec,_Out_ HCRYPTPROV *phCryptProv,_Out_ LPTSTR *ppwszTmpContainer)
HRESULT None mfplat.MFLockWorkQueue(_In_ DWORD dwWorkQueue)
DWORD WINAPI None.CardQueryKeySizes(__in PCARD_DATA pCardData,__in DWORD dwKeySpec,__in DWORD dwFlags,__out PCARD_KEY_SIZES pKeySizes)
NTSTATUS None None.WdfUsbTargetPipeFormatRequestForAbort(_In_ WDFUSBPIPE Pipe,_In_ WDFREQUEST Request)
HRESULT None tapi3.EnumerateAddresses([out] IEnumAddress **ppEnumAddress)
int CALLBACK None.CompareFunc(LPARAM lParam1 None,LPARAM lParam2 None,LPARAM lParamSort None)
PVOID WINAPI advapi32.FreeSid(_In_ PSID pSid)
PDH_STATUS None pdh.PdhGetDefaultPerfObject(_In_ LPCTSTR szDataSource,_In_ LPCTSTR szMachineName,_Out_ LPTSTR szDefaultObjectName,_Inout_ LPDWORD pcchBufferSize)
PDH_STATUS None pdh.PdhGetDefaultPerfObjectW(_In_ LPCTSTR szDataSource,_In_ LPCTSTR szMachineName,_Out_ LPTSTR szDefaultObjectName,_Inout_ LPDWORD pcchBufferSize)
PDH_STATUS None pdh.PdhGetDefaultPerfObjectA(_In_ LPCTSTR szDataSource,_In_ LPCTSTR szMachineName,_Out_ LPTSTR szDefaultObjectName,_Inout_ LPDWORD pcchBufferSize)
protected boolean None.ShouldSerializeProperty(DependencyProperty dp None)
HRESULT None oleaut32.VarUI8FromCy(_In_ CY cyIn,_Out_ ULONG64 *pi64Out)
protected void None.OnTableCleared(DataTableClearEventArgs e None)
HRESULT None scardssp.get_ApduReply([out] LPBYTEBUFFER *ppReplyApdu)
HRESULT None None.GetAcceleratedStreamingDuration([out] QWORD *pcnsAccelDuration)
BOOL WINAPI authz.AuthzCachedAccessCheck(_In_ DWORD Flags,_In_ AUTHZ_ACCESS_CHECK_RESULTS_HANDLE AuthzHandle,_In_ PAUTHZ_ACCESS_REQUEST pRequest,_In_ AUTHZ_AUDIT_EVENT_HANDLE AuditInfo,_Out_ PAUTHZ_ACCESS_REPLY pReply)
DWORD None rasapi32.RasEnumDevices(_In_ LPRASDEVINFO lpRasDevInfo,_Inout_ LPDWORD lpcb,_Out_ LPDWORD lpcDevices)
DWORD None rasapi32.RasEnumDevicesW(_In_ LPRASDEVINFO lpRasDevInfo,_Inout_ LPDWORD lpcb,_Out_ LPDWORD lpcDevices)
DWORD None rasapi32.RasEnumDevicesA(_In_ LPRASDEVINFO lpRasDevInfo,_Inout_ LPDWORD lpcb,_Out_ LPDWORD lpcDevices)
HRESULT None oleaut32.VarI4FromDisp(IDispatch *pdispIn None,_In_ LCID lcid,_Out_ LONG *plOut)
HWND None None.ListView_GetHeader(HWND hwndLV None)
public Point None.GetPositionFromCharIndex(int index None)
ULONG None wldap32.ldap_count_entries(_In_ LDAP *ld,_In_ LDAPMessage *res)
SECURITY_STATUS None sspicli.SspiFreeAuthIdentity(_In_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE AuthData)
HRESULT None None.GetNetworkProtocol([out] WMT_NET_PROTOCOL *pProtocol)
DWORD None iphlpapi.GetNetworkParams(_Out_ PFIXED_INFO pFixedInfo,_In_ PULONG pOutBufLen)
BOOL None imm32.ImmRegisterWord(_In_ HKL hKL,_In_ LPCTSTR lpszReading,_In_ DWORD dwStyle,_In_ LPCTSTR lpszRegister)
BOOL None imm32.ImmRegisterWordW(_In_ HKL hKL,_In_ LPCTSTR lpszReading,_In_ DWORD dwStyle,_In_ LPCTSTR lpszRegister)
BOOL None imm32.ImmRegisterWordA(_In_ HKL hKL,_In_ LPCTSTR lpszReading,_In_ DWORD dwStyle,_In_ LPCTSTR lpszRegister)
private void None.listDragTarget_DragOver(Object sender None,System.Windows.Forms.DragEventArgs e None)
HRESULT None None.GetWindowContext([out] PREVIEWHANDLERFRAMEINFO *pinfo)
UINT WINAPI kernel32.WinExec(_In_ LPCSTR lpCmdLine,_In_ UINT uCmdShow)
DWORD WINAPI clusapi.ClusterAddGroupToGroupSet(_In_ HGROUPSET hGroupSet,_In_ HGROUP hGroup)
HRESULT None None.GetTotalSize([out] DWORD *pdwTotalSizeLow,[out] DWORD *pdwTotalSizeHigh)
MI_INLINE MI_Result None.MI_OperationOptions_GetTimeout(_In_ MI_OperationOptions *options,_Out_ MI_Interval *timeout)
PDH_STATUS None pdh.PdhEnumMachinesH(_In_ PDH_HLOG hDataSource,_Out_ LPTSTR mszMachineNameList,_Inout_ LPDWORD pcchBufferLength)
PDH_STATUS None pdh.PdhEnumMachinesHW(_In_ PDH_HLOG hDataSource,_Out_ LPTSTR mszMachineNameList,_Inout_ LPDWORD pcchBufferLength)
PDH_STATUS None pdh.PdhEnumMachinesHA(_In_ PDH_HLOG hDataSource,_Out_ LPTSTR mszMachineNameList,_Inout_ LPDWORD pcchBufferLength)
DWORD None None.Edit_TakeFocus(HWND hwndEdit None)
DWORD None mprapi.MprAdminDeregisterConnectionNotification(_In_ MPR_SERVER_HANDLE hMprServer,_In_ HANDLE hEventNotification)
BOOL CALLBACK None.ClusterSetupProgressCallback(_In_opt_ PVOID pvCallbackArg,_In_ CLUSTER_SETUP_PHASE eSetupPhase,_In_ CLUSTER_SETUP_PHASE_TYPE ePhaseType,_In_ CLUSTER_SETUP_PHASE_SEVERITY ePhaseSeverity,_In_ DWORD dwPercentComplete,_In_opt_ PCWSTR lpszObjectName,_In_ DWORD dwStatus)
BOOL WINAPI kernel32.SetProcessAffinityUpdateMode(_In_ HANDLE ProcessHandle,_In_ DWORD dwFlags)
HRESULT None None.get_FileType(BSTR path None,WMS_FILE_TYPE* pVal None)
HRESULT None fxscomex.put_ArchiveLocation([in] BSTR bstrArchiveLocation)
ULONG None advapi32.PerfIncrementULongLongCounterValue(_In_ HANDLE hProvider,_In_ PPERF_COUNTERSET_INSTANCE pInstance,_In_ ULONG CounterId,_In_ ULONGLONG llValue)
size_t None None.strlen(const char *str)
BOOL None None.TreeView_SelectDropTarget(HWND hwndTV None,HTREEITEM hitem None)
HRESULT None None.get_StreamTerminations(long* pVal None)
size_t None None.mbstowcs(wchar_t *wcstr None,const char *mbstr,size_t count None)
HRESULT None mfplat.MFTUnregisterLocalByCLSID(_In_ CLSID clsidMFT)
UINT None msi.MsiDeterminePatchSequence(_In_ LPCTSTR szProductCode,_In_opt_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD cPatchInfo,_In_ PMSIPATCHSEQUENCEINFO pPatchInfo)
UINT None msi.MsiDeterminePatchSequenceW(_In_ LPCTSTR szProductCode,_In_opt_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD cPatchInfo,_In_ PMSIPATCHSEQUENCEINFO pPatchInfo)
UINT None msi.MsiDeterminePatchSequenceA(_In_ LPCTSTR szProductCode,_In_opt_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD cPatchInfo,_In_ PMSIPATCHSEQUENCEINFO pPatchInfo)
HRESULT None None.GetDeviceIcon([out] ULONG *hIcon)
HRESULT None mf.MFCreateAC3MediaSink(_In_ IMFByteStream *pTargetByteStream,_In_ IMFMediaType *pAudioMediaType,_Out_ IMFMediaSink **ppMediaSink)
Object None None.ToType(Type conversionType None,IFormatProvider provider None)
HRESULT WINAPI None.MFCreateSensorGroup(LPCWSTR SensorGroupSymbolicLink None,_Out_ IMFSensorGroup **ppSensorGroup)
HRESULT WINAPI uiautomationcore.UiaGetReservedMixedAttributeValue(_Out_ IUnknown **punkMixedAttributeValue)
HRESULT None tapi3.EnumerateAgentSessions([out] IEnumAgentSession **ppEnumAgentSession)
DWORD None rasapi32.RasGetEntryProperties(_In_ LPCTSTR lpszPhonebook,_In_ LPCTSTR lpszEntry,_Inout_ LPRASENTRY lpRasEntry,_Inout_ LPDWORD lpdwEntryInfoSize,_Out_ LPBYTE lpbDeviceInfo,_Inout_ LPDWORD lpdwDeviceInfoSize)
DWORD None rasapi32.RasGetEntryPropertiesW(_In_ LPCTSTR lpszPhonebook,_In_ LPCTSTR lpszEntry,_Inout_ LPRASENTRY lpRasEntry,_Inout_ LPDWORD lpdwEntryInfoSize,_Out_ LPBYTE lpbDeviceInfo,_Inout_ LPDWORD lpdwDeviceInfoSize)
DWORD None rasapi32.RasGetEntryPropertiesA(_In_ LPCTSTR lpszPhonebook,_In_ LPCTSTR lpszEntry,_Inout_ LPRASENTRY lpRasEntry,_Inout_ LPDWORD lpdwEntryInfoSize,_Out_ LPBYTE lpbDeviceInfo,_Inout_ LPDWORD lpdwDeviceInfoSize)
uint32 None cimwin32.EnableIPSec([in] string IPSecPermitTCPPorts[],[in] string IPSecPermitUDPPorts[],[in] string IPSecPermitIPProtocols[])
HRESULT None None.get_CreationTime([out] DATE *pVal)
VOID FORCEINLINE None.TpSetCallbackPersistent(_Inout_ PTP_CALLBACK_ENVIRON CallbackEnviron)
public void None.AddRange(DataColumn[] columns None)
DWORD None mprapi.MprAdminIsDomainRasServer(_In_ PWCHAR pszDomain,_In_ PWCHAR pszMachine,_Out_ PBOOL pbIsRasServer)
HTREEITEM None None.TreeView_GetPrevVisible(HWND hwndTV None,HTREEITEM hitem None)
public Object None.GetPropertyValue(String propertyName None)
LONG WINAPI advapi32.RegSaveKey(_In_ HKEY hKey,_In_ LPCTSTR lpFile,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes)
LONG WINAPI advapi32.RegSaveKeyW(_In_ HKEY hKey,_In_ LPCTSTR lpFile,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes)
LONG WINAPI advapi32.RegSaveKeyA(_In_ HKEY hKey,_In_ LPCTSTR lpFile,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes)
BOOL CALLBACK None.MprAdminAcceptReauthenticationEx(_In_ RAS_CONNECTION_EX *pRasConn)
HRESULT None windowscodecs.IWICPalette_InitializeCustom_Proxy(_In_ IWICPalette *THIS_PTR,_In_ WICColor *pColors,_In_ UINT colorCount)
HRESULT None None.get_UDPResendsSentRate(long* pVal None)
HRESULT None None.get_PlayerSendRate(long* pVal None)
uint32 None dhcpserverpsprovider.Get([in] string IPAddress,[in] string ScopeId,[in] string ComputerName,[in] string PolicyName,[out] DhcpServerv4DnsSetting cmdletOutput)
HRESULT None None.MakeWindowAssociation(HWND WindowHandle None,UINT Flags None)
HRESULT None None.GetRenderMode([out] WICRawRenderMode *pRenderMode)
PUIDLIST_RELATIVE None None.ILSkip(_In_ PUIDLIST_RELATIVE pidl,UINT cb None)
HRESULT None None.get_OutgoingDistributionAllocatedBandwidth(long* pVal None)
HRESULT None None.get_StreamingHTTPPlayers(long* pVal None)
CRYPTCATMEMBER WINAPI wintrust.CryptCATEnumerateMember(_In_ HANDLE hCatalog,_In_ CRYPTCATMEMBER *pPrevMember)
HRESULT WINAPI mssign32.SignerFreeSignerContext(_In_ SIGNER_CONTEXT *pSignerContext)
BOOL WINAPI kernel32.GetSystemPowerStatus(_Out_ LPSYSTEM_POWER_STATUS lpSystemPowerStatus)
HRESULT None mfplat.MFCreatePresentationDescriptor(DWORD cStreamDescriptors None,IMFStreamDescriptor **apStreamDescriptors None,IMFPresentationDescriptor **ppPresentationDescriptor None)
public None None.Rotation(float angleRadians None)
HRESULT None None.Rename(LPCWSTR pszName None)
DWORD None ntdsapi.DsRemoveDsServer(_In_ HANDLE hDs,_In_ LPTSTR ServerDN,_In_opt_ LPTSTR DomainDN,_Out_opt_ BOOL *fLastDcInDomain,_In_ BOOL fCommit)
DWORD None ntdsapi.DsRemoveDsServerW(_In_ HANDLE hDs,_In_ LPTSTR ServerDN,_In_opt_ LPTSTR DomainDN,_Out_opt_ BOOL *fLastDcInDomain,_In_ BOOL fCommit)
DWORD None ntdsapi.DsRemoveDsServerA(_In_ HANDLE hDs,_In_ LPTSTR ServerDN,_In_opt_ LPTSTR DomainDN,_Out_opt_ BOOL *fLastDcInDomain,_In_ BOOL fCommit)
HCLUSTER WINAPI clusapi.CreateClusterCNOless(_In_ PCREATE_CLUSTER_CONFIG pConfig,_In_opt_ PCLUSTER_SETUP_PROGRESS_CALLBACK pfnProgressCallback,_In_opt_ PVOID pvCallbackArg)
DWORD None iphlpapi.SetIfEntry(_In_ PMIB_IFROW pIfRow)
DWORD None iphlpapi.DeleteProxyArpEntry(_In_ DWORD dwAddress,_In_ DWORD dwMask,_In_ DWORD dwIfIndex)
VOID None None.WlxWin31Migrate(_In_ HANDLE hWlx)
HTREEITEM None None.TreeView_GetFirstVisible(HWND hwndTV None)
NTSTATUS None None.CopyToClientBuffer(_In_ PLSA_CLIENT_REQUEST ClientRequest,_In_ ULONG Length,_In_ PVOID ClientBaseAddress,_In_ PVOID BufferToCopy)
DWORD None ntdsapi.DsWriteAccountSpn(_In_ HANDLE hDS,_In_ DS_SPN_WRITE_OP Operation,_In_ LPCTSTR pszAccount,_In_ DWORD cSpn,_In_ LPCTSTR *rpszSpn)
DWORD None ntdsapi.DsWriteAccountSpnW(_In_ HANDLE hDS,_In_ DS_SPN_WRITE_OP Operation,_In_ LPCTSTR pszAccount,_In_ DWORD cSpn,_In_ LPCTSTR *rpszSpn)
DWORD None ntdsapi.DsWriteAccountSpnA(_In_ HANDLE hDS,_In_ DS_SPN_WRITE_OP Operation,_In_ LPCTSTR pszAccount,_In_ DWORD cSpn,_In_ LPCTSTR *rpszSpn)
CLIENT_CALL_RETURN None rpcrt4.NdrAsyncClientCall2(_In_ PMIDL_STUB_DESC pStubDescriptor,_In_ PFORMAT_STRING pFormat,_Inout_ ... None)
BOOL WINAPI kernel32.GetThreadIOPendingFlag(_In_ HANDLE hThread,_Inout_ PBOOL lpIOIsPending)
UINT None None.TreeView_GetCheckState(HWND hwndTV None,HTREEITEM hItem None)
uint32 None wvrcimprov.WvrAddReplica([in] string ReplicationGroupName,[in] string VolumeName)
HRESULT None None.IsWmdrmCompliant([out] BOOL *pfCompliant)
HRESULT None None.get_FileDescriptions(BSTR path None,WMS_FILE_TYPE Type None,IWMSFileDescriptions** pVal None)
protected void None.OnBorderStyleChanged(EventArgs e None)
ULONG None advapi32.PerfIncrementULongCounterValue(_In_ HANDLE hProvider,_In_ PPERF_COUNTERSET_INSTANCE pInstance,_In_ ULONG CounterId,_In_ ULONG lValue)
DWORD WINAPI kernel32.ResumeThread(_In_ HANDLE hThread)
BOOL None user32.PrintWindow(HWND hwnd None,HDC hdcBlt None,UINT nFlags None)
UINT None msi.MsiGetTargetPath(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szFolder,_Out_ LPTSTR szPathBuf,_Inout_ DWORD *pcchPathBuf)
UINT None msi.MsiGetTargetPathW(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szFolder,_Out_ LPTSTR szPathBuf,_Inout_ DWORD *pcchPathBuf)
UINT None msi.MsiGetTargetPathA(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szFolder,_Out_ LPTSTR szPathBuf,_Inout_ DWORD *pcchPathBuf)
LONG TSPIAPI None.TSPI_phoneGetData(HDRVPHONE hdPhone None,DWORD dwDataID None,LPVOID lpData None,DWORD dwSize None)
HRESULT None oleaut32.VarI2FromDate(_In_ DATE dateIn,_Out_ SHORT *psOut)
private void None.DrawCursorsOnForm(Cursor cursor None)
HRESULT None None.get_LocalBypass([out None None,retval] BOOL *pfLocalBypass)
Object None None.GetFormat(Type formatType None)
HRESULT None None.Reset([out] IVMTask **resetTask)
BOOL None None.TreeView_SetUnicodeFormat(HWND hwnd None,BOOL fUnicode None)
VOID WINAPI advapi32.MapGenericMask(_Inout_ PDWORD AccessMask,_In_ PGENERIC_MAPPING GenericMapping)
STDAPI None shcore.RegisterScaleChangeNotifications(_In_ DISPLAY_DEVICE_TYPE displayDevice,_In_ HWND hwndNotify,_In_ UINT uMsgNotify,_Out_ DWORD *pdwCookie)
UInt32 None None.Initialize([in] UInt16 PartitionStyle,[out] String ExtendedStatus)
HRESULT None None.CreateXactQueue(WCHAR *wszPathName None)
HRESULT None None.getQualifiedItem(BSTR baseName None,BSTR namespaceURI None,IXMLDOMNode **qualifiedItem None)
PDH_STATUS None pdh.PdhExpandWildCardPath(_In_ LPCTSTR szDataSource,_In_ LPCTSTR szWildCardPath,_Out_ LPTSTR mszExpandedPathList,_Inout_ LPDWORD pcchPathListLength,_In_ DWORD dwFlags)
PDH_STATUS None pdh.PdhExpandWildCardPathW(_In_ LPCTSTR szDataSource,_In_ LPCTSTR szWildCardPath,_Out_ LPTSTR mszExpandedPathList,_Inout_ LPDWORD pcchPathListLength,_In_ DWORD dwFlags)
PDH_STATUS None pdh.PdhExpandWildCardPathA(_In_ LPCTSTR szDataSource,_In_ LPCTSTR szWildCardPath,_Out_ LPTSTR mszExpandedPathList,_Inout_ LPDWORD pcchPathListLength,_In_ DWORD dwFlags)
HRESULT None None.EnumOutputs(UINT Output None,[out] IDXGIOutput **ppOutput)
NTSTATUS WINAPI None.SpValidateTargetInfoFn(_In_opt_ PLSA_CLIENT_REQUEST ClientRequest,_In_ PVOID ProtocolSubmitBuffer,_In_ PVOID ClientBufferBase,_In_ ULONG SubmitBufferLength,_In_ PSECPKG_TARGETINFO TargetInfo)
MI_INLINE MI_Result None.MI_DestinationOptions_GetImpersonationType(_Inout_ MI_DestinationOptions *options,_Out_ MI_DestinationOptions_ImpersonationType *impersonationType)
HRESULT None fxscomex.put_UseArchive([in] VARIANT_BOOL bUseArchive)
PDH_STATUS None pdh.PdhUpdateLog(_In_ PDH_HLOG hLog,_In_ LPCTSTR szUserString)
PDH_STATUS None pdh.PdhUpdateLogW(_In_ PDH_HLOG hLog,_In_ LPCTSTR szUserString)
PDH_STATUS None pdh.PdhUpdateLogA(_In_ PDH_HLOG hLog,_In_ LPCTSTR szUserString)
HRESULT None mf.MFCreateASFMediaSinkActivate(LPCWSTR pwszFileName None,IMFASFContentInfo *pContentInfo None,IMFActivate **ppIActivate None)
HRESULT None None.get_Version(BSTR* pbstrVal None)
HRESULT None mfplat.MFTUnregisterLocal(_In_ IClassFactory *pClassFactory)
HRESULT None msdrm.DRMCloseQueryHandle(_In_ DRMQUERYHANDLE hQuery)
HRESULT None None.MFGetAttributeSize(_In_ IMFAttributes *pAttributes,_In_ REFGUID guidKey,_Out_ UINT32 *punWidth,_Out_ UINT32 *punHeight)
STDAPI None mf.MFCreateDeviceSourceActivate(_In_ IMFAttributes *pAttributes,_Out_ IMFActivate **ppActivate)
HRESULT None None.ResizeBuffers(UINT BufferCount None,UINT Width None,UINT Height None,DXGI_FORMAT NewFormat None,UINT SwapChainFlags None)
HRESULT None d2d1.SetInputCount(UINT32 inputCount None)
LONG WINAPI tapi32.lineAddToConference(HCALL hConfCall None,HCALL hConsultCall None)
ULONG None wldap32.ldap_unbind(_In_ LDAP *ld)
BOOL WINAPI None.RasCustomDialDlg(HINSTANCE hInstDll None,DWORD dwFlags None,LPWSTR lpszPhonebook None,LPWSTR lpszEntry None,LPWSTR lpszPhoneNumber None,LPRASDIALDLG lpInfo None,PVOID pvInfo None)
BOOL WINAPI None.RasCustomDialDlgW(HINSTANCE hInstDll None,DWORD dwFlags None,LPWSTR lpszPhonebook None,LPWSTR lpszEntry None,LPWSTR lpszPhoneNumber None,LPRASDIALDLG lpInfo None,PVOID pvInfo None)
BOOL WINAPI None.RasCustomDialDlgA(HINSTANCE hInstDll None,DWORD dwFlags None,LPWSTR lpszPhonebook None,LPWSTR lpszEntry None,LPWSTR lpszPhoneNumber None,LPRASDIALDLG lpInfo None,PVOID pvInfo None)
public void None.OnClosed(ClosedReason closedReason None,ListMakerList fileList None)
HRESULT None cscsvc.GetLocalInfo([out] IOfflineFilesSyncErrorItemInfo **ppInfo)
HRESULT None oleaut32.VarR4FromUI2(_In_ USHORT uiIn,_Out_ FLOAT *pfltOut)
LONG TSPIAPI None.TSPI_phoneNegotiateExtVersion(DWORD dwDeviceID None,DWORD dwTSPIVersion None,DWORD dwLowVersion None,DWORD dwHighVersion None,LPDWORD lpdwExtVersion None)
VOID None None.IoCsqInsertIrp(_Inout_ PIO_CSQ Csq,_Inout_ PIRP Irp,_Out_opt_ PIO_CSQ_IRP_CONTEXT Context)
HRESULT None None.GetBufferSize([out] UINT32 *pNumBufferFrames)
HRESULT None propsys.VariantToStringArray(_In_ REFVARIANT var,_Out_ PWSTR *prgsz,_In_ ULONG crgsz,_Out_ ULONG *pcElem)
VOID CALLBACK None.FiberProc(_In_ PVOID lpParameter)
HRESULT None None.get_ConnectedPlayers(long* pVal None)
DWORD WINAPI winhttp.WinHttpWebSocketClose(_In_ HINTERNET hWebSocket,_In_ USHORT usStatus,_In_opt_ PVOID pvReason,_In_ DWORD dwReasonLength)
STDAPI None shcore.RevokeScaleChangeNotifications(_In_ DISPLAY_DEVICE_TYPE displayDevice,_In_ DWORD dwCookie)
ULONG None wldap32.ldap_start_tls_s(_In_ PLDAP ExternalHandle,_Out_ PULONG ServerReturnValue,_Out_ LDAPMessage **result,_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls)
ULONG None wldap32.ldap_start_tls_sW(_In_ PLDAP ExternalHandle,_Out_ PULONG ServerReturnValue,_Out_ LDAPMessage **result,_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls)
ULONG None wldap32.ldap_start_tls_sA(_In_ PLDAP ExternalHandle,_Out_ PULONG ServerReturnValue,_Out_ LDAPMessage **result,_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls)
private void None.listDragSource_GiveFeedback(Object sender None,System.Windows.Forms.GiveFeedbackEventArgs e None)
VOID None None.WdfPdoRemoveEjectionRelationsPhysicalDevice(_In_ WDFDEVICE Device,_In_ PDEVICE_OBJECT PhysicalDevice)
BOOL WINAPI dnsapi.DnsWriteQuestionToBuffer_W(_Inout_ PDNS_MESSAGE_BUFFER pDnsBuffer,_Inout_ PDWORD pdwBufferSize,_In_ PCWSTR pszName,_In_ WORD wType,_In_ WORD Xid,_In_ BOOL fRecursionDesired)
DWORD CALLBACK None.ProcessGroupPolicy(_In_ DWORD dwFlags,_In_ HANDLE hToken,_In_ HKEY hKeyRoot,_In_ PGROUP_POLICY_OBJECT pDeletedGPOList,_In_ PGROUP_POLICY_OBJECT pChangedGPOList,_In_ ASYNCCOMPLETIONHANDLE pHandle,_In_ BOOL *pbAbort,_In_ PFNSTATUSMESSAGECALLBACK pStatusCallback)
HRESULT None shlwapi.SHIsChildOrSelf(_In_ HWND hwndParent,_In_ HWND hwnd)
NTSTATUS None None.CancelNotification(_In_ HANDLE NotifyHandle)
ULONG None advapi32.PerfSetULongLongCounterValue(_In_ HANDLE hProvider,_In_ PPERF_COUNTERSET_INSTANCE pInstance,_In_ ULONG CounterId,_In_ ULONGLONG llValue)
DWORD WINAPI crypt32.CertEnumCTLContextProperties(_In_ PCCTL_CONTEXT pCtlContext,_In_ DWORD dwPropId)
HRESULT None shell32.GetOptions([out] DWORD *pdwFlag)
HRESULT None None.Guid(LPWSTR *ppszGuid None)
public MethodInfo None.MakeGenericMethod(Type[] typeArguments None)
HRESULT None mmcndmgr.GetDefaultVerb([out] MMC_CONSOLE_VERB peCmID)
HRESULT None mfplat.MFCancelCreateFile(_In_ IUnknown *pCancelCookie)
HPROPERTY WINAPI nmapi.GetProperty(_In_ HPROTOCOL hProtocol,_In_ LPSTR PropertyName)
LONG WINAPI tapi32.lineProxyMessage(HLINE hLine None,HCALL hCall None,DWORD dwMsg None,DWORD dwParam1 None,DWORD dwParam2 None,DWORD dwParam3 None)
protected boolean None.FreezeCore(boolean isChecking None)
HRESULT None None.GetCurrent([out None None,retval] IOpcSignatureCustomObject **customObject)
PDH_STATUS None pdh.PdhSetDefaultRealTimeDataSource(_In_ DWORD dwDataSourceId)
NET_API_STATUS None netapi32.NetGetJoinableOUs(_In_ LPCWSTR lpServer,_In_ LPCWSTR lpDomain,_In_ LPCWSTR lpAccount,_In_ LPCWSTR lpPassword,_Out_ DWORD *OUCount,_Out_ LPWSTR **OUs)
BOOL WINAPI None.RASADFunc(_In_ LPTSTR lpszPhonebook,_In_ LPTSTR lpszEntry,_In_ LPRASADPARAMS lpAutoDialParams,_Out_ LPDWORD lpdwRetCode)
BOOL WINAPI None.RASADFuncW(_In_ LPTSTR lpszPhonebook,_In_ LPTSTR lpszEntry,_In_ LPRASADPARAMS lpAutoDialParams,_Out_ LPDWORD lpdwRetCode)
BOOL WINAPI None.RASADFuncA(_In_ LPTSTR lpszPhonebook,_In_ LPTSTR lpszEntry,_In_ LPRASADPARAMS lpAutoDialParams,_Out_ LPDWORD lpdwRetCode)
HRESULT None mf.MFCreateMuxSink(_In_ GUID guidOutputSubType,_In_ IMFAttributes *pOutputAttributes,_In_ IMFByteStream *pOutputByteStream,_Out_ IMFMediaSink **ppMuxSink)
HRESULT None oleaut32.VarBstrFromI1(_In_ CHAR cIn,_In_ LCID lcid,_In_ ULONG dwFlags,_Out_ BSTR *pbstrOut)
HRESULT None cscsvc.IsLocallyModifiedData([out] BOOL *pbLocallyModifiedData)
public boolean None.RemoveAuditRule(CryptoKeyAuditRule rule None)
DWORD WINAPI nmapi.GetPreviousProtocolOffsetByName(_In_ HFRAME hFrame,_In_ DWORD dwStartOffset,_In_ LPSTR szProtocolName,_Out_ DWORD *pdwPreviousOffset)
DWORD None iphlpapi.SetIpTTL(_In_ UINT nTTL)
UINT None msi.MsiSequence(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szTable,_In_ INT iSequenceMode)
UINT None msi.MsiSequenceW(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szTable,_In_ INT iSequenceMode)
UINT None msi.MsiSequenceA(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szTable,_In_ INT iSequenceMode)
HRESULT None None.GetAccessibilityLongDescription([out None None,retval] LPWSTR *longDescription)
HRESULT None rtworkq.RtwqBeginRegisterWorkQueueWithMMCSS(_In_ DWORD workQueueId,_In_ PCWSTR usageClass,_In_ DWORD dwTaskId,_In_ LONG lPriority,_In_ IRtwqAsyncCallback *doneCallback,_In_ IUnknown *doneState)
HRESULT None None.put_UnicastRolloverURLOptions(WMS_UNICAST_ROLLOVER_URL_OPTIONS newVal None)
HRESULT None None.StopArchive( None None)
HRESULT None propsys.PropVariantToInt32Vector(_In_ REFPROPVARIANT propvar,_Out_ LONG *prgn,_In_ ULONG crgn,_Out_ ULONG *pcElem)
DWORD None mprapi.MprAdminGetErrorString(_In_ DWORD dwError,_Out_ LPWSTR *lplpwsErrorString)
uint32 None dhcpserverpsprovider.Get([in] string ComputerName,[in] string Prefix,[in] string IPAddress,[out] DhcpServerv6DnsSetting cmdletOutput)
HRESULT None None.GetDeviceCaps([out] D3DCAPS9 *pCaps)
HRESULT None fxscomex.put_LowQuotaWaterMark([in] long lLowQuotaWaterMark)
HRESULT None None.GetEnableHTTP([out] BOOL *pfEnableHTTP)
HRESULT None None.UnreadItemCount(UINT *puiUnreadItemCount None)
HRESULT None rtworkq.RtwqRemovePeriodicCallback(_In_ DWORD dwKey)
HRESULT None mfplat.MFFrameRateToAverageTimePerFrame(_In_ UINT32 unNumerator,_In_ UINT32 unDenominator,_Out_ UINT64 *punAverageTimePerFrame)
HRESULT None None.reset(void None None)
BOOL WINAPI crypt32.CertSerializeCTLStoreElement(_In_ PCCTL_CONTEXT pCtlContext,_In_ DWORD dwFlags,_Out_ BYTE *pbElement,_Inout_ DWORD *pcbElement)
HWND None None.ListView_GetToolTips(HWND hwnd None)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsBindingSelect(RPC_BINDING_VECTOR *BindingVec None,RPC_BINDING_HANDLE *Binding None)
HRESULT None mfplat.MFEndCreateFile(_In_ IMFAsyncResult *pResult,_Out_ IMFByteStream **ppFile)
function None None.ReceiveServerData(arg None None,context None None)
VOID WINAPI advapi32.AuditFree(_In_ PVOID Buffer)
public DateTime None.AddSeconds(double value None)
protected void None.OnBackgroundImageLayoutChanged(EventArgs e None)
HRESULT None None.Delete(VOID None None)
DWORD None rasapi32.RasGetAutodialAddress(_In_ LPCTSTR lpszAddress,_In_ LPDWORD lpdwReserved,_Inout_ LPRASAUTODIALENTRY lpAutoDialEntries,_Inout_ LPDWORD lpdwcbAutoDialEntries,_Out_ LPDWORD lpdwcAutoDialEntries)
DWORD None rasapi32.RasGetAutodialAddressW(_In_ LPCTSTR lpszAddress,_In_ LPDWORD lpdwReserved,_Inout_ LPRASAUTODIALENTRY lpAutoDialEntries,_Inout_ LPDWORD lpdwcbAutoDialEntries,_Out_ LPDWORD lpdwcAutoDialEntries)
DWORD None rasapi32.RasGetAutodialAddressA(_In_ LPCTSTR lpszAddress,_In_ LPDWORD lpdwReserved,_Inout_ LPRASAUTODIALENTRY lpAutoDialEntries,_Inout_ LPDWORD lpdwcbAutoDialEntries,_Out_ LPDWORD lpdwcAutoDialEntries)
HRESULT None None.open(BSTR bstrMethod None,BSTR bstrUrl None,VARIANT bAsync None,VARIANT bstrUser None,VARIANT bstrPassword None)
HRESULT None None.GetQueueQuotaProp(LPCWSTR wszQueueFormatName None,ULONG *pulValue None)
HRESULT None srmsvc.get_ModuleType([out] FsrmPipelineModuleType *pModuleType)
protected void None.AddParsedSubObject(Object obj None)
uint32 None ramgmtpsprovider.Add([in] string DnsIPAddress[],[in] string DnsSuffix,[in] string ProxyServer,[in] string ComputerName,[in] boolean PassThru,[out] DnsClientNrptRule cmdletOutput)
DNS_STATUS WINAPI dnsapi.DnsQuery(_In_ PCTSTR lpstrName,_In_ WORD wType,_In_ DWORD Options,_Inout_opt_ PVOID pExtra,_Out_opt_ PDNS_RECORD *ppQueryResultsSet,_Out_opt_ PVOID *pReserved)
DNS_STATUS WINAPI dnsapi.DnsQuery_W(_In_ PCTSTR lpstrName,_In_ WORD wType,_In_ DWORD Options,_Inout_opt_ PVOID pExtra,_Out_opt_ PDNS_RECORD *ppQueryResultsSet,_Out_opt_ PVOID *pReserved)
DNS_STATUS WINAPI dnsapi.DnsQuery_A(_In_ PCTSTR lpstrName,_In_ WORD wType,_In_ DWORD Options,_Inout_opt_ PVOID pExtra,_Out_opt_ PDNS_RECORD *ppQueryResultsSet,_Out_opt_ PVOID *pReserved)
public BindingExpression None.GetBindingExpression(DependencyProperty dp None)
BOOL None None.Edit_Enable(HWND hwndCtl None,BOOL fEnable None)
DWORD None mprapi.MprAdminInterfaceDeviceSetInfo(_In_ MPR_SERVER_HANDLE hMprServer,_In_ HANDLE hInterface,_In_ DWORD dwIndex,_In_ DWORD dwLevel,_In_ LPBYTE lplpBuffer)
HRESULT None propsys.PropVariantGetInt32Elem(_In_ REFPROPVARIANT propvar,_In_ ULONG iElem,_Out_ LONG *pnVal)
PDH_STATUS None pdh.PdhUpdateLogFileCatalog(_In_ PDH_HLOG hLog)
DWORD None mprapi.MprConfigServerBackup(_In_ HANDLE hMprConfig,_In_ LPWSTR lpwsPath)
uint32 None ipmiprv.SetPowerState([in] uint16 PowerState,[in] datetime Time)
HRESULT STDAPI cldapi.CfGetPlaceholderStateFromFileInfo(_In_ LPCVOID InfoBuffer,_In_ FILE_INFO_BY_HANDLE_CLASS InfoClass)
HRESULT None None.get_PublishingPointName(BSTR* pVal None)
MI_INLINE MI_Result None.MI_SubscriptionDeliveryOptions_GetOptionCount(_In_ MI_SubscriptionDeliveryOptions *self,_Out_opt_ MI_Uint32 *count)
public int None.GetByteCount(char[] chars None)
void None None.Insert(int index None,T item None)
HRESULT None None.GetDescriptionInLanguage(LPCWSTR pstrLanguage None,IWMSContext** ppDescription None)
HRESULT None None.LastDownloadError(FEEDS_DOWNLOAD_ERROR *pfde None)
HRESULT None None.GetBidiLevel([out None None,retval] UINT32 *bidiLevel)
LONG TSPIAPI None.TSPI_lineOpen(DWORD dwDeviceID None,HTAPILINE htLine None,LPHDRVLINE lphdLine None,DWORD dwTSPIVersion None,LINEEVENT lpfnEventProc None)
LONG TSPIAPI None.TSPI_lineGetAddressCaps(DWORD dwDeviceID None,DWORD dwAddressID None,DWORD dwTSPIVersion None,DWORD dwExtVersion None,LPLINEADDRESSCAPS lpAddressCaps None)
HRESULT None None.Rename(BSTR name None)
public void None.CreateTemplatedUI(boolean doDataBind None)
HRESULT None propsys.VariantToInt32(_In_ REFVARIANT varIn,_Out_ LONG *plRet)
HRESULT None tapi3.get_CallHubs([out] VARIANT *pVariant)
HRESULT None None.GetConnectedTo([out] IConnector **ppConTo)
DWORD WINAPI clusapi.SetClusterResourceDependencyExpression(_In_ HRESOURCE hResource,_In_ LPCWSTR lpszDependencyExpression)
RPC_STATUS RPC_ENTRY rpcrt4.RpcSmSetClientAllocFree(RPC_CLIENT_ALLOC *pfnAllocate None,RPC_CLIENT_FREE *pfnFree None)
DWORD WINAPI nmapi.GetFrameMacType(_In_ HFRAME hFrame)
UINT CALLBACK None.InitializeEmbeddedUI(_In_ MSIHANDLE hInstall,_In_ LPCWSTR wzResourcePath,_Inout_ LPDWORD pdwInternalUILevel)
HRESULT None None.GetManifest([out None None,retval] IAppxBundleManifestReader **manifestReader)
public void None.LoadAdapterState(Object state None)
DWORD None iphlpapi.GetBestInterface(_In_ IPAddr dwDestAddr,_Out_ PDWORD pdwBestIfIndex)
HRESULT None None.Open(const WCHAR *pwszMethod,const WCHAR *pwszUrl,IXMLHTTPRequest2Callback *pStatusCallback None,const WCHAR *pwszUserName,const WCHAR *pwszPassword,const WCHAR *pwszProxyUserName,const WCHAR *pwszProxyPassword)
BOOL WINAPI advapi32.AddAccessAllowedAceEx(_Inout_ PACL pAcl,_In_ DWORD dwAceRevision,_In_ DWORD AceFlags,_In_ DWORD AccessMask,_In_ PSID pSid)
MI_INLINE MI_Result None.MI_OperationOptions_GetForceFlagPromptUserMode(_Inout_ MI_OperationOptions *options,_Out_ MI_Boolean *forceflag)
HRESULT None windowscodecs.IWICPixelFormatInfo_GetBitsPerPixel_Proxy(_In_ IWICPixelFormatInfo *THIS_PTR,_Out_ UINT *puiBitsPerPixel)
DWORD None mprapi.MprAdminInterfaceTransportSetInfo(_In_ MPR_SERVER_HANDLE hMprServer,_In_ HANDLE hInterface,_In_ DWORD dwTransportId,_In_ LPBYTE pInterfaceInfo,_In_ DWORD dwInterfaceInfoSize)
HRESULT None None.get_StreamingHTTPPlayers(long* pVal None)
public ICustomTypeDescriptor None.GetTypeDescriptor(Object instance None)
HRESULT None msoe.IdentityInformationChanged(DWORD dwType None)
DWORD None None.GetNPPPatternFilterFromBlob(HBLOB hBlob None,LPEXPRESSION pExpression None,HBLOB hErrorBlob None)
BOOL None None.TabCtrl_HighlightItem(HWND hwndTab None,INT idItem None,WORD fHighlight None)
HRESULT None None.AsyncDownload(VOID None None)
DWORD WINAPI resutils.ClusterClearBackupStateForSharedVolume(_In_ LPCWSTR lpszVolumePathName)
SECURITY_STATUS SEC_ENTRY secur32.SaslGetProfilePackage(_In_ LPTSTR ProfileName,_Out_ PSecPkgInfo *PackageInfo)
SECURITY_STATUS SEC_ENTRY secur32.SaslGetProfilePackageW(_In_ LPTSTR ProfileName,_Out_ PSecPkgInfo *PackageInfo)
SECURITY_STATUS SEC_ENTRY secur32.SaslGetProfilePackageA(_In_ LPTSTR ProfileName,_Out_ PSecPkgInfo *PackageInfo)
protected void None.CopyPersonalizationState(WebPart webPartA None,WebPart webPartB None)
NET_API_STATUS None netapi32.NetLocalGroupDelMembers(_In_ LPCWSTR servername,_In_ LPCWSTR groupname,_In_ DWORD level,_In_ LPBYTE buf,_In_ DWORD totalentries)
VOID None None.FreeSharedMemory(_In_ PVOID SharedMem,_In_ PVOID Memory)
BOOL None None.ListView_IsGroupViewEnabled(HWND hwnd None)
INT CALLBACK None.InstalluiHandler(LPVOID pvContext None,UINT iMessageType None,LPCTSTR szMessage None)
INT CALLBACK None.INSTALLUI_HANDLERW(LPVOID pvContext None,UINT iMessageType None,LPCTSTR szMessage None)
INT CALLBACK None.INSTALLUI_HANDLERA(LPVOID pvContext None,UINT iMessageType None,LPCTSTR szMessage None)
public int None.GetTokenFor(String literal None)
PUITEMID_CHILD None shell32.ILFindLastID(_In_ PCUIDLIST_RELATIVE pidl)
DWORD None ntdsapi.DsBindWithSpn(_In_opt_ LPCTSTR DomainControllerName,_In_opt_ LPCTSTR DnsDomainName,_In_opt_ RPC_AUTH_IDENTITY_HANDLE AuthIdentity,_In_opt_ LPCTSTR ServicePrincipalName,_Out_ HANDLE *phDS)
DWORD None ntdsapi.DsBindWithSpnW(_In_opt_ LPCTSTR DomainControllerName,_In_opt_ LPCTSTR DnsDomainName,_In_opt_ RPC_AUTH_IDENTITY_HANDLE AuthIdentity,_In_opt_ LPCTSTR ServicePrincipalName,_Out_ HANDLE *phDS)
DWORD None ntdsapi.DsBindWithSpnA(_In_opt_ LPCTSTR DomainControllerName,_In_opt_ LPCTSTR DnsDomainName,_In_opt_ RPC_AUTH_IDENTITY_HANDLE AuthIdentity,_In_opt_ LPCTSTR ServicePrincipalName,_Out_ HANDLE *phDS)
HRESULT None shell32.SHCreateDefaultPropertiesOp(_In_ IShellItem *psi,_Out_ IFileOperation **ppFileOp)
public XmlNode None.AppendChild(XmlNode newChild None)
DWORD None None.Edit_GetSel(HWND hwndCtl None)
HRESULT None shell32.SHCreateShellFolderViewEx(_In_ CSFV *pcsfv,_Out_ IShellView **ppsv)
NETIOAPI_API None iphlpapi.GetIfTable2(_Out_ PMIB_IF_TABLE2 *Table)
ULONG None wldap32.LdapMapErrorToWin32(_In_ ULONG LdapError)
HRESULT None None.removeNamedItem(BSTR name None,IXMLDOMNode **namedItem None)
HRESULT None msftedit.TxGetExtent(LPSIZEL lpExtent None)
PFILE_OBJECT None None.WdfFileObjectWdmGetFileObject(_In_ WDFFILEOBJECT FileObject)
NTSTATUS WINAPI bcrypt.BCryptQueryContextFunctionProperty(_In_ ULONG dwTable,_In_ LPCWSTR pszContext,_In_ ULONG dwInterface,_In_ LPCWSTR pszFunction,_In_ LPCWSTR pszProperty,_Inout_ ULONG *pcbValue,_Inout_ PUCHAR *ppbValue)
HRESULT None None.get_UnconnectedNetworkAdapters([out] IVMNetworkAdapterCollection **unconnectedNetworkAdapterCollection)
public void None.DisconnectWebParts(WebPartConnection connection None)
PIDLIST_ABSOLUTE None shell32.SHSimpleIDListFromPath(_In_ PCWSTR pszPath)
HRESULT None None.GetViewport([out] D3DVIEWPORT9 *pViewport)
protected None None.Switch(String displayName None,String description None)
HRESULT WINAPI webservices.WsMatchPolicyAlternative(_In_ WS_POLICY* policy,_In_ ULONG alternativeIndex,_In_ WS_POLICY_CONSTRAINTS* policyConstraints,_In_ BOOL matchRequired,_In_ WS_HEAP* heap,_In_opt_ WS_ERROR* error)
HRESULT None shell32.GetCurFolder(LPITEMIDLIST *ppidl None)
HRESULT None None.get_TotalCounters(IWMSServerTotalCounters** pVal None)
int None None.GetHashCode(T obj None)
VOID None None.SetThreadpoolCallbackPersistent(_Inout_ PTP_CALLBACK_ENVIRON pcbe)
BOOL None None.TreeView_EnsureVisible(HWND hwndTV None,HTREEITEM hitem None)
public boolean None.Contains(Visual visual None)
uint32 None dhcpserverpsprovider.RemoveByScopeId([in] boolean PassThru,[in] string ComputerName,[in] string ScopeId,[out] DhcpServerv4Lease cmdletOutput[])
HRESULT None None.GetBufferingTime([out] QWORD *pcnsBufferingTime)
HRESULT None None.get_Limits(IWMSServerLimits** pVal None)
HRESULT None None.get_Keyboard([out] IVMKeyboard **keyboard)
HRESULT None msdrm.DRMEncrypt(_In_ DRMHANDLE hCryptoProvider,_In_ UINT iPosition,_In_ UINT cNumInBytes,_In_ BYTE *pbInData,_Inout_ UINT *pcNumOutBytes,_Out_ BYTE *pbOutData)
HRESULT None None.GetPrepareForBackupFailureMsg([out] BSTR *pbstrFailureMsg)
HRESULT None ole32.OleCreateEmbeddingHelper(_In_ REFCLSID clsid,_In_ LPUNKNOWN pUnkOuter,_In_ DWORD flags,_In_ LPCLASSFACTORY pCF,_In_ REFIID riid,_Out_ LPVOID *lplpObj)
void None None.Button1_Click(Object sender None,EventArgs e None)
HRESULT None None.CreateDictionary([out None None,retval] IXpsOMDictionary **dictionary)
DXGI_FORMAT_R32G32B32A32_FLOAT None None.DXGI_FORMAT_B4G4R4A4(optional None None)
HGLOBAL WINAPI kernel32.GlobalReAlloc(_In_ HGLOBAL hMem,_In_ SIZE_T dwBytes,_In_ UINT uFlags)
HRESULT None None.GetQueueTypeProp(LPCWSTR wszQueueFormatName None,CLSID *pIDValue None)
HRESULT None None.SHLocalStrDup(PCTSTR psz None,_Out_opt_ PTSTR *ppsz)
HRESULT None None.SHLocalStrDupW(PCTSTR psz None,_Out_opt_ PTSTR *ppsz)
HRESULT None None.SHLocalStrDupA(PCTSTR psz None,_Out_opt_ PTSTR *ppsz)
HRESULT None shell32.CIDLData_CreateFromIDArray(_In_ PCIDLIST_ABSOLUTE pidlFolder,_In_ UINT cidl,_In_ PCUIDLIST_RELATIVE_ARRAY apidl,_Out_ IDataObject **ppdtobj)
HRESULT None None.get_Accountant([out] IVMAccountant **accountant)
protected Stream None.OpenFile(String path None)
BOOL None None.IsDepthFormatOk(D3DFORMAT DepthFormat None,D3DFORMAT AdapterFormat None,D3DFORMAT BackBufferFormat None)
HRESULT WINAPI webservices.WsWriteEndStartElement(_In_ WS_XML_WRITER* writer,_In_opt_ WS_ERROR* error)
uint32 None dnsserverpsprovider.SetByServer([in] boolean PassThru,[in] string ComputerName,[in] string ClientSubnet,[in] string Condition,[in] string InternetProtocol,[in] string Name,[in] uint32 ProcessingOrder,[in] string ServerInterfaceIP,[in] string TimeOfDay,[in] string TransportProtocol,[out] DnsServerPolicy cmdletOutput)
HRESULT None None.get_OutgoingDistributionConnections(IWMSOutgoingDistributionConnections** pVal None)
HRESULT None None.SyncSetting(FEEDS_SYNC_SETTING *pfss None)
uint32 None ipmiprv.OnlineDevice([in] boolean Online)
PDH_STATUS None pdh.PdhEnumObjectsH(_In_ PDH_HLOG hDataSource,_In_ LPCTSTR szMachineName,_Out_ LPTSTR mszObjectList,_Inout_ LPDWORD pcchBufferLength,_In_ DWORD dwDetailLevel,_In_ BOOL bRefresh)
PDH_STATUS None pdh.PdhEnumObjectsHW(_In_ PDH_HLOG hDataSource,_In_ LPCTSTR szMachineName,_Out_ LPTSTR mszObjectList,_Inout_ LPDWORD pcchBufferLength,_In_ DWORD dwDetailLevel,_In_ BOOL bRefresh)
PDH_STATUS None pdh.PdhEnumObjectsHA(_In_ PDH_HLOG hDataSource,_In_ LPCTSTR szMachineName,_Out_ LPTSTR mszObjectList,_Inout_ LPDWORD pcchBufferLength,_In_ DWORD dwDetailLevel,_In_ BOOL bRefresh)
HRESULT None None.get_Name([out] BSTR *virtualServerName)
HRESULT None fxscomex.put_AllowPersonalCoverPages([in] VARIANT_BOOL bAllowPersonalCoverPages)
HRESULT None fxscomex.OnIncomingJobRemoved([in] IFaxAccount *pFaxAccount,[in] BSTR bstrJobId)
LONG TSPIAPI None.TSPI_lineSwapHold(DRV_REQUESTID dwRequestID None,HDRVCALL hdActiveCall None,HDRVCALL hdHeldCall None)
NTSTATUS None None.WdfRequestRetrieveOutputBuffer(_In_ WDFREQUEST Request,_In_ size_t MinimumRequiredSize,_Out_ PVOID *Buffer,_Out_opt_ size_t *Length)
HRESULT None None.LastBuildDate(SYSTEMTIME *pstLastBuildDate None)
HANDLE None kernel32.PowerCreateRequest(_In_ PREASON_CONTEXT Context)
DWORD WINAPI ntdsapi.DsGetRdnW(_Inout_ LPCWCH *ppDN,_Inout_ DWORD *pcDN,_Out_ LPCWCH *ppKey,_Out_ DWORD *pcKey,_Out_ LPCWCH *ppVal,_Out_ DWORD *pcVal)
HRESULT None oleaut32.VarDecFromI8(_In_ LONG64 i64In,_Out_ DECIMAL *pdecOut)
HRESULT None certocm.get__NewEnum([out] IUnknown **ppVal)
HRESULT None None.IsList(BOOL *pbIsList None)
DWORD WINAPI crypt32.CertEnumCRLContextProperties(_In_ PCCRL_CONTEXT pCrlContext,_In_ DWORD dwPropId)
HRESULT WINAPI userenv.CreateAppContainerProfile(_In_ PCWSTR pszAppContainerName,_In_ PCWSTR pszDisplayName,_In_ PCWSTR pszDescription,_In_ PSID_AND_ATTRIBUTES pCapabilities,_In_ DWORD dwCapabilityCount,_Out_ PSID *ppSidAppContainerSid)
DWORD WINAPI iphlpapi.IcmpSendEcho2Ex(_In_ HANDLE IcmpHandle,_In_opt_ HANDLE Event,_In_opt_ PIO_APC_ROUTINE ApcRoutine,_In_opt_ PVOID ApcContext,_In_ IPAddr SourceAddress,_In_ IPAddr DestinationAddress,_In_ LPVOID RequestData,_In_ WORD RequestSize,_In_opt_ PIP_OPTION_INFORMATION RequestOptions,_Out_ LPVOID ReplyBuffer,_In_ DWORD ReplySize,_In_ DWORD Timeout)
ULONG None wldap32.ldap_modify_s(_In_ LDAP *ld,_In_ PCHAR dn,_In_ LDAPMod *mods[])
ULONG None wldap32.ldap_modify_sW(_In_ LDAP *ld,_In_ PCHAR dn,_In_ LDAPMod *mods[])
ULONG None wldap32.ldap_modify_sA(_In_ LDAP *ld,_In_ PCHAR dn,_In_ LDAPMod *mods[])
HRESULT None shell32.SHLoadInProc(_In_ REFCLSID rclsid)
HRESULT None propsys.VariantToInt64(_In_ REFVARIANT varIn,_Out_ LONGLONG *pllRet)
private void None.On_Inserting(Object sender None,SqlDataSourceCommandEventArgs e None)
HRESULT None mf.MFCreateTopoLoader(IMFTopoLoader **ppObj None)
NTSTATUS None secur32.LsaDeregisterLogonProcess(_In_ HANDLE LsaHandle)
NT_STATUS None None.SspiDecryptAuthIdentityEx(_In_ ULONG Options,_Inout_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE EncryptedAuthData)
ULONG None wldap32.ldap_abandon(_In_ LDAP *ld,_In_ ULONG msgid)
MI_INLINE MI_Result None.MI_DestinationOptions_GetCredentialsCount(_In_ MI_DestinationOptions *options,_Out_ MI_Uint32 *count)
NTSTATUS WINAPI None.Msv1_0SubAuthenticationRoutineGeneric(PVOID SubmitBuffer None,ULONG SubmitBufferLength None,_Out_ PULONG ReturnBufferLength,_Out_ PVOID *ReturnBuffer)
HRESULT None windowscodecs.IWICBitmap_SetPalette_Proxy(_In_ IWICBitmap *THIS_PTR,_In_ IWICPalette *pIPalette)
NTSTATUS None None.ZwCreateEvent(_Out_ PHANDLE EventHandle,_In_ ACCESS_MASK DesiredAccess,_In_opt_ POBJECT_ATTRIBUTES ObjectAttributes,_In_ EVENT_TYPE EventType,_In_ BOOLEAN InitialState)
HRESULT None windowscodecs.IEnumString_Reset_WIC_Proxy(_In_ IEnumString *THIS_PTR,_In_ ULONG celt,_Out_ LPOLESTR *rgelt,_Out_ ULONG *pceltFetched)
HRESULT None fxscomex.put_ArchiveAgeLimit([in] long lArchiveAgeLimit)
LONG None user32.ChangeDisplaySettings(_In_ DEVMODE *lpDevMode,_In_ DWORD dwflags)
LONG None user32.ChangeDisplaySettingsW(_In_ DEVMODE *lpDevMode,_In_ DWORD dwflags)
LONG None user32.ChangeDisplaySettingsA(_In_ DEVMODE *lpDevMode,_In_ DWORD dwflags)
BOOLEAN CALLBACK None.SecureMemoryCacheCallback(_In_ PVOID Addr,_In_ SIZE_T Range)
BOOL None None.IsVarTypeFloat(_In_ VARTYPE vt)
uint32 None dnsserverpsprovider.Set([in] string ClientSubnet,[in] string Fqdn,[in] string ServerInterfaceIP,[in] string Name,[in] string Condition,[in] boolean PassThru,[in] string ComputerName,[out] DnsServerResponseRateLimitingExceptionlist cmdletOutput)
BOOL WINAPI crypt32.CertVerifyValidityNesting(_In_ PCERT_INFO pSubjectInfo,_In_ PCERT_INFO pIssuerInfo)
HRESULT None None.getAllResponseHeaders(BSTR *pbstrHeaders None)
DWORD WINAPI nmapi.GetFrameMacHeaderLength(_In_ HFRAME hFrame)
LONG TSPIAPI None.TSPI_phoneSetHookSwitch(DRV_REQUESTID dwRequestID None,HDRVPHONE hdPhone None,DWORD dwHookSwitchDevs None,DWORD dwHookSwitchMode None)
typedef None None.VOID(__stdcall *WAITORTIMERCALLBACK None)
BOOL None None.ListView_GetInsertMark(HWND hwnd None,PLVINSERTMARK plvim None)
NET_API_STATUS WINAPI netapi32.NetCreateProvisioningPackage(_In_ PNETSETUP_PROVISIONING_PARAMS pProvisioningParams,_Out_opt_ PBYTE *pPackageBinData,_Out_opt_ DWORD *pdwPackageBinDataSize,_Out_opt_ LPWSTR *pPackageTextData)
HRESULT None oleaut32.VarBstrFromR4(_In_ FLOAT fltIn,_In_ LCID lcid,_In_ ULONG dwFlags,_Out_ BSTR *pbstrOut)
MSIDBERROR None msi.MsiViewGetError(_In_ MSIHANDLE hView,_Out_ LPTSTR szColumnNameBuffer,_Inout_ DWORD *pcchBuf)
MSIDBERROR None msi.MsiViewGetErrorW(_In_ MSIHANDLE hView,_Out_ LPTSTR szColumnNameBuffer,_Inout_ DWORD *pcchBuf)
MSIDBERROR None msi.MsiViewGetErrorA(_In_ MSIHANDLE hView,_Out_ LPTSTR szColumnNameBuffer,_Inout_ DWORD *pcchBuf)
HRESULT None None.SetSingleTransformNode(ID2D1TransformNode *node None)
HRESULT None propsys.PropVariantToUInt64Vector(_In_ REFPROPVARIANT propvar,_Out_ ULONGLONG *prgn,_In_ ULONG crgn,_Out_ ULONG *pcElem)
public void None.GetObjectData(SerializationInfo info None,StreamingContext context None)
private void None.button1_Click(Object sender None,System.EventArgs e None)
BOOL WINAPI None.CryptGetLocalKeyLimits(_In_ ALG_ID algId,_In_ DWORD dwFlags,_Out_ PCRYPT_KEY_LIMITS pLimits,_Inout_ LPDWORD cbLimitLength)
VOID None None.SetThreadpoolCallbackPool(_Inout_ PTP_CALLBACK_ENVIRON pcbe,_In_ PTP_POOL ptpp)
HCLUSENUM WINAPI clusapi.ClusterOpenEnum(_In_ HCLUSTER hCluster,_In_ DWORD dwType)
DWORD WINAPI virtdisk.AddVirtualDiskParent(_In_ HANDLE VirtualDiskHandle,_In_ PCWSTR ParentPath)
uint32 None cimwin32.EnableStatic([in] string IPAddress[],[in] string SubnetMask[])
protected void None.RenderChildren(HtmlTextWriter writer None)
DWORD None iphlpapi.GetIfTable(_Out_ PMIB_IFTABLE pIfTable,_Inout_ PULONG pdwSize,_In_ BOOL bOrder)
LONG WINAPI tapi32.lineConfigProvider(HWND hwndOwner None,DWORD dwPermanentProviderID None)
HRESULT None None.CueStream(IXMLDOMElement*pPlaylistEntry None None)
BOOL None None.ComboBox_ShowDropdown(HWND hwndCtl None,BOOL fShow None)
protected Object None.GetService(Type service None)
HRESULT None None.InitPropVariantFromDouble(_In_ DOUBLE dblVal,_Out_ PROPVARIANT *ppropvar)
HRESULT None None.get_newEnum(IUnknown **ppUnk None)
DWORD None mprapi.MprConfigInterfaceGetHandle(_In_ HANDLE hMprConfig,_In_ LPWSTR lpwsInterfaceName,_Out_ HANDLE *phRouterInterface)
HRESULT None None.get_PlayerBytesSent(VARIANT* pVal None)
BOOL None comctl32.ImageList_DragShowNolock(BOOL fShow None)
HRESULT None None.LocalEnclosurePath(LPWSTR *ppszPath None)
HRESULT None msdrm.DRMIsActivated(_In_ DRMHSESSION hClient,_In_ UINT uFlags,_In_ DRM_ACTSERV_INFO *pActServInfo)
HRESULT None cscsvc.IsPinnedForUser([out] BOOL *pbPinnedForUser,[out] BOOL *pbInherit)
DWORD WINAPI nmapi.GetFrameDstAddressOffset(_In_ HFRAME hFrame,_In_ DWORD AddressType,_In_ LPDWORD AddressLength)
BOOLEAN None None.IoCancelIrp(_In_ PIRP Irp)
COLORREF None comctl32.ImageList_GetBkColor(_In_ HIMAGELIST himl)
HRESULT None oleaut32.VarI1FromDate(_In_ DATE dateIn,_Out_ CHAR *pcOut)
PCHAR None wldap32.ldap_err2string(_In_ ULONG err)
PCHAR None wldap32.ldap_err2stringW(_In_ ULONG err)
PCHAR None wldap32.ldap_err2stringA(_In_ ULONG err)
INT None wldap32.ber_scanf(_Inout_ BerElement *pBerElement,_In_ PCHAR fmt,_In_ ... None)
HRESULT None None.GetSyncChange([out] ISyncChange **ppSyncChange)
DWORD WINAPI wlanapi.WlanHostedNetworkStopUsing(_In_ HANDLE hClientHandle,_Out_opt_ PWLAN_HOSTED_NETWORK_REASON pFailReason,_Reserved_ PVOID pvReserved)
NETIOAPI_API None iphlpapi.GetIpPathTable(_In_ ADDRESS_FAMILY Family,_Out_ PMIB_IPPATH_TABLE *Table)
BOOL None None.WlxInitialize(_In_ LPWSTR lpWinsta,_In_ HANDLE hWlx,_In_ PVOID pvReserved,_In_ PVOID pWinlogonFunctions,_Out_ PVOID *pWlxContext)
SECURITY_STATUS SEC_Entry secur32.QuerySecurityContextToken(_In_ PCtxtHandle phContext,_Out_ HANDLE *phToken)
ULONG None wldap32.ldap_bind_s(_In_ LDAP *ld,_In_ PCHAR dn,_In_ PCHAR cred,_In_ ULONG method)
ULONG None wldap32.ldap_bind_sW(_In_ LDAP *ld,_In_ PCHAR dn,_In_ PCHAR cred,_In_ ULONG method)
ULONG None wldap32.ldap_bind_sA(_In_ LDAP *ld,_In_ PCHAR dn,_In_ PCHAR cred,_In_ ULONG method)
BOOL None None.TreeView_GetItem(HWND hwndTV None,LPTVITEM pitem None)
SECURITY_STATUS SEC_ENTRY secur32.SaslGetContextOption(_In_ PCtxtHandle ContextHandle,_In_ ULONG Option,_Out_ PVOID Value,_Out_ ULONG Size,_Out_opt_ PULONG Needed)
protected void None.SetTopLevel(boolean value None)
SECURITY_STATUS SEC_Entry secur32.QueryCredentialsAttributes(_In_ PCredHandle phCredential,_In_ ULONG ulAttribute,_Out_ PVOID pBuffer)
SECURITY_STATUS SEC_Entry secur32.QueryCredentialsAttributesW(_In_ PCredHandle phCredential,_In_ ULONG ulAttribute,_Out_ PVOID pBuffer)
SECURITY_STATUS SEC_Entry secur32.QueryCredentialsAttributesA(_In_ PCredHandle phCredential,_In_ ULONG ulAttribute,_Out_ PVOID pBuffer)
VOID CALLBACK None.WaitCallback(_Inout_ PTP_CALLBACK_INSTANCE Instance,_Inout_opt_ PVOID Context,_Inout_ PTP_WAIT Wait,_In_ TP_WAIT_RESULT WaitResult)
HRESULT None None.GetVertexShader([out None None,retval] IDirect3DVertexShader9 **ppShader)
LPWSTR None shlwapi.CharLowerWrapW(_Inout_ LPWSTR pch)
HRESULT None None.get_AvailableIPAddresses(IWMSAvailableIPAddresses** ppIPAddrList None)
HRESULT None None.GetEnableUDP([out] BOOL *pfEnableUDP)
uint32 None dnsserverpsprovider.Remove([in] string ComputerName,[in] boolean Force,[in] string Name,[in] boolean PassThru,[out] DnsServerResponseRateLimitingExceptionlist cmdletOutput)
HRESULT None fxscomex.put_OutgoingQueueBlocked([in] VARIANT_BOOL bOutgoingBlocked)
protected void None.OnContextMenuOpening(ContextMenuEventArgs e None)
public void None.WriteLine(String format None,Object arg0 None,Object arg1 None)
uint32 None sppwmi.SetKeyManagementServiceListeningPort([in] uint32 PortNumber)
HRESULT None oleaut32.VarR8FromDate(_In_ DATE dateIn,_Out_ DOUBLE *pdblOut)
HRESULT None None.GetExtendedAttribute(DWORD ValueName None,VARIANT* pVariantValue None)
UINT None None.ListView_MapIndexToID(HWND hwnd None,UINT index None)
BOOL WINAPI authz.AuthzUninstallSecurityEventSource(_In_ DWORD dwFlags,_In_ PCWSTR szEventSourceName)
DWORD WINAPI wifidisplay.WFDSetDisplaySinkPersistedGroupIDList(_In_ UINT32 cGroupIDList,_In_ DOT11_WFD_GROUP_ID *pGroupIDList)
DWORD None rasapi32.RasClearLinkStatistics(_In_ HRASCONN hRasConn,_In_ DWORD dwSubEntry)
NETIOAPI_API None iphlpapi.GetIfTable2Ex(_In_ MIB_IF_TABLE_LEVEL Level,_Out_ PMIB_IF_TABLE2 *Table)
NTSTATUS None None.CallPackageEx(_In_ PUNICODE_STRING AuthenticationPackage,_In_ PVOID ClientBufferBase,_In_ PVOID ProtocolSubmitBuffer,_In_ ULONG SubmitBufferLength,_Out_ PVOID *ProtocolReturnBuffer,_Out_ PULONG ReturnBufferLength,_Out_ PNTSTATUS ProtocolStatus)
BOOL WINAPI userenv.CreateUserProfileEx(_In_ PSID pSid,_In_ LPCTSTR lpUserName,_In_opt_ LPCTSTR lpUserHive,_Out_opt_ LPTSTR lpProfileDir,_In_ DWORD dwDirSize,_In_ BOOL bWin9xUpg)
BOOL WINAPI userenv.CreateUserProfileExW(_In_ PSID pSid,_In_ LPCTSTR lpUserName,_In_opt_ LPCTSTR lpUserHive,_Out_opt_ LPTSTR lpProfileDir,_In_ DWORD dwDirSize,_In_ BOOL bWin9xUpg)
BOOL WINAPI userenv.CreateUserProfileExA(_In_ PSID pSid,_In_ LPCTSTR lpUserName,_In_opt_ LPCTSTR lpUserHive,_Out_opt_ LPTSTR lpProfileDir,_In_ DWORD dwDirSize,_In_ BOOL bWin9xUpg)
HANDLE None userenv.EnterCriticalPolicySection(_In_ BOOL bMachine)
uint32 None dnsserverpsprovider.RemoveByInputObject([in] string ComputerName,[in] boolean PassThru,[in] boolean Force,[in] DnsServerZoneDelegation InputObject,[in] string ZoneScope,[out] DnsServerZoneDelegation cmdletOutput)
HRESULT WINAPI webservices.WsGetReaderPosition(_In_ WS_XML_READER* reader,_Out_ WS_XML_NODE_POSITION* *nodePosition,_In_opt_ WS_ERROR* error)
BOOLEAN WINAPI powrprof.WritePwrScheme(_In_ PUINT puiID,_In_ LPWSTR lpszName,_In_opt_ LPWSTR lpszDescription,_In_ PPOWER_POLICY pPowerPolicy)
DWORD None imm32.ImmGetCandidateListCount(_In_ HIMC hIMC,_Out_ LPDWORD lpdwListCount)
DWORD None imm32.ImmGetCandidateListCountW(_In_ HIMC hIMC,_Out_ LPDWORD lpdwListCount)
DWORD None imm32.ImmGetCandidateListCountA(_In_ HIMC hIMC,_Out_ LPDWORD lpdwListCount)
PDH_STATUS None pdh.PdhGetFormattedCounterValue(_In_ PDH_HCOUNTER hCounter,_In_ DWORD dwFormat,_Out_ LPDWORD lpdwType,_Out_ PPDH_FMT_COUNTERVALUE pValue)
uint32 None dhcpserverpsprovider.RemoveByClientId([in] boolean PassThru,[in] string ComputerName,[in] string ClientId[],[in] string ScopeId,[out] DhcpServerv4Lease cmdletOutput[])
HRESULT None None.Lock2D([out] BYTE **pbScanline0,[out] LONG *plPitch)
protected void None.OnPreviewDrop(DragEventArgs e None)
VOID CALLBACK None.SimpleCallback(_Inout_ PTP_CALLBACK_INSTANCE Instance,_Inout_opt_ PVOID Context)
LONG TSPIAPI None.TSPI_linePark(DRV_REQUESTID dwRequestID None,HDRVCALL hdCall None,DWORD dwParkMode None,LPCWSTR lpszDirAddress None,LPVARSTRING lpNonDirAddress None)
HRESULT None mfplat.MFCreateLegacyMediaBufferOnMFMediaBuffer(IMFSample *pIMFSample None,IMFMediaBuffer *pIMFMediaBuffer None,DWORD cbOffset None,IMediaBuffer **ppIMediaBuffer None)
protected void None.CopyPersonalizationState(WebPart webPartA None,WebPart webPartB None)
ULONG TDHAPI tdh.TdhDeletePayloadFilter(_Inout_ PVOID *PayloadFilterDescriptor)
void None None.Page_Load(Object sender None,System.EventArgs e None)
HRESULT None d2d1.SetUnitMode(D2D1_UNIT_MODE unitMode None)
HRESULT None None.GetPixelShaderDesc(D3DX11_PASS_SHADER_DESC *pDesc None)
BOOL None None.ListView_SortItems(HWND hwnd None,PFNLVCOMPARE pfnCompare None,LPARAM lParamSort None)
uint32 None dnsserverpsprovider.AddByMX([in] string ZoneName,[in] string MailExchange,[in] uint16 Preference,[in] datetime TimeToLive,[in] boolean AgeRecord,[in] boolean AllowUpdateAny,[in] string Name,[in] boolean MX,[in] string ComputerName,[in] boolean PassThru,[in] string ZoneScope,[out] DnsServerResourceRecord cmdletOutput)
public None None.PropertySet(IModelItemOwner owner None)
DWORD WINAPI clusapi.ClusterEnum(_In_ HCLUSENUM hEnum,_In_ DWORD dwIndex,_Out_ LPDWORD lpdwType,_Out_ LPWSTR lpszName,_Inout_ LPDWORD lpcchName)
BOOL WINAPI user32.EnableMenuItem(_In_ HMENU hMenu,_In_ UINT uIDEnableItem,_In_ UINT uEnable)
public void None.ExtractValuesFromCell(IOrderedDictionary dictionary None,DataControlFieldCell cell None,DataControlRowState rowState None,boolean includeReadOnly None)
function None None.ReceiveServerData(arg None None,context None None)
PUIDLIST_RELATIVE None shell32.ILGetNext(_In_opt_ PCUIDLIST_RELATIVE pidl)
public void None.OnClosed(ClosedReason closedReason None,ListMakerList fileList None)
NTSTATUS None None.LsaApCallPackage(_In_ PLSA_CLIENT_REQUEST ClientRequest,_In_ PVOID ProtocolSubmitBuffer,_In_ PVOID ClientBufferBase,_In_ ULONG SubmitBufferLength,_Out_ PVOID *ProtocolReturnBuffer,_Out_ PULONG ReturnBufferLength,_Out_ PNTSTATUS ProtocolStatus)
HRESULT None None.put_OutgoingDistributionConnections(long Val None)
HRESULT None fxscomex.get_Count([out None None,retval] long *lCount)
DWORD None imm32.ImmGetImeMenuItems(_In_ HIMC hIMC,_In_ DWORD dwFlags,_In_ DWORD dwType,_Out_opt_ LPIMEMENUITEMINFO lpImeParentMenu,_Out_opt_ LPIMEMENUITEMINFO lpImeMenu,_In_ DWORD dwSize)
DWORD None imm32.ImmGetImeMenuItemsW(_In_ HIMC hIMC,_In_ DWORD dwFlags,_In_ DWORD dwType,_Out_opt_ LPIMEMENUITEMINFO lpImeParentMenu,_Out_opt_ LPIMEMENUITEMINFO lpImeMenu,_In_ DWORD dwSize)
DWORD None imm32.ImmGetImeMenuItemsA(_In_ HIMC hIMC,_In_ DWORD dwFlags,_In_ DWORD dwType,_Out_opt_ LPIMEMENUITEMINFO lpImeParentMenu,_Out_opt_ LPIMEMENUITEMINFO lpImeMenu,_In_ DWORD dwSize)
HRESULT WINAPI webservices.WsGetDictionary(_In_ WS_ENCODING encoding,WS_XML_DICTIONARY** dictionary None,_In_opt_ WS_ERROR* error)
BOOL WINAPI userenv.ExpandEnvironmentStringsForUser(_In_opt_ HANDLE hToken,_In_ LPCTSTR lpSrc,_Out_ LPTSTR lpDest,_In_ DWORD dwSize)
BOOL WINAPI userenv.ExpandEnvironmentStringsForUserW(_In_opt_ HANDLE hToken,_In_ LPCTSTR lpSrc,_Out_ LPTSTR lpDest,_In_ DWORD dwSize)
BOOL WINAPI userenv.ExpandEnvironmentStringsForUserA(_In_opt_ HANDLE hToken,_In_ LPCTSTR lpSrc,_Out_ LPTSTR lpDest,_In_ DWORD dwSize)
HRESULT None None.get_SupportDrivers([out] IVMSupportDriverCollection **supportDriverCollection)
uint32 None ncserverpsprovider.InstallUpdates([in] string UpdateIds,[out] string AllUpdateIds)
UInt32 None None.Refresh([out] String ExtendedStatus)
ULONG WINAPI advapi32.PerfAddCounters(_In_ HANDLE hQuery,_Inout_ PPERF_COUNTER_IDENTIFIER pCounters,DWORD cbCounters None)
PDH_STATUS None pdh.PdhGetDataSourceTimeRange(_In_ LPCTSTR szDataSource,_Out_ LPDWORD pdwNumEntries,_Out_ PPDH_TIME_INFO pInfo,_In_ LPDWORD pdwBufferSize)
PDH_STATUS None pdh.PdhGetDataSourceTimeRangeW(_In_ LPCTSTR szDataSource,_Out_ LPDWORD pdwNumEntries,_Out_ PPDH_TIME_INFO pInfo,_In_ LPDWORD pdwBufferSize)
PDH_STATUS None pdh.PdhGetDataSourceTimeRangeA(_In_ LPCTSTR szDataSource,_Out_ LPDWORD pdwNumEntries,_Out_ PPDH_TIME_INFO pInfo,_In_ LPDWORD pdwBufferSize)
DWORD None mprapi.MprAdminInterfaceDeviceGetInfo(_In_ MPR_SERVER_HANDLE hMprServer,_In_ HANDLE hInterface,_In_ DWORD dwIndex,_In_ DWORD dwLevel,_Out_ LPBYTE *lplpBuffer)
BOOL WINAPI crypt32.CryptSIPRemoveSignedDataMsg(_In_ SIP_SUBJECTINFO *pSubjectInfo,_In_ DWORD dwIndex)
protected void None.ObjectDataSource1_Filtering(Object sender None,ObjectDataSourceFilteringEventArgs e None)
HRESULT None None.get_StreamingRTSPPlayers(long* pVal None)
DWORD None ntdsapi.DsListDomainsInSite(_In_ HANDLE hDs,_In_ LPTSTR site,_Out_ PDS_NAME_RESULT *ppDomains)
DWORD None ntdsapi.DsListDomainsInSiteW(_In_ HANDLE hDs,_In_ LPTSTR site,_Out_ PDS_NAME_RESULT *ppDomains)
DWORD None ntdsapi.DsListDomainsInSiteA(_In_ HANDLE hDs,_In_ LPTSTR site,_Out_ PDS_NAME_RESULT *ppDomains)
NTSTATUS None None.ConvertAuthDataToToken(_In_ PVOID UserAuthData,_In_ ULONG UserAuthDataSize,_In_ SECURITY_IMPERSONATION_LEVEL ImpersonationLevel,_In_ PTOKEN_SOURCE TokenSource,_In_ SECURITY_LOGON_TYPE LogonType,_In_ PUNICODE_STRING AuthorityName,_Out_ PHANDLE Token,_Out_ PLUID LogonId,_Out_ PUNICODE_STRING AccountName,_Out_ PNTSTATUS SubStatus)
BOOL None schannel.SslEmptyCache(_In_ LPSTR pszTargetName,_In_ DWORD dwFlags)
BOOL None schannel.SslEmptyCacheW(_In_ LPSTR pszTargetName,_In_ DWORD dwFlags)
BOOL None schannel.SslEmptyCacheA(_In_ LPSTR pszTargetName,_In_ DWORD dwFlags)
uint32 None cimwin32.SetIPUseZeroBroadcast([in] boolean IPUseZeroBroadcast)
HRESULT None cscsvc.IsDeletedOffline([out] BOOL *pbDeletedOffline)
HANDLE None shell32.SHChangeNotification_Lock(_In_ HANDLE hChange,DWORD dwProcId None,_Out_opt_ PIDLIST_ABSOLUTE **pppidl,_Out_opt_ LONG *plEvent)
public int None.GetTokenFor(String literal None)
BOOL WINAPI advapi32.CryptReleaseContext(_In_ HCRYPTPROV hProv,_In_ DWORD dwFlags)
public Object None.GetPropertyValue(String propertyName None)
uint32 None cimwin32.SetPMTUBHDetect([in] boolean PMTUBHDetectEnabled)
PDH_STATUS None pdh.PdhEnumLogSetNames(_In_ LPCTSTR szDataSource,_Out_ LPTSTR mszLogSetNameList,_Inout_ LPDWORD pcchBufferLength)
PDH_STATUS None pdh.PdhEnumLogSetNamesW(_In_ LPCTSTR szDataSource,_Out_ LPTSTR mszLogSetNameList,_Inout_ LPDWORD pcchBufferLength)
PDH_STATUS None pdh.PdhEnumLogSetNamesA(_In_ LPCTSTR szDataSource,_Out_ LPTSTR mszLogSetNameList,_Inout_ LPDWORD pcchBufferLength)
BOOLEAN WINAPI advapi32.AuditLookupCategoryGuidFromCategoryId(_In_ POLICY_AUDIT_EVENT_TYPE AuditCategoryId,_Out_ GUID *pAuditCategoryGuid)
HRESULT None None.get_ConnectionRate(long* pVal None)
HRESULT None None.GetLogClientID([out] BOOL *pfLogClientID)
BOOL None shell32.SignalFileOpen(_In_ PCIDLIST_ABSOLUTE pidl)
NTSTATUS WINAPI bcrypt.BCryptResolveProviders(_In_opt_ LPCWSTR pszContext,_In_opt_ DWORD dwInterface,_In_opt_ LPCWSTR pszFunction,_In_opt_ LPCWSTR pszProvider,_In_ DWORD dwMode,_In_ DWORD dwFlags,_Inout_ PDWORD pcbBuffer,_Inout_ PCRYPT_PROVIDER_REFS *ppBuffer)
PDH_STATUS None pdh.PdhEnumObjectItems(_In_ LPCTSTR szDataSource,_In_ LPCTSTR szMachineName,_In_ LPCTSTR szObjectName,_Out_ LPTSTR mszCounterList,_Inout_ LPDWORD pcchCounterListLength,_Out_ LPTSTR mszInstanceList,_Inout_ LPDWORD pcchInstanceListLength,_In_ DWORD dwDetailLevel,_In_ DWORD dwFlags)
PDH_STATUS None pdh.PdhEnumObjectItemsW(_In_ LPCTSTR szDataSource,_In_ LPCTSTR szMachineName,_In_ LPCTSTR szObjectName,_Out_ LPTSTR mszCounterList,_Inout_ LPDWORD pcchCounterListLength,_Out_ LPTSTR mszInstanceList,_Inout_ LPDWORD pcchInstanceListLength,_In_ DWORD dwDetailLevel,_In_ DWORD dwFlags)
PDH_STATUS None pdh.PdhEnumObjectItemsA(_In_ LPCTSTR szDataSource,_In_ LPCTSTR szMachineName,_In_ LPCTSTR szObjectName,_Out_ LPTSTR mszCounterList,_Inout_ LPDWORD pcchCounterListLength,_Out_ LPTSTR mszInstanceList,_Inout_ LPDWORD pcchInstanceListLength,_In_ DWORD dwDetailLevel,_In_ DWORD dwFlags)
PDH_STATUS None pdh.PdhOpenQueryH(_In_ PDH_HLOG hDataSource,_In_ DWORD_PTR dwUserData,_Out_ PDH_HQUERY *phQuery)
DWORD None mprapi.MprConfigServerGetInfo(_In_ HANDLE hMprConfig,_In_ DWORD dwLevel,_Out_ LPBYTE *lplpBuffer)
public boolean None.Contains(String name None)
protected void None.OnMouseLeftButtonDown(MouseButtonEventArgs e None)
LPPROTOCOLINFO WINAPI nmapi.GetProtocolInfo(_In_ HPROTOCOL hProtocol)
DWORD None mprapi.MprConfigTransportSetInfo(_In_ HANDLE hMprConfig,_In_ HANDLE hRouterTransport,_In_opt_ LPBYTE pGlobalInfo,_In_opt_ DWORD dwGlobalInfoSize,_In_opt_ LPBYTE pClientInterfaceInfo,_In_opt_ DWORD dwClientInterfaceInfoSize,_In_opt_ LPWSTR lpwsDLLPath)
void None None.InterlockedExchange(in R dest,in T value,out T original_value)
DWORD WINAPI nmapi.GetFrameStoredLength(_In_ HFRAME hFrame)
PLDAPSearch None wldap32.ldap_search_init_page(_In_ PLDAP ExternalHandle,_In_ PCHAR DistinguishedName,_In_ ULONG ScopeOfSearch,_In_ PCHAR SearchFilter,_In_ PCHAR AttributeList[],_In_ ULONG AttributesOnly,_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls,_In_ ULONG PageTimeLimit,_In_ ULONG TotalSizeLimit,_In_ PLDAPSortKey *SortKeys)
PLDAPSearch None wldap32.ldap_search_init_pageW(_In_ PLDAP ExternalHandle,_In_ PCHAR DistinguishedName,_In_ ULONG ScopeOfSearch,_In_ PCHAR SearchFilter,_In_ PCHAR AttributeList[],_In_ ULONG AttributesOnly,_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls,_In_ ULONG PageTimeLimit,_In_ ULONG TotalSizeLimit,_In_ PLDAPSortKey *SortKeys)
PLDAPSearch None wldap32.ldap_search_init_pageA(_In_ PLDAP ExternalHandle,_In_ PCHAR DistinguishedName,_In_ ULONG ScopeOfSearch,_In_ PCHAR SearchFilter,_In_ PCHAR AttributeList[],_In_ ULONG AttributesOnly,_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls,_In_ ULONG PageTimeLimit,_In_ ULONG TotalSizeLimit,_In_ PLDAPSortKey *SortKeys)
UInt32 None None.SetUsage([in] UInt16 Usage,[out] String ExtendedStatus)
protected void None.OnPreviewStylusSystemGesture(StylusSystemGestureEventArgs e None)
ULONG WINAPI iphlpapi.GetTcp6Table2(_Out_ PMIB_TCP6TABLE2 TcpTable,_Inout_ PULONG SizePointer,_In_ BOOL Order)
HRESULT None propsys.PropVariantToBuffer(_In_ REFPROPVARIANT propvar,_Out_ VOID *pv,_In_ UINT cb)
HRESULT None None.put_onreadystatechange(VARIANT* readystatechangeSink None)
HRESULT None None.get_ConstructString([out] BSTR *pVal)
HWND None None.TreeView_EditLabel(HWND hwndTV None,HTREEITEM hitem None)
HWND None None.TreeView_GetEditControl(HWND hwndTV None)
BOOL WINAPI wininet.InternetSetPerSiteCookieDecision(_In_ LPCTSTR pchHostName,_In_ DWORD dwDecision)
BOOL WINAPI wininet.InternetSetPerSiteCookieDecisionW(_In_ LPCTSTR pchHostName,_In_ DWORD dwDecision)
BOOL WINAPI wininet.InternetSetPerSiteCookieDecisionA(_In_ LPCTSTR pchHostName,_In_ DWORD dwDecision)
NTSTATUS WINAPI bcrypt.BCryptQueryContextFunctionConfiguration(_In_ ULONG dwTable,_In_ LPCWSTR pszContext,_In_ ULONG dwInterface,_In_ LPCWSTR pszFunction,_Inout_ ULONG *pcbBuffer,_Inout_ PCRYPT_CONTEXT_FUNCTION_CONFIG *ppBuffer)
BOOL WINAPI advapi32.IsValidSid(_In_ PSID pSid)
DWORD WINAPI nmapi.GetCaptureMacType(_In_ HCAPTURE hCapture)
DWORD None mprapi.MprConfigInterfaceEnum(_In_ HANDLE hMprConfig,_In_ DWORD dwLevel,_Inout_ LPBYTE *lplpBuffer,_In_ DWORD dwPrefMaxLen,_Out_ LPDWORD lpdwEntriesRead,_Out_ LPDWORD lpdwTotalEntries,_Inout_opt_ LPDWORD lpdwResumeHandle)
VOID WINAPI kernel32.DeleteProcThreadAttributeList(_Inout_ LPPROC_THREAD_ATTRIBUTE_LIST lpAttributeList)
HRESULT None oleaut32.VarI2FromI4(_In_ LONG lIn,_Out_ SHORT *psOut)
HRESULT None oleaut32.VarDecMul(_In_ LPDECIMAL pdecLeft,_In_ LPDECIMAL pdecRight,_Out_ LPDECIMAL pdecResult)
HRESULT None None.CreateMutualExclusion([out] IMFASFMutualExclusion **ppIMutex)
HtmlTextWriter None None.CreateTextWriter(TextWriter writer None)
HRESULT None None.OnQueryCache(HRESULT hr None,WMS_CACHE_QUERY_RESPONSE Response None,BSTR bstrCacheUrl None,IWMSContext* pContentInfo None,IUnknown* pCachePluginContext None,VARIANT varContext None)
LONG TSPIAPI None.TSPI_lineGenerateDigits(HDRVCALL hdCall None,DWORD dwEndToEndID None,DWORD dwDigitMode None,LPCWSTR lpszDigits None,DWORD dwDuration None)
LRESULT CALLBACK None.acmDriverProc(DWORD_PTR dwID None,HDRIVER hdrvr None,UINT uMsg None,LPARAM lParam1 None,LPARAM lParam2 None)
HRESULT None propsys.PropVariantChangeType(_Out_ PROPVARIANT *ppropvarDest,_In_ REFPROPVARIANT propvarSrc,_In_ PROPVAR_CHANGE_FLAGS flags,_In_ VARTYPE vt)
LONG WINAPI winscard.SCardGetDeviceTypeId(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReaderName,_Inout_ LPDWORD pdwDeviceTypeId)
LONG WINAPI winscard.SCardGetDeviceTypeIdW(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReaderName,_Inout_ LPDWORD pdwDeviceTypeId)
LONG WINAPI winscard.SCardGetDeviceTypeIdA(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReaderName,_Inout_ LPDWORD pdwDeviceTypeId)
DWORD None None.NPFormatNetworkName(_In_ LPTSTR lpRemoteName,_Out_ LPTSTR lpFormattedName,_Inout_ LPDWORD lpnLength,_In_ DWORD dwFlags,_In_ DWORD dwAveCharPerLine)
ULONG WINAPI iphlpapi.GetTcpTable2(_Out_ PMIB_TCPTABLE2 TcpTable,_Inout_ PULONG SizePointer,_In_ BOOL Order)
INT None propsys.VariantCompare(_In_ REFVARIANT var1,_In_ REFVARIANT var2)
HRESULT None fxscomex.Add(long lCountryCode None,long lAreaCode None,VARIANT_BOOL bUseDevice None,BSTR bstrGroupName None,long lDeviceId None,[out None None,retval] IFaxOutboundRoutingRule **pFaxOutboundRoutingRule)
HGROUPSET WINAPI clusapi.OpenClusterGroupSet(_In_ HCLUSTER hCluster,_In_ LPCWSTR lpszGroupSetName)
public void None.CopyTo(Array array None,int arrayIndex None)
HRESULT None shell32.SelectItem(PCUITEMID_CHILD pidlItem None,UINT uFlags None)
public int None.Add(XmlElementAttribute attribute None)
DWORD None iphlpapi.GetExtendedUdpTable(_Out_ PVOID pUdpTable,_Inout_ PDWORD pdwSize,_In_ BOOL bOrder,_In_ ULONG ulAf,_In_ UDP_TABLE_CLASS TableClass,_In_ ULONG Reserved)
PCHAR None wldap32.ldap_next_attribute(_In_ LDAP *ld,_In_ LDAPMessage *entry,_Inout_ BerElement *ptr)
PCHAR None wldap32.ldap_next_attributeW(_In_ LDAP *ld,_In_ LDAPMessage *entry,_Inout_ BerElement *ptr)
PCHAR None wldap32.ldap_next_attributeA(_In_ LDAP *ld,_In_ LDAPMessage *entry,_Inout_ BerElement *ptr)
VOID WINAPI kernel32.ReleaseMutexWhenCallbackReturns(_Inout_ PTP_CALLBACK_INSTANCE pci,_In_ HANDLE mut)
public ShortcutStatus None.CreateDesktopShortcut(string title None,uri target None)
DWORD WINAPI clusapi.GetClusterInformation(_In_ HCLUSTER hCluster,_Out_ LPWSTR lpszClusterName,_Inout_ LPDWORD lpcchClusterName,_Out_opt_ LPCLUSTERVERSIONINFO lpClusterInfo)
protected void None.ConditionalExitStyle(XhtmlMobileTextWriter writer None,Style style None)
LONG WINAPI tapi32.lineGetCallInfo(HCALL hCall None,LPLINECALLINFO lpCallInfo None)
LONG WINAPI tapi32.lineGetCallInfoW(HCALL hCall None,LPLINECALLINFO lpCallInfo None)
LONG WINAPI tapi32.lineGetCallInfoA(HCALL hCall None,LPLINECALLINFO lpCallInfo None)
DWORD WINAPI mprapi.MprConfigFilterSetInfo(_In_ HANDLE hMprConfig,_In_ DWORD dwLevel,_In_ DWORD dwTransportId,_In_ LPBYTE lpBuffer)
HRESULT None propsys.PropVariantGetUInt16Elem(_In_ REFPROPVARIANT propvar,_In_ ULONG iElem,_Out_ USHORT *pnVal)
UINT None None.TreeView_MapHTREEITEMtoAccID(HWND hwnd None,HTREEITEM htreeitem None)
DWORD WINAPI powrprof.PowerGetActiveScheme(_In_opt_ HKEY UserRootPowerKey,_Out_ GUID **ActivePolicyGuid)
BOOL WINAPI None.CertStoreProvWriteCRLCallback(_In_ HCERTSTOREPROV hStoreProv,_In_ PCCRL_CONTEXT pCrlContext,_In_ DWORD dwFlags)
HRESULT None None.GetNavigateState([out] BNSTATE *pbnstate)
HRESULT None None.MarkAllItemsRead(VOID None None)
DWORD None mprapi.MprConfigTransportCreate(_In_ HANDLE hMprConfig,_In_ DWORD dwTransportId,_In_opt_ LPWSTR lpwsTransportName,_In_ LPBYTE pGlobalInfo,_In_ DWORD dwGlobalInfoSize,_In_opt_ LPBYTE pClientInterfaceInfo,_In_opt_ DWORD dwClientInterfaceInfoSize,_In_opt_ LPWSTR lpwsDLLPath,_Out_ HANDLE phRouterTransport)
private void None.MyPopupEventHandler(Object sender None,EventArgs e None)
public None None.SecurityPermissionAttribute(SecurityAction action None)
HRESULT None scardssp.get_Apdu([out] LPBYTEBUFFER *ppApdu)
HRESULT None mfplat.MFLockDXGIDeviceManager(_Out_ UINT *pResetToken,_Out_ IMFDXGIDeviceManager **ppManager)
HRESULT None oleaut32.VarDateFromI4(_In_ LONG lIn,_Out_ DATE *pdateOut)
HRESULT None ole32.Enum([out] IEnumSTATPROPSETSTG **ppenum)
HRESULT None None.SetMaxItemCount(UINT uiMaxItemCount None)
HRESULT None None.get_Visible([out None None,retval] VARIANT_BOOL *Visible)
private void None.DrawCursorsOnForm(Cursor cursor None)
BOOL WINAPI userenv.GetDefaultUserProfileDirectory(_Out_opt_ LPTSTR lpProfileDir,_Inout_ LPDWORD lpcchSize)
BOOL WINAPI userenv.GetDefaultUserProfileDirectoryW(_Out_opt_ LPTSTR lpProfileDir,_Inout_ LPDWORD lpcchSize)
BOOL WINAPI userenv.GetDefaultUserProfileDirectoryA(_Out_opt_ LPTSTR lpProfileDir,_Inout_ LPDWORD lpcchSize)
public Point None.TranslatePoint(Point point None,UIElement relativeTo None)
NTSTATUS None None.DrmForwardContentToInterface(_In_ ULONG ContentId,_In_ PUNKNOWN pUnknown,_In_ ULONG NumMethods)
HRESULT None None.GetStrokeLineJoin([out None None,retval] XPS_LINE_JOIN *strokeLineJoin)
BOOL None ole32.CoFileTimeToDosDateTime(_In_ FILETIME *lpFileTime,_Out_ LPWORD lpDosDate,_Out_ LPWORD lpDosTime)
public boolean None.Equals(Object obj None)
BOOL WINAPI iphlpapi.CancelIPChangeNotify(_In_ LPOVERLAPPED notifyOverlapped)
public Object None.ConvertFromString(ITypeDescriptorContext context None,CultureInfo culture None,String text None)
SECURITY_STATUS None sspicli.SspiDecryptAuthIdentity(_Inout_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE EncryptedAuthData)
BOOL None imm32.ImmSimulateHotKey(_In_ HWND hWnd,_In_ DWORD dwHotKeyID)
PDH_STATUS None pdh.PdhRemoveCounter(_In_ PDH_HCOUNTER hCounter)
PVOID None None.MmLockPagableDataSection(_In_ PVOID AddressWithinSection)
VOID None None.SetThreadpoolCallbackPriority(_Inout_ PTP_CALLBACK_ENVIRON pcbe,_In_ TP_CALLBACK_PRIORITY Priority)
HRESULT None None.GetForceRerunAutoProxyDetection([out] BOOL *pfForceRerunDetection)
protected void None.LinqDataSource_Updating(object sender None,LinqDataSourceUpdateEventArgs e None)
HRESULT None None.GetSampleDuration([out] LONGLONG *phnsSampleDuration)
HRESULT None mfplat.MFRegisterLocalSchemeHandler(_In_ PCWSTR szScheme,_In_ IMFActivate *pActivate)
DWORD WINAPI wlanapi.WlanGetSecuritySettings(_In_ HANDLE hClientHandle,_In_ WLAN_SECURABLE_OBJECT SecurableObject,_Out_opt_ PWLAN_OPCODE_VALUE_TYPE pValueType,_Out_ LPWSTR *pstrCurrentSDDL,_Out_ PDWORD pdwGrantedAccess)
HRESULT None None.GetFrameStatistics([out] DXGI_FRAME_STATISTICS *pStats)
HRESULT None shell32.SHCreateShellItem(_In_opt_ PCIDLIST_ABSOLUTE pidlParent,_In_opt_ IShellFolder *psfParent,_In_ PCUITEMID_CHILD pidl,_Out_ IShellItem **ppsi)
ULONG None wldap32.ldap_parse_sort_control(_In_ PLDAP ExternalHandle,_In_ PLDAPControl *Control,_Out_ ULONG *Result,_Out_ PCHAR *Attribute)
ULONG None wldap32.ldap_parse_sort_controlW(_In_ PLDAP ExternalHandle,_In_ PLDAPControl *Control,_Out_ ULONG *Result,_Out_ PCHAR *Attribute)
ULONG None wldap32.ldap_parse_sort_controlA(_In_ PLDAP ExternalHandle,_In_ PLDAPControl *Control,_Out_ ULONG *Result,_Out_ PCHAR *Attribute)
public void None.ItemRemoved(ListMakerItem item None)
HRESULT None None.CreateGeometry([out None None,retval] IXpsOMGeometry **geometry)
HRESULT None None.GetFormatSupport([out] _WAVEFORMATEX **pFormatEx,[out] UINT *pnFormatCount,[out] LPWSTR **pppwszMimeType,[out] UINT *pnMimeTypeCount)
protected void None.OnEnabledChanged(EventArgs e None)
DWORD None rasapi32.RasConnectionNotification(_In_ HRASCONN hrasconn,_In_ HANDLE hEvent,_In_ DWORD dwFlags)
DWORD None rasapi32.RasConnectionNotificationW(_In_ HRASCONN hrasconn,_In_ HANDLE hEvent,_In_ DWORD dwFlags)
DWORD None rasapi32.RasConnectionNotificationA(_In_ HRASCONN hrasconn,_In_ HANDLE hEvent,_In_ DWORD dwFlags)
IRawElementProviderSimple None None.GetOverrideProviderForHwnd(IntPtr hwnd None)
private void None.treeView1_MouseUp(Object sender None,MouseEventArgs e None)
DWORD None credui.CredUIStoreSSOCredW(_In_ PCWSTR pszRealm,_In_ PCWSTR pszUsername,_In_ PCWSTR pszPassword,_In_ BOOL bPersist)
protected void None.ConditionalExitFormat(XhtmlMobileTextWriter writer None,Style style None)
HRESULT None fxscomex.OnServerActivityChange(IFaxServer *pFaxServer None,long lIncomingMessages None,long lRoutingMessages None,long lOutgoingMessages None,long lQueuedMessages None)
HRESULT None None.GetViewFlags([out] PROPDESC_VIEW_FLAGS *ppdvFlags)
protected void None.OnLostMouseCapture(MouseEventArgs e None)
HCATINFO None wintrust.CryptCATAdminAddCatalog(_In_ HCATADMIN hCatAdmin,_In_ WCHAR *pwszCatalogFile,_In_ WCHAR *pwszSelectBaseName,_In_ DWORD dwFlags)
BOOL WINAPI avrt.AvRtCreateThreadOrderingGroup(_Out_ PHANDLE Context,_In_ PLARGE_INTEGER Period,_Inout_ GUID *ThreadOrderingGuid,_In_opt_ PLARGE_INTEGER Timeout)
HRESULT None None.DXVAHD_SetFrameFormat(IDXVAHD_VideoProcessor *pVP None,UINT stream None,DXVAHD_FRAME_FORMAT format None)
LONG WINAPI wintrust.WinVerifyTrust(_In_ HWND hWnd,_In_ GUID *pgActionID,_In_ LPVOID pWVTData)
BOOL None wintrust.CryptCATAdminReleaseContext(_In_ HCATADMIN hCatAdmin,_In_ DWORD dwFlags)
HRESULT None None.GetVertexShaderDesc(D3DX11_PASS_SHADER_DESC *pDesc None)
BOOL WINAPI user32.DragDetect(_In_ HWND hwnd,_In_ POINT pt)
HRESULT None oleaut32.VarI2FromStr(_In_ LPCOLESTR strIn,_In_ LCID lcid,_In_ ULONG dwFlags,_Out_ SHORT *psOut)
BOOL WINAPI winhttp.WinHttpCreateUrl(_In_ LPURL_COMPONENTS lpUrlComponents,_In_ DWORD dwFlags,_Out_ LPWSTR pwszUrl,_Inout_ LPDWORD lpdwUrlLength)
ULONG None wldap32.ldap_delete_ext_s(_In_ LDAP *ld,_In_ PCHAR dn,_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls)
ULONG None wldap32.ldap_delete_ext_sW(_In_ LDAP *ld,_In_ PCHAR dn,_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls)
ULONG None wldap32.ldap_delete_ext_sA(_In_ LDAP *ld,_In_ PCHAR dn,_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls)
HRESULT None oleaut32.VarI4FromStr(_In_ LPCOLESTR strIn,_In_ LCID lcid,_In_ ULONG dwFlags,_Out_ LONG *plOut)
HRESULT None None.get_Buttons([out None None,retval] IInkCursorButtons **Buttons)
HRESULT None scardssp.get_ReplyStatusSW2([out] LPBYTE pbySW2)
VOID WINAPI kernel32.CloseThreadpool(_Inout_ PTP_POOL ptpp)
DWORD APIENTRY mprapi.MprAdminServerGetInfo(_In_ MPR_SERVER_HANDLE hMprServer,_Out_ MPR_SERVER_EX *pServerInfo)
LONG WINAPI tapi32.lineGenerateDigits(HCALL hCall None,DWORD dwDigitMode None,LPCSTR lpszDigits None,DWORD dwDuration None)
LONG WINAPI tapi32.lineGenerateDigitsW(HCALL hCall None,DWORD dwDigitMode None,LPCSTR lpszDigits None,DWORD dwDuration None)
LONG WINAPI tapi32.lineGenerateDigitsA(HCALL hCall None,DWORD dwDigitMode None,LPCSTR lpszDigits None,DWORD dwDuration None)
BOOL None propsys.PropVariantToBooleanWithDefault(_In_ REFPROPVARIANT propvarIn,_In_ BOOL fDefault)
DWORD WINAPI clusapi.RegisterClusterNotifyV2(_In_ HCHANGE hChange,_In_ NOTIFY_FILTER_AND_TYPE Filter,_In_ HANDLE hObject,_In_ DWORD_PTR dwNotifyKey)
UINT None None.TreeView_GetVisibleCount(HWND hwndTV None)
BOOL None comctl32.ImageList_Destroy(_In_opt_ HIMAGELIST himl)
ULONG None advapi32.PerfSetCounterRefValue(_In_ HANDLE hProvider,_In_ PPERF_COUNTERSET_INSTANCE pInstance,_In_ ULONG CounterId,_In_ PVOID lpAddr)
DWORD None mprapi.MprAdminPortDisconnect(_In_ RAS_SERVER_HANDLE hRasServer,_In_ HANDLE hPort)
HRESULT STDAPI cldapi.CfGetTransferKey(_In_ HANDLE FileHandle,_Out_ PLARGE_INTEGER TransferKey)
HRESULT None dwrite.GetFontFile([out] IDWriteFontFile **fontFile)
HRESULT None activeds.ChangePassword(IADsUser *pUser None,LPWSTR oldPasswd None,LPWSTR newPasswd None)
BOOL WINAPI kernel32.GetNumaHighestNodeNumber(_Out_ PULONG HighestNodeNumber)
errno_t None None.wctomb_s(int *pRetValue None,char *mbchar None,size_t sizeInBytes None,wchar_t wchar None)
BOOL None None.ListView_Arrange(HWND hwnd None,UINT code None)
ULONG TDHAPI tdh.TdhDeletePayloadFilter(_Inout_ PVOID *PayloadFilterDescriptor)
BOOL None shell32.PathYetAnotherMakeUniqueName(_Out_ PWSTR pszUniqueName,_In_ PCWSTR pszPath,_In_opt_ PCWSTR pszShort,_In_opt_ PCWSTR pszFileSpec)
DWORD WINAPI ntdsapi.DsBindToISTG(_In_opt_ LPCTSTR SiteName,_Out_ HANDLE *phDS)
DWORD WINAPI ntdsapi.DsBindToISTGW(_In_opt_ LPCTSTR SiteName,_Out_ HANDLE *phDS)
DWORD WINAPI ntdsapi.DsBindToISTGA(_In_opt_ LPCTSTR SiteName,_Out_ HANDLE *phDS)
HRESULT None oleaut32.VarR4FromI1(_In_ CHAR cIn,_Out_ FLOAT *pfltOut)
VOID None None.PropSheet_ShowWizButtons(HWND hDlg None,DWORD dwFlag None,DWORD dwButton None)
DWORD None ntdsapi.DsCrackSpn(_In_ LPCTSTR pszSPN,_Inout_opt_ DWORD *pcServiceClass,_Out_opt_ LPTSTR ServiceClass,_Inout_opt_ DWORD *pcServiceName,_Out_opt_ LPTSTR ServiceName,_Inout_opt_ DWORD *pcInstanceName,_Out_opt_ LPTSTR InstanceName,_Out_opt_ USHORT *pInstancePort)
DWORD None ntdsapi.DsCrackSpnW(_In_ LPCTSTR pszSPN,_Inout_opt_ DWORD *pcServiceClass,_Out_opt_ LPTSTR ServiceClass,_Inout_opt_ DWORD *pcServiceName,_Out_opt_ LPTSTR ServiceName,_Inout_opt_ DWORD *pcInstanceName,_Out_opt_ LPTSTR InstanceName,_Out_opt_ USHORT *pInstancePort)
DWORD None ntdsapi.DsCrackSpnA(_In_ LPCTSTR pszSPN,_Inout_opt_ DWORD *pcServiceClass,_Out_opt_ LPTSTR ServiceClass,_Inout_opt_ DWORD *pcServiceName,_Out_opt_ LPTSTR ServiceName,_Inout_opt_ DWORD *pcInstanceName,_Out_opt_ LPTSTR InstanceName,_Out_opt_ USHORT *pInstancePort)
private void None.DrawCursorsOnForm(Cursor cursor None)
BOOL None None.IsVariantArray(_In_ REFVARIANT var)
HRESULT None None.GetQueuePathnameProp(LPCWSTR wszQueueFormatName None,LPWSTR *pwszValue None)
DWORD WINAPI clusapi.GetClusterNotify(_In_ HCHANGE hChange,_Out_ DWORD_PTR *lpdwNotifyKey,_Out_ LPDWORD lpdwFilterType,_Out_ LPWSTR lpszName,_Inout_ LPDWORD lpcchName,_In_opt_ DWORD dwMilliseconds)
MI_INLINE MI_Result None.MI_OperationOptions_GetOptionCount(_In_ MI_OperationOptions *options,_Out_ MI_Uint32 *count)
HCHANGE WINAPI clusapi.CreateClusterNotifyPort(_In_ HCHANGE hChange,_In_ HCLUSTER hCluster,_In_ DWORD dwFilter,_In_ DWORD_PTR dwNotifyKey)
Object None None.GetFormat(Type formatType None)
public None None.CheckoutException(String message None,int errorCode None)
private void None.button1_Click(Object sender None,System.EventArgs e None)
public PropertyMetadata None.GetMetadata(Type forType None)
BOOL WINAPI userenv.LoadUserProfile(_In_ HANDLE hToken,_Inout_ LPPROFILEINFO lpProfileInfo)
BOOL WINAPI userenv.LoadUserProfileW(_In_ HANDLE hToken,_Inout_ LPPROFILEINFO lpProfileInfo)
BOOL WINAPI userenv.LoadUserProfileA(_In_ HANDLE hToken,_Inout_ LPPROFILEINFO lpProfileInfo)
HRESULT None None.Delete(VOID None None)
HRESULT None None.cloneNode(VARIANT_BOOL deep None,IXMLDOMNode **cloneRoot None)
LONG TSPIAPI None.TSPI_lineGetLineDevStatus(HDRVLINE hdLine None,LPLINEDEVSTATUS lpLineDevStatus None)
HGROUP WINAPI clusapi.CreateClusterGroup(_In_ HCLUSTER hCluster,_In_ LPCWSTR lpszGroupName)
PCCTL_CONTEXT WINAPI crypt32.CertEnumCTLsInStore(_In_ HCERTSTORE hCertStore,_In_ PCCTL_CONTEXT pPrevCtlContext)
PVOID WINAPI wlanapi.WlanAllocateMemory(_In_ DWORD dwMemorySize)
RPC_STATUS WINAPI rpcrt4.RpcServerInterfaceGroupInqBindings(_In_ RPC_INTERFACE_GROUP IfGroup,_Out_ RPC_BINDING_VECTOR *BindingVector)
ULONG None wldap32.ldap_parse_result(_In_ LDAP *Connection,_In_ LDAPMessage *ResultMessage,_Out_opt_ ULONG *ReturnCode,_Out_opt_ PWCHAR *MatchedDNs,_Out_opt_ PWCHAR *ErrorMessage,_Out_opt_ PWCHAR **Referrals,_Out_opt_ PLDAPControl **ServerControls,_In_ BOOLEAN Freeit)
ULONG None wldap32.ldap_parse_resultW(_In_ LDAP *Connection,_In_ LDAPMessage *ResultMessage,_Out_opt_ ULONG *ReturnCode,_Out_opt_ PWCHAR *MatchedDNs,_Out_opt_ PWCHAR *ErrorMessage,_Out_opt_ PWCHAR **Referrals,_Out_opt_ PLDAPControl **ServerControls,_In_ BOOLEAN Freeit)
ULONG None wldap32.ldap_parse_resultA(_In_ LDAP *Connection,_In_ LDAPMessage *ResultMessage,_Out_opt_ ULONG *ReturnCode,_Out_opt_ PWCHAR *MatchedDNs,_Out_opt_ PWCHAR *ErrorMessage,_Out_opt_ PWCHAR **Referrals,_Out_opt_ PLDAPControl **ServerControls,_In_ BOOLEAN Freeit)
RPC_STATUS RPC_ENTRY rpcrt4.RpcObjectSetType(UUID *ObjUuid None,UUID *TypeUuid None)
HRESULT None None.InitVariantFromDosDateTime(_In_ WORD wDate,_In_ WORD wTime,_Out_ VARIANT *pvar)
uint32 None ramgmtpsprovider.Set([in] uint8 SslCertificate[],[in] string ComputerName,[in] string InternetInterface,[in] string InternalInterface,[in] uint64 CapacityKbps,[in] boolean UseHttp,[in] boolean Force,[in] boolean PassThru,[out] RemoteAccessCommon cmdletOutput)
protected void None.OnCommand(CommandEventArgs e None)
public void None.InitializeCell(DataControlFieldCell cell None,DataControlCellType cellType None,DataControlRowState rowState None,int rowIndex None)
HWND WINAPI user32.SetCapture(_In_ HWND hWnd)
DWORD None shdocvw.SoftwareUpdateMessageBox(_In_opt_ HWND hWnd,_In_ PCWSTR pszDistUnit,DWORD dwFlags None,_Out_opt_ LPSOFTDISTINFO psdi)
HRESULT None propsys.WinRTPropertyValueToPropVariant(_In_opt_ IUnknown *propertyValue,_Out_ PROPVARIANT *convertedValue)
protected void None.OnKeyUp(KeyEventArgs e None)
HRESULT None fxscomex.OnServerShutDown(IFaxServer2 *pFaxServer2 None)
HRESULT None None.LongMult(_In_ LONG lMultiplicand,_In_ LONG lMultiplier,_Out_ LONG *plResult)
HINSTANCE None shell32.FindExecutable(_In_ LPCTSTR lpFile,_In_opt_ LPCTSTR lpDirectory,_Out_ LPTSTR lpResult)
HINSTANCE None shell32.FindExecutableW(_In_ LPCTSTR lpFile,_In_opt_ LPCTSTR lpDirectory,_Out_ LPTSTR lpResult)
HINSTANCE None shell32.FindExecutableA(_In_ LPCTSTR lpFile,_In_opt_ LPCTSTR lpDirectory,_Out_ LPTSTR lpResult)
DWORD None mprapi.MprAdminTransportGetInfo(_In_ MPR_SERVER_HANDLE hMprServer,_In_ DWORD dwTransportId,_Out_opt_ LPBYTE *ppGlobalInfo,_Out_opt_ LPDWORD lpdwGlobalInfoSize,_Out_opt_ LPBYTE *ppClientInterfaceInfo,_Out_opt_ LPDWORD lpdwClientInterfaceInfoSize)
DWORD APIENTRY mprapi.MprAdminServerGetInfo(_In_ MPR_SERVER_HANDLE hMprServer,_Out_ MPR_SERVER_EX *pServerInfo)
BOOL None wininet.InternetAutodial(_In_ DWORD dwFlags,_In_ HWND hwndParent)
HANDLE WINAPI avrt.AvSetMmThreadCharacteristics(_In_ LPCTSTR TaskName,_Inout_ LPDWORD TaskIndex)
HANDLE WINAPI avrt.AvSetMmThreadCharacteristicsW(_In_ LPCTSTR TaskName,_Inout_ LPDWORD TaskIndex)
HANDLE WINAPI avrt.AvSetMmThreadCharacteristicsA(_In_ LPCTSTR TaskName,_Inout_ LPDWORD TaskIndex)
protected void None.Dispose(boolean disposing None)
NTSTATUS None None.WdfDeviceInitAssignSDDLString(_In_ PWDFDEVICE_INIT DeviceInit,_In_opt_ PCUNICODE_STRING SDDLString)
DWORD WINAPI nmapi.FilterAddObject(_In_ HFILTER hFilter,_Out_ LPFILTEROBJECT lpFilterObject)
HRESULT None None.OpenDirectory(IWMSCommandContext* pCommandContext None,IWMSContext* pUserContext None,IWMSContext* pPresentationContext None,LPWSTR pszContainerName None,DWORD dwFlags None,IWMSBufferAllocator* pBufferAllocator None,IWMSDataSourcePluginCallback* pCallback None,QWORD qwContext None)
HRESULT None shell32.SHParseDisplayName(_In_ LPCWSTR pszName,_In_opt_ IBindCtx *pbc,_Out_ PIDLIST_ABSOLUTE *ppidl,_In_ SFGAOF sfgaoIn,_Out_opt_ SFGAOF *psfgaoOut)
HRESULT None None.GetDeviceSerialNumber([out] DRM_VAL16 *pSerialNumber)
DWORD None mprapi.MprAdminConnectionClearStats(_In_ RAS_SERVER_HANDLE hRasServer,_In_ HANDLE hRasConnection)
LONG TSPIAPI None.TSPI_lineAccept(DRV_REQUESTID dwRequestID None,HDRVCALL hdCall None,LPCSTR lpsUserUserInfo None,DWORD dwSize None)
HRESULT None ole32.CreateGenericComposite(_In_opt_ LPMONIKER pmkFirst,_In_opt_ LPMONIKER pmkRest,_Out_ LPMONIKER *ppmkComposite)
PDH_STATUS None pdh.PdhUpdateLog(_In_ PDH_HLOG hLog,_In_ LPCTSTR szUserString)
PDH_STATUS None pdh.PdhUpdateLogW(_In_ PDH_HLOG hLog,_In_ LPCTSTR szUserString)
PDH_STATUS None pdh.PdhUpdateLogA(_In_ PDH_HLOG hLog,_In_ LPCTSTR szUserString)
PIDLIST_RELATIVE None shell32.ILAppendID(_In_opt_ PIDLIST_RELATIVE pidl,_In_ LPSHITEMID pmkid,BOOL fAppend None)
DWORD None rasapi32.RasGetCustomAuthData(_In_ LPCWSTR pszPhonebook,_In_ LPCWSTR pszEntry,_Out_ BYTE *pbCustomAuthData,_Inout_ DWORD *pdwSizeofCustomAuthData)
DWORD None rasapi32.RasGetCustomAuthDataW(_In_ LPCWSTR pszPhonebook,_In_ LPCWSTR pszEntry,_Out_ BYTE *pbCustomAuthData,_Inout_ DWORD *pdwSizeofCustomAuthData)
DWORD None rasapi32.RasGetCustomAuthDataA(_In_ LPCWSTR pszPhonebook,_In_ LPCWSTR pszEntry,_Out_ BYTE *pbCustomAuthData,_Inout_ DWORD *pdwSizeofCustomAuthData)
private void None.MyForm_Layout(Object sender None,System.Windows.Forms.LayoutEventArgs e None)
DWORD None iphlpapi.DisableMediaSense(HANDLE *pHandle None,OVERLAPPED *pOverlapped None)
BOOL WINAPI advapi32.DestroyPrivateObjectSecurity(_Inout_ PSECURITY_DESCRIPTOR *ObjectDescriptor)
NTSTATUS None None.SpDeleteCredentials(_In_ LSA_SEC_HANDLE CredentialHandle,_In_ PSecBuffer Key)
RPC_STATUS RPC_ENTRY rpcrt4.RpcMgmtStopServerListening(RPC_BINDING_HANDLE Binding None)
ULONG None sechost.ControlTrace(_In_ TRACEHANDLE SessionHandle,_In_ LPCTSTR SessionName,_Inout_ PEVENT_TRACE_PROPERTIES Properties,_In_ ULONG ControlCode)
ULONG None sechost.ControlTraceW(_In_ TRACEHANDLE SessionHandle,_In_ LPCTSTR SessionName,_Inout_ PEVENT_TRACE_PROPERTIES Properties,_In_ ULONG ControlCode)
ULONG None sechost.ControlTraceA(_In_ TRACEHANDLE SessionHandle,_In_ LPCTSTR SessionName,_Inout_ PEVENT_TRACE_PROPERTIES Properties,_In_ ULONG ControlCode)
MI_INLINE MI_Result None.MI_Context_GetCustomOptionCount(_In_ MI_Context *context,_Out_opt_ MI_Uint32 *count)
PDH_STATUS None pdh.PdhParseInstanceName(_In_ LPCTSTR szInstanceString,_Out_ LPTSTR szInstanceName,_Inout_ LPDWORD pcchInstanceNameLength,_Out_ LPTSTR szParentName,_Inout_ LPDWORD pcchParentNameLength,_Out_ LPDWORD lpIndex)
PDH_STATUS None pdh.PdhParseInstanceNameW(_In_ LPCTSTR szInstanceString,_Out_ LPTSTR szInstanceName,_Inout_ LPDWORD pcchInstanceNameLength,_Out_ LPTSTR szParentName,_Inout_ LPDWORD pcchParentNameLength,_Out_ LPDWORD lpIndex)
PDH_STATUS None pdh.PdhParseInstanceNameA(_In_ LPCTSTR szInstanceString,_Out_ LPTSTR szInstanceName,_Inout_ LPDWORD pcchInstanceNameLength,_Out_ LPTSTR szParentName,_Inout_ LPDWORD pcchParentNameLength,_Out_ LPDWORD lpIndex)
LPVOID None ole32.CoTaskMemRealloc(_In_opt_ LPVOID pv,_In_ SIZE_T cb)
NETIO_STATUS WINAPI iphlpapi.ConvertIpv4MaskToLength(_In_ ULONG Mask,_Out_ PUINT8 MaskLength)
public void None.OnPreRender(EventArgs e None)
STDAPI None mfplat.MFCheckContentProtectionDevice(_In_ REFGUID ProtectionSystemId)
LONG TSPIAPI None.TSPI_lineClose(HDRVLINE hdLine None)
BOOL None propsys.PropVariantToBooleanWithDefault(_In_ REFPROPVARIANT propvarIn,_In_ BOOL fDefault)
NTSTATUS None None.WdfUsbTargetPipeFormatRequestForRead(_In_ WDFUSBPIPE Pipe,_In_ WDFREQUEST Request,_In_opt_ WDFMEMORY ReadMemory,_In_opt_ PWDFMEMORY_OFFSET ReadOffset)
public None None.Point(int x None,int y None)
HRESULT None None.GetStreamLimits([out] DWORD *pdwInputMinimum,[out] DWORD *pdwInputMaximum,[out] DWORD *pdwOutputMinimum,[out] DWORD *pdwOutputMaximum)
HRESULT None None.GetRegion([out] IMFTimedTextRegion **ppRegion)
HRESULT None None.GetCertificateSize(UINT *pCertificateSize None)
DWORD WINAPI nmapi.GetCaptureTotalFrames(_In_ HCAPTURE hCapture)
HRESULT None None.Rename(LPCWSTR pszName None)
HRESULT None mfplat.MFEndRegisterWorkQueueWithMMCSS(_In_ IMFAsyncResult *pResult,_In_ DWORD *pdwTaskId)
BOOL None None.ListView_GetItem(HWND hwnd None,LPLVITEM pitem None)
HRESULT None oleaut32.VarCyFromUI1(_In_ BYTE bIn,_Out_ CY *pcyOut)
HRESULT None oleaut32.VarI2FromUI1(_In_ BYTE bIn,_Out_ SHORT *psOut)
HRESULT None None.Xml(UINT uiItemCount None,FEEDS_XML_SORT_PROPERTY sortProperty None,FEEDS_XML_SORT_ORDER sortOrder None,FEEDS_XML_FILTER_FLAGS filterFlags None,FEEDS_XML_INCLUDE_FLAGS includeFlags None,IStream **pps None)
LONG NTAPI ntdll.RtlEthernetStringToAddress(_In_ PCTSTR S,_Out_ PCTSTR *Terminator,_Out_ DL_EUI48 *Addr)
LONG NTAPI ntdll.RtlEthernetStringToAddressW(_In_ PCTSTR S,_Out_ PCTSTR *Terminator,_Out_ DL_EUI48 *Addr)
LONG NTAPI ntdll.RtlEthernetStringToAddressA(_In_ PCTSTR S,_Out_ PCTSTR *Terminator,_Out_ DL_EUI48 *Addr)
HRESULT None None.GetTransactionInfo(XACTTRANSINFO *pInfo None)
LONG WINAPI winscard.SCardIntroduceCardType(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCardName,_In_opt_ LPCGUID pguidPrimaryProvider,_In_opt_ LPCGUID rgguidInterfaces,_In_ DWORD dwInterfaceCount,_In_ LPCBYTE pbAtr,_In_ LPCBYTE pbAtrMask,_In_ DWORD cbAtrLen)
LONG WINAPI winscard.SCardIntroduceCardTypeW(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCardName,_In_opt_ LPCGUID pguidPrimaryProvider,_In_opt_ LPCGUID rgguidInterfaces,_In_ DWORD dwInterfaceCount,_In_ LPCBYTE pbAtr,_In_ LPCBYTE pbAtrMask,_In_ DWORD cbAtrLen)
LONG WINAPI winscard.SCardIntroduceCardTypeA(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCardName,_In_opt_ LPCGUID pguidPrimaryProvider,_In_opt_ LPCGUID rgguidInterfaces,_In_ DWORD dwInterfaceCount,_In_ LPCBYTE pbAtr,_In_ LPCBYTE pbAtrMask,_In_ DWORD cbAtrLen)
ULONG None wldap32.ber_skip_tag(_In_ BerElement *pBerElement,_Out_ ULONG *pLen)
HRESULT None uiautomationcore.get_TextContainer([out None None,retval None None,optional] IRawElementProviderSimple **ppRetVal)
MI_INLINE MI_Result None.MI_DestinationOptions_GetCertCNCheck(_In_ MI_DestinationOptions *options,_Out_ MI_Boolean *check)
DWORD WINAPI clusapi.AddClusterGroupSetDependency(_In_ HGROUPSET hDependentGroupSet,_In_ HGROUPSET hProviderGroupSet)
HRESULT None None.GetFolderType([out] FOLDERTYPEID *pftid)
HPSXA None shell32.SHCreatePropSheetExtArray(_In_ HKEY hkey,_In_opt_ PCWSTR pszSubkey,UINT max_iface None)
BOOL None None.IsVarTypeNumber(_In_ VARTYPE vt)
BOOL WINAPI kernel32.MapUserPhysicalPages(_In_ PVOID lpAddress,_In_ ULONG_PTR NumberOfPages,_In_ PULONG_PTR UserPfnArray)
public void None.SetDesktopLocation(int x None,int y None)
public PropertyDescriptorCollection None.GetProperties(ITypeDescriptorContext context None,Object value None,Attribute[] attributes None)
HRESULT WINAPI None.EngineAdapterQueryPreferredFormat(_Inout_ PWINBIO_PIPELINE Pipeline,_Out_ PWINBIO_REGISTERED_FORMAT StandardFormat,_Out_ PWINBIO_UUID VendorFormat)
HRESULT None None.GetMutualExclusionCount([out] DWORD *pcME)
public ICustomTypeDescriptor None.GetTypeDescriptor(Object instance None)
protected void None.OnPreviewKeyUp(KeyEventArgs e None)
HRESULT None oleaut32.VarUI8FromBool(_In_ VARIANT_BOOL boolIn,_Out_ ULONG64 *pi64Out)
HRESULT None None.GetStreamCount([out] DWORD *pcStreams)
public None None.MessageQueuePermissionAttribute(SecurityAction action None)
HRESULT None dwrite.EnqueueFileFragmentDownloadRequest(UINT64 fileOffset None,UINT64 fragmentSize None)
ULONG None wldap32.ldap_encode_sort_control(_In_ PLDAP ExternalHandle,_In_ PLDAPSortKey *SortKeys,_Out_ PLDAPControl Control,_In_ BOOLEAN IsCritical)
ULONG None wldap32.ldap_encode_sort_controlW(_In_ PLDAP ExternalHandle,_In_ PLDAPSortKey *SortKeys,_Out_ PLDAPControl Control,_In_ BOOLEAN IsCritical)
ULONG None wldap32.ldap_encode_sort_controlA(_In_ PLDAP ExternalHandle,_In_ PLDAPSortKey *SortKeys,_Out_ PLDAPControl Control,_In_ BOOLEAN IsCritical)
RPC_STATUS RPC_ENTRY rpcrt4.RpcSmSetThreadHandle(RPC_SS_THREAD_HANDLE Handle None)
protected void None.Serializer_UnknownNode(Object sender None,XmlNodeEventArgs e None)
HRESULT None shell32.Initialize(LPCWSTR pszMachine None,BOOL bEnumerating None)
HRESULT None scardssp.get_Data([out] LPBYTEBUFFER *ppData)
BOOL WINAPI dbghelp.SymEnumLines(_In_ HANDLE hProcess,_In_ ULONG64 Base,_In_opt_ PCTSTR Obj,_In_opt_ PCTSTR File,_In_ PSYM_ENUMLINES_CALLBACK EnumLinesCallback,_In_opt_ PVOID UserContext)
BOOL WINAPI dbghelp.SymEnumLinesW(_In_ HANDLE hProcess,_In_ ULONG64 Base,_In_opt_ PCTSTR Obj,_In_opt_ PCTSTR File,_In_ PSYM_ENUMLINES_CALLBACK EnumLinesCallback,_In_opt_ PVOID UserContext)
BOOL WINAPI dbghelp.SymEnumLines(_In_ HANDLE hProcess,_In_ ULONG64 Base,_In_opt_ PCTSTR Obj,_In_opt_ PCTSTR File,_In_ PSYM_ENUMLINES_CALLBACK EnumLinesCallback,_In_opt_ PVOID UserContext)
HRESULT None windowscodecs.GetNamedWhitePoint([out] WICNamedWhitePoint *pWhitePoint)
BOOL WINAPI authz.AuthzInitializeContextFromAuthzContext(_In_ DWORD flags,_In_ AUTHZ_CLIENT_CONTEXT_HANDLE hAuthzClientContext,_In_opt_ PLARGE_INTEGER pExpirationTime,_In_ LUID Identifier,_In_ PVOID DynamicGroupArgs,_Out_ PAUTHZ_CLIENT_CONTEXT_HANDLE phNewAuthzClientContext)
HRESULT WINAPI webservices.WsResetServiceHost(_In_ WS_SERVICE_HOST *serviceHost,_In_opt_ WS_ERROR *error)
SEC_ENTRY None None.OnProfileLoaded(_In_ PVOID ProviderHandle,_In_ HANDLE UserToken,_In_ BOOLEAN Loaded)
public String None.ConvertToString(ITypeDescriptorContext context None,CultureInfo culture None,Object value None)
INT None wldap32.ber_printf(_Inout_ BerElement *pBerElement,_In_ PCHAR fmt,_In_ ... None)
MI_INLINE MI_Result None.MI_OperationOptions_GetUseMachineID(_In_ MI_OperationOptions *options,_Out_ MI_Boolean *machineID)
DWORD WINAPI clusapi.SetClusterQuorumResource(_In_ HRESOURCE hResource,_In_opt_ LPCWSTR lpszDeviceName,_In_ DWORD dwMaxQuoLogSize)
protected void None.OnPaint(PaintEventArgs e None)
NETIOAPI_API None iphlpapi.GetInvertedIfStackTable(_Out_ PMIB_INVERTEDIFSTACK_TABLE *Table)
BOOL None imm32.ImmGetCompositionFont(_In_ HIMC hIMC,_Out_ LPLOGFONT lplf)
BOOL None imm32.ImmGetCompositionFontW(_In_ HIMC hIMC,_Out_ LPLOGFONT lplf)
BOOL None imm32.ImmGetCompositionFontA(_In_ HIMC hIMC,_Out_ LPLOGFONT lplf)
HRESULT None None.get_Authenticators(IWMSPlugins** pVal None)
HRESULT None propsys.PropVariantToInt32(_In_ REFPROPVARIANT propvarIn,_Out_ LONG *plRet)
int None None.strcmp(const char *string1,const char *string2)
public void None.Write(byte[] array None,int offset None,int count None)
HRESULT None propsys.InitVariantFromVariantArrayElem(_In_ REFVARIANT varIn,_In_ ULONG iElem,_Out_ VARIANT *pvar)
HRESULT None mf.MFCreateDeviceSource(_In_ IMFAttributes *pAttributes,_Out_ IMFMediaSource **ppSource)
HRESULT None None.GetApplicationInstanceId([out] GUID *pGuid)
HRESULT None scardssp.get_ApduReply([out] LPBYTEBUFFER *ppReplyApdu)
HIMAGELIST None comctl32.ImageList_Duplicate(HIMAGELIST himl None)
HRESULT None oleaut32.VarBstrFromDisp(IDispatch *pdispIn None,_In_ LCID lcid,_In_ ULONG dwFlags,_Out_ BSTR *pbstrOut)
RPC_STATUS RPC_ENTRY rpcrt4.RpcCancelThread(HANDLE ThreadHandle None)
HRESULT None None.GetMutualExclusionCount([out] DWORD *pcMutexs)
HRESULT None mf.MFEnumDeviceSources(_In_ IMFAttributes *pAttributes,_Out_ IMFActivate ***pppSourceActivate,_Out_ UINT32 *pcSourceActivate)
uint32 None dnsserverpsprovider.AddByIsdn([in] string IsdnNumber,[in] string IsdnSubAddress,[in] string ZoneName,[in] datetime TimeToLive,[in] boolean AllowUpdateAny,[in] string Name,[in] string ComputerName,[in] boolean AgeRecord,[in] boolean Isdn,[in] boolean PassThru,[in] string ZoneScope,[out] DnsServerResourceRecord cmdletOutput)
BOOL None rasdlg.RasPhonebookDlg(_In_ LPTSTR lpszPhonebook,_In_ LPTSTR lpszEntry,_Inout_ LPRASPBDLG lpInfo)
BOOL None rasdlg.RasPhonebookDlgW(_In_ LPTSTR lpszPhonebook,_In_ LPTSTR lpszEntry,_Inout_ LPRASPBDLG lpInfo)
BOOL None rasdlg.RasPhonebookDlgA(_In_ LPTSTR lpszPhonebook,_In_ LPTSTR lpszEntry,_Inout_ LPRASPBDLG lpInfo)
HRESULT None None.get_systemId(VARIANT *systemID None)
public None None.NumericUpDownAutomationPeer(NumericUpDown owner None)
HRESULT None None.SetQueueQuotaProp(LPCWSTR wszQueueFormatName None,int iValue None)
HRESULT None propsys.PropVariantToInt16VectorAlloc(_In_ REFPROPVARIANT propvar,_Out_ SHORT **pprgn,_Out_ ULONG *pcElem)
HRESULT None None.SetQueueLabelProp(LPCWSTR wszQueueFormatName None,LPWSTR wszValue None)
LONG WINAPI winscard.SCardReconnect(_In_ SCARDHANDLE hCard,_In_ DWORD dwShareMode,_In_ DWORD dwPreferredProtocols,_In_ DWORD dwInitialization,_Out_opt_ LPDWORD pdwActiveProtocol)
DWORD None iphlpapi.SetIfEntry(_In_ PMIB_IFROW pIfRow)
ULONG WINAPI iphlpapi.GetUdp6Table(_Out_ PMIB_UDP6TABLE Udp6Table,_Inout_ PULONG SizePointer,_In_ BOOL Order)
HIMAGELIST None None.TreeView_GetImageList(HWND hwndTV None,INT iImage None)
uint32 None dnsserverpsprovider.RemoveByServer([in] boolean PassThru,[in] string Name,[in] string ComputerName,[in] boolean Force,[out] DnsServerPolicy cmdletOutput)
HRESULT None tapi3.get_TerminalClasses([out] VARIANT *pTerminals)
HRESULT None None.get_MonikerName(BSTR* pbstrVal None)
LONG TSPIAPI None.TSPI_lineUncompleteCall(DRV_REQUESTID dwRequestID None,HDRVLINE hdLine None,DWORD dwCompletionID None)
HRESULT STDAPI cldapi.CfUnregisterSyncRoot(_In_ LPCWSTR SyncRootPath)
HRESULT None None.get_HasMMX([out] VARIANT_BOOL *mmxEnabled)
UINT64 None None.Pack2UINT32AsUINT64(_In_ UINT32 unHigh,_In_ UINT32 unLow)
DWORD None mprapi.MprConfigTransportEnum(_In_ HANDLE hMprConfig,_In_ DWORD dwLevel,_Inout_ LPBYTE *lplpBuffer,_In_ DWORD dwPrefMaxLen,_Out_ LPDWORD lpdwEntriesRead,_Out_ LPDWORD lpdwTotalEntries,_Inout_opt_ LPDWORD lpdwResumeHandle)
HRESULT None None.get_Properties(IWMSNamedValues** pVal None)
DWORD DHCP_API_FUNCTION dhcpsapi.DhcpV4FailoverDeleteScopeFromRelationship(_In_opt_ LPWSTR ServerIpAddress,_In_ LPDHCP_FAILOVER_RELATIONSHIP pRelationship)
LPVOID CALLBACK None.AllocateMemory(_In_ SIZE_T AllocSize,_In_ LPVOID pContext)
HRESULT None None.CreatePath([out None None,retval] IXpsOMPath **path)
HRESULT None fxscomex.put_Branding([in] VARIANT_BOOL bBranding)
LONG None None.DocumentProperties(_In_ HWND hWnd,_In_ HANDLE hPrinter,_In_ LPTSTR pDeviceName,_Out_ PDEVMODE pDevModeOutput,_In_ PDEVMODE pDevModeInput,_In_ DWORD fMode)
LONG None None.DocumentPropertiesW(_In_ HWND hWnd,_In_ HANDLE hPrinter,_In_ LPTSTR pDeviceName,_Out_ PDEVMODE pDevModeOutput,_In_ PDEVMODE pDevModeInput,_In_ DWORD fMode)
LONG None None.DocumentPropertiesA(_In_ HWND hWnd,_In_ HANDLE hPrinter,_In_ LPTSTR pDeviceName,_Out_ PDEVMODE pDevModeOutput,_In_ PDEVMODE pDevModeInput,_In_ DWORD fMode)
LONG TSPIAPI None.TSPI_lineSendUserUserInfo(DRV_REQUESTID dwRequestID None,HDRVCALL hdCall None,LPCSTR lpsUserUserInfo None,DWORD dwSize None)
HRESULT None None.GetEnableFastCache([out] BOOL *pfEnableFastCache)
BOOL WINAPI advapi32.GetSecurityDescriptorDacl(_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_Out_ LPBOOL lpbDaclPresent,_Out_ PACL *pDacl,_Out_ LPBOOL lpbDaclDefaulted)
RPC_STATUS RPC_ENTRY rpcrt4.RpcIfIdVectorFree(RPC_IF_ID_VECTOR **IfIdVec None)
ULONG None wldap32.ldap_control_free(_In_ LDAPControl *Control)
ULONG None wldap32.ldap_control_freeW(_In_ LDAPControl *Control)
ULONG None wldap32.ldap_control_freeA(_In_ LDAPControl *Control)
HRESULT None propsys.VariantToUInt64Array(_In_ REFVARIANT var,_Out_ ULONGLONG *prgn,_In_ ULONG crgn,_Out_ ULONG *pcElem)
uint32 None cimwin32.SetIPXVirtualNetworkNumber([in] string IPXVirtualNetNumber)
HRESULT None None.GetCount([out] UINT32 count)
DWORD None ntdsapi.DsBind(_In_opt_ LPCTSTR DomainControllerName,_In_opt_ LPCTSTR DnsDomainName,_Out_ HANDLE *phDS)
DWORD None ntdsapi.DsBindW(_In_opt_ LPCTSTR DomainControllerName,_In_opt_ LPCTSTR DnsDomainName,_Out_ HANDLE *phDS)
DWORD None ntdsapi.DsBindA(_In_opt_ LPCTSTR DomainControllerName,_In_opt_ LPCTSTR DnsDomainName,_Out_ HANDLE *phDS)
BOOL WINAPI kernel32.CreateUmsCompletionList(_Out_ PUMS_COMPLETION_LIST *UmsCompletionList)
public ConnectionInterfaceCollection None.GetSecondaryInterfaces(Control control None)
ULONG None wldap32.ldap_search_abandon_page(_In_ PLDAP ExternalHandle,_In_ PLDAPSearch SearchBlock)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsBindingLookupNext(RPC_NS_HANDLE LookupContext None,RPC_BINDING_VECTOR **BindingVec None)
HANDLE WINAPI dbghelp.FindDebugInfoFileEx(_In_ PCTSTR FileName,_In_ PCTSTR SymbolPath,_Out_ PTSTR DebugFilePath,_In_opt_ PFIND_DEBUG_FILE_CALLBACK Callback,_In_opt_ PVOID CallerData)
HANDLE WINAPI dbghelp.FindDebugInfoFileExW(_In_ PCTSTR FileName,_In_ PCTSTR SymbolPath,_Out_ PTSTR DebugFilePath,_In_opt_ PFIND_DEBUG_FILE_CALLBACK Callback,_In_opt_ PVOID CallerData)
HANDLE WINAPI dbghelp.FindDebugInfoFileEx(_In_ PCTSTR FileName,_In_ PCTSTR SymbolPath,_Out_ PTSTR DebugFilePath,_In_opt_ PFIND_DEBUG_FILE_CALLBACK Callback,_In_opt_ PVOID CallerData)
HRESULT None None.RemoveFunctionName(BSTR FunctionName None)
HRESULT None fxscomex.OnEventLoggingConfigChange(IFaxServer2 *pFaxServer2 None)
HRESULT None None.get_DiagnosticEvents(long* pVal None)
HRESULT None fxscomex.put_AutoCreateAccountOnConnect([in] VARIANT_BOOL bAutoCreateAccountOnConnect)
HRESULT None None.get_ConnectionQueue(long* pVal None)
LONG WINAPI crypt32.CertVerifyTimeValidity(_In_ LPFILETIME pTimeToVerify,_In_ PCERT_INFO pCertInfo)
int None None.main(void None None)
DWORD None mprapi.MprConfigInterfaceDelete(_In_ HANDLE hMprConfig,_In_ HANDLE hRouterInterface)
LONG None tapi32.lineCreateAgent(HLINE hLine None,LPWSTR lpszAgentID None,LPWSTR lpszAgentPIN None,LPHAGENT lphAgent None)
LONG None tapi32.lineCreateAgentW(HLINE hLine None,LPWSTR lpszAgentID None,LPWSTR lpszAgentPIN None,LPHAGENT lphAgent None)
LONG None tapi32.lineCreateAgentA(HLINE hLine None,LPWSTR lpszAgentID None,LPWSTR lpszAgentPIN None,LPHAGENT lphAgent None)
HRESULT None None.CreateDataSourceDirectory(IWMSCommandContext* pCommandContext None,LPWSTR pszContainerName None,DWORD dwFlags None,IWMSDataSourcePluginCallback* pCallback None,QWORD qwContext None)
HRESULT None oleaut32.VarUI2FromR8(_In_ DOUBLE dblIn,USHORT *puiOut None)
protected void None.CopyPersonalizationState(WebPart webPartA None,WebPart webPartB None)
HRESULT None oleaut32.VarUI1FromBool(_In_ VARIANT_BOOL boolIn,_Out_ BYTE *pbOut)
HRESULT None None.GetGeometryShaderDesc(D3DX11_PASS_SHADER_DESC *pDesc None)
DWORD WINAPI resutils.ResUtilGetCoreClusterResources(_In_ HCLUSTER hCluster,_Out_ HRESOURCE *phClusterNameResource,_Out_ HRESOURCE *phClusterIPAddressResource,_Out_ HRESOURCE *phClusterQuorumResource)
COLORREF None None.ListView_GetTextColor(HWND hwnd None)
HRESULT None scardssp.get_LeField([out] LONG *plSize)
static void None.DisplayStreamProperties(NegotiateStream* stream None)
BOOL None imm32.ImmUnregisterWord(_In_ HKL hKL,_In_ LPCTSTR lpszReading,_In_ DWORD dwStyle,_In_ LPCTSTR lpszUnregister)
BOOL None imm32.ImmUnregisterWordW(_In_ HKL hKL,_In_ LPCTSTR lpszReading,_In_ DWORD dwStyle,_In_ LPCTSTR lpszUnregister)
BOOL None imm32.ImmUnregisterWordA(_In_ HKL hKL,_In_ LPCTSTR lpszReading,_In_ DWORD dwStyle,_In_ LPCTSTR lpszUnregister)
BOOL WINAPI user32.EnableMenuItem(_In_ HMENU hMenu,_In_ UINT uIDEnableItem,_In_ UINT uEnable)
HRESULT None srmsvc.get_ModuleType([out] FsrmPipelineModuleType *pModuleType)
HRESULT None None.GetQueueMulticastAddressProp(LPCWSTR wszQueueFormatName None,LPWSTR *pwszValue None)
BOOL WINAPI dnsapi.DnsWriteQuestionToBuffer_W(_Inout_ PDNS_MESSAGE_BUFFER pDnsBuffer,_Inout_ PDWORD pdwBufferSize,_In_ PCWSTR pszName,_In_ WORD wType,_In_ WORD Xid,_In_ BOOL fRecursionDesired)
HRESULT None None.get_BypassList([out None None,retval] LPWSTR *ppszBypassList)
HRESULT WINAPI webservices.WsReadXmlBuffer(_In_ WS_XML_READER* reader,_In_ WS_HEAP* heap,WS_XML_BUFFER** xmlBuffer None,_In_opt_ WS_ERROR* error)
HRESULT None propsys.VariantToInt16ArrayAlloc(_In_ REFVARIANT var,_Out_ SHORT **pprgn,_Out_ ULONG *pcElem)
USBD_PIPE_HANDLE None None.WdfUsbTargetPipeWdmGetPipeHandle(_In_ WDFUSBPIPE UsbPipe)
VOID None None.UmsSchedulerProc(_In_ UMS_SCHEDULER_REASON Reason,_In_ ULONG_PTR ActivationPayload,_In_ PVOID SchedulerParam)
LONG TSPIAPI None.TSPI_lineDevSpecific(DRV_REQUESTID dwRequestID None,HDRVLINE hdLine None,DWORD dwAddressID None,HDRVCALL hdCall None,LPVOID lpParams None,DWORD dwSize None)
private void None.button1_Click(Object sender None,System.EventArgs e None)
ULONG None None.WdfCollectionGetCount(_In_ WDFCOLLECTION Collection)
HRESULT None None.get_OutgoingDistributionConnections(long* pVal None)
ULONG None wldap32.ldap_create_sort_control(_In_ PLDAP ExternalHandle,_In_ PLDAPSortKey *SortKeys,_In_ UCHAR IsCritical,_Out_ PLDAPControl *Control)
ULONG None wldap32.ldap_create_sort_controlW(_In_ PLDAP ExternalHandle,_In_ PLDAPSortKey *SortKeys,_In_ UCHAR IsCritical,_Out_ PLDAPControl *Control)
ULONG None wldap32.ldap_create_sort_controlA(_In_ PLDAP ExternalHandle,_In_ PLDAPSortKey *SortKeys,_In_ UCHAR IsCritical,_Out_ PLDAPControl *Control)
float None None.ddx_coarse(in float value)
HRESULT None None.GetCurrent([out None None,retval] IOpcSignatureCustomObject **customObject)
LONG WINAPI winscard.SCardDisconnect(_In_ SCARDHANDLE hCard,_In_ DWORD dwDisposition)
HRESULT None None.ULongToUChar(_In_ ULONG ulOperand,_Out_ UCHAR *pch)
HRESULT WINAPI userenv.CreateProfile(_In_ LPCWSTR pszUserSid,_In_ LPCWSTR pszUserName,_Out_ LPWSTR pszProfilePath,_In_ DWORD cchProfilePath)
ULONG None wldap32.ldap_search_ext(_In_ LDAP *ld,_In_ PCHAR base,_In_ ULONG scope,_In_ PCHAR filter,_In_ PCHAR attrs[],_In_ ULONG attrsonly,_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls,_In_ ULONG TimeLimit,_In_ ULONG SizeLimit,_Out_ ULONG *MessageNumber)
ULONG None wldap32.ldap_search_extW(_In_ LDAP *ld,_In_ PCHAR base,_In_ ULONG scope,_In_ PCHAR filter,_In_ PCHAR attrs[],_In_ ULONG attrsonly,_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls,_In_ ULONG TimeLimit,_In_ ULONG SizeLimit,_Out_ ULONG *MessageNumber)
ULONG None wldap32.ldap_search_extA(_In_ LDAP *ld,_In_ PCHAR base,_In_ ULONG scope,_In_ PCHAR filter,_In_ PCHAR attrs[],_In_ ULONG attrsonly,_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls,_In_ ULONG TimeLimit,_In_ ULONG SizeLimit,_Out_ ULONG *MessageNumber)
HRESULT None fxscomex.get__NewEnum([out None None,retval] IUnknown **pUnk)
HRESULT None None.GetTotalSize([out] DWORD *pdwTotalSizeLow,[out] DWORD *pdwTotalSizeHigh)
UINT_PTR CALLBACK None.FRHookProc(_In_ HWND hdlg,_In_ UINT uiMsg,_In_ WPARAM wParam,_In_ LPARAM lParam)
COLORREF None comctl32.ImageList_SetBkColor(_In_ HIMAGELIST himl,_In_ COLORREF clrBk)
protected void None.ParentLayoutInvalidated(UIElement child None)
VOID WINAPI ntdsapi.DsFreePasswordCredentials(_In_ RPC_AUTH_IDENTITY_HANDLE AuthIdentity)
DWORD None mprapi.MprAdminInterfaceEnum(_In_ MPR_SERVER_HANDLE hMprServer,_In_ DWORD dwLevel,_Out_ LPBYTE *lplpbBuffer,_In_ DWORD dwPrefMaxLen,_Out_ LPDWORD lpdwEntriesRead,_Out_ LPDWORD lpdwTotalEntries,_In_ LPDWORD lpdwResumeHandle)
HRESULT None None.put_CPUUtilizationDuringConnection(long Val None)
MMRESULT None winmm.mixerSetControlDetails(HMIXEROBJ hmxobj None,LPMIXERCONTROLDETAILS pmxcd None,DWORD fdwDetails None)
BOOL __inline None.IDListContainerIsConsistent(_In_ PCUIDLIST_RELATIVE pidl,_In_ UINT cbAlloc)
BOOL WINAPI cryptui.CryptUIWizImport(_In_ DWORD dwFlags,_In_ HWND hwndParent,_In_ LPCWSTR pwszWizardTitle,_In_ PCCRYPTUI_WIZ_IMPORT_SRC_INFO pImportSrc,_In_ HCERTSTORE hDestCertStore)
HRESULT None None.DownloadStatus(FEEDS_DOWNLOAD_STATUS *pfds None)
HRESULT None None.GetBufferProgress([out] DWORD *pdwPercent,[out] QWORD *pcnsBuffering)
BOOL None wintrust.CryptCATAdminCalcHashFromFileHandle(_In_ HANDLE hFile,_Inout_ DWORD *pcbHash,_In_ BYTE *pbHash,_In_ DWORD dwFlags)
LONG WINAPI tapi32.lineGetNumRings(HLINE hLine None,DWORD dwAddressID None,LPDWORD lpdwNumRings None)
BOOL WINAPI cryptui.CryptUIDlgViewSignerInfo(_In_ CRYPTUI_VIEWSIGNERINFO_STRUCT *pcvsi)
BOOL WINAPI cryptui.CryptUIDlgViewSignerInfoW(_In_ CRYPTUI_VIEWSIGNERINFO_STRUCT *pcvsi)
BOOL WINAPI cryptui.CryptUIDlgViewSignerInfoA(_In_ CRYPTUI_VIEWSIGNERINFO_STRUCT *pcvsi)
LONG TSPIAPI None.TSPI_lineUnhold(DRV_REQUESTID dwRequestID None,HDRVCALL hdCall None)
LONG WINAPI winscard.SCardStatus(_In_ SCARDHANDLE hCard,_Out_ LPTSTR szReaderName,_Inout_opt_ LPDWORD pcchReaderLen,_Out_opt_ LPDWORD pdwState,_Out_opt_ LPDWORD pdwProtocol,_Out_ LPBYTE pbAtr,_Inout_opt_ LPDWORD pcbAtrLen)
LONG WINAPI winscard.SCardStatusW(_In_ SCARDHANDLE hCard,_Out_ LPTSTR szReaderName,_Inout_opt_ LPDWORD pcchReaderLen,_Out_opt_ LPDWORD pdwState,_Out_opt_ LPDWORD pdwProtocol,_Out_ LPBYTE pbAtr,_Inout_opt_ LPDWORD pcbAtrLen)
LONG WINAPI winscard.SCardStatusA(_In_ SCARDHANDLE hCard,_Out_ LPTSTR szReaderName,_Inout_opt_ LPDWORD pcchReaderLen,_Out_opt_ LPDWORD pdwState,_Out_opt_ LPDWORD pdwProtocol,_Out_ LPBYTE pbAtr,_Inout_opt_ LPDWORD pcbAtrLen)
FLOAT WINAPI d2d1.D2D1Tan(_In_ FLOAT angle)
LPSYSTEMTIME WINAPI nmapi.GetCaptureTimeStamp(_In_ HCAPTURE hCapture)
DWORD WINAPI kernel32.SetIoRateControlInformationJobObject(_In_ HANDLE hJob,_In_ JOBOBJECT_IO_RATE_CONTROL_INFORMATION *IoRateControlInfo)
LONG TSPIAPI None.TSPI_phoneGetButtonInfo(HDRVPHONE hdPhone None,DWORD dwButtonLampID None,LPPHONEBUTTONINFO lpButtonInfo None)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsBindingImportDone(RPC_NS_HANDLE *ImportContext None)
PCUIDLIST_RELATIVE None None.ILSkip(_In_ PCUIDLIST_RELATIVE pidl,UINT cb None)
BOOL None shell32.ILIsEqual(_In_ PCIDLIST_ABSOLUTE pidl1,_In_ PCIDLIST_ABSOLUTE pidl2)
void None None.errorf(string format None,argument ... None)
HRESULT None None.get_PlayerCacheDeliveryRate(long* pVal None)
HRESULT None None.get_VolumeNameUDF([out] BSTR *pVal)
IRawElementProviderSimple None None.GetOverrideProviderForHwnd(IntPtr hwnd None)
DWORD None iphlpapi.GetTcpStatisticsEx2(_Out_ PMIB_TCPSTATS2 pStats,_In_ DWORD dwFamily)
DWORD None None.NPFMXEditPerm(_In_ LPTSTR lpDriveName,_In_ HWND hwndFMX,_In_ DWORD nType)
PIDLIST_ABSOLUTE None None.ILCloneFull(_In_ PCUIDLIST_ABSOLUTE pidl)
uint32 None cimwin32.SetDefaultTOS([in] uint8 DefaultTOS)
DWORD None mprapi.MprAdminTransportSetInfo(_In_ MPR_SERVER_HANDLE hMprServer,_In_ DWORD dwTransportId,_In_opt_ LPBYTE pGlobalInfo,_In_ DWORD dwGlobalInfoSize,_In_opt_ LPBYTE pClientInterfaceInfo,_In_ DWORD dwClientInterfaceInfoSize)
HRESULT None None.GetQueueTransactionProp(LPCWSTR wszQueueFormatName None,UCHAR *pbValue None)
HRESULT None shell32.SHGetMalloc(LPMALLOC *ppMalloc None)
VOID None None.KeInitializeSpinLock(_Out_ PKSPIN_LOCK SpinLock)
public None None.StringBuilder(int capacity None,int maxCapacity None)
HRESULT None None.GetType([out] MediaEventType *pmet)
LONG TSPIAPI None.TSPI_lineUnpark(DRV_REQUESTID dwRequestID None,HDRVLINE hdLine None,DWORD dwAddressID None,HTAPICALL htCall None,LPHDRVCALL lphdCall None,LPCWSTR lpszDestAddress None)
BOOL WINAPI authz.AuthzInitializeResourceManagerEx(_In_opt_ DWORD Flags,_In_opt_ PVOID pAuthzInitInfo,_Out_ PAUTHZ_RESOURCE_MANAGER_HANDLE phAuthzResourceManager)
HRESULT None None.GetTotalLength([out] DWORD *pcbTotalLength)
HRESULT None mfplat.MFBeginUnregisterWorkQueueWithMMCSS(_In_ DWORD dwWorkQueueId,_In_ IMFAsyncCallback *pDoneCallback,_In_ IUnknown *pDoneState)
protected void None.RemoveItem(int index None)
BOOL None None.IsBufferPrecisionSupported(D2D1_BUFFER_PRECISION bufferPrecision None)
ULONG None wldap32.ldap_count_values(_In_ PCHAR *vals)
ULONG None wldap32.ldap_count_valuesW(_In_ PCHAR *vals)
ULONG None wldap32.ldap_count_valuesA(_In_ PCHAR *vals)
LONG TSPIAPI None.TSPI_lineHold(DRV_REQUESTID dwRequestID None,HDRVCALL hdCall None)
HRESULT None oleaut32.VarDecFromCy(_In_ CY cyIn,_Out_ DECIMAL *pdecOut)
DWORD None mprapi.MprConfigGetFriendlyName(_In_ HANDLE hMprConfig,_In_ PWCHAR pszGuidName,_Out_ PWCHAR pszBuffer,_In_ DWORD dwBufferSize)
DWORD None rasapi32.RasSetEapUserData(_In_ HANDLE hToken,_In_ LPCTSTR pszPhonebook,_In_ LPCTSTR pszEntry,_In_ BYTE *pbEapData,_In_ DWORD dwSizeofEapData)
DWORD None rasapi32.RasSetEapUserDataW(_In_ HANDLE hToken,_In_ LPCTSTR pszPhonebook,_In_ LPCTSTR pszEntry,_In_ BYTE *pbEapData,_In_ DWORD dwSizeofEapData)
DWORD None rasapi32.RasSetEapUserDataA(_In_ HANDLE hToken,_In_ LPCTSTR pszPhonebook,_In_ LPCTSTR pszEntry,_In_ BYTE *pbEapData,_In_ DWORD dwSizeofEapData)
RPC_STATUS RPC_ENTRY rpcrt4.MesHandleFree(handle_t Handle None)
void None None.Page_Load(Object sender None,EventArgs e None)
NETIOAPI_API None iphlpapi.GetIfEntry2(PMIB_IF_ROW2 Row None)
HRESULT None None.SetSD([in] uint8 SD[])
HRESULT None None.SIZETToUInt(_In_ SIZE_T cbOperand,_Out_ UINT *puiResult)
uint32 None cimwin32.SetTcpMaxDataRetransmissions([in] uint32 TcpMaxDataRetransmissions)
VOID None None.WdfIoTargetStop(_In_ WDFIOTARGET IoTarget,_In_ WDF_IO_TARGET_SENT_IO_ACTION Action)
async Task None.TestWriter(Stream stream None)
public String None.ConvertToString(ITypeDescriptorContext context None,CultureInfo culture None,Object value None)
HRESULT None None.Unadvise(DWORD dwAdviseCookie None)
HRESULT None None.get_StreamingPlayers(long* pVal None)
HRESULT None None.GetQueueCreateTimeProp(LPCWSTR wszQueueFormatName None,LONG *plValue None)
void None None.Button1_Click(Object sender None,EventArgs e None)
BOOL None None.TreeView_SelectItem(HWND hwndTV None,HTREEITEM hitem None)
assembly None None.name(optional None None)
PDH_STATUS None pdh.PdhEnumMachines(_In_ LPCTSTR szDataSource,_Out_ LPTSTR mszMachineNameList,_Inout_ LPDWORD pcchBufferLength)
PDH_STATUS None pdh.PdhEnumMachinesW(_In_ LPCTSTR szDataSource,_Out_ LPTSTR mszMachineNameList,_Inout_ LPDWORD pcchBufferLength)
PDH_STATUS None pdh.PdhEnumMachinesA(_In_ LPCTSTR szDataSource,_Out_ LPTSTR mszMachineNameList,_Inout_ LPDWORD pcchBufferLength)
LONG TSPIAPI None.TSPI_phoneGetID(HDRVPHONE hdPhone None,LPVARSTRING lpDeviceID None,LPCWSTR lpszDeviceClass None,HANDLE hTargetProcess None)
VOID WINAPI crypt32.CertCloseServerOcspResponse(_In_ HCERT_SERVER_OCSP_RESPONSE hServerOcspResponse,_In_ DWORD dwFlags)
HRESULT None None.GetFillBrushLookup([out None None,retval] LPWSTR *key)
DWORD WINAPI clusapi.BackupClusterDatabase(_In_ HCLUSTER hCluster,_In_ LPCWSTR lpszPathName)
ULONG None wldap32.ber_peek_tag(_In_ BerElement *pBerElement,_Out_ ULONG *pLen)
HRESULT None oleaut32.VarR8FromUI8(_In_ ULONG64 ui64In,_Out_ DOUBLE *pdblOut)
BOOL None imm32.ImmNotifyIME(_In_ HIMC hIMC,_In_ DWORD dwAction,_In_ DWORD dwIndex,_In_ DWORD dwValue)
void None None.InterlockedCompareStore(in R dest,in T compare_value,in T value)
uint32 None cimwin32.SetDNSDomain([in] string DNSDomain)
NTSTATUS NTAPI advapi32.LsaSetForestTrustInformation(_In_ LSA_HANDLE PolicyHandle,_In_ PLSA_UNICODE_STRING TrustedDomainName,_In_ PLSA_FOREST_TRUST_INFORMATION ForestTrustInfo,_In_ BOOLEAN CheckOnly,_Out_ PLSA_FOREST_TRUST_COLLISION_INFORMATION *CollisionInfo)
UINT None msi.MsiDatabaseMerge(_In_ MSIHANDLE hDatabase,_In_ MSIHANDLE hDatabaseMerge,_In_ LPCTSTR szTableName)
UINT None msi.MsiDatabaseMergeW(_In_ MSIHANDLE hDatabase,_In_ MSIHANDLE hDatabaseMerge,_In_ LPCTSTR szTableName)
UINT None msi.MsiDatabaseMergeA(_In_ MSIHANDLE hDatabase,_In_ MSIHANDLE hDatabaseMerge,_In_ LPCTSTR szTableName)
VOID FORCEINLINE None.TpSetCallbackThreadpool(_Inout_ PTP_CALLBACK_ENVIRON CallbackEnviron,_In_ PTP_POOL Pool)
HRESULT WINAPI webservices.WsWriteStartCData(_In_ WS_XML_WRITER* writer,_In_opt_ WS_ERROR* error)
UInt32 None None.Clear([in] Boolean RemoveData,[in] Boolean RemoveOEM,[in] Boolean ZeroOutEntireDisk,[out] String ExtendedStatus)
VOID WINAPI bcrypt.BCryptFreeBuffer(_In_ PVOID pvBuffer)
HRESULT None mfplat.MFCreateFile(MF_FILE_ACCESSMODE AccessMode None,MF_FILE_OPENMODE OpenMode None,MF_FILE_FLAGS fFlags None,LPCWSTR pwszFileURL None,IMFByteStream **ppIByteStream None)
MI_INLINE MI_Result None.MI_OperationOptions_EnableChannel(_Inout_ MI_OperationOptions *options,_In_ MI_Uint32 channel)
Uint32 None storageservice.Remove([in] String username,[in] String password,[in None None,optional] Boolean force,[out None None,optional] MSFT_SMExtendedStatus ExtendedStatus)
HFRAME WINAPI nmapi.GetFrame(_In_ HCAPTURE hCapture,_In_ DWORD FrameNumber)
BOOL None shell32.SHCreateProcessAsUserW(_Inout_ PSHCREATEPROCESSINFOW pscpi)
BOOL None shell32.SHCreateProcessAsUserW(_Inout_ PSHCREATEPROCESSINFOW pscpi)
BOOL CALLBACK None.EnumDirTreeProc(_In_ PCTSTR FilePath,_In_opt_ PVOID CallerData)
HRESULT None None.get_FileReadRate(long* pVal None)
DWORD WINAPI mprapi.MprConfigFilterGetInfo(_In_ HANDLE hMprConfig,_In_ DWORD dwLevel,_In_ DWORD dwTransportId,_Out_ LPBYTE lpBuffer)
LONG TSPIAPI None.TSPI_lineNegotiateExtVersion(DWORD dwDeviceID None,DWORD dwTSPIVersion None,DWORD dwLowVersion None,DWORD dwHighVersion None,LPDWORD lpdwExtVersion None)
HRESULT None None.get_Name(BSTR* pVal None)
uint32 None dhcpserverpsprovider.RemoveByBadLeases([in] boolean PassThru,[in] string ComputerName,[in] boolean BadLeases,[in] string ScopeId,[out] DhcpServerv4Lease cmdletOutput[])
VOID None None.WdfIoQueueStop(_In_ WDFQUEUE Queue,_In_opt_ PFN_WDF_IO_QUEUE_STATE StopComplete,_In_opt_ WDFCONTEXT Context)
public int None.IndexOf(MenuItem value None)
NET_API_STATUS None netapi32.NetServerComputerNameDel(_In_ LPWSTR ServerName,_In_ LPWSTR EmulatedServerName)
protected void None.ProtectedRemoveListener(Object source None,IWeakEventListener listener None)
VOID None None.WdfWorkItemEnqueue(_In_ WDFWORKITEM WorkItem)
DWORD None ntdsapi.DsReplicaGetInfo2(_In_ HANDLE hDS,_In_ DS_REPL_INFO_TYPE InfoType,_In_opt_ LPCWSTR pszObject,_In_opt_ UUID *puuidForSourceDsaObjGuid,_In_opt_ LPCWSTR pszAttributeName,_In_opt_ LPCWSTR pszValue,_In_ DWORD dwFlags,_In_ DWORD dwEnumerationContext,_Out_ VOID **ppInfo)
DWORD None ntdsapi.DsReplicaGetInfo2W(_In_ HANDLE hDS,_In_ DS_REPL_INFO_TYPE InfoType,_In_opt_ LPCWSTR pszObject,_In_opt_ UUID *puuidForSourceDsaObjGuid,_In_opt_ LPCWSTR pszAttributeName,_In_opt_ LPCWSTR pszValue,_In_ DWORD dwFlags,_In_ DWORD dwEnumerationContext,_Out_ VOID **ppInfo)
NETIOAPI_API None iphlpapi.GetIfStackTable(_Out_ PMIB_IFSTACK_TABLE *Table)
HRESULT None None.Merge(IStream *pStream None,LPCWSTR pszUrl None)
HRESULT None None.GetMediaItem([out] IMFPMediaItem **ppIMFPMediaItem)
BOOL None imm32.ImmSetCompositionWindow(_In_ HIMC hIMC,_In_ LPCOMPOSITIONFORM lpCompForm)
BOOL None None.WlxDisplayStatusMessage(_In_ PVOID pWlxContext,_In_ HDESK hDesktop,_In_ DWORD dwOptions,_In_ PWSTR pTitle,_In_ PWSTR pMessage)
uint32 None ipmiprv.EnableDevice([in] boolean Enabled)
POWER_ACTION None None.WdfDeviceGetSystemPowerAction(_In_ WDFDEVICE Device)
HRESULT None msftedit.TxGetBackStyle(TXTBACKSTYLE *pstyle None)
MI_INLINE MI_Result None.MI_Application_Close(_Inout_ MI_Application *application)
BOOL None None.TreeView_SortChildren(HWND hwndTV None,HTREEITEM hitem None,BOOL fRecurse None)
LONG WINAPI tapi32.lineSetAppPriority(LPCSTR lpszAppFilename None,DWORD dwMediaMode None,LPLINEEXTENSIONID lpExtensionID None,DWORD dwRequestMode None,LPCSTR lpszExtensionName None,DWORD dwPriority None)
LONG WINAPI tapi32.lineSetAppPriorityW(LPCSTR lpszAppFilename None,DWORD dwMediaMode None,LPLINEEXTENSIONID lpExtensionID None,DWORD dwRequestMode None,LPCSTR lpszExtensionName None,DWORD dwPriority None)
LONG WINAPI tapi32.lineSetAppPriorityA(LPCSTR lpszAppFilename None,DWORD dwMediaMode None,LPLINEEXTENSIONID lpExtensionID None,DWORD dwRequestMode None,LPCSTR lpszExtensionName None,DWORD dwPriority None)
protected void None.OnParentForeColorChanged(EventArgs e None)
PDH_STATUS None pdh.PdhSetCounterScaleFactor(_In_ PDH_HCOUNTER hCounter,_In_ LONG lFactor)
INT_PTR WINAPI user32.DialogBoxParam(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpTemplateName,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc,_In_ LPARAM dwInitParam)
INT_PTR WINAPI user32.DialogBoxParamW(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpTemplateName,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc,_In_ LPARAM dwInitParam)
INT_PTR WINAPI user32.DialogBoxParamA(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpTemplateName,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc,_In_ LPARAM dwInitParam)
PTP_IO WINAPI kernel32.CreateThreadpoolIo(_In_ HANDLE fl,_In_ PTP_WIN32_IO_CALLBACK pfnio,_Inout_opt_ PVOID pv,_In_opt_ PTP_CALLBACK_ENVIRON pcbe)
HRESULT None mfplat.MFCreateTempFile(MF_FILE_ACCESSMODE AccessMode None,MF_FILE_OPENMODE OpenMode None,MF_FILE_FLAGS fFlags None,IMFByteStream **ppIByteStream None)
HRESULT None None.get_Keyboard([out] IVMKeyboard **keyboard)
HRESULT None usp10.ScriptFreeCache(_Inout_ SCRIPT_CACHE *psc)
DWORD APIENTRY mprapi.MprConfigInterfaceSetCustomInfoEx(_In_ HANDLE hMprConfig,_In_ HANDLE hRouterInterface,_In_ PMPR_IF_CUSTOMINFOEX pCustomInfo)
PTP_POOL WINAPI kernel32.CreateThreadpool(_Reserved_ PVOID reserved)
HRESULT None None.GetDevicePosition([out] UINT64 *DevicePosition,[out None None,unique] UINT64 *QPCPosition)
private void None.CopyWithProgress(String fileNames[] None)
BOOL None None.IsShaderLoaded(REFGUID shaderId None)
LONG TSPIAPI None.TSPI_lineSetDefaultMediaDetection(HDRVLINE hdLine None,DWORD dwMediaModes None)
BOOL WINAPI crypt32.CertAddCRLContextToStore(_In_ HCERTSTORE hCertStore,_In_ PCCRL_CONTEXT pCrlContext,_In_ DWORD dwAddDisposition,_Out_opt_ PCCRL_CONTEXT *ppStoreContext)
LONG TSPIAPI None.TSPI_lineSetTerminal(DRV_REQUESTID dwRequestID None,HDRVLINE hdLine None,DWORD dwAddressID None,HDRVCALL hdCall None,DWORD dwSelect None,DWORD dwTerminalModes None,DWORD dwTerminalID None,DWORD bEnable None)
HRESULT None None.GetDisconnectedSession([out] ITsSbSession **ppSession)
protected boolean None.FreezeCore(boolean isChecking None)
protected void None.OnAfterSelect(TreeViewEventArgs e None)
HRESULT None cscsvc.IsPinnedForUserByPolicy([out] BOOL *pbPinnedForUser,[out] BOOL *pbInherit)
ULONG None mswsock.RIODequeueCompletion(_In_ RIO_CQ CQ,_Out_ PRIORESULT Array,_In_ ULONG ArraySize)
LPCSTR None None.D3DXGetVertexShaderProfile(_In_ LPDIRECT3DDEVICE9 pDevice)
BOOL None None.ListView_SetUnicodeFormat(HWND hwnd None,BOOL fUnicode None)
RPC_STATUS None rpcrt4.RpcServerSubscribeForNotification(_In_ RPC_BINDING_HANDLE Binding,_In_ DWORD Notification,_In_ RPC_NOTIFICATION_TYPES NotificationType,_In_ RPC_ASYNC_NOTIFICATION_INFO *NotificationInfo)
int None None.firstbithigh(in int value)
HRESULT None propsys.PropVariantToUInt32VectorAlloc(_In_ REFPROPVARIANT propvar,_Out_ ULONG **pprgn,_Out_ ULONG *pcElem)
HRESULT None None.get_ConnectionRate(long* pVal None)
BOOL WINAPI kernel32.UnregisterWait(_In_ HANDLE WaitHandle)
HANDLE WINAPI kernel32.OpenThread(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ DWORD dwThreadId)
BOOL None None.Edit_GetModify(HWND hwndCtl None)
HRESULT None None.GetStrokeBrush([out None None,retval] IXpsOMBrush **brush)
HRESULT None None.ULongLongToLong(_In_ ULONGLONG ullOperand,_Out_ LONG *plResult)
HTREEITEM None None.TreeView_GetPrevVisible(HWND hwndTV None,HTREEITEM hitem None)
HRESULT None wuapi.get_IsUninstallable([out] VARIANT_BOOL *retval)
uint32 None dnsserverpsprovider.AddByServer([in] string ComputerName,[in] boolean PassThru,[in] string Action,[in] string ClientSubnet,[in] string Condition,[in] string InternetProtocol,[in] boolean Disable,[in] string Name,[in] uint32 ProcessingOrder,[in] string ServerInterfaceIP,[in] string TimeOfDay,[in] string TransportProtocol,[out] DnsServerPolicy cmdletOutput)
DWORD APIENTRY mprapi.MprConfigServerSetInfo(_In_ HANDLE hMprConfig,_In_ MPR_SERVER_SET_CONFIG_EX *pSetServerConfig)
HRESULT None None.get_Strokes([out None None,retval] IInkStrokes **Strokes)
WDFUSBPIPE None None.WdfUsbInterfaceGetConfiguredPipe(_In_ WDFUSBINTERFACE UsbInterface,_In_ UCHAR PipeIndex,_Out_opt_ PWDF_USB_PIPE_INFORMATION PipeInfo)
VOID WINAPI bcrypt.BCryptFreeBuffer(_In_ PVOID pvBuffer)
HRESULT STDAPI cldapi.CfUpdateSyncProviderStatus(_In_ CF_CONNECTION_KEY ConnectionKey,_In_ CF_SYNC_PROVIDER_STATUS ProviderStatus)
D2D1_CREATION_PROPERTIES None d2d1.CreationProperties(D2D1_THREADING_MODE threadingMode None,D2D1_DEBUG_LEVEL debugLevel None,D2D1_DEVICE_CONTEXT_OPTIONS options None)
HRESULT None tapi3.GetAllocatorProperties([out] ALLOCATOR_PROPERTIES *pAllocProperties)
HRESULT None oleaut32.VarUI4FromI1(_In_ CHAR cIn,_Out_ ULONG *pulOut)
HRESULT None oleaut32.VarI1FromUI1(_In_ BYTE bIn,_Out_ CHAR *pcOut)
VOID FORCEINLINE None.TpDestroyCallbackEnviron(_In_ PTP_CALLBACK_ENVIRON CallbackEnviron)
HRESULT None mfplat.MFGetContentProtectionSystemCLSID(_In_ REFGUID guidProtectionSystemID,_Out_ CLSID *pclsid)
HRESULT None oleaut32.VarUI2FromR4(_In_ FLOAT fltIn,_Out_ USHORT *puiOut)
HRESULT None oleaut32.VarR8FromI4(_In_ LONG lIn,_Out_ DOUBLE *pdblOut)
HRESULT None propsys.VariantToUInt64ArrayAlloc(_In_ REFVARIANT var,_Out_ ULONGLONG **pprgn,_Out_ ULONG *pcElem)
BOOL WINAPI authz.AuthzAddSidsToContext(_In_ AUTHZ_CLIENT_CONTEXT_HANDLE OrigClientContext,_In_ PSID_AND_ATTRIBUTES Sids,_In_ DWORD SidCount,_In_ PSID_AND_ATTRIBUTES RestrictedSids,_In_ DWORD RestrictedSidCount,_Out_ PAUTHZ_CLIENT_CONTEXT_HANDLE pNewClientContext)
HRESULT None None.Parent(REFIID riid None,void **ppv None)
HRESULT WINAPI webservices.WsResetHeap(_In_ WS_HEAP* heap,_In_opt_ WS_ERROR* error)
DWORD None mprapi.MprAdminTransportCreate(_In_ MPR_SERVER_HANDLE hMprServer,_In_ DWORD dwTransportId,_In_opt_ LPWSTR lpwsTransportName,_In_ LPBYTE pGlobalInfo,_In_ DWORD dwGlobalInfoSize,_In_opt_ LPBYTE pClientInterfaceInfo,_In_opt_ DWORD dwClientInterfaceInfoSize,_In_ LPWSTR lpwsDLLPath)
BOOL WINAPI wtsapi32.WTSStartRemoteControlSession(_In_ LPTSTR pTargetServerName,_In_ ULONG TargetLogonId,_In_ BYTE HotkeyVk,_In_ USHORT HotkeyModifiers)
BOOL WINAPI wtsapi32.WTSStartRemoteControlSessionW(_In_ LPTSTR pTargetServerName,_In_ ULONG TargetLogonId,_In_ BYTE HotkeyVk,_In_ USHORT HotkeyModifiers)
BOOL WINAPI wtsapi32.WTSStartRemoteControlSessionA(_In_ LPTSTR pTargetServerName,_In_ ULONG TargetLogonId,_In_ BYTE HotkeyVk,_In_ USHORT HotkeyModifiers)
uint32 None cimwin32.SetTcpNumConnections([in] uint32 TcpNumConnections)
HRESULT None msftedit.TxGetBackStyle(TXTBACKSTYLE *pstyle None)
HICON None shell32.ExtractAssociatedIconEx(_Reserved_ HINSTANCE hInst,_Inout_ LPTSTR lpIconPath,_Inout_ LPWORD lpiIconIndex,_Inout_ LPWORD lpiIconId)
HICON None shell32.ExtractAssociatedIconExW(_Reserved_ HINSTANCE hInst,_Inout_ LPTSTR lpIconPath,_Inout_ LPWORD lpiIconIndex,_Inout_ LPWORD lpiIconId)
HICON None shell32.ExtractAssociatedIconExA(_Reserved_ HINSTANCE hInst,_Inout_ LPTSTR lpIconPath,_Inout_ LPWORD lpiIconIndex,_Inout_ LPWORD lpiIconId)
MI_INLINE MI_Result None.MI_Application_NewSubscriptionDeliveryOptions(_In_ MI_Application *application,_In_ MI_SubscriptionDeliveryType deliveryType,_Out_ MI_SubscriptionDeliveryOptions *deliveryOptions)
private void None.MyForm_Layout(Object sender None,System.Windows.Forms.LayoutEventArgs e None)
public None None.Decimal(float value None)
BOOLEAN None None.KeInsertDeviceQueue(_Inout_ PKDEVICE_QUEUE DeviceQueue,_Inout_ PKDEVICE_QUEUE_ENTRY DeviceQueueEntry)
void None None.GetDimensions(out uint dim)
DWORD WINAPI kernel32.GetPriorityClass(_In_ HANDLE hProcess)
LONG WINAPI tapi32.lineSetMediaMode(HCALL hCall None,DWORD dwMediaModes None)
HRESULT None None.get_PlayerBytesSent(VARIANT* pVal None)
HRESULT None rdpencom.get_FrameBuffer([out None None,retval] IRDPSRAPIFrameBuffer **ppVal)
public ResourceSet None.GetResourceSet(CultureInfo culture None,boolean createIfNotExists None,boolean tryParents None)
public boolean None.CanConvertTo(ITypeDescriptorContext context None,Type destinationType None)
LONG TSPIAPI None.TSPI_lineGetCallHubTracking(HDRVLINE hdLine None,LPLINECALLHUBTRACKINGINFO lpTrackingInfo None)
delegate void None.TestDelegate(string s None)
public void None.GetObjectData(SerializationInfo serializationInfo None,StreamingContext streamingContext None)
HRESULT None None.GetInfo([out] CALLFRAMEINFO *pInfo)
HRESULT None None.GetValue([out] PROPVARIANT *pvValue)
HRESULT None oleaut32.VarBoolFromDisp(IDispatch *pdispIn None,_In_ LCID lcid,_Out_ VARIANT_BOOL *pboolOut)
BOOL None rasdlg.RasDialDlg(_In_ LPTSTR lpszPhonebook,_In_ LPTSTR lpszEntry,_In_ LPTSTR lpszPhoneNumber,_In_ LPRASDIALDLG lpInfo)
BOOL None rasdlg.RasDialDlgW(_In_ LPTSTR lpszPhonebook,_In_ LPTSTR lpszEntry,_In_ LPTSTR lpszPhoneNumber,_In_ LPRASDIALDLG lpInfo)
BOOL None rasdlg.RasDialDlgA(_In_ LPTSTR lpszPhonebook,_In_ LPTSTR lpszEntry,_In_ LPTSTR lpszPhoneNumber,_In_ LPRASDIALDLG lpInfo)
HRESULT None None.GetDeviceId([out] LPWSTR *ppwstrDeviceId)
public StringBuilder None.Append(char value None)
DWORD None iphlpapi.GetInterfaceInfo(_Out_ PIP_INTERFACE_INFO pIfTable,_Inout_ PULONG dwOutBufLen)
DWORD None ntdsapi.DsBindWithCred(_In_opt_ LPCTSTR DomainControllerName,_In_opt_ LPCTSTR DnsDomainName,_In_opt_ RPC_AUTH_IDENTITY_HANDLE AuthIdentity,_Out_ HANDLE *phDS)
DWORD None ntdsapi.DsBindWithCredW(_In_opt_ LPCTSTR DomainControllerName,_In_opt_ LPCTSTR DnsDomainName,_In_opt_ RPC_AUTH_IDENTITY_HANDLE AuthIdentity,_Out_ HANDLE *phDS)
DWORD None ntdsapi.DsBindWithCredA(_In_opt_ LPCTSTR DomainControllerName,_In_opt_ LPCTSTR DnsDomainName,_In_opt_ RPC_AUTH_IDENTITY_HANDLE AuthIdentity,_Out_ HANDLE *phDS)
LONG WINAPI winscard.SCardConnect(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReader,_In_ DWORD dwShareMode,_In_ DWORD dwPreferredProtocols,_Out_ LPSCARDHANDLE phCard,_Out_ LPDWORD pdwActiveProtocol)
LONG WINAPI winscard.SCardConnectW(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReader,_In_ DWORD dwShareMode,_In_ DWORD dwPreferredProtocols,_Out_ LPSCARDHANDLE phCard,_Out_ LPDWORD pdwActiveProtocol)
LONG WINAPI winscard.SCardConnectA(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReader,_In_ DWORD dwShareMode,_In_ DWORD dwPreferredProtocols,_Out_ LPSCARDHANDLE phCard,_Out_ LPDWORD pdwActiveProtocol)
HRESULT WINAPI webservices.WsReadStartAttribute(_In_ WS_XML_READER* reader,_In_ ULONG attributeIndex,_In_opt_ WS_ERROR* error)
HRESULT None userenv.RSoPResetPolicySettingStatus(_In_ DWORD dwFlags,_In_ IWbemServices *pServices,_In_ IWbemClassObject *pSettingInstance)
HRESULT None None.GetNativeVideoSize([out] SIZE *pszVideo,[out] SIZE *pszARVideo)
DWORD None mprapi.MprAdminInterfaceTransportRemove(_In_ MPR_SERVER_HANDLE hMprServer,_In_ HANDLE hInterface,_In_ DWORD dwTransportId)
uint32 None ncserverpsprovider.LogEvent([in] uint32 EventId,[in] NetworkControllerClusterConfiguration OldClusterConfiguration,[in] NetworkControllerClusterConfiguration NewClusterConfiguration,[in] NetworkControllerApplicationConfiguration OldApplicationConfiguration,[in] NetworkControllerApplicationConfiguration NewApplicationConfiguration)
HRESULT None None.GetAccessibilityShortDescription([out None None,retval] LPWSTR *shortDescription)
HRESULT None None.LongToUShort(_In_ LONG lOperand,_Out_ USHORT *pusResult)
HRESULT None None.get_ConnectedPlayers(long* pVal None)
HRESULT None windowscodecs.IWICImagingFactory_CreateStream_Proxy(_In_ IWICImagingFactory *pFactory,_Out_ IWICStream **ppIWICStream)
HRESULT None fxscomex.put_AgeLimit([in] long lAgeLimit)
HRESULT None None.Clone([out None None,retval] IXpsOMCanvas **canvas)
HRESULT None propsys.PropVariantGetInt64Elem(_In_ REFPROPVARIANT propvar,_In_ ULONG iElem,_Out_ LONGLONG *pnVal)
public None None.Cursor(Stream cursorStream None)
public void None.CopyToHdevmode(IntPtr hdevmode None)
UINT64 None None.Pack2UINT32AsUINT64(_In_ UINT32 unHigh,_In_ UINT32 unLow)
public boolean None.CheckBoolean(SystemSetting setting None)
public void None.OnUnload(EventArgs e None)
HRESULT None propsys.PropVariantGetBooleanElem(_In_ REFPROPVARIANT propvar,_In_ ULONG iElem,_Out_ BOOL *pfVal)
HRESULT None None.Parent(REFIID riid None,void **ppv None)
uint32 None dhcpserverpsprovider.GetByBadLeases([in] string ComputerName,[in] boolean BadLeases,[in] string ScopeId,[out] DhcpServerv4Lease cmdletOutput[])
HRESULT None oleaut32.VarDecFromStr(_In_ LPCOLESTR strIn,_In_ LCID lcid,_In_ ULONG dwFlags,_Out_ DECIMAL *pdecOut)
HRESULT None oleaut32.VarBstrFromUI1(_In_ BYTE bVal,_In_ LCID lcid,_In_ ULONG dwFlags,_Out_ BSTR *pbstrOut)
DWORD None rasapi32.RasGetEapUserData(_In_ HANDLE hToken,_In_ LPCTSTR pszPhonebook,_In_ LPCTSTR pszEntry,_Out_ BYTE *pbEapData,_Inout_ DWORD *pdwSizeofEapData)
DWORD None rasapi32.RasGetEapUserDataW(_In_ HANDLE hToken,_In_ LPCTSTR pszPhonebook,_In_ LPCTSTR pszEntry,_Out_ BYTE *pbEapData,_Inout_ DWORD *pdwSizeofEapData)
DWORD None rasapi32.RasGetEapUserDataA(_In_ HANDLE hToken,_In_ LPCTSTR pszPhonebook,_In_ LPCTSTR pszEntry,_Out_ BYTE *pbEapData,_Inout_ DWORD *pdwSizeofEapData)
HRESULT None oleaut32.VarDateFromR8(_In_ DOUBLE dblIn,_Out_ DATE *pdateOut)
protected boolean None.FreezeCore(boolean isChecking None)
VOID WINAPI kernel32.LeaveCriticalSectionWhenCallbackReturns(_Inout_ PTP_CALLBACK_INSTANCE pci,_Inout_ PCRITICAL_SECTION pcs)
ULONG None wldap32.ldap_controls_free(_In_ LDAPControl **Controls)
ULONG None wldap32.ldap_controls_freeW(_In_ LDAPControl **Controls)
ULONG None wldap32.ldap_controls_freeA(_In_ LDAPControl **Controls)
HRESULT None None.MoveNext([out None None,retval] BOOL *hasNext)
HRESULT None None.GetFolderDefinition([out] KNOWNFOLDER_DEFINITION *pKFD)
uint32 None dnsserverpsprovider.AddByUnknown([in] string ZoneName,[in] string ComputerName,[in] boolean PassThru,[in] string ZoneScope,[in] uint16 Type,[in] string RecordData,[in] boolean AgeRecord,[in] boolean AllowUpdateAny,[in] datetime TimeToLive,[in] string Name,[out] DnsServerResourceRecord cmdletOutput)
protected void None.OnAfterSelect(TreeViewEventArgs e None)
IRawElementProviderSimple None None.GetOverrideProviderForHwnd(IntPtr hwnd None)
DWORD WINAPI clusapi.ClusterNodeControl(_In_ HNODE hNode,_In_opt_ HNODE hHostNode,_In_ DWORD dwControlCode,_In_opt_ LPVOID lpInBuffer,_In_ DWORD nInBufferSize,_Out_opt_ LPVOID lpOutBuffer,_In_ DWORD nOutBufferSize,_Out_opt_ LPDWORD lpBytesReturned)
IRawElementProviderSimple None None.GetOverrideProviderForHwnd(IntPtr hwnd None)
HRESULT WINAPI webservices.WsReadStartElement(_In_ WS_XML_READER* reader,_In_opt_ WS_ERROR* error)
uint32 None dhcpserverpsprovider.GetByIPAddress([in] string IPAddress[],[in] string ComputerName,[out] DhcpServerv4Reservation cmdletOutput[])
HRESULT None None.get_CurrentCounters(IWMSServerCurrentCounters** pVal None)
HRESULT None fxscomex.put_Bodies(VARIANT pvBodies None)
HRESULT None None.put_DefaultPluginLoadType(WMS_PLUGIN_LOAD_TYPE val None)
HRESULT None wuapi.get_Image([out] IImageInformation **retval)
PDNS_RECORD None dnsapi.DnsRecordSetDetach(_Inout_ PDNS_RECORD pRR)
PDH_STATUS None pdh.PdhGetCounterInfo(_In_ PDH_HCOUNTER hCounter,_In_ BOOLEAN bRetrieveExplainText,_Inout_ LPDWORD pdwBufferSize,_Out_ PPDH_COUNTER_INFO lpBuffer)
PDH_STATUS None pdh.PdhGetCounterInfoW(_In_ PDH_HCOUNTER hCounter,_In_ BOOLEAN bRetrieveExplainText,_Inout_ LPDWORD pdwBufferSize,_Out_ PPDH_COUNTER_INFO lpBuffer)
PDH_STATUS None pdh.PdhGetCounterInfoA(_In_ PDH_HCOUNTER hCounter,_In_ BOOLEAN bRetrieveExplainText,_Inout_ LPDWORD pdwBufferSize,_Out_ PPDH_COUNTER_INFO lpBuffer)
HRESULT None propsys.VariantGetInt32Elem(_In_ REFVARIANT var,_In_ ULONG iElem,_Out_ LONG *pnVal)
HRESULT None fxscomex.OnIncomingJobRemoved(IFaxServer2 *pFaxServer2 None,BSTR bstrJobId None)
private void None.myButtonPrint_OnClick(Object sender None,System.EventArgs e None)
HRESULT None mfreadwrite.MFCreateSourceReaderFromMediaSource(_In_ IMFMediaSource *pMediaSource,_In_ IMFAttributes *pAttributes,_Out_ IMFSourceReader **ppSourceReader)
BOOL None kernel32.GetNumaProcessorNodeEx(_In_ PPROCESSOR_NUMBER Processor,_Out_ PUSHORT NodeNumber)
HRESULT None tapi3.GetAllocateBuffers([out] BOOL *pbAllocBuffers)
protected void None.GetAsFrozenCore(Freezable sourceFreezable None)
int None None.CompareTo(T other None)
INT None comctl32.LVGroupCompare(_In_ INT Group1_ID,_In_ INT Group2_ID,_In_ VOID *pvData)
protected void None.CopyPersonalizationState(WebPart webPartA None,WebPart webPartB None)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsBindingImportNext(RPC_NS_HANDLE ImportContext None,RPC_BINDING_HANDLE *Binding None)
DWORD None ntdsapi.DsUnquoteRdnValue(_In_ DWORD cQuotedRdnValueLength,_In_ LPCTCH psQuotedRdnValue,_Inout_ DWORD *pcUnquotedRdnValueLength,_Out_ LPTCH psUnquotedRdnValue)
DWORD None ntdsapi.DsUnquoteRdnValueW(_In_ DWORD cQuotedRdnValueLength,_In_ LPCTCH psQuotedRdnValue,_Inout_ DWORD *pcUnquotedRdnValueLength,_Out_ LPTCH psUnquotedRdnValue)
DWORD None ntdsapi.DsUnquoteRdnValueA(_In_ DWORD cQuotedRdnValueLength,_In_ LPCTCH psQuotedRdnValue,_Inout_ DWORD *pcUnquotedRdnValueLength,_Out_ LPTCH psUnquotedRdnValue)
RPC_STATUS RPC_ENTRY rpcrt4.RpcMgmtIsServerListening(RPC_BINDING_HANDLE Binding None)
HRESULT None propsys.VariantGetInt64Elem(_In_ REFVARIANT var,_In_ ULONG iElem,_Out_ LONGLONG *pnVal)
BOOL WINAPI crypt32.CertSelectCertificateChains(_In_opt_ LPCGUID pSelectionContext,_In_ DWORD dwFlags,_In_opt_ PCCERT_SELECT_CHAIN_PARA pChainParameters,_In_ DWORD cCriteria,_In_opt_ PCCERT_SELECT_CRITERIA rgpCriteria,_In_ HCERTSTORE hStore,_Out_ PDWORD pcSelection,_Out_ PCCERT_CHAIN_CONTEXT **pprgpSelection)
LONG WINAPI winscard.SCardListCards(_In_ SCARDCONTEXT hContext,_In_opt_ LPCBYTE pbAtr,_In_ LPCGUID rgguidInterfaces,_In_ DWORD cguidInterfaceCount,_Out_ LPTSTR mszCards,_Inout_ LPDWORD pcchCards)
LONG WINAPI winscard.SCardListCardsW(_In_ SCARDCONTEXT hContext,_In_opt_ LPCBYTE pbAtr,_In_ LPCGUID rgguidInterfaces,_In_ DWORD cguidInterfaceCount,_Out_ LPTSTR mszCards,_Inout_ LPDWORD pcchCards)
LONG WINAPI winscard.SCardListCardsA(_In_ SCARDCONTEXT hContext,_In_opt_ LPCBYTE pbAtr,_In_ LPCGUID rgguidInterfaces,_In_ DWORD cguidInterfaceCount,_Out_ LPTSTR mszCards,_Inout_ LPDWORD pcchCards)
BOOL WINAPI avrt.AvRtLeaveThreadOrderingGroup(_In_ HANDLE Context)
protected void None.OnDataBinding(EventArgs e None)
uint32 None wvrcimprov.GetGroup([in] string ComputerName,[in] string Name,[out] MSFT_WvrReplicationGroup Output[])
HRESULT WINAPI coremessaging.CreateDispatcherQueueController(_In_ DispatcherQueueOptions options,_Out_ DispatcherQueueController dispatcherQueueController)
STDAPI None shcore.UnregisterScaleChangeEvent(_In_ DWORD_PTR dwCookie)
PCRYPT_ATTRIBUTE WINAPI crypt32.CertFindAttribute(_In_ LPCSTR pszObjId,_In_ DWORD cAttr,_In_ CRYPT_ATTRIBUTE rgAttr[])
LONG WINAPI tapi32.linePark(HCALL hCall None,DWORD dwParkMode None,LPCSTR lpszDirAddress None,LPVARSTRING lpNonDirAddress None)
LONG WINAPI tapi32.lineParkW(HCALL hCall None,DWORD dwParkMode None,LPCSTR lpszDirAddress None,LPVARSTRING lpNonDirAddress None)
LONG WINAPI tapi32.lineParkA(HCALL hCall None,DWORD dwParkMode None,LPCSTR lpszDirAddress None,LPVARSTRING lpNonDirAddress None)
PDH_STATUS None pdh.PdhCollectQueryDataEx(_In_ PDH_HQUERY hQuery,_In_ DWORD dwIntervalTime,_In_ HANDLE hNewDataEvent)
public void None.ScrollControlIntoView(Control activeControl None)
public Rectangle None.GetBackgroundExtent(IDeviceContext dc None,Rectangle contentBounds None)
HRESULT WINAPI None.EngineAdapterCheckForDuplicate(_Inout_ PWINBIO_PIPELINE Pipeline,_Out_ Identity None,_Out_ PWINBIO_BIOMETRIC_SUBTYPE SubFactor,_Out_ PBOOLEAN Duplicate)
HRESULT None fxscomex.put_ArchiveLocation([in] BSTR bstrArchiveLocation)
DWORD None mprapi.MprAdminInterfaceUpdatePhonebookInfo(_In_ MPR_SERVER_HANDLE hMprServer,_In_ HANDLE hInterface)
PDH_STATUS None pdh.PdhGetCounterTimeBase(_In_ PDH_HCOUNTER hCounter,_Out_ LONGLONG *pTimeBase)
HRESULT None None.GetNewTargetCount([out] UINT *pcNewTarget)
HRESULT None None.get_StreamingPlayers(long* pVal None)
PDH_STATUS None pdh.PdhGetDefaultPerfCounterH(_In_ PDH_HLOG hDataSource,_In_ LPCTSTR szMachineName,_In_ LPCTSTR szObjectName,_Out_ LPTSTR szDefaultCounterName,_Inout_ LPDWORD pcchBufferSize)
PDH_STATUS None pdh.PdhGetDefaultPerfCounterHW(_In_ PDH_HLOG hDataSource,_In_ LPCTSTR szMachineName,_In_ LPCTSTR szObjectName,_Out_ LPTSTR szDefaultCounterName,_Inout_ LPDWORD pcchBufferSize)
PDH_STATUS None pdh.PdhGetDefaultPerfCounterHA(_In_ PDH_HLOG hDataSource,_In_ LPCTSTR szMachineName,_In_ LPCTSTR szObjectName,_Out_ LPTSTR szDefaultCounterName,_Inout_ LPDWORD pcchBufferSize)
HRESULT None mf.MFGetService(IUnknown *punkObject None,REFGUID guidService None,REFIID riid None,LPVOID *ppvObject None)
HRESULT None None.LastDownloadTime(SYSTEMTIME *pstLastDownloadTime None)
void None None.InterlockedMax(in R dest,in T value,out T original_value)
public double None.GetDouble(String name None)
HRESULT None oleaut32.VarUI1FromUI8(_In_ ULONG64 ui64In,_Out_ BYTE *pbOut)
HRESULT None None.GetContentInformation(IWMSContext** ppContentInfo None)
public void None.CopyTo(TreeNode[] nodeArray None,int index None)
HRESULT None oleaut32.VarDateFromUI1(_In_ BYTE bIn,_Out_ DATE *pdateOut)
BOOL None None.ListView_GetViewRect(HWND hwnd None,RECT *prc None)
uint32 None smiscsitargetprov.QuiesceDevice([in] boolean Quiesce)
HRESULT None propsys.PropVariantToUInt64(_In_ REFPROPVARIANT propvarIn,_Out_ ULONGLONG *pullRet)
BOOLEAN WINAPI powrprof.WritePwrScheme(_In_ PUINT puiID,_In_ LPWSTR lpszName,_In_opt_ LPWSTR lpszDescription,_In_ PPOWER_POLICY pPowerPolicy)
DWORD WINAPI wlanapi.WlanQueryAutoConfigParameter(_In_ HANDLE hClientHandle,_In_ WLAN_AUTOCONF_OPCODE OpCode,_Reserved_ PVOID pReserved,_Out_ PDWORD pdwDataSize,_Out_ PVOID ppData,_Out_opt_ PWLAN_OPCODE_VALUE_TYPE pWlanOpcodeValueType)
HRESULT None None.Clone([out None None,retval] IOpcSignatureCustomObjectEnumerator **copy)
HRESULT None None.Int64ToSSIZET(_In_ INT64 i64Operand,_Out_ SSIZE_T *pcbResult)
HRESULT None None.Url(LPWSTR *ppszUrl None)
HPROPSHEETPAGE WINAPI aclui.CreateSecurityPage(_In_ LPSECURITYINFO psi)
PDH_STATUS None pdh.PdhBrowseCounters(_In_ PPDH_BROWSE_DLG_CONFIG pBrowseDlgData)
PDH_STATUS None pdh.PdhBrowseCountersW(_In_ PPDH_BROWSE_DLG_CONFIG pBrowseDlgData)
PDH_STATUS None pdh.PdhBrowseCountersA(_In_ PPDH_BROWSE_DLG_CONFIG pBrowseDlgData)
public boolean None.Equals(Point value None)
BOOLAPI None wininet.InternetUnlockRequestFile(_In_ HANDLE hLockRequestInfo)
public None None.CheckoutException(String message None,int errorCode None)
HRESULT None None.CreatePlaylist(IXMLDOMDocument** ppPlaylist None)
HRESULT None fxscomex.put_Priority(long lPriority None)
HRESULT None mfplat.MFSerializePresentationDescriptor(IMFPresentationDescriptor *pPD None,DWORD *pcbData None,BYTE **ppbData None)
HRESULT None mfmediaengine.GetOriginalId([out] LPWSTR *originalId)
HRESULT None None.GetNumProtocolsSupported([out] DWORD *pcProtocols)
private void None.AutoSizeControl(Control control None,int textPadding None)
int None None.asint(in value None)
Object None None.ToType(Type conversionType None,IFormatProvider provider None)
DWORD WINAPI nmapi.GetFrameStoredLength(_In_ HFRAME hFrame)
RPC_STATUS RPC_ENTRY rpcrt4.RpcBindingServerFromClient(RPC_BINDING_HANDLE ClientBinding None,RPC_BINDING_HANDLE *ServerBinding None)
BOOL None ntdsapi.DsIsMangledRdnValue(_In_ LPCTSTR pszRdn,_In_ DWORD cRdn,_In_ DS_MANGLE_FOR eDsMangleForDesired)
BOOL None ntdsapi.DsIsMangledRdnValueW(_In_ LPCTSTR pszRdn,_In_ DWORD cRdn,_In_ DS_MANGLE_FOR eDsMangleForDesired)
BOOL None ntdsapi.DsIsMangledRdnValueA(_In_ LPCTSTR pszRdn,_In_ DWORD cRdn,_In_ DS_MANGLE_FOR eDsMangleForDesired)
VOID WINAPI user32.mouse_event(_In_ DWORD dwFlags,_In_ DWORD dx,_In_ DWORD dy,_In_ DWORD dwData,_In_ ULONG_PTR dwExtraInfo)
HRESULT None oleaut32.VarUI2FromUI4(_In_ ULONG ulIn,_Out_ USHORT *puiOut)
BOOL None imm32.ImmAssociateContextEx(_In_ HWND hWnd,_In_ HIMC hIMC,_In_ DWORD dwFlags)
HRESULT None None.InitVariantFromGUIDAsBuffer(_In_ REFGUID guid,_Out_ VARIANT *pvar)
HRESULT None None.MFSetAttribute2UINT32asUINT64(_In_ IMFAttributes *pAttributes,_In_ REFGUID guidKey,_In_ UINT32 unHigh32,_In_ UINT32 unLow32)
NTSTATUS NTAPI None.CrediRead(_In_ PLUID LogonId,_In_ ULONG CredFlags,_In_ LPWSTR TargetName,_In_ ULONG Type,_In_ ULONG Flags,_Out_ PENCRYPTED_CREDENTIALW *Credential)
HRESULT None None.GetIsSideways([out None None,retval] BOOL *isSideways)
uint32 None cimwin32.SetDNSSuffixSearchOrder([in] string DNSDomainSuffixSearchOrder[])
BOOL None None.TreeView_SetIndent(HWND hwndTV None,INT indent None)
HRESULT None shell32.ILLoadFromStream(_In_ IStream *pstm,_Out_ PIDLIST_RELATIVE *pidl)
HRESULT None msctf.EnumProperties([out] IEnumTfProperties **ppEnum)
BOOL None pdh.PdhIsRealTimeQuery(_In_ PDH_HQUERY hQuery)
HRESULT None None.get_CacheProxy(IWMSPlugins** pVal None)
HRESULT None fxscomex.ConnectedSubmit2([in] IFaxServer *pFaxServer,[out] VARIANT *pvFaxOutgoingJobIDs,[out None None,retval] LONG *plErrorBodyFile)
HRESULT None mfplat.MFCreateMediaType(IMFMediaType **ppMFType None)
HRESULT None None.get_OutgoingDistributionConnections(long* pVal None)
HRESULT None None.MaxItemCount(UINT *puiMaxItemCount None)
BOOL WINAPI user32.IsZoomed(_In_ HWND hWnd)
DWORD None None.GetDwordFromBlob(HBLOB hBlob None,const char* pOwnerName,const char* pCategoryName,const char* pTagName,DWORD* pDword None)
NET_API_STATUS None netapi32.NetLocalGroupSetMembers(_In_ LPCWSTR servername,_In_ LPCWSTR groupname,_In_ DWORD level,_In_ LPBYTE buf,_In_ DWORD totalentries)
HRESULT None None.CreateSubfolder(LPCWSTR pszName None,REFIID riid None,void **ppv None)
HRESULT None msftedit.GetContextMenu(WORD seltype None,LPOLEOBJECT lpoleobj None,CHARRANGE *lpchrg None,HMENU *lphmenu None)
LONG TSPIAPI None.TSPI_lineRedirect(DRV_REQUESTID dwRequestID None,HDRVCALL hdCall None,LPCWSTR lpszDestAddress None,DWORD dwCountryCode None)
HRESULT None None.GetGroupingParam([out] GUID *pguidClass)
HRESULT None scardssp.get_ApduLength([out] LONG *plSize)
UInt32 None None.Set([in] String FileName,[in] Boolean Enable,[in] Boolean Enforce,[out] String ExtendedStatus)
HRESULT None oleaut32.VarBstrFromI2(_In_ SHORT iVal,_In_ LCID lcid,_In_ ULONG dwFlags,BSTR *pbstrOut None)
DWORD WINAPI ntdsapi.DsReplicaConsistencyCheck(_In_ HANDLE hDS,_In_ DS_KCC_TASKID TaskID,_In_ DWORD dwFlags)
BOOL None None.SHQueueUserWorkItem(LPTHREAD_START_ROUTINE pfnCallback None,LPVOID pContext None,LONG lPriority None,DWORD_PTR dwTag None,DWORD_PTR * pdwId,LPCSTR pszModule None,DWORD dwFlags None)
public void None.MinMaxFields(int numberToSet None)
HRESULT None None.GetDesc(D3DX11_PASS_DESC *pDesc None)
ULONG None wldap32.ber_next_element(_In_ BerElement *pBerElement,_Inout_ ULONG *pLen,_Inout_ CHAR *opaque)
BOOL CALLBACK None.EnumInputContext(_In_ HIMC hIMC,_In_ LPARAM lParam)
HRESULT None None.GetPosition([out] LONG *Left,[out] LONG *Top,[out] LONG *Right,[out] LONG *Bottom)
protected void None.AddParsedSubObject(Object obj None)
public String None.Replace(String input None,String replacement None)
HRESULT None None.get_OutgoingDistributionBandwidth(long* pVal None)
HRESULT None None.InitVariantFromUInt16(_In_ USHORT uiVal,_Out_ VARIANT *pvar)
HRESULT None None.LastDownloadTime(SYSTEMTIME *pstLastDownloadTime None)
public StringBuilder None.AppendFormat(String format None,Object[] args None)
public OracleLob None.GetOracleLob(int i None)
LONG TSPIAPI None.TSPI_lineAddToConference(DRV_REQUESTID dwRequestID None,HDRVCALL hdConfCall None,HDRVCALL hdConsultCall None)
HRESULT None None.InitPropVariantFromInt16(_In_ SHORT nVal,_Out_ PROPVARIANT *ppropvar)
HRESULT None None.GetPacketCount(DWORD* pdwNumPackets None)
BOOL WINAPI crypt32.CertAddCertificateLinkToStore(_In_ HCERTSTORE hCertStore,_In_ PCCERT_CONTEXT pCertContext,_In_ DWORD dwAddDisposition,_Out_opt_ PCCERT_CONTEXT *ppStoreContext)
HRESULT None None.get_Advertisements(long* pVal None)
STDAPI None mfplat.MFCreateContentProtectionDevice(_In_ REFGUID ProtectionSystemId,_Out_ IMFContentProtectionDevice **ContentProtectionDevice)
void None None.ProcessTriTessFactorsMax(in float3 RawEdgeFactors,in float InsideScale,out float3 RoundedEdgeTessFactors,out float RoundedInsideTessFactor,out float UnroundedInsideTessFactor)
COLORREF None None.ListView_GetOutlineColor(HWND hwnd None)
protected void None.Render(HtmlTextWriter writer None)
protected void None.OnEnabledChanged(EventArgs e None)
BOOL CALLBACK None.AuthzGetCentralAccessPolicyCallback(_In_ AUTHZ_CLIENT_CONTEXT_HANDLE hAuthzClientContext,_In_ PSID capid,_In_opt_ PVOID pArgs,_Out_ PBOOL pCentralAccessPolicyApplicable,_Out_ PVOID ppCentralAccessPolicy)
BOOL None kernel32.GetNumaNodeProcessorMaskEx(_In_ USHORT Node,_Out_ PGROUP_AFFINITY ProcessorMask)
PDH_STATUS None pdh.PdhGetFormattedCounterValue(_In_ PDH_HCOUNTER hCounter,_In_ DWORD dwFormat,_Out_ LPDWORD lpdwType,_Out_ PPDH_FMT_COUNTERVALUE pValue)
HRESULT None None.GetQueueInstanceProp(LPCWSTR wszQueueFormatName None,CLSID *pIDValue None)
DWORD None shell32.DoEnvironmentSubst(_Inout_ LPTSTR pszSrc,UINT cchSrc None)
DWORD None shell32.DoEnvironmentSubstW(_Inout_ LPTSTR pszSrc,UINT cchSrc None)
DWORD None shell32.DoEnvironmentSubstA(_Inout_ LPTSTR pszSrc,UINT cchSrc None)
HRESULT None None.UIntToPtrdiffT(_In_ UINT uOperand,_Out_ ptrdiff_t *pcbResult)
BOOL None imm32.ImmDisableTextFrameService(_In_ DWORD idThread)
HRESULT None windowscodecs.IWICBitmapEncoder_Initialize_Proxy(_In_ IWICBitmapEncoder *THIS_PTR,_In_ IStream *pIStream,_In_ WICBitmapEncoderCacheOption cacheOption)
HRESULT None propsys.VariantToInt16Array(_In_ REFVARIANT var,_Out_ SHORT *prgn,_In_ ULONG crgn,_Out_ ULONG *pcElem)
HRESULT None None.GetObject([out] IUnknown **ppObject)
HRESULT None None.GetPlayMode([out] WMT_PLAY_MODE *pMode)
UINT64 None None.MFGetAttributeUINT64(_In_ IMFAttributes *pAttributes,_In_ REFGUID guidKey,_In_ UINT64 unDefault)
protected void None.OnPreviewMouseRightButtonDown(MouseButtonEventArgs e None)
public void None.ScaleAtPrepend(double scaleX None,double scaleY None,double centerX None,double centerY None)
HRESULT None mfplat.MFUnlockWorkQueue(_In_ DWORD dwWorkQueue)
BOOL WINAPI kernel32.TrySubmitThreadpoolCallback(_In_ PTP_SIMPLE_CALLBACK pfns,_Inout_opt_ PVOID pv,_In_opt_ PTP_CALLBACK_ENVIRON pcbe)
HRESULT None None.GetContentSize(long* plContentSizeLow None,long* plContentSizeHigh None)
HANDLE WINAPI kernel32.OpenEvent(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpName)
HANDLE WINAPI kernel32.OpenEventW(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpName)
HANDLE WINAPI kernel32.OpenEventA(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpName)
SECURITY_STATUS None sspicli.SspiPrepareForCredRead(_In_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE AuthIdentity,_In_ PCWSTR pszTargetName,_Out_ PULONG pCredmanCredentialType,_Out_ PCWSTR *ppszCredmanTargetName)
HRESULT None None.GetEnableTCP([out] BOOL *pfEnableTCP)
BOOLEAN _cdecl None.QUERYCLIENTCERT(_In_ PLDAP Connection,_In_ PSecPkgContext_IssuerListInfoEx trusted_CAs,_Inout_ PCCERT_CONTEXT *ppCertificate)
DWORD None rasapi32.RasCreatePhonebookEntry(_In_ HWND hwnd,_In_ LPCTSTR lpszPhonebook)
DWORD None rasapi32.RasCreatePhonebookEntryW(_In_ HWND hwnd,_In_ LPCTSTR lpszPhonebook)
DWORD None rasapi32.RasCreatePhonebookEntryA(_In_ HWND hwnd,_In_ LPCTSTR lpszPhonebook)
HRESULT None None.get_BezierPoints([out None None,retval] VARIANT *Points)
HRESULT WINAPI userenv.GetAppContainerFolderPath(_In_ PCWSTR pszAppContainerSid,_Out_ PWSTR *ppszPath)
ULONG None wldap32.ldap_add_s(_In_ LDAP *ld,_In_ PCHAR dn,_In_ LDAPMod *attrs[])
ULONG None wldap32.ldap_add_sW(_In_ LDAP *ld,_In_ PCHAR dn,_In_ LDAPMod *attrs[])
ULONG None wldap32.ldap_add_sA(_In_ LDAP *ld,_In_ PCHAR dn,_In_ LDAPMod *attrs[])
NETIOAPI_API None iphlpapi.GetIpPathEntry(_Inout_ PMIB_IPPATH_ROW Row)
HRESULT None scardssp.get_InstructionId([out] BYTE *pbyIns)
BOOL WINAPI iphlpapi.CancelSecurityHealthChangeNotify(LPOVERLAPPED notifyOverlapped None)
NTSTATUS None None.SpFormatCredentials(_In_ PSecBuffer Credentials,_Out_ PSecBuffer FormattedCredentials)
HRESULT None None.LastWriteTime(SYSTEMTIME *pstLastWriteTime None)
public boolean None.Equals(Object obj None)
SByte None None.ToSByte(IFormatProvider provider None)
protected void None.OnPreviewStylusButtonDown(StylusButtonEventArgs e None)
HRESULT STDAPI cldapi.CfHydratePlaceholder(_In_ HANDLE FileHandle,_In_ LARGE_INTEGER StartingOffset,_In_ LARGE_INTEGER Length,_In_ CF_HYDRATE_FLAGS HydrateFlags,_Inout_opt_ LPOVERLAPPED Overlapped)
PWDFDEVICE_INIT None None.WdfPdoInitAllocate(_In_ WDFDEVICE ParentDevice)
HRESULT None None.InitPropVariantFromInt32(_In_ LONG lVal,_Out_ PROPVARIANT *ppropvar)
DWORD None mprapi.MprAdminInterfaceSetCredentials(_In_ LPWSTR lpwsServer,_In_ LPWSTR lpwsInterfaceName,_In_ LPWSTR lpwsUserName,_In_ LPWSTR lpwsDomainName,_In_ LPWSTR lpwsPassword)
HRESULT None fxscomex.get_ArchiveSizeLow([out None None,retval] long *plSizeLow)
PDH_STATUS None pdh.PdhSetQueryTimeRange(_In_ PDH_HQUERY hQuery,_In_ PPDH_TIME_INFO pInfo)
protected void None.OnParentBindingContextChanged(EventArgs e None)
DWORD None mprapi.MprAdminServerSetInfo(_In_ MPR_SERVER_HANDLE hMprServer,_In_ DWORD dwLevel,_In_ LPBYTE lpbBuffer)
HRESULT None None.CreateNewMutualExclusion([out] IWMMutualExclusion **ppME)
DWORD None mprapi.MprConfigServerConnect(_In_ LPWSTR lpwsServerName,_Out_ HANDLE *phMprConfig)
HRESULT None tapi3.GetAllocatorProperties([out] ALLOCATOR_PROPERTIES *pAllocProperties)
protected void None.OnPreviewDrop(DragEventArgs e None)
inline UINT None.D3D11CalcSubresource(UINT MipSlice None,UINT ArraySlice None,UINT MipLevels None)
public void None.ConvertStringBoolean(String stringVal None)
HRESULT None None.CancelAsyncDownload(VOID None None)
HRESULT None None.GetBuffer(INSSBuffer** ppBuffer None,DWORD dwExFlags None)
HRESULT None oleaut32.VarI8FromUI8(_In_ ULONG64 ui64In,_Out_ LONG64 *pi64Out)
HRESULT None scardssp.get_P3([out] BYTE *pbyP3)
HRESULT None shell32.SHGetNameFromPropertyKey(_In_ REFPROPERTYKEY propkey,_Out_ PWSTR *ppszCanonicalName)
SECURITY_STATUS None sspicli.SspiPrepareForCredWrite(_In_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE AuthIdentity,_In_ PCWSTR pszTargetName,_Out_ PULONG pCredmanCredentialType,_Out_ PCWSTR *ppszCredmanTargetName,_Out_ PCWSTR *ppszCredmanUserName,_Out_ PUCHAR *ppCredentialBlob,_Out_ PULONG pCredentialBlobSize)
HRESULT None None.OnRowPositionChange(DBREASON eReason None,DBEVENTPHASE ePhase None,BOOL fCantDeny None)
protected void None.OnStylusInAirMove(StylusEventArgs e None)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsBindingLookupDone(RPC_NS_HANDLE *LookupContext None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcServerRegisterIf(RPC_IF_HANDLE IfSpec None,UUID *MgrTypeUuid None,RPC_MGR_EPV *MgrEpv None)
public void None.CopyTo(TreeNode[] nodeArray None,int index None)
HRESULT None scardssp.get_ClassId([out] BYTE *pbyClass)
ULONG None wldap32.ldap_add_ext(_In_ LDAP *ld,_In_ PCHAR dn,_In_ LDAPMod *attrs[],_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls,_Out_ ULONG *MessageNumber)
ULONG None wldap32.ldap_add_extW(_In_ LDAP *ld,_In_ PCHAR dn,_In_ LDAPMod *attrs[],_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls,_Out_ ULONG *MessageNumber)
ULONG None wldap32.ldap_add_extA(_In_ LDAP *ld,_In_ PCHAR dn,_In_ LDAPMod *attrs[],_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls,_Out_ ULONG *MessageNumber)
PCWSTR None propsys.PropVariantToStringWithDefault(_In_ REFPROPVARIANT propvarIn,_In_ LPCWSTR pszDefault)
DWORD APIENTRY dhcpcsvc.DhcpRequestParams(_In_ DWORD Flags,_In_ LPVOID Reserved,_In_ LPWSTR AdapterName,_In_ LPDHCPCAPI_CLASSID ClassId,_In_ DHCPCAPI_PARAMS_ARRAY SendParams,_Inout_ DHCPCAPI_PARAMS_ARRAY RecdParams,_In_ LPBYTE Buffer,_Inout_ LPDWORD pSize,_In_ LPWSTR RequestIdStr)
BOOL None None.TransformCopiesSampleAttributes(IMFTransform *pMFT None)
HRESULT None None.put_OutgoingDistributionConnections(long Val None)
BOOLEAN WINAPI powrprof.GetActivePwrScheme(_Out_ PUINT puiID)
uint32 None cimwin32.EnableWINS([in] boolean DNSEnabledForWINSResolution,[in] boolean WINSEnableLMHostsLookup,[in None None,optional] string WINSHostLookupFile,[in None None,optional] string WINSScopeID)
HRESULT None None.PropVariantToCLSID(_In_ REFPROPVARIANT propvar,_Out_ CLSID *pclsid)
HRESULT None None.get_OutgoingDistributionConnections(long* pVal None)
HRESULT None None.Int64ToDWord(_In_ INT64 i64Operand,_Out_ DWORD *pdwResult)
DWORD None imm32.ImmGetGuideLine(_In_ HIMC hIMC,_In_ DWORD dwIndex,_Out_opt_ LPTSTR lpBuf,_In_ DWORD dwBufLen)
DWORD None imm32.ImmGetGuideLineW(_In_ HIMC hIMC,_In_ DWORD dwIndex,_Out_opt_ LPTSTR lpBuf,_In_ DWORD dwBufLen)
DWORD None imm32.ImmGetGuideLineA(_In_ HIMC hIMC,_In_ DWORD dwIndex,_Out_opt_ LPTSTR lpBuf,_In_ DWORD dwBufLen)
HRESULT None None.GetTransaction([out] IUnknown **ppTx)
HRESULT None None.get_PlayerAcknowledgementTimeout(long* pVal None)
uint32 None ncserverpsprovider.UpdateNodeConfiguration([in] NetworkControllerClusterConfiguration ClusterConfiguration)
protected void None.OnBeforeRollback(IDictionary savedState None)
HRESULT None fxscomex.OnOutgoingJobRemoved(IFaxServer2 *pFaxServer2 None,BSTR bstrJobId None)
HRESULT None None.get_NumSessions([out None None,retval] DWORD *pNumSessions)
uint32 None dnsserverpsprovider.GetByServer([in] string Name,[in] string ComputerName,[out] DnsServerPolicy cmdletOutput[])
uint32 None cimwin32.SetPMTUBHDetect([in] boolean PMTUBHDetectEnabled)
BOOL WINAPI crypt32.CryptFreeOIDFunctionAddress(_In_ HCRYPTOIDFUNCADDR hFuncAddr,_In_ DWORD dwFlags)
HRESULT None None.get_UnicastDataSinks(IWMSPlugins** pVal None)
public None None.Decimal(float value None)
protected Object None.OnGet(Object key None,Object currentValue None)
HRESULT None wuapi.get_ReleaseNotes([out] BSTR *retval)
D2D1_RENDERING_CONTROLS None d2d1.RenderingControls(D2D1_BUFFER_PRECISION bufferPrecision None,D2D1_SIZE_U tileSize None)
public EventBuilder None.DefineEvent(String name None,EventAttributes attributes None,Type eventtype None)
NTSTATUS WINAPI bcrypt.BCryptGetProperty(_In_ BCRYPT_HANDLE hObject,_In_ LPCWSTR pszProperty,_Out_ PUCHAR pbOutput,_In_ ULONG cbOutput,_Out_ ULONG *pcbResult,_In_ ULONG dwFlags)
HRESULT None None.put_EnableReverseProxyMode(VARIANT_BOOL val None)
LONG TSPIAPI None.TSPI_lineDial(DRV_REQUESTID dwRequestID None,HDRVCALL hdCall None,LPCWSTR lpszDestAddress None,DWORD dwCountryCode None)
HRESULT None oleaut32.VarUI1FromI8(_In_ LONG64 i64In,_Out_ BYTE *pbOut)
uint32 None sppwmi.SetVLActivationInterval([in] uint32 ActivationInterval)
HRESULT None tapi3.EnumeratePreferredPhones([out] IEnumPhone **ppEnumPhone)
UINT None msi.MsiDeterminePatchSequence(_In_ LPCTSTR szProductCode,_In_opt_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD cPatchInfo,_In_ PMSIPATCHSEQUENCEINFO pPatchInfo)
UINT None msi.MsiDeterminePatchSequenceW(_In_ LPCTSTR szProductCode,_In_opt_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD cPatchInfo,_In_ PMSIPATCHSEQUENCEINFO pPatchInfo)
UINT None msi.MsiDeterminePatchSequenceA(_In_ LPCTSTR szProductCode,_In_opt_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD cPatchInfo,_In_ PMSIPATCHSEQUENCEINFO pPatchInfo)
HRESULT None scardssp.get_ApduReplyLength([out] LONG *plSize)
BOOL None None.ListView_GetOrigin(HWND hwnd None,LPPOINT lpptOrg None)
BOOL None None.ListView_SetBkImage(HWND hwndLV None,LPLVBKIMAGE plvbki None)
HRESULT None None.get_Deleted([out None None,retval] VARIANT_BOOL *Deleted)
BOOL None imm32.ImmGetConversionStatus(_In_ HIMC hIMC,_Out_opt_ LPDWORD lpfdwConversion,_Out_opt_ LPDWORD lpfdwSentence)
NETIOAPI_API None iphlpapi.NotifyIpInterfaceChange(_In_ ADDRESS_FAMILY Family,_In_ PIPINTERFACE_CHANGE_CALLBACK Callback,_In_ PVOID CallerContext,_In_ BOOLEAN InitialNotification,_Inout_ HANDLE *NotificationHandle)
HRESULT None None.GetInfo([out] CALLFRAMEINFO *pInfo)
HRESULT None None.EnumPartsIncoming([out] IPartsList **ppParts)
HRESULT None None.get_ProviderOptions([out None None,retval] ProviderOptions *pRetVal)
protected void None.OnPreviewGiveFeedback(GiveFeedbackEventArgs e None)
HRESULT None propsys.InitPropVariantVectorFromPropVariant(_In_ REFPROPVARIANT propvarSingle,_Out_ PROPVARIANT *ppropvarVector)
protected void None.PrepareContainerForItemOverride(DependencyObject element None,Object item None)
DWORD None ntdsapi.DsGetDomainControllerInfo(_In_ HANDLE hDs,_In_ LPTSTR DomainName,_In_ DWORD InfoLevel,_Out_ DWORD *pcOut,_Out_ VOID **ppInfo)
DWORD None ntdsapi.DsGetDomainControllerInfoW(_In_ HANDLE hDs,_In_ LPTSTR DomainName,_In_ DWORD InfoLevel,_Out_ DWORD *pcOut,_Out_ VOID **ppInfo)
DWORD None ntdsapi.DsGetDomainControllerInfoA(_In_ HANDLE hDs,_In_ LPTSTR DomainName,_In_ DWORD InfoLevel,_Out_ DWORD *pcOut,_Out_ VOID **ppInfo)
BOOL None None.TreeView_SortChildrenCB(HWND hwndTV None,LPTVSORTCB psort None,BOOL fRecurse None)
PDH_STATUS None pdh.PdhParseCounterPath(_In_ LPCTSTR szFullPathBuffer,_Out_ PDH_COUNTER_PATH_ELEMENTS *pCounterPathElements,_Inout_ LPDWORD pdwBufferSize,DWORD dwFlags None)
PDH_STATUS None pdh.PdhParseCounterPathW(_In_ LPCTSTR szFullPathBuffer,_Out_ PDH_COUNTER_PATH_ELEMENTS *pCounterPathElements,_Inout_ LPDWORD pdwBufferSize,DWORD dwFlags None)
PDH_STATUS None pdh.PdhParseCounterPathA(_In_ LPCTSTR szFullPathBuffer,_Out_ PDH_COUNTER_PATH_ELEMENTS *pCounterPathElements,_Inout_ LPDWORD pdwBufferSize,DWORD dwFlags None)
HRESULT None None.SetType(AudioObjectType type None)
public void None.CallOnDeleting(WebPart webPart None)
public int None.IndexOf(Link link None)
HRESULT None propsys.InitPropVariantFromResource(_In_ HINSTANCE hinst,_In_ UINT id,_Out_ PROPVARIANT *ppropvar)
WINAPI None mf.MFCreateWAVEMediaSink(_In_ IMFByteStream *pTargetByteStream,_In_ IMFMediaType *pAudioMediaType,_Out_ IMFMediaSink **ppMediaSink)
DWORD WINAPI crypt32.CertGetPublicKeyLength(_In_ DWORD dwCertEncodingType,_In_ PCERT_PUBLIC_KEY_INFO pPublicKey)
int None None.mbtowc(wchar_t *wchar None,const char *mbchar,size_t count None)
HRESULT None None.IsOpened([out] BOOL *pfOpened)
protected void None.CopyPersonalizationState(WebPart webPartA None,WebPart webPartB None)
void None None.Page_Load(Object sender None,System.EventArgs e None)
BOOL WINAPI kernel32.GetExitCodeThread(_In_ HANDLE hThread,_Out_ LPDWORD lpExitCode)
HRESULT None oleaut32.VarUI1FromR4(_In_ FLOAT fltIn,BYTE *pbOut None)
HRESULT None oleaut32.VarBoolFromI8(_In_ LONG64 i64In,_Out_ VARIANT_BOOL *pboolOut)
HRESULT None oleaut32.VarI8FromUI2(_In_ USHORT uiIn,_Out_ LONG64 *pi64Out)
BOOL WINAPI userenv.GetProfileType(_Out_ DWORD *pdwFlags)
NTSTATUS None None.ZwMakeTemporaryObject(_In_ HANDLE Handle)
public int None.LastIndexOf(String source None,String value None,int startIndex None,CompareOptions options None)
protected void None.OnAfterSelect(TreeViewEventArgs e None)
HGROUPSETENUM WINAPI clusapi.ClusterGroupSetOpenEnum(_In_ HCLUSTER hCluster)
NTSTATUS None None.WdfPdoInitAddDeviceText(_In_ PWDFDEVICE_INIT DeviceInit,_In_ PCUNICODE_STRING DeviceDescription,_In_ PCUNICODE_STRING DeviceLocation,_In_ LCID LocaleId)
DWORD None ntdsapi.DsBindingSetTimeout(_In_ HANDLE hDS,_In_ ULONG cTimeoutSecs)
MI_INLINE MI_Result None.MI_OperationOptions_SetUseMachineID(_Inout_ MI_OperationOptions *options,_In_ MI_Boolean machineID)
BOOL None imm32.ImmGetCandidateWindow(_In_ HIMC hIMC,_In_ DWORD dwIndex,_Out_ LPCANDIDATEFORM lpCandidate)
NTSTATUS WINAPI ntdll.ZwQueryInformationProcess(_In_ HANDLE ProcessHandle,_In_ PROCESSINFOCLASS ProcessInformationClass,_Out_ PVOID ProcessInformation,_In_ ULONG ProcessInformationLength,_Out_opt_ PULONG ReturnLength)
BOOL None mfplat.MFCompareFullToPartialMediaType(IMFMediaType *pMFTypeFull None,IMFMediaType *pMFTypePartial None)
HRESULT None fxscomex.CopyTiff([in] BSTR bstrTiffPath)
HRESULT None d3d12.SetStablePowerState(BOOL Enable None)
BOOL None None.GopherAttributeEnumerator(LPGOPHER_ATTRIBUTE_TYPE lpAttributeInfo None,DWORD dwError None)
LONG TSPIAPI None.TSPI_lineBlindTransfer(DRV_REQUESTID dwRequestID None,HDRVCALL hdCall None,LPCWSTR lpszDestAddress None,DWORD dwCountryCode None)
private void None.AutoSizeControl(Control control None,int textPadding None)
private void None.Page_Load(Object sender None,System.EventArgs e None)
HRESULT None mfplat.MFAddPeriodicCallback(_In_ MFPERIODICCALLBACK Callback,_In_ IUnknown *pContext,_Out_ DWORD *pdwKey)
DWORD None loadperf.LoadPerfCounterTextStrings(_In_ LPCTSTR commandLine,_In_ BOOL bQuietModeArg)
DWORD None loadperf.LoadPerfCounterTextStringsW(_In_ LPCTSTR commandLine,_In_ BOOL bQuietModeArg)
DWORD None loadperf.LoadPerfCounterTextStringsA(_In_ LPCTSTR commandLine,_In_ BOOL bQuietModeArg)
HRESULT None ole32.CoGetStandardMarshal(_In_ REFIID riid,_In_ LPUNKNOWN pUnk,_In_ DWORD dwDestContext,_In_opt_ LPVOID pvDestContext,_In_ DWORD mshlflags,_Out_ LPMARSHAL *ppMarshal)
BOOL None kernel32.SetProcessPreferredUILanguages(_In_ DWORD dwFlags,_In_opt_ PCZZWSTR pwszLanguagesBuffer,_Out_opt_ PULONG pulNumLanguages)
HRESULT None mf.MFCreatePresentationClock(IMFPresentationClock **ppPresentationClock None)
DWORD None mprapi.MprConfigServerRestore(_In_ HANDLE hMprConfig,_In_ LPWSTR lpwsPath)
HRESULT None tapi3.GetBufferSize([out] DWORD *pBufferSize)
PDH_STATUS None pdh.PdhAddCounter(_In_ PDH_HQUERY hQuery,_In_ LPCTSTR szFullCounterPath,_In_ DWORD_PTR dwUserData,_Out_ PDH_HCOUNTER *phCounter)
PDH_STATUS None pdh.PdhAddCounterW(_In_ PDH_HQUERY hQuery,_In_ LPCTSTR szFullCounterPath,_In_ DWORD_PTR dwUserData,_Out_ PDH_HCOUNTER *phCounter)
PDH_STATUS None pdh.PdhAddCounterA(_In_ PDH_HQUERY hQuery,_In_ LPCTSTR szFullCounterPath,_In_ DWORD_PTR dwUserData,_Out_ PDH_HCOUNTER *phCounter)
float None None.ddx_fine(in float value)
uint32 None cimwin32.SetGateways([in] string DefaultIPGateway[],[in None None,optional] uint16 GatewayCostMetric[])
public void None.AttachAnimation(Animation animation None)
HRESULT None None.GetFillBrushLookup([out None None,retval] LPWSTR *lookup)
HGROUPSET WINAPI clusapi.OpenClusterGroupSet(_In_ HCLUSTER hCluster,_In_ LPCWSTR lpszGroupSetName)
NETIOAPI_API None iphlpapi.SetIpInterfaceEntry(_Inout_ PMIB_IPINTERFACE_ROW Row)
HRESULT None None.GetStrokeEndLineCap([out None None,retval] XPS_LINE_CAP *strokeEndLineCap)
HRESULT None shell32.TranslateAccelerator(LPMSG lpmsg None)
MI_INLINE MI_Result None.MI_HostedProvider_GetApplication(_In_ MI_HostedProvider *hostedProvider,_Out_ MI_Application *application)
DWORD WINAPI clusapi.ClusterResourceTypeControl(_In_ HCLUSTER hCluster,_In_ LPCWSTR lpszResourceTypeName,_In_opt_ HNODE hHostNode,_In_ DWORD dwControlCode,_In_opt_ LPVOID lpInBuffer,_In_ DWORD nInBufferSize,_Out_opt_ LPVOID lpOutBuffer,_In_ DWORD nOutBufferSize,_Out_opt_ LPDWORD lpBytesReturned)
HRESULT None wuapi.get_CanRequireSource([out] VARIANT_BOOL *retval)
HRESULT None None.GetContextId([out] BSTR *pbstrCtxId)
BOOL WINAPI advapi32.ImpersonateLoggedOnUser(_In_ HANDLE hToken)
HRESULT None fxscomex.put_IncomingFaxesArePublic([in] VARIANT_BOOL bIncomingFaxesArePublic)
BOOL None None.ILIsEmpty(_In_ PCUID_RELATIVE pidl)
BOOL None iphlpapi.IcmpCloseHandle(_In_ HANDLE IcmpHandle)
HRESULT None mfplat.MFGetWorkQueueMMCSSTaskId(_In_ DWORD dwWorkQueueId,_Out_ LPDWORD pdwTaskId)
public None None.MessageQueuePermissionAttribute(SecurityAction action None)
public EventBuilder None.DefineEvent(String name None,EventAttributes attributes None,Type eventtype None)
void None None.UnregisterName(String name None)
HRESULT None None.GetOriginalCreatorSID([out] PSID *pSID)
LONG TSPIAPI None.TSPI_lineGetIcon(DWORD dwDeviceID None,LPCWSTR lpszDeviceClass None,LPHICON lphIcon None)
HRESULT None certenroll.get_DisplayName([out] BSTR *pValue)
HRESULT None oleaut32.VarUI4FromBool(_In_ VARIANT_BOOL boolIn,_Out_ ULONG *pulOut)
Object None None.ToType(Type conversionType None,IFormatProvider provider None)
LPCSTR None None.D3DXGetPixelShaderProfile(_In_ LPDIRECT3DDEVICE9 pDevice)
DWORD WINAPI wifidisplay.WFDCloseDisplaySinkSession(_In_ HANDLE hSessionHandle)
DWORD WINAPI wlanapi.WlanHostedNetworkStopUsing(_In_ HANDLE hClientHandle,_Out_opt_ PWLAN_HOSTED_NETWORK_REASON pFailReason,_Reserved_ PVOID pvReserved)
LONG WINAPI winscard.SCardBeginTransaction(_In_ SCARDHANDLE hCard)
HRESULT WINAPI webservices.WsSkipNode(_In_ WS_XML_READER* reader,_In_opt_ WS_ERROR* error)
HRESULT None None.Save([out] IVMTask **saveTask)
protected void None.OnStylusInAirMove(StylusEventArgs e None)
uint32 None ncserverpsprovider.Validate([in] string NodeName,[in] NetworkControllerClusterConfiguration ClusterConfiguration,[in] NetworkControllerApplicationConfiguration ApplicationConfiguration)
BOOL None imm32.ImmDestroyContext(_In_ HIMC hIMC)
HRESULT None msftedit.TxGetScrollBars(DWORD *pdwScrollBar None)
HRESULT None propsys.VariantToDosDateTime(_In_ REFVARIANT varIn,_Out_ WORD *pwDate,_Out_ WORD *pwTime)
RIO_CQ None mswsock.RIOCreateCompletionQueue(_In_ DWORD QueueSize,_In_opt_ RIO_NOTIFICATION_COMPLETION NotificationCompletion)
HRESULT None tapi3.get_AutoStopTonesOnOnHook([out] VARIANT_BOOL *pfEnabled)
MI_INLINE MI_Result None.MI_OperationOptions_GetWriteErrorMode(_In_ MI_OperationOptions *options,_Out_ MI_CallbackMode *mode)
BOOL WINAPI advapi32.AccessCheckByTypeResultListAndAuditAlarmByHandle(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ HANDLE ClientToken,_In_ LPCTSTR ObjectTypeName,_In_opt_ LPCTSTR ObjectName,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_opt_ PSID PrincipalSelfSid,_In_ DWORD DesiredAccess,_In_ AUDIT_EVENT_TYPE AuditType,_In_ DWORD Flags,_Inout_opt_ POBJECT_TYPE_LIST ObjectTypeList,_In_ DWORD ObjectTypeListLength,_In_ PGENERIC_MAPPING GenericMapping,_In_ BOOL ObjectCreation,_Out_ LPDWORD GrantedAccess,_Out_ LPDWORD AccessStatusList,_Out_ LPBOOL pfGenerateOnClose)
BOOL WINAPI advapi32.AccessCheckByTypeResultListAndAuditAlarmByHandleW(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ HANDLE ClientToken,_In_ LPCTSTR ObjectTypeName,_In_opt_ LPCTSTR ObjectName,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_opt_ PSID PrincipalSelfSid,_In_ DWORD DesiredAccess,_In_ AUDIT_EVENT_TYPE AuditType,_In_ DWORD Flags,_Inout_opt_ POBJECT_TYPE_LIST ObjectTypeList,_In_ DWORD ObjectTypeListLength,_In_ PGENERIC_MAPPING GenericMapping,_In_ BOOL ObjectCreation,_Out_ LPDWORD GrantedAccess,_Out_ LPDWORD AccessStatusList,_Out_ LPBOOL pfGenerateOnClose)
BOOL WINAPI advapi32.AccessCheckByTypeResultListAndAuditAlarmByHandleA(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ HANDLE ClientToken,_In_ LPCTSTR ObjectTypeName,_In_opt_ LPCTSTR ObjectName,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_opt_ PSID PrincipalSelfSid,_In_ DWORD DesiredAccess,_In_ AUDIT_EVENT_TYPE AuditType,_In_ DWORD Flags,_Inout_opt_ POBJECT_TYPE_LIST ObjectTypeList,_In_ DWORD ObjectTypeListLength,_In_ PGENERIC_MAPPING GenericMapping,_In_ BOOL ObjectCreation,_Out_ LPDWORD GrantedAccess,_Out_ LPDWORD AccessStatusList,_Out_ LPBOOL pfGenerateOnClose)
HRESULT WINAPI mf.MFCreateFMPEG4MediaSink(_In_ IMFByteStream *pIByteStream,_In_ IMFMediaType *pVideoMediaType,_In_ IMFMediaType *pAudioMediaType,_Out_ IMFMediaSink **ppIMediaSink)
LONG WINAPI kernel32.GetPackageApplicationIds(_In_ PACKAGE_INFO_REFERENCE packageInfoReference,_Inout_ UINT32 *bufferLength,_Out_opt_ BYTE *buffer,_Out_opt_ UINT32 *count)
PCUITEMID_CHILD None None.ILCloneChild(_In_ PCUITEMID_CHILD pidl)
LONG TSPIAPI None.TSPI_lineGetCallIDs(HDRVCALL hdCall None,LPDWORD lpdwAddressID None,LPDWORD lpdwCallID None,LPDWORD lpdwRelatedCallID None)
public void None.WriteLine(String format None,Object arg0 None,Object arg1 None)
public void None.Write(byte[] array None,int offset None,int count None)
HRESULT None None.StartPushing(IWMSCommandContext* pCommand None,double dblRate None,IWMSPushSourceCallback* pCallback None,QWORD qwContext None)
BOOL WINUSERAPI user32.UnregisterSuspendResumeNotification(_Inout_ HPOWERNOTIFY RegistrationHandle)
BOOL WINAPI authz.AuthzSetAppContainerInformation(_In_ AUTHZ_CLIENT_CONTEXT_HANDLE hAuthzClientContext,_In_ PSID pAppContainerSid,_In_ DWORD CapabilityCount,_In_opt_ PSID_AND_ATTRIBUTES pCapabilitySids[CapabilityCount])
HRESULT None faxcom.get_UserName([out None None,retval] BSTR *pVal)
INT None wldap32.ber_scanf(_Inout_ BerElement *pBerElement,_In_ PCHAR fmt,_In_ ... None)
HRESULT None url.MIMEAssociationDialog(HWND hwndParent None,DWORD dwInFlags None,PCTSTR pcszFile None,PCTSTR pcszMIMEContentType None,_Out_ PTSTR pszAppBuf,UINT ucAppBufLen None)
HRESULT None url.MIMEAssociationDialogW(HWND hwndParent None,DWORD dwInFlags None,PCTSTR pcszFile None,PCTSTR pcszMIMEContentType None,_Out_ PTSTR pszAppBuf,UINT ucAppBufLen None)
HRESULT None url.MIMEAssociationDialogA(HWND hwndParent None,DWORD dwInFlags None,PCTSTR pcszFile None,PCTSTR pcszMIMEContentType None,_Out_ PTSTR pszAppBuf,UINT ucAppBufLen None)
DWORD None ntdsapi.DsListServersInSite(_In_ HANDLE hDs,_In_ LPTSTR site,_Out_ PDS_NAME_RESULT *ppServers)
DWORD None ntdsapi.DsListServersInSiteW(_In_ HANDLE hDs,_In_ LPTSTR site,_Out_ PDS_NAME_RESULT *ppServers)
DWORD None ntdsapi.DsListServersInSiteA(_In_ HANDLE hDs,_In_ LPTSTR site,_Out_ PDS_NAME_RESULT *ppServers)
DWORD None iphlpapi.GetOwnerModuleFromUdp6Entry(_In_ PMIB_UDP6ROW_OWNER_MODULE pUdpEntry,_In_ TCPIP_OWNER_MODULE_INFO_CLASS Class,_Out_ PVOID Buffer,_Inout_ PDWORD pdwSize)
SECURITY_STATUS SEC_Entry secur32.AcquireCredentialsHandle(_In_ SEC_CHAR *pszPrincipal,_In_ SEC_CHAR *pszPackage,_In_ ULONG fCredentialUse,_In_ PLUID pvLogonID,_In_ PVOID pAuthData,_In_ SEC_GET_KEY_FN pGetKeyFn,_In_ PVOID pvGetKeyArgument,_Out_ PCredHandle phCredential,_Out_ PTimeStamp ptsExpiry)
SECURITY_STATUS SEC_Entry secur32.AcquireCredentialsHandleW(_In_ SEC_CHAR *pszPrincipal,_In_ SEC_CHAR *pszPackage,_In_ ULONG fCredentialUse,_In_ PLUID pvLogonID,_In_ PVOID pAuthData,_In_ SEC_GET_KEY_FN pGetKeyFn,_In_ PVOID pvGetKeyArgument,_Out_ PCredHandle phCredential,_Out_ PTimeStamp ptsExpiry)
SECURITY_STATUS SEC_Entry secur32.AcquireCredentialsHandleA(_In_ SEC_CHAR *pszPrincipal,_In_ SEC_CHAR *pszPackage,_In_ ULONG fCredentialUse,_In_ PLUID pvLogonID,_In_ PVOID pAuthData,_In_ SEC_GET_KEY_FN pGetKeyFn,_In_ PVOID pvGetKeyArgument,_Out_ PCredHandle phCredential,_Out_ PTimeStamp ptsExpiry)
DWORD None ntdsapi.DsClientMakeSpnForTargetServer(_In_ LPCTSTR ServiceClass,_In_ LPCTSTR ServiceName,_Inout_ DWORD *pcSpnLength,_Out_ LPTSTR pszSpn)
DWORD None ntdsapi.DsClientMakeSpnForTargetServerW(_In_ LPCTSTR ServiceClass,_In_ LPCTSTR ServiceName,_Inout_ DWORD *pcSpnLength,_Out_ LPTSTR pszSpn)
DWORD None ntdsapi.DsClientMakeSpnForTargetServerA(_In_ LPCTSTR ServiceClass,_In_ LPCTSTR ServiceName,_Inout_ DWORD *pcSpnLength,_Out_ LPTSTR pszSpn)
BOOL WINAPI credui.CredUnPackAuthenticationBuffer(_In_ DWORD dwFlags,_In_ PVOID pAuthBuffer,_In_ DWORD cbAuthBuffer,_Out_ LPTSTR pszUserName,_Inout_ DWORD *pcchMaxUserName,_Out_ LPTSTR pszDomainName,_Inout_ DWORD *pcchMaxDomainname,_Out_ LPTSTR pszPassword,_Inout_ DWORD *pcchMaxPassword)
BOOL WINAPI credui.CredUnPackAuthenticationBufferW(_In_ DWORD dwFlags,_In_ PVOID pAuthBuffer,_In_ DWORD cbAuthBuffer,_Out_ LPTSTR pszUserName,_Inout_ DWORD *pcchMaxUserName,_Out_ LPTSTR pszDomainName,_Inout_ DWORD *pcchMaxDomainname,_Out_ LPTSTR pszPassword,_Inout_ DWORD *pcchMaxPassword)
BOOL WINAPI credui.CredUnPackAuthenticationBufferA(_In_ DWORD dwFlags,_In_ PVOID pAuthBuffer,_In_ DWORD cbAuthBuffer,_Out_ LPTSTR pszUserName,_Inout_ DWORD *pcchMaxUserName,_Out_ LPTSTR pszDomainName,_Inout_ DWORD *pcchMaxDomainname,_Out_ LPTSTR pszPassword,_Inout_ DWORD *pcchMaxPassword)
HTREEITEM None None.TreeView_HitTest(HWND hwndTV None,LPTVHITTESTINFO lpht None)
HRESULT None None.get_State([out None None,retval] InkCursorButtonState *CurrentState)
DWORD None mprapi.MprAdminInterfaceDelete(_In_ MPR_SERVER_HANDLE hMprServer,_In_ HANDLE hInterface)
HRESULT None fxscomex.put_DiscountRateEnd([in] DATE dateDiscountRateEnd)
INT None None.ComboBox_GetMinVisible(HWND hwnd None)
BOOL None wininet.HttpSendRequestEx(_In_ HINTERNET hRequest,_In_ LPINTERNET_BUFFERS lpBuffersIn,_Out_ LPINTERNET_BUFFERS lpBuffersOut,_In_ DWORD dwFlags,_In_ DWORD_PTR dwContext)
BOOL None wininet.HttpSendRequestExW(_In_ HINTERNET hRequest,_In_ LPINTERNET_BUFFERS lpBuffersIn,_Out_ LPINTERNET_BUFFERS lpBuffersOut,_In_ DWORD dwFlags,_In_ DWORD_PTR dwContext)
BOOL None wininet.HttpSendRequestExA(_In_ HINTERNET hRequest,_In_ LPINTERNET_BUFFERS lpBuffersIn,_Out_ LPINTERNET_BUFFERS lpBuffersOut,_In_ DWORD dwFlags,_In_ DWORD_PTR dwContext)
VOID None None.XMVectorGetIntWPtr([out] uint32_t *w,XMVECTOR V None)
float None None.ddy_fine(in float value)
HRESULT None None.SetUrl(LPCWSTR pszUrl None)
HRESULT None mf.MFCreateASFMediaSink(IMFByteStream *pIByteStream None,IMFMediaSink **ppIMediaSink None)
HRESULT None oleaut32.VarR8FromI2(_In_ SHORT sIn,_Out_ DOUBLE *pdblOut)
HRESULT None dxva2.DXVA2CreateDirect3DDeviceManager9(_Out_ UINT *pResetToken,_Out_ IDirect3DDeviceManager9 **ppDXVAManager)
HRESULT None mfreadwrite.MFCreateSourceReaderFromMediaSource(_In_ IMFMediaSource *pMediaSource,_In_ IMFAttributes *pAttributes,_Out_ IMFSourceReader **ppSourceReader)
LONG TSPIAPI None.TSPI_phoneSetGain(DRV_REQUESTID dwRequestID None,HDRVPHONE hdPhone None,DWORD dwHookSwitchDev None,DWORD dwGain None)
BOOL None rasdlg.RasMonitorDlg(_In_ LPTSTR lpszDeviceName,_Inout_ LPRASMONITORDLG lpInfo)
BOOL None rasdlg.RasMonitorDlgW(_In_ LPTSTR lpszDeviceName,_Inout_ LPRASMONITORDLG lpInfo)
BOOL None rasdlg.RasMonitorDlgA(_In_ LPTSTR lpszDeviceName,_Inout_ LPRASMONITORDLG lpInfo)
HRESULT None certenroll.get_EnrollmentStatus([out] IX509EnrollmentStatus **ppValue)
HRESULT None None.GetFrameStatistics([out] DXGI_FRAME_STATISTICS *pStats)
HRESULT None oleaut32.VarI1FromStr(_In_ LPCOLESTR strIn,_In_ LCID lcid,_In_ ULONG dwFlags,_Out_ CHAR *pcOut)
private void None.MyPopupEventHandler(Object sender None,EventArgs e None)
ULONG None wldap32.ldap_modify_ext_s(_In_ LDAP *ld,_In_ PCHAR dn,_In_ LDAPMod *mods[],_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls)
ULONG None wldap32.ldap_modify_ext_sW(_In_ LDAP *ld,_In_ PCHAR dn,_In_ LDAPMod *mods[],_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls)
ULONG None wldap32.ldap_modify_ext_sA(_In_ LDAP *ld,_In_ PCHAR dn,_In_ LDAPMod *mods[],_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls)
NTSTATUS None None.CallPackagePassthrough(_In_ PUNICODE_STRING AuthenticationPackage,_In_ PVOID ClientBufferBase,_In_ PVOID ProtocolSubmitBuffer,_In_ ULONG SubmitBufferLength,_Out_ PVOID *ProtocolReturnBuffer,_Out_ PULONG ReturnBufferLength,_Out_ PNTSTATUS ProtocolStatus)
DWORD None virtdisk.DetachVirtualDisk(_In_ HANDLE VirtualDiskHandle,_In_ DETACH_VIRTUAL_DISK_FLAG Flags,_In_ ULONG ProviderSpecificFlags)
BOOL None None.TreeView_GetItemRect(HWND hwndTV None,HTREEITEM hitem None,LPRECT prc None,BOOL fItemRect None)
int None None.Add(Object value None)
DWORD WINAPI clusapi.AddCrossClusterGroupToGroupDependency(_In_ HGROUP hDependentGroup,_In_ LPCWSTR lpRemoteClusterName,_In_ LPCWSTR lpRemoteGroupName)
HRESULT None shell32.SHGetSetFolderCustomSettings(_Inout_ LPSHFOLDERCUSTOMSETTINGS pfcs,_In_ PCTSTR pszPath,DWORD dwReadWrite None)
HRESULT None None.get_Cursors([out None None,retval] IInkCursors **Cursors)
HRESULT None wuapi.get_KBArticleIDs([out] IStringCollection **retval)
LONG WINAPI winscard.SCardEndTransaction(_In_ SCARDHANDLE hCard,_In_ DWORD dwDisposition)
uint32 None cimwin32.SetNumForwardPackets([in] uint32 NumForwardPackets)
public String None.Remove(int startIndex None)
HRESULT None oleaut32.VarDateFromUI4(_In_ ULONG ulIn,_Out_ DATE *pdateOut)
DWORD None mprapi.MprAdminConnectionEnum(_In_ RAS_SERVER_HANDLE hRasServer,_In_ DWORD dwLevel,_Out_ LPBYTE *lplpbBuffer,_In_ DWORD dwPrefMaxLen,_Out_ LPDWORD lpdwEntriesRead,_Out_ LPDWORD lpdwTotalEntries,_In_ LPDWORD lpdwResumeHandle)
HIMC None imm32.ImmAssociateContext(_In_ HWND hWnd,_In_ HIMC hIMC)
LONG TSPIAPI None.TSPI_lineGetNumAddressIDs(HDRVLINE hdLine None,LPDWORD lpdwNumAddressIDs None)
HRESULT None mf.MFShutdownObject(IUnknown *pUnk None)
HRESULT None oleaut32.VarR8FromUI2(_In_ USHORT uiIn,_Out_ DOUBLE *pdblOut)
HRESULT None None.GetItem(UINT uiId None,REFIID riid None,void **ppv None)
HRESULT WINAPI userenv.DeleteAppContainerProfile(_In_ PCWSTR pszAppContainerName)
HRESULT None oleaut32.VarI4FromDate(_In_ DATE dateIn,_Out_ LONG *plOut)
public void None.OnUnload(EventArgs e None)
uint32 None cimwin32.CopyEx([in] string FileName,[out] string StopFileName,[in None None,optional] string StartFileName,[in None None,optional] boolean Recursive)
DWORD CALLBACK None.RasCustomDeleteEntryNotify(_In_ LPCTSTR lpszPhonebook,_In_ LPCTSTR lpszEntry,_In_ DWORD dwFlags)
HRESULT None mfplat.MFCreateStreamDescriptor(DWORD dwStreamIdentifier None,DWORD cMediaTypes None,IMFMediaType **apMediaTypes None,IMFStreamDescriptor **ppDescriptor None)
ULONG None wldap32.ldap_modify_ext(_In_ LDAP *ld,_In_ PCHAR dn,_In_ LDAPMod *mods[],_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls,_Out_ ULONG *MessageNumber)
ULONG None wldap32.ldap_modify_extW(_In_ LDAP *ld,_In_ PCHAR dn,_In_ LDAPMod *mods[],_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls,_Out_ ULONG *MessageNumber)
ULONG None wldap32.ldap_modify_extA(_In_ LDAP *ld,_In_ PCHAR dn,_In_ LDAPMod *mods[],_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls,_Out_ ULONG *MessageNumber)
DWORD WINAPI davclnt.DavGetTheLockOwnerOfTheFile(_In_ LPCWSTR FileName,_Out_opt_ PWSTR LockOwnerName,_Inout_ PULONG LockOwnerNameLengthInBytes)
NTSTATUS NTAPI secur32.LsaEnumerateLogonSessions(_Out_ PULONG LogonSessionCount,_Out_ PLUID *LogonSessionList)
RPC_STATUS RPC_ENTRY rpcrt4.RpcStringBindingParse(TCHAR *StringBinding None,TCHAR **ObjectUuid None,TCHAR **ProtSeq None,TCHAR **NetworkAddr None,TCHAR **EndPoint None,TCHAR **NetworkOptions None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcStringBindingParseW(TCHAR *StringBinding None,TCHAR **ObjectUuid None,TCHAR **ProtSeq None,TCHAR **NetworkAddr None,TCHAR **EndPoint None,TCHAR **NetworkOptions None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcStringBindingParseA(TCHAR *StringBinding None,TCHAR **ObjectUuid None,TCHAR **ProtSeq None,TCHAR **NetworkAddr None,TCHAR **EndPoint None,TCHAR **NetworkOptions None)
uint32 None cimwin32.SetDNSServerSearchOrder([in] string DNSServerSearchOrder[])
BOOL None None.WlxRemoveStatusMessage(_In_ PVOID pWlxContext)
NTSTATUS None None.WdfUsbTargetPipeResetSynchronously(_In_ WDFUSBPIPE Pipe,_In_opt_ WDFREQUEST Request,_In_opt_ PWDF_REQUEST_SEND_OPTIONS RequestOptions)
HRESULT None None.GetGeometryLocal([out None None,retval] IXpsOMGeometry **geometry)
BOOL WINAPI winhttp.WinHttpAddRequestHeaders(_In_ HINTERNET hRequest,_In_ LPCWSTR pwszHeaders,_In_ DWORD dwHeadersLength,_In_ DWORD dwModifiers)
HLOCAL None None.Edit_GetHandle(HWND hwndCtl None)
HRESULT None shell32.SHGetRealIDL(_In_ IShellFolder *psf,_In_ PCUITEMID_CHILD pidlSimple,_Out_ PITEMID_CHILD *ppidlReal)
HRESULT None None.get_AvailableIPAddresses(IWMSAvailableIPAddresses** ppIPAddrList None)
DWORD None mprapi.MprAdminInterfaceQueryUpdateResult(_In_ MPR_SERVER_HANDLE hMprServer,_In_ HANDLE hInterface,_In_ DWORD dwProtocolId,_Out_ LPDWORD lpdwUpdateResult)
NETIOAPI_API None iphlpapi.NotifyStableUnicastIpAddressTable(_In_ ADDRESS_FAMILY Family,_Inout_ PMIB_UNICASTIPADDRESS_TABLE *Table,_In_ PSTABLE_UNICAST_IPADDRESS_TABLE_CALLBACK CallerCallback,_In_ PVOID CallerContext,_Inout_ HANDLE *NotificationHandle)
public Object None.GetFormat(Type formatType None)
HRESULT WINAPI cryptxml.CryptXmlClose(_In_ HXML hCryptXml)
protected void None.OnCellValuePushed(DataGridViewCellValueEventArgs e None)
NTSTATUS WINAPI bcrypt.BCryptImportKeyPair(_In_ BCRYPT_ALG_HANDLE hAlgorithm,_Inout_ BCRYPT_KEY_HANDLE hImportKey,_In_ LPCWSTR pszBlobType,_Out_ BCRYPT_KEY_HANDLE *phKey,_In_ PUCHAR pbInput,_In_ ULONG cbInput,_In_ ULONG dwFlags)
public PropertyDescriptor None.Find(String name None,boolean ignoreCase None)
DWORD DHCP_API_FUNCTION dhcpsapi.DhcpCreateSubnetV6(_In_ LPWSTR ServerIpAddress,_In_ DHCP_IPV6_ADDRESS SubnetAddress,_In_ LDHCP_SUBNET_INFO_V6 *SubnetInfo)
VOID WINAPI kernel32.SetEventWhenCallbackReturns(_Inout_ PTP_CALLBACK_INSTANCE pci,_In_ HANDLE evt)
LONG None tapi32.lineSetAgentStateEx(HLINE hLine None,HAGENT hAgent None,DWORD dwAgentState None,DWORD dwNextAgentState None)
DWORD WINAPI nmapi.GetCaptureCommentFromFilename(_In_ LPSTR lpFilename,_In_ LPSTR lpComment,_In_ DWORD BufferSize)
public void None.Shutdown(SocketShutdown how None)
HRESULT None None.get_DefaultVNConfigurationPath([out] BSTR *configurationPath)
HRESULT None oleaut32.VarUI2FromI4(_In_ LONG lIn,_Out_ USHORT *puiOut)
protected void None.NotifyInvalidate(Rectangle invalidatedArea None)
public StringBuilder None.Append(char value None)
protected void None.button1_Click(Object sender None,System.EventArgs e None)
protected void None.OnPreviewStylusUp(StylusEventArgs e None)
HRESULT None None.GetBorderColor([out] COLORREF *pClr)
BOOL WINAPI authz.AuthzFreeAuditEvent(_In_ AUTHZ_AUDIT_EVENT_HANDLE pAuditEventInfo)
VOID None None.WdfDeviceSetFailed(_In_ WDFDEVICE Device,_In_ WDF_DEVICE_FAILED_ACTION FailedAction)
NTSTATUS None None.WdfIoTargetCreate(_In_ WDFDEVICE Device,_In_opt_ PWDF_OBJECT_ATTRIBUTES IoTargetAttributes,_Out_ WDFIOTARGET *IoTarget)
public int None.LastIndexOf(String source None,String value None,int startIndex None,CompareOptions options None)
HRESULT None tapi3.get_CLSID([out] BSTR *pCLSID)
public void None.DisconnectWebParts(WebPartConnection connection None)
BOOL None shell32.DAD_SetDragImage(HIMAGELIST him None,POINT *pptOffset None)
NTSTATUS None None.WdfPdoInitAssignDeviceID(_In_ PWDFDEVICE_INIT DeviceInit,_In_ PCUNICODE_STRING DeviceID)
public int None.IndexOf(Visual visual None)
BOOL None wininet.InternetGetConnectedStateEx(_Out_ LPDWORD lpdwFlags,_Out_ LPTSTR lpszConnectionName,_In_ DWORD dwNameLen,_In_ DWORD dwReserved)
BOOL None wininet.InternetGetConnectedStateExW(_Out_ LPDWORD lpdwFlags,_Out_ LPTSTR lpszConnectionName,_In_ DWORD dwNameLen,_In_ DWORD dwReserved)
BOOL None wininet.InternetGetConnectedStateExA(_Out_ LPDWORD lpdwFlags,_Out_ LPTSTR lpszConnectionName,_In_ DWORD dwNameLen,_In_ DWORD dwReserved)
NTSTATUS WINAPI bcrypt.BCryptUnregisterConfigChangeNotify(_In_ HANDLE hEvent)
HRESULT None mf.MFGetTopoNodeCurrentType(IMFTopologyNode *pNode None,DWORD dwStreamIndex None,BOOL fOutput None,_Out_ IMFMediaType **ppType)
HRESULT None wuapi.get_DownloadContents([out] IUpdateDownloadContentCollection **retval)
HRESULT None None.get_CountersStartTime(DATE* pVal None)
uint32 None None.OnlineDevice([in] boolean Online)
HRESULT None oleaut32.VarUI2FromUI1(_In_ BYTE bIn,_Out_ USHORT *puiOut)
public boolean None.CanConvertTo(ITypeDescriptorContext context None,Type destinationType None)
size_t None None.strlen(const char *str)
private void None.Menu_Copy(Object sender None,System.EventArgs e None)
HRESULT None oleaut32.VarCyFromI8(_In_ LONG64 i64In,_Out_ CY *pcyOut)
HRESULT None None.GetSampleTime([out] LONGLONG *phnsSampleTime)
SECURITY_STATUS None secur32.DeleteSecurityPackage(_In_ LPTSTR pszPackageName)
SECURITY_STATUS None secur32.DeleteSecurityPackageW(_In_ LPTSTR pszPackageName)
SECURITY_STATUS None secur32.DeleteSecurityPackageA(_In_ LPTSTR pszPackageName)
NET_API_STATUS None netapi32.NetGroupGetUsers(_In_ LPCWSTR servername,_In_ LPCWSTR groupname,_In_ DWORD level,_Out_ LPBYTE *bufptr,_In_ DWORD prefmaxlen,_Out_ LPDWORD entriesread,_Out_ LPDWORD totalentries,_Inout_ PDWORD_PTR ResumeHandle)
void None None.asuint(in double value,out uint lowbits,out uint highbits)
HRESULT None propsys.VariantToInt64Array(_In_ REFVARIANT var,_Out_ LONGLONG *prgn,_In_ ULONG crgn,_Out_ ULONG *pcElem)
static void None.DisplayAuthenticationProperties(NegotiateStream* stream None)
uint32 None dnsserverpsprovider.AddByTLSA([in] string ZoneName,[in] string ComputerName,[in] boolean PassThru,[in] string ZoneScope,[in] boolean TLSA,[in] string CertificateUsage,[in] string MatchingType,[in] string Selector,[in] string CertificateAssociationData,[in] string Name,[in] boolean AgeRecord,[in] boolean AllowUpdateAny,[in] datetime TimeToLive,[out] DnsServerResourceRecord cmdletOutput)
HRESULT None None.GetConnectionBandwidth([out] DWORD *pdwConnectionBandwidth)
BOOL None shell32.SHGetDiskFreeSpaceEx(_In_ LPCTSTR pszDirectoryName,_Out_opt_ ULARGE_INTEGER *pulFreeBytesAvailableToCaller,_Out_opt_ ULARGE_INTEGER *pulTotalNumberOfBytes,_Out_opt_ ULARGE_INTEGER *pulTotalNumberOfFreeBytes)
BOOL None shell32.SHGetDiskFreeSpaceExW(_In_ LPCTSTR pszDirectoryName,_Out_opt_ ULARGE_INTEGER *pulFreeBytesAvailableToCaller,_Out_opt_ ULARGE_INTEGER *pulTotalNumberOfBytes,_Out_opt_ ULARGE_INTEGER *pulTotalNumberOfFreeBytes)
BOOL None shell32.SHGetDiskFreeSpaceExA(_In_ LPCTSTR pszDirectoryName,_Out_opt_ ULARGE_INTEGER *pulFreeBytesAvailableToCaller,_Out_opt_ ULARGE_INTEGER *pulTotalNumberOfBytes,_Out_opt_ ULARGE_INTEGER *pulTotalNumberOfFreeBytes)
ULONG None wldap32.ldap_modrdn_s(_In_ LDAP *ExternalHandle,_In_ PCHAR DistinguishedName,_Out_ PCHAR NewDistinguishedName)
ULONG None wldap32.ldap_modrdn_sW(_In_ LDAP *ExternalHandle,_In_ PCHAR DistinguishedName,_Out_ PCHAR NewDistinguishedName)
ULONG None wldap32.ldap_modrdn_sA(_In_ LDAP *ExternalHandle,_In_ PCHAR DistinguishedName,_Out_ PCHAR NewDistinguishedName)
HRESULT None None.CreateAccessor(DBACCESSORFLAGS dwAccessorFlags None,DBCOUNTITEM cBindings None,const DBBINDING rgBindings[],DBLENGTH cbRowSize None,HACCESSOR *phAccessor None,DBBINDSTATUS rgStatus[] None)
NTSTATUS NTAPI None.SpUpdateCredentialsFn(_In_ LSA_SEC_HANDLE ContextHandle,_In_ GUID *CredType,_In_ ULONG FlatCredUIContextLength,PUCHAR FlatCredUIContext None)
HRESULT None scardssp.get_P2([out] BYTE *pbyP2)
HRESULT None None.get_PerPlayerRapidStartBandwidth(long* pVal None)
HRESULT None scardssp.get_P1([out] BYTE *pbyP1)
SEC_ENTRY None None.GetCredentialKey(_In_ PVOID ProviderHandle,_In_opt_ PLUID LogonId,_In_opt_ PVOID AuthBuffer,_In_ ULONG AuthBufferSize,_In_ ULONG Reserved,_Out_ PUNICODE_STRING CredentialKey)
public void None.InitializeCell(DataControlFieldCell cell None,DataControlCellType cellType None,DataControlRowState rowState None,int rowIndex None)
HRESULT None None.get_SelfIntersections([out None None,retval] VARIANT *Intersections)
HRESULT WINAPI webservices.WsGetHeaderAttributes(_In_ WS_MESSAGE* message,_In_ WS_XML_READER* reader,_Out_ ULONG* headerAttributes,_In_opt_ WS_ERROR* error)
uint32 None dnsserverpsprovider.AddByServer([in] string ComputerName,[in] boolean PassThru,[in] string Action,[in] string ClientSubnet,[in] string Condition,[in] string InternetProtocol,[in] boolean Disable,[in] string Name,[in] uint32 ProcessingOrder,[in] string ServerInterfaceIP,[in] string TimeOfDay,[in] string TransportProtocol,[out] DnsServerPolicy cmdletOutput)
NTSTATUS None None.WdfDeviceInitAssignName(_In_ PWDFDEVICE_INIT DeviceInit,_In_opt_ PCUNICODE_STRING DeviceName)
HRESULT None wuapi.get_SupersededUpdateIDs([out] IStringCollection **retval)
BOOL None imm32.ImmConfigureIME(_In_ HKL hKL,_In_ HWND hWnd,_In_ DWORD dwMode,_In_ LPVOID lpData)
BOOL None imm32.ImmConfigureIMEW(_In_ HKL hKL,_In_ HWND hWnd,_In_ DWORD dwMode,_In_ LPVOID lpData)
BOOL None imm32.ImmConfigureIMEA(_In_ HKL hKL,_In_ HWND hWnd,_In_ DWORD dwMode,_In_ LPVOID lpData)
public void None.OnPreRender(EventArgs e None)
DWORD None mprapi.MprAdminInterfaceConnect(_In_ MPR_SERVER_HANDLE hMprServer,_In_ HANDLE hInterface,_In_ HANDLE hEvent,_In_ BOOL fSynchronous)
UInt32 None None.Offline([out] String ExtendedStatus)
public ICustomTypeDescriptor None.GetTypeDescriptor(Object instance None)
HRESULT None mf.MFCreateASFStreamSelector(IMFASFProfile *pIASFProfile None,IMFASFStreamSelector **ppSelector None)
DWORD WINAPI nmapi.GetCaptureMacType(_In_ HCAPTURE hCapture)
NET_API_STATUS None netapi32.NetApiBufferSize(_In_ LPVOID Buffer,_Out_ LPDWORD ByteCount)
HRESULT None None.LastDownloadError(FEEDS_DOWNLOAD_ERROR *pfde None)
void None None.ProcessQuadTessFactorsMax(in float4 RawEdgeFactors,in float InsideScale,out float4 RoundedEdgeTessFactors,out float2 RoundedInsideTessFactors,out float2 UnroundedInsideTessFactors)
VOID WINAPI ntdsapi.DsQuerySitesFree(_In_ PDS_SITE_COST_INFO rgSiteInfo)
HRESULT None oleaut32.VarI2FromUI2(_In_ USHORT uiIn,_Out_ SHORT *psOut)
uint32 None cimwin32.EnableDNS([in None None,optional] string DNSHostName,[in None None,optional] string DNSDomain,[in None None,optional] string DNSServerSearchOrder[],[in None None,optional] string DNSDomainSuffixSearchOrder[])
LONG None tapi32.lineGetAgentSessionInfo(HLINE hLine None,HAGENTSESSION hAgentSession None,LPLINEAGENTSESSIONINFO lpAgentSessionInfo None)
NTSTATUS None None.WdfRequestRetrieveUnsafeUserOutputBuffer(_In_ WDFREQUEST Request,_In_ size_t MinimumRequiredLength,_Out_ PVOID *OutputBuffer,_Out_opt_ size_t *Length)
public None None.ListMakerException(string message None)
HRESULT None None.get_PacketDescription([out None None,retval] VARIANT *PacketDescription)
HIMC None imm32.ImmGetContext(_In_ HWND hWnd)
HRESULT None propsys.PropVariantGetUInt64Elem(_In_ REFPROPVARIANT propvar,_In_ ULONG iElem,_Out_ ULONGLONG *pnVal)
void None cluswmi.AddPossibleOwner([in] string NodeName)
protected void None.OnDragEnter(DragEventArgs e None)
HRESULT None propsys.VariantGetDoubleElem(_In_ REFVARIANT var,_In_ ULONG iElem,_Out_ DOUBLE *pnVal)
HRESULT None None.ULongLongToUShort(_In_ ULONGLONG ullOperand,_Out_ USHORT *pusResult)
HMMIO None winmm.mmioOpen(LPTSTR szFilename None,LPMMIOINFO lpmmioinfo None,DWORD dwOpenFlags None)
HMMIO None winmm.mmioOpenW(LPTSTR szFilename None,LPMMIOINFO lpmmioinfo None,DWORD dwOpenFlags None)
HMMIO None winmm.mmioOpenA(LPTSTR szFilename None,LPMMIOINFO lpmmioinfo None,DWORD dwOpenFlags None)
LONG WINAPI tapi32.lineReleaseUserUserInfo(HCALL hCall None)
public ICustomTypeDescriptor None.GetTypeDescriptor(Object instance None)
HRESULT None None.get_EnableReverseProxyMode(VARIANT_BOOL* pVal None)
public void None.Write(byte[] array None,int offset None,int count None)
LONG TSPIAPI None.TSPI_lineSetAppSpecific(HDRVCALL hdCall None,DWORD dwAppSpecific None)
LPPROPERTYINST WINAPI nmapi.FindPropertyInstanceRestart(_In_ HFRAME hFrame,_In_ HPROPERTY hProperty,_In_ LPPROPERTYINST *lpRestartKey,_In_ BOOL DirForward)
HRESULT None oleaut32.VarUI4FromR4(_In_ FLOAT fltIn,_Out_ ULONG *pulOut)
private void None.MyPopupEventHandler(Object sender None,EventArgs e None)
DWORD None rasapi32.RasGetQuarantineConnectionId(_In_ HRASCONN hRasConn,_Out_ ConnectionId *lpConnectionId)
public Message None.Receive(MessageQueueTransactionType transactionType None)
public void None.SetRegistryValueUInt32(RegistryKey keyRoot None,String keyPath None,String valueName None,UInt32 data None)
BOOL None kernel32.PowerSetRequest(_In_ HANDLE PowerRequest,_In_ POWER_REQUEST_TYPE RequestType)
void None None.Button1_Click(Object sender None,EventArgs e None)
HRESULT None propsys.PropVariantToInt64Vector(_In_ REFPROPVARIANT propvar,_Out_ LONGLONG *prgn,_In_ ULONG crgn,_Out_ ULONG *pcElem)
uint32 None dnsserverpsprovider.AddByNs([in] string ZoneName,[in] string NameServer,[in] datetime TimeToLive,[in] boolean AllowUpdateAny,[in] string Name,[in] string ComputerName,[in] boolean AgeRecord,[in] boolean NS,[in] boolean PassThru,[in] string ZoneScope,[out] DnsServerResourceRecord cmdletOutput)
NETIOAPI_API None iphlpapi.GetIpForwardEntry2(_Inout_ PMIB_IPFORWARD_ROW2 Row)
numeric None None.mad(in numeric mvalue,in numeric avalue,in numeric bvalue)
LONG WINAPI winscard.SCardForgetReader(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReaderName)
LONG WINAPI winscard.SCardForgetReaderW(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReaderName)
LONG WINAPI winscard.SCardForgetReaderA(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReaderName)
DWORD None shell32.SHFormatDrive(_In_ HWND hwnd,UINT drive None,UINT fmtID None,UINT options None)
MI_INLINE MI_Result mi.MI_OperationOptions_SetPromptUserRegularMode(_Inout_ MI_OperationOptions *options,_In_ MI_CallbackMode mode,_In_ MI_Boolean ackValue)
HRESULT None tapi3.get_Address([out] ITAddress **ppAddress)
HRESULT WINAPI None.EngineAdapterRefreshCache(_Inout_ PWINBIO_PIPELINE Pipeline)
HRESULT None oleaut32.VarUI8FromUI4(_In_ ULONG ulIn,_Out_ ULONG64 *pi64Out)
DWORD None mprapi.MprAdminConnectionClearStats(_In_ RAS_SERVER_HANDLE hRasServer,_In_ HANDLE hRasConnection)
HRESULT None oleaut32.VarDateFromCy(_In_ CY cyIn,_Out_ DATE *pdateOut)
protected void None.OnFontChanged(EventArgs e None)
HRESULT None None.Move(BSTR newParentPath None)
BOOL WINAPI None.RasCustomDialDlg(HINSTANCE hInstDll None,DWORD dwFlags None,LPWSTR lpszPhonebook None,LPWSTR lpszEntry None,LPWSTR lpszPhoneNumber None,LPRASDIALDLG lpInfo None,PVOID pvInfo None)
BOOL WINAPI None.RasCustomDialDlgW(HINSTANCE hInstDll None,DWORD dwFlags None,LPWSTR lpszPhonebook None,LPWSTR lpszEntry None,LPWSTR lpszPhoneNumber None,LPRASDIALDLG lpInfo None,PVOID pvInfo None)
BOOL WINAPI None.RasCustomDialDlgA(HINSTANCE hInstDll None,DWORD dwFlags None,LPWSTR lpszPhonebook None,LPWSTR lpszEntry None,LPWSTR lpszPhoneNumber None,LPRASDIALDLG lpInfo None,PVOID pvInfo None)
public Message None.EndReceive(IAsyncResult asyncResult None)
RPC_STATUS RPC_ENTRY rpcdiag.RpcDiagnoseError(_In_ RPC_BINDING_HANDLE BindingHandle,_In_ RPC_IF_HANDLE IfSpec,_In_ RPC_STATUS RpcStatus,_In_opt_ RPC_ERROR_ENUM_HANDLE *EnumHandle,_In_ ULONG Options,_In_opt_ HWND ParentWindow)
LONG WINAPI winscard.SCardForgetCardType(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCardName)
LONG WINAPI winscard.SCardForgetCardTypeW(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCardName)
LONG WINAPI winscard.SCardForgetCardTypeA(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCardName)
DWORD None ntdsapi.DsBindWithSpnEx(_In_opt_ LPCTSTR DomainControllerName,_In_opt_ LPCTSTR DnsDomainName,_In_opt_ RPC_AUTH_IDENTITY_HANDLE AuthIdentity,_In_opt_ LPCTSTR ServicePrincipalName,_In_opt_ DWORD BindFlags,_Out_ HANDLE *phDS)
DWORD None ntdsapi.DsBindWithSpnExW(_In_opt_ LPCTSTR DomainControllerName,_In_opt_ LPCTSTR DnsDomainName,_In_opt_ RPC_AUTH_IDENTITY_HANDLE AuthIdentity,_In_opt_ LPCTSTR ServicePrincipalName,_In_opt_ DWORD BindFlags,_Out_ HANDLE *phDS)
DWORD None ntdsapi.DsBindWithSpnExA(_In_opt_ LPCTSTR DomainControllerName,_In_opt_ LPCTSTR DnsDomainName,_In_opt_ RPC_AUTH_IDENTITY_HANDLE AuthIdentity,_In_opt_ LPCTSTR ServicePrincipalName,_In_opt_ DWORD BindFlags,_Out_ HANDLE *phDS)
DWORD WINAPI clusapi.AddCrossClusterGroupSetToGroupSetDependency(_In_ HGROUPSET hDependentGroupSet,_In_ LPCWSTR lpRemoteClusterName,_In_ LPCWSTR lpRemoteGroupSetName)
NTSTATUS NTAPI advapi32.LsaQueryForestTrustInformation(_In_ LSA_HANDLE PolicyHandle,_In_ PLSA_UNICODE_STRING TrustedDomainName,_Out_ PLSA_FOREST_TRUST_INFORMATION *ForestTrustInfo)
uint32 None cimwin32.SetDatabasePath([in] string DatabasePath)
NTSTATUS None None.WdfDeviceWdmDispatchIrp(_In_ WDFDEVICE Device,_In_ PIRP Irp,_In_ WDFCONTEXT DispatchContext)
VOID FORCEINLINE None.TpSetCallbackFinalizationCallback(_Inout_ PTP_CALLBACK_ENVIRON CallbackEnviron,_In_ PTP_SIMPLE_CALLBACK FinalizationCallback)
DWORD WINAPI crypt32.CertNameToStr(_In_ DWORD dwCertEncodingType,_In_ PCERT_NAME_BLOB pName,_In_ DWORD dwStrType,_Out_ LPTSTR psz,_In_ DWORD csz)
DWORD WINAPI crypt32.CertNameToStrW(_In_ DWORD dwCertEncodingType,_In_ PCERT_NAME_BLOB pName,_In_ DWORD dwStrType,_Out_ LPTSTR psz,_In_ DWORD csz)
DWORD WINAPI crypt32.CertNameToStrA(_In_ DWORD dwCertEncodingType,_In_ PCERT_NAME_BLOB pName,_In_ DWORD dwStrType,_Out_ LPTSTR psz,_In_ DWORD csz)
DWORD WINAPI None.CardDestroyDHAgreement(__in PCARD_DATA pCardData,__in BYTE bSecretAgreementIndex,__in DWORD dwFlags)
LONG None tapi32.lineGetQueueList(HLINE hLine None,LPGUID lpGroupID None,LPLINEQUEUELIST lpQueueList None)
LONG None tapi32.lineGetQueueListW(HLINE hLine None,LPGUID lpGroupID None,LPLINEQUEUELIST lpQueueList None)
LONG None tapi32.lineGetQueueListA(HLINE hLine None,LPGUID lpGroupID None,LPLINEQUEUELIST lpQueueList None)
BOOL None None.OpenPrinter(_In_ LPTSTR pPrinterName,_Out_ LPHANDLE phPrinter,_In_ LPPRINTER_DEFAULTS pDefault)
BOOL None None.OpenPrinterW(_In_ LPTSTR pPrinterName,_Out_ LPHANDLE phPrinter,_In_ LPPRINTER_DEFAULTS pDefault)
BOOL None None.OpenPrinterA(_In_ LPTSTR pPrinterName,_Out_ LPHANDLE phPrinter,_In_ LPPRINTER_DEFAULTS pDefault)
HRESULT None oleaut32.VarCyFromBool(_In_ VARIANT_BOOL boolIn,_Out_ CY *pcyOut)
HRESULT None oleaut32.VarDecAdd(_In_ LPDECIMAL pdecLeft,_In_ LPDECIMAL pdecRight,_Out_ LPDECIMAL pdecResult)
DWORD None rasapi32.RasEnumEntries(_In_ LPCTSTR reserved,_In_ LPCTSTR lpszPhonebook,_Inout_ LPRASENTRYNAME lprasentryname,_Inout_ LPDWORD lpcb,_Out_ LPDWORD lpcEntries)
DWORD None rasapi32.RasEnumEntriesW(_In_ LPCTSTR reserved,_In_ LPCTSTR lpszPhonebook,_Inout_ LPRASENTRYNAME lprasentryname,_Inout_ LPDWORD lpcb,_Out_ LPDWORD lpcEntries)
DWORD None rasapi32.RasEnumEntriesA(_In_ LPCTSTR reserved,_In_ LPCTSTR lpszPhonebook,_Inout_ LPRASENTRYNAME lprasentryname,_Inout_ LPDWORD lpcb,_Out_ LPDWORD lpcEntries)
HRESULT None None.GetTravelLog([out] ITravelLog **pptl)
assembly None None.name(optional None None)
BOOL WINAPI kernel32.GetProcessDefaultCpuSets(_In_ HANDLE Process,_Out_opt_ PULONG CpuSetIds,_In_ ULONG CpuSetIdCount,_Out_ PULONG RequiredIdCount)
ULONG None wldap32.ldap_add(_In_ LDAP *ld,_In_ PCHAR dn,_In_ LDAPMod *attrs[])
ULONG None wldap32.ldap_addW(_In_ LDAP *ld,_In_ PCHAR dn,_In_ LDAPMod *attrs[])
ULONG None wldap32.ldap_addA(_In_ LDAP *ld,_In_ PCHAR dn,_In_ LDAPMod *attrs[])
HRESULT None None.Ttl(UINT *puiTtl None)
BOOL None user32.SetWindowContextHelpId(HWND hwnd None,DWORD dwContextHelpId None)
HRESULT None None.InitVariantFromDispatch(_In_ IDispatch *pdisp,_Out_ VARIANT *pvar)
HINTERNET WINAPI winhttp.WinHttpWebSocketCompleteUpgrade(_In_ HINTERNET hRequest,_In_opt_ DWORD_PTR pContext)
NTSTATUS None None.SpInitialize(_In_ ULONG_PTR PackageId,_In_ PSECPKG_PARAMETERS Parameters,_In_ PLSA_SECPKG_FUNCTION_TABLE FunctionTable)
USBD_CONFIGURATION_HANDLE None None.WdfUsbTargetDeviceWdmGetConfigurationHandle(_In_ WDFUSBDEVICE UsbDevice)
BOOL None imm32.ImmIsIME(_In_ HKL hKL)
NTSTATUS None None.SpFreeCredentialsHandle(_In_ LSA_SEC_HANDLE CredentialHandle)
HKL None imm32.ImmInstallIME(_In_ LPCTSTR lpszIMEFileName,_In_ LPCTSTR lpszLayoutText)
HKL None imm32.ImmInstallIMEW(_In_ LPCTSTR lpszIMEFileName,_In_ LPCTSTR lpszLayoutText)
HKL None imm32.ImmInstallIMEA(_In_ LPCTSTR lpszIMEFileName,_In_ LPCTSTR lpszLayoutText)
CLUSTER_NODE_STATE WINAPI clusapi.GetClusterNodeState(_In_ HNODE hNode)
ULONG None twinapi.core.RegisterAppStateChangeNotification(_In_ PAPPSTATE_CHANGE_ROUTINE Routine,_In_opt_ PVOID Context,_Out_ PAPPSTATE_REGISTRATION *Registration)
protected void None.OnInitialized(EventArgs e None)
public void None.LoadAdapterState(Object state None)
uint32 None ncserverpsprovider.Configure([in] NetworkControllerClusterConfiguration ClusterConfiguration,[in] NetworkControllerApplicationConfiguration ApplicationConfiguration,[in] uint32 InitialReplicaSize)
HRESULT None tapi3.get_CurrentForwardInfo([out] ITForwardInformation **ppForwardInfo)
HRESULT None None.DXVAHD_SetFrameFormat(IDXVAHD_VideoProcessor *pVP None,UINT stream None,DXVAHD_FRAME_FORMAT format None)
HRESULT None mfreadwrite.MFCreateSinkWriterFromURL(_In_ LPCWSTR pwszOutputURL,_In_ IMFByteStream *pByteStream,_In_ IMFAttributes *pAttributes,_Out_ IMFSinkWriter **ppSinkWriter)
COLORREF None None.ListView_SetInsertMarkColor(HWND hwnd None,COLORREF color None)
HRESULT None oleaut32.VarI1FromUI8(_In_ ULONG64 i64In,_Out_ CHAR *pcOut)
NTSTATUS None None.WdfDeviceWdmDispatchIrp(_In_ WDFDEVICE Device,_In_ PIRP Irp,_In_ WDFCONTEXT DispatchContext)
HRESULT None None.GetVideoProcessorCaps([out] D3D11_VIDEO_PROCESSOR_CAPS *pCaps)
public String None.ToString(String format None)
HRESULT None propsys.VariantToString(_In_ REFVARIANT varIn,_Out_ PWSTR pszBuf,_In_ UINT cchBuf)
HRESULT WINAPI webservices.WsReadCharsUtf8(_In_ WS_XML_READER* reader,BYTE* bytes None,_In_ ULONG maxByteCount,_Out_ ULONG* actualByteCount,_In_opt_ WS_ERROR* error)
DWORD None iphlpapi.SetIpTTL(_In_ UINT nTTL)
SECURITY_STATUS SEC_Entry secur32.VerifySignature(_In_ PCtxtHandle phContext,_In_ PSecBufferDesc pMessage,_In_ ULONG MessageSeqNo,_Out_ PULONG pfQOP)
BOOL None ntdsapi.DsIsMangledDn(_In_ LPCTSTR pszDn,_In_ DS_MANGLE_FOR eDsMangleFor)
BOOL None ntdsapi.DsIsMangledDnW(_In_ LPCTSTR pszDn,_In_ DS_MANGLE_FOR eDsMangleFor)
BOOL None ntdsapi.DsIsMangledDnA(_In_ LPCTSTR pszDn,_In_ DS_MANGLE_FOR eDsMangleFor)
HRESULT None propsys.InitVariantFromGUIDAsString(_In_ REFGUID guid,_Out_ VARIANT *pvar)
DWORD WINAPI advapi32.OpenEncryptedFileRaw(_In_ LPCTSTR lpFileName,_In_ ULONG ulFlags,_Out_ PVOID *pvContext)
DWORD WINAPI advapi32.OpenEncryptedFileRawW(_In_ LPCTSTR lpFileName,_In_ ULONG ulFlags,_Out_ PVOID *pvContext)
DWORD WINAPI advapi32.OpenEncryptedFileRawA(_In_ LPCTSTR lpFileName,_In_ ULONG ulFlags,_Out_ PVOID *pvContext)
HRESULT None None.DWordToWord(_In_ DWORD dwOperand,_Out_ WORD *pwResult)
DWORD None mprapi.MprAdminInterfaceGetCredentials(_In_ LPWSTR lpwsServer,_In_ LPWSTR lpwsInterfaceName,_Out_ LPWSTR lpwsUserName,_Out_ LPWSTR lpwsPassword,_Out_ LPWSTR lpwsDomainName)
HRESULT None shell32.SHAssocEnumHandlers(_In_ PCWSTR pszExtra,_In_ ASSOC_FILTER afFilter,_Out_ IEnumAssocHandlers **ppEnumHandler)
HRESULT None None.get_RootDirectories(IWMSRootDirectories** ppRootDirectories None)
BOOL WINAPI cryptui.CryptUIWizDigitalSign(_In_ DWORD dwFlags,_In_opt_ HWND hwndParent,_In_opt_ LPCWSTR pwszWizardTitle,_In_ PCCRYPTUI_WIZ_DIGITAL_SIGN_INFO pDigitalSignInfo,_Out_opt_ PCCRYPTUI_WIZ_DIGITAL_SIGN_CONTEXT *ppSignContext)
HRESULT None windowscodecs.IWICBitmapCodecInfo_GetDeviceManufacturer_Proxy(_In_ IWICBitmapCodecInfo *THIS_PTR,_In_ UINT cchDeviceManufacturer,_Inout_ WCHAR *wzDeviceManufacturer,_Inout_ UINT *pcchActual)
WDFUSBINTERFACE None None.WdfUsbTargetDeviceGetInterface(_In_ WDFUSBDEVICE UsbDevice,_In_ UCHAR InterfaceIndex)
HRESULT None oleaut32.VarUI2FromUI8(_In_ ULONG64 i64In,_Out_ USHORT *puiOut)
MI_INLINE MI_Result None.MI_OperationOptions_Delete(_Inout_ MI_OperationOptions *options)
private void None.On_Click(Object source None,System.EventArgs e None)
ULONG None wldap32.ldap_check_filter(_In_ LDAP *ld,_In_ PWCHAR SearchFilter)
ULONG None wldap32.ldap_check_filterW(_In_ LDAP *ld,_In_ PWCHAR SearchFilter)
ULONG None wldap32.ldap_check_filterA(_In_ LDAP *ld,_In_ PWCHAR SearchFilter)
HRESULT None dwrite.CreateFontFaceWithSimulations(DWRITE_FONT_SIMULATIONS fontFaceSimulationFlags None,[out] IDWriteFontFace3 **fontFace)
protected void None.CopyPersonalizationState(WebPart webPartA None,WebPart webPartB None)
protected void None.OnLoad(EventArgs e None)
HRESULT None mf.MFCreateNetSchemePlugin(_In_ REFIID riid,_Out_ LPVOID *ppvHandler)
HRESULT None oleaut32.VarUI4FromDisp(_In_ IDispatch *pdispIn,_In_ LCID lcid,_Out_ ULONG *pulOut)
HRESULT None None.GetId([out] LPWSTR *ppstrId)
BOOLEAN WINAPI powrprof.DevicePowerEnumDevices(_In_ ULONG QueryIndex,_In_ ULONG QueryInterpretationFlags,_In_ ULONG QueryFlags,_Out_opt_ PBYTE pReturnBuffer,_Inout_ PULONG pBufferSize)
HRESULT None propsys.PropVariantToStringAlloc(_In_ REFPROPVARIANT propvar,_Out_ PWSTR *ppszOut)
DWORD None iphlpapi.NhpAllocateAndGetInterfaceInfoFromStack(IP_INTERFACE_NAME_INFO ppTable None,PDWORD pdwCount None,BOOL bOrder None,HANDLE hHeap None,DWORD dwFlags None)
ULONG None wldap32.ldap_rename_ext_s(_In_ LDAP *ld,_In_ PWCHAR dn,_In_ PWCHAR NewRDN,_In_ PWCHAR NewParent,_In_ INT DeleteOldRdn,_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls)
ULONG None wldap32.ldap_rename_ext_sW(_In_ LDAP *ld,_In_ PWCHAR dn,_In_ PWCHAR NewRDN,_In_ PWCHAR NewParent,_In_ INT DeleteOldRdn,_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls)
ULONG None wldap32.ldap_rename_ext_sA(_In_ LDAP *ld,_In_ PWCHAR dn,_In_ PWCHAR NewRDN,_In_ PWCHAR NewParent,_In_ INT DeleteOldRdn,_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls)
HRESULT None None.IntPtrToUIntPtr(_In_ INT_PTR iOperand,_Out_ UINT_PTR *puResult)
uint32 None cimwin32.EnableIPFilterSec([in] boolean IPFilterSecurityEnabled)
BOOL WINAPI user32.RemoveClipboardFormatListener(_In_ HWND hwnd)
VOID None None.WlxDisplayLockedNotice(_In_ PVOID pWlxContext)
public None None.Rectangle(Point offset None,Size extent None)
protected void None.OnPreviewMouseDoubleClick(MouseButtonEventArgs e None)
DWORD None iphlpapi.GetTcpStatistics(_Out_ PMIB_TCPSTATS pStats)
HRESULT WINAPI webservices.WsWriteEndCData(_In_ WS_XML_WRITER* writer,_In_opt_ WS_ERROR* error)
uint32 None dhcpserverpsprovider.Add([in] string ComputerName,[in] string ScopeId,[in] string IPAddress,[in] string ClientId,[in] string Name,[in] string Description,[in] string Type,[in] boolean PassThru,[out] DhcpServerv4Reservation cmdletOutput)
HRESULT WINAPI wintrust.WTHelperCertCheckValidSignature(CRYPT_PROVIDER_DATA *pProvData None)
void None None.Button1_Click(Object sender None,EventArgs e None)
BOOLAPI None wininet.CommitUrlCacheEntryA(_In_ LPCSTR lpszUrlName,_In_ LPCSTR lpszLocalFileName,_In_ FILETIME ExpireTime,_In_ FILETIME LastModifiedTime,_In_ DWORD CacheEntryType,_In_ LPBYTE lpHeaderInfo,_In_ DWORD cchHeaderInfo,_Reserved_ LPCSTR lpszFileExtension,_In_ LPCSTR lpszOriginalUrl)
protected void None.OnRenderSizeChanged(SizeChangedInfo info None)
HRESULT None certocm.get_Count([out] LONG *pVal)
BOOL None advapi32.CredEnumerate(_In_ LPCTSTR Filter,_In_ DWORD Flags,_Out_ DWORD *Count,_Out_ PCREDENTIAL **Credentials)
BOOL None advapi32.CredEnumerateW(_In_ LPCTSTR Filter,_In_ DWORD Flags,_Out_ DWORD *Count,_Out_ PCREDENTIAL **Credentials)
BOOL None advapi32.CredEnumerateA(_In_ LPCTSTR Filter,_In_ DWORD Flags,_Out_ DWORD *Count,_Out_ PCREDENTIAL **Credentials)
HRESULT None oleaut32.VarR8FromI1(_In_ CHAR cIn,DOUBLE *pdblOut None)
PHYSICAL_ADDRESS None None.WdfCommonBufferGetAlignedLogicalAddress(_In_ WDFCOMMONBUFFER CommonBuffer)
HRESULT None None.IsValid([out] BOOL *pfValid)
HRESULT None None.GetItem(LONG itemId None,IDispatch **disp None)
fVector None None.dst(in fVector src0,in fVector src1)
HRESULT None None.ZoomByUnit(ZoomUnit zoomUnit None)
public None None.SoapReflectionImporter(SoapAttributeOverrides attributeOverrides None)
DWORD None ntdsapi.DsMakeSpn(_In_ LPCTSTR ServiceClass,_In_ LPCTSTR ServiceName,_In_opt_ LPCTSTR InstanceName,_In_ USHORT InstancePort,_In_opt_ LPCTSTR Referrer,_Inout_ DWORD *pcSpnLength,_Out_ LPTSTR pszSpn)
DWORD None ntdsapi.DsMakeSpnW(_In_ LPCTSTR ServiceClass,_In_ LPCTSTR ServiceName,_In_opt_ LPCTSTR InstanceName,_In_ USHORT InstancePort,_In_opt_ LPCTSTR Referrer,_Inout_ DWORD *pcSpnLength,_Out_ LPTSTR pszSpn)
DWORD None ntdsapi.DsMakeSpnA(_In_ LPCTSTR ServiceClass,_In_ LPCTSTR ServiceName,_In_opt_ LPCTSTR InstanceName,_In_ USHORT InstancePort,_In_opt_ LPCTSTR Referrer,_Inout_ DWORD *pcSpnLength,_Out_ LPTSTR pszSpn)
HRESULT None ole32.Clone([out] IStream **ppstm)
UINT None imm32.ImmGetRegisterWordStyle(_In_ HKL hKL,_In_ UINT nItem,_Out_ LPSTYLEBUF lpStyleBuf)
UINT None imm32.ImmGetRegisterWordStyleW(_In_ HKL hKL,_In_ UINT nItem,_Out_ LPSTYLEBUF lpStyleBuf)
UINT None imm32.ImmGetRegisterWordStyleA(_In_ HKL hKL,_In_ UINT nItem,_Out_ LPSTYLEBUF lpStyleBuf)
public void None.Write(String message None)
HRESULT None mmcndmgr.QueryConsoleVerb([out] LPCONSOLEVERB *ppConsoleVerb)
DWORD_PTR WINAPI kernel32.SetThreadAffinityMask(_In_ HANDLE hThread,_In_ DWORD_PTR dwThreadAffinityMask)
VOID WINAPI kernel32.CloseThreadpoolWork(_Inout_ PTP_WORK pwk)
HRESULT None None.InitVariantFromDouble(_In_ DOUBLE dblVal,_Out_ VARIANT *pvar)
protected void None.OnPreviewStylusButtonDown(StylusButtonEventArgs e None)
BOOL None wininet.HttpEndRequest(_In_ HINTERNET hRequest,_Out_opt_ LPINTERNET_BUFFERS lpBuffersOut,_In_ DWORD dwFlags,_In_opt_ DWORD_PTR dwContext)
BOOL None wininet.HttpEndRequestW(_In_ HINTERNET hRequest,_Out_opt_ LPINTERNET_BUFFERS lpBuffersOut,_In_ DWORD dwFlags,_In_opt_ DWORD_PTR dwContext)
BOOL None wininet.HttpEndRequestA(_In_ HINTERNET hRequest,_Out_opt_ LPINTERNET_BUFFERS lpBuffersOut,_In_ DWORD dwFlags,_In_opt_ DWORD_PTR dwContext)
HRESULT None fxscomex.OnOutgoingArchiveConfigChange(IFaxServer2 *pFaxServer2 None)
HRESULT None msctf.GetForeground([out] CLSID *pclsid)
protected void None.DisconnectWebPart(WebPart webPart None)
HRESULT None fxscomex.put_ArchiveFolder([in None None,retval] BSTR bstrArchiveFolder)
VOID WINAPI crypt32.CertFreeCertificateChainList(_In_ PCCERT_CHAIN_CONTEXT *prgpSelection)
LONG None imm32.ImmGetCompositionString(_In_ HIMC hIMC,_In_ DWORD dwIndex,_Out_opt_ LPVOID lpBuf,_In_ DWORD dwBufLen)
LONG None imm32.ImmGetCompositionStringW(_In_ HIMC hIMC,_In_ DWORD dwIndex,_Out_opt_ LPVOID lpBuf,_In_ DWORD dwBufLen)
LONG None imm32.ImmGetCompositionStringA(_In_ HIMC hIMC,_In_ DWORD dwIndex,_Out_opt_ LPVOID lpBuf,_In_ DWORD dwBufLen)
HRESULT None mf.MFCreatePMPServer(_In_ DWORD dwCreationFlags,_Out_ IMFPMPServer **ppPMPServer)
HRESULT None None.OpenDirectory(IWMSCommandContext* pCommandContext None,IWMSContext* pUserContext None,IWMSContext* pPresentationContext None,LPWSTR pszContainerName None,DWORD dwFlags None,IWMSBufferAllocator* pBufferAllocator None,IWMSDataSourcePluginCallback* pCallback None,QWORD qwContext None)
DWORD None mprapi.MprConfigTransportDelete(_In_ HANDLE hMprConfig,_In_ HANDLE hRouterTransport)
HRESULT None oleaut32.VarDateFromUI8(_In_ ULONG64 ui64In,_Out_ DATE *pdateOut)
NTSTATUS WINAPI bcrypt.BCryptGenRandom(_Inout_ BCRYPT_ALG_HANDLE hAlgorithm,_Inout_ PUCHAR pbBuffer,_In_ ULONG cbBuffer,_In_ ULONG dwFlags)
public XmlProcessingInstruction None.CreateProcessingInstruction(String target None,String data None)
HRESULT None oleaut32.VarDateFromI2(_In_ SHORT sIn,_Out_ DATE *pdateOut)
HRESULT None oleaut32.VarBstrFromBool(_In_ VARIANT_BOOL boolIn,_In_ LCID lcid,_In_ ULONG dwFlags,_Out_ BSTR *pbstrOut)
DWORD None ntdsapi.DsServerRegisterSpn(_In_ DS_SPN_WRITE_OP Operation,_In_ LPCTSTR ServiceClass,_In_opt_ LPCTSTR UserObjectDN)
DWORD None ntdsapi.DsServerRegisterSpnW(_In_ DS_SPN_WRITE_OP Operation,_In_ LPCTSTR ServiceClass,_In_opt_ LPCTSTR UserObjectDN)
DWORD None ntdsapi.DsServerRegisterSpnA(_In_ DS_SPN_WRITE_OP Operation,_In_ LPCTSTR ServiceClass,_In_opt_ LPCTSTR UserObjectDN)
BOOL WINAPI cryptnet.CryptRetrieveObjectByUrl(_In_ LPCTSTR pszUrl,_In_ LPCSTR pszObjectOid,_In_ DWORD dwRetrievalFlags,_In_ DWORD dwTimeout,_Out_ LPVOID *ppvObject,_In_ HCRYPTASYNC hAsyncRetrieve,_In_opt_ PCRYPT_CREDENTIALS pCredentials,_In_opt_ LPVOID pvVerify,_In_ PCRYPT_RETRIEVE_AUX_INFO pAuxInfo)
BOOL WINAPI cryptnet.CryptRetrieveObjectByUrlW(_In_ LPCTSTR pszUrl,_In_ LPCSTR pszObjectOid,_In_ DWORD dwRetrievalFlags,_In_ DWORD dwTimeout,_Out_ LPVOID *ppvObject,_In_ HCRYPTASYNC hAsyncRetrieve,_In_opt_ PCRYPT_CREDENTIALS pCredentials,_In_opt_ LPVOID pvVerify,_In_ PCRYPT_RETRIEVE_AUX_INFO pAuxInfo)
BOOL WINAPI cryptnet.CryptRetrieveObjectByUrlA(_In_ LPCTSTR pszUrl,_In_ LPCSTR pszObjectOid,_In_ DWORD dwRetrievalFlags,_In_ DWORD dwTimeout,_Out_ LPVOID *ppvObject,_In_ HCRYPTASYNC hAsyncRetrieve,_In_opt_ PCRYPT_CREDENTIALS pCredentials,_In_opt_ LPVOID pvVerify,_In_ PCRYPT_RETRIEVE_AUX_INFO pAuxInfo)
HWND WINAPI None.GetNextWindow(_In_ HWND hWnd,_In_ UINT wCmd)
SECURITY_STATUS SEC_Entry secur32.FreeCredentialsHandle(_In_ PCredHandle phCredential)
BOOL None imm32.ImmSetCompositionString(_In_ HIMC hIMC,_In_ DWORD dwIndex,_In_opt_ LPVOID lpComp,_In_ DWORD dwCompLen,_In_opt_ LPVOID lpRead,_In_ DWORD dwReadLen)
BOOL None imm32.ImmSetCompositionStringW(_In_ HIMC hIMC,_In_ DWORD dwIndex,_In_opt_ LPVOID lpComp,_In_ DWORD dwCompLen,_In_opt_ LPVOID lpRead,_In_ DWORD dwReadLen)
BOOL None imm32.ImmSetCompositionStringA(_In_ HIMC hIMC,_In_ DWORD dwIndex,_In_opt_ LPVOID lpComp,_In_ DWORD dwCompLen,_In_opt_ LPVOID lpRead,_In_ DWORD dwReadLen)
HRESULT None None.put_ConnectedPlayers(long newVal None)
static void None.DisplayAuthenticationProperties(NegotiateStream* stream None)
DWORD None wininet.InternetAttemptConnect(_In_ DWORD dwReserved)
protected void None.ConditionalPopPhysicalCssClass(XhtmlMobileTextWriter writer None)
HRESULT None mfplat.MFScheduleWorkItemEx(_In_ IMFAsyncResult *pResult,_In_ INT64 Timeout,_Out_ MFWORKITEM_KEY *pKey)
public boolean None.Equals(Object obj None)
HRESULT WINAPI None.CreateIFEDictionaryInstance(_Out_ VOID **ppvObj)
HRESULT None None.Open(IUnknown *pUnkOuter None,DBID *pColumnID None,REFGUID rguidColumnType None,DWORD dwFlags None,REFIID riid None,IUnknown **ppUnk None)
public void None.RemoveAt(int index None)
LONG TSPIAPI None.TSPI_lineNegotiateTSPIVersion(DWORD dwDeviceID None,DWORD dwLowVersion None,DWORD dwHighVersion None,LPDWORD lpdwTSPIVersion None)
COLORREF None None.ListView_GetTextBkColor(HWND hwnd None)
DWORD None mprapi.MprConfigInterfaceTransportRemove(_In_ HANDLE hMprConfig,_In_ HANDLE hRouterInterface,_In_ HANDLE hRouterIfTransport)
size_t None None.strlen(const char *str)
BOOL __cdecl instrsa5.GetEncSChannel(_Out_ BYTE **pData,_Out_ DWORD *dwDecSize)
BOOL None msvfw32.MCIWndRegisterClass(HINSTANCE hInstance None)
ULONG None wldap32.ldap_delete_ext(_In_ LDAP *ld,_In_ PCHAR dn,_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls,_Out_ ULONG *MessageNumber)
ULONG None wldap32.ldap_delete_extW(_In_ LDAP *ld,_In_ PCHAR dn,_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls,_Out_ ULONG *MessageNumber)
ULONG None wldap32.ldap_delete_extA(_In_ LDAP *ld,_In_ PCHAR dn,_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls,_Out_ ULONG *MessageNumber)
protected void None.OnRowErrorTextNeeded(DataGridViewRowErrorTextNeededEventArgs e None)
protected void None.IndexListChanged(Object sender None,ListChangedEventArgs e None)
protected void None.OnDataBinding(EventArgs e None)
BOOL WINAPI kernel.SetDisplayAutoRotationPreferences(_In_ ORIENTATION_PREFERENCE *pOrientation)
HINSTANCE None shlwapi.MLLoadLibrary(_In_ LPCTSTR lpszLibFileName,_In_ HMODULE hModule,_In_ DWORD dwCrossCodePage)
HINSTANCE None shlwapi.MLLoadLibraryW(_In_ LPCTSTR lpszLibFileName,_In_ HMODULE hModule,_In_ DWORD dwCrossCodePage)
HINSTANCE None shlwapi.MLLoadLibraryA(_In_ LPCTSTR lpszLibFileName,_In_ HMODULE hModule,_In_ DWORD dwCrossCodePage)
BOOL None wininet.FindNextUrlCacheEntryEx(_In_ HANDLE hEnumHandle,_Inout_ LPINTERNET_CACHE_ENTRY_INFO lpNextCacheEntryInfo,_Inout_ LPDWORD lpcbEntryInfo,_Reserved_ LPVOID lpGroupAttributes,_Reserved_ LPDWORD lpcbGroupAttributes,_Reserved_ LPVOID lpReserved)
BOOL None wininet.FindNextUrlCacheEntryExW(_In_ HANDLE hEnumHandle,_Inout_ LPINTERNET_CACHE_ENTRY_INFO lpNextCacheEntryInfo,_Inout_ LPDWORD lpcbEntryInfo,_Reserved_ LPVOID lpGroupAttributes,_Reserved_ LPDWORD lpcbGroupAttributes,_Reserved_ LPVOID lpReserved)
BOOL None wininet.FindNextUrlCacheEntryExA(_In_ HANDLE hEnumHandle,_Inout_ LPINTERNET_CACHE_ENTRY_INFO lpNextCacheEntryInfo,_Inout_ LPDWORD lpcbEntryInfo,_Reserved_ LPVOID lpGroupAttributes,_Reserved_ LPDWORD lpcbGroupAttributes,_Reserved_ LPVOID lpReserved)
VOID None None.WdfDeviceInitSetPowerPolicyOwnership(_In_ PWDFDEVICE_INIT DeviceInit,_In_ BOOLEAN IsPowerPolicyOwner)
HRESULT None None.GetData([out] IMFTimedTextBinary **ppData)
HRESULT None None.UIntPtrToDWord(_In_ UINT_PTR uOperand,_Out_ DWORD *pdwResult)
HRESULT None mf.MFCreateWMVEncoderActivate(IMFMediaType *pMediaType None,IPropertyStore *pEncodingConfigurationProperties None,IMFActivate **ppActivate None)
protected void None.ObjectDataSource1_Filtering(Object sender None,ObjectDataSourceFilteringEventArgs e None)
HRESULT None None.GetAllPackets(DWORD dwFirstPacket None,DWORD dwMaxNumPackets None,WMSPACKETDESC* pPacketDesc None,IWMSPacket** ppPacket None,DWORD* pdwDescNum None,DWORD dwExFlags None)
public UInt64 None.CheckRegistryValueUInt64(RegistryKey keyRoot None,String keyPath None,String valueName None)
DWORD None rasapi32.RasHangUp(_In_ HRASCONN hrasconn)
DWORD None rasapi32.RasHangUpW(_In_ HRASCONN hrasconn)
DWORD None rasapi32.RasHangUpA(_In_ HRASCONN hrasconn)
DWORD None rasapi32.RasGetAutodialParam(_In_ DWORD dwKey,_Out_ LPVOID lpvValue,_Inout_ LPDWORD lpdwcbValue)
DWORD None rasapi32.RasGetAutodialParamW(_In_ DWORD dwKey,_Out_ LPVOID lpvValue,_Inout_ LPDWORD lpdwcbValue)
DWORD None rasapi32.RasGetAutodialParamA(_In_ DWORD dwKey,_Out_ LPVOID lpvValue,_Inout_ LPDWORD lpdwcbValue)
DWORD None rasapi32.RasSetAutodialAddress(_In_ LPCTSTR lpszAddress,_In_ DWORD dwReserved,_In_ LPRASAUTODIALENTRY lpAutoDialEntries,_In_ DWORD dwcbAutoDialEntries,_In_ DWORD dwcAutoDialEntries)
DWORD None rasapi32.RasSetAutodialAddressW(_In_ LPCTSTR lpszAddress,_In_ DWORD dwReserved,_In_ LPRASAUTODIALENTRY lpAutoDialEntries,_In_ DWORD dwcbAutoDialEntries,_In_ DWORD dwcAutoDialEntries)
DWORD None rasapi32.RasSetAutodialAddressA(_In_ LPCTSTR lpszAddress,_In_ DWORD dwReserved,_In_ LPRASAUTODIALENTRY lpAutoDialEntries,_In_ DWORD dwcbAutoDialEntries,_In_ DWORD dwcAutoDialEntries)
BOOL None msvfw32.ICRemove(DWORD fccType None,DWORD fccHandler None,UINT wFlags None)
public void None.AddArc(int x None,int y None,int width None,int height None,float startAngle None,float sweepAngle None)
HRESULT None None.GetOwner([out None None,retval] IXpsOMGradientBrush **owner)
DWORD None ntdsapi.DsReplicaDel(_In_ HANDLE hDS,_In_ LPCTSTR NameContext,_In_ LPCTSTR DsaSrc,_In_ ULONG Options)
DWORD None ntdsapi.DsReplicaDelW(_In_ HANDLE hDS,_In_ LPCTSTR NameContext,_In_ LPCTSTR DsaSrc,_In_ ULONG Options)
DWORD None ntdsapi.DsReplicaDelA(_In_ HANDLE hDS,_In_ LPCTSTR NameContext,_In_ LPCTSTR DsaSrc,_In_ ULONG Options)
DWORD WINAPI clusapi.AddCrossClusterGroupToGroupSetDependency(_In_ HGROUP hDependentGroup,_In_ LPCWSTR lpRemoteClusterName,_In_ LPCWSTR lpRemoteGroupSetName)
DWORD None mprapi.MprAdminInterfaceTransportGetInfo(_In_ MPR_SERVER_HANDLE hMprServer,_In_ HANDLE hInterface,_In_ DWORD dwTransportId,_Out_ LPBYTE *ppInterfaceInfo,_Out_opt_ LPDWORD lpdwInterfaceInfoSize)
HRESULT None None.GetHoverIcon([out None None,retval] IPictureDisp **HoverImage)
HRESULT None None.GetID([out] UINT32 *pu32ID)
HRESULT None wuapi.get_SupersededUpdateIDs([out] IStringCollection **retval)
DWORD None mprapi.MprConfigServerInstall(_In_ DWORD dwLevel,_In_ PVOID pBuffer)
DWORD DHCP_API_FUNCTION dhcpsapi.DhcpV6GetStatelessStoreParams(_In_opt_ LPWSTR ServerIpAddress,_In_ BOOL fServerLevel,_In_ DHCP_IPV6_ADDRESS SubnetAddress,_Out_ LPDHCPV6_STATELESS_PARAMS *Params)
HRESULT None fxscomex.Add([in] long lDeviceId)
UINT None imm32.ImmEnumRegisterWord(_In_ HKL hKL,_In_ REGISTERWORDENUMPROC lpfnEnumProc,_In_opt_ LPCTSTR lpszReading,_In_ DWORD dwStyle,_In_opt_ LPCTSTR lpszRegister,_In_ LPVOID lpData)
UINT None imm32.ImmEnumRegisterWordW(_In_ HKL hKL,_In_ REGISTERWORDENUMPROC lpfnEnumProc,_In_opt_ LPCTSTR lpszReading,_In_ DWORD dwStyle,_In_opt_ LPCTSTR lpszRegister,_In_ LPVOID lpData)
UINT None imm32.ImmEnumRegisterWordA(_In_ HKL hKL,_In_ REGISTERWORDENUMPROC lpfnEnumProc,_In_opt_ LPCTSTR lpszReading,_In_ DWORD dwStyle,_In_opt_ LPCTSTR lpszRegister,_In_ LPVOID lpData)
BOOL WINAPI dbghelp.MakeSureDirectoryPathExists(_In_ PCSTR DirPath)
VOID WINAPI kernel32.DisassociateCurrentThreadFromCallback(_Inout_ PTP_CALLBACK_INSTANCE pci)
protected void None.CopyPersonalizationState(WebPart webPartA None,WebPart webPartB None)
HRESULT None oleaut32.VarI1FromUI4(_In_ ULONG ulIn,_Out_ CHAR *pcOut)
DWORD None ntdsapi.DsUnBind(_In_ HANDLE *phDS)
DWORD None ntdsapi.DsUnBindW(_In_ HANDLE *phDS)
DWORD None ntdsapi.DsUnBindA(_In_ HANDLE *phDS)
LONG WINAPI tapi32.lineProxyResponse(HLINE hLine None,LPLINEPROXYREQUEST lpProxyRequest None,DWORD dwResult None)
NETIOAPI_API None iphlpapi.GetIpInterfaceEntry(_Inout_ PMIB_IPINTERFACE_ROW Row)
DWORD None ntdsapi.DsListSites(_In_ HANDLE hDs,_Out_ PDS_NAME_RESULT *ppSites)
DWORD None ntdsapi.DsListSitesW(_In_ HANDLE hDs,_Out_ PDS_NAME_RESULT *ppSites)
DWORD None ntdsapi.DsListSitesA(_In_ HANDLE hDs,_Out_ PDS_NAME_RESULT *ppSites)
HRESULT None fxscomex.get_APIVersion([out None None,retval] FAX_SERVER_APIVERSION_ENUM *Version)
HGROUP WINAPI clusapi.CreateClusterGroup(_In_ HCLUSTER hCluster,_In_ LPCWSTR lpszGroupName)
static void None.DisplayAuthenticationProperties(NegotiateStream* stream None)
public void None.Scroll(int amount None)
MI_Result MI_CALL None.MI_Server_GetVersion(MI_Uint32 *version None)
HRESULT None msftedit.TxGetSelectionBarWidth(LONG *lSelBarWidth None)
private void None.AboutDialog_Load(Object sender None,EventArgs e None)
HTREEITEM None None.TreeView_GetNextSelected(HWND hwnd None,HTREEITEM *hitem None)
private void None.button1_Click(Object sender None,System.EventArgs e None)
HRESULT None mfplat.MFBeginRegisterWorkQueueWithMMCSS(_In_ DWORD dwWorkQueueId,_In_ LPCWSTR wszClass,_In_ DWORD dwTaskId,_In_ IMFAsyncCallback *pDoneCallback,_In_ IUnknown *pDoneState)
PDH_STATUS None pdh.PdhEnumObjects(_In_ LPCTSTR szDataSource,_In_ LPCTSTR szMachineName,_Out_ LPTSTR mszObjectList,_Inout_ LPDWORD pcchBufferLength,_In_ DWORD dwDetailLevel,_In_ BOOL bRefresh)
PDH_STATUS None pdh.PdhEnumObjectsW(_In_ LPCTSTR szDataSource,_In_ LPCTSTR szMachineName,_Out_ LPTSTR mszObjectList,_Inout_ LPDWORD pcchBufferLength,_In_ DWORD dwDetailLevel,_In_ BOOL bRefresh)
PDH_STATUS None pdh.PdhEnumObjectsA(_In_ LPCTSTR szDataSource,_In_ LPCTSTR szMachineName,_Out_ LPTSTR mszObjectList,_Inout_ LPDWORD pcchBufferLength,_In_ DWORD dwDetailLevel,_In_ BOOL bRefresh)
public None None.EncoderFallbackException(String message None)
HRESULT None oleaut32.VarI2FromR4(_In_ FLOAT fltIn,_Out_ SHORT *psOut)
HRESULT None None.GetViewWindow([out] HWND *phwndView)
BOOL None imm32.ImmDisableIME(_In_ DWORD idThread)
BOOL None wininet.InternetCanonicalizeUrl(_In_ LPCTSTR lpszUrl,_Out_ LPTSTR lpszBuffer,_Inout_ LPDWORD lpdwBufferLength,_In_ DWORD dwFlags)
BOOL None wininet.InternetCanonicalizeUrlW(_In_ LPCTSTR lpszUrl,_Out_ LPTSTR lpszBuffer,_Inout_ LPDWORD lpdwBufferLength,_In_ DWORD dwFlags)
BOOL None wininet.InternetCanonicalizeUrlA(_In_ LPCTSTR lpszUrl,_Out_ LPTSTR lpszBuffer,_Inout_ LPDWORD lpdwBufferLength,_In_ DWORD dwFlags)
HRESULT None oleaut32.VarCyFromR8(_In_ DOUBLE dblIn,_Out_ CY *pcyOut)
DWORD APIENTRY mprapi.MprConfigServerGetInfoEx(_In_ HANDLE hMprConfig,_Out_ MPR_SERVER_EX *pServerInfo)
HRESULT None None.Xml(LONG count None,FEEDS_XML_SORT_PROPERTY sortProperty None,FEEDS_XML_SORT_ORDER sortOrder None,FEEDS_XML_FILTER_FLAGS filterFlags None,FEEDS_XML_INCLUDE_FLAGS includeFlags None,BSTR *xml None)
ULONG None wldap32.ldap_search(_In_ LDAP *ld,_In_ PCHAR base,_In_ ULONG scope,_In_ PCHAR filter,_In_ PCHAR attrs[],_In_ ULONG attrsonly)
ULONG None wldap32.ldap_searchW(_In_ LDAP *ld,_In_ PCHAR base,_In_ ULONG scope,_In_ PCHAR filter,_In_ PCHAR attrs[],_In_ ULONG attrsonly)
ULONG None wldap32.ldap_searchA(_In_ LDAP *ld,_In_ PCHAR base,_In_ ULONG scope,_In_ PCHAR filter,_In_ PCHAR attrs[],_In_ ULONG attrsonly)
UINT None None.ListView_GetSelectedColumn(HWND hwnd None)
DWORD None rasapi32.RasDeleteEntry(_In_ LPCTSTR lpszPhonebook,_In_ LPCTSTR lpszEntry)
DWORD None rasapi32.RasDeleteEntryW(_In_ LPCTSTR lpszPhonebook,_In_ LPCTSTR lpszEntry)
DWORD None rasapi32.RasDeleteEntryA(_In_ LPCTSTR lpszPhonebook,_In_ LPCTSTR lpszEntry)
DWORD WINAPI clusapi.AddClusterGroupToGroupSetDependency(_In_ HGROUP hDependentGroup,_In_ HGROUPSET hProviderGroupSet)
private void None.MyForm_Layout(Object sender None,System.Windows.Forms.LayoutEventArgs e None)
SHORT None propsys.VariantToInt16WithDefault(_In_ REFVARIANT varIn,_In_ SHORT iDefault)
HRESULT None None.Int64ToLong(_In_ INT64 i64Operand,_Out_ LONG *plResult)
HRESULT None None.SetSyncSetting(FEEDS_SYNC_SETTING fss None)
VOID None None.WdfVerifierKeBugCheck(_In_ ULONG BugCheckCode,_In_ ULONG_PTR BugCheckParameter1,_In_ ULONG_PTR BugCheckParameter2,_In_ ULONG_PTR BugCheckParameter3,_In_ ULONG_PTR BugCheckParameter4)
D2D1_RENDERING_CONTROLS None d2d1.RenderingControls(D2D1_BUFFER_PRECISION bufferPrecision None,D2D1_SIZE_U tileSize None)
HRESULT None None.SetCompletionCallback(IWMSPacketListCallback* pCallback None)
HRESULT None oleaut32.VarI2FromDisp(IDispatch *pdispIn None,_In_ LCID lcid,_Out_ SHORT *psOut)
HRESULT None None.GetTopologyFromEvent(IMFMediaEvent *pEvent None,IMFTopology **ppTopology None)
HRESULT None mfplat.MFDeserializeAttributesFromStream(IMFAttributes *pAttr None,DWORD dwOptions None,IStream *pStm None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcServerInqIf(RPC_IF_HANDLE IfSpec None,UUID *MgrTypeUuid None,RPC_MGR_EPV **MgrEpv None)
protected void None.ValidateOptionList(System.Collections.IList potentialOptions None)
DWORD None rasapi32.RasGetEapUserIdentity(_In_ LPCSTR pszPhonebook,_In_ LPCSTR pszEntry,_In_ DWORD dwFlags,_In_ HWND hwnd,_Out_ LPRASEAPUSERIDENTITY *ppRasEapUserIdentity)
DWORD None rasapi32.RasGetEapUserIdentityW(_In_ LPCSTR pszPhonebook,_In_ LPCSTR pszEntry,_In_ DWORD dwFlags,_In_ HWND hwnd,_Out_ LPRASEAPUSERIDENTITY *ppRasEapUserIdentity)
DWORD None rasapi32.RasGetEapUserIdentityA(_In_ LPCSTR pszPhonebook,_In_ LPCSTR pszEntry,_In_ DWORD dwFlags,_In_ HWND hwnd,_Out_ LPRASEAPUSERIDENTITY *ppRasEapUserIdentity)
MI_INLINE MI_ErrorCategory None.MI_Utilities_MapErrorToMiErrorCategory(_In_z_ MI_Char *errorType,MI_Uint32 error None)
DWORD WINAPI ntdsapi.DsAddSidHistory(_In_ HANDLE hDS,_In_ DWORD Flags,_In_ LPCTSTR SrcDomain,_In_ LPCTSTR SrcPrincipal,_In_ LPCTSTR SrcDomainController,_In_ RPC_AUTH_IDENTITY_HANDLE SrcDomainCreds,_In_ LPCTSTR DstDomain,_In_ LPCTSTR DstPrincipal)
DWORD WINAPI ntdsapi.DsAddSidHistoryW(_In_ HANDLE hDS,_In_ DWORD Flags,_In_ LPCTSTR SrcDomain,_In_ LPCTSTR SrcPrincipal,_In_ LPCTSTR SrcDomainController,_In_ RPC_AUTH_IDENTITY_HANDLE SrcDomainCreds,_In_ LPCTSTR DstDomain,_In_ LPCTSTR DstPrincipal)
DWORD WINAPI ntdsapi.DsAddSidHistoryA(_In_ HANDLE hDS,_In_ DWORD Flags,_In_ LPCTSTR SrcDomain,_In_ LPCTSTR SrcPrincipal,_In_ LPCTSTR SrcDomainController,_In_ RPC_AUTH_IDENTITY_HANDLE SrcDomainCreds,_In_ LPCTSTR DstDomain,_In_ LPCTSTR DstPrincipal)
HRESULT None None.get_PlayerInactivityTimeout(long* pVal None)
uint32 None dmwmibridgeprov.CheckApplicabilityMethod([in] string param)
protected void None.RaiseMouseEvent(Object key None,MouseEventArgs e None)
HRESULT None shell32.SHGetTemporaryPropertyForItem(_In_ IShellItem *psi,REFPROPERTYKEY pk None,_Out_ PROPVARIANT *ppropvarInk)
HRESULT None None.IntPtrToChar(_In_ INT_PTR iOperand,_Out_ CHAR *pch)
UInt32 None storageservice.Diagnose([out] String reason,[in None None,optional] String username,[in None None,optional] String password,[out] MSFT_SMStorageDiagnoseResult DiagnoseResults[],[out] MSFT_SMExtendedStatus ExtendedStatus)
private void None.Button1_Click(Object sender None,EventArgs myEventArgs None)
LRESULT None None.TreeView_SetAutoScrollInfo(HWND hwnd None,UINT uPixPerSec None,UINT uUpdateTime None)
HRESULT None propsys.PropVariantToFileTime(_In_ REFPROPVARIANT propvar,_In_ PSTIME_FLAGS pstfOut,_Out_ FILETIME *pftOut)
HRESULT None oleaut32.VarDateFromBool(_In_ VARIANT_BOOL boolIn,_Out_ DATE *pdateOut)
HRESULT None None.LocalId(GUID *pguid None)
errno_t None None.mbstowcs_s(size_t *pReturnValue None,wchar_t *wcstr None,size_t sizeInWords None,const char *mbstr,size_t count None)
private void None.button1_Click(Object sender None,System.EventArgs e None)
HRESULT None oleaut32.VarI8FromDate(_In_ DATE dateIn,_Out_ LONG64 *pi64Out)
HRESULT None oleaut32.VarCyFromUI2(_In_ USHORT uiIn,_Out_ CY *pcyOut)
protected void None.OnRowDefaultCellStyleChanged(DataGridViewRowEventArgs e None)
void None None.ProcessTriTessFactorsMin(in float3 RawEdgeFactors,in float InsideScale,out float3 RoundedEdgeTessFactors,out float RoundedInsideTessFactors,out float UnroundedInsideTessFactors)
BOOL None None.ListView_SetTextBkColor(HWND hwnd None,COLORREF clrText None)
DWORD None rasapi32.RasEnumAutodialAddresses(_Inout_ LPTSTR *lppAddresses,_Inout_ LPDWORD lpdwcbAddresses,_Out_ LPDWORD lpdwcAddresses)
DWORD None rasapi32.RasEnumAutodialAddressesW(_Inout_ LPTSTR *lppAddresses,_Inout_ LPDWORD lpdwcbAddresses,_Out_ LPDWORD lpdwcAddresses)
DWORD None rasapi32.RasEnumAutodialAddressesA(_Inout_ LPTSTR *lppAddresses,_Inout_ LPDWORD lpdwcbAddresses,_Out_ LPDWORD lpdwcAddresses)
function None None.ReceiveServerData(arg None None,context None None)
NTSTATUS None None.SpGetContextToken(_In_ LSA_SEC_HANDLE ContextHandle,_Out_ PHANDLE ImpersonationToken)
LONG WINAPI tapi32.lineGetAgentActivityList(HLINE hLine None,DWORD dwAddressID None,LPLINEAGENTACTIVITYLIST lpAgentActivityList None)
LONG WINAPI tapi32.lineGetAgentActivityListW(HLINE hLine None,DWORD dwAddressID None,LPLINEAGENTACTIVITYLIST lpAgentActivityList None)
LONG WINAPI tapi32.lineGetAgentActivityListA(HLINE hLine None,DWORD dwAddressID None,LPLINEAGENTACTIVITYLIST lpAgentActivityList None)
HRESULT None ole32.FreePropVariantArray(_In_ ULONG cVariants,_Inout_ PROPVARIANT *rgvars)
INT None propsys.PropVariantCompareEx(_In_ REFPROPVARIANT propvar1,_In_ REFPROPVARIANT propvar2,_In_ PROPVAR_COMPARE_UNIT unit,_In_ PROPVAR_COMPARE_FLAGS flags)
uint32 None netadaptercim.Disable([in] boolean IPv4,[in] boolean IPv6,[out] string cmdletOutput)
BOOL WINAPI kernel32.SetSystemPowerState(_In_ BOOL fSuspend,_In_ BOOL fForce)
HRESULT None fxscomex.OnOutgoingMessageAdded([in] IFaxAccount *pFaxAccount,[in] BSTR bstrMessageId)
HCLUSTER WINAPI clusapi.GetClusterFromGroupSet(_In_ HGROUPSET hGroupSet)
HRESULT None fxscomex.OnDeviceStatusChange(IFaxServer2 *pFaxServer2 None,long lDeviceId None,VARIANT_BOOL bPoweredOff None,VARIANT_BOOL bSending None,VARIANT_BOOL bReceiving None,VARIANT_BOOL bRinging None)
HRESULT None d3d12.SetStablePowerState(BOOL Enable None)
HRESULT None mfplat.MFDeserializePresentationDescriptor(DWORD cbData None,BYTE *pbData None,IMFPresentationDescriptor **ppPD None)
UInt32 None None.Offline([out] String ExtendedStatus)
BOOL WINAPI kernel32.DeleteUmsThreadContext(_In_ PUMS_CONTEXT UmsThread)
HRESULT None oleaut32.VarBoolFromR4(_In_ FLOAT fltIn,_Out_ VARIANT_BOOL *pboolOut)
BOOL None wininet.CreateMD5SSOHash(_In_ PWSTR pszChallengeInfo,_In_ PWSTR pwszRealm,_In_ PWSTR pwszTarget,_Out_ PBYTE pbHexHash)
UInt32 None None.Format([in] String FileSystem,[in] String FileSystemLabel,[in] UInt32 AllocationUnitSize,[in] Boolean Full,[in] Boolean Force,[in] Boolean Compress,[in] Boolean ShortFileNameSupport,[in] Boolean SetIntegrityStreams,[in] Boolean UseLargeFRS,[in] Boolean DisableHeatGathering,[out] String FormattedVolume,[out] String ExtendedStatus)
protected void None.OnClick(EventArgs e None)
BOOL WINAPI kernel32.SetProtectedPolicy(_In_ LPCGUID PolicyGuid,_In_ ULONG_PTR PolicyValue,_Out_ PULONG_PTR OldPolicyValue)
MI_INLINE MI_Result None.MI_DestinationOptions_GetTimeout(_In_ MI_DestinationOptions *options,_Out_ MI_Interval *timeout)
protected void None.OnAfterSelect(TreeViewEventArgs e None)
HRESULT None None.ULongPtrToInt8(_In_ ULONG_PTR ulOperand,_Out_ INT8 *pi8Result)
LONG WINAPI advapi32.RegEnumValue(_In_ HKEY hKey,_In_ DWORD dwIndex,_Out_ LPTSTR lpValueName,_Inout_ LPDWORD lpcchValueName,_Reserved_ LPDWORD lpReserved,_Out_opt_ LPDWORD lpType,_Out_opt_ LPBYTE lpData,_Inout_opt_ LPDWORD lpcbData)
LONG WINAPI advapi32.RegEnumValueW(_In_ HKEY hKey,_In_ DWORD dwIndex,_Out_ LPTSTR lpValueName,_Inout_ LPDWORD lpcchValueName,_Reserved_ LPDWORD lpReserved,_Out_opt_ LPDWORD lpType,_Out_opt_ LPBYTE lpData,_Inout_opt_ LPDWORD lpcbData)
LONG WINAPI advapi32.RegEnumValueA(_In_ HKEY hKey,_In_ DWORD dwIndex,_Out_ LPTSTR lpValueName,_Inout_ LPDWORD lpcchValueName,_Reserved_ LPDWORD lpReserved,_Out_opt_ LPDWORD lpType,_Out_opt_ LPBYTE lpData,_Inout_opt_ LPDWORD lpcbData)
HRESULT None softkbd.GetSoftKeyboardTypeMode([out] TYPEMODE *lpTypeMode)
public void None.DrawText(IDeviceContext dc None,Rectangle bounds None,String textToDraw None,boolean drawDisabled None)
NTSTATUS None advapi32.LsaSetInformationPolicy(_In_ LSA_HANDLE PolicyHandle,_In_ POLICY_INFORMATION_CLASS InformationClass,_In_ PVOID Buffer)
HRESULT WINAPI None.EngineAdapterControlUnit(_Inout_ PWINBIO_PIPELINE Pipeline,_In_ ULONG ControlCode,_In_ PUCHAR SendBuffer,_In_ SIZE_T SendBufferSize,_In_ PUCHAR ReceiveBuffer,_In_ SIZE_T ReceiveBufferSize,_Out_ PSIZE_T ReceiveDataSize,_Out_ PULONG OperationStatus)
BOOL WINAPI kernel32.FreeEnvironmentStrings(_In_ LPTCH lpszEnvironmentBlock)
BOOL WINAPI kernel32.FreeEnvironmentStringsW(_In_ LPTCH lpszEnvironmentBlock)
BOOL WINAPI kernel32.FreeEnvironmentStringsA(_In_ LPTCH lpszEnvironmentBlock)
HRESULT None tapi3.get_State([out] CALL_STATE *pCallState)
BOOL None None.ComboBox_SetMinVisible(HWND hwnd None,INT iMinVisible None)
HRESULT None fxscomex.put_OutgoingQueueAgeLimit([in] long lOutgoingQueueAgeLimit)
protected void None.RemoveItem(int index None)
void None None.Page_Load(Object sender None,System.EventArgs e None)
public int None.IndexOf(MenuItem value None)
HRESULT None oleaut32.VarDecFromDisp(_In_ IDispatch *pdispIn,_In_ LCID lcid,_Out_ DECIMAL *pdecOut)
HRESULT WINAPI webservices.WsMoveReader(_In_ WS_XML_READER* reader,_In_ WS_MOVE_TO moveTo,BOOL* found None,_In_opt_ WS_ERROR* error)
public void None.OnUnload(EventArgs e None)
public Stream None.GetManifestResourceStream(Type type None,String name None)
DWORD WINAPI netapi32.DavGetHTTPFromUNCPath(_In_ LPCWSTR UncPath,_Out_ LPWSTR HttpPath,_Inout_ LPDWORD lpSize)
PLIST_ENTRY None None.ExInterlockedInsertTailList(_Inout_ PLIST_ENTRY ListHead,_Inout_ PLIST_ENTRY ListEntry,_Inout_ PKSPIN_LOCK Lock)
VOID WINAPI ntdsapi.DsFreeSchemaGuidMap(_In_ PDS_SCHEMA_GUID_MAP pGuidMap)
VOID WINAPI ntdsapi.DsFreeSchemaGuidMapW(_In_ PDS_SCHEMA_GUID_MAP pGuidMap)
VOID WINAPI ntdsapi.DsFreeSchemaGuidMapA(_In_ PDS_SCHEMA_GUID_MAP pGuidMap)
DWORD APIENTRY dhcpcsvc6.Dhcpv6ReleasePrefix(_In_ LPWSTR adapterName,_In_ LPDHCPV6CAPI_CLASSID classId,_In_ LPDHCPV6CAPIPrefixLeaseInformation prefixleaseInfo)
uint32 None dnsserverpsprovider.AddByAAAA([in] string IPv6Address,[in] string ZoneName,[in] boolean CreatePtr,[in] boolean AgeRecord,[in] datetime TimeToLive,[in] boolean AllowUpdateAny,[in] string ComputerName,[in] string Name,[in] boolean AAAA,[in] boolean PassThru,[in] string ZoneScope,[out] DnsServerResourceRecord cmdletOutput)
HRESULT None propsys.VariantToUInt32ArrayAlloc(_In_ REFVARIANT var,_Out_ ULONG **pprgn,_Out_ ULONG *pcElem)
MI_INLINE MI_Result None.MI_DestinationOptions_GetPacketIntegrity(_In_ MI_DestinationOptions *options,_Out_ MI_Boolean *integrity)
DWORD None iphlpapi.GetExtendedTcpTable(_Out_ PVOID pTcpTable,_Inout_ PDWORD pdwSize,_In_ BOOL bOrder,_In_ ULONG ulAf,_In_ TCP_TABLE_CLASS TableClass,_In_ ULONG Reserved)
LONG WINAPI advapi32.RegSaveKeyEx(_In_ HKEY hKey,_In_ LPCTSTR lpFile,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ DWORD Flags)
LONG WINAPI advapi32.RegSaveKeyExW(_In_ HKEY hKey,_In_ LPCTSTR lpFile,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ DWORD Flags)
LONG WINAPI advapi32.RegSaveKeyExA(_In_ HKEY hKey,_In_ LPCTSTR lpFile,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ DWORD Flags)
LONG TSPIAPI None.TSPI_lineGetDevConfig(DWORD dwDeviceID None,LPVARSTRING lpDeviceConfig None,LPCWSTR lpszDeviceClass None)
HRESULT None None.MFGetAttributeString(_In_ IMFAttributes *pAttributes,_In_ REFGUID guidKey,_Out_ PWSTR *ppsz)
LONG None shlwapi.SHRegGetValueFromHKCUHKLM(_In_ PCWSTR pwszKey,_In_ PCWSTR pwszValue,_In_ SRRF srrfFlags,_Out_ DWORD *pdwType,_In_ LPCVOID pvData,_Inout_ DWORD *pcbData)
HINTERNET None wininet.InternetOpen(_In_ LPCTSTR lpszAgent,_In_ DWORD dwAccessType,_In_ LPCTSTR lpszProxyName,_In_ LPCTSTR lpszProxyBypass,_In_ DWORD dwFlags)
HINTERNET None wininet.InternetOpenW(_In_ LPCTSTR lpszAgent,_In_ DWORD dwAccessType,_In_ LPCTSTR lpszProxyName,_In_ LPCTSTR lpszProxyBypass,_In_ DWORD dwFlags)
HINTERNET None wininet.InternetOpenA(_In_ LPCTSTR lpszAgent,_In_ DWORD dwAccessType,_In_ LPCTSTR lpszProxyName,_In_ LPCTSTR lpszProxyBypass,_In_ DWORD dwFlags)
BOOL None advapi32.CredGetSessionTypes(_In_ DWORD MaximumPersistCount,_Out_ LPDWORD MaximumPersist)
HRESULT None tapi3.EnumerateCallingCards([out] IEnumCallingCard **ppEnumCallingCard)
HRESULT None None.HasAudio([out] BOOL *pfHasAudio,[out] BOOL *pfSelected)
HRESULT None twinapi.GetApplicationSizeBounds([out] SIZE *minApplicationSizePixels,[out] SIZE *maxApplicationSizePixels)
protected void None.ConditionalPopPhysicalCssClass(XhtmlMobileTextWriter writer None)
unsigned int None._mbctolower(unsigned int c)
UInt32 None None.CreatePartition([in] UInt64 Size,[in] Boolean UseMaximumSize,[in] UInt64 Offset,[in] UInt32 Alignment,[in] Char16 DriveLetter,[in] Boolean AssignDriveLetter,[in] UInt16 MbrType,[in] String GptType,[in] Boolean IsHidden,[in] Boolean IsActive,[out] String CreatedPartition,[out] String ExtendedStatus)
void None None.Button1_Click(Object sender None,EventArgs e None)
DWORD None rasapi32.RasSetAutodialParam(_In_ DWORD dwKey,_Out_ LPVOID lpvValue,_In_ DWORD dwcbValue)
DWORD None rasapi32.RasSetAutodialParamW(_In_ DWORD dwKey,_Out_ LPVOID lpvValue,_In_ DWORD dwcbValue)
DWORD None rasapi32.RasSetAutodialParamA(_In_ DWORD dwKey,_Out_ LPVOID lpvValue,_In_ DWORD dwcbValue)
DWORD None rasapi32.RasGetCredentials(_In_ LPCTSTR lpszPhonebook,_In_ LPCTSTR lpszEntry,_Inout_ LPRASCREDENTIALS lpCredentials)
DWORD None rasapi32.RasGetCredentialsW(_In_ LPCTSTR lpszPhonebook,_In_ LPCTSTR lpszEntry,_Inout_ LPRASCREDENTIALS lpCredentials)
DWORD None rasapi32.RasGetCredentialsA(_In_ LPCTSTR lpszPhonebook,_In_ LPCTSTR lpszEntry,_Inout_ LPRASCREDENTIALS lpCredentials)
HRESULT None mstscax.get_AdvancedSettings3([out] IMsRdpClientAdvancedSettings2 **ppAdvSettings)
public XmlProcessingInstruction None.CreateProcessingInstruction(String target None,String data None)
uint32 None dnsserverpsprovider.AddByWinsR([in] datetime LookupTimeout,[in] string ResultDomain,[in] string ZoneName,[in] boolean Replicate,[in] string ComputerName,[in] datetime CacheTimeout,[in] boolean PassThru,[in] boolean Force,[in] boolean WinsR,[in] string ZoneScope,[out] DnsServerResourceRecord cmdletOutput)
public void None.SetRegistryValueUInt32(RegistryKey keyRoot None,String keyPath None,String valueName None,UInt32 data None)
DWORD APIENTRY dhcpcsvc.DhcpCApiInitialize(_Out_ LPDWORD Version)
BOOL None ntdsapi.DsIsMangledDn(_In_ LPCTSTR pszDn,_In_ DS_MANGLE_FOR eDsMangleFor)
BOOL None ntdsapi.DsIsMangledDnW(_In_ LPCTSTR pszDn,_In_ DS_MANGLE_FOR eDsMangleFor)
BOOL None ntdsapi.DsIsMangledDnA(_In_ LPCTSTR pszDn,_In_ DS_MANGLE_FOR eDsMangleFor)
public void None.WriteAttribute(String name None,String value None)
HRESULT None None.SetQueueBasePriorityProp(LPCWSTR wszQueueFormatName None,SHORT iValue None)
HRESULT None None.put_PlayerCacheDeliveryRate(long Val None)
NTSTATUS None None.WdfPdoRetrieveAddressDescription(_In_ WDFDEVICE Device,_Inout_ PWDF_CHILD_ADDRESS_DESCRIPTION_HEADER AddressDescription)
private void None.On_Click(Object source None,System.EventArgs e None)
HRESULT None faxcom.put_SenderName([in] BSTR newVal)
protected void None.OnStylusSystemGesture(StylusSystemGestureEventArgs e None)
public boolean None.CanDeserialize(XmlReader xmlReader None)
DWORD None rasapi32.RasClearConnectionStatistics(_In_ HRASCONN hRasConn)
HRESULT WINAPI None.EngineAdapterAcceptSampleData(_Inout_ PWINBIO_PIPELINE Pipeline,_In_ PWINBIO_BIR SampleBuffer,_In_ SIZE_T SampleSize,_In_ WINBIO_BIR_PURPOSE Purpose,_Out_ PWINBIO_REJECT_DETAIL RejectDetail)
DWORD WINAPI None.RasCustomDial(HINSTANCE hInstDll None,LPRASDIALEXTENSIONS lpRasDialExtensions None,LPCWSTR lpszPhonebook None,LPRASDIALPARAMS lpRasDialParams None,DWORD dwNotifierType None,LPVOID lpvNotifier None,LPHRASCONN lphRasConn None,DWORD dwFlags None)
DWORD WINAPI None.RasCustomDialW(HINSTANCE hInstDll None,LPRASDIALEXTENSIONS lpRasDialExtensions None,LPCWSTR lpszPhonebook None,LPRASDIALPARAMS lpRasDialParams None,DWORD dwNotifierType None,LPVOID lpvNotifier None,LPHRASCONN lphRasConn None,DWORD dwFlags None)
DWORD WINAPI None.RasCustomDialA(HINSTANCE hInstDll None,LPRASDIALEXTENSIONS lpRasDialExtensions None,LPCWSTR lpszPhonebook None,LPRASDIALPARAMS lpRasDialParams None,DWORD dwNotifierType None,LPVOID lpvNotifier None,LPHRASCONN lphRasConn None,DWORD dwFlags None)
BOOL None None.IsPropVariantVector(_In_ REFPROPVARIANT propvar)
HRESULT None None.get_TargetLoad([out None None,retval] DWORD *pTargetLoad)
DWORD None rasapi32.RasEditPhonebookEntry(_In_ HWND hwnd,_In_ LPCTSTR lpszPhonebook,_In_ LPCTSTR lpszEntryName)
DWORD None rasapi32.RasEditPhonebookEntryW(_In_ HWND hwnd,_In_ LPCTSTR lpszPhonebook,_In_ LPCTSTR lpszEntryName)
DWORD None rasapi32.RasEditPhonebookEntryA(_In_ HWND hwnd,_In_ LPCTSTR lpszPhonebook,_In_ LPCTSTR lpszEntryName)
LONG WINAPI None.SCardListReadersWithDeviceInstanceId(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szDeviceInstanceId,_Out_opt_ LPTSTR mszReaders,_Inout_ LPDWORD pcchReaders)
HRESULT None None.Int8ToUShort(_In_ INT8 i8Operand,_Out_ USHORT *pusResult)
PUMS_CONTEXT WINAPI kernel32.GetNextUmsListItem(_Inout_ PUMS_CONTEXT UmsContext)
DWORD None rasapi32.RasDial(_In_ LPRASDIALEXTENSIONS lpRasDialExtensions,_In_ LPCTSTR lpszPhonebook,_In_ LPRASDIALPARAMS lpRasDialParams,_In_ DWORD dwNotifierType,_In_ LPVOID lpvNotifier,_Out_ LPHRASCONN lphRasConn)
DWORD None rasapi32.RasDialW(_In_ LPRASDIALEXTENSIONS lpRasDialExtensions,_In_ LPCTSTR lpszPhonebook,_In_ LPRASDIALPARAMS lpRasDialParams,_In_ DWORD dwNotifierType,_In_ LPVOID lpvNotifier,_Out_ LPHRASCONN lphRasConn)
DWORD None rasapi32.RasDialA(_In_ LPRASDIALEXTENSIONS lpRasDialExtensions,_In_ LPCTSTR lpszPhonebook,_In_ LPRASDIALPARAMS lpRasDialParams,_In_ DWORD dwNotifierType,_In_ LPVOID lpvNotifier,_Out_ LPHRASCONN lphRasConn)
LRESULT None msvfw32.ICClose(HIC hic None)
uint32 None cimwin32.SetIGMPLevel([in] uint8 IGMPLevel)
BYTE None None.WdfUsbInterfaceGetNumEndpoints(_In_ WDFUSBINTERFACE UsbInterface,_In_ UCHAR SettingIndex)
public void None.ControlSetFocus(Control control None)
ULONG None propsys.PropVariantToUInt32WithDefault(_In_ REFPROPVARIANT propvarIn,_In_ ULONG ulDefault)
HRESULT None tapi3.get_EventInterface([out] IDispatch **pEventInterface)
LONG WINAPI kernel32.GetStagedPackageOrigin(_In_ PCWSTR packageFullName,_Out_ PackageOrigin *origin)
HRESULT None oleaut32.VarI2FromI4(_In_ LONG lIn,_Out_ SHORT *psOut)
UInt32 None None.SetFriendlyName([in] String FriendlyName,[out] String ExtendedStatus)
ULONG None wldap32.ldap_rename_ext(_In_ LDAP *ld,_In_ PWCHAR dn,_In_ PWCHAR NewRDN,_In_ PWCHAR NewParent,_In_ INT DeleteOldRdn,_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls,_Out_ ULONG *MessageNumber)
ULONG None wldap32.ldap_rename_extW(_In_ LDAP *ld,_In_ PWCHAR dn,_In_ PWCHAR NewRDN,_In_ PWCHAR NewParent,_In_ INT DeleteOldRdn,_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls,_Out_ ULONG *MessageNumber)
ULONG None wldap32.ldap_rename_extA(_In_ LDAP *ld,_In_ PWCHAR dn,_In_ PWCHAR NewRDN,_In_ PWCHAR NewParent,_In_ INT DeleteOldRdn,_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls,_Out_ ULONG *MessageNumber)
HRESULT None None.Clone([out] IEnumTASK **ppenum)
DWORD None rasapi32.RasValidateEntryName(_In_ LPCTSTR lpszPhonebook,_In_ LPCTSTR lpszEntry)
DWORD None rasapi32.RasValidateEntryNameW(_In_ LPCTSTR lpszPhonebook,_In_ LPCTSTR lpszEntry)
DWORD None rasapi32.RasValidateEntryNameA(_In_ LPCTSTR lpszPhonebook,_In_ LPCTSTR lpszEntry)
DWORD None mprapi.MprConfigInterfaceCreate(_In_ HANDLE hMprConfig,_In_ DWORD dwLevel,_In_ LPBYTE lpbBuffer,_Out_ HANDLE *phRouterInterface)
HRESULT None tapi3.get_MediaState([out] TERMINAL_MEDIA_STATE *pTerminalMediaState)
HRESULT None None.InitPropVariantFromUInt16(_In_ USHORT uiVal,_Out_ PROPVARIANT *ppropvar)
HRESULT None scardssp.get_ReplyStatus([out] LPWORD pwStatus)
NTSTATUS None None.SpAcceptLsaModeContext(_In_ LSA_SEC_HANDLE CredentialHandle,_In_ LSA_SEC_HANDLE ContextHandle,_In_ PSecBufferDesc InputBuffer,_In_ ULONG ContextRequirements,_In_ ULONG TargetDataRep,_Out_ PLSA_SEC_HANDLE NewContextHandle,_Out_ PSecBufferDesc OutputBuffer,_Out_ PULONG ContextAttributes,_Out_ PTimeStamp ExpirationTime,_Out_ PBOOLEAN MappedContext,_Out_ PSecBuffer ContextData)
NTSTATUS None None.WdfRegistryQueryMemory(_In_ WDFKEY Key,_In_ PCUNICODE_STRING ValueName,_In_ POOL_TYPE PoolType,_In_opt_ PWDF_OBJECT_ATTRIBUTES MemoryAttributes,_Out_ WDFMEMORY *Memory,_Out_opt_ PULONG ValueType)
HRESULT None None.IsEndOfStream([out] BOOL *pfEndOfStream)
public void None.AddArc(int x None,int y None,int width None,int height None,float startAngle None,float sweepAngle None)
HINTERNET None wininet.InternetOpenUrl(_In_ HINTERNET hInternet,_In_ LPCTSTR lpszUrl,_In_ LPCTSTR lpszHeaders,_In_ DWORD dwHeadersLength,_In_ DWORD dwFlags,_In_ DWORD_PTR dwContext)
HINTERNET None wininet.InternetOpenUrlW(_In_ HINTERNET hInternet,_In_ LPCTSTR lpszUrl,_In_ LPCTSTR lpszHeaders,_In_ DWORD dwHeadersLength,_In_ DWORD dwFlags,_In_ DWORD_PTR dwContext)
HINTERNET None wininet.InternetOpenUrlA(_In_ HINTERNET hInternet,_In_ LPCTSTR lpszUrl,_In_ LPCTSTR lpszHeaders,_In_ DWORD dwHeadersLength,_In_ DWORD dwFlags,_In_ DWORD_PTR dwContext)
uint32 None cimwin32.SetArpAlwaysSourceRoute([in] boolean ArpAlwaysSourceRoute)
protected void None.Render(HtmlTextWriter output None)
DWORD None mprapi.MprConfigTransportGetHandle(_In_ HANDLE hMprConfig,_In_ DWORD dwTransportId,_Out_ HANDLE *phRouterTransport)
HRESULT None propsys.VariantToUInt16ArrayAlloc(_In_ REFVARIANT var,_Out_ USHORT **pprgn,_Out_ ULONG *pcElem)
HRESULT None oleaut32.VarBoolFromUI4(_In_ ULONG ulIn,_Out_ VARIANT_BOOL *pboolOut)
private void None.Page_Load(Object sender None,System.EventArgs e None)
NET_API_STATUS None netapi32.NetServerGetInfo(_In_ LPWSTR servername,_In_ DWORD level,_Out_ LPBYTE *bufptr)
HRESULT None None.get_StartTime(DATE* pVal None)
HRESULT None oleaut32.SetVarConversionLocaleSetting(_In_ ULONG dwFlags)
uint32 None None.LockMedia([in] boolean Lock)
HRESULT None oleaut32.VarUI1FromI1(_In_ CHAR cIn,_Out_ BYTE *pbOut)
HRESULT None None.get_StreamingPlayers(long* pVal None)
DWORD None None.ListView_GetHoverTime(HWND hwndLV None)
private void None.button1_Click(Object sender None,System.EventArgs e None)
HRESULT None propsys.PropVariantToInt16(_In_ REFPROPVARIANT propvarIn,_Out_ SHORT *piRet)
VOID WINAPI websocket.WebSocketCompleteAction(_In_ WEB_SOCKET_HANDLE hWebSocket,_In_ PVOID pvActionContext,_In_ ULONG ulBytesTransferred)
DWORD None virtdisk.GetVirtualDiskInformation(_In_ HANDLE VirtualDiskHandle,_Inout_ PULONG VirtualDiskInfoSize,_Inout_ PGET_VIRTUAL_DISK_INFO VirtualDiskInfo,_Inout_opt_ PULONG SizeUsed)
ULONG None wldap32.ldap_parse_result(_In_ LDAP *Connection,_In_ LDAPMessage *ResultMessage,_Out_opt_ ULONG *ReturnCode,_Out_opt_ PWCHAR *MatchedDNs,_Out_opt_ PWCHAR *ErrorMessage,_Out_opt_ PWCHAR **Referrals,_Out_opt_ PLDAPControl **ServerControls,_In_ BOOLEAN Freeit)
ULONG None wldap32.ldap_parse_resultW(_In_ LDAP *Connection,_In_ LDAPMessage *ResultMessage,_Out_opt_ ULONG *ReturnCode,_Out_opt_ PWCHAR *MatchedDNs,_Out_opt_ PWCHAR *ErrorMessage,_Out_opt_ PWCHAR **Referrals,_Out_opt_ PLDAPControl **ServerControls,_In_ BOOLEAN Freeit)
ULONG None wldap32.ldap_parse_resultA(_In_ LDAP *Connection,_In_ LDAPMessage *ResultMessage,_Out_opt_ ULONG *ReturnCode,_Out_opt_ PWCHAR *MatchedDNs,_Out_opt_ PWCHAR *ErrorMessage,_Out_opt_ PWCHAR **Referrals,_Out_opt_ PLDAPControl **ServerControls,_In_ BOOLEAN Freeit)
HRESULT None propsys.PropVariantToInt64(_In_ REFPROPVARIANT propvarIn,_Out_ LONGLONG *pllRet)
DWORD None iphlpapi.SetIpForwardEntry(_In_ PMIB_IPFORWARDROW pRoute)
HRESULT None propsys.PropVariantToDoubleVector(_In_ REFPROPVARIANT propvar,_Out_ DOUBLE *prgn,_In_ ULONG crgn,_Out_ ULONG *pcElem)
void None None.Page_Load(Object sender None,EventArgs e None)
public StringBuilder None.Append(char value None)
BOOL None None.TabCtrl_DeleteAllItems(HWND hwnd None)
HRESULT None fxscomex.OnOutboundRoutingGroupsConfigChange(IFaxServer2 *pFaxServer2 None)
int None None.Add(Object value None)
VOID FORCEINLINE None.TpSetCallbackNoActivationContext(_Inout_ PTP_CALLBACK_ENVIRON CallbackEnviron)
BOOL None jsproxy.InternetGetProxyInfo(_In_ LPCSTR lpszUrl,_In_ DWORD dwUrlLength,_In_ LPSTR lpszUrlHostName,_In_ DWORD dwUrlHostNameLength,_Out_ LPSTR *lplpszProxyHostName,_Out_ LPDWORD lpdwProxyHostNameLength)
static void None.DisplayAuthenticationProperties(NegotiateStream* stream None)
HRESULT None None.IntPtrToLong(_In_ INT_PTR iOperand,_Out_ LONG *plResult)
HRESULT None propsys.PropVariantToInt16Vector(_In_ REFPROPVARIANT propvar,_Out_ SHORT *prgn,_In_ ULONG crgn,_Out_ ULONG *pcElem)
HRESULT None None.put_PerPlayerConnectionBandwidth(long newVal None)
HRESULT None None.put_OutgoingDistributionBandwidth(long Val None)
NTSTATUS WINAPI ntdll.NtQueryInformationThread(_In_ HANDLE ThreadHandle,_In_ THREADINFOCLASS ThreadInformationClass,_Inout_ PVOID ThreadInformation,_In_ ULONG ThreadInformationLength,_Out_opt_ PULONG ReturnLength)
NETIOAPI_API None iphlpapi.NotifyTeredoPortChange(_In_ PTEREDO_PORT_CHANGE_CALLBACK Callback,_In_ PVOID CallerContext,_In_ BOOLEAN InitialNotification,_Inout_ HANDLE *NotificationHandle)
public ICustomTypeDescriptor None.GetTypeDescriptor(Object instance None)
HRESULT CALLBACK None.ProposeVideoPrivateFormat(HANDLE hDevice None,D3DFORMAT* pFormat None)
HCAPTURE WINAPI nmapi.GetFrameCaptureHandle(_In_ HFRAME hFrame)
HRESULT None None.BeginMemoryPressureQuery(IDirect3DDevice9Ex *pDevice None,IDirect3DQuery9 **ppQuery None)
HICON None shell32.DuplicateIcon(_Reserved_ HINSTANCE hInst,_In_ HICON hIcon)
NTSTATUS None None.SpApplyControlToken(_In_ LSA_SEC_HANDLE ContextHandle,_In_ PSecBufferDesc ControlToken)
HRESULT None None.SetPacketParser(IWMSPacketParser* pSource None)
BOOL WINAPI wintrust.OpenPersonalTrustDBDialog(_In_opt_ HWND hwndParent)
protected void None.OnColumnDividerWidthChanged(DataGridViewColumnEventArgs e None)
DWORD None ntdsapi.DsListRoles(_In_ HANDLE hDs,_Out_ PDS_NAME_RESULTW *ppRoles)
DWORD None ntdsapi.DsListRolesW(_In_ HANDLE hDs,_Out_ PDS_NAME_RESULTW *ppRoles)
DWORD None ntdsapi.DsListRolesA(_In_ HANDLE hDs,_Out_ PDS_NAME_RESULTW *ppRoles)
HRESULT None None.GetBuffer([out] BYTE **ppdwBuffer)
INT None None.PropVariantCompare(_In_ REFPROPVARIANT propvar1,_In_ REFPROPVARIANT propvar2)
IFsrmPipelineModuleDefinition None None.CreateModuleDefinition(_FsrmPipelineModuleType ModuleType None)
BOOL WINAPI kernel32.VirtualLock(_In_ LPVOID lpAddress,_In_ SIZE_T dwSize)
DWORD None rasapi32.RasSetEntryDialParams(_In_ LPCTSTR lpszPhonebook,_In_ LPRASDIALPARAMS lprasdialparams,_In_ BOOL fRemovePassword)
DWORD None rasapi32.RasSetEntryDialParamsW(_In_ LPCTSTR lpszPhonebook,_In_ LPRASDIALPARAMS lprasdialparams,_In_ BOOL fRemovePassword)
DWORD None rasapi32.RasSetEntryDialParamsA(_In_ LPCTSTR lpszPhonebook,_In_ LPRASDIALPARAMS lprasdialparams,_In_ BOOL fRemovePassword)
DWORD WINAPI ntdsapi.DsInheritSecurityIdentity(_In_ HANDLE hDS,_In_ DWORD Flags,_In_ LPCTSTR SrcPrincipal,_In_ LPCTSTR DstPrincipal)
DWORD WINAPI ntdsapi.DsInheritSecurityIdentityW(_In_ HANDLE hDS,_In_ DWORD Flags,_In_ LPCTSTR SrcPrincipal,_In_ LPCTSTR DstPrincipal)
DWORD WINAPI ntdsapi.DsInheritSecurityIdentityA(_In_ HANDLE hDS,_In_ DWORD Flags,_In_ LPCTSTR SrcPrincipal,_In_ LPCTSTR DstPrincipal)
HRESULT None None.LongPtrToUIntPtr(_In_ LONG_PTR lOperand,_Out_ UINT_PTR *puiResult)
NTSTATUS None None.DuplicateHandle(_In_ HANDLE SourceHandle,_Out_ PHANDLE DestinationHandle)
MI_INLINE MI_Result None.MI_OperationOptions_GetPromptUserMode(_In_ MI_OperationOptions *options,_Out_ MI_CallbackMode *mode)
MI_INLINE MI_Result None.MI_Application_NewDeserializer(_Inout_ MI_Application *application,MI_Uint32 flags None,_In_ MI_Char *format,_Out_ MI_Deserializer *deserializer)
ULONGLONG None propsys.VariantToUInt64WithDefault(_In_ REFVARIANT varIn,_In_ ULONGLONG ullDefault)
public IPermission None.Union(IPermission other None)
protected void None.OnDoubleClick(EventArgs e None)
HRESULT None fxscomex.OnIncomingJobChanged(IFaxServer2 *pFaxServer2 None,BSTR bstrJobId None,IFaxJobStatus *pJobStatus None)
COLORREF None None.TreeView_GetBkColor(HWND hwndTV None)
protected void None.button1_Click(Object sender None,System.EventArgs e None)
HRESULT None mf.MFCreateAggregateSource(_In_ IMFCollection *pSourceCollection,_Out_ IMFMediaSource **ppAggSource)
NTSTATUS None None.SpGetExtendedInformation(_In_ SECPKG_EXTENDED_INFORMATION_CLASS Class,_Out_ PSECPKG_EXTENDED_INFORMATION *ppInformation)
HRESULT None oleaut32.VarBstrFromDate(_In_ DATE dateIn,_In_ LCID lcid,_In_ ULONG dwFlags,_Out_ BSTR *pbstrOut)
HRESULT None None.DXVAHD_SetStreamFormat(IDXVAHD_VideoProcessor *pVP None,UINT stream None,D3DFORMAT format None)
HRESULT None wuapi.get_MinDownloadSize([out] DECIMAL *retval)
ULONG None wldap32.ldap_parse_reference(_In_ LDAP *Connection,_In_ LDAPMessage *ResultMessage,_Out_ PCHAR **Referrals)
ULONG None wldap32.ldap_parse_referenceW(_In_ LDAP *Connection,_In_ LDAPMessage *ResultMessage,_Out_ PCHAR **Referrals)
ULONG None wldap32.ldap_parse_referenceA(_In_ LDAP *Connection,_In_ LDAPMessage *ResultMessage,_Out_ PCHAR **Referrals)
LONG TSPIAPI None.TSPI_lineDevSpecificFeature(DRV_REQUESTID dwRequestID None,HDRVLINE hdLine None,DWORD dwFeature None,LPVOID lpParams None,DWORD dwSize None)
BOOL None wininet.InternetGetCookieEx(_In_ LPCTSTR lpszURL,_In_ LPCTSTR lpszCookieName,_Inout_opt_ LPTSTR lpszCookieData,_Inout_ LPDWORD lpdwSize,_In_ DWORD dwFlags,_In_ LPVOID lpReserved)
BOOL None wininet.InternetGetCookieExW(_In_ LPCTSTR lpszURL,_In_ LPCTSTR lpszCookieName,_Inout_opt_ LPTSTR lpszCookieData,_Inout_ LPDWORD lpdwSize,_In_ DWORD dwFlags,_In_ LPVOID lpReserved)
BOOL None wininet.InternetGetCookieExA(_In_ LPCTSTR lpszURL,_In_ LPCTSTR lpszCookieName,_Inout_opt_ LPTSTR lpszCookieData,_Inout_ LPDWORD lpdwSize,_In_ DWORD dwFlags,_In_ LPVOID lpReserved)
HRESULT None propsys.VariantGetStringElem(_In_ REFVARIANT var,_In_ ULONG iElem,_Out_ PWSTR *ppszVal)
HRESULT None None.AsyncDownload(VOID None None)
HRESULT None None.get_IsMultiTouch([out] VARIANT_BOOL pIsMultiTouch)
private void None.listDragTarget_DragOver(Object sender None,System.Windows.Forms.DragEventArgs e None)
protected MarshalByRefObject None.MemberwiseClone(boolean cloneIdentity None)
HRESULT None None.DWordPtrToLongPtr(_In_ DWORD_PTR dwOperand,_Out_ LONG_PTR *plResult)
HRESULT None None.get_IncomingBandwidth(long* pVal None)
NTSTATUS NTAPI advapi32.LsaGetAppliedCAPIDs(_In_opt_ PLSA_UNICODE_STRING SystemName,_Out_ PSID **CAPIDs,_Out_ PULONG CAPIDCount)
protected WebPart None.CopyWebPart(WebPart webPart None)
BOOL WINAPI dbghelp.SymRegisterFunctionEntryCallback64(_In_ HANDLE hProcess,_In_ PSYMBOL_FUNCENTRY_CALLBACK64 CallbackFunction,_In_ ULONG64 UserContext)
protected void None.button1_Click(Object sender None,System.EventArgs e None)
HRESULT None certenroll.get_MinorVersion([out] LONG *pValue)
SerializableAttribute None None.ClassInterfaceAttribute(ClassInterfaceType.None None None)
HRESULT None propsys.InitVariantFromStringArray(_In_ PCWSTR *prgsz,_In_ ULONG cElems,_Out_ VARIANT *pvar)
HRESULT None None.GetOleObject([out] IOleObject **ppobjv)
DWORD None mprapi.MprAdminInterfaceSetCredentialsEx(_In_ MPR_SERVER_HANDLE hMprServer,_In_ HANDLE hInterface,_In_ DWORD dwLevel,_In_ LPBYTE lpbBuffer)
HRESULT WINAPI None.EngineAdapterActivate(_Inout_ PWINBIO_PIPELINE Pipeline)
HRESULT None wuapi.get_DeltaCompressedContentPreferred([out] VARIANT_BOOL *retval)
HRESULT None wuapi.get_DownloadPriority([out] DownloadPriority *retval)
HRESULT None None.GetName([out] LPWSTR *ppsz)
HRESULT None faxcom.put_CoverpageNote([in] BSTR newVal)
private void None.NorthwindEmployeeInserting(Object source None,ObjectDataSourceMethodEventArgs e None)
private void None.Menu_Copy(Object sender None,System.EventArgs e None)
NTSTATUS None None.WdfRequestForwardToIoQueue(_In_ WDFREQUEST Request,_In_ WDFQUEUE DestinationQueue)
BOOL WINAPI kernel32.SetThreadPriorityBoost(_In_ HANDLE hThread,_In_ BOOL DisablePriorityBoost)
MI_INLINE MI_Result None.MI_Instance_Destruct(_Inout_ MI_Instance *self)
uint32 None dnsserverpsprovider.ImportByDSSet([in] string ComputerName,[in] string DSSetFile,[in] boolean PassThru,[out] DnsServerTrustAnchor cmdletOutput[])
HRESULT WINAPI webservices.WsResetMetadata(_In_ WS_METADATA* metadata,_In_opt_ WS_ERROR* error)
HRESULT None propsys.VariantGetUInt16Elem(_In_ REFVARIANT var,_In_ ULONG iElem,_Out_ USHORT *pnVal)
void None cluswmi.RemoveCryptoCheckpoint([in] string CheckpointName)
HRESULT None None.GetAttributeCount([out] DWORD *pcAttributes)
HINTERNET None wininet.FtpOpenFile(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszFileName,_In_ DWORD dwAccess,_In_ DWORD dwFlags,_In_ DWORD_PTR dwContext)
HINTERNET None wininet.FtpOpenFileW(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszFileName,_In_ DWORD dwAccess,_In_ DWORD dwFlags,_In_ DWORD_PTR dwContext)
HINTERNET None wininet.FtpOpenFileA(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszFileName,_In_ DWORD dwAccess,_In_ DWORD dwFlags,_In_ DWORD_PTR dwContext)
HRESULT None None.get_DiagnosticEvents(IWMSDiagnosticEvents** ppDiagEvents None)
protected Object None.GetLocalResourceObject(String resourceKey None)
HRESULT None None.GetFileRestoreStatus([out] VSS_FILE_RESTORE_STATUS *pStatus)
protected void None.RaisePostBackEvent(String eventArgument None)
HRESULT None oleaut32.VarBoolFromUI1(_In_ BYTE bIn,_Out_ VARIANT_BOOL *pboolOut)
HRESULT None mf.MFCreateASFMultiplexer(IMFASFMultiplexer **ppIMultiplexer None)
DWORD None rasapi32.RasRenameEntry(_In_ LPCTSTR lpszPhonebook,_In_ LPCTSTR lpszOldEntry,_In_ LPCTSTR lpszNewEntry)
DWORD None rasapi32.RasRenameEntryW(_In_ LPCTSTR lpszPhonebook,_In_ LPCTSTR lpszOldEntry,_In_ LPCTSTR lpszNewEntry)
DWORD None rasapi32.RasRenameEntryA(_In_ LPCTSTR lpszPhonebook,_In_ LPCTSTR lpszOldEntry,_In_ LPCTSTR lpszNewEntry)
HIMAGELIST None comctl32.ImageList_Duplicate(HIMAGELIST himl None)
DWORD WINAPI kernel32.GetProcessIdOfThread(_In_ HANDLE Thread)
private void None.showCheckedNodesButton_Click(Object sender None,EventArgs e None)
protected void None.OnStylusLeave(StylusEventArgs e None)
public None None.X509Certificate2(byte[] rawData None,String password None)
HRESULT None None.GetQueuePrivLevelProp(LPCWSTR wszQueueFormatName None,ULONG *pulValue None)
public boolean None.ContainsValue(Object value None)
public None None.X509Certificate2(String fileName None,SecureString password None)
protected void None.ConditionalExitLayout(XhtmlMobileTextWriter writer None,Style style None)
DWORD None virtdisk.QueryChangesVirtualDisk(_In_ HANDLE VirtualDiskHandle,_In_ PCWSTR ChangeTrackingId,_In_ ULONG64 ByteOffset,_In_ ULONG64 ByteLength,_In_ QUERY_CHANGES_VIRTUAL_DISK_FLAG Flags,_Out_ PQUERY_CHANGES_VIRTUAL_DISK_RANGE Ranges,_Inout_ PULONG RangeCount,_Out_ PULONG64 ProcessedLength)
DWORD None ntdsapi.DsRemoveDsDomain(_In_ HANDLE hDs,_In_ LPTSTR DomainDN)
DWORD None ntdsapi.DsRemoveDsDomainW(_In_ HANDLE hDs,_In_ LPTSTR DomainDN)
DWORD None ntdsapi.DsRemoveDsDomainA(_In_ HANDLE hDs,_In_ LPTSTR DomainDN)
int None None.CompareTo(T other None)
private void None.myButtonPrint_OnClick(Object sender None,System.EventArgs e None)
BOOLAPI None wininet.DeleteUrlCacheEntry(_In_ LPCTSTR lpszUrlName)
BOOLAPI None wininet.DeleteUrlCacheEntryW(_In_ LPCTSTR lpszUrlName)
BOOLAPI None wininet.DeleteUrlCacheEntryA(_In_ LPCTSTR lpszUrlName)
BOOL WINAPI kernel32.GetUmsSystemThreadInformation(_In_ HANDLE ThreadHandle,_Inout_ PUMS_SYSTEM_THREAD_INFORMATION SystemThreadInfo)
BOOL WINAPI userenv.LoadUserProfile(_In_ HANDLE hToken,_Inout_ LPPROFILEINFO lpProfileInfo)
BOOL WINAPI userenv.LoadUserProfileW(_In_ HANDLE hToken,_Inout_ LPPROFILEINFO lpProfileInfo)
BOOL WINAPI userenv.LoadUserProfileA(_In_ HANDLE hToken,_Inout_ LPPROFILEINFO lpProfileInfo)
HRESULT None None.Copyright(LPWSTR *ppszCopyright None)
VOID WINAPI kernel32.SetThreadpoolThreadMaximum(_Inout_ PTP_POOL ptpp,_In_ DWORD cthrdMost)
protected void None.OnIsMouseDirectlyOverChanged(DependencyPropertyChangedEventArgs e None)
HRESULT None faxcom.put_SenderCompany([in] BSTR newVal)
HRESULT None None.ShortToUShort(_In_ SHORT sOperand,_Out_ USHORT *pusResult)
BOOL None wininet.InternetCreateUrl(_In_ LPURL_COMPONENTS lpUrlComponents,_In_ DWORD dwFlags,_Out_ LPTSTR lpszUrl,_Inout_ LPDWORD lpdwUrlLength)
BOOL None wininet.InternetCreateUrlW(_In_ LPURL_COMPONENTS lpUrlComponents,_In_ DWORD dwFlags,_Out_ LPTSTR lpszUrl,_Inout_ LPDWORD lpdwUrlLength)
BOOL None wininet.InternetCreateUrlA(_In_ LPURL_COMPONENTS lpUrlComponents,_In_ DWORD dwFlags,_Out_ LPTSTR lpszUrl,_Inout_ LPDWORD lpdwUrlLength)
DWORD None wininet.InternetDial(_In_ HWND hwndParent,_In_ LPTSTR pszEntryName,_In_ DWORD dwFlags,_Out_ DWORD_PTR *lpdwConnection,_In_ DWORD dwReserved)
DWORD None wininet.InternetDialW(_In_ HWND hwndParent,_In_ LPTSTR pszEntryName,_In_ DWORD dwFlags,_Out_ DWORD_PTR *lpdwConnection,_In_ DWORD dwReserved)
DWORD None wininet.InternetDialA(_In_ HWND hwndParent,_In_ LPTSTR pszEntryName,_In_ DWORD dwFlags,_Out_ DWORD_PTR *lpdwConnection,_In_ DWORD dwReserved)
HRESULT WINAPI websocket.WebSocketGetAction(_In_ WEB_SOCKET_HANDLE hWebSocket,_In_ WEB_SOCKET_ACTION_QUEUE eActionQueue,_Inout_ WEB_SOCKET_BUFFER *pDataBuffers,_Inout_ ULONG *pulDataBufferCount,_Out_ WEB_SOCKET_ACTION *pAction,_Out_ WEB_SOCKET_BUFFER_TYPE *pBufferType,_Out_opt_ PVOID *pvApplicationContext,_Out_ PVOID *pvActionContext)
UInt32 None None.SetWriteCache([in] Boolean WriteCacheEnabled,[out] String ExtendedStatus)
ULONG None wldap32.ldap_delete_s(_In_ LDAP *ld,_In_ PCHAR dn)
ULONG None wldap32.ldap_delete_sW(_In_ LDAP *ld,_In_ PCHAR dn)
ULONG None wldap32.ldap_delete_sA(_In_ LDAP *ld,_In_ PCHAR dn)
HRESULT None None.Int8ToUChar(_In_ INT8 i8Operand,_Out_ UCHAR *pch)
DWORD WINAPI clusapi.ClusterNetworkControl(_In_ HNETWORK hNetwork,_In_opt_ HNODE hHostNode,_In_ DWORD dwControlCode,_In_opt_ LPVOID lpInBuffer,_In_ DWORD nInBufferSize,_Out_opt_ LPVOID lpOutBuffer,_In_ DWORD nOutBufferSize,_Inout_opt_ LPDWORD lpBytesReturned)
protected boolean None.ShouldApplyItemContainerStyle(DependencyObject container None,Object item None)
uint32 None dmwmibridgeprov.UpgradeEditionWithLicenseMethod([in] string param)
BOOL None None.IsVariantString(_In_ REFVARIANT var)
HTREEITEM None None.TreeView_GetParent(HWND hwndTV None,HTREEITEM hitem None)
HRESULT None None.IsVisible([out] VARIANT_BOOL *pvbShown)
BOOL WINAPI crypt32.CertAddEnhancedKeyUsageIdentifier(_In_ PCCERT_CONTEXT pCertContext,_In_ LPCSTR pszUsageIdentifier)
BOOL None wininet.FtpRemoveDirectory(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszDirectory)
BOOL None wininet.FtpRemoveDirectoryW(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszDirectory)
BOOL None wininet.FtpRemoveDirectoryA(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszDirectory)
void None None.SetAttribute(String name None,String value None)
BOOL None shlwapi.PathStripToRoot(_Inout_ LPTSTR szRoot)
BOOL None shlwapi.PathStripToRootW(_Inout_ LPTSTR szRoot)
BOOL None shlwapi.PathStripToRootA(_Inout_ LPTSTR szRoot)
DWORD None mprapi.MprAdminInterfaceSetCredentialsEx(_In_ MPR_SERVER_HANDLE hMprServer,_In_ HANDLE hInterface,_In_ DWORD dwLevel,_In_ LPBYTE lpbBuffer)
HRESULT None mfplat.MFTEnum(_In_ GUID guidCategory,_In_ UINT32 Flags,_In_ MFT_REGISTER_TYPE_INFO *pInputType,_In_ MFT_REGISTER_TYPE_INFO *pOutputType,_In_ IMFAttributes *pAttributes,_Out_ CLSID **ppclsidMFT,_Out_ UINT32 *pcMFTs)
void None None.OnComponentChanging(Object component None,MemberDescriptor member None)
function None None.ReceiveServerData(arg None None,context None None)
HRESULT None oleaut32.VarUI1FromI4(_In_ LONG lIn,_Out_ BYTE *pbOut)
HRESULT None fxscomex.put_CoverPage(BSTR bstrCoverPage None)
HRESULT None oleaut32.VarUI1FromDisp(IDispatch *pdispIn None,_In_ LCID lcid,_Out_ BYTE *pbOut)
HRESULT None oleaut32.VarUI8FromI1(_In_ CHAR cIn,_Out_ ULONG64 *pi64Out)
HRESULT None evr.MFCreateDXSurfaceBuffer(_In_ REFIID riid,_In_ IUnknown *punkSurface,_In_ BOOL fBottomUpWhenLinear,_Out_ IMFMediaBuffer **ppBuffer)
HRESULT None oleaut32.VarI2FromUI8(_In_ ULONG64 ui64In,_Out_ SHORT *psOut)
public WebResponse None.EndGetResponse(IAsyncResult asyncResult None)
HRESULT None fxscomex.put_Company(BSTR bstrCompany None)
NTSTATUS None None.SpQueryCredentialsAttributes(_In_ LSA_SEC_HANDLE CredentialHandle,_In_ ULONG CredentialAttribute,_Out_ PVOID Buffer)
HRESULT None None.GetFillBrushLocal([out None None,retval] IXpsOMBrush **brush)
HRESULT WINAPI None.EngineAdapterQueryIndexVectorSize(_Inout_ PWINBIO_PIPELINE Pipeline,_Out_ PSIZE_T IndexElementCount)
HRESULT None None.InitVariantFromInt64(_In_ LONGLONG llVal,_Out_ VARIANT *pvar)
HRESULT None None.CreateAuthenticatedChannel(D3DAUTHENTICATEDCHANNELTYPE ChannelType None,IDirect3DAuthenticatedChannel9 **ppAuthenticatedChannel None,HANDLE *pChannelHandle None)
uint32 None dnsserverpsprovider.GetByUnknown([in] string Name,[in] string ComputerName,[in] string ZoneName,[in] boolean Node,[in] string ZoneScope,[in] uint16 Type,[out] DnsServerResourceRecord cmdletOutput[])
public void None.DrawIcon(Icon icon None,Rectangle targetRect None)
HRESULT None mstscax.get_AdvancedSettings([out] IMsTscAdvancedSettings **ppAdvSettings)
DWORD None rasapi32.RasDeleteSubEntry(_In_ LPCTSTR lpszPhonebook,_In_ LPCTSTR lpszEntry,_In_ DWORD dwSubEntryId)
DWORD None rasapi32.RasDeleteSubEntryW(_In_ LPCTSTR lpszPhonebook,_In_ LPCTSTR lpszEntry,_In_ DWORD dwSubEntryId)
DWORD None rasapi32.RasDeleteSubEntryA(_In_ LPCTSTR lpszPhonebook,_In_ LPCTSTR lpszEntry,_In_ DWORD dwSubEntryId)
public void None.SetRegistryValueMultistring(RegistryKey keyRoot None,String keyPath None,String valueName None,String data None)
DOUBLE None propsys.VariantToDoubleWithDefault(_In_ REFVARIANT varIn,_In_ DOUBLE dblDefault)
BOOL WINAPI kernel32.IsWow64Process2(_In_ HANDLE hProcess,_Out_ USHORT *pProcessMachine,_Out_opt_ USHORT *pNativeMachine)
SECURITY_STATUS WINAPI schannel.SslGetServerIdentity(_In_ PBYTE ClientHello,_In_ DWORD ClientHelloSize,_Out_ PBYTE *ServerIdentity,_Out_ PDWORD ServerIdentitySize,_In_ DWORD Flags)
HRESULT None None.GetQueueJournalProp(LPCWSTR wszQueueFormatName None,UCHAR *pbValue None)
public DateTime None.AddYears(int value None)
void None cluswmi.SetPreferredOwners([in] string NodeNames[])
HRESULT WINAPI webservices.WsCheckMustUnderstandHeaders(_In_ WS_MESSAGE* message,_In_opt_ WS_ERROR* error)
HRESULT None None.get_TargetLoad([out None None,retval] DWORD *pTargetLoad)
DWORD None mpr.WNetGetConnection(_In_ LPCTSTR lpLocalName,_Out_ LPTSTR lpRemoteName,_Inout_ LPDWORD lpnLength)
DWORD None mpr.WNetGetConnectionW(_In_ LPCTSTR lpLocalName,_Out_ LPTSTR lpRemoteName,_Inout_ LPDWORD lpnLength)
DWORD None mpr.WNetGetConnectionA(_In_ LPCTSTR lpLocalName,_Out_ LPTSTR lpRemoteName,_Inout_ LPDWORD lpnLength)
DWORD WINAPI virtdisk.BreakMirrorVirtualDisk(_In_ HANDLE VirtualDiskHandle)
uint32 None dnsserverpsprovider.ImportByDSSet([in] string ComputerName,[in] string DSSetFile,[in] boolean PassThru,[out] DnsServerTrustAnchor cmdletOutput[])
uint32 None cimwin32.SetTcpWindowSize([in] uint16 TcpWindowSize)
public int None.GetDaysInMonth(int year None,int month None,int era None)
HRESULT None None.SetQueueAuthenticateProp(LPCWSTR wszQueueFormatName None,UCHAR bValue None)
HRESULT None None.UIntToUChar(_In_ UINT uOperand,_Out_ UCHAR *pch)
HRESULT None None.get_HardwareCapabilities([out None None,retval] TabletHardwareCapabilities *Capabilities)
HRESULT None tapi3.get_Tone([out] PHONE_TONE *pTone)
HRESULT None wuapi.get_Title([out] BSTR *retval)
HRESULT None None.IntToDWordPtr(_In_ INT iOperand,_Out_ DWORD_PTR *pdwResult)
protected void None.ConditionalPopPhysicalCssClass(XhtmlMobileTextWriter writer None)
NTSTATUS None None.SpGetUserInfo(_In_ PLUID LogonId,_In_ ULONG Flags,_Out_ PSecurityUserData *UserData)
HRESULT None None.GetSnapinDescription([out] LPOLESTR *lpDescription)
DWORD None None.NPCloseEnum(_In_ HANDLE hEnum)
HRESULT None oleaut32.VarUI2FromDisp(_In_ IDispatch *pdispIn,_In_ LCID lcid,_Out_ USHORT *puiOut)
HRESULT None None.SetColumns(DBORDINAL cColumns None,DBCOLUMNACCESS rgColumns[ ])
LONG TSPIAPI None.TSPI_lineGetDevCaps(DWORD dwDeviceID None,DWORD dwTSPIVersion None,DWORD dwExtVersion None,LPLINEDEVCAPS lpLineDevCaps None)
LONG WINAPI winscard.SCardListReaderGroups(_In_ SCARDCONTEXT hContext,_Out_ LPTSTR mszGroups,_Inout_ LPDWORD pcchGroups)
LONG WINAPI winscard.SCardListReaderGroupsW(_In_ SCARDCONTEXT hContext,_Out_ LPTSTR mszGroups,_Inout_ LPDWORD pcchGroups)
LONG WINAPI winscard.SCardListReaderGroupsA(_In_ SCARDCONTEXT hContext,_Out_ LPTSTR mszGroups,_Inout_ LPDWORD pcchGroups)
public None None.SoapReflectionImporter(String defaultNamespace None)
DWORD None rasapi32.RasGetSubEntryProperties(_In_ LPCTSTR lpszPhonebook,_In_ LPCTSTR lpszEntry,_In_ DWORD dwSubEntry,_Inout_ LPRASSUBENTRY lpRasSubEntry,_Inout_ LPDWORD lpdwcb,_In_ LPBYTE lpbDeviceConfig,_In_ LPDWORD lpcbDeviceConfig)
DWORD None rasapi32.RasGetSubEntryPropertiesW(_In_ LPCTSTR lpszPhonebook,_In_ LPCTSTR lpszEntry,_In_ DWORD dwSubEntry,_Inout_ LPRASSUBENTRY lpRasSubEntry,_Inout_ LPDWORD lpdwcb,_In_ LPBYTE lpbDeviceConfig,_In_ LPDWORD lpcbDeviceConfig)
DWORD None rasapi32.RasGetSubEntryPropertiesA(_In_ LPCTSTR lpszPhonebook,_In_ LPCTSTR lpszEntry,_In_ DWORD dwSubEntry,_Inout_ LPRASSUBENTRY lpRasSubEntry,_Inout_ LPDWORD lpdwcb,_In_ LPBYTE lpbDeviceConfig,_In_ LPDWORD lpcbDeviceConfig)
public void None.EndAuthenticateAsServer(IAsyncResult asyncResult None)
HRESULT None None.Image(LPWSTR *ppszImageUrl None)
HRESULT None None.IntToULongPtr(_In_ INT iOperand,_Out_ ULONG_PTR *pulResult)
HRESULT None None.GetCount([out None None,retval] UINT32 *count)
boolean None None.Remove(TKey key None)
BOOL None wininet.FtpSetCurrentDirectory(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszDirectory)
BOOL None wininet.FtpSetCurrentDirectoryW(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszDirectory)
BOOL None wininet.FtpSetCurrentDirectoryA(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszDirectory)
HRESULT WINAPI None.EngineAdapterQuerySampleHint(_Inout_ PWINBIO_PIPELINE Pipeline,_Out_ PSIZE_T SampleHint)
HRESULT None mfplat.MFFrameRateToAverageTimePerFrame(_In_ UINT32 unNumerator,_In_ UINT32 unDenominator,_Out_ UINT64 *punAverageTimePerFrame)
public Object None.ReadObject(Stream stream None)
HRESULT None None.Title(LPWSTR *ppszTitle None)
HRESULT None oleaut32.VarI8FromUI1(_In_ BYTE bIn,_Out_ LONG64 *pi64Out)
HRESULT None oleaut32.VarI8FromI1(_In_ CHAR cIn,_Out_ LONG64 *pi64Out)
HRESULT None mstscax.get_TouchPointer([out None None,retval] RemoteDesktopClientTouchPointer **TouchPointer)
SECURITY_STATUS None sspicli.SspiGetTargetHostName(_In_ PCWSTR pszTargetName,_Out_ PWSTR *pszHostName)
protected void None.OnPageIndexChanging(GridViewPageEventArgs e None)
HRESULT None propsys.VariantToUInt16Array(_In_ REFVARIANT var,_Out_ USHORT *prgn,_In_ ULONG crgn,_Out_ ULONG *pcElem)
HRESULT None propsys.VariantToUInt64(_In_ REFVARIANT varIn,_Out_ ULONGLONG *pullRet)
HRESULT WINAPI webservices.WsReadEnvelopeEnd(_In_ WS_MESSAGE* message,_In_opt_ WS_ERROR* error)
WDFDEVICE None None.WdfWdmDeviceGetWdfDeviceHandle(_In_ PDEVICE_OBJECT DeviceObject)
public void None.CopyTo(TreeNode[] nodeArray None,int index None)
HRESULT None mobsync.SetConnection([out] LPCWSTR pwszConnectionName,[out] DWORD dwConnType)
HRESULT None propsys.PropVariantToStringVector(_In_ REFPROPVARIANT propvar,_Out_ PWSTR *prgsz,_In_ ULONG crgsz,_Out_ ULONG *pcElem)
HRESULT None None.put_ConnectionRate(long Val None)
HRESULT None fxscomex.OnOutgoingMessageAdded(IFaxServer2 *pFaxServer2 None,BSTR bstrMessageId None)
HRESULT None srmsvc.CreatePropertyDefinition([out] IFsrmPropertyDefinition **propertyDefinition)
HRESULT None wuapi.get_Description([out] BSTR *retval)
LONGLONG WINAPI mfplat.MFllMulDiv(LONGLONG a None,LONGLONG b None,LONGLONG c None,LONGLONG d None)
HRESULT None None.ULongLongToULong(_In_ ULONGLONG ullOperand,_Out_ ULONG *pulResult)
HRESULT None mfplat.MFInitVideoFormat(_Out_ MFVIDEOFORMAT *pVideoFormat,_In_ MFStandardVideoFormat type)
HRESULT None wuapi.get_IsBeta([out] VARIANT_BOOL *retval)
DWORD None rasapi32.RasSetCredentials(_In_ LPCTSTR lpszPhonebook,_In_ LPCTSTR lpszEntry,_In_ LPRASCREDENTIALS lpCredentials,_In_ BOOL fClearCredentials)
DWORD None rasapi32.RasSetCredentialsW(_In_ LPCTSTR lpszPhonebook,_In_ LPCTSTR lpszEntry,_In_ LPRASCREDENTIALS lpCredentials,_In_ BOOL fClearCredentials)
DWORD None rasapi32.RasSetCredentialsA(_In_ LPCTSTR lpszPhonebook,_In_ LPCTSTR lpszEntry,_In_ LPRASCREDENTIALS lpCredentials,_In_ BOOL fClearCredentials)
public boolean None.CanConvertTo(Type destinationType None)
public WebResponse None.EndGetResponse(IAsyncResult asyncResult None)
void None None.InterlockedAnd(in R dest,in T value,out T original_value)
DWORD None rasapi32.RasSetSubEntryProperties(_In_ LPCTSTR lpszPhonebook,_In_ LPCTSTR lpszEntry,_In_ DWORD dwSubEntry,_In_ LPRASSUBENTRY lpRasSubEntry,_In_ DWORD dwcbRasSubEntry,_In_ LPBYTE lpbDeviceConfig,_In_ DWORD dwcbDeviceConfig)
DWORD None rasapi32.RasSetSubEntryPropertiesW(_In_ LPCTSTR lpszPhonebook,_In_ LPCTSTR lpszEntry,_In_ DWORD dwSubEntry,_In_ LPRASSUBENTRY lpRasSubEntry,_In_ DWORD dwcbRasSubEntry,_In_ LPBYTE lpbDeviceConfig,_In_ DWORD dwcbDeviceConfig)
DWORD None rasapi32.RasSetSubEntryPropertiesA(_In_ LPCTSTR lpszPhonebook,_In_ LPCTSTR lpszEntry,_In_ DWORD dwSubEntry,_In_ LPRASSUBENTRY lpRasSubEntry,_In_ DWORD dwcbRasSubEntry,_In_ LPBYTE lpbDeviceConfig,_In_ DWORD dwcbDeviceConfig)
protected void None.OnInit(EventArgs e None)
public XmlTypeMapping None.ImportTypeMapping(Type type None)
HRESULT None None.get_ControlViewCondition([out None None,retval] IUIAutomationCondition **condition)
HRESULT None propsys.PropVariantToBoolean(_In_ REFPROPVARIANT propvarIn,_Out_ BOOL *pfRet)
uint32 None dnsserverpsprovider.AddByX25([in] string PsdnAddress,[in] string ZoneName,[in] datetime TimeToLive,[in] boolean X25,[in] boolean AllowUpdateAny,[in] string Name,[in] string ComputerName,[in] boolean AgeRecord,[in] boolean PassThru,[in] string ZoneScope,[out] DnsServerResourceRecord cmdletOutput)
HRESULT None None.ReleaseErrors(const DWORD dwDynamicErrorID)
uint32 None dnsserverpsprovider.AddByTxt([in] string DescriptiveText,[in] datetime TimeToLive,[in] string ZoneName,[in] boolean AllowUpdateAny,[in] string Name,[in] string ComputerName,[in] boolean AgeRecord,[in] boolean Txt,[in] boolean PassThru,[in] string ZoneScope,[out] DnsServerResourceRecord cmdletOutput)
VOID WINAPI websocket.WebSocketDeleteHandle(_In_ WEB_SOCKET_HANDLE hWebSocket)
DWORD None mprapi.MprConfigInterfaceSetInfo(_In_ HANDLE hMprConfig,_In_ HANDLE hRouterInterface,_In_ DWORD dwLevel,_In_ LPBYTE lpBuffer)
HRESULT None propsys.VariantToBuffer(_In_ REFVARIANT varIn,_Out_ VOID *pv,_In_ UINT cb)
HRESULT None None.GetIdealVideoSize([out] SIZE *pszMin,[out] SIZE *pszMax)
public None None.SoapReflectionImporter(SoapAttributeOverrides attributeOverrides None)
BOOLEAN None wldap32.ldap_stop_tls_s(_In_ PLDAP ExternalHandle)
protected void None.OnAfterSelect(TreeViewEventArgs e None)
HRESULT None fxscomex.OnDevicesConfigChange(IFaxServer2 *pFaxServer2 None)
COLOREF None None.TreeView_GetLineColor(HWND hwndTV None)
HRESULT None None.GetPreRestoreFailureMsg([out] BSTR *pbstrPreRestoreFailureMsg)
SerializableAttribute None None.ClassInterfaceAttribute(ClassInterfaceType.AutoDual None None)
HRESULT None propsys.PropVariantToUInt32(_In_ REFPROPVARIANT propvarIn,_Out_ ULONG *pulRet)
BOOL WINAPI kernel32.VirtualUnlock(_In_ LPVOID lpAddress,_In_ SIZE_T dwSize)
void None None.LogErrorEvent(BuildErrorEventArgs e None)
HRESULT None wuapi.get_HandlerID([out] BSTR *retval)
HRESULT None msdrm.DRMClosePubHandle(_In_ DRMPUBHANDLE hPub)
HRESULT None None.Clone([out] IMFASFStreamPrioritization **ppIStreamPrioritization)
protected void None.OnPreviewGiveFeedback(GiveFeedbackEventArgs e None)
protected void None.OnMouseMove(MouseEventArgs e None)
public Type None.MakeGenericType(Type[] typeArguments None)
HRESULT None None.Move(LPCWSTR pszPath None)
uint32 None dnsserverpsprovider.AddByFileForwardLookupZone([in] string ResponsiblePerson,[in] string DynamicUpdate,[in] boolean LoadExisting,[in] string ComputerName,[in] string Name,[in] string ZoneFile,[in] boolean PassThru,[out] DnsServerPrimaryZone cmdletOutput)
uint32 None dnsserverpsprovider.AddBySrv([in] string DomainName,[in] uint16 Priority,[in] uint16 Weight,[in] string ZoneName,[in] uint16 Port,[in] datetime TimeToLive,[in] boolean AllowUpdateAny,[in] string Name,[in] string ComputerName,[in] boolean AgeRecord,[in] boolean Srv,[in] boolean PassThru,[in] string ZoneScope,[out] DnsServerResourceRecord cmdletOutput)
IFsrmDerivedObjectsResult None None.CommitAndUpdateDerived(_FsrmCommitOptions commitOptions None,_FsrmTemplateApplyOptions applyOptions None)
DWORD None rasapi32.rasgetnapstatus(_In_ HRASCONN hRasConn,_Inout_ LPRASNAPSTATE pNapState)
LONG None scarddlg.GetOpenCardName(_In_ LPOPENCARDNAME pDlgStruc)
LONG None scarddlg.GetOpenCardNameW(_In_ LPOPENCARDNAME pDlgStruc)
LONG None scarddlg.GetOpenCardNameA(_In_ LPOPENCARDNAME pDlgStruc)
HRESULT None None.ULongToShort(_In_ ULONG ulOperand,_Out_ SHORT *psResult)
DWORD None None.WlxQueryTerminalServicesData(_In_ HANDLE hWlx,_Out_ PWLX_TERMINAL_SERVICES_DATA pTSData,_In_ WCHAR *UserName,_In_ WCHAR *Domain)
protected void None.OnVisualParentChanged(DependencyObject oldParent None)
HRESULT None wuapi.get_AutoSelectOnWebSites([out] VARIANT_BOOL *retval)
BOOL WINAPI advapi32.CryptGenRandom(_In_ HCRYPTPROV hProv,_In_ DWORD dwLen,_Inout_ BYTE *pbBuffer)
PDH_STATUS None pdh.PdhLookupPerfNameByIndex(_In_ LPCTSTR szMachineName,_In_ DWORD dwNameIndex,_Out_ LPTSTR szNameBuffer,_Inout_ LPDWORD pcchNameBufferSize)
PDH_STATUS None pdh.PdhLookupPerfNameByIndexW(_In_ LPCTSTR szMachineName,_In_ DWORD dwNameIndex,_Out_ LPTSTR szNameBuffer,_Inout_ LPDWORD pcchNameBufferSize)
PDH_STATUS None pdh.PdhLookupPerfNameByIndexA(_In_ LPCTSTR szMachineName,_In_ DWORD dwNameIndex,_Out_ LPTSTR szNameBuffer,_Inout_ LPDWORD pcchNameBufferSize)
protected void None.OnCausesValidationChanged(EventArgs e None)
HRESULT None msftedit.TxActivate(LONG *plOldState None)
HRESULT None None.SIZETToULong(_In_ SIZE_T cbOperand,_Out_ ULONG *pulResult)
public void None.Save(String filename None)
BOOLAPI None wininet.RetrieveUrlCacheEntryFile(_In_ LPCTSTR lpszUrlName,_Out_ LPINTERNET_CACHE_ENTRY_INFO lpCacheEntryInfo,_Inout_ LPDWORD lpcbCacheEntryInfo,_In_ DWORD dwReserved)
BOOLAPI None wininet.RetrieveUrlCacheEntryFileW(_In_ LPCTSTR lpszUrlName,_Out_ LPINTERNET_CACHE_ENTRY_INFO lpCacheEntryInfo,_Inout_ LPDWORD lpcbCacheEntryInfo,_In_ DWORD dwReserved)
BOOLAPI None wininet.RetrieveUrlCacheEntryFileA(_In_ LPCTSTR lpszUrlName,_Out_ LPINTERNET_CACHE_ENTRY_INFO lpCacheEntryInfo,_Inout_ LPDWORD lpcbCacheEntryInfo,_In_ DWORD dwReserved)
HRESULT None faxcom.put_EmailAddress([in] BSTR newVal)
HRESULT None oleaut32.VarUI1FromCy(_In_ CY cyIn,_Out_ BYTE *pbOut)
HRESULT None oleaut32.VarDateFromStr(_In_ LPCOLESTR strIn,_In_ LCID lcid,_In_ ULONG dwFlags,_Out_ DATE *pdateOut)
uint32 None dnsserverpsprovider.SetByInputObject([in] boolean PassThru,[in] string ComputerName,[in] DnsServerPolicy InputObject,[in] string ZoneName,[out] DnsServerPolicy cmdletOutput)
BOOL None None.WlxActivateUserShell(_In_ PVOID pWlxContext,_In_ PWSTR pszDesktopName,_In_ PWSTR pszMprLogonScript,_In_ PVOID pEnvironment)
HRESULT None None.get_Ascender([out None None,retval] VARIANT *Ascender)
ULONG None wldap32.ldap_result2error(_In_ LDAP *ld,_In_ LDAPMessage *res,_In_ ULONG freeit)
public int None.IndexOf(String value None)
ULONG None wldap32.ldap_modrdn2_s(_In_ LDAP *ExternalHandle,_In_ PCHAR DistinguishedName,_In_ PCHAR NewDistinguishedName,_In_ INT DeleteOldRdn)
ULONG None wldap32.ldap_modrdn2_sW(_In_ LDAP *ExternalHandle,_In_ PCHAR DistinguishedName,_In_ PCHAR NewDistinguishedName,_In_ INT DeleteOldRdn)
ULONG None wldap32.ldap_modrdn2_sA(_In_ LDAP *ExternalHandle,_In_ PCHAR DistinguishedName,_In_ PCHAR NewDistinguishedName,_In_ INT DeleteOldRdn)
private void None.On_Click(Object source None,System.EventArgs e None)
SECURITY_STATUS SEC_Entry secur32.QueryContextAttributes(_In_ PCtxtHandle phContext,_In_ ULONG ulAttribute,_Out_ PVOID pBuffer)
SECURITY_STATUS SEC_Entry secur32.QueryContextAttributesW(_In_ PCtxtHandle phContext,_In_ ULONG ulAttribute,_Out_ PVOID pBuffer)
SECURITY_STATUS SEC_Entry secur32.QueryContextAttributesA(_In_ PCtxtHandle phContext,_In_ ULONG ulAttribute,_Out_ PVOID pBuffer)
BOOL None advapi32.LogonUserEx(_In_ LPTSTR lpszUsername,_In_opt_ LPTSTR lpszDomain,_In_opt_ LPTSTR lpszPassword,_In_ DWORD dwLogonType,_In_ DWORD dwLogonProvider,_Out_opt_ PHANDLE phToken,_Out_opt_ PSID *ppLogonSid,_Out_opt_ PVOID *ppProfileBuffer,_Out_opt_ LPDWORD pdwProfileLength,_Out_opt_ PQUOTA_LIMITS pQuotaLimits)
BOOL None advapi32.LogonUserExW(_In_ LPTSTR lpszUsername,_In_opt_ LPTSTR lpszDomain,_In_opt_ LPTSTR lpszPassword,_In_ DWORD dwLogonType,_In_ DWORD dwLogonProvider,_Out_opt_ PHANDLE phToken,_Out_opt_ PSID *ppLogonSid,_Out_opt_ PVOID *ppProfileBuffer,_Out_opt_ LPDWORD pdwProfileLength,_Out_opt_ PQUOTA_LIMITS pQuotaLimits)
BOOL None advapi32.LogonUserExA(_In_ LPTSTR lpszUsername,_In_opt_ LPTSTR lpszDomain,_In_opt_ LPTSTR lpszPassword,_In_ DWORD dwLogonType,_In_ DWORD dwLogonProvider,_Out_opt_ PHANDLE phToken,_Out_opt_ PSID *ppLogonSid,_Out_opt_ PVOID *ppProfileBuffer,_Out_opt_ LPDWORD pdwProfileLength,_Out_opt_ PQUOTA_LIMITS pQuotaLimits)
HRESULT None None.GetParentSite([out] IOleInPlaceSite **ppipsite)
public boolean None.Equals(Object obj None)
VOID WINAPI websocket.WebSocketAbortHandle(_In_ WEB_SOCKET_HANDLE hWebSocket)
HRESULT None propsys.VariantGetInt16Elem(_In_ REFVARIANT var,_In_ ULONG iElem,_Out_ SHORT *pnVal)
HRESULT None None.GetBindings(HACCESSOR hAccessor None,DBACCESSORFLAGS *pdwAccessorFlags None,DBCOUNTITEM *pcBindings None,DBBINDING **prgBindings None)
UINT None msi.MsiDatabaseMerge(_In_ MSIHANDLE hDatabase,_In_ MSIHANDLE hDatabaseMerge,_In_ LPCTSTR szTableName)
UINT None msi.MsiDatabaseMergeW(_In_ MSIHANDLE hDatabase,_In_ MSIHANDLE hDatabaseMerge,_In_ LPCTSTR szTableName)
UINT None msi.MsiDatabaseMergeA(_In_ MSIHANDLE hDatabase,_In_ MSIHANDLE hDatabaseMerge,_In_ LPCTSTR szTableName)
HRESULT None propsys.PropVariantToBSTR(_In_ REFPROPVARIANT propvar,_Out_ BSTR *pbstrOut)
BOOL None imm32.ImmEnumInputContext(_In_ DWORD idThread,_In_ IMCENUMPROC lpfn,_In_ LPARAM lParam)
LONG WINAPI advapi32.RegEnumKeyEx(_In_ HKEY hKey,_In_ DWORD dwIndex,_Out_ LPTSTR lpName,_Inout_ LPDWORD lpcName,_Reserved_ LPDWORD lpReserved,_Inout_ LPTSTR lpClass,_Inout_opt_ LPDWORD lpcClass,_Out_opt_ PFILETIME lpftLastWriteTime)
LONG WINAPI advapi32.RegEnumKeyExW(_In_ HKEY hKey,_In_ DWORD dwIndex,_Out_ LPTSTR lpName,_Inout_ LPDWORD lpcName,_Reserved_ LPDWORD lpReserved,_Inout_ LPTSTR lpClass,_Inout_opt_ LPDWORD lpcClass,_Out_opt_ PFILETIME lpftLastWriteTime)
LONG WINAPI advapi32.RegEnumKeyExA(_In_ HKEY hKey,_In_ DWORD dwIndex,_Out_ LPTSTR lpName,_Inout_ LPDWORD lpcName,_Reserved_ LPDWORD lpReserved,_Inout_ LPTSTR lpClass,_Inout_opt_ LPDWORD lpcClass,_Out_opt_ PFILETIME lpftLastWriteTime)
HRESULT None mfplat.MFCreateStreamOnMFByteStream(_In_ IMFByteStream *pByteStream,_Out_ IStream **ppStream)
HRESULT None mfplat.MFCreateAMMediaTypeFromMFMediaType(IMFMediaType *pMFType None,GUID guidFormatBlockType None,AM_MEDIA_TYPE **ppAMType None)
HRESULT None None.SetQueueTypeProp(LPCWSTR wszQueueFormatName None,CLSID *pIDValue None)
HRESULT None mfplat.MFCreateSystemTimeSource(IMFPresentationTimeSource **ppSystemTimeSource None)
DWORD None wininet.InternetAttemptConnect(_In_ DWORD dwReserved)
private void None.BindControl(DataTable myTable None)
LONG NTAPI ntdll.RtlIpv4StringToAddressEx(_In_ PCTSTR AddressString,_In_ BOOLEAN Strict,_Out_ IN_ADDR *Address,_Out_ PUSHORT Port)
LONG NTAPI ntdll.RtlIpv4StringToAddressExW(_In_ PCTSTR AddressString,_In_ BOOLEAN Strict,_Out_ IN_ADDR *Address,_Out_ PUSHORT Port)
LONG NTAPI ntdll.RtlIpv4StringToAddressEx(_In_ PCTSTR AddressString,_In_ BOOLEAN Strict,_Out_ IN_ADDR *Address,_Out_ PUSHORT Port)
HRESULT None None.ClonePacketList(IWMSPacketList** ppClonedPacketList None)
ULONG None wldap32.ldap_get_next_page(_In_ PLDAP ExternalHandle,_In_ PLDAPSearch SearchHandle,_In_ ULONG PageSize,_Out_ ULONG *MessageNumber)
NTSTATUS NTAPI None.CrediWrite(_In_ PLUID LogonId,_In_ ULONG CredFlags,_In_ PENCRYPTED_CREDENTIALW Credential,_In_ ULONG Flags)
NTSTATUS None None.WdfRequestProbeAndLockUserBufferForWrite(_In_ WDFREQUEST Request,_In_ PVOID Buffer,_In_ size_t Length,_Out_ WDFMEMORY *MemoryObject)
HRESULT None None.SetQwordValue(LPCWSTR pstrName None,long lNameHint None,CURRENCY qwValue None,long lOptions None)
HRESULT None d3d10.D3D10CreateStateBlock(_In_ ID3D10Device *pDevice,_In_ D3D10_STATE_BLOCK_MASK *pStateBlockMask,_Out_ ID3D10StateBlock **ppStateBlock)
DWORD None rasapi32.RasGetEntryDialParams(_In_ LPCTSTR lpszPhonebook,_Inout_ LPRASDIALPARAMS lprasdialparams,_Out_ LPBOOL lpfPassword)
DWORD None rasapi32.RasGetEntryDialParamsW(_In_ LPCTSTR lpszPhonebook,_Inout_ LPRASDIALPARAMS lprasdialparams,_Out_ LPBOOL lpfPassword)
DWORD None rasapi32.RasGetEntryDialParamsA(_In_ LPCTSTR lpszPhonebook,_Inout_ LPRASDIALPARAMS lprasdialparams,_Out_ LPBOOL lpfPassword)
HRESULT None mmcndmgr.QueryResultImageList([out] LPIMAGELIST *ppImageList)
HRESULT None None.Int8ToULongLong(_In_ INT8 i8Operand,_Out_ ULONGLONG *pullResult)
public Stream None.GetManifestResourceStream(Type type None,String name None)
HRESULT None None.get_TargetLoad([out None None,retval] DWORD *pTargetLoad)
DXGI_FORMAT STDAPI mfplat.MFMapDX9FormatToDXGIFormat(_In_ DWORD dx9)
HRESULT None fxscomex.OnNewCall(IFaxServer2 *pFaxServer2 None,long lCallId None,long lDeviceId None,long bstrCallerId None)
HRESULT None None.PtrdiffTToLong(_In_ ptrdiff_t cbOperand,_Out_ LONG *plResult)
HRESULT None None.DWordToByte(_In_ DWORD dwOperand,_Out_ BYTE *pbResult)
BOOL CALLBACK input.InstallLayoutOrTipUserReg(_In_opt_ LPCWSTR pszUserReg,_In_opt_ LPCWSTR pszSystemReg,_In_opt_ LPCWSTR pszSoftwareReg,_In_ LPCWSTR psz,_In_ DWORD dwFlags)
private void None.AddShadow(PaintEventArgs e None)
HRESULT None shell32.GetCategory([out] KF_CATEGORY *pCategory)
ULONG WINAPI advapi32.PerfQueryCounterData(_In_ HANDLE hQuery,_Out_opt_ PPERF_DATA_HEADER pCounterBlock,DWORD cbCounterBlock None,_Out_ LPDWORD pcbCounterBlockActual)
HRESULT None propsys.PropVariantToBooleanVector(_In_ REFPROPVARIANT propvar,_Out_ BOOL *prgf,_In_ ULONG crgf,_Out_ ULONG *pcElem)
HRESULT None None.GetSourceFlags(IMFSourceReader *pReader None,ULONG *pulFlags None)
HRESULT None oleaut32.VarUI2FromBool(_In_ VARIANT_BOOL boolIn,_Out_ USHORT *puiOut)
BOOL WINAPI cryptnet.CryptGetObjectUrl(_In_ LPCSTR pszUrlOid,_In_ LPVOID pvPara,_In_ DWORD dwFlags,_Out_ PCRYPT_URL_ARRAY pUrlArray,_Inout_ DWORD *pcbUrlArray,_Out_ PCRYPT_URL_INFO pUrlInfo,_Inout_ DWORD *pcbUrlInfo,_Reserved_ LPVOID pvReserved)
HRESULT None msctf.GetStatus([out] DWORD *pdwStatus)
HRESULT None None.Name(LPWSTR *ppszName None)
NTSTATUS None None.WdfRequestRetrieveOutputMemory(_In_ WDFREQUEST Request,_Out_ WDFMEMORY *Memory)
BOOL WINAPI cryptui.CryptUIDlgCertMgr(_In_ PCCRYPTUI_CERT_MGR_STRUCT pCryptUICertMgr)
public XmlNode None.ReplaceChild(XmlNode newChild None,XmlNode oldChild None)
BOOL None wininet.InternetGetConnectedState(_Out_ LPDWORD lpdwFlags,_In_ DWORD dwReserved)
NTSTATUS None None.SpGetInfo(_Out_ PSecPkgInfo PackageInfo)
VOID WINAPI kernel32.CancelThreadpoolIo(_Inout_ PTP_IO pio)
LONG WINAPI advapi32.RegOverridePredefKey(_In_ HKEY hKey,_In_opt_ HKEY hNewHKey)
BOOL None shlwapi.PathIsSameRoot(_In_ LPCTSTR pszPath1,_In_ LPCTSTR pszPath2)
BOOL None shlwapi.PathIsSameRootW(_In_ LPCTSTR pszPath1,_In_ LPCTSTR pszPath2)
BOOL None shlwapi.PathIsSameRootA(_In_ LPCTSTR pszPath1,_In_ LPCTSTR pszPath2)
HRESULT None None.SIZETToDWord(_In_ SIZE_T cbOperand,_Out_ DWORD *pdwResult)
HRESULT None tapi3.get_Event([out] TAPIOBJECT_EVENT *pEvent)
HRESULT WINAPI webservices.WsWriteXmlBuffer(_In_ WS_XML_WRITER* writer,_In_ WS_XML_BUFFER* xmlBuffer,_In_opt_ WS_ERROR* error)
DWORD None msvfw32.ICDraw(HIC hic None,DWORD dwFlags None,LPVOID lpFormat None,LPVOID lpData None,DWORD cbData None,LONG lTime None)
BOOL None imm32.ImmDestroyContext(_In_ HIMC hIMC)
uint32 None cimwin32.SetPowerState([in] uint16 PowerState,[in] datetime Time)
HRESULT None None.GetOwner([out None None,retval] IXpsOMGradientBrush **owner)
HRESULT None mfplat.MFRegisterLocalByteStreamHandler(_In_ PCWSTR szFileExtension,_In_ PCWSTR szMimeType,_In_ IMFActivate *pActivate)
public void None.AnalyzeResults(AnalyzeResultsInfo info None)
public int None.GetMaxCharCount(int byteCount None)
HRESULT None tapi3.get_AutoKeypadTones([out] VARIANT_BOOL *pfEnabled)
HRESULT None mfplat.MFGetWorkQueueMMCSSPriority(_In_ DWORD dwWorkQueueId,_Out_ LONG *lPriority)
DWORD WINAPI clusapi.RemoveCrossClusterGroupToGroupDependency(_In_ HGROUP hDependentGroup,_In_ LPCWSTR lpRemoteClusterName,_In_ LPCWSTR lpRemoteGroupName)
BOOLEAN None advapi32.RtlGenRandom(_Out_ PVOID RandomBuffer,_In_ ULONG RandomBufferLength)
private void None.NorthwindEmployeeInserting(Object source None,ObjectDataSourceMethodEventArgs e None)
public void None.RemoveAt(int index None)
HRESULT None None.get_CreationTimeout([out] DWORD *pdwCreationTimeout)
int None None.main(void None None)
HRESULT None oleaut32.VarCyFromI1(_In_ CHAR cIn,_Out_ CY *pcyOut)
private void None.button1_Click(Object sender None,System.EventArgs e None)
protected void None.OnPreviewStylusButtonUp(StylusButtonEventArgs e None)
DWORD None rasapi32.RasSetEntryProperties(_In_ LPCTSTR lpszPhonebook,_In_ LPCTSTR lpszEntry,_In_ LPRASENTRY lpRasEntry,_In_ DWORD dwEntryInfoSize,_In_ LPBYTE lpbDeviceInfo,_In_ DWORD dwDeviceInfoSize)
DWORD None rasapi32.RasSetEntryPropertiesW(_In_ LPCTSTR lpszPhonebook,_In_ LPCTSTR lpszEntry,_In_ LPRASENTRY lpRasEntry,_In_ DWORD dwEntryInfoSize,_In_ LPBYTE lpbDeviceInfo,_In_ DWORD dwDeviceInfoSize)
DWORD None rasapi32.RasSetEntryPropertiesA(_In_ LPCTSTR lpszPhonebook,_In_ LPCTSTR lpszEntry,_In_ LPRASENTRY lpRasEntry,_In_ DWORD dwEntryInfoSize,_In_ LPBYTE lpbDeviceInfo,_In_ DWORD dwDeviceInfoSize)
HRESULT None faxcom.get_DeviceStatus([out None None,retval] BSTR *pVal)
NTSTATUS WINAPI advapi32.LsaQueryCAPs(PSID *CAPIDs None,_In_ ULONG CAPIDCount,_Out_ PCENTRAL_ACCESS_POLICY *CAPs,_Out_ PULONG CAPCount)
HRESULT None None.get_Status([out None None,retval] RDV_TASK_STATUS *pStatus)
MI_INLINE MI_Result None.MI_DestinationOptions_SetCertCNCheck(_Inout_ MI_DestinationOptions *options,MI_Boolean check None)
HRESULT None None.SSIZETToIntPtr(_In_ SSIZE_T cbOperand,_Out_ INT_PTR *piResult)
NTSTATUS None None.SpSetExtendedInformation(_In_ SECPKG_EXTENDED_INFORMATION_CLASS Class,_In_ PSECPKG_EXTENDED_INFORMATION Info)
HRESULT None None.Lock([out] BYTE **ppbBuffer,[out] DWORD *pcbMaxLength,[out] DWORD *pcbCurrentLength)
HRESULT None oleaut32.VarI8FromUI4(_In_ ULONG ulIn,_Out_ LONG64 *pi64Out)
LONG WINAPI tapi32.lineSetAgentGroup(HLINE hLine None,DWORD dwAddressID None,LPLINEAGENTGROUPLIST lpAgentGroupList None)
HRESULT None oleaut32.VarBstrFromUI4(_In_ ULONG ulIn,_In_ LCID lcid,_In_ ULONG dwFlags,_Out_ BSTR *pbstrOut)
HRESULT None oleaut32.VarI8FromDisp(IDispatch *pdispIn None,_In_ LCID lcid,_Out_ LONG64 *pi64Out)
public void None.Remove(Installer value None)
BOOL WINAPI crypt32.CryptHashPublicKeyInfo(_In_ HCRYPTPROV_LEGACY hCryptProv,_In_ ALG_ID Algid,_In_ DWORD dwFlags,_In_ DWORD dwCertEncodingType,_In_ PCERT_PUBLIC_KEY_INFO pInfo,_Out_ BYTE *pbComputedHash,_Inout_ DWORD *pcbComputedHash)
protected void None.OnBackgroundImageChanged(EventArgs e None)
short None None.ToInt16(IFormatProvider provider None)
public String None.ToString(String format None)
BOOL WINAPI advapi32.AddAuditAccessAceEx(_Inout_ PACL pAcl,_In_ DWORD dwAceRevision,_In_ DWORD AceFlags,_In_ DWORD dwAccessMask,_In_ PSID pSid,_In_ BOOL bAuditSuccess,_In_ BOOL bAuditFailure)
HRESULT WINAPI userenv.CreateProfile(_In_ LPCWSTR pszUserSid,_In_ LPCWSTR pszUserName,_Out_ LPWSTR pszProfilePath,_In_ DWORD cchProfilePath)
HRESULT None None.AsyncDownload(VOID None None)
HRESULT None None.Int8ToUInt8(_In_ INT8 i8Operand,_Out_ UINT8 *pu8Result)
NTSTATUS None None.WdfDeviceMiniportCreate(_In_ WDFDRIVER Driver,_In_opt_ PWDF_OBJECT_ATTRIBUTES Attributes,_In_ PDEVICE_OBJECT DeviceObject,_In_opt_ PDEVICE_OBJECT AttachedDeviceObject,_In_opt_ PDEVICE_OBJECT Pdo,_Out_ WDFDEVICE *Device)
public None None.ThemeableAttribute(boolean themeable None)
void None cluswmi.Rename([in] string newName)
protected void None.OnContextMenuClosing(ContextMenuEventArgs e None)
DWORD WINAPI clusapi.GetNodeClusterState(_In_opt_ LPCWSTR lpszNodeName,_Out_ LPDWORD pdwClusterState)
HRESULT None None.DWordPtrToPtrdiffT(_In_ DWORD_PTR dwOperand,_Out_ ptrdiff_t *pcbResult)
HRESULT WINAPI None.EngineAdapterSetEnrollmentSelector(_Inout_ PWINBIO_PIPELINE Pipeline,_In_ ULONGLONG SelectorValue)
HRESULT None None.GetAlphaBitmapParameters([out] MFVideoAlphaBitmapParams *pBmpParms)
LONG WINAPI kernel32.GetStagedPackagePathByFullName(_In_ PCWSTR packageFullName,_Inout_ UINT32 *pathLength,_Out_opt_ PWSTR path)
protected void None.OnPaint(PaintEventArgs e None)
PDH_STATUS None pdh.PdhConnectMachine(_In_ LPCTSTR szMachineName)
PDH_STATUS None pdh.PdhConnectMachineW(_In_ LPCTSTR szMachineName)
PDH_STATUS None pdh.PdhConnectMachineA(_In_ LPCTSTR szMachineName)
HRESULT None None.GetDepthStencilState(UINT Index None,ID3D11DepthStencilState **ppDepthStencilState None)
errno_t None None.mbstowcs_s(size_t *pReturnValue None,wchar_t *wcstr None,size_t sizeInWords None,const char *mbstr,size_t count None)
Sub None None.ValidationFunctionName(source None None,arguments None None)
public boolean None.Contains(TreeNode c None)
NTSTATUS None None.WdfIoTargetSendInternalIoctlSynchronously(_In_ WDFIOTARGET IoTarget,_In_opt_ WDFREQUEST Request,_In_ ULONG IoctlCode,_In_opt_ PWDF_MEMORY_DESCRIPTOR InputBuffer,_In_opt_ PWDF_MEMORY_DESCRIPTOR OutputBuffer,_In_opt_ PWDF_REQUEST_SEND_OPTIONS RequestOptions,_Out_opt_ PULONG_PTR BytesReturned)
BOOL WINAPI comctl32._TrackMouseEvent(_Inout_ LPTRACKMOUSEEVENT lpEventTrack)
HRESULT None None.get_NumPendingConnections([out None None,retval] DWORD *pNumPendingConnections)
HRESULT None faxcom.get_QueueStatus([out None None,retval] BSTR *pVal)
DWORD None credui.CredUIStoreSSOCredW(_In_ PCWSTR pszRealm,_In_ PCWSTR pszUsername,_In_ PCWSTR pszPassword,_In_ BOOL bPersist)
protected void None.OnBeforeSelect(TreeViewCancelEventArgs e None)
HRESULT None None.get_Version([out] BSTR *version)
HRESULT None None.IsCameraInUse(_In_z_ LPCWSTR symbolicName,_Out_ BOOL* pfInUse)
HRESULT None oleaut32.VarDateFromUI2(_In_ USHORT uiIn,_Out_ DATE *pdateOut)
HRESULT None oleaut32.VarI4FromI1(_In_ CHAR cIn,_Out_ LONG *plOut)
size_t None None.mbstowcs(wchar_t *wcstr None,const char *mbstr,size_t count None)
boolean None None.BuildProjectFile(String projectFileName None,String[] targetNames None,IDictionary globalProperties None,IDictionary targetOutputs None)
public boolean None.SelectNextControl(Control ctl None,boolean forward None,boolean tabStopOnly None,boolean nested None,boolean wrap None)
void None None.Button1_Click(Object sender None,EventArgs e None)
DWORD None None.NPPropertyDialog(_In_ HWND hwndParent,_In_ DWORD iButtonDlg,_In_ DWORD nPropSel,_In_ LPTSTR lpFileName,_In_ DWORD nType)
HRESULT None None.GetSharedHandle([out] HANDLE *pSharedHandle)
HRESULT None None.GetStreamCount([out] DWORD *pcStreams)
MI_INLINE MI_Result None.MI_DestinationOptions_SetPacketPrivacy(_Inout_ MI_DestinationOptions *options,MI_Boolean privacy None)
public None None.TreeNode(String text None,int imageIndex None,int selectedImageIndex None)
HRESULT None None.GetLinkedTopics([out] LPOLESTR *lpCompiledHelpFiles)
public void None.InitializeCell(DataControlFieldCell cell None,DataControlCellType cellType None,DataControlRowState rowState None,int rowIndex None)
HRESULT None None.GetStrokeDashOffset([out None None,retval] FLOAT *strokeDashOffset)
HRESULT WINAPI webservices.WsWriteEnvelopeEnd(_In_ WS_MESSAGE* message,_In_opt_ WS_ERROR* error)
protected void None.OnPreviewStylusUp(StylusEventArgs e None)
HWND None imm32.ImmGetDefaultIMEWnd(_In_ HWND hWnd)
HRESULT None None.GetVideoProcessorCaps([out] DXVA2_VideoProcessorCaps *pCaps)
protected void None.OnChildDesiredSizeChanged(UIElement child None)
BOOL None imm32.ImmIsUIMessage(_In_ HWND hWndIME,_In_ UINT msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
BOOL None imm32.ImmIsUIMessageW(_In_ HWND hWndIME,_In_ UINT msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
BOOL None imm32.ImmIsUIMessageA(_In_ HWND hWndIME,_In_ UINT msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
HRESULT None oleaut32.VarDecFromUI1(_In_ BYTE bIn,_Out_ DECIMAL *pdecOut)
HRESULT None fxscomex.OnOutgoingQueueConfigChange(IFaxServer2 *pFaxServer2 None)
public void None.AddArc(int x None,int y None,int width None,int height None,float startAngle None,float sweepAngle None)
public int None.GetMaxCharCount(int byteCount None)
protected void None.LoadViewState(Object savedState None)
HRESULT None mfplat.MFCreateDXGISurfaceBuffer(_In_ REFIID riid,_In_ IUnknown *punkSurface,_In_ UINT uSubresourceIndex,_In_ BOOL fBottomUpWhenLinear,_Out_ IMFMediaBuffer **ppBuffer)
NTSTATUS None None.OpenSamUser(_In_ PSECURITY_STRING Name,_In_ SECPKG_NAME_TYPE NameType,_In_ PSECURITY_STRING Prefix,_In_ BOOLEAN AllowGuest,_In_ ULONG Reserved,_Out_ PVOID *UserHandle)
DWORD None None.ListView_GetItemSpacing(HWND hwnd None,BOOL fSmall None)
NTSTATUS None None.WdfRequestRetrieveInputMemory(_In_ WDFREQUEST Request,_Out_ WDFMEMORY *Memory)
public boolean None.CanConvertTo(Type destinationType None)
BOOL None None.ComboBox_GetDroppedState(HWND hwndCtl None)
HRESULT None None.get_LateReads(long* pVal None)
HRESULT None None.GetDeviceCertificate([out] INSSBuffer **ppCertificate)
HRESULT None None.get_Descender([out None None,retval] VARIANT *Descender)
HRESULT None oleaut32.VarDateFromI2(_In_ SHORT sIn,_Out_ DATE *pdateOut)
HRESULT None oleaut32.VarBoolFromI1(_In_ CHAR cIn,_Out_ VARIANT_BOOL *pboolOut)
HRESULT None wuapi.get_UninstallationBehavior([out] IInstallationBehavior **retval)
protected void None.OnDragDrop(DragEventArgs drgevent None)
HRESULT None faxcom.get_SenderCompany([out None None,retval] BSTR *pVal)
DWORD None imm32.ImmGetCandidateList(_In_ HIMC hIMC,_In_ DWORD dwIndex,_Out_opt_ LPCANDIDATELIST lpCandList,_In_ DWORD dwBufLen)
DWORD None imm32.ImmGetCandidateListW(_In_ HIMC hIMC,_In_ DWORD dwIndex,_Out_opt_ LPCANDIDATELIST lpCandList,_In_ DWORD dwBufLen)
DWORD None imm32.ImmGetCandidateListA(_In_ HIMC hIMC,_In_ DWORD dwIndex,_Out_opt_ LPCANDIDATELIST lpCandList,_In_ DWORD dwBufLen)
NTSTATUS None None.WdfRequestRetrieveInputWdmMdl(_In_ WDFREQUEST Request,_Out_ PMDL *Mdl)
BOOL WINAPI crypt32.CryptStringToBinary(_In_ LPCTSTR pszString,_In_ DWORD cchString,_In_ DWORD dwFlags,_In_ BYTE *pbBinary,_Inout_ DWORD *pcbBinary,_Out_ DWORD *pdwSkip,_Out_ DWORD *pdwFlags)
BOOL WINAPI crypt32.CryptStringToBinaryW(_In_ LPCTSTR pszString,_In_ DWORD cchString,_In_ DWORD dwFlags,_In_ BYTE *pbBinary,_Inout_ DWORD *pcbBinary,_Out_ DWORD *pdwSkip,_Out_ DWORD *pdwFlags)
BOOL WINAPI crypt32.CryptStringToBinaryA(_In_ LPCTSTR pszString,_In_ DWORD cchString,_In_ DWORD dwFlags,_In_ BYTE *pbBinary,_Inout_ DWORD *pcbBinary,_Out_ DWORD *pdwSkip,_Out_ DWORD *pdwFlags)
HRESULT None fxscomex.OnQueuesStatusChange(IFaxServer2 *pFaxServer2 None,VARIANT_BOOL bOutgoingQueueBlocked None,VARIANT_BOOL bOutgoingQueuePaused None,VARIANT_BOOL bIncomingQueueBlocked None)
HRESULT None tapi3.get_AutoDialtone([out] VARIANT_BOOL *pfEnabled)
public void None.Serialize(XmlWriter xmlWriter None,Object o None)
HRESULT None mfplat.MFInvokeCallback(IMFAsyncResult *pAsyncResult None)
protected void None.OnInsert(Object key None,Object value None)
HRESULT WINAPI None.EngineAdapterQueryExtendedInfo(_Inout_ PWINBIO_PIPELINE Pipeline,_Out_ PWINBIO_EXTENDED_ENGINE_INFO EngineInfo,_In_ SIZE_T EngineInfoSize)
HRESULT None oleaut32.VarI1FromI8(_In_ LONG64 i64In,_Out_ CHAR *pcOut)
size_t None None.wcstombs(char *mbstr None,const wchar_t *wcstr,size_t count None)
unsigned int None._mbctombb(unsigned int c)
HRESULT None oleaut32.VarCyFromDisp(_In_ IDispatch *pdispIn,_In_ LCID lcid,_Out_ CY *pcyOut)
DWORD None rasapi32.RasSetAutodialEnable(_In_ DWORD dwDialingLocation,_In_ BOOL fEnabled)
DWORD None rasapi32.RasSetAutodialEnableW(_In_ DWORD dwDialingLocation,_In_ BOOL fEnabled)
DWORD None rasapi32.RasSetAutodialEnableA(_In_ DWORD dwDialingLocation,_In_ BOOL fEnabled)
HRESULT None wuapi.get_Languages([out] IStringCollection **retval)
UInt32 None None.SetAttributes([in] Boolean EnableVolumeScrub,[out] String ExtendedStatus)
DWORD None rasapi32.RasGetErrorString(_In_ UINT uErrorValue,_Out_ LPTSTR lpszErrorString,_In_ DWORD cBufSize)
DWORD None rasapi32.RasGetErrorStringW(_In_ UINT uErrorValue,_Out_ LPTSTR lpszErrorString,_In_ DWORD cBufSize)
DWORD None rasapi32.RasGetErrorStringA(_In_ UINT uErrorValue,_Out_ LPTSTR lpszErrorString,_In_ DWORD cBufSize)
HRESULT WINAPI None.WbioQueryEngineInterface(_Out_ PWINBIO_ENGINE_INTERFACE *EngineInterface)
HRESULT None None.GetCompletionCallback(IWMSPacketListCallback** ppCallback None)
UInt32 None None.SetUsage([in] UInt16 Usage,[in] String OtherUsageDescription,[out] String ExtendedStatus)
MI_INLINE MI_Result None.MI_DestinationOptions_SetImpersonationType(_Inout_ MI_DestinationOptions *options,_In_ MI_DestinationOptions_ImpersonationType impersonationType)
void None None.BlockingFinish(IDXGIDevice2* pDevice None)
protected boolean None.IsInputKey(Keys keyData None)
HRESULT None None.get_CanResize([out None None,retval] BOOL *pRetVal)
HRESULT None None.GetQueueInstanceProp(LPCWSTR wszQueueFormatName None,CLSID *pIDValue None)
public PropertyDescriptorCollection None.GetProperties(Object value None)
ULONG None sechost.ProcessTrace(_In_ PTRACEHANDLE HandleArray,_In_ ULONG HandleCount,_In_ LPFILETIME StartTime,_In_ LPFILETIME EndTime)
public int None.EndRead(IAsyncResult asyncResult None)
ULONG WINAPI iphlpapi.SetPerTcpConnectionEStats(PMIB_TCPROW Row None,TCP_ESTATS_TYPE EstatsType None,PUCHAR Rw None,ULONG RwVersion None,ULONG RwSize None,ULONG Offset None)
PCERT_RDN_ATTR WINAPI crypt32.CertFindRDNAttr(_In_ LPCSTR pszObjId,_In_ PCERT_NAME_INFO pName)
HRESULT None mfplat.MFAllocateSerialWorkQueue(_In_ DWORD dwWorkQueue,_Out_ DWORD *pdwWorkQueue)
HRESULT None mfplat.MFTUnregister(_In_ CLSID clsidMFT)
HRESULT None oleaut32.VarUI2FromStr(_In_ LPCOLESTR strIn,_In_ LCID lcid,_In_ ULONG dwFlags,_Out_ USHORT *puiOut)
public int None.GetMaxCharCount(int byteCount None)
NTSTATUS None advapi32.RtlDecryptMemory(_Inout_ PVOID Memory,_In_ ULONG MemoryLength,_In_ ULONG OptionFlags)
private void None.On_Click(Object source None,System.EventArgs e None)
DWORD DHCP_API_FUNCTION dhcpsapi.DhcpV4CreatePolicy(_In_opt_ LPWSTR ServerIpAddress,_In_ LPDHCP_POLICY pPolicy)
uint32 None smiscsitargetprov.QuiesceDevice([in] boolean Quiesce)
void None None.Page_Load(Object sender None,System.EventArgs e None)
protected void None.LoadPrivateViewState(Object state None)
UInt32 None None.GrantAccess([in] String AccountNames[],[in] UInt32 AccessRight,[out] String ExtendedStatus)
size_t None None.wcstombs(char *mbstr None,const wchar_t *wcstr,size_t count None)
public void None.FromXml(SecurityElement securityElement None)
ULONG None wldap32.ldap_connect(_In_ LDAP *ld,_In_ LDAP_TIMEVAL *timeout)
protected void None.OnSizeChanged(EventArgs e None)
protected void None.OnDragDrop(DragEventArgs drgevent None)
protected void None.OnStylusOutOfRange(StylusEventArgs e None)
ULONG None wldap32.ldap_modrdn2(_In_ LDAP *ExternalHandle,_In_ PCHAR DistinguishedName,_In_ PCHAR NewDistinguishedName,_In_ INT DeleteOldRdn)
ULONG None wldap32.ldap_modrdn2W(_In_ LDAP *ExternalHandle,_In_ PCHAR DistinguishedName,_In_ PCHAR NewDistinguishedName,_In_ INT DeleteOldRdn)
ULONG None wldap32.ldap_modrdn2A(_In_ LDAP *ExternalHandle,_In_ PCHAR DistinguishedName,_In_ PCHAR NewDistinguishedName,_In_ INT DeleteOldRdn)
protected Exception None.GetConvertToException(Object value None,Type destinationType None)
HRESULT WINAPI webservices.WsWriteEndElement(_In_ WS_XML_WRITER* writer,_In_opt_ WS_ERROR* error)
HRESULT None None.GetQueuePathnameDNSProp(LPCWSTR wszQueueFormatName None,LPWSTR *pwszValue None)
HGROUPSET WINAPI clusapi.CreateClusterGroupSet(_In_ HCLUSTER hCluster,_In_ LPCWSTR groupSetName)
BOOL None None.TreeView_GetUnicodeFormat(HWND hwnd None)
public int None.EndRead(IAsyncResult asyncResult None)
HRESULT None tapi3.get_Addresses([out] VARIANT *pAddresses)
VOID None None.WdfDeviceInitSetPowerPolicyOwnership(_In_ PWDFDEVICE_INIT DeviceInit,_In_ BOOLEAN IsPowerPolicyOwner)
HRESULT None wuapi.get_IsMandatory([out] VARIANT_BOOL *retval)
HRESULT None fxscomex.put_AttachFaxToReceipt(VARIANT_BOOL bAttachFax None)
protected void None.OnCellValuePushed(DataGridViewCellValueEventArgs e None)
protected void None.OnColumnContextMenuStripChanged(DataGridViewColumnEventArgs e None)
public Object None.ReadObject(Stream stream None)
HRESULT None oleaut32.VarDecFromI4(_In_ LONG lIn,_Out_ DECIMAL *pdecOut)
HRESULT None propsys.PropVariantToDoubleVectorAlloc(_In_ REFPROPVARIANT propvar,_Out_ DOUBLE **pprgn,_Out_ ULONG *pcElem)
NTSTATUS WINAPI advapi32.CredMarshalTargetInfo(_In_ PCREDENTIAL_TARGET_INFORMATIONW InTargetInfo,_Out_ PUSHORT *Buffer,PULONG BufferSize None)
HRESULT None wuapi.get_BundledUpdates([out] IUpdateCollection **retval)
HRESULT WINAPI None.EngineAdapterNotifyPowerChange(_Inout_ PWINBIO_PIPELINE Pipeline,_In_ ULONG PowerEventType)
LONG WINAPI winscard.SCardLocateCards(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR mszCards,_Inout_ LPSCARD_READERSTATE rgReaderStates,_In_ DWORD cReaders)
LONG WINAPI winscard.SCardLocateCardsW(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR mszCards,_Inout_ LPSCARD_READERSTATE rgReaderStates,_In_ DWORD cReaders)
LONG WINAPI winscard.SCardLocateCardsA(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR mszCards,_Inout_ LPSCARD_READERSTATE rgReaderStates,_In_ DWORD cReaders)
NTSTATUS None None.LsaApInitializePackage(_In_ ULONG AuthenticationPackageId,_In_ PLSA_DISPATCH_TABLE LsaDispatchTable,_In_opt_ PLSA_STRING Database,_In_opt_ PLSA_STRING Confidentiality,_Out_ PLSA_STRING *AuthenticationPackageName)
IFsrmDerivedObjectsResult None None.CommitAndUpdateDerived(_FsrmCommitOptions commitOptions None,_FsrmTemplateApplyOptions applyOptions None)
HRESULT None None.GetVolumeStepInfo([out] UINT *pnStep,[out] UINT *pnStepCount)
HRESULT None None.AddSCSIController([out] IVMSCSIController **controller)
HRESULT None None.get_Busy([out None None,retval] VARIANT_BOOL *Busy)
HRESULT None mfplat.MFInitVideoFormat_RGB(_In_ MFVIDEOFORMAT *pVideoFormat,_In_ DWORD dwWidth,_In_ DWORD dwHeight,_In_ DWORD D3Dfmt)
VOID CALLBACK None.WorkCallback(_Inout_ PTP_CALLBACK_INSTANCE Instance,_Inout_opt_ PVOID Context,_Inout_ PTP_WORK Work)
static void None.DisplayAuthenticationProperties(NegotiateStream* stream None)
DWORD WINAPI clusapi.SetClusterGroupSetDependencyExpression(_In_ HGROUPSET hGroupSet,_In_ LPCWSTR lpszDependencyExprssion)
HANDLE WINAPI avrt.AvSetMmMaxThreadCharacteristics(_In_ LPCTSTR FirstTask,_In_ LPCTSTR SecondTask,_Inout_ LPDWORD TaskIndex)
HANDLE WINAPI avrt.AvSetMmMaxThreadCharacteristicsW(_In_ LPCTSTR FirstTask,_In_ LPCTSTR SecondTask,_Inout_ LPDWORD TaskIndex)
HANDLE WINAPI avrt.AvSetMmMaxThreadCharacteristicsA(_In_ LPCTSTR FirstTask,_In_ LPCTSTR SecondTask,_Inout_ LPDWORD TaskIndex)
public String None.ToString(String format None)
HRESULT None tapi3.get_Privilege([out] PHONE_PRIVILEGE *pPrivilege)
void None None.Page_Load(Object sender None,System.EventArgs e None)
private void None.ShowLineAndAlignment(PaintEventArgs e None)
HRESULT None propsys.VariantToGUID(_In_ REFVARIANT varIn,_Out_ GUID *pguid)
HRESULT None tapi3.get_Display([out] BSTR *pbstrDisplay)
HRESULT None tapi3.ParkIndirect([out] BSTR *ppNonDirAddress)
public void None.Write(byte[] array None,int offset None,int count None)
public void None.Write(String message None)
private void None.On_Click(Object source None,System.EventArgs e None)
HRESULT None None.Delete(VOID None None)
HRESULT None None.SetSelected([out] BOOL *pbAutoLogon)
HRESULT None None.ToString([out None None,retval] BSTR *ToString)
DWORD None rasapi32.RasGetProjectionInfo(_In_ HRASCONN hrasconn,_In_ RASPROJECTION rasprojection,_Out_ LPVOID lpprojection,_Inout_ LPDWORD lpcb)
DWORD None rasapi32.RasGetProjectionInfoW(_In_ HRASCONN hrasconn,_In_ RASPROJECTION rasprojection,_Out_ LPVOID lpprojection,_Inout_ LPDWORD lpcb)
DWORD None rasapi32.RasGetProjectionInfoA(_In_ HRASCONN hrasconn,_In_ RASPROJECTION rasprojection,_Out_ LPVOID lpprojection,_Inout_ LPDWORD lpcb)
uint32 None dnsserverpsprovider.GetByServer([in] string Name,[in] string ComputerName,[out] DnsServerPolicy cmdletOutput[])
HRESULT None None.get_Deadline([out None None,retval] FILETIME *pDeadline)
public void None.AddRange(String rangeSpecifier None,int range None)
protected boolean None.ShouldApplyItemContainerStyle(DependencyObject container None,Object item None)
HRESULT None fxscomex.OnIncomingJobAdded(IFaxServer2 *pFaxServer2 None,BSTR bstrJobId None)
void None None.LoadAdapterState(Object state None)
HRESULT None propsys.InitPropVariantFromStringAsVector(_In_ PCWSTR psz,_Out_ PROPVARIANT *ppropvar)
public IAsyncResult None.BeginWrite(byte[] buffer None,int offset None,int count None,AsyncCallback asyncCallback None,Object asyncState None)
NTSTATUS None None.WdfUsbTargetPipeFormatRequestForReset(_In_ WDFUSBPIPE Pipe,_In_ WDFREQUEST Request)
BOOL None wininet.InternetAutodialHangup(_In_ DWORD dwReserved)
DWORD WINAPI peerdist.PeerDistClientFlushContent(_In_ PEERDIST_INSTANCE_HANDLE hPeerDist,_In_ PCPEERDIST_CONTENT_TAG pContentTag,_In_opt_ HANDLE hCompletionPort,_In_opt_ ULONG_PTR ulCompletionKey,_In_ LPOVERLAPPED lpOverlapped)
DWORD None ntdsapi.DsReplicaGetInfo(_In_ HANDLE hDS,_In_ DS_REPL_INFO_TYPE InfoType,_In_opt_ LPCWSTR pszObject,_In_opt_ UUID *puuidForSourceDsaObjGuid,_Out_ VOID **ppInfo)
DWORD None ntdsapi.DsReplicaGetInfoW(_In_ HANDLE hDS,_In_ DS_REPL_INFO_TYPE InfoType,_In_opt_ LPCWSTR pszObject,_In_opt_ UUID *puuidForSourceDsaObjGuid,_Out_ VOID **ppInfo)
HRESULT None mf.MFCreateStandardQualityManager(_Out_ IMFQualityManager **ppQualityManager)
HRESULT None None.GetBufferProgress(IMFMediaSession *pSession None,DWORD *pProgress None)
BOOLEAN WINAPI powrprof.GetCurrentPowerPolicies(_Out_ PGLOBAL_POWER_POLICY pGlobalPowerPolicy,_Out_ PPOWER_POLICY pPowerPolicy)
HRESULT None tapi3.get_Address([out] ITAddress **ppAddress)
HRESULT None oleaut32.VarUI4FromUI1(_In_ BYTE bIn,_Out_ ULONG *pulOut)
HRESULT None None.GetNextSample([out] DWORD *pdwStatusFlags,[out] WORD *pwStreamNumber,[out] IMFSample **ppISample)
protected void None.OnDeleting(ObjectDataSourceMethodEventArgs e None)
BOOL None rasdlg.RasEntryDlg(_In_ LPTSTR lpszPhonebook,_In_ LPTSTR lpszEntry,_In_ LPRASENTRYDLG lpInfo)
BOOL None rasdlg.RasEntryDlgW(_In_ LPTSTR lpszPhonebook,_In_ LPTSTR lpszEntry,_In_ LPRASENTRYDLG lpInfo)
BOOL None rasdlg.RasEntryDlgA(_In_ LPTSTR lpszPhonebook,_In_ LPTSTR lpszEntry,_In_ LPRASENTRYDLG lpInfo)
HRESULT WINAPI None.EngineAdapterSetHashAlgorithm(_Inout_ PWINBIO_PIPELINE Pipeline,_In_ SIZE_T AlgorithmBufferSize,_In_ PUCHAR AlgorithmBuffer)
VOID None None.XMVectorGetIntZPtr([out] uint32_t *z,XMVECTOR V None)
NTSTATUS None secur32.LsaFreeReturnBuffer(_In_ PVOID Buffer)
ULONG None wldap32.ldap_connect(_In_ LDAP *ld,_In_ LDAP_TIMEVAL *timeout)
static String None.IsFileURI(String path None)
BOOL None shlwapi.IsCharSpace(_In_ TCHAR wch)
BOOL None shlwapi.IsCharSpaceW(_In_ TCHAR wch)
BOOL None shlwapi.IsCharSpaceA(_In_ TCHAR wch)
DWORD None ntdsapi.DsListInfoForServer(_In_ HANDLE hDs,_In_ LPTSTR server,_Out_ PDS_NAME_RESULT *ppInfo)
DWORD None ntdsapi.DsListInfoForServerW(_In_ HANDLE hDs,_In_ LPTSTR server,_Out_ PDS_NAME_RESULT *ppInfo)
DWORD None ntdsapi.DsListInfoForServerA(_In_ HANDLE hDs,_In_ LPTSTR server,_Out_ PDS_NAME_RESULT *ppInfo)
LONG WINAPI winscard.SCardGetAttrib(_In_ SCARDHANDLE hCard,_In_ DWORD dwAttrId,_Out_ LPBYTE pbAttr,_Inout_ LPDWORD pcbAttrLen)
HRESULT None None.SetAttribute(DWORD ValueName None,DWORD dwValue None)
HRESULT None propsys.VariantToInt32ArrayAlloc(_In_ REFVARIANT var,_Out_ LONG **pprgn,_Out_ ULONG *pcElem)
protected void None.OnAfterRollback(IDictionary savedState None)
HRESULT None None.GetMaxPacketSize([out] DWORD *pdwMaxPacketSize)
public void None.CopyTo(TreeNode[] nodeArray None,int index None)
HRESULT None None.get_PlaylistParsers(IWMSPlugins** pVal None)
NTSTATUS None None.WdfRegistryQueryString(_In_ WDFKEY Key,_In_ PCUNICODE_STRING ValueName,_In_ WDFSTRING String)
static void None.DisplayAuthenticationProperties(NegotiateStream* stream None)
HRESULT None fxscomex.OnIncomingMessageRemoved(IFaxServer2 *pFaxServer2 None,BSTR bstrJobId None)
BOOL None wininet.HttpSendRequest(_In_ HINTERNET hRequest,_In_ LPCTSTR lpszHeaders,_In_ DWORD dwHeadersLength,_In_ LPVOID lpOptional,_In_ DWORD dwOptionalLength)
BOOL None wininet.HttpSendRequestW(_In_ HINTERNET hRequest,_In_ LPCTSTR lpszHeaders,_In_ DWORD dwHeadersLength,_In_ LPVOID lpOptional,_In_ DWORD dwOptionalLength)
BOOL None wininet.HttpSendRequestA(_In_ HINTERNET hRequest,_In_ LPCTSTR lpszHeaders,_In_ DWORD dwHeadersLength,_In_ LPVOID lpOptional,_In_ DWORD dwOptionalLength)
HANDLE None wininet.FindFirstUrlCacheEntry(_In_ LPCTSTR lpszUrlSearchPattern,_Out_ LPINTERNET_CACHE_ENTRY_INFO lpFirstCacheEntryInfo,_Inout_ LPDWORD lpcbCacheEntryInfo)
HANDLE None wininet.FindFirstUrlCacheEntryW(_In_ LPCTSTR lpszUrlSearchPattern,_Out_ LPINTERNET_CACHE_ENTRY_INFO lpFirstCacheEntryInfo,_Inout_ LPDWORD lpcbCacheEntryInfo)
HANDLE None wininet.FindFirstUrlCacheEntryA(_In_ LPCTSTR lpszUrlSearchPattern,_Out_ LPINTERNET_CACHE_ENTRY_INFO lpFirstCacheEntryInfo,_Inout_ LPDWORD lpcbCacheEntryInfo)
HNODE WINAPI clusapi.OpenClusterNodeEx(_In_ HCLUSTER hCluster,_In_opt_ LPCWSTR lpszNodeName,_In_ DWORD dwDesiredAccess,_Out_opt_ DWORD *lpdwGrantedAccess)
protected String None.GetListName(ArrayList listAccessors None)
BOOLAPI None wininet.UnlockUrlCacheEntryStream(_In_ HANDLE hUrlCacheStream,_In_ DWORD dwReserved)
BOOL WINAPI advapi32.CryptExportKey(_In_ HCRYPTKEY hKey,_In_ HCRYPTKEY hExpKey,_In_ DWORD dwBlobType,_In_ DWORD dwFlags,_Out_ BYTE *pbData,_Inout_ DWORD *pdwDataLen)
HRESULT None None.GetWatcher(FEEDS_EVENTS_SCOPE scope None,FEEDS_EVENTS_MASK mask None,IDispatch **disp None)
public String None.Insert(int startIndex None,String value None)
protected void None.OnAfterCheck(TreeViewEventArgs e None)
DWORD WINAPI user32.WaitForInputIdle(_In_ HANDLE hProcess,_In_ DWORD dwMilliseconds)
HRESULT None wuapi.get_IsDownloaded([out] VARIANT_BOOL *retval)
NTSTATUS WINAPI bcrypt.BCryptDestroyHash(_Inout_ BCRYPT_HASH_HANDLE hHash)
HRESULT None None.get_DefaultVNConfigurationPath([out] BSTR *configurationPath)
public int None.LastIndexOf(String value None)
HRESULT None None.get_RawViewWalker([out None None,retval] IUIAutomationTreeWalker **walker)
IStream None None.v_GetViewStream(LPCITEMIDLIST pidl None,DWORD grfMode None,LPCWSTR pwszName None)
public void None.DrawRectangle(Pen pen None,int x None,int y None,int width None,int height None)
MI_INLINE MI_Result None.MI_Serializer_Close(_Inout_ MI_Serializer *serializer)
public String None.ToString(String format None)
public void None.SetState(string targetStateName None)
protected void None.TreeView1_SelectedNodeChanged(object sender None,EventArgs e None)
boolean None None.Remove(TKey key None)
HRESULT None scrdenrl.enroll(LONG dwFlags None)
HRESULT None mf.MFCreateSimpleTypeHandler(_Out_ IMFMediaTypeHandler **ppHandler)
DWORD WINAPI None.PeerDistRegisterForStatusChangeNotificationEx(_In_ PEERDIST_INSTANCE_HANDLE hPeerDist,_In_opt_ HANDLE hCompletionPort,_In_opt_ ULONG_PTR ulCompletionKey,_In_ LPOVERLAPPED lpOverlapped,_Inout_ PEERDIST_STATUS_INFO *pPeerDistStatus)
HRESULT None oleaut32.VarR4FromUI8(_In_ ULONG64 ui64In,_Out_ FLOAT *pfltOut)
HRESULT None tapi3.EnumeratePreferredAddresses([out] IEnumAddress **ppEnumAddress)
HRESULT None tapi3.get_DialableAddress([out] BSTR *pDialableAddress)
SerializableAttribute None None.ClassInterfaceAttribute(ClassInterfaceType.None None None)
public void None.Add(String key None,String text None,String imageKey None)
int None None.main(void None None)
HRESULT WINAPI None.RoGetActivatableClassRegistration(_In_ HSTRING activatableClassId,_Out_ PActivatableClassRegistration *activatableClassRegistration)
HRESULT None oleaut32.VarUI8FromI2(_In_ SHORT sIn,_Out_ ULONG64 *pi64Out)
HRESULT None wuapi.get_UninstallationSteps([out] IStringCollection **retval)
LONG TSPIAPI None.TSPI_lineUnhold(DRV_REQUESTID dwRequestID None,HDRVCALL hdCall None)
void None None.Button1_Click(Object sender None,EventArgs e None)
DWORD None mprapi.MprConfigServerSetInfo(_In_ MPR_SERVER_HANDLE hMprServer,_In_ DWORD dwLevel,_In_ LPBYTE lpbBuffer)
protected void None.OnItemTemplateChanged(DataTemplate oldItemTemplate None,DataTemplate newItemTemplate None)
HWND None None.TabCtrl_GetToolTips(HWND hwnd None)
LONG None tapi32.lineSetAgentMeasurementPeriod(HLINE hLine None,HAGENT hAgent None,DWORD dwMeasurementPeriod None)
int None None.firstbitlow(in int value)
HRESULT None None.get_Strokes([out None None,retval] IInkStrokes **Strokes)
NTSTATUS None None.SpInitLsaModeContext(_In_ LSA_SEC_HANDLE CredentialHandle,_In_ LSA_SEC_HANDLE ContextHandle,_In_ PUNICODE_STRING TargetName,_In_ ULONG ContextRequirements,_In_ ULONG TargetDataRep,_In_ PSecBufferDesc InputBuffers,_Out_ PLSA_SEC_HANDLE NewContextHandle,_Out_ PSecBufferDesc OutputBuffers,_Out_ PULONG ContextAttributes,_Out_ PTimeStamp ExpirationTime,_Out_ PBOOLEAN MappedContext,_Out_ PSecBuffer ContextData)
BOOL WINAPI kernel32.SetProcessWorkingSetSize(_In_ HANDLE hProcess,_In_ SIZE_T dwMinimumWorkingSetSize,_In_ SIZE_T dwMaximumWorkingSetSize)
Object None None.ToType(Type conversionType None,IFormatProvider provider None)
protected void None.OnStyleChanged(Style oldStyle None,Style newStyle None)
HRESULT None None.GetGeometryLookup([out None None,retval] LPWSTR *lookup)
HRESULT None None.get_systemId(VARIANT *systemID None)
SECURITY_STATUS SEC_Entry secur32.ImportSecurityContext(_In_ PSECURITY_STRING *pszPackage,_In_ PSecBuffer pPackedContext,_In_opt_ HANDLE pToken,_Out_ PCtxtHandle phContext)
SECURITY_STATUS SEC_Entry secur32.ImportSecurityContextW(_In_ PSECURITY_STRING *pszPackage,_In_ PSecBuffer pPackedContext,_In_opt_ HANDLE pToken,_Out_ PCtxtHandle phContext)
SECURITY_STATUS SEC_Entry secur32.ImportSecurityContextA(_In_ PSECURITY_STRING *pszPackage,_In_ PSecBuffer pPackedContext,_In_opt_ HANDLE pToken,_Out_ PCtxtHandle phContext)
protected void None.OnIsMouseDirectlyOverChanged(DependencyPropertyChangedEventArgs e None)
HRESULT None None.GetAttributeCount([out] DWORD *pcAttributes)
private void None.subtractButton_Click(Object sender None,System.EventArgs e None)
HRESULT None oleaut32.VarR8FromBool(_In_ VARIANT_BOOL boolIn,_Out_ DOUBLE *pdblOut)
HRESULT None None.IntPtrToUInt(_In_ INT_PTR iOperand,_Out_ UINT *puResult)
HRESULT None fxscomex.OnOutboundRoutingRulesConfigChange(IFaxServer2 *pFaxServer2 None)
HRESULT None mfplat.MFSerializeAttributesToStream(IMFAttributes *pAttr None,DWORD dwOptions None,IStream *pStm None)
BOOLAPI None wininet.UnlockUrlCacheEntryFile(_In_ LPCTSTR lpszUrlName,_In_ DWORD dwReserved)
BOOLAPI None wininet.UnlockUrlCacheEntryFileW(_In_ LPCTSTR lpszUrlName,_In_ DWORD dwReserved)
BOOLAPI None wininet.UnlockUrlCacheEntryFileA(_In_ LPCTSTR lpszUrlName,_In_ DWORD dwReserved)
HRESULT None tapi3.EnumerateSelectedCalls([out] IEnumCall **ppCallEnum)
HRESULT None msctf.TF_CreateLangBarItemMgr(_Out_ ITfLangBarItemMgr **pplbim)
HRESULT None wuapi.get_IsInstalled([out] VARIANT_BOOL *retval)
BOOL WINAPI wintrust.OpenPersonalTrustDBDialogEx(_In_opt_ HWND hwndParent,_In_ DWORD dwFlags,_Inout_opt_ PVOID *pvReserved)
protected void None.OnDragDrop(DragEventArgs drgevent None)
private void None.myButtonPrint_OnClick(Object sender None,System.EventArgs e None)
public void None.UploadFileAsync(Uri address None,String fileName None)
HANDLE None wininet.FindFirstUrlCacheEntryEx(_In_ LPCTSTR lpszUrlSearchPattern,_In_ DWORD dwFlags,_In_ DWORD dwFilter,_In_ GROUPID GroupId,_Out_ LPINTERNET_CACHE_ENTRY_INFO lpFirstCacheEntryInfo,_Inout_ LPDWORD lpdwEntryInfo,_Reserved_ LPVOID lpGroupAttributes,_Reserved_ LPDWORD lpcbGroupAttributes,_Reserved_ LPVOID lpReserved)
HANDLE None wininet.FindFirstUrlCacheEntryExW(_In_ LPCTSTR lpszUrlSearchPattern,_In_ DWORD dwFlags,_In_ DWORD dwFilter,_In_ GROUPID GroupId,_Out_ LPINTERNET_CACHE_ENTRY_INFO lpFirstCacheEntryInfo,_Inout_ LPDWORD lpdwEntryInfo,_Reserved_ LPVOID lpGroupAttributes,_Reserved_ LPDWORD lpcbGroupAttributes,_Reserved_ LPVOID lpReserved)
HANDLE None wininet.FindFirstUrlCacheEntryExA(_In_ LPCTSTR lpszUrlSearchPattern,_In_ DWORD dwFlags,_In_ DWORD dwFilter,_In_ GROUPID GroupId,_Out_ LPINTERNET_CACHE_ENTRY_INFO lpFirstCacheEntryInfo,_Inout_ LPDWORD lpdwEntryInfo,_Reserved_ LPVOID lpGroupAttributes,_Reserved_ LPDWORD lpcbGroupAttributes,_Reserved_ LPVOID lpReserved)
HRESULT None propsys.VariantToInt16(_In_ REFVARIANT varIn,_Out_ SHORT *piRet)
private void None.InsertShipper(Object source None,System.EventArgs e None)
public None None.X509Certificate(byte[] rawData None,String password None,X509KeyStorageFlags keyStorageFlags None)
protected void None.OnPageIndexChanging(GridViewPageEventArgs e None)
DWORD None rasapi32.RasGetConnectStatus(_In_ HRASCONN hrasconn,_Inout_ LPRASCONNSTATUS lprasconnstatus)
DWORD None rasapi32.RasGetConnectStatusW(_In_ HRASCONN hrasconn,_Inout_ LPRASCONNSTATUS lprasconnstatus)
DWORD None rasapi32.RasGetConnectStatusA(_In_ HRASCONN hrasconn,_Inout_ LPRASCONNSTATUS lprasconnstatus)
BOOL None shell32.GetFileNameFromBrowse(_In_opt_ HWND hwnd,_Inout_ PWSTR pszFilePath,UINT cchFilePath None,_In_opt_ PCWSTR pszWorkingDir,_In_ PCWSTR pszDefExt,_In_opt_ PCWSTR pszFilters,_In_opt_ PCWSTR szTitle)
protected None None.WebErrorEvent(String message None,Object eventSource None,int eventCode None,Exception exception None)
public DateTime None.ToDateTime(int year None,int month None,int day None,int hour None,int minute None,int second None,int millisecond None)
PDH_STATUS None pdh.PdhCollectQueryData(_Inout_ PDH_HQUERY hQuery)
errno_t None None._strlwr_s(char *str None,size_t numberOfElements None)
HRESULT None None.GetBufferCount([out] DWORD *pdwBufferCount)
BOOL None wininet.FtpPutFile(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszLocalFile,_In_ LPCTSTR lpszNewRemoteFile,_In_ DWORD dwFlags,_In_ DWORD_PTR dwContext)
BOOL None wininet.FtpPutFileW(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszLocalFile,_In_ LPCTSTR lpszNewRemoteFile,_In_ DWORD dwFlags,_In_ DWORD_PTR dwContext)
BOOL None wininet.FtpPutFileA(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszLocalFile,_In_ LPCTSTR lpszNewRemoteFile,_In_ DWORD dwFlags,_In_ DWORD_PTR dwContext)
HRESULT None certadm.CertSrvBackupGetBackupLogs(_In_ HCSBC hbc,_Out_ WCHAR **ppwszzBackupLogFiles,_Out_ DWORD *pcbSize)
HRESULT None certadm.CertSrvBackupGetBackupLogsW(_In_ HCSBC hbc,_Out_ WCHAR **ppwszzBackupLogFiles,_Out_ DWORD *pcbSize)
BOOL None wininet.InternetFindNextFile(_In_ HINTERNET hFind,_Out_ LPVOID lpvFindData)
BOOL None wininet.InternetFindNextFileW(_In_ HINTERNET hFind,_Out_ LPVOID lpvFindData)
BOOL None wininet.InternetFindNextFileA(_In_ HINTERNET hFind,_Out_ LPVOID lpvFindData)
HRESULT None tapi3.get_Privilege([out] CALL_PRIVILEGE *pPrivilege)
ULONG None propsys.VariantToUInt32WithDefault(_In_ REFVARIANT varIn,_In_ ULONG ulDefault)
protected void None.RaisePostBackEvent(String eventArgument None)
NTSTATUS WINAPI bcrypt.BCryptSetProperty(_Inout_ BCRYPT_HANDLE hObject,_In_ LPCWSTR pszProperty,_In_ PUCHAR pbInput,_In_ ULONG cbInput,_In_ ULONG dwFlags)
public String None.GetDesignTimeHtml(DesignerRegionCollection regions None)
VOID None None.WdfRequestSetCompletionRoutine(_In_ WDFREQUEST Request,_In_opt_ PFN_WDF_REQUEST_COMPLETION_ROUTINE CompletionRoutine,_In_opt_ WDFCONTEXT CompletionContext)
HRESULT None None.InitVariantFromUInt32(_In_ ULONG ulVal,_Out_ VARIANT *pvar)
BOOL WINAPI crypt32.CryptUnregisterOIDInfo(_In_ PCCRYPT_OID_INFO pInfo)
HRESULT None faxcom.put_CoverpageName([in] BSTR newVal)
create table None.MyTable(col1 int None,col2 smallmoney None,col3 decimal None)
COLORREF None None.ListView_SetOutlineColor(HWND hwnd None,COLORREF color None)
HRESULT None None.stopTransfer( None None)
HRESULT WINAPI webservices.WsMoveReader(_In_ WS_XML_READER* reader,_In_ WS_MOVE_TO moveTo,BOOL* found None,_In_opt_ WS_ERROR* error)
HRESULT WINAPI None.EngineAdapterQueryCalibrationData(_Inout_ PWINBIO_PIPELINE Pipeline,_Out_ PBOOLEAN DiscardAndRepeatCapture,_Out_ PUCHAR CalibrationBuffer,_Out_ PSIZE_T CalibrationBufferSize,_In_ SIZE_T MaxBufferSize)
BOOL None propsys.VariantToBooleanWithDefault(_In_ REFVARIANT varIn,_In_ BOOL fDefault)
VOID None sspicli.SspiLocalFree(_In_ PVOID DataBuffer)
HRESULT None None.GetFillBrush([out None None,retval] IXpsOMBrush **brush)
HRESULT None faxcom.get_SenderName([out None None,retval] BSTR *pVal)
DWORD APIENTRY rasapi32.RasUpdateConnection(_In_ HRASCONN hrasconn,_In_ LPRASUPDATECONN lprasupdateconn)
uint32 None dnsserverpsprovider.SetByServer([in] boolean PassThru,[in] string ComputerName,[in] string Name,[in] string TransportProtocol,[in] string TimeOfDay,[in] string RecursionScope,[in] string ServerInterfaceIP,[in] string QType,[in] uint32 ProcessingOrder,[in] string ClientSubnet,[in] string Condition,[in] string InternetProtocol,[in] string Fqdn,[out] DnsServerPolicy cmdletOutput)
public void None.OnUnload(EventArgs e None)
public void None.InitializeCell(DataControlFieldCell cell None,DataControlCellType cellType None,DataControlRowState rowState None,int rowIndex None)
HRESULT None None.put_ConnectedPlayers(long newVal None)
DWORD APIENTRY dhcpcsvc.DhcpRegisterParamChange(_In_ DWORD Flags,_In_ LPVOID Reserved,_In_ LPWSTR AdapterName,_In_ LPDHCPCAPI_CLASSID pClassId,_In_ DHCPCAPI_PARAMS_ARRAY Params,_Inout_ LPVOID Handle)
HRESULT None None.ShortToByte(_In_ SHORT sOperand,_Out_ BYTE *pb)
HRESULT None None.put_PlayerInactivityTimeout(long Val None)
DWORD None ntdsapi.DsListServersForDomainInSite(_In_ HANDLE hDs,_In_ LPTSTR domain,_In_ LPTSTR site,_Out_ PDS_NAME_RESULT *ppServers)
DWORD None ntdsapi.DsListServersForDomainInSiteW(_In_ HANDLE hDs,_In_ LPTSTR domain,_In_ LPTSTR site,_Out_ PDS_NAME_RESULT *ppServers)
DWORD None ntdsapi.DsListServersForDomainInSiteA(_In_ HANDLE hDs,_In_ LPTSTR domain,_In_ LPTSTR site,_Out_ PDS_NAME_RESULT *ppServers)
DWORD None mprapi.MprAdminTransportCreate(_In_ MPR_SERVER_HANDLE hMprServer,_In_ DWORD dwTransportId,_In_opt_ LPWSTR lpwsTransportName,_In_ LPBYTE pGlobalInfo,_In_ DWORD dwGlobalInfoSize,_In_opt_ LPBYTE pClientInterfaceInfo,_In_opt_ DWORD dwClientInterfaceInfoSize,_In_ LPWSTR lpwsDLLPath)
public void None.DetachAnimation(AnimationEventType type None)
uint32 None dnsserverpsprovider.SetByADZone([in] string DirectoryPartitionName,[in] string Name,[in] string ComputerName,[in] string ReplicationScope,[in] boolean PassThru,[out] DnsServerStubZone cmdletOutput)
MI_INLINE MI_Result None.MI_HostedProvider_Close(_Inout_ MI_HostedProvider *hostedProvider)
HRESULT None propsys.VariantToStrRet(_In_ REFVARIANT varIn,_Out_ STRRET *pstrret)
public void None.DeleteConnection(WebPartConnection connection None)
HRESULT None shlwapi.UrlApplyScheme(_In_ PCTSTR pszIn,_Out_ PTSTR pszOut,_Inout_ DWORD *pcchOut,DWORD dwFlags None)
HRESULT None shlwapi.UrlApplySchemeW(_In_ PCTSTR pszIn,_Out_ PTSTR pszOut,_Inout_ DWORD *pcchOut,DWORD dwFlags None)
HRESULT None shlwapi.UrlApplySchemeA(_In_ PCTSTR pszIn,_Out_ PTSTR pszOut,_Inout_ DWORD *pcchOut,DWORD dwFlags None)
DWORD DHCP_API_FUNCTION dhcpsapi.DhcpV4EnumPolicies(_In_opt_ LPWSTR ServerIpAddress,_Inout_ LPDWORD ResumeHandle,_In_ DWORD PreferredMaximum,_In_ BOOL fGlobalPolicy,_In_ DHCP_IP_ADDRESS SubnetAddress,_Out_ LPDHCP_POLICY_ARRAY *EnumInfo,_Out_ DWORD *ElementsRead,_Out_ DWORD *ElementsTotal)
HRESULT None wuapi.get_DeploymentAction([out] DeploymentAction *retval)
DWORD WINAPI iphlpapi.AllocateAndGetUdpExTableFromStack(_Out_ PVOID *ppUDPTable,_In_ BOOL bOrder,_In_ HANDLE hHeap,_In_ DWORD dwFlags,_In_ DWORD dwFamily)
HRESULT None mf.MFCreateVideoRendererActivate(_In_ HWND hwndVideo,_Out_ IMFActivate **ppActivate)
HRESULT None None.GetStrokeMiterLimit([out None None,retval] FLOAT *strokeMiterLimit)
BOOL None wininet.InternetCrackUrl(_In_ LPCTSTR lpszUrl,_In_ DWORD dwUrlLength,_In_ DWORD dwFlags,_Inout_ LPURL_COMPONENTS lpUrlComponents)
BOOL None wininet.InternetCrackUrlW(_In_ LPCTSTR lpszUrl,_In_ DWORD dwUrlLength,_In_ DWORD dwFlags,_Inout_ LPURL_COMPONENTS lpUrlComponents)
BOOL None wininet.InternetCrackUrlA(_In_ LPCTSTR lpszUrl,_In_ DWORD dwUrlLength,_In_ DWORD dwFlags,_Inout_ LPURL_COMPONENTS lpUrlComponents)
NTSTATUS None None.SpVerifySignature(_In_ LSA_SEC_HANDLE ContextHandle,_In_ PSecBufferDesc MessageBuffers,_In_ ULONG MessageSequenceNumber,_Out_ PULONG QualityOfProtection)
protected void None.OnPreviewStylusButtonUp(StylusButtonEventArgs e None)
private void None.myButtonPrint_OnClick(Object sender None,System.EventArgs e None)
LONG WINAPI winscard.SCardReconnect(_In_ SCARDHANDLE hCard,_In_ DWORD dwShareMode,_In_ DWORD dwPreferredProtocols,_In_ DWORD dwInitialization,_Out_opt_ LPDWORD pdwActiveProtocol)
BOOL None imm32.ImmSetCompositionFont(_In_ HIMC hIMC,_In_ LPLOGFONT lplf)
BOOL None imm32.ImmSetCompositionFontW(_In_ HIMC hIMC,_In_ LPLOGFONT lplf)
BOOL None imm32.ImmSetCompositionFontA(_In_ HIMC hIMC,_In_ LPLOGFONT lplf)
BOOL WINAPI kernel32.SetProcessWorkingSetSizeEx(_In_ HANDLE hProcess,_In_ SIZE_T dwMinimumWorkingSetSize,_In_ SIZE_T dwMaximumWorkingSetSize,_In_ DWORD Flags)
HRESULT None None.UpdateSubresource_Workaround(ID3D11Device *pDevice None,ID3D11DeviceContext *pDeviceContext None,ID3D11Resource *pDstResource None,UINT dstSubresource None,const D3D11_BOX *pDstBox,const void *pSrcData,UINT srcBytesPerElement None,UINT srcRowPitch None,UINT srcDepthPitch None,bool* pDidWorkAround None)
HRESULT None None.GetQueueBasepriorityProp(LPCWSTR wszQueueFormatName None,SHORT *piValue None)
static void None.DisplayAuthenticationProperties(NegotiateStream* stream None)
BOOL WINAPI advapi32.CryptGetProvParam(_In_ HCRYPTPROV hProv,_In_ DWORD dwParam,_Out_ BYTE *pbData,_Inout_ DWORD *pdwDataLen,_In_ DWORD dwFlags)
HRESULT None None.get_ExtendedProperties([out None None,retval] IInkExtendedProperties **Properties)
public boolean None.ContainsValue(Object value None)
BOOL None wininet.InternetGetCookie(_In_ LPCTSTR lpszUrl,_In_ LPCTSTR lpszCookieName,_Out_ LPTSTR lpszCookieData,_Inout_ LPDWORD lpdwSize)
BOOL None wininet.InternetGetCookieW(_In_ LPCTSTR lpszUrl,_In_ LPCTSTR lpszCookieName,_Out_ LPTSTR lpszCookieData,_Inout_ LPDWORD lpdwSize)
BOOL None wininet.InternetGetCookieA(_In_ LPCTSTR lpszUrl,_In_ LPCTSTR lpszCookieName,_Out_ LPTSTR lpszCookieData,_Inout_ LPDWORD lpdwSize)
int None None._strncoll(const char *string1,const char *string2,size_t count None)
HRESULT None None.GetVideoProcessorCaps([out] DXVA2_VideoProcessorCaps *pCaps)
HRESULT WINAPI cryptxml.CryptXmlVerifySignature(_In_ HCRYPTXML hSignature,_In_opt_ BCRYPT_KEY_HANDLE hKey,DWORD dwFlags None)
HRESULT None mf.MFCreateMediaSession(IMFAttributes *pConfiguration None,IMFMediaSession **ppMS None)
public int None.GetMaxCharCount(int byteCount None)
int None None.tolower(int c None)
public void None.SetTransformer(WebPartConnection connection None,WebPartTransformer transformer None)
HRESULT None softkbd.GetSoftKeyboardTextFont([out] LOGFONTW *pLogFont)
BOOL None wininet.FtpGetFile(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszRemoteFile,_In_ LPCTSTR lpszNewFile,_In_ BOOL fFailIfExists,_In_ DWORD dwFlagsAndAttributes,_In_ DWORD dwFlags,_In_ DWORD_PTR dwContext)
BOOL None wininet.FtpGetFileW(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszRemoteFile,_In_ LPCTSTR lpszNewFile,_In_ BOOL fFailIfExists,_In_ DWORD dwFlagsAndAttributes,_In_ DWORD dwFlags,_In_ DWORD_PTR dwContext)
BOOL None wininet.FtpGetFileA(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszRemoteFile,_In_ LPCTSTR lpszNewFile,_In_ BOOL fFailIfExists,_In_ DWORD dwFlagsAndAttributes,_In_ DWORD dwFlags,_In_ DWORD_PTR dwContext)
public MatchCollection None.Matches(String input None)
HRESULT None None.GetSelection([out None None,retval] IUIAutomationTextRangeArray **ranges)
HRESULT None msctf.GetText([out] BSTR *pbstrText)
public void None.ConvertStringBoolean(String stringVal None)
MI_INLINE MI_Result None.MI_Application_NewOperationOptions(_In_ MI_Application *application,MI_Boolean mustUnderstand None,_Out_ MI_OperationOptions *options)
protected void None.OnItemContainerStyleChanged(Style oldItemContainerStyle None,Style newItemContainerStyle None)
HRESULT None shell32.CanRenderComposited([out] BOOL *pfCanRenderComposited)
DWORD None virtdisk.MergeVirtualDisk(_In_ HANDLE VirtualDiskHandle,_In_ MERGE_VIRTUAL_DISK_FLAG Flags,_In_ PMERGE_VIRTUAL_DISK_PARAMETERS Parameters,_In_opt_ LPOVERLAPPED Overlapped)
DWORD None winmm.waveInMessage(HWAVEIN deviceID None,UINT uMsg None,DWORD_PTR dwParam1 None,DWORD_PTR dwParam2 None)
protected void None.Render(HtmlTextWriter output None)
HRESULT None None.Clone([out None None,retval] IXpsOMGradientStop **gradientStop)
HRESULT None None.ShortToULongLong(_In_ SHORT sOperand,_Out_ ULONGLONG *pullResult)
UINT None imm32.ImmGetVirtualKey(_In_ HWND hWnd)
HRESULT None msftedit.TxDeactivate(LONG lNewState None)
HRESULT None wuapi.get_Deadline([out] VARIANT *retval)
SECURITY_STATUS None credui.SspiUpdateCredentials(_In_ HANDLE ContextHandle,_In_ GUID *CredType,_In_ ULONG FlatCredUIContextLength,_In_ PUCHAR FlatCredUIContext)
HANDLE None wininet.RetrieveUrlCacheEntryStream(_In_ LPCTSTR lpszUrlName,_Out_ LPINTERNET_CACHE_ENTRY_INFO lpCacheEntryInfo,_Inout_ LPDWORD lpcbCacheEntryInfo,_In_ BOOL fRandomRead,_In_ DWORD dwReserved)
HANDLE None wininet.RetrieveUrlCacheEntryStreamW(_In_ LPCTSTR lpszUrlName,_Out_ LPINTERNET_CACHE_ENTRY_INFO lpCacheEntryInfo,_Inout_ LPDWORD lpcbCacheEntryInfo,_In_ BOOL fRandomRead,_In_ DWORD dwReserved)
HANDLE None wininet.RetrieveUrlCacheEntryStreamA(_In_ LPCTSTR lpszUrlName,_Out_ LPINTERNET_CACHE_ENTRY_INFO lpCacheEntryInfo,_Inout_ LPDWORD lpcbCacheEntryInfo,_In_ BOOL fRandomRead,_In_ DWORD dwReserved)
HRESULT None oleaut32.VarUI4FromUI2(_In_ USHORT uiIn,_Out_ ULONG *pulOut)
HRESULT None None.SetUrl(LPCWSTR pszUrl None)
uint32 None cimwin32.SetPowerState([in] uint16 PowerState,[in] datetime Time)
public RegistryKey None.OpenSubKey(String name None,boolean writable None)
HRESULT None oleaut32.VarDateFromR4(_In_ FLOAT fltIn,_Out_ DATE *pdateOut)
public int None.GetUpperBound(int dimension None)
public void None.EnablePlugin(ref int plFlags,ref int plHeartbeatPeriod)
private void None.listDragSource_QueryContinueDrag(Object sender None,System.Windows.Forms.QueryContinueDragEventArgs e None)
HRESULT None None.get_Renderer([out None None,retval] IInkRenderer **CurrentInkRenderer)
HRESULT None None.get_Cursors([out None None,retval] IInkCursors **Cursors)
protected void None.Dispose(boolean explicitDisposing None)
protected None None.TreeNode(SerializationInfo serializationInfo None,StreamingContext context None)
DWORD None rasapi32.RasGetLinkStatistics(_In_ HRASCONN hRasConn,_In_ DWORD dwSubEntry,_Inout_ RAS_STATS *lpStatistics)
HRESULT None None.get_Ink([out None None,retval] InkDisp **Ink)
HRESULT WINAPI None.CreateIFECommonInstance(_Out_ VOID **ppvObj)
protected void None.OnClick(EventArgs e None)
HRESULT None None.GetHelpTopic([out] LPOLESTR *lpCompiledHelpFile)
public boolean None.Equals(Object obj None)
public Stream None.GetManifestResourceStream(Type type None,String name None)
public void None.InitializeCell(DataControlFieldCell cell None,DataControlCellType cellType None,DataControlRowState rowState None,int rowIndex None)
uint32 None storageservice.GetSupportedGroupCopyStates([in] uint16 ReplicationType,[out] uint16 SupportedCopyStates[],[in None None,optional] String username,[in None None,optional] String password,[out None None,optional] MSFT_SMExtendedStatus ExtendedStatus)
HRESULT None None.ShortToULong(_In_ SHORT sOperand,_Out_ ULONG *pulResult)
DWORD None ntdsapi.DsMapSchemaGuids(_In_ HANDLE hDs,_In_ DWORD cGuids,_In_ GUID *rGuids,_Out_ DS_SCHEMA_GUID_MAP **ppGuidMap)
DWORD None ntdsapi.DsMapSchemaGuidsW(_In_ HANDLE hDs,_In_ DWORD cGuids,_In_ GUID *rGuids,_Out_ DS_SCHEMA_GUID_MAP **ppGuidMap)
DWORD None ntdsapi.DsMapSchemaGuidsA(_In_ HANDLE hDs,_In_ DWORD cGuids,_In_ GUID *rGuids,_Out_ DS_SCHEMA_GUID_MAP **ppGuidMap)
SerializableAttribute None None.ClassInterfaceAttribute(ClassInterfaceType.None None None)
BOOL APIENTRY kernel32.CheckTokenMembershipEx(_In_opt_ HANDLE TokenHandle,_In_ PSID SidToCheck,_In_ DWORD Flags,_Out_ PBOOL IsMember)
LPSTR WINAPI None.GetCaptureComment(HCAPTURE hCapture None)
VOID None None.IoUpdateShareAccess(_In_ PFILE_OBJECT FileObject,_Inout_ PSHARE_ACCESS ShareAccess)
private void None.OnDSUpdatedHandler(Object source None,SqlDataSourceStatusEventArgs e None)
DWORD CALLBACK None.RasDialFunc2(_In_ DWORD dwCallbackId,_In_ DWORD dwSubEntry,_In_ HRASCONN hrasconn,_In_ UINT unMsg,_In_ RASCONNSTATE rascs,_In_ DWORD dwError,_In_ DWORD dwExtendedError)
HRESULT None faxcom.get_FaxNumber([out None None,retval] BSTR *pVal)
HRESULT None None.ToString([out None None,retval] BSTR *ToString)
public None None.SoapReflectionImporter(String defaultNamespace None)
uint32 None dnsserverpsprovider.GetByZone([in] string Name,[in] string ComputerName,[in] string ZoneName,[out] DnsServerPolicy cmdletOutput[])
HRESULT None None.get_ContentViewWalker([out None None,retval] IUIAutomationTreeWalker **walker)
uint32 None dnsserverpsprovider.RemoveByInputObject([in] DnsServerResourceRecord InputObject,[in] string ZoneName,[in] boolean PassThru,[in] string ComputerName,[in] boolean Force,[in] string ZoneScope,[out] DnsServerResourceRecord cmdletOutput)
public DateTime None.AddTicks(long value None)
public void None.Remove(Installer value None)
VOID None None.MmResetDriverPaging(_In_ PVOID AddressWithinSection)
BOOL WINAPI comctl32._TrackMouseEvent(_Inout_ LPTRACKMOUSEEVENT lpEventTrack)
VOID None None.WdfDeviceClearRemovalRelationsDevices(_In_ WDFDEVICE Device)
DWORD WINAPI clusapi.ClusterNodeGetEnumCountEx(_In_ HNODEENUMEX hNodeEnum)
HRESULT None tapi3.get_MediaFormat([out] AM_MEDIA_TYPE **ppmt)
LONG WINAPI None.SCardGetReaderIcon(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReaderName,_Out_ LPBYTE pbIcon,_Inout_ LPDWORD pcbIcon)
BOOL None wininet.InternetReadFile(_In_ HINTERNET hFile,_Out_ LPVOID lpBuffer,_In_ DWORD dwNumberOfBytesToRead,_Out_ LPDWORD lpdwNumberOfBytesRead)
HRESULT WINAPI None.EngineAdapterSetAccountPolicy(_Inout_ PWINBIO_PIPELINE Pipeline,_In_ PWINBIO_ACCOUNT_POLICY PolicyItemArray,_In_ SIZE_T PolicyItemCount)
boolean None None.GetDataPresent(String format None,boolean autoConvert None)
HRESULT None None.SetSAMIStyleByIndex(IMFMediaSource *pSource None,DWORD index None)
void None None.Page_Load(Object sender None,System.EventArgs e None)
SECURITY_STATUS None sspicli.SspiExcludePackage(_In_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE AuthIdentity,_In_ PCWSTR pszPackageName,_Out_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE *ppNewAuthIdentity)
void None None.AllMemoryBarrier(void None None)
USHORT None propsys.VariantToUInt16WithDefault(_In_ REFVARIANT varIn,_In_ USHORT uiDefault)
HRESULT None None.GetIdealVideoSize([out] SIZE *pszMin,[out] SIZE *pszMax)
public void None.ConvertStringBoolean(String stringVal None)
HRESULT None None.SizeTToULong(_In_ size_t cbOperand,_Out_ ULONG *pulResult)
public String None.Substring(int startIndex None)
HRESULT None mfplat.MFWrapMediaType(IMFMediaType *pOrig None,REFGUID MajorType None,REFGUID SubType None,IMFMediaType **ppWrap None)
void None None.InterlockedAdd(in R dest,in T value,out T original_value)
BOOL None None.SyncUpdateProc(LPVOID pData None,PDS_REPSYNCALL_UPDATE pUpdate None)
protected void None.button1_Click(Object sender None,System.EventArgs e None)
HRESULT None fxscomex.get_AvailableOperations([out None None,retval] FAX_JOB_OPERATIONS_ENUM *AvailableOperations)
BOOL None imm32.ImmGetCompositionWindow(_In_ HIMC hIMC,_Out_ LPCOMPOSITIONFORM lpCompForm)
DWORD WINAPI kernel32.GetFileAttributes(_In_ LPCTSTR lpFileName)
DWORD WINAPI kernel32.GetFileAttributesW(_In_ LPCTSTR lpFileName)
DWORD WINAPI kernel32.GetFileAttributesA(_In_ LPCTSTR lpFileName)
HRESULT None tapi3.get_CompletionMessages([out] VARIANT *pVariant)
HRESULT WINAPI None.EngineAdapterSelectCalibrationFormat(_Inout_ PWINBIO_PIPELINE Pipeline,_In_ PWINBIO_UUID FormatArray,_In_ SIZE_T FormatCount,_Out_ PWINBIO_UUID SelectedFormat,_Out_ PSIZE_T MaxBufferSize)
public None None.Color(Colors color None)
int None None.main(void None None)
HRESULT None None.SetURLMapping(LPCOLESTR pwszURL None,DB_DWRESERVE dwReserved None,REFCLSID rclsidProvider None)
NTSTATUS None advapi32.LsaQueryInformationPolicy(_In_ LSA_HANDLE PolicyHandle,_In_ POLICY_INFORMATION_CLASS InformationClass,_Out_ PVOID *Buffer)
BOOL WINAPI kernel32.VerifyVersionInfo(_In_ LPOSVERSIONINFOEX lpVersionInfo,_In_ DWORD dwTypeMask,_In_ DWORDLONG dwlConditionMask)
BOOL WINAPI kernel32.VerifyVersionInfoW(_In_ LPOSVERSIONINFOEX lpVersionInfo,_In_ DWORD dwTypeMask,_In_ DWORDLONG dwlConditionMask)
BOOL WINAPI kernel32.VerifyVersionInfoA(_In_ LPOSVERSIONINFOEX lpVersionInfo,_In_ DWORD dwTypeMask,_In_ DWORDLONG dwlConditionMask)
public boolean None.CanConvertTo(Type destinationType None)
private void None.showCheckedNodesButton_Click(Object sender None,EventArgs e None)
IAsyncResult None None.BeginClose(AsyncCallback callback None,Object state None)
HRESULT None None.SetAttribute(DWORD ValueName None,DWORD dwValue None)
BOOL None imm32.ImmGetStatusWindowPos(_In_ HIMC hIMC,_Out_ LPPOINT lpptPos)
HRESULT None None.get_BezierCusps([out None None,retval] VARIANT *Cusps)
uint32 None dnsserverpsprovider.SetByZone([in] boolean PassThru,[in] string ComputerName,[in] string ZoneScope,[in] string ZoneName,[in] string ClientSubnet,[in] string Condition,[in] string Fqdn,[in] string InternetProtocol,[in] string Name,[in] uint32 ProcessingOrder,[in] string QType,[in] string ServerInterfaceIP,[in] string TimeOfDay,[in] string TransportProtocol,[out] DnsServerPolicy cmdletOutput)
protected void None.OnAfterInstall(IDictionary savedState None)
HRESULT None certadm.CertSrvBackupRead(_In_ HCSBC hbc,_Out_ VOID *pvBuffer,_In_ DWORD cbBuffer,_Out_ DWORD *pcbRead)
HRESULT None mfplat.MFConvertColorInfoFromDXVA(_Inout_ MFVIDEOFORMAT *pToFormat,_In_ DWORD dwFromDXVA)
void None None.InterlockedMin(in R dest,in T value,out T original_value)
NTSTATUS WINAPI bcrypt.BCryptGenerateKeyPair(_Inout_ BCRYPT_ALG_HANDLE hAlgorithm,_Out_ BCRYPT_KEY_HANDLE *phKey,_In_ ULONG dwLength,_In_ ULONG dwFlags)
BOOL WINAPI crypt32.CertSerializeCRLStoreElement(_In_ PCCRL_CONTEXT pCrlContext,_In_ DWORD dwFlags,_Out_ BYTE *pbElement,_Inout_ DWORD *pcbElement)
private void None.ShowLineAndAlignment(PaintEventArgs e None)
HRESULT None None.AllocPacket(IWMSPacket** ppPacket None)
LONG WINAPI tapi32.lineGetAgentStatus(HLINE hLine None,DWORD dwAddressID None,LPLINEAGENTSTATUS lpAgentStatus None)
LONG WINAPI tapi32.lineGetAgentStatusW(HLINE hLine None,DWORD dwAddressID None,LPLINEAGENTSTATUS lpAgentStatus None)
LONG WINAPI tapi32.lineGetAgentStatusA(HLINE hLine None,DWORD dwAddressID None,LPLINEAGENTSTATUS lpAgentStatus None)
ULONG WINAPI advapi32.PerfDeleteCounters(_In_ HANDLE hQuery,_Inout_ PPERF_COUNTER_IDENTIFIER pCounters,DWORD cbCounters None)
HRESULT None None.ULongLongToLongLong(_In_ ULONGLONG ullOperand,_Out_ LONGLONG *pllResult)
protected void None.OnKeyUp(KeyEventArgs e None)
HRESULT WINAPI None.EngineAdapterControlUnitPrivileged(_Inout_ PWINBIO_PIPELINE Pipeline,_In_ ULONG ControlCode,_In_ PUCHAR SendBuffer,_In_ SIZE_T SendBufferSize,_In_ PUCHAR ReceiveBuffer,_In_ SIZE_T ReceiveBufferSize,_Out_ PSIZE_T ReceiveDataSize,_Out_ PULONG OperationStatus)
unsigned int None._mbcjistojms(unsigned int c)
BOOL None wininet.ResumeSuspendedDownload(_In_ HINTERNET hRequest,_In_ DWORD dwResultCode)
int None None.__toascii(int c None)
HRESULT None wuapi.get_Source([out] BSTR *retval)
DWORD APIENTRY None.AddConnectNotify(_Inout_ LPNOTIFYINFO lpNotifyInfo,_In_ LPNOTIFYADD lpAddInfo)
DWORD None mprapi.MprConfigTransportGetInfo(_In_ HANDLE hMprConfig,_In_ HANDLE hRouterTransport,_Inout_opt_ LPBYTE *ppGlobalInfo,_Out_opt_ LPDWORD lpdwGlobalInfoSize,_Inout_opt_ LPBYTE *ppClientInterfaceInfo,_Out_opt_ LPDWORD lpdwClientInterfaceInfoSize,_Inout_opt_ LPWSTR *lplpwsDLLPath)
uint None None.f32tof16(in float value)
public Point None.PointToClient(Point p None)
HRESULT None None.GetSampleFlags([out] DWORD *pdwSampleFlags)
public WebResponse None.EndGetResponse(IAsyncResult asyncResult None)
public Type None.MakeGenericType(Type[] typeArguments None)
DWORD None None.NPAddConnection(_In_ LPNETRESOURCE lpNetResource,_In_ LPTSTR lpPassword,_In_ LPTSTR lpUserName)
HRESULT None None.InitPropVariantFromUInt64(_In_ ULONGLONG ullVal,_Out_ PROPVARIANT *ppropvar)
VOID WINAPI sas.SendSAS(_In_ BOOL AsUser)
IFsrmAction None None.CreateAction(_FsrmActionType ActionType None)
BOOLEAN None None.WdfTimerStop(_In_ WDFTIMER Timer,_In_ BOOLEAN Wait)
public void None.BeginStoryboard(Storyboard storyboard None,HandoffBehavior handoffBehavior None,boolean isControllable None)
HRESULT None None.get_HostInfo([out] IVMHostInfo **hostMachine)
HRESULT None None.get_SessionStartBlock([out] LONG *pVal)
LONG CALLBACK None.FMExtensionProc(HWND hwnd None,WORD wMsg None,LONG lParam None)
LONG CALLBACK None.FMExtensionProcW(HWND hwnd None,WORD wMsg None,LONG lParam None)
HRESULT None wuapi.get_BundledUpdates([out] IUpdateCollection **retval)
public void None.InitializeExistingComponent(IDictionary defaultValues None)
HRESULT None None.Int64ToPtrdiffT(_In_ INT64 i64Operand,_Out_ ptrdiff_t *pcbResult)
protected void None.OnContextMenuClosing(ContextMenuEventArgs e None)
VOID None None.WdfDeviceInitSetFileObjectConfig(_In_ PWDFDEVICE_INIT DeviceInit,_In_ PWDF_FILEOBJECT_CONFIG FileObjectConfig,_In_opt_ PWDF_OBJECT_ATTRIBUTES FileObjectAttributes)
protected void None.OnIsStylusCaptureWithinChanged(DependencyPropertyChangedEventArgs e None)
public void None.AddLinkedForms(IList linkedForms None)
public int None.EndRead(IAsyncResult asyncResult None)
LRESULT None imm32.ImmEscape(_In_ HKL hKL,_In_ HIMC hIMC,_In_ UINT uEscape,_Inout_ LPVOID lpData)
LRESULT None imm32.ImmEscapeW(_In_ HKL hKL,_In_ HIMC hIMC,_In_ UINT uEscape,_Inout_ LPVOID lpData)
LRESULT None imm32.ImmEscapeA(_In_ HKL hKL,_In_ HIMC hIMC,_In_ UINT uEscape,_Inout_ LPVOID lpData)
HRESULT WINAPI None.CreateIFELanguageInstance(_In_ REFCLSID clsid,_Out_ VOID **ppvObj)
HRESULT None None.ULongToUChar(_In_ ULONG ulOperand,_Out_ UCHAR *pch)
SECURITY_STATUS None credui.SspiPromptForCredentials(_In_ PCTSTR pszTargetName,_In_ PCREDUI_INFOW pUiInfo,_In_ DWORD dwAuthError,_In_ PCTSTR pszPackage,_In_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE pInputAuthIdentity,_Out_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE *ppAuthIdentity,_Inout_opt_ BOOL *pfSave,_In_ DWORD dwFlags)
SECURITY_STATUS None credui.SspiPromptForCredentialsW(_In_ PCTSTR pszTargetName,_In_ PCREDUI_INFOW pUiInfo,_In_ DWORD dwAuthError,_In_ PCTSTR pszPackage,_In_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE pInputAuthIdentity,_Out_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE *ppAuthIdentity,_Inout_opt_ BOOL *pfSave,_In_ DWORD dwFlags)
SECURITY_STATUS None credui.SspiPromptForCredentialsA(_In_ PCTSTR pszTargetName,_In_ PCREDUI_INFOW pUiInfo,_In_ DWORD dwAuthError,_In_ PCTSTR pszPackage,_In_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE pInputAuthIdentity,_Out_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE *ppAuthIdentity,_Inout_opt_ BOOL *pfSave,_In_ DWORD dwFlags)
HRESULT None tapi3.Clone([out] IEnumCall **ppEnum)
HRESULT None oleaut32.VarUI8FromR4(_In_ FLOAT fltIn,_Out_ ULONG64 *pi64Out)
private void None.Page_Load(Object sender None,System.EventArgs e None)
void None None.printf(string format None,argument ... None)
HRESULT WINAPI webservices.WsCopyError(_In_ WS_ERROR* source,_In_ WS_ERROR* destination)
HRESULT None wuapi.get_LastDeploymentChangeTime([out] DATE *retval)
private void None.textBox1_Enter(Object sender None,System.EventArgs e None)
HRESULT None None.GetWindowInputRectangle([out] IInkRectangle **WindowInputRectangle)
HRESULT None None.IntPtrToLongPtr(_In_ INT_PTR iOperand,_Out_ LONG_PTR *plResult)
public void None.DrawRectangle(Pen pen None,Rectangle rect None)
protected void None.OnIsKeyboardFocusWithinChanged(DependencyPropertyChangedEventArgs e None)
HRESULT None None.SetMulticastAddressProp(LPCWSTR wszQueueFormatName None,LPWSTR wszValue None)
BOOL None wininet.InternetGoOnline(_In_ LPTSTR lpszURL,_In_ HWND hwndParent,_In_ DWORD dwFlags)
BOOL None wininet.InternetGoOnlineW(_In_ LPTSTR lpszURL,_In_ HWND hwndParent,_In_ DWORD dwFlags)
BOOL None wininet.InternetGoOnlineA(_In_ LPTSTR lpszURL,_In_ HWND hwndParent,_In_ DWORD dwFlags)
BOOLEAN None None.WdfRequestSend(_In_ WDFREQUEST Request,_In_ WDFIOTARGET Target,_In_opt_ PWDF_REQUEST_SEND_OPTIONS RequestOptions)
HRESULT None None.get_VirtualNetworks([out] IVMVirtualNetworkCollection **virtualNetworkCollection)
BOOL None wininet.InternetCanonicalizeUrl(_In_ LPCTSTR lpszUrl,_Out_ LPTSTR lpszBuffer,_Inout_ LPDWORD lpdwBufferLength,_In_ DWORD dwFlags)
BOOL None wininet.InternetCanonicalizeUrlW(_In_ LPCTSTR lpszUrl,_Out_ LPTSTR lpszBuffer,_Inout_ LPDWORD lpdwBufferLength,_In_ DWORD dwFlags)
BOOL None wininet.InternetCanonicalizeUrlA(_In_ LPCTSTR lpszUrl,_Out_ LPTSTR lpszBuffer,_Inout_ LPDWORD lpdwBufferLength,_In_ DWORD dwFlags)
HRESULT None None.get_VMRCAuthenticators([out] IVMRCAuthenticatorCollection **authenticators)
HRESULT None None.SetStreamSignalParam(VARIANT* pParameter None)
public void None.AddAt(int index None,TreeNode child None)
float None None.f16tof32(in uint value)
NTSTATUS None None.ZwOpenResourceManager(_Out_ PHANDLE ResourceManagerHandle,_In_ ACCESS_MASK DesiredAccess,_In_ HANDLE TmHandle,_In_ LPGUID ResourceManagerGuid,_In_opt_ POBJECT_ATTRIBUTES ObjectAttributes)
LONG WINAPI kernel32.GetCurrentPackagePath(_Inout_ UINT32 *pathLength,_Out_opt_ PWSTR path)
HRESULT None oleaut32.VarI2FromUI4(_In_ ULONG ulIn,_Out_ SHORT *psOut)
BOOL None wininet.InternetCheckConnection(_In_ LPCTSTR lpszUrl,_In_ DWORD dwFlags,_In_ DWORD dwReserved)
BOOL None wininet.InternetCheckConnectionW(_In_ LPCTSTR lpszUrl,_In_ DWORD dwFlags,_In_ DWORD dwReserved)
BOOL None wininet.InternetCheckConnectionA(_In_ LPCTSTR lpszUrl,_In_ DWORD dwFlags,_In_ DWORD dwReserved)
HANDLE None None.CreateThread(_In_ SEC_ATTRS SecurityAttributes,_In_ ULONG StackSize,_In_ SEC_THREAD_START StartFunction,_In_ PVOID ThreadParameter,_In_ ULONG CreationFlags,_Out_ PULONG ThreadId)
PVOID None None.AllocateLsaHeap(_In_ ULONG Length)
protected void None.CopyPersonalizationState(WebPart webPartA None,WebPart webPartB None)
SEC_ENTRY None None.DeleteConnectedIdentity(_In_ PVOID ProviderHandle,_In_opt_ HANDLE UserToken,_In_ PSID UserSid,_In_ PWSTR IdentityUserName)
HRESULT None msctf.Clone([out] IEnumTfInputProcessorProfiles **ppEnum)
protected void None.OnPreviewStylusButtonUp(StylusButtonEventArgs e None)
HRESULT None propsys.PropVariantToUInt16(_In_ REFPROPVARIANT propvarIn,_Out_ USHORT *puiRet)
public DateTime None.AddTicks(long value None)
public void None.RenderChildren(HtmlTextWriter writer None)
HRESULT None mfplat.MFCreateURLFromPath(_In_opt_ LPCWSTR pwszFilePath,_Out_ LPWSTR *ppwszFileURL)
HRESULT None twinapi.GetApplicationViewOrientation([out] APPLICATION_VIEW_ORIENTATION *viewOrientation)
public void None.NavigateIntoIndex(int index None)
HGLOBAL WINAPI kernel32.GlobalAlloc(_In_ UINT uFlags,_In_ SIZE_T dwBytes)
HRESULT None propsys.VariantToFileTime(_In_ REFVARIANT varIn,_In_ PSTIME_FLAGS stfOut,_Out_ FILETIME *pftOut)
DWORD None mprapi.MprConfigInterfaceTransportEnum(_In_ HANDLE hMprConfig,_In_ HANDLE hRouterInterface,_In_ DWORD dwLevel,_Inout_ LPBYTE *lplpBuffer,_In_ DWORD dwPrefMaxLen,_Out_ LPDWORD lpdwEntriesRead,_Out_ LPDWORD lpdwTotalEntries,_Inout_opt_ LPDWORD lpdwResumeHandle)
HRESULT WINAPI None.EngineAdapterVerifyFeatureSet(_Inout_ PWINBIO_PIPELINE Pipeline,_In_ PWINBIO_IDENTITY Identity,_In_ WINBIO_BIOMETRIC_SUBTYPE SubFactor,_Out_ PBOOLEAN Match,_Out_ PUCHAR *PayloadBlob,_Out_ PSIZE_T PayloadBlobSize,_Out_ PUCHAR *HashValue,_Out_ PSIZE_T HashSize,_Out_ WINBIO_REJECT_DETAIL *RejectDetail)
BOOL None ntdsapi.DsCrackUnquotedMangledRdn(_In_ LPCTSTR pszRDN,_In_ DWORD cchRDN,_Out_opt_ GUID *pGuid,_Out_opt_ DS_MANGLE_FOR *peDsMangleFor)
BOOL None ntdsapi.DsCrackUnquotedMangledRdnW(_In_ LPCTSTR pszRDN,_In_ DWORD cchRDN,_Out_opt_ GUID *pGuid,_Out_opt_ DS_MANGLE_FOR *peDsMangleFor)
BOOL None ntdsapi.DsCrackUnquotedMangledRdnA(_In_ LPCTSTR pszRDN,_In_ DWORD cchRDN,_Out_opt_ GUID *pGuid,_Out_opt_ DS_MANGLE_FOR *peDsMangleFor)
protected void None.button1_Click(Object sender None,System.EventArgs e None)
BOOL WINAPI kernel32.TryEnterCriticalSection(_Inout_ LPCRITICAL_SECTION lpCriticalSection)
uint32 None dnsserverpsprovider.AddByCName([in] string HostNameAlias,[in] string ZoneName,[in] datetime TimeToLive,[in] boolean AllowUpdateAny,[in] string Name,[in] string ComputerName,[in] boolean AgeRecord,[in] boolean CName,[in] boolean PassThru,[in] string ZoneScope,[out] DnsServerResourceRecord cmdletOutput)
IFsrmAction None None.CreateAction(_FsrmActionType ActionType None)
protected void None.button1_Click(Object sender None,System.EventArgs e None)
protected void None.OnLayout(LayoutEventArgs levent None)
SECURITY_STATUS None credui.SspiUnmarshalCredUIContext(_In_ PUCHAR MarshaledCredUIContext,_In_ ULONG MarshaledCredUIContextLength,_Out_ PSEC_WINNT_CREDUI_CONTEXT *CredUIContext)
VOID None None.NdisMGetDeviceProperty(_In_ NDIS_HANDLE MiniportAdapterHandle,_Out_opt_ PDEVICE_OBJECT *PhysicalDeviceObject,_Out_opt_ PDEVICE_OBJECT *FunctionalDeviceObject,_Out_opt_ PDEVICE_OBJECT *NextDeviceObject,_Out_opt_ PCM_RESOURCE_LIST *AllocatedResources,_Out_opt_ PCM_RESOURCE_LIST *AllocatedResourcesTranslated)
HRESULT None sptip.Clone([out] IEnumTfLatticeElements **ppEnum)
DWORD None ntdsapi.DsQuoteRdnValue(_In_ DWORD cUnquotedRdnValueLength,_In_ LPCTCH psUnquotedRdnValue,_Inout_ DWORD *pcQuotedRdnValueLength,_Out_ LPTCH psQuotedRdnValue)
DWORD None ntdsapi.DsQuoteRdnValueW(_In_ DWORD cUnquotedRdnValueLength,_In_ LPCTCH psUnquotedRdnValue,_Inout_ DWORD *pcQuotedRdnValueLength,_Out_ LPTCH psQuotedRdnValue)
DWORD None ntdsapi.DsQuoteRdnValueA(_In_ DWORD cUnquotedRdnValueLength,_In_ LPCTCH psUnquotedRdnValue,_Inout_ DWORD *pcQuotedRdnValueLength,_Out_ LPTCH psQuotedRdnValue)
public void None.EndWrite(IAsyncResult asyncResult None)
HRESULT None mf.MFGetSupportedMimeTypes(_Out_ PROPVARIANT *pPropVarMimeTypeArray)
HRESULT None None.OnVideoStreamTick([out] LONGLONG *pPts)
BOOL None imm32.ImmSetCompositionFont(_In_ HIMC hIMC,_In_ LPLOGFONT lplf)
BOOL None imm32.ImmSetCompositionFontW(_In_ HIMC hIMC,_In_ LPLOGFONT lplf)
BOOL None imm32.ImmSetCompositionFontA(_In_ HIMC hIMC,_In_ LPLOGFONT lplf)
HRESULT WINAPI None.EngineAdapterDetach(_Inout_ PWINBIO_PIPELINE Pipeline)
HRESULT None mfplat.MFCreateAttributes(_Out_ IMFAttributes **ppMFAttributes,_In_ UINT32 cInitialSize)
HINTERNET None wininet.FtpFindFirstFile(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszSearchFile,_Out_ LPWIN32_FIND_DATA lpFindFileData,_In_ DWORD dwFlags,_In_ DWORD_PTR dwContext)
HINTERNET None wininet.FtpFindFirstFileW(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszSearchFile,_Out_ LPWIN32_FIND_DATA lpFindFileData,_In_ DWORD dwFlags,_In_ DWORD_PTR dwContext)
HINTERNET None wininet.FtpFindFirstFileA(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszSearchFile,_Out_ LPWIN32_FIND_DATA lpFindFileData,_In_ DWORD dwFlags,_In_ DWORD_PTR dwContext)
HRESULT None oleaut32.VarR8FromI8(_In_ LONG64 i64In,_Out_ DOUBLE *pdblOut)
HRESULT None None.get_RootDirectories(IWMSRootDirectories** ppRootDirectories None)
BOOL WINAPI crypt32.CryptVerifyCertificateSignature(_In_ HCRYPTPROV_LEGACY hCryptProv,_In_ DWORD dwCertEncodingType,_In_ BYTE *pbEncoded,_In_ DWORD cbEncoded,_In_ PCERT_PUBLIC_KEY_INFO pPublicKey)
UInt32 None None.GetAttributes([out] Boolean VolumeScrubEnabled)
DWORD None rasapi32.RasGetAutodialEnable(_In_ DWORD dwDialingLocation,_Out_ LPBOOL lpfEnabled)
DWORD None rasapi32.RasGetAutodialEnableW(_In_ DWORD dwDialingLocation,_Out_ LPBOOL lpfEnabled)
DWORD None rasapi32.RasGetAutodialEnableA(_In_ DWORD dwDialingLocation,_Out_ LPBOOL lpfEnabled)
private void None.Page_Load(Object sender None,System.EventArgs e None)
private void None.Page_Load(Object sender None,System.EventArgs e None)
HRESULT None propsys.PropVariantToDouble(_In_ REFPROPVARIANT propvarIn,_Out_ DOUBLE *pdblRet)
DWORD None rasapi32.RasSetCustomAuthData(_In_ LPCWSTR pszPhonebook,_In_ LPCWSTR pszEntry,_In_ BYTE *pbCustomAuthData,_In_ DWORD dwSizeofCustomAuthData)
DWORD None rasapi32.RasSetCustomAuthDataW(_In_ LPCWSTR pszPhonebook,_In_ LPCWSTR pszEntry,_In_ BYTE *pbCustomAuthData,_In_ DWORD dwSizeofCustomAuthData)
DWORD None rasapi32.RasSetCustomAuthDataA(_In_ LPCWSTR pszPhonebook,_In_ LPCWSTR pszEntry,_In_ BYTE *pbCustomAuthData,_In_ DWORD dwSizeofCustomAuthData)
DWORD None user32.GetWindowContextHelpId(HWND hwnd None)
protected void None.OnPageIndexChanging(GridViewPageEventArgs e None)
public void None.BringIntoView(Rect targetRectangle None)
HRESULT None None.get_NumPendingConnections([out None None,retval] DWORD *pNumPendingConnections)
HRESULT None None.DWordPtrToInt(_In_ DWORD_PTR dwOperand,_Out_ INT *piResult)
BOOL None wininet.InternetLockRequestFile(_In_ HINTERNET hInternet,_Out_ HANDLE *lphLockReqHandle)
HRESULT None mfplat.MFGetAttributesAsBlob(_In_ IMFAttributes *pAttributes,_Out_ UINT8 *pBuf,_In_ UINT cbBufSize)
HRESULT None propsys.PropVariantToUInt16Vector(_In_ REFPROPVARIANT propvar,_Out_ USHORT *prgn,_In_ ULONG crgn,_Out_ ULONG *pcElem)
HRESULT None None.put_IncomingBandwidth(long lVal None)
STDAPI None mfplat.MFIsContentProtectionDeviceSupported(_In_ REFGUID ProtectionSystemId,_Out_ BOOL *isSupported)
HRESULT None msftedit.TxGetAcceleratorPos(LONG *pcp None)
public void None.NavigateIntoIndex(int index None)
HRESULT None oleaut32.VarI1FromI4(_In_ LONG lIn,_Out_ CHAR *pcOut)
HRESULT None None.ULongPtrToChar(_In_ ULONG_PTR ulOperand,_Out_ CHAR *pch)
public void None.InitializeCell(DataControlFieldCell cell None,DataControlCellType cellType None,DataControlRowState rowState None,int rowIndex None)
HRESULT CALLBACK msctf.InitLocalMsCtfMonitor(_In_ DWORD dwFlags)
HRESULT None None.OnAuthenticateComplete(WMS_AUTHENTICATION_RESULT AuthResult None,VARIANT ChallengeBlob None,VARIANT Context None)
private void None.Form1_Load(Object sender None,EventArgs e None)
public void None.Remove(TreeNode value None)
void None None.Page_Load(Object sender None,System.EventArgs e None)
private void None.button1_Click(Object sender None,System.EventArgs e None)
HRESULT None None.get_LineAlternates([out None None,retval] IInkRecognitionAlternates **LineAlternates)
public None None.DataGridItemCollection(ArrayList items None)
HRESULT None wuapi.get_InstallationBehavior([out] IInstallationBehavior **retval)
protected void None.CreateTemplatedUI(boolean doDataBind None)
protected void None.OnPaint(PaintEventArgs e None)
HRESULT None None.SSIZETToSizeT(_In_ SSIZE_T cbOperand,_Out_ size_t *pcbResult)
HRESULT WINAPI None.EngineAdapterIdentifyFeatureSet(_Inout_ PWINBIO_PIPELINE Pipeline,_Out_ PWINBIO_IDENTITY Identity,_Out_ PWINBIO_BIOMETRIC_SUBTYPE SubFactor,_Out_ PUCHAR *PayloadBlob,_Out_ PSIZE_T PayloadBlobSize,_Out_ PUCHAR *HashValue,_Out_ PSIZE_T HashSize,_Out_ PWINBIO_REJECT_DETAIL RejectDetail)
HRESULT None None.get_CanMove([out None None,retval] BOOL *pRetVal)
HRESULT None faxcom.get_DisplayName([out None None,retval] BSTR *pVal)
HRESULT None None.ULongLongToInt(_In_ ULONGLONG ullOperand,_Out_ INT *piResult)
HRESULT None None.UInt8ToChar(_In_ UINT8 u8Operand,_Out_ CHAR *pch)
DWORD APIENTRY dhcpcsvc.DhcpUndoRequestParams(_In_ DWORD Flags,_In_ LPVOID Reserved,_In_ LPWSTR AdapterName,_In_ LPWSTR RequestIdStr)
HRESULT None mf.MFCreateAudioRendererActivate(_Out_ IMFActivate **ppActivate)
STDAPI None mf.MFCreateProtectedEnvironmentAccess(_Out_ IMFProtectedEnvironmentAccess **ppAccess)
HRESULT None mfplat.MFEndUnregisterWorkQueueWithMMCSS(_In_ IMFAsyncResult *pResult)
HRESULT None None.DisplaySAMIStyleNames(IMFPresentationDescriptor *pPD None)
protected void None.OnChildDesiredSizeChanged(UIElement child None)
BOOL None shlwapi.PathIsDirectory(_In_ LPCTSTR pszPath)
BOOL None shlwapi.PathIsDirectoryW(_In_ LPCTSTR pszPath)
BOOL None shlwapi.PathIsDirectoryA(_In_ LPCTSTR pszPath)
HRESULT WINAPI mf.MFCreateAVIMediaSink(_In_ IMFByteStream *pIByteStream,_In_ IMFMediaType *pVideoMediaType,_In_opt_ IMFMediaType *pAudioMediaType,_Out_ IMFMediaSink **ppIMediaSink)
HRESULT None tapi3.EnumerateDeviceClasses([out] IEnumBstr **ppEnumDeviceClass)
HRESULT None wuapi.get_EulaText([out] BSTR *retval)
unsigned long None.strtoul(const char *nptr,char **endptr None,int base None)
HRESULT None oleaut32.VarCyFromI4(_In_ LONG lIn,_Out_ CY *pcyOut)
protected void None.LoadPrivateViewState(Object state None)
HRESULT None mfplat.MFPutWorkItem(_In_ DWORD dwQueue,_In_ IMFAsyncCallback *pCallback,_In_ IUnknown *pState)
BOOL None None.WlxGetStatusMessage(_In_ PVOID pWlxContext,_Out_ DWORD *pdwOptions,_Out_ PWSTR pMessage,_In_ DWORD dwBufferSize)
protected void None.OnRender(DrawingContext drawingContext None)
HRESULT None None.GetWindowInputRectangle([out] IInkRectangle **windowInputRectangle)
HRESULT WINAPI None.EngineAdapterUpdateEnrollment(_Inout_ PWINBIO_PIPELINE Pipeline,_Out_ PWINBIO_REJECT_DETAIL RejectDetail)
HRESULT None propsys.PropVariantToInt64VectorAlloc(_In_ REFPROPVARIANT propvar,_Out_ LONGLONG **pprgn,_Out_ ULONG *pcElem)
public void None.SetSelected(int index None,boolean value None)
public IAsyncResult None.BeginCommit(AsyncCallback asyncCallback None,Object asyncState None)
protected void None.AdjustFormScrollbars(boolean displayScrollbars None)
protected boolean None.OnDeserializeUnrecognizedElement(String elementName None,XmlReader reader None)
HRESULT None None.ByteToChar(_In_ BYTE bOperand,_Out_ CHAR *pch)
HRESULT None None.GetDevice([out None None,retval] IDirect3DDevice9 **ppDevice)
BOOL None shlwapi.PathRenameExtension(_Inout_ LPTSTR pszPath,_In_ LPCTSTR pszExt)
BOOL None shlwapi.PathRenameExtensionW(_Inout_ LPTSTR pszPath,_In_ LPCTSTR pszExt)
BOOL None shlwapi.PathRenameExtensionA(_Inout_ LPTSTR pszPath,_In_ LPCTSTR pszExt)
HRESULT None None.Int8ToUInt(_In_ INT8 i8Operand,_Out_ UINT *puResult)
HRESULT None None.IntToInt8(_In_ INT iOperand,_Out_ INT8 *pi8Result)
BOOLAPI None wininet.FindCloseUrlCache(_In_ HANDLE hEnumHandle)
DWORD WINAPI clusapi.ResumeClusterNode(_In_ HNODE hNode)
HRESULT None faxcom.put_RecipientDepartment([in] BSTR newVal)
void None None.InterlockedCompareExchange(in R dest,in T compare_value,in T value,out T original_value)
protected void None.OnPreviewStylusMove(StylusEventArgs e None)
BOOL None advapi32.CredDelete(_In_ LPCTSTR TargetName,_In_ DWORD Type,_In_ DWORD Flags)
BOOL None advapi32.CredDeleteW(_In_ LPCTSTR TargetName,_In_ DWORD Type,_In_ DWORD Flags)
BOOL None advapi32.CredDeleteA(_In_ LPCTSTR TargetName,_In_ DWORD Type,_In_ DWORD Flags)
HRESULT None faxcom.put_RecipientCompany([in] BSTR newVal)
protected void None.Dispose(boolean explicitDisposing None)
UInt32 None None.GetSupportedClusterSizes([in] String FileSystem,[out] UInt32 SupportedClusterSizes[],[out] String ExtendedStatus)
DWORD None ntdsapi.DsMakePasswordCredentials(_In_ LPCTSTR User,_In_ LPCTSTR Domain,_In_ LPCTSTR Password,_Out_ RPC_AUTH_IDENTITY_HANDLE *pAuthIdentity)
DWORD None ntdsapi.DsMakePasswordCredentialsW(_In_ LPCTSTR User,_In_ LPCTSTR Domain,_In_ LPCTSTR Password,_Out_ RPC_AUTH_IDENTITY_HANDLE *pAuthIdentity)
DWORD None ntdsapi.DsMakePasswordCredentialsA(_In_ LPCTSTR User,_In_ LPCTSTR Domain,_In_ LPCTSTR Password,_Out_ RPC_AUTH_IDENTITY_HANDLE *pAuthIdentity)
public void None.Write(String format None,Object[] arg None)
protected None None.WebErrorEvent(String message None,Object eventSource None,int eventCode None,Exception exception None)
BOOLAPI None wininet.FindNextUrlCacheEntry(_In_ HANDLE hEnumHandle,_Out_ LPINTERNET_CACHE_ENTRY_INFO lpNextCacheEntryInfo,_Inout_ LPDWORD lpcbCacheEntryInfo)
BOOLAPI None wininet.FindNextUrlCacheEntryW(_In_ HANDLE hEnumHandle,_Out_ LPINTERNET_CACHE_ENTRY_INFO lpNextCacheEntryInfo,_Inout_ LPDWORD lpcbCacheEntryInfo)
BOOLAPI None wininet.FindNextUrlCacheEntryA(_In_ HANDLE hEnumHandle,_Out_ LPINTERNET_CACHE_ENTRY_INFO lpNextCacheEntryInfo,_Inout_ LPDWORD lpcbCacheEntryInfo)
HRESULT None None.LongToSizeT(_In_ LONG lOperand,_Out_ size_t *pcbResult)
DWORD None iphlpapi.GetOwnerModuleFromUdp6Entry(_In_ PMIB_UDP6ROW_OWNER_MODULE pUdpEntry,_In_ TCPIP_OWNER_MODULE_INFO_CLASS Class,_Out_ PVOID Buffer,_Inout_ PDWORD pdwSize)
HRESULT None tapi3.get_AddressName([out] BSTR *ppName)
HRESULT None fxscomex.OnOutboundRoutingGroupsConfigChange(IFaxServer2 *pFaxServer2 None)
BOOL WINAPI user32.GetGestureConfig(_In_ HWND hwnd,_In_ DWORD dwReserved,_In_ DWORD dwFlags,_In_ PUINT pcIDs,_Inout_ PGESTURECONFIG pGestureConfig,_In_ UINT cbSize)
HRESULT None mfplat.MFValidateMediaTypeSize(_In_ GUID FormatType,_In_ UINT8 *pBlock,_In_ UINT32 cbSize)
HRESULT None oleaut32.VarBoolFromI2(_In_ SHORT sIn,_Out_ VARIANT_BOOL *pboolOut)
size_t None None.wcstombs(char *mbstr None,const wchar_t *wcstr,size_t count None)
public void None.InitializeCell(DataControlFieldCell cell None,DataControlCellType cellType None,DataControlRowState rowState None,int rowIndex None)
public int None.IndexOf(Object value None)
BOOLEAN None None.WdfDmaTransactionDmaCompletedFinal(_In_ WDFDMATRANSACTION DmaTransaction,_In_ size_t FinalTransferredLength,_Out_ NTSTATUS *Status)
BOOL WINAPI crypt32.CertGetIntendedKeyUsage(_In_ DWORD dwCertEncodingType,_In_ PCERT_INFO pCertInfo,_Out_ BYTE *pbKeyUsage,_In_ DWORD cbKeyUsage)
DWORD None wininet.InternetSetCookieEx(_In_ LPCTSTR lpszURL,_In_ LPCTSTR lpszCookieName,_In_ LPCTSTR lpszCookieData,_In_ DWORD dwFlags,_In_ DWORD_PTR dwReserved)
DWORD None wininet.InternetSetCookieExW(_In_ LPCTSTR lpszURL,_In_ LPCTSTR lpszCookieName,_In_ LPCTSTR lpszCookieData,_In_ DWORD dwFlags,_In_ DWORD_PTR dwReserved)
DWORD None wininet.InternetSetCookieExA(_In_ LPCTSTR lpszURL,_In_ LPCTSTR lpszCookieName,_In_ LPCTSTR lpszCookieData,_In_ DWORD dwFlags,_In_ DWORD_PTR dwReserved)
BOOL WINAPI crypt32.CryptGetOIDFunctionValue(_In_ DWORD dwEncodingType,_In_ LPCSTR pszFuncName,_In_ LPCSTR pszOID,_In_ LPCWSTR pwszValueName,_Out_ DWORD *pdwValueType,_Out_ BYTE *pbValueData,_Inout_ DWORD *pcbValueData)
HRESULT None faxcom.put_RecipientHomePhone([in] BSTR newVal)
BOOL None shlwapi.PathRemoveFileSpec(_Inout_ LPTSTR pszPath)
BOOL None shlwapi.PathRemoveFileSpecW(_Inout_ LPTSTR pszPath)
BOOL None shlwapi.PathRemoveFileSpecA(_Inout_ LPTSTR pszPath)
private void None.listBox1_SelectedValueChanged(Object sender None,EventArgs e None)
HRESULT None oleaut32.VarUI1FromUI2(_In_ USHORT uiIn,_Out_ BYTE *pbOut)
uint None None.countbits(in uint value)
public int None.IndexOf(String value None,int startIndex None,StringComparison comparisonType None)
NETIOAPI_API None iphlpapi.GetTeredoPort(_Out_ USHORT *Port)
protected void None.LoadPrivateViewState(Object state None)
HRESULT None propsys.VariantToInt32Array(_In_ REFVARIANT var,_Out_ LONG *prgn,_In_ ULONG crgn,_Out_ ULONG *pcElem)
BOOL None None.WlxCloseUserDesktop(_In_ HANDLE hWlx,_In_ PWLX_DESKTOP pDesktop,_In_ HANDLE hToken)
HRESULT None None.get_Identifier([out None None,retval] BSTR *pIdentifier)
NTSTATUS None None.WdfIoQueueReadyNotify(_In_ WDFQUEUE Queue,_In_opt_ PFN_WDF_IO_QUEUE_STATE QueueReady,_In_opt_ WDFCONTEXT Context)
HRESULT None None.get_CachedIsDataValidForForm([out None None,retval] BOOL *retVal)
HRESULT None None.LongPtrToUChar(_In_ LONG_PTR lOperand,_Out_ UCHAR *pch)
public DateTime None.AddHours(double value None)
MI_INLINE MI_Result None.MI_SubscriptionDeliveryOptions_Delete(_Inout_ MI_SubscriptionDeliveryOptions *self)
DWORD WINAPI kernel32.GetPriorityClass(_In_ HANDLE hProcess)
uint32 None dnsserverpsprovider.RemoveByInputObject([in] DnsServerResourceRecord InputObject,[in] string ZoneName,[in] boolean PassThru,[in] string ComputerName,[in] boolean Force,[in] string ZoneScope,[out] DnsServerResourceRecord cmdletOutput)
LONGLONG None propsys.VariantToInt64WithDefault(_In_ REFVARIANT varIn,_In_ LONGLONG llDefault)
Object None None.GetFormat(Type formatType None)
public None None.HtmlTextWriter(TextWriter writer None)
HRESULT None oleaut32.VarDateFromUdateEx(_In_ UDATE *pudateIn,_In_ LCID lcid,_In_ ULONG dwFlags,_Out_ DATE *pdateOut)
public None None.PublisherIdentityPermissionAttribute(SecurityAction action None)
public None None.CalendarDay(DateTime date None,boolean isWeekend None,boolean isToday None,boolean isSelected None,boolean isOtherMonth None,String dayNumberText None)
public void None.Emit(OpCode opcode None,MethodInfo meth None)
UINT None shlwapi.PathGetCharType(_In_ TUCHAR ch)
UINT None shlwapi.PathGetCharTypeW(_In_ TUCHAR ch)
UINT None shlwapi.PathGetCharTypeA(_In_ TUCHAR ch)
HRESULT None fxscomex.OnOutgoingQueueConfigChange(IFaxServer2 *pFaxServer2 None)
HRESULT None oleaut32.VarUI8FromDate(_In_ DATE dateIn,_Out_ ULONG64 *pi64Out)
BOOL None None.ComboBox_Enable(HWND hwndCtl None,BOOL fEnable None)
protected boolean None.ProcessZeroKey(Keys keyData None)
uint32 None storageservice.GetSupportedOperations([in] uint16 ReplicationType,[out] uint16 SupportedOperations[],[in None None,optional] String username,[in None None,optional] String password,[out None None,optional] MSFT_SMExtendedStatus ExtendedStatus)
HRESULT None shlwapi.UrlApplyScheme(_In_ PCTSTR pszIn,_Out_ PTSTR pszOut,_Inout_ DWORD *pcchOut,DWORD dwFlags None)
HRESULT None shlwapi.UrlApplySchemeW(_In_ PCTSTR pszIn,_Out_ PTSTR pszOut,_Inout_ DWORD *pcchOut,DWORD dwFlags None)
HRESULT None shlwapi.UrlApplySchemeA(_In_ PCTSTR pszIn,_Out_ PTSTR pszOut,_Inout_ DWORD *pcchOut,DWORD dwFlags None)
BOOL WINAPI None.RasCustomEntryDlg(HINSTANCE hInstDll None,LPWSTR lpszPhonebook None,LPWSTR lpszEntry None,LPRASENTRYDLG lpInfo None,DWORD dwFlags None)
HRESULT None oleaut32.VarUI1FromDate(_In_ DATE dateIn,_Out_ BYTE *pbOut)
void None None.Process2DQuadTessFactorsAvg(in float4 RawEdgeFactors,in float2 InsideScale,out float4 RoundedEdgeTessFactors,out float2 RoundedInsideTessFactors,out float2 UnroundedInsideTessFactors)
DWORD None dhcpsapi.DhcpEnumClasses(_In_ LPWSTR ServerIpAddress,_In_ DWORD ReservedMustBeZero,_Inout_ DHCP_RESUME_HANDLE *ResumeHandle,_In_ DWORD PreferredMaximum,_Out_ LPDHCP_CLASS_INFO_ARRAY *ClassInfoArray,_Out_ DWORD *nRead,_Out_ DWORD *nTotal)
HRESULT None wuapi.get_Source([out] BSTR *retval)
HRESULT None None.MergeUndoDisks([out] IVMTask **undoMergeTask)
DWORD None msvfw32.ICDecompress(HIC hic None,DWORD dwFlags None,LPBITMAPINFOHEADER lpbiFormat None,LPVOID lpData None,LPBITMAPINFOHEADER lpbi None,LPVOID lpBits None)
public XmlSignificantWhitespace None.CreateSignificantWhitespace(String text None)
ULONG None wldap32.ber_skip_tag(_In_ BerElement *pBerElement,_Out_ ULONG *pLen)
LONG WINAPI None.SCardGetReaderDeviceInstanceId(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReaderName,_Out_opt_ LPTSTR szDeviceInstanceId,_Inout_ LPDWORD cchDeviceInstanceId)
HRESULT None None.get_String([out None None,retval] BSTR *RecoString)
HRESULT None None.LongToInt(_In_ LONG lOperand,_Out_ INT *piResult)
HRESULT None xenroll.GetSupportedKeySpec([out] LONG *pdwKeySpec)
void None None.Page_Load(Object sender None,System.EventArgs e None)
HRESULT None None.GetVendorName([out] MessageId *vendorName)
HRESULT None None.IntToUIntPtr(_In_ INT iOperand,_Out_ UINT_PTR *puResult)
BOOL None wininet.FtpDeleteFile(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszFileName)
BOOL None wininet.FtpDeleteFileW(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszFileName)
BOOL None wininet.FtpDeleteFileA(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszFileName)
public void None.AddRange(String rangeSpecifier None,int range None)
protected void None.OnDoubleClick(EventArgs e None)
HRESULT WINAPI None.EngineAdapterDeactivate(_Inout_ PWINBIO_PIPELINE Pipeline)
HRESULT None None.get_Tasks([out] IVMTaskCollection **taskCollection)
public int None.GetMaxCharCount(int byteCount None)
errno_t None None.wcstombs_s(size_t *pReturnValue None,char *mbstr None,size_t sizeInBytes None,const wchar_t *wcstr,size_t count None)
LONG WINAPI winscard.SCardGetStatusChange(_In_ SCARDCONTEXT hContext,_In_ DWORD dwTimeout,_Inout_ LPSCARD_READERSTATE rgReaderStates,_In_ DWORD cReaders)
LONG WINAPI winscard.SCardGetStatusChangeW(_In_ SCARDCONTEXT hContext,_In_ DWORD dwTimeout,_Inout_ LPSCARD_READERSTATE rgReaderStates,_In_ DWORD cReaders)
LONG WINAPI winscard.SCardGetStatusChangeA(_In_ SCARDCONTEXT hContext,_In_ DWORD dwTimeout,_Inout_ LPSCARD_READERSTATE rgReaderStates,_In_ DWORD cReaders)
HRESULT None None.GetSeekable([out] IMFMediaTimeRange **ppPlayed)
HRESULT None tapi3.get_TAPIObject([out] ITTAPI **ppTapiObject)
HRESULT None fxscomex.OnGeneralServerConfigChanged(IFaxServer2 *pFaxServer2 None)
HRESULT None tapi3.get_MessageWaiting([out] VARIANT_BOOL *pfMessageWaiting)
public void None.Initialize(String name None,NameValueCollection config None)
public void None.SetRenderMethodDelegate(RenderMethod renderMethod None)
HRESULT None shlwapi.UrlUnescapeInPlace(_Inout_ LPTSTR pszURL,_In_ DWORD dwFlags)
MI_INLINE MI_Result None.MI_DestinationOptions_GetPacketPrivacy(_In_ MI_DestinationOptions *options,_Out_ MI_Boolean *privacy)
BOOL None imm32.ImmGetOpenStatus(_In_ HIMC hIMC)
NTSTATUS SEC_ENTRY None.SpUserModeInitialize(_In_ ULONG LsaVersion,_Out_ PULONG PackageVersion,_Out_ PSECPKG_USER_FUNCTION_TABLE *ppTables,_Out_ PULONG pcTables)
BOOLAPI None wininet.CommitUrlCacheEntryW(_In_ LPCWSTR lpszUrlName,_In_ LPCWSTR lpszLocalFileName,_In_ FILETIME ExpireTime,_In_ FILETIME LastModifiedTime,_In_ DWORD CacheEntryType,_In_ LPCWSTR lpHeaderInfo,_In_ DWORD cchHeaderInfo,_Reserved_ LPCWSTR lpszFileExtension,_In_ LPCWSTR lpszOriginalUrl)
HRESULT None None.Int64ToULong(_In_ INT64 i64Operand,_Out_ ULONG *pulResult)
DNS_STATUS WINAPI dnsapi.DnsReplaceRecordSet(_In_ PDNS_RECORD pNewSet,_In_ DWORD Options,_In_opt_ HANDLE hContext,_Inout_opt_ PVOID pExtraInfo,_Inout_opt_ PVOID pReserved)
DNS_STATUS WINAPI dnsapi.DnsReplaceRecordSetA(_In_ PDNS_RECORD pNewSet,_In_ DWORD Options,_In_opt_ HANDLE hContext,_Inout_opt_ PVOID pExtraInfo,_Inout_opt_ PVOID pReserved)
DNS_STATUS WINAPI dnsapi.DnsReplaceRecordSetW(_In_ PDNS_RECORD pNewSet,_In_ DWORD Options,_In_opt_ HANDLE hContext,_Inout_opt_ PVOID pExtraInfo,_Inout_opt_ PVOID pReserved)
public void None.AddConnectAccess(String originScheme None,CodeConnectAccess connectAccess None)
HRESULT None mfplat.MFCancelWorkItem(_In_ MFWORKITEM_KEY Key)
SerializableAttribute None None.ClassInterfaceAttribute(ClassInterfaceType.AutoDispatch None None)
PCCRL_CONTEXT WINAPI crypt32.CertGetCRLFromStore(_In_ HCERTSTORE hCertStore,_In_opt_ PCCERT_CONTEXT pIssuerContext,_In_ PCCRL_CONTEXT pPrevCrlContext,_Inout_ DWORD *pdwFlags)
LONG WINAPI advapi32.RegCreateKeyEx(_In_ HKEY hKey,_In_ LPCTSTR lpSubKey,_Reserved_ DWORD Reserved,_In_opt_ LPTSTR lpClass,_In_ DWORD dwOptions,_In_ REGSAM samDesired,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_Out_ PHKEY phkResult,_Out_opt_ LPDWORD lpdwDisposition)
LONG WINAPI advapi32.RegCreateKeyExW(_In_ HKEY hKey,_In_ LPCTSTR lpSubKey,_Reserved_ DWORD Reserved,_In_opt_ LPTSTR lpClass,_In_ DWORD dwOptions,_In_ REGSAM samDesired,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_Out_ PHKEY phkResult,_Out_opt_ LPDWORD lpdwDisposition)
LONG WINAPI advapi32.RegCreateKeyExA(_In_ HKEY hKey,_In_ LPCTSTR lpSubKey,_Reserved_ DWORD Reserved,_In_opt_ LPTSTR lpClass,_In_ DWORD dwOptions,_In_ REGSAM samDesired,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_Out_ PHKEY phkResult,_Out_opt_ LPDWORD lpdwDisposition)
BOOL CALLBACK input.SetDefaultLayoutOrTipUserReg(_In_opt_ LPCWSTR pszUserReg,_In_opt_ LPCWSTR pszSystemReg,_In_opt_ LPCWSTR pszSoftwareReg,_In_ LPCWSTR psz,_In_ DWORD dwFlags)
DWORD DHCP_API_FUNCTION dhcpsapi.DhcpV4SetPolicy(_In_opt_ LPWSTR ServerIpAddress,_In_ DWORD FieldsModified,_In_ BOOL fGlobalPolicy,_In_ DHCP_IP_ADDRESS SubnetAddress,_In_ LPWSTR PolicyName,_In_ LPDHCP_POLICY Policy)
BOOL None wininet.SetUrlCacheGroupAttribute(_In_ GROUPID gid,_In_ DWORD dwFlags,_In_ DWORD dwAttributes,_In_ LPINTERNET_CACHE_GROUP_INFO lpGroupInfo,_Inout_ LPVOID lpReserved)
BOOL None wininet.SetUrlCacheGroupAttributeW(_In_ GROUPID gid,_In_ DWORD dwFlags,_In_ DWORD dwAttributes,_In_ LPINTERNET_CACHE_GROUP_INFO lpGroupInfo,_Inout_ LPVOID lpReserved)
BOOL None wininet.SetUrlCacheGroupAttributeA(_In_ GROUPID gid,_In_ DWORD dwFlags,_In_ DWORD dwAttributes,_In_ LPINTERNET_CACHE_GROUP_INFO lpGroupInfo,_Inout_ LPVOID lpReserved)
HRESULT None propsys.VariantGetUInt32Elem(_In_ REFVARIANT var,_In_ ULONG iElem,_Out_ ULONG *pnVal)
HRESULT None propsys.PropVariantGetStringElem(_In_ REFPROPVARIANT propvar,_In_ ULONG iElem,_Out_ PWSTR *ppszVal)
bool None None.CheckAccessFullyMapped(in uint_only status)
protected void None.OnPreviewStylusInRange(StylusEventArgs e None)
protected void None.OnClick(EventArgs e None)
public void None.LinkComponentChangingEvent(IComponentChangeService changeService None)
HRESULT None None.Int64ToUInt(_In_ INT64 i64Operand,_Out_ UINT *puiResult)
BOOLEAN WINAPI powrprof.GetPwrCapabilities(_Out_ PSYSTEM_POWER_CAPABILITIES lpSystemPowerCapabilities)
BOOL None None.WlxGetOption(_In_ HANDLE hWlx,_In_ DWORD Option,_Out_ ULONG_PTR *Value)
PLIST_ENTRY None None.ExInterlockedInsertTailList(_Inout_ PLIST_ENTRY ListHead,_Inout_ PLIST_ENTRY ListEntry,_Inout_ PKSPIN_LOCK Lock)
public WebResponse None.EndGetResponse(IAsyncResult asyncResult None)
BOOL WINAPI advapi32.CryptAcquireContext(_Out_ HCRYPTPROV *phProv,_In_ LPCTSTR pszContainer,_In_ LPCTSTR pszProvider,_In_ DWORD dwProvType,_In_ DWORD dwFlags)
BOOL WINAPI advapi32.CryptAcquireContextW(_Out_ HCRYPTPROV *phProv,_In_ LPCTSTR pszContainer,_In_ LPCTSTR pszProvider,_In_ DWORD dwProvType,_In_ DWORD dwFlags)
BOOL WINAPI advapi32.CryptAcquireContextA(_Out_ HCRYPTPROV *phProv,_In_ LPCTSTR pszContainer,_In_ LPCTSTR pszProvider,_In_ DWORD dwProvType,_In_ DWORD dwFlags)
SerializableAttribute None None.AttributeUsageAttribute(AttributeTargets.Class None None)
LONG WINAPI advapi32.RegOpenKeyEx(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_ DWORD ulOptions,_In_ REGSAM samDesired,_Out_ PHKEY phkResult)
LONG WINAPI advapi32.RegOpenKeyExW(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_ DWORD ulOptions,_In_ REGSAM samDesired,_Out_ PHKEY phkResult)
LONG WINAPI advapi32.RegOpenKeyExA(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_ DWORD ulOptions,_In_ REGSAM samDesired,_Out_ PHKEY phkResult)
public void None.SetSelected(int index None,boolean value None)
public int None.GetMaxCharCount(int byteCount None)
int None None.main(void None None)
public IDictionary None.GetCache(Object instance None)
void None None.Page_Load(Object sender None,System.EventArgs e None)
public void None.Write(float value None)
HRESULT None propsys.PropVariantToBooleanVectorAlloc(_In_ REFPROPVARIANT propvar,_Out_ BOOL **pprgf,_Out_ ULONG *pcElem)
NTSTATUS None None.DeleteCredential(_In_ PLUID LogonId,_In_ ULONG AuthenticationPackage,_In_ PLSA_STRING PrimaryKeyValue)
HRESULT WINAPI None.EngineAdapterGetEnrollmentHash(_Inout_ PWINBIO_PIPELINE Pipeline,_Out_ PUCHAR *HashValue,_Out_ PSIZE_T HashSize)
public void None.Initialize(String name None,NameValueCollection config None)
HRESULT None None.LongLongToULong(_In_ LONGLONG llOperand,_Out_ ULONG *pulResult)
public void None.SetSelected(int index None,boolean value None)
protected void None.OnPreviewMouseLeftButtonDown(MouseButtonEventArgs e None)
HRESULT None None.GetVisibleData(HROW hRow None,HACCESSOR hAccessor None,void *pData None)
protected void None.OnAfterSelect(TreeViewEventArgs e None)
protected void None.SetDesignModeState(IDictionary data None)
HRESULT None None.GetError([out] IMFMediaError **ppError)
HRESULT None msctf.TF_CreateLangBarMgr(_Out_ ITfLangBarMgr **pppbm)
HRESULT None oleaut32.VarBoolFromUI8(_In_ ULONG64 i64In,_Out_ VARIANT_BOOL *pboolOut)
HRESULT None tapi3.get_State([out] ADDRESS_STATE *pAddressState)
LPWSTR WINAPI wintrust.CryptCATCDFEnumMembersByCDFTagEx(_In_ CRYPTCATCDF *pCDF,_Inout_ LPWSTR pwszPrevCDFTag,_In_ PFN_CDF_PARSE_ERROR_CALLBACK pfnParseError,_In_ CRYPTCATMEMBER **ppMember,_In_ BOOL fContinueOnError,_In_ LPVOID pvReserved)
HRESULT None tapi3.get_PreferredAddresses([out] VARIANT *pAddresses)
DWORD None wininet.InternetConfirmZoneCrossing(_In_ HWND hWnd,_In_ LPTSTR szUrlPrev,_In_ LPTSTR szUrlNew,_In_ BOOL bPost)
DWORD None wininet.InternetConfirmZoneCrossingW(_In_ HWND hWnd,_In_ LPTSTR szUrlPrev,_In_ LPTSTR szUrlNew,_In_ BOOL bPost)
DWORD None wininet.InternetConfirmZoneCrossingA(_In_ HWND hWnd,_In_ LPTSTR szUrlPrev,_In_ LPTSTR szUrlNew,_In_ BOOL bPost)
protected void None.OnClick(EventArgs e None)
HRESULT None propsys.PropVariantToUInt64VectorAlloc(_In_ REFPROPVARIANT propvar,_Out_ ULONGLONG **pprgn,_Out_ ULONG *pcElem)
VOID None None.WdfIoResourceListRemoveByDescriptor(_In_ WDFIORESLIST ResourceList,_In_ PIO_RESOURCE_DESCRIPTOR Descriptor)
DWORD WINAPI clusapi.ClusterNetInterfaceControl(_In_ HNETINTERFACE hNetInterface,_In_opt_ HNODE hHostNode,_In_ DWORD dwControlCode,_In_opt_ LPVOID lpInBuffer,_In_ DWORD nInBufferSize,_Out_opt_ LPVOID lpOutBuffer,_In_ DWORD nOutBufferSize,_Out_opt_ LPDWORD lpBytesReturned)
protected Object None.GetService(Type serviceType None)
protected void None.OnPreviewStylusUp(StylusEventArgs e None)
MI_INLINE MI_Result None.MI_OperationOptions_GetProviderArchitecture(_In_ MI_OperationOptions *options,_Out_ MI_ProviderArchitecture *architecture,_Out_ MI_Boolean *mustComply)
HRESULT None None.get_CurrentProviderDescription([out None None,retval] BSTR *retVal)
HRESULT None tapi3.get_Ringer([out] VARIANT_BOOL *pfRinging)
public void None.AddArc(Rectangle rect None,float startAngle None,float sweepAngle None)
HRESULT None fxscomex.OnQueuesStatusChange(IFaxServer2 *pFaxServer2 None,VARIANT_BOOL bOutgoingQueueBlocked None,VARIANT_BOOL bOutgoingQueuePaused None,VARIANT_BOOL bIncomingQueueBlocked None)
HRESULT None None.GetCurrent([out None None,retval] IAppxManifestApplication **application)
BOOL None None.WlxIsLockOk(_In_ PVOID pWlxContext)
DWORD WINAPI credui.CredUIPromptForWindowsCredentials(_In_opt_ PCREDUI_INFO pUiInfo,_In_ DWORD dwAuthError,_Inout_ ULONG *pulAuthPackage,_In_opt_ LPCVOID pvInAuthBuffer,_In_ ULONG ulInAuthBufferSize,_Out_ LPVOID *ppvOutAuthBuffer,_Out_ ULONG *pulOutAuthBufferSize,_Inout_opt_ BOOL *pfSave,_In_ DWORD dwFlags)
DWORD WINAPI credui.CredUIPromptForWindowsCredentialsW(_In_opt_ PCREDUI_INFO pUiInfo,_In_ DWORD dwAuthError,_Inout_ ULONG *pulAuthPackage,_In_opt_ LPCVOID pvInAuthBuffer,_In_ ULONG ulInAuthBufferSize,_Out_ LPVOID *ppvOutAuthBuffer,_Out_ ULONG *pulOutAuthBufferSize,_Inout_opt_ BOOL *pfSave,_In_ DWORD dwFlags)
DWORD WINAPI credui.CredUIPromptForWindowsCredentialsA(_In_opt_ PCREDUI_INFO pUiInfo,_In_ DWORD dwAuthError,_Inout_ ULONG *pulAuthPackage,_In_opt_ LPCVOID pvInAuthBuffer,_In_ ULONG ulInAuthBufferSize,_Out_ LPVOID *ppvOutAuthBuffer,_Out_ ULONG *pulOutAuthBufferSize,_Inout_opt_ BOOL *pfSave,_In_ DWORD dwFlags)
void None None.Insert(int index None,Object value None)
void None None.ProcessIsolineTessFactors(in float RawDetailFactor,in float RawDensityFactor,out float RoundedDetailFactor,out float RoundedDensityFactor)
HRESULT None None.UShortToUInt8(_In_ USHORT usOperand,_Out_ UINT8 *pui8Result)
HRESULT None propsys.VariantToDoubleArray(_In_ REFVARIANT var,_Out_ DOUBLE *prgn,_In_ ULONG crgn,_Out_ ULONG *pcElem)
HRESULT None None.get_Value([out None None,retval] BSTR *pRetVal)
HRESULT None None.UShortToChar(_In_ USHORT usOperand,_Out_ __wchar_t *pch)
static String None.IsFileURI(String path None)
VOID None propsys.ClearVariantArray(_In_ VARIANT *pvars,_In_ UINT cVars)
HRESULT None faxcom.get_PageCount([out None None,retval] LONG *pVal)
public StringBuilder None.Append(char value None)
public void None.SetCacheKey(Cache cache None)
HRESULT None wuapi.get_MsrcSeverity([out] BSTR *retval)
HRESULT None None.IntPtrToUChar(_In_ INT_PTR iOperand,_Out_ UCHAR *pch)
public void None.Emit(OpCode opcode None,byte arg None)
NTSTATUS WINAPI bcrypt.BCryptDestroySecret(_In_ BCRYPT_SECRET_HANDLE hSecret)
DWORD None rtm.MgmGroupEnumerationGetNext(_In_ HANDLE hEnum,_Inout_ PDWORD pdwBufferSize,_Inout_ PBYTE pbBuffer,_Inout_ PDWORD pdwNumEntries)
NTSTATUS None None.WdfWaitLockAcquire(_In_ WDFWAITLOCK Lock,_In_opt_ PLONGLONG Timeout)
DWORD WINAPI clusapi.ClusterNodeEnum(_In_ HNODEENUM hNodeEnum,_In_ DWORD dwIndex,_Out_ LPDWORD lpdwType,_Out_ LPWSTR lpszName,_Inout_ LPDWORD lpcchName)
HRESULT None tapi3.CreateForwardInfoObject([out] ITForwardInformation **ppForwardInfo)
protected void None.OnIsStylusDirectlyOverChanged(DependencyPropertyChangedEventArgs e None)
void None None.LoadAdapterState(Object state None)
public void None.Insert(int index None,TraceListener listener None)
HRESULT WINAPI drt.DrtDeleteIpv6UdpTransport(_In_ HTRANSPORT hTransport)
HRESULT None None.GetExtendedAttributeByIndex(DWORD dwIndex None,DWORD* pdwValueName None,VARIANT* pVariantValue None)
VOID WINAPI kernel32.CloseThreadpoolIo(_Inout_ PTP_IO pio)
MMRESULT None winmm.midiConnect(HMIDI hMidi None,HMIDIOUT hmo None,LPVOID pReserved None)
DWORD None mpr.WNetDisconnectDialog(_In_ HWND hwnd,_In_ DWORD dwType)
protected void None.SetViewFlags(ViewFlags viewFlags None,boolean setFlag None)
public int None.LastIndexOfAny(char[] anyOf None)
public int None.GetDayOfMonth(DateTime time None)
HRESULT None fxscomex.OnIncomingArchiveConfigChange(IFaxServer2 *pFaxServer2 None)
HINTERNET None wininet.InternetConnect(_In_ HINTERNET hInternet,_In_ LPCTSTR lpszServerName,_In_ INTERNET_PORT nServerPort,_In_ LPCTSTR lpszUsername,_In_ LPCTSTR lpszPassword,_In_ DWORD dwService,_In_ DWORD dwFlags,_In_ DWORD_PTR dwContext)
HINTERNET None wininet.InternetConnectW(_In_ HINTERNET hInternet,_In_ LPCTSTR lpszServerName,_In_ INTERNET_PORT nServerPort,_In_ LPCTSTR lpszUsername,_In_ LPCTSTR lpszPassword,_In_ DWORD dwService,_In_ DWORD dwFlags,_In_ DWORD_PTR dwContext)
HINTERNET None wininet.InternetConnectA(_In_ HINTERNET hInternet,_In_ LPCTSTR lpszServerName,_In_ INTERNET_PORT nServerPort,_In_ LPCTSTR lpszUsername,_In_ LPCTSTR lpszPassword,_In_ DWORD dwService,_In_ DWORD dwFlags,_In_ DWORD_PTR dwContext)
INT CALLBACK None.EnumRegisterWordProc(_In_ LPCTSTR lpszReading,_In_ DWORD dwStyle,_In_ LPCTSTR lpszString,_In_ LPVOID lpData)
INT CALLBACK None.EnumRegisterWordProcW(_In_ LPCTSTR lpszReading,_In_ DWORD dwStyle,_In_ LPCTSTR lpszString,_In_ LPVOID lpData)
INT CALLBACK None.EnumRegisterWordProcA(_In_ LPCTSTR lpszReading,_In_ DWORD dwStyle,_In_ LPCTSTR lpszString,_In_ LPVOID lpData)
HRESULT None msctf.TF_CreateLangBarMgr(_Out_ ITfLangBarMgr **pppbm)
HRESULT None oleaut32.VarCyFromUI4(_In_ ULONG ulIn,_Out_ CY *pcyOut)
public void None.AddValue(String name None,double value None)
HRESULT None oleaut32.VarI1FromR8(_In_ DOUBLE dblIn,_Out_ CHAR *pcOut)
HRESULT None oleaut32.VarDecFromUI8(_In_ ULONG64 ui64In,_Out_ DECIMAL *pdecOut)
protected void None.OnWebPartsDisconnected(WebPartConnectionsEventArgs e None)
HRESULT None None.GetAudioEndpointRole([out] UINT32 *pRole)
VOID None None.WdfObjectDelete(_In_ WDFOBJECT Object)
public void None.DrawRectangle(Pen pen None,float x None,float y None,float width None,float height None)
UInt32 None None.Detach([in] String StorageNodeName,[out] String ExtendedStatus)
HRESULT None mstscax.get_GetRemoteMonitorsBoundingBox([out] LONG *pLeft,[out] LONG *pTop,[out] LONG *pRight,[out] LONG *pBottom)
public None None.MessageQueue(String path None,boolean sharedModeDenyReceive None,boolean enableCache None)
HRESULT None None.GetState([out] IUnknown **ppunkState)
void None None.Page_Init(Object sender None,EventArgs e None)
protected void None.LoadViewState(Object savedState None)
HRESULT None faxcom.get_DiscountSend([out None None,retval] BOOL *pVal)
HRESULT None None.LongToULongPtr(_In_ LONG lOperand,_Out_ ULONG_PTR *pulResult)
BOOL WINAPI None.CertStoreProvDeleteCertCallback(_In_ HCERTSTOREPROV hStoreProv,_In_ PCCERT_CONTEXT pCertContext,_In_ DWORD dwFlags)
public void None.AddLinkedForms(IList linkedForms None)
public XmlNode None.CloneNode(boolean deep None)
public None None.XmlMessageFormatter(Type[] targetTypes None)
HRESULT None None.GetProcessCount([out] ULONG *pulCount)
public DateTime None.AddYears(DateTime time None,int years None)
protected void None.OnPreviewQueryContinueDrag(QueryContinueDragEventArgs e None)
MI_INLINE MI_Result None.MI_OperationOptions_Delete(_Inout_ MI_OperationOptions *options)
HRESULT None fxscomex.put_AllowPersonalCoverPages(VARIANT_BOOL bAllowPersonalCoverPages None)
HRESULT None oleaut32.VarCyFromStr(_In_ LPCOLESTR strIn,_In_ LCID lcid,_In_ ULONG dwFlags,_Out_ CY *pcyOut)
HRESULT WINAPI None.EngineAdapterExportEngineData(_Inout_ PWINBIO_PIPELINE Pipeline,_In_ WINBIO_BIR_DATA_FLAGS Flags,_Out_ PWINBIO_BIR *SampleBuffer,_Out_ PSIZE_T SampleSize)
HRESULT None propsys.PropVariantToStringVectorAlloc(_In_ REFPROPVARIANT propvar,_Out_ PWSTR **pprgsz,_Out_ ULONG *pcElem)
HRESULT None mstscax.get_CmDeviceInstance([out None None,retval] DWORD *pCmDeviceInstance)
private void None.listDragSource_QueryContinueDrag(Object sender None,System.Windows.Forms.QueryContinueDragEventArgs e None)
LONG WINAPI winscard.SCardIntroduceReader(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReaderName,_In_ LPCTSTR szDeviceName)
LONG WINAPI winscard.SCardIntroduceReaderW(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReaderName,_In_ LPCTSTR szDeviceName)
LONG WINAPI winscard.SCardIntroduceReaderA(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReaderName,_In_ LPCTSTR szDeviceName)
HRESULT None None.GetAttribute(DWORD ValueName None,DWORD* pdwValue None)
protected void None.OnPaint(PaintEventArgs e None)
PCHAR None wldap32.ldap_first_attribute(_In_ LDAP *ld,_In_ LDAPMessage *entry,_Out_ BerElement **ptr)
PCHAR None wldap32.ldap_first_attributeW(_In_ LDAP *ld,_In_ LDAPMessage *entry,_Out_ BerElement **ptr)
PCHAR None wldap32.ldap_first_attributeA(_In_ LDAP *ld,_In_ LDAPMessage *entry,_Out_ BerElement **ptr)
DWORD WINAPI ntdsapi.DsInheritSecurityIdentity(_In_ HANDLE hDS,_In_ DWORD Flags,_In_ LPCTSTR SrcPrincipal,_In_ LPCTSTR DstPrincipal)
DWORD WINAPI ntdsapi.DsInheritSecurityIdentityW(_In_ HANDLE hDS,_In_ DWORD Flags,_In_ LPCTSTR SrcPrincipal,_In_ LPCTSTR DstPrincipal)
DWORD WINAPI ntdsapi.DsInheritSecurityIdentityA(_In_ HANDLE hDS,_In_ DWORD Flags,_In_ LPCTSTR SrcPrincipal,_In_ LPCTSTR DstPrincipal)
HRESULT None mstscax.get_DeviceCollection([out] IMSRdpDeviceCollection **ppDeviceCollection)
HRESULT None mf.MFCreateTranscodeSinkActivate(_Out_ **ppActivate None)
HRESULT None None.LongToPtrdiffT(_In_ LONG lOperand,_Out_ ptrdiff_t *pcbResult)
public int None.GetMinute(DateTime time None)
public void None.ControlSelect(Control control None)
DWORD APIENTRY dhcpcsvc6.Dhcpv6RequestParams(BOOL forceNewInform None,LPVOID reserved None,LPWSTR adapterName None,LPDHCPV6CAPI_CLASSID classId None,DHCPV6CAPI_PARAMS_ARRAY recdParams None,LPBYTE buffer None,LPDWORD pSize None)
HRESULT None None.UIntPtrToChar(_In_ UINT_PTR uOperand,_Out_ CHAR *pch)
PCCERT_CONTEXT WINAPI crypt32.CertCreateSelfSignCertificate(_In_opt_ HCRYPTPROV_OR_NCRYPT_KEY_HANDLE hCryptProvOrNCryptKey,_In_ PCERT_NAME_BLOB pSubjectIssuerBlob,_In_ DWORD dwFlags,_In_opt_ PCRYPT_KEY_PROV_INFO pKeyProvInfo,_In_opt_ PCRYPT_ALGORITHM_IDENTIFIER pSignatureAlgorithm,_In_opt_ PSYSTEMTIME pStartTime,_In_opt_ PSYSTEMTIME pEndTime,PCERT_EXTENSIONS pExtensions None)
DWORD WINAPI peerdist.PeerDistServerRetrieveContentInformation(_In_ PEERDIST_INSTANCE_HANDLE hPeerDist,_In_ PEERDIST_CONTENTINFO_HANDLE hContentInfo,DWORD cbMaxNumberOfBytes None,_Inout_ PBYTE pBuffer,_In_ LPOVERLAPPED lpOverlapped)
public int None.GetMaxCharCount(int byteCount None)
HRESULT None wuapi.get_UninstallationNotes([out] BSTR *retval)
void None None.InterlockedXor(in R dest,in T value,out T original_value)
protected HitTestResult None.HitTestCore(PointHitTestParameters hitTestParameters None)
protected void None.OnPreviewStylusInRange(StylusEventArgs e None)
HRESULT None None.get_VMRCEncryptionCertificateRequest([out] BSTR *certificateRequest)
public None None.ObfuscateAssemblyAttribute(boolean assemblyIsPrivate None)
MI_INLINE MI_Result None.MI_Class_Delete(_Inout_ MI_Class *self)
HRESULT None None.get_CollectingInk([out None None,retval] VARIANT_BOOL *Collecting)
HRESULT None None.IntPtrToInt8(_In_ INT_PTR iOperand,_Out_ INT8 *pi8Result)
HRESULT None None.LongToShort(_In_ LONG lOperand,_Out_ SHORT *psResult)
uint32 None dnsserverpsprovider.RemoveByServer([in] boolean Force,[in] string ComputerName,[in] boolean PassThru,[in] string Name,[out] DnsServerPolicy cmdletOutput)
HRESULT None None.MFGetAttributeRatio(_In_ IMFAttributes *pAttributes,_In_ REFGUID guidKey,_Out_ UINT32 *pnNumerator,_Out_ UINT32 *punDenominator)
DWORD None mpr.WNetAddConnection3(_In_ HWND hwndOwner,_In_ LPNETRESOURCE lpNetResource,_In_ LPTSTR lpPassword,_In_ LPTSTR lpUserName,_In_ DWORD dwFlags)
DWORD None mpr.WNetAddConnection3W(_In_ HWND hwndOwner,_In_ LPNETRESOURCE lpNetResource,_In_ LPTSTR lpPassword,_In_ LPTSTR lpUserName,_In_ DWORD dwFlags)
DWORD None mpr.WNetAddConnection3A(_In_ HWND hwndOwner,_In_ LPNETRESOURCE lpNetResource,_In_ LPTSTR lpPassword,_In_ LPTSTR lpUserName,_In_ DWORD dwFlags)
DWORD None dhcpsapi.DhcpGetAllOptionsV6(_In_ LPWSTR ServerIpAddress,_In_ DWORD Flags,_Out_ LPDHCP_ALL_OPTIONS *OptionStruct)
HRESULT None shlwapi.PathCreateFromUrl(_In_ PCTSTR pszUrl,_Out_ PTSTR pszPath,_Inout_ DWORD *pcchPath,DWORD dwFlags None)
HRESULT None shlwapi.PathCreateFromUrlW(_In_ PCTSTR pszUrl,_Out_ PTSTR pszPath,_Inout_ DWORD *pcchPath,DWORD dwFlags None)
HRESULT None shlwapi.PathCreateFromUrlA(_In_ PCTSTR pszUrl,_Out_ PTSTR pszPath,_Inout_ DWORD *pcchPath,DWORD dwFlags None)
NTSTATUS WINAPI bcrypt.BCryptEncrypt(_Inout_ BCRYPT_KEY_HANDLE hKey,_In_ PUCHAR pbInput,_In_ ULONG cbInput,_In_opt_ VOID *pPaddingInfo,_Inout_opt_ PUCHAR pbIV,_In_ ULONG cbIV,_Out_opt_ PUCHAR pbOutput,_In_ ULONG cbOutput,_Out_ ULONG *pcbResult,_In_ ULONG dwFlags)
protected void None.OnRowUpdating(GridViewUpdateEventArgs e None)
HRESULT None None.DownloadEnclosuresAutomatically(BOOL *pbDownloadEnclosuresAutomatically None)
HRESULT None None.CreatePresentationDescriptor([out] IMFPresentationDescriptor **ppPresentationDescriptor)
DWORD WINAPI wcmapi.WcmSetProfileList(_In_ WCM_PROFILE_INFO_LIST *pProfileList,_In_ DWORD dwPosition,_In_ BOOL fIgnoreUnknownProfiles,_Reserved_ PVOID pReserved)
size_t None None.wcstombs(char *mbstr None,const wchar_t *wcstr,size_t count None)
private void None.textBox1_Enter(Object sender None,System.EventArgs e None)
BOOL WINAPI None.ORASADFunc(_In_ HWND hwndOwner,_In_ LPSTR lpszEntry,_In_ DWORD dwFlags,_In_ LPDWORD lpdwRetCode)
public int None.IndexOf(String value None)
HRESULT None tapi3.get_Calls([out] VARIANT *pVariant)
protected void None.OnStylusButtonDown(StylusButtonEventArgs e None)
protected void None.button1_Click(Object sender None,System.EventArgs e None)
public DateTime None.AddMilliseconds(DateTime time None,double milliseconds None)
HRESULT None fxscomex.get_Configuration([out None None,retval] IFaxConfiguration **ppFaxConfiguration)
public boolean None.Contains(Control c None)
public void None.InitializeCell(DataControlFieldCell cell None,DataControlCellType cellType None,DataControlRowState rowState None,int rowIndex None)
HRESULT None None.InitVariantFromBoolean(_In_ BOOL fVal,_Out_ VARIANT *pvar)
boolean None None.Equals(Object other None)
HRESULT None None.put_OutgoingDistributionConnections(long newVal None)
public void None.EndWrite(IAsyncResult asyncResult None)
HRESULT None None.get_ContentViewCondition([out None None,retval] IUIAutomationCondition **condition)
NTSTATUS None None.UpdateCredentials(_In_ PSECPKG_PRIMARY_CRED PrimaryCredentials,_In_opt_ PSECPKG_SUPPLEMENTAL_CRED_ARRAY Credentials)
HRESULT None mfplat.MFGetWorkQueueMMCSSClass(_In_ DWORD dwWorkQueueId,_Out_ LPWSTR pwszClass,_Inout_ DWORD *pcchClass)
BOOL WINAPI crypt32.CryptUpdateProtectedState(_In_ PSID pOldSid,_In_ LPCWSTR pwszOldPassword,_In_ DWORD dwFlags,_Out_ DWORD *pdwSuccessCount,_Out_ DWORD *pdwFailureCount)
HRESULT None mfplat.MFCreateAlignedMemoryBuffer(DWORD cbMaxLength None,DWORD fAlignmentFlags None,IMFMediaBuffer **ppBuffer None)
HRESULT None tapi3.Clone([out] IEnumPluggableSuperclassInfo **ppEnum)
protected void None.OnPreRender(EventArgs e None)
SerializableAttribute None None.ClassInterfaceAttribute(ClassInterfaceType.None None None)
INT None ws2_32.WSASetService(_In_ LPWSAQUERYSET lpqsRegInfo,_In_ WSAESETSERVICEOP essOperation,_In_ DWORD dwControlFlags)
INT None ws2_32.WSASetServiceW(_In_ LPWSAQUERYSET lpqsRegInfo,_In_ WSAESETSERVICEOP essOperation,_In_ DWORD dwControlFlags)
INT None ws2_32.WSASetServiceA(_In_ LPWSAQUERYSET lpqsRegInfo,_In_ WSAESETSERVICEOP essOperation,_In_ DWORD dwControlFlags)
HRESULT None oleaut32.VarI4FromBool(_In_ VARIANT_BOOL boolIn,_Out_ LONG *plOut)
private void None.button1_Click(Object sender None,System.EventArgs e None)
size_t None None.wcstombs(char *mbstr None,const wchar_t *wcstr,size_t count None)
protected void None.OnLoad(EventArgs e None)
public void None.Update(IDictionary keys None,IDictionary values None,IDictionary oldValues None,DataSourceViewOperationCallback callback None)
HRESULT None None.GetProcessCount([out] ULONG *pulCount)
protected void None.ObjectDataSource1_Filtering(Object sender None,ObjectDataSourceFilteringEventArgs e None)
public int None.LastIndexOfAny(char[] anyOf None)
HRESULT WINAPI drt.DrtGetEventDataSize(_In_ HDRT hDRT,_Out_ ULONG pulEventDataLen)
HRESULT None None.SIZETToInt64(_In_ SIZE_T cbOperand,_Out_ INT64 *pi64Result)
public void None.SetRenderMethodDelegate(RenderMethod renderMethod None)
public void None.ControlSetFocus(Control control None)
HRESULT None None.IntPtrToDWordPtr(_In_ INT_PTR iOperand,_Out_ DWORD_PTR *pdwResult)
HRESULT None None.Int64ToInt(_In_ INT64 i64Operand,_Out_ INT *piResult)
uint32 None cimwin32.SetMTU([in] uint32 MTU)
BOOL None wininet.InternetTimeToSystemTime(_In_ LPCTSTR lpszTime,_Out_ SYSTEMTIME *pst,_In_ DWORD dwReserved)
BOOL None wininet.InternetTimeToSystemTimeW(_In_ LPCTSTR lpszTime,_Out_ SYSTEMTIME *pst,_In_ DWORD dwReserved)
BOOL None wininet.InternetTimeToSystemTimeA(_In_ LPCTSTR lpszTime,_Out_ SYSTEMTIME *pst,_In_ DWORD dwReserved)
SerializableAttribute None None.ClassInterfaceAttribute(ClassInterfaceType.None None None)
DWORD None dhcpsapi.DhcpServerRedoAuthorization(_In_ LPWSTR ServerIpAddr,_In_ ULONG dwReserved)
HRESULT None oleaut32.VarUI2FromI2(_In_ SHORT uiIn,_Out_ USHORT *puiOut)
HRESULT None tapi3.get_CallState([out] CALL_STATE *pCallState)
protected boolean None.OnBubbleEvent(Object sender None,EventArgs e None)
HRESULT None None.DWordToShort(_In_ DWORD dwOperand,_Out_ SHORT *psResult)
BOOL CALLBACK input.InstallLayoutOrTip(_In_ LPCWSTR psz,_In_ DWORD dwFlags)
HRESULT None faxcom.put_RecipientDepartment([in] BSTR newVal)
protected void None.OnRowUpdated(GridViewUpdatedEventArgs e None)
public None None.LinearGradientBrush(GradientStopCollection gradientStopCollection None,Point startPoint None,Point endPoint None)
HANDLE None None.RegisterNotification(_In_ SEC_THREAD_START StartFunction,_In_ PVOID Parameter,_In_ ULONG NotificationType,_In_ ULONG NotificationClass,_In_ ULONG NotificationFlags,_In_ ULONG IntervalMinutes,_In_ HANDLE WaitEvent)
HRESULT None msctf.TF_GetThreadMgr(_Out_ TfThreadMgr **pptim)
DWORD None rasapi32.RasEnumConnections(_Inout_ LPRASCONN lprasconn,_Inout_ LPDWORD lpcb,_Out_ LPDWORD lpcConnections)
DWORD None rasapi32.RasEnumConnectionsW(_Inout_ LPRASCONN lprasconn,_Inout_ LPDWORD lpcb,_Out_ LPDWORD lpcConnections)
DWORD None rasapi32.RasEnumConnectionsA(_Inout_ LPRASCONN lprasconn,_Inout_ LPDWORD lpcb,_Out_ LPDWORD lpcConnections)
protected None None.MemberDescriptor(String name None,Attribute[] attributes None)
CREATE TABLE None.MoneyTable(col1 int None,col2 smallmoney None,col3 decimal None)
HRESULT None None.UIntPtrToInt8(_In_ UINT_PTR uOperand,_Out_ INT8 *pi8Result)
LONG WINAPI winscard.SCardWriteCache(_In_ SCARDCONTEXT hContext,_In_ UUID *CardIdentifier,_In_ DWORD FreshnessCounter,_In_ LPTSTR LookupName,_In_ PBYTE Data,_In_ DWORD DataLen)
LONG WINAPI winscard.SCardWriteCacheW(_In_ SCARDCONTEXT hContext,_In_ UUID *CardIdentifier,_In_ DWORD FreshnessCounter,_In_ LPTSTR LookupName,_In_ PBYTE Data,_In_ DWORD DataLen)
LONG WINAPI winscard.SCardWriteCacheA(_In_ SCARDCONTEXT hContext,_In_ UUID *CardIdentifier,_In_ DWORD FreshnessCounter,_In_ LPTSTR LookupName,_In_ PBYTE Data,_In_ DWORD DataLen)
HRESULT None wuapi.get_Type([out] UpdateType *retval)
ATOM WINAPI kernel32.DeleteAtom(_In_ ATOM nAtom)
protected void None.OnItemsSourceChanged(IEnumerable oldValue None,IEnumerable newValue None)
public Object None.TryFindResource(Object resourceKey None)
protected void None.OnBeforeLabelEdit(NodeLabelEditEventArgs e None)
HRESULT None msctf.Clone([out] IEnumTfDocumentMgrs **ppEnum)
public IEnumerable None.Select(DataSourceSelectArguments arguments None)
HRESULT WINAPI webservices.WsReadXmlBuffer(_In_ WS_XML_READER* reader,_In_ WS_HEAP* heap,WS_XML_BUFFER** xmlBuffer None,_In_opt_ WS_ERROR* error)
public IEnumerable None.Select(DataSourceSelectArguments arguments None)
HRESULT None None.ResynchRows(DBCOUNTITEM cRows None,const HROW rghRows[],DBCOUNTITEM *pcRowsResynched None,HROW **prghRowsResynched None,DBROWSTATUS **prgRowStatus None)
HRESULT None tapi3.get_PhoneHandlingEnabled([out] VARIANT_BOOL *pfEnabled)
DWORD WINAPI virtdisk.ResizeVirtualDisk(_In_ HANDLE VirtualDiskHandle,_In_ RESIZE_VIRTUAL_DISK_FLAG Flags,_In_ PRESIZE_VIRTUAL_DISK_PARAMETERS Parameters,_In_opt_ LPOVERLAPPED Overlapped)
DWORD WINAPI crypt32.CertEnumCertificateContextProperties(_In_ PCCERT_CONTEXT pCertContext,_In_ DWORD dwPropId)
public void None.Remove(Object obj None)
public PropertyItem None.GetPropertyItem(int propid None)
BOOL None imm32.ImmSetConversionStatus(_In_ HIMC hIMC,_In_ DWORD fdwConversion,_In_ DWORD fdwSentence)
protected void None.Dispose(boolean disposing None)
BOOL None jsproxy.InternetDeInitializeAutoProxyDll(_In_ LPSTR lpszMime,_In_ DWORD dwReserved)
HRESULT None oleaut32.VarDecFromUI4(_In_ ULONG ulIn,_Out_ DECIMAL *pdecOut)
DWORD None wininet.FtpGetFileSize(_In_ HINTERNET hFile,_Out_ LPDWORD lpdwFileSizeHigh)
BOOL None kernel32.EnumSystemCodePages(_In_ CODEPAGE_ENUMPROC lpCodePageEnumProc,_In_ DWORD dwFlags)
BOOL None kernel32.EnumSystemCodePagesW(_In_ CODEPAGE_ENUMPROC lpCodePageEnumProc,_In_ DWORD dwFlags)
BOOL None kernel32.EnumSystemCodePagesA(_In_ CODEPAGE_ENUMPROC lpCodePageEnumProc,_In_ DWORD dwFlags)
HRESULT None propsys.VariantGetBooleanElem(_In_ REFVARIANT var,_In_ ULONG iElem,_Out_ BOOL *pfVal)
LONG WINAPI winscard.SCardEstablishContext(_In_ DWORD dwScope,_In_ LPCVOID pvReserved1,_In_ LPCVOID pvReserved2,_Out_ LPSCARDCONTEXT phContext)
BOOL None wininet.FtpGetCurrentDirectory(_In_ HINTERNET hConnect,_Out_ LPTSTR lpszCurrentDirectory,_Inout_ LPDWORD lpdwCurrentDirectory)
BOOL None wininet.FtpGetCurrentDirectoryW(_In_ HINTERNET hConnect,_Out_ LPTSTR lpszCurrentDirectory,_Inout_ LPDWORD lpdwCurrentDirectory)
BOOL None wininet.FtpGetCurrentDirectoryA(_In_ HINTERNET hConnect,_Out_ LPTSTR lpszCurrentDirectory,_Inout_ LPDWORD lpdwCurrentDirectory)
HRESULT None None.ULongLongToUInt8(_In_ ULONGLONG ullOperand,_Out_ UINT8 *pu8Result)
BOOLEAN None None.DeleteSharedMemory(_In_ PVOID SharedMem)
HRESULT None msftedit.TxGetPasswordChar([out] TCHAR *pch)
HRESULT None mfplat.MFInitAMMediaTypeFromMFMediaType(IMFMediaType *pMFType None,GUID guidFormatBlockType None,AM_MEDIA_TYPE *pAMType None)
HRESULT None None.SetFlags(DWORD dwFlags None,DWORD dwFlagMask None)
int None None.MyMethod(Object o None)
protected void None.OnPreRender(EventArgs e None)
public void None.InitializeCell(DataControlFieldCell cell None,DataControlCellType cellType None,DataControlRowState rowState None,int rowIndex None)
void None None.GroupMemoryBarrierWithGroupSync(void None None)
SerializableAttribute None None.ClassInterfaceAttribute(ClassInterfaceType.None None None)
DWORD None rasapi32.RasGetConnectionStatistics(_In_ HRASCONN hRasConn,_Inout_ RAS_STATS *lpStatistics)
HRESULT None None.GetVideoAspectRatio([out] DWORD *cx,[out] DWORD *cy)
protected void None.TreeView1_SelectedNodeChanged(object sender None,EventArgs e None)
HRESULT None shell32.TranslateAcceleratorSB(LPMSG lpmsg None,WORD wID None)
BOOL None shlwapi.PathIsUNCServer(_In_ LPCTSTR pszPath)
BOOL None shlwapi.PathIsUNCServerW(_In_ LPCTSTR pszPath)
BOOL None shlwapi.PathIsUNCServerA(_In_ LPCTSTR pszPath)
protected void None.OnPageIndexChanged(EventArgs e None)
HRESULT None faxcom.get_Tsid([out None None,retval] BSTR *pVal)
public boolean None.IsBindableType(Type type None)
SECURITY_STATUS None sspicli.SspiCopyAuthIdentity(_In_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE AuthData,_Out_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE *AuthDataCopy)
protected void None.Dispose(boolean explicitDisposing None)
SECURITY_STATUS WINAPI secur32.QueryContextAttributesEx(_In_ PCtxtHandle phContext,_In_ ULONG ulAttribute,_Out_ PVOID pBuffer,_In_ ULONG cbBuffer)
SECURITY_STATUS WINAPI secur32.QueryContextAttributesExW(_In_ PCtxtHandle phContext,_In_ ULONG ulAttribute,_Out_ PVOID pBuffer,_In_ ULONG cbBuffer)
SECURITY_STATUS WINAPI secur32.QueryContextAttributesExA(_In_ PCtxtHandle phContext,_In_ ULONG ulAttribute,_Out_ PVOID pBuffer,_In_ ULONG cbBuffer)
public DateTime None.ToDateTime(int year None,int month None,int day None,int hour None,int minute None,int second None,int millisecond None)
NTSTATUS None None.WdfRegistryQueryUnicodeString(_In_ WDFKEY Key,_In_ PCUNICODE_STRING ValueName,_Out_opt_ PUSHORT ValueByteLength,_Inout_ PUNICODE_STRING Value)
public boolean None.ContainsValue(Object value None)
NTSTATUS WINAPI bcrypt.BCryptDuplicateKey(_In_ BCRYPT_KEY_HANDLE hKey,_Out_ BCRYPT_KEY_HANDLE *phNewKey,_Out_ PUCHAR pbKeyObject,_In_ ULONG cbKeyObject,_In_ ULONG dwFlags)
PIO_RESOURCE_DESCRIPTOR None None.WdfIoResourceListGetDescriptor(_In_ WDFIORESLIST ResourceList,_In_ ULONG Index)
public int None.GetMaxCharCount(int byteCount None)
HRESULT WINAPI None.EngineAdapterSetEnrollmentParameters(_Inout_ PWINBIO_PIPELINE Pipeline,_In_ PWINBIO_EXTENDED_ENROLLMENT_PARAMETERS Parameters)
public void None.CopyBaseAttributes(WebControl controlSrc None)
HRESULT None faxcom.put_Tsid([in] BSTR newVal)
BOOL CALLBACK input.SaveSystemAcctInputSettings(_In_ HWND hwndParent,_In_ HKEY hSourceRegKey)
DWORD None rasapi32.RasInvokeEapUI(_In_ HRASCONN hRasConn,_In_ DWORD dwSubEntry,_In_ LPRASDIALEXTENSIONS lpExtensions,_In_ HWND hwnd)
public WebResponse None.EndGetResponse(IAsyncResult asyncResult None)
protected void None.OnLoad(EventArgs e None)
HRESULT None wuapi.get_InstallationBehavior([out] IInstallationBehavior **retval)
protected HitTestResult None.HitTestCore(PointHitTestParameters hitTestParameters None)
HRESULT None mstscax.get_MsRdpClientShell([out] IMsRdpClientShell **ppLauncher)
HGROUPSET WINAPI clusapi.CreateClusterGroupSet(_In_ HCLUSTER hCluster,_In_ LPCWSTR groupSetName)
protected AutoGeneratedField None.CreateAutoGeneratedColumn(AutoGeneratedFieldProperties fieldProperties None)
HRESULT None fxscomex.OnReceiptOptionsChange(IFaxServer2 *pFaxServer2 None)
protected void None.OnPreviewStylusButtonUp(StylusButtonEventArgs e None)
HRESULT None wuapi.get_MaxDownloadSize([out] DECIMAL *retval)
UINT32 None d2d1.GetPropertyNameLength(UINT32 index None)
public None None.SecurityPermissionAttribute(SecurityAction action None)
private void None.GridNavigate(Object sender None,NavigateEventArgs e None)
HRESULT None propsys.InitPropVariantFromCLSID(_In_ REFCLSID clsid,_Out_ PROPVARIANT *ppropvar)
HRESULT None None.Int8ToULong(_In_ INT8 i8Operand,_Out_ ULONG *pulResult)
uint None None.reversebits(in uint value)
public PathGeometry None.GetWidenedPathGeometry(Pen pen None,double tolerance None,ToleranceType type None)
void None None.abort( None None)
DWORD WINAPI kernel32.GetProcessImageFileName(_In_ HANDLE hProcess,_Out_ LPTSTR lpImageFileName,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetProcessImageFileNameW(_In_ HANDLE hProcess,_Out_ LPTSTR lpImageFileName,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetProcessImageFileNameA(_In_ HANDLE hProcess,_Out_ LPTSTR lpImageFileName,_In_ DWORD nSize)
size_t None None.wcstombs(char *mbstr None,const wchar_t *wcstr,size_t count None)
LPTSTR None shlwapi.PathRemoveBackslash(_Inout_ LPTSTR lpszPath)
LPTSTR None shlwapi.PathRemoveBackslashW(_Inout_ LPTSTR lpszPath)
LPTSTR None shlwapi.PathRemoveBackslashA(_Inout_ LPTSTR lpszPath)
SECURITY_STATUS None secur32.AddSecurityPackage(_In_ LPTSTR pszPackageName,_In_ PSECURITY_PACKAGE_OPTIONS pOptions)
SECURITY_STATUS None secur32.AddSecurityPackageW(_In_ LPTSTR pszPackageName,_In_ PSECURITY_PACKAGE_OPTIONS pOptions)
SECURITY_STATUS None secur32.AddSecurityPackageA(_In_ LPTSTR pszPackageName,_In_ PSECURITY_PACKAGE_OPTIONS pOptions)
HRESULT None shlwapi.UrlEscape(_In_ PCTSTR pszURL,_Out_ PTSTR pszEscaped,_Inout_ DWORD *pcchEscaped,DWORD dwFlags None)
HRESULT None shlwapi.UrlEscapeW(_In_ PCTSTR pszURL,_Out_ PTSTR pszEscaped,_Inout_ DWORD *pcchEscaped,DWORD dwFlags None)
HRESULT None shlwapi.UrlEscapeA(_In_ PCTSTR pszURL,_Out_ PTSTR pszEscaped,_Inout_ DWORD *pcchEscaped,DWORD dwFlags None)
public Type None.MakeGenericType(Type[] typeArguments None)
DWORD DHCP_API_FUNCTION dhcpsapi.DhcpHlprAddV4PolicyExpr(_Inout_ LPDHCP_POLICY Policy,_In_ DWORD ParentExpr,_In_ DHCP_POL_LOGIC_OPER Operator,_Out_ DWORD *ExprIndex)
double None None.strtod(const char *nptr,char **endptr None)
private void None.button1_Click(Object sender None,System.EventArgs e None)
HRESULT None None.get_StyleName([out None None,retval] BSTR *retVal)
protected void None.RenderChildren(HtmlTextWriter writer None)
DWORD WINAPI clusapi.ClusterControl(_In_ HCLUSTER hCluster,_In_opt_ HNODE hHostNode,_In_ DWORD dwControlCode,_In_opt_ LPVOID lpInBuffer,_In_ DWORD nInBufferSize,_Out_opt_ LPVOID lpOutBuffer,_In_ DWORD nOutBufferSize,_Out_opt_ LPDWORD lpBytesReturned)
HRESULT None oleaut32.VarUI2FromCy(_In_ CY cyIn,_Out_ USHORT *puiOut)
HRESULT None msctf.GetDocumentMgr([out] ITfDocumentMgr **ppdim)
SECURITY_STATUS SEC_Entry secur32.CompleteAuthToken(_In_ PCtxtHandle phContext,_In_ PSecBufferDesc pToken)
public XmlNode None.CloneNode(boolean deep None)
MyDir None None.SubDir1(mapped from VDir1)
protected void None.OnIsMouseCapturedChanged(DependencyPropertyChangedEventArgs e None)
void None None.InterlockedOr(in R dest,in T value,out T original_value)
NTSTATUS None secur32.LsaLookupAuthenticationPackage(_In_ HANDLE LsaHandle,_In_ PLSA_STRING PackageName,_Out_ PULONG AuthenticationPackage)
DWORD WINAPI clusapi.EvictClusterNode(_In_ HNODE hNode)
protected void None.OnAfterCheck(TreeViewEventArgs e None)
STDAPI None avifil32.EditStreamCopy(PAVISTREAM pavi None,LONG *plStart None,LONG *plLength None,PAVISTREAM *ppResult None)
public void None.Save(String filename None)
BOOL None None.WlxSetOption(_In_ HANDLE hWlx,_In_ DWORD Option,_In_ ULONG_PTR Value,_Out_ ULONG_PTR *OldValue)
HRESULT None mstscax.get_CmDeviceInstance([out None None,retval] DWORD *pCmDeviceInstance)
ULONG None propsys.VariantGetElementCount(_In_ REFVARIANT varIn)
int None None.wctomb(char *mbchar None,wchar_t wchar None)
HRESULT None faxcom.put_RecipientAddress([in] BSTR newVal)
LONG None propsys.VariantToInt32WithDefault(_In_ REFVARIANT varIn,_In_ LONG lDefault)
LONG WINAPI winscard.SCardTransmit(_In_ SCARDHANDLE hCard,_In_ LPCSCARD_IO_REQUEST pioSendPci,_In_ LPCBYTE pbSendBuffer,_In_ DWORD cbSendLength,_Inout_opt_ LPSCARD_IO_REQUEST pioRecvPci,_Out_ LPBYTE pbRecvBuffer,_Inout_ LPDWORD pcbRecvLength)
NTSTATUS None None.WdfWmiProviderCreate(_In_ WDFDEVICE Device,_In_ PWDF_WMI_PROVIDER_CONFIG WmiProviderConfig,_In_opt_ PWDF_OBJECT_ATTRIBUTES ProviderAttributes,_Out_ WDFWMIPROVIDER *WmiProvider)
HRESULT None None.SetOutputBuffer(D2D1_BUFFER_PRECISION bufferPrecision None,D2D1_CHANNEL_DEPTH channelDepth None)
HRESULT None None.InitPropVariantFromString(_In_ PCWSTR psz,_Out_ PROPVARIANT *ppropvar)
BOOL WINAPI crypt32.CertRemoveEnhancedKeyUsageIdentifier(_In_ PCCERT_CONTEXT pCertContext,_In_ LPCSTR pszUsageIdentifier)
LPVOID WINAPI kernel32.MapViewOfFileEx(_In_ HANDLE hFileMappingObject,_In_ DWORD dwDesiredAccess,_In_ DWORD dwFileOffsetHigh,_In_ DWORD dwFileOffsetLow,_In_ SIZE_T dwNumberOfBytesToMap,_In_opt_ LPVOID lpBaseAddress)
LONG WINAPI wintrust.WTHelperGetFileHash(_In_ LPCWSTR pwszFilename,_In_ DWORD dwFlags,_Inout_opt_ PVOID pvReserved,_Out_opt_ BYTE *pbFileHash,_Inout_opt_ DWORD *pcbFileHash,_Out_opt_ ALG_ID *pHashAlgid)
DWORD APIENTRY dhcpcsvc.DhcpDeRegisterParamChange(_In_ DWORD Flags,_In_ LPVOID Reserved,_In_ LPVOID Event)
DWORD WINAPI peerdist.PeerDistClientCloseContent(_In_ PEERDIST_INSTANCE_HANDLE hPeerDist,_In_ PEERDIST_CONTENT_HANDLE hContentHandle)
HRESULT None mobsync.GetITask([out] ITask **ppITask)
DWORD None dhcpsapi.DhcpAddSubnetElementV6(_In_ LPWSTR ServerIpAddress,_In_ DHCP_IPV6_ADDRESS SubnetAddress,_In_ LDHCP_SUBNET_ELEMENT_DATA_V6 *AddElementInfo)
DWORD WINAPI clusapi.ClusterNodeCloseEnum(_In_ HNODEENUM hNodeEnum)
protected void None.OnNextButtonClick(WizardNavigationEventArgs e None)
size_t None None.wcstombs(char *mbstr None,const wchar_t *wcstr,size_t count None)
protected void None.OnWebPartsDisconnecting(WebPartConnectionsCancelEventArgs e None)
protected void None.OnPreviewMouseLeftButtonUp(MouseButtonEventArgs e None)
uint32 None dmwmibridgeprov.GetLicenseFromStoreMethod([in] string param)
BOOL WINAPI advapi32.IsValidSecurityDescriptor(_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor)
HRESULT None None.ULongPtrToLongPtr(_In_ ULONG_PTR ulOperand,_Out_ LONG_PTR *plResult)
NTSTATUS None None.WdfIoQueueRetrieveNextRequest(_In_ WDFQUEUE Queue,_Out_ WDFREQUEST *OutRequest)
DWORD None None.NPDirectoryNotify(_In_ HWND hwnd,_In_ LPTSTR lpDir,_In_ DWORD dwOper)
HRESULT None None.UShortToInt8(_In_ USHORT usOperand,_Out_ INT8 *pi8Result)
HRESULT None None.Image(LPWSTR *ppszImageUrl None)
void None None.OnDisconnected([in] LONG discReason,[in] LONG extendedDiscReason)
BOOL WINAPI crypt32.CryptGetDefaultOIDDllList(_In_ HCRYPTOIDFUNCSET hFuncSet,_In_ DWORD dwEncodingType,_Out_ LPWSTR pwszDllList,_Inout_ DWORD *pcchDllList)
HRESULT None None.get_Tablet([out None None,retval] IInkTablet **SingleTablet)
DWORD None None.NPFMXGetPermCaps(_In_ LPTSTR lpDriveName)
HRESULT None faxcom.get_PageCount([out None None,retval] LONG *pVal)
protected void None.LoadViewState(Object savedState None)
errno_t None None._strlwr_s(char *str None,size_t numberOfElements None)
BOOL None wininet.FtpCreateDirectory(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszDirectory)
BOOL None wininet.FtpCreateDirectoryW(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszDirectory)
BOOL None wininet.FtpCreateDirectoryA(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszDirectory)
protected void None.BuildProfileTree(String parentId None,boolean calcViewState None)
DWORD None mpr.WNetDisconnectDialog1(_In_ LPDISCDLGSTRUCT lpConnDlgStruct)
DWORD None mpr.WNetDisconnectDialog1W(_In_ LPDISCDLGSTRUCT lpConnDlgStruct)
DWORD None mpr.WNetDisconnectDialog1A(_In_ LPDISCDLGSTRUCT lpConnDlgStruct)
SerializableAttribute None None.ClassInterfaceAttribute(ClassInterfaceType.None None None)
HRESULT None msctf.TF_CreateDisplayAttributeMgr(_Out_ ITfDisplayAttributeMgr **ppdam)
DWORD WINAPI clusapi.ClusterNodeGetEnumCount(_In_ HNODEENUM hNodeEnum)
SECURITY_STATUS SEC_Entry secur32.ExportSecurityContext(_In_ PCtxtHandle phContext,_In_ Ulong fFlags,_Out_ PSecBuffer pPackedContext,_Out_opt_ HANDLE *pToken)
HRESULT None mstscax.get_DeviceText([out None None,retval] BSTR *pDeviceText)
void None None.Page_Load(Object sender None,System.EventArgs e None)
public void None.Delete(int index None)
public void None.MergeWith(FontInfo f None)
BOOLEAN WINAPI powrprof.GetPwrCapabilities(_Out_ PSYSTEM_POWER_CAPABILITIES lpSystemPowerCapabilities)
HRESULT None None.IntToSIZET(_In_ INT iOperand,_Out_ SIZE_T *pcbResult)
protected void None.OnCausesValidationChanged(EventArgs e None)
not running shell32.STDMETHOD(CancelAsyncSearch None None)
BOOL WINAPI advapi32.CryptDuplicateHash(_In_ HCRYPTHASH hHash,_In_ DWORD *pdwReserved,_In_ DWORD dwFlags,_Out_ HCRYPTHASH *phHash)
HRESULT None oleaut32.VarR4FromDate(_In_ DATE dateIn,_Out_ FLOAT *pfltOut)
public boolean None.SelectNextControl(Control ctl None,boolean forward None,boolean tabStopOnly None,boolean nested None,boolean wrap None)
UInt32 None None.GetDedupProperties([out] String DedupProperties,[out] String ExtendedStatus)
HRESULT None None.get_CollectingInk([out None None,retval] VARIANT_BOOL *CollectingInk)
protected void None.OnClick(EventArgs e None)
DWORD DHCP_API_FUNCTION dhcpsapi.DhcpV4AddPolicyRange(_In_opt_ LPWSTR ServerIpAddress,_In_ DHCP_IP_ADDRESS SubnetAddress,_In_ LPWSTR PolicyName,_In_ LPDHCP_IP_RANGE Range)
PIDLIST_ABSOLUTE None shell32.ILCombine(_In_ PCIDLIST_ABSOLUTE pidl1,_In_ PCUIDLIST_RELATIVE pidl2)
HRESULT None faxcom.put_RecipientOffice([in] BSTR newVal)
public StringBuilder None.Insert(int index None,float value None)
protected void None.OnCommitting(IDictionary savedState None)
public None None.ResourceReader(String fileName None)
public None None.Run(String text None)
HRESULT None propsys.VariantToInt64ArrayAlloc(_In_ REFVARIANT var,_Out_ LONGLONG **pprgn,_Out_ ULONG *pcElem)
HRESULT None None.IntToWord(_In_ INT iOperand,_Out_ WORD *pwResult)
DNS_STATUS WINAPI dnsapi.DnsReplaceRecordSet(_In_ PDNS_RECORD pNewSet,_In_ DWORD Options,_In_opt_ HANDLE hContext,_Inout_opt_ PVOID pExtraInfo,_Inout_opt_ PVOID pReserved)
DNS_STATUS WINAPI dnsapi.DnsReplaceRecordSetA(_In_ PDNS_RECORD pNewSet,_In_ DWORD Options,_In_opt_ HANDLE hContext,_Inout_opt_ PVOID pExtraInfo,_Inout_opt_ PVOID pReserved)
DNS_STATUS WINAPI dnsapi.DnsReplaceRecordSetW(_In_ PDNS_RECORD pNewSet,_In_ DWORD Options,_In_opt_ HANDLE hContext,_Inout_opt_ PVOID pExtraInfo,_Inout_opt_ PVOID pReserved)
protected InheritanceAttribute None.InvokeGetInheritanceAttribute(ComponentDesigner toInvoke None)
private void None.ShowLineAndAlignment(PaintEventArgs e None)
public long None.Seek(long offset None,SeekOrigin origin None)
NTSTATUS NTAPI None.SpQueryMetaDataFn(_In_ LSA_SEC_HANDLE CredentialHandle,_In_opt_ PUNICODE_STRING TargetName,_In_ ULONG ContextRequirements,_Out_ ULONG MetaDataLength,_Out_ PUCHAR MetaData,_Inout_ PLSA_SEC_HANDLE ContextHandle)
HRESULT None faxcom.put_EmailAddress([in] BSTR newVal)
public String None.Replace(String input None,String replacement None,int count None,int startat None)
DWORD None None.NPGetConnectionPerformance(_In_ LPTSTR lpRemoteName,_Out_ LPNETCONNECTINFOSTRUCT lpNetConnectInfo)
public CryptoProvider None.Bind(SecureEnvironment secureEnvironment None)
HRESULT CALLBACK input.QueryLayoutOrTipString(_In_ LPCWSTR psz,_In_ DWORD dwFlags)
HRESULT None None.Clone([out] ITravelLog **pptl)
HRESULT None propsys.InitPropVariantFromStrRet(_Inout_ STRRET *pstrret,_In_ PCUITEMID_CHILD pidl,_Out_ PROPVARIANT *ppropvar)
protected void None.OnQueryContinueDrag(QueryContinueDragEventArgs e None)
public String None.Remove(int startIndex None,int count None)
HRESULT None faxcom.get_Type([out None None,retval] LONG *pVal)
protected void None.ScaleControl(SizeF factor None,BoundsSpecified specified None)
HINTERNET None wininet.GopherFindFirstFile(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszLocator,_In_ LPCTSTR lpszSearchString,_Out_ LPGOPHER_FIND_DATA lpFindData,_In_ DWORD dwFlags,_In_ DWORD_PTR dwContext)
HINTERNET None wininet.GopherFindFirstFileW(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszLocator,_In_ LPCTSTR lpszSearchString,_Out_ LPGOPHER_FIND_DATA lpFindData,_In_ DWORD dwFlags,_In_ DWORD_PTR dwContext)
HINTERNET None wininet.GopherFindFirstFileA(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszLocator,_In_ LPCTSTR lpszSearchString,_Out_ LPGOPHER_FIND_DATA lpFindData,_In_ DWORD dwFlags,_In_ DWORD_PTR dwContext)
protected AccessibleObject None.GetAccessibilityObjectById(int objectId None)
HRESULT None fxscomex.OnOutboundRoutingRulesConfigChange(IFaxServer2 *pFaxServer2 None)
NTSTATUS WINAPI bcrypt.BCryptVerifySignature(_In_ BCRYPT_KEY_HANDLE hKey,_In_opt_ VOID *pPaddingInfo,_In_ PUCHAR pbHash,_In_ ULONG cbHash,_In_ PUCHAR pbSignature,_In_ ULONG cbSignature,_In_ ULONG dwFlags)
HRESULT None msctf.GetContext([out] ITfContext **ppContext)
public None None.StreamWriter(String path None,boolean append None)
ULONG None wldap32.ldap_escape_filter_element(_In_ PCHAR sourceFilterElement,_In_ ULONG sourceLength,_Out_ PCHAR destFilterElement,_In_ ULONG destLength)
ULONG None wldap32.ldap_escape_filter_elementW(_In_ PCHAR sourceFilterElement,_In_ ULONG sourceLength,_Out_ PCHAR destFilterElement,_In_ ULONG destLength)
ULONG None wldap32.ldap_escape_filter_elementA(_In_ PCHAR sourceFilterElement,_In_ ULONG sourceLength,_Out_ PCHAR destFilterElement,_In_ ULONG destLength)
HRESULT None shlwapi.UrlCombine(_In_ PCTSTR pszBase,_In_ PCTSTR pszRelative,_Out_opt_ PTSTR pszCombined,_Inout_ DWORD *pcchCombined,DWORD dwFlags None)
HRESULT None shlwapi.UrlCombineW(_In_ PCTSTR pszBase,_In_ PCTSTR pszRelative,_Out_opt_ PTSTR pszCombined,_Inout_ DWORD *pcchCombined,DWORD dwFlags None)
HRESULT None shlwapi.UrlCombineA(_In_ PCTSTR pszBase,_In_ PCTSTR pszRelative,_Out_opt_ PTSTR pszCombined,_Inout_ DWORD *pcchCombined,DWORD dwFlags None)
public void None.WriteXml(TextWriter writer None,XmlWriteMode mode None,boolean writeHierarchy None)
DWORD WINAPI clusapi.ResumeClusterNodeEx(_In_ HNODE hNode,_In_ CLUSTER_NODE_RESUME_FAILBACK_TYPE eResumeFailbackType,_In_ DWORD dwResumeFlagsReserved)
HRESULT WINAPI drt.DrtCreateIpv6UdpTransport(DRT_SCOPE scope None,ULONG dwScopeId None,ULONG dwLocalityThreshold None,_Inout_ USHORT *pwPort,_Out_ HTRANSPORT *phTransport)
private void None.AutoSizeControl(Control control None,int textPadding None)
DWORD WINAPI None.RasCustomHangUp(HRASCONN hRasConn None)
HRESULT None None.GetSampleFlags([out] DWORD *pdwSampleFlags)
HRESULT WINAPI None.EngineAdapterCommitEnrollment(_Inout_ PWINBIO_PIPELINE Pipeline,_In_ PWINBIO_IDENTITY Identity,_In_ WINBIO_BIOMETRIC_SUBTYPE SubFactor,_In_opt_ PUCHAR PayloadBlob,_In_ SIZE_T PayloadBlobSize)
HRESULT None None.DWordToUIntPtr(_In_ DWORD dwOperand,_Out_ UINT_PTR *puiResult)
HRESULT None None.get_CurrentRole([out None None,retval] DWORD *pdwRole)
VOID None None.WdfIoQueueStart(_In_ WDFQUEUE Queue)
DWORD None dhcpsapi.DhcpEnumOptionValuesV6(_In_ LPWSTR ServerIpAddress,_In_ DWORD Flags,_In_ WCHAR *ClassName,_In_ WCHAR *VendorName,_In_ DHCP_OPTION_SCOPE_INFO6 ScopeInfo,_Inout_ DHCP_RESUME_HANDLE *ResumeHandle,_In_ DWORD PreferredMaximum,_Out_ LPDHCP_OPTION_VALUE_ARRAY *OptionValues,_Out_ DWORD *OptionsRead,_Out_ DWORD *OptionsTotal)
HRESULT None None.get_ControlViewWalker([out None None,retval] IUIAutomationTreeWalker **walker)
HRESULT None None.DWordToPtrdiffT(_In_ DWORD dwOperand,_Out_ ptrdiff_t *pcbResult)
protected void None.OnPreviewDragEnter(DragEventArgs e None)
HRESULT None None.GetCurrentSource([out] BSTR *ppUrl)
protected void None.OnPreviewQueryContinueDrag(QueryContinueDragEventArgs e None)
protected void None.OnContextMenuOpening(ContextMenuEventArgs e None)
LPVOID WINAPI kernel32.GlobalLock(_In_ HGLOBAL hMem)
public void None.InitializeCell(DataControlFieldCell cell None,DataControlCellType cellType None,DataControlRowState rowState None,int rowIndex None)
HRESULT None wuapi.get_SecurityBulletinIDs([out] IStringCollection **retval)
public int None.Add(Object item None)
HRESULT None oleaut32.VarUI1FromI2(_In_ SHORT sIn,_Out_ BYTE *pbOut)
HRESULT None None.GetVideoSwapchainHandle([out] HANDLE *phSwapchain)
HRESULT None fxscomex.put_AgeLimit(BSTR lAgeLimit None)
public None None.CultureInfo(String name None)
public boolean None.ShouldSerializeBlocks(XamlDesignerSerializationManager manager None)
HRESULT None None.UIntToWord(_In_ UINT uOperand,_Out_ WORD *pwResult)
HRESULT None faxcom.get_ReceiveTime([out None None,retval] BSTR *pVal)
HRESULT None faxcom.get_SenderDept([out None None,retval] BSTR *pVal)
protected void None.OnPaint(PaintEventArgs e None)
HRESULT None msctf.GetGUID([out] GUID *pguid)
public ParameterBuilder None.DefineParameter(int position None,ParameterAttributes attributes None,String strParamName None)
protected void None.OnSelected(SqlDataSourceStatusEventArgs e None)
protected boolean None.OnDeserializeUnrecognizedElement(String elementName None,XmlReader reader None)
public void None.Serialize(XmlWriter xmlWriter None,Object o None)
protected void None.OnLoggingIn(LoginCancelEventArgs e None)
BOOLAPI None wininet.CreateUrlCacheEntry(_In_ LPCTSTR lpszUrlName,_In_ DWORD dwExpectedFileSize,_In_ LPCTSTR lpszFileExtension,_Out_ LPTSTR lpszFileName,_Reserved_ DWORD dwReserved)
BOOLAPI None wininet.CreateUrlCacheEntryW(_In_ LPCTSTR lpszUrlName,_In_ DWORD dwExpectedFileSize,_In_ LPCTSTR lpszFileExtension,_Out_ LPTSTR lpszFileName,_Reserved_ DWORD dwReserved)
BOOLAPI None wininet.CreateUrlCacheEntryA(_In_ LPCTSTR lpszUrlName,_In_ DWORD dwExpectedFileSize,_In_ LPCTSTR lpszFileExtension,_Out_ LPTSTR lpszFileName,_Reserved_ DWORD dwReserved)
function None None.GetQuantity(productID None None,elemToUpdate None None,productLabelElem None None,buttonElem None None)
ULONG None httpapi.HttpSetServiceConfiguration(_In_ HANDLE ServiceHandle,_In_ HTTP_SERVICE_CONFIG_ID ConfigId,_In_ PVOID pConfigInformation,_In_ ULONG ConfigInformationLength,_In_ LPOVERLAPPED pOverlapped)
DWORD WINAPI dhcpsapi.DhcpServerSetDnsRegCredentialsV5(_In_ DHCP_SRV_HANDLE ServerIpAddress,_In_ LPWSTR Uname,_In_ LPWSTR Domain,_In_ LPWSTR Password)
NTSTATUS WINAPI bcrypt.BCryptHash(BCRYPT_ALG_HANDLE hAlgorithm None,PUCHAR pbSecret None,ULONG cbSecret None,PUCHAR pbInput None,ULONG cbInput None,PUCHAR pbOutput None,ULONG cbOutput None)
public DateTime None.AddYears(DateTime time None,int years None)
ULONG None wldap32.ldap_bind(_In_ LDAP *ld,_In_ PCHAR dn,_In_ PCHAR cred,_In_ ULONG method)
ULONG None wldap32.ldap_bindW(_In_ LDAP *ld,_In_ PCHAR dn,_In_ PCHAR cred,_In_ ULONG method)
ULONG None wldap32.ldap_bindA(_In_ LDAP *ld,_In_ PCHAR dn,_In_ PCHAR cred,_In_ ULONG method)
size_t None None.wcstombs(char *mbstr None,const wchar_t *wcstr,size_t count None)
UInt32 None None.Attach([in] String StorageNodeName,[out] String ExtendedStatus)
WORD None None.LOWORD(DWORD dwValue None)
public void None.Remove(Installer value None)
void None cluswmi.ExecuteNetworkControl([in] sint32 ControlCode,[in] uint8 InputBuffer[],[out] uint8 OutputBuffer[],[out] sint32 OutputBufferSize)
DWORD None dhcpsapi.DhcpSetThreadOptions(_In_ DWORD Flags,_In_ LPVOID Reserved)
BOOL None wininet.HttpAddRequestHeaders(_In_ HINTERNET hRequest,_In_ LPCTSTR lpszHeaders,_In_ DWORD dwHeadersLength,_In_ DWORD dwModifiers)
BOOL None wininet.HttpAddRequestHeadersW(_In_ HINTERNET hRequest,_In_ LPCTSTR lpszHeaders,_In_ DWORD dwHeadersLength,_In_ DWORD dwModifiers)
BOOL None wininet.HttpAddRequestHeadersA(_In_ HINTERNET hRequest,_In_ LPCTSTR lpszHeaders,_In_ DWORD dwHeadersLength,_In_ DWORD dwModifiers)
HRESULT None mfplat.MFCreateCollection(_Out_ IMFCollection **ppIMFCollection)
HRESULT None mfplat.MFTRegister(_In_ CLSID clsidMFT,_In_ GUID guidCategory,_In_ LPWSTR pszName,_In_ UINT32 Flags,_In_ UINT32 cInputTypes,_In_ MFT_REGISTER_TYPE_INFO *pInputTypes,_In_ UINT32 cOutputTypes,_In_ MFT_REGISTER_TYPE_INFO *pOutputTypes,_In_ IMFAttributes *pAttributes)
HRESULT WINAPI None.MFCreateSensorActivityMonitor(_In_ IMFSensorActivitiesReportCallback *pCallback,_Out_ IMFSensorActivityMonitor **ppActivityMonitor)
protected DataSourceView None.GetView(String viewName None)
public DataSet None.GetChanges(DataRowState rowStates None)
DWORD None wininet.InternetHangUp(_In_ DWORD_PTR dwConnection,_In_ DWORD dwReserved)
HRESULT None oleaut32.VarR8FromUI1(_In_ BYTE bIn,_Out_ DOUBLE *pdblOut)
public None None.StreamWriter(String path None,boolean append None,Encoding encoding None,int bufferSize None)
HRESULT None faxcom.put_SenderTitle([in] BSTR newVal)
void None None.GetPage(String* url None)
HRESULT None wuapi.get_MoreInfoUrls([out] IStringCollection **retval)
BOOLEAN None None.WdfRequestIsFrom32BitProcess(_In_ WDFREQUEST Request)
protected void None.OnClick(EventArgs e None)
NTSTATUS None None.SpGetInfo(_Out_ PSecPkgInfo PackageInfo)
HRESULT None faxcom.put_SenderHomePhone([in] BSTR newVal)
HRESULT None None.AppendPacket(IWMSPacket* pPacket None,DWORD dwExFlags None)
HRESULT None None.get_ReservedNotSupportedValue([out None None,retval] IUnknown **notSupportedValue)
public WebResponse None.EndGetResponse(IAsyncResult asyncResult None)
HRESULT None None.GetCount([out] UINT *pcDevices)
BOOL None jsproxy.InternetInitializeAutoProxyDll(_In_ DWORD dwReserved)
uint32 None cimwin32.SetTcpMaxConnectRetransmissions([in] uint32 TcpMaxConnectRetransmissions)
HRESULT None propsys.PropVariantGetDoubleElem(_In_ REFPROPVARIANT propvar,_In_ ULONG iElem,_Out_ DOUBLE *pnVal)
DWORD WINAPI peerdist.PeerDistUnregisterForStatusChangeNotification(_In_ PEERDIST_INSTANCE_HANDLE hPeerDist)
HRESULT None None.GetComment([out] LPWSTR *ppszComment)
HRESULT None propsys.PropVariantToBooleanVector(_In_ REFPROPVARIANT propvar,_Out_ BOOL *prgf,_In_ ULONG crgf,_Out_ ULONG *pcElem)
LONG NTAPI ntdll.RtlIpv4StringToAddressEx(_In_ PCTSTR AddressString,_In_ BOOLEAN Strict,_Out_ IN_ADDR *Address,_Out_ PUSHORT Port)
LONG NTAPI ntdll.RtlIpv4StringToAddressExW(_In_ PCTSTR AddressString,_In_ BOOLEAN Strict,_Out_ IN_ADDR *Address,_Out_ PUSHORT Port)
LONG NTAPI ntdll.RtlIpv4StringToAddressEx(_In_ PCTSTR AddressString,_In_ BOOLEAN Strict,_Out_ IN_ADDR *Address,_Out_ PUSHORT Port)
BOOL None shlwapi.PathIsUNCServerShare(_In_ LPCTSTR pszPath)
BOOL None shlwapi.PathIsUNCServerShareW(_In_ LPCTSTR pszPath)
BOOL None shlwapi.PathIsUNCServerShareA(_In_ LPCTSTR pszPath)
HRESULT None fxscomex.OnActivityLoggingConfigChange(IFaxServer2 *pFaxServer2 None)
public int None.GetMaxCharCount(int byteCount None)
private void None.Page_Load(Object sender None,System.EventArgs e None)
public void None.Write(double value None)
public boolean None.SelectNextControl(Control ctl None,boolean forward None,boolean tabStopOnly None,boolean nested None,boolean wrap None)
void None None.Page_Load(Object sender None,System.EventArgs e None)
BOOL WINAPI advapi32.CredUnprotect(_In_ BOOL fAsSelf,_In_ LPTSTR pszProtectedCredentials,_In_ DWORD cchCredentials,_Out_ LPTSTR pszCredentials,_Inout_ DWORD *pcchMaxChars)
BOOL WINAPI advapi32.CredUnprotectW(_In_ BOOL fAsSelf,_In_ LPTSTR pszProtectedCredentials,_In_ DWORD cchCredentials,_Out_ LPTSTR pszCredentials,_Inout_ DWORD *pcchMaxChars)
BOOL WINAPI advapi32.CredUnprotectA(_In_ BOOL fAsSelf,_In_ LPTSTR pszProtectedCredentials,_In_ DWORD cchCredentials,_Out_ LPTSTR pszCredentials,_Inout_ DWORD *pcchMaxChars)
BOOL None shlwapi.PathFindOnPath(_Inout_ LPTSTR pszFile,_In_opt_ LPCTSTR *ppszOtherDirs)
BOOL None shlwapi.PathFindOnPathW(_Inout_ LPTSTR pszFile,_In_opt_ LPCTSTR *ppszOtherDirs)
BOOL None shlwapi.PathFindOnPathA(_Inout_ LPTSTR pszFile,_In_opt_ LPCTSTR *ppszOtherDirs)
HRESULT None mstscax.get_AdvancedSettings8([out None None,retval] IMsRdpClientAdvancedSettings7 **ppAdvSettings)
HRESULT None mstscax.get_DriveLetterBitmap([out None None,retval] ULONG *pDriveLetterBitmap)
UInt32 None None.SetAttributes([in] Boolean IsManualAttach,[in] UInt16 Access,[out] String ExtendedStatus)
HRESULT None oleaut32.VarR8FromCy(_In_ CY cyIn,DOUBLE *pdblOut None)
LONG WINAPI clusapi.ClusterRegSetKeySecurity(_In_ HKEY hKey,_In_ SECURITY_INFORMATION SecurityInformation,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor)
private void None.whatIsChecked_Click(Object sender None,System.EventArgs e None)
NTSTATUS WINAPI bcrypt.BCryptSignHash(_In_ BCRYPT_KEY_HANDLE hKey,_In_opt_ VOID *pPaddingInfo,_In_ PBYTE pbInput,_In_ DWORD cbInput,_Out_ PBYTE pbOutput,_In_ DWORD cbOutput,_Out_ DWORD *pcbResult,_In_ ULONG dwFlags)
BOOL None shlwapi.PathIsRelative(_In_ LPCTSTR lpszPath)
BOOL None shlwapi.PathIsRelativeW(_In_ LPCTSTR lpszPath)
BOOL None shlwapi.PathIsRelativeA(_In_ LPCTSTR lpszPath)
void None None.Process2DQuadTessFactorsMin(in float4 RawEdgeFactors,in float2 InsideScale,out float4 RoundedEdgeTessFactors,out float2 RoundedInsideTessFactors,out float2 UnroundedInsideTessFactors)
DWORD None None.NPFMXGetPermHelp(_In_ LPTSTR lpDriveName,_In_ DWORD nType,_In_ BOOL fDirectory,_Inout_ LPVOID lpBuffer,_Inout_ LPDWORD lpBufferSize,_Out_ LPDWORD lpnHelpContext)
HRESULT None faxcom.put_ServerCoverpage([in] BOOL newVal)
HRESULT None None.MFSetAttributeSize(_In_ IMFAttributes *pAttributes,_In_ REFGUID guidKey,_In_ UINT32 unWidth,_In_ UINT32 unHeight)
protected void None.PrepareContainerForItemOverride(DependencyObject element None,Object item None)
protected void None.OnCausesValidationChanged(EventArgs e None)
HRESULT None msctf.TF_CreateThreadMgr(_Out_ ITfThreadMgr **pptim)
HRESULT None None.GetSnapshot([in] SnapshotEncodingType snapshotEncoding,[in] SnapshotFormatType snapshotFormat,[in] ULONG snapshotWidth,[in] ULONG snapshotHeight,[out None None,retval] BSTR *snapshotData)
RPC_STATUS RPC_ENTRY rpcrt4.RpcEpUnregister(RPC_IF_HANDLE IfSpec None,RPC_BINDING_VECTOR *BindingVector None,UUID_VECTOR *UuidVector None)
NTSTATUS WINAPI bcrypt.BCryptCloseAlgorithmProvider(_Inout_ BCRYPT_ALG_HANDLE hAlgorithm,_In_ ULONG dwFlags)
public void None.WriteXml(String fileName None,boolean writeHierarchy None)
IAsyncResult None None.BeginClose(TimeSpan timeout None,AsyncCallback callback None,Object state None)
HNODE WINAPI clusapi.OpenClusterNode(_In_ HCLUSTER hCluster,_In_ LPCWSTR lpszNodeName)
public int None.IndexOf(char value None)
BOOL None wininet.InternetCloseHandle(_In_ HINTERNET hInternet)
PCCERT_CHAIN_CONTEXT WINAPI crypt32.CertDuplicateCertificateChain(_In_ PCCERT_CHAIN_CONTEXT pChainContext)
HRESULT None None.LongToSIZET(_In_ LONG lOperand,_Out_ SIZE_T *pcbResult)
static String None.IsFileURI(String path None)
BOOL None crypt32.CryptSIPRemoveProvider(_In_ GUID *pgProv)
HRESULT None None.D2DOutline(ID2D1Geometry *pGeometry None,ID2D1Geometry **ppGeometry None)
BOOL None wininet.HttpQueryInfo(_In_ HINTERNET hRequest,_In_ DWORD dwInfoLevel,_Inout_ LPVOID lpvBuffer,_Inout_ LPDWORD lpdwBufferLength,_Inout_ LPDWORD lpdwIndex)
BOOL None wininet.HttpQueryInfoW(_In_ HINTERNET hRequest,_In_ DWORD dwInfoLevel,_Inout_ LPVOID lpvBuffer,_Inout_ LPDWORD lpdwBufferLength,_Inout_ LPDWORD lpdwIndex)
BOOL None wininet.HttpQueryInfoA(_In_ HINTERNET hRequest,_In_ DWORD dwInfoLevel,_Inout_ LPVOID lpvBuffer,_Inout_ LPDWORD lpdwBufferLength,_Inout_ LPDWORD lpdwIndex)
BOOL None wininet.InternetQueryOption(_In_ HINTERNET hInternet,_In_ DWORD dwOption,_Out_ LPVOID lpBuffer,_Inout_ LPDWORD lpdwBufferLength)
BOOL None wininet.InternetQueryOptionW(_In_ HINTERNET hInternet,_In_ DWORD dwOption,_Out_ LPVOID lpBuffer,_Inout_ LPDWORD lpdwBufferLength)
BOOL None wininet.InternetQueryOptionA(_In_ HINTERNET hInternet,_In_ DWORD dwOption,_Out_ LPVOID lpBuffer,_Inout_ LPDWORD lpdwBufferLength)
protected void None.LoadViewState(Object savedState None)
uint32 None cimwin32.SetPowerState([in] uint16 PowerState,[in] datetime Time)
protected void None.OnDragOver(DragEventArgs e None)
protected void None.LoadViewState(Object savedState None)
BOOL None wininet.DeleteUrlCacheGroup(_In_ GROUPID GroupId,_In_ DWORD dwFlags,_Reserved_ LPVOID lpReserved)
public void None.Lock(long position None,long length None)
SerializableAttribute None None.ClassInterfaceAttribute(ClassInterfaceType.None None None)
DWORD None dhcpsapi.DhcpSetOptionInfoV6(_In_ LPWSTR ServerIpAddress,_In_ DWORD Flags,_In_ DHCP_OPTION_ID OptionID,_In_ WCHAR *ClassName,_In_ WCHAR *VendorName,_In_ LPDHCP_OPTION OptionInfo)
HRESULT None mfplat.MFGetWorkQueueMMCSSTaskId(_In_ DWORD dwWorkQueueId,_Out_ LPDWORD pdwTaskId)
public None None.ServiceNotStartedException(String message None,Exception innerException None)
public void None.InitializeCell(DataControlFieldCell cell None,DataControlCellType cellType None,DataControlRowState rowState None,int rowIndex None)
LONG TSPIAPI None.TSPI_lineDevSpecificFeature(DRV_REQUESTID dwRequestID None,HDRVLINE hdLine None,DWORD dwFeature None,LPVOID lpParams None,DWORD dwSize None)
LONG WINAPI winscard.SCardAddReaderToGroup(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReaderName,_In_ LPCTSTR szGroupName)
LONG WINAPI winscard.SCardAddReaderToGroupW(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReaderName,_In_ LPCTSTR szGroupName)
LONG WINAPI winscard.SCardAddReaderToGroupA(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReaderName,_In_ LPCTSTR szGroupName)
HRESULT None propsys.VariantGetStringElem(_In_ REFVARIANT var,_In_ ULONG iElem,_Out_ PWSTR *ppszVal)
HRESULT None None.GetSessionCapabilities([out] DWORD *pdwCaps)
void None None._free_locale(_locale_t locale None)
public void None.ControlSetFocus(Control control None)
HRESULT None None.GetWindowInputRectangle([out] IInkRectangle **WindowInputRectangle)
public double None.GetMilliseconds(DateTime time None)
BOOLEAN None None.WdfRequestCancelSentRequest(_In_ WDFREQUEST Request)
PVOID None None.AllocateSharedMemory(_In_ PVOID SharedMem,_In_ ULONG Size)
private void None.currencyTextBox_TextChanged(Object sender None,EventArgs e None)
HRESULT None None.get_CurrentItemStatus([out None None,retval] BSTR *retVal)
public ConfigurationSection None.GetSection(String sectionName None)
public int None.LastIndexOfAny(char[] anyOf None,int startIndex None)
PDEVICE_OBJECT None None.WdfIoTargetWdmGetTargetDeviceObject(_In_ WDFIOTARGET IoTarget)
BOOL None wininet.InternetQueryDataAvailable(_In_ HINTERNET hFile,_Out_ LPDWORD lpdwNumberOfBytesAvailable,_In_ DWORD dwFlags,_In_ DWORD_PTR dwContext)
NTSTATUS None None.SpCompleteAuthToken(_In_ LSA_SEC_HANDLE ContextHandle,_In_ PSecBufferDesc InputBuffer)
NTSTATUS WINAPI bcrypt.BCryptHashData(_Inout_ BCRYPT_HASH_HANDLE hHash,_In_ PUCHAR pbInput,_In_ ULONG cbInput,_In_ ULONG dwFlags)
HRESULT None faxcom.put_SenderFax([in] BSTR newVal)
DWORD None dhcpsapi.DhcpRemoveOptionV5(_In_ LPWSTR ServerIpAddress,_In_ DWORD Flags,_In_ DHCP_OPTION_ID OptionID,_In_ LPWSTR ClassName,_In_ LPWSTR VendorName)
private void None.GridNavigate(Object sender None,NavigateEventArgs e None)
public int None.GetNodeCount(boolean includeSubTrees None)
void None None.ProcessTriTessFactorsAvg(in float3 RawEdgeFactors,in float InsideScale,out float3 RoundedEdgeTessFactors,out float RoundedInsideTessFactor,out float UnroundedInsideTessFactor)
HRESULT None fxscomex.put_CoverPageType(FAX_COVERPAGE_TYPE_ENUM CoverPageType None)
HRESULT None None.GetRootElement([out None None,retval] IUIAutomationElement **root)
LONG WINAPI winscard.SCardListReaders(_In_ SCARDCONTEXT hContext,_In_opt_ LPCTSTR mszGroups,_Out_ LPTSTR mszReaders,_Inout_ LPDWORD pcchReaders)
LONG WINAPI winscard.SCardListReadersW(_In_ SCARDCONTEXT hContext,_In_opt_ LPCTSTR mszGroups,_Out_ LPTSTR mszReaders,_Inout_ LPDWORD pcchReaders)
LONG WINAPI winscard.SCardListReadersA(_In_ SCARDCONTEXT hContext,_In_opt_ LPCTSTR mszGroups,_Out_ LPTSTR mszReaders,_Inout_ LPDWORD pcchReaders)
HRESULT None propsys.InitPropVariantFromGUIDAsString(_In_ REFGUID guid,_Out_ PROPVARIANT *ppropvar)
uint32 None dnsserverpsprovider.RemoveByUnknown([in] string ZoneName,[in] boolean PassThru,[in] string ComputerName,[in] boolean Force,[in] string ZoneScope,[in] uint16 Type,[in] string Name,[in] string RecordData[],[out] DnsServerResourceRecord cmdletOutput[])
double None None.strtod(const char *nptr,char **endptr None)
public void None.ConvertStringBoolean(String stringVal None)
HRESULT None propsys.VariantToDoubleArrayAlloc(_In_ REFVARIANT var,_Out_ DOUBLE **pprgn,_Out_ ULONG *pcElem)
function None None.InitializeRequest(sender None None,args None None)
HRESULT None None.ULongPtrToIntPtr(_In_ ULONG_PTR ulOperand,_Out_ INT_PTR *piResult)
public void None.BeginFile(String url None,String contentType None,String charset None)
private void None.button2_Click(Object sender None,System.EventArgs e None)
protected void None.OnStylusOutOfRange(StylusEventArgs e None)
UINT None shlwapi.PathGetCharType(_In_ TUCHAR ch)
UINT None shlwapi.PathGetCharTypeW(_In_ TUCHAR ch)
UINT None shlwapi.PathGetCharTypeA(_In_ TUCHAR ch)
HRESULT None oleaut32.VarBstrFromI4(_In_ LONG lIn,_In_ LCID lcid,_In_ ULONG dwFlags,_Out_ BSTR *pbstrOut)
BOOL None shlwapi.PathIsHTMLFile(_In_ LPCTSTR pszFile)
BOOL None shlwapi.PathIsHTMLFileW(_In_ LPCTSTR pszFile)
BOOL None shlwapi.PathIsHTMLFileA(_In_ LPCTSTR pszFile)
protected void None.OnWebPartsDisconnected(WebPartConnectionsEventArgs e None)
HRESULT None wuapi.get_EulaAccepted([out] VARIANT_BOOL *retval)
public DateTime None.AddWeeks(DateTime time None,int weeks None)
protected void None.OnMouseDown(MouseButtonEventArgs e None)
HRESULT WINAPI webservices.WsRemoveHeader(_In_ WS_MESSAGE *message,_In_ WS_HEADER_TYPE headerType,_In_opt_ WS_ERROR* *error)
private void None.InsertShipper(Object source None,System.EventArgs e None)
HRESULT None None.InitVariantFromUInt64(_In_ ULONGLONG ullVal,_Out_ VARIANT *pvar)
public void None.RemoveAt(int index None)
STDAPI None mfplat.MFCreateContentDecryptorContext(_In_ REFGUID guidMediaProtectionSystemId,_In_opt_ IMFDXGIDeviceManager *pD3DManager,_In_ IMFContentProtectionDevice *pContentProtectionDevice,_Out_ IMFContentDecryptorContext **ppContentDecryptorContext)
UINT32 None None.MFGetAttributeUINT32(_In_ IMFAttributes *pAttributes,_In_ REFGUID guidKey,_In_ UINT32 unDefault)
HRESULT None None.InitVariantFromInt16(_In_ SHORT iVal,_Out_ VARIANT *pvar)
protected void None.GetAsFrozenCore(Freezable source None)
HRESULT None None.AttributeGetString(IMFAttributes *pAttributes None)
void None None.Page_Load(Object sender None,System.EventArgs e None)
XMVECTOR None None.XMVectorInsert(FXMVECTOR VD None,FXMVECTOR VS None)
protected boolean None.OnServerValidate(String value None)
HRESULT None fxscomex.CopyTiff(BSTR bstrTiffPath None)
public int None.GetUpperBound(int dimension None)
public PropertyItem None.GetPropertyItem(int propid None)
protected InheritanceAttribute None.InvokeGetInheritanceAttribute(ComponentDesigner toInvoke None)
int None None.wctomb(char *mbchar None,wchar_t wchar None)
SECURITY_STATUS SEC_ENTRY secur32.SaslEnumerateProfiles(_Out_ LPTSTR *ProfileList,_Out_ ULONG *ProfileCount)
SECURITY_STATUS SEC_ENTRY secur32.SaslEnumerateProfilesW(_Out_ LPTSTR *ProfileList,_Out_ ULONG *ProfileCount)
SECURITY_STATUS SEC_ENTRY secur32.SaslEnumerateProfilesA(_Out_ LPTSTR *ProfileList,_Out_ ULONG *ProfileCount)
DWORD None dhcpsapi.DhcpEnumServers(_In_ DWORD Flags,_In_ LPVOID IdInfo,_Out_ LPDHCP_SERVER_INFO_ARRAY *Servers,_In_ LPVOID CallbackFn,_In_ LPVOID CallbackData)
BOOL WINAPI cryptnet.CryptGetTimeValidObject(_In_ LPCSTR pszTimeValidOid,_In_ LPVOID pvPara,_In_ PCCERT_CONTEXT pIssuer,_In_opt_ LPFILETIME pftValidFor,_In_ DWORD dwFlags,_In_ DWORD dwTimeout,_Out_opt_ LPVOID *ppvObject,_In_opt_ PCRYPT_CREDENTIALS pCredentials,_Inout_opt_ PCRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO pExtraInfo)
private void None.listDragSource_GiveFeedback(Object sender None,System.Windows.Forms.GiveFeedbackEventArgs e None)
BOOL None user32.SetWindowContextHelpId(HWND hwnd None,DWORD dwContextHelpId None)
HRESULT None None.SSIZETToUIntPtr(_In_ SSIZE_T cbOperand,_Out_ UINT_PTR *puiResult)
MI_INLINE MI_Result None.MI_DestinationOptions_SetCertCACheck(_Inout_ MI_DestinationOptions *options,MI_Boolean check None)
HRESULT None mstscax.get_RemoteMonitorCount([out None None,retval] ULONG *pcRemoteMonitors)
DWORD DHCP_API_FUNCTION dhcpsapi.DhcpEnumSubnetClientsV6(_In_ LPWSTR ServerIpAddress,_In_ DHCP_IPV6_ADDRESS SubnetAddress,_Inout_ DHCP_RESUME_IPV6_HANDLE *ResumeHandle,_In_ DWORD PreferredMaximum,_Out_ LPDHCP_CLIENT_INFO_ARRAY_V6 *ClientInfo,_Out_ DWORD *ClientsRead,_Out_ DWORD *ClientsTotal)
private void None.ShowLineJoin(PaintEventArgs e None)
uint32 None dnsserverpsprovider.AddByA([in] boolean CreatePtr,[in] string IPv4Address,[in] string ZoneName,[in] string Name,[in] datetime TimeToLive,[in] boolean AgeRecord,[in] boolean AllowUpdateAny,[in] boolean A,[in] string ComputerName,[in] boolean PassThru,[in] string ZoneScope,[out] DnsServerResourceRecord cmdletOutput)
LONG WINAPI tapi32.phoneSetDisplay(HPHONE hPhone None,DWORD dwRow None,DWORD dwColumn None,LPCSTR lpsDisplay None,DWORD dwSize None)
HRESULT None None.UnlockAsyncMFT(IMFTransform *pMFT None)
HLOCAL WINAPI kernel32.LocalReAlloc(_In_ HLOCAL hMem,_In_ SIZE_T uBytes,_In_ UINT uFlags)
HRESULT None mf.MFCreateProxyLocator(_In_ LPCWSTR pszProtocol,_In_ IPropertyStore *pProxyConfig,_Out_ IMFNetProxyLocator **ppProxyLocator)
DWORD WINAPI None.PeerDistServerOpenContentInformationEx(_In_ PEERDIST_INSTANCE_HANDLE hPeerDist,_In_ DWORD cbContentIdentifier,_In_ PBYTE pContentIdentifier,ULONGLONG ullContentOffset None,ULONGLONG cbContentLength None,_In_ PEERDIST_RETRIEVAL_OPTIONS *pRetrievalOptions,_In_opt_ HANDLE hCompletionPort,_In_opt_ ULONG_PTR ulCompletionKey,_Out_ PPEERDIST_CONTENTINFO_HANDLE phContentInfo)
NTSTATUS None None.DeleteLogonSession(_In_ PLUID LogonId)
public XmlNode None.InsertBefore(XmlNode newChild None,XmlNode refChild None)
DWORD None mprapi.MprConfigInterfaceTransportGetInfo(_In_ HANDLE hMprConfig,_In_ HANDLE hRouterInterface,_In_ HANDLE hRouterIfTransport,_Inout_opt_ LPBYTE *ppInterfaceInfo,_Out_opt_ LPDWORD lpdwInterfaceInfoSize)
NTSTATUS NTAPI None.ExpandAuthDataForDomain(_In_ PUCHAR UserAuthData,_In_ ULONG UserAuthDataSize,_In_ PVOID Reserved,_Out_ PUCHAR *ExpandedAuthData,_Out_ PULONG ExpandedAuthDataSize)
NTSTATUS NTAPI None.OpenTokenByLogonId(_In_ PLUID LogonId,_Out_ HANDLE *RetTokenHandle)
HANDLE None wintrust.CryptCATOpen(_In_ LPWSTR pwszFileName,_In_ DWORD fdwOpenFlags,_In_ HCRYPTPROV hProv,_In_ DWORD dwPublicVersion,_In_ DWORD dwEncodingType)
HRESULT None faxcom.put_SenderOffice([in] BSTR newVal)
private void None.showCheckedNodesButton_Click(Object sender None,EventArgs e None)
public int None.LastIndexOf(String value None,int startIndex None,int count None,StringComparison comparisonType None)
HRESULT None None.ShortToInt8(_In_ SHORT sOperand,_Out_ INT8 *pi8Result)
HRESULT None mstscax.get_RemoteMonitorLayoutMatchesLocal([out None None,retval] VARIANT_BOOL *pfRemoteMatchesLocal)
VOID WINAPI ntdsapi.DsFreeDomainControllerInfo(_In_ DWORD InfoLevel,_In_ DWORD cInfo,_In_ VOID *pInfo)
VOID WINAPI ntdsapi.DsFreeDomainControllerInfoW(_In_ DWORD InfoLevel,_In_ DWORD cInfo,_In_ VOID *pInfo)
VOID WINAPI ntdsapi.DsFreeDomainControllerInfoA(_In_ DWORD InfoLevel,_In_ DWORD cInfo,_In_ VOID *pInfo)
protected void None.OnKeyUp(KeyEventArgs e None)
protected void None.OnPreviewKeyDown(KeyEventArgs e None)
protected void None.LoadViewState(Object savedState None)
protected void None.OnGotFocus(RoutedEventArgs e None)
public Stream None.GetManifestResourceStream(Type type None,String name None)
BOOLAPI None wininet.SetUrlCacheEntryInfo(_In_ LPCTSTR lpszUrlName,_In_ LPINTERNET_CACHE_ENTRY_INFO lpCacheEntryInfo,_In_ DWORD dwFieldControl)
BOOLAPI None wininet.SetUrlCacheEntryInfoW(_In_ LPCTSTR lpszUrlName,_In_ LPINTERNET_CACHE_ENTRY_INFO lpCacheEntryInfo,_In_ DWORD dwFieldControl)
BOOLAPI None wininet.SetUrlCacheEntryInfoA(_In_ LPCTSTR lpszUrlName,_In_ LPINTERNET_CACHE_ENTRY_INFO lpCacheEntryInfo,_In_ DWORD dwFieldControl)
BOOL WINAPI advapi32.CryptDuplicateKey(_In_ HCRYPTKEY hKey,_In_ DWORD *pdwReserved,_In_ DWORD dwFlags,_Out_ HCRYPTKEY *phKey)
HRESULT None msctf.GetDocumentMgr([out] ITfDocumentMgr **ppdim)
HRESULT None None.UIntPtrToInt64(_In_ UINT_PTR uOperand,_Out_ INT64 *pi64Result)
protected void None.OnAfterSelect(TreeViewEventArgs e None)
HRESULT WINAPI cryptxml.CryptXmlGetTransforms(_Out_ PCRYPT_XML_TRANSFORM_CHAIN_CONFIG **pConfig)
public void None.SetSelected(int index None,boolean value None)
UInt32 None None.SetDedupMode([in] UInt32 SetDedupMode,[out] String ExtendedStatus)
void None None._free_locale(_locale_t locale None)
SECURITY_STATUS SEC_Entry secur32.AcceptSecurityContext(_In_opt_ PCredHandle phCredential,_Inout_opt_ PCtxtHandle phContext,_In_opt_ PSecBufferDesc pInput,_In_ ULONG fContextReq,_In_ ULONG TargetDataRep,_Inout_opt_ PCtxtHandle phNewContext,_Inout_opt_ PSecBufferDesc pOutput,_Out_ PULONG pfContextAttr,_Out_opt_ PTimeStamp ptsTimeStamp)
private void None.showCheckedNodesButton_Click(Object sender None,EventArgs e None)
public void None.Restore(GraphicsState gstate None)
protected void None.OnContextMenuStripChanged(EventArgs e None)
BOOL None wininet.GetUrlCacheEntryInfo(_In_ LPCTSTR lpszUrlName,_Out_ LPINTERNET_CACHE_ENTRY_INFO lpCacheEntryInfo,_Inout_ LPDWORD lpcbCacheEntryInfo)
BOOL None wininet.GetUrlCacheEntryInfoW(_In_ LPCTSTR lpszUrlName,_Out_ LPINTERNET_CACHE_ENTRY_INFO lpCacheEntryInfo,_Inout_ LPDWORD lpcbCacheEntryInfo)
BOOL None wininet.GetUrlCacheEntryInfoA(_In_ LPCTSTR lpszUrlName,_Out_ LPINTERNET_CACHE_ENTRY_INFO lpCacheEntryInfo,_Inout_ LPDWORD lpcbCacheEntryInfo)
public int None.EndRead(IAsyncResult asyncResult None)
protected void None.OnPreRender(EventArgs e None)
HRESULT None None.SetPlaybackOptimizations(IMFTopology *pTopology None,HWND hwnd None)
public IAsyncResult None.BeginRead(byte[] array None,int offset None,int numBytes None,AsyncCallback userCallback None,Object stateObject None)
public void None.MergeStyle(Style s None)
HRESULT None None.get_AvailableSystemCapacity([out] VARIANT *availableCapacity)
public Type None.MakeGenericType(Type[] typeArguments None)
HRESULT None None.EnumFunctionProviders([out] IEnumTfFunctionProviders **ppEnum)
public void None.ControlSetFocus(Control control None)
protected void None.OnMarginChanged(EventArgs e None)
protected void None.BaseAdd(ConfigurationElement element None)
HRESULT None mfplat.MFCreate2DMediaBuffer(_In_ DWORD dwWidth,_In_ DWORD dwHeight,_In_ DWORD dwFourCC,_In_ BOOL fBottomUp,_Out_ IMFMediaBuffer **ppBuffer)
HRESULT None None.CreateSurface(UINT Width None,UINT Height None,UINT BackBuffers None,D3DFORMAT Format None,D3DPOOL Pool None,DWORD Usage None,IDirect3DSurface9 **ppSurface None,HANDLE *pSharedHandle None)
private void None.menuItemInk_Click(object sender None,System.EventArgs e None)
BOOL None wintrust.CryptCATCatalogInfoFromContext(_In_ HCATINFO hCatInfo,_Inout_ CATALOG_INFO *psCatInfo,_In_ DWORD dwFlags)
protected boolean None.OnDeserializeUnrecognizedElement(String elementName None,XmlReader reader None)
HRESULT None msctf.GetSelection([out] UINT *puIndex)
private void None.DrawMyPanel(Object sender None,System.Windows.Forms.StatusBarDrawItemEventArgs sbdEvent None)
BOOL None shlwapi.PathMatchSpec(_In_ LPCSTR pszFile,_In_ LPCSTR pszSpec)
BOOL None shlwapi.PathMatchSpecW(_In_ LPCSTR pszFile,_In_ LPCSTR pszSpec)
BOOL None shlwapi.PathMatchSpecA(_In_ LPCSTR pszFile,_In_ LPCSTR pszSpec)
BOOL None wintrust.WintrustRemoveActionID(_In_ GUID *pgActionID)
void None None.Page_Load(Object sender None,System.EventArgs e None)
DWORD WINAPI dhcpsapi.DhcpServerQueryDnsRegCredentials(_In_ DHCP_SRV_HANDLE ServerIpAddress,_In_ ULONG UnameSize,_Out_ LPWSTR Uname,_In_ ULONG DomainSize,_Out_ LPWSTR Domain)
HRESULT None tapi3.get_MessageWaiting([out] VARIANT_BOOL *pfMessageWaiting)
HRESULT None propsys.VariantToDouble(_In_ REFVARIANT varIn,_Out_ DOUBLE *pdblRet)
HRESULT None faxcom.put_RecipientCity([in] BSTR newVal)
private void None.showCheckedNodesButton_Click(Object sender None,EventArgs e None)
protected void None.OnNextButtonClick(WizardNavigationEventArgs e None)
SECURITY_STATUS SEC_Entry secur32.AcceptSecurityContext(_In_opt_ PCredHandle phCredential,_Inout_opt_ PCtxtHandle phContext,_In_opt_ PSecBufferDesc pInput,_In_ ULONG fContextReq,_In_ ULONG TargetDataRep,_Inout_opt_ PCtxtHandle phNewContext,_Inout_opt_ PSecBufferDesc pOutput,_Out_ PULONG pfContextAttr,_Out_opt_ PTimeStamp ptsTimeStamp)
HRESULT None None.SetBuffer(INSSBuffer* pBuffer None)
protected void None.OnTextInput(TextCompositionEventArgs e None)
protected Object None.OnRequiredPropertyNotFound(String name None)
BOOL None wininet.GopherGetAttribute(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszLocator,_In_ LPCTSTR lpszAttributeName,_Out_ LPBYTE lpBuffer,_In_ DWORD dwBufferLength,_Out_ LPDWORD lpdwCharactersReturned,_In_ GOPHER_ATTRIBUTE_ENUMERATOR lpfnEnumerator,_In_ DWORD_PTR dwContext)
BOOL None wininet.GopherGetAttributeW(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszLocator,_In_ LPCTSTR lpszAttributeName,_Out_ LPBYTE lpBuffer,_In_ DWORD dwBufferLength,_Out_ LPDWORD lpdwCharactersReturned,_In_ GOPHER_ATTRIBUTE_ENUMERATOR lpfnEnumerator,_In_ DWORD_PTR dwContext)
BOOL None wininet.GopherGetAttributeA(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszLocator,_In_ LPCTSTR lpszAttributeName,_Out_ LPBYTE lpBuffer,_In_ DWORD dwBufferLength,_Out_ LPDWORD lpdwCharactersReturned,_In_ GOPHER_ATTRIBUTE_ENUMERATOR lpfnEnumerator,_In_ DWORD_PTR dwContext)
uint32 None cimwin32.SetDynamicDNSRegistration([in] boolean FullDNSRegistrationEnabled,[in None None,optional] boolean DomainDNSRegistrationEnabled)
HRESULT None None.get_CachedControllerFor([out None None,retval] IUIAutomationElementArray **retVal)
public void None.Remove(DateTime date None)
public None None.MissingMethodException(String message None,Exception inner None)
HRESULT None wuapi.get_Identity([out] IUpdateIdentity **retval)
HRESULT None wuapi.get_ServiceUrl([out] BSTR *retval)
BOOL None shlwapi.PathIsContentType(_In_ LPCTSTR pszPath,_In_ LPCTSTR pszContentType)
BOOL None shlwapi.PathIsContentTypeW(_In_ LPCTSTR pszPath,_In_ LPCTSTR pszContentType)
BOOL None shlwapi.PathIsContentTypeA(_In_ LPCTSTR pszPath,_In_ LPCTSTR pszContentType)
HRESULT None None.CreateCacheRequest([out None None,retval] IUIAutomationCacheRequest **cacheRequest)
public String None.GetLeftPart(UriPartial part None)
DWORD None ntdsapi.DsQuerySitesByCost(_In_ HANDLE hDS,_In_ LPTSTR pwszFromSite,_In_ LPTSTR *rgwszToSites,_In_ DWORD cToSites,_In_ DWORD dwFlags,_Out_ PDS_SITE_COST_INFO *prgSiteInfo)
DWORD None ntdsapi.DsQuerySitesByCostW(_In_ HANDLE hDS,_In_ LPTSTR pwszFromSite,_In_ LPTSTR *rgwszToSites,_In_ DWORD cToSites,_In_ DWORD dwFlags,_Out_ PDS_SITE_COST_INFO *prgSiteInfo)
DWORD None ntdsapi.DsQuerySitesByCostA(_In_ HANDLE hDS,_In_ LPTSTR pwszFromSite,_In_ LPTSTR *rgwszToSites,_In_ DWORD cToSites,_In_ DWORD dwFlags,_Out_ PDS_SITE_COST_INFO *prgSiteInfo)
private void None.Page_Load(Object sender None,System.EventArgs e None)
private void None.CopyWithProgress(String fileNames[] None)
SerializableAttribute None None.ClassInterfaceAttribute(ClassInterfaceType.None None None)
private void None.showCheckedNodesButton_Click(Object sender None,EventArgs e None)
HRESULT None None.ULongPtrToLong(_In_ ULONG_PTR ulOperand,_Out_ LONG *plResult)
protected void None.OnClick(EventArgs e None)
public int None.GetByteCount(char[] chars None)
HRESULT None None.PathCchAppend(_Inout_ PWSTR pszPath,_In_ size_t cchPath,_In_opt_ PCWSTR pszMore)
HRESULT WINAPI None.CreateIFECommonInstance(_Out_ VOID **ppvObj)
HRESULT None shell32.SHCLSIDFromString(_In_ PCWSTR psz,_Out_ CLSID *pcClsid)
HRESULT None None.get_FillPatternStyle([out None None,retval] BSTR *retVal)
BOOL WINAPI advapi32.CreateProcessWithLogonW(_In_ LPCWSTR lpUsername,_In_opt_ LPCWSTR lpDomain,_In_ LPCWSTR lpPassword,_In_ DWORD dwLogonFlags,_In_opt_ LPCWSTR lpApplicationName,_Inout_opt_ LPWSTR lpCommandLine,_In_ DWORD dwCreationFlags,_In_opt_ LPVOID lpEnvironment,_In_opt_ LPCWSTR lpCurrentDirectory,_In_ LPSTARTUPINFOW lpStartupInfo,_Out_ LPPROCESS_INFORMATION lpProcessInfo)
BOOL None wininet.InternetWriteFile(_In_ HINTERNET hFile,_In_ LPCVOID lpBuffer,_In_ DWORD dwNumberOfBytesToWrite,_Out_ LPDWORD lpdwNumberOfBytesWritten)
HRESULT None None.CreateD3DDeviceManager(IDirect3DDevice9 *pDevice None,UINT *pReset None,IDirect3DDeviceManager9 **ppManager None)
String None None.Format(String format None,Object arg None,IFormatProvider formatProvider None)
HRESULT None None.CreateDXVADevice(GUID *pGuid None,DXVAUncompDataInfo *pUncompData None,LPVOID pData None,DWORD DataSize None,IDirect3DDXVADevice9 **ppDXVADevice None)
private void None.menuItemInk_Click(object sender None,System.EventArgs e None)
protected void None.AddText(String text None)
public Type None.MakeArrayType(int rank None)
private void None.menuItemEdit_Popup(Object sender None,EventArgs e None)
HRESULT None tapi3.get_AutoStopRingOnOffHook([out] VARIANT_BOOL *pfEnabled)
public void None.WriteLine(String format None,Object arg0 None,Object arg1 None,Object arg2 None)
HRESULT None combase.WindowsPromoteStringBuffer(_In_ HSTRING_BUFFER bufferHandle,_Out_ HSTRING *string)
public XmlAttribute None.CreateAttribute(String prefix None,String localName None,String namespaceURI None)
HRESULT None None.get_Midline([out None None,retval] VARIANT *Midline)
public void None.WriteLine(String value None)
DWORD WINAPI wcmapi.WcmSetProfileList(_In_ WCM_PROFILE_INFO_LIST *pProfileList,_In_ DWORD dwPosition,_In_ BOOL fIgnoreUnknownProfiles,_Reserved_ PVOID pReserved)
ATOM WINAPI kernel32.GlobalFindAtom(_In_ LPCTSTR lpString)
ATOM WINAPI kernel32.GlobalFindAtomW(_In_ LPCTSTR lpString)
ATOM WINAPI kernel32.GlobalFindAtomA(_In_ LPCTSTR lpString)
public void None.Initialize(String name None,NameValueCollection config None)
protected void None.OnWebPartsDisconnecting(WebPartConnectionsCancelEventArgs e None)
public Type None.MakeGenericType(Type[] typeArguments None)
BOOL WINAPI crypt32.CryptRegisterOIDFunction(_In_ DWORD dwEncodingType,_In_ LPCSTR pszFuncName,_In_ LPCSTR pszOID,_In_ LPCWSTR pwszDll,_In_ LPCSTR pszOverrideFuncName)
public int None.IndexOf(Installer value None)
protected void None.OnRowEditing(GridViewEditEventArgs e None)
ULONG None httpapi.HttpFlushResponseCache(_In_ HANDLE ReqQueueHandle,_In_ PCWSTR pUrlPrefix,_In_ ULONG Flags,_In_ LPOVERLAPPED pOverlapped)
HRESULT None msftedit.TxGetViewInset(LPRECT prc None)
BOOL None shlwapi.PathCompactPath(_In_ HDC hDC,_Inout_ LPTSTR lpszPath,_In_ UINT dx)
BOOL None shlwapi.PathCompactPathW(_In_ HDC hDC,_Inout_ LPTSTR lpszPath,_In_ UINT dx)
BOOL None shlwapi.PathCompactPathA(_In_ HDC hDC,_Inout_ LPTSTR lpszPath,_In_ UINT dx)
public int None.LastIndexOf(String source None,char value None)
HRESULT None shell32.TranslateAcceleratorSB(LPMSG lpmsg None,WORD wID None)
DWORD None mprapi.MprConfigServerSetInfo(_In_ MPR_SERVER_HANDLE hMprServer,_In_ DWORD dwLevel,_In_ LPBYTE lpbBuffer)
void None None.Page_Load(Object sender None,System.EventArgs e None)
protected InheritanceAttribute None.InvokeGetInheritanceAttribute(ComponentDesigner toInvoke None)
DWORD None ntdsapi.DsMakePasswordCredentials(_In_ LPCTSTR User,_In_ LPCTSTR Domain,_In_ LPCTSTR Password,_Out_ RPC_AUTH_IDENTITY_HANDLE *pAuthIdentity)
DWORD None ntdsapi.DsMakePasswordCredentialsW(_In_ LPCTSTR User,_In_ LPCTSTR Domain,_In_ LPCTSTR Password,_Out_ RPC_AUTH_IDENTITY_HANDLE *pAuthIdentity)
DWORD None ntdsapi.DsMakePasswordCredentialsA(_In_ LPCTSTR User,_In_ LPCTSTR Domain,_In_ LPCTSTR Password,_Out_ RPC_AUTH_IDENTITY_HANDLE *pAuthIdentity)
public void None.AddCurve(PointF[] points None,int offset None,int numberOfSegments None,float tension None)
HRESULT None mfplat.MFPutWorkItemEx(_In_ DWORD dwQueue,_In_ IMFAsyncResult *pResult)
HRESULT None None.IntPtrToSIZET(_In_ INT_PTR iOperand,_Out_ SIZE_T *pcbResult)
DWORD None virtdisk.OpenVirtualDisk(_In_ PVIRTUAL_STORAGE_TYPE VirtualStorageType,_In_ PCWSTR Path,_In_ VIRTUAL_DISK_ACCESS_MASK VirtualDiskAccessMask,_In_ OPEN_VIRTUAL_DISK_FLAG Flags,_In_opt_ POPEN_VIRTUAL_DISK_PARAMETERS Parameters,_Out_ PHANDLE Handle)
HRESULT None None.get_CachedValue([out None None,retval] BSTR *pszValue)
HRESULT None None.UIntToUShort(_In_ UINT uOperand,_Out_ USHORT *pusResult)
private void None.Menu_Copy(Object sender None,System.EventArgs e None)
public void None.SetTransformer(WebPartConnection connection None,WebPartTransformer transformer None)
protected AutoGeneratedField None.CreateAutoGeneratedColumn(AutoGeneratedFieldProperties fieldProperties None)
HRESULT None propsys.PropVariantToInt32VectorAlloc(_In_ REFPROPVARIANT propvar,_Out_ LONG **pprgn,_Out_ ULONG *pcElem)
WDFOBJECT None None.WdfCollectionGetItem(_In_ WDFCOLLECTION Collection,_In_ ULONG Index)
HRESULT None None.UIntToIntPtr(_In_ UINT uOperand,_Out_ INT_PTR *piResult)
LPTSTR None shlwapi.PathCombine(_Out_ LPTSTR pszPathOut,_In_opt_ LPCTSTR pszPathIn,_In_ LPCTSTR pszMore)
LPTSTR None shlwapi.PathCombineW(_Out_ LPTSTR pszPathOut,_In_opt_ LPCTSTR pszPathIn,_In_ LPCTSTR pszMore)
LPTSTR None shlwapi.PathCombineA(_Out_ LPTSTR pszPathOut,_In_opt_ LPCTSTR pszPathIn,_In_ LPCTSTR pszMore)
GROUPID None wininet.CreateUrlCacheGroup(_In_ DWORD dwFlags,_Reserved_ LPVOID lpReserved)
public Object None.GetEditor(Type editorBaseType None)
protected void None.OnStylusInAirMove(StylusEventArgs e None)
protected void None.OnGotFocus(RoutedEventArgs e None)
DWORD WINAPI peerdist.PeerDistClientGetInformationByHandle(_In_ PEERDIST_INSTANCE_HANDLE hPeerDist,_In_ PEERDIST_CONTENT_HANDLE hContentHandle,_In_ PEERDIST_CLIENT_INFO_BY_HANDLE_CLASS PeerDistClientInfoClass,DWORD dwBufferSize None,_Out_ LPVOID lpInformation)
DWORD WINAPI None.PeerDistGetStatusEx(_In_ PEERDIST_INSTANCE_HANDLE hPeerDist,_Inout_ PEERDIST_STATUS_INFO *pPeerDistStatusInfo)
void None None.AllMemoryBarrierWithGroupSync(void None None)
HRESULT None None.GetCurrentSelection([out] IShellItem **ppsi)
public void None.AddAt(int index None,Control child None)
HRESULT None oleaut32.VarDecFromI8(_In_ LONG64 i64In,_Out_ DECIMAL *pdecOut)
HRESULT None None.TurnOff([out] IVMTask **turnOffTask)
HRESULT None oleaut32.VarBstrFromI1(_In_ CHAR cIn,_In_ LCID lcid,_In_ ULONG dwFlags,_Out_ BSTR *pbstrOut)
public None None.MissingMethodException(String message None,Exception inner None)
protected String None.MapPathSecure(String virtualPath None)
BOOLAPI None wininet.GetUrlCacheEntryInfoEx(_In_ LPCTSTR lpszUrl,_Inout_opt_ LPINTERNET_CACHE_ENTRY_INFO lpCacheEntryInfo,_Inout_opt_ LPDWORD lpcbCacheEntryInfo,_Reserved_ LPTSTR lpszRedirectUrl,_Reserved_ LPDWORD lpcbRedirectUrl,_Reserved_ LPVOID lpReserved,_In_ DWORD dwFlags)
BOOLAPI None wininet.GetUrlCacheEntryInfoExW(_In_ LPCTSTR lpszUrl,_Inout_opt_ LPINTERNET_CACHE_ENTRY_INFO lpCacheEntryInfo,_Inout_opt_ LPDWORD lpcbCacheEntryInfo,_Reserved_ LPTSTR lpszRedirectUrl,_Reserved_ LPDWORD lpcbRedirectUrl,_Reserved_ LPVOID lpReserved,_In_ DWORD dwFlags)
BOOLAPI None wininet.GetUrlCacheEntryInfoExA(_In_ LPCTSTR lpszUrl,_Inout_opt_ LPINTERNET_CACHE_ENTRY_INFO lpCacheEntryInfo,_Inout_opt_ LPDWORD lpcbCacheEntryInfo,_Reserved_ LPTSTR lpszRedirectUrl,_Reserved_ LPDWORD lpcbRedirectUrl,_Reserved_ LPVOID lpReserved,_In_ DWORD dwFlags)
HRESULT None None.get_CurrentDockPosition([out None None,retval] DockPosition *retVal)
public int None.LastIndexOf(String value None)
DWORD None wininet.InternetErrorDlg(_In_ HWND hWnd,_Inout_ HINTERNET hRequest,_In_ DWORD dwError,_In_ DWORD dwFlags,_Inout_ LPVOID *lppvData)
protected void None.OnPaint(PaintEventArgs e None)
public ParameterBuilder None.DefineParameter(int position None,ParameterAttributes attributes None,String strParamName None)
uint32 None dnsserverpsprovider.AddByInputObject([in] DnsServerResourceRecord InputObject,[in] string ZoneName,[in] string ComputerName,[in] boolean AllowUpdateAny,[in] boolean PassThru,[in] boolean Force,[in] string ZoneScope,[out] DnsServerResourceRecord cmdletOutput)
double None None._nextafter(double x None,double y None)
HRESULT None None.InsertPacket(DWORD dwPacketNum None,IWMSPacket* pPacket None,DWORD dwExFlags None)
HRESULT None None.GetQueueJournalQuotaProp(LPCWSTR wszQueueFormatName None,ULONG *pulValue None)
ATOM WINAPI kernel32.GlobalAddAtom(_In_ LPCTSTR lpString)
ATOM WINAPI kernel32.GlobalAddAtomW(_In_ LPCTSTR lpString)
ATOM WINAPI kernel32.GlobalAddAtomA(_In_ LPCTSTR lpString)
public String None.Remove(int startIndex None)
DWORD WINAPI wininet.PrivacySetZonePreferenceW(_In_ DWORD dwZone,_In_ DWORD dwType,_In_ DWORD dwTemplate,_In_opt_ LPCWSTR pszPreference)
DWORD WINAPI wininet.PrivacySetZonePreferenceW(_In_ DWORD dwZone,_In_ DWORD dwType,_In_ DWORD dwTemplate,_In_opt_ LPCWSTR pszPreference)
protected void None.BaseAdd(ConfigurationElement element None)
public void None.SetConnectErrorMessage(WebPart webPart None,String connectErrorMessage None)
public void None.SetActiveView(View view None)
LONG WINAPI winscard.SCardGetProviderId(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCard,_Out_ LPGUID pguidProviderId)
LONG WINAPI winscard.SCardGetProviderIdW(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCard,_Out_ LPGUID pguidProviderId)
LONG WINAPI winscard.SCardGetProviderIdA(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCard,_Out_ LPGUID pguidProviderId)
VOID None advapi32.CredFree(_In_ PVOID Buffer)
UINT CALLBACK input.EnumLayoutOrTipForSetup(_In_ LANGID langid,_Out_ LAYOUTORTIP *pLayoutOrTip,_In_ UINT uBufLength,_In_ DWORD dwFlags)
HRESULT None None.AllocatePageSizeBuffer(DWORD dwMaxBufferSize None,INSSBuffer** ppBuffer None)
protected void None.OnQueryCursor(QueryCursorEventArgs e None)
BOOL None advapi32.CredUnmarshalCredential(_In_ LPCTSTR MarshaledCredential,_Out_ PCRED_MARSHAL_TYPE CredType,_Out_ PVOID *Credential)
BOOL None advapi32.CredUnmarshalCredentialW(_In_ LPCTSTR MarshaledCredential,_Out_ PCRED_MARSHAL_TYPE CredType,_Out_ PVOID *Credential)
BOOL None advapi32.CredUnmarshalCredentialA(_In_ LPCTSTR MarshaledCredential,_Out_ PCRED_MARSHAL_TYPE CredType,_Out_ PVOID *Credential)
BOOL None shlwapi.PathMakeSystemFolder(_In_ LPTSTR pszPath)
BOOL None shlwapi.PathMakeSystemFolderW(_In_ LPTSTR pszPath)
BOOL None shlwapi.PathMakeSystemFolderA(_In_ LPTSTR pszPath)
BOOL WINAPI None.DllMain(_In_ HINSTANCE hinstDLL,_In_ DWORD fdwReason,_In_ LPVOID lpvReserved)
NTSTATUS None None.WdfWaitLockCreate(_In_opt_ PWDF_OBJECT_ATTRIBUTES LockAttributes,_Out_ WDFWAITLOCK *Lock)
MI_INLINE MI_Result None.MI_Context_RequestUnload(_In_ MI_Context *context)
protected void None.OnPaint(PaintEventArgs e None)
protected void None.OnWebPartsDisconnecting(WebPartConnectionsCancelEventArgs e None)
HRESULT None tapi3.get_Call([out] ITCallInfo **ppCallInfo)
public void None.FillPolygon(Brush brush None,Point[] points None,FillMode fillMode None)
private void None.On_Click(Object source None,System.EventArgs e None)
PTSTR None shlwapi.PathGetArgs(_In_ PTSTR pszPath)
PTSTR None shlwapi.PathGetArgsW(_In_ PTSTR pszPath)
PTSTR None shlwapi.PathGetArgsA(_In_ PTSTR pszPath)
public int None.IndexOf(Installer value None)
private void None.ShowLineJoin(PaintEventArgs e None)
protected void None.AddChild(Object value None)
public ValidationResult None.MergeAndValidatePrintTicket(PrintTicket basePrintTicket None,PrintTicket deltaPrintTicket None,PrintTicketScope scope None)
DWORD WINAPI clusapi.PauseClusterNodeEx(_In_ HNODE hNode,_In_ BOOL bDrainNode,_In_ DWORD dwPauseFlags,_In_opt_ HNODE hNodeDrainTarget)
protected String None.MapPathSecure(String virtualPath None)
public XmlAttribute None.CreateAttribute(String prefix None,String localName None,String namespaceURI None)
HRESULT None tapi3.get_NumberGathered([out] BSTR *ppNumber)
public void None.ControlSetFocus(Control control None)
BOOL WINAPI crypt32.CertAddStoreToCollection(_In_ HCERTSTORE hCollectionStore,_In_opt_ HCERTSTORE hSiblingStore,_In_ DWORD dwUpdateFlag,_In_ DWORD dwPriority)
HRESULT None None.UIntPtrToUInt(_In_ UINT_PTR uOperand,_Out_ UINT *puResult)
HRESULT None None.LongPtrToULong(_In_ LONG_PTR lOperand,_Out_ ULONG *pulResult)
HRESULT None None.GetAttributes([out] IMFAttributes **pAttributes)
HRESULT None None.GetRealTimeMode([out] BOOL *pfEnabled)
DWORD DHCP_API_FUNCTION dhcpsapi.DhcpV4RemovePolicyRange(_In_opt_ LPWSTR ServerIpAddress,_In_ DHCP_IP_ADDRESS SubnetAddress,_In_ LPWSTR PolicyName,_In_ LPDHCP_IP_RANGE Range)
ULONG None httpapi.HttpSendHttpResponse(_In_ HANDLE ReqQueueHandle,_In_ HTTP_REQUEST_ID RequestId,_In_ ULONG Flags,_In_ PHTTP_RESPONSE pHttpResponse,_In_opt_ PHTTP_CACHE_POLICY pCachePolicy,_Out_ PULONG pBytesSent,_In_ PVOID pReserved2,_In_ ULONG Reserved3,_In_ LPOVERLAPPED pOverlapped,_In_opt_ PHTTP_LOG_DATA pLogData)
HRESULT CALLBACK msctf.TF_CreateCategoryMgr(_Out_ ITfCategoryMgr **ppcat)
SerializableAttribute None None.ClassInterfaceAttribute(ClassInterfaceType.None None None)
public PaintValueEventArgs None.CreatePaintValueEventArgs(System.ComponentModel. ITypeDescriptorContext context,Object value None,Graphics graphics None,Rectangle bounds None)
HRESULT None faxcom.put_BillingCode([in] BSTR newVal)
protected void None.OnInitialized(EventArgs e None)
public void None.RenderEndTag(HtmlTextWriter writer None)
HRESULT WINAPI None.EngineAdapterClearContext(_Inout_ PWINBIO_PIPELINE Pipeline)
BOOL WINAPI advapi32.CreatePrivateObjectSecurityWithMultipleInheritance(_In_opt_ PSECURITY_DESCRIPTOR ParentDescriptor,_In_opt_ PSECURITY_DESCRIPTOR CreatorDescriptor,_Out_ PSECURITY_DESCRIPTOR *NewDescriptor,_In_opt_ GUID **ObjectTypes,_In_ ULONG GuidCount,_In_ BOOL IsContainerObject,_In_ ULONG AutoInheritFlags,_In_opt_ HANDLE Token,_In_ PGENERIC_MAPPING GenericMapping)
function None None.Array([size : int])
BOOL None shlwapi.PathUnExpandEnvStrings(_In_ LPCTSTR pszPath,_Out_ LPTSTR pszBuf,_In_ UINT cchBuf)
BOOL None shlwapi.PathUnExpandEnvStringsW(_In_ LPCTSTR pszPath,_Out_ LPTSTR pszBuf,_In_ UINT cchBuf)
BOOL None shlwapi.PathUnExpandEnvStringsA(_In_ LPCTSTR pszPath,_Out_ LPTSTR pszBuf,_In_ UINT cchBuf)
protected void None.OnIsKeyboardFocusedChanged(DependencyPropertyChangedEventArgs e None)
HRESULT None None.ULongToInt8(_In_ ULONG ulOperand,_Out_ INT8 *pi8Result)
private void None.button1_Click(Object sender None,System.EventArgs e None)
protected void None.RaiseComponentChanged(MemberDescriptor member None,Object oldValue None,Object newValue None)
IOrderedDictionary None None.ExtractValues(Control container None)
public void None.ApplyStyle(DataGridViewCellStyle dataGridViewCellStyle None)
public void None.SetCacheKey(Cache cache None)
public void None.DrawToolStripBorder(ToolStripRenderEventArgs e None)
public XmlNode None.CloneNode(boolean deep None)
HINTERNET None wininet.HttpOpenRequest(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszVerb,_In_ LPCTSTR lpszObjectName,_In_ LPCTSTR lpszVersion,_In_ LPCTSTR lpszReferer,_In_ LPCTSTR *lplpszAcceptTypes,_In_ DWORD dwFlags,_In_ DWORD_PTR dwContext)
HINTERNET None wininet.HttpOpenRequestW(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszVerb,_In_ LPCTSTR lpszObjectName,_In_ LPCTSTR lpszVersion,_In_ LPCTSTR lpszReferer,_In_ LPCTSTR *lplpszAcceptTypes,_In_ DWORD dwFlags,_In_ DWORD_PTR dwContext)
HINTERNET None wininet.HttpOpenRequestA(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszVerb,_In_ LPCTSTR lpszObjectName,_In_ LPCTSTR lpszVersion,_In_ LPCTSTR lpszReferer,_In_ LPCTSTR *lplpszAcceptTypes,_In_ DWORD dwFlags,_In_ DWORD_PTR dwContext)
HRESULT None msctf.GetStatus([out] TS_STATUS *pdcs)
protected void None.OnAfterSelect(TreeViewEventArgs e None)
public None None.WorkflowMarkupSerializationException(String message None,int lineNumber None,int columnNumber None)
HRESULT None oleaut32.VarUI2FromUI1(_In_ BYTE bIn,_Out_ USHORT *puiOut)
DWORD WINAPI peerdist.PeerDistServerPublishCompleteStream(_In_ PEERDIST_INSTANCE_HANDLE hPeerDist,_In_ PEERDIST_STREAM_HANDLE hStream,_In_ LPOVERLAPPED lpOverlapped)
LONG64 WINAPI None.Multiply128(_In_ LONG64 Multiplier,_In_ LONG64 Multiplicand,_Out_ LONG64 *HighProduct)
NTSTATUS None None.LsaApLogonUserEx2(_In_ PLSA_CLIENT_REQUEST ClientRequest,_In_ SECURITY_LOGON_TYPE LogonType,_In_ PVOID ProtocolSubmitBuffer,_In_ PVOID ClientBufferBase,_In_ ULONG SubmitBufferSize,_Out_ PVOID *ProfileBuffer,_Out_ PULONG ProfileBufferSize,_Out_ PLUID LogonId,_Out_ PNTSTATUS SubStatus,_Out_ PLSA_TOKEN_INFORMATION_TYPE TokenInformationType,_Out_ PVOID *TokenInformation,_Out_ PUNICODE_STRING *AccountName,_Out_ PUNICODE_STRING *AuthenticatingAuthority,_Out_ PUNICODE_STRING *MachineName,_Out_ PSECPKG_PRIMARY_CRED PrimaryCredentials,_Out_ PSECPKG_SUPPLEMENTAL_CRED_ARRAY *SupplementalCredentials)
BOOL WINAPI user32.GetCursorInfo(_Inout_ PCURSORINFO pci)
BOOL None wininet.FindNextUrlCacheGroup(_In_ HANDLE hFind,_Out_ GROUPID *lpGroupId,_Reserved_ LPVOID lpReserved)
private void None.listBox1_SelectedValueChanged(Object sender None,EventArgs e None)
private void None.AutoSizeControl(Control control None,int textPadding None)
private void None.GridNavigate(Object sender None,NavigateEventArgs e None)
BOOL None shlwapi.PathRelativePathTo(_Out_ LPTSTR pszPath,_In_ LPCTSTR pszFrom,_In_ DWORD dwAttrFrom,_In_ LPCTSTR pszTo,_In_ DWORD dwAttrTo)
BOOL None shlwapi.PathRelativePathToW(_Out_ LPTSTR pszPath,_In_ LPCTSTR pszFrom,_In_ DWORD dwAttrFrom,_In_ LPCTSTR pszTo,_In_ DWORD dwAttrTo)
BOOL None shlwapi.PathRelativePathToA(_Out_ LPTSTR pszPath,_In_ LPCTSTR pszFrom,_In_ DWORD dwAttrFrom,_In_ LPCTSTR pszTo,_In_ DWORD dwAttrTo)
public boolean None.Contains(Object item None)
HRESULT None None.get_CachedRole([out None None,retval] DWORD *pdwRole)
HRESULT None None.get_CurrentName([out None None,retval] BSTR *retVal)
HRESULT None None.DecryptionBlt(IDirect3DSurface9 *pSrcSurface None,IDirect3DSurface9 *pDstSurface None,UINT SrcSurfaceSize None,D3DENCRYPTED_BLOCK_INFO *pEncryptedBlockInfo None,VOID *pContentKey None,VOID *pIV None)
BOOL WINAPI advapi32.CryptDestroyHash(_In_ HCRYPTHASH hHash)
BOOL None wininet.DetectAutoProxyUrl(_Inout_ LPSTR lpszAutoProxyUrl,_In_ DWORD dwAutoProxyUrlLength,_In_ DWORD dwDetectFlags)
public void None.BeginWebPartConnecting(WebPart webPart None)
HRESULT None None.GetResourceCharacteristics([out] DWORD *pCharacteristics)
NTSTATUS WINAPI bcrypt.BCryptImportKey(_In_ BCRYPT_ALG_HANDLE hAlgorithm,_In_opt_ BCRYPT_KEY_HANDLE hImportKey,_In_ LPCWSTR pszBlobType,_Out_ BCRYPT_KEY_HANDLE *phKey,_Out_opt_ PUCHAR pbKeyObject,_In_ ULONG cbKeyObject,_In_ PUCHAR pbInput,_In_ ULONG cbInput,_In_ ULONG dwFlags)
private void None.menuItemHelpAbout_Click(Object sender None,EventArgs e None)
HRESULT None faxcom.put_SendCoverpage([in] BOOL newVal)
protected void None.OnGiveFeedback(GiveFeedbackEventArgs gfbevent None)
protected void None.OnSourceInitialized(EventArgs e None)
BOOL None None.WlxQueryTsLogonCredentials(_Out_ PWLX_CLIENT_CREDENTIALS_INFO_V2_0 pCred)
ATOM WINAPI kernel32.GlobalDeleteAtom(_In_ ATOM nAtom)
NTSTATUS None None.WdfWmiInstanceFireEvent(_In_ WDFWMIINSTANCE WmiInstance,_In_opt_ ULONG EventDataSize,_In_opt_ PVOID EventData)
double None None.strtod(const char *nptr,char **endptr None)
public StringBuilder None.Replace(char oldChar None,char newChar None)
HRESULT None faxcom.get_DiscountSend([out None None,retval] BOOL *pVal)
HRESULT None mfplat.MFCreateMediaTypeFromRepresentation(_In_ GUID guidRepresentation,_In_ LPVOID pvRepresentation,_Out_ IMFMediaType **ppIMediaType)
function None None.InitializeRequest(sender None None,args None None)
protected void None.BuildProfileTree(String parentId None,boolean calcViewState None)
public XmlNode None.CloneNode(boolean deep None)
public void None.InitializeCell(DataControlFieldCell cell None,DataControlCellType cellType None,DataControlRowState rowState None,int rowIndex None)
public None None.Metafile(IntPtr hmetafile None,WmfPlaceableFileHeader wmfHeader None)
public DataSet None.GetChanges(DataRowState rowStates None)
public void None.Lock(long position None,long length None)
LONG64 WINAPI None.Multiply128(_In_ LONG64 Multiplier,_In_ LONG64 Multiplicand,_Out_ LONG64 *HighProduct)
protected void None.OnLeave(EventArgs e None)
HRESULT None shlwapi.UrlEscapeSpaces(_In_ LPCTSTR pszURL,_Out_ LPTSTR pszEscaped,_Out_ LPDWORD pcchEscaped)
HRESULT WINAPI None.EngineAdapterIdentifyAll(_Inout_ PWINBIO_PIPELINE Pipeline,_Out_ PSIZE_T PresenceCount,_Out_ PWINBIO_PRESENCE *PresenceArray)
String None None.GetListName(PropertyDescriptor[] listAccessors None)
HRESULT None wuapi.get_Image([out] IImageInformation **retval)
HRESULT None None.GetIAccessible([out None None,retval] IAccessible **ppAccessible)
NTSTATUS None None.SpMakeSignature(_In_ LSA_SEC_HANDLE ContextHandle,_In_ ULONG QualityOfProtection,_Inout_ PSecBufferDesc MessageBuffers,_In_ ULONG MessageSequenceNumber)
HRESULT None None.SIZETToInt(_In_ SIZE_T cbOperand,_Out_ INT *piResult)
HRESULT None None.AddFocusHandler(IUIAutomation* pAutomation None)
public XmlAttribute None.CreateAttribute(String prefix None,String localName None,String namespaceURI None)
public ParameterBuilder None.DefineParameter(int position None,ParameterAttributes attributes None,String strParamName None)
protected void None.OnPaint(PaintEventArgs e None)
private void None.treeView1_AfterSelect(Object sender None,TreeViewEventArgs e None)
HRESULT None None.ULongToUInt(_In_ ULONG ulOperand,_Out_ UINT *puResult)
public void None.DrawToBitmap(Bitmap bitmap None,Rectangle targetBounds None)
protected void None.Deserialize(SerializationInfo serializationInfo None,StreamingContext context None)
protected void None.OnEditCommand(DataListCommandEventArgs e None)
public None None.Run(String text None)
DWORD None dhcpsapi.DhcpGetAllOptions(_In_ LPWSTR ServerIpAddress,_In_ DWORD Flags,_Out_ LPDHCP_ALL_OPTIONS *OptionStruct)
public None None.ResourceReader(String fileName None)
protected void None.RenderDropCue(HtmlTextWriter writer None)
private void None.textBox1_Validating(Object sender None,System.ComponentModel.CancelEventArgs e None)
public String None.GetString(byte[] bytes None,int index None,int count None)
public void None.MergeStyle(Style s None)
NTSTATUS None None.WdfChildListRetrieveNextDevice(_In_ WDFCHILDLIST ChildList,_In_ PWDF_CHILD_LIST_ITERATOR Iterator,_Out_ WDFDEVICE *Device,_Inout_ PWDF_CHILD_RETRIEVE_INFO Info)
HRESULT None propsys.PropVariantToStrRet(_In_ REFPROPVARIANT propvar,_Out_ STRRET *pstrret)
HRESULT None faxcom.put_SenderOfficePhone([in] BSTR newVal)
LONG WINAPI winscard.SCardLocateCardsByATR(_In_ SCARDCONTEXT hContext,_In_ LPSCARD_ATRMASK rgAtrMasks,_In_ DWORD cAtrs,_Inout_ LPSCARD_READERSTATE rgReaderStates,_In_ DWORD cReaders)
LONG WINAPI winscard.SCardLocateCardsByATRW(_In_ SCARDCONTEXT hContext,_In_ LPSCARD_ATRMASK rgAtrMasks,_In_ DWORD cAtrs,_Inout_ LPSCARD_READERSTATE rgReaderStates,_In_ DWORD cReaders)
LONG WINAPI winscard.SCardLocateCardsByATRA(_In_ SCARDCONTEXT hContext,_In_ LPSCARD_ATRMASK rgAtrMasks,_In_ DWORD cAtrs,_Inout_ LPSCARD_READERSTATE rgReaderStates,_In_ DWORD cReaders)
HRESULT WINAPI None.EngineAdapterClearContext(_Inout_ PWINBIO_PIPELINE Pipeline)
MI_INLINE MI_Result None.MI_Application_NewDeserializer(_Inout_ MI_Application *application,MI_Uint32 flags None,_In_ MI_Char *format,_Out_ MI_Deserializer *deserializer)
HRESULT None wuapi.get_AsyncState([out] VARIANT *retval)
LONG WINAPI winscard.SCardSetAttrib(_In_ SCARDHANDLE hCard,_In_ DWORD dwAttrId,_In_ LPCBYTE pbAttr,_In_ DWORD cbAttrLen)
public void None.ControlSetFocus(Control control None)
HRESULT None None.get_MouseIcon([out None None,retval] IPictureDisp **MouseIcon)
HLOCAL WINAPI kernel32.LocalAlloc(_In_ UINT uFlags,_In_ SIZE_T uBytes)
HANDLE WINAPI wintrust.CryptCATHandleFromStore(_In_ CRYPTCATSTORE *pCatStore)
public void None.ControlSelect(Control control None)
BOOL None wininet.InternetSetCookie(_In_ LPCTSTR lpszUrl,_In_ LPCTSTR lpszCookieName,_In_ LPCTSTR lpszCookieData)
BOOL None wininet.InternetSetCookieW(_In_ LPCTSTR lpszUrl,_In_ LPCTSTR lpszCookieName,_In_ LPCTSTR lpszCookieData)
BOOL None wininet.InternetSetCookieA(_In_ LPCTSTR lpszUrl,_In_ LPCTSTR lpszCookieName,_In_ LPCTSTR lpszCookieData)
protected void None.OnWebPartsConnected(WebPartConnectionsEventArgs e None)
HRESULT None None.GetSerialization([out] CREDENTIAL_PROVIDER_GET_SERIALIZATION_RESPONSE *pcpgsr,[out] CREDENTIAL_PROVIDER_CREDENTIAL_SERIALIZATION *pcpcs,[out] LPWSTR *ppszOptionalStatusText,[out] CREDENTIAL_PROVIDER_STATUS_ICON *pcpsiOptionalStatusIcon)
DWORD None wininet.InternetSetFilePointer(_In_ HINTERNET hFile,_In_ LONG lDistanceToMove,_Inout_ PLONG lpDistanceToMoveHigh,_In_ DWORD dwMoveMethod,_In_ DWORD_PTR dwContext)
BOOL None shlwapi.PathQuoteSpaces(_Inout_ LPTSTR lpsz)
BOOL None shlwapi.PathQuoteSpacesW(_Inout_ LPTSTR lpsz)
BOOL None shlwapi.PathQuoteSpacesA(_Inout_ LPTSTR lpsz)
DWORD None None.NPAddConnection3(_In_ HWND hwndOwner,_In_ LPNETRESOURCE lpNetResource,_In_ LPTSTR lpPassword,_In_ LPTSTR lpUserName,_In_ DWORD dwFlags)
HRESULT None wuapi.get_CanRegisterWithAU([out] VARIANT_BOOL *retval)
protected void None.OnAfterSelect(TreeViewEventArgs e None)
ULONG None httpapi.HttpRemoveUrl(_In_ HANDLE ReqQueueHandle,_In_ PCWSTR pFullyQualifiedUrl)
BOOL WINAPI advapi32.CredProtect(_In_ BOOL fAsSelf,_In_ LPTSTR pszCredentials,_In_ DWORD cchCredentials,_Out_ LPTSTR pszProtectedCredentials,_Inout_ DWORD *pcchMaxChars,_Out_ CRED_PROTECTION_TYPE *ProtectionType)
BOOL WINAPI advapi32.CredProtectW(_In_ BOOL fAsSelf,_In_ LPTSTR pszCredentials,_In_ DWORD cchCredentials,_Out_ LPTSTR pszProtectedCredentials,_Inout_ DWORD *pcchMaxChars,_Out_ CRED_PROTECTION_TYPE *ProtectionType)
BOOL WINAPI advapi32.CredProtectA(_In_ BOOL fAsSelf,_In_ LPTSTR pszCredentials,_In_ DWORD cchCredentials,_Out_ LPTSTR pszProtectedCredentials,_Inout_ DWORD *pcchMaxChars,_Out_ CRED_PROTECTION_TYPE *ProtectionType)
private void None.listDragSource_QueryContinueDrag(Object sender None,System.Windows.Forms.QueryContinueDragEventArgs e None)
public void None.WriteXmlSchema(Stream stream None)
public void None.Merge(DataTable table None)
HRESULT None None.DWordPtrToULong(_In_ DWORD_PTR dwOperand,_Out_ ULONG *pulResult)
HRESULT None None.get_ProductID([out] BSTR *productID)
HRESULT None faxcom.get_ReceiveTime([out None None,retval] BSTR *pVal)
protected void None.BaseRemoveAt(int index None)
public void None.CopyBaseAttributes(WebControl controlSrc None)
HRESULT None faxcom.put_RecipientOfficePhone([in] BSTR newVal)
public None None.HttpContext(HttpRequest request None,HttpResponse response None)
HRESULT None None.CreateTrueCondition([out None None,retval] IUIAutomationCondition **newCondition)
public boolean None.IsValidFormAttribute(String attribute None)
DWORD WINAPI peerdist.PeerDistClientOpenContent(_In_ PEERDIST_INSTANCE_HANDLE hPeerDist,_In_ PCPEERDIST_CONTENT_TAG pContentTag,_In_opt_ HANDLE hCompletionPort,_In_opt_ ULONG_PTR ulCompletionKey,_Out_ PPEERDIST_CONTENT_HANDLE phContentHandle)
BOOL None wininet.InternetReadFileEx(_In_ HINTERNET hFile,_Out_ LPINTERNET_BUFFERS lpBuffersOut,_In_ DWORD dwFlags,_In_ DWORD_PTR dwContext)
BOOL None wininet.InternetReadFileExW(_In_ HINTERNET hFile,_Out_ LPINTERNET_BUFFERS lpBuffersOut,_In_ DWORD dwFlags,_In_ DWORD_PTR dwContext)
BOOL None wininet.InternetReadFileExA(_In_ HINTERNET hFile,_Out_ LPINTERNET_BUFFERS lpBuffersOut,_In_ DWORD dwFlags,_In_ DWORD_PTR dwContext)
public void None.Add(DateTime date None)
protected void None.OnWebPartsDisconnected(WebPartConnectionsEventArgs e None)
public void None.Write(String documentPath None)
BOOLEAN None None.IoIsWdmVersionAvailable(_In_ UCHAR MajorVersion,_In_ UCHAR MinorVersion)
DWORD WINAPI clusapi.GetClusterNodeId(_In_opt_ HNODE hNode,_Out_ LPWSTR lpszNodeId,_Inout_ LPDWORD lpcchName)
void None None.printf(string format None,argument ... None)
protected void None.OnAfterSelect(TreeViewEventArgs e None)
DWORD None iphlpapi.GetIpNetTable(_Out_ PMIB_IPNETTABLE pIpNetTable,_Inout_ PULONG pdwSize,_In_ BOOL bOrder)
public Type None.MakeGenericType(Type[] typeArguments None)
VOID None None.WdfUsbTargetDeviceGetDeviceDescriptor(_In_ WDFUSBDEVICE UsbDevice,_Out_ PUSB_DEVICE_DESCRIPTOR UsbDeviceDescriptor)
HRESULT None None.LongLongToUInt(_In_ LONGLONG llOperand,_Out_ UINT *puResult)
private void None.currencyTextBox_TextChanged(Object sender None,EventArgs e None)
HRESULT None None.GetExtendedAttributeCount(DWORD* pdwAttrs None)
void None None.Page_Load(Object Sender None,EventArgs e None)
public StringBuilder None.Replace(char oldChar None,char newChar None)
DWORD WINAPI wininet.PrivacyGetZonePreferenceW(_In_ DWORD dwZone,_In_ DWORD dwType,_Out_opt_ LPDWORD pdwTemplate,_Out_opt_ LPWSTR *pszBuffer,_Inout_opt_ LPDWORD pdwBufferLength)
DWORD WINAPI wininet.PrivacyGetZonePreferenceW(_In_ DWORD dwZone,_In_ DWORD dwType,_Out_opt_ LPDWORD pdwTemplate,_Out_opt_ LPWSTR *pszBuffer,_Inout_opt_ LPDWORD pdwBufferLength)
protected Control None.FindControl(String id None,int pathOffset None)
BOOL None wininet.GopherGetLocatorType(_In_ LPCTSTR lpszLocator,_Out_ LPDWORD lpdwGopherType)
BOOL None wininet.GopherGetLocatorTypeW(_In_ LPCTSTR lpszLocator,_Out_ LPDWORD lpdwGopherType)
BOOL None wininet.GopherGetLocatorTypeA(_In_ LPCTSTR lpszLocator,_Out_ LPDWORD lpdwGopherType)
HRESULT None None.DecryptionBlt(IDirect3DSurface9 *pSrcSurface None,IDirect3DSurface9 *pDstSurface None,UINT SrcSurfaceSize None,D3DENCRYPTED_BLOCK_INFO *pEncryptedBlockInfo None,VOID *pContentKey None,VOID *pIV None)
BOOL None wininet.GopherCreateLocator(_In_ LPCTSTR lpszHost,_In_ INTERNET_PORT nServerPort,_In_ LPCTSTR lpszDisplayString,_In_ LPCTSTR lpszSelectorString,_In_ DWORD dwGopherType,_Out_ LPTSTR lpszLocator,_Inout_ LPDWORD lpdwBufferLength)
BOOL None wininet.GopherCreateLocatorW(_In_ LPCTSTR lpszHost,_In_ INTERNET_PORT nServerPort,_In_ LPCTSTR lpszDisplayString,_In_ LPCTSTR lpszSelectorString,_In_ DWORD dwGopherType,_Out_ LPTSTR lpszLocator,_Inout_ LPDWORD lpdwBufferLength)
BOOL None wininet.GopherCreateLocatorA(_In_ LPCTSTR lpszHost,_In_ INTERNET_PORT nServerPort,_In_ LPCTSTR lpszDisplayString,_In_ LPCTSTR lpszSelectorString,_In_ DWORD dwGopherType,_Out_ LPTSTR lpszLocator,_Inout_ LPDWORD lpdwBufferLength)
HRESULT None wuapi.get_Categories([out] ICategoryCollection **retval)
float3 None None.myCoord(1.0f None None,1.4f None None,2.2f None None)
HRESULT WINAPI None.EngineAdapterQueryHashAlgorithms(_Inout_ PWINBIO_PIPELINE Pipeline,_Out_ PSIZE_T AlgorithmCount,_Out_ PSIZE_T AlgorithmBufferSize,_Out_ PUCHAR *AlgorithmBuffer)
public void None.ControlSelect(Control control None)
public void None.Close(int timeout None)
public PropertyItem None.GetPropertyItem(int propid None)
private void None.On_Click(Object source None,System.EventArgs e None)
protected void None.OnChangeUICues(UICuesEventArgs e None)
public void None.MergeWith(Style s None)
private void None.whatIsChecked_Click(Object sender None,System.EventArgs e None)
protected void None.ConnectWebPart(WebPart webPart None)
public int None.GetMaxCharCount(int byteCount None)
HRESULT None None.PathCchRemoveExtension(_Inout_ PWSTR pszPath,_In_ size_t cchPath)
private void None.listDragSource_QueryContinueDrag(Object sender None,System.Windows.Forms.QueryContinueDragEventArgs e None)
public void None.AddAt(int index None,Control child None)
HNODEENUM WINAPI clusapi.ClusterNodeOpenEnum(_In_ HNODE hNode,_In_ DWORD dwType)
DWORD DHCP_API_FUNCTION dhcpsapi.DhcpV4FailoverCreateRelationship(_In_opt_ LPWSTR ServerIpAddress,_In_ LPDHCP_FAILOVER_RELATIONSHIP pRelationship)
private void None.buttonNewCustomer_Click(Object sender None,EventArgs e None)
protected void None.OnCausesValidationChanged(EventArgs e None)
VOID None None.WdfIoResourceRequirementsListSetInterfaceType(_In_ WDFIORESREQLIST RequirementsList,_In_ INTERFACE_TYPE InterfaceType)
public void None.RenderEndTag(HtmlTextWriter writer None)
HRESULT None None.get_CachedKeyboardShortcut([out None None,retval] BSTR *pszKeyboardShortcut)
HRESULT None None.IntPtrToULong(_In_ INT_PTR iOperand,_Out_ ULONG *pulResult)
BOOL None wininet.InternetCombineUrl(_In_ LPCTSTR lpszBaseUrl,_In_ LPCTSTR lpszRelativeUrl,_Out_ LPTSTR lpszBuffer,_Inout_ LPDWORD lpdwBufferLength,_In_ DWORD dwFlags)
BOOL None wininet.InternetCombineUrlW(_In_ LPCTSTR lpszBaseUrl,_In_ LPCTSTR lpszRelativeUrl,_Out_ LPTSTR lpszBuffer,_Inout_ LPDWORD lpdwBufferLength,_In_ DWORD dwFlags)
BOOL None wininet.InternetCombineUrlA(_In_ LPCTSTR lpszBaseUrl,_In_ LPCTSTR lpszRelativeUrl,_Out_ LPTSTR lpszBuffer,_Inout_ LPDWORD lpdwBufferLength,_In_ DWORD dwFlags)
HRESULT None faxcom.get_RawReceiveTime([out None None,retval] VARIANT *pVal)
public GeneralTransform None.TransformToVisual(Visual visual None)
protected void None.PreSerialize(XmlWriter writer None)
protected void None.OnStylusButtonUp(StylusButtonEventArgs e None)
HRESULT None None.LongPtrToULongLong(_In_ LONG_PTR lOperand,_Out_ ULONGLONG *pullResult)
HRESULT None msftedit.TxGetMaxLength(DWORD *pLength None)
DWORD WINAPI clusapi.ClusterGroupSetControl(_In_ HGROUPSET hGroupSet,_In_opt_ HNODE hHostNode,_In_ DWORD dwControlCode,_In_opt_ LPVOID lpInBuffer,_In_ DWORD cbInBufferSize,_Out_opt_ LPVOID lpOutBuffer,_In_ DWORD cbOutBufferSize,_Out_opt_ LPDWORD lpBytesReturned)
public None None.XmlAttributes(ICustomAttributeProvider provider None)
protected void None.OnPreviewStylusButtonUp(StylusButtonEventArgs e None)
HRESULT None oleaut32.VarI1FromBool(_In_ VARIANT_BOOL boolIn,_Out_ CHAR *pcOut)
HRESULT None None.CreateFalseCondition([out None None,retval] IUIAutomationCondition **newCondition)
public boolean None.IsValidFormAttribute(String attribute None)
protected void None.OnClick(ImageMapEventArgs e None)
public void None.RenderBeginTag(HtmlTextWriter writer None)
protected void None.TreeView1_SelectedNodeChanged(object sender None,EventArgs e None)
ULONG None httpapi.HttpCreateHttpHandle(_Out_ PHANDLE pReqQueueHandle,_Reserved_ ULONG Reserved)
protected void None.BuildProfileTree(String parentId None,boolean calcViewState None)
HRESULT None None.GetStereo3DFramePackingMode([out] MF_MEDIA_ENGINE_S3D_PACKING_MODE *packMode)
public void None.MergeStyle(Style s None)
protected void None.OnBeforeSelect(TreeViewCancelEventArgs e None)
protected void None.OnStylusButtonUp(StylusButtonEventArgs e None)
public void None.Pause(FrameworkElement containingObject None)
STDAPI None mf.MFCreateTranscodeTopology(_In_ IMFMediaSource *pSrc,_In_ LPCWSTR pwszOutputFilePath,_In_ IMFTranscodeProfile *pProfile,_Out_ IMFTopology **ppTranscodeTopo)
HRESULT None mstscax.get_VerticalScrollBarVisible([out] BOOL *pfVScrollVisible)
IOrderedDictionary None None.ExtractValues(Control container None)
private void None.currencyTextBox_TextChanged(Object sender None,EventArgs e None)
DWORD WINAPI peerdist.PeerDistClientStreamRead(_In_ PEERDIST_INSTANCE_HANDLE hPeerDist,_In_ PEERDIST_CONTENT_HANDLE hContentHandle,DWORD cbMaxNumberOfBytesToRead None,_Inout_opt_ PBYTE pBuffer,DWORD dwTimeoutInMilliseconds None,_In_ LPOVERLAPPED lpOverlapped)
NTSTATUS None None.ZwSetValueKey(_In_ HANDLE KeyHandle,_In_ PUNICODE_STRING ValueName,_In_opt_ ULONG TitleIndex,_In_ ULONG Type,_In_opt_ PVOID Data,_In_ ULONG DataSize)
private void None.On_Click(Object source None,System.EventArgs e None)
public Point None.PointToScreen(Point p None)
private void None.Page_Load(Object sender None,System.EventArgs e None)
public Object None.ConvertFrom(ITypeDescriptorContext context None,CultureInfo culture None,Object value None)
LONG WINAPI winscard.SCardSetCardTypeProviderName(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCardName,_In_ DWORD dwProviderId,_In_ LPCTSTR szProvider)
LONG WINAPI winscard.SCardSetCardTypeProviderNameW(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCardName,_In_ DWORD dwProviderId,_In_ LPCTSTR szProvider)
LONG WINAPI winscard.SCardSetCardTypeProviderNameA(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCardName,_In_ DWORD dwProviderId,_In_ LPCTSTR szProvider)
public void None.MergeStyle(Style s None)
VOID None None.WdfDeviceSetDeviceState(_In_ WDFDEVICE Device,_In_ PWDF_DEVICE_STATE DeviceState)
HRESULT None None.DWordToUShort(_In_ DWORD dwOperand,_Out_ USHORT *pusResult)
HRESULT None None.ULongLongToSIZET(_In_ ULONGLONG ullOperand,_Out_ SIZE_T *pcbResult)
HRESULT None None.get_Ink([out None None,retval] InkDisp **Ink)
KPROCESSOR_MODE None None.WdfRequestGetRequestorMode(_In_ WDFREQUEST Request)
HRESULT None fxscomex.OnReceiptOptionsChange(IFaxServer2 *pFaxServer2 None)
String None None.ToString(String format None,IFormatProvider formatProvider None)
BOOL None shlwapi.PathMakePretty(_Inout_ LPTSTR lpPath)
BOOL None shlwapi.PathMakePrettyW(_Inout_ LPTSTR lpPath)
BOOL None shlwapi.PathMakePrettyA(_Inout_ LPTSTR lpPath)
DWORD DHCP_API_FUNCTION dhcpsapi.DhcpV4QueryPolicyEnforcement(_In_opt_ LPWSTR ServerIpAddress,_In_ BOOL fGlobalPolicy,_In_ DHCP_IP_ADDRESS SubnetAddress,_Out_ BOOL *Enabled)
HRESULT None faxcom.put_SenderAddress([in] BSTR newVal)
HRESULT None tapi3.EnumerateAddresses([out] IEnumAddress **ppEnumAddress)
protected void None.OnDragLeave(EventArgs e None)
public void None.InitializeCell(DataControlFieldCell cell None,DataControlCellType cellType None,DataControlRowState rowState None,int rowIndex None)
static String None.IsFileURI(String path None)
void None None.Page_Load(Object sender None,EventArgs e None)
DWORD DHCP_API_FUNCTION dhcpsapi.DhcpV4FailoverEnumRelationship(_In_opt_ LPWSTR ServerIpAddress,_Inout_ DHCP_RESUME_HANDLE *ResumeHandle,_In_ DWORD preferredMaximum,_Out_ LPDHCP_FAILOVER_RELATIONSHIP_ARRAY *pRelationship,_Out_ LPDWORD relationshipRead,_Out_ LPDWORD relationshipTotal)
int None None.MyMethod(Object o None)
HRESULT None None.get_Tablet([out None None,retval] IInkTablet **SingleTablet)
protected void None.LoadViewState(Object savedState None)
SECURITY_STATUS None sspicli.SspiEncodeStringsAsAuthIdentity(_In_ PCWSTR pszUserName,_In_ PCWSTR pszDomainName,_In_ PCWSTR pszPackedCredentialsString,_Out_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE *ppAuthIdentity)
BOOL None wininet.InternetSetCookie(_In_ LPCTSTR lpszUrl,_In_ LPCTSTR lpszCookieName,_In_ LPCTSTR lpszCookieData)
BOOL None wininet.InternetSetCookieW(_In_ LPCTSTR lpszUrl,_In_ LPCTSTR lpszCookieName,_In_ LPCTSTR lpszCookieData)
BOOL None wininet.InternetSetCookieA(_In_ LPCTSTR lpszUrl,_In_ LPCTSTR lpszCookieName,_In_ LPCTSTR lpszCookieData)
UINT None input.EnumEnabledLayoutOrTip(_In_opt_ LPCWSTR pszUserReg,_In_opt_ LPCWSTR pszSystemReg,_In_opt_ LPCWSTR pszSoftwareReg,_Out_ LAYOUTORTIPPROFILE *pLayoutOrTipProfile,_In_ UINT uBufLength)
LONG WINAPI clusapi.ClusterRegBatchReadCommand(_In_ HREGBATCHNOTIFICATION hBatchNotification,_Out_ CLUSTER_BATCH_COMMAND *pBatchCommand)
HRESULT None faxcom.put_DisplayName([in] BSTR newVal)
MI_INLINE MI_Result None.MI_DestinationOptions_GetCertCNCheck(_In_ MI_DestinationOptions *options,_Out_ MI_Boolean *check)
void None None.Page_Load(Object sender None,System.EventArgs e None)
BOOL None shlwapi.UrlIsNoHistory(_In_ PCTSTR pszURL)
BOOL None shlwapi.UrlIsNoHistoryW(_In_ PCTSTR pszURL)
BOOL None shlwapi.UrlIsNoHistoryA(_In_ PCTSTR pszURL)
HRESULT None None.SizeTToSSIZET(_In_ size_t cbOperand,_Out_ SSIZE_T *pcbResult)
NTSTATUS None None.WdfDeviceOpenRegistryKey(_In_ WDFDEVICE Device,_In_ ULONG DeviceInstanceKeyType,_In_ ACCESS_MASK DesiredAccess,_In_opt_ PWDF_OBJECT_ATTRIBUTES KeyAttributes,_Out_ WDFKEY *Key)
PIDLIST_ABSOLUTE None shell32.SHSimpleIDListFromPath(_In_ PCWSTR pszPath)
protected void None.OnPageChange(int oldPageIndex None,int newPageIndex None)
HRESULT None None.DWordPtrToUInt(_In_ DWORD_PTR dwOperand,_Out_ UINT *puiResult)
public ParameterBuilder None.DefineParameter(int position None,ParameterAttributes attributes None,String strParamName None)
HRESULT WINAPI None.EngineAdapterDiscardEnrollment(_Inout_ PWINBIO_PIPELINE Pipeline)
HRESULT None None.GetUrlFlags([out None None,retval] PolicyServerUrlFlags *pValue)
protected None None.ResourceReferenceKeyNotFoundException(SerializationInfo info None,StreamingContext context None)
BOOL WINAPI crypt32.CryptMsgClose(_In_ HCRYPTMSG hCryptMsg)
protected String None.GetErrorDesignTimeHtml(Exception e None)
NTSTATUS None None.ZwQueryInformationResourceManager(_In_ HANDLE ResourceManagerHandle,_In_ RESOURCEMANAGER_INFORMATION_CLASS ResourceManagerInformationClass,_Out_ PVOID ResourceManagerInformation,_In_ ULONG ResourceManagerInformationLength,_Out_opt_ PULONG ReturnLength)
SECURITY_STATUS SEC_ENTRY secur32.SaslSetContextOption(_In_ PCtxtHandle ContextHandle,_In_ ULONG Option,_In_ PVOID Value,_In_ ULONG Size)
DWORD None None.NPGetResourceParent(_In_ LPNETRESOURCE lpNetResource,_Out_ LPVOID lpBuffer,_Inout_ LPDWORD lpcbBuffer)
BOOL None wininet.InternetSetOption(_In_ HINTERNET hInternet,_In_ DWORD dwOption,_In_ LPVOID lpBuffer,_In_ DWORD dwBufferLength)
BOOL None wininet.InternetSetOptionW(_In_ HINTERNET hInternet,_In_ DWORD dwOption,_In_ LPVOID lpBuffer,_In_ DWORD dwBufferLength)
BOOL None wininet.InternetSetOptionA(_In_ HINTERNET hInternet,_In_ DWORD dwOption,_In_ LPVOID lpBuffer,_In_ DWORD dwBufferLength)
BOOL WINAPI clusapi.CloseClusterNode(_In_ HNODE hNode)
HRESULT CALLBACK input.QueryLayoutOrTipStringUserReg(_In_ LPCWSTR pszUserReg,_In_ LPCWSTR pszSystemReg,_In_ LPCWSTR pszSoftwareReg,_In_ LPCWSTR psz,_In_ DWORD dwFlags)
protected boolean None.OnServerValidate(String value None)
HRESULT None None.ULongLongToLongPtr(_In_ ULONGLONG ullOperand,_Out_ LONG_PTR *plResult)
MI_INLINE MI_Result None.MI_DestinationOptions_GetCertCACheck(_In_ MI_DestinationOptions *options,_Out_ MI_Boolean *check)
HRESULT None None.SelectRelativeButton(DVD_RELATIVE_BUTTON buttonDir None)
public Type None.MakeGenericType(Type[] typeArguments None)
HRESULT None None.SetExtendedAttribute(DWORD ValueName None,VARIANT VariantValue None)
protected void None.LoadViewState(Object savedState None)
private void None.button1_Click(Object sender None,System.EventArgs e None)
HRESULT WINAPI cryptxml.CryptXmlDigestReference(_In_ HCRYPTXML hReference,DWORD dwFlags None,_In_ CRYPT_XML_DATA_PROVIDER *pDataProviderIn)
HRESULT None None.get_CachedControlType([out None None,retval] CONTROLTYPEID *retVal)
void None None.ReadXml(XmlReader reader None)
private void None.treeView1_KeyDown(Object sender None,KeyEventArgs e None)
HANDLE None wininet.FindFirstUrlCacheGroup(_Reserved_ DWORD dwFlags,_In_ DWORD dwFilter,_Reserved_ LPVOID lpSearchCondition,_Reserved_ DWORD dwSearchCondition,_Out_ GROUPID *lpGroupId,_Reserved_ LPVOID lpReserved)
SECURITY_STATUS SEC_ENTRY secur32.SaslIdentifyPackage(_In_ PSecBufferDesc pInput,_Out_ PSecPkgInfo *PackageInfo)
SECURITY_STATUS SEC_ENTRY secur32.SaslIdentifyPackageW(_In_ PSecBufferDesc pInput,_Out_ PSecPkgInfo *PackageInfo)
SECURITY_STATUS SEC_ENTRY secur32.SaslIdentifyPackageA(_In_ PSecBufferDesc pInput,_Out_ PSecPkgInfo *PackageInfo)
DWORD DHCP_API_FUNCTION dhcpsapi.DhcpV4RemoveOptionValue(_In_opt_ LPWSTR ServerIpAddress,_In_ DWORD Flags,_In_ DHCP_OPTION_ID OptionID,_In_opt_ LPWSTR PolicyName,_In_opt_ LPWSTR VendorName,_In_ LPDHCP_OPTION_SCOPE_INFO ScopeInfo)
public void None.MergeStyle(Style s None)
public XmlNode None.InsertBefore(XmlNode newChild None,XmlNode refChild None)
public None None.MissingMethodException(String message None,Exception inner None)
HRESULT None None.get_RawViewCondition([out None None,retval] IUIAutomationCondition **condition)
public void None.CopyTo(TreeNode[] nodeArray None,int index None)
HRESULT None None.GetVendorData([in] UInt16 PageNumber,[out] String VendorData,[out] String ExtendedStatus)
public XmlComment None.CreateComment(String data None)
static bool None.EvaluatorMethod(System.Web.Mobile.MobileCapabilities capabilities None,String compareArgument None)
HRESULT None None.GetPlayed([out] IMFMediaTimeRange **ppPlayed)
public void None.EnterFormat(Style style None)
private void None.textBox1_Validating(Object sender None,System.ComponentModel.CancelEventArgs e None)
public None None.DateTime(long ticks None)
protected void None.OnKeyPress(KeyPressEventArgs e None)
public void None.OnAppendToParentBuilder(ControlBuilder parentBuilder None)
BOOL None shlwapi.PathUnmakeSystemFolder(_In_ LPTSTR pszPath)
BOOL None shlwapi.PathUnmakeSystemFolderW(_In_ LPTSTR pszPath)
BOOL None shlwapi.PathUnmakeSystemFolderA(_In_ LPTSTR pszPath)
SerializableAttribute None None.ClassInterfaceAttribute(ClassInterfaceType.None None None)
public void None.RemoveWebPart(WebPart webPart None)
protected void None.OnDataBound(EventArgs e None)
DWORD WINAPI peerdist.PeerDistRegisterForStatusChangeNotification(_In_ PEERDIST_INSTANCE_HANDLE hPeerDist,_In_opt_ HANDLE hCompletionPort,_In_opt_ ULONG_PTR ulCompletionKey,_In_ LPOVERLAPPED lpOverlapped,_Out_ PEERDIST_STATUS *pPeerDistStatus)
BOOLEAN None None.WdfDpcEnqueue(_In_ WDFDPC Dpc)
protected boolean None.OnServerValidate(String value None)
protected void None.OnItemCreated(DataListItemEventArgs e None)
HRESULT WINAPI drt.DrtCreatePnrpBootstrapResolver(_In_ BOOL fPublish,_In_ PCWSTR pwzPeerName,_In_opt_ PCWSTR pwzCloudName,_In_opt_ PCWSTR pwzPublishingIdentity,_Out_ DRT_BOOTSTRAP_RESOLVER **ppResolver)
HRESULT None None.ULongToLongPtr(_In_ ULONG ulOperand,_Out_ LONG_PTR *plResult)
public int None.IndexOf(Object value None)
HRESULT None None.UIntPtrToIntPtr(_In_ UINT_PTR uOperand,_Out_ INT_PTR *piResult)
BOOL None wininet.FtpCommand(_In_ HINTERNET hConnect,_In_ BOOL fExpectResponse,_In_ DWORD dwFlags,_In_ LPCTSTR lpszCommand,_In_ DWORD_PTR dwContext,_Out_ HINTERNET *phFtpCommand)
BOOL None wininet.FtpCommandW(_In_ HINTERNET hConnect,_In_ BOOL fExpectResponse,_In_ DWORD dwFlags,_In_ LPCTSTR lpszCommand,_In_ DWORD_PTR dwContext,_Out_ HINTERNET *phFtpCommand)
BOOL None wininet.FtpCommandA(_In_ HINTERNET hConnect,_In_ BOOL fExpectResponse,_In_ DWORD dwFlags,_In_ LPCTSTR lpszCommand,_In_ DWORD_PTR dwContext,_Out_ HINTERNET *phFtpCommand)
protected void None.LinqDataSource_Updating(object sender None,LinqDataSourceUpdateEventArgs e None)
protected void None.OnContextMenuOpening(ContextMenuEventArgs e None)
protected void None.OnPageIndexChanged(DataGridPageChangedEventArgs e None)
protected void None.OnPreviewTextInput(TextCompositionEventArgs e None)
HRESULT None mfplat.MFTEnum(_In_ GUID guidCategory,_In_ UINT32 Flags,_In_ MFT_REGISTER_TYPE_INFO *pInputType,_In_ MFT_REGISTER_TYPE_INFO *pOutputType,_In_ IMFAttributes *pAttributes,_Out_ CLSID **ppclsidMFT,_Out_ UINT32 *pcMFTs)
public void None.ApplyStyle(DataGridViewCellStyle dataGridViewCellStyle None)
protected void None.SetBoundsCore(int x None,int y None,int width None,int height None,BoundsSpecified specified None)
DWORD None dhcpsapi.DhcpGetThreadOptions(_Out_ LPDWORD pFlags,_Out_ LPVOID Reserved)
void None None.ReadXml(XmlReader reader None)
function None None.GetQuantity(productID None None,elemToUpdate None None,productLabelElem None None,buttonElem None None)
PIRP None None.WdfRequestWdmGetIrp(_In_ WDFREQUEST Request)
BOOL None wintrust.CryptCATAdminReleaseCatalogContext(_In_ HCATADMIN hCatAdmin,_In_ HCATINFO hCatInfo,_In_ DWORD dwFlags)
void None None.GetPage(String* url None)
HRESULT None None.PtrdiffTToULongPtr(_In_ ptrdiff_t cbOperand,_Out_ ULONG_PTR *pulResult)
HRESULT None None.LongToDWord(_In_ LONG lOperand,_Out_ DWORD *pdwResult)
NTSTATUS None None.WdfDeviceAddRemovalRelationsPhysicalDevice(_In_ WDFDEVICE Device,_In_ PDEVICE_OBJECT PhysicalDevice)
public void None.Write(String documentPath None)
public None None.Guid(String g None)
protected AutoGeneratedField None.CreateAutoGeneratedRow(AutoGeneratedFieldProperties fieldProperties None)
public None None.InvalidOperationException(String message None)
public String None.Replace(String input None,MatchEvaluator evaluator None)
void None None.Page_Load(Object sender None,System.EventArgs e None)
protected void None.RenderPostBackEventAsAnchor(HtmlMobileTextWriter writer None,String argument None,String linkText None)
PTSTR None shlwapi.PathSkipRoot(_In_ PTSTR pszPath)
PTSTR None shlwapi.PathSkipRootW(_In_ PTSTR pszPath)
PTSTR None shlwapi.PathSkipRootA(_In_ PTSTR pszPath)
BOOL WINAPI crypt32.CertCompareIntegerBlob(_In_ PCRYPT_INTEGER_BLOB pInt1,_In_ PCRYPT_INTEGER_BLOB pInt2)
protected void None.RenderFooter(HtmlTextWriter writer None)
public void None.ControlSelect(Control control None)
private void None.ShowPropertiesOfSlateBlue(PaintEventArgs e None)
DWORD WINAPI clusapi.ClusterGroupControl(_In_ HGROUP hGroup,_In_opt_ HNODE hHostNode,_In_ DWORD dwControlCode,_In_opt_ LPVOID lpInBuffer,_In_ DWORD nInBufferSize,_Out_opt_ LPVOID lpOutBuffer,_In_ DWORD nOutBufferSize,_Out_opt_ LPDWORD lpBytesReturned)
BOOL None wininet.FtpRenameFile(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszExisting,_In_ LPCTSTR lpszNew)
BOOL None wininet.FtpRenameFileW(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszExisting,_In_ LPCTSTR lpszNew)
BOOL None wininet.FtpRenameFileA(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszExisting,_In_ LPCTSTR lpszNew)
public DateTime None.AddHours(DateTime time None,int hours None)
protected void None.OnDragOver(DragEventArgs drgevent None)
protected void None.OnToolTipOpening(ToolTipEventArgs e None)
protected void None.OnAfterSelect(TreeViewEventArgs e None)
public WebResponse None.EndGetResponse(IAsyncResult asyncResult None)
HNODE WINAPI clusapi.AddClusterNode(_In_ HCLUSTER hCluster,_In_ PCWSTR lpszNodeName,_In_opt_ PCLUSTER_SETUP_PROGRESS_CALLBACK pfnProgressCallback,_In_opt_ PVOID pvCallbackArg)
HRESULT None None.EnumDAdvise([out] IEnumSTATDATA **ppenumAdvise)
public int None.LastIndexOf(String source None,char value None,int startIndex None,CompareOptions options None)
private void None.textBox1_Enter(Object sender None,System.EventArgs e None)
public void None.ScrollControlIntoView(Control activeControl None)
static String None.IsFileURI(String path None)
public NameValueCollection None.DeterminePostBackMode(HttpRequest request None,String postEventSourceID None,String postEventArgumentID None,NameValueCollection baseCollection None)
BOOL None shlwapi.PathIsFileSpec(_In_ LPCTSTR lpszPath)
BOOL None shlwapi.PathIsFileSpecW(_In_ LPCTSTR lpszPath)
BOOL None shlwapi.PathIsFileSpecA(_In_ LPCTSTR lpszPath)
Bool WINAPI wininet.GetUrlCacheConfigInfo(_Inout_ LPINTERNET_CACHE_CONFIG_INFO lpCacheConfigInfo,_Reserved_ LPDWORD lpcbCacheConfigInfo,_In_ DWORD dwFieldControl)
Bool WINAPI wininet.GetUrlCacheConfigInfoW(_Inout_ LPINTERNET_CACHE_CONFIG_INFO lpCacheConfigInfo,_Reserved_ LPDWORD lpcbCacheConfigInfo,_In_ DWORD dwFieldControl)
Bool WINAPI wininet.GetUrlCacheConfigInfoA(_Inout_ LPINTERNET_CACHE_CONFIG_INFO lpCacheConfigInfo,_Reserved_ LPDWORD lpcbCacheConfigInfo,_In_ DWORD dwFieldControl)
HRESULT None None.GetPolicyServerUrl([out None None,retval] BSTR *pValue)
protected void None.OnPreviewTextInput(TextCompositionEventArgs e None)
short None None.ToInt16(IFormatProvider provider None)
public int None.GetMaxCharCount(int byteCount None)
protected void None.OnPreviewLostKeyboardFocus(KeyboardFocusChangedEventArgs e None)
BOOL None dnsapi.DnsNameCompare(_In_ PCTSTR pName1,_In_ PCTSTR pName2)
BOOL None dnsapi.DnsNameCompare_W(_In_ PCTSTR pName1,_In_ PCTSTR pName2)
BOOL None dnsapi.DnsNameCompare_A(_In_ PCTSTR pName1,_In_ PCTSTR pName2)
ULONG None httpapi.HttpReceiveClientCertificate(_In_ HANDLE ReqQueueHandle,_In_ HTTP_CONNECTION_ID ConnectionId,_In_ ULONG Flags,_Out_ PHTTP_SSL_CLIENT_CERT_INFO pSslClientCertInfo,_In_ ULONG SslClientCertInfoSize,_Out_opt_ PULONG pBytesReceived,_In_opt_ LPOVERLAPPED pOverlapped)
private void None.listBox1_DrawItem(Object sender None,System.Windows.Forms.DrawItemEventArgs e None)
private void None.listDragSource_QueryContinueDrag(Object sender None,System.Windows.Forms.QueryContinueDragEventArgs e None)
protected void None.LoadControlState(Object savedState None)
protected void None.OnAccessKey(AccessKeyEventArgs e None)
protected DependencyObject None.GetTemplateChild(String childName None)
public int None.IndexOfAny(char[] anyOf None,int startIndex None)
BOOL None shlwapi.PathIsDirectoryEmpty(_In_ LPCTSTR pszPath)
BOOL None shlwapi.PathIsDirectoryEmptyW(_In_ LPCTSTR pszPath)
BOOL None shlwapi.PathIsDirectoryEmptyA(_In_ LPCTSTR pszPath)
HRESULT None None.GetRootElement([out None None,retval] IUIAutomationElement **root)
public Type None.MakeGenericType(Type[] typeArguments None)
LONG WINAPI tapi32.phoneGetLamp(HPHONE hPhone None,DWORD dwButtonLampID None,LPDWORD lpdwLampMode None)
NTSTATUS None None.WdfWmiInstanceFireEvent(_In_ WDFWMIINSTANCE WmiInstance,_In_opt_ ULONG EventDataSize,_In_opt_ PVOID EventData)
COLOREF None None.TreeView_GetLineColor(HWND hwndTV None)
HRESULT None None.ULongLongToShort(_In_ ULONGLONG ullOperand,_Out_ SHORT *psResult)
DWORD None None.NPGetResourceInformation(_In_ LPNETRESOURCE lpNetResource,_Out_ LPVOID lpBuffer,_Inout_ LPDWORD lpcbBuffer,_Out_ LPTSTR *lplpSystem)
protected void None.RenderChildren(HtmlTextWriter writer None)
public PaintValueEventArgs None.CreatePaintValueEventArgs(System.ComponentModel. ITypeDescriptorContext context,Object value None,Graphics graphics None,Rectangle bounds None)
private void None.Page_Init(Object sender None,EventArgs e None)
protected void None.LoadViewState(Object savedState None)
PTSTR None shlwapi.PathFindExtension(_In_ PTSTR pszPath)
PTSTR None shlwapi.PathFindExtensionW(_In_ PTSTR pszPath)
PTSTR None shlwapi.PathFindExtensionA(_In_ PTSTR pszPath)
HRESULT None shlwapi.UrlUnescape(_Inout_ PTSTR pszURL,_Out_opt_ PTSTR pszUnescaped,_Inout_opt_ DWORD *pcchUnescaped,DWORD dwFlags None)
HRESULT None shlwapi.UrlUnescapeW(_Inout_ PTSTR pszURL,_Out_opt_ PTSTR pszUnescaped,_Inout_opt_ DWORD *pcchUnescaped,DWORD dwFlags None)
HRESULT None shlwapi.UrlUnescapeA(_Inout_ PTSTR pszURL,_Out_opt_ PTSTR pszUnescaped,_Inout_opt_ DWORD *pcchUnescaped,DWORD dwFlags None)
HRESULT None faxcom.put_DiscountSend([in] BOOL newVal)
BOOL None shlwapi.PathIsURL(_In_ LPCTSTR pszPath)
BOOL None shlwapi.PathIsURLW(_In_ LPCTSTR pszPath)
BOOL None shlwapi.PathIsURLA(_In_ LPCTSTR pszPath)
public Color None.GetNearestColor(Color color None)
public boolean None.Contains(Control ctl None)
protected void None.RenderCatalogPartLinks(HtmlTextWriter writer None)
public DateTime None.AddSeconds(DateTime time None,int seconds None)
public int None.LastIndexOf(String value None,int startIndex None,int count None,StringComparison comparisonType None)
public void None.Remove(Installer value None)
BOOL None crypt32.CryptSIPAddProvider(_In_ SIP_ADD_NEWPROVIDER *psNewProv)
LPARAM WINAPI None.MAKELPARAM(WORD wLow None,WORD wHigh None)
HRESULT None None.IntPtrToDWord(_In_ INT_PTR iOperand,_Out_ DWORD *pdwResult)
HRESULT None None.ULongLongToInt8(_In_ ULONGLONG ullOperand,_Out_ INT8 *pi8Result)
errno_t None None._ltoa_s(long value None,char *str None,size_t sizeOfstr None,int radix None)
public None None.XmlSerializer(Type type None)
VOID None None.WdfDeviceInitSetRequestAttributes(_In_ PWDFDEVICE_INIT DeviceInit,_In_ PWDF_OBJECT_ATTRIBUTES RequestAttributes)
protected void None.Render(HtmlTextWriter writer None)
SerializableAttribute None None.ClassInterfaceAttribute(ClassInterfaceType.None None None)
DWORD WINAPI peerdist.PeerDistServerPublishCompleteStream(_In_ PEERDIST_INSTANCE_HANDLE hPeerDist,_In_ PEERDIST_STREAM_HANDLE hStream,_In_ LPOVERLAPPED lpOverlapped)
HRESULT WINAPI None.EngineAdapterSetEnrollmentParameters(_Inout_ PWINBIO_PIPELINE Pipeline,_In_ PWINBIO_EXTENDED_ENROLLMENT_PARAMETERS Parameters)
BOOL WINAPI crypt32.CertAddCTLContextToStore(_In_ HCERTSTORE hCertStore,_In_ PCCTL_CONTEXT pCtlContext,_In_ DWORD dwAddDisposition,_Out_opt_ PCCTL_CONTEXT *ppStoreContext)
NTSTATUS WINAPI bcrypt.BCryptDestroyKey(_Inout_ BCRYPT_KEY_HANDLE hKey)
HRESULT None None.Startup([out] IVMTask **startupTask)
SECURITY_STATUS SEC_Entry secur32.ApplyControlToken(_In_ PCtxtHandle phContext,_In_ PSecBufferDesc pInput)
Sub None None.ValidationFunctionName(source None None,arguments None None)
void None None.SetAttribute(String key None,String value None)
HRESULT None None.ULongPtrToUInt(_In_ ULONG_PTR ulOperand,_Out_ UINT *puResult)
HRESULT None None.GetNumberOfStreams([out] DWORD *pdwStreamCount)
private void None.Page_Load(Object sender None,System.EventArgs e None)
protected void None.mgr1_AuthorizeWebPart(object sender None,WebPartAuthorizationEventArgs e None)
public None None.EnvironmentPermission(PermissionState state None)
HRESULT None certenroll.get_DefaultContainer([out] VARIANT_BOOL *pValue)
long None None.strtol(const char *nptr,char **endptr None,int base None)
static String None.IsFileURI(String path None)
protected void None.OnImeModeChanged(EventArgs e None)
boolean None None.IsName(String szNameBuf None,int lHashVal None)
ULONG None httpapi.HttpQueryServiceConfiguration(_In_ HANDLE ServiceHandle,_In_ HTTP_SERVICE_CONFIG_ID ConfigId,_In_opt_ PVOID pInputConfigInfo,_In_opt_ ULONG InputConfigInfoLength,_Inout_opt_ PVOID pOutputConfigInfo,_In_opt_ ULONG OutputConfigInfoLength,_Out_opt_ PULONG pReturnLength,_In_ LPOVERLAPPED pOverlapped)
public void None.AutoResizeColumn(int columnIndex None,ColumnHeaderAutoResizeStyle headerAutoResize None)
public ConfigurationSection None.GetSection(String sectionName None)
public void None.Install(IDictionary stateSaver None)
protected void None.OnEditModeChanged(EventArgs e None)
private void None.ShowPropertiesOfSlateBlue(PaintEventArgs e None)
public None None.ConnectionProviderAttribute(String displayName None,String id None)
BOOL None shlwapi.PathIsSystemFolder(_In_opt_ LPCTSTR pszPath,_In_ DWORD dwAttrb)
BOOL None shlwapi.PathIsSystemFolderW(_In_opt_ LPCTSTR pszPath,_In_ DWORD dwAttrb)
BOOL None shlwapi.PathIsSystemFolderA(_In_opt_ LPCTSTR pszPath,_In_ DWORD dwAttrb)
protected void None.OnPaginated(EventArgs e None)
HRESULT None None.GetPropertyFlags([out None None,retval] EnrollmentPolicyServerPropertyFlags *pValue)
INTERNET_STATUS_CALLBACK None wininet.InternetSetStatusCallback(_In_ HINTERNET hInternet,_In_ INTERNET_STATUS_CALLBACK lpfnInternetCallback)
HRESULT None None.get_Tasks([out] IVMTaskCollection **taskCollection)
private void None.Page_Init(Object sender None,EventArgs e None)
HRESULT None None.CopyAttribute(IMFAttributes *pFrom None,IMFAttributes *pTo None,REFGUID guidKey None)
UInt32 None None.GetSupportedFileSystems([out] String SupportedFileSystems[],[out] String ExtendedStatus)
public int None.Add(Object item None)
HRESULT None None.SetValue(LPCWSTR szValue None)
HRESULT None shlwapi.UrlCreateFromPath(_In_ PCTSTR pszPath,_Out_ PTSTR pszUrl,_Inout_ DWORD *pcchUrl,DWORD dwFlags None)
HRESULT None shlwapi.UrlCreateFromPathW(_In_ PCTSTR pszPath,_Out_ PTSTR pszUrl,_Inout_ DWORD *pcchUrl,DWORD dwFlags None)
HRESULT None shlwapi.UrlCreateFromPathA(_In_ PCTSTR pszPath,_Out_ PTSTR pszUrl,_Inout_ DWORD *pcchUrl,DWORD dwFlags None)
HRESULT None None.DWordToUInt(_In_ DWORD dwOperand,_Out_ UINT *puiResult)
HRESULT None None.Int64ToIntPtr(_In_ INT64 i64Operand,_Out_ INT_PTR *piResult)
HRESULT None faxcom.put_Rings([in] LONG newVal)
public WebResponse None.EndGetResponse(IAsyncResult asyncResult None)
HRESULT None None.PropVariantGetElem(_In_ REFPROPVARIANT propvarIn,_In_ ULONG iElem,_Out_ PROPVARIANT *ppropvar)
HRESULT None None.LongLongToUInt8(_In_ LONGLONG llOperand,_Out_ UINT8 *pu8Result)
private void None.currencyTextBox_TextChanged(Object sender None,EventArgs e None)
HRESULT None None.get_CurrentDescribedBy([out None None,retval] IUIAutomationElementArray **retVal)
SECURITY_STATUS SEC_Entry secur32.InitializeSecurityContext(_In_opt_ PCredHandle phCredential,_In_opt_ PCtxtHandle phContext,_In_opt_ SEC_CHAR *pszTargetName,_In_ ULONG fContextReq,_In_ ULONG Reserved1,_In_ ULONG TargetDataRep,_In_opt_ PSecBufferDesc pInput,_In_ ULONG Reserved2,_Inout_opt_ PCtxtHandle phNewContext,_Inout_opt_ PSecBufferDesc pOutput,_Out_ PULONG pfContextAttr,_Out_opt_ PTimeStamp ptsExpiry)
SECURITY_STATUS SEC_Entry secur32.InitializeSecurityContextW(_In_opt_ PCredHandle phCredential,_In_opt_ PCtxtHandle phContext,_In_opt_ SEC_CHAR *pszTargetName,_In_ ULONG fContextReq,_In_ ULONG Reserved1,_In_ ULONG TargetDataRep,_In_opt_ PSecBufferDesc pInput,_In_ ULONG Reserved2,_Inout_opt_ PCtxtHandle phNewContext,_Inout_opt_ PSecBufferDesc pOutput,_Out_ PULONG pfContextAttr,_Out_opt_ PTimeStamp ptsExpiry)
SECURITY_STATUS SEC_Entry secur32.InitializeSecurityContextA(_In_opt_ PCredHandle phCredential,_In_opt_ PCtxtHandle phContext,_In_opt_ SEC_CHAR *pszTargetName,_In_ ULONG fContextReq,_In_ ULONG Reserved1,_In_ ULONG TargetDataRep,_In_opt_ PSecBufferDesc pInput,_In_ ULONG Reserved2,_Inout_opt_ PCtxtHandle phNewContext,_Inout_opt_ PSecBufferDesc pOutput,_Out_ PULONG pfContextAttr,_Out_opt_ PTimeStamp ptsExpiry)
protected void None.OnKeyDown(KeyEventArgs e None)
public void None.SetConnectErrorMessage(WebPart webPart None,String connectErrorMessage None)
public void None.ChangeMode(DetailsViewMode newMode None)
ULONG None wldap32.ldap_parse_reference(_In_ LDAP *Connection,_In_ LDAPMessage *ResultMessage,_Out_ PCHAR **Referrals)
ULONG None wldap32.ldap_parse_referenceW(_In_ LDAP *Connection,_In_ LDAPMessage *ResultMessage,_Out_ PCHAR **Referrals)
ULONG None wldap32.ldap_parse_referenceA(_In_ LDAP *Connection,_In_ LDAPMessage *ResultMessage,_Out_ PCHAR **Referrals)
protected void None.OnPageIndexChanging(DetailsViewPageEventArgs e None)
HRESULT None wuapi.get_ServiceID([out] BSTR *retval)
HRESULT WINAPI None.EngineAdapterPipelineCleanup(_Inout_ PWINBIO_PIPELINE Pipeline)
HRESULT None None.GetTextTracks([out] IMFTimedTextTrackList **ppTextTracks)
protected void None.Initialize(ToolStrip toolStrip None)
protected boolean None.ProcessMnemonic(char charCode None)
HRESULT None None.StartSessionKeyRefresh(VOID *pRandomNumber None,UINT RandomNumberSize None)
protected void None.LoadViewState(Object savedState None)
public void None.Install(IDictionary stateSaver None)
private void None.listDragTarget_DragDrop(Object sender None,System.Windows.Forms.DragEventArgs e None)
HRESULT None None.RemovePacket(DWORD dwPacketNum None)
public void None.EnumerateMetafile(Metafile metafile None,Point destPoint None,EnumerateMetafileProc callback None)
BOOL WINAPI wintrust.WintrustSetRegPolicyFlags(_In_ DWORD dwPolicyFlags)
protected boolean None.OnDeserializeUnrecognizedElement(String elementName None,XmlReader reader None)
NTSTATUS WINAPI None.Msv1_0SubAuthenticationRoutineEx(_In_ NETLOGON_LOGON_INFO_CLASS LogonLevel,_In_ PVOID LogonInformation,_In_ ULONG Flags,_In_ PUSER_ALL_INFORMATION UserAll,_In_ SAM_HANDLE UserHandle,_Inout_ PMSV1_0_VALIDATION_INFO ValidationInfo,_Out_ PULONG ActionsPerformed)
private void None.ExtractMetaData(PaintEventArgs e None)
HRESULT None wuapi.get_EulaAccepted([out] VARIANT_BOOL *retval)
protected void None.OnStylusInRange(StylusEventArgs e None)
HRESULT WINAPI coremessaging.CreateDispatcherQueueController(_In_ DispatcherQueueOptions options,_Out_ DispatcherQueueController dispatcherQueueController)
HRESULT None None.DWordPtrToLong(_In_ DWORD_PTR dwOperand,_Out_ LONG *plResult)
DWORD None virtdisk.GetVirtualDiskPhysicalPath(_In_ HANDLE VirtualDiskHandle,_Inout_ PULONG DiskPathSizeInBytes,_Out_opt_ PWSTR DiskPath)
LONG WINAPI tapi32.phoneInitializeEx(LPHPHONEAPP lphPhoneApp None,HINSTANCE hInstance None,PHONECALLBACK lpfnCallback None,LPCSTR lpszFriendlyAppName None,LPDWORD lpdwNumDevs None,LPDWORD lpdwAPIVersion None,LPPHONEINITIALIZEEXPARAMS lpPhoneInitializeExParams None)
LONG WINAPI tapi32.phoneInitializeExW(LPHPHONEAPP lphPhoneApp None,HINSTANCE hInstance None,PHONECALLBACK lpfnCallback None,LPCSTR lpszFriendlyAppName None,LPDWORD lpdwNumDevs None,LPDWORD lpdwAPIVersion None,LPPHONEINITIALIZEEXPARAMS lpPhoneInitializeExParams None)
LONG WINAPI tapi32.phoneInitializeExA(LPHPHONEAPP lphPhoneApp None,HINSTANCE hInstance None,PHONECALLBACK lpfnCallback None,LPCSTR lpszFriendlyAppName None,LPDWORD lpdwNumDevs None,LPDWORD lpdwAPIVersion None,LPPHONEINITIALIZEEXPARAMS lpPhoneInitializeExParams None)
protected void None.OnStylusEnter(StylusEventArgs e None)
protected void None.OnKeyUp(KeyEventArgs e None)
public DateTime None.AddWeeks(DateTime time None,int weeks None)
public void None.ConvertStringBoolean(String stringVal None)
protected void None.OnMouseUp(MouseEventArgs e None)
public void None.NetworkToHostOrderLong(long networkByte None)
protected void None.RenderFooter(HtmlTextWriter writer None)
protected void None.OnMouseUp(MouseEventArgs e None)
void None None.ValidateBtn_Click(Object sender None,EventArgs e None)
WDFDEVICE None None.WdfWmiInstanceGetDevice(_In_ WDFWMIINSTANCE WmiInstance)
BOOLAPI None wininet.ReadUrlCacheEntryStream(_In_ HANDLE hUrlCacheStream,_In_ DWORD dwLocation,_Inout_ LPVOID lpBuffer,_Inout_ LPDWORD lpdwLen,_In_ DWORD dwReserved)
public DataRelation None.Add(String name None,DataColumn[] parentColumns None,DataColumn[] childColumns None)
protected void None.OnPreviewGiveFeedback(GiveFeedbackEventArgs e None)
public int None.Add(Object value None)
WDFIOTARGET None None.WdfDeviceGetIoTarget(_In_ WDFDEVICE Device)
VOID None None.WdfUsbTargetDeviceGetDeviceDescriptor(_In_ WDFUSBDEVICE UsbDevice,_Out_ PUSB_DEVICE_DESCRIPTOR UsbDeviceDescriptor)
DWORD WINAPI virtdisk.MirrorVirtualDisk(_In_ HANDLE VirtualDiskHandle,_In_ MIRROR_VIRTUAL_DISK_FLAG Flags,_In_ PMIRROR_VIRTUAL_DISK_PARAMETERS Parameters,_In_ LPOVERLAPPED Overlapped)
static bool None.EvaluatorMethod(System.Web.Mobile.MobileCapabilities capabilities None,String compareArgument None)
BOOL WINAPI None.RoTransformError(_In_ HRESULT oldError,_In_ HRESULT newError,_In_ HSTRING message)
Sub None None.ValidationFunctionName(source None None,arguments None None)
HRESULT None None.get_CurrentAutomationId([out None None,retval] BSTR *retVal)
ATOM WINAPI kernel32.FindAtom(_In_ LPCTSTR lpString)
ATOM WINAPI kernel32.FindAtomW(_In_ LPCTSTR lpString)
ATOM WINAPI kernel32.FindAtomA(_In_ LPCTSTR lpString)
PCCERT_CONTEXT WINAPI crypt32.CertGetSubjectCertificateFromStore(_In_ HCERTSTORE hCertStore,_In_ DWORD dwCertEncodingType,_In_ PCERT_INFO pCertId)
protected void None.OnPageIndexChanged(DataGridPageChangedEventArgs e None)
protected void None.GetCurrentValueAsFrozenCore(Freezable source None)
protected boolean None.OnDeserializeUnrecognizedElement(String elementName None,XmlReader reader None)
BOOL None shlwapi.PathIsLFNFileSpec(_In_ LPCTSTR pszName)
BOOL None shlwapi.PathIsLFNFileSpecW(_In_ LPCTSTR pszName)
BOOL None shlwapi.PathIsLFNFileSpecA(_In_ LPCTSTR pszName)
HRESULT None None.GetAuthentication([out None None,retval] X509EnrollmentAuthFlags *pValue)
public DateTime None.GetDateTime(int i None)
private void None.Form1_Load(Object sender None,EventArgs e None)
protected void None.TreeView1_SelectedNodeChanged(object sender None,EventArgs e None)
public void None.Merge(DataRow[] rows None,boolean preserveChanges None,MissingSchemaAction missingSchemaAction None)
BOOL WINAPI advapi32.CredFindBestCredential(_In_ LPCTSTR TargetName,_In_ DWORD Type,_In_ DWORD Flags,_Out_ PCREDENTIAL *Credential)
BOOL WINAPI advapi32.CredFindBestCredentialW(_In_ LPCTSTR TargetName,_In_ DWORD Type,_In_ DWORD Flags,_Out_ PCREDENTIAL *Credential)
BOOL WINAPI advapi32.CredFindBestCredentialA(_In_ LPCTSTR TargetName,_In_ DWORD Type,_In_ DWORD Flags,_Out_ PCREDENTIAL *Credential)
public None None.MissingMethodException(String message None,Exception inner None)
String None None.GetAttribute(String key None)
BOOL None None.IsVarTypeSignedInteger(_In_ VARTYPE vt)
HRESULT None None.get_CachedItemStatus([out None None,retval] BSTR *retVal)
BOOL WINAPI advapi32.CryptGetHashParam(_In_ HCRYPTHASH hHash,_In_ DWORD dwParam,_Out_ BYTE *pbData,_Inout_ DWORD *pdwDataLen,_In_ DWORD dwFlags)
HRESULT WINAPI webservices.WsReadStartElement(_In_ WS_XML_READER* reader,_In_opt_ WS_ERROR* error)
PCCRL_CONTEXT WINAPI crypt32.CertDuplicateCRLContext(_In_ PCCRL_CONTEXT pCrlContext)
public void None.Save(ConfigurationSaveMode saveMode None)
protected void None.OnWindowPositionChanged(Rect rcBoundingBox None)
private void None.treeView1_KeyDown(Object sender None,KeyEventArgs e None)
BOOL WINAPI None.CertStoreProvReadCRLCallback(_In_ HCERTSTOREPROV hStoreProv,_In_ PCCRL_CONTEXT pStoreCrlContext,_In_ DWORD dwFlags,_Out_ PCCRL_CONTEXT *ppProvCrlContext)
public void None.CopyBaseAttributes(WebControl controlSrc None)
protected void None.OnStylusButtonUp(StylusButtonEventArgs e None)
HRESULT None None.GetStreamCount([out] DWORD *pcInputStreams,[out] DWORD *pcOutputStreams)
protected void None.RemovedControl(Control control None)
HRESULT None None.DWordToLong(_In_ DWORD dwOperand,_Out_ LONG *plResult)
public void None.ApplyStyle(DataGridViewCellStyle dataGridViewCellStyle None)
BOOL None shlwapi.PathAddExtension(_Inout_ LPTSTR pszPath,_In_opt_ LPCTSTR pszExtension)
BOOL None shlwapi.PathAddExtensionW(_Inout_ LPTSTR pszPath,_In_opt_ LPCTSTR pszExtension)
BOOL None shlwapi.PathAddExtensionA(_Inout_ LPTSTR pszPath,_In_opt_ LPCTSTR pszExtension)
public void None.AppendSubBuilder(ControlBuilder subBuilder None)
NTSTATUS NTAPI advapi32.LsaQueryDomainInformationPolicy(_In_ LSA_HANDLE PolicyHandle,_In_ POLICY_DOMAIN_INFORMATION_CLASS InformationClass,_Out_ PVOID *Buffer)
public void None.SetSocketOption(SocketOptionLevel optionLevel None,SocketOptionName optionName None,int optionValue None)
HRESULT None None.TurnOff([out] IVMTask **turnOffTask)
public None None.MissingMethodException(String message None,Exception inner None)
public void None.Add(TabPage value None)
protected LeftRightAlignment None.RtlTranslateLeftRight(LeftRightAlignment align None)
HRESULT None None.SSIZETToDWordPtr(_In_ SSIZE_T cbOperand,_Out_ DWORD_PTR *pdwResult)
SECURITY_STATUS SEC_Entry secur32.AcceptSecurityContext(_In_opt_ PCredHandle phCredential,_Inout_opt_ PCtxtHandle phContext,_In_opt_ PSecBufferDesc pInput,_In_ ULONG fContextReq,_In_ ULONG TargetDataRep,_Inout_opt_ PCtxtHandle phNewContext,_Inout_opt_ PSecBufferDesc pOutput,_Out_ PULONG pfContextAttr,_Out_opt_ PTimeStamp ptsTimeStamp)
HRESULT None None.DWordPtrToInt64(_In_ DWORD_PTR dwOperand,_Out_ INT64 *pi64Result)
public None None.Inset(int left None,int top None,int right None,int bottom None)
HRESULT None None.get_CurrentNativeWindowHandle([out None None,retval] UIA_HWND *retVal)
void None None.Page_Load(Object sender None,EventArgs e None)
public Type None.GetType(String name None)
HRESULT None None.get_CurrentAcceleratorKey([out None None,retval] BSTR *retVal)
protected boolean None.ProcessMnemonic(char charCode None)
public Stream None.GetManifestResourceStream(Type type None,String name None)
public Object None.GetEditor(Type editorBaseType None)
ATOM WINAPI kernel32.GlobalFindAtom(_In_ LPCTSTR lpString)
ATOM WINAPI kernel32.GlobalFindAtomW(_In_ LPCTSTR lpString)
ATOM WINAPI kernel32.GlobalFindAtomA(_In_ LPCTSTR lpString)
protected void None.LoadViewState(Object savedState None)
NTSTATUS WINAPI certpoleng.PstGetTrustAnchors(_In_ PUNICODE_STRING pTargetName,_In_ DWORD cCriteria,_In_opt_ PCCERT_SELECT_CRITERIA rgpCriteria,_Out_ PSecPkgContext_IssuerListInfoEx *ppTrustedIssuers)
public void None.MergeStyle(Style s None)
public void None.Add(String key None,String text None)
public XmlElement None.CreateElement(String qualifiedName None,String namespaceURI None)
protected void None.BuildProfileTree(String parentId None,boolean calcViewState None)
WDFIOTARGET None None.WdfDeviceGetIoTarget(_In_ WDFDEVICE Device)
HRESULT None None.SetBuffer(INSSBuffer* pBuffer None)
protected void None.OnToolTipOpening(ToolTipEventArgs e None)
public int None.IndexOfAny(char[] anyOf None,int startIndex None,int count None)
protected String None.MapPathSecure(String virtualPath None)
ATOM WINAPI kernel32.AddAtom(_In_ LPCTSTR lpString)
ATOM WINAPI kernel32.AddAtomW(_In_ LPCTSTR lpString)
BOOL WINAPI crypt32.CertFreeCRLContext(_In_ PCCRL_CONTEXT pCrlContext)
public char None.GetChar(String name None)
public Type None.MakeGenericType(Type[] typeArguments None)
VOID WINAPI drt.DrtDeleteNullSecurityProvider(_In_ DRT_SECURITY_PROVIDER *pSecurityProvider)
DWORD WINAPI clusapi.ClusterResourceTypeControlAsUser(_In_ HCLUSTER hCluster,_In_ LPCWSTR lpszResourceTypeName,_In_opt_ HNODE hHostNode,_In_ DWORD dwControlCode,_In_opt_ LPVOID lpInBuffer,_In_ DWORD nInBufferSize,_Out_opt_ LPVOID lpOutBuffer,_In_ DWORD nOutBufferSize,_Out_opt_ LPDWORD lpBytesReturned)
private void None.showCheckedNodesButton_Click(Object sender None,EventArgs e None)
protected void None.OnRemoveTable(DataTable table None)
private void None.button1_Click(System.Object sender None,System.EventArgs e None)
public String None.Remove(int startIndex None,int count None)
public void None.InitializeCell(DataControlFieldCell cell None,DataControlCellType cellType None,DataControlRowState rowState None,int rowIndex None)
HRESULT None None.ByteToInt8(_In_ BYTE bOperand,_Out_ INT8 *pi8Result)
HRESULT WINAPI mssign32.SignerSignEx(_In_ DWORD dwFlags,_In_ SIGNER_SUBJECT_INFO *pSubjectInfo,_In_ SIGNER_CERT *pSignerCert,_In_ SIGNER_SIGNATURE_INFO *pSignatureInfo,_In_opt_ SIGNER_PROVIDER_INFO *pProviderInfo,_In_opt_ LPCWSTR pwszHttpTimeStamp,_In_opt_ PCRYPT_ATTRIBUTES psRequest,_In_opt_ LPVOID pSipData,_Out_ SIGNER_CONTEXT **ppSignerContext)
HRESULT None None.PathCchRemoveBackslashEx(_Inout_ PWSTR pszPath,_In_ size_t cchPath,_Out_opt_ PWSTR *ppszEnd,_Out_opt_ size_t *pcchRemaining)
protected void None.OnMouseUp(MouseEventArgs e None)
uint32 None dmwmibridgeprov.HostedInstallMethod([in] string param)
HRESULT None None.get_CurrentIsSelected([out None None,retval] BOOL *retVal)
public XmlNode None.ImportNode(XmlNode node None,boolean deep None)
HRESULT None None.RemoveAllPackets(DWORD dwExFlags None)
HRESULT None mobsync.GetScheduleCookie([out] SYNCSCHEDULECOOKIE *pSyncSchedCookie)
protected void None.OnMarginChanged(EventArgs e None)
protected void None.OnRightToLeftLayoutChanged(EventArgs e None)
HRESULT None None.ShortToUIntPtr(_In_ SHORT sOperand,_Out_ UINT_PTR *puResult)
HRESULT None None.GetEncryptionBltKey(VOID *pReadbackKey None,UINT KeySize None)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsEntryObjectInqNext(RPC_NS_HANDLE InquiryContext None,UUID *ObjUuid None)
DWORD WINAPI peerdist.PeerDistGetStatus(_In_ PEERDIST_INSTANCE_HANDLE hPeerDist,_Out_ PEERDIST_STATUS *pPeerDistStatus)
protected void None.CreateTemplatedUI(boolean doDataBind None)
LPTSTR None shlwapi.PathAddBackslash(_Inout_ LPTSTR lpszPath)
LPTSTR None shlwapi.PathAddBackslashW(_Inout_ LPTSTR lpszPath)
LPTSTR None shlwapi.PathAddBackslashA(_Inout_ LPTSTR lpszPath)
ULONG None httpapi.HttpAddUrl(_In_ HANDLE ReqQueueHandle,_In_ PCWSTR pFullyQualifiedUrl,PVOID pReserved None)
ATOM WINAPI kernel32.DeleteAtom(_In_ ATOM nAtom)
NTSTATUS None None.AuditAccountLogon(_In_ ULONG AuditId,_In_ BOOLEAN Success,_In_ PUNICODE_STRING Source,_In_ PUNICODE_STRING ClientName,_In_ PUNICODE_STRING MappedName,_In_ NTSTATUS Status)
public None None.EventLogPermissionEntry(EventLogPermissionAccess permissionAccess None,String machineName None)
public void None.ApplyStyle(DataGridViewCellStyle dataGridViewCellStyle None)
protected boolean None.IsInputChar(char charCode None)
public boolean None.IsOutlineVisible(PointF point None,Pen pen None)
BOOL WINAPI kernel32.FreeLibrary(_In_ HMODULE hModule)
HRESULT None None.ShortToChar(_In_ SHORT sOperand,_Out_ __wchar_t *pch)
DWORD None None.AMGetErrorText(HRESULT hr None,TCHAR *pBuffer None,DWORD MaxLen None)
NTSTATUS None None.WdfDmaTransactionInitializeUsingRequest(_In_ WDFDMATRANSACTION DmaTransaction,_In_ WDFREQUEST Request,_In_ PFN_WDF_PROGRAM_DMA EvtProgramDmaFunction,_In_ WDF_DMA_DIRECTION DmaDirection)
HRESULT None wuapi.get_SupportUrl([out] BSTR *retval)
public Object None.ConvertFrom(ITypeDescriptorContext context None,CultureInfo culture None,Object value None)
protected void None.OnMouseDown(MouseButtonEventArgs e None)
BOOLAPI None wininet.SetUrlCacheEntryInfo(_In_ LPCTSTR lpszUrlName,_In_ LPINTERNET_CACHE_ENTRY_INFO lpCacheEntryInfo,_In_ DWORD dwFieldControl)
BOOLAPI None wininet.SetUrlCacheEntryInfoW(_In_ LPCTSTR lpszUrlName,_In_ LPINTERNET_CACHE_ENTRY_INFO lpCacheEntryInfo,_In_ DWORD dwFieldControl)
BOOLAPI None wininet.SetUrlCacheEntryInfoA(_In_ LPCTSTR lpszUrlName,_In_ LPINTERNET_CACHE_ENTRY_INFO lpCacheEntryInfo,_In_ DWORD dwFieldControl)
BOOL WINAPI crypt32.CertCompareCertificateName(_In_ DWORD dwCertEncodingType,_In_ PCERT_NAME_BLOB pCertName1,_In_ PCERT_NAME_BLOB pCertName2)
BOOL WINAPI advapi32.CryptGetHashParam(_In_ HCRYPTHASH hHash,_In_ DWORD dwParam,_Out_ BYTE *pbData,_Inout_ DWORD *pdwDataLen,_In_ DWORD dwFlags)
public void None.ScrollControlIntoView(Control activeControl None)
private void None.ShowLineAndAlignment(PaintEventArgs e None)
private void None.OnDelete(Object sender None,System.EventArgs e None)
HRESULT None faxcom.put_FaxNumber([in] BSTR newVal)
void None None.ApplySort(ListSortDescriptionCollection sorts None)
public boolean None.CanMove(ToolStrip toolStripToDrag None)
public PropertyItem None.GetPropertyItem(int propid None)
DWORD None dhcpsapi.DhcpServerRestoreDatabase(_In_ LPWSTR ServerIpAddress,_In_ LPWSTR Path)
protected void None.OnClick(EventArgs e None)
protected void None.OnStylusUp(StylusEventArgs e None)
void None None.Page_Load(Object sender None,System.EventArgs e None)
public String None.ResolveUrl(String relativeUrl None)
private void None.listDragTarget_DragOver(Object sender None,System.Windows.Forms.DragEventArgs e None)
LONG WINAPI tapi32.phoneGetVolume(HPHONE hPhone None,DWORD dwHookSwitchDev None,LPDWORD lpdwVolume None)
private void None.listDragTarget_DragLeave(Object sender None,System.EventArgs e None)
private void None.InsertShipper(Object source None,System.EventArgs e None)
HCERTSTORE WINAPI crypt32.PFXImportCertStore(_In_ CRYPT_DATA_BLOB *pPFX,_In_ LPCWSTR szPassword,_In_ DWORD dwFlags)
long None None.strtol(const char *nptr,char **endptr None,int base None)
DWORD WINAPI dhcpsapi.DhcpDeleteClassV6(_In_ LPWSTR ServerIpAddress,_In_ DWORD ReservedMustBeZero,_In_ LPWSTR ClassName)
SerializableAttribute None None.ClassInterfaceAttribute(ClassInterfaceType.AutoDual None None)
protected void None.CopyProperties(DataControlField newField None)
public int None.IndexOf(Installer value None)
HRESULT None None.IsProtected([out] BOOL *pProtected)
protected void None.OnKeyPress(KeyPressEventArgs e None)
public void None.CloseWebPart(WebPart webPart None)
private void None.whatIsChecked_Click(Object sender None,System.EventArgs e None)
HRESULT None d3d12.GetHeapProperties([out None None,optional] D3D12_HEAP_PROPERTIES *pHeapProperties,[out None None,optional] D3D12_HEAP_FLAGS *pHeapFlags)
public DayOfWeek None.GetDayOfWeek(DateTime time None)
HRESULT None None.PathCchAddExtension(_Inout_ PWSTR pszPath,_In_ size_t cchPath,_In_ PCWSTR pszExt)
NTSTATUS None None.CallPackage(_In_ PUNICODE_STRING AuthenticationPackage,_In_ PVOID ProtocolSubmitBuffer,_In_ ULONG SubmitBufferLength,_Out_ PVOID *ProtocolReturnBuffer,_Out_ PULONG ReturnBufferLength,_Out_ PNTSTATUS ProtocolStatus)
protected void None.OnDrop(DragEventArgs e None)
protected void None.OnMouseRightButtonUp(MouseButtonEventArgs e None)
public None None.NotImplementedException(String message None)
HRESULT None None.get_CachedIsSelected([out None None,retval] BOOL *retVal)
HCERTSTORE WINAPI crypt32.CertDuplicateStore(_In_ HCERTSTORE hCertStore)
int None None.main( None None)
public int None.LastIndexOf(String source None,char value None)
BOOL None kernel32.BackupRead(_In_ HANDLE hFile,_Out_ LPBYTE lpBuffer,_In_ DWORD nNumberOfBytesToRead,_Out_ LPDWORD lpNumberOfBytesRead,_In_ BOOL bAbort,_In_ BOOL bProcessSecurity,_Out_ LPVOID *lpContext)
HRESULT None None.GetTimeSeekResult([out] QWORD *pqwStartTime,[out] QWORD *pqwStopTime,[out] QWORD *pqwDuration)
private void None.textBox1_Validating(Object sender None,System.ComponentModel.CancelEventArgs e None)
HRESULT None None.get_ProxyFactoryMapping([out None None,retval] IUIAutomationProxyFactoryMapping **factoryMapping)
protected void None.OnKeyPress(KeyPressEventArgs e None)
HRESULT None msctf.SetInputScope(_In_ HWND hwnd,_In_ InputScope inputscope)
SerializableAttribute None None.ClassInterfaceAttribute(ClassInterfaceType.None None None)
HRESULT None None.AttributeGetBlob(IMFAttributes *pAttributes None)
DWORD WINAPI peerdist.PeerDistServerCloseStreamHandle(_In_ PEERDIST_INSTANCE_HANDLE hPeerDist,_In_ PEERDIST_STREAM_HANDLE hStream)
DWORD None dhcpsapi.DhcpEnumOptionsV5(_In_ LPWSTR ServerIpAddress,_In_ DWORD Flags,_In_ LPWSTR ClassName,_In_ LPWSTR VendorName,_Inout_ DHCP_RESUME_HANDLE *ResumeHandle,_In_ DWORD PreferredMaximum,_Out_ LPDHCP_OPTION_ARRAY *Options,_Out_ DWORD *OptionsRead,_Out_ DWORD *OptionsTotal)
HRESULT None None.get_CachedProviderDescription([out None None,retval] BSTR *retVal)
HRESULT None None.get_CurrentSelectionContainer([out None None,retval] IUIAutomationElement **retVal)
protected void None.PerformDataBinding(IEnumerable data None)
public XmlCDataSection None.CreateCDataSection(String data None)
public int None.GetNodeCount(boolean includeSubTrees None)
public IAsyncResult None.BeginGetResponse(AsyncCallback callback None,Object state None)
public DateTime None.AddWeeks(DateTime time None,int weeks None)
protected void None.OnPreviewMouseUp(MouseButtonEventArgs e None)
public boolean None.WaitForInputIdle(int milliseconds None)
protected void None.OnPaint(PaintEventArgs e None)
private void None.ShowPropertiesOfSlateBlue(PaintEventArgs e None)
protected void None.OnDeleting(SqlDataSourceCommandEventArgs e None)
private void None.button1_Click(Object sender None,EventArgs e None)
public void None.Install(IDictionary stateSaver None)
function None None.GetQuantity(productID None None,elemToUpdate None None,productLabelElem None None,buttonElem None None)
public int None.IndexOf(Installer value None)
public void None.AppendSubBuilder(ControlBuilder subBuilder None)
protected void None.OnRowEditing(GridViewEditEventArgs e None)
public void None.ChangeMode(DetailsViewMode newMode None)
HRESULT None shlwapi.PathMatchSpecEx(_In_ LPCTSTR pszFile,_In_ LPCTSTR pszSpec,_In_ DWORD dwFlags)
HRESULT None shlwapi.PathMatchSpecExW(_In_ LPCTSTR pszFile,_In_ LPCTSTR pszSpec,_In_ DWORD dwFlags)
HRESULT None shlwapi.PathMatchSpecExA(_In_ LPCTSTR pszFile,_In_ LPCTSTR pszSpec,_In_ DWORD dwFlags)
protected boolean None.OnDeserializeUnrecognizedElement(String elementName None,XmlReader reader None)
public XmlReadMode None.ReadXml(String fileName None)
public String None.GetItemText(Object item None)
public Type None.MakeGenericType(Type[] typeArguments None)
HRESULT None None.get_CurrentHelp([out None None,retval] BSTR *pszHelp)
public void None.SetLength(long value None)
HRESULT None None.get_CachedFrameworkId([out None None,retval] BSTR *retVal)
HRESULT None None.LongToInt8(_In_ LONG lOperand,_Out_ INT8 *pi8Result)
public None None.StorePermission(PermissionState state None)
protected void None.OnBeforeRollback(IDictionary savedState None)
HRESULT None certenroll.get_Opened([out] VARIANT_BOOL *pValue)
protected void None.LinqDataSource_Updating(object sender None,LinqDataSourceUpdateEventArgs e None)
HRESULT None None.get_ExtendedProperties([out None None,retval] IInkExtendedProperties **ExtendedProperties)
public None None.WorkflowMarkupSerializationException(String message None,int lineNumber None,int columnNumber None)
protected void None.CopyProperties(DataControlField newField None)
BOOL None shlwapi.PathIsNetworkPath(_In_ LPCTSTR pszPath)
BOOL None shlwapi.PathIsNetworkPathW(_In_ LPCTSTR pszPath)
BOOL None shlwapi.PathIsNetworkPathA(_In_ LPCTSTR pszPath)
protected void None.OnSelectedIndexChanging(GridViewSelectEventArgs e None)
DWORD WINAPI dhcpsapi.DhcpEnumClassesV6(_In_ LPWSTR ServerIpAddress,_In_ DWORD ReservedMustBeZero,_Inout_ DHCP_RESUME_HANDLE *ResumeHandle,_In_ DWORD PreferredMaximum,_Out_ LPDHCP_CLASS_INFO_ARRAY_V6 *ClassInfoArray,_Out_ DWORD *nRead,_Out_ DWORD *nTotal)
int None None.vsnprintf_s(char *buffer None,size_t sizeOfBuffer None,size_t count None,const char *format,va_list argptr None)
public void None.EnumerateMetafile(Metafile metafile None,RectangleF destRect None,EnumerateMetafileProc callback None,IntPtr callbackData None,ImageAttributes imageAttr None)
NTSTATUS WINAPI bcrypt.BCryptExportKey(_In_ BCRYPT_KEY_HANDLE hKey,_In_ BCRYPT_KEY_HANDLE hExportKey,_In_ LPCWSTR pszBlobType,_Out_ PUCHAR pbOutput,_In_ ULONG cbOutput,_Out_ ULONG *pcbResult,_In_ ULONG dwFlags)
HRESULT None propsys.InitVariantFromString(_In_ PCWSTR psz,_Out_ VARIANT *pvar)
DWORD DHCP_API_FUNCTION dhcpsapi.DhcpHlprAddV4PolicyRange(_Inout_ LPDHCP_POLICY Policy,_In_ LPDHCP_IP_RANGE Range)
protected SiteMapNode None.ResolveSiteMapNode(HttpContext context None)
public String None.Replace(String input None,String replacement None,int count None,int startat None)
public char None.GetCharFromPosition(Point pt None)
LPCTSTR None shlwapi.UrlGetLocation(_In_ PCTSTR pszURL)
LPCTSTR None shlwapi.UrlGetLocationW(_In_ PCTSTR pszURL)
LPCTSTR None shlwapi.UrlGetLocationA(_In_ PCTSTR pszURL)
HNODE WINAPI clusapi.OpenClusterNode(_In_ HCLUSTER hCluster,_In_ LPCWSTR lpszNodeName)
uint32 None cimwin32.Copy([in] string FileName)
protected void None.OnBackgroundImageChanged(EventArgs e None)
HRESULT None None.SizeTToLong(_In_ size_t cbOperand,_Out_ LONG *plResult)
HRESULT None None.GetAuthFlags([out None None,retval] X509EnrollmentAuthFlags *pValue)
static String None.IsFileURI(String path None)
public StatusBarPanel None.Add(String text None)
protected void None.OnImeModeChanged(EventArgs e None)
protected void None.OnMove(EventArgs e None)
protected void None.RaiseBubbleEvent(Object source None,EventArgs args None)
private void None.CreatePointsAndSizes(PaintEventArgs e None)
NTSTATUS None None.SpSaveCredentials(_In_ LSA_SEC_HANDLE CredentialHandle,_In_ PSecBuffer Credentials)
ULONG None httpapi.HttpCreateRequestQueue(_In_ HTTPAPI_VERSION Version,_In_opt_ PCWSTR pName,_In_opt_ PSECURITY_ATTRIBUTES pSecurityAttributes,_In_opt_ ULONG Flags,_Out_ PHANDLE pReqQueueHandle)
NTSTATUS WINAPI bcrypt.BCryptCreateHash(_Inout_ BCRYPT_ALG_HANDLE hAlgorithm,_Out_ BCRYPT_HASH_HANDLE *phHash,_Out_ PUCHAR pbHashObject,_In_opt_ ULONG cbHashObject,_In_opt_ PUCHAR pbSecret,_In_ ULONG cbSecret,_In_ ULONG dwFlags)
BOOL None shell32.PathYetAnotherMakeUniqueName(_Out_ PWSTR pszUniqueName,_In_ PCWSTR pszPath,_In_opt_ PCWSTR pszShort,_In_opt_ PCWSTR pszFileSpec)
HRESULT None None.LongToUChar(_In_ LONG lOperand,_Out_ UCHAR *pch)
protected None None.ResourceReferenceKeyNotFoundException(SerializationInfo info None,StreamingContext context None)
DWORD WINAPI peerdist.PeerDistClientCancelAsyncOperation(_In_ PEERDIST_INSTANCE_HANDLE hPeerDist,_In_ PEERDIST_CONTENT_HANDLE hContentHandle,_In_opt_ LPOVERLAPPED pOverlapped)
protected String None.MapPathSecure(String virtualPath None)
protected void None.DataBind(boolean raiseOnDataBinding None)
protected boolean None.OnDeserializeUnrecognizedElement(String elementName None,XmlReader reader None)
public void None.RenderEndTag(HtmlTextWriter writer None)
public XmlElement None.CreateElement(String qualifiedName None,String namespaceURI None)
public DateTime None.AddHours(DateTime time None,int hours None)
BOOL WINAPI crypt32.CryptSIPPutSignedDataMsg(_In_ SIP_SUBJECTINFO *pSubjectInfo,_In_ DWORD dwEncodingType,_Out_ DWORD *pdwIndex,_In_ DWORD cbSignedDataMsg,_In_ BYTE *pbSignedDataMsg)
NTSTATUS WINAPI certpoleng.PstValidate(_In_opt_ PUNICODE_STRING pTargetName,_In_ BOOL bIsClient,_In_opt_ CERT_USAGE_MATCH *pRequestedIssuancePolicy,_In_opt_ HCERTSTORE *phAdditionalCertStore,_In_ PCCERT_CONTEXT pCert,_Out_opt_ GUID *pProvGUID)
protected void None.OnPaint(PaintEventArgs e None)
public void None.Remove(Parameter parameter None)
protected void None.RaiseDataSourceChangedEvent(EventArgs e None)
BOOL None shlwapi.UrlIsOpaque(_In_ PCTSTR pszURL)
BOOL None shlwapi.UrlIsOpaqueW(_In_ PCTSTR pszURL)
BOOL None shlwapi.UrlIsOpaqueA(_In_ PCTSTR pszURL)
HRESULT None tapi3.get_CallHub([out] ITCallHub **ppCallHub)
public void None.SaveAs(String filename None,boolean includeHeaders None)
NTSTATUS WINAPI bcrypt.BCryptKeyDerivation(_In_ BCRYPT_KEY_HANDLE hKey,_In_opt_ BCryptBufferDesc *pParameterList,_Out_ PUCHAR pbDerivedKey,_In_ ULONG cbDerivedKey,_Out_ ULONG *pcbResult,_In_ ULONG dwFlags)
HRESULT None None.PathCchRemoveBackslash(_Inout_ PWSTR pszPath,_In_ size_t cchPath)
protected void None.OnStylusInAirMove(StylusEventArgs e None)
long None None.ToInt64(IFormatProvider provider None)
BOOL None shlwapi.PathIsRoot(_In_ LPCTSTR pPath)
BOOL None shlwapi.PathIsRootW(_In_ LPCTSTR pPath)
BOOL None shlwapi.PathIsRootA(_In_ LPCTSTR pPath)
BOOLEAN None None.KeReadStateTimer(_In_ PKTIMER Timer)
public Type None.MakeGenericType(Type[] typeArguments None)
void None None.Page_Load(Object sender None,System.EventArgs e None)
public None None.ConfigurationProperty(String name None,Type type None,Object defaultValue None,ConfigurationPropertyOptions options None)
HRESULT None None.ULongLongToPtrdiffT(_In_ ULONGLONG ullOperand,_Out_ ptrdiff_t *pcbResult)
HRESULT None None.ULongLongToLongPtr(_In_ ULONGLONG ullOperand,_Out_ LONG_PTR *plResult)
double None None.fabs(double x None)
BOOL WINAPI advapi32.CryptGenKey(_In_ HCRYPTPROV hProv,_In_ ALG_ID Algid,_In_ DWORD dwFlags,_Out_ HCRYPTKEY *phKey)
protected void None.OnStylusButtonUp(StylusButtonEventArgs e None)
HRESULT None None.GetCachePath([out None None,retval] BSTR *pValue)
LRESULT CALLBACK None.WindowProc(HWND hwnd None,WM_IME_NOTIFY None None,WPARAM wParam None,LPARAM lParam None)
public boolean None.IsPresent(Object feature None)
BOOL WINAPI crypt32.CryptMsgEncodeAndSignCTL(_In_ DWORD dwMsgEncodingType,_In_ PCTL_INFO pCtlInfo,_In_ PCMSG_SIGNED_ENCODE_INFO pSignInfo,_In_ DWORD dwFlags,_Out_ BYTE *pbEncoded,_Inout_ DWORD *pcbEncoded)
BOOL None wininet.GetUrlCacheGroupAttribute(_In_ GROUPID gid,_Reserved_ DWORD dwFlags,_In_ DWORD dwAttributes,_Out_ LPINTERNET_CACHE_GROUP_INFO lpGroupInfo,_Inout_ LPDWORD lpdwGroupInfo,_Reserved_ LPVOID lpReserved)
BOOL None wininet.GetUrlCacheGroupAttributeW(_In_ GROUPID gid,_Reserved_ DWORD dwFlags,_In_ DWORD dwAttributes,_Out_ LPINTERNET_CACHE_GROUP_INFO lpGroupInfo,_Inout_ LPDWORD lpdwGroupInfo,_Reserved_ LPVOID lpReserved)
BOOL None wininet.GetUrlCacheGroupAttributeA(_In_ GROUPID gid,_Reserved_ DWORD dwFlags,_In_ DWORD dwAttributes,_Out_ LPINTERNET_CACHE_GROUP_INFO lpGroupInfo,_Inout_ LPDWORD lpdwGroupInfo,_Reserved_ LPVOID lpReserved)
protected ContentAlignment None.RtlTranslateContent(ContentAlignment align None)
BOOL None shlwapi.PathIsUNC(_In_ LPCTSTR pszPath)
BOOL None shlwapi.PathIsUNCW(_In_ LPCTSTR pszPath)
BOOL None shlwapi.PathIsUNCA(_In_ LPCTSTR pszPath)
SerializableAttribute None None.ClassInterfaceAttribute(ClassInterfaceType.None None None)
protected void None.RenderChildren(HtmlTextWriter writer None)
protected void None.OnMove(EventArgs e None)
HRESULT None None.get_CurrentCanRotate([out None None,retval] BOOL *retVal)
HRESULT None None.AllocateBuffer(DWORD dwMaxBufferSize None,INSSBuffer** ppBuffer None)
protected void None.OnWebPartsDisconnecting(WebPartConnectionsCancelEventArgs e None)
HRESULT None None.PathCchAddBackslashEx(_Inout_ PWSTR pszPath,_In_ size_t cchPath,_Out_opt_ PWSTR *ppszEnd,_Out_opt_ size_t *pcchRemaining)
protected boolean None.OnDeserializeUnrecognizedElement(String elementName None,XmlReader reader None)
protected boolean None.OnDeserializeUnrecognizedElement(String elementName None,XmlReader reader None)
protected boolean None.IsElementName(String elementName None)
BOOL WINAPI advapi32.CryptDestroyKey(_In_ HCRYPTKEY hKey)
HRESULT None mfplay.MFPCreateMediaPlayer(_In_ LPCWSTR pwszURL,_In_ BOOL fStartPlayback,_In_ MFP_CREATION_OPTIONS creationOptions,_In_ IMFPMediaPlayerCallback *pCallback,_In_ HWND hWnd,_Out_ IMFPMediaPlayer **ppMediaPlayer)
HRESULT None certadm.CertSrvBackupEnd(_In_ HCSBC hbc)
protected None None.SequenceFullException(SerializationInfo info None,StreamingContext context None)
BOOL None shlwapi.UrlIs(_In_ PCTSTR pszUrl,URLIS UrlIs None)
BOOL None shlwapi.UrlIsW(_In_ PCTSTR pszUrl,URLIS UrlIs None)
BOOL None shlwapi.UrlIsA(_In_ PCTSTR pszUrl,URLIS UrlIs None)
void None None.NetworkToHostOrder_Long(__int64 networkByte None)
protected Duration None.GetNaturalDuration(Clock clock None)
public None None.HttpContext(HttpRequest request None,HttpResponse response None)
protected void None.GridVScrolled(Object sender None,ScrollEventArgs se None)
BOOL None wintrust.WintrustLoadFunctionPointers(_In_ GUID *pgActionID,_Out_ CRYPT_PROVIDER_FUNCTIONS *pPfns)
BOOL None wininet.DeleteUrlCacheGroup(_In_ GROUPID GroupId,_In_ DWORD dwFlags,_Reserved_ LPVOID lpReserved)
public void None.ApplyStyle(DataGridViewCellStyle dataGridViewCellStyle None)
protected void None.OnAfterSelect(TreeViewEventArgs e None)
public void None.WriteLine(char[] buffer None,int index None,int count None)
ATOM WINAPI kernel32.DeleteAtom(_In_ ATOM nAtom)
HRESULT None None.IntToUShort(_In_ INT iOperand,_Out_ USHORT *pusResult)
NTSTATUS None None.SpSealMessage(_In_ LSA_SEC_HANDLE ContextHandle,_In_ ULONG QualityOfProtection,_Inout_ PSecBufferDesc MessageBuffers,_In_ ULONG MessageSequenceNumber)
HRESULT None None.get_CachedCanRotate([out None None,retval] BOOL *retVal)
protected boolean None.OnDeserializeUnrecognizedElement(String elementName None,XmlReader reader None)
public String None.GetEditableDesignerRegionContent(EditableDesignerRegion region None)
public DateTime None.AddMinutes(DateTime time None,int minutes None)
HRESULT None None.GetKeySystem(DWORD index None,BSTR *pType None)
HRESULT None None.LongPtrToUShort(_In_ LONG_PTR lOperand,_Out_ USHORT *pusResult)
protected void None.OnClick(EventArgs e None)
HINTERNET None wininet.GopherOpenFile(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszLocator,_In_ LPCTSTR lpszView,_In_ DWORD dwFlags,_In_ DWORD_PTR dwContext)
HINTERNET None wininet.GopherOpenFileW(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszLocator,_In_ LPCTSTR lpszView,_In_ DWORD dwFlags,_In_ DWORD_PTR dwContext)
HINTERNET None wininet.GopherOpenFileA(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszLocator,_In_ LPCTSTR lpszView,_In_ DWORD dwFlags,_In_ DWORD_PTR dwContext)
HRESULT None certenroll.get_PrivateKey([out] IX509PrivateKey **ppValue)
HRESULT None wuapi.get_Categories([out] ICategoryCollection **retval)
DWORD None dhcpsapi.DhcpRemoveOptionV6(_In_ LPWSTR ServerIpAddress,_In_ DWORD Flags,_In_ DHCP_OPTION_ID OptionID,_In_ WCHAR *ClassName,_In_ WCHAR *VendorName)
HRESULT None None.InsertPacket(DWORD dwPacketNum None,IWMSPacket* pPacket None,DWORD dwExFlags None)
protected void None.OnWebPartsConnected(WebPartConnectionsEventArgs e None)
VOID FORCEINLINE None.TpSetCallbackLongFunction(_Inout_ PTP_CALLBACK_ENVIRON CallbackEnviron)
HRESULT WINAPI None.RoFreeParameterizedTypeExtra(_In_ ROPARAMIIDHANDLE extra)
protected void None.GetSerializationData(SerializationInfo info None,StreamingContext context None)
protected void None.ConnectWebPart(WebPart webPart None)
public int None.Add(Object item None)
HRESULT None shlwapi.PathCreateFromUrlAlloc(_In_ PCWSTR pszIn,_Out_ PWSTR *ppszOut,DWORD dwFlags None)
LONG WINAPI winscard.SCardListInterfaces(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCard,_Out_ LPGUID pguidInterfaces,_Inout_ LPDWORD pcguidInterfaces)
LONG WINAPI winscard.SCardListInterfacesW(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCard,_Out_ LPGUID pguidInterfaces,_Inout_ LPDWORD pcguidInterfaces)
LONG WINAPI winscard.SCardListInterfacesA(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCard,_Out_ LPGUID pguidInterfaces,_Inout_ LPDWORD pcguidInterfaces)
DWORD DHCP_API_FUNCTION dhcpsapi.DhcpV4FailoverGetAddressStatus(_In_opt_ LPWSTR ServerIpAddress,_In_ DHCP_IP_ADDRESS SubnetAddress,_Inout_ LPDWORD pStatus)
BOOL None shlwapi.UrlIsFileUrl(LPCTSTR pszUrl None)
BOOL None shlwapi.UrlIsFileUrlW(LPCTSTR pszUrl None)
BOOL None shlwapi.UrlIsFileUrlA(LPCTSTR pszUrl None)
private void None.Page_Load(Object sender None,System.EventArgs e None)
public XmlNode None.InsertBefore(XmlNode newChild None,XmlNode refChild None)
HRESULT None None.UIntToLongPtr(_In_ UINT uOperand,_Out_ LONGPTR *plResult)
protected void None.OnDrop(DragEventArgs e None)
HRESULT None None.GetCurrentSelection([out None None,retval] IUIAutomationElementArray **pvarSelectedChildren)
protected String None.MapPathSecure(String virtualPath None)
public int None.GetDaysInMonth(int year None,int month None)
protected void None.OnIsStylusCaptureWithinChanged(DependencyPropertyChangedEventArgs e None)
public String None.Replace(String input None,String replacement None,int count None,int startat None)
protected void None.AddAttributesToRender(HtmlTextWriter writer None)
protected void None.SetStyle(ControlStyles flag None,boolean value None)
public IAsyncResult None.BeginRead(byte[] buffer None,int offset None,int count None,AsyncCallback asyncCallback None,Object asyncState None)
protected void None.OnTemplateChanged(ControlTemplate oldTemplate None,ControlTemplate newTemplate None)
BOOLAPI None wininet.SetUrlCacheEntryGroup(_In_ LPCTSTR lpszUrlName,_In_ DWORD dwFlags,_In_ GROUPID GroupId,_In_ LPBYTE pbGroupAttributes,_In_ DWORD cbGroupAttributes,_In_ LPVOID lpReserved)
BOOLAPI None wininet.SetUrlCacheEntryGroupW(_In_ LPCTSTR lpszUrlName,_In_ DWORD dwFlags,_In_ GROUPID GroupId,_In_ LPBYTE pbGroupAttributes,_In_ DWORD cbGroupAttributes,_In_ LPVOID lpReserved)
BOOLAPI None wininet.SetUrlCacheEntryGroupA(_In_ LPCTSTR lpszUrlName,_In_ DWORD dwFlags,_In_ GROUPID GroupId,_In_ LPBYTE pbGroupAttributes,_In_ DWORD cbGroupAttributes,_In_ LPVOID lpReserved)
public None None.ConnectionProviderAttribute(String displayName None)
long None None.strtol(const char *nptr,char **endptr None,int base None)
DWORD None dhcpsapi.DhcpSetOptionInfoV6(_In_ LPWSTR ServerIpAddress,_In_ DWORD Flags,_In_ DHCP_OPTION_ID OptionID,_In_ WCHAR *ClassName,_In_ WCHAR *VendorName,_In_ LPDHCP_OPTION OptionInfo)
uint32 None cimwin32.SetPowerState([in] uint16 PowerState,[in] datetime Time)
public void None.InitializeCell(DataControlFieldCell cell None,DataControlCellType cellType None,DataControlRowState rowState None,int rowIndex None)
BOOL None None.WlxStartApplication(_In_ PVOID pWlxContext,_In_ PWSTR pszDesktopName,_In_ PVOID pEnvironment,_In_ PWSTR pszCmdLine)
SerializableAttribute None None.AttributeUsageAttribute(AttributeTargets.Struct None None)
BOOL WINAPI kernel32.InitAtomTable(_In_ DWORD nSize)
protected ContentAlignment None.RtlTranslateContent(ContentAlignment align None)
private void None.Page_Init(Object sender None,EventArgs e None)
NTSTATUS WINAPI certpoleng.PstMapCertificate(_In_ PCCERT_CONTEXT pCert,_Out_ LSA_TOKEN_INFORMATION_TYPE *pTokenInformationType,_Out_ PVOID *ppTokenInformation)
private void None.On_Click(Object source None,System.EventArgs e None)
uint None None.countbits(in uint value)
HRESULT None None.get_CurrentCanMove([out None None,retval] BOOL *retVal)
DWORD None mprapi.MprConfigInterfaceGetInfo(_In_ HANDLE hMprConfig,_In_ HANDLE hRouterInterface,_In_ DWORD dwLevel,_Inout_ LPBYTE *lplpBuffer,_Out_ LPDWORD lpdwBufferSize)
ULONG None httpapi.HttpReceiveHttpRequest(_In_ HANDLE ReqQueueHandle,_In_ HTTP_REQUEST_ID RequestId,_In_ ULONG Flags,_Out_ PHTTP_REQUEST pRequestBuffer,_In_ ULONG RequestBufferLength,_Out_opt_ PULONG pBytesReceived,_In_opt_ LPOVERLAPPED pOverlapped)
public void None.ReadXmlSchema(Stream stream None)
private void None.Form1_Load(Object sender None,EventArgs e None)
HRESULT WINAPI None.EngineAdapterCreateEnrollment(_Inout_ PWINBIO_PIPELINE Pipeline)
DWORD None mpr.WNetGetProviderName(_In_ DWORD dwNetType,_Out_ LPTSTR lpProviderName,_Inout_ LPDWORD lpBufferSize)
DWORD None mpr.WNetGetProviderNameW(_In_ DWORD dwNetType,_Out_ LPTSTR lpProviderName,_Inout_ LPDWORD lpBufferSize)
DWORD None mpr.WNetGetProviderNameA(_In_ DWORD dwNetType,_Out_ LPTSTR lpProviderName,_Inout_ LPDWORD lpBufferSize)
protected void None.RaiseBubbleEvent(Object source None,EventArgs args None)
HRESULT None None.LongLongToChar(_In_ LONGLONG llOperand,_Out_ CHAR *pch)
DWORD DHCP_API_FUNCTION dhcpsapi.DhcpHlprResetV4PolicyExpr(_Inout_ LPDHCP_POLICY Policy)
long None None.labs(long n None)
public None None.HttpContext(HttpRequest request None,HttpResponse response None)
protected boolean None.LoadPostData(String postDataKey None,NameValueCollection postCollection None)
HRESULT None wuapi.get_ExpirationDate([out] DATE *retval)
public Object None.ConvertFrom(ITypeDescriptorContext typeDescriptorContext None,CultureInfo cultureInfo None,Object source None)
public None None.MissingMethodException(String message None,Exception inner None)
private void None.showCheckedNodesButton_Click(Object sender None,EventArgs e None)
BOOL None schannel.SslCrackCertificate(_In_ PUCHAR pbCertificate,_In_ DWORD dwCertificate,_In_ DWORD dwFlags,_Out_ PX509Certificate *ppCertificate)
HRESULT None None.UIntToLong(_In_ UINT uOperand,_Out_ LONG *plResult)
HRESULT None None.ULongLongToSizeT(_In_ ULONGLONG ullOperand,_Out_ size_t *pcbResult)
BOOL WINAPI wintrust.CryptCATAdminResolveCatalogPath(_In_ HCATADMIN hCatAdmin,_In_ WCHAR *pwszCatalogFile,_Inout_ CATALOG_INFO *psCatInfo,_In_ DWORD dwFlags)
protected boolean None.OnServerValidate(String value None)
protected void None.BuildProfileTree(String parentId None,boolean calcViewState None)
protected void None.OnIsMouseCapturedChanged(DependencyPropertyChangedEventArgs e None)
BOOL None None.WlxSetReturnDesktop(_In_ HANDLE hWlx,_In_ PWLX_DESKTOP pDesktop)
public Type None.MakeGenericType(Type[] typeArguments None)
HRESULT None None.LongLongToShort(_In_ LONGLONG llOperand,_Out_ SHORT *psResult)
public BindingExpression None.SetBinding(DependencyProperty dp None,String path None)
VOID WINAPI drt.DrtDeleteDerivedKeySecurityProvider(_In_ DRT_SECURITY_PROVIDER *pSecurityProvider)
public None None.StreamReader(String path None,Encoding encoding None,boolean detectEncodingFromByteOrderMarks None,int bufferSize None)
protected String None.EncodeAttributeValue(String value None,boolean fEncode None)
public None None.ImageClickEventArgs(int x None,int y None)
BOOL WINAPI advapi32.InitializeAcl(_Out_ PACL pAcl,_In_ DWORD nAclLength,_In_ DWORD dwAclRevision)
protected void None.OnParametersChanged(EventArgs e None)
LONG WINAPI winscard.SCardAudit(_In_ SCARDCONTEXT hContext,_In_ DWORD dwEvent)
HRESULT None None.GetCachedChildren([out None None,retval] IUIAutomationElementArray **children)
public None None.MissingMethodException(String message None,Exception inner None)
private void None.showCheckedNodesButton_Click(Object sender None,EventArgs e None)
protected void None.OnItemCreated(DataListItemEventArgs e None)
HRESULT None faxcom.put_Priority([in] LONG newVal)
void None None.Page_Load(Object sender None,System.EventArgs e None)
Uint32 None wmiprvsd.Load([in] string Namespace,[in] string User,[in] string Locale,[in] string Provider,[in] string TransactionIdentifier)
void None None.Page_Load(Object sender None,System.EventArgs e None)
public WebPart None.AddWebPart(WebPart webPart None,WebPartZoneBase zone None,int zoneIndex None)
errno_t None None._fcvt_s(char* buffer None,size_t sizeInBytes None,double value None,int count None,int *dec None,int *sign None)
public None None.ConfigurationProperty(String name None,Type type None,Object defaultValue None,ConfigurationPropertyOptions options None)
HRESULT WINAPI None.EngineAdapterCreateEnrollment(_Inout_ PWINBIO_PIPELINE Pipeline)
static String None.IsFileURI(String path None)
public void None.DownloadFileGroupAsyncCancel(String groupName None)
public void None.NetworkToHostOrderInteger(int networkByte None)
HRESULT None None.get_ReservedMixedAttributeValue([out None None,retval] IUnknown **mixedAttributeValue)
BOOL None shlwapi.PathSearchAndQualify(_In_ LPCTSTR pcszPath,_Out_ LPTSTR pszFullyQualifiedPath,_In_ UINT cchFullyQualifiedPath)
BOOL None shlwapi.PathSearchAndQualifyW(_In_ LPCTSTR pcszPath,_Out_ LPTSTR pszFullyQualifiedPath,_In_ UINT cchFullyQualifiedPath)
BOOL None shlwapi.PathSearchAndQualifyA(_In_ LPCTSTR pcszPath,_Out_ LPTSTR pszFullyQualifiedPath,_In_ UINT cchFullyQualifiedPath)
HRESULT None None.DWordPtrToIntPtr(_In_ DWORD_PTR dwOperand,_Out_ INT_PTR *piResult)
void None None.GroupMemoryBarrier(void None None)
public void None.WriteLine(Decimal value None)
protected void None.OnRowEditing(GridViewEditEventArgs e None)
DWORD WINAPI None.PeerDistGetStatusEx(_In_ PEERDIST_INSTANCE_HANDLE hPeerDist,_Inout_ PEERDIST_STATUS_INFO *pPeerDistStatusInfo)
DWORD WINAPI peerdist.PeerDistStartup(_In_ DWORD dwVersionRequested,_Out_ PPEERDIST_INSTANCE_HANDLE phPeerDist,_Out_opt_ PDWORD pdwSupportedVersion)
HRESULT None shell32.CompareCategory(CATSORT_FLAGS csfFlags None,DWORD dwCategoryId1 None,DWORD dwCategoryId2 None)
private void None.Page_Init(Object sender None,EventArgs e None)
public void None.ApplyStyle(DataGridViewCellStyle dataGridViewCellStyle None)
HRESULT None msctf.GetCurrentLanguage([out] LANGID *plangid)
SECURITY_STATUS None sspicli.SspiCompareAuthIdentities(_In_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE AuthIdentity1,_In_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE AuthIdentity2,_Out_ PBOOLEAN SameSuppliedUser,_Out_ PBOOLEAN SameSuppliedIdentity)
private void None.myButton_Click(Object sender None,System.EventArgs e None)
HRESULT None None.SSIZETToULongPtr(_In_ SSIZE_T cbOperand,_Out_ ULONG_PTR *pulResult)
HRESULT None None.ULongPtrToSSIZET(_In_ ULONG_PTR ulOperand,_Out_ SSIZE_T *pcbResult)
private void None.OnDelete(Object sender None,System.EventArgs e None)
protected void None.OnQueryContinueDrag(QueryContinueDragEventArgs qcdevent None)
HRESULT None None.get_CachedIsRequiredForForm([out None None,retval] BOOL *retVal)
HRESULT None None.LongPtrToDWord(_In_ LONG_PTR lOperand,_Out_ DWORD *pdwResult)
HRESULT None propsys.InitVariantFromVariantArrayElem(_In_ REFVARIANT varIn,_In_ ULONG iElem,_Out_ VARIANT *pvar)
DWORD WINAPI dhcpsapi.DhcpGetSubnetDelayOffer(_In_ DHCP_SRV_HANDLE ServerIpAddress,_In_ DHCP_IP_ADDRESS SubnetAddress,_Out_ USHORT *TimeDelayInMilliseconds)
HRESULT WINAPI drt.DrtGetSearchPathSize(_In_ HDRT_SEARCH_CONTEXT hSearchContext,_Out_ ULONG *pulSearchPathSize)
protected void None.OnEditModeChanged(EventArgs e None)
HRESULT None certadm.CertSrvRestoreRegisterComplete(_In_ HCSBC hbc,_In_ HRESULT hrRestoreState)
BOOL CALLBACK input.SaveDefaultUserInputSettings(_In_ HWND hwndParent,_In_ HKEY hSourceRegKey)
protected void None.BaseRemove(Object key None)
public void None.ChangeMode(DetailsViewMode newMode None)
PTSTR None shlwapi.PathFindNextComponent(_In_ PTSTR pszPath)
PTSTR None shlwapi.PathFindNextComponentW(_In_ PTSTR pszPath)
PTSTR None shlwapi.PathFindNextComponentA(_In_ PTSTR pszPath)
public int None.GetMaxCharCount(int byteCount None)
BOOL WINAPI None.PeerDistGetOverlappedResult(_In_ LPOVERLAPPED lpOverlapped,_Out_ LPDWORD lpNumberOfBytesTransferred,_In_ BOOL bWait)
HRESULT None None.GetResults([out] IShellItemArray **ppenum)
HRESULT None None.get_CachedState([out None None,retval] DWORD *pdwState)
HRESULT None None.get_CachedDefaultAction([out None None,retval] BSTR *pszDefaultAction)
HRESULT None None.GetOutputCount([out] DWORD *pcOutputs)
HRESULT None None.get_CachedDescription([out None None,retval] BSTR *pszDescription)
HRESULT None None.InitPropVariantFromInt16(_In_ SHORT nVal,_Out_ PROPVARIANT *ppropvar)
protected void None.SetStyle(ControlStyles flag None,boolean value None)
public void None.RenderBeginTag(HtmlTextWriter writer None)
protected void None.PostFilterEvents(IDictionary events None)
public void None.EndWrite(IAsyncResult asyncResult None)
public int None.IndexOf(Object value None,int startIndex None,int count None)
private void None.Page_Init(Object sender None,EventArgs e None)
public int None.GetMaxCharCount(int byteCount None)
public void None.ApplyStyle(DataGridViewCellStyle dataGridViewCellStyle None)
HRESULT None faxcom.put_Receive([in] BOOL newVal)
HRESULT None mstscax.get_ExtendedDisconnectReason([out] ExtendedDisconnectReasonCode *pExtendedDisconnectReason)
HRESULT None faxcom.put_Priority([in] LONG newVal)
BOOL WINAPI cryptui.CryptUIWizFreeDigitalSignContext(_In_ PCCRYPTUI_WIZ_DIGITAL_SIGN_CONTEXT pSignContext)
public None None.StorePermission(PermissionState state None)
HRESULT None None.GetDevice([out None None,retval] IDirect3DDevice9 **ppDevice)
void None None.SetData(String format None,boolean autoConvert None,Object data None)
HRESULT None None.GetFocusedElement([out None None,retval] IUIAutomationElement **element)
HRESULT None None.GetLogonErrorRedirector([out] IWTSProtocolLogonErrorRedirector **ppLogonErrorRedir)
public void None.AutoResizeColumn(int columnIndex None,ColumnHeaderAutoResizeStyle headerAutoResize None)
SerializableAttribute None None.ClassInterfaceAttribute(ClassInterfaceType.None None None)
NTSTATUS WINAPI bcrypt.BCryptGenerateSymmetricKey(_Inout_ BCRYPT_ALG_HANDLE hAlgorithm,_Out_ BCRYPT_KEY_HANDLE *phKey,_Out_opt_ PUCHAR pbKeyObject,_In_ ULONG cbKeyObject,_In_ PUCHAR pbSecret,_In_ ULONG cbSecret,_In_ ULONG dwFlags)
protected void None.OnRemoveRelation(DataRelation relation None)
public BooleanObject None.CreateInstance(Object[] args None)
HRESULT None None.QueryOverlayFXCaps([out] DWORD *lpdwOverlayFXCaps)
HRESULT None faxcom.put_RecipientState([in] BSTR newVal)
protected Size None.MeasureOverride(Size constraint None)
public int None.GetChars(byte[] bytes None,int byteIndex None,int byteCount None,char[] chars None,int charIndex None,boolean flush None)
protected void None.OnDataBound(EventArgs e None)
STDAPI None ntshrui.CanShareFolderW(_In_ LPCWSTR pszPath)
STDAPI None ntshrui.CanShareFolderW(_In_ LPCWSTR pszPath)
BOOL WINAPI crypt32.CertComparePublicKeyInfo(_In_ DWORD dwCertEncodingType,_In_ PCERT_PUBLIC_KEY_INFO pPublicKey1,_In_ PCERT_PUBLIC_KEY_INFO pPublicKey2)
HRESULT None None.ShortToUInt(_In_ SHORT sOperand,_Out_ UINT *puResult)
HRESULT None None.ULongLongToDWordPtr(_In_ ULONGLONG ullOperand,_Out_ DWORD_PTR *pdwResult)
uint32 None None.SetPowerState([in] uint16 PowerState,[in] datetime Time)
HRESULT None None.GetTime([out] MFTIME *phnsClockTime)
HRESULT None None.get_CurrentHelpText([out None None,retval] BSTR *retVal)
DWORD DHCP_API_FUNCTION dhcpsapi.DhcpHlprCreateV4Policy(_In_ LPWSTR PolicyName,_In_ BOOL fGlobalPolicy,_In_ DHCP_IP_ADDRESS Subnet,_In_ DWORD ProcessingOrder,_In_ DHCP_POL_LOGIC_OPER RootOperator,_In_ LPWSTR Description,_In_ BOOL Enabled,_Out_ LPDHCP_POLICY *Policy)
function None None.RegExpMultilineDemo(flag None None)
HRESULT None None.GetMetadataTracks([out] IMFTimedTextTrackList **ppMetadataTracks)
DWORD None dhcpsapi.DhcpCreateOptionV5(_In_ LPWSTR ServerIpAddress,_In_ DWORD Flags,_In_ DHCP_OPTION_ID OptionId,_In_opt_ LPWSTR ClassName,_In_opt_ LPWSTR VendorName,_In_ LPDHCP_OPTION OptionInfo)
BOOL None shlwapi.PathFileExists(_In_ LPCTSTR pszPath)
BOOL None shlwapi.PathFileExistsW(_In_ LPCTSTR pszPath)
BOOL None shlwapi.PathFileExistsA(_In_ LPCTSTR pszPath)
public String None.Replace(String input None,MatchEvaluator evaluator None)
protected HorizontalAlignment None.RtlTranslateHorizontal(HorizontalAlignment align None)
public None None.SoapDocumentMethodAttribute(String action None)
NTSTATUS WINAPI bcrypt.BCryptCreateHash(_Inout_ BCRYPT_ALG_HANDLE hAlgorithm,_Out_ BCRYPT_HASH_HANDLE *phHash,_Out_ PUCHAR pbHashObject,_In_opt_ ULONG cbHashObject,_In_opt_ PUCHAR pbSecret,_In_ ULONG cbSecret,_In_ ULONG dwFlags)
public None None.MissingMethodException(String message None,Exception inner None)
public void None.PlayRecord(EmfPlusRecordType recordType None,int flags None,int dataSize None,byte[] data None)
HRESULT None faxcom.put_SenderDepartment([in] BSTR newVal)
public XmlNode None.CloneNode(boolean deep None)
public void None.ApplyStyle(DataGridViewCellStyle dataGridViewCellStyle None)
BOOL None None.WlxIsLogoffOk(_In_ PVOID pWlxContext)
LONG WINAPI tapi32.phoneGetStatus(HPHONE hPhone None,LPPHONESTATUS lpPhoneStatus None)
LONG WINAPI tapi32.phoneGetStatusW(HPHONE hPhone None,LPPHONESTATUS lpPhoneStatus None)
LONG WINAPI tapi32.phoneGetStatusA(HPHONE hPhone None,LPPHONESTATUS lpPhoneStatus None)
DWORD WINAPI fwpuclnt.FwpmNetEventEnum2(_In_ HANDLE engineHandle,_In_ HANDLE enumHandle,_In_ UINT32 numEntriesRequested,_Out_ FWPM_NET_EVENT2 ***entries,_Out_ UINT32 *numEntriesReturned)
public DayOfWeek None.GetDayOfWeek(DateTime time None)
public void None.WriteEncodedUrl(String url None)
HRESULT None None.WordToChar(_In_ WORD wOperand,_Out_ __wchar_t *pch)
BOOL WINAPI kernel32.GetUmsCompletionListEvent(_In_ PUMS_COMPLETION_LIST UmsCompletionList,_Inout_ PHANDLE UmsCompletionEvent)
HRESULT None wuapi.get_Warnings([out] IUpdateExceptionCollection **retval)
HRESULT None None.UIntPtrToSSIZET(_In_ UINT_PTR uOperand,_Out_ SSIZE_T *pcbResult)
errno_t None None.wctomb_s(int *pRetValue None,char *mbchar None,size_t sizeInBytes None,wchar_t wchar None)
DWORD WINAPI fwpuclnt.FwpmProviderContextEnum1(_In_ HANDLE engineHandle,_In_ HANDLE enumHandle,_In_ UINT32 numEntriesRequested,_Out_ FWPM_PROVIDER_CONTEXT1 ***entries,_Out_ UINT32 *numEntriesReturned)
public int None.GetDaysInMonth(int year None,int month None)
public None None.ConfigurationProperty(String name None,Type type None,Object defaultValue None,ConfigurationPropertyOptions options None)
LRESULT CALLBACK None.WindowProc(HWND hwnd None,WM_IME_NOTIFY None None,WPARAM wParam None,LPARAM lParam None)
public BindingExpression None.SetBinding(DependencyProperty dp None,String path None)
public Object None.ConvertFromString(String text None)
void None None.abort( None None)
HRESULT None None.DWordPtrToSSIZET(_In_ DWORD_PTR dwOperand,_Out_ SSIZE_T *pcbResult)
HRESULT None None.get_CachedIsControlElement([out None None,retval] BOOL *retVal)
HRESULT None None.IntToULongLong(_In_ INT iOperand,_Out_ ULONGLONG *pullResult)
public void None.WriteLine(char[] buffer None,int index None,int count None)
DWORD WINAPI fwpuclnt.FwpmCalloutDeleteById0(_In_ HANDLE engineHandle,_In_ UINT32 id)
private void None.Form1_Load(Object sender None,EventArgs e None)
protected boolean None.OnServerValidate(String value None)
public Type None.MakeGenericType(Type[] typeArguments None)
HRESULT None msctf.GetEndACP([out] LONG *pacp)
HRESULT None None.ULongToPtrdiffT(_In_ ULONG ulOperand,_Out_ ptrdiff_t *pcbResult)
HRESULT WINAPI combase.SetRestrictedErrorInfo(_In_ IRestrictedErrorInfo *pRestrictedErrorInfo)
HRESULT None msftedit.TxGetClientRect(LPRECT prc None)
DWORD WINAPI fwpuclnt.FwpmProviderSubscriptionsGet0(_In_ HANDLE engineHandle,_Out_ FWPM_PROVIDER_SUBSCRIPTION0 ***entries,_Out_ UINT32 *numEntries)
public void None.Save(ConfigurationSaveMode saveMode None)
public int None.LastIndexOf(String value None,int startIndex None,int count None,StringComparison comparisonType None)
protected void None.OnStylusButtonUp(StylusButtonEventArgs e None)
BOOL WINAPI None.PFNCMFILTERPROC(_In_ PCCERT_CONTEXT pCertContext,_In_ DWORD lCustData,_In_ DWORD dwFlags,_In_ DWORD dwDisplayWell)
HRESULT None None.get_CurrentIsControlElement([out None None,retval] BOOL *retVal)
public void None.AutoResizeColumn(int columnIndex None,ColumnHeaderAutoResizeStyle headerAutoResize None)
BOOL None shlwapi.PathAppend(_Inout_ LPTSTR pszPath,_In_ LPCTSTR pszMore)
BOOL None shlwapi.PathAppendW(_Inout_ LPTSTR pszPath,_In_ LPCTSTR pszMore)
BOOL None shlwapi.PathAppendA(_Inout_ LPTSTR pszPath,_In_ LPCTSTR pszMore)
DWORD DHCP_API_FUNCTION dhcpsapi.DhcpV4GetAllOptionValues(_In_opt_ LPWSTR ServerIpAddress,_In_ DWORD Flags,_In_ LPDHCP_OPTION_SCOPE_INFO ScopeInfo,_Out_ LPDHCP_ALL_OPTION_VALUES_PB *Values)
private void None.ShowPropertiesOfSlateBlue(PaintEventArgs e None)
public void None.Add(IComponent comp None,DesignerActionList actionList None)
HRESULT WINAPI None.EngineAdapterGetEnrollmentStatus(_Inout_ PWINBIO_PIPELINE Pipeline,_Out_ PWINBIO_REJECT_DETAIL RejectDetail)
DWORD WINAPI peerdist.PeerDistClientCompleteContentInformation(_In_ PEERDIST_INSTANCE_HANDLE hPeerDist,_In_ PEERDIST_CONTENT_HANDLE hContentHandle,_In_ LPOVERLAPPED lpOverlapped)
public None None.InvalidOperationException(String message None)
public Match None.Match(String input None)
void None None.Page_Load(Object sender None,System.EventArgs e None)
HRESULT None None.LongPtrToLong(_In_ LONG_PTR lOperand,_Out_ LONG *plResult)
LONG WINAPI tapi32.phoneNegotiateExtVersion(HPHONEAPP hPhoneApp None,DWORD dwDeviceID None,DWORD dwAPIVersion None,DWORD dwExtLowVersion None,DWORD dwExtHighVersion None,LPDWORD lpdwExtVersion None)
public ObjRef None.CreateObjRef(Type requestedType None)
D2D1_PROPERTY_TYPE None d2d1.GetType(UINT32 index None)
VOID DHCP_API_FUNCTION dhcpsapi.DhcpHlprFreeV4Policy(_Inout_ LPDHCP_POLICY Policy)
void None None.Button_Click(Object sender None,EventArgs e None)
public void None.Invalidate(Rectangle rectangle None)
DWORD DHCP_API_FUNCTION dhcpsapi.DhcpV4SetOptionValues(_In_opt_ LPWSTR ServerIpAddress,_In_ DWORD Flags,_In_opt_ LPWSTR PolicyName,_In_opt_ LPWSTR VendorName,_In_ LPDHCP_OPTION_SCOPE_INFO ScopeInfo,_In_ LPDHCP_OPTION_VALUE_ARRAY OptionValues)
protected String None.GetControlRenderID(String name None)
HRESULT None None.GetStereo3DRenderMode([out] MF3DVideoOutputType *outputType)
protected void None.TreeView1_SelectedNodeChanged(object sender None,EventArgs e None)
protected void None.TreeView1_SelectedNodeChanged(object sender None,EventArgs e None)
public void None.WriteLine(char[] buffer None,int index None,int count None)
PVOID None None.AllocateHeap(_In_ ULONG Length)
protected void None.OnObjectCreating(ObjectDataSourceEventArgs e None)
public Match None.Match(String input None)
protected None None.ResourcePermissionBase(PermissionState state None)
ULONG WINAPI httpapi.HttpUpdateServiceConfiguration(_Reserved_ HANDLE Handle,_In_ HTTP_SERVICE_CONFIG_ID ConfigId,_In_ PVOID ConfigInfo,_In_ ULONG ConfigInfoLength,_Reserved_ LPOVERLAPPED Overlapped)
private void None.listDragTarget_DragOver(Object sender None,System.Windows.Forms.DragEventArgs e None)
HRESULT None wuapi.get_IssueDate([out] DATE *retval)
HRESULT None None.get_CurrentFrameworkId([out None None,retval] BSTR *retVal)
protected void None.LoadControlState(Object savedState None)
ATOM WINAPI kernel32.AddAtom(_In_ LPCTSTR lpString)
ATOM WINAPI kernel32.AddAtomW(_In_ LPCTSTR lpString)
HRESULT None faxcom.put_FileName([in] BSTR newVal)
HRESULT WINAPI drt.DrtEndSearch(_In_ HDRT_SEARCH_CONTEXT hSearchContext)
HANDLE WINAPI avrt.AvSetMmThreadCharacteristics(_In_ LPCTSTR TaskName,_Inout_ LPDWORD TaskIndex)
HANDLE WINAPI avrt.AvSetMmThreadCharacteristicsW(_In_ LPCTSTR TaskName,_Inout_ LPDWORD TaskIndex)
HANDLE WINAPI avrt.AvSetMmThreadCharacteristicsA(_In_ LPCTSTR TaskName,_Inout_ LPDWORD TaskIndex)
HRESULT None None.SSIZETToLong(_In_ SSIZE_T cbOperand,_Out_ LONG *plResult)
protected void None.RenderPostBackEventAsAnchor(HtmlMobileTextWriter writer None,String argument None,String linkText None)
public int None.GetWeekOfYear(DateTime time None,CalendarWeekRule rule None,DayOfWeek firstDayOfWeek None)
public int None.GetDaysInMonth(int year None,int month None)
HRESULT None None.GetLastUpdateTime([out None None,retval] DATE *pDate)
DWORD DHCP_API_FUNCTION dhcpsapi.DhcpGetSubnetInfoV6(_In_ LPWSTR ServerIpAddress,_In_ DHCP_IPV6_ADDRESS SubnetAddress,_Out_ LPDHCP_SUBNET_INFO_V6 *SubnetInfo)
HRESULT None faxcom.put_RecipientCountry([in] BSTR newVal)
public void None.Validate(ValidationEventHandler validationEventHandler None)
BOOL None shlwapi.PathCanonicalize(_Out_ LPTSTR lpszDst,_In_ LPCTSTR lpszSrc)
BOOL None shlwapi.PathCanonicalizeW(_Out_ LPTSTR lpszDst,_In_ LPCTSTR lpszSrc)
BOOL None shlwapi.PathCanonicalizeA(_Out_ LPTSTR lpszDst,_In_ LPCTSTR lpszSrc)
HRESULT None None.GetTimeSource([out] IMFPresentationTimeSource **ppTimeSource)
uint32 None ramgmtpsprovider.Get([in] string ComputerName,[in] string EntrypointName,[out] DAClient cmdletOutput)
BOOL None dnsapi.DnsNameCompare(_In_ PCTSTR pName1,_In_ PCTSTR pName2)
BOOL None dnsapi.DnsNameCompare_W(_In_ PCTSTR pName1,_In_ PCTSTR pName2)
BOOL None dnsapi.DnsNameCompare_A(_In_ PCTSTR pName1,_In_ PCTSTR pName2)
private void None.currencyTextBox_TextChanged(Object sender None,EventArgs e None)
public None None.HttpContext(HttpRequest request None,HttpResponse response None)
function None None.GetQuantity(productID None None,elemToUpdate None None,productLabelElem None None,buttonElem None None)
NTSTATUS WINAPI bcrypt.BCryptDeriveKey(_In_ BCRYPT_SECRET_HANDLE hSharedSecret,_In_ LPCWSTR pwszKDF,_In_opt_ BCryptBufferDesc *pParameterList,_Out_opt_ PUCHAR pbDerivedKey,_In_ ULONG cbDerivedKey,_Out_ ULONG *pcbResult,_In_ ULONG dwFlags)
public Type None.MakeGenericType(Type[] typeArguments None)
void None None.Page_Load(Object sender None,System.EventArgs e None)
HRESULT None None.get_CurrentDefaultAction([out None None,retval] BSTR *pszDefaultAction)
public void None.WriteLineNoTabs(String s None)
LONG WINAPI tapi32.phoneSetRing(HPHONE hPhone None,DWORD dwRingMode None,DWORD dwVolume None)
protected void None.OnKeyUp(KeyEventArgs e None)
Public Class None.Dictionary(Of entryType None,keyType As IComparable)
public IPermission None.SetPermission(IPermission perm None)
public void None.AddRange(InstallerCollection value None)
public void None.WriteXmlSchema(Stream stream None)
protected void None.GridVScrolled(Object sender None,ScrollEventArgs se None)
HRESULT None wuapi.get_ResultCode([out] OperationResultCode *retval)
private void None.On_Click(Object source None,System.EventArgs e None)
public void None.Init(TemplateParser parser None,ControlBuilder parentBuilder None,Type type None,String tagName None,String id None,IDictionary attribs None)
HRESULT None None.GetRequestIdString([out None None,retval] BSTR *pValue)
protected void None.OnNotifyMessage(Message m None)
private void None.comboBox1_SelectedIndexChanged(Object sender None,EventArgs e None)
public Object None.ConvertFrom(ITypeDescriptorContext context None,CultureInfo culture None,Object value None)
HRESULT None wuapi.get_SetupPrefix([out] BSTR *retval)
public int None.IndexOf(String source None,char value None)
protected boolean None.LoadPostData(String postDataKey None,NameValueCollection postCollection None)
protected void None.TreeView1_SelectedNodeChanged(object sender None,EventArgs e None)
DWORD WINAPI peerdist.PeerDistClientBlockRead(_In_ PEERDIST_INSTANCE_HANDLE hPeerDist,_In_ PEERDIST_CONTENT_HANDLE hContentHandle,DWORD cbMaxNumberOfBytesToRead None,_Inout_opt_ PBYTE pBuffer,DWORD dwTimeoutInMilliseconds None,_In_ LPOVERLAPPED lpOverlapped)
HRESULT None None.PtrdiffTToSizeT(_In_ ptrdiff_t cbOperand,_Out_ size_t *pcbResult)
HRESULT WINAPI drt.DrtUpdateKey(_In_ HKEYREGISTRATION hKeyRegistration,_In_ DRT_DATA *pAppData)
private void None.SelectNode(TreeNode node None)
protected String None.MapPathSecure(String virtualPath None)
private void None.myButton_Click(Object sender None,System.EventArgs e None)
public String None.Replace(String input None,String replacement None,int count None,int startat None)
BOOL WINAPI None.CertStoreProvDeleteCRLCallback(_In_ HCERTSTOREPROV hStoreProv,_In_ PCCRL_CONTEXT pCrlContext,_In_ DWORD dwFlags)
protected void None.OnObjectCreating(ObjectDataSourceEventArgs e None)
void None None.Page_Load(Object Sender None,EventArgs e None)
public boolean None.WaitOne(TimeSpan timeout None,boolean exitContext None)
DWORD WINAPI dhcpsapi.DhcpSetClientInfoV6(_In_ LPWSTR ServerIpAddress,_In_ LPDHCP_CLIENT_INFO_V6 ClientInfo)
HRESULT None None.SSIZETToLong(_In_ SSIZE_T cbOperand,_Out_ LONG *plResult)
HRESULT None None.get_CurrentIsContentElement([out None None,retval] BOOL *retVal)
void None None.OnPreRender(EventArgs e None)
protected String None.SerializeSection(ConfigurationElement parentElement None,String name None,ConfigurationSaveMode saveMode None)
HRESULT None msctf.EnumInputProcessorInfo([out] IEnumGUID **ppEnum)
HRESULT None None.get_CachedName([out None None,retval] BSTR *retVal)
protected void None.OnLoggingIn(LoginCancelEventArgs e None)
DWORD DHCP_API_FUNCTION dhcpsapi.DhcpV4FailoverTriggerAddrAllocation(_In_opt_ LPWSTR ServerIpAddress,_In_ LPWSTR pFailRelName)
uint32 None ramgmtpsprovider.Get([in] string ComputerName,[in] string EntrypointName,[out] DAClient cmdletOutput)
protected void None.OnDataBinding(EventArgs e None)
public XmlNode None.InsertAfter(XmlNode newChild None,XmlNode refChild None)
HRESULT None None.GetValue([out] AHE_TYPE *pahe)
HRESULT None wuapi.get_IsScanPackageService([out] VARIANT_BOOL *retval)
public void None.ApplyStyle(DataGridViewCellStyle dataGridViewCellStyle None)
DWORD DHCP_API_FUNCTION dhcpsapi.DhcpV6GetStatelessStatistics(_In_opt_ LPWSTR ServerIpAddress,_Out_ LPDHCPV6_STATELESS_STATS *StatelessStats)
void None None.Execute(Object parameter None)
HRESULT None faxcom.put_FileName([in] BSTR newVal)
HRESULT None None.get_CurrentAriaProperties([out None None,retval] BSTR *retVal)
void None None.ReadXml(XmlReader reader None)
HRESULT None faxcom.put_RecipientName([in] BSTR newVal)
ATOM WINAPI kernel32.FindAtom(_In_ LPCTSTR lpString)
ATOM WINAPI kernel32.FindAtomW(_In_ LPCTSTR lpString)
ATOM WINAPI kernel32.FindAtomA(_In_ LPCTSTR lpString)
public void None.Init(TemplateParser parser None,ControlBuilder parentBuilder None,Type type None,String tagName None,String id None,IDictionary attribs None)
String None None.GetAttribute(String key None)
public WebResponse None.EndGetResponse(IAsyncResult asyncResult None)
protected boolean None.OnServerValidate(String value None)
public void None.Load(TextReader txtReader None)
HRESULT None None.SelectDefaultMenuLanguage(LCID Language None)
public void None.RegisterClone(Object original None,Object clone None)
public void None.EnterLayout(Style style None)
void None None.GetEnumerator_Clicked(Object Sender None,EventArgs e None)
BOOL DHCP_API_FUNCTION dhcpsapi.DhcpHlprIsV4PolicyWellFormed(_In_ LPDHCP_POLICY pPolicy)
HRESULT None oleaut32.VarDateFromUI2(_In_ USHORT uiIn,_Out_ DATE *pdateOut)
HRESULT None None.QueryChanges([out None None,retval] VARIANT_BOOL *pValue)
void None None.AllItems_Click(Object sender None,EventArgs e None)
protected void None.OnKeyUp(KeyEventArgs e None)
int None None.wctomb(char *mbchar None,wchar_t wchar None)
DWORD DHCP_API_FUNCTION dhcpsapi.DhcpEnumSubnetElementsV6(_In_ LPWSTR ServerIpAddress,_In_ DHCP_IPV6_ADDRESS SubnetAddress,_In_ DHCP_SUBNET_ELEMENT_TYPE_V6 EnumElementType,_Inout_ DHCP_RESUME_HANDLE *ResumeHandle,_In_ DWORD PreferredMaximum,_Out_ LPDHCP_SUBNET_ELEMENT_INFO_ARRAY_V6 *EnumElementInfo,_Out_ DWORD *ElementsRead,_Out_ DWORD *ElementsTotal)
public boolean None.IsVisibleOnPage(int pageNumber None)
public None None.DateTime(long ticks None)
public None None.ConfigurationProperty(String name None,Type type None,Object defaultValue None,ConfigurationPropertyOptions options None)
private void None.whatIsChecked_Click(Object sender None,System.EventArgs e None)
function None None.Boolean([boolValue : boolean])
protected String None.GetErrorDesignTimeHtml(Exception e None)
HRESULT None None.get_CurrentAriaRole([out None None,retval] BSTR *retVal)
public int None.Add(Object item None)
HRESULT None None.IntPtrToUInt8(_In_ INT_PTR iOperand,_Out_ UINT8 *pui8Result)
HRESULT None wuapi.get_RedirectUrls([out] IStringCollection *retval)
BOOL None None.WlxIsLogoffOk(_In_ PVOID pWlxContext)
HRESULT None wuapi.get_PerUser([out None None,retval] VARIANT_BOOL *retval)
protected void None.BuildProfileTree(String parentId None,boolean calcViewState None)
protected void None.OnClick(EventArgs e None)
protected void None.ChangeScope(PersonalizationScope scope None)
HRESULT WINAPI drt.DrtGetSearchResult(_In_ HDRT_SEARCH_CONTEXT hSearchContext,_Out_ DRT_SEARCH_RESULT *ppSearchResult)
public XmlElement None.CreateElement(String qualifiedName None,String namespaceURI None)
HRESULT None None.get_CurrentIsEnabled([out None None,retval] BOOL *retVal)
private void None.ShowPropertiesOfSlateBlue(PaintEventArgs e None)
public boolean None.Contains(Int64KeyFrame keyFrame None)
public Type None.MakeGenericType(Type[] typeArguments None)
HRESULT None mstscax.get_CipherStrength([out] LONG *pCipherStrength)
private void None.treeView1_KeyDown(Object sender None,KeyEventArgs e None)
HRESULT None None.IntPtrToUShort(_In_ INT_PTR iOperand,_Out_ USHORT *pusResult)
HRESULT None None.get_CurrentIsContentElement([out None None,retval] BOOL *retVal)
protected void None.OnUpdating(SqlDataSourceCommandEventArgs e None)
PCCERT_SERVER_OCSP_RESPONSE_CONTEXT WINAPI crypt32.CertGetServerOcspResponseContext(_In_ HCERT_SERVER_OCSP_RESPONSE hServerOcspResponse,_In_ DWORD dwFlags,_Reserved_ LPVOID pvReserved)
protected void None.OnKeyPress(KeyPressEventArgs e None)
HRESULT None None.ULongPtrToUInt8(_In_ ULONG_PTR ulOperand,_Out_ UINT8 *pui8Result)
public void None.MergeWith(Style s None)
public int None.IndexOf(Object value None,int startIndex None,int count None)
public XmlEntityReference None.CreateEntityReference(String name None)
public WebPart None.GetWebPart(WebPartDescription description None)
protected void None.OnDragOver(DragEventArgs drgevent None)
private void None.On_Click(Object source None,System.EventArgs e None)
DWORD WINAPI peerdist.PeerDistShutdown(_In_ PEERDIST_INSTANCE_HANDLE hPeerDist)
HRESULT None None.LongPtrToShort(_In_ LONG_PTR lOperand,_Out_ SHORT *psResult)
HRESULT None None.DWordPtrToUIntPtr(_In_ DWORD_PTR dwOperand,_Out_ UINT_PTR *puiResult)
protected void None.OnClick(EventArgs e None)
HRESULT None None.PtrdiffTToSIZET(_In_ ptrdiff_t cbOperand,_Out_ SIZE_T *pcbResult)
public void None.DrawImageMargin(ToolStripRenderEventArgs e None)
protected void None.AddAttributesToRender(HtmlTextWriter writer None)
private void None.InsertShipper(Object source None,System.EventArgs e None)
private void None.On_Click(Object source None,System.EventArgs e None)
HRESULT WINAPI drt.DrtGetSearchResultSize(_In_ HDRT_SEARCH_CONTEXT hSearchContext,_Out_ ULONG *pulSearchResultSize)
public XmlNode None.ImportNode(XmlNode node None,boolean deep None)
HRESULT None None.get_CurrentLabeledBy([out None None,retval] IUIAutomationElement **retVal)
BOOL DHCP_API_FUNCTION dhcpsapi.DhcpHlprIsV4PolicyWellFormed(_In_ LPDHCP_POLICY pPolicy)
void None None.ReadXml(XmlReader reader None)
HRESULT None msctf.GetActiveView([out] TsViewCookie *pvcView)
protected void None.OnLostFocus(RoutedEventArgs e None)
public void None.WriteLine(String format None,Object arg0 None,Object arg1 None,Object arg2 None)
protected void None.OnNotifyMessage(Message m None)
public DayOfWeek None.GetDayOfWeek(DateTime time None)
private void None.listDragSource_QueryContinueDrag(Object sender None,System.Windows.Forms.QueryContinueDragEventArgs e None)
DWORD WINAPI clusapi.ClusterNodeCloseEnumEx(_In_ HNODEENUMEX hNodeEnum)
HRESULT None None.SizeTToInt(_In_ size_t cbOperand,_Out_ INT *piResult)
private void None.button1_Click(Object sender None,System.EventArgs e None)
BOOL None wintrust.CryptCATAdminRemoveCatalog(_In_ HCATADMIN hCatAdmin,_In_ LPCWSTR pwszCatalogFile,_In_ DWORD dwFlags)
protected void None.UpdateBounds(int x None,int y None,int width None,int height None,int clientWidth None,int clientHeight None)
HRESULT None None.PtrdiffTToDWord(_In_ ptrdiff_t cbOperand,_Out_ DWORD *pdwResult)
protected void None.ReadXmlSerializable(XmlReader reader None)
public void None.SetLength(long value None)
protected void None.OnCommand(CommandEventArgs e None)
protected void None.PreFilterEvents(IDictionary events None)
public None None.Exception(String message None,Exception innerException None)
public Stream None.GetManifestResourceStream(Type type None,String name None)
public Stream None.GetManifestResourceStream(Type type None,String name None)
public BindingExpression None.SetBinding(DependencyProperty dp None,String path None)
public boolean None.Equals(Object obj None)
VOID WINAPI advapi32.MapGenericMask(_Inout_ PDWORD AccessMask,_In_ PGENERIC_MAPPING GenericMapping)
public XmlNode None.InsertAfter(XmlNode newChild None,XmlNode refChild None)
HRESULT None None.IntPtrToULongLong(_In_ INT_PTR iOperand,_Out_ ULONGLONG *pullResult)
HRESULT None wuapi.get_IsRegisteredWithAU([out] VARIANT_BOOL *retval)
HRESULT None None.SizeTToUInt(_In_ size_t cbOperand,_Out_ UINT *puiResult)
HRESULT None None.ULongPtrToDWord(_In_ ULONG_PTR ulOperand,_Out_ DWORD *pdwResult)
DWORD WINAPI fwpuclnt.FwpmNetEventEnum0(_In_ HANDLE engineHandle,_In_ HANDLE enumHandle,_In_ UINT32 numEntriesRequested,_Out_ FWPM_NET_EVENT0 ***entries,_Out_ UINT32 *numEntriesReturned)
protected void None.SetCurrent(Object newItem None,int newPosition None)
void None None.Button1_Click(Object sender None,EventArgs e None)
public None None.ConfigurationElementProperty(ConfigurationValidatorBase validator None)
private void None.ShowPropertiesOfSlateBlue(PaintEventArgs e None)
public void None.WriteStartAttribute(String localName None,String ns None)
String None None.GetAttribute(String key None)
protected void None.OnGiveFeedback(GiveFeedbackEventArgs e None)
DWORD DHCP_API_FUNCTION dhcpsapi.DhcpV4FailoverGetScopeStatistics(_In_opt_ LPWSTR ServerIpAddress,_In_ DHCP_IP_ADDRESS scopeId,_Out_ LPDHCP_FAILOVER_STATISTICS *pStats)
BOOL None shlwapi.PathIsURL(_In_ LPCTSTR pszPath)
BOOL None shlwapi.PathIsURLW(_In_ LPCTSTR pszPath)
BOOL None shlwapi.PathIsURLA(_In_ LPCTSTR pszPath)
HRESULT None shlwapi.UrlCanonicalize(_In_ PCTSTR pszUrl,_Out_ PTSTR pszCanonicalized,_Inout_ DWORD *pcchCanonicalized,DWORD dwFlags None)
HRESULT None shlwapi.UrlCanonicalizeW(_In_ PCTSTR pszUrl,_Out_ PTSTR pszCanonicalized,_Inout_ DWORD *pcchCanonicalized,DWORD dwFlags None)
HRESULT None shlwapi.UrlCanonicalizeA(_In_ PCTSTR pszUrl,_Out_ PTSTR pszCanonicalized,_Inout_ DWORD *pcchCanonicalized,DWORD dwFlags None)
protected void None.OnIsMouseCapturedChanged(DependencyPropertyChangedEventArgs e None)
public int None.GetDaysInMonth(int year None,int month None)
HRESULT None None.get_CachedAcceleratorKey([out None None,retval] BSTR *retVal)
PCCERT_CONTEXT WINAPI crypt32.CertEnumCertificatesInStore(_In_ HCERTSTORE hCertStore,_In_ PCCERT_CONTEXT pPrevCertContext)
private void None.InsertShipper(Object source None,System.EventArgs e None)
protected void None.OnClick(EventArgs e None)
void None None.AddInheritedComponents(IComponent component None,IContainer container None)
public void None.ScrollControlIntoView(Control activeControl None)
HRESULT WINAPI drt.DrtCreateDnsBootstrapResolver(_In_ USHORT port,_In_ PCWSTR pwszAddress,_Out_ DRT_BOOTSTRAP_PROVIDER **ppModule)
private void None.CreatePointsAndSizes(PaintEventArgs e None)
DWORD WINAPI peerdist.PeerDistServerCloseContentInformation(_In_ PEERDIST_INSTANCE_HANDLE hPeerDist,_In_ PEERDIST_CONTENT_HANDLE hContentInfo)
public BindingExpression None.SetBinding(DependencyProperty dp None,String path None)
public None None.DateTime(long ticks None)
public void None.ControlSelect(Control control None)
public int None.IndexOf(Installer value None)
HRESULT None None.PathCchAddBackslash(_Inout_ PWSTR pszPath,_In_ size_t cchPath)
public void None.AddRange(TabPage[] pages None)
public Stream None.EndGetRequestStream(IAsyncResult asyncResult None)
HRESULT None None.LongToShort(_In_ LONG lOperand,_Out_ SHORT *psResult)
uint32 None dnsserverpsprovider.AddByADForwardLookupZone([in] boolean LoadExisting,[in] string MasterServers[],[in] string DirectoryPartitionName,[in] string ComputerName,[in] string ReplicationScope,[in] boolean UseRecursion,[in] string Name,[in] uint32 ForwarderTimeout,[in] boolean PassThru,[out] DnsServerConditionalForwarderZone cmdletOutput)
private void None.showCheckedNodesButton_Click(Object sender None,EventArgs e None)
HRESULT None None.ULongLongToIntPtr(_In_ ULONGLONG ullOperand,_Out_ INT_PTR *piResult)
HRESULT None None.LongPtrToChar(_In_ LONG_PTR lOperand,_Out_ CHAR *pch)
BOOL None wininet.HttpAddRequestHeaders(_In_ HINTERNET hRequest,_In_ LPCTSTR lpszHeaders,_In_ DWORD dwHeadersLength,_In_ DWORD dwModifiers)
BOOL None wininet.HttpAddRequestHeadersW(_In_ HINTERNET hRequest,_In_ LPCTSTR lpszHeaders,_In_ DWORD dwHeadersLength,_In_ DWORD dwModifiers)
BOOL None wininet.HttpAddRequestHeadersA(_In_ HINTERNET hRequest,_In_ LPCTSTR lpszHeaders,_In_ DWORD dwHeadersLength,_In_ DWORD dwModifiers)
public NameValueCollection None.DeterminePostBackMode(HttpRequest request None,String postEventSourceID None,String postEventArgumentID None,NameValueCollection baseCollection None)
DWORD DHCP_API_FUNCTION dhcpsapi.DhcpGetVersion(_In_ LPWSTR ServerIpAddress,_Out_ LPDWORD MajorVersion,_Out_ LPDWORD MinorVersion)
private void None.treeView1_KeyDown(Object sender None,KeyEventArgs e None)
HCRYPTMSG WINAPI crypt32.CryptMsgOpenToDecode(_In_ DWORD dwMsgEncodingType,_In_ DWORD dwFlags,_In_ DWORD dwMsgType,_In_ HCRYPTPROV_LEGACY hCryptProv,_In_ PCERT_INFO pRecipientInfo,_In_opt_ PCMSG_STREAM_INFO pStreamInfo)
BOOL None wininet.InternetGetLastResponseInfo(_Out_ LPDWORD lpdwError,_Out_ LPTSTR lpszBuffer,_Inout_ LPDWORD lpdwBufferLength)
BOOL None wininet.InternetGetLastResponseInfoW(_Out_ LPDWORD lpdwError,_Out_ LPTSTR lpszBuffer,_Inout_ LPDWORD lpdwBufferLength)
BOOL None wininet.InternetGetLastResponseInfoA(_Out_ LPDWORD lpdwError,_Out_ LPTSTR lpszBuffer,_Inout_ LPDWORD lpdwBufferLength)
HRESULT None None.GetIsDefaultCEP([out None None,retval] VARIANT_BOOL *pValue)
protected void None.Render(HtmlTextWriter writer None)
private void None.ShowPropertiesOfSlateBlue(PaintEventArgs e None)
protected void None.OnForeColorChanged(EventArgs e None)
protected void None.SetSelectedCellCore(int columnIndex None,int rowIndex None,boolean selected None)
uint32 None ramgmtpsprovider.Set([in] string ComputerName,[in] string ForceTunnel,[in] string OnlyRemoteComputers,[in] string Downlevel,[in] boolean PassThru,[out] DAClientSettings cmdletOutput)
protected void None.TreeView1_SelectedNodeChanged(object sender None,EventArgs e None)
IFsrmRule None None.CreateRule(_FsrmRuleType RuleType None)
HRESULT None None.Int64ToDWordPtr(_In_ INT64 i64Operand,_Out_ DWORD_PTR *pdwResult)
public XmlDocumentType None.CreateDocumentType(String name None,String publicId None,String systemId None,String internalSubset None)
HRESULT None None.DWordToIntPtr(_In_ DWORD dwOperand,_Out_ INT_PTR *piResult)
protected void None.OnParentForeColorChanged(EventArgs e None)
public DayOfWeek None.GetDayOfWeek(DateTime time None)
BOOL None None.PathIsUNCEx(_In_ PCWSTR pszPath,_Out_opt_ PCWSTR *ppszServer)
protected void None.TreeView1_SelectedNodeChanged(object sender None,EventArgs e None)
public int None.IndexOf(T item None,int index None,int count None)
public String None.Replace(String input None,MatchEvaluator evaluator None)
uint32 None None.GetError([out] string Error)
protected void None.PostFilterProperties(IDictionary properties None)
protected void None.mgr1_AuthorizeWebPart(object sender None,WebPartAuthorizationEventArgs e None)
public String None.Replace(String input None,String replacement None,int count None)
BOOL WINAPI wintrust.WTHelperCertIsSelfSigned(_In_ DWORD dwEncoding,_In_ CERT_INFO *pCert)
protected void None.OnHandleCreated(EventArgs e None)
protected void None.OnIsMouseCapturedChanged(DependencyPropertyChangedEventArgs e None)
NTSTATUS WINAPI bcrypt.BCryptOpenAlgorithmProvider(_Out_ BCRYPT_ALG_HANDLE *phAlgorithm,_In_ LPCWSTR pszAlgId,_In_ LPCWSTR pszImplementation,_In_ DWORD dwFlags)
private void None.Page_Load(Object sender None,System.EventArgs e None)
HRESULT None wuapi.get_ResultCode([out] OperationResultCode *retval)
protected void None.OnStylusInAirMove(StylusEventArgs e None)
protected boolean None.IsInputChar(char charCode None)
protected void None.OnAfterSelect(TreeViewEventArgs e None)
protected EventHandler None.GetValueChangedHandler(Object component None)
public int None.GetMonth(DateTime time None)
void None None.Page_Load(Object sender None,EventArgs e None)
LONG WINAPI tapi32.phoneGetGain(HPHONE hPhone None,DWORD dwHookSwitchDev None,LPDWORD lpdwGain None)
private void None.treeView1_KeyDown(Object sender None,KeyEventArgs e None)
public void None.ApplyStyle(Style s None)
HRESULT None None.get_CurrentAccessKey([out None None,retval] BSTR *retVal)
private void None.On_Click(Object source None,System.EventArgs e None)
public boolean None.EndsWith(String value None)
protected void None.LinqDataSource_Updating(object sender None,LinqDataSourceUpdateEventArgs e None)
protected void None.OnStylusInAirMove(StylusEventArgs e None)
int None None.CompareTo(Object obj None)
public XmlNode None.InsertAfter(XmlNode newChild None,XmlNode refChild None)
protected boolean None.LoadPostData(String postDataKey None,NameValueCollection postCollection None)
public Object None.GetService(Type type None)
public void None.SetPropertyItem(PropertyItem propitem None)
private void None.On_Inserting(Object sender None,SqlDataSourceCommandEventArgs e None)
DWORD None virtdisk.CreateVirtualDisk(_In_ PVIRTUAL_STORAGE_TYPE VirtualStorageType,_In_ PCWSTR Path,_In_ VIRTUAL_DISK_ACCESS_MASK VirtualDiskAccessMask,_In_opt_ PSECURITY_DESCRIPTOR SecurityDescriptor,_In_ CREATE_VIRTUAL_DISK_FLAG Flags,_In_ ULONG ProviderSpecificFlags,_In_ PCREATE_VIRTUAL_DISK_PARAMETERS Parameters,_In_opt_ LPOVERLAPPED Overlapped,_Out_ PHANDLE Handle)
public int None.GetWeekOfYear(DateTime time None,CalendarWeekRule rule None,DayOfWeek firstDayOfWeek None)
protected void None.OnGotFocus(EventArgs e None)
protected void None.OnForeColorChanged(EventArgs e None)
Message None None.Request(Message message None,TimeSpan timeout None)
int None None.tolower(int c None)
LONG WINAPI tapi32.phoneGetHookSwitch(HPHONE hPhone None,LPDWORD lpdwHookSwitchDevs None)
HRESULT None wuapi.get_Context([out] UpdateExceptionContext *retval)
protected ICollection None.CreateFieldSet(Object dataItem None,boolean useDataSource None)
public void None.ControlSelect(Control control None)
HRESULT None mstscax.get_AuthenticationType([out] UINT *puiAuthType)
HRESULT None None.PathCchFindExtension(_In_ PCWSTR pszPath,_In_ size_t cchPath,_Out_ PCWSTR *ppszExt)
public XmlNode None.ReadNode(XmlReader reader None)
HRESULT None msctf.GetType([out] GUID *pguid)
HRESULT None None.UIntPtrToInt16(_In_ UINT_PTR uOperand,_Out_ INT16 *pi16Result)
protected void None.OnBindingContextChanged(EventArgs e None)
protected void None.OnParentEnabledChanged(EventArgs e None)
protected void None.OnSelecting(SqlDataSourceSelectingEventArgs e None)
public int None.IndexOf(Object value None,int startIndex None,int count None)
protected boolean None.OnDeserializeUnrecognizedElement(String elementName None,XmlReader reader None)
public String None.ResolveUrl(String relativeUrl None)
HRESULT None None.get_CachedHelp([out None None,retval] BSTR *pszHelp)
HRESULT None shell32.GetSize([out] SIZE *pSize)
protected boolean None.IsElementName(String elementName None)
BOOL WINAPI None.CertStoreProvWriteCertCallback(_In_ HCERTSTOREPROV hStoreProv,_In_ PCCERT_CONTEXT pCertContext,_In_ DWORD dwFlags)
BOOL WINAPI crypt32.CertIsRDNAttrsInCertificateName(_In_ DWORD dwCertEncodingType,_In_ DWORD dwFlags,_In_ PCERT_NAME_BLOB pCertName,_In_ PCERT_RDN pRDN)
HRESULT None wuapi.get_Updates([out] IUpdateCollection **retval)
private void None.currencyTextBox_TextChanged(Object sender None,EventArgs e None)
public None None.StorePermission(PermissionState state None)
public void None.DrawImage(Image image None,float x None,float y None,float width None,float height None)
protected void None.OnBackColorChanged(EventArgs e None)
LONG WINAPI tapi32.phoneGetButtonInfo(HPHONE hPhone None,DWORD dwButtonLampID None,LPPHONEBUTTONINFO lpButtonInfo None)
LONG WINAPI tapi32.phoneGetButtonInfoW(HPHONE hPhone None,DWORD dwButtonLampID None,LPPHONEBUTTONINFO lpButtonInfo None)
LONG WINAPI tapi32.phoneGetButtonInfoA(HPHONE hPhone None,DWORD dwButtonLampID None,LPPHONEBUTTONINFO lpButtonInfo None)
public IAsyncResult None.BeginGetContext(AsyncCallback callback None,Object state None)
DWORD None bthprops.BluetoothRegisterForAuthentication(BLUETOOTH_DEVICE_INFO *pbtdi None,HBLUETOOTH_AUTHENTICATION_REGISTRATION *phRegHandle None,PFN_AUTHENTICATION_CALLBACK pfnCallback None,PVOID pvParam None)
public void None.ChangeMode(DetailsViewMode newMode None)
public XmlReadMode None.ReadXml(XmlReader reader None)
HRESULT None None.QueryOverlayFXCaps([out] DWORD *lpdwOverlayFXCaps)
protected void None.OnAfterSelect(TreeViewEventArgs e None)
void None None.Page_Load(Object sender None,EventArgs e None)
public String None.GetColumnError(int columnIndex None)
HRESULT None None.WordToUChar(_In_ WORD wOperand,_Out_ UCHAR *pch)
HRESULT None faxcom.put_CoverpageSubject([in] BSTR newVal)
public DateTime None.AddMinutes(DateTime time None,int minutes None)
HRESULT None None.GetTopoNodeID([out] TOPOID *pID)
public int None.GetSecond(DateTime time None)
protected void None.OnKeyPress(KeyPressEventArgs e None)
public String None.GetString(String name None)
private void None.CreatePointsAndSizes(PaintEventArgs e None)
HRESULT None None.get_CachedIsKeyboardFocusable([out None None,retval] BOOL *retVal)
HRESULT WINAPI drt.DrtCreateDerivedKeySecurityProvider(_In_ PCCERT_CONTEXT pRootCert,_Out_ DRT_SECURITY_PROVIDER **ppSecurityProvider)
protected void None.OnRowUpdated(GridViewUpdatedEventArgs e None)
private void None.ShowPointConverter(PaintEventArgs e None)
protected void None.TreeView1_SelectedNodeChanged(object sender None,EventArgs e None)
public int None.IndexOf(T item None,int index None,int count None)
private void None.MyForm_Layout(Object sender None,System.Windows.Forms.LayoutEventArgs e None)
public void None.Merge(DataTable table None,boolean preserveChanges None,MissingSchemaAction missingSchemaAction None)
public XmlEntityReference None.CreateEntityReference(String name None)
public DateTime None.AddTicks(long value None)
HRESULT None None.GetScrollMode([out] MF_TIMED_TEXT_SCROLL_MODE *pScrollMode)
protected void None.RemovedControl(Control control None)
protected boolean None.OnDeserializeUnrecognizedElement(String elementName None,XmlReader reader None)
HRESULT None None.get_CurrentIsPassword([out None None,retval] BOOL *retVal)
BOOL None shlwapi.PathCompactPathEx(_Out_ LPTSTR pszOut,_In_ LPCTSTR pszSrc,_In_ UINT cchMax,_Reserved_ DWORD dwFlags)
BOOL None shlwapi.PathCompactPathExW(_Out_ LPTSTR pszOut,_In_ LPCTSTR pszSrc,_In_ UINT cchMax,_Reserved_ DWORD dwFlags)
BOOL None shlwapi.PathCompactPathExA(_Out_ LPTSTR pszOut,_In_ LPCTSTR pszSrc,_In_ UINT cchMax,_Reserved_ DWORD dwFlags)
SerializableAttribute None None.TypeConverterAttribute(System.Windows.Forms.ListViewGroupConverter None None)
public None None.DateTime(long ticks None)
HBLUETOOTH_RADIO_FIND None bthprops.BluetoothFindFirstRadio(BLUETOOTH_FIND_RADIO_PARAMS *pbtfrp None,_Out_ HANDLE *phRadio)
SerializableAttribute None None.ClassInterfaceAttribute(ClassInterfaceType.None None None)
HRESULT None None.GetCount([out] UINT32 *pcItems)
public DayOfWeek None.GetDayOfWeek(DateTime time None)
private void None.listDragTarget_DragOver(Object sender None,System.Windows.Forms.DragEventArgs e None)
public int None.GetEra(DateTime time None)
protected Geometry None.GetLayoutClip(Size layoutSlotSize None)
DWORD None mpr.WNetGetProviderName(_In_ DWORD dwNetType,_Out_ LPTSTR lpProviderName,_Inout_ LPDWORD lpBufferSize)
DWORD None mpr.WNetGetProviderNameW(_In_ DWORD dwNetType,_Out_ LPTSTR lpProviderName,_Inout_ LPDWORD lpBufferSize)
DWORD None mpr.WNetGetProviderNameA(_In_ DWORD dwNetType,_Out_ LPTSTR lpProviderName,_Inout_ LPDWORD lpBufferSize)
public DateTime None.AddMinutes(DateTime time None,int minutes None)
public int None.LastIndexOf(String value None,int startIndex None,int count None,StringComparison comparisonType None)
protected void None.OnKeyPress(KeyPressEventArgs e None)
HierarchicalDataSourceView None None.GetHierarchicalView(String viewPath None)
uint32 None ramgmtpsprovider.AddByClientSGGpo([in] string SecurityGroupNameList[],[in] string GpoName[],[in] string ComputerName,[in] boolean PassThru,[out] DAClient cmdletOutput)
public None None.HttpContext(HttpRequest request None,HttpResponse response None)
protected void None.PostFilterEvents(IDictionary events None)
DNS_STATUS WINAPI dnsapi.DnsCancelQuery(_In_ PDNS_QUERY_CANCEL pCancelHandle)
public void None.InitializeCell(DataControlFieldCell cell None,DataControlCellType cellType None,DataControlRowState rowState None,int rowIndex None)
PropertyDescriptorCollection None None.GetItemProperties(PropertyDescriptor[] listAccessors None)
HRESULT None None.ULongPtrToInt64(_In_ ULONG_PTR ulOperand,_Out_ INT64 *pi64Result)
HRESULT None wuapi.get_CurrentUpdatePercentComplete([out] LONG *retval)
private void None.Page_Init(Object sender None,EventArgs e None)
HRESULT None None.GetContext([out] LPWSTR *ppszContext)
DWORD WINAPI fwpuclnt.FwpmCalloutGetById0(_In_ HANDLE engineHandle,_In_ UINT32 id,_Out_ FWPM_CALLOUT0 **callout)
BOOL None shlwapi.PathRelativePathTo(_Out_ LPTSTR pszPath,_In_ LPCTSTR pszFrom,_In_ DWORD dwAttrFrom,_In_ LPCTSTR pszTo,_In_ DWORD dwAttrTo)
BOOL None shlwapi.PathRelativePathToW(_Out_ LPTSTR pszPath,_In_ LPCTSTR pszFrom,_In_ DWORD dwAttrFrom,_In_ LPCTSTR pszTo,_In_ DWORD dwAttrTo)
BOOL None shlwapi.PathRelativePathToA(_Out_ LPTSTR pszPath,_In_ LPCTSTR pszFrom,_In_ DWORD dwAttrFrom,_In_ LPCTSTR pszTo,_In_ DWORD dwAttrTo)
HRESULT WINAPI drt.DrtCreatePnrpBootstrapResolver(_In_ BOOL fPublish,_In_ PCWSTR pwzPeerName,_In_opt_ PCWSTR pwzCloudName,_In_opt_ PCWSTR pwzPublishingIdentity,_Out_ DRT_BOOTSTRAP_RESOLVER **ppResolver)
public void None.ReadXmlSchema(Stream stream None)
HRESULT None None.PathCchCanonicalize(_Out_ PWSTR pszPathOut,_In_ size_t cchPathOut,_In_ PCWSTR pszPathIn)
uint32 None None.OnlineDevice([in] boolean Online)
protected void None.TreeView1_SelectedNodeChanged(object sender None,EventArgs e None)
protected void None.OnMouseDown(MouseButtonEventArgs e None)
IDataReader None None.ExecuteReader(CommandBehavior behavior None)
protected boolean None.GetStyle(ControlStyles flag None)
protected void None.OnMouseHover(EventArgs e None)
public void None.Save(ConfigurationSaveMode saveMode None)
public void None.RemoveAnnuallyBoldedDate(DateTime date None)
DWORD WINAPI fwpuclnt.FwpmNetEventEnum1(_In_ HANDLE engineHandle,_In_ HANDLE enumHandle,_In_ UINT32 numEntriesRequested,_Out_ FWPM_NET_EVENT1 ***entries,_Out_ UINT32 *numEntriesReturned)
protected void None.SetCurrent(Object newItem None,int newPosition None)
protected void None.OnKeyUp(KeyEventArgs e None)
PTSTR None shlwapi.PathGetArgs(_In_ PTSTR pszPath)
PTSTR None shlwapi.PathGetArgsW(_In_ PTSTR pszPath)
PTSTR None shlwapi.PathGetArgsA(_In_ PTSTR pszPath)
protected void None.OnPropertyChanged(DependencyPropertyChangedEventArgs e None)
protected void None.RaiseBubbleEvent(Object source None,EventArgs args None)
protected void None.PreFilterEvents(IDictionary events None)
void None None.Page_Load(Object sender None,System.EventArgs e None)
NTSTATUS WINAPI bcrypt.BCryptFinalizeKeyPair(_Inout_ BCRYPT_KEY_HANDLE hKey,_In_ ULONG dwFlags)
private void None.listDragSource_QueryContinueDrag(Object sender None,System.Windows.Forms.QueryContinueDragEventArgs e None)
public XmlNode None.InsertAfter(XmlNode newChild None,XmlNode refChild None)
private void None.SelectNode(TreeNode node None)
DWORD DHCP_API_FUNCTION dhcpsapi.DhcpV4DeletePolicy(_In_opt_ LPWSTR ServerIpAddress,_In_ BOOL fGlobalPolicy,_In_ DHCP_IP_ADDRESS SubnetAddress,_In_ LPWSTR PolicyName)
BOOL WINAPI crypt32.CertVerifyCertificateChainPolicy(_In_ LPCSTR pszPolicyOID,_In_ PCCERT_CHAIN_CONTEXT pChainContext,_In_ PCERT_CHAIN_POLICY_PARA pPolicyPara,_Inout_ PCERT_CHAIN_POLICY_STATUS pPolicyStatus)
protected boolean None.OnDeserializeUnrecognizedElement(String elementName None,XmlReader reader None)
private void None.showCheckedNodesButton_Click(Object sender None,EventArgs e None)
PCERT_EXTENSION WINAPI crypt32.CertFindExtension(_In_ LPCSTR pszObjId,_In_ DWORD cExtensions,_In_ CERT_EXTENSION rgExtensions[])
HRESULT None None.GetTemplates([out None None,retval] IX509CertificateTemplates **pTemplates)
HRESULT None mfmediaengine.GetTracks([out] IMFTimedTextTrackList **tracks)
public void None.Initialize(IComponent component None)
Dim None None.arrayA( None None)
HRESULT None None.GetRequestIdString([out None None,retval] BSTR *pValue)
public void None.Start(Object parameter None)
HRESULT None wuapi.get_RedirectUrls([out] IStringCollection *retval)
BOOL WINAPI wintrust.CryptCATCDFClose(_In_ CRYPTCATCDF *pCDF)
HRESULT None None.SelectParentalLevel(ULONG ulParentalLevel None)
NTSTATUS None None.WdfSpinLockCreate(_In_opt_ PWDF_OBJECT_ATTRIBUTES SpinLockAttributes,_Out_ WDFSPINLOCK *SpinLock)
protected void None.OnCreateVerbs(WebPartVerbsEventArgs e None)
public DateTime None.AddHours(double value None)
HRESULT None None.DWordToUChar(_In_ DWORD dwOperand,_Out_ UCHAR *puchResult)
private void None.myButton_Click(Object sender None,System.EventArgs e None)
String None None.GetAttribute(String key None)
public String None.GetString(String name None)
HRESULT None None.GetScrollMode([out] MF_TIMED_TEXT_SCROLL_MODE *pScrollMode)
DWORD None mpr.WNetEnumResource(_In_ HANDLE hEnum,_Inout_ LPDWORD lpcCount,_Out_ LPVOID lpBuffer,_Inout_ LPDWORD lpBufferSize)
DWORD None mpr.WNetEnumResourceW(_In_ HANDLE hEnum,_Inout_ LPDWORD lpcCount,_Out_ LPVOID lpBuffer,_Inout_ LPDWORD lpBufferSize)
DWORD None mpr.WNetEnumResourceA(_In_ HANDLE hEnum,_Inout_ LPDWORD lpcCount,_Out_ LPVOID lpBuffer,_Inout_ LPDWORD lpBufferSize)
public int None.LastIndexOf(Object value None,int startIndex None)
public void None.WriteArray(String prefix None,String localName None,String namespaceUri None,long[] array None,int offset None,int count None)
HRESULT None None.get_CurrentIsRequiredForForm([out None None,retval] BOOL *retVal)
protected None None.ArgumentOutOfRangeException(SerializationInfo info None,StreamingContext context None)
HRESULT None None.ULongLongToUInt(_In_ ULONGLONG ullOperand,_Out_ UINT *puiResult)
protected void None.OnMouseClick(MouseEventArgs e None)
SECURITY_STATUS SEC_Entry secur32.DecryptMessage(_In_ PCtxtHandle phContext,_Inout_ PSecBufferDesc pMessage,_In_ ULONG MessageSeqNo,_Out_ PULONG pfQOP)
HRESULT None None.UShortToByte(_In_ USHORT usOperand,_Out_ BYTE *pb)
NTSTATUS None None.LsaApInitializePackage(_In_ ULONG AuthenticationPackageId,_In_ PLSA_DISPATCH_TABLE LsaDispatchTable,_In_opt_ PLSA_STRING Database,_In_opt_ PLSA_STRING Confidentiality,_Out_ PLSA_STRING *AuthenticationPackageName)
uint32 None None.RequestStateChange([in] uint16 RequestedState,[in] datetime TimeoutPeriod)
protected void None.OnParentForeColorChanged(EventArgs e None)
public String None.Replace(String input None,String replacement None,int count None,int startat None)
private void None.On_Inserting(Object sender None,SqlDataSourceCommandEventArgs e None)
DWORD DHCP_API_FUNCTION dhcpsapi.DhcpV4GetPolicy(_In_opt_ LPWSTR ServerIpAddress,_In_ BOOL fGlobalPolicy,_In_ DHCP_IP_ADDRESS SubnetAddress,_In_ LPWSTR PolicyName,_Out_ LPDHCP_POLICY *Policy)
int None None.tolower(int c None)
public void None.SetDataBinding(Object dataSource None,String dataMember None)
public void None.EnumerateMetafile(Metafile metafile None,Rectangle destRect None,EnumerateMetafileProc callback None)
public void None.Remove(String name None)
protected void None.TreeView1_SelectedNodeChanged(object sender None,EventArgs e None)
private void None.whatIsChecked_Click(Object sender None,System.EventArgs e None)
protected void None.ScaleCore(float dx None,float dy None)
HRESULT None None.DWordToSSIZET(_In_ DWORD dwOperand,_Out_ SSIZE_T *pcbResult)
public Size None.GetPreferredSize(Size proposedSize None)
public void None.CreateDefaultTemplatedUI(boolean doDataBind None)
String None None.GetAttribute(String key None)
protected void None.TreeView1_SelectedNodeChanged(object sender None,EventArgs e None)
public String None.Replace(String input None,String replacement None,int count None)
public WebResponse None.EndGetResponse(IAsyncResult asyncResult None)
protected void None.OnPreviewStylusMove(StylusEventArgs e None)
protected int None.Fill(DataTable[] dataTables None,int startRecord None,int maxRecords None,IDbCommand command None,CommandBehavior behavior None)
private void None.NorthwindEmployeeInserting(Object source None,ObjectDataSourceMethodEventArgs e None)
private void None.currencyTextBox_TextChanged(Object sender None,EventArgs e None)
private void None.OnDSUpdatedHandler(Object source None,SqlDataSourceStatusEventArgs e None)
LONG WINAPI tapi32.phoneSetStatusMessages(HPHONE hPhone None,DWORD dwPhoneStates None,DWORD dwButtonModes None,DWORD dwButtonStates None)
void None None.AddInheritedComponents(IComponent component None,IContainer container None)
public int None.Compare(String string1 None,String string2 None)
protected void None.OnKeyUp(KeyEventArgs e None)
HRESULT WINAPI drt.DrtGetInstanceName(_In_ HDRT hDrt,_Inout_ ULONG *pucblInstanceNameLen,_Out_ PWSTR pwzDrtInstanceName[_bcount_full])
HierarchicalDataSourceView None None.GetHierarchicalView(String viewPath None)
private void None.CloseFigureExample(PaintEventArgs e None)
CREATE TABLE None.MoneyTable(col1 int None,col2 smallmoney None,col3 decimal None)
LONG WINAPI clusapi.ClusterRegBatchCloseNotification(_In_ HREGBATCHNOTIFICATION hBatchNotification)
public XmlNode None.InsertBefore(XmlNode newChild None,XmlNode refChild None)
HRESULT None msctf.GetGravity([out] TfGravity *pgStart,[out] TfGravity *pgEnd)
public IAsyncResult None.BeginGetRequestStream(AsyncCallback callback None,Object state None)
HRESULT None None.GetWritingMode([out] MF_TIMED_TEXT_WRITING_MODE *pWritingMode)
private void None.listDragTarget_DragLeave(Object sender None,System.EventArgs e None)
T None None.N(T t None,U u None)
DWORD CALLBACK None.EditStreamCallback(_In_ DWORD_PTR dwCookie,_In_ LPBYTE pbBuff,_In_ LONG cb,_In_ LONG *pcb)
HRESULT None None.IntPtrToInt(_In_ INT_PTR iOperand,_Out_ INT *piResult)
protected void None.LoadControlState(Object savedState None)
public String None.MapPath(String virtualPath None)
public Object None.ConvertFromString(String text None)
VOID DHCP_API_FUNCTION dhcpsapi.DhcpRpcFreeMemory(PVOID BufferPointer None)
DWORD None dhcpsapi.DhcpAuditLogGetParams(_In_ LPWSTR ServerIpAddress,_In_ DWORD Flags,_Out_ LPWSTR *AuditLogDir,_Out_ DWORD *DiskCheckInterval,_Out_ DWORD *MaxLogFilesSize,_Out_ DWORD *MinSpaceOnDisk)
protected None None.ArgumentOutOfRangeException(SerializationInfo info None,StreamingContext context None)
public Object None.ConvertFrom(ITypeDescriptorContext context None,CultureInfo culture None,Object value None)
HRESULT None None.IntToByte(_In_ INT iOperand,_Out_ BYTE *pb)
void None None.RemoveAttribute(String attribute None,boolean ignoreCase None)
protected void None.RenderChildren(HtmlTextWriter writer None)
SECURITY_STATUS SEC_Entry secur32.DecryptMessage(_In_ PCtxtHandle phContext,_Inout_ PSecBufferDesc pMessage,_In_ ULONG MessageSeqNo,_Out_ PULONG pfQOP)
protected void None.HashCore(byte[] rgbData None,int ibStart None,int cbSize None)
public void None.InitializeNewComponent(IDictionary defaultValues None)
private void None.myButton_Click(Object sender None,System.EventArgs e None)
int None None.mbtowc(wchar_t *wchar None,const char *mbchar,size_t count None)
private void None.On_Inserting(Object sender None,SqlDataSourceCommandEventArgs e None)
public DateTime None.AddWeeks(DateTime time None,int weeks None)
HRESULT None None.CheckContosoHasDotHTM(__out BOOL* pfHasDotHTM)
protected void None.OnKeyUp(KeyEventArgs e None)
BOOL WINAPI None.CertStoreProvWriteCTL(_In_ HCERTSTOREPROV hStoreProv,_In_ PCCTL_CONTEXT pCtlContext,_In_ DWORD dwFlags)
VOID WINAPI crypt32.CertAddRefServerOcspResponseContext(_In_ PCCERT_SERVER_OCSP_RESPONSE_CONTEXT pServerOcspResponseContext)
HRESULT None None.GetUseClientId([out None None,retval] VARIANT_BOOL *pValue)
protected void None.OnUpdating(SqlDataSourceCommandEventArgs e None)
private void None.CreatePointsAndSizes(PaintEventArgs e None)
protected void None.TreeView1_SelectedNodeChanged(object sender None,EventArgs e None)
public int None.GetMaxCharCount(int byteCount None)
public boolean None.CanDeserialize(XmlReader xmlReader None)
HRESULT None None.GetProgID([out] LPWSTR *ppszProgID)
HRESULT None None.GetSharedBitmap([out] HBITMAP *phbm)
HRESULT None None.ULongToUInt8(_In_ ULONG ulOperand,_Out_ UINT8 *pui8Result)
protected boolean None.GetScrollState(int bit None)
private void None.SelectNode(TreeNode node None)
private void None.myButton_Click(Object sender None,System.EventArgs e None)
HRESULT None None.get_CurrentFlowsTo([out None None,retval] IUIAutomationElementArray **retVal)
public void None.Localize(IDesignTimeResourceWriter resourceWriter None)
UInt32 None None.StartDiagnosticLog([in] UInt16 Level,[in] UInt64 MaxLogSize,[out] String ExtendedStatus)
public UITypeEditorEditStyle None.GetEditStyle(ITypeDescriptorContext context None)
HRESULT None None.get_CachedIsEnabled([out None None,retval] BOOL *retVal)
private void None.CreatePointsAndSizes(PaintEventArgs e None)
protected void None.InvokePaintBackground(Control c None,PaintEventArgs e None)
HRESULT None wuapi.Results([out] IAutomaticUpdatesResults **retval)
protected void None.BaseRemove(Object key None)
HNODEENUMEX WINAPI clusapi.ClusterNodeOpenEnumEx(_In_ HNODE hNode,_In_ DWORD dwType,_In_opt_ PVOID pOptions)
public int None.GetMaxCharCount(int byteCount None)
BOOL None user32.ValidateRgn(_In_ HWND hWnd,_In_ HRGN hRgn)
private void None.listDragSource_QueryContinueDrag(Object sender None,System.Windows.Forms.QueryContinueDragEventArgs e None)
DWORD DHCP_API_FUNCTION dhcpsapi.DhcpRemoveSubnetElementV6(_In_ LPWSTR ServerIpAddress,_In_ DHCP_IPV6_ADDRESS SubnetAddress,_In_ LDHCP_SUBNET_ELEMENT_DATA_V6 RemoveElementInfo,_In_ DHCP_FORCE_FLAG ForceFlag)
public Rectangle None.RectangleToClient(Rectangle r None)
protected void None.OnHandleCreated(EventArgs e None)
public XmlEntityReference None.CreateEntityReference(String name None)
private void None.myButton_Click(Object sender None,System.EventArgs e None)
HRESULT None None.get_CurrentValue([out None None,retval] BSTR *pszValue)
public None None.XmlDocument(XmlNameTable nt None)
public int None.GetYear(DateTime time None)
LPVOID WINAPI kernel32.LocalLock(_In_ HLOCAL hMem)
protected void None.OnRowCancelingEdit(GridViewCancelEditEventArgs e None)
T None None.N(T t None,U u None)
uint32 None dnsserverpsprovider.AddByInputObject([in] boolean PassThru,[in] string ComputerName,[in] DnsServerPolicy InputObject,[in] string ZoneName,[out] DnsServerPolicy cmdletOutput)
public boolean None.IsDescendantOf(SiteMapNode node None)
private void None.NorthwindEmployeeInserting(Object source None,ObjectDataSourceMethodEventArgs e None)
void None None.Page_Load(Object sender None,EventArgs e None)
DWORD None bthprops.BluetoothSendAuthenticationResponse(HANDLE hRadio None,BLUETOOTH_DEVICE_INFO *pbtdi None,LPWSTR pszPasskey None)
public Object None.ConvertFromString(String text None)
public void None.InitializeCell(DataControlFieldCell cell None,DataControlCellType cellType None,DataControlRowState rowState None,int rowIndex None)
uint32 None ramgmtpsprovider.RemoveByClientDownlevelSGGpo([in] string DownlevelSecurityGroupNameList[],[in] string ComputerName,[in] boolean PassThru,[in] string DownlevelDomainName[],[in] string EntrypointName,[out] DAClient cmdletOutput)
public Match None.Match(String input None,int startat None)
public RegistryKey None.OpenSubKey(String name None,boolean writable None)
HRESULT None None.ULongLongToInt64(_In_ ULONGLONG ullOperand,_Out_ INT64 *pi64Result)
public XmlNode None.CloneNode(boolean deep None)
HRESULT None None.put_EnableMulticast(VARIANT_BOOL EnableMulticast None)
HRESULT None None.SIZETToLongPtr(_In_ SIZE_T cbOperand,_Out_ LONG_PTR *plResult)
HRESULT None None.LongToWord(_In_ LONG lOperand,_Out_ WORD *pwResult)
size_t None None.strspn(const char *str,const char *strCharSet)
DWORD DHCP_API_FUNCTION dhcpsapi.DhcpHlprIsV4PolicyValid(_In_ LPDHCP_POLICY pPolicy)
function None None.GetQuantity(productID None None,elemToUpdate None None,productLabelElem None None,buttonElem None None)
public None None.ConnectionProviderAttribute(String displayName None)
protected void None.BaseRemove(Object key None)
public void None.RenderControl(HtmlTextWriter writer None)
protected String None.MapPathSecure(String virtualPath None)
HCATINFO None wintrust.CryptCATAdminEnumCatalogFromHash(_In_ HCATADMIN hCatAdmin,_In_ BYTE *pbHash,_In_ DWORD cbHash,_In_ DWORD dwFlags,_In_ HCATINFO *phPrevCatInfo)
protected void None.OnPreviewStylusSystemGesture(StylusSystemGestureEventArgs e None)
HRESULT None None.GetClickablePoint([out] POINT *clickable,[out None None,retval] BOOL *gotClickable)
int None None.__toascii(int c None)
void None None.Page_Load(Object Sender None,EventArgs e None)
LONG WINAPI tapi32.phoneClose(HPHONE hPhone None)
private void None.ShowPropertiesOfSlateBlue(PaintEventArgs e None)
public void None.AddRange(Installer[] value None)
DWORD None dhcpsapi.DhcpAddServer(_In_ DWORD Flags,_In_ LPVOID IdInfo,_In_ LPDHCP_SERVER_INFO NewServer,_In_ LPVOID CallbackFn,_In_ LPVOID CallbackData)
private void None.openToolStripMenuItem_Click(object sender None,EventArgs e None)
public XmlNode None.PrependChild(XmlNode newChild None)
public void None.DownloadFileAsync(Uri address None,String fileName None)
protected void None.LoadViewState(Object savedState None)
protected void None.SetSelectedCellCore(int columnIndex None,int rowIndex None,boolean selected None)
private void None.Link_Clicked(Object sender None,System.Windows.Forms.LinkClickedEventArgs e None)
protected void None.button1_Click(Object sender None,System.EventArgs e None)
protected void None.BaseRemove(Object key None)
protected void None.OnInit(EventArgs e None)
LRESULT CALLBACK None.WindowProc(HWND hwnd None,UINT uMsg None,WPARAM wParam None,LPARAM lParam None)
HRESULT None None.GetTime([out] FILETIME *pfCreationTime)
public String None.GetKnownRequestHeader(int index None)
HRESULT None faxcom.GetRoutingMethods([out] IDispatch *retVal)
HRESULT None None.GetCachedSelection([out None None,retval] IUIAutomationElementArray **pvarSelectedChildren)
public Type None.MakeGenericType(Type[] typeArguments None)
BOOL WINAPI crypt32.CryptInstallOIDFunctionAddress(_In_ HMODULE hModule,_In_ DWORD dwEncodingType,_In_ LPCSTR pszFuncName,_In_ DWORD cFuncEntry,_In_ CRYPT_OID_FUNC_ENTRY rgFuncEntry[],_In_ DWORD dwFlags)
HRESULT None None.get_CachedFlowsTo([out None None,retval] IUIAutomationElementArray **retVal)
protected void None.OnMouseMove(MouseEventArgs e None)
public ICustomTypeDescriptor None.GetExtendedTypeDescriptor(Object instance None)
BOOL WINAPI advapi32.CryptEncrypt(_In_ HCRYPTKEY hKey,_In_ HCRYPTHASH hHash,_In_ BOOL Final,_In_ DWORD dwFlags,_Inout_ BYTE *pbData,_Inout_ DWORD *pdwDataLen,_In_ DWORD dwBufLen)
public void None.CloseWebPart(WebPart webPart None)
HRESULT None None.GetNextUpdateTime([out None None,retval] DATE *pDate)
private void None.OnRecordDeleting(Object source None,SqlDataSourceCommandEventArgs e None)
public String None.GetString(String name None)
protected void None.TreeView1_SelectedNodeChanged(object sender None,EventArgs e None)
protected void None.OnPreviewKeyUp(KeyEventArgs e None)
HRESULT None None.ULongToUChar(_In_ ULONG ulOperand,_Out_ UCHAR *pch)
EDITWORDBREAKPROC None None.Edit_GetWordBreakProc(HWND hwndCtl None)
BOOL None bthprops.BluetoothFindRadioClose(HBLUETOOTH_RADIO_FIND hFind None)
private void None.CreatePointsAndSizes(PaintEventArgs e None)
PropertyDescriptorCollection None None.GetItemProperties(PropertyDescriptor[] listAccessors None)
HRESULT None wuapi.get_TotalBytesToDownload([out] DECIMAL *retval)
public Object None.GetEditor(Type editorBaseType None)
private void None.Page_Load(Object sender None,System.EventArgs e None)
protected boolean None.ProcessDialogKey(Keys keyData None)
protected void None.OnBackColorChanged(EventArgs e None)
public void None.ApplyStyle(DataGridViewCellStyle dataGridViewCellStyle None)
private void None.Page_Init(Object sender None,EventArgs e None)
HRESULT None None.GetFileName([out] WCHAR **pszName)
HDC None user32.BeginPaint(_In_ HWND hwnd,_Out_ LPPAINTSTRUCT lpPaint)
HRESULT None None.SSIZETToULong(_In_ SSIZE_T cbOperand,_Out_ ULONG *pulResult)
HRESULT None None.get_CurrentKeyboardShortcut([out None None,retval] BSTR *pszKeyboardShortcut)
HRESULT None None.GetCount([out] ULONG *pcCount)
private void None.NorthwindEmployeeDeleting(Object source None,ObjectDataSourceMethodEventArgs e None)
public boolean None.ShouldSerializeValue(Object component None)
public void None.KnownColorBrightnessExample1(PaintEventArgs e None)
protected void None.OnRowStateChanged(int rowIndex None,DataGridViewRowStateChangedEventArgs e None)
public void None.RemoveAnnuallyBoldedDate(DateTime date None)
protected void None.OnRowCancelingEdit(GridViewCancelEditEventArgs e None)
private void None.OnDSUpdatedHandler(Object source None,SqlDataSourceStatusEventArgs e None)
public IPermission None.SetPermission(IPermission perm None)
public void None.ControlSelect(Control control None)
function None None.GetQuantity(productID None None,elemToUpdate None None,productLabelElem None None,buttonElem None None)
public void None.Invalidate(Region region None)
protected void None.OnParentEnabledChanged(EventArgs e None)
private void None.ShowPropertiesOfSlateBlue(PaintEventArgs e None)
protected void None.SetAttribute(String name None,String value None)
private void None.button3_Click(Object sender None,System.EventArgs e None)
HRESULT None None.DWordToChar(_In_ DWORD dwOperand,_Out_ __wchar_t *pch)
HRESULT None None.LongLongToUChar(_In_ LONGLONG llOperand,_Out_ UCHAR *pch)
protected void None.OnParentChanged(ToolStrip oldParent None,ToolStrip newParent None)
private void None.showCheckedNodesButton_Click(Object sender None,EventArgs e None)
public DependencyObject None.FindCommonVisualAncestor(DependencyObject otherVisual None)
private void None.listDragSource_QueryContinueDrag(Object sender None,System.Windows.Forms.QueryContinueDragEventArgs e None)
public String None.Replace(String input None,MatchEvaluator evaluator None)
protected void None.AddDesignTimeCssAttributes(IDictionary styleAttributes None)
public ValidationResult None.MergeAndValidatePrintTicket(PrintTicket basePrintTicket None,PrintTicket deltaPrintTicket None)
BOOL WINAPI advapi32.LookupPrivilegeValue(_In_opt_ LPCTSTR lpSystemName,_In_ LPCTSTR lpName,_Out_ PLUID lpLuid)
BOOL WINAPI advapi32.LookupPrivilegeValueW(_In_opt_ LPCTSTR lpSystemName,_In_ LPCTSTR lpName,_Out_ PLUID lpLuid)
BOOL WINAPI advapi32.LookupPrivilegeValueA(_In_opt_ LPCTSTR lpSystemName,_In_ LPCTSTR lpName,_Out_ PLUID lpLuid)
public None None.ConnectionProviderAttribute(String displayName None)
DWORD None bthprops.BluetoothAuthenticateDevice(HWND hwndParent None,HANDLE hRadio None,BLUETOOTH_DEVICE_INFO *pbtdi None,PWCHAR pszPasskey None,ULONG ulPasskeyLength None)
protected void None.PreFilterEvents(IDictionary events None)
HRESULT None None.LongPtrToSIZET(_In_ LONG_PTR lOperand,_Out_ SIZE_T *pcbResult)
public int None.ToFourDigitYear(int year None)
public int None.GetChars(byte[] bytes None,int byteIndex None,int byteCount None,char[] chars None,int charIndex None,boolean flush None)
public WebPart None.GetWebPart(WebPartDescription description None)
HRESULT None None.get_NumCategories([out] DWORD *pdwNumCategories)
HRESULT None certadm.CertSrvBackupRead(_In_ HCSBC hbc,_Out_ VOID *pvBuffer,_In_ DWORD cbBuffer,_Out_ DWORD *pcbRead)
public String None.Replace(String input None,MatchEvaluator evaluator None)
public void None.FromArgb4(PaintEventArgs e None)
public None None.Employee(string name None,string alias None)
HRESULT None None.GetTimeSeekResult([out] QWORD *pqwStartTime,[out] QWORD *pqwStopTime,[out] QWORD *pqwStartTime)
DWORD None mpr.WNetOpenEnum(_In_ DWORD dwScope,_In_ DWORD dwType,_In_ DWORD dwUsage,_In_ LPNETRESOURCE lpNetResource,_Out_ LPHANDLE lphEnum)
DWORD None mpr.WNetOpenEnumW(_In_ DWORD dwScope,_In_ DWORD dwType,_In_ DWORD dwUsage,_In_ LPNETRESOURCE lpNetResource,_Out_ LPHANDLE lphEnum)
DWORD None mpr.WNetOpenEnumA(_In_ DWORD dwScope,_In_ DWORD dwType,_In_ DWORD dwUsage,_In_ LPNETRESOURCE lpNetResource,_Out_ LPHANDLE lphEnum)
protected void None.OnClick(EventArgs e None)
void None None.ValidateBtn_Click(Object sender None,EventArgs e None)
errno_t None None.strncpy_s(char *strDest None,size_t numberOfElements None,const char *strSource,size_t count None)
BOOL None shlwapi.PathIsContentType(_In_ LPCTSTR pszPath,_In_ LPCTSTR pszContentType)
BOOL None shlwapi.PathIsContentTypeW(_In_ LPCTSTR pszPath,_In_ LPCTSTR pszContentType)
BOOL None shlwapi.PathIsContentTypeA(_In_ LPCTSTR pszPath,_In_ LPCTSTR pszContentType)
public None None.DateTime(long ticks None)
public int None.GetMaxByteCount(int charCount None)
LONG WINAPI tapi32.phoneInitialize(LPHPHONEAPP lphPhoneApp None,HINSTANCE hInstance None,PHONECALLBACK lpfnCallback None,LPCSTR lpszAppName None,LPDWORD lpdwNumDevs None)
HRESULT None updateendpointauth.TokenType([out] UpdateEndpointAuthTokenType *pTokenType)
uint32 None ramgmtpsprovider.RemoveByClientSGGpo([in] string SecurityGroupNameList[],[in] string ComputerName,[in] boolean PassThru,[in] string DomainName[],[out] DAClient cmdletOutput)
protected void None.OnPropertyChanged(DependencyPropertyChangedEventArgs e None)
public GeneralTransform None.TransformToAncestor(Visual ancestor None)
public void None.SetCacheKey(Cache cache None)
HRESULT None shell32.GetPreviousPage([out] HPROPSHEETPAGE *phPage)
private void None.Page_Init(Object sender None,EventArgs e None)
private void None.showCheckedNodesButton_Click(Object sender None,EventArgs e None)
public None None.XmlSerializer(Type type None,String defaultNamespace None)
public None None.StorePermission(PermissionState state None)
HRESULT None faxcom.put_CoverpageSubject([in] BSTR newVal)
private void None.ShowPropertiesOfSlateBlue(PaintEventArgs e None)
private void None.showCheckedNodesButton_Click(Object sender None,EventArgs e None)
HRESULT None None.GetFolder([out] IShellItem **ppsi)
public IAsyncResult None.BeginGetResponse(AsyncCallback callback None,Object state None)
protected boolean None.SerializeElement(XmlWriter writer None,boolean serializeCollectionKey None)
private void None.Form1Closing(Object sender None,System.ComponentModel.CancelEventArgs e None)
HRESULT None oleaut32.VarUI2FromUI4(_In_ ULONG ulIn,_Out_ USHORT *puiOut)
protected MarshalByRefObject None.MemberwiseClone(boolean cloneIdentity None)
public void None.Uninstall(IDictionary savedState None)
void None None.ReadXml(XmlReader reader None)
HRESULT WINAPI drt.DrtGetSearchResultSize(_In_ HDRT_SEARCH_CONTEXT hSearchContext,_Out_ ULONG *pulSearchResultSize)
HRESULT None wuapi.get_CurrentUpdateBytesDownloaded([out] DECIMAL *retval)
HRESULT None None.ShortToDWordPtr(_In_ SHORT sOperand,_Out_ DWORD_PTR *pdwResult)
public void None.WriteLine(char[] buffer None,int index None,int count None)
public void None.GetPageAsync(int pageNumber None,Object userState None)
HRESULT None None.LongLongToLong(_In_ LONGLONG llOperand,_Out_ LONG *plResult)
public void None.Validate(String validationGroup None)
BOOL WINAPI crypt32.CryptExportPublicKeyInfo(_In_ HCRYPTPROV_OR_NCRYPT_KEY_HANDLE hCryptProvOrNCryptKey,_In_ DWORD dwKeySpec,_In_ DWORD dwCertEncodingType,_Out_ PCERT_PUBLIC_KEY_INFO pInfo,_Inout_ DWORD *pcbInfo)
public int None.GetWeekOfYear(DateTime time None,CalendarWeekRule rule None,DayOfWeek firstDayOfWeek None)
protected void None.AddCore(DataRelation relation None)
public void None.SetStartLine(int line None)
public void None.CopyTo(ConfigurationElement[] array None,int index None)
LONG WINAPI tapi32.phoneGetData(HPHONE hPhone None,DWORD dwDataID None,LPVOID lpData None,DWORD dwSize None)
DWORD WINAPI advapi32.GetSecurityInfo(_In_ HANDLE handle,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_Out_opt_ PSID *ppsidOwner,_Out_opt_ PSID *ppsidGroup,_Out_opt_ PACL *ppDacl,_Out_opt_ PACL *ppSacl,_Out_opt_ PSECURITY_DESCRIPTOR *ppSecurityDescriptor)
public None None.DataGridViewCellFormattingEventArgs(int columnIndex None,int rowIndex None,Object value None,Type desiredType None,DataGridViewCellStyle cellStyle None)
protected void None.button1_Click(Object sender None,System.EventArgs e None)
HRESULT None shell32.GetPageCount([out] ULONG *pcPages)
HRESULT WINAPI drt.DrtCreateDerivedKey(_In_ PCCERT_CONTEXT pRootCert,_In_ PCCERT_CONTEXT pLocalCert,_Out_ DRT_DATA *pKey)
public void None.CloseWebPart(WebPart webPart None)
protected void None.LoadControlState(Object savedState None)
protected void None.BaseRemove(Object key None)
private void None.PrintCell(Object sender None,MouseEventArgs e None)
HRESULT None None.get_IsTopmost([out None None,retval] BOOL *pRetVal)
LONG WINAPI tapi32.phoneSetLamp(HPHONE hPhone None,DWORD dwButtonLampID None,DWORD dwLampMode None)
HRESULT None None.UIntPtrToUInt8(_In_ UINT_PTR uOperand,_Out_ UINT8 *pu8Result)
void None None.RemoveAttribute(String name None)
HRESULT None None.GetObject([out] IUnknown **ppObject)
public void None.CovertDoubleFloat(double doubleVal None)
public int None.GetDayOfYear(DateTime time None)
public None None.XmlSerializer(Type type None,String defaultNamespace None)
public void None.WriteAttributes(XmlReader reader None,boolean defattr None)
DWORD WINAPI fwpuclnt.FwpmProviderContextDestroyEnumHandle0(_In_ HANDLE engineHandle,_In_ HANDLE enumHandle)
HRESULT None mstscax.get_Version([out] BSTR *pVersion)
public XmlNode None.SelectSingleNode(String xpath None)
HRESULT None None.GetAlphaBitmapParameters([out] PVMRALPHABITMAP pBmpParms)
public void None.AutoResizeColumn(int columnIndex None,ColumnHeaderAutoResizeStyle headerAutoResize None)
VOID None None.XMStoreSInt4([out] XMINT4 *pDestination,XMVECTOR V None)
DWORD DHCP_API_FUNCTION dhcpsapi.DhcpV4FailoverGetSystemTime(_In_opt_ LPWSTR ServerIpAddress,_Out_ LPDWORD pTime)
public void None.CloseWebPart(WebPart webPart None)
private void None.InsertShipper(Object source None,System.EventArgs e None)
protected void None.SetSelectedCellCore(int columnIndex None,int rowIndex None,boolean selected None)
protected boolean None.OnBubbleEvent(Object sender None,EventArgs e None)
public void None.RenderBeginTag(HtmlTextWriter writer None)
static String None.IsFileURI(String path None)
protected void None.OnGotFocus(EventArgs e None)
public void None.PositionEditingControl(boolean setLocation None,boolean setSize None,Rectangle cellBounds None,Rectangle cellClip None,DataGridViewCellStyle cellStyle None,boolean singleVerticalBorderAdded None,boolean singleHorizontalBorderAdded None,boolean isFirstDisplayedColumn None,boolean isFirstDisplayedRow None)
public boolean None.MoveToFollowing(XPathNodeType type None)
protected void None.OnRowCancelingEdit(GridViewCancelEditEventArgs e None)
public void None.Uninstall(IDictionary savedState None)
BOOL DHCP_API_FUNCTION dhcpsapi.DhcpHlprIsV4PolicySingleUC(_In_ LPDHCP_POLICY Policy)
HRESULT None taskschd.get_LastRunTime([out] DATE *pLastRunTime)
HRESULT WINAPI drt.DrtContinueSearch(_In_ HDRT_SEARCH_CONTEXT hSearchContext)
PropertyDescriptorCollection None None.GetItemProperties(PropertyDescriptor[] listAccessors None)
protected void None.OnLoggingIn(LoginCancelEventArgs e None)
public None None.BitmapEffectInput(BitmapSource input None)
private void None.button1_Click(System.Object sender None,System.EventArgs e None)
DWORD WINAPI clusapi.EvictClusterNodeEx(_In_ HNODE hNode,_In_ DWORD dwTimeOut,_Out_ HRESULT *phrCleanupStatus)
HRESULT None None.ULongToIntPtr(_In_ ULONG ulOperand,_Out_ INT_PTR *piResult)
public void None.WriteStartAttribute(String localName None,String ns None)
public void None.RegisterAsyncTask(PageAsyncTask task None)
errno_t None None._ecvt_s(char * _Buffer,size_t _SizeInBytes None,double _Value None,int _Count None,int *_Dec None,int *_Sign None)
HRESULT None None.GetAllCustData([out] CUSTDATA *pCustData)
BOOL WINAPI None.RoOriginateErrorW(_In_ HRESULT error,_In_ UINT cchMax,_In_ PCWSTR message)
HRESULT WINAPI winbio.WinBioGetDomainLogonSetting(_Out_ BOOLEAN *Value,_Out_ PWINBIO_SETTING_SOURCE_TYPE Source)
public int None.GetCellCount(DataGridViewElementStates includeFilter None)
DWORD DHCP_API_FUNCTION dhcpsapi.DhcpV4FailoverGetScopeRelationship(_In_opt_ LPWSTR ServerIpAddress,_In_ DHCP_IP_ADDRESS scopeId,_Out_ LPDHCP_FAILOVER_RELATIONSHIP *pRelationship)
VOID WINAPI drt.DrtDeleteDnsBootstrapResolver(_In_ DRT_BOOTSTRAP_PROVIDER *pResolver)
public void None.Save(ConfigurationSaveMode saveMode None)
public void None.RemoveAnnuallyBoldedDate(DateTime date None)
BOOLEAN WINAPI kernel32.TryAcquireSRWLockExclusive(_Inout_ PSRWLOCK SRWLock)
BOOL None None.Edit_CanUndo(HWND hwndCtl None)
public void None.ChangeMode(FormViewMode newMode None)
HRESULT None shlwapi.UrlGetPart(_In_ PCTSTR pszIn,_Out_ PTSTR pszOut,_Inout_ DWORD *pcchOut,DWORD dwPart None,DWORD dwFlags None)
HRESULT None shlwapi.UrlGetPartW(_In_ PCTSTR pszIn,_Out_ PTSTR pszOut,_Inout_ DWORD *pcchOut,DWORD dwPart None,DWORD dwFlags None)
HRESULT None shlwapi.UrlGetPartA(_In_ PCTSTR pszIn,_Out_ PTSTR pszOut,_Inout_ DWORD *pcchOut,DWORD dwPart None,DWORD dwFlags None)
private void None.CreatePointsAndSizes(PaintEventArgs e None)
public void None.FromArgb2(PaintEventArgs e None)
public Object None.ConvertFromString(String text None)
HRESULT None None.ULongToInt(_In_ ULONG ulOperand,_Out_ INT *piResult)
protected boolean None.IsInputChar(char charCode None)
public WebPart None.GetWebPart(WebPartDescription description None)
public void None.SetEditableDesignerRegionContent(EditableDesignerRegion region None,String content None)
DWORD DHCP_API_FUNCTION dhcpsapi.DhcpV6SetStatelessStoreParams(_In_opt_ LPWSTR ServerIpAddress,_In_ BOOL fServerLevel,_In_ DHCP_IPV6_ADDRESS SubnetAddress,_In_ DWORD FieldModified,_In_ LPDHCPV6_STATELESS_PARAMS Params)
protected InheritanceAttribute None.InvokeGetInheritanceAttribute(ComponentDesigner toInvoke None)
DWORD WINAPI fwpuclnt.FwpmCalloutDestroyEnumHandle0(_In_ HANDLE engineHandle,_In_ HANDLE enumHandle)
protected void None.OnQueryCursor(QueryCursorEventArgs e None)
void None None.Page_Load(Object sender None,System.EventArgs e None)
LONG WINAPI tapi32.phoneGetMessage(HPHONEAPP hPhoneApp None,LPPHONEMESSAGE lpMessage None,DWORD dwTimeout None)
function None None.join([separator : String])
private void None.showCheckedNodesButton_Click(Object sender None,EventArgs e None)
public void None.OnInit(EventArgs e None)
SECURITY_STATUS SEC_Entry secur32.InitializeSecurityContext(_In_opt_ PCredHandle phCredential,_In_opt_ PCtxtHandle phContext,_In_ SEC_CHAR *pszTargetName,_In_ ULONG fContextReq,_In_ ULONG Reserved1,_In_ ULONG TargetDataRep,_In_opt_ PSecBufferDesc pInput,_In_ ULONG Reserved2,_Inout_opt_ PCtxtHandle phNewContext,_Inout_opt_ PSecBufferDesc pOutput,_Out_ PULONG pfContextAttr,_Out_opt_ PTimeStamp ptsExpiry)
SECURITY_STATUS SEC_Entry secur32.InitializeSecurityContextW(_In_opt_ PCredHandle phCredential,_In_opt_ PCtxtHandle phContext,_In_ SEC_CHAR *pszTargetName,_In_ ULONG fContextReq,_In_ ULONG Reserved1,_In_ ULONG TargetDataRep,_In_opt_ PSecBufferDesc pInput,_In_ ULONG Reserved2,_Inout_opt_ PCtxtHandle phNewContext,_Inout_opt_ PSecBufferDesc pOutput,_Out_ PULONG pfContextAttr,_Out_opt_ PTimeStamp ptsExpiry)
SECURITY_STATUS SEC_Entry secur32.InitializeSecurityContextA(_In_opt_ PCredHandle phCredential,_In_opt_ PCtxtHandle phContext,_In_ SEC_CHAR *pszTargetName,_In_ ULONG fContextReq,_In_ ULONG Reserved1,_In_ ULONG TargetDataRep,_In_opt_ PSecBufferDesc pInput,_In_ ULONG Reserved2,_Inout_opt_ PCtxtHandle phNewContext,_Inout_opt_ PSecBufferDesc pOutput,_Out_ PULONG pfContextAttr,_Out_opt_ PTimeStamp ptsExpiry)
private void None.MyForm_Layout(Object sender None,System.Windows.Forms.LayoutEventArgs e None)
private void None.comboBox1_SelectedIndexChanged(Object sender None,EventArgs e None)
protected void None.TreeView1_SelectedNodeChanged(object sender None,EventArgs e None)
HRESULT None None.ULongLongToUIntPtr(_In_ ULONGLONG ullOperand,_Out_ UINT_PTR *puiResult)
HRESULT None None.GetDescription([out] LPWSTR *ppszDescription)
public void None.Start(Object parameter None)
void None None.Remove(Object key None)
public int None.GetYear(DateTime time None)
private void None.listDragTarget_DragOver(Object sender None,System.Windows.Forms.DragEventArgs e None)
public int None.GetMonthsInYear(int year None,int era None)
DWORD WINAPI fwpuclnt.FwpmCalloutSubscriptionsGet0(_In_ HANDLE engineHandle,_Out_ FWPM_CALLOUT_SUBSCRIPTION0 ***entries,_Out_ UINT32 *numEntries)
HRESULT None None.IntToChar(_In_ INT iOperand,_Out_ __wchar_t *pch)
DWORD WINAPI fwpuclnt.FwpmNetEventEnum3(_In_ HANDLE engineHandle,_In_ HANDLE enumHandle,_In_ UINT32 numEntriesRequested,_Out_ FWPM_NET_EVENT3 ***entries,_Out_ UINT32 *numEntriesReturned)
HRESULT None None.get_CachedIsOffscreen([out None None,retval] BOOL *retVal)
DWORD None dhcpsapi.DhcpSetOptionInfoV5(_In_ LPWSTR ServerIpAddress,_In_ DWORD Flags,_In_ DHCP_OPTION_ID OptionID,_In_ LPWSTR *ClassName,_In_ LPWSTR *VendorName,_In_ LPDHCP_OPTION OptionInfo)
protected void None.AddedControl(Control control None,int index None)
private void None.textBox1_Validating(Object sender None,System.ComponentModel.CancelEventArgs e None)
private void None.ShowPropertiesOfSlateBlue(PaintEventArgs e None)
private void None.comboBox1_SelectedIndexChanged(Object sender None,EventArgs e None)
HRESULT None None.UIntPtrToLong(_In_ UINT_PTR uOperand,_Out_ LONG *plResult)
public void None.WriteContentTo(XmlWriter w None)
protected void None.OnLocationChanged(EventArgs e None)
public void None.Start(Object parameter None)
protected boolean None.OnBubbleEvent(Object sender None,EventArgs e None)
private void None.PrintCurrentListName(DataGrid myDataGrid None)
protected void None.OnParentForeColorChanged(EventArgs e None)
public StringBuilder None.AppendFormat(String format None,Object arg0 None)
protected void None.RaisePostBackEvent(String eventArgument None)
protected void None.PerformDataBinding(IEnumerable data None)
HRESULT WINAPI winbio.WinBioGetEnrolledFactors(_In_ WINBIO_IDENTITY *AccountOwner,_Out_ WINBIO_BIOMETRIC_TYPE *EnrolledFactors)
DWORD None mpr.WNetGetUser(_In_ LPCTSTR lpName,_Out_ LPTSTR lpUserName,_Inout_ LPDWORD lpnLength)
DWORD None mpr.WNetGetUserW(_In_ LPCTSTR lpName,_Out_ LPTSTR lpUserName,_Inout_ LPDWORD lpnLength)
DWORD None mpr.WNetGetUserA(_In_ LPCTSTR lpName,_Out_ LPTSTR lpUserName,_Inout_ LPDWORD lpnLength)
HRESULT None None.GetShadowConnection([out] IWTSProtocolShadowConnection **ppShadowConnection)
DWORD None mpr.WNetGetNetworkInformation(_In_ LPCTSTR lpProvider,_Out_ LPNETINFOSTRUCT lpNetInfoStruct)
DWORD None mpr.WNetGetNetworkInformationW(_In_ LPCTSTR lpProvider,_Out_ LPNETINFOSTRUCT lpNetInfoStruct)
DWORD None mpr.WNetGetNetworkInformationA(_In_ LPCTSTR lpProvider,_Out_ LPNETINFOSTRUCT lpNetInfoStruct)
public boolean None.IsVisibleOnPage(int pageNumber None)
public None None.OperationCanceledException(String message None)
public void None.AddNamespace(String prefix None,String uri None)
public void None.GetAdjustedPalette(ColorPalette palette None,ColorAdjustType type None)
IFsrmRule None None.CreateRule(_FsrmRuleType RuleType None)
PropertyDescriptorCollection None None.GetItemProperties(PropertyDescriptor[] listAccessors None)
uint32 None ramgmtpsprovider.AddByClientDownlevelSGGpo([in] string DownlevelSecurityGroupNameList[],[in] string DownlevelGpoName[],[in] string ComputerName,[in] string EntrypointName,[in] boolean PassThru,[out] DAClient cmdletOutput)
public Object None.GetService(Type type None)
void None None.RemoveAttribute(String attribute None,boolean ignoreCase None)
public int None.GetDayOfYear(DateTime time None)
HRESULT None None.GetObject([out] IUnknown **ppObject)
public void None.ExitFormat(Style style None)
HRESULT None faxcom.put_Tsid([in] BSTR newVal)
public WebPart None.GetWebPart(WebPartDescription description None)
HRESULT None None.get_CurrentDescription([out None None,retval] BSTR *pszDescription)
private void None.listView1_BeforeLabelEdit(Object sender None,System.Windows.Forms.LabelEditEventArgs e None)
void None None.ReadXml(XmlReader reader None)
public boolean None.IsAuthorized(WebPart webPart None)
public None None.StreamWriter(String path None,boolean append None)
private void None.Form1_Load(Object sender None,EventArgs e None)
public XmlEntityReference None.CreateEntityReference(String name None)
HRESULT None faxcom.put_RecipientTitle([in] BSTR newVal)
HRESULT None None.UShortToUChar(_In_ USHORT usOperand,_Out_ UCHAR *pch)
public GenericWebPart None.GetGenericWebPart(Control control None)
public void None.Validate(String validationGroup None)
HRESULT None None.get_CachedOrientation([out None None,retval] OrientationType *retVal)
public void None.Write(String s None)
HRESULT None None.get_CurrentIsDataValidForForm([out None None,retval] BOOL *retVal)
protected void None.OnDragOver(DragEventArgs dragEvent None)
public None None.Exception(String message None,Exception innerException None)
protected void None.OnUpdating(SqlDataSourceCommandEventArgs e None)
private void None.On_Inserting(Object sender None,SqlDataSourceCommandEventArgs e None)
public void None.ConvertDoubleString(double doubleVal None)
public void None.Insert(int index None,Parameter parameter None)
public void None.InitializeCell(DataControlFieldCell cell None,DataControlCellType cellType None,DataControlRowState rowState None,int rowIndex None)
public boolean None.EndsWith(String value None)
protected void None.OnContinueButtonClick(EventArgs e None)
public Size None.GetPreferredSize(Size proposedSize None)
protected void None.OnAfterSelect(TreeViewEventArgs e None)
NTSTATUS WINAPI bcrypt.BCryptDuplicateHash(_In_ BCRYPT_HASH_HANDLE hHash,_Out_ BCRYPT_HASH_HANDLE *phNewHash,_Out_ PUCHAR pbHashObject,_In_ ULONG cbHashObject,_In_ ULONG dwFlags)
LONG WINAPI tapi32.phoneGetStatusMessages(HPHONE hPhone None,LPDWORD lpdwPhoneStates None,LPDWORD lpdwButtonModes None,LPDWORD lpdwButtonStates None)
protected void None.RenderChildren(HtmlTextWriter writer None)
HRESULT None None.LongToByte(_In_ LONG lOperand,_Out_ BYTE *pb)
public None None.BitmapEffectInput(BitmapSource input None)
HRESULT WINAPI drt.DrtGetInstanceNameSize(_In_ HDRT hDrt,_Out_ ULONG *pulcbInstanceNameSize)
public void None.Start(Object parameter None)
protected void None.Render(HtmlTextWriter writer None)
public int None.GetEra(DateTime time None)
HRESULT None None.get_TargetName([out None None,retval] BSTR *targetName)
public int None.EndRead(IAsyncResult asyncResult None)
HRESULT None None.get_CurrentLocalizedControlType([out None None,retval] BSTR *retVal)
PTSTR None shlwapi.PathFindFileName(_In_ PTSTR pPath)
PTSTR None shlwapi.PathFindFileNameW(_In_ PTSTR pPath)
PTSTR None shlwapi.PathFindFileNameA(_In_ PTSTR pPath)
public void None.Add(Type type None,String member None,XmlAttributes attributes None)
HRESULT None None.get_CachedAriaRole([out None None,retval] BSTR *retVal)
public XmlNode None.AppendChild(XmlNode newChild None)
public boolean None.MoveToFollowing(XPathNodeType type None)
public None None.DateTime(long ticks None)
BOOL None bthprops.BluetoothSelectDevices(BLUETOOTH_SELECT_DEVICE_PARAMS *pbtsdp None)
public None None.Exception(String message None,Exception innerException None)
protected void None.OnStylusMove(StylusEventArgs e None)
protected void None.OnHandleDestroyed(EventArgs e None)
public Size None.GetPreferredSize(Size proposedSize None)
private void None.On_Inserting(Object sender None,SqlDataSourceCommandEventArgs e None)
ULONG None httpapi.HttpSendResponseEntityBody(_In_ HANDLE ReqQueueHandle,_In_ HTTP_REQUEST_ID RequestId,_In_ ULONG Flags,_In_ USHORT EntityChunkCount,_In_ PHTTP_DATA_CHUNK pEntityChunks,_Out_ PULONG pBytesSent,_In_ PVOID pReserved1,_In_ ULONG Reserved2,_In_ LPOVERLAPPED pOverlapped,_In_opt_ PHTTP_LOG_DATA pLogData)
protected InheritanceAttribute None.InvokeGetInheritanceAttribute(ComponentDesigner toInvoke None)
public boolean None.Equals(Object obj None)
HRESULT None mfplat.MFCreateSystemTimeSource(IMFPresentationTimeSource **ppSystemTimeSource None)
uint32 None cimwin32.SetPowerState([in] uint16 PowerState,[in] datetime Time)
HRESULT None None.get_CachedNativeWindowHandle([out None None,retval] UIA_HWND *retVal)
private void None.showCheckedNodesButton_Click(Object sender None,EventArgs e None)
HGLOBAL WINAPI kernel32.GlobalFree(_In_ HGLOBAL hMem)
HRESULT None None.GetCachedParent([out None None,retval] IUIAutomationElement **parent)
VOID WINAPI drt.DrtDeleteDnsBootstrapResolver(_In_ DRT_BOOTSTRAP_PROVIDER *pResolver)
errno_t None None.strncpy_s(char *strDest None,size_t numberOfElements None,const char *strSource,size_t count None)
protected MarshalByRefObject None.MemberwiseClone(boolean cloneIdentity None)
HRESULT None None.GetPolicyServerId([out None None,retval] BSTR *pValue)
public void None.Validate(ValidationEventHandler validationEventHandler None)
private void None.Form1Closing(Object sender None,System.ComponentModel.CancelEventArgs e None)
public String None.MapPath(String virtualPath None)
protected void None.OnUpdating(SqlDataSourceCommandEventArgs e None)
public void None.FromArgb2(PaintEventArgs e None)
private void None.UpdateRecords(Object source None,System.EventArgs e None)
protected void None.TreeView1_SelectedNodeChanged(object sender None,EventArgs e None)
void None None.Page_Load(Object sender None,System.EventArgs e None)
protected void None.PreFilterProperties(IDictionary properties None)
protected void None.OnPreviewMouseDown(MouseButtonEventArgs e None)
private void None.button1_Click(Object sender None,System.EventArgs e None)
HRESULT None None.get_CurrentAcceleratorKey([out None None,retval] BSTR *retVal)
PCCERT_CONTEXT WINAPI cryptui.CryptUIDlgSelectCertificate(_In_ PCCRYPTUI_SELECTCERTIFICATE_STRUCT pcsc)
PCCERT_CONTEXT WINAPI cryptui.CryptUIDlgSelectCertificateW(_In_ PCCRYPTUI_SELECTCERTIFICATE_STRUCT pcsc)
PCCERT_CONTEXT WINAPI cryptui.CryptUIDlgSelectCertificateA(_In_ PCCRYPTUI_SELECTCERTIFICATE_STRUCT pcsc)
public DateTime None.AddMinutes(DateTime time None,int minutes None)
DWORD None dhcpsapi.DhcpGetAllOptionValues(_In_ LPWSTR ServerIpAddress,_In_ DWORD Flags,_In_ LPDHCP_OPTION_SCOPE_INFO ScopeInfo,_Out_ LPDHCP_ALL_OPTION_VALUES *Values)
DWORD None dhcpsapi.DhcpDeleteServer(_In_ DWORD Flags,_In_ LPVOID IdInfo,_In_ LPDHCP_SERVER_INFO NewServer,_In_ LPVOID CallbackFn,_In_ LPVOID CallbackData)
HRESULT None None.get_WindowSize([out] DWORDLONG *pWindowSize)
private void None.On_Click(Object source None,System.EventArgs e None)
protected void None.OnDragOver(DragEventArgs dragEvent None)
public void None.ApplyStyleSheetSkin(Page page None)
public void None.SetAccessControl(MutexSecurity mutexSecurity None)
Sub None None.ValidationFunctionName(source None None,arguments None None)
public void None.Initialize(IComponent component None)
BOOL None bthprops.BluetoothIsDiscoverable(HANDLE hRadio None)
protected void None.OnParentForeColorChanged(EventArgs e None)
HRESULT None None.PathCchStripToRoot(_Inout_ PWSTR pszPath,_In_ size_t cchPath)
protected void None.OnParentEnabledChanged(EventArgs e None)
public void None.Insert(int index None,Parameter parameter None)
public void None.TransferRoleOwnership(AdamRole role None)
public void None.Validate(String validationGroup None)
public String None.ResolveUrl(String relativeUrl None)
protected void None.OnStyleChanged(Style oldStyle None,Style newStyle None)
public void None.Remove(String key None)
public void None.WriteAttributes(XmlReader reader None,boolean defattr None)
public int None.LastIndexOf(char value None,int startIndex None)
DWORD None dhcpsapi.DhcpGetAllOptionValuesV6(_In_ LPWSTR ServerIpAddress,_In_ DWORD Flags,_In_ LPDHCP_OPTION_SCOPE_INFO6 ScopeInfo,_Out_ LPDHCP_ALL_OPTION_VALUES *Values)
DWORD None dhcpsapi.DhcpDeleteClass(_In_ LPWSTR ServerIpAddress,_In_ DWORD ReservedMustBeZero,_In_ LPWSTR ClassName)
HRESULT None None.get_CurrentLocalizedControlType([out None None,retval] BSTR *retVal)
DWORD WINAPI dhcpsapi.DhcpDeleteClassV6(_In_ LPWSTR ServerIpAddress,_In_ DWORD ReservedMustBeZero,_In_ LPWSTR ClassName)
SerializableAttribute None None.AttributeUsageAttribute(AttributeTargets.Enum None None)
public void None.Page_Load(Object sender None,EventArgs e None)
private void None.DecimalToCurrencyString(Object sender None,ConvertEventArgs cevent None)
DWORD DHCP_API_FUNCTION dhcpsapi.DhcpV4FailoverGetRelationship(_In_opt_ LPWSTR ServerIpAddress,_In_ LPWSTR pRelationshipName,_Out_ LPDHCP_FAILOVER_RELATIONSHIP *pRelationship)
HRESULT None None.PathCchRemoveFileSpec(_Inout_ PWSTR pszPath,_In_ size_t cchPath)
HierarchicalDataSourceView None None.GetHierarchicalView(String viewPath None)
private void None.InsertShipper(Object source None,System.EventArgs e None)
public None None.DateTime(long ticks None)
private void None.PrintCell(Object sender None,MouseEventArgs e None)
private void None.listDragTarget_DragOver(Object sender None,System.Windows.Forms.DragEventArgs e None)
protected void None.AddAttributesToRender(HtmlTextWriter writer None)
HRESULT None None.get_CurrentIsOffscreen([out None None,retval] BOOL *retVal)
boolean None cimwin32.GetEffectivePermission([in] uint32 Permissions)
DWORD WINAPI fwpuclnt.FwpmCalloutUnsubscribeChanges0(_In_ HANDLE engineHandle,_In_ HANDLE changeHandle)
DWORD WINAPI dhcpsapi.DhcpGetMibInfoV5(_In_opt_ WCHAR *ServerIpAddress,_Out_ LPDHCP_MIB_INFO_V5 *MibInfo)
public int None.Add(Object item None)
static void None.WriteObjectInfo(Object testObject None)
protected Object None.GetService(Type service None)
public void None.WriteAttributes(XmlReader reader None,boolean defattr None)
public None None.Version(int major None,int minor None,int build None,int revision None)
HRESULT None wuapi.get_SupportUrl([out] BSTR *retval)
DWORD DHCP_API_FUNCTION dhcpsapi.DhcpV4FailoverSetRelationship(_In_opt_ LPWSTR ServerIpAddress,_In_ DWORD flags,_In_ LPDHCP_FAILOVER_RELATIONSHIP pRelationship)
double None None.atof(const char *str)
DWORD None dhcpsapi.DhcpCreateClass(_In_ LPWSTR ServerIpAddress,_In_ DWORD ReservedMustBeZero,_In_ LPDHCP_CLASS_INFO ClassInfo)
HRESULT None oleaut32.VarI1FromR8(_In_ DOUBLE dblIn,_Out_ CHAR *pcOut)
public None None.ConfigurationProperty(String name None,Type type None,Object defaultValue None,TypeConverter typeConverter None,ConfigurationValidatorBase validator None,ConfigurationPropertyOptions options None)
DNS_STATUS None dnsapi.DnsValidateServerStatus(_In_ PSOCKADDR server,_In_ PCWSTR queryName,_Out_ PDWORD serverStatus)
BOOL None shlwapi.PathSearchAndQualify(_In_ LPCTSTR pcszPath,_Out_ LPTSTR pszFullyQualifiedPath,_In_ UINT cchFullyQualifiedPath)
BOOL None shlwapi.PathSearchAndQualifyW(_In_ LPCTSTR pcszPath,_Out_ LPTSTR pszFullyQualifiedPath,_In_ UINT cchFullyQualifiedPath)
BOOL None shlwapi.PathSearchAndQualifyA(_In_ LPCTSTR pcszPath,_Out_ LPTSTR pszFullyQualifiedPath,_In_ UINT cchFullyQualifiedPath)
public Object None.ConvertFromString(String text None)
SerializableAttribute None None.TypeConverterAttribute(System.Drawing.IconConverter None None)
public HtmlElement None.AppendChild(HtmlElement newElement None)
public None None.Exception(String message None,Exception innerException None)
HRESULT None updateendpointauth.TokenData([out] BSTR *pszTokenData)
public void None.InitializeCell(TableCell cell None,int columnIndex None,ListItemType itemType None)
PropertyDescriptorCollection None None.GetItemProperties(PropertyDescriptor[] listAccessors None)
public XmlReadMode None.ReadXml(XmlReader reader None)
public int None.ToFourDigitYear(int year None)
HRESULT None None.UIntToLong(_In_ UINT uOperand,_Out_ LONG *plResult)
HRESULT None None.get_CachedAriaProperties([out None None,retval] BSTR *retVal)
BOOL None None.WlxCreateUserDesktop(_In_ HANDLE hWlx,_In_ HANDLE hToken,_In_ DWORD Flags,_In_ PWSTR pszDesktopName,_Out_ PWLX_DESKTOP *ppDesktop)
public BindingExpressionBase None.SetBinding(DependencyProperty dp None,BindingBase binding None)
public DataGridViewCellStyle None.GetInheritedStyle(DataGridViewCellStyle inheritedCellStyle None,int rowIndex None,boolean includeColors None)
HRESULT None None.get_CurrentBoundingRectangle([out None None,retval] RECT *retVal)
STDAPI None mf.MFLoadSignedLibrary(_In_ LPCWSTR pszName,_Out_ IMFSignedLibrary **ppLib)
private void None.button1_Click(Object sender None,EventArgs e None)
private void None.On_Click(Object source None,System.EventArgs e None)
HRESULT WINAPI winbio.WinBioGetLogonSetting(_Out_ BOOLEAN *Value,_Out_ PWINBIO_SETTING_SOURCE_TYPE Source)
public XmlNode None.SelectSingleNode(String xpath None)
HRESULT None None.LongToUInt8(_In_ LONG lOperand,_Out_ UINT8 *pui8Result)
protected void None.TreeView1_SelectedNodeChanged(object sender None,EventArgs e None)
function None None.GetQuantity(productID None None,elemToUpdate None None,productLabelElem None None,buttonElem None None)
HRESULT None None.GetSurface([out] IUnknown **ppDirect3DSurface9)
public void None.InitializeCell(DataControlFieldCell cell None,DataControlCellType cellType None,DataControlRowState rowState None,int rowIndex None)
SerializableAttribute None None.TypeConverterAttribute(System.Windows.Forms.ListViewGroupConverter None None)
public int None.GetHour(DateTime time None)
public None None.ConnectionProviderAttribute(String displayName None)
HRESULT None None.GetHandlerID([out] LPWSTR *ppszHandlerID)
HRESULT None None.get_CachedIsContentElement([out None None,retval] BOOL *retVal)
HRESULT None None.get_CurrentControllerFor([out None None,retval] IUIAutomationElementArray *retVal)
public void None.AddRange(TabPage[] pages None)
public XmlNode None.InsertAfter(XmlNode newChild None,XmlNode refChild None)
HRESULT None None.IntPtrToSizeT(_In_ INT_PTR iOperand,_Out_ size_t *pcbResult)
HRESULT None None.GetState([out] IDvdState **pStateData)
HRESULT None shell32.GetCurrentPage([out] ULONG *pnPage)
public int None.GetColumnCount(DataGridViewElementStates includeFilter None)
private void None.treeView1_MouseUp(Object sender None,MouseEventArgs e None)
HRESULT None None.ULongSub(_In_ ULONG ulMinuend,_In_ ULONG ulSubtrahend,_Out_ ULONG *pulResult)
LONG WINAPI tapi32.phoneOpen(HPHONEAPP hPhoneApp None,DWORD dwDeviceID None,LPHPHONE lphPhone None,DWORD dwAPIVersion None,DWORD dwExtVersion None,DWORD_PTR dwCallbackInstance None,DWORD dwPrivilege None)
public boolean None.IsVisibleOnPage(int pageNumber None)
HRESULT None taskschd.get_State([out] TASK_STATE *pState)
public None None.ListViewItem(ListViewSubItem[] subItems None,int imageIndex None,ListViewGroup group None)
BOOL WINAPI dnsapi.DnsRecordSetCompare(_Inout_ PDNS_RECORD pRR1,_Inout_ PDNS_RECORD pRR2,_Out_opt_ PDNS_RECORD *ppDiff1,_Out_opt_ PDNS_RECORD *ppDiff2)
HRESULT None taskschd.get_NextRunTime([out] DATE *pNextRunTime)
COLORREF None None.RGB(BYTE byRed None,BYTE byGreen None,BYTE byBlue None)
public void None.ApplyStyle(DataGridViewCellStyle dataGridViewCellStyle None)
public XmlNode None.InsertBefore(XmlNode newChild None,XmlNode refChild None)
protected void None.OnBindingContextChanged(EventArgs e None)
protected void None.BaseRemove(Object key None)
public void None.Merge(DataTable table None,boolean preserveChanges None,MissingSchemaAction missingSchemaAction None)
protected void None.HashCore(byte[] rgbData None,int ibStart None,int cbSize None)
BOOL None cabinet.QueryDecompressorInformation(_In_ DECOMPRESSOR_HANDLE DecompressorHandle,_In_ COMPRESS_INFORMATION_CLASS CompressInformationClass,_Out_ PVOID CompressInformation,_In_ SIZE_T CompressInformationSize)
public XmlEntityReference None.CreateEntityReference(String name None)
HRESULT None None.IntToUChar(_In_ INT iOperand,_Out_ UCHAR *pch)
public int None.IndexOf(Object value None,int startIndex None,int count None)
function None None.square(x : int)
HRESULT None None.GetZIndex([out] INT32 *pnZIndex)
public DataGridViewAdvancedBorderStyle None.AdjustCellBorderStyle(DataGridViewAdvancedBorderStyle dataGridViewAdvancedBorderStyleInput None,DataGridViewAdvancedBorderStyle dataGridViewAdvancedBorderStylePlaceholder None,boolean singleVerticalBorderAdded None,boolean singleHorizontalBorderAdded None,boolean isFirstDisplayedColumn None,boolean isFirstDisplayedRow None)
public ITemplate None.GetTemplate(String templateName None)
DWORD None dhcpsapi.DhcpCreateOptionV6(_In_ LPWSTR ServerIpAddress,_In_ DWORD Flags,_In_ DHCP_OPTION_ID OptionId,_In_opt_ WCHAR *ClassName,_In_opt_ WCHAR *VendorName,_In_ LPDHCP_OPTION OptionInfo)
DWORD WINAPI fwpuclnt.FwpmProviderDestroyEnumHandle0(_In_ HANDLE engineHandle,_In_ HANDLE enumHandle)
public String None.GetString(String name None)
DWORD None mpr.WNetGetResourceInformation(_In_ LPNETRESOURCE lpNetResource,_Out_ LPVOID lpBuffer,_Inout_ LPDWORD lpcbBuffer,_Out_ LPTSTR *lplpSystem)
DWORD None mpr.WNetGetResourceInformationW(_In_ LPNETRESOURCE lpNetResource,_Out_ LPVOID lpBuffer,_Inout_ LPDWORD lpcbBuffer,_Out_ LPTSTR *lplpSystem)
DWORD None mpr.WNetGetResourceInformationA(_In_ LPNETRESOURCE lpNetResource,_Out_ LPVOID lpBuffer,_Inout_ LPDWORD lpcbBuffer,_Out_ LPTSTR *lplpSystem)
protected void None.OnKeyPress(KeyPressEventArgs e None)
protected void None.OnInsertComplete(Object key None,Object value None)
function None None.GetQuantity(productID None None,elemToUpdate None None,productLabelElem None None,buttonElem None None)
public XmlNode None.RemoveChild(XmlNode oldChild None)
protected void None.OnLayout(LayoutEventArgs e None)
public void None.Remove(String name None)
private void None.Link_Clicked(Object sender None,System.Windows.Forms.LinkClickedEventArgs e None)
HRESULT None None.ULongLongToSizeT(_In_ ULONGLONG ullOperand,_Out_ size_t *pcbResult)
protected void None.OnBackColorChanged(EventArgs e None)
public void None.AddOnEnterForwardSetVar(String var None)
HRESULT None propsys.PropVariantToStringVector(_In_ REFPROPVARIANT propvar,_Out_ PWSTR *prgsz,_In_ ULONG crgsz,_Out_ ULONG *pcElem)
HRESULT None None.LongPtrToDWordPtr(_In_ LONG_PTR lOperand,_Out_ DWORD_PTR *pdwResult)
public WebResponse None.EndGetResponse(IAsyncResult asyncResult None)
HRESULT None None.GetTimeSeekResult([out] QWORD *pqwStartTime,[out] QWORD *pqwStopTime,[out] QWORD *pqwStartTime)
HRESULT None None.GetRenderingPrefs([out] DWORD *pdwRenderFlags)
DWORD DHCP_API_FUNCTION dhcpsapi.DhcpV6GetFreeIPAddress(_In_opt_ LPWSTR ServerIpAddress,_In_ DHCP_IPV6_ADDRESS ScopeId,_In_ DHCP_IPV6_ADDRESS startIP,_In_ DHCP_IPV6_ADDRESS endIP,_In_ DWORD numFreeAddrReq,_Out_ LPDHCPV6_IP_ARRAY *IPAddrList)
DWORD WINAPI fwpuclnt.FwpmProviderUnsubscribeChanges0(_In_ HANDLE engineHandle,_In_ HANDLE changeHandle)
public AuthorizationRuleCollection None.GetAuditRules(boolean includeExplicit None,boolean includeInherited None,Type targetType None)
public String None.Add(char[] key None,int start None,int len None)
protected MarshalByRefObject None.MemberwiseClone(boolean cloneIdentity None)
protected void None.TreeView1_SelectedNodeChanged(object sender None,EventArgs e None)
protected void None.OnItemDataBind(ListDataBindEventArgs e None)
private void None.comboBox1_SelectedIndexChanged(Object sender None,EventArgs e None)
HRESULT None None.ULongLongToDWord(_In_ ULONGLONG ullOperand,_Out_ DWORD *pdwResult)
HRESULT None None.GetRenderingPrefs([out] DWORD *dwRenderFlags)
public int None.IndexOf(int index None)
int None None.CompareTo(Object obj None)
uint32 None ramgmtpsprovider.RemoveByClientSGGpo([in] string SecurityGroupNameList[],[in] string ComputerName,[in] boolean PassThru,[in] string DomainName[],[out] DAClient cmdletOutput)
LONG WINAPI tapi32.phoneSetHookSwitch(HPHONE hPhone None,DWORD dwHookSwitchDevs None,DWORD dwHookSwitchMode None)
protected void None.LoadViewState(Object savedState None)
void None None.Page_Load(Object sender None,System.EventArgs e None)
protected void None.OnParentForeColorChanged(EventArgs e None)
public WebResponse None.EndGetResponse(IAsyncResult asyncResult None)
protected DataRow None.NewRowFromBuilder(DataRowBuilder builder None)
HRESULT None None.GetRangeEndOffset([out] QWORD *qwpRangeEnd)
public int None.GetMonth(DateTime time None)
public void None.AddOnEnterForwardSetVar(String var None)
public None None.Regex(String pattern None,RegexOptions options None)
DWORD None mpr.MultinetGetConnectionPerformance(_In_ LPNETRESOURCE lpNetResource,_Out_ LPNETCONNECTINFOSTRUCT lpNetConnectInfoStruct)
DWORD None mpr.MultinetGetConnectionPerformanceW(_In_ LPNETRESOURCE lpNetResource,_Out_ LPNETCONNECTINFOSTRUCT lpNetConnectInfoStruct)
DWORD None mpr.MultinetGetConnectionPerformanceA(_In_ LPNETRESOURCE lpNetResource,_Out_ LPNETCONNECTINFOSTRUCT lpNetConnectInfoStruct)
private void None.DataGridTableStyleSampleLoad(Object sender None,EventArgs e None)
void None None.Page_Load(Object sender None,EventArgs e None)
HRESULT None None.ShortToWord(_In_ SHORT sOperand,_Out_ WORD *pwResult)
protected void None.OnMouseWheel(MouseEventArgs e None)
SerializableAttribute None None.ClassInterfaceAttribute(ClassInterfaceType.None None None)
HRESULT None None.UIntToSSIZET(_In_ UINT uOperand,_Out_ SSIZE_T *pcbResult)
protected void None.InvokePaint(Control c None,PaintEventArgs e None)
private void None.listDragTarget_DragOver(Object sender None,System.Windows.Forms.DragEventArgs e None)
static String None.IsFileURI(String path None)
protected void None.TreeView1_SelectedNodeChanged(object sender None,EventArgs e None)
public String None.GetString(String name None)
public Object None.GetService(Type service None)
public int None.Add(ActiveDirectorySubnet subnet None)
protected String None.GetControlValidationValue(String name None)
HRESULT None None.get_CachedAutomationId([out None None,retval] BSTR *retVal)
NTSTATUS None None.BdaValidateNodeProperty(_In_ PIRP Irp,_In_ PKSPROPERTY pKSProperty)
HRESULT None None.GetCacheDir([out None None,retval] BSTR *pValue)
public DateTime None.AddWeeks(DateTime time None,int weeks None)
HRESULT WINAPI winbio.WinBioAsyncEnumBiometricUnits(_In_ WINBIO_FRAMEWORK_HANDLE FrameworkHandle,_In_ WINBIO_BIOMETRIC_TYPE Factor)
BOOL None bthprops.BluetoothEnableDiscovery(HANDLE hRadio None,BOOL fEnabled None)
protected void None.TreeView1_SelectedNodeChanged(object sender None,EventArgs e None)
BOOL WINAPI dnsapi.DnsRecordCompare(_In_ PDNS_RECORD pRecord1,_In_ PDNS_RECORD pRecord2)
private void None.ShowPropertiesOfSlateBlue(PaintEventArgs e None)
public void None.SetServiceProvider(IServiceProvider serviceProvider None)
HRESULT None None.GetProtocolHandles([out] HANDLE_PTR *pKeyboardHandle,[out] HANDLE_PTR *pMouseHandle,[out] HANDLE_PTR *pBeepHandle,[out] HANDLE_PTR *pVideoHandle)
DWORD None dhcpsapi.DhcpSetOptionValueV6(_In_ LPWSTR ServerIpAddress,_In_ DWORD Flags,_In_ DHCP_OPTION_ID OptionId,_In_ WCHAR *ClassName,_In_ WCHAR *VendorName,_In_ LDHCP_OPTION_SCOPE_INFO6 ScopeInfo,_In_ LDHCP_OPTION_DATA OptionValue)
public void None.NetworkToHostOrderShort(short networkByte None)
protected void None.InitializeItem(DataListItem item None)
public boolean None.ShouldTrace(TraceEventType eventType None)
HRESULT None None.LongPtrToUInt8(_In_ LONG_PTR lOperand,_Out_ UINT8 *pui8Result)
public Color None.GetPixel(int x None,int y None)
protected void None.OnItemDeleting(FormViewDeleteEventArgs e None)
HRESULT None None.get_CurrentControlType([out None None,retval] CONTROLTYPEID *retVal)
DWORD None dhcpsapi.DhcpAuditLogSetParams(_In_ LPWSTR ServerIpAddress,_In_ DWORD Flags,_In_ LPWSTR AuditLogDir,_In_ DWORD DiskCheckInterval,_In_ DWORD MaxLogFilesSize,_In_ DWORD MinSpaceOnDisk)
public void None.Remove(String key None)
private void None.myButton_Click(Object sender None,System.EventArgs e None)
private void None.currencyTextBox_TextChanged(Object sender None,EventArgs e None)
protected void None.OnMouseHover(EventArgs e None)
PostBackOptions None None.GetPostBackOptions(IButtonControl buttonControl None)
public int None.IndexOfValue(TValue value None)
private void None.OnRecordDeleting(Object source None,SqlDataSourceCommandEventArgs e None)
public None None.ConnectionProviderAttribute(String displayName None)
public void None.AppendLiteralString(String s None)
public Stream None.GetManifestResourceStream(Type type None,String name None)
protected void None.OnBindingComplete(BindingCompleteEventArgs e None)
private void None.comboBox1_SelectedIndexChanged(Object sender None,EventArgs e None)
String None None.ToString(String format None,IFormatProvider formatProvider None)
NTSTATUS None None.WdfUsbTargetDeviceFormatRequestForUrb(_In_ WDFUSBDEVICE UsbDevice,_In_ WDFREQUEST Request,_In_ WDFMEMORY UrbMemory,_In_opt_ PWDFMEMORY_OFFSET UrbMemoryOffset)
protected void None.TreeView1_SelectedNodeChanged(object sender None,EventArgs e None)
HRESULT None None.get_WindowVisualState([out None None,retval] WindowVisualState *pRetVal)
HRESULT None None.SIZETToPtrdiffT(_In_ SIZE_T cbOperand,_Out_ ptrdiff_t *pcbResult)
protected void None.OnHandleCreated(EventArgs e None)
public IAsyncResult None.BeginGetResponse(AsyncCallback callback None,Object state None)
HRESULT None None.UInt8ToInt8(_In_ UINT8 u8Operand,_Out_ INT8 *pi8Result)
HRESULT None None.ULongLongToUChar(_In_ ULONGLONG ullOperand,_Out_ UCHAR *pch)
HRESULT None wuapi.get_DriverManufacturer([out] BSTR *retval)
public None None.DebuggerDisplayAttribute(String value None)
private void None.Button1_Click(Object sender None,EventArgs myEventArgs None)
protected void None.TreeView1_SelectedNodeChanged(object sender None,EventArgs e None)
public Object None.ReadElementContentAsObject(String localName None,String namespaceURI None)
HRESULT None None.get_CachedNativeWindowHandle([out None None,retval] UIA_HWND *retVal)
unsigned int None._mbbtombc(unsigned int c)
HRESULT None None.get_ReservedMixedAttributeValue([out None None,retval] IUnknown **mixedAttributeValue)
public void None.CloseWebPart(WebPart webPart None)
private void None.Form1Closing(Object sender None,System.ComponentModel.CancelEventArgs e None)
public None None.DateTime(long ticks None,DateTimeKind kind None)
public int None.IndexOfAny(char[] anyOf None,int startIndex None)
public None None.ServiceControllerPermission(PermissionState state None)
DWORD WINAPI bthprops.BluetoothAuthenticateDeviceEx(_In_opt_ HWND hwndParentIn,_In_opt_ HANDLE hRadioIn,_Inout_ BLUETOOTH_DEVICE_INFO *pbtdiInout,_In_opt_ PBLUETOOTH_OOB_DATA pbtOobData,_In_ AUTHENTICATION_REQUIREMENTS authenticationRequirement)
private void None.comboBox1_SelectedIndexChanged(Object sender None,EventArgs e None)
VOID None None.WdfIoResourceListRemove(_In_ WDFIORESLIST ResourceList,_In_ ULONG Index)
HRESULT None None.SIZETToIntPtr(_In_ SIZE_T cbOperand,_Out_ INT_PTR *piResult)
private void None.textBox1_Enter(Object sender None,System.EventArgs e None)
protected Visual None.GetVisualChild(int index None)
public void None.Merge(DataTable table None,boolean preserveChanges None,MissingSchemaAction missingSchemaAction None)
HANDLE WINAPI kernel32.CreateFileMapping(_In_ HANDLE hFile,_In_opt_ LPSECURITY_ATTRIBUTES lpAttributes,_In_ DWORD flProtect,_In_ DWORD dwMaximumSizeHigh,_In_ DWORD dwMaximumSizeLow,_In_opt_ LPCTSTR lpName)
HANDLE WINAPI kernel32.CreateFileMappingW(_In_ HANDLE hFile,_In_opt_ LPSECURITY_ATTRIBUTES lpAttributes,_In_ DWORD flProtect,_In_ DWORD dwMaximumSizeHigh,_In_ DWORD dwMaximumSizeLow,_In_opt_ LPCTSTR lpName)
HANDLE WINAPI kernel32.CreateFileMappingA(_In_ HANDLE hFile,_In_opt_ LPSECURITY_ATTRIBUTES lpAttributes,_In_ DWORD flProtect,_In_ DWORD dwMaximumSizeHigh,_In_ DWORD dwMaximumSizeLow,_In_opt_ LPCTSTR lpName)
protected void None.PostFilterProperties(IDictionary properties None)
public None None.PaintValueEventArgs(ITypeDescriptorContext context None,Object value None,Graphics graphics None,Rectangle bounds None)
HRESULT None None.get_CachedLabeledBy([out None None,retval] IUIAutomationElement **retVal)
HRESULT None shell32.GetDelay([out] DWORD *pdwDelay)
protected void None.OnInitComplete(EventArgs e None)
protected void None.OnClick(EventArgs e None)
public void None.ScrollControlIntoView(Control activeControl None)
protected void None.OnInit(EventArgs e None)
protected int None.ExecuteDelete(IDictionary keys None,IDictionary oldValues None)
public void None.CloseWebPart(WebPart webPart None)
public None None.OperationCanceledException(String message None)
public void None.CloseWebPart(WebPart webPart None)
protected void None.OnQueryContinueDrag(QueryContinueDragEventArgs e None)
protected void None.SetSelectedCellCore(int columnIndex None,int rowIndex None,boolean selected None)
protected void None.OnSelectedWebPartChanged(WebPartEventArgs e None)
HRESULT None certadm.CertSrvBackupClose(_In_ HCSBC hbc)
public None None.TreeViewCancelEventArgs(TreeNode node None,boolean cancel None,TreeViewAction action None)
protected void None.OnInvalidated(InvalidateEventArgs e None)
public void None.Remove(String key None)
private void None.SwitchOverlay(Control collectingControl None)
DWORD None dhcpsapi.DhcpEnumOptionValuesV5(_In_ LPWSTR ServerIpAddress,_In_ DWORD Flags,_In_ LPWSTR ClassName,_In_ LPWSTR VendorName,_In_ LPDHCP_OPTION_SCOPE_INFO ScopeInfo,_Inout_ DHCP_RESUME_HANDLE *ResumeHandle,_In_ DWORD PreferredMaximum,_Out_ LPDHCP_OPTION_VALUE_ARRAY *OptionValues,_Out_ DWORD *OptionsRead,_Out_ DWORD *OptionsTotal)
DWORD DHCP_API_FUNCTION dhcpsapi.DhcpDeleteSubnetV6(_In_ LPWSTR ServerIpAddress,_In_ DHCP_IPV6_ADDRESS SubnetAddress,_In_ DHCP_FORCE_FLAG ForceFlag)
HRESULT None oleaut32.VarUI8FromI2(_In_ SHORT sIn,_Out_ ULONG64 *pi64Out)
HRESULT None shell32.GetRawDataFormat([out] GUID *pDataFormat)
public IPermission None.Union(IPermission target None)
protected void None.OnInserting(SqlDataSourceCommandEventArgs e None)
HRESULT None None.ULongToSSIZET(_In_ ULONG ulOperand,_Out_ SSIZE_T *pcbResult)
protected void None.OnClosing(CancelEventArgs e None)
HRESULT None None.SSIZETToInt(_In_ SSIZE_T cbOperand,_Out_ INT *piResult)
public boolean None.IsPrefix(String source None,String prefix None,CompareOptions options None)
HRESULT None None.PathCchStripPrefix(_Inout_ PWSTR pszPath,_In_ size_t cchPath)
public void None.Write(Object value None)
private void None.PrintCell(Object sender None,MouseEventArgs e None)
BOOL WINAPI kernel32.DuplicateHandle(_In_ HANDLE hSourceProcessHandle,_In_ HANDLE hSourceHandle,_In_ HANDLE hTargetProcessHandle,_Out_ LPHANDLE lpTargetHandle,_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ DWORD dwOptions)
HRESULT None None.get_CurrentItemType([out None None,retval] BSTR *retVal)
private void None.treeView1_KeyDown(Object sender None,KeyEventArgs e None)
DWORD None dhcpsapi.DhcpGetOptionInfoV6(_In_ LPWSTR ServerIpAddress,_In_ DWORD Flags,_In_ DHCP_OPTION_ID OptionID,_In_ WCHAR *ClassName,_In_ WCHAR *VendorName,_Out_ LPDHCP_OPTION *OptionInfo)
public void None.WriteAttributes(XmlReader reader None,boolean defattr None)
errno_t None None._itoa_s(int value None,char *buffer None,size_t sizeInCharacters None,int radix None)
protected void None.button1_Click(Object sender None,System.EventArgs e None)
public boolean None.Contains(Installer value None)
BOOL WINAPI advapi32.CryptSetProviderEx(_In_ LPCTSTR pszProvName,_In_ DWORD dwProvType,_In_ DWORD *pdwReserved,_In_ DWORD dwFlags)
BOOL WINAPI advapi32.CryptSetProviderExW(_In_ LPCTSTR pszProvName,_In_ DWORD dwProvType,_In_ DWORD *pdwReserved,_In_ DWORD dwFlags)
BOOL WINAPI advapi32.CryptSetProviderExA(_In_ LPCTSTR pszProvName,_In_ DWORD dwProvType,_In_ DWORD *pdwReserved,_In_ DWORD dwFlags)
HRESULT WINAPI drt.DrtRegisterKey(_In_ HDRT hDrt,_In_ DRT_REGISTRATION *pRegistration,_In_opt_ PVOID pvKeyContext,_Out_ HDRT_REGISTRATION_CONTEXT *phKeyRegistration)
public DateTime None.AddMinutes(DateTime time None,int minutes None)
HRESULT None None.GetRenderingMode([out] DWORD *pMode)
HRESULT WINAPI mfplat.MFCreateMediaTypeFromProperties(_In_ IUnknown *punkStream,_Out_ IMFMediaType **ppMediaType)
void None None.Page_Load(Object sender None,EventArgs e None)
protected void None.BaseRemove(Object key None)
private void None.button3_Click(Object sender None,System.EventArgs e None)
public XmlNode None.InsertBefore(XmlNode newChild None,XmlNode refChild None)
HRESULT None None.GetBorderColor([out] COLORREF *lpClr)
LONG WINAPI tapi32.phoneGetRing(HPHONE hPhone None,LPDWORD lpdwRingMode None,LPDWORD lpdwVolume None)
HRESULT None msctf.Activate([out] TfClientId *ptid)
private void None.treeView1_KeyDown(Object sender None,KeyEventArgs e None)
double None None.atof(const char *str)
public void None.InitializeCell(DataControlFieldCell cell None,DataControlCellType cellType None,DataControlRowState rowState None,int rowIndex None)
HRESULT None None.get_NumSources([out] DWORD *pdwNumSources)
protected boolean None.OnDeserializeUnrecognizedElement(String elementName None,XmlReader reader None)
DWORD WINAPI fwpuclnt.FwpmProviderUnsubscribeChanges0(_In_ HANDLE engineHandle,_In_ HANDLE changeHandle)
HRESULT None None.ULongPtrToULong(_In_ ULONG_PTR ulOperand,_Out_ ULONG *pulResult)
HRESULT None None.UIntPtrToUInt16(_In_ UINT_PTR uOperand,_Out_ UINT16 *pu16Result)
public XmlNode None.SelectSingleNode(String xpath None)
public ReadOnlyActiveDirectorySchemaPropertyCollection None.FindAllProperties(PropertyTypes type None)
HRESULT None None.CopyAttribute(IMFAttributes *pFrom None,IMFAttributes *pTo None,REFGUID guidKey None)
public boolean None.Equals(Object o None)
BOOL WINAPI crypt32.CryptRegisterOIDInfo(_In_ PCCRYPT_OID_INFO pInfo,_In_ DWORD dwFlags)
public void None.SetCacheKey(Cache cache None)
public int None.EndRead(IAsyncResult asyncResult None)
public XmlNode None.InsertAfter(XmlNode newChild None,XmlNode refChild None)
public boolean None.HandlePostBackEvent(String eventArgument None)
DWORD DHCP_API_FUNCTION dhcpsapi.DhcpV4GetOptionValue(_In_opt_ LPWSTR ServerIpAddress,_In_ DWORD Flags,_In_ DHCP_OPTION_ID OptionID,_In_opt_ LPWSTR PolicyName,_In_opt_ LPWSTR VendorName,_In_ LPDHCP_OPTION_SCOPE_INFO ScopeInfo,_Out_ LPDHCP_OPTION_VALUE *OptionValue)
public DataGridViewAdvancedBorderStyle None.AdjustCellBorderStyle(DataGridViewAdvancedBorderStyle dataGridViewAdvancedBorderStyleInput None,DataGridViewAdvancedBorderStyle dataGridViewAdvancedBorderStylePlaceholder None,boolean singleVerticalBorderAdded None,boolean singleHorizontalBorderAdded None,boolean isFirstDisplayedColumn None,boolean isFirstDisplayedRow None)
private void None.On_Click(Object source None,System.EventArgs e None)
private void None.treeView1_KeyDown(Object sender None,KeyEventArgs e None)
int None None.IndexOf(Object value None)
function None None.GetQuantity(productID None None,elemToUpdate None None,productLabelElem None None,buttonElem None None)
private void None.ShowPropertiesOfSlateBlue(PaintEventArgs e None)
protected void None.TreeView1_SelectedNodeChanged(object sender None,EventArgs e None)
function None None.GetQuantity(productID None None,elemToUpdate None None,productLabelElem None None,buttonElem None None)
BOOL None bthprops.BluetoothIsConnectable(HANDLE hRadio None)
protected void None.RaiseBubbleEvent(Object source None,EventArgs args None)
protected void None.Dispose(boolean disposing None)
public None None.ConnectionProviderAttribute(String displayName None)
private void None.SelectNode(TreeNode node None)
protected DataSourceView None.GetView(String viewName None)
protected boolean None.LoadPostData(String key None,NameValueCollection data None)
HRESULT None None.SetSource(IUnknown pStream None)
protected void None.BaseRemove(Object key None)
public PaintValueEventArgs None.CreatePaintValueEventArgs(System.ComponentModel. ITypeDescriptorContext context,Object value None,Graphics graphics None,Rectangle bounds None)
protected void None.OnParentForeColorChanged(EventArgs e None)
void None None.Page_Load(Object sender None,EventArgs e None)
HRESULT None wuapi.get_ReadOnly([out] VARIANT_BOOL *retval)
public None None.DataGridViewDataErrorEventArgs(Exception exception None,int columnIndex None,int rowIndex None,DataGridViewDataErrorContexts context None)
public void None.RemoveAt(int index None)
public int None.IndexOf(int index None)
public int None.GetMaxCharCount(int byteCount None)
public None None.StreamWriter(String path None,boolean append None)
HRESULT None None.GetProtocolHandles([out] HANDLE_PTR *pKeyboardHandle,[out] HANDLE_PTR *pMouseHandle,[out] HANDLE_PTR *pBeepHandle,[out] HANDLE_PTR *pVideoHandle)
protected String None.GetUniqueName(IDesignerSerializationManager manager None,Object value None)
public Rectangle None.RectangleToClient(Rectangle r None)
HRESULT None certadm.CertSrvRestoreEnd(_In_ HCSBC hbc)
public None None.Employee(string name None,string alias None)
private void None.myButton_Click(Object sender None,System.EventArgs e None)
private void None.showCheckedNodesButton_Click(Object sender None,EventArgs e None)
protected void None.OnRowCancelingEdit(GridViewCancelEditEventArgs e None)
HRESULT WINAPI winbio.WinBioEnumServiceProviders(_In_ WINBIO_BIOMETRIC_TYPE Factor,_Out_ WINBIO_BSP_SCHEMA **BspSchemaArray,_Out_ SIZE_T *BspCount)
protected void None.OnPreviewMouseMove(MouseEventArgs e None)
HRESULT None None.get_SourceNodeId([out] DWORD *pdwPinId)
HRESULT None msctf.GetActiveView([out] TsViewCookie *pvcView)
public Type None.GetChildControlType(String tagName None,IDictionary attribs None)
HRESULT None wuapi.get_RebootBehavior([out] InstallationRebootBehavior *retval)
protected void None.OnParentBackColorChanged(EventArgs e None)
public void None.Uninstall(IDictionary savedState None)
HRESULT None None.GetPinCategory(IPin *pPin None,GUID *pPinCategory None)
public None None.SelectedIndexCollection(ListBox owner None)
HRESULT None None.get_CurrentOrientation([out None None,retval] OrientationType *retVal)
public IPermission None.Union(IPermission target None)
int None None.MyMethod(Object o None)
HRESULT None None.GetNativeVideoSize([out] LONG *lpWidth,[out] LONG *lpHeight,[out] LONG *lpARWidth,[out] LONG *lpARHeight)
BOOL WINAPI advapi32.CryptDecrypt(_In_ HCRYPTKEY hKey,_In_ HCRYPTHASH hHash,_In_ BOOL Final,_In_ DWORD dwFlags,_Inout_ BYTE *pbData,_Inout_ DWORD *pdwDataLen)
DWORD None None.ModeFlags(DWORD AudioMode None)
VOID None None.WdfUsbTargetPipeGetInformation(_In_ WDFUSBPIPE Pipe,_Out_ PWDF_USB_PIPE_INFORMATION PipeInformation)
private void None.NorthwindEmployeeInserting(Object source None,ObjectDataSourceMethodEventArgs e None)
HRESULT None None.get_CachedBoundingRectangle([out None None,retval] RECT *retVal)
private void None.UpdateRecords(Object source None,System.EventArgs e None)
protected Stream None.OpenFile(String path None)
public boolean None.ContainsKey(String key None)
public IAsyncResult None.BeginGetResponse(AsyncCallback callback None,Object state None)
public None None.RootDesignerSerializerAttribute(String serializerTypeName None,String baseSerializerTypeName None,boolean reloadable None)
HRESULT None None.DWordPtrToDWord(_In_ DWORD_PTR dwOperand,_Out_ DWORD *pdwResult)
private void None.myButton_Click(Object sender None,System.EventArgs e None)
public None None.XmlDocument(XmlNameTable nt None)
public void None.AddStyleAttribute(HtmlTextWriterStyle key None,String value None)
HRESULT None None.GetClientData([out] WRDS_CLIENT_DATA *pClientData)
HRESULT None None.WordToShort(_In_ WORD wOperand,_Out_ SHORT *psResult)
public None None.ErrorWebPart(String originalID None,String originalTypeName None,String originalPath None,String genericWebPartID None)
public void None.OnInit(EventArgs e None)
private void None.currencyTextBox_TextChanged(Object sender None,EventArgs e None)
Sub None None.ValidationFunctionName(source None None,arguments None None)
LONG WINAPI tapi32.phoneShutdown(HPHONEAPP hPhoneApp None)
PostBackOptions None None.GetPostBackOptions(IButtonControl buttonControl None)
public Object None.ConvertFromString(String text None)
VOID None None.WdfDeviceInitSetPowerInrush(_In_ PWDFDEVICE_INIT DeviceInit)
public IAsyncResult None.BeginGetRequestStream(AsyncCallback callback None,Object state None)
public void None.DrawToBitmap(Bitmap bitmap None,Rectangle targetBounds None)
public Size None.GetPreferredSize(Size proposedSize None)
protected boolean None.IsInputKey(Keys keyData None)
protected void None.OnInputLanguageChanging(InputLanguageChangingEventArgs e None)
protected void None.OnSet(int index None,Object oldValue None,Object newValue None)
DWORD None virtdisk.CompactVirtualDisk(_In_ HANDLE VirtualDiskHandle,_In_ COMPACT_VIRTUAL_DISK_FLAG Flags,_In_opt_ PCOMPACT_VIRTUAL_DISK_PARAMETERS Parameters,_In_opt_ LPOVERLAPPED Overlapped)
HRESULT None faxcom.get_Name([out None None,retval] BSTR *pVal)
private void None.myButton_Click(Object sender None,System.EventArgs e None)
private void None.myButton_Click(Object sender None,System.EventArgs e None)
protected void None.OnAutoSizeColumnModeChanged(DataGridViewAutoSizeColumnModeEventArgs e None)
public void None.WriteAttributes(XmlReader reader None,boolean defattr None)
HRESULT None None.get_CurrentHasKeyboardFocus([out None None,retval] BOOL *retVal)
public void None.OnInit(EventArgs e None)
private void None.CopyWithProgress(String fileNames[] None)
HRESULT None None.GetLogonErrorRedirector([out] IWRdsProtocolLogonErrorRedirector **ppLogonErrorRedir)
DWORD None bthprops.BluetoothRemoveDevice(BLUETOOTH_ADDRESS *pAddress None)
HRESULT None None.PathCchCombine(_Out_ PWSTR pszPathOut,_In_ size_t cchPathOut,_In_opt_ PCWSTR pszPathIn,_In_opt_ PCWSTR pszMore)
public String None.GetString(String name None)
SECURITY_STATUS SEC_Entry secur32.FreeCredentialsHandle(_In_ PCredHandle phCredential)
HRESULT None None.SizeTToInt64(_In_ size_t cbOperand,_Out_ INT64 *pi64Result)
protected void None.ObjectDataSource1_Filtering(Object sender None,ObjectDataSourceFilteringEventArgs e None)
BOOL WINAPI kernel32.SetProcessWorkingSetSize(_In_ HANDLE hProcess,_In_ SIZE_T dwMinimumWorkingSetSize,_In_ SIZE_T dwMaximumWorkingSetSize)
protected LeftRightAlignment None.RtlTranslateLeftRight(LeftRightAlignment align None)
private void None.ShowPropertiesOfSlateBlue(PaintEventArgs e None)
public void None.FromArgb2(PaintEventArgs e None)
HRESULT None None.ULongPtrToInt(_In_ ULONG_PTR ulOperand,_Out_ INT *piResult)
protected void None.RenderChildren(HtmlTextWriter writer None)
protected ErrorWebPart None.CreateErrorWebPart(String originalID None,String originalTypeName None,String originalPath None,String genericWebPartID None,String errorMessage None)
protected void None.ObjectDataSource1_Filtering(Object sender None,ObjectDataSourceFilteringEventArgs e None)
protected void None.OnStylusDown(StylusDownEventArgs e None)
HRESULT None None.get_CachedHasKeyboardFocus([out None None,retval] BOOL *retVal)
BOOL WINAPI mssign32.PvkPrivateKeySave(_In_ HCRYPTPROV hCryptProv,_In_ HANDLE hFile,_In_ DWORD dwKeySpec,_In_ HWND hwndOwner,_In_ LPCWSTR pwszKeyName,_In_ DWORD dwFlags)
DWORD WINAPI fwpuclnt.FwpmProviderContextDeleteById0(_In_ HANDLE engineHandle,_In_ UINT64 id)
DWORD DHCP_API_FUNCTION dhcpsapi.DhcpEnumSubnetsV6(_In_ LPWSTR ServerIpAddress,_Inout_ DHCP_RESUME_HANDLE *ResumeHandle,_In_ DWORD PreferredMaximum,_Out_ LPDHCPV6_IP_ARRAY *EnumInfo,_Out_ DWORD *ElementsRead,_Out_ DWORD *ElementsTotal)
boolean None None.TabInto(TraversalRequest request None)
protected void None.OnUpdateCommand(DataListCommandEventArgs e None)
public void None.DrawStatusStripSizingGrip(ToolStripRenderEventArgs e None)
public void None.Add(Control child None)
HRESULT None shell32.GetResolution([out] ULONG *puResolutionX,[out] ULONG *puResolutionY)
private void None.Form1Closing(Object sender None,System.ComponentModel.CancelEventArgs e None)
protected void None.OnUpdating(SqlDataSourceCommandEventArgs e None)
protected void None.BaseRemove(Object key None)
public void None.ConvertDoubleInt(double doubleVal None)
public Object None.ConvertFromString(String text None)
public void None.Write(String format None,Object arg0 None,Object arg1 None,Object arg2 None)
protected void None.TreeView1_SelectedNodeChanged(object sender None,EventArgs e None)
private void None.showSelectedButton_Click(Object sender None,System.EventArgs e None)
protected void None.OnParentForeColorChanged(EventArgs e None)
int None None.Compare(Object x None,Object y None)
LONG WINAPI crypt32.CertVerifyCRLTimeValidity(_In_ LPFILETIME pTimeToVerify,_In_ PCRL_INFO pCrlInfo)
HRESULT None None.get_CachedClassName([out None None,retval] BSTR *retVal)
private void None.listDragTarget_DragLeave(Object sender None,System.EventArgs e None)
private void None.showCheckedNodesButton_Click(Object sender None,EventArgs e None)
public Color None.GetPixel(int x None,int y None)
protected boolean None.ProcessDialogChar(char charCode None)
public boolean None.Contains(String url None)
private void None.SelectNode(TreeNode node None)
public void None.SetExpires(DateTime date None)
private void None.button1_Click(System.Object sender None,System.EventArgs e None)
HRESULT WINAPI bthprops.BluetoothSendAuthenticationResponseEx(_In_opt_ HANDLE hRadioIn,_In_ PBLUETOOTH_AUTHENTICATE_RESPONSE pauthResponse)
public None None.ConnectionProviderAttribute(String displayName None)
protected void None.OnInserted(SqlDataSourceStatusEventArgs e None)
protected void None.Dispose(boolean disposing None)
protected RowUpdatedEventArgs None.CreateRowUpdatedEvent(DataRow dataRow None,IDbCommand command None,StatementType statementType None,DataTableMapping tableMapping None)
BOOL None wininet.InternetCombineUrl(_In_ LPCTSTR lpszBaseUrl,_In_ LPCTSTR lpszRelativeUrl,_Out_ LPTSTR lpszBuffer,_Inout_ LPDWORD lpdwBufferLength,_In_ DWORD dwFlags)
BOOL None wininet.InternetCombineUrlW(_In_ LPCTSTR lpszBaseUrl,_In_ LPCTSTR lpszRelativeUrl,_Out_ LPTSTR lpszBuffer,_Inout_ LPDWORD lpdwBufferLength,_In_ DWORD dwFlags)
BOOL None wininet.InternetCombineUrlA(_In_ LPCTSTR lpszBaseUrl,_In_ LPCTSTR lpszRelativeUrl,_Out_ LPTSTR lpszBuffer,_Inout_ LPDWORD lpdwBufferLength,_In_ DWORD dwFlags)
protected void None.OnParentForeColorChanged(EventArgs e None)
DWORD WINAPI fwpuclnt.FwpmFilterEnum0(_In_ HANDLE engineHandle,_In_ HANDLE enumHandle,_In_ UINT32 numEntriesRequested,_Out_ FWPM_FILTER0 ***entries,_Out_ UINT32 *numEntriesReturned)
public int None.Add(ActiveDirectorySubnet subnet None)
void None None.SetValue(Object obj None,Object value None,BindingFlags invokeAttr None,Binder binder None,Object[] index None,CultureInfo culture None)
IQueryable None None.GetQueryable(IQueryable source None)
LONG WINAPI tapi32.phoneSetGain(HPHONE hPhone None,DWORD dwHookSwitchDev None,DWORD dwGain None)
int None None.main(void None None)
public void None.LinkComponentRenameEvent(IComponentChangeService changeService None)
public void None.Remove(Control value None)
public None None.ListViewItem(String text None,String imageKey None)
HRESULT None None.PathCchRenameExtension(_Inout_ PWSTR pszPath,_In_ size_t cchPath,_In_ PCWSTR pszExt)
public None None.HttpContext(HttpWorkerRequest wr None)
void None None.ValidateBtn_Click(Object sender None,EventArgs e None)
DWORD WINAPI clusapi.ClusterNodeEnumEx(_In_ HNODEENUMEX hNodeEnum,_In_ DWORD dwIndex,_Inout_ PCLUSTER_ENUM_ITEM pItem,_Inout_ LPDWORD cbItem)
BOOL WINAPI crypt32.CryptSIPGetSignedDataMsg(_In_ SIP_SUBJECTINFO *pSubjectInfo,_Out_ DWORD *pdwEncodingType,_In_ DWORD dwIndex,_Inout_ DWORD *pcbSignedDataMsg,_Out_ BYTE *pbSignedDataMsg)
public void None.Start(Object parameter None)
HRESULT None None.LongToDWordPtr(_In_ LONG lOperand,_Out_ DWORD_PTR *pulResult)
HRESULT None None.SIZETToSSIZET(_In_ SIZE_T cbOperand,_Out_ SSIZE_T *pcbResult)
protected void None.OnParentForeColorChanged(EventArgs e None)
protected void None.OnParentForeColorChanged(EventArgs e None)
uint32 None cimwin32.SetPowerState([in] uint16 PowerState,[in] datetime Time)
DWORD WINAPI virtdisk.EnumerateVirtualDiskMetadata(_In_ HANDLE VirtualDiskHandle,_Inout_ PULONG NumberOfItems,_Out_ GUID *Items)
public boolean None.ContainsKey(String key None)
protected void None.OnDeleteCommand(DataGridCommandEventArgs e None)
DWORD None dhcpsapi.DhcpEnumOptionsV6(_In_ LPWSTR ServerIpAddress,_In_ DWORD Flags,_In_ WCHAR *ClassName,_In_ WCHAR *VendorName,_Inout_ DHCP_RESUME_HANDLE *ResumeHandle,_In_ DWORD PreferredMaximum,_Out_ LPDHCP_OPTION_ARRAY *Options,_Out_ DWORD *OptionsRead,_Out_ DWORD *OptionsTotal)
public boolean None.ContainsKey(String key None)
void None None.Page_Load(Object sender None,EventArgs e None)
protected void None.OnPreviewStylusSystemGesture(StylusSystemGestureEventArgs e None)
public void None.LoadXml(String xml None)
protected void None.OnServerChange(EventArgs e None)
void None None.Page_Load(Object sender None,EventArgs e None)
public void None.Add(Control child None)
HRESULT None None.LongLongToIntPtr(_In_ LONGLONG llOperand,_Out_ INT_PTR *piResult)
protected void None.OnClosing(CancelEventArgs e None)
public void None.InitializeCell(TableCell cell None,int columnIndex None,ListItemType itemType None)
protected void None.OnPropertyChanged(DependencyPropertyChangedEventArgs e None)
public None None.MissingFieldException(String message None)
protected DataSourceView None.GetView(String viewName None)
private void None.button1_Click(Object sender None,EventArgs e None)
public None None.EventDescriptorCollection(EventDescriptor[] events None,boolean readOnly None)
HRESULT None None.get_CurrentFrameworkId([out None None,retval] BSTR *retVal)
protected void None.OnPreviewGotKeyboardFocus(KeyboardFocusChangedEventArgs e None)
public Size None.GetPreferredSize(Size proposedSize None)
protected void None.OnPreRender(EventArgs e None)
public None None.PaintValueEventArgs(ITypeDescriptorContext context None,Object value None,Graphics graphics None,Rectangle bounds None)
Object None None.GetService(Type serviceType None)
public None None.List(ListItem listItem None)
HRESULT None None.get_CachedAccessKey([out None None,retval] BSTR *retVal)
private void None.myButton_Click(Object sender None,System.EventArgs e None)
private void None.showCheckedNodesButton_Click(Object sender None,EventArgs e None)
public void None.ClearValue(DependencyPropertyKey key None)
public int None.IndexOf(String source None,char value None)
HRESULT None None.GetVideoHandle([out] HANDLE_PTR *pVideoHandle)
protected void None.OnCancelCommand(DataListCommandEventArgs e None)
public None None.ListViewItem(String[] items None,ListViewGroup group None)
private void None.button4_Click(Object sender None,EventArgs e None)
protected void None.LoadControlState(Object savedState None)
DWORD None bthprops.BluetoothGetRadioInfo(HANDLE hRadio None,PBLUETOOTH_RADIO_INFO pRadioInfo None)
LONG WINAPI tapi32.phoneGetDevCaps(HPHONEAPP hPhoneApp None,DWORD dwDeviceID None,DWORD dwAPIVersion None,DWORD dwExtVersion None,LPPHONECAPS lpPhoneCaps None)
LONG WINAPI tapi32.phoneGetDevCapsW(HPHONEAPP hPhoneApp None,DWORD dwDeviceID None,DWORD dwAPIVersion None,DWORD dwExtVersion None,LPPHONECAPS lpPhoneCaps None)
LONG WINAPI tapi32.phoneGetDevCapsA(HPHONEAPP hPhoneApp None,DWORD dwDeviceID None,DWORD dwAPIVersion None,DWORD dwExtVersion None,LPPHONECAPS lpPhoneCaps None)
HRESULT None None.GetClipOverflow([out] BOOL *pfClipOverflow)
LONG WINAPI tapi32.phoneGetID(HPHONE hPhone None,LPVARSTRING lpDeviceID None,LPCSTR lpszDeviceClass None)
LONG WINAPI tapi32.phoneGetIDW(HPHONE hPhone None,LPVARSTRING lpDeviceID None,LPCSTR lpszDeviceClass None)
LONG WINAPI tapi32.phoneGetIDA(HPHONE hPhone None,LPVARSTRING lpDeviceID None,LPCSTR lpszDeviceClass None)
public String None.ResolveUrl(String relativeUrl None)
DWORD None bthprops.BluetoothSdpGetElementData(_In_ LPBYTE pSdpStream,_In_ ULONG cbSpdStreamLength,_Out_ PSDP_ELEMENT_DATA pData)
public boolean None.Contains(String url None)
public void None.OnInit(EventArgs e None)
DWORD None dhcpsapi.DhcpRemoveOptionValueV6(_In_ LPWSTR ServerIpAddress,_In_ DWORD Flags,_In_ DHCP_OPTION_ID OptionID,_In_ WCHAR *ClassName,_In_ WCHAR *VendorName,_In_ DHCP_OPTION_SCOPE_INFO6 ScopeInfo)
protected void None.OnUpdating(SqlDataSourceCommandEventArgs e None)
function None None.GetQuantity(productID None None,elemToUpdate None None,productLabelElem None None,buttonElem None None)
public void None.ConvertDoubleString(double doubleVal None)
HRESULT None msctf.GetEndACP([out] LONG *pacp)
protected void None.OnSubscribeControlEvents(Control control None)
HRESULT WINAPI drt.DrtGetInstanceNameSize(_In_ HDRT hDrt,_Out_ ULONG *pulcbInstanceNameSize)
private void None.findButton_Click(Object sender None,System.EventArgs e None)
public IAsyncResult None.BeginGetResponse(AsyncCallback callback None,Object state None)
public None None.XmlSerializer(Type type None,String defaultNamespace None)
DWORD WINAPI dhcpsapi.DhcpSetSubnetDelayOffer(_In_ LPWSTR ServerIpAddress,_In_ DHCP_IP_ADDRESS SubnetAddress,_In_ USHORT TimeDelayInMilliseconds)
public void None.AddStyleAttribute(HtmlTextWriterStyle key None,String value None)
protected void None.TreeView1_SelectedNodeChanged(object sender None,EventArgs e None)
HRESULT None None.ULongToUShort(_In_ ULONG ulOperand,_Out_ USHORT *pusResult)
HRESULT None None.GetLastInputTime([out] ULONG64 *pLastInputTime)
public None None.DataGridViewDataErrorEventArgs(Exception exception None,int columnIndex None,int rowIndex None,DataGridViewDataErrorContexts context None)
BOOL WINAPI advapi32.CryptCreateHash(_In_ HCRYPTPROV hProv,_In_ ALG_ID Algid,_In_ HCRYPTKEY hKey,_In_ DWORD dwFlags,_Out_ HCRYPTHASH *phHash)
private void None.Page_Init(Object sender None,EventArgs e None)
private void None.ShowPropertiesOfSlateBlue(PaintEventArgs e None)
public Object None.GetService(Type type None)
protected void None.RaiseMouseEvent(Object key None,MouseEventArgs e None)
HRESULT None mfplat.MFInitVideoFormat(_Out_ MFVIDEOFORMAT *pVideoFormat,_In_ MFStandardVideoFormat type)
protected void None.OnUpdating(ObjectDataSourceMethodEventArgs e None)
function None None.BreakTest(breakpoint None None)
HRESULT None None.Int8ToUIntPtr(_In_ INT8 i8Operand,_Out_ UINT_PTR *puResult)
public void None.Validate(String validationGroup None)
public Color None.GetPixel(int x None,int y None)
WINOLEAPI None ole32.GetHGlobalFromStream(_In_ IStream *pstm,_Out_ HGLOBAL *phglobal)
protected void None.OnRenderItemText(ToolStripItemTextRenderEventArgs e None)
protected void None.OnScroll(ScrollEventArgs se None)
HRESULT None None.QueryVendorInfo(LPWSTR *pVendorInfo None)
public boolean None.Equals(Object obj None)
HRESULT WDSMCSAPI wdsmc.WdsTransportServerTrace(_In_ HANDLE hProvider,_In_ WDS_MC_SEVERITY Severity,_In_ LPCWSTR pwszFormat)
HRESULT None None.SetPreroll(BOOL bIsPreroll None)
public int None.GetMinute(DateTime time None)
public void None.Add(Type type None,String member None,XmlAttributes attributes None)
errno_t None None.wcstombs_s(size_t *pReturnValue None,char *mbstr None,size_t sizeInBytes None,const wchar_t *wcstr,size_t count None)
protected void None.OnRenderToolStripBackground(ToolStripRenderEventArgs e None)
public void None.BeginStoryboard(Storyboard storyboard None)
public void None.AddStyleAttribute(HtmlTextWriterStyle key None,String value None)
protected void None.OnPagePreLoad(Object sender None,EventArgs e None)
HRESULT WINAPI drt.DrtClose(_In_ HDRT hDrt)
protected void None.OnPreviewStylusOutOfRange(StylusEventArgs e None)
protected void None.OnUpdating(SqlDataSourceCommandEventArgs e None)
HRESULT None None.UIntPtrToULong(_In_ UINT_PTR uOperand,_Out_ ULONG *pulResult)
HRESULT None taskschd.GetSecurityDescriptor(LONG securityInformation None,[out None None,retval] BSTR *pSddl)
public None None.ListViewSubItem(ListViewItem owner None,String text None,Color foreColor None,Color backColor None,Font font None)
public ContextNode None.FindNode(Guid identifier None)
private void None.Button1_Click(Object sender None,EventArgs e None)
private void None.PrintCurrentListName(DataGrid myDataGrid None)
public boolean None.Equals(Object o None)
private void None.treeView1_KeyDown(Object sender None,KeyEventArgs e None)
protected void None.BaseRemove(Object key None)
public boolean None.Equals(Object o None)
protected void None.OnDeleted(ObjectDataSourceStatusEventArgs e None)
protected void None.OnGotFocus(RoutedEventArgs e None)
protected void None.OnUpdating(SqlDataSourceCommandEventArgs e None)
HRESULT None None.UIntToShort(_In_ UINT uOperand,_Out_ SHORT *psResult)
private void None.button3_Click(Object sender None,System.EventArgs e None)
void None None.Page_Load(Object sender None,System.EventArgs e None)
protected String None.GetTagName(HtmlTextWriterTag tagKey None)
public String None.GetAbbreviatedEraName(int era None)
protected void None.InitializePager(FormViewRow row None,PagedDataSource pagedDataSource None)
protected void None.OnCreatedUser(EventArgs e None)
private void None.On_Inserting(Object sender None,SqlDataSourceCommandEventArgs e None)
public IAsyncResult None.BeginGetResponse(AsyncCallback callback None,Object state None)
HRESULT WINAPI mssign32.PvkGetCryptProv(_In_ HWND hwnd,_In_ LPCWSTR pwszCaption,_In_ LPCWSTR pwszCapiProvider,_In_ DWORD dwProviderType,_In_ LPCWSTR pwszPvkFile,_In_ LPCWSTR pwszKeyContainerName,_Out_ DWORD *pdwKeySpec,_Out_opt_ LPWSTR *ppwszTmpContainer,_Out_ HCRYPTPROV *phCryptProv)
HRESULT None None.GetUserCredentials([out] WTS_USER_CREDENTIAL *pUserCreds)
protected void None.OnScroll(ScrollEventArgs se None)
private void None.OnRecordDeleting(Object source None,SqlDataSourceCommandEventArgs e None)
public StringBuilder None.Insert(int index None,short value None)
void None None.ReadXml(XmlReader reader None)
IQueryable None None.GetQueryable(IQueryable source None)
public None None.NamedPermissionSet(String name None,PermissionState state None)
function None None.GetQuantity(productID None None,elemToUpdate None None,productLabelElem None None,buttonElem None None)
HRESULT None None.SizeTToIntPtr(_In_ size_t cbOperand,_Out_ INT_PTR *piResult)
HRESULT None None.get_CachedIsPassword([out None None,retval] BOOL *retVal)
public int None.Add(Style style None)
private void None.currencyTextBox_TextChanged(Object sender None,EventArgs e None)
DWORD None None.NPGetPropertyText(_In_ DWORD iButton,_In_ DWORD nPropSel,_In_ LPTSTR lpName,_Out_ LPTSTR lpButtonName,_Inout_ DWORD nButtonNameLen,_In_ DWORD nType)
private void None.SelectNode(TreeNode node None)
protected void None.SetDesignModeState(IDictionary data None)
HRESULT None None.get_CachedItemType([out None None,retval] BSTR *retVal)
PCCERT_CONTEXT WINAPI crypt32.CertDuplicateCertificateContext(_In_ PCCERT_CONTEXT pCertContext)
HRESULT None None.get_CustomStrokes([out None None,retval] InkCustomStrokes **ppunkInkCustomStrokes)
double None None.atof(const char *str)
public boolean None.MoveToFollowing(XPathNodeType type None)
DWORD None mpr.WNetCancelConnection(_In_ LPCTSTR lpName,_In_ BOOL fForce)
DWORD None mpr.WNetCancelConnectionW(_In_ LPCTSTR lpName,_In_ BOOL fForce)
DWORD None mpr.WNetCancelConnectionA(_In_ LPCTSTR lpName,_In_ BOOL fForce)
HRESULT None None.GetCurrentTimeFormat([out] GUID *pguidTimeFormat,[out] MP_TIMEDATA *pTimeData)
protected void None.OnDeleteCommand(DataListCommandEventArgs e None)
HRESULT None None.ULongToUIntPtr(_In_ ULONG ulOperand,_Out_ UINT_PTR *puResult)
private void None.ShowPropertiesOfSlateBlue(PaintEventArgs e None)
public void None.WriteEntry(String message None,EventLogEntryType type None)
public DragDropEffects None.DoDragDrop(Object data None,DragDropEffects allowedEffects None)
public WaitForChangedResult None.WaitForChanged(WatcherChangeTypes changeType None,int timeout None)
HRESULT None None.get_CurrentClassName([out None None,retval] BSTR *retVal)
String None None.ToString(String format None,IFormatProvider formatProvider None)
public XmlReadMode None.ReadXml(XmlReader reader None)
protected void None.ObjectDataSource1_Filtering(Object sender None,ObjectDataSourceFilteringEventArgs e None)
private void None.On_Inserting(Object sender None,SqlDataSourceCommandEventArgs e None)
public void None.InitializeExistingComponent(IDictionary defaultValues None)
DWORD WINAPI fwpuclnt.FwpmProviderContextUnsubscribeChanges0(_In_ HANDLE engineHandle,_In_ HANDLE changeHandle)
public boolean None.Contains(Object item None)
private void None.comboBox1_SelectedIndexChanged(Object sender None,System.EventArgs e None)
public void None.WriteTo(XmlWriter w None)
protected void None.RaisePaintEvent(Object key None,PaintEventArgs e None)
public int None.GetPreferredWidth(DataGridViewAutoSizeColumnMode autoSizeColumnMode None,boolean fixedHeight None)
public None None.DateTime(long ticks None)
protected void None.Render(HtmlTextWriter writer None)
HRESULT None None.PtrdiffTToUInt(_In_ ptrdiff_t cbOperand,_Out_ UINT *puiResult)
HRESULT None None.get_CurrentHasKeyboardFocus([out None None,retval] BOOL *retVal)
HRESULT None None.GetMediaType(AM_MEDIA_TYPE **ppMediaType None)
public ConfigurationSectionGroup None.GetSectionGroup(String sectionGroupName None)
HRESULT None None.UIntToInt(_In_ UINT uOperand,_Out_ INT *piResult)
private void None.treeView1_KeyDown(Object sender None,KeyEventArgs e None)
ULONG None httpapi.HttpDeleteServiceConfiguration(_In_ HANDLE ServiceHandle,_In_ HTTP_SERVICE_CONFIG_ID ConfigId,_In_ PVOID pConfigInformation,_In_ ULONG ConfigInformationLength,_In_ LPOVERLAPPED pOverlapped)
HRESULT None None.IntPtrToShort(_In_ INT_PTR iOperand,_Out_ SHORT *psResult)
void None None.Page_Load(Object sender None,EventArgs e None)
public int None.ToFourDigitYear(int year None)
public int None.Add(EventDescriptor value None)
Object None None.GetFormat(Type formatType None)
protected void None.OnLocationChanged(EventArgs e None)
HRESULT None shell32.GetPixelFormat([out] PixelFormat *pFormat)
public Stream None.GetManifestResourceStream(Type type None,String name None)
HRESULT None None.GetCAs([out None None,retval] ICertificationAuthorities **ppCAs)
private void None.listBox1_SelectedIndexChanged(Object sender None,System.EventArgs e None)
private void None.currencyTextBox_TextChanged(Object sender None,EventArgs e None)
HRESULT None None.Receive(IMediaSample *pSample None)
protected void None.mgr1_AuthorizeWebPart(object sender None,WebPartAuthorizationEventArgs e None)
public void None.EndConnect(IAsyncResult asyncResult None)
HRESULT None None.ULongPtrToPtrdiffT(_In_ ULONG_PTR ulOperand,_Out_ ptrdiff_t *pcbResult)
public void None.Page_Load(Object sender None,EventArgs e None)
protected void None.OnLostMouseCapture(MouseEventArgs e None)
BOOL None cryptdlg.CertViewProperties(_In_ CERT_VIEWPROPERTIES_STRUCT *pCertViewInfo)
BOOL None cryptdlg.CertViewPropertiesW(_In_ CERT_VIEWPROPERTIES_STRUCT *pCertViewInfo)
BOOL None cryptdlg.CertViewPropertiesA(_In_ CERT_VIEWPROPERTIES_STRUCT *pCertViewInfo)
HRESULT None None.LongPtrToULongPtr(_In_ LONG_PTR lOperand,_Out_ ULONG_PTR *pulResult)
protected Size None.MeasureOverride(Size constraint None)
protected void None.OnParentFontChanged(EventArgs e None)
void None None.ValidateBtn_Click(Object sender None,EventArgs e None)
HRESULT None None.EnumFilters([out] IEnumFilters **ppEnum)
HRESULT None None.GetInputType(DWORD dwInputStreamIndex None,DWORD dwTypeIndex None,[out] DMO_MEDIA_TYPE *pmt)
protected void None.OnCommitTransaction(EventArgs e None)
protected void None.OnFillError(FillErrorEventArgs value None)
public int None.GetMaxCharCount(int byteCount None)
protected None None.XmlDocument(XmlImplementation imp None)
public void None.Invalidate(Region region None,boolean invalidateChildren None)
protected void None.Reset(ConfigurationElement parentElement None)
public String None.GetString(String name None)
public StringBuilder None.Insert(int index None,short value None)
public void None.ItemAdded(ListMakerItem item None)
public void None.Remove(Control value None)
protected void None.LoadControlState(Object savedState None)
MI_INLINE MI_Result None.MI_OperationOptions_GetPromptUserMode(_In_ MI_OperationOptions *options,_Out_ MI_CallbackMode *mode)
protected void None.OnMouseLeave(EventArgs e None)
HRESULT None None.UIntToInt8(_In_ UINT uOperand,_Out_ INT8 *pi8Result)
public None None.StreamWriter(String path None,boolean append None)
public void None.AddRange(TabPage[] pages None)
public void None.Write(Object value None)
protected void None.PostFilterEvents(IDictionary events None)
protected void None.OnMouseWheel(MouseWheelEventArgs e None)
BOOL None cabinet.CloseCompressor(_In_ COMPRESSOR_HANDLE CompressorHandle)
BOOL WINAPI crypt32.CryptVerifyMessageHash(_In_ PCRYPT_HASH_MESSAGE_PARA pHashPara,_In_ BYTE *pbHashedBlob,_In_ DWORD cbHashedBlob,_Out_ BYTE *pbToBeHashed,_Inout_ DWORD *pcbToBeHashed,_Out_opt_ BYTE *pbComputedHash,_Inout_opt_ DWORD *pcbComputedHash)
private void None.myButton_Click(Object sender None,System.EventArgs e None)
DWORD DHCP_API_FUNCTION dhcpsapi.DhcpV4FailoverAddScopeToRelationship(_In_opt_ LPWSTR ServerIpAddress,_In_ LPDHCP_FAILOVER_RELATIONSHIP pRelationship)
public void None.WriteAttributes(XmlReader reader None,boolean defattr None)
HRESULT None None.IntPtrSub(_In_ INT_PTR iMinuend,_In_ INT_PTR iSubtrahend,_Out_ INT_PTR *piResult)
int None None._vsprintf_p(char *buffer None,size_t sizeInBytes None,const char *format,va_list argptr None)
NTSTATUS None None.KsCreatePin(_In_ HANDLE FilterHandle,_In_ PKSPIN_CONNECT Connect,_In_ ACCESS_MASK DesiredAccess,_Out_ PHANDLE ConnectionHandle)
protected void None.Page_Load(Object sender None,System.EventArgs e None)
HRESULT None None.get_CachedHelpText([out None None,retval] BSTR *retVal)
protected void None.RenderContents(HtmlTextWriter writer None)
protected void None.OnPreRender(EventArgs e None)
public boolean None.MoveToFollowing(XPathNodeType type None)
DWORD WINAPI fwpuclnt.FwpmEngineGetSecurityInfo0(_In_ HANDLE engineHandle,_In_ SECURITY_INFORMATION securityInfo,_Out_opt_ PSID *sidOwner,_Out_opt_ PSID *sidGroup,_Out_opt_ PACL *dacl,_Out_opt_ PACL *sacl,_Out_ PSECURITY_DESCRIPTOR *securityDescriptor)
int None None.AecDecodeVAD(short *pOutput None)
HRESULT None None.IntToULong(_In_ INT iOperand,_Out_ ULONG *pulResult)
HRESULT None None.UIntToByte(_In_ UINT uOperand,_Out_ BYTE *pb)
public XmlNode None.PrependChild(XmlNode newChild None)
public void None.InitializeCell(DataControlFieldCell cell None,DataControlCellType cellType None,DataControlRowState rowState None,int rowIndex None)
static void None.DisplayPendingByteCount(Socket s None)
public void None.RemoveAt(int index None)
protected DataSourceView None.GetView(String viewName None)
void None None.Page_Load(Object sender None,System.EventArgs e None)
public void None.AddRange(TabPage[] pages None)
public XmlReadMode None.ReadXml(XmlReader reader None)
protected void None.OnTabIndexChanged(EventArgs e None)
private void None.myButton_Click(Object sender None,System.EventArgs e None)
protected void None.OnRenderButtonBackground(ToolStripItemRenderEventArgs e None)
protected void None.ClearPendingBreakIfDeviceBreaksOnBlockLevel(XhtmlMobileTextWriter writer None)
int None None.main(void None None)
private void None.Form1Closing(Object sender None,System.ComponentModel.CancelEventArgs e None)
DWORD DHCP_API_FUNCTION dhcpsapi.DhcpV4SetOptionValue(_In_opt_ LPWSTR ServerIpAddress,_In_ DWORD Flags,_In_ DHCP_OPTION_ID OptionId,_In_opt_ LPWSTR PolicyName,_In_opt_ LPWSTR VendorName,_In_ LPDHCP_OPTION_SCOPE_INFO ScopeInfo,_In_ LPDHCP_OPTION_DATA OptionValue)
PostBackOptions None None.GetPostBackOptions(IButtonControl buttonControl None)
private void None.Form1_Load(Object sender None,System.EventArgs e None)
public void None.SetTagInnerText(String text None)
protected void None.Serialize(SerializationInfo info None,StreamingContext context None)
public HtmlElement None.AppendChild(HtmlElement newElement None)
SECURITY_STATUS WINAPI secur32.QueryContextAttributesEx(_In_ PCtxtHandle phContext,_In_ ULONG ulAttribute,_Out_ PVOID pBuffer,_In_ ULONG cbBuffer)
SECURITY_STATUS WINAPI secur32.QueryContextAttributesExW(_In_ PCtxtHandle phContext,_In_ ULONG ulAttribute,_Out_ PVOID pBuffer,_In_ ULONG cbBuffer)
SECURITY_STATUS WINAPI secur32.QueryContextAttributesExA(_In_ PCtxtHandle phContext,_In_ ULONG ulAttribute,_Out_ PVOID pBuffer,_In_ ULONG cbBuffer)
HRESULT None None.IntPtrToULongPtr(_In_ INT_PTR iOperand,_Out_ ULONG_PTR *pulResult)
protected void None.PreSerialize(XmlWriter writer None)
private void None.currencyTextBox_TextChanged(Object sender None,EventArgs e None)
HRESULT None None.GetAspectRatioMode([out] DWORD *lpAspectRatioMode)
protected boolean None.LeaveUnsharesRow(int rowIndex None,boolean throughMouseClick None)
protected void None.OnParentForeColorChanged(EventArgs e None)
private void None.findButton_Click(Object sender None,System.EventArgs e None)
int None None.MyMethod(Object o None)
protected void None.BaseRemove(Object key None)
public None None.EventDescriptorCollection(EventDescriptor[] events None,boolean readOnly None)
private void None.showCheckedNodesButton_Click(Object sender None,EventArgs e None)
public void None.Write(String s None)
public Stream None.GetManifestResourceStream(Type type None,String name None)
public void None.Merge(DataSet dataSet None,boolean preserveChanges None,MissingSchemaAction missingSchemaAction None)
public XmlDocumentType None.CreateDocumentType(String name None,String publicId None,String systemId None,String internalSubset None)
public void None.CloseWebPart(WebPart webPart None)
private void None.listBox1_SelectedIndexChanged(Object sender None,System.EventArgs e None)
protected DataSourceView None.GetView(String viewName None)
public void None.AddRange(TabPage[] pages None)
HRESULT None None.CanConstrict([out] BOOL *pYes)
protected void None.OnGiveFeedback(GiveFeedbackEventArgs gfbevent None)
public Rectangle None.PositionEditingPanel(Rectangle cellBounds None,Rectangle cellClip None,DataGridViewCellStyle cellStyle None,boolean singleVerticalBorderAdded None,boolean singleHorizontalBorderAdded None,boolean isFirstDisplayedColumn None,boolean isFirstDisplayedRow None)
protected void None.OnMouseLeave(MouseEventArgs e None)
protected void None.OnCellBorderStyleChanged(EventArgs e None)
HRESULT None None.LongToULong(_In_ LONG lOperand,_Out_ ULONG *pulResult)
void None None.SomeMethod([out None None,retval] VARIANT_BOOL* None)
protected void None.OnAutoSizeColumnModeChanged(DataGridViewAutoSizeColumnModeEventArgs e None)
public None None.ListViewItem(String[] items None)
HRESULT None None.SizeTToDWord(_In_ size_t cbOperand,_Out_ DWORD *pdwResult)
public int None.GetDayOfYear(DateTime time None)
public void None.Remove(TabPage value None)
HRESULT WINAPI None.WbioQueryStorageInterface(_Out_ PWINBIO_STORAGE_INTERFACE *StorageInterface)
public String None.GetEraName(int era None)
private void None.myButton_Click(Object sender None,System.EventArgs e None)
uint32 None cimwin32.CopyEx([in] string FileName,[out] string StopFileName,[in None None,optional] string StartFileName,[in None None,optional] boolean Recursive)
protected void None.OnPreviewStylusSystemGesture(StylusSystemGestureEventArgs e None)
protected void None.OnAutoSizeChanged(EventArgs e None)
public boolean None.MoveToFollowing(String localName None,String namespaceURI None)
public void None.ScrollControlIntoView(Control activeControl None)
HRESULT None None.GetDVDTextNumberOfLanguages([out] ULONG *pulNumOfLangs)
HRESULT None None.GetTotalLength([out] QWORD *pqwTotalLength)
HRESULT None None.GetShadowConnection([out] IWRdsProtocolShadowConnection **ppShadowConnection)
public None None.ConnectionProviderAttribute(String displayName None)
private void None.BindingManagerBase_CurrentChanged(Object sender None,EventArgs e None)
DWORD None bthprops.BluetoothSetServiceState(HANDLE hRadio None,BLUETOOTH_DEVICE_INFO *pbtdi None,GUID *pGuidService None,DWORD dwServiceFlags None)
PostBackOptions None None.GetPostBackOptions(IButtonControl buttonControl None)
function None None.GetQuantity(productID None None,elemToUpdate None None,productLabelElem None None,buttonElem None None)
protected void None.OnDataBound(EventArgs e None)
function None None.GetQuantity(productID None None,elemToUpdate None None,productLabelElem None None,buttonElem None None)
private void None.Page_Init(Object sender None,EventArgs e None)
protected void None.TreeView1_SelectedNodeChanged(object sender None,EventArgs e None)
HRESULT None None.GetFullscreen([out] BOOL *pfFullscreen)
public void None.LinkComponentChangingEvent(IComponentChangeService changeService None)
public None None.DateTime(long ticks None,DateTimeKind kind None)
BOOL WINAPI crypt32.CryptProtectData(_In_ DATA_BLOB *pDataIn,_In_opt_ LPCWSTR szDataDescr,_In_opt_ DATA_BLOB *pOptionalEntropy,_Reserved_ PVOID pvReserved,_In_opt_ CRYPTPROTECT_PROMPTSTRUCT *pPromptStruct,_In_ DWORD dwFlags,_Out_ DATA_BLOB *pDataOut)
protected void None.OnSubscribeControlEvents(Control control None)
protected void None.Page_Load(Object sender None,System.EventArgs e None)
public IAsyncResult None.BeginGetResponse(AsyncCallback callback None,Object state None)
protected void None.InitializePager(FormViewRow row None,PagedDataSource pagedDataSource None)
HRESULT None wuapi.get_Title([out] BSTR *retval)
protected void None.OnKeyUp(KeyEventArgs kevent None)
private void None.PrintCurrentListName(DataGrid myDataGrid None)
public void None.Add(Control child None)
function None None.GetQuantity(productID None None,elemToUpdate None None,productLabelElem None None,buttonElem None None)
public boolean None.Contains(Installer value None)
public Object None.ConvertFromString(String text None)
public None None.DateTime(long ticks None,DateTimeKind kind None)
protected void None.OnMouseHover(EventArgs e None)
protected void None.AddAttributesToRender(HtmlTextWriter writer None)
public void None.AddRange(TabPage[] pages None)
public int None.ToFourDigitYear(int year None)
private void None.button3_Click(Object sender None,System.EventArgs e None)
public boolean None.Equals(Object o None)
static void None.WriteObjectInfo(Object testObject None)
public boolean None.Equals(StringBuilder sb None)
public boolean None.Contains(Object item None)
protected void None.OnInvalidated(InvalidateEventArgs e None)
public None None.ToolStripLabel(String text None,Image image None,boolean isLink None)
HRESULT None None.GetTotalLength([out] QWORD *pqwTotalLength)
private void None.currencyTextBox_TextChanged(Object sender None,EventArgs e None)
public void None.CloseWebPart(WebPart webPart None)
HRESULT None None.Int64ToULongLong(_In_ INT64 i64Operand,_Out_ ULONGLONG *pullResult)
BOOL None bthprops.BluetoothFindDeviceClose(HBLUETOOTH_DEVICE_FIND hFind None)
protected void None.SetRegionContent(EditableDesignerRegion region None,String content None)
protected void None.LoadControlState(Object savedState None)
DWORD WINAPI dhcpsapi.DhcpModifyClassV6(_In_ LPWSTR ServerIpAddress,_In_ DWORD ReservedMustBeZero,_In_ LPDHCP_CLASS_INFO_V6 ClassInfo)
NTSTATUS None None.WdfRequestCreate(_In_opt_ PWDF_OBJECT_ATTRIBUTES RequestAttributes,_In_opt_ WDFIOTARGET IoTarget,_Out_ WDFREQUEST *Request)
protected LeftRightAlignment None.RtlTranslateLeftRight(LeftRightAlignment align None)
public DragDropEffects None.DoDragDrop(Object data None,DragDropEffects allowedEffects None)
protected void None.SetSelectedCellCore(int columnIndex None,int rowIndex None,boolean selected None)
public BindingExpressionBase None.SetBinding(DependencyProperty dp None,BindingBase binding None)
public XmlReadMode None.ReadXml(XmlReader reader None)
public void None.SetCacheKey(Cache cache None)
HRESULT WINAPI kernel32.WerUnregisterRuntimeExceptionModule(_In_ PCWSTR pwszOutOfProcessCallbackDll,_In_opt_ PVOID pContext)
HRESULT None None.SIZETToLong(_In_ SIZE_T cbOperand,_Out_ LONG *plResult)
private void None.whatIsChecked_Click(Object sender None,System.EventArgs e None)
HRESULT None oleaut32.VarDecFromDisp(_In_ IDispatch *pdispIn,_In_ LCID lcid,_Out_ DECIMAL *pdecOut)
public boolean None.IsClientScriptBlockRegistered(String key None)
HRESULT None None.GetUserCredentials([out] WRDS_USER_CREDENTIAL *pUserCreds)
private void None.DataGridTableStyleSampleLoad(Object sender None,EventArgs e None)
PDNS_RECORD WINAPI dnsapi.DnsRecordCopyEx(_In_ PDNS_RECORD pRecord,_In_ DNS_CHARSET CharSetIn,_In_ DNS_CHARSET CharSetOut)
public None None.Cylinder(double r None,double h None)
private void None.listView1_BeforeLabelEdit(Object sender None,System.Windows.Forms.LabelEditEventArgs e None)
private void None.On_Click(Object source None,System.EventArgs e None)
HRESULT None None.ULongPtrToLongLong(_In_ ULONG_PTR ulOperand,_Out_ LONGLONG *pllResult)
HRESULT WINAPI cryptxml.CryptXmlImportPublicKey(DWORD dwFlags None,_In_ CRYPT_XML_KEY_VALUE *pKeyValue,_Out_ BCRYPT_KEY_HANDLE *phKey)
private void None.listBox1_SelectedIndexChanged(Object sender None,System.EventArgs e None)
public StringBuilder None.Insert(int index None,short value None)
HRESULT None None.GetClientData([out] WTS_CLIENT_DATA *pClientData)
Rectangle None None.GetBounds(DesignerRegion region None)
HRESULT None None.GetStreamActiveState([out] BOOL *lpfActive)
HRESULT None None.GetDirectSoundInterface([out] LPDIRECTSOUND *lplpds)
protected void None.OnRowPostPaint(DataGridViewRowPostPaintEventArgs e None)
public void None.AddAnnuallyBoldedDate(DateTime date None)
DWORD None virtdisk.AttachVirtualDisk(_In_ HANDLE VirtualDiskHandle,_In_opt_ PSECURITY_DESCRIPTOR SecurityDescriptor,_In_ ATTACH_VIRTUAL_DISK_FLAG Flags,_In_ ULONG ProviderSpecificFlags,_In_opt_ PATTACH_VIRTUAL_DISK_PARAMETERS Parameters,_In_opt_ LPOVERLAPPED Overlapped)
HDESK WINAPI user32.GetThreadDesktop(_In_ DWORD dwThreadId)
private void None.UpdateRecords(Object source None,System.EventArgs e None)
public void None.OnInit(EventArgs e None)
protected void None.PreFilterProperties(IDictionary properties None)
protected void None.OnParentBackColorChanged(EventArgs e None)
public Control None.GetNextControl(Control ctl None,boolean forward None)
DWORD None mpr.WNetGetLastError(_Out_ LPDWORD lpError,_Out_ LPTSTR lpErrorBuf,_In_ DWORD nErrorBufSize,_Out_ LPTSTR lpNameBuf,_In_ DWORD nNameBufSize)
DWORD None mpr.WNetGetLastErrorW(_Out_ LPDWORD lpError,_Out_ LPTSTR lpErrorBuf,_In_ DWORD nErrorBufSize,_Out_ LPTSTR lpNameBuf,_In_ DWORD nNameBufSize)
DWORD None mpr.WNetGetLastErrorA(_Out_ LPDWORD lpError,_Out_ LPTSTR lpErrorBuf,_In_ DWORD nErrorBufSize,_Out_ LPTSTR lpNameBuf,_In_ DWORD nNameBufSize)
public DateTime None.AddMinutes(DateTime time None,int minutes None)
HRESULT None None.SetTime(REFERENCE_TIME *pTimeStart None,REFERENCE_TIME *pTimeEnd None)
LONG WINAPI tapi32.phoneConfigDialog(DWORD dwDeviceID None,HWND hwndOwner None,LPCSTR lpszDeviceClass None)
LONG WINAPI tapi32.phoneConfigDialogW(DWORD dwDeviceID None,HWND hwndOwner None,LPCSTR lpszDeviceClass None)
LONG WINAPI tapi32.phoneConfigDialogA(DWORD dwDeviceID None,HWND hwndOwner None,LPCSTR lpszDeviceClass None)
HRESULT None None.get_CachedLocalizedControlType([out None None,retval] BSTR *retVal)
BOOL WINAPI cryptui.CryptUIDlgViewCertificate(_In_ PCCRYPTUI_VIEWCERTIFICATE_STRUCTW pCertViewInfo,_Out_ BOOL *pfPropertiesChanged)
BOOL WINAPI cryptui.CryptUIDlgViewCertificateW(_In_ PCCRYPTUI_VIEWCERTIFICATE_STRUCTW pCertViewInfo,_Out_ BOOL *pfPropertiesChanged)
BOOL WINAPI cryptui.CryptUIDlgViewCertificateA(_In_ PCCRYPTUI_VIEWCERTIFICATE_STRUCTW pCertViewInfo,_Out_ BOOL *pfPropertiesChanged)
protected void None.OnClick(EventArgs e None)
protected void None.OnStyleChanged(EventArgs e None)
protected void None.OnPreviewMouseWheel(MouseWheelEventArgs e None)
public int None.GetDayOfYear(DateTime time None)
protected void None.InitializePager(FormViewRow row None,PagedDataSource pagedDataSource None)
protected void None.RaiseMouseWheel(MouseEventArgs e None)
public String None.ToString(String format None,IFormatProvider provider None)
uint32 None dmwmibridgeprov.RemovePackageMethod([in] string param)
HRESULT None None.GetCurrentTimeFormat([out] GUID *pguidTimeFormat,[out] MP_TIMEDATA *pTimeData)
HRESULT None None.IntToUInt8(_In_ INT iOperand,_Out_ UINT8 *pui8Result)
private void None.button2_Click(System.Object sender None,System.EventArgs e None)
public None None.SelectedIndexCollection(ListBox owner None)
HRESULT None wuapi.UnregisterServiceWithAU(BSTR serviceID None)
private void None.Page_Init(Object sender None,EventArgs e None)
public DragDropEffects None.DoDragDrop(Object data None,DragDropEffects allowedEffects None)
public void None.Merge(DataTable table None,boolean preserveChanges None,MissingSchemaAction missingSchemaAction None)
protected void None.OnItemInserted(FormViewInsertedEventArgs e None)
public None None.DateTime(long ticks None,DateTimeKind kind None)
private void None.PrintCell(Object sender None,MouseEventArgs e None)
protected void None.TreeView1_SelectedNodeChanged(object sender None,EventArgs e None)
public boolean None.Equals(StringBuilder sb None)
HRESULT None None.GetCurrentSubpicture([out] ULONG *pulStreamsAvailable,[out] ULONG *pulCurrentStream,[out] BOOL *pbIsDisabled)
private void None.ClearClicked(Object sender None,System.EventArgs e None)
protected void None.OnItemContainerStyleSelectorChanged(StyleSelector oldItemContainerStyleSelector None,StyleSelector newItemContainerStyleSelector None)
HRESULT None None.PrepareForRender(D2D1_CHANGE_TYPE changeType None)
public Object None.ConvertFromString(String text None)
public int None.IOControl(IOControlCode ioControlCode None,byte[] optionInValue None,byte[] optionOutValue None)
public IPermission None.Intersect(IPermission target None)
private void None.listBox1_DrawItem(Object sender None,System.Windows.Forms.DrawItemEventArgs e None)
LPCWSTR WINAPI crypt32.CryptFindLocalizedName(_In_ LPCWSTR pwszCryptName)
HLOCAL WINAPI kernel32.LocalFree(_In_ HLOCAL hMem)
private void None.comboBox1_SelectedIndexChanged(Object sender None,System.EventArgs e None)
int None None.main(void None None)
protected Array None.ShrinkArray(Array a None,int length None,Type elementType None,boolean isNullable None)
double None None.atof(const char *str)
void None None.Page_Load(Object sender None,EventArgs e None)
public boolean None.Equals(Object o None)
public void None.InsertRange(int rowIndex None,DataGridViewRow[] dataGridViewRows None)
public None None.StreamReader(String path None,Encoding encoding None,boolean detectEncodingFromByteOrderMarks None)
HRESULT WINAPI winbio.WinBioEnumServiceProviders(_In_ WINBIO_BIOMETRIC_TYPE Factor,_Out_ WINBIO_BSP_SCHEMA **BspSchemaArray,_Out_ SIZE_T *BspCount)
public boolean None.Equals(Object obj None)
private void None.OnRecordDeleting(Object source None,SqlDataSourceCommandEventArgs e None)
private void None.whatIsChecked_Click(Object sender None,System.EventArgs e None)
protected void None.OnUpdateCommand(DataListCommandEventArgs e None)
protected void None.OnIsStylusDirectlyOverChanged(DependencyPropertyChangedEventArgs e None)
HRESULT None None.LongLongToUShort(_In_ LONGLONG llOperand,_Out_ USHORT *pusResult)
void None None.UploadProgressCallback(Object* /*sender*/ None,UploadProgressEventArgs* e None)
int None None.IndexOf(Object value None)
public boolean None.Equals(Object compareTo None)
protected void None.OnMouseLeave(EventArgs e None)
HRESULT None None.GetLicenseConnection([out] IWTSProtocolLicenseConnection **ppLicenseConnection)
protected None None.TraceListener(String name None)
public PaintValueEventArgs None.CreatePaintValueEventArgs(System.ComponentModel. ITypeDescriptorContext context,Object value None,Graphics graphics None,Rectangle bounds None)
protected void None.Reset(ConfigurationElement parentElement None)
HRESULT WINAPI kernel32.WerRegisterRuntimeExceptionModule(_In_ PCWSTR pwszOutOfProcessCallbackDll,_In_opt_ PVOID pContext)
HRESULT None None.GetInputCurrentType(DWORD dwInputStreamIndex None,[out] DMO_MEDIA_TYPE *pmt)
BOOL WINAPI cryptdlg.CertSelectCertificate(_Inout_ PCERT_SELECT_STRUCT_W pCertSelectInfo)
public boolean None.Contains(Object item None)
HRESULT WDSMCSAPI wdsmc.WdsTransportServerTraceV(_In_ HANDLE hProvider,_In_ WDS_MC_SEVERITY Severity,_In_ LPCWSTR pwszFormat,_In_ va_list Params)
private void None.OnDelete(Object sender None,System.EventArgs e None)
public void None.Write(String value None)
public void None.RemoveAt(int index None)
BOOL None bthprops.BluetoothSelectDevicesFree(BLUETOOTH_SELECT_DEVICE_PARAMS *pbtsdp None)
public String None.GetString(String name None)
protected void None.OnPreviewGotKeyboardFocus(KeyboardFocusChangedEventArgs e None)
public WebResponse None.EndGetResponse(IAsyncResult asyncResult None)
private void None.PrintCurrentListName(DataGrid myDataGrid None)
public None None.StreamWriter(String path None,boolean append None)
Sub None None.ValidationFunctionName(source None None,arguments None None)
protected boolean None.ProcessDialogKey(Keys keyData None)
HRESULT WINAPI faultrep.WerReportHang(_In_ HWND hwndHungWindow,_In_opt_ PCWSTR wszHungApplicationName)
HRESULT WDSMCSAPI wdsmc.WdsTransportServerRegisterCallback(_In_ HANDLE hProvider,_In_ TRANSPORTPROVIDER_CALLBACK_ID CallbackId,_In_ PVOID pfnCallback)
protected Array None.ShrinkArray(Array a None,int length None,Type elementType None,boolean isNullable None)
private void None.comboBox1_SelectedIndexChanged(Object sender None,System.EventArgs e None)
public int None.IndexOfValue(TValue value None)
HRESULT None None.GetLicenseConnection([out] IWRdsProtocolLicenseConnection **ppLicenseConnection)
protected int None.Update(DataRow[] dataRows None,DataTableMapping tableMapping None)
protected void None.OnPageIndexChanged(DataGridPageChangedEventArgs e None)
private void None.whatIsChecked_Click(Object sender None,System.EventArgs e None)
SerializableAttribute None None.TypeConverterAttribute(System.Drawing.IconConverter None None)
public int None.IndexOfAny(char[] anyOf None,int startIndex None)
protected void None.SetDesignModeState(IDictionary data None)
public void None.RenderBeginTag(HtmlTextWriter writer None)
public XmlReadMode None.ReadXml(XmlReader reader None)
public int None.GetEra(DateTime time None)
public void None.SetCacheKey(Cache cache None)
DWORD None dhcpsapi.DhcpGetOptionInfoV5(_In_ LPWSTR ServerIpAddress,_In_ DWORD Flags,_In_ DHCP_OPTION_ID OptionID,_In_ LPWSTR ClassName,_In_ LPWSTR VendorName,_Out_ LPDHCP_OPTION *OptionInfo)
public void None.Write(byte[] array None,int offset None,int count None)
protected void None.Render(HtmlTextWriter writer None)
public void None.Fail(String message None)
protected void None.OnCellValueNeeded(DataGridViewCellValueEventArgs e None)
HRESULT None propsys.PropVariantToDouble(_In_ REFPROPVARIANT propvarIn,_Out_ DOUBLE *pdblRet)
private void None.myButton_Click(Object sender None,System.EventArgs e None)
private void None.OnRecordDeleting(Object source None,SqlDataSourceCommandEventArgs e None)
public void None.AppendLiteralString(String s None)
boolean None None.LoadPostData(String postDataKey None,NameValueCollection postCollection None)
DWORD None bthprops.BluetoothAuthenticateMultipleDevices(HWND hwndParent None,HANDLE hRadio None,DWORD cDevices None,BLUETOOTH_DEVICE_INFO *pbtdi None)
protected void None.BaseRemove(Object key None)
HRESULT None None.GetURL([out] PWSTR *ppszURL)
public boolean None.Contains(Installer value None)
protected void None.Serialize(SerializationInfo info None,StreamingContext context None)
HRESULT None None.PtrdiffTToDWordPtr(_In_ ptrdiff_t cbOperand,_Out_ DWORD_PTR *pdwResult)
BOOL WINAPI None.CertStoreProvDeleteCTL(_In_ HCERTSTOREPROV hStoreProv,_In_ PCCTL_CONTEXT pCtlContext,_In_ DWORD dwFlags)
public None None.FormViewUpdatedEventArgs(int affectedRows None,Exception e None)
private void None.Button_Click(object sender None,EventArgs e None)
protected boolean None.SerializeElement(XmlWriter writer None,boolean serializeCollectionKey None)
uint32 None None.SetPowerState([in] uint16 PowerState,[in] datetime Time)
protected void None.OnVisibleChanged(EventArgs e None)
protected IDataParameter None.GetBatchedParameter(int commandIdentifier None,int parameterIndex None)
Sub None None.ValidationFunctionName(source None None,arguments None None)
private void None.currencyTextBox_TextChanged(Object sender None,EventArgs e None)
int None None.main(void None None)
HRESULT None shell32.GetId([out] KNOWNFOLDERID *pkfid)
HRESULT None None.GetPlayerParentalLevel([out] ULONG *pulParentalLevel,[out] BYTE pulCountryCode[2])
protected void None.SetAuditRule(AuditRule rule None)
private void None.button1_Click(Object sender None,EventArgs e None)
protected void None.OnControlRemoved(ControlEventArgs e None)
HCERT_SERVER_OCSP_RESPONSE WINAPI crypt32.CertOpenServerOcspResponse(_In_ PCCERT_CHAIN_CONTEXT pChainContext,_In_ DWORD dwFlags,_Reserved_ LPVOID pvReserved)
protected void None.OnPreviewDragOver(DragEventArgs e None)
HRESULT None None.ULongToLong(_In_ ULONG ulOperand,_Out_ LONG *plResult)
function None None.GetQuantity(productID None None,elemToUpdate None None,productLabelElem None None,buttonElem None None)
public void None.AddValue(String name None,int value None)
protected None None.ArgumentOutOfRangeException(SerializationInfo info None,StreamingContext context None)
public None None.SelectedIndexCollection(ListBox owner None)
protected LeftRightAlignment None.RtlTranslateLeftRight(LeftRightAlignment align None)
public DataGridViewElementStates None.GetInheritedState(int rowIndex None)
public XmlReadMode None.ReadXml(XmlReader reader None)
void None None.Add(Object key None,Object value None)
public None None.StreamingContext(StreamingContextStates state None)
private void None.On_Inserting(Object sender None,SqlDataSourceCommandEventArgs e None)
public XmlElement None.GetElementFromRow(DataRow r None)
public DateTime None.AddMinutes(DateTime time None,int minutes None)
protected void None.OnLoad(EventArgs e None)
protected void None.OnUpdated(ObjectDataSourceStatusEventArgs e None)
protected void None.OnScroll(ScrollEventArgs se None)
HRESULT None None.get_CurrentIsKeyboardFocusable([out None None,retval] BOOL *retVal)
public void None.Uninstall(IDictionary savedState None)
private void None.On_Click(Object source None,System.EventArgs e None)
protected void None.OnIsStylusCapturedChanged(DependencyPropertyChangedEventArgs e None)
function None None.GetQuantity(productID None None,elemToUpdate None None,productLabelElem None None,buttonElem None None)
public void None.GetObjectData(SerializationInfo info None,StreamingContext context None)
HRESULT None None.SetNotify(IMemAllocatorNotifyCallbackTemp *pNotify None)
private void None.treeView1_KeyDown(Object sender None,KeyEventArgs e None)
HRESULT None mf.MFCreateSimpleTypeHandler(_Out_ IMFMediaTypeHandler **ppHandler)
public Stream None.EndGetRequestStream(IAsyncResult asyncResult None)
public int None.Fill(DataSet dataSet None,int startRecord None,int maxRecords None,String srcTable None)
protected void None.ObjectDataSource1_Filtering(Object sender None,ObjectDataSourceFilteringEventArgs e None)
Sub None None.ValidationFunctionName(source None None,arguments None None)
HRESULT None None.GetCurrentLocation([out] DVD_PLAYBACK_LOCATION2 *pLocation)
HRESULT None elscore.MappingGetServices(_In_opt_ PMAPPING_ENUM_OPTIONS pOptions,_Out_ PMAPPING_SERVICE_INFO *prgServices,_Out_ DWORD *pdwServicesCount)
public void None.DrawItemBackground(ToolStripItemRenderEventArgs e None)
protected void None.OnMouseUp(MouseEventArgs e None)
public void None.Remove(DataGridViewRow dataGridViewRow None)
public DateTime None.AddMinutes(DateTime time None,int minutes None)
Object None None.GetFormat(Type formatType None)
public None None.XmlSerializer(Type type None,String defaultNamespace None)
private void None.AddShadow(PaintEventArgs e None)
public void None.WriteLine(Object value None)
protected void None.Reset(ConfigurationElement parentElement None)
protected void None.OnTextChanged(EventArgs e None)
private void None.ShowPropertiesOfSlateBlue(PaintEventArgs e None)
protected void None.Deserialize(SerializationInfo info None,StreamingContext context None)
public void None.Merge(DataTable table None,boolean preserveChanges None,MissingSchemaAction missingSchemaAction None)
protected void None.OnMouseHover(EventArgs e None)
BOOL WINAPI crypt32.CertSerializeCertificateStoreElement(_In_ PCCERT_CONTEXT pCertContext,_In_ DWORD dwFlags,_Out_ BYTE *pbElement,_Inout_ DWORD *pcbElement)
public void None.Write(Object value None)
HRESULT None None.UIntPtrToUShort(_In_ UINT_PTR uOperand,_Out_ USHORT *pusResult)
public ToolStripItem None.Add(String text None)
private void None.button1_Click(Object sender None,EventArgs e None)
public void None.Write(String documentPath None)
protected void None.OnPrint(PaintEventArgs e None)
Sub None None.ValidationFunctionName(source None None,arguments None None)
protected void None.OnCellValueNeeded(DataGridViewCellValueEventArgs e None)
protected void None.OnParentBackColorChanged(EventArgs e None)
protected void None.OnMouseLeftButtonUp(MouseButtonEventArgs e None)
protected void None.OnRowCancelingEdit(GridViewCancelEditEventArgs e None)
function None None.GetQuantity(productID None None,elemToUpdate None None,productLabelElem None None,buttonElem None None)
public None None.ArgumentOutOfRangeException(String paramName None,Object actualValue None,String message None)
protected void None.BaseRemove(Object key None)
void None None.Page_Load(Object sender None,EventArgs e None)
public StringBuilder None.Insert(int index None,short value None)
protected void None.OnLoggingOut(LoginCancelEventArgs e None)
protected void None.OnQueryContinueDrag(QueryContinueDragEventArgs qcdevent None)
public void None.AddRange(TabPage[] pages None)
HRESULT None None.GetState(DWORD dwMilliSecsTimeout None,FILTER_STATE *State None)
private void None.myButton_Click(Object sender None,System.EventArgs e None)
protected None None.RuleEvaluationException(SerializationInfo serializeInfo None,StreamingContext context None)
private void None.myButton_Click(Object sender None,System.EventArgs e None)
protected void None.OnDeleteCommand(DataGridCommandEventArgs e None)
public void None.ExtractValuesFromCell(IOrderedDictionary dictionary None,DataControlFieldCell cell None,DataControlRowState rowState None,boolean includeReadOnly None)
LONG WINAPI tapi32.phoneGetIcon(DWORD dwDeviceID None,LPCSTR lpszDeviceClass None,LPHICON lphIcon None)
LONG WINAPI tapi32.phoneGetIconW(DWORD dwDeviceID None,LPCSTR lpszDeviceClass None,LPHICON lphIcon None)
LONG WINAPI tapi32.phoneGetIconA(DWORD dwDeviceID None,LPCSTR lpszDeviceClass None,LPHICON lphIcon None)
public boolean None.MoveToFollowing(XPathNodeType type None)
public None None.NamedPermissionSet(String name None,PermissionState state None)
HRESULT None None.IntToShort(_In_ INT iOperand,_Out_ SHORT *psResult)
BOOL None bthprops.BluetoothDisplayDeviceProperties(HWND hwndParent None,BLUETOOTH_DEVICE_INFO *pbtdi None)
public boolean None.MoveToFollowing(XPathNodeType type None)
protected void None.OnHandleCreated(EventArgs e None)
protected Object None.Evaluate(HttpContext context None,Control control None)
protected void None.RenderContents(HtmlTextWriter writer None)
function None None.GetQuantity(productID None None,elemToUpdate None None,productLabelElem None None,buttonElem None None)
public int None.IndexOf(String source None,char value None,int startIndex None,int count None)
protected void None.OnSetComplete(int index None,Object oldValue None,Object newValue None)
function None None.GetQuantity(productID None None,elemToUpdate None None,productLabelElem None None,buttonElem None None)
HRESULT None None.QueryId(LPWSTR *Id None)
HRESULT WINAPI None.StorageAdapterPipelineInit(_Inout_ PWINBIO_PIPELINE Pipeline)
HRESULT None wuapi.get_UpdateIdentity([out] IUpdateIdentity **retval)
HRESULT None None.ProcessInput(DWORD dwInputStreamIndex None,IMediaBuffer *pBuffer None,DWORD dwFlags None,REFERENCE_TIME rtTimestamp None,REFERENCE_TIME rtTimelength None)
HRESULT None None.GetVMGAttributes([out] DVD_MenuAttributes *pATR)
protected void None.OnSortCommand(DataGridSortCommandEventArgs e None)
public void None.SetAccessControl(SemaphoreSecurity semaphoreSecurity None)
HRESULT None None.GetOutputStreamInfo(DWORD dwOutputStreamIndex None,[out] DWORD *pdwFlags)
boolean None None.Equals(T other None)
function None None.GetQuantity(productID None None,elemToUpdate None None,productLabelElem None None,buttonElem None None)
public boolean None.MoveToAttribute(String localName None,String namespaceURI None)
private void None.button1_Click(System.Object sender None,System.EventArgs e None)
HRESULT None None.LongLongToULongLong(_In_ LONGLONG llOperand,_Out_ ULONGLONG *pullResult)
protected AccessibleObject None.GetAccessibilityObjectById(int objectId None)
HRESULT None None.SetGraph(ID2D1TransformGraph *transformGraph None)
protected void None.OnUpdating(SqlDataSourceCommandEventArgs e None)
public None None.ConnectionProviderAttribute(String displayName None)
public CustomRecognizerNode None.CreateCustomRecognizer(Guid inkRecognizerId None)
HRESULT None None.UIntPtrToShort(_In_ UINT_PTR uOperand,_Out_ SHORT *psResult)
public None None.Mutex(boolean initiallyOwned None)
private void None.treeView1_KeyDown(Object sender None,KeyEventArgs e None)
public XmlElement None.CreateElement(String prefix None,String localName None,String namespaceURI None)
DWORD None dhcpsapi.DhcpServerBackupDatabase(_In_ LPWSTR ServerIpAddress,_In_ LPWSTR Path)
HRESULT WINAPI None.StorageAdapterOpenDatabase(_Inout_ PWINBIO_PIPELINE Pipeline,_In_ PWINBIO_UUID DatabaseId,_In_ LPCWSTR FilePath,_In_ LPCWSTR ConnectString)
protected void None.button1_Click(Object sender None,System.EventArgs e None)
HRESULT None None.GetHttpStatus([out] DWORD *pdwHttpStatus)
protected void None.OnBeforeLabelEdit(LabelEditEventArgs e None)
function None None.GetQuantity(productID None None,elemToUpdate None None,productLabelElem None None,buttonElem None None)
HRESULT None None.UIntPtrToLongPtr(_In_ UINT_PTR uOperand,_Out_ LONG_PTR *plResult)
HRESULT None None.IntToUShort(_In_ INT iOperand,_Out_ USHORT *pusResult)
public void None.Add(Control child None)
protected void None.OnItemContainerStyleSelectorChanged(StyleSelector oldItemContainerStyleSelector None,StyleSelector newItemContainerStyleSelector None)
IFsrmPipelineModuleDefinition None None.CreateModuleDefinition(_FsrmPipelineModuleType ModuleType None)
protected void None.LoadControlState(Object savedState None)
protected void None.OnDataSourceChanged(EventArgs e None)
protected void None.RenderHeader(HtmlTextWriter writer None)
private void None.Button_HideLabel(Object sender None,EventArgs e None)
protected void None.OnPrint(PaintEventArgs e None)
protected void None.Unmerge(ConfigurationElement sourceElement None,ConfigurationElement parentElement None,ConfigurationSaveMode saveMode None)
public void None.SetAccessControl(EventWaitHandleSecurity eventSecurity None)
public XmlReadMode None.ReadXml(TextReader reader None)
protected void None.RaisePostBackEvent(String eventArgument None)
protected Array None.ShrinkArray(Array a None,int length None,Type elementType None,boolean isNullable None)
protected void None.OnScroll(ScrollEventArgs se None)
public void None.ScrollControlIntoView(Control activeControl None)
HRESULT None winbio.EnumEnrollments( None None)
public int None.IndexOf(String source None,char value None,int startIndex None)
public void None.ConvertDoubleString(double doubleVal None)
BOOL None cabinet.CloseCompressor(_In_ COMPRESSOR_HANDLE CompressorHandle)
protected void None.OnPreRender(EventArgs e None)
HRESULT None None.ULongLongToSSIZET(_In_ ULONGLONG ullOperand,_Out_ SSIZE_T *pcbResult)
public void None.SetSelectionRange(DateTime date1 None,DateTime date2 None)
EventDescriptorCollection None None.GetEvents(Object component None)
public Object None.Compute(String expression None,String filter None)
protected void None.OnSet(int index None,Object oldValue None,Object newValue None)
protected void None.OnQueryContinueDrag(QueryContinueDragEventArgs qcdevent None)
LONGLONG None None.AlignUp(LONGLONG ll None,LONG lAlign None)
public int None.IndexOf(String source None,char value None,int startIndex None,int count None)
private void None.Page_Load(Object sender None,System.EventArgs e None)
double None None.atof(const char *str)
public void None.FromXml(SecurityElement et None)
protected void None.OnLayoutStyleChanged(EventArgs e None)
private void None.PrintCurrentListName(DataGrid myDataGrid None)
DWORD None mpr.WNetUseConnection(_In_ HWND hwndOwner,_In_ LPNETRESOURCE lpNetResource,_In_ LPCTSTR lpPassword,_In_ LPCTSTR lpUserID,_In_ DWORD dwFlags,_Out_ LPTSTR lpAccessName,_Inout_ LPDWORD lpBufferSize,_Out_ LPDWORD lpResult)
DWORD None mpr.WNetUseConnectionW(_In_ HWND hwndOwner,_In_ LPNETRESOURCE lpNetResource,_In_ LPCTSTR lpPassword,_In_ LPCTSTR lpUserID,_In_ DWORD dwFlags,_Out_ LPTSTR lpAccessName,_Inout_ LPDWORD lpBufferSize,_Out_ LPDWORD lpResult)
DWORD None mpr.WNetUseConnectionA(_In_ HWND hwndOwner,_In_ LPNETRESOURCE lpNetResource,_In_ LPCTSTR lpPassword,_In_ LPCTSTR lpUserID,_In_ DWORD dwFlags,_Out_ LPTSTR lpAccessName,_Inout_ LPDWORD lpBufferSize,_Out_ LPDWORD lpResult)
private void None.button1_Click(System.Object sender None,System.EventArgs e None)
protected void None.OnUpdating(SqlDataSourceCommandEventArgs e None)
private void None.BindingManagerBase_CurrentChanged(Object sender None,EventArgs e None)
HRESULT None None.GetAspectRatioMode([out] DWORD *pdwAspectRatioMode)
ULONG None httpapi.HttpInitialize(_In_ HTTPAPI_VERSION Version,_In_ ULONG Flags,_Reserved_ PVOID pReserved)
private void None.button1_Click(Object sender None,EventArgs e None)
uint32 None cimwin32.SetPowerState([in] uint16 PowerState,[in] datetime Time)
public IAsyncResult None.BeginGetResponse(AsyncCallback callback None,Object state None)
public Size None.GetPreferredSize(Size proposedSize None)
protected void None.OnBackgroundColorChanged(EventArgs e None)
protected void None.SetItemDataPath(MenuItem node None,String dataPath None)
private void None.showCheckedNodesButton_Click(Object sender None,EventArgs e None)
public StateItem None.Add(String key None,Object value None)
HRESULT None elscore.MappingRecognizeText(_In_ PMAPPING_SERVICE_INFO pServiceInfo,_In_ LPCWSTR pszText,_In_ DWORD dwLength,_In_ DWORD dwIndex,_In_opt_ PMAPPING_OPTIONS pOptions,_Inout_ PMAPPING_PROPERTY_BAG pBag)
public void None.AddStyleAttribute(HtmlTextWriterStyle key None,String value None)
Object None None.GetFormat(Type formatType None)
public Stream None.EndGetRequestStream(IAsyncResult asyncResult None)
HRESULT WINAPI None.StorageAdapterClearContext(_Inout_ PWINBIO_PIPELINE Pipeline)
SerializableAttribute None None.TypeConverterAttribute(System.Drawing.Printing.MarginsConverter None None)
protected boolean None.IsStyleAttributeDefined(HtmlTextWriterStyle key None)
private void None.OnRecordDeleting(Object source None,SqlDataSourceCommandEventArgs e None)
protected void None.OnTabStopChanged(EventArgs e None)
public void None.CloseWebPart(WebPart webPart None)
HRESULT None None.Receive(IMediaSample *pSample None)
BOOL WINAPI crypt32.CryptMsgVerifyCountersignatureEncoded(_In_ HCRYPTPROV_LEGACY hCryptProv,_In_ DWORD dwEncodingType,_In_ PBYTE pbSignerInfo,_In_ DWORD cbSignerInfo,_In_ PBYTE pbSignerInfoCountersignature,_In_ DWORD cbSignerInfoCountersignature,_In_ PCERT_INFO pciCountersigner)
protected void None.BaseRemove(Object key None)
function None None.GetQuantity(productID None None,elemToUpdate None None,productLabelElem None None,buttonElem None None)
private void None.addGrandButton_Click(Object sender None,System.EventArgs e None)
protected void None.SetPropertyValue(ConfigurationProperty prop None,Object value None,boolean ignoreLocks None)
private void None.MyForm_Layout(Object sender None,System.Windows.Forms.LayoutEventArgs e None)
DWORD DHCP_API_FUNCTION dhcpsapi.DhcpV4GetFreeIPAddress(_In_opt_ LPWSTR ServerIpAddress,_In_ DHCP_IP_ADDRESS ScopeId,_In_ DHCP_IP_ADDRESS startIP,_In_ DHCP_IP_ADDRESS endIP,_In_ DWORD numFreeAddrReq,_Out_ LPDHCP_IP_ARRAY *IPAddrList)
uint32 None dnsserverpsprovider.AddByZone([in] boolean PassThru,[in] string ComputerName,[in] string ZoneName,[in] string ZoneScope,[in] string Action,[in] string ClientSubnet,[in] string Condition,[in] string Fqdn,[in] string TimeOfDay,[in] string TransportProtocol,[in] string InternetProtocol,[in] boolean Disable,[in] string Name,[in] uint32 ProcessingOrder,[in] string QType,[in] string ServerInterfaceIP,[out] DnsServerPolicy cmdletOutput)
void None None.Remove(Object value None)
HRESULT None None.Run(REFERENCE_TIME tStart None)
protected void None.AcceptMethod(Socket listeningSocket None)
protected void None.OnScroll(ScrollEventArgs se None)
protected void None.OnHelpRequested(HelpEventArgs hevent None)
public void None.PurgeAuditRules(IdentityReference identity None)
public XmlElement None.GetElementFromRow(DataRow r None)
private void None.Form1Closing(Object sender None,System.ComponentModel.CancelEventArgs e None)
public void None.Uninstall(IDictionary savedState None)
public void None.AppendLiteralString(String s None)
HRESULT None None.Int64ToSIZET(_In_ INT64 i64Operand,_Out_ SIZE_T *pcbResult)
public void None.ConvertDoubleString(double doubleVal None)
protected void None.SetNativeBrush(IntPtr brush None)
SerializableAttribute None None.TypeConverterAttribute(System.Windows.Forms.ListViewSubItemConverter None None)
private void None.Page_Init(Object sender None,EventArgs e None)
public boolean None.EndsWith(String value None,boolean ignoreCase None,CultureInfo culture None)
DWORD None bthprops.BluetoothGetDeviceInfo(HANDLE hRadio None,BLUETOOTH_DEVICE_INFO *pbtdi None)
private void None.button1_Click(System.Object sender None,System.EventArgs e None)
public XmlNode None.SelectSingleNode(String xpath None)
public DragDropEffects None.DoDragDrop(Object data None,DragDropEffects allowedEffects None)
protected void None.OnRenderSizeChanged(SizeChangedInfo sizeInfo None)
private void None.ShowPropertiesOfSlateBlue(PaintEventArgs e None)
protected void None.RaisePaintEvent(Object key None,PaintEventArgs e None)
DWORD WINAPI dhcpsapi.DhcpCreateClassV6(_In_ LPWSTR ServerIpAddress,_In_ DWORD ReservedMustBeZero,_In_ LPDHCP_CLASS_INFO_V6 ClassInfo)
protected void None.OnUpdating(ObjectDataSourceMethodEventArgs e None)
HRESULT WINAPI None.StorageAdapterQueryByContent(_Inout_ PWINBIO_PIPELINE Pipeline,_In_ WINBIO_BIOMETRIC_SUBTYPE SubFactor,_In_ ULONG IndexVector[],_In_ SIZE_T IndexElementCount)
public void None.Write(Object o None)
protected void None.SetItemDataPath(MenuItem node None,String dataPath None)
private void None.treeView1_KeyDown(Object sender None,KeyEventArgs e None)
public void None.RegisterClientScriptBlock(Type type None,String key None,String script None)
protected void None.Render(HtmlTextWriter writer None)
protected void None.OnDragLeave(EventArgs e None)
protected void None.OnLocationChanged(EventArgs e None)
HDESK WINAPI user32.GetThreadDesktop(_In_ DWORD dwThreadId)
public void None.Add(String prefix None,String ns None)
void None None.Remove(Object value None)
private void None.OnRecordDeleting(Object source None,SqlDataSourceCommandEventArgs e None)
public int None.IndexOf(String source None,String value None)
public void None.AppendLiteralString(String s None)
public void None.ConvertDoubleString(double doubleVal None)
private void None.whatIsChecked_Click(Object sender None,System.EventArgs e None)
HRESULT None None.ULongToByte(_In_ ULONG ulOperand,_Out_ BYTE *pbResult)
public DragDropEffects None.DoDragDrop(Object data None,DragDropEffects allowedEffects None)
DWORD None bthprops.BluetoothEnumerateInstalledServices(HANDLE hRadio None,BLUETOOTH_DEVICE_INFO *pbtdi None,DWORD *pcServices None,GUID *pGuidServices None)
public boolean None.Equals(Object compareTo None)
assembly None None.name(optional None None)
DWORD WINAPI virtdisk.EnumerateVirtualDiskMetadata(_In_ HANDLE VirtualDiskHandle,_Inout_ PULONG NumberOfItems,_Out_ GUID *Items)
private void None.On_Inserting(Object sender None,SqlDataSourceCommandEventArgs e None)
HRESULT None wuapi.get_ServerSelection([out] ServerSelection *retval)
private void None.listDragTarget_DragLeave(Object sender None,System.EventArgs e None)
public None None.Bitmap(String filename None)
protected boolean None.SerializeToXmlElement(XmlWriter writer None,String elementName None)
HRESULT WINAPI winbio.WinBioVerify(_In_ WINBIO_SESSION_HANDLE SessionHandle,_In_ WINBIO_IDENTITY *Identity,_In_ WINBIO_BIOMETRIC_SUBTYPE SubFactor,_Out_opt_ WINBIO_UNIT_ID *UnitId,_Out_opt_ BOOLEAN *Match,_Out_opt_ WINBIO_REJECT_DETAIL *RejectDetail)
protected void None.OnPageIndexChanged(EventArgs e None)
HRESULT WINAPI winbio.WinBioAsyncOpenSession(_In_ WINBIO_BIOMETRIC_TYPE Factor,_In_ WINBIO_POOL_TYPE PoolType,_In_ WINBIO_SESSION_FLAGS Flags,_In_opt_ WINBIO_UNIT_ID *UnitArray,_In_opt_ SIZE_T UnitCount,_In_opt_ GUID *DatabaseId,_In_ WINBIO_ASYNC_NOTIFICATION_METHOD NotificationMethod,_In_opt_ HWND TargetWindow,_In_opt_ UINT MessageCode,_In_opt_ PWINBIO_ASYNC_COMPLETION_CALLBACK CallbackRoutine,_In_opt_ PVOID UserData,_In_ BOOL AsynchronousOpen,_Out_opt_ WINBIO_SESSION_HANDLE *SessionHandle)
HRESULT WINAPI winbio.WinBioAsyncEnumDatabases(_In_ WINBIO_FRAMEWORK_HANDLE FrameworkHandle,_In_ WINBIO_BIOMETRIC_TYPE Factor)
protected void None.Unmerge(ConfigurationElement sourceElement None,ConfigurationElement parentElement None,ConfigurationSaveMode saveMode None)
public String None.GetString(String name None)
protected void None.OnCellValueNeeded(DataGridViewCellValueEventArgs e None)
BOOL WINAPI kernel32.CreateProcess(_In_opt_ LPCTSTR lpApplicationName,_Inout_opt_ LPTSTR lpCommandLine,_In_opt_ LPSECURITY_ATTRIBUTES lpProcessAttributes,_In_opt_ LPSECURITY_ATTRIBUTES lpThreadAttributes,_In_ BOOL bInheritHandles,_In_ DWORD dwCreationFlags,_In_opt_ LPVOID lpEnvironment,_In_opt_ LPCTSTR lpCurrentDirectory,_In_ LPSTARTUPINFO lpStartupInfo,_Out_ LPPROCESS_INFORMATION lpProcessInformation)
BOOL WINAPI kernel32.CreateProcessW(_In_opt_ LPCTSTR lpApplicationName,_Inout_opt_ LPTSTR lpCommandLine,_In_opt_ LPSECURITY_ATTRIBUTES lpProcessAttributes,_In_opt_ LPSECURITY_ATTRIBUTES lpThreadAttributes,_In_ BOOL bInheritHandles,_In_ DWORD dwCreationFlags,_In_opt_ LPVOID lpEnvironment,_In_opt_ LPCTSTR lpCurrentDirectory,_In_ LPSTARTUPINFO lpStartupInfo,_Out_ LPPROCESS_INFORMATION lpProcessInformation)
BOOL WINAPI kernel32.CreateProcessA(_In_opt_ LPCTSTR lpApplicationName,_Inout_opt_ LPTSTR lpCommandLine,_In_opt_ LPSECURITY_ATTRIBUTES lpProcessAttributes,_In_opt_ LPSECURITY_ATTRIBUTES lpThreadAttributes,_In_ BOOL bInheritHandles,_In_ DWORD dwCreationFlags,_In_opt_ LPVOID lpEnvironment,_In_opt_ LPCTSTR lpCurrentDirectory,_In_ LPSTARTUPINFO lpStartupInfo,_Out_ LPPROCESS_INFORMATION lpProcessInformation)
protected void None.PreFilterProperties(IDictionary properties None)
public boolean None.Equals(Object obj None)
protected void None.AddAttributesToRender(HtmlTextWriter writer None)
protected void None.LinqDataSource_Updating(object sender None,LinqDataSourceUpdateEventArgs e None)
protected int None.ExecuteDelete(IDictionary keys None,IDictionary oldValues None)
public int None.LastIndexOf(String source None,char value None,int startIndex None)
public void None.AddRange(TabPage[] pages None)
public IEnumerable None.Select(DataSourceSelectArguments arguments None)
private void None.button3_Click(Object sender None,System.EventArgs e None)
HRESULT None None.UIntPtrToLongLong(_In_ UINT_PTR uOperand,_Out_ LONGLONG *pllResult)
public void None.AddRange(Object[] items None)
HRESULT None None.Seek(REFERENCE_TIME tStart None,REFERENCE_TIME tStop None)
protected void None.OnRowPostPaint(DataGridViewRowPostPaintEventArgs e None)
public None None.PrintSystemException(int errorCode None,String message None,Exception innerException None)
private void None.treeView1_KeyDown(Object sender None,KeyEventArgs e None)
char None None.GetChar(int i None)
public String None.GetString(String name None)
public IInputElement None.InputHitTest(Point point None)
public ListViewSubItem None.GetSubItemAt(int x None,int y None)
public void None.SetTypedValue(Object typedValue None)
public void None.RemoveNamespace(String prefix None,String uri None)
public boolean None.Equals(Object obj None)
public XmlElement None.GetElementFromRow(DataRow r None)
protected void None.OnHandleCreated(EventArgs e None)
protected Object None.Evaluate(HttpContext context None,Control control None)
public int None.Add(Style style None)
protected Size None.SizeFromClientSize(Size clientSize None)
public void None.FillRectangle(Brush brush None,RectangleF rect None)
private void None.treeView1_KeyDown(Object sender None,KeyEventArgs e None)
private void None.button1_Click(System.Object sender None,System.EventArgs e None)
private void None.NorthwindEmployeeInserting(Object source None,ObjectDataSourceMethodEventArgs e None)
public void None.ApplyStyle(Style s None)
public void None.Write(byte[] buffer None,int offset None,int count None)
HRESULT WINAPI wer.WerReportAddFile(_In_ HREPORT hReportHandle,_In_ PCWSTR pwzPath,_In_ WER_FILE_TYPE repFileType,_In_ DWORD dwFileFlags)
private void None.myButton_Click(Object sender None,System.EventArgs e None)
HRESULT None None.ULongSub(_In_ ULONG ulMinuend,_In_ ULONG ulSubtrahend,_Out_ ULONG *pulResult)
HRESULT None taskschd.get_Connected([out] VARIANT_BOOL *pConnected)
HRESULT WINAPI None.StorageAdapterGetCurrentRecord(_Inout_ PWINBIO_PIPELINE Pipeline,_Out_ PWINBIO_STORAGE_RECORD RecordContents)
DWORD WINAPI advapi32.GetNamedSecurityInfo(_In_ LPTSTR pObjectName,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_Out_opt_ PSID *ppsidOwner,_Out_opt_ PSID *ppsidGroup,_Out_opt_ PACL *ppDacl,_Out_opt_ PACL *ppSacl,_Out_opt_ PSECURITY_DESCRIPTOR *ppSecurityDescriptor)
DWORD WINAPI advapi32.GetNamedSecurityInfoW(_In_ LPTSTR pObjectName,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_Out_opt_ PSID *ppsidOwner,_Out_opt_ PSID *ppsidGroup,_Out_opt_ PACL *ppDacl,_Out_opt_ PACL *ppSacl,_Out_opt_ PSECURITY_DESCRIPTOR *ppSecurityDescriptor)
DWORD WINAPI advapi32.GetNamedSecurityInfoA(_In_ LPTSTR pObjectName,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_Out_opt_ PSID *ppsidOwner,_Out_opt_ PSID *ppsidGroup,_Out_opt_ PACL *ppDacl,_Out_opt_ PACL *ppSacl,_Out_opt_ PSECURITY_DESCRIPTOR *ppSecurityDescriptor)
HRESULT None None.ShortToUChar(_In_ SHORT sOperand,_Out_ UCHAR *pch)
public int None.IndexOf(String source None,char value None)
protected void None.OnDataBinding(EventArgs e None)
private void None.InsertShipper(Object source None,System.EventArgs e None)
HRESULT None None.Int8ToULongPtr(_In_ INT8 i8Operand,_Out_ ULONG_PTR *pulResult)
public boolean None.MoveToFollowing(XPathNodeType type None)
public void None.Remove(Control value None)
protected void None.LoadControlState(Object savedState None)
function None None.GetQuantity(productID None None,elemToUpdate None None,productLabelElem None None,buttonElem None None)
public None None.OleDbCommand(String cmdText None,OleDbConnection connection None,OleDbTransaction transaction None)
HRESULT None None.GetOutputCurrentType(DWORD dwOutputStreamIndex None,[out] DMO_MEDIA_TYPE *pmt)
protected void None.BaseRemove(Object key None)
HRESULT None None.GetInputStreamInfo(DWORD dwInputStreamIndex None,[out] DWORD *pdwFlags)
private void None.Button1_Click(Object sender None,EventArgs e None)
protected void None.OnChangePasswordError(EventArgs e None)
private void None.currencyTextBox_TextChanged(Object sender None,EventArgs e None)
public boolean None.Contains(Control control None)
protected void None.RaiseMouseEvent(Object key None,MouseEventArgs e None)
private void None.button1_Click(Object sender None,System.EventArgs e None)
protected void None.RaiseDragEvent(Object key None,DragEventArgs e None)
private void None.myButton_Click(Object sender None,System.EventArgs e None)
HRESULT WINAPI None.StorageAdapterGetDatabaseSize(_Inout_ PWINBIO_PIPELINE Pipeline,_Out_ PSIZE_T AvailableRecordCount,_Out_ PSIZE_T TotalRecordCount)
HRESULT None None.UIntToUInt8(_In_ UINT uOperand,_Out_ UINT8 *pui8Result)
HRESULT None msctf.GetStatus([out] TS_STATUS *pdcs)
public DateTime None.AddMinutes(DateTime time None,int minutes None)
public void None.Write(String s None)
DWORD WINAPI fwpuclnt.FwpmFilterSubscriptionsGet0(_In_ HANDLE engineHandle,_Out_ FWPM_FILTER_SUBSCRIPTION0 ***entries,_Out_ UINT32 *numEntries)
public None None.StylusPoint(double x None,double y None)
private void None.OnRecordDeleting(Object source None,SqlDataSourceCommandEventArgs e None)
IAsyncResult None None.BeginClose(TimeSpan timeout None,AsyncCallback callback None,Object state None)
HRESULT None None.SizeTToLongPtr(_In_ size_t cbOperand,_Out_ LONG_PTR *plResult)
DWORD WINAPI fwpuclnt.FwpmProviderEnum0(_In_ HANDLE engineHandle,_In_ HANDLE enumHandle,_In_ UINT32 numEntriesRequested,_Out_ FWPM_PROVIDER0 ***entries,_Out_ UINT32 *numEntriesReturned)
protected void None.OnPaddingChanged(EventArgs e None)
protected AccessibleObject None.GetAccessibilityObjectById(int objectId None)
private void None.On_Click(Object source None,System.EventArgs e None)
protected void None.OnRowUpdated(RowUpdatedEventArgs value None)
private void None.listBox1_SelectedIndexChanged(Object sender None,System.EventArgs e None)
HRESULT None None.GetOPMInfo([out] MF_MEDIA_ENGINE_OPM_STATUS *pStatus,[out] BOOL *pConstricted)
HRESULT None None.LongLongToInt(_In_ LONGLONG llOperand,_Out_ INT *piResult)
public OdbcParameter None.Add(String parameterName None,OdbcType odbcType None)
public int None.GetByteCount(char[] chars None,int index None,int count None)
HRESULT None None.GetMinIdealVideoSize([out] LONG *lpWidth,[out] LONG *lpHeight)
protected void None.OnDragLeave(DragEventArgs e None)
DWORD None dhcpsapi.DhcpGetClassInfo(_In_ LPWSTR ServerIpAddress,_In_ DWORD ReservedMustBeZero,_In_ LPDHCP_CLASS_INFO PartialClassInfo,_Out_ LPDHCP_CLASS_INFO *FilledClassInfo)
public boolean None.Contains(TraceListener listener None)
BOOL None None.WlxRemoveStatusMessage(_In_ PVOID pWlxContext)
public void None.LinkComponentChangedEvent(IComponentChangeService changeService None)
protected void None.OnPreviewDragOver(DragEventArgs e None)
protected void None.PreFilterProperties(IDictionary properties None)
protected void None.OnTextChanged(EventArgs e None)
protected None None.AuditRule(IdentityReference identity None,int accessMask None,boolean isInherited None,InheritanceFlags inheritanceFlags None,PropagationFlags propagationFlags None,AuditFlags auditFlags None)
public void None.Merge(DataSet dataSet None,boolean preserveChanges None,MissingSchemaAction missingSchemaAction None)
protected boolean None.OnBubbleEvent(Object source None,EventArgs args None)
void None None.Button1_Click(Object sender None,EventArgs e None)
private void None.listDragTarget_DragLeave(Object sender None,System.EventArgs e None)
public void None.RemoveRange(int index None,int count None)
protected void None.OnNotifyMessage(Message m None)
protected boolean None.SerializeToXmlElement(XmlWriter writer None,String elementName None)
EFaultRepRetVal APIENTRY faultrep.ReportFault(_In_ LPEXCEPTION_POINTERS pep,_In_ DWORD dwMode)
private void None.textBox1_Validating(Object sender None,System.ComponentModel.CancelEventArgs e None)
HRESULT WINAPI wer.WerReportCloseHandle(_In_ HREPORT hReportHandle)
protected void None.OnTextChanged(EventArgs e None)
HRESULT None None.LongPtrToInt(_In_ LONG_PTR lOperand,_Out_ INT *piResult)
DWORD None bthprops.BluetoothSdpGetString(_In_ LPBYTE pRecordStream,_In_ ULONG cbRecordLength,_In_ PSDP_STRING_DATA_TYPE pStringData,_In_ USHORT usStringOffset,_Out_ PWCHAR pszString,_Inout_ PULONG pcchStringLength)
DWORD None bthprops.BluetoothSdpGetAttributeValue(_In_ LPBYTE pRecordStream,_In_ ULONG cbRecordLength,_In_ USHORT usAttributeId,_Out_ PSDP_ELEMENT_DATA pAttributeData)
private void None.button1_Click(System.Object sender None,System.EventArgs e None)
private void None.On_Click(Object source None,System.EventArgs e None)
HRESULT None None.GetAllocator(IMemAllocator **ppAllocator None)
HRESULT None None.Lock(LONG bLock None)
protected void None.OnStyleChanged(EventArgs e None)
public void None.AddRange(TabPage[] pages None)
SECURITY_STATUS WINAPI ncrypt.NCryptOpenKey(_In_ NCRYPT_PROV_HANDLE hProvider,_Out_ NCRYPT_KEY_HANDLE *phKey,_In_ LPCWSTR pszKeyName,_In_ DWORD dwLegacyKeySpec,_In_ DWORD dwFlags)
private void None.OnDSUpdatedHandler(Object source None,SqlDataSourceStatusEventArgs e None)
DWORD None dhcpsapi.DhcpServerQueryAttribute(_In_ LPWSTR ServerIpAddr,_In_ ULONG dwReserved,_In_ DHCP_ATTRIB_ID DhcpAttribId,_Out_ LPDHCP_ATTRIB *pDhcpAttrib)
public void None.Write(char[] buffer None)
HRESULT None None.GetClassID(CLSID *pClsID None)
BOOL WINAPI crypt32.CertVerifyRevocation(_In_ DWORD dwEncodingType,_In_ DWORD dwRevType,_In_ DWORD cContext,_In_ PVOID rgpvContext[],_In_ DWORD dwFlags,_In_opt_ PCERT_REVOCATION_PARA pRevPara,_Inout_ PCERT_REVOCATION_STATUS pRevStatus)
private void None.whatIsChecked_Click(Object sender None,System.EventArgs e None)
public void None.AddValue(String name None,int value None)
boolean None None.Contains(Object value None)
HRESULT None None.PtrdiffTToInt(_In_ ptrdiff_t cbOperand,_Out_ INT *piResult)
public int None.GetMonth(DateTime time None)
private void None.On_Inserting(Object sender None,SqlDataSourceCommandEventArgs e None)
private void None.button1_Click(Object sender None,System.EventArgs e None)
HRESULT WINAPI None.StorageAdapterControlUnitPrivileged(_Inout_ PWINBIO_PIPELINE Pipeline,_In_ ULONG ControlCode,_In_ PUCHAR SendBuffer,_In_ SIZE_T SendBufferSize,_In_ PUCHAR ReceiveBuffer,_In_ SIZE_T ReceiveBufferSize,_Out_ PSIZE_T ReceiveDataSize,_Out_ PULONG OperationStatus)
HRESULT None None.QueryFilterInfo(FILTER_INFO *pInfo None)
public None None.StreamReader(String path None,Encoding encoding None,boolean detectEncodingFromByteOrderMarks None)
HRESULT WINAPI kernel32.WerUnregisterFile(_In_ PCWSTR pwzFilePath)
public StringBuilder None.Insert(int index None,short value None)
public Control None.LoadControl(String virtualPath None)
HRESULT None None.GetProperties(DWORD cbProperties None,BYTE *pbProperties None)
HRESULT None None.IntToSizeT(_In_ INT iOperand,_Out_ size_t *pcbResult)
HRESULT None None.LongToULongLong(_In_ LONG lOperand,_Out_ ULONGLONG *pullResult)
public void None.ConvertDoubleString(double doubleVal None)
HRESULT None None.GetFreeCount([out] LONG *plBuffersFree)
HRESULT None None.Discontinuity(DWORD dwInputStreamIndex None)
protected void None.AddAttributesToRender(HtmlTextWriter writer None)
public void None.UploadDataAsync(Uri address None,byte[] data None)
public void None.Start(Object parameter None)
protected int None.AddToBatch(IDbCommand command None)
public void None.BeginWebPartConnecting(WebPart webPart None)
protected void None.OnScroll(ScrollEventArgs se None)
private void None.On_Inserting(Object sender None,SqlDataSourceCommandEventArgs e None)
public void None.Collapse(boolean ignoreChildren None)
protected void None.RaiseMouseEvent(Object key None,MouseEventArgs e None)
public int None.Add(ToolStripItem value None)
HRESULT None None.GetEmbeddedFragmentRoots([out None None,retval] SAFEARRAY **pRetVal)
HRESULT None None.LongToIntPtr(_In_ LONG lOperand,_Out_ INT_PTR *piResult)
public None None.StreamReader(String path None,Encoding encoding None,boolean detectEncodingFromByteOrderMarks None)
HRESULT WINAPI winbio.WinBioIdentify(_In_ WINBIO_SESSION_HANDLE SessionHandle,_Out_opt_ WINBIO_UNIT_ID *UnitId,_Out_opt_ WINBIO_IDENTITY *Identity,_Out_opt_ WINBIO_BIOMETRIC_SUBTYPE *SubFactor,_Out_opt_ WINBIO_REJECT_DETAIL *RejectDetail)
HRESULT None None.GetCurrentDomain([out] DVD_DOMAIN *pDomain)
private void None.button1_Click(System.Object sender None,System.EventArgs e None)
HRESULT None None.LongPtrToInt(_In_ LONG_PTR lOperand,_Out_ INT *piResult)
HRESULT None None.ReportLiveDeviceObjects(D3D12_RLDO_FLAGS Flags None)
protected void None.Serialize(SerializationInfo info None,StreamingContext context None)
BOOL WINAPI advapi32.CryptGetDefaultProvider(_In_ DWORD dwProvType,_In_ DWORD *pdwReserved,_In_ DWORD dwFlags,_Out_ LPTSTR pszProvName,_Inout_ DWORD *pcbProvName)
BOOL WINAPI advapi32.CryptGetDefaultProviderW(_In_ DWORD dwProvType,_In_ DWORD *pdwReserved,_In_ DWORD dwFlags,_Out_ LPTSTR pszProvName,_Inout_ DWORD *pcbProvName)
BOOL WINAPI advapi32.CryptGetDefaultProviderA(_In_ DWORD dwProvType,_In_ DWORD *pdwReserved,_In_ DWORD dwFlags,_Out_ LPTSTR pszProvName,_Inout_ DWORD *pcbProvName)
function None None.GetQuantity(productID None None,elemToUpdate None None,productLabelElem None None,buttonElem None None)
LONG WINAPI tapi32.phoneGetDisplay(HPHONE hPhone None,LPVARSTRING lpDisplay None)
protected void None.AddAttributesToRender(HtmlTextWriter writer None)
public XmlReadMode None.ReadXml(XmlReader reader None)
LONGLONG None None.AlignDown(LONGLONG ll None,LONG lAlign None)
HRESULT None None.SetSPDIF(DWORD dwOutputNum None,IWMReader* pReader None)
HRESULT WINAPI kernel32.WerGetFlags(_In_ HANDLE hProcess,_Out_ PDWORD pdwFlags)
public boolean None.Equals(Object o None)
private void None.myButton_Click(Object sender None,System.EventArgs e None)
private void None.myButton_Click(Object sender None,System.EventArgs e None)
DWORD WINAPI fwpuclnt.FwpmFilterUnsubscribeChanges0(_In_ HANDLE engineHandle,_In_ HANDLE changeHandle)
public void None.ScrollControlIntoView(Control activeControl None)
HRESULT WINAPI wer.WerStoreGetNextReportKey(HREPORTSTORE store None,PCWSTR* reportKey None)
protected void None.OnModeChanged(EventArgs e None)
public XmlElement None.GetElementFromRow(DataRow r None)
boolean None None.FilterEvents(IComponent component None,IDictionary events None)
protected AccessibleObject None.GetAccessibilityObjectById(int objectId None)
HRESULT None None.GetTotalTitleTime([out] DVD_HMSF_TIMECODE *pTotalTime,[out] ULONG *pulTimeCodeFlags)
protected void None.OnDragLeave(EventArgs e None)
private void None.listBox1_SelectedIndexChanged(Object sender None,System.EventArgs e None)
function None None.GetQuantity(productID None None,elemToUpdate None None,productLabelElem None None,buttonElem None None)
HRESULT None None.ShortToUInt8(_In_ SHORT sOperand,_Out_ UINT8 *pui8Result)
protected void None.OnContentDoubleClick(DataGridViewCellEventArgs e None)
private void None.comboBox1_SelectedIndexChanged(Object sender None,EventArgs e None)
protected void None.OnUpdating(ObjectDataSourceMethodEventArgs e None)
public XmlReadMode None.ReadXml(XmlReader reader None)
private void None.myButton_Click(Object sender None,System.EventArgs e None)
protected void None.OnInit(EventArgs e None)
protected void None.PreFilterProperties(IDictionary properties None)
protected void None.OnMouseUp(MouseEventArgs e None)
double None None.atof(const char *str)
DWORD None dhcpsapi.DhcpGetClassInfo(_In_ LPWSTR ServerIpAddress,_In_ DWORD ReservedMustBeZero,_In_ LPDHCP_CLASS_INFO PartialClassInfo,_Out_ LPDHCP_CLASS_INFO *FilledClassInfo)
public void None.OnInit(EventArgs e None)
public void None.Uninstall(IDictionary savedState None)
private void None.DataGridTableStyleSampleLoad(Object sender None,EventArgs e None)
DWORD None dhcpsapi.DhcpModifyClass(_In_ LPWSTR ServerIpAddress,_In_ DWORD ReservedMustBeZero,_In_ LPDHCP_CLASS_INFO ClassInfo)
public StringBuilder None.Insert(int index None,short value None)
HRESULT None None.GetDirectDraw(LPDIRECTDRAW *ppDirectDraw None)
protected void None.Reset(ConfigurationElement parentElement None)
public int None.GetMaxByteCount(int charCount None)
HRESULT None None.LongLongToLongPtr(_In_ LONGLONG llOperand,_Out_ LONG_PTR *plResult)
public Rectangle None.RectangleToScreen(Rectangle r None)
protected void None.OnLoggingOut(LoginCancelEventArgs e None)
private void None.listBox1_SelectedIndexChanged(Object sender None,System.EventArgs e None)
public XmlReadMode None.ReadXml(XmlReader reader None)
protected void None.AddAttributesToRender(HtmlTextWriter writer None)
public void None.UploadDataAsync(Uri address None,byte[] data None)
public boolean None.Equals(Object o None)
private void None.dataGridView1_CellValidating(Object sender None,DataGridViewCellValidatingEventArgs e None)
private void None.button1_Click(Object sender None,System.EventArgs e None)
HRESULT None None.SSIZETToIntPtr(_In_ SSIZE_T cbOperand,_Out_ INT_PTR *piResult)
public void None.Rollback(IDictionary savedState None)
HRESULT None None.ULongPtrToUShort(_In_ ULONG_PTR ulOperand,_Out_ USHORT *pusResult)
HRESULT None None.UIntPtrToUChar(_In_ UINT_PTR uOperand,_Out_ UCHAR *pch)
function None None.GetQuantity(productID None None,elemToUpdate None None,productLabelElem None None,buttonElem None None)
SOCKET None None.WPUModifyIFSHandle(_In_ DWORD dwCatalogEntryId,_In_ SOCKET ProposedHandle,_Out_ LPINT lpErrno)
HRESULT None None.Int64ToUIntPtr(_In_ INT64 i64Operand,_Out_ UINT_PTR *puiResult)
public void None.Write(Object value None)
HRESULT None None.ULongLongToChar(_In_ ULONGLONG ullOperand,_Out_ CHAR *pch)
public void None.GetObjectData(SerializationInfo info None,StreamingContext context None)
private void None.Current_Changed(Object sender None,EventArgs e None)
public void None.ApplyResources(Object value None,String objectName None,CultureInfo culture None)
protected void None.Page_Load(Object sender None,System.EventArgs e None)
HRESULT None None.CheckConnect(IPin *pPin None)
private void None.myButton_Click(Object sender None,System.EventArgs e None)
HRESULT None None.NotifyCommandProcessCreated(ULONG SessionId None)
function None None.GetQuantity(productID None None,elemToUpdate None None,productLabelElem None None,buttonElem None None)
uint32 None cimwin32.SetPowerState([in] uint16 PowerState,[in] datetime Time)
protected void None.OnRowCancelingEdit(GridViewCancelEditEventArgs e None)
HRESULT None None.GetGroupSubsetCount([out] UINT *pcVisibleRows)
function None None.GetQuantity(productID None None,elemToUpdate None None,productLabelElem None None,buttonElem None None)
protected void None.OnSelecting(ObjectDataSourceSelectingEventArgs e None)
protected void None.OnPropertyChanging(PropertyChangedEventArgs pcevent None)
LONG WINAPI tapi32.phoneSetVolume(HPHONE hPhone None,DWORD dwHookSwitchDev None,DWORD dwVolume None)
HRESULT WINAPI mssign32.SignerTimeStamp(_In_ SIGNER_SUBJECT_INFO *pSubjectInfo,_In_ LPCWSTR pwszHttpTimeStamp,_In_opt_ PCRYPT_ATTRIBUTES psRequest,_In_opt_ LPVOID pSipData)
public void None.Write(String documentPath None)
private void None.SetCellWithFocus(DataGrid myGrid None)
HRESULT None None.SetInputMaxLatency(DWORD dwInputStreamIndex None,REFERENCE_TIME rtMaxLatency None)
HRESULT WINAPI winbio.WinBioMonitorPresence(_In_ WINBIO_SESSION_HANDLE SessionHandle,_In_ WINBIO_UNIT_ID UnitId)
protected IEnumerable None.ExecuteSelect(DataSourceSelectArguments arguments None)
HRESULT WINAPI None.StorageAdapterNextRecord(_Inout_ PWINBIO_PIPELINE Pipeline)
protected void None.HookChildControls(Control firstChild None)
BOOL WINAPI user32.SetProcessWindowStation(_In_ HWINSTA hWinSta)
DWORD None bthprops.BluetoothUpdateDeviceRecord(BLUETOOTH_DEVICE_INFO *pbtdi None)
void None None.Remove(Object value None)
protected void None.mgr1_AuthorizeWebPart(object sender None,WebPartAuthorizationEventArgs e None)
public boolean None.MoveToAttribute(String localName None,String namespaceURI None)
function None None.GetQuantity(productID None None,elemToUpdate None None,productLabelElem None None,buttonElem None None)
public StringBuilder None.Insert(int index None,short value None)
HRESULT None None.GetGroupBy([out] PROPERTYKEY *pkey,[out] BOOL *pfAscending)
void None None.UserInfo(Object sender None,EventArgs e None)
HRESULT None msimtf.GetStatus([out] TF_STATUS *pdcs)
private void None.treeView1_KeyDown(Object sender None,KeyEventArgs e None)
protected int None.BaseIndexOf(ConfigurationElement element None)
public int None.LastIndexOf(String source None,String value None,int startIndex None)
protected void None.RenderHeader(HtmlTextWriter writer None)
protected void None.OnNavigationProgress(NavigationProgressEventArgs e None)
INT_PTR CALLBACK None.DlgProc(HWND hDlg None,UINT message None,WPARAM wParam None,LPARAM lParam None)
public void None.UploadDataAsync(Uri address None,byte[] data None)
HRESULT None None.GetVMGAttributes([out] DVD_MenuAttributes *pATR)
protected void None.RaiseCallbackEvent(String eventArgument None)
protected void None.Page_Load(Object sender None,System.EventArgs e None)
protected void None.OnCustomCommand(int command None)
private void None.myButton_Click(Object sender None,System.EventArgs e None)
public boolean None.CanValidate(Type type None)
protected void None.OnMouseDown(MouseEventArgs e None)
HRESULT None None.SetMediaType(AM_MEDIA_TYPE *pMediaType None)
protected void None.OnPreRender(EventArgs e None)
protected Object None.ReadTypedPrimitive(XmlQualifiedName type None)
HRESULT None None.SetDiscontinuity(BOOL bDiscont None)
HWND WINAPI user32.SetActiveWindow(_In_ HWND hWnd)
public Object None.GetCurrentPattern(AutomationPattern pattern None)
private void None.listBox1_SelectedIndexChanged(Object sender None,System.EventArgs e None)
DWORD None c_g18030.UnicodeToBytes(_In_ LPWSTR lpWideCharStr,_In_ UINT cchWideChar,_In_ LPSTR lpMultiByteStr,_In_ UINT cchMultiByte)
public void None.Add(Control child None)
public int None.IndexOfLocalName(String[] localNames None,String namespaceUri None)
public void None.AddRange(TabPage[] pages None)
protected void None.OnLoggingOut(LoginCancelEventArgs e None)
DWORD None fwpuclnt.IPsecSaContextEnum1(_In_ HANDLE engineHandle,_In_ HANDLE enumHandle,_In_ UINT32 numEntriesRequested,_Out_ IPSEC_SA_CONTEXT1 ***entries,_Out_ UINT32 *numEntriesReturned)
HRESULT None None.GetMixingPrefs([out] DWORD *pdwMixerPrefs)
public Form None.ResolveFormReference(String formID None)
HRESULT None None.GetVideoPosition([out] LPRECT lpSRCRect,[out] LPRECT lpDSTRect)
public XmlReadMode None.ReadXml(XmlReader reader None)
HRESULT None wuapi.get_UninstallationNotes([out] BSTR *retval)
public XmlReadMode None.ReadXml(TextReader reader None)
public void None.Add(Control value None)
private void None.OnRecordDeleting(Object source None,SqlDataSourceCommandEventArgs e None)
public String None.GetString(String name None)
public void None.AppendLiteralString(String s None)
function None None.GetQuantity(productID None None,elemToUpdate None None,productLabelElem None None,buttonElem None None)
public ConfigurationSectionGroup None.GetSectionGroup(String sectionGroupName None)
public void None.ConvertDoubleString(double doubleVal None)
protected void None.OnPreRender(EventArgs e None)
protected void None.LoadViewState(Object savedState None)
public None None.OleDbCommand(String cmdText None,OleDbConnection connection None,OleDbTransaction transaction None)
public void None.AddRange(TabPage[] pages None)
HRESULT None None.AuthenticateClientToSession([out] WTS_SESSION_ID *SessionId)
DWORD DHCP_API_FUNCTION dhcpsapi.DhcpHlprModifyV4PolicyExpr(_Inout_ LPDHCP_POLICY Policy,_In_ DHCP_POL_LOGIC_OPER Operator)
public DataRow None.GetRowFromElement(XmlElement e None)
HRESULT WINAPI None.StorageAdapterNotifyPowerChange(_Inout_ PWINBIO_PIPELINE Pipeline,_In_ ULONG PowerEventType)
public boolean None.HasFeature(String strFeature None,String strVersion None)
String None None.Format(String format None,Object arg None,IFormatProvider formatProvider None)
protected void None.OnInserted(ObjectDataSourceStatusEventArgs e None)
protected void None.LoadViewState(Object savedState None)
HRESULT None None.UIntToChar(_In_ UINT uOperand,_Out_ __wchar_t *pch)
private void None.showCheckedNodesButton_Click(Object sender None,EventArgs e None)
int None None.mbtowc(wchar_t *wchar None,const char *mbchar,size_t count None)
public DateTime None.AddMinutes(DateTime time None,int minutes None)
HRESULT None None.SetSyncPoint(BOOL bIsSyncPoint None)
protected void None.OnTextInput(TextCompositionEventArgs e None)
void None None.Page_Load(Object sender None,EventArgs e None)
void None None.Page_Load(Object sender None,System.EventArgs e None)
HRESULT None None.LongPtrToSizeT(_In_ LONG_PTR lOperand,_Out_ size_t *pcbResult)
public void None.Add(IComponent comp None,DesignerActionList actionList None)
DWORD None fwpuclnt.IPsecSaContextDestroyEnumHandle0(_In_ HANDLE engineHandle,_In_ HANDLE enumHandle)
private void None.On_Inserting(Object sender None,SqlDataSourceCommandEventArgs e None)
public None None.StreamWriter(String path None,boolean append None)
HRESULT None None.Duration(REFERENCE_TIME *ptDuration None)
HRESULT None None.Seek(REFERENCE_TIME tStart None,REFERENCE_TIME tStop None)
public void None.UploadDataAsync(Uri address None,byte[] data None)
HRESULT None None.get_CachedAutomationId([out None None,retval] BSTR *retVal)
LONG WINAPI tapi32.phoneSetGain(HPHONE hPhone None,DWORD dwHookSwitchDev None,DWORD dwGain None)
HRESULT None None.ULongLongToULongPtr(_In_ ULONGLONG ullOperand,_Out_ ULONG_PTR *pulResult)
protected Exception None.CreateReadOnlyCollectionException(String name None)
protected void None.OnIsStylusCapturedChanged(DependencyPropertyChangedEventArgs e None)
protected void None.AccessibilityNotifyClients(AccessibleEvents accEvent None,int objectID None,int childID None)
protected None None.MissingFieldException(SerializationInfo info None,StreamingContext context None)
boolean None None.Equals(T other None)
protected void None.OnPaddingChanged(EventArgs e None)
public StringBuilder None.Insert(int index None,short value None)
protected void None.OnDataBound(EventArgs e None)
public void None.ConvertDoubleString(double doubleVal None)
HRESULT None None.ShortToULongPtr(_In_ SHORT sOperand,_Out_ ULONG_PTR *pulResult)
protected void None.Deserialize(SerializationInfo info None,StreamingContext context None)
public WebResponse None.EndGetResponse(IAsyncResult asyncResult None)
public void None.GetHueExample(PaintEventArgs e None)
public XmlAttribute None.SetAttributeNode(String localName None,String namespaceURI None)
private void None.button3_Click(Object sender None,System.EventArgs e None)
public CustomRecognizerNode None.CreateCustomRecognizer(Guid inkRecognizerId None)
public int None.GetSecond(DateTime time None)
protected void None.ConditionalRenderClassAttribute(XhtmlMobileTextWriter writer None)
HRESULT None None.Run(REFERENCE_TIME tStart None)
private void None.myButton_Click(Object sender None,System.EventArgs e None)
HRESULT None None.LoadComputeShader(REFGUID resourceId None,BYTE *shaderBuffer None,UINT32 shaderBufferCount None)
HRESULT WINAPI None.StorageAdapterDetach(_Inout_ PWINBIO_PIPELINE Pipeline)
public void None.Prepend(Matrix matrix None)
BOOL None bthprops.BluetoothSdpEnumAttributes(LPBYTE pSDPStream None,ULONG cbStreamSize None,PFN_BLUETOOTH_ENUM_ATTRIBUTES_CALLBACK pfnCallback None,LPVOID pvParam None)
HRESULT WINAPI winbio.WinBioVerifyWithCallback(_In_ WINBIO_SESSION_HANDLE SessionHandle,_In_ WINBIO_IDENTITY *Identity,_In_ WINBIO_BIOMETRIC_SUBTYPE SubFactor,_In_ PWINBIO_VERIFY_CALLBACK VerifyCallback,_In_opt_ PVOID VerifyCallbackContext)
public int None.Add(ToolStripItem value None)
function None None.GetQuantity(productID None None,elemToUpdate None None,productLabelElem None None,buttonElem None None)
protected void None.OnImeModeChanged(EventArgs e None)
public int None.Add(Style style None)
private void None.PrintCell(Object sender None,MouseEventArgs e None)
public void None.AddRange(TabPage[] pages None)
uint32 None cimwin32.SetPowerState([in] uint16 PowerState,[in] datetime Time)
uint32 None cimwin32.SetPowerState([in] uint16 PowerState,[in] datetime Time)
public String None.GetEditableDesignerRegionContent(EditableDesignerRegion region None)
protected void None.RenderVerbs(HtmlTextWriter writer None)
HRESULT WINAPI wer.WerStoreGetFirstReportKey(HREPORTSTORE store None,PCWSTR* reportKey None)
public int None.GetDayOfYear(DateTime time None)
public None None.StreamReader(String path None,Encoding encoding None,boolean detectEncodingFromByteOrderMarks None)
protected void None.InvokeOnClick(Control toInvoke None,EventArgs e None)
private void None.PrintCurrentListName(DataGrid myDataGrid None)
HRESULT None None.SetMediaTime(LONGLONG *pStart None,LONGLONG *pEnd None)
protected void None.Deserialize(SerializationInfo info None,StreamingContext context None)
public int None.GetEra(DateTime time None)
protected void None.AddedControl(Control control None,int index None)
HRESULT WINAPI kernel32.WerRegisterAdditionalProcess(DWORD processId None,DWORD captureExtraInfoForThreadId None)
HRESULT None None.SetSyncSource(IReferenceClock *pClock None)
public void None.AppendLiteralString(String s None)
HRESULT None None.Int64ToULongPtr(_In_ INT64 i64Operand,_Out_ ULONG_PTR *pulResult)
protected void None.OnPreviewDragOver(DragEventArgs e None)
protected void None.OnActivated(EventArgs e None)
private void None.whatIsChecked_Click(Object sender None,System.EventArgs e None)
public void None.NetworkToHostOrderShort(short networkByte None)
public None None.ConfigurationErrorsException(String message None,XmlReader reader None)
public void None.Initialize(IComponent component None)
protected void None.MinimizeWebPart(WebPart webPart None)
public void None.AddRange(TabPage[] pages None)
private void None.button3_Click(Object sender None,System.EventArgs e None)
STDMETHODIMP None None.GetDuration(LONGLONG *pDuration None)
protected void None.OnQueryContinueDrag(QueryContinueDragEventArgs qcdevent None)
protected void None.OnGotFocus(EventArgs e None)
public boolean None.Equals(Object o None)
private void None.Current_Changed(Object sender None,EventArgs e None)
public void None.PaginateRecursive(ControlPager pager None)
HRESULT None msctf.GetEnd([out] IAnchor **ppaEnd)
public XmlElement None.CreateElement(String prefix None,String localName None,String namespaceURI None)
HRESULT None None.GetSyncSource(IReferenceClock **pClock None)
private void None.MyListView_AfterLabelEdit(Object sender None,System.Windows.Forms.LabelEditEventArgs e None)
protected void None.OnScroll(ScrollEventArgs se None)
public int None.IndexOf(TraceListener listener None)
public AuthorizationRuleCollection None.GetAuditRules(boolean includeExplicit None,boolean includeInherited None,Type targetType None)
public void None.Prepend(Matrix matrix None)
public void None.CloseWebPart(WebPart webPart None)
protected void None.OnChangedPassword(EventArgs e None)
HRESULT None None.GetInputSizeInfo(DWORD dwInputStreamIndex None,[out] DWORD *pcbSize,[out] DWORD *pcbMaxLookahead,[out] DWORD *pcbAlignment)
public void None.DrawImage(Image image None,float x None,float y None)
protected void None.RenderBeginLink(XhtmlMobileTextWriter writer None,String target None,String accessKey None,Style style None,String cssClass None)
HRESULT None msimtf.GetScreenExt([out] RECT *prc)
private void None.button1_Click(System.Object sender None,System.EventArgs e None)
protected void None.OnItemCreated(DataListItemEventArgs e None)
public SortKey None.GetSortKey(String source None)
public Object None.FindName(String name None,FrameworkElement templatedParent None)
private void None.myButton_Click(Object sender None,System.EventArgs e None)
protected int None.AddToBatch(IDbCommand command None)
HRESULT None taskschd.get_Path([out] BSTR *pPath)
void None None.Page_Load(Object sender None,EventArgs e None)
HRESULT WINAPI winbio.WinBioEnrollDiscard(_In_ WINBIO_SESSION_HANDLE SessionHandle)
CREATE TABLE None.MoneyTable(col1 int None,col2 smallmoney None,col3 decimal None)
HRESULT None None.GetAtEndOfPayload([out] BOOL *pfAtEndOfPayload)
private void None.listBox1_SelectedIndexChanged(Object sender None,System.EventArgs e None)
HRESULT None None.ULongPtrToShort(_In_ ULONG_PTR ulOperand,_Out_ SHORT *psResult)
protected void None.OnLoggingOut(LoginCancelEventArgs e None)
protected void None.LoadViewState(Object savedState None)
HRESULT None ole32.CoDisconnectObject(_In_ LPUNKNOWN pUnk,_In_ DWORD dwReserved)
protected void None.OnQueryContinueDrag(QueryContinueDragEventArgs qcdevent None)
HRESULT WINAPI None.StorageAdapterAttach(_Inout_ PWINBIO_PIPELINE Pipeline)
HRESULT WINAPI None.StorageAdapterDeleteRecord(_Inout_ PWINBIO_PIPELINE Pipeline,_In_ PWINBIO_IDENTITY Identity,_In_ WINBIO_BIOMETRIC_SUBTYPE SubFactor)
protected boolean None.OnBubbleEvent(Object source None,EventArgs e None)
public void None.CloseWebPart(WebPart webPart None)
HRESULT None None.LongToChar(_In_ LONG lOperand,_Out_ __wchar_t *pch)
private void None.currencyTextBox_TextChanged(Object sender None,EventArgs e None)
private void None.AddShadow(PaintEventArgs e None)
protected void None.LoadControlState(Object savedState None)
private void None.MyListView_AfterLabelEdit(Object sender None,System.Windows.Forms.LabelEditEventArgs e None)
public void None.Write(String value None)
SOCKET None None.WPUCreateSocketHandle(_In_ DWORD dwCatalogEntryId,_In_ DWORD_PTR dwContext,_Out_ LPINT lpErrno)
HRESULT None shell32.BrowseObject(PCUIDLIST_RELATIVE pidl None,UINT wFlags None)
protected DataRow None.NewRowFromBuilder(DataRowBuilder builder None)
public Rectangle None.RectangleToScreen(Rectangle r None)
HRESULT None None.QueryDirection(PIN_DIRECTION *pPinDir None)
HRESULT None None.GetCurrentButton([out] ULONG *pulButtonsAvailable,[out] ULONG *pulCurrentButton)
private void None.ShowLineAndAlignment(PaintEventArgs e None)
HRESULT None wuapi.get_Operation([out] UpdateOperation *retval)
private void None.myButton_Click(Object sender None,System.EventArgs e None)
HRESULT None None.GetServiceState(AM_LINE21_CCSTATE *lpState None)
WDFQUEUE None None.WdfDeviceGetDefaultQueue(_In_ WDFDEVICE Device)
HRESULT None taskschd.get_HighestVersion([out] DWORD *pVersion)
DWORD WINAPI fwpuclnt.FwpmFilterDeleteById0(_In_ HANDLE engineHandle,_In_ UINT64 id)
protected void None.OnMouseLeftButtonUp(MouseButtonEventArgs e None)
protected void None.OnPreRender(EventArgs e None)
public StringBuilder None.Insert(int index None,short value None)
private void None.listDragTarget_DragEnter(Object sender None,System.Windows.Forms.DragEventArgs e None)
HRESULT None None.LongToUInt(_In_ LONG lOperand,_Out_ UINT *piResult)
private void None.button1_Click(System.Object sender None,System.EventArgs e None)
protected void None.InvokePaintBackground(Control c None,PaintEventArgs e None)
JET_ERR JET_API None.JetCloseTable(__in JET_SESID sesid,__in JET_TABLEID tableid)
int None None.GetHashCode(Object obj None)
protected void None.OnMouseUp(MouseEventArgs e None)
Object None None.GetFormat(Type formatType None)
public void None.GenerateCode(AssemblyBuilder assemblyBuilder None)
HRESULT WINAPI wer.WerReportCloseHandle(_In_ HREPORT hReportHandle)
String None None.Format(String format None,Object arg None,IFormatProvider formatProvider None)
SerializableAttribute None None.TypeConverterAttribute(System.Drawing.Printing.MarginsConverter None None)
private void None.AddShadow(PaintEventArgs e None)
HRESULT None None.get_FragmentRoot([out None None,retval] IRawElementProviderFragmentRoot **pRetVal)
public void None.GetInstances(ManagementOperationObserver watcher None)
public void None.ApplyStyleSheetSkin(Page page None)
protected void None.ConditionalRenderOpeningSpanElement(XhtmlMobileTextWriter writer None)
protected void None.OnItemCreated(EventArgs e None)
private void None.MyListView_AfterLabelEdit(Object sender None,System.Windows.Forms.LabelEditEventArgs e None)
public boolean None.Contains(Installer value None)
protected void None.SwitchViewingModeCore(FlowDocumentReaderViewingMode viewingMode None)
public int None.IndexOf(Control value None)
public None None.ArgumentOutOfRangeException(String paramName None,String message None)
public StringBuilder None.Remove(int startIndex None,int length None)
HRESULT None None.GetTypeKind([out] TYPEKIND *pTypeKind)
HRESULT WINAPI None.StorageAdapterEraseDatabase(_Inout_ PWINBIO_PIPELINE Pipeline,_In_ PWINBIO_UUID DatabaseId,_In_ LPCWSTR FilePath,_In_ LPCWSTR ConnectString)
HCRYPTMSG WINAPI crypt32.CryptMsgOpenToDecode(_In_ DWORD dwMsgEncodingType,_In_ DWORD dwFlags,_In_ DWORD dwMsgType,_In_ HCRYPTPROV_LEGACY hCryptProv,_In_ PCERT_INFO pRecipientInfo,_In_opt_ PCMSG_STREAM_INFO pStreamInfo)
HRESULT None None.GetDefaultAudioLanguage([out] LCID *pLanguage,DVD_AUDIO_LANG_EXT *pAudioExtension None)
public DateTime None.AddHours(DateTime time None,int hours None)
HRESULT None None.get_GroupBy([out] BSTR *pbstrGroupBy)
public void None.WriteLine(Object value None)
private void None.button2_Click(System.Object sender None,System.EventArgs e None)
protected void None.OnBeforeLabelEdit(NodeLabelEditEventArgs e None)
public Object None.GetOutParameterValue(int index None)
HRESULT None None.GetOutputSizeInfo(DWORD dwOutputStreamIndex None,[out] DWORD *pcbSize,[out] DWORD *pcbAlignment)
HRESULT None None.GetMediaType(AM_MEDIA_TYPE **ppMediaType None)
HRESULT None None.UIntPtrToUInt(_In_ UINT_PTR uOperand,_Out_ UINT *puResult)
HRESULT WINAPI None.StorageAdapterGetRecordCount(_Inout_ PWINBIO_PIPELINE Pipeline,_Out_ PSIZE_T RecordCount)
HRESULT None None.ULongToWord(_In_ ULONG ulOperand,_Out_ WORD *pwResult)
HRESULT None None.GetEmbeddedFragmentRoots([out None None,retval] SAFEARRAY **pRetVal)
public Object None.GetCurrentPropertyValue(AutomationProperty property None)
private void None.checkEveryOther_Click(Object sender None,System.EventArgs e None)
function None None.GetQuantity(productID None None,elemToUpdate None None,productLabelElem None None,buttonElem None None)
HRESULT WINAPI cryptxml.CryptXmlClose(_In_ HXML hCryptXml)
HRESULT None None.FindPin(LPCWSTR Id None,IPin **ppPin None)
protected void None.RaiseComponentChanged(MemberDescriptor member None,Object oldValue None,Object newValue None)
public void None.Add(Control child None)
BOOL None None.IsTransformAsync(IMFTransform *pMFT None)
HRESULT None None.LongLongToInt8(_In_ LONGLONG llOperand,_Out_ INT8 *pi8Result)
HRESULT None None.SetFeatureMask(D3D12_DEBUG_FEATURE Mask None)
public int None.LastIndexOf(String value None)
HRESULT None None.ULongLongToInt8(_In_ ULONGLONG ullOperand,_Out_ INT8 *pi8Result)
private void None.Button1_Click(Object sender None,EventArgs e None)
protected void None.OnEditCommand(DataListCommandEventArgs e None)
private void None.myButton_Click(Object sender None,System.EventArgs e None)
protected IDataParameter None.GetBatchedParameter(int commandIdentifier None,int parameterIndex None)
protected void None.OnCursorChanged(EventArgs e None)
public boolean None.MoveToAttribute(String localName None,String namespaceURI None)
public void None.FillEllipse(Brush brush None,float x None,float y None,float width None,float height None)
public String None.LookupPrefix(String uri None)
public StringBuilder None.Insert(int index None,short value None)
protected Object None.Evaluate(HttpContext context None,Control control None)
public void None.Insert(int index None,Parameter parameter None)
public int None.Add(Style style None)
HRESULT None None.Receive(IMediaSample *pSample None)
protected void None.RenderControl(HtmlTextWriter writer None,ControlAdapter adapter None)
HRESULT WINAPI None.StorageAdapterAddRecord(_Inout_ PWINBIO_PIPELINE Pipeline,_In_ PWINBIO_STORAGE_RECORD RecordContents)
protected void None.AcceptMethod(Socket listeningSocket None)
HRESULT None None.DWordToInt(_In_ DWORD dwOperand,_Out_ INT *piResult)
private void None.On_Inserting(Object sender None,SqlDataSourceCommandEventArgs e None)
public Type None.GetGeneratedType(CompilerResults results None)
HRESULT None None.SSIZETToUInt(_In_ SSIZE_T cbOperand,_Out_ UINT *puiResult)
protected void None.OnDeleteCommand(DataListCommandEventArgs e None)
protected void None.CopyProperties(DataControlField newField None)
private void None.Current_Changed(Object sender None,EventArgs e None)
HRESULT None None.LongPtrToIntPtr(_In_ LONG_PTR lOperand,_Out_ INT_PTR *piResult)
void None None.ValidateBtn_Click(Object sender None,EventArgs e None)
private void None.button1_Click(System.Object sender None,System.EventArgs e None)
public void None.FromXml(SecurityElement securityElement None)
HRESULT None None.SizeTToLong(_In_ size_t cbOperand,_Out_ LONG *plResult)
private void None.On_Inserting(Object sender None,SqlDataSourceCommandEventArgs e None)
private void None.On_Inserting(Object sender None,SqlDataSourceCommandEventArgs e None)
public void None.AddRange(TabPage[] pages None)
public None None.BindingCompleteEventArgs(Binding binding None,BindingCompleteState state None,BindingCompleteContext context None)
public int None.GetYear(DateTime time None)
private void None.listDragTarget_DragLeave(Object sender None,System.EventArgs e None)
public void None.EndWrite(IAsyncResult asyncResult None)
BOOL WINAPI crypt32.CryptVerifyCertificateSignature(_In_ HCRYPTPROV_LEGACY hCryptProv,_In_ DWORD dwCertEncodingType,_In_ BYTE *pbEncoded,_In_ DWORD cbEncoded,_In_ PCERT_PUBLIC_KEY_INFO pPublicKey)
Sub None None.ValidationFunctionName(source None None,arguments None None)
protected void None.WriteUTF8ResourceString(HtmlTextWriter output None,int offset None,int size None,boolean fAsciiOnly None)
HRESULT WINAPI wer.WerReportSetUIOption(_In_ HREPORT hReportHandle,_In_ WER_REPORT_UI repUITypeID,_In_ PCWSTR pwzValue)
public XmlReadMode None.ReadXml(TextReader reader None)
protected void None.OnGotFocus(EventArgs e None)
protected void None.button1_Click(Object sender None,System.EventArgs e None)
HRESULT None None.GetAllSPRMs([out] SPRMARRAY *pRegisterArray)
HRESULT None None.FindPin(LPCWSTR Id None,IPin **ppPin None)
public void None.Write(String s None)
public int None.IndexOf(String source None,char value None)
protected void None.OnInit(EventArgs e None)
public void None.Remove(Parameter parameter None)
protected void None.OnScroll(ScrollEventArgs se None)
public None None.LocalizableAttribute(boolean isLocalizable None)
protected void None.OnOpenReadCompleted(OpenReadCompletedEventArgs e None)
private void None.treeView1_KeyDown(Object sender None,KeyEventArgs e None)
public XmlReadMode None.ReadXml(XmlReader reader None)
HRESULT WINAPI kernel32.WerUnregisterAdditionalProcess(DWORD processId None)
HRESULT WINAPI winbio.WinBioCancel(_In_ WINBIO_SESSION_HANDLE SessionHandle)
public String None.GetPrefixOfNamespace(String namespaceURI None)
public boolean None.GetStandardValuesSupported(ITypeDescriptorContext context None)
protected void None.OnIsStylusCapturedChanged(DependencyPropertyChangedEventArgs e None)
BOOL None bthprops.BluetoothFindNextDevice(HBLUETOOTH_DEVICE_FIND hFind None,BLUETOOTH_DEVICE_INFO *pbtdi None)
protected Exception None.CreateReadOnlyCollectionException(String name None)
protected void None.OnCursorChanged(EventArgs e None)
HRESULT None None.WordToByte(_In_ WORD wOperand,_Out_ BYTE *pb)
function None None.GetQuantity(productID None None,elemToUpdate None None,productLabelElem None None,buttonElem None None)
public void None.Write(String value None)
protected void None.AddParsedSubObject(Object obj None)
HRESULT None None.FindPin(LPCWSTR Id None,IPin **ppPin None)
DWORD WINAPI fwpuclnt.IPsecDospStateEnum0(_In_ HANDLE engineHandle,_In_ HANDLE enumHandle,_In_ UINT32 numEntriesRequested,_Out_ IPSEC_DOSP_STATE0 ***entries,_Out_ UINT32 *numEntries)
public ContextNode None.AddStrokesToCustomRecognizer(StrokeCollection strokes None,CustomRecognizerNode customRecognizer None)
HRESULT None None.GetOutputType(DWORD dwOutputStreamIndex None,DWORD dwTypeIndex None,[out] DMO_MEDIA_TYPE *pmt)
private void None.treeView1_KeyDown(Object sender None,KeyEventArgs e None)
public void None.Write(byte[] buffer None,int offset None,int count None)
public void None.CopyFrom(Style s None)
protected String None.GetUniqueName(IDesignerSerializationManager manager None,Object value None)
public None None.BindingCompleteEventArgs(Binding binding None,BindingCompleteState state None,BindingCompleteContext context None)
public int None.GetNodeCount(boolean includeSubTrees None)
HRESULT WINAPI winbio.WinBioEnrollCommit(_In_ WINBIO_SESSION_HANDLE SessionHandle,_Out_opt_ WINBIO_IDENTITY *Identity,_Out_opt_ BOOLEAN *IsNewTemplate)
public void None.ExtractValuesFromCell(IOrderedDictionary dictionary None,DataControlFieldCell cell None,DataControlRowState rowState None,boolean includeReadOnly None)
HRESULT None taskschd.get__NewEnum([out] IUnknown **ppEnum)
private void None.button1_Click(Object sender None,System.EventArgs e None)
public String None.Remove(int startIndex None,int count None)
public void None.Write(String value None)
public DesignerActionListCollection None.GetComponentActions(IComponent component None,ComponentActionsType type None)
private void None.listDragTarget_DragOver(Object sender None,System.Windows.Forms.DragEventArgs e None)
protected void None.RaiseKeyEvent(Object key None,KeyEventArgs e None)
Sub None None.ValidationFunctionName(source None None,arguments None None)
protected void None.RaiseMouseEvent(Object key None,MouseEventArgs e None)
HRESULT None None.PtrdiffTToUIntPtr(_In_ ptrdiff_t cbOperand,_Out_ UINT_PTR *puiResult)
protected void None.OnInserting(SqlDataSourceCommandEventArgs e None)
protected void None.OnRenderToolStripContentPanelBackground(ToolStripContentPanelRenderEventArgs e None)
public void None.AddStyleAttribute(HtmlTextWriterStyle key None,String value None)
public None None.DecimalConstantAttribute(byte scale None,byte sign None,int hi None,int mid None,int low None)
public void None.AppendLiteralString(String s None)
SECURITY_STATUS WINAPI ncrypt.NCryptEncrypt(_In_ NCRYPT_KEY_HANDLE hKey,_In_ PBYTE pbInput,_In_ DWORD cbInput,_In_opt_ VOID *pPaddingInfo,_Out_ PBYTE pbOutput,_In_ DWORD cbOutput,_Out_ DWORD *pcbResult,_In_ DWORD dwFlags)
Object None None.GetPatternProvider(int patternId None)
protected void None.OnStyleChanged(EventArgs e None)
private void None.button1_Click(System.Object sender None,System.EventArgs e None)
private void None.On_Inserting(Object sender None,SqlDataSourceCommandEventArgs e None)
HRESULT WINAPI None.StorageAdapterCloseDatabase(_Inout_ PWINBIO_PIPELINE Pipeline)
public void None.AddStyleAttribute(String name None,String value None)
public void None.CopyFrom(Style s None)
public void None.CloseWebPart(WebPart webPart None)
HRESULT WINAPI kernel32.WerUnRegisterCustomMetadata(PCWSTR key None)
HRESULT None None.SizeTToPtrdiffT(_In_ size_t cbOperand,_Out_ ptrdiff_t *pcbResult)
HRESULT None None.Int64ToLongPtr(_In_ INT64 i64Operand,_Out_ LONG_PTR *plResult)
HRESULT WINAPI p2pgraph.PeerGraphConnect(_In_ HGRAPH hGraph,_In_ PCWSTR pwzPeerId,_In_ PPEER_ADDRESS pAddress,_Out_ ULONGLONG *pullConnectionId)
private void None.OnRecordDeleting(Object source None,SqlDataSourceCommandEventArgs e None)
protected void None.OnMouseDown(MouseEventArgs e None)
HRESULT None None.SSIZETToSIZET(_In_ SSIZE_T cbOperand,_Out_ SIZE_T *pcbResult)
HRESULT None None.AMovieDllRegisterServer2(BOOL bRegister None)
private void None.DecimalToCurrencyString(Object sender None,ConvertEventArgs cevent None)
function None None.GetQuantity(productID None None,elemToUpdate None None,productLabelElem None None,buttonElem None None)
HRESULT None None.GetInputMaxLatency(DWORD dwInputStreamIndex None,[out] REFERENCE_TIME *prtMaxLatency)
public int None.GetMaxByteCount(int charCount None)
protected void None.OnLoggingOut(LoginCancelEventArgs e None)
protected void None.Dispose(boolean disposing None)
protected void None.OnSet(int index None,Object oldValue None,Object newValue None)
protected void None.RenderChildren(HtmlTextWriter writer None)
public void None.DrawButtonBackground(ToolStripItemRenderEventArgs e None)
protected void None.button1_Click(Object sender None,System.EventArgs e None)
HRESULT None None.EnumMediaTypes(IEnumMediaTypes **ppEnum None)
public None None.StreamReader(String path None,Encoding encoding None,boolean detectEncodingFromByteOrderMarks None)
HRESULT WINAPI winbio.WinBioSetCredential(_In_ WINBIO_CREDENTIAL_TYPE Type,_In_ PUCHAR Credential,_In_ SIZE_T CredentialSize,_In_ WINBIO_CREDENTIAL_FORMAT Format)
HRESULT None None.ULongPtrToUIntPtr(_In_ ULONG_PTR ulOperand,_Out_ UINT_PTR *puResult)
void None None.Page_Load(Object sender None,EventArgs e None)
HRESULT None None.LongPtrToUInt(_In_ LONG_PTR lOperand,_Out_ UINT *puiResult)
public void None.Write(String value None)
private void None.DataGridTableStyleSampleLoad(Object sender None,EventArgs e None)
protected void None.OnMouseLeftButtonUp(MouseButtonEventArgs e None)
public boolean None.ReadElementContentAsBoolean(String localName None,String namespaceURI None)
public boolean None.Initialize(boolean sortingEnabled None,Control control None)
public void None.Add(Control child None)
void None None.PostFilterEvents(IDictionary events None)
protected boolean None.EnterUnsharesRow(int rowIndex None,boolean throughMouseClick None)
private void None.checkEveryOther_Click(Object sender None,System.EventArgs e None)
function None None.GetQuantity(productID None None,elemToUpdate None None,productLabelElem None None,buttonElem None None)
private void None.button1_Click(Object sender None,EventArgs e None)
DWORD WINAPI fwpuclnt.IPsecDospGetStatistics0(_In_ HANDLE engineHandle,_Out_ IPSEC_DOSP_STATISTICS0 *idpStatistics)
protected void None.OnFontChanged(EventArgs e None)
public CustomRecognizerNode None.CreateCustomRecognizer(Guid inkRecognizerId None)
public void None.ApplyResources(Object value None,String objectName None,CultureInfo culture None)
HRESULT None wuapi.get_UninstallationSteps([out] IStringCollection **retval)
HRESULT None None.IntToDWord(_In_ INT iOperand,_Out_ DWORD *pdwResult)
HRESULT None None.SSIZETToDWord(_In_ SSIZE_T cbOperand,_Out_ DWORD *pdwResult)
HRESULT WINAPI p2pgraph.PeerGraphCloseDirectConnection(_In_ HGRAPH hGraph,_In_ ULONGLONG ullConnectionId)
protected void None.RenderContents(HtmlTextWriter writer None)
DWORD WINAPI fwpuclnt.IPsecSaEnum1(_In_ HANDLE engineHandle,_In_ HANDLE enumHandle,_In_ UINT32 numEntriesRequested,_Out_ IPSEC_SA_DETAILS1 ***entries,_Out_ UINT32 *numEntriesReturned)
HRESULT None None.AddToRot(IUnknown *pUnkGraph None,DWORD *pdwRegister None)
public String None.Remove(int startIndex None,int count None)
Object None None.GetPatternProvider(int patternId None)
public None None.ArgumentOutOfRangeException(String paramName None,String message None)
protected void None.OnOwnerChanged(EventArgs e None)
private void None.dataGridView1_CellValidating(Object sender None,DataGridViewCellValidatingEventArgs e None)
private void None.currencyTextBox_TextChanged(Object sender None,EventArgs e None)
protected void None.GetCurrentValueAsFrozenCore(Freezable source None)
HRESULT None windowscodecs.GetDataPointer([out] UINT *pcbBufferSize,[out] BYTE **ppbData)
protected void None.OnPagePreLoad(Object sender None,EventArgs e None)
DWORD DHCP_API_FUNCTION dhcpsapi.DhcpV4SetPolicyEnforcement(_In_opt_ LPWSTR ServerIpAddress,_In_ BOOL fGlobalPolicy,_In_ DHCP_IP_ADDRESS SubnetAddress,_In_ BOOL Enable)
HRESULT None taskschd.get_TargetServer([out] BSTR *pServer)
private void None.AddShadow(PaintEventArgs e None)
public String None.GetKey(int index None)
HRESULT None oleaut32.VarUI2FromI2(_In_ SHORT uiIn,_Out_ USHORT *puiOut)
protected void None.ObjectDataSource1_Filtering(Object sender None,ObjectDataSourceFilteringEventArgs e None)
public void None.WriteByte(byte value None)
uint32 None cimwin32.ChangeSecurityPermissions([in] Win32_SecurityDescriptor SecurityDescriptor,[in] uint32 Option)
VOID WINAPI wer.WerFreeString(PCWSTR reportKey None)
private void None.On_Inserting(Object sender None,SqlDataSourceCommandEventArgs e None)
HRESULT WINAPI wer.WerRemoveExcludedApplication(_In_ PCWSTR pwzExeName,_In_ BOOL bAllUsers)
HWINSTA WINAPI user32.CreateWindowStation(_In_opt_ LPCTSTR lpwinsta,DWORD dwFlags None,_In_ ACCESS_MASK dwDesiredAccess,_In_opt_ LPSECURITY_ATTRIBUTES lpsa)
HWINSTA WINAPI user32.CreateWindowStationW(_In_opt_ LPCTSTR lpwinsta,DWORD dwFlags None,_In_ ACCESS_MASK dwDesiredAccess,_In_opt_ LPSECURITY_ATTRIBUTES lpsa)
HWINSTA WINAPI user32.CreateWindowStationA(_In_opt_ LPCTSTR lpwinsta,DWORD dwFlags None,_In_ ACCESS_MASK dwDesiredAccess,_In_opt_ LPSECURITY_ATTRIBUTES lpsa)
public int None.Add(TraceListener listener None)
HRESULT None wuapi.get_Date([out] DATE *retval)
protected ToolStripItem None.CreateDefaultItem(String text None,Image image None,EventHandler onClick None)
HRESULT None None.GetState(DWORD dwMilliSecsTimeout None,FILTER_STATE *State None)
protected void None.OnParentVisibleChanged(EventArgs e None)
BOOL None bthprops.BluetoothUnregisterAuthentication(HBLUETOOTH_AUTHENTICATION_REGISTRATION hRegHandle None)
void None None.Insert(int index None,Object value None)
function None None.GetQuantity(productID None None,elemToUpdate None None,productLabelElem None None,buttonElem None None)
private void None.DataGridTableStyleSampleLoad(Object sender None,EventArgs e None)
private void None.On_Click(Object source None,System.EventArgs e None)
public void None.ApplyStyleSheetSkin(Page page None)
public void None.DrawImage(Image image None,float x None,float y None)
public StringBuilder None.Insert(int index None,short value None)
HRESULT None msctf.GetScreenExt([out] RECT *prc)
public void None.Write(Object value None)
public int None.LastIndexOf(String source None,char value None,int startIndex None)
public void None.AddVerb(DesignerVerb verb None)
public boolean None.CanConvertFrom(ITypeDescriptorContext typeDescriptorContext None,Type sourceType None)
public void None.GetHueExample(PaintEventArgs e None)
DWORD WINAPI fwpuclnt.FwpmFilterUnsubscribeChanges0(_In_ HANDLE engineHandle,_In_ HANDLE changeHandle)
int None None.mbtowc(wchar_t *wchar None,const char *mbchar,size_t count None)
private void None.CreatePointsAndSizes(PaintEventArgs e None)
HRESULT STDAPICALLTYPE kernelbase.WerRegisterAppLocalDump(_In_ PCWSTR localAppDataRelativePath)
HRESULT None taskschd.get_Type([out] TASK_TRIGGER_TYPE2 *pType)
HRESULT None None.GetRuntimeId([out None None,retval] SAFEARRAY **pRetVal)
protected void None.OnPaddingChanged(EventArgs e None)
protected void None.OnError(EventArgs e None)
DWORD None c_g18030.BytesToUnicode(_In_ BYTE *lpMultiByteStr,_In_ UINT cchMultiByte,_Out_ UINT *pcchLeftOverBytes,_In_ LPWSTR lpWideCharStr,_In_ UINT cchWideChar)
private void None.button1_Click(System.Object sender None,System.EventArgs e None)
private void None.On_Click(Object source None,System.EventArgs e None)
protected void None.OnPreviewStylusInAirMove(StylusEventArgs e None)
private void None.whatIsChecked_Click(Object sender None,System.EventArgs e None)
function None None.GetQuantity(productID None None,elemToUpdate None None,productLabelElem None None,buttonElem None None)
protected void None.OnMouseDown(MouseEventArgs e None)
public void None.Write(byte[] buffer None,int offset None,int count None)
DWORD WINAPI dhcpsapi.DhcpGetOptionValueV6(_In_ LPWSTR ServerIpAddress,_In_ DWORD Flags,_In_ DHCP_OPTION_ID OptionID,_In_ WCHAR *ClassName,_In_ WCHAR *VendorName,_In_ LPDHCP_OPTION_SCOPE_INFO6 *ScopeInfo,_Out_ LPDHCP_OPTION_VALUE OptionValue)
public boolean None.HandlePostBackEvent(String eventArgument None)
public void None.CopyFrom(Style s None)
public boolean None.StartsWith(String value None)
HRESULT None None.get_SortColumns([out] BSTR *pbstrSortColumns)
public int None.LastIndexOf(String value None,StringComparison comparisonType None)
public void None.MoveTo(String destFileName None)
static String None.IsFileURI(String path None)
HRESULT None windowscodecs.GetDataPointer([out] UINT *pcbBufferSize,[out] BYTE **ppbData)
HRESULT None None.GetDefaultMenuLanguage([out] LCID *pLanguage)
public void None.LoadXml(String xml None)
HRESULT None None.EnumPins(IEnumPins **ppEnum None)
public XmlReadMode None.ReadXml(TextReader reader None)
protected None None.GenericWebPart(Control control None)
function None None.GetQuantity(productID None None,elemToUpdate None None,productLabelElem None None,buttonElem None None)
protected void None.mgr1_AuthorizeWebPart(object sender None,WebPartAuthorizationEventArgs e None)
HRESULT None None.WordToByte(_In_ WORD wOperand,_Out_ BYTE *pb)
BOOL None bthprops.BluetoothEnableIncomingConnections(HANDLE hRadio None,BOOL fEnabled None)
void None None.UploadProgressCallback(Object* /*sender*/ None,UploadProgressEventArgs* e None)
protected void None.OnRegionChanged(EventArgs e None)
private void None.On_Click(Object source None,System.EventArgs e None)
protected void None.OnRowChanged(DataRowChangeEventArgs e None)
assembly None None.name(optional None None)
protected int None.BaseIndexOf(ConfigurationElement element None)
protected void None.LoadViewState(Object savedState None)
HRESULT None None.GetVideoPosition([out] LPRECT lpSRCRect,[out] LPRECT lpDSTRect)
HRESULT WINAPI None.StorageAdapterQueryBySubject(_Inout_ PWINBIO_PIPELINE Pipeline,_In_ PWINBIO_IDENTITY Identity,_In_ WINBIO_BIOMETRIC_SUBTYPE SubFactor)
protected void None.OnItemCreated(DataListItemEventArgs e None)
public int None.EndExecuteNonQuery(IAsyncResult asyncResult None)
LONG WINAPI tapi32.phoneDevSpecific(HPHONE hPhone None,LPVOID lpParams None,DWORD dwSize None)
function None None.GetQuantity(productID None None,elemToUpdate None None,productLabelElem None None,buttonElem None None)
public boolean None.Equals(Object obj None)
public None None.ListViewItem(String text None,ListViewGroup group None)
DWORD WINAPI fwpuclnt.FwpmFilterDestroyEnumHandle0(_In_ HANDLE engineHandle,_In_ HANDLE enumHandle)
private void None.treeView1_KeyDown(Object sender None,KeyEventArgs e None)
protected void None.ObjectDataSource1_Filtering(Object sender None,ObjectDataSourceFilteringEventArgs e None)
private void None.treeView1_KeyDown(Object sender None,KeyEventArgs e None)
protected void None.RaiseCallbackEvent(String eventArgument None)
int None None.GetHashCode(Object obj None)
private void None.On_Inserting(Object sender None,SqlDataSourceCommandEventArgs e None)
function None None.GetQuantity(productID None None,elemToUpdate None None,productLabelElem None None,buttonElem None None)
void None None.UserInfo(Object sender None,EventArgs e None)
public Object None.Deserialize(IDesignerSerializationManager manager None,Object codeObject None)
protected void None.Render(HtmlTextWriter writer None)
protected void None.OnUpdating(ObjectDataSourceMethodEventArgs e None)
private void None.myButton_Click(Object sender None,System.EventArgs e None)
protected void None.button1_Click(Object sender None,System.EventArgs e None)
HRESULT None None.GetDecoderCaps([out] DVD_DECODER_CAPS *pCaps)
private void None.InsertShipper(Object source None,System.EventArgs e None)
function None None.GetQuantity(productID None None,elemToUpdate None None,productLabelElem None None,buttonElem None None)
public void None.Prepend(Matrix matrix None)
public Rectangle None.GetItemRect(int index None)
private void None.DataGridTableStyleSampleLoad(Object sender None,EventArgs e None)
HRESULT None None.Clone([out] IMFASFMutualExclusion **ppIMutex)
protected void None.LinqDataSource_Updating(object sender None,LinqDataSourceUpdateEventArgs e None)
public XmlReader None.Transform(XPathNavigator input None,XsltArgumentList args None,XmlResolver resolver None)
public int None.NextMarker(GraphicsPath path None)
HRESULT WINAPI wer.WerReportSubmit(_In_ HREPORT hReportHandle,_In_ WER_CONSENT consent,_In_ DWORD dwFlags,_Out_opt_ PWER_SUBMIT_RESULT pSubmitResult)
private void None.treeView1_KeyDown(Object sender None,KeyEventArgs e None)
public void None.MergeWith(Style s None)
public boolean None.Equals(Object o None)
protected void None.OnPagePreLoad(Object sender None,EventArgs e None)
public void None.AppendLiteralString(String s None)
function None None.GetQuantity(productID None None,elemToUpdate None None,productLabelElem None None,buttonElem None None)
public StringBuilder None.Insert(int index None,short value None)
public void None.Load(XmlReader stylesheet None,XsltSettings settings None,XmlResolver stylesheetResolver None)
private void None.On_Inserting(Object sender None,SqlDataSourceCommandEventArgs e None)
public String None.LookupNamespace(String prefix None)
public void None.CloseWebPart(WebPart webPart None)
protected void None.OnMouseLeftButtonUp(MouseButtonEventArgs e None)
public SizeF None.MeasureString(String text None,Font font None)
function None None.ReceiveServerData(arg None None,context None None)
public void None.Initialize(IComponent component None)
HRESULT None None.GetClassID(CLSID *pClsID None)
public String None.GetKey(int index None)
private void None.myButton_Click(Object sender None,System.EventArgs e None)
HRESULT WINAPI winbio.WinBioDeleteTemplate(_In_ WINBIO_SESSION_HANDLE SessionHandle,_In_ WINBIO_UNIT_ID UnitId,_In_ WINBIO_IDENTITY *Identity,_In_ WINBIO_BIOMETRIC_SUBTYPE SubFactor)
HRESULT WINAPI None.StorageAdapterPipelineCleanup(_Inout_ PWINBIO_PIPELINE Pipeline)
protected void None.OnMouseMove(MouseEventArgs e None)
public String None.GetString(String name None)
protected void None.OnParentVisibleChanged(EventArgs e None)
public None None.PathTooLongException(String message None,Exception innerException None)
public boolean None.Equals(Object obj None)
public void None.AddRange(TabPage[] pages None)
public void None.AddAttribute(String name None,String value None,boolean fEndode None)
HRESULT WINAPI None.StorageAdapterQueryExtendedInfo(_Inout_ PWINBIO_PIPELINE Pipeline,_Out_ PWINBIO_EXTENDED_STORAGE_INFO StorageInfo,_In_ SIZE_T StorageInfoSize)
protected void None.Page_Load(Object sender None,System.EventArgs e None)
HRESULT WINAPI None.StorageAdapterControlUnit(_Inout_ PWINBIO_PIPELINE Pipeline,_In_ ULONG ControlCode,_In_ PUCHAR SendBuffer,_In_ SIZE_T SendBufferSize,_In_ PUCHAR ReceiveBuffer,_In_ SIZE_T ReceiveBufferSize,_Out_ PSIZE_T ReceiveDataSize,_Out_ PULONG OperationStatus)
private void None.dataGridView1_CellValidating(Object sender None,DataGridViewCellValidatingEventArgs e None)
protected void None.OnEnter(EventArgs e None)
protected void None.OnSortCommand(DataGridSortCommandEventArgs e None)
public void None.AddStyleAttribute(HtmlTextWriterStyle key None,String value None)
private void None.PrintColumnInformation(DataGrid grid None)
public Object None.Match(String text None)
HRESULT None None.Int64ToSizeT(_In_ INT64 i64Operand,_Out_ size_t *pcbResult)
HBLUETOOTH_DEVICE_FIND None bthprops.BluetoothFindFirstDevice(BLUETOOTH_DEVICE_SEARCH_PARAMS *pbtsp None,BLUETOOTH_DEVICE_INFO *pbtdi None)
public Object None.GetCurrentPropertyValue(AutomationProperty property None)
public Object None.GetCurrentPropertyValue(AutomationProperty property None)
public boolean None.EndsWith(String value None)
protected void None.Dispose(boolean disposing None)
protected void None.OnLoggingOut(LoginCancelEventArgs e None)
public String None.ToTitleCase(String str None)
HRESULT None None.ConfirmEncryptionLoss(IShellItem *psiSource None)
public void None.RemoveRange(int index None,int count None)
protected void None.SetPostDataSelection(int selectedIndex None)
protected void None.OnMouseHover(EventArgs e None)
TCHAR None None.Edit_GetPasswordChar(HWND hwndCtl None)
public boolean None.CanValidate(Type type None)
HRESULT None None.LoadVertexShader(REFGUID resourceId None,BYTE *shaderBuffer None,UINT32 shaderBufferCount None)
public void None.DrawClosedCurve(Pen pen None,PointF[] points None)
public Stream None.EndGetRequestStream(IAsyncResult asyncResult None)
protected void None.OnParentVisibleChanged(EventArgs e None)
protected void None.OnPreRender(EventArgs e None)
public None None.ListViewItem(String[] items None,int imageIndex None,ListViewGroup group None)
public void None.OnAutoFormatApplied(DesignerAutoFormat appliedAutoFormat None)
HRESULT None None.LongPtrToInt8(_In_ LONG_PTR lOperand,_Out_ INT8 *pi8Result)
protected void None.OnLoggingOut(LoginCancelEventArgs e None)
DWORD WINAPI advapi32.SetSecurityInfo(_In_ HANDLE handle,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_In_opt_ PSID psidOwner,_In_opt_ PSID psidGroup,_In_opt_ PACL pDacl,_In_opt_ PACL pSacl)
protected void None.OnChangePasswordError(EventArgs e None)
SECURITY_STATUS WINAPI ncrypt.NCryptSignHash(_In_ NCRYPT_KEY_HANDLE hKey,_In_opt_ VOID *pPaddingInfo,_In_ PBYTE pbHashValue,_In_ DWORD cbHashValue,_Out_ PBYTE pbSignature,_In_ DWORD cbSignature,_Out_ DWORD *pcbResult,_In_ DWORD dwFlags)
HRESULT WINAPI wer.WerStoreQueryReportMetadataV2(HREPORTSTORE store None,PCWSTR reportKey None,WER_REPORT_METADATA_V2* metadata None)
public int None.LastIndexOf(String source None,char value None,int startIndex None,int count None)
function None None.GetQuantity(productID None None,elemToUpdate None None,productLabelElem None None,buttonElem None None)
public void None.InsertBefore(XmlReader newSibling None)
HRESULT WINAPI p2pgraph.PeerGraphStartup(_In_ WORD wVersionRequested,_Out_ PPEER_VERSION_DATA pVersionData)
protected void None.OnDragOver(DragEventArgs e None)
function None None.myfunction(arg1 None None,arg2 None None)
public void None.BeginWebPartConnecting(WebPart webPart None)
BOOL APIENTRY faultrep.AddERExcludedApplication(_In_ LPCTSTR szApplication)
BOOL APIENTRY faultrep.AddERExcludedApplicationW(_In_ LPCTSTR szApplication)
BOOL APIENTRY faultrep.AddERExcludedApplicationA(_In_ LPCTSTR szApplication)
private void None.On_Click(Object source None,System.EventArgs e None)
protected void None.OnTreeNodeDataBound(TreeNodeEventArgs e None)
HRESULT WINAPI winbio.WinBioCloseSession(_In_ WINBIO_SESSION_HANDLE SessionHandle)
HRESULT WINAPI kernel32.WerSetFlags(_In_ DWORD dwFlags)
protected void None.OnDragLeave(DragEventArgs e None)
protected void None.SetTopLevel(boolean value None)
HRESULT None None.DWordToLongPtr(_In_ DWORD dwOperand,_Out_ LONG_PTR *plResult)
function None None.GetQuantity(productID None None,elemToUpdate None None,productLabelElem None None,buttonElem None None)
protected void None.OnDragEnter(DragEventArgs drgevent None)
private void None.OnDelete(Object sender None,System.EventArgs e None)
protected void None.OnInit(EventArgs e None)
void None None.Page_Load(Object sender None,EventArgs e None)
public void None.Write(long value None)
public void None.PlayRecord(EmfPlusRecordType recordType None,int flags None,int dataSize None,byte[] data None)
protected void None.RenderContents(HtmlTextWriter writer None)
public void None.Page_Load(Object sender None,EventArgs e None)
protected void None.LoadViewState(Object savedState None)
protected void None.OnLeave(int rowIndex None,boolean throughMouseClick None)
public XmlAttribute None.SetAttributeNode(String localName None,String namespaceURI None)
protected void None.RenderControl(HtmlTextWriter writer None,ControlAdapter adapter None)
public CustomRecognizerNode None.CreateCustomRecognizer(Guid inkRecognizerId None)
protected void None.AddDesignTimeCssAttributes(IDictionary styleAttributes None)
private void None.On_Click(Object source None,System.EventArgs e None)
public void None.Insert(int index None,Parameter parameter None)
function None None.GetQuantity(productID None None,elemToUpdate None None,productLabelElem None None,buttonElem None None)
public StringBuilder None.Remove(int startIndex None,int length None)
public void None.AddAt(int index None,Control child None)
protected void None.OnMouseLeftButtonUp(MouseButtonEventArgs e None)
protected void None.OnInsertComplete(int index None,Object value None)
private void None.PrintColumnInformation(DataGrid grid None)
protected void None.OnVerifyingUser(LoginCancelEventArgs e None)
protected void None.OnItemCommand(DataListCommandEventArgs e None)
protected void None.ObjectDataSource1_Filtering(Object sender None,ObjectDataSourceFilteringEventArgs e None)
public IPermission None.GetPermission(Type permClass None)
HRESULT None None.GetCurrentAngle([out] ULONG *pulAnglesAvailable,[out] ULONG *pulCurrentAngle)
LONG WINAPI tapi32.phoneGetIcon(DWORD dwDeviceID None,LPCSTR lpszDeviceClass None,LPHICON lphIcon None)
LONG WINAPI tapi32.phoneGetIconW(DWORD dwDeviceID None,LPCSTR lpszDeviceClass None,LPHICON lphIcon None)
LONG WINAPI tapi32.phoneGetIconA(DWORD dwDeviceID None,LPCSTR lpszDeviceClass None,LPHICON lphIcon None)
HRESULT None None.GetMediaTime(LONGLONG *pStart None,LONGLONG *pEnd None)
private void None.DataGridTableStyleSampleLoad(Object sender None,EventArgs e None)
DWORD None bthprops.BluetoothSdpGetContainerElementData(_In_ LPBYTE pContainerStream,_In_ ULONG cbContainerLength,_Inout_ HBLUETOOTH_CONTAINER_ELEMENT *pElement,_Out_ PSDP_ELEMENT_DATA pData)
HRESULT None None.PtrdiffTToULong(_In_ ptrdiff_t cbOperand,_Out_ ULONG *pulResult)
protected void None.RenderAttributes(HtmlTextWriter writer None)
private void None.On_Inserting(Object sender None,SqlDataSourceCommandEventArgs e None)
protected void None.OnRenderSizeChanged(SizeChangedInfo sizeInfo None)
public Object None.Deserialize(IDesignerSerializationManager manager None,Object codeObject None)
private void None.button1_Click(Object sender None,EventArgs e None)
LPVOID WINAPI kernel32.CreateFiberEx(_In_ SIZE_T dwStackCommitSize,_In_ SIZE_T dwStackReserveSize,_In_ DWORD dwFlags,_In_ LPFIBER_START_ROUTINE lpStartAddress,_In_opt_ LPVOID lpParameter)
protected void None.OnRenderGrip(ToolStripGripRenderEventArgs e None)
HRESULT WINAPI winbio.WinBioUnregisterEventMonitor(_In_ WINBIO_SESSION_HANDLE SessionHandle)
HRESULT None None.GetDefaultSubpictureLanguage([out] LCID *pLanguage,[out] DVD_SUBPICTURE_LANG_EXT *pSubpictureExtension)
protected void None.OnLostFocus(EventArgs e None)
public void None.PaintCellsContent(Rectangle clipBounds None)
protected void None.OnMultilineChanged(EventArgs e None)
private void None.textBox1_Enter(Object sender None,System.EventArgs e None)
HRESULT None None.SetMediaType(AM_MEDIA_TYPE *pMediaType None)
HRESULT WINAPI p2pgraph.PeerGraphSetNodeAttributes(_In_ HGRAPH hGraph,_In_ PCWSTR pwzAttributes)
function None None.GetQuantity(productID None None,elemToUpdate None None,productLabelElem None None,buttonElem None None)
private void None.whatIsChecked_Click(Object sender None,System.EventArgs e None)
SerializableAttribute None None.TypeConverterAttribute(System.Windows.Forms.ListViewItemConverter None None)
void None None.UserInfo(Object sender None,EventArgs e None)
protected void None.OnPropertyChanging(PropertyChangedEventArgs pcevent None)
HRESULT None None.ConfirmEncryptionLoss(IShellItem *psiSource None)
private void None.treeView1_KeyDown(Object sender None,KeyEventArgs e None)
HRESULT WINAPI None.StorageAdapterFirstRecord(_Inout_ PWINBIO_PIPELINE Pipeline)
public boolean None.MoveToFollowing(XPathNodeType type None)
public int None.GetChars(byte[] bytes None,int byteIndex None,int byteCount None,char[] chars None,int charIndex None)
HRESULT None None.IntToUInt(_In_ INT iOperand,_Out_ UINT *puResult)
public String None.GetDesignTimeHtml(DesignerRegionCollection regions None)
protected void None.OnStylusMove(StylusEventArgs e None)
HRESULT WINAPI wer.WerAddExcludedApplication(_In_ PCWSTR pwzExeName,_In_ BOOL bAllUsers)
public boolean None.MoveToAttribute(String localName None,String namespaceURI None)
public void None.AddBrowser(String browserName None)
public void None.Write(String format None,Object arg0 None,Object arg1 None)
public void None.ScrollControlIntoView(Control activeControl None)
private void None.On_Inserting(Object sender None,SqlDataSourceCommandEventArgs e None)
private void None.CreatePointsAndSizes(PaintEventArgs e None)
HRESULT WINAPI wer.WerStoreOpen(REPORT_STORE_TYPES storeType None,HREPORTSTORE* store None)
HRESULT None taskschd.get_TargetServer([out] BSTR *pServer)
public HtmlElement None.CreateElement(String elementTag None)
private void None.whatIsChecked_Click(Object sender None,System.EventArgs e None)
protected void None.OnRowDeleted(DataRowChangeEventArgs e None)
private void None.DecimalToCurrencyString(Object sender None,ConvertEventArgs cevent None)
HRESULT None None.ShortToUShort(_In_ SHORT sOperand,_Out_ USHORT *pusResult)
LONG WINAPI winscard.SCardListCards(_In_ SCARDCONTEXT hContext,_In_opt_ LPCBYTE pbAtr,_In_ LPCGUID rgguidInterfaces,_In_ DWORD cguidInterfaceCount,_Out_ LPTSTR mszCards,_Inout_ LPDWORD pcchCards)
LONG WINAPI winscard.SCardListCardsW(_In_ SCARDCONTEXT hContext,_In_opt_ LPCBYTE pbAtr,_In_ LPCGUID rgguidInterfaces,_In_ DWORD cguidInterfaceCount,_Out_ LPTSTR mszCards,_Inout_ LPDWORD pcchCards)
LONG WINAPI winscard.SCardListCardsA(_In_ SCARDCONTEXT hContext,_In_opt_ LPCBYTE pbAtr,_In_ LPCGUID rgguidInterfaces,_In_ DWORD cguidInterfaceCount,_Out_ LPTSTR mszCards,_Inout_ LPDWORD pcchCards)
public DateTime None.AddMinutes(DateTime time None,int minutes None)
HRESULT None None.GetPointer(BYTE **ppBuffer None)
String None None.Format(String format None,Object arg None,IFormatProvider formatProvider None)
private void None.OnRecordDeleting(Object source None,SqlDataSourceCommandEventArgs e None)
private void None.MyListView_AfterLabelEdit(Object sender None,System.Windows.Forms.LabelEditEventArgs e None)
public void None.InferXmlSchema(XmlReader reader None,String[] nsArray None)
private void None.listDragTarget_DragOver(Object sender None,System.Windows.Forms.DragEventArgs e None)
protected void None.OnHelpRequest(EventArgs e None)
private void None.ChangeTextRenderingHintAndTextContrast(PaintEventArgs e None)
public Form None.ResolveFormReference(String formID None)
SECURITY_STATUS WINAPI ncrypt.NCryptImportKey(_In_ NCRYPT_PROV_HANDLE hProvider,_In_opt_ NCRYPT_KEY_HANDLE hImportKey,_In_ LPCWSTR pszBlobType,_In_opt_ NCryptBufferDesc *pParameterList,_Out_ NCRYPT_KEY_HANDLE *phKey,_In_ PBYTE pbData,_In_ DWORD cbData,_In_ DWORD dwFlags)
public String None.GetKey(int index None)
BOOL WINAPI advapi32.LookupPrivilegeDisplayName(_In_opt_ LPCTSTR lpSystemName,_In_ LPCTSTR lpName,_Out_opt_ LPTSTR lpDisplayName,_Inout_ LPDWORD cchDisplayName,_Out_ LPDWORD lpLanguageId)
BOOL WINAPI advapi32.LookupPrivilegeDisplayNameW(_In_opt_ LPCTSTR lpSystemName,_In_ LPCTSTR lpName,_Out_opt_ LPTSTR lpDisplayName,_Inout_ LPDWORD cchDisplayName,_Out_ LPDWORD lpLanguageId)
BOOL WINAPI advapi32.LookupPrivilegeDisplayNameA(_In_opt_ LPCTSTR lpSystemName,_In_ LPCTSTR lpName,_Out_opt_ LPTSTR lpDisplayName,_Inout_ LPDWORD cchDisplayName,_Out_ LPDWORD lpLanguageId)
protected void None.LoadViewState(Object savedState None)
DWORD DHCP_API_FUNCTION dhcpsapi.DhcpV4FailoverDeleteRelationship(_In_opt_ LPWSTR ServerIpAddress,_In_ LPWSTR pRelationshipName)
public CustomRecognizerNode None.CreateCustomRecognizer(Guid inkRecognizerId None)
HRESULT WINAPI winbio.WinBioMonitorPresence(_In_ WINBIO_SESSION_HANDLE SessionHandle,_In_ WINBIO_UNIT_ID UnitId)
HRESULT WINAPI None.StorageAdapterGetDataFormat(_Inout_ PWINBIO_PIPELINE Pipeline,_Out_ PWINBIO_UUID Format,_Out_ PWINBIO_VERSION Version)
protected void None.OnPreviewDragOver(DragEventArgs e None)
private void None.currencyTextBox_TextChanged(Object sender None,EventArgs e None)
protected void None.OnControlAdded(ControlEventArgs e None)
HRESULT WINAPI p2pgraph.PeerGraphUniversalTimeToPeerTime(_In_ HGRAPH hGraph,_In_ FILETIME *pftUniversalTime,_Out_ FILETIME *pftPeerTime)
protected void None.OnItemCreated(DataGridItemEventArgs e None)
private void None.listView1_BeforeLabelEdit(Object sender None,System.Windows.Forms.LabelEditEventArgs e None)
public void None.RenderEndTag(HtmlTextWriter writer None)
protected void None.OnDataBinding(EventArgs e None)
DWORD WINAPI fwpuclnt.IPsecSaContextSubscriptionsGet0(_In_ HANDLE engineHandle,_Out_ IPSEC_SA_CONTEXT_SUBSCRIPTION0 ***entries,_Out_ UINT32 *numEntries)
public void None.Initialize(IComponent component None)
protected void None.button1_Click(Object sender None,System.EventArgs e None)
protected void None.ObjectDataSource1_Filtering(Object sender None,ObjectDataSourceFilteringEventArgs e None)
private void None.textBox1_Validating(Object sender None,System.ComponentModel.CancelEventArgs e None)
private void None.myButton_Click(Object sender None,System.EventArgs e None)
HRESULT None None.GetPreroll([out] LONGLONG *pllPreroll)
HRESULT WINAPI kernel32.WerRegisterAdditionalProcess(DWORD processId None,DWORD captureExtraInfoForThreadId None)
private void None.currencyTextBox_TextChanged(Object sender None,EventArgs e None)
function None None.GetQuantity(productID None None,elemToUpdate None None,productLabelElem None None,buttonElem None None)
private void None.ShowPropertiesOfSlateBlue(PaintEventArgs e None)
public int None.IndexFromPoint(int x None,int y None)
public int None.GetDayOfYear(DateTime time None)
HRESULT None None.GetState(DWORD dwMilliSecsTimeout None,FILTER_STATE *State None)
private void None.dataGridView1_CellValidating(Object sender None,DataGridViewCellValidatingEventArgs e None)
public void None.AppendLiteralString(String s None)
public String None.GetString(String name None)
BOOL None None.SetFormat(BYTE *pFormat None,ULONG length None)
HRESULT None None.ULongToChar(_In_ ULONG ulOperand,_Out_ __wchar_t *pch)
private void None.AddShadow(PaintEventArgs e None)
public StringBuilder None.Insert(int index None,short value None)
private void None.SelectNode(TreeNode node None)
protected void None.OnControlAdded(ControlEventArgs e None)
public void None.RaiseUnsupportedCapabilitiesError(DataSourceView view None)
HRESULT None None.GetVideoWindow([out] HWND *phwndVideo)
public None None.StringBuilder(String value None)
protected boolean None.ProcessMnemonic(char charCode None)
ConstructorInfo None None.GetConstructor(BindingFlags bindingAttr None,Binder binder None,CallingConventions callConvention None,Type[] types None,ParameterModifier[] modifiers None)
public None None.ArgumentOutOfRangeException(String paramName None,String message None)
protected void None.SetRegionContent(EditableDesignerRegion region None,String content None)
protected void None.OnItemUpdating(FormViewUpdateEventArgs e None)
HRESULT WINAPI wer.WerReportAddDump(_In_ HREPORT hReportHandle,_In_ HANDLE hProcess,_In_opt_ HANDLE hThread,_In_ WER_DUMP_TYPE dumpType,_In_opt_ PWER_EXCEPTION_INFORMATION pExceptionParam,_In_opt_ PWER_DUMP_CUSTOM_OPTIONS pDumpCustomOptions,_In_ DWORD dwFlags)
SECURITY_STATUS WINAPI ncrypt.NCryptKeyDerivation(_In_ NCRYPT_KEY_HANDLE hKey,_In_ NCryptBufferDesc *pParameterList,_Out_ PUCHAR pbDerivedKey,_In_ DWORD cbDerivedKey,_Out_ DWORD *pcbResult,_In_ ULONG dwFlags)
private void None.showCheckedNodesButton_Click(Object sender None,EventArgs e None)
public Object None.Deserialize(XmlReader xmlReader None,String encodingStyle None,XmlDeserializationEvents events None)
public Object None.ConvertTo(ITypeDescriptorContext context None,CultureInfo culture None,Object value None,Type destinationType None)
function None None.GetQuantity(productID None None,elemToUpdate None None,productLabelElem None None,buttonElem None None)
protected void None.ConditionalSetPendingBreakAfterInline(XhtmlMobileTextWriter writer None)
protected void None.OnInit(EventArgs e None)
HRESULT None None.HasNullSourceOrigin([out] BOOL *pfNullSOurceOrigin)
function None None.GetQuantity(productID None None,elemToUpdate None None,productLabelElem None None,buttonElem None None)
protected Object None.Evaluate(HttpContext context None,Control control None)
protected void None.OnPaintAdornments(PaintEventArgs pe None)
protected void None.OnActivated(EventArgs e None)
public ContextNode None.AddStrokesToCustomRecognizer(StrokeCollection strokes None,CustomRecognizerNode customRecognizer None)
private void None.whatIsChecked_Click(Object sender None,System.EventArgs e None)
Sub None None.ValidationFunctionName(source None None,arguments None None)
protected void None.PreFilterProperties(IDictionary properties None)
private void None.On_Click(Object source None,System.EventArgs e None)
HRESULT WINAPI winbio.WinBioAsyncOpenFramework(_In_ WINBIO_ASYNC_NOTIFICATION_METHOD NotificationMethod,_In_opt_ HWND TargetWindow,_In_opt_ UINT MessageCode,_In_opt_ PWINBIO_ASYNC_COMPLETION_CALLBACK CallbackRoutine,_In_opt_ PVOID UserData,_In_ BOOL AsynchronousOpen,_Out_ WINBIO_FRAMEWORK_HANDLE *FrameworkHandle)
protected void None.OnScroll(ScrollEventArgs se None)
public void None.SetStrokeCaps(LineCap startCap None,LineCap endCap None)
public XmlAttribute None.CreateAttribute(String name None)
public String None.ResolveUrl(String relativeUrl None)
HRESULT None None.ConnectedTo(IPin **ppPin None)
HRESULT WINAPI winbio.WinBioWait(_In_ WINBIO_SESSION_HANDLE SessionHandle)
protected void None.OnCreatedUser(EventArgs e None)
protected IDataParameter None.GetBatchedParameter(int commandIdentifier None,int parameterIndex None)
private void None.MyListView_AfterLabelEdit(Object sender None,System.Windows.Forms.LabelEditEventArgs e None)
protected void None.LoadControlState(Object savedState None)
private void None.AddShadow(PaintEventArgs e None)
public void None.Remove(String name None)
LPVOID WINAPI crypt32.CryptMemRealloc(_In_ LPVOID pv,_In_ ULONG cbSize)
private void None.textBox1_Enter(Object sender None,System.EventArgs e None)
BYTE None None.WdfUsbInterfaceGetConfiguredSettingIndex(_In_ WDFUSBINTERFACE Interface)
public int None.GetWeekOfYear(DateTime time None,CalendarWeekRule rule None,DayOfWeek firstDayOfWeek None)
public void None.Add(Control child None)
public void None.AddRange(TabPage[] pages None)
public XmlReadMode None.ReadXml(XmlReader reader None)
protected String None.GetUniqueName(IDesignerSerializationManager manager None,Object value None)
public XmlElement None.CreateElement(String prefix None,String localName None,String namespaceURI None)
public void None.Write(String format None,Object arg0 None,Object arg1 None)
protected void None.AddedControl(Control control None,int index None)
public void None.CloseWebPart(WebPart webPart None)
public boolean None.Equals(Object obj None)
public Object None.GetEntity(Uri absoluteUri None,String role None,Type ofObjectToReturn None)
HRESULT None None.get_CachedDescribedBy([out None None,retval] IUIAutomationElementArray **retVal)
HRESULT None None.GetRelativePosition([out] DWORD *pdwLeft,[out] DWORD *pdwTop,[out] DWORD *pdwRight,[out] DWORD *pdwBottom)
function None None.test(name None None,address None None)
function None None.GetQuantity(productID None None,elemToUpdate None None,productLabelElem None None,buttonElem None None)
public None None.XmlSerializerVersionAttribute(Type type None)
protected void None.RaiseKeyEvent(Object key None,KeyEventArgs e None)
public String None.GetEditableDesignerRegionContent(EditableDesignerRegion region None)
HRESULT WINAPI wer.WerReportSubmit(_In_ HREPORT hReportHandle,_In_ WER_CONSENT consent,_In_ DWORD dwFlags,_Out_opt_ PWER_SUBMIT_RESULT pSubmitResult)
public String None.GetKey(int index None)
protected void None.OnPaintBackground(PaintEventArgs e None)
HRESULT WINAPI winbio.WinBioEnumDatabases(_In_ WINBIO_BIOMETRIC_TYPE Factor,_Out_ WINBIO_STORAGE_SCHEMA **StorageSchemaArray,_Out_ SIZE_T *StorageCount)
public int None.IndexOf(String source None,char value None)
function None None.GetQuantity(productID None None,elemToUpdate None None,productLabelElem None None,buttonElem None None)
HRESULT None None.SetPointer(BYTE *ptr None,LONG cBytes None)
public void None.CloseWebPart(WebPart webPart None)
protected int None.ExecuteDelete(IDictionary keys None,IDictionary oldValues None)
DWORD None fwpuclnt.IPsecSaContextDeleteById0(_In_ HANDLE engineHandle,_In_ UINT64 id)
public void None.Add(Control child None)
function None None.setMilliseconds(numMilli : Number)
protected void None.OnKeyDown(KeyEventArgs e None)
public int None.GetYear(DateTime time None)
HRESULT WINAPI winbio.WinBioEnrollBegin(_In_ WINBIO_SESSION_HANDLE SessionHandle,_In_ WINBIO_BIOMETRIC_SUBTYPE SubFactor,_In_ WINBIO_UNIT_ID UnitId)
public void None.Write(String s None)
protected void None.RenderAttributes(HtmlTextWriter writer None)
protected void None.AcceptMethod(Socket listeningSocket None)
function None None.GetQuantity(productID None None,elemToUpdate None None,productLabelElem None None,buttonElem None None)
HRESULT None None.GetCurrentUOPS([out] ULONG *pulUOPs)
BOOL None None.IsSpecialSample(IMediaSample *pSample None)
protected void None.OnInsert(int index None,Object value None)
BOOL None None.SetupDiOpenDeviceInterface(_In_ HDEVINFO DeviceInfoSet,_In_ PCTSTR DevicePath,_In_ DWORD OpenFlags,_Out_opt_ PSP_DEVICE_INTERFACE_DATA DeviceInterfaceData)
private void None.ShowPropertiesOfSlateBlue(PaintEventArgs e None)
public None None.ConsumerConnectionPoint(MethodInfo callbackMethod None,Type interfaceType None,Type controlType None,String displayName None,String id None,boolean allowsMultipleConnections None)
SECURITY_STATUS WINAPI ncrypt.NCryptEncrypt(_In_ NCRYPT_KEY_HANDLE hKey,_In_ PBYTE pbInput,_In_ DWORD cbInput,_In_opt_ VOID *pPaddingInfo,_Out_ PBYTE pbOutput,_In_ DWORD cbOutput,_Out_ DWORD *pcbResult,_In_ DWORD dwFlags)
public void None.FromArgb3(PaintEventArgs e None)
public void None.ProcessMessage(SoapMessage message None)
function None None.RegExpMultilineDemo(flag None None)
DWORD WINAPI fwpuclnt.IPsecDospStateDestroyEnumHandle0(_In_ HANDLE engineHandle,_Inout_ HANDLE enumHandle)
HRESULT WINAPI winbio.WinBioIdentifyWithCallback(_In_ WINBIO_SESSION_HANDLE SessionHandle,_In_ PWINBIO_IDENTIFY_CALLBACK *IdentifyCallback,_In_opt_ PVOID IdentifyCallbackContext)
protected void None.Page_Load(Object sender None,System.EventArgs e None)
HRESULT WINAPI winbio.WinBioRegisterEventMonitor(_In_ WINBIO_SESSION_HANDLE SessionHandle,_In_ WINBIO_EVENT_TYPE EventMask,_In_ PWINBIO_EVENT_CALLBACK EventCallback,_In_ PVOID EventCallbackContext)
public boolean None.Equals(Object obj None)
HRESULT None None.GetTime(REFERENCE_TIME *pTimeStart None,REFERENCE_TIME *pTimeEnd None)
HRESULT None None.GetAllocator([out] IMemAllocator **ppAllocator)
private void None.DataGridTableStyleSampleLoad(Object sender None,EventArgs e None)
public void None.FillEllipse(Brush brush None,float x None,float y None,float width None,float height None)
public XmlReader None.Transform(IXPathNavigable input None,XsltArgumentList args None)
protected void None.OnScroll(ScrollEventArgs se None)
protected void None.SetStyle(ControlStyles flag None,boolean value None)
HRESULT None None.ULongPtrToUChar(_In_ ULONG_PTR ulOperand,_Out_ UCHAR *pch)
public boolean None.IsPresent(Object feature None)
public int None.Fill(DataSet dataSet None,int startRecord None,int maxRecords None,String srcTable None)
private void None.newToolStripMenuItem_Click(object sender None,EventArgs e None)
protected String None.GetUniqueName(IDesignerSerializationManager manager None,Object value None)
public DateTime None.AddDays(DateTime time None,int days None)
protected void None.OnBackgroundImageLayoutChanged(EventArgs e None)
protected void None.LinqDataSource_Updating(object sender None,LinqDataSourceUpdateEventArgs e None)
HKL WINAPI user32.LoadKeyboardLayout(_In_ LPCTSTR pwszKLID,_In_ UINT Flags)
HKL WINAPI user32.LoadKeyboardLayoutW(_In_ LPCTSTR pwszKLID,_In_ UINT Flags)
HKL WINAPI user32.LoadKeyboardLayoutA(_In_ LPCTSTR pwszKLID,_In_ UINT Flags)
HRESULT None certenroll.get_UniqueContainerName([out] BSTR *pValue)
SECURITY_STATUS WINAPI ncrypt.NCryptSecretAgreement(_In_ NCRYPT_KEY_HANDLE hPrivKey,_In_ NCRYPT_KEY_HANDLE hPubKey,_Out_ NCRYPT_SECRET_HANDLE *phSecret,_In_ DWORD dwFlags)
protected HtmlTextWriterAttribute None.GetAttributeKey(String attrName None)
public ContextNode None.AddStrokesToCustomRecognizer(StrokeCollection strokes None,CustomRecognizerNode customRecognizer None)
public int None.GetSecond(DateTime time None)
SerializableAttribute None None.ClassInterfaceAttribute(ClassInterfaceType.None None None)
public String None.PadRight(int totalWidth None,char paddingChar None)
public boolean None.IsDescendant(XPathNavigator nav None)
protected void None.OnVisibleChanged(EventArgs e None)
public boolean None.Initialize(boolean sortingEnabled None,Control control None)
DWORD WINAPI fwpuclnt.IPsecSaDestroyEnumHandle0(_In_ HANDLE engineHandle,_In_ HANDLE enumHandle)
HRESULT None None.SIZETToLong(_In_ SIZE_T cbOperand,_Out_ LONG *plResult)
DWORD None dhcpsapi.DhcpGetAllOptionValuesV6(_In_ LPWSTR ServerIpAddress,_In_ DWORD Flags,_In_ LPDHCP_OPTION_SCOPE_INFO6 ScopeInfo,_Out_ LPDHCP_ALL_OPTION_VALUES *Values)
public int None.IndexOf(String source None,char value None,int startIndex None,CompareOptions options None)
HRESULT WINAPI winbio.WinBioGetEnabledSetting(_Out_ BOOLEAN *Value,_Out_ PWINBIO_SETTING_SOURCE_TYPE Source)
private void None.showCheckedNodesButton_Click(Object sender None,EventArgs e None)
protected void None.AddTarget(String id None,Object o None)
protected void None.OnItemUpdating(FormViewUpdateEventArgs e None)
protected void None.Page_Load(Object sender None,System.EventArgs e None)
protected Rectangle None.GetScaledBounds(Rectangle bounds None,SizeF factor None,BoundsSpecified specified None)
private void None.SelectNode(TreeNode node None)
protected void None.LinqDataSource_Updating(object sender None,LinqDataSourceUpdateEventArgs e None)
public None None.ListViewItem(String[] items None,int imageIndex None,ListViewGroup group None)
public None None.ListViewItem(String[] items None,String imageKey None,ListViewGroup group None)
public boolean None.MoveToNext(String localName None,String namespaceURI None)
POSITION None None.Next(POSITION pos None)
public void None.InferXmlSchema(XmlReader reader None,String[] nsArray None)
protected void None.OnBackColorChanged(EventArgs e None)
private void None.button4_Click(Object sender None,System.EventArgs e None)
protected void None.OnPreRender(EventArgs e None)
public void None.AddVerb(DesignerVerb verb None)
protected boolean None.IsInputKey(Keys keyData None)
public int None.LastIndexOf(String source None,String value None,int startIndex None)
int None None.TransformBlock(byte[] inputBuffer None,int inputOffset None,int inputCount None,byte[] outputBuffer None,int outputOffset None)
public XmlAttribute None.CreateAttribute(String name None)
protected void None.OnInserting(SqlDataSourceCommandEventArgs e None)
public void None.Measure(Size availableSize None)
public boolean None.Equals(Object obj None)
public None None.ParseChildrenAttribute(Type childControlType None)
private void None.DataGridTableStyleSampleLoad(Object sender None,EventArgs e None)
protected void None.OnPreviewStylusInAirMove(StylusEventArgs e None)
public String None.GetMonthName(int month None)
public int None.GetMonth(DateTime time None)
protected void None.RaisePostBackEvent(String eventArgument None)
Sub None None.ValidationFunctionName(source None None,arguments None None)
HRESULT None None.Clone(IEnumPins **ppEnum None)
HRESULT WINAPI winbio.WinBioEnrollCaptureWithCallback(_In_ WINBIO_SESSION_HANDLE SessionHandle,_In_ PWINBIO_ENROLL_CAPTURE_CALLBACK EnrollCallback,_In_opt_ PVOID EnrollCallbackContext)
protected void None.RenderAttributes(HtmlTextWriter writer None)
protected void None.OnPreRender(EventArgs e None)
public boolean None.Equals(Object obj None)
HRESULT None None.QueryPinInfo(PIN_INFO *pInfo None)
protected void None.OnVerifyingUser(LoginCancelEventArgs e None)
HRESULT WINAPI winbio.WinBioCloseFramework(_In_ WINBIO_FRAMEWORK_HANDLE FrameworkHandle)
protected void None.OnControlRemoved(ControlEventArgs e None)
HRESULT WINAPI wer.WerReportCreate(_In_ PCWSTR pwzEventType,_In_ WER_REPORT_TYPE repType,_In_opt_ PWER_REPORT_INFORMATION pReportInformation,_Out_ HREPORT *phReportHandle)
protected Size None.MeasureCore(Size availableSize None)
LONG WINAPI tapi32.phoneNegotiateAPIVersion(HPHONEAPP hPhoneApp None,DWORD dwDeviceID None,DWORD dwAPILowVersion None,DWORD dwAPIHighVersion None,LPDWORD lpdwAPIVersion None,LPPHONEEXTENSIONID lpExtensionID None)
boolean None None.ContainsKey(TKey key None)
public void None.WriteByte(byte value None)
public None None.BulletedListEventArgs(int index None)
HRESULT WINAPI p2pgraph.PeerGraphGetItemCount(_In_ HPEERENUM hPeerEnum,_Out_ PULONG pCount)
void None None.ValidateBtn_Click(Object sender None,EventArgs e None)
HRESULT None None.HasNullSourceOrigin([out] BOOL *pfNullSOurceOrigin)
protected void None.OnHandleDestroyed(EventArgs e None)
protected void None.Uninitialize(IServiceProvider provider None)
private void None.On_Click(Object source None,System.EventArgs e None)
BOOL WINAPI kernel32.SleepConditionVariableSRW(_Inout_ PCONDITION_VARIABLE ConditionVariable,_Inout_ PSRWLOCK SRWLock,_In_ DWORD dwMilliseconds,_In_ ULONG Flags)
public XmlNode None.SelectSingleNode(String xpath None,XmlNamespaceManager nsmgr None)
public void None.AddAttribute(String name None,String value None,boolean fEndode None)
protected void None.ObjectDataSource1_Filtering(Object sender None,ObjectDataSourceFilteringEventArgs e None)
HRESULT None None.GetCurrentVideoAttributes([out] DVD_VideoAttributes *pATR)
private void None.button1_Click(Object sender None,System.EventArgs e None)
private void None.OnRecordDeleting(Object source None,SqlDataSourceCommandEventArgs e None)
void None None.Page_Load(Object sender None,EventArgs e None)
private void None.button1_Click(Object sender None,System.EventArgs e None)
SECURITY_STATUS WINAPI ncrypt.NCryptVerifySignature(_In_ NCRYPT_KEY_HANDLE hKey,_In_opt_ VOID *pPaddingInfo,_In_ PBYTE pbHashValue,_In_ DWORD cbHashValue,_In_ PBYTE pbSignature,_In_ DWORD cbSignature,_In_ DWORD dwFlags)
HRESULT WINAPI p2pgraph.PeerGraphPeerTimeToUniversalTime(_In_ HGRAPH hGraph,_In_ FILETIME *pftPeerTime,_Out_ FILETIME *pftUniversalTime)
private void None.BindingManagerBase_CurrentChanged(Object sender None,EventArgs e None)
LPVOID WINAPI kernel32.CreateFiberEx(_In_ SIZE_T dwStackCommitSize,_In_ SIZE_T dwStackReserveSize,_In_ DWORD dwFlags,_In_ LPFIBER_START_ROUTINE lpStartAddress,_In_opt_ LPVOID lpParameter)
DWORD WINAPI fwpuclnt.IPsecGetStatistics0(_In_ HANDLE engineHandle,_Out_ IPSEC_STATISTICS1 *ipsecStatistics)
public None None.LCIDConversionAttribute(int lcid None)
protected void None.SetPostDataSelection(int selectedIndex None)
private void None.myButton_Click(Object sender None,System.EventArgs e None)
public XmlElement None.CreateElement(String prefix None,String localName None,String namespaceURI None)
protected void None.OnPagePreLoad(Object sender None,EventArgs e None)
protected void None.SetStringResourcePointer(Object stringResourcePointer None,int maxResourceOffset None)
function None None.GetQuantity(productID None None,elemToUpdate None None,productLabelElem None None,buttonElem None None)
private void None.DataGridTableStyleSampleLoad(Object sender None,EventArgs e None)
protected void None.CopyProperties(DataControlField newField None)
public void None.EndEdit(boolean cancel None)
HRESULT WINAPI p2pgraph.PeerGraphCreate(_In_ PPEER_GRAPH_PROPERTIES pGraphProperties,_In_ PCWSTR pwzDatabaseName,_In_ PPEER_SECURITY_INTERFACE pSecurityInterface,_Out_ PHGRAPH phGraph)
function None None.GetQuantity(productID None None,elemToUpdate None None,productLabelElem None None,buttonElem None None)
private void None.button2_Click(Object sender None,System.EventArgs e None)
protected void None.OnInsert(int index None,Object value None)
SECURITY_STATUS WINAPI ncrypt.NCryptExportKey(_In_ NCRYPT_KEY_HANDLE hKey,_In_opt_ NCRYPT_KEY_HANDLE hExportKey,_In_ LPCWSTR pszBlobType,_In_opt_ NCryptBufferDesc *pParameterList,_Out_opt_ PBYTE pbOutput,_In_ DWORD cbOutput,_Out_ DWORD *pcbResult,_In_ DWORD dwFlags)
HRESULT None None.LongPtrToUInt8(_In_ LONG_PTR lOperand,_Out_ UINT8 *pui8Result)
HRESULT STDAPICALLTYPE kernelbase.WerRegisterAppLocalDump(_In_ PCWSTR localAppDataRelativePath)
protected void None.PreFilterProperties(IDictionary properties None)
HRESULT WINAPI winbio.WinBioSetProperty(_In_ WINBIO_SESSION_HANDLE SessionHandle,_In_ WINBIO_PROPERTY_TYPE PropertyType,_In_ WINBIO_PROPERTY_ID PropertyId,_In_opt_ WINBIO_UNIT_ID UnitId,_In_opt_ WINBIO_IDENTITY *Identity,_In_opt_ WINBIO_BIOMETRIC_SUBTYPE SubFactor,_In_ PVOID PropertyBuffer,_In_ SIZE_T PropertyBufferSize)
public IPermission None.GetPermission(Type permClass None)
public void None.RemoveAt(int index None)
protected void None.OnAuthenticate(AuthenticateEventArgs e None)
protected void None.NotifyInvalidate(Rectangle invalidatedArea None)
public OleDbParameter None.Add(String parameterName None,OleDbType oleDbType None,int size None)
HRESULT None None.InitializeOutputSample(IMediaSample *pSample None,IMediaSample **ppOutSample None)
public XmlNode None.CloneNode(boolean deep None)
LONG WINAPI winscard.SCardSetCardTypeProviderName(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCardName,_In_ DWORD dwProviderId,_In_ LPCTSTR szProvider)
LONG WINAPI winscard.SCardSetCardTypeProviderNameW(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCardName,_In_ DWORD dwProviderId,_In_ LPCTSTR szProvider)
LONG WINAPI winscard.SCardSetCardTypeProviderNameA(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCardName,_In_ DWORD dwProviderId,_In_ LPCTSTR szProvider)
public None None.PrintSystemException(int errorCode None,String message None,String printerMessage None)
protected void None.OnDragLeave(EventArgs e None)
private void None.currencyTextBox_TextChanged(Object sender None,EventArgs e None)
private void None.NorthwindEmployeeInserting(Object source None,ObjectDataSourceMethodEventArgs e None)
private void None.On_Click(Object source None,System.EventArgs e None)
HRESULT None None.LongToUIntPtr(_In_ LONG lOperand,_Out_ UINT_PTR *piResult)
public DesignerActionListCollection None.GetComponentActions(IComponent component None,ComponentActionsType type None)
public boolean None.Equals(Object obj None)
protected int None.GetArrayLength(String name None,String ns None)
public DateTime None.AddDays(DateTime time None,int days None)
protected boolean None.GetStyle(ControlStyles flag None)
protected void None.OnStreamChanged(EventArgs e None)
HRESULT None None.GetCaption([out] BSTR *pstrCaption)
function None None.GetQuantity(productID None None,elemToUpdate None None,productLabelElem None None,buttonElem None None)
public Object None.Deserialize(IDesignerSerializationManager manager None,Object codeObject None)
protected void None.OnItemDataBound(SiteMapNodeItemEventArgs e None)
HRESULT None None.Notify(IBaseFilter *pSelf None,Quality q None)
protected void None.CreateTool(ToolboxItem tool None,Point location None)
HRESULT WINAPI None.StorageAdapterControlUnit(_Inout_ PWINBIO_PIPELINE Pipeline,_In_ ULONG ControlCode,_In_ PUCHAR SendBuffer,_In_ SIZE_T SendBufferSize,_In_ PUCHAR ReceiveBuffer,_In_ SIZE_T ReceiveBufferSize,_Out_ PSIZE_T ReceiveDataSize,_Out_ PULONG OperationStatus)
HRESULT None None.LoadVertexShader(REFGUID resourceId None,BYTE *shaderBuffer None,UINT32 shaderBufferCount None)
void None None.TestCallBack(FPTR pf None,int value None)
private void None.DataGridTableStyleSampleLoad(Object sender None,EventArgs e None)
public Object None.ConvertFromInvariantString(ITypeDescriptorContext context None,String text None)
private void None.On_Inserting(Object sender None,SqlDataSourceCommandEventArgs e None)
protected void None.OnPreviewStylusInAirMove(StylusEventArgs e None)
protected boolean None.OnBubbleEvent(Object source None,EventArgs e None)
private void None.treeView1_KeyDown(Object sender None,KeyEventArgs e None)
protected void None.OnClientSizeChanged(EventArgs e None)
HRESULT WINAPI p2pgraph.PeerGraphGetNodeInfo(_In_ HGRAPH hGraph,_In_ ULONGLONG ullNodeId,_Out_ PPEER_NODE_INFO *ppNodeInfo)
public XmlDeclaration None.CreateXmlDeclaration(String version None,String encoding None,String standalone None)
public None None.StreamReader(String path None)
public void None.RaiseUnsupportedCapabilitiesError(DataSourceView view None)
private void None.AddShadow(PaintEventArgs e None)
HRESULT None None.AdviseTime(REFERENCE_TIME baseTime None,REFERENCE_TIME streamTime None,HEVENT hEvent None,DWORD_PTR *pdwAdviseToken None)
private void None.myButton_Click(Object sender None,System.EventArgs e None)
protected Object None.OnRequiredPropertyNotFound(String name None)
private void None.whatIsChecked_Click(Object sender None,System.EventArgs e None)
private void None.Form1_Resize(Object sender None,System.EventArgs e None)
HRESULT WINAPI p2pgraph.PeerGraphSetProperties(_In_ HGRAPH hGraph,_In_ PPEER_GRAPH_PROPERTIES pGraphProperties)
private void None.button1_Click(Object sender None,EventArgs e None)
public void None.SetRow(Object control None,int row None)
private void None.menuItemHelpAbout_Click(Object sender None,EventArgs e None)
protected void None.OnLostFocus(EventArgs e None)
function None None.GetQuantity(productID None None,elemToUpdate None None,productLabelElem None None,buttonElem None None)
DWORD WINAPI None.CardCreateFile(__in PCARD_DATA pCardData,__in LPSTR pszDirectoryName,__in LPSTR pszFileName,__in DWORD cbInitialCreationSize,__in CARD_FILE_ACCESS_CONDITION AccessCondition)
protected void None.OnItemClicked(ToolStripItemClickedEventArgs e None)
VOID None None.PoFxSetComponentLatency(_In_ POHANDLE Handle,_In_ ULONG Component,_In_ ULONGLONG Latency)
Sub None None.Check_Clicked(sender As Object,e As EventArgs)
function None None.GetQuantity(productID None None,elemToUpdate None None,productLabelElem None None,buttonElem None None)
public CheckState None.GetItemCheckState(int index None)
protected void None.OnLoggingOut(LoginCancelEventArgs e None)
HRESULT None None.GetDuration(LONGLONG *pDuration None)
static void None.EndReadCallback(IAsyncResult asyncResult None)
protected int None.ExecuteInsert(IDictionary values None)
SECURITY_STATUS WINAPI ncrypt.NCryptDeleteKey(_In_ NCRYPT_KEY_HANDLE hKey,_In_ DWORD dwFlags)
protected void None.GetComponentServiceActions(IComponent component None,DesignerActionListCollection actionLists None)
protected void None.OnHostedControlResize(EventArgs e None)
public void None.BeginWebPartConnecting(WebPart webPart None)
protected void None.SetBoundsCore(int x None,int y None,int width None,int height None,BoundsSpecified specified None)
HRESULT WINAPI kernel32.WerRegisterExcludedMemoryBlock(PVOID address None,DWORD size None)
HRESULT None None.UShortToShort(_In_ USHORT usOperand,_Out_ SHORT *psResult)
public boolean None.Supports(String feature None,String version None)
private void None.button1_Click(Object sender None,System.EventArgs e None)
HRESULT None None.get_AudioFormat([out] MPEG1WAVEFORMAT *lpFmt)
protected void None.OnVisibleChanged(EventArgs e None)
public void None.ReadStartElement(String name None)
HRESULT None None.ConnectionMediaType(AM_MEDIA_TYPE *pmt None)
public None None.StringBuilder(String value None)
private void None.currencyTextBox_TextChanged(Object sender None,EventArgs e None)
public boolean None.IsDBNull(int ordinal None)
public void None.SetBounds(int x None,int y None,int width None,int height None)
HRESULT WINAPI winbio.WinBioCaptureSampleWithCallback(_In_ WINBIO_SESSION_HANDLE SessionHandle,_In_ WINBIO_BIR_PURPOSE Purpose,_In_ WINBIO_BIR_DATA_FLAGS Flags,_In_ PWINBIO_CAPTURE_CALLBACK CaptureCallback,_In_opt_ PVOID CaptureCallbackContext)
public void None.LoadXml(String xml None)
protected void None.OnLayout(LayoutEventArgs levent None)
HRESULT WINAPI p2pgraph.PeerGraphUpdateRecord(_In_ HGRAPH hGraph,_In_ PPEER_RECORD pRecord)
public void None.GetInstances(ManagementOperationObserver watcher None)
protected void None.OnLeave(int rowIndex None,boolean throughMouseClick None)
public None None.FormViewPagerRow(int rowIndex None,DataControlRowType rowType None,DataControlRowState rowState None)
protected void None.OnStylusMove(StylusEventArgs e None)
public None None.PathTooLongException(String message None,Exception innerException None)
private void None.MyListView_AfterLabelEdit(Object sender None,System.Windows.Forms.LabelEditEventArgs e None)
protected void None.mgr1_AuthorizeWebPart(object sender None,WebPartAuthorizationEventArgs e None)
public int None.ReadContentAsBinHex(byte[] buffer None,int index None,int count None)
public void None.RenderEndTag(HtmlTextWriter writer None)
HRESULT None None.FindPin(LPCWSTR Id None,IPin **ppPin None)
public XmlNode None.CloneNode(boolean deep None)
public void None.GetObjectData(SerializationInfo info None,StreamingContext context None)
public boolean None.MoveToFollowing(String localName None,String namespaceURI None)
public XmlDeclaration None.CreateXmlDeclaration(String version None,String encoding None,String standalone None)
void None None.UploadProgressCallback(Object* /*sender*/ None,UploadProgressEventArgs* e None)
BOOL None setupapi.SetupDiDeleteDeviceInterfaceData(_In_ HDEVINFO DeviceInfoSet,_In_ PSP_DEVICE_INTERFACE_DATA DeviceInterfaceData)
protected void None.OnSelectedIndexChanged(EventArgs e None)
private void None.ShowPropertiesOfSlateBlue(PaintEventArgs e None)
HRESULT None None.LongPtrToInt8(_In_ LONG_PTR lOperand,_Out_ INT8 *pi8Result)
function None None.GetQuantity(productID None None,elemToUpdate None None,productLabelElem None None,buttonElem None None)
protected void None.OnPreviewStylusInAirMove(StylusEventArgs e None)
protected boolean None.OnBubbleEvent(Object source None,EventArgs e None)
protected None None.MessageQueueException(SerializationInfo info None,StreamingContext context None)
HRESULT WINAPI winbio.WinBioAsyncMonitorFrameworkChanges(_In_ WINBIO_FRAMEWORK_HANDLE FrameworkHandle,_In_ WINBIO_FRAMEWORK_CHANGE_TYPE ChangeTypes)
SECURITY_STATUS WINAPI ncrypt.NCryptEnumAlgorithms(_In_ NCRYPT_PROV_HANDLE hProvider,_In_ DWORD dwAlgOperations,_Out_ DWORD *pdwAlgCount,_Out_ NCryptAlgorithmName **ppAlgList,_In_ DWORD dwFlags)
protected void None.OnMenuItemDataBound(MenuEventArgs e None)
function None None.GetQuantity(productID None None,elemToUpdate None None,productLabelElem None None,buttonElem None None)
public int None.GetMaxCharCount(int byteCount None)
protected void None.Render(HtmlTextWriter writer None)
private void None.ExtractMetaData(PaintEventArgs e None)
private void None.On_Inserting(Object sender None,SqlDataSourceCommandEventArgs e None)
private void None.On_Click(Object source None,System.EventArgs e None)
protected void None.Unmerge(ConfigurationElement sourceElement None,ConfigurationElement parentElement None,ConfigurationSaveMode saveMode None)
protected void None.OnLoginError(EventArgs e None)
function None None.GetQuantity(productID None None,elemToUpdate None None,productLabelElem None None,buttonElem None None)
MI_INLINE MI_Result None.MI_DestinationOptions_GetCertCACheck(_In_ MI_DestinationOptions *options,_Out_ MI_Boolean *check)
private void None.On_Click(Object source None,System.EventArgs e None)
void None None.Page_Load(Object sender None,EventArgs e None)
protected void None.OnTreeNodeDataBound(TreeNodeEventArgs e None)
private void None.Menu_Copy(Object sender None,System.EventArgs e None)
SECURITY_STATUS None ncrypt.NCryptFinalizeKey(_In_ NCRYPT_KEY_HANDLE hKey,_In_ DWORD dwFlags)
HRESULT None None.GetPageInfo(LPPROPPAGEINFO pPageInfo None)
HRESULT None windows.ui.xaml.GetVisibleBounds([out] RECT *pBounds)
protected void None.OnClick(DesignerRegionMouseEventArgs e None)
protected void None.LoadViewState(Object savedState None)
protected void None.OnItemDataBound(SiteMapNodeItemEventArgs e None)
SECURITY_STATUS WINAPI ncrypt.NCryptIsAlgSupported(_In_ NCRYPT_PROV_HANDLE hProvider,_In_ LPCWSTR pszAlgId,_In_ DWORD dwFlags)
protected void None.OnKeyDown(KeyEventArgs e None)
protected void None.OnInserting(ObjectDataSourceMethodEventArgs e None)
SECURITY_STATUS WINAPI ncrypt.NCryptDeriveKey(_In_ NCRYPT_SECRET_HANDLE hSharedSecret,_In_ LPCWSTR pwszKDF,_In_opt_ NCryptBufferDesc *pParameterList,_Out_opt_ PBYTE pbDerivedKey,_In_ DWORD cbDerivedKey,_Out_ DWORD *pcbResult,_In_ ULONG dwFlags)
HRESULT None None.Run(REFERENCE_TIME tStart None)
protected void None.InvokeGotFocus(Control toInvoke None,EventArgs e None)
public void None.GetObjectData(SerializationInfo info None,StreamingContext context None)
public None None.PrintSystemException(int errorCode None,String message None,String printerMessage None)
private void None.On_Inserting(Object sender None,SqlDataSourceCommandEventArgs e None)
protected void None.OnControlAdded(ControlEventArgs e None)
function None None.GetQuantity(productID None None,elemToUpdate None None,productLabelElem None None,buttonElem None None)
function None None.ReceiveServerData(arg None None,context None None)
public String None.ResetPassword(String username None,String passwordAnswer None)
protected void None.Serialize(SerializationInfo info None,StreamingContext context None)
public String None.GetMonthName(int month None)
HRESULT WINAPI winbio.WinBioLocateSensor(_In_ WINBIO_SESSION_HANDLE SessionHandle,_Out_opt_ WINBIO_UNIT_ID *UnitId)
HRESULT WINAPI winbio.WinBioEnumBiometricUnits(_In_ WINBIO_BIOMETRIC_TYPE Factor,_Out_ WINBIO_UNIT_SCHEMA **UnitSchemaArray,_Out_ SIZE_T *UnitCount)
public void None.DisplaySchemas(XmlSchemaCollection xSC None)
private void None.DataGridTableStyleSampleLoad(Object sender None,EventArgs e None)
HRESULT WINAPI winbio.WinBioLocateSensorWithCallback(_In_ WINBIO_SESSION_HANDLE SessionHandle,_In_ PWINBIO_LOCATE_SENSOR_CALLBACK LocateCallback,_In_opt_ PVOID LocateCallbackContext)
HRESULT WINAPI p2pgraph.PeerGraphSearchRecords(_In_ HGRAPH hGraph,_In_ PCWSTR pwzCriteria,_Out_ HPEERENUM *phPeerEnum)
protected void None.OnScroll(EventArgs e None)
protected void None.OnParentChanged(EventArgs e None)
protected void None.InitializePager(GridViewRow row None,int columnSpan None,PagedDataSource pagedDataSource None)
protected void None.LoadViewState(Object savedState None)
TCHAR None None.Edit_GetPasswordChar(HWND hwndCtl None)
private void None.On_Inserting(Object sender None,SqlDataSourceCommandEventArgs e None)
function None None.GetQuantity(productID None None,elemToUpdate None None,productLabelElem None None,buttonElem None None)
protected void None.OnCellValueChanged(DataGridViewCellEventArgs e None)
protected void None.OnPreRender(EventArgs e None)
function None None.Car(color None None,make None None,model None None)
protected void None.Serialize(SerializationInfo info None,StreamingContext context None)
protected void None.PreFilterAttributes(IDictionary attributes None)
protected void None.RaisePostBackEvent(String eventArgument None)
HRESULT WINAPI winbio.WinBioGetCredentialState(_In_ WINBIO_IDENTITY Identity,_In_ WINBIO_CREDENTIAL_TYPE Type,_Out_ WINBIO_CREDENTIAL_STATE *CredentialState)
private void None.OnRecordDeleting(Object source None,SqlDataSourceCommandEventArgs e None)
public None None.PrintSystemException(int errorCode None,String message None,String printerMessage None)
HRESULT WINAPI winbio.WinBioOpenSession(_In_ WINBIO_BIOMETRIC_TYPE Factor,_In_ WINBIO_POOL_TYPE PoolType,_In_ WINBIO_SESSION_FLAGS Flags,_In_ WINBIO_UNIT_ID *UnitArray,_In_ SIZE_T UnitCount,_In_ GUID *DatabaseId,_Out_ WINBIO_SESSION_HANDLE *SessionHandle)
protected AutomationPeer None.PeerFromProvider(IRawElementProviderSimple provider None)
public void None.CloseWebPart(WebPart webPart None)
protected void None.SetStringResourcePointer(Object stringResourcePointer None,int maxResourceOffset None)
public int None.IndexOf(char value None,int startIndex None,int count None)
HRESULT WINAPI kernel32.WerUnregisterMemoryBlock(_In_ PVOID pvAddress)
public int None.IndexOf(char value None)
public void None.AppendLiteralString(String s None)
private void None.Menu_Copy(Object sender None,System.EventArgs e None)
private void None.NorthwindEmployeeInserting(Object source None,ObjectDataSourceMethodEventArgs e None)
public None None.HttpException(String message None,int hr None)
void None None.SetName(Object instance None,String name None)
public CustomRecognizerNode None.CreateCustomRecognizer(Guid inkRecognizerId None)
private void None.whatIsChecked_Click(Object sender None,System.EventArgs e None)
HRESULT None None.GetCurrentPosition(LONGLONG *pCurrent None)
public Match None.Match(String input None)
private void None.showCheckedNodesButton_Click(Object sender None,EventArgs e None)
protected void None.OnMultilineChanged(EventArgs e None)
public int None.GetCellAscent(FontStyle style None)
function None None.ReceiveServerData(arg None None,context None None)
function None None.Car(color None None,make None None,model None None)
private void None.Menu_Copy(Object sender None,System.EventArgs e None)
public XmlElement None.CreateElement(String prefix None,String localName None,String namespaceURI None)
DWORD None fwpuclnt.IPsecSaContextExpire0(_In_ HANDLE engineHandle,_In_ UINT64 id)
public boolean None.Equals(Object obj None)
private void None.button1_Click(Object sender None,System.EventArgs e None)
public void None.AddRange(TabPage[] pages None)
protected String None.GetUniqueName(IDesignerSerializationManager manager None,Object value None)
protected void None.OnRenderButtonBackground(ToolStripItemRenderEventArgs e None)
void None None.PostFilterAttributes(IDictionary attributes None)
public DragDropEffects None.DoDragDrop(Object data None,DragDropEffects allowedEffects None)
public void None.AddRange(TabPage[] pages None)
function None None.ReceiveServerData(arg None None,context None None)
protected void None.Render(HtmlTextWriter writer None)
STDMETHODIMP None None.SetDefaultTimerResolution(REFERENCE_TIME timerResolution None)
protected void None.Deserialize(SerializationInfo info None,StreamingContext context None)
HRESULT WINAPI p2pgraph.PeerGraphUnregisterEvent(_In_ HPEEREVENT hPeerEvent)
public String None.Result(String replacement None)
function None None.GetQuantity(productID None None,elemToUpdate None None,productLabelElem None None,buttonElem None None)
public boolean None.Equals(Object value None)
SECURITY_STATUS WINAPI ncrypt.NCryptEnumKeys(_In_ NCRYPT_PROV_HANDLE hProvider,_In_opt_ LPCWSTR pszScope,_Out_ NCryptKeyName **ppKeyName,_Inout_ PVOID *ppEnumState,_In_ DWORD dwFlags)
public Object None.Deserialize(IDesignerSerializationManager manager None,Object codeObject None)
protected void None.OnMouseMove(MouseEventArgs e None)
public None None.HttpRequest(String filename None,String url None,String queryString None)
private void None.ChangeTextRenderingHintAndTextContrast(PaintEventArgs e None)
protected void None.DeserializeElement(XmlReader reader None,boolean serializeCollectionKey None)
protected void None.InvokeOnClick(Control toInvoke None,EventArgs e None)
protected void None.OnIsItemsHostChanged(boolean oldIsItemsHost None,boolean newIsItemsHost None)
public Object None.Deserialize(IDesignerSerializationManager manager None,Object codeObject None)
protected void None.LoadViewState(Object savedState None)
DWORD WINAPI fwpuclnt.IPsecSaEnum0(_In_ HANDLE engineHandle,_In_ HANDLE enumHandle,_In_ UINT32 numEntriesRequested,_Out_ IPSEC_SA_DETAILS0 ***entries,_Out_ UINT32 *numEntriesReturned)
HRESULT None None.UIntPtrToInt(_In_ UINT_PTR uOperand,_Out_ INT *piResult)
public void None.RemoveHandler(DependencyProperty dependencyEvent None,Object value None)
public void None.SetBounds(int x None,int y None,int width None,int height None)
protected void None.LoadViewState(Object savedState None)
XMVECTOR None None.XMColorRGBToSRGB(FXMVECTOR rgb None)
public void None.CloseWebPart(WebPart webPart None)
public String None.GetString(String name None)
private void None.whatIsChecked_Click(Object sender None,System.EventArgs e None)
public IAsyncResult None.BeginGetResponse(AsyncCallback callback None,Object state None)
public XmlNode None.SelectSingleNode(String xpath None,XmlNamespaceManager nsmgr None)
HRESULT WINAPI kernel32.WerRegisterFile(_In_ PCWSTR pwzFile,_In_ WER_REGISTER_FILE_TYPE regFileType,_In_ DWORD dwFlags)
HRESULT None None.GetDVDVolumeInfo([out] ULONG *pulNumOfVolumes,[out] ULONG *pulVolume,[out] DVD_DISC_SIDE *pSide,[out] ULONG *pulNumOfTitles)
private void None.DataGridTableStyleSampleLoad(Object sender None,EventArgs e None)
protected void None.OnCausesValidationChanged(EventArgs e None)
private void None.SelectNode(TreeNode node None)
protected void None.OnStart(String[] args None)
HRESULT WINAPI p2pgraph.PeerGraphGetProperties(_In_ HGRAPH hGraph,_Out_ PPEER_GRAPH_PROPERTIES *ppGraphProperties)
function None None.RegExpPropDemo(flag None None)
BOOL None None.PossiblyEatMessage(UINT uMsg None,WPARAM wParam None,LPARAM lParam None)
protected void None.OnVerifyingUser(LoginCancelEventArgs e None)
HRESULT None None.Unadvise(DWORD_PTR dwAdviseToken None)
public int None.IndexOf(ConnectionStringSettings settings None)
private void None.textBox1_Enter(Object sender None,System.EventArgs e None)
HRESULT WINAPI p2pgraph.PeerGraphGetProperties(_In_ HGRAPH hGraph,_Out_ PPEER_GRAPH_PROPERTIES *ppGraphProperties)
public None None.PathTooLongException(String message None,Exception innerException None)
SECURITY_STATUS WINAPI ncrypt.NCryptOpenStorageProvider(_Out_ NCRYPT_PROV_HANDLE *phProvider,_In_opt_ LPCWSTR pszProviderName,_In_ DWORD dwFlags)
protected void None.Page_Load(Object sender None,System.EventArgs e None)
protected IAsyncResult None.AsyncPageBeginProcessRequest(HttpContext context None,AsyncCallback callback None,Object extraData None)
private void None.whatIsChecked_Click(Object sender None,System.EventArgs e None)
HRESULT None None.GetCurrentAudio([out] ULONG *pulStreamsAvailable,[out] ULONG *pulCurrentStream)
HKL WINAPI user32.LoadKeyboardLayout(_In_ LPCTSTR pwszKLID,_In_ UINT Flags)
HKL WINAPI user32.LoadKeyboardLayoutW(_In_ LPCTSTR pwszKLID,_In_ UINT Flags)
HKL WINAPI user32.LoadKeyboardLayoutA(_In_ LPCTSTR pwszKLID,_In_ UINT Flags)
protected void None.button1_Click(Object sender None,System.EventArgs e None)
protected void None.OnClick(DesignerRegionMouseEventArgs e None)
protected void None.LinqDataSource_Updating(object sender None,LinqDataSourceUpdateEventArgs e None)
protected void None.OnDataSourceChanged(Object sender None,EventArgs e None)
protected void None.OnUnload(EventArgs e None)
public int None.IndexOf(char value None,int startIndex None,int count None)
public int None.GetCellAscent(FontStyle style None)
public None None.Comparer(CultureInfo culture None)
public int None.GetChars(byte[] bytes None,int byteIndex None,int byteCount None,char[] chars None,int charIndex None)
HRESULT None None.AdviseTime(REFERENCE_TIME baseTime None,REFERENCE_TIME streamTime None,HEVENT hEvent None,DWORD_PTR *pdwAdviseToken None)
private void None.FindAllOfMyString(String searchString None)
public XmlElement None.CreateElement(String prefix None,String localName None,String namespaceURI None)
protected void None.OnDataSourceViewChanged(EventArgs e None)
protected void None.button1_Click(Object sender None,System.EventArgs e None)
function None None.GetQuantity(productID None None,elemToUpdate None None,productLabelElem None None,buttonElem None None)
protected void None.OnEnabledChanged(EventArgs e None)
protected boolean None.OnBubbleEvent(Object source None,EventArgs e None)
private void None.whatIsChecked_Click(Object sender None,System.EventArgs e None)
public void None.MinMaxFields(int numberToSet None)
HRESULT WINAPI wer.WerAddExcludedApplication(_In_ PCWSTR pwzExeName,_In_ BOOL bAllUsers)
HRESULT None None.GetStreamTransparent([out] BOOL *pbStreamTransparent)
HRESULT None None.DWordPtrSub(_In_ DWORD_PTR dwMinuend,_In_ DWORD_PTR dwSubtrahend,_Out_ DWORD_PTR *pdwResult)
function None None.isNaN(number : Number)
function None None.RegExpPropDemo(flag None None)
public void None.OnAutoFormatApplied(DesignerAutoFormat appliedAutoFormat None)
protected void None.OnPagePreLoad(Object sender None,EventArgs e None)
protected void None.Render(HtmlTextWriter writer None)
VOID WINAPI p2pgraph.PeerGraphFreeData(_In_ PVOID pvData)
private void None.Page_Load(Object sender None,System.EventArgs e None)
protected void None.RaiseCellContentDoubleClick(DataGridViewCellEventArgs e None)
protected void None.RenderVerb(HtmlTextWriter writer None,WebPartVerb verb None)
protected void None.Page_Load(Object sender None,System.EventArgs e None)
private void None.listDragSource_GiveFeedback(Object sender None,System.Windows.Forms.GiveFeedbackEventArgs e None)
private void None.currencyTextBox_TextChanged(Object sender None,EventArgs e None)
private void None.textBox1_Enter(Object sender None,System.EventArgs e None)
public void None.Remove(String name None)
public void None.ReadStartElement(String name None)
HRESULT WINAPI d3dcompiler_47.D3DSetBlobPart(in LPCVOID pSrcData,in SIZE_T SrcDataSize,in D3D_BLOB_PART Part,in UINT Flags,in LPCVOID pPart,in SIZE_T PartSize,out ID3DBlob ppNewShader)
protected void None.LoadViewState(Object savedState None)
HRESULT WINAPI winbio.WinBioEnrollSelect(_In_ WINBIO_SESSION_HANDLE SessionHandle,_In_ ULONGLONG SelectorValue)
NTSTATUS None None.WdfIoTargetOpen(_In_ WDFIOTARGET IoTarget,_In_ PWDF_IO_TARGET_OPEN_PARAMS OpenParams)
HRESULT WINAPI p2pgraph.PeerGraphDelete(_In_ PCWSTR pwzGraphId,_In_ PCWSTR pwzPeerId,_In_ PCWSTR pwzDatabaseName)
protected void None.OnLoggingOut(LoginCancelEventArgs e None)
private void None.currencyTextBox_TextChanged(Object sender None,EventArgs e None)
protected int None.ExecuteInsert(IDictionary values None)
SECURITY_STATUS WINAPI ncrypt.NCryptDecrypt(_In_ NCRYPT_KEY_HANDLE hKey,_In_ PBYTE pbInput,_In_ DWORD cbInput,_In_opt_ VOID *pPaddingInfo,_Out_ PBYTE pbOutput,_In_ DWORD cbOutput,_Out_ DWORD *pcbResult,_In_ DWORD dwFlags)
protected void None.LoadViewState(Object savedState None)
public boolean None.CanConvertTo(ITypeDescriptorContext typeDescriptorContext None,Type type None)
protected void None.OnStart(String[] args None)
public Object None.Deserialize(IDesignerSerializationManager manager None,Object codeObject None)
public void None.Navigate(Uri url None,boolean newWindow None)
LONG WINAPI kernel32.PackageFamilyNameFromFullName(_In_ PCWSTR packageFullName,_Inout_ UINT32 *packageFamilyNameLength,_Out_opt_ PWSTR packageFamilyName)
public void None.Localize(IDesignTimeResourceWriter resourceWriter None)
SECURITY_STATUS WINAPI ncrypt.NCryptFreeBuffer(_In_ PVOID pvInput)
public void None.EnlistTransaction(Transaction transaction None)
public void None.BeginWebPartConnecting(WebPart webPart None)
void None None.WriteXml(XmlWriter writer None)
public void None.AddGeometry(Geometry geometry None)
protected void None.LinqDataSource_Updating(object sender None,LinqDataSourceUpdateEventArgs e None)
protected void None.OnStart(String[] args None)
private void None.ChangeTextRenderingHintAndTextContrast(PaintEventArgs e None)
private void None.myButton_Click(Object sender None,System.EventArgs e None)
private void None.UpdateRecords(Object source None,System.EventArgs e None)
protected void None.LoadViewState(Object savedState None)
public None None.PrintSystemException(int errorCode None,String message None,String printerMessage None)
HRESULT WINAPI p2pgraph.PeerGraphRegisterEvent(_In_ HGRAPH hGraph,_In_ HANDLE hEvent,_In_ ULONG cEventRegistrations,_In_ PPEER_GRAPH_EVENT_REGISTRATION pEventRegistrations,_Out_ HPEEREVENT *phPeerEvent)
public int None.GetMaxCharCount(int byteCount None)
public void None.BeginWebPartConnecting(WebPart webPart None)
public void None.AddRange(Object[] items None)
public void None.CopyTo(MenuItem[] array None,int index None)
public void None.BeginWebPartConnecting(WebPart webPart None)
public void None.SetAccessControl(EventWaitHandleSecurity eventSecurity None)
private void None.dataGridView1_CellValidating(Object sender None,DataGridViewCellValidatingEventArgs e None)
private void None.whatIsChecked_Click(Object sender None,System.EventArgs e None)
protected void None.RaiseCellContentDoubleClick(DataGridViewCellEventArgs e None)
HRESULT None None.CopyImage(IMediaSample *pMediaSample None,VIDEOINFOHEADER *pVideoInfo None,LONG *pBufferSize None,BYTE *pVideoImage None,RECT *pSourceRect None)
protected void None.SetDesignModeState(IDictionary data None)
protected HierarchicalDataSourceView None.GetData(String viewPath None)
protected void None.OnSelectedIndexChanged(EventArgs e None)
protected void None.OnItemInserted(FormViewInsertedEventArgs e None)
HRESULT WINAPI winbio.WinBioEnrollCapture(_In_ WINBIO_SESSION_HANDLE SessionHandle,_Out_opt_ WINBIO_REJECT_DETAIL *RejectDetail)
HRESULT WINAPI winbio.WinBioRemoveCredential(_In_ WINBIO_IDENTITY Identity,_In_ WINBIO_CREDENTIAL_TYPE Type)
protected IEnumerable None.ExecuteSelect(DataSourceSelectArguments arguments None)
HRESULT None None.get_Owner([out] OAHWND *pOwner)
private void None.ShowPropertiesOfSlateBlue(PaintEventArgs e None)
public DragDropEffects None.DoDragDrop(Object data None,DragDropEffects allowedEffects None)
Dim None None.prices(3 None None,4 None None,5 None None)
BOOL WINAPI ncrypt.NCryptIsKeyHandle(_In_ NCRYPT_KEY_HANDLE hKey)
protected boolean None.HasWeekSelectors(CalendarSelectionMode selectionMode None)
protected String None.GetControlValidationValue(String name None)
public void None.SetBounds(int x None,int y None,int width None,int height None)
private void None.UpdateRecords(Object source None,System.EventArgs e None)
protected void None.SetAutoSizeMode(AutoSizeMode mode None)
BOOL None None.DrawImage(IMediaSample *pMediaSample None)
public CheckState None.GetItemCheckState(int index None)
protected void None.Page_Load(Object sender None,System.EventArgs e None)
public String None.GetString(String name None)
protected void None.LinqDataSource_Inserting(object sender None,LinqDataSourceInsertEventArgs e None)
protected void None.Render(HtmlTextWriter writer None)
HRESULT None None.GetAllGPRMs([out] GPRMARRAY *pRegisterArray)
protected int None.ExecuteInsert(IDictionary values None)
HRESULT WINAPI p2pgraph.PeerGraphExportDatabase(_In_ HGRAPH hGraph,_In_ PCWSTR pwzFilePath)
protected boolean None.OnDeserializeUnrecognizedElement(String elementName None,XmlReader reader None)
HRESULT None None.SetSink(IQualityControl *piqc None)
private void None.whatIsChecked_Click(Object sender None,System.EventArgs e None)
public void None.SetBounds(int x None,int y None,int width None,int height None)
public None None.FileStream(String path None,FileMode mode None,FileAccess access None,FileShare share None,int bufferSize None)
public void None.OpenReadAsync(Uri address None,Object userToken None)
public void None.Load(String url None,XmlResolver resolver None)
HRESULT WINAPI p2pgraph.PeerGraphClose(_In_ HGRAPH hGraph)
public boolean None.Contains(ColumnHeader value None)
public void None.ConvertStringChar(String stringVal None)
BOOL None None.DrawVideoImageHere(HDC hdc None,IMediaSample *pMediaSample None,RECT *lprcSrc None,RECT *lprcDst None)
DWORD None None.CallWorker(DWORD dwParam None)
public XmlProcessingInstruction None.CreateProcessingInstruction(String target None,String data None)
function None None.GetQuantity(productID None None,elemToUpdate None None,productLabelElem None None,buttonElem None None)
public None None.RegionInfo(String name None)
HRESULT WINAPI winbio.WinBioAsyncEnumServiceProviders(_In_ WINBIO_FRAMEWORK_HANDLE FrameworkHandle,_In_ WINBIO_BIOMETRIC_TYPE Factor)
public void None.CloseWebPart(WebPart webPart None)
HRESULT None None.TranslateAccelerator(LPMSG lpMsg None)
SECURITY_STATUS WINAPI ncrypt.NCryptDeriveKey(_In_ NCRYPT_SECRET_HANDLE hSharedSecret,_In_ LPCWSTR pwszKDF,_In_opt_ NCryptBufferDesc *pParameterList,_Out_opt_ PBYTE pbDerivedKey,_In_ DWORD cbDerivedKey,_Out_ DWORD *pcbResult,_In_ ULONG dwFlags)
DWORD None fwpuclnt.IPsecSaContextGetById1(_In_ HANDLE engineHandle,_In_ UINT64 id,_Out_ IPSEC_SA_CONTEXT1 **saContext)
protected boolean None.ProcessDialogKey(Keys keyData None)
protected void None.OnPaint(PaintEventArgs pe None)
public None None.CookieParameter(String name None,TypeCode type None,String cookieName None)
void None None.Button_Click(Object sender None,EventArgs e None)
protected void None.Page_Load(Object sender None,System.EventArgs e None)
private void None.whatIsChecked_Click(Object sender None,System.EventArgs e None)
HRESULT WINAPI winbio.WinBioLogonIdentifiedUser(_In_ WINBIO_SESSION_HANDLE SessionHandle)
void None None.AddText(String text None)
public Object None.Deserialize(IDesignerSerializationManager manager None,Object codeObject None)
HRESULT WINAPI p2pgraph.PeerGraphDelete(_In_ PCWSTR pwzGraphId,_In_ PCWSTR pwzPeerId,_In_ PCWSTR pwzDatabaseName)
public int None.IndexOf(String source None,char value None)
protected void None.Page_Load(Object sender None,System.EventArgs e None)
Private Function None.SelectOracleRows(connection As String,queryString As String,tableName As String)
function None None.ReceiveServerData(arg None None,context None None)
private void None.Page_Load(Object sender None,System.EventArgs e None)
protected DetailsViewRow None.CreateRow(int rowIndex None,DataControlRowType rowType None,DataControlRowState rowState None)
DWORD WINAPI fwpuclnt.IPsecDospGetSecurityInfo0(_In_ HANDLE engineHandle,_In_ SECURITY_INFORMATION securityInfo,_Out_opt_ PSID *sidOwner,_Out_opt_ PSID *sidGroup,_Out_opt_ PACL *dacl,_Out_opt_ PACL *sacl,_Out_ PSECURITY_DESCRIPTOR *securityDescriptor)
HRESULT None None.QueryId(LPWSTR *Id None)
protected void None.OnAfterUninstall(IDictionary savedState None)
HRESULT None None.TranslateAccelerator(LPMSG lpMsg None)
protected void None.Serialize(SerializationInfo info None,StreamingContext context None)
public int None.GetItemHeight(int index None)
HRESULT WINAPI winbio.WinBioFree(_In_ PVOID Address)
function None None.GetQuantity(productID None None,elemToUpdate None None,productLabelElem None None,buttonElem None None)
public int None.IndexOf(ConnectionStringSettings settings None)
HRESULT None None.QueryPreferredFormat(GUID *pFormat None)
function None None.GetQuantity(productID None None,elemToUpdate None None,productLabelElem None None,buttonElem None None)
Enter your None.selection(1 None None,2 None None,or 3 None)
HRESULT None None.Run(REFERENCE_TIME tStart None)
SerializableAttribute None None.ClassInterfaceAttribute(ClassInterfaceType.AutoDispatch None None)
function None None.GetQuantity(productID None None,elemToUpdate None None,productLabelElem None None,buttonElem None None)
HRESULT None windowscodecs.WICConvertBitmapSource(_In_ REFWICPixelFormatGUID dstFormat,_In_ IWICBitmapSource *pISrc,_Out_ IWICBitmapSource **ppIDst)
public void None.DrawSeparator(ToolStripSeparatorRenderEventArgs e None)
void None None.OnComponentChanging(Object component None,MemberDescriptor member None)
function None None.GetQuantity(productID None None,elemToUpdate None None,productLabelElem None None,buttonElem None None)
function None None.GetQuantity(productID None None,elemToUpdate None None,productLabelElem None None,buttonElem None None)
protected void None.SetClientSizeCore(int x None,int y None)
private void None.FindAllOfMyString(String searchString None)
VOID CALLBACK None.PWINBIO_LOCATE_SENSOR_CALLBACK(_In_opt_ PVOID LocateCallbackContext,_In_ HRESULT OperationStatus,WINBIO_UNIT_ID UnitId None)
public None None.StringBuilder(int capacity None)
HRESULT WINAPI d3dcompiler_47.D3DCompressShaders(in UINT uNumShaders,in D3D_SHADER_DATA pShaderData,in UINT uFlags,out ID3DBlob ppCompressedData)
protected void None.OnRowHeadersWidthSizeModeChanged(DataGridViewAutoSizeModeEventArgs e None)
public None None.Comparer(CultureInfo culture None)
HRESULT None None.GetRedrawAlways(LPBOOL lpbOption None)
protected String None.FormatDataTextValue(Object dataTextValue None)
protected void None.RenderHeader(HtmlTextWriter writer None)
public None None.XmlTextReader(String url None,TextReader input None)
protected void None.OnPageIndexChanging(FormViewPageEventArgs e None)
HRESULT WINAPI p2pgraph.PeerGraphGetStatus(_In_ HGRAPH hGraph,_Out_ DWORD *pdwStatus)
protected void None.OnDataSourceViewChanged(EventArgs e None)
HRESULT None None.Clone([out] IEnumPins **ppEnum)
public void None.AddRange(ColumnHeader[] values None)
public void None.MoveToStartElement(XmlDictionaryString localName None,XmlDictionaryString namespaceUri None)
public void None.Post(SendOrPostCallback d None,Object arg None)
HRESULT None None.SIZETToLongPtr(_In_ SIZE_T cbOperand,_Out_ LONG_PTR *plResult)
public Uri None.ResolveUri(Uri baseUri None,String relativeUri None)
protected void None.AddParsedSubObject(Object obj None)
protected void None.OnItemDeleting(DetailsViewDeleteEventArgs e None)
protected void None.OnSelectedIndexChanged(EventArgs e None)
HRESULT None None.get_AvgTimePerFrame(REFTIME *pAvgTimePerFrame None)
public DragDropEffects None.DoDragDrop(Object data None,DragDropEffects allowedEffects None)
protected void None.OnItemDeleting(DetailsViewDeleteEventArgs e None)
HRESULT WINAPI p2pgraph.PeerGraphSetPresence(_In_ HGRAPH hGraph,_In_ BOOL fPresent)
function None None.GetQuantity(productID None None,elemToUpdate None None,productLabelElem None None,buttonElem None None)
private void None.AddDropDownListAfterCurrentNode(SiteMapNodeItem item None)
public None None.XmlTextReader(String url None,TextReader input None)
protected boolean None.OnBubbleEvent(Object source None,EventArgs e None)
protected void None.OnSelectedIndexChanged(EventArgs e None)
public Object None.Deserialize(IDesignerSerializationManager manager None,Object codeObject None)
HRESULT None None.CheckCapabilities(DWORD *pCapabilities None)
protected void None.GetCurrentValueAsFrozenCore(Freezable source None)
public None None.SuspendActivity(String name None)
protected void None.OnRegionChanged(EventArgs e None)
HRESULT None None.QueryInternalConnections(IPin *apPin None,ULONG *nPin None)
protected void None.OnCursorChanged(EventArgs e None)
protected void None.OnLocationChanged(EventArgs e None)
public boolean None.IsDescendantOf(DependencyObject ancestor None)
private void None.Page_Load(Object sender None,System.EventArgs e None)
protected boolean None.OnBubbleEvent(Object source None,EventArgs e None)
NTSTATUS WINAPI bcrypt.BCryptSecretAgreement(_In_ BCRYPT_KEY_HANDLE hPrivKey,_In_ BCRYPT_KEY_HANDLE hPubKey,_Out_ BCRYPT_SECRET_HANDLE *phSecret,_In_ ULONG dwFlags)
protected void None.LoadViewState(Object savedState None)
public None None.DayRenderEventArgs(TableCell cell None,CalendarDay day None,String selectUrl None)
protected HorizontalAlignment None.RtlTranslateHorizontal(HorizontalAlignment align None)
VOID CALLBACK None.PWINBIO_EVENT_CALLBACK(_In_opt_ PVOID EventCallbackContext,_In_ HRESULT OperationStatus,_In_ PWINBIO_EVENT Event)
private void None.whatIsChecked_Click(Object sender None,System.EventArgs e None)
Private Function None.SelectOracleRows(connection As String,queryString As String,tableName As String)
protected void None.OnItemDeleting(DetailsViewDeleteEventArgs e None)
protected String None.FormatDataTextValue(Object dataTextValue None)
PropertyInfo None None.GetProperty(String name None,BindingFlags bindingAttr None,Binder binder None,Type returnType None,Type[] types None,ParameterModifier[] modifiers None)
public void None.MoveTo(String destDirName None)
public boolean None.IsDescendantOf(DependencyObject ancestor None)
protected void None.LoadViewState(Object savedState None)
BOOL WSAAPI ws2_32.WSAGetOverlappedResult(_In_ SOCKET s,_In_ LPWSAOVERLAPPED lpOverlapped,_Out_ LPDWORD lpcbTransfer,_In_ BOOL fWait,_Out_ LPDWORD lpdwFlags)
protected void None.OnDragLeave(EventArgs e None)
public Uri None.ResolveUri(Uri baseUri None,String relativeUri None)
private void None.On_Click(Object source None,System.EventArgs e None)
DWORD WINAPI fwpuclnt.IPsecSaContextUnsubscribe0(_In_ HANDLE engineHandle,_Inout_ HANDLE eventsHandle)
protected Rectangle None.GetScaledBounds(Rectangle bounds None,SizeF factor None,BoundsSpecified specified None)
HRESULT None None.GetDecoderLevel(AM_LINE21_CCLEVEL *lpLevel None)
Sub None None.ValidationFunctionName(source None None,arguments None None)
protected void None.SetClientSizeCore(int x None,int y None)
function None None.GetQuantity(productID None None,elemToUpdate None None,productLabelElem None None,buttonElem None None)
protected void None.OnRenderLabelBackground(ToolStripItemRenderEventArgs e None)
public None None.FileStream(String path None,FileMode mode None,FileAccess access None,FileShare share None,int bufferSize None,boolean useAsync None)
protected void None.OnRegionChanged(EventArgs e None)
protected void None.ScaleControl(SizeF factor None,BoundsSpecified specified None)
public void None.OnComponentChanged(Object sender None,ComponentChangedEventArgs ce None)
public None None.ListViewItem(String[] items None,int imageIndex None,Color foreColor None,Color backColor None,Font font None)
protected void None.Dispose(boolean disposing None)
protected void None.OnSideBarButtonClick(WizardNavigationEventArgs e None)
protected void None.SetVisibleCore(boolean visible None)
HRESULT None None.GetPositions(LONGLONG *pCurrent None,LONGLONG *pStop None)
protected void None.RaiseCallbackEvent(String eventArgument None)
public void None.Insert(int index None,String key None,String text None,int width None,HorizontalAlignment textAlign None,String imageKey None)
Sub None None.ValidationFunctionName(source None None,arguments None None)
public Uri None.ResolveUri(Uri baseUri None,String relativeUri None)
HRESULT None None.ShortToULongPtr(_In_ SHORT sOperand,_Out_ ULONG_PTR *pulResult)
protected Size None.ArrangeOverride(Size finalSize None)
protected boolean None.OnBubbleEvent(Object source None,EventArgs e None)
NTSTATUS WINAPI bcrypt.BCryptEnumContextFunctions(_In_ ULONG dwTable,_In_ LPCWSTR pszContext,_In_ ULONG dwInterface,_Inout_ ULONG *pcbBuffer,_Inout_ PCRYPT_CONTEXT_FUNCTIONS *ppBuffer)
HRESULT WINAPI winbio.WinBioLockUnit(_In_ WINBIO_SESSION_HANDLE SessionHandle,_In_ WINBIO_UNIT_ID UnitId)
protected Rectangle None.GetScaledBounds(Rectangle bounds None,SizeF factor None,BoundsSpecified specified None)
protected void None.LoadViewState(Object savedState None)
protected void None.SetClientSizeCore(int x None,int y None)
protected void None.OnContextMenuChanged(EventArgs e None)
protected void None.OnBackgroundImageChanged(EventArgs e None)
protected Rectangle None.GetScaledBounds(Rectangle bounds None,SizeF factor None,BoundsSpecified specified None)
protected void None.OnPreRender(EventArgs e None)
protected boolean None.ProcessDialogChar(char charCode None)
private void None.MyForm_Layout(Object sender None,System.Windows.Forms.LayoutEventArgs e None)
HRESULT None None.DWordPtrToUIntPtr(_In_ DWORD_PTR dwOperand,_Out_ UINT_PTR *puiResult)
protected void None.SetClientSizeCore(int x None,int y None)
private void None.Page_Load(Object sender None,System.EventArgs e None)
private void None.buttonNewCustomer_Click(Object sender None,EventArgs e None)
public void None.CopyTo(WizardStepBase[] array None,int index None)
protected void None.OnParentRightToLeftChanged(EventArgs e None)
VOID WINAPI ntdll.RtlFreeUnicodeString(_Inout_ PUNICODE_STRING UnicodeString)
SerializableAttribute None N