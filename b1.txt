void WINAPI kernel32.GetSystemTimeAsFileTime(_Out_ LPFILETIME lpSystemTimeAsFileTime)
DWORD WINAPI kernel32.GetDynamicTimeZoneInformation(_Out_ PDYNAMIC_TIME_ZONE_INFORMATION pTimeZoneInformation)
BOOLEAN WINAPI ntdll.RtlTimeToSecondsSince1970(_In_ PLARGE_INTEGER Time,_Out_ PULONG ElapsedSeconds)
BOOL WINAPI kernel32.GetSystemTimeAdjustment(_Out_ PDWORD lpTimeAdjustment,_Out_ PDWORD lpTimeIncrement,_Out_ PBOOL lpTimeAdjustmentDisabled)
HRESULT WINAPI kernel32.ConvertPerformanceCounterToAuxiliaryCounter(_In_ ULONGLONG ullPerformanceCounterValue,_Out_ PULONGLONG lpAuxiliaryCounterValue,_Out_opt_ PULONGLONG lpConversionError)
NTSTATUS WINAPI ntdll.RtlLocalTimeToSystemTime(_In_ PLARGE_INTEGER LocalTime,_Out_ PLARGE_INTEGER SystemTime)
VOID None kernel32.QueryInterruptTimePrecise(_Out_ PULONGLONG lpInterruptTimePrecise)
BOOL WINAPI kernel32.DosDateTimeToFileTime(_In_ WORD wFatDate,_In_ WORD wFatTime,_Out_ LPFILETIME lpFileTime)
BOOL WINAPI kernel32.GetFileTime(_In_ HANDLE hFile,_Out_opt_ LPFILETIME lpCreationTime,_Out_opt_ LPFILETIME lpLastAccessTime,_Out_opt_ LPFILETIME lpLastWriteTime)
void WINAPI kernel32.GetLocalTime(_Out_ LPSYSTEMTIME lpSystemTime)
ULONGLONG WINAPI kernel32.GetTickCount64(void None None)
HRESULT WINAPI kernel32.ConvertAuxiliaryCounterToPerformanceCounter(_In_ ULONGLONG ullAuxiliaryCounterValue,_Out_ PULONGLONG lpPerformanceCounterValue,_Out_opt_ PULONGLONG lpConversionError)
VOID None kernel32.QueryInterruptTime(_Out_ PULONGLONG lpInterruptTime)
BOOL WINAPI kernel32.SystemTimeToTzSpecificLocalTime(_In_opt_ LPTIME_ZONE_INFORMATION lpTimeZone,_In_ LPSYSTEMTIME lpUniversalTime,_Out_ LPSYSTEMTIME lpLocalTime)
BOOL WINAPI kernel32.GetSystemTimes(_Out_opt_ LPFILETIME lpIdleTime,_Out_opt_ LPFILETIME lpKernelTime,_Out_opt_ LPFILETIME lpUserTime)
BOOL None kernel32.QueryUnbiasedInterruptTime(_Out_ PULONGLONG lpUnbiasedInterruptTime)
DWORD WINAPI kernel32.GetTickCount(void None None)
VOID WINAPI kernel32.GetSystemTimePreciseAsFileTime(_Out_ LPFILETIME lpSystemTimeAsFileTime)
BOOL WINAPI kernel32.SetSystemTimeAdjustment(_In_ DWORD dwTimeAdjustment,_In_ BOOL bTimeAdjustmentDisabled)
void WINAPI kernel32.GetSystemTime(_Out_ LPSYSTEMTIME lpSystemTime)
NTSTATUS WINAPI ntdll.NtQuerySystemTime(_Out_ PLARGE_INTEGER SystemTime)
void WINAPI kernel32.GetSystemTimeAsFileTime(_Out_ LPFILETIME lpSystemTimeAsFileTime)
BOOL WINAPI kernel32.TzSpecificLocalTimeToSystemTime(_In_opt_ LPTIME_ZONE_INFORMATION lpTimeZoneInformation,_In_ LPSYSTEMTIME lpLocalTime,_Out_ LPSYSTEMTIME lpUniversalTime)
DWORD WINAPI kernel32.GetTimeZoneInformation(_Out_ LPTIME_ZONE_INFORMATION lpTimeZoneInformation)
HRESULT WINAPI kernel32.QueryAuxiliaryCounterFrequency(_Out_ PULONGLONG lpAuxiliaryCounterFrequency)
BOOL WINAPI kernel32.GetTimeZoneInformationForYear(_In_ USHORT wYear,_In_opt_ PDYNAMIC_TIME_ZONE_INFORMATION pdtzi,_Out_ LPTIME_ZONE_INFORMATION ptzi)
VOID None kernel32.QueryUnbiasedInterruptTimePrecise(_Out_ PULONGLONG lpUnbiasedInterruptTimePrecise)
BOOL WINAPI kernel32.GetSystemTimeAdjustment(_Out_ PDWORD lpTimeAdjustment,_Out_ PDWORD lpTimeIncrement,_Out_ PBOOL lpTimeAdjustmentDisabled)
DWORD WINAPI kernel32.GetDynamicTimeZoneInformation(_Out_ PDYNAMIC_TIME_ZONE_INFORMATION pTimeZoneInformation)
HMODULE WINAPI kernel32.LoadLibrary(_In_ LPCTSTR lpFileName)
HMODULE WINAPI kernel32.LoadLibraryW(_In_ LPCTSTR lpFileName)
HMODULE WINAPI kernel32.LoadLibraryA(_In_ LPCTSTR lpFileName)
BOOLEAN WINAPI ntdll.RtlTimeToSecondsSince1970(_In_ PLARGE_INTEGER Time,_Out_ PULONG ElapsedSeconds)
FARPROC WINAPI kernel32.GetProcAddress(_In_ HMODULE hModule,_In_ LPCSTR lpProcName)
DWORD WINAPI kernel32.GetLastError(void None None)
DWORD WINAPI kernel32.GetLastError(void None None)
BOOL WINAPI kernel32.GetFileTime(_In_ HANDLE hFile,_Out_opt_ LPFILETIME lpCreationTime,_Out_opt_ LPFILETIME lpLastAccessTime,_Out_opt_ LPFILETIME lpLastWriteTime)
LARGE_INTEGER None hal.KeQueryPerformanceCounter(_Out_opt_ PLARGE_INTEGER PerformanceFrequency)
MMRESULT None winmm.timeBeginPeriod(UINT uPeriod None)
VOID None kernel32.QueryInterruptTimePrecise(_Out_ PULONGLONG lpInterruptTimePrecise)
void WINAPI kernel32.GetSystemTime(_Out_ LPSYSTEMTIME lpSystemTime)
HRESULT WINAPI kernel32.ConvertAuxiliaryCounterToPerformanceCounter(_In_ ULONGLONG ullAuxiliaryCounterValue,_Out_ PULONGLONG lpPerformanceCounterValue,_Out_opt_ PULONGLONG lpConversionError)
void WINAPI kernel32.GetLocalTime(_Out_ LPSYSTEMTIME lpSystemTime)
DWORD WINAPI kernel32.GetTickCount(void None None)
void WINAPI kernel32.RtlUnwind(_In_opt_ PVOID TargetFrame,_In_opt_ PVOID TargetIp,_In_opt_ PEXCEPTION_RECORD ExceptionRecord,_In_ PVOID ReturnValue)
void WINAPI kernel32.SetLastError(_In_ DWORD dwErrCode)
BOOL WINAPI api-ms-win-core-libraryloader-l1-1-1.QueryOptionalDelayLoadedAPI(_In_ HMODULE hParentModule,_In_ LPCSTR lpDllName,_In_ LPCSTR lpProcName,_Reserved_ DWORD Reserved)
DWORD WINAPI kernel32.FormatMessage(_In_ DWORD dwFlags,_In_opt_ LPCVOID lpSource,_In_ DWORD dwMessageId,_In_ DWORD dwLanguageId,_Out_ LPTSTR lpBuffer,_In_ DWORD nSize,_In_opt_ va_list *Arguments)
DWORD WINAPI kernel32.FormatMessageW(_In_ DWORD dwFlags,_In_opt_ LPCVOID lpSource,_In_ DWORD dwMessageId,_In_ DWORD dwLanguageId,_Out_ LPTSTR lpBuffer,_In_ DWORD nSize,_In_opt_ va_list *Arguments)
DWORD WINAPI kernel32.FormatMessageA(_In_ DWORD dwFlags,_In_opt_ LPCVOID lpSource,_In_ DWORD dwMessageId,_In_ DWORD dwLanguageId,_Out_ LPTSTR lpBuffer,_In_ DWORD nSize,_In_opt_ va_list *Arguments)
void WINAPI kernel32.SetLastError(_In_ DWORD dwErrCode)
BOOL None kernel32.SetThreadErrorMode(_In_ DWORD dwNewMode,_Out_ LPDWORD lpOldMode)
BOOL WINAPI kernel32.DisableThreadLibraryCalls(_In_ HMODULE hModule)
BOOL WINAPI kernel32.GetSystemTimes(_Out_opt_ LPFILETIME lpIdleTime,_Out_opt_ LPFILETIME lpKernelTime,_Out_opt_ LPFILETIME lpUserTime)
HRESULT WINAPI kernel32.QueryAuxiliaryCounterFrequency(_Out_ PULONGLONG lpAuxiliaryCounterFrequency)
NTSTATUS WINAPI ntdll.RtlLocalTimeToSystemTime(_In_ PLARGE_INTEGER LocalTime,_Out_ PLARGE_INTEGER SystemTime)
VOID None kernel32.QueryUnbiasedInterruptTimePrecise(_Out_ PULONGLONG lpUnbiasedInterruptTimePrecise)
HMODULE WINAPI kernel32.LoadLibraryEx(_In_ LPCTSTR lpFileName,_Reserved_ HANDLE hFile,_In_ DWORD dwFlags)
HMODULE WINAPI kernel32.LoadLibraryExW(_In_ LPCTSTR lpFileName,_Reserved_ HANDLE hFile,_In_ DWORD dwFlags)
HMODULE WINAPI kernel32.LoadLibraryExA(_In_ LPCTSTR lpFileName,_Reserved_ HANDLE hFile,_In_ DWORD dwFlags)
VOID None None.KeQueryTickCount(_Out_ PLARGE_INTEGER TickCount)
HRESULT None None.HRESULT_FROM_WIN32(DWORD x None)
PEXCEPTION_ROUTINE WINAPI kernel32.RtlVirtualUnwind(_In_ HandlerType None,_In_ ImageBase None,_In_ ControlPC None,_In_ FunctionEntry None,_Inout_ ContextRecord None,_Out_ InFunction None,_Out_ EstablisherFrame None,_Inout_opt_ ContextPointers None)
BOOL WINAPI kernel32.QueryPerformanceFrequency(_Out_ LARGE_INTEGER *lpFrequency)
DLL_DIRECTORY_COOKIE WINAPI kernel32.AddDllDirectory(_In_ PCWSTR NewDirectory)
BOOL WINAPI kernel32.GetVolumeInformation(_In_opt_ LPCTSTR lpRootPathName,_Out_opt_ LPTSTR lpVolumeNameBuffer,_In_ DWORD nVolumeNameSize,_Out_opt_ LPDWORD lpVolumeSerialNumber,_Out_opt_ LPDWORD lpMaximumComponentLength,_Out_opt_ LPDWORD lpFileSystemFlags,_Out_opt_ LPTSTR lpFileSystemNameBuffer,_In_ DWORD nFileSystemNameSize)
BOOL WINAPI kernel32.GetVolumeInformationW(_In_opt_ LPCTSTR lpRootPathName,_Out_opt_ LPTSTR lpVolumeNameBuffer,_In_ DWORD nVolumeNameSize,_Out_opt_ LPDWORD lpVolumeSerialNumber,_Out_opt_ LPDWORD lpMaximumComponentLength,_Out_opt_ LPDWORD lpFileSystemFlags,_Out_opt_ LPTSTR lpFileSystemNameBuffer,_In_ DWORD nFileSystemNameSize)
BOOL WINAPI kernel32.GetVolumeInformationA(_In_opt_ LPCTSTR lpRootPathName,_Out_opt_ LPTSTR lpVolumeNameBuffer,_In_ DWORD nVolumeNameSize,_Out_opt_ LPDWORD lpVolumeSerialNumber,_Out_opt_ LPDWORD lpMaximumComponentLength,_Out_opt_ LPDWORD lpFileSystemFlags,_Out_opt_ LPTSTR lpFileSystemNameBuffer,_In_ DWORD nFileSystemNameSize)
DLL_DIRECTORY_COOKIE WINAPI kernel32.AddDllDirectory(_In_ PCWSTR NewDirectory)
USHORT WINAPI kernel32.CaptureStackBackTrace(_In_ ULONG FramesToSkip,_In_ ULONG FramesToCapture,_Out_ PVOID *BackTrace,_Out_opt_ PULONG BackTraceHash)
MMRESULT None winmm.timeBeginPeriod(UINT uPeriod None)
VOID WINAPI kernel32.FreeLibraryAndExitThread(_In_ HMODULE hModule,_In_ DWORD dwExitCode)
void WINAPI kernel32.RtlUnwind2(_In_opt_ PVOID TargetFrame,_In_opt_ PVOID TargetIp,_In_opt_ PEXCEPTION_RECORD ExceptionRecord,_In_ PVOID ReturnValue,_In_ PCONTEXT OriginalContext)
void None None.VoidFunc1(void None None)
DWORD None None.SCODE_SEVERITY(SCODE sc None)
HANDLE WINAPI kernel32.CreateFile(_In_ LPCTSTR lpFileName,_In_ DWORD dwDesiredAccess,_In_ DWORD dwShareMode,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ DWORD dwCreationDisposition,_In_ DWORD dwFlagsAndAttributes,_In_opt_ HANDLE hTemplateFile)
HANDLE WINAPI kernel32.CreateFileW(_In_ LPCTSTR lpFileName,_In_ DWORD dwDesiredAccess,_In_ DWORD dwShareMode,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ DWORD dwCreationDisposition,_In_ DWORD dwFlagsAndAttributes,_In_opt_ HANDLE hTemplateFile)
HANDLE WINAPI kernel32.CreateFileA(_In_ LPCTSTR lpFileName,_In_ DWORD dwDesiredAccess,_In_ DWORD dwShareMode,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ DWORD dwCreationDisposition,_In_ DWORD dwFlagsAndAttributes,_In_opt_ HANDLE hTemplateFile)
BOOL WINAPI kernel32.FreeLibrary(_In_ HMODULE hModule)
ULONGLONG None None.Int64ShllMod32([in] ULONGLONG Value,[in] DWORD ShiftCount)
BOOL WINAPI kernel32.SetComputerNameEx(_In_ COMPUTER_NAME_FORMAT NameType,_In_ LPCTSTR lpBuffer)
BOOL WINAPI kernel32.SetComputerNameExW(_In_ COMPUTER_NAME_FORMAT NameType,_In_ LPCTSTR lpBuffer)
BOOL WINAPI kernel32.SetComputerNameExA(_In_ COMPUTER_NAME_FORMAT NameType,_In_ LPCTSTR lpBuffer)
HLOCAL WINAPI kernel32.LocalFree(_In_ HLOCAL hMem)
DWORD WINAPI kernel32.GetTimeZoneInformation(_Out_ LPTIME_ZONE_INFORMATION lpTimeZoneInformation)
BOOL WINAPI kernelbase.TlsSetValue(_In_ DWORD dwTlsIndex,_In_opt_ LPVOID lpTlsValue)
BOOL WINAPI kernel32.DisableThreadLibraryCalls(_In_ HMODULE hModule)
BOOL None advapi32.OperationStart(_In_ OPERATION_START_PARAMETERS *OperationParams)
BOOL WINAPI kernel32.CreateHardLink(_In_ LPCTSTR lpFileName,_In_ LPCTSTR lpExistingFileName,_Reserved_ LPSECURITY_ATTRIBUTES lpSecurityAttributes)
BOOL WINAPI kernel32.CreateHardLinkW(_In_ LPCTSTR lpFileName,_In_ LPCTSTR lpExistingFileName,_Reserved_ LPSECURITY_ATTRIBUTES lpSecurityAttributes)
BOOL WINAPI kernel32.CreateHardLinkA(_In_ LPCTSTR lpFileName,_In_ LPCTSTR lpExistingFileName,_Reserved_ LPSECURITY_ATTRIBUTES lpSecurityAttributes)
ULONGLONG WINAPI kernel32.GetTickCount64(void None None)
DWORD WINAPI kernel32.GetLastError(void None None)
VOID None None.KeQuerySystemTime(_Out_ PLARGE_INTEGER CurrentTime)
LONGLONG None None.Int64ShraMod32([in] LONGLONG Value,[in] DWORD ShiftCount)
BOOL None None.SUCCEEDED(HRESULT hr None)
BOOL WINAPI kernel32.SetCurrentDirectory(_In_ LPCTSTR lpPathName)
BOOL WINAPI kernel32.SetCurrentDirectoryW(_In_ LPCTSTR lpPathName)
BOOL WINAPI kernel32.SetCurrentDirectoryA(_In_ LPCTSTR lpPathName)
DWORD WINAPI kernel32.GetDllDirectory(_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer)
DWORD WINAPI kernel32.GetDllDirectoryW(_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer)
DWORD WINAPI kernel32.GetDllDirectoryA(_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer)
BOOL WINAPI user32.MessageBeep(_In_ UINT uType)
BOOL WINAPI kernel32.FindNextFile(_In_ HANDLE hFindFile,_Out_ LPWIN32_FIND_DATA lpFindFileData)
BOOL WINAPI kernel32.FindNextFileW(_In_ HANDLE hFindFile,_Out_ LPWIN32_FIND_DATA lpFindFileData)
BOOL WINAPI kernel32.FindNextFileA(_In_ HANDLE hFindFile,_Out_ LPWIN32_FIND_DATA lpFindFileData)
WORD None None.SCODE_FACILITY(SCODE sc None)
HRESULT None None.MyFunc([in None None,optional] VARIANT Param1,[out None None,optional] VARIANT Param2)
BOOL WINAPI kernel32.GetModuleHandleEx(_In_ DWORD dwFlags,_In_opt_ LPCTSTR lpModuleName,_Out_ HMODULE *phModule)
BOOL WINAPI kernel32.GetModuleHandleExW(_In_ DWORD dwFlags,_In_opt_ LPCTSTR lpModuleName,_Out_ HMODULE *phModule)
BOOL WINAPI kernel32.GetModuleHandleExA(_In_ DWORD dwFlags,_In_opt_ LPCTSTR lpModuleName,_Out_ HMODULE *phModule)
BOOL WINAPI kernel32.MoveFileEx(_In_ LPCTSTR lpExistingFileName,_In_opt_ LPCTSTR lpNewFileName,_In_ DWORD dwFlags)
BOOL WINAPI kernel32.MoveFileExW(_In_ LPCTSTR lpExistingFileName,_In_opt_ LPCTSTR lpNewFileName,_In_ DWORD dwFlags)
BOOL WINAPI kernel32.MoveFileExA(_In_ LPCTSTR lpExistingFileName,_In_opt_ LPCTSTR lpNewFileName,_In_ DWORD dwFlags)
ULONGLONG None None.Int64ShllMod32([in] ULONGLONG Value,[in] DWORD ShiftCount)
MMRESULT None winmm.timeKillEvent(UINT uTimerID None)
LPVOID WINAPI kernel32.MapViewOfFileEx(_In_ HANDLE hFileMappingObject,_In_ DWORD dwDesiredAccess,_In_ DWORD dwFileOffsetHigh,_In_ DWORD dwFileOffsetLow,_In_ SIZE_T dwNumberOfBytesToMap,_In_opt_ LPVOID lpBaseAddress)
HRESULT None None.StringCchPrintf(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszFormat,_In_ ... None)
HRESULT None None.StringCchPrintfW(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszFormat,_In_ ... None)
HRESULT None None.StringCchPrintfA(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszFormat,_In_ ... None)
BOOL WINAPI kernel32.GetComputerName(_Out_ LPTSTR lpBuffer,_Inout_ LPDWORD lpnSize)
BOOL WINAPI kernel32.GetComputerNameW(_Out_ LPTSTR lpBuffer,_Inout_ LPDWORD lpnSize)
BOOL WINAPI kernel32.GetComputerNameA(_Out_ LPTSTR lpBuffer,_Inout_ LPDWORD lpnSize)
BOOL WINAPI user32.FlashWindowEx(_In_ PFLASHWINFO pfwi)
ULONGLONG None None.KeQueryInterruptTime(void None None)
BOOL WINAPI kernel32.DefineDosDevice(_In_ DWORD dwFlags,_In_ LPCTSTR lpDeviceName,_In_opt_ LPCTSTR lpTargetPath)
BOOL WINAPI kernel32.DefineDosDeviceW(_In_ DWORD dwFlags,_In_ LPCTSTR lpDeviceName,_In_opt_ LPCTSTR lpTargetPath)
BOOL WINAPI kernel32.DefineDosDeviceA(_In_ DWORD dwFlags,_In_ LPCTSTR lpDeviceName,_In_opt_ LPCTSTR lpTargetPath)
DWORD WINAPI kernel32.LoadModule(_In_ LPCSTR lpModuleName,_In_ LPVOID lpParameterBlock)
DWORD None winmm.timeGetTime(void None None)
HLOCAL WINAPI kernel32.LocalFree(_In_ HLOCAL hMem)
BOOL WINAPI kernel32.GetVolumePathName(_In_ LPCTSTR lpszFileName,_Out_ LPTSTR lpszVolumePathName,_In_ DWORD cchBufferLength)
BOOL WINAPI kernel32.GetVolumePathNameW(_In_ LPCTSTR lpszFileName,_Out_ LPTSTR lpszVolumePathName,_In_ DWORD cchBufferLength)
BOOL WINAPI kernel32.GetVolumePathNameA(_In_ LPCTSTR lpszFileName,_Out_ LPTSTR lpszVolumePathName,_In_ DWORD cchBufferLength)
VOID WINAPI kernel32.ExitThread(_In_ DWORD dwExitCode)
LPVOID WINAPI kernel32.CreateFiber(_In_ SIZE_T dwStackSize,_In_ LPFIBER_START_ROUTINE lpStartAddress,_In_opt_ LPVOID lpParameter)
DEP_SYSTEM_POLICY_TYPE WINAPI kernel32.GetSystemDEPPolicy(void None None)
BOOL WINAPI kernel32.CopyFileEx(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName,_In_opt_ LPPROGRESS_ROUTINE lpProgressRoutine,_In_opt_ LPVOID lpData,_In_opt_ LPBOOL pbCancel,_In_ DWORD dwCopyFlags)
BOOL WINAPI kernel32.CopyFileExW(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName,_In_opt_ LPPROGRESS_ROUTINE lpProgressRoutine,_In_opt_ LPVOID lpData,_In_opt_ LPBOOL pbCancel,_In_ DWORD dwCopyFlags)
BOOL WINAPI kernel32.CopyFileExA(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName,_In_opt_ LPPROGRESS_ROUTINE lpProgressRoutine,_In_opt_ LPVOID lpData,_In_opt_ LPBOOL pbCancel,_In_ DWORD dwCopyFlags)
BOOL WINAPI user32.AttachThreadInput(_In_ DWORD idAttach,_In_ DWORD idAttachTo,_In_ BOOL fAttach)
LARGE_INTEGER None hal.KeQueryPerformanceCounter(_Out_opt_ PLARGE_INTEGER PerformanceFrequency)
BOOL None advapi32.OperationStart(_In_ OPERATION_START_PARAMETERS *OperationParams)
BOOL WINAPI user32.FlashWindow(_In_ HWND hWnd,_In_ BOOL bInvert)
BOOL WINAPI user32.FlashWindow(_In_ HWND hWnd,_In_ BOOL bInvert)
void __stdcall atlthunk.AtlThunk_InitData(AtlThunkData_t *Thunk None,void *Proc None,size_t FirstParameter None)
DWORD WINAPI kernel32.GetShortPathName(_In_ LPCTSTR lpszLongPath,_Out_ LPTSTR lpszShortPath,_In_ DWORD cchBuffer)
DWORD WINAPI kernel32.GetShortPathNameW(_In_ LPCTSTR lpszLongPath,_Out_ LPTSTR lpszShortPath,_In_ DWORD cchBuffer)
DWORD WINAPI kernel32.GetShortPathNameA(_In_ LPCTSTR lpszLongPath,_Out_ LPTSTR lpszShortPath,_In_ DWORD cchBuffer)
BOOL WINAPI None.DllMain(_In_ HINSTANCE hinstDLL,_In_ DWORD fdwReason,_In_ LPVOID lpvReserved)
LONG WINAPI lz32.LZSeek(_In_ INT hFile,_In_ LONG lOffset,_In_ INT iOrigin)
MMRESULT None winmm.timeGetSystemTime(LPMMTIME pmmt None,UINT cbmmt None)
BOOL WINAPI kernel32.Beep(_In_ DWORD dwFreq,_In_ DWORD dwDuration)
BOOL WINAPI kernel32.GetFirmwareType(_Inout_ PFIRMWARE_TYPE FirmwareType)
HRESULT None None.StringCbCopy(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc)
HRESULT None None.StringCbCopyW(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc)
HRESULT None None.StringCbCopyA(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc)
WORD None None.SCODE_FACILITY(SCODE sc None)
void WINAPI kernel32.RtlUnwind2(_In_opt_ PVOID TargetFrame,_In_opt_ PVOID TargetIp,_In_opt_ PEXCEPTION_RECORD ExceptionRecord,_In_ PVOID ReturnValue,_In_ PCONTEXT OriginalContext)
VOID None None.DestroyThreadpoolEnvironment(_Inout_ PTP_CALLBACK_ENVIRON pcbe)
DWORD WINAPI kernel32.GetCurrentDirectory(_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer)
DWORD WINAPI kernel32.GetCurrentDirectoryW(_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer)
DWORD WINAPI kernel32.GetCurrentDirectoryA(_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer)
LONGLONG WINAPI None.MultiplyHigh(_In_ LONG64 Multiplier,_In_ LONG64 Multiplicand)
DLL_DIRECTORY_COOKIE WINAPI kernel32.AddDllDirectory(_In_ PCWSTR NewDirectory)
int None kernel32.MulDiv(_In_ int nNumber,_In_ int nNumerator,_In_ int nDenominator)
BOOL WINAPI kernel32.SetEndOfFile(_In_ HANDLE hFile)
BOOL WINAPI kernel32.GetVolumeNameForVolumeMountPoint(_In_ LPCTSTR lpszVolumeMountPoint,_Out_ LPTSTR lpszVolumeName,_In_ DWORD cchBufferLength)
BOOL WINAPI kernel32.GetVolumeNameForVolumeMountPointW(_In_ LPCTSTR lpszVolumeMountPoint,_Out_ LPTSTR lpszVolumeName,_In_ DWORD cchBufferLength)
BOOL WINAPI kernel32.GetVolumeNameForVolumeMountPointA(_In_ LPCTSTR lpszVolumeMountPoint,_Out_ LPTSTR lpszVolumeName,_In_ DWORD cchBufferLength)
HFILE WINAPI kernel32.OpenFile(_In_ LPCSTR lpFileName,_Out_ LPOFSTRUCT lpReOpenBuff,_In_ UINT uStyle)
BOOL WINAPI kernel32.SetSearchPathMode(_In_ DWORD Flags)
DWORD None kernel32.GetThreadErrorMode(void None None)
DWORD None kernel32.GetThreadErrorMode(void None None)
MMRESULT None winmm.timeEndPeriod(UINT uPeriod None)
DWORD64 None None.UnsignedMultiplyExtract128(_In_ DWORD64 Multiplier,_In_ DWORD64 Multiplicand,_In_ BYTE Shift)
BOOL WINAPI kernel32.OOBEComplete(_Out_ PBOOL OOBEComplete)
HANDLE WINAPI kernel32.CreateFileTransacted(_In_ LPCTSTR lpFileName,_In_ DWORD dwDesiredAccess,_In_ DWORD dwShareMode,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ DWORD dwCreationDisposition,_In_ DWORD dwFlagsAndAttributes,_In_opt_ HANDLE hTemplateFile,_In_ HANDLE hTransaction,_In_opt_ PUSHORT pusMiniVersion,_Reserved_ PVOID pExtendedParameter)
HANDLE WINAPI kernel32.CreateFileTransactedW(_In_ LPCTSTR lpFileName,_In_ DWORD dwDesiredAccess,_In_ DWORD dwShareMode,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ DWORD dwCreationDisposition,_In_ DWORD dwFlagsAndAttributes,_In_opt_ HANDLE hTemplateFile,_In_ HANDLE hTransaction,_In_opt_ PUSHORT pusMiniVersion,_Reserved_ PVOID pExtendedParameter)
HANDLE WINAPI kernel32.CreateFileTransactedA(_In_ LPCTSTR lpFileName,_In_ DWORD dwDesiredAccess,_In_ DWORD dwShareMode,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ DWORD dwCreationDisposition,_In_ DWORD dwFlagsAndAttributes,_In_opt_ HANDLE hTemplateFile,_In_ HANDLE hTransaction,_In_opt_ PUSHORT pusMiniVersion,_Reserved_ PVOID pExtendedParameter)
BOOL WINAPI kernel32.VirtualProtectEx(_In_ HANDLE hProcess,_In_ LPVOID lpAddress,_In_ SIZE_T dwSize,_In_ DWORD flNewProtect,_Out_ PDWORD lpflOldProtect)
HANDLE WINAPI kernel32.FindFirstVolume(_Out_ LPTSTR lpszVolumeName,_In_ DWORD cchBufferLength)
HANDLE WINAPI kernel32.FindFirstVolumeW(_Out_ LPTSTR lpszVolumeName,_In_ DWORD cchBufferLength)
HANDLE WINAPI kernel32.FindFirstVolumeA(_Out_ LPTSTR lpszVolumeName,_In_ DWORD cchBufferLength)
BOOL WINAPI kernel32.CloseHandle(_In_ HANDLE hObject)
BOOL None kernel32.EnumLanguageGroupLocales(_In_ LANGGROUPLOCALE_ENUMPROC lpLangGroupLocaleEnumProc,_In_ LGRPID LanguageGroup,_In_ DWORD dwFlags,_In_ LONG_PTR lParam)
BOOL None kernel32.EnumLanguageGroupLocalesW(_In_ LANGGROUPLOCALE_ENUMPROC lpLangGroupLocaleEnumProc,_In_ LGRPID LanguageGroup,_In_ DWORD dwFlags,_In_ LONG_PTR lParam)
BOOL None kernel32.EnumLanguageGroupLocalesA(_In_ LANGGROUPLOCALE_ENUMPROC lpLangGroupLocaleEnumProc,_In_ LGRPID LanguageGroup,_In_ DWORD dwFlags,_In_ LONG_PTR lParam)
LPVOID WINAPI kernelbase.TlsGetValue(_In_ DWORD dwTlsIndex)
LONGLONG None None.Int32x32To64([in] LONG Multiplier,[in] LONG Multiplicand)
DWORD WINAPI kernel32.LoadModule(_In_ LPCSTR lpModuleName,_In_ LPVOID lpParameterBlock)
HRESULT None None.StringCbCopyNEx(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc,_In_ size_t cbSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCbCopyNExW(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc,_In_ size_t cbSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCbCopyNExA(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc,_In_ size_t cbSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags)
DWORD WINAPI kernel32.ExpandEnvironmentStrings(_In_ LPCTSTR lpSrc,_Out_opt_ LPTSTR lpDst,_In_ DWORD nSize)
DWORD WINAPI kernel32.ExpandEnvironmentStringsW(_In_ LPCTSTR lpSrc,_Out_opt_ LPTSTR lpDst,_In_ DWORD nSize)
DWORD WINAPI kernel32.ExpandEnvironmentStringsA(_In_ LPCTSTR lpSrc,_Out_opt_ LPTSTR lpDst,_In_ DWORD nSize)
VOID CALLBACK None.CleanupGroupCancelCallback(_Inout_opt_ PVOID ObjectContext,_Inout_opt_ PVOID CleanupContext)
DWORD None None.SCODE_SEVERITY(SCODE sc None)
HGLOBAL WINAPI None.GlobalDiscard([in] HGLOBAL hMem)
VOID None None.KeQuerySystemTime(_Out_ PLARGE_INTEGER CurrentTime)
BOOL WINAPI kernel32.DeleteFileTransacted(_In_ LPCTSTR lpFileName,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.DeleteFileTransactedW(_In_ LPCTSTR lpFileName,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.DeleteFileTransactedA(_In_ LPCTSTR lpFileName,_In_ HANDLE hTransaction)
void WINAPI kernel32.RtlUnwind(_In_opt_ PVOID TargetFrame,_In_opt_ PVOID TargetIp,_In_opt_ PEXCEPTION_RECORD ExceptionRecord,_In_ PVOID ReturnValue)
SCODE None None.MAKE_SCODE(WORD sev None,WORD fac None,WORD code None)
HMODULE WINAPI kernel32.LoadPackagedLibrary(_In_ LPCWSTR lpwLibFileName,_Reserved_ DWORD Reserved)
BOOL WINAPI user32.PhysicalToLogicalPoint(_In_ HWND hWnd,_Inout_ LPPOINT lpPoint)
DWORD None winmm.timeGetTime(void None None)
BOOL WINAPI kernel32.TerminateJobObject(_In_ HANDLE hJob,_In_ UINT uExitCode)
void WINAPI kernel32.GetNativeSystemInfo(_Out_ LPSYSTEM_INFO lpSystemInfo)
BOOL None None.SUCCEEDED(HRESULT hr None)
HRESULT None None.StringCbPrintf_lEx(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_Out_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ ... None)
HRESULT None None.StringCbPrintf_lExW(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_Out_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ ... None)
HRESULT None None.StringCbPrintf_lExA(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_Out_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ ... None)
BOOL None ole32.CoDosDateTimeToFileTime(_In_ WORD nDosDate,_In_ WORD nDosTime,_Out_ FILETIME *lpFileTime)
BOOL WINAPI kernel32.SetProcessMitigationPolicy(_In_ PROCESS_MITIGATION_POLICY MitigationPolicy,_In_ PVOID lpBuffer,_In_ SIZE_T dwLength)
BOOL WINAPI kernel32.CreateDirectoryTransacted(_In_opt_ LPCTSTR lpTemplateDirectory,_In_ LPCTSTR lpNewDirectory,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.CreateDirectoryTransactedW(_In_opt_ LPCTSTR lpTemplateDirectory,_In_ LPCTSTR lpNewDirectory,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.CreateDirectoryTransactedA(_In_opt_ LPCTSTR lpTemplateDirectory,_In_ LPCTSTR lpNewDirectory,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ HANDLE hTransaction)
ULONG None None.KeQueryTimeIncrement(void None None)
ULONG None None.KeQueryTimeIncrement(void None None)
BOOL WINAPI kernel32.GetVolumeInformation(_In_opt_ LPCTSTR lpRootPathName,_Out_opt_ LPTSTR lpVolumeNameBuffer,_In_ DWORD nVolumeNameSize,_Out_opt_ LPDWORD lpVolumeSerialNumber,_Out_opt_ LPDWORD lpMaximumComponentLength,_Out_opt_ LPDWORD lpFileSystemFlags,_Out_opt_ LPTSTR lpFileSystemNameBuffer,_In_ DWORD nFileSystemNameSize)
BOOL WINAPI kernel32.GetVolumeInformationW(_In_opt_ LPCTSTR lpRootPathName,_Out_opt_ LPTSTR lpVolumeNameBuffer,_In_ DWORD nVolumeNameSize,_Out_opt_ LPDWORD lpVolumeSerialNumber,_Out_opt_ LPDWORD lpMaximumComponentLength,_Out_opt_ LPDWORD lpFileSystemFlags,_Out_opt_ LPTSTR lpFileSystemNameBuffer,_In_ DWORD nFileSystemNameSize)
BOOL WINAPI kernel32.GetVolumeInformationA(_In_opt_ LPCTSTR lpRootPathName,_Out_opt_ LPTSTR lpVolumeNameBuffer,_In_ DWORD nVolumeNameSize,_Out_opt_ LPDWORD lpVolumeSerialNumber,_Out_opt_ LPDWORD lpMaximumComponentLength,_Out_opt_ LPDWORD lpFileSystemFlags,_Out_opt_ LPTSTR lpFileSystemNameBuffer,_In_ DWORD nFileSystemNameSize)
WPARAM None None.MAKEWPARAM(WORD wLow None,WORD wHigh None)
BOOL WINAPI kernel32.HeapFree(_In_ HANDLE hHeap,_In_ DWORD dwFlags,_In_ LPVOID lpMem)
BOOL WINAPI api-ms-win-core-libraryloader-l1-1-1.QueryOptionalDelayLoadedAPI(_In_ HMODULE hParentModule,_In_ LPCSTR lpDllName,_In_ LPCSTR lpProcName,_Reserved_ DWORD Reserved)
HANDLE WINAPI kernel32.FindFirstFileNameW(_In_ LPCWSTR lpFileName,_In_ DWORD dwFlags,_Inout_ LPDWORD StringLength,_Inout_ PWCHAR LinkName)
DWORD WINAPI kernel32.GetFileSize(_In_ HANDLE hFile,_Out_opt_ LPDWORD lpFileSizeHigh)
BOOL WINAPI kernel32.UnmapViewOfFile(_In_ LPCVOID lpBaseAddress)
HRESULT None None.StringCbCatEx(_Inout_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCbCatExW(_Inout_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCbCatExA(_Inout_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags)
ULONG_PTR WINAPI user32.SetClassLongPtr(_In_ HWND hWnd,_In_ int nIndex,_In_ LONG_PTR dwNewLong)
ULONG_PTR WINAPI user32.SetClassLongPtrW(_In_ HWND hWnd,_In_ int nIndex,_In_ LONG_PTR dwNewLong)
ULONG_PTR WINAPI user32.SetClassLongPtrA(_In_ HWND hWnd,_In_ int nIndex,_In_ LONG_PTR dwNewLong)
void WINAPI kernel32.RtlUnwindEx(_In_opt_ PVOID TargetFrame,_In_opt_ PVOID TargetIp,_In_opt_ PEXCEPTION_RECORD ExceptionRecord,_In_ PVOID ReturnValue,_In_ PCONTEXT OriginalContext,_In_opt_ PUNWIND_HISTORY_TABLE HistoryTable)
BOOL WINAPI kernel32.BindIoCompletionCallback(_In_ HANDLE FileHandle,_In_ LPOVERLAPPED_COMPLETION_ROUTINE Function,_In_ ULONG Flags)
void None ole32.CoTaskMemFree(_In_opt_ LPVOID pv)
PVOID WINAPI kernel32.RtlPcToFileHeader(_In_ PVOID PcValue,_Out_ PVOID *BaseOfImage)
LPVOID WINAPI kernel32.LocalLock(_In_ HLOCAL hMem)
BOOL WINAPI kernel32.SetPriorityClass(_In_ HANDLE hProcess,_In_ DWORD dwPriorityClass)
BOOLEAN WINAPI secur32.GetComputerObjectName(_In_ EXTENDED_NAME_FORMAT NameFormat,_Out_ LPTSTR lpNameBuffer,_Inout_ PULONG lpnSize)
BOOLEAN WINAPI secur32.GetComputerObjectNameW(_In_ EXTENDED_NAME_FORMAT NameFormat,_Out_ LPTSTR lpNameBuffer,_Inout_ PULONG lpnSize)
BOOLEAN WINAPI secur32.GetComputerObjectNameA(_In_ EXTENDED_NAME_FORMAT NameFormat,_Out_ LPTSTR lpNameBuffer,_Inout_ PULONG lpnSize)
BOOL WINAPI kernel32.GetFirmwareType(_Inout_ PFIRMWARE_TYPE FirmwareType)
UINT WINAPI kernel32.SetErrorMode(_In_ UINT uMode)
HRESULT None None.StringCbVPrintf_lEx(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_Out_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ va_list argList)
HRESULT None None.StringCbVPrintf_lExW(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_Out_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ va_list argList)
HRESULT None None.StringCbVPrintf_lExA(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_Out_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ va_list argList)
LPVOID WINAPI resutils.ResUtilGetEnvironmentWithNetName(_In_ HRESOURCE hResource)
BOOL None ole32.IsEqualIID(_In_ REFGUID riid1,_In_ REFGUID riid2)
BOOL None kernel32.GetNumaProximityNodeEx(_In_ ULONG ProximityId,_Out_ PUSHORT NodeNumber)
BOOL WINAPI kernel32.SetProcessShutdownParameters(_In_ DWORD dwLevel,_In_ DWORD dwFlags)
int None kernel32.GetSystemDefaultLocaleName(_Out_ LPWSTR lpLocaleName,_In_ int cchLocaleName)
HRESULT None None.HRESULT_FROM_NT(DWORD x None)
BOOL WINAPI kernel32.ReadFile(_In_ HANDLE hFile,_Out_ LPVOID lpBuffer,_In_ DWORD nNumberOfBytesToRead,_Out_opt_ LPDWORD lpNumberOfBytesRead,_Inout_opt_ LPOVERLAPPED lpOverlapped)
UINT WINAPI kernel32.GetSystemDirectory(_Out_ LPTSTR lpBuffer,_In_ UINT uSize)
UINT WINAPI kernel32.GetSystemDirectoryW(_Out_ LPTSTR lpBuffer,_In_ UINT uSize)
UINT WINAPI kernel32.GetSystemDirectoryA(_Out_ LPTSTR lpBuffer,_In_ UINT uSize)
BOOL None kernel32.SetThreadErrorMode(_In_ DWORD dwNewMode,_Out_ LPDWORD lpOldMode)
HANDLE WINAPI kernel32.FindFirstFile(_In_ LPCTSTR lpFileName,_Out_ LPWIN32_FIND_DATA lpFindFileData)
HANDLE WINAPI kernel32.FindFirstFileW(_In_ LPCTSTR lpFileName,_Out_ LPWIN32_FIND_DATA lpFindFileData)
HANDLE WINAPI kernel32.FindFirstFileA(_In_ LPCTSTR lpFileName,_Out_ LPWIN32_FIND_DATA lpFindFileData)
BOOL WINAPI kernel32.QueryProcessAffinityUpdateMode(_In_ HANDLE ProcessHandle,_Out_opt_ DWORD lpdwFlags)
ULONGLONG None None.KeQueryInterruptTime(void None None)
HWND WINAPI user32.CreateWindowEx(_In_ DWORD dwExStyle,_In_opt_ LPCTSTR lpClassName,_In_opt_ LPCTSTR lpWindowName,_In_ DWORD dwStyle,_In_ int x,_In_ int y,_In_ int nWidth,_In_ int nHeight,_In_opt_ HWND hWndParent,_In_opt_ HMENU hMenu,_In_opt_ HINSTANCE hInstance,_In_opt_ LPVOID lpParam)
HWND WINAPI user32.CreateWindowExW(_In_ DWORD dwExStyle,_In_opt_ LPCTSTR lpClassName,_In_opt_ LPCTSTR lpWindowName,_In_ DWORD dwStyle,_In_ int x,_In_ int y,_In_ int nWidth,_In_ int nHeight,_In_opt_ HWND hWndParent,_In_opt_ HMENU hMenu,_In_opt_ HINSTANCE hInstance,_In_opt_ LPVOID lpParam)
HWND WINAPI user32.CreateWindowExA(_In_ DWORD dwExStyle,_In_opt_ LPCTSTR lpClassName,_In_opt_ LPCTSTR lpWindowName,_In_ DWORD dwStyle,_In_ int x,_In_ int y,_In_ int nWidth,_In_ int nHeight,_In_opt_ HWND hWndParent,_In_opt_ HMENU hMenu,_In_opt_ HINSTANCE hInstance,_In_opt_ LPVOID lpParam)
HANDLE WINAPI kernel32.FindFirstVolumeMountPoint(_In_ LPTSTR lpszRootPathName,_Out_ LPTSTR lpszVolumeMountPoint,_In_ DWORD cchBufferLength)
HANDLE WINAPI kernel32.FindFirstVolumeMountPointW(_In_ LPTSTR lpszRootPathName,_Out_ LPTSTR lpszVolumeMountPoint,_In_ DWORD cchBufferLength)
HANDLE WINAPI kernel32.FindFirstVolumeMountPointA(_In_ LPTSTR lpszRootPathName,_Out_ LPTSTR lpszVolumeMountPoint,_In_ DWORD cchBufferLength)
WORD None None.HRESULT_CODE(HRESULT hr None)
MMRESULT None winmm.timeGetDevCaps(LPTIMECAPS ptc None,UINT cbtc None)
UINT WINAPI kernel32.GetWindowsDirectory(_Out_ LPTSTR lpBuffer,_In_ UINT uSize)
UINT WINAPI kernel32.GetWindowsDirectoryW(_Out_ LPTSTR lpBuffer,_In_ UINT uSize)
UINT WINAPI kernel32.GetWindowsDirectoryA(_Out_ LPTSTR lpBuffer,_In_ UINT uSize)
UINT WINAPI kernel32.GetSystemWindowsDirectory(_Out_ LPTSTR lpBuffer,_In_ UINT uSize)
UINT WINAPI kernel32.GetSystemWindowsDirectoryW(_Out_ LPTSTR lpBuffer,_In_ UINT uSize)
UINT WINAPI kernel32.GetSystemWindowsDirectoryA(_Out_ LPTSTR lpBuffer,_In_ UINT uSize)
LPTSTR WINAPI kernel32.lstrcpy(_Out_ LPTSTR lpString1,_In_ LPTSTR lpString2)
LPTSTR WINAPI kernel32.lstrcpyW(_Out_ LPTSTR lpString1,_In_ LPTSTR lpString2)
LPTSTR WINAPI kernel32.lstrcpyA(_Out_ LPTSTR lpString1,_In_ LPTSTR lpString2)
UINT WINAPI kernel32.GetErrorMode(void None None)
HRESULT None None.StringCchCopyNEx(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_In_ size_t cchSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCchCopyNExW(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_In_ size_t cchSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCchCopyNExA(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_In_ size_t cchSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
BOOL WINAPI kernel32.SetProcessDefaultCpuSets(_In_ HANDLE Process,_In_opt_ ULONG CpuSetIds,_In_ ULONG CpuSetIdCound)
void WINAPI kernel32.FatalAppExit(_In_ UINT uAction,_In_ LPCTSTR lpMessageText)
void WINAPI kernel32.FatalAppExitW(_In_ UINT uAction,_In_ LPCTSTR lpMessageText)
void WINAPI kernel32.FatalAppExitA(_In_ UINT uAction,_In_ LPCTSTR lpMessageText)
BOOL CALLBACK None.EnumCodePagesProc(_In_ LPTSTR lpCodePageString)
BOOL WINAPI kernel32.DeleteVolumeMountPoint(_In_ LPCTSTR lpszVolumeMountPoint)
BOOL WINAPI kernel32.DeleteVolumeMountPointW(_In_ LPCTSTR lpszVolumeMountPoint)
BOOL WINAPI kernel32.DeleteVolumeMountPointA(_In_ LPCTSTR lpszVolumeMountPoint)
DWORD WINAPI kernel32.GetModuleFileName(_In_opt_ HMODULE hModule,_Out_ LPTSTR lpFilename,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetModuleFileNameW(_In_opt_ HMODULE hModule,_Out_ LPTSTR lpFilename,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetModuleFileNameA(_In_opt_ HMODULE hModule,_Out_ LPTSTR lpFilename,_In_ DWORD nSize)
void WINAPI kernel32.SetLastError(_In_ DWORD dwErrCode)
HRESULT None shell32.Resolve(HWND hwnd None,DWORD fFlags None)
HRESULT None None.StringCchCat(_Inout_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc)
HRESULT None None.StringCchCatW(_Inout_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc)
HRESULT None None.StringCchCatA(_Inout_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc)
DWORD None kernel32.GetThreadErrorMode(void None None)
BOOL WINAPI kernel32.GetProcessIoCounters(_In_ HANDLE hProcess,_Out_ PIO_COUNTERS lpIoCounters)
BOOL WINAPI advapi32.DecryptFile(_In_ LPCTSTR lpFileName,_Reserved_ DWORD dwReserved)
BOOL WINAPI advapi32.DecryptFileW(_In_ LPCTSTR lpFileName,_Reserved_ DWORD dwReserved)
BOOL WINAPI advapi32.DecryptFileA(_In_ LPCTSTR lpFileName,_Reserved_ DWORD dwReserved)
NTSTATUS None None.IsSecureProcess(_In_ HANDLE ProcessHandle,_Out_ BOOLEAN *SecureProcess)
BOOL WINAPI kernel32.VirtualProtectFromApp(_In_ PVOID Address,_In_ SIZE_T Size,_In_ ULONG NewProtection,_Out_ PULONG OldProtection)
UINT WINAPI kernel32.GetDriveType(_In_opt_ LPCTSTR lpRootPathName)
UINT WINAPI kernel32.GetDriveTypeW(_In_opt_ LPCTSTR lpRootPathName)
UINT WINAPI kernel32.GetDriveTypeA(_In_opt_ LPCTSTR lpRootPathName)
DWORD WINAPI kernel32.GetFullPathName(_In_ LPCTSTR lpFileName,_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer,_Out_ LPTSTR *lpFilePart)
DWORD WINAPI kernel32.GetFullPathNameW(_In_ LPCTSTR lpFileName,_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer,_Out_ LPTSTR *lpFilePart)
DWORD WINAPI kernel32.GetFullPathNameA(_In_ LPCTSTR lpFileName,_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer,_Out_ LPTSTR *lpFilePart)
BOOL WINAPI kernel32.FindVolumeMountPointClose(_In_ HANDLE hFindVolumeMountPoint)
BOOL WINAPI kernelbase.TlsFree(_In_ DWORD dwTlsIndex)
LPVOID WINAPI kernel32.MapViewOfFileExNuma(_In_ HANDLE hFileMappingObject,_In_ DWORD dwDesiredAccess,_In_ DWORD dwFileOffsetHigh,_In_ DWORD dwFileOffsetLow,_In_ SIZE_T dwNumberOfBytesToMap,_In_opt_ LPVOID lpBaseAddress,_In_ DWORD nndPreferred)
PVOID WINAPI api-ms-win-core-memory-l1-1-5.MapViewOfFileNuma2(_In_ HANDLE FileMappingHandle,_In_ HANDLE ProcessHandle,_In_ ULONG64 Offset,_In_opt_ PVOID BaseAddress,_In_ SIZE_T ViewSize,_In_ ULONG AllocationType,_In_ ULONG PageProtection,_In_ ULONG PreferredNode)
HRESULT __stdcall None.TimeProvClose(_In_ TimeProvHandle hTimeProv)
DWORD64 WINAPI None.UnsignedMultiply128(_In_ DWORD64 Multiplier,_In_ DWORD64 Multiplicand,_Out_ DWORD64 *HighProduct)
BOOL WINAPI avrt.AvRtJoinThreadOrderingGroup(_Out_ PHANDLE Context,_In_ GUID *ThreadOrderingGuid,_In_ BOOL Before)
BOOL WINAPI kernel32.RemoveDirectory(_In_ LPCTSTR lpPathName)
BOOL WINAPI kernel32.RemoveDirectoryW(_In_ LPCTSTR lpPathName)
BOOL WINAPI kernel32.RemoveDirectoryA(_In_ LPCTSTR lpPathName)
DWORD WINAPI user32.GetGuiResources(_In_ HANDLE hProcess,_In_ DWORD uiFlags)
HRESULT None None.StringCbCat(_Inout_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc)
HRESULT None None.StringCbCatW(_Inout_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc)
HRESULT None None.StringCbCatA(_Inout_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc)
BOOL WINAPI kernel32.RemoveDllDirectory(_In_ DLL_DIRECTORY_COOKIE Cookie)
VOID WINAPI kernel32.DeleteFiber(_In_ LPVOID lpFiber)
HRESULT None None.StringCbVPrintf_lEx(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_Out_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ va_list argList)
HRESULT None None.StringCbVPrintf_lExW(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_Out_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ va_list argList)
HRESULT None None.StringCbVPrintf_lExA(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_Out_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ va_list argList)
void None None.MyProcedure_notify_flag(boolean __MIDL_NotifyFlag None)
void WINAPI user32.SetLastErrorEx(_In_ DWORD dwErrCode,_In_ DWORD dwType)
BOOL WINAPI kernel32.PrefetchVirtualMemory(_In_ HANDLE hProcess,_In_ ULONG_PTR NumberOfEntries,_In_ PWIN32_MEMORY_RANGE_ENTRY VirtualAddresses,_In_ ULONG Flags)
PVOID WINAPI kernel32.MapViewOfFileFromApp(_In_ HANDLE hFileMappingObject,_In_ ULONG DesiredAccess,_In_ ULONG64 FileOffset,_In_ SIZE_T NumberOfBytesToMap)
BOOL WINAPI kernel32.QueryFullProcessImageName(_In_ HANDLE hProcess,_In_ DWORD dwFlags,_Out_ LPTSTR lpExeName,_Inout_ PDWORD lpdwSize)
BOOL WINAPI kernel32.QueryFullProcessImageNameW(_In_ HANDLE hProcess,_In_ DWORD dwFlags,_Out_ LPTSTR lpExeName,_Inout_ PDWORD lpdwSize)
BOOL WINAPI kernel32.QueryFullProcessImageNameA(_In_ HANDLE hProcess,_In_ DWORD dwFlags,_Out_ LPTSTR lpExeName,_Inout_ PDWORD lpdwSize)
BOOL WINAPI kernel32.GetVolumePathNamesForVolumeName(_In_ LPCTSTR lpszVolumeName,_Out_ LPTSTR lpszVolumePathNames,_In_ DWORD cchBufferLength,_Out_ PDWORD lpcchReturnLength)
BOOL WINAPI kernel32.GetVolumePathNamesForVolumeNameW(_In_ LPCTSTR lpszVolumeName,_Out_ LPTSTR lpszVolumePathNames,_In_ DWORD cchBufferLength,_Out_ PDWORD lpcchReturnLength)
BOOL WINAPI kernel32.GetVolumePathNamesForVolumeNameA(_In_ LPCTSTR lpszVolumeName,_Out_ LPTSTR lpszVolumePathNames,_In_ DWORD cchBufferLength,_Out_ PDWORD lpcchReturnLength)
BOOL WINAPI kernel32.SetDllDirectory(_In_opt_ LPCTSTR lpPathName)
BOOL WINAPI kernel32.SetDllDirectoryW(_In_opt_ LPCTSTR lpPathName)
BOOL WINAPI kernel32.SetDllDirectoryA(_In_opt_ LPCTSTR lpPathName)
HRESULT None None.StringCbLength(_In_ LPCTSTR psz,_In_ size_t cbMax,_Out_ size_t *pcb)
HRESULT None None.StringCbLengthW(_In_ LPCTSTR psz,_In_ size_t cbMax,_Out_ size_t *pcb)
HRESULT None None.StringCbLengthA(_In_ LPCTSTR psz,_In_ size_t cbMax,_Out_ size_t *pcb)
BOOL WINAPI user32.AllowSetForegroundWindow(_In_ DWORD dwProcessId)
HGLOBAL WINAPI kernel32.GlobalHandle(_In_ LPCVOID pMem)
HLOCAL WINAPI kernel32.LocalReAlloc(_In_ HLOCAL hMem,_In_ SIZE_T uBytes,_In_ UINT uFlags)
HRESULT None None.StringCchCatEx(_Inout_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCchCatExW(_Inout_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCchCatExA(_Inout_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
DWORD None None.HRESULT_SEVERITY(HRESULT hr None)
BOOL WINAPI kernel32.SetProcessPriorityBoost(_In_ HANDLE hProcess,_In_ BOOL DisablePriorityBoost)
DWORD None kernel32.GetMaximumProcessorCount(_In_ WORD GroupNumber)
BOOL WINAPI kernel32.QueueUserWorkItem(_In_ LPTHREAD_START_ROUTINE Function,_In_opt_ PVOID Context,_In_ ULONG Flags)
BOOL WINBASEAPI kernel32.SetFirmwareEnvironmentVariableEx(_In_ LPCTSTR lpName,_In_ LPCTSTR lpGuid,_In_ PVOID pValue,_In_ DWORD nSize,_In_ DWORD dwAttributes)
BOOL WINBASEAPI kernel32.SetFirmwareEnvironmentVariableExW(_In_ LPCTSTR lpName,_In_ LPCTSTR lpGuid,_In_ PVOID pValue,_In_ DWORD nSize,_In_ DWORD dwAttributes)
BOOL WINBASEAPI kernel32.SetFirmwareEnvironmentVariableExA(_In_ LPCTSTR lpName,_In_ LPCTSTR lpGuid,_In_ PVOID pValue,_In_ DWORD nSize,_In_ DWORD dwAttributes)
HRESULT WINAPI wofutil.WofSetFileDataLocation(_In_ HANDLE FileHandle,_In_ ULONG Provider,_In_ PVOID ExternalFileInfo,_In_ ULONG Length)
BOOL WINAPI kernel32.GetProcessMitigationPolicy(_In_ HANDLE hProcess,_In_ PROCESS_MITIGATION_POLICY MitigationPolicy,_Out_ PVOID lpBuffer,_In_ SIZE_T dwLength)
VOID None None.SetThreadpoolCallbackLibrary(_Inout_ PTP_CALLBACK_ENVIRON pcbe,_In_ PVOID mod)
ULONGLONG WINAPI None.UnsignedMultiplyHigh(_In_ DWORD64 Multiplier,_In_ DWORD64 Multiplicand)
HRESULT None None.StringCbPrintf_l(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ ... None)
HRESULT None None.StringCbPrintf_lW(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ ... None)
HRESULT None None.StringCbPrintf_lA(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ ... None)
HRESULT None ole32.CoCreateInstanceEx(_In_ REFCLSID rclsid,_In_ IUnknown *punkOuter,_In_ DWORD dwClsCtx,_In_ COSERVERINFO *pServerInfo,_In_ DWORD dwCount,_Inout_ MULTI_QI *pResults)
HRESULT None shell32.GetPath([out] LPTSTR pszFile,[in] int cchMaxPath,[in None None,out] WIN32_FIND_DATA *pfd,[in] DWORD fFlags)
HRESULT WINOLEAPI combase.CoWaitForMultipleObjects(_In_ DWORD dwFlags,_In_ DWORD dwTimeout,_In_ ULONG cHandles,_In_ LPHANDLE pHandles,_Out_ LPDWORD lpdwIndex)
BOOL WINAPI kernel32.QueryPerformanceCounter(_Out_ LARGE_INTEGER *lpPerformanceCount)
HMODULE WINAPI kernel32.GetModuleHandle(_In_opt_ LPCTSTR lpModuleName)
HMODULE WINAPI kernel32.GetModuleHandleW(_In_opt_ LPCTSTR lpModuleName)
HMODULE WINAPI kernel32.GetModuleHandleA(_In_opt_ LPCTSTR lpModuleName)
HRESULT None None.StringCchCopy(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc)
HRESULT None None.StringCchCopyW(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc)
HRESULT None None.StringCchCopyA(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc)
BOOL WINAPI kernel32.IsProcessorFeaturePresent(_In_ DWORD ProcessorFeature)
BOOL None kernel32.GetNumaAvailableMemoryNodeEx(_In_ USHORT Node,_Out_ PULONGLONG AvailableBytes)
ULONGLONG None None.VER_SET_CONDITION(ULONGLONG dwlConditionMask None,DWORD dwTypeBitMask None,BYTE dwConditionMask None)
BOOL WINAPI kernel32.ReplaceFile(_In_ LPCTSTR lpReplacedFileName,_In_ LPCTSTR lpReplacementFileName,_In_opt_ LPCTSTR lpBackupFileName,_In_ DWORD dwReplaceFlags,_Reserved_ LPVOID lpExclude,_Reserved_ LPVOID lpReserved)
BOOL WINAPI kernel32.ReplaceFileW(_In_ LPCTSTR lpReplacedFileName,_In_ LPCTSTR lpReplacementFileName,_In_opt_ LPCTSTR lpBackupFileName,_In_ DWORD dwReplaceFlags,_Reserved_ LPVOID lpExclude,_Reserved_ LPVOID lpReserved)
BOOL WINAPI kernel32.ReplaceFileA(_In_ LPCTSTR lpReplacedFileName,_In_ LPCTSTR lpReplacementFileName,_In_opt_ LPCTSTR lpBackupFileName,_In_ DWORD dwReplaceFlags,_Reserved_ LPVOID lpExclude,_Reserved_ LPVOID lpReserved)
HRESULT None None.StringCchPrintfEx(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags,_In_ LPCTSTR pszFormat,_In_ ... None)
HRESULT None None.StringCchPrintfExW(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags,_In_ LPCTSTR pszFormat,_In_ ... None)
HRESULT None None.StringCchPrintfExA(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags,_In_ LPCTSTR pszFormat,_In_ ... None)
LONG64 WINAPI None.Multiply128(_In_ LONG64 Multiplier,_In_ LONG64 Multiplicand,_Out_ LONG64 *HighProduct)
BOOL WINAPI advapi32.GetUserName(_Out_ LPTSTR lpBuffer,_Inout_ LPDWORD lpnSize)
BOOL WINAPI advapi32.GetUserNameW(_Out_ LPTSTR lpBuffer,_Inout_ LPDWORD lpnSize)
BOOL WINAPI advapi32.GetUserNameA(_Out_ LPTSTR lpBuffer,_Inout_ LPDWORD lpnSize)
HRESULT None None.MyMethod([out None None,retval] InMyFace** ReturnVal)
BOOL WINAPI kernel32.SetThreadpoolTimerEx(_Inout_ PTP_TIMER pti,_In_opt_ PFILETIME pftDueTime,_In_ DWORD msPeriod,_In_opt_ DWORD msWindowLength)
BOOL WINAPI kernel32.VirtualProtect(_In_ LPVOID lpAddress,_In_ SIZE_T dwSize,_In_ DWORD flNewProtect,_Out_ PDWORD lpflOldProtect)
BOOL WINAPI kernel32.AllocateUserPhysicalPages(_In_ HANDLE hProcess,_Inout_ PULONG_PTR NumberOfPages,_Out_ PULONG_PTR UserPfnArray)
BOOL WINAPI kernel32.FindVolumeClose(_In_ HANDLE hFindVolume)
HANDLE WINAPI avrt.AvSetMmMaxThreadCharacteristics(_In_ LPCTSTR FirstTask,_In_ LPCTSTR SecondTask,_Inout_ LPDWORD TaskIndex)
HANDLE WINAPI avrt.AvSetMmMaxThreadCharacteristicsW(_In_ LPCTSTR FirstTask,_In_ LPCTSTR SecondTask,_Inout_ LPDWORD TaskIndex)
HANDLE WINAPI avrt.AvSetMmMaxThreadCharacteristicsA(_In_ LPCTSTR FirstTask,_In_ LPCTSTR SecondTask,_Inout_ LPDWORD TaskIndex)
LCID None kernel32.GetThreadLocale(void None None)
BOOL WINAPI kernel32.SetProcessWorkingSetSizeEx(_In_ HANDLE hProcess,_In_ SIZE_T dwMinimumWorkingSetSize,_In_ SIZE_T dwMaximumWorkingSetSize,_In_ DWORD Flags)
HANDLE WINAPI kernel32.CreateToolhelp32Snapshot(_In_ DWORD dwFlags,_In_ DWORD th32ProcessID)
BOOL WINAPI user32.IsImmersiveProcess(_In_ HANDLE hProcess)
UINT WINAPI kernel32.LocalSize(_In_ HLOCAL hMem)
BOOL WINAPI kernel32.GetPhysicallyInstalledSystemMemory(_Out_ PULONGLONG TotalMemoryInKilobytes)
ULONG64 None None.KeQueryInterruptTimePrecise(_Out_ PULONG64 QpcTimeStamp)
MMRESULT None winmm.timeGetDevCaps(LPTIMECAPS ptc None,UINT cbtc None)
BOOL WINAPI kernel32.SetFilePointerEx(_In_ HANDLE hFile,_In_ LARGE_INTEGER liDistanceToMove,_Out_opt_ PLARGE_INTEGER lpNewFilePointer,_In_ DWORD dwMoveMethod)
HRESULT None None.UnalignedStringCbLength(_In_ LPCTSTR psz,_In_ size_t cbMax,_Out_opt_ size_t *pcbLength)
HRESULT None None.UnalignedStringCbLengthW(_In_ LPCTSTR psz,_In_ size_t cbMax,_Out_opt_ size_t *pcbLength)
HRESULT None None.StringCbLengthA(_In_ LPCTSTR psz,_In_ size_t cbMax,_Out_opt_ size_t *pcbLength)
PTP_WAIT WINAPI kernel32.CreateThreadpoolWait(_In_ PTP_WAIT_CALLBACK pfnwa,_Inout_opt_ PVOID pv,_In_opt_ PTP_CALLBACK_ENVIRON pcbe)
BOOL WINAPI kernel32.CopyFileTransacted(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName,_In_opt_ LPPROGRESS_ROUTINE lpProgressRoutine,_In_opt_ LPVOID lpData,_In_opt_ LPBOOL pbCancel,_In_ DWORD dwCopyFlags,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.CopyFileTransactedW(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName,_In_opt_ LPPROGRESS_ROUTINE lpProgressRoutine,_In_opt_ LPVOID lpData,_In_opt_ LPBOOL pbCancel,_In_ DWORD dwCopyFlags,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.CopyFileTransactedA(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName,_In_opt_ LPPROGRESS_ROUTINE lpProgressRoutine,_In_opt_ LPVOID lpData,_In_opt_ LPBOOL pbCancel,_In_ DWORD dwCopyFlags,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.QueryUmsThreadInformation(_In_ PUMS_CONTEXT UmsThread,_In_ UMS_THREAD_INFO_CLASS UmsThreadInfoClass,_Out_ PVOID UmsThreadInformation,_In_ ULONG UmsThreadInformationLength,_Out_opt_ PULONG ReturnLength)
BOOL WINAPI kernel32.GetExitCodeProcess(_In_ HANDLE hProcess,_Out_ LPDWORD lpExitCode)
HANDLE WINAPI kernel32.OpenProcess(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ DWORD dwProcessId)
BOOL WINAPI kernel32.UmsThreadYield(_In_ PVOID SchedulerParam)
BOOL WINAPI kernel32.HeapSetInformation(_In_opt_ HANDLE HeapHandle,_In_ HEAP_INFORMATION_CLASS HeapInformationClass,_In_ PVOID HeapInformation,_In_ SIZE_T HeapInformationLength)
HRESULT None ole32.CoGetClassObject(_In_ REFCLSID rclsid,_In_ DWORD dwClsContext,_In_opt_ COSERVERINFO *pServerInfo,_In_ REFIID riid,_Out_ LPVOID *ppv)
HLOCAL WINAPI kernel32.LocalAlloc(_In_ UINT uFlags,_In_ SIZE_T uBytes)
BOOL WINAPI kernel32.InitializeProcThreadAttributeList(_Out_opt_ LPPROC_THREAD_ATTRIBUTE_LIST lpAttributeList,_In_ DWORD dwAttributeCount,_Reserved_ DWORD dwFlags,_Inout_ PSIZE_T lpSize)
BOOL WINAPI kernel32.SetProcessWorkingSetSize(_In_ HANDLE hProcess,_In_ SIZE_T dwMinimumWorkingSetSize,_In_ SIZE_T dwMaximumWorkingSetSize)
VOID WINAPI kernel32.SetThreadpoolThreadMaximum(_Inout_ PTP_POOL ptpp,_In_ DWORD cthrdMost)
VOID None None.InitializeThreadpoolEnvironment(_Out_ PTP_CALLBACK_ENVIRON pcbe)
ULONGLONG None None.Int64ShrlMod32([in] ULONGLONG Value,[in] DWORD ShiftCount)
BOOL WINAPI kernel32.GetProcessTimes(_In_ HANDLE hProcess,_Out_ LPFILETIME lpCreationTime,_Out_ LPFILETIME lpExitTime,_Out_ LPFILETIME lpKernelTime,_Out_ LPFILETIME lpUserTime)
HRESULT None None.StringCchVPrintf_l(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ va_list argList)
HRESULT None None.StringCchVPrintf_lW(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ va_list argList)
HRESULT None None.StringCchVPrintf_lA(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ va_list argList)
DWORD WINAPI kernel32.GetThreadId(_In_ HANDLE Thread)
LCID None kernel32.GetSystemDefaultLCID(void None None)
LCID None kernel32.LocaleNameToLCID(_In_ LPCWSTR lpName,_In_ DWORD dwFlags)
void __stdcall atlthunk.AtlThunk_FreeData(AtlThunkData_t *Thunk None)
BOOL WINAPI kernel32.MoveFileWithProgress(_In_ LPCTSTR lpExistingFileName,_In_opt_ LPCTSTR lpNewFileName,_In_opt_ LPPROGRESS_ROUTINE lpProgressRoutine,_In_opt_ LPVOID lpData,_In_ DWORD dwFlags)
BOOL WINAPI kernel32.MoveFileWithProgressW(_In_ LPCTSTR lpExistingFileName,_In_opt_ LPCTSTR lpNewFileName,_In_opt_ LPPROGRESS_ROUTINE lpProgressRoutine,_In_opt_ LPVOID lpData,_In_ DWORD dwFlags)
BOOL WINAPI kernel32.MoveFileWithProgressA(_In_ LPCTSTR lpExistingFileName,_In_opt_ LPCTSTR lpNewFileName,_In_opt_ LPPROGRESS_ROUTINE lpProgressRoutine,_In_opt_ LPVOID lpData,_In_ DWORD dwFlags)
HRESULT None None.StringCchVPrintfEx(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags,_In_ LPCTSTR pszFormat,_In_ va_list argList)
HRESULT None None.StringCchVPrintfExW(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags,_In_ LPCTSTR pszFormat,_In_ va_list argList)
HRESULT None None.StringCchVPrintfExA(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags,_In_ LPCTSTR pszFormat,_In_ va_list argList)
DWORD WINAPI user32.WaitForInputIdle(_In_ HANDLE hProcess,_In_ DWORD dwMilliseconds)
BOOL WINAPI kernel32.GetFileInformationByHandle(_In_ HANDLE hFile,_Out_ LPBY_HANDLE_FILE_INFORMATION lpFileInformation)
SIZE_T WINAPI kernel32.HeapCompact(_In_ HANDLE hHeap,_In_ DWORD dwFlags)
BOOL WINAPI kernel32.SetHandleInformation(_In_ HANDLE hObject,_In_ DWORD dwMask,_In_ DWORD dwFlags)
BOOL WINAPI kernel32.IsNativeVhdBoot(_Out_ PBOOL *NativeVhdBoot)
HRESULT None None.StringCbVPrintfEx(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags,_In_ LPCTSTR pszFormat,_In_ va_list argList)
HRESULT None None.StringCbVPrintfExW(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags,_In_ LPCTSTR pszFormat,_In_ va_list argList)
HRESULT None None.StringCbVPrintfExA(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags,_In_ LPCTSTR pszFormat,_In_ va_list argList)
HRESULT None ole32.CoMarshalInterThreadInterfaceInStream(_In_ REFIID riid,_In_ LPUNKNOWN pUnk,_Out_ LPSTREAM *ppStm)
VOID WINAPI kernel32.DeleteProcThreadAttributeList(_Inout_ LPPROC_THREAD_ATTRIBUTE_LIST lpAttributeList)
HRESULT WINAPI wofutil.WofWimUpdateEntry(_In_ PCWSTR VolumeName,_In_ LARGE_INTEGER DataSourceId,_In_ PCWSTR NewWimPath)
VOID WINAPI kernel32.CloseThreadpoolCleanupGroup(_Inout_ PTP_CLEANUP_GROUP ptpcg)
DWORD WINAPI kernel32.GetCompressedFileSizeTransacted(_In_ LPCTSTR lpFileName,_Out_opt_ LPDWORD lpFileSizeHigh,_In_ HANDLE hTransaction)
DWORD WINAPI kernel32.GetCompressedFileSizeTransactedW(_In_ LPCTSTR lpFileName,_Out_opt_ LPDWORD lpFileSizeHigh,_In_ HANDLE hTransaction)
DWORD WINAPI kernel32.GetCompressedFileSizeTransactedA(_In_ LPCTSTR lpFileName,_Out_opt_ LPDWORD lpFileSizeHigh,_In_ HANDLE hTransaction)
BOOL WINAPI wofutil.WofShouldCompressBinaries(_In_ LPCWSTR Volume,_Out_ PULONG Algorithm)
BOOL WINAPI kernel32.HeapWalk(_In_ HANDLE hHeap,_Inout_ LPPROCESS_HEAP_ENTRY lpEntry)
BOOL WINAPI kernel32.GetProductInfo(_In_ DWORD dwOSMajorVersion,_In_ DWORD dwOSMinorVersion,_In_ DWORD dwSpMajorVersion,_In_ DWORD dwSpMinorVersion,_Out_ PDWORD pdwReturnedProductType)
BOOL WINAPI kernel32.GetNumaProcessorNode(_In_ UCHAR Processor,_Out_ PUCHAR NodeNumber)
BOOL WINAPI kernel32.QueryMemoryResourceNotification(_In_ HANDLE ResourceNotificationHandle,_Out_ PBOOL ResourceState)
DWORD WINAPI kernel32.Wow64SuspendThread(_In_ HANDLE hThread)
BOOL WINAPI kernel32.HeapLock(_In_ HANDLE hHeap)
HRESULT None ole32.StringFromCLSID(_In_ REFCLSID rclsid,_Out_ LPOLESTR *lplpsz)
BOOL WINAPI kernel32.AddSecureMemoryCacheCallback(_In_ PSECURE_MEMORY_CACHE_CALLBACK pfnCallBack)
BOOL None advapi32.OperationEnd(_In_ OPERATION_END_PARAMETERS *OperationParams)
WINAPI None kernel32.GetIntegratedDisplaySize(_Out_ double *sizeInInches)
DWORD WINAPI kernel32.GetLogicalDrives(void None None)
DWORD WINAPI kernel32.GetCurrentProcessorNumber(void None None)
BOOL WINAPI user32.UserHandleGrantAccess(_In_ HANDLE hUserHandle,_In_ HANDLE hJob,_In_ BOOL bGrant)
LONG WINAPI advapi32.RegEnumKeyEx(_In_ HKEY hKey,_In_ DWORD dwIndex,_Out_ LPTSTR lpName,_Inout_ LPDWORD lpcName,_Reserved_ LPDWORD lpReserved,_Inout_ LPTSTR lpClass,_Inout_opt_ LPDWORD lpcClass,_Out_opt_ PFILETIME lpftLastWriteTime)
LONG WINAPI advapi32.RegEnumKeyExW(_In_ HKEY hKey,_In_ DWORD dwIndex,_Out_ LPTSTR lpName,_Inout_ LPDWORD lpcName,_Reserved_ LPDWORD lpReserved,_Inout_ LPTSTR lpClass,_Inout_opt_ LPDWORD lpcClass,_Out_opt_ PFILETIME lpftLastWriteTime)
LONG WINAPI advapi32.RegEnumKeyExA(_In_ HKEY hKey,_In_ DWORD dwIndex,_Out_ LPTSTR lpName,_Inout_ LPDWORD lpcName,_Reserved_ LPDWORD lpReserved,_Inout_ LPTSTR lpClass,_Inout_opt_ LPDWORD lpcClass,_Out_opt_ PFILETIME lpftLastWriteTime)
BOOL WINAPI advapi32.EncryptFile(_In_ LPCTSTR lpFileName)
BOOL WINAPI advapi32.EncryptFileW(_In_ LPCTSTR lpFileName)
BOOL WINAPI advapi32.EncryptFileA(_In_ LPCTSTR lpFileName)
BOOL WINAPI kernel32.GetProcessAffinityMask(_In_ HANDLE hProcess,_Out_ PDWORD_PTR lpProcessAffinityMask,_Out_ PDWORD_PTR lpSystemAffinityMask)
HGLOBAL WINAPI kernel32.GlobalAlloc(_In_ UINT uFlags,_In_ SIZE_T dwBytes)
BOOL WINAPI kernel32.SetProcessDEPPolicy(_In_ DWORD dwFlags)
int None kernel32.GetCalendarInfoEx(_In_opt_ LPCWSTR lpLocaleName,_In_ CALID Calendar,_In_opt_ LPCWSTR lpReserved,_In_ CALTYPE CalType,_Out_opt_ LPWSTR lpCalData,_In_ int cchData,_Out_opt_ LPDWORD lpValue)
BOOL WINAPI kernel32.IsThreadAFiber(void None None)
SIZE_T WINAPI kernel32.GlobalSize(_In_ HGLOBAL hMem)
LONG WINAPI lz32.LZCopy(_In_ INT hfSource,_In_ INT hfDest)
PVOID WINAPI kernel32.FlsGetValue(_In_ DWORD dwFlsIndex)
HANDLE WINAPI kernel32.OpenFileById(_In_ HANDLE hFile,_In_ LPFILE_ID_DESCRIPTOR lpFileID,_In_ DWORD dwDesiredAccess,_In_ DWORD dwShareMode,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ DWORD dwFlags)
HANDLE WINAPI kernel32.CreateFile2(_In_ LPCWSTR lpFileName,_In_ DWORD dwDesiredAccess,_In_ DWORD dwShareMode,_In_ DWORD dwCreationDisposition,_In_opt_ LPCREATEFILE2_EXTENDED_PARAMETERS pCreateExParams)
void WINAPI advapi32.CloseEncryptedFileRaw(_In_ PVOID pvContext)
UINT WINAPI kernel32.ResetWriteWatch(_In_ LPVOID lpBaseAddress,_In_ SIZE_T dwRegionSize)
BOOL None kernel32.GetProcessorSystemCycleTime(_In_ USHORT Group,_Out_ PSYSTEM_PROCESSOR_CYCLE_TIME_INFORMATION Buffer,_Inout_ PDWORD ReturnedLength)
BOOL WINAPI kernel32.GetComputerNameEx(_In_ COMPUTER_NAME_FORMAT NameType,_Out_ LPTSTR lpBuffer,_Inout_ LPDWORD lpnSize)
BOOL WINAPI kernel32.GetComputerNameExW(_In_ COMPUTER_NAME_FORMAT NameType,_Out_ LPTSTR lpBuffer,_Inout_ LPDWORD lpnSize)
BOOL WINAPI kernel32.GetComputerNameExA(_In_ COMPUTER_NAME_FORMAT NameType,_Out_ LPTSTR lpBuffer,_Inout_ LPDWORD lpnSize)
BOOL WINAPI kernel.GetDisplayAutoRotationPreferencesByProcessId(_In_ DWORD *dwProcessId,_Out_ ORIENTATION_PREFERENCE *pOrientation,_Out_ BOOL *fRotateScreen)
HWND WINAPI user32.WindowFromPhysicalPoint(_In_ POINT Point)
VOID WINAPI kernel32.SetThreadpoolTimer(_Inout_ PTP_TIMER pti,_In_opt_ PFILETIME pftDueTime,_In_ DWORD msPeriod,_In_opt_ DWORD msWindowLength)
HRESULT __stdcall None.LogTimeProvEventFunc(_In_ WORD wType,_In_ WCHAR *wszProvName,_In_ WCHAR *wszMessage)
BOOL None None.FAILED(HRESULT hr None)
HRESULT None ole32.CoInitializeEx(_In_opt_ LPVOID pvReserved,_In_ DWORD dwCoInit)
DWORD WINAPI kernel32.ResumeThread(_In_ HANDLE hThread)
BOOL None ole32.IsEqualGUID(_In_ REFGUID rguid1,_In_ REFGUID rguid2)
BOOL None None.IS_ERROR(HRESULT Status None)
VOID WINAPI kernel32.FlushProcessWriteBuffers(void None None)
HRESULT None ole32.CoGetTreatAsClass(_In_ REFCLSID clsidOld,_Out_ LPCLSID pClsidNew)
BOOL WINAPI kernel32.AssignProcessToJobObject(_In_ HANDLE hJob,_In_ HANDLE hProcess)
BOOL WINAPI kernel32.VirtualLock(_In_ LPVOID lpAddress,_In_ SIZE_T dwSize)
BOOL None kernel32.QueryThreadpoolStackInformation(_In_ PTP_POOL ptpp,_Out_ PTP_POOL_STACK_INFORMATION ptpsi)
BOOL WINAPI kernel32.FindCloseChangeNotification(_In_ HANDLE hChangeHandle)
BOOL WINAPI kernel32.GetFileInformationByHandleEx(_In_ HANDLE hFile,_In_ FILE_INFO_BY_HANDLE_CLASS FileInformationClass,_Out_ LPVOID lpFileInformation,_In_ DWORD dwBufferSize)
BOOL None kernel32.GetProcessGroupAffinity(_In_ HANDLE hProcess,_Inout_ PUSHORT GroupCount,_Out_ PUSHORT GroupArray)
BOOL WINAPI kernel32.QueryIdleProcessorCycleTime(_Inout_ PULONG BufferLength,_Out_ PULONG64 ProcessorIdleCycleTime)
HRESULT None None.StringCbVPrintf(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszFormat,_In_ va_list argList)
HRESULT None None.StringCbVPrintfW(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszFormat,_In_ va_list argList)
HRESULT None None.StringCbVPrintfA(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszFormat,_In_ va_list argList)
void WINAPI kernel32.SetFileApisToANSI(void None None)
BOOL WINAPI kernel32.GetProcessWorkingSetSize(_In_ HANDLE hProcess,_Out_ PSIZE_T lpMinimumWorkingSetSize,_Out_ PSIZE_T lpMaximumWorkingSetSize)
BOOL WINAPI kernel32.GetSystemFileCacheSize(_Out_ PSIZE_T lpMinimumFileCacheSize,_Out_ PSIZE_T lpMaximumFileCacheSize,_Out_ PDWORD lpFlags)
BOOL WINAPI kernel32.GetSystemCpuSetInformation(_Out_opt_ PSYSTEM_CPU_SET_INFORMATION Information,_In_ ULONG BufferLength,_Out_ PULONG ReturnedLength,_In_opt_ HANDLE Process,_Reserved_ ULONG Flags)
BOOL WINAPI kernel32.SetComputerName(_In_ LPCTSTR lpComputerName)
BOOL WINAPI kernel32.SetComputerNameW(_In_ LPCTSTR lpComputerName)
BOOL WINAPI kernel32.SetComputerNameA(_In_ LPCTSTR lpComputerName)
VOID WINAPI kernel32.CloseThreadpoolCleanupGroupMembers(_Inout_ PTP_CLEANUP_GROUP ptpcg,_In_ BOOL fCancelPendingCallbacks,_Inout_opt_ PVOID pvCleanupContext)
ULONG WINAPI ntdll.RtlNtStatusToDosError(_In_ NTSTATUS Status)
HRESULT __stdcall None.AlertSamplesAvailFunc(void None None)
ULONG WINAPI ntdll.RtlNtStatusToDosErrorNoTeb(_In_ NTSTATUS Status)
HRESULT None None.StringCbGetsEx(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCbGetsExW(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCbGetsExA(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags)
BOOL WINAPI kernel32.SetVolumeLabel(_In_opt_ LPCTSTR lpRootPathName,_In_opt_ LPCTSTR lpVolumeName)
BOOL WINAPI kernel32.SetVolumeLabelW(_In_opt_ LPCTSTR lpRootPathName,_In_opt_ LPCTSTR lpVolumeName)
BOOL WINAPI kernel32.SetVolumeLabelA(_In_opt_ LPCTSTR lpRootPathName,_In_opt_ LPCTSTR lpVolumeName)
LPVOID WINAPI kernel32.MapViewOfFile(_In_ HANDLE hFileMappingObject,_In_ DWORD dwDesiredAccess,_In_ DWORD dwFileOffsetHigh,_In_ DWORD dwFileOffsetLow,_In_ SIZE_T dwNumberOfBytesToMap)
HRESULT __stdcall None.TimeProvOpen(_In_ WCHAR *wszName,_In_ TimeProvSysCallbacks *pSysCallbacks,_Out_ TimeProvHandle *phTimeProv)
HANDLE WINAPI kernel32.GetCurrentThread(void None None)
BOOL WINAPI api-ms-win-core-apiquery-l1-1-0.ApiSetQueryApiSetPresence(_In_ PCUNICODE_STRING Namespace,_Out_ PBOOLEAN Present)
BOOL WINAPI kernel32.DeleteVolumeMountPoint(_In_ LPCTSTR lpszVolumeMountPoint)
BOOL WINAPI kernel32.DeleteVolumeMountPointW(_In_ LPCTSTR lpszVolumeMountPoint)
BOOL WINAPI kernel32.DeleteVolumeMountPointA(_In_ LPCTSTR lpszVolumeMountPoint)
VOID WINAPI kernel32.SwitchToFiber(_In_ LPVOID lpFiber)
VOID None None.ExSystemTimeToLocalTime(_In_ PLARGE_INTEGER SystemTime,_Out_ PLARGE_INTEGER LocalTime)
VOID WINAPI kernel32.WaitForThreadpoolIoCallbacks(_Inout_ PTP_IO pio,_In_ BOOL fCancelPendingCallbacks)
BOOL WINAPI user32.GetTitleBarInfo(_In_ HWND hwnd,_Inout_ PTITLEBARINFO pti)
LPVOID None ole32.CoTaskMemAlloc(_In_ SIZE_T cb)
HANDLE WINAPI kernel32.OpenFileMappingFromApp(_In_ ULONG DesiredAccess,_In_ BOOL InheritHandle,_In_ PCWSTR Name)
DWORD WINAPI kernelbase.SleepEx(_In_ DWORD dwMilliseconds,_In_ BOOL bAlertable)
int None nlsmap.DownlevelGetParentLocaleName(_In_ LCID Locale,_Out_ LPWSTR lpName,_In_ int cchName)
VOID CALLBACK None.FileIOCompletionRoutine(_In_ DWORD dwErrorCode,_In_ DWORD dwNumberOfBytesTransfered,_Inout_ LPOVERLAPPED lpOverlapped)
VOID WINAPI kernel32.CloseThreadpoolTimer(_Inout_ PTP_TIMER pti)
HRESULT WINAPI wofutil.WofWimEnumFiles(_In_ PCWSTR VolumeName,_In_ LARGE_INTEGER DataSourceId,_In_ WofEnumFilesProc EnumProc,_In_opt_ PVOID UserData)
SIZE_T WINAPI kernel32.VirtualQuery(_In_opt_ LPCVOID lpAddress,_Out_ PMEMORY_BASIC_INFORMATION lpBuffer,_In_ SIZE_T dwLength)
BOOL WINAPI kernel32.SetProcessAffinityUpdateMode(_In_ HANDLE ProcessHandle,_In_ DWORD dwFlags)
VOID WINAPI kernel32.WaitForThreadpoolTimerCallbacks(_Inout_ PTP_TIMER pti,_In_ BOOL fCancelPendingCallbacks)
HRESULT None None.StringCbCatN(_Inout_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc,_In_ size_t cbMaxAppend)
HRESULT None None.StringCbCatNW(_Inout_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc,_In_ size_t cbMaxAppend)
HRESULT None None.StringCbCatNA(_Inout_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc,_In_ size_t cbMaxAppend)
HRESULT None None.StringCchPrintf_l(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ ... None)
HRESULT None None.StringCchPrintf_lW(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ ... None)
HRESULT None None.StringCchPrintf_lA(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ ... None)
PVOID WINAPI kernel32.RtlLookupFunctionEntry(_In_ ULONGLONG ControlPc,_Out_ PULONGLONG ImageBase,_Out_ PULONGLONG TargetGp)
HANDLE WINAPI kernel32.CreateFileMappingNuma(_In_ HANDLE hFile,_In_opt_ LPSECURITY_ATTRIBUTES lpFileMappingAttributes,_In_ DWORD flProtect,_In_ DWORD dwMaximumSizeHigh,_In_ DWORD dwMaximumSizeLow,_In_opt_ LPCTSTR lpName,_In_ DWORD nndPreferred)
HANDLE WINAPI kernel32.CreateFileMappingNumaW(_In_ HANDLE hFile,_In_opt_ LPSECURITY_ATTRIBUTES lpFileMappingAttributes,_In_ DWORD flProtect,_In_ DWORD dwMaximumSizeHigh,_In_ DWORD dwMaximumSizeLow,_In_opt_ LPCTSTR lpName,_In_ DWORD nndPreferred)
HANDLE WINAPI kernel32.CreateFileMappingNumaA(_In_ HANDLE hFile,_In_opt_ LPSECURITY_ATTRIBUTES lpFileMappingAttributes,_In_ DWORD flProtect,_In_ DWORD dwMaximumSizeHigh,_In_ DWORD dwMaximumSizeLow,_In_opt_ LPCTSTR lpName,_In_ DWORD nndPreferred)
BOOL WINAPI kernel32.WriteFileGather(_In_ HANDLE hFile,_In_ FILE_SEGMENT_ELEMENT aSegmentArray[],_In_ DWORD nNumberOfBytesToWrite,_Reserved_ LPDWORD lpReserved,_Inout_ LPOVERLAPPED lpOverlapped)
ULONG NTAPI ntdll.RtlGetSuiteMask(void None None)
VOID WINAPI kernel32.CloseThreadpool(_Inout_ PTP_POOL ptpp)
BOOL WINAPI kernel32.GetThreadSelectedCpuSets(_In_ HANDLE Thread,_Out_opt_ PULONG CpuSetIds,_In_ ULONG CpuSetIdCount,_Out_ PULONG RequiredIdCount)
HRESULT None shell32.GetIDList([out] PIDLIST_ABSOLUTE *ppidl)
WORD None None.HIWORD(DWORD dwValue None)
BOOL WINAPI kernel32.GetProcessPriorityBoost(_In_ HANDLE hProcess,_Out_ PBOOL pDisablePriorityBoost)
BOOL WINAPI kernel32.ReadFileScatter(_In_ HANDLE hFile,_In_ FILE_SEGMENT_ELEMENT aSegmentArray[],_In_ DWORD nNumberOfBytesToRead,_Reserved_ LPDWORD lpReserved,_Inout_ LPOVERLAPPED lpOverlapped)
WINAPI None kernel32.UnmapViewOfFile2(_In_ HANDLE ProcessHandle,_In_ PVOID BaseAddress,_In_ ULONG UnmapFlags)
BOOL None user32.LogicalToPhysicalPointForPerMonitorDPI(_In_ HWND hwnd,_Inout_ LPPOINT lpPoint)
BOOL WINAPI kernel32.Wow64DisableWow64FsRedirection(_Out_ PVOID *OldValue)
VOID CALLBACK None.SimpleCallback(_Inout_ PTP_CALLBACK_INSTANCE Instance,_Inout_opt_ PVOID Context)
BOOL WINAPI kernel32.CancelSynchronousIo(_In_ HANDLE hThread)
int None kernel32.GetCalendarInfo(_In_ LCID Locale,_In_ CALID Calendar,_In_ CALTYPE CalType,_Out_opt_ LPTSTR lpCalData,_In_ int cchData,_Out_opt_ LPDWORD lpValue)
int None kernel32.GetCalendarInfoW(_In_ LCID Locale,_In_ CALID Calendar,_In_ CALTYPE CalType,_Out_opt_ LPTSTR lpCalData,_In_ int cchData,_Out_opt_ LPDWORD lpValue)
int None kernel32.GetCalendarInfoA(_In_ LCID Locale,_In_ CALID Calendar,_In_ CALTYPE CalType,_Out_opt_ LPTSTR lpCalData,_In_ int cchData,_Out_opt_ LPDWORD lpValue)
BOOL WINAPI kernel32.AllocateUserPhysicalPagesNuma(_In_ HANDLE hProcess,_Inout_ PULONG_PTR NumberOfPages,_Out_ PULONG_PTR PageArray,_In_ DWORD nndPreferred)
HRESULT None shell32.SHGetFolderPath(_In_ HWND hwndOwner,_In_ int nFolder,_In_ HANDLE hToken,_In_ DWORD dwFlags,_Out_ LPTSTR pszPath)
HRESULT None shell32.SHGetFolderPathW(_In_ HWND hwndOwner,_In_ int nFolder,_In_ HANDLE hToken,_In_ DWORD dwFlags,_Out_ LPTSTR pszPath)
HRESULT None shell32.SHGetFolderPathA(_In_ HWND hwndOwner,_In_ int nFolder,_In_ HANDLE hToken,_In_ DWORD dwFlags,_Out_ LPTSTR pszPath)
HRESULT None shell32.SetArguments([in] LPCTSTR pszArgs)
VOID WINAPI kernel32.CloseThreadpoolIo(_Inout_ PTP_IO pio)
BOOL WINAPI kernel32.SetFileShortName(_In_ HANDLE hFile,_In_ LPCTSTR lpShortName)
BOOL WINAPI kernel32.SetFileShortNameW(_In_ HANDLE hFile,_In_ LPCTSTR lpShortName)
BOOL WINAPI kernel32.SetFileShortNameA(_In_ HANDLE hFile,_In_ LPCTSTR lpShortName)
DWORD WINAPI user32.SetClassLong(_In_ HWND hWnd,_In_ int nIndex,_In_ LONG dwNewLong)
DWORD WINAPI user32.SetClassLongW(_In_ HWND hWnd,_In_ int nIndex,_In_ LONG dwNewLong)
DWORD WINAPI user32.SetClassLongA(_In_ HWND hWnd,_In_ int nIndex,_In_ LONG dwNewLong)
int WINAPI kernel32.GetUserDefaultGeoName(_Out_ LPWSTR geoName,_In_ geoNameCount int)
DWORD WINAPI kernel32.GetFirmwareEnvironmentVariable(_In_ LPCTSTR lpName,_In_ LPCTSTR lpGuid,_Out_ PVOID pBuffer,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetFirmwareEnvironmentVariableW(_In_ LPCTSTR lpName,_In_ LPCTSTR lpGuid,_Out_ PVOID pBuffer,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetFirmwareEnvironmentVariableA(_In_ LPCTSTR lpName,_In_ LPCTSTR lpGuid,_Out_ PVOID pBuffer,_In_ DWORD nSize)
void APIENTRY lz32.LZClose(_In_ INT hFile)
BOOLEAN WINAPI secur32.TranslateName(_In_ LPCTSTR lpAccountName,_In_ EXTENDED_NAME_FORMAT AccountNameFormat,_In_ EXTENDED_NAME_FORMAT DesiredNameFormat,_Out_ LPTSTR lpTranslatedName,_Inout_ PULONG nSize)
BOOLEAN WINAPI secur32.TranslateNameW(_In_ LPCTSTR lpAccountName,_In_ EXTENDED_NAME_FORMAT AccountNameFormat,_In_ EXTENDED_NAME_FORMAT DesiredNameFormat,_Out_ LPTSTR lpTranslatedName,_Inout_ PULONG nSize)
BOOLEAN WINAPI secur32.TranslateNameA(_In_ LPCTSTR lpAccountName,_In_ EXTENDED_NAME_FORMAT AccountNameFormat,_In_ EXTENDED_NAME_FORMAT DesiredNameFormat,_Out_ LPTSTR lpTranslatedName,_Inout_ PULONG nSize)
UINT WINAPI kernel32.WinExec(_In_ LPCSTR lpCmdLine,_In_ UINT uCmdShow)
BOOL WINAPI kernel32.GetLogicalProcessorInformation(_Out_ PSYSTEM_LOGICAL_PROCESSOR_INFORMATION Buffer,_Inout_ PDWORD ReturnLength)
BYTE None None.HIBYTE(WORD wValue None)
DWORD WINAPI kernel32.GetProcessVersion(_In_ DWORD ProcessId)
BOOL WINAPI kernel32.CreateHardLinkTransacted(_In_ LPCTSTR lpFileName,_In_ LPCTSTR lpExistingFileName,_Reserved_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.CreateHardLinkTransactedW(_In_ LPCTSTR lpFileName,_In_ LPCTSTR lpExistingFileName,_Reserved_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.CreateHardLinkTransactedA(_In_ LPCTSTR lpFileName,_In_ LPCTSTR lpExistingFileName,_Reserved_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ HANDLE hTransaction)
BOOL None kernel32.IsValidCodePage(_In_ UINT CodePage)
BOOL WINAPI kernel32.WriteFileEx(_In_ HANDLE hFile,_In_opt_ LPCVOID lpBuffer,_In_ DWORD nNumberOfBytesToWrite,_Inout_ LPOVERLAPPED lpOverlapped,_In_ LPOVERLAPPED_COMPLETION_ROUTINE lpCompletionRoutine)
HANDLE WINAPI kernel32.HeapCreate(_In_ DWORD flOptions,_In_ SIZE_T dwInitialSize,_In_ SIZE_T dwMaximumSize)
LPVOID WINAPI kernel32.GlobalLock(_In_ HGLOBAL hMem)
BOOL WINAPI kernel32.CancelIo(_In_ HANDLE hFile)
VOID None None.SetThreadpoolCallbackCleanupGroup(_Inout_ PTP_CALLBACK_ENVIRON pcbe,_In_ PTP_CLEANUP_GROUP ptpcg,_In_opt_ PTP_CLEANUP_GROUP_CANCEL_CALLBACK pfng)
HRESULT None None.StringCbLength(_In_ LPCTSTR psz,_In_ size_t cbMax,_Out_ size_t *pcb)
HRESULT None None.StringCbLengthW(_In_ LPCTSTR psz,_In_ size_t cbMax,_Out_ size_t *pcb)
HRESULT None None.StringCbLengthA(_In_ LPCTSTR psz,_In_ size_t cbMax,_Out_ size_t *pcb)
HANDLE WINAPI kernel32.OpenThread(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ DWORD dwThreadId)
BOOL WINAPI kernel32.LocalUnlock(_In_ HLOCAL hMem)
VOID None None.SetThreadpoolCallbackPriority(_Inout_ PTP_CALLBACK_ENVIRON pcbe,_In_ TP_CALLBACK_PRIORITY Priority)
SIZE_T WINAPI kernel32.GetLargePageMinimum(void None None)
HANDLE WINAPI kernel32.CreateRemoteThread(_In_ HANDLE hProcess,_In_ LPSECURITY_ATTRIBUTES lpThreadAttributes,_In_ SIZE_T dwStackSize,_In_ LPTHREAD_START_ROUTINE lpStartAddress,_In_ LPVOID lpParameter,_In_ DWORD dwCreationFlags,_Out_ LPDWORD lpThreadId)
HRESULT __stdcall None.TimeProvCommand(_In_ TimeProvHandle hTimeProv,_In_ TimeProvCmd eCmd,_In_ PVOID pvArgs)
BOOL WINAPI kernel32.IsBadCodePtr(_In_ FARPROC lpfn)
LPVOID WINAPI kernel32.HeapAlloc(_In_ HANDLE hHeap,_In_ DWORD dwFlags,_In_ SIZE_T dwBytes)
HWND WINAPI user32.FindWindow(_In_opt_ LPCTSTR lpClassName,_In_opt_ LPCTSTR lpWindowName)
HWND WINAPI user32.FindWindowW(_In_opt_ LPCTSTR lpClassName,_In_opt_ LPCTSTR lpWindowName)
HWND WINAPI user32.FindWindowA(_In_opt_ LPCTSTR lpClassName,_In_opt_ LPCTSTR lpWindowName)
DWORD WINAPI None.ThreadProc(_In_ LPVOID lpParameter)
HRESULT __stdcall None.TimeProvClose(_In_ TimeProvHandle hTimeProv)
BOOL WINAPI advapi32.CreateProcessWithLogonW(_In_ LPCWSTR lpUsername,_In_opt_ LPCWSTR lpDomain,_In_ LPCWSTR lpPassword,_In_ DWORD dwLogonFlags,_In_opt_ LPCWSTR lpApplicationName,_Inout_opt_ LPWSTR lpCommandLine,_In_ DWORD dwCreationFlags,_In_opt_ LPVOID lpEnvironment,_In_opt_ LPCWSTR lpCurrentDirectory,_In_ LPSTARTUPINFOW lpStartupInfo,_Out_ LPPROCESS_INFORMATION lpProcessInfo)
LPVOID WINAPI kernel32.VirtualAlloc(_In_opt_ LPVOID lpAddress,_In_ SIZE_T dwSize,_In_ DWORD flAllocationType,_In_ DWORD flProtect)
VOID CALLBACK None.FiberProc(_In_ PVOID lpParameter)
HRESULT None None.StringCchCopy(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc)
HRESULT None None.StringCchCopyW(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc)
HRESULT None None.StringCchCopyA(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc)
VOID WINAPI kernel32.SubmitThreadpoolWork(_Inout_ PTP_WORK pwk)
VOID None None.SetThreadpoolCallbackPool(_Inout_ PTP_CALLBACK_ENVIRON pcbe,_In_ PTP_POOL ptpp)
BOOL WINAPI kernel32.HeapDestroy(_In_ HANDLE hHeap)
VOID None None.SetThreadpoolCallbackPersistent(_Inout_ PTP_CALLBACK_ENVIRON pcbe)
VOID FORCEINLINE None.TpSetCallbackPersistent(_Inout_ PTP_CALLBACK_ENVIRON CallbackEnviron)
HRESULT __stdcall None.SetProviderStatusFunc(_In_ SetProviderStatusInfo *pspsi)
HANDLE WINAPI kernel32.CreateFileMappingFromApp(_In_ HANDLE hFile,_In_opt_ PSECURITY_ATTRIBUTES SecurityAttributes,_In_ ULONG PageProtection,_In_ ULONG64 MaximumSize,_In_opt_ PCWSTR Name)
HRESULT None shell32.GetCurrentProcessExplicitAppUserModelID(_Out_ PWSTR *AppID)
BOOL WINAPI user32.AdjustWindowRectEx(_Inout_ LPRECT lpRect,_In_ DWORD dwStyle,_In_ BOOL bMenu,_In_ DWORD dwExStyle)
public None None.HostName(String hostName None)
VOID None None.UmsSchedulerProc(_In_ UMS_SCHEDULER_REASON Reason,_In_ ULONG_PTR ActivationPayload,_In_ PVOID SchedulerParam)
BYTE None None.HIBYTE(WORD wValue None)
HANDLE WINAPI kernel32.GetProcessHeap(void None None)
int None kernel32.GetCalendarInfoEx(_In_opt_ LPCWSTR lpLocaleName,_In_ CALID Calendar,_In_opt_ LPCWSTR lpReserved,_In_ CALTYPE CalType,_Out_opt_ LPWSTR lpCalData,_In_ int cchData,_Out_opt_ LPDWORD lpValue)
LONG64 WINAPI None.Multiply128(_In_ LONG64 Multiplier,_In_ LONG64 Multiplicand,_Out_ LONG64 *HighProduct)
BOOL WINAPI kernel32.Heap32ListNext(_In_ HANDLE hSnapshot,_Out_ LPHEAPLIST32 lphl)
BOOL WINAPI kernel32.ReadFileEx(_In_ HANDLE hFile,_Out_opt_ LPVOID lpBuffer,_In_ DWORD nNumberOfBytesToRead,_Inout_ LPOVERLAPPED lpOverlapped,_In_ LPOVERLAPPED_COMPLETION_ROUTINE lpCompletionRoutine)
DWORD WINAPI kernel32.GetProfileString(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ LPCTSTR lpDefault,_Out_ LPTSTR lpReturnedString,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetProfileStringW(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ LPCTSTR lpDefault,_Out_ LPTSTR lpReturnedString,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetProfileStringA(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ LPCTSTR lpDefault,_Out_ LPTSTR lpReturnedString,_In_ DWORD nSize)
BOOL WINAPI kernel32.MoveFileTransacted(_In_ LPCTSTR lpExistingFileName,_In_opt_ LPCTSTR lpNewFileName,_In_opt_ LPPROGRESS_ROUTINE lpProgressRoutine,_In_opt_ LPVOID lpData,_In_ DWORD dwFlags,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.MoveFileTransactedW(_In_ LPCTSTR lpExistingFileName,_In_opt_ LPCTSTR lpNewFileName,_In_opt_ LPPROGRESS_ROUTINE lpProgressRoutine,_In_opt_ LPVOID lpData,_In_ DWORD dwFlags,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.MoveFileTransactedA(_In_ LPCTSTR lpExistingFileName,_In_opt_ LPCTSTR lpNewFileName,_In_opt_ LPPROGRESS_ROUTINE lpProgressRoutine,_In_opt_ LPVOID lpData,_In_ DWORD dwFlags,_In_ HANDLE hTransaction)
BOOL None kernel32.IsValidLanguageGroup(_In_ LGRPID LanguageGroup,_In_ DWORD dwFlags)
HLOCAL WINAPI kernel32.LocalAlloc(_In_ UINT uFlags,_In_ SIZE_T uBytes)
BOOL CALLBACK None.EnumCalendarInfoProc(_In_ LPTSTR lpCalendarInfoString)
PVOID WINAPI kernel32.VirtualAllocFromApp(_In_opt_ PVOID BaseAddress,_In_ SIZE_T Size,_In_ ULONG AllocationType,_In_ ULONG Protection)
WORD None None.LOWORD(DWORD dwValue None)
DWORD WINAPI advapi32.QueryRecoveryAgentsOnEncryptedFile(_In_ LPCWSTR lpFileName,_Out_ PENCRYPTION_CERTIFICATE_HASH_LIST *pRecoveryAgents)
VOID CALLBACK None.FileIOCompletionRoutine(_In_ DWORD dwErrorCode,_In_ DWORD dwNumberOfBytesTransfered,_Inout_ LPOVERLAPPED lpOverlapped)
WORD None None.HRESULT_FACILITY(HRESULT hr None)
HRESULT None None.ShutdownApplication([in] BSTR bstrApplIDOrName)
BOOLEAN WINAPI secur32.GetUserNameEx(_In_ EXTENDED_NAME_FORMAT NameFormat,_Out_ LPTSTR lpNameBuffer,_Inout_ PULONG lpnSize)
BOOLEAN WINAPI secur32.GetUserNameExW(_In_ EXTENDED_NAME_FORMAT NameFormat,_Out_ LPTSTR lpNameBuffer,_Inout_ PULONG lpnSize)
BOOLEAN WINAPI secur32.GetUserNameExA(_In_ EXTENDED_NAME_FORMAT NameFormat,_Out_ LPTSTR lpNameBuffer,_Inout_ PULONG lpnSize)
BOOL WINAPI kernel32.MoveFileTransacted(_In_ LPCTSTR lpExistingFileName,_In_opt_ LPCTSTR lpNewFileName,_In_opt_ LPPROGRESS_ROUTINE lpProgressRoutine,_In_opt_ LPVOID lpData,_In_ DWORD dwFlags,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.MoveFileTransactedW(_In_ LPCTSTR lpExistingFileName,_In_opt_ LPCTSTR lpNewFileName,_In_opt_ LPPROGRESS_ROUTINE lpProgressRoutine,_In_opt_ LPVOID lpData,_In_ DWORD dwFlags,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.MoveFileTransactedA(_In_ LPCTSTR lpExistingFileName,_In_opt_ LPCTSTR lpNewFileName,_In_opt_ LPPROGRESS_ROUTINE lpProgressRoutine,_In_opt_ LPVOID lpData,_In_ DWORD dwFlags,_In_ HANDLE hTransaction)
UINT WINAPI kernel32.GlobalFlags(_In_ HGLOBAL hMem)
VOID FORCEINLINE None.TpInitializeCallbackEnviron(_Out_ PTP_CALLBACK_ENVIRON CallbackEnviron)
BOOL None kernel32.SetThreadInformation(_In_ HANDLE hThread,_In_ THREAD_INFORMATION_CLASS ThreadInformationClass,_In_reads_bytes_ ThreadInformation None,_In_ DWORD ThreadInformationSize)
BOOL WINAPI kernel32.GetFileInformationByHandleEx(_In_ HANDLE hFile,_In_ FILE_INFO_BY_HANDLE_CLASS FileInformationClass,_Out_ LPVOID lpFileInformation,_In_ DWORD dwBufferSize)
HRESULT None ole32.CreateItemMoniker(_In_ LPCOLESTR lpszDelim,_In_ LPCOLESTR lpszItem,_Out_ LPMONIKER *ppmk)
DWORD WINAPI advapi32.AddUsersToEncryptedFile(_In_ LPCWSTR lpFileName,_In_ PENCRYPTION_CERTIFICATE_LIST pUsers)
BOOL None kernel32.GetCalendarSupportedDateRange(_In_ CALID Calendar,_Out_ LPCALDATETIME lpCalMinDateTime,_Out_ LPCALDATETIME lpCalMaxDateTime)
BOOL WINAPI kernel32.Thread32First(_In_ HANDLE hSnapshot,_Inout_ LPTHREADENTRY32 lpte)
PTP_WORK WINAPI kernel32.CreateThreadpoolWork(_In_ PTP_WORK_CALLBACK pfnwk,_Inout_opt_ PVOID pv,_In_opt_ PTP_CALLBACK_ENVIRON pcbe)
VOID None None.ExSystemTimeToLocalTime(_In_ PLARGE_INTEGER SystemTime,_Out_ PLARGE_INTEGER LocalTime)
LONG WINAPI advapi32.RegLoadMUIString(_In_ HKEY hKey,_In_opt_ LPCTSTR pszValue,_Out_opt_ LPTSTR pszOutBuf,_In_ DWORD cbOutBuf,_Out_opt_ LPDWORD pcbData,_In_ DWORD Flags,_In_opt_ LPCTSTR pszDirectory)
LONG WINAPI advapi32.RegLoadMUIStringW(_In_ HKEY hKey,_In_opt_ LPCTSTR pszValue,_Out_opt_ LPTSTR pszOutBuf,_In_ DWORD cbOutBuf,_Out_opt_ LPDWORD pcbData,_In_ DWORD Flags,_In_opt_ LPCTSTR pszDirectory)
LONG WINAPI advapi32.RegLoadMUIStringA(_In_ HKEY hKey,_In_opt_ LPCTSTR pszValue,_Out_opt_ LPTSTR pszOutBuf,_In_ DWORD cbOutBuf,_Out_opt_ LPDWORD pcbData,_In_ DWORD Flags,_In_opt_ LPCTSTR pszDirectory)
HRESULT None None.EnumFormatEtc([in] DWORD dwDirection,[out] IEnumFORMATETC **ppenumFormatEtc)
ULONGLONG None None.UInt32x32To64([in] DWORD Multiplier,[in] DWORD Multiplicand)
DWORD WINAPI kernel32.GetPriorityClass(_In_ HANDLE hProcess)
BOOL WINAPI wevtapi.EvtGetLogInfo(_In_ EVT_HANDLE Log,_In_ EVT_LOG_PROPERTY_ID PropertyId,_In_ DWORD PropertyValueBufferSize,_In_ PEVT_VARIANT PropertyValueBuffer,_Out_ PDWORD PropertyValueBufferUsed)
BOOL WINAPI kernel32.GetMemoryErrorHandlingCapabilities(_Out_ PULONG Capabilities)
HRESULT None shell32.GetArguments([out] LPTSTR pszArgs,[in] int cchMaxPath)
BOOL WINAPI kernel32.GetOverlappedResult(_In_ HANDLE hFile,_In_ LPOVERLAPPED lpOverlapped,_Out_ LPDWORD lpNumberOfBytesTransferred,_In_ BOOL bWait)
HRESULT None shlwapi.UrlFixupW(_In_ PCWSTR pcszUrl,_Out_ PWSTR pszTranslatedUrl,DWORD cchMax None)
HRESULT None shlwapi.UrlFixupW(_In_ PCWSTR pcszUrl,_Out_ PWSTR pszTranslatedUrl,DWORD cchMax None)
void WINAPI kernel32.SetFileApisToOEM(void None None)
BOOL WINAPI kernel32.WritePrivateProfileString(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ LPCTSTR lpString,_In_ LPCTSTR lpFileName)
BOOL WINAPI kernel32.WritePrivateProfileStringW(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ LPCTSTR lpString,_In_ LPCTSTR lpFileName)
BOOL WINAPI kernel32.WritePrivateProfileStringA(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ LPCTSTR lpString,_In_ LPCTSTR lpFileName)
int None gdi32.CombineRgn(_In_ HRGN hrgnDest,_In_ HRGN hrgnSrc1,_In_ HRGN hrgnSrc2,_In_ int fnCombineMode)
LCID None kernel32.GetUserDefaultLCID(void None None)
HRESULT None combase.CoGetInstanceFromFile(_In_opt_ COSERVERINFO *pServerInfo,_In_opt_ CLSID *pClsid,_In_opt_ IUnknown *punkOuter,_In_ DWORD dwClsCtx,_In_ DWORD grfMode,_In_ OLECHAR *pwszName,_In_ DWORD dwCount,_Inout_ MULTI_QI *pResults)
BOOL WINAPI kernel32.IsBadWritePtr(_In_ LPVOID lp,_In_ UINT_PTR ucb)
DWORD WINAPI kernel32.GetTempPath(_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer)
DWORD WINAPI kernel32.GetTempPathW(_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer)
DWORD WINAPI kernel32.GetTempPathA(_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer)
HRESULT WINAPI wofutil.WofGetDriverVersion(_In_ HANDLE FileOrVolumeHandle,_In_ ULONG Provider,_Out_ PULONG WofVersion)
HRESULT None shell32.SetDescription(LPCTSTR pszName None)
LONG64 None None.MultiplyExtract128(_In_ LONG64 Multiplier,_In_ LONG64 Multiplicand,_In_ BYTE Shift)
BOOL WINAPI kernel32.DeviceIoControl(_In_ HANDLE hDevice,_In_ DWORD dwIoControlCode,_In_opt_ LPVOID lpInBuffer,_In_ DWORD nInBufferSize,_Out_opt_ LPVOID lpOutBuffer,_In_ DWORD nOutBufferSize,_Out_opt_ LPDWORD lpBytesReturned,_Inout_opt_ LPOVERLAPPED lpOverlapped)
BOOL None kernel32.BackupRead(_In_ HANDLE hFile,_Out_ LPBYTE lpBuffer,_In_ DWORD nNumberOfBytesToRead,_Out_ LPDWORD lpNumberOfBytesRead,_In_ BOOL bAbort,_In_ BOOL bProcessSecurity,_Out_ LPVOID *lpContext)
HRESULT None ole32.CoGetClassObject(_In_ REFCLSID rclsid,_In_ DWORD dwClsContext,_In_opt_ COSERVERINFO *pServerInfo,_In_ REFIID riid,_Out_ LPVOID *ppv)
HRESULT None None.StringCbGets(_Out_ LPTSTR pszDest,_In_ size_t cbDest)
HRESULT None None.StringCbGetsW(_Out_ LPTSTR pszDest,_In_ size_t cbDest)
HRESULT None None.StringCbGetsA(_Out_ LPTSTR pszDest,_In_ size_t cbDest)
UINT WINAPI kernel32.GetSystemWow64Directory(_Out_ LPTSTR lpBuffer,_In_ UINT uSize)
UINT WINAPI kernel32.GetSystemWow64DirectoryW(_Out_ LPTSTR lpBuffer,_In_ UINT uSize)
UINT WINAPI kernel32.GetSystemWow64DirectoryA(_Out_ LPTSTR lpBuffer,_In_ UINT uSize)
LANGID None kernel32.GetUserDefaultLangID(void None None)
HRESULT WINAPI ole32.CoGetApartmentType(_Out_ APTTYPE *pAptType,_Out_ APTTYPEQUALIFIER *pAptQualifier)
LRESULT WINAPI user32.DefWindowProc(_In_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
LRESULT WINAPI user32.DefWindowProcW(_In_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
LRESULT WINAPI user32.DefWindowProcA(_In_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
SIZE_T WINAPI kernel32.HeapSize(_In_ HANDLE hHeap,_In_ DWORD dwFlags,_In_ LPCVOID lpMem)
WORD None kernel32.GetMaximumProcessorGroupCount(void None None)
BOOL WINAPI user32.SetProcessDPIAware(void None None)
HRESULT None None.UnalignedStringCchLength(_In_ LPCTSTR psz,_In_ size_t cchMax,_Out_opt_ size_t *pcchLength)
HRESULT None None.UnalignedStringCchLengthW(_In_ LPCTSTR psz,_In_ size_t cchMax,_Out_opt_ size_t *pcchLength)
HRESULT None None.StringCchLengthA(_In_ LPCTSTR psz,_In_ size_t cchMax,_Out_opt_ size_t *pcchLength)
DWORD WINAPI kernel32.GetFileAttributes(_In_ LPCTSTR lpFileName)
DWORD WINAPI kernel32.GetFileAttributesW(_In_ LPCTSTR lpFileName)
DWORD WINAPI kernel32.GetFileAttributesA(_In_ LPCTSTR lpFileName)
PTP_TIMER WINAPI kernel32.CreateThreadpoolTimer(_In_ PTP_TIMER_CALLBACK pfnti,_Inout_opt_ PVOID pv,_In_opt_ PTP_CALLBACK_ENVIRON pcbe)
DWORD WINAPI advapi32.SetUserFileEncryptionKey(_In_ PENCRYPTION_CERTIFICATE pEncryptionCertificate)
BOOL WINAPI advapi32.CreateProcessWithTokenW(_In_ HANDLE hToken,_In_ DWORD dwLogonFlags,_In_opt_ LPCWSTR lpApplicationName,_Inout_opt_ LPWSTR lpCommandLine,_In_ DWORD dwCreationFlags,_In_opt_ LPVOID lpEnvironment,_In_opt_ LPCWSTR lpCurrentDirectory,_In_ LPSTARTUPINFOW lpStartupInfo,_Out_ LPPROCESS_INFORMATION lpProcessInfo)
BOOL None kernel32.EnumSystemLocalesEx(_In_ LOCALE_ENUMPROCEX lpLocaleEnumProcEx,_In_ DWORD dwFlags,_In_ LPARAM lParam,_In_opt_ LPVOID lpReserved)
DWORD WINAPI None.ImportCallback(_In_ PBYTE pbData,_In_opt_ PVOID pvCallbackContext,_Inout_ PULONG ulLength)
DWORD WINAPI kernel32.GetPrivateProfileString(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ LPCTSTR lpDefault,_Out_ LPTSTR lpReturnedString,_In_ DWORD nSize,_In_ LPCTSTR lpFileName)
DWORD WINAPI kernel32.GetPrivateProfileStringW(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ LPCTSTR lpDefault,_Out_ LPTSTR lpReturnedString,_In_ DWORD nSize,_In_ LPCTSTR lpFileName)
DWORD WINAPI kernel32.GetPrivateProfileStringA(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ LPCTSTR lpDefault,_Out_ LPTSTR lpReturnedString,_In_ DWORD nSize,_In_ LPCTSTR lpFileName)
HRESULT None None.Proc3([in] short Arr[MAX_SIZE])
HRESULT None None.StringCchCatNEx(_Inout_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_In_ size_t cchMaxAppend,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCchCatNExW(_Inout_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_In_ size_t cchMaxAppend,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCchCatNExA(_Inout_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_In_ size_t cchMaxAppend,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
BYTE None None.LOBYTE(WORD wValue None)
HRESULT None ole32.OleSetAutoConvert(_In_ REFCLSID clsidOld,_In_ REFCLSID clsidNew)
LPVOID WINAPI kernel32.VirtualAllocEx(_In_ HANDLE hProcess,_In_opt_ LPVOID lpAddress,_In_ SIZE_T dwSize,_In_ DWORD flAllocationType,_In_ DWORD flProtect)
DWORD WINAPI kernel32.SearchPath(_In_opt_ LPCTSTR lpPath,_In_ LPCTSTR lpFileName,_In_opt_ LPCTSTR lpExtension,_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer,_Out_opt_ LPTSTR *lpFilePart)
DWORD WINAPI kernel32.SearchPathW(_In_opt_ LPCTSTR lpPath,_In_ LPCTSTR lpFileName,_In_opt_ LPCTSTR lpExtension,_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer,_Out_opt_ LPTSTR *lpFilePart)
DWORD WINAPI kernel32.SearchPathA(_In_opt_ LPCTSTR lpPath,_In_ LPCTSTR lpFileName,_In_opt_ LPCTSTR lpExtension,_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer,_Out_opt_ LPTSTR *lpFilePart)
HRESULT None None.StringCchVPrintf_lEx(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_Out_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ va_list argList)
HRESULT None None.StringCchVPrintf_lExW(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_Out_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ va_list argList)
HRESULT None None.StringCchVPrintf_lExA(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_Out_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ va_list argList)
BOOL WINAPI kernel32.HeapValidate(_In_ HANDLE hHeap,_In_ DWORD dwFlags,_In_opt_ LPCVOID lpMem)
BOOL CALLBACK None.EnumCalendarInfoProcEx(_In_ LPTSTR lpCalendarInfoString,_In_ CALID Calendar)
BOOL CALLBACK None.EnumCalendarInfoProcExW(_In_ LPTSTR lpCalendarInfoString,_In_ CALID Calendar)
BOOL CALLBACK None.EnumCalendarInfoProcExA(_In_ LPTSTR lpCalendarInfoString,_In_ CALID Calendar)
HRESULT None ole32.CoGetCancelObject(_In_ DWORD dwThreadId,_In_ REFIID iid,_Out_ void **ppUnk)
int None ole32.StringFromGUID2(_In_ REFGUID rguid,_Out_ LPOLESTR lpsz,_In_ int cchMax)
BOOL WINAPI user32.GetLayeredWindowAttributes(_In_ HWND hwnd,_Out_opt_ COLORREF *pcrKey,_Out_opt_ BYTE *pbAlpha,_Out_opt_ DWORD *pdwFlags)
HANDLE WINAPI kernel32.FindFirstFileTransacted(_In_ LPCTSTR lpFileName,_In_ FINDEX_INFO_LEVELS fInfoLevelId,_Out_ LPVOID lpFindFileData,_In_ FINDEX_SEARCH_OPS fSearchOp,_Reserved_ LPVOID lpSearchFilter,_In_ DWORD dwAdditionalFlags,_In_ HANDLE hTransaction)
HANDLE WINAPI kernel32.FindFirstFileTransactedW(_In_ LPCTSTR lpFileName,_In_ FINDEX_INFO_LEVELS fInfoLevelId,_Out_ LPVOID lpFindFileData,_In_ FINDEX_SEARCH_OPS fSearchOp,_Reserved_ LPVOID lpSearchFilter,_In_ DWORD dwAdditionalFlags,_In_ HANDLE hTransaction)
HANDLE WINAPI kernel32.FindFirstFileTransactedA(_In_ LPCTSTR lpFileName,_In_ FINDEX_INFO_LEVELS fInfoLevelId,_Out_ LPVOID lpFindFileData,_In_ FINDEX_SEARCH_OPS fSearchOp,_Reserved_ LPVOID lpSearchFilter,_In_ DWORD dwAdditionalFlags,_In_ HANDLE hTransaction)
typedef None None.void(CALLBACK *PFNASYNCICONTASKBALLBACK None)
HRESULT None shell32.SetHotkey(WORD wHotkey None)
BOOL None kernel32.EnumSystemCodePages(_In_ CODEPAGE_ENUMPROC lpCodePageEnumProc,_In_ DWORD dwFlags)
BOOL None kernel32.EnumSystemCodePagesW(_In_ CODEPAGE_ENUMPROC lpCodePageEnumProc,_In_ DWORD dwFlags)
BOOL None kernel32.EnumSystemCodePagesA(_In_ CODEPAGE_ENUMPROC lpCodePageEnumProc,_In_ DWORD dwFlags)
HRESULT None None.MyFunction([in] short count)
HRESULT None ole32.CoGetObjectContext(_In_ REFIID riid,_Out_ LPVOID *ppv)
BOOL WINAPI kernel32.HeapQueryInformation(_In_opt_ HANDLE HeapHandle,_In_ HEAP_INFORMATION_CLASS HeapInformationClass,_Out_ PVOID HeapInformation,_In_ SIZE_T HeapInformationLength,_Out_opt_ PSIZE_T ReturnLength)
BOOL WINAPI kernel32.DnsHostnameToComputerName(_In_ LPCTSTR Hostname,_Out_ LPTSTR ComputerName,_Inout_ LPDWORD nSize)
BOOL WINAPI kernel32.DnsHostnameToComputerNameW(_In_ LPCTSTR Hostname,_Out_ LPTSTR ComputerName,_Inout_ LPDWORD nSize)
BOOL WINAPI kernel32.DnsHostnameToComputerNameA(_In_ LPCTSTR Hostname,_Out_ LPTSTR ComputerName,_Inout_ LPDWORD nSize)
ULONGLONG WINAPI kernel32.VerSetConditionMask(_In_ ULONGLONG dwlConditionMask,_In_ DWORD dwTypeBitMask,_In_ BYTE dwConditionMask)
BOOL None ole32.CoFileTimeToDosDateTime(_In_ FILETIME *lpFileTime,_Out_ LPWORD lpDosDate,_Out_ LPWORD lpDosTime)
BOOL WINAPI kernel32.DeleteFile(_In_ LPCTSTR lpFileName)
BOOL WINAPI kernel32.DeleteFileW(_In_ LPCTSTR lpFileName)
BOOL WINAPI kernel32.DeleteFileA(_In_ LPCTSTR lpFileName)
HRESULT None None.StringCchPrintf_lEx(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_Out_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ ... None)
HRESULT None None.StringCchPrintf_lExW(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_Out_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ ... None)
HRESULT None None.StringCchPrintf_lExA(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_Out_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ ... None)
HRESULT None ole32.CoGetStdMarshalEx(_In_ LPUNKNOWN pUnkOuter,_In_ DWORD smexflags,_Out_ LPUNKNOWN *ppUnkInner)
BOOL WINAPI kernel32.GetProcessWorkingSetSizeEx(_In_ HANDLE hProcess,_Out_ PSIZE_T lpMinimumWorkingSetSize,_Out_ PSIZE_T lpMaximumWorkingSetSize,_Out_ PDWORD Flags)
BOOL WINAPI user32.SetWindowText(_In_ HWND hWnd,_In_opt_ LPCTSTR lpString)
BOOL WINAPI user32.SetWindowTextW(_In_ HWND hWnd,_In_opt_ LPCTSTR lpString)
BOOL WINAPI user32.SetWindowTextA(_In_ HWND hWnd,_In_opt_ LPCTSTR lpString)
BOOL WINAPI kernel32.NeedCurrentDirectoryForExePath(_In_ LPCTSTR ExeName)
BOOL WINAPI kernel32.NeedCurrentDirectoryForExePathW(_In_ LPCTSTR ExeName)
BOOL WINAPI kernel32.NeedCurrentDirectoryForExePathA(_In_ LPCTSTR ExeName)
VOID WINAPI kernel32.WaitForThreadpoolWaitCallbacks(_Inout_ PTP_WAIT pwa,_In_ BOOL fCancelPendingCallbacks)
BOOL WINAPI user32.SetDialogResizeBehavior(HWND hwnd None,DIALOG_CONTROL_DPI_CHANGE_BEHAVIORS mask None,DIALOG_CONTROL_DPI_CHANGE_BEHAVIORS values None)
UINT WINAPI kernel32.EnumSystemFirmwareTables(_In_ DWORD FirmwareTableProviderSignature,_Out_ PVOID pFirmwareTableBuffer,_In_ DWORD BufferSize)
void WINAPI advapi32.FreeEncryptionCertificateHashList(_In_ PENCRYPTION_CERTIFICATE_HASH_LIST pHashes)
VOID FORCEINLINE None.TpSetCallbackLongFunction(_Inout_ PTP_CALLBACK_ENVIRON CallbackEnviron)
Property None None.Item(key As TKey)
DWORD WINAPI advapi32.QueryUsersOnEncryptedFile(_In_ LPCWSTR lpFileName,_Out_ PENCRYPTION_CERTIFICATE_HASH_LIST *pUsers)
BOOL WINAPI kernel32.DeleteUmsCompletionList(_In_ PUMS_COMPLETION_LIST UmsCompletionList)
BOOL WINAPI kernel32.GetQueuedCompletionStatusEx(_In_ HANDLE CompletionPort,_Out_ LPOVERLAPPED_ENTRY lpCompletionPortEntries,_In_ ULONG ulCount,_Out_ PULONG ulNumEntriesRemoved,_In_ DWORD dwMilliseconds,_In_ BOOL fAlertable)
int WINAPI kernel32.GetThreadPriority(_In_ HANDLE hThread)
NTSTATUS WINAPI ntdll.NtQuerySystemInformation(_In_ SYSTEM_INFORMATION_CLASS SystemInformationClass,_Inout_ PVOID SystemInformation,_In_ ULONG SystemInformationLength,_Out_opt_ PULONG ReturnLength)
NTSTATUS None None.PsSetLoadImageNotifyRoutine(_In_ PLOAD_IMAGE_NOTIFY_ROUTINE NotifyRoutine)
BOOL WINAPI kernel32.GlobalMemoryStatusEx(_Inout_ LPMEMORYSTATUSEX lpBuffer)
BOOL None kernel32.GetNLSVersion(_In_ NLS_FUNCTION Function,_In_ LCID Locale,_Inout_ LPNLSVERSIONINFO lpVersionInformation)
LONG WINAPI advapi32.RegDeleteKeyValue(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_opt_ LPCTSTR lpValueName)
LONG WINAPI advapi32.RegDeleteKeyValueW(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_opt_ LPCTSTR lpValueName)
LONG WINAPI advapi32.RegDeleteKeyValueA(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_opt_ LPCTSTR lpValueName)
BOOL WINAPI kernel32.SetFileCompletionNotificationModes(_In_ HANDLE FileHandle,_In_ UCHAR Flags)
HRESULT None None.StringCchVPrintf(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszFormat,_In_ va_list argList)
HRESULT None None.StringCchVPrintfW(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszFormat,_In_ va_list argList)
HRESULT None None.StringCchVPrintfA(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszFormat,_In_ va_list argList)
BOOL WINAPI avrt.AvRtWaitOnThreadOrderingGroup(_In_ HANDLE Context)
HANDLE WINAPI kernel32.CreateTimerQueue(void None None)
HRESULT None shell32.GetDescription(LPTSTR pszName None,int cchMaxName None)
BOOL None kernel32.IsValidLocale(_In_ LCID Locale,_In_ DWORD dwFlags)
LPVOID WINAPI kernel32.ConvertThreadToFiber(_In_opt_ LPVOID lpParameter)
void __RPC_USER None.midl_user_free(void * pBuffer)
VOID WINAPI kernel32.FreeLibraryWhenCallbackReturns(_Inout_ PTP_CALLBACK_INSTANCE pci,_In_ HMODULE mod)
BOOL None kernel32.GetNumaNodeNumberFromHandle(_In_ HANDLE hFile,_Out_ PUSHORT NodeNumber)
HANDLE WINAPI kernel32.FindFirstFileEx(_In_ LPCTSTR lpFileName,_In_ FINDEX_INFO_LEVELS fInfoLevelId,_Out_ LPVOID lpFindFileData,_In_ FINDEX_SEARCH_OPS fSearchOp,_Reserved_ LPVOID lpSearchFilter,_In_ DWORD dwAdditionalFlags)
HANDLE WINAPI kernel32.FindFirstFileExW(_In_ LPCTSTR lpFileName,_In_ FINDEX_INFO_LEVELS fInfoLevelId,_Out_ LPVOID lpFindFileData,_In_ FINDEX_SEARCH_OPS fSearchOp,_Reserved_ LPVOID lpSearchFilter,_In_ DWORD dwAdditionalFlags)
HANDLE WINAPI kernel32.FindFirstFileExA(_In_ LPCTSTR lpFileName,_In_ FINDEX_INFO_LEVELS fInfoLevelId,_Out_ LPVOID lpFindFileData,_In_ FINDEX_SEARCH_OPS fSearchOp,_Reserved_ LPVOID lpSearchFilter,_In_ DWORD dwAdditionalFlags)
DWORD WINAPI advapi32.ReadEncryptedFileRaw(_In_ PFE_EXPORT_FUNC pfExportCallback,_In_opt_ PVOID pvCallbackContext,_In_ PVOID pvContext)
BOOL WINAPI kernel32.GetThreadPriorityBoost(_In_ HANDLE hThread,_Out_ PBOOL pDisablePriorityBoost)
NTSTATUS WINAPI ntdll.NtQueryInformationProcess(_In_ HANDLE ProcessHandle,_In_ PROCESSINFOCLASS ProcessInformationClass,_Out_ PVOID ProcessInformation,_In_ ULONG ProcessInformationLength,_Out_opt_ PULONG ReturnLength)
BOOL WINAPI kernel32.SetFileAttributes(_In_ LPCTSTR lpFileName,_In_ DWORD dwFileAttributes)
BOOL WINAPI kernel32.SetFileAttributesW(_In_ LPCTSTR lpFileName,_In_ DWORD dwFileAttributes)
BOOL WINAPI kernel32.SetFileAttributesA(_In_ LPCTSTR lpFileName,_In_ DWORD dwFileAttributes)
HRESULT WINAPI wofutil.WofEnumEntries(_In_ PCWSTR VolumeName,_In_ ULONG Provider,_In_ WofEnumEntryProc EnumProc,_In_opt_ PVOID UserData)
void None None.MyUpdateImage(LPCWSTR pszHashItem None,int iIndex None,UINT uFlags None,int iImageIndex None)
DWORD CALLBACK None.CopyProgressRoutine(_In_ LARGE_INTEGER TotalFileSize,_In_ LARGE_INTEGER TotalBytesTransferred,_In_ LARGE_INTEGER StreamSize,_In_ LARGE_INTEGER StreamBytesTransferred,_In_ DWORD dwStreamNumber,_In_ DWORD dwCallbackReason,_In_ HANDLE hSourceFile,_In_ HANDLE hDestinationFile,_In_opt_ LPVOID lpData)
int None kernel32.LCMapStringEx(_In_opt_ LPCWSTR lpLocaleName,_In_ DWORD dwMapFlags,_In_ LPCWSTR lpSrcStr,_In_ int cchSrc,_Out_opt_ LPWSTR lpDestStr,_In_ int cchDest,_In_opt_ LPNLSVERSIONINFO lpVersionInformation,_In_opt_ LPVOID lpReserved,_In_opt_ LPARAM sortHandle)
HRESULT None ole32.CLSIDFromProgID(_In_ LPCOLESTR lpszProgID,_Out_ LPCLSID lpclsid)
HANDLE WINAPI kernel32.GetCurrentProcess(void None None)
BOOL None kernel32.EnumCalendarInfo(_In_ CALINFO_ENUMPROC pCalInfoEnumProc,_In_ LCID Locale,_In_ CALID Calendar,_In_ CALTYPE CalType)
BOOL None kernel32.EnumCalendarInfoW(_In_ CALINFO_ENUMPROC pCalInfoEnumProc,_In_ LCID Locale,_In_ CALID Calendar,_In_ CALTYPE CalType)
BOOL None kernel32.EnumCalendarInfoA(_In_ CALINFO_ENUMPROC pCalInfoEnumProc,_In_ LCID Locale,_In_ CALID Calendar,_In_ CALTYPE CalType)
BOOL None kernel32.EnumCalendarInfoExEx(_In_ CALINFO_ENUMPROCEXEX pCalInfoEnumProcExEx,_In_opt_ LPCWSTR lpLocaleName,_In_ CALID Calendar,_In_opt_ LPCWSTR lpReserved,_In_ CALTYPE CalType,_In_ LPARAM lParam)
VOID WINAPI kernel32.Sleep(_In_ DWORD dwMilliseconds)
HRESULT None shell32.SHLoadOLE(_In_ LPARAM lParam)
BOOL None shell32.LinkWindow_RegisterClass(void None None)
INT WINAPI lz32.LZInit(_In_ INT hfSource)
BOOL WINAPI advapi32.EncryptionDisable(_In_ LPCWSTR DirPath,_In_ BOOL Disable)
HRESULT None shlwapi.ConnectToConnectionPoint(_In_opt_ IUnknown *punk,_In_ REFIID riidEvent,BOOL fConnect None,_In_ IUnknown *punkTarget,_Out_ DWORD *pdwCookie,_Out_opt_ IConnectionPoint **ppcpOut)
DWORD None kernel32.GetActiveProcessorCount(_In_ WORD GroupNumber)
VOID WINAPI kernel32.ReleaseSemaphoreWhenCallbackReturns(_Inout_ PTP_CALLBACK_INSTANCE pci,_In_ HANDLE sem,_In_ DWORD crel)
BOOL WINAPI kernel32.IsThreadpoolTimerSet(_Inout_ PTP_TIMER pti)
PVOID None kernel32.MapViewOfFile2(_In_ HANDLE FileMappingHandle,_In_ HANDLE ProcessHandle,_In_ ULONG64 Offset,_In_opt_ PVOID BaseAddress,_In_ SIZE_T ViewSize,_In_ ULONG AllocationType,_In_ ULONG PageProtection)
DWORD WINAPI kernel32.GetCompressedFileSize(_In_ LPCTSTR lpFileName,_Out_opt_ LPDWORD lpFileSizeHigh)
DWORD WINAPI kernel32.GetCompressedFileSizeW(_In_ LPCTSTR lpFileName,_Out_opt_ LPDWORD lpFileSizeHigh)
DWORD WINAPI kernel32.GetCompressedFileSizeA(_In_ LPCTSTR lpFileName,_Out_opt_ LPDWORD lpFileSizeHigh)
BOOL WINAPI kernel32.GetProcessMemoryInfo(_In_ HANDLE Process,_Out_ PPROCESS_MEMORY_COUNTERS ppsmemCounters,_In_ DWORD cb)
BOOL WINAPI kernel32.MapUserPhysicalPagesScatter(_In_ PVOID *VirtualAddresses,_In_ ULONG_PTR NumberOfPages,_In_ PULONG_PTR PageArray)
HRESULT None None.StringCchGetsEx(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCchGetsExW(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCchGetsExA(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
HRESULT WINAPI wofutil.WofWimRemoveEntry(_In_ PCWSTR VolumeName,_In_ LARGE_INTEGER DataSourceId)
int None kernel32.FindNLSStringEx(_In_opt_ LPCWSTR lpLocaleName,_In_ DWORD dwFindNLSStringFlags,_In_ LPCWSTR lpStringSource,_In_ int cchSource,_In_ LPCWSTR lpStringValue,_In_ int cchValue,_Out_opt_ LPINT pcchFound,_In_opt_ LPNLSVERSIONINFO lpVersionInformation,_In_opt_ LPVOID lpReserved,_In_opt_ LPARAM sortHandle)
VOID CALLBACK None.IoCompletionCallback(_Inout_ PTP_CALLBACK_INSTANCE Instance,_Inout_opt_ PVOID Context,_Inout_opt_ PVOID Overlapped,_In_ ULONG IoResult,_In_ ULONG_PTR NumberOfBytesTransferred,_Inout_ PTP_IO Io)
BOOL WINAPI kernel32.QueryProtectedPolicy(_In_ LPCGUID PolicyGuid,_Out_ PULONG_PTR PolicyValue)
BOOL WINAPI user32.GetWindowRect(_In_ HWND hWnd,_Out_ LPRECT lpRect)
BOOL WINAPI user32.SetProcessRestrictionExemption(BOOL fEnableExemption None)
BOOL WINAPI kernel32.SetInformationJobObject(_In_ HANDLE hJob,_In_ JOBOBJECTINFOCLASS JobObjectInfoClass,_In_ LPVOID lpJobObjectInfo,_In_ DWORD cbJobObjectInfoLength)
HRESULT None ole32.CoDisconnectContext(_In_ DWORD dwTimeout)
VOID None None.SetThreadpoolCallbackRunsLong(_Inout_ PTP_CALLBACK_ENVIRON pcbe)
HRESULT None ole32.CreateObjrefMoniker(_In_opt_ LPUNKNOWN punk,_Out_ LPMONIKER *ppmk)
BOOL CALLBACK None.EnumTimeFormatsProc(_In_ LPTSTR lpTimeFormatString)
BOOL WINAPI kernel32.FlsSetValue(_In_ DWORD dwFlsIndex,_In_opt_ PVOID lpFlsData)
DWORD WINAPI kernel32.ReclaimVirtualMemory(_In_ PVOID VirtualAddress,_In_ SIZE_T Size)
HRESULT None ole32.CoResumeClassObjects(void None None)
HRESULT WINAPI wofutil.WofWimEnumFiles(_In_ PCWSTR VolumeName,_In_ LARGE_INTEGER DataSourceId,_In_ WofEnumFilesProc EnumProc,_In_opt_ PVOID UserData)
INT WINAPI lz32.GetExpandedName(_In_ LPTSTR lpszSource,_Out_ LPTSTR lpszBuffer)
INT WINAPI lz32.GetExpandedNameW(_In_ LPTSTR lpszSource,_Out_ LPTSTR lpszBuffer)
INT WINAPI lz32.GetExpandedNameA(_In_ LPTSTR lpszSource,_Out_ LPTSTR lpszBuffer)
HANDLE WINAPI kernel32.CreateJobObject(_In_opt_ LPSECURITY_ATTRIBUTES lpJobAttributes,_In_opt_ LPCTSTR lpName)
HANDLE WINAPI kernel32.CreateJobObjectW(_In_opt_ LPSECURITY_ATTRIBUTES lpJobAttributes,_In_opt_ LPCTSTR lpName)
HANDLE WINAPI kernel32.CreateJobObjectA(_In_opt_ LPSECURITY_ATTRIBUTES lpJobAttributes,_In_opt_ LPCTSTR lpName)
UINT WINAPI kernel32.GetWriteWatch(_In_ DWORD dwFlags,_In_ PVOID lpBaseAddress,_In_ SIZE_T dwRegionSize,_Out_ PVOID *lpAddresses,_Inout_ PULONG_PTR lpdwCount,_Out_ PULONG lpdwGranularity)
void WINAPI kernel32.GlobalMemoryStatus(_Out_ LPMEMORYSTATUS lpBuffer)
BOOL WINAPI kernel32.QueryInformationJobObject(_In_opt_ HANDLE hJob,_In_ JOBOBJECTINFOCLASS JobObjectInfoClass,_Out_ LPVOID lpJobObjectInfo,_In_ DWORD cbJobObjectInfoLength,_Out_opt_ LPDWORD lpReturnLength)
HRESULT None shell32.SetCurrentProcessExplicitAppUserModelID(_In_ PCWSTR AppID)
HRESULT None ole32.ProgIDFromCLSID(_In_ REFCLSID clsid,_Out_ LPOLESTR *lplpszProgID)
VOID WINAPI kernel32.FreeMemoryJobObject(_In_ VOID *Buffer)
BOOL WINAPI kernel32.FlushFileBuffers(_In_ HANDLE hFile)
VOID WINAPI None.BadMemoryCallbackRoutine(VOID None None)
void None ole32.CoFreeUnusedLibraries(void None None)
BOOL WINAPI kernel32.RemoveSecureMemoryCacheCallback(_In_ PSECURE_MEMORY_CACHE_CALLBACK pfnCallBack)
INT WINAPI lz32.LZOpenFile(_In_ LPTSTR lpFileName,_Out_ LPOFSTRUCT lpReOpenBuf,_In_ WORD wStyle)
INT WINAPI lz32.LZOpenFileW(_In_ LPTSTR lpFileName,_Out_ LPOFSTRUCT lpReOpenBuf,_In_ WORD wStyle)
INT WINAPI lz32.LZOpenFileA(_In_ LPTSTR lpFileName,_Out_ LPOFSTRUCT lpReOpenBuf,_In_ WORD wStyle)
LONG WINAPI advapi32.RegOpenKeyEx(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_ DWORD ulOptions,_In_ REGSAM samDesired,_Out_ PHKEY phkResult)
LONG WINAPI advapi32.RegOpenKeyExW(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_ DWORD ulOptions,_In_ REGSAM samDesired,_Out_ PHKEY phkResult)
LONG WINAPI advapi32.RegOpenKeyExA(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_ DWORD ulOptions,_In_ REGSAM samDesired,_Out_ PHKEY phkResult)
VOID WINAPI kernel32.CloseThreadpoolWait(_Inout_ PTP_WAIT pwa)
BOOL WINAPI kernel32.DeleteUmsThreadContext(_In_ PUMS_CONTEXT UmsThread)
BOOL WINAPI kernel32.SetVolumeMountPoint(_In_ LPCTSTR lpszVolumeMountPoint,_In_ LPCTSTR lpszVolumeName)
BOOL WINAPI kernel32.SetVolumeMountPointW(_In_ LPCTSTR lpszVolumeMountPoint,_In_ LPCTSTR lpszVolumeName)
BOOL WINAPI kernel32.SetVolumeMountPointA(_In_ LPCTSTR lpszVolumeMountPoint,_In_ LPCTSTR lpszVolumeName)
EVT_HANDLE WINAPI wevtapi.EvtOpenLog(_In_ EVT_HANDLE Session,_In_ LPCWSTR Path,_In_ DWORD Flags)
void None ole32.CoUninitialize(void None None)
HRESULT WINAPI wofutil.WofWimAddEntry(_In_ PCWSTR VolumeName,_In_ PCWSTR WimPath,_In_ DWORD WimType,_In_ DWORD WimIndex,_Out_ PLARGE_INTEGER DataSourceId)
BOOL None kernel32.GetLogicalProcessorInformationEx(_In_ LOGICAL_PROCESSOR_RELATIONSHIP RelationshipType,_Out_opt_ PSYSTEM_LOGICAL_PROCESSOR_INFORMATION_EX Buffer,_Inout_ PDWORD ReturnedLength)
UINT WINAPI kernel32.GetTempFileName(_In_ LPCTSTR lpPathName,_In_ LPCTSTR lpPrefixString,_In_ UINT uUnique,_Out_ LPTSTR lpTempFileName)
UINT WINAPI kernel32.GetTempFileNameW(_In_ LPCTSTR lpPathName,_In_ LPCTSTR lpPrefixString,_In_ UINT uUnique,_Out_ LPTSTR lpTempFileName)
UINT WINAPI kernel32.GetTempFileNameA(_In_ LPCTSTR lpPathName,_In_ LPCTSTR lpPrefixString,_In_ UINT uUnique,_Out_ LPTSTR lpTempFileName)
HRESULT None shell32.SHCreateItemFromRelativeName(_In_ IShellItem *psiParent,_In_ PCWSTR pszName,_In_ IBindCtx *pbc,_In_ REFIID riid,_Out_ void **ppv)
HANDLE WINAPI kernel32.CreateThread(_In_opt_ LPSECURITY_ATTRIBUTES lpThreadAttributes,_In_ SIZE_T dwStackSize,_In_ LPTHREAD_START_ROUTINE lpStartAddress,_In_opt_ LPVOID lpParameter,_In_ DWORD dwCreationFlags,_Out_opt_ LPDWORD lpThreadId)
LPTCH WINAPI kernel32.GetEnvironmentStrings(void None None)
LPTCH WINAPI kernel32.GetEnvironmentStringsW(void None None)
LPTCH WINAPI kernel32.GetEnvironmentStringsA(void None None)
BOOL WINAPI avrt.AvRtDeleteThreadOrderingGroup(_In_ HANDLE Context)
WNDPROC __stdcall atlthunk.AtlThunk_DataToCode(AtlThunkData_t * None)
BOOL WINAPI kernel32.CreateUmsThreadContext(_Out_ PUMS_CONTEXT *lpUmsThread)
BOOL WINAPI kernel32.GetVersionEx(_Inout_ LPOSVERSIONINFO lpVersionInfo)
BOOL WINAPI kernel32.GetVersionExW(_Inout_ LPOSVERSIONINFO lpVersionInfo)
BOOL WINAPI kernel32.GetVersionExA(_Inout_ LPOSVERSIONINFO lpVersionInfo)
BOOL WINAPI kernel32.GetSystemRegistryQuota(_Out_opt_ PDWORD pdwQuotaAllowed,_Out_opt_ PDWORD pdwQuotaUsed)
BOOL None kernel32.VerifyScripts(_In_ DWORD dwFlags,_In_ LPCWSTR lpLocaleScripts,_In_ int cchLocaleScripts,_In_ LPCWSTR lpTestScripts,_In_ int cchTestScripts)
BOOL WINAPI kernel32.CancelIoEx(_In_ HANDLE hFile,_In_opt_ LPOVERLAPPED lpOverlapped)
BOOL WINAPI kernel32.FlsFree(_In_ DWORD dwFlsIndex)
BOOL WINAPI kernel32.SetFileShortName(_In_ HANDLE hFile,_In_ LPCTSTR lpShortName)
BOOL WINAPI kernel32.SetFileShortNameW(_In_ HANDLE hFile,_In_ LPCTSTR lpShortName)
BOOL WINAPI kernel32.SetFileShortNameA(_In_ HANDLE hFile,_In_ LPCTSTR lpShortName)
BOOLEAN WINAPI kernel32.CreateSymbolicLink(_In_ LPTSTR lpSymlinkFileName,_In_ LPTSTR lpTargetFileName,_In_ DWORD dwFlags)
BOOLEAN WINAPI kernel32.CreateSymbolicLinkW(_In_ LPTSTR lpSymlinkFileName,_In_ LPTSTR lpTargetFileName,_In_ DWORD dwFlags)
BOOLEAN WINAPI kernel32.CreateSymbolicLinkA(_In_ LPTSTR lpSymlinkFileName,_In_ LPTSTR lpTargetFileName,_In_ DWORD dwFlags)
BOOL WINAPI user32.IsWow64Message(void None None)
HRESULT None url.URLAssociationDialog(HWND hwndParent None,DWORD dwInFlags None,PTCSTR pcszFile None,PTCSTR pcszURL None,_Out_ PTSTR pszAppBuf,UINT ucAppBufLen None)
HRESULT None url.URLAssociationDialogW(HWND hwndParent None,DWORD dwInFlags None,PTCSTR pcszFile None,PTCSTR pcszURL None,_Out_ PTSTR pszAppBuf,UINT ucAppBufLen None)
HRESULT None url.URLAssociationDialogA(HWND hwndParent None,DWORD dwInFlags None,PTCSTR pcszFile None,PTCSTR pcszURL None,_Out_ PTSTR pszAppBuf,UINT ucAppBufLen None)
HRESULT None ole32.CoRevokeMallocSpy(void None None)
HRESULT None shell32.SHCreateItemFromParsingName(_In_ PCWSTR pszPath,_In_opt_ IBindCtx *pbc,_In_ REFIID riid,_Out_ void **ppv)
BOOL WINAPI kernel32.GetThreadIOPendingFlag(_In_ HANDLE hThread,_Inout_ PBOOL lpIOIsPending)
BOOLEAN WINAPI secur32.GetUserNameEx(_In_ EXTENDED_NAME_FORMAT NameFormat,_Out_ LPTSTR lpNameBuffer,_Inout_ PULONG lpnSize)
BOOLEAN WINAPI secur32.GetUserNameExW(_In_ EXTENDED_NAME_FORMAT NameFormat,_Out_ LPTSTR lpNameBuffer,_Inout_ PULONG lpnSize)
BOOLEAN WINAPI secur32.GetUserNameExA(_In_ EXTENDED_NAME_FORMAT NameFormat,_Out_ LPTSTR lpNameBuffer,_Inout_ PULONG lpnSize)
BOOL WINAPI kernel32.SetProcessAffinityMask(_In_ HANDLE hProcess,_In_ DWORD_PTR dwProcessAffinityMask)
BOOL WINAPI user32.IsZoomed(_In_ HWND hWnd)
HANDLE WINAPI kernel32.CreateIoCompletionPort(_In_ HANDLE FileHandle,_In_opt_ HANDLE ExistingCompletionPort,_In_ ULONG_PTR CompletionKey,_In_ DWORD NumberOfConcurrentThreads)
int None kernel32.GetLocaleInfoEx(_In_opt_ LPCWSTR lpLocaleName,_In_ LCTYPE LCType,_Out_opt_ LPWSTR lpLCData,_In_ int cchData)
HRESULT None None.GetCanonicalFormatEtc([in] FORMATETC *pformatectIn,[out] FORMATETC *pformatetcOut)
HRESULT None None.GetTypeComp([out] ITypeComp **ppTComp)
HRESULT None None.DAdvise([in] FORMATETC *pformatetc,[in] DWORD advf,[in] IAdviseSink *pAdvSink,[out] DWORD *pdwConnection)
HRESULT None ole32.CoRegisterClassObject(_In_ REFCLSID rclsid,_In_ LPUNKNOWN pUnk,_In_ DWORD dwClsContext,_In_ DWORD flags,_Out_ LPDWORD lpdwRegister)
BOOL WINAPI kernel32.CheckNameLegalDOS8Dot3(_In_ LPCTSTR lpName,_Out_opt_ LPSTR lpOemName,_In_ DWORD OemNameSize,_Out_opt_ PBOOL pbNameContainsSpaces,_Out_ PBOOL pbNameLegal)
BOOL WINAPI kernel32.CheckNameLegalDOS8Dot3W(_In_ LPCTSTR lpName,_Out_opt_ LPSTR lpOemName,_In_ DWORD OemNameSize,_Out_opt_ PBOOL pbNameContainsSpaces,_Out_ PBOOL pbNameLegal)
BOOL WINAPI kernel32.CheckNameLegalDOS8Dot3A(_In_ LPCTSTR lpName,_Out_opt_ LPSTR lpOemName,_In_ DWORD OemNameSize,_Out_opt_ PBOOL pbNameContainsSpaces,_Out_ PBOOL pbNameLegal)
BOOL WINAPI kernel32.InitOnceExecuteOnce(_Inout_ PINIT_ONCE InitOnce,_In_ PINIT_ONCE_FN InitFn,_Inout_opt_ PVOID Parameter,_Out_opt_ LPVOID *Context)
BOOL WINAPI kernel32.Heap32First(_Inout_ LPHEAPENTRY32 lphe,_In_ DWORD th32ProcessID,_In_ ULONG_PTR th32HeapID)
HRESULT WINAPI wofutil.WofWimSuspendEntry(_In_ PCWSTR VolumeName,_In_ LARGE_INTEGER DataSourceId)
LONG WINAPI advapi32.RegQueryMultipleValues(_In_ HKEY hKey,_Out_ PVALENT val_list,_In_ DWORD num_vals,_Out_opt_ LPTSTR lpValueBuf,_Inout_opt_ LPDWORD ldwTotsize)
LONG WINAPI advapi32.RegQueryMultipleValuesW(_In_ HKEY hKey,_Out_ PVALENT val_list,_In_ DWORD num_vals,_Out_opt_ LPTSTR lpValueBuf,_Inout_opt_ LPDWORD ldwTotsize)
LONG WINAPI advapi32.RegQueryMultipleValuesA(_In_ HKEY hKey,_Out_ PVALENT val_list,_In_ DWORD num_vals,_Out_opt_ LPTSTR lpValueBuf,_Inout_opt_ LPDWORD ldwTotsize)
HANDLE None kernel32.CreateRemoteThreadEx(_In_ HANDLE hProcess,_In_opt_ LPSECURITY_ATTRIBUTES lpThreadAttributes,_In_ SIZE_T dwStackSize,_In_ LPTHREAD_START_ROUTINE lpStartAddress,_In_opt_ LPVOID lpParameter,_In_ DWORD dwCreationFlags,_In_opt_ LPPROC_THREAD_ATTRIBUTE_LIST lpAttributeList,_Out_opt_ LPDWORD lpThreadId)
BOOL None kernel32.SetThreadpoolStackInformation(_Inout_ PTP_POOL ptpp,_In_ PTP_POOL_STACK_INFORMATION ptpsi)
HRESULT None None.CreateDeferredContext2(UINT ContextFlags None,[out None None,optional] ID3D11DeviceContext2 **ppDeferredContext)
LONG WINAPI advapi32.RegQueryReflectionKey(_In_ HKEY hBase,_Out_ BOOL *bIsReflectionDisabled)
int None kernel32.CompareStringOrdinal(_In_ LPCWSTR lpString1,_In_ int cchCount1,_In_ LPCWSTR lpString2,_In_ int cchCount2,_In_ BOOL bIgnoreCase)
LPVOID WINAPI kernel32.CreateFiberEx(_In_ SIZE_T dwStackCommitSize,_In_ SIZE_T dwStackReserveSize,_In_ DWORD dwFlags,_In_ LPFIBER_START_ROUTINE lpStartAddress,_In_opt_ LPVOID lpParameter)
BOOL None ole32.CoIsOle1Class(_In_ REFCLSID rclsid)
VOID WINAPI kernel32.StartThreadpoolIo(_Inout_ PTP_IO pio)
BOOL WINAPI kernel32.SetFileInformationByHandle(_In_ HANDLE hFile,_In_ FILE_INFO_BY_HANDLE_CLASS FileInformationClass,_In_ LPVOID lpFileInformation,_In_ DWORD dwBufferSize)
HRESULT None None.StringCbPrintf_l(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ ... None)
HRESULT None None.StringCbPrintf_lW(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ ... None)
HRESULT None None.StringCbPrintf_lA(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ ... None)
void None shell32.SHChangeNotify(LONG wEventId None,UINT uFlags None,_In_opt_ LPCVOID dwItem1,_In_opt_ LPCVOID dwItem2)
BOOL WINAPI kernel32.SwitchToThread(void None None)
LANGID None kernel32.GetSystemDefaultLangID(void None None)
BOOL WINAPI avrt.AvRtCreateThreadOrderingGroup(_Out_ PHANDLE Context,_In_ PLARGE_INTEGER Period,_Inout_ GUID *ThreadOrderingGuid,_In_opt_ PLARGE_INTEGER Timeout)
BOOL WINAPI advapi32.GetCurrentHwProfile(_Out_ LPHW_PROFILE_INFO lpHwProfileInfo)
BOOL WINAPI advapi32.GetCurrentHwProfileW(_Out_ LPHW_PROFILE_INFO lpHwProfileInfo)
BOOL WINAPI advapi32.GetCurrentHwProfileA(_Out_ LPHW_PROFILE_INFO lpHwProfileInfo)
DWORD WINAPI user32.GetWindowThreadProcessId(_In_ HWND hWnd,_Out_opt_ LPDWORD lpdwProcessId)
BOOL WINAPI kernel32.SetThreadpoolThreadMinimum(_Inout_ PTP_POOL ptpp,_In_ DWORD cthrdMic)
BOOL WINAPI kernel32.FindNextFileNameW(_In_ HANDLE hFindStream,_Inout_ LPDWORD StringLength,_Inout_ PWCHAR LinkName)
HRESULT None ole32.CoRegisterInitializeSpy(_In_ LPINITIALIZESPY pSpy,_Out_ ULARGE_INTEGER *puliCookie)
BOOL None kernel32.SetThreadIdealProcessorEx(_In_ HANDLE hThread,_In_ PPROCESSOR_NUMBER lpIdealProcessor,_Out_opt_ PPROCESSOR_NUMBER lpPreviousIdealProcessor)
BOOL WINAPI kernel32.GetProcessHandleCount(_In_ HANDLE hProcess,_Inout_ PDWORD pdwHandleCount)
VOID None kernel32.GetCurrentProcessorNumberEx(_Out_ PPROCESSOR_NUMBER ProcNumber)
BOOL WINAPI kernel32.GetProcessHandleCount(_In_ HANDLE hProcess,_Inout_ PDWORD pdwHandleCount)
BOOL WINAPI kernel32.GetProcessHandleCount(_In_ HANDLE hProcess,_Inout_ PDWORD pdwHandleCount)
void None None.MyUpdateImage(LPCWSTR pszHashItem None,int iIndex None,UINT uFlags None,int iImageIndex None)
BOOL None kernel32.SetThreadIdealProcessorEx(_In_ HANDLE hThread,_In_ PPROCESSOR_NUMBER lpIdealProcessor,_Out_opt_ PPROCESSOR_NUMBER lpPreviousIdealProcessor)
BOOL None kernel32.SetThreadIdealProcessorEx(_In_ HANDLE hThread,_In_ PPROCESSOR_NUMBER lpIdealProcessor,_Out_opt_ PPROCESSOR_NUMBER lpPreviousIdealProcessor)
HRESULT None shell32.SHGetImageList(_In_ int iImageList,_In_ REFIID riid,_Out_ void **ppv)
BOOL WINAPI kernel32.GetProcessHandleCount(_In_ HANDLE hProcess,_Inout_ PDWORD pdwHandleCount)
function None None.GetFeed(feedUri None None)
BOOL None kernel32.SetThreadIdealProcessorEx(_In_ HANDLE hThread,_In_ PPROCESSOR_NUMBER lpIdealProcessor,_Out_opt_ PPROCESSOR_NUMBER lpPreviousIdealProcessor)
DWORD WINAPI kernel32.SetFilePointer(_In_ HANDLE hFile,_In_ LONG lDistanceToMove,_Inout_opt_ PLONG lpDistanceToMoveHigh,_In_ DWORD dwMoveMethod)
DWORD None kernel32.GetTapePosition(_In_ HANDLE hDevice,_In_ DWORD dwPositionType,_Out_ LPDWORD lpdwPartition,_Out_ LPDWORD lpdwOffsetLow,_Out_ LPDWORD lpdwOffsetHigh)
VOID None kernel32.GetCurrentProcessorNumberEx(_Out_ PPROCESSOR_NUMBER ProcNumber)
HRESULT None shell32.GetDescription(LPTSTR pszName None,int cchMaxName None)
BOOL None kernel32.SetThreadIdealProcessorEx(_In_ HANDLE hThread,_In_ PPROCESSOR_NUMBER lpIdealProcessor,_Out_opt_ PPROCESSOR_NUMBER lpPreviousIdealProcessor)
BOOL None sisbkup.SisRestoredCommonStoreFile(_In_ PVOID sisRestoreStructure,_In_ PWCHAR commonStoreFileName)
BOOL WINAPI kernel32.GetProcessHandleCount(_In_ HANDLE hProcess,_Inout_ PDWORD pdwHandleCount)
HRESULT None ole32.CreateClassMoniker(_In_ REFCLSID rclsid,_Out_ LPMONIKER *ppmk)
VOID WINAPI kernel32.WakeAllConditionVariable(_Inout_ PCONDITION_VARIABLE ConditionVariable)
PIDLIST_ABSOLUTE None shell32.SHBrowseForFolder(_In_ LPBROWSEINFO lpbi)
PIDLIST_ABSOLUTE None shell32.SHBrowseForFolderW(_In_ LPBROWSEINFO lpbi)
PIDLIST_ABSOLUTE None shell32.SHBrowseForFolderA(_In_ LPBROWSEINFO lpbi)
DWORD WINAPI kernel32.SetThreadIdealProcessor(_In_ HANDLE hThread,_In_ DWORD dwIdealProcessor)
int None shlwapi.ShellMessageBox(_In_ HINSTANCE hInst,_In_ HWND hWnd,_In_ LPCTSTR pszMsg,_In_ LPCTSTR pszTitle,_In_ UINT fuStyle,_In_ ... None)
int None shlwapi.ShellMessageBoxW(_In_ HINSTANCE hInst,_In_ HWND hWnd,_In_ LPCTSTR pszMsg,_In_ LPCTSTR pszTitle,_In_ UINT fuStyle,_In_ ... None)
int None shlwapi.ShellMessageBoxA(_In_ HINSTANCE hInst,_In_ HWND hWnd,_In_ LPCTSTR pszMsg,_In_ LPCTSTR pszTitle,_In_ UINT fuStyle,_In_ ... None)
BOOL WINAPI kernel32.CreateUmsCompletionList(_Out_ PUMS_COMPLETION_LIST *UmsCompletionList)
BOOL WINAPI kernel32.GetProcessHandleCount(_In_ HANDLE hProcess,_Inout_ PDWORD pdwHandleCount)
VOID CALLBACK None.WaitCallback(_Inout_ PTP_CALLBACK_INSTANCE Instance,_Inout_opt_ PVOID Context,_Inout_ PTP_WAIT Wait,_In_ TP_WAIT_RESULT WaitResult)
BOOL WINAPI kernel32.GetProcessHandleCount(_In_ HANDLE hProcess,_Inout_ PDWORD pdwHandleCount)
BOOL WINAPI kernel32.GetProcessShutdownParameters(_Out_ LPDWORD lpdwLevel,_Out_ LPDWORD lpdwFlags)
BOOL WINAPI kernel32.GetProcessHandleCount(_In_ HANDLE hProcess,_Inout_ PDWORD pdwHandleCount)
HRESULT None None.ILLoadFromStreamEx(_In_ IStream *pstm,_Out_ PIDLIST_ABSOLUTE *ppidl)
HRESULT WINAPI None.Initialize(RO_INIT_TYPE initType None)
BOOL WINAPI kernel32.GetProcessHandleCount(_In_ HANDLE hProcess,_Inout_ PDWORD pdwHandleCount)
LRESULT WINAPI user32.CallWindowProc(_In_ WNDPROC lpPrevWndFunc,_In_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
LRESULT WINAPI user32.CallWindowProcW(_In_ WNDPROC lpPrevWndFunc,_In_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
LRESULT WINAPI user32.CallWindowProcA(_In_ WNDPROC lpPrevWndFunc,_In_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
BOOL WINAPI kernel32.GetProcessHandleCount(_In_ HANDLE hProcess,_Inout_ PDWORD pdwHandleCount)
int None shlwapi.SHAnsiToAnsi(_In_ LPCSTR pszSrc,_Out_ LPWSTR pszDst,int cchBuf None)
int None comctl32.EnumMRUListW(_In_ HANDLE hMRU,_In_ int nItem,_Out_ void *lpData,_In_ UINT uLen)
int None comctl32.EnumMRUListW(_In_ HANDLE hMRU,_In_ int nItem,_Out_ void *lpData,_In_ UINT uLen)
HRESULT WINAPI kernel32.SetThreadDescription(_In_ HANDLE hThread,_In_ PCWSTR lpThreadDescription)
VOID WINAPI kernel32.ReleaseMutexWhenCallbackReturns(_Inout_ PTP_CALLBACK_INSTANCE pci,_In_ HANDLE mut)
BOOL WINAPI kernel32.GetQueuedCompletionStatus(_In_ HANDLE CompletionPort,_Out_ LPDWORD lpNumberOfBytes,_Out_ PULONG_PTR lpCompletionKey,_Out_ LPOVERLAPPED *lpOverlapped,_In_ DWORD dwMilliseconds)
HRESULT None None.ILLoadFromStreamEx(_In_ IStream *pstm,_Out_ PITEMID_CHILD *ppidl)
HRESULT WINAPI shell32.SHGetFolderPathEx(_In_ REFKNOWNFOLDERID rfid,_In_ DWORD dwFlags,_In_opt_ HANDLE hToken,_Out_ LPWSTR pszPath,_In_ UINT cchPath)
BOOL APIENTRY kernel32.CheckTokenMembershipEx(_In_opt_ HANDLE TokenHandle,_In_ PSID SidToCheck,_In_ DWORD Flags,_Out_ PBOOL IsMember)
Property None None.Item(index As Integer)
DWORD WINAPI kernel32.FlsAlloc(_In_ PFLS_CALLBACK_FUNCTION lpCallback)
HRESULT None ole32.GetClassFile(_In_ LPCOLESTR szFilename,_Out_ CLSID *pclsid)
HRESULT None shell32.SHGetFolderPathAndSubDir(_In_ HWND hwnd,_In_ int csidl,_In_ HANDLE hToken,_In_ DWORD dwFlags,_In_ LPCTSTR pszSubDir,_Out_ LPTSTR pszPath)
HRESULT None shell32.SHGetFolderPathAndSubDirW(_In_ HWND hwnd,_In_ int csidl,_In_ HANDLE hToken,_In_ DWORD dwFlags,_In_ LPCTSTR pszSubDir,_Out_ LPTSTR pszPath)
HRESULT None shell32.SHGetFolderPathAndSubDirA(_In_ HWND hwnd,_In_ int csidl,_In_ HANDLE hToken,_In_ DWORD dwFlags,_In_ LPCTSTR pszSubDir,_Out_ LPTSTR pszPath)
BOOL None shell32.ReadCabinetState(_Out_ CABINETSTATE *pcs,_In_ int cLength)
BOOL WINAPI kernel32.GetProcessHandleCount(_In_ HANDLE hProcess,_Inout_ PDWORD pdwHandleCount)
BOOL None kernel32.EnumDateFormatsEx(_In_ DATEFMT_ENUMPROCEX lpDateFmtEnumProcEx,_In_ LCID Locale,_In_ DWORD dwFlags)
BOOL None kernel32.EnumDateFormatsExW(_In_ DATEFMT_ENUMPROCEX lpDateFmtEnumProcEx,_In_ LCID Locale,_In_ DWORD dwFlags)
BOOL None kernel32.EnumDateFormatsExA(_In_ DATEFMT_ENUMPROCEX lpDateFmtEnumProcEx,_In_ LCID Locale,_In_ DWORD dwFlags)
void WINAPI kernel32.InitializeCriticalSection(_Out_ LPCRITICAL_SECTION lpCriticalSection)
BOOL None shlwapi.SHUnlockShared(_In_ void *pvData)
BOOL WINAPI kernel32.SetFileAttributesTransacted(_In_ LPCTSTR lpFileName,_In_ DWORD dwFileAttributes,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.SetFileAttributesTransactedW(_In_ LPCTSTR lpFileName,_In_ DWORD dwFileAttributes,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.SetFileAttributesTransactedA(_In_ LPCTSTR lpFileName,_In_ DWORD dwFileAttributes,_In_ HANDLE hTransaction)
STDAPI None shcore.RevokeScaleChangeNotifications(_In_ DISPLAY_DEVICE_TYPE displayDevice,_In_ DWORD dwCookie)
BOOL WINAPI kernel32.GetNumaHighestNodeNumber(_Out_ PULONG HighestNodeNumber)
LONG None None.DefScreenSaverProc(HWND hWnd None,UINT msg None,WPARAM wParam None,LPARAM lParam None)
BOOL None kernel32.IsValidLocale(_In_ LCID Locale,_In_ DWORD dwFlags)
LPVOID WINAPI kernel32.ConvertThreadToFiberEx(_In_opt_ LPVOID lpParameter,_In_ DWORD dwFlags)
BOOL WINAPI kernel32.UpdateProcThreadAttribute(_Inout_ LPPROC_THREAD_ATTRIBUTE_LIST lpAttributeList,_In_ DWORD dwFlags,_In_ DWORD_PTR Attribute,_In_ PVOID lpValue,_In_ SIZE_T cbSize,_Out_opt_ PVOID lpPreviousValue,_In_opt_ PSIZE_T lpReturnSize)
BOOL None kernel32.SetThreadIdealProcessorEx(_In_ HANDLE hThread,_In_ PPROCESSOR_NUMBER lpIdealProcessor,_Out_opt_ PPROCESSOR_NUMBER lpPreviousIdealProcessor)
HANDLE WINAPI kernel32.ReOpenFile(_In_ HANDLE hOriginalFile,_In_ DWORD dwDesiredAccess,_In_ DWORD dwShareMode,_In_ DWORD dwFlags)
BOOL WINAPI userenv.LoadUserProfile(_In_ HANDLE hToken,_Inout_ LPPROFILEINFO lpProfileInfo)
BOOL WINAPI userenv.LoadUserProfileW(_In_ HANDLE hToken,_Inout_ LPPROFILEINFO lpProfileInfo)
BOOL WINAPI userenv.LoadUserProfileA(_In_ HANDLE hToken,_Inout_ LPPROFILEINFO lpProfileInfo)
BOOL WINAPI kernel32.GetProcessHandleCount(_In_ HANDLE hProcess,_Inout_ PDWORD pdwHandleCount)
ReadOnly Property None.Item(key As TKey)
BOOL None kernel32.SetThreadIdealProcessorEx(_In_ HANDLE hThread,_In_ PPROCESSOR_NUMBER lpIdealProcessor,_Out_opt_ PPROCESSOR_NUMBER lpPreviousIdealProcessor)
HRESULT None ole32.MonikerCommonPrefixWith(_In_ LPMONIKER pmkThis,_In_ LPMONIKER pmkOther,_Out_ LPMONIKER *ppmkCommon)
HRESULT None None.UnalignedStringCchLength(_In_ LPCTSTR psz,_In_ size_t cchMax,_Out_opt_ size_t *pcchLength)
HRESULT None None.UnalignedStringCchLengthW(_In_ LPCTSTR psz,_In_ size_t cchMax,_Out_opt_ size_t *pcchLength)
HRESULT None None.StringCchLengthA(_In_ LPCTSTR psz,_In_ size_t cchMax,_Out_opt_ size_t *pcchLength)
int None shell32.DriveType(_In_ int iDrive)
VOID WINAPI kernel32.CloseThreadpoolCleanupGroupMembers(_Inout_ PTP_CLEANUP_GROUP ptpcg,_In_ BOOL fCancelPendingCallbacks,_Inout_opt_ PVOID pvCleanupContext)
bool None shell32.ParseField(_In_ LPCTSTR *szData,_In_ int n,_In_ LPTSTR *szBuf,_In_ int iBufLen)
BOOL WINAPI kernel32.FlushInstructionCache(_In_ HANDLE hProcess,_In_ LPCVOID lpBaseAddress,_In_ SIZE_T dwSize)
LONG WINAPI advapi32.RegDeleteTree(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey)
LONG WINAPI advapi32.RegDeleteTreeW(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey)
LONG WINAPI advapi32.RegDeleteTreeA(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey)
BOOL WINAPI kernel32.SetEvent(_In_ HANDLE hEvent)
BOOL None kernel32.EnumTimeFormats(_In_ TIMEFMT_ENUMPROC lpTimeFmtEnumProc,_In_ LCID Locale,_In_ DWORD dwFlags)
BOOL None kernel32.EnumTimeFormatsW(_In_ TIMEFMT_ENUMPROC lpTimeFmtEnumProc,_In_ LCID Locale,_In_ DWORD dwFlags)
BOOL None kernel32.EnumTimeFormatsA(_In_ TIMEFMT_ENUMPROC lpTimeFmtEnumProc,_In_ LCID Locale,_In_ DWORD dwFlags)
BOOL WINAPI kernel32.CreateDirectory(_In_ LPCTSTR lpPathName,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes)
BOOL WINAPI kernel32.CreateDirectoryW(_In_ LPCTSTR lpPathName,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes)
BOOL WINAPI kernel32.CreateDirectoryA(_In_ LPCTSTR lpPathName,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes)
DWORD None kernel32.GetTapeStatus(_In_ HANDLE hDevice)
BOOL WINAPI user32.CloseWindow(_In_ HWND hWnd)
BOOL WINAPI kernel32.ResetEvent(_In_ HANDLE hEvent)
HRESULT None ole32.CoRegisterPSClsid(_In_ REFIID riid,_In_ REFCLSID rclsid)
HRESULT None None.OnLtxTransactionAbort([in] COMSVCSEVENTINFO *pInfo,[in] GUID guidLtx)
WORD None None.MAKEWORD(BYTE bLow None,BYTE bHigh None)
WORD None kernel32.GetActiveProcessorGroupCount(void None None)
int CALLBACK None.WinMain(_In_ HINSTANCE hInstance,_In_ HINSTANCE hPrevInstance,_In_ LPSTR lpCmdLine,_In_ int nCmdShow)
HRESULT None winsatapi.InitiateFormalAssessment([in None None,optional] IWinSATInitiateEvents *pCallbacks,[in None None,optional] HWND callerHwnd)
PSLIST_ENTRY WINAPI kernel32.InterlockedPushListSListEx(_Inout_ PSLIST_HEADER ListHead,_Inout_ PSLIST_ENTRY List,_Inout_ PSLIST_ENTRY ListEnd,_In_ ULONG Count)
BOOL CALLBACK None.EnumLocalesProcEx(_In_ LPWSTR lpLocaleString,_In_ DWORD dwFlags,_In_ LPARAM lParam)
BOOL WINAPI kernel32.Wow64RevertWow64FsRedirection(_In_ PVOID OldValue)
BOOL WINAPI user32.AdjustWindowRectExForDpi(_Inout_ LPRECT lpRect,_In_ DWORD dwStyle,_In_ BOOL bMenu,_In_ DWORD dwExStyle,_In_ UINT dpi)
HRESULT None None.OnLtxTransactionStart([in] COMSVCSEVENTINFO *pInfo,[in] GUID guidLtx,[in] GUID tsid,[in] BOOL fRoot,[in] int nIsolationLevel)
HRESULT None None.GetFuncDesc([in] UINT index,[out] FUNCDESC **ppFuncDesc)
BOOL None shell32.DAD_DragMove(POINT pt None)
BOOL None sisbkup.SisRestoredLink(_In_ PVOID sisRestoreStructure,_In_ PWCHAR restoredFileName,_In_ PVOID reparseData,_In_ ULONG reparseDataSize,_Out_ PULONG countOfCommonStoreFilesToRestore,_Out_ PWCHAR **commonStoreFilesToRestore)
HRESULT None ole32.CreateBindCtx(_In_ DWORD reserved,_Out_ LPBC *ppbc)
HRESULT None shell32.SHCreateShellItemArrayFromIDLists(_In_ UINT cidl,_In_ PCIDLIST_ABSOLUTE_ARRAY rgpidl,_Out_ IShellItemArray **ppsiItemArray)
PTP_POOL WINAPI kernel32.CreateThreadpool(_Reserved_ PVOID reserved)
BOOL None shell32.GUIDFromString(_In_ LPCTSTR psz,_Out_ LPGUID pguid)
BOOL None shell32.GUIDFromStringW(_In_ LPCTSTR psz,_Out_ LPGUID pguid)
BOOL None shell32.GUIDFromStringA(_In_ LPCTSTR psz,_Out_ LPGUID pguid)
VOID FORCEINLINE None.TpSetCallbackFinalizationCallback(_Inout_ PTP_CALLBACK_ENVIRON CallbackEnviron,_In_ PTP_SIMPLE_CALLBACK FinalizationCallback)
HGLOBAL WINAPI kernel32.GlobalReAlloc(_In_ HGLOBAL hMem,_In_ SIZE_T dwBytes,_In_ UINT uFlags)
HRESULT WINAPI ole32.CoDecrementMTAUsage(_In_ CO_MTA_USAGE_COOKIE Cookie)
VOID CALLBACK None.TimerCallback(_Inout_ PTP_CALLBACK_INSTANCE Instance,_Inout_opt_ PVOID Context,_Inout_ PTP_TIMER Timer)
PTSTR None shlwapi.StrNCat(_Inout_ PTSTR psz1,PCTSTR psz2 None,int cchMax None)
PTSTR None shlwapi.StrNCatW(_Inout_ PTSTR psz1,PCTSTR psz2 None,int cchMax None)
PTSTR None shlwapi.StrNCatA(_Inout_ PTSTR psz1,PCTSTR psz2 None,int cchMax None)
UINT None shlwapi.WhichPlatform(void None None)
HRESULT None ole32.CoRevertToSelf(void None None)
BOOL WINAPI kernel32.EnumPageFiles(_Out_ PENUM_PAGE_CALLBACK pCallbackRoutine,_In_ LPVOID lpContext)
BOOL WINAPI kernel32.EnumPageFilesW(_Out_ PENUM_PAGE_CALLBACK pCallbackRoutine,_In_ LPVOID lpContext)
BOOL WINAPI kernel32.EnumPageFilesA(_Out_ PENUM_PAGE_CALLBACK pCallbackRoutine,_In_ LPVOID lpContext)
RPC_STATUS RPC_ENTRY rpcrt4.RpcServerUseProtseqIf(unsigned char *Protseq,unsigned int MaxCalls,RPC_IF_HANDLE IfSpec None,void *SecurityDescriptor None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcServerUseProtseqIfW(unsigned char *Protseq,unsigned int MaxCalls,RPC_IF_HANDLE IfSpec None,void *SecurityDescriptor None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcServerUseProtseqIfA(unsigned char *Protseq,unsigned int MaxCalls,RPC_IF_HANDLE IfSpec None,void *SecurityDescriptor None)
BOOLEAN WINAPI advapi32.AuditQuerySecurity(_In_ SECURITY_INFORMATION SecurityInformation,_Out_ PSECURITY_DESCRIPTOR *ppSecurityDescriptor)
PTP_IO WINAPI kernel32.CreateThreadpoolIo(_In_ HANDLE fl,_In_ PTP_WIN32_IO_CALLBACK pfnio,_Inout_opt_ PVOID pv,_In_opt_ PTP_CALLBACK_ENVIRON pcbe)
NTSTATUS NTAPI ntdll.NtCompareTokens(_In_ HANDLE FirstTokenHandle,_In_ HANDLE SecondTokenHandle,_Out_ PBOOLEAN Equal)
LONG WINAPI advapi32.RegReplaceKey(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_ LPCTSTR lpNewFile,_In_ LPCTSTR lpOldFile)
LONG WINAPI advapi32.RegReplaceKeyW(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_ LPCTSTR lpNewFile,_In_ LPCTSTR lpOldFile)
LONG WINAPI advapi32.RegReplaceKeyA(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_ LPCTSTR lpNewFile,_In_ LPCTSTR lpOldFile)
BOOL WINAPI None.GenerateConsoleCtrlEvent(_In_ DWORD dwCtrlEvent,_In_ DWORD dwProcessGroupId)
BOOL WINAPI avrt.AvRtLeaveThreadOrderingGroup(_In_ HANDLE Context)
HRESULT None ole32.CoRegisterSurrogate(_In_ LPSURROGATE pSurrogate)
HRESULT None ole32.CoCopyProxy(_In_ IUnknown *pProxy,_Out_ IUnknown **ppCopy)
UINT None kernel32.GetOEMCP(void None None)
HRESULT None shell32.SHCreateFileExtractIcon(_In_ LPCTSTR pszFile,_In_ DWORD dwFileAttributes,_In_ REFIID riid,void **ppv None)
HRESULT None shell32.SHCreateFileExtractIconW(_In_ LPCTSTR pszFile,_In_ DWORD dwFileAttributes,_In_ REFIID riid,void **ppv None)
DWORD None kernel32.SetTapePosition(_In_ HANDLE hDevice,_In_ DWORD dwPositionMethod,_In_ DWORD dwPartition,_In_ DWORD dwOffsetLow,_In_ DWORD dwOffsetHigh,_In_ BOOL bImmediate)
BOOL WINAPI kernel32.FindNextStreamW(_In_ HANDLE hFindStream,_Out_ LPVOID lpFindStreamData)
BOOL None kernel32.EnumSystemGeoID(_In_ GEOCLASS GeoClass,_In_ GEOID ParentGeoId,_In_ GEO_ENUMPROC lpGeoEnumProc)
BOOL None kernel32.QueryIdleProcessorCycleTimeEx(_In_ USHORT Group,_Inout_ PULONG BufferLength,_Out_ PULONG64 ProcessorIdleCycleTime)
LONG WINAPI advapi32.RegDeleteValue(_In_ HKEY hKey,_In_opt_ LPCTSTR lpValueName)
LONG WINAPI advapi32.RegDeleteValueW(_In_ HKEY hKey,_In_opt_ LPCTSTR lpValueName)
LONG WINAPI advapi32.RegDeleteValueA(_In_ HKEY hKey,_In_opt_ LPCTSTR lpValueName)
int None shell32.PathResolve(_Inout_ PWSTR pszPath,_In_opt_ PZPCWSTR dirs,UINT fFlags None)
VOID FORCEINLINE None.TpDestroyCallbackEnviron(_In_ PTP_CALLBACK_ENVIRON CallbackEnviron)
BOOL WINAPI kernel32.GetExitCodeThread(_In_ HANDLE hThread,_Out_ LPDWORD lpExitCode)
void None None.SetContractDelegateWindow(_In_ HWND hwndSource,_In_opt_ HWND hwndDelegate)
int None kernel32.FoldString(_In_ DWORD dwMapFlags,_In_ LPCTSTR lpSrcStr,_In_ int cchSrc,_Out_opt_ LPTSTR lpDestStr,_In_ int cchDest)
int None kernel32.FoldStringW(_In_ DWORD dwMapFlags,_In_ LPCTSTR lpSrcStr,_In_ int cchSrc,_Out_opt_ LPTSTR lpDestStr,_In_ int cchDest)
int None kernel32.FoldStringA(_In_ DWORD dwMapFlags,_In_ LPCTSTR lpSrcStr,_In_ int cchSrc,_Out_opt_ LPTSTR lpDestStr,_In_ int cchDest)
BOOL WINAPI kernel32.SetUmsThreadInformation(_In_ PUMS_CONTEXT UmsThread,_In_ UMS_THREAD_INFO_CLASS UmsThreadInfoClass,_In_ PVOID UmsThreadInformation,_In_ ULONG UmsThreadInformationLength)
HRESULT None shell32.SHCLSIDFromString(_In_ PCWSTR psz,_Out_ CLSID *pcClsid)
BOOL WINAPI kernel32.CheckRemoteDebuggerPresent(_In_ HANDLE hProcess,_Inout_ PBOOL pbDebuggerPresent)
HRESULT None ole32.CoCreateGuid(_Out_ GUID *pguid)
UINT None shell32.SHExtractIconsW(_In_ LPCWSTR pszFileName,_In_ int nIconIndex,_In_ int cxIcon,_In_ int cyIcon,_Out_ HICON *phIcon,_Out_ UINT *pIconId,_In_ UINT nIcons,_In_ UINT flags)
UINT None shell32.SHExtractIconsW(_In_ LPCWSTR pszFileName,_In_ int nIconIndex,_In_ int cxIcon,_In_ int cyIcon,_Out_ HICON *phIcon,_Out_ UINT *pIconId,_In_ UINT nIcons,_In_ UINT flags)
BOOLEAN WINAPI kernel32.CreateSymbolicLinkTransacted(_In_ LPTSTR lpSymlinkFileName,_In_ LPTSTR lpTargetFileName,_In_ DWORD dwFlags,_In_ HANDLE hTransaction)
BOOLEAN WINAPI kernel32.CreateSymbolicLinkTransactedW(_In_ LPTSTR lpSymlinkFileName,_In_ LPTSTR lpTargetFileName,_In_ DWORD dwFlags,_In_ HANDLE hTransaction)
BOOLEAN WINAPI kernel32.CreateSymbolicLinkTransactedA(_In_ LPTSTR lpSymlinkFileName,_In_ LPTSTR lpTargetFileName,_In_ DWORD dwFlags,_In_ HANDLE hTransaction)
int None kernel32.LCMapString(_In_ LCID Locale,_In_ DWORD dwMapFlags,_In_ LPCTSTR lpSrcStr,_In_ int cchSrc,_Out_opt_ LPTSTR lpDestStr,_In_ int cchDest)
int None kernel32.LCMapStringW(_In_ LCID Locale,_In_ DWORD dwMapFlags,_In_ LPCTSTR lpSrcStr,_In_ int cchSrc,_Out_opt_ LPTSTR lpDestStr,_In_ int cchDest)
int None kernel32.LCMapStringA(_In_ LCID Locale,_In_ DWORD dwMapFlags,_In_ LPCTSTR lpSrcStr,_In_ int cchSrc,_Out_opt_ LPTSTR lpDestStr,_In_ int cchDest)
HRESULT None ole32.CoQueryProxyBlanket(_In_ IUnknown *pProxy,_Out_opt_ DWORD *pwAuthnSvc,_Out_opt_ DWORD *pAuthzSvc,_Out_opt_ OLECHAR **pServerPrincName,_Out_opt_ DWORD *pAuthnLevel,_Out_opt_ DWORD *pImpLevel,_Out_opt_ RPC_AUTH_IDENTITY_HANDLE *pAuthInfo,_Out_opt_ DWORD *pCapabilites)
HRESULT None shell32.SHQueryUserNotificationState(_Out_ QUERY_USER_NOTIFICATION_STATE *pquns)
BOOL WINAPI kernel32.UnlockFile(_In_ HANDLE hFile,_In_ DWORD dwFileOffsetLow,_In_ DWORD dwFileOffsetHigh,_In_ DWORD nNumberOfBytesToUnlockLow,_In_ DWORD nNumberOfBytesToUnlockHigh)
BOOL WINAPI kernel32.LockFile(_In_ HANDLE hFile,_In_ DWORD dwFileOffsetLow,_In_ DWORD dwFileOffsetHigh,_In_ DWORD nNumberOfBytesToLockLow,_In_ DWORD nNumberOfBytesToLockHigh)
BOOL None shlwapi.IsCharAlphaNumericWrapW(_In_ WCHAR ch)
BOOL WINAPI kernel32.IsProcessInJob(_In_ HANDLE ProcessHandle,_In_opt_ HANDLE JobHandle,_Out_ PBOOL Result)
DWORD WINAPI kernel32.GetFileType(_In_ HANDLE hFile)
DWORD WINAPI kernel32.WaitForSingleObject(_In_ HANDLE hHandle,_In_ DWORD dwMilliseconds)
BOOLEAN CALLBACK None.SecureMemoryCacheCallback(_In_ PVOID Addr,_In_ SIZE_T Range)
int None shell32.RestartDialogEx(_In_opt_ HWND hParent,_In_opt_ PCWSTR pszPrompt,DWORD dwFlags None,DWORD dwReasonCode None)
LPVOID None ole32.CoTaskMemRealloc(_In_opt_ LPVOID pv,_In_ SIZE_T cb)
DWORD WINAPI kernel32.GetEnvironmentVariable(_In_opt_ LPCTSTR lpName,_Out_opt_ LPTSTR lpBuffer,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetEnvironmentVariableW(_In_opt_ LPCTSTR lpName,_Out_opt_ LPTSTR lpBuffer,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetEnvironmentVariableA(_In_opt_ LPCTSTR lpName,_Out_opt_ LPTSTR lpBuffer,_In_ DWORD nSize)
void None None.MyProcedure_notify(void None None)
LPTSTR WINAPI kernel32.GetCommandLine(void None None)
LPTSTR WINAPI kernel32.GetCommandLineW(void None None)
LPTSTR WINAPI kernel32.GetCommandLineA(void None None)
BOOL WINAPI kernel.SetDisplayAutoRotationPreferences(_In_ ORIENTATION_PREFERENCE *pOrientation)
BOOL None shell32.PathIsSlow(_In_ LPCTSTR pszFile,DWORD dwFileAttr None)
BOOL None shell32.PathIsSlowW(_In_ LPCTSTR pszFile,DWORD dwFileAttr None)
BOOL None shell32.PathIsSlowA(_In_ LPCTSTR pszFile,DWORD dwFileAttr None)
HRESULT None ole32.CLSIDFromString(_In_ LPCOLESTR lpsz,_Out_ LPCLSID pclsid)
int None normaliz.IdnToUnicode(_In_ DWORD dwFlags,_In_ LPCWSTR lpASCIICharStr,_In_ int cchASCIIChar,_Out_opt_ LPWSTR lpUnicodeCharStr,_In_ int cchUnicodeChar)
BOOL None kernel32.GetNumaProcessorNodeEx(_In_ PPROCESSOR_NUMBER Processor,_Out_ PUSHORT NodeNumber)
HRESULT None shell32.SHCreateShellItemArrayFromShellItem(_In_ IShellItem *psi,_In_ REFIID riid,_Out_ void **ppv)
VOID FORCEINLINE None.TpSetCallbackNoActivationContext(_Inout_ PTP_CALLBACK_ENVIRON CallbackEnviron)
BOOL WINAPI kernel32.GetThreadTimes(_In_ HANDLE hThread,_Out_ LPFILETIME lpCreationTime,_Out_ LPFILETIME lpExitTime,_Out_ LPFILETIME lpKernelTime,_Out_ LPFILETIME lpUserTime)
HINSTANCE None shell32.SHGetShellStyleHInstance(void None None)
BOOLEAN WINAPI kernel32.TryAcquireSRWLockShared(_Inout_ PSRWLOCK SRWLock)
BOOL WINAPI kernel32.SetThreadPriorityBoost(_In_ HANDLE hThread,_In_ BOOL DisablePriorityBoost)
int WINAPI user32.InternalGetWindowText(_In_ HWND hWnd,_Out_ LPWSTR lpString,_In_ int nMaxCount)
BOOL None kernel32.GetNLSVersionEx(_In_ NLS_FUNCTION function,_In_opt_ LPCWSTR lpLocaleName,_Inout_ LPNLSVERSIONINFOEX lpVersionInformation)
HRESULT None ole32.CoMarshalInterface(_In_ LPSTREAM pStm,_In_ REFIID riid,_In_ LPUNKNOWN pUnk,_In_ DWORD dwDestContext,_In_opt_ LPVOID pvDestContext,_In_ DWORD mshlflags)
HANDLE WINAPI kernel32.OpenJobObject(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandles,_In_ LPCTSTR lpName)
HANDLE WINAPI kernel32.OpenJobObjectW(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandles,_In_ LPCTSTR lpName)
HANDLE WINAPI kernel32.OpenJobObjectA(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandles,_In_ LPCTSTR lpName)
HRESULT None None.CreatePropertyByPosition([in] int Index,[out] VARIANT_BOOL *fExists,[out] ISharedProperty **ppProp)
DWORD WINAPI kernel32.QueryIoRateControlInformationJobObject(_In_opt_ HANDLE hJob,_In_opt_ PCWSTR VolumeName,_Out_ JOBOBJECT_IO_RATE_CONTROL_INFORMATION **InfoBlocks,_Out_ ULONG *InfoBlockCount)
int None idndl.DownlevelGetLocaleScripts(_In_ LPCWSTR lpLocaleName,_Out_ LPWSTR lpScripts,_In_ int cchScripts)
BOOL WINAPI user32.EnumWindows(_In_ WNDENUMPROC lpEnumFunc,_In_ LPARAM lParam)
BOOL WINAPI kernel32.SetProtectedPolicy(_In_ LPCGUID PolicyGuid,_In_ ULONG_PTR PolicyValue,_Out_ PULONG_PTR OldPolicyValue)
BOOL WINAPI kernel32.LockFileEx(_In_ HANDLE hFile,_In_ DWORD dwFlags,_Reserved_ DWORD dwReserved,_In_ DWORD nNumberOfBytesToLockLow,_In_ DWORD nNumberOfBytesToLockHigh,_Inout_ LPOVERLAPPED lpOverlapped)
BOOL WINAPI kernel32.GetFileBandwidthReservation(_In_ HANDLE hFile,_Out_ LPDWORD lpPeriodMilliseconds,_Out_ LPDWORD lpBytesPerPeriod,_Out_ LPBOOL pDiscardable,_Out_ LPDWORD lpTransferSize,_Out_ LPDWORD lpNumOutstandingRequests)
HRESULT None ole32.CreateGenericComposite(_In_opt_ LPMONIKER pmkFirst,_In_opt_ LPMONIKER pmkRest,_Out_ LPMONIKER *ppmkComposite)
BOOL WINAPI avrt.AvSetMmThreadPriority(_In_ HANDLE AvrtHandle,_In_ AVRT_PRIORITY Priority)
BOOL WINAPI kernel32.ExecuteUmsThread(_Inout_ PUMS_CONTEXT UmsThread)
BOOL WINAPI advapi32.CryptGenRandom(_In_ HCRYPTPROV hProv,_In_ DWORD dwLen,_Inout_ BYTE *pbBuffer)
BOOL None shell32.SHValidateUNC(_In_opt_ HWND hwndOwner,_Inout_ PWSTR pszFile,UINT fConnect None)
DWORD WINAPI kernel32.GetProcessId(_In_ HANDLE Process)
void None None.FreeIDListArrayFull(_In_ PIDLIST_ABSOLUTE *ppidls,UINT cItems None)
VOID CALLBACK None.WorkCallback(_Inout_ PTP_CALLBACK_INSTANCE Instance,_Inout_opt_ PVOID Context,_Inout_ PTP_WORK Work)
BOOL WINAPI user32.IsHungAppWindow(_In_ HWND hWnd)
BOOL None shell32.WriteCabinetState(_In_ CABINETSTATE *pcs)
BOOL WINAPI kernel32.FreeEnvironmentStrings(_In_ LPTCH lpszEnvironmentBlock)
BOOL WINAPI kernel32.FreeEnvironmentStringsW(_In_ LPTCH lpszEnvironmentBlock)
BOOL WINAPI kernel32.FreeEnvironmentStringsA(_In_ LPTCH lpszEnvironmentBlock)
DWORD WINAPI kernel32.GetProcessIdOfThread(_In_ HANDLE Thread)
BOOL None shell32.UpdateAllDesktopSubscriptions(IADesktopP2 *padp2 None)
HRESULT None ole32.CoSwitchCallContext(_In_opt_ IUnknown *pNewObject,_Out_ IUnknown **ppOldObject)
BOOL WINAPI kernel32.GetNumaAvailableMemoryNode(_In_ UCHAR Node,_Out_ PULONGLONG AvailableBytes)
BOOL WINAPI kernel32.LoadStringByReference(_In_ DWORD Flags,_In_opt_ PCWSTR Language,_In_ PCWSTR SourceString,_Out_opt_ PWSTR Buffer,_In_ ULONG cchBuffer,_In_opt_ PCWSTR Directory,_Out_opt_ PULONG pcchBufferOut)
BOOL WINAPI kernel32.GetBinaryType(_In_ LPCTSTR lpApplicationName,_Out_ LPDWORD lpBinaryType)
BOOL WINAPI kernel32.GetBinaryTypeW(_In_ LPCTSTR lpApplicationName,_Out_ LPDWORD lpBinaryType)
BOOL WINAPI kernel32.GetBinaryTypeA(_In_ LPCTSTR lpApplicationName,_Out_ LPDWORD lpBinaryType)
BOOL WINAPI kernel32.EnterUmsSchedulingMode(_In_ PUMS_SCHEDULER_STARTUP_INFO SchedulerStartupInfo)
HRESULT None None.IFace_Remf1_Stub(parameter list None)
HANDLE WINAPI kernel32.FindFirstStreamW(_In_ LPCWSTR lpFileName,_In_ STREAM_INFO_LEVELS InfoLevel,_Out_ LPVOID lpFindStreamData,_Reserved_ DWORD dwFlags)
BOOL WINAPI kernel32.IsBadWritePtr(_In_ LPVOID lp,_In_ UINT_PTR ucb)
BOOL WINAPI avrt.AvQuerySystemResponsiveness(_In_ HANDLE AvrtHandle,_Out_ PULONG SystemResponsivenessValue)
UINT WINAPI kernel32.LocalFlags(_In_ HLOCAL hMem)
DWORD WINAPI advapi32.OpenEncryptedFileRaw(_In_ LPCTSTR lpFileName,_In_ ULONG ulFlags,_Out_ PVOID *pvContext)
DWORD WINAPI advapi32.OpenEncryptedFileRawW(_In_ LPCTSTR lpFileName,_In_ ULONG ulFlags,_Out_ PVOID *pvContext)
DWORD WINAPI advapi32.OpenEncryptedFileRawA(_In_ LPCTSTR lpFileName,_In_ ULONG ulFlags,_Out_ PVOID *pvContext)
LONG WINAPI advapi32.RegCopyTree(_In_ HKEY hKeySrc,_In_opt_ LPCTSTR lpSubKey,_In_ HKEY hKeyDest)
LONG WINAPI advapi32.RegCopyTreeW(_In_ HKEY hKeySrc,_In_opt_ LPCTSTR lpSubKey,_In_ HKEY hKeyDest)
LONG WINAPI advapi32.RegCopyTreeA(_In_ HKEY hKeySrc,_In_opt_ LPCTSTR lpSubKey,_In_ HKEY hKeyDest)
BOOL WINAPI advapi32.FileEncryptionStatus(_In_ LPCTSTR lpFileName,_Out_ LPDWORD lpStatus)
BOOL WINAPI advapi32.FileEncryptionStatusW(_In_ LPCTSTR lpFileName,_Out_ LPDWORD lpStatus)
BOOL WINAPI advapi32.FileEncryptionStatusA(_In_ LPCTSTR lpFileName,_Out_ LPDWORD lpStatus)
int None shell32.Shell_GetCachedImageIndex(_In_ PCWSTR pwszIconPath,int iIconIndex None,UINT uIconFlags None)
int None shell32.Shell_GetCachedImageIndexW(_In_ PCWSTR pwszIconPath,int iIconIndex None,UINT uIconFlags None)
int None shell32.Shell_GetCachedImageIndexA(_In_ PCWSTR pwszIconPath,int iIconIndex None,UINT uIconFlags None)
BOOL WINAPI wtsapi32.WTSGetChildSessionId(_Out_ ULONG *pSessionId)
HRESULT WINAPI ole32.CoHandlePriorityEventsFromMessagePump(void None None)
HRESULT None None.OnCRMAnalyze([in] COMSVCSEVENTINFO *pInfo,[in] GUID guidClerkCLSID,[in] DWORD dwCrmRecordType,[in] DWORD dwRecordSize)
BOOL None shell32.SHInvokePrinterCommand(_In_opt_ HWND hwnd,UINT uAction None,_In_ LPCTSTR lpBuf1,_In_opt_ LPCTSTR lpBuf2,BOOL fModal None)
BOOL None shell32.SHInvokePrinterCommandW(_In_opt_ HWND hwnd,UINT uAction None,_In_ LPCTSTR lpBuf1,_In_opt_ LPCTSTR lpBuf2,BOOL fModal None)
BOOL None shell32.SHInvokePrinterCommandA(_In_opt_ HWND hwnd,UINT uAction None,_In_ LPCTSTR lpBuf1,_In_opt_ LPCTSTR lpBuf2,BOOL fModal None)
BOOL WINAPI kernel32.SetThreadStackGuarantee(_Inout_ PULONG StackSizeInBytes)
VOID WINAPI kernel32.DisassociateCurrentThreadFromCallback(_Inout_ PTP_CALLBACK_INSTANCE pci)
HRESULT None shell32.GetPageCount([out] ULONG *pcPages)
BOOL None kernel32.EnumDateFormats(_In_ DATEFMT_ENUMPROC lpDateFmtEnumProc,_In_ LCID Locale,_In_ DWORD dwFlags)
BOOL None kernel32.EnumDateFormatsW(_In_ DATEFMT_ENUMPROC lpDateFmtEnumProc,_In_ LCID Locale,_In_ DWORD dwFlags)
BOOL None kernel32.EnumDateFormatsA(_In_ DATEFMT_ENUMPROC lpDateFmtEnumProc,_In_ LCID Locale,_In_ DWORD dwFlags)
HRESULT None shell32.SHSetTemporaryPropertyForItem(_In_ IShellItem *psi,_In_ REFPROPERTYKEY propkey,_In_ REFPROPVARIANT propvar)
HRESULT None ole32.CoInitialize(_In_opt_ LPVOID pvReserved)
BOOL WINAPI user32.OpenIcon(_In_ HWND hWnd)
BOOL CALLBACK None.EnumThreadWndProc(_In_ HWND hwnd,_In_ LPARAM lParam)
uint32 None cimwin32.SetPowerState([in] uint16 PowerState,[in] datetime Time)
BOOL WINAPI kernel32.MapUserPhysicalPages(_In_ PVOID lpAddress,_In_ ULONG_PTR NumberOfPages,_In_ PULONG_PTR UserPfnArray)
HRESULT None ole32.CreateAntiMoniker(_Out_ LPMONIKER *ppmk)
HRESULT None ole32.CoGetPSClsid(_In_ REFIID riid,_Out_ CLSID *pClsid)
HRESULT __stdcall None.DllCanUnloadNow(void None None)
PCCTL_CONTEXT WINAPI crypt32.CertDuplicateCTLContext(_In_ PCCTL_CONTEXT pCtlContext)
HRESULT None None.QueryInterface([in] REFIID riid,[out] void **ppvObject)
HRESULT None ole32.OleRegGetMiscStatus(_In_ REFCLSID clsid,_In_ DWORD dwAspect,_Out_ DWORD *pdwStatus)
DWORD None kernel32.IsValidNLSVersion(_In_ NLS_FUNCTION function,_In_opt_ LPCWSTR lpLocaleName,_In_ LPNLSVERSIONINFOEX lpVersionInformation)
HRESULT None ole32.StringFromIID(_In_ REFIID rclsid,_Out_ LPOLESTR *lplpsz)
BOOL WINAPI kernel32.SetFileIoOverlappedRange(_In_ HANDLE FileHandle,_In_ PUCHAR OverlappedRangeStart,_In_ ULONG Length)
HRESULT None fastprox.PutInstanceAsync([in] IWbemClassObject *pInst,[in] LONG lFlags,[in] IWbemContext *pCtx,[in] IWbemObjectSink *pResponseHandler)
HRESULT None ole32.CoRegisterActivationFilter(_In_ IActivationFilter *pActivationFilter)
BOOL WINAPI kernel.GetDisplayAutoRotationPreferences(_Out_ ORIENTATION_PREFERENCE *pOrientation)
BOOL WINAPI kernel32.AreFileApisANSI(void None None)
HRESULT None ole32.CoGetContextToken(_Out_ ULONG_PTR *pToken)
BOOL None shell32.ILRemoveLastID(_Inout_opt_ PUIDLIST_RELATIVE pidl)
HGLOBAL WINAPI kernel32.GlobalFree(_In_ HGLOBAL hMem)
BOOL WINAPI kernel32.GetProcessDefaultCpuSets(_In_ HANDLE Process,_Out_opt_ PULONG CpuSetIds,_In_ ULONG CpuSetIdCount,_Out_ PULONG RequiredIdCount)
HANDLE WINAPI kernel32.FindFirstStreamTransactedW(_In_ LPCWSTR lpFileName,_In_ STREAM_INFO_LEVELS InfoLevel,_Out_ LPVOID lpFindStreamData,_Reserved_ DWORD dwFlags,_In_ HANDLE hTransaction)
function None None.getConnectionProfileInfo(connectionProfile None None)
Property None None.Item(index As Integer)
HRESULT None ole32.CoCreateInstance(_In_ REFCLSID rclsid,_In_ LPUNKNOWN pUnkOuter,_In_ DWORD dwClsContext,_In_ REFIID riid,_Out_ LPVOID *ppv)
BOOL None kernel32.GetThreadGroupAffinity(_In_ HANDLE hThread,_Out_ PGROUP_AFFINITY GroupAffinity)
BOOL WINAPI advapi32.CreateProcessAsUser(_In_opt_ HANDLE hToken,_In_opt_ LPCTSTR lpApplicationName,_Inout_opt_ LPTSTR lpCommandLine,_In_opt_ LPSECURITY_ATTRIBUTES lpProcessAttributes,_In_opt_ LPSECURITY_ATTRIBUTES lpThreadAttributes,_In_ BOOL bInheritHandles,_In_ DWORD dwCreationFlags,_In_opt_ LPVOID lpEnvironment,_In_opt_ LPCTSTR lpCurrentDirectory,_In_ LPSTARTUPINFO lpStartupInfo,_Out_ LPPROCESS_INFORMATION lpProcessInformation)
BOOL WINAPI advapi32.CreateProcessAsUserW(_In_opt_ HANDLE hToken,_In_opt_ LPCTSTR lpApplicationName,_Inout_opt_ LPTSTR lpCommandLine,_In_opt_ LPSECURITY_ATTRIBUTES lpProcessAttributes,_In_opt_ LPSECURITY_ATTRIBUTES lpThreadAttributes,_In_ BOOL bInheritHandles,_In_ DWORD dwCreationFlags,_In_opt_ LPVOID lpEnvironment,_In_opt_ LPCTSTR lpCurrentDirectory,_In_ LPSTARTUPINFO lpStartupInfo,_Out_ LPPROCESS_INFORMATION lpProcessInformation)
BOOL WINAPI advapi32.CreateProcessAsUserA(_In_opt_ HANDLE hToken,_In_opt_ LPCTSTR lpApplicationName,_Inout_opt_ LPTSTR lpCommandLine,_In_opt_ LPSECURITY_ATTRIBUTES lpProcessAttributes,_In_opt_ LPSECURITY_ATTRIBUTES lpThreadAttributes,_In_ BOOL bInheritHandles,_In_ DWORD dwCreationFlags,_In_opt_ LPVOID lpEnvironment,_In_opt_ LPCTSTR lpCurrentDirectory,_In_ LPSTARTUPINFO lpStartupInfo,_Out_ LPPROCESS_INFORMATION lpProcessInformation)
HGLOBAL None ole32.OleGetIconOfClass(_In_ REFCLSID rclsid,_In_opt_ LPOLESTR lpszLabel,_In_ BOOL fUseTypeAsLabel)
int None normaliz.IdnToAscii(_In_ DWORD dwFlags,_In_ LPCWSTR lpUnicodeCharStr,_In_ int cchUnicodeChar,_Out_opt_ LPWSTR lpASCIICharStr,_In_ int cchASCIIChar)
HRESULT __stdcall None.DllGetClassObject(_In_ REFCLSID rclsid,_In_ REFIID riid,_Out_ LPVOID *ppv)
public IAsyncOperationPackageContentGroup None.GetContentGroupAsync(String name None)
BOOL None kernel32.GetThreadInformation(_In_ HANDLE hThread,_In_ THREAD_INFORMATION_CLASS ThreadInformationClass,_Out_writes_bytes_ ThreadInformation None,_In_ DWORD ThreadInformationSize)
HANDLE WINAPI kernel32.CreateWaitableTimer(_In_opt_ LPSECURITY_ATTRIBUTES lpTimerAttributes,_In_ BOOL bManualReset,_In_opt_ LPCTSTR lpTimerName)
HANDLE WINAPI kernel32.CreateWaitableTimerW(_In_opt_ LPSECURITY_ATTRIBUTES lpTimerAttributes,_In_ BOOL bManualReset,_In_opt_ LPCTSTR lpTimerName)
HANDLE WINAPI kernel32.CreateWaitableTimerA(_In_opt_ LPSECURITY_ATTRIBUTES lpTimerAttributes,_In_ BOOL bManualReset,_In_opt_ LPCTSTR lpTimerName)
midl_pragma None None.warning(warning_option : message_list)
PIDLIST_ABSOLUTE None None.ILCloneFull(_In_ PCUIDLIST_ABSOLUTE pidl)
BOOL WINAPI kernel32.ConvertFiberToThread(void None None)
BOOL WINAPI kernel32.IsDebuggerPresent(void None None)
int None kernel32.GetStringScripts(_In_ DWORD dwFlags,_In_ LPCWSTR lpString,_In_ int cchString,_Out_opt_ LPWSTR lpScripts,_In_ int cchScripts)
DWORD WINAPI kernel32.GetCurrentThreadId(void None None)
HRESULT None ole32.CoGetMarshalSizeMax(_Out_ ULONG *pulSize,_In_ REFIID riid,_In_ LPUNKNOWN pUnk,_In_ DWORD dwDestContext,_In_opt_ LPVOID pvDestContext,_In_ DWORD mshlflags)
HRESULT None shell32.SHGetNameFromIDList(_In_ PCIDLIST_ABSOLUTE pidl,_In_ SIGDN sigdnName,_Out_ PWSTR *ppszName)
HRESULT None ole32.CoTreatAsClass(_In_ REFCLSID clsidOld,_In_ REFCLSID clsidNew)
BOOL None kernel32.IsValidLocaleName(_In_ LPCWSTR lpLocaleName)
HRESULT None ole32.CoInvalidateRemoteMachineBindings(_In_ LPOLESTR pszMachineName)
HRESULT None ole32.CoCancelCall(_In_ DWORD dwThreadId,_In_ ULONG ulTimeout)
UINT_PTR None shell32.SHAppBarMessage(_In_ DWORD dwMessage,_Inout_ PAPPBARDATA pData)
BOOL None shlwapi.StrTrim(_Inout_ PTSTR psz,_In_ PCTSTR pszTrimChars)
BOOL None shlwapi.StrTrimW(_Inout_ PTSTR psz,_In_ PCTSTR pszTrimChars)
BOOL None shlwapi.StrTrimA(_Inout_ PTSTR psz,_In_ PCTSTR pszTrimChars)
BOOL WINAPI kernel32.TerminateThread(_Inout_ HANDLE hThread,_In_ DWORD dwExitCode)
DWORD None user32.GetMenuContextHelpId(HMENU hmenu None)
BOOL None None.ILIsAligned(_In_ PCUIDLIST_RELATIVE pidl)
void None combase.CoFreeUnusedLibrariesEx(_In_ DWORD dwUnloadDelay,_In_ DWORD dwReserved)
LONG WINAPI advapi32.RegEnableReflectionKey(_In_ HKEY hBase)
HRESULT None None.put_PublisherID([in] BSTR bstrPublisherID)
function None None.onPhotoCaptured(eventArgs None None)
BOOL None sisbkup.SisCreateBackupStructure(_In_ PWCHAR volumeRoot,_Out_ PVOID *sisBackupStructure,_Out_ PWCHAR *commonStoreRootPathname,_Out_ PULONG countOfCommonStoreFilesToBackUp,_Out_ PWCHAR **commonStoreFilesToBackUp)
DWORD WINAPI kernel32.GetFinalPathNameByHandle(_In_ HANDLE hFile,_Out_ LPTSTR lpszFilePath,_In_ DWORD cchFilePath,_In_ DWORD dwFlags)
DWORD WINAPI kernel32.GetFinalPathNameByHandleW(_In_ HANDLE hFile,_Out_ LPTSTR lpszFilePath,_In_ DWORD cchFilePath,_In_ DWORD dwFlags)
DWORD WINAPI kernel32.GetFinalPathNameByHandleA(_In_ HANDLE hFile,_Out_ LPTSTR lpszFilePath,_In_ DWORD cchFilePath,_In_ DWORD dwFlags)
HRESULT WINOLEAPI None.CoSetMessageDispatcher(_In_opt_ *pMessageDispatcher None)
DWORD None ole32.CoGetCurrentProcess(void None None)
HRESULT None shell32.SHGetUnreadMailCount(_In_opt_ HKEY hKeyUser,_In_opt_ LPCTSTR pszMailAddress,_Out_opt_ DWORD *pdwCount,_Out_opt_ FILETIME *pFileTime,_Out_opt_ LPCTSTR pszShellExecuteCommand,int cchShellExecuteCommand None)
HRESULT None shell32.SHGetUnreadMailCountW(_In_opt_ HKEY hKeyUser,_In_opt_ LPCTSTR pszMailAddress,_Out_opt_ DWORD *pdwCount,_Out_opt_ FILETIME *pFileTime,_Out_opt_ LPCTSTR pszShellExecuteCommand,int cchShellExecuteCommand None)
BOOL WINAPI kernel32.SetThreadpoolWaitEx(_Inout_ PTP_WAIT pwa,_In_opt_ HANDLE h,_In_opt_ PFILETIME pftTimeout,_Reserved_ PVOID Reserved)
LONG None shell32.PathProcessCommand(_In_ PCWSTR pszSrc,_Out_ PWSTR pszDest,int iDestMax None,DWORD dwFlags None)
LRESULT None shlwapi.SHSendMessageBroadcast(_In_ UINT uMsg,_In_ WPARAM wParam,_In_ LPARAM lParam)
LRESULT None shlwapi.SHSendMessageBroadcastW(_In_ UINT uMsg,_In_ WPARAM wParam,_In_ LPARAM lParam)
LRESULT None shlwapi.SHSendMessageBroadcastA(_In_ UINT uMsg,_In_ WPARAM wParam,_In_ LPARAM lParam)
uint32 None cimwin32.SetPowerState([in] uint16 PowerState,[in] datetime Time)
BOOL None shell32.SHTestTokenMembership(_In_opt_ HANDLE hToken,ULONG ulRID None)
BOOL None kernel32.IsNLSDefinedString(_In_ NLS_FUNCTION Function,_In_ DWORD dwFlags,_In_ LPNLSVERSIONINFO lpVersionInformation,_In_ LPCWSTR lpString,_In_ INT cchStr)
HRESULT None None.put_OwnerSID([in] BSTR bstrOwnerSID)
HRESULT None ole32.CoRegisterMessageFilter(_In_opt_ LPMESSAGEFILTER lpMessageFilter,_Out_opt_ LPMESSAGEFILTER *lplpMessageFilter)
HRESULT None ole32.CLSIDFromProgIDEx(_In_ LPCOLESTR lpszProgID,_Out_ LPCLSID lpclsid)
HWND WINAPI None.GetNextWindow(_In_ HWND hWnd,_In_ UINT wCmd)
DWORD None shlwapi.StopWatchFlush(void None None)
HRESULT __stdcall None.DllRegisterServer(void None None)
HRESULT None ole32.OleRegGetUserType(_In_ REFCLSID clsid,_In_ DWORD dwFormOfType,_Out_ LPOLESTR *pszUserType)
HRESULT __stdcall None.DllUnregisterServer(void None None)
BOOL WINAPI kernel32.GetNumaNodeProcessorMask(_In_ UCHAR Node,_Out_ PULONGLONG ProcessorMask)
int None shell32.PathCleanupSpec(_In_opt_ PCWSTR pszDir,_Inout_ PWSTR pszSpec)
BOOL WINAPI user32.DestroyWindow(_In_ HWND hWnd)
HRESULT None ole32.CoAllowSetForegroundWindow(_In_ IUnknown *pUnk,_In_ LPVOID lpvReserved)
DWORD None shell32.SHRestricted(RESTRICTIONS rest None)
int None shell32.RealDriveType(_In_ int iDrive,_Reserved_ BOOL fOKToHitNet)
BOOL None shell32.SHObjectProperties(_In_ HWND hwnd,_In_ DWORD shopObjectType,_In_ PCWSTR pszObjectName,_In_ PCWSTR pszPropertyPage)
PITEMID_CHILD None shell32.ILCloneFirst(_In_ PCUIDLIST_RELATIVE pidl)
int None shell32.SHHandleUpdateImage(_In_ PCIDLIST_ABSOLUTE pidlExtra)
BOOL None kernel32.EnumDateFormatsExEx(_In_ DATEFMT_ENUMPROCEXEX lpDateFmtEnumProcExEx,_In_opt_ LPCWSTR lpLocaleName,_In_ DWORD dwFlags,_In_ LPARAM lParam)
ULONG None ole32.CoReleaseServerProcess(void None None)
HRESULT None shell32.GetSize([out] SIZE *pSize)
HRESULT None shell32.SHStartNetConnectionDialog(_In_opt_ HWND hwnd,_In_opt_ LPCTSTR pszRemoteName,DWORD dwType None)
HRESULT None shell32.SHStartNetConnectionDialogW(_In_opt_ HWND hwnd,_In_opt_ LPCTSTR pszRemoteName,DWORD dwType None)
HRESULT None shell32.SHStartNetConnectionDialogA(_In_opt_ HWND hwnd,_In_opt_ LPCTSTR pszRemoteName,DWORD dwType None)
HDWP WINAPI user32.DeferWindowPos(_In_ HDWP hWinPosInfo,_In_ HWND hWnd,_In_opt_ HWND hWndInsertAfter,_In_ int x,_In_ int y,_In_ int cx,_In_ int cy,_In_ UINT uFlags)
BOOL None shell32.DAD_SetDragImage(HIMAGELIST him None,POINT *pptOffset None)
int None shlwapi.SHUnicodeToAnsi(_In_ PCWSTR pwszSrc,_Out_ PSTR pszDst,int cchBuf None)
BOOL None None.ScreenSaverConfigureDialog(HWND hDlg None,UINT message None,WPARAM wParam None,LPARAM lParam None)
int None kernel32.GetGeoInfo(_In_ GEOID Location,_In_ GEOTYPE GeoType,_Out_opt_ LPTSTR lpGeoData,_In_ int cchData,_In_ LANGID LangId)
int None kernel32.GetGeoInfoW(_In_ GEOID Location,_In_ GEOTYPE GeoType,_Out_opt_ LPTSTR lpGeoData,_In_ int cchData,_In_ LANGID LangId)
int None kernel32.GetGeoInfoA(_In_ GEOID Location,_In_ GEOTYPE GeoType,_Out_opt_ LPTSTR lpGeoData,_In_ int cchData,_In_ LANGID LangId)
LONG WINAPI advapi32.RegOpenCurrentUser(_In_ REGSAM samDesired,_Out_ PHKEY phkResult)
BOOL WINAPI userenv.CreateEnvironmentBlock(_Out_ LPVOID *lpEnvironment,_In_opt_ HANDLE hToken,_In_ BOOL bInherit)
BOOL WINAPI kernel32.DeleteTimerQueueEx(_In_ HANDLE TimerQueue,_In_opt_ HANDLE CompletionEvent)
HRESULT None ole32.CoTestCancel(void None None)
VOID WINAPI None.FlsCallback(_In_ PVOID lpFlsData)
HRESULT None shell32.SHGetKnownFolderPath(_In_ REFKNOWNFOLDERID rfid,_In_ DWORD dwFlags,_In_opt_ HANDLE hToken,_Out_ PWSTR *ppszPath)
VOID WINAPI kernel32.WaitForThreadpoolWorkCallbacks(_Inout_ PTP_WORK pwk,_In_ BOOL fCancelPendingCallbacks)
VOID WINAPI kernel32.GetCurrentThreadStackLimits(_Out_ PULONG_PTR LowLimit,_Out_ PULONG_PTR HighLimit)
HRESULT WINAPI mssign32.SignerSignEx2(_In_ DWORD dwFlags,_In_ SIGNER_SUBJECT_INFO *pSubjectInfo,_In_ SIGNER_CERT *pSignerCert,_In_ SIGNER_SIGNATURE_INFO *pSignatureInfo,_In_opt_ SIGNER_PROVIDER_INFO *pProviderInfo,_In_opt_ DWORD dwTimestampFlags,_In_opt_ PCSTR pszTimestampAlgorithmOid,_In_opt_ PCWSTR pwszHttpTimeStamp,_In_opt_ PCRYPT_ATTRIBUTES psRequest,_In_opt_ PVOID pSipData,_Out_ SIGNER_CONTEXT **ppSignerContext,_In_opt_ PCERT_STRONG_SIGN_PARA pCryptoPolicy,_Reserved_ PVOID pReserved)
HANDLE WINAPI kernel32.CreateWaitableTimerEx(_In_opt_ LPSECURITY_ATTRIBUTES lpTimerAttributes,_In_opt_ LPCTSTR lpTimerName,_In_ DWORD dwFlags,_In_ DWORD dwDesiredAccess)
HANDLE WINAPI kernel32.CreateWaitableTimerExW(_In_opt_ LPSECURITY_ATTRIBUTES lpTimerAttributes,_In_opt_ LPCTSTR lpTimerName,_In_ DWORD dwFlags,_In_ DWORD dwDesiredAccess)
HANDLE WINAPI kernel32.CreateWaitableTimerExA(_In_opt_ LPSECURITY_ATTRIBUTES lpTimerAttributes,_In_opt_ LPCTSTR lpTimerName,_In_ DWORD dwFlags,_In_ DWORD dwDesiredAccess)
HRESULT None None.Item([in] VARIANT Index,[out] LPVARIANT pItem)
LRESULT None comctl32.DefSubclassProc(_In_ HWND hWnd,_In_ UINT uMsg,_In_ WPARAM WPARAM,_In_ LPARAM LPARAM)
BOOL WINAPI advapi32.QueryServiceObjectSecurity(_In_ SC_HANDLE hService,_In_ SECURITY_INFORMATION dwSecurityInformation,_Out_opt_ PSECURITY_DESCRIPTOR lpSecurityDescriptor,_In_ DWORD cbBufSize,_Out_ LPDWORD pcbBytesNeeded)
BOOL WINAPI crypt32.CryptSIPRetrieveSubjectGuid(_In_ LPCWSTR FileName,_In_opt_ HANDLE hFileIn,_Out_ GUID *pgSubject)
BOOL WINAPI advapi32.SetAclInformation(_Inout_ PACL pAcl,_In_ LPVOID pAclInformation,_In_ DWORD nAclInformationLength,_In_ ACL_INFORMATION_CLASS dwAclInformationClass)
BOOL CALLBACK None.Geo_EnumNameProc(_In_ PWSTR GeoName,LPARAM data None)
BOOL WINAPI kernel32.PostQueuedCompletionStatus(_In_ HANDLE CompletionPort,_In_ DWORD dwNumberOfBytesTransferred,_In_ ULONG_PTR dwCompletionKey,_In_opt_ LPOVERLAPPED lpOverlapped)
BOOL WINAPI kernel32.GetNumaProximityNode(_In_ ULONG ProximityId,_Out_ PUCHAR NodeNumber)
HRESULT None shell32.SHGetKnownFolderItem(_In_ REFKNOWNFOLDERID rfid,_In_ KNOWN_FOLDER_FLAG dwFlags,_In_ HANDLE hToken,_In_ REFIID riid,_Out_ void **ppv)
BOOL None shell32.PathYetAnotherMakeUniqueName(_Out_ PWSTR pszUniqueName,_In_ PCWSTR pszPath,_In_opt_ PCWSTR pszShort,_In_opt_ PCWSTR pszFileSpec)
HINSTANCE None shlwapi.MLLoadLibrary(_In_ LPCTSTR lpszLibFileName,_In_ HMODULE hModule,_In_ DWORD dwCrossCodePage)
HINSTANCE None shlwapi.MLLoadLibraryW(_In_ LPCTSTR lpszLibFileName,_In_ HMODULE hModule,_In_ DWORD dwCrossCodePage)
HINSTANCE None shlwapi.MLLoadLibraryA(_In_ LPCTSTR lpszLibFileName,_In_ HMODULE hModule,_In_ DWORD dwCrossCodePage)
DWORD None user32.GetWindowContextHelpId(HWND hwnd None)
void WINAPI ntdll.RtlInitializeSListHead(_In_ PSLIST_HEADER ListHead)
int None shlwapi.GetMenuPosFromID(_In_ HMENU hmenu,UINT id None)
PSLIST_ENTRY WINAPI kernel32.InterlockedPopEntrySList(_Inout_ PSLIST_HEADER ListHead)
BOOL WINAPI kernel32.GetUmsCompletionListEvent(_In_ PUMS_COMPLETION_LIST UmsCompletionList,_Inout_ PHANDLE UmsCompletionEvent)
HRESULT None shell32.SHILCreateFromPath(_In_ PCWSTR pszPath,_Out_ PIDLIST_ABSOLUTE *ppidl,_Inout_opt_ DWORD *rgflnOut)
BOOL None shell32.SHGetNewLinkInfo(_In_ LPCTSTR pszLinkTo,_In_ LPCTSTR pszDir,_Out_ LPTSTR pszName,_Out_ BOOL *pfMustCopy,_In_ UINT uFlags)
BOOL None shell32.SHGetNewLinkInfoW(_In_ LPCTSTR pszLinkTo,_In_ LPCTSTR pszDir,_Out_ LPTSTR pszName,_Out_ BOOL *pfMustCopy,_In_ UINT uFlags)
BOOL None shell32.SHGetNewLinkInfoA(_In_ LPCTSTR pszLinkTo,_In_ LPCTSTR pszDir,_Out_ LPTSTR pszName,_Out_ BOOL *pfMustCopy,_In_ UINT uFlags)
HRESULT None None.GetInfoOfIndex([in] ULONG iti,[in] DWORD dwFlags,[out] ITypeInfo **pptiCoClass,[out] DWORD *pdwTIFlags,[out] ULONG *pcdispidReserved,[out] IID *piidPrimary,[out] IID *piidSource)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsProfileEltAdd(unsigned long ProfileNameSyntax,unsigned char *ProfileName,RPC_IF_ID *IfId None,unsigned long MemberNameSyntax,unsigned char *MemberName,unsigned long Priority,unsigned char *Annotation)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsProfileEltAddW(unsigned long ProfileNameSyntax,unsigned char *ProfileName,RPC_IF_ID *IfId None,unsigned long MemberNameSyntax,unsigned char *MemberName,unsigned long Priority,unsigned char *Annotation)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsProfileEltAddA(unsigned long ProfileNameSyntax,unsigned char *ProfileName,RPC_IF_ID *IfId None,unsigned long MemberNameSyntax,unsigned char *MemberName,unsigned long Priority,unsigned char *Annotation)
BOOL None shell32.DragQueryPoint(_In_ HDROP hDrop,_Out_ POINT *lppt)
LRESULT None shell32.SHShellFolderView_Message(_In_ HWND hwndMain,UINT uMsg None,LPARAM lParam None)
DWORD WINAPI None.ExportCallback(_In_ PBYTE pbData,_In_opt_ PVOID pvCallbackContext,_In_ ULONG ulLength)
BOOL WINAPI userenv.CreateUserProfileEx(_In_ PSID pSid,_In_ LPCTSTR lpUserName,_In_opt_ LPCTSTR lpUserHive,_Out_opt_ LPTSTR lpProfileDir,_In_ DWORD dwDirSize,_In_ BOOL bWin9xUpg)
BOOL WINAPI userenv.CreateUserProfileExW(_In_ PSID pSid,_In_ LPCTSTR lpUserName,_In_opt_ LPCTSTR lpUserHive,_Out_opt_ LPTSTR lpProfileDir,_In_ DWORD dwDirSize,_In_ BOOL bWin9xUpg)
BOOL WINAPI userenv.CreateUserProfileExA(_In_ PSID pSid,_In_ LPCTSTR lpUserName,_In_opt_ LPCTSTR lpUserHive,_Out_opt_ LPTSTR lpProfileDir,_In_ DWORD dwDirSize,_In_ BOOL bWin9xUpg)
BOOL WINAPI advapi32.GetAclInformation(_In_ PACL pAcl,_Out_ LPVOID pAclInformation,_In_ DWORD nAclInformationLength,_In_ ACL_INFORMATION_CLASS dwAclInformationClass)
BOOL WINAPI user32.GetClientRect(_In_ HWND hWnd,_Out_ LPRECT lpRect)
HICON None shell32.ExtractAssociatedIconEx(_Reserved_ HINSTANCE hInst,_Inout_ LPTSTR lpIconPath,_Inout_ LPWORD lpiIconIndex,_Inout_ LPWORD lpiIconId)
HICON None shell32.ExtractAssociatedIconExW(_Reserved_ HINSTANCE hInst,_Inout_ LPTSTR lpIconPath,_Inout_ LPWORD lpiIconIndex,_Inout_ LPWORD lpiIconId)
HICON None shell32.ExtractAssociatedIconExA(_Reserved_ HINSTANCE hInst,_Inout_ LPTSTR lpIconPath,_Inout_ LPWORD lpiIconIndex,_Inout_ LPWORD lpiIconId)
BOOL None shell32.SHFindFiles(_In_opt_ PCIDLIST_ABSOLUTE pidlFolder,_In_opt_ PCIDLIST_ABSOLUTE pidlSaveFile)
DWORD WINAPI kernel32.GetLongPathName(_In_ LPCTSTR lpszShortPath,_Out_ LPTSTR lpszLongPath,_In_ DWORD cchBuffer)
DWORD WINAPI kernel32.GetLongPathNameW(_In_ LPCTSTR lpszShortPath,_Out_ LPTSTR lpszLongPath,_In_ DWORD cchBuffer)
DWORD WINAPI kernel32.GetLongPathNameA(_In_ LPCTSTR lpszShortPath,_Out_ LPTSTR lpszLongPath,_In_ DWORD cchBuffer)
HRESULT None None.get_TransactionUOW([out] BSTR *pVal)
BOOL None shell32.PathIsExe(_In_ PCWSTR szfile)
HRESULT None shlwapi.SHCreateStreamOnFile(_In_ LPCTSTR pszFile,_In_ DWORD grfMode,_Out_ IStream **ppstm)
HRESULT None shlwapi.SHCreateStreamOnFileW(_In_ LPCTSTR pszFile,_In_ DWORD grfMode,_Out_ IStream **ppstm)
HRESULT None shlwapi.SHCreateStreamOnFileA(_In_ LPCTSTR pszFile,_In_ DWORD grfMode,_Out_ IStream **ppstm)
LPVOID None shell32.SHAlloc(_In_ SIZE_T cb)
BOOL None wtsapi32.WTSQuerySessionInformation(_In_ HANDLE hServer,_In_ DWORD SessionId,_In_ WTS_INFO_CLASS WTSInfoClass,_Out_ LPTSTR *ppBuffer,_Out_ DWORD *pBytesReturned)
BOOL None wtsapi32.WTSQuerySessionInformationW(_In_ HANDLE hServer,_In_ DWORD SessionId,_In_ WTS_INFO_CLASS WTSInfoClass,_Out_ LPTSTR *ppBuffer,_Out_ DWORD *pBytesReturned)
BOOL None wtsapi32.WTSQuerySessionInformationA(_In_ HANDLE hServer,_In_ DWORD SessionId,_In_ WTS_INFO_CLASS WTSInfoClass,_Out_ LPTSTR *ppBuffer,_Out_ DWORD *pBytesReturned)
HRESULT None ole32.CreatePointerMoniker(_In_opt_ LPUNKNOWN punk,_Out_ LPMONIKER *ppmk)
BOOL WINAPI kernel32.EnterSynchronizationBarrier(_Inout_ LPSYNCHRONIZATION_BARRIER lpBarrier,_In_ DWORD dwFlags)
BOOL None shell32.DAD_DragLeave(void None None)
BOOL None None.RegisterDialogClasses(HANDLE hInst None)
BOOL WINAPI authz.AuthzRegisterSecurityEventSource(_In_ DWORD dwFlags,_In_ PCWSTR szEventSourceName,_Out_ PAUTHZ_SECURITY_EVENT_PROVIDER_HANDLE phEventProvider)
HRESULT None shell32.SHBindToParent(_In_ PCIDLIST_ABSOLUTE pidl,_In_ REFIID riid,_Out_ VOID **ppv,_Out_ PCUITEMID_CHILD *ppidlLast)
BOOL WINAPI advapi32.AddAuditAccessAceEx(_Inout_ PACL pAcl,_In_ DWORD dwAceRevision,_In_ DWORD AceFlags,_In_ DWORD dwAccessMask,_In_ PSID pSid,_In_ BOOL bAuditSuccess,_In_ BOOL bAuditFailure)
void None shell32.SHFreeNameMappings(_In_opt_ HANDLE hNameMappings)
public bool None.IsAutoCroppingModeSupported(ImageScannerAutoCroppingMode value None)
HRESULT None shlwapi.SHGetViewStatePropertyBag(_In_opt_ PCIDLIST_ABSOLUTE pidl,_In_opt_ PCWSTR pszBagName,DWORD dwFlags None,_In_ REFIID riid,_Out_ void **ppv)
BOOL CALLBACK None.EnumLanguageGroupLocalesProc(_In_ LGRPID LanguageGroup,_In_ LCID Locale,_In_ LPTSTR lpLocaleString,_In_ LONG_PTR lParam)
int None shell32.ShellAbout(_In_opt_ HWND hWnd,_In_ LPCTSTR szApp,_In_opt_ LPCTSTR szOtherStuff,_In_opt_ HICON hIcon)
int None shell32.ShellAboutW(_In_opt_ HWND hWnd,_In_ LPCTSTR szApp,_In_opt_ LPCTSTR szOtherStuff,_In_opt_ HICON hIcon)
int None shell32.ShellAboutA(_In_opt_ HWND hWnd,_In_ LPCTSTR szApp,_In_opt_ LPCTSTR szOtherStuff,_In_opt_ HICON hIcon)
HRESULT None ole32.CoRevokeInitializeSpy(_In_ ULARGE_INTEGER uliCookie)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsMgmtEntryDelete(unsigned long EntryNameSyntax,unsigned char *EntryName)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsMgmtEntryDeleteW(unsigned long EntryNameSyntax,unsigned char *EntryName)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsMgmtEntryDeleteA(unsigned long EntryNameSyntax,unsigned char *EntryName)
HRESULT None shell32.SHSetFolderPath(_In_ int csidl,_In_ HANDLE hToken,_Reserved_ DWORD dwFlags,_In_ LPCTSTR pszPath)
HRESULT None shell32.SHSetFolderPathW(_In_ int csidl,_In_ HANDLE hToken,_Reserved_ DWORD dwFlags,_In_ LPCTSTR pszPath)
HRESULT None shell32.SHSetFolderPathA(_In_ int csidl,_In_ HANDLE hToken,_Reserved_ DWORD dwFlags,_In_ LPCTSTR pszPath)
BOOL None shell32.StrRetToStrN(_Out_ LPTSTR pszOut,_In_ UINT cchOut,_Inout_ LPSTRRET pStrRet,_In_ LPCITEMIDLIST pidl)
PUITEMID_CHILD None shell32.ILFindLastID(_In_ PCUIDLIST_RELATIVE pidl)
int None shell32.SHMapPIDLToSystemImageListIndex(_In_ IShellFolder *psf,_In_ PCUITEMID_CHILD pidl,_Out_opt_ int *piIndex)
INT WINAPI lz32.LZRead(_In_ INT hFile,_Out_ LPSTR lpBuffer,_In_ INT cbRead)
HRESULT None ole32.CoWaitForMultipleHandles(_In_ DWORD dwFlags,_In_ DWORD dwTimeout,_In_ ULONG cHandles,_In_ LPHANDLE pHandles,_Out_ LPDWORD lpdwindex)
HRESULT None None.GetDeleteDelay([out] long *pmsecDeleteDelay)
int None kernel32.FindNLSString(_In_ LCID Locale,_In_ DWORD dwFindNLSStringFlags,_In_ LPCWSTR lpStringSource,_In_ int cchSource,_In_ LPCWSTR lpStringValue,_In_ int cchValue,_Out_opt_ LPINT pcchFound)
HRESULT None None.SHLocalStrDup(PCTSTR psz None,_Out_opt_ PTSTR *ppsz)
HRESULT None None.SHLocalStrDupW(PCTSTR psz None,_Out_opt_ PTSTR *ppsz)
HRESULT None None.SHLocalStrDupA(PCTSTR psz None,_Out_opt_ PTSTR *ppsz)
HRESULT None shell32.SHCreateShellFolderViewEx(_In_ CSFV *pcsfv,_Out_ IShellView **ppsv)
HRESULT None shell32.SHEvaluateSystemCommandTemplate(_In_ PCWSTR pszCmdTemplate,_Out_ PWSTR *ppszApplication,_Out_opt_ PWSTR *ppszCommandLine,_Out_opt_ PWSTR *ppszParameters)
BOOL None shell32.SHRegGetBoolValueFromHKCUHKLM(PCWSTR pszKey None,_In_ PCWSTR pszValue,_In_ BOOL fDefault)
BOOL WINAPI user32.ShowWindow(_In_ HWND hWnd,_In_ int nCmdShow)
HRESULT None ole32.CoSetProxyBlanket(_In_ IUnknown *pProxy,_In_ DWORD dwAuthnSvc,_In_ DWORD dwAuthzSvc,_In_opt_ OLECHAR *pServerPrincName,_In_ DWORD dwAuthnLevel,_In_ DWORD dwImpLevel,_In_opt_ RPC_AUTH_IDENTITY_HANDLE pAuthInfo,_In_ DWORD dwCapabilities)
int None kernel32.FindStringOrdinal(_In_ DWORD dwFindStringOrdinalFlags,_In_ LPCWSTR lpStringSource,_In_ int cchSource,_In_ LPCWSTR lpStringValue,_In_ int cchValue,_In_ BOOL bIgnoreCase)
ULONG None twinapi.core.RegisterAppStateChangeNotification(_In_ PAPPSTATE_CHANGE_ROUTINE Routine,_In_opt_ PVOID Context,_Out_ PAPPSTATE_REGISTRATION *Registration)
BOOL None kernel32.SetUserGeoID(_In_ GEOID GeoId)
BOOL None shell32.SignalFileOpen(_In_ PCIDLIST_ABSOLUTE pidl)
HRESULT None ole32.CoUnmarshalInterface(_In_ LPSTREAM pStm,_In_ REFIID riid,_Out_ LPVOID *ppv)
HWND WINAPI user32.RealChildWindowFromPoint(_In_ HWND hwndParent,_In_ POINT ptParentClientCoords)
HRESULT WINOLEAPI combase.CoCreateInstanceFromApp(_In_ REFCLSID rclsid,_In_opt_ IUnknown *punkOuter,_In_ DWORD dwClsCtx,_In_opt_ void *reserved,_In_ DWORD dwCount,_Inout_ MULTI_QI *pResults)
HRESULT None shell32.SHGetRealIDL(_In_ IShellFolder *psf,_In_ PCUITEMID_CHILD pidlSimple,_Out_ PITEMID_CHILD *ppidlReal)
HCURSOR None oleaut32.OleIconToCursor(_In_ HINSTANCE hinstExe,_In_ HICON hIcon)
BOOL None idndl.DownlevelVerifyScripts(_In_ DWORD dwFlags,_In_ LPCWSTR lpLocaleScripts,_In_ int cchLocaleScripts,_In_ LPCWSTR lpTestScripts,_In_ int cchTestScripts)
HRESULT None shlwapi.SHIsChildOrSelf(_In_ HWND hwndParent,_In_ HWND hwnd)
BOOL None user32.WinHelp(HWND hWndMain None,LPCTSTR lpszHelp None,UINT uCommand None,ULONG_PTR dwData None)
BOOL None user32.WinHelpW(HWND hWndMain None,LPCTSTR lpszHelp None,UINT uCommand None,ULONG_PTR dwData None)
BOOL None user32.WinHelpA(HWND hWndMain None,LPCTSTR lpszHelp None,UINT uCommand None,ULONG_PTR dwData None)
ULONG WINAPI ntdll.NtGetCurrentProcessorNumber(void None None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcCancelThreadEx(HANDLE ThreadHandle None,LONG Timeout None)
BOOL None comctl32.SetWindowSubclass(_In_ HWND hWnd,_In_ SUBCLASSPROC pfnSubclass,_In_ UINT_PTR uIdSubclass,_In_ DWORD_PTR dwRefData)
HRESULT __cdecl comsvcs.RecycleSurrogate(_In_ long lReasonCode)
DWORD WINAPI kernel32.QueueUserAPC(_In_ PAPCFUNC pfnAPC,_In_ HANDLE hThread,_In_ ULONG_PTR dwData)
PUIDLIST_RELATIVE None shell32.ILFindChild(_In_ PCIDLIST_ABSOLUTE pidlParent,_In_ PCIDLIST_ABSOLUTE pidlChild)
BOOL WINAPI kernel32.NotifyUILanguageChange(_In_ DWORD dwFlags,_In_opt_ PCWSTR pcwstrNewLanguage,_In_opt_ PCWSTR pcwstrPreviousLanguage,_In_ DWORD dwReserved,_Out_opt_ PDWORD pdwStatusRtrn)
HRESULT WINAPI coremessaging.CreateDispatcherQueueController(_In_ DispatcherQueueOptions options,_Out_ DispatcherQueueController dispatcherQueueController)
BOOL WINAPI kernel32.WriteProfileSection(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpString)
BOOL WINAPI kernel32.WriteProfileSectionW(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpString)
BOOL WINAPI kernel32.WriteProfileSectionA(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpString)
PCUITEMID_CHILD None None.ILCloneChild(_In_ PCUITEMID_CHILD pidl)
HRESULT None ole32.CoSuspendClassObjects(void None None)
VOID WINAPI kernel32.GetStartupInfo(_Out_ LPSTARTUPINFO lpStartupInfo)
VOID WINAPI kernel32.GetStartupInfoW(_Out_ LPSTARTUPINFO lpStartupInfo)
VOID WINAPI kernel32.GetStartupInfoA(_Out_ LPSTARTUPINFO lpStartupInfo)
VOID WINAPI kernel32.WakeByAddressAll(_In_ PVOID Address)
DWORD None shdocvw.SoftwareUpdateMessageBox(_In_opt_ HWND hWnd,_In_ PCWSTR pszDistUnit,DWORD dwFlags None,_Out_opt_ LPSOFTDISTINFO psdi)
DWORD None kernel32.WTSGetActiveConsoleSessionId(void None None)
VOID FORCEINLINE None.TpSetCallbackCleanupGroup(_Inout_ PTP_CALLBACK_ENVIRON CallbackEnviron,_In_ PTP_CLEANUP_GROUP CleanupGroup,_In_opt_ PTP_CLEANUP_GROUP_CANCEL_CALLBACK CleanupGroupCancelCallback)
BOOL WINAPI kernel32.SwitchToThread(void None None)
HRESULT None shell32.GetEntry([in] PCWSTR pszName,DWORD dwMode None,[out] HBITMAP *phImage)
HRESULT None ole32.OleGetAutoConvert(_In_ REFCLSID clsidOld,_Out_ LPCLSID pClsidNew)
BOOL WINAPI ntdll.IsProcessCritical(_In_ HANDLE hProcess,_Out_ PBOOL Critical)
HRESULT None shell32.AssocGetDetailsOfPropKey(_In_ IShellFolder *psf,_In_ PCUITEMID_CHILD pidl,_In_ PROPERTYKEY *pkey,_Out_ VARIANT *pv,_Out_ BOOL *pfFoundPropKey)
BOOL WINAPI authz.AuthzRegisterCapChangeNotification(_Out_ PAUTHZ_CAP_CHANGE_SUBSCRIPTION_HANDLE phCapChangeSubscription,_In_ LPTHREAD_START_ROUTINE pfnCapChangeCallback,_In_opt_ PVOID pCallbackContext)
DWORD WINAPI kernel32.SetIoRateControlInformationJobObject(_In_ HANDLE hJob,_In_ JOBOBJECT_IO_RATE_CONTROL_INFORMATION *IoRateControlInfo)
VOID WINAPI kernel32.CloseThreadpoolWork(_Inout_ PTP_WORK pwk)
HRESULT None shell32.SHGetFolderLocation(_In_ HWND hwndOwner,_In_ int nFolder,_In_ HANDLE hToken,_Reserved_ DWORD dwReserved,_Out_ PIDLIST_ABSOLUTE *ppidl)
BOOL None shell32.SHCreateProcessAsUserW(_Inout_ PSHCREATEPROCESSINFOW pscpi)
BOOL None shell32.SHCreateProcessAsUserW(_Inout_ PSHCREATEPROCESSINFOW pscpi)
HRESULT None shell32.SHGetMalloc(LPMALLOC *ppMalloc None)
BOOL WINAPI advapi32.AddAccessAllowedAce(_Inout_ PACL pAcl,_In_ DWORD dwAceRevision,_In_ DWORD AccessMask,_In_ PSID pSid)
HRESULT WINAPI userenv.GetAppContainerFolderPath(_In_ PCWSTR pszAppContainerSid,_Out_ PWSTR *ppszPath)
DWORD_PTR WINAPI kernel32.SetThreadAffinityMask(_In_ HANDLE hThread,_In_ DWORD_PTR dwThreadAffinityMask)
BOOL WINAPI kernel32.SetEnvironmentVariable(_In_ LPCTSTR lpName,_In_opt_ LPCTSTR lpValue)
BOOL WINAPI kernel32.SetEnvironmentVariableW(_In_ LPCTSTR lpName,_In_opt_ LPCTSTR lpValue)
BOOL WINAPI kernel32.SetEnvironmentVariableA(_In_ LPCTSTR lpName,_In_opt_ LPCTSTR lpValue)
HICON None shell32.ExtractAssociatedIcon(_Reserved_ HINSTANCE hInst,_Inout_ LPTSTR lpIconPath,_Inout_ LPWORD lpiIcon)
HICON None shell32.ExtractAssociatedIconW(_Reserved_ HINSTANCE hInst,_Inout_ LPTSTR lpIconPath,_Inout_ LPWORD lpiIcon)
HICON None shell32.ExtractAssociatedIconA(_Reserved_ HINSTANCE hInst,_Inout_ LPTSTR lpIconPath,_Inout_ LPWORD lpiIcon)
BOOL WINAPI kernel32.DequeueUmsCompletionListItems(_In_ PUMS_COMPLETION_LIST UmsCompletionList,_In_ DWORD WaitTimeOut,_Out_ PUMS_CONTEXT *UmsThreadList)
HRESULT WINAPI dssec.DSCreateSecurityPage(_In_ LPCWSTR pwszObjectPath,_In_opt_ LPCWSTR pwszObjectClass,_In_ DWORD dwFlags,_Out_ HPROPSHEETPAGE *phPage,_In_opt_ PFNREADOBJECTSECURITY pfnReadSD,_In_opt_ PFNWRITEOBJECTSECURITY pfnWriteSD,_In_ LPARAM lpContext)
HRESULT None None.get_VideoStandard([out] AnalogVideoStandard *AVS)
NTSTATUS WINAPI ntdll.ZwQueryInformationProcess(_In_ HANDLE ProcessHandle,_In_ PROCESSINFOCLASS ProcessInformationClass,_Out_ PVOID ProcessInformation,_In_ ULONG ProcessInformationLength,_Out_opt_ PULONG ReturnLength)
BOOL WINAPI kernel.GetDisplayAutoRotationPreferences(_Out_ PAR_STATE pState)
LONG None None.CPlApplet(HWND hwndCPl None,UINT uMsg None,LPARAM lParam1 None,LPARAM lParam2 None)
HRESULT None None.RemoveSubscriberProperty([in] BSTR bstrPropertyName)
BOOL WINAPI user32.ExitWindowsEx(_In_ UINT uFlags,_In_ DWORD dwReason)
void None mydocs.PerUserInit(void None None)
int None kernel32.ResolveLocaleName(_In_opt_ LPCWSTR lpNameToResolve,_Out_opt_ LPWSTR lpLocaleName,_In_ int cchLocaleName)
NTSTATUS WINAPI ntdll.NtQueryInformationThread(_In_ HANDLE ThreadHandle,_In_ THREADINFOCLASS ThreadInformationClass,_Inout_ PVOID ThreadInformation,_In_ ULONG ThreadInformationLength,_Out_opt_ PULONG ReturnLength)
BOOL WINAPI kernel32.GetUmsSystemThreadInformation(_In_ HANDLE ThreadHandle,_Inout_ PUMS_SYSTEM_THREAD_INFORMATION SystemThreadInfo)
HRESULT None msident.Next([in] ULONG celt,[out] IUnknown **rgelt,[out] ULONG *pceltFetched)
BOOL WINAPI crypt32.CryptMsgCountersign(_Inout_ HCRYPTMSG hCryptMsg,_In_ DWORD dwIndex,_In_ DWORD cCountersigners,_In_ PCMSG_SIGNER_ENCODE_INFO rgCountersigners)
VOID WINAPI kernel32.SetEventWhenCallbackReturns(_Inout_ PTP_CALLBACK_INSTANCE pci,_In_ HANDLE evt)
VOID WINAPI kernel32.StartThreadpoolIo(_Inout_ PTP_IO pio)
BOOL WINAPI advapi32.SetFileSecurity(_In_ LPCTSTR lpFileName,_In_ SECURITY_INFORMATION SecurityInformation,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor)
BOOL WINAPI advapi32.SetFileSecurityW(_In_ LPCTSTR lpFileName,_In_ SECURITY_INFORMATION SecurityInformation,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor)
BOOL WINAPI advapi32.SetFileSecurityA(_In_ LPCTSTR lpFileName,_In_ SECURITY_INFORMATION SecurityInformation,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor)
HRESULT None ole32.CoQueryClientBlanket(_Out_opt_ DWORD *pAuthnSvc,_Out_opt_ DWORD *pAuthzSvc,_Out_opt_ OLECHAR **pServerPrincName,_Out_opt_ DWORD *pAuthnLevel,_Out_opt_ DWORD *pImpLevel,_Out_opt_ RPC_AUTHZ_HANDLE *pPrivs,_Inout_opt_ DWORD *pCapabilities)
BOOL WINAPI kernel32.MoveFile(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName)
BOOL WINAPI kernel32.MoveFileW(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName)
BOOL WINAPI kernel32.MoveFileA(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName)
PTP_CLEANUP_GROUP WINAPI kernel32.CreateThreadpoolCleanupGroup(void None None)
void None shell32.PathGetShortPath(_Inout_ PWSTR pszLongPath)
BOOL WINAPI kernel32.SetFileBandwidthReservation(_In_ HANDLE hFile,_In_ DWORD nPeriodMilliseconds,_In_ DWORD nBytesPerPeriod,_In_ BOOL bDiscardable,_Out_ LPDWORD lpTransferSize,_Out_ LPDWORD lpNumOutstandingRequests)
DWORD WINAPI kernelbase.TlsAlloc(void None None)
VOID WINAPI kernel32.SetThreadpoolWait(_Inout_ PTP_WAIT pwa,_In_opt_ HANDLE h,_In_opt_ PFILETIME pftTimeout)
HRESULT None ole32.CoReleaseMarshalData(_In_ LPSTREAM pStm)
HRESULT None ole32.CoGetInterceptor(_In_ REFIID iidIntercepted,_In_ IUnknown *punkOuter,_In_ REFIID iid,_Out_ void **ppv)
int WINAPI user32.GetWindowText(_In_ HWND hWnd,_Out_ LPTSTR lpString,_In_ int nMaxCount)
int WINAPI user32.GetWindowTextW(_In_ HWND hWnd,_Out_ LPTSTR lpString,_In_ int nMaxCount)
int WINAPI user32.GetWindowTextA(_In_ HWND hWnd,_Out_ LPTSTR lpString,_In_ int nMaxCount)
DWORD WINAPI kernel32.SuspendThread(_In_ HANDLE hThread)
HRESULT None ole32.CoRegisterMallocSpy(_In_ LPMALLOCSPY pMallocSpy)
VOID WINAPI kernel32.CancelThreadpoolIo(_Inout_ PTP_IO pio)
int None shell32.IsNetDrive(_In_ int iDrive)
void None None.FreeIDListArrayChild(_In_ PITEMID_CHILD *ppidls,UINT cItems None)
VOID None shell32.DragAcceptFiles(HWND hWnd None,BOOL fAccept None)
BOOL WINAPI userenv.DeleteProfile(_In_ LPCTSTR lpSidString,_In_opt_ LPCTSTR lpProfilePath,_In_opt_ LPCTSTR lpComputerName)
BOOL WINAPI userenv.DeleteProfileW(_In_ LPCTSTR lpSidString,_In_opt_ LPCTSTR lpProfilePath,_In_opt_ LPCTSTR lpComputerName)
BOOL WINAPI userenv.DeleteProfileA(_In_ LPCTSTR lpSidString,_In_opt_ LPCTSTR lpProfilePath,_In_opt_ LPCTSTR lpComputerName)
HWND None None.GetContractDelegateWindow(_In_ HWND hwndSource)
BOOL WINAPI advapi32.CryptEncrypt(_In_ HCRYPTKEY hKey,_In_ HCRYPTHASH hHash,_In_ BOOL Final,_In_ DWORD dwFlags,_Inout_ BYTE *pbData,_Inout_ DWORD *pdwDataLen,_In_ DWORD dwBufLen)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsBindingUnexport(unsigned long EntryNameSyntax,unsigned char *EntryName,RPC_IF_HANDLE IfSpec None,UUID_VECTOR *ObjectUuidVec None)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsBindingUnexportW(unsigned long EntryNameSyntax,unsigned char *EntryName,RPC_IF_HANDLE IfSpec None,UUID_VECTOR *ObjectUuidVec None)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsBindingUnexportA(unsigned long EntryNameSyntax,unsigned char *EntryName,RPC_IF_HANDLE IfSpec None,UUID_VECTOR *ObjectUuidVec None)
BOOLEAN WINAPI kernel32.ClosePrivateNamespace(_In_ HANDLE Handle,_In_ ULONG Flags)
VOID WINAPI kernel32.LeaveCriticalSectionWhenCallbackReturns(_Inout_ PTP_CALLBACK_INSTANCE pci,_Inout_ PCRITICAL_SECTION pcs)
VOID WINAPI kernel32.InitOnceInitialize(_Out_ PINIT_ONCE InitOnce)
DWORD WINAPI kernel32.GetCurrentProcessId(void None None)
BOOL WINAPI userenv.UnloadUserProfile(_In_ HANDLE hToken,_In_ HANDLE hProfile)
BOOL WINAPI kernel32.DeleteTimerQueue(_In_ HANDLE TimerQueue)
BOOL WINAPI kernel32.SetThreadPriority(_In_ HANDLE hThread,_In_ int nPriority)
BOOL None ole32.IsAccelerator(_In_ HACCEL hAccel,_In_ int cAccelEntries,_In_ LPMSG lpMsg,_Out_ WORD *lpwCmd)
void None shell32.SHAddToRecentDocs(UINT uFlags None,_In_opt_ LPCVOID pv)
int None comctl32.CreateMRUListW(_In_ LPMRUINFO lpmi)
int None comctl32.CreateMRUListW(_In_ LPMRUINFO lpmi)
BOOL WINAPI kernel32.TrySubmitThreadpoolCallback(_In_ PTP_SIMPLE_CALLBACK pfns,_Inout_opt_ PVOID pv,_In_opt_ PTP_CALLBACK_ENVIRON pcbe)
LCID None kernel32.ConvertDefaultLocale(_In_ LCID Locale)
HANDLE WINAPI kernel32.CreateSemaphoreEx(_In_opt_ LPSECURITY_ATTRIBUTES lpSemaphoreAttributes,_In_ LONG lInitialCount,_In_ LONG lMaximumCount,_In_opt_ LPCTSTR lpName,_Reserved_ DWORD dwFlags,_In_ DWORD dwDesiredAccess)
HANDLE WINAPI kernel32.CreateSemaphoreExW(_In_opt_ LPSECURITY_ATTRIBUTES lpSemaphoreAttributes,_In_ LONG lInitialCount,_In_ LONG lMaximumCount,_In_opt_ LPCTSTR lpName,_Reserved_ DWORD dwFlags,_In_ DWORD dwDesiredAccess)
HANDLE WINAPI kernel32.CreateSemaphoreExA(_In_opt_ LPSECURITY_ATTRIBUTES lpSemaphoreAttributes,_In_ LONG lInitialCount,_In_ LONG lMaximumCount,_In_opt_ LPCTSTR lpName,_Reserved_ DWORD dwFlags,_In_ DWORD dwDesiredAccess)
BOOL None kernel32.EnumSystemLanguageGroups(_In_ LANGUAGEGROUP_ENUMPROC lpLanguageGroupEnumProc,_In_ DWORD dwFlags,_In_ LONG_PTR lParam)
BOOL None kernel32.EnumSystemLanguageGroupsW(_In_ LANGUAGEGROUP_ENUMPROC lpLanguageGroupEnumProc,_In_ DWORD dwFlags,_In_ LONG_PTR lParam)
BOOL None kernel32.EnumSystemLanguageGroupsA(_In_ LANGUAGEGROUP_ENUMPROC lpLanguageGroupEnumProc,_In_ DWORD dwFlags,_In_ LONG_PTR lParam)
BOOL WINAPI crypt32.CertDeleteCRLFromStore(_In_ PCCRL_CONTEXT pCrlContext)
int None normaliz.NormalizeString(_In_ NORM_FORM NormForm,_In_ LPCWSTR lpSrcString,_In_ int cwSrcLength,_Out_opt_ LPWSTR lpDstString,_In_ int cwDstLength)
BOOL WINAPI advapi32.AddAccessDeniedObjectAce(_Inout_ PACL pAcl,_In_ DWORD dwAceRevision,_In_ DWORD AceFlags,_In_ DWORD AccessMask,_In_opt_ GUID *ObjectTypeGuid,_In_opt_ GUID *InheritedObjectTypeGuid,_In_ PSID pSid)
VOID WINAPI kernel32.ExitProcess(_In_ UINT uExitCode)
STDAPI None shcore.RegisterScaleChangeEvent(_In_ HANDLE hEvent,_Out_ DWORD_PTR *pdwCookie)
WORD WINAPI ntdll.RtlQueryDepthSList(_In_ PSLIST_HEADER ListHead)
BOOL WINAPI kernel32.CreateProcess(_In_opt_ LPCTSTR lpApplicationName,_Inout_opt_ LPTSTR lpCommandLine,_In_opt_ LPSECURITY_ATTRIBUTES lpProcessAttributes,_In_opt_ LPSECURITY_ATTRIBUTES lpThreadAttributes,_In_ BOOL bInheritHandles,_In_ DWORD dwCreationFlags,_In_opt_ LPVOID lpEnvironment,_In_opt_ LPCTSTR lpCurrentDirectory,_In_ LPSTARTUPINFO lpStartupInfo,_Out_ LPPROCESS_INFORMATION lpProcessInformation)
BOOL WINAPI kernel32.CreateProcessW(_In_opt_ LPCTSTR lpApplicationName,_Inout_opt_ LPTSTR lpCommandLine,_In_opt_ LPSECURITY_ATTRIBUTES lpProcessAttributes,_In_opt_ LPSECURITY_ATTRIBUTES lpThreadAttributes,_In_ BOOL bInheritHandles,_In_ DWORD dwCreationFlags,_In_opt_ LPVOID lpEnvironment,_In_opt_ LPCTSTR lpCurrentDirectory,_In_ LPSTARTUPINFO lpStartupInfo,_Out_ LPPROCESS_INFORMATION lpProcessInformation)
BOOL WINAPI kernel32.CreateProcessA(_In_opt_ LPCTSTR lpApplicationName,_Inout_opt_ LPTSTR lpCommandLine,_In_opt_ LPSECURITY_ATTRIBUTES lpProcessAttributes,_In_opt_ LPSECURITY_ATTRIBUTES lpThreadAttributes,_In_ BOOL bInheritHandles,_In_ DWORD dwCreationFlags,_In_opt_ LPVOID lpEnvironment,_In_opt_ LPCTSTR lpCurrentDirectory,_In_ LPSTARTUPINFO lpStartupInfo,_Out_ LPPROCESS_INFORMATION lpProcessInformation)
HRESULT None ole32.CoEnableCallCancellation(_In_opt_ LPVOID pReserved)
BOOL None shell32.DAD_DragEnterEx(HWND hwndTarget None,const POINT ptStart)
PUMS_CONTEXT WINAPI kernel32.GetNextUmsListItem(_Inout_ PUMS_CONTEXT UmsContext)
HRESULT None shell32.SHSetLocalizedName(_In_ PCWSTR pszPath,_In_ PCWSTR pszResModule,int idsRes None)
HINSTANCE None ole32.CoLoadLibrary(_In_ LPOLESTR lpszLibName,_In_ BOOL bAutoFree)
HRESULT None shell32.SHCreateQueryCancelAutoPlayMoniker(_Out_ IMoniker **ppmoniker)
DWORD WINAPI advapi32.LookupSecurityDescriptorParts(_Out_opt_ PTRUSTEE *pOwner,_Out_opt_ PTRUSTEE *pGroup,_Out_opt_ PULONG cCountOfAccessEntries,_Out_opt_ PEXPLICIT_ACCESS *pListOfAccessEntries,_Out_opt_ PULONG cCountOfAuditEntries,_Out_opt_ PEXPLICIT_ACCESS *pListOfAuditEntries,_In_ PSECURITY_DESCRIPTOR pSD)
DWORD WINAPI advapi32.LookupSecurityDescriptorPartsW(_Out_opt_ PTRUSTEE *pOwner,_Out_opt_ PTRUSTEE *pGroup,_Out_opt_ PULONG cCountOfAccessEntries,_Out_opt_ PEXPLICIT_ACCESS *pListOfAccessEntries,_Out_opt_ PULONG cCountOfAuditEntries,_Out_opt_ PEXPLICIT_ACCESS *pListOfAuditEntries,_In_ PSECURITY_DESCRIPTOR pSD)
DWORD WINAPI advapi32.LookupSecurityDescriptorPartsA(_Out_opt_ PTRUSTEE *pOwner,_Out_opt_ PTRUSTEE *pGroup,_Out_opt_ PULONG cCountOfAccessEntries,_Out_opt_ PEXPLICIT_ACCESS *pListOfAccessEntries,_Out_opt_ PULONG cCountOfAuditEntries,_Out_opt_ PEXPLICIT_ACCESS *pListOfAuditEntries,_In_ PSECURITY_DESCRIPTOR pSD)
STDAPI None shcore.RegisterScaleChangeNotifications(_In_ DISPLAY_DEVICE_TYPE displayDevice,_In_ HWND hwndNotify,_In_ UINT uMsgNotify,_Out_ DWORD *pdwCookie)
HWND WINAPI user32.GetForegroundWindow(void None None)
BOOL WINAPI kernel32.WriteFile(_In_ HANDLE hFile,_In_ LPCVOID lpBuffer,_In_ DWORD nNumberOfBytesToWrite,_Out_opt_ LPDWORD lpNumberOfBytesWritten,_Inout_opt_ LPOVERLAPPED lpOverlapped)
int WINAPI user32.GetWindowTextLength(_In_ HWND hWnd)
int WINAPI user32.GetWindowTextLengthW(_In_ HWND hWnd)
int WINAPI user32.GetWindowTextLengthA(_In_ HWND hWnd)
HRESULT None ole32.MonikerRelativePathTo(_In_ LPMONIKER pmkSrc,_In_ LPMONIKER pmkDest,_Out_ LPMONIKER *ppmkRelPath,_In_ BOOL dwReserved)
HRESULT None ole32.CoGetCurrentLogicalThreadId(_Out_ GUID *pguid)
HRESULT WINAPI combase.CoGetSystemSecurityPermissions(_In_ COMSD comSDType,_Out_ PSECURITY_DESCRIPTOR *ppSD)
VOID CALLBACK None.WaitOrTimerCallback(_In_ PVOID lpParameter,_In_ BOOLEAN TimerOrWaitFired)
HRESULT None ole32.CoGetMalloc(_In_ DWORD dwMemContext,_Out_ LPMALLOC *ppMalloc)
BOOL None shell32.GetFileNameFromBrowse(_In_opt_ HWND hwnd,_Inout_ PWSTR pszFilePath,UINT cchFilePath None,_In_opt_ PCWSTR pszWorkingDir,_In_ PCWSTR pszDefExt,_In_opt_ PCWSTR pszFilters,_In_opt_ PCWSTR szTitle)
BOOL WINAPI crypt32.CryptRegisterDefaultOIDFunction(_In_ DWORD dwEncodingType,_In_ LPCSTR pszFuncName,_In_ DWORD dwIndex,_In_ LPCWSTR pwszDll)
BOOL WINAPI authz.AuthzInitializeContextFromAuthzContext(_In_ DWORD flags,_In_ AUTHZ_CLIENT_CONTEXT_HANDLE hAuthzClientContext,_In_opt_ PLARGE_INTEGER pExpirationTime,_In_ LUID Identifier,_In_ PVOID DynamicGroupArgs,_Out_ PAUTHZ_CLIENT_CONTEXT_HANDLE phNewAuthzClientContext)
HRESULT None wintrust.WinVerifyTrustEx(_In_ HWND hwnd,_In_ GUID *pgActionID,_In_ WINTRUST_DATA *pWinTrustData)
HRESULT None url.TranslateURL(PCTSTR pcszURL None,DWORD dwInFlags None,_Out_ PTSTR *ppszTranslatedURL)
HRESULT None url.TranslateURLW(PCTSTR pcszURL None,DWORD dwInFlags None,_Out_ PTSTR *ppszTranslatedURL)
HRESULT None url.TranslateURLA(PCTSTR pcszURL None,DWORD dwInFlags None,_Out_ PTSTR *ppszTranslatedURL)
HRESULT None None.GetDesc([out] DXGI_SWAP_CHAIN_DESC *pDesc)
HRESULT None ole32.CoImpersonateClient(void None None)
BOOL WINAPI kernel32.GetFileSizeEx(_In_ HANDLE hFile,_Out_ PLARGE_INTEGER lpFileSize)
HRESULT None winshfhc.EstimateFileRiskLevel(_In_ LPCWSTR pszFilePath,_In_ LPCWSTR pszExt,_In_ LPCWSTR pszHandler,_Out_ FILE_RISK_LEVEL *pfrlEstimate)
BOOL CALLBACK None.EnumDateFormatsProcEx(_In_ LPTSTR lpDateFormatString,_In_ CALID CalendarID)
int None nlsmap.DownlevelLCIDToLocaleName(_In_ LCID Locale,_Out_ LPWSTR lpName,_In_ int cchName,_In_ DWORD dwFlags)
HRESULT None None.GetPublisherProperty([in] BSTR bstrPropertyName,[out None None,retval] VARIANT *propertyValue)
HRESULT None shell32.SHQueryRecycleBin(_In_opt_ LPCTSTR pszRootPath,_Inout_ LPSHQUERYRBINFO pSHQueryRBInfo)
HRESULT None shell32.SHQueryRecycleBinW(_In_opt_ LPCTSTR pszRootPath,_Inout_ LPSHQUERYRBINFO pSHQueryRBInfo)
HRESULT None shell32.SHQueryRecycleBinA(_In_opt_ LPCTSTR pszRootPath,_Inout_ LPSHQUERYRBINFO pSHQueryRBInfo)
HRESULT None ole32.CoInstall(_In_ IBindCtx *pbc,_In_ DWORD dwFlags,_In_ uCLSSPEC *pClassSpec,_In_ QUERYCONTEXT *pQuery,_In_ LPWSTR pszCodeBase)
void None shell32.SHChangeNotifyRegisterThread(SCNRT_STATUS status None)
HRESULT None ole32.CoGetCallerTID(_Out_ LPDWORD lpdwTID)
BOOL None shell32.SHGetPathFromIDList(_In_ PCIDLIST_ABSOLUTE pidl,_Out_ LPTSTR pszPath)
BOOL None shell32.SHGetPathFromIDListW(_In_ PCIDLIST_ABSOLUTE pidl,_Out_ LPTSTR pszPath)
BOOL None shell32.SHGetPathFromIDListA(_In_ PCIDLIST_ABSOLUTE pidl,_Out_ LPTSTR pszPath)
HICON None shell32.ExtractIcon(_Reserved_ HINSTANCE hInst,_In_ LPCTSTR lpszExeFileName,UINT nIconIndex None)
HICON None shell32.ExtractIconW(_Reserved_ HINSTANCE hInst,_In_ LPCTSTR lpszExeFileName,UINT nIconIndex None)
HICON None shell32.ExtractIconA(_Reserved_ HINSTANCE hInst,_In_ LPCTSTR lpszExeFileName,UINT nIconIndex None)
LPCSTR WINAPI crypt32.CertAlgIdToOID(_In_ DWORD dwAlgId)
HRESULT None None.put_PerUser([in] BOOL fPerUser)
HWND WINAPI user32.GetParent(_In_ HWND hWnd)
HRESULT None shell32.ILLoadFromStream(_In_ IStream *pstm,_Out_ PIDLIST_RELATIVE *pidl)
HRESULT None shell32.SHDoDragDrop(_In_ HWND hwnd,_In_ IDataObject *pdtobj,_In_ IDropSource *pdsrc,_In_ DWORD dwEffect,_Out_ DWORD *pdwEffect)
BOOL None shell32.SHGetPathFromIDListEx(_In_ PCIDLIST_ABSOLUTE pidl,_Out_ PWSTR pszPath,DWORD cchPath None,GPFIDL_FLAGS uOpts None)
BOOL WINAPI userenv.GetAllUsersProfileDirectory(_Out_opt_ LPTSTR lpProfileDir,_Inout_ LPDWORD lpcchSize)
BOOL WINAPI userenv.GetAllUsersProfileDirectoryW(_Out_opt_ LPTSTR lpProfileDir,_Inout_ LPDWORD lpcchSize)
BOOL WINAPI userenv.GetAllUsersProfileDirectoryA(_Out_opt_ LPTSTR lpProfileDir,_Inout_ LPDWORD lpcchSize)
HRESULT None shell32.SHMapIDListToImageListIndexAsync(IShellTaskScheduler *pts None,IShellFolder *psf None,LPCITEMIDLIST pidl None,UINT flags None,PFNASYNCICONTASKBALLBACK pfn None,void *pvData None,void *pvHint None,int *piIndex None,int *piIndexSel None)
BOOL WINAPI kernel32.CallbackMayRunLong(_Inout_ PTP_CALLBACK_INSTANCE pci)
HICON None shell32.DuplicateIcon(_Reserved_ HINSTANCE hInst,_In_ HICON hIcon)
HRESULT None shell32.SHGetInstanceExplorer(_Out_ IUnknown **ppunk)
BOOL None comctl32.GetWindowSubclass(_In_ HWND hWnd,_In_ SUBCLASSPROC pfnSubclass,_In_ UINT_PTR uIdSubclass,_Out_ DWORD_PTR *pdwRefData)
typedef None None.HRESULT(WINAPI *CryptXmlDllEncodeAlgorithm None)
HRESULT WINAPI wofutil.WofFileEnumFiles(_In_ PCWSTR VolumeName,_In_ ULONG Algorithm,_In_ WofEnumFilesProc EnumProc,_In_opt_ PVOID UserData)
BOOL None ole32.IsEqualCLSID(_In_ REFCLSID rclsid1,_In_ REFCLSID rclsid2)
PIDLIST_RELATIVE None shell32.ILAppendID(_In_opt_ PIDLIST_RELATIVE pidl,_In_ LPSHITEMID pmkid,BOOL fAppend None)
HANDLE WINAPI kernel32.CreateEvent(_In_opt_ LPSECURITY_ATTRIBUTES lpEventAttributes,_In_ BOOL bManualReset,_In_ BOOL bInitialState,_In_opt_ LPCTSTR lpName)
HANDLE WINAPI kernel32.CreateEventW(_In_opt_ LPSECURITY_ATTRIBUTES lpEventAttributes,_In_ BOOL bManualReset,_In_ BOOL bInitialState,_In_opt_ LPCTSTR lpName)
HANDLE WINAPI kernel32.CreateEventA(_In_opt_ LPSECURITY_ATTRIBUTES lpEventAttributes,_In_ BOOL bManualReset,_In_ BOOL bInitialState,_In_opt_ LPCTSTR lpName)
HRESULT WINAPI userenv.DeriveAppContainerSidFromAppContainerName(_In_ PCWSTR pszAppContainerName,_Out_ PSID *ppsidAppContainerSid)
BOOL None shell32.PathMakeUniqueName(_Out_ PWSTR pszUniqueName,UINT cchMax None,_In_ PCWSTR pszTemplate,_In_opt_ PCWSTR pszLongPlate,_In_opt_ PCWSTR pszDir)
BOOL WINAPI advapi32.LookupPrivilegeValue(_In_opt_ LPCTSTR lpSystemName,_In_ LPCTSTR lpName,_Out_ PLUID lpLuid)
BOOL WINAPI advapi32.LookupPrivilegeValueW(_In_opt_ LPCTSTR lpSystemName,_In_ LPCTSTR lpName,_Out_ PLUID lpLuid)
BOOL WINAPI advapi32.LookupPrivilegeValueA(_In_opt_ LPCTSTR lpSystemName,_In_ LPCTSTR lpName,_Out_ PLUID lpLuid)
LONG None None.ScreenSaverProc(HWND hWnd None,UINT message None,WPARAM wParam None,LPARAM lParam None)
PUMS_CONTEXT WINAPI kernel32.GetCurrentUmsThread(void None None)
BOOL WINAPI user32.ShowWindowAsync(_In_ HWND hWnd,_In_ int nCmdShow)
void None ole32.CoFreeAllLibraries(void None None)
DWORD None shlwapi.CharUpperBuffWrapW(_In_ LPWSTR pch,_In_ DWORD cchLength)
HRESULT None shell32.SHLimitInputEdit(_In_opt_ HWND hwndEdit,_In_ IShellFolder *psf)
LCID None nlsmap.DownlevelLocaleNameToLCID(_In_ LPWSTR lpName,_In_ DWORD dwFlags)
BOOL None shell32.ILIsEqual(_In_ PCIDLIST_ABSOLUTE pidl1,_In_ PCIDLIST_ABSOLUTE pidl2)
BOOL WINAPI advapi32.SetSecurityDescriptorDacl(_Inout_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_ BOOL bDaclPresent,_In_opt_ PACL pDacl,_In_ BOOL bDaclDefaulted)
TCHAR None shlwapi.SHStripMneumonic(_Inout_ LPTSTR *pszMenu)
TCHAR None shlwapi.SHStripMneumonicW(_Inout_ LPTSTR *pszMenu)
TCHAR None shlwapi.SHStripMneumonicA(_Inout_ LPTSTR *pszMenu)
HRESULT None shell32.SHGetDriveMedia(_In_ PCWSTR pszDrive,_Out_ DWORD *pdwMediaContent)
HRESULT None ole32.CoInitializeSecurity(_In_opt_ PSECURITY_DESCRIPTOR pSecDesc,_In_ LONG cAuthSvc,_In_opt_ SOLE_AUTHENTICATION_SERVICE *asAuthSvc,_In_opt_ void *pReserved1,_In_ DWORD dwAuthnLevel,_In_ DWORD dwImpLevel,_In_opt_ void *pAuthList,_In_ DWORD dwCapabilities,_In_opt_ void *pReserved3)
STDAPI None ntshrui.CanShareFolderW(_In_ LPCWSTR pszPath)
STDAPI None ntshrui.CanShareFolderW(_In_ LPCWSTR pszPath)
DWORD_PTR None shell32.SHGetFileInfo(_In_ LPCTSTR pszPath,DWORD dwFileAttributes None,_Inout_ SHFILEINFO *psfi,UINT cbFileInfo None,UINT uFlags None)
DWORD_PTR None shell32.SHGetFileInfoW(_In_ LPCTSTR pszPath,DWORD dwFileAttributes None,_Inout_ SHFILEINFO *psfi,UINT cbFileInfo None,UINT uFlags None)
DWORD_PTR None shell32.SHGetFileInfoA(_In_ LPCTSTR pszPath,DWORD dwFileAttributes None,_Inout_ SHFILEINFO *psfi,UINT cbFileInfo None,UINT uFlags None)
BOOL WINAPI kernel32.CheckTokenCapability(_In_opt_ HANDLE TokenHandle,_In_ PSID CapabilitySidToCheck,_Out_ PBOOL HasCapability)
UINT None shell32.SHAddFromPropSheetExtArray(_In_ HPSXA hpsxa,_In_ LPFNADDPROPSHEETPAGE lpfnAddPage,LPARAM lParam None)
BOOL WINAPI advapi32.AccessCheck(_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_ HANDLE ClientToken,_In_ DWORD DesiredAccess,_In_ PGENERIC_MAPPING GenericMapping,_Out_opt_ PPRIVILEGE_SET PrivilegeSet,_Inout_ LPDWORD PrivilegeSetLength,_Out_ LPDWORD GrantedAccess,_Out_ LPBOOL AccessStatus)
HPSXA None shell32.SHCreatePropSheetExtArray(_In_ HKEY hkey,_In_opt_ PCWSTR pszSubkey,UINT max_iface None)
BOOL None shell32.ILIsParent(_In_ PCIDLIST_ABSOLUTE pidl1,_In_ PCIDLIST_ABSOLUTE pidl2,_In_ BOOL fImmediate)
BOOL WINAPI kernel32.CancelWaitableTimer(_In_ HANDLE hTimer)
BOOL WINAPI user32.AnimateWindow(_In_ HWND hwnd,_In_ DWORD dwTime,_In_ DWORD dwFlags)
BOOL WINAPI crypt32.CertSerializeCRLStoreElement(_In_ PCCRL_CONTEXT pCrlContext,_In_ DWORD dwFlags,_Out_ BYTE *pbElement,_Inout_ DWORD *pcbElement)
UINT None shell32.SHReplaceFromPropSheetExtArray(_In_ HPSXA hpsxa,UINT uPageID None,_In_ LPFNADDPROPSHEETPAGE lpfnReplaceWith,LPARAM lParam None)
BOOL WINAPI advapi32.CheckTokenMembership(_In_opt_ HANDLE TokenHandle,_In_ PSID SidToCheck,_Out_ PBOOL IsMember)
BOOL WINAPI advapi32.AddAccessDeniedAceEx(_Inout_ PACL pAcl,_In_ DWORD dwAceRevision,_In_ DWORD AceFlags,_In_ DWORD AccessMask,_In_ PSID pSid)
BOOL WINAPI advapi32.EqualSid(_In_ PSID pSid1,_In_ PSID pSid2)
BOOL None kernel32.GetAppContainerNamedObjectPath(_In_opt_ HANDLE Token,_In_opt_ PSID AppContainerSid,_In_ ULONG ObjectPathLength,_Out_opt_ LPWSTR ObjectPath,_Out_ PULONG ReturnLength)
HRESULT None shell32.SHGetDesktopFolder(_Out_ IShellFolder **ppshf)
BOOL WINAPI advapi32.GetSecurityDescriptorDacl(_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_Out_ LPBOOL lpbDaclPresent,_Out_ PACL *pDacl,_Out_ LPBOOL lpbDaclDefaulted)
UINT WINAPI shcore.GetDpiForShellUiComponent(_In_ SHELL_UI_COMPONENT component)
HRESULT None shell32.SHGetAttributesFromDataObject(_In_opt_ IDataObject *pdo,DWORD dwAttributeMask None,_Out_opt_ DWORD *pdwAttributes,_Out_opt_ UINT *pcItems)
int None None.DidAlloc([in] void *pv)
HWND WINAPI user32.GetDesktopWindow(void None None)
int None shell32.PickIconDlg(_In_opt_ HWND hwnd,_Inout_ PWSTR pszIconPath,UINT cchIconPath None,_Inout_opt_ int *piIconIndex)
HRESULT WINAPI userenv.DeleteAppContainerProfile(_In_ PCWSTR pszAppContainerName)
BOOL None kernel32.EnumTimeFormatsEx(_In_ TIMEFMT_ENUMPROCEX lpTimeFmtEnumProcEx,_In_opt_ LPCWSTR lpLocaleName,_In_ DWORD dwFlags,_In_ LPARAM lParam)
void None shell32.SHDestroyPropSheetExtArray(_In_ HPSXA hpsxa)
BOOL WINAPI user32.BringWindowToTop(_In_ HWND hWnd)
BOOL None None.ILIsEmpty(_In_ PCUID_RELATIVE pidl)
BOOL None shell32.SHGetSpecialFolderPath(HWND hwndOwner None,_Out_ LPTSTR lpszPath,_In_ int csidl,_In_ BOOL fCreate)
BOOL None shell32.SHGetSpecialFolderPathW(HWND hwndOwner None,_Out_ LPTSTR lpszPath,_In_ int csidl,_In_ BOOL fCreate)
BOOL None shell32.SHGetSpecialFolderPathA(HWND hwndOwner None,_Out_ LPTSTR lpszPath,_In_ int csidl,_In_ BOOL fCreate)
BOOL WINAPI user32.IsChild(_In_ HWND hWndParent,_In_ HWND hWnd)
void None shell32.SHFlushSFCache(void None None)
BOOL WINAPI userenv.GetProfileType(_Out_ DWORD *pdwFlags)
HRESULT None shell32.SHCreateDataObject(_In_opt_ PCIDLIST_ABSOLUTE pidlFolder,_In_ UINT cidl,_In_opt_ PCUITEMID_CHILD_ARRAY apidl,_In_opt_ IDataObject *pdtInner,_In_ REFIID riid,_Out_ void **ppv)
BOOL CALLBACK None.EnumLanguageGroupsProc(_In_ LGRPID LanguageGroup,_In_ LPTSTR lpLanguageGroupString,_In_ LPTSTR lpLanguageGroupNameString,_In_ DWORD dwFlags,_In_ LONG_PTR lParam)
BOOL None ole32.CoIsHandlerConnected(_In_ LPUNKNOWN pUnk)
LCID None nlsmap.DownlevelGetParentLocaleLCID(_In_ LCID Locale)
DWORD WINAPI advapi32.GetEffectiveRightsFromAcl(_In_ PACL pacl,_In_ PTRUSTEE pTrustee,_Out_ PACCESS_MASK pAccessRights)
DWORD WINAPI advapi32.GetEffectiveRightsFromAclW(_In_ PACL pacl,_In_ PTRUSTEE pTrustee,_Out_ PACCESS_MASK pAccessRights)
DWORD WINAPI advapi32.GetEffectiveRightsFromAclA(_In_ PACL pacl,_In_ PTRUSTEE pTrustee,_Out_ PACCESS_MASK pAccessRights)
HRESULT WINAPI userenv.GetAppContainerRegistryLocation(_In_ REGSAM desiredAccess,_Out_ PHKEY phAppContainerKey)
PUIDLIST_RELATIVE None None.ILNext(_In_ PUIDLIST_RELATIVE pidl)
HRESULT WINOLEAPI combase.CoRegisterChannelHook(_In_ REFGUID ExtensionUuid,_In_ IChannelHook *pChannelHook)
HWND WINAPI None.CreateWindow(_In_opt_ LPCTSTR lpClassName,_In_opt_ LPCTSTR lpWindowName,_In_ DWORD dwStyle,_In_ int x,_In_ int y,_In_ int nWidth,_In_ int nHeight,_In_opt_ HWND hWndParent,_In_opt_ HMENU hMenu,_In_opt_ HINSTANCE hInstance,_In_opt_ LPVOID lpParam)
HWND WINAPI None.CreateWindowW(_In_opt_ LPCTSTR lpClassName,_In_opt_ LPCTSTR lpWindowName,_In_ DWORD dwStyle,_In_ int x,_In_ int y,_In_ int nWidth,_In_ int nHeight,_In_opt_ HWND hWndParent,_In_opt_ HMENU hMenu,_In_opt_ HINSTANCE hInstance,_In_opt_ LPVOID lpParam)
HWND WINAPI None.CreateWindowA(_In_opt_ LPCTSTR lpClassName,_In_opt_ LPCTSTR lpWindowName,_In_ DWORD dwStyle,_In_ int x,_In_ int y,_In_ int nWidth,_In_ int nHeight,_In_opt_ HWND hWndParent,_In_opt_ HMENU hMenu,_In_opt_ HINSTANCE hInstance,_In_opt_ LPVOID lpParam)
BOOL None shell32.SHRunControlPanel(_In_ PCWSTR lpcszCmdLine,_In_opt_ HWND hwndMsgParent)
HRESULT None shell32.SHBindToFolderIDListParent(_In_opt_ IShellFolder *psfRoot,_In_ PCUIDLIST_RELATIVE pidl,_In_ REFIID riid,_Out_ void **ppv,_Out_opt_ PCUITEMID_CHILD *ppidlLast)
int None comctl32.FreeMRUList(_In_ HANDLE hMRU)
BOOL WINAPI advapi32.GetSecurityDescriptorOwner(_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_Out_ PSID *pOwner,_Out_ LPBOOL lpbOwnerDefaulted)
void None shell32.SHGetSetSettings(_Inout_ LPSHELLSTATE lpss,_In_ DWORD dwMask,_In_ BOOL bSet)
RPC_STATUS RPC_ENTRY rpcrt4.RpcServerUseProtseqEx(unsigned char *ProtSeq,unsigned int MaxCalls,void *SecurityDescriptor None,PRPC_POLICY Policy None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcServerUseProtseqExW(unsigned char *ProtSeq,unsigned int MaxCalls,void *SecurityDescriptor None,PRPC_POLICY Policy None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcServerUseProtseqExA(unsigned char *ProtSeq,unsigned int MaxCalls,void *SecurityDescriptor None,PRPC_POLICY Policy None)
DWORD WINAPI crypt32.CertRDNValueToStr(_In_ DWORD dwValueType,_In_ PCERT_RDN_VALUE_BLOB pValue,_Out_ LPTSTR psz,_In_ DWORD csz)
DWORD WINAPI crypt32.CertRDNValueToStrW(_In_ DWORD dwValueType,_In_ PCERT_RDN_VALUE_BLOB pValue,_Out_ LPTSTR psz,_In_ DWORD csz)
DWORD WINAPI crypt32.CertRDNValueToStrA(_In_ DWORD dwValueType,_In_ PCERT_RDN_VALUE_BLOB pValue,_Out_ LPTSTR psz,_In_ DWORD csz)
typedef None None.HRESULT(CALLBACK *LPFNDFMCALLBACK None)
BOOL WINAPI advapi32.LookupPrivilegeDisplayName(_In_opt_ LPCTSTR lpSystemName,_In_ LPCTSTR lpName,_Out_opt_ LPTSTR lpDisplayName,_Inout_ LPDWORD cchDisplayName,_Out_ LPDWORD lpLanguageId)
BOOL WINAPI advapi32.LookupPrivilegeDisplayNameW(_In_opt_ LPCTSTR lpSystemName,_In_ LPCTSTR lpName,_Out_opt_ LPTSTR lpDisplayName,_Inout_ LPDWORD cchDisplayName,_Out_ LPDWORD lpLanguageId)
BOOL WINAPI advapi32.LookupPrivilegeDisplayNameA(_In_opt_ LPCTSTR lpSystemName,_In_ LPCTSTR lpName,_Out_opt_ LPTSTR lpDisplayName,_Inout_ LPDWORD cchDisplayName,_Out_ LPDWORD lpLanguageId)
HRESULT None shlwapi.SHGetInverseCMAP(_Out_ BYTE *pbMap,_In_ ULONG cbMap)
UINT None shell32.ILGetSize(_In_opt_ PCUIDLIST_RELATIVE pidl)
VOID FORCEINLINE None.TpSetCallbackThreadpool(_Inout_ PTP_CALLBACK_ENVIRON CallbackEnviron,_In_ PTP_POOL Pool)
BOOL WINAPI kernel32.ReleaseSemaphore(_In_ HANDLE hSemaphore,_In_ LONG lReleaseCount,_Out_opt_ LPLONG lpPreviousCount)
BOOL None shell32.Win32DeleteFile(_In_ PCWSTR pszFileName)
LONG None shlwapi.SHRegGetValueFromHKCUHKLM(_In_ PCWSTR pwszKey,_In_ PCWSTR pwszValue,_In_ SRRF srrfFlags,_Out_ DWORD *pdwType,_In_ LPCVOID pvData,_Inout_ DWORD *pcbData)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsBindingSelect(RPC_BINDING_VECTOR *BindingVec None,RPC_BINDING_HANDLE *Binding None)
BOOL WINAPI kernel32.TerminateProcess(_In_ HANDLE hProcess,_In_ UINT uExitCode)
HRESULT None shell32.SHCreateItemInKnownFolder(_In_ REFKNOWNFOLDERID kfid,DWORD dwKFFlags None,_In_opt_ PCWSTR pszItem,_In_ REFIID riid,_Out_ void **ppv)
BOOL WINAPI authz.AuthzRegisterSecurityEventSource(_In_ DWORD dwFlags,_In_ PCWSTR szEventSourceName,_Out_ PAUTHZ_SECURITY_EVENT_PROVIDER_HANDLE phEventProvider)
BOOL WINAPI crypt32.CertGetEnhancedKeyUsage(_In_ PCCERT_CONTEXT pCertContext,_In_ DWORD dwFlags,_Out_ PCERT_ENHKEY_USAGE pUsage,_Inout_ DWORD *pcbUsage)
PUIDLIST_RELATIVE None shell32.ILGetNext(_In_opt_ PCUIDLIST_RELATIVE pidl)
BOOL WINAPI None.CertStoreProvWriteCRLCallback(_In_ HCERTSTOREPROV hStoreProv,_In_ PCCRL_CONTEXT pCrlContext,_In_ DWORD dwFlags)
BOOL WINAPI userenv.GetUserProfileDirectory(_In_ HANDLE hToken,_Out_opt_ LPTSTR lpProfileDir,_Inout_ LPDWORD lpcchSize)
BOOL WINAPI userenv.GetUserProfileDirectoryW(_In_ HANDLE hToken,_Out_opt_ LPTSTR lpProfileDir,_Inout_ LPDWORD lpcchSize)
BOOL WINAPI userenv.GetUserProfileDirectoryA(_In_ HANDLE hToken,_Out_opt_ LPTSTR lpProfileDir,_Inout_ LPDWORD lpcchSize)
DWORD None shell32.DoEnvironmentSubst(_Inout_ LPTSTR pszSrc,UINT cchSrc None)
DWORD None shell32.DoEnvironmentSubstW(_Inout_ LPTSTR pszSrc,UINT cchSrc None)
DWORD None shell32.DoEnvironmentSubstA(_Inout_ LPTSTR pszSrc,UINT cchSrc None)
VOID WINAPI kernel32.AcquireSRWLockExclusive(_Inout_ PSRWLOCK SRWLock)
BOOL WINAPI crypt32.CertSerializeCTLStoreElement(_In_ PCCTL_CONTEXT pCtlContext,_In_ DWORD dwFlags,_Out_ BYTE *pbElement,_Inout_ DWORD *pcbElement)
BOOL WINAPI kernel32.IsWow64Process2(_In_ HANDLE hProcess,_Out_ USHORT *pProcessMachine,_Out_opt_ USHORT *pNativeMachine)
BOOL WINAPI userenv.GetProfilesDirectory(_Out_ LPTSTR lpProfilesDir,_Inout_ LPDWORD lpcchSize)
BOOL WINAPI userenv.GetProfilesDirectoryW(_Out_ LPTSTR lpProfilesDir,_Inout_ LPDWORD lpcchSize)
BOOL WINAPI userenv.GetProfilesDirectoryA(_Out_ LPTSTR lpProfilesDir,_Inout_ LPDWORD lpcchSize)
BOOL None shell32.IsUserAnAdmin(void None None)
void None shell32.SHSetInstanceExplorer(_In_opt_ IUnknown *punk)
HRESULT None shell32.SHIsFileAvailableOffline(_In_ PCWSTR pszPath,_Out_opt_ LPDWORD pdwStatus)
typedef None None.BOOL(WINAPI *PFN_CRYPT_OBJECT_LOCATOR_PROVIDER_INITIALIZE None)
void None shlwapi.OutputDebugStringWrapW(_In_ LPCWSTR lpOutputString)
HRESULT None None.QueryS([in] BSTR progID,[in] BSTR queryCriteria,[out None None,retval] IUnknown **ppInterface)
BOOL WINAPI advapi32.EqualPrefixSid(_In_ PSID pSid1,_In_ PSID pSid2)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsProfileEltRemove(unsigned long ProfileNameSyntax,unsigned char *ProfileName,RPC_IF_ID *IfId None,unsigned long MemberNameSyntax,unsigned char *MemberName)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsProfileEltRemoveW(unsigned long ProfileNameSyntax,unsigned char *ProfileName,RPC_IF_ID *IfId None,unsigned long MemberNameSyntax,unsigned char *MemberName)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsProfileEltRemoveA(unsigned long ProfileNameSyntax,unsigned char *ProfileName,RPC_IF_ID *IfId None,unsigned long MemberNameSyntax,unsigned char *MemberName)
BOOL WINAPI crypt32.CertGetCertificateChain(_In_opt_ HCERTCHAINENGINE hChainEngine,_In_ PCCERT_CONTEXT pCertContext,_In_opt_ LPFILETIME pTime,_In_ HCERTSTORE hAdditionalStore,_In_ PCERT_CHAIN_PARA pChainPara,_In_ DWORD dwFlags,_In_ LPVOID pvReserved,_Out_ PCCERT_CHAIN_CONTEXT *ppChainContext)
BOOL None kernel32.GetNumaNodeProcessorMaskEx(_In_ USHORT Node,_Out_ PGROUP_AFFINITY ProcessorMask)
BOOL WINAPI authz.AuthzFreeHandle(_In_ AUTHZ_ACCESS_CHECK_RESULTS_HANDLE AuthzHandle)
BOOL WINAPI advapi32.AccessCheckByTypeResultList(_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_opt_ PSID PrincipalSelfSid,_In_ HANDLE ClientToken,_In_ DWORD DesiredAccess,_Inout_opt_ POBJECT_TYPE_LIST ObjectTypeList,_In_ DWORD ObjectTypeListLength,_Out_ PGENERIC_MAPPING GenericMapping,_Out_opt_ PPRIVILEGE_SET PrivilegeSet,_Inout_ LPDWORD PrivilegeSetLength,_Out_ LPDWORD GrantedAccessList,_Out_ LPDWORD AccessStatusList)
HRESULT None shell32.ILLoadFromStreamEx(_In_ IStream *pstm,_Out_ PIDLIST_RELATIVE *pidl)
HRESULT None shell32.StgMakeUniqueName(_In_ IStorage *pstgParent,_In_ PCWSTR pszFileSpec,_In_ DWORD grfMode,_In_ REFIID riid,_Out_ void **ppv)
BOOL WINAPI user32.IsWindowUnicode(_In_ HWND hWnd)
BOOL None shell32.SHFindFiles(_In_opt_ PCIDLIST_ABSOLUTE pidlFolder,_In_opt_ PCIDLIST_ABSOLUTE pidlSaveFile)
HRESULT None shell32.SHFlushClipboard(void None None)
HRESULT None shell32.SHCreateStdEnumFmtEtc(_In_ UINT cfmt,const FORMATETC afmt[],_Out_ IEnumFORMATETC **ppenumFormatEtc)
BOOL None shlwapi.MLFreeLibrary(_In_ HMODULE hModule)
BOOL WINAPI userenv.GetDefaultUserProfileDirectory(_Out_opt_ LPTSTR lpProfileDir,_Inout_ LPDWORD lpcchSize)
BOOL WINAPI userenv.GetDefaultUserProfileDirectoryW(_Out_opt_ LPTSTR lpProfileDir,_Inout_ LPDWORD lpcchSize)
BOOL WINAPI userenv.GetDefaultUserProfileDirectoryA(_Out_opt_ LPTSTR lpProfileDir,_Inout_ LPDWORD lpcchSize)
BOOL None shell32.DAD_DragEnterEx2(_In_ HWND hwndTarget,const POINT ptStart,_In_opt_ IDataObject *pdtObject)
RPC_STATUS RPC_ENTRY rpcrt4.RpcNetworkIsProtseqValid(unsigned char *Protseq)
RPC_STATUS RPC_ENTRY rpcrt4.RpcNetworkIsProtseqValidW(unsigned char *Protseq)
RPC_STATUS RPC_ENTRY rpcrt4.RpcNetworkIsProtseqValidA(unsigned char *Protseq)
HRESULT None shell32.SHDefExtractIcon(_In_ LPCTSTR pszIconFile,int iIndex None,_In_ UINT uFlags,_Out_opt_ HICON *phiconLarge,_Out_opt_ HICON *phiconSmall,UINT nIconSize None)
HRESULT None shell32.SHDefExtractIconW(_In_ LPCTSTR pszIconFile,int iIndex None,_In_ UINT uFlags,_Out_opt_ HICON *phiconLarge,_Out_opt_ HICON *phiconSmall,UINT nIconSize None)
HRESULT None shell32.SHDefExtractIconA(_In_ LPCTSTR pszIconFile,int iIndex None,_In_ UINT uFlags,_Out_opt_ HICON *phiconLarge,_Out_opt_ HICON *phiconSmall,UINT nIconSize None)
BOOL WINAPI advapi32.SetPrivateObjectSecurityEx(_In_ SECURITY_INFORMATION SecurityInformation,_In_ PSECURITY_DESCRIPTOR ModificationDescriptor,_Inout_ PSECURITY_DESCRIPTOR *ObjectsSecurityDescriptor,_In_ ULONG AutoInheritFlags,_In_ PGENERIC_MAPPING GenericMapping,_In_opt_ HANDLE Token)
HRESULT WINAPI dssec.DSCreateISecurityInfoObjectEx(_In_ LPCWSTR pwszObjectPath,_In_ LPCWSTR pwszObjectClass,_In_ LPCWSTR pwszServer,_In_ LPCWSTR pwszUserName,_In_ LPCWSTR pwszPassword,_In_ DWORD dwFlags,_Out_ LPSECURITYINFO *ppSI,_In_opt_ PFNREADOBJECTSECURITY pfnReadSD,_In_opt_ PFNWRITEOBJECTSECURITY pfnWriteSD,_In_ LPARAM lpContext)
uint32 None vdswmi.ScheduleAutoChk([in] string Volume[])
HRESULT WINAPI mssign32.SignerTimeStampEx2(_Reserved_ DWORD dwFlags,_In_ SIGNER_SUBJECT_INFO *pSubjectInfo,_In_ LPCWSTR pwszHttpTimeStamp,_In_ ALG_ID dwAlgId,_In_ PCRYPT_ATTRIBUTES psRequest,_In_ LPVOID pSipData,_Out_ SIGNER_CONTEXT **ppSignerContext)
HRESULT None ole32.CoLockObjectExternal(_In_ LPUNKNOWN pUnk,_In_ BOOL fLock,_In_ BOOL fLastUnlockReleases)
void WINAPI crypt32.CertRemoveStoreFromCollection(_In_ HCERTSTORE hCollectionStore,_In_ HCERTSTORE hSiblingStore)
HRESULT None shell32.SHCreateItemWithParent(_In_ PCIDLIST_ABSOLUTE pidlParent,_In_ IShellFolder *psfParent,_In_ PCUITEMID_CHILD pidl,_In_ REFIID riid,_Out_ void **ppvItem)
void None None.PutEndTx([in] IUnknown *pObj)
HRESULT None shell32.SHCreateAssociationRegistration(_In_ REFIID riid,_Out_ void **ppv)
int None shlwapi.SHMessageBoxCheck(_In_opt_ HWND hwnd,_In_ LPCTSTR pszText,_In_ LPCTSTR pszCaption,UINT uType None,int iDefault None,_In_ LPCTSTR pszRegVal)
int None shlwapi.SHMessageBoxCheckW(_In_opt_ HWND hwnd,_In_ LPCTSTR pszText,_In_ LPCTSTR pszCaption,UINT uType None,int iDefault None,_In_ LPCTSTR pszRegVal)
int None shlwapi.SHMessageBoxCheckA(_In_opt_ HWND hwnd,_In_ LPCTSTR pszText,_In_ LPCTSTR pszCaption,UINT uType None,int iDefault None,_In_ LPCTSTR pszRegVal)
BOOL WINAPI advapi32.SetPrivateObjectSecurity(_In_ SECURITY_INFORMATION SecurityInformation,_In_ PSECURITY_DESCRIPTOR ModificationDescriptor,_Inout_ PSECURITY_DESCRIPTOR *ObjectsSecurityDescriptor,_In_ PGENERIC_MAPPING GenericMapping,_In_opt_ HANDLE Token)
BOOL WINAPI crypt32.CryptImportPublicKeyInfo(_In_ HCRYPTPROV hCryptProv,_In_ DWORD dwCertEncodingType,_In_ PCERT_PUBLIC_KEY_INFO pInfo,_Out_ HCRYPTKEY *phKey)
void NTAPI twinapi.core.UnregisterAppStateChangeNotification(_Inout_ PAPPSTATE_REGISTRATION Registration)
VOID WINAPI kernel32.WakeConditionVariable(_Inout_ PCONDITION_VARIABLE ConditionVariable)
int WINAPI kernel32.GetGeoInfoEx(_In_ PWSTR location,_In_ GEOTYPE geoType,_Out_opt_ PWSTR geoData,_In_ int geoDataCount)
HRESULT WINAPI winbio.WinBioAsyncOpenSession(_In_ WINBIO_BIOMETRIC_TYPE Factor,_In_ WINBIO_POOL_TYPE PoolType,_In_ WINBIO_SESSION_FLAGS Flags,_In_opt_ WINBIO_UNIT_ID *UnitArray,_In_opt_ SIZE_T UnitCount,_In_opt_ GUID *DatabaseId,_In_ WINBIO_ASYNC_NOTIFICATION_METHOD NotificationMethod,_In_opt_ HWND TargetWindow,_In_opt_ UINT MessageCode,_In_opt_ PWINBIO_ASYNC_COMPLETION_CALLBACK CallbackRoutine,_In_opt_ PVOID UserData,_In_ BOOL AsynchronousOpen,_Out_opt_ WINBIO_SESSION_HANDLE *SessionHandle)
DWORD WINAPI advapi32.FreeInheritedFromArray(_In_ PINHERITED_FROM pInheritArray,_In_ USHORT AceCnt,_In_opt_ PFN_OBJECT_MGR_FUNCTS pfnArray)
HRESULT None ntshrui.ShowShareFolderUI(_In_ HWND hwndParent,_In_ LPCWSTR pszPath)
HRESULT None ntshrui.ShowShareFolderUIW(_In_ HWND hwndParent,_In_ LPCWSTR pszPath)
DWORD None shell32.SHFormatDrive(_In_ HWND hwnd,UINT drive None,UINT fmtID None,UINT options None)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsBindingImportDone(RPC_NS_HANDLE *ImportContext None)
BOOL WINAPI advapi32.MakeSelfRelativeSD(_In_ PSECURITY_DESCRIPTOR pAbsoluteSD,_Out_opt_ PSECURITY_DESCRIPTOR pSelfRelativeSD,_Inout_ LPDWORD lpdwBufferLength)
HRESULT None None.FindTravelEntry([in] IUnknown *punk,[in] LPCITEMIDLIST pidl,[out] ITravelEntry **ppte)
PIDLIST_ABSOLUTE None shell32.SHSimpleIDListFromPath(_In_ PCWSTR pszPath)
HRESULT None None.OnFrameWindowActivateBS([in] BOOL fActive)
PIDLIST_ABSOLUTE None shell32.ILCreateFromPath(_In_ PCTSTR pszPath)
PIDLIST_ABSOLUTE None shell32.ILCreateFromPathW(_In_ PCTSTR pszPath)
PIDLIST_ABSOLUTE None shell32.ILCreateFromPathA(_In_ PCTSTR pszPath)
HRESULT None shell32.SHGetSetFolderCustomSettings(_Inout_ LPSHFOLDERCUSTOMSETTINGS pfcs,_In_ PCTSTR pszPath,DWORD dwReadWrite None)
BOOL None shell32.FileIconInit(_In_ BOOL fRestoreCache)
DWORD WINAPI advapi32.GetAuditedPermissionsFromAcl(_In_ PACL pacl,_In_ PTRUSTEE pTrustee,_Out_ PACCESS_MASK pSuccessfulAuditedRights,_Out_ PACCESS_MASK pFailedAuditRights)
DWORD WINAPI advapi32.GetAuditedPermissionsFromAclW(_In_ PACL pacl,_In_ PTRUSTEE pTrustee,_Out_ PACCESS_MASK pSuccessfulAuditedRights,_Out_ PACCESS_MASK pFailedAuditRights)
DWORD WINAPI advapi32.GetAuditedPermissionsFromAclA(_In_ PACL pacl,_In_ PTRUSTEE pTrustee,_Out_ PACCESS_MASK pSuccessfulAuditedRights,_Out_ PACCESS_MASK pFailedAuditRights)
BOOL WINAPI advapi32.AreAllAccessesGranted(_In_ DWORD GrantedAccess,_In_ DWORD DesiredAccess)
BOOLEAN WINAPI advapi32.AuditSetGlobalSacl(_In_ PCWSTR ObjectTypeName,_In_opt_ PACL Acl)
BOOLEAN WINAPI advapi32.AuditSetGlobalSaclW(_In_ PCWSTR ObjectTypeName,_In_opt_ PACL Acl)
BOOLEAN WINAPI advapi32.AuditSetGlobalSaclA(_In_ PCWSTR ObjectTypeName,_In_opt_ PACL Acl)
BOOL WINAPI kernel32.UnregisterWait(_In_ HANDLE WaitHandle)
BOOL WINAPI user32.SetUserObjectSecurity(_In_ HANDLE hObj,_In_ PSECURITY_INFORMATION pSIRequested,_In_ PSECURITY_DESCRIPTOR pSID)
int None shlwapi.SHUnicodeToUnicode(_In_ PCWSTR pwzSrc,_Out_ PWSTR pwzDst,int cwchBuf None)
BOOL WINAPI advapi32.GetTokenInformation(_In_ HANDLE TokenHandle,_In_ TOKEN_INFORMATION_CLASS TokenInformationClass,_Out_opt_ LPVOID TokenInformation,_In_ DWORD TokenInformationLength,_Out_ PDWORD ReturnLength)
VOID WINAPI advapi32.BuildTrusteeWithSid(_Inout_ PTRUSTEE pTrustee,_In_opt_ PSID pSid)
VOID WINAPI advapi32.BuildTrusteeWithSidW(_Inout_ PTRUSTEE pTrustee,_In_opt_ PSID pSid)
VOID WINAPI advapi32.BuildTrusteeWithSidA(_Inout_ PTRUSTEE pTrustee,_In_opt_ PSID pSid)
BOOL WINAPI advapi32.ImpersonateSelf(_In_ SECURITY_IMPERSONATION_LEVEL ImpersonationLevel)
BOOL WINAPI aclui.EditSecurity(_In_ HWND hwndOwner,_In_ LPSECURITYINFO psi)
BOOL None shell32.SHGetDiskFreeSpaceEx(_In_ LPCTSTR pszDirectoryName,_Out_opt_ ULARGE_INTEGER *pulFreeBytesAvailableToCaller,_Out_opt_ ULARGE_INTEGER *pulTotalNumberOfBytes,_Out_opt_ ULARGE_INTEGER *pulTotalNumberOfFreeBytes)
BOOL None shell32.SHGetDiskFreeSpaceExW(_In_ LPCTSTR pszDirectoryName,_Out_opt_ ULARGE_INTEGER *pulFreeBytesAvailableToCaller,_Out_opt_ ULARGE_INTEGER *pulTotalNumberOfBytes,_Out_opt_ ULARGE_INTEGER *pulTotalNumberOfFreeBytes)
BOOL None shell32.SHGetDiskFreeSpaceExA(_In_ LPCTSTR pszDirectoryName,_Out_opt_ ULARGE_INTEGER *pulFreeBytesAvailableToCaller,_Out_opt_ ULARGE_INTEGER *pulTotalNumberOfBytes,_Out_opt_ ULARGE_INTEGER *pulTotalNumberOfFreeBytes)
LPVOID WINAPI crypt32.CryptMemAlloc(_In_ ULONG cbSize)
BOOL WINAPI advapi32.DuplicateToken(_In_ HANDLE ExistingTokenHandle,_In_ SECURITY_IMPERSONATION_LEVEL ImpersonationLevel,_Out_ PHANDLE DuplicateTokenHandle)
HWND WINAPI user32.FindWindowEx(_In_opt_ HWND hwndParent,_In_opt_ HWND hwndChildAfter,_In_opt_ LPCTSTR lpszClass,_In_opt_ LPCTSTR lpszWindow)
HWND WINAPI user32.FindWindowExW(_In_opt_ HWND hwndParent,_In_opt_ HWND hwndChildAfter,_In_opt_ LPCTSTR lpszClass,_In_opt_ LPCTSTR lpszWindow)
HWND WINAPI user32.FindWindowExA(_In_opt_ HWND hwndParent,_In_opt_ HWND hwndChildAfter,_In_opt_ LPCTSTR lpszClass,_In_opt_ LPCTSTR lpszWindow)
HANDLE WINAPI kernel32.CreateSemaphore(_In_opt_ LPSECURITY_ATTRIBUTES lpSemaphoreAttributes,_In_ LONG lInitialCount,_In_ LONG lMaximumCount,_In_opt_ LPCTSTR lpName)
HANDLE WINAPI kernel32.CreateSemaphoreW(_In_opt_ LPSECURITY_ATTRIBUTES lpSemaphoreAttributes,_In_ LONG lInitialCount,_In_ LONG lMaximumCount,_In_opt_ LPCTSTR lpName)
HANDLE WINAPI kernel32.CreateSemaphoreA(_In_opt_ LPSECURITY_ATTRIBUTES lpSemaphoreAttributes,_In_ LONG lInitialCount,_In_ LONG lMaximumCount,_In_opt_ LPCTSTR lpName)
HRESULT None ole32.CoGetObject(_In_ LPCWSTR pszName,_In_opt_ BIND_OPTS *pBindOptions,_In_ REFIID riid,_Out_ void **ppv)
BOOLEAN WINAPI advapi32.AuditEnumeratePerUserPolicy(_Out_ PPOLICY_AUDIT_SID_ARRAY *ppAuditSidArray)
boolean None cimwin32.GetEffectivePermission([in] uint32 Permissions)
LONG WINAPI advapi32.RegGetKeySecurity(_In_ HKEY hKey,_In_ SECURITY_INFORMATION SecurityInformation,_Out_opt_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_Inout_ LPDWORD lpcbSecurityDescriptor)
HRESULT WINAPI ole32.CoIncrementMTAUsage(_Out_ CO_MTA_USAGE_COOKIE *pCookie)
PUCHAR WINAPI advapi32.GetSidSubAuthorityCount(_In_ PSID pSid)
HRESULT None shell32.SHMultiFileProperties(_In_ IDataObject *pdtobj,DWORD dwFlags None)
BOOL WINAPI advapi32.CreateRestrictedToken(_In_ HANDLE ExistingTokenHandle,_In_ DWORD Flags,_In_ DWORD DisableSidCount,_In_opt_ PSID_AND_ATTRIBUTES SidsToDisable,_In_ DWORD DeletePrivilegeCount,_In_opt_ PLUID_AND_ATTRIBUTES PrivilegesToDelete,_In_ DWORD RestrictedSidCount,_In_opt_ PSID_AND_ATTRIBUTES SidsToRestrict,_Out_ PHANDLE NewTokenHandle)
BOOL WINAPI advapi32.AddAuditAccessAce(_Inout_ PACL pAcl,_In_ DWORD dwAceRevision,_In_ DWORD dwAccessMask,_In_ PSID pSid,_In_ BOOL bAuditSuccess,_In_ BOOL bAuditFailure)
BOOL WINAPI advapi32.RevertToSelf(void None None)
HRESULT WINAPI mssign32.SignError(void None None)
int None shell32.SHGetIconOverlayIndex(_In_opt_ LPCTSTR pszIconPath,int iIconIndex None)
int None shell32.SHGetIconOverlayIndexW(_In_opt_ LPCTSTR pszIconPath,int iIconIndex None)
int None shell32.SHGetIconOverlayIndexA(_In_opt_ LPCTSTR pszIconPath,int iIconIndex None)
HRESULT None urlmon.CreateAsyncBindCtx(_In_ DWORD reserved,_In_ IBindStatusCallback *pBSCb,_In_ IEnumFORMATETC *pEFetc,_Out_ IBindCtx **ppBC)
BOOL WINAPI crypt32.PFXIsPFXBlob(_In_ CRYPT_DATA_BLOB *pPFX)
void None shdocvw.ShellDDEInit(_In_ BOOL init)
BOOL WINAPI advapi32.AccessCheckByTypeAndAuditAlarm(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ LPCTSTR ObjectTypeName,_In_opt_ LPCTSTR ObjectName,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_opt_ PSID PrincipalSelfSid,_In_ DWORD DesiredAccess,_In_ AUDIT_EVENT_TYPE AuditType,_In_ DWORD Flags,_Inout_opt_ POBJECT_TYPE_LIST ObjectTypeList,_In_ DWORD ObjectTypeListLength,_In_ PGENERIC_MAPPING GenericMapping,_In_ BOOL ObjectCreation,_Out_ LPDWORD GrantedAccess,_Out_ LPBOOL AccessStatus,_Out_ LPBOOL pfGenerateOnClose)
BOOL WINAPI advapi32.AccessCheckByTypeAndAuditAlarmW(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ LPCTSTR ObjectTypeName,_In_opt_ LPCTSTR ObjectName,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_opt_ PSID PrincipalSelfSid,_In_ DWORD DesiredAccess,_In_ AUDIT_EVENT_TYPE AuditType,_In_ DWORD Flags,_Inout_opt_ POBJECT_TYPE_LIST ObjectTypeList,_In_ DWORD ObjectTypeListLength,_In_ PGENERIC_MAPPING GenericMapping,_In_ BOOL ObjectCreation,_Out_ LPDWORD GrantedAccess,_Out_ LPBOOL AccessStatus,_Out_ LPBOOL pfGenerateOnClose)
BOOL WINAPI advapi32.AccessCheckByTypeAndAuditAlarmA(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ LPCTSTR ObjectTypeName,_In_opt_ LPCTSTR ObjectName,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_opt_ PSID PrincipalSelfSid,_In_ DWORD DesiredAccess,_In_ AUDIT_EVENT_TYPE AuditType,_In_ DWORD Flags,_Inout_opt_ POBJECT_TYPE_LIST ObjectTypeList,_In_ DWORD ObjectTypeListLength,_In_ PGENERIC_MAPPING GenericMapping,_In_ BOOL ObjectCreation,_Out_ LPDWORD GrantedAccess,_Out_ LPBOOL AccessStatus,_Out_ LPBOOL pfGenerateOnClose)
BOOL None None.CertChainFindByIssuerCallback(_In_ PCCERT_CONTEXT pCert,_In_ void *pvFindArg)
BOOL None url.InetIsOffline(DWORD dwFlags None)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsGroupMbrRemove(unsigned long GroupNameSyntax,unsigned char *GroupName,unsigned long MemberNameSyntax,unsigned char *MemberName)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsGroupMbrRemoveW(unsigned long GroupNameSyntax,unsigned char *GroupName,unsigned long MemberNameSyntax,unsigned char *MemberName)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsGroupMbrRemoveA(unsigned long GroupNameSyntax,unsigned char *GroupName,unsigned long MemberNameSyntax,unsigned char *MemberName)
BOOL None shell32.SHGetDiskFreeSpace(LPCTSTR pszVolume None,ULARGE_INTEGER *pqwFreeCaller None,ULARGE_INTEGER *pqwTot None,ULARGE_INTEGER *pqwFree None)
BOOL WINAPI advapi32.LookupPrivilegeName(_In_opt_ LPCTSTR lpSystemName,_In_ PLUID lpLuid,_Out_opt_ LPTSTR lpName,_Inout_ LPDWORD cchName)
BOOL WINAPI advapi32.LookupPrivilegeNameW(_In_opt_ LPCTSTR lpSystemName,_In_ PLUID lpLuid,_Out_opt_ LPTSTR lpName,_Inout_ LPDWORD cchName)
BOOL WINAPI advapi32.LookupPrivilegeNameA(_In_opt_ LPCTSTR lpSystemName,_In_ PLUID lpLuid,_Out_opt_ LPTSTR lpName,_Inout_ LPDWORD cchName)
BOOL WINAPI advapi32.ImpersonateAnonymousToken(_In_ HANDLE ThreadHandle)
BOOL WINAPI kernel32.InitializeCriticalSectionAndSpinCount(_Out_ LPCRITICAL_SECTION lpCriticalSection,_In_ DWORD dwSpinCount)
int None shell32.SHCreateDirectory(_In_opt_ HWND hwnd,_In_ PCWSTR pszPath)
HRESULT None shell32.SHGetItemFromObject(_In_ IUnknown *punk,_In_ REFIID riid,_Out_ void **ppv)
BOOL None comctl32.RemoveWindowSubclass(_In_ HWND hWnd,_In_ SUBCLASSPROC pfnSubclass,_In_ UINT_PTR uIdSubclass)
BOOL CALLBACK None.AuthzFreeCentralAccessPolicyCallback(_In_ PVOID pCentralAccessPolicy)
HRESULT None shell32.SHBindToFolderIDListParentEx(_In_opt_ IShellFolder *psfRoot,_In_ PCUIDLIST_RELATIVE pidl,_In_opt_ IBindCtx *ppbc,_In_ REFIID riid,_Out_ void **ppv,_Out_opt_ PCUITEMID_CHILD *ppidlLast)
PUIDLIST_RELATIVE None None.ILSkip(_In_ PUIDLIST_RELATIVE pidl,UINT cb None)
HRESULT None ole32.MkParseDisplayName(_In_ LPBC pbc,_In_ LPCOLESTR szUserName,_Out_ ULONG *pchEaten,_Out_ LPMONIKER *ppmk)
HRESULT None shell32.SHEnumerateUnreadMailAccounts(_In_opt_ HKEY hKeyUser,DWORD dwIndex None,_Out_ LPTSTR pszMailAddress,int cchMailAddress None)
HRESULT None shell32.SHEnumerateUnreadMailAccountsW(_In_opt_ HKEY hKeyUser,DWORD dwIndex None,_Out_ LPTSTR pszMailAddress,int cchMailAddress None)
HRESULT None shell32.SHEnumerateUnreadMailAccountsA(_In_opt_ HKEY hKeyUser,DWORD dwIndex None,_Out_ LPTSTR pszMailAddress,int cchMailAddress None)
BOOL WINAPI kernel32.AddScopedPolicyIDAce(_Inout_ PACL pAcl,_In_ DWORD dwAceRevision,_In_ DWORD AceFlags,_In_ DWORD AccessMask,_In_ PSID pSid)
BOOL WINAPI userenv.DestroyEnvironmentBlock(_In_ LPVOID lpEnvironment)
void None shell32.ILFree(_In_ PIDLIST_RELATIVE pidl)
BOOL WINAPI authz.AuthzInstallSecurityEventSource(_In_ DWORD dwFlags,_In_ PAUTHZ_SOURCE_SCHEMA_REGISTRATION pRegistration)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsProfileEltInqBegin(unsigned long ProfileNameSyntax,unsigned char *ProfileName,unsigned long InquiryType,RPC_IF_ID *IfId None,unsigned long VersOption,unsigned long MemberNameSyntax,unsigned char *MemberName,RPC_NS_HANDLE *InquiryContext None)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsProfileEltInqBeginW(unsigned long ProfileNameSyntax,unsigned char *ProfileName,unsigned long InquiryType,RPC_IF_ID *IfId None,unsigned long VersOption,unsigned long MemberNameSyntax,unsigned char *MemberName,RPC_NS_HANDLE *InquiryContext None)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsProfileEltInqBeginA(unsigned long ProfileNameSyntax,unsigned char *ProfileName,unsigned long InquiryType,RPC_IF_ID *IfId None,unsigned long VersOption,unsigned long MemberNameSyntax,unsigned char *MemberName,RPC_NS_HANDLE *InquiryContext None)
DWORD WINAPI kernel32.SignalObjectAndWait(_In_ HANDLE hObjectToSignal,_In_ HANDLE hObjectToWaitOn,_In_ DWORD dwMilliseconds,_In_ BOOL bAlertable)
BOOL None shell32.DAD_ShowDragImage(BOOL fShow None)
PCUIDLIST_RELATIVE None None.ILSkip(_In_ PCUIDLIST_RELATIVE pidl,UINT cb None)
BOOL WINAPI advapi32.SetFileSecurity(_In_ LPCTSTR lpFileName,_In_ SECURITY_INFORMATION SecurityInformation,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor)
BOOL WINAPI advapi32.SetFileSecurityW(_In_ LPCTSTR lpFileName,_In_ SECURITY_INFORMATION SecurityInformation,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor)
BOOL WINAPI advapi32.SetFileSecurityA(_In_ LPCTSTR lpFileName,_In_ SECURITY_INFORMATION SecurityInformation,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor)
BOOL None None.SHQueueUserWorkItem(LPTHREAD_START_ROUTINE pfnCallback None,LPVOID pContext None,LONG lPriority None,DWORD_PTR dwTag None,DWORD_PTR * pdwId,LPCSTR pszModule None,DWORD dwFlags None)
DWORD WINAPI advapi32.TreeResetNamedSecurityInfo(_In_ LPTSTR pObjectName,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_In_opt_ PSID pOwner,_In_opt_ PSID pGroup,_In_opt_ PACL pDacl,_In_opt_ PACL pSacl,_In_ BOOL KeepExplicit,_In_opt_ FN_PROGRESS fnProgress,_In_ PROG_INVOKE_SETTING ProgressInvokeSetting,_In_opt_ PVOID Args)
DWORD WINAPI advapi32.TreeResetNamedSecurityInfoW(_In_ LPTSTR pObjectName,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_In_opt_ PSID pOwner,_In_opt_ PSID pGroup,_In_opt_ PACL pDacl,_In_opt_ PACL pSacl,_In_ BOOL KeepExplicit,_In_opt_ FN_PROGRESS fnProgress,_In_ PROG_INVOKE_SETTING ProgressInvokeSetting,_In_opt_ PVOID Args)
DWORD WINAPI advapi32.TreeResetNamedSecurityInfoA(_In_ LPTSTR pObjectName,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_In_opt_ PSID pOwner,_In_opt_ PSID pGroup,_In_opt_ PACL pDacl,_In_opt_ PACL pSacl,_In_ BOOL KeepExplicit,_In_opt_ FN_PROGRESS fnProgress,_In_ PROG_INVOKE_SETTING ProgressInvokeSetting,_In_opt_ PVOID Args)
HCRYPTOIDFUNCSET WINAPI crypt32.CryptInitOIDFunctionSet(_In_ LPCSTR pszFuncName,_In_ DWORD dwFlags)
BOOL WINAPI crypt32.CertAddStoreToCollection(_In_ HCERTSTORE hCollectionStore,_In_opt_ HCERTSTORE hSiblingStore,_In_ DWORD dwUpdateFlag,_In_ DWORD dwPriority)
int None shell32.SHFileOperation(_Inout_ LPSHFILEOPSTRUCT lpFileOp)
int None shell32.SHFileOperationW(_Inout_ LPSHFILEOPSTRUCT lpFileOp)
int None shell32.SHFileOperationA(_Inout_ LPSHFILEOPSTRUCT lpFileOp)
HRESULT WINAPI mssign32.SignerSign(_In_ SIGNER_SUBJECT_INFO *pSubjectInfo,_In_ SIGNER_CERT *pSignerCert,_In_ SIGNER_SIGNATURE_INFO *pSignatureInfo,_In_opt_ SIGNER_PROVIDER_INFO *pProviderInfo,_In_opt_ LPCWSTR pwszHttpTimeStamp,_In_opt_ PCRYPT_ATTRIBUTES psRequest,_In_opt_ LPVOID pSipData)
HRESULT None shell32.SHGetNameFromPropertyKey(_In_ REFPROPERTYKEY propkey,_Out_ PWSTR *ppszCanonicalName)
BOOL WINAPI user32.IsWindow(_In_opt_ HWND hWnd)
PIDLIST_ABSOLUTE None shell32.ILCombine(_In_ PCIDLIST_ABSOLUTE pidl1,_In_ PCUIDLIST_RELATIVE pidl2)
BOOL WINAPI crypt32.CertDeleteCertificateFromStore(_In_ PCCERT_CONTEXT pCertContext)
BOOL WINAPI user32.EndTask(_In_ HWND hWnd,_In_ BOOL fShutDown,_In_ BOOL fForce)
BOOL WINAPI advapi32.GetFileSecurity(_In_ LPCTSTR lpFileName,_In_ SECURITY_INFORMATION RequestedInformation,_Out_opt_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_ DWORD nLength,_Out_ LPDWORD lpnLengthNeeded)
BOOL WINAPI advapi32.GetFileSecurityW(_In_ LPCTSTR lpFileName,_In_ SECURITY_INFORMATION RequestedInformation,_Out_opt_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_ DWORD nLength,_Out_ LPDWORD lpnLengthNeeded)
BOOL WINAPI advapi32.GetFileSecurityA(_In_ LPCTSTR lpFileName,_In_ SECURITY_INFORMATION RequestedInformation,_Out_opt_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_ DWORD nLength,_Out_ LPDWORD lpnLengthNeeded)
HRESULT None None.GetPidl([out] LPITEMIDLIST *ppidl)
HRESULT None None.v_MayTranslateAccelerator([in] MSG *pmsg)
HRESULT None shell32.SHSetDefaultProperties(_In_opt_ HWND hwnd,_In_ IShellItem *psi,DWORD dwFileOpFlags None,_In_opt_ IFileOperationProgressSink *pfops)
BOOL WINAPI authz.AuthzEnumerateSecurityEventSources(_In_ DWORD dwFlags,_Out_ PAUTHZ_SOURCE_SCHEMA_REGISTRATION Buffer,_Out_ PDWORD pdwCount,_Inout_ PDWORD pdwLength)
typedef None None.BOOL(WINAPI *PFN_CMSG_IMPORT_KEY_AGREE None)
BOOL None shell32.Shell_GetImageLists(_In_ HIMAGELIST *phiml,_In_ HIMAGELIST *phimlSmall)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsBindingImportBegin(unsigned long EntryNameSyntax,unsigned char *EntryName,RPC_IF_HANDLE IfSpec None,UUID *ObjUuid None,RPC_NS_HANDLE *ImportContext None)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsBindingImportBeginW(unsigned long EntryNameSyntax,unsigned char *EntryName,RPC_IF_HANDLE IfSpec None,UUID *ObjUuid None,RPC_NS_HANDLE *ImportContext None)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsBindingImportBeginA(unsigned long EntryNameSyntax,unsigned char *EntryName,RPC_IF_HANDLE IfSpec None,UUID *ObjUuid None,RPC_NS_HANDLE *ImportContext None)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsBindingLookupBegin(unsigned long EntryNameSyntax,unsigned char *EntryName,RPC_IF_HANDLE IfSpec None,UUID *ObjUuid None,unsigned long BindingMaxCount,RPC_NS_HANDLE *LookupContext None)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsBindingLookupBeginW(unsigned long EntryNameSyntax,unsigned char *EntryName,RPC_IF_HANDLE IfSpec None,UUID *ObjUuid None,unsigned long BindingMaxCount,RPC_NS_HANDLE *LookupContext None)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsBindingLookupBeginA(unsigned long EntryNameSyntax,unsigned char *EntryName,RPC_IF_HANDLE IfSpec None,UUID *ObjUuid None,unsigned long BindingMaxCount,RPC_NS_HANDLE *LookupContext None)
BOOL WINAPI advapi32.CopySid(_In_ DWORD nDestinationSidLength,_Out_ PSID pDestinationSid,_In_ PSID pSourceSid)
BOOL None shell32.Shell_NotifyIcon(_In_ DWORD dwMessage,_In_ PNOTIFYICONDATA lpdata)
BOOL None shell32.Shell_NotifyIconW(_In_ DWORD dwMessage,_In_ PNOTIFYICONDATA lpdata)
BOOL None shell32.Shell_NotifyIconA(_In_ DWORD dwMessage,_In_ PNOTIFYICONDATA lpdata)
BOOL WINAPI advapi32.LookupAccountSid(_In_ PSID lpSid,_Out_opt_ LPTSTR lpName,_Inout_ LPDWORD cchName,_Out_opt_ LPTSTR lpReferencedDomainName,_Inout_ LPDWORD cchReferencedDomainName,_Out_ PSID_NAME_USE peUse)
BOOL WINAPI advapi32.LookupAccountSidLocalW(_In_ PSID lpSid,_Out_opt_ LPTSTR lpName,_Inout_ LPDWORD cchName,_Out_opt_ LPTSTR lpReferencedDomainName,_Inout_ LPDWORD cchReferencedDomainName,_Out_ PSID_NAME_USE peUse)
BOOL WINAPI advapi32.LookupAccountSidLocalA(_In_ PSID lpSid,_Out_opt_ LPTSTR lpName,_Inout_ LPDWORD cchName,_Out_opt_ LPTSTR lpReferencedDomainName,_Inout_ LPDWORD cchReferencedDomainName,_Out_ PSID_NAME_USE peUse)
HRESULT None shell32.SHLoadNonloadedIconOverlayIdentifiers(void None None)
HRESULT None ole32.CoDisableCallCancellation(_In_opt_ LPVOID pReserved)
BOOL None kernel32.GetCPInfoEx(_In_ UINT CodePage,_In_ DWORD dwFlags,_Out_ LPCPINFOEX lpCPInfoEx)
BOOL None kernel32.GetCPInfoExW(_In_ UINT CodePage,_In_ DWORD dwFlags,_Out_ LPCPINFOEX lpCPInfoEx)
BOOL None kernel32.GetCPInfoExA(_In_ UINT CodePage,_In_ DWORD dwFlags,_Out_ LPCPINFOEX lpCPInfoEx)
BOOL WINAPI authz.AuthzModifyClaims(_In_ AUTHZ_CLIENT_CONTEXT_HANDLE hAuthzClientContext,_In_ AUTHZ_CONTEXT_INFORMATION_CLASS ClaimClass,_In_ PAUTHZ_SECURITY_ATTRIBUTE_OPERATION pClaimOperations,_In_opt_ PAUTHZ_SECURITY_ATTRIBUTES_INFORMATION pClaims)
VOID WINAPI kernel32.WakeByAddressSingle(_In_ PVOID Address)
BOOL WINAPI wintrust.OpenPersonalTrustDBDialogEx(_In_opt_ HWND hwndParent,_In_ DWORD dwFlags,_Inout_opt_ PVOID *pvReserved)
BOOL WINAPI advapi32.InitializeSid(_Out_ PSID Sid,_In_ PSID_IDENTIFIER_AUTHORITY pIdentifierAuthority,_In_ BYTE nSubAuthorityCount)
HANDLE WINAPI kernel32.CreateMutex(_In_opt_ LPSECURITY_ATTRIBUTES lpMutexAttributes,_In_ BOOL bInitialOwner,_In_opt_ LPCTSTR lpName)
HANDLE WINAPI kernel32.CreateMutexW(_In_opt_ LPSECURITY_ATTRIBUTES lpMutexAttributes,_In_ BOOL bInitialOwner,_In_opt_ LPCTSTR lpName)
HANDLE WINAPI kernel32.CreateMutexA(_In_opt_ LPSECURITY_ATTRIBUTES lpMutexAttributes,_In_ BOOL bInitialOwner,_In_opt_ LPCTSTR lpName)
HRESULT None ole32.BindMoniker(_In_ LPMONIKER pmk,_In_ DWORD grfOpt,_In_ REFIID iidResult,_Out_ LPVOID *ppvResult)
BOOL None shell32.InitNetworkAddressControl(void None None)
HRESULT None ole32.CoFileTimeNow(_Out_ FILETIME *lpFileTime)
BOOL None shell32.SHChangeNotifyDeregister(ULONG ulID None)
BOOL None user32.SetWindowContextHelpId(HWND hwnd None,DWORD dwContextHelpId None)
BOOL WINAPI kernel32.AddResourceAttributeAce(_Inout_ PACL pAcl,_In_ DWORD dwAceRevision,_In_ DWORD AceFlags,_In_ DWORD AccessMask,_In_ PSID pSid,_In_ PCLAIM_SECURITY_ATTRIBUTES_INFORMATION pAttributeInfo,_Out_ PDWORD pReturnLength)
HRESULT None None._LoadToolbars([in] IStream *pstm)
RPC_STATUS RPC_ENTRY rpcrt4.MesInqProcEncodingId(handle_t Handle None,PRPC_SYNTAX_IDENTIFIER pInterfaceId None,unsigned long *pProcNum)
BOOL WINAPI None.CertStoreProvGetCertProperty(_In_ HCERTSTOREPROV hStoreProv,_In_ PCCERT_CONTEXT pCertContext,_In_ DWORD dwPropId,_In_ DWORD dwFlags,_Out_ void *pvData,_Inout_ DWORD *pcbData)
RPC_STATUS RPC_ENTRY rpcrt4.RpcMgmtInqComTimeout(RPC_BINDING_HANDLE Binding None,unsigned int *Timeout)
BOOL WINAPI advapi32.IsValidAcl(_In_ PACL pAcl)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsEntryObjectInqDone(RPC_NS_HANDLE *InquiryContext None)
RPC_STATUS None rpcrt4.RpcSsContextLockExclusive(_In_ RPC_BINDING_HANDLE ServerBindingHandle,_In_ PVOID UserContext)
BOOL WINAPI crypt32.CertDeleteCTLFromStore(_In_ PCCTL_CONTEXT pCtlContext)
HRESULT None shell32.SHEmptyRecycleBin(_In_opt_ HWND hwnd,_In_opt_ LPCTSTR pszRootPath,DWORD dwFlags None)
HRESULT None shell32.SHEmptyRecycleBinW(_In_opt_ HWND hwnd,_In_opt_ LPCTSTR pszRootPath,DWORD dwFlags None)
HRESULT None shell32.SHEmptyRecycleBinA(_In_opt_ HWND hwnd,_In_opt_ LPCTSTR pszRootPath,DWORD dwFlags None)
BOOL WINAPI kernel32.FindClose(_Inout_ HANDLE hFindFile)
HANDLE WINAPI kernel32.CreatePrivateNamespace(_In_opt_ LPSECURITY_ATTRIBUTES lpPrivateNamespaceAttributes,_In_ LPVOID lpBoundaryDescriptor,_In_ LPCTSTR lpAliasPrefix)
HANDLE WINAPI kernel32.CreatePrivateNamespaceW(_In_opt_ LPSECURITY_ATTRIBUTES lpPrivateNamespaceAttributes,_In_ LPVOID lpBoundaryDescriptor,_In_ LPCTSTR lpAliasPrefix)
HANDLE WINAPI kernel32.CreatePrivateNamespaceA(_In_opt_ LPSECURITY_ATTRIBUTES lpPrivateNamespaceAttributes,_In_ LPVOID lpBoundaryDescriptor,_In_ LPCTSTR lpAliasPrefix)
HRESULT None shell32.SHAssocEnumHandlersForProtocolByApplication(_In_ PCWSTR protocol,_In_ REFIID riid,_Out_ void **enumHandlers)
typedef None None.BOOL(WINAPI *pfnIsFileSupportedName None)
BOOL WINAPI authz.AuthzAccessCheck(_In_ DWORD flags,_In_ AUTHZ_CLIENT_CONTEXT_HANDLE hAuthzClientContext,_In_ PAUTHZ_ACCESS_REQUEST pRequest,_In_opt_ AUTHZ_AUDIT_EVENT_HANDLE AuditEvent,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_opt_ PSECURITY_DESCRIPTOR *OptionalSecurityDescriptorArray,_In_opt_ DWORD OptionalSecurityDescriptorCount,_Inout_ PAUTHZ_ACCESS_REPLY pReply,_Out_opt_ PAUTHZ_ACCESS_CHECK_RESULTS_HANDLE phAccessCheckResults)
DWORD WINAPI advapi32.GetLengthSid(_In_ PSID pSid)
HANDLE WINAPI kernel32.OpenEvent(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpName)
HANDLE WINAPI kernel32.OpenEventW(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpName)
HANDLE WINAPI kernel32.OpenEventA(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpName)
BOOL WINAPI advapi32.CreatePrivateObjectSecurityEx(_In_opt_ PSECURITY_DESCRIPTOR ParentDescriptor,_In_opt_ PSECURITY_DESCRIPTOR CreatorDescriptor,_Out_ PSECURITY_DESCRIPTOR *NewDescriptor,_In_opt_ GUID *ObjectType,_In_ BOOL IsContainerObject,_In_ ULONG AutoInheritFlags,_In_opt_ HANDLE Token,_In_ PGENERIC_MAPPING GenericMapping)
BOOL None advapi32.ConvertSidToStringSid(_In_ PSID Sid,_Out_ LPTSTR *StringSid)
BOOL None advapi32.ConvertSidToStringSidW(_In_ PSID Sid,_Out_ LPTSTR *StringSid)
BOOL None advapi32.ConvertSidToStringSidA(_In_ PSID Sid,_Out_ LPTSTR *StringSid)
NTSTATUS None cscapi.CscSearchApiGetInterface(_In_ ULONG Version,_In_ ULONG Cookie,_Out_ CCscSearchApiInterface **Interface)
HANDLE WINAPI kernel32.CreateBoundaryDescriptor(_In_ LPCTSTR Name,_In_ ULONG Flags)
HANDLE WINAPI kernel32.CreateBoundaryDescriptorW(_In_ LPCTSTR Name,_In_ ULONG Flags)
HANDLE WINAPI kernel32.CreateBoundaryDescriptorA(_In_ LPCTSTR Name,_In_ ULONG Flags)
LONG WINAPI advapi32.RegSetKeySecurity(_In_ HKEY hKey,_In_ SECURITY_INFORMATION SecurityInformation,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor)
TRUSTEE_TYPE WINAPI advapi32.GetTrusteeType(_In_opt_ PTRUSTEE pTrustee)
TRUSTEE_TYPE WINAPI advapi32.GetTrusteeTypeW(_In_opt_ PTRUSTEE pTrustee)
TRUSTEE_TYPE WINAPI advapi32.GetTrusteeTypeA(_In_opt_ PTRUSTEE pTrustee)
BOOL WINAPI crypt32.CertFindSubjectInSortedCTL(_In_ PCRYPT_DATA_BLOB pSubjectIdentifier,_In_ PCCTL_CONTEXT pCtlContext,_In_ DWORD dwFlags,_In_ void *pvReserved,_Out_ PCRYPT_DER_BLOB pEncodedAttributes)
BOOL WINAPI wintrust.CryptCATPersistStore(_In_ HANDLE hCatalog)
PCCERT_CHAIN_CONTEXT WINAPI crypt32.CertDuplicateCertificateChain(_In_ PCCERT_CHAIN_CONTEXT pChainContext)
LPWSTR WINAPI wintrust.CryptCATCDFEnumMembersByCDFTagEx(_In_ CRYPTCATCDF *pCDF,_Inout_ LPWSTR pwszPrevCDFTag,_In_ PFN_CDF_PARSE_ERROR_CALLBACK pfnParseError,_In_ CRYPTCATMEMBER **ppMember,_In_ BOOL fContinueOnError,_In_ LPVOID pvReserved)
DWORD WINAPI advapi32.GetSecurityDescriptorRMControl(_In_ PSECURITY_DESCRIPTOR SecurityDescriptor,_Out_ PUCHAR RMControl)
int None shlwapi.SHAnsiToUnicode(_In_ PCSTR pszSrc,_Out_ PWSTR pwszDst,int cwchBuf None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcServerUseAllProtseqs(unsigned int MaxCalls,void *SecurityDescriptor None)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsGroupMbrInqDone(RPC_NS_HANDLE *InquiryContext None)
typedef None None.BOOL(WINAPI *PFN_CMSG_EXPORT_MAIL_LIST None)
BOOL None user32.SetMenuContextHelpId(HMENU hmenu None,DWORD dwContextHelpId None)
BOOL WINAPI advapi32.OpenThreadToken(_In_ HANDLE ThreadHandle,_In_ DWORD DesiredAccess,_In_ BOOL OpenAsSelf,_Out_ PHANDLE TokenHandle)
BOOL None shell32.ILIsParent(_In_ PCIDLIST_ABSOLUTE pidl1,_In_ PCIDLIST_ABSOLUTE pidl2,_In_ BOOL fImmediate)
RPC_STATUS RPC_ENTRY rpcrt4.RpcBindingInqAuthClientEx(RPC_BINDING_HANDLE ClientBinding None,RPC_AUTHZ_HANDLE *Privs None,unsigned char **ServerPrincName,unsigned long *AuthnLevel,unsigned long *AuthnSvc,unsigned long *AuthzSvc,unsigned long flags)
RPC_STATUS RPC_ENTRY rpcrt4.RpcBindingInqAuthClientExW(RPC_BINDING_HANDLE ClientBinding None,RPC_AUTHZ_HANDLE *Privs None,unsigned char **ServerPrincName,unsigned long *AuthnLevel,unsigned long *AuthnSvc,unsigned long *AuthzSvc,unsigned long flags)
RPC_STATUS RPC_ENTRY rpcrt4.RpcBindingInqAuthClientExA(RPC_BINDING_HANDLE ClientBinding None,RPC_AUTHZ_HANDLE *Privs None,unsigned char **ServerPrincName,unsigned long *AuthnLevel,unsigned long *AuthnSvc,unsigned long *AuthzSvc,unsigned long flags)
BOOL WINAPI advapi32.ConvertSecurityDescriptorToStringSecurityDescriptor(_In_ PSECURITY_DESCRIPTOR SecurityDescriptor,_In_ DWORD RequestedStringSDRevision,_In_ SECURITY_INFORMATION SecurityInformation,_Out_ LPTSTR *StringSecurityDescriptor,_Out_ PULONG StringSecurityDescriptorLen)
BOOL WINAPI advapi32.ConvertSecurityDescriptorToStringSecurityDescriptorW(_In_ PSECURITY_DESCRIPTOR SecurityDescriptor,_In_ DWORD RequestedStringSDRevision,_In_ SECURITY_INFORMATION SecurityInformation,_Out_ LPTSTR *StringSecurityDescriptor,_Out_ PULONG StringSecurityDescriptorLen)
BOOL WINAPI advapi32.ConvertSecurityDescriptorToStringSecurityDescriptorA(_In_ PSECURITY_DESCRIPTOR SecurityDescriptor,_In_ DWORD RequestedStringSDRevision,_In_ SECURITY_INFORMATION SecurityInformation,_Out_ LPTSTR *StringSecurityDescriptor,_Out_ PULONG StringSecurityDescriptorLen)
BOOL WINAPI kernel32.DeriveCapabilitySidsFromName(_In_ LPCWSTR CapName,_Out_ PSID **CapabilityGroupSids,_Out_ DWORD *CapabilityGroupSidCount,_Out_ PSID **CapabilitySids,_Out_ DWORD *CapabilitySidCount)
void None None.FreeIDListArray(_In_ PIDLIST_RELATIVE *ppidls,UINT cItems None)
BOOL WINAPI user32.SoundSentry(void None None)
TRUSTEE_FORM WINAPI advapi32.GetTrusteeForm(_In_ PTRUSTEE pTrustee)
TRUSTEE_FORM WINAPI advapi32.GetTrusteeFormW(_In_ PTRUSTEE pTrustee)
TRUSTEE_FORM WINAPI advapi32.GetTrusteeFormA(_In_ PTRUSTEE pTrustee)
BOOL WINAPI advapi32.InitializeAcl(_Out_ PACL pAcl,_In_ DWORD nAclLength,_In_ DWORD dwAclRevision)
DWORD WINAPI advapi32.GetInheritanceSource(_In_ LPTSTR pObjectName,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_In_ BOOL Container,_In_opt_ GUID **pObjectClassGuids,_In_ DWORD GuidCount,_In_ PACL pAcl,_In_opt_ PFN_OBJECT_MGR_FUNCTS pfnArray,_In_ PGENERIC_MAPPING pGenericMapping,_Out_ PINHERITED_FROM pInheritArray)
DWORD WINAPI advapi32.GetInheritanceSourceW(_In_ LPTSTR pObjectName,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_In_ BOOL Container,_In_opt_ GUID **pObjectClassGuids,_In_ DWORD GuidCount,_In_ PACL pAcl,_In_opt_ PFN_OBJECT_MGR_FUNCTS pfnArray,_In_ PGENERIC_MAPPING pGenericMapping,_Out_ PINHERITED_FROM pInheritArray)
DWORD WINAPI advapi32.GetInheritanceSourceA(_In_ LPTSTR pObjectName,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_In_ BOOL Container,_In_opt_ GUID **pObjectClassGuids,_In_ DWORD GuidCount,_In_ PACL pAcl,_In_opt_ PFN_OBJECT_MGR_FUNCTS pfnArray,_In_ PGENERIC_MAPPING pGenericMapping,_Out_ PINHERITED_FROM pInheritArray)
Uint32 None storageservice.Delete([in None None,optional] String username,[in None None,optional] String password,[out None None,optional] MSFT_SMExtendedStatus ExtendedStatus)
HRESULT None None.SetPresenterChoice([in] SYNCMGR_PRESENTER_CHOICE nPresenterChoice,[in] BOOL fApplyToAll)
VOID WINAPI kernel32.InitializeConditionVariable(_Out_ PCONDITION_VARIABLE ConditionVariable)
BOOL WINAPI kernel32.InitOnceComplete(_Inout_ LPINIT_ONCE lpInitOnce,_In_ DWORD dwFlags,_In_opt_ LPVOID lpContext)
typedef None None.void(WINAPI *PFN_CDF_PARSE_ERROR_CALLBACK None)
BOOL WINAPI crypt32.CryptMsgCountersignEncoded(_In_ DWORD dwEncodingType,_In_ PBYTE pbSignerInfo,_In_ DWORD cbSignerInfo,_In_ DWORD cCountersigners,_In_ PCMSG_SIGNER_ENCODE_INFO rgCountersigners,_Out_ PBYTE pbCountersignature,_Inout_ PDWORD pcbCountersignature)
typedef None None.BOOL(WINAPI *PFN_CMSG_IMPORT_MAIL_LIST None)
DWORD WINAPI advapi32.GetExplicitEntriesFromAcl(_In_ PACL pacl,_Out_ PULONG pcCountOfExplicitEntries,_Out_ PEXPLICIT_ACCESS *pListOfExplicitEntries)
DWORD WINAPI advapi32.GetExplicitEntriesFromAclW(_In_ PACL pacl,_Out_ PULONG pcCountOfExplicitEntries,_Out_ PEXPLICIT_ACCESS *pListOfExplicitEntries)
DWORD WINAPI advapi32.GetExplicitEntriesFromAclA(_In_ PACL pacl,_Out_ PULONG pcCountOfExplicitEntries,_Out_ PEXPLICIT_ACCESS *pListOfExplicitEntries)
HRESULT None ole32.CoGetCallContext(_In_ REFIID riid,_Out_ void **ppInterface)
RPC_STATUS RPC_ENTRY rpcrt4.UuidCreateSequential(UUID __RPC_FAR *Uuid)
HRESULT WINAPI mssign32.SignerTimeStampEx(_Reserved_ DWORD dwFlags,_In_ SIGNER_SUBJECT_INFO *pSubjectInfo,_In_ LPCWSTR pwszHttpTimeStamp,_In_ PCRYPT_ATTRIBUTES psRequest,_In_ LPVOID pSipData,_Out_ SIGNER_CONTEXT **ppSignerContext)
HINSTANCE None shell32.FindExecutable(_In_ LPCTSTR lpFile,_In_opt_ LPCTSTR lpDirectory,_Out_ LPTSTR lpResult)
HINSTANCE None shell32.FindExecutableW(_In_ LPCTSTR lpFile,_In_opt_ LPCTSTR lpDirectory,_Out_ LPTSTR lpResult)
HINSTANCE None shell32.FindExecutableA(_In_ LPCTSTR lpFile,_In_opt_ LPCTSTR lpDirectory,_Out_ LPTSTR lpResult)
BOOL None shell32.SHChangeNotification_Unlock(_In_ HANDLE hLock)
HRESULT None shell32.SHCreateDefaultExtractIcon(REFIID riid None,_Out_ void **ppv)
HRESULT None shell32.SHAssocEnumHandlers(_In_ PCWSTR pszExtra,_In_ ASSOC_FILTER afFilter,_Out_ IEnumAssocHandlers **ppEnumHandler)
BOOL WINAPI crypt32.CryptRegisterOIDFunction(_In_ DWORD dwEncodingType,_In_ LPCSTR pszFuncName,_In_ LPCSTR pszOID,_In_ LPCWSTR pwszDll,_In_ LPCSTR pszOverrideFuncName)
BOOL WINAPI authz.AuthzFreeContext(_In_ AUTHZ_CLIENT_CONTEXT_HANDLE AuthzClientContext)
LPWSTR None shlwapi.CharLowerWrapW(_Inout_ LPWSTR pch)
HRESULT None shell32.SHGetStockIconInfo(SHSTOCKICONID siid None,UINT uFlags None,_Inout_ SHSTOCKICONINFO *psii)
void None shell32.SHGetSettings(LPSHELLFLAGSTATE lpsfs None,DWORD dwMask None)
HRESULT None certadm.CertSrvBackupGetDatabaseNames(_In_ HCSBC hbc,_Out_ WCHAR **ppwszzAttachmentInformation,_Out_ DWORD *pcbSize)
HRESULT None certadm.CertSrvBackupGetDatabaseNamesW(_In_ HCSBC hbc,_Out_ WCHAR **ppwszzAttachmentInformation,_Out_ DWORD *pcbSize)
BOOL WINAPI crypt32.CertCompareCertificate(_In_ DWORD dwCertEncodingType,_In_ PCERT_INFO pCertId1,_In_ PCERT_INFO pCertId2)
SEC_ENTRY None None.OnProfileLoaded(_In_ PVOID ProviderHandle,_In_ HANDLE UserToken,_In_ BOOLEAN Loaded)
PWSTR None shell32.StrStrNW(_In_ PWSTR pszFirst,_In_ PCWSTR pszSrch,UINT cchMax None)
BOOL CALLBACK None.EnumWindowsProc(_In_ HWND hwnd,_In_ LPARAM lParam)
int None comctl32.CreateMRUListW(_In_ LPMRUINFO lpmi)
int None comctl32.CreateMRUListW(_In_ LPMRUINFO lpmi)
HRESULT None shell32.SHCreateItemFromIDList(_In_ PCIDLIST_ABSOLUTE pidl,_In_ REFIID riid,_Out_ void **ppv)
void RPC_ENTRY rpcrt4.RpcSsDisableAllocate(void None None)
HRESULT None certadm.CertSrvRestoreGetDatabaseLocations(_In_ HCSBC hbc,_Out_ WCHAR **ppwszzDatabaseLocationList,_Out_ DWORD *pcbSize)
HRESULT None certadm.CertSrvRestoreGetDatabaseLocationsW(_In_ HCSBC hbc,_Out_ WCHAR **ppwszzDatabaseLocationList,_Out_ DWORD *pcbSize)
HRESULT None shell32.SHLoadInProc(_In_ REFCLSID rclsid)
DWORD None shlwapi.StopWatchMode(void None None)
BOOL None wintrust.CryptCATAdminReleaseContext(_In_ HCATADMIN hCatAdmin,_In_ DWORD dwFlags)
RPC_STATUS RPC_ENTRY rpcrt4.RpcServerInterfaceGroupClose(_In_ RPC_INTERFACE_GROUP IfGroup)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsGroupMbrAdd(unsigned long GroupNameSyntax,unsigned char *GroupName,unsigned long MemberNameSyntax,unsigned char *MemberName)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsGroupMbrAddW(unsigned long GroupNameSyntax,unsigned char *GroupName,unsigned long MemberNameSyntax,unsigned char *MemberName)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsGroupMbrAddA(unsigned long GroupNameSyntax,unsigned char *GroupName,unsigned long MemberNameSyntax,unsigned char *MemberName)
PCCERT_CONTEXT WINAPI wintrust.WTHelperCertFindIssuerCertificate(_In_ PCCERT_CONTEXT pChildContext,_In_ DWORD chStores,_In_ HCERTSTORE *pahStores,_In_ FILETIME *psftVerifyAsOf,_In_ DWORD dwEncoding,_Out_opt_ DWORD *pdwConfidence,_Out_ DWORD *dwError)
BOOL WINAPI crypt32.CryptAcquireCertificatePrivateKey(_In_ PCCERT_CONTEXT pCert,_In_ DWORD dwFlags,_In_opt_ void *pvParameters,_Out_ HCRYPTPROV_OR_NCRYPT_KEY_HANDLE *phCryptProvOrNCryptKey,_Out_ DWORD *pdwKeySpec,_Out_ BOOL *pfCallerFreeProvOrNCryptKey)
BOOL WINAPI advapi32.PrivilegedServiceAuditAlarm(_In_ LPCTSTR SubsystemName,_In_ LPCTSTR ServiceName,_In_ HANDLE ClientToken,_In_ PPRIVILEGE_SET Privileges,_In_ BOOL AccessGranted)
BOOL WINAPI advapi32.PrivilegedServiceAuditAlarmW(_In_ LPCTSTR SubsystemName,_In_ LPCTSTR ServiceName,_In_ HANDLE ClientToken,_In_ PPRIVILEGE_SET Privileges,_In_ BOOL AccessGranted)
BOOL WINAPI advapi32.PrivilegedServiceAuditAlarmA(_In_ LPCTSTR SubsystemName,_In_ LPCTSTR ServiceName,_In_ HANDLE ClientToken,_In_ PPRIVILEGE_SET Privileges,_In_ BOOL AccessGranted)
void None ole32.CoFreeLibrary(_In_ HINSTANCE hInst)
void None shell32.SHUpdateImage(_In_ LPCTSTR pszHashItem,_In_ int iIndex,_In_ UINT uFlags,_In_ int iImageIndex)
void None shell32.SHUpdateImageW(_In_ LPCTSTR pszHashItem,_In_ int iIndex,_In_ UINT uFlags,_In_ int iImageIndex)
void None shell32.SHUpdateImageA(_In_ LPCTSTR pszHashItem,_In_ int iIndex,_In_ UINT uFlags,_In_ int iImageIndex)
HRESULT None None.GetSubscriptions([in] BSTR methodName,[in] BSTR optionalCriteria,[in] int *optionalErrorIndex,[out None None,retval] IEventObjectCollection **ppCollection)
HRESULT None url.MIMEAssociationDialog(HWND hwndParent None,DWORD dwInFlags None,PCTSTR pcszFile None,PCTSTR pcszMIMEContentType None,_Out_ PTSTR pszAppBuf,UINT ucAppBufLen None)
HRESULT None url.MIMEAssociationDialogW(HWND hwndParent None,DWORD dwInFlags None,PCTSTR pcszFile None,PCTSTR pcszMIMEContentType None,_Out_ PTSTR pszAppBuf,UINT ucAppBufLen None)
HRESULT None url.MIMEAssociationDialogA(HWND hwndParent None,DWORD dwInFlags None,PCTSTR pcszFile None,PCTSTR pcszMIMEContentType None,_Out_ PTSTR pszAppBuf,UINT ucAppBufLen None)
void None None.FreeKnownFolderDefinitionFields(_In_ KNOWNFOLDER_DEFINITION *pKFD)
BOOL WINAPI kernel32.SleepConditionVariableCS(_Inout_ PCONDITION_VARIABLE ConditionVariable,_Inout_ PCRITICAL_SECTION CriticalSection,_In_ DWORD dwMilliseconds)
void WINAPI advapi32.BuildTrusteeWithObjectsAndSid(_Inout_ PTRUSTEE pTrustee,_In_opt_ POBJECTS_AND_SID pObjSid,_In_opt_ GUID *pObjectGuid,_In_opt_ GUID *pInheritedObjectGuid,_In_opt_ PSID pSid)
void WINAPI advapi32.BuildTrusteeWithObjectsAndSidW(_Inout_ PTRUSTEE pTrustee,_In_opt_ POBJECTS_AND_SID pObjSid,_In_opt_ GUID *pObjectGuid,_In_opt_ GUID *pInheritedObjectGuid,_In_opt_ PSID pSid)
void WINAPI advapi32.BuildTrusteeWithObjectsAndSidA(_Inout_ PTRUSTEE pTrustee,_In_opt_ POBJECTS_AND_SID pObjSid,_In_opt_ GUID *pObjectGuid,_In_opt_ GUID *pInheritedObjectGuid,_In_opt_ PSID pSid)
BOOL WINAPI advapi32.GetPrivateObjectSecurity(_In_ PSECURITY_DESCRIPTOR ObjectDescriptor,_In_ SECURITY_INFORMATION SecurityInformation,_Out_opt_ PSECURITY_DESCRIPTOR ResultantDescriptor,_In_ DWORD DescriptorLength,_Out_ PDWORD ReturnLength)
RPC_STATUS RPC_ENTRY rpcrt4.RpcServerTestCancel(RPC_BINDING_HANDLE BindingHandle None)
DWORD WINAPI advapi32.SetEntriesInAcl(_In_ ULONG cCountOfExplicitEntries,_In_opt_ PEXPLICIT_ACCESS pListOfExplicitEntries,_In_opt_ PACL OldAcl,_Out_ PACL *NewAcl)
DWORD WINAPI advapi32.SetEntriesInAclW(_In_ ULONG cCountOfExplicitEntries,_In_opt_ PEXPLICIT_ACCESS pListOfExplicitEntries,_In_opt_ PACL OldAcl,_Out_ PACL *NewAcl)
DWORD WINAPI advapi32.SetEntriesInAclA(_In_ ULONG cCountOfExplicitEntries,_In_opt_ PEXPLICIT_ACCESS pListOfExplicitEntries,_In_opt_ PACL OldAcl,_Out_ PACL *NewAcl)
VOID None None.WinExecError(_In_ HWND hwnd,_In_ int error,_In_ LPCTSTR lpstrFileName,_In_ LPCTSTR lpstrTitle)
HRESULT WINAPI dssec.DSCreateISecurityInfoObject(_In_ LPCWSTR pwszObjectPath,_In_ LPCWSTR pwszObjectClass,_In_ DWORD dwFlags,_Out_ LPSECURITYINFO *ppSI,_In_opt_ PFNREADOBJECTSECURITY pfnReadSD,_In_opt_ PFNWRITEOBJECTSECURITY pfnWriteSD,_In_ LPARAM lpContext)
HRESULT WINAPI cryptxml.CryptXmlOpenToEncode(_In_opt_ CRYPT_XML_TRANSFORM_CHAIN_CONFIG *pConfig,DWORD dwFlags None,_In_opt_ LPCWSTR wszId,_In_ CRYPT_XML_PROPERTY *rgProperty,_In_ ULONG cProperty,_In_opt_ CRYPT_XML_BLOB *pEncoded,HCRYPTXML *phSignature None)
DWORD WINAPI advapi32.SetNamedSecurityInfo(_In_ LPTSTR pObjectName,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_In_opt_ PSID psidOwner,_In_opt_ PSID psidGroup,_In_opt_ PACL pDacl,_In_opt_ PACL pSacl)
DWORD WINAPI advapi32.SetNamedSecurityInfoW(_In_ LPTSTR pObjectName,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_In_opt_ PSID psidOwner,_In_opt_ PSID psidGroup,_In_opt_ PACL pDacl,_In_opt_ PACL pSacl)
DWORD WINAPI advapi32.SetNamedSecurityInfoA(_In_ LPTSTR pObjectName,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_In_opt_ PSID psidOwner,_In_opt_ PSID psidGroup,_In_opt_ PACL pDacl,_In_opt_ PACL pSacl)
PSLIST_ENTRY WINAPI ntdll.RtlInterlockedPopEntrySList(_In_ PSLIST_HEADER ListHead)
BOOL WINAPI advapi32.ObjectOpenAuditAlarm(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ LPTSTR ObjectTypeName,_In_opt_ LPTSTR ObjectName,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_ HANDLE ClientToken,_In_ DWORD DesiredAccess,_In_ DWORD GrantedAccess,_In_opt_ PPRIVILEGE_SET Privileges,_In_ BOOL ObjectCreation,_In_ BOOL AccessGranted,_Out_ LPBOOL GenerateOnClose)
BOOL WINAPI advapi32.ObjectOpenAuditAlarmW(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ LPTSTR ObjectTypeName,_In_opt_ LPTSTR ObjectName,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_ HANDLE ClientToken,_In_ DWORD DesiredAccess,_In_ DWORD GrantedAccess,_In_opt_ PPRIVILEGE_SET Privileges,_In_ BOOL ObjectCreation,_In_ BOOL AccessGranted,_Out_ LPBOOL GenerateOnClose)
BOOL WINAPI advapi32.ObjectOpenAuditAlarmA(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ LPTSTR ObjectTypeName,_In_opt_ LPTSTR ObjectName,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_ HANDLE ClientToken,_In_ DWORD DesiredAccess,_In_ DWORD GrantedAccess,_In_opt_ PPRIVILEGE_SET Privileges,_In_ BOOL ObjectCreation,_In_ BOOL AccessGranted,_Out_ LPBOOL GenerateOnClose)
BOOL WINAPI advapi32.GetSecurityDescriptorControl(_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_Out_ PSECURITY_DESCRIPTOR_CONTROL pControl,_Out_ LPDWORD lpdwRevision)
HRESULT None msident.ManageIdentities([in] HWND hwndParent,[in] DWORD dwFlags)
BOOL WINAPI advapi32.GetAce(_In_ PACL pAcl,_In_ DWORD dwAceIndex,_Out_ LPVOID *pAce)
HRESULT None shell32.SHGetTemporaryPropertyForItem(_In_ IShellItem *psi,REFPROPERTYKEY pk None,_Out_ PROPVARIANT *ppropvarInk)
BOOL WINAPI authz.AuthzOpenObjectAudit(_In_ DWORD Flags,_In_ AUTHZ_CLIENT_CONTEXT_HANDLE hAuthzClientContext,_In_ PAUTHZ_ACCESS_REQUEST pRequest,_In_ AUTHZ_AUDIT_EVENT_HANDLE hAuditEvent,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_ PSECURITY_DESCRIPTOR *SecurityDescriptorArray,_In_ DWORD SecurityDescriptorCount,_In_ PAUTHZ_ACCESS_REPLY pReply)
BOOL WINAPI authz.AuthzGetInformationFromContext(_In_ AUTHZ_CLIENT_CONTEXT_HANDLE hAuthzClientContext,_In_ AUTHZ_CONTEXT_INFORMATION_CLASS InfoClass,_In_ DWORD BufferSize,_Out_ PDWORD pSizeRequired,_Out_ PVOID Buffer)
RPC_STATUS RPC_ENTRY rpcrt4.RpcAsyncCompleteCall(PRPC_SYNC_STATE pAsync None,PVOID Reply None)
HRESULT None None._put_itbLastFocus([in] UINT itbLastFocus)
BOOL WINAPI crypt32.CertStrToName(_In_ DWORD dwCertEncodingType,_In_ LPCTSTR pszX500,_In_ DWORD dwStrType,_In_opt_ void *pvReserved,_Out_ BYTE *pbEncoded,_Inout_ DWORD *pcbEncoded,_Out_opt_ LPCTSTR *ppszError)
BOOL WINAPI crypt32.CertStrToNameW(_In_ DWORD dwCertEncodingType,_In_ LPCTSTR pszX500,_In_ DWORD dwStrType,_In_opt_ void *pvReserved,_Out_ BYTE *pbEncoded,_Inout_ DWORD *pcbEncoded,_Out_opt_ LPCTSTR *ppszError)
BOOL WINAPI crypt32.CertStrToNameA(_In_ DWORD dwCertEncodingType,_In_ LPCTSTR pszX500,_In_ DWORD dwStrType,_In_opt_ void *pvReserved,_Out_ BYTE *pbEncoded,_Inout_ DWORD *pcbEncoded,_Out_opt_ LPCTSTR *ppszError)
HWND WINAPI user32.GetWindow(_In_ HWND hWnd,_In_ UINT uCmd)
HANDLE WINAPI kernel32.OpenSemaphore(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpName)
HANDLE WINAPI kernel32.OpenSemaphoreW(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpName)
HANDLE WINAPI kernel32.OpenSemaphoreA(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpName)
BOOL WINAPI advapi32.CryptEnumProviderTypes(_In_ DWORD dwIndex,_In_ DWORD *pdwReserved,_In_ DWORD dwFlags,_Out_ DWORD *pdwProvType,_Out_ LPTSTR pszTypeName,_Inout_ DWORD *pcbTypeName)
BOOL WINAPI advapi32.CryptEnumProviderTypesW(_In_ DWORD dwIndex,_In_ DWORD *pdwReserved,_In_ DWORD dwFlags,_Out_ DWORD *pdwProvType,_Out_ LPTSTR pszTypeName,_Inout_ DWORD *pcbTypeName)
BOOL WINAPI advapi32.CryptEnumProviderTypesA(_In_ DWORD dwIndex,_In_ DWORD *pdwReserved,_In_ DWORD dwFlags,_Out_ DWORD *pdwProvType,_Out_ LPTSTR pszTypeName,_Inout_ DWORD *pcbTypeName)
HRESULT None None.GetBackgroundColor([out] COLORREF *color)
PSID_IDENTIFIER_AUTHORITY WINAPI advapi32.GetSidIdentifierAuthority(_In_ PSID pSid)
BOOL None shell32.LinkWindow_UnregisterClass(void None None)
DWORD WINAPI advapi32.SetSecurityDescriptorRMControl(_Inout_ PSECURITY_DESCRIPTOR SecurityDescriptor,_In_opt_ PUCHAR RMControl)
BOOL WINAPI None.CertStoreProvWriteCertCallback(_In_ HCERTSTOREPROV hStoreProv,_In_ PCCERT_CONTEXT pCertContext,_In_ DWORD dwFlags)
HRESULT None certadm.CertSrvRestoreRegisterComplete(_In_ HCSBC hbc,_In_ HRESULT hrRestoreState)
RPC_STATUS None rpcrt4.RpcServerInqBindingHandle(RPC_BINDING_HANDLE *Binding None)
BOOL WINAPI advapi32.ImpersonateNamedPipeClient(_In_ HANDLE hNamedPipe)
BOOL WINAPI wintrust.IsCatalogFile(_In_opt_ HANDLE hFile,_In_opt_ WCHAR *pwszFileName)
BOOL WINAPI authz.AuthzInitializeContextFromSid(_In_ DWORD Flags,_In_ PSID UserSid,_In_opt_ AUTHZ_RESOURCE_MANAGER_HANDLE hAuthzResourceManager,_In_ PLARGE_INTEGER pExpirationTime,_In_ LUID Identifier,_In_opt_ PVOID DynamicGroupArgs,_Out_ PAUTHZ_CLIENT_CONTEXT_HANDLE pAuthzClientContext)
BOOL WINAPI authz.AuthzInitializeCompoundContext(_In_ AUTHZ_CLIENT_CONTEXT_HANDLE UserContext,_In_ AUTHZ_CLIENT_CONTEXT_HANDLE DeviceContext,_Out_ PAUTHZ_CLIENT_CONTEXT_HANDLE phCompoundContext)
BOOL WINAPI advapi32.AreAnyAccessesGranted(_In_ DWORD GrantedAccess,_In_ DWORD DesiredAccess)
BOOL None shell32.ShellExecuteEx(_Inout_ SHELLEXECUTEINFO *pExecInfo)
BOOL None shell32.ShellExecuteExW(_Inout_ SHELLEXECUTEINFO *pExecInfo)
BOOL None shell32.ShellExecuteExA(_Inout_ SHELLEXECUTEINFO *pExecInfo)
DWORD WINAPI advapi32.GetSecurityInfo(_In_ HANDLE handle,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_Out_opt_ PSID *ppsidOwner,_Out_opt_ PSID *ppsidGroup,_Out_opt_ PACL *ppDacl,_Out_opt_ PACL *ppSacl,_Out_opt_ PSECURITY_DESCRIPTOR *ppSecurityDescriptor)
RPC_STATUS RPC_ENTRY rpcrt4.RpcNsBindingInqEntryName(RPC_BINDING_HANDLE Binding None,unsigned long EntryNameSyntax,unsigned char **EntryName)
RPC_STATUS RPC_ENTRY rpcrt4.RpcNsBindingInqEntryNameW(RPC_BINDING_HANDLE Binding None,unsigned long EntryNameSyntax,unsigned char **EntryName)
RPC_STATUS RPC_ENTRY rpcrt4.RpcNsBindingInqEntryNameA(RPC_BINDING_HANDLE Binding None,unsigned long EntryNameSyntax,unsigned char **EntryName)
BOOL WINAPI None.CertStoreProvDeleteCRLCallback(_In_ HCERTSTOREPROV hStoreProv,_In_ PCCRL_CONTEXT pCrlContext,_In_ DWORD dwFlags)
BOOL WINAPI authz.AuthzCachedAccessCheck(_In_ DWORD Flags,_In_ AUTHZ_ACCESS_CHECK_RESULTS_HANDLE AuthzHandle,_In_ PAUTHZ_ACCESS_REQUEST pRequest,_In_ AUTHZ_AUDIT_EVENT_HANDLE AuditInfo,_Out_ PAUTHZ_ACCESS_REPLY pReply)
STDAPI None shcore.UnregisterScaleChangeEvent(_In_ DWORD_PTR dwCookie)
PSLIST_ENTRY WINAPI ntdll.RtlInterlockedFlushSList(_In_ PSLIST_HEADER ListHead)
BOOL WINAPI advapi32.AdjustTokenPrivileges(_In_ HANDLE TokenHandle,_In_ BOOL DisableAllPrivileges,_In_opt_ PTOKEN_PRIVILEGES NewState,_In_ DWORD BufferLength,_Out_opt_ PTOKEN_PRIVILEGES PreviousState,_Out_opt_ PDWORD ReturnLength)
RPC_STATUS RPC_ENTRY rpcrt4.RpcRevertToSelfEx(RPC_BINDING_HANDLE BindingHandle None)
HRESULT None explorerframe.SetOverlayIcon([in] HWND hwnd,[in] HICON hIcon,[in] LPCWSTR pszDescription)
HRESULT None None._GetBorderDWHelper([in] IUnknown *punkSrc,[in] LPRECT lprectBorder,[in] BOOL bUseHmonitor)
HWND WINAPI user32.GetAncestor(_In_ HWND hwnd,_In_ UINT gaFlags)
VOID WINAPI advapi32.QuerySecurityAccessMask(_In_ SECURITY_INFORMATION SecurityInformation,_Out_ LPDWORD DesiredAccess)
BOOL None None.PFNCFILTERPROC(_In_ PCCERT_CONTEXT pCertContext,_In_ BOOL *pfInitialSelectedCert,_In_ void *pvCallbackData)
HRESULT None ole32.CoGetInterfaceAndReleaseStream(_In_ LPSTREAM pStm,_In_ REFIID iid,_Out_ LPVOID *ppv)
typedef None None.BOOL(WINAPI *PFN_CMSG_IMPORT_KEY_TRANS None)
BOOL WINAPI crypt32.CertRetrieveLogoOrBiometricInfo(_In_ PCCERT_CONTEXT pCertContext,_In_ LPCSTR lpszLogoOrBiometricType,_In_ DWORD dwRetrievalFlags,_In_ DWORD dwTimeout,_In_ DWORD dwFlags,_Reserved_ void *pvReserved,_Out_ BYTE **ppbData,_Out_ DWORD *pcbData,_Out_ LPWSTR *ppwszMimeType)
BOOL WINAPI crypt32.CertAddCertificateLinkToStore(_In_ HCERTSTORE hCertStore,_In_ PCCERT_CONTEXT pCertContext,_In_ DWORD dwAddDisposition,_Out_opt_ PCCERT_CONTEXT *ppStoreContext)
BOOL WINAPI crypt32.CertSelectCertificateChains(_In_opt_ LPCGUID pSelectionContext,_In_ DWORD dwFlags,_In_opt_ PCCERT_SELECT_CHAIN_PARA pChainParameters,_In_ DWORD cCriteria,_In_opt_ PCCERT_SELECT_CRITERIA rgpCriteria,_In_ HCERTSTORE hStore,_Out_ PDWORD pcSelection,_Out_ PCCERT_CHAIN_CONTEXT **pprgpSelection)
ULONG None None.RKeyCloseKeyService(_In_ KEYSVCC_HANDLE hKeySvcCli,_Inout_ void *pReserved)
VOID WINAPI advapi32.SetSecurityAccessMask(_In_ SECURITY_INFORMATION SecurityInformation,_Out_ LPDWORD DesiredAccess)
HRESULT None shell32.SHGetIDListFromObject(_In_ IUnknown *punk,_Out_ PIDLIST_ABSOLUTE *ppidl)
BOOL WINAPI crypt32.CryptMsgGetParam(_In_ HCRYPTMSG hCryptMsg,_In_ DWORD dwParamType,_In_ DWORD dwIndex,_Out_ void *pvData,_Inout_ DWORD *pcbData)
BOOL WINAPI advapi32.SetThreadToken(_In_opt_ PHANDLE Thread,_In_opt_ HANDLE Token)
BOOL WINAPI advapi32.OpenProcessToken(_In_ HANDLE ProcessHandle,_In_ DWORD DesiredAccess,_Out_ PHANDLE TokenHandle)
BOOL WINAPI crypt32.CertFreeCertificateContext(_In_ PCCERT_CONTEXT pCertContext)
BOOL WINAPI authz.AuthzSetAppContainerInformation(_In_ AUTHZ_CLIENT_CONTEXT_HANDLE hAuthzClientContext,_In_ PSID pAppContainerSid,_In_ DWORD CapabilityCount,_In_opt_ PSID_AND_ATTRIBUTES pCapabilitySids[CapabilityCount])
HRESULT None shell32.SHParseDisplayName(_In_ LPCWSTR pszName,_In_opt_ IBindCtx *pbc,_Out_ PIDLIST_ABSOLUTE *ppidl,_In_ SFGAOF sfgaoIn,_Out_opt_ SFGAOF *psfgaoOut)
BOOLEAN WINAPI advapi32.AuditEnumerateCategories(_Out_ GUID **ppAuditCategoriesArray,_Out_ PULONG pCountReturned)
BOOL WINAPI crypt32.CertAddCertificateContextToStore(_In_ HCERTSTORE hCertStore,_In_ PCCERT_CONTEXT pCertContext,_In_ DWORD dwAddDisposition,_Out_opt_ PCCERT_CONTEXT *ppStoreContext)
void CALLBACK None.AuthzFreeGroupsCallback(_In_ PSID_AND_ATTRIBUTES pSidAttrArray)
PCCERT_CONTEXT WINAPI cryptui.CryptUIDlgSelectCertificateFromStore(_In_ HCERTSTORE hCertStore,_In_ HWND hwnd,_In_opt_ LPCWSTR pwszTitle,_In_opt_ LPCWSTR pwszDisplayString,_In_ DWORD dwDontUseColumn,_In_ DWORD dwFlags,_In_ void *pvReserved)
HANDLE WINAPI avrt.AvSetMmThreadCharacteristics(_In_ LPCTSTR TaskName,_Inout_ LPDWORD TaskIndex)
HANDLE WINAPI avrt.AvSetMmThreadCharacteristicsW(_In_ LPCTSTR TaskName,_Inout_ LPDWORD TaskIndex)
HANDLE WINAPI avrt.AvSetMmThreadCharacteristicsA(_In_ LPCTSTR TaskName,_Inout_ LPDWORD TaskIndex)
HRESULT None certadm.CertSrvBackupTruncateLogs(_In_ HCSBC hbc)
HRESULT None shell32.SHRemoveLocalizedName(_In_ PCWSTR pszPath)
RPC_STATUS RPC_ENTRY rpcrt4.RpcBindingInqObject(RPC_BINDING_HANDLE Binding None,UUID *ObjectUuid None)
typedef None None.BOOL(WINAPI *PFN_CRYPT_EXTRACT_ENCODED_SIGNATURE_PARAMETERS_FUNC None)
BOOL WINAPI advapi32.CreatePrivateObjectSecurity(_In_opt_ PSECURITY_DESCRIPTOR ParentDescriptor,_In_opt_ PSECURITY_DESCRIPTOR CreatorDescriptor,_Out_ PSECURITY_DESCRIPTOR *NewDescriptor,_In_ BOOL IsDirectoryObject,_In_opt_ HANDLE Token,_In_ PGENERIC_MAPPING GenericMapping)
BOOL WINAPI advapi32.SetServiceObjectSecurity(_In_ SC_HANDLE hService,_In_ SECURITY_INFORMATION dwSecurityInformation,_In_ PSECURITY_DESCRIPTOR lpSecurityDescriptor)
VOID WINAPI advapi32.BuildTrusteeWithName(_Inout_ PTRUSTEE pTrustee,_In_opt_ LPTSTR pName)
VOID WINAPI advapi32.BuildTrusteeWithNameW(_Inout_ PTRUSTEE pTrustee,_In_opt_ LPTSTR pName)
VOID WINAPI advapi32.BuildTrusteeWithNameA(_Inout_ PTRUSTEE pTrustee,_In_opt_ LPTSTR pName)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsEntryObjectInqBegin(unsigned long EntryNameSyntax,unsigned char *EntryName,RPC_NS_HANDLE *InquiryContext None)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsEntryObjectInqBeginW(unsigned long EntryNameSyntax,unsigned char *EntryName,RPC_NS_HANDLE *InquiryContext None)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsEntryObjectInqBeginA(unsigned long EntryNameSyntax,unsigned char *EntryName,RPC_NS_HANDLE *InquiryContext None)
BOOL WINAPI advapi32.AccessCheckByType(_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_opt_ PSID PrincipalSelfSid,_In_ HANDLE ClientToken,_In_ DWORD DesiredAccess,_Inout_opt_ POBJECT_TYPE_LIST ObjectTypeList,_In_ DWORD ObjectTypeListLength,_In_ PGENERIC_MAPPING GenericMapping,_Out_opt_ PPRIVILEGE_SET PrivilegeSet,_Inout_ LPDWORD PrivilegeSetLength,_Out_ LPDWORD GrantedAccess,_Out_ LPBOOL AccessStatus)
BOOL WINAPI advapi32.SetSecurityDescriptorOwner(_Inout_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_opt_ PSID pOwner,_In_ BOOL bOwnerDefaulted)
BOOL WINAPI advapi32.IsValidSid(_In_ PSID pSid)
HPROPSHEETPAGE WINAPI aclui.CreateSecurityPage(_In_ LPSECURITYINFO psi)
BOOL WINAPI advapi32.AddConditionalAce(_Inout_ PACL pAcl,_In_ DWORD dwAceRevision,_In_ DWORD AceFlags,_In_ UCHAR AceType,_In_ DWORD AccessMask,_In_ PSID pSid,_In_ PWCHAR ConditionStr,_Out_ DWORD *ReturnLength)
LONG WINAPI wintrust.WinVerifyTrust(_In_ HWND hWnd,_In_ GUID *pgActionID,_In_ LPVOID pWVTData)
RPC_SS_THREAD_HANDLE RPC_ENTRY rpcrt4.RpcSsGetThreadHandle(void None None)
WINAPI None crypt32.CertFreeServerOcspResponseContext(_In_ PCCERT_SERVER_OCSP_RESPONSE_CONTEXT pServerOcspResponseContext)
HRESULT None shell32.SHGetLocalizedName(_In_ PCWSTR pszPath,_Out_ PWSTR pszResModule,UINT cch None,_Out_ int *pidsRes)
BOOL WINAPI advapi32.AddAccessDeniedAceEx(_Inout_ PACL pAcl,_In_ DWORD dwAceRevision,_In_ DWORD AceFlags,_In_ DWORD AccessMask,_In_ PSID pSid)
VOID WINAPI crypt32.CertFreeCertificateChain(_In_ PCCERT_CHAIN_CONTEXT pChainContext)
BOOL WINAPI crypt32.CryptUnprotectMemory(_Inout_ LPVOID pData,_In_ DWORD cbData,_In_ DWORD dwFlags)
BOOL WINAPI advapi32.AccessCheckAndAuditAlarm(_In_ LPCTSTR SubsystemName,_In_opt_ LPVOID HandleId,_In_ LPTSTR ObjectTypeName,_In_opt_ LPTSTR ObjectName,_In_ PSECURITY_DESCRIPTOR SecurityDescriptor,_In_ DWORD DesiredAccess,_In_ PGENERIC_MAPPING GenericMapping,_In_ BOOL ObjectCreation,_Out_ LPDWORD GrantedAccess,_Out_ LPBOOL AccessStatus,_Out_ LPBOOL pfGenerateOnClose)
BOOL WINAPI advapi32.AccessCheckAndAuditAlarmW(_In_ LPCTSTR SubsystemName,_In_opt_ LPVOID HandleId,_In_ LPTSTR ObjectTypeName,_In_opt_ LPTSTR ObjectName,_In_ PSECURITY_DESCRIPTOR SecurityDescriptor,_In_ DWORD DesiredAccess,_In_ PGENERIC_MAPPING GenericMapping,_In_ BOOL ObjectCreation,_Out_ LPDWORD GrantedAccess,_Out_ LPBOOL AccessStatus,_Out_ LPBOOL pfGenerateOnClose)
BOOL WINAPI advapi32.AccessCheckAndAuditAlarmA(_In_ LPCTSTR SubsystemName,_In_opt_ LPVOID HandleId,_In_ LPTSTR ObjectTypeName,_In_opt_ LPTSTR ObjectName,_In_ PSECURITY_DESCRIPTOR SecurityDescriptor,_In_ DWORD DesiredAccess,_In_ PGENERIC_MAPPING GenericMapping,_In_ BOOL ObjectCreation,_Out_ LPDWORD GrantedAccess,_Out_ LPBOOL AccessStatus,_Out_ LPBOOL pfGenerateOnClose)
BOOL WINAPI advapi32.CryptDecrypt(_In_ HCRYPTKEY hKey,_In_ HCRYPTHASH hHash,_In_ BOOL Final,_In_ DWORD dwFlags,_Inout_ BYTE *pbData,_Inout_ DWORD *pdwDataLen)
HRESULT None shell32.SHCreateShellItem(_In_opt_ PCIDLIST_ABSOLUTE pidlParent,_In_opt_ IShellFolder *psfParent,_In_ PCUITEMID_CHILD pidl,_Out_ IShellItem **ppsi)
BOOL WINAPI advapi32.EqualDomainSid(_In_ PSID pSid1,_In_ PSID pSid2,_Out_ BOOL *pfEqual)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsProfileDelete(unsigned long ProfileNameSyntax,unsigned char *ProfileName)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsProfileDeleteW(unsigned long ProfileNameSyntax,unsigned char *ProfileName)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsProfileDeleteA(unsigned long ProfileNameSyntax,unsigned char *ProfileName)
RPC_STATUS RPC_ENTRY rpcrt4.RpcSmDestroyClientContext(void **ContextHandle None)
BOOL WINAPI advapi32.ConvertStringSidToSid(_In_ LPCTSTR StringSid,_Out_ PSID *Sid)
BOOL WINAPI advapi32.ConvertStringSidToSidW(_In_ LPCTSTR StringSid,_Out_ PSID *Sid)
BOOL WINAPI advapi32.ConvertStringSidToSidA(_In_ LPCTSTR StringSid,_Out_ PSID *Sid)
BOOL WINAPI authz.AuthzReportSecurityEventFromParams(_In_ DWORD dwFlags,_In_ AUTHZ_SECURITY_EVENT_PROVIDER_HANDLE hEventProvider,_In_ DWORD dwAuditId,_In_opt_ PSID pUserSid,_In_ PAUDIT_PARAMS pParams)
BOOL WINAPI authz.AuthzInitializeObjectAccessAuditEvent2(_In_ DWORD Flags,_In_ AUTHZ_AUDIT_EVENT_TYPE_HANDLE hAuditEventType,_In_ PWSTR szOperationType,_In_ PWSTR szObjectType,_In_ PWSTR szObjectName,_In_ PWSTR szAdditionalInfo,_In_ PWSTR szAdditionalInfo2,_Out_ PAUTHZ_AUDIT_EVENT_HANDLE phAuditEvent,_In_ DWORD dwAdditionalParameterCount)
BOOL WINAPI userenv.ExpandEnvironmentStringsForUser(_In_opt_ HANDLE hToken,_In_ LPCTSTR lpSrc,_Out_ LPTSTR lpDest,_In_ DWORD dwSize)
BOOL WINAPI userenv.ExpandEnvironmentStringsForUserW(_In_opt_ HANDLE hToken,_In_ LPCTSTR lpSrc,_Out_ LPTSTR lpDest,_In_ DWORD dwSize)
BOOL WINAPI userenv.ExpandEnvironmentStringsForUserA(_In_opt_ HANDLE hToken,_In_ LPCTSTR lpSrc,_Out_ LPTSTR lpDest,_In_ DWORD dwSize)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsGroupMbrInqBegin(unsigned long GroupNameSyntax,unsigned char *GroupName,unsigned long MemberNameSyntax,RPC_NS_HANDLE *InquiryContext None)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsGroupMbrInqBeginW(unsigned long GroupNameSyntax,unsigned char *GroupName,unsigned long MemberNameSyntax,RPC_NS_HANDLE *InquiryContext None)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsGroupMbrInqBeginA(unsigned long GroupNameSyntax,unsigned char *GroupName,unsigned long MemberNameSyntax,RPC_NS_HANDLE *InquiryContext None)
BOOL WINAPI advapi32.SetSecurityDescriptorSacl(_Inout_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_ BOOL bSaclPresent,_In_opt_ PACL pSacl,_In_ BOOL bSaclDefaulted)
LRESULT None None.OnNotify([in None None,out] tagNMHDR *pcs)
BOOL WINAPI user32.LockSetForegroundWindow(_In_ UINT uLockCode)
RPC_SS_THREAD_HANDLE RPC_ENTRY rpcrt4.RpcSmGetThreadHandle(RPC_STATUS *pStatus None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcAsyncCancelCall(PRPC_ASYNC_STATE pAsync None,BOOL fAbortCall None)
HRESULT WINAPI userenv.CreateProfile(_In_ LPCWSTR pszUserSid,_In_ LPCWSTR pszUserName,_Out_ LPWSTR pszProfilePath,_In_ DWORD cchProfilePath)
HRESULT None msident.OpenIdentityRegKey([in] DWORD dwDesiredAccess,[out] HKEY *phKey)
BOOL CALLBACK None.AuthzGetCentralAccessPolicyCallback(_In_ AUTHZ_CLIENT_CONTEXT_HANDLE hAuthzClientContext,_In_ PSID capid,_In_opt_ PVOID pArgs,_Out_ PBOOL pCentralAccessPolicyApplicable,_Out_ PVOID ppCentralAccessPolicy)
HANDLE None shell32.SHChangeNotification_Lock(_In_ HANDLE hChange,DWORD dwProcId None,_Out_opt_ PIDLIST_ABSOLUTE **pppidl,_Out_opt_ LONG *plEvent)
HRESULT None certadm.CertSrvBackupGetBackupLogs(_In_ HCSBC hbc,_Out_ WCHAR **ppwszzBackupLogFiles,_Out_ DWORD *pcbSize)
HRESULT None certadm.CertSrvBackupGetBackupLogsW(_In_ HCSBC hbc,_Out_ WCHAR **ppwszzBackupLogFiles,_Out_ DWORD *pcbSize)
BOOL WINAPI advapi32.GetWindowsAccountDomainSid(_In_ PSID pSid,_Out_opt_ PSID ppDomainSid,_Inout_ DWORD *cbSid)
VOID WINAPI kernel32.ReleaseSRWLockShared(_Inout_ PSRWLOCK SRWLock)
BOOL None crypt32.CertGetStoreProperty(_In_ HCERTSTORE hCertStore,_In_ DWORD dwPropId,_Out_ void *pvData,_Inout_ DWORD *pcbData)
typedef None None.void(WINAPI *PFN_CRYPT_OBJECT_LOCATOR_PROVIDER_FREE_PASSWORD None)
HRESULT None shimgvw.RecompressImage([in] IShellItem *psi,[in] int cx,[in] int cy,[in] int iQuality,[in] IStorage *pstg,[in None None,out] IStream **ppstrmOut)
void RPC_ENTRY rpcrt4.RpcSsDontSerializeContext(void None None)
BOOL WINAPI kernel32.DeleteTimerQueueTimer(_In_opt_ HANDLE TimerQueue,_In_ HANDLE Timer,_In_opt_ HANDLE CompletionEvent)
PDWORD WINAPI advapi32.GetSidSubAuthority(_In_ PSID pSid,_In_ DWORD nSubAuthority)
typedef None None.HRESULT(WINAPI *CryptXmlDllVerifySignature None)
BOOL WINAPI kernel32.DeleteSynchronizationBarrier(_Inout_ LPSYNCHRONIZATION_BARRIER lpBarrier)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsMgmtSetExpAge(unsigned long ExpirationAge)
RPC_STATUS RPC_ENTRY rpcrt4.RpcServerInqDefaultPrincName(unsigned long AuthnSvc,RPC_CHAR **PrincName None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcServerInqDefaultPrincNameW(unsigned long AuthnSvc,RPC_CHAR **PrincName None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcServerInqDefaultPrincNameA(unsigned long AuthnSvc,RPC_CHAR **PrincName None)
void WINAPI advapi32.BuildTrusteeWithObjectsAndName(_Inout_ PTRUSTEE pTrustee,_In_opt_ POBJECTS_AND_NAME pObjName,_In_opt_ SE_OBJECT_TYPE ObjectType,_In_opt_ LPTSTR ObjectTypeName,_In_opt_ LPTSTR InheritedObjectTypeName,_In_opt_ LPTSTR Name)
void WINAPI advapi32.BuildTrusteeWithObjectsAndNameW(_Inout_ PTRUSTEE pTrustee,_In_opt_ POBJECTS_AND_NAME pObjName,_In_opt_ SE_OBJECT_TYPE ObjectType,_In_opt_ LPTSTR ObjectTypeName,_In_opt_ LPTSTR InheritedObjectTypeName,_In_opt_ LPTSTR Name)
void WINAPI advapi32.BuildTrusteeWithObjectsAndNameA(_Inout_ PTRUSTEE pTrustee,_In_opt_ POBJECTS_AND_NAME pObjName,_In_opt_ SE_OBJECT_TYPE ObjectType,_In_opt_ LPTSTR ObjectTypeName,_In_opt_ LPTSTR InheritedObjectTypeName,_In_opt_ LPTSTR Name)
HRESULT None None.GetFolderSetData([in None None,out] tagFolderSetData *pfsd)
HRESULT None shell32.SHOpenFolderAndSelectItems(_In_ PCIDLIST_ABSOLUTE pidlFolder,UINT cidl None,_In_opt_ PCUITEMID_CHILD_ARRAY apidl,DWORD dwFlags None)
RPC_STATUS RPC_ENTRY rpcrt4.MesEncodeDynBufferHandleCreate(char **ppBuffer None,unsigned long *pEncodedSize,handle_t *pHandle None)
void RPC_ENTRY rpcrt4.RpcSsFree(void *NodeToFree None)
BOOL WINAPI crypt32.CertIsStrongHashToSign(_In_ PCCERT_STRONG_SIGN_PARA pStrongSignPara,_In_ LPCWSTR pwszCNGHashAlgid,_In_opt_ PCCERT_CONTEXT pSigningCert)
RPC_STATUS RPC_ENTRY rpcrt4.RpcMgmtEpEltInqDone(RPC_EP_INQ_HANDLE *InquiryContext None)
HRESULT None shell32.InvokeCommand(LPCMINVOKECOMMANDINFO pici None)
VOID WINAPI advapi32.BuildExplicitAccessWithName(_Inout_ PEXPLICIT_ACCESS pExplicitAccess,_In_opt_ LPTSTR pTrusteeName,_In_ DWORD AccessPermissions,_In_ ACCESS_MODE AccessMode,_In_ DWORD Inheritance)
VOID WINAPI advapi32.BuildExplicitAccessWithNameW(_Inout_ PEXPLICIT_ACCESS pExplicitAccess,_In_opt_ LPTSTR pTrusteeName,_In_ DWORD AccessPermissions,_In_ ACCESS_MODE AccessMode,_In_ DWORD Inheritance)
VOID WINAPI advapi32.BuildExplicitAccessWithNameA(_Inout_ PEXPLICIT_ACCESS pExplicitAccess,_In_opt_ LPTSTR pTrusteeName,_In_ DWORD AccessPermissions,_In_ ACCESS_MODE AccessMode,_In_ DWORD Inheritance)
BOOL WINAPI crypt32.CryptGetOIDFunctionAddress(_In_ HCRYPTOIDFUNCSET hFuncSet,_In_ DWORD dwEncodingType,_In_ LPCSTR pszOID,_In_ DWORD dwFlags,_Out_ void **ppvFuncAddr,_Out_ HCRYPTOIDFUNCADDR *phFuncAddr)
BOOL WINAPI crypt32.CryptGetDefaultOIDDllList(_In_ HCRYPTOIDFUNCSET hFuncSet,_In_ DWORD dwEncodingType,_Out_ LPWSTR pwszDllList,_Inout_ DWORD *pcchDllList)
BOOL CALLBACK None.AuthzComputeGroupsCallback(_In_ AUTHZ_CLIENT_CONTEXT_HANDLE hAuthzClientContext,_In_ PVOID Args,_Out_ PSID_AND_ATTRIBUTES *pSidAttrArray,_Out_ PDWORD pSidCount,_Out_ PSID_AND_ATTRIBUTES *pRestrictedSidAttrArray,_Out_ PDWORD pRestrictedSidCount)
HRESULT WINAPI cryptxml.CryptXmlGetStatus(HCRYPTXML hCryptXml None,CRYPT_XML_STATUS *pStatus None)
BOOL WINAPI None.CertStoreProvFindCert(_In_ HCERTSTOREPROV hStoreProv,_In_ PCCERT_STORE_PROV_FIND_INFO pFindInfo,_In_ PCCERT_CONTEXT pPrevCertContext,_In_ DWORD dwFlags,_Inout_ void **ppvStoreProvFindInfo,_Out_ PCCERT_CONTEXT *ppProvCertContext)
PCERT_RDN_ATTR WINAPI crypt32.CertFindRDNAttr(_In_ LPCSTR pszObjId,_In_ PCERT_NAME_INFO pName)
void RPC_ENTRY rpcrt4.RpcSsSetThreadHandle(RPC_SM_THREAD_HANDLE Handle None)
BOOL None wintrust.CryptCATAdminRemoveCatalog(_In_ HCATADMIN hCatAdmin,_In_ LPCWSTR pwszCatalogFile,_In_ DWORD dwFlags)
DWORD WINAPI crypt32.CertOIDToAlgId(_In_ LPCSTR pszObjId)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsGroupDelete(unsigned long GroupNameSyntax,unsigned char *GroupName)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsGroupDeleteW(unsigned long GroupNameSyntax,unsigned char *GroupName)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsGroupDeleteA(unsigned long GroupNameSyntax,unsigned char *GroupName)
BOOL WINAPI authz.AuthzCachedAccessCheck(_In_ DWORD Flags,_In_ AUTHZ_ACCESS_CHECK_RESULTS_HANDLE AuthzHandle,_In_ PAUTHZ_ACCESS_REQUEST pRequest,_In_ AUTHZ_AUDIT_EVENT_HANDLE AuditInfo,_Out_ PAUTHZ_ACCESS_REPLY pReply)
BOOL WINAPI advapi32.InitializeSecurityDescriptor(_Out_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_ DWORD dwRevision)
HRESULT CALLBACK shell32.DllGetVersion(DLLVERSIONINFO *pdvi None)
BOOL WINAPI advapi32.CryptVerifySignature(_In_ HCRYPTHASH hHash,_In_ BYTE *pbSignature,_In_ DWORD dwSigLen,_In_ HCRYPTKEY hPubKey,_In_ LPCTSTR sDescription,_In_ DWORD dwFlags)
BOOL WINAPI advapi32.CryptVerifySignatureW(_In_ HCRYPTHASH hHash,_In_ BYTE *pbSignature,_In_ DWORD dwSigLen,_In_ HCRYPTKEY hPubKey,_In_ LPCTSTR sDescription,_In_ DWORD dwFlags)
BOOL WINAPI advapi32.CryptVerifySignatureA(_In_ HCRYPTHASH hHash,_In_ BYTE *pbSignature,_In_ DWORD dwSigLen,_In_ HCRYPTKEY hPubKey,_In_ LPCTSTR sDescription,_In_ DWORD dwFlags)
BOOL WINAPI authz.AuthzReportSecurityEvent(_In_ DWORD dwFlags,_Inout_ AUTHZ_SECURITY_EVENT_PROVIDER_HANDLE hEventProvider,_In_ DWORD dwAuditId,_In_opt_ PSID pUserSid,_In_ DWORD dwCount,_In_ ... None)
HRESULT WINAPI userenv.CreateAppContainerProfile(_In_ PCWSTR pszAppContainerName,_In_ PCWSTR pszDisplayName,_In_ PCWSTR pszDescription,_In_ PSID_AND_ATTRIBUTES pCapabilities,_In_ DWORD dwCapabilityCount,_Out_ PSID *ppSidAppContainerSid)
BOOL WINAPI crypt32.CertIsValidCRLForCertificate(_In_ PCCERT_CONTEXT pCert,_In_ PCCRL_CONTEXT pCRL,_In_ DWORD dwFlags,_In_ void *pvReserved)
BOOL WINAPI crypt32.CryptExportPublicKeyInfo(_In_ HCRYPTPROV_OR_NCRYPT_KEY_HANDLE hCryptProvOrNCryptKey,_In_ DWORD dwKeySpec,_In_ DWORD dwCertEncodingType,_Out_ PCERT_PUBLIC_KEY_INFO pInfo,_Inout_ DWORD *pcbInfo)
HRESULT None None.GetName([out] LPWSTR *ppszName)
BOOL WINAPI crypt32.CertVerifyValidityNesting(_In_ PCERT_INFO pSubjectInfo,_In_ PCERT_INFO pIssuerInfo)
void WINAPI kernel32.LeaveCriticalSection(_Inout_ LPCRITICAL_SECTION lpCriticalSection)
BOOL None None.CertStoreProvFreeFindCTL(_In_ HCERTSTOREPROV hStoreProv,_In_ PCCTL_CONTEXT pCtlContext,_In_ void *pvStoreProvFindInfo,_In_ DWORD dwFlags)
BOOL WINAPI kernel32.IsWow64Process(_In_ HANDLE hProcess,_Out_ PBOOL Wow64Process)
RPC_STATUS RPC_ENTRY rpcrt4.RpcRevertContainerImpersonation(void None None)
BOOL WINAPI kernel32.AddIntegrityLabelToBoundaryDescriptor(_Inout_ HANDLE *BoundaryDescriptor,_In_ PSID IntegrityLabel)
HRESULT None None.GetType([out] SYNCMGR_HANDLER_TYPE *pnType)
void RPC_ENTRY rpcrt4.RpcSsSetClientAllocFree(RPC_CLIENT_ALLOC *pfnAllocate None,RPC_CLIENT_FREE *pfnFree None)
DWORD WINAPI advapi32.TreeSetNamedSecurityInfo(_In_ LPTSTR pObjectName,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_In_opt_ PSID pOwner,_In_opt_ PSID pGroup,_In_opt_ PACL pDacl,_In_opt_ PACL pSacl,_In_ DWORD dwAction,_In_ FN_PROGRESS fnProgress,_In_ PROG_INVOKE_SETTING ProgressInvokeSetting,_In_opt_ PVOID Args)
DWORD WINAPI advapi32.TreeSetNamedSecurityInfoW(_In_ LPTSTR pObjectName,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_In_opt_ PSID pOwner,_In_opt_ PSID pGroup,_In_opt_ PACL pDacl,_In_opt_ PACL pSacl,_In_ DWORD dwAction,_In_ FN_PROGRESS fnProgress,_In_ PROG_INVOKE_SETTING ProgressInvokeSetting,_In_opt_ PVOID Args)
DWORD WINAPI advapi32.TreeSetNamedSecurityInfoA(_In_ LPTSTR pObjectName,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_In_opt_ PSID pOwner,_In_opt_ PSID pGroup,_In_opt_ PACL pDacl,_In_opt_ PACL pSacl,_In_ DWORD dwAction,_In_ FN_PROGRESS fnProgress,_In_ PROG_INVOKE_SETTING ProgressInvokeSetting,_In_opt_ PVOID Args)
NTSTATUS None advapi32.RtlEncryptMemory(_Inout_ PVOID Memory,_In_ ULONG MemoryLength,_In_ ULONG OptionFlags)
FORCEINLINE HANDLE None.GetCurrentThreadEffectiveToken(void None None)
BOOL WINAPI advapi32.GetSecurityDescriptorSacl(_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_Out_ LPBOOL lpbSaclPresent,_Out_ PACL *pSacl,_Out_ LPBOOL lpbSaclDefaulted)
BOOL WINAPI kernel32.InitOnceBeginInitialize(_Inout_ LPINIT_ONCE lpInitOnce,_In_ DWORD dwFlags,_Out_ PBOOL fPending,_Out_opt_ LPVOID *lpContext)
LPVOID WINAPI crypt32.CryptMemRealloc(_In_ LPVOID pv,_In_ ULONG cbSize)
NTSTATUS None None.GetClientInfo(_Out_ PSECPKG_CLIENT_INFO ClientInfo)
typedef None None.HRESULT(WINAPI *CryptXmlDllGetAlgorithmInfo None)
BOOL WINAPI advapi32.AllocateAndInitializeSid(_In_ PSID_IDENTIFIER_AUTHORITY pIdentifierAuthority,_In_ BYTE nSubAuthorityCount,_In_ DWORD dwSubAuthority0,_In_ DWORD dwSubAuthority1,_In_ DWORD dwSubAuthority2,_In_ DWORD dwSubAuthority3,_In_ DWORD dwSubAuthority4,_In_ DWORD dwSubAuthority5,_In_ DWORD dwSubAuthority6,_In_ DWORD dwSubAuthority7,_Out_ PSID *pSid)
BOOL __inline None.IDListContainerIsConsistent(_In_ PCUIDLIST_RELATIVE pidl,_In_ UINT cbAlloc)
BOOL WINAPI advapi32.AddAuditAccessObjectAce(_Inout_ PACL pAcl,_In_ DWORD dwAceRevision,_In_ DWORD AceFlags,_In_ DWORD AccessMask,_In_opt_ GUID *ObjectTypeGuid,_In_opt_ GUID *InheritedObjectTypeGuid,_In_ PSID pSid,_In_ BOOL bAuditSuccess,_In_ BOOL bAuditFailure)
BOOL WINAPI None.CertStoreProvFindCRL(_In_ HCERTSTOREPROV hStoreProv,_In_ PCCERT_STORE_PROV_FIND_INFO pFindInfo,_In_ PCCRL_CONTEXT pPrevCrlContext,_In_ DWORD dwFlags,_Inout_ void **ppvStoreProvFindInfo,_Out_ PCCRL_CONTEXT *ppProvCrlContext)
BOOL WINAPI advapi32.CryptGetProvParam(_In_ HCRYPTPROV hProv,_In_ DWORD dwParam,_Out_ BYTE *pbData,_Inout_ DWORD *pdwDataLen,_In_ DWORD dwFlags)
LPCWSTR WINAPI crypt32.CryptFindLocalizedName(_In_ LPCWSTR pwszCryptName)
DWORD WINAPI crypt32.CertEnumCTLContextProperties(_In_ PCCTL_CONTEXT pCtlContext,_In_ DWORD dwPropId)
BOOL WINAPI crypt32.CertResyncCertificateChainEngine(_In_opt_ HCERTCHAINENGINE hChainEngine)
RPC_STATUS RPC_ENTRY rpcrt4.RpcServerInterfaceGroupActivate(_In_ RPC_INTERFACE_GROUP IfGroup)
BOOL WINAPI crypt32.CryptSIPGetSignedDataMsg(_In_ SIP_SUBJECTINFO *pSubjectInfo,_Out_ DWORD *pdwEncodingType,_In_ DWORD dwIndex,_Inout_ DWORD *pcbSignedDataMsg,_Out_ BYTE *pbSignedDataMsg)
NTSTATUS None None.SpAcceptCredentials(_In_ SECURITY_LOGON_TYPE LogonType,_In_ PUNICODE_STRING AccountName,_In_ PSECPKG_PRIMARY_CRED PrimaryCredentials,_In_ PSECPKG_SUPPLEMENTAL_CRED SupplementalCredentials)
RPC_STATUS RPC_ENTRY rpcrt4.RpcServerUseProtseq(unsigned char *ProtSeq,unsigned int MaxCalls,void *SecurityDescriptor None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcServerUseProtseqW(unsigned char *ProtSeq,unsigned int MaxCalls,void *SecurityDescriptor None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcServerUseProtseqA(unsigned char *ProtSeq,unsigned int MaxCalls,void *SecurityDescriptor None)
BOOL WINAPI advapi32.CryptAcquireContext(_Out_ HCRYPTPROV *phProv,_In_ LPCTSTR pszContainer,_In_ LPCTSTR pszProvider,_In_ DWORD dwProvType,_In_ DWORD dwFlags)
BOOL WINAPI advapi32.CryptAcquireContextW(_Out_ HCRYPTPROV *phProv,_In_ LPCTSTR pszContainer,_In_ LPCTSTR pszProvider,_In_ DWORD dwProvType,_In_ DWORD dwFlags)
BOOL WINAPI advapi32.CryptAcquireContextA(_Out_ HCRYPTPROV *phProv,_In_ LPCTSTR pszContainer,_In_ LPCTSTR pszProvider,_In_ DWORD dwProvType,_In_ DWORD dwFlags)
BOOL WINAPI crypt32.CertVerifySubjectCertificateContext(_In_ PCCERT_CONTEXT pSubject,_In_opt_ PCCERT_CONTEXT pIssuer,_Inout_ DWORD *pdwFlags)
BOOL WINAPI kernel32.UnregisterWaitEx(_In_ HANDLE WaitHandle,_In_opt_ HANDLE CompletionEvent)
BOOLEAN WINAPI kernel32.TryAcquireSRWLockExclusive(_Inout_ PSRWLOCK SRWLock)
BOOL WINAPI advapi32.CryptHashData(_In_ HCRYPTHASH hHash,_In_ BYTE *pbData,_In_ DWORD dwDataLen,_In_ DWORD dwFlags)
Sub None None.SINK_OnObjectReady(objObject None None,objAsyncContext None None)
BOOL WINAPI advapi32.AccessCheckByTypeResultListAndAuditAlarmByHandle(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ HANDLE ClientToken,_In_ LPCTSTR ObjectTypeName,_In_opt_ LPCTSTR ObjectName,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_opt_ PSID PrincipalSelfSid,_In_ DWORD DesiredAccess,_In_ AUDIT_EVENT_TYPE AuditType,_In_ DWORD Flags,_Inout_opt_ POBJECT_TYPE_LIST ObjectTypeList,_In_ DWORD ObjectTypeListLength,_In_ PGENERIC_MAPPING GenericMapping,_In_ BOOL ObjectCreation,_Out_ LPDWORD GrantedAccess,_Out_ LPDWORD AccessStatusList,_Out_ LPBOOL pfGenerateOnClose)
BOOL WINAPI advapi32.AccessCheckByTypeResultListAndAuditAlarmByHandleW(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ HANDLE ClientToken,_In_ LPCTSTR ObjectTypeName,_In_opt_ LPCTSTR ObjectName,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_opt_ PSID PrincipalSelfSid,_In_ DWORD DesiredAccess,_In_ AUDIT_EVENT_TYPE AuditType,_In_ DWORD Flags,_Inout_opt_ POBJECT_TYPE_LIST ObjectTypeList,_In_ DWORD ObjectTypeListLength,_In_ PGENERIC_MAPPING GenericMapping,_In_ BOOL ObjectCreation,_Out_ LPDWORD GrantedAccess,_Out_ LPDWORD AccessStatusList,_Out_ LPBOOL pfGenerateOnClose)
BOOL WINAPI advapi32.AccessCheckByTypeResultListAndAuditAlarmByHandleA(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ HANDLE ClientToken,_In_ LPCTSTR ObjectTypeName,_In_opt_ LPCTSTR ObjectName,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_opt_ PSID PrincipalSelfSid,_In_ DWORD DesiredAccess,_In_ AUDIT_EVENT_TYPE AuditType,_In_ DWORD Flags,_Inout_opt_ POBJECT_TYPE_LIST ObjectTypeList,_In_ DWORD ObjectTypeListLength,_In_ PGENERIC_MAPPING GenericMapping,_In_ BOOL ObjectCreation,_Out_ LPDWORD GrantedAccess,_Out_ LPDWORD AccessStatusList,_Out_ LPBOOL pfGenerateOnClose)
BOOL WINAPI advapi32.CreatePrivateObjectSecurityWithMultipleInheritance(_In_opt_ PSECURITY_DESCRIPTOR ParentDescriptor,_In_opt_ PSECURITY_DESCRIPTOR CreatorDescriptor,_Out_ PSECURITY_DESCRIPTOR *NewDescriptor,_In_opt_ GUID **ObjectTypes,_In_ ULONG GuidCount,_In_ BOOL IsContainerObject,_In_ ULONG AutoInheritFlags,_In_opt_ HANDLE Token,_In_ PGENERIC_MAPPING GenericMapping)
RPC_STATUS RPC_ENTRY rpcrt4.RpcServerInqIf(RPC_IF_HANDLE IfSpec None,UUID *MgrTypeUuid None,RPC_MGR_EPV **MgrEpv None)
BOOL WINAPI crypt32.CryptHashPublicKeyInfo(_In_ HCRYPTPROV_LEGACY hCryptProv,_In_ ALG_ID Algid,_In_ DWORD dwFlags,_In_ DWORD dwCertEncodingType,_In_ PCERT_PUBLIC_KEY_INFO pInfo,_Out_ BYTE *pbComputedHash,_Inout_ DWORD *pcbComputedHash)
BOOL WINAPI advapi32.CryptGetKeyParam(_In_ HCRYPTKEY hKey,_In_ DWORD dwParam,_Out_ BYTE *pbData,_Inout_ DWORD *pdwDataLen,_In_ DWORD dwFlags)
BOOL WINAPI crypt32.CryptGetOIDFunctionValue(_In_ DWORD dwEncodingType,_In_ LPCSTR pszFuncName,_In_ LPCSTR pszOID,_In_ LPCWSTR pwszValueName,_Out_ DWORD *pdwValueType,_Out_ BYTE *pbValueData,_Inout_ DWORD *pcbValueData)
DWORD WINAPI crypt32.CertNameToStr(_In_ DWORD dwCertEncodingType,_In_ PCERT_NAME_BLOB pName,_In_ DWORD dwStrType,_Out_ LPTSTR psz,_In_ DWORD csz)
DWORD WINAPI crypt32.CertNameToStrW(_In_ DWORD dwCertEncodingType,_In_ PCERT_NAME_BLOB pName,_In_ DWORD dwStrType,_Out_ LPTSTR psz,_In_ DWORD csz)
DWORD WINAPI crypt32.CertNameToStrA(_In_ DWORD dwCertEncodingType,_In_ PCERT_NAME_BLOB pName,_In_ DWORD dwStrType,_Out_ LPTSTR psz,_In_ DWORD csz)
HRESULT None None.RenameItem([in] IShellItem *psiItem,[in] LPCWSTR pszNewName,[in None None,unique] IFileOperationProgressSink *pfopsItem)
BOOL WINAPI crypt32.CertEnumSystemStoreLocation(_In_ DWORD dwFlags,_In_ void *pvArg,_In_ PFN_CERT_ENUM_SYSTEM_STORE_LOCATION pfnEnum)
BOOL WINAPI crypt32.CryptUnregisterDefaultOIDFunction(_In_ DWORD dwEncodingType,_In_ LPCSTR pszFuncName,_In_ LPCWSTR pwszDll)
UINT None shell32.DragQueryFile(_In_ HDROP hDrop,_In_ UINT iFile,_Out_ LPTSTR lpszFile,UINT cch None)
UINT None shell32.DragQueryFileW(_In_ HDROP hDrop,_In_ UINT iFile,_Out_ LPTSTR lpszFile,UINT cch None)
UINT None shell32.DragQueryFileA(_In_ HDROP hDrop,_In_ UINT iFile,_Out_ LPTSTR lpszFile,UINT cch None)
LSTATUS None shlwapi.SHRegGetValue(_In_ HKEY hkey,_In_ LPCTSTR pszSubKey,_In_ LPCTSTR pszValue,_In_ SRRF srrfFlags,_Inout_ LPDWORD pdwType,_Out_ LPVOID pvData,_Inout_ LPDWORD pcbData)
LSTATUS None shlwapi.SHRegGetValueW(_In_ HKEY hkey,_In_ LPCTSTR pszSubKey,_In_ LPCTSTR pszValue,_In_ SRRF srrfFlags,_Inout_ LPDWORD pdwType,_Out_ LPVOID pvData,_Inout_ LPDWORD pcbData)
LSTATUS None shlwapi.SHRegGetValueA(_In_ HKEY hkey,_In_ LPCTSTR pszSubKey,_In_ LPCTSTR pszValue,_In_ SRRF srrfFlags,_Inout_ LPDWORD pdwType,_Out_ LPVOID pvData,_Inout_ LPDWORD pcbData)
RPC_STATUS RPC_ENTRY rpcrt4.RpcBindingToStringBinding(RPC_BINDING_HANDLE Binding None,unsigned char **StringBinding)
RPC_STATUS RPC_ENTRY rpcrt4.RpcBindingToStringBindingW(RPC_BINDING_HANDLE Binding None,unsigned char **StringBinding)
RPC_STATUS RPC_ENTRY rpcrt4.RpcBindingToStringBindingA(RPC_BINDING_HANDLE Binding None,unsigned char **StringBinding)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsProfileEltInqDone(RPC_NS_HANDLE *InquiryContext None)
BOOL WINAPI advapi32.PrivilegeCheck(_In_ HANDLE ClientToken,_Inout_ PPRIVILEGE_SET RequiredPrivileges,_Out_ LPBOOL pfResult)
RPC_STATUS RPC_ENTRY rpcrt4.RpcSmDisableAllocate(void None None)
BOOL WINAPI crypt32.CryptSIPGetCaps(_In_ SIP_SUBJECTINFO *pSubjInfo,_Inout_ SIP_CAP_SET *pCaps)
HRESULT None twinapi.SetApplicationViewState([in] APPLICATION_VIEW_STATE viewState)
BOOL None wintrust.CryptCATCatalogInfoFromContext(_In_ HCATINFO hCatInfo,_Inout_ CATALOG_INFO *psCatInfo,_In_ DWORD dwFlags)
PVOID WINAPI advapi32.FreeSid(_In_ PSID pSid)
RPC_STATUS RPC_ENTRY rpcrt4.RpcCancelThread(HANDLE ThreadHandle None)
BOOL WINAPI advapi32.AccessCheckByTypeResultListAndAuditAlarm(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ LPCTSTR ObjectTypeName,_In_opt_ LPCTSTR ObjectName,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_opt_ PSID PrincipalSelfSid,_In_ DWORD DesiredAccess,_In_ AUDIT_EVENT_TYPE AuditType,_In_ DWORD Flags,_Inout_opt_ POBJECT_TYPE_LIST ObjectTypeList,_In_ DWORD ObjectTypeListLength,_In_ PGENERIC_MAPPING GenericMapping,_In_ BOOL ObjectCreation,_Out_ LPDWORD GrantedAccess,_Out_ LPDWORD AccessStatusList,_Out_ LPBOOL pfGenerateOnClose)
BOOL WINAPI advapi32.AccessCheckByTypeResultListAndAuditAlarmW(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ LPCTSTR ObjectTypeName,_In_opt_ LPCTSTR ObjectName,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_opt_ PSID PrincipalSelfSid,_In_ DWORD DesiredAccess,_In_ AUDIT_EVENT_TYPE AuditType,_In_ DWORD Flags,_Inout_opt_ POBJECT_TYPE_LIST ObjectTypeList,_In_ DWORD ObjectTypeListLength,_In_ PGENERIC_MAPPING GenericMapping,_In_ BOOL ObjectCreation,_Out_ LPDWORD GrantedAccess,_Out_ LPDWORD AccessStatusList,_Out_ LPBOOL pfGenerateOnClose)
BOOL WINAPI advapi32.AccessCheckByTypeResultListAndAuditAlarmA(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ LPCTSTR ObjectTypeName,_In_opt_ LPCTSTR ObjectName,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_opt_ PSID PrincipalSelfSid,_In_ DWORD DesiredAccess,_In_ AUDIT_EVENT_TYPE AuditType,_In_ DWORD Flags,_Inout_opt_ POBJECT_TYPE_LIST ObjectTypeList,_In_ DWORD ObjectTypeListLength,_In_ PGENERIC_MAPPING GenericMapping,_In_ BOOL ObjectCreation,_Out_ LPDWORD GrantedAccess,_Out_ LPDWORD AccessStatusList,_Out_ LPBOOL pfGenerateOnClose)
BOOL WINAPI authz.AuthzModifySecurityAttributes(_In_ AUTHZ_CLIENT_CONTEXT_HANDLE hAuthzClientContext,_In_ PAUTHZ_SECURITY_ATTRIBUTE_OPERATION pOperations,_In_ PAUTHZ_SECURITY_ATTRUBUTES_INFORMATION pAttributes)
RPC_STATUS RPC_ENTRY rpcrt4.RpcSmEnableAllocate(void None None)
RPC_STATUS None rpcrt4.RpcBindingBind(_In_opt_ PRPC_ASYNC_STATE pAsync,_In_ RPC_BINDING_HANDLE Binding,_In_ RPC_IF_HANDLE IfSpec)
typedef None None.BOOL(WINAPI *PFN_CERT_CREATE_CONTEXT_SORT_FUNC None)
BOOL WINAPI crypt32.CryptFindCertificateKeyProvInfo(_In_ PCCERT_CONTEXT pCert,_In_ DWORD dwFlags,_In_ void *pvReserved)
RPC_STATUS RPC_ENTRY rpcrt4.RpcMgmtInqIfIds(RPC_BINDING_HANDLE Binding None,RPC_IF_ID_VECTOR **IfIdVector None)
HRESULT WINAPI dssec.DSEditSecurity(_In_ HWND hwndOwner,_In_ LPCWSTR pwszObjectPath,_In_opt_ LPCWSTR pwszObjectClass,_In_ DWORD dwFlags,_In_opt_ LPCWSTR *pwszCaption,_In_opt_ PFNREADOBJECTSECURITY pfnReadSD,_In_opt_ PFNWRITEOBJECTSECURITY pfnWriteSD,_In_ LPARAM lpContext)
RPC_STATUS RPC_ENTRY rpcrt4.RpcBindingInqOption(RPC_BINDING_HANDLE hBinding None,unsigned long Option,unsigned long *pOptionValue)
BOOL WINAPI crypt32.CryptSIPCreateIndirectData(_In_ SIP_SUBJECTINFO *pSubjectInfo,_Inout_ DWORD *pcbIndirectData,_Out_ SIP_INDIRECT_DATA *pIndirectData)
BOOL WINAPI advapi32.CryptHashSessionKey(_In_ HCRYPTHASH hHash,_In_ HCRYPTKEY hKey,_In_ DWORD dwFlags)
BOOL WINAPI crypt32.CertSerializeCertificateStoreElement(_In_ PCCERT_CONTEXT pCertContext,_In_ DWORD dwFlags,_Out_ BYTE *pbElement,_Inout_ DWORD *pcbElement)
RPC_STATUS RPC_ENTRY rpcrt4.RpcBindingSetOption(RPC_BINDING_HANDLE hBinding None,unsigned long Option,unsigned long OptionValue)
BOOL WINAPI authz.AuthzModifySids(_In_ AUTHZ_CLIENT_CONTEXT_HANDLE hAuthzClientContext,_In_ AUTHZ_CONTEXT_INFORMATION_CLASS SidClass,_In_ PAUTHZ_SID_OPERATION pSidOperations,_In_opt_ PTOKEN_GROUPS pSids)
FORCEINLINE HANDLE None.GetCurrentThreadToken(void None None)
HRESULT WINAPI cryptxml.CryptXmlVerifySignature(_In_ HCRYPTXML hSignature,_In_opt_ BCRYPT_KEY_HANDLE hKey,DWORD dwFlags None)
HRESULT WINAPI aclui.EditSecurityAdvanced(_In_ HWND hwndOwner,_In_ LPSECURITYINFO psi,_In_ SI_PAGE_TYPE uSIPage)
BOOL WINAPI authz.AuthzInitializeRemoteResourceManager(_In_ PAUTHZ_RPC_INIT_INFO_CLIENT pRpcInitInfo,_Out_ PAUTHZ_RESOURCE_MANAGER_HANDLE phAuthzResourceManager)
BOOL WINAPI crypt32.PFXExportCertStore(_In_ HCERTSTORE hStore,_Inout_ CRYPT_DATA_BLOB *pPFX,_In_ LPCWSTR szPassword,_In_ DWORD dwFlags)
BOOL WINAPI advapi32.LookupAccountSid(_In_opt_ LPCTSTR lpSystemName,_In_ PSID lpSid,_Out_opt_ LPTSTR lpName,_Inout_ LPDWORD cchName,_Out_opt_ LPTSTR lpReferencedDomainName,_Inout_ LPDWORD cchReferencedDomainName,_Out_ PSID_NAME_USE peUse)
BOOL WINAPI advapi32.LookupAccountSidW(_In_opt_ LPCTSTR lpSystemName,_In_ PSID lpSid,_Out_opt_ LPTSTR lpName,_Inout_ LPDWORD cchName,_Out_opt_ LPTSTR lpReferencedDomainName,_Inout_ LPDWORD cchReferencedDomainName,_Out_ PSID_NAME_USE peUse)
BOOL WINAPI advapi32.LookupAccountSidA(_In_opt_ LPCTSTR lpSystemName,_In_ PSID lpSid,_Out_opt_ LPTSTR lpName,_Inout_ LPDWORD cchName,_Out_opt_ LPTSTR lpReferencedDomainName,_Inout_ LPDWORD cchReferencedDomainName,_Out_ PSID_NAME_USE peUse)
BOOL WINAPI advapi32.DuplicateTokenEx(_In_ HANDLE hExistingToken,_In_ DWORD dwDesiredAccess,_In_opt_ LPSECURITY_ATTRIBUTES lpTokenAttributes,_In_ SECURITY_IMPERSONATION_LEVEL ImpersonationLevel,_In_ TOKEN_TYPE TokenType,_Out_ PHANDLE phNewToken)
BOOL WINAPI crypt32.CryptExportPKCS8Ex(_In_ CRYPT_PKCS8_EXPORT_PARAMS *psExportParams,_In_ DWORD dwFlags,_In_opt_ void *pvAuxInfo,_Out_opt_ BYTE *pbPrivateKeyBlob,_Inout_ DWORD *pcbPrivateKeyBlob)
DWORD WINAPI advapi32.GetSidLengthRequired(_In_ UCHAR nSubAuthorityCount)
BOOL WINAPI user32.MoveWindow(_In_ HWND hWnd,_In_ int X,_In_ int Y,_In_ int nWidth,_In_ int nHeight,_In_ BOOL bRepaint)
BOOL WINAPI advapi32.SetSecurityDescriptorControl(_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_ SECURITY_DESCRIPTOR_CONTROL ControlBitsOfInterest,_In_ SECURITY_DESCRIPTOR_CONTROL ControlBitsToSet)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsGroupMbrInqNext(RPC_NS_HANDLE InquiryContext None,unsigned char **MemberName)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsGroupMbrInqNextW(RPC_NS_HANDLE InquiryContext None,unsigned char **MemberName)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsGroupMbrInqNextA(RPC_NS_HANDLE InquiryContext None,unsigned char **MemberName)
HRESULT WINAPI cryptxml.CryptXmlClose(_In_ HXML hCryptXml)
RPC_STATUS RPC_ENTRY rpcrt4.RpcServerUseProtseqEp(unsigned char *Protseq,unsigned int MaxCalls,unsigned char *Endpoint,void *SecurityDescriptor None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcServerUseProtseqEpW(unsigned char *Protseq,unsigned int MaxCalls,unsigned char *Endpoint,void *SecurityDescriptor None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcServerUseProtseqEpA(unsigned char *Protseq,unsigned int MaxCalls,unsigned char *Endpoint,void *SecurityDescriptor None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcServerUnregisterIf(RPC_IF_HANDLE IfSpec None,UUID *MgrTypeUuid None,unsigned int WaitForCallsToComplete)
int RPC_ENTRY rpcrt4.UuidEqual(UUID __RPC_FAR *Uuid1,UUID __RPC_FAR *Uuid2,RPC_STATUS __RPC_FAR *Status)
RPC_STATUS RPC_ENTRY rpcrt4.RpcMgmtWaitServerListen(void None None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcServerUseAllProtseqsIf(unsigned int MaxCalls,RPC_IF_HANDLE IfSpec None,void *SecurityDescriptor None)
BOOL WINAPI crypt32.CertCreateCertificateChainEngine(_In_ PCERT_CHAIN_ENGINE_CONFIG pConfig,_Out_ HCERTCHAINENGINE *phChainEngine)
PCCERT_CONTEXT WINAPI crypt32.CertGetIssuerCertificateFromStore(_In_ HCERTSTORE hCertStore,_In_ PCCERT_CONTEXT pSubjectContext,_In_opt_ PCCERT_CONTEXT pPrevIssuerContext,_Inout_ DWORD *pdwFlags)
BOOL WINAPI crypt32.CryptUnprotectData(_In_ DATA_BLOB *pDataIn,_Out_opt_ LPWSTR *ppszDataDescr,_In_opt_ DATA_BLOB *pOptionalEntropy,_Reserved_ PVOID pvReserved,_In_opt_ CRYPTPROTECT_PROMPTSTRUCT *pPromptStruct,_In_ DWORD dwFlags,_Out_ DATA_BLOB *pDataOut)
BOOL WINAPI user32.SetWindowPos(_In_ HWND hWnd,_In_opt_ HWND hWndInsertAfter,_In_ int X,_In_ int Y,_In_ int cx,_In_ int cy,_In_ UINT uFlags)
BOOL None shlwapi.SHFreeShared(_In_ HANDLE hData,_In_ DWORD dwProcessId)
BOOL WINAPI advapi32.CryptContextAddRef(_In_ HCRYPTPROV hProv,_In_ DWORD *pdwReserved,_In_ DWORD dwFlags)
BOOL None shell32.Shell_GetImageLists(_In_ HIMAGELIST *phiml,_In_ HIMAGELIST *phimlSmall)
RPC_STATUS RPC_ENTRY rpcrt4.RpcBindingFromStringBinding(unsigned char *StringBinding,RPC_BINDING_HANDLE *Binding None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcBindingFromStringBindingW(unsigned char *StringBinding,RPC_BINDING_HANDLE *Binding None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcBindingFromStringBindingA(unsigned char *StringBinding,RPC_BINDING_HANDLE *Binding None)
BOOL WINAPI crypt32.CertAddCRLContextToStore(_In_ HCERTSTORE hCertStore,_In_ PCCRL_CONTEXT pCrlContext,_In_ DWORD dwAddDisposition,_Out_opt_ PCCRL_CONTEXT *ppStoreContext)
BOOL WINAPI advapi32.SetTokenInformation(_In_ HANDLE TokenHandle,_In_ TOKEN_INFORMATION_CLASS TokenInformationClass,_In_ LPVOID TokenInformation,_In_ DWORD TokenInformationLength)
BOOL WINAPI advapi32.AddAccessAllowedAceEx(_Inout_ PACL pAcl,_In_ DWORD dwAceRevision,_In_ DWORD AceFlags,_In_ DWORD AccessMask,_In_ PSID pSid)
BOOL CALLBACK None.InitOnceCallback(_Inout_ PINIT_ONCE InitOnce,_Inout_opt_ PVOID Parameter,_Out_opt_ PVOID *Context)
BOOL WINAPI authz.AuthzUninstallSecurityEventSource(_In_ DWORD dwFlags,_In_ PCWSTR szEventSourceName)
LPTSTR WINAPI advapi32.GetTrusteeName(_In_ PTRUSTEE pTrustee)
LPTSTR WINAPI advapi32.GetTrusteeNameW(_In_ PTRUSTEE pTrustee)
LPTSTR WINAPI advapi32.GetTrusteeNameA(_In_ PTRUSTEE pTrustee)
void RPC_ENTRY rpcrt4.RpcSsEnableAllocate(void None None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcErrorLoadErrorInfo(_In_ PVOID ErrorBlob,_In_ size_t BlobSize,_Out_ RPC_ERROR_ENUM_HANDLE *EnumHandle)
BOOL None None.WlxGetSourceDesktop(_In_ HANDLE hWlx,_Out_ PWLX_DESKTOP *ppDesktop)
NTSTATUS WINAPI ntdll.RtlConvertSidToUnicodeString(_Out_ PUNICODE_STRING UnicodeString,_In_ PSID Sid,_In_ BOOLEAN AllocateDestinationString)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsMgmtEntryCreate(unsigned long EntryNameSyntax,unsigned char *EntryName)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsMgmtEntryCreateW(unsigned long EntryNameSyntax,unsigned char *EntryName)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsMgmtEntryCreateA(unsigned long EntryNameSyntax,unsigned char *EntryName)
BOOL WINAPI advapi32.CopySid(_In_ DWORD nDestinationSidLength,_Out_ PSID pDestinationSid,_In_ PSID pSourceSid)
BOOL WINAPI advapi32.GetKernelObjectSecurity(_In_ HANDLE Handle,_In_ SECURITY_INFORMATION RequestedInformation,_Out_opt_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_ DWORD nLength,_Out_ LPDWORD lpnLengthNeeded)
RPC_STATUS RPC_ENTRY rpcrt4.RpcMgmtInqDefaultProtectLevel(unsigned int AuthnSvc,unsigned int *AuthnLevel)
RPC_STATUS RPC_ENTRY rpcrt4.RpcMgmtStopServerListening(RPC_BINDING_HANDLE Binding None)
BOOL None wintrust.CryptCATClose(_In_ HANDLE hCatalog)
BOOL WINAPI advapi32.AddMandatoryAce(_Inout_ PACL pAcl,_In_ DWORD dwAceRevision,_In_ DWORD AceFlags,_In_ DWORD MandatoryPolicy,_In_ PSID pLabelSid)
HRESULT None shell32.CIDLData_CreateFromIDArray(_In_ PCIDLIST_ABSOLUTE pidlFolder,_In_ UINT cidl,_In_ PCUIDLIST_RELATIVE_ARRAY apidl,_Out_ IDataObject **ppdtobj)
void WINAPI crypt32.CertFreeCertificateChainEngine(_In_ HCERTCHAINENGINE hChainEngine)
BOOL WINAPI advapi32.DeleteAce(_Inout_ PACL pAcl,_In_ DWORD dwAceIndex)
DWORD WINAPI advapi32.GetNamedSecurityInfo(_In_ LPTSTR pObjectName,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_Out_opt_ PSID *ppsidOwner,_Out_opt_ PSID *ppsidGroup,_Out_opt_ PACL *ppDacl,_Out_opt_ PACL *ppSacl,_Out_opt_ PSECURITY_DESCRIPTOR *ppSecurityDescriptor)
DWORD WINAPI advapi32.GetNamedSecurityInfoW(_In_ LPTSTR pObjectName,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_Out_opt_ PSID *ppsidOwner,_Out_opt_ PSID *ppsidGroup,_Out_opt_ PACL *ppDacl,_Out_opt_ PACL *ppSacl,_Out_opt_ PSECURITY_DESCRIPTOR *ppSecurityDescriptor)
DWORD WINAPI advapi32.GetNamedSecurityInfoA(_In_ LPTSTR pObjectName,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_Out_opt_ PSID *ppsidOwner,_Out_opt_ PSID *ppsidGroup,_Out_opt_ PACL *ppDacl,_Out_opt_ PACL *ppSacl,_Out_opt_ PSECURITY_DESCRIPTOR *ppSecurityDescriptor)
RPC_STATUS None rpcrt4.RpcBindingUnbind(_In_ RPC_BINDING_HANDLE Binding)
VOID WINAPI advapi32.MapGenericMask(_Inout_ PDWORD AccessMask,_In_ PGENERIC_MAPPING GenericMapping)
DWORD WINAPI crypt32.CertGetNameString(_In_ PCCERT_CONTEXT pCertContext,_In_ DWORD dwType,_In_ DWORD dwFlags,_In_ void *pvTypePara,_Out_ LPTSTR pszNameString,_In_ DWORD cchNameString)
DWORD WINAPI crypt32.CertGetNameStringW(_In_ PCCERT_CONTEXT pCertContext,_In_ DWORD dwType,_In_ DWORD dwFlags,_In_ void *pvTypePara,_Out_ LPTSTR pszNameString,_In_ DWORD cchNameString)
DWORD WINAPI crypt32.CertGetNameStringA(_In_ PCCERT_CONTEXT pCertContext,_In_ DWORD dwType,_In_ DWORD dwFlags,_In_ void *pvTypePara,_Out_ LPTSTR pszNameString,_In_ DWORD cchNameString)
BOOL WINAPI advapi32.AddAccessAllowedObjectAce(_Inout_ PACL pAcl,_In_ DWORD dwAceRevision,_In_ DWORD AceFlags,_In_ DWORD AccessMask,_In_opt_ GUID *ObjectTypeGuid,_In_opt_ GUID *InheritedObjectTypeGuid,_In_ PSID pSid)
BOOL WINAPI crypt32.CryptUnregisterOIDFunction(_In_ DWORD dwEncodingType,_In_ LPCSTR pszFuncName,_In_ LPCSTR pszOID)
HRESULT CALLBACK None.PFN_CRYPT_XML_DATA_PROVIDER_READ(_Inout_ void *pvCallbackState,_Out_ BYTE *pbData,_In_ ULONG cbData,_Out_ ULONG *pcbRead)
RPC_STATUS RPC_ENTRY rpcrt4.RpcSmSwapClientAllocFree(RPC_CLIENT_ALLOC *pfnAllocate None,RPC_CLIENT_FREE *pfnFree None,RPC_CLIENT_ALLOC **pfnOldAllocate None,RPC_CLIENT_FREE **pfnOldFree None)
BOOL WINAPI authz.AuthzInitializeContextFromToken(_In_ DWORD Flags,_In_ HANDLE TokenHandle,_In_ AUTHZ_RESOURCE_MANAGER_HANDLE hAuthzResourceManager,_In_opt_ PLARGE_INTEGER pExpirationTime,_In_ LUID Identifier,_In_opt_ PVOID DynamicGroupArgs,_Out_ PAUTHZ_CLIENT_CONTEXT_HANDLE phAuthzClientContext)
HRESULT WINAPI mssign32.SignerSignEx(_In_ DWORD dwFlags,_In_ SIGNER_SUBJECT_INFO *pSubjectInfo,_In_ SIGNER_CERT *pSignerCert,_In_ SIGNER_SIGNATURE_INFO *pSignatureInfo,_In_opt_ SIGNER_PROVIDER_INFO *pProviderInfo,_In_opt_ LPCWSTR pwszHttpTimeStamp,_In_opt_ PCRYPT_ATTRIBUTES psRequest,_In_opt_ LPVOID pSipData,_Out_ SIGNER_CONTEXT **ppSignerContext)
BOOL WINAPI mssign32.PvkPrivateKeyAcquireContextFromMemory(_In_ LPCWSTR pwszProvName,_In_ DWORD dwProvType,_In_ BYTE *pbData,_In_ DWORD cbData,_In_ HWND hwndOwner,_In_ LPCWSTR pwszKeyName,_Inout_opt_ DWORD *pdwKeySpec,_Out_ HCRYPTPROV *phCryptProv,_Out_ LPTSTR *ppwszTmpContainer)
HCATINFO None wintrust.CryptCATAdminAddCatalog(_In_ HCATADMIN hCatAdmin,_In_ WCHAR *pwszCatalogFile,_In_ WCHAR *pwszSelectBaseName,_In_ DWORD dwFlags)
BOOL WINAPI crypt32.CryptSIPVerifyIndirectData(_In_ SIP_SUBJECTINFO *pSubjectInfo,_In_ SIP_INDIRECT_DATA *pIndirectData)
RPC_STATUS RPC_ENTRY rpcrt4.RpcRevertToSelf(void None None)
BOOL WINAPI advapi32.CryptDuplicateKey(_In_ HCRYPTKEY hKey,_In_ DWORD *pdwReserved,_In_ DWORD dwFlags,_Out_ HCRYPTKEY *phKey)
HRESULT WINAPI mssign32.SignerFreeSignerContext(_In_ SIGNER_CONTEXT *pSignerContext)
PSLIST_ENTRY WINAPI kernel32.InterlockedFlushSList(_Inout_ PSLIST_HEADER ListHead)
BOOL WINAPI advapi32.AllocateLocallyUniqueId(_Out_ PLUID Luid)
BOOL WINAPI crypt32.CryptUpdateProtectedState(_In_ PSID pOldSid,_In_ LPCWSTR pwszOldPassword,_In_ DWORD dwFlags,_Out_ DWORD *pdwSuccessCount,_Out_ DWORD *pdwFailureCount)
BOOL WINAPI None.CRYPT_ENUM_OID_INFO(_In_ PCRYPT_OID_INFO pInfo,_In_ void *pvArg)
BOOL WINAPI crypt32.CryptEnumOIDInfo(_In_ DWORD dwGroupId,_In_ DWORD dwFlags,_In_ void *pvArg,_In_ PFN_CRYPT_ENUM_OID_INFO pfnEnumOIDInfo)
LONG WINAPI crypt32.CertVerifyTimeValidity(_In_ LPFILETIME pTimeToVerify,_In_ PCERT_INFO pCertInfo)
BOOL WINAPI crypt32.CertGetCertificateContextProperty(_In_ PCCERT_CONTEXT pCertContext,_In_ DWORD dwPropId,_Out_ void *pvData,_Inout_ DWORD *pcbData)
BOOL WINAPI advapi32.IsValidSecurityDescriptor(_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsEntryExpandName(unsigned long EntryNameSyntax,unsigned char *EntryName,unsigned char **ExpandedName)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsEntryExpandNameW(unsigned long EntryNameSyntax,unsigned char *EntryName,unsigned char **ExpandedName)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsEntryExpandNameA(unsigned long EntryNameSyntax,unsigned char *EntryName,unsigned char **ExpandedName)
void RPC_ENTRY rpcrt4.RpcSsDestroyClientContext(void **ContextHandle None)
DWORD WINAPI crypt32.CertGetPublicKeyLength(_In_ DWORD dwCertEncodingType,_In_ PCERT_PUBLIC_KEY_INFO pPublicKey)
NTSTATUS NTAPI None.CrediUnmarshalandDecodeString(_In_ LPWSTR MarshaledString,_Out_ LPBYTE *Blob,_Out_ ULONG *BlobSize,_Out_ BOOLEAN *IsFailureFatal)
PWSTR None shell32.StrStrNIW(_In_ PWSTR pszFirst,_In_ PCWSTR pszSrch,UINT cchMax None)
BOOL WINAPI kernel32.ReleaseMutex(_In_ HANDLE hMutex)
RPC_STATUS None rpcrt4.RpcSsContextLockShared(_In_ RPC_BINDING_HANDLE ServerBindingHandle,_In_ PVOID UserContext)
HRESULT None None.IsLauncherVisible([out] BOOL *pfVisible)
RPC_STATUS RPC_ENTRY rpcrt4.RpcStringFree(unsigned char **String)
RPC_STATUS RPC_ENTRY rpcrt4.RpcStringFreeW(unsigned char **String)
RPC_STATUS RPC_ENTRY rpcrt4.RpcStringFreeA(unsigned char **String)
NTSTATUS None advapi32.RtlDecryptMemory(_Inout_ PVOID Memory,_In_ ULONG MemoryLength,_In_ ULONG OptionFlags)
BOOL WINAPI advapi32.CryptImportKey(_In_ HCRYPTPROV hProv,_In_ BYTE *pbData,_In_ DWORD dwDataLen,_In_ HCRYPTKEY hPubKey,_In_ DWORD dwFlags,_Out_ HCRYPTKEY *phKey)
BOOL WINAPI advapi32.IsWellKnownSid(_In_ PSID pSid,_In_ WELL_KNOWN_SID_TYPE WellKnownSidType)
RPC_STATUS RPC_ENTRY rpcrt4.RpcFreeAuthorizationContext(_In_ PVOID *pAuthzClientContext)
NTSTATUS NTAPI None.CreateTokenEx(_In_ PLUID LogonId,_In_ PTOKEN_SOURCE TokenSource,_In_ SECURITY_LOGON_TYPE LogonType,_In_ SECURITY_IMPERSONATION_LEVEL ImpersonationLevel,_In_ LSA_TOKEN_INFORMATION_TYPE TokenInformationType,_In_ PVOID TokenInformation,_In_ PTOKEN_GROUPS TokenGroups,_In_ PUNICODE_STRING Workstation,_In_ PUNICODE_STRING ProfilePath,_In_ PVOID SessionInformation,_In_ SECPKG_SESSIONINFO_TYPE SessionInformationType,_Out_ PHANDLE Token,_Out_ PNTSTATUS SubStatus)
BOOLEAN WINAPI advapi32.AuditLookupCategoryGuidFromCategoryId(_In_ POLICY_AUDIT_EVENT_TYPE AuditCategoryId,_Out_ GUID *pAuditCategoryGuid)
HRESULT None ole32.GetRunningObjectTable(_In_ DWORD reserved,_Out_ LPRUNNINGOBJECTTABLE *pprot)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsEntryObjectInqNext(RPC_NS_HANDLE InquiryContext None,UUID *ObjUuid None)
void RPC_ENTRY rpcrt4.RpcSsSwapClientAllocFree(RPC_CLIENT_ALLOC *pfnAllocate None,RPC_CLIENT_FREE *pfnFree None,RPC_CLIENT_ALLOC **pfnOldAllocate None,RPC_CLIENT_FREE **pfnOldFree None)
HRESULT None None.AddPushButton([in] DWORD dwIDCtl,[in] LPCWSTR pszLabel)
typedef None None.BOOL(CALLBACK *PCRYPT_ENCRYPT_PRIVATE_KEY_FUNC None)
RPC_STATUS RPC_ENTRY rpcrt4.MesEncodeFixedBufferHandleCreate(char *Buffer None,unsigned long BufferSize,unsigned long *pEncodedSize,handle_t *pHandle None)
RPC_STATUS None rpcrt4.RpcServerSubscribeForNotification(_In_ RPC_BINDING_HANDLE Binding,_In_ DWORD Notification,_In_ RPC_NOTIFICATION_TYPES NotificationType,_In_ RPC_ASYNC_NOTIFICATION_INFO *NotificationInfo)
typedef None None.BOOL(WINAPI *pfnIsFileSupported None)
BOOL WINAPI advapi32.CryptEnumProviders(_In_ DWORD dwIndex,_In_ DWORD *pdwReserved,_In_ DWORD dwFlags,_Out_ DWORD *pdwProvType,_Out_ LPTSTR pszProvName,_Inout_ DWORD *pcbProvName)
BOOL WINAPI advapi32.CryptEnumProvidersW(_In_ DWORD dwIndex,_In_ DWORD *pdwReserved,_In_ DWORD dwFlags,_Out_ DWORD *pdwProvType,_Out_ LPTSTR pszProvName,_Inout_ DWORD *pcbProvName)
BOOL WINAPI advapi32.CryptEnumProvidersA(_In_ DWORD dwIndex,_In_ DWORD *pdwReserved,_In_ DWORD dwFlags,_Out_ DWORD *pdwProvType,_Out_ LPTSTR pszProvName,_Inout_ DWORD *pcbProvName)
ULONG None None.RKeyPFXInstall(_In_ KEYSVCC_HANDLE hKeySvcCli,_In_ PKEYSVC_BLOB pPFX,_In_ PKEYSVC_UNICODE_STRING pPassword,_In_ ULONG ulFlags)
VOID CALLBACK None.TimerAPCProc(_In_opt_ LPVOID lpArgToCompletionRoutine,_In_ DWORD dwTimerLowValue,_In_ DWORD dwTimerHighValue)
RPC_STATUS RPC_ENTRY rpcrt4.RpcServerListen(unsigned int MinimumCallThreads,unsigned int MaxCalls,unsigned int DontWait)
typedef None None.BOOL(CALLBACK *PCRYPT_RESOLVE_HCRYPTPROV_FUNC None)
BOOL WINAPI advapi32.MakeAbsoluteSD(_In_ PSECURITY_DESCRIPTOR pSelfRelativeSD,_Out_opt_ PSECURITY_DESCRIPTOR pAbsoluteSD,_Inout_ LPDWORD lpdwAbsoluteSDSize,_Out_opt_ PACL pDacl,_Inout_ LPDWORD lpdwDaclSize,_Out_opt_ PACL pSacl,_Inout_ LPDWORD lpdwSaclSize,_Out_opt_ PSID pOwner,_Inout_ LPDWORD lpdwOwnerSize,_Out_opt_ PSID pPrimaryGroup,_Inout_ LPDWORD lpdwPrimaryGroupSize)
HCERTSTORE WINAPI crypt32.PFXImportCertStore(_In_ CRYPT_DATA_BLOB *pPFX,_In_ LPCWSTR szPassword,_In_ DWORD dwFlags)
BOOL WINAPI advapi32.AddAccessDeniedAce(_Inout_ PACL pAcl,_In_ DWORD dwAceRevision,_In_ DWORD AccessMask,_In_ PSID pSid)
VOID WINAPI crypt32.CertCloseServerOcspResponse(_In_ HCERT_SERVER_OCSP_RESPONSE hServerOcspResponse,_In_ DWORD dwFlags)
BOOL WINAPI None.CertStoreProvReadCertCallback(_In_ HCERTSTOREPROV hStoreProv,_In_ PCCERT_CONTEXT pStoreCertContext,_In_ DWORD dwFlags,_Out_ PCCERT_CONTEXT *ppProvCertContext)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsBindingExportPnP(unsigned long EntryNameSyntax,unsigned char *EntryName,RPC_IF_HANDLE IfSpec None,UUID_VECTOR *ObjectUuidVec None)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsBindingExportPnPW(unsigned long EntryNameSyntax,unsigned char *EntryName,RPC_IF_HANDLE IfSpec None,UUID_VECTOR *ObjectUuidVec None)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsBindingExportPnPA(unsigned long EntryNameSyntax,unsigned char *EntryName,RPC_IF_HANDLE IfSpec None,UUID_VECTOR *ObjectUuidVec None)
BOOL WINAPI crypt32.CertVerifyCRLRevocation(_In_ DWORD dwCertEncodingType,_In_ PCERT_INFO pCertId,_In_ DWORD cCrlInfo,_In_ PCRL_INFO rgpCrlInfo[])
NTSTATUS None None.SpShutDown(void None None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcBindingSetAuthInfo(RPC_BINDING_HANDLE Binding None,unsigned char *ServerPrincName,unsigned long AuthnLevel,unsigned long AuthnSvc,RPC_AUTH_IDENTITY_HANDLE AuthIdentity None,unsigned long AuthzService)
RPC_STATUS RPC_ENTRY rpcrt4.RpcBindingSetAuthInfoW(RPC_BINDING_HANDLE Binding None,unsigned char *ServerPrincName,unsigned long AuthnLevel,unsigned long AuthnSvc,RPC_AUTH_IDENTITY_HANDLE AuthIdentity None,unsigned long AuthzService)
RPC_STATUS RPC_ENTRY rpcrt4.RpcBindingSetAuthInfoA(RPC_BINDING_HANDLE Binding None,unsigned char *ServerPrincName,unsigned long AuthnLevel,unsigned long AuthnSvc,RPC_AUTH_IDENTITY_HANDLE AuthIdentity None,unsigned long AuthzService)
BOOL WINAPI crypt32.CryptProtectMemory(_Inout_ LPVOID pData,_In_ DWORD cbData,_In_ DWORD dwFlags)
BOOL WINAPI advapi32.ImpersonateLoggedOnUser(_In_ HANDLE hToken)
RPC_STATUS None rpcrt4.RpcBindingCreate(_In_ RPC_BINDING_HANDLE_TEMPLATE *Template,_In_opt_ RPC_BINDING_HANDLE_SECURITY *Security,_In_opt_ RPC_BINDING_HANDLE_OPTIONS *Options,_Out_ RPC_BINDING_HANDLE *Binding)
RPC_STATUS None rpcrt4.RpcBindingCreateW(_In_ RPC_BINDING_HANDLE_TEMPLATE *Template,_In_opt_ RPC_BINDING_HANDLE_SECURITY *Security,_In_opt_ RPC_BINDING_HANDLE_OPTIONS *Options,_Out_ RPC_BINDING_HANDLE *Binding)
RPC_STATUS None rpcrt4.RpcBindingCreateA(_In_ RPC_BINDING_HANDLE_TEMPLATE *Template,_In_opt_ RPC_BINDING_HANDLE_SECURITY *Security,_In_opt_ RPC_BINDING_HANDLE_OPTIONS *Options,_Out_ RPC_BINDING_HANDLE *Binding)
RPC_STATUS RPC_ENTRY rpcrt4.UuidCreate(UUID __RPC_FAR *Uuid)
void WINAPI crypt32.CryptMemFree(_In_ LPVOID pv)
HRESULT None shell32.SHGetDataFromIDList(_In_ IShellFolder *psf,_In_ PCUITEMID_CHILD pidl,int nFormat None,_Out_ void *pv,int cb None)
HRESULT None shell32.SHGetDataFromIDListW(_In_ IShellFolder *psf,_In_ PCUITEMID_CHILD pidl,int nFormat None,_Out_ void *pv,int cb None)
HRESULT None shell32.SHGetDataFromIDListA(_In_ IShellFolder *psf,_In_ PCUITEMID_CHILD pidl,int nFormat None,_Out_ void *pv,int cb None)
DWORD WINAPI crypt32.CertEnumCRLContextProperties(_In_ PCCRL_CONTEXT pCrlContext,_In_ DWORD dwPropId)
HRESULT None shell32.SHSetKnownFolderPath(_In_ REFKNOWNFOLDERID rfid,_In_ DWORD dwFlags,_In_ HANDLE hToken,_In_ PCWSTR pszPath)
BOOL WINAPI crypt32.CryptImportPublicKeyInfoEx2(_In_ DWORD dwCertEncodingType,_In_ PCERT_PUBLIC_KEY_INFO pInfo,_In_ DWORD dwFlags,_In_ void *pvAuxInfo,_Out_ BCRYPT_KEY_HANDLE *phKey)
HRESULT None None.SetFieldInteractiveState([in] ICredentialProviderCredential *pcpc,[in] DWORD dwFieldID,[in] CREDENTIAL_PROVIDER_FIELD_INTERACTIVE_STATE cpfis)
RPC_STATUS RPC_ENTRY rpcrt4.RpcObjectSetType(UUID *ObjUuid None,UUID *TypeUuid None)
void WINAPI None.CertStoreProvCloseCallback(_In_ HCERTSTOREPROV hStoreProv,_In_ DWORD dwFlags)
RPC_STATUS RPC_ENTRY rpcrt4.RpcAsyncAbortCall(PRPC_ASYNC_STATE pAsync None,unsigned long ExceptionCode)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsMgmtEntryInqIfIds(unsigned long EntryNameSyntax,unsigned char *EntryName,RPC_IF_ID_VECTOR **IfIdVec None)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsMgmtEntryInqIfIdsW(unsigned long EntryNameSyntax,unsigned char *EntryName,RPC_IF_ID_VECTOR **IfIdVec None)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsMgmtEntryInqIfIdsA(unsigned long EntryNameSyntax,unsigned char *EntryName,RPC_IF_ID_VECTOR **IfIdVec None)
BOOL WINAPI advapi32.ObjectPrivilegeAuditAlarm(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ HANDLE ClientToken,_In_ DWORD DesiredAccess,_In_ PPRIVILEGE_SET Privileges,_In_ BOOL AccessGranted)
BOOL WINAPI advapi32.ObjectPrivilegeAuditAlarmW(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ HANDLE ClientToken,_In_ DWORD DesiredAccess,_In_ PPRIVILEGE_SET Privileges,_In_ BOOL AccessGranted)
BOOL WINAPI advapi32.ObjectPrivilegeAuditAlarmA(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ HANDLE ClientToken,_In_ DWORD DesiredAccess,_In_ PPRIVILEGE_SET Privileges,_In_ BOOL AccessGranted)
RPC_STATUS RPC_ENTRY rpcrt4.RpcEpRegisterNoReplace(RPC_IF_HANDLE IfSpec None,RPC_BINDING_VECTOR *BindingVector None,UUID_VECTOR *UuidVector None,unsigned char *Annotation)
RPC_STATUS RPC_ENTRY rpcrt4.RpcEpRegisterNoReplaceW(RPC_IF_HANDLE IfSpec None,RPC_BINDING_VECTOR *BindingVector None,UUID_VECTOR *UuidVector None,unsigned char *Annotation)
RPC_STATUS RPC_ENTRY rpcrt4.RpcEpRegisterNoReplaceA(RPC_IF_HANDLE IfSpec None,RPC_BINDING_VECTOR *BindingVector None,UUID_VECTOR *UuidVector None,unsigned char *Annotation)
typedef None None.BOOL(WINAPI *PFN_IMPORT_PUBLIC_KEY_INFO_EX2_FUNC None)
BOOL WINAPI crypt32.CertSetEnhancedKeyUsage(_In_ PCCERT_CONTEXT pCertContext,_In_ PCERT_ENHKEY_USAGE pUsage)
RPC_STATUS WINAPI rpcrt4.RpcServerInterfaceGroupInqBindings(_In_ RPC_INTERFACE_GROUP IfGroup,_Out_ RPC_BINDING_VECTOR *BindingVector)
BOOL WINAPI wintrust.WTHelperCertIsSelfSigned(_In_ DWORD dwEncoding,_In_ CERT_INFO *pCert)
PCCRL_CONTEXT WINAPI crypt32.CertEnumCRLsInStore(_In_ HCERTSTORE hCertStore,_In_ PCCRL_CONTEXT pPrevCrlContext)
BOOL WINAPI user32.RegisterShellHookWindow(_In_ HWND hWnd)
int None kernel32.CompareString(_In_ LCID Locale,_In_ DWORD dwCmpFlags,_In_ LPCTSTR lpString1,_In_ int cchCount1,_In_ LPCTSTR lpString2,_In_ int cchCount2)
int None kernel32.CompareStringW(_In_ LCID Locale,_In_ DWORD dwCmpFlags,_In_ LPCTSTR lpString1,_In_ int cchCount1,_In_ LPCTSTR lpString2,_In_ int cchCount2)
int None kernel32.CompareStringA(_In_ LCID Locale,_In_ DWORD dwCmpFlags,_In_ LPCTSTR lpString1,_In_ int cchCount1,_In_ LPCTSTR lpString2,_In_ int cchCount2)
RPC_STATUS RPC_ENTRY rpcrt4.RpcServerInqBindings(RPC_BINDING_VECTOR **BindingVector None)
NTSTATUS None None.LsaApCallPackageUntrusted(_In_ PLSA_CLIENT_REQUEST ClientRequest,_In_ PVOID ProtocolSubmitBuffer,_In_ PVOID ClientBufferBase,_In_ ULONG SubmitBufferLength,_Out_ PVOID *ProtocolReturnBuffer,_Out_ PULONG ReturnBufferLength,_Out_ PNTSTATUS ProtocolStatus)
BOOL WINAPI advapi32.SetKernelObjectSecurity(_In_ HANDLE Handle,_In_ SECURITY_INFORMATION SecurityInformation,_In_ PSECURITY_DESCRIPTOR SecurityDescriptor)
BOOL WINAPI advapi32.CryptCreateHash(_In_ HCRYPTPROV hProv,_In_ ALG_ID Algid,_In_ HCRYPTKEY hKey,_In_ DWORD dwFlags,_Out_ HCRYPTHASH *phHash)
BOOL WINAPI cryptui.CryptUIWizExport(_In_ DWORD dwFlags,_In_ HWND hwndParent,_In_ LPCWSTR pwszWizardTitle,_In_ PCCRYPTUI_WIZ_EXPORT_INFO pExportInfo,_In_ void *pvoid)
BOOL WINAPI authz.AuthzUnregisterSecurityEventSource(_In_ DWORD dwFlags,_Inout_ PAUTHZ_SECURITY_EVENT_PROVIDER_HANDLE phEventProvider)
void WINAPI mssign32.PvkFreeCryptProv(_In_ HCRYPTPROV hProv,_In_ LPCWSTR pwszCapiProvider,_In_ DWORD dwProviderType,_In_opt_ LPWSTR pwszTmpContainer)
HRESULT None shell32.SHBindToObject(IShellFolder *psf None,PCUIDLIST_RELATIVE pidl None,_In_ IBindCtx *pbc,REFIID riid None,_Out_ void **ppv)
NTSTATUS NTAPI advapi32.LsaSetDomainInformationPolicy(_In_ LSA_HANDLE PolicyHandle,_In_ POLICY_DOMAIN_INFORMATION_CLASS InformationClass,_In_ PVOID Buffer)
BOOL WINAPI advapi32.CryptExportKey(_In_ HCRYPTKEY hKey,_In_ HCRYPTKEY hExpKey,_In_ DWORD dwBlobType,_In_ DWORD dwFlags,_Out_ BYTE *pbData,_Inout_ DWORD *pdwDataLen)
typedef None None.BOOL(WINAPI *PFN_CMSG_EXPORT_KEY_AGREE None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcBindingReset(RPC_BINDING_HANDLE Binding None)
HRESULT None shell32.SHGetKnownFolderIDList(_In_ REFKNOWNFOLDERID rfid,_In_ DWORD dwFlags,_In_ HANDLE hToken,_Out_ PIDLIST_ABSOLUTE *ppidl)
BOOL WINAPI crypt32.CertSetCertificateContextPropertiesFromCTLEntry(_In_ PCCERT_CONTEXT pCertContext,_In_ PCTL_ENTRY pCtlEntry,_In_ DWORD dwFlags)
typedef None None.HRESULT(WINAPI *CryptXmlDllDigestData None)
void WINAPI mssign32.FreeCryptProvFromCert(_In_ BOOL fAcquired,_In_ HCRYPTPROV hProv,_In_opt_ LPWSTR pwszCapiProvider,_In_ DWORD dwProviderType,_In_opt_ LPWSTR pwszTmpContainer)
typedef None None.HRESULT(WINAPI *CryptXmlDllGetInterface None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcSmFree(void *NodeToFree None)
void RPC_ENTRY rpcrt4.RpcRaiseException(RPC_STATUS Exception None)
HANDLE WINAPI kernel32.OpenWaitableTimer(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpTimerName)
HANDLE WINAPI kernel32.OpenWaitableTimerW(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpTimerName)
HANDLE WINAPI kernel32.OpenWaitableTimerA(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpTimerName)
BOOL WINAPI advapi32.CreateWellKnownSid(_In_ WELL_KNOWN_SID_TYPE WellKnownSidType,_In_opt_ PSID DomainSid,_Out_opt_ PSID pSid,_Inout_ DWORD *cbSid)
VOID WINAPI kernel32.DeleteBoundaryDescriptor(_In_ HANDLE BoundaryDescriptor)
RPC_STATUS RPC_ENTRY rpcrt4.RpcServerRegisterIfEx(RPC_IF_HANDLE IfSpec None,UUID *MgrTypeUuid None,RPC_MGR_EPV *MgrEpv None,unsigned int Flags,unsigned int MaxCalls,RPC_IF_CALLBACK_FN *IfCallback None)
RPC_STATUS RPC_ENTRY rpcrt4.MesEncodeIncrementalHandleCreate(void *UserState None,MIDL_ES_ALLOC AllocFn None,MIDL_ES_WRITE WriteFn None,handle_t *pHandle None)
SECURITY_STATUS None None.SspiEncryptAuthIdentityEx(_In_ ULONG Options,_Inout_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE AuthData)
void RSA32API ntdll.A_SHAInit(_Inout_ A_SHA_CTX *Context)
BOOL WINAPI advapi32.ObjectCloseAuditAlarm(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ BOOL GenerateOnClose)
BOOL WINAPI advapi32.ObjectCloseAuditAlarmW(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ BOOL GenerateOnClose)
BOOL WINAPI advapi32.ObjectCloseAuditAlarmA(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ BOOL GenerateOnClose)
BOOL None comctl32.ImageList_Destroy(_In_opt_ HIMAGELIST himl)
BOOL WINAPI wintrust.CryptCATAdminResolveCatalogPath(_In_ HCATADMIN hCatAdmin,_In_ WCHAR *pwszCatalogFile,_Inout_ CATALOG_INFO *psCatInfo,_In_ DWORD dwFlags)
HRESULT None None.AddEditBox([in] DWORD dwIDCtl,[in] LPCWSTR pszLabel)
CRYPTCATMEMBER WINAPI wintrust.CryptCATEnumerateMember(_In_ HANDLE hCatalog,_In_ CRYPTCATMEMBER *pPrevMember)
VOID WINAPI kernel32.AcquireSRWLockShared(_Inout_ PSRWLOCK SRWLock)
void WINAPI mssign32.FreeCryptProvFromCertEx(_In_ BOOL fAcquired,_In_ HCRYPTPROV_OR_NCRYPT_KEY_HANDLE hProv,DWORD dwKeySpec None,_In_opt_ LPWSTR pwszCapiProvider,_In_ DWORD dwProviderType,_In_opt_ LPWSTR pwszTmpContainer)
BOOL WINAPI None.PFNCMFILTERPROC(_In_ PCCERT_CONTEXT pCertContext,_In_ DWORD lCustData,_In_ DWORD dwFlags,_In_ DWORD dwDisplayWell)
BOOL None None.RpcAbnormalTermination(void None None)
BOOL WINAPI advapi32.CryptSignHash(_In_ HCRYPTHASH hHash,_In_ DWORD dwKeySpec,_In_ LPCTSTR sDescription,_In_ DWORD dwFlags,_Out_ BYTE *pbSignature,_Inout_ DWORD *pdwSigLen)
BOOL WINAPI advapi32.CryptSignHashW(_In_ HCRYPTHASH hHash,_In_ DWORD dwKeySpec,_In_ LPCTSTR sDescription,_In_ DWORD dwFlags,_Out_ BYTE *pbSignature,_Inout_ DWORD *pdwSigLen)
BOOL WINAPI advapi32.CryptSignHashA(_In_ HCRYPTHASH hHash,_In_ DWORD dwKeySpec,_In_ LPCTSTR sDescription,_In_ DWORD dwFlags,_Out_ BYTE *pbSignature,_Inout_ DWORD *pdwSigLen)
BOOL WINAPI advapi32.CryptSetProviderEx(_In_ LPCTSTR pszProvName,_In_ DWORD dwProvType,_In_ DWORD *pdwReserved,_In_ DWORD dwFlags)
BOOL WINAPI advapi32.CryptSetProviderExW(_In_ LPCTSTR pszProvName,_In_ DWORD dwProvType,_In_ DWORD *pdwReserved,_In_ DWORD dwFlags)
BOOL WINAPI advapi32.CryptSetProviderExA(_In_ LPCTSTR pszProvName,_In_ DWORD dwProvType,_In_ DWORD *pdwReserved,_In_ DWORD dwFlags)
BOOL WINAPI crypt32.CryptExportPublicKeyInfoFromBCryptKeyHandle(_In_ BCRYPT_KEY_HANDLE hBCryptKey,_In_ DWORD dwCertEncodingType,_In_opt_ LPSTR pszPublicKeyObjId,_In_ DWORD dwFlags,_In_opt_ void pvAuxInfo,_Out_opt_ PCERT_PUBLIC_KEY_INFO pInfo,_Inout_ DWORD pcbInfo)
HRESULT None shell32.SHSetUnreadMailCount(_In_ LPCTSTR pszMailAddress,DWORD dwCount None,_In_ LPCTSTR pszShellExecuteCommand)
HRESULT None shell32.SHSetUnreadMailCountW(_In_ LPCTSTR pszMailAddress,DWORD dwCount None,_In_ LPCTSTR pszShellExecuteCommand)
HANDLE WINAPI kernel32.OpenPrivateNamespace(_In_ LPVOID lpBoundaryDescriptor,_In_ LPCTSTR lpAliasPrefix)
HANDLE WINAPI kernel32.OpenPrivateNamespaceW(_In_ LPVOID lpBoundaryDescriptor,_In_ LPCTSTR lpAliasPrefix)
HANDLE WINAPI kernel32.OpenPrivateNamespaceA(_In_ LPVOID lpBoundaryDescriptor,_In_ LPCTSTR lpAliasPrefix)
RPC_STATUS RPC_ENTRY rpcrt4.RpcIfIdVectorFree(RPC_IF_ID_VECTOR **IfIdVec None)
BOOL WINAPI crypt32.CryptSIPPutSignedDataMsg(_In_ SIP_SUBJECTINFO *pSubjectInfo,_In_ DWORD dwEncodingType,_Out_ DWORD *pdwIndex,_In_ DWORD cbSignedDataMsg,_In_ BYTE *pbSignedDataMsg)
BOOL WINAPI crypt32.CryptImportPublicKeyInfoEx(_In_ HCRYPTPROV hCryptProv,_In_ DWORD dwCertEncodingType,_In_ PCERT_PUBLIC_KEY_INFO pInfo,_In_ ALG_ID aiKeyAlg,_In_ DWORD dwFlags,_In_ void *pvAuxInfo,_Out_ HCRYPTKEY *phKey)
BOOL WINAPI user32.ShowOwnedPopups(_In_ HWND hWnd,_In_ BOOL fShow)
RPC_STATUS RPC_ENTRY rpcrt4.RpcErrorGetNextRecord(_In_ RPC_ERROR_ENUM_HANDLE *EnumHandle,_In_ BOOL CopyStrings,_Out_ RPC_EXTENDED_ERROR_INFO *ErrorInfo)
BOOL WINAPI authz.AuthzInitializeObjectAccessAuditEvent(_In_ DWORD Flags,_In_ AUTHZ_AUDIT_EVENT_TYPE_HANDLE hAuditEventType,_In_ PWSTR szOperationType,_In_ PWSTR szObjectType,_In_ PWSTR szObjectName,_In_ PWSTR szAdditionalInfo,_Out_ PAUTHZ_AUDIT_EVENT_HANDLE phAuditEvent,_In_ DWORD dwAdditionalParamCount)
BOOL WINAPI authz.AuthzInitializeResourceManagerEx(_In_opt_ DWORD Flags,_In_opt_ PVOID pAuthzInitInfo,_Out_ PAUTHZ_RESOURCE_MANAGER_HANDLE phAuthzResourceManager)
BOOL WINAPI advapi32.CryptReleaseContext(_In_ HCRYPTPROV hProv,_In_ DWORD dwFlags)
PCCTL_CONTEXT WINAPI crypt32.CertEnumCTLsInStore(_In_ HCERTSTORE hCertStore,_In_ PCCTL_CONTEXT pPrevCtlContext)
BOOL WINAPI advapi32.AdjustTokenGroups(_In_ HANDLE TokenHandle,_In_ BOOL ResetToDefault,_In_opt_ PTOKEN_GROUPS NewState,_In_ DWORD BufferLength,_Out_opt_ PTOKEN_GROUPS PreviousState,_Out_opt_ PDWORD ReturnLength)
typedef None None.void(WINAPI *PFN_CRYPT_OBJECT_LOCATOR_PROVIDER_FREE None)
VOID WINAPI advapi32.AuditFree(_In_ PVOID Buffer)
DWORD WINAPI advapi32.GetSecurityDescriptorLength(_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor)
RPC_STATUS RPC_ENTRY rpcrt4.RpcMgmtInqStats(RPC_BINDING_HANDLE Binding None,RPC_STATS_VECTOR **Statistics None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcServerUseProtseqEpEx(unsigned char *Protseq,unsigned int MaxCalls,unsigned char *Endpoint,void *SecurityDescriptor None,PRPC_POLICY Policy None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcServerUseProtseqEpExW(unsigned char *Protseq,unsigned int MaxCalls,unsigned char *Endpoint,void *SecurityDescriptor None,PRPC_POLICY Policy None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcServerUseProtseqEpExA(unsigned char *Protseq,unsigned int MaxCalls,unsigned char *Endpoint,void *SecurityDescriptor None,PRPC_POLICY Policy None)
HRESULT WINAPI wintrust.WTHelperCertCheckValidSignature(CRYPT_PROVIDER_DATA *pProvData None)
HRESULT None shell32.SetPath([in] DWORD dwFlags,[in] LPCWSTR pszPath)
HRESULT None None.SetItemHeight([in] int cyItemInPixels)
BOOL WINAPI cryptui.CryptUIWizDigitalSign(_In_ DWORD dwFlags,_In_opt_ HWND hwndParent,_In_opt_ LPCWSTR pwszWizardTitle,_In_ PCCRYPTUI_WIZ_DIGITAL_SIGN_INFO pDigitalSignInfo,_Out_opt_ PCCRYPTUI_WIZ_DIGITAL_SIGN_CONTEXT *ppSignContext)
BOOL WINAPI crypt32.CryptVerifyCertificateSignatureEx(_In_ HCRYPTPROV_LEGACY hCryptProv,_In_ DWORD dwCertEncodingType,_In_ DWORD dwSubjectType,_In_ void *pvSubject,_In_ DWORD dwIssuerType,_In_ void *pvIssuer,_In_ DWORD dwFlags,_Inout_opt_ void *pvExtra)
HRESULT None None.GetSourceViewSizePreference([out] APPLICATION_VIEW_SIZE_PREFERENCE *sourceSizeAfterLaunch)
typedef None None.HRESULT(WINAPI *CryptXmlDllSignData None)
BOOL WINAPI advapi32.ObjectDeleteAuditAlarm(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ BOOL GenerateOnClose)
BOOL WINAPI advapi32.ObjectDeleteAuditAlarmW(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ BOOL GenerateOnClose)
BOOL WINAPI advapi32.ObjectDeleteAuditAlarmA(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ BOOL GenerateOnClose)
BOOL WINAPI None.CertStoreProvReadCRLCallback(_In_ HCERTSTOREPROV hStoreProv,_In_ PCCRL_CONTEXT pStoreCrlContext,_In_ DWORD dwFlags,_Out_ PCCRL_CONTEXT *ppProvCrlContext)
RPC_STATUS RPC_ENTRY rpcrt4.RpcMgmtIsServerListening(RPC_BINDING_HANDLE Binding None)
BOOL WINAPI advapi32.CryptDuplicateHash(_In_ HCRYPTHASH hHash,_In_ DWORD *pdwReserved,_In_ DWORD dwFlags,_Out_ HCRYPTHASH *phHash)
VOID None None.WlxSetContextPointer(_In_ HANDLE hWlx,_In_ PVOID pWlxContext)
HRESULT CALLBACK None.PFN_CRYPT_XML_DATA_PROVIDER_CLOSE(_Inout_ void *pvCallbackState)
BOOL WINAPI advapi32.FindFirstFreeAce(_In_ PACL pAcl,_Out_ LPVOID *pAce)
void WINAPI wintrust.WintrustSetDefaultIncludePEPageHashes(_In_ BOOL fIncludePEPageHashes)
HRESULT None certadm.CertSrvBackupGetDynamicFileList(_In_ HCSBC hbc,_Out_ WCHAR **ppwszzFileList,_Out_ DWORD *pcbSize)
HRESULT None certadm.CertSrvBackupGetDynamicFileListW(_In_ HCSBC hbc,_Out_ WCHAR **ppwszzFileList,_Out_ DWORD *pcbSize)
BOOL None crypt32.CryptSIPAddProvider(_In_ SIP_ADD_NEWPROVIDER *psNewProv)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsMgmtInqExpAge(unsigned long *ExpirationAge)
RPC_STATUS RPC_ENTRY rpcrt4.RpcBindingSetObject(RPC_BINDING_HANDLE Binding None,UUID *ObjectUuid None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcAsyncInitializeHandle(PRPC_ASYNC_STATE pAsync None,unsigned int Size)
MI_INLINE MI_Result None.MI_OperationOptions_SetWriteErrorMode(_Inout_ MI_OperationOptions *options,_In_ MI_CallbackMode mode)
VOID WINAPI crypt32.CertFreeCertificateChainList(_In_ PCCERT_CHAIN_CONTEXT *prgpSelection)
LONG WINAPI winscard.SCardWriteCache(_In_ SCARDCONTEXT hContext,_In_ UUID *CardIdentifier,_In_ DWORD FreshnessCounter,_In_ LPTSTR LookupName,_In_ PBYTE Data,_In_ DWORD DataLen)
LONG WINAPI winscard.SCardWriteCacheW(_In_ SCARDCONTEXT hContext,_In_ UUID *CardIdentifier,_In_ DWORD FreshnessCounter,_In_ LPTSTR LookupName,_In_ PBYTE Data,_In_ DWORD DataLen)
LONG WINAPI winscard.SCardWriteCacheA(_In_ SCARDCONTEXT hContext,_In_ UUID *CardIdentifier,_In_ DWORD FreshnessCounter,_In_ LPTSTR LookupName,_In_ PBYTE Data,_In_ DWORD DataLen)
typedef None None.HRESULT(WINAPI *CryptXmlDllEncodeKeyValue None)
HRESULT None shell32.SHCreateShellItemArrayFromDataObject(_In_ IDataObject *pdo,_In_ REFIID riid,_Out_ void **ppv)
BOOL WINAPI advapi32.SetSecurityDescriptorGroup(_Inout_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_opt_ PSID pGroup,_In_ BOOL bGroupDefaulted)
typedef None None.BOOL(WINAPI *PFN_CMSG_CNG_IMPORT_KEY_AGREE None)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsBindingImportNext(RPC_NS_HANDLE ImportContext None,RPC_BINDING_HANDLE *Binding None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcIfInqId(RPC_IF_HANDLE RpcIfHandle None,RPC_IF_ID *RpcIfId None)
BOOL WINAPI crypt32.CryptMsgVerifyCountersignatureEncodedEx(_In_opt_ HCRYPTPROV_LEGACY hCryptProv,_In_ DWORD dwEncodingType,_In_ PBYTE pbSignerInfo,_In_ DWORD cbSignerInfo,_In_ PBYTE pbSignerInfoCountersignature,_In_ DWORD cbSignerInfoCountersignature,_In_ DWORD dwSignerType,_In_ void *pvSigner,_Reserved_ DWORD dwFlags,_Reserved_ void *pvExtra)
RPC_STATUS RPC_ENTRY rpcrt4.RpcServerUseAllProtseqsIfEx(unsigned int MaxCalls,RPC_IF_HANDLE IfSpec None,void *SecurityDescriptor None,PRPC_POLICY Policy None)
BOOLEAN WINAPI advapi32.AuditSetSecurity(_In_ SECURITY_INFORMATION SecurityInformation,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor)
RPC_STATUS RPC_ENTRY rpcrt4.RpcBindingVectorFree(RPC_BINDING_VECTOR **BindingVector None)
LONG WINAPI winscard.SCardListReaderGroups(_In_ SCARDCONTEXT hContext,_Out_ LPTSTR mszGroups,_Inout_ LPDWORD pcchGroups)
LONG WINAPI winscard.SCardListReaderGroupsW(_In_ SCARDCONTEXT hContext,_Out_ LPTSTR mszGroups,_Inout_ LPDWORD pcchGroups)
LONG WINAPI winscard.SCardListReaderGroupsA(_In_ SCARDCONTEXT hContext,_Out_ LPTSTR mszGroups,_Inout_ LPDWORD pcchGroups)
RPC_STATUS RPC_ENTRY rpcrt4.RpcTestCancel(void None None)
BOOL WINAPI crypt32.CryptExportPublicKeyInfoEx(_In_ HCRYPTPROV_OR_NCRYPT_KEY_HANDLE hCryptProvOrNCryptKey,_In_ DWORD dwKeySpec,_In_ DWORD dwCertEncodingType,_In_ LPSTR pszPublicKeyObjId,_In_ DWORD dwFlags,_In_ void *pvAuxInfo,_Out_ PCERT_PUBLIC_KEY_INFO pInfo,_Inout_ DWORD *pcbInfo)
BOOL WINAPI authz.AuthzFreeCentralAccessPolicyCache(void None None)
DWORD None firewallapi.NetworkIsolationGetAppContainerConfig(_Out_ DWORD *pdwNumPublicAppCs,_Out_ PSID_AND_ATTRIBUTES *appContainerSids)
typedef None None.BOOL(WINAPI *PFN_CMSG_CNG_IMPORT_CONTENT_ENCRYPT_KEY None)
HRESULT WINAPI mssign32.SignerTimeStampEx3(_In_ DWORD dwFlags,_In_ DWORD dwIndex,_In_ SIGNER_SUBJECT_INFO *pSubjectInfo,_In_ PCWSTR pwszHttpTimeStamp,_In_ PCWSTR pszAlgorithmOid,_In_opt_ PCRYPT_ATTRIBUTES psRequest,_In_opt_ PVOID pSipData,_Out_ SIGNER_CONTEXT **ppSignerContext,_In_opt_ PCERT_STRONG_SIGN_PARA pCryptoPolicy,_Reserved_ PVOID pReserved)
HRESULT None None.ApplyPropertiesToItem([in] IShellItem *psiItem)
LONG WINAPI winscard.SCardIntroduceReader(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReaderName,_In_ LPCTSTR szDeviceName)
LONG WINAPI winscard.SCardIntroduceReaderW(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReaderName,_In_ LPCTSTR szDeviceName)
LONG WINAPI winscard.SCardIntroduceReaderA(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReaderName,_In_ LPCTSTR szDeviceName)
BOOL WINAPI user32.AnyPopup(void None None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcObjectSetInqFn(RPC_OBJECT_INQ_FN InquiryFn None)
BOOL WINAPI cryptui.CryptUIDlgViewSignerInfo(_In_ CRYPTUI_VIEWSIGNERINFO_STRUCT *pcvsi)
BOOL WINAPI cryptui.CryptUIDlgViewSignerInfoW(_In_ CRYPTUI_VIEWSIGNERINFO_STRUCT *pcvsi)
BOOL WINAPI cryptui.CryptUIDlgViewSignerInfoA(_In_ CRYPTUI_VIEWSIGNERINFO_STRUCT *pcvsi)
BOOL CALLBACK None.EnumChildProc(_In_ HWND hwnd,_In_ LPARAM lParam)
DWORD WINAPI advapi32.BuildSecurityDescriptor(_In_opt_ PTRUSTEE pOwner,_In_opt_ PTRUSTEE pGroup,_In_ ULONG cCountOfAccessEntries,_In_opt_ PEXPLICIT_ACCESS pListOfAccessEntries,_In_ ULONG cCountOfAuditEntries,_In_opt_ PEXPLICIT_ACCESS pListOfAuditEntries,_In_opt_ PSECURITY_DESCRIPTOR pOldSD,_Out_ PULONG pSizeNewSD,_Out_ PSECURITY_DESCRIPTOR *pNewSD)
DWORD WINAPI advapi32.BuildSecurityDescriptorW(_In_opt_ PTRUSTEE pOwner,_In_opt_ PTRUSTEE pGroup,_In_ ULONG cCountOfAccessEntries,_In_opt_ PEXPLICIT_ACCESS pListOfAccessEntries,_In_ ULONG cCountOfAuditEntries,_In_opt_ PEXPLICIT_ACCESS pListOfAuditEntries,_In_opt_ PSECURITY_DESCRIPTOR pOldSD,_Out_ PULONG pSizeNewSD,_Out_ PSECURITY_DESCRIPTOR *pNewSD)
DWORD WINAPI advapi32.BuildSecurityDescriptorA(_In_opt_ PTRUSTEE pOwner,_In_opt_ PTRUSTEE pGroup,_In_ ULONG cCountOfAccessEntries,_In_opt_ PEXPLICIT_ACCESS pListOfAccessEntries,_In_ ULONG cCountOfAuditEntries,_In_opt_ PEXPLICIT_ACCESS pListOfAuditEntries,_In_opt_ PSECURITY_DESCRIPTOR pOldSD,_Out_ PULONG pSizeNewSD,_Out_ PSECURITY_DESCRIPTOR *pNewSD)
PCCRL_CONTEXT WINAPI crypt32.CertDuplicateCRLContext(_In_ PCCRL_CONTEXT pCrlContext)
HRESULT WINAPI cryptdlg.CertModifyCertificatesToTrust(_In_ int cCerts,_In_ PCTL_MODIFY_REQUEST rgCerts,_In_ LPCSTR szPurpose,_In_ HWND hwnd,_In_opt_ HCERTSTORE hcertstoreTrust,_In_opt_ PCCERT_CONTEXT pccertSigner)
DWORD None cryptdlg.GetFriendlyNameOfCert(_In_ PCCERT_CONTEXT pccert,_Out_ LPTSTR pchBuffer,_In_ DWORD cchBuffer)
DWORD None cryptdlg.GetFriendlyNameOfCertW(_In_ PCCERT_CONTEXT pccert,_Out_ LPTSTR pchBuffer,_In_ DWORD cchBuffer)
DWORD None cryptdlg.GetFriendlyNameOfCertA(_In_ PCCERT_CONTEXT pccert,_Out_ LPTSTR pchBuffer,_In_ DWORD cchBuffer)
BOOL WINAPI crypt32.CryptUninstallDefaultContext(_In_ HCRYPTDEFAULTCONTEXT hDefaultContext,_In_ DWORD dwFlags,_In_ void *pvReserved)
BOOL WINAPI crypt32.CertGetIntendedKeyUsage(_In_ DWORD dwCertEncodingType,_In_ PCERT_INFO pCertInfo,_Out_ BYTE *pbKeyUsage,_In_ DWORD cbKeyUsage)
LONG WINAPI winscard.SCardListReaders(_In_ SCARDCONTEXT hContext,_In_opt_ LPCTSTR mszGroups,_Out_ LPTSTR mszReaders,_Inout_ LPDWORD pcchReaders)
LONG WINAPI winscard.SCardListReadersW(_In_ SCARDCONTEXT hContext,_In_opt_ LPCTSTR mszGroups,_Out_ LPTSTR mszReaders,_Inout_ LPDWORD pcchReaders)
LONG WINAPI winscard.SCardListReadersA(_In_ SCARDCONTEXT hContext,_In_opt_ LPCTSTR mszGroups,_Out_ LPTSTR mszReaders,_Inout_ LPDWORD pcchReaders)
RPC_STATUS RPC_ENTRY rpcrt4.RpcMgmtInqServerPrincName(RPC_BINDING_HANDLE Binding None,unsigned int AuthnSvc,unsigned char **ServerPrincName)
RPC_STATUS RPC_ENTRY rpcrt4.RpcMgmtInqServerPrincNameW(RPC_BINDING_HANDLE Binding None,unsigned int AuthnSvc,unsigned char **ServerPrincName)
RPC_STATUS RPC_ENTRY rpcrt4.RpcMgmtInqServerPrincNameA(RPC_BINDING_HANDLE Binding None,unsigned int AuthnSvc,unsigned char **ServerPrincName)
typedef None None.void(WINAPI *PFN_CRYPT_OBJECT_LOCATOR_PROVIDER_RELEASE None)
BOOL WINAPI mssign32.PvkPrivateKeySave(_In_ HCRYPTPROV hCryptProv,_In_ HANDLE hFile,_In_ DWORD dwKeySpec,_In_ HWND hwndOwner,_In_ LPCWSTR pwszKeyName,_In_ DWORD dwFlags)
RPC_STATUS RPC_ENTRY rpcrt4.RpcServerRegisterIf2(RPC_IF_HANDLE IfSpec None,UUID *MgrTypeUuid None,RPC_MGR_EPV *MgrEpv None,unsigned int Flags,unsigned int MaxCalls,unsigned int MaxRpcSize,RPC_IF_CALLBACK_FN *IfCallbackFn None)
BOOL WINAPI crypt32.CertRemoveEnhancedKeyUsageIdentifier(_In_ PCCERT_CONTEXT pCertContext,_In_ LPCSTR pszUsageIdentifier)
HRESULT WINAPI cryptxml.CryptXmlImportPublicKey(DWORD dwFlags None,_In_ CRYPT_XML_KEY_VALUE *pKeyValue,_Out_ BCRYPT_KEY_HANDLE *phKey)
BOOL WINAPI crypt32.CryptStringToBinary(_In_ LPCTSTR pszString,_In_ DWORD cchString,_In_ DWORD dwFlags,_In_ BYTE *pbBinary,_Inout_ DWORD *pcbBinary,_Out_ DWORD *pdwSkip,_Out_ DWORD *pdwFlags)
BOOL WINAPI crypt32.CryptStringToBinaryW(_In_ LPCTSTR pszString,_In_ DWORD cchString,_In_ DWORD dwFlags,_In_ BYTE *pbBinary,_Inout_ DWORD *pcbBinary,_Out_ DWORD *pdwSkip,_Out_ DWORD *pdwFlags)
BOOL WINAPI crypt32.CryptStringToBinaryA(_In_ LPCTSTR pszString,_In_ DWORD cchString,_In_ DWORD dwFlags,_In_ BYTE *pbBinary,_Inout_ DWORD *pcbBinary,_Out_ DWORD *pdwSkip,_Out_ DWORD *pdwFlags)
BOOL WINAPI crypt32.CertSaveStore(_In_ HCERTSTORE hCertStore,_In_ DWORD dwMsgAndCertEncodingType,_In_ DWORD dwSaveAs,_In_ DWORD dwSaveTo,_Inout_ void *pvSaveToPara,_In_ DWORD dwFlags)
DWORD WINAPI crypt32.CertEnumCertificateContextProperties(_In_ PCCERT_CONTEXT pCertContext,_In_ DWORD dwPropId)
LONG WINAPI wintrust.WTHelperGetFileHash(_In_ LPCWSTR pwszFilename,_In_ DWORD dwFlags,_Inout_opt_ PVOID pvReserved,_Out_opt_ BYTE *pbFileHash,_Inout_opt_ DWORD *pcbFileHash,_Out_opt_ ALG_ID *pHashAlgid)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsMgmtHandleSetExpAge(RPC_NS_HANDLE NsHandle None,unsigned long ExpirationAge)
BOOL WINAPI None.OffloadModExpo(_In_ BYTE *pbBase,_In_ BYTE *pbExpo,_In_ DWORD cbExpo,_In_ BYTE *pbMod,_In_ DWORD cbMod,_Out_ BYTE *pbResult,_In_ void *pReserved,_In_ DWORD dwFlags)
void None certadm.CertSrvBackupFree(_In_ VOID *pv)
HRESULT None None.GetViewModeAndIconSize([out] FOLDERVIEWMODE *puViewMode,[out] int *piImageSize)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsBindingExport(unsigned long EntryNameSyntax,unsigned char *EntryName,RPC_IF_HANDLE IfSpec None,RPC_BINDING_VECTOR *BindingVec None,UUID_VECTOR *ObjectUuidVec None)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsBindingExportW(unsigned long EntryNameSyntax,unsigned char *EntryName,RPC_IF_HANDLE IfSpec None,RPC_BINDING_VECTOR *BindingVec None,UUID_VECTOR *ObjectUuidVec None)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsBindingExportA(unsigned long EntryNameSyntax,unsigned char *EntryName,RPC_IF_HANDLE IfSpec None,RPC_BINDING_VECTOR *BindingVec None,UUID_VECTOR *ObjectUuidVec None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcSmSetThreadHandle(RPC_SS_THREAD_HANDLE Handle None)
HRESULT WINAPI cryptxml.CryptXmlDigestReference(_In_ HCRYPTXML hReference,DWORD dwFlags None,_In_ CRYPT_XML_DATA_PROVIDER *pDataProviderIn)
BOOL WINAPI authz.AuthzFreeAuditEvent(_In_ AUTHZ_AUDIT_EVENT_HANDLE pAuditEventInfo)
DWORD None None.NPFMXGetPermHelp(_In_ LPTSTR lpDriveName,_In_ DWORD nType,_In_ BOOL fDirectory,_Inout_ LPVOID lpBuffer,_Inout_ LPDWORD lpBufferSize,_Out_ LPDWORD lpnHelpContext)
HANDLE None wintrust.CryptCATOpen(_In_ LPWSTR pwszFileName,_In_ DWORD fdwOpenFlags,_In_ HCRYPTPROV hProv,_In_ DWORD dwPublicVersion,_In_ DWORD dwEncodingType)
BOOL WINAPI advapi32.CryptGenKey(_In_ HCRYPTPROV hProv,_In_ ALG_ID Algid,_In_ DWORD dwFlags,_Out_ HCRYPTKEY *phKey)
BOOL WINAPI wintrust.WintrustSetRegPolicyFlags(_In_ DWORD dwPolicyFlags)
PCCRL_CONTEXT WINAPI crypt32.CertGetCRLFromStore(_In_ HCERTSTORE hCertStore,_In_opt_ PCCERT_CONTEXT pIssuerContext,_In_ PCCRL_CONTEXT pPrevCrlContext,_Inout_ DWORD *pdwFlags)
BOOL WINAPI crypt32.CertAddCRLLinkToStore(_In_ HCERTSTORE hCertStore,_In_ PCCRL_CONTEXT pCrlContext,_In_ DWORD dwAddDisposition,_Out_opt_ PCCRL_CONTEXT *ppStoreContext)
HRESULT None None.SetOptions([in] EXPLORER_BROWSER_OPTIONS dwFlag)
BOOL WINAPI mssign32.GetCryptProvFromCert(_In_ HWND hwnd,_In_ PCCERT_CONTEXT pCert,_Out_ HCRYPTPROV *phCryptProv,_Out_ DWORD *pdwKeySpec,_In_ BOOL *pfDidCryptAcquire,_Out_opt_ LPWSTR *ppwszTmpContainer,_Out_opt_ LPWSTR *ppwszProviderName,_Out_ DWORD *pdwProviderType)
BOOL WINAPI advapi32.CryptDestroyHash(_In_ HCRYPTHASH hHash)
HRESULT None shell32.SetAppID([in] LPCWSTR pszAppID)
HRESULT None None.put_GroupBy([in] BSTR bstrGroupBy)
typedef None None.BOOL(WINAPI *PFN_CMSG_GEN_CONTENT_ENCRYPT_KEY None)
typedef None None.HRESULT(WINAPI *CryptXmlDllFinalizeDigest None)
public IAsyncOperationIMediaExtension None.AddAudioEffectAsync(IAudioEffectDefinition definition None)
NTSTATUS NTAPI None.CrediReadDomainCredentials(_In_ PLUID LogonId,_In_ ULONG CredFlags,_In_ PCREDENTIAL_TARGET_INFORMATIONW TargetInfo,ULONG Flags None,PULONG Count None,_Out_ PENCRYPTED_CREDENTIALW **Credential)
HRESULT None shell32.SHGetItemFromDataObject(_In_ IDataObject *pdtobj,_In_ DATAOBJ_GET_ITEM_FLAGS dwFlags,_In_ REFIID riid,_Out_ void **ppv)
BOOL WINAPI crypt32.CryptMsgSignCTL(_In_ DWORD dwMsgEncodingType,_In_ BYTE *pbCtlContent,_In_ DWORD cbCtlContent,_In_ PCMSG_SIGNED_ENCODE_INFO pSignInfo,_In_ DWORD dwFlags,_Out_ BYTE *pbEncoded,_Inout_ DWORD *pcbEncoded)
HRESULT None mfplat.MFCreateMediaExtensionActivate(_In_ PCWSTR szActivatableClassId,_In_ IUnknown *pConfiguration,_In_ REFIID riid,_Out_ LPVOID *ppvObject)
HRESULT None None.SetComboBoxSelectedValue([in] DWORD dwFieldID,[in] DWORD dwSelectedItem)
BOOL None wintrust.WintrustLoadFunctionPointers(_In_ GUID *pgActionID,_Out_ CRYPT_PROVIDER_FUNCTIONS *pPfns)
typedef None None.BOOL(WINAPI *PFN_CRYPT_OBJECT_LOCATOR_PROVIDER_GET None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcMgmtEpUnregister(RPC_BINDING_HANDLE EpBinding None,RPC_IF_ID *IfId None,RPC_BINDING_HANDLE Binding None,UUID *ObjectUuid None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcMgmtStatsVectorFree(RPC_STATS_VECTOR **StatsVector None)
RPC_STATUS RPC_ENTRY rpcrt4.MesDecodeIncrementalHandleCreate(void *UserState None,MIDL_ES_READ ReadFn None,handle_t *pHandle None)
NTSTATUS None secur32.LsaDeregisterLogonProcess(_In_ HANDLE LsaHandle)
BOOL WINAPI crypt32.CertAddCTLContextToStore(_In_ HCERTSTORE hCertStore,_In_ PCCTL_CONTEXT pCtlContext,_In_ DWORD dwAddDisposition,_Out_opt_ PCCTL_CONTEXT *ppStoreContext)
BOOL None comctl32.ImageList_DragMove(int x None,int y None)
BOOL None None.WlxSetReturnDesktop(_In_ HANDLE hWlx,_In_ PWLX_DESKTOP pDesktop)
BOOL WINAPI wintrust.OpenPersonalTrustDBDialog(_In_opt_ HWND hwndParent)
BOOL WINAPI crypt32.CryptVerifyCertificateSignature(_In_ HCRYPTPROV_LEGACY hCryptProv,_In_ DWORD dwCertEncodingType,_In_ BYTE *pbEncoded,_In_ DWORD cbEncoded,_In_ PCERT_PUBLIC_KEY_INFO pPublicKey)
void None mpr.WNetSetLastError(_In_ DWORD err,_In_ LPTSTR lpError,_In_ LPTSTR lpProvider)
void None mpr.WNetSetLastErrorA(_In_ DWORD err,_In_ LPTSTR lpError,_In_ LPTSTR lpProvider)
typedef None None.BOOL(CALLBACK *PCRYPT_DECRYPT_PRIVATE_KEY_FUNC None)
RPC_STATUS RPC_ENTRY rpcdiag.RpcDiagnoseError(_In_ RPC_BINDING_HANDLE BindingHandle,_In_ RPC_IF_HANDLE IfSpec,_In_ RPC_STATUS RpcStatus,_In_opt_ RPC_ERROR_ENUM_HANDLE *EnumHandle,_In_ ULONG Options,_In_opt_ HWND ParentWindow)
BOOL WINAPI None.CertStoreProvReadCTL(_In_ HCERTSTOREPROV hStoreProv,_In_ PCCTL_CONTEXT pStoreCtlContext,_In_ DWORD dwFlags,_Out_ PCCTL_CONTEXT *ppProvCtlContext)
NTSTATUS None None.CrackSingleName(_In_ ULONG FormatOffered,_In_ BOOLEAN PerformAtGC,_In_ PUNICODE_STRING NameInput,_In_opt_ PUNICODE_STRING Prefix,_In_ ULONG RequestedFormat,_Out_ PUNICODE_STRING CrackedName,_Out_ PUNICODE_STRING DnsDomainName,_Out_ PULONG SubStatus)
BOOL WINAPI advapi32.CryptGetUserKey(_In_ HCRYPTPROV hProv,_In_ DWORD dwKeySpec,_Out_ HCRYPTKEY *phUserKey)
HRESULT WINAPI cryptui.CertSelectionGetSerializedBlob(_In_ PCERT_SELECTUI_INPUT pcsi,_Out_ void **ppOutBuffer,_Out_ ULONG *pulOutBufferSize)
BOOL WINAPI advapi32.AddAce(_Inout_ PACL pAcl,_In_ DWORD dwAceRevision,_In_ DWORD dwStartingAceIndex,_In_ LPVOID pAceList,_In_ DWORD nAceListLength)
BOOL WINAPI crypt32.CryptFreeOIDFunctionAddress(_In_ HCRYPTOIDFUNCADDR hFuncAddr,_In_ DWORD dwFlags)
HRESULT None certadm.CertSrvBackupRead(_In_ HCSBC hbc,_Out_ VOID *pvBuffer,_In_ DWORD cbBuffer,_Out_ DWORD *pcbRead)
BOOL WINAPI kernel32.AddSIDToBoundaryDescriptor(_Inout_ HANDLE *BoundaryDescriptor,_In_ PSID RequiredSid)
RPC_STATUS RPC_ENTRY rpcrt4.DceErrorInqText(unsigned long StatusToConvert,unsigned char *ErrorText)
RPC_STATUS RPC_ENTRY rpcrt4.DceErrorInqTextW(unsigned long StatusToConvert,unsigned char *ErrorText)
RPC_STATUS RPC_ENTRY rpcrt4.DceErrorInqTextA(unsigned long StatusToConvert,unsigned char *ErrorText)
RPC_STATUS RPC_ENTRY rpcrt4.MesHandleFree(handle_t Handle None)
HRESULT None None.GetOptions([out] EXPLORER_BROWSER_OPTIONS *pdwFlag)
void RPC_ENTRY rpcrt4.RpcErrorClearInformation(void None None)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsBindingLookupDone(RPC_NS_HANDLE *LookupContext None)
BOOL WINAPI cryptui.CryptUIWizFreeDigitalSignContext(_In_ PCCRYPTUI_WIZ_DIGITAL_SIGN_CONTEXT pSignContext)
NTSTATUS None None.SpFormatCredentials(_In_ PSecBuffer Credentials,_Out_ PSecBuffer FormattedCredentials)
HRESULT None shell32.SHGetItemFromDataObject(_In_ IDataObject *pdtobj,_In_ DATAOBJ_GET_ITEM_FLAGS dwFlags,_In_ REFIID riid,_Out_ void **ppv)
HRESULT None None.GetForWindow([in] HWND appWindow,[in] REFIID riid,[out None None,optional] void **dataTransferManager)
BOOL WINAPI crypt32.CryptHashCertificate2(_In_ LPCWSTR pwszCNGHashAlgid,_In_ DWORD dwFlags,_Reserved_ void *pvReserved,_In_ BYTE *pbEncoded,_In_ DWORD cbEncoded,_Out_ BYTE *pbComputedHash,_Inout_ DWORD *pcbComputedHash)
void None None.WlxShutdown(_In_ PVOID pWlxContext,_In_ DWORD ShutdownType)
HCERTSTORE WINAPI crypt32.CertDuplicateStore(_In_ HCERTSTORE hCertStore)
BOOL WINAPI advapi32.DestroyPrivateObjectSecurity(_Inout_ PSECURITY_DESCRIPTOR *ObjectDescriptor)
VOID WINAPI crypt32.CertAddRefServerOcspResponseContext(_In_ PCCERT_SERVER_OCSP_RESPONSE_CONTEXT pServerOcspResponseContext)
SECURITY_STATUS SEC_Entry secur32.EncryptMessage(_In_ PCtxtHandle phContext,_In_ ULONG fQOP,_Inout_ PSecBufferDesc pMessage,_In_ ULONG MessageSeqNo)
HRESULT WINAPI mssign32.SignerTimeStamp(_In_ SIGNER_SUBJECT_INFO *pSubjectInfo,_In_ LPCWSTR pwszHttpTimeStamp,_In_opt_ PCRYPT_ATTRIBUTES psRequest,_In_opt_ LPVOID pSipData)
BOOL WINAPI None.CertEnumSystemStoreLocationCallback(_In_ LPCWSTR pvszStoreLocations,_In_ DWORD dwFlags,_In_ void *pvReserved,_In_ void *pvArg)
UINT WINAPI user32.GetWindowModuleFileName(_In_ HWND hwnd,_Out_ LPTSTR lpszFileName,_In_ UINT cchFileNameMax)
UINT WINAPI user32.GetWindowModuleFileNameW(_In_ HWND hwnd,_Out_ LPTSTR lpszFileName,_In_ UINT cchFileNameMax)
UINT WINAPI user32.GetWindowModuleFileNameA(_In_ HWND hwnd,_Out_ LPTSTR lpszFileName,_In_ UINT cchFileNameMax)
LONG WINAPI winscard.SCardForgetReaderGroup(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szGroupName)
LONG WINAPI winscard.SCardForgetReaderGroupW(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szGroupName)
LONG WINAPI winscard.SCardForgetReaderGroupA(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szGroupName)
void WINAPI kernel32.EnterCriticalSection(_Inout_ LPCRITICAL_SECTION lpCriticalSection)
BOOL WINAPI advapi32.ConvertToAutoInheritPrivateObjectSecurity(_In_opt_ PSECURITY_DESCRIPTOR ParentDescriptor,_In_ PSECURITY_DESCRIPTOR CurrentSecurityDescriptor,_Out_ PSECURITY_DESCRIPTOR *NewSecurityDescriptor,_In_opt_ GUID *ObjectType,_In_ BOOLEAN IsDirectoryObject,_In_ PGENERIC_MAPPING GenericMapping)
BOOL WINAPI crypt32.CertCompareCertificateName(_In_ DWORD dwCertEncodingType,_In_ PCERT_NAME_BLOB pCertName1,_In_ PCERT_NAME_BLOB pCertName2)
BOOL WINAPI authz.AuthzInitializeResourceManager(_In_ DWORD flags,_In_opt_ PFN_AUTHZ_DYNAMIC_ACCESS_CHECK pfnAccessCheck,_In_opt_ PFN_AUTHZ_COMPUTE_DYNAMIC_GROUPS pfnComputeDynamicGroups,_In_opt_ PFN_AUTHZ_FREE_DYNAMIC_GROUPS pfnFreeDynamicGroups,_In_ PCWSTR szResourceManagerName,_Out_ PAUTHZ_RESOURCE_MANAGER_HANDLE phAuthzResourceManager)
HRESULT None None.GetFont([out] LOGFONTW *plf)
LONG WINAPI winscard.SCardGetCardTypeProviderName(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCardName,_In_ DWORD dwProviderId,_Out_ LPTSTR szProvider,_Inout_ LPDWORD pcchProvider)
LONG WINAPI winscard.SCardGetCardTypeProviderNameW(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCardName,_In_ DWORD dwProviderId,_Out_ LPTSTR szProvider,_Inout_ LPDWORD pcchProvider)
LONG WINAPI winscard.SCardGetCardTypeProviderNameA(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCardName,_In_ DWORD dwProviderId,_Out_ LPTSTR szProvider,_Inout_ LPDWORD pcchProvider)
ULONG None None.RKeyOpenKeyService(_In_ LPSTR pszMachineName,_In_ KEYSVC_TYPE OwnerType,_In_ LPWSTR pwszOwnerName,_In_ void *pAuthentication,_Inout_ void *pReserved,_Out_ KEYSVCC_HANDLE *phKeySvcCli)
HRESULT None None.IsMediaTypeSupported([in] IMFMediaType *pMediaType,[out] IMFMediaType **ppMediaType)
HRESULT WINAPI cryptxml.CryptXmlGetTransforms(_Out_ PCRYPT_XML_TRANSFORM_CHAIN_CONFIG **pConfig)
RPC_STATUS RPC_ENTRY rpcrt4.RpcMgmtSetAuthorizationFn(RPC_MGMT_AUTHORIZATION_FN AuthorizationFn None)
BOOL None wintrust.CryptCATAdminReleaseCatalogContext(_In_ HCATADMIN hCatAdmin,_In_ HCATINFO hCatInfo,_In_ DWORD dwFlags)
PCCERT_CONTEXT WINAPI crypt32.CertCreateSelfSignCertificate(_In_opt_ HCRYPTPROV_OR_NCRYPT_KEY_HANDLE hCryptProvOrNCryptKey,_In_ PCERT_NAME_BLOB pSubjectIssuerBlob,_In_ DWORD dwFlags,_In_opt_ PCRYPT_KEY_PROV_INFO pKeyProvInfo,_In_opt_ PCRYPT_ALGORITHM_IDENTIFIER pSignatureAlgorithm,_In_opt_ PSYSTEMTIME pStartTime,_In_opt_ PSYSTEMTIME pEndTime,PCERT_EXTENSIONS pExtensions None)
SECURITY_STATUS None sspicli.SspiCompareAuthIdentities(_In_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE AuthIdentity1,_In_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE AuthIdentity2,_Out_ PBOOLEAN SameSuppliedUser,_Out_ PBOOLEAN SameSuppliedIdentity)
BOOL WINAPI crypt32.CertAddEnhancedKeyUsageIdentifier(_In_ PCCERT_CONTEXT pCertContext,_In_ LPCSTR pszUsageIdentifier)
BOOL WINAPI authz.AuthzFreeResourceManager(_In_ AUTHZ_RESOURCE_MANAGER_HANDLE AuthzResourceManager)
void WINAPI wintrust.WintrustGetRegPolicyFlags(_Out_ DWORD *pdwPolicyFlags)
RPC_ENTRY None rpcrt4.UuidCreateNil(UUID __RPC_FAR *Nil_Uuid)
BOOL None cryptdlg.CertViewProperties(_In_ CERT_VIEWPROPERTIES_STRUCT *pCertViewInfo)
BOOL None cryptdlg.CertViewPropertiesW(_In_ CERT_VIEWPROPERTIES_STRUCT *pCertViewInfo)
BOOL None cryptdlg.CertViewPropertiesA(_In_ CERT_VIEWPROPERTIES_STRUCT *pCertViewInfo)
void None None.FuncReturnhWnd(_Inout_ HWND *phWnd)
RPC_STATUS RPC_ENTRY rpcrt4.RpcSmClientFree(void *NodeToFree None)
NTSTATUS None None.SpSaveCredentials(_In_ LSA_SEC_HANDLE CredentialHandle,_In_ PSecBuffer Credentials)
BOOL WINAPI crypt32.CryptSIPRetrieveSubjectGuidForCatalogFile(_In_ LPCWSTR FileName,_In_opt_ HANDLE hFileIn,_Out_ GUID *pgSubject)
BOOL WINAPI None.CertStoreProvGetCTLProperty(_In_ HCERTSTOREPROV hStoreProv,_In_ PCCTL_CONTEXT pCtlContext,_In_ DWORD dwPropId,_In_ DWORD dwFlags,_Out_ void *pvData,_Inout_ DWORD *pcbData)
HRESULT THEMEAPI uxtheme.GetThemeAnimationProperty(_In_ HTHEME hTheme,_In_ int iStoryboardId,_In_ int iTargetId,_In_ TA_PROPERTY eProperty,_Out_ VOID *pvProperty,_In_ DWORD cbSize,_Out_ DWORD pcbSizeOut)
NTSTATUS None None.GetAuthDataForUser(_In_ PSECURITY_STRING Name,_In_ SECPKG_NAME_TYPE NameType,_In_ PSECURITY_STRING Prefix,_Out_ PUCHAR *UserAuthData,_Out_ PULONG UserAuthDataSize,_Out_ PUNICODE_STRING UserFlatName)
BOOL WINAPI cryptui.CryptUIDlgViewCertificate(_In_ PCCRYPTUI_VIEWCERTIFICATE_STRUCTW pCertViewInfo,_Out_ BOOL *pfPropertiesChanged)
BOOL WINAPI cryptui.CryptUIDlgViewCertificateW(_In_ PCCRYPTUI_VIEWCERTIFICATE_STRUCTW pCertViewInfo,_Out_ BOOL *pfPropertiesChanged)
BOOL WINAPI cryptui.CryptUIDlgViewCertificateA(_In_ PCCRYPTUI_VIEWCERTIFICATE_STRUCTW pCertViewInfo,_Out_ BOOL *pfPropertiesChanged)
BOOL WINAPI crypt32.CertCompareIntegerBlob(_In_ PCRYPT_INTEGER_BLOB pInt1,_In_ PCRYPT_INTEGER_BLOB pInt2)
BOOL None wintrust.CryptCATAdminCalcHashFromFileHandle(_In_ HANDLE hFile,_Inout_ DWORD *pcbHash,_In_ BYTE *pbHash,_In_ DWORD dwFlags)
SECURITY_STATUS SEC_ENTRY secur32.SaslGetContextOption(_In_ PCtxtHandle ContextHandle,_In_ ULONG Option,_Out_ PVOID Value,_Out_ ULONG Size,_Out_opt_ PULONG Needed)
RPC_STATUS RPC_ENTRY rpcrt4.RpcGetAuthorizationContextForClient(_In_opt_ RPC_BINDING_HANDLE ClientBinding,_In_ BOOL ImpersonateOnReturn,_In_ PVOID Reserved1,_In_opt_ PLARGE_INTEGER pExpirationTime,_In_ LUID Reserved2,_In_ DWORD Reserved3,_In_ PVOID Reserved4,_Out_ PVOID *pAuthzClientContext)
NTSTATUS None None.LsaApCallPackageUntrusted(_In_ PLSA_CLIENT_REQUEST ClientRequest,_In_ PVOID ProtocolSubmitBuffer,_In_ PVOID ClientBufferBase,_In_ ULONG SubmitBufferLength,_Out_ PVOID *ProtocolReturnBuffer,_Out_ PULONG ReturnBufferLength,_Out_ PNTSTATUS ProtocolStatus)
int None None.WlxChangePasswordNotifyEx(_In_ HANDLE hWlx,_In_ PWLX_MPR_NOTIFY_INFO pMprInfo,_In_ DWORD dwChangeInfo,_In_ PWSTR ProviderName,_In_ PVOID Reserved)
RPC_STATUS RPC_ENTRY rpcrt4.RpcImpersonateClientContainer(_In_opt_ RPC_BINDING_HANDLE BindingHandle)
RPC_STATUS RPC_ENTRY rpcrt4.RpcStringBindingParse(TCHAR *StringBinding None,TCHAR **ObjectUuid None,TCHAR **ProtSeq None,TCHAR **NetworkAddr None,TCHAR **EndPoint None,TCHAR **NetworkOptions None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcStringBindingParseW(TCHAR *StringBinding None,TCHAR **ObjectUuid None,TCHAR **ProtSeq None,TCHAR **NetworkAddr None,TCHAR **EndPoint None,TCHAR **NetworkOptions None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcStringBindingParseA(TCHAR *StringBinding None,TCHAR **ObjectUuid None,TCHAR **ProtSeq None,TCHAR **NetworkAddr None,TCHAR **EndPoint None,TCHAR **NetworkOptions None)
BOOL WINAPI user32.GetUserObjectSecurity(_In_ HANDLE hObj,_In_ PSECURITY_INFORMATION pSIRequested,_Inout_opt_ PSECURITY_DESCRIPTOR pSD,_In_ DWORD nLength,_Out_ LPDWORD lpnLengthNeeded)
typedef None None.BOOL(WINAPI *PFN_CERT_STORE_PROV_CONTROL None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcErrorAddRecord(_In_ RPC_EXTENDED_ERROR_INFO *ErrorInfo)
DWORD None None.NPPropertyDialog(_In_ HWND hwndParent,_In_ DWORD iButtonDlg,_In_ DWORD nPropSel,_In_ LPTSTR lpFileName,_In_ DWORD nType)
function None None.onDataRequested(eventArgs None None)
NTSTATUS None None.SpGetContextToken(_In_ LSA_SEC_HANDLE ContextHandle,_Out_ PHANDLE ImpersonationToken)
BOOL None wintrust.WintrustRemoveActionID(_In_ GUID *pgActionID)
BOOL WINAPI crypt32.PFXExportCertStoreEx(_In_ HCERTSTORE hStore,_Inout_ CRYPT_DATA_BLOB *pPFX,_In_ LPCWSTR szPassword,_In_ void *pvPara,_In_ DWORD dwFlags)
BOOL WINAPI crypt32.CryptMsgGetAndVerifySigner(_In_ HCRYPTMSG hCryptMsg,_In_ DWORD cSignerStore,_In_opt_ HCERTSTORE *rghSignerStore,_In_ DWORD dwFlags,_Out_opt_ PCCERT_CONTEXT *ppSigner,_Inout_opt_ DWORD *pdwSignerIndex)
RPC_STATUS RPC_ENTRY rpcrt4.RpcImpersonateClient(RPC_BINDING_HANDLE BindingHandle None)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsMgmtBindingUnexport(unsigned long EntryNameSyntax,unsigned char *EntryName,RPC_IF_ID *IfId None,unsigned long VersOption,UUID_VECTOR *ObjectUuidVec None)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsMgmtBindingUnexportW(unsigned long EntryNameSyntax,unsigned char *EntryName,RPC_IF_ID *IfId None,unsigned long VersOption,UUID_VECTOR *ObjectUuidVec None)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsMgmtBindingUnexportA(unsigned long EntryNameSyntax,unsigned char *EntryName,RPC_IF_ID *IfId None,unsigned long VersOption,UUID_VECTOR *ObjectUuidVec None)
BOOL None None.WlxScreenSaverNotify(_In_ PVOID pWlxContext,_Inout_ BOOL *pSecure)
DWORD None None.NPGetConnection(_In_ LPTSTR lpLocalName,_Out_ LPTSTR lpRemoteName,_Inout_ LPDWORD lpBufferSize)
BOOL CALLBACK None.AuthzAccessCheckCallback(_In_ AUTHZ_CLIENT_CONTEXT_HANDLE hAuthzClientContext,_In_ PACE_HEADER pAce,_In_opt_ PVOID pArgs,_Inout_ PBOOL pbAceApplicable)
typedef None None.BOOL(WINAPI *PFN_CRYPT_EXPORT_PUBLIC_KEY_INFO_EX2_FUNC None)
PCCERT_CONTEXT WINAPI crypt32.CertDuplicateCertificateContext(_In_ PCCERT_CONTEXT pCertContext)
RPC_STATUS RPC_ENTRY rpcrt4.RpcEpResolveBinding(RPC_BINDING_HANDLE Binding None,RPC_IF_HANDLE IfSpec None)
BOOL WINAPI crypt32.CryptInstallOIDFunctionAddress(_In_ HMODULE hModule,_In_ DWORD dwEncodingType,_In_ LPCSTR pszFuncName,_In_ DWORD cFuncEntry,_In_ CRYPT_OID_FUNC_ENTRY rgFuncEntry[],_In_ DWORD dwFlags)
DWORD None None.NPFMXEditPerm(_In_ LPTSTR lpDriveName,_In_ HWND hwndFMX,_In_ DWORD nType)
int None None.WlxMessageBox(_In_ HANDLE hWlx,_In_ HWND hwndOwner,_In_ LPWSTR lpszText,_In_ LPWSTR lpszTitle,_In_ UINT fuStyle)
RPC_STATUS RPC_ENTRY rpcrt4.RpcServerRegisterIf(RPC_IF_HANDLE IfSpec None,UUID *MgrTypeUuid None,RPC_MGR_EPV *MgrEpv None)
BOOL WINAPI crypt32.CryptMsgVerifyCountersignatureEncoded(_In_ HCRYPTPROV_LEGACY hCryptProv,_In_ DWORD dwEncodingType,_In_ PBYTE pbSignerInfo,_In_ DWORD cbSignerInfo,_In_ PBYTE pbSignerInfoCountersignature,_In_ DWORD cbSignerInfoCountersignature,_In_ PCERT_INFO pciCountersigner)
BOOL WINAPI None.CertStoreProvFreeFindCert(_In_ HCERTSTOREPROV hStoreProv,_In_ PCCERT_CONTEXT pCertContext,_In_ void *pvStoreProvFindInfo,_In_ DWORD dwFlags)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsProfileEltInqNext(RPC_NS_HANDLE InquiryContext None,RPC_IF_ID *IfId None,unsigned char **MemberName,unsigned long *Priority,unsigned char **Annotation)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsProfileEltInqNextW(RPC_NS_HANDLE InquiryContext None,RPC_IF_ID *IfId None,unsigned char **MemberName,unsigned long *Priority,unsigned char **Annotation)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsProfileEltInqNextA(RPC_NS_HANDLE InquiryContext None,RPC_IF_ID *IfId None,unsigned char **MemberName,unsigned long *Priority,unsigned char **Annotation)
NTSTATUS None None.SpAcquireCredentialsHandle(_In_ PUNICODE_STRING PrincipalName,_In_ ULONG CredentialUseFlags,_In_ PLUID LogonId,_In_ PVOID AuthorizationData,_In_ PVOID GetKeyFunction,_In_ PVOID GetKeyArgument,_Out_ PLSA_SEC_HANDLE CredentialHandle,_Out_ PTimeStamp ExpirationTime)
BOOL WINAPI None.CertStoreProvFindCTL(_In_ HCERTSTOREPROV hStoreProv,_In_ PCCERT_STORE_PROV_FIND_INFO pFindInfo,_In_ PCCTL_CONTEXT pPrevCtlContext,_In_ DWORD dwFlags,_Inout_ void **ppvStoreProvFindInfo,_Out_ PCCTL_CONTEXT *ppProvCtlContext)
RPC_STATUS RPC_ENTRY rpcrt4.MesBufferHandleReset(handle_t Handle None,unsigned long HandleStyle,MIDL_ES_CODE OpCode None,char **ppBuffer None,unsigned long BufferSize,unsigned long *pEncodedSize)
typedef None None.BOOL(WINAPI *PFN_CRYPT_SIGN_AND_ENCODE_HASH_FUNC None)
BOOL None None.WlxNegotiate(_In_ DWORD dwWinLogonVersion,_Out_ PDWORD pdwDllVersion)
NTSTATUS None None.CallPackageEx(_In_ PUNICODE_STRING AuthenticationPackage,_In_ PVOID ClientBufferBase,_In_ PVOID ProtocolSubmitBuffer,_In_ ULONG SubmitBufferLength,_Out_ PVOID *ProtocolReturnBuffer,_Out_ PULONG ReturnBufferLength,_Out_ PNTSTATUS ProtocolStatus)
NTSTATUS SEC_ENTRY None.SpUserModeInitialize(_In_ ULONG LsaVersion,_Out_ PULONG PackageVersion,_Out_ PSECPKG_USER_FUNCTION_TABLE *ppTables,_Out_ PULONG pcTables)
HRESULT None uxtheme.GetThemeSysString(_In_ HTHEME hTheme,_In_ int iStringID,_Out_ LPWSTR pszStringBuff,_In_ int cchMaxStringChars)
BOOL WINAPI crypt32.CryptMsgClose(_In_ HCRYPTMSG hCryptMsg)
RPC_STATUS RPC_ENTRY rpcrt4.RpcNetworkInqProtseqs(RPC_PROTSEQ_VECTOR **ProtSeqVector None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcNetworkInqProtseqsW(RPC_PROTSEQ_VECTOR **ProtSeqVector None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcNetworkInqProtseqsA(RPC_PROTSEQ_VECTOR **ProtSeqVector None)
HRESULT CALLBACK None.PFN_CRYPT_XML_WRITE_CALLBACK(_Inout_ void *pvCallbackState,_In_ BYTE pbData,ULONG cbData None)
BOOLEAN None None.GetCallInfo(_Out_ PSECPKG_CALL_INFO Info)
BOOLEAN None advapi32.RtlGenRandom(_Out_ PVOID RandomBuffer,_In_ ULONG RandomBufferLength)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsProfileEltInqNext(RPC_NS_HANDLE InquiryContext None,RPC_IF_ID *IfId None,unsigned char **MemberName,unsigned long *Priority,unsigned char **Annotation)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsProfileEltInqNextW(RPC_NS_HANDLE InquiryContext None,RPC_IF_ID *IfId None,unsigned char **MemberName,unsigned long *Priority,unsigned char **Annotation)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsProfileEltInqNextA(RPC_NS_HANDLE InquiryContext None,RPC_IF_ID *IfId None,unsigned char **MemberName,unsigned long *Priority,unsigned char **Annotation)
BOOL None crypt32.CryptSIPRemoveProvider(_In_ GUID *pgProv)
BOOL CALLBACK None.EnumChildProc(_In_ HWND hwnd,_In_ LPARAM lParam)
BOOL WINAPI cryptui.CryptUIWizImport(_In_ DWORD dwFlags,_In_ HWND hwndParent,_In_ LPCWSTR pwszWizardTitle,_In_ PCCRYPTUI_WIZ_IMPORT_SRC_INFO pImportSrc,_In_ HCERTSTORE hDestCertStore)
BOOL WINAPI crypt32.CertEnumSystemStore(_In_ DWORD dwFlags,_In_opt_ void *pvSystemStoreLocationPara,_In_ void *pvArg,_In_ PFN_CERT_ENUM_SYSTEM_STORE pfnEnum)
RPC_STATUS RPC_ENTRY rpcrt4.RpcServerUseAllProtseqsEx(unsigned int MaxCalls,void *SecurityDescriptor None,PRPC_POLICY Policy None)
VOID None None.WlxSasNotify(_In_ HANDLE hWlx,_In_ DWORD dwSasType)
LONG WINAPI winscard.SCardGetDeviceTypeId(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReaderName,_Inout_ LPDWORD pdwDeviceTypeId)
LONG WINAPI winscard.SCardGetDeviceTypeIdW(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReaderName,_Inout_ LPDWORD pdwDeviceTypeId)
LONG WINAPI winscard.SCardGetDeviceTypeIdA(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReaderName,_Inout_ LPDWORD pdwDeviceTypeId)
NTSTATUS None advapi32.LsaQueryInformationPolicy(_In_ LSA_HANDLE PolicyHandle,_In_ POLICY_INFORMATION_CLASS InformationClass,_Out_ PVOID *Buffer)
RPC_STATUS RPC_ENTRY rpcrt4.RpcBindingInqAuthClient(RPC_BINDING_HANDLE ClientBinding None,RPC_AUTHZ_HANDLE *Privs None,unsigned char **ServerPrincName,unsigned long *AuthnLevel,unsigned long *AuthnSvc,unsigned long *AuthzSvc)
RPC_STATUS RPC_ENTRY rpcrt4.RpcBindingInqAuthClientW(RPC_BINDING_HANDLE ClientBinding None,RPC_AUTHZ_HANDLE *Privs None,unsigned char **ServerPrincName,unsigned long *AuthnLevel,unsigned long *AuthnSvc,unsigned long *AuthzSvc)
RPC_STATUS RPC_ENTRY rpcrt4.RpcBindingInqAuthClientA(RPC_BINDING_HANDLE ClientBinding None,RPC_AUTHZ_HANDLE *Privs None,unsigned char **ServerPrincName,unsigned long *AuthnLevel,unsigned long *AuthnSvc,unsigned long *AuthzSvc)
typedef None None.BOOL(WINAPI *PFN_CRYPT_VERIFY_ENCODED_SIGNATURE_FUNC None)
BOOL WINAPI crypt32.CertEnumSubjectInSortedCTL(_In_ PCCTL_CONTEXT pCtlContext,_Inout_ void **ppvNextSubject,_Out_ PCRYPT_DER_BLOB pSubjectIdentifier,_Out_ PCRYPT_DER_BLOB pEncodedAttributes)
NTSTATUS None None.LsaApLogonUser(_In_ PLSA_CLIENT_REQUEST ClientRequest,_In_ SECURITY_LOGON_TYPE LogonType,_In_ PVOID AuthenticationInformation,_In_ PVOID ClientAuthenticationBase,_In_ ULONG AuthenticationInformationLength,_Out_ PVOID *ProfileBuffer,_Out_ PULONG ProfileBufferLength,_Out_ PLUID LogonId,_Out_ PNTSTATUS SubStatus,_Out_ PLSA_TOKEN_INFORMATION_TYPE TokenInformationType,_Out_ PVOID *TokenInformation,_Out_ PLSA_UNICODE_STRING *AccountName,_Out_ PLSA_UNICODE_STRING *AuthenticatingAuthority)
BOOL WINAPI None.CertStoreProvWriteCTL(_In_ HCERTSTOREPROV hStoreProv,_In_ PCCTL_CONTEXT pCtlContext,_In_ DWORD dwFlags)
PCCERT_CONTEXT WINAPI cryptui.CryptUIDlgSelectCertificate(_In_ PCCRYPTUI_SELECTCERTIFICATE_STRUCT pcsc)
PCCERT_CONTEXT WINAPI cryptui.CryptUIDlgSelectCertificateW(_In_ PCCRYPTUI_SELECTCERTIFICATE_STRUCT pcsc)
PCCERT_CONTEXT WINAPI cryptui.CryptUIDlgSelectCertificateA(_In_ PCCRYPTUI_SELECTCERTIFICATE_STRUCT pcsc)
BOOL WINAPI advapi32.LogonUserExExW(_In_ LPTSTR lpszUsername,_In_opt_ LPTSTR lpszDomain,_In_opt_ LPTSTR lpszPassword,_In_ DWORD dwLogonType,_In_ DWORD dwLogonProvider,_In_opt_ PTOKEN_GROUPS pTokenGroups,_Out_opt_ PHANDLE phToken,_Out_opt_ PSID *ppLogonSid,_Out_opt_ PVOID *ppProfileBuffer,_Out_opt_ LPDWORD pdwProfileLength,_Out_opt_ PQUOTA_LIMITS pQuotaLimits)
BOOL WINAPI crypt32.CertFreeCRLContext(_In_ PCCRL_CONTEXT pCrlContext)
HRESULT None mf.MFCreateASFSplitter(IMFASFSplitter **ppISplitter None)
BOOL WINAPI crypt32.CertGetValidUsages(_In_ DWORD cCerts,_In_ PCCERT_CONTEXT *rghCerts,_Out_ int *cNumOIDs,_Out_ LPSTR *rghOIDs,_Inout_ DWORD *pcbOIDs)
LONG WINAPI winscard.SCardControl(_In_ SCARDHANDLE hCard,_In_ DWORD dwControlCode,_In_ LPCVOID lpInBuffer,_In_ DWORD nInBufferSize,_Out_ LPVOID lpOutBuffer,_In_ DWORD nOutBufferSize,_Out_ LPDWORD lpBytesReturned)
DWORD None None.NPGetConnection3(_In_ LPCWSTR lpLocalName,_In_ DWORD dwLevel,_Out_ LPVOID lpBuffer,_Inout_ LPDWORD lpBufferSize)
LONG WINAPI winscard.SCardFreeMemory(_In_ SCARDCONTEXT hContext,_In_ LPCVOID pvMem)
int RPC_ENTRY rpcrt4.UuidIsNil(UUID __RPC_FAR *Uuid,RPC_STATUS __RPC_FAR *Status)
typedef None None.HRESULT(WINAPI *CryptXmlDllCloseDigest None)
BOOL WINAPI user32.EndDeferWindowPos(_In_ HDWP hWinPosInfo)
RPC_STATUS RPC_ENTRY rpcrt4.RpcMgmtSetComTimeout(RPC_BINDING_HANDLE Binding None,unsigned int Timeout)
BOOL WINAPI crypt32.CryptProtectData(_In_ DATA_BLOB *pDataIn,_In_opt_ LPCWSTR szDataDescr,_In_opt_ DATA_BLOB *pOptionalEntropy,_Reserved_ PVOID pvReserved,_In_opt_ CRYPTPROTECT_PROMPTSTRUCT *pPromptStruct,_In_ DWORD dwFlags,_Out_ DATA_BLOB *pDataOut)
BOOL WINAPI user32.SetForegroundWindow(_In_ HWND hWnd)
BOOL None advapi32.CredMarshalCredential(_In_ CRED_MARSHAL_TYPE CredType,_In_ PVOID Credential,_Out_ LPTSTR *MarshaledCredential)
BOOL None advapi32.CredMarshalCredentialW(_In_ CRED_MARSHAL_TYPE CredType,_In_ PVOID Credential,_Out_ LPTSTR *MarshaledCredential)
BOOL None advapi32.CredMarshalCredentialA(_In_ CRED_MARSHAL_TYPE CredType,_In_ PVOID Credential,_Out_ LPTSTR *MarshaledCredential)
HRESULT None mfplat.MFGetPlaneSize(_In_ DWORD format,_In_ DWORD dwWidth,_In_ DWORD dwHeight,_Out_ DWORD *pdwPlaneSize)
NTSTATUS None None.AddCredential(_In_ PLUID LogonId,_In_ ULONG AuthenticationPackage,_In_ PLSA_STRING PrimaryKeyValue,_In_ PLSA_STRING Credentials)
NTSTATUS None None.SpGetCredentials(_In_ LSA_SEC_HANDLE CredentialHandle,_Out_ PSecBuffer Credentials)
PCCRYPT_OID_INFO WINAPI crypt32.CryptFindOIDInfo(_In_ DWORD dwKeyType,_In_ void *pvKey,_In_ DWORD dwGroupId)
HRESULT None mfplat.MFCreateMFByteStreamOnStreamEx(_In_ IUnknown punkStream,_Out_ IMFByteStream **ppByteStream)
NTSTATUS None None.MapBuffer(_In_ PSecBuffer InputBuffer,_Out_ PSecBuffer OutputBuffer)
BOOL WINAPI None.CryptGetLocalKeyLimits(_In_ ALG_ID algId,_In_ DWORD dwFlags,_Out_ PCRYPT_KEY_LIMITS pLimits,_Inout_ LPDWORD cbLimitLength)
NTSTATUS None None.UnloadPackage(void None None)
NTSTATUS None None.SpDeleteContext(_In_ LSA_SEC_HANDLE ContextHandle)
RPC_STATUS RPC_ENTRY rpcrt4.RpcEpRegister(RPC_IF_HANDLE IfSpec None,RPC_BINDING_VECTOR *BindingVector None,UUID_VECTOR *UuidVector None,unsigned char *Annotation)
RPC_STATUS RPC_ENTRY rpcrt4.RpcEpRegisterW(RPC_IF_HANDLE IfSpec None,RPC_BINDING_VECTOR *BindingVector None,UUID_VECTOR *UuidVector None,unsigned char *Annotation)
RPC_STATUS RPC_ENTRY rpcrt4.RpcEpRegisterA(RPC_IF_HANDLE IfSpec None,RPC_BINDING_VECTOR *BindingVector None,UUID_VECTOR *UuidVector None,unsigned char *Annotation)
NTSTATUS WINAPI None.Msv1_0SubAuthenticationRoutineGeneric(PVOID SubmitBuffer None,ULONG SubmitBufferLength None,_Out_ PULONG ReturnBufferLength,_Out_ PVOID *ReturnBuffer)
HRESULT None certadm.CertSrvBackupEnd(_In_ HCSBC hbc)
PCERT_EXTENSION WINAPI crypt32.CertFindExtension(_In_ LPCSTR pszObjId,_In_ DWORD cExtensions,_In_ CERT_EXTENSION rgExtensions[])
BOOLEAN WINAPI advapi32.AuditQueryGlobalSacl(_In_ PCWSTR ObjectTypeName,_Out_ PACL *Acl)
BOOLEAN WINAPI advapi32.AuditQueryGlobalSaclW(_In_ PCWSTR ObjectTypeName,_Out_ PACL *Acl)
BOOLEAN WINAPI advapi32.AuditQueryGlobalSaclA(_In_ PCWSTR ObjectTypeName,_Out_ PACL *Acl)
VOID None None.FreeLsaHeap(_In_ PVOID Base)
void NTAPI None.FreePrivateHeap(_In_ PVOID Base)
SECURITY_STATUS SEC_ENTRY secur32.SaslGetProfilePackage(_In_ LPTSTR ProfileName,_Out_ PSecPkgInfo *PackageInfo)
SECURITY_STATUS SEC_ENTRY secur32.SaslGetProfilePackageW(_In_ LPTSTR ProfileName,_Out_ PSecPkgInfo *PackageInfo)
SECURITY_STATUS SEC_ENTRY secur32.SaslGetProfilePackageA(_In_ LPTSTR ProfileName,_Out_ PSecPkgInfo *PackageInfo)
BOOL WINAPI cryptdlg.CertSelectCertificate(_Inout_ PCERT_SELECT_STRUCT_W pCertSelectInfo)
NTSTATUS None None.FreeClientBuffer(_In_ PLSA_CLIENT_REQUEST ClientRequest,_In_ PVOID ClientBaseAddress)
LONG WINAPI winscard.SCardCancel(_In_ SCARDCONTEXT hContext)
BOOL WINAPI kernel32.ReleaseMutex(_In_ HANDLE hMutex)
void WINAPI kernel32.InitializeSListHead(_Inout_ PSLIST_HEADER ListHead)
BOOL WINAPI crypt32.CryptExportPKCS8(_In_ HCRYPTPROV hCryptProv,_In_ DWORD dwKeySpec,_In_ LPSTR pszPrivateKeyObjId,_In_ DWORD dwFlags,_In_opt_ void *pvAuxInfo,_Out_opt_ BYTE *pbPrivateKeyBlob,_Inout_ DWORD *pcbPrivateKeyBlob)
RPC_STATUS RPC_ENTRY rpcrt4.RpcEpUnregister(RPC_IF_HANDLE IfSpec None,RPC_BINDING_VECTOR *BindingVector None,UUID_VECTOR *UuidVector None)
int None None.WlxAssignShellProtection(_In_ HANDLE hWlx,_In_ HANDLE hToken,_In_ HANDLE hProcess,_In_ HANDLE hThread)
HCERTSTORE WINAPI crypt32.CertOpenSystemStore(_In_ HCRYPTPROV_LEGACY hprov,_In_ LPTCSTR szSubsystemProtocol)
HCERTSTORE WINAPI crypt32.CertOpenSystemStoreW(_In_ HCRYPTPROV_LEGACY hprov,_In_ LPTCSTR szSubsystemProtocol)
HCERTSTORE WINAPI crypt32.CertOpenSystemStoreA(_In_ HCRYPTPROV_LEGACY hprov,_In_ LPTCSTR szSubsystemProtocol)
BOOL WINAPI None.CertStoreProvDeleteCertCallback(_In_ HCERTSTOREPROV hStoreProv,_In_ PCCERT_CONTEXT pCertContext,_In_ DWORD dwFlags)
HANDLE WINAPI wintrust.CryptCATHandleFromStore(_In_ CRYPTCATSTORE *pCatStore)
typedef None None.BOOL(WINAPI *pCryptSIPGetCaps None)
BOOL WINAPI kernel32.InitializeSynchronizationBarrier(_Out_ LPSYNCHRONIZATION_BARRIER lpBarrier,_In_ LONG lTotalThreads,_In_ LONG lSpinCount)
RPC_STATUS RPC_ENTRY rpcrt4.RpcErrorGetNumberOfRecords(_In_ RPC_ERROR_ENUM_HANDLE *EnumHandle,_Out_ int *Records)
DWORD None None.NPDeviceMode(_In_ HWND hParent)
FORCEINLINE HANDLE None.GetCurrentProcessToken(void None None)
BOOL None crypt32.CertGetStoreProperty(_In_ HCERTSTORE hCertStore,_In_ DWORD dwPropId,_Out_ void *pvData,_Inout_ DWORD *pcbData)
HCRYPTMSG WINAPI crypt32.CryptMsgDuplicate(_In_ HCRYPTMSG hCryptMsg)
LONG WINAPI winscard.SCardEndTransaction(_In_ SCARDHANDLE hCard,_In_ DWORD dwDisposition)
LONG WINAPI crypt32.CertVerifyCRLTimeValidity(_In_ LPFILETIME pTimeToVerify,_In_ PCRL_INFO pCrlInfo)
DWORD None None.NPAddConnection(_In_ LPNETRESOURCE lpNetResource,_In_ LPTSTR lpPassword,_In_ LPTSTR lpUserName)
typedef None None.BOOL(WINAPI *PFN_CMSG_CNG_IMPORT_KEY_TRANS None)
NTSTATUS NTAPI None.SpGetCredUIContextFn(_In_ LSA_SEC_HANDLE ContextHandle,_In_ GUID *CredType,_Out_ PULONG FlatCredUIContextLength,_Out_ PUCHAR *FlatCredUIContext)
BOOL WINAPI crypt32.CertCloseStore(_In_ HCERTSTORE hCertStore,_In_ DWORD dwFlags)
void None None.WlxDisplaySASNotice(_In_ PVOID pWlxContext)
NTSTATUS None None.SpGetUserInfo(_In_ PLUID LogonId,_In_ ULONG Flags,_Out_ PSecurityUserData *UserData)
SECURITY_STATUS None sspicli.SspiPrepareForCredWrite(_In_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE AuthIdentity,_In_ PCWSTR pszTargetName,_Out_ PULONG pCredmanCredentialType,_Out_ PCWSTR *ppszCredmanTargetName,_Out_ PCWSTR *ppszCredmanUserName,_Out_ PUCHAR *ppCredentialBlob,_Out_ PULONG pCredentialBlobSize)
BOOL WINAPI advapi32.CryptSetProvider(_In_ LPCTSTR pszProvName,_In_ DWORD dwProvType)
BOOL WINAPI advapi32.CryptSetProviderW(_In_ LPCTSTR pszProvName,_In_ DWORD dwProvType)
BOOL WINAPI advapi32.CryptSetProviderA(_In_ LPCTSTR pszProvName,_In_ DWORD dwProvType)
HRESULT None None.SetBalloonRetry([in] DWORD dwShowTime,[in] DWORD dwInterval,[in] UINT cRetryCount)
BOOL WINAPI crypt32.CertVerifyRevocation(_In_ DWORD dwEncodingType,_In_ DWORD dwRevType,_In_ DWORD cContext,_In_ PVOID rgpvContext[],_In_ DWORD dwFlags,_In_opt_ PCERT_REVOCATION_PARA pRevPara,_Inout_ PCERT_REVOCATION_STATUS pRevStatus)
BOOL WINAPI advapi32.CryptGetHashParam(_In_ HCRYPTHASH hHash,_In_ DWORD dwParam,_Out_ BYTE *pbData,_Inout_ DWORD *pdwDataLen,_In_ DWORD dwFlags)
HRESULT None uxtheme.GetThemeString(_In_ HTHEME hTheme,_In_ int iPartId,_In_ int iStateId,_In_ int iPropId,_Out_ LPWSTR pszBuff,_In_ int cchMaxBuffChars)
NTSTATUS None None.LsaApInitializePackage(_In_ ULONG AuthenticationPackageId,_In_ PLSA_DISPATCH_TABLE LsaDispatchTable,_In_opt_ PLSA_STRING Database,_In_opt_ PLSA_STRING Confidentiality,_Out_ PLSA_STRING *AuthenticationPackageName)
RPC_STATUS RPC_ENTRY rpcrt4.RpcStringBindingCompose(TCHAR *ObjUuid None,TCHAR *ProtSeq None,TCHAR *NetworkAddr None,TCHAR *EndPoint None,TCHAR *Options None,TCHAR **StringBinding None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcStringBindingComposeW(TCHAR *ObjUuid None,TCHAR *ProtSeq None,TCHAR *NetworkAddr None,TCHAR *EndPoint None,TCHAR *Options None,TCHAR **StringBinding None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcStringBindingComposeA(TCHAR *ObjUuid None,TCHAR *ProtSeq None,TCHAR *NetworkAddr None,TCHAR *EndPoint None,TCHAR *Options None,TCHAR **StringBinding None)
NTSTATUS WINAPI certpoleng.PstGetCertificates(_In_ PUNICODE_STRING pTargetName,_In_ DWORD cCriteria,_In_opt_ PCCERT_SELECT_CRITERIA rgpCriteria,_In_ BOOL bIsClient,_Out_ PDWORD pdwCertChainContextCount,_Out_ PCCERT_CHAIN_CONTEXT **ppCertChainContexts)
DWORD APIENTRY None.CancelConnectNotify(_Inout_ LPNOTIFYINFO lpNotifyInfo,_In_ LPNOTIFYCANCEL lpCancelInfo)
LONG WINAPI winscard.SCardReleaseContext(_In_ SCARDCONTEXT hContext)
BOOL WINAPI crypt32.CertGetCRLContextProperty(_In_ PCCRL_CONTEXT pCrlContext,_In_ DWORD dwPropId,_Out_ void *pvData,_Inout_ DWORD *pcbData)
SECURITY_STATUS None sspicli.SspiCopyAuthIdentity(_In_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE AuthData,_Out_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE *AuthDataCopy)
BOOL WINAPI advapi32.AddAccessDeniedAce(_Inout_ PACL pAcl,_In_ DWORD dwAceRevision,_In_ DWORD AccessMask,_In_ PSID pSid)
BOOL WINAPI advapi32.LookupAccountName(_In_opt_ LPCTSTR lpSystemName,_In_ LPCTSTR lpAccountName,_Out_opt_ PSID Sid,_Inout_ LPDWORD cbSid,_Out_opt_ LPTSTR ReferencedDomainName,_Inout_ LPDWORD cchReferencedDomainName,_Out_ PSID_NAME_USE peUse)
BOOL WINAPI advapi32.LookupAccountNameW(_In_opt_ LPCTSTR lpSystemName,_In_ LPCTSTR lpAccountName,_Out_opt_ PSID Sid,_Inout_ LPDWORD cbSid,_Out_opt_ LPTSTR ReferencedDomainName,_Inout_ LPDWORD cchReferencedDomainName,_Out_ PSID_NAME_USE peUse)
BOOL WINAPI advapi32.LookupAccountNameA(_In_opt_ LPCTSTR lpSystemName,_In_ LPCTSTR lpAccountName,_Out_opt_ PSID Sid,_Inout_ LPDWORD cbSid,_Out_opt_ LPTSTR ReferencedDomainName,_Inout_ LPDWORD cchReferencedDomainName,_Out_ PSID_NAME_USE peUse)
BOOL WINAPI user32.IsGUIThread(_In_ BOOL bConvert)
typedef None None.void(WINAPI *PFN_CRYPT_OBJECT_LOCATOR_PROVIDER_FREE_IDENTIFIER None)
DWORD None None.NPSearchDialog(_In_ HWND hParent,_In_ LPNETRESOURCE lpNetResource,_Out_ LPVOID lpBuffer,_Out_ DWORD cbBuffer,_In_ LPDWORD lpnFlags)
BOOL WINAPI crypt32.CryptImportPKCS8(_In_ CRYPT_PKCS8_IMPORT_PARAMS sPrivateKeyAndParams,_In_ DWORD dwFlags,_Out_opt_ HCRYPTPROV *phCryptProv,_In_opt_ void *pvAuxInfo)
BOOL WINAPI wintrust.CryptCATCDFClose(_In_ CRYPTCATCDF *pCDF)
SECURITY_STATUS SEC_Entry secur32.ImpersonateSecurityContext(_In_ PCtxtHandle phContext)
PCCERT_CONTEXT WINAPI None.CryptGetSignerCertificateCallback(_In_ void *pvGetArg,_In_ DWORD dwCertEncodingType,_In_ PCERT_INFO pSignerId,_In_ HCERTSTORE hMsgCertStore)
BOOL WINAPI crypt32.CertFreeCTLContext(_In_ PCCTL_CONTEXT pCtlContext)
BOOL None advapi32.CredDelete(_In_ LPCTSTR TargetName,_In_ DWORD Type,_In_ DWORD Flags)
BOOL None advapi32.CredDeleteW(_In_ LPCTSTR TargetName,_In_ DWORD Type,_In_ DWORD Flags)
BOOL None advapi32.CredDeleteA(_In_ LPCTSTR TargetName,_In_ DWORD Type,_In_ DWORD Flags)
NTSTATUS None None.SpApplyControlToken(_In_ LSA_SEC_HANDLE ContextHandle,_In_ PSecBufferDesc ControlToken)
BOOL None uxtheme.IsAppThemed(void None None)
HRESULT None uxtheme.GetThemeTextMetrics(_In_ HTHEME hTheme,_In_ HDC hdc,_In_ int iPartId,_In_ int iStateId,_Out_ TEXTMETRIC *ptm)
PVOID NTAPI None.CreateSharedMemory(_In_ ULONG MaxSize,_In_ ULONG InitialSize)
PCCERT_SERVER_OCSP_RESPONSE_CONTEXT WINAPI crypt32.CertGetServerOcspResponseContext(_In_ HCERT_SERVER_OCSP_RESPONSE hServerOcspResponse,_In_ DWORD dwFlags,_Reserved_ LPVOID pvReserved)
HRESULT THEMEAPI uxtheme.GetThemeAnimationProperty(_In_ HTHEME hTheme,_In_ int iStoryboardId,_In_ int iTargetId,_In_ TA_PROPERTY eProperty,_Out_ VOID *pvProperty,_In_ DWORD cbSize,_Out_ DWORD pcbSizeOut)
void NTAPI None.LsaUnprotectMemory(_Inout_ PVOID Buffer,_In_ ULONG BufferSize)
NTSTATUS None secur32.LsaConnectUntrusted(_Out_ PHANDLE LsaHandle)
SECURITY_STATUS None sspicli.SspiGetTargetHostName(_In_ PCWSTR pszTargetName,_Out_ PWSTR *pszHostName)
BOOL WINAPI credui.CredPackAuthenticationBuffer(_In_ DWORD dwFlags,_In_ LPTSTR pszUserName,_In_ LPTSTR pszPassword,_Out_ PBYTE pPackedCredentials,_Inout_ DWORD *pcbPackedCredentials)
BOOL WINAPI credui.CredPackAuthenticationBufferW(_In_ DWORD dwFlags,_In_ LPTSTR pszUserName,_In_ LPTSTR pszPassword,_Out_ PBYTE pPackedCredentials,_Inout_ DWORD *pcbPackedCredentials)
BOOL WINAPI credui.CredPackAuthenticationBufferA(_In_ DWORD dwFlags,_In_ LPTSTR pszUserName,_In_ LPTSTR pszPassword,_Out_ PBYTE pPackedCredentials,_Inout_ DWORD *pcbPackedCredentials)
NTSTATUS None secur32.LsaCallAuthenticationPackage(_In_ HANDLE LsaHandle,_In_ ULONG AuthenticationPackage,_In_ PVOID ProtocolSubmitBuffer,_In_ ULONG SubmitBufferLength,_Out_ PVOID *ProtocolReturnBuffer,_Out_ PULONG *ReturnBufferLength,_Out_ PNTSTATUS ProtocolStatus)
BOOL WINAPI crypt32.CryptSIPRemoveSignedDataMsg(_In_ SIP_SUBJECTINFO *pSubjectInfo,_In_ DWORD dwIndex)
BOOL None advapi32.CredGetSessionTypes(_In_ DWORD MaximumPersistCount,_Out_ LPDWORD MaximumPersist)
BOOL WINAPI crypt32.PFXVerifyPassword(_In_ CRYPT_DATA_BLOB *pPFX,_In_ LPCWSTR szPassword,_In_ DWORD dwFlags)
VOID None None.AuditLogon(_In_ NTSTATUS Status,_In_ NTSTATUS SubStatus,_In_ PUNICODE_STRING AccountName,_In_ PUNICODE_STRING AuthenticatingAuthority,_In_ PUNICODE_STRING WorkstationName,_In_opt_ PSID UserSid,_In_ SECURITY_LOGON_TYPE LogonType,_In_ PTOKEN_SOURCE TokenSource,_In_ PLUID LogonId)
BOOL WINAPI crypt32.CryptVerifyMessageHash(_In_ PCRYPT_HASH_MESSAGE_PARA pHashPara,_In_ BYTE *pbHashedBlob,_In_ DWORD cbHashedBlob,_Out_ BYTE *pbToBeHashed,_Inout_ DWORD *pcbToBeHashed,_Out_opt_ BYTE *pbComputedHash,_Inout_opt_ DWORD *pcbComputedHash)
BOOL None advapi32.CredIsMarshaledCredential(_In_ LPCTSTR MarshaledCredential)
BOOL None advapi32.CredIsMarshaledCredentialW(_In_ LPCTSTR MarshaledCredential)
BOOL None advapi32.CredIsMarshaledCredentialA(_In_ LPCTSTR MarshaledCredential)
NTSTATUS None None.ClientCallback(_In_ PCHAR Callback,_In_ ULONG_PTR Argument1,_In_ ULONG_PTR Argument2,_In_ PSecBuffer Input,_Out_ PSecBuffer Output)
DWORD None None.WlxQueryConsoleSwitchCredentials(_Out_ PWLX_CONSOLESWITCH_CREDENTIALS_INFO_V1_0 pCred)
RPC_STATUS RPC_ENTRY rpcrt4.RpcMgmtEpEltInqNext(RPC_EP_INQ_HANDLE InquiryContext None,RPC_IF_ID *IfId None,RPC_BINDING_HANDLE *Binding None,UUID *ObjectUuid None,unsigned char **Annotation)
RPC_STATUS RPC_ENTRY rpcrt4.RpcMgmtEpEltInqNextW(RPC_EP_INQ_HANDLE InquiryContext None,RPC_IF_ID *IfId None,RPC_BINDING_HANDLE *Binding None,UUID *ObjectUuid None,unsigned char **Annotation)
RPC_STATUS RPC_ENTRY rpcrt4.RpcMgmtEpEltInqNextA(RPC_EP_INQ_HANDLE InquiryContext None,RPC_IF_ID *IfId None,RPC_BINDING_HANDLE *Binding None,UUID *ObjectUuid None,unsigned char **Annotation)
RPC_STATUS RPC_ENTRY rpcrt4.MesIncrementalHandleReset(handle_t Handle None,void *UserState None,MIDL_ES_ALLOC AllocFn None,MIDL_ES_WRITE WriteFn None,MIDL_ES_READ ReadFn None,MIDL_ES_CODE OpCode None)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsBindingUnexportPnP(unsigned long EntryNameSyntax,unsigned char *EntryName,RPC_IF_HANDLE IfSpec None,UUID_VECTOR *ObjectUuidVec None)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsBindingUnexportPnPW(unsigned long EntryNameSyntax,unsigned char *EntryName,RPC_IF_HANDLE IfSpec None,UUID_VECTOR *ObjectUuidVec None)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsBindingUnexportPnPA(unsigned long EntryNameSyntax,unsigned char *EntryName,RPC_IF_HANDLE IfSpec None,UUID_VECTOR *ObjectUuidVec None)
NTSTATUS None advapi32.LsaOpenPolicy(_In_ PLSA_UNICODE_STRING SystemName,_In_ PLSA_OBJECT_ATTRIBUTES ObjectAttributes,_In_ ACCESS_MASK DesiredAccess,_Inout_ PLSA_HANDLE PolicyHandle)
BOOL WINAPI cryptnet.CryptGetObjectUrl(_In_ LPCSTR pszUrlOid,_In_ LPVOID pvPara,_In_ DWORD dwFlags,_Out_ PCRYPT_URL_ARRAY pUrlArray,_Inout_ DWORD *pcbUrlArray,_Out_ PCRYPT_URL_INFO pUrlInfo,_Inout_ DWORD *pcbUrlInfo,_Reserved_ LPVOID pvReserved)
RPC_STATUS RPC_ENTRY rpcrt4.RpcMgmtEnableIdleCleanup(void None None)
NTSTATUS NTAPI None.CrediWrite(_In_ PLUID LogonId,_In_ ULONG CredFlags,_In_ PENCRYPTED_CREDENTIALW Credential,_In_ ULONG Flags)
LONG WINAPI scarddlg.SCardUIDlgSelectCard(_In_ LPOPENCARDNAME_EX pDlgStruc)
LONG WINAPI scarddlg.SCardUIDlgSelectCardW(_In_ LPOPENCARDNAME_EX pDlgStruc)
LONG WINAPI scarddlg.SCardUIDlgSelectCardA(_In_ LPOPENCARDNAME_EX pDlgStruc)
RPC_STATUS RPC_ENTRY rpcrt4.RpcBindingFree(RPC_BINDING_HANDLE *Binding None)
NTSTATUS None None.SpAddCredentials(_In_ LSA_SEC_HANDLE CredentialHandle,_In_ PUNICODE_STRING PrincipalName,_In_ PUNICODE_STRING Package,_In_ ULONG CredentialUseFlags,_In_ PVOID AuthorizationData,_In_ PVOID GetKeyFunction,_In_ PVOID GetKeyArgument,_Out_ PTimeStamp ExpirationTime)
BOOL WINAPI crypt32.CertIsRDNAttrsInCertificateName(_In_ DWORD dwCertEncodingType,_In_ DWORD dwFlags,_In_ PCERT_NAME_BLOB pCertName,_In_ PCERT_RDN pRDN)
NTSTATUS NTAPI secur32.LsaGetLogonSessionData(_In_ PLUID LogonId,_Out_ PSECURITY_LOGON_SESSION_DATA *ppLogonSessionData)
MI_INLINE MI_Result mi.MI_OperationOptions_SetPromptUserRegularMode(_Inout_ MI_OperationOptions *options,_In_ MI_CallbackMode mode,_In_ MI_Boolean ackValue)
BOOL WINAPI cryptui.CryptUIDlgCertMgr(_In_ PCCRYPTUI_CERT_MGR_STRUCT pCryptUICertMgr)
BOOL WINAPI None.CertStoreProvGetCRLProperty(_In_ HCERTSTOREPROV hStoreProv,_In_ PCCRL_CONTEXT pCrlContext,_In_ DWORD dwPropId,_In_ DWORD dwFlags,_Out_ void *pvData,_Inout_ DWORD *pcbData)
SECURITY_STATUS SEC_Entry secur32.QuerySecurityPackageInfo(_In_ SEC_CHAR *pszPackageName,_Out_ PSecPkgInfo *ppPackageInfo)
SECURITY_STATUS SEC_Entry secur32.QuerySecurityPackageInfoW(_In_ SEC_CHAR *pszPackageName,_Out_ PSecPkgInfo *ppPackageInfo)
SECURITY_STATUS SEC_Entry secur32.QuerySecurityPackageInfoA(_In_ SEC_CHAR *pszPackageName,_Out_ PSecPkgInfo *ppPackageInfo)
SECURITY_STATUS SEC_Entry secur32.DeleteSecurityContext(_In_ PCtxtHandle phContext)
BOOL WINAPI advapi32.CryptGetDefaultProvider(_In_ DWORD dwProvType,_In_ DWORD *pdwReserved,_In_ DWORD dwFlags,_Out_ LPTSTR pszProvName,_Inout_ DWORD *pcbProvName)
BOOL WINAPI advapi32.CryptGetDefaultProviderW(_In_ DWORD dwProvType,_In_ DWORD *pdwReserved,_In_ DWORD dwFlags,_Out_ LPTSTR pszProvName,_Inout_ DWORD *pcbProvName)
BOOL WINAPI advapi32.CryptGetDefaultProviderA(_In_ DWORD dwProvType,_In_ DWORD *pdwReserved,_In_ DWORD dwFlags,_Out_ LPTSTR pszProvName,_Inout_ DWORD *pcbProvName)
BOOL None None.WlxNetworkProviderLoad(_In_ PVOID pWlxContext,_Out_ PWLX_MPR_NOTIFY_INFO pNprNotifyInfo)
NTSTATUS None secur32.LsaLogonUser(_In_ HANDLE LsaHandle,_In_ PLSA_STRING OriginName,_In_ SECURITY_LOGON_TYPE LogonType,_In_ ULONG AuthenticationPackage,_In_ PVOID AuthenticationInformation,_In_ ULONG AuthenticationInformationLength,_In_opt_ PTOKEN_GROUPS LocalGroups,_In_ PTOKEN_SOURCE SourceContext,_Out_ PVOID *ProfileBuffer,_Out_ PULONG ProfileBufferLength,_Out_ PLUID LogonId,_Out_ PHANDLE Token,_Out_ PQUOTA_LIMITS Quotas,_Out_ PNTSTATUS SubStatus)
RPC_STATUS RPC_ENTRY rpcrt4.RpcBindingCopy(RPC_BINDING_HANDLE SourceBinding None,RPC_BINDING_HANDLE *DestinationBinding None)
SECURITY_STATUS WINAPI schannel.SslGetServerIdentity(_In_ PBYTE ClientHello,_In_ DWORD ClientHelloSize,_Out_ PBYTE *ServerIdentity,_Out_ PDWORD ServerIdentitySize,_In_ DWORD Flags)
BOOL WINAPI kernel32.SleepConditionVariableSRW(_Inout_ PCONDITION_VARIABLE ConditionVariable,_Inout_ PSRWLOCK SRWLock,_In_ DWORD dwMilliseconds,_In_ ULONG Flags)
BOOL __cdecl instrsa5.GetEncSChannel(_Out_ BYTE **pData,_Out_ DWORD *dwDecSize)
BOOL __cdecl instrsa5.GetEncSChannel(_Out_ BYTE **pData,_Out_ DWORD *dwDecSize)
HRESULT None uxtheme.GetThemeTextMetrics(_In_ HTHEME hTheme,_In_ HDC hdc,_In_ int iPartId,_In_ int iStateId,_Out_ TEXTMETRIC *ptm)
HRESULT None mfplat.MFUnregisterPlatformFromMMCSS(void None None)
PCRYPT_ATTRIBUTE WINAPI crypt32.CertFindAttribute(_In_ LPCSTR pszObjId,_In_ DWORD cAttr,_In_ CRYPT_ATTRIBUTE rgAttr[])
HRESULT None None.AddComboBox([in] DWORD dwIDCtl)
SECURITY_STATUS SEC_Entry secur32.MakeSignature(_In_ PCtxtHandle phContext,_In_ ULONG fQOP,_Inout_ PSecBufferDesc pMessage,_In_ ULONG MessageSeqNo)
BOOL WINAPI user32.IsProcessDPIAware(void None None)
NTSTATUS None None.SpInitLsaModeContext(_In_ LSA_SEC_HANDLE CredentialHandle,_In_ LSA_SEC_HANDLE ContextHandle,_In_ PUNICODE_STRING TargetName,_In_ ULONG ContextRequirements,_In_ ULONG TargetDataRep,_In_ PSecBufferDesc InputBuffers,_Out_ PLSA_SEC_HANDLE NewContextHandle,_Out_ PSecBufferDesc OutputBuffers,_Out_ PULONG ContextAttributes,_Out_ PTimeStamp ExpirationTime,_Out_ PBOOLEAN MappedContext,_Out_ PSecBuffer ContextData)
SECURITY_STATUS None sspicli.SspiEncryptAuthIdentity(_Inout_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE AuthData)
BOOL WINAPI crypt32.CertAddCTLLinkToStore(_In_ HCERTSTORE hCertStore,_In_ PCCTL_CONTEXT pCtlContext,_In_ DWORD dwAddDisposition,_Out_opt_ PCCTL_CONTEXT *ppStoreContext)
SECURITY_STATUS None sspicli.SspiZeroAuthIdentity(_In_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE AuthData)
NTSTATUS WINAPI None.SpValidateTargetInfoFn(_In_opt_ PLSA_CLIENT_REQUEST ClientRequest,_In_ PVOID ProtocolSubmitBuffer,_In_ PVOID ClientBufferBase,_In_ ULONG SubmitBufferLength,_In_ PSECPKG_TARGETINFO TargetInfo)
HRESULT None None.OnDragEnter([in] IShellItem *psiOver,[in] IShellItemArray *psiaData,[in] BOOL fOutsideSource,[in] DWORD grfKeyState,[in None None,out] DWORD *pdwEffect)
PSecurityFunctionTable SEC_Entry secur32.InitSecurityInterface(void None None)
PSecurityFunctionTable SEC_Entry secur32.InitSecurityInterfaceW(void None None)
PSecurityFunctionTable SEC_Entry secur32.InitSecurityInterfaceA(void None None)
void None None.WlxLogoff(_In_ PVOID pWlxContext)
RPC_STATUS RPC_ENTRY rpcrt4.RpcMgmtSetServerStackSize(unsigned int ThreadStackSize)
VOID WINAPI sas.SendSAS(_In_ BOOL AsUser)
PCCERT_CONTEXT WINAPI crypt32.CertGetSubjectCertificateFromStore(_In_ HCERTSTORE hCertStore,_In_ DWORD dwCertEncodingType,_In_ PCERT_INFO pCertId)
int None None.WlxSwitchDesktopToUser(_In_ HANDLE hWlx)
BOOL WINAPI cryptnet.CryptGetTimeValidObject(_In_ LPCSTR pszTimeValidOid,_In_ LPVOID pvPara,_In_ PCCERT_CONTEXT pIssuer,_In_opt_ LPFILETIME pftValidFor,_In_ DWORD dwFlags,_In_ DWORD dwTimeout,_Out_opt_ LPVOID *ppvObject,_In_opt_ PCRYPT_CREDENTIALS pCredentials,_Inout_opt_ PCRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO pExtraInfo)
RPC_STATUS RPC_ENTRY rpcrt4.RpcProtseqVectorFree(RPC_PROTSEQ_VECTOR **ProtSeqVector None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcProtseqVectorFreeW(RPC_PROTSEQ_VECTOR **ProtSeqVector None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcProtseqVectorFreeA(RPC_PROTSEQ_VECTOR **ProtSeqVector None)
PCTL_ENTRY WINAPI crypt32.CertFindSubjectInCTL(_In_ DWORD dwEncodingType,_In_ DWORD dwSubjectType,_In_ void *pvSubject,_In_ PCCTL_CONTEXT pCtlContext,_In_ DWORD dwFlags)
DWORD None None.NPGetCaps(_In_ DWORD nIndex)
void None schannel.SslFreeCertificate(_In_ PX509Certificate pCertificate)
typedef None None.BOOL(WINAPI *PFN_CMSG_EXPORT_KEY_TRANS None)
RPC_STATUS RPC_ENTRY rpcrt4.MesDecodeIncrementalHandleCreate(void *UserState None,MIDL_ES_READ ReadFn None,handle_t *pHandle None)
LONG WINAPI winscard.SCardRemoveReaderFromGroup(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReaderName,_In_ LPCTSTR szGroupName)
LONG WINAPI winscard.SCardRemoveReaderFromGroupW(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReaderName,_In_ LPCTSTR szGroupName)
LONG WINAPI winscard.SCardRemoveReaderFromGroupA(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReaderName,_In_ LPCTSTR szGroupName)
BOOL None wintrust.WintrustAddActionID(_In_ GUID *pgActionID,_In_ DWORD fdwFlags,_In_ CRYPT_REGISTER_ACTIONID *psProvInfo)
DWORD WINAPI credui.CredUIPromptForCredentials(_In_opt_ PCREDUI_INFO pUiInfo,_In_ PCTSTR pszTargetName,_In_ PCtxtHandle Reserved,_In_opt_ DWORD dwAuthError,_Inout_ PCTSTR pszUserName,_In_ ULONG ulUserNameMaxChars,_Inout_ PCTSTR pszPassword,_In_ ULONG ulPasswordMaxChars,_Inout_ PBOOL pfSave,_In_ DWORD dwFlags)
DWORD WINAPI credui.CredUIPromptForCredentialsW(_In_opt_ PCREDUI_INFO pUiInfo,_In_ PCTSTR pszTargetName,_In_ PCtxtHandle Reserved,_In_opt_ DWORD dwAuthError,_Inout_ PCTSTR pszUserName,_In_ ULONG ulUserNameMaxChars,_Inout_ PCTSTR pszPassword,_In_ ULONG ulPasswordMaxChars,_Inout_ PBOOL pfSave,_In_ DWORD dwFlags)
DWORD WINAPI credui.CredUIPromptForCredentialsA(_In_opt_ PCREDUI_INFO pUiInfo,_In_ PCTSTR pszTargetName,_In_ PCtxtHandle Reserved,_In_opt_ DWORD dwAuthError,_Inout_ PCTSTR pszUserName,_In_ ULONG ulUserNameMaxChars,_Inout_ PCTSTR pszPassword,_In_ ULONG ulPasswordMaxChars,_Inout_ PBOOL pfSave,_In_ DWORD dwFlags)
BOOL WINAPI None.CertStoreProvDeleteCTL(_In_ HCERTSTOREPROV hStoreProv,_In_ PCCTL_CONTEXT pCtlContext,_In_ DWORD dwFlags)
HRESULT None uxtheme.SetWindowThemeNonClientAttributes(_In_ HWND hwnd,_In_ DWORD dwMask,_In_ DWORD dwAttributes)
void None rpcrt4.RpcCertGeneratePrincipalName(PCCERT_CONTEXT Context None,DWORD Flags None,UCHAR **pBuffer None)
void None rpcrt4.RpcCertGeneratePrincipalNameW(PCCERT_CONTEXT Context None,DWORD Flags None,UCHAR **pBuffer None)
void None rpcrt4.RpcCertGeneratePrincipalNameA(PCCERT_CONTEXT Context None,DWORD Flags None,UCHAR **pBuffer None)
HRESULT None certadm.CertSrvBackupTruncateLogs(_In_ HCSBC hbc)
BOOL WINAPI credui.CredPackAuthenticationBuffer(_In_ DWORD dwFlags,_In_ LPTSTR pszUserName,_In_ LPTSTR pszPassword,_Out_ PBYTE pPackedCredentials,_Inout_ DWORD *pcbPackedCredentials)
BOOL WINAPI credui.CredPackAuthenticationBufferW(_In_ DWORD dwFlags,_In_ LPTSTR pszUserName,_In_ LPTSTR pszPassword,_Out_ PBYTE pPackedCredentials,_Inout_ DWORD *pcbPackedCredentials)
BOOL WINAPI credui.CredPackAuthenticationBufferA(_In_ DWORD dwFlags,_In_ LPTSTR pszUserName,_In_ LPTSTR pszPassword,_Out_ PBYTE pPackedCredentials,_Inout_ DWORD *pcbPackedCredentials)
NTSTATUS WINAPI certpoleng.PstGetUserNameForCertificate(_In_ PCCERT_CONTEXT pCertContext,_Out_ PUNICODE_STRING UserName)
HANDLE None None.CreateThread(_In_ SEC_ATTRS SecurityAttributes,_In_ ULONG StackSize,_In_ SEC_THREAD_START StartFunction,_In_ PVOID ThreadParameter,_In_ ULONG CreationFlags,_Out_ PULONG ThreadId)
HRESULT None uxtheme.GetThemeTransitionDuration(HTHEME hTheme None,int iPartId None,int iStateIdFrom None,int iStateIdTo None,int iPropId None,_Out_ DWORD *pdwDuration)
HRESULT None uxtheme.BufferedPaintStopAllAnimations(HWND hwnd None)
HANDLE WINAPI winscard.SCardAccessStartedEvent(void None None)
HCRYPTMSG WINAPI crypt32.CryptMsgOpenToDecode(_In_ DWORD dwMsgEncodingType,_In_ DWORD dwFlags,_In_ DWORD dwMsgType,_In_ HCRYPTPROV_LEGACY hCryptProv,_In_ PCERT_INFO pRecipientInfo,_In_opt_ PCMSG_STREAM_INFO pStreamInfo)
BOOL None schannel.SslEmptyCache(_In_ LPSTR pszTargetName,_In_ DWORD dwFlags)
BOOL None schannel.SslEmptyCacheW(_In_ LPSTR pszTargetName,_In_ DWORD dwFlags)
BOOL None schannel.SslEmptyCacheA(_In_ LPSTR pszTargetName,_In_ DWORD dwFlags)
BOOL WINAPI crypt32.CertVerifyCTLUsage(_In_ DWORD dwEncodingType,_In_ DWORD dwSubjectType,_In_ void *pvSubject,_In_ PCTL_USAGE pSubjectUsage,_In_ DWORD dwFlags,_In_opt_ PCTL_VERIFY_USAGE_PARA pVerifyUsagePara,_Inout_ PCTL_VERIFY_USAGE_STATUS pVerifyUsageStatus)
DWORD None None.NPOpenEnum(_In_ DWORD dwScope,_In_ DWORD dwType,_In_ DWORD dwUsage,_In_ LPNETRESOURCE lpNetResource,_Out_ LPHANDLE lphEnum)
BOOL WINAPI crypt32.CertVerifyCertificateChainPolicy(_In_ LPCSTR pszPolicyOID,_In_ PCCERT_CHAIN_CONTEXT pChainContext,_In_ PCERT_CHAIN_POLICY_PARA pPolicyPara,_Inout_ PCERT_CHAIN_POLICY_STATUS pPolicyStatus)
BOOL None advapi32.CredRead(_In_ LPCTSTR TargetName,_In_ DWORD Type,_In_ DWORD Flags,_Out_ PCREDENTIAL *Credential)
BOOL None advapi32.CredReadW(_In_ LPCTSTR TargetName,_In_ DWORD Type,_In_ DWORD Flags,_Out_ PCREDENTIAL *Credential)
BOOL None advapi32.CredReadA(_In_ LPCTSTR TargetName,_In_ DWORD Type,_In_ DWORD Flags,_Out_ PCREDENTIAL *Credential)
STDAPI None mf.MFLoadSignedLibrary(_In_ LPCWSTR pszName,_Out_ IMFSignedLibrary **ppLib)
DWORD None credui.CredUIReadSSOCredW(_In_ PCWSTR pszRealm,_Out_ PWSTR *ppszUsername)
HRESULT None mfplat.MFPutWorkItemEx2(_In_ DWORD dwQueue,_In_ LONG Priority,_In_ IMFAsyncResult *pResult)
SECURITY_STATUS SEC_Entry secur32.EncryptMessage(_In_ PCtxtHandle phContext,_In_ ULONG fQOP,_Inout_ PSecBufferDesc pMessage,_In_ ULONG MessageSeqNo)
DWORD WINAPI advapi32.SetSecurityInfo(_In_ HANDLE handle,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_In_opt_ PSID psidOwner,_In_opt_ PSID psidGroup,_In_opt_ PACL pDacl,_In_opt_ PACL pSacl)
NTSTATUS None None.GetCredentials(_In_ PLUID LogonId,_In_ ULONG AuthenticationPackage,_Inout_ PULONG QueryContext,_In_ BOOLEAN RetrieveAllCredentials,_Inout_ PLSA_STRING PrimaryKeyValue,_Out_ PULONG PrimaryKeyLength,_Out_ PLSA_STRING Credentials)
BOOL None None.WlxQueryClientCredentials(_Out_ PWLX_CLIENT_CREDENTIALS_INFO_V1_0 pCred)
HRESULT None uxtheme.GetThemePosition(_In_ HTHEME hTheme,_In_ int iPartId,_In_ int iStateId,_In_ int iPropId,_Out_ POINT *pPoint)
NT_STATUS None None.SspiDecryptAuthIdentityEx(_In_ ULONG Options,_Inout_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE EncryptedAuthData)
NTSTATUS None None.SpSealMessage(_In_ LSA_SEC_HANDLE ContextHandle,_In_ ULONG QualityOfProtection,_Inout_ PSecBufferDesc MessageBuffers,_In_ ULONG MessageSequenceNumber)
NTSTATUS None None.SpMarshallSupplementalCreds(_In_ ULONG CredentialSize,_In_ PUCHAR Credentials,_Out_ PULONG MarshalledCredSize,_Out_ PVOID *MarshalledCreds)
SECURITY_STATUS SEC_Entry secur32.VerifySignature(_In_ PCtxtHandle phContext,_In_ PSecBufferDesc pMessage,_In_ ULONG MessageSeqNo,_Out_ PULONG pfQOP)
VOID None None.WlxWin31Migrate(_In_ HANDLE hWlx)
void NTAPI None.LsaProtectMemory(_Inout_ PVOID Buffer,_In_ ULONG BufferSize)
HRESULT None evr.MFCreateVideoSampleFromSurface(_In_ IUnknown *pUnkSurface,_Out_ IMFSample **ppSample)
DWORD None None.NPDirectoryNotify(_In_ HWND hwnd,_In_ LPTSTR lpDir,_In_ DWORD dwOper)
DWORD WINAPI kernel32.WaitForSingleObjectEx(_In_ HANDLE hHandle,_In_ DWORD dwMilliseconds,_In_ BOOL bAlertable)
NTSTATUS None None.GetUserAuthData(_In_ PVOID UserHandle,_Out_ PUCHAR *UserAuthData,_Out_ PULONG UserAuthDataSize)
BOOL None None.WlxQueryInetConnectorCredentials(_Out_ PWLX_CLIENT_CREDENTIALS_INFO_V1_0 pCred)
BOOL WINAPI crypt32.CertCreateCTLEntryFromCertificateContextProperties(_In_ PCCERT_CONTEXT pCertContext,_In_ DWORD cOptAttr,_In_ PCRYPT_ATTRIBUTE rgOptAttr,_In_ DWORD dwFlags,_In_ void *pvReserved,_Out_ PCTL_ENTRY pCtlEntry,_Inout_ DWORD *pcbCtlEntry)
SECURITY_STATUS SEC_Entry secur32.QueryCredentialsAttributes(_In_ PCredHandle phCredential,_In_ ULONG ulAttribute,_Out_ PVOID pBuffer)
SECURITY_STATUS SEC_Entry secur32.QueryCredentialsAttributesW(_In_ PCredHandle phCredential,_In_ ULONG ulAttribute,_Out_ PVOID pBuffer)
SECURITY_STATUS SEC_Entry secur32.QueryCredentialsAttributesA(_In_ PCredHandle phCredential,_In_ ULONG ulAttribute,_Out_ PVOID pBuffer)
VOID None None.LsaApLogonTerminated(_In_ PLUID LogonId)
typedef None None.BOOL(WINAPI *PFN_CRYPT_OBJECT_LOCATOR_PROVIDER_FLUSH None)
NTSTATUS NTAPI None.CrediFreeCredentials(_In_ ULONG Count,_Inout_ PENCRYPTED_CREDENTIALW *Credentials)
NTSTATUS None None.SpInitUserModeContext(_In_ LSA_SEC_HANDLE ContextHandle,_In_ PSecBuffer PackedContext)
BOOL None uxtheme.IsThemeBackgroundPartiallyTransparent(_In_ HTHEME hTheme,_In_ int iPartId,_In_ int iStateId)
SECURITY_STATUS WINAPI secur32.QueryContextAttributesEx(_In_ PCtxtHandle phContext,_In_ ULONG ulAttribute,_Out_ PVOID pBuffer,_In_ ULONG cbBuffer)
SECURITY_STATUS WINAPI secur32.QueryContextAttributesExW(_In_ PCtxtHandle phContext,_In_ ULONG ulAttribute,_Out_ PVOID pBuffer,_In_ ULONG cbBuffer)
SECURITY_STATUS WINAPI secur32.QueryContextAttributesExA(_In_ PCtxtHandle phContext,_In_ ULONG ulAttribute,_Out_ PVOID pBuffer,_In_ ULONG cbBuffer)
void None None.ClientCallback_Function(_In_ ULONG_PTR Argument1,_In_ ULONG_PTR Argument2,_In_ PSecBuffer InputBuffer,_Out_ PSecBuffer OutputBuffer)
HRESULT None uxtheme.GetThemeStream(_In_ HTHEME hTheme,_In_ int iPartId,_In_ int iStateId,_In_ int iPropId,_Out_ VOID **ppvStream,_Out_ DWORD *pcbStream,_In_ HINSTANCE hInst)
HRESULT STDAPI shcore.CreateRandomAccessStreamOnFile(_In_ PCWSTR filePath,_In_ DWORD accessMode,_In_ REFIID riid,_Out_ void **ppv)
HRESULT None mfplat.MFInitMediaTypeFromMFVideoFormat(IMFMediaType *pMFType None,const MFVIDEOFORMAT *pMFVF,UINT32 cbBufSize None)
VOID WINAPI user32.SwitchToThisWindow(_In_ HWND hWnd,_In_ BOOL fAltTab)
HRESULT None mfplat.MFScheduleWorkItem(_In_ IMFAsyncCallback *pCallback,_In_ IUnknown *pState,_In_ INT64 Timeout,_Out_ MFWORKITEM_KEY *pKey)
NTSTATUS None None.RegisterCallback(_In_ ULONG CallbackId,_In_ PLSA_CALLBACK_FUNCTION Callback)
DWORD None None.NPGetDirectoryType(_In_ LPTSTR lpName,_In_ LPINT lpType,_In_ BOOL bFlushCache)
SECURITY_STATUS None sspicli.SspiDecryptAuthIdentity(_Inout_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE EncryptedAuthData)
BOOL None None.WlxCloseUserDesktop(_In_ HANDLE hWlx,_In_ PWLX_DESKTOP pDesktop,_In_ HANDLE hToken)
NTSTATUS None None.SpUnsealMessage(_In_ LSA_SEC_HANDLE ContextHandle,_In_ PSecBufferDesc MessageBuffers,_In_ ULONG MessageSequenceNumber,_Out_ PULONG QualityOfProtection)
COLORREF None uxtheme.GetThemeSysColor(_In_ HTHEME hTheme,_In_ int iColorID)
BOOL None None.WlxCreateUserDesktop(_In_ HANDLE hWlx,_In_ HANDLE hToken,_In_ DWORD Flags,_In_ PWSTR pszDesktopName,_Out_ PWLX_DESKTOP *ppDesktop)
typedef None None.HRESULT(WINAPI *CryptXmlDllCreateKey None)
HRESULT None uxtheme.GetThemeMetric(_In_ HTHEME hTheme,_In_ HDC hdc,_In_ int iPartId,_In_ int iStateId,_In_ int iPropId,_Out_ int *piVal)
HRESULT None uxtheme.EndBufferedPaint(HPAINTBUFFER hBufferedPaint None,BOOL fUpdateTarget None)
BOOL WINAPI crypt32.CertFindCertificateInCRL(_In_ PCCERT_CONTEXT pCert,_In_ PCCRL_CONTEXT pCrlContext,_In_ DWORD dwFlags,_In_opt_ void *pvReserved,_Out_ PCRL_ENTRY *ppCrlEntry)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsBindingLookupNext(RPC_NS_HANDLE LookupContext None,RPC_BINDING_VECTOR **BindingVec None)
NTSTATUS None None.CreateToken(_In_ PLUID LogonId,_In_ PTOKEN_SOURCE TokenSource,_In_ SECURITY_LOGON_TYPE LogonType,_In_ SECURITY_IMPERSONATION_LEVEL ImpersonationLevel,_In_ LSA_TOKEN_INFORMATION_TYPE TokenInformationType,_In_ PVOID TokenInformation,_In_ PTOKEN_GROUPS TokenGroups,_In_ PUNICODE_STRING AccountName,_In_ PUNICODE_STRING AuthorityName,_In_ PUNICODE_STRING Workstation,_In_ PUNICODE_STRING ProfilePath,_Out_ PHANDLE Token,_Out_ PNTSTATUS SubStatus)
SECURITY_STATUS SEC_Entry secur32.QuerySecurityContextToken(_In_ PCtxtHandle phContext,_Out_ HANDLE *phToken)
NTSTATUS None None.AuditAccountLogon(_In_ ULONG AuditId,_In_ BOOLEAN Success,_In_ PUNICODE_STRING Source,_In_ PUNICODE_STRING ClientName,_In_ PUNICODE_STRING MappedName,_In_ NTSTATUS Status)
DWORD APIENTRY None.NPPasswordChangeNotify(_In_ LPCWSTR lpAuthentInfoType,_In_ LPVOID lpAuthentInfo,_In_ LPCWSTR lpPreviousAuthentInfoType,_In_ LPVOID lpPreviousAuthentInfo,_In_ LPWSTR lpStationName,_In_ LPVOID StationHandle,_In_ DWORD dwChangeInfo)
VOID None None.FreeHeap(_Inout_ PVOID Base)
HTHEME None uxtheme.GetWindowTheme(_In_ HWND hWnd)
typedef None None.HRESULT(WINAPI *CryptXmlDllCreateDigest None)
NTSTATUS None None.CopyToClientBuffer(_In_ PLSA_CLIENT_REQUEST ClientRequest,_In_ ULONG Length,_In_ PVOID ClientBaseAddress,_In_ PVOID BufferToCopy)
NTSTATUS None secur32.LsaRegisterLogonProcess(_In_ PLSA_STRING LogonProcessName,_Out_ PHANDLE LsaHandle,_Out_ PLSA_OPERATIONAL_MODE SecurityMode)
NTSTATUS NTAPI None.SpQueryMetaDataFn(_In_ LSA_SEC_HANDLE CredentialHandle,_In_opt_ PUNICODE_STRING TargetName,_In_ ULONG ContextRequirements,_Out_ ULONG MetaDataLength,_Out_ PUCHAR MetaData,_Inout_ PLSA_SEC_HANDLE ContextHandle)
NTSTATUS NTAPI None.Msv1_0SubAuthenticationFilter(_In_ NETLOGON_LOGON_INFO_CLASS LogonLevel,_In_ PVOID LogonInformation,_In_ ULONG Flags,_In_ PUSER_ALL_INFORMATION UserAll,_Out_ PULONG WhichFields,_Out_ PULONG UserFlags,_Out_ PBOOLEAN Authoritative,_Out_ PLARGE_INTEGER LogoffTime,_Out_ PLARGE_INTEGER KickoffTime)
HRESULT None uxtheme.HitTestThemeBackground(_In_ HTHEME hTheme,_In_ HDC hdc,_In_ int iPartId,_In_ int iStateId,_In_ DWORD dwOptions,_In_ LPCRECT pRect,_In_ HRGN hrgn,_In_ POINT ptTest,_Out_ WORD *pwHitTestCode)
BOOL None wintrust.WintrustAddActionID(_In_ GUID *pgActionID,_In_ DWORD fdwFlags,_In_ CRYPT_REGISTER_ACTIONID *psProvInfo)
BOOL WINAPI crypt32.CryptRegisterOIDInfo(_In_ PCCRYPT_OID_INFO pInfo,_In_ DWORD dwFlags)
BOOL WINAPI None.CertStoreProvFreeFindCRL(_In_ HCERTSTOREPROV hStoreProv,_In_ PCCRL_CONTEXT pCrlContext,_In_ void *pvStoreProvFindInfo,_In_ DWORD dwFlags)
HWND WINAPI user32.SetActiveWindow(_In_ HWND hWnd)
HRESULT None uxtheme.GetThemeTextExtent(_In_ HTHEME hTheme,_In_ HDC hdc,_In_ int iPartId,_In_ int iStateId,_In_ LPCWSTR pszText,_In_ int iCharCount,_In_ DWORD dwTextFlags,_In_ LPCRECT pBoundingRect,_Out_ LPRECT pExtentRect)
HRESULT None mfplat.MFPutWorkItem2(_In_ DWORD dwQueue,_In_ LONG Priority,_In_ IMFAsyncCallback *pCallback,_In_ IUnknown *pState)
DWORD None None.NPGetConnectionPerformance(_In_ LPTSTR lpRemoteName,_Out_ LPNETCONNECTINFOSTRUCT lpNetConnectInfo)
NTSTATUS None None.GetCertificateFromCred(_In_ PVOID ProviderHandle,_In_ HANDLE ClientToken,_In_ PVOID SuppliedCred,_In_ ULONG SuppliedCredSize,_Out_ PVOID *CertContext)
void WINAPI secur32.LsaManageSidNameMapping(_In_ LSA_SID_NAME_MAPPING_OPERATION_TYPE OpType,_In_ PLSA_SID_NAME_MAPPING_OPERATION_INPUT OpInput,_Out_ PLSA_SID_NAME_MAPPING_OPERATION_OUTPUT *OpOutput)
NTSTATUS WINAPI certpoleng.PstAcquirePrivateKey(_In_ PCCERT_CONTEXT pCert)
NTSTATUS NTAPI None.Msv1_0SubAuthenticationRoutine(_In_ NETLOGON_LOGON_INFO_CLASS LogonLevel,_In_ PVOID LogonInformation,_In_ ULONG Flags,_In_ PUSER_ALL_INFORMATION UserAll,_Out_ PULONG WhichFields,_Out_ PULONG UserFlags,_Out_ PBOOLEAN Authoritative,_Out_ PLARGE_INTEGER LogoffTime,_Out_ PLARGE_INTEGER KickoffTime)
BOOL None None.WlxSetOption(_In_ HANDLE hWlx,_In_ DWORD Option,_In_ ULONG_PTR Value,_Out_ ULONG_PTR *OldValue)
int None None.WlxWkstaLockedSAS(_In_ PVOID pWlxContext,_In_ DWORD dwSasType)
HRESULT None None.SetEditBoxText([in] DWORD dwIDCtl,[in] LPCWSTR pszText)
HTHEME None uxtheme.OpenThemeData(_In_ HWND hwnd,_In_ LPCWSTR pszClassList)
RPC_STATUS RPC_ENTRY rpcrt4.RpcBindingServerFromClient(RPC_BINDING_HANDLE ClientBinding None,RPC_BINDING_HANDLE *ServerBinding None)
BOOL None advapi32.CredRename(_In_ LPCTSTR OldTargetName,_In_ LPCTSTR NewTargetName,_In_ DWORD Type,_In_ DWORD Flags)
BOOL None advapi32.CredRenameW(_In_ LPCTSTR OldTargetName,_In_ LPCTSTR NewTargetName,_In_ DWORD Type,_In_ DWORD Flags)
BOOL None advapi32.CredRenameA(_In_ LPCTSTR OldTargetName,_In_ LPCTSTR NewTargetName,_In_ DWORD Type,_In_ DWORD Flags)
LONG WINAPI winscard.SCardSetCardTypeProviderName(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCardName,_In_ DWORD dwProviderId,_In_ LPCTSTR szProvider)
LONG WINAPI winscard.SCardSetCardTypeProviderNameW(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCardName,_In_ DWORD dwProviderId,_In_ LPCTSTR szProvider)
LONG WINAPI winscard.SCardSetCardTypeProviderNameA(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCardName,_In_ DWORD dwProviderId,_In_ LPCTSTR szProvider)
uint32 None dhcpserverpsprovider.GetByIPAddress([in] string ComputerName,[in] string IPAddress[],[out] DhcpServerv6Reservation cmdletOutput[])
BOOL None None.WlxStartApplication(_In_ PVOID pWlxContext,_In_ PWSTR pszDesktopName,_In_ PVOID pEnvironment,_In_ PWSTR pszCmdLine)
BOOL WINAPI advapi32.CryptDeriveKey(_In_ HCRYPTPROV hProv,_In_ ALG_ID Algid,_In_ HCRYPTHASH hBaseData,_In_ DWORD dwFlags,_Inout_ HCRYPTKEY *phKey)
NTSTATUS None None.SpImportSecurityContext(_In_ PSecBuffer pPackedContext,_In_ HANDLE Token,_Out_ PLSA_SEC_HANDLE phContext)
MI_INLINE MI_Result None.MI_OperationOptions_GetUseMachineID(_In_ MI_OperationOptions *options,_Out_ MI_Boolean *machineID)
LONG WINAPI winscard.SCardIntroduceCardType(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCardName,_In_opt_ LPCGUID pguidPrimaryProvider,_In_opt_ LPCGUID rgguidInterfaces,_In_ DWORD dwInterfaceCount,_In_ LPCBYTE pbAtr,_In_ LPCBYTE pbAtrMask,_In_ DWORD cbAtrLen)
LONG WINAPI winscard.SCardIntroduceCardTypeW(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCardName,_In_opt_ LPCGUID pguidPrimaryProvider,_In_opt_ LPCGUID rgguidInterfaces,_In_ DWORD dwInterfaceCount,_In_ LPCBYTE pbAtr,_In_ LPCBYTE pbAtrMask,_In_ DWORD cbAtrLen)
LONG WINAPI winscard.SCardIntroduceCardTypeA(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCardName,_In_opt_ LPCGUID pguidPrimaryProvider,_In_opt_ LPCGUID rgguidInterfaces,_In_ DWORD dwInterfaceCount,_In_ LPCBYTE pbAtr,_In_ LPCBYTE pbAtrMask,_In_ DWORD cbAtrLen)
LONG WINAPI None.SCardGetReaderDeviceInstanceId(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReaderName,_Out_opt_ LPTSTR szDeviceInstanceId,_Inout_ LPDWORD cchDeviceInstanceId)
HRESULT None mfplat.MFUnlockWorkQueue(_In_ DWORD dwWorkQueue)
NTSTATUS None None.CancelNotification(_In_ HANDLE NotifyHandle)
HANDLE None None.RegisterNotification(_In_ SEC_THREAD_START StartFunction,_In_ PVOID Parameter,_In_ ULONG NotificationType,_In_ ULONG NotificationClass,_In_ ULONG NotificationFlags,_In_ ULONG IntervalMinutes,_In_ HANDLE WaitEvent)
HRESULT None mfreadwrite.MFCreateSinkWriterFromMediaSink(_In_ IMFMediaSink *pMediaSink,_In_ IMFAttributes *pAttributes,_Out_ IMFSinkWriter **ppSinkWriter)
NTSTATUS NTAPI None.CrediRead(_In_ PLUID LogonId,_In_ ULONG CredFlags,_In_ LPWSTR TargetName,_In_ ULONG Type,_In_ ULONG Flags,_Out_ PENCRYPTED_CREDENTIALW *Credential)
HRESULT None mfplat.MFTEnum(_In_ GUID guidCategory,_In_ UINT32 Flags,_In_ MFT_REGISTER_TYPE_INFO *pInputType,_In_ MFT_REGISTER_TYPE_INFO *pOutputType,_In_ IMFAttributes *pAttributes,_Out_ CLSID **ppclsidMFT,_Out_ UINT32 *pcMFTs)
HRESULT None mfplat.MFEndRegisterWorkQueueWithMMCSS(_In_ IMFAsyncResult *pResult,_In_ DWORD *pdwTaskId)
BOOL WINAPI advapi32.CryptDestroyKey(_In_ HCRYPTKEY hKey)
HRESULT None certadm.CertSrvRestoreEnd(_In_ HCSBC hbc)
SECURITY_STATUS SEC_Entry secur32.AcquireCredentialsHandle(_In_ SEC_CHAR *pszPrincipal,_In_ SEC_CHAR *pszPackage,_In_ ULONG fCredentialUse,_In_ PLUID pvLogonID,_In_ PVOID pAuthData,_In_ SEC_GET_KEY_FN pGetKeyFn,_In_ PVOID pvGetKeyArgument,_Out_ PCredHandle phCredential,_Out_ PTimeStamp ptsExpiry)
SECURITY_STATUS SEC_Entry secur32.AcquireCredentialsHandleW(_In_ SEC_CHAR *pszPrincipal,_In_ SEC_CHAR *pszPackage,_In_ ULONG fCredentialUse,_In_ PLUID pvLogonID,_In_ PVOID pAuthData,_In_ SEC_GET_KEY_FN pGetKeyFn,_In_ PVOID pvGetKeyArgument,_Out_ PCredHandle phCredential,_Out_ PTimeStamp ptsExpiry)
SECURITY_STATUS SEC_Entry secur32.AcquireCredentialsHandleA(_In_ SEC_CHAR *pszPrincipal,_In_ SEC_CHAR *pszPackage,_In_ ULONG fCredentialUse,_In_ PLUID pvLogonID,_In_ PVOID pAuthData,_In_ SEC_GET_KEY_FN pGetKeyFn,_In_ PVOID pvGetKeyArgument,_Out_ PCredHandle phCredential,_Out_ PTimeStamp ptsExpiry)
NTSTATUS None None.CallPackagePassthrough(_In_ PUNICODE_STRING AuthenticationPackage,_In_ PVOID ClientBufferBase,_In_ PVOID ProtocolSubmitBuffer,_In_ ULONG SubmitBufferLength,_Out_ PVOID *ProtocolReturnBuffer,_Out_ PULONG ReturnBufferLength,_Out_ PNTSTATUS ProtocolStatus)
SECURITY_STATUS SEC_Entry sspicli.EnumerateSecurityPackages(_In_ PULONG pcPackages,_In_ PSecPkgInfo *ppPackageInfo)
SECURITY_STATUS SEC_Entry sspicli.EnumerateSecurityPackagesW(_In_ PULONG pcPackages,_In_ PSecPkgInfo *ppPackageInfo)
SECURITY_STATUS SEC_Entry sspicli.EnumerateSecurityPackagesA(_In_ PULONG pcPackages,_In_ PSecPkgInfo *ppPackageInfo)
HRESULT None mf.MFCreateAggregateSource(_In_ IMFCollection *pSourceCollection,_Out_ IMFMediaSource **ppAggSource)
DWORD WINAPI credui.CredUICmdLinePromptForCredentials(_In_ PCTSTR pszTargetName,_In_ PCtxtHandle Reserved,_In_opt_ DWORD dwAuthError,_Inout_ PTSTR pszUserName,_In_ ULONG ulUserNameMaxChars,_Inout_ PTSTR pszPassword,_In_ ULONG ulPasswordMaxChars,_Inout_ PBOOL pfSave,_In_ DWORD dwFlags)
DWORD WINAPI credui.CredUICmdLinePromptForCredentialsW(_In_ PCTSTR pszTargetName,_In_ PCtxtHandle Reserved,_In_opt_ DWORD dwAuthError,_Inout_ PTSTR pszUserName,_In_ ULONG ulUserNameMaxChars,_Inout_ PTSTR pszPassword,_In_ ULONG ulPasswordMaxChars,_Inout_ PBOOL pfSave,_In_ DWORD dwFlags)
DWORD WINAPI credui.CredUICmdLinePromptForCredentialsA(_In_ PCTSTR pszTargetName,_In_ PCtxtHandle Reserved,_In_opt_ DWORD dwAuthError,_Inout_ PTSTR pszUserName,_In_ ULONG ulUserNameMaxChars,_Inout_ PTSTR pszPassword,_In_ ULONG ulPasswordMaxChars,_Inout_ PBOOL pfSave,_In_ DWORD dwFlags)
NTSTATUS None None.SpVerifySignature(_In_ LSA_SEC_HANDLE ContextHandle,_In_ PSecBufferDesc MessageBuffers,_In_ ULONG MessageSequenceNumber,_Out_ PULONG QualityOfProtection)
SECURITY_STATUS None secur32.AddSecurityPackage(_In_ LPTSTR pszPackageName,_In_ PSECURITY_PACKAGE_OPTIONS pOptions)
SECURITY_STATUS None secur32.AddSecurityPackageW(_In_ LPTSTR pszPackageName,_In_ PSECURITY_PACKAGE_OPTIONS pOptions)
SECURITY_STATUS None secur32.AddSecurityPackageA(_In_ LPTSTR pszPackageName,_In_ PSECURITY_PACKAGE_OPTIONS pOptions)
NTSTATUS None None.LsaApCallPackage(_In_ PLSA_CLIENT_REQUEST ClientRequest,_In_ PVOID ProtocolSubmitBuffer,_In_ PVOID ClientBufferBase,_In_ ULONG SubmitBufferLength,_Out_ PVOID *ProtocolReturnBuffer,_Out_ PULONG ReturnBufferLength,_Out_ PNTSTATUS ProtocolStatus)
uint32 None dhcpserverpsprovider.Set([in] string Prefix,[in] boolean Enabled,[in] datetime PurgeInterval,[in] string ComputerName,[in] boolean PassThru,[out] DhcpServerv6StatelessStore cmdletOutput)
BOOL None advapi32.CredUnmarshalCredential(_In_ LPCTSTR MarshaledCredential,_Out_ PCRED_MARSHAL_TYPE CredType,_Out_ PVOID *Credential)
BOOL None advapi32.CredUnmarshalCredentialW(_In_ LPCTSTR MarshaledCredential,_Out_ PCRED_MARSHAL_TYPE CredType,_Out_ PVOID *Credential)
BOOL None advapi32.CredUnmarshalCredentialA(_In_ LPCTSTR MarshaledCredential,_Out_ PCRED_MARSHAL_TYPE CredType,_Out_ PVOID *Credential)
HRESULT THEMEAPI uxtheme.GetThemeTimingFunction(_In_ HTHEME hTheme,_In_ int iTimingFunctionId,_Out_ TA_TIMINGFUNCTION *pTimingFunction,_In_ DWORD cbSize,_Out_ DWORD pcbSizeOut)
HRESULT None shell32.CreateViewWindow([in] IShellView *psvPrevious,[in] LPCFOLDERSETTINGS pfs,[in] IShellBrowser *psb,[in] RECT *prcView,[out] HWND *phWnd)
HRESULT None shell32.SetBandSiteInfo([in] BANDSITEINFO *pbsinfo)
NTSTATUS None None.SpInstanceInit(_In_ ULONG Version,_In_ PSECPKG_DLL_FUNCTIONS FunctionTable,_Out_ PVOID *UserFunctions)
HRESULT None None.AddSeparator([in] DWORD dwIDCtl)
LONG WINAPI winscard.SCardIntroduceReaderGroup(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szGroupName)
LONG WINAPI winscard.SCardIntroduceReaderGroupW(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szGroupName)
LONG WINAPI winscard.SCardIntroduceReaderGroupA(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szGroupName)
BOOL WINAPI crypt32.CryptUnregisterOIDInfo(_In_ PCCRYPT_OID_INFO pInfo)
HRESULT None mf.MFCreateSampleGrabberSinkActivate(IMFMediaType *pIMFMediaType None,IMFSampleGrabberSinkCallback *pIMFSampleGrabberSinkCallback None,IMFActivate **ppIActivate None)
NTSTATUS NTAPI advapi32.LsaQueryForestTrustInformation(_In_ LSA_HANDLE PolicyHandle,_In_ PLSA_UNICODE_STRING TrustedDomainName,_Out_ PLSA_FOREST_TRUST_INFORMATION *ForestTrustInfo)
DWORD None None.NPEnumResource(_In_ HANDLE hEnum,_Inout_ LPDWORD lpcCount,_Out_ LPVOID lpBuffer,_Inout_ LPDWORD lpBufferSize)
BOOL None advapi32.CredEnumerate(_In_ LPCTSTR Filter,_In_ DWORD Flags,_Out_ DWORD *Count,_Out_ PCREDENTIAL **Credentials)
BOOL None advapi32.CredEnumerateW(_In_ LPCTSTR Filter,_In_ DWORD Flags,_Out_ DWORD *Count,_Out_ PCREDENTIAL **Credentials)
BOOL None advapi32.CredEnumerateA(_In_ LPCTSTR Filter,_In_ DWORD Flags,_Out_ DWORD *Count,_Out_ PCREDENTIAL **Credentials)
HRESULT None uxtheme.GetThemeBackgroundRegion(_In_ HTHEME hTheme,_In_ HDC hdc,_In_ int iPartId,_In_ int iStateId,_In_ LPCRECT pRect,_Out_ HRGN *pRegion)
void CALLBACK None.RpcAuthKeyRetrievalFn(void *Arg None,unsigned char *ServerPrincName,unsigned long KeyVer,void **Key None,RPC_STATUS *Status None)
LONG WINAPI winscard.SCardReadCache(_In_ SCARDCONTEXT hContext,_In_ UUID *CardIdentifier,_In_ DWORD FreshnessCounter,_In_ LPTSTR LookupName,_Out_ PBYTE Data,_Out_ DWORD *DataLen)
LONG WINAPI winscard.SCardReadCacheW(_In_ SCARDCONTEXT hContext,_In_ UUID *CardIdentifier,_In_ DWORD FreshnessCounter,_In_ LPTSTR LookupName,_Out_ PBYTE Data,_Out_ DWORD *DataLen)
LONG WINAPI winscard.SCardReadCacheA(_In_ SCARDCONTEXT hContext,_In_ UUID *CardIdentifier,_In_ DWORD FreshnessCounter,_In_ LPTSTR LookupName,_Out_ PBYTE Data,_Out_ DWORD *DataLen)
HRESULT None uxtheme.GetThemeDocumentationProperty(_In_ LPCWSTR pszThemeName,_In_ LPCWSTR pszPropertyName,_Out_ LPWSTR pszValueBuff,_In_ int cchMaxValChars)
NTSTATUS None None.LsaApLogonUserEx(_In_ PLSA_CLIENT_REQUEST ClientRequest,_In_ SECURITY_LOGON_TYPE LogonType,_In_ PVOID AuthenticationInformation,_In_ PVOID ClientAuthenticationBase,_In_ ULONG AuthenticationInformationLength,_Out_ PVOID *ProfileBuffer,_Out_ PULONG ProfileBufferLength,_Out_ PLUID LogonId,_Out_ PNTSTATUS SubStatus,_Out_ PLSA_TOKEN_INFORMATION_TYPE TokenInformationType,_Out_ PVOID *TokenInformation,_Out_ PUNICODE_STRING *AccountName,_Out_ PUNICODE_STRING *AuthenticatingAuthority,_Out_ PUNICODE_STRING *MachineName)
SECURITY_STATUS None credui.SspiGetCredUIContext(_In_ HANDLE ContextHandle,_In_ GUID *CredType,_In_ LUID *LogonId,_Out_ PSEC_WINNT_CREDUI_CONTEXT_VECTOR *CredUIContexts,_Out_ HANDLE *TokenHandle)
BOOL None None.WlxIsLockOk(_In_ PVOID pWlxContext)
BOOL None uxtheme.GetThemeSysBool(_In_ HTHEME hTheme,_In_ int iBoolID)
HINSTANCE None shell32.ShellExecute(_In_opt_ HWND hwnd,_In_opt_ LPCTSTR lpOperation,_In_ LPCTSTR lpFile,_In_opt_ LPCTSTR lpParameters,_In_opt_ LPCTSTR lpDirectory,_In_ INT nShowCmd)
HINSTANCE None shell32.ShellExecuteW(_In_opt_ HWND hwnd,_In_opt_ LPCTSTR lpOperation,_In_ LPCTSTR lpFile,_In_opt_ LPCTSTR lpParameters,_In_opt_ LPCTSTR lpDirectory,_In_ INT nShowCmd)
HINSTANCE None shell32.ShellExecuteA(_In_opt_ HWND hwnd,_In_opt_ LPCTSTR lpOperation,_In_ LPCTSTR lpFile,_In_opt_ LPCTSTR lpParameters,_In_opt_ LPCTSTR lpDirectory,_In_ INT nShowCmd)
BOOL WINAPI credui.CredUnPackAuthenticationBuffer(_In_ DWORD dwFlags,_In_ PVOID pAuthBuffer,_In_ DWORD cbAuthBuffer,_Out_ LPTSTR pszUserName,_Inout_ DWORD *pcchMaxUserName,_Out_ LPTSTR pszDomainName,_Inout_ DWORD *pcchMaxDomainname,_Out_ LPTSTR pszPassword,_Inout_ DWORD *pcchMaxPassword)
BOOL WINAPI credui.CredUnPackAuthenticationBufferW(_In_ DWORD dwFlags,_In_ PVOID pAuthBuffer,_In_ DWORD cbAuthBuffer,_Out_ LPTSTR pszUserName,_Inout_ DWORD *pcchMaxUserName,_Out_ LPTSTR pszDomainName,_Inout_ DWORD *pcchMaxDomainname,_Out_ LPTSTR pszPassword,_Inout_ DWORD *pcchMaxPassword)
BOOL WINAPI credui.CredUnPackAuthenticationBufferA(_In_ DWORD dwFlags,_In_ PVOID pAuthBuffer,_In_ DWORD cbAuthBuffer,_Out_ LPTSTR pszUserName,_Inout_ DWORD *pcchMaxUserName,_Out_ LPTSTR pszDomainName,_Inout_ DWORD *pcchMaxDomainname,_Out_ LPTSTR pszPassword,_Inout_ DWORD *pcchMaxPassword)
NTSTATUS NTAPI None.SpExchangeMetaDataFn(_In_ LSA_SEC_HANDLE CredentialHandle,_In_opt_ PUNICODE_STRING TargetName,_In_ ULONG ContextRequirements,_In_ ULONG MetaDataLength,_In_ PUCHAR MetaData,_Inout_ PLSA_SEC_HANDLE ContextHandle)
HCERT_SERVER_OCSP_RESPONSE WINAPI crypt32.CertOpenServerOcspResponse(_In_ PCCERT_CHAIN_CONTEXT pChainContext,_In_ DWORD dwFlags,_Reserved_ LPVOID pvReserved)
NTSTATUS None None.AllocateClientBuffer(_In_ PLSA_CLIENT_REQUEST ClientRequest,_In_ ULONG LengthRequired,_Out_ PVOID *ClientBaseAddress)
NTSTATUS None None.CopyFromClientBuffer(_In_ PLSA_CLIENT_REQUEST ClientRequest,_In_ ULONG Length,_In_ PVOID BufferToCopy,_In_ PVOID ClientBaseAddress)
BOOL WINAPI cryptnet.CryptRetrieveObjectByUrl(_In_ LPCTSTR pszUrl,_In_ LPCSTR pszObjectOid,_In_ DWORD dwRetrievalFlags,_In_ DWORD dwTimeout,_Out_ LPVOID *ppvObject,_In_ HCRYPTASYNC hAsyncRetrieve,_In_opt_ PCRYPT_CREDENTIALS pCredentials,_In_opt_ LPVOID pvVerify,_In_ PCRYPT_RETRIEVE_AUX_INFO pAuxInfo)
BOOL WINAPI cryptnet.CryptRetrieveObjectByUrlW(_In_ LPCTSTR pszUrl,_In_ LPCSTR pszObjectOid,_In_ DWORD dwRetrievalFlags,_In_ DWORD dwTimeout,_Out_ LPVOID *ppvObject,_In_ HCRYPTASYNC hAsyncRetrieve,_In_opt_ PCRYPT_CREDENTIALS pCredentials,_In_opt_ LPVOID pvVerify,_In_ PCRYPT_RETRIEVE_AUX_INFO pAuxInfo)
BOOL WINAPI cryptnet.CryptRetrieveObjectByUrlA(_In_ LPCTSTR pszUrl,_In_ LPCSTR pszObjectOid,_In_ DWORD dwRetrievalFlags,_In_ DWORD dwTimeout,_Out_ LPVOID *ppvObject,_In_ HCRYPTASYNC hAsyncRetrieve,_In_opt_ PCRYPT_CREDENTIALS pCredentials,_In_opt_ LPVOID pvVerify,_In_ PCRYPT_RETRIEVE_AUX_INFO pAuxInfo)
BOOL None advapi32.CredWrite(_In_ PCREDENTIAL Credential,_In_ DWORD Flags)
BOOL None advapi32.CredWriteW(_In_ PCREDENTIAL Credential,_In_ DWORD Flags)
BOOL None advapi32.CredWriteA(_In_ PCREDENTIAL Credential,_In_ DWORD Flags)
SECURITY_STATUS SEC_Entry secur32.FreeCredentialsHandle(_In_ PCredHandle phCredential)
PVOID WINAPI None.AllocatePrivateHeap(_In_ SIZE_T Length)
NTSTATUS None None.CreateLogonSession(_In_ PLUID LogonId)
BOOL WINAPI advapi32.CryptDeriveKey(_In_ HCRYPTPROV hProv,_In_ ALG_ID Algid,_In_ HCRYPTHASH hBaseData,_In_ DWORD dwFlags,_Inout_ HCRYPTKEY *phKey)
NTSTATUS NTAPI None.SpLsaModeInitialize(_In_ ULONG LsaVersion,_Out_ PULONG PackageVersion,_Out_ PSECPKG_FUNCTION_TABLE *ppTables,_Out_ PULONG pcTables)
HRESULT None mf.CreateNamedPropertyStore(_Out_ INamedPropertyStore **ppStore)
NTSTATUS NTAPI advapi32.LsaSetForestTrustInformation(_In_ LSA_HANDLE PolicyHandle,_In_ PLSA_UNICODE_STRING TrustedDomainName,_In_ PLSA_FOREST_TRUST_INFORMATION ForestTrustInfo,_In_ BOOLEAN CheckOnly,_Out_ PLSA_FOREST_TRUST_COLLISION_INFORMATION *CollisionInfo)
BOOL None schannel.SslCrackCertificate(_In_ PUCHAR pbCertificate,_In_ DWORD dwCertificate,_In_ DWORD dwFlags,_Out_ PX509Certificate *ppCertificate)
HRESULT None uxtheme.GetThemeMargins(_In_ HTHEME hTheme,_In_ HDC hdc,_In_ int iPartId,_In_ int iStateId,_In_ int iPropId,_In_ LPRECT prc,_Out_ MARGINS *pMargins)
BOOL WINAPI None.WlxGetConsoleSwitchCredentials(_In_ PVOID pWlxContext,_Out_ PVOID pInfo)
HRESULT None uxtheme.GetThemeIntList(_In_ HTHEME hTheme,_In_ int iPartId,_In_ int iStateId,_In_ int iPropId,_Out_ INTLIST *pIntList)
const DXVA2_Fixed32 None.DXVA2_Fixed32TransparentAlpha(void None None)
HRESULT None uxtheme.BufferedPaintInit(void None None)
BOOL WINAPI crypt32.CertComparePublicKeyInfo(_In_ DWORD dwCertEncodingType,_In_ PCERT_PUBLIC_KEY_INFO pPublicKey1,_In_ PCERT_PUBLIC_KEY_INFO pPublicKey2)
HBRUSH None uxtheme.GetThemeSysColorBrush(_In_ HTHEME hTheme,_In_ int iColorID)
HRESULT WINAPI mssign32.PvkGetCryptProv(_In_ HWND hwnd,_In_ LPCWSTR pwszCaption,_In_ LPCWSTR pwszCapiProvider,_In_ DWORD dwProviderType,_In_ LPCWSTR pwszPvkFile,_In_ LPCWSTR pwszKeyContainerName,_Out_ DWORD *pdwKeySpec,_Out_opt_ LPWSTR *ppwszTmpContainer,_Out_ HCRYPTPROV *phCryptProv)
NTSTATUS None None.SpGetInfo(_Out_ PSecPkgInfo PackageInfo)
HRESULT None mfreadwrite.MFCreateSinkWriterFromMediaSink(_In_ IMFMediaSink *pMediaSink,_In_ IMFAttributes *pAttributes,_Out_ IMFSinkWriter **ppSinkWriter)
HRESULT None uxtheme.GetThemeFilename(_In_ HTHEME hTheme,_In_ int iPartId,_In_ int iStateId,_In_ int iPropId,_Out_ LPWSTR pszThemeFilename,_In_ int cchMaxBuffChars)
DWORD WINAPI credui.CredUIParseUserName(_In_ PCTSTR pszUserName,_Out_ PTSTR pszUser,_In_ ULONG ulUserMaxChars,_Out_ PTSTR pszDomain,_In_ ULONG ulDomainMaxChars)
DWORD WINAPI credui.CredUIParseUserNameW(_In_ PCTSTR pszUserName,_Out_ PTSTR pszUser,_In_ ULONG ulUserMaxChars,_Out_ PTSTR pszDomain,_In_ ULONG ulDomainMaxChars)
DWORD WINAPI credui.CredUIParseUserNameA(_In_ PCTSTR pszUserName,_Out_ PTSTR pszUser,_In_ ULONG ulUserMaxChars,_Out_ PTSTR pszDomain,_In_ ULONG ulDomainMaxChars)
DWORD WINAPI credui.CredUIConfirmCredentials(_In_ PCTSTR pszTargetName,_In_ BOOL bConfirm)
DWORD WINAPI credui.CredUIConfirmCredentialsW(_In_ PCTSTR pszTargetName,_In_ BOOL bConfirm)
DWORD WINAPI credui.CredUIConfirmCredentialsA(_In_ PCTSTR pszTargetName,_In_ BOOL bConfirm)
NTSTATUS None None.SpDeleteCredentials(_In_ LSA_SEC_HANDLE CredentialHandle,_In_ PSecBuffer Key)
HRESULT None mfplat.MFGetAttributesAsBlobSize(_In_ IMFAttributes *pAttributes,_Out_ UINT32 *pcbBufSize)
DWORD None None.NPCancelConnection(_In_ LPTSTR lpName,_In_ BOOL fForce)
NTSTATUS None None.LsaApCallPackagePassthrough(_In_ PLSA_CLIENT_REQUEST ClientRequest,_In_ PVOID ProtocolSubmitBuffer,_In_ PVOID ClientBufferBase,_In_ ULONG SubmitBufferLength,_Out_ PVOID *ProtocolReturnBuffer,_Out_ PULONG ReturnBufferLength,_Out_ PNTSTATUS ProtocolStatus)
HRESULT None mf.MFCreateASFStreamSelector(IMFASFProfile *pIASFProfile None,IMFASFStreamSelector **ppSelector None)
BOOL None None.WlxDisplayStatusMessage(_In_ PVOID pWlxContext,_In_ HDESK hDesktop,_In_ DWORD dwOptions,_In_ PWSTR pTitle,_In_ PWSTR pMessage)
SECURITY_STATUS SEC_Entry secur32.InitializeSecurityContext(_In_opt_ PCredHandle phCredential,_In_opt_ PCtxtHandle phContext,_In_opt_ SEC_CHAR *pszTargetName,_In_ ULONG fContextReq,_In_ ULONG Reserved1,_In_ ULONG TargetDataRep,_In_opt_ PSecBufferDesc pInput,_In_ ULONG Reserved2,_Inout_opt_ PCtxtHandle phNewContext,_Inout_opt_ PSecBufferDesc pOutput,_Out_ PULONG pfContextAttr,_Out_opt_ PTimeStamp ptsExpiry)
SECURITY_STATUS SEC_Entry secur32.InitializeSecurityContextW(_In_opt_ PCredHandle phCredential,_In_opt_ PCtxtHandle phContext,_In_opt_ SEC_CHAR *pszTargetName,_In_ ULONG fContextReq,_In_ ULONG Reserved1,_In_ ULONG TargetDataRep,_In_opt_ PSecBufferDesc pInput,_In_ ULONG Reserved2,_Inout_opt_ PCtxtHandle phNewContext,_Inout_opt_ PSecBufferDesc pOutput,_Out_ PULONG pfContextAttr,_Out_opt_ PTimeStamp ptsExpiry)
SECURITY_STATUS SEC_Entry secur32.InitializeSecurityContextA(_In_opt_ PCredHandle phCredential,_In_opt_ PCtxtHandle phContext,_In_opt_ SEC_CHAR *pszTargetName,_In_ ULONG fContextReq,_In_ ULONG Reserved1,_In_ ULONG TargetDataRep,_In_opt_ PSecBufferDesc pInput,_In_ ULONG Reserved2,_Inout_opt_ PCtxtHandle phNewContext,_Inout_opt_ PSecBufferDesc pOutput,_Out_ PULONG pfContextAttr,_Out_opt_ PTimeStamp ptsExpiry)
int None None.WlxDialogBox(_In_ HANDLE hWlx,_In_ HANDLE hInst,_In_ LPWSTR lpszTemplate,_In_ HWND hwndOwner,_In_ DLGPROC dlgprc)
RPC_STATUS RPC_ENTRY rpcrt4.RpcServerUseProtseqIfEx(unsigned char *Protseq,unsigned int MaxCalls,RPC_IF_HANDLE IfSpec None,void *SecurityDescriptor None,PRPC_POLICY Policy None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcServerUseProtseqIfExW(unsigned char *Protseq,unsigned int MaxCalls,RPC_IF_HANDLE IfSpec None,void *SecurityDescriptor None,PRPC_POLICY Policy None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcServerUseProtseqIfExA(unsigned char *Protseq,unsigned int MaxCalls,RPC_IF_HANDLE IfSpec None,void *SecurityDescriptor None,PRPC_POLICY Policy None)
HRESULT None mfplat.MFBeginRegisterWorkQueueWithMMCSSEx(_In_ DWORD dwWorkQueueId,_In_ LPCWSTR wszClass,_In_ DWORD dwTaskId,_In_ LONG lPriority,_In_ IMFAsyncCallback *pDoneCallback,_In_ IUnknown *pDoneState)
LONG WINAPI winscard.SCardDisconnect(_In_ SCARDHANDLE hCard,_In_ DWORD dwDisposition)
BOOL WINAPI None.CRYPT_ENUM_KEYID_PROP(_In_ PCRYPT_HASH_BLOB pKeyIdentifier,_In_ DWORD dwFlags,_In_ void *pvReserved,_Inout_ void *pvArg,_In_ DWORD cProp,_In_ DWORD *rgdwPropId,_In_ void **rgpvData,_In_ DWORD *rgcbData)
HRESULT None shell32.SetProgress64([in] ULONGLONG ullCompleted,[in] ULONGLONG ullTotal)
int WINAPI user32.GetKeyboardLayoutList(_In_ int nBuff,_Out_ HKL *lpList)
HRESULT None None.MFSetAttributeRatio(_In_ IMFAttributes *pAttributes,_In_ REFGUID guidKey,_In_ UINT32 unNumerator,_In_ UINT32 unDenominator)
BOOL None uxtheme.EndPanningFeedback(_In_ HWND hwnd,_In_ BOOL fAnimateBack)
BOOL None None.WlxRemoveStatusMessage(_In_ PVOID pWlxContext)
HRESULT None uxtheme.GetThemePropertyOrigin(_In_ HTHEME hTheme,_In_ int iPartId,_In_ int iStateId,_In_ int iPropId,_Out_ PROPERTYORIGIN *pOrigin)
HKL WINAPI user32.GetKeyboardLayout(_In_ DWORD idThread)
BOOL None None.WlxSetTimeout(_In_ HANDLE hWlx,_In_ DWORD Timeout)
LONG WINAPI winscard.SCardSetAttrib(_In_ SCARDHANDLE hCard,_In_ DWORD dwAttrId,_In_ LPCBYTE pbAttr,_In_ DWORD cbAttrLen)
SECURITY_STATUS SEC_ENTRY secur32.SaslGetProfilePackage(_In_ LPTSTR ProfileName,_Out_ PSecPkgInfo *PackageInfo)
SECURITY_STATUS SEC_ENTRY secur32.SaslGetProfilePackageW(_In_ LPTSTR ProfileName,_Out_ PSecPkgInfo *PackageInfo)
SECURITY_STATUS SEC_ENTRY secur32.SaslGetProfilePackageA(_In_ LPTSTR ProfileName,_Out_ PSecPkgInfo *PackageInfo)
void None None.WlxShutdown(_In_ PVOID pWlxContext,_In_ DWORD ShutdownType)
BOOL None None.WlxInitialize(_In_ LPWSTR lpWinsta,_In_ HANDLE hWlx,_In_ PVOID pvReserved,_In_ PVOID pWinlogonFunctions,_Out_ PVOID *pWlxContext)
LONG WINAPI winscard.SCardForgetCardType(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCardName)
LONG WINAPI winscard.SCardForgetCardTypeW(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCardName)
LONG WINAPI winscard.SCardForgetCardTypeA(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCardName)
NTSTATUS None None.OpenSamUser(_In_ PSECURITY_STRING Name,_In_ SECPKG_NAME_TYPE NameType,_In_ PSECURITY_STRING Prefix,_In_ BOOLEAN AllowGuest,_In_ ULONG Reserved,_Out_ PVOID *UserHandle)
DWORD None None.NPGetUser(_In_ LPTSTR lpName,_Out_ LPTSTR lpUserName,_Inout_ LPDWORD lpBufferSize)
HRESULT None mf.MFRequireProtectedEnvironment(_In_ IMFPresentationDescriptor *pPresentationDescriptor)
HRESULT None certadm.CertSrvBackupClose(_In_ HCSBC hbc)
HPAINTBUFFER None uxtheme.BeginBufferedPaint(HDC hdcTarget None,const RECT *prcTarget,BP_BUFFERFORMAT dwFormat None,_In_ BP_PAINTPARAMS *pPaintParams,_Out_ HDC *phdc)
DWORD None None.WlxQueryTerminalServicesData(_In_ HANDLE hWlx,_Out_ PWLX_TERMINAL_SERVICES_DATA pTSData,_In_ WCHAR *UserName,_In_ WCHAR *Domain)
DWORD None credui.CredUIStoreSSOCredW(_In_ PCWSTR pszRealm,_In_ PCWSTR pszUsername,_In_ PCWSTR pszPassword,_In_ BOOL bPersist)
VOID None None.FreeSharedMemory(_In_ PVOID SharedMem,_In_ PVOID Memory)
NTSTATUS None None.ImpersonateClient(void None None)
DWORD None None.NPGetUniversalName(_In_ LPCTSTR lpLocalPath,_In_ DWORD dwInfoLevel,_Out_ LPVOID lpBuffer,_Inout_ LPDWORD lpBufferSize)
NTSTATUS WINAPI advapi32.CredMarshalTargetInfo(_In_ PCREDENTIAL_TARGET_INFORMATIONW InTargetInfo,_Out_ PUSHORT *Buffer,PULONG BufferSize None)
HRESULT None mf.MFCreateNetSchemePlugin(_In_ REFIID riid,_Out_ LPVOID *ppvHandler)
BOOL WINAPI user32.RegisterHotKey(_In_opt_ HWND hWnd,_In_ int id,_In_ UINT fsModifiers,_In_ UINT vk)
SECURITY_STATUS SEC_Entry secur32.RevertSecurityContext(_In_ PCtxtHandle phContext)
HRESULT None mfplat.MFTGetInfo(_In_ CLSID clsidMFT,_Out_ LPWSTR *pszName,_Out_ MFT_REGISTER_TYPE_INFO **ppInputTypes,_Out_ UINT32 *pcInputTypes,_Out_ MFT_REGISTER_TYPE_INFO **ppOutputTypes,_Out_ UINT32 *pcOutputTypes,_Out_ IMFAttributes **ppAttributes)
HRESULT None mfplat.MFCreateMediaBufferFromMediaType(_In_ IMFMediaType *pMediaType,_In_ LONGLONG llDuration,_In_ DWORD dwMinLength,_In_ DWORD dwMinAlignment,_Out_ IMFMediaBuffer **ppBuffer)
SECURITY_STATUS SEC_Entry secur32.FreeContextBuffer(_In_ PVOID pvContextBuffer)
HRESULT None mfplat.MFGetWorkQueueMMCSSTaskId(_In_ DWORD dwWorkQueueId,_Out_ LPDWORD pdwTaskId)
NTSTATUS None None.SpInitialize(_In_ ULONG_PTR PackageId,_In_ PSECPKG_PARAMETERS Parameters,_In_ PLSA_SECPKG_FUNCTION_TABLE FunctionTable)
LONG WINAPI winscard.SCardGetTransmitCount(_In_ SCARDHANDLE hCard,_Out_ LPDWORD pcTransmitCount)
HRESULT None mfplat.MFInitAMMediaTypeFromMFMediaType(IMFMediaType *pMFType None,GUID guidFormatBlockType None,AM_MEDIA_TYPE *pAMType None)
NTSTATUS None None.SpExportSecurityContext(_In_ LSA_SEC_HANDLE phContext,_In_ ULONG fFlags,_Out_ PSecBuffer pPackedContext,_Out_ PHANDLE pToken)
BOOL WINAPI user32.GetKeyboardState(_Out_ PBYTE lpKeyState)
NTSTATUS None None.SpGetExtendedInformation(_In_ SECPKG_EXTENDED_INFORMATION_CLASS Class,_Out_ PSECPKG_EXTENDED_INFORMATION *ppInformation)
NTSTATUS None None.SpQueryContextAttributes(_In_ LSA_SEC_HANDLE ContextHandle,_In_ ULONG ContextAttribute,_Out_ PVOID Buffer)
HDC None uxtheme.GetBufferedPaintTargetDC(HPAINTBUFFER hBufferedPaint None)
HRESULT None mfplat.MFLockWorkQueue(_In_ DWORD dwWorkQueue)
HRESULT None mfplat.MFPutWorkItem(_In_ DWORD dwQueue,_In_ IMFAsyncCallback *pCallback,_In_ IUnknown *pState)
int None None.WlxDialogBoxIndirect(_In_ HANDLE hWlx,_In_ HANDLE hInst,_In_ LPCDLGTEMPLATE hDialogTemplate,_In_ HWND hwndOwner,_In_ DLGPROC dlgprc)
HRESULT None mfplat.MFCreateStreamOnMFByteStreamEx(_In_ IMFByteStream *pByteStream,_In_ REFIID riid,_Out_ void **ppv)
HRESULT None mfplat.MFCreateMFVideoFormatFromMFMediaType(_In_ IMFMediaType *pMFType,_Out_ MFVIDEOFORMAT **ppMFVF,_Out_ UINT32 *pcbSize)
DWORD None None.NPFormatNetworkName(_In_ LPTSTR lpRemoteName,_Out_ LPTSTR lpFormattedName,_Inout_ LPDWORD lpnLength,_In_ DWORD dwFlags,_In_ DWORD dwAveCharPerLine)
HRESULT None mf.MFCreateASFIndexer(IMFASFIndexer **ppIIndexer None)
HRESULT WINAPI None.MFCreateSensorStream(DWORD StreamId None,_In_opt_ IMFAttributes *pAttributes,_In_ IMFCollection *pMediaTypeCollection,_Out_ IMFSensorStream **ppStream)
int None None.WlxChangePasswordNotify(_In_ HANDLE hWlx,_In_ PWLX_MPR_NOTIFY_INFO pMprInfo,_In_ DWORD dwChangeInfo)
SECURITY_STATUS None secur32.DeleteSecurityPackage(_In_ LPTSTR pszPackageName)
SECURITY_STATUS None secur32.DeleteSecurityPackageW(_In_ LPTSTR pszPackageName)
SECURITY_STATUS None secur32.DeleteSecurityPackageA(_In_ LPTSTR pszPackageName)
HRESULT None evr.MFCreateVideoMixer(IUnknown *pOwner None,REFIID riidDevice None,REFIID riid None,void **ppVideoMixer None)
HRESULT WINAPI None.MFCreateSensorActivityMonitor(_In_ IMFSensorActivitiesReportCallback *pCallback,_Out_ IMFSensorActivityMonitor **ppActivityMonitor)
HRESULT None mfplat.MFCreatePathFromURL(_In_opt_ LPCWSTR pwszFileURL,_Out_ LPWSTR *ppwszFilePath)
HRESULT None mf.MFCreateMPEG4MediaSink(_In_ IMFByteStream *pIByteStream,_In_ IMFMediaType *pVideoMediaType,_In_ IMFMediaType *pAudioMediaType,_Out_ IMFMediaSink **ppIMediaSink)
HRESULT WINAPI mfplat.MFCreateMediaTypeFromProperties(_In_ IUnknown *punkStream,_Out_ IMFMediaType **ppMediaType)
SECURITY_STATUS SEC_Entry secur32.QueryContextAttributes(_In_ PCtxtHandle phContext,_In_ ULONG ulAttribute,_Out_ PVOID pBuffer)
SECURITY_STATUS SEC_Entry secur32.QueryContextAttributesW(_In_ PCtxtHandle phContext,_In_ ULONG ulAttribute,_Out_ PVOID pBuffer)
SECURITY_STATUS SEC_Entry secur32.QueryContextAttributesA(_In_ PCtxtHandle phContext,_In_ ULONG ulAttribute,_Out_ PVOID pBuffer)
HRESULT None shell32.TranslateAccelerator(LPMSG lpmsg None)
BOOL WINAPI crypt32.CertGetCTLContextProperty(_In_ PCCTL_CONTEXT pCtlContext,_In_ DWORD dwPropId,_Out_ void *pvData,_Inout_ DWORD *pcbData)
HRESULT None mf.MFCreateASFIndexerByteStream(_In_ IMFByteStream *pIContentByteStream,_In_ QWORD cbIndexStartOffset,_Out_ IMFByteStream **pIIndexByteStream)
HRESULT None uxtheme.EndBufferedAnimation(HANIMATIONBUFFER hbpAnimation None,BOOL fUpdateTarget None)
BOOL None uxtheme.BufferedPaintRenderAnimation(HWND hwnd None,HDC hdcTarget None)
HRESULT None mf.MFCreatePresentationClock(IMFPresentationClock **ppPresentationClock None)
HRESULT None uxtheme.GetThemeFont(_In_ HTHEME hTheme,_In_ HDC hdc,_In_ int iPartId,_In_ int iStateId,_In_ int iPropId,_Out_ LOGFONTW *pFont)
SECURITY_STATUS None sspicli.SspiFreeAuthIdentity(_In_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE AuthData)
BOOL None evr.MFIsFormatYUV(_In_ DWORD Format)
BOOL WINAPI user32.IsWindowVisible(_In_ HWND hWnd)
NTSTATUS WINAPI advapi32.LsaQueryCAPs(PSID *CAPIDs None,_In_ ULONG CAPIDCount,_Out_ PCENTRAL_ACCESS_POLICY *CAPs,_Out_ PULONG CAPCount)
HRESULT None mfplat.MFCreateSourceResolver(_Out_ IMFSourceResolver **ppISourceResolver)
DWORD None uxtheme.GetThemeAppProperties(void None None)
SECURITY_STATUS None sspicli.SspiEncodeAuthIdentityAsStrings(_In_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE pAuthIdentity,_Out_ PCWSTR *ppszUserName,_Out_ PCWSTR *ppszDomainName,_Out_ PCWSTR *ppszPackedCredentialsString)
SECURITY_STATUS None sspicli.SspiEncodeAuthIdentityAsStringsW(_In_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE pAuthIdentity,_Out_ PCWSTR *ppszUserName,_Out_ PCWSTR *ppszDomainName,_Out_ PCWSTR *ppszPackedCredentialsString)
SECURITY_STATUS None sspicli.SspiEncodeAuthIdentityAsStringsA(_In_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE pAuthIdentity,_Out_ PCWSTR *ppszUserName,_Out_ PCWSTR *ppszDomainName,_Out_ PCWSTR *ppszPackedCredentialsString)
PCCERT_SERVER_OCSP_RESPONSE_CONTEXT WINAPI crypt32.CertGetServerOcspResponseContext(_In_ HCERT_SERVER_OCSP_RESPONSE hServerOcspResponse,_In_ DWORD dwFlags,_Reserved_ LPVOID pvReserved)
SECURITY_STATUS SEC_ENTRY secur32.SaslEnumerateProfiles(_Out_ LPTSTR *ProfileList,_Out_ ULONG *ProfileCount)
SECURITY_STATUS SEC_ENTRY secur32.SaslEnumerateProfilesW(_Out_ LPTSTR *ProfileList,_Out_ ULONG *ProfileCount)
SECURITY_STATUS SEC_ENTRY secur32.SaslEnumerateProfilesA(_Out_ LPTSTR *ProfileList,_Out_ ULONG *ProfileCount)
NTSTATUS None None.ConvertAuthDataToToken(_In_ PVOID UserAuthData,_In_ ULONG UserAuthDataSize,_In_ SECURITY_IMPERSONATION_LEVEL ImpersonationLevel,_In_ PTOKEN_SOURCE TokenSource,_In_ SECURITY_LOGON_TYPE LogonType,_In_ PUNICODE_STRING AuthorityName,_Out_ PHANDLE Token,_Out_ PLUID LogonId,_Out_ PUNICODE_STRING AccountName,_Out_ PNTSTATUS SubStatus)
HRESULT None mfplat.MFCreateStreamOnMFByteStream(_In_ IMFByteStream *pByteStream,_Out_ IStream **ppStream)
BOOL WINAPI advapi32.ConvertStringSecurityDescriptorToSecurityDescriptor(_In_ LPCTSTR StringSecurityDescriptor,_In_ DWORD StringSDRevision,_Out_ PSECURITY_DESCRIPTOR *SecurityDescriptor,_Out_ PULONG SecurityDescriptorSize)
BOOL WINAPI advapi32.ConvertStringSecurityDescriptorToSecurityDescriptorW(_In_ LPCTSTR StringSecurityDescriptor,_In_ DWORD StringSDRevision,_Out_ PSECURITY_DESCRIPTOR *SecurityDescriptor,_Out_ PULONG SecurityDescriptorSize)
BOOL WINAPI advapi32.ConvertStringSecurityDescriptorToSecurityDescriptorA(_In_ LPCTSTR StringSecurityDescriptor,_In_ DWORD StringSDRevision,_Out_ PSECURITY_DESCRIPTOR *SecurityDescriptor,_Out_ PULONG SecurityDescriptorSize)
NTSTATUS NTAPI None.SpUpdateCredentialsFn(_In_ LSA_SEC_HANDLE ContextHandle,_In_ GUID *CredType,_In_ ULONG FlatCredUIContextLength,PUCHAR FlatCredUIContext None)
HRESULT None uxtheme.CloseThemeData(_In_ HTHEME hTheme)
BOOL None uxtheme.IsThemeDialogTextureEnabled(_In_ HWND hwnd)
NTSTATUS None None.SpFreeCredentialsHandle(_In_ LSA_SEC_HANDLE CredentialHandle)
PCCERT_CONTEXT WINAPI crypt32.CertEnumCertificatesInStore(_In_ HCERTSTORE hCertStore,_In_ PCCERT_CONTEXT pPrevCertContext)
HRESULT None mfplat.MFCancelWorkItem(_In_ MFWORKITEM_KEY Key)
BOOL None uxtheme.IsCompositionActive(void None None)
typedef None None.HRESULT(CALLBACK *PDXVAHDSW_GetVideoProcessorCustomRates None)
BOOL None advapi32.CredGetTargetInfo(_In_ LPCTSTR TargetName,_In_ DWORD Flags,_Out_ PCREDENTIAL_TARGET_INFORMATION *TargetInfo)
BOOL None advapi32.CredGetTargetInfoW(_In_ LPCTSTR TargetName,_In_ DWORD Flags,_Out_ PCREDENTIAL_TARGET_INFORMATION *TargetInfo)
BOOL None advapi32.CredGetTargetInfoA(_In_ LPCTSTR TargetName,_In_ DWORD Flags,_Out_ PCREDENTIAL_TARGET_INFORMATION *TargetInfo)
RPC_STATUS RPC_ENTRY rpcrt4.RpcBindingInqAuthInfo(RPC_BINDING_HANDLE Binding None,RPC_CHAR **ServerPrincName None,unsigned long *AuthnLevel,unsigned long *AuthnSvc,RPC_AUTH_IDENTITY_HANDLE *AuthIdentity None,unsigned long *AuthzSvc)
RPC_STATUS RPC_ENTRY rpcrt4.RpcBindingInqAuthInfoW(RPC_BINDING_HANDLE Binding None,RPC_CHAR **ServerPrincName None,unsigned long *AuthnLevel,unsigned long *AuthnSvc,RPC_AUTH_IDENTITY_HANDLE *AuthIdentity None,unsigned long *AuthzSvc)
RPC_STATUS RPC_ENTRY rpcrt4.RpcBindingInqAuthInfoA(RPC_BINDING_HANDLE Binding None,RPC_CHAR **ServerPrincName None,unsigned long *AuthnLevel,unsigned long *AuthnSvc,RPC_AUTH_IDENTITY_HANDLE *AuthIdentity None,unsigned long *AuthzSvc)
LONG WINAPI winscard.SCardStatus(_In_ SCARDHANDLE hCard,_Out_ LPTSTR szReaderName,_Inout_opt_ LPDWORD pcchReaderLen,_Out_opt_ LPDWORD pdwState,_Out_opt_ LPDWORD pdwProtocol,_Out_ LPBYTE pbAtr,_Inout_opt_ LPDWORD pcbAtrLen)
LONG WINAPI winscard.SCardStatusW(_In_ SCARDHANDLE hCard,_Out_ LPTSTR szReaderName,_Inout_opt_ LPDWORD pcchReaderLen,_Out_opt_ LPDWORD pdwState,_Out_opt_ LPDWORD pdwProtocol,_Out_ LPBYTE pbAtr,_Inout_opt_ LPDWORD pcbAtrLen)
LONG WINAPI winscard.SCardStatusA(_In_ SCARDHANDLE hCard,_Out_ LPTSTR szReaderName,_Inout_opt_ LPDWORD pcchReaderLen,_Out_opt_ LPDWORD pdwState,_Out_opt_ LPDWORD pdwProtocol,_Out_ LPBYTE pbAtr,_Inout_opt_ LPDWORD pcbAtrLen)
SECURITY_STATUS None sspicli.SspiValidateAuthIdentity(_In_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE AuthData)
DWORD None None.NPGetPropertyText(_In_ DWORD iButton,_In_ DWORD nPropSel,_In_ LPTSTR lpName,_Out_ LPTSTR lpButtonName,_Inout_ DWORD nButtonNameLen,_In_ DWORD nType)
NTSTATUS None None.CloseSamUser(_In_ PVOID UserHandle)
BOOLEAN None sspicli.SspiIsAuthIdentityEncrypted(_In_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE EncryptedAuthData)
HRESULT None uxtheme.GetThemeSysInt(_In_ HTHEME hTheme,_In_ int iIntID,_In_ int *piValue)
void WINAPI winscard.SCardReleaseStartedEvent(void None None)
HRESULT None mf.MFCreateMuxSink(_In_ GUID guidOutputSubType,_In_ IMFAttributes *pOutputAttributes,_In_ IMFByteStream *pOutputByteStream,_Out_ IMFMediaSink **ppMuxSink)
HRESULT None uxtheme.GetThemeBackgroundExtent(_In_ HTHEME hTheme,_In_ HDC hdc,_In_ int iPartId,_In_ int iStateId,_In_ LPCRECT pContentRect,_Out_ LPRECT pExtentRect)
SECURITY_STATUS None credui.SspiUpdateCredentials(_In_ HANDLE ContextHandle,_In_ GUID *CredType,_In_ ULONG FlatCredUIContextLength,_In_ PUCHAR FlatCredUIContext)
LONG WINAPI winscard.SCardReconnect(_In_ SCARDHANDLE hCard,_In_ DWORD dwShareMode,_In_ DWORD dwPreferredProtocols,_In_ DWORD dwInitialization,_Out_opt_ LPDWORD pdwActiveProtocol)
int None None.WlxLoggedOutSAS(_In_ PVOID pWlxContext,_In_ DWORD dwSasType,_Out_ PLUID pAuthenticationId,_Inout_ PSID pLogonSid,_Out_ PDWORD pdwOptions,_Out_ PHANDLE phToken,_Out_ PWLX_MPR_NOTIFY_INFO pNprNotifyInfo,_Out_ PVOID *pProfile)
BOOL None None.WlxDisconnect(void None None)
STDAPI None mf.MFCreateDeviceSourceActivate(_In_ IMFAttributes *pAttributes,_Out_ IMFActivate **ppActivate)
LONG None scarddlg.GetOpenCardName(_In_ LPOPENCARDNAME pDlgStruc)
LONG None scarddlg.GetOpenCardNameW(_In_ LPOPENCARDNAME pDlgStruc)
LONG None scarddlg.GetOpenCardNameA(_In_ LPOPENCARDNAME pDlgStruc)
SECURITY_STATUS SEC_ENTRY secur32.SetContextAttributes(_In_ PCtxtHandle phContext,_In_ ULONG ulAttribute,_In_ void *pBuffer,_In_ ULONG cbBuffer)
SECURITY_STATUS SEC_ENTRY secur32.SetContextAttributesW(_In_ PCtxtHandle phContext,_In_ ULONG ulAttribute,_In_ void *pBuffer,_In_ ULONG cbBuffer)
SECURITY_STATUS SEC_ENTRY secur32.SetContextAttributesA(_In_ PCtxtHandle phContext,_In_ ULONG ulAttribute,_In_ void *pBuffer,_In_ ULONG cbBuffer)
typedef None None.HRESULT(CALLBACK *PDXVAHDSW_GetVideoProcessorDeviceCaps None)
VOID None None.WlxDisplayLockedNotice(_In_ PVOID pWlxContext)
HRESULT None mfreadwrite.MFCreateSourceReaderFromMediaSource(_In_ IMFMediaSource *pMediaSource,_In_ IMFAttributes *pAttributes,_Out_ IMFSourceReader **ppSourceReader)
void None uxtheme.SetThemeAppProperties(DWORD dwFlags None)
HRESULT None mfplat.MFWrapMediaType(IMFMediaType *pOrig None,REFGUID MajorType None,REFGUID SubType None,IMFMediaType **ppWrap None)
SECURITY_STATUS None sspicli.SspiPrepareForCredRead(_In_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE AuthIdentity,_In_ PCWSTR pszTargetName,_Out_ PULONG pCredmanCredentialType,_Out_ PCWSTR *ppszCredmanTargetName)
HRESULT None mf.MFCreatePMPMediaSession(DWORD dwCreationFlags None,IMFAttributes *pConfiguration None,IMFMediaSession **ppMediaSession None,IMFActivate **ppEnablerActivate None)
HRESULT None mfplat.MFRegisterLocalSchemeHandler(_In_ PCWSTR szScheme,_In_ IMFActivate *pActivate)
STDAPI None mfplat.MFCreateContentProtectionDevice(_In_ REFGUID ProtectionSystemId,_Out_ IMFContentProtectionDevice **ContentProtectionDevice)
LONG WINAPI winscard.SCardLocateCards(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR mszCards,_Inout_ LPSCARD_READERSTATE rgReaderStates,_In_ DWORD cReaders)
LONG WINAPI winscard.SCardLocateCardsW(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR mszCards,_Inout_ LPSCARD_READERSTATE rgReaderStates,_In_ DWORD cReaders)
LONG WINAPI winscard.SCardLocateCardsA(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR mszCards,_Inout_ LPSCARD_READERSTATE rgReaderStates,_In_ DWORD cReaders)
HRESULT None mf.MFCreateTopology(IMFTopology **ppTopo None)
NTSTATUS NTAPI advapi32.LsaGetAppliedCAPIDs(_In_opt_ PLSA_UNICODE_STRING SystemName,_Out_ PSID **CAPIDs,_Out_ PULONG CAPIDCount)
SECURITY_STATUS SEC_Entry secur32.ImportSecurityContext(_In_ PSECURITY_STRING *pszPackage,_In_ PSecBuffer pPackedContext,_In_opt_ HANDLE pToken,_Out_ PCtxtHandle phContext)
SECURITY_STATUS SEC_Entry secur32.ImportSecurityContextW(_In_ PSECURITY_STRING *pszPackage,_In_ PSecBuffer pPackedContext,_In_opt_ HANDLE pToken,_Out_ PCtxtHandle phContext)
SECURITY_STATUS SEC_Entry secur32.ImportSecurityContextA(_In_ PSECURITY_STRING *pszPackage,_In_ PSecBuffer pPackedContext,_In_opt_ HANDLE pToken,_Out_ PCtxtHandle phContext)
NTSTATUS NTAPI None.OpenTokenByLogonId(_In_ PLUID LogonId,_Out_ HANDLE *RetTokenHandle)
HRESULT None mfplat.MFAverageTimePerFrameToFrameRate(_In_ UINT64 unAverageTimePerFrame,_Out_ UINT32 *punNumerator,_Out_ UINT32 *punDenominator)
HTHEME None uxtheme.OpenThemeDataEx(_In_ HWND hwnd,_In_ LPCWSTR pszClassIdList,_In_ DWORD dwFlags)
LONG WINAPI winscard.SCardGetAttrib(_In_ SCARDHANDLE hCard,_In_ DWORD dwAttrId,_Out_ LPBYTE pbAttr,_Inout_ LPDWORD pcbAttrLen)
SECURITY_STATUS None sspicli.SspiExcludePackage(_In_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE AuthIdentity,_In_ PCWSTR pszPackageName,_Out_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE *ppNewAuthIdentity)
LONG WINAPI winscard.SCardListCards(_In_ SCARDCONTEXT hContext,_In_opt_ LPCBYTE pbAtr,_In_ LPCGUID rgguidInterfaces,_In_ DWORD cguidInterfaceCount,_Out_ LPTSTR mszCards,_Inout_ LPDWORD pcchCards)
LONG WINAPI winscard.SCardListCardsW(_In_ SCARDCONTEXT hContext,_In_opt_ LPCBYTE pbAtr,_In_ LPCGUID rgguidInterfaces,_In_ DWORD cguidInterfaceCount,_Out_ LPTSTR mszCards,_Inout_ LPDWORD pcchCards)
LONG WINAPI winscard.SCardListCardsA(_In_ SCARDCONTEXT hContext,_In_opt_ LPCBYTE pbAtr,_In_ LPCGUID rgguidInterfaces,_In_ DWORD cguidInterfaceCount,_Out_ LPTSTR mszCards,_Inout_ LPDWORD pcchCards)
BOOL None None.ILIsChild(_In_ PCUIDLIST_RELATIVE pidl)
SEC_ENTRY None None.GetCredentialKey(_In_ PVOID ProviderHandle,_In_opt_ PLUID LogonId,_In_opt_ PVOID AuthBuffer,_In_ ULONG AuthBufferSize,_In_ ULONG Reserved,_Out_ PUNICODE_STRING CredentialKey)
BOOL None None.WlxGetStatusMessage(_In_ PVOID pWlxContext,_Out_ DWORD *pdwOptions,_Out_ PWSTR pMessage,_In_ DWORD dwBufferSize)
STDAPI None mfplat.MFCreateContentDecryptorContext(_In_ REFGUID guidMediaProtectionSystemId,_In_opt_ IMFDXGIDeviceManager *pD3DManager,_In_ IMFContentProtectionDevice *pContentProtectionDevice,_Out_ IMFContentDecryptorContext **ppContentDecryptorContext)
HRESULT None mfplat.MFBeginCreateFile(_In_ MF_FILE_ACCESSMODE AccessMode,_In_ MF_FILE_OPENMODE OpenMode,_In_ MF_FILE_FLAGS fFlags,_In_ LPCWSTR pwszFilePath,_In_ IMFAsyncCallback *pCallback,_In_ IUnknown *pState,_Out_ IUnknown **ppCancelCookie)
LONG WINAPI winscard.SCardGetStatusChange(_In_ SCARDCONTEXT hContext,_In_ DWORD dwTimeout,_Inout_ LPSCARD_READERSTATE rgReaderStates,_In_ DWORD cReaders)
LONG WINAPI winscard.SCardGetStatusChangeW(_In_ SCARDCONTEXT hContext,_In_ DWORD dwTimeout,_Inout_ LPSCARD_READERSTATE rgReaderStates,_In_ DWORD cReaders)
LONG WINAPI winscard.SCardGetStatusChangeA(_In_ SCARDCONTEXT hContext,_In_ DWORD dwTimeout,_Inout_ LPSCARD_READERSTATE rgReaderStates,_In_ DWORD cReaders)
BOOL WINAPI crypt32.CryptMsgEncodeAndSignCTL(_In_ DWORD dwMsgEncodingType,_In_ PCTL_INFO pCtlInfo,_In_ PCMSG_SIGNED_ENCODE_INFO pSignInfo,_In_ DWORD dwFlags,_Out_ BYTE *pbEncoded,_Inout_ DWORD *pcbEncoded)
BOOL None None.WlxQueryTsLogonCredentials(_Out_ PWLX_CLIENT_CREDENTIALS_INFO_V2_0 pCred)
HRESULT None mfplat.MFBeginUnregisterWorkQueueWithMMCSS(_In_ DWORD dwWorkQueueId,_In_ IMFAsyncCallback *pDoneCallback,_In_ IUnknown *pDoneState)
HRESULT None mfplat.MFPutWaitingWorkItem(_In_ HANDLE hEvent,_In_ LONG Priority,_In_ IMFAsyncResult *pResult,_Out_ MFWORKITEM_KEY *pKey)
HRESULT THEMEAPI uxtheme.GetThemeAnimationTransform(_In_ HTHEME hTheme,_In_ int iStoryboardId,_In_ int iTargetId,_In_ DWORD dwTransformIndex,_Out_ TA_TRANSFORM *pTransform,_In_ DWORD cbSize,_Out_ DWORD pcbSizeOut)
HRESULT None mfplat.CreatePropertyStore(_Out_ IPropertyStore **ppStore)
NTSTATUS None secur32.LsaFreeReturnBuffer(_In_ PVOID Buffer)
BOOL None advapi32.LogonUserEx(_In_ LPTSTR lpszUsername,_In_opt_ LPTSTR lpszDomain,_In_opt_ LPTSTR lpszPassword,_In_ DWORD dwLogonType,_In_ DWORD dwLogonProvider,_Out_opt_ PHANDLE phToken,_Out_opt_ PSID *ppLogonSid,_Out_opt_ PVOID *ppProfileBuffer,_Out_opt_ LPDWORD pdwProfileLength,_Out_opt_ PQUOTA_LIMITS pQuotaLimits)
BOOL None advapi32.LogonUserExW(_In_ LPTSTR lpszUsername,_In_opt_ LPTSTR lpszDomain,_In_opt_ LPTSTR lpszPassword,_In_ DWORD dwLogonType,_In_ DWORD dwLogonProvider,_Out_opt_ PHANDLE phToken,_Out_opt_ PSID *ppLogonSid,_Out_opt_ PVOID *ppProfileBuffer,_Out_opt_ LPDWORD pdwProfileLength,_Out_opt_ PQUOTA_LIMITS pQuotaLimits)
BOOL None advapi32.LogonUserExA(_In_ LPTSTR lpszUsername,_In_opt_ LPTSTR lpszDomain,_In_opt_ LPTSTR lpszPassword,_In_ DWORD dwLogonType,_In_ DWORD dwLogonProvider,_Out_opt_ PHANDLE phToken,_Out_opt_ PSID *ppLogonSid,_Out_opt_ PVOID *ppProfileBuffer,_Out_opt_ LPDWORD pdwProfileLength,_Out_opt_ PQUOTA_LIMITS pQuotaLimits)
HRESULT None mf.MFCreateASFContentInfo(IMFASFContentInfo **ppIContentInfo None)
typedef None None.HRESULT(CALLBACK *PDXVAHDSW_GetVideoProcessBltStatePrivate None)
HRESULT None mf.MFCreateTranscodeSinkActivate(_Out_ **ppActivate None)
SECURITY_STATUS SEC_Entry secur32.ApplyControlToken(_In_ PCtxtHandle phContext,_In_ PSecBufferDesc pInput)
void None schannel.SslFreeCertificate(_In_ PX509Certificate pCertificate)
int None None.WlxDialogBoxParam(_In_ HANDLE hWlx,_In_ HANDLE hInst,_In_ LPWSTR lpszTemplate,_In_ HWND hwndOwner,_In_ DLGPROC dlgprc,_In_ LPARAM dwInitParam)
HRESULT None uxtheme.GetThemeFont(_In_ HTHEME hTheme,_In_ HDC hdc,_In_ int iPartId,_In_ int iStateId,_In_ int iPropId,_Out_ LOGFONTW *pFont)
BOOL None uxtheme.IsThemePartDefined(_In_ HTHEME hTheme,_In_ int iPartId,_In_ int iStateId)
BOOL WINAPI advapi32.CredProtect(_In_ BOOL fAsSelf,_In_ LPTSTR pszCredentials,_In_ DWORD cchCredentials,_Out_ LPTSTR pszProtectedCredentials,_Inout_ DWORD *pcchMaxChars,_Out_ CRED_PROTECTION_TYPE *ProtectionType)
BOOL WINAPI advapi32.CredProtectW(_In_ BOOL fAsSelf,_In_ LPTSTR pszCredentials,_In_ DWORD cchCredentials,_Out_ LPTSTR pszProtectedCredentials,_Inout_ DWORD *pcchMaxChars,_Out_ CRED_PROTECTION_TYPE *ProtectionType)
BOOL WINAPI advapi32.CredProtectA(_In_ BOOL fAsSelf,_In_ LPTSTR pszCredentials,_In_ DWORD cchCredentials,_Out_ LPTSTR pszProtectedCredentials,_Inout_ DWORD *pcchMaxChars,_Out_ CRED_PROTECTION_TYPE *ProtectionType)
BOOL None None.WlxGetOption(_In_ HANDLE hWlx,_In_ DWORD Option,_Out_ ULONG_PTR *Value)
HRESULT None mf.MFCreateASFMediaSinkActivate(LPCWSTR pwszFileName None,IMFASFContentInfo *pContentInfo None,IMFActivate **ppIActivate None)
HRESULT None mf.MFCreateASFProfileFromPresentationDescriptor(IMFPresentationDescriptor *pIPD None,IMFASFProfile **ppIProfile None)
HRESULT None mf.MFCreateTopologyNode(_In_ MF_TOPOLOGY_TYPE NodeType,_Out_ IMFTopologyNode **ppNode)
HRESULT WINAPI None.MFCreateSensorGroup(LPCWSTR SensorGroupSymbolicLink None,_Out_ IMFSensorGroup **ppSensorGroup)
BOOL None advapi32.CredReadDomainCredentials(_In_ PCREDENTIAL_TARGET_INFORMATION TargetInfo,_In_ DWORD Flags,_Out_ DWORD *Count,_Out_ PCREDENTIAL **Credentials)
BOOL None advapi32.CredReadDomainCredentialsW(_In_ PCREDENTIAL_TARGET_INFORMATION TargetInfo,_In_ DWORD Flags,_Out_ DWORD *Count,_Out_ PCREDENTIAL **Credentials)
BOOL None advapi32.CredReadDomainCredentialsA(_In_ PCREDENTIAL_TARGET_INFORMATION TargetInfo,_In_ DWORD Flags,_Out_ DWORD *Count,_Out_ PCREDENTIAL **Credentials)
HRESULT None mfplat.MFCreateVideoMediaTypeFromVideoInfoHeader2(const KS_VIDEOINFOHEADER2 *pVideoInfoHeader,DWORD cbVideoInfoHeader None,QWORD AdditionalVideoFlags None,const GUID *pSubtype,IMFVideoMediaType **ppIVideoMediaType None)
const DXVA2_Fixed32 None.DXVA2_Fixed32OpaqueAlpha(void None None)
BOOL None uxtheme.UpdatePanningFeedback(_In_ HWND hwnd,_In_ LONG lTotalOverpanOffsetX,_In_ LONG lTotalOverpanOffsetY,_In_ BOOL fInInertia)
HRESULT None mfplat.MFCreateEventQueue(IMFMediaEventQueue **ppMediaEventQueue None)
NTSTATUS None None.SpQueryCredentialsAttributes(_In_ LSA_SEC_HANDLE CredentialHandle,_In_ ULONG CredentialAttribute,_Out_ PVOID Buffer)
SECURITY_STATUS SEC_Entry secur32.AcceptSecurityContext(_In_opt_ PCredHandle phCredential,_Inout_ PCtxtHandle phContext,_In_opt_ PSecBufferDesc pInput,_In_ ULONG fContextReq,_In_ ULONG TargetDataRep,_Inout_opt_ PCtxtHandle phNewContext,_Inout_opt_ PSecBufferDesc pOutput,_Out_ PULONG pfContextAttr,_Out_opt_ PTimeStamp ptsTimeStamp)
VOID None sspicli.SspiLocalFree(_In_ PVOID DataBuffer)
HRESULT None mf.MFCreateVideoRenderer(_In_ REFIID riidRenderer,_Out_ void **ppVideoRenderer)
HRESULT None mf.MFCreateSequencerSource(IUnknown *pReserved None,IMFSequencerSource **ppSequencerSource None)
SECURITY_STATUS SEC_Entry secur32.InitializeSecurityContext(_In_opt_ PCredHandle phCredential,_In_opt_ PCtxtHandle phContext,_In_opt_ SEC_CHAR *pszTargetName,_In_ ULONG fContextReq,_In_ ULONG Reserved1,_In_ ULONG TargetDataRep,_In_opt_ PSecBufferDesc pInput,_In_ ULONG Reserved2,_Inout_opt_ PCtxtHandle phNewContext,_Inout_opt_ PSecBufferDesc pOutput,_Out_ PULONG pfContextAttr,_Out_opt_ PTimeStamp ptsExpiry)
SECURITY_STATUS SEC_Entry secur32.InitializeSecurityContextW(_In_opt_ PCredHandle phCredential,_In_opt_ PCtxtHandle phContext,_In_opt_ SEC_CHAR *pszTargetName,_In_ ULONG fContextReq,_In_ ULONG Reserved1,_In_ ULONG TargetDataRep,_In_opt_ PSecBufferDesc pInput,_In_ ULONG Reserved2,_Inout_opt_ PCtxtHandle phNewContext,_Inout_opt_ PSecBufferDesc pOutput,_Out_ PULONG pfContextAttr,_Out_opt_ PTimeStamp ptsExpiry)
SECURITY_STATUS SEC_Entry secur32.InitializeSecurityContextA(_In_opt_ PCredHandle phCredential,_In_opt_ PCtxtHandle phContext,_In_opt_ SEC_CHAR *pszTargetName,_In_ ULONG fContextReq,_In_ ULONG Reserved1,_In_ ULONG TargetDataRep,_In_opt_ PSecBufferDesc pInput,_In_ ULONG Reserved2,_Inout_opt_ PCtxtHandle phNewContext,_Inout_opt_ PSecBufferDesc pOutput,_Out_ PULONG pfContextAttr,_Out_opt_ PTimeStamp ptsExpiry)
NTSTATUS None None.DeleteCredential(_In_ PLUID LogonId,_In_ ULONG AuthenticationPackage,_In_ PLSA_STRING PrimaryKeyValue)
typedef None None.void(MI_CALL *MI_OperationCallback_StreamedParameter None)
NTSTATUS None None.UpdateCredentials(_In_ PSECPKG_PRIMARY_CRED PrimaryCredentials,_In_opt_ PSECPKG_SUPPLEMENTAL_CRED_ARRAY Credentials)
HRESULT None uxtheme.EndBufferedAnimation(HANIMATIONBUFFER hbpAnimation None,BOOL fUpdateTarget None)
HRESULT None mf.MFGetSupportedSchemes(_Out_ PROPVARIANT *pPropVarSchemeArray)
STDAPI None mfplat.MFCreateTrackedSample(_Out_ IMFTrackedSample **ppMFSample)
int None None.WlxDialogBoxIndirectParam(_In_ HANDLE hWlx,_In_ HANDLE hInst,_In_ LPCDLGTEMPLATE hDialogTemplate,_In_ HWND hwndOwner,_In_ DLGPROC dlgprc,_In_ LPARAM dwInitParam)
LONG WINAPI winscard.SCardGetProviderId(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCard,_Out_ LPGUID pguidProviderId)
LONG WINAPI winscard.SCardGetProviderIdW(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCard,_Out_ LPGUID pguidProviderId)
LONG WINAPI winscard.SCardGetProviderIdA(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCard,_Out_ LPGUID pguidProviderId)
HRESULT None mf.MFCreateWMVEncoderActivate(IMFMediaType *pMediaType None,IPropertyStore *pEncodingConfigurationProperties None,IMFActivate **ppActivate None)
HRESULT None mf.MFEnumDeviceSources(_In_ IMFAttributes *pAttributes,_Out_ IMFActivate ***pppSourceActivate,_Out_ UINT32 *pcSourceActivate)
LONG WINAPI winscard.SCardBeginTransaction(_In_ SCARDHANDLE hCard)
LONG WINAPI None.SCardListReadersWithDeviceInstanceId(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szDeviceInstanceId,_Out_opt_ LPTSTR mszReaders,_Inout_ LPDWORD pcchReaders)
HRESULT None evr.MFCreateVideoMixerAndPresenter(_In_ IUnknown *pMixerOwner,_In_ IUnknown *pPresenterOwner,_In_ REFIID riidMixer,_Out_ void **ppvVideoMixer,_In_ REFIID riidPresenter,_Out_ void **ppvVideoPresenter)
PVOID None None.AllocateLsaHeap(_In_ ULONG Length)
HRESULT None mf.MFCreateASFStreamingMediaSinkActivate(IMFActivate *pByteStreamActivate None,IMFASFContentInfo *pContentInfo None,IMFActivate **ppIActivate None)
HRESULT None mfplat.MFCreateDXGIDeviceManager(_Out_ UINT *pResetToken,_Out_ IMFDXGIDeviceManager **ppDXVAManager)
NTSTATUS WINAPI None.Msv1_0SubAuthenticationRoutineEx(_In_ NETLOGON_LOGON_INFO_CLASS LogonLevel,_In_ PVOID LogonInformation,_In_ ULONG Flags,_In_ PUSER_ALL_INFORMATION UserAll,_In_ SAM_HANDLE UserHandle,_Inout_ PMSV1_0_VALIDATION_INFO ValidationInfo,_Out_ PULONG ActionsPerformed)
HRESULT None mf.MFTranscodeGetAudioOutputAvailableTypes(_In_ REFGUID guidSubType,_In_ DWORD dwMFTFlags,_In_ IMFAttributes *pCodecConfig,_Out_ IMFCollection **ppAvailableTypes)
HRESULT None uxtheme.GetCurrentThemeName(_Out_ LPWSTR pszThemeFileName,_In_ int dwMaxNameChars,_Out_ LPWSTR pszColorBuff,_In_ int cchMaxColorChars,_Out_ LPWSTR pszSizeBuff,_In_ int cchMaxSizeChars)
DWORD WINAPI credui.CredUIPromptForWindowsCredentials(_In_opt_ PCREDUI_INFO pUiInfo,_In_ DWORD dwAuthError,_Inout_ ULONG *pulAuthPackage,_In_opt_ LPCVOID pvInAuthBuffer,_In_ ULONG ulInAuthBufferSize,_Out_ LPVOID *ppvOutAuthBuffer,_Out_ ULONG *pulOutAuthBufferSize,_Inout_opt_ BOOL *pfSave,_In_ DWORD dwFlags)
DWORD WINAPI credui.CredUIPromptForWindowsCredentialsW(_In_opt_ PCREDUI_INFO pUiInfo,_In_ DWORD dwAuthError,_Inout_ ULONG *pulAuthPackage,_In_opt_ LPCVOID pvInAuthBuffer,_In_ ULONG ulInAuthBufferSize,_Out_ LPVOID *ppvOutAuthBuffer,_Out_ ULONG *pulOutAuthBufferSize,_Inout_opt_ BOOL *pfSave,_In_ DWORD dwFlags)
DWORD WINAPI credui.CredUIPromptForWindowsCredentialsA(_In_opt_ PCREDUI_INFO pUiInfo,_In_ DWORD dwAuthError,_Inout_ ULONG *pulAuthPackage,_In_opt_ LPCVOID pvInAuthBuffer,_In_ ULONG ulInAuthBufferSize,_Out_ LPVOID *ppvOutAuthBuffer,_Out_ ULONG *pulOutAuthBufferSize,_Inout_opt_ BOOL *pfSave,_In_ DWORD dwFlags)
HRESULT None uxtheme.BufferedPaintUnInit(void None None)
DWORD None None.NPFMXGetPermCaps(_In_ LPTSTR lpDriveName)
HRESULT None mf.MFCreateWMAEncoderActivate(IMFMediaType *pMediaType None,IPropertyStore *pEncodingConfigurationProperties None,IMFActivate **ppActivate None)
HRESULT None mf.MFCreateAC3MediaSink(_In_ IMFByteStream *pTargetByteStream,_In_ IMFMediaType *pAudioMediaType,_Out_ IMFMediaSink **ppMediaSink)
NTSTATUS NTAPI None.ExpandAuthDataForDomain(_In_ PUCHAR UserAuthData,_In_ ULONG UserAuthDataSize,_In_ PVOID Reserved,_Out_ PUCHAR *ExpandedAuthData,_Out_ PULONG ExpandedAuthDataSize)
BOOLEAN None None.DeleteSharedMemory(_In_ PVOID SharedMem)
DWORD None None.NPCloseEnum(_In_ HANDLE hEnum)
HRESULT None mfplat.MFLockSharedWorkQueue(_In_ PCWSTR wszClass,_In_ LONG BasePriority,_Inout_ DWORD *pdwTaskId,_Out_ DWORD *pID)
LONG WINAPI winscard.SCardEstablishContext(_In_ DWORD dwScope,_In_ LPCVOID pvReserved1,_In_ LPCVOID pvReserved2,_Out_ LPSCARDCONTEXT phContext)
MI_INLINE MI_Result None.MI_DestinationOptions_GetCertCACheck(_In_ MI_DestinationOptions *options,_Out_ MI_Boolean *check)
HRESULT None mfplat.MFCreateWICBitmapBuffer(_In_ REFIID riid,_In_ IUnknown *punkSurface,_Out_ IMFMediaBuffer **ppBuffer)
PVOID None None.AllocateSharedMemory(_In_ PVOID SharedMem,_In_ ULONG Size)
NTSTATUS None None.SpSetExtendedInformation(_In_ SECPKG_EXTENDED_INFORMATION_CLASS Class,_In_ PSECPKG_EXTENDED_INFORMATION Info)
PVOID None None.AllocateHeap(_In_ ULONG Length)
void None None.Unpack2UINT32AsUINT64([in] UINT64 unPacked,[out] UINT32 *punHigh,[out] UINT32 *punLow)
SECURITY_STATUS None credui.SspiPromptForCredentials(_In_ PCTSTR pszTargetName,_In_ PCREDUI_INFOW pUiInfo,_In_ DWORD dwAuthError,_In_ PCTSTR pszPackage,_In_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE pInputAuthIdentity,_Out_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE *ppAuthIdentity,_Inout_opt_ BOOL *pfSave,_In_ DWORD dwFlags)
SECURITY_STATUS None credui.SspiPromptForCredentialsW(_In_ PCTSTR pszTargetName,_In_ PCREDUI_INFOW pUiInfo,_In_ DWORD dwAuthError,_In_ PCTSTR pszPackage,_In_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE pInputAuthIdentity,_Out_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE *ppAuthIdentity,_Inout_opt_ BOOL *pfSave,_In_ DWORD dwFlags)
SECURITY_STATUS None credui.SspiPromptForCredentialsA(_In_ PCTSTR pszTargetName,_In_ PCREDUI_INFOW pUiInfo,_In_ DWORD dwAuthError,_In_ PCTSTR pszPackage,_In_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE pInputAuthIdentity,_Out_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE *ppAuthIdentity,_Inout_opt_ BOOL *pfSave,_In_ DWORD dwFlags)
void None None.unpackratio([in] UINT64 unPacked,[out] UINT32 *pnNumerator,[out] UINT32 *punDenominator)
BOOL None None.WlxActivateUserShell(_In_ PVOID pWlxContext,_In_ PWSTR pszDesktopName,_In_ PWSTR pszMprLogonScript,_In_ PVOID pEnvironment)
WINAPI None mf.MFCreateWAVEMediaSink(_In_ IMFByteStream *pTargetByteStream,_In_ IMFMediaType *pAudioMediaType,_Out_ IMFMediaSink **ppMediaSink)
DWORD None None.NPGetResourceInformation(_In_ LPNETRESOURCE lpNetResource,_Out_ LPVOID lpBuffer,_Inout_ LPDWORD lpcbBuffer,_Out_ LPTSTR *lplpSystem)
NTSTATUS NTAPI secur32.LsaEnumerateLogonSessions(_Out_ PULONG LogonSessionCount,_Out_ PLUID *LogonSessionList)
int None None.WlxSwitchDesktopToWinlogon(_In_ HANDLE hWlx)
void None mfplat.MFHeapFree(_In_ void *pv)
HRESULT None mfplat.MFTUnregisterLocalByCLSID(_In_ CLSID clsidMFT)
SECURITY_STATUS SEC_ENTRY secur32.SaslIdentifyPackage(_In_ PSecBufferDesc pInput,_Out_ PSecPkgInfo *PackageInfo)
SECURITY_STATUS SEC_ENTRY secur32.SaslIdentifyPackageW(_In_ PSecBufferDesc pInput,_Out_ PSecPkgInfo *PackageInfo)
SECURITY_STATUS SEC_ENTRY secur32.SaslIdentifyPackageA(_In_ PSecBufferDesc pInput,_Out_ PSecPkgInfo *PackageInfo)
LONG WINAPI None.SCardGetReaderIcon(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReaderName,_Out_ LPBYTE pbIcon,_Inout_ LPDWORD pcbIcon)
HRESULT None mf.MFCreateASFMediaSink(IMFByteStream *pIByteStream None,IMFMediaSink **ppIMediaSink None)
NTSTATUS None None.DeleteLogonSession(_In_ PLUID LogonId)
HRESULT None mf.MFCreateDeviceSource(_In_ IMFAttributes *pAttributes,_Out_ IMFMediaSource **ppSource)
LONG WINAPI winscard.SCardLocateCardsByATR(_In_ SCARDCONTEXT hContext,_In_ LPSCARD_ATRMASK rgAtrMasks,_In_ DWORD cAtrs,_Inout_ LPSCARD_READERSTATE rgReaderStates,_In_ DWORD cReaders)
LONG WINAPI winscard.SCardLocateCardsByATRW(_In_ SCARDCONTEXT hContext,_In_ LPSCARD_ATRMASK rgAtrMasks,_In_ DWORD cAtrs,_Inout_ LPSCARD_READERSTATE rgReaderStates,_In_ DWORD cReaders)
LONG WINAPI winscard.SCardLocateCardsByATRA(_In_ SCARDCONTEXT hContext,_In_ LPSCARD_ATRMASK rgAtrMasks,_In_ DWORD cAtrs,_Inout_ LPSCARD_READERSTATE rgReaderStates,_In_ DWORD cReaders)
HRESULT None uxtheme.GetThemeEnumValue(_In_ HTHEME hTheme,_In_ int iPartId,_In_ int iStateId,_In_ int iPropId,_Out_ int *piVal)
HRESULT None mf.MFCreateTopoLoader(IMFTopoLoader **ppObj None)
NTSTATUS NTAPI advapi32.LsaQueryDomainInformationPolicy(_In_ LSA_HANDLE PolicyHandle,_In_ POLICY_DOMAIN_INFORMATION_CLASS InformationClass,_Out_ PVOID *Buffer)
BOOL None advapi32.LogonUser(_In_ LPTSTR lpszUsername,_In_opt_ LPTSTR lpszDomain,_In_opt_ LPTSTR lpszPassword,_In_ DWORD dwLogonType,_In_ DWORD dwLogonProvider,_Out_ PHANDLE phToken)
BOOL None advapi32.LogonUserW(_In_ LPTSTR lpszUsername,_In_opt_ LPTSTR lpszDomain,_In_opt_ LPTSTR lpszPassword,_In_ DWORD dwLogonType,_In_ DWORD dwLogonProvider,_Out_ PHANDLE phToken)
BOOL None advapi32.LogonUserA(_In_ LPTSTR lpszUsername,_In_opt_ LPTSTR lpszDomain,_In_opt_ LPTSTR lpszPassword,_In_ DWORD dwLogonType,_In_ DWORD dwLogonProvider,_Out_ PHANDLE phToken)
HRESULT None mfplat.MFCreateAsyncResult(IUnknown *punkObject None,IMFAsyncCallback *pCallback None,IUnknown *punkState None,IMFAsyncResult **ppAsyncResult None)
VOID None advapi32.CredFree(_In_ PVOID Buffer)
SECURITY_STATUS SEC_Entry secur32.ExportSecurityContext(_In_ PCtxtHandle phContext,_In_ Ulong fFlags,_Out_ PSecBuffer pPackedContext,_Out_opt_ HANDLE *pToken)
HRESULT None mfplat.MFEndUnregisterWorkQueueWithMMCSS(_In_ IMFAsyncResult *pResult)
NTSTATUS WINAPI certpoleng.PstValidate(_In_opt_ PUNICODE_STRING pTargetName,_In_ BOOL bIsClient,_In_opt_ CERT_USAGE_MATCH *pRequestedIssuancePolicy,_In_opt_ HCERTSTORE *phAdditionalCertStore,_In_ PCCERT_CONTEXT pCert,_Out_opt_ GUID *pProvGUID)
DWORD APIENTRY None.AddConnectNotify(_Inout_ LPNOTIFYINFO lpNotifyInfo,_In_ LPNOTIFYADD lpAddInfo)
HRESULT None mfplat.MFAllocateWorkQueue(_Out_ DWORD *pdwWorkQueue)
HRESULT None None.MFGetAttribute2UINT32asUINT64(_In_ IMFAttributes *pAttributes,_In_ REFGUID guidKey,_Out_ UINT32 *punHigh32,_Out_ UINT32 *punLow32)
BOOL WINAPI advapi32.CredFindBestCredential(_In_ LPCTSTR TargetName,_In_ DWORD Type,_In_ DWORD Flags,_Out_ PCREDENTIAL *Credential)
BOOL WINAPI advapi32.CredFindBestCredentialW(_In_ LPCTSTR TargetName,_In_ DWORD Type,_In_ DWORD Flags,_Out_ PCREDENTIAL *Credential)
BOOL WINAPI advapi32.CredFindBestCredentialA(_In_ LPCTSTR TargetName,_In_ DWORD Type,_In_ DWORD Flags,_Out_ PCREDENTIAL *Credential)
NTSTATUS None None.CallPackage(_In_ PUNICODE_STRING AuthenticationPackage,_In_ PVOID ProtocolSubmitBuffer,_In_ ULONG SubmitBufferLength,_Out_ PVOID *ProtocolReturnBuffer,_Out_ PULONG ReturnBufferLength,_Out_ PNTSTATUS ProtocolStatus)
NTSTATUS None None.DuplicateHandle(_In_ HANDLE SourceHandle,_Out_ PHANDLE DestinationHandle)
HRESULT None mfplat.MFLockDXGIDeviceManager(_Out_ UINT *pResetToken,_Out_ IMFDXGIDeviceManager **ppManager)
LONG WINAPI winscard.SCardTransmit(_In_ SCARDHANDLE hCard,_In_ LPCSCARD_IO_REQUEST pioSendPci,_In_ LPCBYTE pbSendBuffer,_In_ DWORD cbSendLength,_Inout_opt_ LPSCARD_IO_REQUEST pioRecvPci,_Out_ LPBYTE pbRecvBuffer,_Inout_ LPDWORD pcbRecvLength)
HRESULT None mf.MFCreateSequencerSegmentOffset(_In_ MFSequencerElementId dwId,_In_ MFTIME hnsOffset,_Out_ PROPVARIANT *pvarSegmentOffset)
LONG WINAPI winscard.SCardAudit(_In_ SCARDCONTEXT hContext,_In_ DWORD dwEvent)
HRESULT None mfplat.MFGetContentProtectionSystemCLSID(_In_ REFGUID guidProtectionSystemID,_Out_ CLSID *pclsid)
NTSTATUS None None.SpMakeSignature(_In_ LSA_SEC_HANDLE ContextHandle,_In_ ULONG QualityOfProtection,_Inout_ PSecBufferDesc MessageBuffers,_In_ ULONG MessageSequenceNumber)
HRESULT None mfplat.MFInitMediaTypeFromWaveFormatEx(IMFMediaType *pMFType None,const WAVEFORMATEX *pWaveFormat,UINT32 cbBufSize None)
typedef None None.HRESULT(CALLBACK *PDXVAHDSW_GetVideoProcessorInputFormats None)
HRESULT None mfplat.MFCreateDXGISurfaceBuffer(_In_ REFIID riid,_In_ IUnknown *punkSurface,_In_ UINT uSubresourceIndex,_In_ BOOL fBottomUpWhenLinear,_Out_ IMFMediaBuffer **ppBuffer)
HRESULT None mf.MFGetTopoNodeCurrentType(IMFTopologyNode *pNode None,DWORD dwStreamIndex None,BOOL fOutput None,_Out_ IMFMediaType **ppType)
HRESULT None mf.MFCreateAudioRenderer(_In_ IMFAttributes *pAudioAttributes,_Out_ IMFMediaSink **ppSink)
HRESULT None mfplat.MFUnwrapMediaType(IMFMediaType *pWrap None,IMFMediaType **ppOrig None)
int None None.WlxLoggedOnSAS(_In_ PVOID pWlxContext,_In_ DWORD dwSasType,_In_ PVOID pReserved)
UINT64 None None.MFGetAttributeUINT64(_In_ IMFAttributes *pAttributes,_In_ REFGUID guidKey,_In_ UINT64 unDefault)
BOOL WINAPI crypt32.CryptEnumOIDFunction(_In_ DWORD dwEncodingType,_In_ LPCSTR pszFuncName,_In_ LPCSTR pszOID,_In_ DWORD dwFlags,_In_ void *pvArg,_In_ PFN_CRYPT_ENUM_OID_FUNC pfnEnumOIDFunc)
DWORD STDAPI mfplat.MFMapDXGIFormatToDX9Format(_In_ DXGI_FORMAT dx11)
typedef None None.HRESULT(CALLBACK *PDXVAHDSW_VideoProcessBltHD None)
HRESULT WINAPI mf.MFCreateFMPEG4MediaSink(_In_ IMFByteStream *pIByteStream,_In_ IMFMediaType *pVideoMediaType,_In_ IMFMediaType *pAudioMediaType,_Out_ IMFMediaSink **ppIMediaSink)
SECURITY_STATUS None credui.SspiUnmarshalCredUIContext(_In_ PUCHAR MarshaledCredUIContext,_In_ ULONG MarshaledCredUIContextLength,_Out_ PSEC_WINNT_CREDUI_CONTEXT *CredUIContext)
MI_INLINE MI_Result None.MI_Class_Delete(_Inout_ MI_Class *self)
HRESULT None mf.MFCreateMediaSession(IMFAttributes *pConfiguration None,IMFMediaSession **ppMS None)
STDAPI None mf.MFGetSystemId(_Out_ IMFSystemId **ppId)
NTSTATUS WINAPI certpoleng.PstMapCertificate(_In_ PCCERT_CONTEXT pCert,_Out_ LSA_TOKEN_INFORMATION_TYPE *pTokenInformationType,_Out_ PVOID *ppTokenInformation)
DWORD APIENTRY None.NPLogonNotify(_In_ PLUID lpLogon,_In_ LPCWSTR lpAuthentInfoType,_In_ LPVOID lpAuthentInfo,_In_ LPCWSTR lpPreviousAuthentInfoType,_In_ LPVOID lpPreviousAuthentInfo,_In_ LPWSTR lpStationName,_In_ LPVOID StationHandle,_Out_ LPWSTR *lpLogonScript)
HRESULT None mfplat.MFAllocateSerialWorkQueue(_In_ DWORD dwWorkQueue,_Out_ DWORD *pdwWorkQueue)
HRESULT None uxtheme.GetThemeBackgroundContentRect(_In_ HTHEME hTheme,_In_ HDC hdc,_In_ int iPartId,_In_ int iStateId,_In_ LPCRECT pBoundingRect,_Out_ LPRECT pContentRect)
HRESULT None mfplat.MFTRegister(_In_ CLSID clsidMFT,_In_ GUID guidCategory,_In_ LPWSTR pszName,_In_ UINT32 Flags,_In_ UINT32 cInputTypes,_In_ MFT_REGISTER_TYPE_INFO *pInputTypes,_In_ UINT32 cOutputTypes,_In_ MFT_REGISTER_TYPE_INFO *pOutputTypes,_In_ IMFAttributes *pAttributes)
HANIMATIONBUFFER None uxtheme.BeginBufferedAnimation(HWND hwnd None,HDC hdcTarget None,const RECT *rcTarget,BP_BUFFERFORMAT dwFormat None,_In_ BP_PAINTPARAMS *pPaintParams,_In_ BP_ANIMATIONPARAMS *pAnimationParams,_Out_ HDC *phdcFrom,_Out_ HDC *phdcTo)
HRESULT None mfplat.MFCreateAMMediaTypeFromMFMediaType(IMFMediaType *pMFType None,GUID guidFormatBlockType None,AM_MEDIA_TYPE **ppAMType None)
HRESULT None mf.MFCreateStandardQualityManager(_Out_ IMFQualityManager **ppQualityManager)
HRESULT None mf.MFCreatePMPServer(_In_ DWORD dwCreationFlags,_Out_ IMFPMPServer **ppPMPServer)
HRESULT None mfreadwrite.MFCreateSourceReaderFromURL(_In_ LPCWSTR pwszURL,_In_ IMFAttributes *pAttributes,_Out_ IMFSourceReader **ppSourceReader)
LONG WINAPI winscard.SCardForgetReader(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReaderName)
LONG WINAPI winscard.SCardForgetReaderW(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReaderName)
LONG WINAPI winscard.SCardForgetReaderA(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReaderName)
STDAPI None mf.MFCreateTranscodeTopology(_In_ IMFMediaSource *pSrc,_In_ LPCWSTR pwszOutputFilePath,_In_ IMFTranscodeProfile *pProfile,_Out_ IMFTopology **ppTranscodeTopo)
UINT64 None None.PackSize([in] UINT32 unWidth,[in] UINT32 unHeight)
DWORD None None.NPGetResourceParent(_In_ LPNETRESOURCE lpNetResource,_Out_ LPVOID lpBuffer,_Inout_ LPDWORD lpcbBuffer)
HRESULT None mfplat.MFGetStrideForBitmapInfoHeader(_In_ DWORD format,_In_ DWORD dwWidth,_Out_ LONG *pStride)
HRESULT None mfplat.MFUnlockDXGIDeviceManager(void None None)
HRESULT None mfplat.MFInitMediaTypeFromAMMediaType(IMFMediaType *pMFType None,const AM_MEDIA_TYPE *pAMType)
HRESULT None mfplat.MFSerializeAttributesToStream(IMFAttributes *pAttr None,DWORD dwOptions None,IStream *pStm None)
STDAPI None mf.MFCreateTranscodeTopology(_In_ IMFMediaSource *pSrc,_In_ LPCWSTR pwszOutputFilePath,_In_ IMFTranscodeProfile *pProfile,_Out_ IMFTopology **ppTranscodeTopo)
DWORD None None.NPAddConnection3(_In_ HWND hwndOwner,_In_ LPNETRESOURCE lpNetResource,_In_ LPTSTR lpPassword,_In_ LPTSTR lpUserName,_In_ DWORD dwFlags)
HRESULT None mfplat.MFCreateSystemTimeSource(IMFPresentationTimeSource **ppSystemTimeSource None)
HRESULT None mf.MFCreateVideoRendererActivate(_In_ HWND hwndVideo,_Out_ IMFActivate **ppActivate)
NTSTATUS None secur32.LsaLookupAuthenticationPackage(_In_ HANDLE LsaHandle,_In_ PLSA_STRING PackageName,_Out_ PULONG AuthenticationPackage)
HRESULT None mfplat.MFCreateVideoMediaTypeFromBitMapInfoHeader(const BITMAPINFOHEADER *pbmihBitMapInfoHeader,DWORD dwPixelAspectRatioX None,DWORD dwPixelAspectRatioY None,MFVideoInterlaceMode InterlaceMode None,QWORD VideoFlags None,QWORD qwFramesPerSecondNumerator None,QWORD qwFramesPerSecondDenominator None,DWORD dwMaxBitRate None,IMFVideoMediaType **ppIVideoMediaType None)
HRESULT None mfplat.MFShutdown(void None None)
typedef None None.HRESULT(CALLBACK *PDXVAHDSW_CreateVideoProcessor None)
HRESULT None uxtheme.GetThemeRect(_In_ HTHEME hTheme,_In_ int iPartId,_In_ int iStateId,_In_ int iPropId,_Out_ LPRECT pRect)
HRESULT None mf.MFCreateMP3MediaSink(_In_ IMFByteStream *pTargetByteStream,_Out_ IMFMediaSink **ppMediaSink)
HRESULT None None.SetInputMediaType([in] DWORD dwStreamIndex,[in] IMFMediaType *pInputMediaType,[in] IMFAttributes *pEncodingParameters)
HRESULT None None.GetTopologyID([out] TOPOID *pID)
typedef None None.HRESULT(CALLBACK *PDXVAHDSW_DestroyDevice None)
void None None.WlxUseCtrlAltDel(_In_ HANDLE hWlx)
HRESULT None mfplat.MFCreateVideoMediaTypeFromVideoInfoHeader(const KS_VIDEOINFOHEADER *pVideoInfoHeader,DWORD cbVideoInfoHeader None,DWORD dwPixelAspectRatioX None,DWORD dwPixelAspectRatioY None,MFVideoInterlaceMode InterlaceMode None,QWORD VideoFlags None,const GUID *pSubtype,IMFVideoMediaType **ppIVideoMediaType None)
typedef None None.void(*MFPERIODICCALLBACK None None)
UINT64 None None.PackRatio([in] UINT32 nNumerator,[in] UINT32 unDenominator)
typedef None None.HRESULT(CALLBACK *PDXVAHDSW_ProposeVideoPrivateFormat None)
SECURITY_STATUS None sspicli.SspiEncodeStringsAsAuthIdentity(_In_ PCWSTR pszUserName,_In_ PCWSTR pszDomainName,_In_ PCWSTR pszPackedCredentialsString,_Out_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE *ppAuthIdentity)
HRESULT None mfplat.MFGetWorkQueueMMCSSPriority(_In_ DWORD dwWorkQueueId,_Out_ LONG *lPriority)
NTSTATUS WINAPI certpoleng.PstGetTrustAnchors(_In_ PUNICODE_STRING pTargetName,_In_ DWORD cCriteria,_In_opt_ PCCERT_SELECT_CRITERIA rgpCriteria,_Out_ PSecPkgContext_IssuerListInfoEx *ppTrustedIssuers)
NTSTATUS None None.SpCompleteAuthToken(_In_ LSA_SEC_HANDLE ContextHandle,_In_ PSecBufferDesc InputBuffer)
HRESULT None mfplat.MFAllocateWorkQueueEx(_In_ MFASYNC_WORKQUEUE_TYPE WorkQueueType,_Out_ DWORD *pdwWorkQueue)
typedef None None.HRESULT(CALLBACK *PDXVAHDSW_GetVideoProcessorOutputFormats None)
HRESULT None None.MFGetAttributeSize(_In_ IMFAttributes *pAttributes,_In_ REFGUID guidKey,_Out_ UINT32 *punWidth,_Out_ UINT32 *punHeight)
HRESULT None mfplat.MFGetWorkQueueMMCSSClass(_In_ DWORD dwWorkQueueId,_Out_ LPWSTR pwszClass,_Inout_ DWORD *pcchClass)
MI_INLINE void None.MI_DestinationOptions_Delete(_Inout_ MI_DestinationOptions *options)
NTSTATUS None None.SpAcceptLsaModeContext(_In_ LSA_SEC_HANDLE CredentialHandle,_In_ LSA_SEC_HANDLE ContextHandle,_In_ PSecBufferDesc InputBuffer,_In_ ULONG ContextRequirements,_In_ ULONG TargetDataRep,_Out_ PLSA_SEC_HANDLE NewContextHandle,_Out_ PSecBufferDesc OutputBuffer,_Out_ PULONG ContextAttributes,_Out_ PTimeStamp ExpirationTime,_Out_ PBOOLEAN MappedContext,_Out_ PSecBuffer ContextData)
HRESULT None mfplat.MFCalculateImageSize(_In_ REFGUID guidSubtype,_In_ UINT32 unWidth,_In_ UINT32 unHeight,_Out_ UINT32 *pcbImageSize)
HRESULT None mfplat.MFLockPlatform(void None None)
HRESULT None None.SetCurrentFolderFlags([in] DWORD dwMask,[in] DWORD dwFlags)
typedef None None.HRESULT(CALLBACK *PDXVAHDSW_DestroyVideoProcessor None)
HRESULT None mfcaptureengine.MFCreateCaptureEngine(_Out_ IMFCaptureEngine **ppCaptureEngine)
HRESULT None mfplat.MFCreateAlignedMemoryBuffer(DWORD cbMaxLength None,DWORD fAlignmentFlags None,IMFMediaBuffer **ppBuffer None)
STDAPI None evr.MFCreateVideoSampleAllocator(_In_ REFIID riid,_Out_ void** ppSampleAllocator)
HRESULT None None.MFGetAttributeRatio(_In_ IMFAttributes *pAttributes,_In_ REFGUID guidKey,_Out_ UINT32 *pnNumerator,_Out_ UINT32 *punDenominator)
SECURITY_STATUS WINAPI ncrypt.NCryptSignHash(_In_ NCRYPT_KEY_HANDLE hKey,_In_opt_ VOID *pPaddingInfo,_In_ PBYTE pbHashValue,_In_ DWORD cbHashValue,_Out_ PBYTE pbSignature,_In_ DWORD cbSignature,_Out_ DWORD *pcbResult,_In_ DWORD dwFlags)
MI_INLINE MI_Result None.MI_OperationOptions_GetOptionCount(_In_ MI_OperationOptions *options,_Out_ MI_Uint32 *count)
HRESULT None None.MFSetAttribute2UINT32asUINT64(_In_ IMFAttributes *pAttributes,_In_ REFGUID guidKey,_In_ UINT32 unHigh32,_In_ UINT32 unLow32)
SECURITY_STATUS SEC_Entry secur32.DecryptMessage(_In_ PCtxtHandle phContext,_Inout_ PSecBufferDesc pMessage,_In_ ULONG MessageSeqNo,_Out_ PULONG pfQOP)
HRESULT None mf.MFGetService(IUnknown *punkObject None,REFGUID guidService None,REFIID riid None,LPVOID *ppvObject None)
HRESULT None mfplat.MFBeginRegisterWorkQueueWithMMCSS(_In_ DWORD dwWorkQueueId,_In_ LPCWSTR wszClass,_In_ DWORD dwTaskId,_In_ IMFAsyncCallback *pDoneCallback,_In_ IUnknown *pDoneState)
STDAPI None mfplat.MFIsContentProtectionDeviceSupported(_In_ REFGUID ProtectionSystemId,_Out_ BOOL *isSupported)
void None None.FreeReturnBuffer(_In_ PVOID Base)
HRESULT None mfplat.MFPutWorkItemEx(_In_ DWORD dwQueue,_In_ IMFAsyncResult *pResult)
BOOL WINAPI advapi32.CredUnprotect(_In_ BOOL fAsSelf,_In_ LPTSTR pszProtectedCredentials,_In_ DWORD cchCredentials,_Out_ LPTSTR pszCredentials,_Inout_ DWORD *pcchMaxChars)
BOOL WINAPI advapi32.CredUnprotectW(_In_ BOOL fAsSelf,_In_ LPTSTR pszProtectedCredentials,_In_ DWORD cchCredentials,_Out_ LPTSTR pszCredentials,_Inout_ DWORD *pcchMaxChars)
BOOL WINAPI advapi32.CredUnprotectA(_In_ BOOL fAsSelf,_In_ LPTSTR pszProtectedCredentials,_In_ DWORD cchCredentials,_Out_ LPTSTR pszCredentials,_Inout_ DWORD *pcchMaxChars)
HRESULT None mfplat.MFConvertColorInfoFromDXVA(_Inout_ MFVIDEOFORMAT *pToFormat,_In_ DWORD dwFromDXVA)
BOOL None uxtheme.IsThemeActive(void None None)
HRESULT None mfplat.MFScheduleWorkItemEx(_In_ IMFAsyncResult *pResult,_In_ INT64 Timeout,_Out_ MFWORKITEM_KEY *pKey)
HRESULT None mf.MFShutdownObject(IUnknown *pUnk None)
BOOL None None.WlxIsLogoffOk(_In_ PVOID pWlxContext)
SECURITY_STATUS SEC_ENTRY secur32.SaslSetContextOption(_In_ PCtxtHandle ContextHandle,_In_ ULONG Option,_In_ PVOID Value,_In_ ULONG Size)
SEC_ENTRY None None.DeleteConnectedIdentity(_In_ PVOID ProviderHandle,_In_opt_ HANDLE UserToken,_In_ PSID UserSid,_In_ PWSTR IdentityUserName)
UINT32 None None.MFGetAttributeUINT32(_In_ IMFAttributes *pAttributes,_In_ REFGUID guidKey,_In_ UINT32 unDefault)
HRESULT None None.GetMediaType([out] IMFMediaType **ppIMediaType)
STDAPI None mf.MFCreateProtectedEnvironmentAccess(_Out_ IMFProtectedEnvironmentAccess **ppAccess)
void None None.UnpackSize([in] UINT64 unPacked,[out] UINT32 *punWidth,[out] UINT32 *punHeight)
SECURITY_STATUS SEC_Entry secur32.ImportSecurityContext(_In_ PSECURITY_STRING *pszPackage,_In_ PSecBuffer pPackedContext,_In_opt_ HANDLE pToken,_Out_ PCtxtHandle phContext)
SECURITY_STATUS SEC_Entry secur32.ImportSecurityContextW(_In_ PSECURITY_STRING *pszPackage,_In_ PSecBuffer pPackedContext,_In_opt_ HANDLE pToken,_Out_ PCtxtHandle phContext)
SECURITY_STATUS SEC_Entry secur32.ImportSecurityContextA(_In_ PSECURITY_STRING *pszPackage,_In_ PSecBuffer pPackedContext,_In_opt_ HANDLE pToken,_Out_ PCtxtHandle phContext)
HRESULT None mfplay.MFPCreateMediaPlayer(_In_ LPCWSTR pwszURL,_In_ BOOL fStartPlayback,_In_ MFP_CREATION_OPTIONS creationOptions,_In_ IMFPMediaPlayerCallback *pCallback,_In_ HWND hWnd,_Out_ IMFPMediaPlayer **ppMediaPlayer)
HRESULT None mf.MFCreateTranscodeProfile(_Out_ IMFTranscodeProfile **ppTranscodeProfile)
DWORD STDAPI mfplat.MFMapDXGIFormatToDX9Format(_In_ DXGI_FORMAT dx11)
typedef None None.HRESULT(CALLBACK *PDXVAHDSW_SetVideoProcessStreamState None)
HRESULT None mfplat.MFDeserializePresentationDescriptor(DWORD cbData None,BYTE *pbData None,IMFPresentationDescriptor **ppPD None)
HRESULT None mfplat.MFCreateMediaBufferWrapper(_In_ IMFMediaBuffer *pBuffer,_In_ DWORD cbOffset,_In_ DWORD dwLength,_Out_ IMFMediaBuffer **ppBuffer)
BOOL WINAPI None.NeedCurrentDirectoryForExePath(_In_ LPCTSTR ExeName)
BOOL WINAPI None.NeedCurrentDirectoryForExePathW(_In_ LPCTSTR ExeName)
BOOL WINAPI None.NeedCurrentDirectoryForExePathA(_In_ LPCTSTR ExeName)
HRESULT None uxtheme.GetThemeBitmap(_In_ HTHEME hTheme,_In_ int iPartId,_In_ int iStateId,_In_ int iPropId,_In_ ULONG dwFlags,_Out_ HBITMAP *phBitmap)
HRESULT None mf.MFCreatePresentationDescriptorFromASFProfile(IMFASFProfile *pIProfile None,IMFPresentationDescriptor **ppIPD None)
HRESULT None mfplat.MFGetTimerPeriodicity(_Out_ DWORD *Periodicity)
HRESULT None None.SetOPMWindow([in] HWND hwnd)
HRESULT None mfplat.MFInvokeCallback(IMFAsyncResult *pAsyncResult None)
BOOL None advapi32.CredWriteDomainCredentials(_In_ PCREDENTIAL_TARGET_INFORMATION TargetInfo,_In_ PCREDENTIAL Credential,_In_ DWORD Flags)
BOOL None advapi32.CredWriteDomainCredentialsW(_In_ PCREDENTIAL_TARGET_INFORMATION TargetInfo,_In_ PCREDENTIAL Credential,_In_ DWORD Flags)
BOOL None advapi32.CredWriteDomainCredentialsA(_In_ PCREDENTIAL_TARGET_INFORMATION TargetInfo,_In_ PCREDENTIAL Credential,_In_ DWORD Flags)
HRESULT None mfplat.MFCreateTempFile(MF_FILE_ACCESSMODE AccessMode None,MF_FILE_OPENMODE OpenMode None,MF_FILE_FLAGS fFlags None,IMFByteStream **ppIByteStream None)
typedef None None.HRESULT(CALLBACK *PDXVAHDSW_GetVideoProcessorCaps None)
HRESULT None mfplat.MFCreateMFByteStreamWrapper(_In_ IMFByteStream *pStream,_In_ IMFByteStream **ppStreamWrapper)
typedef None None.HRESULT(CALLBACK *PDXVAHDSW_CreateDevice None)
HRESULT None mf.MFCreateCredentialCache(IMFNetCredentialCache **ppCache None)
HRESULT None mfplat.MFCreatePresentationDescriptor(DWORD cStreamDescriptors None,IMFStreamDescriptor **apStreamDescriptors None,IMFPresentationDescriptor **ppPresentationDescriptor None)
NTSTATUS None None.LsaApLogonUserEx2(_In_ PLSA_CLIENT_REQUEST ClientRequest,_In_ SECURITY_LOGON_TYPE LogonType,_In_ PVOID ProtocolSubmitBuffer,_In_ PVOID ClientBufferBase,_In_ ULONG SubmitBufferSize,_Out_ PVOID *ProfileBuffer,_Out_ PULONG ProfileBufferSize,_Out_ PLUID LogonId,_Out_ PNTSTATUS SubStatus,_Out_ PLSA_TOKEN_INFORMATION_TYPE TokenInformationType,_Out_ PVOID *TokenInformation,_Out_ PUNICODE_STRING *AccountName,_Out_ PUNICODE_STRING *AuthenticatingAuthority,_Out_ PUNICODE_STRING *MachineName,_Out_ PSECPKG_PRIMARY_CRED PrimaryCredentials,_Out_ PSECPKG_SUPPLEMENTAL_CRED_ARRAY *SupplementalCredentials)
HRESULT None mfplat.MFCreateMFByteStreamOnStream(_In_ IStream *pStream,_Out_ IMFByteStream **ppByteStream)
typedef None None.void(MI_CALL *MI_OperationCallback_Instance None)
HRESULT None None.IsCameraInUse(_In_z_ LPCWSTR symbolicName,_Out_ BOOL* pfInUse)
double None None.MFGetAttributeDouble(_In_ IMFAttributes *pAttributes,_In_ REFGUID guidKey,_In_ double fDefault)
LONG WINAPI winscard.SCardConnect(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReader,_In_ DWORD dwShareMode,_In_ DWORD dwPreferredProtocols,_Out_ LPSCARDHANDLE phCard,_Out_ LPDWORD pdwActiveProtocol)
LONG WINAPI winscard.SCardConnectW(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReader,_In_ DWORD dwShareMode,_In_ DWORD dwPreferredProtocols,_Out_ LPSCARDHANDLE phCard,_Out_ LPDWORD pdwActiveProtocol)
LONG WINAPI winscard.SCardConnectA(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReader,_In_ DWORD dwShareMode,_In_ DWORD dwPreferredProtocols,_Out_ LPSCARDHANDLE phCard,_Out_ LPDWORD pdwActiveProtocol)
HRESULT None mf.MFCreateWMAEncoderActivate(IMFMediaType *pMediaType None,IPropertyStore *pEncodingConfigurationProperties None,IMFActivate **ppActivate None)
MI_INLINE MI_Result None.MI_PropertySet_Delete(_Inout_ MI_PropertySet *self)
HRESULT __stdcall None.MFCreateMP3ByteStreamPlugin(_In_ REFIID riid,_Out_ LPVOID *ppvHandler)
HRESULT None mfplat.MFUnlockPlatform(void None None)
HRESULT None mfplat.MFCreateURLFromPath(_In_opt_ LPCWSTR pwszFilePath,_Out_ LPWSTR *ppwszFileURL)
UINT64 None None.Pack2UINT32AsUINT64(_In_ UINT32 unHigh,_In_ UINT32 unLow)
HRESULT None mf.MFCreateAudioRendererActivate(_Out_ IMFActivate **ppActivate)
typedef None None.HRESULT(CALLBACK *PDXVAHDSW_GetVideoProcessorFilterRange None)
HRESULT None evr.MFCreateVideoPresenter(_In_ IUnknown *pOwner,_In_ REFIID riidDevice,_In_ REFIID riid,_Out_ void **ppvVideoPresenter)
VOID None advapi32.CredFree(_In_ PVOID Buffer)
HRESULT None mfplat.MFCreateFile(MF_FILE_ACCESSMODE AccessMode None,MF_FILE_OPENMODE OpenMode None,MF_FILE_FLAGS fFlags None,LPCWSTR pwszFileURL None,IMFByteStream **ppIByteStream None)
HRESULT None mfplat.MFDeserializeAttributesFromStream(IMFAttributes *pAttr None,DWORD dwOptions None,IStream *pStm None)
HRESULT None None.SetContentProtectionManager([in] IMFContentProtectionManager *pCPM)
HRESULT None mfplat.MFGetPluginControl(_Out_ IMFPluginControl **ppPluginControl)
typedef None None.HRESULT(CALLBACK *PDXVAHDSW_Plugin None)
MI_INLINE MI_Result None.MI_Instance_Delete(_Inout_ MI_Instance *self)
HRESULT None mfplat.MFInitVideoFormat_RGB(_In_ MFVIDEOFORMAT *pVideoFormat,_In_ DWORD dwWidth,_In_ DWORD dwHeight,_In_ DWORD D3Dfmt)
HRESULT None dxva2.DXVA2CreateDirect3DDeviceManager9(_Out_ UINT *pResetToken,_Out_ IDirect3DDeviceManager9 **ppDXVAManager)
HRESULT None mf.MFGetSupportedMimeTypes(_Out_ PROPVARIANT *pPropVarMimeTypeArray)
HRESULT None None.GetSeekable([out] IMFMediaTimeRange **ppPlayed)
HRESULT None None.MFSetAttributeSize(_In_ IMFAttributes *pAttributes,_In_ REFGUID guidKey,_In_ UINT32 unWidth,_In_ UINT32 unHeight)
HRESULT None mf.MFCreateADTSMediaSink(_In_ IMFByteStream *pTargetByteStream,_In_ IMFMediaType *pAudioMediaType,_Out_ IMFMediaSink **ppMediaSink)
HRESULT None mfplat.MFCancelCreateFile(_In_ IUnknown *pCancelCookie)
STDAPI None mfplat.MFCheckContentProtectionDevice(_In_ REFGUID ProtectionSystemId)
HRESULT None dxva2.DXVA2CreateVideoService(IDirect3DDevice9 *pDD None,REFIID riid None,void **ppService None)
HRESULT None mfplat.MFSerializePresentationDescriptor(IMFPresentationDescriptor *pPD None,DWORD *pcbData None,BYTE **ppbData None)
BOOL None mfplat.MFCompareFullToPartialMediaType(IMFMediaType *pMFTypeFull None,IMFMediaType *pMFTypePartial None)
HRESULT None mfplat.MFCreateMediaEvent(MediaEventType met None,REFGUID guidExtendedType None,HRESULT hrStatus None,const PROPVARIANT *pvValue,IMFMediaEvent **ppEvent None)
HRESULT None mfplat.MFCreateAttributes(_Out_ IMFAttributes **ppMFAttributes,_In_ UINT32 cInitialSize)
HRESULT None mfplat.MFTUnregisterLocal(_In_ IClassFactory *pClassFactory)
HRESULT None mfplat.MFRemovePeriodicCallback(_In_ DWORD dwKey)
HRESULT None mfplat.MFRegisterPlatformWithMMCSS(_In_ PCWSTR wszClass,_Inout_ DWORD *pdwTaskId,_In_ LONG lPriority)
SECURITY_STATUS WINAPI ncrypt.NCryptTranslateHandle(_Out_opt_ NCRYPT_PROV_HANDLE *phProvider,_Out_ NCRYPT_KEY_HANDLE *phKey,_In_ HCRYPTPROV hLegacyProv,_In_opt_ HCRYPTKEY hLegacyKey,_In_opt_ DWORD dwLegacyKeySpec,_In_ DWORD dwFlags)
HRESULT None mfplat.MFValidateMediaTypeSize(_In_ GUID FormatType,_In_ UINT8 *pBlock,_In_ UINT32 cbSize)
HRESULT WINAPI mfplat.MFCreatePropertiesFromMediaType(_In_ IMFMediaType *pMediaType,_In_ REFIID riid,_Out_ void **ppv)
HRESULT None None.AddStream([in] DWORD dwSourceStreamIndex,[in] IMFMediaType *pMediaType,[in] IMFAttributes *pAttributes,[out] DWORD *pdwSinkStreamIndex)
HRESULT None mfplat.MFAddPeriodicCallback(_In_ MFPERIODICCALLBACK Callback,_In_ IUnknown *pContext,_Out_ DWORD *pdwKey)
HRESULT None None.LoggedOnUser([in] BOOL *pfLoggedOnUser)
HRESULT None None.GetRequiredProtections([out] DWORD *pFrameProtectionFlags)
HRESULT None mfreadwrite.MFCreateSourceReaderFromByteStream(_In_ IMFByteStream *pByteStream,_In_ IMFAttributes *pAttributes,_Out_ IMFSourceReader **ppSourceReader)
HRESULT None mf.MFCreateTranscodeTopologyFromByteStream(_In_ IMFMediaSource *pSrc,_In_ IMFByteStream *pOutputStream,_In_ IMFTranscodeProfile *pProfile,_Out_ IMFTopology **ppTranscodeTopo)
typedef None None.HRESULT(CALLBACK *PDXVAHDSW_SetVideoProcessBltState None)
HRESULT None mf.MFCreateRemoteDesktopPlugin(IMFRemoteDesktopPlugin **ppPlugin None)
MI_INLINE MI_Result None.MI_DestinationOptions_GetCertRevocationCheck(_In_ MI_DestinationOptions *options,_Out_ MI_Boolean *check)
typedef None None.void(MI_CALL *MI_Module_Unload None)
HRESULT None mfplat.MFCreateMediaTypeFromRepresentation(_In_ GUID guidRepresentation,_In_ LPVOID pvRepresentation,_Out_ IMFMediaType **ppIMediaType)
HRESULT WINAPI mf.MFCreateAVIMediaSink(_In_ IMFByteStream *pIByteStream,_In_ IMFMediaType *pVideoMediaType,_In_opt_ IMFMediaType *pAudioMediaType,_Out_ IMFMediaSink **ppIMediaSink)
HRESULT None mfplat.MFCreateTransformActivate(_Out_ IMFActivate **ppActivate)
HRESULT None None.SetDuration([in] double duration)
HRESULT None mf.MFCreateASFStreamingMediaSink(IMFByteStream *pIByteStream None,IMFMediaSink **ppIMediaSink None)
typedef None None.void(MI_CALL *MI_OperationCallback_WriteProgress None)
typedef None None.void(MI_CALL *MI_OperationCallback_Indication None)
HRESULT None None.SetOutputFileName([in] LPCWSTR fileName)
HRESULT None mfplat.MFCreateMemoryBuffer(DWORD cbMaxLength None,IMFMediaBuffer **ppBuffer None)
HRESULT None mf.MFCreate3GPMediaSink(_In_ IMFByteStream *pIByteStream,_In_ IMFMediaType *pVideoMediaType,_In_ IMFMediaType *pAudioMediaType,_Out_ IMFMediaSink **ppIMediaSink)
MI_INLINE MI_Result None.MI_DestinationOptions_SetDestinationPort(_Inout_ MI_DestinationOptions *options,MI_Uint32 port None)
HRESULT None mf.MFCreateSimpleTypeHandler(_Out_ IMFMediaTypeHandler **ppHandler)
HRESULT None mf.MFCreateSampleCopierMFT(_Out_ IMFTransform **ppCopierMFT)
HRESULT None mfplat.MFCreateCollection(_Out_ IMFCollection **ppIMFCollection)
HRESULT None None.GetAllVolumes([in] UINT32 dwCount,[out] float *pfVolumes)
MI_INLINE MI_Result None.MI_Application_NewOperationOptions(_In_ MI_Application *application,MI_Boolean mustUnderstand None,_Out_ MI_OperationOptions *options)
HRESULT None mfplat.MFCreateMediaType(IMFMediaType **ppMFType None)
HRESULT None None.GetStream([in] DWORD dwStreamIndex,[out] WORD *pwStreamNumber,[out] WORD *pwStreamFlags)
HRESULT None mfplat.MFCreate2DMediaBuffer(_In_ DWORD dwWidth,_In_ DWORD dwHeight,_In_ DWORD dwFourCC,_In_ BOOL fBottomUp,_Out_ IMFMediaBuffer **ppBuffer)
typedef None None.HRESULT(CALLBACK *PDXVAHDSW_GetVideoProcessStreamStatePrivate None)
HRESULT None None.SetStream([in] IMFASFStreamConfig *pIStream)
HRESULT None mfreadwrite.MFCreateSinkWriterFromURL(_In_ LPCWSTR pwszOutputURL,_In_ IMFByteStream *pByteStream,_In_ IMFAttributes *pAttributes,_Out_ IMFSinkWriter **ppSinkWriter)
HRESULT None None.SetPassword([in] BYTE *pbData,[in] DWORD cbData,[in] BOOL fDataIsEncrypted)
HRESULT None mf.MFCreateProxyLocator(_In_ LPCWSTR pszProtocol,_In_ IPropertyStore *pProxyConfig,_Out_ IMFNetProxyLocator **ppProxyLocator)
SECURITY_STATUS SEC_Entry secur32.CompleteAuthToken(_In_ PCtxtHandle phContext,_In_ PSecBufferDesc pToken)
LONG WINAPI winscard.SCardListInterfaces(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCard,_Out_ LPGUID pguidInterfaces,_Inout_ LPDWORD pcguidInterfaces)
LONG WINAPI winscard.SCardListInterfacesW(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCard,_Out_ LPGUID pguidInterfaces,_Inout_ LPDWORD pcguidInterfaces)
LONG WINAPI winscard.SCardListInterfacesA(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCard,_Out_ LPGUID pguidInterfaces,_Inout_ LPDWORD pcguidInterfaces)
HRESULT None None.RegisterMFTs([in] MFT_REGISTRATION_INFO *pMFTs,[in] DWORD cMFTs)
HRESULT None mfplat.MFTUnregister(_In_ CLSID clsidMFT)
HRESULT None None.TestDevice([in] HANDLE hDevice)
HRESULT None mfplat.MFFrameRateToAverageTimePerFrame(_In_ UINT32 unNumerator,_In_ UINT32 unDenominator,_Out_ UINT64 *punAverageTimePerFrame)
HRESULT None None.RemoveAllEffects([in] DWORD dwSourceStreamIndex)
MI_INLINE MI_Result None.MI_Application_Close(_Inout_ MI_Application *application)
HRESULT None mfplat.MFCalculateImageSize(_In_ REFGUID guidSubtype,_In_ UINT32 unWidth,_In_ UINT32 unHeight,_Out_ UINT32 *pcbImageSize)
HRESULT None None.SetCallback([in] IMFVideoSampleAllocatorNotify *pNotify)
typedef None None.void(MI_CALL *MI_ProviderFT_Subscribe None)
HRESULT None mfplat.MFEndCreateFile(_In_ IMFAsyncResult *pResult,_Out_ IMFByteStream **ppFile)
HRESULT None evr.MFCreateDXSurfaceBuffer(_In_ REFIID riid,_In_ IUnknown *punkSurface,_In_ BOOL fBottomUpWhenLinear,_Out_ IMFMediaBuffer **ppBuffer)
MI_INLINE MI_Result None.MI_Operation_Cancel(_Inout_ MI_Operation *operation,MI_CancellationReason reason None)
HRESULT None mfplat.MFCreateStreamDescriptor(DWORD dwStreamIdentifier None,DWORD cMediaTypes None,IMFMediaType **apMediaTypes None,IMFStreamDescriptor **ppDescriptor None)
MI_Result MI_CALL None.MI_Server_GetVersion(MI_Uint32 *version None)
MI_INLINE MI_Result None.MI_SubscriptionDeliveryOptions_GetExpirationTime(_Inout_ MI_SubscriptionDeliveryOptions *self,_Out_ MI_Datetime *value)
MI_INLINE MI_Result None.MI_OperationOptions_DisableChannel(_Inout_ MI_OperationOptions *options,_In_ MI_Uint32 channel)
HRESULT None None.GetStreamIndexFromFriendlyName([in] UINT32 uifriendlyName,[out] DWORD *pdwActualStreamIndex)
HRESULT None None.GetDeviceStreamCategory([in] DWORD dwSourceStreamIndex,[out] MF_CAPTURE_ENGINE_STREAM_CATEGORY *pStreamCategory)
HRESULT None None.SetSourceRectangle(RECT pSrcRect None)
HRESULT None None.DXVAHD_SetFrameFormat(IDXVAHD_VideoProcessor *pVP None,UINT stream None,DXVAHD_FRAME_FORMAT format None)
HRESULT None None.SetMixerSourceRect(IMFTransform *pMixer None,const MFVideoNormalizedRect nrcSource)
MI_INLINE MI_Result None.MI_Operation_GetSession(_In_ MI_Operation *operation,_Out_ MI_Session *session)
HRESULT None None.AddInputStreams([in] DWORD cStreams,[in] DWORD *adwStreamIDs)
MI_INLINE MI_Result None.MI_SubscriptionDeliveryOptions_SetDeliveryPortNumber(_Inout_ MI_SubscriptionDeliveryOptions *self,_In_ MI_Uint32 value)
HRESULT None mfplat.MFCreateVideoSampleAllocatorEx(_In_ REFIID riid,_Out_ void** ppSampleAllocator)
HRESULT None None.SetInputType([in] DWORD dwInputStreamID,[in] IMFMediaType *pType,[in] DWORD dwFlags)
HRESULT None None.GetPadding([out] double *pBefore,[out] double *pStart,[out] double *pAfter,[out] double *pEnd,[out] MF_TIMED_TEXT_UNIT_TYPE *pUnitType)
MI_INLINE MI_Result None.MI_OperationOptions_SetPromptUserMode(_Inout_ MI_OperationOptions *options,_In_ MI_CallbackMode mode)
virtual HRESULT mfplat.GetPrivateDataByteCount([out] DWORD *PrivateInputByteCount,[out] DWORD *PrivateOutputByteCount)
HRESULT None None.GetService([in] REFGUID guidService,[in] REFIID riid,[out] LPVOID *ppvObject)
HRESULT None None.GetStreamSelection([in] DWORD dwStreamIndex,[out] BOOL *pEnabled)
HRESULT None mf.MFCreateASFMultiplexer(IMFASFMultiplexer **ppIMultiplexer None)
HRESULT None mfplat.MFGetAttributesAsBlob(_In_ IMFAttributes *pAttributes,_Out_ UINT8 *pBuf,_In_ UINT cbBufSize)
HRESULT None msctf.GetReverseConversion([in] LANGID langid,[in] REFGUID guidProfile,[in] DWORD dwflag,[out] ITfReverseConversion **ppReverseConversion)
HRESULT None None.GetAttributes([out] IMFAttributes **pAttributes)
HRESULT None None.AddEncryptionAttributes(_In_ IMFSample* pSample,_In_ bool fIsEncrypted)
DXGI_FORMAT STDAPI mfplat.MFMapDX9FormatToDXGIFormat(_In_ DWORD dx9)
typedef None None.void(MI_CALL *MI_ProviderFT_Unsubscribe None)
HRESULT None None.CanPlayType([in] BOOL AudioOnly,[in] BSTR MimeType,[out] MF_MEDIA_ENGINE_CANPLAY *pAnswer)
HRESULT None None.GetSourceDuration(IMFMediaSource *pSource None,MFTIME *pDuration None)
HRESULT None None.SetSourceFromByteStream([in] IMFByteStream *pByteStream,[in] BSTR pURL)
typedef None None.void(MI_CALL *MI_MethodDecl_Invoke None)
MI_INLINE MI_Result None.MI_DestinationOptions_SetMaxEnvelopeSize(_Inout_ MI_DestinationOptions *options,MI_Uint32 sizeInKB None)
typedef None None.void(MI_CALL *MI_ProviderFT_Unload None)
HRESULT None None.InsertVideoEffect([in] IUnknown *pEffect,[in] BOOL fOptional)
HRESULT None None.SetInputType([in] DWORD dwInputStreamID,[in] IMFMediaType *pType,[in] DWORD dwFlags)
typedef None None.void(MI_CALL *MI_ProviderFT_DisableIndications None)
void None None.WlxUseCtrlAltDel(_In_ HANDLE hWlx)
MI_INLINE MI_Result None.MI_Context_RegisterCancel(_In_ MI_Context *context,_In_ MI_CancelCallback callback,_In_opt_ void *callbackData)
MI_INLINE MI_Result None.MI_DestinationOptions_GetMaxEnvelopeSize(_In_ MI_DestinationOptions *options,_Out_ MI_Uint32 *sizeInKB)
MI_INLINE MI_Result None.MI_PropertySet_Clear(_Inout_ MI_PropertySet *self)
HRESULT None None.EndRead([in] IMFAsyncResult *pResult,[out] ULONG *pcbRead)
MI_INLINE MI_Result None.MI_OperationOptions_GetTimeout(_In_ MI_OperationOptions *options,_Out_ MI_Interval *timeout)
HRESULT None None.GetMaxLength([out] DWORD *pcbMaxLength)
HRESULT None None.UpdateTopology([in None None,out] IMFTopology *pTopology)
MI_INLINE MI_Result None.MI_Application_NewDestinationOptions(_In_ MI_Application *application,_Out_ MI_DestinationOptions *options)
HRESULT None None.ProcessInput([in] DWORD dwInputStreamID,[in] IMFSample *pSample,[in] DWORD dwFlags)
HRESULT None softkbd.ShowKeysForKeyScanMode([in] KEYID *lpKeyID,[in] INT iKeyNum,[in] BOOL fHighL)
HRESULT None None.GetBufferCount([out] DWORD *pdwBufferCount)
HRESULT None msctf.OnMenuSelect([in] UINT wID)
LONGLONG WINAPI mfplat.MFllMulDiv(LONGLONG a None,LONGLONG b None,LONGLONG c None,LONGLONG d None)
MI_INLINE MI_Result None.MI_OperationOptions_EnableChannel(_Inout_ MI_OperationOptions *options,_In_ MI_Uint32 channel)
MI_INLINE MI_Result None.MI_SubscriptionDeliveryOptions_SetDeliveryRetryAttempts(_Inout_ MI_SubscriptionDeliveryOptions *self,_In_ MI_Uint32 value)
HRESULT None msctf.UnadviseMouseSink([in] DWORD dwCookie)
HRESULT None None.ProcessEvent([in] DWORD dwInputStreamID,[in] IMFMediaEvent *pEvent)
HRESULT None None.GetActivityReportByDeviceName(LPCWSTR symbolicName None,[out] IMFSensorActivityReport **sensorActivityReport)
MI_INLINE MI_Result None.MI_DestinationOptions_SetCertCACheck(_Inout_ MI_DestinationOptions *options,MI_Boolean check None)
HRESULT None None.GetOutputStatus([out] DWORD *pdwFlags)
MI_INLINE MI_Result None.MI_SubscriptionDeliveryOptions_Delete(_Inout_ MI_SubscriptionDeliveryOptions *self)
void None d2d1.GetColorContext([out None None,optional] ID2D1ColorContext **colorContext)
typedef None None.void(MI_CALL *MI_ProviderFT_GetInstance None)
MI_INLINE MI_Result None.MI_SubscriptionDeliveryOptions_GetDeliveryPortNumber(_In_ MI_SubscriptionDeliveryOptions *self,_Out_ MI_Uint32 *value)
HRESULT None None.GetProperties([out] MFCLOCK_PROPERTIES *pClockProperties)
HRESULT None None.Initialize([in] IMFCaptureEngineOnEventCallback *pEventCallback,[in None None,optional] IMFAttributes *pAttributes,[in None None,optional] IUnknown *pAudioSource,[in None None,optional] IUnknown *pVideoSource)
LONG WINAPI winscard.SCardAddReaderToGroup(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReaderName,_In_ LPCTSTR szGroupName)
LONG WINAPI winscard.SCardAddReaderToGroupW(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReaderName,_In_ LPCTSTR szGroupName)
LONG WINAPI winscard.SCardAddReaderToGroupA(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReaderName,_In_ LPCTSTR szGroupName)
MI_INLINE void None.MI_Session_TestConnection(_In_ MI_Session *session,MI_Uint32 flags None,_In_opt_ MI_OperationCallbacks *callbacks,_Out_ MI_Operation *operation)
MI_INLINE MI_Result mi.MI_OperationOptions_GetPromptUserRegularMode(_Inout_ MI_OperationOptions *options,_Out_ MI_CallbackMode *mode,_Out_ MI_Boolean *ackValue)
typedef None None.void(MI_CALL *MI_ProviderFT_EnableIndications None)
MI_INLINE MI_Result None.MI_SubscriptionDeliveryOptions_GetHeartbeatInterval(_In_ MI_SubscriptionDeliveryOptions *self,_Out_ MI_Interval *value)
typedef None None.void(MI_CALL *MI_CancelCallback None)
HRESULT None msctf.InitMenu([in] ITfMenu *pMenu)
HRESULT None None.UnlockAsyncMFT(IMFTransform *pMFT None)
MFTIME None mfplat.MFGetSystemTime(void None None)
typedef None None.void(MI_CALL *MI_OperationCallback_Class None)
HRESULT None None.DXVAHD_SetPlanarAlpha(IDXVAHD_VideoProcessor *pVP None,UINT stream None,BOOL bEnable None,float fAlpha None)
HRESULT None None.UnlockAsyncMFT(IMFTransform *pMFT None)
HRESULT None None.GetSourceDuration(IMFMediaSource *pSource None,MFTIME *pDuration None)
HRESULT None None.GetGUID([in] REFGUID guidKey,[out] GUID *pguidValue)
HRESULT None None.AddEncryptionAttributes(_In_ IMFSample* pSample,_In_ bool fIsEncrypted)
HRESULT None None.GetOutputCurrentType([in] DWORD dwOutputStreamID,[out] IMFMediaType **ppType)
MI_INLINE MI_Result None.MI_DestinationOptions_GetImpersonationType(_Inout_ MI_DestinationOptions *options,_Out_ MI_DestinationOptions_ImpersonationType *impersonationType)
HRESULT None mfplat.MFRegisterLocalByteStreamHandler(_In_ PCWSTR szFileExtension,_In_ PCWSTR szMimeType,_In_ IMFActivate *pActivate)
MI_INLINE MI_Result None.MI_Context_PostResult(_In_ MI_Context *context,MI_Result result None)
HRESULT None None.GetActivityReport([in] ULONG Index,[out] IMFSensorActivityReport **sensorActivityReport)
SECURITY_STATUS SEC_Entry secur32.QueryContextAttributes(_In_ PCtxtHandle phContext,_In_ ULONG ulAttribute,_Out_ PVOID pBuffer)
SECURITY_STATUS SEC_Entry secur32.QueryContextAttributesW(_In_ PCtxtHandle phContext,_In_ ULONG ulAttribute,_Out_ PVOID pBuffer)
SECURITY_STATUS SEC_Entry secur32.QueryContextAttributesA(_In_ PCtxtHandle phContext,_In_ ULONG ulAttribute,_Out_ PVOID pBuffer)
HRESULT None None.SetCurrentPosition([in] QWORD qwPosition)
HRESULT None None.GetDouble([in] REFGUID guidKey,[out] double *pfValue)
MI_INLINE MI_Result None.MI_DestinationOptions_GetEncodePortInSPN(_In_ MI_DestinationOptions *options,_Out_ MI_Boolean *encodePort)
MI_INLINE MI_Result None.MI_OperationOptions_SetUseMachineID(_Inout_ MI_OperationOptions *options,_In_ MI_Boolean machineID)
HRESULT None None.GetSampleFlags([out] DWORD *pdwSampleFlags)
HRESULT None None.DXVAHD_SetStreamFormat(IDXVAHD_VideoProcessor *pVP None,UINT stream None,D3DFORMAT format None)
MI_INLINE MI_Result None.MI_DestinationOptions_GetDestinationPort(_In_ MI_DestinationOptions *options,_Out_ MI_Uint32 *port)
typedef None None.void(MI_CALL *MI_ProviderFT_EnumerateInstances None)
typedef None None.void(MI_CALL *MI_ProviderFT_ModifyInstance None)
HRESULT None None.GetOutputCurrentType([in] DWORD dwOutputStreamID,[out] IMFMediaType **ppType)
typedef None None.void(MI_CALL *MI_ProviderFT_EnumerateInstances None)
HRESULT None None.OnEvent([in] IMFMediaEvent *pEvent)
MI_Result MI_CALL None.MI_Server_GetSystemName(const MI_Char **systemName)
HRESULT None None.GetStreamIDs([in] DWORD dwInputIDArraySize,[out] DWORD *pdwInputIDs,[in] DWORD dwOutputIDArraySize,[out] DWORD *pdwOutputIDs)
MI_INLINE MI_Result None.MI_DestinationOptions_SetPacketIntegrity(_Inout_ MI_DestinationOptions *options,MI_Boolean integrity None)
MI_INLINE MI_Result None.MI_DestinationOptions_GetPacketIntegrity(_In_ MI_DestinationOptions *options,_Out_ MI_Boolean *integrity)
MI_INLINE MI_Result None.MI_DestinationOptions_SetCertRevocationCheck(_Inout_ MI_DestinationOptions *options,MI_Boolean check None)
typedef None None.void(MI_CALL *MI_Module_Load None)
MI_INLINE MI_Result None.MI_SubscriptionDeliveryOptions_GetMaximumLatency(_In_ MI_SubscriptionDeliveryOptions *self,_Out_ MI_Interval *value)
HRESULT None None.DisplaySAMIStyleNames(IMFPresentationDescriptor *pPD None)
HRESULT None None.GetItem([in] REFGUID guidKey,[in None None,out] PROPVARIANT *pValue)
typedef None None.void(MI_CALL *MI_ProviderFT_ReferenceInstances None)
HRESULT None mfplat.MFInitVideoFormat(_Out_ MFVIDEOFORMAT *pVideoFormat,_In_ MFStandardVideoFormat type)
MI_INLINE MI_Result None.MI_PropertySet_Destruct(_Inout_ MI_PropertySet *self)
virtual void d2d1.GetGradientStops([out] D2D1_GRADIENT_STOP *gradientStops,UINT gradientStopsCount None)
HRESULT None None.MFGetAttributeString(_In_ IMFAttributes *pAttributes,_In_ REFGUID guidKey,_Out_ PWSTR *ppsz)
NET_API_STATUS None netapi32.NetWkstaUserGetInfo(LPWSTR reserved None,_In_ DWORD level,_Out_ LPBYTE *bufptr)
HRESULT None None.GetStreamCount([out] DWORD *pcInputStreams,[out] DWORD *pcOutputStreams)
MI_INLINE MI_Result None.MI_DestinationOptions_GetTimeout(_In_ MI_DestinationOptions *options,_Out_ MI_Interval *timeout)
HRESULT None None.InitializeSampleAllocatorEx([in] DWORD cInitialSamples,[in] DWORD cMaximumSamples,[in] IMFAttributes *pAttributes,[in] IMFMediaType *pMediaType)
HRESULT None msctf.OnLanguageChange([in] LANGID langid,[out] BOOL *pfAccept)
MI_INLINE MI_Result None.MI_SubscriptionDeliveryOptions_SetHeartbeatInterval(_Inout_ MI_SubscriptionDeliveryOptions *self,_In_ MI_Interval *value)
MI_INLINE MI_Result None.MI_DestinationOptions_GetPacketPrivacy(_In_ MI_DestinationOptions *options,_Out_ MI_Boolean *privacy)
HRESULT None msctf.GetText([in] LONG acpStart,[in] LONG acpEnd,[out] WCHAR *pchPlain,[in] ULONG cchPlainReq,[out] ULONG *pcchPlainRet,[out] TS_RUNINFO *prgRunInfo,[in] ULONG cRunInfoReq,[out] ULONG *pcRunInfoRet,[out] LONG *pacpNext)
HRESULT None msctf.InWriteSession([in] TfClientId tid,[out] BOOL *pfWriteSession)
HRESULT None msctf.RequestEditSession([in] TfClientId tid,[in] ITfEditSession *pes,[in] DWORD dwFlags,[out] HRESULT *phrSession)
MI_INLINE MI_Result None.MI_OperationOptions_SetProviderArchitecture(_Inout_ MI_OperationOptions *options,_In_ MI_ProviderArchitecture architecture,_In_ MI_Boolean mustComply)
MI_INLINE MI_Result None.MI_Deserializer_Close(_Inout_ MI_Deserializer *deserializer)
HRESULT None None.GetStreamCount([out] DWORD *pcStreams)
HRESULT None None.NotifyQualityEvent([in] IUnknown *pObject,[in] IMFMediaEvent *pEvent)
HRESULT None None.DXVAHD_SetFilterValue(IDXVAHD_VideoProcessor *pVP None,UINT stream None,DXVAHD_FILTER filter None,BOOL bEnable None,INT value None)
HRESULT None None.RemoveBufferByIndex([in] DWORD dwIndex)
typedef None None.void(MI_CALL *MI_ProviderFT_Load None)
MI_INLINE MI_Result None.MI_SubscriptionDeliveryOptions_SetMaximumLatency(_Inout_ MI_SubscriptionDeliveryOptions *self,_In_ MI_Interval *value)
HRESULT None None.ProcessMessage([in] MFT_MESSAGE_TYPE eMessage,[in] ULONG_PTR ulParam)
HRESULT None msctf.InsertEmbedded([in] DWORD dwFlags,[in] LONG acpStart,[in] LONG acpEnd,[in] IDataObject *pDataObject,[out] TS_TEXTCHANGE *pChange)
void None d2d1.GetOutput([out] ID2D1Image **outputImage)
typedef None None.void(MI_CALL *MI_ProviderFT_AssociatorInstances None)
void None d2d1_3.FlushDeviceContexts([in] ID2D1Bitmap *bitmap)
MI_INLINE MI_Result None.MI_DestinationOptions_SetEncodePortInSPN(_Inout_ MI_DestinationOptions *options,MI_Boolean encodePort None)
void None d2d1.SetPrimitiveBlend(D2D1_PRIMITIVE_BLEND primitiveBlend None)
NET_API_STATUS None netapi32.NetWkstaTransportEnum(_In_ LPWSTR servername,_In_ DWORD level,_Out_ LPBYTE *bufptr,_In_ DWORD prefmaxlen,_Out_ LPDWORD entriesread,_Out_ LPDWORD totalentries,_Inout_ LPDWORD resumehandle)
MI_INLINE MI_Result None.MI_DestinationOptions_SetEncodePortInSPN(_Inout_ MI_DestinationOptions *options,MI_Boolean encodePort None)
HRESULT None None.SetStereo3DRenderMode([in] MF3DVideoOutputType outputType)
HRESULT None None.DisconnectOutput([in] DWORD dwOutputIndex)
NET_API_STATUS None netapi32.NetUnjoinDomain(_In_ LPCWSTR lpServer,_In_ LPCWSTR lpAccount,_In_ LPCWSTR lpPassword,_In_ DWORD fUnjoinOptions)
HRESULT None msctf.GetScreenExt([in] TsViewCookie vcView,[out] RECT *prc)
HRESULT None msctf.Next([in] ULONG ulCount,[out] ITfDisplayAttributeInfo **rgInfo,[out] ULONG *pcFetched)
HRESULT None imekrcic.OnEndEdit([in] ITfContext *pic,[in] TfEditCookie ecReadOnly,[in] ITfEditRecord *pEditRecord)
HRESULT None None.SetPlaybackOptimizations(IMFTopology *pTopology None,HWND hwnd None)
HRESULT None msctf.GetEnd([in] TfEditCookie ec,[out] ITfRange **ppEnd)
MI_INLINE MI_Result None.MI_Session_GetApplication(_In_ MI_Session *session,_Out_ MI_Application *application)
typedef None None.void(MI_CALL *MI_CancelCallback None)
HRESULT None d2d1.SetPrimitiveBlend2(D2D1_PRIMITIVE_BLEND primitiveBlend None)
NET_API_STATUS None netapi32.NetApiBufferFree(_In_ LPVOID Buffer)
HRESULT None None.GeneratePresentationDescriptor([out] IMFPresentationDescriptor **ppIPresentationDescriptor)
HRESULT None None.GetDevice([out] DEVICE_INFO *pDevice)
MI_INLINE MI_Result None.MI_OperationOptions_GetWriteErrorMode(_In_ MI_OperationOptions *options,_Out_ MI_CallbackMode *mode)
HRESULT None None.IsTimeSeekSupported([out] BOOL *pfTimeSeekIsSupported)
MI_INLINE MI_Result None.MI_SubscriptionDeliveryOptions_GetDeliveryRetryAttempts(_In_ MI_SubscriptionDeliveryOptions *self,_Out_ MI_Uint32 *value)
HRESULT None None.SetGeometricAperture(IMFMediaType *pMediaType None,const MFVideoArea area)
HRESULT None None.GetOutputTrustAuthorityByIndex([in] DWORD dwIndex,[out] IMFOutputTrustAuthority **ppauthority)
NET_API_STATUS None netapi32.NetServerDiskEnum(_In_ LPWSTR servername,_In_ DWORD level,_Out_ LPBYTE *bufptr,_In_ DWORD prefmaxlen,_Out_ LPDWORD entriesread,_Out_ LPDWORD totalentries,_Inout_ LPDWORD resume_handle)
HRESULT None None.GetStartStopPosition([out] GUID *pguidStartPositionType,[out] PROPVARIANT *pvStartValue,[out] GUID *pguidStopPositionType,[out] PROPVARIANT *pvStopValue)
HRESULT None None.GetVideoProcessorFilterRange([in] DXVAHD_FILTER Filter,[out] DXVAHD_FILTER_RANGE_DATA *pRange)
HRESULT None None.GetRenderingPrefs([out] DWORD *pdwRenderFlags)
MI_INLINE MI_Result None.MI_Operation_Close(_Inout_ MI_Operation *operation)
typedef None None.void(MI_CALL *MI_OperationCallback_WriteError None)
MI_INLINE MI_Result None.MI_Application_NewSubscriptionDeliveryOptions(_In_ MI_Application *application,_In_ MI_SubscriptionDeliveryType deliveryType,_Out_ MI_SubscriptionDeliveryOptions *deliveryOptions)
MI_INLINE MI_Result None.MI_Context_RequestUnload(_In_ MI_Context *context)
HRESULT None None.SetSampleFlags([in] DWORD dwSampleFlags)
HRESULT None None.IsFinal([out] BOOL *pfIsFinal)
HRESULT None msctf.SimulatePreservedKey([in] ITfContext *pic,[in] REFGUID rguid,[out] BOOL *pfEaten)
NET_API_STATUS None netapi32.NetServerTransportDel(_In_ LPWSTR servername,_In_ DWORD level,_In_ LPBYTE bufptr)
HRESULT None d2d1.CreateBitmapBrush([in] ID2D1Bitmap *bitmap,[in None None,optional] D2D1_BITMAP_BRUSH_PROPERTIES1 *bitmapBrushProperties,[out] ID2D1BitmapBrush1 **bitmapBrush)
NET_API_STATUS None netapi32.NetWkstaUserGetInfo(LPWSTR reserved None,_In_ DWORD level,_Out_ LPBYTE *bufptr)
HRESULT None None.GetStatistics([in] MF_MEDIA_ENGINE_STATISTIC StatisticID,[out] PROPVARIANT *pStatistic)
HRESULT None None.SetSampleDuration([in] LONGLONG hnsSampleDuration)
HRESULT None None.GetEncodingConfigurationPropertyStore([in] WORD wStreamNumber,[out] IPropertyStore **ppIStore)
HRESULT None None.RemoveMutualExclusion([in] DWORD dwMutexIndex)
MI_INLINE MI_Result None.MI_DestinationOptions_SetImpersonationType(_Inout_ MI_DestinationOptions *options,_In_ MI_DestinationOptions_ImpersonationType impersonationType)
HRESULT None None.CreateMediaItemFromObject([in] IUnknown *pIUnknownObj,[in] BOOL fSync,[in] DWORD_PTR dwUserData,[out] IMFPMediaItem **ppMediaItem)
MI_INLINE MI_Result None.MI_SubscriptionDeliveryOptions_GetOptionCount(_In_ MI_SubscriptionDeliveryOptions *self,_Out_opt_ MI_Uint32 *count)
HRESULT None None.CreatePresentationDescriptor([out] IMFPresentationDescriptor **ppPresentationDescriptor)
HRESULT None None.EnableWindowlessSwapchainMode([in] BOOL fEnable)
HRESULT None None.DisconnectOutput([in] DWORD dwOutputIndex)
MI_INLINE MI_Result None.MI_OperationOptions_GetForceFlagPromptUserMode(_Inout_ MI_OperationOptions *options,_Out_ MI_Boolean *forceflag)
HRESULT None None.SetLoop([in] BOOL Loop)
LRESULT CALLBACK None.WindowProc(HWND hwnd None,UINT uMsg None,WPARAM wParam None,LPARAM lParam None)
NET_API_STATUS None netapi32.NetLocalGroupDel(_In_ LPCWSTR servername,_In_ LPCWSTR groupname)
typedef None None.void(MI_CALL *MI_ProviderFT_Invoke None)
NET_API_STATUS None netapi32.NetUserGetGroups(_In_ LPCWSTR servername,_In_ LPCWSTR username,_In_ DWORD level,_Out_ LPBYTE *bufptr,_In_ DWORD prefmaxlen,_Out_ LPDWORD entriesread,_Out_ LPDWORD totalentries)
NET_API_STATUS None netapi32.NetGroupGetInfo(_In_ LPCWSTR servername,_In_ LPCWSTR groupname,_In_ DWORD level,_Out_ LPBYTE *bufptr)
void None d2d1.SetTarget([in None None,optional] ID2D1Image *target)
HRESULT None None.DXVAHD_SetDestinationRect(IDXVAHD_VideoProcessor *pVP None,UINT stream None,BOOL bEnable None,const RECT rect)
HRESULT None None.GetSupportedRates([in] BOOL fForwardDirection,[out] float *pflSlowestRate,[out] float *pflFastestRate)
MI_INLINE MI_Result None.MI_Instance_Normalize(_Inout_ MI_Instance **self)
HRESULT None None.DXVAHD_SetFrameFormat(IDXVAHD_VideoProcessor *pVP None,UINT stream None,DXVAHD_FRAME_FORMAT format None)
HRESULT None d2d1.CreateColorContextFromFilename(PCWSTR Filename None,[out] ID2D1ColorContext **colorContext)
MI_INLINE MI_Result None.MI_OperationOptions_GetProviderArchitecture(_In_ MI_OperationOptions *options,_Out_ MI_ProviderArchitecture *architecture,_Out_ MI_Boolean *mustComply)
NET_API_STATUS None netapi32.NetServerEnum(_In_opt_ LPCWSTR servername,_In_ DWORD level,_Out_ LPBYTE *bufptr,_In_ DWORD prefmaxlen,_Out_ LPDWORD entriesread,_Out_ LPDWORD totalentries,_In_ DWORD servertype,_In_opt_ LPCWSTR domain,_Inout_opt_ LPDWORD resume_handle)
HRESULT None msctf.KeyUp([in] WPARAM wParam,[in] LPARAM lParam,[out] BOOL *pfEaten)
NET_API_STATUS None netapi32.NetRenameMachineInDomain(_In_ LPCWSTR lpServer,_In_ LPCWSTR lpNewMachineName,_In_ LPCWSTR lpAccount,_In_ LPCWSTR lpPassword,_In_ DWORD fRenameOptions)
NET_API_STATUS None netapi32.NetGroupAdd(_In_ LPCWSTR servername,_In_ DWORD level,_In_ LPBYTE buf,_Out_ LPDWORD parm_err)
MI_INLINE MI_Result None.MI_DestinationOptions_GetCredentialsCount(_In_ MI_DestinationOptions *options,_Out_ MI_Uint32 *count)
HRESULT None None.GetSampleDuration([out] LONGLONG *phnsSampleDuration)
HRESULT None None.GetResourceCharacteristics([out] DWORD *pCharacteristics)
HRESULT None d2d1.SetInputCount(UINT32 inputCount None)
BOOL None None.IsTransformAsync(IMFTransform *pMFT None)
NET_API_STATUS None netapi32.NetGroupDel(_In_ LPCWSTR servername,_In_ LPCWSTR groupname)
HRESULT None None.ConnectOutput([in] DWORD dwOutputIndex,[in] IMFTopologyNode *pDownstreamNode,[in] DWORD dwInputIndexOnDownstreamNode)
HRESULT None None.SetBalance([in] float flBalance)
HRESULT None None.GetIdealVideoSize([out] SIZE *pszMin,[out] SIZE *pszMax)
MI_INLINE MI_Result None.MI_Instance_Destruct(_Inout_ MI_Instance *self)
BOOL None user32.UpdateWindow(_In_ HWND hWnd)
HRESULT None None.IsProtected([out] BOOL *pfProtected)
HRESULT None None.GetUserData([out] DWORD_PTR *pdwUserData)
HRESULT None msctf.KeyDown([in] WPARAM wParam,[in] LPARAM lParam,[out] BOOL *pfEaten)
NET_API_STATUS None netapi32.NetScheduleJobEnum(_In_opt_ LPCWSTR Servername,_Out_ LPBYTE *PointerToBuffer,_In_ DWORD PreferredMaximumLength,_Out_ LPDWORD EntriesRead,_Out_ LPDWORD TotalEntries,_Inout_ LPDWORD ResumeHandle)
MI_INLINE MI_Result None.MI_Instance_ClearElementAt(_Inout_ MI_Instance *self,MI_Uint32 index None)
MI_INLINE MI_Result None.MI_DestinationOptions_GetCertCNCheck(_In_ MI_DestinationOptions *options,_Out_ MI_Boolean *check)
NET_API_STATUS None netapi32.NetGroupAddUser(_In_ LPCWSTR servername,_In_ LPCWSTR GroupName,_In_ LPCWSTR username)
MI_INLINE MI_Result None.MI_Context_GetCustomOptionCount(_In_ MI_Context *context,_Out_opt_ MI_Uint32 *count)
HRESULT None None.IsProtected([out] BOOL *pProtected)
HRESULT None msctf.AdviseSink([in] REFIID riid,[in] IUnknown *punk,[out] DWORD *pdwCookie)
MI_INLINE MI_Result None.MI_DestinationOptions_GetOptionCount(_In_ MI_DestinationOptions *options,_Out_ MI_Uint32 *count)
HRESULT None None.GetStreamAttribute([in] DWORD dwStreamIndex,[in] REFGUID guidMFAttribute,[out] PROPVARIANT *pvValue)
HRESULT None d2d1.GetImageWorldBounds([in] ID2D1Image *image,[out] D2D1_RECT_F worldBounds[1])
HRESULT None msctf.GetStatus([out] TS_STATUS *pdcs)
NET_API_STATUS None netapi32.NetRequestOfflineDomainJoin(_In_ BYTE *pProvisionBinData,_In_ DWORD cbProvisionBinDataSize,_In_ DWORD dwOptions,_In_ LPCWSTR lpWindowsPath)
HRESULT None None.GetPresentationAttribute([in] REFGUID guidMFAttribute,[out] PROPVARIANT *pvValue)
NET_API_STATUS None netapi32.NetUserSetInfo(_In_ LPCWSTR servername,_In_ LPCWSTR username,_In_ DWORD level,_In_ LPBYTE buf,_Out_ LPDWORD parm_err)
MI_INLINE MI_Result None.MI_DestinationOptions_SetCertCNCheck(_Inout_ MI_DestinationOptions *options,MI_Boolean check None)
NET_API_STATUS None netapi32.NetApiBufferReallocate(_In_ LPVOID OldBuffer,_In_ DWORD NewByteCount,_Out_ LPVOID *NewBuffer)
HRESULT None None.GetNativeVideoSize([out] SIZE *pszVideo,[out] SIZE *pszARVideo)
HRESULT None None.GetSourceFlags(IMFSourceReader *pReader None,ULONG *pulFlags None)
VOID NET_API_FUNCTION netapi32.NetFreeAadJoinInformation(_In_opt_ PDSREG_JOIN_INFO pJoinInfo)
NET_API_STATUS None netapi32.NetScheduleJobDel(_In_opt_ LPCWSTR Servername,_In_ DWORD MinJobId,_In_ DWORD MaxJobId)
MI_INLINE MI_Result None.MI_HostedProvider_Close(_Inout_ MI_HostedProvider *hostedProvider)
NET_API_STATUS None netapi32.NetRemoteComputerSupports(_In_ LPCWSTR UncServerName,_In_ DWORD OptionsWanted,_Out_ LPDWORD OptionsSupported)
NET_API_STATUS None netapi32.NetJoinDomain(_In_ LPCWSTR lpServer,_In_ LPCWSTR lpDomain,_In_ LPCWSTR lpAccountOU,_In_ LPCWSTR lpAccount,_In_ LPCWSTR lpPassword,_In_ DWORD fJoinOptions)
HRESULT None None.GetBufferByIndex([in] DWORD dwIndex,[out] IMFMediaBuffer **ppBuffer)
MI_INLINE MI_Result None.MI_Serializer_Close(_Inout_ MI_Serializer *serializer)
HRESULT None None.OnVideoStreamTick([out] LONGLONG *pPts)
MI_INLINE MI_ErrorCategory None.MI_Utilities_MapErrorToMiErrorCategory(_In_z_ MI_Char *errorType,MI_Uint32 error None)
HRESULT None None.GetStreamSelection([in] DWORD dwStreamIndex,[out] BOOL *pfEnabled)
HRESULT None msctf.GetForeground([out] CLSID *pclsid)
typedef None None.void(MI_CALL *MI_OperationCallback_WriteMessage None)
NET_API_STATUS None netapi32.NetGetDCName(_In_ LPCWSTR servername,_In_ LPCWSTR domainname,_Out_ LPBYTE *bufptr)
NET_API_STATUS None netapi32.NetProvisionComputerAccount(_In_ LPCWSTR lpDomain,_In_ LPCWSTR lpMachineName,_In_opt_ LPCWSTR lpMachineAccountOU,_In_opt_ LPCWSTR lpDcName,_In_ DWORD dwOptions,_Out_opt_ PBYTE *pProvisionBinData,_Out_opt_ DWORD *pdwProvisionBinDataSize,_Out_opt_ LPWSTR *pProvisionTextData)
NET_API_STATUS None netapi32.NetWkstaUserSetInfo(LPWSTR reserved None,_In_ DWORD level,_In_ LPBYTE buf,_Out_ LPDWORD parm_err)
HRESULT None None.SetUINT32([in] REFGUID guidKey,[in] UINT32 unValue)
HRESULT None None.GetUINT64([in] REFGUID guidKey,[out] UINT64 *punValue)
NET_API_STATUS None netapi32.NetUserModalsSet(_In_ LPCWSTR servername,_In_ DWORD level,_In_ LPBYTE buf,_Out_ LPDWORD parm_err)
HRESULT None None.GetMediaPlayer([out] IMFPMediaPlayer **ppMediaPlayer)
NET_API_STATUS None netapi32.NetApiBufferAllocate(_In_ DWORD ByteCount,_Out_ LPVOID *Buffer)
MI_INLINE MI_Result None.MI_OperationOptions_Delete(_Inout_ MI_OperationOptions *options)
NET_API_STATUS None netapi32.NetGroupEnum(_In_ LPCWSTR servername,_In_ DWORD level,_Out_ LPBYTE *bufptr,_In_ DWORD prefmaxlen,_Out_ LPDWORD entriesread,_Out_ LPDWORD totalentries,_Inout_ PDWORD_PTR resume_handle)
NET_API_STATUS None netapi32.NetGroupAdd(_In_ LPCWSTR servername,_In_ DWORD level,_In_ LPBYTE buf,_Out_ LPDWORD parm_err)
ULONG None wldap32.ldap_modrdn_s(_In_ LDAP *ExternalHandle,_In_ PCHAR DistinguishedName,_Out_ PCHAR NewDistinguishedName)
ULONG None wldap32.ldap_modrdn_sW(_In_ LDAP *ExternalHandle,_In_ PCHAR DistinguishedName,_Out_ PCHAR NewDistinguishedName)
ULONG None wldap32.ldap_modrdn_sA(_In_ LDAP *ExternalHandle,_In_ PCHAR DistinguishedName,_Out_ PCHAR NewDistinguishedName)
HRESULT None msctf.SetValueStore([in] TfEditCookie ec,[in] ITfRange *pRange,[in] ITfPropertyStore *pPropStore)
NET_API_STATUS None netapi32.NetMessageNameDel(_In_ LPCWSTR servername,_In_ LPCWSTR msgname)
NET_API_STATUS None netapi32.NetGroupSetUsers(_In_ LPCWSTR servername,_In_ LPCWSTR groupname,_In_ DWORD level,_In_ LPBYTE buf,_In_ DWORD totalentries)
NET_API_STATUS None netapi32.NetQueryDisplayInformation(_In_ LPCWSTR ServerName,_In_ DWORD Level,_In_ DWORD Index,_In_ DWORD EntriesRequested,_In_ DWORD PreferredMaximumLength,_Out_ LPDWORD ReturnedEntryCount,_Out_ PVOID *SortedBuffer)
MI_INLINE MI_Result None.MI_Application_NewDeserializer(_Inout_ MI_Application *application,MI_Uint32 flags None,_In_ MI_Char *format,_Out_ MI_Deserializer *deserializer)
HRESULT None msctf.UnadviseKeyEventSink([in] TfClientId tid)
NET_API_STATUS None netapi32.NetScheduleJobAdd(_In_opt_ LPCWSTR Servername,_In_ LPBYTE Buffer,_Out_ LPDWORD JobId)
NET_API_STATUS None netapi32.NetServerTransportAdd(_In_ LPWSTR servername,_In_ DWORD level,_In_ LPBYTE bufptr)
typedef None None.void(MI_CALL *MI_ProviderFT_EnumerateInstances None)
NET_API_STATUS None netapi32.NetUserSetGroups(_In_ LPCWSTR servername,_In_ LPCWSTR username,_In_ DWORD level,_In_ LPBYTE buf,_In_ DWORD num_entries)
typedef None None.void(MI_CALL *MI_ProviderFT_CreateInstance None)
HRESULT None None.GetStringLength([in] REFGUID guidKey,[out] UINT32 *pcchLength)
MI_INLINE MI_Result None.MI_HostedProvider_GetApplication(_In_ MI_HostedProvider *hostedProvider,_Out_ MI_Application *application)
NET_API_STATUS None netapi32.NetRemoteTOD(_In_ LPCWSTR UncServerName,_Out_ LPBYTE *BufferPtr)
NET_API_STATUS None netapi32.NetUseAdd(_In_ LMSTR UncServerName,_In_ DWORD Level,_In_ LPBYTE Buf,_Out_ LPDWORD ParmError)
ULONG None wldap32.ldap_simple_bind(_In_ LDAP *ld,_In_ PCHAR dn,_In_ PCHAR passwd)
ULONG None wldap32.ldap_simple_bindW(_In_ LDAP *ld,_In_ PCHAR dn,_In_ PCHAR passwd)
ULONG None wldap32.ldap_simple_bindA(_In_ LDAP *ld,_In_ PCHAR dn,_In_ PCHAR passwd)
NET_API_STATUS None netapi32.NetSetPrimaryComputerName(_In_opt_ LPCWSTR Server,_In_ LPCWSTR PrimaryName,_In_opt_ LPCWSTR DomainAccount,_In_opt_ LPCWSTR DomainAccountPassword,_In_ ULONG Reserved)
NET_API_STATUS None netapi32.NetGetJoinInformation(_In_ LPCWSTR lpServer,_Out_ LPWSTR *lpNameBuffer,_Out_ PNETSETUP_JOIN_STATUS BufferType)
HRESULT None None.SetTimer([in] DWORD dwFlags,[in] LONGLONG llClockTime,[in] IMFAsyncCallback *pCallback,[in] IUnknown *punkState,[out] IUnknown **ppunkKey)
NET_API_STATUS None netapi32.NetUseDel(_In_ LMSTR UncServerName,_In_ LMSTR UseName,_In_ DWORD ForceCond)
NET_API_STATUS None netapi32.NetMessageNameGetInfo(_In_ LPCWSTR servername,_In_ LPCWSTR msgname,_In_ DWORD level,_Out_ LPBYTE *bufptr)
HRESULT None mstask.GetNetScheduleAccountInformation(_In_ LPCWSTR pwszServerName,_In_ DWORD ccAccount,_Out_ WCHAR wszAccount[])
HRESULT None None.GetValue([out] PROPVARIANT *pvValue)
NET_API_STATUS None netapi32.NetWkstaSetInfo(_In_ LPWSTR servername,_In_ DWORD level,_In_ LPBYTE buffer,_Out_ LPDWORD parm_err)
NET_API_STATUS None netapi32.NetUseGetInfo(_In_ LMSTR UncServerName,_In_ LMSTR UseName,_In_ DWORD Level,_Out_ LPBYTE *BufPtr)
NET_API_STATUS None netapi32.NetValidatePasswordPolicy(_In_ LPCWSTR ServerName,_In_ LPVOID Qualifier,_In_ NET_VALIDATE_PASSWORD_TYPE ValidationType,_In_ LPVOID InputArg,_Out_ LPVOID OutputArg)
HRESULT None None.GetCredential([in] LPCWSTR pszUrl,[in] LPCWSTR pszRealm,[in] DWORD dwAuthenticationFlags,[out] IMFNetCredential **ppCred,[out] DWORD *pdwFlags)
NET_API_STATUS None netapi32.NetMessageNameAdd(_In_ LPCWSTR servername,_In_ LPCWSTR msgname)
HRESULT None None.SetString([in] REFGUID guidKey,[in] LPCWSTR wszValue)
NET_API_STATUS None netapi32.NetMessageNameEnum(_In_ LPCWSTR servername,_In_ DWORD level,_Out_ LPBYTE *bufptr,_In_ DWORD prefmaxlen,_Out_ LPDWORD entriesread,_Out_ LPDWORD totalentries,_Inout_ LPDWORD resume_handle)
NET_API_STATUS None netapi32.NetUserDel(_In_ LPCWSTR servername,_In_ LPCWSTR username)
NET_API_STATUS None netapi32.NetUserModalsGet(_In_opt_ LPCWSTR servername,_In_ DWORD level,_Out_ LPBYTE *bufptr)
NET_API_STATUS None netapi32.NetMessageBufferSend(_In_ LPCWSTR servername,_In_ LPCWSTR msgname,_In_ LPCWSTR fromname,_In_ LPBYTE buf,_In_ DWORD buflen)
MI_INLINE MI_Result None.MI_SubscriptionDeliveryOptions_SetExpirationTime(_Inout_ MI_SubscriptionDeliveryOptions *self,_In_ MI_Datetime *value)
NET_API_STATUS None netapi32.NetLocalGroupDelMembers(_In_ LPCWSTR servername,_In_ LPCWSTR groupname,_In_ DWORD level,_In_ LPBYTE buf,_In_ DWORD totalentries)
NTSTATUS WINAPI netapi32.NetLogonSetServiceBits(_In_ LPWSTR ServerName,_In_ DWORD ServiceBitsOfInterest,_In_ DWORD ServiceBits)
ULONG None wldap32.ldap_modify(_In_ LDAP *ld,_In_ PCHAR dn,_In_ LDAPMod *mods[])
ULONG None wldap32.ldap_modifyW(_In_ LDAP *ld,_In_ PCHAR dn,_In_ LDAPMod *mods[])
ULONG None wldap32.ldap_modifyA(_In_ LDAP *ld,_In_ PCHAR dn,_In_ LDAPMod *mods[])
NET_API_STATUS None netapi32.NetGroupGetUsers(_In_ LPCWSTR servername,_In_ LPCWSTR groupname,_In_ DWORD level,_Out_ LPBYTE *bufptr,_In_ DWORD prefmaxlen,_Out_ LPDWORD entriesread,_Out_ LPDWORD totalentries,_Inout_ PDWORD_PTR ResumeHandle)
HRESULT None None.SetPreload([in] MF_MEDIA_ENGINE_PRELOAD Preload)
inline BOOL None.IsRandomAccessPoint(IMFSample *pSample None)
HRESULT None None.GetBlob([in] REFGUID guidKey,[out] UINT8 *pBuf,[in] UINT32 cbBufSize,[out] UINT32 *pcbBlobSize)
ULONG None wldap32.ldap_compare(_In_ LDAP *ld,_In_ PCHAR dn,_In_ PCHAR attr,_In_ PCHAR value)
ULONG None wldap32.ldap_compareW(_In_ LDAP *ld,_In_ PCHAR dn,_In_ PCHAR attr,_In_ PCHAR value)
ULONG None wldap32.ldap_compareA(_In_ LDAP *ld,_In_ PCHAR dn,_In_ PCHAR attr,_In_ PCHAR value)
NET_API_STATUS None netapi32.NetLocalGroupAddMembers(_In_ LPCWSTR servername,_In_ LPCWSTR groupname,_In_ DWORD level,_In_ LPBYTE buf,_In_ DWORD totalentries)
NET_API_STATUS None netapi32.NetLocalGroupGetInfo(_In_ LPCWSTR servername,_In_ LPCWSTR groupname,_In_ DWORD level,_Out_ LPBYTE *bufptr)
NET_API_STATUS None netapi32.NetEnumerateComputerNames(_In_opt_ LPCWSTR Server,_In_ NET_COMPUTER_NAME_TYPE NameType,_In_ ULONG Reserved,_Out_ PDWORD EntryCount,_Out_ LPWSTR **ComputerNames)
NET_API_STATUS None netapi32.NetGroupDelUser(_In_ LPCWSTR servername,_In_ LPCWSTR GroupName,_In_ LPCWSTR Username)
NET_API_STATUS None netapi32.NetLocalGroupAdd(_In_ LPCWSTR servername,_In_ DWORD level,_In_ LPBYTE buf,_Out_ LPDWORD parm_err)
NET_API_STATUS None netapi32.NetServerTransportEnum(_In_ LPWSTR servername,_In_ DWORD level,_Out_ LPBYTE *bufptr,_In_ DWORD prefmaxlen,_Out_ LPDWORD entriesread,_Out_ LPDWORD totalentries,_Inout_ LPDWORD resumehandle)
MI_INLINE MI_Result None.MI_OperationOptions_SetForceFlagPromptUserMode(_Inout_ MI_OperationOptions *options,_In_ MI_Boolean forceflag)
HRESULT None activeds.SetPassword([in] BSTR bstrNewPassword)
NET_API_STATUS None netapi32.NetGetAnyDCName(_In_ LPCWSTR servername,_In_ LPCWSTR domainname,_Out_ LPBYTE *bufptr)
HRESULT None activeds.GetEx([in] BSTR bstrName,[out] VARIANT *pvProp)
NET_API_STATUS None netapi32.NetAddAlternateComputerName(_In_opt_ LPCWSTR Server,_In_ LPCWSTR AlternateName,_In_opt_ LPCWSTR DomainAccount,_In_opt_ LPCWSTR DomainAccountPassword,_In_ ULONG Reserved)
HRESULT None None.SetDefaultPlaybackRate([in] double Rate)
NET_API_STATUS None netapi32.NetApiBufferSize(_In_ LPVOID Buffer,_Out_ LPDWORD ByteCount)
HRESULT None None.GetCount([out] UINT32 *pcItems)
NET_API_STATUS None netapi32.NetWkstaUserEnum(_In_ LPWSTR servername,_In_ DWORD level,_Out_ LPBYTE *bufptr,_In_ DWORD prefmaxlen,_Out_ LPDWORD entriesread,_Out_ LPDWORD totalentries,_Inout_ LPDWORD resumehandle)
NET_API_STATUS None netapi32.NetUserEnum(_In_ LPCWSTR servername,_In_ DWORD level,_In_ DWORD filter,_Out_ LPBYTE *bufptr,_In_ DWORD prefmaxlen,_Out_ LPDWORD entriesread,_Out_ LPDWORD totalentries,_Inout_ LPDWORD resume_handle)
HRESULT None None.SetMuted([in] BOOL Muted)
HRESULT None None.SetSource([in] BSTR pUrl)
NET_API_STATUS None netapi32.NetGetDisplayInformationIndex(_In_ LPCWSTR ServerName,_In_ DWORD Level,_In_ LPCWSTR Prefix,_Out_ LPDWORD Index)
HRESULT None activeds.GetEx([in] BSTR bstrName,[out] VARIANT *pvProp)
PLDAPSearch None wldap32.ldap_search_init_page(_In_ PLDAP ExternalHandle,_In_ PCHAR DistinguishedName,_In_ ULONG ScopeOfSearch,_In_ PCHAR SearchFilter,_In_ PCHAR AttributeList[],_In_ ULONG AttributesOnly,_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls,_In_ ULONG PageTimeLimit,_In_ ULONG TotalSizeLimit,_In_ PLDAPSortKey *SortKeys)
PLDAPSearch None wldap32.ldap_search_init_pageW(_In_ PLDAP ExternalHandle,_In_ PCHAR DistinguishedName,_In_ ULONG ScopeOfSearch,_In_ PCHAR SearchFilter,_In_ PCHAR AttributeList[],_In_ ULONG AttributesOnly,_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls,_In_ ULONG PageTimeLimit,_In_ ULONG TotalSizeLimit,_In_ PLDAPSortKey *SortKeys)
PLDAPSearch None wldap32.ldap_search_init_pageA(_In_ PLDAP ExternalHandle,_In_ PCHAR DistinguishedName,_In_ ULONG ScopeOfSearch,_In_ PCHAR SearchFilter,_In_ PCHAR AttributeList[],_In_ ULONG AttributesOnly,_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls,_In_ ULONG PageTimeLimit,_In_ ULONG TotalSizeLimit,_In_ PLDAPSortKey *SortKeys)
MI_INLINE MI_Result None.MI_DestinationOptions_SetPacketPrivacy(_Inout_ MI_DestinationOptions *options,MI_Boolean privacy None)
HRESULT None None.CreateD3DDeviceManager(IDirect3DDevice9 *pDevice None,UINT *pReset None,IDirect3DDeviceManager9 **ppManager None)
NET_API_STATUS None netapi32.NetAlertRaise(_In_ LPCWSTR AlertEventName,_In_ LPVOID Buffer,_In_ DWORD BufferSize)
NET_API_STATUS None netapi32.NetAlertRaiseEx(_In_ LPCWSTR AlertEventName,_In_ LPVOID VariableInfo,_In_ DWORD VariableInfoSize,_In_ LPCWSTR ServiceName)
DWORD None mpr.WNetCancelConnection2(_In_ LPCTSTR lpName,_In_ DWORD dwFlags,_In_ BOOL fForce)
DWORD None mpr.WNetCancelConnection2W(_In_ LPCTSTR lpName,_In_ DWORD dwFlags,_In_ BOOL fForce)
DWORD None mpr.WNetCancelConnection2A(_In_ LPCTSTR lpName,_In_ DWORD dwFlags,_In_ BOOL fForce)
void None None.KeyError(USHORT code None,DWORD systemCode None)
NET_API_STATUS None netapi32.NetLocalGroupSetMembers(_In_ LPCWSTR servername,_In_ LPCWSTR groupname,_In_ DWORD level,_In_ LPBYTE buf,_In_ DWORD totalentries)
typedef None None.void(MI_CALL *MI_OperationCallback_PromptUser None)
NET_API_STATUS None netapi32.NetUserGetLocalGroups(_In_ LPCWSTR servername,_In_ LPCWSTR username,_In_ DWORD level,_In_ DWORD flags,_Out_ LPBYTE *bufptr,_In_ DWORD prefmaxlen,_Out_ LPDWORD entriesread,_Out_ LPDWORD totalentries)
NET_API_STATUS None netapi32.NetLocalGroupEnum(_In_ LPCWSTR servername,_In_ DWORD level,_Out_ LPBYTE *bufptr,_In_ DWORD prefmaxlen,_Out_ LPDWORD entriesread,_Out_ LPDWORD totalentries,_Inout_ PDWORD_PTR resumehandle)
ULONG None wldap32.ldap_bind_s(_In_ LDAP *ld,_In_ PCHAR dn,_In_ PCHAR cred,_In_ ULONG method)
ULONG None wldap32.ldap_bind_sW(_In_ LDAP *ld,_In_ PCHAR dn,_In_ PCHAR cred,_In_ ULONG method)
ULONG None wldap32.ldap_bind_sA(_In_ LDAP *ld,_In_ PCHAR dn,_In_ PCHAR cred,_In_ ULONG method)
MI_INLINE MI_Result None.MI_OperationOptions_GetPromptUserMode(_In_ MI_OperationOptions *options,_Out_ MI_CallbackMode *mode)
NET_API_STATUS None netapi32.NetUserAdd(_In_ LMSTR servername,_In_ DWORD level,_In_ LPBYTE buf,_Out_ LPDWORD parm_err)
HRESULT None activeds.OpenDSObject([in] BSTR lpszDNName,[in] BSTR lpszUserName,[in] BSTR lpszPassword,[in] LONG lnReserved,[out] IDispatch **ppOleDsObj)
ULONG None wldap32.ldap_result2error(_In_ LDAP *ld,_In_ LDAPMessage *res,_In_ ULONG freeit)
NET_API_STATUS None netapi32.NetServerComputerNameDel(_In_ LPWSTR ServerName,_In_ LPWSTR EmulatedServerName)
NET_API_STATUS None netapi32.NetLocalGroupSetInfo(_In_ LPCWSTR servername,_In_ LPCWSTR groupname,_In_ DWORD level,_In_ LPBYTE buf,_Out_ LPDWORD parm_err)
NET_API_STATUS None netapi32.NetValidateName(_In_ LPCWSTR lpServer,_In_ LPCWSTR lpName,_In_ LPCWSTR lpAccount,_In_ LPCWSTR lpPassword,_In_ NETSETUP_NAME_TYPE NameType)
HRESULT None None.SetMaxFrameRate(IMFMediaSource *pSource None,DWORD dwTypeIndex None)
ULONG None wldap32.ldap_abandon(_In_ LDAP *ld,_In_ ULONG msgid)
NET_API_STATUS None netapi32.NetUserGetInfo(_In_ LPCWSTR servername,_In_ LPCWSTR username,_In_ DWORD level,_Out_ LPBYTE *bufptr)
HRESULT None None.CreateInstance([in] DWORD dwFlags,[in] IMFAttributes *pAttr,[out] IMFMediaEngine **ppPlayer)
HRESULT None None.UnlockDevice([in] HANDLE hDevice,[in] BOOL fSaveState)
ULONG None wldap32.ldap_escape_filter_element(_In_ PCHAR sourceFilterElement,_In_ ULONG sourceLength,_Out_ PCHAR destFilterElement,_In_ ULONG destLength)
ULONG None wldap32.ldap_escape_filter_elementW(_In_ PCHAR sourceFilterElement,_In_ ULONG sourceLength,_Out_ PCHAR destFilterElement,_In_ ULONG destLength)
ULONG None wldap32.ldap_escape_filter_elementA(_In_ PCHAR sourceFilterElement,_In_ ULONG sourceLength,_Out_ PCHAR destFilterElement,_In_ ULONG destLength)
ULONG None wldap32.ldap_parse_sort_control(_In_ PLDAP ExternalHandle,_In_ PLDAPControl *Control,_Out_ ULONG *Result,_Out_ PCHAR *Attribute)
ULONG None wldap32.ldap_parse_sort_controlW(_In_ PLDAP ExternalHandle,_In_ PLDAPControl *Control,_Out_ ULONG *Result,_Out_ PCHAR *Attribute)
ULONG None wldap32.ldap_parse_sort_controlA(_In_ PLDAP ExternalHandle,_In_ PLDAPControl *Control,_Out_ ULONG *Result,_Out_ PCHAR *Attribute)
MI_INLINE MI_Result None.MI_Context_RefuseUnload(_In_ MI_Context *context)
HRESULT None None.GetNativeVideoSize([out] DWORD *cx,[out] DWORD *cy)
ULONG None wldap32.ldap_modify_s(_In_ LDAP *ld,_In_ PCHAR dn,_In_ LDAPMod *mods[])
ULONG None wldap32.ldap_modify_sW(_In_ LDAP *ld,_In_ PCHAR dn,_In_ LDAPMod *mods[])
ULONG None wldap32.ldap_modify_sA(_In_ LDAP *ld,_In_ PCHAR dn,_In_ LDAPMod *mods[])
HRESULT None propsys.PSCreateMemoryPropertyStore(_In_ REFIID riid,_Out_ void **ppv)
NET_API_STATUS None netapi32.NetLocalGroupGetMembers(_In_ LPCWSTR servername,_In_ LPCWSTR localgroupname,_In_ DWORD level,_Out_ LPBYTE *bufptr,_In_ DWORD prefmaxlen,_Out_ LPDWORD entriesread,_Out_ LPDWORD totalentries,_Inout_ PDWORD_PTR resumehandle)
HRESULT None None.CreateD3DDeviceManager(IDirect3DDevice9 *pDevice None,UINT *pReset None,IDirect3DDeviceManager9 **ppManager None)
HRESULT None taskschd.put_Enabled([in] VARIANT_BOOL enabled)
HRESULT None taskschd.put_ExecutionTimeLimit([in] BSTR timelimit)
NET_API_STATUS None netapi32.NetGetAnyDCName(_In_ LPCWSTR servername,_In_ LPCWSTR domainname,_Out_ LPBYTE *bufptr)
HRESULT None None.GetString([in] REFGUID guidKey,[out] LPWSTR pwszValue,[in] UINT32 cchBufSize,[out] UINT32 *pcchLength)
INT None wldap32.ber_flatten(_In_ BerElement *pBerElement,_Out_ PBERVAL *pBerVal)
ULONG None wldap32.ldap_delete_s(_In_ LDAP *ld,_In_ PCHAR dn)
ULONG None wldap32.ldap_delete_sW(_In_ LDAP *ld,_In_ PCHAR dn)
ULONG None wldap32.ldap_delete_sA(_In_ LDAP *ld,_In_ PCHAR dn)
ULONG None wldap32.ldap_add_ext_s(_In_ LDAP *ld,_In_ PCHAR dn,_In_ LDAPMod *attrs[],_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls)
ULONG None wldap32.ldap_add_ext_sW(_In_ LDAP *ld,_In_ PCHAR dn,_In_ LDAPMod *attrs[],_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls)
ULONG None wldap32.ldap_add_ext_sA(_In_ LDAP *ld,_In_ PCHAR dn,_In_ LDAPMod *attrs[],_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls)
NET_API_STATUS None netapi32.NetWkstaGetInfo(_In_ LPWSTR servername,_In_ DWORD level,_Out_ LPBYTE *bufptr)
ULONG None wldap32.ldap_ufn2dn(_In_ PCHAR ufn,_Out_ PCHAR *pDn)
ULONG None wldap32.ldap_ufn2dnW(_In_ PCHAR ufn,_Out_ PCHAR *pDn)
ULONG None wldap32.ldap_ufn2dnA(_In_ PCHAR ufn,_Out_ PCHAR *pDn)
NET_API_STATUS None netapi32.NetRemoveAlternateComputerName(_In_opt_ LPCWSTR Server,_In_ LPCWSTR AlternateName,_In_opt_ LPCWSTR DomainAccount,_In_opt_ LPCWSTR DomainAccountPassword,_In_ ULONG Reserved)
NET_API_STATUS None netapi32.NetLocalGroupGetInfo(_In_ LPCWSTR servername,_In_ LPCWSTR groupname,_In_ DWORD level,_Out_ LPBYTE *bufptr)
DWORD None mpr.WNetUseConnection(_In_ HWND hwndOwner,_In_ LPNETRESOURCE lpNetResource,_In_ LPCTSTR lpPassword,_In_ LPCTSTR lpUserID,_In_ DWORD dwFlags,_Out_ LPTSTR lpAccessName,_Inout_ LPDWORD lpBufferSize,_Out_ LPDWORD lpResult)
DWORD None mpr.WNetUseConnectionW(_In_ HWND hwndOwner,_In_ LPNETRESOURCE lpNetResource,_In_ LPCTSTR lpPassword,_In_ LPCTSTR lpUserID,_In_ DWORD dwFlags,_Out_ LPTSTR lpAccessName,_Inout_ LPDWORD lpBufferSize,_Out_ LPDWORD lpResult)
DWORD None mpr.WNetUseConnectionA(_In_ HWND hwndOwner,_In_ LPNETRESOURCE lpNetResource,_In_ LPCTSTR lpPassword,_In_ LPCTSTR lpUserID,_In_ DWORD dwFlags,_Out_ LPTSTR lpAccessName,_Inout_ LPDWORD lpBufferSize,_Out_ LPDWORD lpResult)
ULONG None wldap32.ldap_simple_bind_s(_In_ LDAP *ld,_In_ PCHAR dn,_In_ PCHAR passwd)
ULONG None wldap32.ldap_simple_bind_sW(_In_ LDAP *ld,_In_ PCHAR dn,_In_ PCHAR passwd)
ULONG None wldap32.ldap_simple_bind_sA(_In_ LDAP *ld,_In_ PCHAR dn,_In_ PCHAR passwd)
PCHAR None wldap32.ldap_next_attribute(_In_ LDAP *ld,_In_ LDAPMessage *entry,_Inout_ BerElement *ptr)
PCHAR None wldap32.ldap_next_attributeW(_In_ LDAP *ld,_In_ LDAPMessage *entry,_Inout_ BerElement *ptr)
PCHAR None wldap32.ldap_next_attributeA(_In_ LDAP *ld,_In_ LDAPMessage *entry,_Inout_ BerElement *ptr)
HRESULT None None.CloseDeviceHandle([in] HANDLE hDevice)
HRESULT None None.GetUINT32([in] REFGUID guidKey,[out] UINT32 *punValue)
HRESULT None None.GetCurrentSource([out] BSTR *ppUrl)
HRESULT None taskschd.Run([in] VARIANT params,[out None None,optional] IRunningTask **ppRunningTask)
HRESULT None None.SetMuted([in] BOOL Muted)
DWORD None mpr.WNetGetProviderName(_In_ DWORD dwNetType,_Out_ LPTSTR lpProviderName,_Inout_ LPDWORD lpBufferSize)
DWORD None mpr.WNetGetProviderNameW(_In_ DWORD dwNetType,_Out_ LPTSTR lpProviderName,_Inout_ LPDWORD lpBufferSize)
DWORD None mpr.WNetGetProviderNameA(_In_ DWORD dwNetType,_Out_ LPTSTR lpProviderName,_Inout_ LPDWORD lpBufferSize)
PSSTDAPI None propsys.PSGetItemPropertyHandlerWithCreateObject(_In_ IUnknown *punkItem,_In_ BOOL fReadWrite,_In_ IUnknown *punkCreateObject,_In_ REFIID riid,_Out_ void **ppv)
NET_API_STATUS None netapi32.NetServerSetInfo(_In_ LPWSTR servername,_In_ DWORD level,_In_ LPBYTE buf,_Out_ LPDWORD ParmError)
void None wldap32.ber_bvecfree(_In_ PBERVAL *pBerVal)
int None wldap32.LdapUTF8ToUnicode(_In_ LPCSTR lpSrcStr,_In_ int cchSrc,_Out_ LPWSTR lpDestStr,_In_ int cchDest)
HRESULT None propsys.PSGetPropertyValue(_In_ IPropertyStore *pps,_In_ IPropertyDescription *ppd,_Out_ PROPVARIANT *ppropvar)
DWORD None mpr.WNetCloseEnum(_In_ HANDLE hEnum)
NET_API_STATUS None netapi32.NetUseEnum(_In_ LMSTR UncServerName,_In_ DWORD Level,_Out_ LPBYTE *BufPtr,_In_ DWORD PreferedMaximumSize,_Out_ LPDWORD EntriesRead,_Out_ LPDWORD TotalEntries,_Inout_ LPDWORD ResumeHandle)
ULONG None wldap32.ldap_msgfree(_In_ LDAPMessage *res)
int None shell32.PifMgr_CloseProperties(_In_ HANDLE hProps,_In_ UINT flOpt)
PCHAR None wldap32.ldap_get_dn(_In_ LDAP *ld,_In_ LDAPMessage *entry)
PCHAR None wldap32.ldap_get_dnW(_In_ LDAP *ld,_In_ LDAPMessage *entry)
PCHAR None wldap32.ldap_get_dnA(_In_ LDAP *ld,_In_ LDAPMessage *entry)
NET_API_STATUS None netapi32.NetServerTransportAddEx(_In_ LPWSTR servername,_In_ DWORD level,_In_ LPBYTE bufptr)
VOID None wldap32.ldap_memfree(_In_ PCHAR Block)
VOID None wldap32.ldap_memfreeW(_In_ PCHAR Block)
VOID None wldap32.ldap_memfreeA(_In_ PCHAR Block)
ULONG None wldap32.ldap_get_paged_count(_In_ PLDAP ExternalHandle,_In_ PLDAPSearch SearchBlock,_Out_ ULONG *TotalCount,_Out_ PLDAPMessage Results)
HRESULT None shell32.SHGetPropertyStoreForWindow(_In_ HWND hwnd,_In_ REFIID riid,_Out_ void **ppv)
ULONG None wldap32.ldap_get_option(_In_ LDAP *ld,_In_ int option,_Out_ void *outvalue)
ULONG None wldap32.ldap_get_optionW(_In_ LDAP *ld,_In_ int option,_Out_ void *outvalue)
ULONG None wldap32.ldap_get_option(_In_ LDAP *ld,_In_ int option,_Out_ void *outvalue)
ULONG None wldap32.ldap_delete(_In_ LDAP *ld,_In_ PCHAR dn)
ULONG None wldap32.ldap_deleteW(_In_ LDAP *ld,_In_ PCHAR dn)
ULONG None wldap32.ldap_deleteA(_In_ LDAP *ld,_In_ PCHAR dn)
HRESULT None None.SetCurrentTime([in] double seekTime)
HRESULT None None.GetNativeVideoSize([out] DWORD *cx,[out] DWORD *cy)
ULONG None wldap32.ldap_add_s(_In_ LDAP *ld,_In_ PCHAR dn,_In_ LDAPMod *attrs[])
ULONG None wldap32.ldap_add_sW(_In_ LDAP *ld,_In_ PCHAR dn,_In_ LDAPMod *attrs[])
ULONG None wldap32.ldap_add_sA(_In_ LDAP *ld,_In_ PCHAR dn,_In_ LDAPMod *attrs[])
HRESULT None None.GetAllocatedBlob([in] REFGUID guidKey,[out] UINT8 **ppBuf,[out] UINT32 *pcbSize)
PSSTDAPI None propsys.PSGetPropertySystem(_In_ REFIID riid,_Out_ void **ppv)
HRESULT NET_API_FUNCTION netapi32.NetGetAadJoinInformation(_In_opt_ LPCWSTR pcszTenantId,_Out_ PDSREG_JOIN_INFO *ppJoinInfo)
ULONG None wldap32.ber_first_element(_In_ BerElement *pBerElement,_Out_ ULONG *pLen,_Out_ CHAR **ppOpaque)
ULONG None wldap32.ldap_add_ext(_In_ LDAP *ld,_In_ PCHAR dn,_In_ LDAPMod *attrs[],_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls,_Out_ ULONG *MessageNumber)
ULONG None wldap32.ldap_add_extW(_In_ LDAP *ld,_In_ PCHAR dn,_In_ LDAPMod *attrs[],_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls,_Out_ ULONG *MessageNumber)
ULONG None wldap32.ldap_add_extA(_In_ LDAP *ld,_In_ PCHAR dn,_In_ LDAPMod *attrs[],_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls,_Out_ ULONG *MessageNumber)
ULONG None wldap32.LdapMapErrorToWin32(_In_ ULONG LdapError)
ULONG None wldap32.ldap_unbind_s(_In_ LDAP *ld)
NET_API_STATUS WINAPI netapi32.NetCreateProvisioningPackage(_In_ PNETSETUP_PROVISIONING_PARAMS pProvisioningParams,_Out_opt_ PBYTE *pPackageBinData,_Out_opt_ DWORD *pdwPackageBinDataSize,_Out_opt_ LPWSTR *pPackageTextData)
ULONG None wldap32.ldap_count_entries(_In_ LDAP *ld,_In_ LDAPMessage *res)
HRESULT None None.SetCurrentTime([in] double seekTime)
NET_API_STATUS None netapi32.NetServerGetInfo(_In_ LPWSTR servername,_In_ DWORD level,_Out_ LPBYTE *bufptr)
HRESULT None propsys.PSStringFromPropertyKey(_In_ REFPROPERTYKEY pkey,_Out_ LPWSTR psz,_In_ UINT cch)
NET_API_STATUS None netapi32.NetServerComputerNameAdd(_In_ LPWSTR ServerName,_In_ LPWSTR EmulatedDomainName,_In_ LPWSTR EmulatedServerName)
ULONG None wldap32.ldap_add(_In_ LDAP *ld,_In_ PCHAR dn,_In_ LDAPMod *attrs[])
ULONG None wldap32.ldap_addW(_In_ LDAP *ld,_In_ PCHAR dn,_In_ LDAPMod *attrs[])
ULONG None wldap32.ldap_addA(_In_ LDAP *ld,_In_ PCHAR dn,_In_ LDAPMod *attrs[])
HRESULT None propsys.PSPropertyKeyFromString(_In_ LPCWSTR pszString,_Out_ PROPERTYKEY *pkey)
HRESULT None propsys.PSCreatePropertyStoreFromObject(_In_ IUnknown *punk,_In_ DWORD grfMode,_In_ REFIID riid,_Out_ void **ppv)
ULONG None wldap32.LdapMapErrorToWin32(_In_ ULONG LdapError)
ULONG None wldap32.ldap_count_entries(_In_ LDAP *ld,_In_ LDAPMessage *res)
HRESULT None taskschd.get_State([out] TASK_STATE *pState)
ULONG None wldap32.ldap_add(_In_ LDAP *ld,_In_ PCHAR dn,_In_ LDAPMod *attrs[])
ULONG None wldap32.ldap_addW(_In_ LDAP *ld,_In_ PCHAR dn,_In_ LDAPMod *attrs[])
ULONG None wldap32.ldap_addA(_In_ LDAP *ld,_In_ PCHAR dn,_In_ LDAPMod *attrs[])
ULONG None wldap32.ldap_search_abandon_page(_In_ PLDAP ExternalHandle,_In_ PLDAPSearch SearchBlock)
ULONG None wldap32.ldap_encode_sort_control(_In_ PLDAP ExternalHandle,_In_ PLDAPSortKey *SortKeys,_Out_ PLDAPControl Control,_In_ BOOLEAN IsCritical)
ULONG None wldap32.ldap_encode_sort_controlW(_In_ PLDAP ExternalHandle,_In_ PLDAPSortKey *SortKeys,_Out_ PLDAPControl Control,_In_ BOOLEAN IsCritical)
ULONG None wldap32.ldap_encode_sort_controlA(_In_ PLDAP ExternalHandle,_In_ PLDAPSortKey *SortKeys,_Out_ PLDAPControl Control,_In_ BOOLEAN IsCritical)
NET_API_STATUS None netapi32.NetScheduleJobGetInfo(_In_opt_ LPCWSTR Servername,_In_ DWORD JobId,_Out_ LPBYTE *PointerToBuffer)
HRESULT None taskschd.RunEx([in] VARIANT params,[in] TASK_RUN_FLAGS flags,[in] LONG sessionID,[in] BSTR user,[out None None,optional] IRunningTask **ppRunningTask)
BOOLEAN _cdecl None.VERIFYSERVERCERT(PLDAP Connection None,PCCERT_CONTEXT *ppServerCert None)
PCHAR None wldap32.ldap_next_attribute(_In_ LDAP *ld,_In_ LDAPMessage *entry,_Inout_ BerElement *ptr)
PCHAR None wldap32.ldap_next_attributeW(_In_ LDAP *ld,_In_ LDAPMessage *entry,_Inout_ BerElement *ptr)
PCHAR None wldap32.ldap_next_attributeA(_In_ LDAP *ld,_In_ LDAPMessage *entry,_Inout_ BerElement *ptr)
ULONG None wldap32.ldap_search_s(_In_ LDAP *ld,_In_ PCHAR base,_In_ ULONG scope,_In_ PCHAR filter,_In_ PCHAR attrs[],_In_ ULONG attrsonly,_Out_ LDAPMessage **res)
ULONG None wldap32.ldap_search_sW(_In_ LDAP *ld,_In_ PCHAR base,_In_ ULONG scope,_In_ PCHAR filter,_In_ PCHAR attrs[],_In_ ULONG attrsonly,_Out_ LDAPMessage **res)
ULONG None wldap32.ldap_search_sA(_In_ LDAP *ld,_In_ PCHAR base,_In_ ULONG scope,_In_ PCHAR filter,_In_ PCHAR attrs[],_In_ ULONG attrsonly,_Out_ LDAPMessage **res)
typedef None None.MI_Result(MI_CALL *MI_Deserializer_ClassObjectNeeded None)
NET_API_STATUS None netapi32.NetGroupSetInfo(_In_ LPCWSTR servername,_In_ LPCWSTR groupname,_In_ DWORD level,_In_ LPBYTE buf,_Out_ LPDWORD parm_err)
ULONG None wldap32.ldap_count_references(_In_ LDAP *ld,_In_ LDAPMessage *res)
ULONG None wldap32.ldap_modrdn2(_In_ LDAP *ExternalHandle,_In_ PCHAR DistinguishedName,_In_ PCHAR NewDistinguishedName,_In_ INT DeleteOldRdn)
ULONG None wldap32.ldap_modrdn2W(_In_ LDAP *ExternalHandle,_In_ PCHAR DistinguishedName,_In_ PCHAR NewDistinguishedName,_In_ INT DeleteOldRdn)
ULONG None wldap32.ldap_modrdn2A(_In_ LDAP *ExternalHandle,_In_ PCHAR DistinguishedName,_In_ PCHAR NewDistinguishedName,_In_ INT DeleteOldRdn)
ULONG None wldap32.ldap_count_values(_In_ PCHAR *vals)
ULONG None wldap32.ldap_count_valuesW(_In_ PCHAR *vals)
ULONG None wldap32.ldap_count_valuesA(_In_ PCHAR *vals)
HRESULT None None.GetPlayed([out] IMFMediaTimeRange **ppPlayed)
HRESULT None propsys.PSCoerceToCanonicalValue(_In_ REFPROPERTYKEY key,_Inout_ PROPVARIANT *ppropvar)
typedef None None.void(MI_CALL *MI_ProviderFT_DeleteInstance None)
ULONG None wldap32.ber_skip_tag(_In_ BerElement *pBerElement,_Out_ ULONG *pLen)
HRESULT None None.SetPlaybackRate([in] double Rate)
HRESULT None taskschd.get_Definition([out] ITaskDefinition **ppDefinition)
HRESULT None taskschd.GetFolder([in] BSTR path,[out] ITaskFolder **ppFolder)
HRESULT None propsys.PSGetPropertyValue(_In_ IPropertyStore *pps,_In_ IPropertyDescription *ppd,_Out_ PROPVARIANT *ppropvar)
ULONG None wldap32.ldap_get_next_page(_In_ PLDAP ExternalHandle,_In_ PLDAPSearch SearchHandle,_In_ ULONG PageSize,_Out_ ULONG *MessageNumber)
PCHAR None wldap32.ldap_err2string(_In_ ULONG err)
PCHAR None wldap32.ldap_err2stringW(_In_ ULONG err)
PCHAR None wldap32.ldap_err2stringA(_In_ ULONG err)
ULONG None wldap32.ldap_unbind(_In_ LDAP *ld)
NET_API_STATUS None netapi32.NetValidatePasswordPolicyFree(_In_ LPVOID *OutputArg)
DWORD None mpr.WNetAddConnection(_In_ LPCTSTR lpRemoteName,_In_ LPCTSTR lpPassword,_In_ LPCTSTR lpLocalName)
DWORD None mpr.WNetAddConnectionW(_In_ LPCTSTR lpRemoteName,_In_ LPCTSTR lpPassword,_In_ LPCTSTR lpLocalName)
DWORD None mpr.WNetAddConnectionA(_In_ LPCTSTR lpRemoteName,_In_ LPCTSTR lpPassword,_In_ LPCTSTR lpLocalName)
ULONG None wldap32.ldap_modrdn2_s(_In_ LDAP *ExternalHandle,_In_ PCHAR DistinguishedName,_In_ PCHAR NewDistinguishedName,_In_ INT DeleteOldRdn)
ULONG None wldap32.ldap_modrdn2_sW(_In_ LDAP *ExternalHandle,_In_ PCHAR DistinguishedName,_In_ PCHAR NewDistinguishedName,_In_ INT DeleteOldRdn)
ULONG None wldap32.ldap_modrdn2_sA(_In_ LDAP *ExternalHandle,_In_ PCHAR DistinguishedName,_In_ PCHAR NewDistinguishedName,_In_ INT DeleteOldRdn)
INT None wldap32.ber_flatten(_In_ BerElement *pBerElement,_Out_ PBERVAL *pBerVal)
DWORD None mpr.WNetGetResourceInformation(_In_ LPNETRESOURCE lpNetResource,_Out_ LPVOID lpBuffer,_Inout_ LPDWORD lpcbBuffer,_Out_ LPTSTR *lplpSystem)
DWORD None mpr.WNetGetResourceInformationW(_In_ LPNETRESOURCE lpNetResource,_Out_ LPVOID lpBuffer,_Inout_ LPDWORD lpcbBuffer,_Out_ LPTSTR *lplpSystem)
DWORD None mpr.WNetGetResourceInformationA(_In_ LPNETRESOURCE lpNetResource,_Out_ LPVOID lpBuffer,_Inout_ LPDWORD lpcbBuffer,_Out_ LPTSTR *lplpSystem)
HRESULT None None.SetErrorCode([in] MF_MEDIA_ENGINE_ERR error)
MI_INLINE MI_ErrorCategory None.MI_Utilities_MapErrorToMiErrorCategory(_In_z_ MI_Char *errorType,MI_Uint32 error None)
ULONG None wldap32.ldap_rename_ext(_In_ LDAP *ld,_In_ PWCHAR dn,_In_ PWCHAR NewRDN,_In_ PWCHAR NewParent,_In_ INT DeleteOldRdn,_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls,_Out_ ULONG *MessageNumber)
ULONG None wldap32.ldap_rename_extW(_In_ LDAP *ld,_In_ PWCHAR dn,_In_ PWCHAR NewRDN,_In_ PWCHAR NewParent,_In_ INT DeleteOldRdn,_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls,_Out_ ULONG *MessageNumber)
ULONG None wldap32.ldap_rename_extA(_In_ LDAP *ld,_In_ PWCHAR dn,_In_ PWCHAR NewRDN,_In_ PWCHAR NewParent,_In_ INT DeleteOldRdn,_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls,_Out_ ULONG *MessageNumber)
ULONG None wldap32.ldap_search_ext(_In_ LDAP *ld,_In_ PCHAR base,_In_ ULONG scope,_In_ PCHAR filter,_In_ PCHAR attrs[],_In_ ULONG attrsonly,_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls,_In_ ULONG TimeLimit,_In_ ULONG SizeLimit,_Out_ ULONG *MessageNumber)
ULONG None wldap32.ldap_search_extW(_In_ LDAP *ld,_In_ PCHAR base,_In_ ULONG scope,_In_ PCHAR filter,_In_ PCHAR attrs[],_In_ ULONG attrsonly,_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls,_In_ ULONG TimeLimit,_In_ ULONG SizeLimit,_Out_ ULONG *MessageNumber)
ULONG None wldap32.ldap_search_extA(_In_ LDAP *ld,_In_ PCHAR base,_In_ ULONG scope,_In_ PCHAR filter,_In_ PCHAR attrs[],_In_ ULONG attrsonly,_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls,_In_ ULONG TimeLimit,_In_ ULONG SizeLimit,_Out_ ULONG *MessageNumber)
BOOLEAN None wldap32.ldap_stop_tls_s(_In_ PLDAP ExternalHandle)
HRESULT None propsys.PSGetPropertyKeyFromName(_In_ PCWSTR pszName,_Out_ PROPERTYKEY *ppropkey)
HRESULT None None.SetVolume([in] double Volume)
BOOLEAN _cdecl None.QUERYCLIENTCERT(_In_ PLDAP Connection,_In_ PSecPkgContext_IssuerListInfoEx trusted_CAs,_Inout_ PCCERT_CONTEXT *ppCertificate)
ULONG None wldap32.ber_next_element(_In_ BerElement *pBerElement,_Inout_ ULONG *pLen,_Inout_ CHAR *opaque)
HRESULT None None.GetCurrentMediaType([out] IMFVideoMediaType **ppMediaType)
PCHAR None wldap32.ldap_dn2ufn(_In_ PCHAR dn)
PCHAR None wldap32.ldap_dn2ufnW(_In_ PCHAR dn)
PCHAR None wldap32.ldap_dn2ufnA(_In_ PCHAR dn)
ULONG None wldap32.ldap_bind(_In_ LDAP *ld,_In_ PCHAR dn,_In_ PCHAR cred,_In_ ULONG method)
ULONG None wldap32.ldap_bindW(_In_ LDAP *ld,_In_ PCHAR dn,_In_ PCHAR cred,_In_ ULONG method)
ULONG None wldap32.ldap_bindA(_In_ LDAP *ld,_In_ PCHAR dn,_In_ PCHAR cred,_In_ ULONG method)
HRESULT None None.GetDeviceID([out] IID *pDeviceID)
ULONG None wldap32.ber_first_element(_In_ BerElement *pBerElement,_Out_ ULONG *pLen,_Out_ CHAR **ppOpaque)
ULONG None wldap32.ldap_close_extended_op(_In_ LDAP *ld,_In_ ULONG MessageNumber)
HRESULT None propsys.PSFormatForDisplayAlloc(_In_ REFPROPERTYKEY key,_In_ REFPROPVARIANT propvar,_In_ PROPDESC_FORMAT_FLAGS pdfFlags,_Out_ PWSTR *ppszDisplay)
HRESULT None taskschd.get_State([out] TASK_STATE *pState)
HRESULT None taskschd.put_XmlText([in] BSTR text)
PSSTDAPI None propsys.PSGetPropertyDescriptionListFromString(_In_ LPCWSTR pszPropList,_In_ REFIID riid,_Out_ void **ppv)
PSSTDAPI None propsys.PSGetPropertyDescriptionListFromString(_In_ LPCWSTR pszPropList,_In_ REFIID riid,_Out_ void **ppv)
ULONG None wldap32.ber_peek_tag(_In_ BerElement *pBerElement,_Out_ ULONG *pLen)
HRESULT None taskschd.get_ConnectedDomain([out] BSTR *pDomain)
HRESULT None None.OnClockSetRate([in] MFTIME hnsSystemTime,[in] float flRate)
HRESULT None taskschd.get_Enabled([out] VARIANT_BOOL *pEnabled)
SerializableAttribute None None.ComVisibleAttribute(true None None)
DWORD None mpr.MultinetGetConnectionPerformance(_In_ LPNETRESOURCE lpNetResource,_Out_ LPNETCONNECTINFOSTRUCT lpNetConnectInfoStruct)
DWORD None mpr.MultinetGetConnectionPerformanceW(_In_ LPNETRESOURCE lpNetResource,_Out_ LPNETCONNECTINFOSTRUCT lpNetConnectInfoStruct)
DWORD None mpr.MultinetGetConnectionPerformanceA(_In_ LPNETRESOURCE lpNetResource,_Out_ LPNETCONNECTINFOSTRUCT lpNetConnectInfoStruct)
INT None wldap32.ber_printf(_Inout_ BerElement *pBerElement,_In_ PCHAR fmt,_In_ ... None)
HRESULT None None.SerializePropVariantAsString(const PROPVARIANT *ppropvar,PWSTR *pszOut None)
ULONG None wldap32.ldap_modrdn(_In_ LDAP *ExternalHandle,_In_ PCHAR DistinguishedName,_Out_ PCHAR NewDistinguishedName)
ULONG None wldap32.ldap_modrdnW(_In_ LDAP *ExternalHandle,_In_ PCHAR DistinguishedName,_Out_ PCHAR NewDistinguishedName)
ULONG None wldap32.ldap_modrdnA(_In_ LDAP *ExternalHandle,_In_ PCHAR DistinguishedName,_Out_ PCHAR NewDistinguishedName)
int None wldap32.LdapUnicodeToUTF8(_In_ LPCWSTR lpSrcStr,_In_ int cchSrc,_Out_ LPSTR lpDestStr,_In_ int cchDest)
ULONG None wldap32.ldap_delete_ext_s(_In_ LDAP *ld,_In_ PCHAR dn,_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls)
ULONG None wldap32.ldap_delete_ext_sW(_In_ LDAP *ld,_In_ PCHAR dn,_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls)
ULONG None wldap32.ldap_delete_ext_sA(_In_ LDAP *ld,_In_ PCHAR dn,_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls)
ULONG None wldap32.ldap_start_tls_s(_In_ PLDAP ExternalHandle,_Out_ PULONG ServerReturnValue,_Out_ LDAPMessage **result,_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls)
ULONG None wldap32.ldap_start_tls_sW(_In_ PLDAP ExternalHandle,_Out_ PULONG ServerReturnValue,_Out_ LDAPMessage **result,_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls)
ULONG None wldap32.ldap_start_tls_sA(_In_ PLDAP ExternalHandle,_Out_ PULONG ServerReturnValue,_Out_ LDAPMessage **result,_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls)
HRESULT None propsys.PSFormatForDisplay(_In_ REFPROPERTYKEY propkey,_In_ REFPROPVARIANT propvar,_In_ PROPDESC_FORMAT_FLAGS pdfFlags,_Out_ LPWSTR pwszText,_In_ DWORD cchText)
void None wldap32.ber_bvfree(_In_ BERVAL *pBerVal)
MFVideoArea None None.MakeArea(float x None,float y None,DWORD width None,DWORD height None)
ULONG LDAPAPI wldap32.ldap_cleanup(HANDLE hInstance None)
NET_API_STATUS None netapi32.NetUserChangePassword(_In_ LPCWSTR domainname,_In_ LPCWSTR username,_In_ LPCWSTR oldpassword,_In_ LPCWSTR newpassword)
HRESULT None None.GetUnknown([in] REFGUID guidKey,[in] REFIID riid,[out] LPVOID *ppv)
HRESULT None propsys.PSSetPropertyValue(_In_ IPropertyStore *pps,_In_ IPropertyDescription *ppd,_In_ REFPROPVARIANT propvar)
HRESULT None propsys.PSCreateMultiplexPropertyStore(_In_ IUnknown **prgpunkStores,_In_ DWORD cStores,_In_ REFIID riid,_Out_ void **ppv)
NET_API_STATUS None netapi32.NetGetJoinableOUs(_In_ LPCWSTR lpServer,_In_ LPCWSTR lpDomain,_In_ LPCWSTR lpAccount,_In_ LPCWSTR lpPassword,_Out_ DWORD *OUCount,_Out_ LPWSTR **OUs)
ULONG None wldap32.ldap_check_filter(_In_ LDAP *ld,_In_ PWCHAR SearchFilter)
ULONG None wldap32.ldap_check_filterW(_In_ LDAP *ld,_In_ PWCHAR SearchFilter)
ULONG None wldap32.ldap_check_filterA(_In_ LDAP *ld,_In_ PWCHAR SearchFilter)
HRESULT None None.SetAutoPlay([in] BOOL AutoPlay)
HRESULT None taskschd.put_Source([in] BSTR uri)
HRESULT None None.GetBuffered([out] IMFMediaTimeRange **ppBuffered)
PSSTDAPI None propsys.PSEnumeratePropertyDescriptions(_In_ PROPDESC_ENUMFILTER filterOn,_In_ REFIID riid,_Out_ void **ppv)
HRESULT None propsys.PSRegisterPropertySchema(_In_ PCWSTR pszPath)
ULONG None wldap32.LdapGetLastError(void None None)
PSSTDAPI None propsys.PSEnumeratePropertyDescriptions(_In_ PROPDESC_ENUMFILTER filterOn,_In_ REFIID riid,_Out_ void **ppv)
HRESULT None taskschd.get_TargetServer([out] BSTR *pServer)
ULONG None wldap32.ldap_modify_ext(_In_ LDAP *ld,_In_ PCHAR dn,_In_ LDAPMod *mods[],_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls,_Out_ ULONG *MessageNumber)
ULONG None wldap32.ldap_modify_extW(_In_ LDAP *ld,_In_ PCHAR dn,_In_ LDAPMod *mods[],_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls,_Out_ ULONG *MessageNumber)
ULONG None wldap32.ldap_modify_extA(_In_ LDAP *ld,_In_ PCHAR dn,_In_ LDAPMod *mods[],_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls,_Out_ ULONG *MessageNumber)
HRESULT None taskschd.put_RunOnlyIfIdle([in] VARIANT_BOOL runOnlyIfIdle)
HRESULT None propsys.PSPropertyBag_ReadRECTL(_In_ IPropertyBag *propBag,_In_ LPCWSTR propName,_Out_ RECTL *value)
typedef None None.ULONG(_cdecl QUERYFORCONNECTION None)
ULONG None wldap32.ldap_control_free(_In_ LDAPControl *Control)
ULONG None wldap32.ldap_control_freeW(_In_ LDAPControl *Control)
ULONG None wldap32.ldap_control_freeA(_In_ LDAPControl *Control)
ULONG None wldap32.ldap_create_sort_control(_In_ PLDAP ExternalHandle,_In_ PLDAPSortKey *SortKeys,_In_ UCHAR IsCritical,_Out_ PLDAPControl *Control)
ULONG None wldap32.ldap_create_sort_controlW(_In_ PLDAP ExternalHandle,_In_ PLDAPSortKey *SortKeys,_In_ UCHAR IsCritical,_Out_ PLDAPControl *Control)
ULONG None wldap32.ldap_create_sort_controlA(_In_ PLDAP ExternalHandle,_In_ PLDAPSortKey *SortKeys,_In_ UCHAR IsCritical,_Out_ PLDAPControl *Control)
HRESULT None taskschd.RegisterTaskDefinition([in] BSTR path,[in] ITaskDefinition *pDefinition,[in] LONG flags,[in] VARIANT userId,[in] VARIANT password,[in] TASK_LOGON_TYPE logonType,[in None None,optional] VARIANT sddl,[out] IRegisteredTask **ppTask)
HRESULT None None.GetUnknown([in] REFGUID guidKey,[in] REFIID riid,[out] LPVOID *ppv)
HRESULT None taskschd.put_StartBoundary([in] BSTR start)
HRESULT None taskschd.Create([in] TASK_TRIGGER_TYPE2 type,[out] ITrigger **ppTrigger)
NET_API_STATUS None netapi32.NetGetJoinableOUs(_In_ LPCWSTR lpServer,_In_ LPCWSTR lpDomain,_In_ LPCWSTR lpAccount,_In_ LPCWSTR lpPassword,_Out_ DWORD *OUCount,_Out_ LPWSTR **OUs)
NET_API_STATUS WINAPI netapi32.NetRequestProvisioningPackageInstall(_In_ BYTE *pPackageBinData,_In_ DWORD dwPackageBinDataSize,_In_ DWORD dwProvisionOptions,_In_ LPCWSTR lpWindowsPath,_Reserved_ PVOID pvReserved)
void None wldap32.ber_free(_In_ BerElement *pBerElement,_In_ INT fbuf)
HRESULT None taskschd.put_MultipleInstances([in] TASK_INSTANCES_POLICY policy)
HRESULT None None.CanPlayType([in] BSTR type,[out] MF_MEDIA_ENGINE_CANPLAY *pAnswer)
int None shell32.PifMgr_GetProperties(_In_opt_ HANDLE hProps,_In_opt_ PCSTR pszGroup,_Out_opt_ void *lpProps,int cbProps None,UINT flOpt None)
ULONG None wldap32.ldap_modify_ext_s(_In_ LDAP *ld,_In_ PCHAR dn,_In_ LDAPMod *mods[],_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls)
ULONG None wldap32.ldap_modify_ext_sW(_In_ LDAP *ld,_In_ PCHAR dn,_In_ LDAPMod *mods[],_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls)
ULONG None wldap32.ldap_modify_ext_sA(_In_ LDAP *ld,_In_ PCHAR dn,_In_ LDAPMod *mods[],_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls)
HRESULT None None.GetTopologyFromEvent(IMFMediaEvent *pEvent None,IMFTopology **ppTopology None)
HRESULT None propsys.PropVariantToString(_In_ REFPROPVARIANT propvar,_Out_ PWSTR psz,_In_ UINT cch)
HRESULT None None.GetBufferProgress(IMFMediaSession *pSession None,DWORD *pProgress None)
DWORD None mpr.WNetGetResourceParent(_In_ LPNETRESOURCE lpNetResource,_Out_ LPVOID lpBuffer,_Inout_ LPDWORD lpcbBuffer)
DWORD None mpr.WNetGetResourceParentW(_In_ LPNETRESOURCE lpNetResource,_Out_ LPVOID lpBuffer,_Inout_ LPDWORD lpcbBuffer)
DWORD None mpr.WNetGetResourceParentA(_In_ LPNETRESOURCE lpNetResource,_Out_ LPVOID lpBuffer,_Inout_ LPDWORD lpcbBuffer)
HRESULT None taskschd.get_ConnectedDomain([out] BSTR *pDomain)
PCHAR None wldap32.ldap_first_attribute(_In_ LDAP *ld,_In_ LDAPMessage *entry,_Out_ BerElement **ptr)
PCHAR None wldap32.ldap_first_attributeW(_In_ LDAP *ld,_In_ LDAPMessage *entry,_Out_ BerElement **ptr)
PCHAR None wldap32.ldap_first_attributeA(_In_ LDAP *ld,_In_ LDAPMessage *entry,_Out_ BerElement **ptr)
HRESULT None None.EnumerateTypesForStream(IMFSourceReader *pReader None,DWORD dwStreamIndex None)
ULONG None wldap32.ldap_value_free(PCHAR *vals None)
ULONG None wldap32.ldap_value_freeW(PCHAR *vals None)
ULONG None wldap32.ldap_value_freeA(PCHAR *vals None)
HRESULT None ole32.Commit([in] DWORD grfCommitFlags)
HRESULT None taskschd.put_RestartInterval([in] BSTR restartInterval)
ULONG None wldap32.ldap_set_option(_In_ LDAP *ld,_In_ int option,_In_ void *invalue)
ULONG None wldap32.ldap_set_optionW(_In_ LDAP *ld,_In_ int option,_In_ void *invalue)
ULONG None wldap32.ldap_set_option(_In_ LDAP *ld,_In_ int option,_In_ void *invalue)
HRESULT None taskschd.Create([in] TASK_TRIGGER_TYPE2 type,[out] ITrigger **ppTrigger)
HRESULT None taskschd.put_AllowHardTerminate([in] VARIANT_BOOL allowHardTerminate)
INT None wldap32.ber_scanf(_Inout_ BerElement *pBerElement,_In_ PCHAR fmt,_In_ ... None)
HRESULT None propsys.PSUnregisterPropertySchema(_In_ PCWSTR pszPath)
HRESULT None taskschd.put_Source([in] BSTR source)
HRESULT None ole32.SetSize([in] ULARGE_INTEGER libNewSize)
HRESULT None propsys.PropVariantGetFileTimeElem(_In_ REFPROPVARIANT propvar,_In_ ULONG iElem,_Out_ FILETIME *pftVal)
ULONG None wldap32.ldap_delete_ext(_In_ LDAP *ld,_In_ PCHAR dn,_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls,_Out_ ULONG *MessageNumber)
ULONG None wldap32.ldap_delete_extW(_In_ LDAP *ld,_In_ PCHAR dn,_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls,_Out_ ULONG *MessageNumber)
ULONG None wldap32.ldap_delete_extA(_In_ LDAP *ld,_In_ PCHAR dn,_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls,_Out_ ULONG *MessageNumber)
HRESULT None propsys.EnumeratePropertyDescriptions([in] PROPDESC_ENUMFILTER filterOn,[in] REFIID riid,[out] void **ppv)
BOOLEAN _cdecl None.QUERYCLIENTCERT(_In_ PLDAP Connection,_In_ PSecPkgContext_IssuerListInfoEx trusted_CAs,_Inout_ PCCERT_CONTEXT *ppCertificate)
ULONG None wldap32.ldap_controls_free(_In_ LDAPControl **Controls)
ULONG None wldap32.ldap_controls_freeW(_In_ LDAPControl **Controls)
ULONG None wldap32.ldap_controls_freeA(_In_ LDAPControl **Controls)
HRESULT None None.OnGroupingParamChanged([in] LPCGUID NewGroupingParam,[in] LPCGUID EventContext)
HANDLE None shell32.PifMgr_OpenProperties(_In_ PCWSTR pszApp,_In_opt_ PCWSTR lpszPIF,UINT hInf None,UINT flOpt None)
HRESULT None propsys.PSGetNameFromPropertyKey(_In_ REFPROPERTYKEY propkey,_Out_ PWSTR *ppszCanonicalName)
HRESULT None propsys.PSCreateAdapterFromPropertyStore(_In_ IPropertyStore *pps,_In_ REFIID riid,_Out_ void **ppv)
HRESULT None taskschd.put_DeleteExpiredTaskAfter([in] BSTR expirationDelay)
HRESULT None shell32.SHAddDefaultPropertiesByExt(_In_ PCWSTR pszExt,_In_ IPropertyStore *pPropStore)
HRESULT None propsys.PSPropertyBag_WriteSHORT(_In_ IPropertyBag *propBag,_In_ LPCWSTR propName,_In_ SHORT value)
PSSTDAPI None propsys.PSGetPropertyDescriptionByName(_In_ LPCWSTR pszCanonicalName,_In_ REFIID riid,_Out_ void **ppv)
PSSTDAPI None propsys.GetPropertyDescriptionByName([in] LPCWSTR pszCanonicalName,[in] REFIID riid,[out] void **ppv)
ULONG None wldap32.ldap_parse_result(_In_ LDAP *Connection,_In_ LDAPMessage *ResultMessage,_Out_opt_ ULONG *ReturnCode,_Out_opt_ PWCHAR *MatchedDNs,_Out_opt_ PWCHAR *ErrorMessage,_Out_opt_ PWCHAR **Referrals,_Out_opt_ PLDAPControl **ServerControls,_In_ BOOLEAN Freeit)
ULONG None wldap32.ldap_parse_resultW(_In_ LDAP *Connection,_In_ LDAPMessage *ResultMessage,_Out_opt_ ULONG *ReturnCode,_Out_opt_ PWCHAR *MatchedDNs,_Out_opt_ PWCHAR *ErrorMessage,_Out_opt_ PWCHAR **Referrals,_Out_opt_ PLDAPControl **ServerControls,_In_ BOOLEAN Freeit)
ULONG None wldap32.ldap_parse_resultA(_In_ LDAP *Connection,_In_ LDAPMessage *ResultMessage,_Out_opt_ ULONG *ReturnCode,_Out_opt_ PWCHAR *MatchedDNs,_Out_opt_ PWCHAR *ErrorMessage,_Out_opt_ PWCHAR **Referrals,_Out_opt_ PLDAPControl **ServerControls,_In_ BOOLEAN Freeit)
BOOL None None.IsVarTypeInteger(_In_ VARTYPE vt)
HRESULT None None.GetUnknown([in] REFGUID guidKey,[in] REFIID riid,[out] LPVOID *ppv)
NET_API_STATUS WINAPI netapi32.NetShareDelEx(_In_ LMSTR servername,_In_ DWORD level,_In_ LPBYTE buf)
ULONG None wldap32.ldap_compare_s(_In_ LDAP *ld,_In_ PCHAR dn,_In_ PCHAR attr,_In_ PCHAR value)
ULONG None wldap32.ldap_compare_sW(_In_ LDAP *ld,_In_ PCHAR dn,_In_ PCHAR attr,_In_ PCHAR value)
ULONG None wldap32.ldap_compare_sA(_In_ LDAP *ld,_In_ PCHAR dn,_In_ PCHAR attr,_In_ PCHAR value)
HRESULT None taskschd.put_DisplayName([in] BSTR name)
HRESULT None taskschd.get_Item([in] long index,[out] ITrigger **ppTrigger)
HRESULT None taskschd.put_EndBoundary([in] BSTR end)
PSSTDAPI None propsys.PSGetPropertyDescription(_In_ REFPROPERTYKEY propkey,_In_ REFIID riid,_Out_ void **ppv)
HRESULT None None.InitializeRenderer([in] IMFTransform *pVideoMixer,[in] IMFVideoPresenter *pVideoPresenter)
ULONG None wldap32.ldap_rename_ext_s(_In_ LDAP *ld,_In_ PWCHAR dn,_In_ PWCHAR NewRDN,_In_ PWCHAR NewParent,_In_ INT DeleteOldRdn,_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls)
ULONG None wldap32.ldap_rename_ext_sW(_In_ LDAP *ld,_In_ PWCHAR dn,_In_ PWCHAR NewRDN,_In_ PWCHAR NewParent,_In_ INT DeleteOldRdn,_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls)
ULONG None wldap32.ldap_rename_ext_sA(_In_ LDAP *ld,_In_ PWCHAR dn,_In_ PWCHAR NewRDN,_In_ PWCHAR NewParent,_In_ INT DeleteOldRdn,_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls)
ULONG None wldap32.ldap_search(_In_ LDAP *ld,_In_ PCHAR base,_In_ ULONG scope,_In_ PCHAR filter,_In_ PCHAR attrs[],_In_ ULONG attrsonly)
ULONG None wldap32.ldap_searchW(_In_ LDAP *ld,_In_ PCHAR base,_In_ ULONG scope,_In_ PCHAR filter,_In_ PCHAR attrs[],_In_ ULONG attrsonly)
ULONG None wldap32.ldap_searchA(_In_ LDAP *ld,_In_ PCHAR base,_In_ ULONG scope,_In_ PCHAR filter,_In_ PCHAR attrs[],_In_ ULONG attrsonly)
HRESULT None taskschd.get_Type([out] TASK_TRIGGER_TYPE2 *pType)
HRESULT None shell32.SHGetPropertyStoreFromIDList(_In_ PCIDLIST_ABSOLUTE pidl,_In_ GETPROPERTYSTOREFLAGS flags,_In_ REFIID riid,_Out_ void **ppv)
PSSTDAPI None propsys.PSGetPropertyFromPropertyStorage(_In_ PCUSERIALIZEDPROPSTORAGE psps,_In_ DWORD cb,_In_ REFPROPERTYKEY rpkey,_Out_ PROPVARIANT **ppropvar)
LONG None propsys.PropVariantToInt32WithDefault(_In_ REFPROPVARIANT propvarIn,_In_ LONG lDefault)
PSSTDAPI None propsys.PSGetNamedPropertyFromPropertyStorage(_In_ PCUSERIALIZEDPROPSTORAGE psps,_In_ DWORD cb,_In_ LPCWSTR pszName,_Out_ PROPVARIANT *ppropvar)
HRESULT None oleaut32.CreateStdDispatch(IUnknown *punkOuter None,void *pvThis None,ITypeInfo *ptinfo None,IUnknown **ppunkStdDisp None)
INT None wldap32.ldap_create_vlv_control(_In_ LDAP *ld,_In_ LDAPVLVInfo *Vlvinfop,_In_ char IsCritical,_Out_ LDAPControl **ctrlp)
INT None wldap32.ldap_create_vlv_controlW(_In_ LDAP *ld,_In_ LDAPVLVInfo *Vlvinfop,_In_ char IsCritical,_Out_ LDAPControl **ctrlp)
INT None wldap32.ldap_create_vlv_controlA(_In_ LDAP *ld,_In_ LDAPVLVInfo *Vlvinfop,_In_ char IsCritical,_Out_ LDAPControl **ctrlp)
HRESULT None taskschd.put_DeleteExpiredTaskAfter([in] BSTR expirationDelay)
BOOL None None.IsVarTypeFloat(_In_ VARTYPE vt)
INT None propsys.VariantCompare(_In_ REFVARIANT var1,_In_ REFVARIANT var2)
DWORD None mpr.WNetGetUniversalName(_In_ LPCTSTR lpLocalPath,_In_ DWORD dwInfoLevel,_Out_ LPVOID lpBuffer,_Inout_ LPDWORD lpBufferSize)
DWORD None mpr.WNetGetUniversalNameW(_In_ LPCTSTR lpLocalPath,_In_ DWORD dwInfoLevel,_Out_ LPVOID lpBuffer,_Inout_ LPDWORD lpBufferSize)
DWORD None mpr.WNetGetUniversalNameA(_In_ LPCTSTR lpLocalPath,_In_ DWORD dwInfoLevel,_Out_ LPVOID lpBuffer,_Inout_ LPDWORD lpBufferSize)
ULONG None wldap32.ldap_parse_reference(_In_ LDAP *Connection,_In_ LDAPMessage *ResultMessage,_Out_ PCHAR **Referrals)
ULONG None wldap32.ldap_parse_referenceW(_In_ LDAP *Connection,_In_ LDAPMessage *ResultMessage,_Out_ PCHAR **Referrals)
ULONG None wldap32.ldap_parse_referenceA(_In_ LDAP *Connection,_In_ LDAPMessage *ResultMessage,_Out_ PCHAR **Referrals)
ULONG None wldap32.ldap_connect(_In_ LDAP *ld,_In_ LDAP_TIMEVAL *timeout)
ULONG None propsys.VariantGetElementCount(_In_ REFVARIANT varIn)
HRESULT None propsys.PSFormatPropertyValue(_In_ IPropertyStore *pps,_In_ IPropertyDescription *ppd,_In_ PROPDESC_FORMAT_FLAGS pdff,_Out_ LPWSTR *ppszDisplay)
HRESULT None taskschd.get_LastTaskResult([out] HRESULT *pLastTaskResult)
PSSTDAPI None propsys.PSGetItemPropertyHandler(_In_ IUnknown *punkItem,_In_ BOOL fReadWrite,_In_ REFIID riid,_Out_ void **ppv)
DOUBLE None propsys.PropVariantToDoubleWithDefault(_In_ REFPROPVARIANT propvarIn,_In_ DOUBLE dblDefault)
HRESULT None taskschd.put_StartWhenAvailable([in] VARIANT_BOOL startWhenAvailable)
HRESULT None propsys.InitPropVariantFromCLSID(_In_ REFCLSID clsid,_Out_ PROPVARIANT *ppropvar)
HRESULT None taskschd.get_NumberOfMissedRuns([out] DWORD *pNumberOfMissedRuns)
HRESULT None propsys.PSPropertyBag_WriteBSTR(_In_ IPropertyBag *propBag,_In_ LPCWSTR propName,_In_ BSTR value)
HRESULT None propsys.PSCreatePropertyStoreFromPropertySetStorage(_In_ IPropertySetStorage *ppss,_In_ DWORD grfMode,_In_ REFIID riid,_Out_ void **ppv)
HRESULT None propsys.PSPropertyBag_WriteStr(_In_ IPropertyBag *propBag,_In_ LPCWSTR propName,_In_ LPCWSTR value)
HRESULT None propsys.PSPropertyBag_ReadULONGLONG(_In_ IPropertyBag *propBag,_In_ LPCWSTR propName,_Out_ ULONGLONG value)
HRESULT None propsys.PropVariantToUInt16VectorAlloc(_In_ REFPROPVARIANT propvar,_Out_ USHORT **pprgn,_Out_ ULONG *pcElem)
HRESULT None propsys.PSPropertyBag_ReadPOINTS(_In_ IPropertyBag *propBag,_In_ LPCWSTR propName,_Out_ POINTS *value)
HRESULT None None.InitPropVariantFromInt32(_In_ LONG lVal,_Out_ PROPVARIANT *ppropvar)
ULONG None wldap32.ldap_rename_ext(_In_ LDAP *ld,_In_ PWCHAR dn,_In_ PWCHAR NewRDN,_In_ PWCHAR NewParent,_In_ INT DeleteOldRdn,_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls,_Out_ ULONG *MessageNumber)
ULONG None wldap32.ldap_rename_extW(_In_ LDAP *ld,_In_ PWCHAR dn,_In_ PWCHAR NewRDN,_In_ PWCHAR NewParent,_In_ INT DeleteOldRdn,_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls,_Out_ ULONG *MessageNumber)
ULONG None wldap32.ldap_rename_extA(_In_ LDAP *ld,_In_ PWCHAR dn,_In_ PWCHAR NewRDN,_In_ PWCHAR NewParent,_In_ INT DeleteOldRdn,_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls,_Out_ ULONG *MessageNumber)
HRESULT None propsys.PSCreateSimplePropertyChange(_In_ PKA_FLAGS flags,_In_ REFPROPERTYKEY key,_In_ REFPROPVARIANT propvar,_In_ REFIID riid,_Out_ void **ppv)
HRESULT None propsys.VariantToUInt16(_In_ REFVARIANT varIn,_Out_ USHORT *puiRet)
HRESULT None propsys.PSPropertyBag_ReadType(_In_ IPropertyBag *propBag,_In_ LPCWSTR propName,_Out_ VARIANT *var,_Out_ VARTYPE *type)
HRESULT None None.InitPropVariantFromInt64(_In_ LONGLONG llVal,_Out_ PROPVARIANT *ppropvar)
HRESULT None ole32.Enum([out] IEnumSTATPROPSTG **ppenum)
HRESULT None xenroll.put_LimitExchangeKeyToEncipherment([in] BOOL bValue)
BOOL None None.IsVarTypeUnsignedInteger(_In_ VARTYPE vt)
HRESULT None None.FormatForDisplayAlloc([in] REFPROPERTYKEY key,[in] REFPROPVARIANT propvar,[in] PROPDESC_FORMAT_FLAGS pdff,[out] LPWSTR *ppszDisplay)
HRESULT None xenroll.GetSupportedKeySpec([out] LONG *pdwKeySpec)
HRESULT None propsys.InitPropVariantVectorFromPropVariant(_In_ REFPROPVARIANT propvarSingle,_Out_ PROPVARIANT *ppropvarVector)
HRESULT None propsys.VariantGetInt32Elem(_In_ REFVARIANT var,_In_ ULONG iElem,_Out_ LONG *pnVal)
HRESULT None propsys.PropVariantToInt64Vector(_In_ REFPROPVARIANT propvar,_Out_ LONGLONG *prgn,_In_ ULONG crgn,_Out_ ULONG *pcElem)
HRESULT None taskschd.get_Type([out] TASK_TRIGGER_TYPE2 *pType)
BOOL None gdi32.DeleteDC(_In_ HDC hdc)
HRESULT None None.InitVariantFromInt16(_In_ SHORT iVal,_Out_ VARIANT *pvar)
HRESULT None propsys.VariantToStringArray(_In_ REFVARIANT var,_Out_ PWSTR *prgsz,_In_ ULONG crgsz,_Out_ ULONG *pcElem)
HRESULT None None.Hash([out] DWORD *pdwHash)
HRESULT None xenroll.put_HashAlgorithm([in] BSTR HashAlg)
ULONG None wldap32.ldap_value_free(PCHAR *vals None)
ULONG None wldap32.ldap_value_freeW(PCHAR *vals None)
ULONG None wldap32.ldap_value_freeA(PCHAR *vals None)
HRESULT None None.DXVAHD_SetSourceRect(IDXVAHD_VideoProcessor *pVP None,UINT stream None,BOOL bEnable None,const RECT rect)
DOUBLE None propsys.VariantToDoubleWithDefault(_In_ REFVARIANT varIn,_In_ DOUBLE dblDefault)
HRESULT None None.CheckMediaType(AM_MEDIA_TYPE *pmt None)
HRESULT None None.GetPropertyStorage([out] SERIALIZEDPROPSTORAGE **ppsps,[out] DWORD *pcb)
HRESULT None taskschd.put_To([in] BSTR to)
HRESULT None None.VariantGetElem(_In_ REFVARIANT varIn,_In_ ULONG iElem,_Out_ VARIANT *pvar)
HRESULT None propsys.VariantToBoolean(_In_ REFVARIANT varIn,_Out_ BOOL *pfRet)
BOOL None None.IsVarTypeNumber(_In_ VARTYPE vt)
HRESULT None propsys.VariantToBoolean(_In_ REFVARIANT varIn,_Out_ BOOL *pfRet)
ULONG None wldap32.ldap_modify_ext_s(_In_ LDAP *ld,_In_ PCHAR dn,_In_ LDAPMod *mods[],_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls)
ULONG None wldap32.ldap_modify_ext_sW(_In_ LDAP *ld,_In_ PCHAR dn,_In_ LDAPMod *mods[],_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls)
ULONG None wldap32.ldap_modify_ext_sA(_In_ LDAP *ld,_In_ PCHAR dn,_In_ LDAPMod *mods[],_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls)
HRESULT None None.InitVariantFromDosDateTime(_In_ WORD wDate,_In_ WORD wTime,_Out_ VARIANT *pvar)
HRESULT None propsys.VariantToBuffer(_In_ REFVARIANT varIn,_Out_ VOID *pv,_In_ UINT cb)
HRESULT None propsys.PSPropertyBag_WriteInt(_In_ IPropertyBag *propBag,_In_ LPCWSTR propName,_In_ int value)
HRESULT None taskschd.put_RestartCount([in] int restartCount)
HRESULT None propsys.PSPropertyBag_WriteInt(_In_ IPropertyBag *propBag,_In_ LPCWSTR propName,_In_ int value)
USHORT None propsys.VariantToUInt16WithDefault(_In_ REFVARIANT varIn,_In_ USHORT uiDefault)
HRESULT None None.InitPropVariantFromGUIDAsBuffer(_In_ REFGUID guid,_Out_ PROPVARIANT *ppropvar)
HRESULT None None.GetVideoProcessorCaps([in] UINT Count,[out] DXVAHD_VPCAPS *pCaps)
HRESULT None propsys.PSPropertyBag_ReadUnknown(_In_ IPropertyBag *propBag,_In_ LPCWSTR propName,_In_ REFIID riid,_Out_ void **ppv)
HRESULT None None.InitPropVariantFromGUIDAsBuffer(_In_ REFGUID guid,_Out_ PROPVARIANT *ppropvar)
HRESULT None propsys.InitVariantFromResource(_In_ HINSTANCE hinst,_In_ UINT id,_Out_ VARIANT *pvar)
HRESULT None xenroll.createPKCS10([in] BSTR DNName,[in] BSTR Usage,[in] BSTR *pPKCS10)
HRESULT None xenroll.put_WriteCertToUserDS([in] BOOL bValue)
HRESULT None xenroll.put_RequestStoreFlags([in] LONG Flags)
HRESULT None None.InitPropVariantFromBoolean(_In_ BOOL fVal,_Out_ PROPVARIANT *ppropvar)
HRESULT None propsys.VariantGetUInt64Elem(_In_ REFVARIANT var,_In_ ULONG iElem,_Out_ ULONGLONG *pnVal)
NTSTATUS None advapi32.LsaRemoveAccountRights(_In_ LSA_HANDLE PolicyHandle,_In_ PSID AccountSid,_In_ BOOLEAN AllRights,_In_ PLSA_UNICODE_STRING UserRights,_In_ ULONG CountOfRights)
HRESULT None None.InitPropVariantFromInt16(_In_ SHORT nVal,_Out_ PROPVARIANT *ppropvar)
HRESULT None propsys.PropVariantGetUInt64Elem(_In_ REFPROPVARIANT propvar,_In_ ULONG iElem,_Out_ ULONGLONG *pnVal)
HRESULT None propsys.InitPropVariantFromResource(_In_ HINSTANCE hinst,_In_ UINT id,_Out_ PROPVARIANT *ppropvar)
UINT None oledlg.OleUIEditLinks(_In_ LPOLEUIEDITLINKS lpEL)
UINT None oledlg.OleUIEditLinksW(_In_ LPOLEUIEDITLINKS lpEL)
UINT None oledlg.OleUIEditLinksA(_In_ LPOLEUIEDITLINKS lpEL)
HRESULT None propsys.VariantToUInt32(_In_ REFVARIANT varIn,_Out_ ULONG *pulRet)
HRESULT None propsys.PropVariantToUInt64Vector(_In_ REFPROPVARIANT propvar,_Out_ ULONGLONG *prgn,_In_ ULONG crgn,_Out_ ULONG *pcElem)
HRESULT None propsys.VariantGetInt16Elem(_In_ REFVARIANT var,_In_ ULONG iElem,_Out_ SHORT *pnVal)
HRESULT None None.SetMediaStopDynamic(IMFMediaSession *pSession None,IMFTopology *pTopology None,const LONGLONG stop)
HRESULT None None.InitVariantFromBoolean(_In_ BOOL fVal,_Out_ VARIANT *pvar)
HRESULT None None.InitPropVariantFromDouble(_In_ DOUBLE dblVal,_Out_ PROPVARIANT *ppropvar)
HRESULT None None.SetUpdateOptions([in] DWORD dwUpdateOpt)
ULONGLONG None propsys.PropVariantToUInt64WithDefault(_In_ REFPROPVARIANT propvarIn,_In_ ULONGLONG ullDefault)
HRESULT None propsys.PropVariantToUInt32(_In_ REFPROPVARIANT propvarIn,_Out_ ULONG *pulRet)
BOOL WINAPI advapi32.SaferRecordEventLogEntry(_In_ SAFER_LEVEL_HANDLE hLevel,_In_ LPCWSTR szTargetPath,_Reserved_ LPVOID lpReserved)
HRESULT None propsys.PropVariantGetInt64Elem(_In_ REFPROPVARIANT propvar,_In_ ULONG iElem,_Out_ LONGLONG *pnVal)
HRESULT None xenroll.put_MyStoreType([in] BSTR Type)
HRESULT None propsys.InitVariantFromStringArray(_In_ PCWSTR *prgsz,_In_ ULONG cElems,_Out_ VARIANT *pvar)
MFOffset None None.MakeOffset(float v None)
HRESULT None propsys.PSPropertyBag_Delete(_In_ IPropertyBag *propBag,_In_ LPCWSTR propName)
HRESULT None None.InitVariantFromInt32(_In_ LONG lVal,_Out_ VARIANT *pvar)
HRESULT None None.ProcessOutput([in] DWORD dwFlags,[in] DWORD cOutputBufferCount,[in None None,out] MFT_OUTPUT_DATA_BUFFER *pOutputSamples,[out] DWORD *pdwStatus)
HRESULT None xenroll.put_RequestStoreFlags([in] LONG Flags)
HRESULT None None.Inverse([out] IMoniker **ppmk)
HRESULT None propsys.VariantToDoubleArray(_In_ REFVARIANT var,_Out_ DOUBLE *prgn,_In_ ULONG crgn,_Out_ ULONG *pcElem)
HRESULT None propsys.PropVariantToGUID(_In_ REFPROPVARIANT propvarIn,_Out_ GUID *pguid)
HRESULT None propsys.PropVariantToUInt32Vector(_In_ REFPROPVARIANT propvar,_Out_ ULONG *prgn,_In_ ULONG crgn,_Out_ ULONG *pcElem)
HRESULT None None.DXVAHD_SetBackgroundColor(IDXVAHD_VideoProcessor *pVP None,BOOL bYCbCr None,const DXVAHD_COLOR color)
HRESULT None ole32.OleCreateFromDataEx(_In_ LPDATAOBJECT pSrcDataObj,_In_ REFIID riid,_In_ DWORD dwFlags,_In_ DWORD renderopt,_In_ ULONG cFormats,_In_ DWORD *rgAdvf,_In_ LPFORMATETC rgFormatEtc,_In_ IAdviseSink *lpAdviseSink,_Out_ DWORD *rgdwConnection,_In_ LPOLECLIENTSITE pClientSite,_In_ LPSTORAGE pStg,_Out_ LPVOID *ppvObj)
HRESULT None propsys.VariantGetStringElem(_In_ REFVARIANT var,_In_ ULONG iElem,_Out_ PWSTR *ppszVal)
HRESULT None propsys.VariantToDosDateTime(_In_ REFVARIANT varIn,_Out_ WORD *pwDate,_Out_ WORD *pwTime)
HRESULT None xenroll.enumContainers([in] LONG dwIndex,[out] BSTR *pbstrContainerName)
HRESULT None propsys.VariantToInt64(_In_ REFVARIANT varIn,_Out_ LONGLONG *pllRet)
HRESULT None propsys.PropVariantToUInt16Vector(_In_ REFPROPVARIANT propvar,_Out_ USHORT *prgn,_In_ ULONG crgn,_Out_ ULONG *pcElem)
SHORT None propsys.PropVariantToInt16WithDefault(_In_ REFPROPVARIANT propvarIn,_In_ SHORT iDefault)
HRESULT None propsys.PropVariantGetBooleanElem(_In_ REFPROPVARIANT propvar,_In_ ULONG iElem,_Out_ BOOL *pfVal)
HRESULT None propsys.InitPropVariantFromStringVector(_In_ PCWSTR *prgsz,_In_ ULONG cElems,_Out_ PROPVARIANT *ppropvar)
HRESULT None propsys.PropVariantToStringAlloc(_In_ REFPROPVARIANT propvar,_Out_ PWSTR *ppszOut)
HRESULT None propsys.PropVariantToInt64(_In_ REFPROPVARIANT propvarIn,_Out_ LONGLONG *pllRet)
SHORT None propsys.VariantToInt16WithDefault(_In_ REFVARIANT varIn,_In_ SHORT iDefault)
HRESULT None certadm.GetAllProperties([out] VARIANT *pVarProperties)
LONGLONG None propsys.VariantToInt64WithDefault(_In_ REFVARIANT varIn,_In_ LONGLONG llDefault)
HRESULT None propsys.PSPropertyBag_WriteStream(_In_ IPropertyBag *propBag,_In_ LPCWSTR propName,_In_ IStream *value)
HRESULT None certenc.GetNameChoice([in] LONG DistPointIndex,[in] LONG NameIndex,[out] LONG *pNameChoice)
HRESULT None propsys.PropVariantToFileTimeVector(_In_ REFPROPVARIANT propvar,_Out_ FILETIME *prgft,_In_ ULONG crgft,_Out_ ULONG *pcElem)
HRESULT None propsys.VariantToBooleanArrayAlloc(_In_ REFVARIANT var,_Out_ BOOL **pprgf,_Out_ ULONG *pcElem)
HRESULT None None.InitVariantFromDouble(_In_ DOUBLE dblVal,_Out_ VARIANT *pvar)
HRESULT None None.GenerateRequiredSchemas([in] DWORD dwAttributes,[in] GUID guidOutputSubType,[in] GUID *rgGuidProtectionSchemasSupported,[in] DWORD cProtectionSchemasSupported,[out] IMFCollection **ppRequiredProtectionSchemas)
HRESULT None propsys.PropVariantToDoubleVectorAlloc(_In_ REFPROPVARIANT propvar,_Out_ DOUBLE **pprgn,_Out_ ULONG *pcElem)
HRESULT None propsys.PropVariantToBoolean(_In_ REFPROPVARIANT propvarIn,_Out_ BOOL *pfRet)
VOID None propsys.ClearVariantArray(_In_ VARIANT *pvars,_In_ UINT cVars)
HRESULT None None.UpdateTopology([in] MFSequencerElementId dwId,[in] IMFTopology *pTopology)
HRESULT None propsys.VariantToInt64ArrayAlloc(_In_ REFVARIANT var,_Out_ LONGLONG **pprgn,_Out_ ULONG *pcElem)
HRESULT None propsys.PropVariantToInt32VectorAlloc(_In_ REFPROPVARIANT propvar,_Out_ LONG **pprgn,_Out_ ULONG *pcElem)
HRESULT None xenroll.put_WriteCertToUserDS([in] BOOL bValue)
HRESULT None xenroll.put_RootStoreName([in] BSTR Name)
ULONG None propsys.PropVariantGetElementCount(_In_ REFPROPVARIANT propvar)
HRESULT None propsys.VariantToInt16Array(_In_ REFVARIANT var,_Out_ SHORT *prgn,_In_ ULONG crgn,_Out_ ULONG *pcElem)
HRESULT None propsys.VariantToBooleanArray(_In_ REFVARIANT var,_Out_ BOOL *prgf,_In_ ULONG crgn,_Out_ ULONG *pcElem)
HRESULT None xenroll.getCertFromPKCS7([in] BSTR wszPKCS7,[out] BSTR *pbstrCert)
HRESULT None ole32.RegisterDragDrop(_In_ HWND hwnd,_In_ LPDROPTARGET pDropTarget)
HRESULT None None.Skip([in] ULONG cConnections)
NTSTATUS WINAPI netapi32.NetIsServiceAccount(_In_opt_ LPWSTR ServerName,_In_ LPWSTR AccountName,_Out_ BOOL *IsService)
HRESULT None propsys.PSPropertyBag_ReadSHORT(_In_ IPropertyBag *propBag,_In_ LPCWSTR propName,_Out_ SHORT *value)
HRESULT None None.UpdateTopologyFlags([in] MFSequencerElementId dwId,[in] DWORD dwFlags)
HRESULT None None.ApplyViewState([in] LPSTREAM pstm)
HRESULT None propsys.InitPropVariantFromPropVariantVectorElem(_In_ REFPROPVARIANT propvarIn,_In_ ULONG iElem,_Out_ PROPVARIANT *ppropvar)
HRESULT None xenroll.put_ContainerName([in] BSTR Name)
NTSTATUS None advapi32.LsaLookupNames2(_In_ LSA_HANDLE PolicyHandle,_In_ ULONG Flags,_In_ ULONG Count,_In_ PLSA_UNICODE_STRING Names,_Out_ PLSA_REFERENCED_DOMAIN_LIST *ReferencedDomains,_Out_ PLSA_TRANSLATED_SID2 *Sids)
NTSTATUS None advapi32.LsaQueryTrustedDomainInfo(_In_ LSA_HANDLE PolicyHandle,_In_ PSID TrustedDomainSid,_In_ TRUSTED_INFORMATION_CLASS InformationClass,_Out_ PVOID *Buffer)
HRESULT None propsys.PropVariantGetStringElem(_In_ REFPROPVARIANT propvar,_In_ ULONG iElem,_Out_ PWSTR *ppszVal)
HRESULT None propsys.InitVariantFromStrRet(_In_ STRRET *pstrret,_In_ PCUITEMID_CHILD pidl,_Out_ VARIANT *pvar)
HRESULT None ole32.PropVariantClear(_Inout_ PROPVARIANT *pvar)
HRESULT None ole32.PropVariantClear(_Inout_ PROPVARIANT *pvar)
HRESULT None None.InitPropVariantFromString(_In_ PCWSTR psz,_Out_ PROPVARIANT *ppropvar)
HRESULT None propsys.PropVariantToUInt64VectorAlloc(_In_ REFPROPVARIANT propvar,_Out_ ULONGLONG **pprgn,_Out_ ULONG *pcElem)
HRESULT None None.Save([in] LPSTREAM pStm,[in] BOOL fClearDirty)
PCWSTR None propsys.VariantToStringWithDefault(_In_ REFVARIANT varIn,_In_ LPCWSTR pszDefault)
BOOL None None.IsVariantString(_In_ REFVARIANT var)
HRESULT None None.DUnadvise([in] DWORD dwConnection)
INT None propsys.PropVariantCompareEx(_In_ REFPROPVARIANT propvar1,_In_ REFPROPVARIANT propvar2,_In_ PROPVAR_COMPARE_UNIT unit,_In_ PROPVAR_COMPARE_FLAGS flags)
HRESULT None xenroll.getCertFromFileResponse([in] BSTR strResponseFileName,[out] BSTR *pstrCert)
HRESULT None xenroll.put_ClientID([in] LONG lClientID)
HRESULT None None.SaveViewState([in] LPSTREAM pstm)
BOOL None None.IsVarTypeSignedInteger(_In_ VARTYPE vt)
HRESULT None None.InitVariantFromUInt64(_In_ ULONGLONG ullVal,_Out_ VARIANT *pvar)
HRESULT None propsys.InitPropVariantFromStringAsVector(_In_ PCWSTR psz,_Out_ PROPVARIANT *ppropvar)
HRESULT None propsys.PSPropertyBag_ReadStream(_In_ IPropertyBag *propBag,_In_ LPCWSTR propName,_Out_ IStream **value)
HRESULT None taskschd.put_RunOnlyIfNetworkAvailable([in] VARIANT_BOOL runOnlyIfNetworkAvailable)
HRESULT None None.OnClockStop([in] MFTIME hnssSystemTime)
HRESULT None None.SetPolicy([in] IMFOutputPolicy **ppPolicy,[in] DWORD nPolicy,[out] BYTE **ppbTicket,[out] DWORD *pcbTicket)
NTSTATUS None advapi32.LsaCreateTrustedDomainEx(_In_ LSA_HANDLE PolicyHandle,_In_ PTRUSTED_DOMAIN_INFORMATION_EX TrustedDomainInformation,_In_ PTRUSTED_DOMAIN_AUTH_INFORMATION AuthenticationInformation,_In_ ACCESS_MASK DesiredAccess,_Out_ PLSA_HANDLE TrustedDomainHandle)
HRESULT None None.InitVariantFromUInt16(_In_ USHORT uiVal,_Out_ VARIANT *pvar)
HRESULT None oleaut32.OleLoadPicture(_In_ LPSTREAM lpstream,_In_ LONG lSize,_In_ BOOL fRunmode,_In_ REFIID riid,_Out_ LPVOID *lplpvObj)
HRESULT None propsys.VariantGetInt64Elem(_In_ REFVARIANT var,_In_ ULONG iElem,_Out_ LONGLONG *pnVal)
HRESULT None None.InitVariantFromInt64(_In_ LONGLONG llVal,_Out_ VARIANT *pvar)
HRESULT None xenroll.addAttributeToRequest([in] LONG Flags,[in] BSTR strName,[in] BSTR strValue)
HRESULT None propsys.InitVariantFromVariantArrayElem(_In_ REFVARIANT varIn,_In_ ULONG iElem,_Out_ VARIANT *pvar)
HRESULT None None.GetKaraokeAttributes([in] ULONG ulStream,[out] DVD_KaraokeAttributes *pATR)
HRESULT None xenroll.addNameValuePairToRequest([in] LONG Flags,[in] BSTR strName,[in] BSTR strValue)
HRESULT None propsys.VariantToUInt64ArrayAlloc(_In_ REFVARIANT var,_Out_ ULONGLONG **pprgn,_Out_ ULONG *pcElem)
MFOffset None None.MakeOffset(float v None)
HRESULT None ole32.OleFlushClipboard(void None None)
HRESULT None propsys.VariantToUInt32Array(_In_ REFVARIANT var,_Out_ ULONG *prgn,_In_ ULONG crgn,_Out_ ULONG *pcElem)
BOOL None None.IsPropVariantVector(_In_ REFPROPVARIANT propvar)
HRESULT None ole32.EnumElements([in] DWORD reserved1,[in] void *reserved2,[in] DWORD reserved3,[out] IEnumSTATSTG **ppenum)
HRESULT None propsys.InitPropVariantFromUInt32(_In_ ULONG ulVal,_Out_ PROPVARIANT *ppropvar)
HRESULT None xenroll.addCertTypeToRequestEx([in] LONG lFlag,[in] BSTR bstrOIDOrName,[in] LONG lMajorVersion,[in] BOOL fMinorVersion,[in] LONG lMinorVersion)
HRESULT None propsys.VariantToInt32(_In_ REFVARIANT varIn,_Out_ LONG *plRet)
HRESULT None propsys.VariantToUInt32ArrayAlloc(_In_ REFVARIANT var,_Out_ ULONG **pprgn,_Out_ ULONG *pcElem)
HRESULT None propsys.PropVariantToInt32Vector(_In_ REFPROPVARIANT propvar,_Out_ LONG *prgn,_In_ ULONG crgn,_Out_ ULONG *pcElem)
HRESULT None xenroll.put_ProviderType([in] LONG Type)
HRESULT None ole32.OleNoteObjectVisible(_In_ LPUNKNOWN pUnknown,_In_ BOOL fVisible)
HRESULT None propsys.PropVariantToInt16Vector(_In_ REFPROPVARIANT propvar,_Out_ SHORT *prgn,_In_ ULONG crgn,_Out_ ULONG *pcElem)
HRESULT None xenroll.addExtensionToRequest([in] LONG Flags,[in] BSTR strName,[in] BSTR strValue)
NTSTATUS None advapi32.LsaEnumerateTrustedDomains(_In_ LSA_HANDLE PolicyHandle,_In_ PLSA_ENUMERATION_HANDLE EnumerationContext,_Out_ PVOID *Buffer,_In_ ULONG PreferedMaximumLength,_Out_ PULONG CountReturned)
HRESULT None propsys.PropVariantToInt16VectorAlloc(_In_ REFPROPVARIANT propvar,_Out_ SHORT **pprgn,_Out_ ULONG *pcElem)
HRESULT None xenroll.acceptPKCS7([in] BSTR PKCS7)
VOID None ole32.OleDestroyMenuDescriptor(_In_ HOLEMENU holemenu)
HRESULT None propsys.PropVariantToBooleanVector(_In_ REFPROPVARIANT propvar,_Out_ BOOL *prgf,_In_ ULONG crgf,_Out_ ULONG *pcElem)
HRESULT None None.ApplyViewState([in] LPSTREAM pstm)
HRESULT None None.InitVariantFromDispatch(_In_ IDispatch *pdisp,_Out_ VARIANT *pvar)
HRESULT None None.DiscardFrom([in] IOleUndoUnit *pUU)
HRESULT None propsys.VariantGetUInt16Elem(_In_ REFVARIANT var,_In_ ULONG iElem,_Out_ USHORT *pnVal)
DWORD None None.ModeFlags(DWORD AudioMode None)
HRESULT None propsys.VariantToFileTime(_In_ REFVARIANT varIn,_In_ PSTIME_FLAGS stfOut,_Out_ FILETIME *pftOut)
HRESULT None None.InitVariantFromDispatch(_In_ IDispatch *pdisp,_Out_ VARIANT *pvar)
BOOL WINAPI advapi32.SaferGetPolicyInformation(_In_ DWORD dwScopeId,_In_ SAFER_POLICY_INFO_CLASS SaferPolicyInfoClass,_In_ DWORD InfoBufferSize,_Out_ PVOID InfoBuffer,_Out_ PDWORD InfoBufferRetSize,_Reserved_ LPVOID lpReserved)
HRESULT None propsys.PropVariantChangeType(_Out_ PROPVARIANT *ppropvarDest,_In_ REFPROPVARIANT propvarSrc,_In_ PROPVAR_CHANGE_FLAGS flags,_In_ VARTYPE vt)
NTSTATUS None advapi32.LsaDeleteTrustedDomain(_In_ LSA_HANDLE PolicyHandle,_In_ PSID TrustedDomainSid)
HRESULT None propsys.VariantToInt64Array(_In_ REFVARIANT var,_Out_ LONGLONG *prgn,_In_ ULONG crgn,_Out_ ULONG *pcElem)
HRESULT None propsys.InitPropVariantFromStrRet(_Inout_ STRRET *pstrret,_In_ PCUITEMID_CHILD pidl,_Out_ PROPVARIANT *ppropvar)
HRESULT None propsys.PropVariantToInt32(_In_ REFPROPVARIANT propvarIn,_Out_ LONG *plRet)
HRESULT None None.GetDVDDirectory([out] LPWSTR pszwPath,[in] ULONG ulMaxSize,[out] ULONG *pulActualSize)
HRESULT None xenroll.put_IncludeSubjectKeyID([in] BOOL fInclude)
HRESULT None propsys.VariantToInt32Array(_In_ REFVARIANT var,_Out_ LONG *prgn,_In_ ULONG crgn,_Out_ ULONG *pcElem)
HRESULT None ole32.OleCreateFromData(_In_ LPDATAOBJECT pSrcDataObj,_In_ REFIID riid,_In_ DWORD renderopt,_In_ LPFORMATETC pFormatEtc,_In_ LPOLECLIENTSITE pClientSite,_In_ LPSTORAGE pStg,_Out_ LPVOID *ppvObj)
HRESULT None None.InitVariantFromGUIDAsBuffer(_In_ REFGUID guid,_Out_ VARIANT *pvar)
INT None None.PropVariantCompare(_In_ REFPROPVARIANT propvar1,_In_ REFPROPVARIANT propvar2)
ULONGLONG None propsys.VariantToUInt64WithDefault(_In_ REFVARIANT varIn,_In_ ULONGLONG ullDefault)
HRESULT None propsys.VariantToInt32ArrayAlloc(_In_ REFVARIANT var,_Out_ LONG **pprgn,_Out_ ULONG *pcElem)
HRESULT None propsys.PropVariantToFileTimeVectorAlloc(_In_ REFPROPVARIANT propvar,_Out_ FILETIME **pprgft,_Out_ ULONG *pcElem)
unsigned short propsys.PropVariantToUInt16WithDefault(_In_ REFPROPVARIANT propvarIn,_In_ USHORT uiDefault)
HRESULT None propsys.PropVariantToBSTR(_In_ REFPROPVARIANT propvar,_Out_ BSTR *pbstrOut)
HRESULT None None.SetRenderingPrefs([in] DWORD dwRenderFlags)
HRESULT None propsys.VariantToUInt64(_In_ REFVARIANT varIn,_Out_ ULONGLONG *pullRet)
HRESULT None xenroll.put_RequestStoreName([in] BSTR Name)
HRESULT None propsys.PropVariantToStringVector(_In_ REFPROPVARIANT propvar,_Out_ PWSTR *prgsz,_In_ ULONG crgsz,_Out_ ULONG *pcElem)
HRESULT None propsys.PropVariantToStringAlloc(_In_ REFPROPVARIANT propvar,_Out_ PWSTR *ppszOut)
HRESULT None propsys.PropVariantToUInt64(_In_ REFPROPVARIANT propvarIn,_Out_ ULONGLONG *pullRet)
BOOL None None.IsVariantArray(_In_ REFVARIANT var)
HRESULT None propsys.PropVariantGetInt32Elem(_In_ REFPROPVARIANT propvar,_In_ ULONG iElem,_Out_ LONG *pnVal)
HRESULT None propsys.VariantToInt16ArrayAlloc(_In_ REFVARIANT var,_Out_ SHORT **pprgn,_Out_ ULONG *pcElem)
HRESULT None None.GetSinkInfo([out] MF_TRANSCODE_SINK_INFO *pSinkInfo)
BOOL None propsys.PropVariantToBooleanWithDefault(_In_ REFPROPVARIANT propvarIn,_In_ BOOL fDefault)
HRESULT None None.SetDeinterlaceMode([in] DWORD dwStreamID,[in] GUID *lpDeinterlaceMode)
HRESULT PSSTDAPI propsys.PropVariantToWinRTPropertyValue(_In_ REFPROPVARIANT propvar,_In_ REFIID riid,_Out_ void **ppv)
HRESULT None ole32.CreateDataCache(_In_ LPUNKNOWN pUnkOuter,_In_ REFCLSID rclsid,_In_ REFIID iid,_Out_ LPVOID *ppv)
HRESULT None propsys.PropVariantToUInt64Vector(_In_ REFPROPVARIANT propvar,_Out_ ULONGLONG *prgn,_In_ ULONG crgn,_Out_ ULONG *pcElem)
HRESULT None xenroll.addNameValuePairToSignature([in] BSTR Name,[in] BSTR Value)
HRESULT None None.GetKaraokeAttributes([in] ULONG ulStream,[out] DVD_KaraokeAttributes *pATR)
HRESULT None propsys.PropVariantToStrRet(_In_ REFPROPVARIANT propvar,_Out_ STRRET *pstrret)
HRESULT None propsys.VariantToUInt64Array(_In_ REFVARIANT var,_Out_ ULONGLONG *prgn,_In_ ULONG crgn,_Out_ ULONG *pcElem)
HRESULT None propsys.VariantToUInt64Array(_In_ REFVARIANT var,_Out_ ULONGLONG *prgn,_In_ ULONG crgn,_Out_ ULONG *pcElem)
HRESULT None propsys.VariantToUInt64Array(_In_ REFVARIANT var,_Out_ ULONGLONG *prgn,_In_ ULONG crgn,_Out_ ULONG *pcElem)
HRESULT None None.EnableModeless([in] BOOL fEnable)
HRESULT None propsys.PropVariantToUInt32VectorAlloc(_In_ REFPROPVARIANT propvar,_Out_ ULONG **pprgn,_Out_ ULONG *pcElem)
HRESULT None None.EnumAdvise([out] IEnumSTATDATA **ppenumAdvise)
HRESULT None ole32.OleCreateLinkToFileEx(_In_ LPCOLESTR lpszFileName,_In_ REFIID riid,_In_ DWORD dwFlags,_In_ DWORD renderopt,_In_ ULONG cFormats,_In_ DWORD *rgAdvf,_In_ LPFORMATETC rgFormatEtc,_In_ IAdviseSink *lpAdviseSink,_Out_ DWORD *rgdwConnection,_In_ LPOLECLIENTSITE pClientSite,_In_ LPSTORAGE pStg,_Out_ LPVOID *ppvObj)
HRESULT None xenroll.put_UseExistingKeySet([in] BOOL bValue)
HRESULT None xenroll.put_CAStoreType([in] BSTR Type)
HRESULT None xenroll.put_ProviderFlags([in] LONG Flags)
NTSTATUS None advapi32.LsaClose(_In_ LSA_HANDLE ObjectHandle)
HRESULT None propsys.InitPropVariantFromGUIDAsString(_In_ REFGUID guid,_Out_ PROPVARIANT *ppropvar)
HRESULT None ole32.CreateOleAdviseHolder(_Out_ LPOLEADVISEHOLDER *ppOAHolder)
HRESULT None propsys.PropVariantGetUInt16Elem(_In_ REFPROPVARIANT propvar,_In_ ULONG iElem,_Out_ USHORT *pnVal)
BOOL WINAPI advapi32.SaferComputeTokenFromLevel(_In_ SAFER_LEVEL_HANDLE LevelHandle,_In_opt_ HANDLE InAccessToken,_Out_ PHANDLE OutAccessToken,_In_ DWORD dwFlags,_Inout_opt_ LPVOID lpReserved)
HRESULT None None.GetDVDTextStringAsNative([in] ULONG ulLangIndex,[in] ULONG ulStringIndex,[out] BYTE *pchBuffer,[in] ULONG ulMaxBufferSize,[out] ULONG *pulActualSize,[out] DVD_TextStringType *pType)
HRESULT None taskschd.put_ValueQueries([in] ITaskNamedValueCollection *pNamedXPaths)
VOID None propsys.ClearPropVariantArray(_In_ PROPVARIANT *rgPropVar,_In_ UINT cVars)
HRESULT None None.GetTimecode([out] TIMECODE_SAMPLE *pTimecodeSample)
NTSTATUS NTAPI None.GetServiceAccountPassword(_In_ PUNICODE_STRING AccountName,_In_opt_ PUNICODE_STRING DomainName,_In_ CRED_FETCH CredFetch,_Inout_opt_ FILETIME *FileTimeExpiry,_Out_ PUNICODE_STRING CurrentPassword,_Out_ PUNICODE_STRING PreviousPassword,_Out_opt_ FILETIME *FileTimeCurrPwdValidForOutbound)
HRESULT None xenroll.put_CAStoreFlags([in] LONG Flags)
HRESULT None None.GetDVDTextLanguageInfo([in] ULONG ulLangIndex,[out] ULONG *pulNumOfStrings,[out] LCID pLangCode,[out] DVD_TextCharSet *pbCharacterSet)
HRESULT None ole32.CreateDataAdviseHolder(_Out_ LPDATAADVISEHOLDER *ppDAHolder)
HRESULT None None.InitVariantFromUInt32(_In_ ULONG ulVal,_Out_ VARIANT *pvar)
HRESULT None propsys.VariantToUInt16Array(_In_ REFVARIANT var,_Out_ USHORT *prgn,_In_ ULONG crgn,_Out_ ULONG *pcElem)
HRESULT None propsys.VariantGetDoubleElem(_In_ REFVARIANT var,_In_ ULONG iElem,_Out_ DOUBLE *pnVal)
UINT None oledlg.OleUIInsertObject(_In_ LPOLEUIINSERTOBJECT lpIO)
UINT None oledlg.OleUIInsertObjectW(_In_ LPOLEUIINSERTOBJECT lpIO)
UINT None oledlg.OleUIInsertObjectA(_In_ LPOLEUIINSERTOBJECT lpIO)
HRESULT None None.SetRect([in] LPRECT prcView)
HRESULT None propsys.PropVariantGetDoubleElem(_In_ REFPROPVARIANT propvar,_In_ ULONG iElem,_Out_ DOUBLE *pnVal)
HRESULT None None.GetLastUndoDescription([out] BSTR *pBstr)
HRESULT None propsys.VariantToStringArrayAlloc(_In_ REFVARIANT var,_Out_ PWSTR **pprgsz,_In_ ULONG crgsz,_Out_ ULONG *pcElem)
HRESULT None None.GetWindowContext([out] IOleInPlaceFrame **ppFrame,[out] IOleInPlaceUIWindow **ppDoc,[out] LPRECT lprcPosRect,[out] LPRECT lprcClipRect,[in None None,out] LPOLEINPLACEFRAMEINFO lpFrameInfo)
HRESULT None xenroll.freeRequestInfo([in] BSTR PKCS7OrPKCS10)
HRESULT None propsys.PropVariantToDoubleVector(_In_ REFPROPVARIANT propvar,_Out_ DOUBLE *prgn,_In_ ULONG crgn,_Out_ ULONG *pcElem)
PCWSTR None propsys.PropVariantToStringWithDefault(_In_ REFPROPVARIANT propvarIn,_In_ LPCWSTR pszDefault)
HRESULT None propsys.InitVariantFromStrRet(_In_ STRRET *pstrret,_In_ PCUITEMID_CHILD pidl,_Out_ VARIANT *pvar)
HRESULT None propsys.PropVariantToFileTime(_In_ REFPROPVARIANT propvar,_In_ PSTIME_FLAGS pstfOut,_Out_ FILETIME *pftOut)
LONGLONG None propsys.PropVariantToInt64WithDefault(_In_ REFPROPVARIANT propvarIn,_In_ LONGLONG llDefault)
HRESULT None propsys.VariantToDoubleArrayAlloc(_In_ REFVARIANT var,_Out_ DOUBLE **pprgn,_Out_ ULONG *pcElem)
ULONG None propsys.PropVariantToUInt32WithDefault(_In_ REFPROPVARIANT propvarIn,_In_ ULONG ulDefault)
HRESULT None xenroll.put_KeySpec([in] LONG Spec)
HRESULT None None.PropVariantToCLSID(_In_ REFPROPVARIANT propvar,_Out_ CLSID *pclsid)
typedef None None.SCESTATUS(*PFSCE_LOG_INFO None None)
HRESULT None propsys.InitVariantFromGUIDAsString(_In_ REFGUID guid,_Out_ VARIANT *pvar)
HRESULT None None.EnableModeless([in] BOOL fEnable)
HRESULT None propsys.InitVariantFromString(_In_ PCWSTR psz,_Out_ VARIANT *pvar)
HRESULT None propsys.VariantToUInt16ArrayAlloc(_In_ REFVARIANT var,_Out_ USHORT **pprgn,_Out_ ULONG *pcElem)
HRESULT None xenroll.enumPendingRequest([in] LONG lIndex,[in] LONG lDesiredProperty,[out] VARIANT *pvarProperty)
HRESULT None propsys.VariantToString(_In_ REFVARIANT varIn,_Out_ PWSTR pszBuf,_In_ UINT cchBuf)
HRESULT None ole32.OleGetClipboard(_Out_ LPDATAOBJECT *ppDataObj)
HRESULT None None.GetTitleAttributes([in] ULONG ulTitle,[out] DVD_MenuAttributes *pMenu,[out] DVD_TitleAttributes *pTitle)
HRESULT None propsys.PropVariantToDouble(_In_ REFPROPVARIANT propvarIn,_Out_ DOUBLE *pdblRet)
HRESULT None propsys.PropVariantGetInt16Elem(_In_ REFPROPVARIANT propvar,_In_ ULONG iElem,_Out_ SHORT *pnVal)
HRESULT None xenroll.put_EnableSMIMECapabilities([in] BOOL bValue)
HRESULT None None.GetVMGAttributes([out] DVD_MenuAttributes *pATR)
BOOL None None.IsPropVariantString(_In_ REFPROPVARIANT propvar)
HRESULT None propsys.InitVariantFromString(_In_ PCWSTR psz,_Out_ VARIANT *pvar)
HRESULT None xenroll.addBlobPropertyToCertificate([in] LONG lPropertyId,[in] LONG lReserved,[in] BSTR bstrProperty)
HRESULT None None.UIActivate([in] BOOL fUIActivate)
BOOL None oledlg.OleUIUpdateLinks(_In_ LPOLEUILINKCONTAINERW lpOleUILinkCntr,_In_ HWND hwndParent,_In_ LPTSTR lpszTitle,_In_ int cLinks)
BOOL None oledlg.OleUIUpdateLinksW(_In_ LPOLEUILINKCONTAINERW lpOleUILinkCntr,_In_ HWND hwndParent,_In_ LPTSTR lpszTitle,_In_ int cLinks)
BOOL None oledlg.OleUIUpdateLinksA(_In_ LPOLEUILINKCONTAINERW lpOleUILinkCntr,_In_ HWND hwndParent,_In_ LPTSTR lpszTitle,_In_ int cLinks)
HRESULT None xenroll.addCertTypeToRequest([in] BSTR CertType)
HRESULT None propsys.PropVariantToBuffer(_In_ REFPROPVARIANT propvar,_Out_ VOID *pv,_In_ UINT cb)
HRESULT None None.GetPages([out] CAUUID *pPages)
HRESULT None xenroll.createFilePKCS10([in] BSTR DNName,[in] BSTR Usage,[in] BSTR wszPKCS10FileName)
int __cdecl oledlg.OleUIPromptUser(_In_ int nTemplate,_In_ HWND hwndParent,_In_ ... None)
int __cdecl oledlg.OleUIPromptUserW(_In_ int nTemplate,_In_ HWND hwndParent,_In_ ... None)
int __cdecl oledlg.OleUIPromptUserA(_In_ int nTemplate,_In_ HWND hwndParent,_In_ ... None)
HRESULT None propsys.VariantGetUInt32Elem(_In_ REFVARIANT var,_In_ ULONG iElem,_Out_ ULONG *pnVal)
HRESULT None xenroll.GetKeyLen([in] BOOL fMin,[in] BOOL fExchange,[out] LONG *pdwKeySize)
SCESTATUS WINAPI None.SceSvcAttachmentConfig(_In_ PSCESVC_CALLBACK_INFO pSceCbInfo)
HRESULT None xenroll.acceptFilePKCS7([in] BSTR wszPKCS7FileName)
HRESULT None None.GetPageInfo([out] PROPPAGEINFO *pPageInfo)
HRESULT None ole32.FreePropVariantArray(_In_ ULONG cVariants,_Inout_ PROPVARIANT *rgvars)
HRESULT None ole32.OleInitialize(_In_ LPVOID pvReserved)
HRESULT None None.put_VITCLine([in] long Line)
HRESULT None None.InitPropVariantFromUInt64(_In_ ULONGLONG ullVal,_Out_ PROPVARIANT *ppropvar)
HRESULT None None.GetTotalTitleTime([out] DVD_HMSF_TIMECODE *pTotalTime,[out] ULONG *pulTimeCodeFlags)
HRESULT None propsys.VariantToDouble(_In_ REFVARIANT varIn,_Out_ DOUBLE *pdblRet)
ULONG None propsys.VariantToUInt32WithDefault(_In_ REFVARIANT varIn,_In_ ULONG ulDefault)
HRESULT None ole32.OleRegEnumVerbs(_In_ REFCLSID clsid,_Out_ LPENUMOLEVERB *ppenum)
HRESULT None propsys.VariantToStrRet(_In_ REFVARIANT varIn,_Out_ STRRET *pstrret)
BOOLEAN None None.InitializeChangeNotify(void None None)
NTSTATUS None advapi32.LsaAddAccountRights(_In_ LSA_HANDLE PolicyHandle,_In_ PSID AccountSid,_In_ PLSA_UNICODE_STRING UserRights,_In_ ULONG CountOfRights)
HRESULT None None.EnumUndoable([out] IEnumOleUndoUnits **ppEnum)
HRESULT None None.GetSubpictureAttributes([in] ULONG ulStream,[out] DVD_SubpictureAttributes *pAttributes)
BOOL WINAPI advapi32.SaferSetLevelInformation(_In_ SAFER_LEVEL_HANDLE LevelHandle,_In_ SAFER_OBJECT_INFO_CLASS dwInfoType,_In_ LPVOID lpQueryBuffer,_In_ DWORD dwInBufferSize)
HRESULT None oleaut32.OleCreatePropertyFrame(_In_ HWND hwndOwner,_In_ UINT x,_In_ UINT y,_In_ LPCOLESTR lpszCaption,_In_ ULONG cObjects,_In_ LPUNKNOWN *ppUnk,_In_ ULONG cPages,_In_ LPCLSID pPageClsID,_In_ LCID lcid,_In_ DWORD dwReserved,_In_ LPVOID pvReserved)
HRESULT None xenroll.put_UseExistingKeySet([in] BOOL fUseExistingKeys)
HRESULT None xenroll.put_CAStoreName([in] BSTR Name)
HRESULT None None.IsSubpictureStreamEnabled([in] ULONG ulStreamNum,[out] BOOL *pbEnabled)
HRESULT None propsys.PropVariantGetUInt32Elem(_In_ REFPROPVARIANT propvar,_In_ ULONG iElem,_Out_ ULONG *pnVal)
UINT None oledlg.OleUIPasteSpecial(_In_ LPOLEUIPASTESPECIAL lpPS)
UINT None oledlg.OleUIPasteSpecialW(_In_ LPOLEUIPASTESPECIAL lpPS)
UINT None oledlg.OleUIPasteSpecialA(_In_ LPOLEUIPASTESPECIAL lpPS)
HRESULT None propsys.PropVariantToInt64VectorAlloc(_In_ REFPROPVARIANT propvar,_Out_ LONGLONG **pprgn,_Out_ ULONG *pcElem)
HRESULT None None.GetObject([in] IMoniker *pmkObjectName,[out] IUnknown **ppunkObject)
HRESULT None propsys.VariantToStringAlloc(_In_ REFVARIANT varIn,_Out_ PWSTR ppszBuf)
HRESULT None None.GetMenuLanguages([out] LCID *pLanguages,[in] ULONG ulMaxLanguages,[out] ULONG *puActualLanguages)
NTSTATUS None advapi32.LsaLookupSids2(_In_ LSA_HANDLE PolicyHandle,_In_ ULONG LookupOptions,_In_ ULONG Count,_In_ PSID *Sids,_Out_ PLSA_REFERENCED_DOMAIN_LIST *ReferencedDomains,_Out_ PLSA_TRANSLATED_NAME *Names)
HRESULT None None.GetState([out] IDvdState **pStateData)
HRESULT None None.GetDVDTextNumberOfLanguages([out] ULONG *pulNumOfLangs)
BOOL WINAPI advapi32.SaferCloseLevel(_In_ SAFER_LEVEL_HANDLE hLevelHandle)
BOOL None advapi32.SaferiIsExecutableFileType(_In_ LPCWSTR szFullPath,_In_ BOOLEAN bFromShellExecute)
HRESULT None ole32.OleCreateLinkFromDataEx(_In_ LPDATAOBJECT pSrcDataObj,_In_ REFIID riid,_In_ DWORD dwFlags,_In_ DWORD renderopt,_In_ ULONG cFormats,_In_ DWORD *rgAdvf,_In_ LPFORMATETC rgFormatEtc,_In_ IAdviseSink *lpAdviseSink,_Inout_ DWORD *rgdwConnection,_In_ LPOLECLIENTSITE pClientSite,_In_ LPSTORAGE pStg,_Out_ LPVOID *ppvObj)
HRESULT None propsys.VariantToInt16ArrayAlloc(_In_ REFVARIANT var,_Out_ SHORT **pprgn,_Out_ ULONG *pcElem)
BOOL None propsys.VariantToBooleanWithDefault(_In_ REFVARIANT varIn,_In_ BOOL fDefault)
HRESULT None propsys.WinRTPropertyValueToPropVariant(_In_opt_ IUnknown *propertyValue,_Out_ PROPVARIANT *convertedValue)
HRESULT None None.RemoveUnconnectedRenderer(IGraphBuilder *pGraph None,IBaseFilter *pRenderer None,BOOL *pbRemoved None)
HRESULT None xenroll.stringToBinary([in] LONG Flags,[in] BSTR strEncoded,[out] BSTR *pstrBinary)
HRESULT None propsys.PropVariantToBooleanVectorAlloc(_In_ REFPROPVARIANT propvar,_Out_ BOOL **pprgf,_Out_ ULONG *pcElem)
HRESULT None oleaut32.OleCreateFontIndirect(_In_ LPFONTDESC lpFontDesc,_In_ REFIID riid,_Out_ LPVOID *lplpvObj)
HRESULT None propsys.VariantToGUID(_In_ REFVARIANT varIn,_Out_ GUID *pguid)
HRESULT None ole32.OleRun(_In_ LPUNKNOWN pUnknown)
HRESULT None ole32.RevokeDragDrop(_In_ HWND hwnd)
HRESULT None ole32.OleCreateLinkEx(_In_ LPMONIKER pmkLinkSrc,_In_ REFIID riid,_In_ DWORD dwFlags,_In_ DWORD renderopt,_In_ ULONG cFormats,_In_ DWORD *rgAdvf,_In_ LPFORMATETC rgFormatEtc,_In_ IAdviseSink *lpAdviseSink,_Out_ DWORD *rgdwConnection,_In_ LPOLECLIENTSITE pClientSite,_In_ LPSTORAGE pStg,_Out_ LPVOID *ppvObj)
NTSTATUS None advapi32.LsaEnumerateAccountsWithUserRight(_In_ LSA_HANDLE PolicyHandle,_In_ PLSA_UNICODE_STRING UserRights,_Out_ PVOID *EnumerationBuffer,_Out_ PULONG CountReturned)
HRESULT None None.SetStatusText([in] LPCOLESTR pszStatusText)
HRESULT None xenroll.put_KeySpec([in] LONG Spec)
typedef None None.SCESTATUS(*PFSCE_QUERY_INFO None None)
HRESULT None propsys.PropVariantToUInt16(_In_ REFPROPVARIANT propvarIn,_Out_ USHORT *puiRet)
HRESULT None xenroll.put_GenKeyFlags([in] LONG Flags)
HRESULT None None.GetDefaultSubpictureLanguage([out] LCID *pLanguage,[out] DVD_SUBPICTURE_LANG_EXT *pSubpictureExtension)
HRESULT None ole32.OleLockRunning(_In_ LPUNKNOWN pUnknown,_In_ BOOL fLock,_In_ BOOL fLastUnlockCloses)
HRESULT None propsys.PropVariantToInt16(_In_ REFPROPVARIANT propvarIn,_Out_ SHORT *piRet)
HRESULT None None.GetHardwareSupportedTVAudioModes([out] long *plModes)
HRESULT None xenroll.getCertFromResponse([in] BSTR strResponse,[out] BSTR *pstrCert)
HRESULT None xenroll.put_RootStoreType([in] BSTR Type)
HRESULT None xenroll.put_SPCFileNameWStr([in] LPWSTR szwSPCFileName)
SCESTATUS WINAPI None.SceSvcAttachmentUpdate(_In_ PSCESVC_CALLBACK_INFO pSceCbInfo,_In_ SCESVC_CONFIGURATION_INFO *ServiceInfo)
HRESULT None None.GetTitleParentalLevels([in] ULONG ulTitle,[out] ULONG *pulParentalLevels)
HRESULT None None.SetObjects([in] ULONG cObjects,[in] IUnknown **ppUnk)
HRESULT None xenroll.put_MyStoreName([in] BSTR Name)
HRESULT None xenroll.put_RequestStoreNameWStr([in] LPWSTR szwName)
HRESULT None propsys.PropVariantToInt16(_In_ REFPROPVARIANT propvarIn,_Out_ SHORT *piRet)
HRESULT None None.SendOnRename([in] IMoniker *pmk)
HRESULT None None.GetCurrentSubpicture([out] ULONG *pulStreamsAvailable,[out] ULONG *pulCurrentStream,[out] BOOL *pbIsDisabled)
HRESULT None None.NotifyRelease([in] LONG idResource,[in] IResourceConsumer *pConsumer,[in] BOOL bStillWant)
HRESULT None None.GetAllGPRMs([out] GPRMARRAY *pRegisterArray)
UINT None oledlg.OleUIConvert(_In_ LPOLEUICONVERT lpCV)
UINT None oledlg.OleUIConvertW(_In_ LPOLEUICONVERT lpCV)
UINT None oledlg.OleUIConvertA(_In_ LPOLEUICONVERT lpCV)
HRESULT None xenroll.createPFX([in] BSTR strPassword,[out] BSTR *pstrPFX)
LONG None propsys.VariantToInt32WithDefault(_In_ REFVARIANT varIn,_In_ LONG lDefault)
HRESULT None None.PlayChapter([in] ULONG ulChapter,[in] DWORD dwFlags,[out] IDvdCmd **ppCmd)
HRESULT None None.EnumViews([out] IEnumOleDocumentViews **ppEnum,[out] IOleDocumentView **ppView)
HRESULT None ole32.OleSetContainedObject(_In_ LPUNKNOWN pUnknown,_In_ BOOL fContained)
BOOL WINAPI advapi32.SaferGetLevelInformation(_In_ SAFER_LEVEL_HANDLE LevelHandle,_In_ SAFER_OBJECT_INFO_CLASS dwInfoType,_Out_opt_ LPVOID lpQueryBuffer,_In_ DWORD dwInBufferSize,_Out_ LPDWORD lpdwOutBufferSize)
BOOL None oledlg.OleUIAddVerbMenu(_In_opt_ LPOLEOBJECT lpOleObj,_In_opt_ LPCTSTR lpszShortType,_In_ HMENU hMenu,_In_ UINT uPos,_In_ UINT uIDVerbMin,_In_ UINT uIDVerbMax,_In_ BOOL bAddConvert,_In_ UINT idConvert,_Out_ HMENU *lphMenu)
BOOL None oledlg.OleUIAddVerbMenuW(_In_opt_ LPOLEOBJECT lpOleObj,_In_opt_ LPCTSTR lpszShortType,_In_ HMENU hMenu,_In_ UINT uPos,_In_ UINT uIDVerbMin,_In_ UINT uIDVerbMax,_In_ BOOL bAddConvert,_In_ UINT idConvert,_Out_ HMENU *lphMenu)
BOOL None oledlg.OleUIAddVerbMenuA(_In_opt_ LPOLEOBJECT lpOleObj,_In_opt_ LPCTSTR lpszShortType,_In_ HMENU hMenu,_In_ UINT uPos,_In_ UINT uIDVerbMin,_In_ UINT uIDVerbMax,_In_ BOOL bAddConvert,_In_ UINT idConvert,_Out_ HMENU *lphMenu)
HRESULT None None.GetAudioLanguage([in] ULONG ulStream,[out] LCID *pLanguage)
HRESULT None None.GetLinkUpdateOptions([in] DWORD dwLink,[out] DWORD *lpdwUpdateOpt)
NET_API_STATUS None netapi32.NetFileEnum(_In_ LMSTR servername,_In_ LMSTR basepath,_In_ LMSTR username,_In_ DWORD level,_Out_ LPBYTE *bufptr,_In_ DWORD prefmaxlen,_Out_ LPDWORD entriesread,_Out_ LPDWORD totalentries,_Inout_ PDWORD_PTR resume_handle)
HRESULT None ole32.OleIsCurrentClipboard(_In_ LPDATAOBJECT pDataObj)
HRESULT None None.Skip([in] ULONG celt)
void None ole32.ReleaseStgMedium(_In_ LPSTGMEDIUM pMedium)
HRESULT None taskschd.put_Settings([in] ITaskSettings *pSettings)
HRESULT None None.GetCurrentVideoAttributes([out] DVD_VideoAttributes *pATR)
HRESULT None None.InitPropVariantFromUInt16(_In_ USHORT uiVal,_Out_ PROPVARIANT *ppropvar)
HRESULT None xenroll.put_ThumbPrintWStr([in] CRYPT_DATA_BLOB thumbPrintBlob)
HRESULT None ole32.OleCreateLinkFromData(_In_ LPDATAOBJECT pSrcDataObj,_In_ REFIID riid,_In_ DWORD renderopt,_In_ LPFORMATETC pFormatEtc,_In_ LPOLECLIENTSITE pClientSite,_In_ LPSTORAGE pStg,_Out_ LPVOID *ppvObj)
HRESULT WINAPI srpapi.srpInheritOriginClaim(_In_ Handle OriginToken,_In_ Handle InheritingToken,Handle ResultToken None)
HRESULT None None.GetDiscID([in] LPCWSTR pszwPath,[out] ULONGLONG *pullDiscID)
NTSTATUS None advapi32.LsaEnumerateTrustedDomainsEx(_In_ LSA_HANDLE PolicyHandle,_In_ PLSA_ENUMERATION_HANDLE EnumerationContext,_Out_ PVOID *Buffer,_In_ ULONG PreferredMaximumLength,_Out_ PULONG CountReturned)
HRESULT None ole32.OleLoadFromStream(_In_ LPSTREAM pStm,_In_ REFIID iidInterface,_Out_ LPVOID *ppvObj)
HRESULT None ole32.OleCreateStaticFromData(_In_ LPDATAOBJECT pSrcDataObj,_In_ REFIID iid,_In_ DWORD renderopt,_In_ LPFORMATETC pFormatEtc,_In_ LPOLECLIENTSITE pClientSite,_In_ LPSTORAGE pStg,_Out_ LPVOID *ppvObj)
HRESULT None xenroll.acceptResponse([in] BSTR strResponse)
HRESULT None None.StopPresenting([in] DWORD_PTR dwUserID)
HRESULT None None.GetHardwareSupportedTVAudioModes([out] long *plModes)
HRESULT None None.Unadvise([in] DWORD dwConnection)
HRESULT None None.GetBorder([out] LPRECT lprectBorder)
HRESULT None ole32.DoDragDrop(_In_ LPDATAOBJECT pDataObj,_In_ LPDROPSOURCE pDropSource,_In_ DWORD dwOKEffects,_Out_ LPDWORD pdwEffect)
HRESULT None None.GetLocaleID([out] LCID *pLocaleID)
HRESULT None xenroll.put_CAStoreTypeWStr([in] LPWSTR szwType)
HRESULT None xenroll.put_ReuseHardwareKeyIfUnableToGenNew([in] BOOL bValue)
NTSTATUS WINAPI netapi32.NetRemoveServiceAccount(_In_opt_ LPWSTR ServerName,_In_ LPWSTR AccountName,_In_ DWORD Flags)
HRESULT None None.OnInvalidateRect([in] LPCRECT lpcRect)
HRESULT None propsys.VariantToInt16(_In_ REFVARIANT varIn,_Out_ SHORT *piRet)
HRESULT None oleaut32.OleCreatePictureIndirect(_In_ LPPICTDESC lpPictDesc,_In_ REFIID riid,_In_ BOOL fOwn,_Out_ LPVOID *lplpvObj)
HRESULT None xenroll.put_RootStoreNameWStr([in] LPWSTR szwName)
HRESULT None xenroll.setPendingRequestInfo([in] LONG lRequestID,[in] BSTR strCADNS,[in] BSTR strCAName,[in] BSTR strFriendlyName)
HRESULT None None.CancelRequest([in] LONG idResource,[in] IResourceConsumer *pConsumer)
HRESULT None None.SetFocus([in] IUnknown *pFocusObject)
HRESULT None xenroll.put_MyStoreFlags([in] LONG Flags)
HRESULT None propsys.VariantToUInt64Array(_In_ REFVARIANT var,_Out_ ULONGLONG *prgn,_In_ ULONG crgn,_Out_ ULONG *pcElem)
HRESULT None None.GetDVDTextStringAsUnicode([in] ULONG ulLangIndex,[in] ULONG ulStringIndex,[out] WCHAR *pchBuffer,[in] ULONG ulMaxBufferSize,[out] ULONG *pulActualSize,[out] DVD_TextStringType *pType)
HRESULT None xenroll.put_LimitExchangeKeyToEncipherment([in] BOOL fLimitExchangeKeyToEncipherment)
HRESULT None None.EnumCache([out] IEnumSTATDATA **ppenumSTATDATA)
void None None.OnMediaPlayerEvent([in] MFP_EVENT_HEADER *pEventHeader)
HRESULT None xenroll.createFilePFX([in] BSTR strPassword,[in] BSTR strPFXFileName)
BOOL WINAPI advapi32.SaferSetPolicyInformation(_In_ DWORD dwScopeId,_In_ SAFER_POLICY_INFO_CLASS SaferPolicyInfoClass,_In_ DWORD InfoBufferSize,_In_ PVOID InfoBuffer,_Reserved_ LPVOID lpReserved)
BOOLEAN None None.InitializeChangeNotify(void None None)
BOOL None oledlg.OleUICanConvertOrActivateAs(_In_ REFCLSID rClsid,_In_ BOOL fIsLinkedObject,_In_ WORD wFormat)
HRESULT None None.GetOpenParentState([out] DWORD *pdwState)
HRESULT None propsys.PropVariantToUInt32VectorAlloc(_In_ REFPROPVARIANT propvar,_Out_ ULONG **pprgn,_Out_ ULONG *pcElem)
int WINAPI user32.LoadString(_In_opt_ HINSTANCE hInstance,_In_ UINT uID,_Out_ LPTSTR lpBuffer,_In_ int nBufferMax)
int WINAPI user32.LoadStringW(_In_opt_ HINSTANCE hInstance,_In_ UINT uID,_Out_ LPTSTR lpBuffer,_In_ int nBufferMax)
int WINAPI user32.LoadStringA(_In_opt_ HINSTANCE hInstance,_In_ UINT uID,_Out_ LPTSTR lpBuffer,_In_ int nBufferMax)
HRESULT None None.SelectSubpictureStream(ULONG ulSubPicture None,[in] DWORD dwFlags,[out] IDvdCmd **ppCmd)
HRESULT None propsys.VariantGetBooleanElem(_In_ REFVARIANT var,_In_ ULONG iElem,_Out_ BOOL *pfVal)
HRESULT None ole32.OleQueryLinkFromData(_In_ LPDATAOBJECT pSrcDataObject)
HRESULT None None.PlayNextChapter([in] DWORD dwFlags,[out] IDvdCmd **ppCmd)
NTSTATUS None advapi32.LsaLookupNames(_In_ LSA_HANDLE PolicyHandle,_In_ ULONG Count,_In_ PLSA_UNICODE_STRING Names,_Out_ PLSA_REFERENCED_DOMAIN_LIST *ReferencedDomains,_Out_ PLSA_TRANSLATED_SID *Sids)
BOOL WINAPI advapi32.SaferCloseLevel(_In_ SAFER_LEVEL_HANDLE hLevelHandle)
HRESULT None ole32.OleCreateLinkFromData(_In_ LPDATAOBJECT pSrcDataObj,_In_ REFIID riid,_In_ DWORD renderopt,_In_ LPFORMATETC pFormatEtc,_In_ LPOLECLIENTSITE pClientSite,_In_ LPSTORAGE pStg,_Out_ LPVOID *ppvObj)
SCESTATUS WINAPI None.SceSvcAttachmentAnalyze(_In_ PSCESVC_CALLBACK_INFO pSceCbInfo)
HRESULT None None.GetButtonAtPosition([in] POINT point,[out] ULONG *puButtonIndex)
HRESULT None None.PropVariantGetElem(_In_ REFPROPVARIANT propvarIn,_In_ ULONG iElem,_Out_ PROPVARIANT *ppropvar)
NTSTATUS None advapi32.LsaEnumerateTrustedDomainsEx(_In_ LSA_HANDLE PolicyHandle,_In_ PLSA_ENUMERATION_HANDLE EnumerationContext,_Out_ PVOID *Buffer,_In_ ULONG PreferredMaximumLength,_Out_ PULONG CountReturned)
NET_API_STATUS None netapi32.NetShareSetInfo(_In_ LPWSTR servername,_In_ LPWSTR netname,_In_ DWORD level,_In_ LPBYTE buf,_Out_ LPDWORD parm_err)
HRESULT None None.PlayAtTimeInTitle([in] ULONG uiTitle,[in] DVD_HMSF_TIMECODE *pTime,[in] DWORD dwFlags,[out] IDvdCmd **ppCmd)
HRESULT None None.GetAllSPRMs([out] SPRMARRAY *pRegisterArray)
HRESULT None None.GetButtonRect([in] ULONG ulButton,[out] RECT *pRect)
HRESULT None xenroll.getProviderType([in] BSTR strProvName,[out] LONG *plProvType)
DWORD None None.GetNextLink([in] DWORD dwLink)
NET_API_STATUS None netapi32.NetShareGetInfo(_In_ LPWSTR servername,_In_ LPWSTR netname,_In_ DWORD level,_Out_ LPBYTE *bufptr)
HRESULT None None.GetCmdFromEvent([in] LONG_PTR lParam1,[out] IDvdCmd **ppCmdObj)
HRESULT None None.UnRegisterClassReqCategories([in] REFCLSID rclsid,[in] ULONG cCategories,[in] CATID rgcatid[])
HRESULT None ole32.OleTranslateAccelerator(_In_ LPOLEINPLACEFRAME lpFrame,_In_ LPOLEINPLACEFRAMEINFO lpFrameInfo,_In_ LPMSG lpmsg)
HRESULT None ole32.OleSaveToStream(_In_ LPPERSISTSTREAM pPStm,_In_ LPSTREAM pStm)
HRESULT None None.SelectRelativeButton(DVD_RELATIVE_BUTTON buttonDir None)
HRESULT None xenroll.put_KeySpec([in] LONG KeySpec)
HRESULT None xenroll.put_HashAlgID([in] LONG hashAlgID)
HRESULT None xenroll.put_RenewalCertificate([in] PCCERT_CONTEXT pCertContext)
HRESULT None xenroll.put_IncludeSubjectKeyID([in] BOOL fInclude)
HRESULT None None.Request(IMediaSample *pSample None,[in] DWORD_PTR dwUser)
HRESULT None None.GetCurrentDomain([out] DVD_DOMAIN *pDomain)
NTSTATUS None None.PasswordChangeNotify(_In_ PUNICODE_STRING UserName,_In_ ULONG RelativeId,_In_ PUNICODE_STRING NewPassword)
HRESULT None None.GetCurrentUOPS([out] ULONG *pulUOPs)
HRESULT None xenroll.put_RootStoreTypeWStr([in] LPWSTR szwType)
HRESULT None xenroll.put_GenKeyFlags([in] LONG Flags)
HRESULT None taskschd.put_Settings([in] ITaskSettings *pSettings)
BOOL None ole32.OleIsRunning(_In_ LPOLEOBJECT pObject)
HRESULT None None.GetNumberOfChapters([in] ULONG ulTitle,[out] ULONG *pulNumOfChapters)
HRESULT None ole32.OleDraw(_In_ LPUNKNOWN pUnknown,_In_ DWORD dwAspect,_In_ HDC hdcDraw,_In_ LPCRECT lprcBounds)
HRESULT None None.LockRunning([in] BOOL fLock,[in] BOOL fLastUnlockCloses)
HGLOBAL None ole32.OleMetafilePictFromIconAndLabel(_In_ HICON hIcon,_In_ LPOLESTR lpszLabel,_In_ LPOLESTR lpszSourceFile,_In_ UINT iIconIndex)
void None ole32.OleUninitialize(void None None)
HRESULT None ole32.OleCreateFromFileEx(_In_ REFCLSID rclsid,_In_ LPCOLESTR lpszFileName,_In_ REFIID riid,_In_ DWORD dwFlags,_In_ DWORD renderopt,_In_ ULONG cFormats,_In_ DWORD *rgAdvf,_In_ LPFORMATETC rgFormatEtc,_In_ IAdviseSink *lpAdviseSink,_Out_ DWORD *rgdwConnection,_In_ LPOLECLIENTSITE pClientSite,_In_ LPSTORAGE pStg,_Out_ LPVOID *ppvObj)
HRESULT None xenroll.put_MyStoreTypeWStr([in] LPWSTR szwType)
HRESULT None None.GetCurrentLocation([out] DVD_PLAYBACK_LOCATION2 *pLocation)
HRESULT None xenroll.enumProviders([in] LONG dwIndex,[in] LONG dwFlags,[out] BSTR *pbstrProvName)
ULONGLONG None propsys.VariantToUInt64WithDefault(_In_ REFVARIANT varIn,_In_ ULONGLONG ullDefault)
HRESULT None xenroll.put_ContainerNameWStr([in] LPWSTR szwContainer)
HRESULT None xenroll.enumContainersWStr([in] LONG dwIndex,[out] LPWSTR *ppwsz)
HRESULT None None.GetTitleParentalLevels([in] ULONG ulTitle,[out] ULONG *pulParentalLevels)
HRESULT None None.GetTCRMode([in] long Param,[out] long *pValue)
HRESULT None oleaut32.OleLoadPictureEx(_In_ LPSTREAM lpstream,_In_ LONG lSize,_In_ BOOL fRunmode,_In_ REFIID riid,_In_ DWORD xSizeDesired,_In_ DWORD ySizeDesired,_In_ DWORD dwFlags,_Out_ LPVOID *lplpvObj)
HRESULT None None.GetSubpictureLanguage([in] ULONG ulStream,[out] LCID *pLanguage)
HRESULT None None.GetSubpictureLanguage([in] ULONG ulStream,[out] LCID *pLanguage)
int None shlwapi.StrCmpI(_In_ PCTSTR psz1,_In_ PCTSTR psz2)
int None shlwapi.StrCmpIW(_In_ PCTSTR psz1,_In_ PCTSTR psz2)
HRESULT None None.GetOpenParentState([out] DWORD *pdwState)
NTSTATUS None secur32.LsaRegisterPolicyChangeNotification(_In_ POLICY_NOTIFICATION_INFORMATION_CLASS InformationClass,_In_ HANDLE NotificationEventHandle)
HRESULT None xenroll.createPFX([in] BSTR strPassword,[out] BSTR *pstrPFX)
HRESULT None None.Cache([in] FORMATETC *pformatetc,[in] DWORD advf,[out] DWORD *pdwConnection)
HRESULT None ole32.OleRegEnumFormatEtc(_In_ REFCLSID clsid,_In_ DWORD dwDirection,_Out_ LPENUMFORMATETC *ppenum)
NTSTATUS WINAPI advapi32.LsaLookupPrivilegeValue(LSA_HANDLE PolicyHandle None,PUNICODE_STRING Name None,PLUID Value None)
HRESULT None xenroll.put_WriteCertToCSP([in] BOOL fBool)
HRESULT None propsys.PropVariantToGUID(_In_ REFPROPVARIANT propvarIn,_Out_ GUID *pguid)
HRESULT None None.GetDVDTextStringAsUnicode([in] ULONG ulLangIndex,[in] ULONG ulStringIndex,[out] WCHAR *pchBuffer,[in] ULONG ulMaxBufferSize,[out] ULONG *pulActualSize,[out] DVD_TextStringType *pType)
HRESULT None None.SetState([in] IDvdState *pState,[in] DWORD dwFlags,[out] IDvdCmd **ppCmd)
BOOL WINAPI advapi32.SaferIdentifyLevel(_In_ DWORD dwNumProperties,_In_opt_ PSAFER_CODE_PROPERTIES pCodeProperties,_Out_ SAFER_LEVEL_HANDLE *pLevelHandle,_Reserved_ LPVOID lpReserved)
HRESULT None None.GetPlayerParentalLevel([out] ULONG *pulParentalLevel,[out] BYTE pulCountryCode[2])
HRESULT None urlmon.CreateFormatEnumerator(_In_ UINT cfmtetc,_In_ FORMATETC *rgfmtetc,_Out_ IEnumFORMATETC **ppenumfmtetc)
HRESULT None None.SetDVDDirectory([in] LPCWSTR pszwPath)
HRESULT None xenroll.createRequest([in] LONG Flags,[in] BSTR strDNName,[in] BSTR Usage,[out] BSTR *pstrRequest)
HRESULT None None.OpenLinkSource([in] DWORD dwLink)
HRESULT None None.SetDVDDirectory([in] LPCWSTR pszwPath)
BOOL WINAPI advapi32.SaferCreateLevel(_In_ DWORD dwScopeId,_In_ DWORD dwLevelId,_In_ DWORD OpenFlags,_Out_ SAFER_LEVEL_HANDLE *pLevelHandle,_Reserved_ LPVOID lpReserved)
HRESULT None xenroll.removePendingRequest([in] BSTR strThumbprint)
HRESULT None None.LockContainer([in] BOOL fLock)
HRESULT None ole32.OleCreateFromFile(_In_ REFCLSID rclsid,_In_ LPCOLESTR lpszFileName,_In_ REFIID riid,_In_ DWORD renderopt,_In_ LPFORMATETC lpFormatEtc,_In_ LPOLECLIENTSITE pClientSite,_In_ LPSTORAGE pStg,_Out_ LPVOID *ppvObj)
HRESULT None ole32.OleCreateLinkToFile(_In_ LPCOLESTR lpszFileName,_In_ REFIID riid,_In_ DWORD renderopt,_In_ LPFORMATETC lpFormatEtc,_In_ LPOLECLIENTSITE pClientSite,_In_ LPSTORAGE pStg,_Out_ LPVOID *ppvObj)
HRESULT None xenroll.createFilePKCS10WStr([in] LPCWSTR DNName,[in] LPCWSTR Usage,[in] LPCWSTR wszPKCS10FileName)
UINT None oledlg.OleUIChangeIcon(_In_ LPOLEUICHANGEICON lpCI)
UINT None oledlg.OleUIChangeIconW(_In_ LPOLEUICHANGEICON lpCI)
UINT None oledlg.OleUIChangeIconA(_In_ LPOLEUICHANGEICON lpCI)
HRESULT None None.GetAudioAttributes([in] ULONG ulStream,[out] DVD_AudioAttributes *pATR)
HRESULT None None.GetDVDVolumeInfo([out] ULONG *pulNumOfVolumes,[out] ULONG *pulVolume,[out] DVD_DISC_SIDE *pSide,[out] ULONG *pulNumOfTitles)
NTSTATUS None advapi32.LsaRetrievePrivateData(_In_ LSA_HANDLE PolicyHandle,_In_ PLSA_UNICODE_STRING KeyName,_Out_ PLSA_UNICODE_STRING *PrivateData)
HRESULT None xenroll.put_RequestStoreTypeWStr([in] LPWSTR szwType)
HRESULT None xenroll.put_ProviderType([in] LONG Type)
HRESULT None ole32.OleCreateEx(_In_ REFCLSID rclsid,_In_ REFIID riid,_In_ DWORD dwFlags,_In_ DWORD renderopt,_In_ ULONG cFormats,_In_ DWORD *rgAdvf,_In_ LPFORMATETC rgFormatEtc,_In_ IAdviseSink *lpAdviseSink,_Out_ DWORD *rgdwConnection,_In_ LPOLECLIENTSITE pClientSite,_In_ LPSTORAGE pStg,_Out_ LPVOID *ppvObj)
HANDLE WINAPI user32.SetClipboardData(_In_ UINT uFormat,_In_opt_ HANDLE hMem)
HRESULT None None.RegisterGroup([in] LPCWSTR pName,[in] LONG cResource,[in] LONG *palTokens,[out] LONG *plToken)
HRESULT None None.SetOption([in] DVD_OPTION_FLAG flag,[in] BOOL bEnable)
HRESULT None xenroll.put_WriteCertToCSP([in] BOOL bValue)
HRESULT None None.GetManageModule([out] ICertManageModule **ppManageModule)
HRESULT None ole32.OleQueryCreateFromData(_In_ LPDATAOBJECT pSrcDataObject)
HRESULT None None.UnRegisterClassReqCategories([in] REFCLSID rclsid,[in] ULONG cCategories,[in] CATID rgcatid[])
HRESULT None None.PlayPeriodInTitleAutoStop([in] ULONG ulTitle,[in] DVD_HMSF_TIMECODE *pStartTime,[in] DVD_HMSF_TIMECODE *pEndTime,[in] DWORD dwFlags,[out] IDvdCmd **ppCmd)
NTSTATUS None secur32.LsaUnregisterPolicyChangeNotification(_In_ POLICY_NOTIFICATION_INFORMATION_CLASS InformationClass,_In_ HANDLE NotificationEventHandle)
HRESULT None xenroll.enumProvidersWStr([in] LONG dwIndex,[in] LONG dwFlags,[out] LPWSTR *pbstrProvName)
HANDLE None ole32.OleDuplicateData(_In_ HANDLE hSrc,_In_ CLIPFORMAT cfFormat,_In_ UINT uiFlags)
HRESULT None None.ShowDialog([in] int iDialog,[in] HWND hwnd)
UINT None oledlg.OleUIObjectProperties(_In_ LPOLEUIOBJECTPROPS lpOF)
UINT None oledlg.OleUIObjectPropertiesW(_In_ LPOLEUIOBJECTPROPS lpOF)
UINT None oledlg.OleUIObjectPropertiesA(_In_ LPOLEUIOBJECTPROPS lpOF)
HRESULT None None.GetBackgroundClr([in] COLORREF *lpClrBkg)
HRESULT None None.GetCurrentAudio([out] ULONG *pulStreamsAvailable,[out] ULONG *pulCurrentStream)
HRESULT None None.SyncReadAligned(IMediaSample *pSample None)
HRESULT None certadm.SetResultColumn([in] LONG ColumnIndex)
HRESULT None None.Load([in] IStream *pStm)
HRESULT None None.SelectParentalCountry([in] BYTE country_region[2])
HRESULT None None.NewSegment(REFERENCE_TIME tStart None,REFERENCE_TIME tStop None,double dRate None)
HRESULT None ole32.OleCreate(_In_ REFCLSID rclsid,_In_ REFIID riid,_In_ DWORD renderopt,_In_ LPFORMATETC pFormatEtc,_In_ LPOLECLIENTSITE pClientSite,_In_ LPSTORAGE pStg,_Out_ LPVOID *ppvObj)
HRESULT None None.SetClipFactor([in] long ClipFactor)
HRESULT None xenroll.put_ReuseHardwareKeyIfUnableToGenNew([in] BOOL fReuseHardwareKeyIfUnableToGenNew)
HRESULT None None.Drop([in] IDataObject *pDataObj,[in] DWORD grfKeyState,[in] POINTL pt,[in None None,out] DWORD *pdwEffect)
HRESULT None xenroll.enumPendingRequestWStr([in] LONG lIndex,[in] LONG lDesiredProperty,[out] LPVOID ppProperty)
BOOL WINAPI advapi32.SaferIdentifyLevel(_In_ DWORD dwNumProperties,_In_opt_ PSAFER_CODE_PROPERTIES pCodeProperties,_Out_ SAFER_LEVEL_HANDLE *pLevelHandle,_Reserved_ LPVOID lpReserved)
PTSTR None shlwapi.StrRChr(_In_ PTSTR pszStart,_In_opt_ PCTSTR pszEnd,TCHAR wMatch None)
PTSTR None shlwapi.StrRChrW(_In_ PTSTR pszStart,_In_opt_ PCTSTR pszEnd,TCHAR wMatch None)
PTSTR None shlwapi.StrRChrA(_In_ PTSTR pszStart,_In_opt_ PCTSTR pszEnd,TCHAR wMatch None)
NET_API_STATUS None netapi32.NetShareAdd(_In_ LPWSTR servername,_In_ DWORD level,_In_ LPBYTE buf,_Out_ LPDWORD parm_err)
HRESULT None xenroll.put_IncludeSubjectKeyID([in] BOOL fInclude)
HRESULT None xenroll.InstallPKCS7BlobEx([in] PCRYPT_DATA_BLOB pBlobPKCS7,[out] LONG *plCertInstalled)
ULONG None advapi32.LsaNtStatusToWinError(_In_ NTSTATUS Status)
HRESULT None xenroll.put_CAStoreNameWStr([in] LPWSTR szwName)
HRESULT None None.Run([in] LPBINDCTX pbc)
HRESULT None ole32.OleLoad(_In_ LPSTORAGE pStg,_In_ REFIID riid,_In_ LPOLECLIENTSITE pClientSite,_Out_ LPVOID *ppvObj)
HRESULT None xenroll.InstallPKCS7Ex([in] BSTR PKCS7,[out] LONG *plCertInstalled)
HRESULT None xenroll.SetHStoreCA([in] HCERTSTORE hStore)
HRESULT None xenroll.InstallPKCS7([in] BSTR PKCS7)
LPTSTR WINAPI kernel32.lstrcpyn(_Out_ LPTSTR lpString1,_In_ LPCTSTR lpString2,_In_ int iMaxLength)
LPTSTR WINAPI kernel32.lstrcpynW(_Out_ LPTSTR lpString1,_In_ LPCTSTR lpString2,_In_ int iMaxLength)
LPTSTR WINAPI kernel32.lstrcpynA(_Out_ LPTSTR lpString1,_In_ LPCTSTR lpString2,_In_ int iMaxLength)
HRESULT None None.Resume([in] DWORD dwFlags,[out] IDvdCmd **ppCmd)
HRESULT None xenroll.acceptPKCS7Blob([in] PCRYPT_DATA_BLOB pBlobPKCS7)
HRESULT None certcli.GetRefreshPolicy([out None None,retval] VARIANT_BOOL *pValue)
HRESULT None ole32.OleCreateLinkToFile(_In_ LPCOLESTR lpszFileName,_In_ REFIID riid,_In_ DWORD renderopt,_In_ LPFORMATETC lpFormatEtc,_In_ LPOLECLIENTSITE pClientSite,_In_ LPSTORAGE pStg,_Out_ LPVOID *ppvObj)
HRESULT None None.GetAllSPRMs([out] SPRMARRAY *pRegisterArray)
HRESULT None None.GetDecoderCaps([out] DVD_DECODER_CAPS *pCaps)
HRESULT None None.IsAudioStreamEnabled([in] ULONG ulStreamNum,[out] BOOL *pbEnabled)
HRESULT None ole32.OleGetClipboardWithEnterpriseInfo(_Out_ IDATAOBJECT **dataObject,_Out_ PWSTR *dataEnterpriseId,_Out_ PWSTR *sourceDescription,_Out_ PWSTR *targetDescription,_Out_ PWSTR *dataDescription)
HRESULT None ole32.OleCreateDefaultHandler(_In_ REFCLSID clsid,_In_ LPUNKNOWN pUnkOuter,_In_ REFIID riid,_Out_ LPVOID *lplpObj)
NTSTATUS None advapi32.LsaSetTrustedDomainInfoByName(_In_ LSA_HANDLE PolicyHandle,_In_ PLSA_UNICODE_STRING TrustedDomainName,_In_ TRUSTED_INFORMATION_CLASS InformationClass,_In_ PVOID Buffer)
HRESULT None xenroll.AddCertTypeToRequestWStr([in] LPWSTR szw)
HRESULT None ole32.OleSetMenuDescriptor(_In_ HOLEMENU holemenu,_In_ HWND hwndFrame,_In_ HWND hwndActiveObject,_In_ LPOLEINPLACEFRAME lpFrame,_In_ LPOLEINPLACEACTIVEOBJECT lpActiveObj)
HRESULT None None.GetWindowHandle([out] HWND *pHwnd)
HRESULT None taskschd.put_Id([in] BSTR id)
HRESULT None propsys.VariantGetInt64Elem(_In_ REFVARIANT var,_In_ ULONG iElem,_Out_ LONGLONG *pnVal)
HRESULT None None.GetMixingPrefs([in] DWORD *dwMixerPrefs)
HRESULT None xenroll.createPKCS10WStr([in] LPCWSTR DNName,[in] LPCWSTR Usage,[out] PCRYPT_DATA_BLOB *pPkcs10Blob)
HRESULT None xenroll.put_MyStoreNameWStr([in] LPWSTR szwName)
HRESULT None certcli.GetRequestId([out] LONG *pRequestId)
HRESULT None None.GetAllSettings([in] IStream *pStream)
HRESULT None xenroll.put_WriteCertToUserDS([in] BOOL fBool)
HRESULT None None.PlayForwards([in] double dwSpeed,[in] DWORD dwFlags,[out] IDvdCmd **ppCmd)
HRESULT None ole32.OleSave(_In_ LPPERSISTSTORAGE pPS,_In_ LPSTORAGE pStg,_In_ BOOL fSameAsLoad)
HRESULT None None.GetCurrentButton([out] ULONG *pulButtonsAvailable,[out] ULONG *pulCurrentButton)
HRESULT None None.get_VITCLine([out] long *pLine)
HRESULT None None.SetImageCompositor([in] IVMRImageCompositor *lpVMRImgCompositor)
HRESULT None xenroll.put_ProviderNameWStr([in] LPWSTR szwProvider)
HRESULT None None.GetPushSourceFlags([out] ULONG *pFlags)
HRESULT None None.IsKeepPixelAspectRatio([in] long *pKeepAspect)
HRESULT None xenroll.GetAlgName([in] LONG algID,[out] BSTR *pbstr)
HRESULT None None.GetSyncSource([out] IReferenceClock **pClock)
HRESULT None None.PlayTitle(ULONG uiTitle None,[in] DWORD dwFlags,[out] IDvdCmd **ppCmd)
HRESULT None None.SelectButton([in] ULONG ulButton)
HRESULT None None.put_KeyFrameRate([in] long KeyFrameRate)
HRESULT None xenroll.acceptFileResponseWStr([in] LPCWSTR pwszResponseFileName)
HRESULT None None.GetCurrentMode([out] long *pMode)
HRESULT None None.ReturnFromSubmenu([in] DWORD dwFlags,[out] IDvdCmd **ppCmd)
HRESULT None None.GetData([in] FORMATETC *pformatetcIn,[out] STGMEDIUM *pmedium)
HRESULT None None.AcceptParentalLevelChange([in] BOOL bAccept)
HRESULT None xenroll.put_EnableT61DNEncoding([in] BOOL fBool)
HRESULT None None.Length(LONGLONG *pTotal None,LONGLONG *pAvailable None)
BOOL None shlwapi.IntlStrEqNI(_In_ LPCTSTR pszStr1,_In_ LPCTSTR pszStr2,_In_ int nChar)
BOOL None shlwapi.IntlStrEqNIW(_In_ LPCTSTR pszStr1,_In_ LPCTSTR pszStr2,_In_ int nChar)
BOOL None shlwapi.IntlStrEqNIA(_In_ LPCTSTR pszStr1,_In_ LPCTSTR pszStr2,_In_ int nChar)
HRESULT None None.ConnectionMediaType([out] AM_MEDIA_TYPE *pmt)
NET_API_STATUS None netapi32.NetShareEnum(_In_ LPWSTR servername,_In_ DWORD level,_Out_ LPBYTE *bufptr,_In_ DWORD prefmaxlen,_Out_ LPDWORD entriesread,_Out_ LPDWORD totalentries,_Inout_ LPDWORD resume_handle)
HRESULT None xenroll.createFileRequest([in] LONG Flags,[in] BSTR strDNName,[in] BSTR strUsage,[in] BSTR strRequestFileName)
UINT None oledlg.OleUIBusy(_In_ LPOLEUIBUSY lpBZ)
UINT None oledlg.OleUIBusyW(_In_ LPOLEUIBUSY lpBZ)
UINT None oledlg.OleUIBusyA(_In_ LPOLEUIBUSY lpBZ)
HRESULT None None.SetOption([in] DVD_OPTION_FLAG flag,[in] BOOL bEnable)
NTSTATUS WINAPI netapi32.NetQueryServiceAccount(_In_opt_ LPWSTR ServerName,_In_ LPWSTR AccountName,_In_ DWORD InfoLevel,_Out_ PBYTE *Buffer)
HRESULT None None.GetBackgroundColor(DWORD *pdwPhysColor None)
HRESULT None xenroll.setPendingRequestInfo([in] LONG lRequestID,[in] BSTR strCADNS,[in] BSTR strCAName,[in] BSTR strFriendlyName)
HRESULT None xenroll.getProviderType([in] BSTR strProvName,[out] LONG *plProvType)
HRESULT None None.SetMixingPrefs([in] DWORD dwMixerPrefs)
HRESULT None None.PlayChapterInTitle([in] ULONG ulTitle,[in] ULONG ulChapter,[in] DWORD dwFlags,[out] IDvdCmd **ppCmd)
HRESULT None None.Run([in] LPBINDCTX pbc)
UINT WINAPI user32.RegisterClipboardFormat(_In_ LPCTSTR lpszFormat)
UINT WINAPI user32.RegisterClipboardFormatW(_In_ LPCTSTR lpszFormat)
UINT WINAPI user32.RegisterClipboardFormatA(_In_ LPCTSTR lpszFormat)
HRESULT None certadm.get_Name([out] BSTR *pVal)
HRESULT None None.SelectAndActivateButton([in] ULONG ulButton)
virtual HRESULT None.CheckConnect(IPin *pPin None)
HRESULT None None.PlayAtTime([in] DVD_HMSF_TIMECODE *pTime,[in] DWORD dwFlags,[out] IDvdCmd **ppCmd)
NET_API_STATUS None netapi32.NetShareDel(_In_ LMSTR servername,_In_ LMSTR netname,DWORD reserved None)
NTSTATUS None advapi32.LsaEnumerateAccountRights(_In_ LSA_HANDLE PolicyHandle,_In_ PSID AccountSid,_Out_ PLSA_UNICODE_STRING *UserRights,_Out_ PULONG CountOfRights)
HRESULT None ole32.OleCreateEmbeddingHelper(_In_ REFCLSID clsid,_In_ LPUNKNOWN pUnkOuter,_In_ DWORD flags,_In_ LPCLASSFACTORY pCF,_In_ REFIID riid,_Out_ LPVOID *lplpObj)
typedef None None.SCESTATUS(*PFSCE_SET_INFO None None)
NTSTATUS WINAPI netapi32.NetEnumerateServiceAccounts(_In_opt_ LPWSTR ServerName,_In_ DWORD Flags,_Out_ DWORD *AccountsCount,_Out_ PZPWSTR *Accounts)
HRESULT None xenroll.GetSupportedKeySpec([out] LONG *pdwKeySpec)
HRESULT None certadm.EnumCertViewColumn([out] IEnumCERTVIEWCOLUMN **ppenum)
HRESULT None None.Advise([in] IOverlayNotify *pOverlayNotify,[in] DWORD dwInterests)
HRESULT None xenroll.put_RequestStoreFlags([in] LONG Flags)
HRESULT None xenroll.AddExtensionsToRequest([in] PCERT_EXTENSIONS pCertExtensions)
HRESULT None xenroll.createPKCS10WStr([in] LPCWSTR DNName,[in] LPCWSTR Usage,[out] PCRYPT_DATA_BLOB *pPkcs10Blob)
HRESULT None certadm.SetResultColumn([in] LONG ColumnIndex)
HRESULT None xenroll.getCertContextFromFileResponseWStr([in] LPCWSTR pwszResponseFileName,[out] PCCERT_CONTEXT *ppCertContext)
HRESULT None None.SetAlpha([in] DWORD dwStreamID,[in] float Alpha)
HRESULT None None.GetDefaultMenuLanguage([out] LCID *pLanguage)
HRESULT None xenroll.SetPrivateKeyArchiveCertificate([in] PCCERT_CONTEXT pPrivateKeyArchiveCert)
HRESULT None None.SelectParentalLevel(ULONG ulParentalLevel None)
HRESULT None None.Pause([in] BOOL bState)
HRESULT None None.HideOnDeactivate([in] long Hide)
HRESULT None certcli.GetIssuedCertificate2([in] BSTR strConfig,[in] BSTR strRequestId,[in] BSTR strSerialNumber,[out None None,retval] LONG *pDisposition)
HRESULT None xenroll.acceptResponseBlob([in] PCRYPT_DATA_BLOB pblobResponse)
HRESULT None xenroll.binaryBlobToString([in] LONG Flags,[in] PCRYPT_DATA_BLOB pblobBinary,[out] LPWSTR *ppwszString)
HRESULT None None.SelectVideoModePreference([in] ULONG ulPreferredDisplayMode)
HRESULT None certocm.get_MSCEPErrorId([out] LONG *pVal)
HRESULT None xenroll.AddNameValuePairToSignatureWStr([in] LPWSTR Name,[in] LPWSTR Value)
HRESULT None None.ReleaseFocus([in] IUnknown *pFocusObject)
HRESULT None xenroll.put_RequestStoreType([in] BSTR Type)
HRESULT None xenroll.addBlobPropertyToCertificateWStr([in] LONG lPropertyId,[in] LONG lReserved,[in] PCRYPT_DATA_BLOB pBlobProperty)
HRESULT None None.put_CountryCode([in] long lCountryCode)
HRESULT None None.GetDeinterlaceMode([in] DWORD dwStreamID,[out] GUID *lpDeinterlaceMode)
HRESULT None xenroll.GetAlgNameWStr([in] LONG algID,[out] LPWSTR *ppwsz)
int None shlwapi.StrCmpC(_Out_ LPCTSTR lpStr1,_Out_ LPCTSTR lpStr2)
int None shlwapi.StrCmpCW(_Out_ LPCTSTR lpStr1,_Out_ LPCTSTR lpStr2)
int None shlwapi.StrCmpCA(_Out_ LPCTSTR lpStr1,_Out_ LPCTSTR lpStr2)
HRESULT None None.GetDecoderCaps([out] DVD_DECODER_CAPS *pCaps)
HRESULT None None.SetGPRM([in] ULONG ulIndex,[in] WORD wValue,[in] DWORD dwFlags,[out] IDvdCmd **ppCmd)
HRESULT None oleaut32.OleLoadPicturePath(_In_ LPOLESTR szURLorPath,_In_ LPUNKNOWN punkCaller,_In_ DWORD dwReserved,_In_ OLE_COLOR clrReserved,_In_ REFIID riid,_Out_ LPVOID *ppvRet)
HRESULT None None.PlayChaptersAutoStop([in] ULONG ulTitle,[in] ULONG ulChapter,[in] ULONG ulChaptersToPlay,[in] DWORD dwFlags,[out] IDvdCmd **ppCmd)
HRESULT None None.put_Pan([in] double Pan)
HRESULT None xenroll.getCertContextFromResponseBlob([in] PCRYPT_DATA_BLOB pblobResponse,[out] PCCERT_CONTEXT *ppCertContext)
HRESULT None propsys.PropVariantToStringVectorAlloc(_In_ REFPROPVARIANT propvar,_Out_ PWSTR **pprgsz,_Out_ ULONG *pcElem)
HRESULT None None.GetNaturalExtent([in] DWORD dwAspect,[in] LONG lindex,[in] DVTARGETDEVICE *ptd,[in] HDC hicTargetDev,[in] DVEXTENTINFO *pExtentInfo,[out] LPSIZEL pSizel)
HRESULT None None.GetRate([out] double *dRate)
HRESULT None None.Register([in] LPCWSTR pName,[in] LONG cResource,[out] LONG *plToken)
DWORD None netapi32.DsEnumerateDomainTrusts(_In_opt_ LPTSTR ServerName,_In_ ULONG Flags,_Out_ PDS_DOMAIN_TRUSTS *Domains,_Out_ PULONG DomainCount)
DWORD None netapi32.DsEnumerateDomainTrustsW(_In_opt_ LPTSTR ServerName,_In_ ULONG Flags,_Out_ PDS_DOMAIN_TRUSTS *Domains,_Out_ PULONG DomainCount)
DWORD None netapi32.DsEnumerateDomainTrustsA(_In_opt_ LPTSTR ServerName,_In_ ULONG Flags,_Out_ PDS_DOMAIN_TRUSTS *Domains,_Out_ PULONG DomainCount)
HRESULT None None.GetCaption([out] BSTR *pstrCaption)
HRESULT None None.SetClipFactor([in] long ClipFactor)
PTSTR None shlwapi.StrCpyN(_Out_ PTSTR pszDst,_In_ PCTSTR pszSrc,int cchMax None)
PTSTR None shlwapi.StrCpyNW(_Out_ PTSTR pszDst,_In_ PCTSTR pszSrc,int cchMax None)
int None shlwapi.wnsprintf(_Out_ PTSTR pszDest,_In_ int cchDest,_In_ PCTSTR pszFmt,_In_ ... None)
int None shlwapi.wnsprintfW(_Out_ PTSTR pszDest,_In_ int cchDest,_In_ PCTSTR pszFmt,_In_ ... None)
int None shlwapi.wnsprintfA(_Out_ PTSTR pszDest,_In_ int cchDest,_In_ PCTSTR pszFmt,_In_ ... None)
HRESULT None certcli.GetErrorMessageText([in] LONG hrMessage,[in] LONG Flags,[out] BSTR *pstrErrorMessageText)
UINT None oledlg.OleUIChangeSource(_In_ LPOLEUICHANGESOURCE lpCS)
UINT None oledlg.OleUIChangeSourceW(_In_ LPOLEUICHANGESOURCE lpCS)
UINT None oledlg.OleUIChangeSourceA(_In_ LPOLEUICHANGESOURCE lpCS)
HOLEMENU None ole32.OleCreateMenuDescriptor(_In_ HMENU hmenuCombined,_In_ LPOLEMENUGROUPWIDTHS lpMenuWidths)
HRESULT None None.get_PFramesPerKeyFrame([out] long *pPFramesPerKeyFrame)
HRESULT None None.SetEnabled([in] long Mode,[in] long bEnabled)
HRESULT None xenroll.put_ClientId([in] LONG lClientID)
BOOL WINAPI user32.AddClipboardFormatListener(_In_ HWND hwnd)
HRESULT None None.SelectAngle([in] ULONG ulAngle,[in] DWORD dwFlags,[out] IDvdCmd **ppCmd)
int WINAPI user32.GetPriorityClipboardFormat(_In_ UINT *paFormatPriorityList,_In_ int cFormats)
HRESULT None None.GetSyncSource([out] IReferenceClock **pClock)
HRESULT None xenroll.binaryToString([in] LONG Flags,[in] BSTR strBinary,[out] BSTR *pstrEncoded)
HRESULT None xenroll.addExtensionToRequestWStr([in] LONG Flags,[in] LPCWSTR pwszName,[in] PCRYPT_DATA_BLOB pblobValue)
HRESULT None None.GetRelativePosition([out] DWORD *pdwLeft,[out] DWORD *pdwTop,[out] DWORD *pdwRight,[out] DWORD *pdwBottom)
NTSTATUS None advapi32.LsaEnumerateAccountRights(_In_ LSA_HANDLE PolicyHandle,_In_ PSID AccountSid,_Out_ PLSA_UNICODE_STRING *UserRights,_Out_ PULONG CountOfRights)
HRESULT None None.SyncRead([in] LONGLONG llPosition,[in] LONG lLength,[out] BYTE *pBuffer)
HRESULT None None.SetBackgroundClr([in] COLORREF ClrBkg)
HRESULT None None.GetCurrentAngle([out] ULONG *pulAnglesAvailable,[out] ULONG *pulCurrentAngle)
HRESULT None xenroll.freeRequestInfoBlob([in] CRYPT_DATA_BLOB PKCS7OrPKCS10)
HRESULT None None.SetTransportBasicParameters([in] long Param,[in] long Value,[in] LPCOLESTR pszData)
HRESULT None ole32.OleCreateLink(_In_ LPMONIKER pmkLinkSrc,_In_ REFIID riid,_In_ DWORD renderopt,_In_ LPFORMATETC lpFormatEtc,_In_ LPOLECLIENTSITE pClientSite,_In_ LPSTORAGE pStg,_Out_ LPVOID *ppvObj)
HRESULT None None.StartInitialization([out] OPM_RANDOM_NUMBER *prnRandomNumber,[out] BYTE **ppbCertificate,[out] ULONG *pulCertificateLength)
HRESULT None shlwapi.StrRetToBSTR(_Inout_ STRRET *pstr,_In_ PCUITEMID_CHILD pidl,_Out_ BSTR *pbstr)
HRESULT None xenroll.AddAuthenticatedAttributesToPKCS7Request([in] PCRYPT_ATTRIBUTES pAttributes)
HRESULT None xenroll.put_PVKFileNameWStr([in] LPWSTR szwPVKFileName)
HRESULT None None.GetData([in] FORMATETC *pformatetcIn,[out] STGMEDIUM *pmedium)
HRESULT None None.SelectDefaultAudioLanguage([in] LCID Language,[in] DVD_AUDIO_LANG_EXT audioExtension)
HRESULT None ole32.OleSetClipboard(_In_ LPDATAOBJECT pDataObj)
HRESULT None None.AutoTune([in] long lChannel,[out] long *plFoundSignal)
HRESULT None xenroll.createFileRequestWStr([in] LONG Flags,[in] LPCWSTR pwszDNName,[in] LPCWSTR pwszUsage,[in] LPCWSTR pwszRequestFileName)
HRESULT None None.Close([in] DWORD dwSaveOption)
HRESULT None xenroll.GetKeyLenEx([in] LONG lSizeSpec,[in] LONG lKeySpec,[out] LONG *pdwKeySize)
HRESULT None xenroll.acceptFilePKCS7WStr([in] LPCWSTR wszPKCS7FileName)
HRESULT None None.PlayBackwards([in] double dwSpeed,[in] DWORD dwFlags,[out] IDvdCmd **ppCmd)
HRESULT None xenroll.put_WriteCertToUserDS([in] BOOL fBool)
HRESULT None xenroll.InstallPKCS7Ex([in] BSTR PKCS7,[out] LONG *plCertInstalled)
HRESULT None None.get_CrossbarPinInfo([in] BOOL IsInputPin,[in] long PinIndex,[out] long *PinIndexRelated,[out] long *PhysicalType)
NTSTATUS None advapi32.LsaFreeMemory(_In_ PVOID Buffer)
HRESULT None xenroll.InstallPKCS7([in] BSTR PKCS7)
HRESULT None None.SetRenderingMode([in] DWORD Mode)
HRESULT None None.SetEvaluateOutputLevelLicenses([in] BOOL fEvaluate)
HRESULT None certenc.Encode([out] BSTR *pbstrBinary)
HRESULT None None.put_Gain([in] long Value,[in] long Flags)
HRESULT None xenroll.removePendingRequestWStr([in] CRYPT_DATA_BLOB thumbPrintBlob)
PTSTR None shlwapi.StrRChrI(_In_ PTSTR pszStart,_In_opt_ PCTSTR pszEnd,TCHAR wMatch None)
PTSTR None shlwapi.StrRChrIW(_In_ PTSTR pszStart,_In_opt_ PCTSTR pszEnd,TCHAR wMatch None)
PTSTR None shlwapi.StrRChrIA(_In_ PTSTR pszStart,_In_opt_ PCTSTR pszEnd,TCHAR wMatch None)
HRESULT None xenroll.setPendingRequestInfoWStr([in] LONG lRequestID,[in] LPCWSTR pwszCADNS,[in] LPCWSTR pwszCAName,[in] LPCWSTR pwszFriendlyName)
HRESULT None None.GetStreamTransparent([out] BOOL *pbStreamTransparent)
int None shlwapi.StrCmpNIC(_In_ LPCTSTR pszStr1,_In_ LPCTSTR pszStr2,int nChar None)
int None shlwapi.StrCmpNICW(_In_ LPCTSTR pszStr1,_In_ LPCTSTR pszStr2,int nChar None)
int None shlwapi.StrCmpNICA(_In_ LPCTSTR pszStr1,_In_ LPCTSTR pszStr2,int nChar None)
HRESULT None xenroll.createPFXWStr([in] LPCWSTR pwszPassword,[out] PCRYPT_DATA_BLOB pblobPFX)
HRESULT None None.get_AudioFormat([out] MPEG1WAVEFORMAT *lpFmt)
HRESULT None None.put_EnableHTTP(VARIANT_BOOL EnableHTTP None)
HRESULT None None.put_Bass([in] double Bass)
DWORD None netapi32.DsGetForestTrustInformationW(_In_opt_ LPCWSTR ServerName,_In_opt_ LPCWSTR TrustedDomainName,_In_ DWORD Flags,_Out_ PLSA_FOREST_TRUST_INFORMATION *ForestTrustInfo)
HRESULT None None.UseWhenFullScreen(long UseWhenFullScreen None)
INT None oleaut32.VariantTimeToSystemTime(_In_ DOUBLE vtime,_Out_ LPSYSTEMTIME lpSystemTime)
HRESULT None None.QueryFilterInfo([out] FILTER_INFO *pInfo)
HRESULT None None.GetDefaultAudioLanguage([out] LCID *pLanguage,DVD_AUDIO_LANG_EXT *pAudioExtension None)
HRESULT None None.AllocateSurface([in] DWORD_PTR dwUserID,[in] VMRALLOCATIONINFO *lpAllocInfo,[in] DWORD *lpdwActualBuffers,[out] LPDIRECTDRAWSURFACE7 *lplpSurface)
HRESULT None xenroll.acceptFileResponse([in] BSTR strResponseFileName)
HRESULT None None.GetAccessEntry([in] WM_AETYPE aeType,[in] DWORD dwEntryNum,[out] WM_ADDRESS_ACCESSENTRY *pAddrAccessEntry)
HRESULT None None.GetActualDeinterlaceMode([in] DWORD dwStreamID,[out] GUID *lpDeinterlaceMode)
HRESULT None xenroll.put_HashAlgorithmWStr([in] LPWSTR szwHashAlg)
HRESULT None None.getRange_ColorEnable([out] long *pMin,[out] long *pMax,[out] long *pSteppingDelta,[out] long *pDefault,[out] long *pCapsFlag)
HRESULT None None.GetModeInfo([in] long Mode,[out] long *pWidth,[out] long *pHeight,[out] long *pDepth)
HRESULT None None.GetOverlayFX([out] DWORD *lpdwOverlayFX)
HRESULT None None.SetDiscontinuity([in] BOOL bIsDiscontinuity)
HRESULT None xenroll.put_ProviderFlags([in] LONG Flags)
HRESULT None certcli.GetErrorMessageText([in] LONG hrMessage,[in] LONG Flags,[out] BSTR *pstrErrorMessageText)
HRESULT None None.GetBump([out] long *pSpeed,[out] long *pDuration)
HRESULT None None.put_Mode([in] long Mode)
HRESULT None None.GetTimeFormat([out] GUID *pFormat)
HRESULT None None.get_AvgFrameRate(int *piAvgFrameRate None)
NET_API_STATUS None netapi32.NetFileGetInfo(_In_ LMSTR servername,_In_ DWORD fileid,_In_ DWORD level,_Out_ LPBYTE *bufptr)
HRESULT None shlwapi.SHStrDup(_In_ LPCTSTR pszSource,_Out_ LPTSTR *ppwsz)
HRESULT None shlwapi.SHStrDupW(_In_ LPCTSTR pszSource,_Out_ LPTSTR *ppwsz)
HRESULT None shlwapi.SHStrDupA(_In_ LPCTSTR pszSource,_Out_ LPTSTR *ppwsz)
HRESULT None None.SignalPresent([out] long *plSignalStrength)
HRESULT None None.get_Enable([out] BOOL *pfEnable)
PTSTR None shlwapi.StrChr(_In_ PTSTR pszStart,TCHAR wMatch None)
PTSTR None shlwapi.StrChrW(_In_ PTSTR pszStart,TCHAR wMatch None)
PTSTR None shlwapi.StrChrA(_In_ PTSTR pszStart,TCHAR wMatch None)
HRESULT None None.GetVideoPaletteEntries([in] long StartIndex,[in] long Entries,[out] long *pRetrieved,[out] long *pPalette)
HRESULT None None.get_Channel([out] long *plChannel,[out] long *plVideoSubChannel,[out] long *plAudioSubChannel)
HRESULT None None.SelectKaraokeAudioPresentationMode([in] ULONG ulMode)
HRESULT None None.GetMoniker([in] DWORD dwAssign,[in] DWORD dwWhichMoniker,[out] IMoniker **ppmk)
HRESULT None None.IsModeAvailable([in] long Mode)
HRESULT None None.RemoveChain([in] IBaseFilter *pStartFilter,[in] IBaseFilter *pEndFilter)
HRESULT None None.GetZOrder([in] DWORD dwStreamID,[out] DWORD *pZOrder)
HRESULT None None.GetMarkerTime([in] long MarkerNum,[out] double *pMarkerTime)
HRESULT None None.GetBufferProgress([out] DWORD *pdwPercent,[out] QWORD *pcnsBuffering)
HRESULT None None.GetAvailable([out] LONGLONG *pEarliest,[out] LONGLONG *pLatest)
HRESULT None None.ReplayChapter([in] DWORD dwFlags,[out] IDvdCmd **ppCmd)
HRESULT None None.get_NumInputConnections([out] long *plNumInputConnections)
PTSTR None shlwapi.StrDup(PCTSTR pszSrch None)
PTSTR None shlwapi.StrDupW(PCTSTR pszSrch None)
PTSTR None shlwapi.StrDupA(PCTSTR pszSrch None)
HRESULT None None.ShowMenu([in] DVD_MENU_ID MenuID,[in] DWORD dwFlags,[out] IDvdCmd **ppCmd)
HOLEMENU None ole32.OleCreateMenuDescriptor(_In_ HMENU hmenuCombined,_In_ LPOLEMENUGROUPWIDTHS lpMenuWidths)
HRESULT None None.Route([in] long OutputPinIndex,[in] long InputPinIndex)
HRESULT None propsys.VariantToGUID(_In_ REFVARIANT varIn,_Out_ GUID *pguid)
HRESULT None None.ReplayChapter([in] DWORD dwFlags,[out] IDvdCmd **ppCmd)
HRESULT None None.ShowMenu([in] DVD_MENU_ID MenuID,[in] DWORD dwFlags,[out] IDvdCmd **ppCmd)
HRESULT None None.ActivateAtPosition([in] POINT point)
HRESULT None None.StopChain([in] IBaseFilter *pStartFilter,[in] IBaseFilter *pEndFilter)
int None shlwapi.StrCmpIC(_In_ LPCTSTR lpStr1,_In_ LPCTSTR lpStr2)
int None shlwapi.StrCmpICW(_In_ LPCTSTR lpStr1,_In_ LPCTSTR lpStr2)
int None shlwapi.StrCmpICA(_In_ LPCTSTR lpStr1,_In_ LPCTSTR lpStr2)
HRESULT None None.GetDirectSoundInterface([out] LPDIRECTSOUND *lplpds)
HRESULT None None.get_ReceivedPackets(long *pReceivedPackets None)
DWORD WINAPI netapi32.DsGetDcNext(_In_ HANDLE GetDcContextHandle,_Out_opt_ PULONG SockAddressCount,_Out_opt_ LPSOCKET_ADDRESS *SockAddresses,_Out_opt_ LPTSTR *DnsHostName)
DWORD WINAPI netapi32.DsGetDcNextW(_In_ HANDLE GetDcContextHandle,_Out_opt_ PULONG SockAddressCount,_Out_opt_ LPSOCKET_ADDRESS *SockAddresses,_Out_opt_ LPTSTR *DnsHostName)
DWORD WINAPI netapi32.DsGetDcNextA(_In_ HANDLE GetDcContextHandle,_Out_opt_ PULONG SockAddressCount,_Out_opt_ LPSOCKET_ADDRESS *SockAddresses,_Out_opt_ LPTSTR *DnsHostName)
HRESULT None xenroll.InstallPKCS7Blob([in] PCRYPT_DATA_BLOB pBlobPKCS7)
BOOLEAN None None.PasswordFilter(_In_ PUNICODE_STRING AccountName,_In_ PUNICODE_STRING FullName,_In_ PUNICODE_STRING Password,_In_ BOOLEAN SetOperation)
virtual HRESULT None.AgreeMediaType(IPin *pReceivePin None,const CMediaType *pmt)
NTSTATUS None advapi32.LsaSetTrustedDomainInformation(_In_ LSA_HANDLE PolicyHandle,_In_ PSID TrustedDomainSid,_In_ TRUSTED_INFORMATION_CLASS InformationClass,_In_ PVOID Buffer)
HRESULT None xenroll.createFileRequestWStr([in] LONG Flags,[in] LPCWSTR pwszDNName,[in] LPCWSTR pwszUsage,[in] LPCWSTR pwszRequestFileName)
HRESULT None None.put_DevicePower([in] long PowerMode)
HRESULT None None.SelectButton([in] ULONG ulButton)
HRESULT None None.get_ReceptionQuality(long *pReceptionQuality None)
HRESULT None None.GetClipFactor([out] long *pClipFactor)
HRESULT None None.GetAlpha([in] DWORD dwStreamID,[out] float *pAlpha)
HRESULT None None.put_HTTPProxyHost(BSTR bstrHTTPProxyHost None)
HRESULT None None.GetUserType([in] DWORD dwFormOfType,[out] LPOLESTR *pszUserType)
NTSTATUS None advapi32.LsaOpenTrustedDomainByName(_In_ LSA_HANDLE PolicyHandle,_In_ PLSA_UNICODE_STRING TrustedDomainName,_In_ ACCESS_MASK DesiredAccess,_Out_ PLSA_HANDLE TrustedDomainHandle)
HRESULT None None.QueryHitRect([in] DWORD dwAspect,[in] LPCRECT pRectBounds,[in] LPCRECT pRectLoc,[in] LONG lCloseHint,[out] DWORD *pHitResult)
PCCERT_CONTEXT None xenroll.getCertContextFromPKCS7([in] PCRYPT_DATA_BLOB pBlobPKCS7)
HRESULT None None.QueryHitPoint([in] DWORD dwAspect,[in] LPCRECT pRectBounds,[in] POINT ptlLoc,[in] LONG lCloseHint,[out] DWORD *pHitResult)
HRESULT None certadm.SetResultColumnCount([in] LONG cResultColumn)
HRESULT None xenroll.enumPendingRequestWStr([in] LONG lIndex,[in] LONG lDesiredProperty,[out] LPVOID ppProperty)
HRESULT None xenroll.EnumAlgs([in] LONG dwIndex,[in] LONG algClass,[out] LONG *pdwAlgID)
HRESULT None xenroll.SetHStoreRequest([in] HCERTSTORE hStore)
HRESULT None xenroll.GetKeyLenEx([in] LONG lSizeSpec,[in] LONG lKeySpec,[out] LONG *pdwKeySize)
BOOL None shlwapi.IsCharSpace(_In_ TCHAR wch)
BOOL None shlwapi.IsCharSpaceW(_In_ TCHAR wch)
BOOL None shlwapi.IsCharSpaceA(_In_ TCHAR wch)
HRESULT None xenroll.GetKeyLen([in] BOOL fMin,[in] BOOL fExchange,[out] LONG *pdwKeySize)
NTSTATUS None advapi32.LsaLookupSids(_In_ LSA_HANDLE PolicyHandle,_In_ ULONG Count,_In_ PSID *Sids,_Out_ PLSA_REFERENCED_DOMAIN_LIST *ReferencedDomains,_Out_ PLSA_TRANSLATED_NAME *Names)
HRESULT None None.GetExpectedPacketCount([in] QWORD msDuration,[out] QWORD *pcPackets)
HRESULT None None.GetCodecURL(long CodecNum None,BSTR *pbstrCodecURL None)
HRESULT None xenroll.createFilePFXWStr([in] LPCWSTR pwszPassword,[in] LPCWSTR pwszPFXFileName)
HRESULT None xenroll.addNameValuePairToRequestWStr([in] LONG Flags,[in] LPCWSTR pwszName,[in] LPCWSTR pwszValue)
HRESULT None xenroll.SetHStoreMy([in] HCERTSTORE hStore)
HRESULT None None.SetMonitor([in] long Monitor)
BOOL None shlwapi.IntlStrEqWorker(_In_ BOOL fCaseSens,_In_ LPCTSTR pszStr1,_In_ LPCTSTR pszStr2,_In_ int nChar)
BOOL None shlwapi.IntlStrEqWorkerW(_In_ BOOL fCaseSens,_In_ LPCTSTR pszStr1,_In_ LPCTSTR pszStr2,_In_ int nChar)
BOOL None shlwapi.IntlStrEqWorkerA(_In_ BOOL fCaseSens,_In_ LPCTSTR pszStr1,_In_ LPCTSTR pszStr2,_In_ int nChar)
HRESULT None None.GetBackgroundClr([in] COLORREF *ClrBkg)
HRESULT None None.GetXlcModeDDObjAndPrimarySurface([out] LPDIRECTDRAW7 *lpDDObj,[out] LPDIRECTDRAWSURFACE7 *lpPrimarySurf)
HRESULT None None.OpenStream([in] IStream *pStream,[in] IWMReaderCallback *pCallback,[in] void *pvContext)
HRESULT None None.get_ExternalDeviceID([out] LPOLESTR *ppszData)
HRESULT None xenroll.addAttributeToRequestWStr([in] LONG Flags,[in] LPCWSTR pwszName,[in] PCRYPT_DATA_BLOB pblobValue)
HRESULT None None.Receive([in] IMediaSample *pSample)
PTSTR None shlwapi.StrStrI(_In_ PTSTR pszFirst,_In_ PCTSTR pszSrch)
PTSTR None shlwapi.StrStrIW(_In_ PTSTR pszFirst,_In_ PCTSTR pszSrch)
PTSTR None shlwapi.StrStrIA(_In_ PTSTR pszFirst,_In_ PCTSTR pszSrch)
HRESULT None xenroll.SetSignerCertificate([in] PCCERT_CONTEXT pSignerCert)
HRESULT None ole32.Commit([in] DWORD grfCommitFlags)
HRESULT None None.UpdateCache([in] LPDATAOBJECT pDataObject,[in] DWORD grfUpdf,[in] LPVOID pReserved)
HRESULT None None.get_Mode([out] InterleavingMode *pMode)
NTSTATUS WINAPI netapi32.NetAddServiceAccount(_In_opt_ LPWSTR ServerName,_In_ LPWSTR AccountName,_In_ LPWSTR Reserved,_In_ DWORD Flags)
HRESULT None None.Render([in] IPin *ppinOut,[in] IGraphBuilder *pGraph)
int None shlwapi.StrCmpN(_In_ PCTSTR psz1,_In_ PCTSTR psz2,_In_ int nChar)
int None shlwapi.StrCmpNW(_In_ PCTSTR psz1,_In_ PCTSTR psz2,_In_ int nChar)
int None shlwapi.StrCmpNA(_In_ PCTSTR psz1,_In_ PCTSTR psz2,_In_ int nChar)
HRESULT None None.GetCopyOutputLevels([out] DRM_COPY_OPL *pCopyOPL,[in None None,out] DWORD *pcbLength,[out] DWORD *pdwMinAppComplianceLevel)
NET_API_STATUS None netapi32.NetSessionEnum(_In_ LPWSTR servername,_In_ LPWSTR UncClientName,_In_ LPWSTR username,_In_ DWORD level,_Out_ LPBYTE *bufptr,_In_ DWORD prefmaxlen,_Out_ LPDWORD entriesread,_Out_ LPDWORD totalentries,_Inout_ LPDWORD resume_handle)
HRESULT None None.get_ErrorCode([out] long *pErrorCode)
HRESULT None xenroll.stringToBinaryBlob([in] LONG Flags,[in] LPCWSTR pwszString,[out] PCRYPT_DATA_BLOB pblobBinary,[out] LONG *pdwSkip,[out] LONG *pdwFlags)
HRESULT None None.SelectAtPosition([in] POINT point)
HRESULT None None.ActivateAtPosition([in] POINT point)
BOOL None shlwapi.StrToInt64Ex(_In_ PCTSTR pszString,STIF_FLAGS dwFlags None,_Out_ LONGLONG *pllRet)
BOOL None shlwapi.StrToInt64ExW(_In_ PCTSTR pszString,STIF_FLAGS dwFlags None,_Out_ LONGLONG *pllRet)
BOOL None shlwapi.StrToInt64ExA(_In_ PCTSTR pszString,STIF_FLAGS dwFlags None,_Out_ LONGLONG *pllRet)
HRESULT None None.Skip([in] ULONG cPins)
PTSTR None shlwapi.StrFormatKBSize(LONGLONG qdw None,_Out_ PTSTR pszBuf,UINT cchBuf None)
PTSTR None shlwapi.StrFormatKBSizeW(LONGLONG qdw None,_Out_ PTSTR pszBuf,UINT cchBuf None)
PTSTR None shlwapi.StrFormatKBSizeA(LONGLONG qdw None,_Out_ PTSTR pszBuf,UINT cchBuf None)
HRESULT None None.GetCurrentButton([out] ULONG *pulButtonsAvailable,[out] ULONG *pulCurrentButton)
HRESULT None None.GetTCDisplayEnable([out] long *pState)
HRESULT None None.GetMessageDrain([out] HWND *hwnd)
HRESULT None xenroll.getProviderTypeWStr([in] LPCWSTR pwszProvName,[out] LONG *plProvType)
HRESULT None None.SetOutputFormat(LPBITMAPINFO lpbmi None)
HRESULT None None.DiscardAlternateVideoFrames([in] int nDiscard)
HRESULT None xenroll.CreatePKCS7RequestFromRequest([in] PCRYPT_DATA_BLOB pRequest,[in] PCCERT_CONTEXT pSigningCertContext,[out] PCRYPT_DATA_BLOB pPkcs7Blob)
HRESULT None None.put_LocalControl([in] long State)
HRESULT None None.get_VCRHorizontalLocking([out] long *plVCRHorizontalLocking)
HRESULT None None.CreateNewBandwidthSharing([out] IWMBandwidthSharing **ppBS)
HRESULT None certcli.SetCredential([in] LONG hWnd,[in] X509EnrollmentAuthFlags AuthType,[in] BSTR strCredential,[in] BSTR strPassword)
HRESULT None None.GetDestinationPosition([out] long *pLeft,[out] long *pTop,[out] long *pWidth,[out] long *pHeight)
HRESULT None None.Run(REFERENCE_TIME tStart None)
DWORD WINAPI netapi32.DsGetDcOpen(_In_ LPCTSTR DnsName,_In_ ULONG OptionFlags,_In_opt_ LPCTSTR SiteName,_In_opt_ GUID *DomainGuid,_In_opt_ LPCTSTR DnsForestName,_In_ ULONG DcFlags,_Out_ PHANDLE RetGetDcContext)
DWORD WINAPI netapi32.DsGetDcOpenW(_In_ LPCTSTR DnsName,_In_ ULONG OptionFlags,_In_opt_ LPCTSTR SiteName,_In_opt_ GUID *DomainGuid,_In_opt_ LPCTSTR DnsForestName,_In_ ULONG DcFlags,_Out_ PHANDLE RetGetDcContext)
DWORD WINAPI netapi32.DsGetDcOpenA(_In_ LPCTSTR DnsName,_In_ ULONG OptionFlags,_In_opt_ LPCTSTR SiteName,_In_opt_ GUID *DomainGuid,_In_opt_ LPCTSTR DnsForestName,_In_ ULONG DcFlags,_Out_ PHANDLE RetGetDcContext)
HRESULT None None.get_FramesDrawn(int *pcFramesDrawn None)
HRESULT None None.GetCurrentService(AM_LINE21_CCSERVICE *lpService None)
HRESULT None xenroll.SetHStoreROOT([in] HCERTSTORE hStore)
HRESULT None None.GetPrimaryBufferInterface([out] LPDIRECTSOUNDBUFFER *lplpdsb)
HRESULT None None.get_UserAgent(BSTR *pUserAgent None)
HRESULT None None.GetVideoSize([out] long *pWidth,[out] long *pHeight)
HRESULT None None.CanUseScanLine(long *UseScanLine None)
HRESULT None None.get_BaseURL(BSTR *pbstrBaseURL None)
HRESULT None None.get_Treble([out] double *pTreble)
HRESULT None None.get_ReceivedPackets(long *pReceivedPackets None)
HRESULT None None.HasDialog([in] int iDialog)
HRESULT None None.get_ColorEnable([out] long *pValue,[out] long *pFlags)
HRESULT None None.QueryPreferredFormat([out] GUID *pFormat)
HRESULT None xenroll.EnumAlgs([in] LONG dwIndex,[in] LONG algClass,[out] LONG *pdwAlgID)
HRESULT None oleaut32.VarDateFromUdateEx(_In_ UDATE *pudateIn,_In_ LCID lcid,_In_ ULONG dwFlags,_Out_ DATE *pdateOut)
virtual HRESULT None.GetCert([in] DWORD dwIndex,[out] BYTE **ppbCertData)
HRESULT None None.UnableToRender(IPin *pPin None)
HRESULT None None.GetMarkerTime([in] long MarkerNum,[out] double *pMarkerTime)
HRESULT None None.put_EnableUDP(VARIANT_BOOL EnableUDP None)
void None oleaut32.SysFreeString(_In_opt_ BSTR bstrString)
HRESULT None xenroll.SetHStoreMy([in] HCERTSTORE hStore)
HRESULT None None.GetBandwidthSharingCount([out] DWORD *pcBS)
HRESULT None None.SetEvaluateOutputLevelLicenses([in] BOOL fEvaluate)
HRESULT None None.ReceiveMultiple([in] IMediaSample **pSamples,[in] long nSamples,[out] long *nSamplesProcessed)
HRESULT None None.put_Width([in] long Width)
HRESULT None None.get_HasError(VARIANT_BOOL *pHasError None)
HRESULT None None.getRange_Sharpness([out] long *pMin,[out] long *pMax,[out] long *pSteppingDelta,[out] long *pDefault,[out] long *pCapsFlag)
HRESULT None None.SetColorKey([in] DDCOLORKEY clr)
HRESULT None None.put_Rate([in] double dblRate)
HRESULT None None.SetSyncSource([in] IReferenceClock *pClock)
HRESULT None None.GetPrimaryBufferInterface([out] LPDIRECTSOUNDBUFFER *lplpdsb)
HRESULT None None.put_BacklightCompensation([in] long Value,[in] long Flags)
HRESULT None None.put_Gain([in] long Value,[in] long Flags)
HRESULT None None.GetCodecInstalled(long CodecNum None,VARIANT_BOOL *pCodecInstalled None)
PTSTR None shlwapi.StrStr(_In_ PTSTR pszFirst,_In_ PCTSTR pszSrch)
PTSTR None shlwapi.StrStrW(_In_ PTSTR pszFirst,_In_ PCTSTR pszSrch)
PTSTR None shlwapi.StrStrA(_In_ PTSTR pszFirst,_In_ PCTSTR pszSrch)
HRESULT None None.OnStatus([in] WMT_STATUS Status,[in] HRESULT hr,[in] WMT_ATTR_DATATYPE dwType,[in] BYTE *pValue,[in] void *pvContext)
HRESULT None None.SetNumberOfStreams([in] DWORD dwMaxStreams)
HRESULT None None.get_Duration([out] REFTIME *plength)
HRESULT None None.GetDefaultMonitor([out] UINT *puDev)
HRESULT None None.GetAccessEntryEx([in] WM_AETYPE aeType,[in] DWORD dwEntryNum,[out] BSTR *pbstrAddress,[out] BSTR *pbstrMask)
HRESULT None None.SetActualDataLength(long lLen None)
HRESULT None None.SetHoldPage([in] BOOL bHoldPage)
HRESULT None None.CreateNodeInstance([in] DWORD dwNodeId,[in] REFIID iid,[out] void **ppvObject)
HRESULT None None.GetLogClientID([out] BOOL *pfLogClientID)
HRESULT None None.SetDrawBackgroundMode(AM_LINE21_DRAWBGMODE Mode None)
HRESULT None None.get_PanTilt([out] long *pPanValue,[out] long *pTiltValue,[out] long *pFlags)
HRESULT None None.GetClipList([out] RECT *pSourceRect,[in] RECT *pDestinationRect,[out] RGNDATA **ppRgnData)
HRESULT None None.GetMinIdealImageSize([out] long *pWidth,[out] long *pHeight)
HRESULT None None.GetDefaultAudioLanguage([out] LCID *pLanguage,DVD_AUDIO_LANG_EXT *pAudioExtension None)
HRESULT None None.DiscardCache([in] DWORD dwDiscardOptions)
PSTR None shlwapi.StrFormatByteSize64(LONGLONG qdw None,_Out_ PSTR pszBuf,UINT cchBuf None)
PSTR None shlwapi.StrFormatByteSize64A(LONGLONG qdw None,_Out_ PSTR pszBuf,UINT cchBuf None)
HRESULT None None.HasDialog([in] int iDialog)
PSTR None shlwapi.StrFormatByteSize64(LONGLONG qdw None,_Out_ PSTR pszBuf,UINT cchBuf None)
PSTR None shlwapi.StrFormatByteSize64A(LONGLONG qdw None,_Out_ PSTR pszBuf,UINT cchBuf None)
HRESULT None None.SetPlayMode([in] WMT_PLAY_MODE Mode)
HRESULT None None.get_BufferingProgress(long *pBufferingProgress None)
HRESULT None None.get_PowerlineFrequency([out] long *pValue,[out] long *pFlags)
HRESULT None None.GetBuffer([in] DWORD dwTypeIndex,[in] DWORD dwBufferIndex,[in] BOOL bReadOnly,[out] LPVOID *ppBuffer,[out] LONG *lpStride)
HRESULT None None.AddFilter([in] IBaseFilter *pFilter,[in] LPCWSTR pName)
HRESULT None None.get_Rate([out] double *pdRate)
HRESULT None None.SetChase([in] long Enable,[in] long Offset,[in] HEVENT hEvent)
HRESULT None None.SetEditProperty([in] long EditID,[in] long Param,[in] long Value)
HRESULT None shlwapi.StrRetToBuf(_Inout_ STRRET *pstr,_In_ PCUITEMID_CHILD pidl,_Out_ LPTSTR pszBuf,_In_ UINT cchBuf)
HRESULT None shlwapi.StrRetToBufW(_Inout_ STRRET *pstr,_In_ PCUITEMID_CHILD pidl,_Out_ LPTSTR pszBuf,_In_ UINT cchBuf)
HRESULT None shlwapi.StrRetToBufA(_Inout_ STRRET *pstr,_In_ PCUITEMID_CHILD pidl,_Out_ LPTSTR pszBuf,_In_ UINT cchBuf)
HRESULT None None.get_BassRange([out] double *pRange)
HRESULT None None.put_Treble([in] double Treble)
HRESULT None None.CanUseOverlayStretch(long *UseOverlayStretch None)
HRESULT None None.get_BackgroundPalette([out] long *pBackgroundPalette)
HRESULT None None.getRange_Iris([out] long *pMin,[out] long *pMax,[out] long *pSteppingDelta,[out] long *pDefault,[out] long *pCapsFlag)
HRESULT None None.Reconfigure(PVOID pvContext None,DWORD dwFlags None)
HRESULT None None.GetAcceleratorTable([out] HWND *phwnd,[out] HACCEL *phAccelr)
HRESULT None None.put_EnableAutoProxy(VARIANT_BOOL EnableAutoProxy None)
HRESULT None None.FreeSurface([in] DWORD_PTR dwID)
HRESULT None None.get_NumCategories([out] DWORD *pdwNumCategories)
HRESULT None None.get_Gain([out] long *pValue,[out] long *pFlags)
HRESULT None None.AdviseTime([in] REFERENCE_TIME rtBaseTime,[in] REFERENCE_TIME rtStreamTime,[in] HEVENT hEvent,[out] DWORD *pdwAdviseCookie)
HRESULT None None.SessionSequenceStart([in] AMCOPPSignature *pSig)
HRESULT None None.get_ExternalDeviceID([out] LPOLESTR *ppszData)
UINT None oleaut32.SysStringLen(_In_opt_ BSTR bstr)
HRESULT None None.get_TVFormat([out] long *plAnalogVideoStandard)
HRESULT None None.SetAllocateForPostView([in] WORD wStreamNumber,[in] BOOL fAllocate)
HRESULT None None.get_Rating(BSTR *pbstrRating None)
bool None None.IsDXVASubtype(AM_MEDIA_TYPE * pmt)
HRESULT None None.WillUseFullScreen(long *UseWhenFullScreen None)
HRESULT None None.getRange_DigitalMultiplier([out] long *pMin,[out] long *pMax,[out] long *pSteppingDelta,[out] long *pDefault,[out] long *pCapsFlag)
BOOL None shlwapi.StrIsIntlEqual(BOOL fCaseSens None,_In_ PCTSTR pszString1,_In_ PCTSTR pszString2,int nChar None)
BOOL None shlwapi.StrIsIntlEqualW(BOOL fCaseSens None,_In_ PCTSTR pszString1,_In_ PCTSTR pszString2,int nChar None)
BOOL None shlwapi.StrIsIntlEqualA(BOOL fCaseSens None,_In_ PCTSTR pszString1,_In_ PCTSTR pszString2,int nChar None)
HRESULT None wmvcore.WMCreateWriterFileSink(_Out_ IWMWriterFileSink **ppSink)
HRESULT None None.MapStreamId([in] ULONG ulStreamId,[in] DWORD MediaSampleContent,[in] ULONG ulSubstreamFilterValue,[in] int iDataOffset)
HRESULT None None.SetSubpictureState([in] BOOL bState,[in] DWORD dwFlags,[out] IDvdCmd **ppCmd)
HRESULT None None.get_Rate([out] double *pdblRate)
HRESULT None None.put_DevicePower([in] long PowerMode)
HRESULT None None.IsCursorHidden([out] long *CursorHidden)
HRESULT None None.CanUseScanLine(long *UseScanLine None)
PWSTR None shlwapi.StrChrNIW(_In_ PCWSTR pszStart,WCHAR wMatch None,UINT cchMax None)
HRESULT None None.GetMoniker([in] DWORD dwAssign,[in] DWORD dwWhichMoniker,[out] IMoniker **ppmk)
BOOL WINAPI user32.EmptyClipboard(void None None)
HRESULT None None.put_PanTiltRelative([in] long PanValue,[in] long TiltValue,[in] long Flags)
HRESULT None None.get_SourceProtocol(long *pSourceProtocol None)
HRESULT None None.GetMinIdealVideoSize([out] LONG *lpWidth,[out] LONG *lpHeight)
int None shlwapi.StrCmpLogicalW(_In_ PCWSTR psz1,_In_ PCWSTR psz2)
int None shlwapi.StrCmpLogicalW(_In_ PCWSTR psz1,_In_ PCWSTR psz2)
HRESULT None None.get_UseFixedUDPPort(VARIANT_BOOL *pUseFixedUDPPort None)
HRESULT None None.put_DestinationLeft([in] long DestinationLeft)
HRESULT None None.GetEditProperty([in] long EditID,[in] long Param,[out] long *pValue)
HRESULT None None.GetCapabilities([out] DWORD *pCapabilities)
HRESULT None certcli.GetRequestIdString([out None None,retval] BSTR *pstrRequestId)
HRESULT None None.getRange_Gain([out] long *pMin,[out] long *pMax,[out] long *pSteppingDelta,[out] long *pDefault,[out] long *pCapsFlag)
HRESULT None None.CountModes([out] long *pModes)
HRESULT None None.Unadvise([in] IWMStatusCallback *pCallback,[in] void *pvContext)
HRESULT None None.SetBitrate([in] DWORD dwBitrate)
NTSTATUS None advapi32.LsaLookupSids(_In_ LSA_HANDLE PolicyHandle,_In_ ULONG Count,_In_ PSID *Sids,_Out_ PLSA_REFERENCED_DOMAIN_LIST *ReferencedDomains,_Out_ PLSA_TRANSLATED_NAME *Names)
HRESULT None None.SetAcceleratorTable([in] HWND hwnd,[in] HACCEL hAccel)
HRESULT None None.put_Hue([in] long Value,[in] long Flags)
HRESULT None None.DeleteCredentialsEx([in] BSTR bstrRealm,[in] BSTR bstrUrl,[in] BOOL fProxy)
HRESULT None None.put_BufferingTime(double BufferingTime None)
HRESULT None shlwapi.SHLoadIndirectString(_In_ PCWSTR pszSource,_Out_ PWSTR pszOutBuf,_In_ UINT cchOutBuf,_Reserved_ void **ppvReserved)
HRESULT None None.GetFileDuration([out] QWORD *pcnsDuration)
HRESULT None None.get_Channel([out] long *plChannel,[out] long *plVideoSubChannel,[out] long *plAudioSubChannel)
int None shlwapi.StrToInt(_In_ PCTSTR pszSrc)
int None shlwapi.StrToIntW(_In_ PCTSTR pszSrc)
int None shlwapi.StrToIntA(_In_ PCTSTR pszSrc)
HRESULT None None.put_FullScreenMode([in] long FullScreenMode)
HRESULT None None.SetProxyPort([in] LPCWSTR pwszProtocol,[in] DWORD dwPort)
int None shlwapi.StrCmpNI(_In_ PCTSTR psz1,_In_ PCTSTR psz2,_In_ int nChar)
int None shlwapi.StrCmpNIW(_In_ PCTSTR psz1,_In_ PCTSTR psz2,_In_ int nChar)
int None shlwapi.StrCmpNIA(_In_ PCTSTR psz1,_In_ PCTSTR psz2,_In_ int nChar)
HRESULT None None.get_Sharpness([out] long *pValue,[out] long *pFlags)
HRESULT None None.GetPropertyCount([out] DWORD *pcBufferProperties)
HRESULT None None.get_LogoIconURL(BSTR *pbstrLogoURL None)
HRESULT None None.put_Bass([in] double Bass)
HRESULT None None.SelectAtPosition([in] POINT point)
int None shlwapi.StrCSpn(_In_ PCTSTR pszStr,_In_ PCTSTR pszSet)
int None shlwapi.StrCSpnW(_In_ PCTSTR pszStr,_In_ PCTSTR pszSet)
int None shlwapi.StrCSpnA(_In_ PCTSTR pszStr,_In_ PCTSTR pszSet)
HRESULT None None.NotifyAllocator([in] IMemAllocator *pAllocator,[out] BOOL bReadOnly)
HRESULT None None.SetBufferWindow([in] DWORD msBufferWindow)
HRESULT None None.GetProperties([out] ALLOCATOR_PROPERTIES *pProps)
HRESULT None None.UnRegisterNotificationCallBack([in] IAMTunerNotification *pNotify)
HRESULT None None.GetMasterStream([out] LONG *pStream)
HRESULT None None.PresentImage([in] DWORD_PTR dwUserID,[in] VMRPRESENTATIONINFO *lpPresInfo)
HRESULT None None.SetAllDefaultsWithNotify([out] GUID **ChangedParam,[out] ULONG *ChangedParamCount)
HRESULT None None.getRange_WhiteBalance([out] long *pMin,[out] long *pMax,[out] long *pSteppingDelta,[out] long *pDefault,[out] long *pCapsFlag)
HRESULT None None.GetAllocateForOutput([in] DWORD dwOutputNum,[out] IWMReaderAllocatorEx **ppAllocator)
HRESULT None None.GetHoldPage([out] BOOL *pbHoldPage)
HRESULT None None.put_DigitalMultiplier([in] long Value,[in] long Flags)
HRESULT None None.Start([in] QWORD cnsStartTime)
HRESULT None xenroll.AddCertTypeToRequestWStrEx([in] LONG lType,[in] LPCWSTR pwszOIDOrName,[in] LONG lMajorVersion,[in] BOOL fMinorVersion,[in] LONG lMinorVersion)
NTSTATUS WINAPI netapi32.NetAddServiceAccount(_In_opt_ LPWSTR ServerName,_In_ LPWSTR AccountName,_In_ LPWSTR Reserved,_In_ DWORD Flags)
HRESULT None None.SetRelativePosition([in] DWORD dwLeft,[in] DWORD dwTop,[in] DWORD dwRight,[in] DWORD dwBottom)
HRESULT None None.Run(REFERENCE_TIME tStart None)
PTSTR None shlwapi.StrPBrk(_In_ PTSTR psz,_In_ PCTSTR pszSet)
PTSTR None shlwapi.StrPBrkW(_In_ PTSTR psz,_In_ PCTSTR pszSet)
PTSTR None shlwapi.StrPBrkA(_In_ PTSTR psz,_In_ PCTSTR pszSet)
HRESULT None None.put_WindowStyleEx([in] long WindowStyleEx)
HRESULT None None.GetBackgroundColor([out] DWORD *pdwPhysColor)
HRESULT None None.GetCurrentPosition([out] LONGLONG *pCurrent)
DWORD WINAPI netapi32.DsMergeForestTrustInformationW(_In_ LPCWSTR DomainName,_In_ PLSA_FOREST_TRUST_INFORMATION NewForestTrustInfo,_In_opt_ PLSA_FOREST_TRUST_INFORMATION OldForestTrustInfo,_Out_ PLSA_FOREST_TRUST_INFORMATION *ForestTrustInfo)
HRESULT None None.GetClassID([out] CLSID *pClassID)
HRESULT None None.get_VideoWidth([out] long *pVideoWidth)
HRESULT None None.put_ColorEnable([in] long Value,[in] long Flags)
HRESULT None None.SelectKaraokeAudioPresentationMode([in] ULONG ulMode)
HRESULT None None.put_HTTPProxyPort(long HTTPProxyPort None)
HRESULT None None.getRange_Exposure([out] long *pMin,[out] long *pMax,[out] long *pSteppingDelta,[out] long *pDefault,[out] long *pCapsFlag)
HRESULT None None.RenderFile([in] LPCWSTR lpwstrFile,[in] LPCWSTR lpwstrPlayList)
HRESULT None None.QueryId(LPWSTR *Id None)
HRESULT None None.put_WhiteBalance([in] long Value,[in] long Flags)
HRESULT None None.get_Contrast([out] long *pValue,[out] long *pFlags)
HRESULT None None.SetOutputPinMediaType([in] LPWSTR pszPinName,[in] AM_MEDIA_TYPE *pMediaType)
HRESULT None None.put_Brightness([in] long Value,[in] long Flags)
HRESULT None None.get_BitErrorRate([out] long *pBitErrorRate)
HRESULT None None.SetIndexMode([in] BOOL bIndexFile)
HRESULT None None.NotifyOwnerMessage([in] OAHWND hwnd,[in] long uMsg,[in] LONG_PTR wParam,[in] LONG_PTR lParam)
HRESULT None None.get_URL(BSTR *pURL None)
PTSTR None shlwapi.StrChrI(_In_ PTSTR pszStart,TCHAR wMatch None)
PTSTR None shlwapi.StrChrIW(_In_ PTSTR pszStart,TCHAR wMatch None)
PTSTR None shlwapi.StrChrIA(_In_ PTSTR pszStart,TCHAR wMatch None)
HRESULT None None.SetTime([in] REFERENCE_TIME *pTimeStart,[in] REFERENCE_TIME *pTimeEnd)
HRESULT None None.get_Focus([out] long *pValue,[out] long *pFlags)
HRESULT None None.get_FocusRelative([out] long *pValue,[out] long *pFlags)
HRESULT None xenroll.GetKeyLenEx([in] LONG lSizeSpec,[in] LONG lKeySpec,[out] LONG *pdwKeySize)
HRESULT None None.SetConnectionName([in] WCHAR *pwszInputName)
BOOL None shlwapi.IntlStrEqN(_In_ LPCTSTR pszStr1,_In_ LPCTSTR pszStr2,_In_ int nChar)
BOOL None shlwapi.IntlStrEqNW(_In_ LPCTSTR pszStr1,_In_ LPCTSTR pszStr2,_In_ int nChar)
BOOL None shlwapi.IntlStrEqNA(_In_ LPCTSTR pszStr1,_In_ LPCTSTR pszStr2,_In_ int nChar)
HRESULT None xenroll.createRequestWStr([in] LONG Flags,[in] LPCWSTR pwszDNName,[in] LPCWSTR pwszUsage,[out] PCRYPT_DATA_BLOB pblobRequest)
HRESULT None None.ShutdownProxyContext2([in] QWORD qwProxyContext)
HRESULT None None.GetCapability([in] long Capability,[out] long *pValue,[out] double *pdblValue)
HRESULT None taskschd.put_MessageBody([in] BSTR messageBody)
HRESULT None None.FindPin([in] LPCWSTR Id,[out] IPin **ppPin)
HRESULT None None.SetAcceleratorInterface([in] IAMVideoAccelerator *pIAMVA)
DWORD None netapi32.DsGetDcSiteCoverage(_In_opt_ LPCTSTR ServerName,_Out_ PULONG EntryCount,_Out_ LPTSTR **SiteNames)
DWORD None netapi32.DsGetDcSiteCoverageW(_In_opt_ LPCTSTR ServerName,_Out_ PULONG EntryCount,_Out_ LPTSTR **SiteNames)
DWORD None netapi32.DsGetDcSiteCoverageA(_In_opt_ LPCTSTR ServerName,_Out_ PULONG EntryCount,_Out_ LPTSTR **SiteNames)
HRESULT None None.getRange_Roll([out] long *pMin,[out] long *pMax,[out] long *pSteppingDelta,[out] long *pDefault,[out] long *pCapsFlag)
HRESULT None None.GetHostURL([out] WCHAR *pwszURL,[in None None,out] DWORD *pcchURL)
HRESULT None None.SetAllocateForStream([in] WORD wStreamNum,[in] IWMReaderAllocatorEx *pAllocator)
HRESULT None None.SetPlayMode([in] WMT_PLAY_MODE Mode)
HRESULT None wmvcore.WMCreateReader(_In_ IUnknown *pUnkReserved,_In_ DWORD dwRights,_Out_ IWMReader **ppReader)
DWORD None shlwapi.StrCatChainW(_Out_ PWSTR pszDst,DWORD cchDst None,DWORD ichAt None,_In_ PCWSTR pszSrc)
DWORD None shlwapi.StrCatChainW(_Out_ PWSTR pszDst,DWORD cchDst None,DWORD ichAt None,_In_ PCWSTR pszSrc)
void None None.DisplayDeviceInformation(IEnumMoniker *pEnum None)
HRESULT None None.GetTimecodeRangeBounds([in] WORD wStreamNum,[in] WORD wRangeNum,[out] DWORD *pStartTimecode,[out] DWORD *pEndTimecode)
HRESULT None None.get_MoreInfoBannerURL(BSTR *pbstrMoreInfoBannerURL None)
HRESULT None None.put_WhiteBalanceComponent([in] long Value1,[in] long Value2,[in] long Flags)
HRESULT None None.getRange_WhiteBalanceComponent([out] long *pMin,[out] long *pMax,[out] long *pSteppingDelta,[out] long *pDefault,[in None None,out] long *pCapsFlag)
HRESULT None None.PresentImage([in] DWORD_PTR dwUserID,[in] VMRPRESENTATIONINFO *lpPresInfo)
HRESULT None None.CanSeekForward([out] LONG *pCanSeekForward)
HRESULT None None.get_Zoom([out] long *pValue,[out] long *pFlags)
int None shlwapi.StrFromTimeInterval(_Out_ PTSTR pszOut,UINT cchMax None,DWORD dwTimeMS None,int digits None)
int None shlwapi.StrFromTimeIntervalW(_Out_ PTSTR pszOut,UINT cchMax None,DWORD dwTimeMS None,int digits None)
int None shlwapi.StrFromTimeIntervalA(_Out_ PTSTR pszOut,UINT cchMax None,DWORD dwTimeMS None,int digits None)
HRESULT None None.GetFileDuration([out] QWORD *pcnsDuration)
HRESULT None None.GetCurrentProfileId([out] DWORD *pdwProfileId)
HRESULT None xenroll.AddCertTypeToRequestWStrEx([in] LONG lType,[in] LPCWSTR pwszOIDOrName,[in] LONG lMajorVersion,[in] BOOL fMinorVersion,[in] LONG lMinorVersion)
HRESULT None None.GetBorderColor([out] COLORREF *lpClr)
HRESULT None None.get_CodecCount(long *pCodecCount None)
HRESULT None None.get_UseHTTPProxy(VARIANT_BOOL *pUseHTTPProxy None)
HRESULT None None.DeliverTime([in] QWORD cnsTime)
HRESULT None None.get_EnableUDP(VARIANT_BOOL *pEnableUDP None)
HRESULT None None.GetOutputFormatCount([in] DWORD dwOutputNumber,[out] DWORD *pcFormats)
HRESULT None None.GetMasterStream([out] LONG *pStream)
HRESULT None None.GetCapability([in] long Capability,[out] long *pValue,[out] double *pdblValue)
HRESULT None None.CreateMediaSourceWithSourceOpenMonitor(PCWSTR pszURL None,IMFMediaSource **ppSource None)
HRESULT None None.SetEnableHTTP([in] BOOL fEnableHTTP)
HRESULT None None.NegotiateConnection([in] DMO_MEDIA_TYPE *pMediaType)
HRESULT None None.IsRealTime([out] BOOL *pfRealTime)
HRESULT None None.put_Iris([in] long Value,[in] long Flags)
HRESULT None None.GetImageCount([out] DWORD *pcImages)
HRESULT None None.GetPostViewFormat([in] WORD wStreamNumber,[in] DWORD dwFormatNumber,[out] IWMMediaProps **ppProps)
HRESULT None None.GetHostURL([out] WCHAR *pwszURL,[in None None,out] DWORD *pcchURL)
HRESULT None None.AcquireLicense([in] DWORD dwFlags)
HRESULT None None.getRange_Contrast([out] long *pMin,[out] long *pMax,[out] long *pSteppingDelta,[out] long *pDefault,[out] long *pCapsFlag)
HRESULT None None.GetDRMProperty([in] LPCWSTR pwstrName,[out] WMT_ATTR_DATATYPE *pdwType,[out] BYTE *pValue,[out] WORD *pcbLength)
HRESULT None None.GetConnectionName([out] WCHAR *pwszName,[in None None,out] WORD *pcchName)
HRESULT None None.GetImageCount([out] DWORD *pcImages)
HRESULT None None.GetAttributeCount([out] DWORD *pcAttributes)
HRESULT None None.GetNativeVideoSize([out] LONG *lpWidth,[out] LONG *lpHeight,[out] LONG *lpARWidth,[out] LONG *lpARHeight)
HRESULT None None.getRange_IrisRelative([out] long *pMin,[out] long *pMax,[out] long *pSteppingDelta,[out] long *pDefault,[out] long *pCapsFlag)
HRESULT None None.getRange_WhiteBalance([out] long *pMin,[out] long *pMax,[out] long *pSteppingDelta,[out] long *pDefault,[out] long *pCapsFlag)
HRESULT None None.put_Mode([in] AMTunerModeType lMode)
HRESULT None ole32.SetClass([in] REFCLSID clsid)
HRESULT None None.get_OutputEnable([out] long *plOutputEnable)
BOOL None shlwapi.ChrCmpI(_In_ TCHAR w1,_In_ TCHAR w2)
BOOL None shlwapi.ChrCmpIW(_In_ TCHAR w1,_In_ TCHAR w2)
BOOL None shlwapi.ChrCmpIA(_In_ TCHAR w1,_In_ TCHAR w2)
HRESULT None wmvcore.WMCreateWriterNetworkSink(_Out_ IWMWriterNetworkSink **ppSink)
HRESULT None None.SetDirectDraw(LPDIRECTDRAW pDirectDraw None)
HRESULT None None.GetStreamSelected([in] WORD wStreamNum,[out] WMT_STREAM_SELECTION *pSelection)
HRESULT None None.SetColorKey([in] COLORKEY *pColorKey)
HRESULT None None.put_SourceTop([in] long SourceTop)
HRESULT None None.get_AutoShow([out] long *AutoShow)
HRESULT None None.put_WindowState([in] long WindowState)
virtual HRESULT None.AttemptConnection(IPin *pReceivePin None,const CMediaType *pmt)
HRESULT None None.put_Pan([in] long Value,[in] long Flags)
HRESULT None None.put_DigitalMultiplier([in] long Value,[in] long Flags)
HRESULT None None.GetRedrawAlways([out] LPBOOL lpbOption)
HRESULT None None.get_Saturation([out] long *pValue,[out] long *pFlags)
HRESULT None None.get_DestinationTop([out] long *pDestinationTop)
HRESULT None None.GetBufferWindow([out] DWORD *pmsBufferWindow)
HRESULT None None.SetSourcePosition([in] long Left,[in] long Top,[in] long Width,[in] long Height)
BOOL None shlwapi.ChrCmpI(_In_ TCHAR w1,_In_ TCHAR w2)
BOOL None shlwapi.ChrCmpIW(_In_ TCHAR w1,_In_ TCHAR w2)
BOOL None shlwapi.ChrCmpIA(_In_ TCHAR w1,_In_ TCHAR w2)
HRESULT None None.AcquireLicense([in] DWORD dwFlags)
HRESULT None None.get_WhiteBalance([out] long *pValue,[out] long *pFlags)
HRESULT None None.GetEmulatedCaps(DDCAPS *pCaps None)
int None shlwapi.StrSpn(_In_ PCTSTR psz,_In_ PCTSTR pszSet)
int None shlwapi.StrSpnW(_In_ PCTSTR psz,_In_ PCTSTR pszSet)
int None shlwapi.StrSpnA(_In_ PCTSTR psz,_In_ PCTSTR pszSet)
HRESULT None None.CheckCapabilities([in None None,out] DWORD *pCapabilities)
HRESULT None None.put_Focus([in] long Value,[in] long Flags)
HRESULT None None.SetCredentialsEx([in] BSTR bstrRealm,[in] BSTR bstrUrl,[in] BOOL fProxy,[in] BSTR bstrName,[in] BSTR bstrPassword,[in] BOOL fPersist,[in] BOOL fConfirmedGood)
HRESULT None None.put_Top([in] long Top)
HRESULT None None.put_SourceLeft([in] long SourceLeft)
DWORD None netapi32.DsAddressToSiteNames(_In_opt_ LPCTSTR ComputerName,_In_ DWORD EntryCount,_In_ PSOCKET_ADDRESS SocketAddresses,_Out_ LPTSTR **SiteNames)
DWORD None netapi32.DsAddressToSiteNamesW(_In_opt_ LPCTSTR ComputerName,_In_ DWORD EntryCount,_In_ PSOCKET_ADDRESS SocketAddresses,_Out_ LPTSTR **SiteNames)
DWORD None netapi32.DsAddressToSiteNamesA(_In_opt_ LPCTSTR ComputerName,_In_ DWORD EntryCount,_In_ PSOCKET_ADDRESS SocketAddresses,_Out_ LPTSTR **SiteNames)
HRESULT None None.get_WhiteBalance([out] long *pValue,[out] long *pFlags)
HRESULT None None.put_IrisRelative([in] long Value,[in] long Flags)
HRESULT None None.CreateNewStreamPrioritization([out] IWMStreamPrioritization **ppSP)
HRESULT None None.get_Hue([out] long *pValue,[out] long *pFlags)
HRESULT None None.WaitForCompletion([in] long msTimeout,[out] long *pEvCode)
HRESULT None None.put_Sharpness([in] long Value,[in] long Flags)
HRESULT None None.InvokeAtPresentationTime([out] IDeferredCommand **pCmd,[in] REFTIME time,[in] GUID *iid,[in] long dispidMember,[in] short wFlags,[in] long cArgs,[in] VARIANT *pDispParams,[in None None,out] VARIANT *pvarResult,[out] short *puArgErr)
HRESULT None None.put_Zoom([in] long Value,[in] long Flags)
virtual HRESULT None.SetMediaType(const CMediaType *pmt)
PSTR None shlwapi.StrFormatByteSizeA(DWORD dw None,_Out_ PSTR pszBuf,UINT cchBuf None)
HRESULT None None.put_Tilt([in] long Value,[in] long Flags)
HRESULT None None.getRange_Brightness([out] long *pMin,[out] long *pMax,[out] long *pSteppingDelta,[out] long *pDefault,[out] long *pCapsFlag)
HRESULT None wmvcore.WMCreateProfileManager(_Out_ IWMProfileManager **ppProfileManager)
HRESULT None None.GetImage([in] DWORD wIndex,[in None None,out] WORD *pcchMIMEType,[out] WCHAR *pwszMIMEType,[in None None,out] WORD *pcchDescription,[out] WCHAR *pwszDescription,[out] WORD *pImageType,[in None None,out] DWORD *pcbImageData,[out] BYTE *pbImageData)
HRESULT None None.getRange_ExposureRelative([out] long *pMin,[out] long *pMax,[out] long *pSteppingDelta,[out] long *pDefault,[out] long *pCapsFlag)
void None None.DisplayTypeInfo(IPin *pPin None,const CMediaType *pmt)
HRESULT None None.put_FocusRelative([in] long Value,[in] long Flags)
HRESULT None None.GetFourCCCodes(DWORD *pCount None,DWORD *pCodes None)
HRESULT None None.GetClientInfo([in] DWORD dwClientNum,[out] WCHAR *pwszNetworkAddress,[in None None,out] DWORD *pcchNetworkAddress,[out] WCHAR *pwszPort,[in None None,out] DWORD *pcchPort,[out] WCHAR *pwszDNSName,[in None None,out] DWORD *pcchDNSName)
HRESULT None wmvcore.WMCreateWriterPushSink(_Out_ IWMWriterPushSink **ppSink)
HRESULT None None.SetUDPPortRanges([in] WM_PORT_NUMBER_RANGE *pRangeArray,[in] DWORD cRanges)
HRESULT None None.GetImplTypeFlags([in] UINT index,[out] INT *pImplTypeFlags)
HRESULT None None.put_DestinationWidth([in] long DestinationWidth)
HRESULT None None.SetAutoReconnectLimit([in] DWORD dwAutoReconnectLimit)
HRESULT None None.SetMaximumClients([in] DWORD dwMaxClients)
HRESULT None None.SetCredentials([in] BSTR bstrRealm,[in] BSTR bstrName,[in] BSTR bstrPassword,[in] BOOL fPersist,[in] BOOL fConfirmedGood)
BOOL None shlwapi.StrToIntEx(_In_ PCTSTR pszString,STIF_FLAGS dwFlags None,_Out_ int *piRet)
BOOL None shlwapi.StrToIntExW(_In_ PCTSTR pszString,STIF_FLAGS dwFlags None,_Out_ int *piRet)
BOOL None shlwapi.StrToIntExA(_In_ PCTSTR pszString,STIF_FLAGS dwFlags None,_Out_ int *piRet)
HRESULT None None.getRange_Focus([out] long *pMin,[out] long *pMax,[out] long *pSteppingDelta,[out] long *pDefault,[out] long *pCapsFlag)
int None shlwapi.StrCSpnI(_In_ PCTSTR pszStr,_In_ PCTSTR pszSet)
int None shlwapi.StrCSpnIW(_In_ PCTSTR pszStr,_In_ PCTSTR pszSet)
int None shlwapi.StrCSpnIA(_In_ PCTSTR pszStr,_In_ PCTSTR pszSet)
PTSTR None shlwapi.StrRStrI(_In_ PTSTR pszSource,_In_opt_ PCTSTR pszLast,_In_ PCTSTR pszSrch)
PTSTR None shlwapi.StrRStrIW(_In_ PTSTR pszSource,_In_opt_ PCTSTR pszLast,_In_ PCTSTR pszSrch)
PTSTR None shlwapi.StrRStrIA(_In_ PTSTR pszSource,_In_opt_ PCTSTR pszLast,_In_ PCTSTR pszSrch)
HRESULT None None.getRange_Pan([out] long *pMin,[out] long *pMax,[out] long *pSteppingDelta,[out] long *pDefault,[out] long *pCapsFlag)
HRESULT None None.SetUserProvidedClock([in] BOOL fUserClock)
HRESULT None None.get_BufferingTime(double *pBufferingTime None)
HRESULT None None.StringCbCopyEx(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCbCopyExW(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCbCopyExA(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags)
HRESULT None None.GetFirstRegisteredDevice([in] DWORD dwRegisterType,[out] IWMRegisteredDevice **ppDevice)
HRESULT None None.GetCodecInterface([in] DWORD dwOutputNum,[in] REFIID riid,[out] void **ppvCodecInterface)
HRESULT None None.get_ScanMode([out] long *pValue,[out] long *pFlags)
HRESULT None None.GetEnableMulticast([out] BOOL *pfEnableMulticast)
HRESULT None None.put_TuningSpace([in] long lTuningSpace)
HRESULT None None.GetSaveAsProgress([out] DWORD *pdwPercent)
HRESULT None None.put_TiltRelative([in] long Value,[in] long Flags)
HRESULT None None.getRange_Gamma([out] long *pMin,[out] long *pMax,[out] long *pSteppingDelta,[out] long *pDefault,[out] long *pCapsFlag)
HRESULT STDMETHODCALLTYPE None.WMCreateSecureChannel_DES(IWMSecureChannel **ppChannel None)
HRESULT None None.QueryAccept(const AM_MEDIA_TYPE *pmt)
HRESULT None None.IsApproved([out] BOOL *pfApproved)
HRESULT STDMETHODCALLTYPE None.WMCreateSecureChannel_Certified(IWMSecureChannel **ppChannel None)
HRESULT None None.WriteStreamSample([in] WORD wStreamNum,[in] QWORD cnsSampleTime,[in] DWORD msSampleSendTime,[in] QWORD cnsSampleDuration,[in] DWORD dwFlags,[in] INSSBuffer *pSample)
HRESULT None None.get_HTTPProxyHost(BSTR *pbstrHTTPProxyHost None)
HRESULT None None.getRange_PowerlineFrequency([out] long *pMin,[out] long *pMax,[out] long *pSteppingDelta,[out] long *pDefault,[out] long *pCapsFlag)
HRESULT None None.AddressOfMember([in] MEMBERID memid,[in] INVOKEKIND invKind,[out] PVOID *ppv)
HRESULT None None.get_SourceTop([out] long *pSourceTop)
HRESULT None None.SetAllSettingsWithNotify([in] IStream *pStream,[out] GUID **ChangedParam,[in] ULONG *ChangedParamCount)
HRESULT None None.get_Exposure([out] long *pValue,[out] long *pFlags)
HRESULT None None.get_WhiteBalanceComponent([out] long *pValue1,[out] long *pValue2,[in None None,out] long *pFlags)
HRESULT None wmvcore.WMIsAvailableOffline(_In_ LPCWSTR pwszURL,_In_ LPCWSTR pwszLanguage,_Out_ BOOL *pfIsAvailableOffline)
LRESULT CALLBACK None.WindowProc(HWND hwnd None,UINT uMsg None,WPARAM wParam None,LPARAM lParam None)
HRESULT None None.Next([in] ULONG celt,[out] IMoniker **rgelt,[in None None,out] ULONG *pceltFetched)
HRESULT None None.get_RollRelative([out] long *pValue,[out] long *pFlags)
HRESULT None wmvcore.WMCreateWriter(_In_ IUnknown *pUnkReserved,_Out_ IWMWriter **ppWriter)
HRESULT None None.GetPointer([out] BYTE **ppBuffer)
HRESULT None None.get_TiltRelative([out] long *pValue,[out] long *pFlags)
HRESULT None None.RemoveSink([in] IWMWriterSink *pSink)
HRESULT None None.get_PanTiltRelative([out] long *pPanValue,[out] long *pTiltValue,[out] long *pFlags)
HRESULT None None.getRange_Zoom([out] long *pMin,[out] long *pMax,[out] long *pSteppingDelta,[out] long *pDefault,[out] long *pCapsFlag)
void None None.DisplayPinInfo(IPin *pReceivePin None)
void None None.DisplayPinInfo(IPin *pReceivePin None)
NET_API_STATUS None netapi32.NetShareCheck(_In_ LPWSTR servername,_In_ LPWSTR device,_Out_ LPDWORD type)
HRESULT None None.GetMaxOutputSampleSize([in] DWORD dwOutput,[out] DWORD *pcbMax)
HRESULT None None.GetEnableThinning([out] BOOL *pfEnableThinning)
HRESULT None None.GetAspectRatioMode([out] DWORD *lpAspectRatioMode)
HRESULT None None.SetReceiveSelectionCallbacks([in] BOOL fGetCallbacks)
HRESULT None None.GetEditPropertySet([in] long EditID,[out] long *pState)
HRESULT None None.get_BackgroundPalette([out] long *pBackgroundPalette)
HRESULT None None.SetMode([in] DWORD dwFlags)
HRESULT None None.get_IrisRelative([out] long *pValue,[out] long *pFlags)
HRESULT None None.get_Gamma([out] long *pValue,[out] long *pFlags)
HRESULT None None.SetProxyBypassForLocal([in] LPCWSTR pwszProtocol,[in] BOOL fBypassForLocal)
int None shlwapi.StrCmpNC(_In_ LPCTSTR pszStr1,_In_ LPCTSTR pszStr2,int nChar None)
int None shlwapi.StrCmpNCW(_In_ LPCTSTR pszStr1,_In_ LPCTSTR pszStr2,int nChar None)
int None shlwapi.StrCmpNCA(_In_ LPCTSTR pszStr1,_In_ LPCTSTR pszStr2,int nChar None)
HRESULT None None.GetVarDesc([in] UINT index,[out] VARDESC **ppVarDesc)
HRESULT None None.Count([out] DWORD *pcStreams)
HRESULT None None.put_Owner([in] OAHWND Owner)
HRESULT None None.AddLoggingUrl([in] LPCWSTR pwszUrl)
HRESULT None None.GetWindowPosition([out] long *pLeft,[out] long *pTop,[out] long *pWidth,[out] long *pHeight)
HRESULT None None.Connect(IPin *pReceivePin None,const AM_MEDIA_TYPE *pmt)
HRESULT None None.GetHostURL([out] WCHAR *pwszURL,[in None None,out] DWORD *pcchURL)
HRESULT None None.get_Pan([out] long *pValue,[out] long *pFlags)
HRESULT None None.GetIndexMode([out] BOOL *pbIndexFile)
HRESULT None None.put_EnableTCP(VARIANT_BOOL EnableTCP None)
HRESULT None None.SetExtent([in] DWORD dwDrawAspect,[in] SIZEL *psizel)
HRESULT None None.put_CopyProtection([in] long lVideoCopyProtection)
virtual HRESULT None.TryMediaTypes(IPin *pReceivePin None,const CMediaType *pmt,IEnumMediaTypes *pEnum None)
HRESULT None None.ReceiveConnection(IPin *pConnector None,AM_MEDIA_TYPE *pmt None)
HRESULT None None.SetStreamNumber([in] WORD wStreamNum)
HRESULT None None.put_Caption([in] BSTR strCaption)
HRESULT None None.SetChase([in] long Enable,[in] long Offset,[in] HEVENT hEvent)
HRESULT None None.get_Owner([out] OAHWND *pOwner)
int None shlwapi.StrCmpNI(_In_ PCTSTR psz1,_In_ PCTSTR psz2,_In_ int nChar)
int None shlwapi.StrCmpNIW(_In_ PCTSTR psz1,_In_ PCTSTR psz2,_In_ int nChar)
int None shlwapi.StrCmpNIA(_In_ PCTSTR psz1,_In_ PCTSTR psz2,_In_ int nChar)
HRESULT None None.put_RollRelative([in] long Value,[in] long Flags)
HRESULT None None.SetEnableMulticast([in] BOOL fEnableMulticast)
HRESULT None None.SetLiveSource([in] BOOL fIsLiveSource)
HRESULT None None.GetEnableTCP([out] BOOL *pfEnableTCP)
HRESULT None None.put_SourceWidth([in] long SourceWidth)
HRESULT None None.ConnectionMediaType(AM_MEDIA_TYPE *pmt None)
HRESULT None None.OpenStream([in] IStream *pStream)
HRESULT None None.KeyExchange([out] GUID *pRandom,[out] BYTE **VarLenCertGH,[out] DWORD *pdwLengthCertGH)
HRESULT None None.get_PrivacyMode([out] long *pValue,[out] long *pFlags)
HRESULT None None.SetQuality([in] DWORD dwQuality)
PTSTR None shlwapi.StrCat(_Inout_ PTSTR psz1,_In_ PCTSTR psz2)
PTSTR None shlwapi.StrCatW(_Inout_ PTSTR psz1,_In_ PCTSTR psz2)
HRESULT None None.getRange_PanRelative([out] long *pMin,[out] long *pMax,[out] long *pSteppingDelta,[out] long *pDefault,[out] long *pCapsFlag)
HRESULT None None.put_Exposure([in] long Value,[in] long Flags)
HRESULT None None.GetZOrder([out] DWORD *pdwZOrder)
HRESULT None None.SetStreamTransparent([in] BOOL bStreamTransparent)
HRESULT None None.put_ZoomRelative([in] long Value,[in] long Flags)
HRESULT None activeds.PutEx([in] LONG lnControlCode,[in] BSTR bstrName,[in] VARIANT vProp)
HRESULT None None.SetProtectStreamSamples([in] WMDRM_IMPORT_INIT_STRUCT *pImportInitStruct)
HRESULT None None.GetMode([out] DWORD *dwFlags)
HRESULT None None.SetClientInfo([in] WM_READER_CLIENTINFO *pClientInfo)
HRESULT None None.SetDrawBackgroundMode([in] AM_WST_DRAWBGMODE Mode)
HRESULT None None.Configure([in] WORD wStreamNum,[in] WMT_INDEXER_TYPE nIndexerType,[in] void *pvInterval,[in] void *pvIndexType)
HRESULT None None.GetPreroll([out] LONGLONG *pllPreroll)
HRESULT None None.GetMaxIdealImageSize([out] long *pWidth,[out] long *pHeight)
HRESULT None None.SetColorKey([in] COLORKEY *pColorKey)
HRESULT None None.GetAspectRatioMode([out] AM_ASPECT_RATIO_MODE *pamAspectRatioMode)
HRESULT None None.get_DestinationLeft([out] long *pDestinationLeft)
HRESULT None None.put_ScanMode([in] long Value,[in] long Flags)
HRESULT None None.SetDestinationPosition([in] long Left,[in] long Top,[in] long Width,[in] long Height)
HRESULT None None.SetCredentialsEx2([in] BSTR bstrRealm,[in] BSTR bstrUrl,[in] BOOL fProxy,[in] BSTR bstrName,[in] BSTR bstrPassword,[in] BOOL fPersist,[in] BOOL fConfirmedGood,[in] BOOL fClearTextAuthentication)
HRESULT None None.GetDeviceSerialNumber([out] DRM_VAL16 *pSerialNumber)
HRESULT None None.get_Visible([out] long *pVisible)
virtual HRESULT None.SetMediaType(const CMediaType *pmt)
HRESULT None None.getRange_ExposureRelative([out] long *pMin,[out] long *pMax,[out] long *pSteppingDelta,[out] long *pDefault,[out] long *pCapsFlag)
virtual HRESULT None.GetMediaType(int iPosition None,CMediaType *pMediaType None)
HRESULT None None.SetAcceleratedStreamingDuration([in] QWORD cnsAccelDuration)
HRESULT None None.QueryAccept(const AM_MEDIA_TYPE *pmt)
HRESULT None None.get_ExposureRelative([out] long *pValue,[out] long *pFlags)
HRESULT None wmvcore.WMCreateDRMTranscryptor(_Out_ IWMDRMTranscryptor **ppTranscryptor)
BOOL None gdi32.GetBrushOrgEx(_In_ HDC hdc,_Out_ LPPOINT lppt)
HRESULT None None.OnSample([in] DWORD dwOutputNum,[in] QWORD cnsSampleTime,[in] QWORD cnsSampleDuration,[in] DWORD dwFlags,[in] INSSBuffer *pSample,[in] void *pvContext)
HRESULT None None.getRange_Pan([out] long *pMin,[out] long *pMax,[out] long *pSteppingDelta,[out] long *pDefault,[out] long *pCapsFlag)
HRESULT None None.SetAspectRatioMode([in] AM_ASPECT_RATIO_MODE amAspectRatioMode)
HRESULT None None.SetBlendingParameter([in] DWORD dwBlendingParameter)
HRESULT None None.EnumMediaTypes(IEnumMediaTypes **ppEnum None)
HRESULT None None.GetAttributeByName([in] BSTR bstrName,[out] BSTR *pbstrValue)
HRESULT None None.IsWmdrmCompliant([out] BOOL *pfCompliant)
HRESULT None None.SetZOrder([in] DWORD dwZOrder)
HRESULT None None.GetEvent([out] long *lEventCode,[out] LONG_PTR *lParam1,[out] LONG_PTR *lParam2,[in] long msTimeout)
HRESULT None None.put_Left([in] long Left)
HRESULT None None.put_BackgroundPalette([in] long BackgroundPalette)
HRESULT None None.BindToStorage([in] IBindCtx *pbc,[in] IMoniker *pmkToLeft,[in] REFIID riid,[out] void **ppvObj)
HRESULT None None.get_DestinationWidth([out] long *pDestinationWidth)
HRESULT None None.ConnectedTo(IPin **ppPin None)
HRESULT None None.put_BorderColor([in] long Color)
HRESULT None None.put_BackgroundPalette([in] long BackgroundPalette)
HRESULT None None.put_Visible([in] long Visible)
HRESULT None None.HideCursor([in] long HideCursor)
HRESULT None None.put_BackgroundPalette([in] long BackgroundPalette)
HRESULT None None.get_WindowStyle([out] long *pWindowStyle)
HRESULT None None.GetConnectionName([out] WCHAR *pwszInputName,[in None None,out] WORD *pcchInputName)
HRESULT None None.get_SourceHeight([out] long *pSourceHeight)
HRESULT None None.get_SourceLeft([out] long *pSourceLeft)
HRESULT None None.get_DestinationHeight([out] long *pDestinationHeight)
HRESULT None None.put_DestinationHeight([in] long DestinationHeight)
HRESULT None None.get_Visible([out] long *pVisible)
HRESULT None None.GetAllocateForOutput([in] DWORD dwOutputNum,[out] BOOL *pfAllocate)
HRESULT None None.SetAllocateForStream([in] WORD wStreamNum,[in] BOOL fAllocate)
HRESULT None None.put_SourceTop([in] long SourceTop)
HRESULT None None.SetStreamsSelected([in] WORD cStreamCount,[in] WORD *pwStreamNumbers,[in] WMT_STREAM_SELECTION *pSelections)
NET_API_STATUS None netapi32.NetFileClose(_In_ LMSTR servername,_In_ DWORD fileid)
HRESULT None None.get_AvgTimePerFrame([out] REFTIME *pAvgTimePerFrame)
HRESULT None None.SetReceiveStreamSamples([in] WORD wStreamNum,[in] BOOL fReceiveStreamSamples)
HRESULT None None.get_WindowStyleEx([out None None,retval] long *pWindowStyleEx)
HRESULT None None.GetSourcePosition([out] long *pLeft,[out] long *pTop,[out] long *pWidth,[out] long *pHeight)
HRESULT None None.SetAllocateForOutput([in] DWORD dwOutputNum,[in] BOOL fAllocate)
HRESULT None None.put_SourceHeight([in] long SourceHeight)
HRESULT None None.GetManualStreamSelection([out] BOOL *pfSelection)
HRESULT None None.GetCurrentImage([in None None,out] long *pBufferSize,[out] long *pDIBImage)
HRESULT None None.GetMaxStreamSampleSize([in] WORD wStream,[out] DWORD *pcbMax)
HRESULT None None.GetReceiveSelectionCallbacks([out] BOOL *pfGetCallbacks)
HRESULT None None.SetSwitches(DWORD Switches None)
HRESULT None None.GetStatistics([in None None,out] WM_READER_STATISTICS *pStatistics)
HRESULT None None.GetStreamSelected([in] WORD wStreamNum,[out] WMT_STREAM_SELECTION *pSelection)
HRESULT None None.GetReceiveStreamSamples([in] WORD wStreamNum,[out] BOOL *pfReceiveStreamSamples)
HRESULT None None.SetManualStreamSelection([in] BOOL fSelection)
HRESULT None None.GetColorKey([out] COLORKEY *pColorKey,[out] DWORD *pColor)
HRESULT None None.GetSaveAsProgress([out] DWORD *pdwPercent)
HRESULT None None.get_DestinationWidth([out] long *pDestinationWidth)
HRESULT None None.GetBlendingParameter([out] DWORD *pdwBlendingParameter)
HRESULT None None.GetAllocateForStream([in] WORD wStreamNum,[out] BOOL *pfAllocate)
HRESULT None None.GetSurfaceDesc(DDSURFACEDESC *pSurfaceDesc None)
HRESULT None None.GetUserProvidedClock([out] BOOL *pfUserClock)
HRESULT None None.NotifyLateDelivery([in] QWORD cnsLateness)
HRESULT None wmvcore.WMCreateLicenseRevocationAgent(_In_ IUnknown *pCallback,_Out_ IWMLicenseRevocationAgent **ppLicenseRevocationAgent)
HRESULT None None.GetCaps(DDCAPS *pCaps None)
HRESULT None wmvcore.WMCreateDeviceRegistration(_Out_ IWMDeviceRegistration **ppDevReg)
HRESULT None wmvcore.WMCreateWriterNetworkSink(_Out_ IWMWriterNetworkSink **ppSink)
HRESULT None None.GetSurfaceType(DWORD *pSurfaceType None)
HRESULT None None.GetDirectDraw(LPDIRECTDRAW *ppDirectDraw None)
HRESULT None None.UseOverlayStretch(long UseOverlayStretch None)
HRESULT None wmvcore.WMCheckURLScheme(_In_ LPCWSTR pwszURLScheme)
HRESULT STDMETHODCALLTYPE None.WMCreateSecureChannel_DES(IWMSecureChannel **ppChannel None)
HRESULT None None.GetSwitches(DWORD *pSwitches None)
PWSTR None shlwapi.StrChrNW(_In_ PWSTR pszStart,WCHAR wMatch None,UINT cchMax None)
HRESULT None wmvcore.WMCheckURLExtension(_In_ LPCWSTR pwszURL)
HRESULT None wmvcore.WMCreateDRMTranscryptor(_Out_ IWMDRMTranscryptor **ppTranscryptor)
HRESULT None None.SetDirectDraw(LPDIRECTDRAW pDirectDraw None)
HRESULT None wmvcore.WMCreateIndexer(_Out_ IWMIndexer **ppIndexer)
HRESULT None wmvcore.WMValidateData(_In_ BYTE *pbData,_Inout_ DWORD *pdwDataSize)
HRESULT None None.UseScanLine(long UseScanLine None)
PTSTR None shlwapi.StrCpy(_Out_ PTSTR psz1,_In_ PCTSTR psz2)
PTSTR None shlwapi.StrCpyW(_Out_ PTSTR psz1,_In_ PCTSTR psz2)
BOOL None shlwapi.ChrCmpI(_In_ TCHAR w1,_In_ TCHAR w2)
BOOL None shlwapi.ChrCmpIW(_In_ TCHAR w1,_In_ TCHAR w2)
BOOL None shlwapi.ChrCmpIA(_In_ TCHAR w1,_In_ TCHAR w2)
HRESULT STDMETHODCALLTYPE None.WMCreateDRMTranscryptionManager(IWMDRMTranscryptionManager ppTranscryptionManager None)
HRESULT None wmvcore.WMCreateEditor(_Out_ IWMMetadataEditor **ppEditor)
HRESULT None wmvcore.WMCreateBackupRestorer(_In_ IUnknown *pCallback,_Out_ IWMLicenseBackup **ppBackup)
HRESULT None shlwapi.StrFormatByteSizeEx(ULONGLONG ull None,SFBS_FLAGS flags None,_Out_ PWSTR pszBuf,UINT cchBuf None)
HRESULT STDMETHODCALLTYPE None.WMCreateSecureChannel(IWMSecureChannel **ppChannel None)
HRESULT None wmvcore.WMCreateCertificate(_Out_ IUnknown **pUnkCert)
HRESULT None wmvcore.WMCreateSyncReader(_In_ IUnknown *pUnkCert,_In_ DWORD dwRights,_Out_ IWMSyncReader **ppSyncReader)
HRESULT None None.GetStreamPrioritization([out] IWMStreamPrioritization **ppSP)
HRESULT None None.put_OutputEnable([in] long lOutputEnable)
HRESULT None None.put_VCRHorizontalLocking([in] long lVCRHorizontalLocking)
PTSTR None shlwapi.StrCatBuff(_Inout_ PTSTR pszDest,_In_ PCTSTR pszSrc,int cchDestBuffSize None)
PTSTR None shlwapi.StrCatBuffW(_Inout_ PTSTR pszDest,_In_ PCTSTR pszSrc,int cchDestBuffSize None)
PTSTR None shlwapi.StrCatBuffA(_Inout_ PTSTR pszDest,_In_ PCTSTR pszSrc,int cchDestBuffSize None)
int None shlwapi.wvnsprintf(_Out_ PTSTR pszDest,_In_ int cchDest,_In_ PCTSTR pszFmt,_In_ va_list arglist)
int None shlwapi.wvnsprintfW(_Out_ PTSTR pszDest,_In_ int cchDest,_In_ PCTSTR pszFmt,_In_ va_list arglist)
int None shlwapi.wvnsprintfA(_Out_ PTSTR pszDest,_In_ int cchDest,_In_ PCTSTR pszFmt,_In_ va_list arglist)
void None None.SetFilterGraph(IMediaEventSink *pSink None)
HRESULT None None.GetRedrawAlways([out] LPBOOL lpbOption)
int None shlwapi.StrCmp(_In_ PCTSTR psz1,_In_ PCTSTR psz2)
int None shlwapi.StrCmpW(_In_ PCTSTR psz1,_In_ PCTSTR psz2)
PWSTR None shlwapi.StrFormatByteSizeW(LONGLONG qdw None,_Out_ PWSTR pszBuf,UINT cchBuf None)
PWSTR None shlwapi.StrFormatByteSizeW(LONGLONG qdw None,_Out_ PWSTR pszBuf,UINT cchBuf None)
HRESULT None None.get_NumberOfLines([out] long *plNumberOfLines)
HRESULT None None.get_AvailableTVFormats([out] long *lAnalogVideoStandard)
HRESULT None None.getRange_ZoomRelative([out] long *pMin,[out] long *pMax,[out] long *pSteppingDelta,[out] long *pDefault,[out] long *pCapsFlag)
HRESULT None shlwapi.StrRetToStr(_Inout_ STRRET *pstr,_In_opt_ PCUITEMID_CHILD pidl,_Out_ LPTSTR *ppszName)
HRESULT None shlwapi.StrRetToStrW(_Inout_ STRRET *pstr,_In_opt_ PCUITEMID_CHILD pidl,_Out_ LPTSTR *ppszName)
HRESULT None shlwapi.StrRetToStrA(_Inout_ STRRET *pstr,_In_opt_ PCUITEMID_CHILD pidl,_Out_ LPTSTR *ppszName)
HRESULT None shlwapi.GetAcceptLanguages(_Out_ LPTSTR pszLanguages,_Inout_ DWORD *pcchLanguages)
HRESULT None shlwapi.GetAcceptLanguagesW(_Out_ LPTSTR pszLanguages,_Inout_ DWORD *pcchLanguages)
HRESULT None shlwapi.GetAcceptLanguagesA(_Out_ LPTSTR pszLanguages,_Inout_ DWORD *pcchLanguages)
HRESULT None None.CancelDefaultHandling(long lEvCode None)
HRESULT None None.put_TVFormat([in] long lAnalogVideoStandard)
HRESULT None None.get_OutputEnable([out] long *plOutputEnable)
HRESULT None None.get_HorizontalLocked([out] long *plLocked)
HRESULT None None.GetBufferingTime([out] QWORD *pcnsBufferingTime)
NTSTATUS WINAPI gdi32.GetCertificateSize(_In_ PUNICODE_STRING pstrDeviceName,_In_ DXGKMDT_CERTIFICATE_TYPE ctPVPCertificateType,_Out_ ULONG *pulCertificateLength)
HRESULT None None.Approve([in] BOOL fApprove)
HRESULT None None.get_EnableTCP(VARIANT_BOOL *pEnableTCP None)
HRESULT None None.get_ZoomRelative([out] long *pValue,[out] long *pFlags)
HRESULT None None.get_FullScreenMode([out] long *FullScreenMode)
NET_API_STATUS None netapi32.NetConnectionEnum(_In_ LMSTR servername,_In_ LMSTR qualifier,_In_ DWORD level,_Out_ LPBYTE *bufptr,_In_ DWORD prefmaxlen,_Out_ LPDWORD entriesread,_Out_ LPDWORD totalentries,_Inout_ LPDWORD resume_handle)
void None None.SetReconnectWhenActive(bool bCanReconnect None)
HRESULT None None.put_UseHTTPProxy(VARIANT_BOOL UseHTTPProxy None)
HRESULT None None.put_IrisRelative([in] long Value,[in] long Flags)
HRESULT None None.get_Exposure([out] long *pValue,[out] long *pFlags)
HRESULT None activeds.SetPassword([in] BSTR bstrNewPassword)
HRESULT None None.Start([in] QWORD cnsStart,[in] QWORD cnsDuration,[in] float fRate,[in] void *pvContext)
virtual HRESULT None.CompleteConnect(IPin *pReceivePin None)
VOID WINAPI netapi32.DsRoleFreeMemory(_In_ PVOID Buffer)
virtual HRESULT None.WMSC_GetValidCertificate([out] BYTE **ppbCertificate,[out] DWORD *pdwSignature)
HRESULT None None.InvokeAtStreamTime([out] IDeferredCommand **pCmd,[in] REFTIME time,[in] GUID *iid,[in] long dispidMember,[in] short wFlags,[in] long cArgs,[in] VARIANT *pDispParams,[in None None,out] VARIANT *pvarResult,[out] short *puArgErr)
HRESULT None None.SetWindowForeground(long Focus None)
HRESULT None None.GetSyncTolerance([in] DWORD *pmsWindow)
HRESULT None None.SetSyncTolerance([in] DWORD msWindow)
HRESULT None None.put_PrivacyMode([in] long Value,[in] long Flags)
BOOL None shlwapi.StrToIntEx(_In_ PCTSTR pszString,STIF_FLAGS dwFlags None,_Out_ int *piRet)
BOOL None shlwapi.StrToIntExW(_In_ PCTSTR pszString,STIF_FLAGS dwFlags None,_Out_ int *piRet)
BOOL None shlwapi.StrToIntExA(_In_ PCTSTR pszString,STIF_FLAGS dwFlags None,_Out_ int *piRet)
HRESULT None None.PreparePalette(const CMediaType *pmtNew,const CMediaType *pmtOld,LPSTR szDevice None)
HRESULT None None.SetTransportType([in] WMT_TRANSPORT_TYPE nTransportType)
void None None.ReleaseVarDesc([in] VARDESC *pVarDesc)
HRESULT None None.GetVideoProcessorDeviceCaps([out] DXVAHD_VPDEVCAPS *pCaps)
HRESULT None None.Advise([in] IAdviseSink *pAdvSink,[out] DWORD *pdwConnection)
HRESULT None None.GetBufferWindow([out] DWORD *pmsBufferWindow)
HRESULT None None.SetClockDelta(REFERENCE_TIME rtDelta None)
HRESULT None wmvcore.WMCreateBackupRestorer(_In_ IUnknown *pCallback,_Out_ IWMLicenseBackup **ppBackup)
HRESULT None None.GetTimeOfLastChange([in] IBindCtx *pbc,[in] IMoniker *pmkToLeft,[out] FILETIME *pFileTime)
HRESULT None None.GetMaximumClients([out] DWORD *pdwMaxClients)
HRESULT None None.GetFirstRegisteredDevice([in] DWORD dwRegisterType,[out] IWMRegisteredDevice **ppDevice)
HRESULT None None.put_AutoShow([in] long AutoShow)
HRESULT None None.GetPointer([out] BYTE **ppBuffer)
HRESULT None None.GetBandwidthSharing([in] DWORD dwBSIndex,[out] IWMBandwidthSharing **ppBS)
NTSTATUS WINAPI gdi32.DestroyOPMProtectedOutput(_In_ OPM_PROTECTED_OUTPUT_HANDLE opoOPMProtectedOutput)
HRESULT None None.WriteSample([in] DWORD dwInputNum,[in] QWORD cnsSampleTime,[in] DWORD dwFlags,[in] INSSBuffer *pSample)
HRESULT None None.GetMaxKeyFrameSpacing([out] LONGLONG *pllTime)
HRESULT None None.GetStreamName([out] WCHAR *pwszStreamName,[in None None,out] WORD *pcchStreamName)
HRESULT None None.get_NumberOfLines([out] long *plNumberOfLines)
HRESULT None None.getRange_Saturation([out] long *pMin,[out] long *pMax,[out] long *pSteppingDelta,[out] long *pDefault,[out] long *pCapsFlag)
HRESULT None None.get_HTTPProxyPort(long *pHTTPProxyPort None)
HRESULT None ole32.Read([out] void *pv,[in] ULONG cb,[out] ULONG *pcbRead)
HRESULT None None.GetNetSourceAdminInterface([in] LPCWSTR pszStreamName,[out] VARIANT *pVal)
HRESULT None None.get_ExposureRelative([out] long *pValue,[out] long *pFlags)
HRESULT None None.GetStatus([in] long StatusItem,[in None None,out] long *pValue)
HRESULT None None.GetStatistics([in None None,out] WM_READER_STATISTICS *pStatistics)
HRESULT None None.Notify(IBaseFilter *pSelf None,Quality q None)
HRESULT None None.GetTransportAudioParameters([in] long Param,[out] long *pValue)
HRESULT None None.get_DigitalMultiplier([out] long *pValue,[out] long *pFlags)
HRESULT None wmvcore.WMCreateCertificate(_Out_ IUnknown **pUnkCert)
HRESULT None None.get_Gamma([out] long *pValue,[out] long *pFlags)
HRESULT None None.SetStreamsSelected([in] WORD cStreamCount,[in] WORD *pwStreamNumbers,[in] WMT_STREAM_SELECTION *pSelections)
LONG CALLBACK None.FMExtensionProc(HWND hwnd None,WORD wMsg None,LONG lParam None)
LONG CALLBACK None.FMExtensionProcW(HWND hwnd None,WORD wMsg None,LONG lParam None)
HRESULT None None.GetProxyBypassForLocal([in] LPCWSTR pwszProtocol,[out] BOOL *pfBypassForLocal)
HRESULT None None.get_VideoHeight([out] long *pVideoHeight)
HRESULT None None.get_Mode([out] long *pMode)
HRESULT None shell32.GetDisplayNameOf([in] PCUITEMID_CHILD pidl,[in] SHGDNF uFlags,[out] STRRET *pName)
HRESULT None None.getRange_FocusRelative([out] long *pMin,[out] long *pMax,[out] long *pSteppingDelta,[out] long *pDefault,[out] long *pCapsFlag)
HRESULT None None.put_PanTilt([in] long PanValue,[in] long TiltValue,[in] long Flags)
HRESULT None None.CreateProfile(IWMProfileManager* pProfileMgr None,IWMProfile** ppProfile None)
HRESULT None None.get_SourceLeft([out] long *pSourceLeft)
HRESULT None None.GetMediaTime([out] LONGLONG *pTimeStart,[out] LONGLONG *pTimeEnd)
HRESULT None None.put_Roll([in] long Value,[in] long Flags)
STDMETHODIMP None None.GetDuration(LONGLONG *pDuration None)
HRESULT None None.SaveProfile([in] IWMProfile *pProfile,[in] WCHAR *pwszProfile,[in None None,out] DWORD *pdwLength)
HRESULT None None.put_MessageDrain([in] OAHWND Drain)
MMRESULT None winmm.mixerOpen(LPHMIXER phmx None,UINT uMxId None,DWORD_PTR dwCallback None,DWORD_PTR dwInstance None,DWORD fdwOpen None)
HRESULT None None.get_Iris([out] long *pValue,[out] long *pFlags)
HRESULT None None.GetUserClassID([out] CLSID *pClsid)
HRESULT None None.StringCchCopyN(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_In_ size_t cchSrc)
HRESULT None None.StringCchCopyNW(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_In_ size_t cchSrc)
HRESULT None None.StringCchCopyNA(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_In_ size_t cchSrc)
HRESULT None None.get_Mode([out] AMTunerModeType *plMode)
HRESULT None None.IsEqual([in] IMoniker *pmkOtherMoniker)
HRESULT None None.AddBandwidthSharing([in] IWMBandwidthSharing *pBS)
HRESULT None None.SetConnectionBandwidth([in] DWORD dwConnectionBandwidth)
HRESULT None None.get_Tilt([out] long *pValue,[out] long *pFlags)
int CALLBACK None.CompareFunc(LPARAM lParam1 None,LPARAM lParam2 None,LPARAM lParamSort None)
BOOL None None.ListView_SetTextBkColor(HWND hwnd None,COLORREF clrText None)
HRESULT None None.SetWindowPosition([in] long Left,[in] long Top,[in] long Width,[in] long Height)
HRESULT None None.GetLanguage([in] DWORD dwOutputNum,[in] WORD wLanguage,[out] WCHAR *pwszLanguageString,[in None None,out] WORD *pcchLanguageStringLength)
virtual HRESULT None.CheckMediaType(const CMediaType *pmt)
virtual HRESULT None.GetDueCommand(CDeferredCommand **ppCmd None,long msTimeout None)
CGenericListCBaseFilter None None.myFilterList("Filters" None None)
HRESULT None None.SetOutputProps([in] DWORD dwOutputNum,[in] IWMOutputMediaProps *pOutput)
HRESULT None None.get_BorderColor([out] long *pColor)
HRESULT None None.OnTime([in] QWORD cnsCurrentTime,[in] void *pvContext)
HRESULT None None.GetRefTypeOfImplType([in] UINT index,[out] HREFTYPE *pRefType)
HRESULT None None.get_PanRelative([out] long *pValue,[out] long *pFlags)
HRESULT None None.GetConnectionBandwidth([out] DWORD *pdwConnectionBandwidth)
HRESULT None None.CreateNewMutualExclusion([out] IWMMutualExclusion **ppME)
HRESULT None None.get_MessageDrain([in] OAHWND *Drain)
HWND None None.ListView_GetToolTips(HWND hwnd None)
HRESULT None None.SetClockDelta(REFERENCE_TIME rtDelta None)
HRESULT None None.put_WindowStyle([in] long WindowStyle)
HRESULT None esscli.BeginEnumeration([in] LONG lFlags)
HRESULT None None.GetOutputFormat([in] DWORD dwOutputNumber,[in] DWORD dwFormatNumber,[out] IWMOutputMediaProps **ppProps)
HRESULT None esscli.Next([in] LONG lFlags,[out] BSTR *pstrName,[out] VARIANT *pValue)
HRESULT None esscli.SetValue([in] LPCWSTR strName,[in] LONG lFlags,[in] VARIANT *pValue)
HRESULT None None.getRange_Hue([out] long *pMin,[out] long *pMax,[out] long *pSteppingDelta,[out] long *pDefault,[out] long *pCapsFlag)
HRESULT None None.get_Top([out] long *pTop)
int CALLBACK None.CompareFunc(LPARAM lParam1 None,LPARAM lParam2 None,LPARAM lParamSort None)
POSITION None None.Next(POSITION pos None)
HRESULT None None.GetEnableUDP([out] BOOL *pfEnableUDP)
HRESULT None None.OnStreamSelection([in] WORD wStreamCount,[in] WORD *pStreamNumbers,[in] WMT_STREAM_SELECTION *pSelections,[in] void *pvContext)
HRESULT None None.CheckConnect(IPin *pPin None)
HRESULT None wsmauto.Enumerate([in] Variant resourceUri,[in None None,optional] BSTR filter,[in None None,optional] BSTR dialect,[in] long flags,[out] IDispatch **resultSet)
virtual HRESULT None.CompleteConnect(IPin *pReceivePin None)
function None shell32.EnumUsers(Volume_Label None None)
HRESULT None None.AddSink([in] IWMWriterSink *pSink)
HRESULT None None.put_Top([in] long Top)
HRESULT None None.NewSegment(REFERENCE_TIME tStart None,REFERENCE_TIME tStop None,double dRate None)
HRESULT None None.OnStreamSample([in] WORD wStreamNum,[in] QWORD cnsSampleTime,[in] QWORD cnsSampleDuration,[in] DWORD dwFlags,[in] INSSBuffer *pSample,[in] void *pvContext)
HRESULT None None.StringCbCopyN(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc,_In_ size_t cbSrc)
HRESULT None None.StringCbCopyNW(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc,_In_ size_t cbSrc)
HRESULT None None.StringCbCopyNA(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc,_In_ size_t cbSrc)
HRESULT None None.GetDocumentation([in] MEMBERID memid,[out] BSTR *pBstrName,[out] BSTR *pBstrDocString,[out] DWORD *pdwHelpContext,[out] BSTR *pBstrHelpFile)
HRESULT None None.getRange_Tilt([out] long *pMin,[out] long *pMax,[out] long *pSteppingDelta,[out] long *pDefault,[out] long *pCapsFlag)
HRESULT None None.GetDllEntry([in] MEMBERID memid,[in] INVOKEKIND invKind,[out] BSTR *pBstrDllName,[out] BSTR *pBstrName,[out] WORD *pwOrdinal)
HRESULT None None.getRange_BacklightCompensation([out] long *pMin,[out] long *pMax,[out] long *pSteppingDelta,[out] long *pDefault,[out] long *pCapsFlag)
HRESULT None None.EnumMediaTypes([out] IEnumMediaTypes **ppEnum)
HRESULT None None.SetStreamTransparent([in] BOOL bStreamTransparent)
BOOL None None.AddBefore(POSITION pos None,CBaseList *pList None)
HRESULT None None.get_FocalLengths([out] long *plOcularFocalLength,[out] long *plObjectiveFocalLengthMin,[out] long *plObjectiveFocalLengthMax)
HRESULT None activeds.GetInfoEx([in] VARIANT vProperties,[in] LONG lnReserved)
HRESULT None None.get_Height([out] long *pHeight)
HRESULT None None.GetTime([out] REFERENCE_TIME *pTimeStart,[out] REFERENCE_TIME *pTimeEnd)
HRESULT None None.SetExtent([in] DWORD dwDrawAspect,[in] SIZEL *psizel)
HRESULT None None.SetSink(IQualityControl *piqc None)
HRESULT None None.GetExtent([in] DWORD dwDrawAspect,[out] SIZEL *psizel)
HRESULT None None.put_DestinationTop([in] long DestinationTop)
HRESULT None None.get_WindowState([out] long *WindowState)
HRESULT None None.GetStream([in] DWORD dwStreamIndex,[out] IWMStreamConfig **ppConfig)
HRESULT None None.RelativePathTo([in] IMoniker *pmkOther,[out] IMoniker **ppmkRelPath)
HRESULT None None.put_ExposureRelative([in] long Value,[in] long Flags)
void None None.ListView_SetItemState(HWND hwnd None,int i None,UINT state None,UINT mask None)
HRESULT None None.GetOutputCount([out] DWORD *pcOutputs)
BOOL None None.ListView_GetISearchString(HWND hwnd None,LPSTR lpsz None)
HRESULT None None.GetMediaTime([out] LONGLONG *pTimeStart,[out] LONGLONG *pTimeEnd)
virtual BOOL None.PossiblyEatMessage(UINT uMsg None,WPARAM wParam None,LPARAM lParam None)
UINT None winmm.midiInGetNumDevs(void None None)
HRESULT None None.CheckTransform(const CMediaType *mtIn,const CMediaType *mtOut)
NTSTATUS None advapi32.LsaQueryTrustedDomainInfoByName(_In_ LSA_HANDLE PolicyHandle,_In_ PLSA_UNICODE_STRING TrustedDomainName,_In_ TRUSTED_INFORMATION_CLASS InformationClass,_Out_ PVOID *Buffer)
typedef None None.LRESULT(CALLBACK *SUBCLASSPROC None)
HRESULT None None.IsUsingFastCache([out] BOOL *pfUsingFastCache)
COLORREF None None.ListView_GetInsertMarkColor(HWND hwnd None)
HRESULT None None.getRange_FocusRelative([out] long *pMin,[out] long *pMax,[out] long *pSteppingDelta,[out] long *pDefault,[out] long *pCapsFlag)
HRESULT None None.IsEqual([in] IMoniker *pmkOtherMoniker)
BOOL None None.ListView_SetTextColor(HWND hwnd None,COLORREF clrText None)
INT None mswsock.RIONotify(_In_ RIO_CQ CQ)
BOOL None None.ListView_GetBkImage(HWND hwndLV None,LPLVBKIMAGE plvbki None)
HRESULT None None.Load(LPSTREAM pStm None)
UINT None winmm.waveOutGetNumDevs(void None None)
int None None.ListView_InsertGroup(HWND hwnd None,int index None,PLVGROUP pgrp None)
typedef None None.int(CALLBACK *BrowseCallbackProc None)
virtual LRESULT None.OnPaletteChange(HWND hwnd None,UINT Message None)
HRESULT None None.CheckTransform(const CMediaType *mtIn,const CMediaType *mtOut)
HRESULT None None.GetMaxSpeedFactor([out] double *pdblFactor)
HRESULT None None.Notify(IBaseFilter *pSelf None,Quality q None)
HRESULT None None.get_AntiClogControl([out] long *pEnabled)
HRESULT None None.SetTransportAudioParameters([in] long Param,[in] long Value)
HRESULT None None.Notify([in] IBaseFilter *pSelf,[in] Quality q)
HRESULT None None.QueryPinInfo(PIN_INFO *pInfo None)
HRESULT None None.SetBump([in] long Speed,[in] long Duration)
HRESULT None None.get_LocalControl([out] long *pState)
HRESULT None None.put_EditStart([in] long Value)
HRESULT None None.AcquireCredentials([in] WCHAR *pwszRealm,[in] WCHAR *pwszSite,[in None None,out] WCHAR *pwszUser,[in] DWORD cchUser,[in None None,out] WCHAR *pwszPassword,[in] DWORD cchPassword,[in] HRESULT hrStatus,[in None None,out] DWORD *pdwFlags)
HRESULT None None.GetTransportVideoParameters([in] long Param,[out] long *pValue)
HRESULT None None.GetDevId([out] DWORD *pdwDevId)
HRESULT None None.GetChase([out] long *pEnabled,[out] long *pOffset,[out] HEVENT *phEvent)
HRESULT None None.QueryDirection(PIN_DIRECTION *pPinDir None)
HRESULT None None.GetTransportBasicParameters([in] long Param,[in None None,out] long *pValue,[in None None,out] LPOLESTR *ppszData)
HRESULT None None.QueryInternalConnections(IPin *apPin None,ULONG *nPin None)
HRESULT None None.SetEditPropertySet([in None None,out] long *pEditID,[in] long State)
HRESULT None None.GetAvailable(LONGLONG *pEarliest None,LONGLONG *pLatest None)
HRESULT None None.get_RegFilterCollection([out] IDispatch **ppUnk)
HRESULT None None.SetNotify(IMemAllocatorNotifyCallbackTemp *pNotify None)
HRESULT None None.CreateNewMutualExclusion([out] IWMMutualExclusion **ppME)
HRESULT None None.SetForceRerunAutoProxyDetection([in] BOOL fForceRerunDetection)
HRESULT None shell32.EnumObjects([in] HWND hwndOwner,[in] SHCONTF grfFlags,[out] IEnumIDList **ppenumIDList)
HRESULT None None.GetHResult(HRESULT *phrResult None)
HRESULT None None.GetAllParamCustData([in] UINT indexFunc,[in] UINT indexParam,[out] CUSTDATA *pCustData)
HRESULT None None.Activate(HWND hwndParent None,LPCRECT prect None,BOOL fModal None)
void None None.SlowRender(IMediaSample *pMediaSample None)
HRESULT None None.SaveProfile([in] IWMProfile *pProfile,[in] WCHAR *pwszProfile,[in None None,out] DWORD *pdwLength)
HCURSOR None None.ListView_GetHotCursor(HWND hwndLV None)
HRESULT None None.AllocateForOutput([in] DWORD dwOutputNum,[in] DWORD cbBuffer,[out] INSSBuffer **ppBuffer,[in] void *pvContext)
HRESULT None None.put_Saturation([in] long Value,[in] long Flags)
HRESULT None None.GetProxyHostName([in] LPCWSTR pwszProtocol,[out] WCHAR *pwszHostName,[in None None,out] DWORD *pcchHostName)
HRESULT None activeds.GetInfoEx([in] VARIANT vProperties,[in] LONG lnReserved)
HRESULT None None.UpdateFormat(VIDEOINFO *pVideoInfo None)
BOOL None None.ListView_GetFooterItem([in] HWND hwnd,[in] UINT iItem,[in None None,out] LVFOOTERITEM *pfi)
void None None.SendNotifyWindow(IPin *pPin None,HWND hwnd None)
HRESULT None None.Reduce([in] IBindCtx *pbc,[in] DWORD dwReduceHowFar,[in None None,out] IMoniker **ppmkToLeft,[out] IMoniker **ppmkReduced)
HRESULT None None.GetClientSite([out] IOleClientSite **ppClientSite)
HRESULT None None.get_TuningSpace([out] long *plTuningSpace)
HRESULT None activeds.Get([in] BSTR bstrName,[out] VARIANT *pvProp)
HRESULT None None.Confidence(LONG *pConfidence None)
HRESULT None None.put_PowerlineFrequency([in] long Value,[in] long Flags)
INT None None.ListView_SetSelectionMark(HWND hwndLV None,INT iIndex None)
BOOL None None.GetColourMask(DWORD *pMaskRed None,DWORD *pMaskGreen None,DWORD *pMaskBlue None)
virtual HRESULT None.AlterQuality(Quality q None)
HIMAGELIST None None.ListView_GetImageList(HWND hwnd None,int iImageList None)
HRESULT None None.Clone(IEnumPins **ppEnum None)
NTSTATUS None advapi32.LsaSetInformationPolicy(_In_ LSA_HANDLE PolicyHandle,_In_ POLICY_INFORMATION_CLASS InformationClass,_In_ PVOID Buffer)
BOOL None None.ListView_RedrawItems(HWND hwnd None,int iFirst None,int iLast None)
virtual HRESULT None.Remove(CDeferredCommand *pCmd None)
HRESULT None None.get_StopTime(REFTIME *pllTime None)
HRESULT None None.GetOutputFormat([in] DWORD dwOutputNumber,[in] DWORD dwFormatNumber,[out] IWMOutputMediaProps **ppProps)
HRESULT None None.GetEnableHTTP([out] BOOL *pfEnableHTTP)
static HRESULT None.WaitEvent(HANDLE hEvent None)
HRESULT None None.GetFuncIndexOfMemId([in] MEMBERID memid,[in] INVOKEKIND invKind,[out] UINT *pFuncIndex)
HRESULT None None.StartAtMarker([in] WORD wMarkerIndex,[in] QWORD cnsDuration,[in] float fRate,[in] void *pvContext)
HRESULT None None.get_BacklightCompensation([out] long *pValue,[out] long *pFlags)
HRESULT None None.GetOutputNumberForStream([in] WORD wStreamNum,[out] DWORD *pdwOutputNum)
HRESULT None None.get_FilterCollection([out] IDispatch **ppUnk)
DWORD None None.ListView_GetHoverTime(HWND hwndLV None)
HRESULT None None.SetEnableTCP([in] BOOL fEnableTCP)
HRESULT None None.CheckMediaType(const CMediaType *pmtIn)
void None None.ReleaseTypeAttr([in] TYPEATTR *pTypeAttr)
HRESULT None None.SetStreamPrioritization([in] IWMStreamPrioritization *pSP)
BOOL None None.MoveToTail(POSITION pos None,CBaseList *pList None)
WSAEVENT None ws2_32.WSACreateEvent(void None None)
virtual HRESULT None.AlterQuality(Quality q None)
HRESULT None None.DoShowWindow(LONG ShowCmd None)
void None None.SetRealize(BOOL bRealize None)
HRESULT None None.AddMutualExclusion([in] IWMMutualExclusion *pME)
virtual HRESULT None.InitialiseWindow(HWND hwnd None)
typedef None None.int(CALLBACK *BrowseCallbackProc None)
BOOL None None.ListView_GetCheckState(HWND hwndLV None,UINT iIndex None)
NTSTATUS None advapi32.LsaStorePrivateData(_In_ LSA_HANDLE PolicyHandle,_In_ PLSA_UNICODE_STRING KeyName,_In_ PLSA_UNICODE_STRING PrivateData)
HRESULT None None.GetVersion([out] WMT_VERSION *pdwVersion)
BOOL None None.TreeView_GetUnicodeFormat(HWND hwnd None)
BOOL None None.ListView_GetEmptyText([in] HWND hwnd,[in None None,out] PWSTR pszText,[in] UINT cchText)
BOOL None None.ListView_SetColumnWidth(HWND hwnd None,int iCol None,int cx None)
HRESULT None None.SetProxyExceptionList([in] LPCWSTR pwszProtocol,[in] LPCWSTR pwszExceptionList)
int None None.ListView_InsertColumn(HWND hwnd None,int iCol None,const LPLVCOLUMN pcol)
HRESULT None None.GetVarIndexOfMemId([in] MEMBERID memid,[out] UINT *pVarIndex)
HRESULT None None.JoinFilterGraph(IFilterGraph *pGraph None,[in] LPCWSTR pName)
HRESULT None None.SetNetworkProtocol([in] WMT_NET_PROTOCOL protocol)
COLORREF None None.ListView_GetBkColor(HWND hwnd None)
HRESULT None None.SetBufferingTime([in] QWORD cnsBufferingTime)
HRESULT None None.SetTransportVideoParameters([in] long Param,[in] long Value)
HRESULT None None.GetAllParamCustData([in] UINT indexFunc,[in] UINT indexParam,[out] CUSTDATA *pCustData)
void None None.ListView_GetWorkAreas(HWND hwndLV None,INT nWorkAreas None,LPRECT lprc None)
void None None.ListView_SetCheckState(HWND hwndLV None,UINT iIndex None,BOOL fCheck None)
UINT None None.ListView_GetItemState(HWND hwnd None,int i None,UINT mask None)
void None None.ProcessVideoImage(BYTE* pDestScanLine0 None,LONG lDestStride None,const BYTE* pSrcScanLine0,LONG lSrcStride None,DWORD dwWidthInPixels None,DWORD dwHeightInPixels None)
HRESULT None None.CreateInstance([in] IUnknown *pUnkOuter,[in] REFIID riid,[out] PVOID *ppvObj)
DWORD None None.ListView_GetExtendedListViewStyle(HWND hwndLV None)
HRESULT None None.GetRefTypeInfo([in] HREFTYPE hRefType,[out] ITypeInfo **ppTInfo)
HRESULT None None.Receive(IMediaSample *pSample None)
HRESULT None None.StringCbPrintf(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszFormat,_In_ ... None)
HRESULT None None.StringCbPrintfW(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszFormat,_In_ ... None)
HRESULT None None.StringCbPrintfA(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszFormat,_In_ ... None)
int None None.ListView_InsertGroup(HWND hwnd None,int index None,PLVGROUP pgrp None)
HRESULT None None.get_EditStart([out] long *pValue)
HRESULT None None.StringCbCatNEx(_Inout_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc,_In_ size_t cbMaxAppend,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCbCatNExW(_Inout_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc,_In_ size_t cbMaxAppend,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCbCatNExA(_Inout_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc,_In_ size_t cbMaxAppend,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags)
HIMAGELIST None None.ListView_SetImageList(HWND hwnd None,HIMAGELIST himl None,int iImageList None)
int CALLBACK None.CompareFunc(LPARAM lParam1 None,LPARAM lParam2 None,LPARAM lParamSort None)
void None None.SetFormatType(const GUID *pformattype)
BOOL None None.ListView_GetGroupRect([in] HWND hwnd,[in] int iGroupId,[in] LONG type,[in None None,out] RECT *prc)
HRESULT None None.SetSyncPoint([in] BOOL bIsSyncPoint)
HRESULT None None.GetContainingTypeLib([out] ITypeLib **ppTLib,[out] UINT *pIndex)
HIMAGELIST None None.ListView_GetGroupHeaderImageList([in] HWND hwnd)
HRESULT None None.GetAllVarCustData([in] UINT index,[out] CUSTDATA *pCustData)
HRESULT None None.GetSourcePosition(long *pLeft None,long *pTop None,long *pWidth None,long *pHeight None)
virtual HRESULT None.GetSourceRect(RECT *pSourceRect None)
HRESULT None None.getRange_BacklightCompensation([out] long *pMin,[out] long *pMax,[out] long *pSteppingDelta,[out] long *pDefault,[out] long *pCapsFlag)
BOOL None None.ListView_SetColumn(HWND hwnd None,int iCol None,LPLVCOLUMN pcol None)
virtual HRESULT None.CompleteConnect(IPin *pReceivePin None)
HRESULT None None.get_MediaState([out] long *pState)
HRESULT None wmiutils.SetKey([in] LPCWSTR wszName,[in] ULONG uFlags,[in] ULONG uCimType,[in] LPVOID pKeyVal)
BOOL None None.ListView_SetInfoTip(HWND hwnd None,PLVSETINFOTIP plvSetInfoTip None)
HRESULT None None.GetName([out] WCHAR *pwszName,[in None None,out] WORD *pcchName)
UINT None None.ListView_GetCallbackMask(HWND hwnd None)
HRESULT None None.GetCapabilities(DWORD *pCapabilities None)
BOOL None None.ListView_GetFooterInfo([in] HWND hwnd,[in None None,out] LPLVFOOTERINFO plvfi)
HRESULT None fastprox.PutInstance([in] IWbemClassObject *pInst,[in] LONG lFlags,[in] IWbemContext *pCtx,[out] IWbemCallResult **ppCallResult)
typedef None None.void(CALLBACK *LPFNInitRoutine None)
BOOL None None.ListView_GetNumberOfWorkAreas(HWND hwndLV None,LPUINT lpuWorkAreas None)
typedef None None.void(*PAPPSTATE_CHANGE_ROUTINE None None)
HRESULT None None.get_Left([out] long *pLeft)
HRESULT None None.CheckMediaType(const CMediaType *mtIn)
virtual HRESULT None.PrepareReceive(IMediaSample *pMediaSample None)
INT None None.ListView_SubItemHitTestEx(HWND hwnd None,LPLVHITTESTINFO plvhti None)
void None None.ListView_SetItemCountEx(HWND hwndLV None,int cItems None,DWORD dwFlags None)
void None None.ListView_SetItemCount(HWND hwndLV None,int cItems None)
virtual HRESULT None.GetMediaType(int iPosition None,CMediaType *pMediaType None)
HRESULT None None.Duration(REFERENCE_TIME *ptDuration None)
INT None None.ListView_GetHotItem(HWND hwndLV None)
PVOID None None.SecureZeroMemory(_In_ PVOID ptr,_In_ SIZE_T cnt)
HRESULT None None.GetProperties(ALLOCATOR_PROPERTIES *pProps None)
void None None.DoSetWindowForeground(BOOL bFocus None)
int None ws2_32.closesocket(_In_ SOCKET s)
HRESULT None fastprox.PutClass([in] IWbemClassObject *pObject,[in] LONG lFlags,[in] IWbemContext *pCtx,[out] IWbemCallResult **ppCallResult)
int None None.ListView_GetColumnWidth(HWND hwnd None,int iCol None)
BOOL None None.MatchesPartial(const CMediaType *ppartial)
INT None None.ListView_GetSelectionMark(HWND hwndLV None)
int WSAAPI ws2_32.GetAddrInfoExCancel(_In_ LPHANDLE lpHandle)
HRESULT None None.put_Top(long Top None)
int None None.ListView_SetGroupInfo(HWND hwnd None,int iGroupId None,PLVGROUP pgrp None)
HRESULT None None.GetTime(REFERENCE_TIME *pTime None)
BOOL None None.ListView_InsertMarkHitTest(HWND hwnd None,LPPOINT point None,PLVINSERTMARK plvim None)
HRESULT None None.SetStreamPrioritization([in] IWMStreamPrioritization *pSP)
int None None.TreeView_SetItemHeight(HWND hwndTV None,SHORT cyItem None)
HRESULT None None.GetTimeFormat(const GUID *pFormat)
HRESULT None None.QueryDirection([out] PIN_DIRECTION *pPinDir)
HRESULT None None.SetTimeFormat(const GUID *pFormat)
HRESULT None fastprox.GetRequestId([out] REQUESTID *pId)
virtual LPTSTR None.GetClassWindowStyles(DWORD *pClassStyles None,DWORD *pWindowStyles None,DWORD *pWindowStylesEx None)
DWORD None None.ListView_GetExtendedListViewStyle(HWND hwndLV None)
HRESULT None None.GetFuncCustData([in] UINT index,[in] REFGUID guid,[out] VARIANT *pVarVal)
HRESULT None None.get_SourceHeight(long *pSourceHeight None)
HRESULT None None.StartAtPosition([in] WORD wStreamNum,[in] void *pvOffsetStart,[in] void *pvDuration,[in] WMT_OFFSET_FORMAT dwOffsetFormat,[in] float fRate,[in] void *pvContext)
HRESULT None None.GetStopPosition(LONGLONG *pStop None)
virtual HRESULT None.StreamTime([ref] CRefTime rtStream)
int None None.ListView_GetGroupInfo(HWND hwnd None,int iGroupId None,PLVGROUP pgrp None)
BOOL None None.ListView_SetBkColor(HWND hwnd None,COLORREF clrBk None)
BOOL None None.ListView_IsGroupViewEnabled(HWND hwnd None)
HRESULT None None.GetRecordName([in] WORD wRecordNumber,[out] WCHAR *pwszRecordName,[in None None,out] WORD *pcchRecordName)
BOOL None None.ListView_GetItemPosition(HWND hwnd None,int i None,POINT *ppt None)
COLORREF None None.ListView_GetTextBkColor(HWND hwnd None)
HRESULT None cimwin32.GetObjectText([in] LONG lFlags,[out] BSTR *pstrObjectText)
void None mswsock.GetAcceptExSockaddrs(_In_ PVOID lpOutputBuffer,_In_ DWORD dwReceiveDataLength,_In_ DWORD dwLocalAddressLength,_In_ DWORD dwRemoteAddressLength,_Out_ LPSOCKADDR *LocalSockaddr,_Out_ LPINT LocalSockaddrLength,_Out_ LPSOCKADDR *RemoteSockaddr,_Out_ LPINT RemoteSockaddrLength)
INT WSAAPI ws2_32.WSAAddressToString(_In_ LPSOCKADDR lpsaAddress,_In_ DWORD dwAddressLength,_In_opt_ LPWSAPROTOCOL_INFO lpProtocolInfo,_Inout_ LPTSTR lpszAddressString,_Inout_ LPDWORD lpdwAddressStringLength)
INT WSAAPI ws2_32.WSAAddressToStringW(_In_ LPSOCKADDR lpsaAddress,_In_ DWORD dwAddressLength,_In_opt_ LPWSAPROTOCOL_INFO lpProtocolInfo,_Inout_ LPTSTR lpszAddressString,_Inout_ LPDWORD lpdwAddressStringLength)
INT WSAAPI ws2_32.WSAAddressToStringA(_In_ LPSOCKADDR lpsaAddress,_In_ DWORD dwAddressLength,_In_opt_ LPWSAPROTOCOL_INFO lpProtocolInfo,_Inout_ LPTSTR lpszAddressString,_Inout_ LPDWORD lpdwAddressStringLength)
HRESULT None None.get_SourceHeight(long *pSourceHeight None)
virtual HRESULT None.CompleteConnect(PIN_DIRECTION direction None,IPin *pReceivePin None)
HRESULT None None.GetLoggingUrlCount([out] DWORD *pdwUrlCount)
UINT None None.TreeView_SetCheckState(HWND hwndTV None,HTREEITEM hItem None,BOOL fCheck None)
virtual LPTSTR None.GetClassWindowStyles(DWORD *pClassStyles None,DWORD *pWindowStyles None,DWORD *pWindowStylesEx None)
HRESULT None None.SetName([in] WCHAR *pwszName)
HRESULT None None.CheckVideoType(const VIDEOINFO *pInput)
HWND None None.ListView_GetHeader(HWND hwndLV None)
HWND None None.ListView_GetHeader(HWND hwndLV None)
void None None.ListView_RemoveAllGroups(HWND hwnd None)
HRESULT None None.ChangeOutputFormat(const AM_MEDIA_TYPE *pmt,REFERENCE_TIME tSegmentStart None,REFERENCE_TIME tSegmentStop None,double dSegmentRate None)
HRESULT None None.GetCustData([in] REFGUID guid,[out] VARIANT *pVarVal)
HRESULT None None.QueryPinInfo(PIN_INFO *pInfo None)
int None None.ListView_GetColumnWidth(HWND hwnd None,int iCol None)
HRESULT None None.GetVarIndexOfMemId([in] MEMBERID memid,[out] UINT *pVarIndex)
int None None.ListView_InsertItem(HWND hwnd None,const LPLVITEM pitem)
HRESULT None None.GetParamCustData([in] UINT indexFunc,[in] UINT indexParam,[in] REFGUID guid,[out] VARIANT *pVarVal)
HRESULT None None.GetFuncIndexOfMemId([in] MEMBERID memid,[in] INVOKEKIND invKind,[out] UINT *pFuncIndex)
HRESULT None None.get_DestinationWidth(long *pDestinationWidth None)
HRESULT None None.ReleaseBuffer(IMediaSample *pSample None)
void None None.ListView_SetExtendedListViewStyleEx(HWND hwndLV None,DWORD dwExMask None,DWORD dwExStyle None)
HIMAGELIST None None.ListView_SetGroupHeaderImageList([in] HWND hwnd,[in] HIML himl)
void None None.PaintWindow(BOOL bErase None)
HRESULT None None.GetName([out] WCHAR *pwszName,[in None None,out] WORD *pcchName)
BOOL None None.TreeView_DeleteItem(HWND hwndTV None,HTREEITEM hitem None)
HRESULT None None.SetSyncSource(IReferenceClock *pClock None)
BOOL None mswsock.AcceptEx(_In_ SOCKET sListenSocket,_In_ SOCKET sAcceptSocket,_In_ PVOID lpOutputBuffer,_In_ DWORD dwReceiveDataLength,_In_ DWORD dwLocalAddressLength,_In_ DWORD dwRemoteAddressLength,_Out_ LPDWORD lpdwBytesReceived,_In_ LPOVERLAPPED lpOverlapped)
HRESULT None None.GetMaxIdealImageSize(long *pWidth None,long *pHeight None)
HTREEITEM None None.TreeView_GetDropHilight(HWND hwndTV None)
VOID None None.ListView_SetItemText(HWND hwnd None,int i None,int iSubItem None,LPCTSTR pszText None)
int WSAAPI None.NSPLookupServiceBegin(_In_ LPGUID lpProviderId,_In_ LPWSAQUERYSETW lpqsRestrictions,_In_ LPWSASERVICECLASSINFOW lpServiceClassInfo,_In_ DWORD dwControlFlags,_Out_ LPHANDLE lphLookup)
HRESULT None None.Invoke([in] PVOID pvInstance,[in] MEMBERID memid,[in] WORD wFlags,[in None None,out] DISPPARAMS *pDispParams,[out] VARIANT *pVarResult,[out] EXCEPINFO *pExcepInfo,[out] UINT *puArgErr)
HRESULT None None.GetDestinationPosition(long *pLeft None,long *pTop None,long *pWidth None,long *pHeight None)
BOOL None None.ListView_SortItems(HWND hwnd None,PFNLVCOMPARE pfnCompare None,LPARAM lParamSort None)
HCURSOR None None.ListView_SetHotCursor(HWND hwndLV None,HCURSOR hCursor None)
HRESULT None None.GetProtocolName([out] WCHAR *pwszProtocol,[in None None,out] DWORD *pcchProtocol)
HRESULT None None.QueryFilterInfo(FILTER_INFO *pInfo None)
virtual HRESULT None.SetMediaType(const CMediaType *pmt)
HRESULT None None.GetProxyPort([in] LPCWSTR pwszProtocol,[out] DWORD *pdwPort)
HRESULT None None.ListView_SetItemIndexState([in] HWND hwndLV,[in] LVITEMINDEX *plvii,[in] UINT data,[in] UINT mask)
BOOL None None.ListView_GetViewRect(HWND hwnd None,RECT *prc None)
BOOL None None.ListView_Scroll(HWND hwnd None,int dx None,int dy None)
HRESULT None None.DoGetWindowStyle(long *pStyle None,long WindowLong None)
void None None.ListView_GetGroupMetrics(HWND hwnd None,PLVGROUPMETRICS pGroupMetrics None)
BOOL None None.ListView_DeleteAllItems(HWND hwnd None)
HRESULT None None.FindPin(LPCWSTR Id None,IPin **ppPin None)
HRESULT None cimwin32.GetMethodOrigin([in] LPCWSTR wszMethodName,[out] BSTR *pstrClassName)
virtual HRESULT None.SetSourceRect(RECT *pSourceRect None)
BOOL None None.ListView_SetTileInfo(HWND hwnd None,PLVTILEINFO plvtinfo None)
virtual void None.OnRenderStart(IMediaSample *pMediaSample None)
HRESULT None None.CreateInstance([in] IUnknown *pUnkOuter,[in] REFIID riid,[out] PVOID *ppvObj)
int None ws2_32.getipv4sourcefilter(_In_ SOCKET Socket,_In_ IN_ADDR Interface,_In_ IN_ADDR Group,_Out_ MULTICAST_MODE_TYPE *FilterMode,_Inout_ ULONG *SourceCount,_Out_ IN_ADDR *SourceList)
HRESULT None None.GetVideoSize(long *pWidth None,long *pHeight None)
void None None.ListView_SetExtendedListViewStyle(HWND hwndLV None,DWORD dwExStyle None)
HRESULT None None.ChangeMediaType(const CMediaType *pmt)
HRESULT None None.TranslateAccelerator(LPMSG lpMsg None)
INT None mswsock.GetAddressByName(_In_ DWORD dwNameSpace,_In_ LPGUID lpServiceType,_In_opt_ LPTSTR lpServiceName,_In_opt_ LPINT lpiProtocols,_In_ DWORD dwResolution,_In_opt_ LPSERVICE_ASYNC_INFO lpServiceAsyncInfo,_Out_ LPVOID lpCsaddrBuffer,_Inout_ LPDWORD lpdwBufferLength,_Inout_ LPTSTR lpAliasBuffer,_Inout_ LPDWORD lpdwAliasBufferLength)
INT None mswsock.GetAddressByNameW(_In_ DWORD dwNameSpace,_In_ LPGUID lpServiceType,_In_opt_ LPTSTR lpServiceName,_In_opt_ LPINT lpiProtocols,_In_ DWORD dwResolution,_In_opt_ LPSERVICE_ASYNC_INFO lpServiceAsyncInfo,_Out_ LPVOID lpCsaddrBuffer,_Inout_ LPDWORD lpdwBufferLength,_Inout_ LPTSTR lpAliasBuffer,_Inout_ LPDWORD lpdwAliasBufferLength)
INT None mswsock.GetAddressByNameA(_In_ DWORD dwNameSpace,_In_ LPGUID lpServiceType,_In_opt_ LPTSTR lpServiceName,_In_opt_ LPINT lpiProtocols,_In_ DWORD dwResolution,_In_opt_ LPSERVICE_ASYNC_INFO lpServiceAsyncInfo,_Out_ LPVOID lpCsaddrBuffer,_Inout_ LPDWORD lpdwBufferLength,_Inout_ LPTSTR lpAliasBuffer,_Inout_ LPDWORD lpdwAliasBufferLength)
int None None.ListView_SortGroups(HWND hwnd None,PFNLVGROUPCOMPARE pfnGroupCompare None,LPVOID plv None)
BOOL None None.ListView_GetOrigin(HWND hwnd None,LPPOINT lpptOrg None)
HRESULT None None.GetState(DWORD dwMilliSecsTimeout None,FILTER_STATE *State None)
HRESULT None None.Receive(IMediaSample *pSample None)
HTREEITEM None None.TreeView_GetRoot(HWND hwndTV None)
UINT None None.ListView_GetSelectedCount(HWND hwnd None)
BOOL None None.CheckRequest(DWORD *pParam None)
HRESULT None None.get_VideoHeight(long *pVideoHeight None)
HRESULT None None.GetCurrentPosition(LONGLONG *pCurrent None)
INT WSPAPI ws2_32.WSAEnumNameSpaceProvidersEx(_Inout_ LPDWORD lpdwBufferLength,_Out_ LPWSANAMESPACE_INFOEX lpnspBuffer)
INT WSPAPI ws2_32.WSAEnumNameSpaceProvidersExW(_Inout_ LPDWORD lpdwBufferLength,_Out_ LPWSANAMESPACE_INFOEX lpnspBuffer)
INT WSPAPI ws2_32.WSAEnumNameSpaceProvidersExA(_Inout_ LPDWORD lpdwBufferLength,_Out_ LPWSANAMESPACE_INFOEX lpnspBuffer)
BOOL None None.ListView_GetFooterItemRect([in] HWND hwnd,[in] UINT iItem,[in None None,out] RECT *prc)
COLORREF None None.TreeView_SetTextColor(HWND hwndTV None,COLORREF clrText None)
HRESULT None None.GetBuffer(IMediaSample **ppBuffer None,REFERENCE_TIME *pStartTime None,REFERENCE_TIME *pEndTime None,DWORD dwFlags None)
HRESULT None cimwin32.GetMethodQualifierSet([in] LPCWSTR wszMethod,[out] IWbemQualifierSet **ppQualSet)
BOOL None None.ListView_GetUnicodeFormat(HWND hwnd None)
HRESULT None None.SetDiscontinuity(BOOL bDiscont None)
HRESULT None cimwin32.InheritsFrom([in] LPCWSTR wszAncestor)
HRESULT None None.SetObjects(ULONG cObjects None,LPUNKNOWN *ppUnk None)
INT None None.ListView_SubItemHitTest(HWND hwndLV None,LPLVHITTESTINFO pInfo None)
HRESULT None cimwin32.GetPropertyQualifierSet([in] LPCWSTR wszProperty,[out] IWbemQualifierSet **ppQualSet)
DWORD None None.CallWorker(DWORD dwParam None)
HRESULT None None.GetVarCustData([in] UINT index,[in] REFGUID guid,[out] VARIANT *pVarVal)
HTREEITEM None None.TreeView_GetNextSibling(HWND hwndTV None,HTREEITEM hitem None)
void None None.ListView_SetItemPosition32(HWND hwnd None,int iItem None,int x None,int y None)
HRESULT None None.put_DestinationLeft(long DestinationLeft None)
int WSAAPI None.NSPv2Startup(_In_ LPGUID lpProviderId,_In_ LPVOID *ppvClientSessionArg)
BOOL None None.ListView_GetItemRect([in] HWND hwnd,[in] int i,[out] RECT *prc,[in] int code)
UINT None None.TreeView_SetItemState(HWND hwndTV None,HTREEITEM hItem None,UINT state None,UINT stateMask None)
HWND WINAPI user32.SetFocus(_In_opt_ HWND hWnd)
HRESULT None None.put_Rate(double dRate None)
HRESULT None None.GetMaxIdealImageSize(long *pWidth None,long *pHeight None)
HRESULT None None.GetDuration([out] LONGLONG *pDuration)
DWORD None None.ListView_ApproximateViewRect(hwndLV hwndLV None,int cx None,int cy None,int iCount None)
INT WSAAPI ws2_32.WSAEnumNameSpaceProviders(_Inout_ LPDWORD lpdwBufferLength,_Out_ LPWSANAMESPACE_INFO lpnspBuffer)
INT WSAAPI ws2_32.WSAEnumNameSpaceProvidersW(_Inout_ LPDWORD lpdwBufferLength,_Out_ LPWSANAMESPACE_INFO lpnspBuffer)
INT WSAAPI ws2_32.WSAEnumNameSpaceProvidersA(_Inout_ LPDWORD lpdwBufferLength,_Out_ LPWSANAMESPACE_INFO lpnspBuffer)
int None ws2_32.WSAIoctl(_In_ SOCKET s,_In_ DWORD dwIoControlCode,_In_ LPVOID lpvInBuffer,_In_ DWORD cbInBuffer,_Out_ LPVOID lpvOutBuffer,_In_ DWORD cbOutBuffer,_Out_ LPDWORD lpcbBytesReturned,_In_ LPWSAOVERLAPPED lpOverlapped,_In_ LPWSAOVERLAPPED_COMPLETION_ROUTINE lpCompletionRoutine)
BOOL None None.ListView_GetSubItemRect(HWND hwndLV None,int iItem None,int iSubItem None,int code None,LPRECT lpRect None)
BOOL None None.TreeView_GetItem(HWND hwndTV None,LPTVITEM pitem None)
BOOL None None.ListView_SetCallbackMask(HWND hwnd None,UINT mask None)
HRESULT None None.SetPointer(BYTE *ptr None,LONG cBytes None)
UINT None None.TreeView_GetVisibleCount(HWND hwndTV None)
void None None.ListView_GetTileViewInfo(HWND hwnd None,PLVTILEVIEWINFO plvtvinfo None)
BOOL None None.TreeView_SelectSetFirstVisible(HWND hwndTV None,HTREEITEM hitem None)
BOOL None None.ListView_GetFooterRect([in] HWND hwnd,[in None None,out] RECT *prc)
BOOL None None.ListView_Update(HWND hwnd None,int iItem None)
LRESULT None None.ListView_SetGroupState([in] HWND hwnd,[in] UINT dwGroupId,[in] UINT dwMask,[in] UINT dwState)
HTREEITEM None None.TreeView_GetNextSelected(HWND hwnd None,HTREEITEM *hitem None)
BOOL None None.ListView_SetBkImage(HWND hwndLV None,LPLVBKIMAGE plvbki None)
HRESULT None cimwin32.SpawnInstance([in] LONG lFlags,[out] IWbemClassObject **ppNewInstance)
HRESULT None None.GetWindowPosition(long *pLeft None,long *pTop None,long *pWidth None,long *pHeight None)
void None None.SetConfigInfo(IGraphConfig *pGraphConfig None,HANDLE hStopEvent None)
HRESULT None None.SetSyncPoint(BOOL bIsSyncPoint None)
BOOL None None.TreeView_SetInsertMark(HWND hwndTV None,HTREEITEM htiInsert None,BOOL fAfter None)
DWORD None None.ListView_GetItemSpacing(HWND hwnd None,BOOL fSmall None)
HRESULT None None.GetMediaType(AM_MEDIA_TYPE **ppMediaType None)
HRESULT None wsmauto.EnumerationFlagReturnObject([out] long *flags)
void None None.ListView_SetGroupMetrics(HWND hwnd None,PLVGROUPMETRICS pGroupMetrics None)
BOOL None mswsock.RIOReceiveEx(_In_ RIO_RQ SocketQueue,_In_ PRIO_BUF pData,_In_ ULONG DataBufferCount,_In_ PRIO_BUF pLocalAddress,_In_ PRIO_BUF pRemoteAddress,_In_ PRIO_BUF pControlContext,_In_ PRIO_BUF pFlags,_In_ DWORD Flags,_In_ PVOID RequestContext)
HRESULT None None.QueryPreferredFormat(GUID *pFormat None)
COLORREF None None.TreeView_SetBkColor(HWND hwndTV None,COLORREF clrBk None)
COLORREF None None.ListView_GetOutlineColor(HWND hwnd None)
HRESULT None cimwin32.GetMethod([in] LPCWSTR wszName,[in] LONG lFlags,[out] IWbemClassObject **ppInSignature,[out] IWbemClassObject **ppOutSignature)
HRESULT None wbemsvc.Backup([in] LPCWSTR strBackupToFile,[in] long lFlags)
HRESULT None None.GetTime([out] REFERENCE_TIME *pTime)
HRESULT None None.get_VideoWidth(long *pVideoWidth None)
void None None.ListView_GetItemText(HWND hwnd None,int iItem None,int iSubItem None,LPTSTR pszText None,int cchTextMax None)
HRESULT None None.ReceiveMultiple(IMediaSample **ppSamples None,long nSamples None,long *nSamplesProcessed None)
void None None.SetAbortSignal(BOOL bAbort None)
BOOL None mswsock.RIOSend(_In_ RIO_RQ SocketQueue,_In_ PRIO_BUF pData,_In_ ULONG DataBufferCount,_In_ DWORD Flags,_In_ PVOID RequestContext)
HRESULT None cimwin32.Put([in] LPCWSTR wszName,[in] LONG lFlags,[in] VARIANT *pVal,[in] CIMTYPE vtType)
HRESULT None None.get_Top(long *pTop None)
int None None.ListView_GetCountPerPage(HWND hwnd None)
HRESULT None None.put_DestinationWidth(long DestinationWidth None)
HTREEITEM None None.TreeView_GetNextItem(HWND hwndTV None,HTREEITEM hitem None,UINT flag None)
HTREEITEM None None.TreeView_GetParent(HWND hwndTV None,HTREEITEM hitem None)
LONG NTAPI ntdll.RtlIpv6StringToAddressEx(_In_ PCTSTR AddressString,_Out_ IN6_ADDR *Address,_Out_ PULONG ScopeId,_Out_ PUSHORT Port)
LONG NTAPI ntdll.RtlIpv6StringToAddressExW(_In_ PCTSTR AddressString,_Out_ IN6_ADDR *Address,_Out_ PULONG ScopeId,_Out_ PUSHORT Port)
LONG NTAPI ntdll.RtlIpv6StringToAddressEx(_In_ PCTSTR AddressString,_Out_ IN6_ADDR *Address,_Out_ PULONG ScopeId,_Out_ PUSHORT Port)
BOOL None None.PossiblyEatMessage(UINT uMsg None,WPARAM wParam None,LPARAM lParam None)
BOOL None None.ListView_GetColumn(HWND hwnd None,int iCol None,LPLVCOLUMN pcol None)
SOCKET None ws2_32.WSASocket(_In_ int af,_In_ int type,_In_ int protocol,_In_ LPWSAPROTOCOL_INFO lpProtocolInfo,_In_ GROUP g,_In_ DWORD dwFlags)
SOCKET None ws2_32.WSASocketW(_In_ int af,_In_ int type,_In_ int protocol,_In_ LPWSAPROTOCOL_INFO lpProtocolInfo,_In_ GROUP g,_In_ DWORD dwFlags)
SOCKET None ws2_32.WSASocketA(_In_ int af,_In_ int type,_In_ int protocol,_In_ LPWSAPROTOCOL_INFO lpProtocolInfo,_In_ GROUP g,_In_ DWORD dwFlags)
UINT None None.TreeView_GetIndent(HWND hwndTV None)
SOCKET WSAAPI ws2_32.socket(_In_ int af,_In_ int type,_In_ int protocol)
HTREEITEM None None.TreeView_GetSelection(HWND hwndTV None)
HRESULT None None.QueryVendorInfo(LPWSTR *pVendorInfo None)
BOOL None None.ListView_SetUnicodeFormat(HWND hwnd None,BOOL fUnicode None)
HWND None None.ListView_SetToolTips(HWND hwnd None,HWND hwndToolTip None)
COLORREF None None.ListView_GetTextColor(HWND hwnd None)
void None None.SetControlVideoPin(CBasePin *pPin None)
void None None.SetControlWindowPin(CBasePin *pPin None)
int None None.ListView_SetView(HWND hwnd None,DWORD iView None)
void None None.ListView_CancelEditLabel(HWND hwnd None)
HRESULT None None.DoShowWindow(LONG ShowCmd None)
HTREEITEM None None.TreeView_GetChild(HWND hwndTV None,HTREEITEM hitem None)
BOOL WINAPI kernel32.GetProcessDEPPolicy(_In_ HANDLE hProcess,_Out_ LPDWORD lpFlags,_Out_ PBOOL lpPermanent)
BOOL None None.ListView_GetFooterItem([in] HWND hwnd,[in] UINT iItem,[in None None,out] LVFOOTERITEM *pfi)
int None None.ListView_HitTest(HWND hwnd None,LPLVHITTESTINFO pinfo None)
BOOL None None.ListView_SetItemPosition(HWND hwnd None,int i None,int x None,int y None)
HTREEITEM None None.TreeView_InsertItem(HWND hwndTV None,LPTVINSERTSTRUCT lpis None)
int None None.ListView_GetTopIndex(HWND hwnd None)
HRESULT None None.NotifyOwnerMessage(long hwnd None,long uMsg None,LONG_PTR wParam None,LONG_PTR lParam None)
UINT None None.TreeView_GetCount(HWND hwndTV None)
int None None.ListView_HitTestEx(HWND hwndLV None,LPLVHITTESTINFO pinfo None)
int None None.ListView_EnableGroupView(HWND hwnd None,BOOL fEnable None)
RIO_CQ None mswsock.RIOCreateCompletionQueue(_In_ DWORD QueueSize,_In_opt_ RIO_NOTIFICATION_COMPLETION NotificationCompletion)
BOOL None None.ListView_SetInsertMark(HWND hwnd None,PLVINSERTMARK plvim None)
COLORREF None None.ListView_SetInsertMarkColor(HWND hwnd None,COLORREF color None)
HRESULT None cimwin32.SpawnDerivedClass([in] LONG lFlags,[out] IWbemClassObject **ppNewClass)
BOOL None None.IsSpecialSample(IMediaSample *pSample None)
HRESULT None wsmauto.GetErrorMessage([in] DWORD errorNumber,[out] BSTR *errorMessage)
BOOL None None.ListView_GetItem(HWND hwnd None,LPLVITEM pitem None)
BOOL None None.ListView_HasGroup(HWND hwnd None,int dwGroupId None)
HRESULT None None.TreeView_SetExtendedStyle(HWND hwnd None,DWORD dw None,UINT mask None)
HRESULT None None.get_DestinationHeight(long *pDestinationHeight None)
void None None.ListView_SetSelectedColumn(HWND hwnd None,int iCol None)
HRESULT None None.AdviseTime([in] REFERENCE_TIME rtBaseTime,[in] REFERENCE_TIME rtStreamTime,[in] HEVENT hEvent,[out] DWORD_PTR *pdwAdviseCookie)
HRESULT None None.SetTime(REFERENCE_TIME *pTimeStart None,REFERENCE_TIME *pTimeEnd None)
NETIOAPI_API None iphlpapi.FlushIpNetTable2(_In_ ADDRESS_FAMILY Family,_In_ NET_IFINDEX InterfaceIndex)
BOOL None None.ListView_SetColumnOrderArray(HWND hwndLV None,int iCount None,int *lpiArray None)
void None None.ListView_SetWorkAreas(HWND hwndLV None,INT nWorkAreas None,LPRECT lprc None)
HIMAGELIST None None.TreeView_SetImageList(HWND hwndTV None,HIMAGELIST himl None,INT iImage None)
INT WSAAPI ws2_32.InetPton(_In_ INT Family,_In_ PCTSTR pszAddrString,_Out_ PVOID pAddrBuf)
INT WSAAPI ws2_32.InetPtonW(_In_ INT Family,_In_ PCTSTR pszAddrString,_Out_ PVOID pAddrBuf)
INT WSAAPI ws2_32.InetPtonA or inet_pton(_In_ INT Family,_In_ PCTSTR pszAddrString,_Out_ PVOID pAddrBuf)
HRESULT None cimwin32.Get([in] LPCWSTR wszName,[in] LONG lFlags,[out] VARIANT *pVal,[out None None,optional] CIMTYPE *pvtType,[out None None,optional] LONG *plFlavor)
HRESULT None cimwin32.BeginEnumeration([in] LONG lEnumFlags)
HRESULT None None.put_CurrentPosition(REFTIME llTime None)
HTREEITEM None None.TreeView_GetLastVisible(HWND hwndTV None)
BOOL PASCAL mswsock.TransmitFile(SOCKET hSocket None,HANDLE hFile None,DWORD nNumberOfBytesToWrite None,DWORD nNumberOfBytesPerSend None,LPOVERLAPPED lpOverlapped None,LPTRANSMIT_FILE_BUFFERS lpTransmitBuffers None,DWORD dwFlags None)
HRESULT None cimwin32.BeginMethodEnumeration([in] LONG lEnumFlags)
int None ws2_32.getsockopt(_In_ SOCKET s,_In_ int level,_In_ int optname,_Out_ char *optval,_Inout_ int *optlen)
HRESULT None None.get_SourceTop(long *pSourceTop None)
LRESULT None None.TreeView_SetHot(HWND hwndTV None,HTREEITEM hitem None)
virtual HRESULT None.SetMediaType(PIN_DIRECTION direction None,const CMediaType *pmt)
BOOL None None.ListView_Arrange(HWND hwnd None,UINT code None)
BOOL None None.ListView_GetColumnOrderArray(HWND hwndLV None,int iCount None,int *lpiArray None)
HRESULT None None.Move(LPCRECT prect None)
BOOL None None.TreeView_SortChildrenCB(HWND hwndTV None,LPTVSORTCB psort None,BOOL fRecurse None)
HRESULT None None.NonDelegatingQueryInterface(REFIID riid None,void **ppv None)
BOOL None None.ListView_DeleteItem(HWND hwnd None,int iItem None)
BOOL None None.ListView_DeleteColumn(HWND hwnd None,int iCol None)
BOOL None None.ListView_SetCallbackMask(HWND hwnd None,UINT mask None)
UINT None None.TreeView_GetCheckState(HWND hwndTV None,HTREEITEM hItem None)
HRESULT None wsmauto.SessionFlagSkipCNCheck([out] long *flags)
UINT None None.ListView_MapIndexToID(HWND hwnd None,UINT index None)
INT None None.ListView_GetFocusedGroup([in] HWND hwnd)
UINT None None.TreeView_GetItemState(HWND hwndTV None,HTREEITEM hItem None,UINT stateMask None)
HRESULT None None.GetSupportedProtocolName([in] DWORD dwProtocolNum,[out] WCHAR *pwszProtocolName,[in None None,out] DWORD *pcchProtocolName)
virtual LRESULT None.OnReceiveMessage(HWND hwnd None,INT uMsg None,WPARAM wParam None,LPARAM lParam None)
LRESULT None None.ListView_GetGroupInfoByIndex([in] HWND hwnd,[in] int iIndex,[in None None,out] PLVGROUP pgrp)
BOOL None None.TreeView_DeleteAllItems(HWND hwndTV None)
NETIO_STATUS WINAPI iphlpapi.ConvertInterfaceIndexToLuid(_In_ NET_IFINDEX InterfaceIndex,_Out_ PNET_LUID InterfaceLuid)
int None None.ListView_GetStringWidth(HWND hwnd None,LPCSTR psz None)
void None None.GetObjSemiSync(IWbemServices *pSvc None)
void WSAAPI ws2_32.FreeAddrInfoEx(_In_ PADDRINFOEX pAddrInfo)
void WSAAPI ws2_32.FreeAddrInfoExW(_In_ PADDRINFOEX pAddrInfo)
void WSAAPI ws2_32.FreeAddrInfoEx(_In_ PADDRINFOEX pAddrInfo)
HRESULT None cimwin32.DeleteMethod([in] LPCWSTR wszName)
BOOL None None.ListView_SortItemsEx(HWND hwnd None,PFNLVCOMPARE pfnCompare None,LPARAM lParamSort None)
HRESULT None None.SetMediaType(AM_MEDIA_TYPE *pMediaType None)
HRESULT None None.put_Width(long Width None)
BOOL None None.DisconnectEx(_In_ SOCKET hSocket,_In_ LPOVERLAPPED lpOverlapped,_In_ DWORD dwFlags,_In_ DWORD reserved)
int None None.ListView_GetNextItem(HWND hwnd None,int iStart None,UINT flags None)
virtual HRESULT None.GetTargetRect(RECT *pTargetRect None)
HRESULT None None.put_MessageDrain(OAHWND Drain None)
HRESULT None None.Unadvise([in] DWORD_PTR dwAdviseCookie)
int None None.ListView_RemoveGroup(HWND hwnd None,int iGroupId None)
virtual void None.OnReceiveFirstSample(IMediaSample *pMediaSample None)
int None None.ListView_FindItem(HWND hwnd None,int iStart None,const LPLVFINDINFO plvfi)
HRESULT WINAPI windows.networking.SetSocketMediaStreamingMode(BOOL value None)
BOOL WSAAPI ws2_32.WSAGetOverlappedResult(_In_ SOCKET s,_In_ LPWSAOVERLAPPED lpOverlapped,_Out_ LPDWORD lpcbTransfer,_In_ BOOL fWait,_Out_ LPDWORD lpdwFlags)
BOOL None None.TreeView_SetItem(HWND hwndTV None,LPTVITEM pitem None)
BOOL None None.ListView_EnsureVisible(HWND hwnd None,int i None,BOOL fPartialOK None)
HWND None None.TreeView_GetToolTips(HWND hwndTV None)
HRESULT None None.FindPin(LPCWSTR Id None,IPin **ppPin None)
BOOL None None.TreeView_SelectDropTarget(HWND hwndTV None,HTREEITEM hitem None)
BOOL None mswsock.RIOReceive(_In_ RIO_RQ SocketQueue,_In_ PRIO_BUF pData,_In_ ULONG DataBufferCount,_In_ DWORD Flags,_In_ PVOID RequestContext)
DWORD None None.ListView_GetView(HWND hwnd None)
int WSAAPI ws2_32.GetHostNameW(_Out_ PWSTR name,_In_ int namelen)
BOOL None None.ListView_GetInsertMark(HWND hwnd None,PLVINSERTMARK plvim None)
int None ws2_32.__WSAFDIsSet(SOCKET fd None,fd_set *set None)
HTREEITEM None None.TreeView_HitTest(HWND hwndTV None,LPTVHITTESTINFO lpht None)
HRESULT None None.get_WindowStyle(long *pWindowStyle None)
virtual HRESULT None.SourceThreadCanWait(BOOL bCanWait None)
int None None.ListView_GetGroupCount(HWND hwnd None)
HWND None None.ListView_EditLabel(HWND hwnd None,int iItem None)
int WSAAPI None.NSPv2LookupServiceNextEx(_In_ HANDLE hAsyncCall,_In_ HANDLE hLookup,_In_ DWORD dwControlFlags,_Inout_ LPDWORD lpdwBufferLength,_Out_ LPWSAQUERYSET2W lpqsResults)
HANDLE None iphlpapi.IcmpCreateFile(void None None)
int None ws2_32.WSAEventSelect(_In_ SOCKET s,_In_ WSAEVENT hEventObject,_In_ long lNetworkEvents)
HRESULT None None.GetCurrentImage(long *pBufferSize None,long *pVideoImage None)
HRESULT None None.GetPositions(LONGLONG *pCurrent None,LONGLONG *pStop None)
HRESULT None None.SetPreroll(BOOL bIsPreroll None)
UINT None None.TreeView_GetScrollTime(HWND hwndTV None)
BOOL None None.TreeView_Select(HWND hwndTV None,HTREEITEM hitem None,UINT flag None)
HRESULT None None.SetMediaType(const CMediaType *pmt)
HRESULT None None.Help(LPCWSTR lpszHelpDir None)
virtual HRESULT None.CompleteStateChange(FILTER_STATE OldState None)
int WSAAPI ws2_32.WSAHtonl(_In_ SOCKET s,_In_ u_long hostlong,_Out_ u_long *lpnetlong)
HRESULT None None.GetClassID(CLSID *pClsID None)
HWND None None.TreeView_GetToolTips(HWND hwndTV None)
HRESULT None None.GetMediaTime(LONGLONG *pStart None,LONGLONG *pEnd None)
int None None.ListView_GetItemCount(HWND hwnd None)
virtual INT_PTR None.OnReceiveMessage(HWND hwnd None,UINT uMsg None,WPARAM wParam None,LPARAM lParam None)
UINT None None.ListView_GetSelectedColumn(HWND hwnd None)
HRESULT None None.AsynchronousBlockOutputPin(HANDLE hNotifyCallerPinBlockedEvent None)
HTREEITEM None None.TreeView_MapAccIDToHTREEITEM(HWND hwnd None,UINT id None)
HRESULT None None.CanSeekBackward(LONG *pCanSeekBackward None)
DWORD None None.TreeView_ShowInfoTip(HWND hwnd None,HITEM hitem None)
BOOL WINAPI kernel32.GetHandleInformation(_In_ HANDLE hObject,_Out_ LPDWORD lpdwFlags)
COLORREF None None.TreeView_GetTextColor(HWND hwndTV None)
virtual HRESULT None.DoRealisePalette(BOOL bForceBackground None)
HRESULT None None.SetWindowPosition(long Left None,long Top None,long Width None,long Height None)
INT None None.ListView_SetHotItem(HWND hwndLV None,INT iIndex None)
HIMAGELIST None None.ListView_CreateDragImage(HWND hwnd None,int iItem None,LPPOINT lpptUpLeft None)
COLORREF None None.TreeView_GetInsertMarkColor(HWND hwndTV None)
HRESULT None wsmauto.SessionFlagUseDigest([out] long *flags)
HRESULT None None.InitializeOutputSample(IMediaSample *pSample None,IMediaSample **ppOutSample None)
HRESULT None None.GetProperties(DWORD cbProperties None,BYTE *pbProperties None)
UINT None None.ListView_IsItemVisible([in] HWND hwnd,[in] UINT index)
int WSAAPI ws2_32.GetAddrInfoExOverlappedResult(LPOVERLAPPED lpOverlapped None)
HRESULT None None.get_FullScreenMode(long *FullScreenMode None)
BOOL None None.ListView_GetItemIndexRect([in] HWND hwnd,[in] LVITEMINDEX *plvii,[in] LONG iSubItem,[in] LONG code,[in None None,out] LPRECT prc)
int WSAAPI ws2_32.WSANtohs(_In_ SOCKET s,_In_ u_short netshort,_Out_ u_short *lphostshort)
int None None.TreeView_GetItemHeight(HWND hwndTV None)
COLORREF None None.TreeView_SetInsertMarkColor(HWND hwndTV None,COLORREF clrInsertMark None)
int None None.ListView_GetInsertMarkRect(HWND hwnd None,LPRECT prc None)
HRESULT None None.get_Rate(double *pdRate None)
HRESULT None None.GetSyncSource(IReferenceClock **pClock None)
NETIOAPI_API None iphlpapi.NotifyUnicastIpAddressChange(_In_ ADDRESS_FAMILY Family,_In_ PUNICAST_IPADDRESS_CHANGE_CALLBACK Callback,_In_ PVOID CallerContext,_In_ BOOLEAN InitialNotification,_Inout_ HANDLE *NotificationHandle)
BOOL None None.ListView_GetNextItemIndex([in] HWND hwnd,[in None None,out] LVITEMINDEX *plvii,LPARAM flags None)
INT None ws2_32.WSALookupServiceBegin(_In_ LPWSAQUERYSET lpqsRestrictions,_In_ DWORD dwControlFlags,_Out_ LPHANDLE lphLookup)
INT None ws2_32.WSALookupServiceBeginW(_In_ LPWSAQUERYSET lpqsRestrictions,_In_ DWORD dwControlFlags,_Out_ LPHANDLE lphLookup)
INT None ws2_32.WSALookupServiceBeginA(_In_ LPWSAQUERYSET lpqsRestrictions,_In_ DWORD dwControlFlags,_Out_ LPHANDLE lphLookup)
BOOL None None.ListView_SetItem(HWND hwnd None,const LPLVITEM pitem)
virtual HRESULT None.CompleteConnect(IPin *pReceivePin None)
HRESULT None None.EnumPins(IEnumPins **ppEnum None)
PCTSTR WSAAPI ws2_32.InetNtop(_In_ INT Family,_In_ PVOID pAddr,_Out_ PTSTR pStringBuf,_In_ size_t StringBufSize)
PCTSTR WSAAPI ws2_32.InetNtopW(_In_ INT Family,_In_ PVOID pAddr,_Out_ PTSTR pStringBuf,_In_ size_t StringBufSize)
PCTSTR WSAAPI ws2_32.InetNtopA or inet_ntop(_In_ INT Family,_In_ PVOID pAddr,_Out_ PTSTR pStringBuf,_In_ size_t StringBufSize)
HRESULT None None.put_SourceHeight(long SourceHeight None)
HWND None None.ListView_GetEditControl(HWND hwnd None)
u_long __inline None.ntohll(unsigned __int64 value)
COLOREF None None.TreeView_GetLineColor(HWND hwndTV None)
int WSAAPI ws2_32.WSAProviderConfigChange(_Inout_ LPHANDLE lpNotificationHandle,_In_ LPWSAOVERLAPPED lpOverlapped,_In_ LPWSAOVERLAPPED_COMPLETION_ROUTINE lpCompletionRoutine)
HIMAGELIST None None.TreeView_GetImageList(HWND hwndTV None,INT iImage None)
BOOL None None.TreeView_GetISearchString(HWND hwndTV None,LPTSTR lpsz None)
HRESULT None None.DoSetWindowStyle(long Style None,long WindowLong None)
BOOL None None.TreeView_SetUnicodeFormat(HWND hwnd None,BOOL fUnicode None)
BOOL None None.ListView_SetTileViewInfo(HWND hwnd None,PLVTILEVIEWINFO plvtvinfo None)
virtual HRESULT None.DoRenderSample(IMediaSample *pMediaSample None)
HWND None None.TreeView_SetToolTips(HWND hwndTV None,HWND hwndTooltip None)
HRESULT None None.get_BitRate(long *pBitRate None)
BOOL None None.TreeView_EndEditLabelNow(HWND hwndTV None,BOOL fCancel None)
HRESULT None None.NotifyEvent(long EventCode None,LONG_PTR EventParam1 None,LONG_PTR EventParam2 None)
HRESULT None None.get_MessageDrain(OAHWND *Drain None)
void None None.ListView_GetTileInfo(HWND hwnd None,PLVTILEINFO plvtinfo None)
HRESULT None None.Receive(IMediaSample *pMediaSample None)
BOOL None ws2_32.WSASetEvent(_In_ WSAEVENT hEvent)
INT None mswsock.SetService(_In_ DWORD dwNameSpace,_In_ DWORD dwOperation,_In_ DWORD dwFlags,_In_ LPSERVICE_INFO lpServiceInfo,_In_opt_ LPSERVICE_ASYNC_INFO lpServiceAsyncInfo,_Out_ LPDWORD lpdwStatusFlags)
INT None mswsock.SetServiceW(_In_ DWORD dwNameSpace,_In_ DWORD dwOperation,_In_ DWORD dwFlags,_In_ LPSERVICE_INFO lpServiceInfo,_In_opt_ LPSERVICE_ASYNC_INFO lpServiceAsyncInfo,_Out_ LPDWORD lpdwStatusFlags)
INT None mswsock.SetServiceA(_In_ DWORD dwNameSpace,_In_ DWORD dwOperation,_In_ DWORD dwFlags,_In_ LPSERVICE_INFO lpServiceInfo,_In_opt_ LPSERVICE_ASYNC_INFO lpServiceAsyncInfo,_Out_ LPDWORD lpdwStatusFlags)
RIO_RQ None mswsock.RIOCreateRequestQueue(_In_ SOCKET Socket,_In_ ULONG MaxOutstandingReceive,_In_ ULONG MaxReceiveDataBuffers,_In_ ULONG MaxOutstandingSend,_In_ ULONG MaxSendDataBuffers,_In_ RIO_CQ ReceiveCQ,_In_ RIO_CQ SendCQ,_In_ PVOID SocketContext)
DWORD None None.ListView_SetIconSpacing(HWND hwndLV None,int cx None,int cy None)
int None ws2_32.WSASendDisconnect(_In_ SOCKET s,_In_ LPWSABUF lpOutboundDisconnectData)
int None ws2_32.WSAEnumProtocols(_In_ LPINT lpiProtocols,_Out_ LPWSAPROTOCOL_INFO lpProtocolBuffer,_Inout_ LPDWORD lpdwBufferLength)
int None ws2_32.WSAEnumProtocolsW(_In_ LPINT lpiProtocols,_Out_ LPWSAPROTOCOL_INFO lpProtocolBuffer,_Inout_ LPDWORD lpdwBufferLength)
int None ws2_32.WSAEnumProtocolsA(_In_ LPINT lpiProtocols,_Out_ LPWSAPROTOCOL_INFO lpProtocolBuffer,_Inout_ LPDWORD lpdwBufferLength)
HRESULT None None.GetDRMProperty([in] LPCWSTR pwstrName,[out] WMT_ATTR_DATATYPE *pdwType,[out] BYTE *pValue,[out] WORD *pcbLength)
int None ws2_32.WSADuplicateSocket(_In_ SOCKET s,_In_ DWORD dwProcessId,_Out_ LPWSAPROTOCOL_INFO lpProtocolInfo)
int None ws2_32.WSADuplicateSocketW(_In_ SOCKET s,_In_ DWORD dwProcessId,_Out_ LPWSAPROTOCOL_INFO lpProtocolInfo)
int None ws2_32.WSADuplicateSocketA(_In_ SOCKET s,_In_ DWORD dwProcessId,_Out_ LPWSAPROTOCOL_INFO lpProtocolInfo)
BOOL None ws2_32.WSACloseEvent(_In_ WSAEVENT hEvent)
int WSAAPI ws2_32.WSAPoll(_Inout_ WSAPOLLFD fdarray[],_In_ ULONG nfds,_In_ INT timeout)
int WSAAPI ws2_32.WSANtohl(_In_ SOCKET s,_In_ u_long netlong,_Out_ u_long *lphostlong)
int WSPAPI ws2_32.WSCGetApplicationCategory(_In_ LPCWSTR Path,_In_ DWORD PathLength,_In_ LPCWSTR Extra,_In_ DWORD ExtraLength,_Out_ DWORD *pPermittedLspCategories,_Out_ LPINT lpErrno)
INT None ws2_32.WSALookupServiceNext(_In_ HANDLE hLookup,_In_ DWORD dwControlFlags,_Inout_ LPDWORD lpdwBufferLength,_Out_ LPWSAQUERYSET lpqsResults)
INT None ws2_32.WSALookupServiceNextW(_In_ HANDLE hLookup,_In_ DWORD dwControlFlags,_Inout_ LPDWORD lpdwBufferLength,_Out_ LPWSAQUERYSET lpqsResults)
INT None ws2_32.WSALookupServiceNextA(_In_ HANDLE hLookup,_In_ DWORD dwControlFlags,_Inout_ LPDWORD lpdwBufferLength,_Out_ LPWSAQUERYSET lpqsResults)
int None ws2_32.shutdown(_In_ SOCKET s,_In_ int how)
INT WSPAPI ws2_32.WSAProviderCompleteAsyncCall(HANDLE hAsyncCall None,INT iRetCode None)
virtual HRESULT None.CheckMediaType(const CMediaType *pmt)
BOOL None None.TreeView_Expand(HWND hwndTV None,HTREEITEM hItem None,UINT flag None)
DWORD None iphlpapi.GetNumberOfInterfaces(_Out_ PDWORD pdwNumIf)
HTREEITEM None None.TreeView_GetNextVisible(HWND hwndTV None,HTREEITEM hitem None)
HRESULT None None.get_AutoShow(long *AutoShow None)
u_short WSAAPI ws2_32.ntohs(_In_ u_short netshort)
HTREEITEM None None.TreeView_GetFirstVisible(HWND hwndTV None)
BOOL None None.TreeView_GetItemRect(HWND hwndTV None,HTREEITEM hitem None,LPRECT prc None,BOOL fItemRect None)
HRESULT None None.put_WindowStyleEx([in] long WindowStyleEx)
COLORREF None None.ListView_SetOutlineColor(HWND hwnd None,COLORREF color None)
HIMAGELIST None None.TreeView_CreateDragImage(HWND hwndTV None,HTREEITEM hitem None)
virtual HRESULT None.CheckSourceRect(RECT *pSourceRect None)
BOOL None ws2_32.WSAResetEvent(_In_ WSAEVENT hEvent)
virtual HRESULT None.SetTargetRect(RECT *pTargetRect None)
virtual HRESULT None.ShouldDrawSampleNow(IMediaSample *pMediaSample None,REFERENCE_TIME *pStartTime None,REFERENCE_TIME *pEndTime None)
BOOL None None.TreeView_EnsureVisible(HWND hwndTV None,HTREEITEM hitem None)
virtual None None.Render(IMediaSample *pMediaSample None)
virtual INT_PTR None.OnReceiveMessage(HWND hwnd None,UINT uMsg None,WPARAM wParam None,LPARAM lParam None)
HRESULT None None.FindPin(LPCWSTR Id None,IPin **ppPin None)
DWORD None None.TreeView_GetExtendedStyle(HWND hwnd None)
int None None.WSPCloseSocket(_In_ SOCKET s,_Out_ LPINT lpErrno)
HRESULT None None.SetActualDataLength(long lLen None)
HWND None None.TreeView_GetEditControl(HWND hwndTV None)
HRESULT None None.SetProperties(DWORD cbProperties None,const BYTE *pbProperties)
BOOL PASCAL None.TransmitPackets(SOCKET hSocket None,LPTRANSMIT_PACKETS_ELEMENT lpPacketArray None,DWORD nElementCount None,DWORD nSendSize None,LPOVERLAPPED lpOverlapped None,DWORD dwFlags None)
DWORD None iphlpapi.CreateProxyArpEntry(_In_ DWORD dwAddress,_In_ DWORD dwMask,_In_ DWORD dwIfIndex)
SOCKET None None.WPUModifyIFSHandle(_In_ DWORD dwCatalogEntryId,_In_ SOCKET ProposedHandle,_Out_ LPINT lpErrno)
COLORREF None None.TreeView_SetLineColor(HWND hwndTV None,COLORREF clrLine None)
HRESULT None None.put_Caption(BSTR strCaption None)
virtual HRESULT None.GetSampleTimes(IMediaSample *pMediaSample None,REFERENCE_TIME *pStartTime None,REFERENCE_TIME *pEndTime None)
int WSAAPI fwpuclnt.WSARevertImpersonation(void None None)
BOOL None None.TreeView_SortChildren(HWND hwndTV None,HTREEITEM hitem None,BOOL fRecurse None)
DWORD None iphlpapi.GetUdpStatisticsEx2(_Out_ PMIB_UDPSTATS2 Statistics,_In_ ULONG Family)
BOOL None mswsock.RIOSendEx(_In_ RIO_RQ SocketQueue,_In_ PRIO_BUF pData,_In_ ULONG DataBufferCount,_In_ PRIO_BUF pLocalAddress,_In_ PRIO_BUF pRemoteAddress,_In_ PRIO_BUF pControlContext,_In_ PRIO_BUF pFlags,_In_ DWORD Flags,_In_ PVOID RequestContext)
INT None ws2_32.WSAInstallServiceClass(_In_ LPWSASERVICECLASSINFO lpServiceClassInfo)
INT None ws2_32.WSAInstallServiceClassW(_In_ LPWSASERVICECLASSINFO lpServiceClassInfo)
INT None ws2_32.WSAInstallServiceClassA(_In_ LPWSASERVICECLASSINFO lpServiceClassInfo)
INT None ws2_32.WSALookupServiceEnd(_In_ HANDLE hLookup)
ULONG None mswsock.RIODequeueCompletion(_In_ RIO_CQ CQ,_Out_ PRIORESULT Array,_In_ ULONG ArraySize)
HTREEITEM None None.TreeView_GetPrevSibling(HWND hwndTV None,HTREEITEM hitem None)
DWORD None iphlpapi.FlushIpNetTable(_In_ DWORD dwIfIndex)
int None ws2_32.ioctlsocket(_In_ SOCKET s,_In_ long cmd,_Inout_ u_long *argp)
NETIO_STATUS WINAPI iphlpapi.ConvertLengthToIpv4Mask(_In_ ULONG MaskLength,_Out_ PULONG Mask)
int WSAAPI None.WSANSPIoctl(_In_ HANDLE hLookup,_In_ DWORD dwControlCode,_In_ LPVOID lpvInBuffer,_Inout_ DWORD cbInBuffer,_Out_ LPVOID lpvOutBuffer,_In_ DWORD cbOutBuffer,_Out_ LPDWORD lpcbBytesReturned,_In_ LPWSACOMPLETION lpCompletion)
NETIOAPI_API None iphlpapi.NotifyStableUnicastIpAddressTable(_In_ ADDRESS_FAMILY Family,_Inout_ PMIB_UNICASTIPADDRESS_TABLE *Table,_In_ PSTABLE_UNICAST_IPADDRESS_TABLE_CALLBACK CallerCallback,_In_ PVOID CallerContext,_Inout_ HANDLE *NotificationHandle)
void None None.ListView_SetHoverTime(HWND hwndLV None,DWORD dwHoverTime None)
virtual HRESULT None.GetMediaPositionInterface(REFIID riid None,void **ppv None)
NETIOAPI_API None iphlpapi.GetIpNetTable2(_In_ ADDRESS_FAMILY Family,_Out_ PMIB_IPNET_TABLE2 *Table)
INT None mswsock.EnumProtocols(_In_opt_ LPINT lpiProtocols,_Out_ LPVOID lpProtocolBuffer,_Inout_ LPDWORD lpdwBufferLength)
INT None mswsock.EnumProtocolsW(_In_opt_ LPINT lpiProtocols,_Out_ LPVOID lpProtocolBuffer,_Inout_ LPDWORD lpdwBufferLength)
INT None mswsock.EnumProtocolsA(_In_opt_ LPINT lpiProtocols,_Out_ LPVOID lpProtocolBuffer,_Inout_ LPDWORD lpdwBufferLength)
virtual BOOL None.ScheduleSample(IMediaSample *pMediaSample None)
BOOL None None.ListView_GetOrigin(HWND hwnd None,LPPOINT lpptOrg None)
NETIOAPI_API None iphlpapi.GetIpPathEntry(_Inout_ PMIB_IPPATH_ROW Row)
int None None.ListView_GetInsertMarkRect(HWND hwnd None,LPRECT prc None)
LONG NTAPI ntdll.RtlIpv4StringToAddress(_In_ PCTSTR S,_In_ BOOLEAN Strict,_Out_ LPCTSTR *Terminator,_Out_ IN_ADDR *Addr)
LONG NTAPI ntdll.RtlIpv4StringToAddressW(_In_ PCTSTR S,_In_ BOOLEAN Strict,_Out_ LPCTSTR *Terminator,_Out_ IN_ADDR *Addr)
LONG NTAPI ntdll.RtlIpv4StringToAddressA(_In_ PCTSTR S,_In_ BOOLEAN Strict,_Out_ LPCTSTR *Terminator,_Out_ IN_ADDR *Addr)
INT WSAAPI ws2_32.WSAStringToAddress(_In_ LPTSTR AddressString,_In_ INT AddressFamily,_In_opt_ LPWSAPROTOCOL_INFO lpProtocolInfo,_Out_ LPSOCKADDR lpAddress,_Inout_ LPINT lpAddressLength)
INT WSAAPI ws2_32.WSAStringToAddressW(_In_ LPTSTR AddressString,_In_ INT AddressFamily,_In_opt_ LPWSAPROTOCOL_INFO lpProtocolInfo,_Out_ LPSOCKADDR lpAddress,_Inout_ LPINT lpAddressLength)
INT WSAAPI ws2_32.WSAStringToAddressA(_In_ LPTSTR AddressString,_In_ INT AddressFamily,_In_opt_ LPWSAPROTOCOL_INFO lpProtocolInfo,_Out_ LPSOCKADDR lpAddress,_Inout_ LPINT lpAddressLength)
BOOL None None.ListView_HasGroup(HWND hwnd None,int dwGroupId None)
virtual HRESULT None.NewSegment(REFERENCE_TIME tStart None,REFERENCE_TIME tStop None,double dRate None)
HRESULT None None.put_FullScreenMode(long FullScreenMode None)
int None ws2_32.recv(_In_ SOCKET s,_Out_ char *buf,_In_ int len,_In_ int flags)
int None None.WSARecvMsg(_In_ SOCKET s,_Inout_ LPWSAMSG lpMsg,_Out_ LPDWORD lpdwNumberOfBytesRecvd,_In_ LPWSAOVERLAPPED lpOverlapped,_In_ LPWSAOVERLAPPED_COMPLETION_ROUTINE lpCompletionRoutine)
HRESULT None None.DoSetWindowStyle(long Style None,long WindowLong None)
BOOL None None.TreeView_GetItemPartRect(HWND hwnd None,HTREEITEM hitem None,RECT *prc None,TVITEMPART *partid None)
LRESULT None None.TreeView_SetAutoScrollInfo(HWND hwnd None,UINT uPixPerSec None,UINT uUpdateTime None)
NETIOAPI_API None iphlpapi.GetIpNetEntry2(_Inout_ PMIB_IPNET_ROW2 Row)
HRESULT None None.GetMinIdealImageSize(long *pWidth None,long *pHeight None)
COLORREF None None.TreeView_GetBkColor(HWND hwndTV None)
int None ws2_32.WSACleanup(void None None)
BOOL None comctl32.MakeDragList(HWND hLB None)
ULONG WINAPI iphlpapi.DeletePersistentUdpPortReservation(_In_ USHORT StartPort,_In_ USHORT NumberOfPorts)
DWORD WINAPI iphlpapi.NotifySecurityHealthChange(PHANDLE pHandle None,LPOVERLAPPED pOverLapped None,PULONG SecurityHealthFlags None)
HRESULT None None.put_Height(long Height None)
UINT None None.ListView_GetGroupState([in] HWND hwnd,[in] UINT dwGroupId,[in] UINT dwMask)
BOOL None mswsock.RIOResizeCompletionQueue(_In_ RIO_CQ CQ,_In_ DWORD QueueSize)
HLOCAL WINAPI kernel32.LocalHandle(_In_ LPCVOID pMem)
NETIOAPI_API WINAPI iphlpapi.GetIpNetworkConnectionBandwidthEstimates(_In_ NET_IFINDEX InterfaceIndex,_In_ ADDRESS_FAMILY AddressFamily,_Out_ PMIB_IP_NETWORK_CONNECTION_BANDWIDTH_ESTIMATES BandwidthEstimates)
HRESULT None None.get_DestinationTop(long *pDestinationTop None)
NETIOAPI_API None iphlpapi.GetMulticastIpAddressTable(_In_ ADDRESS_FAMILY Family,_Out_ PMIB_MULTICASTIPADDRESS_TABLE *Table)
UINT None None.ListView_MapIDToIndex(HWND hwnd None,UINT id None)
int None ws2_32.WSACancelAsyncRequest(_In_ HANDLE hAsyncTaskHandle)
int None None.WSPStringToAddress(_In_ LPWSTR AddressString,_In_ INT AddressFamily,_In_ LPWSAPROTOCOL_INFO lpProtocolInfo,_Out_ LPSOCKADDR lpAddress,_Inout_ LPINT lpAddressLength,_Out_ LPINT lpErrno)
BOOL None ws2_32.WSAGetQOSByName(_In_ SOCKET s,_Inout_ LPWSABUF lpQOSName,_Out_ LPQOS lpQOS)
int None ws2_32.WSARecv(_In_ SOCKET s,_Inout_ LPWSABUF lpBuffers,_In_ DWORD dwBufferCount,_Out_ LPDWORD lpNumberOfBytesRecvd,_Inout_ LPDWORD lpFlags,_In_ LPWSAOVERLAPPED lpOverlapped,_In_ LPWSAOVERLAPPED_COMPLETION_ROUTINE lpCompletionRoutine)
BOOL None None.TreeView_SelectItem(HWND hwndTV None,HTREEITEM hitem None)
u_short WSAAPI ws2_32.htons(_In_ u_short hostshort)
HRESULT None None.GetRestorePosition(long *pLeft None,long *pTop None,long *pWidth None,long *pHeight None)
int None ws2_32.WSAGetLastError(void None None)
HRESULT None None.SetDestinationPosition(long Left None,long Top None,long Width None,long Height None)
INT None None.WPUOpenCurrentThread(_Out_ LPWSATHREADID lpThreadId,_Out_ LPINT lpErrno)
int None ws2_32.WSASend(_In_ SOCKET s,_In_ LPWSABUF lpBuffers,_In_ DWORD dwBufferCount,_Out_ LPDWORD lpNumberOfBytesSent,_In_ DWORD dwFlags,_In_ LPWSAOVERLAPPED lpOverlapped,_In_ LPWSAOVERLAPPED_COMPLETION_ROUTINE lpCompletionRoutine)
DWORD None iphlpapi.GetTcpStatisticsEx(_Out_ PMIB_TCPSTATS pStats,_In_ DWORD dwFamily)
BOOL None None.TreeView_SortChildren(HWND hwndTV None,HTREEITEM hitem None,BOOL fRecurse None)
void WSAAPI ws2_32.FreeAddrInfoW(_In_ PADDRINFOW pAddrInfo)
DWORD None iphlpapi.GetIpStatistics(_Out_ PMIB_IPSTATS pStats)
INT None mswsock.GetTypeByName(_In_ LPTSTR lpServiceName,_Inout_ PGUID lpServiceType)
INT None mswsock.GetTypeByNameW(_In_ LPTSTR lpServiceName,_Inout_ PGUID lpServiceType)
INT None mswsock.GetTypeByNameA(_In_ LPTSTR lpServiceName,_Inout_ PGUID lpServiceType)
INT None ws2_32.WSAGetServiceClassNameByClassId(_In_ LPGUID lpServiceClassId,_Out_ LPTSTR lpszServiceClassName,_Inout_ LPDWORD lpdwBufferLength)
INT None ws2_32.WSAGetServiceClassNameByClassIdW(_In_ LPGUID lpServiceClassId,_Out_ LPTSTR lpszServiceClassName,_Inout_ LPDWORD lpdwBufferLength)
INT None ws2_32.WSAGetServiceClassNameByClassIdA(_In_ LPGUID lpServiceClassId,_Out_ LPTSTR lpszServiceClassName,_Inout_ LPDWORD lpdwBufferLength)
HRESULT None None.SetMediaTime(LONGLONG *pStart None,LONGLONG *pEnd None)
u_long WSAAPI ws2_32.htonl(_In_ u_long hostlong)
HRESULT None None.get_MessageDrain(OAHWND *Drain None)
int None None.WPUGetProviderPath(_In_ LPGUID lpProviderId,_Out_ LPWSTR lpszProviderDllPath,_Inout_ LPINT lpProviderDllPathLen,_Out_ LPINT lpErrno)
INT None ws2_32.WSASetService(_In_ LPWSAQUERYSET lpqsRegInfo,_In_ WSAESETSERVICEOP essOperation,_In_ DWORD dwControlFlags)
INT None ws2_32.WSASetServiceW(_In_ LPWSAQUERYSET lpqsRegInfo,_In_ WSAESETSERVICEOP essOperation,_In_ DWORD dwControlFlags)
INT None ws2_32.WSASetServiceA(_In_ LPWSAQUERYSET lpqsRegInfo,_In_ WSAESETSERVICEOP essOperation,_In_ DWORD dwControlFlags)
INT None ws2_32.WSARemoveServiceClass(_In_ LPGUID lpServiceClassId)
HRESULT None None.GetState(DWORD dwMilliSecsTimeout None,FILTER_STATE *State None)
DWORD WINAPI iphlpapi.UnenableRouter(OVERLAPPED *pOverlapped None,_Out_opt_ LPDWORD lpdwEnableCount)
int None None.AecDecodeVAD(short *pOutput None)
COLORREF None None.TreeView_SetInsertMarkColor(HWND hwndTV None,COLORREF clrInsertMark None)
virtual None None.Receive(IMediaSample *pMediaSample None)
DWORD None iphlpapi.GetIpAddrTable(_Out_ PMIB_IPADDRTABLE pIpAddrTable,_Inout_ PULONG pdwSize,_In_ BOOL bOrder)
HRESULT None None.put_FullScreenMode(long FullScreenMode None)
int WSPAPI ws2_32.WSCEnumProtocols(_In_ LPINT lpiProtocols,_Out_ LPWSAPROTOCOL_INFOW lpProtocolBuffer,_Inout_ LPDWORD lpdwBufferLength,_Out_ LPINT lpErrno)
int WSAAPI None.NSPv2LookupServiceBegin(_In_ LPGUID lpProviderId,_In_ LPWSAQUERYSET2W lpqsRestrictions,_In_ DWORD dwControlFlags,_Out_ LPVOID lpvClientSessionArg,_Out_ LPHANDLE lphLookup)
VOID None iphlpapi.InitializeIpInterfaceEntry(_Inout_ PMIB_IPINTERFACE_ROW Row)
NETIOAPI_API None iphlpapi.CancelMibChangeNotify2(_In_ HANDLE NotificationHandle)
INT None ws2_32.WSAGetServiceClassInfo(_In_ LPGUID lpProviderId,_In_ LPGUID lpServiceClassId,_Inout_ LPDWORD lpdwBufferLength,_Out_ LPWSASERVICECLASSINFO lpServiceClassInfo)
INT None ws2_32.WSAGetServiceClassInfoW(_In_ LPGUID lpProviderId,_In_ LPGUID lpServiceClassId,_Inout_ LPDWORD lpdwBufferLength,_Out_ LPWSASERVICECLASSINFO lpServiceClassInfo)
INT None ws2_32.WSAGetServiceClassInfoA(_In_ LPGUID lpProviderId,_In_ LPGUID lpServiceClassId,_Inout_ LPDWORD lpdwBufferLength,_Out_ LPWSASERVICECLASSINFO lpServiceClassInfo)
HRESULT None None.get_Height(long *pHeight None)
DWORD None iphlpapi.GetExtendedTcpTable(_Out_ PVOID pTcpTable,_Inout_ PDWORD pdwSize,_In_ BOOL bOrder,_In_ ULONG ulAf,_In_ TCP_TABLE_CLASS TableClass,_In_ ULONG Reserved)
INT None mswsock.GetService(_In_ DWORD dwNameSpace,_In_ PGUID lpGuid,_In_ LPTSTR lpServiceName,_In_ DWORD dwProperties,_Out_ LPVOID lpBuffer,_Inout_ LPDWORD lpdwBufferSize,_In_opt_ LPSERVICE_ASYNC_INFO lpServiceAsyncInfo)
INT None mswsock.GetServiceW(_In_ DWORD dwNameSpace,_In_ PGUID lpGuid,_In_ LPTSTR lpServiceName,_In_ DWORD dwProperties,_Out_ LPVOID lpBuffer,_Inout_ LPDWORD lpdwBufferSize,_In_opt_ LPSERVICE_ASYNC_INFO lpServiceAsyncInfo)
INT None mswsock.GetServiceA(_In_ DWORD dwNameSpace,_In_ PGUID lpGuid,_In_ LPTSTR lpServiceName,_In_ DWORD dwProperties,_Out_ LPVOID lpBuffer,_Inout_ LPDWORD lpdwBufferSize,_In_opt_ LPSERVICE_ASYNC_INFO lpServiceAsyncInfo)
HRESULT None None.GetMinIdealImageSize(long *pWidth None,long *pHeight None)
RIO_BUFFERID None mswsock.RIORegisterBuffer(_In_ PCHAR DataBuffer,_In_ DWORD DataLength)
HRESULT None None.put_WindowStyle(long WindowStyle None)
BOOL None None.TransformCopiesSampleAttributes(IMFTransform *pMFT None)
NETIOAPI_API None iphlpapi.GetIfEntry2Ex(_In_ MIB_IF_ENTRY_LEVEL Level,_Inout_ PMIB_IF_ROW2 Row)
DWORD None iphlpapi.NotifyRouteChange(_Out_ PHANDLE Handle,_In_ LPOVERLAPPED overlapped)
void None None.QueueSample(IMediaSample *pSample None)
COLORREF None None.TreeView_GetBkColor(HWND hwndTV None)
HRESULT None None.Receive(IMediaSample *pSample None)
void None None.SetRepaintStatus(BOOL bRepaint None)
VOID None mswsock.RIODeregisterBuffer(_In_ RIO_BUFFERID BufferId)
HRESULT None None.Run(REFERENCE_TIME tStart None)
DWORD WINAPI iphlpapi.SetIpStatistics(_In_ PMIB_IPSTATS pIpStats)
HTREEITEM None None.TreeView_GetPrevVisible(HWND hwndTV None,HTREEITEM hitem None)
void None ws2_32.WSASetLastError(_In_ int iError)
HWND None None.TreeView_EditLabel(HWND hwndTV None,HTREEITEM hitem None)
INT_PTR CALLBACK None.DlgProc(HWND hDlg None,UINT message None,WPARAM wParam None,LPARAM lParam None)
BOOL None None.Animate_OpenEx(HWND hwndAnim None,HINSTANCE hinst None,LPTSTR lpszName None)
int None None.WPUQuerySocketHandleContext(_In_ SOCKET s,_Out_ PDWORD_PTR lpContext,_Out_ LPINT lpErrno)
DWORD None iphlpapi.GetIpErrorString(_In_ IP_STATUS ErrorCode,_Out_ PWCHAR Buffer,_Inout_ PDWORD Size)
NETIOAPI_API None iphlpapi.GetIfTable2(_Out_ PMIB_IF_TABLE2 *Table)
HRESULT None None.put_AutoShow(long AutoShow None)
HRESULT None None.ReconnectPin(IPin *pPin None,AM_MEDIA_TYPE const *pmt)
ULONG WINAPI iphlpapi.LookupPersistentTcpPortReservation(_In_ USHORT StartPort,_In_ USHORT NumberOfPorts,_Out_ PULONG64 Token)
int WSPAPI ws2_32.WSCWriteNameSpaceOrder32(_In_ LPGUID lpProviderId,_In_ DWORD dwNumberOfEntries)
HRESULT None None.IsCursorHidden(long *CursorHidden None)
DWORD None iphlpapi.GetFriendlyIfIndex(_In_ DWORD IfIndex)
ULONG WINAPI iphlpapi.GetTcp6Table2(_Out_ PMIB_TCP6TABLE2 TcpTable,_Inout_ PULONG SizePointer,_In_ BOOL Order)
ULONG WINAPI iphlpapi.CreatePersistentTcpPortReservation(_In_ USHORT StartPort,_In_ USHORT NumberOfPorts,_Out_ PULONG64 Token)
BOOL None iphlpapi.GetRTTAndHopCount(_In_ IPAddr DestIpAddress,_Out_ PULONG HopCount,_In_ ULONG MaxHops,_Out_ PULONG RTT)
NETIOAPI_API None iphlpapi.GetAnycastIpAddressTable(_In_ ADDRESS_FAMILY Family,_Out_ PMIB_ANYCASTIPADDRESS_TABLE *Table)
int None ws2_32.getsockopt(_In_ SOCKET s,_In_ int level,_In_ int optname,_Out_ char *optval,_Inout_ int *optlen)
ULONG WINAPI iphlpapi.ResolveNeighbor(_In_ SOCKADDR *NetworkAddress,_Out_ PVOID PhysicalAddress,_Inout_ PULONG PhysicalAddressLength)
int None user32.DlgDirList(_In_ HWND hDlg,_Inout_ LPTSTR lpPathSpec,_In_ int nIDListBox,_In_ int nIDStaticPath,_In_ UINT uFileType)
int None user32.DlgDirListW(_In_ HWND hDlg,_Inout_ LPTSTR lpPathSpec,_In_ int nIDListBox,_In_ int nIDStaticPath,_In_ UINT uFileType)
int None user32.DlgDirListA(_In_ HWND hDlg,_Inout_ LPTSTR lpPathSpec,_In_ int nIDListBox,_In_ int nIDStaticPath,_In_ UINT uFileType)
HRESULT None None.get_BorderColor(long *Color None)
int None None.WSPEventSelect(_In_ SOCKET s,_In_ WSAEVENT hEventObject,_In_ long lNetworkEvents,_Out_ LPINT lpErrno)
HANDLE None iphlpapi.Icmp6CreateFile(void None None)
int None ws2_32.WSARecvDisconnect(_In_ SOCKET s,_Out_ LPWSABUF lpInboundDisconnectData)
int WSPAPI ws2_32.WSCSetProviderInfo(_In_ LPGUID lpProviderId,_In_ WSC_PROVIDER_INFO_TYPE InfoType,_In_ PBYTE Info,_In_ size_t InfoSize,_In_ DWORD Flags,_Out_ LPINT lpErrno)
LRESULT None None.DateTime_GetDateTimePickerInfo([in] HWND hdp,[in None None,out] DATETIMEPICKERINFO *pdtpi)
DWORD None iphlpapi.GetIfTable(_Out_ PMIB_IFTABLE pIfTable,_Inout_ PULONG pdwSize,_In_ BOOL bOrder)
BOOL None iphlpapi.IcmpCloseHandle(_In_ HANDLE IcmpHandle)
HRESULT None None.get_SourceLeft(long *pSourceLeft None)
DWORD None iphlpapi.GetAdapterIndex(_In_ LPWSTR AdapterName,_Inout_ PULONG IfIndex)
u_long WSAAPI ws2_32.ntohl(_In_ u_long netlong)
ULONG WINAPI iphlpapi.GetAdaptersAddresses(_In_ ULONG Family,_In_ ULONG Flags,_In_ PVOID Reserved,_Inout_ PIP_ADAPTER_ADDRESSES AdapterAddresses,_Inout_ PULONG SizePointer)
ULONG WINAPI iphlpapi.SetPerTcp6ConnectionEStats(PMIB_TCP6ROW Row None,TCP_ESTATS_TYPE EstatsType None,PUCHAR Rw None,ULONG RwVersion None,ULONG RwSize None,ULONG Offset None)
DWORD None iphlpapi.GetNetworkParams(_Out_ PFIXED_INFO pFixedInfo,_In_ PULONG pOutBufLen)
HRESULT None None.QueryId([out] LPWSTR *Id)
int WSAAPI None.NSPLookupServiceNext(_In_ HANDLE hLookup,_In_ DWORD dwControlFlags,_Inout_ LPDWORD lpdwBufferLength,_Out_ LPWSAQUERYSET lpqsResults)
ULONG WINAPI iphlpapi.SetPerTcpConnectionEStats(PMIB_TCPROW Row None,TCP_ESTATS_TYPE EstatsType None,PUCHAR Rw None,ULONG RwVersion None,ULONG RwSize None,ULONG Offset None)
int WSAAPI None.NSPGetServiceClassInfo(_In_ LPGUID lpProviderId,_Inout_ LPDWORD lpdwBufSize,_Inout_ LPWSASERVICECLASSINFOW lpServiceClassInfo)
DWORD None None.Edit_NoSetFocus(HWND hwndEdit None)
int None None.Edit_GetFirstVisibleLine(HWND hwndCtl None)
void None None.ListView_InsertGroupSorted(HWND hwnd None,PLVINSERTGROUPSORTED structInsert None)
int None ws2_32.gethostname(_Out_ char *name,_In_ int namelen)
virtual HRESULT None.Transform(IMediaSample *pIn None,IMediaSample *pOut None)
DWORD None iphlpapi.CreateIpNetEntry(_In_ PMIB_IPNETROW pArpEntry)
LONG NTAPI ntdll.RtlIpv4StringToAddressEx(_In_ PCTSTR AddressString,_In_ BOOLEAN Strict,_Out_ IN_ADDR *Address,_Out_ PUSHORT Port)
LONG NTAPI ntdll.RtlIpv4StringToAddressExW(_In_ PCTSTR AddressString,_In_ BOOLEAN Strict,_Out_ IN_ADDR *Address,_Out_ PUSHORT Port)
LONG NTAPI ntdll.RtlIpv4StringToAddressEx(_In_ PCTSTR AddressString,_In_ BOOLEAN Strict,_Out_ IN_ADDR *Address,_Out_ PUSHORT Port)
double __inline None.ntohd(unsigned __int64 value)
int WSPAPI ws2_32.WSCGetProviderPath(_In_ LPGUID lpProviderId,_Out_ LPWSTR lpszProviderDllPath,_Inout_ LPINT lpProviderDllPathLen,_Out_ LPINT lpErrno)
ULONG WINAPI iphlpapi.GetTcpTable2(_Out_ PMIB_TCPTABLE2 TcpTable,_Inout_ PULONG SizePointer,_In_ BOOL Order)
VOID NETIOAPI iphlpapi.InitializeUnicastIpAddressEntry(_Out_ PMIB_UNICASTIPADDRESS_ROW Row)
NETIOAPI_API None iphlpapi.NotifyTeredoPortChange(_In_ PTEREDO_PORT_CHANGE_CALLBACK Callback,_In_ PVOID CallerContext,_In_ BOOLEAN InitialNotification,_Inout_ HANDLE *NotificationHandle)
HRESULT None None.get_BackgroundPalette(long *pBackgroundPalette None)
DWORD None iphlpapi.DeleteIPAddress(_In_ ULONG NTEContext)
int None None.WSPIoctl(_In_ SOCKET s,_In_ DWORD dwIoControlCode,_In_ LPVOID lpvInBuffer,_In_ DWORD cbInBuffer,_Out_ LPVOID lpvOutBuffer,_In_ DWORD cbOutBuffer,_Out_ LPDWORD lpcbBytesReturned,_In_ LPWSAOVERLAPPED lpOverlapped,_In_ LPWSAOVERLAPPED_COMPLETION_ROUTINE lpCompletionRoutine,_In_ LPWSATHREADID lpThreadId,_Out_ LPINT lpErrno)
NET_IFINDEX WINAPI iphlpapi.if_nametoindex(_In_ PCSTR InterfaceName)
HRESULT None None.QueryId([out] LPWSTR *Id)
DWORD WINAPI iphlpapi.EnableRouter(HANDLE *pHandle None,OVERLAPPED *pOverlapped None)
NETIO_STATUS WINAPI iphlpapi.ConvertIpv4MaskToLength(_In_ ULONG Mask,_Out_ PUINT8 MaskLength)
NETIOAPI_API None iphlpapi.GetIfEntry2Ex(_In_ MIB_IF_ENTRY_LEVEL Level,_Inout_ PMIB_IF_ROW2 Row)
NETIOAPI_API None iphlpapi.GetIpPathEntry(_Inout_ PMIB_IPPATH_ROW Row)
HRESULT None None.get_WindowStyleEx(long *pWindowStyleEx None)
DWORD None iphlpapi.GetTcpStatistics(_Out_ PMIB_TCPSTATS pStats)
void None None.Edit_SetRectNoPaint(HWND hwndCtl None,RECT *lprc None)
BOOL None None.Edit_SetCueBannerTextFocused(HWND hwnd None,LPCWSTR lpcwText None,BOOL fDrawFocused None)
DWORD None iphlpapi.GetIpStatisticsEx(_Out_ PMIB_IPSTATS pStats,_In_ DWORD dwFamily)
HFONT None None.DateTime_GetMonthCalFont(HWND hwndDP None)
HWND None None.DateTime_GetMonthCal(HWND hwndDP None)
virtual void None.OnRenderEnd(IMediaSample *pMediaSample None)
DWORD None iphlpapi.DeleteIpForwardEntry(_In_ PMIB_IPFORWARDROW pRoute)
BOOL None None.WSPGetQOSByName(_In_ SOCKET s,_Inout_ LPWSABUF lpQOSName,_Out_ LPQOS lpQOS,_Out_ LPINT lpErrno)
BOOL None None.Animate_Close(HWND hwnd None)
BOOL None None.TreeView_EnsureVisible(HWND hwndTV None,HTREEITEM hitem None)
ULONG WINAPI iphlpapi.GetTcp6Table(_Out_ PMIB_TCP6TABLE TcpTable,_Inout_ PULONG SizePointer,_In_ BOOL Order)
int None ws2_32.WSASendMsg(_In_ SOCKET s,_In_ LPWSAMSG lpMsg,_In_ DWORD dwFlags,_Out_ LPDWORD lpNumberOfBytesSent,_In_ LPWSAOVERLAPPED lpOverlapped,_In_ LPWSAOVERLAPPED_COMPLETION_ROUTINE lpCompletionRoutine)
void None None.Edit_SetTabStops(HWND hwndCtl None,int cTabs None,int *lpTabs None)
int WSAAPI ws2_32.WSCInstallNameSpaceEx(_In_ LPWSTR lpszIdentifier,_In_ LPWSTR lpszPathName,_In_ DWORD dwNameSpace,_In_ DWORD dwVersion,_In_ LPGUID lpProviderId,_In_ LPBLOB lpProviderInfo)
int WSAAPI None.NSPRemoveServiceClass(_In_ LPGUID lpProviderId,_In_ LPGUID lpServiceClassId)
BOOL None mswsock.RIOResizeRequestQueue(_In_ RIO_RQ RQ,_In_ DWORD MaxOutstandingReceive,_In_ DWORD MaxOutstandingSend)
SOCKET None None.WPUCreateSocketHandle(_In_ DWORD dwCatalogEntryId,_In_ DWORD_PTR dwContext,_Out_ LPINT lpErrno)
VOID None mswsock.RIOCloseCompletionQueue(_In_ RIO_CQ CQ)
DWORD WINAPI iphlpapi.AllocateAndGetTcpExTableFromStack(_Out_ PVOID *ppTcpTable,_In_ BOOL bOrder,_In_ HANDLE hHeap,_In_ DWORD dwFlags,_In_ DWORD dwFamily)
HRESULT None None.put_Owner(OAHWND Owner None)
DWORD None iphlpapi.RestoreMediaSense(OVERLAPPED *pOverlapped None,LPDWORD lpdwEnableCount None)
HRESULT None None.GetTime(REFERENCE_TIME *pTimeStart None,REFERENCE_TIME *pTimeEnd None)
HWND None None.Animate_Create(HWND hwndP None,UINT id None,DWORD dwStyle None,HINSTANCE hInstance None)
HRESULT None None.get_Caption(BSTR *pstrCaption None)
BOOL None None.TreeView_SetIndent(HWND hwndTV None,INT indent None)
DWORD None iphlpapi.IpRenewAddress(_In_ PIP_ADAPTER_INDEX_MAP AdapterInfo)
NETIOAPI_API None iphlpapi.NotifyRouteChange2(_In_ ADDRESS_FAMILY Family,_In_ PIPFORWARD_CHANGE_CALLBACK Callback,_In_ PVOID CallerContext,_In_ BOOLEAN InitialNotification,_Inout_ HANDLE *NotificationHandle)
DWORD None iphlpapi.GetUdpStatisticsEx(_Out_ PMIB_UDPSTATS pStats,_In_ DWORD dwFamily)
NETIOAPI_API None iphlpapi.GetUnicastIpAddressTable(_In_ ADDRESS_FAMILY Family,_Out_ PMIB_UNICASTIPADDRESS_TABLE *Table)
DWORD None iphlpapi.IpReleaseAddress(_In_ PIP_ADAPTER_INDEX_MAP AdapterInfo)
NETIOAPI_API None iphlpapi.SetIpNetEntry2(_Inout_ PMIB_IPNET_ROW2 Row)
NETIOAPI_API None iphlpapi.NotifyIpInterfaceChange(_In_ ADDRESS_FAMILY Family,_In_ PIPINTERFACE_CHANGE_CALLBACK Callback,_In_ PVOID CallerContext,_In_ BOOLEAN InitialNotification,_Inout_ HANDLE *NotificationHandle)
int WSPAPI ws2_32.WSCUnInstallNameSpace(_In_ LPGUID lpProviderId)
HRESULT None None.QueryPinInfo([out] PIN_INFO *pInfo)
LONG NTAPI ntdll.RtlIpv6StringToAddress(_In_ PCTSTR S,_Out_ PCTSTR *Terminator,_Out_ IN6_ADDR *Addr)
LONG NTAPI ntdll.RtlIpv6StringToAddressW(_In_ PCTSTR S,_Out_ PCTSTR *Terminator,_Out_ IN6_ADDR *Addr)
LONG NTAPI ntdll.RtlIpv6StringToAddressA(_In_ PCTSTR S,_Out_ PCTSTR *Terminator,_Out_ IN6_ADDR *Addr)
BOOL WINAPI iphlpapi.CancelIPChangeNotify(_In_ LPOVERLAPPED notifyOverlapped)
DWORD WINAPI iphlpapi.GetTcpTable(_Out_ PMIB_TCPTABLE pTcpTable,_Inout_ PDWORD pdwSize,_In_ BOOL bOrder)
DWORD None iphlpapi.GetUdpStatistics(_Out_ PMIB_UDPSTATS pStats)
int None None.WPUFDIsSet(_In_ SOCKET s,_In_ FD_SET *set)
HRESULT None None.get_WindowState(long *pWindowState None)
int None None.WSPRecvDisconnect(_In_ SOCKET s,_Out_ LPWSABUF lpInboundDisconnectData,_Out_ LPINT lpErrno)
HRESULT None None.put_WindowState(long WindowState None)
int WSAAPI None.NSPInstallServiceClass(_In_ LPGUID lpProviderId,_In_ LPWSASERVICECLASSINFOW lpServiceClassInfo)
void None None.Edit_SetPasswordChar(HWND hwndCtl None,UINT ch None)
int None None.TreeView_SetBorder(HWND hwndTV None,DWORD dwFlags None,SHORT xBorder None,SHORT yBorder None)
NETIOAPI_API None iphlpapi.GetMulticastIpAddressEntry(_Inout_ PMIB_MULTICASTIPADDRESS_ROW Row)
BOOL None None.Edit_Undo(HWND hwndCtl None)
NETIOAPI_API None iphlpapi.GetIpPathTable(_In_ ADDRESS_FAMILY Family,_Out_ PMIB_IPPATH_TABLE *Table)
NETIOAPI_API None iphlpapi.GetIpInterfaceTable(_In_ ADDRESS_FAMILY Family,_Out_ PMIB_IPINTERFACE_TABLE *Table)
BOOL None None.WPUPostMessage(_In_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
DWORD None iphlpapi.GetIcmpStatistics(_Out_ PMIB_ICMP pStats)
ULONG WINAPI iphlpapi.CreatePersistentUdpPortReservation(_In_ USHORT StartPort,_In_ USHORT NumberOfPorts,_Out_ PULONG64 Token)
void None None.Edit_EmptyUndoBuffer(HWND hwndCtl None)
int None None.WSPSend(_In_ SOCKET s,_In_ LPWSABUF lpBuffers,_In_ DWORD dwBufferCount,_Out_ LPDWORD lpNumberOfBytesSent,_In_ DWORD dwFlags,_In_ LPWSAOVERLAPPED lpOverlapped,_In_ LPWSAOVERLAPPED_COMPLETION_ROUTINE lpCompletionRoutine,_In_ LPWSATHREADID lpThreadId,_Out_ LPINT lpErrno)
HRESULT None None.NewSegment(REFERENCE_TIME tStart None,REFERENCE_TIME tStop None,double dRate None)
int WSAAPI ws2_32.WSAPoll(_Inout_ WSAPOLLFD fdarray[],_In_ ULONG nfds,_In_ INT timeout)
DWORD None iphlpapi.GetIcmpStatisticsEx(_Out_ PMIB_ICMP_EX pStats,_In_ DWORD dwFamily)
HRESULT None None.get_BackgroundPalette(long *pBackgroundPalette None)
DWORD None iphlpapi.GetUdpTable(_Out_ PMIB_UDPTABLE pUdpTable,_Inout_ PDWORD pdwSize,_In_ BOOL bOrder)
DWORD None iphlpapi.GetIcmpStatisticsEx(_Out_ PMIB_ICMP_EX pStats,_In_ DWORD dwFamily)
TCHAR None None.Edit_GetPasswordChar(HWND hwndCtl None)
HRESULT None None.get_Owner(OAHWND *Owner None)
int WSPAPI ws2_32.WSCEnableNSProvider(_In_ LPGUID lpProviderId,_In_ BOOL fEnable)
HRESULT None None.ProcessOutput(DWORD dwFlags None,DWORD cOutputBufferCount None,[in None None,out] DMO_OUTPUT_DATA_BUFFER *pOutputBuffers,[out] DWORD *pdwStatus)
int None ws2_32.WSAEnumNetworkEvents(_In_ SOCKET s,_In_ WSAEVENT hEventObject,_Out_ LPWSANETWORKEVENTS lpNetworkEvents)
int WSPAPI ws2_32.WSCWriteProviderOrder32(_In_ LPDWORD lpwdCatalogEntryId,_In_ DWORD dwNumberOfEntries)
HRESULT None None.get_AvgTimePerFrame(REFTIME *pAvgTimePerFrame None)
ULONG WINAPI iphlpapi.GetUdp6Table(_Out_ PMIB_UDP6TABLE Udp6Table,_Inout_ PULONG SizePointer,_In_ BOOL Order)
int None None.Edit_GetLineCount(HWND hwndCtl None)
DWORD None iphlpapi.GetTcpStatisticsEx2(_Out_ PMIB_TCPSTATS2 pStats,_In_ DWORD dwFamily)
float __inline None.ntohf(unsigned __int32 value)
HRESULT None None.get_Visible(long *pVisible None)
NETIOAPI_API None iphlpapi.GetIpForwardTable2(_In_ ADDRESS_FAMILY Family,_Out_ PMIB_IPFORWARD_TABLE2 *Table)
DWORD None iphlpapi.SendARP(_In_ IPAddr DestIP,_In_ IPAddr SrcIP,_Out_ PULONG pMacAddr,_Inout_ PULONG PhyAddrLen)
HWND None None.PropSheet_GetTabControl(HWND hPropSheetDlg None)
SOCKET None None.WPUModifyIFSHandle(_In_ DWORD dwCatalogEntryId,_In_ SOCKET ProposedHandle,_Out_ LPINT lpErrno)
DWORD None iphlpapi.GetOwnerModuleFromUdpEntry(_In_ PMIB_UDPROW_OWNER_MODULE pUdpEntry,_In_ TCPIP_OWNER_MODULE_INFO_CLASS Class,_Out_ PVOID Buffer,_Inout_ PDWORD pdwSize)
int WSPAPI ws2_32.WSCSetProviderInfo32(_In_ LPGUID lpProviderId,_In_ WSC_PROVIDER_INFO_TYPE InfoType,_In_ PBYTE Info,_In_ size_t InfoSize,_In_ DWORD Flags,_Out_ LPINT lpErrno)
VOID NETIOAPI_API_ iphlpapi.FreeMibTable(_In_ PVOID Memory)
void None None.Edit_SetModify(HWND hwndCtl None,BOOL fModified None)
int WSPAPI ws2_32.WSCEnableNSProvider32(_In_ LPGUID lpProviderId,_In_ BOOL fEnable)
DWORD None iphlpapi.GetIfEntry(_Inout_ PMIB_IFROW pIfRow)
NETIOAPI_API None iphlpapi.GetAnycastIpAddressEntry(_Inout_ PMIB_ANYCASTIPADDRESS_ROW Row)
VOID None None.PropSheet_UnChanged(HWND hPropSheetDlg None,HWND hwndPage None)
int None ws2_32.WSAStartup(_In_ WORD wVersionRequested,_Out_ LPWSADATA lpWSAData)
NETIOAPI_API None iphlpapi.GetIfStackTable(_Out_ PMIB_IFSTACK_TABLE *Table)
BOOL None None.Edit_GetModify(HWND hwndCtl None)
DWORD None iphlpapi.DeleteProxyArpEntry(_In_ DWORD dwAddress,_In_ DWORD dwMask,_In_ DWORD dwIfIndex)
NETIOAPI_API None iphlpapi.GetIpForwardEntry2(_Inout_ PMIB_IPFORWARD_ROW2 Row)
BOOL None None.WPUCloseEvent(_In_ WSAEVENT hEvent,_Out_ LPINT lpErrno)
int WSAAPI None.NSPSetService(_In_ LPGUID lpProviderId,_In_ LPWSASERVICECLASSINFOW lpServiceClassInfo,_In_ LPWSAQUERYSETW lpqsRegInfo,_In_ WSAESETSERVICEOP essOperation,_In_ DWORD dwControlFlags)
BOOL None None.Animate_Seek(HWND hwndAnim None,UINT wFrame None)
BOOL None mswsock.RIOResizeRequestQueue(_In_ RIO_RQ RQ,_In_ DWORD MaxOutstandingReceive,_In_ DWORD MaxOutstandingSend)
UINT None None.TreeView_MapHTREEITEMtoAccID(HWND hwnd None,HTREEITEM htreeitem None)
void None None.Edit_SetRect(HWND hwndCtl None,RECT *lprc None)
INT None mswsock.GetNameByType(_In_ LPGUID lpServiceType,_Out_ LPTSTR lpServiceName,_In_ DWORD dwNameLength)
INT None mswsock.GetNameByTypeW(_In_ LPGUID lpServiceType,_Out_ LPTSTR lpServiceName,_In_ DWORD dwNameLength)
INT None mswsock.GetNameByTypeA(_In_ LPGUID lpServiceType,_Out_ LPTSTR lpServiceName,_In_ DWORD dwNameLength)
INT None None.WPUOpenCurrentThread(_Out_ LPWSATHREADID lpThreadId,_Out_ LPINT lpErrno)
HRESULT None None.SetWindowForeground(long Focus None)
NETIOAPI_API None iphlpapi.GetTeredoPort(_Out_ USHORT *Port)
int None None.WPUCloseSocketHandle(_In_ SOCKET s,_Out_ LPINT lpErrno)
BOOL WINAPI iphlpapi.CancelSecurityHealthChangeNotify(LPOVERLAPPED notifyOverlapped None)
HRESULT None None.SetWindowForeground(long Focus None)
DWORD None iphlpapi.GetOwnerModuleFromTcp6Entry(_In_ PMIB_TCP6ROW_OWNER_MODULE pTcpEntry,_In_ TCPIP_OWNER_MODULE_INFO_CLASS Class,_Out_ PVOID Buffer,_Inout_ PDWORD pdwSize)
int WSPAPI ws2_32.WSCEnumProtocols32(_In_ LPINT lpiProtocols,_Out_ LPWSAPROTOCOL_INFOW lpProtocolBuffer,_Inout_ LPDWORD lpdwBufferLength,_Out_ LPINT lpErrno)
INT WSPAPI None.WPUCloseThread(_In_ LPWSATHREADID lpThreadId,_Out_ LPINT lpErrno)
DWORD None iphlpapi.SetIpTTL(_In_ UINT nTTL)
int WSPAPI ws2_32.WSCUninstallNamespace32(_In_ LPGUID lpProviderId)
ULONG WINAPI iphlpapi.LookupPersistentUdpPortReservation(_In_ USHORT StartPort,_In_ USHORT NumberOfPorts,_Out_ PULONG64 Token)
int None None.WPUQueueApc(_In_ LPWSATHREADID lpThreadId,_In_ LPWSAUSERAPC lpfnUserApc,_In_ DWORD dwContext,_Out_ LPINT lpErrno)
int None None.WSPCleanup(_Out_ LPINT lpErrno)
PCHAR WINAPI iphlpapi.if_indextoname(_In_ NET_IFINDEX InterfaceIndex,_Out_ PCHAR InterfaceName)
WORD None None.PRIMARYLANGID(WORD lgid None)
BOOL None None.Edit_ShowBalloonTip(HWND hwnd None,PEDITBALLOONTIP peditballoontip None)
int WSAAPI None.NSPLookupServiceEnd(_In_ HANDLE hLookup)
int None None.WSPAddressToString(_In_ LPSOCKADDR lpsaAddress,_In_ DWORD dwAddressLength,_In_ LPWSAPROTOCOL_INFO lpProtocolInfo,_Out_ LPWSTR lpszAddressString,_Inout_ LPDWORD lpdwAddressStringLength,_Out_ LPINT lpErrno)
DWORD None iphlpapi.GetBestRoute(_In_ DWORD dwDestAddr,_In_ DWORD dwSourceAddr,_Out_ PMIB_IPFORWARDROW pBestRoute)
HRESULT None None.get_Width(long *pWidth None)
int None None.WSPListen(_In_ SOCKET s,_In_ int backlog,_Out_ LPINT lpErrno)
DWORD None iphlpapi.GetExtendedUdpTable(_Out_ PVOID pUdpTable,_Inout_ PDWORD pdwSize,_In_ BOOL bOrder,_In_ ULONG ulAf,_In_ UDP_TABLE_CLASS TableClass,_In_ ULONG Reserved)
int None None.Edit_GetTextLength(HWND hwndCtl None)
void None None.Edit_SetPasswordChar(HWND hwndCtl None,UINT ch None)
void None None.Edit_Scroll(HWND hwndCtl None,int dv None,int dh None)
DWORD None iphlpapi.CreateIpForwardEntry(_In_ PMIB_IPFORWARDROW pRoute)
VOID None None.PropSheet_RemovePage(HWND hPropSheetDlg None,int index None,HPROPSHEETPAGE hpage None)
DWORD None iphlpapi.IcmpSendEcho(_In_ HANDLE IcmpHandle,_In_ IPAddr DestinationAddress,_In_ LPVOID RequestData,_In_ WORD RequestSize,_In_opt_ PIP_OPTION_INFORMATION RequestOptions,_Out_ LPVOID ReplyBuffer,_In_ DWORD ReplySize,_In_ DWORD Timeout)
BOOL None None.WPUSetEvent(_In_ WSAEVENT hEvent,_Out_ LPINT lpErrno)
int WSAAPI None.NSPIoctl(_In_ HANDLE hLookup,_In_ DWORD dwControlCode,_In_ LPVOID lpvInBuffer,_Inout_ DWORD cbInBuffer,_Out_ LPVOID lpvOutBuffer,_In_ DWORD cbOutBuffer,_Out_ LPDWORD lpcbBytesReturned,_In_ LPWSACOMPLETION lpCompletion,_In_ LPWSATHREADID lpThreadId)
VOID None iphlpapi.InitializeIpForwardEntry(_Out_ PMIB_IPFORWARD_ROW2 Row)
int WSAAPI None.NSPv2Cleanup(_In_ LPGUID lpProviderId,_In_ LPVOID pvClientSessionArg)
BOOL WINAPI kernel32.HeapUnlock(_In_ HANDLE hHeap)
DWORD None iphlpapi.IcmpParseReplies(_In_ LPVOID ReplyBuffer,_In_ DWORD ReplySize)
PIP_ADAPTER_ORDER_MAP WINAPI iphlpapi.GetAdapterOrderMap(void None None)
DWORD None iphlpapi.NotifyAddrChange(_Out_ PHANDLE Handle,_In_ LPOVERLAPPED overlapped)
WORD None None.SORTVERSIONFROMLCID(LCID lcid None)
int WSPAPI ws2_32.WSCSetApplicationCategory(_In_ LPCWSTR Path,_In_ DWORD PathLength,_In_ LPCWSTR Extra,_In_ DWORD ExtraLength,_In_ DWORD PermittedLspCategories,_Out_ DWORD *pPrevPermLspCat,_Out_ LPINT lpErrno)
int WSAAPI ws2_32.WSAHtons(_In_ SOCKET s,_In_ u_short hostshort,_Out_ u_short *lpnetshort)
NETIOAPI_API None iphlpapi.FlushIpPathTable(_In_ ADDRESS_FAMILY Family)
DWORD None iphlpapi.AddIPAddress(_In_ IPAddr Address,_In_ IPMask IpMask,_In_ DWORD IfIndex,_Out_ PULONG NTEContext,_Out_ PULONG NTEInstance)
int None None.PropSheet_PageToIndex(HWND hPropSheetDlg None,HPROPSHEETPAGE hPage None)
BOOL None None.Edit_SetCueBannerText(HWND hwnd None,LPCWSTR lpcwText None)
HRESULT None None.SetSPDIF(DWORD dwOutputNum None,IWMReader* pReader None)
VOID None None.PropSheet_CancelToClose(HWND hPropSheetDlg None)
DWORD None iphlpapi.NotifyAddrChange(_Out_ PHANDLE Handle,_In_ LPOVERLAPPED overlapped)
DWORD None iphlpapi.GetPerAdapterInfo(_In_ ULONG IfIndex,_Out_ PIP_PER_ADAPTER_INFO pPerAdapterInfo,_In_ PULONG pOutBufLen)
DWORD None None.Edit_TakeFocus(HWND hwndEdit None)
NETIOAPI_API None iphlpapi.GetIfTable2Ex(_In_ MIB_IF_TABLE_LEVEL Level,_Out_ PMIB_IF_TABLE2 *Table)
VOID None iphlpapi.InitializeIpInterfaceEntry(_Inout_ PMIB_IPINTERFACE_ROW Row)
DWORD None iphlpapi.GetUniDirectionalAdapterInfo(_Out_ PIP_UNIDIRECTIONAL_ADAPTER_ADDRESS pIPIfInfo,_Out_ PULONG dwOutBufLen)
SOCKET None None.WSPSocket(_In_ int af,_In_ int type,_In_ int protocol,_In_ LPWSAPROTOCOL_INFO lpProtocolInfo,_In_ GROUP g,DWORD dwFlags None,_Out_ LPINT lpErrno)
DWORD None None.Edit_GetSel(HWND hwndCtl None)
int WSPAPI ws2_32.WSCInstallNameSpace(_In_ LPWSTR lpszIdentifier,_In_ LPWSTR lpszPathName,_In_ DWORD dwNameSpace,_In_ DWORD dwVersion,_In_ LPGUID lpProviderId)
int WSPAPI ws2_32.WSCGetProviderPath32(_In_ LPGUID lpProviderId,_Out_ LPWSTR lpszProviderDllPath,_Inout_ LPINT lpProviderDllPathLen,_Out_ LPINT lpErrno)
DWORD None iphlpapi.GetBestInterface(_In_ IPAddr dwDestAddr,_Out_ PDWORD pdwBestIfIndex)
int WSAAPI None.NSPCleanup(_In_ LPGUID lpProviderId)
BOOL None None.WPUResetEvent(_In_ WSAEVENT hEvent,_Out_ LPINT lpErrno)
NETIOAPI_API None iphlpapi.GetIfEntry2(PMIB_IF_ROW2 Row None)
DWORD None iphlpapi.NotifyAddrChange(_Out_ PHANDLE Handle,_In_ LPOVERLAPPED overlapped)
DWORD None iphlpapi.SetIpNetEntry(_In_ PMIB_IPNETROW pArpEntry)
DWORD None iphlpapi.GetOwnerModuleFromTcpEntry(_In_ PMIB_TCPROW_OWNER_MODULE pTcpEntry,_In_ TCPIP_OWNER_MODULE_INFO_CLASS Class,_Out_ PVOID Buffer,_Inout_ PDWORD pdwSize)
DWORD None iphlpapi.GetAdaptersInfo(_Out_ PIP_ADAPTER_INFO pAdapterInfo,_Inout_ PULONG pOutBufLen)
void None None.Edit_SetHandle(HWND hwndCtl None,HLOCAL h None)
BOOL CALLBACK None.AddPropSheetPageProc(HPROPSHEETPAGE hpage None,LPARAM lParam None)
HRESULT None None.put_BorderColor(long Color None)
void None None.Edit_FmtLines(HWND hwndCtl None,BOOL fAddEOL None)
HPROPSHEETPAGE None None.PropSheet_IndexToPage(HWND hPropSheetDlg None,int iPageIndex None)
HRESULT CALLBACK None.TaskDialogCallbackProc(_In_ HWND hwnd,_In_ UINT uNotification,_In_ WPARAM wParam,_In_ LPARAM lParam,_In_ LONG_PTR dwRefData)
WSAEVENT None None.WPUCompleteOverlappedRequest(_In_ SOCKET s,_In_ LPWSAOVERLAPPED lpOverlapped,_In_ DWORD dwError,_In_ DWORD cbTransferred,_Out_ LPINT lpErrno)
NETIOAPI_API None iphlpapi.GetDefaultCompartmentId(void None None)
int WSAAPI None.NSPv2SetServiceEx(_In_ HANDLE hAsyncCall,_In_ LPGUID lpProviderId,_In_ LPWSAQUERYSET2W lpqsRegInfo,_In_ WSAESETSERVICEOP essOperation,_In_ DWORD dwControlFlags,_In_ LPVOID lpvClientSessionArg)
int None None.WSPShutdown(_In_ SOCKET s,_In_ int how,_Out_ LPINT lpErrno)
int WSAAPI ws2_32.WSCInstallNameSpaceEx32(_In_ LPWSTR lpszIdentifier,_In_ LPWSTR lpszPathName,_In_ DWORD dwNameSpace,_In_ DWORD dwVersion,_In_ LPGUID lpProviderId,_In_ LPBLOB lpProviderInfo)
LONG NTAPI ntdll.RtlEthernetStringToAddress(_In_ PCTSTR S,_Out_ PCTSTR *Terminator,_Out_ DL_EUI48 *Addr)
LONG NTAPI ntdll.RtlEthernetStringToAddressW(_In_ PCTSTR S,_Out_ PCTSTR *Terminator,_Out_ DL_EUI48 *Addr)
LONG NTAPI ntdll.RtlEthernetStringToAddressA(_In_ PCTSTR S,_Out_ PCTSTR *Terminator,_Out_ DL_EUI48 *Addr)
int WSAAPI ws2_32.WSCInstallNamespace32(_In_ LPWSTR lpszIdentifier,_In_ LPWSTR lpszPathName,_In_ DWORD dwNameSpace,_In_ DWORD dwVersion,_In_ LPGUID lpProviderId)
HWND None None.PropSheet_IndexToHwnd(HWND hPropSheetDlg None,int iPageIndex None)
void None None.Edit_LimitText(HWND hwndCtl None,int cchMax None)
int WSPAPI ws2_32.WSCGetProviderInfo32(_In_ LPGUID lpProviderId,_In_ WSC_PROVIDER_INFO_TYPE InfoType,_Out_ PBYTE Info,_Inout_ size_t *InfoSize,_In_ DWORD Flags,_Out_ LPINT lpErrno)
DWORD None iphlpapi.Icmp6ParseReplies(_In_ LPVOID ReplyBuffer,_In_ DWORD ReplySize)
DWORD None iphlpapi.GetInterfaceInfo(_Out_ PIP_INTERFACE_INFO pIfTable,_Inout_ PULONG dwOutBufLen)
DWORD None iphlpapi.GetIpNetTable(_Out_ PMIB_IPNETTABLE pIpNetTable,_Inout_ PULONG pdwSize,_In_ BOOL bOrder)
HRESULT None None.SetWindowForeground(long Focus None)
HLOCAL None None.Edit_GetHandle(HWND hwndCtl None)
int None None.WSPEnumNetworkEvents(_In_ SOCKET s,_In_ WSAEVENT hEventObject,_Out_ LPWSANETWORKEVENTS lpNetworkEvents,_Out_ LPINT lpErrno)
EDITWORDBREAKPROC None None.Edit_GetWordBreakProc(HWND hwndCtl None)
INT WSPAPI ws2_32.WSCEnumNameSpaceProviders32(_Inout_ LPDWORD lpdwBufferLength,_Out_ LPWSANAMESPACE_INFOW lpnspBuffer)
BOOL None None.PropSheet_RecalcPageSizes(HWND hPropSheetDlg None)
int None ws2_32.listen(_In_ SOCKET s,_In_ int backlog)
DWORD None iphlpapi.DisableMediaSense(HANDLE *pHandle None,OVERLAPPED *pOverlapped None)
void None None.Edit_SetHandle(HWND hwndCtl None,HLOCAL h None)
VOID None None.PropSheet_RestartWindows(HWND hPropSheetDlg None)
VOID None None.PropSheet_SetButtonText(HWND hDlg None,DWORD dwButton None,LPCTSTR lpszText None)
WORD None None.LANGIDFROMLCID(LCID lcid None)
HRESULT None None.put_Visible(long Visible None)
HRESULT None None.get_Left(long *pLeft None)
int None None.PropSheet_SetHeaderTitle(HWND hWizardDlg None,int iPageIndex None,LPCTSTR pszHeaderTitle None)
VOID None None.PropSheet_SetNextText(HWND hDlg None,LPTSTR lpszText None)
int None None.NSPStartup(_In_ LPGUID lpProviderId,_Out_ LPNSP_ROUTINE lpnspRoutines)
DWORD None iphlpapi.SetTcpEntry(_In_ PMIB_TCPROW pTcpRow)
int WSAAPI None.NSPIoctl(_In_ HANDLE hLookup,_In_ DWORD dwControlCode,_In_ LPVOID lpvInBuffer,_Inout_ DWORD cbInBuffer,_Out_ LPVOID lpvOutBuffer,_In_ DWORD cbOutBuffer,_Out_ LPDWORD lpcbBytesReturned,_In_ LPWSACOMPLETION lpCompletion,_In_ LPWSATHREADID lpThreadId)
VOID None None.PropSheet_SetHeaderSubTitle(HWND hWizardDlg None,int iPageIndex None,LPCSTR pszHeaderSubTitle None)
int None None.Edit_SetText(HWND hwndCtl None,LPTSTR lpsz None)
int WSPAPI ws2_32.WSCWriteNameSpaceOrder(_In_ LPGUID lpProviderId,_In_ DWORD dwNumberOfEntries)
DWORD WINAPI iphlpapi.IcmpSendEcho2Ex(_In_ HANDLE IcmpHandle,_In_opt_ HANDLE Event,_In_opt_ PIO_APC_ROUTINE ApcRoutine,_In_opt_ PVOID ApcContext,_In_ IPAddr SourceAddress,_In_ IPAddr DestinationAddress,_In_ LPVOID RequestData,_In_ WORD RequestSize,_In_opt_ PIP_OPTION_INFORMATION RequestOptions,_Out_ LPVOID ReplyBuffer,_In_ DWORD ReplySize,_In_ DWORD Timeout)
BOOL None None.PropSheet_InsertPage(HWND hPropSheetDlg None,HWND wParam None,HWND hpage None)
VOID None None.PropSheet_ShowWizButtons(HWND hDlg None,DWORD dwFlag None,DWORD dwButton None)
int None None.WSPDuplicateSocket(_In_ SOCKET s,_In_ DWORD dwProcessId,_Out_ LPWSAPROTOCOL_INFO lpProtocolInfo,_Out_ LPINT lpErrno)
void None None.Edit_GetRect(HWND hwndCtl None,RECT *lprc None)
NETIOAPI_API None iphlpapi.GetIpInterfaceEntry(_Inout_ PMIB_IPINTERFACE_ROW Row)
DWORD WINAPI iphlpapi.IcmpSendEcho2(_In_ HANDLE IcmpHandle,_In_opt_ HANDLE Event,_In_opt_ PIO_APC_ROUTINE ApcRoutine,_In_opt_ PVOID ApcContext,_In_ IPAddr DestinationAddress,_In_ LPVOID RequestData,_In_ WORD RequestSize,_In_opt_ PIP_OPTION_INFORMATION RequestOptions,_Out_ LPVOID ReplyBuffer,_In_ DWORD ReplySize,_In_ DWORD Timeout)
HWND None None.PropSheet_GetCurrentPageHwnd(HWND hDlg None)
int None comctl32.FlatSB_SetScrollPos(HWND hwnd None,int code None,int nPos None,BOOL fRedraw None)
int WSPAPI ws2_32.WSCWriteNameSpaceOrder(_In_ LPGUID lpProviderId,_In_ DWORD dwNumberOfEntries)
ULONG WINAPI iphlpapi.DeletePersistentTcpPortReservation(_In_ USHORT StartPort,_In_ USHORT NumberOfPorts)
NETIOAPI_API None iphlpapi.SetIpInterfaceEntry(_Inout_ PMIB_IPINTERFACE_ROW Row)
DWORD None iphlpapi.SetIpForwardEntry(_In_ PMIB_IPFORWARDROW pRoute)
INT WSPAPI ws2_32.WSCEnumNameSpaceProvidersEx32(_Inout_ LPDWORD lpdwBufferLength,_Out_ LPWSANAMESPACE_INFOEXW lpnspBuffer)
BOOL None None.DateTime_SetSystemtime(HWND hwndDT None,DWORD flag None,LPSYSTEMTIME lpSysTime None)
ULONG WINAPI iphlpapi.GetPerTcp6ConnectionEStats(PMIB_TCP6ROW Row None,TCP_ESTATS_TYPE EstatsType None,_Out_ PUCHAR Rw,ULONG RwVersion None,ULONG RwSize None,_Out_ PUCHAR Ros,ULONG RosVersion None,ULONG RosSize None,_Out_ PUCHAR Rod,ULONG RodVersion None,ULONG RodSize None)
ULONG WINAPI iphlpapi.GetPerTcpConnectionEStats(PMIB_TCPROW Row None,TCP_ESTATS_TYPE EstatsType None,_Out_ PUCHAR Rw,ULONG RwVersion None,ULONG RwSize None,_Out_ PUCHAR Ros,ULONG RosVersion None,ULONG RosSize None,_Out_ PUCHAR Rod,ULONG RodVersion None,ULONG RodSize None)
HPROPSHEETPAGE None comctl32.CreatePropertySheetPage(LPCPROPSHEETPAGE lppsp None)
HPROPSHEETPAGE None comctl32.CreatePropertySheetPageW(LPCPROPSHEETPAGE lppsp None)
HPROPSHEETPAGE None comctl32.CreatePropertySheetPageA(LPCPROPSHEETPAGE lppsp None)
VOID None None.PropSheet_SetWizButtons(HWND hPropSheetDlg None,DWORD dwFlags None)
BOOL None ws2_32.WSAGetQOSByName(_In_ SOCKET s,_Inout_ LPWSABUF lpQOSName,_Out_ LPQOS lpQOS)
int None None.WSPSendDisconnect(_In_ SOCKET s,_In_ LPWSABUF lpOutboundDisconnectData,_Out_ LPINT lpErrno)
VOID None None.PropSheet_RemovePage(HWND hPropSheetDlg None,int index None,HPROPSHEETPAGE hpage None)
void None None.Edit_SetSel(HWND hwndCtl None,int ichStart None,int ichEnd None)
BOOL None None.Edit_GetCueBannerText(HWND hwnd None,LPCWSTR lpcwText None,LONG cchText None)
HRESULT None None.put_BackgroundPalette(long BackgroundPalette None)
NETIOAPI_API None iphlpapi.SetIpNetEntry2(_Inout_ PMIB_IPNET_ROW2 Row)
HRESULT None None.GetInputStreamInfo(DWORD dwInputStreamIndex None,[out] DWORD *pdwFlags)
int None None.PropSheet_IndexToId(HWND hPropSheetDlg None,int iPageIndex None)
DWORD WINAPI iphlpapi.SetIpStatisticsEx(_In_ PMIB_IPSTATS pIpStats,ULONG Family None)
BOOL None None.Edit_ScrollCaret(HWND hwndCtl None)
int None None.Edit_LineFromChar(HWND hwndCtl None,int ich None)
HRESULT None None.GetOutputType(DWORD dwOutputStreamIndex None,DWORD dwTypeIndex None,[out] DMO_MEDIA_TYPE *pmt)
void None None.Edit_SetWordBreakProc(HWND hwndCtl None,EDITWORDBREAKPROC lpfnWordBreak None)
DWORD None iphlpapi.GetOwnerModuleFromUdp6Entry(_In_ PMIB_UDP6ROW_OWNER_MODULE pUdpEntry,_In_ TCPIP_OWNER_MODULE_INFO_CLASS Class,_Out_ PVOID Buffer,_Inout_ PDWORD pdwSize)
DWORD WINAPI iphlpapi.AllocateAndGetUdpExTableFromStack(_Out_ PVOID *ppUDPTable,_In_ BOOL bOrder,_In_ HANDLE hHeap,_In_ DWORD dwFlags,_In_ DWORD dwFamily)
int WSAAPI None.NSPv2ClientSessionRundown(_In_ LPGUID lpProviderId,_In_ LPVOID pvClientSessionArg)
BOOL None None.WSPGetOverlappedResult(_In_ SOCKET s,_In_ LPWSAOVERLAPPED lpOverlapped,_Out_ LPDWORD lpcbTransfer,_In_ BOOL fWait,_Out_ LPDWORD lpdwFlags,_Out_ LPINT lpErrno)
int WSPAPI ws2_32.WSCGetProviderInfo(_In_ LPGUID lpProviderId,_In_ WSC_PROVIDER_INFO_TYPE InfoType,_Out_ PBYTE Info,_Inout_ size_t *InfoSize,_In_ DWORD Flags,_Out_ LPINT lpErrno)
int None comctl32.LBItemFromPt(HWND hLB None,POINT pt None,BOOL bAutoScroll None)
NETIOAPI_API None iphlpapi.GetInvertedIfStackTable(_Out_ PMIB_INVERTEDIFSTACK_TABLE *Table)
BOOL None comctl32.FlatSB_GetScrollPropPtr(HWND hwnd None,UINT index None,LPINT pValue None)
int None None.PropSheet_IdToIndex(HWND hPropSheetDlg None,int iPageID None)
HRESULT None None.Lock(LONG bLock None)
int None None.WPUQueryBlockingCallback(_In_ DWORD dwCatalogEntryId,_Out_ LPBLOCKINGCALLBACK *lplpfnCallback,_Out_ PDWORD_PTR lpdwContext,_Out_ LPINT lpErrno)
BOOL None None.Edit_Enable(HWND hwndCtl None,BOOL fEnable None)
HRESULT None None.SetInputMaxLatency(DWORD dwInputStreamIndex None,REFERENCE_TIME rtMaxLatency None)
int WSPAPI ws2_32.WSCGetProviderInfo(_In_ LPGUID lpProviderId,_In_ WSC_PROVIDER_INFO_TYPE InfoType,_Out_ PBYTE Info,_Inout_ size_t *InfoSize,_In_ DWORD Flags,_Out_ LPINT lpErrno)
DWORD None iphlpapi.SetIfEntry(_In_ PMIB_IFROW pIfRow)
DWORD None iphlpapi.DeleteIpNetEntry(_In_ PMIB_IPNETROW pArpEntry)
DWORD None iphlpapi.GetIpForwardTable(_Out_ PMIB_IPFORWARDTABLE pIpForwardTable,_Inout_ PULONG pdwSize,_In_ BOOL bOrder)
int None None.WSPCancelBlockingCall(_Out_ LPINT lpErrno)
void None None.Edit_GetRect(HWND hwndCtl None,RECT *lprc None)
BOOL None None.PropSheet_PressButton(HWND hPropSheetDlg None,int iButton None)
VOID None None.PropSheet_RebootSystem(HWND hPropSheetDlg None)
NETIOAPI_API None iphlpapi.GetIpInterfaceTable(_In_ ADDRESS_FAMILY Family,_Out_ PMIB_IPINTERFACE_TABLE *Table)
NETIOAPI_API None iphlpapi.GetUnicastIpAddressEntry(_Inout_ PMIB_UNICASTIPADDRESS_ROW Row)
ULONG WINAPI iphlpapi.SetPerTcpConnectionEStats(PMIB_TCPROW Row None,TCP_ESTATS_TYPE EstatsType None,PUCHAR Rw None,ULONG RwVersion None,ULONG RwSize None,ULONG Offset None)
int None None.WSPGetSockOpt(_In_ SOCKET s,_In_ int level,_In_ int optname,_Out_ char *optval,_Inout_ LPINT optlen,_Out_ LPINT lpErrno)
int WSPAPI ws2_32.WSCDeinstallProvider32(_In_ LPGUID lpProviderId,_Out_ LPINT lpErrno)
BOOL None None.PropSheet_IsDialogMessage(HWND hDlg None,LPMSG pMsg None)
int WSPAPI ws2_32.WSCWriteProviderOrder(_In_ LPDWORD lpwdCatalogEntryId,_In_ DWORD dwNumberOfEntries)
int None comctl32.FlatSB_SetScrollPos(HWND hwnd None,int code None,int nPos None,BOOL fRedraw None)
VOID None None.PropSheet_SetTitle(HWND hPropSheetDlg None,DWORD dwStyle None,LPTSTR lpszText None)
BOOL None None.PropSheet_SetCurSel(HWND hPropSheetDlg None,HPROPSHEETPAGE hpage None,UINT index None)
int WSPAPI ws2_32.WSCDeinstallProvider(_In_ LPGUID lpProviderId,_Out_ LPINT lpErrno)
int None None.PropSheet_GetResult(HWND hPropSheetDlg None)
HRESULT None None.GetInputType(DWORD dwInputStreamIndex None,DWORD dwTypeIndex None,[out] DMO_MEDIA_TYPE *pmt)
LRESULT None None.DateTime_GetMonthCalStyle([in] HWND hdp)
WSAEVENT None None.WPUCreateEvent(_Out_ LPINT lpErrno)
HRESULT None comctl32.DragEnter([in] HWND hwndLock,[in] int x,[in] int y)
int None None.PropSheet_QuerySiblings(HWND hPropSheetDlg None,WPARAM param1 None,LPARAM param2 None)
int WSAAPI None.NSPv2LookupServiceEnd(_In_ HANDLE hLookup)
BOOL None comctl32.FlatSB_GetScrollPropPtr(HWND hwnd None,UINT index None,LPINT pValue None)
HRESULT None None.GetStreamCount([out] DWORD *pcInputStreams,[out] DWORD *pcOutputStreams)
STDAPI None None.DllRegisterServer(void None None)
int None None.Edit_SetText(HWND hwndCtl None,LPTSTR lpsz None)
BOOL None None.PropSheet_Changed(HWND hPropSheetDlg None,HWND hwndPage None)
virtual HRESULT None.CheckTransform(const CMediaType *mtIn,const CMediaType *mtOut)
DWORD None iphlpapi.NhpAllocateAndGetInterfaceInfoFromStack(IP_INTERFACE_NAME_INFO ppTable None,PDWORD pdwCount None,BOOL bOrder None,HANDLE hHeap None,DWORD dwFlags None)
int None None.Edit_GetText(HWND hwndCtl None,LPTSTR lpch None,int cchMax None)
BOOL WINAPI kernel32.FreeUserPhysicalPages(_In_ HANDLE hProcess,_Inout_ PULONG_PTR NumberOfPages,_In_ PULONG_PTR UserPfnArray)
BOOL WINAPI kernel32.SetSystemFileCacheSize(_In_ SIZE_T MinimumFileCacheSize,_In_ SIZE_T MaximumFileCacheSize,_In_ DWORD Flags)
int CALLBACK None.RemoveContextHelpProc(HWND hwnd None,UINT message None,LPARAM lParam None)
INT None comctl32.LVGroupCompare(_In_ INT Group1_ID,_In_ INT Group2_ID,_In_ VOID *pvData)
HRESULT None comctl32.SetDragCursorImage([in] IUnknown *punk,[in] int iDrag,[in] int dxHotspot,[in] int dyHotspot)
LRESULT None None.DateTime_GetMonthCalStyle([in] HWND hdp)
BOOL None None.Edit_SetReadOnly(HWND hwndCtl None,BOOL fReadOnly None)
VOID None None.PropSheet_SetFinishText(HWND hPropSheetDlg None,LPTSTR lpszText None)
DWORD WINAPI iphlpapi.AllocateAndGetUdpExTableFromStack(_Out_ PVOID *ppUDPTable,_In_ BOOL bOrder,_In_ HANDLE hHeap,_In_ DWORD dwFlags,_In_ DWORD dwFamily)
HRESULT None None.GetInputStatus(DWORD dwInputStreamIndex None,[out] DWORD *dwFlags)
HRESULT None comctl32.GetIconSize([out] int *cx,[out] int *cy)
BOOL None None.Edit_HideBalloonTip(HWND hwnd None)
DWORD WINAPI iphlpapi.IcmpSendEcho2(_In_ HANDLE IcmpHandle,_In_opt_ HANDLE Event,_In_opt_ PIO_APC_ROUTINE ApcRoutine,_In_opt_ PVOID ApcContext,_In_ IPAddr DestinationAddress,_In_ LPVOID RequestData,_In_ WORD RequestSize,_In_opt_ PIP_OPTION_INFORMATION RequestOptions,_Out_ LPVOID ReplyBuffer,_In_ DWORD ReplySize,_In_ DWORD Timeout)
DWORD None iphlpapi.GetUdpTable(_Out_ PMIB_UDPTABLE pUdpTable,_Inout_ PDWORD pdwSize,_In_ BOOL bOrder)
void None None.Edit_SetSel(HWND hwndCtl None,int ichStart None,int ichEnd None)
BOOL None None.Edit_GetCueBannerText(HWND hwnd None,LPCWSTR lpcwText None,LONG cchText None)
BOOL None None.PropSheet_InsertPage(HWND hPropSheetDlg None,HWND wParam None,HWND hpage None)
DWORD WINAPI kernel32.OfferVirtualMemory(_In_ PVOID VirtualAddress,_In_ SIZE_T Size,_In_ OFFER_PRIORITY Priority)
HRESULT None comctl32.GetOverlayImage([in] int iOverlay,[out] int *piIndex)
NETIOAPI_API None iphlpapi.GetIpInterfaceEntry(_Inout_ PMIB_IPINTERFACE_ROW Row)
HRESULT None comctl32.Copy([in] int iDst,[in] IUnknown *punkSrc,[in] int iSrc,[in] UINT uFlags)
int None None.NSPStartup(_In_ LPGUID lpProviderId,_Out_ LPNSP_ROUTINE lpnspRoutines)
BOOL None None.PropSheet_Apply(HWND hPropSheetDlg None)
int None user32.SetScrollInfo(_In_ HWND hwnd,_In_ int fnBar,_In_ LPCSCROLLINFO lpsi,_In_ BOOL fRedraw)
void None None.Edit_ReplaceSel(HWND hwndCtl None,LPCTSTR lpszReplace None)
int None None.Edit_GetLine(HWND hwndCtl None,int line None,LPTSTR lpch None,int cchMax None)
BOOL None None.PropSheet_AddPage(HWND hPropSheetDlg None,HPROPSHEETPAGE hpage None)
virtual HRESULT None.BreakConnect(PIN_DIRECTION dir None)
int WSPAPI ws2_32.WSCEnableNSProvider(_In_ LPGUID lpProviderId,_In_ BOOL fEnable)
DWORD None iphlpapi.GetTcpStatisticsEx2(_Out_ PMIB_TCPSTATS2 pStats,_In_ DWORD dwFamily)
HRESULT None None.ProcessInput(DWORD dwInputStreamIndex None,IMediaBuffer *pBuffer None,DWORD dwFlags None,REFERENCE_TIME rtTimestamp None,REFERENCE_TIME rtTimelength None)
int None None.Edit_LineLength(HWND hwndCtl None,int line None)
HRESULT None comctl32.SetOverlayImage([in] int iImage,[in] int iOverlay)
DWORD None iphlpapi.GetPerAdapterInfo(_In_ ULONG IfIndex,_Out_ PIP_PER_ADAPTER_INFO pPerAdapterInfo,_In_ PULONG pOutBufLen)
HRESULT None None.GetInputSizeInfo(DWORD dwInputStreamIndex None,[out] DWORD *pcbSize,[out] DWORD *pcbMaxLookahead,[out] DWORD *pcbAlignment)
HGDIOBJ None gdi32.GetStockObject(_In_ int fnObject)
HRESULT None comctl32.Add([in] HBITMAP hbmImage,[in None None,optional] HBITMAP hbmMask,[out] int *pi)
HRESULT None msdmo.DMOEnum(REFGUID guidCategory None,DWORD dwFlags None,DWORD cInTypes None,const DMO_PARTIAL_MEDIATYPE *pInTypes,DWORD cOutTypes None,const DMO_PARTIAL_MEDIATYPE *pOutTypes,IEnumDMO **ppEnum None)
LRESULT CALLBACK None.WindowProc(_In_ HWND hwnd,_In_ UINT uMsg,_In_ WPARAM wParam,_In_ LPARAM lParam)
HRESULT None comctl32.GetBkColor([out] COLORREF *pclr)
HIMAGELIST None comctl32.ImageList_Duplicate(HIMAGELIST himl None)
BOOL None comctl32.FlatSB_ShowScrollBar(HWND hwnd None,int code None,BOOL fShow None)
ULONG WINAPI iphlpapi.GetPerTcp6ConnectionEStats(PMIB_TCP6ROW Row None,TCP_ESTATS_TYPE EstatsType None,_Out_ PUCHAR Rw,ULONG RwVersion None,ULONG RwSize None,_Out_ PUCHAR Ros,ULONG RosVersion None,ULONG RosSize None,_Out_ PUCHAR Rod,ULONG RodVersion None,ULONG RodSize None)
HRESULT None comctl32.GetImageCount([out] int *pi)
HRESULT None msdmo.MoCreateMediaType(DMO_MEDIA_TYPE **ppmt None,DWORD cbFormat None)
HRESULT None msdmo.DMOGetTypes(REFCLSID clsidDMO None,unsigned long ulInputTypesRequested,unsigned long *pulInputTypesSupplied,DMO_PARTIAL_MEDIATYPE pInputTypes None,unsigned long ulOutputTypesRequested,unsigned long *pulOutputTypesSupplied,DMO_PARTIAL_MEDIATYPE pOutputTypes None)
BOOL None None.PropSheet_SetCurSelByID(HWND hPropSheetDlg None,int id None)
int WSAAPI None.NSPv2SetServiceEx(_In_ HANDLE hAsyncCall,_In_ LPGUID lpProviderId,_In_ LPWSAQUERYSET2W lpqsRegInfo,_In_ WSAESETSERVICEOP essOperation,_In_ DWORD dwControlFlags,_In_ LPVOID lpvClientSessionArg)
BOOL None comctl32.FlatSB_SetScrollProp(HWND hwnd None,UINT index None,INT_PTR newValue None,BOOL fRedraw None)
DWORD None None.DateTime_GetSystemtime(HWND hwndDP None,LPSYSTEMTIME lpSysTime None)
LRESULT None None.DateTime_CloseMonthCal(HWND hdp None)
HRESULT None comctl32.AddMasked([in] HBITMAP hbmImage,[in] COLORREF crMask,[out] int *pi)
HRESULT None comctl32.AddMasked([in] HBITMAP hbmImage,[in] COLORREF crMask,[out] int *pi)
HRESULT None comctl32.DragLeave([in] HWND hwndLock)
UINT CALLBACK None.PropSheetPageProc(HWND hwnd None,_In_ UINT uMsg,_Inout_ LPPROPSHEETPAGE ppsp)
HRESULT None comctl32.GetImageInfo([in] int i,[out] IMAGEINFO *pImageInfo)
HRESULT None comctl32.Draw([in] IMAGELISTDRAWPARAMS *pimldp)
HRESULT None comctl32.AddMasked([in] HBITMAP hbmImage,[in] COLORREF crMask,[out] int *pi)
int CALLBACK None.PropSheetProc(HWND hwndDlg None,UINT uMsg None,LPARAM lParam None)
COLORREF None gdi32.SetDCPenColor(_In_ HDC hdc,_In_ COLORREF crColor)
BOOL None user32.ShowScrollBar(_In_ HWND hWnd,_In_ int wBar,_In_ BOOL bShow)
HRESULT None comctl32.UninitializeFlatSB(HWND hwnd None)
HRESULT None None.Clone(IEnumDMO **ppEnum None)
void None comctl32.DrawStatusText(HDC hdc None,LPCRECT lprc None,LPCTSTR pszText None,UINT uFlags None)
void None comctl32.DrawStatusTextW(HDC hdc None,LPCRECT lprc None,LPCTSTR pszText None,UINT uFlags None)
void None comctl32.DrawStatusTextA(HDC hdc None,LPCRECT lprc None,LPCTSTR pszText None,UINT uFlags None)
int None None.Header_SetHotDivider(HWND hwndHD None,BOOL flag None,DWORD dwInputValue None)
int None None.ImageList_AddIcon(HIMAGELIST himl None,HICON hicon None)
HRESULT None comctl32.BeginDrag([in] int iTrack,[in] int dxHotspot,[in] int dyHotspot)
HRESULT None comctl32.SetImageCount([in] UINT uNewCount)
HRESULT None comctl32.SetBkColor([in] COLORREF clrBk,[out] COLORREF *pclr)
HRESULT None None.GetOutputSizeInfo(DWORD dwOutputStreamIndex None,[out] DWORD *pcbSize,[out] DWORD *pcbAlignment)
DWORD None iphlpapi.NotifyAddrChange(_Out_ PHANDLE Handle,_In_ LPOVERLAPPED overlapped)
HRESULT None None.GetStreamCount([out] DWORD *pcInputStreams,[out] DWORD *pcOutputStreams)
HRESULT None comctl32.DragLeave([in] HWND hwndLock)
BOOL None None.Header_Layout([in] HWND hwndHD,[out] LPHDLAYOUT playout)
BOOL None comctl32.ImageList_GetImageInfo(HIMAGELIST himl None,int i None,IMAGEINFO *pImageInfo None)
DWORD None None.MgmSetMfe(_In_ HANDLE hProtocol,_In_ PMIB_IPMCAST_MFE pmimm)
int None comctl32.ImageList_ReplaceIcon(_In_ HIMAGELIST himl,_In_ int i,_In_ HICON hicon)
BOOL None None.Edit_CanUndo(HWND hwndCtl None)
HRESULT None comctl32.ImageList_WriteEx(_In_ HIMAGELIST himl,_In_ DWORD dwFlags,_In_ LPSTREAM pstm)
int None None.PropSheet_HwndToIndex(HWND hPropSheetDlg None,HWND hPageDlg None)
HRESULT None comctl32.SetImageCount([in] UINT uNewCount)
DWORD WINAPI iphlpapi.SetIpStatisticsEx(_In_ PMIB_IPSTATS pIpStats,ULONG Family None)
int None user32.GetScrollPos(_In_ HWND hWnd,_In_ int nBar)
HIMAGELIST None comctl32.ImageList_Read(LPSTREAM pstm None)
HRESULT None comctl32.Replace([in] int i,[in] HBITMAP hbmImage,[in None None,optional] HBITMAP hbmMask)
COLORREF None gdi32.SetDCBrushColor(_In_ HDC hdc,_In_ COLORREF crColor)
HRESULT None comctl32.DragMove([in] int x,[in] int y)
HRESULT None comctl32.DragMove([in] int x,[in] int y)
BOOL None comctl32.ImageList_DragEnter(HWND hwndLock None,int x None,int y None)
HRESULT None None.Discontinuity(DWORD dwInputStreamIndex None)
BOOL None comctl32.ImageList_DrawEx(HIMAGELIST himl None,int i None,HDC hdcDst None,int x None,int y None,int dx None,int dy None,COLORREF rgbBk None,COLORREF rgbFg None,UINT fStyle None)
int None None.Header_OrderToIndex(HWND hwndHD None,int iOrder None)
HRESULT None comctl32.DragLeave([in] HWND hwndLock)
BOOL None comctl32.ImageList_Draw(HIMAGELIST himl None,int i None,HDC hdcDst None,int x None,int y None,UINT fStyle None)
HRESULT None comctl32.Remove([in] int i)
HRESULT None comctl32.Clone([in] REFIID riid,[out] PVOID *ppv)
HRESULT None msdmo.DMOGetName(REFCLSID clsidDMO None,WCHAR szName[] None)
COLORREF None None.DateTime_SetMonthCalColor(HWND hwndDP None,int iColor None,COLORREF clr None)
HIMAGELIST None None.Header_CreateDragImage(HWND hwndHD None,int iIndex None)
HRESULT None comctl32.ReplaceIcon([in] int i,[in] HICON hicon,[out] int *pi)
int None comctl32.ImageList_GetImageCount(_In_ HIMAGELIST himl)
BOOL None comctl32.ImageList_DragLeave(HWND hwndLock None)
HRESULT None comctl32.SetIconSize([in] int cx,[in] int cy)
HRESULT None None.Receive(IMediaSample *pSample None)
DWORD None rtm.MgmTakeInterfaceOwnership(_In_ HANDLE hProtocol,_In_ DWORD dwIfIndex,_In_ DWORD dwIfNextHopAddr)
int None comctl32.ImageList_AddMasked(HIMAGELIST himl None,HBITMAP hbmImage None,COLORREF crMask None)
HRESULT None comctl32.GetIcon([in] int i,[in] UINT flags,[out] HICON *picon)
BOOL None comctl32.ImageList_DragShowNolock(BOOL fShow None)
HANDLE WINAPI kernel32.CreateEventEx(_In_opt_ LPSECURITY_ATTRIBUTES lpEventAttributes,_In_opt_ LPCTSTR lpName,_In_ DWORD dwFlags,_In_ DWORD dwDesiredAccess)
HANDLE WINAPI kernel32.CreateEventExW(_In_opt_ LPSECURITY_ATTRIBUTES lpEventAttributes,_In_opt_ LPCTSTR lpName,_In_ DWORD dwFlags,_In_ DWORD dwDesiredAccess)
HANDLE WINAPI kernel32.CreateEventExA(_In_opt_ LPSECURITY_ATTRIBUTES lpEventAttributes,_In_opt_ LPCTSTR lpName,_In_ DWORD dwFlags,_In_ DWORD dwDesiredAccess)
int None None.Header_GetItemCount(HWND hwndHD None)
BOOL None comctl32.FlatSB_GetScrollInfo(HWND hwnd None,int fnBar None,LPSCROLLINFO lpsi None)
BOOL None None.DateTime_SetRange(HWND hwndDT None,DWORD flags None,LPSYSTEMTIME lpSysTimeArray None)
HRESULT None msdmo.MoCopyMediaType(DMO_MEDIA_TYPE *pmtDest None,const DMO_MEDIA_TYPE *pmtSrc)
DWORD None rtm.MgmGroupEnumerationGetNext(_In_ HANDLE hEnum,_Inout_ PDWORD pdwBufferSize,_Inout_ PBYTE pbBuffer,_Inout_ PDWORD pdwNumEntries)
BOOL None None.Header_GetOrderArray(HWND hwndHD None,int iSize None,int *lpiArray None)
BOOL WINAPI kernel32.VirtualFreeEx(_In_ HANDLE hProcess,_In_ LPVOID lpAddress,_In_ SIZE_T dwSize,_In_ DWORD dwFreeType)
int None None.Header_SetFilterChangeTimeout(HWND hwnd None,int i None)
int None comctl32.ImageList_SetColorTable(_In_ HIMAGELIST himl,_In_ int start,_In_ int len,_In_ RGBQUAD *prgb)
LPVOID WINAPI kernel32.HeapReAlloc(_In_ HANDLE hHeap,_In_ DWORD dwFlags,_In_ LPVOID lpMem,_In_ SIZE_T dwBytes)
HRESULT None comctl32.UninitializeFlatSB(HWND hwnd None)
UINT None None.INDEXTOOVERLAYMASK(UINT iOverlay None)
COLORREF None comctl32.ImageList_SetBkColor(_In_ HIMAGELIST himl,_In_ COLORREF clrBk)
BOOL None comctl32.ImageList_Replace(HIMAGELIST himl None,int i None,HBITMAP hbmImage None,HBITMAP hbmMask None)
BOOL None None.Header_GetItemDropDownRect([in] HWND hwnd,[in] int iItem,[in None None,out] LPRECT lpItemRect)
BOOL WINAPI kernel32.UnmapViewOfFileEx(_In_ LPCVOID lpBaseAddress,_In_ DWORD UnmapFlags)
BOOL None comctl32.ImageList_SetImageCount(_In_ HIMAGELIST himl,_In_ UINT uNewCount)
BOOL None msftedit.TxSetCaretPos([in] INT x,[in] INT y)
DWORD None None.MonthCal_HitTest(HWND hwndMC None,PMCHITTESTINFO pMCHitTest None)
BOOL None imm32.ImmSetCompositionString(_In_ HIMC hIMC,_In_ DWORD dwIndex,_In_opt_ LPVOID lpComp,_In_ DWORD dwCompLen,_In_opt_ LPVOID lpRead,_In_ DWORD dwReadLen)
BOOL None imm32.ImmSetCompositionStringW(_In_ HIMC hIMC,_In_ DWORD dwIndex,_In_opt_ LPVOID lpComp,_In_ DWORD dwCompLen,_In_opt_ LPVOID lpRead,_In_ DWORD dwReadLen)
BOOL None imm32.ImmSetCompositionStringA(_In_ HIMC hIMC,_In_ DWORD dwIndex,_In_opt_ LPVOID lpComp,_In_ DWORD dwCompLen,_In_opt_ LPVOID lpRead,_In_ DWORD dwReadLen)
HANDLE WINAPI kernel32.CreateMemoryResourceNotification(_In_ MEMORY_RESOURCE_NOTIFICATION_TYPE NotificationType)
HGDIOBJ None gdi32.SelectObject(_In_ HDC hdc,_In_ HGDIOBJ hgdiobj)
HRESULT None None.GetParam([in] DWORD dwParamIndex,[out] MP_DATA *pValue)
INT None None.MonthCal_SetMonthDelta(HWND hwndMC None,INT iDelta None)
BOOL None comctl32.ImageList_SetDragCursorImage(HIMAGELIST himlDrag None,int iDrag None,int dxHotspot None,int dyHotspot None)
HIMAGELIST None None.Header_SetImageList(HWND hwndHD None,HIMAGELIST himl None)
HRESULT None None.SetTimeFormat([in] GUID guidTimeFormat,[in] MP_TIMEDATA mpTimeData)
BOOL None user32.EnumDisplaySettingsEx(_In_ LPCTSTR lpszDeviceName,_In_ DWORD iModeNum,_Out_ DEVMODE *lpDevMode,_In_ DWORD dwFlags)
BOOL None user32.EnumDisplaySettingsExW(_In_ LPCTSTR lpszDeviceName,_In_ DWORD iModeNum,_Out_ DEVMODE *lpDevMode,_In_ DWORD dwFlags)
BOOL None user32.EnumDisplaySettingsExA(_In_ LPCTSTR lpszDeviceName,_In_ DWORD iModeNum,_Out_ DEVMODE *lpDevMode,_In_ DWORD dwFlags)
int None gdi32.SaveDC(_In_ HDC hdc)
COLORREF None gdi32.SetDCBrushColor(_In_ HDC hdc,_In_ COLORREF crColor)
BOOL None comctl32.ImageList_Write(HIMAGELIST himl None,LPSTREAM pstm None)
BOOL WINAPI kernel32.IsBadStringPtr(_In_ LPCTSTR lpsz,_In_ UINT_PTR ucchMax)
BOOL WINAPI kernel32.IsBadStringPtrW(_In_ LPCTSTR lpsz,_In_ UINT_PTR ucchMax)
BOOL WINAPI kernel32.IsBadStringPtrA(_In_ LPCTSTR lpsz,_In_ UINT_PTR ucchMax)
UINT None imm32.ImmGetRegisterWordStyle(_In_ HKL hKL,_In_ UINT nItem,_Out_ LPSTYLEBUF lpStyleBuf)
UINT None imm32.ImmGetRegisterWordStyleW(_In_ HKL hKL,_In_ UINT nItem,_Out_ LPSTYLEBUF lpStyleBuf)
UINT None imm32.ImmGetRegisterWordStyleA(_In_ HKL hKL,_In_ UINT nItem,_Out_ LPSTYLEBUF lpStyleBuf)
HIMAGELIST None comctl32.ImageList_Merge(HIMAGELIST himl1 None,int i1 None,HIMAGELIST himl2 None,int i2 None,int dx None,int dy None)
BOOL None None.MonthCal_SetRange(HWND hwndMC None,DWORD fWhichLimit None,LPSYSTEMTIME lprgSysTimeArray None)
UINT None imm32.ImmGetVirtualKey(_In_ HWND hWnd)
BOOL None comctl32.ImageList_BeginDrag(HIMAGELIST himlTrack None,int iTrack None,int dxHotspot None,int dyHotspot None)
BOOL None None.DateTime_GetIdealSize([in] HWND hdp,[out] SIZE psize)
BOOL WINAPI kernel32.VirtualFree(_In_ LPVOID lpAddress,_In_ SIZE_T dwSize,_In_ DWORD dwFreeType)
HRESULT None msftedit.TxGetAcceleratorPos(LONG *pcp None)
BOOL None comctl32.ImageList_Copy(HIMAGELIST himlDst None,int iDst None,HIMAGELIST himlSrc None,int iSrc None,UINT uFlags None)
BOOL None None.TabCtrl_SetUnicodeFormat(HWND hwnd None,BOOL fUnicode None)
DWORD None imm32.ImmGetConversionList(_In_ HKL hKL,_In_ HIMC hIMC,_In_ LPCTSTR lpSrc,_Out_ LPCANDIDATELIST lpDst,_In_ DWORD dwBufLen,_In_ UINT uFlag)
DWORD None imm32.ImmGetConversionListW(_In_ HKL hKL,_In_ HIMC hIMC,_In_ LPCTSTR lpSrc,_Out_ LPCANDIDATELIST lpDst,_In_ DWORD dwBufLen,_In_ UINT uFlag)
DWORD None imm32.ImmGetConversionListA(_In_ HKL hKL,_In_ HIMC hIMC,_In_ LPCTSTR lpSrc,_Out_ LPCANDIDATELIST lpDst,_In_ DWORD dwBufLen,_In_ UINT uFlag)
BOOL None None.Header_SetStateImageList(HWND hwndHD None,HIMAGELIST himl None)
int None comctl32.ImageList_Add(_In_ HIMAGELIST himl,_In_ HBITMAP hbmImage,_In_opt_ HBITMAP hbmMask)
NETIOAPI_API None iphlpapi.GetInvertedIfStackTable(_Out_ PMIB_INVERTEDIFSTACK_TABLE *Table)
HIMAGELIST None None.Header_GetImageList(HWND hwndHD None)
BOOL None imm32.ImmSetOpenStatus(_In_ HIMC hIMC,_In_ BOOL fOpen)
BOOL None comctl32.ImageList_DrawIndirect(IMAGELISTDRAWPARAMS *pimldp None)
int None None.TabCtrl_GetRowCount(HWND hwnd None)
HRESULT None comctl32.Clone([in] REFIID riid,[out] PVOID *ppv)
DWORD CALLBACK None.EditStreamCallback(_In_ DWORD_PTR dwCookie,_In_ LPBYTE pbBuff,_In_ LONG cb,_In_ LONG *pcb)
BOOL None None.TabCtrl_SetItemExtra(HWND hwnd None,int cb None)
int None comctl32.ImageList_AddMasked(HIMAGELIST himl None,HBITMAP hbmImage None,COLORREF crMask None)
BOOL None imm32.ImmIsIME(_In_ HKL hKL)
BOOL None comctl32.ImageList_SetOverlayImage(_In_ HIMAGELIST himl,_In_ int iImage,_In_ int iOverlay)
VOID None comctl32.ImageList_EndDrag(void None None)
int None comctl32.ImageList_SetColorTable(_In_ HIMAGELIST himl,_In_ int start,_In_ int len,_In_ RGBQUAD *prgb)
HRESULT None msftedit.TxGetClientRect(LPRECT prc None)
LRESULT None None.MonthCal_SizeRectToMin(HWND hmc None,[in None None,out] RECT prc)
int CALLBACK None.EnumObjectsProc(_In_ LPVOID lpLogObject,_In_ LPARAM lpData)
BOOL None imm32.ImmNotifyIME(_In_ HIMC hIMC,_In_ DWORD dwAction,_In_ DWORD dwIndex,_In_ DWORD dwValue)
PVOID WINAPI kernel32.RegisterBadMemoryNotification(_In_ PBAD_MEMORY_CALLBACK_ROUTINE Callback)
INT None None.MonthCal_GetMonthDelta(HWND hwndMC None)
BOOL None msftedit.TxClientToScreen([in] LPPOINT lppt)
HRESULT None msftedit.TxGetMaxLength(DWORD *pLength None)
BOOL None None.MonthCal_GetSelRange(HWND hwndMC None,LPSYSTEMTIME lprgSysTimeArray None)
HRESULT None msftedit.TxGetExtent(LPSIZEL lpExtent None)
BOOL WINAPI user32.GetKeyboardLayoutName(_Out_ LPTSTR pwszKLID)
BOOL WINAPI user32.GetKeyboardLayoutNameW(_Out_ LPTSTR pwszKLID)
BOOL WINAPI user32.GetKeyboardLayoutNameA(_Out_ LPTSTR pwszKLID)
COLORREF None gdi32.GetDCBrushColor(_In_ HDC hdc)
HRESULT None comctl32.HIMAGELIST_QueryInterface(_In_ HIMAGELIST himl,_In_ REFIID riid,_Out_ void **ppv)
HANDLE WINAPI kernel32.CreateMemoryResourceNotification(_In_ MEMORY_RESOURCE_NOTIFICATION_TYPE NotificationType)
BOOL WINAPI kernel32.UnregisterBadMemoryNotification(_In_ PVOID RegistrationHandle)
BOOL None imm32.ImmSetCompositionString(_In_ HIMC hIMC,_In_ DWORD dwIndex,_In_opt_ LPVOID lpComp,_In_ DWORD dwCompLen,_In_opt_ LPVOID lpRead,_In_ DWORD dwReadLen)
BOOL None imm32.ImmSetCompositionStringW(_In_ HIMC hIMC,_In_ DWORD dwIndex,_In_opt_ LPVOID lpComp,_In_ DWORD dwCompLen,_In_opt_ LPVOID lpRead,_In_ DWORD dwReadLen)
BOOL None imm32.ImmSetCompositionStringA(_In_ HIMC hIMC,_In_ DWORD dwIndex,_In_opt_ LPVOID lpComp,_In_ DWORD dwCompLen,_In_opt_ LPVOID lpRead,_In_ DWORD dwReadLen)
HRESULT None msftedit.TxGetCharFormat(const CHARFORMAT **ppCF)
BOOL WINAPI kernel32.FreeUserPhysicalPages(_In_ HANDLE hProcess,_Inout_ PULONG_PTR NumberOfPages,_In_ PULONG_PTR UserPfnArray)
BOOL None comctl32.ImageList_Draw(HIMAGELIST himl None,int i None,HDC hdcDst None,int x None,int y None,UINT fStyle None)
BOOL None msftedit.TxShowCaret([in] BOOL fShow)
LONG None imm32.ImmGetCompositionString(_In_ HIMC hIMC,_In_ DWORD dwIndex,_Out_opt_ LPVOID lpBuf,_In_ DWORD dwBufLen)
LONG None imm32.ImmGetCompositionStringW(_In_ HIMC hIMC,_In_ DWORD dwIndex,_Out_opt_ LPVOID lpBuf,_In_ DWORD dwBufLen)
LONG None imm32.ImmGetCompositionStringA(_In_ HIMC hIMC,_In_ DWORD dwIndex,_Out_opt_ LPVOID lpBuf,_In_ DWORD dwBufLen)
int None None.TabCtrl_GetItemCount(HWND hwnd None)
HIMC None imm32.ImmAssociateContext(_In_ HWND hWnd,_In_ HIMC hIMC)
void None msftedit.TxImmReleaseContext([in] HIMC himc)
BOOL None None.Header_GetOverflowRect([in] HWND hwnd,[in None None,out] LPRECT lpItemRect)
BOOL None imm32.ImmGetCompositionWindow(_In_ HIMC hIMC,_Out_ LPCOMPOSITIONFORM lpCompForm)
DWORD None None.MonthCal_GetMaxTodayWidth(HWND hwndMC None)
BOOL WINAPI kernel32.UnregisterBadMemoryNotification(_In_ PVOID RegistrationHandle)
HRESULT WINAPI None.CreateIFEDictionaryInstance(_Out_ VOID **ppvObj)
HIMC None imm32.ImmCreateContext(void None None)
void None None.TabCtrl_SetToolTips(HWND hwndTab None,HWND hwndTT None)
BOOL WINAPI kernel32.RegisterWaitForSingleObject(_Out_ PHANDLE phNewWaitObject,_In_ HANDLE hObject,_In_ WAITORTIMERCALLBACK Callback,_In_opt_ PVOID Context,_In_ ULONG dwMilliseconds,_In_ ULONG dwFlags)
int None None.Header_ClearFilter(HWND hwnd None,int i None)
int WINAPI None.AutoCorrectProc(LANGID langid None,const WCHAR *pszBefore,WCHAR *pszAfter None,LONG cchAfter None,LONG *pcchReplaced None)
BOOL None user32.GetScrollRange(_In_ HWND hWnd,_In_ int nBar,_Out_ LPINT lpMinPos,_Out_ LPINT lpMaxPos)
HRESULT None msdmo.MoInitMediaType(DMO_MEDIA_TYPE *pmt None,DWORD cbFormat None)
BOOL None None.Header_GetItem(HWND hwndHD None,int index None,LPHDITEM phdi None)
DWORD None None.MonthCal_GetCurrentView(HWND hmc None)
HRESULT None msftedit.TxDeactivate(LONG lNewState None)
int None gdi32.GetDeviceCaps(_In_ HDC hdc,_In_ int nIndex)
DWORD None None.MonthCal_GetFirstDayOfWeek(HWND hwndMC None)
BOOL None gdi32.RestoreDC(_In_ HDC hdc,_In_ int nSavedDC)
BOOL None imm32.ImmUnregisterWord(_In_ HKL hKL,_In_ LPCTSTR lpszReading,_In_ DWORD dwStyle,_In_ LPCTSTR lpszUnregister)
BOOL None imm32.ImmUnregisterWordW(_In_ HKL hKL,_In_ LPCTSTR lpszReading,_In_ DWORD dwStyle,_In_ LPCTSTR lpszUnregister)
BOOL None imm32.ImmUnregisterWordA(_In_ HKL hKL,_In_ LPCTSTR lpszReading,_In_ DWORD dwStyle,_In_ LPCTSTR lpszUnregister)
BOOL None imm32.ImmSetCompositionWindow(_In_ HIMC hIMC,_In_ LPCOMPOSITIONFORM lpCompForm)
BOOL WINAPI kernel32.UnregisterBadMemoryNotification(_In_ PVOID RegistrationHandle)
BOOL None None.Header_GetStateImageList(HWND hwndHD None)
DWORD WINAPI kernel32.SetCriticalSectionSpinCount(_Inout_ LPCRITICAL_SECTION lpCriticalSection,_In_ DWORD dwSpinCount)
INT None None.MonthCal_GetMonthRange(HWND hwndMC None,DWORD dwFlag None,LPSYSTEMTIME lprgSysTimeArray None)
HANDLE WINAPI kernel32.CreateMutexEx(_In_opt_ LPSECURITY_ATTRIBUTES lpMutexAttributes,_In_opt_ LPCTSTR lpName,_In_ DWORD dwFlags,_In_ DWORD dwDesiredAccess)
HANDLE WINAPI kernel32.CreateMutexExW(_In_opt_ LPSECURITY_ATTRIBUTES lpMutexAttributes,_In_opt_ LPCTSTR lpName,_In_ DWORD dwFlags,_In_ DWORD dwDesiredAccess)
HANDLE WINAPI kernel32.CreateMutexExA(_In_opt_ LPSECURITY_ATTRIBUTES lpMutexAttributes,_In_opt_ LPCTSTR lpName,_In_ DWORD dwFlags,_In_ DWORD dwDesiredAccess)
BOOL None None.MonthCal_SetSelRange(HWND hwndMC None,LPSYSTEMTIME lprgSysTimeArray None)
COLORREF None comctl32.ImageList_SetBkColor(_In_ HIMAGELIST himl,_In_ COLORREF clrBk)
void None None.TabCtrl_SetPadding(HWND hwnd None,int cx None,int cy None)
INT None msftedit.TxReleaseDC([in] HDC hdc)
INT None None.MonthCal_SetMonthDelta(HWND hwndMC None,INT iDelta None)
BOOL None comctl32.ImageList_DragEnter(HWND hwndLock None,int x None,int y None)
BOOL None None.MonthCal_SetUnicodeFormat(HWND hwnd None,BOOL fUnicode None)
HIMAGELIST None None.Header_SetImageList(HWND hwndHD None,HIMAGELIST himl None)
HRESULT None None.FlushEnvelope([in] DWORD dwParamIndex,[in] REFERENCE_TIME refTimeStart,[in] REFERENCE_TIME refTimeEnd)
BOOL None None.TabCtrl_SetImageList(HWND hwnd None,HIMAGELIST himl None)
BOOL None None.Header_SetItem(HWND hwndHD None,int iIndex None,LPHDITEM phdItem None)
LRESULT None None.MonthCal_SetCALID(HWND hmc None,UINT calid None)
BOOL None None.Header_SetOrderArray(HWND hwndHD None,int iSize None,int *lpiArray None)
BOOL None comctl32.ImageList_Remove(HIMAGELIST himl None,int i None)
HRESULT None None.GetCodecProp([in] DWORD dwFormat,[in] LPCWSTR pszName,[out] WMT_PROP_DATATYPE *pType,[out] BYTE *pValue,[in None None,out] DWORD *pdwSize)
HBRUSH None gdi32.CreateHatchBrush(_In_ int fnStyle,_In_ COLORREF clrref)
BOOL None None.Header_SetFocusedItem([in] HWND hwndHD,[in] int iItem)
HRGN None gdi32.CreateRectRgn(_In_ int nLeftRect,_In_ int nTopRect,_In_ int nRightRect,_In_ int nBottomRect)
HPALETTE None gdi32.SelectPalette(_In_ HDC hdc,_In_ HPALETTE hpal,_In_ BOOL bForceBackground)
HRGN None gdi32.CreateEllipticRgn(_In_ int nLeftRect,_In_ int nTopRect,_In_ int nRightRect,_In_ int nBottomRect)
HRESULT None None.SetTimeFormat([in] GUID guidTimeFormat,[in] MP_TIMEDATA mpTimeData)
HBRUSH None gdi32.CreatePatternBrush(_In_ HBITMAP hbmp)
HBRUSH None gdi32.CreateSolidBrush(_In_ COLORREF crColor)
HGDIOBJ None gdi32.SelectObject(_In_ HDC hdc,_In_ HGDIOBJ hgdiobj)
HBRUSH None gdi32.CreateDIBPatternBrush(_In_ HGLOBAL hglbDIBPacked,_In_ UINT fuColorSpec)
BOOL None imm32.ImmSimulateHotKey(_In_ HWND hWnd,_In_ DWORD dwHotKeyID)
HFONT None gdi32.CreateFont(_In_ int nHeight,_In_ int nWidth,_In_ int nEscapement,_In_ int nOrientation,_In_ int fnWeight,_In_ DWORD fdwItalic,_In_ DWORD fdwUnderline,_In_ DWORD fdwStrikeOut,_In_ DWORD fdwCharSet,_In_ DWORD fdwOutputPrecision,_In_ DWORD fdwClipPrecision,_In_ DWORD fdwQuality,_In_ DWORD fdwPitchAndFamily,_In_ LPCTSTR lpszFace)
HFONT None gdi32.CreateFontW(_In_ int nHeight,_In_ int nWidth,_In_ int nEscapement,_In_ int nOrientation,_In_ int fnWeight,_In_ DWORD fdwItalic,_In_ DWORD fdwUnderline,_In_ DWORD fdwStrikeOut,_In_ DWORD fdwCharSet,_In_ DWORD fdwOutputPrecision,_In_ DWORD fdwClipPrecision,_In_ DWORD fdwQuality,_In_ DWORD fdwPitchAndFamily,_In_ LPCTSTR lpszFace)
HFONT None gdi32.CreateFontA(_In_ int nHeight,_In_ int nWidth,_In_ int nEscapement,_In_ int nOrientation,_In_ int fnWeight,_In_ DWORD fdwItalic,_In_ DWORD fdwUnderline,_In_ DWORD fdwStrikeOut,_In_ DWORD fdwCharSet,_In_ DWORD fdwOutputPrecision,_In_ DWORD fdwClipPrecision,_In_ DWORD fdwQuality,_In_ DWORD fdwPitchAndFamily,_In_ LPCTSTR lpszFace)
COLORREF None None.MonthCal_SetColor(HWND hwndMC None,INT iColor None,COLORREF clr None)
int None gdi32.SelectClipRgn(_In_ HDC hdc,_In_ HRGN hrgn)
HBITMAP None gdi32.CreateCompatibleBitmap(_In_ HDC hdc,_In_ int nWidth,_In_ int nHeight)
BOOL None comctl32.ImageList_SetDragCursorImage(HIMAGELIST himlDrag None,int iDrag None,int dxHotspot None,int dyHotspot None)
HRESULT None msftedit.GetClientSite(LPOLECLIENTSITE *lplpolesite None)
LRESULT CALLBACK None.WndProc(HWND hWnd None,UINT message None,WPARAM wParam None,LPARAM lParam None)
HPEN None gdi32.CreatePen(_In_ int fnPenStyle,_In_ int nWidth,_In_ COLORREF crColor)
HRESULT None None.AddEnvelope([in] DWORD dwParamIndex,[in] DWORD cPoints,[in] MP_ENVELOPE_SEGMENT *pEnvelope)
HRESULT None msftedit.GetPoint(long Type None,long *px None,long *py None)
int None None.Pager_GetButtonSize(HWND hwndPager None)
USHORT WINAPI kernel32.QueryDepthSList(_In_ PSLIST_HEADER ListHead)
VOID None None.TabCtrl_SetCurFocus(HWND hwnd None,int iItem None)
BOOL WINAPI kernel32.ChangeTimerQueueTimer(_In_opt_ HANDLE TimerQueue,_Inout_ HANDLE Timer,_In_ ULONG DueTime,_In_ ULONG Period)
PSLIST_ENTRY WINAPI ntdll.RtlInterlockedPushEntrySList(_In_ PSLIST_HEADER ListHead,_In_ PSLIST_ENTRY ListEntry)
void WINAPI kernel32.DeleteCriticalSection(_Inout_ LPCRITICAL_SECTION lpCriticalSection)
BOOL WINAPI kernel32.CreateTimerQueueTimer(_Out_ PHANDLE phNewTimer,_In_opt_ HANDLE TimerQueue,_In_ WAITORTIMERCALLBACK Callback,_In_opt_ PVOID Parameter,_In_ DWORD DueTime,_In_ DWORD Period,_In_ ULONG Flags)
BOOL WINAPI kernel32.PulseEvent(_In_ HANDLE hEvent)
BOOL None kernel32.SetLocaleInfo(_In_ LCID Locale,_In_ LCTYPE LCType,_In_ LPCTSTR lpLCData)
BOOL None kernel32.SetLocaleInfoW(_In_ LCID Locale,_In_ LCTYPE LCType,_In_ LPCTSTR lpLCData)
BOOL None kernel32.SetLocaleInfoA(_In_ LCID Locale,_In_ LCTYPE LCType,_In_ LPCTSTR lpLCData)
HLOCAL WINAPI None.LocalDiscard([in] HLOCAL hlocMem)
HLOCAL WINAPI None.LocalDiscard([in] HLOCAL hlocMem)
HLOCAL WINAPI None.LocalDiscard([in] HLOCAL hlocMem)
DWORD WINAPI kernel32.GetProcessHeaps(_In_ DWORD NumberOfHeaps,_Out_ PHANDLE ProcessHeaps)
DWORD None None.TabCtrl_SetItemSize(HWND hwnd None,int cx None,int cy None)
void None None.MonthCal_SetToday(HWND hwndMC None,LPSYSTEMTIME lpSysTime None)
HLOCAL WINAPI None.LocalDiscard([in] HLOCAL hlocMem)
DWORD WINAPI kernel32.GetProcessHeaps(_In_ DWORD NumberOfHeaps,_Out_ PHANDLE ProcessHeaps)
DWORD WINAPI kernel32.GetProcessHeaps(_In_ DWORD NumberOfHeaps,_Out_ PHANDLE ProcessHeaps)
HRESULT None msftedit.SaveCompleted(LONG iob None,LPSTORAGE lpstg None)
void None None.ZeroMemory([in] PVOID Destination,[in] SIZE_T Length)
void None None.ZeroMemory([in] PVOID Destination,[in] SIZE_T Length)
void None None.ZeroMemory([in] PVOID Destination,[in] SIZE_T Length)
BOOL None imm32.ImmConfigureIME(_In_ HKL hKL,_In_ HWND hWnd,_In_ DWORD dwMode,_In_ LPVOID lpData)
BOOL None imm32.ImmConfigureIMEW(_In_ HKL hKL,_In_ HWND hWnd,_In_ DWORD dwMode,_In_ LPVOID lpData)
BOOL None imm32.ImmConfigureIMEA(_In_ HKL hKL,_In_ HWND hWnd,_In_ DWORD dwMode,_In_ LPVOID lpData)
BOOL WINAPI kernel32.FlushViewOfFile(_In_ LPCVOID lpBaseAddress,_In_ SIZE_T dwNumberOfBytesToFlush)
BOOL WINAPI kernel32.FlushViewOfFile(_In_ LPCVOID lpBaseAddress,_In_ SIZE_T dwNumberOfBytesToFlush)
DWORD WINAPI kernel32.GetProcessHeaps(_In_ DWORD NumberOfHeaps,_Out_ PHANDLE ProcessHeaps)
BOOL WINAPI kernel32.VirtualUnlock(_In_ LPVOID lpAddress,_In_ SIZE_T dwSize)
BOOL None msftedit.TxSetScrollPos([in] INT fnBar,[in] INT nPos,[in] BOOL fRedraw)
BOOL WINAPI kernel32.VirtualUnlock(_In_ LPVOID lpAddress,_In_ SIZE_T dwSize)
BOOL WINAPI kernel32.FlushViewOfFile(_In_ LPCVOID lpBaseAddress,_In_ SIZE_T dwNumberOfBytesToFlush)
BOOL None None.TabCtrl_HighlightItem(HWND hwndTab None,INT idItem None,WORD fHighlight None)
int None kernel32.GetLocaleInfo(_In_ LCID Locale,_In_ LCTYPE LCType,_Out_opt_ LPTSTR lpLCData,_In_ int cchData)
int None kernel32.GetLocaleInfoW(_In_ LCID Locale,_In_ LCTYPE LCType,_Out_opt_ LPTSTR lpLCData,_In_ int cchData)
int None kernel32.GetLocaleInfoA(_In_ LCID Locale,_In_ LCTYPE LCType,_Out_opt_ LPTSTR lpLCData,_In_ int cchData)
void None None.ZeroMemory([in] PVOID Destination,[in] SIZE_T Length)
int None kernel32.GetLocaleInfo(_In_ LCID Locale,_In_ LCTYPE LCType,_Out_opt_ LPTSTR lpLCData,_In_ int cchData)
int None kernel32.GetLocaleInfoW(_In_ LCID Locale,_In_ LCTYPE LCType,_Out_opt_ LPTSTR lpLCData,_In_ int cchData)
int None kernel32.GetLocaleInfoA(_In_ LCID Locale,_In_ LCTYPE LCType,_Out_opt_ LPTSTR lpLCData,_In_ int cchData)
BOOL WINAPI kernel32.FlushViewOfFile(_In_ LPCVOID lpBaseAddress,_In_ SIZE_T dwNumberOfBytesToFlush)
BOOL WINAPI kernel32.VirtualUnlock(_In_ LPVOID lpAddress,_In_ SIZE_T dwSize)
int None kernel32.GetLocaleInfo(_In_ LCID Locale,_In_ LCTYPE LCType,_Out_opt_ LPTSTR lpLCData,_In_ int cchData)
int None kernel32.GetLocaleInfoW(_In_ LCID Locale,_In_ LCTYPE LCType,_Out_opt_ LPTSTR lpLCData,_In_ int cchData)
int None kernel32.GetLocaleInfoA(_In_ LCID Locale,_In_ LCTYPE LCType,_Out_opt_ LPTSTR lpLCData,_In_ int cchData)
int None None.TabCtrl_GetCurSel(HWND hwnd None)
WINAPI None kernelbase.SetProcessValidCallTargets(_In_ HANDLE hProcess,_In_ PVOID VirtualAddress,_In_ SIZE_T RegionSize,_In_ ULONG NumberOfOffsets,_Inout_ PCFG_CALL_TARGET_INFO OffsetInformation)
WINAPI None kernelbase.SetProcessValidCallTargets(_In_ HANDLE hProcess,_In_ PVOID VirtualAddress,_In_ SIZE_T RegionSize,_In_ ULONG NumberOfOffsets,_Inout_ PCFG_CALL_TARGET_INFO OffsetInformation)
BOOL WINAPI kernel32.VirtualUnlock(_In_ LPVOID lpAddress,_In_ SIZE_T dwSize)
WINAPI None kernelbase.SetProcessValidCallTargets(_In_ HANDLE hProcess,_In_ PVOID VirtualAddress,_In_ SIZE_T RegionSize,_In_ ULONG NumberOfOffsets,_Inout_ PCFG_CALL_TARGET_INFO OffsetInformation)
HANDLE WINAPI kernel32.CreateFileMapping(_In_ HANDLE hFile,_In_opt_ LPSECURITY_ATTRIBUTES lpAttributes,_In_ DWORD flProtect,_In_ DWORD dwMaximumSizeHigh,_In_ DWORD dwMaximumSizeLow,_In_opt_ LPCTSTR lpName)
HANDLE WINAPI kernel32.CreateFileMappingW(_In_ HANDLE hFile,_In_opt_ LPSECURITY_ATTRIBUTES lpAttributes,_In_ DWORD flProtect,_In_ DWORD dwMaximumSizeHigh,_In_ DWORD dwMaximumSizeLow,_In_opt_ LPCTSTR lpName)
HANDLE WINAPI kernel32.CreateFileMappingA(_In_ HANDLE hFile,_In_opt_ LPSECURITY_ATTRIBUTES lpAttributes,_In_ DWORD flProtect,_In_ DWORD dwMaximumSizeHigh,_In_ DWORD dwMaximumSizeLow,_In_opt_ LPCTSTR lpName)
HANDLE WINAPI kernel32.CreateFileMapping(_In_ HANDLE hFile,_In_opt_ LPSECURITY_ATTRIBUTES lpAttributes,_In_ DWORD flProtect,_In_ DWORD dwMaximumSizeHigh,_In_ DWORD dwMaximumSizeLow,_In_opt_ LPCTSTR lpName)
HANDLE WINAPI kernel32.CreateFileMappingW(_In_ HANDLE hFile,_In_opt_ LPSECURITY_ATTRIBUTES lpAttributes,_In_ DWORD flProtect,_In_ DWORD dwMaximumSizeHigh,_In_ DWORD dwMaximumSizeLow,_In_opt_ LPCTSTR lpName)
HANDLE WINAPI kernel32.CreateFileMappingA(_In_ HANDLE hFile,_In_opt_ LPSECURITY_ATTRIBUTES lpAttributes,_In_ DWORD flProtect,_In_ DWORD dwMaximumSizeHigh,_In_ DWORD dwMaximumSizeLow,_In_opt_ LPCTSTR lpName)
HANDLE WINAPI kernel32.CreateFileMapping(_In_ HANDLE hFile,_In_opt_ LPSECURITY_ATTRIBUTES lpAttributes,_In_ DWORD flProtect,_In_ DWORD dwMaximumSizeHigh,_In_ DWORD dwMaximumSizeLow,_In_opt_ LPCTSTR lpName)
HANDLE WINAPI kernel32.CreateFileMappingW(_In_ HANDLE hFile,_In_opt_ LPSECURITY_ATTRIBUTES lpAttributes,_In_ DWORD flProtect,_In_ DWORD dwMaximumSizeHigh,_In_ DWORD dwMaximumSizeLow,_In_opt_ LPCTSTR lpName)
HANDLE WINAPI kernel32.CreateFileMappingA(_In_ HANDLE hFile,_In_opt_ LPSECURITY_ATTRIBUTES lpAttributes,_In_ DWORD flProtect,_In_ DWORD dwMaximumSizeHigh,_In_ DWORD dwMaximumSizeLow,_In_opt_ LPCTSTR lpName)
WINAPI None kernelbase.SetProcessValidCallTargets(_In_ HANDLE hProcess,_In_ PVOID VirtualAddress,_In_ SIZE_T RegionSize,_In_ ULONG NumberOfOffsets,_Inout_ PCFG_CALL_TARGET_INFO OffsetInformation)
HANDLE WINAPI kernel32.CreateFileMapping(_In_ HANDLE hFile,_In_opt_ LPSECURITY_ATTRIBUTES lpAttributes,_In_ DWORD flProtect,_In_ DWORD dwMaximumSizeHigh,_In_ DWORD dwMaximumSizeLow,_In_opt_ LPCTSTR lpName)
HANDLE WINAPI kernel32.CreateFileMappingW(_In_ HANDLE hFile,_In_opt_ LPSECURITY_ATTRIBUTES lpAttributes,_In_ DWORD flProtect,_In_ DWORD dwMaximumSizeHigh,_In_ DWORD dwMaximumSizeLow,_In_opt_ LPCTSTR lpName)
HANDLE WINAPI kernel32.CreateFileMappingA(_In_ HANDLE hFile,_In_opt_ LPSECURITY_ATTRIBUTES lpAttributes,_In_ DWORD flProtect,_In_ DWORD dwMaximumSizeHigh,_In_ DWORD dwMaximumSizeLow,_In_opt_ LPCTSTR lpName)
LPVOID WINAPI kernel32.VirtualAllocExNuma(_In_ HANDLE hProcess,_In_opt_ LPVOID lpAddress,_In_ SIZE_T dwSize,_In_ DWORD flAllocationType,_In_ DWORD flProtect,_In_ DWORD nndPreferred)
LPVOID WINAPI kernel32.VirtualAllocExNuma(_In_ HANDLE hProcess,_In_opt_ LPVOID lpAddress,_In_ SIZE_T dwSize,_In_ DWORD flAllocationType,_In_ DWORD flProtect,_In_ DWORD nndPreferred)
LPVOID WINAPI kernel32.VirtualAllocExNuma(_In_ HANDLE hProcess,_In_opt_ LPVOID lpAddress,_In_ SIZE_T dwSize,_In_ DWORD flAllocationType,_In_ DWORD flProtect,_In_ DWORD nndPreferred)
HWND None None.TabCtrl_GetToolTips(HWND hwnd None)
int None None.TabCtrl_SetCurSel(HWND hwnd None,int iItem None)
HRESULT None None.GetCurrentSampleRequirements(ULONG ulOutputStreamIndex None,DWORD *pdwRequestedFeatures None)
int None None.Header_SetBitmapMargin(HWND hwnd None,int iWidth None)
LPVOID WINAPI kernel32.VirtualAllocExNuma(_In_ HANDLE hProcess,_In_opt_ LPVOID lpAddress,_In_ SIZE_T dwSize,_In_ DWORD flAllocationType,_In_ DWORD flProtect,_In_ DWORD nndPreferred)
BOOL WINAPI kernel32.InitializeCriticalSectionEx(_Out_ LPCRITICAL_SECTION lpCriticalSection,_In_ DWORD dwSpinCount,_In_ DWORD Flags)
BOOL None None.ComboBox_GetDroppedState(HWND hwndCtl None)
LONG None user32.ChangeDisplaySettings(_In_ DEVMODE *lpDevMode,_In_ DWORD dwflags)
LONG None user32.ChangeDisplaySettingsW(_In_ DEVMODE *lpDevMode,_In_ DWORD dwflags)
LONG None user32.ChangeDisplaySettingsA(_In_ DEVMODE *lpDevMode,_In_ DWORD dwflags)
HRESULT None None.GetFinalOutputType(DMO_MEDIA_TYPE* pMedia None,IMediaObject* pDMO None)
BOOL None None.TabCtrl_GetUnicodeFormat(HWND hwnd None)
HRESULT None comctl32.Merge([in] int i1,[in] IUnknown *punk2,[in] int i2,[in] int dx,[in] int dy,[out] REFIID riid,[out] PVOID *ppv)
BOOL None user32.EnumDisplaySettingsEx(_In_ LPCTSTR lpszDeviceName,_In_ DWORD iModeNum,_Out_ DEVMODE *lpDevMode,_In_ DWORD dwFlags)
BOOL None user32.EnumDisplaySettingsExW(_In_ LPCTSTR lpszDeviceName,_In_ DWORD iModeNum,_Out_ DEVMODE *lpDevMode,_In_ DWORD dwFlags)
BOOL None user32.EnumDisplaySettingsExA(_In_ LPCTSTR lpszDeviceName,_In_ DWORD iModeNum,_Out_ DEVMODE *lpDevMode,_In_ DWORD dwFlags)
BOOL None None.Header_GetUnicodeFormat(HWND hwnd None)
HBRUSH None gdi32.CreatePatternBrush(_In_ HBITMAP hbmp)
HRESULT None None.CreateVideoEncoderDMO(IMediaObject** ppDMO None)
void None msftedit.TxScrollWindowEx([in] INT dx,[in] INT dy,[in] LPCRECT lprcScroll,[in] LPCRECT lprcClip,[in] HRGN hrgnUpdate,[in] LPRECT lprcUpdate,[in] UINT fuScroll)
void None msftedit.TxScrollWindowEx([in] INT dx,[in] INT dy,[in] LPCRECT lprcScroll,[in] LPCRECT lprcClip,[in] HRGN hrgnUpdate,[in] LPRECT lprcUpdate,[in] UINT fuScroll)
LONG None imm32.ImmGetCompositionString(_In_ HIMC hIMC,_In_ DWORD dwIndex,_Out_opt_ LPVOID lpBuf,_In_ DWORD dwBufLen)
LONG None imm32.ImmGetCompositionStringW(_In_ HIMC hIMC,_In_ DWORD dwIndex,_Out_opt_ LPVOID lpBuf,_In_ DWORD dwBufLen)
LONG None imm32.ImmGetCompositionStringA(_In_ HIMC hIMC,_In_ DWORD dwIndex,_Out_opt_ LPVOID lpBuf,_In_ DWORD dwBufLen)
int None None.Header_SetBitmapMargin(HWND hwnd None,int iWidth None)
DWORD None None.MonthCal_GetCalendarBorder(HWND hmc None)
UINT WINAPI user32.GetKBCodePage(void None None)
HRESULT None msftedit.TxNotify([in] DWORD iNotify,[in] void *pv)
LRESULT CALLBACK None.WndProc(HWND hWnd None,UINT message None,WPARAM wParam None,LPARAM lParam None)
HRESULT None comctl32.GetImageRect([in] int i,[out] RECT *prc)
HPEN None gdi32.CreatePen(_In_ int fnPenStyle,_In_ int nWidth,_In_ COLORREF crColor)
void None msftedit.TxScrollWindowEx([in] INT dx,[in] INT dy,[in] LPCRECT lprcScroll,[in] LPCRECT lprcClip,[in] HRGN hrgnUpdate,[in] LPRECT lprcUpdate,[in] UINT fuScroll)
HWND None imm32.ImmGetDefaultIMEWnd(_In_ HWND hWnd)
void None None.Pager_GetDropTarget(HWND hwndPager None,IDropTarget **ppDropTarget None)
BOOL None kernel32.SetThreadPreferredUILanguages(_In_ DWORD dwFlags,_In_opt_ PCZZWSTR pwszLanguagesBuffer,_Out_opt_ PULONG pulNumLanguages)
HRESULT None msftedit.GetFont(ITextFont **ppFont None)
LRESULT None None.DateTime_SetMonthCalStyle([in] HWND hdp,[in] DWORD dwStyle)
VOID None None.TabCtrl_AdjustRect(HWND hwnd None,BOOL fLarger None,RECT *prc None)
BOOL None None.Header_SetUnicodeFormat(HWND hwnd None,BOOL fUnicode None)
void None msftedit.TxScrollWindowEx([in] INT dx,[in] INT dy,[in] LPCRECT lprcScroll,[in] LPCRECT lprcClip,[in] HRGN hrgnUpdate,[in] LPRECT lprcUpdate,[in] UINT fuScroll)
BOOL None kernel32.GetProcessPreferredUILanguages(_In_ DWORD dwFlags,_Out_ PULONG pulNumLanguages,_Out_opt_ PZZWSTR pwszLanguagesBuffer,_Inout_ PULONG pcchLanguagesBuffer)
BOOL None None.MonthCal_SetCurSel(HWND hwndMC None,LPSYSTEMTIME lpSysTime None)
COLORREF None None.RGB(BYTE byRed None,BYTE byGreen None,BYTE byBlue None)
SHORT WINAPI user32.VkKeyScanEx(_In_ TCHAR ch,_In_ HKL dwhkl)
SHORT WINAPI user32.VkKeyScanExW(_In_ TCHAR ch,_In_ HKL dwhkl)
SHORT WINAPI user32.VkKeyScanExA(_In_ TCHAR ch,_In_ HKL dwhkl)
HRESULT None msftedit.TxNotify([in] DWORD iNotify,[in] void *pv)
int WINAPI user32.GetSystemMetrics(_In_ int nIndex)
BOOL None None.MonthCal_SetUnicodeFormat(HWND hwnd None,BOOL fUnicode None)
UINT None imm32.ImmGetIMEFileName(_In_ HKL hKL,_Out_opt_ LPTSTR lpszFileName,_In_ UINT uBufLen)
UINT None imm32.ImmGetIMEFileNameW(_In_ HKL hKL,_Out_opt_ LPTSTR lpszFileName,_In_ UINT uBufLen)
UINT None imm32.ImmGetIMEFileNameA(_In_ HKL hKL,_Out_opt_ LPTSTR lpszFileName,_In_ UINT uBufLen)
HIMAGELIST None comctl32.ImageList_LoadImage(HINSTANCE hi None,LPCTSTR lpbmp None,int cx None,int cGrow None,COLORREF crMask None,UINT uType None,UINT uFlags None)
HIMAGELIST None comctl32.ImageList_LoadImageW(HINSTANCE hi None,LPCTSTR lpbmp None,int cx None,int cGrow None,COLORREF crMask None,UINT uType None,UINT uFlags None)
HIMAGELIST None comctl32.ImageList_LoadImageA(HINSTANCE hi None,LPCTSTR lpbmp None,int cx None,int cGrow None,COLORREF crMask None,UINT uType None,UINT uFlags None)
BOOL None imm32.ImmGetCompositionFont(_In_ HIMC hIMC,_Out_ LPLOGFONT lplf)
BOOL None imm32.ImmGetCompositionFontW(_In_ HIMC hIMC,_Out_ LPLOGFONT lplf)
BOOL None imm32.ImmGetCompositionFontA(_In_ HIMC hIMC,_Out_ LPLOGFONT lplf)
DWORD None imm32.ImmGetProperty(_In_ HKL hKL,_In_ DWORD fdwIndex)
HRESULT None comctl32.ImageList_ReadEx(_In_ DWORD dwFlags,_In_ LPSTREAM pstm,_Out_ REFIID riid,_Out_ void **ppv)
COLORREF None comctl32.ImageList_GetBkColor(_In_ HIMAGELIST himl)
BOOL CALLBACK None.EnumUILanguagesProc(_In_ LPTSTR lpUILanguageString,_In_ LONG_PTR lParam)
BOOL None None.TabCtrl_GetItem(HWND hwnd None,int iItem None,LPTCITEM pitem None)
int None user32.SetScrollPos(_In_ HWND hWnd,_In_ int nBar,_In_ int nPos,_In_ BOOL bRedraw)
void None None.TabCtrl_RemoveImage(HWND hwnd None,int iImage None)
BOOL None None.MonthCal_SetDayState(HWND hwndMC None,INT iMonths None,LPMONTHDAYSTATE lpDayStateArray None)
BOOL None imm32.ImmDestroyContext(_In_ HIMC hIMC)
HBITMAP None user32.LoadBitmap(_In_ HINSTANCE hInstance,_In_ LPCTSTR lpBitmapName)
HBITMAP None user32.LoadBitmapW(_In_ HINSTANCE hInstance,_In_ LPCTSTR lpBitmapName)
HBITMAP None user32.LoadBitmapA(_In_ HINSTANCE hInstance,_In_ LPCTSTR lpBitmapName)
BOOL None msimg32.AlphaBlend(_In_ HDC hdcDest,_In_ int xoriginDest,_In_ int yoriginDest,_In_ int wDest,_In_ int hDest,_In_ HDC hdcSrc,_In_ int xoriginSrc,_In_ int yoriginSrc,_In_ int wSrc,_In_ int hSrc,_In_ BLENDFUNCTION ftn)
HWND WINAPI user32.GetActiveWindow(void None None)
BOOL None imm32.ImmSetConversionStatus(_In_ HIMC hIMC,_In_ DWORD fdwConversion,_In_ DWORD fdwSentence)
BOOL None gdi32.DeleteObject(_In_ HGDIOBJ hObject)
BOOL None gdi32.DeleteObjectW(_In_ HGDIOBJ hObject)
UINT None kernel32.GetACP(void None None)
UINT WINAPI user32.GetKBCodePage(void None None)
int None None.Header_EditFilter(HWND hwnd None,int i None,fDiscardChanges fDiscardChanges None)
int None None.Header_GetBitmapMargin(HWND hwnd None)
UINT None gdi32.RealizePalette(_In_ HDC hdc)
BOOL None imm32.ImmGetCandidateWindow(_In_ HIMC hIMC,_In_ DWORD dwIndex,_Out_ LPCANDIDATEFORM lpCandidate)
DWORD None imm32.ImmGetCandidateList(_In_ HIMC hIMC,_In_ DWORD dwIndex,_Out_opt_ LPCANDIDATELIST lpCandList,_In_ DWORD dwBufLen)
DWORD None imm32.ImmGetCandidateListW(_In_ HIMC hIMC,_In_ DWORD dwIndex,_Out_opt_ LPCANDIDATELIST lpCandList,_In_ DWORD dwBufLen)
DWORD None imm32.ImmGetCandidateListA(_In_ HIMC hIMC,_In_ DWORD dwIndex,_Out_opt_ LPCANDIDATELIST lpCandList,_In_ DWORD dwBufLen)
VOID WINAPI kernel32.ReleaseSRWLockExclusive(_Inout_ PSRWLOCK SRWLock)
LRESULT None imm32.ImmRequestMessage(_In_ HIMC hIMC,_In_ WPARAM wParam,_In_ LPARAM lParam)
LRESULT None imm32.ImmRequestMessageW(_In_ HIMC hIMC,_In_ WPARAM wParam,_In_ LPARAM lParam)
LRESULT None imm32.ImmRequestMessageA(_In_ HIMC hIMC,_In_ WPARAM wParam,_In_ LPARAM lParam)
void None msftedit.TxSetCursor([in] HCURSOR hcur,[in] BOOL fText)
BOOL CALLBACK None.BrushDlgProc(HWND hdlg None,UINT message None,LONG wParam None,LONG lParam None)
HRESULT None msftedit.TxGetScrollBars(DWORD *pdwScrollBar None)
BOOL None None.TabCtrl_GetItem(HWND hwnd None,int iItem None,LPTCITEM pitem None)
BOOL None comctl32.ImageList_GetIconSize(HIMAGELIST himl None,int *cx None,int *cy None)
BOOL WINAPI kernel32.UnregisterBadMemoryNotification(_In_ PVOID RegistrationHandle)
UINT None kernel32.GetACP(void None None)
HRESULT None None.SetParam([in] DWORD dwParamIndex,[in] MP_DATA value)
BOOL None None.ImageList_RemoveAll(HIMAGELIST himl None)
HKL None imm32.ImmInstallIME(_In_ LPCTSTR lpszIMEFileName,_In_ LPCTSTR lpszLayoutText)
HKL None imm32.ImmInstallIMEW(_In_ LPCTSTR lpszIMEFileName,_In_ LPCTSTR lpszLayoutText)
HKL None imm32.ImmInstallIMEA(_In_ LPCTSTR lpszIMEFileName,_In_ LPCTSTR lpszLayoutText)
int None None.Header_InsertItem(HWND hwndHD None,int index None,const LPHDITEM phdi)
LRESULT None None.MonthCal_SetCalendarBorder(HWND hmc None,BOOL fset None,int xyborder None)
int None comctl32.ImageList_Add(_In_ HIMAGELIST himl,_In_ HBITMAP hbmImage,_In_opt_ HBITMAP hbmMask)
HRESULT None None.GetCurrentTimeFormat([out] GUID *pguidTimeFormat,[out] MP_TIMEDATA *pTimeData)
HRESULT None msftedit.TxGetBackStyle(TXTBACKSTYLE *pstyle None)
int None None.ComboBox_GetItemHeight(HWND hwndCtl None)
HRESULT None msftedit.TxGetPasswordChar([out] TCHAR *pch)
VOID None None.TabCtrl_DeselectAll(HWND hwndTab None,UINT fExcludeFocus None)
BOOL None imm32.ImmGetConversionStatus(_In_ HIMC hIMC,_Out_opt_ LPDWORD lpfdwConversion,_Out_opt_ LPDWORD lpfdwSentence)
BOOL None None.MonthCal_SetCurrentView(HWND hmc None,DWORD dwNewView None)
HRESULT None msftedit.TxGetViewInset(LPRECT prc None)
HANDLE WINAPI user32.LoadImage(_In_opt_ HINSTANCE hinst,_In_ LPCTSTR lpszName,_In_ UINT uType,_In_ int cxDesired,_In_ int cyDesired,_In_ UINT fuLoad)
HANDLE WINAPI user32.LoadImageW(_In_opt_ HINSTANCE hinst,_In_ LPCTSTR lpszName,_In_ UINT uType,_In_ int cxDesired,_In_ int cyDesired,_In_ UINT fuLoad)
HANDLE WINAPI user32.LoadImageA(_In_opt_ HINSTANCE hinst,_In_ LPCTSTR lpszName,_In_ UINT uType,_In_ int cxDesired,_In_ int cyDesired,_In_ UINT fuLoad)
BOOL None None.TabCtrl_SetItem(HWND hwnd None,int iItem None,LPTCITEM pitem None)
HRESULT None comctl32.GetItemFlags([in] int i,[out] DWORD *dwFlags)
BOOL None None.TabCtrl_GetItemRect(HWND hwnd None,int iItem None,RECT *prc None)
BOOL None None.MonthCal_SetMaxSelCount(HWND hwndMC None,UINT iMax None)
DWORD None None.MonthCal_GetCalendarCount(HWND hmc None)
DWORD None None.TabCtrl_GetExtendedStyle(HWND hwndTab None)
BOOL WINAPI kernel32.FlushViewOfFile(_In_ LPCVOID lpBaseAddress,_In_ SIZE_T dwNumberOfBytesToFlush)
int None None.TabCtrl_InsertItem(HWND hwnd None,int iItem None,const LPTCITEM pitem)
void CALLBACK None.HyphenateProc(_In_ WCHAR *pszWord,_In_ LANGID langid,_In_ LONG ichExceed,_Out_ HYPHRESULT *phyphresult)
BOOL None user32.EnumDisplaySettings(_In_ LPCTSTR lpszDeviceName,_In_ DWORD iModeNum,_Out_ DEVMODE *lpDevMode)
BOOL None user32.EnumDisplaySettingsW(_In_ LPCTSTR lpszDeviceName,_In_ DWORD iModeNum,_Out_ DEVMODE *lpDevMode)
BOOL None user32.EnumDisplaySettingsA(_In_ LPCTSTR lpszDeviceName,_In_ DWORD iModeNum,_Out_ DEVMODE *lpDevMode)
int None gdi32.SetStretchBltMode(_In_ HDC hdc,_In_ int iStretchMode)
BOOL None None.MonthCal_GetToday(HWND hwndMC None,LPSYSTEMTIME lpToday None)
void None msftedit.TxSetCursor([in] HCURSOR hcur,[in] BOOL fText)
BOOL None None.MonthCal_GetMinReqRect(HWND hwndMC None,LPRECT lpRectInfo None)
BOOL None imm32.ImmRegisterWord(_In_ HKL hKL,_In_ LPCTSTR lpszReading,_In_ DWORD dwStyle,_In_ LPCTSTR lpszRegister)
BOOL None imm32.ImmRegisterWordW(_In_ HKL hKL,_In_ LPCTSTR lpszReading,_In_ DWORD dwStyle,_In_ LPCTSTR lpszRegister)
BOOL None imm32.ImmRegisterWordA(_In_ HKL hKL,_In_ LPCTSTR lpszReading,_In_ DWORD dwStyle,_In_ LPCTSTR lpszRegister)
BOOL None msftedit.TxSetScrollPos([in] INT fnBar,[in] INT nPos,[in] BOOL fRedraw)
BOOL None imm32.ImmSetStatusWindowPos(_In_ HIMC hIMC,_In_ LPPOINT lpptPos)
BOOL WINAPI user32.BlockInput(_In_ BOOL fBlockIt)
BOOL None msftedit.TxEnableScrollBar([in] INT fuSBFlags,[in] INT fuArrowflags)
LANGID None kernel32.GetSystemDefaultUILanguage(void None None)
COLORREF None gdi32.GetNearestColor(_In_ HDC hdc,_In_ COLORREF crColor)
BOOL WINAPI kernel32.GlobalUnlock(_In_ HGLOBAL hMem)
HRESULT None msftedit.MoveStartWhile(VARIANT *Cset None,long Count None,long *pDelta None)
UINT None gdi32.SetTextAlign(_In_ HDC hdc,_In_ UINT fMode)
HIMC None imm32.ImmGetContext(_In_ HWND hWnd)
BOOL None imm32.ImmSetCompositionFont(_In_ HIMC hIMC,_In_ LPLOGFONT lplf)
BOOL None imm32.ImmSetCompositionFontW(_In_ HIMC hIMC,_In_ LPLOGFONT lplf)
BOOL None imm32.ImmSetCompositionFontA(_In_ HIMC hIMC,_In_ LPLOGFONT lplf)
HLOCAL WINAPI None.LocalDiscard([in] HLOCAL hlocMem)
LRESULT None None.MonthCal_SizeRectToMin(HWND hmc None,[in None None,out] RECT prc)
BOOL WINAPI user32.EnableWindow(_In_ HWND hWnd,_In_ BOOL bEnable)
BOOL WINAPI gdi32.GetDeviceGammaRamp(HDC hDC None,LPVOID lpRamp None)
DWORD None None.MonthCal_GetMaxSelCount(HWND hwndMC None)
void None msftedit.TxScrollWindowEx([in] INT dx,[in] INT dy,[in] LPCRECT lprcScroll,[in] LPCRECT lprcClip,[in] HRGN hrgnUpdate,[in] LPRECT lprcUpdate,[in] UINT fuScroll)
BOOL WINAPI kernel32.TryEnterCriticalSection(_Inout_ LPCRITICAL_SECTION lpCriticalSection)
LRESULT None imm32.ImmEscape(_In_ HKL hKL,_In_ HIMC hIMC,_In_ UINT uEscape,_Inout_ LPVOID lpData)
LRESULT None imm32.ImmEscapeW(_In_ HKL hKL,_In_ HIMC hIMC,_In_ UINT uEscape,_Inout_ LPVOID lpData)
LRESULT None imm32.ImmEscapeA(_In_ HKL hKL,_In_ HIMC hIMC,_In_ UINT uEscape,_Inout_ LPVOID lpData)
int None None.Header_ClearAllFilters(HWND hwnd None)
int None None.Pager_GetBorder(HWND hwndPager None)
BOOL None None.OpenPrinter(_In_ LPTSTR pPrinterName,_Out_ LPHANDLE phPrinter,_In_ LPPRINTER_DEFAULTS pDefault)
BOOL None None.OpenPrinterW(_In_ LPTSTR pPrinterName,_Out_ LPHANDLE phPrinter,_In_ LPPRINTER_DEFAULTS pDefault)
BOOL None None.OpenPrinterA(_In_ LPTSTR pPrinterName,_Out_ LPHANDLE phPrinter,_In_ LPPRINTER_DEFAULTS pDefault)
UINT None gdi32.GetPaletteEntries(_In_ HPALETTE hpal,_In_ UINT iStartIndex,_In_ UINT nEntries,_Out_ LPPALETTEENTRY lppe)
void None None.Pager_SetChild(HWND hwndPager None,HWND hwndChild None)
BOOL CALLBACK None.EnumInputContext(_In_ HIMC hIMC,_In_ LPARAM lParam)
DWORD None imm32.ImmGetGuideLine(_In_ HIMC hIMC,_In_ DWORD dwIndex,_Out_opt_ LPTSTR lpBuf,_In_ DWORD dwBufLen)
DWORD None imm32.ImmGetGuideLineW(_In_ HIMC hIMC,_In_ DWORD dwIndex,_Out_opt_ LPTSTR lpBuf,_In_ DWORD dwBufLen)
DWORD None imm32.ImmGetGuideLineA(_In_ HIMC hIMC,_In_ DWORD dwIndex,_Out_opt_ LPTSTR lpBuf,_In_ DWORD dwBufLen)
BOOL None imm32.ImmIsUIMessage(_In_ HWND hWndIME,_In_ UINT msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
BOOL None imm32.ImmIsUIMessageW(_In_ HWND hWndIME,_In_ UINT msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
BOOL None imm32.ImmIsUIMessageA(_In_ HWND hWndIME,_In_ UINT msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
BOOL None imm32.ImmGetOpenStatus(_In_ HIMC hIMC)
BOOL None msimg32.GradientFill(_In_ HDC hdc,_In_ PTRIVERTEX pVertex,_In_ ULONG nVertex,_In_ PVOID pMesh,_In_ ULONG nMesh,_In_ ULONG ulMode)
BOOL None kernel32.GetUserPreferredUILanguages(_In_ DWORD dwFlags,_Out_ PULONG pulNumLanguages,_Out_opt_ PZZWSTR pwszLanguagesBuffer,_Inout_ PULONG pcchLanguagesBuffer)
UINT WINAPI user32.SendInput(_In_ UINT nInputs,_In_ LPINPUT pInputs,_In_ int cbSize)
HRESULT WINAPI None.CreateIFECommonInstance(_Out_ VOID **ppvObj)
BOOL None imm32.ImmReleaseContext(_In_ HWND hWnd,_In_ HIMC hIMC)
BOOL None kernel32.GetStringTypeEx(_In_ LCID Locale,_In_ DWORD dwInfoType,_In_ LPCTSTR lpSrcStr,_In_ int cchSrc,_Out_ LPWORD lpCharType)
BOOL None kernel32.GetStringTypeExW(_In_ LCID Locale,_In_ DWORD dwInfoType,_In_ LPCTSTR lpSrcStr,_In_ int cchSrc,_Out_ LPWORD lpCharType)
BOOL None kernel32.GetStringTypeExA(_In_ LCID Locale,_In_ DWORD dwInfoType,_In_ LPCTSTR lpSrcStr,_In_ int cchSrc,_Out_ LPWORD lpCharType)
BOOL WINAPI user32.GetLastInputInfo(_Out_ PLASTINPUTINFO plii)
HRESULT None msftedit.SetFont([in] ITextFont *pFont)
void None msftedit.TxKillTimer([in] UINT idTimer)
BOOL None kernel32.SetThreadPreferredUILanguages(_In_ DWORD dwFlags,_In_opt_ PCZZWSTR pwszLanguagesBuffer,_Out_opt_ PULONG pulNumLanguages)
void None msftedit.TxInvalidateRect([in] LPCRECT prc,[in] BOOL fMode)
BOOL None imm32.IMMDisableLegacyIME(void None None)
int None None.ComboBox_SetItemData(HWND hwndCtl None,int index None,LPARAM data None)
BOOL None msftedit.TxScreenToClient([in] LPPOINT lppt)
HRESULT None msftedit.CanEdit([retval] long *pbCanEdit)
BOOL None imm32.ImmDisableTextFrameService(_In_ DWORD idThread)
BOOL None None.MonthCal_GetUnicodeFormat(HWND hwnd None)
LANGID None kernel32.GetUserDefaultUILanguage(void None None)
BOOL None imm32.ImmGetStatusWindowPos(_In_ HIMC hIMC,_Out_ LPPOINT lpptPos)
BOOL None imm32.ImmEnumInputContext(_In_ DWORD idThread,_In_ IMCENUMPROC lpfn,_In_ LPARAM lParam)
VOID CALLBACK None.APCProc(_In_ ULONG_PTR dwParam)
INT CALLBACK None.EnumRegisterWordProc(_In_ LPCTSTR lpszReading,_In_ DWORD dwStyle,_In_ LPCTSTR lpszString,_In_ LPVOID lpData)
INT CALLBACK None.EnumRegisterWordProcW(_In_ LPCTSTR lpszReading,_In_ DWORD dwStyle,_In_ LPCTSTR lpszString,_In_ LPVOID lpData)
INT CALLBACK None.EnumRegisterWordProcA(_In_ LPCTSTR lpszReading,_In_ DWORD dwStyle,_In_ LPCTSTR lpszString,_In_ LPVOID lpData)
void None msftedit.TxSetCapture([in] BOOL fCapture)
BOOL None None.FreeMUILibrary(_In_ HMODULE hResModule)
HRESULT None msftedit.MoveUntil(VARIANT *Cset None,long Count None,long *pDelta None)
SIZE_T WINAPI kernel32.VirtualQueryEx(_In_ HANDLE hProcess,_In_opt_ LPCVOID lpAddress,_Out_ PMEMORY_BASIC_INFORMATION lpBuffer,_In_ SIZE_T dwLength)
DWORD WINAPI kernel32.GetProcessHeaps(_In_ DWORD NumberOfHeaps,_Out_ PHANDLE ProcessHeaps)
void None None.FillMemory([out] PVOID Destination,[in] SIZE_T Length,[in] BYTE Fill)
BOOL WINAPI kernel32.VirtualUnlock(_In_ LPVOID lpAddress,_In_ SIZE_T dwSize)
HRESULT None None.DragEnter([in] IDataObject *pDataObj,[in] DWORD grfKeyState,[in] POINTL pt,[in None None,out] DWORD *pdwEffect)
DWORD WINAPI kernel32.DiscardVirtualMemory(_In_ PVOID VirtualAddress,_In_ SIZE_T Size)
BOOL None kernel32.EnumUILanguages(_In_ UILANGUAGE_ENUMPROC lpUILanguageEnumProc,_In_ DWORD dwFlags,_In_ LONG_PTR lParam)
BOOL None kernel32.EnumUILanguagesW(_In_ UILANGUAGE_ENUMPROC lpUILanguageEnumProc,_In_ DWORD dwFlags,_In_ LONG_PTR lParam)
BOOL None kernel32.EnumUILanguagesA(_In_ UILANGUAGE_ENUMPROC lpUILanguageEnumProc,_In_ DWORD dwFlags,_In_ LONG_PTR lParam)
BOOL WINAPI user32.SetKeyboardState(_In_ LPBYTE lpKeyState)
int None None.Header_EditFilter(HWND hwnd None,int i None,fDiscardChanges fDiscardChanges None)
BOOL None kernel32.GetStringTypeA(_In_ LCID Locale,_In_ DWORD dwInfoType,_In_ LPCSTR lpSrcStr,_In_ int cchSrc,_Out_ LPWORD lpCharType)
HRESULT None msftedit.Paste(VARIANT *pVar None,long Format None)
HANDLE WINAPI kernel32.OpenMutex(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpName)
HANDLE WINAPI kernel32.OpenMutexW(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpName)
HANDLE WINAPI kernel32.OpenMutexA(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpName)
HRESULT None msftedit.SetFormattedText([in] ITextRange *pRange)
HANDLE WINAPI kernel32.OpenMutex(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpName)
HANDLE WINAPI kernel32.OpenMutexW(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpName)
HANDLE WINAPI kernel32.OpenMutexA(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpName)
HANDLE WINAPI kernel32.OpenMutex(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpName)
HANDLE WINAPI kernel32.OpenMutexW(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpName)
HANDLE WINAPI kernel32.OpenMutexA(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpName)
void None None.FillMemory([out] PVOID Destination,[in] SIZE_T Length,[in] BYTE Fill)
SIZE_T WINAPI kernel32.VirtualQueryEx(_In_ HANDLE hProcess,_In_opt_ LPCVOID lpAddress,_Out_ PMEMORY_BASIC_INFORMATION lpBuffer,_In_ SIZE_T dwLength)
int None normaliz.IdnToNameprepUnicode(_In_ DWORD dwFlags,_In_ LPCWSTR lpUnicodeCharStr,_In_ int cchUnicodeChar,_Out_opt_ LPWSTR lpNameprepCharStr,_In_ int cchNameprepChar)
HANDLE WINAPI kernel32.OpenFileMapping(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpName)
HANDLE WINAPI kernel32.OpenFileMappingW(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpName)
HANDLE WINAPI kernel32.OpenFileMappingA(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpName)
BOOL None imm32.ImmEnumInputContext(_In_ DWORD idThread,_In_ IMCENUMPROC lpfn,_In_ LPARAM lParam)
HRESULT None msftedit.TxGetBackStyle(TXTBACKSTYLE *pstyle None)
PSLIST_ENTRY WINAPI ntdll.RtlInterlockedPushEntrySList(_In_ PSLIST_HEADER ListHead,_In_ PSLIST_ENTRY ListEntry)
BOOL None kernel32.GetStringTypeA(_In_ LCID Locale,_In_ DWORD dwInfoType,_In_ LPCSTR lpSrcStr,_In_ int cchSrc,_Out_ LPWORD lpCharType)
DWORD WINAPI kernel32.DiscardVirtualMemory(_In_ PVOID VirtualAddress,_In_ SIZE_T Size)
DWORD WINAPI kernel32.DiscardVirtualMemory(_In_ PVOID VirtualAddress,_In_ SIZE_T Size)
BOOL None None.MonthCal_GetCalendarGridInfo(HWND hmc None,MCGRIDINFO *pmcGridInfo None)
BOOL None imm32.ImmEnumInputContext(_In_ DWORD idThread,_In_ IMCENUMPROC lpfn,_In_ LPARAM lParam)
void None None.FillMemory([out] PVOID Destination,[in] SIZE_T Length,[in] BYTE Fill)
HANDLE WINAPI None.GetStdHandle(_In_ DWORD nStdHandle)
BOOL None imm32.ImmEnumInputContext(_In_ DWORD idThread,_In_ IMCENUMPROC lpfn,_In_ LPARAM lParam)
BOOL None imm32.ImmEnumInputContext(_In_ DWORD idThread,_In_ IMCENUMPROC lpfn,_In_ LPARAM lParam)
void None None.FillMemory([out] PVOID Destination,[in] SIZE_T Length,[in] BYTE Fill)
DWORD None None.MonthCal_SetFirstDayOfWeek(HWND hwndMC None,INT iDay None)
LRESULT None imm32.ImmEscape(_In_ HKL hKL,_In_ HIMC hIMC,_In_ UINT uEscape,_Inout_ LPVOID lpData)
LRESULT None imm32.ImmEscapeW(_In_ HKL hKL,_In_ HIMC hIMC,_In_ UINT uEscape,_Inout_ LPVOID lpData)
LRESULT None imm32.ImmEscapeA(_In_ HKL hKL,_In_ HIMC hIMC,_In_ UINT uEscape,_Inout_ LPVOID lpData)
BOOL None None.MonthCal_GetCalendarGridInfo(HWND hmc None,MCGRIDINFO *pmcGridInfo None)
BOOL None imm32.ImmEnumInputContext(_In_ DWORD idThread,_In_ IMCENUMPROC lpfn,_In_ LPARAM lParam)
BOOL None imm32.ImmEnumInputContext(_In_ DWORD idThread,_In_ IMCENUMPROC lpfn,_In_ LPARAM lParam)
SIZE_T WINAPI kernel32.VirtualQueryEx(_In_ HANDLE hProcess,_In_opt_ LPCVOID lpAddress,_Out_ PMEMORY_BASIC_INFORMATION lpBuffer,_In_ SIZE_T dwLength)
LRESULT None imm32.ImmEscape(_In_ HKL hKL,_In_ HIMC hIMC,_In_ UINT uEscape,_Inout_ LPVOID lpData)
LRESULT None imm32.ImmEscapeW(_In_ HKL hKL,_In_ HIMC hIMC,_In_ UINT uEscape,_Inout_ LPVOID lpData)
LRESULT None imm32.ImmEscapeA(_In_ HKL hKL,_In_ HIMC hIMC,_In_ UINT uEscape,_Inout_ LPVOID lpData)
HRESULT None msftedit.Copy(VARIANT *pVar None)
HRESULT None msftedit.GetStoryLength(long *pCount None)
DWORD WINAPI kernel32.DiscardVirtualMemory(_In_ PVOID VirtualAddress,_In_ SIZE_T Size)
HRESULT None prntvpt.BindPTProviderThunk(_In_ LPTSTR pszPrinterName,_In_ INT maxVersion,_In_ INT prefVersion,_Out_ HPTPROVIDER *phProvider,_Out_ INT *usedVersion)
BOOL None imm32.ImmEnumInputContext(_In_ DWORD idThread,_In_ IMCENUMPROC lpfn,_In_ LPARAM lParam)
DWORD WINAPI kernel32.DiscardVirtualMemory(_In_ PVOID VirtualAddress,_In_ SIZE_T Size)
BOOL None kernel32.GetStringTypeA(_In_ LCID Locale,_In_ DWORD dwInfoType,_In_ LPCSTR lpSrcStr,_In_ int cchSrc,_Out_ LPWORD lpCharType)
int None normaliz.IdnToNameprepUnicode(_In_ DWORD dwFlags,_In_ LPCWSTR lpUnicodeCharStr,_In_ int cchUnicodeChar,_Out_opt_ LPWSTR lpNameprepCharStr,_In_ int cchNameprepChar)
HRESULT None msftedit.StartOf(long Unit None,long Extend None,long *pDelta None)
UINT None imm32.ImmGetDescription(_In_ HKL hKL,_Out_opt_ LPTSTR lpszDescription,_In_ UINT uBufLen)
UINT None imm32.ImmGetDescriptionW(_In_ HKL hKL,_Out_opt_ LPTSTR lpszDescription,_In_ UINT uBufLen)
UINT None imm32.ImmGetDescriptionA(_In_ HKL hKL,_Out_opt_ LPTSTR lpszDescription,_In_ UINT uBufLen)
int None gdi32.AddFontResource(_In_ LPCTSTR lpszFilename)
int None gdi32.AddFontResourceW(_In_ LPCTSTR lpszFilename)
int None gdi32.AddFontResourceA(_In_ LPCTSTR lpszFilename)
HANDLE WINAPI kernel32.OpenMutex(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpName)
HANDLE WINAPI kernel32.OpenMutexW(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpName)
HANDLE WINAPI kernel32.OpenMutexA(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpName)
HANDLE WINAPI kernel32.OpenMutex(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpName)
HANDLE WINAPI kernel32.OpenMutexW(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpName)
HANDLE WINAPI kernel32.OpenMutexA(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpName)
DWORD WINAPI kernel32.DiscardVirtualMemory(_In_ PVOID VirtualAddress,_In_ SIZE_T Size)
HRESULT None msftedit.TxGetSelectionBarWidth(LONG *lSelBarWidth None)
BOOL None msftedit.TxShowScrollBar([in] INT fnBar,[in] BOOL fShow)
DWORD WINAPI kernel32.DiscardVirtualMemory(_In_ PVOID VirtualAddress,_In_ SIZE_T Size)
HANDLE WINAPI kernel32.OpenMutex(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpName)
HANDLE WINAPI kernel32.OpenMutexW(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpName)
HANDLE WINAPI kernel32.OpenMutexA(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpName)
HRESULT None msftedit.TxGetSelectionBarWidth(LONG *lSelBarWidth None)
HRESULT None msftedit.GetPoint(long Type None,long *px None,long *py None)
int None None.Header_ClearAllFilters(HWND hwnd None)
BOOL None imm32.ImmEnumInputContext(_In_ DWORD idThread,_In_ IMCENUMPROC lpfn,_In_ LPARAM lParam)
void None None.FillMemory([out] PVOID Destination,[in] SIZE_T Length,[in] BYTE Fill)
int None kernel32.GetLocaleInfo(_In_ LCID Locale,_In_ LCTYPE LCType,_Out_opt_ LPTSTR lpLCData,_In_ int cchData)
int None kernel32.GetLocaleInfoW(_In_ LCID Locale,_In_ LCTYPE LCType,_Out_opt_ LPTSTR lpLCData,_In_ int cchData)
int None kernel32.GetLocaleInfoA(_In_ LCID Locale,_In_ LCTYPE LCType,_Out_opt_ LPTSTR lpLCData,_In_ int cchData)
HRESULT None msftedit.SetStart([in] long cpFirst)
BOOL None imm32.ImmEnumInputContext(_In_ DWORD idThread,_In_ IMCENUMPROC lpfn,_In_ LPARAM lParam)
HRESULT None None.DragEnter([in] IDataObject *pDataObj,[in] DWORD grfKeyState,[in] POINTL pt,[in None None,out] DWORD *pdwEffect)
UINT None imm32.ImmGetDescription(_In_ HKL hKL,_Out_opt_ LPTSTR lpszDescription,_In_ UINT uBufLen)
UINT None imm32.ImmGetDescriptionW(_In_ HKL hKL,_Out_opt_ LPTSTR lpszDescription,_In_ UINT uBufLen)
UINT None imm32.ImmGetDescriptionA(_In_ HKL hKL,_Out_opt_ LPTSTR lpszDescription,_In_ UINT uBufLen)
LRESULT CALLBACK None.WindowProc(HWND hwnd None,WM_IME_STARTCOMPOSITION None None,WPARAM wParam None,LPARAM lParam None)
BOOL None imm32.ImmEnumInputContext(_In_ DWORD idThread,_In_ IMCENUMPROC lpfn,_In_ LPARAM lParam)
HRESULT None msftedit.SetText([in] BSTR bstr)
DWORD WINAPI kernel32.DiscardVirtualMemory(_In_ PVOID VirtualAddress,_In_ SIZE_T Size)
WINAPI None kernelbase.SetProcessValidCallTargets(_In_ HANDLE hProcess,_In_ PVOID VirtualAddress,_In_ SIZE_T RegionSize,_In_ ULONG NumberOfOffsets,_Inout_ PCFG_CALL_TARGET_INFO OffsetInformation)
BOOL None None.MonthCal_GetCurSel(HWND hwndMC None,LPSYSTEMTIME lpSysTime None)
HRESULT None msftedit.SetChar(long Char None)
HANDLE WINAPI kernel32.CreateFileMapping(_In_ HANDLE hFile,_In_opt_ LPSECURITY_ATTRIBUTES lpAttributes,_In_ DWORD flProtect,_In_ DWORD dwMaximumSizeHigh,_In_ DWORD dwMaximumSizeLow,_In_opt_ LPCTSTR lpName)
HANDLE WINAPI kernel32.CreateFileMappingW(_In_ HANDLE hFile,_In_opt_ LPSECURITY_ATTRIBUTES lpAttributes,_In_ DWORD flProtect,_In_ DWORD dwMaximumSizeHigh,_In_ DWORD dwMaximumSizeLow,_In_opt_ LPCTSTR lpName)
HANDLE WINAPI kernel32.CreateFileMappingA(_In_ HANDLE hFile,_In_opt_ LPSECURITY_ATTRIBUTES lpAttributes,_In_ DWORD flProtect,_In_ DWORD dwMaximumSizeHigh,_In_ DWORD dwMaximumSizeLow,_In_opt_ LPCTSTR lpName)
BOOL None None.MonthCal_GetCalendarGridInfo(HWND hmc None,MCGRIDINFO *pmcGridInfo None)
int None None.ComboBox_GetItemHeight(HWND hwndCtl None)
BOOL None imm32.ImmEnumInputContext(_In_ DWORD idThread,_In_ IMCENUMPROC lpfn,_In_ LPARAM lParam)
HANDLE WINAPI kernel32.CreateFileMapping(_In_ HANDLE hFile,_In_opt_ LPSECURITY_ATTRIBUTES lpAttributes,_In_ DWORD flProtect,_In_ DWORD dwMaximumSizeHigh,_In_ DWORD dwMaximumSizeLow,_In_opt_ LPCTSTR lpName)
HANDLE WINAPI kernel32.CreateFileMappingW(_In_ HANDLE hFile,_In_opt_ LPSECURITY_ATTRIBUTES lpAttributes,_In_ DWORD flProtect,_In_ DWORD dwMaximumSizeHigh,_In_ DWORD dwMaximumSizeLow,_In_opt_ LPCTSTR lpName)
HANDLE WINAPI kernel32.CreateFileMappingA(_In_ HANDLE hFile,_In_opt_ LPSECURITY_ATTRIBUTES lpAttributes,_In_ DWORD flProtect,_In_ DWORD dwMaximumSizeHigh,_In_ DWORD dwMaximumSizeLow,_In_opt_ LPCTSTR lpName)
LRESULT None imm32.ImmEscape(_In_ HKL hKL,_In_ HIMC hIMC,_In_ UINT uEscape,_Inout_ LPVOID lpData)
LRESULT None imm32.ImmEscapeW(_In_ HKL hKL,_In_ HIMC hIMC,_In_ UINT uEscape,_Inout_ LPVOID lpData)
LRESULT None imm32.ImmEscapeA(_In_ HKL hKL,_In_ HIMC hIMC,_In_ UINT uEscape,_Inout_ LPVOID lpData)
VOID WINAPI kernel32.InitializeSRWLock(_Out_ PSRWLOCK SRWLock)
HIMAGELIST None comctl32.ImageList_GetDragImage(POINT *ppt None,POINT *pptHotspot None)
WINAPI None kernelbase.SetProcessValidCallTargets(_In_ HANDLE hProcess,_In_ PVOID VirtualAddress,_In_ SIZE_T RegionSize,_In_ ULONG NumberOfOffsets,_Inout_ PCFG_CALL_TARGET_INFO OffsetInformation)
BOOL WINAPI kernel32.GlobalUnlock(_In_ HGLOBAL hMem)
BOOL None imm32.ImmEnumInputContext(_In_ DWORD idThread,_In_ IMCENUMPROC lpfn,_In_ LPARAM lParam)
HRESULT None msftedit.TxGetSelectionBarWidth(LONG *lSelBarWidth None)
SIZE_T WINAPI kernel32.VirtualQueryEx(_In_ HANDLE hProcess,_In_opt_ LPCVOID lpAddress,_Out_ PMEMORY_BASIC_INFORMATION lpBuffer,_In_ SIZE_T dwLength)
UINT None imm32.ImmGetDescription(_In_ HKL hKL,_Out_opt_ LPTSTR lpszDescription,_In_ UINT uBufLen)
UINT None imm32.ImmGetDescriptionW(_In_ HKL hKL,_Out_opt_ LPTSTR lpszDescription,_In_ UINT uBufLen)
UINT None imm32.ImmGetDescriptionA(_In_ HKL hKL,_Out_opt_ LPTSTR lpszDescription,_In_ UINT uBufLen)
HANDLE WINAPI kernel32.CreateFileMapping(_In_ HANDLE hFile,_In_opt_ LPSECURITY_ATTRIBUTES lpAttributes,_In_ DWORD flProtect,_In_ DWORD dwMaximumSizeHigh,_In_ DWORD dwMaximumSizeLow,_In_opt_ LPCTSTR lpName)
HANDLE WINAPI kernel32.CreateFileMappingW(_In_ HANDLE hFile,_In_opt_ LPSECURITY_ATTRIBUTES lpAttributes,_In_ DWORD flProtect,_In_ DWORD dwMaximumSizeHigh,_In_ DWORD dwMaximumSizeLow,_In_opt_ LPCTSTR lpName)
HANDLE WINAPI kernel32.CreateFileMappingA(_In_ HANDLE hFile,_In_opt_ LPSECURITY_ATTRIBUTES lpAttributes,_In_ DWORD flProtect,_In_ DWORD dwMaximumSizeHigh,_In_ DWORD dwMaximumSizeLow,_In_opt_ LPCTSTR lpName)
HANDLE WINAPI kernel32.CreateFileMapping(_In_ HANDLE hFile,_In_opt_ LPSECURITY_ATTRIBUTES lpAttributes,_In_ DWORD flProtect,_In_ DWORD dwMaximumSizeHigh,_In_ DWORD dwMaximumSizeLow,_In_opt_ LPCTSTR lpName)
HANDLE WINAPI kernel32.CreateFileMappingW(_In_ HANDLE hFile,_In_opt_ LPSECURITY_ATTRIBUTES lpAttributes,_In_ DWORD flProtect,_In_ DWORD dwMaximumSizeHigh,_In_ DWORD dwMaximumSizeLow,_In_opt_ LPCTSTR lpName)
HANDLE WINAPI kernel32.CreateFileMappingA(_In_ HANDLE hFile,_In_opt_ LPSECURITY_ATTRIBUTES lpAttributes,_In_ DWORD flProtect,_In_ DWORD dwMaximumSizeHigh,_In_ DWORD dwMaximumSizeLow,_In_opt_ LPCTSTR lpName)
SIZE_T WINAPI kernel32.VirtualQueryEx(_In_ HANDLE hProcess,_In_opt_ LPCVOID lpAddress,_Out_ PMEMORY_BASIC_INFORMATION lpBuffer,_In_ SIZE_T dwLength)
LRESULT None imm32.ImmEscape(_In_ HKL hKL,_In_ HIMC hIMC,_In_ UINT uEscape,_Inout_ LPVOID lpData)
LRESULT None imm32.ImmEscapeW(_In_ HKL hKL,_In_ HIMC hIMC,_In_ UINT uEscape,_Inout_ LPVOID lpData)
LRESULT None imm32.ImmEscapeA(_In_ HKL hKL,_In_ HIMC hIMC,_In_ UINT uEscape,_Inout_ LPVOID lpData)
UINT None imm32.ImmGetDescription(_In_ HKL hKL,_Out_opt_ LPTSTR lpszDescription,_In_ UINT uBufLen)
UINT None imm32.ImmGetDescriptionW(_In_ HKL hKL,_Out_opt_ LPTSTR lpszDescription,_In_ UINT uBufLen)
UINT None imm32.ImmGetDescriptionA(_In_ HKL hKL,_Out_opt_ LPTSTR lpszDescription,_In_ UINT uBufLen)
BOOL None imm32.ImmEnumInputContext(_In_ DWORD idThread,_In_ IMCENUMPROC lpfn,_In_ LPARAM lParam)
SIZE_T WINAPI kernel32.VirtualQueryEx(_In_ HANDLE hProcess,_In_opt_ LPCVOID lpAddress,_Out_ PMEMORY_BASIC_INFORMATION lpBuffer,_In_ SIZE_T dwLength)
HRESULT None msftedit.IsEqual(ITextRange *pRange None,long *pB None)
HRESULT None msftedit.GetStoryType(long *pValue None)
HRESULT None msftedit.FindText(BSTR bstr None,long Count None,long Flags None,long *pLength None)
BOOL None kernel32.GetStringTypeA(_In_ LCID Locale,_In_ DWORD dwInfoType,_In_ LPCSTR lpSrcStr,_In_ int cchSrc,_Out_ LPWORD lpCharType)
DWORD WINAPI user32.OemKeyScan(_In_ WORD wOemChar)
DWORD WINAPI kernel32.DiscardVirtualMemory(_In_ PVOID VirtualAddress,_In_ SIZE_T Size)
INT None None.ComboBox_GetMinVisible(HWND hwnd None)
BOOL None kernel32.RtlIsValidLocaleName(_In_ LPCWSTR LocaleName,_In_ ULONG Flags)
DWORD None None.MonthCal_SetFirstDayOfWeek(HWND hwndMC None,INT iDay None)
BOOL WINAPI kernel32.EndUpdateResource(_In_ HANDLE hUpdate,_In_ BOOL fDiscard)
BOOL WINAPI kernel32.EndUpdateResourceW(_In_ HANDLE hUpdate,_In_ BOOL fDiscard)
BOOL WINAPI kernel32.EndUpdateResourceA(_In_ HANDLE hUpdate,_In_ BOOL fDiscard)
BOOL None gdi32.RemoveFontResource(_In_ LPCTSTR lpFileName)
BOOL None gdi32.RemoveFontResourceW(_In_ LPCTSTR lpFileName)
BOOL None gdi32.RemoveFontResourceA(_In_ LPCTSTR lpFileName)
HRESULT None None.DragOver([in] DWORD grfKeyState,[in] POINTL pt,[in None None,out] DWORD *pdwEffect)
DWORD None imm32.ImmGetImeMenuItems(_In_ HIMC hIMC,_In_ DWORD dwFlags,_In_ DWORD dwType,_Out_opt_ LPIMEMENUITEMINFO lpImeParentMenu,_Out_opt_ LPIMEMENUITEMINFO lpImeMenu,_In_ DWORD dwSize)
DWORD None imm32.ImmGetImeMenuItemsW(_In_ HIMC hIMC,_In_ DWORD dwFlags,_In_ DWORD dwType,_Out_opt_ LPIMEMENUITEMINFO lpImeParentMenu,_Out_opt_ LPIMEMENUITEMINFO lpImeMenu,_In_ DWORD dwSize)
DWORD None imm32.ImmGetImeMenuItemsA(_In_ HIMC hIMC,_In_ DWORD dwFlags,_In_ DWORD dwType,_Out_opt_ LPIMEMENUITEMINFO lpImeParentMenu,_Out_opt_ LPIMEMENUITEMINFO lpImeMenu,_In_ DWORD dwSize)
DWORD None None.MAKELCID(WORD wLanguageID None,WORD wSortID None)
LRESULT None imm32.ImmEscape(_In_ HKL hKL,_In_ HIMC hIMC,_In_ UINT uEscape,_Inout_ LPVOID lpData)
LRESULT None imm32.ImmEscapeW(_In_ HKL hKL,_In_ HIMC hIMC,_In_ UINT uEscape,_Inout_ LPVOID lpData)
LRESULT None imm32.ImmEscapeA(_In_ HKL hKL,_In_ HIMC hIMC,_In_ UINT uEscape,_Inout_ LPVOID lpData)
int WINAPI kernel32.lstrlen(_In_ LPCTSTR lpString)
int WINAPI kernel32.lstrlenW(_In_ LPCTSTR lpString)
int WINAPI kernel32.lstrlenA(_In_ LPCTSTR lpString)
BOOL None None.MonthCal_GetUnicodeFormat(HWND hwnd None)
UINT None imm32.ImmEnumRegisterWord(_In_ HKL hKL,_In_ REGISTERWORDENUMPROC lpfnEnumProc,_In_opt_ LPCTSTR lpszReading,_In_ DWORD dwStyle,_In_opt_ LPCTSTR lpszRegister,_In_ LPVOID lpData)
UINT None imm32.ImmEnumRegisterWordW(_In_ HKL hKL,_In_ REGISTERWORDENUMPROC lpfnEnumProc,_In_opt_ LPCTSTR lpszReading,_In_ DWORD dwStyle,_In_opt_ LPCTSTR lpszRegister,_In_ LPVOID lpData)
UINT None imm32.ImmEnumRegisterWordA(_In_ HKL hKL,_In_ REGISTERWORDENUMPROC lpfnEnumProc,_In_opt_ LPCTSTR lpszReading,_In_ DWORD dwStyle,_In_opt_ LPCTSTR lpszRegister,_In_ LPVOID lpData)
HRESULT None msftedit.MoveStartUntil(VARIANT *Cset None,long Count None,long *pDelta None)
BOOL WINAPI kernel32.EnumSystemGeoNames(_In_ GEOCLASS geoClass,_In_ GEO_ENUMNAMEPROC geoEnumProc,_In_opt_ LPARAM data)
HRESULT WINAPI None.CreateIFELanguageInstance(_In_ REFCLSID clsid,_Out_ VOID **ppvObj)
BOOL CALLBACK None.EnumDateFormatsProc(_In_ LPTSTR lpDateFormatString)
BOOL None msimg32.GradientFill(_In_ HDC hdc,_In_ PTRIVERTEX pVertex,_In_ ULONG nVertex,_In_ PVOID pMesh,_In_ ULONG nMesh,_In_ ULONG ulMode)
INT None None.ComboBox_GetMinVisible(HWND hwnd None)
HRESULT None msftedit.IsEqual(ITextRange *pRange None,long *pB None)
BOOL None imm32.ImmDisableIME(_In_ DWORD idThread)
VOID None None.Pager_ForwardMouse(HWND hwndPager None,BOOL bForward None)
BOOL WINAPI kernel32.DuplicateHandle(_In_ HANDLE hSourceProcessHandle,_In_ HANDLE hSourceHandle,_In_ HANDLE hTargetProcessHandle,_Out_ LPHANDLE lpTargetHandle,_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ DWORD dwOptions)
int None None.ComboBox_FindStringExact(HWND hwndCtl None,int indexStart None,LPCTSTR lpszFind None)
HRESULT None msftedit.TxSendMessage(UINT msg None,WPARAM wparam None,LPARAM lparam None,LRESULT *plresult None)
int None gdi32.SetTextCharacterExtra(_In_ HDC hdc,_In_ int nCharExtra)
DWORD None None.SetPrinterData(_In_ HANDLE hPrinter,_In_ LPTSTR pValueName,_In_ DWORD Type,_In_ LPBYTE pData,_In_ DWORD cbData)
DWORD None None.SetPrinterDataW(_In_ HANDLE hPrinter,_In_ LPTSTR pValueName,_In_ DWORD Type,_In_ LPBYTE pData,_In_ DWORD cbData)
DWORD None None.SetPrinterDataA(_In_ HANDLE hPrinter,_In_ LPTSTR pValueName,_In_ DWORD Type,_In_ LPBYTE pData,_In_ DWORD cbData)
int None None.ComboBox_FindItemData(HWND hwndCtl None,int indexStart None,LPARAM data None)
void WINAPI kernel32.GetSystemInfo(_Out_ LPSYSTEM_INFO lpSystemInfo)
BOOL CALLBACK None.EnumResTypeProc(_In_opt_ HMODULE hModule,_In_ LPTSTR lpszType,_In_ LONG_PTR lParam)
BOOL CALLBACK None.EnumResTypeProcW(_In_opt_ HMODULE hModule,_In_ LPTSTR lpszType,_In_ LONG_PTR lParam)
BOOL CALLBACK None.EnumResTypeProcA(_In_opt_ HMODULE hModule,_In_ LPTSTR lpszType,_In_ LONG_PTR lParam)
BOOL WINAPI user32.GetWindowPlacement(_In_ HWND hWnd,_Inout_ WINDOWPLACEMENT *lpwndpl)
HRESULT None msftedit.TxGetScrollBars(DWORD *pdwScrollBar None)
BOOL None gdi32.PatBlt(_In_ HDC hdc,_In_ int nXLeft,_In_ int nYLeft,_In_ int nWidth,_In_ int nHeight,_In_ DWORD dwRop)
HRESULT None msftedit.Expand(long Unit None,long *pDelta None)
DWORD None None.DeletePrinterData(_In_ HANDLE hPrinter,_In_ LPTSTR pValueName)
DWORD None None.DeletePrinterDataW(_In_ HANDLE hPrinter,_In_ LPTSTR pValueName)
DWORD None None.DeletePrinterDataA(_In_ HANDLE hPrinter,_In_ LPTSTR pValueName)
BOOL WINAPI user32.EnumChildWindows(_In_opt_ HWND hWndParent,_In_ WNDENUMPROC lpEnumFunc,_In_ LPARAM lParam)
HDC None user32.BeginPaint(_In_ HWND hwnd,_Out_ LPPAINTSTRUCT lpPaint)
HRESULT None msftedit.Collapse([in] long bStart)
HRESULT None msftedit.MoveWhile(VARIANT *Cset None,long Count None,long *pDelta None)
INTERNET_STATUS_CALLBACK None wininet.InternetSetStatusCallback(_In_ HINTERNET hInternet,_In_ INTERNET_STATUS_CALLBACK lpfnInternetCallback)
HRESULT None msftedit.Collapse([in] long bStart)
HANDLE None None.ConnectToPrinterDlg(_In_ HWND hwnd,_In_ DWORD Flags)
HBRUSH None user32.GetSysColorBrush(_In_ int nIndex)
HRESULT None msftedit.GetEmbeddedObject(IUnknown **ppObject None)
BOOL None wininet.InternetCheckConnection(_In_ LPCTSTR lpszUrl,_In_ DWORD dwFlags,_In_ DWORD dwReserved)
BOOL None wininet.InternetCheckConnectionW(_In_ LPCTSTR lpszUrl,_In_ DWORD dwFlags,_In_ DWORD dwReserved)
BOOL None wininet.InternetCheckConnectionA(_In_ LPCTSTR lpszUrl,_In_ DWORD dwFlags,_In_ DWORD dwReserved)
void None msftedit.TxViewChange([in] BOOL fUpdate)
LONG WINAPI user32.GetDialogBaseUnits(void None None)
BOOL WINAPI kernel32.SetUserGeoName(_In_ PWSTR geoName)
BOOL CALLBACK None.EnumDateFormatsProcExEx(_In_ LPWSTR lpDateFormatString,_In_ CALID CalendarID,_In_ LPARAM lParam)
DWORD None None.StartDocPrinter(_In_ HANDLE hPrinter,_In_ DWORD Level,_In_ LPBYTE pDocInfo)
DWORD None None.StartDocPrinterW(_In_ HANDLE hPrinter,_In_ DWORD Level,_In_ LPBYTE pDocInfo)
DWORD None None.StartDocPrinterA(_In_ HANDLE hPrinter,_In_ DWORD Level,_In_ LPBYTE pDocInfo)
BOOL None kernel32.GetCPInfo(_In_ UINT CodePage,_Out_ LPCPINFO lpCPInfo)
SHORT WINAPI user32.GetAsyncKeyState(_In_ int vKey)
HANDLE None spoolss.FindFirstPrinterChangeNotification(_In_ HANDLE hPrinter,DWORD fdwFilter None,DWORD fdwOptions None,_In_opt_ LPVOID pPrinterNotifyOptions)
HRESULT None msftedit.TxGetParaFormat(const PARAFORMAT **ppPF)
HRESULT None msftedit.MoveEndWhile(VARIANT *Cset None,long Count None,long *pDelta None)
BOOL None plotui.PrinterProperties(_In_ HWND hWnd,_In_ HANDLE hPrinter)
HRESULT None msftedit.GetPara(ITextPara **ppPara None)
BOOL None kernel32.GetUILanguageInfo(_In_ DWORD dwFlags,_In_ PCZZWSTR pwmszLanguage,_Out_opt_ PZZWSTR pwszFallbackLanguages,_Inout_opt_ PDWORD pcchFallbackLanguages,_Out_ PDWORD pdwAttributes)
HRESULT None msftedit.InRange(ITextRange *pRange None,long *pB None)
BOOL None msftedit.TxCreateCaret([in] HBITMAP hbmp,[in] INT xWidth,[in] INT yHeight)
DWORD WINAPI kernel32.DiscardVirtualMemory(_In_ PVOID VirtualAddress,_In_ SIZE_T Size)
HRESULT None msftedit.InStory(ITextRange *pRange None,long *pB None)
LRESULT CALLBACK None.WindowProc(HWND hwnd None,WM_IME_NOTIFY None None,WPARAM wParam None,LPARAM lParam None)
SHORT WINAPI user32.VkKeyScan(_In_ TCHAR ch)
SHORT WINAPI user32.VkKeyScanW(_In_ TCHAR ch)
SHORT WINAPI user32.VkKeyScanA(_In_ TCHAR ch)
HINSTANCE None None.LoadMUILibrary(_In_ LPCTSTR pszFullModuleName,_In_ DWORD dwLangConvention,_In_ LANGID LangID)
HINSTANCE None None.LoadMUILibraryW(_In_ LPCTSTR pszFullModuleName,_In_ DWORD dwLangConvention,_In_ LANGID LangID)
HINSTANCE None None.LoadMUILibraryA(_In_ LPCTSTR pszFullModuleName,_In_ DWORD dwLangConvention,_In_ LANGID LangID)
VOID None None.Pager_ForwardMouse(HWND hwndPager None,BOOL bForward None)
BOOL WINAPI kernel32.GlobalUnlock(_In_ HGLOBAL hMem)
BOOL None kernel32.GetStringTypeW(_In_ DWORD dwInfoType,_In_ LPCWSTR lpSrcStr,_In_ int cchSrc,_Out_ LPWORD lpCharType)
UINT None gdi32.GetOutlineTextMetrics(_In_ HDC hdc,_In_ UINT cbData,_Out_opt_ LPOUTLINETEXTMETRIC lpOTM)
UINT None gdi32.GetOutlineTextMetricsW(_In_ HDC hdc,_In_ UINT cbData,_Out_opt_ LPOUTLINETEXTMETRIC lpOTM)
UINT None gdi32.GetOutlineTextMetricsA(_In_ HDC hdc,_In_ UINT cbData,_Out_opt_ LPOUTLINETEXTMETRIC lpOTM)
HRESULT None msftedit.Move(long Unit None,long Count None,long *pDelta None)
BOOL WINAPI comdlg32.ChooseFont(_Inout_ LPCHOOSEFONT lpcf)
BOOL WINAPI comdlg32.ChooseFontW(_Inout_ LPCHOOSEFONT lpcf)
BOOL WINAPI comdlg32.ChooseFontA(_Inout_ LPCHOOSEFONT lpcf)
HANDLE WINAPI kernel32.FindFirstChangeNotification(_In_ LPCTSTR lpPathName,_In_ BOOL bWatchSubtree,_In_ DWORD dwNotifyFilter)
HANDLE WINAPI kernel32.FindFirstChangeNotificationW(_In_ LPCTSTR lpPathName,_In_ BOOL bWatchSubtree,_In_ DWORD dwNotifyFilter)
HANDLE WINAPI kernel32.FindFirstChangeNotificationA(_In_ LPCTSTR lpPathName,_In_ BOOL bWatchSubtree,_In_ DWORD dwNotifyFilter)
int None kernel32.CompareStringEx(_In_opt_ LPCWSTR lpLocaleName,_In_ DWORD dwCmpFlags,_In_ LPCWSTR lpString1,_In_ int cchCount1,_In_ LPCWSTR lpString2,_In_ int cchCount2,_In_opt_ LPNLSVERSIONINFO lpVersionInformation,_In_opt_ LPVOID lpReserved,_In_opt_ LPARAM lParam)
HRESULT None msftedit.Delete(long Unit None,long Count None,long *pDelta None)
HRESULT None None.GiveFeedback([in] DWORD dwEffect)
BOOL None gdi32.TextOut(_In_ HDC hdc,_In_ int nXStart,_In_ int nYStart,_In_ LPCTSTR lpString,_In_ int cchString)
BOOL None gdi32.TextOutW(_In_ HDC hdc,_In_ int nXStart,_In_ int nYStart,_In_ LPCTSTR lpString,_In_ int cchString)
BOOL None gdi32.TextOutA(_In_ HDC hdc,_In_ int nXStart,_In_ int nYStart,_In_ LPCTSTR lpString,_In_ int cchString)
BOOL None wininet.HttpSendRequest(_In_ HINTERNET hRequest,_In_ LPCTSTR lpszHeaders,_In_ DWORD dwHeadersLength,_In_ LPVOID lpOptional,_In_ DWORD dwOptionalLength)
BOOL None wininet.HttpSendRequestW(_In_ HINTERNET hRequest,_In_ LPCTSTR lpszHeaders,_In_ DWORD dwHeadersLength,_In_ LPVOID lpOptional,_In_ DWORD dwOptionalLength)
BOOL None wininet.HttpSendRequestA(_In_ HINTERNET hRequest,_In_ LPCTSTR lpszHeaders,_In_ DWORD dwHeadersLength,_In_ LPVOID lpOptional,_In_ DWORD dwOptionalLength)
BOOL None None.EnumPrinters(_In_ DWORD Flags,_In_ LPTSTR Name,_In_ DWORD Level,_Out_ LPBYTE pPrinterEnum,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded,_Out_ LPDWORD pcReturned)
BOOL None None.EnumPrintersW(_In_ DWORD Flags,_In_ LPTSTR Name,_In_ DWORD Level,_Out_ LPBYTE pPrinterEnum,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded,_Out_ LPDWORD pcReturned)
BOOL None None.EnumPrintersA(_In_ DWORD Flags,_In_ LPTSTR Name,_In_ DWORD Level,_Out_ LPBYTE pPrinterEnum,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded,_Out_ LPDWORD pcReturned)
BOOL None imm32.ImmEnumInputContext(_In_ DWORD idThread,_In_ IMCENUMPROC lpfn,_In_ LPARAM lParam)
int None None.ComboBox_LimitText(HWND hwndCtl None,int cchMax None)
int None None.ComboBox_InsertString(HWND hwndCtl None,int index None,LPCSTR lpsz None)
UINT WINAPI user32.MapVirtualKeyEx(_In_ UINT uCode,_In_ UINT uMapType,_Inout_opt_ HKL dwhkl)
UINT WINAPI user32.MapVirtualKeyExW(_In_ UINT uCode,_In_ UINT uMapType,_Inout_opt_ HKL dwhkl)
UINT WINAPI user32.MapVirtualKeyExA(_In_ UINT uCode,_In_ UINT uMapType,_Inout_opt_ HKL dwhkl)
BOOL None kernel32.UpdateCalendarDayOfWeek(_Inout_ LPCALDATETIME lpCalDateTime)
BOOL None kernel32.GetSystemPreferredUILanguages(_In_ DWORD dwFlags,_Out_ PULONG pulNumLanguages,_Out_opt_ PZZWSTR pwszLanguagesBuffer,_Inout_ PULONG pcchLanguagesBuffer)
void WINAPI kernel32.DeleteCriticalSection(_Inout_ LPCRITICAL_SECTION lpCriticalSection)
HRESULT None msftedit.MoveEnd(long Unit None,long Count None,long *pDelta None)
LONG None None.DocumentProperties(_In_ HWND hWnd,_In_ HANDLE hPrinter,_In_ LPTSTR pDeviceName,_Out_ PDEVMODE pDevModeOutput,_In_ PDEVMODE pDevModeInput,_In_ DWORD fMode)
LONG None None.DocumentPropertiesW(_In_ HWND hWnd,_In_ HANDLE hPrinter,_In_ LPTSTR pDeviceName,_Out_ PDEVMODE pDevModeOutput,_In_ PDEVMODE pDevModeInput,_In_ DWORD fMode)
LONG None None.DocumentPropertiesA(_In_ HWND hWnd,_In_ HANDLE hPrinter,_In_ LPTSTR pDeviceName,_Out_ PDEVMODE pDevModeOutput,_In_ PDEVMODE pDevModeInput,_In_ DWORD fMode)
BOOL None kernel32.GetStringTypeA(_In_ LCID Locale,_In_ DWORD dwInfoType,_In_ LPCSTR lpSrcStr,_In_ int cchSrc,_Out_ LPWORD lpCharType)
int None kernel32.LCIDToLocaleName(_In_ LCID Locale,_Out_opt_ LPWSTR lpName,_In_ int cchName,_In_ DWORD dwFlags)
BOOL WINAPI kernel32.TryEnterCriticalSection(_Inout_ LPCRITICAL_SECTION lpCriticalSection)
BOOL None kernel32.AdjustCalendarDate(_Inout_ LPCALDATETIME lpCalDateTime,_In_ CALDATETIME_DATEUNIT calUnit,_Out_ INT amount)
VOID CALLBACK None.APCProc(_In_ ULONG_PTR dwParam)
int None kernel32.LCIDToLocaleName(_In_ LCID Locale,_Out_opt_ LPWSTR lpName,_In_ int cchName,_In_ DWORD dwFlags)
BOOL None user32.DlgDirSelectEx(_In_ HWND hDlg,_Out_ LPTSTR lpString,_In_ int nCount,_In_ int nIDListBox)
BOOL None user32.DlgDirSelectExW(_In_ HWND hDlg,_Out_ LPTSTR lpString,_In_ int nCount,_In_ int nIDListBox)
BOOL None user32.DlgDirSelectExA(_In_ HWND hDlg,_Out_ LPTSTR lpString,_In_ int nCount,_In_ int nIDListBox)
BOOL None wininet.HttpAddRequestHeaders(_In_ HINTERNET hRequest,_In_ LPCTSTR lpszHeaders,_In_ DWORD dwHeadersLength,_In_ DWORD dwModifiers)
BOOL None wininet.HttpAddRequestHeadersW(_In_ HINTERNET hRequest,_In_ LPCTSTR lpszHeaders,_In_ DWORD dwHeadersLength,_In_ DWORD dwModifiers)
BOOL None wininet.HttpAddRequestHeadersA(_In_ HINTERNET hRequest,_In_ LPCTSTR lpszHeaders,_In_ DWORD dwHeadersLength,_In_ DWORD dwModifiers)
BOOL WINAPI kernel32.PulseEvent(_In_ HANDLE hEvent)
HRESULT None msftedit.SetEnd(long cp None)
LPVOID WINAPI kernel32.LockResource(_In_ HGLOBAL hResData)
DWORD None gdi32.GetFontLanguageInfo(_In_ HDC hdc)
UINT WINAPI user32.MapVirtualKey(_In_ UINT uCode,_In_ UINT uMapType)
UINT WINAPI user32.MapVirtualKeyW(_In_ UINT uCode,_In_ UINT uMapType)
UINT WINAPI user32.MapVirtualKeyA(_In_ UINT uCode,_In_ UINT uMapType)
HRESULT None prntvpt.GetPrintCapabilitiesThunk2(_In_ HPTPROVIDER hProvider,_In_ BYTE *pPrintTicket,_In_ INT cbPrintTicket,_Out_ BYTE **ppbPrintCapabilities,_Out_ INT *pcbPrintCapabilitiesLength,_Out_opt_ BSTR *pbstrErrorMessage)
HRESULT None msftedit.SetPoint([in] long x,[in] long y,[in] long Type,[in] long Extend)
BOOL WINAPI None.OnContextMenu(HWND hwnd None,int x None,int y None)
LPTSTR WINAPI kernel32.lstrcat(_Inout_ LPTSTR lpString1,_In_ LPTSTR lpString2)
LPTSTR WINAPI kernel32.lstrcatW(_Inout_ LPTSTR lpString1,_In_ LPTSTR lpString2)
LPTSTR WINAPI kernel32.lstrcatA(_Inout_ LPTSTR lpString1,_In_ LPTSTR lpString2)
COLORREF None gdi32.GetTextColor(_In_ HDC hdc)
BOOL None kernel32.UpdateCalendarDayOfWeek(_Inout_ LPCALDATETIME lpCalDateTime)
HRESULT None msftedit.SetSnapToGrid([in] long Value)
HINTERNET WINAPI winhttp.WinHttpOpenRequest(_In_ HINTERNET hConnect,_In_ LPCWSTR pwszVerb,_In_ LPCWSTR pwszObjectName,_In_ LPCWSTR pwszVersion,_In_ LPCWSTR pwszReferrer,_In_ LPCWSTR *ppwszAcceptTypes,_In_ DWORD dwFlags)
int None None.ComboBox_FindString(HWND hwndCtl None,int indexStart None,LPCTSTR lpszFind None)
BOOL WINAPI None.GetPrintExecutionData(_Out_ PRINT_EXECUTION_DATA *pData)
HRESULT None msftedit.CanEdit([retval] long *pbCanEdit)
INT None None.ComboBox_GetMinVisible(HWND hwnd None)
HRESULT None None.QueryGetData([in] FORMATETC *pformatetc)
HRESULT None msftedit.GetDuplicate(ITextRange **ppRange None)
BOOL None imm32.ImmSetCandidateWindow(_In_ HIMC hIMC,_In_ LPCANDIDATEFORM lpCandidate)
HRESULT None msftedit.GetStart(long *pcpFirst None)
HRESULT None msftedit.FindTextStart(BSTR bstr None,long Count None,long Flags None,long *pLength None)
int None None.ComboBox_SetText(HWND hwndCtl None,LPTSTR lpsz None)
int None kernel32.GetUserDefaultLocaleName(_Out_ LPWSTR lpLocaleName,_In_ int cchLocaleName)
BOOL None normaliz.IsNormalizedString(_In_ NORM_FORM NormForm,_In_ LPCWSTR lpString,_In_ int cwLength)
BOOL CALLBACK None.EnumLocalesProc(_In_ LPTSTR lpLocaleString)
BOOL WINAPI winhttp.WinHttpCrackUrl(_In_ LPCWSTR pwszUrl,_In_ DWORD dwUrlLength,_In_ DWORD dwFlags,_Inout_ LPURL_COMPONENTS lpUrlComponents)
int None None.ComboBox_GetTextLength(HWND hwndCtl None)
int None idndl.DownlevelGetStringScripts(_In_ DWORD dwFlags,_In_ LPCWSTR lpString,_In_ int cchString,_Out_ LPWSTR lpScripts,_In_ int cchScripts)
BOOL None kernel32.SetCalendarInfo(_In_ LCID Locale,_In_ CALID Calendar,_In_ CALTYPE CalType,_In_ LPCTSTR lpCalData)
BOOL None kernel32.SetCalendarInfoW(_In_ LCID Locale,_In_ CALID Calendar,_In_ CALTYPE CalType,_In_ LPCTSTR lpCalData)
BOOL None kernel32.SetCalendarInfoA(_In_ LCID Locale,_In_ CALID Calendar,_In_ CALTYPE CalType,_In_ LPCTSTR lpCalData)
BOOL None kernel32.EnumSystemLocales(_In_ LOCALE_ENUMPROC lpLocaleEnumProc,_In_ DWORD dwFlags)
BOOL None kernel32.EnumSystemLocalesW(_In_ LOCALE_ENUMPROC lpLocaleEnumProc,_In_ DWORD dwFlags)
BOOL None kernel32.EnumSystemLocalesA(_In_ LOCALE_ENUMPROC lpLocaleEnumProc,_In_ DWORD dwFlags)
HRESULT None msftedit.EndOf(long Unit None,long Extend None,long *pDelta None)
BOOL CALLBACK None.EnumTimeFormatsProcEx(_In_ LPWSTR lpTimeFormatString,_In_ LPARAM lParam)
int None None.ComboBox_AddString(HWND hwndCtl None,LPCTSTR lpsz None)
HRESULT None msftedit.MoveEndUntil(VARIANT *Cset None,long Count None,long *pDelta None)
BOOL WINAPI winhttp.WinHttpQueryAuthSchemes(_In_ HINTERNET hRequest,_Out_ LPDWORD lpdwSupportedSchemes,_Out_ LPDWORD lpdwFirstScheme,_Out_ LPDWORD pdwAuthTarget)
PSLIST_ENTRY WINAPI kernel32.InterlockedPushEntrySList(_Inout_ PSLIST_HEADER ListHead,_Inout_ PSLIST_ENTRY ListEntry)
HRESULT None msftedit.GetEnd(long *pcpLim None)
BOOL None wininet.InternetReadFileEx(_In_ HINTERNET hFile,_Out_ LPINTERNET_BUFFERS lpBuffersOut,_In_ DWORD dwFlags,_In_ DWORD_PTR dwContext)
BOOL None wininet.InternetReadFileExW(_In_ HINTERNET hFile,_Out_ LPINTERNET_BUFFERS lpBuffersOut,_In_ DWORD dwFlags,_In_ DWORD_PTR dwContext)
BOOL None wininet.InternetReadFileExA(_In_ HINTERNET hFile,_Out_ LPINTERNET_BUFFERS lpBuffersOut,_In_ DWORD dwFlags,_In_ DWORD_PTR dwContext)
HRESULT None msftedit.SetFormattedText([in] ITextRange *pRange)
BOOL None kernel32.EnumSystemLocales(_In_ LOCALE_ENUMPROC lpLocaleEnumProc,_In_ DWORD dwFlags)
BOOL None kernel32.EnumSystemLocalesW(_In_ LOCALE_ENUMPROC lpLocaleEnumProc,_In_ DWORD dwFlags)
BOOL None kernel32.EnumSystemLocalesA(_In_ LOCALE_ENUMPROC lpLocaleEnumProc,_In_ DWORD dwFlags)
HRESULT None msftedit.SetPara([in] ITextPara *pPara)
BOOL None kernel32.IsCalendarLeapYear(_In_ CALID calId,_In_ UINT year,_In_ UINT era)
HWND WINAPI user32.GetFocus(void None None)
HRESULT None msftedit.GetFormattedText(ITextRange **ppRange None)
PSLIST_ENTRY FASTCALL kernel32.InterlockedPushListSList(_Inout_ PSLIST_HEADER ListHead,_Inout_ PSLIST_ENTRY List,_Inout_ PSLIST_ENTRY ListEnd,_In_ ULONG Count)
int WINAPI kernel32.lstrlen(_In_ LPCTSTR lpString)
int WINAPI kernel32.lstrlenW(_In_ LPCTSTR lpString)
int WINAPI kernel32.lstrlenA(_In_ LPCTSTR lpString)
DWORD WINAPI user32.CharLowerBuff(_Inout_ LPTSTR lpsz,_In_ DWORD cchLength)
DWORD WINAPI user32.CharLowerBuffW(_Inout_ LPTSTR lpsz,_In_ DWORD cchLength)
DWORD WINAPI user32.CharLowerBuffA(_Inout_ LPTSTR lpsz,_In_ DWORD cchLength)
BOOL WINAPI kernel32.EnumResourceTypes(_In_opt_ HMODULE hModule,_In_ ENUMRESTYPEPROC lpEnumFunc,_In_ LONG_PTR lParam)
BOOL WINAPI kernel32.EnumResourceTypesW(_In_opt_ HMODULE hModule,_In_ ENUMRESTYPEPROC lpEnumFunc,_In_ LONG_PTR lParam)
BOOL WINAPI kernel32.EnumResourceTypesA(_In_opt_ HMODULE hModule,_In_ ENUMRESTYPEPROC lpEnumFunc,_In_ LONG_PTR lParam)
HWND WINAPI user32.CreateDialog(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc)
HWND WINAPI user32.CreateDialogW(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc)
HWND WINAPI user32.CreateDialogA(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc)
BOOL WINAPI api-ms-win-core-version-l1-1-0.GetFileVersionInfo(_In_ LPCTSTR lptstrFilename,_Reserved_ DWORD dwHandle,_In_ DWORD dwLen,_Out_ LPVOID lpData)
BOOL WINAPI api-ms-win-core-version-l1-1-0.GetFileVersionInfoW(_In_ LPCTSTR lptstrFilename,_Reserved_ DWORD dwHandle,_In_ DWORD dwLen,_Out_ LPVOID lpData)
BOOL WINAPI api-ms-win-core-version-l1-1-0.GetFileVersionInfoA(_In_ LPCTSTR lptstrFilename,_Reserved_ DWORD dwHandle,_In_ DWORD dwLen,_Out_ LPVOID lpData)
int None None.Pager_SetScrollInfo(HWND hwndPager None,UINT cTimeOut None,UINT cLinesPer None,UINT cPixelsPerLine None)
HRESULT None None.InvokeDictToolDialog([in] IMEDLG *pimedlg)
BOOL None gdi32.RemoveFontResource(_In_ LPCTSTR lpFileName)
BOOL None gdi32.RemoveFontResourceW(_In_ LPCTSTR lpFileName)
BOOL None gdi32.RemoveFontResourceA(_In_ LPCTSTR lpFileName)
int None None.ComboBox_Dir(HWND hwndCtl None,UINT attrs None,LPCTSTR lpszFileSpec None)
BOOL None gdi32.TextOut(_In_ HDC hdc,_In_ int nXStart,_In_ int nYStart,_In_ LPCTSTR lpString,_In_ int cchString)
BOOL None gdi32.TextOutW(_In_ HDC hdc,_In_ int nXStart,_In_ int nYStart,_In_ LPCTSTR lpString,_In_ int cchString)
BOOL None gdi32.TextOutA(_In_ HDC hdc,_In_ int nXStart,_In_ int nYStart,_In_ LPCTSTR lpString,_In_ int cchString)
UINT_PTR CALLBACK None.FRHookProc(_In_ HWND hdlg,_In_ UINT uiMsg,_In_ WPARAM wParam,_In_ LPARAM lParam)
HRESULT None prntvpt.GetPrintCapabilitiesThunk2(_In_ HPTPROVIDER hProvider,_In_ BYTE *pPrintTicket,_In_ INT cbPrintTicket,_Out_ BYTE **ppbPrintCapabilities,_Out_ INT *pcbPrintCapabilitiesLength,_Out_opt_ BSTR *pbstrErrorMessage)
HRESULT WINAPI None.CreateIFELanguageInstance(_In_ REFCLSID clsid,_Out_ VOID **ppvObj)
BOOLAPI None wininet.DeleteUrlCacheEntry(_In_ LPCTSTR lpszUrlName)
BOOLAPI None wininet.DeleteUrlCacheEntryW(_In_ LPCTSTR lpszUrlName)
BOOLAPI None wininet.DeleteUrlCacheEntryA(_In_ LPCTSTR lpszUrlName)
bool None None.IS_LOW_SURROGATE(WCHAR wch None)
HRESULT None None.GetQueueMulticastAddressProp(LPCWSTR wszQueueFormatName None,LPWSTR *pwszValue None)
BOOL None wininet.InternetCheckConnection(_In_ LPCTSTR lpszUrl,_In_ DWORD dwFlags,_In_ DWORD dwReserved)
BOOL None wininet.InternetCheckConnectionW(_In_ LPCTSTR lpszUrl,_In_ DWORD dwFlags,_In_ DWORD dwReserved)
BOOL None wininet.InternetCheckConnectionA(_In_ LPCTSTR lpszUrl,_In_ DWORD dwFlags,_In_ DWORD dwReserved)
DWORD WINAPI api-ms-win-core-version-l1-1-0.VerInstallFile(_In_ DWORD uFlags,_In_ LPCTSTR szSrcFileName,_In_ LPCTSTR szDestFileName,_In_ LPCTSTR szSrcDir,_In_ LPCTSTR szDestDir,_In_ LPCTSTR szCurDir,_Out_ LPTSTR szTmpFile,_Inout_ PUINT lpuTmpFileLen)
DWORD WINAPI api-ms-win-core-version-l1-1-0.VerInstallFileW(_In_ DWORD uFlags,_In_ LPCTSTR szSrcFileName,_In_ LPCTSTR szDestFileName,_In_ LPCTSTR szSrcDir,_In_ LPCTSTR szDestDir,_In_ LPCTSTR szCurDir,_Out_ LPTSTR szTmpFile,_Inout_ PUINT lpuTmpFileLen)
DWORD WINAPI api-ms-win-core-version-l1-1-0.VerInstallFileA(_In_ DWORD uFlags,_In_ LPCTSTR szSrcFileName,_In_ LPCTSTR szDestFileName,_In_ LPCTSTR szSrcDir,_In_ LPCTSTR szDestDir,_In_ LPCTSTR szCurDir,_Out_ LPTSTR szTmpFile,_Inout_ PUINT lpuTmpFileLen)
BOOL None kernel32.EnumCalendarInfoEx(_In_ CALINFO_ENUMPROCEX pCalInfoEnumProcEx,_In_ LCID Locale,_In_ CALID Calendar,_In_ CALTYPE CalType)
BOOL None kernel32.EnumCalendarInfoExW(_In_ CALINFO_ENUMPROCEX pCalInfoEnumProcEx,_In_ LCID Locale,_In_ CALID Calendar,_In_ CALTYPE CalType)
BOOL None kernel32.EnumCalendarInfoExA(_In_ CALINFO_ENUMPROCEX pCalInfoEnumProcEx,_In_ LCID Locale,_In_ CALID Calendar,_In_ CALTYPE CalType)
BOOL CALLBACK None.EnumResNameProc(_In_opt_ HMODULE hModule,_In_ LPCTSTR lpszType,_In_ LPTSTR lpszName,_In_ LONG_PTR lParam)
BOOL CALLBACK None.EnumResNameProcW(_In_opt_ HMODULE hModule,_In_ LPCTSTR lpszType,_In_ LPTSTR lpszName,_In_ LONG_PTR lParam)
BOOL CALLBACK None.EnumResNameProcA(_In_opt_ HMODULE hModule,_In_ LPCTSTR lpszType,_In_ LPTSTR lpszName,_In_ LONG_PTR lParam)
int None None.ComboBox_InsertItemData(HWND hwndCtl None,int index None,LPARAM data None)
PSLIST_ENTRY WINAPI ntdll.RtlFirstEntrySList(_In_ PSLIST_HEADER ListHead)
int None None.ComboBox_SetCurSel(HWND hwndCtl None,int index None)
DWORD WINAPI api-ms-win-core-version-l1-1-0.GetFileVersionInfoSize(_In_ LPCTSTR lptstrFilename,_Out_opt_ LPDWORD lpdwHandle)
DWORD WINAPI api-ms-win-core-version-l1-1-0.GetFileVersionInfoSizeW(_In_ LPCTSTR lptstrFilename,_Out_opt_ LPDWORD lpdwHandle)
DWORD WINAPI api-ms-win-core-version-l1-1-0.GetFileVersionInfoSizeA(_In_ LPCTSTR lptstrFilename,_Out_opt_ LPDWORD lpdwHandle)
HRESULT None msftedit.Freeze(long *pValue None)
LRESULT None None.ComboBox_GetItemData(HWND hwndCtl None,int index None)
GEOID None kernel32.GetUserGeoID(_In_ GEOCLASS GeoClass)
void None None.ComboBox_GetDroppedControlRect(HWND hwndCtl None,RECT *lprc None)
int None None.ComboBox_GetCurSel(HWND hwndCtl None)
int None None.ComboBox_DeleteString(HWND hwndCtl None,int index None)
int None None.ComboBox_SelectString(HWND hwndCtl None,int indexStart None,LPCTSTR lpszFind None)
BOOL None None.ComboBox_Enable(HWND hwndCtl None,BOOL fEnable None)
BOOL None None.AddPrinterConnection(_In_ LPTSTR pName)
BOOL None None.AddPrinterConnectionW(_In_ LPTSTR pName)
BOOL None None.AddPrinterConnectionA(_In_ LPTSTR pName)
INT_PTR WINAPI user32.DialogBox(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc)
INT_PTR WINAPI user32.DialogBoxW(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc)
INT_PTR WINAPI user32.DialogBoxA(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc)
int None None.ComboBox_SetExtendedUI(HWND hwndCtl None,UINT flags None)
BOOL None None.ComboBox_SetCueBannerText(HWND hwnd None,LPCWSTR lpcwText None)
int None None.ComboBox_ResetContent(HWND hwndCtl None)
BOOL None None.ComboBox_ShowDropdown(HWND hwndCtl None,BOOL fShow None)
int None None.ComboBox_SelectItemData(HWND hwndCtl None,int indexStart None,LPARAM data None)
int None None.ComboBox_GetLBTextLen(HWND hwndCtl None,int index None)
UINT None None.ComboBox_GetExtendedUI(HWND hwndCtl None)
int None None.ComboBox_GetText(HWND hwndCtl None,LPTSTR lpch None,int cchMax None)
int None None.ComboBox_GetLBText(HWND hwndCtl None,int index None,LPCTSTR lpszBuffer None)
int None None.ComboBox_GetCount(HWND hwndCtl None)
int None None.ComboBox_SetItemHeight(HWND hwndCtl None,int index None,int cyItem None)
BOOL None None.ComboBox_SetMinVisible(HWND hwnd None,INT iMinVisible None)
DWORD None gdi32.GetGlyphIndices(_In_ HDC hdc,_In_ LPCTSTR lpstr,_In_ int c,_Out_ LPWORD pgi,_In_ DWORD fl)
DWORD None gdi32.GetGlyphIndicesW(_In_ HDC hdc,_In_ LPCTSTR lpstr,_In_ int c,_Out_ LPWORD pgi,_In_ DWORD fl)
DWORD None gdi32.GetGlyphIndicesA(_In_ HDC hdc,_In_ LPCTSTR lpstr,_In_ int c,_Out_ LPWORD pgi,_In_ DWORD fl)
BOOL None None.ComboBox_GetCueBannerText(HWND hwnd None,LPWSTR lpwText None,int cchText None)
int None None.ComboBox_Dir(HWND hwndCtl None,UINT attrs None,LPCTSTR lpszFileSpec None)
BOOL None wininet.InternetReadFileEx(_In_ HINTERNET hFile,_Out_ LPINTERNET_BUFFERS lpBuffersOut,_In_ DWORD dwFlags,_In_ DWORD_PTR dwContext)
BOOL None wininet.InternetReadFileExW(_In_ HINTERNET hFile,_Out_ LPINTERNET_BUFFERS lpBuffersOut,_In_ DWORD dwFlags,_In_ DWORD_PTR dwContext)
BOOL None wininet.InternetReadFileExA(_In_ HINTERNET hFile,_Out_ LPINTERNET_BUFFERS lpBuffersOut,_In_ DWORD dwFlags,_In_ DWORD_PTR dwContext)
LPSTR WINAPI user32.CharPrevExA(_In_ WORD CodePage,_In_ LPCSTR lpStart,_In_ LPCSTR lpCurrentChar,_In_ DWORD dwFlags)
LPSTR WINAPI user32.CharPrevExA(_In_ WORD CodePage,_In_ LPCSTR lpStart,_In_ LPCSTR lpCurrentChar,_In_ DWORD dwFlags)
HANDLE WINAPI kernel32.OpenMutex(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpName)
HANDLE WINAPI kernel32.OpenMutexW(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpName)
HANDLE WINAPI kernel32.OpenMutexA(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpName)
HANDLE WINAPI kernel32.OpenMutex(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpName)
HANDLE WINAPI kernel32.OpenMutexW(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpName)
HANDLE WINAPI kernel32.OpenMutexA(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpName)
LRESULT CALLBACK None.WindowProc(HWND hwnd None,WM_IME_ENDCOMPOSITION None None,WPARAM wParam None,LPARAM lParam None)
int None None.ComboBox_AddItemData(HWND hwndCtl None,LPARAM data None)
HANDLE WINAPI kernel32.OpenMutex(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpName)
HANDLE WINAPI kernel32.OpenMutexW(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpName)
HANDLE WINAPI kernel32.OpenMutexA(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpName)
HANDLE WINAPI kernel32.OpenMutex(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpName)
HANDLE WINAPI kernel32.OpenMutexW(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpName)
HANDLE WINAPI kernel32.OpenMutexA(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpName)
BOOL None None.EnumForms(_In_ HANDLE hPrinter,_In_ DWORD Level,_Out_ LPBYTE pForm,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded,_Out_ LPDWORD pcReturned)
BOOL None None.EnumFormsW(_In_ HANDLE hPrinter,_In_ DWORD Level,_Out_ LPBYTE pForm,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded,_Out_ LPDWORD pcReturned)
BOOL None None.EnumFormsA(_In_ HANDLE hPrinter,_In_ DWORD Level,_Out_ LPBYTE pForm,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded,_Out_ LPDWORD pcReturned)
HANDLE WINAPI kernel32.OpenMutex(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpName)
HANDLE WINAPI kernel32.OpenMutexW(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpName)
HANDLE WINAPI kernel32.OpenMutexA(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpName)
HANDLE WINAPI kernel32.OpenMutex(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpName)
HANDLE WINAPI kernel32.OpenMutexW(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpName)
HANDLE WINAPI kernel32.OpenMutexA(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpName)
HRESULT None msftedit.Cut(VARIANT *pVar None)
HRESULT None mrmsupport.IndexFilePath(_In_ PVOID resourceIndexer,_In_ PCWSTR filePath,_Out_ PWSTR *ppResourceUri,_Out_ ULONG *pQualifierCount,_Out_ IndexedResourceQualifier **ppQualifiers)
HRESULT None msftedit.Delete(long Unit None,long Count None,long *pDelta None)
DWORD None None.MAKELCID(WORD wLanguageID None,WORD wSortID None)
int WINAPI user32.GetKeyNameText(_In_ LONG lParam,_Out_ LPTSTR lpString,_In_ int cchSize)
int WINAPI user32.GetKeyNameTextW(_In_ LONG lParam,_Out_ LPTSTR lpString,_In_ int cchSize)
int WINAPI user32.GetKeyNameTextA(_In_ LONG lParam,_Out_ LPTSTR lpString,_In_ int cchSize)
COLORREF None None.Pager_GetBkColor(HWND hwndPager None)
int None gdi32.SetTextCharacterExtra(_In_ HDC hdc,_In_ int nCharExtra)
BOOL WINAPI kernel32.UpdateResource(_In_ HANDLE hUpdate,_In_ LPCTSTR lpType,_In_ LPCTSTR lpName,_In_ WORD wLanguage,_In_opt_ LPVOID lpData,_In_ DWORD cbData)
BOOL WINAPI kernel32.UpdateResourceW(_In_ HANDLE hUpdate,_In_ LPCTSTR lpType,_In_ LPCTSTR lpName,_In_ WORD wLanguage,_In_opt_ LPVOID lpData,_In_ DWORD cbData)
BOOL WINAPI kernel32.UpdateResourceA(_In_ HANDLE hUpdate,_In_ LPCTSTR lpType,_In_ LPCTSTR lpName,_In_ WORD wLanguage,_In_opt_ LPVOID lpData,_In_ DWORD cbData)
HRESULT None msftedit.CanPaste(VARIANT *pVar None,long Format None,long *pb None)
HRESULT None msftedit.CanPaste(VARIANT *pVar None,long Format None,long *pb None)
BOOL None kernel32.GetFileMUIPath(_In_ DWORD dwFlags,_In_ PCWSTR pcwszFilePath,_Inout_opt_ PWSTR pwszLanguage,_Inout_ PULONG pcchLanguage,_Out_opt_ PWSTR pwszFileMUIPath,_Inout_ PULONG pcchFileMUIPath,_Inout_ PULONGLONG pululEnumerator)
BOOL None gdi32.CreateScalableFontResource(_In_ DWORD fdwHidden,_In_ LPCTSTR lpszFontRes,_In_ LPCTSTR lpszFontFile,_In_ LPCTSTR lpszCurrentPath)
BOOL None gdi32.CreateScalableFontResourceW(_In_ DWORD fdwHidden,_In_ LPCTSTR lpszFontRes,_In_ LPCTSTR lpszFontFile,_In_ LPCTSTR lpszCurrentPath)
BOOL None gdi32.CreateScalableFontResourceA(_In_ DWORD fdwHidden,_In_ LPCTSTR lpszFontRes,_In_ LPCTSTR lpszFontFile,_In_ LPCTSTR lpszCurrentPath)
BOOL WINAPI user32.CharToOemBuff(_In_ LPCTSTR lpszSrc,_Out_ LPSTR lpszDst,_In_ DWORD cchDstLength)
BOOL WINAPI user32.CharToOemBuffW(_In_ LPCTSTR lpszSrc,_Out_ LPSTR lpszDst,_In_ DWORD cchDstLength)
BOOL WINAPI user32.CharToOemBuffA(_In_ LPCTSTR lpszSrc,_Out_ LPSTR lpszDst,_In_ DWORD cchDstLength)
DWORD None None.Pager_GetButtonState(HWND hwndPager None,int iButton None)
HRESULT None msftedit.GetFormattedText(ITextRange **ppRange None)
DWORD None None.EnumPrinterData(_In_ HANDLE hPrinter,_In_ DWORD dwIndex,_Out_ LPTSTR pValueName,_In_ DWORD cbValueName,_Out_ LPDWORD pcbValueName,_Out_ LPDWORD pType,_Out_ LPBYTE pData,_In_ DWORD cbData,_Out_ LPDWORD pcbData)
DWORD None None.EnumPrinterDataW(_In_ HANDLE hPrinter,_In_ DWORD dwIndex,_Out_ LPTSTR pValueName,_In_ DWORD cbValueName,_Out_ LPDWORD pcbValueName,_Out_ LPDWORD pType,_Out_ LPBYTE pData,_In_ DWORD cbData,_Out_ LPDWORD pcbData)
DWORD None None.EnumPrinterDataA(_In_ HANDLE hPrinter,_In_ DWORD dwIndex,_Out_ LPTSTR pValueName,_In_ DWORD cbValueName,_Out_ LPDWORD pcbValueName,_Out_ LPDWORD pType,_Out_ LPBYTE pData,_In_ DWORD cbData,_Out_ LPDWORD pcbData)
BOOL None wininet.InternetCreateUrl(_In_ LPURL_COMPONENTS lpUrlComponents,_In_ DWORD dwFlags,_Out_ LPTSTR lpszUrl,_Inout_ LPDWORD lpdwUrlLength)
BOOL None wininet.InternetCreateUrlW(_In_ LPURL_COMPONENTS lpUrlComponents,_In_ DWORD dwFlags,_Out_ LPTSTR lpszUrl,_Inout_ LPDWORD lpdwUrlLength)
BOOL None wininet.InternetCreateUrlA(_In_ LPURL_COMPONENTS lpUrlComponents,_In_ DWORD dwFlags,_Out_ LPTSTR lpszUrl,_Inout_ LPDWORD lpdwUrlLength)
BOOL None None.SetForm(_In_ HANDLE hPrinter,_In_ LPTSTR pFormName,_In_ DWORD Level,_In_ LPTSTR pForm)
BOOL None None.SetFormW(_In_ HANDLE hPrinter,_In_ LPTSTR pFormName,_In_ DWORD Level,_In_ LPTSTR pForm)
BOOL None None.SetFormA(_In_ HANDLE hPrinter,_In_ LPTSTR pFormName,_In_ DWORD Level,_In_ LPTSTR pForm)
int WINAPI user32.MessageBoxEx(_In_opt_ HWND hWnd,_In_opt_ LPCTSTR lpText,_In_opt_ LPCTSTR lpCaption,_In_ UINT uType,_In_ WORD wLanguageId)
int WINAPI user32.MessageBoxExW(_In_opt_ HWND hWnd,_In_opt_ LPCTSTR lpText,_In_opt_ LPCTSTR lpCaption,_In_ UINT uType,_In_ WORD wLanguageId)
int WINAPI user32.MessageBoxExA(_In_opt_ HWND hWnd,_In_opt_ LPCTSTR lpText,_In_opt_ LPCTSTR lpCaption,_In_ UINT uType,_In_ WORD wLanguageId)
BOOL None wininet.InternetGetConnectedState(_Out_ LPDWORD lpdwFlags,_In_ DWORD dwReserved)
HDC None user32.BeginPaint(_In_ HWND hwnd,_Out_ LPPAINTSTRUCT lpPaint)
DWORD WINAPI api-ms-win-core-version-l1-1-0.VerInstallFile(_In_ DWORD uFlags,_In_ LPCTSTR szSrcFileName,_In_ LPCTSTR szDestFileName,_In_ LPCTSTR szSrcDir,_In_ LPCTSTR szDestDir,_In_ LPCTSTR szCurDir,_Out_ LPTSTR szTmpFile,_Inout_ PUINT lpuTmpFileLen)
DWORD WINAPI api-ms-win-core-version-l1-1-0.VerInstallFileW(_In_ DWORD uFlags,_In_ LPCTSTR szSrcFileName,_In_ LPCTSTR szDestFileName,_In_ LPCTSTR szSrcDir,_In_ LPCTSTR szDestDir,_In_ LPCTSTR szCurDir,_Out_ LPTSTR szTmpFile,_Inout_ PUINT lpuTmpFileLen)
DWORD WINAPI api-ms-win-core-version-l1-1-0.VerInstallFileA(_In_ DWORD uFlags,_In_ LPCTSTR szSrcFileName,_In_ LPCTSTR szDestFileName,_In_ LPCTSTR szSrcDir,_In_ LPCTSTR szDestDir,_In_ LPCTSTR szCurDir,_Out_ LPTSTR szTmpFile,_Inout_ PUINT lpuTmpFileLen)
BOOL None None.SetForm(_In_ HANDLE hPrinter,_In_ LPTSTR pFormName,_In_ DWORD Level,_In_ LPTSTR pForm)
BOOL None None.SetFormW(_In_ HANDLE hPrinter,_In_ LPTSTR pFormName,_In_ DWORD Level,_In_ LPTSTR pForm)
BOOL None None.SetFormA(_In_ HANDLE hPrinter,_In_ LPTSTR pFormName,_In_ DWORD Level,_In_ LPTSTR pForm)
COLORREF None gdi32.GetTextColor(_In_ HDC hdc)
bool None None.IS_HIGH_SURROGATE(WCHAR wch None)
BOOLAPI None wininet.InternetUnlockRequestFile(_In_ HANDLE hLockRequestInfo)
BOOL None spoolss.FindClosePrinterChangeNotification(_In_ HANDLE hChange)
BOOLAPI None wininet.ReadUrlCacheEntryStream(_In_ HANDLE hUrlCacheStream,_In_ DWORD dwLocation,_Inout_ LPVOID lpBuffer,_Inout_ LPDWORD lpdwLen,_In_ DWORD dwReserved)
DWORD WINAPI api-ms-win-core-localization-l1-2-1.VerLanguageName(_In_ DWORD wLang,_Out_ LPTSTR szLang,_In_ DWORD cchLang)
DWORD WINAPI api-ms-win-core-localization-l1-2-1.VerLanguageNameW(_In_ DWORD wLang,_Out_ LPTSTR szLang,_In_ DWORD cchLang)
DWORD WINAPI api-ms-win-core-localization-l1-2-1.VerLanguageNameA(_In_ DWORD wLang,_Out_ LPTSTR szLang,_In_ DWORD cchLang)
int None gdi32.EnumFontFamiliesEx(_In_ HDC hdc,_In_ LPLOGFONT lpLogfont,_In_ FONTENUMPROC lpEnumFontFamExProc,_In_ LPARAM lParam,DWORD dwFlags None)
int None gdi32.EnumFontFamiliesExW(_In_ HDC hdc,_In_ LPLOGFONT lpLogfont,_In_ FONTENUMPROC lpEnumFontFamExProc,_In_ LPARAM lParam,DWORD dwFlags None)
int None gdi32.EnumFontFamiliesExA(_In_ HDC hdc,_In_ LPLOGFONT lpLogfont,_In_ FONTENUMPROC lpEnumFontFamExProc,_In_ LPARAM lParam,DWORD dwFlags None)
void None msftedit.TxViewChange([in] BOOL fUpdate)
COLORREF None gdi32.SetBkColor(_In_ HDC hdc,_In_ COLORREF crColor)
BOOL None wininet.InternetCanonicalizeUrl(_In_ LPCTSTR lpszUrl,_Out_ LPTSTR lpszBuffer,_Inout_ LPDWORD lpdwBufferLength,_In_ DWORD dwFlags)
BOOL None wininet.InternetCanonicalizeUrlW(_In_ LPCTSTR lpszUrl,_Out_ LPTSTR lpszBuffer,_Inout_ LPDWORD lpdwBufferLength,_In_ DWORD dwFlags)
BOOL None wininet.InternetCanonicalizeUrlA(_In_ LPCTSTR lpszUrl,_Out_ LPTSTR lpszBuffer,_Inout_ LPDWORD lpdwBufferLength,_In_ DWORD dwFlags)
BOOL None jsproxy.InternetInitializeAutoProxyDll(_In_ DWORD dwReserved)
BOOL WINAPI user32.SetDlgItemInt(_In_ HWND hDlg,_In_ int nIDDlgItem,_In_ UINT uValue,_In_ BOOL bSigned)
LONG WINAPI advapi32.RegCreateKey(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_Out_ PHKEY phkResult)
LONG WINAPI advapi32.RegCreateKeyW(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_Out_ PHKEY phkResult)
LONG WINAPI advapi32.RegCreateKeyA(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_Out_ PHKEY phkResult)
UINT WINAPI user32.GetDlgItemInt(_In_ HWND hDlg,_In_ int nIDDlgItem,_Out_opt_ BOOL *lpTranslated,_In_ BOOL bSigned)
BOOL WINAPI winhttp.WinHttpQueryOption(_In_ HINTERNET hInternet,_In_ DWORD dwOption,_Out_ LPVOID lpBuffer,_Inout_ LPDWORD lpdwBufferLength)
HRESULT None msftedit.SetSaved([in] long Bool)
BOOL None wininet.FtpGetCurrentDirectory(_In_ HINTERNET hConnect,_Out_ LPTSTR lpszCurrentDirectory,_Inout_ LPDWORD lpdwCurrentDirectory)
BOOL None wininet.FtpGetCurrentDirectoryW(_In_ HINTERNET hConnect,_Out_ LPTSTR lpszCurrentDirectory,_Inout_ LPDWORD lpdwCurrentDirectory)
BOOL None wininet.FtpGetCurrentDirectoryA(_In_ HINTERNET hConnect,_Out_ LPTSTR lpszCurrentDirectory,_Inout_ LPDWORD lpdwCurrentDirectory)
HRESULT None msftedit.TxGetHScroll(LONG *plMin None,LONG *plMax None,LONG *plPos None,LONG *plPage None,BOOL *pfEnabled None)
LONG None t2embed.TTLoadEmbeddedFont(_Out_ HANDLE *phFontReference,_In_ ULONG ulFlags,_Out_ ULONG *pulPrivStatus,_In_ ULONG ulPrivs,_Out_ ULONG *pulStatus,_In_ READEMBEDPROC lpfnReadFromStream,_In_ LPVOID lpvReadStream,_In_opt_ LPWSTR szWinFamilyName,_In_opt_ LPSTR szMacFamilyName,_In_opt_ TTLOADINFO *pTTLoadInfo)
HRESULT None spoolss.ReportJobProcessingProgress(_In_ HANDLE printerHandle,_In_ ULONG jobId,EPrintXPSJobOperation jobOperation None,EPrintXPSJobProgress jobProgress None)
DWORD None gdi32.GetFontUnicodeRanges(_In_ HDC hdc,_Out_ LPGLYPHSET lpgs)
HRESULT None None.RequestingAcknowledgment(LPCWSTR wszDestQueueFormatName None,LPCWSTR wszAdminQueueFormatName None,UCHAR bAckLevel None,ULONG ulTimeToBeReceived None)
HWND WINAPI comdlg32.ReplaceText(_Inout_ LPFINDREPLACE lpfr)
HWND WINAPI comdlg32.ReplaceTextW(_Inout_ LPFINDREPLACE lpfr)
HWND WINAPI comdlg32.ReplaceTextA(_Inout_ LPFINDREPLACE lpfr)
BOOL None wininet.HttpSendRequestEx(_In_ HINTERNET hRequest,_In_ LPINTERNET_BUFFERS lpBuffersIn,_Out_ LPINTERNET_BUFFERS lpBuffersOut,_In_ DWORD dwFlags,_In_ DWORD_PTR dwContext)
BOOL None wininet.HttpSendRequestExW(_In_ HINTERNET hRequest,_In_ LPINTERNET_BUFFERS lpBuffersIn,_Out_ LPINTERNET_BUFFERS lpBuffersOut,_In_ DWORD dwFlags,_In_ DWORD_PTR dwContext)
BOOL None wininet.HttpSendRequestExA(_In_ HINTERNET hRequest,_In_ LPINTERNET_BUFFERS lpBuffersIn,_Out_ LPINTERNET_BUFFERS lpBuffersOut,_In_ DWORD dwFlags,_In_ DWORD_PTR dwContext)
UINT_PTR CALLBACK None.CFHookProc(_In_ HWND hdlg,_In_ UINT uiMsg,_In_ WPARAM wParam,_In_ LPARAM lParam)
HINTERNET None wininet.FtpFindFirstFile(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszSearchFile,_Out_ LPWIN32_FIND_DATA lpFindFileData,_In_ DWORD dwFlags,_In_ DWORD_PTR dwContext)
HINTERNET None wininet.FtpFindFirstFileW(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszSearchFile,_Out_ LPWIN32_FIND_DATA lpFindFileData,_In_ DWORD dwFlags,_In_ DWORD_PTR dwContext)
HINTERNET None wininet.FtpFindFirstFileA(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszSearchFile,_Out_ LPWIN32_FIND_DATA lpFindFileData,_In_ DWORD dwFlags,_In_ DWORD_PTR dwContext)
BOOL None None.ConfigurePort(_In_ LPTSTR pName,_In_ HWND hWnd,_In_ LPTSTR pPortName)
BOOL None None.ConfigurePortW(_In_ LPTSTR pName,_In_ HWND hWnd,_In_ LPTSTR pPortName)
BOOL None None.ConfigurePortA(_In_ LPTSTR pName,_In_ HWND hWnd,_In_ LPTSTR pPortName)
COLORREF None gdi32.SetTextColor(_In_ HDC hdc,_In_ COLORREF crColor)
UINT_PTR CALLBACK None.OFNHookProc(_In_ HWND hdlg,_In_ UINT uiMsg,_In_ WPARAM wParam,_In_ LPARAM lParam)
BOOL None gdi32.GetTextExtentPoint(_In_ HDC hdc,_In_ LPCTSTR lpString,_In_ int cbString,_Out_ LPSIZE lpSize)
BOOL None gdi32.GetTextExtentPointW(_In_ HDC hdc,_In_ LPCTSTR lpString,_In_ int cbString,_Out_ LPSIZE lpSize)
BOOL None gdi32.GetTextExtentPointA(_In_ HDC hdc,_In_ LPCTSTR lpString,_In_ int cbString,_Out_ LPSIZE lpSize)
HRESULT None msftedit.CanPaste(VARIANT *pVar None,long Format None,long *pb None)
DWORD None wininet.FtpGetFileSize(_In_ HINTERNET hFile,_Out_ LPDWORD lpdwFileSizeHigh)
BOOL None wininet.FtpGetCurrentDirectory(_In_ HINTERNET hConnect,_Out_ LPTSTR lpszCurrentDirectory,_Inout_ LPDWORD lpdwCurrentDirectory)
BOOL None wininet.FtpGetCurrentDirectoryW(_In_ HINTERNET hConnect,_Out_ LPTSTR lpszCurrentDirectory,_Inout_ LPDWORD lpdwCurrentDirectory)
BOOL None wininet.FtpGetCurrentDirectoryA(_In_ HINTERNET hConnect,_Out_ LPTSTR lpszCurrentDirectory,_Inout_ LPDWORD lpdwCurrentDirectory)
BOOL None wininet.DetectAutoProxyUrl(_Inout_ LPSTR lpszAutoProxyUrl,_In_ DWORD dwAutoProxyUrlLength,_In_ DWORD dwDetectFlags)
HRESULT None msftedit.TxActivate(LONG *plOldState None)
BOOL WINAPI winhttp.WinHttpReadData(_In_ HINTERNET hRequest,_Out_ LPVOID lpBuffer,_In_ DWORD dwNumberOfBytesToRead,_Out_ LPDWORD lpdwNumberOfBytesRead)
DWORD None wininet.InternetHangUp(_In_ DWORD_PTR dwConnection,_In_ DWORD dwReserved)
HRESULT None msftedit.CanPaste(VARIANT *pVar None,long Format None,long *pb None)
BOOL None wininet.GetUrlCacheEntryInfo(_In_ LPCTSTR lpszUrlName,_Out_ LPINTERNET_CACHE_ENTRY_INFO lpCacheEntryInfo,_Inout_ LPDWORD lpcbCacheEntryInfo)
BOOL None wininet.GetUrlCacheEntryInfoW(_In_ LPCTSTR lpszUrlName,_Out_ LPINTERNET_CACHE_ENTRY_INFO lpCacheEntryInfo,_Inout_ LPDWORD lpcbCacheEntryInfo)
BOOL None wininet.GetUrlCacheEntryInfoA(_In_ LPCTSTR lpszUrlName,_Out_ LPINTERNET_CACHE_ENTRY_INFO lpCacheEntryInfo,_Inout_ LPDWORD lpcbCacheEntryInfo)
BOOL WINAPI api-ms-win-core-version-l1-1-0.VerQueryValue(_In_ LPCVOID pBlock,_In_ LPCTSTR lpSubBlock,_Out_ LPVOID *lplpBuffer,_Out_ PUINT puLen)
BOOL WINAPI api-ms-win-core-version-l1-1-0.VerQueryValueW(_In_ LPCVOID pBlock,_In_ LPCTSTR lpSubBlock,_Out_ LPVOID *lplpBuffer,_Out_ PUINT puLen)
BOOL WINAPI api-ms-win-core-version-l1-1-0.VerQueryValueA(_In_ LPCVOID pBlock,_In_ LPCTSTR lpSubBlock,_Out_ LPVOID *lplpBuffer,_Out_ PUINT puLen)
int None user32.DlgDirListComboBox(_In_ HWND hDlg,_Inout_ LPTSTR lpPathSpec,_In_ int nIDComboBox,_In_ int nIDStaticPath,_In_ UINT uFiletype)
int None user32.DlgDirListComboBoxW(_In_ HWND hDlg,_Inout_ LPTSTR lpPathSpec,_In_ int nIDComboBox,_In_ int nIDStaticPath,_In_ UINT uFiletype)
int None user32.DlgDirListComboBoxA(_In_ HWND hDlg,_Inout_ LPTSTR lpPathSpec,_In_ int nIDComboBox,_In_ int nIDStaticPath,_In_ UINT uFiletype)
HRESULT None msftedit.EndOf(long Unit None,long Extend None,long *pDelta None)
BOOL None spoolss.EndPagePrinter(_In_ HANDLE hPrinter)
HRESULT None msftedit.SetIndex([in] long Unit,[in] long Index,[in] long Extend)
HRESULT None msftedit.CanPaste(VARIANT *pVar None,long Format None,long *pb None)
HINTERNET None wininet.HttpOpenRequest(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszVerb,_In_ LPCTSTR lpszObjectName,_In_ LPCTSTR lpszVersion,_In_ LPCTSTR lpszReferer,_In_ LPCTSTR *lplpszAcceptTypes,_In_ DWORD dwFlags,_In_ DWORD_PTR dwContext)
HINTERNET None wininet.HttpOpenRequestW(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszVerb,_In_ LPCTSTR lpszObjectName,_In_ LPCTSTR lpszVersion,_In_ LPCTSTR lpszReferer,_In_ LPCTSTR *lplpszAcceptTypes,_In_ DWORD dwFlags,_In_ DWORD_PTR dwContext)
HINTERNET None wininet.HttpOpenRequestA(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszVerb,_In_ LPCTSTR lpszObjectName,_In_ LPCTSTR lpszVersion,_In_ LPCTSTR lpszReferer,_In_ LPCTSTR *lplpszAcceptTypes,_In_ DWORD dwFlags,_In_ DWORD_PTR dwContext)
BOOL None gdi32.Ellipse(_In_ HDC hdc,_In_ int nLeftRect,_In_ int nTopRect,_In_ int nRightRect,_In_ int nBottomRect)
BOOL None wininet.InternetCreateUrl(_In_ LPURL_COMPONENTS lpUrlComponents,_In_ DWORD dwFlags,_Out_ LPTSTR lpszUrl,_Inout_ LPDWORD lpdwUrlLength)
BOOL None wininet.InternetCreateUrlW(_In_ LPURL_COMPONENTS lpUrlComponents,_In_ DWORD dwFlags,_Out_ LPTSTR lpszUrl,_Inout_ LPDWORD lpdwUrlLength)
BOOL None wininet.InternetCreateUrlA(_In_ LPURL_COMPONENTS lpUrlComponents,_In_ DWORD dwFlags,_Out_ LPTSTR lpszUrl,_Inout_ LPDWORD lpdwUrlLength)
HRESULT WINAPI None.IsWow64GuestMachineSupported(_In_ USHORT WowGuestMachine,_Out_ BOOLEAN *MachineIsSupported)
HRESULT None msftedit.GetStoryCount(LONG *pCount None)
HANDLE None wininet.FindFirstUrlCacheGroup(_Reserved_ DWORD dwFlags,_In_ DWORD dwFilter,_Reserved_ LPVOID lpSearchCondition,_Reserved_ DWORD dwSearchCondition,_Out_ GROUPID *lpGroupId,_Reserved_ LPVOID lpReserved)
int CALLBACK None.EnumFontFamProc(_In_ ENUMLOGFONT *lpelf,_In_ NEWTEXTMETRIC *lpntm,_In_ DWORD FontType,_In_ LPARAM lParam)
int CALLBACK None.EnumFontFamProcW(_In_ ENUMLOGFONT *lpelf,_In_ NEWTEXTMETRIC *lpntm,_In_ DWORD FontType,_In_ LPARAM lParam)
int CALLBACK None.EnumFontFamProcA(_In_ ENUMLOGFONT *lpelf,_In_ NEWTEXTMETRIC *lpntm,_In_ DWORD FontType,_In_ LPARAM lParam)
DWORD None None.SetPrinterDataEx(_In_ HANDLE hPrinter,_In_ LPCTSTR pKeyName,_In_ LPCTSTR pValueName,_In_ DWORD Type,_In_ LPBYTE pData,_In_ DWORD cbData)
DWORD None None.SetPrinterDataExW(_In_ HANDLE hPrinter,_In_ LPCTSTR pKeyName,_In_ LPCTSTR pValueName,_In_ DWORD Type,_In_ LPBYTE pData,_In_ DWORD cbData)
DWORD None None.SetPrinterDataExA(_In_ HANDLE hPrinter,_In_ LPCTSTR pKeyName,_In_ LPCTSTR pValueName,_In_ DWORD Type,_In_ LPBYTE pData,_In_ DWORD cbData)
HRESULT WINAPI gamingtcui.CheckGamingPrivilegeWithUI(_In_ UINT32 privilegeId,_In_ HSTRING scope,_In_ HSTRING policy,_In_opt_ HSTRING friendlyMessage,_In_ GameUICompletionRoutine completionRoutine,_In_opt_ void *context)
HRESULT None None.Initialize(IUnknown *lpIImePad None)
int WINAPI kernel32.lstrcmp(_In_ LPCTSTR lpString1,_In_ LPCTSTR lpString2)
int WINAPI kernel32.lstrcmpW(_In_ LPCTSTR lpString1,_In_ LPCTSTR lpString2)
int WINAPI kernel32.lstrcmpA(_In_ LPCTSTR lpString1,_In_ LPCTSTR lpString2)
BOOLAPI None wininet.UnlockUrlCacheEntryStream(_In_ HANDLE hUrlCacheStream,_In_ DWORD dwReserved)
BOOL None jsproxy.InternetDeInitializeAutoProxyDll(_In_ LPSTR lpszMime,_In_ DWORD dwReserved)
HINTERNET None wininet.InternetOpenUrl(_In_ HINTERNET hInternet,_In_ LPCTSTR lpszUrl,_In_ LPCTSTR lpszHeaders,_In_ DWORD dwHeadersLength,_In_ DWORD dwFlags,_In_ DWORD_PTR dwContext)
HINTERNET None wininet.InternetOpenUrlW(_In_ HINTERNET hInternet,_In_ LPCTSTR lpszUrl,_In_ LPCTSTR lpszHeaders,_In_ DWORD dwHeadersLength,_In_ DWORD dwFlags,_In_ DWORD_PTR dwContext)
HINTERNET None wininet.InternetOpenUrlA(_In_ HINTERNET hInternet,_In_ LPCTSTR lpszUrl,_In_ LPCTSTR lpszHeaders,_In_ DWORD dwHeadersLength,_In_ DWORD dwFlags,_In_ DWORD_PTR dwContext)
HGLOBAL WINAPI kernel32.LoadResource(_In_opt_ HMODULE hModule,_In_ HRSRC hResInfo)
BOOL None wininet.FtpRemoveDirectory(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszDirectory)
BOOL None wininet.FtpRemoveDirectoryW(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszDirectory)
BOOL None wininet.FtpRemoveDirectoryA(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszDirectory)
BOOL WINAPI winhttp.WinHttpDetectAutoProxyConfigUrl(_In_ DWORD dwAutoDetectFlags,_Out_ LPWSTR *ppwszAutoConfigUrl)
BOOL None None.GopherAttributeEnumerator(LPGOPHER_ATTRIBUTE_TYPE lpAttributeInfo None,DWORD dwError None)
HINTERNET WINAPI winhttp.WinHttpOpen(_In_opt_ LPCWSTR pwszUserAgent,_In_ DWORD dwAccessType,_In_ LPCWSTR pwszProxyName,_In_ LPCWSTR pwszProxyBypass,_In_ DWORD dwFlags)
HRSRC WINAPI kernel32.FindResource(_In_opt_ HMODULE hModule,_In_ LPCTSTR lpName,_In_ LPCTSTR lpType)
HRSRC WINAPI kernel32.FindResourceW(_In_opt_ HMODULE hModule,_In_ LPCTSTR lpName,_In_ LPCTSTR lpType)
HRSRC WINAPI kernel32.FindResourceA(_In_opt_ HMODULE hModule,_In_ LPCTSTR lpName,_In_ LPCTSTR lpType)
HRESULT None msftedit.ScrollIntoView(long bStart None)
HRESULT None msftedit.TxSetText([in] LPCTSTR pszText)
HRESULT None msftedit.CanPaste(VARIANT *pVar None,long Format None,long *pb None)
COLORREF None None.Pager_SetBkColor(HWND hwndPager None,COLORREF clrBk None)
BOOL None wininet.HttpEndRequest(_In_ HINTERNET hRequest,_Out_opt_ LPINTERNET_BUFFERS lpBuffersOut,_In_ DWORD dwFlags,_In_opt_ DWORD_PTR dwContext)
BOOL None wininet.HttpEndRequestW(_In_ HINTERNET hRequest,_Out_opt_ LPINTERNET_BUFFERS lpBuffersOut,_In_ DWORD dwFlags,_In_opt_ DWORD_PTR dwContext)
BOOL None wininet.HttpEndRequestA(_In_ HINTERNET hRequest,_Out_opt_ LPINTERNET_BUFFERS lpBuffersOut,_In_ DWORD dwFlags,_In_opt_ DWORD_PTR dwContext)
int None gdi32.AddFontResourceEx(_In_ LPCTSTR lpszFilename,_In_ DWORD fl,_In_ PVOID pdv)
int None gdi32.AddFontResourceExW(_In_ LPCTSTR lpszFilename,_In_ DWORD fl,_In_ PVOID pdv)
int None gdi32.AddFontResourceExA(_In_ LPCTSTR lpszFilename,_In_ DWORD fl,_In_ PVOID pdv)
DWORD None None.EnumPrinterKey(_In_ HANDLE hPrinter,_In_ LPCTSTR pKeyName,_Out_ LPTSTR pSubkey,_In_ DWORD cbSubkey,_Out_ LPDWORD pcbSubkey)
DWORD None None.EnumPrinterKeyW(_In_ HANDLE hPrinter,_In_ LPCTSTR pKeyName,_Out_ LPTSTR pSubkey,_In_ DWORD cbSubkey,_Out_ LPDWORD pcbSubkey)
DWORD None None.EnumPrinterKeyA(_In_ HANDLE hPrinter,_In_ LPCTSTR pKeyName,_Out_ LPTSTR pSubkey,_In_ DWORD cbSubkey,_Out_ LPDWORD pcbSubkey)
BOOL WINAPI user32.GetMenuItemInfo(_In_ HMENU hMenu,_In_ UINT uItem,_In_ BOOL fByPosition,_Inout_ LPMENUITEMINFO lpmii)
BOOL WINAPI user32.GetMenuItemInfoW(_In_ HMENU hMenu,_In_ UINT uItem,_In_ BOOL fByPosition,_Inout_ LPMENUITEMINFO lpmii)
BOOL WINAPI user32.GetMenuItemInfoA(_In_ HMENU hMenu,_In_ UINT uItem,_In_ BOOL fByPosition,_Inout_ LPMENUITEMINFO lpmii)
BOOL None wininet.InternetCreateUrl(_In_ LPURL_COMPONENTS lpUrlComponents,_In_ DWORD dwFlags,_Out_ LPTSTR lpszUrl,_Inout_ LPDWORD lpdwUrlLength)
BOOL None wininet.InternetCreateUrlW(_In_ LPURL_COMPONENTS lpUrlComponents,_In_ DWORD dwFlags,_Out_ LPTSTR lpszUrl,_Inout_ LPDWORD lpdwUrlLength)
BOOL None wininet.InternetCreateUrlA(_In_ LPURL_COMPONENTS lpUrlComponents,_In_ DWORD dwFlags,_Out_ LPTSTR lpszUrl,_Inout_ LPDWORD lpdwUrlLength)
BOOL None wininet.InternetGoOnline(_In_ LPTSTR lpszURL,_In_ HWND hwndParent,_In_ DWORD dwFlags)
BOOL None wininet.InternetGoOnlineW(_In_ LPTSTR lpszURL,_In_ HWND hwndParent,_In_ DWORD dwFlags)
BOOL None wininet.InternetGoOnlineA(_In_ LPTSTR lpszURL,_In_ HWND hwndParent,_In_ DWORD dwFlags)
BOOL WINAPI comdlg32.GetOpenFileName(_Inout_ LPOPENFILENAME lpofn)
BOOL WINAPI comdlg32.GetOpenFileNameW(_Inout_ LPOPENFILENAME lpofn)
BOOL WINAPI comdlg32.GetOpenFileNameA(_Inout_ LPOPENFILENAME lpofn)
BOOL None spoolss.FreePrinterNotifyInfo(_In_ PPRINTER_NOTIFY_INFO pPrinterNotifyInfo)
BOOL CALLBACK None.EnumGeoInfoProc(_In_ GEOID GeoId)
BOOL WINAPI user32.CharToOemBuff(_In_ LPCTSTR lpszSrc,_Out_ LPSTR lpszDst,_In_ DWORD cchDstLength)
BOOL WINAPI user32.CharToOemBuffW(_In_ LPCTSTR lpszSrc,_Out_ LPSTR lpszDst,_In_ DWORD cchDstLength)
BOOL WINAPI user32.CharToOemBuffA(_In_ LPCTSTR lpszSrc,_Out_ LPSTR lpszDst,_In_ DWORD cchDstLength)
BOOLAPI None wininet.FindCloseUrlCache(_In_ HANDLE hEnumHandle)
DWORD None None.GetPrinterData(_In_ HANDLE hPrinter,_In_ LPTSTR pValueName,_Out_ LPDWORD pType,_Out_ LPBYTE pData,_In_ DWORD nSize,_Out_ LPDWORD pcbNeeded)
DWORD None None.GetPrinterDataW(_In_ HANDLE hPrinter,_In_ LPTSTR pValueName,_Out_ LPDWORD pType,_Out_ LPBYTE pData,_In_ DWORD nSize,_Out_ LPDWORD pcbNeeded)
DWORD None None.GetPrinterDataA(_In_ HANDLE hPrinter,_In_ LPTSTR pValueName,_Out_ LPDWORD pType,_Out_ LPBYTE pData,_In_ DWORD nSize,_Out_ LPDWORD pcbNeeded)
BOOL WINAPI user32.AdjustWindowRect(_Inout_ LPRECT lpRect,_In_ DWORD dwStyle,_In_ BOOL bMenu)
HRESULT None msftedit.CanPaste(VARIANT *pVar None,long Format None,long *pb None)
DWORD WINAPI user32.GetSysColor(_In_ int nIndex)
BOOL None None.IsValidDevmode(_In_ PDEVMODE pDevmode,size_t DevmodeSize None)
BOOL None None.IsValidDevmodeW(_In_ PDEVMODE pDevmode,size_t DevmodeSize None)
BOOL None None.IsValidDevmodeA(_In_ PDEVMODE pDevmode,size_t DevmodeSize None)
HANDLE WINAPI user32.CopyImage(_In_ HANDLE hImage,_In_ UINT uType,_In_ int cxDesired,_In_ int cyDesired,_In_ UINT fuFlags)
void None mrmsupport.DestroyIndexedResults(_In_opt_ PWSTR resourceUri,_In_ ULONG qualifierCount,_In_opt_ IndexedResourceQualifier *qualifiers)
BOOL None spoolss.WritePrinter(_In_ HANDLE hPrinter,_In_ LPVOID pBuf,_In_ DWORD cbBuf,_Out_ LPDWORD pcWritten)
BOOL None spoolss.StartPagePrinter(_In_ HANDLE hPrinter)
BOOL None wininet.InternetSetOption(_In_ HINTERNET hInternet,_In_ DWORD dwOption,_In_ LPVOID lpBuffer,_In_ DWORD dwBufferLength)
BOOL None wininet.InternetSetOptionW(_In_ HINTERNET hInternet,_In_ DWORD dwOption,_In_ LPVOID lpBuffer,_In_ DWORD dwBufferLength)
BOOL None wininet.InternetSetOptionA(_In_ HINTERNET hInternet,_In_ DWORD dwOption,_In_ LPVOID lpBuffer,_In_ DWORD dwBufferLength)
DWORD WINAPI wininet.PrivacyGetZonePreferenceW(_In_ DWORD dwZone,_In_ DWORD dwType,_Out_opt_ LPDWORD pdwTemplate,_Out_opt_ LPWSTR *pszBuffer,_Inout_opt_ LPDWORD pdwBufferLength)
DWORD WINAPI wininet.PrivacyGetZonePreferenceW(_In_ DWORD dwZone,_In_ DWORD dwType,_Out_opt_ LPDWORD pdwTemplate,_Out_opt_ LPWSTR *pszBuffer,_Inout_opt_ LPDWORD pdwBufferLength)
BOOL None wininet.FindNextUrlCacheGroup(_In_ HANDLE hFind,_Out_ GROUPID *lpGroupId,_Reserved_ LPVOID lpReserved)
int WINAPI user32.GetKeyNameText(_In_ LONG lParam,_Out_ LPTSTR lpString,_In_ int cchSize)
int WINAPI user32.GetKeyNameTextW(_In_ LONG lParam,_Out_ LPTSTR lpString,_In_ int cchSize)
int WINAPI user32.GetKeyNameTextA(_In_ LONG lParam,_Out_ LPTSTR lpString,_In_ int cchSize)
BOOL None spoolss.AddForm(_In_ HANDLE hPrinter,_In_ DWORD Level,_In_ LPBYTE pForm)
HRESULT None None.GetQueueTypeProp(LPCWSTR wszQueueFormatName None,CLSID *pIDValue None)
UINT WINAPI user32.GetDlgItemText(_In_ HWND hDlg,_In_ int nIDDlgItem,_Out_ LPTSTR lpString,_In_ int nMaxCount)
UINT WINAPI user32.GetDlgItemTextW(_In_ HWND hDlg,_In_ int nIDDlgItem,_Out_ LPTSTR lpString,_In_ int nMaxCount)
UINT WINAPI user32.GetDlgItemTextA(_In_ HWND hDlg,_In_ int nIDDlgItem,_Out_ LPTSTR lpString,_In_ int nMaxCount)
BOOL None kernel32.SetThreadLocale(_In_ LCID Locale)
HANDLE None wininet.FindFirstUrlCacheEntryEx(_In_ LPCTSTR lpszUrlSearchPattern,_In_ DWORD dwFlags,_In_ DWORD dwFilter,_In_ GROUPID GroupId,_Out_ LPINTERNET_CACHE_ENTRY_INFO lpFirstCacheEntryInfo,_Inout_ LPDWORD lpdwEntryInfo,_Reserved_ LPVOID lpGroupAttributes,_Reserved_ LPDWORD lpcbGroupAttributes,_Reserved_ LPVOID lpReserved)
HANDLE None wininet.FindFirstUrlCacheEntryExW(_In_ LPCTSTR lpszUrlSearchPattern,_In_ DWORD dwFlags,_In_ DWORD dwFilter,_In_ GROUPID GroupId,_Out_ LPINTERNET_CACHE_ENTRY_INFO lpFirstCacheEntryInfo,_Inout_ LPDWORD lpdwEntryInfo,_Reserved_ LPVOID lpGroupAttributes,_Reserved_ LPDWORD lpcbGroupAttributes,_Reserved_ LPVOID lpReserved)
HANDLE None wininet.FindFirstUrlCacheEntryExA(_In_ LPCTSTR lpszUrlSearchPattern,_In_ DWORD dwFlags,_In_ DWORD dwFilter,_In_ GROUPID GroupId,_Out_ LPINTERNET_CACHE_ENTRY_INFO lpFirstCacheEntryInfo,_Inout_ LPDWORD lpdwEntryInfo,_Reserved_ LPVOID lpGroupAttributes,_Reserved_ LPDWORD lpcbGroupAttributes,_Reserved_ LPVOID lpReserved)
DWORD WINAPI winhttp.WinHttpWebSocketShutdown(_In_ HINTERNET hWebSocket,_In_ USHORT usStatus,_In_opt_ PVOID pvReason,_In_ DWORD dwReasonLength)
HINTERNET None wininet.InternetConnect(_In_ HINTERNET hInternet,_In_ LPCTSTR lpszServerName,_In_ INTERNET_PORT nServerPort,_In_ LPCTSTR lpszUsername,_In_ LPCTSTR lpszPassword,_In_ DWORD dwService,_In_ DWORD dwFlags,_In_ DWORD_PTR dwContext)
HINTERNET None wininet.InternetConnectW(_In_ HINTERNET hInternet,_In_ LPCTSTR lpszServerName,_In_ INTERNET_PORT nServerPort,_In_ LPCTSTR lpszUsername,_In_ LPCTSTR lpszPassword,_In_ DWORD dwService,_In_ DWORD dwFlags,_In_ DWORD_PTR dwContext)
HINTERNET None wininet.InternetConnectA(_In_ HINTERNET hInternet,_In_ LPCTSTR lpszServerName,_In_ INTERNET_PORT nServerPort,_In_ LPCTSTR lpszUsername,_In_ LPCTSTR lpszPassword,_In_ DWORD dwService,_In_ DWORD dwFlags,_In_ DWORD_PTR dwContext)
BOOL None wininet.InternetQueryOption(_In_ HINTERNET hInternet,_In_ DWORD dwOption,_Out_ LPVOID lpBuffer,_Inout_ LPDWORD lpdwBufferLength)
BOOL None wininet.InternetQueryOptionW(_In_ HINTERNET hInternet,_In_ DWORD dwOption,_Out_ LPVOID lpBuffer,_Inout_ LPDWORD lpdwBufferLength)
BOOL None wininet.InternetQueryOptionA(_In_ HINTERNET hInternet,_In_ DWORD dwOption,_Out_ LPVOID lpBuffer,_Inout_ LPDWORD lpdwBufferLength)
HRESULT None msftedit.FindTextEnd(BSTR bstr None,long Count None,long Flags None,long *pLength None)
LPTSTR WINAPI user32.CharLower(_Inout_ LPTSTR lpsz)
LPTSTR WINAPI user32.CharLowerW(_Inout_ LPTSTR lpsz)
LPTSTR WINAPI user32.CharLowerA(_Inout_ LPTSTR lpsz)
HRESULT None msftedit.CanPaste(VARIANT *pVar None,long Format None,long *pb None)
VOID None None.MQFreeMemory(PVOID pvMemory None)
BOOLAPI None wininet.ReadUrlCacheEntryStream(_In_ HANDLE hUrlCacheStream,_In_ DWORD dwLocation,_Inout_ LPVOID lpBuffer,_Inout_ LPDWORD lpdwLen,_In_ DWORD dwReserved)
BOOLAPI None wininet.CreateUrlCacheEntry(_In_ LPCTSTR lpszUrlName,_In_ DWORD dwExpectedFileSize,_In_ LPCTSTR lpszFileExtension,_Out_ LPTSTR lpszFileName,_Reserved_ DWORD dwReserved)
BOOLAPI None wininet.CreateUrlCacheEntryW(_In_ LPCTSTR lpszUrlName,_In_ DWORD dwExpectedFileSize,_In_ LPCTSTR lpszFileExtension,_Out_ LPTSTR lpszFileName,_Reserved_ DWORD dwReserved)
BOOLAPI None wininet.CreateUrlCacheEntryA(_In_ LPCTSTR lpszUrlName,_In_ DWORD dwExpectedFileSize,_In_ LPCTSTR lpszFileExtension,_Out_ LPTSTR lpszFileName,_Reserved_ DWORD dwReserved)
BOOL None wininet.InternetFindNextFile(_In_ HINTERNET hFind,_Out_ LPVOID lpvFindData)
BOOL None wininet.InternetFindNextFileW(_In_ HINTERNET hFind,_Out_ LPVOID lpvFindData)
BOOL None wininet.InternetFindNextFileA(_In_ HINTERNET hFind,_Out_ LPVOID lpvFindData)
BOOL None spoolss.EndDocPrinter(_In_ HANDLE hPrinter)
UINT WINAPI user32.RealGetWindowClass(_In_ HWND hwnd,_Out_ LPTSTR pszType,_In_ UINT cchType)
UINT WINAPI user32.RealGetWindowClassW(_In_ HWND hwnd,_Out_ LPTSTR pszType,_In_ UINT cchType)
DWORD WINAPI wininet.PrivacySetZonePreferenceW(_In_ DWORD dwZone,_In_ DWORD dwType,_In_ DWORD dwTemplate,_In_opt_ LPCWSTR pszPreference)
DWORD WINAPI wininet.PrivacySetZonePreferenceW(_In_ DWORD dwZone,_In_ DWORD dwType,_In_ DWORD dwTemplate,_In_opt_ LPCWSTR pszPreference)
BOOL None gdi32.GetTextExtentPoint32(_In_ HDC hdc,_In_ LPCTSTR lpString,_In_ int c,_Out_ LPSIZE lpSize)
BOOL None gdi32.GetTextExtentPoint32W(_In_ HDC hdc,_In_ LPCTSTR lpString,_In_ int c,_Out_ LPSIZE lpSize)
BOOL None gdi32.GetTextExtentPoint32A(_In_ HDC hdc,_In_ LPCTSTR lpString,_In_ int c,_Out_ LPSIZE lpSize)
DWORD None None.MAKESORTLCID(WORD wLanguageID None,WORD wSortID None,WORD wSortVersion None)
DWORD None wininet.InternetDial(_In_ HWND hwndParent,_In_ LPTSTR pszEntryName,_In_ DWORD dwFlags,_Out_ DWORD_PTR *lpdwConnection,_In_ DWORD dwReserved)
DWORD None wininet.InternetDialW(_In_ HWND hwndParent,_In_ LPTSTR pszEntryName,_In_ DWORD dwFlags,_Out_ DWORD_PTR *lpdwConnection,_In_ DWORD dwReserved)
DWORD None wininet.InternetDialA(_In_ HWND hwndParent,_In_ LPTSTR pszEntryName,_In_ DWORD dwFlags,_Out_ DWORD_PTR *lpdwConnection,_In_ DWORD dwReserved)
BOOL None None.SetPort(_In_ LPTSTR pName,_In_ LPTSTR pPortName,_In_ DWORD dwLevel,_In_ LPBYTE pPortInfo)
BOOL None None.SetPortW(_In_ LPTSTR pName,_In_ LPTSTR pPortName,_In_ DWORD dwLevel,_In_ LPBYTE pPortInfo)
BOOL None None.SetPortA(_In_ LPTSTR pName,_In_ LPTSTR pPortName,_In_ DWORD dwLevel,_In_ LPBYTE pPortInfo)
BOOL None wininet.DeleteUrlCacheGroup(_In_ GROUPID GroupId,_In_ DWORD dwFlags,_Reserved_ LPVOID lpReserved)
BOOLAPI None wininet.CommitUrlCacheEntryW(_In_ LPCWSTR lpszUrlName,_In_ LPCWSTR lpszLocalFileName,_In_ FILETIME ExpireTime,_In_ FILETIME LastModifiedTime,_In_ DWORD CacheEntryType,_In_ LPCWSTR lpHeaderInfo,_In_ DWORD cchHeaderInfo,_Reserved_ LPCWSTR lpszFileExtension,_In_ LPCWSTR lpszOriginalUrl)
HRESULT None msftedit.Expand(long Unit None,long *pDelta None)
HINTERNET WINAPI winhttp.WinHttpConnect(_In_ HINTERNET hSession,_In_ LPCWSTR pswzServerName,_In_ INTERNET_PORT nServerPort,_Reserved_ DWORD dwReserved)
HRESULT None msftedit.GetDuplicate(ITextRange **ppRange None)
HRESULT APIENTRY None.MQCreateQueue(PSECURITY_DESCRIPTOR pSecurityDescriptor None,MQQUEUEPROPS * pQueueProps,LPWSTR lpwcsFormatName None,LPDWORD lpdwFormatNameLength None)
DWORD None None.DeletePrinterDataEx(_In_ HANDLE hPrinter,_In_ LPCTSTR pKeyName,_In_ LPCTSTR pValueName)
DWORD None None.DeletePrinterDataExW(_In_ HANDLE hPrinter,_In_ LPCTSTR pKeyName,_In_ LPCTSTR pValueName)
DWORD None None.DeletePrinterDataExA(_In_ HANDLE hPrinter,_In_ LPCTSTR pKeyName,_In_ LPCTSTR pValueName)
HINTERNET None wininet.GopherFindFirstFile(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszLocator,_In_ LPCTSTR lpszSearchString,_Out_ LPGOPHER_FIND_DATA lpFindData,_In_ DWORD dwFlags,_In_ DWORD_PTR dwContext)
HINTERNET None wininet.GopherFindFirstFileW(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszLocator,_In_ LPCTSTR lpszSearchString,_Out_ LPGOPHER_FIND_DATA lpFindData,_In_ DWORD dwFlags,_In_ DWORD_PTR dwContext)
HINTERNET None wininet.GopherFindFirstFileA(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszLocator,_In_ LPCTSTR lpszSearchString,_Out_ LPGOPHER_FIND_DATA lpFindData,_In_ DWORD dwFlags,_In_ DWORD_PTR dwContext)
HINTERNET None wininet.FtpOpenFile(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszFileName,_In_ DWORD dwAccess,_In_ DWORD dwFlags,_In_ DWORD_PTR dwContext)
HINTERNET None wininet.FtpOpenFileW(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszFileName,_In_ DWORD dwAccess,_In_ DWORD dwFlags,_In_ DWORD_PTR dwContext)
HINTERNET None wininet.FtpOpenFileA(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszFileName,_In_ DWORD dwAccess,_In_ DWORD dwFlags,_In_ DWORD_PTR dwContext)
CALID None None.MonthCal_GetCALID(HWND hmc None)
HRESULT None msftedit.GetStoryRanges(ITextStoryRanges **ppStories None)
HRESULT None None.CreateXactMSMQQueue(LPWSTR wszPathName None,PSECURITY_DESCRIPTOR pSecurityDescriptor None,LPWSTR wszOutFormatName None,DWORD *pdwOutFormatNameLength None)
LONG None None.AdvancedDocumentProperties(_In_ HWND hWnd,_In_ HANDLE hPrinter,_In_ LPTSTR pDeviceName,_Out_ PDEVMODE pDevModeOutput,_In_ PDEVMODE pDevModeInput)
LONG None None.AdvancedDocumentPropertiesW(_In_ HWND hWnd,_In_ HANDLE hPrinter,_In_ LPTSTR pDeviceName,_Out_ PDEVMODE pDevModeOutput,_In_ PDEVMODE pDevModeInput)
LONG None None.AdvancedDocumentPropertiesA(_In_ HWND hWnd,_In_ HANDLE hPrinter,_In_ LPTSTR pDeviceName,_Out_ PDEVMODE pDevModeOutput,_In_ PDEVMODE pDevModeInput)
BOOL None wininet.GopherCreateLocator(_In_ LPCTSTR lpszHost,_In_ INTERNET_PORT nServerPort,_In_ LPCTSTR lpszDisplayString,_In_ LPCTSTR lpszSelectorString,_In_ DWORD dwGopherType,_Out_ LPTSTR lpszLocator,_Inout_ LPDWORD lpdwBufferLength)
BOOL None wininet.GopherCreateLocatorW(_In_ LPCTSTR lpszHost,_In_ INTERNET_PORT nServerPort,_In_ LPCTSTR lpszDisplayString,_In_ LPCTSTR lpszSelectorString,_In_ DWORD dwGopherType,_Out_ LPTSTR lpszLocator,_Inout_ LPDWORD lpdwBufferLength)
BOOL None wininet.GopherCreateLocatorA(_In_ LPCTSTR lpszHost,_In_ INTERNET_PORT nServerPort,_In_ LPCTSTR lpszDisplayString,_In_ LPCTSTR lpszSelectorString,_In_ DWORD dwGopherType,_Out_ LPTSTR lpszLocator,_Inout_ LPDWORD lpdwBufferLength)
BOOL None spoolss.AbortPrinter(_In_ HANDLE hPrinter)
BOOL None None.GetJob(_In_ HANDLE hPrinter,_In_ DWORD JobId,_In_ DWORD Level,_Out_ LPBYTE pJob,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded)
BOOL None None.GetJobW(_In_ HANDLE hPrinter,_In_ DWORD JobId,_In_ DWORD Level,_Out_ LPBYTE pJob,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded)
BOOL None None.GetJobA(_In_ HANDLE hPrinter,_In_ DWORD JobId,_In_ DWORD Level,_Out_ LPBYTE pJob,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded)
HRESULT None msftedit.GetText(BSTR *pbstr None)
HRESULT None msftedit.SetRange(long cpAnchor None,long cpActive None)
DWORD None wininet.InternetSetCookieEx(_In_ LPCTSTR lpszURL,_In_ LPCTSTR lpszCookieName,_In_ LPCTSTR lpszCookieData,_In_ DWORD dwFlags,_In_ DWORD_PTR dwReserved)
DWORD None wininet.InternetSetCookieExW(_In_ LPCTSTR lpszURL,_In_ LPCTSTR lpszCookieName,_In_ LPCTSTR lpszCookieData,_In_ DWORD dwFlags,_In_ DWORD_PTR dwReserved)
DWORD None wininet.InternetSetCookieExA(_In_ LPCTSTR lpszURL,_In_ LPCTSTR lpszCookieName,_In_ LPCTSTR lpszCookieData,_In_ DWORD dwFlags,_In_ DWORD_PTR dwReserved)
PSLIST_ENTRY WINAPI ntdll.RtlFirstEntrySList(_In_ PSLIST_HEADER ListHead)
BOOL WINAPI kernel32.VerifyVersionInfo(_In_ LPOSVERSIONINFOEX lpVersionInfo,_In_ DWORD dwTypeMask,_In_ DWORDLONG dwlConditionMask)
BOOL WINAPI kernel32.VerifyVersionInfoW(_In_ LPOSVERSIONINFOEX lpVersionInfo,_In_ DWORD dwTypeMask,_In_ DWORDLONG dwlConditionMask)
BOOL WINAPI kernel32.VerifyVersionInfoA(_In_ LPOSVERSIONINFOEX lpVersionInfo,_In_ DWORD dwTypeMask,_In_ DWORDLONG dwlConditionMask)
BOOL None None.EnumJobs(_In_ HANDLE hPrinter,_In_ DWORD FirstJob,_In_ DWORD NoJobs,_In_ DWORD Level,_Out_ LPBYTE pJob,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded,_Out_ LPDWORD pcReturned)
BOOL None None.EnumJobsW(_In_ HANDLE hPrinter,_In_ DWORD FirstJob,_In_ DWORD NoJobs,_In_ DWORD Level,_Out_ LPBYTE pJob,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded,_Out_ LPDWORD pcReturned)
BOOL None None.EnumJobsA(_In_ HANDLE hPrinter,_In_ DWORD FirstJob,_In_ DWORD NoJobs,_In_ DWORD Level,_Out_ LPBYTE pJob,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded,_Out_ LPDWORD pcReturned)
UINT None gdi32.GetTextAlign(_In_ HDC hdc)
BOOL WINAPI wininet.InternetClearAllPerSiteCookieDecisions(void None None)
BOOL None wininet.InternetAutodialHangup(_In_ DWORD dwReserved)
BOOL None wininet.InternetCloseHandle(_In_ HINTERNET hInternet)
BOOL None wininet.FtpGetCurrentDirectory(_In_ HINTERNET hConnect,_Out_ LPTSTR lpszCurrentDirectory,_Inout_ LPDWORD lpdwCurrentDirectory)
BOOL None wininet.FtpGetCurrentDirectoryW(_In_ HINTERNET hConnect,_Out_ LPTSTR lpszCurrentDirectory,_Inout_ LPDWORD lpdwCurrentDirectory)
BOOL None wininet.FtpGetCurrentDirectoryA(_In_ HINTERNET hConnect,_Out_ LPTSTR lpszCurrentDirectory,_Inout_ LPDWORD lpdwCurrentDirectory)
BOOL CALLBACK None.EnumCalendarInfoProcExEx(_In_ LPWSTR lpCalendarInfoString,_In_ CALID Calendar,_In_ LPWSTR lpReserved,_In_ LPARAM lParam)
int None None.ComboBox_SetExtendedUI(HWND hwndCtl None,UINT flags None)
HANDLE WINAPI ktmw32.CreateTransaction(_In_opt_ LPSECURITY_ATTRIBUTES lpTransactionAttributes,_In_opt_ LPGUID UOW,_In_opt_ DWORD CreateOptions,_In_opt_ DWORD IsolationLevel,_In_opt_ DWORD IsolationFlags,_In_opt_ DWORD Timeout,_In_opt_ LPWSTR Description)
DWORD None winhttp.WinHttpResetAutoProxy(_In_ HINTERNET hSession,_In_ DWORD dwFlags)
BOOL WINAPI user32.SetMenuItemBitmaps(_In_ HMENU hMenu,_In_ UINT uPosition,_In_ UINT uFlags,_In_opt_ HBITMAP hBitmapUnchecked,_In_opt_ HBITMAP hBitmapChecked)
HRESULT None None.GetConversion([in] BSTR string,[in] LONG start,[in] LONG length,[out None None,retval] BSTR result)
HRESULT None msftedit.GetIndex(long Unit None,long *pIndex None)
int None kernel32.MultiByteToWideChar(_In_ UINT CodePage,_In_ DWORD dwFlags,_In_ LPCSTR lpMultiByteStr,_In_ int cbMultiByte,_Out_opt_ LPWSTR lpWideCharStr,_In_ int cchWideChar)
HRESULT None None.EnableBlurBehind(HWND hwnd None)
BOOL None None.DeletePrinterConnection(_In_ LPTSTR pName)
BOOL None None.DeletePrinterConnectionW(_In_ LPTSTR pName)
BOOL None None.DeletePrinterConnectionA(_In_ LPTSTR pName)
HRESULT None msftedit.ChangeCase([in] long Type)
HRSRC WINAPI kernel32.FindResourceEx(_In_opt_ HMODULE hModule,_In_ LPCTSTR lpType,_In_ LPCTSTR lpName,_In_ WORD wLanguage)
HRSRC WINAPI kernel32.FindResourceExW(_In_opt_ HMODULE hModule,_In_ LPCTSTR lpType,_In_ LPCTSTR lpName,_In_ WORD wLanguage)
HRSRC WINAPI kernel32.FindResourceExA(_In_opt_ HMODULE hModule,_In_ LPCTSTR lpType,_In_ LPCTSTR lpName,_In_ WORD wLanguage)
BOOL None wininet.GetUrlCacheGroupAttribute(_In_ GROUPID gid,_Reserved_ DWORD dwFlags,_In_ DWORD dwAttributes,_Out_ LPINTERNET_CACHE_GROUP_INFO lpGroupInfo,_Inout_ LPDWORD lpdwGroupInfo,_Reserved_ LPVOID lpReserved)
BOOL None wininet.GetUrlCacheGroupAttributeW(_In_ GROUPID gid,_Reserved_ DWORD dwFlags,_In_ DWORD dwAttributes,_Out_ LPINTERNET_CACHE_GROUP_INFO lpGroupInfo,_Inout_ LPDWORD lpdwGroupInfo,_Reserved_ LPVOID lpReserved)
BOOL None wininet.GetUrlCacheGroupAttributeA(_In_ GROUPID gid,_Reserved_ DWORD dwFlags,_In_ DWORD dwAttributes,_Out_ LPINTERNET_CACHE_GROUP_INFO lpGroupInfo,_Inout_ LPDWORD lpdwGroupInfo,_Reserved_ LPVOID lpReserved)
HRESULT None msftedit.MoveStart(long Unit None,long Count None,long *pDelta None)
DWORD None wininet.InternetErrorDlg(_In_ HWND hWnd,_Inout_ HINTERNET hRequest,_In_ DWORD dwError,_In_ DWORD dwFlags,_Inout_ LPVOID *lppvData)
BOOL None None.AddPrinterDriverEx(_In_ LPTSTR pName,_In_ DWORD Level,_Inout_ LPBYTE pDriverInfo,_In_ DWORD dwFileCopyFlags)
BOOL None None.AddPrinterDriverExW(_In_ LPTSTR pName,_In_ DWORD Level,_Inout_ LPBYTE pDriverInfo,_In_ DWORD dwFileCopyFlags)
BOOL None None.AddPrinterDriverExA(_In_ LPTSTR pName,_In_ DWORD Level,_Inout_ LPBYTE pDriverInfo,_In_ DWORD dwFileCopyFlags)
HRESULT None mrmsupport.CreateResourceIndexer(_In_ PCWSTR projectRoot,_In_opt_ PCWSTR extensionDllPath,_Out_ PVOID *ppResourceIndexer)
BOOL None None.FlushPrinter(_In_ HANDLE hPrinter,_In_ LPVOID pBuf,_In_ DWORD cbBuf,_Out_ LPDWORD pcWritten,_In_ DWORD cSleep)
typedef None None.VOID(WINAPI *PlayerPickerUICompletionRoutine None)
UINT_PTR CALLBACK None.CCHookProc(_In_ HWND hdlg,_In_ UINT uiMsg,_In_ WPARAM wParam,_In_ LPARAM lParam)
HRESULT None msftedit.Collapse([in] long bStart)
DWORD None None.DeletePrinterKey(_In_ HANDLE hPrinter,_In_ LPCTSTR pKeyName)
DWORD None None.DeletePrinterKeyW(_In_ HANDLE hPrinter,_In_ LPCTSTR pKeyName)
DWORD None None.DeletePrinterKeyA(_In_ HANDLE hPrinter,_In_ LPCTSTR pKeyName)
HINTERNET WINAPI winhttp.WinHttpWebSocketCompleteUpgrade(_In_ HINTERNET hRequest,_In_opt_ DWORD_PTR pContext)
BOOL None wininet.FtpDeleteFile(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszFileName)
BOOL None wininet.FtpDeleteFileW(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszFileName)
BOOL None wininet.FtpDeleteFileA(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszFileName)
BOOL CALLBACK None.EnumResTypeProc(_In_opt_ HMODULE hModule,_In_ LPTSTR lpszType,_In_ LONG_PTR lParam)
BOOL CALLBACK None.EnumResTypeProcW(_In_opt_ HMODULE hModule,_In_ LPTSTR lpszType,_In_ LONG_PTR lParam)
BOOL CALLBACK None.EnumResTypeProcA(_In_opt_ HMODULE hModule,_In_ LPTSTR lpszType,_In_ LONG_PTR lParam)
BOOL WINAPI user32.CreateCaret(_In_ HWND hWnd,_In_opt_ HBITMAP hBitmap,_In_ int nWidth,_In_ int nHeight)
HRESULT None msftedit.SetProperty([in] long Type,[in] long Value)
BOOL None wininet.InternetTimeToSystemTime(_In_ LPCTSTR lpszTime,_Out_ SYSTEMTIME *pst,_In_ DWORD dwReserved)
BOOL None wininet.InternetTimeToSystemTimeW(_In_ LPCTSTR lpszTime,_Out_ SYSTEMTIME *pst,_In_ DWORD dwReserved)
BOOL None wininet.InternetTimeToSystemTimeA(_In_ LPCTSTR lpszTime,_Out_ SYSTEMTIME *pst,_In_ DWORD dwReserved)
HRESULT None msftedit.SetPara([in] ITextPara *pPara)
BOOL None wininet.InternetGetCookie(_In_ LPCTSTR lpszUrl,_In_ LPCTSTR lpszCookieName,_Out_ LPTSTR lpszCookieData,_Inout_ LPDWORD lpdwSize)
BOOL None wininet.InternetGetCookieW(_In_ LPCTSTR lpszUrl,_In_ LPCTSTR lpszCookieName,_Out_ LPTSTR lpszCookieData,_Inout_ LPDWORD lpdwSize)
BOOL None wininet.InternetGetCookieA(_In_ LPCTSTR lpszUrl,_In_ LPCTSTR lpszCookieName,_Out_ LPTSTR lpszCookieData,_Inout_ LPDWORD lpdwSize)
HWND WINAPI user32.WindowFromPoint(_In_ POINT Point)
Bool WINAPI wininet.GetUrlCacheConfigInfo(_Inout_ LPINTERNET_CACHE_CONFIG_INFO lpCacheConfigInfo,_Reserved_ LPDWORD lpcbCacheConfigInfo,_In_ DWORD dwFieldControl)
Bool WINAPI wininet.GetUrlCacheConfigInfoW(_Inout_ LPINTERNET_CACHE_CONFIG_INFO lpCacheConfigInfo,_Reserved_ LPDWORD lpcbCacheConfigInfo,_In_ DWORD dwFieldControl)
Bool WINAPI wininet.GetUrlCacheConfigInfoA(_Inout_ LPINTERNET_CACHE_CONFIG_INFO lpCacheConfigInfo,_Reserved_ LPDWORD lpcbCacheConfigInfo,_In_ DWORD dwFieldControl)
BOOLAPI None wininet.CreateUrlCacheContainer(_In_ LPCTSTR lpszName,_In_ LPCTSTR lpszCachePrefix,_In_opt_ LPCTSTR lpszCachePath,_In_ DWORD dwKBCacheLimit,_In_ DWORD dwContainerType,_In_ DWORD dwOptions,_Reserved_ LPVOID lpvReserved,_Reserved_ LPDWORD lpdwReserved)
BOOL WINAPI winhttp.WinHttpSendRequest(_In_ HINTERNET hRequest,_In_opt_ LPCWSTR pwszHeaders,_In_ DWORD dwHeadersLength,_In_opt_ LPVOID lpOptional,_In_ DWORD dwOptionalLength,_In_ DWORD dwTotalLength,_In_ DWORD_PTR dwContext)
LONG WINAPI advapi32.RegCreateKeyEx(_In_ HKEY hKey,_In_ LPCTSTR lpSubKey,_Reserved_ DWORD Reserved,_In_opt_ LPTSTR lpClass,_In_ DWORD dwOptions,_In_ REGSAM samDesired,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_Out_ PHKEY phkResult,_Out_opt_ LPDWORD lpdwDisposition)
LONG WINAPI advapi32.RegCreateKeyExW(_In_ HKEY hKey,_In_ LPCTSTR lpSubKey,_Reserved_ DWORD Reserved,_In_opt_ LPTSTR lpClass,_In_ DWORD dwOptions,_In_ REGSAM samDesired,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_Out_ PHKEY phkResult,_Out_opt_ LPDWORD lpdwDisposition)
LONG WINAPI advapi32.RegCreateKeyExA(_In_ HKEY hKey,_In_ LPCTSTR lpSubKey,_Reserved_ DWORD Reserved,_In_opt_ LPTSTR lpClass,_In_ DWORD dwOptions,_In_ REGSAM samDesired,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_Out_ PHKEY phkResult,_Out_opt_ LPDWORD lpdwDisposition)
HRESULT None None.GetConversionModeCaps([out] DWORD *pdwCaps)
HANDLE None None.CommitSpoolData(_In_ HANDLE hPrinter,_In_ HANDLE hSpoolFile,DWORD cbCommit None)
HRESULT None msftedit.GetChar(long *pChar None)
HRESULT None msftedit.MoveDown(long Unit None,long Count None,long Extend None,long *pDelta None)
BOOL None None.SetJob(_In_ HANDLE hPrinter,_In_ DWORD JobId,_In_ DWORD Level,_In_ LPBYTE pJob,_In_ DWORD Command)
BOOL None None.SetJobW(_In_ HANDLE hPrinter,_In_ DWORD JobId,_In_ DWORD Level,_In_ LPBYTE pJob,_In_ DWORD Command)
BOOL None None.SetJobA(_In_ HANDLE hPrinter,_In_ DWORD JobId,_In_ DWORD Level,_In_ LPBYTE pJob,_In_ DWORD Command)
void None None.Pager_RecalcSize(HWND hwndPager None)
LONG None t2embed.TTDeleteEmbeddedFont(_In_ HANDLE hFontReference,_In_ ULONG ulFlags,_Out_ ULONG *pulStatus)
HRESULT None None.MQMgmtGetInfo(LPCWSTR pMachineName None,LPCWSTR pObjectName None,MQMGMTPROPS * pMgmtProps)
HRESULT None None.Request([in] IImePadApplet *pIImePadApplet,[in] INT reqId,[in None None,out] WPARAM wParam,[in None None,out] LPARAM lParam)
Private Function None.VerifyWorkgroupMode(Void None None)
BOOL WINAPI kernel32.GetPrivateProfileStruct(_In_ LPCTSTR lpszSection,_In_ LPCTSTR lpszKey,_Out_ LPVOID lpStruct,_In_ UINT uSizeStruct,_In_ LPCTSTR szFile)
BOOL WINAPI kernel32.GetPrivateProfileStructW(_In_ LPCTSTR lpszSection,_In_ LPCTSTR lpszKey,_Out_ LPVOID lpStruct,_In_ UINT uSizeStruct,_In_ LPCTSTR szFile)
BOOL WINAPI kernel32.GetPrivateProfileStructA(_In_ LPCTSTR lpszSection,_In_ LPCTSTR lpszKey,_Out_ LPVOID lpStruct,_In_ UINT uSizeStruct,_In_ LPCTSTR szFile)
BOOL None gdi32.Ellipse(_In_ HDC hdc,_In_ int nLeftRect,_In_ int nTopRect,_In_ int nRightRect,_In_ int nBottomRect)
BOOL WINAPI user32.MapDialogRect(_In_ HWND hDlg,_Inout_ LPRECT lpRect)
COLORREF None gdi32.SetBkColor(_In_ HDC hdc,_In_ COLORREF crColor)
BOOL WINAPI user32.DestroyCaret(void None None)
HRESULT APIENTRY None.MQReceiveMessage(QUEUEHANDLE hSource None,DWORD dwTimeout None,DWORD dwAction None,MQMSGPROPS * pMessageProps,LPOVERLAPPED lpOverlapped None,PMQRECEIVECALLBACK fnReceiveCallback None,HANDLE hCursor None,ITransaction * pTransaction)
BOOL None wininet.CreateMD5SSOHash(_In_ PWSTR pszChallengeInfo,_In_ PWSTR pwszRealm,_In_ PWSTR pwszTarget,_Out_ PBYTE pbHexHash)
HRESULT None msftedit.GetFlags(long *pFlags None)
int None gdi32.GetBkMode(_In_ HDC hdc)
function None None.getText(strURL None None)
BOOL None None.AddJob(_In_ HANDLE hPrinter,_In_ DWORD Level,_Out_ LPBYTE pData,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded)
BOOL None None.AddJobW(_In_ HANDLE hPrinter,_In_ DWORD Level,_Out_ LPBYTE pData,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded)
BOOL None None.AddJobA(_In_ HANDLE hPrinter,_In_ DWORD Level,_Out_ LPBYTE pData,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded)
HRESULT None None.CreateQueue(WCHAR *wszPathName None)
HRESULT None winhttp.Send([in None None,optional] VARIANT Body)
BOOL None None.ResetPrinter(_In_ HANDLE hPrinter,_In_ LPPRINTER_DEFAULTS pDefault)
BOOL None None.ResetPrinterW(_In_ HANDLE hPrinter,_In_ LPPRINTER_DEFAULTS pDefault)
BOOL None None.ResetPrinterA(_In_ HANDLE hPrinter,_In_ LPPRINTER_DEFAULTS pDefault)
LONG None t2embed.TTIsEmbeddingEnabled(_In_ HDC hDC,_Out_ BOOL *pbEnabled)
BOOL None None.AddJob(_In_ HANDLE hPrinter,_In_ DWORD Level,_Out_ LPBYTE pData,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded)
BOOL None None.AddJobW(_In_ HANDLE hPrinter,_In_ DWORD Level,_Out_ LPBYTE pData,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded)
BOOL None None.AddJobA(_In_ HANDLE hPrinter,_In_ DWORD Level,_Out_ LPBYTE pData,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded)
HRESULT None msftedit.SetSaved([in] long Bool)
BOOL None wininet.FindNextUrlCacheEntryEx(_In_ HANDLE hEnumHandle,_Inout_ LPINTERNET_CACHE_ENTRY_INFO lpNextCacheEntryInfo,_Inout_ LPDWORD lpcbEntryInfo,_Reserved_ LPVOID lpGroupAttributes,_Reserved_ LPDWORD lpcbGroupAttributes,_Reserved_ LPVOID lpReserved)
BOOL None wininet.FindNextUrlCacheEntryExW(_In_ HANDLE hEnumHandle,_Inout_ LPINTERNET_CACHE_ENTRY_INFO lpNextCacheEntryInfo,_Inout_ LPDWORD lpcbEntryInfo,_Reserved_ LPVOID lpGroupAttributes,_Reserved_ LPDWORD lpcbGroupAttributes,_Reserved_ LPVOID lpReserved)
BOOL None wininet.FindNextUrlCacheEntryExA(_In_ HANDLE hEnumHandle,_Inout_ LPINTERNET_CACHE_ENTRY_INFO lpNextCacheEntryInfo,_Inout_ LPDWORD lpcbEntryInfo,_Reserved_ LPVOID lpGroupAttributes,_Reserved_ LPDWORD lpcbGroupAttributes,_Reserved_ LPVOID lpReserved)
BOOL None spoolss.ReadPrinter(_In_ HANDLE hPrinter,_Out_ LPVOID pBuf,_In_ DWORD cbBuf,_Out_ LPDWORD pNoBytesRead)
BOOL WINAPI kernel32.IsWindowsVistaSP2OrGreater(void None None)
LONG None t2embed.TTRunValidationTests(_In_ HDC hDC,_In_ TTVALIDATIONTESTSPARAMS *pTestParam)
BOOL None None.EnumJobs(_In_ HANDLE hPrinter,_In_ DWORD FirstJob,_In_ DWORD NoJobs,_In_ DWORD Level,_Out_ LPBYTE pJob,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded,_Out_ LPDWORD pcReturned)
BOOL None None.EnumJobsW(_In_ HANDLE hPrinter,_In_ DWORD FirstJob,_In_ DWORD NoJobs,_In_ DWORD Level,_Out_ LPBYTE pJob,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded,_Out_ LPDWORD pcReturned)
BOOL None None.EnumJobsA(_In_ HANDLE hPrinter,_In_ DWORD FirstJob,_In_ DWORD NoJobs,_In_ DWORD Level,_Out_ LPBYTE pJob,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded,_Out_ LPDWORD pcReturned)
LONG WINAPI advapi32.RegQueryValueEx(_In_ HKEY hKey,_In_opt_ LPCTSTR lpValueName,_Reserved_ LPDWORD lpReserved,_Out_opt_ LPDWORD lpType,_Out_opt_ LPBYTE lpData,_Inout_opt_ LPDWORD lpcbData)
LONG WINAPI advapi32.RegQueryValueExW(_In_ HKEY hKey,_In_opt_ LPCTSTR lpValueName,_Reserved_ LPDWORD lpReserved,_Out_opt_ LPDWORD lpType,_Out_opt_ LPBYTE lpData,_Inout_opt_ LPDWORD lpcbData)
LONG WINAPI advapi32.RegQueryValueExA(_In_ HKEY hKey,_In_opt_ LPCTSTR lpValueName,_Reserved_ LPDWORD lpReserved,_Out_opt_ LPDWORD lpType,_Out_opt_ LPBYTE lpData,_Inout_opt_ LPDWORD lpcbData)
HRESULT None None.SetQueueTypeProp(LPCWSTR wszQueueFormatName None,CLSID *pIDValue None)
BOOL WINAPI user32.SetMenuItemInfo(_In_ HMENU hMenu,_In_ UINT uItem,_In_ BOOL fByPosition,_In_ LPMENUITEMINFO lpmii)
BOOL WINAPI user32.SetMenuItemInfoW(_In_ HMENU hMenu,_In_ UINT uItem,_In_ BOOL fByPosition,_In_ LPMENUITEMINFO lpmii)
BOOL WINAPI user32.SetMenuItemInfoA(_In_ HMENU hMenu,_In_ UINT uItem,_In_ BOOL fByPosition,_In_ LPMENUITEMINFO lpmii)
HRESULT None msftedit.MoveLeft(long Unit None,long Count None,long Extend None,long *pDelta None)
BOOL WINAPI winhttp.WinHttpCloseHandle(_In_ HINTERNET hInternet)
LONG None t2embed.TTIsEmbeddingEnabledForFacename(_In_ LPSTR lpszFacename,_Out_ BOOL *pbEnabled)
LONG None t2embed.TTRunValidationTestsEx(_In_ HDC hDC,_In_ TTVALIDATIONTESTSPARAMSEX *pTestParam)
BOOL CALLBACK None.MainWndProc(HWND hwnd None,UINT uMsg None,WPARAM wParam None,LPARAM lParam None)
Sub None msftedit.AttributeCopy(r1 As ITextRange,r2 As ITextRange)
BOOL None ktmw32.PrePrepareEnlistment(_In_ HANDLE EnlistmentHandle,_In_ PLARGE_INTEGER TmVirtualClock)
LONG None t2embed.TTGetEmbeddingType(_In_ HDC hDC,_In_ ULONG *pulPrivStatus)
int None gdi32.GetTextCharsetInfo(_In_ HDC hdc,_Out_opt_ LPFONTSIGNATURE lpSig,_In_ DWORD dwFlags)
HRESULT None msftedit.MoveUp(long Unit None,long Count None,long Extend None,long *pDelta None)
HRESULT None msftedit.Save([in] VARIANT *pVar,[in] long Flags,[in] long CodePage)
int CALLBACK None.EnumFontFamExProc(const LOGFONT *lpelfe,const TEXTMETRIC *lpntme,DWORD FontType None,LPARAM lParam None)
int CALLBACK None.EnumFontFamExProcW(const LOGFONT *lpelfe,const TEXTMETRIC *lpntme,DWORD FontType None,LPARAM lParam None)
int CALLBACK None.EnumFontFamExProcA(const LOGFONT *lpelfe,const TEXTMETRIC *lpntme,DWORD FontType None,LPARAM lParam None)
BOOL WINAPI user32.IsCharAlpha(_In_ TCHAR ch)
BOOL WINAPI user32.IsCharAlphaW(_In_ TCHAR ch)
BOOL WINAPI user32.IsCharAlphaA(_In_ TCHAR ch)
HRESULT APIENTRY None.MQCreateCursor(QUEUEHANDLE hQueue None,PHANDLE phCursor None)
HRESULT None msftedit.Unfreeze(long *pCount None)
int None None.Pager_SetPos(HWND hwndPager None,int iPos None)
BOOL None None.GetDefaultPrinter(_In_ LPTSTR pszBuffer,_Inout_ LPDWORD pcchBuffer)
BOOL None None.GetDefaultPrinterW(_In_ LPTSTR pszBuffer,_Inout_ LPDWORD pcchBuffer)
BOOL None None.GetDefaultPrinterA(_In_ LPTSTR pszBuffer,_Inout_ LPDWORD pcchBuffer)
DWORD WINAPI winhttp.WinHttpWebSocketSend(_In_ HINTERNET hWebSocket,_In_ WINHTTP_WEB_SOCKET_BUFFER_TYPE eBufferType,_In_ PVOID pvBuffer,_In_ DWORD dwBufferLength)
HRESULT APIENTRY None.MQCreateCursor(QUEUEHANDLE hQueue None,PHANDLE phCursor None)
BOOL WINAPI kernel32.EnumResourceTypesEx(_In_opt_ HMODULE hModule,_In_ ENUMRESTYPEPROC lpEnumFunc,_In_ LONG_PTR lParam,_In_ DWORD dwFlags,_In_ LANGID LangId)
BOOL WINAPI kernel32.EnumResourceTypesExW(_In_opt_ HMODULE hModule,_In_ ENUMRESTYPEPROC lpEnumFunc,_In_ LONG_PTR lParam,_In_ DWORD dwFlags,_In_ LANGID LangId)
BOOL WINAPI kernel32.EnumResourceTypesExA(_In_opt_ HMODULE hModule,_In_ ENUMRESTYPEPROC lpEnumFunc,_In_ LONG_PTR lParam,_In_ DWORD dwFlags,_In_ LANGID LangId)
HRESULT None None.GetQueuePathnameDNSProp(LPCWSTR wszQueueFormatName None,LPWSTR *pwszValue None)
HANDLE None None.GetSpoolFileHandle(_In_ HANDLE hPrinter)
HANDLE None None.GetSpoolFileHandleW(_In_ HANDLE hPrinter)
HANDLE None None.GetSpoolFileHandleA(_In_ HANDLE hPrinter)
VOID WINAPI winhttp.WinHttpFreeProxyResult(_Inout_ WINHTTP_PROXY_RESULT *pProxyResult)
BOOL None wininet.FtpSetCurrentDirectory(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszDirectory)
BOOL None wininet.FtpSetCurrentDirectoryW(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszDirectory)
BOOL None wininet.FtpSetCurrentDirectoryA(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszDirectory)
HRESULT APIENTRY None.MQHandleToFormatName(QUEUEHANDLE hQueue None,LPWSTR lpwcsFormatName None,LPDWORD lpdwCount None)
HGLOBAL WINAPI kernel32.LoadResource(_In_opt_ HMODULE hModule,_In_ HRSRC hResInfo)
HWND WINAPI user32.GetTopWindow(_In_opt_ HWND hWnd)
HANDLE WINAPI ktmw32.OpenTransactionManagerById(_In_ LPGUID TransactionManagerId,_In_ ACCESS_MASK DesiredAccess,_In_opt_ ULONG OpenOptions)
LONG None t2embed.TTGetEmbeddedFontInfo(_In_ ULONG ulFlags,_Out_ ULONG *pulPrivStatus,_In_ ULONG ulPrivs,_Out_ ULONG *pulStatus,READEMBEDPROC lpfnReadFromStream None,_In_ LPVOID lpvReadStream,_In_ TTLOADINFO *pTTLoadInfo)
int WINAPI user32.MessageBox(_In_opt_ HWND hWnd,_In_opt_ LPCTSTR lpText,_In_opt_ LPCTSTR lpCaption,_In_ UINT uType)
int WINAPI user32.MessageBoxW(_In_opt_ HWND hWnd,_In_opt_ LPCTSTR lpText,_In_opt_ LPCTSTR lpCaption,_In_ UINT uType)
int WINAPI user32.MessageBoxA(_In_opt_ HWND hWnd,_In_opt_ LPCTSTR lpText,_In_opt_ LPCTSTR lpCaption,_In_ UINT uType)
BOOL WINAPI winhttp.WinHttpGetIEProxyConfigForCurrentUser(_Inout_ WINHTTP_CURRENT_USER_IE_PROXY_CONFIG *pProxyConfig)
LRESULT WINAPI user32.SendMessage(_In_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
LRESULT WINAPI user32.SendMessageW(_In_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
LRESULT WINAPI user32.SendMessageA(_In_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
BOOL None None.SetDefaultPrinter(_In_ LPCTSTR pszPrinter)
BOOL None None.SetDefaultPrinterW(_In_ LPCTSTR pszPrinter)
BOOL None None.SetDefaultPrinterA(_In_ LPCTSTR pszPrinter)
BOOL None None.DeletePrintProcessor(_In_ LPTSTR pName,_In_ LPTSTR pEnvironment,_In_ LPTSTR pPrintProcessorName)
BOOL None None.DeletePrintProcessorW(_In_ LPTSTR pName,_In_ LPTSTR pEnvironment,_In_ LPTSTR pPrintProcessorName)
BOOL None None.DeletePrintProcessorA(_In_ LPTSTR pName,_In_ LPTSTR pEnvironment,_In_ LPTSTR pPrintProcessorName)
BOOL WINAPI user32.GetMenuItemRect(_In_opt_ HWND hWnd,_In_ HMENU hMenu,_In_ UINT uItem,_Out_ LPRECT lprcItem)
HRESULT None None.SetQueueJournalQuotaProp(LPCWSTR wszQueueFormatName None,int iValue None)
BOOL None spoolss.DeletePrinter(_Inout_ HANDLE hPrinter)
BOOL WINAPI user32.IsDialogMessage(_In_ HWND hDlg,_In_ LPMSG lpMsg)
BOOL WINAPI user32.IsDialogMessageW(_In_ HWND hDlg,_In_ LPMSG lpMsg)
BOOL WINAPI user32.IsDialogMessageA(_In_ HWND hDlg,_In_ LPMSG lpMsg)
BOOL None None.CloseSpoolFileHandle(_In_ HANDLE hPrinter,_In_ HANDLE hSpoolFile)
LONG WINAPI advapi32.RegLoadKey(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_ LPCTSTR lpFile)
LONG WINAPI advapi32.RegLoadKeyW(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_ LPCTSTR lpFile)
LONG WINAPI advapi32.RegLoadKeyA(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_ LPCTSTR lpFile)
BOOL None wininet.InternetGetConnectedStateEx(_Out_ LPDWORD lpdwFlags,_Out_ LPTSTR lpszConnectionName,_In_ DWORD dwNameLen,_In_ DWORD dwReserved)
BOOL None wininet.InternetGetConnectedStateExW(_Out_ LPDWORD lpdwFlags,_Out_ LPTSTR lpszConnectionName,_In_ DWORD dwNameLen,_In_ DWORD dwReserved)
BOOL None wininet.InternetGetConnectedStateExA(_Out_ LPDWORD lpdwFlags,_Out_ LPTSTR lpszConnectionName,_In_ DWORD dwNameLen,_In_ DWORD dwReserved)
DWORD WINAPI kernel32.GetProfileSection(_In_ LPCTSTR lpAppName,_Out_ LPTSTR lpReturnedString,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetProfileSectionW(_In_ LPCTSTR lpAppName,_Out_ LPTSTR lpReturnedString,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetProfileSectionA(_In_ LPCTSTR lpAppName,_Out_ LPTSTR lpReturnedString,_In_ DWORD nSize)
BOOL CALLBACK None.EnumResLangProc(_In_opt_ HMODULE hModule,_In_ LPCTSTR lpszType,_In_ LPCTSTR lpszName,_In_ WORD wIDLanguage,_In_ LONG_PTR lParam)
BOOL CALLBACK None.EnumResLangProcW(_In_opt_ HMODULE hModule,_In_ LPCTSTR lpszType,_In_ LPCTSTR lpszName,_In_ WORD wIDLanguage,_In_ LONG_PTR lParam)
BOOL CALLBACK None.EnumResLangProcA(_In_opt_ HMODULE hModule,_In_ LPCTSTR lpszType,_In_ LPCTSTR lpszName,_In_ WORD wIDLanguage,_In_ LONG_PTR lParam)
HRESULT APIENTRY None.MQBeginTransaction(ITransaction ** ppTransaction)
HRESULT None None.GetQueueJournalQuotaProp(LPCWSTR wszQueueFormatName None,ULONG *pulValue None)
UINT WINAPI user32.GetMenuDefaultItem(_In_ HMENU hMenu,_In_ UINT fByPos,_In_ UINT gmdiFlags)
LONG None None.AdvancedDocumentProperties(_In_ HWND hWnd,_In_ HANDLE hPrinter,_In_ LPTSTR pDeviceName,_Out_ PDEVMODE pDevModeOutput,_In_ PDEVMODE pDevModeInput)
LONG None None.AdvancedDocumentPropertiesW(_In_ HWND hWnd,_In_ HANDLE hPrinter,_In_ LPTSTR pDeviceName,_Out_ PDEVMODE pDevModeOutput,_In_ PDEVMODE pDevModeInput)
LONG None None.AdvancedDocumentPropertiesA(_In_ HWND hWnd,_In_ HANDLE hPrinter,_In_ LPTSTR pDeviceName,_Out_ PDEVMODE pDevModeOutput,_In_ PDEVMODE pDevModeInput)
BOOL WINAPI user32.SetCaretBlinkTime(_In_ UINT uMSeconds)
HWND WINAPI user32.GetLastActivePopup(_In_ HWND hWnd)
BOOL None wininet.ResumeSuspendedDownload(_In_ HINTERNET hRequest,_In_ DWORD dwResultCode)
HANDLE None wininet.RetrieveUrlCacheEntryStream(_In_ LPCTSTR lpszUrlName,_Out_ LPINTERNET_CACHE_ENTRY_INFO lpCacheEntryInfo,_Inout_ LPDWORD lpcbCacheEntryInfo,_In_ BOOL fRandomRead,_In_ DWORD dwReserved)
HANDLE None wininet.RetrieveUrlCacheEntryStreamW(_In_ LPCTSTR lpszUrlName,_Out_ LPINTERNET_CACHE_ENTRY_INFO lpCacheEntryInfo,_Inout_ LPDWORD lpcbCacheEntryInfo,_In_ BOOL fRandomRead,_In_ DWORD dwReserved)
HANDLE None wininet.RetrieveUrlCacheEntryStreamA(_In_ LPCTSTR lpszUrlName,_Out_ LPINTERNET_CACHE_ENTRY_INFO lpCacheEntryInfo,_Inout_ LPDWORD lpcbCacheEntryInfo,_In_ BOOL fRandomRead,_In_ DWORD dwReserved)
BOOL WINAPI user32.GetMenuBarInfo(_In_ HWND hwnd,_In_ LONG idObject,_In_ LONG idItem,_Inout_ PMENUBARINFO pmbi)
BOOL None wininet.InternetSetCookie(_In_ LPCTSTR lpszUrl,_In_ LPCTSTR lpszCookieName,_In_ LPCTSTR lpszCookieData)
BOOL None wininet.InternetSetCookieW(_In_ LPCTSTR lpszUrl,_In_ LPCTSTR lpszCookieName,_In_ LPCTSTR lpszCookieData)
BOOL None wininet.InternetSetCookieA(_In_ LPCTSTR lpszUrl,_In_ LPCTSTR lpszCookieName,_In_ LPCTSTR lpszCookieData)
LONG WINAPI advapi32.RegDisableReflectionKey(_In_ HKEY hBase)
BOOL None wininet.InternetLockRequestFile(_In_ HINTERNET hInternet,_Out_ HANDLE *lphLockReqHandle)
HANDLE None wininet.FindFirstUrlCacheEntry(_In_ LPCTSTR lpszUrlSearchPattern,_Out_ LPINTERNET_CACHE_ENTRY_INFO lpFirstCacheEntryInfo,_Inout_ LPDWORD lpcbCacheEntryInfo)
HANDLE None wininet.FindFirstUrlCacheEntryW(_In_ LPCTSTR lpszUrlSearchPattern,_Out_ LPINTERNET_CACHE_ENTRY_INFO lpFirstCacheEntryInfo,_Inout_ LPDWORD lpcbCacheEntryInfo)
HANDLE None wininet.FindFirstUrlCacheEntryA(_In_ LPCTSTR lpszUrlSearchPattern,_Out_ LPINTERNET_CACHE_ENTRY_INFO lpFirstCacheEntryInfo,_Inout_ LPDWORD lpcbCacheEntryInfo)
LONG WINAPI advapi32.RegSaveKeyEx(_In_ HKEY hKey,_In_ LPCTSTR lpFile,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ DWORD Flags)
LONG WINAPI advapi32.RegSaveKeyExW(_In_ HKEY hKey,_In_ LPCTSTR lpFile,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ DWORD Flags)
LONG WINAPI advapi32.RegSaveKeyExA(_In_ HKEY hKey,_In_ LPCTSTR lpFile,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ DWORD Flags)
BOOL WINAPI user32.SetLayeredWindowAttributes(_In_ HWND hwnd,_In_ COLORREF crKey,_In_ BYTE bAlpha,_In_ DWORD dwFlags)
BOOL WINAPI winhttp.WinHttpGetDefaultProxyConfiguration(_Inout_ WINHTTP_PROXY_INFO *pProxyInfo)
BOOL None None.DeletePrintProvidor(_In_ LPTSTR pName,_In_ LPTSTR pEnvironment,_In_ LPTSTR pPrintProviderName)
BOOL None None.DeletePrintProvidorW(_In_ LPTSTR pName,_In_ LPTSTR pEnvironment,_In_ LPTSTR pPrintProviderName)
BOOL None None.DeletePrintProvidorA(_In_ LPTSTR pName,_In_ LPTSTR pEnvironment,_In_ LPTSTR pPrintProviderName)
LONG WINAPI advapi32.RegQueryInfoKey(_In_ HKEY hKey,_Out_opt_ LPTSTR lpClass,_Inout_opt_ LPDWORD lpcClass,_Reserved_ LPDWORD lpReserved,_Out_opt_ LPDWORD lpcSubKeys,_Out_opt_ LPDWORD lpcMaxSubKeyLen,_Out_opt_ LPDWORD lpcMaxClassLen,_Out_opt_ LPDWORD lpcValues,_Out_opt_ LPDWORD lpcMaxValueNameLen,_Out_opt_ LPDWORD lpcMaxValueLen,_Out_opt_ LPDWORD lpcbSecurityDescriptor,_Out_opt_ PFILETIME lpftLastWriteTime)
LONG WINAPI advapi32.RegQueryInfoKeyW(_In_ HKEY hKey,_Out_opt_ LPTSTR lpClass,_Inout_opt_ LPDWORD lpcClass,_Reserved_ LPDWORD lpReserved,_Out_opt_ LPDWORD lpcSubKeys,_Out_opt_ LPDWORD lpcMaxSubKeyLen,_Out_opt_ LPDWORD lpcMaxClassLen,_Out_opt_ LPDWORD lpcValues,_Out_opt_ LPDWORD lpcMaxValueNameLen,_Out_opt_ LPDWORD lpcMaxValueLen,_Out_opt_ LPDWORD lpcbSecurityDescriptor,_Out_opt_ PFILETIME lpftLastWriteTime)
LONG WINAPI advapi32.RegQueryInfoKeyA(_In_ HKEY hKey,_Out_opt_ LPTSTR lpClass,_Inout_opt_ LPDWORD lpcClass,_Reserved_ LPDWORD lpReserved,_Out_opt_ LPDWORD lpcSubKeys,_Out_opt_ LPDWORD lpcMaxSubKeyLen,_Out_opt_ LPDWORD lpcMaxClassLen,_Out_opt_ LPDWORD lpcValues,_Out_opt_ LPDWORD lpcMaxValueNameLen,_Out_opt_ LPDWORD lpcMaxValueLen,_Out_opt_ LPDWORD lpcbSecurityDescriptor,_Out_opt_ PFILETIME lpftLastWriteTime)
BOOL None ktmw32.RollforwardTransactionManager(_In_ HANDLE TransactionManagerHandle,_In_ PLARGE_INTEGER TmVirtualClock)
BOOL None wininet.FtpRenameFile(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszExisting,_In_ LPCTSTR lpszNew)
BOOL None wininet.FtpRenameFileW(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszExisting,_In_ LPCTSTR lpszNew)
BOOL None wininet.FtpRenameFileA(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszExisting,_In_ LPCTSTR lpszNew)
HRESULT None msftedit.GetCount([out None None,retval] long *pCount)
BOOL None jsproxy.InternetGetProxyInfo(_In_ LPCSTR lpszUrl,_In_ DWORD dwUrlLength,_In_ LPSTR lpszUrlHostName,_In_ DWORD dwUrlHostNameLength,_Out_ LPSTR *lplpszProxyHostName,_Out_ LPDWORD lpdwProxyHostNameLength)
DWORD WINAPI winhttp.WinHttpWebSocketReceive(_In_ HINTERNET hWebSocket,_Out_ PVOID pvBuffer,_In_ DWORD dwBufferLength,_Out_ DWORD *pdwBytesRead,_Out_ WINHTTP_WEB_SOCKET_BUFFER_TYPE *peBufferType)
BOOLAPI None wininet.UnlockUrlCacheEntryFile(_In_ LPCTSTR lpszUrlName,_In_ DWORD dwReserved)
BOOLAPI None wininet.UnlockUrlCacheEntryFileW(_In_ LPCTSTR lpszUrlName,_In_ DWORD dwReserved)
BOOLAPI None wininet.UnlockUrlCacheEntryFileA(_In_ LPCTSTR lpszUrlName,_In_ DWORD dwReserved)
BOOL WINBASEAPI kernel32.GetFirmwareEnvironmentVariableEx(LPCSTR lpName None,LPCSTR lpGuid None,PVOID pValue None,DWORD nSize None,PDWORD pdwAttributes None)
BOOL WINBASEAPI kernel32.GetFirmwareEnvironmentVariableExW(LPCSTR lpName None,LPCSTR lpGuid None,PVOID pValue None,DWORD nSize None,PDWORD pdwAttributes None)
BOOL WINBASEAPI kernel32.GetFirmwareEnvironmentVariableExA(LPCSTR lpName None,LPCSTR lpGuid None,PVOID pValue None,DWORD nSize None,PDWORD pdwAttributes None)
BOOL WINAPI user32.EnumThreadWindows(_In_ DWORD dwThreadId,_In_ WNDENUMPROC lpfn,_In_ LPARAM lParam)
UINT WINAPI user32.GetDlgItemInt(_In_ HWND hDlg,_In_ int nIDDlgItem,_Out_opt_ BOOL *lpTranslated,_In_ BOOL bSigned)
HRESULT APIENTRY None.MQReceiveMessage(QUEUEHANDLE hSource None,DWORD dwTimeout None,DWORD dwAction None,MQMSGPROPS * pMessageProps,LPOVERLAPPED lpOverlapped None,PMQRECEIVECALLBACK fnReceiveCallback None,HANDLE hCursor None,ITransaction * pTransaction)
DWORD None wininet.InternetAttemptConnect(_In_ DWORD dwReserved)
HRESULT APIENTRY None.MQLocateEnd(HANDLE hEnum None)
HRESULT None spoolss.InstallPrinterDriverFromPackage(_In_ LPCTSTR pszServer,_In_ LPCTSTR pszInfPath,_In_ LPCTSTR pszDriverName,_In_ LPCTSTR pszEnvironment,_In_ DWORD dwFlags)
HRESULT None spoolss.InstallPrinterDriverFromPackageW(_In_ LPCTSTR pszServer,_In_ LPCTSTR pszInfPath,_In_ LPCTSTR pszDriverName,_In_ LPCTSTR pszEnvironment,_In_ DWORD dwFlags)
HRESULT None spoolss.InstallPrinterDriverFromPackageA(_In_ LPCTSTR pszServer,_In_ LPCTSTR pszInfPath,_In_ LPCTSTR pszDriverName,_In_ LPCTSTR pszEnvironment,_In_ DWORD dwFlags)
BOOL WINAPI kernel32.SetFirmwareEnvironmentVariable(_In_ LPCTSTR lpName,_In_ LPCTSTR lpGuid,_In_ PVOID pBuffer,_In_ DWORD nSize)
BOOL WINAPI kernel32.SetFirmwareEnvironmentVariableW(_In_ LPCTSTR lpName,_In_ LPCTSTR lpGuid,_In_ PVOID pBuffer,_In_ DWORD nSize)
BOOL WINAPI kernel32.SetFirmwareEnvironmentVariableA(_In_ LPCTSTR lpName,_In_ LPCTSTR lpGuid,_In_ PVOID pBuffer,_In_ DWORD nSize)
int APIENTRY None._tWinMain(HINSTANCE None None,HINSTANCE None None,LPTSTR None None,int None None)
BOOL WINAPI kernel32.WritePrivateProfileStruct(_In_ LPCTSTR lpszSection,_In_ LPCTSTR lpszKey,_In_ LPVOID lpStruct,_In_ UINT uSizeStruct,_In_ LPCTSTR szFile)
BOOL WINAPI kernel32.WritePrivateProfileStructW(_In_ LPCTSTR lpszSection,_In_ LPCTSTR lpszKey,_In_ LPVOID lpStruct,_In_ UINT uSizeStruct,_In_ LPCTSTR szFile)
BOOL WINAPI kernel32.WritePrivateProfileStructA(_In_ LPCTSTR lpszSection,_In_ LPCTSTR lpszKey,_In_ LPVOID lpStruct,_In_ UINT uSizeStruct,_In_ LPCTSTR szFile)
int None None.Pager_GetPos(HWND hwndPager None)
BOOL None wininet.FtpCommand(_In_ HINTERNET hConnect,_In_ BOOL fExpectResponse,_In_ DWORD dwFlags,_In_ LPCTSTR lpszCommand,_In_ DWORD_PTR dwContext,_Out_ HINTERNET *phFtpCommand)
BOOL None wininet.FtpCommandW(_In_ HINTERNET hConnect,_In_ BOOL fExpectResponse,_In_ DWORD dwFlags,_In_ LPCTSTR lpszCommand,_In_ DWORD_PTR dwContext,_Out_ HINTERNET *phFtpCommand)
BOOL None wininet.FtpCommandA(_In_ HINTERNET hConnect,_In_ BOOL fExpectResponse,_In_ DWORD dwFlags,_In_ LPCTSTR lpszCommand,_In_ DWORD_PTR dwContext,_Out_ HINTERNET *phFtpCommand)
DWORD None wininet.InternetConfirmZoneCrossing(_In_ HWND hWnd,_In_ LPTSTR szUrlPrev,_In_ LPTSTR szUrlNew,_In_ BOOL bPost)
DWORD None wininet.InternetConfirmZoneCrossingW(_In_ HWND hWnd,_In_ LPTSTR szUrlPrev,_In_ LPTSTR szUrlNew,_In_ BOOL bPost)
DWORD None wininet.InternetConfirmZoneCrossingA(_In_ HWND hWnd,_In_ LPTSTR szUrlPrev,_In_ LPTSTR szUrlNew,_In_ BOOL bPost)
HWND WINAPI comdlg32.FindText(_In_ LPFINDREPLACE lpfr)
HWND WINAPI comdlg32.FindTextW(_In_ LPFINDREPLACE lpfr)
HWND WINAPI comdlg32.FindTextA(_In_ LPFINDREPLACE lpfr)
HRESULT APIENTRY None.MQSendMessage(QUEUEHANDLE hDestinationQueue None,MQMSGPROPS * pMessageProps,ITransaction * pTransaction)
DWORD None winhttp.WinHttpGetProxyForUrlEx(_In_ HINTERNET hResolver,_In_ PCWSTR pcwszUrl,_In_ WINHTTP_AUTOPROXY_OPTIONS *pAutoProxyOptions,_In_ DWORD_PTR pContext)
HINTERNET None wininet.InternetConnect(_In_ HINTERNET hInternet,_In_ LPCTSTR lpszServerName,_In_ INTERNET_PORT nServerPort,_In_ LPCTSTR lpszUsername,_In_ LPCTSTR lpszPassword,_In_ DWORD dwService,_In_ DWORD dwFlags,_In_ DWORD_PTR dwContext)
HINTERNET None wininet.InternetConnectW(_In_ HINTERNET hInternet,_In_ LPCTSTR lpszServerName,_In_ INTERNET_PORT nServerPort,_In_ LPCTSTR lpszUsername,_In_ LPCTSTR lpszPassword,_In_ DWORD dwService,_In_ DWORD dwFlags,_In_ DWORD_PTR dwContext)
HINTERNET None wininet.InternetConnectA(_In_ HINTERNET hInternet,_In_ LPCTSTR lpszServerName,_In_ INTERNET_PORT nServerPort,_In_ LPCTSTR lpszUsername,_In_ LPCTSTR lpszPassword,_In_ DWORD dwService,_In_ DWORD dwFlags,_In_ DWORD_PTR dwContext)
HRESULT None msftedit.SetDefaultTabStop([in] float Value)
BOOLAPI None wininet.UnlockUrlCacheEntryStream(_In_ HANDLE hUrlCacheStream,_In_ DWORD dwReserved)
HRESULT None None.FilterAppSpecific(LPCWSTR wszQueueFormatName None,DWORD dwAppSpecific None)
HRESULT APIENTRY None.MQLocateBegin(LPCWSTR lpwcsContext None,MQRESTRICTION * pRestriction,MQCOLUMNSET * pColumns,MQSORTSET * pSort,PHANDLE phEnum None)
HRESULT None None.DocumentEvent(_In_ HANDLE hPrinter,_In_ HDC hdc,INT iEsc None,ULONG cbIn None,_In_ PVOID pvIn,ULONG cbOut None,_Out_ PVOID pvOut)
HRESULT None None.DocumentEventW(_In_ HANDLE hPrinter,_In_ HDC hdc,INT iEsc None,ULONG cbIn None,_In_ PVOID pvIn,ULONG cbOut None,_Out_ PVOID pvOut)
HRESULT None None.DocumentEventA(_In_ HANDLE hPrinter,_In_ HDC hdc,INT iEsc None,ULONG cbIn None,_In_ PVOID pvIn,ULONG cbOut None,_Out_ PVOID pvOut)
bool None None.IS_HIGH_SURROGATE(WCHAR wch None)
BOOL WINAPI kernel32.EnumResourceLanguagesEx(_In_ HMODULE hModule,_In_ LPCTSTR lpType,_In_ LPCTSTR lpName,_In_ ENUMRESLANGPROC lpEnumFunc,_In_ LONG_PTR lParam,_In_ DWORD dwFlags,_In_ LANGID LangId)
BOOL WINAPI kernel32.EnumResourceLanguagesExW(_In_ HMODULE hModule,_In_ LPCTSTR lpType,_In_ LPCTSTR lpName,_In_ ENUMRESLANGPROC lpEnumFunc,_In_ LONG_PTR lParam,_In_ DWORD dwFlags,_In_ LANGID LangId)
BOOL WINAPI kernel32.EnumResourceLanguagesExA(_In_ HMODULE hModule,_In_ LPCTSTR lpType,_In_ LPCTSTR lpName,_In_ ENUMRESLANGPROC lpEnumFunc,_In_ LONG_PTR lParam,_In_ DWORD dwFlags,_In_ LANGID LangId)
DWORD WINAPI kernel32.GetVersion(void None None)
BOOL WINAPI ktmw32.ReadOnlyEnlistment(_In_ HANDLE EnlistmentHandle,_In_ PLARGE_INTEGER TmVirtualClock)
BOOL None None.DeleteForm(_In_ HANDLE hPrinter,_In_ LPTSTR pFormName)
BOOL None None.DeleteFormW(_In_ HANDLE hPrinter,_In_ LPTSTR pFormName)
BOOL None None.DeleteFormA(_In_ HANDLE hPrinter,_In_ LPTSTR pFormName)
BOOL WINAPI user32.GetProcessDefaultLayout(_Out_ DWORD *pdwDefaultLayout)
BOOL None None.EnumPrintProcessorDatatypes(_In_ LPTSTR pName,_In_ LPTSTR pPrintProcessorName,_In_ DWORD Level,_Out_ LPBYTE pDatatypes,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded,_Out_ LPDWORD pcReturned)
BOOL None None.EnumPrintProcessorDatatypesW(_In_ LPTSTR pName,_In_ LPTSTR pPrintProcessorName,_In_ DWORD Level,_Out_ LPBYTE pDatatypes,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded,_Out_ LPDWORD pcReturned)
BOOL None None.EnumPrintProcessorDatatypesA(_In_ LPTSTR pName,_In_ LPTSTR pPrintProcessorName,_In_ DWORD Level,_Out_ LPBYTE pDatatypes,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded,_Out_ LPDWORD pcReturned)
BOOL WINAPI user32.SetMenu(_In_ HWND hWnd,_In_opt_ HMENU hMenu)
BOOL None wininet.HttpQueryInfo(_In_ HINTERNET hRequest,_In_ DWORD dwInfoLevel,_Inout_ LPVOID lpvBuffer,_Inout_ LPDWORD lpdwBufferLength,_Inout_ LPDWORD lpdwIndex)
BOOL None wininet.HttpQueryInfoW(_In_ HINTERNET hRequest,_In_ DWORD dwInfoLevel,_Inout_ LPVOID lpvBuffer,_Inout_ LPDWORD lpdwBufferLength,_Inout_ LPDWORD lpdwIndex)
BOOL None wininet.HttpQueryInfoA(_In_ HINTERNET hRequest,_In_ DWORD dwInfoLevel,_Inout_ LPVOID lpvBuffer,_Inout_ LPDWORD lpdwBufferLength,_Inout_ LPDWORD lpdwIndex)
LONG WINAPI advapi32.RegOpenKeyTransacted(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_ DWORD ulOptions,_In_ REGSAM samDesired,_Out_ PHKEY phkResult,_In_ HANDLE hTransaction,_Reserved_ PVOID pExtendedParameter)
LONG WINAPI advapi32.RegOpenKeyTransactedW(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_ DWORD ulOptions,_In_ REGSAM samDesired,_Out_ PHKEY phkResult,_In_ HANDLE hTransaction,_Reserved_ PVOID pExtendedParameter)
LONG WINAPI advapi32.RegOpenKeyTransactedA(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_ DWORD ulOptions,_In_ REGSAM samDesired,_Out_ PHKEY phkResult,_In_ HANDLE hTransaction,_Reserved_ PVOID pExtendedParameter)
BOOL None None.AddJob(_In_ HANDLE hPrinter,_In_ DWORD Level,_Out_ LPBYTE pData,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded)
BOOL None None.AddJobW(_In_ HANDLE hPrinter,_In_ DWORD Level,_Out_ LPBYTE pData,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded)
BOOL None None.AddJobA(_In_ HANDLE hPrinter,_In_ DWORD Level,_Out_ LPBYTE pData,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded)
BOOL None wininet.InternetGetLastResponseInfo(_Out_ LPDWORD lpdwError,_Out_ LPTSTR lpszBuffer,_Inout_ LPDWORD lpdwBufferLength)
BOOL None wininet.InternetGetLastResponseInfoW(_Out_ LPDWORD lpdwError,_Out_ LPTSTR lpszBuffer,_Inout_ LPDWORD lpdwBufferLength)
BOOL None wininet.InternetGetLastResponseInfoA(_Out_ LPDWORD lpdwError,_Out_ LPTSTR lpszBuffer,_Inout_ LPDWORD lpdwBufferLength)
LRESULT CALLBACK None.WindowProc(HWND hwnd None,WM_IME_COMPOSITIONFULL None None,WPARAM wParam None,LPARAM lParam None)
LONG WINAPI advapi32.RegLoadAppKey(_In_ LPCTSTR lpFile,_Out_ PHKEY phkResult,_In_ REGSAM samDesired,_In_ DWORD dwOptions,_Reserved_ DWORD Reserved)
LONG WINAPI advapi32.RegLoadAppKeyW(_In_ LPCTSTR lpFile,_Out_ PHKEY phkResult,_In_ REGSAM samDesired,_In_ DWORD dwOptions,_Reserved_ DWORD Reserved)
LONG WINAPI advapi32.RegLoadAppKeyA(_In_ LPCTSTR lpFile,_Out_ PHKEY phkResult,_In_ REGSAM samDesired,_In_ DWORD dwOptions,_Reserved_ DWORD Reserved)
BOOL WINAPI winhttp.WinHttpSetOption(_In_ HINTERNET hInternet,_In_ DWORD dwOption,_In_ LPVOID lpBuffer,_In_ DWORD dwBufferLength)
BOOL None wininet.FtpCreateDirectory(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszDirectory)
BOOL None wininet.FtpCreateDirectoryW(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszDirectory)
BOOL None wininet.FtpCreateDirectoryA(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszDirectory)
BOOL WINAPI user32.SetWindowDisplayAffinity(_In_ HWND hWnd,_In_ DWORD dwAffinity)
BOOL None wininet.InternetReadFile(_In_ HINTERNET hFile,_Out_ LPVOID lpBuffer,_In_ DWORD dwNumberOfBytesToRead,_Out_ LPDWORD lpdwNumberOfBytesRead)
BOOL None wininet.InternetQueryDataAvailable(_In_ HINTERNET hFile,_Out_ LPDWORD lpdwNumberOfBytesAvailable,_In_ DWORD dwFlags,_In_ DWORD_PTR dwContext)
UINT_PTR CALLBACK None.PagePaintHook(_In_ HWND hdlg,_In_ UINT uiMsg,_In_ WPARAM wParam,_In_ LPARAM lParam)
HRESULT None msftedit.SetLanguageID([in] long Value)
HRESULT None None.MQMgmtAction(LPCWSTR pMachineName None,LPCWSTR pObjectName None,LPCWSTR pAction None)
BOOL None wininet.FtpGetFile(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszRemoteFile,_In_ LPCTSTR lpszNewFile,_In_ BOOL fFailIfExists,_In_ DWORD dwFlagsAndAttributes,_In_ DWORD dwFlags,_In_ DWORD_PTR dwContext)
BOOL None wininet.FtpGetFileW(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszRemoteFile,_In_ LPCTSTR lpszNewFile,_In_ BOOL fFailIfExists,_In_ DWORD dwFlagsAndAttributes,_In_ DWORD dwFlags,_In_ DWORD_PTR dwContext)
BOOL None wininet.FtpGetFileA(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszRemoteFile,_In_ LPCTSTR lpszNewFile,_In_ BOOL fFailIfExists,_In_ DWORD dwFlagsAndAttributes,_In_ DWORD dwFlags,_In_ DWORD_PTR dwContext)
BOOL None spoolss.OpenPrinter2(_In_ LPCTSTR pPrinterName,_Out_ LPHANDLE phPrinter,_In_ LPPRINTER_DEFAULTS pDefault,_In_ PPRINTER_OPTIONS pOptions)
BOOL None spoolss.OpenPrinter2W(_In_ LPCTSTR pPrinterName,_Out_ LPHANDLE phPrinter,_In_ LPPRINTER_DEFAULTS pDefault,_In_ PPRINTER_OPTIONS pOptions)
BOOL None spoolss.OpenPrinter2A(_In_ LPCTSTR pPrinterName,_Out_ LPHANDLE phPrinter,_In_ LPPRINTER_DEFAULTS pDefault,_In_ PPRINTER_OPTIONS pOptions)
BOOLAPI None wininet.SetUrlCacheEntryInfo(_In_ LPCTSTR lpszUrlName,_In_ LPINTERNET_CACHE_ENTRY_INFO lpCacheEntryInfo,_In_ DWORD dwFieldControl)
BOOLAPI None wininet.SetUrlCacheEntryInfoW(_In_ LPCTSTR lpszUrlName,_In_ LPINTERNET_CACHE_ENTRY_INFO lpCacheEntryInfo,_In_ DWORD dwFieldControl)
BOOLAPI None wininet.SetUrlCacheEntryInfoA(_In_ LPCTSTR lpszUrlName,_In_ LPINTERNET_CACHE_ENTRY_INFO lpCacheEntryInfo,_In_ DWORD dwFieldControl)
HRESULT None None.GetQueuePrivLevelProp(LPCWSTR wszQueueFormatName None,ULONG *pulValue None)
BOOL WINAPI user32.EndMenu(void None None)
LONG WINAPI advapi32.RegDisablePredefinedCache(void None None)
int WINAPI None.Dumper(HWND hX None,int intCtrlID None,HINTERNET hResource None)
BOOL None None.GetForm(_In_ HANDLE hPrinter,_In_ LPTSTR pFormName,_In_ DWORD Level,_Out_ LPBYTE pForm,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded)
BOOL None None.GetFormW(_In_ HANDLE hPrinter,_In_ LPTSTR pFormName,_In_ DWORD Level,_Out_ LPBYTE pForm,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded)
BOOL None None.GetFormA(_In_ HANDLE hPrinter,_In_ LPTSTR pFormName,_In_ DWORD Level,_Out_ LPBYTE pForm,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded)
HRESULT APIENTRY None.MQGetQueueProperties(LPCWSTR lpwcsFormatName None,MQQUEUEPROPS * pQueueProps)
BOOLAPI None wininet.GetUrlCacheEntryInfoEx(_In_ LPCTSTR lpszUrl,_Inout_opt_ LPINTERNET_CACHE_ENTRY_INFO lpCacheEntryInfo,_Inout_opt_ LPDWORD lpcbCacheEntryInfo,_Reserved_ LPTSTR lpszRedirectUrl,_Reserved_ LPDWORD lpcbRedirectUrl,_Reserved_ LPVOID lpReserved,_In_ DWORD dwFlags)
BOOLAPI None wininet.GetUrlCacheEntryInfoExW(_In_ LPCTSTR lpszUrl,_Inout_opt_ LPINTERNET_CACHE_ENTRY_INFO lpCacheEntryInfo,_Inout_opt_ LPDWORD lpcbCacheEntryInfo,_Reserved_ LPTSTR lpszRedirectUrl,_Reserved_ LPDWORD lpcbRedirectUrl,_Reserved_ LPVOID lpReserved,_In_ DWORD dwFlags)
BOOLAPI None wininet.GetUrlCacheEntryInfoExA(_In_ LPCTSTR lpszUrl,_Inout_opt_ LPINTERNET_CACHE_ENTRY_INFO lpCacheEntryInfo,_Inout_opt_ LPDWORD lpcbCacheEntryInfo,_Reserved_ LPTSTR lpszRedirectUrl,_Reserved_ LPDWORD lpcbRedirectUrl,_Reserved_ LPVOID lpReserved,_In_ DWORD dwFlags)
HRESULT None msftedit.GetWeight(long *pValue None)
BOOL None None.AddPrintProvidor(_In_ LPTSTR pName,_In_ DWORD Level,_In_ LPBYTE pProviderInfo)
BOOL None None.AddPrintProvidorW(_In_ LPTSTR pName,_In_ DWORD Level,_In_ LPBYTE pProviderInfo)
BOOL None None.AddPrintProvidorA(_In_ LPTSTR pName,_In_ DWORD Level,_In_ LPBYTE pProviderInfo)
HRESULT None winhttp.get_ResponseBody([out None None,retval] VARIANT *Body)
HRESULT APIENTRY None.MQCloseQueue(QUEUEHANDLE hQueue None)
HRESULT None msftedit.SetURL([in] BSTR bstr)
BYTE None None.GetRValue(DWORD rgb None)
UINT WINAPI kernel32.GetPrivateProfileInt(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ INT nDefault,_In_ LPCTSTR lpFileName)
UINT WINAPI kernel32.GetPrivateProfileIntW(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ INT nDefault,_In_ LPCTSTR lpFileName)
UINT WINAPI kernel32.GetPrivateProfileIntA(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ INT nDefault,_In_ LPCTSTR lpFileName)
BOOL WINAPI user32.IsCharUpper(_In_ TCHAR ch)
BOOL WINAPI user32.IsCharUpperW(_In_ TCHAR ch)
BOOL WINAPI user32.IsCharUpperA(_In_ TCHAR ch)
HRESULT None msftedit.TxSetText([in] LPCTSTR pszText)
HRESULT None msftedit.GetGravity([out None None,retval] long *pValue)
HANDLE None None.AddPrinter(_In_ LPTSTR *pName,_In_ DWORD Level,_In_ LPBYTE pPrinter)
HANDLE None None.AddPrinterW(_In_ LPTSTR *pName,_In_ DWORD Level,_In_ LPBYTE pPrinter)
HANDLE None None.AddPrinterA(_In_ LPTSTR *pName,_In_ DWORD Level,_In_ LPBYTE pPrinter)
HRESULT None msftedit.Range2([in] long cpActive,[in] long cpAnchor,[out None None,retval] ITextRange2 **ppRange)
BOOL None wininet.InternetQueryOption(_In_ HINTERNET hInternet,_In_ DWORD dwOption,_Out_ LPVOID lpBuffer,_Inout_ LPDWORD lpdwBufferLength)
BOOL None wininet.InternetQueryOptionW(_In_ HINTERNET hInternet,_In_ DWORD dwOption,_Out_ LPVOID lpBuffer,_Inout_ LPDWORD lpdwBufferLength)
BOOL None wininet.InternetQueryOptionA(_In_ HINTERNET hInternet,_In_ DWORD dwOption,_Out_ LPVOID lpBuffer,_Inout_ LPDWORD lpdwBufferLength)
HWND WINAPI user32.ChildWindowFromPointEx(_In_ HWND hwndParent,_In_ POINT pt,_In_ UINT uFlags)
BOOL None wininet.SetUrlCacheGroupAttribute(_In_ GROUPID gid,_In_ DWORD dwFlags,_In_ DWORD dwAttributes,_In_ LPINTERNET_CACHE_GROUP_INFO lpGroupInfo,_Inout_ LPVOID lpReserved)
BOOL None wininet.SetUrlCacheGroupAttributeW(_In_ GROUPID gid,_In_ DWORD dwFlags,_In_ DWORD dwAttributes,_In_ LPINTERNET_CACHE_GROUP_INFO lpGroupInfo,_Inout_ LPVOID lpReserved)
BOOL None wininet.SetUrlCacheGroupAttributeA(_In_ GROUPID gid,_In_ DWORD dwFlags,_In_ DWORD dwAttributes,_In_ LPINTERNET_CACHE_GROUP_INFO lpGroupInfo,_Inout_ LPVOID lpReserved)
BOOL None wininet.InternetSetCookie(_In_ LPCTSTR lpszUrl,_In_ LPCTSTR lpszCookieName,_In_ LPCTSTR lpszCookieData)
BOOL None wininet.InternetSetCookieW(_In_ LPCTSTR lpszUrl,_In_ LPCTSTR lpszCookieName,_In_ LPCTSTR lpszCookieData)
BOOL None wininet.InternetSetCookieA(_In_ LPCTSTR lpszUrl,_In_ LPCTSTR lpszCookieName,_In_ LPCTSTR lpszCookieData)
void CALLBACK None.InternetStatusCallback(_In_ HINTERNET hInternet,_In_ DWORD_PTR dwContext,_In_ DWORD dwInternetStatus,_In_ LPVOID lpvStatusInformation,_In_ DWORD dwStatusInformationLength)
HRESULT None msftedit.GetKerning(float *pValue None)
BOOL WINAPI user32.SystemParametersInfo(_In_ UINT uiAction,_In_ UINT uiParam,_Inout_ PVOID pvParam,_In_ UINT fWinIni)
BOOL WINAPI user32.SystemParametersInfoW(_In_ UINT uiAction,_In_ UINT uiParam,_Inout_ PVOID pvParam,_In_ UINT fWinIni)
BOOL WINAPI user32.SystemParametersInfoA(_In_ UINT uiAction,_In_ UINT uiParam,_Inout_ PVOID pvParam,_In_ UINT fWinIni)
DWORD None None.GetPrinterData(_In_ HANDLE hPrinter,_In_ LPTSTR pValueName,_Out_ LPDWORD pType,_Out_ LPBYTE pData,_In_ DWORD nSize,_Out_ LPDWORD pcbNeeded)
DWORD None None.GetPrinterDataW(_In_ HANDLE hPrinter,_In_ LPTSTR pValueName,_Out_ LPDWORD pType,_Out_ LPBYTE pData,_In_ DWORD nSize,_Out_ LPDWORD pcbNeeded)
DWORD None None.GetPrinterDataA(_In_ HANDLE hPrinter,_In_ LPTSTR pValueName,_Out_ LPDWORD pType,_Out_ LPBYTE pData,_In_ DWORD nSize,_Out_ LPDWORD pcbNeeded)
BOOL None wininet.InternetCombineUrl(_In_ LPCTSTR lpszBaseUrl,_In_ LPCTSTR lpszRelativeUrl,_Out_ LPTSTR lpszBuffer,_Inout_ LPDWORD lpdwBufferLength,_In_ DWORD dwFlags)
BOOL None wininet.InternetCombineUrlW(_In_ LPCTSTR lpszBaseUrl,_In_ LPCTSTR lpszRelativeUrl,_Out_ LPTSTR lpszBuffer,_Inout_ LPDWORD lpdwBufferLength,_In_ DWORD dwFlags)
BOOL None wininet.InternetCombineUrlA(_In_ LPCTSTR lpszBaseUrl,_In_ LPCTSTR lpszRelativeUrl,_Out_ LPTSTR lpszBuffer,_Inout_ LPDWORD lpdwBufferLength,_In_ DWORD dwFlags)
BOOL None spoolss.StartPagePrinter(_In_ HANDLE hPrinter)
LONG WINAPI advapi32.RegDeleteKey(_In_ HKEY hKey,_In_ LPCTSTR lpSubKey)
LONG WINAPI advapi32.RegDeleteKeyW(_In_ HKEY hKey,_In_ LPCTSTR lpSubKey)
LONG WINAPI advapi32.RegDeleteKeyA(_In_ HKEY hKey,_In_ LPCTSTR lpSubKey)
STDAPI None urlmon.CoInternetParseUrl(LPCWSTR pwzUrl None,PARSEACTION ParseAction None,DWORD dwFlags None,LPWSTR pszResult None,DWORD cchResult None,DWORD *pcchResult None,_Reserved_ DWORD dwReserved)
BOOL None wininet.InternetSetCookie(_In_ LPCTSTR lpszUrl,_In_ LPCTSTR lpszCookieName,_In_ LPCTSTR lpszCookieData)
BOOL None wininet.InternetSetCookieW(_In_ LPCTSTR lpszUrl,_In_ LPCTSTR lpszCookieName,_In_ LPCTSTR lpszCookieData)
BOOL None wininet.InternetSetCookieA(_In_ LPCTSTR lpszUrl,_In_ LPCTSTR lpszCookieName,_In_ LPCTSTR lpszCookieData)
BOOL None wininet.InternetSetCookie(_In_ LPCTSTR lpszUrl,_In_ LPCTSTR lpszCookieName,_In_ LPCTSTR lpszCookieData)
BOOL None wininet.InternetSetCookieW(_In_ LPCTSTR lpszUrl,_In_ LPCTSTR lpszCookieName,_In_ LPCTSTR lpszCookieData)
BOOL None wininet.InternetSetCookieA(_In_ LPCTSTR lpszUrl,_In_ LPCTSTR lpszCookieName,_In_ LPCTSTR lpszCookieData)
BOOL None wininet.InternetAutodial(_In_ DWORD dwFlags,_In_ HWND hwndParent)
DWORD WINAPI winhttp.WinHttpWebSocketQueryCloseStatus(_In_ HINTERNET hWebSocket,_Out_ USHORT *pusStatus,_Out_ PVOID pvReason,_In_ DWORD dwReasonLength,_Out_ DWORD *pdwReasonLengthConsumed)
BOOL WINAPI user32.AdjustWindowRect(_Inout_ LPRECT lpRect,_In_ DWORD dwStyle,_In_ BOOL bMenu)
BOOL None wininet.InternetSetCookie(_In_ LPCTSTR lpszUrl,_In_ LPCTSTR lpszCookieName,_In_ LPCTSTR lpszCookieData)
BOOL None wininet.InternetSetCookieW(_In_ LPCTSTR lpszUrl,_In_ LPCTSTR lpszCookieName,_In_ LPCTSTR lpszCookieData)
BOOL None wininet.InternetSetCookieA(_In_ LPCTSTR lpszUrl,_In_ LPCTSTR lpszCookieName,_In_ LPCTSTR lpszCookieData)
BOOL None wininet.InternetSetCookie(_In_ LPCTSTR lpszUrl,_In_ LPCTSTR lpszCookieName,_In_ LPCTSTR lpszCookieData)
BOOL None wininet.InternetSetCookieW(_In_ LPCTSTR lpszUrl,_In_ LPCTSTR lpszCookieName,_In_ LPCTSTR lpszCookieData)
BOOL None wininet.InternetSetCookieA(_In_ LPCTSTR lpszUrl,_In_ LPCTSTR lpszCookieName,_In_ LPCTSTR lpszCookieData)
HWND WINAPI user32.CreateDialogIndirectParam(_In_opt_ HINSTANCE hInstance,_In_ LPCDLGTEMPLATE lpTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc,_In_ LPARAM lParamInit)
HWND WINAPI user32.CreateDialogIndirectParamW(_In_opt_ HINSTANCE hInstance,_In_ LPCDLGTEMPLATE lpTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc,_In_ LPARAM lParamInit)
HWND WINAPI user32.CreateDialogIndirectParamA(_In_opt_ HINSTANCE hInstance,_In_ LPCDLGTEMPLATE lpTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc,_In_ LPARAM lParamInit)
BOOLAPI None wininet.SetUrlCacheEntryGroup(_In_ LPCTSTR lpszUrlName,_In_ DWORD dwFlags,_In_ GROUPID GroupId,_In_ LPBYTE pbGroupAttributes,_In_ DWORD cbGroupAttributes,_In_ LPVOID lpReserved)
BOOLAPI None wininet.SetUrlCacheEntryGroupW(_In_ LPCTSTR lpszUrlName,_In_ DWORD dwFlags,_In_ GROUPID GroupId,_In_ LPBYTE pbGroupAttributes,_In_ DWORD cbGroupAttributes,_In_ LPVOID lpReserved)
BOOLAPI None wininet.SetUrlCacheEntryGroupA(_In_ LPCTSTR lpszUrlName,_In_ DWORD dwFlags,_In_ GROUPID GroupId,_In_ LPBYTE pbGroupAttributes,_In_ DWORD cbGroupAttributes,_In_ LPVOID lpReserved)
LANGID None kernel32.SetThreadUILanguage(_In_ LANGID LangId)
HRESULT None msftedit.GetProtected(long *pValue None)
BOOL WINAPI None.ChangeFtpDir(HWND hDlg None,HINTERNET hConnection None,int nDirNameId None,int nListBoxId None)
BOOL None jsproxy.InternetInitializeAutoProxyDll(_In_ DWORD dwReserved)
HINTERNET None wininet.GopherOpenFile(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszLocator,_In_ LPCTSTR lpszView,_In_ DWORD dwFlags,_In_ DWORD_PTR dwContext)
HINTERNET None wininet.GopherOpenFileW(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszLocator,_In_ LPCTSTR lpszView,_In_ DWORD dwFlags,_In_ DWORD_PTR dwContext)
HINTERNET None wininet.GopherOpenFileA(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszLocator,_In_ LPCTSTR lpszView,_In_ DWORD dwFlags,_In_ DWORD_PTR dwContext)
BOOL None wininet.InternetSetCookie(_In_ LPCTSTR lpszUrl,_In_ LPCTSTR lpszCookieName,_In_ LPCTSTR lpszCookieData)
BOOL None wininet.InternetSetCookieW(_In_ LPCTSTR lpszUrl,_In_ LPCTSTR lpszCookieName,_In_ LPCTSTR lpszCookieData)
BOOL None wininet.InternetSetCookieA(_In_ LPCTSTR lpszUrl,_In_ LPCTSTR lpszCookieName,_In_ LPCTSTR lpszCookieData)
BOOL None wininet.InternetSetCookie(_In_ LPCTSTR lpszUrl,_In_ LPCTSTR lpszCookieName,_In_ LPCTSTR lpszCookieData)
BOOL None wininet.InternetSetCookieW(_In_ LPCTSTR lpszUrl,_In_ LPCTSTR lpszCookieName,_In_ LPCTSTR lpszCookieData)
BOOL None wininet.InternetSetCookieA(_In_ LPCTSTR lpszUrl,_In_ LPCTSTR lpszCookieName,_In_ LPCTSTR lpszCookieData)
LONG WINAPI advapi32.RegRestoreKey(_In_ HKEY hKey,_In_ LPCTSTR lpFile,_In_ DWORD dwFlags)
LONG WINAPI advapi32.RegRestoreKeyW(_In_ HKEY hKey,_In_ LPCTSTR lpFile,_In_ DWORD dwFlags)
LONG WINAPI advapi32.RegRestoreKeyA(_In_ HKEY hKey,_In_ LPCTSTR lpFile,_In_ DWORD dwFlags)
BOOL None wininet.GopherCreateLocator(_In_ LPCTSTR lpszHost,_In_ INTERNET_PORT nServerPort,_In_ LPCTSTR lpszDisplayString,_In_ LPCTSTR lpszSelectorString,_In_ DWORD dwGopherType,_Out_ LPTSTR lpszLocator,_Inout_ LPDWORD lpdwBufferLength)
BOOL None wininet.GopherCreateLocatorW(_In_ LPCTSTR lpszHost,_In_ INTERNET_PORT nServerPort,_In_ LPCTSTR lpszDisplayString,_In_ LPCTSTR lpszSelectorString,_In_ DWORD dwGopherType,_Out_ LPTSTR lpszLocator,_Inout_ LPDWORD lpdwBufferLength)
BOOL None wininet.GopherCreateLocatorA(_In_ LPCTSTR lpszHost,_In_ INTERNET_PORT nServerPort,_In_ LPCTSTR lpszDisplayString,_In_ LPCTSTR lpszSelectorString,_In_ DWORD dwGopherType,_Out_ LPTSTR lpszLocator,_Inout_ LPDWORD lpdwBufferLength)
HRESULT APIENTRY None.MQMarkMessageRejected(QUEUEHANDLE hQueue None,ULONGLONG ullLookupId None)
BOOL None wininet.FtpRemoveDirectory(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszDirectory)
BOOL None wininet.FtpRemoveDirectoryW(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszDirectory)
BOOL None wininet.FtpRemoveDirectoryA(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszDirectory)
LONG None t2embed.TTEnableEmbeddingForFacename(_In_ LPSTR lpszFacename,_In_ bool bEnable)
BOOL WINAPI user32.RemoveMenu(_In_ HMENU hMenu,_In_ UINT uPosition,_In_ UINT uFlags)
BOOL None wininet.InternetSetCookie(_In_ LPCTSTR lpszUrl,_In_ LPCTSTR lpszCookieName,_In_ LPCTSTR lpszCookieData)
BOOL None wininet.InternetSetCookieW(_In_ LPCTSTR lpszUrl,_In_ LPCTSTR lpszCookieName,_In_ LPCTSTR lpszCookieData)
BOOL None wininet.InternetSetCookieA(_In_ LPCTSTR lpszUrl,_In_ LPCTSTR lpszCookieName,_In_ LPCTSTR lpszCookieData)
BOOL WINAPI kernel32.IsWindowsVistaOrGreater(void None None)
HRESULT None msftedit.TxGetCurTargetX(LONG *px None)
BOOL WINAPI winhttp.WinHttpAddRequestHeaders(_In_ HINTERNET hRequest,_In_ LPCWSTR pwszHeaders,_In_ DWORD dwHeadersLength,_In_ DWORD dwModifiers)
HRESULT APIENTRY None.MQPurgeQueue(HANDLE hQueue None)
HKL WINAPI user32.LoadKeyboardLayout(_In_ LPCTSTR pwszKLID,_In_ UINT Flags)
HKL WINAPI user32.LoadKeyboardLayoutW(_In_ LPCTSTR pwszKLID,_In_ UINT Flags)
HKL WINAPI user32.LoadKeyboardLayoutA(_In_ LPCTSTR pwszKLID,_In_ UINT Flags)
DWORD WINAPI winhttp.WinHttpWebSocketSend(_In_ HINTERNET hWebSocket,_In_ WINHTTP_WEB_SOCKET_BUFFER_TYPE eBufferType,_In_ PVOID pvBuffer,_In_ DWORD dwBufferLength)
DWORD WINAPI winhttp.WinHttpWebSocketSend(_In_ HINTERNET hWebSocket,_In_ WINHTTP_WEB_SOCKET_BUFFER_TYPE eBufferType,_In_ PVOID pvBuffer,_In_ DWORD dwBufferLength)
BOOL WINAPI user32.IsCharLower(_In_ TCHAR ch)
BOOL WINAPI user32.IsCharLowerA(_In_ TCHAR ch)
BOOL None spoolss.FindNextPrinterChangeNotification(_In_ HANDLE hChange,_Out_opt_ PDWORD pdwChange,_In_opt_ LPVOID pPrinterNotifyOptions,_Out_opt_ LPVOID *ppPrinterNotifyInfo)
LPTSTR WINAPI user32.CharNext(_In_ LPCTSTR lpsz)
LPTSTR WINAPI user32.CharNextW(_In_ LPCTSTR lpsz)
LPTSTR WINAPI user32.CharNextA(_In_ LPCTSTR lpsz)
HMENU WINAPI user32.GetSystemMenu(_In_ HWND hWnd,_In_ BOOL bRevert)
int None gdi32.EnumFontFamilies(_In_ HDC hdc,_In_ LPCTSTR lpszFamily,_In_ FONTENUMPROC lpEnumFontFamProc,_In_ LPARAM lParam)
int None gdi32.EnumFontFamiliesW(_In_ HDC hdc,_In_ LPCTSTR lpszFamily,_In_ FONTENUMPROC lpEnumFontFamProc,_In_ LPARAM lParam)
int None gdi32.EnumFontFamiliesA(_In_ HDC hdc,_In_ LPCTSTR lpszFamily,_In_ FONTENUMPROC lpEnumFontFamProc,_In_ LPARAM lParam)
BOOL WINAPI ktmw32.SetTransactionInformation(_In_ HANDLE TransactionHandle,_In_opt_ DWORD IsolationLevel,_In_opt_ DWORD IsolationFlags,_In_opt_ DWORD Timeout,_In_opt_ LPWSTR Description)
BOOL WINAPI winhttp.WinHttpWriteData(_In_ HINTERNET hRequest,_In_ LPCVOID lpBuffer,_In_ DWORD dwNumberOfBytesToWrite,_Out_ LPDWORD lpdwNumberOfBytesWritten)
BOOLAPI None wininet.CommitUrlCacheEntryA(_In_ LPCSTR lpszUrlName,_In_ LPCSTR lpszLocalFileName,_In_ FILETIME ExpireTime,_In_ FILETIME LastModifiedTime,_In_ DWORD CacheEntryType,_In_ LPBYTE lpHeaderInfo,_In_ DWORD cchHeaderInfo,_Reserved_ LPCSTR lpszFileExtension,_In_ LPCSTR lpszOriginalUrl)
HRESULT None msftedit.GetSelection(ITextSelection **ppSel None)
HRESULT None spoolss.UploadPrinterDriverPackage(_In_ LPCTSTR pszServer,_In_ LPCTSTR pszInfPath,_In_ LPCTSTR pszEnvironment,_In_ DWORD dwFlags,_In_ HWND hwnd,_Out_ LPTSTR pszDestInfPath,_Inout_ PULONG pcchDestInfPath)
HRESULT None spoolss.UploadPrinterDriverPackageW(_In_ LPCTSTR pszServer,_In_ LPCTSTR pszInfPath,_In_ LPCTSTR pszEnvironment,_In_ DWORD dwFlags,_In_ HWND hwnd,_Out_ LPTSTR pszDestInfPath,_Inout_ PULONG pcchDestInfPath)
HRESULT None spoolss.UploadPrinterDriverPackageA(_In_ LPCTSTR pszServer,_In_ LPCTSTR pszInfPath,_In_ LPCTSTR pszEnvironment,_In_ DWORD dwFlags,_In_ HWND hwnd,_Out_ LPTSTR pszDestInfPath,_Inout_ PULONG pcchDestInfPath)
DWORD WINAPI winhttp.WinHttpWebSocketSend(_In_ HINTERNET hWebSocket,_In_ WINHTTP_WEB_SOCKET_BUFFER_TYPE eBufferType,_In_ PVOID pvBuffer,_In_ DWORD dwBufferLength)
BOOL WINAPI kernel32.IsWindows7OrGreater(void None None)
HRESULT None winhttp.Open([in] BSTR Method,[in] BSTR Url,[in None None,optional] VARIANT Async)
HRESULT None msftedit.Undo(long Count None,long *prop None)
HRESULT None mrmsupport.CreateResourceIndexer(_In_ PCWSTR projectRoot,_In_opt_ PCWSTR extensionDllPath,_Out_ PVOID *ppResourceIndexer)
HRESULT None msftedit.TxActivate(LONG *plOldState None)
HRESULT APIENTRY None.MQSetQueueSecurity(LPCWSTR lpwcsFormatName None,SECURITY_INFORMATION SecurityInformation None,PSECURITY_DESCRIPTOR pSecurityDescriptor None)
DWORD WINAPI api-ms-win-core-version-l1-1-0.GetFileVersionInfoSizeEx(_In_ DWORD dwFlags,_In_ LPCTSTR lptstrFilename,_Out_ LPDWORD lpdwHandle)
DWORD WINAPI api-ms-win-core-version-l1-1-0.GetFileVersionInfoSizeExW(_In_ DWORD dwFlags,_In_ LPCTSTR lptstrFilename,_Out_ LPDWORD lpdwHandle)
DWORD WINAPI api-ms-win-core-version-l1-1-0.GetFileVersionInfoSizeExA(_In_ DWORD dwFlags,_In_ LPCTSTR lptstrFilename,_Out_ LPDWORD lpdwHandle)
HRESULT None msftedit.GetDuplicate2([out None None,retval] ITextPara2 **ppPara)
HRESULT APIENTRY None.MQCreateCursor(QUEUEHANDLE hQueue None,PHANDLE phCursor None)
int None None.Pager_SetButtonSize(HWND hwndPager None,int iButtonSize None)
BOOL None None.AddPrinterConnection2(_In_ HWND hWnd,_In_ LPCTSTR pszName,DWORD dwLevel None,_In_ PVOID pConnectionInfo)
BOOL None None.AddPrinterConnection2W(_In_ HWND hWnd,_In_ LPCTSTR pszName,DWORD dwLevel None,_In_ PVOID pConnectionInfo)
BOOL None None.SetPrinter(_In_ HANDLE hPrinter,_In_ DWORD Level,_In_ LPBYTE pPrinter,_In_ DWORD Command)
BOOL None None.SetPrinterW(_In_ HANDLE hPrinter,_In_ DWORD Level,_In_ LPBYTE pPrinter,_In_ DWORD Command)
BOOL None None.SetPrinterA(_In_ HANDLE hPrinter,_In_ DWORD Level,_In_ LPBYTE pPrinter,_In_ DWORD Command)
HRESULT APIENTRY None.MQInstanceToFormatName(GUID * pGUID,LPWSTR lpwcsFormatName None,LPDWORD lpdwCount None)
VOID WINAPI winhttp.WinHttpFreeProxyResult(_Inout_ WINHTTP_PROXY_RESULT *pProxyResult)
HRESULT APIENTRY None.MQHandleToFormatName(QUEUEHANDLE hQueue None,LPWSTR lpwcsFormatName None,LPDWORD lpdwCount None)
BOOL WINAPI user32.DestroyIcon(_In_ HICON hIcon)
HCURSOR WINAPI user32.LoadCursorFromFile(_In_ LPCTSTR lpFileName)
HCURSOR WINAPI user32.LoadCursorFromFileW(_In_ LPCTSTR lpFileName)
HCURSOR WINAPI user32.LoadCursorFromFileA(_In_ LPCTSTR lpFileName)
BOOL None wininet.FtpRenameFile(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszExisting,_In_ LPCTSTR lpszNew)
BOOL None wininet.FtpRenameFileW(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszExisting,_In_ LPCTSTR lpszNew)
BOOL None wininet.FtpRenameFileA(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszExisting,_In_ LPCTSTR lpszNew)
BOOL None wininet.InternetSetCookie(_In_ LPCTSTR lpszUrl,_In_ LPCTSTR lpszCookieName,_In_ LPCTSTR lpszCookieData)
BOOL None wininet.InternetSetCookieW(_In_ LPCTSTR lpszUrl,_In_ LPCTSTR lpszCookieName,_In_ LPCTSTR lpszCookieData)
BOOL None wininet.InternetSetCookieA(_In_ LPCTSTR lpszUrl,_In_ LPCTSTR lpszCookieName,_In_ LPCTSTR lpszCookieData)
BOOL WINAPI winhttp.WinHttpTimeToSystemTime(_In_ LPCWSTR pwszTime,_Out_ SYSTEMTIME *pst)
BOOL WINAPI user32.IsMenu(_In_ HMENU hMenu)
BOOL None wininet.InternetSetCookie(_In_ LPCTSTR lpszUrl,_In_ LPCTSTR lpszCookieName,_In_ LPCTSTR lpszCookieData)
BOOL None wininet.InternetSetCookieW(_In_ LPCTSTR lpszUrl,_In_ LPCTSTR lpszCookieName,_In_ LPCTSTR lpszCookieData)
BOOL None wininet.InternetSetCookieA(_In_ LPCTSTR lpszUrl,_In_ LPCTSTR lpszCookieName,_In_ LPCTSTR lpszCookieData)
BOOL None wininet.SetUrlCacheGroupAttribute(_In_ GROUPID gid,_In_ DWORD dwFlags,_In_ DWORD dwAttributes,_In_ LPINTERNET_CACHE_GROUP_INFO lpGroupInfo,_Inout_ LPVOID lpReserved)
BOOL None wininet.SetUrlCacheGroupAttributeW(_In_ GROUPID gid,_In_ DWORD dwFlags,_In_ DWORD dwAttributes,_In_ LPINTERNET_CACHE_GROUP_INFO lpGroupInfo,_Inout_ LPVOID lpReserved)
BOOL None wininet.SetUrlCacheGroupAttributeA(_In_ GROUPID gid,_In_ DWORD dwFlags,_In_ DWORD dwAttributes,_In_ LPINTERNET_CACHE_GROUP_INFO lpGroupInfo,_Inout_ LPVOID lpReserved)
BOOL None wininet.InternetSetCookie(_In_ LPCTSTR lpszUrl,_In_ LPCTSTR lpszCookieName,_In_ LPCTSTR lpszCookieData)
BOOL None wininet.InternetSetCookieW(_In_ LPCTSTR lpszUrl,_In_ LPCTSTR lpszCookieName,_In_ LPCTSTR lpszCookieData)
BOOL None wininet.InternetSetCookieA(_In_ LPCTSTR lpszUrl,_In_ LPCTSTR lpszCookieName,_In_ LPCTSTR lpszCookieData)
HRESULT None None.MQMoveMessage(QUEUEHANDLE sourceQueue None,QUEUEHANDLE targetQueue None,ULONGLONG lookupID None,ITransaction* pTransaction None)
HRESULT None None.FilterAppSpecific(LPCWSTR wszQueueFormatName None,DWORD dwAppSpecific None)
BOOL None wininet.FtpRenameFile(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszExisting,_In_ LPCTSTR lpszNew)
BOOL None wininet.FtpRenameFileW(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszExisting,_In_ LPCTSTR lpszNew)
BOOL None wininet.FtpRenameFileA(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszExisting,_In_ LPCTSTR lpszNew)
BOOL None wininet.InternetSetCookie(_In_ LPCTSTR lpszUrl,_In_ LPCTSTR lpszCookieName,_In_ LPCTSTR lpszCookieData)
BOOL None wininet.InternetSetCookieW(_In_ LPCTSTR lpszUrl,_In_ LPCTSTR lpszCookieName,_In_ LPCTSTR lpszCookieData)
BOOL None wininet.InternetSetCookieA(_In_ LPCTSTR lpszUrl,_In_ LPCTSTR lpszCookieName,_In_ LPCTSTR lpszCookieData)
LONG WINAPI advapi32.RegLoadKey(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_ LPCTSTR lpFile)
LONG WINAPI advapi32.RegLoadKeyW(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_ LPCTSTR lpFile)
LONG WINAPI advapi32.RegLoadKeyA(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_ LPCTSTR lpFile)
VOID APIENTRY None.MQFreeSecurityContext(HANDLE hSecurityContext None)
LONG WINAPI advapi32.RegOpenUserClassesRoot(_In_ HANDLE hToken,_Reserved_ DWORD dwOptions,_In_ REGSAM samDesired,_Out_ PHKEY phkResult)
HRESULT None msftedit.Unfreeze(long *pCount None)
BOOL None wininet.InternetSetCookie(_In_ LPCTSTR lpszUrl,_In_ LPCTSTR lpszCookieName,_In_ LPCTSTR lpszCookieData)
BOOL None wininet.InternetSetCookieW(_In_ LPCTSTR lpszUrl,_In_ LPCTSTR lpszCookieName,_In_ LPCTSTR lpszCookieData)
BOOL None wininet.InternetSetCookieA(_In_ LPCTSTR lpszUrl,_In_ LPCTSTR lpszCookieName,_In_ LPCTSTR lpszCookieData)
HRESULT APIENTRY None.MQOpenQueue(LPCWSTR lpwcsFormatName None,DWORD dwAccess None,DWORD dwShareMode None,QUEUEHANDLE * phQueue)
int WINAPI user32.GetDlgCtrlID(_In_ HWND hwndCtl)
HRESULT APIENTRY None.MQGetSecurityContextEx(LPVOID lpCertBuffer None,DWORD dwCertBufferLength None,HANDLE * phSecurityContext)
HWND WINAPI user32.GetTopWindow(_In_opt_ HWND hWnd)
DWORD WINAPI kernel32.GetPrivateProfileSectionNames(_Out_ LPTSTR lpszReturnBuffer,_In_ DWORD nSize,_In_ LPCTSTR lpFileName)
DWORD WINAPI kernel32.GetPrivateProfileSectionNamesW(_Out_ LPTSTR lpszReturnBuffer,_In_ DWORD nSize,_In_ LPCTSTR lpFileName)
DWORD WINAPI kernel32.GetPrivateProfileSectionNamesA(_Out_ LPTSTR lpszReturnBuffer,_In_ DWORD nSize,_In_ LPCTSTR lpFileName)
BOOL None wininet.InternetSetCookie(_In_ LPCTSTR lpszUrl,_In_ LPCTSTR lpszCookieName,_In_ LPCTSTR lpszCookieData)
BOOL None wininet.InternetSetCookieW(_In_ LPCTSTR lpszUrl,_In_ LPCTSTR lpszCookieName,_In_ LPCTSTR lpszCookieData)
BOOL None wininet.InternetSetCookieA(_In_ LPCTSTR lpszUrl,_In_ LPCTSTR lpszCookieName,_In_ LPCTSTR lpszCookieData)
BOOL WINAPI user32.DestroyAcceleratorTable(_In_ HACCEL hAccel)
int CALLBACK None.EnumFontFamExProc(const LOGFONT *lpelfe,const TEXTMETRIC *lpntme,DWORD FontType None,LPARAM lParam None)
int CALLBACK None.EnumFontFamExProcW(const LOGFONT *lpelfe,const TEXTMETRIC *lpntme,DWORD FontType None,LPARAM lParam None)
int CALLBACK None.EnumFontFamExProcA(const LOGFONT *lpelfe,const TEXTMETRIC *lpntme,DWORD FontType None,LPARAM lParam None)
static POINT_2F None.GetMousePositionForCurrentDpi(LPARAM lParam None)
HANDLE None wininet.FindFirstUrlCacheEntry(_In_ LPCTSTR lpszUrlSearchPattern,_Out_ LPINTERNET_CACHE_ENTRY_INFO lpFirstCacheEntryInfo,_Inout_ LPDWORD lpcbCacheEntryInfo)
HANDLE None wininet.FindFirstUrlCacheEntryW(_In_ LPCTSTR lpszUrlSearchPattern,_Out_ LPINTERNET_CACHE_ENTRY_INFO lpFirstCacheEntryInfo,_Inout_ LPDWORD lpcbCacheEntryInfo)
HANDLE None wininet.FindFirstUrlCacheEntryA(_In_ LPCTSTR lpszUrlSearchPattern,_Out_ LPINTERNET_CACHE_ENTRY_INFO lpFirstCacheEntryInfo,_Inout_ LPDWORD lpcbCacheEntryInfo)
int None gdi32.SetGraphicsMode(_In_ HDC hdc,_In_ int iMode)
BOOL None wininet.FtpRenameFile(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszExisting,_In_ LPCTSTR lpszNew)
BOOL None wininet.FtpRenameFileW(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszExisting,_In_ LPCTSTR lpszNew)
BOOL None wininet.FtpRenameFileA(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszExisting,_In_ LPCTSTR lpszNew)
BOOL WINAPI user32.IsCharAlphaNumeric(_In_ TCHAR ch)
BOOL WINAPI user32.IsCharAlphaNumericW(_In_ TCHAR ch)
BOOL WINAPI user32.IsCharAlphaNumericA(_In_ TCHAR ch)
DWORD None None.EnumPrinterDataEx(_In_ HANDLE hPrinter,_In_ LPCTSTR pKeyName,_Out_ LPBYTE pEnumValues,_In_ DWORD cbEnumValues,_Out_ LPDWORD pcbEnumValues,_Out_ LPDWORD pnEnumValues)
DWORD None None.EnumPrinterDataExW(_In_ HANDLE hPrinter,_In_ LPCTSTR pKeyName,_Out_ LPBYTE pEnumValues,_In_ DWORD cbEnumValues,_Out_ LPDWORD pcbEnumValues,_Out_ LPDWORD pnEnumValues)
DWORD None None.EnumPrinterDataExA(_In_ HANDLE hPrinter,_In_ LPCTSTR pKeyName,_Out_ LPBYTE pEnumValues,_In_ DWORD cbEnumValues,_Out_ LPDWORD pcbEnumValues,_Out_ LPDWORD pnEnumValues)
HRESULT None msftedit.GetTab(long iTab None,float *ptbPos None,long *ptbAlign None,long *ptbLeader None)
HRESULT APIENTRY None.MQCreateCursor(QUEUEHANDLE hQueue None,PHANDLE phCursor None)
BOOL WINAPI user32.InsertMenu(_In_ HMENU hMenu,_In_ UINT uPosition,_In_ UINT uFlags,_In_ UINT_PTR uIDNewItem,_In_opt_ LPCTSTR lpNewItem)
BOOL WINAPI user32.InsertMenuW(_In_ HMENU hMenu,_In_ UINT uPosition,_In_ UINT uFlags,_In_ UINT_PTR uIDNewItem,_In_opt_ LPCTSTR lpNewItem)
BOOL WINAPI user32.InsertMenuA(_In_ HMENU hMenu,_In_ UINT uPosition,_In_ UINT uFlags,_In_ UINT_PTR uIDNewItem,_In_opt_ LPCTSTR lpNewItem)
HRESULT APIENTRY None.MQLocateNext(HANDLE hEnum None,DWORD * pcProps,MQPROPVARIANT aPropVar[] None)
BOOL None spoolss.ClosePrinter(_In_ HANDLE hPrinter)
INT None None.Pager_SetBorder(HWND hwndPager None,int iBorder None)
DWORD WINAPI user32.CharUpperBuff(_Inout_ LPTSTR lpsz,_In_ DWORD cchLength)
DWORD WINAPI user32.CharUpperBuffW(_Inout_ LPTSTR lpsz,_In_ DWORD cchLength)
DWORD WINAPI user32.CharUpperBuffA(_Inout_ LPTSTR lpsz,_In_ DWORD cchLength)
BOOL WINAPI user32.TrackPopupMenuEx(_In_ HMENU hmenu,_In_ UINT fuFlags,_In_ int x,_In_ int y,_In_ HWND hwnd,_In_opt_ LPTPMPARAMS lptpm)
HRESULT APIENTRY None.MQGetPrivateComputerInformation(LPCWSTR lpwcsComputerName None,MQPRIVATEPROPS * pPrivateProps)
HRESULT None msftedit.Range(long cpFirst None,long cpLim None,ITextRange **ppRange None)
BOOL None None.GetPrinterDriver2(_In_opt_ HWND hWnd,_In_ HANDLE hPrinter,_In_opt_ LPTSTR pEnvironment,_In_ DWORD Level,_Out_ LPBYTE pDriverInfo,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded)
BOOL None None.GetPrinterDriver2W(_In_opt_ HWND hWnd,_In_ HANDLE hPrinter,_In_opt_ LPTSTR pEnvironment,_In_ DWORD Level,_Out_ LPBYTE pDriverInfo,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded)
LONG WINAPI advapi32.RegEnumValue(_In_ HKEY hKey,_In_ DWORD dwIndex,_Out_ LPTSTR lpValueName,_Inout_ LPDWORD lpcchValueName,_Reserved_ LPDWORD lpReserved,_Out_opt_ LPDWORD lpType,_Out_opt_ LPBYTE lpData,_Inout_opt_ LPDWORD lpcbData)
LONG WINAPI advapi32.RegEnumValueW(_In_ HKEY hKey,_In_ DWORD dwIndex,_Out_ LPTSTR lpValueName,_Inout_ LPDWORD lpcchValueName,_Reserved_ LPDWORD lpReserved,_Out_opt_ LPDWORD lpType,_Out_opt_ LPBYTE lpData,_Inout_opt_ LPDWORD lpcbData)
LONG WINAPI advapi32.RegEnumValueA(_In_ HKEY hKey,_In_ DWORD dwIndex,_Out_ LPTSTR lpValueName,_Inout_ LPDWORD lpcchValueName,_Reserved_ LPDWORD lpReserved,_Out_opt_ LPDWORD lpType,_Out_opt_ LPBYTE lpData,_Inout_opt_ LPDWORD lpcbData)
HRESULT APIENTRY None.MQGetSecurityContext(LPVOID lpCertBuffer None,DWORD dwCertBufferLength None,HANDLE * phSecurityContext)
HRESULT None None.FilterSentTime(LPCWSTR wszQueueFormatName None,DWORD dwSentTime None)
HRESULT None msftedit.GetName(BSTR *pbstr None)
int WINAPI user32.wvsprintf(_Out_ LPTSTR lpOutput,_In_ LPCTSTR lpFmt,_In_ va_list arglist)
int WINAPI user32.wvsprintfW(_Out_ LPTSTR lpOutput,_In_ LPCTSTR lpFmt,_In_ va_list arglist)
int WINAPI user32.wvsprintfA(_Out_ LPTSTR lpOutput,_In_ LPCTSTR lpFmt,_In_ va_list arglist)
LPSTR WINAPI user32.CharNextExA(_In_ WORD CodePage,_In_ LPCSTR lpCurrentChar,_In_ DWORD dwFlags)
LPSTR WINAPI user32.CharNextExA(_In_ WORD CodePage,_In_ LPCSTR lpCurrentChar,_In_ DWORD dwFlags)
BOOL WINAPI kernel32.WritePrivateProfileSection(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpString,_In_ LPCTSTR lpFileName)
BOOL WINAPI kernel32.WritePrivateProfileSectionW(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpString,_In_ LPCTSTR lpFileName)
BOOL WINAPI kernel32.WritePrivateProfileSectionA(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpString,_In_ LPCTSTR lpFileName)
HRESULT None msftedit.Open([in] VARIANT *pVar,long Flags None,long CodePage None)
HRESULT APIENTRY None.MQDeleteQueue(LPCWSTR lpwcsFormatName None)
HRESULT None msftedit.GetDefaultTabStop(float *pValue None)
HRESULT None msftedit.InsertImage([in] long width,[in] long height,[in] long ascent,[in] long Type,[in] BSTR bstrAltText,[in] IStream pStream)
int WINAPI None.Dumper(HWND hX None,int intCtrlID None,HINTERNET hResource None)
HRESULT None msftedit.Redo(long Count None,long *prop None)
LPTSTR WINAPI user32.CharUpper(_Inout_ LPTSTR lpsz)
LPTSTR WINAPI user32.CharUpperW(_Inout_ LPTSTR lpsz)
LPTSTR WINAPI user32.CharUpperA(_Inout_ LPTSTR lpsz)
HRESULT None None.NavigateCursor(LPCWSTR wszQueueFormatName None)
LPTSTR WINAPI user32.CharPrev(_In_ LPCTSTR lpszStart,_In_ LPCTSTR lpszCurrent)
LPTSTR WINAPI user32.CharPrevW(_In_ LPCTSTR lpszStart,_In_ LPCTSTR lpszCurrent)
LPTSTR WINAPI user32.CharPrevA(_In_ LPCTSTR lpszStart,_In_ LPCTSTR lpszCurrent)
HRESULT None None.GetQueueTransactionProp(LPCWSTR wszQueueFormatName None,UCHAR *pbValue None)
int WINAPI kernel32.lstrcmpi(_In_ LPCTSTR lpString1,_In_ LPCTSTR lpString2)
int WINAPI kernel32.lstrcmpiW(_In_ LPCTSTR lpString1,_In_ LPCTSTR lpString2)
int WINAPI kernel32.lstrcmpiA(_In_ LPCTSTR lpString1,_In_ LPCTSTR lpString2)
HRESULT APIENTRY None.MQRegisterCertificate(DWORD dwFlags None,PVOID lpCertBuffer None,DWORD dwCertBufferLength None)
BOOL None wininet.InternetSetCookie(_In_ LPCTSTR lpszUrl,_In_ LPCTSTR lpszCookieName,_In_ LPCTSTR lpszCookieData)
BOOL None wininet.InternetSetCookieW(_In_ LPCTSTR lpszUrl,_In_ LPCTSTR lpszCookieName,_In_ LPCTSTR lpszCookieData)
BOOL None wininet.InternetSetCookieA(_In_ LPCTSTR lpszUrl,_In_ LPCTSTR lpszCookieName,_In_ LPCTSTR lpszCookieData)
BOOL WINAPI None.ChangeFtpDir(HWND hDlg None,HINTERNET hConnection None,int nDirNameId None,int nListBoxId None)
HRESULT APIENTRY None.MQGetSecurityContextEx(LPVOID lpCertBuffer None,DWORD dwCertBufferLength None,HANDLE * phSecurityContext)
HRESULT APIENTRY None.MQGetQueueSecurity(LPCWSTR lpwcsFormatName None,SECURITY_INFORMATION SecurityInformation None,PSECURITY_DESCRIPTOR pSecurityDescriptor None,DWORD nLength None,LPDWORD lpnLengthNeeded None)
BOOL WINAPI user32.OemToChar(_In_ LPCSTR lpszSrc,_Out_ LPTSTR lpszDst)
BOOL WINAPI user32.OemToCharW(_In_ LPCSTR lpszSrc,_Out_ LPTSTR lpszDst)
BOOL WINAPI user32.OemToCharA(_In_ LPCSTR lpszSrc,_Out_ LPTSTR lpszDst)
HRESULT APIENTRY None.MQSetQueueProperties(LPCWSTR lpwcsFormatName None,MQQUEUEPROPS * pQueueProps)
BOOL None kernel32.GetThreadPreferredUILanguages(_In_ DWORD dwFlags,_Out_ PULONG pulNumLanguages,_Out_opt_ PZZWSTR pwszLanguagesBuffer,_Inout_ PULONG pcchLanguagesBuffer)
HRESULT APIENTRY None.MQReceiveMessageByLookupId(QUEUEHANDLE hSource None,ULONGLONG ullLookupId None,DWORD dwLookupAction None,MQMSGPROPS * pMessageProps,LPOVERLAPPED lpOverlapped None,PMQRECEIVECALLBACK fnReceiveCallback None,ITransaction * pTransaction)
BOOL WINAPI user32.WaitMessage(void None None)
HRESULT None msftedit.Undo(long Count None,long *prop None)
BOOL None None.GopherAttributeEnumerator(LPGOPHER_ATTRIBUTE_TYPE lpAttributeInfo None,DWORD dwError None)
int __cdecl user32.wsprintf(_Out_ LPTSTR lpOut,_In_ LPCTSTR lpFmt,_In_ ... None)
int __cdecl user32.wsprintfW(_Out_ LPTSTR lpOut,_In_ LPCTSTR lpFmt,_In_ ... None)
int __cdecl user32.wsprintfA(_Out_ LPTSTR lpOut,_In_ LPCTSTR lpFmt,_In_ ... None)
BOOL None wininet.InternetSetCookie(_In_ LPCTSTR lpszUrl,_In_ LPCTSTR lpszCookieName,_In_ LPCTSTR lpszCookieData)
BOOL None wininet.InternetSetCookieW(_In_ LPCTSTR lpszUrl,_In_ LPCTSTR lpszCookieName,_In_ LPCTSTR lpszCookieData)
BOOL None wininet.InternetSetCookieA(_In_ LPCTSTR lpszUrl,_In_ LPCTSTR lpszCookieName,_In_ LPCTSTR lpszCookieData)
BOOL None wininet.InternetSetCookie(_In_ LPCTSTR lpszUrl,_In_ LPCTSTR lpszCookieName,_In_ LPCTSTR lpszCookieData)
BOOL None wininet.InternetSetCookieW(_In_ LPCTSTR lpszUrl,_In_ LPCTSTR lpszCookieName,_In_ LPCTSTR lpszCookieData)
BOOL None wininet.InternetSetCookieA(_In_ LPCTSTR lpszUrl,_In_ LPCTSTR lpszCookieName,_In_ LPCTSTR lpszCookieData)
BOOL None wininet.InternetSetCookie(_In_ LPCTSTR lpszUrl,_In_ LPCTSTR lpszCookieName,_In_ LPCTSTR lpszCookieData)
BOOL None wininet.InternetSetCookieW(_In_ LPCTSTR lpszUrl,_In_ LPCTSTR lpszCookieName,_In_ LPCTSTR lpszCookieData)
BOOL None wininet.InternetSetCookieA(_In_ LPCTSTR lpszUrl,_In_ LPCTSTR lpszCookieName,_In_ LPCTSTR lpszCookieData)
BOOL None wininet.InternetSetCookie(_In_ LPCTSTR lpszUrl,_In_ LPCTSTR lpszCookieName,_In_ LPCTSTR lpszCookieData)
BOOL None wininet.InternetSetCookieW(_In_ LPCTSTR lpszUrl,_In_ LPCTSTR lpszCookieName,_In_ LPCTSTR lpszCookieData)
BOOL None wininet.InternetSetCookieA(_In_ LPCTSTR lpszUrl,_In_ LPCTSTR lpszCookieName,_In_ LPCTSTR lpszCookieData)
BOOL WINAPI user32.CharToOem(_In_ LPCTSTR lpszSrc,_Out_ LPSTR lpszDst)
BOOL WINAPI user32.CharToOemW(_In_ LPCTSTR lpszSrc,_Out_ LPSTR lpszDst)
BOOL WINAPI user32.CharToOemA(_In_ LPCTSTR lpszSrc,_Out_ LPSTR lpszDst)
LONG WINAPI advapi32.RegDeleteKeyEx(_In_ HKEY hKey,_In_ LPCTSTR lpSubKey,_In_ REGSAM samDesired,_Reserved_ DWORD Reserved)
LONG WINAPI advapi32.RegDeleteKeyExW(_In_ HKEY hKey,_In_ LPCTSTR lpSubKey,_In_ REGSAM samDesired,_Reserved_ DWORD Reserved)
LONG WINAPI advapi32.RegDeleteKeyExA(_In_ HKEY hKey,_In_ LPCTSTR lpSubKey,_In_ REGSAM samDesired,_Reserved_ DWORD Reserved)
BOOL None wininet.InternetSetCookie(_In_ LPCTSTR lpszUrl,_In_ LPCTSTR lpszCookieName,_In_ LPCTSTR lpszCookieData)
BOOL None wininet.InternetSetCookieW(_In_ LPCTSTR lpszUrl,_In_ LPCTSTR lpszCookieName,_In_ LPCTSTR lpszCookieData)
BOOL None wininet.InternetSetCookieA(_In_ LPCTSTR lpszUrl,_In_ LPCTSTR lpszCookieName,_In_ LPCTSTR lpszCookieData)
BOOL WINAPI user32.IsCharAlpha(_In_ TCHAR ch)
BOOL WINAPI user32.IsCharAlphaW(_In_ TCHAR ch)
BOOL WINAPI user32.IsCharAlphaA(_In_ TCHAR ch)
BOOL None wininet.InternetSetCookie(_In_ LPCTSTR lpszUrl,_In_ LPCTSTR lpszCookieName,_In_ LPCTSTR lpszCookieData)
BOOL None wininet.InternetSetCookieW(_In_ LPCTSTR lpszUrl,_In_ LPCTSTR lpszCookieName,_In_ LPCTSTR lpszCookieData)
BOOL None wininet.InternetSetCookieA(_In_ LPCTSTR lpszUrl,_In_ LPCTSTR lpszCookieName,_In_ LPCTSTR lpszCookieData)
BOOL None wininet.InternetSetCookie(_In_ LPCTSTR lpszUrl,_In_ LPCTSTR lpszCookieName,_In_ LPCTSTR lpszCookieData)
BOOL None wininet.InternetSetCookieW(_In_ LPCTSTR lpszUrl,_In_ LPCTSTR lpszCookieName,_In_ LPCTSTR lpszCookieData)
BOOL None wininet.InternetSetCookieA(_In_ LPCTSTR lpszUrl,_In_ LPCTSTR lpszCookieName,_In_ LPCTSTR lpszCookieData)
BOOL None wininet.InternetSetCookie(_In_ LPCTSTR lpszUrl,_In_ LPCTSTR lpszCookieName,_In_ LPCTSTR lpszCookieData)
BOOL None wininet.InternetSetCookieW(_In_ LPCTSTR lpszUrl,_In_ LPCTSTR lpszCookieName,_In_ LPCTSTR lpszCookieData)
BOOL None wininet.InternetSetCookieA(_In_ LPCTSTR lpszUrl,_In_ LPCTSTR lpszCookieName,_In_ LPCTSTR lpszCookieData)
BOOL None wininet.InternetSetCookie(_In_ LPCTSTR lpszUrl,_In_ LPCTSTR lpszCookieName,_In_ LPCTSTR lpszCookieData)
BOOL None wininet.InternetSetCookieW(_In_ LPCTSTR lpszUrl,_In_ LPCTSTR lpszCookieName,_In_ LPCTSTR lpszCookieData)
BOOL None wininet.InternetSetCookieA(_In_ LPCTSTR lpszUrl,_In_ LPCTSTR lpszCookieName,_In_ LPCTSTR lpszCookieData)
BOOL None wininet.InternetSetCookie(_In_ LPCTSTR lpszUrl,_In_ LPCTSTR lpszCookieName,_In_ LPCTSTR lpszCookieData)
BOOL None wininet.InternetSetCookieW(_In_ LPCTSTR lpszUrl,_In_ LPCTSTR lpszCookieName,_In_ LPCTSTR lpszCookieData)
BOOL None wininet.InternetSetCookieA(_In_ LPCTSTR lpszUrl,_In_ LPCTSTR lpszCookieName,_In_ LPCTSTR lpszCookieData)
BOOL WINAPI None.ChangeFtpDir(HWND hDlg None,HINTERNET hConnection None,int nDirNameId None,int nListBoxId None)
BOOL None wininet.FtpRenameFile(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszExisting,_In_ LPCTSTR lpszNew)
BOOL None wininet.FtpRenameFileW(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszExisting,_In_ LPCTSTR lpszNew)
BOOL None wininet.FtpRenameFileA(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszExisting,_In_ LPCTSTR lpszNew)
BOOL None wininet.InternetSetCookie(_In_ LPCTSTR lpszUrl,_In_ LPCTSTR lpszCookieName,_In_ LPCTSTR lpszCookieData)
BOOL None wininet.InternetSetCookieW(_In_ LPCTSTR lpszUrl,_In_ LPCTSTR lpszCookieName,_In_ LPCTSTR lpszCookieData)
BOOL None wininet.InternetSetCookieA(_In_ LPCTSTR lpszUrl,_In_ LPCTSTR lpszCookieName,_In_ LPCTSTR lpszCookieData)
HRESULT APIENTRY None.MQGetOverlappedResult(LPOVERLAPPED lpOverlapped None)
HRESULT APIENTRY None.MQCloseCursor(HANDLE hCursor None)
BOOL None wininet.InternetSetCookie(_In_ LPCTSTR lpszUrl,_In_ LPCTSTR lpszCookieName,_In_ LPCTSTR lpszCookieData)
BOOL None wininet.InternetSetCookieW(_In_ LPCTSTR lpszUrl,_In_ LPCTSTR lpszCookieName,_In_ LPCTSTR lpszCookieData)
BOOL None wininet.InternetSetCookieA(_In_ LPCTSTR lpszUrl,_In_ LPCTSTR lpszCookieName,_In_ LPCTSTR lpszCookieData)
BOOL None wininet.FtpRenameFile(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszExisting,_In_ LPCTSTR lpszNew)
BOOL None wininet.FtpRenameFileW(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszExisting,_In_ LPCTSTR lpszNew)
BOOL None wininet.FtpRenameFileA(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszExisting,_In_ LPCTSTR lpszNew)
BOOL None wininet.InternetSetCookie(_In_ LPCTSTR lpszUrl,_In_ LPCTSTR lpszCookieName,_In_ LPCTSTR lpszCookieData)
BOOL None wininet.InternetSetCookieW(_In_ LPCTSTR lpszUrl,_In_ LPCTSTR lpszCookieName,_In_ LPCTSTR lpszCookieData)
BOOL None wininet.InternetSetCookieA(_In_ LPCTSTR lpszUrl,_In_ LPCTSTR lpszCookieName,_In_ LPCTSTR lpszCookieData)
BOOL None wininet.InternetSetCookie(_In_ LPCTSTR lpszUrl,_In_ LPCTSTR lpszCookieName,_In_ LPCTSTR lpszCookieData)
BOOL None wininet.InternetSetCookieW(_In_ LPCTSTR lpszUrl,_In_ LPCTSTR lpszCookieName,_In_ LPCTSTR lpszCookieData)
BOOL None wininet.InternetSetCookieA(_In_ LPCTSTR lpszUrl,_In_ LPCTSTR lpszCookieName,_In_ LPCTSTR lpszCookieData)
BOOL None wininet.InternetSetCookie(_In_ LPCTSTR lpszUrl,_In_ LPCTSTR lpszCookieName,_In_ LPCTSTR lpszCookieData)
BOOL None wininet.InternetSetCookieW(_In_ LPCTSTR lpszUrl,_In_ LPCTSTR lpszCookieName,_In_ LPCTSTR lpszCookieData)
BOOL None wininet.InternetSetCookieA(_In_ LPCTSTR lpszUrl,_In_ LPCTSTR lpszCookieName,_In_ LPCTSTR lpszCookieData)
BOOL None wininet.InternetSetCookie(_In_ LPCTSTR lpszUrl,_In_ LPCTSTR lpszCookieName,_In_ LPCTSTR lpszCookieData)
BOOL None wininet.InternetSetCookieW(_In_ LPCTSTR lpszUrl,_In_ LPCTSTR lpszCookieName,_In_ LPCTSTR lpszCookieData)
BOOL None wininet.InternetSetCookieA(_In_ LPCTSTR lpszUrl,_In_ LPCTSTR lpszCookieName,_In_ LPCTSTR lpszCookieData)
HRESULT None msftedit.GetSaved(long *pBool None)
BOOL None wininet.FtpRenameFile(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszExisting,_In_ LPCTSTR lpszNew)
BOOL None wininet.FtpRenameFileW(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszExisting,_In_ LPCTSTR lpszNew)
BOOL None wininet.FtpRenameFileA(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszExisting,_In_ LPCTSTR lpszNew)
BOOL WINAPI user32.OemToCharBuff(_In_ LPCSTR lpszSrc,_Out_ LPTSTR lpszDst,_In_ DWORD cchDstLength)
BOOL WINAPI user32.OemToCharBuffW(_In_ LPCSTR lpszSrc,_Out_ LPTSTR lpszDst,_In_ DWORD cchDstLength)
BOOL WINAPI user32.OemToCharBuffA(_In_ LPCSTR lpszSrc,_Out_ LPTSTR lpszDst,_In_ DWORD cchDstLength)
BOOL None wininet.InternetSetCookie(_In_ LPCTSTR lpszUrl,_In_ LPCTSTR lpszCookieName,_In_ LPCTSTR lpszCookieData)
BOOL None wininet.InternetSetCookieW(_In_ LPCTSTR lpszUrl,_In_ LPCTSTR lpszCookieName,_In_ LPCTSTR lpszCookieData)
BOOL None wininet.InternetSetCookieA(_In_ LPCTSTR lpszUrl,_In_ LPCTSTR lpszCookieName,_In_ LPCTSTR lpszCookieData)
BOOL WINAPI None.ChangeFtpDir(HWND hDlg None,HINTERNET hConnection None,int nDirNameId None,int nListBoxId None)
BOOL None wininet.InternetSetCookie(_In_ LPCTSTR lpszUrl,_In_ LPCTSTR lpszCookieName,_In_ LPCTSTR lpszCookieData)
BOOL None wininet.InternetSetCookieW(_In_ LPCTSTR lpszUrl,_In_ LPCTSTR lpszCookieName,_In_ LPCTSTR lpszCookieData)
BOOL None wininet.InternetSetCookieA(_In_ LPCTSTR lpszUrl,_In_ LPCTSTR lpszCookieName,_In_ LPCTSTR lpszCookieData)
LONG WINAPI advapi32.RegSaveKey(_In_ HKEY hKey,_In_ LPCTSTR lpFile,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes)
LONG WINAPI advapi32.RegSaveKeyW(_In_ HKEY hKey,_In_ LPCTSTR lpFile,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes)
LONG WINAPI advapi32.RegSaveKeyA(_In_ HKEY hKey,_In_ LPCTSTR lpFile,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes)
BOOL WINAPI None.ChangeFtpDir(HWND hDlg None,HINTERNET hConnection None,int nDirNameId None,int nListBoxId None)
HRESULT APIENTRY None.MQPathNameToFormatName(LPCWSTR lpwcsPathName None,LPWSTR lpwcsFormatName None,LPDWORD lpdwCount None)
BOOL None None.DeletePrintProcessor(_In_ LPTSTR pName,_In_ LPTSTR pEnvironment,_In_ LPTSTR pPrintProcessorName)
BOOL None None.DeletePrintProcessorW(_In_ LPTSTR pName,_In_ LPTSTR pEnvironment,_In_ LPTSTR pPrintProcessorName)
BOOL None None.DeletePrintProcessorA(_In_ LPTSTR pName,_In_ LPTSTR pEnvironment,_In_ LPTSTR pPrintProcessorName)
BOOL WINAPI user32.CheckMenuRadioItem(_In_ HMENU hmenu,_In_ UINT idFirst,_In_ UINT idLast,_In_ UINT idCheck,_In_ UINT uFlags)
HRESULT None msftedit.SetEngrave([in] long Value)
BOOL WINAPI user32.InsertMenuItem(_In_ HMENU hMenu,_In_ UINT uItem,_In_ BOOL fByPosition,_In_ LPCMENUITEMINFO lpmii)
BOOL WINAPI user32.InsertMenuItemW(_In_ HMENU hMenu,_In_ UINT uItem,_In_ BOOL fByPosition,_In_ LPCMENUITEMINFO lpmii)
BOOL WINAPI user32.InsertMenuItemA(_In_ HMENU hMenu,_In_ UINT uItem,_In_ BOOL fByPosition,_In_ LPCMENUITEMINFO lpmii)
DWORD None winhttp.WinHttpCreateProxyResolver(_In_ HINTERNET hSession,_Out_ HINTERNET *phResolver)
HRESULT None msftedit.SetDuplicate([in] ITextFont *pFont)
BOOL WINAPI winhttp.WinHttpGetProxyForUrl(_In_ HINTERNET hSession,_In_ LPCWSTR lpcwszUrl,_In_ WINHTTP_AUTOPROXY_OPTIONS *pAutoProxyOptions,_Out_ WINHTTP_PROXY_INFO *pProxyInfo)
void None rasapi32.RasFreeEapUserIdentity(_In_ LPRASEAPUSERIDENTITY pRasEapUserIdentity)
void None rasapi32.RasFreeEapUserIdentityW(_In_ LPRASEAPUSERIDENTITY pRasEapUserIdentity)
void None rasapi32.RasFreeEapUserIdentityA(_In_ LPRASEAPUSERIDENTITY pRasEapUserIdentity)
BOOL WINAPI user32.ModifyMenu(_In_ HMENU hMnu,_In_ UINT uPosition,_In_ UINT uFlags,_In_ UINT_PTR uIDNewItem,_In_opt_ LPCTSTR lpNewItem)
BOOL WINAPI user32.ModifyMenuW(_In_ HMENU hMnu,_In_ UINT uPosition,_In_ UINT uFlags,_In_ UINT_PTR uIDNewItem,_In_opt_ LPCTSTR lpNewItem)
BOOL WINAPI user32.ModifyMenuA(_In_ HMENU hMnu,_In_ UINT uPosition,_In_ UINT uFlags,_In_ UINT_PTR uIDNewItem,_In_opt_ LPCTSTR lpNewItem)
BOOL None None.EnumPrintProcessors(_In_ LPTSTR pName,_In_ LPTSTR pEnvironment,_In_ DWORD Level,_Out_ LPBYTE pPrintProcessorInfo,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded,_Out_ LPDWORD pcReturned)
BOOL None None.EnumPrintProcessorsW(_In_ LPTSTR pName,_In_ LPTSTR pEnvironment,_In_ DWORD Level,_Out_ LPBYTE pPrintProcessorInfo,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded,_Out_ LPDWORD pcReturned)
BOOL None None.EnumPrintProcessorsA(_In_ LPTSTR pName,_In_ LPTSTR pEnvironment,_In_ DWORD Level,_Out_ LPBYTE pPrintProcessorInfo,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded,_Out_ LPDWORD pcReturned)
HRESULT None msdrm.DRMGetBoundLicenseAttribute(_In_ DRMHANDLE hQueryRoot,_In_ PWSTR wszAttribute,_In_ UINT iWhich,_Out_ DRMENCODINGTYPE *peEncoding,_Inout_ UINT *pcBuffer,_Out_ BYTE *pbBuffer)
BOOL WINAPI user32.AppendMenu(_In_ HMENU hMenu,_In_ UINT uFlags,_In_ UINT_PTR uIDNewItem,_In_opt_ LPCTSTR lpNewItem)
BOOL WINAPI user32.AppendMenuW(_In_ HMENU hMenu,_In_ UINT uFlags,_In_ UINT_PTR uIDNewItem,_In_opt_ LPCTSTR lpNewItem)
BOOL WINAPI user32.AppendMenuA(_In_ HMENU hMenu,_In_ UINT uFlags,_In_ UINT_PTR uIDNewItem,_In_opt_ LPCTSTR lpNewItem)
INT_PTR WINAPI user32.DialogBoxIndirect(_In_opt_ HINSTANCE hInstance,_In_ LPCDLGTEMPLATE lpTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc)
INT_PTR WINAPI user32.DialogBoxIndirectW(_In_opt_ HINSTANCE hInstance,_In_ LPCDLGTEMPLATE lpTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc)
INT_PTR WINAPI user32.DialogBoxIndirectA(_In_opt_ HINSTANCE hInstance,_In_ LPCDLGTEMPLATE lpTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc)
NTSTATUS WINAPI ntdll.ZwQuerySystemInformation(_In_ SYSTEM_INFORMATION_CLASS SystemInformationClass,_Inout_ PVOID SystemInformation,_In_ ULONG SystemInformationLength,_Out_opt_ PULONG ReturnLength)
DWORD None None.GetPrinterDataEx(_In_ HANDLE hPrinter,_In_ LPCTSTR pKeyName,_In_ LPCTSTR pValueName,_Out_ LPDWORD pType,_Out_ LPBYTE pData,_In_ DWORD nSize,_Out_ LPDWORD pcbNeeded)
DWORD None None.GetPrinterDataExW(_In_ HANDLE hPrinter,_In_ LPCTSTR pKeyName,_In_ LPCTSTR pValueName,_Out_ LPDWORD pType,_Out_ LPBYTE pData,_In_ DWORD nSize,_Out_ LPDWORD pcbNeeded)
DWORD None None.GetPrinterDataExA(_In_ HANDLE hPrinter,_In_ LPCTSTR pKeyName,_In_ LPCTSTR pValueName,_Out_ LPDWORD pType,_Out_ LPBYTE pData,_In_ DWORD nSize,_Out_ LPDWORD pcbNeeded)
BOOL None None.DeletePort(_In_ LPTSTR pName,_In_ HWND hWnd,_In_ LPTSTR pPortName)
BOOL None None.DeletePortW(_In_ LPTSTR pName,_In_ HWND hWnd,_In_ LPTSTR pPortName)
BOOL None None.DeletePortA(_In_ LPTSTR pName,_In_ HWND hWnd,_In_ LPTSTR pPortName)
HRESULT None None.GetQueuePrivLevelProp(LPCWSTR wszQueueFormatName None,ULONG *pulValue None)
HRESULT None spoolss.GetCorePrinterDrivers(_In_ LPCTSTR pszServer,_In_ LPCTSTR pszEnvironment,_In_ LPCTSTR pszzCoreDriverDependencies,_In_ DWORD cCorePrinterDrivers,_Out_ PCORE_PRINTER_DRIVER pCorePrinterDrivers)
HRESULT None spoolss.GetCorePrinterDriversW(_In_ LPCTSTR pszServer,_In_ LPCTSTR pszEnvironment,_In_ LPCTSTR pszzCoreDriverDependencies,_In_ DWORD cCorePrinterDrivers,_Out_ PCORE_PRINTER_DRIVER pCorePrinterDrivers)
HRESULT None spoolss.GetCorePrinterDriversA(_In_ LPCTSTR pszServer,_In_ LPCTSTR pszEnvironment,_In_ LPCTSTR pszzCoreDriverDependencies,_In_ DWORD cCorePrinterDrivers,_Out_ PCORE_PRINTER_DRIVER pCorePrinterDrivers)
UINT WINAPI user32.GetMenuState(_In_ HMENU hMenu,_In_ UINT uId,_In_ UINT uFlags)
BOOLAPI None wininet.FindNextUrlCacheEntry(_In_ HANDLE hEnumHandle,_Out_ LPINTERNET_CACHE_ENTRY_INFO lpNextCacheEntryInfo,_Inout_ LPDWORD lpcbCacheEntryInfo)
BOOLAPI None wininet.FindNextUrlCacheEntryW(_In_ HANDLE hEnumHandle,_Out_ LPINTERNET_CACHE_ENTRY_INFO lpNextCacheEntryInfo,_Inout_ LPDWORD lpcbCacheEntryInfo)
BOOLAPI None wininet.FindNextUrlCacheEntryA(_In_ HANDLE hEnumHandle,_Out_ LPINTERNET_CACHE_ENTRY_INFO lpNextCacheEntryInfo,_Inout_ LPDWORD lpcbCacheEntryInfo)
UINT WINAPI user32.GetDoubleClickTime(void None None)
HRESULT None msftedit.SetDocumentFont([in] ITextFont2 *pFont)
LONG WINAPI advapi32.RegDeleteKey(_In_ HKEY hKey,_In_ LPCTSTR lpSubKey)
LONG WINAPI advapi32.RegDeleteKeyW(_In_ HKEY hKey,_In_ LPCTSTR lpSubKey)
LONG WINAPI advapi32.RegDeleteKeyA(_In_ HKEY hKey,_In_ LPCTSTR lpSubKey)
INT_PTR WINAPI user32.DialogBoxParam(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpTemplateName,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc,_In_ LPARAM dwInitParam)
INT_PTR WINAPI user32.DialogBoxParamW(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpTemplateName,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc,_In_ LPARAM dwInitParam)
INT_PTR WINAPI user32.DialogBoxParamA(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpTemplateName,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc,_In_ LPARAM dwInitParam)
HRESULT None msftedit.GetLanguageID(long *pValue None)
BOOL WINAPI user32.SetDlgItemText(_In_ HWND hDlg,_In_ int nIDDlgItem,_In_ LPCTSTR lpString)
BOOL WINAPI user32.SetDlgItemTextW(_In_ HWND hDlg,_In_ int nIDDlgItem,_In_ LPCTSTR lpString)
BOOL WINAPI user32.SetDlgItemTextA(_In_ HWND hDlg,_In_ int nIDDlgItem,_In_ LPCTSTR lpString)
short WINAPI comdlg32.GetFileTitle(_In_ LPCTSTR lpszFile,_Out_ LPTSTR lpszTitle,_In_ WORD cchSize)
short WINAPI comdlg32.GetFileTitleW(_In_ LPCTSTR lpszFile,_Out_ LPTSTR lpszTitle,_In_ WORD cchSize)
short WINAPI comdlg32.GetFileTitleA(_In_ LPCTSTR lpszFile,_Out_ LPTSTR lpszTitle,_In_ WORD cchSize)
BOOL None None.DeletePort(_In_ LPTSTR pName,_In_ HWND hWnd,_In_ LPTSTR pPortName)
BOOL None None.DeletePortW(_In_ LPTSTR pName,_In_ HWND hWnd,_In_ LPTSTR pPortName)
BOOL None None.DeletePortA(_In_ LPTSTR pName,_In_ HWND hWnd,_In_ LPTSTR pPortName)
HRESULT None spoolss.DeletePrinterDriverPackage(_In_ LPCTSTR pszServer,_In_ LPCTSTR pszInfPath,_In_ LPCTSTR pszEnvironment)
HRESULT None spoolss.DeletePrinterDriverPackageW(_In_ LPCTSTR pszServer,_In_ LPCTSTR pszInfPath,_In_ LPCTSTR pszEnvironment)
HRESULT None spoolss.DeletePrinterDriverPackageA(_In_ LPCTSTR pszServer,_In_ LPCTSTR pszInfPath,_In_ LPCTSTR pszEnvironment)
HRESULT None spoolss.GetCorePrinterDrivers(_In_ LPCTSTR pszServer,_In_ LPCTSTR pszEnvironment,_In_ LPCTSTR pszzCoreDriverDependencies,_In_ DWORD cCorePrinterDrivers,_Out_ PCORE_PRINTER_DRIVER pCorePrinterDrivers)
HRESULT None spoolss.GetCorePrinterDriversW(_In_ LPCTSTR pszServer,_In_ LPCTSTR pszEnvironment,_In_ LPCTSTR pszzCoreDriverDependencies,_In_ DWORD cCorePrinterDrivers,_Out_ PCORE_PRINTER_DRIVER pCorePrinterDrivers)
HRESULT None spoolss.GetCorePrinterDriversA(_In_ LPCTSTR pszServer,_In_ LPCTSTR pszEnvironment,_In_ LPCTSTR pszzCoreDriverDependencies,_In_ DWORD cCorePrinterDrivers,_Out_ PCORE_PRINTER_DRIVER pCorePrinterDrivers)
BOOL WINAPI ktmw32.GetTransactionManagerId(_In_ HANDLE TransactionManagerHandle,_Out_ LPGUID TransactionManagerId)
UINT WINAPI kernel32.GetProfileInt(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ INT nDefault)
UINT WINAPI kernel32.GetProfileIntW(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ INT nDefault)
UINT WINAPI kernel32.GetProfileIntA(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ INT nDefault)
BOOL None ktmw32.RollforwardTransactionManager(_In_ HANDLE TransactionManagerHandle,_In_ PLARGE_INTEGER TmVirtualClock)
BOOL WINAPI user32.UnregisterHotKey(_In_opt_ HWND hWnd,_In_ int id)
HRESULT None msftedit.GetName(BSTR *pName None)
BOOL None wininet.FtpPutFile(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszLocalFile,_In_ LPCTSTR lpszNewRemoteFile,_In_ DWORD dwFlags,_In_ DWORD_PTR dwContext)
BOOL None wininet.FtpPutFileW(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszLocalFile,_In_ LPCTSTR lpszNewRemoteFile,_In_ DWORD dwFlags,_In_ DWORD_PTR dwContext)
BOOL None wininet.FtpPutFileA(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszLocalFile,_In_ LPCTSTR lpszNewRemoteFile,_In_ DWORD dwFlags,_In_ DWORD_PTR dwContext)
HRESULT None None.RequestInternalAuthentication(WCHAR * wszQueueName,WCHAR * wszComputerName,ULONG ulAuthLevel None)
DWORD None rasapi32.RasGetProjectionInfo(_In_ HRASCONN hrasconn,_In_ RASPROJECTION rasprojection,_Out_ LPVOID lpprojection,_Inout_ LPDWORD lpcb)
DWORD None rasapi32.RasGetProjectionInfoW(_In_ HRASCONN hrasconn,_In_ RASPROJECTION rasprojection,_Out_ LPVOID lpprojection,_Inout_ LPDWORD lpcb)
DWORD None rasapi32.RasGetProjectionInfoA(_In_ HRASCONN hrasconn,_In_ RASPROJECTION rasprojection,_Out_ LPVOID lpprojection,_Inout_ LPDWORD lpcb)
BOOLAPI None wininet.FindNextUrlCacheEntry(_In_ HANDLE hEnumHandle,_Out_ LPINTERNET_CACHE_ENTRY_INFO lpNextCacheEntryInfo,_Inout_ LPDWORD lpcbCacheEntryInfo)
BOOLAPI None wininet.FindNextUrlCacheEntryW(_In_ HANDLE hEnumHandle,_Out_ LPINTERNET_CACHE_ENTRY_INFO lpNextCacheEntryInfo,_Inout_ LPDWORD lpcbCacheEntryInfo)
BOOLAPI None wininet.FindNextUrlCacheEntryA(_In_ HANDLE hEnumHandle,_Out_ LPINTERNET_CACHE_ENTRY_INFO lpNextCacheEntryInfo,_Inout_ LPDWORD lpcbCacheEntryInfo)
BOOL WINAPI user32.IsWindowEnabled(_In_ HWND hWnd)
HRESULT None msftedit.SetProtected([in] long Value)
HRESULT None spoolss.DeletePrinterDriverPackage(_In_ LPCTSTR pszServer,_In_ LPCTSTR pszInfPath,_In_ LPCTSTR pszEnvironment)
HRESULT None spoolss.DeletePrinterDriverPackageW(_In_ LPCTSTR pszServer,_In_ LPCTSTR pszInfPath,_In_ LPCTSTR pszEnvironment)
HRESULT None spoolss.DeletePrinterDriverPackageA(_In_ LPCTSTR pszServer,_In_ LPCTSTR pszInfPath,_In_ LPCTSTR pszEnvironment)
HANDLE WINAPI kernel32.BeginUpdateResource(_In_ LPCTSTR pFileName,_In_ BOOL bDeleteExistingResources)
HANDLE WINAPI kernel32.BeginUpdateResourceW(_In_ LPCTSTR pFileName,_In_ BOOL bDeleteExistingResources)
HANDLE WINAPI kernel32.BeginUpdateResourceA(_In_ LPCTSTR pFileName,_In_ BOOL bDeleteExistingResources)
int WINAPI user32.GetMenuString(_In_ HMENU hMenu,_In_ UINT uIDItem,_Out_opt_ LPTSTR lpString,_In_ int nMaxCount,_In_ UINT uFlag)
int WINAPI user32.GetMenuStringW(_In_ HMENU hMenu,_In_ UINT uIDItem,_Out_opt_ LPTSTR lpString,_In_ int nMaxCount,_In_ UINT uFlag)
int WINAPI user32.GetMenuStringA(_In_ HMENU hMenu,_In_ UINT uIDItem,_Out_opt_ LPTSTR lpString,_In_ int nMaxCount,_In_ UINT uFlag)
BOOLAPI None wininet.FindNextUrlCacheEntry(_In_ HANDLE hEnumHandle,_Out_ LPINTERNET_CACHE_ENTRY_INFO lpNextCacheEntryInfo,_Inout_ LPDWORD lpcbCacheEntryInfo)
BOOLAPI None wininet.FindNextUrlCacheEntryW(_In_ HANDLE hEnumHandle,_Out_ LPINTERNET_CACHE_ENTRY_INFO lpNextCacheEntryInfo,_Inout_ LPDWORD lpcbCacheEntryInfo)
BOOLAPI None wininet.FindNextUrlCacheEntryA(_In_ HANDLE hEnumHandle,_Out_ LPINTERNET_CACHE_ENTRY_INFO lpNextCacheEntryInfo,_Inout_ LPDWORD lpcbCacheEntryInfo)
HRESULT None msftedit.GetStartPara([out None None,retval] long *pValue)
HRESULT None msftedit.SetDuplicate([in] ITextFont *pFont)
HRESULT None msftedit.SetProperty([in] long Type,[in] long Value)
HRESULT None msftedit.GetGenerator([out None None,retval] BSTR *pbstr)
HRESULT None msftedit.GetFormattedText2([out None None,retval] ITextRange2 **ppRange)
BOOL None None.EnumPrintProcessors(_In_ LPTSTR pName,_In_ LPTSTR pEnvironment,_In_ DWORD Level,_Out_ LPBYTE pPrintProcessorInfo,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded,_Out_ LPDWORD pcReturned)
BOOL None None.EnumPrintProcessorsW(_In_ LPTSTR pName,_In_ LPTSTR pEnvironment,_In_ DWORD Level,_Out_ LPBYTE pPrintProcessorInfo,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded,_Out_ LPDWORD pcReturned)
BOOL None None.EnumPrintProcessorsA(_In_ LPTSTR pName,_In_ LPTSTR pEnvironment,_In_ DWORD Level,_Out_ LPBYTE pPrintProcessorInfo,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded,_Out_ LPDWORD pcReturned)
HRESULT None msftedit.SetDuplicate([in] ITextFont *pFont)
BOOL None gdi32.SetWindowExtEx(_In_ HDC hdc,_In_ int nXExtent,_In_ int nYExtent,_Out_ LPSIZE lpSize)
WORD None None.MAKELANGID(USHORT usPrimaryLanguage None,USHORT usSubLanguage None)
HRESULT APIENTRY None.MQLocateNext(HANDLE hEnum None,DWORD * pcProps,MQPROPVARIANT aPropVar[] None)
HANDLE WINAPI ktmw32.CreateEnlistment(_In_opt_ LPSECURITY_ATTRIBUTES lpEnlistmentrAttributes,_In_ HANDLE ResourceManagerHandle,_In_ HANDLE TransactionHandle,_In_ NOTIFICATION_MASK NotificationMask,_In_opt_ DWORD CreateOptions,_In_opt_ PVOID EnlistmentKey)
HRESULT None None.GetQueueLabelProp(LPCWSTR wszQueueFormatName None,LPWSTR *pwszValue None)
HRESULT APIENTRY None.MQCloseQueue(QUEUEHANDLE hQueue None)
int WINAPI None.EnumerateCacheOld(HWND hX None)
HRESULT None msftedit.GetURL([out None None,retval] BSTR *pbstr)
HRESULT None msftedit.GetDocumentFont([out None None,retval] ITextFont2 **ppFont)
HRESULT APIENTRY None.MQPathNameToFormatName(LPCWSTR lpwcsPathName None,LPWSTR lpwcsFormatName None,LPDWORD lpdwCount None)
HRESULT None None.ExistWord([in] IMEWRD *pwrd)
BOOL WINAPI winhttp.WinHttpSetTimeouts(_In_ HINTERNET hInternet,_In_ int dwResolveTimeout,_In_ int dwConnectTimeout,_In_ int dwSendTimeout,_In_ int dwReceiveTimeout)
HRESULT None msftedit.SetSuperscript([in] long Value)
BOOL None kernel32.SetProcessPreferredUILanguages(_In_ DWORD dwFlags,_In_opt_ PCZZWSTR pwszLanguagesBuffer,_Out_opt_ PULONG pulNumLanguages)
DWORD None rasapi32.RasDial(_In_ LPRASDIALEXTENSIONS lpRasDialExtensions,_In_ LPCTSTR lpszPhonebook,_In_ LPRASDIALPARAMS lpRasDialParams,_In_ DWORD dwNotifierType,_In_ LPVOID lpvNotifier,_Out_ LPHRASCONN lphRasConn)
DWORD None rasapi32.RasDialW(_In_ LPRASDIALEXTENSIONS lpRasDialExtensions,_In_ LPCTSTR lpszPhonebook,_In_ LPRASDIALPARAMS lpRasDialParams,_In_ DWORD dwNotifierType,_In_ LPVOID lpvNotifier,_Out_ LPHRASCONN lphRasConn)
DWORD None rasapi32.RasDialA(_In_ LPRASDIALEXTENSIONS lpRasDialExtensions,_In_ LPCTSTR lpszPhonebook,_In_ LPRASDIALPARAMS lpRasDialParams,_In_ DWORD dwNotifierType,_In_ LPVOID lpvNotifier,_Out_ LPHRASCONN lphRasConn)
BOOL WINAPI ktmw32.RecoverEnlistment(_In_ HANDLE EnlistmentHandle,_In_opt_ PVOID EnlistmentKey)
LONG WINAPI advapi32.RegNotifyChangeKeyValue(_In_ HKEY hKey,_In_ BOOL bWatchSubtree,_In_ DWORD dwNotifyFilter,_In_opt_ HANDLE hEvent,_In_ BOOL fAsynchronous)
BOOL WINAPI ktmw32.SetResourceManagerCompletionPort(_In_ HANDLE ResourceManagerHandle,_In_ HANDLE IoCompletionPortHandle,_In_ ULONG_PTR CompletionKey)
BOOL None None.DeletePrintProvidor(_In_ LPTSTR pName,_In_ LPTSTR pEnvironment,_In_ LPTSTR pPrintProviderName)
BOOL None None.DeletePrintProvidorW(_In_ LPTSTR pName,_In_ LPTSTR pEnvironment,_In_ LPTSTR pPrintProviderName)
BOOL None None.DeletePrintProvidorA(_In_ LPTSTR pName,_In_ LPTSTR pEnvironment,_In_ LPTSTR pPrintProviderName)
BOOL None None.AddPrintProcessor(_In_ LPTSTR pName,_In_ LPTSTR pEnvironment,_In_ LPTSTR pPathName,_In_ LPTSTR pPrintProcessorName)
BOOL None None.AddPrintProcessorW(_In_ LPTSTR pName,_In_ LPTSTR pEnvironment,_In_ LPTSTR pPathName,_In_ LPTSTR pPrintProcessorName)
BOOL None None.AddPrintProcessorA(_In_ LPTSTR pName,_In_ LPTSTR pEnvironment,_In_ LPTSTR pPathName,_In_ LPTSTR pPrintProcessorName)
HRESULT None None.RequestExternalAuthentication(WCHAR * wszQueueName,WCHAR * wszComputerName)
HRESULT None msftedit.TxGetCurTargetX(LONG *px None)
LONG WINAPI user32.GetMessageTime(void None None)
int WINAPI user32.LookupIconIdFromDirectoryEx(_In_ PBYTE presbits,_In_ BOOL fIcon,_In_ int cxDesired,_In_ int cyDesired,_In_ UINT Flags)
HRESULT None msftedit.RangeFromPoint(long x None,long y None,ITextRange **ppRange None)
HANDLE WINAPI kernel32.BeginUpdateResource(_In_ LPCTSTR pFileName,_In_ BOOL bDeleteExistingResources)
HANDLE WINAPI kernel32.BeginUpdateResourceW(_In_ LPCTSTR pFileName,_In_ BOOL bDeleteExistingResources)
HANDLE WINAPI kernel32.BeginUpdateResourceA(_In_ LPCTSTR pFileName,_In_ BOOL bDeleteExistingResources)
BOOL WINAPI comctl32._TrackMouseEvent(_Inout_ LPTRACKMOUSEEVENT lpEventTrack)
BOOL None ktmw32.CommitEnlistment(_In_ HANDLE EnlistmentHandle,_In_ PLARGE_INTEGER TmVirtualClock)
BOOL WINAPI user32.DestroyAcceleratorTable(_In_ HACCEL hAccel)
BOOL WINAPI ktmw32.CommitComplete(_In_ HANDLE EnlistmentHandle,_In_ PLARGE_INTEGER TmVirtualClock)
LONG WINAPI advapi32.RegSetValue(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_ DWORD dwType,_In_ LPCTSTR lpData,_In_ DWORD cbData)
LONG WINAPI advapi32.RegSetValueW(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_ DWORD dwType,_In_ LPCTSTR lpData,_In_ DWORD cbData)
LONG WINAPI advapi32.RegSetValueA(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_ DWORD dwType,_In_ LPCTSTR lpData,_In_ DWORD cbData)
BOOL None wininet.InternetCrackUrl(_In_ LPCTSTR lpszUrl,_In_ DWORD dwUrlLength,_In_ DWORD dwFlags,_Inout_ LPURL_COMPONENTS lpUrlComponents)
BOOL None wininet.InternetCrackUrlW(_In_ LPCTSTR lpszUrl,_In_ DWORD dwUrlLength,_In_ DWORD dwFlags,_Inout_ LPURL_COMPONENTS lpUrlComponents)
BOOL None wininet.InternetCrackUrlA(_In_ LPCTSTR lpszUrl,_In_ DWORD dwUrlLength,_In_ DWORD dwFlags,_Inout_ LPURL_COMPONENTS lpUrlComponents)
UINT_PTR CALLBACK None.SetupHookProc(_In_ HWND hdlg,_In_ UINT uiMsg,_In_ WPARAM wParam,_In_ LPARAM lParam)
BOOL None wininet.InternetGetCookieEx(_In_ LPCTSTR lpszURL,_In_ LPCTSTR lpszCookieName,_Inout_opt_ LPTSTR lpszCookieData,_Inout_ LPDWORD lpdwSize,_In_ DWORD dwFlags,_In_ LPVOID lpReserved)
BOOL None wininet.InternetGetCookieExW(_In_ LPCTSTR lpszURL,_In_ LPCTSTR lpszCookieName,_Inout_opt_ LPTSTR lpszCookieData,_Inout_ LPDWORD lpdwSize,_In_ DWORD dwFlags,_In_ LPVOID lpReserved)
BOOL None wininet.InternetGetCookieExA(_In_ LPCTSTR lpszURL,_In_ LPCTSTR lpszCookieName,_Inout_opt_ LPTSTR lpszCookieData,_Inout_ LPDWORD lpdwSize,_In_ DWORD dwFlags,_In_ LPVOID lpReserved)
BOOL WINAPI user32.GetMenuInfo(_In_ HMENU hmenu,_Inout_ LPMENUINFO lpcmi)
HRESULT None msftedit.GetShadow(long *pValue None)
VOID CALLBACK None.SendAsyncProc(_In_ HWND hwnd,_In_ UINT uMsg,_In_ ULONG_PTR dwData,_In_ LRESULT lResult)
BOOL WINAPI user32.GetCursorInfo(_Inout_ PCURSORINFO pci)
HRESULT None None.GetQueueJournalProp(LPCWSTR wszQueueFormatName None,UCHAR *pbValue None)
DWORD WINAPI winhttp.WinHttpWebSocketClose(_In_ HINTERNET hWebSocket,_In_ USHORT usStatus,_In_opt_ PVOID pvReason,_In_ DWORD dwReasonLength)
HRESULT None None.SetQueueQuotaProp(LPCWSTR wszQueueFormatName None,int iValue None)
BOOLAPI None wininet.SetUrlCacheEntryInfo(_In_ LPCTSTR lpszUrlName,_In_ LPINTERNET_CACHE_ENTRY_INFO lpCacheEntryInfo,_In_ DWORD dwFieldControl)
BOOLAPI None wininet.SetUrlCacheEntryInfoW(_In_ LPCTSTR lpszUrlName,_In_ LPINTERNET_CACHE_ENTRY_INFO lpCacheEntryInfo,_In_ DWORD dwFieldControl)
BOOLAPI None wininet.SetUrlCacheEntryInfoA(_In_ LPCTSTR lpszUrlName,_In_ LPINTERNET_CACHE_ENTRY_INFO lpCacheEntryInfo,_In_ DWORD dwFieldControl)
LONG WINAPI advapi32.RegSetKeyValue(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_opt_ LPCTSTR lpValueName,_In_ DWORD dwType,_In_opt_ LPCVOID lpData,_In_ DWORD cbData)
LONG WINAPI advapi32.RegSetKeyValueW(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_opt_ LPCTSTR lpValueName,_In_ DWORD dwType,_In_opt_ LPCVOID lpData,_In_ DWORD cbData)
LONG WINAPI advapi32.RegSetKeyValueA(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_opt_ LPCTSTR lpValueName,_In_ DWORD dwType,_In_opt_ LPCVOID lpData,_In_ DWORD cbData)
BOOL WINAPI user32.EndDialog(_In_ HWND hDlg,_In_ INT_PTR nResult)
BOOL WINAPI wininet.InternetSetPerSiteCookieDecision(_In_ LPCTSTR pchHostName,_In_ DWORD dwDecision)
BOOL WINAPI wininet.InternetSetPerSiteCookieDecisionW(_In_ LPCTSTR pchHostName,_In_ DWORD dwDecision)
BOOL WINAPI wininet.InternetSetPerSiteCookieDecisionA(_In_ LPCTSTR pchHostName,_In_ DWORD dwDecision)
HRESULT None msftedit.SetFont2([in] ITextFont2 *pFont)
HMENU WINAPI user32.LoadMenu(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpMenuName)
HMENU WINAPI user32.LoadMenuW(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpMenuName)
HMENU WINAPI user32.LoadMenuA(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpMenuName)
HWND WINAPI user32.CreateDialogIndirect(_In_opt_ HINSTANCE hInstance,_In_ LPCDLGTEMPLATE lpTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc)
HWND WINAPI user32.CreateDialogIndirectW(_In_opt_ HINSTANCE hInstance,_In_ LPCDLGTEMPLATE lpTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc)
HWND WINAPI user32.CreateDialogIndirectA(_In_opt_ HINSTANCE hInstance,_In_ LPCDLGTEMPLATE lpTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc)
INT None None.Pager_SetBorder(HWND hwndPager None,int iBorder None)
BOOL WINAPI ktmw32.GetCurrentClockTransactionManager(_In_ HANDLE TransactionManagerHandle,_Out_ PLARGE_INTEGER TmVirtualClock)
BOOL WINAPI winhttp.WinHttpReceiveResponse(_In_ HINTERNET hRequest,_Reserved_ LPVOID lpReserved)
HRESULT None msftedit.TxDraw([in] DWORD dwDrawAspect,LONG lindex None,[in] void *pvAspect,[in] DVTARGETDEVICE *ptd,[in] HDC hdcDraw,[in] HDC hicTargetDev,[in] LPCRECTL lprcBounds,[in] LPCRECTL lprcWBounds,[in] LPRECT lprcUpdate,BOOL CALLBACK *pfnContinue,DWORD dwContinue None,LONG lViewId None)
DWORD None rasapi32.RasRenameEntry(_In_ LPCTSTR lpszPhonebook,_In_ LPCTSTR lpszOldEntry,_In_ LPCTSTR lpszNewEntry)
DWORD None rasapi32.RasRenameEntryW(_In_ LPCTSTR lpszPhonebook,_In_ LPCTSTR lpszOldEntry,_In_ LPCTSTR lpszNewEntry)
DWORD None rasapi32.RasRenameEntryA(_In_ LPCTSTR lpszPhonebook,_In_ LPCTSTR lpszOldEntry,_In_ LPCTSTR lpszNewEntry)
HRESULT None msftedit.IsEqual(ITextFont *pFont None,long *pB None)
HMENU WINAPI user32.CreateMenu(void None None)
HRESULT None None.Clone([out None None,retval] IXpsOMPageReference **pageReference)
LRESULT WINAPI user32.DefDlgProc(_In_ HWND hDlg,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
LRESULT WINAPI user32.DefDlgProcW(_In_ HWND hDlg,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
HRESULT None msftedit.SetActiveStory([in] ITextStory *pStory)
UINT WINAPI shell32.ExtractIconEx(_In_ LPCTSTR lpszFile,_In_ int nIconIndex,_Out_opt_ HICON *phiconLarge,_Out_opt_ HICON *phiconSmall,_In_ UINT nIcons)
UINT WINAPI shell32.ExtractIconExW(_In_ LPCTSTR lpszFile,_In_ int nIconIndex,_Out_opt_ HICON *phiconLarge,_Out_opt_ HICON *phiconSmall,_In_ UINT nIcons)
UINT WINAPI shell32.ExtractIconExA(_In_ LPCTSTR lpszFile,_In_ int nIconIndex,_Out_opt_ HICON *phiconLarge,_Out_opt_ HICON *phiconSmall,_In_ UINT nIcons)
void CALLBACK None.CallMaster(HINTERNET None None,DWORD_PTR None None,DWORD None None,LPVOID None None,DWORD None None)
HRESULT None msftedit.GetMathProperties([out] long *pOptions)
HRESULT None None.EnableAsyncReceive(RECEIVE_CONTEXT* prc None)
BOOL None ktmw32.RenameTransactionManager(_In_ LPWSTR LogFileName,_In_ LPGUID ExistingTransactionManagerGuid)
LONG WINAPI advapi32.RegDeleteKeyTransacted(_In_ HKEY hKey,_In_ LPCTSTR lpSubKey,_In_ REGSAM samDesired,_Reserved_ DWORD Reserved,_In_ HANDLE hTransaction,_Reserved_ PVOID pExtendedParameter)
LONG WINAPI advapi32.RegDeleteKeyTransactedW(_In_ HKEY hKey,_In_ LPCTSTR lpSubKey,_In_ REGSAM samDesired,_Reserved_ DWORD Reserved,_In_ HANDLE hTransaction,_Reserved_ PVOID pExtendedParameter)
LONG WINAPI advapi32.RegDeleteKeyTransactedA(_In_ HKEY hKey,_In_ LPCTSTR lpSubKey,_In_ REGSAM samDesired,_Reserved_ DWORD Reserved,_In_ HANDLE hTransaction,_Reserved_ PVOID pExtendedParameter)
BOOL WINAPI user32.SetMenuDefaultItem(_In_ HMENU hMenu,_In_ UINT uItem,_In_ UINT fByPos)
HRESULT None msdrm.DRMGetUserRights(_In_ DRMPUBHANDLE hIssuanceLicense,_In_ DRMPUBHANDLE hUser,_In_ UINT uIndex,_Out_ DRMPUBHANDLE *phRight)
BOOL None spoolss.ScheduleJob(_In_ HANDLE hPrinter,_In_ DWORD dwJobID)
BOOL None gdi32.GetWindowExtEx(_In_ HDC hdc,_Out_ LPSIZE lpSize)
LONG WINAPI advapi32.RegSaveKey(_In_ HKEY hKey,_In_ LPCTSTR lpFile,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes)
LONG WINAPI advapi32.RegSaveKeyW(_In_ HKEY hKey,_In_ LPCTSTR lpFile,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes)
LONG WINAPI advapi32.RegSaveKeyA(_In_ HKEY hKey,_In_ LPCTSTR lpFile,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes)
HRESULT None None.CreateAck(LPWSTR lpstrAdminQueue None,USHORT AckValue None,MQMSGPROPS* pmsgprops None,GUID g_guidConnectorType None)
BOOL WINAPI user32.DestroyMenu(_In_ HMENU hMenu)
HRESULT None msftedit.GetSuperscript(long *pValue None)
BOOL None rasdlg.RasPhonebookDlg(_In_ LPTSTR lpszPhonebook,_In_ LPTSTR lpszEntry,_Inout_ LPRASPBDLG lpInfo)
BOOL None rasdlg.RasPhonebookDlgW(_In_ LPTSTR lpszPhonebook,_In_ LPTSTR lpszEntry,_Inout_ LPRASPBDLG lpInfo)
BOOL None rasdlg.RasPhonebookDlgA(_In_ LPTSTR lpszPhonebook,_In_ LPTSTR lpszEntry,_Inout_ LPRASPBDLG lpInfo)
BOOL None wininet.InternetWriteFile(_In_ HINTERNET hFile,_In_ LPCVOID lpBuffer,_In_ DWORD dwNumberOfBytesToWrite,_Out_ LPDWORD lpdwNumberOfBytesWritten)
HANDLE WINAPI ktmw32.CreateTransactionManager(_In_opt_ LPSECURITY_ATTRIBUTES lpTransactionAttributes,_In_opt_ LPWSTR LogFileName,_In_opt_ ULONG CreateOptions,_In_opt_ ULONG CommitStrength)
HRESULT None None.CollectPartResources([out None None,retval] IXpsOMPartResources **partResources)
HRESULT None msftedit.GetSize(float *pValue None)
HRESULT None None.SetVisualLookup([in] LPCWSTR lookup)
LONG WINAPI advapi32.RegEnumKey(_In_ HKEY hKey,_In_ DWORD dwIndex,_Out_ LPTSTR lpName,_In_ DWORD cchName)
LONG WINAPI advapi32.RegEnumKeyW(_In_ HKEY hKey,_In_ DWORD dwIndex,_Out_ LPTSTR lpName,_In_ DWORD cchName)
LONG WINAPI advapi32.RegEnumKeyA(_In_ HKEY hKey,_In_ DWORD dwIndex,_Out_ LPTSTR lpName,_In_ DWORD cchName)
HRESULT None msftedit.GetMainStory([out None None,retval] ITextStory **ppStory)
HRESULT None msftedit.Reset([in] long Value)
BOOL None spoolss.AddPort(_In_ LPTSTR pName,_In_ HWND hWnd,_In_ LPTSTR pMonitorName)
BOOL None spoolss.AddPortW(_In_ LPTSTR pName,_In_ HWND hWnd,_In_ LPTSTR pMonitorName)
BOOL None spoolss.AddPortA(_In_ LPTSTR pName,_In_ HWND hWnd,_In_ LPTSTR pMonitorName)
HRESULT None msftedit.GetDuplicate2([out None None,retval] ITextRange2 **ppRange)
HRESULT None msftedit.GetEngrave(long *pValue None)
HRESULT None spoolss.GetCorePrinterDrivers(_In_ LPCTSTR pszServer,_In_ LPCTSTR pszEnvironment,_In_ LPCTSTR pszzCoreDriverDependencies,_In_ DWORD cCorePrinterDrivers,_Out_ PCORE_PRINTER_DRIVER pCorePrinterDrivers)
HRESULT None spoolss.GetCorePrinterDriversW(_In_ LPCTSTR pszServer,_In_ LPCTSTR pszEnvironment,_In_ LPCTSTR pszzCoreDriverDependencies,_In_ DWORD cCorePrinterDrivers,_Out_ PCORE_PRINTER_DRIVER pCorePrinterDrivers)
HRESULT None spoolss.GetCorePrinterDriversA(_In_ LPCTSTR pszServer,_In_ LPCTSTR pszEnvironment,_In_ LPCTSTR pszzCoreDriverDependencies,_In_ DWORD cCorePrinterDrivers,_Out_ PCORE_PRINTER_DRIVER pCorePrinterDrivers)
HWND WINAPI user32.GetDlgItem(_In_opt_ HWND hDlg,_In_ int nIDDlgItem)
HRESULT None None.GetQueueQuotaProp(LPCWSTR wszQueueFormatName None,ULONG *pulValue None)
LRESULT WINAPI user32.SendDlgItemMessage(_In_ HWND hDlg,_In_ int nIDDlgItem,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
LRESULT WINAPI user32.SendDlgItemMessageW(_In_ HWND hDlg,_In_ int nIDDlgItem,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
LRESULT WINAPI user32.SendDlgItemMessageA(_In_ HWND hDlg,_In_ int nIDDlgItem,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
BOOL WINAPI winhttp.WinHttpCreateUrl(_In_ LPURL_COMPONENTS lpUrlComponents,_In_ DWORD dwFlags,_Out_ LPWSTR pwszUrl,_Inout_ LPDWORD lpdwUrlLength)
UINT_PTR CALLBACK None.PrintHookProc(_In_ HWND hdlg,_In_ UINT uiMsg,_In_ WPARAM wParam,_In_ LPARAM lParam)
HICON WINAPI shell32.ExtractAssociatedIcon(_Reserved_ HINSTANCE hInst,_Inout_ LPTSTR lpIconPath,_Inout_ WORD *lpiIcon)
HICON WINAPI shell32.ExtractAssociatedIconW(_Reserved_ HINSTANCE hInst,_Inout_ LPTSTR lpIconPath,_Inout_ WORD *lpiIcon)
HICON WINAPI shell32.ExtractAssociatedIconA(_Reserved_ HINSTANCE hInst,_Inout_ LPTSTR lpIconPath,_Inout_ WORD *lpiIcon)
INT_PTR WINAPI user32.DialogBoxIndirectParam(_In_opt_ HINSTANCE hInstance,_In_ LPCDLGTEMPLATE hDialogTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc,_In_ LPARAM dwInitParam)
INT_PTR WINAPI user32.DialogBoxIndirectParamW(_In_opt_ HINSTANCE hInstance,_In_ LPCDLGTEMPLATE hDialogTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc,_In_ LPARAM dwInitParam)
INT_PTR WINAPI user32.DialogBoxIndirectParamA(_In_opt_ HINSTANCE hInstance,_In_ LPCDLGTEMPLATE hDialogTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc,_In_ LPARAM dwInitParam)
HRESULT None msftedit.ReleaseImmContext([in] int64 Context)
HMENU WINAPI user32.LoadMenu(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpMenuName)
HMENU WINAPI user32.LoadMenuW(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpMenuName)
HMENU WINAPI user32.LoadMenuA(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpMenuName)
HRESULT None msftedit.GetBold(long *pValue None)
HRESULT None msftedit.Notify([in] long Notify)
BOOL WINAPI ktmw32.GetNotificationResourceManager(_In_ HANDLE ResourceManagerHandle,_Out_ PTRANSACTION_NOTIFICATION TransactionNotification,_In_ ULONG NotificationLength,_In_opt_ DWORD dwMilliseconds,_Out_opt_ PULONG ReturnLength)
HRESULT None msftedit.DeleteTab(float tbPos None)
HRESULT None msftedit.GetDocumentFont([out None None,retval] ITextFont2 **ppFont)
HANDLE WINAPI ktmw32.CreateResourceManager(_In_opt_ LPSECURITY_ATTRIBUTES lpResourceManagerAttributes,_In_ LPGUID ResourceManagerID,_In_opt_ DWORD CreateOptions,_In_ HANDLE TmHandle,_In_opt_ LPWSTR Description)
BOOL WINAPI ktmw32.SinglePhaseReject(_In_ HANDLE EnlistmentHandle,_In_ PLARGE_INTEGER TmVirtualClock)
HRESULT None None.GetAdvisoryPageDimensions([out None None,retval] XPS_SIZE *pageDimensions)
HRESULT None usp10.ScriptRecordDigitSubstitution(_In_ LCID Locale,_Out_ SCRIPT_DIGITSUBSTITUTE *psds)
HRESULT None None.RegisterWord([in] IMEREG reg,[in] IMEWRD *pwrd)
DWORD None rasapi32.RasGetSubEntryHandle(_In_ HRASCONN hRasConn,_In_ DWORD dwSubEntry,_Out_ LPHRASCONN lphRasConn)
DWORD None rasapi32.RasGetSubEntryHandleW(_In_ HRASCONN hRasConn,_In_ DWORD dwSubEntry,_Out_ LPHRASCONN lphRasConn)
DWORD None rasapi32.RasGetSubEntryHandleA(_In_ HRASCONN hRasConn,_In_ DWORD dwSubEntry,_Out_ LPHRASCONN lphRasConn)
HRESULT None msftedit.GetUnderline(long *pValue None)
LONG WINAPI advapi32.RegCloseKey(_In_ HKEY hKey)
DWORD None rasapi32.RasValidateEntryName(_In_ LPCTSTR lpszPhonebook,_In_ LPCTSTR lpszEntry)
DWORD None rasapi32.RasValidateEntryNameW(_In_ LPCTSTR lpszPhonebook,_In_ LPCTSTR lpszEntry)
DWORD None rasapi32.RasValidateEntryNameA(_In_ LPCTSTR lpszPhonebook,_In_ LPCTSTR lpszEntry)
BOOL WINAPI ktmw32.CommitTransactionAsync(_In_ HANDLE TransactionHandle)
INT_PTR WINAPI user32.DialogBoxIndirect(_In_opt_ HINSTANCE hInstance,_In_ LPCDLGTEMPLATE lpTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc)
INT_PTR WINAPI user32.DialogBoxIndirectW(_In_opt_ HINSTANCE hInstance,_In_ LPCDLGTEMPLATE lpTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc)
INT_PTR WINAPI user32.DialogBoxIndirectA(_In_opt_ HINSTANCE hInstance,_In_ LPCDLGTEMPLATE lpTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc)
BOOL WINAPI user32.SetMenuDefaultItem(_In_ HMENU hMenu,_In_ UINT uItem,_In_ UINT fByPos)
int WINAPI kernel32.lstrcmpi(_In_ LPCTSTR lpString1,_In_ LPCTSTR lpString2)
int WINAPI kernel32.lstrcmpiW(_In_ LPCTSTR lpString1,_In_ LPCTSTR lpString2)
int WINAPI kernel32.lstrcmpiA(_In_ LPCTSTR lpString1,_In_ LPCTSTR lpString2)
BOOL WINAPI kernel32.WriteProfileString(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ LPCTSTR lpString)
BOOL WINAPI kernel32.WriteProfileStringW(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ LPCTSTR lpString)
BOOL WINAPI kernel32.WriteProfileStringA(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ LPCTSTR lpString)
DWORD None c_g18030.BytesToUnicode(_In_ BYTE *lpMultiByteStr,_In_ UINT cchMultiByte,_Out_ UINT *pcchLeftOverBytes,_In_ LPWSTR lpWideCharStr,_In_ UINT cchWideChar)
BOOL None None.GetPrintProcessorDirectory(_In_ LPTSTR pName,_In_ LPTSTR pEnvironment,_In_ DWORD Level,_Out_ LPBYTE pPrintProcessorInfo,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded)
BOOL None None.GetPrintProcessorDirectoryW(_In_ LPTSTR pName,_In_ LPTSTR pEnvironment,_In_ DWORD Level,_Out_ LPBYTE pPrintProcessorInfo,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded)
BOOL None None.GetPrintProcessorDirectoryA(_In_ LPTSTR pName,_In_ LPTSTR pEnvironment,_In_ DWORD Level,_Out_ LPBYTE pPrintProcessorInfo,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded)
HRESULT None msftedit.GetTabCount(long *pc None)
BOOL WINAPI user32.SetWindowDisplayAffinity(_In_ HWND hWnd,_In_ DWORD dwAffinity)
int None gdi32.GetTextCharset(_In_ HDC hdc)
int None None._set_new_mode(int newhandlermode None)
LONG WINAPI advapi32.RegDisablePredefinedCacheEx(void None None)
HRESULT None None.CollectLinkTargets([out None None,retval] IXpsOMNameCollection **linkTargets)
HRESULT None None.SetMulticastAddressProp(LPCWSTR wszQueueFormatName None,LPWSTR wszValue None)
HRESULT None msdrm.DRMGetProcAddress(_In_ DRMHANDLE hLibrary,_In_ PWSTR wszProcName,_Out_ FARPROC *ppfnProcAddress)
int None gdi32.EndDoc(_In_ HDC hdc)
BOOL None winhttp.WinHttpCheckPlatform(void None None)
BOOL WINAPI user32.GetGUIThreadInfo(_In_ DWORD idThread,_Inout_ LPGUITHREADINFO lpgui)
HRESULT None spoolss.DeletePrinterDriverPackage(_In_ LPCTSTR pszServer,_In_ LPCTSTR pszInfPath,_In_ LPCTSTR pszEnvironment)
HRESULT None spoolss.DeletePrinterDriverPackageW(_In_ LPCTSTR pszServer,_In_ LPCTSTR pszInfPath,_In_ LPCTSTR pszEnvironment)
HRESULT None spoolss.DeletePrinterDriverPackageA(_In_ LPCTSTR pszServer,_In_ LPCTSTR pszInfPath,_In_ LPCTSTR pszEnvironment)
BOOL WINAPI ktmw32.GetTransactionInformation(_In_ HANDLE TransactionHandle,_Out_opt_ PDWORD Outcome,_Out_opt_ PDWORD IsolationLevel,_Out_opt_ PDWORD IsolationFlags,_Out_opt_ PDWORD Timeout,_In_ DWORD BufferLength,_Out_opt_ LPWSTR Description)
void APIENTRY None.RasSetCommSettings(_In_ HANDLE hPort,_In_ RASCOMMSETTINGS *pRasCommSettings,_In_ PVOID pvReserved)
HRESULT None msftedit.GetSubscript(long *pValue None)
HRESULT None usp10.ScriptGetFontFeatureTags(_In_opt_ HDC hdc,_Inout_ SCRIPT_CACHE *psc,_In_opt_ SCRIPT_ANALYSIS *psa,_In_ OPENTYPE_TAG tagScript,_In_ OPENTYPE_TAG tagLangSys,_In_ int cMaxTags,_Out_ OPENTYPE_TAG *pFeatureTags,_Out_ int *pcTags)
BOOL WINAPI user32.TrackMouseEvent(_Inout_ LPTRACKMOUSEEVENT lpEventTrack)
HRESULT None None.RequestingResponse(LPCWSTR wszDestQueueFormatName None,LPCWSTR wszResponseQueueFormatName None)
HRESULT None msftedit.GetOutline(long *pValue None)
HRESULT None msdrm.DRMGetUnboundLicenseObject(_In_ DRMQUERYHANDLE hQueryRoot,_In_ PWSTR wszSubObjectType,_In_ UINT iIndex,_Out_ DRMQUERYHANDLE *phSubQuery)
HRESULT None msftedit.GetStory([in] long Index,[out None None,retval] ITextStory **ppStory)
HRESULT None msftedit.GetAnimation(long *pValue None)
LONG WINAPI advapi32.RegOpenKey(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_Out_ PHKEY phkResult)
LONG WINAPI advapi32.RegOpenKeyW(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_Out_ PHKEY phkResult)
LONG WINAPI advapi32.RegOpenKeyA(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_Out_ PHKEY phkResult)
HANDLE WINAPI ktmw32.OpenTransaction(_In_ DWORD dwDesiredAccess,_In_ LPGUID TransactionId)
HINTERNET None wininet.InternetOpen(_In_ LPCTSTR lpszAgent,_In_ DWORD dwAccessType,_In_ LPCTSTR lpszProxyName,_In_ LPCTSTR lpszProxyBypass,_In_ DWORD dwFlags)
HINTERNET None wininet.InternetOpenW(_In_ LPCTSTR lpszAgent,_In_ DWORD dwAccessType,_In_ LPCTSTR lpszProxyName,_In_ LPCTSTR lpszProxyBypass,_In_ DWORD dwFlags)
HINTERNET None wininet.InternetOpenA(_In_ LPCTSTR lpszAgent,_In_ DWORD dwAccessType,_In_ LPCTSTR lpszProxyName,_In_ LPCTSTR lpszProxyBypass,_In_ DWORD dwFlags)
HRESULT APIENTRY None.MQReceiveMessageByLookupId(QUEUEHANDLE hSource None,ULONGLONG ullLookupId None,DWORD dwLookupAction None,MQMSGPROPS * pMessageProps,LPOVERLAPPED lpOverlapped None,PMQRECEIVECALLBACK fnReceiveCallback None,ITransaction * pTransaction)
HRESULT None None.SetQueueAuthenticateProp(LPCWSTR wszQueueFormatName None,UCHAR bValue None)
HRESULT None None.GetQueueBasepriorityProp(LPCWSTR wszQueueFormatName None,SHORT *piValue None)
HRESULT None msdrm.DRMSetNameAndDescription(_In_ DRMPUBHANDLE hIssuanceLicense,_In_ BOOL fDelete,_In_ UINT lcid,_In_ PWSTR wszName,_In_ PWSTR wszDescription)
HRESULT None msftedit.GetPosition(float *pValue None)
DWORD None rasapi32.RasGetCustomAuthData(_In_ LPCWSTR pszPhonebook,_In_ LPCWSTR pszEntry,_Out_ BYTE *pbCustomAuthData,_Inout_ DWORD *pdwSizeofCustomAuthData)
DWORD None rasapi32.RasGetCustomAuthDataW(_In_ LPCWSTR pszPhonebook,_In_ LPCWSTR pszEntry,_Out_ BYTE *pbCustomAuthData,_Inout_ DWORD *pdwSizeofCustomAuthData)
DWORD None rasapi32.RasGetCustomAuthDataA(_In_ LPCWSTR pszPhonebook,_In_ LPCWSTR pszEntry,_Out_ BYTE *pbCustomAuthData,_Inout_ DWORD *pdwSizeofCustomAuthData)
HRESULT None msftedit.SetSpacing([in] float Value)
int WINAPI user32.GetMenuItemCount(_In_opt_ HMENU hMenu)
DWORD WINAPI user32.CheckMenuItem(_In_ HMENU hmenu,_In_ UINT uIDCheckItem,_In_ UINT uCheck)
HRESULT None msftedit.GetProperty([in] long Type,[out] long *pValue)
BOOL WINAPI ktmw32.GetEnlistmentId(_In_ HANDLE EnlistmentHandle,_Out_ LPGUID EnlistmentId)
void None mrmsupport.DestroyResourceIndexer(_In_opt_ PVOID resourceIndexer)
HRESULT None msftedit.GetActiveStory([out None None,retval] ITextStory **ppStory)
BOOL WINAPI winhttp.WinHttpSetDefaultProxyConfiguration(_In_ WINHTTP_PROXY_INFO *pProxyInfo)
BOOL None ktmw32.PrepareEnlistment(_In_ HANDLE EnlistmentHandle,_In_ PLARGE_INTEGER TmVirtualClock)
BOOL WINAPI user32.DrawMenuBar(_In_ HWND hWnd)
HRESULT None msftedit.SetSize([in] float Value)
HRESULT None msdrm.DRMGetServiceLocation(_In_opt_ DRMHSESSION hClient,_In_ UINT uServiceType,_In_ UINT uServiceLocation,_In_ PWSTR wszIssuanceLicense,_Inout_ UINT *puServiceURLLength,_Out_ PWSTR wszServiceURL)
HRESULT None msftedit.SetStyle([in] long Value)
BOOL None gdi32.GetWorldTransform(_In_ HDC hdc,_Out_ LPXFORM lpXform)
HRESULT None msftedit.GetInlineObject([out] long *pType,[out] long *pAlign,[out] long *pChar,[out] long *pChar1,[out] long *pChar2,[out] long *pCount,[out] long *pTeXStyle,[out] long *pcCol,[out] long *pLevel)
HRESULT None msdrm.DRMCreateBoundLicense(_In_ DRMENVHANDLE hEnv,_In_ DRMBOUNDLICENSEPARAMS *pParams,_In_ PWSTR wszLicenseChain,_Out_ DRMHANDLE *phBoundLicense,_Out_ DRMHANDLE *phErrorLog)
BOOL WINAPI ktmw32.GetEnlistmentRecoveryInformation(_In_ HANDLE EnlistmentHandle,_In_ ULONG BufferSize,_Out_ PVOID Buffer,_Out_opt_ PULONG BufferUsed)
BOOL WINAPI winhttp.WinHttpReceiveResponse(_In_ HINTERNET hRequest,_Reserved_ LPVOID lpReserved)
HRESULT None None.SetTransformLocal([in] IXpsOMMatrixTransform *transform)
BOOL WINAPI user32.GetInputState(void None None)
UINT_PTR CALLBACK None.PageSetupHook(_In_ HWND hdlg,_In_ UINT uiMsg,_In_ WPARAM wParam,_In_ LPARAM lParam)
HRESULT None msftedit.GetItalic(long *pValue None)
BOOL None gdi32.ScaleViewportExtEx(_In_ HDC hdc,_In_ int Xnum,_In_ int Xdenom,_In_ int Ynum,_In_ int Ydenom,_Out_ LPSIZE lpSize)
HRESULT None msftedit.GetMathFunctionType([in] BSTR bstr,[out] long *pValue)
BOOL WINAPI user32.EnableMenuItem(_In_ HMENU hMenu,_In_ UINT uIDEnableItem,_In_ UINT uEnable)
BOOL WINAPI user32.DrawIcon(_In_ HDC hDC,_In_ int X,_In_ int Y,_In_ HICON hIcon)
GROUPID None wininet.CreateUrlCacheGroup(_In_ DWORD dwFlags,_Reserved_ LPVOID lpReserved)
HRESULT None msftedit.SetEmboss([in] long Value)
HRESULT None None.GetQueuePathnameProp(LPCWSTR wszQueueFormatName None,LPWSTR *pwszValue None)
BOOL WINAPI ktmw32.PrePrepareComplete(_In_ HANDLE EnlistmentHandle,_In_ PLARGE_INTEGER TmVirtualClock)
HRESULT None None.ReturnResp(LPCWSTR wszDestQueueFormatName None)
HRESULT None msftedit.SetAnimation([in] long Value)
BOOL None None.GetPrinterDriverDirectory(_In_ LPTSTR pName,_In_ LPTSTR pEnvironment,_In_ DWORD Level,_Out_ LPBYTE pDriverDirectory,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded)
BOOL None None.GetPrinterDriverDirectoryW(_In_ LPTSTR pName,_In_ LPTSTR pEnvironment,_In_ DWORD Level,_Out_ LPBYTE pDriverDirectory,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded)
BOOL None None.GetPrinterDriverDirectoryA(_In_ LPTSTR pName,_In_ LPTSTR pEnvironment,_In_ DWORD Level,_Out_ LPBYTE pDriverDirectory,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded)
DWORD CALLBACK None.RasCustomDeleteEntryNotify(_In_ LPCTSTR lpszPhonebook,_In_ LPCTSTR lpszEntry,_In_ DWORD dwFlags)
HRESULT None None.StartNewDocument([in] IOpcPartUri *documentPartName,[in] IXpsOMPrintTicketResource *documentPrintTicket,[in] IXpsOMDocumentStructureResource *documentStructure,[in] IXpsOMSignatureBlockResourceCollection *signatureBlockResources,[in] IXpsOMPartUriCollection *restrictedFonts)
DWORD None rasapi32.RasGetLinkStatistics(_In_ HRASCONN hRasConn,_In_ DWORD dwSubEntry,_Inout_ RAS_STATS *lpStatistics)
int None gdi32.GetMapMode(_In_ HDC hdc)
HRESULT None None.EnforceEncryption(LPCWSTR wszPathName _)
HRESULT None msftedit.GetRect([in] long Type,[out] long *pLeft,[out] long *pTop,[out] long *pRight,[out] long *pBottom,[out] long *pHit)
BOOL None wininet.GopherGetLocatorType(_In_ LPCTSTR lpszLocator,_Out_ LPDWORD lpdwGopherType)
BOOL None wininet.GopherGetLocatorTypeW(_In_ LPCTSTR lpszLocator,_Out_ LPDWORD lpdwGopherType)
BOOL None wininet.GopherGetLocatorTypeA(_In_ LPCTSTR lpszLocator,_Out_ LPDWORD lpdwGopherType)
HRESULT None None.SetQueueLabelProp(LPCWSTR wszQueueFormatName None,LPWSTR wszValue None)
HMENU WINAPI user32.GetSubMenu(_In_ HMENU hMenu,_In_ int nPos)
DWORD None rasapi32.RasClearConnectionStatistics(_In_ HRASCONN hRasConn)
DWORD WINAPI comdlg32.CommDlgExtendedError(void None None)
LPCWSTR WINAPI user32.MB_GetString(UINT wBtn None)
LONG WINAPI user32.GetMenuCheckMarkDimensions(void None None)
HRESULT None None.SendToDest(WCHAR *wszComputerName None,WCHAR *wszQueueName None)
HRESULT None msftedit.GetEastAsianFlags([out None None,retval] long *pFlags)
HRESULT None msftedit.SetShadow([in] long Value)
BOOL WINAPI user32.EndDialog(_In_ HWND hDlg,_In_ INT_PTR nResult)
HRESULT None msftedit.SetIMEInProgress([in] long Value)
HRESULT None None.GetStoryFragmentsResource([out None None,retval] IXpsOMStoryFragmentsResource **storyFragmentsResource)
BOOL WINAPI user32.ReleaseCapture(void None None)
long WINAPI user32.BroadcastSystemMessageEx(_In_ DWORD dwFlags,_Inout_opt_ LPDWORD lpdwRecipients,_In_ UINT uiMessage,_In_ WPARAM wParam,_In_ LPARAM lParam,_Out_opt_ PBSMINFO pBSMInfo)
long WINAPI user32.BroadcastSystemMessageExW(_In_ DWORD dwFlags,_Inout_opt_ LPDWORD lpdwRecipients,_In_ UINT uiMessage,_In_ WPARAM wParam,_In_ LPARAM lParam,_Out_opt_ PBSMINFO pBSMInfo)
long WINAPI user32.BroadcastSystemMessageExA(_In_ DWORD dwFlags,_Inout_opt_ LPDWORD lpdwRecipients,_In_ UINT uiMessage,_In_ WPARAM wParam,_In_ LPARAM lParam,_Out_opt_ PBSMINFO pBSMInfo)
BOOL WINAPI user32.IsWindowRedirectedForPrint(_In_ HWND hWnd)
HRESULT None msdrm.DRMActivate(_In_ DRMHSESSION hClient,_In_ UINT uFlags,_In_ UINT uLangID,_In_ DRM_ACTSERV_INFO *pActServInfo,_In_ VOID *pvContext,_In_ HWND hParentWnd)
DWORD None rasapi32.RasDeleteSubEntry(_In_ LPCTSTR lpszPhonebook,_In_ LPCTSTR lpszEntry,_In_ DWORD dwSubEntryId)
DWORD None rasapi32.RasDeleteSubEntryW(_In_ LPCTSTR lpszPhonebook,_In_ LPCTSTR lpszEntry,_In_ DWORD dwSubEntryId)
DWORD None rasapi32.RasDeleteSubEntryA(_In_ LPCTSTR lpszPhonebook,_In_ LPCTSTR lpszEntry,_In_ DWORD dwSubEntryId)
DWORD None rasapi32.rasgetnapstatus(_In_ HRASCONN hRasConn,_Inout_ LPRASNAPSTATE pNapState)
UINT WINAPI user32.GetMenuItemID(_In_ HMENU hMenu,_In_ int nPos)
BOOL None None.DeletePrinterDriver(_In_ LPTSTR pName,_In_ LPTSTR pEnvironment,_In_ LPTSTR pDriverName)
BOOL None None.DeletePrinterDriverW(_In_ LPTSTR pName,_In_ LPTSTR pEnvironment,_In_ LPTSTR pDriverName)
BOOL None None.DeletePrinterDriverA(_In_ LPTSTR pName,_In_ LPTSTR pEnvironment,_In_ LPTSTR pDriverName)
HRESULT None msftedit.GetActiveStory([out None None,retval] ITextStory **ppStory)
BOOL WINAPI user32.PostMessage(_In_opt_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
BOOL WINAPI user32.PostMessageW(_In_opt_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
BOOL WINAPI user32.PostMessageA(_In_opt_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
HRESULT None msftedit.TxGetVScroll(LONG *plMin None,LONG *plMax None,LONG *plPos None,LONG *plPage None,BOOL *pfEnabled None)
DWORD None rasapi32.RasGetQuarantineConnectionId(_In_ HRASCONN hRasConn,_Out_ ConnectionId *lpConnectionId)
HRESULT None usp10.ScriptStringCPtoX(_In_ SCRIPT_STRING_ANALYSIS ssa,_In_ int icp,_In_ BOOL fTrailing,_Out_ int *pX)
UINT WINAPI user32.ArrangeIconicWindows(_In_ HWND hWnd)
BOOL WINAPI ktmw32.GetTransactionId(_In_ HANDLE TransactionHandle,_Out_ LPGUID TransactionId)
BOOL WINAPI user32.IsIconic(_In_ HWND hWnd)
HRESULT None msftedit.SetWidowControl([in] long Bool)
HRESULT None msftedit.GetDocumentPara([out None None,retval] ITextPara2 **ppPara)
HRESULT None None.GetThumbnailResource([out None None,retval] IXpsOMImageResource **imageResource)
HRESULT None msftedit.GetLeftIndent(float *pValue None)
HMENU WINAPI user32.CreatePopupMenu(void None None)
DWORD None rasapi32.RasSetAutodialEnable(_In_ DWORD dwDialingLocation,_In_ BOOL fEnabled)
DWORD None rasapi32.RasSetAutodialEnableW(_In_ DWORD dwDialingLocation,_In_ BOOL fEnabled)
DWORD None rasapi32.RasSetAutodialEnableA(_In_ DWORD dwDialingLocation,_In_ BOOL fEnabled)
HRESULT None msftedit.RangeFromPoint(long x None,long y None,ITextRange **ppRange None)
BOOL WINAPI user32.DragDetect(_In_ HWND hwnd,_In_ POINT pt)
HRESULT None msftedit.SetHyphenation([in] long Value)
Sub None msftedit.AttributeCopy(r1 As ITextRange,r2 As ITextRange)
DWORD None rasapi32.RasDeleteEntry(_In_ LPCTSTR lpszPhonebook,_In_ LPCTSTR lpszEntry)
DWORD None rasapi32.RasDeleteEntryW(_In_ LPCTSTR lpszPhonebook,_In_ LPCTSTR lpszEntry)
DWORD None rasapi32.RasDeleteEntryA(_In_ LPCTSTR lpszPhonebook,_In_ LPCTSTR lpszEntry)
HRESULT None msftedit.SetForeColor([in] long Value)
HRESULT None None.IsPageLoaded([out None None,retval] BOOL *isPageLoaded)
WINHTTP_STATUS_CALLBACK WINAPI winhttp.WinHttpSetStatusCallback(_In_ HINTERNET hInternet,_In_ WINHTTP_STATUS_CALLBACK lpfnInternetCallback,_In_ DWORD dwNotificationFlags,_Reserved_ DWORD_PTR dwReserved)
HRESULT None msftedit.SetListLevelIndex([in] long Value)
BOOL WINAPI user32.SendMessageCallback(_In_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam,_In_ SENDASYNCPROC lpCallBack,_In_ ULONG_PTR dwData)
BOOL WINAPI user32.SendMessageCallbackW(_In_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam,_In_ SENDASYNCPROC lpCallBack,_In_ ULONG_PTR dwData)
BOOL WINAPI user32.SendMessageCallbackA(_In_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam,_In_ SENDASYNCPROC lpCallBack,_In_ ULONG_PTR dwData)
BOOL None gdi32.SetViewportOrgEx(_In_ HDC hdc,_In_ int X,_In_ int Y,_Out_ LPPOINT lpPoint)
DWORD WINAPI user32.GetQueueStatus(_In_ UINT flags)
BOOL WINAPI winhttp.WinHttpQueryDataAvailable(_In_ HINTERNET hRequest,_Out_ LPDWORD lpdwNumberOfBytesAvailable)
DWORD None rasapi32.RasValidateEntryName(_In_ LPCTSTR lpszPhonebook,_In_ LPCTSTR lpszEntry)
DWORD None rasapi32.RasValidateEntryNameW(_In_ LPCTSTR lpszPhonebook,_In_ LPCTSTR lpszEntry)
DWORD None rasapi32.RasValidateEntryNameA(_In_ LPCTSTR lpszPhonebook,_In_ LPCTSTR lpszEntry)
DWORD None rasapi32.RasEditPhonebookEntry(_In_ HWND hwnd,_In_ LPCTSTR lpszPhonebook,_In_ LPCTSTR lpszEntryName)
DWORD None rasapi32.RasEditPhonebookEntryW(_In_ HWND hwnd,_In_ LPCTSTR lpszPhonebook,_In_ LPCTSTR lpszEntryName)
DWORD None rasapi32.RasEditPhonebookEntryA(_In_ HWND hwnd,_In_ LPCTSTR lpszPhonebook,_In_ LPCTSTR lpszEntryName)
BOOL WINAPI ktmw32.RollbackTransactionAsync(_In_ HANDLE TransactionHandle)
HRESULT None msftedit.GetClientRect([in] long Type,[out] long *pLeft,[out] long *pTop,[out] long *pRight,[out] long *pBottom)
HRESULT None None.GetQSecurity(LPCWSTR wszComputerName None,LPCWSTR wszQueueName None)
HRESULT None None.GetContentBox([out None None,retval] XPS_RECT *contentBox)
WINAPI None msdrm.DRMGetSignedIssuanceLicenseEx(_In_ DRMENVHANDLE hEnv,_In_ DRMPUBHANDLE hIssuanceLicense,_In_ UINT uFlags,_In_ BYTE *pbSymKey,_In_ UINT cbSymKey,_In_ PWSTR wszSymKeyType,_In_ VOID *pvReserved,_In_ DRMHANDLE hEnablingPrincipal,_In_ DRMHANDLE hBoundLicense,_In_ DRMCALLBACK pfnCallback,_In_ VOID *pvContext)
BOOL None None.EnumPorts(_In_ LPTSTR pName,_In_ DWORD Level,_Out_ LPBYTE pPorts,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded,_Out_ LPDWORD pcReturned)
BOOL None None.EnumPortsW(_In_ LPTSTR pName,_In_ DWORD Level,_Out_ LPBYTE pPorts,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded,_Out_ LPDWORD pcReturned)
BOOL None None.EnumPortsA(_In_ LPTSTR pName,_In_ DWORD Level,_Out_ LPBYTE pPorts,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded,_Out_ LPDWORD pcReturned)
HRESULT None msftedit.SetStrikeThrough([in] long Value)
HRESULT None msftedit.GetCount([out None None,retval] long *pCount)
HRESULT None None.ReceiveMessage(WCHAR *wszComputerName None,WCHAR *wszQueueName None)
BOOL WINAPI ktmw32.CommitTransaction(_In_ HANDLE TransactionHandle)
DWORD None rasapi32.RasSetEntryDialParams(_In_ LPCTSTR lpszPhonebook,_In_ LPRASDIALPARAMS lprasdialparams,_In_ BOOL fRemovePassword)
DWORD None rasapi32.RasSetEntryDialParamsW(_In_ LPCTSTR lpszPhonebook,_In_ LPRASDIALPARAMS lprasdialparams,_In_ BOOL fRemovePassword)
DWORD None rasapi32.RasSetEntryDialParamsA(_In_ LPCTSTR lpszPhonebook,_In_ LPRASDIALPARAMS lprasdialparams,_In_ BOOL fRemovePassword)
HRESULT None msftedit.SetSmallCaps([in] long Value)
HRESULT None msftedit.SetLineSpacing([in] long Rule,[in] float Spacing)
BOOL WINAPI user32.DrawIconEx(_In_ HDC hdc,_In_ int xLeft,_In_ int yTop,_In_ HICON hIcon,_In_ int cxWidth,_In_ int cyWidth,_In_ UINT istepIfAniCur,_In_opt_ HBRUSH hbrFlickerFreeDraw,_In_ UINT diFlags)
DWORD CALLBACK None.RasDialFunc2(_In_ DWORD dwCallbackId,_In_ DWORD dwSubEntry,_In_ HRASCONN hrasconn,_In_ UINT unMsg,_In_ RASCONNSTATE rascs,_In_ DWORD dwError,_In_ DWORD dwExtendedError)
HRESULT None msftedit.GetLanguageID(long *pValue None)
LONG WINAPI advapi32.RegGetValue(_In_ HKEY hkey,_In_opt_ LPCTSTR lpSubKey,_In_opt_ LPCTSTR lpValue,_In_opt_ DWORD dwFlags,_Out_opt_ LPDWORD pdwType,_Out_opt_ PVOID pvData,_Inout_opt_ LPDWORD pcbData)
LONG WINAPI advapi32.RegGetValueW(_In_ HKEY hkey,_In_opt_ LPCTSTR lpSubKey,_In_opt_ LPCTSTR lpValue,_In_opt_ DWORD dwFlags,_Out_opt_ LPDWORD pdwType,_Out_opt_ PVOID pvData,_Inout_opt_ LPDWORD pcbData)
LONG WINAPI advapi32.RegGetValueA(_In_ HKEY hkey,_In_opt_ LPCTSTR lpSubKey,_In_opt_ LPCTSTR lpValue,_In_opt_ DWORD dwFlags,_Out_opt_ LPDWORD pdwType,_Out_opt_ PVOID pvData,_Inout_opt_ LPDWORD pcbData)
BOOL WINAPI None.RASADFunc(_In_ LPTSTR lpszPhonebook,_In_ LPTSTR lpszEntry,_In_ LPRASADPARAMS lpAutoDialParams,_Out_ LPDWORD lpdwRetCode)
BOOL WINAPI None.RASADFuncW(_In_ LPTSTR lpszPhonebook,_In_ LPTSTR lpszEntry,_In_ LPRASADPARAMS lpAutoDialParams,_Out_ LPDWORD lpdwRetCode)
BOOL WINAPI None.RASADFuncA(_In_ LPTSTR lpszPhonebook,_In_ LPTSTR lpszEntry,_In_ LPRASADPARAMS lpAutoDialParams,_Out_ LPDWORD lpdwRetCode)
HRESULT None msftedit.SetUnderline([in] long Value)
HRESULT None msdrm.DRMEncode(_In_ PWSTR wszAlgID,_In_ UINT uDataLen,_In_ BYTE *pbDecodedData,_Inout_ UINT *puEncodedStringLen,_Out_ PWSTR wszEncodedString)
HRESULT None msftedit.GetStoryRanges2([out None None,retval] ITextStoryRanges2 **ppStories)
HRESULT None msdrm.DRMIsActivated(_In_ DRMHSESSION hClient,_In_ UINT uFlags,_In_ DRM_ACTSERV_INFO *pActServInfo)
HRESULT None msftedit.GetStrikeThrough(long *pValue None)
HRESULT None msftedit.SetListType([in] long Value)
BOOL WINAPI user32.GetIconInfoEx(_In_ HICON hIcon,_Inout_ PICONINFOEX piconinfoex)
BOOL WINAPI user32.GetIconInfoExW(_In_ HICON hIcon,_Inout_ PICONINFOEX piconinfoex)
BOOL WINAPI user32.GetIconInfoExA(_In_ HICON hIcon,_Inout_ PICONINFOEX piconinfoex)
HRESULT None msdrm.DRMGetBoundLicenseObjectCount(_In_ DRMHANDLE hQueryRoot,_In_ PWSTR wszSubObjectType,_Out_ UINT *pcSubObject)
BOOL WINAPI ktmw32.SetEnlistmentRecoveryInformation(_In_ HANDLE EnlistmentHandle,_In_ ULONG BufferSize,_In_ PVOID Buffer)
DWORD None wininet.InternetSetFilePointer(_In_ HINTERNET hFile,_In_ LONG lDistanceToMove,_Inout_ PLONG lpDistanceToMoveHigh,_In_ DWORD dwMoveMethod,_In_ DWORD_PTR dwContext)
BOOL None wininet.GopherGetAttribute(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszLocator,_In_ LPCTSTR lpszAttributeName,_Out_ LPBYTE lpBuffer,_In_ DWORD dwBufferLength,_Out_ LPDWORD lpdwCharactersReturned,_In_ GOPHER_ATTRIBUTE_ENUMERATOR lpfnEnumerator,_In_ DWORD_PTR dwContext)
BOOL None wininet.GopherGetAttributeW(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszLocator,_In_ LPCTSTR lpszAttributeName,_Out_ LPBYTE lpBuffer,_In_ DWORD dwBufferLength,_Out_ LPDWORD lpdwCharactersReturned,_In_ GOPHER_ATTRIBUTE_ENUMERATOR lpfnEnumerator,_In_ DWORD_PTR dwContext)
BOOL None wininet.GopherGetAttributeA(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszLocator,_In_ LPCTSTR lpszAttributeName,_Out_ LPBYTE lpBuffer,_In_ DWORD dwBufferLength,_Out_ LPDWORD lpdwCharactersReturned,_In_ GOPHER_ATTRIBUTE_ENUMERATOR lpfnEnumerator,_In_ DWORD_PTR dwContext)
HRESULT None msftedit.CanChange([retval] long *pbCanChange)
HRESULT None msftedit.ReleaseCallManager([in] IUnknown *pVoid)
BOOL None None.AddPrinterDriver(_In_ LPTSTR pName,_In_ DWORD Level,_In_ LPBYTE pDriverInfo)
BOOL None None.AddPrinterDriverW(_In_ LPTSTR pName,_In_ DWORD Level,_In_ LPBYTE pDriverInfo)
BOOL None None.AddPrinterDriverA(_In_ LPTSTR pName,_In_ DWORD Level,_In_ LPBYTE pDriverInfo)
HRESULT None msftedit.GetTypographyOptions([out None None,retval] long *pOptions)
HRESULT None msftedit.Linearize([in] long Flags)
HRESULT None msftedit.SetText2([in] long Flags,[in] BSTR bstr)
HRESULT None msftedit.SetName([in] BSTR Name)
HRESULT None msftedit.GetPara2([out None None,retval] ITextPara2 **ppPara)
BOOL WINAPI user32.UpdateLayeredWindow(_In_ HWND hwnd,_In_opt_ HDC hdcDst,_In_opt_ POINT *pptDst,_In_opt_ SIZE *psize,_In_opt_ HDC hdcSrc,_In_opt_ POINT *pptSrc,_In_ COLORREF crKey,_In_opt_ BLENDFUNCTION *pblend,_In_ DWORD dwFlags)
DWORD WINAPI kernel32.GetPrivateProfileSection(_In_ LPCTSTR lpAppName,_Out_ LPTSTR lpReturnedString,_In_ DWORD nSize,_In_ LPCTSTR lpFileName)
DWORD WINAPI kernel32.GetPrivateProfileSectionW(_In_ LPCTSTR lpAppName,_Out_ LPTSTR lpReturnedString,_In_ DWORD nSize,_In_ LPCTSTR lpFileName)
DWORD WINAPI kernel32.GetPrivateProfileSectionA(_In_ LPCTSTR lpAppName,_Out_ LPTSTR lpReturnedString,_In_ DWORD nSize,_In_ LPCTSTR lpFileName)
HRESULT None msftedit.GetSpaceAfter(float *pValue None)
HRESULT None msftedit.GetCallManager([out None None,retval] IUnknown **ppVoid)
HRESULT None msftedit.SetInlineObject([in] long Type,[in] long Align,[in] long Char,[in] long Char1,[in] long Char2,[in] long Count,[in] long TeXStyle,[in] long cCol)
HRESULT None usp10.ScriptPositionSingleGlyph(_In_opt_ HDC hdc,_Inout_ SCRIPT_CACHE *psc,_In_opt_ SCRIPT_ANALYSIS *psa,_In_ OPENTYPE_TAG tagScript,_In_ OPENTYPE_TAG tagLangSys,_In_ OPENTYPE_TAG tagFeature,_In_ LONG lParameter,_In_ WORD wGlyphId,_In_ int iAdvance,_In_ GOFFSET Goffset,_Out_ int *piOutAdvance,_Out_ GOFFSET *pOutGoffset)
BOOL WINAPI ktmw32.PrepareComplete(_In_ HANDLE EnlistmentHandle,_In_ PLARGE_INTEGER TmVirtualClock)
HRESULT None msdrm.DRMGetRightInfo(_In_ DRMPUBHANDLE hRight,_Inout_ UINT *puRightNameLength,_Out_ PWSTR wszRightName,_Out_ SYSTEMTIME *pstFrom,_Out_ SYSTEMTIME *pstUntil)
HRESULT None msftedit.AttachMsgFilter([in] IUnknown *pFilter)
HRESULT None msftedit.IsEqual(ITextPara *pPara None,long *pB None)
HRESULT None None.GetLanguage([out None None,retval] LPWSTR *language)
LONG WINAPI advapi32.RegOverridePredefKey(_In_ HKEY hKey,_In_opt_ HKEY hNewHKey)
HRESULT None msdrm.DRMDecode(_In_ PWSTR wszAlgID,_In_ PWSTR wszEncodedString,_In_ UINT *puDecodedDataLen,_Out_ BYTE *pbDecodedData)
BOOL WINAPI user32.GetWindowInfo(_In_ HWND hwnd,_Inout_ PWINDOWINFO pwi)
HRESULT None msftedit.GetRow([out None None,retval] ITextRow **ppRow)
HRESULT None msftedit.SetEffectColor([in] long Index,[in] long Value)
BOOL WINAPI ktmw32.GetNotificationResourceManagerAsync(_In_ HANDLE ResourceManagerHandle,_Out_ PTRANSACTION_NOTIFICATION TransactionNotification,_In_ ULONG TransactionNotificationLength,_Out_ PULONG ReturnLength,_In_ LPOVERLAPPED pOverlapped)
DWORD None rasapi32.RasGetAutodialEnable(_In_ DWORD dwDialingLocation,_Out_ LPBOOL lpfEnabled)
DWORD None rasapi32.RasGetAutodialEnableW(_In_ DWORD dwDialingLocation,_Out_ LPBOOL lpfEnabled)
DWORD None rasapi32.RasGetAutodialEnableA(_In_ DWORD dwDialingLocation,_Out_ LPBOOL lpfEnabled)
BOOL WINAPI user32.HiliteMenuItem(_In_ HWND hwnd,_In_ HMENU hmenu,_In_ UINT uItemHilite,_In_ UINT uHilite)
DWORD None rasapi32.RasSetSubEntryProperties(_In_ LPCTSTR lpszPhonebook,_In_ LPCTSTR lpszEntry,_In_ DWORD dwSubEntry,_In_ LPRASSUBENTRY lpRasSubEntry,_In_ DWORD dwcbRasSubEntry,_In_ LPBYTE lpbDeviceConfig,_In_ DWORD dwcbDeviceConfig)
DWORD None rasapi32.RasSetSubEntryPropertiesW(_In_ LPCTSTR lpszPhonebook,_In_ LPCTSTR lpszEntry,_In_ DWORD dwSubEntry,_In_ LPRASSUBENTRY lpRasSubEntry,_In_ DWORD dwcbRasSubEntry,_In_ LPBYTE lpbDeviceConfig,_In_ DWORD dwcbDeviceConfig)
DWORD None rasapi32.RasSetSubEntryPropertiesA(_In_ LPCTSTR lpszPhonebook,_In_ LPCTSTR lpszEntry,_In_ DWORD dwSubEntry,_In_ LPRASSUBENTRY lpRasSubEntry,_In_ DWORD dwcbRasSubEntry,_In_ LPBYTE lpbDeviceConfig,_In_ DWORD dwcbDeviceConfig)
HRESULT None msdrm.DRMAcquireLicense(_In_ DRMHSESSION hSession,_In_ UINT uFlags,_In_ PWSTR wszGroupIdentityCredential,_In_ PWSTR wszRequestedRights,_In_ PWSTR wszCustomData,_In_ PWSTR wszURL,_In_ VOID *pvContext)
HRESULT None usp10.ScriptStringGetLogicalWidths(_In_ SCRIPT_STRING_ANALYSIS ssa,_Out_ int *piDx)
HRESULT None msdrm.DRMDuplicatePubHandle(_In_ DRMPUBHANDLE hPubIn,_Out_ DRMPUBHANDLE *phPubOut)
HRESULT None msftedit.GetHidden(long *pValue None)
BOOL WINAPI ktmw32.RecoverResourceManager(_In_ HANDLE ResourceManagerHandle)
HRESULT None msdrm.DRMRegisterProtectedWindow(_In_ DRMENVHANDLE hEnv,_In_ HWND hwnd)
BOOL WINAPI user32.SetMenuInfo(_In_ HMENU hmenu,_In_ LPCMENUINFO lpcmi)
HDC None user32.GetDC(_In_ HWND hWnd)
BOOL None wininet.GopherGetLocatorType(_In_ LPCTSTR lpszLocator,_Out_ LPDWORD lpdwGopherType)
BOOL None wininet.GopherGetLocatorTypeW(_In_ LPCTSTR lpszLocator,_Out_ LPDWORD lpdwGopherType)
BOOL None wininet.GopherGetLocatorTypeA(_In_ LPCTSTR lpszLocator,_Out_ LPDWORD lpdwGopherType)
HRESULT None msftedit.SetPara2([in] ITextPara2 *pPara)
HRESULT None None.GetGlyphMappings([in None None,out] UINT32 *glyphMappingCount,[out] XPS_GLYPH_MAPPING *glyphMappings)
HICON WINAPI user32.CreateIconFromResource(_In_ PBYTE presbits,_In_ DWORD dwResSize,_In_ BOOL fIcon,_In_ DWORD dwVer)
HRESULT None msftedit.GetListLevelIndex(long *pValue None)
int WINAPI user32.MenuItemFromPoint(_In_opt_ HWND hWnd,_In_ HMENU hMenu,_In_ POINT ptScreen)
HANDLE WINAPI ktmw32.OpenResourceManager(_In_ DWORD dwDesiredAccess,_In_ TmHandle None,_In_ LPGUID RmGuid)
BOOL None rasdlg.RasMonitorDlg(_In_ LPTSTR lpszDeviceName,_Inout_ LPRASMONITORDLG lpInfo)
BOOL None rasdlg.RasMonitorDlgW(_In_ LPTSTR lpszDeviceName,_Inout_ LPRASMONITORDLG lpInfo)
BOOL None rasdlg.RasMonitorDlgA(_In_ LPTSTR lpszDeviceName,_Inout_ LPRASMONITORDLG lpInfo)
HRESULT None msftedit.GetSpacing(float *pValue None)
DWORD None rasapi32.RasSetEapUserData(_In_ HANDLE hToken,_In_ LPCTSTR pszPhonebook,_In_ LPCTSTR pszEntry,_In_ BYTE *pbEapData,_In_ DWORD dwSizeofEapData)
DWORD None rasapi32.RasSetEapUserDataW(_In_ HANDLE hToken,_In_ LPCTSTR pszPhonebook,_In_ LPCTSTR pszEntry,_In_ BYTE *pbEapData,_In_ DWORD dwSizeofEapData)
DWORD None rasapi32.RasSetEapUserDataA(_In_ HANDLE hToken,_In_ LPCTSTR pszPhonebook,_In_ LPCTSTR pszEntry,_In_ BYTE *pbEapData,_In_ DWORD dwSizeofEapData)
int None gdi32.GetGraphicsMode(_In_ HDC hdc)
HRESULT None msftedit.Reset([in] long Value)
HRESULT None msftedit.SetListAlignment([in] long Value)
BOOL None None.EnumMonitors(_In_ LPTSTR pName,_In_ DWORD Level,_Out_ LPBYTE pMonitors,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded,_Out_ LPDWORD pcReturned)
BOOL None None.EnumMonitorsW(_In_ LPTSTR pName,_In_ DWORD Level,_Out_ LPBYTE pMonitors,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded,_Out_ LPDWORD pcReturned)
BOOL None None.EnumMonitorsA(_In_ LPTSTR pName,_In_ DWORD Level,_Out_ LPBYTE pMonitors,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded,_Out_ LPDWORD pcReturned)
DWORD None rasapi32.RasEditPhonebookEntry(_In_ HWND hwnd,_In_ LPCTSTR lpszPhonebook,_In_ LPCTSTR lpszEntryName)
DWORD None rasapi32.RasEditPhonebookEntryW(_In_ HWND hwnd,_In_ LPCTSTR lpszPhonebook,_In_ LPCTSTR lpszEntryName)
DWORD None rasapi32.RasEditPhonebookEntryA(_In_ HWND hwnd,_In_ LPCTSTR lpszPhonebook,_In_ LPCTSTR lpszEntryName)
HRESULT None msdrm.DRMGetRevocationPoint(_In_ DRMPUBHANDLE hIssuanceLicense,_Inout_ UINT *puIdLength,_Out_ PWSTR wszId,_Inout_ UINT *puIdTypeLength,_Out_ PWSTR wszIdType,_Inout_ UINT *puURLLength,_Out_ PWSTR wszURL,_Out_ SYSTEMTIME *pstFrequency,_Inout_ UINT *puNameLength,_Out_ PWSTR wszName,_Inout_ UINT *puPublicKeyLength,_Out_ PWSTR wszPublicKey)
HRESULT None None.GetQueueAuthenticateProp(LPCWSTR wszQueueFormatName None,UCHAR *pbValue None)
HRESULT None None.Clone([out None None,retval] IXpsOMGlyphs **glyphs)
HRESULT None msdrm.DRMGetUsers(_In_ DRMPUBHANDLE hIssuanceLicense,_In_ UINT uIndex,_Out_ DRMPUBHANDLE *phUser)
HDWP WINAPI user32.BeginDeferWindowPos(_In_ int nNumWindows)
HRESULT None msftedit.GetStrikeThrough(long *pValue None)
HRESULT None msftedit.GetCellColorBack([out None None,retval] long *pValue)
HRESULT None msdrm.DRMEncrypt(_In_ DRMHANDLE hCryptoProvider,_In_ UINT iPosition,_In_ UINT cNumInBytes,_In_ BYTE *pbInData,_Inout_ UINT *pcNumOutBytes,_Out_ BYTE *pbOutData)
DWORD CALLBACK None.RasDialFunc2(_In_ DWORD dwCallbackId,_In_ DWORD dwSubEntry,_In_ HRASCONN hrasconn,_In_ UINT unMsg,_In_ RASCONNSTATE rascs,_In_ DWORD dwError,_In_ DWORD dwExtendedError)
BOOL WINAPI ktmw32.RollbackTransaction(_In_ HANDLE TransactionHandle)
BOOL None wininet.InternetGetCookieEx(_In_ LPCTSTR lpszURL,_In_ LPCTSTR lpszCookieName,_Inout_opt_ LPTSTR lpszCookieData,_Inout_ LPDWORD lpdwSize,_In_ DWORD dwFlags,_In_ LPVOID lpReserved)
BOOL None wininet.InternetGetCookieExW(_In_ LPCTSTR lpszURL,_In_ LPCTSTR lpszCookieName,_Inout_opt_ LPTSTR lpszCookieData,_Inout_ LPDWORD lpdwSize,_In_ DWORD dwFlags,_In_ LPVOID lpReserved)
BOOL None wininet.InternetGetCookieExA(_In_ LPCTSTR lpszURL,_In_ LPCTSTR lpszCookieName,_Inout_opt_ LPTSTR lpszCookieData,_Inout_ LPDWORD lpdwSize,_In_ DWORD dwFlags,_In_ LPVOID lpReserved)
BOOL WINAPI comdlg32.PrintDlg(_Inout_ LPPRINTDLG lppd)
BOOL WINAPI comdlg32.PrintDlgW(_Inout_ LPPRINTDLG lppd)
BOOL WINAPI comdlg32.PrintDlgA(_Inout_ LPPRINTDLG lppd)
HRESULT None msftedit.GetActiveStory([out None None,retval] ITextStory **ppStory)
HRESULT None msftedit.SetSubscript([in] long Value)
DWORD None rasapi32.RasCreatePhonebookEntry(_In_ HWND hwnd,_In_ LPCTSTR lpszPhonebook)
DWORD None rasapi32.RasCreatePhonebookEntryW(_In_ HWND hwnd,_In_ LPCTSTR lpszPhonebook)
DWORD None rasapi32.RasCreatePhonebookEntryA(_In_ HWND hwnd,_In_ LPCTSTR lpszPhonebook)
BOOL WINAPI user32.GetMessage(_Out_ LPMSG lpMsg,_In_opt_ HWND hWnd,_In_ UINT wMsgFilterMin,_In_ UINT wMsgFilterMax)
BOOL WINAPI user32.GetMessageW(_Out_ LPMSG lpMsg,_In_opt_ HWND hWnd,_In_ UINT wMsgFilterMin,_In_ UINT wMsgFilterMax)
BOOL WINAPI user32.GetMessageA(_Out_ LPMSG lpMsg,_In_opt_ HWND hWnd,_In_ UINT wMsgFilterMin,_In_ UINT wMsgFilterMax)
HRESULT None None.SetDictionaryResource([in] IXpsOMRemoteDictionaryResource *remoteDictionaryResource)
DWORD None rasapi32.RasEnumEntries(_In_ LPCTSTR reserved,_In_ LPCTSTR lpszPhonebook,_Inout_ LPRASENTRYNAME lprasentryname,_Inout_ LPDWORD lpcb,_Out_ LPDWORD lpcEntries)
DWORD None rasapi32.RasEnumEntriesW(_In_ LPCTSTR reserved,_In_ LPCTSTR lpszPhonebook,_Inout_ LPRASENTRYNAME lprasentryname,_Inout_ LPDWORD lpcb,_Out_ LPDWORD lpcEntries)
DWORD None rasapi32.RasEnumEntriesA(_In_ LPCTSTR reserved,_In_ LPCTSTR lpszPhonebook,_Inout_ LPRASENTRYNAME lprasentryname,_Inout_ LPDWORD lpcb,_Out_ LPDWORD lpcEntries)
BOOL None None.DeletePrinterDriverEx(_In_ LPTSTR pName,_In_ LPTSTR pEnvironment,_In_ LPTSTR pDriverName,_In_ DWORD dwDeleteFlag,_In_ DWORD dwVersionFlag)
BOOL None None.DeletePrinterDriverExW(_In_ LPTSTR pName,_In_ LPTSTR pEnvironment,_In_ LPTSTR pDriverName,_In_ DWORD dwDeleteFlag,_In_ DWORD dwVersionFlag)
BOOL None None.DeletePrinterDriverExA(_In_ LPTSTR pName,_In_ LPTSTR pEnvironment,_In_ LPTSTR pDriverName,_In_ DWORD dwDeleteFlag,_In_ DWORD dwVersionFlag)
HRESULT None None.ShowContextualUI(POINT ptLocation None,HWND hWnd None)
HRESULT None msdrm.DRMSetApplicationSpecificData(_In_ DRMPUBHANDLE hIssuanceLicense,_In_ BOOL fDelete,_In_ PWSTR wszName,_In_ PWSTR wszValue)
HRESULT None msdrm.DRMGetUserInfo(_In_ DRMPUBHANDLE hUser,_Inout_ UINT *puUserNameLength,_Out_ PWSTR wszUserName,_Inout_ UINT *puUserIdLength,_Out_ PWSTR wszUserId,_Inout_ UINT *puUserIdTypeLength,_Out_ PWSTR wszUserIdType)
HRESULT None msftedit.SetListStart([in] long Value)
HRESULT None msdrm.DRMGetIssuanceLicenseInfo(_In_ DRMPUBHANDLE hIssuanceLicense,_Out_ SYSTEMTIME *pstTimeFrom,_Out_ SYSTEMTIME *pstTimeUntil,_In_ UINT uFlags,_Inout_ UINT *puDistributionPointNameLength,_Out_ PWSTR wszDistributionPointName,_Inout_ UINT *puDistributionPointURLLength,_Out_ PWSTR wszDistributionPointURL,_Out_ DRMPUBHANDLE *phOwner,_Out_ BOOL *pfOfficial)
HICON WINAPI user32.LoadIcon(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpIconName)
HICON WINAPI user32.LoadIconW(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpIconName)
HICON WINAPI user32.LoadIconA(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpIconName)
HRESULT None msftedit.GetAlignment(long *pValue None)
HRESULT None None.InitRibbon(CMainFrame* pMainFrame None,IUnknown** ppFramework None)
void CALLBACK None.RasDialFunc1(_In_ HRASCONN hrasconn,_In_ UINT unMsg,_In_ RASCONNSTATE rascs,_In_ DWORD dwError,_In_ DWORD dwExtendedError)
HRESULT None msftedit.SetStyle([in] long Value)
DWORD None rasapi32.RasGetSubEntryProperties(_In_ LPCTSTR lpszPhonebook,_In_ LPCTSTR lpszEntry,_In_ DWORD dwSubEntry,_Inout_ LPRASSUBENTRY lpRasSubEntry,_Inout_ LPDWORD lpdwcb,_In_ LPBYTE lpbDeviceConfig,_In_ LPDWORD lpcbDeviceConfig)
DWORD None rasapi32.RasGetSubEntryPropertiesW(_In_ LPCTSTR lpszPhonebook,_In_ LPCTSTR lpszEntry,_In_ DWORD dwSubEntry,_Inout_ LPRASSUBENTRY lpRasSubEntry,_Inout_ LPDWORD lpdwcb,_In_ LPBYTE lpbDeviceConfig,_In_ LPDWORD lpcbDeviceConfig)
DWORD None rasapi32.RasGetSubEntryPropertiesA(_In_ LPCTSTR lpszPhonebook,_In_ LPCTSTR lpszEntry,_In_ DWORD dwSubEntry,_Inout_ LPRASSUBENTRY lpRasSubEntry,_Inout_ LPDWORD lpdwcb,_In_ LPBYTE lpbDeviceConfig,_In_ LPDWORD lpcbDeviceConfig)
HRESULT None msdrm.DRMGetServiceLocation(_In_opt_ DRMHSESSION hClient,_In_ UINT uServiceType,_In_ UINT uServiceLocation,_In_ PWSTR wszIssuanceLicense,_Inout_ UINT *puServiceURLLength,_Out_ PWSTR wszServiceURL)
HRESULT None msdrm.DRMGetIntervalTime(_In_ DRMPUBHANDLE hIssuanceLicense,_In_ UINT *pcDays)
BOOL WINAPI user32.GetInputState(void None None)
HRESULT None msftedit.GetSelection2([out None None,retval] ITextSelection2 **ppSel)
HRESULT None None.Write([in] ISequentialStream *stream,[in] BOOL optimizeMarkupSize)
LONG WINAPI advapi32.RegFlushKey(_In_ HKEY hKey)
HRESULT None None.SetFontFaceIndex([in] SHORT fontFaceIndex)
HRESULT None msftedit.GetDuplicate(ITextFont **ppFont None)
HRESULT None msftedit.Linearize([in] long Flags)
BOOL WINAPI ktmw32.RollbackEnlistment(_In_ HANDLE EnlistmentHandle,_In_ PLARGE_INTEGER TmVirtualClock)
DWORD None rasapi32.RasConnectionNotification(_In_ HRASCONN hrasconn,_In_ HANDLE hEvent,_In_ DWORD dwFlags)
DWORD None rasapi32.RasConnectionNotificationW(_In_ HRASCONN hrasconn,_In_ HANDLE hEvent,_In_ DWORD dwFlags)
DWORD None rasapi32.RasConnectionNotificationA(_In_ HRASCONN hrasconn,_In_ HANDLE hEvent,_In_ DWORD dwFlags)
DWORD None rasapi32.RasGetEapUserData(_In_ HANDLE hToken,_In_ LPCTSTR pszPhonebook,_In_ LPCTSTR pszEntry,_Out_ BYTE *pbEapData,_Inout_ DWORD *pdwSizeofEapData)
DWORD None rasapi32.RasGetEapUserDataW(_In_ HANDLE hToken,_In_ LPCTSTR pszPhonebook,_In_ LPCTSTR pszEntry,_Out_ BYTE *pbEapData,_Inout_ DWORD *pdwSizeofEapData)
DWORD None rasapi32.RasGetEapUserDataA(_In_ HANDLE hToken,_In_ LPCTSTR pszPhonebook,_In_ LPCTSTR pszEntry,_Out_ BYTE *pbEapData,_Inout_ DWORD *pdwSizeofEapData)
DWORD WINAPI user32.GetMessagePos(void None None)
HRESULT None None.ValidatingAuthentication(WCHAR * wszQueueName,WCHAR * wszComputerName)
void WINAPI None.RasPBDlgFunc(_In_ DWORD dwCallbackId,_In_ DWORD dwEvent,_In_ LPTSTR pszText,_In_ LPVOID pData)
void WINAPI None.RasPBDlgFuncW(_In_ DWORD dwCallbackId,_In_ DWORD dwEvent,_In_ LPTSTR pszText,_In_ LPVOID pData)
void WINAPI None.RasPBDlgFuncA(_In_ DWORD dwCallbackId,_In_ DWORD dwEvent,_In_ LPTSTR pszText,_In_ LPVOID pData)
DWORD None None.EnumPrinterDataEx(_In_ HANDLE hPrinter,_In_ LPCTSTR pKeyName,_Out_ LPBYTE pEnumValues,_In_ DWORD cbEnumValues,_Out_ LPDWORD pcbEnumValues,_Out_ LPDWORD pnEnumValues)
DWORD None None.EnumPrinterDataExW(_In_ HANDLE hPrinter,_In_ LPCTSTR pKeyName,_Out_ LPBYTE pEnumValues,_In_ DWORD cbEnumValues,_Out_ LPDWORD pcbEnumValues,_Out_ LPDWORD pnEnumValues)
DWORD None None.EnumPrinterDataExA(_In_ HANDLE hPrinter,_In_ LPCTSTR pKeyName,_Out_ LPBYTE pEnumValues,_In_ DWORD cbEnumValues,_Out_ LPDWORD pcbEnumValues,_Out_ LPDWORD pnEnumValues)
void CALLBACK None.RasDialFunc(_In_ UINT unMsg,_In_ RASCONNSTATE rasconnstate,_In_ DWORD dwError)
BOOL None gdi32.GetWindowOrgEx(_In_ HDC hdc,_Out_ LPPOINT lpPoint)
HRESULT None msftedit.SetOutline([in] long Value)
UINT_PTR CALLBACK None.PageSetupHook(_In_ HWND hdlg,_In_ UINT uiMsg,_In_ WPARAM wParam,_In_ LPARAM lParam)
HRESULT None msftedit.GetFirstLineIndent(float *pValue None)
HWND WINAPI user32.GetNextDlgTabItem(_In_ HWND hDlg,_In_opt_ HWND hCtl,_In_ BOOL bPrevious)
DWORD None rasapi32.RasClearConnectionStatistics(_In_ HRASCONN hRasConn)
HRESULT None msdrm.DRMDuplicateEnvironmentHandle(_In_ DRMENVHANDLE hToCopy,_Out_ DRMENVHANDLE *phCopy)
HRESULT None msdrm.DRMCreateEnablingBitsEncryptor(_In_ DRMHANDLE hBoundLicense,_In_opt_ PWSTR wszRight,_In_ DRMHANDLE hAuxLib,_In_opt_ PWSTR wszAuxPlug,_Out_ DRMHANDLE *phEncryptor)
HRESULT None msftedit.GetListStart(long *pValue None)
HRESULT None msftedit.SetItalic([in] long Value)
int None None.CommDlg_OpenSave_GetFolderIDList(hwnd None None,lparam None None,wparam None None)
HRESULT None msftedit.GetStyle(long *pValue None)
HRESULT None msdrm.DRMDuplicateHandle(_In_ DRMHANDLE hToCopy,_Out_ DRMHANDLE *phCopy)
DWORD None rasapi32.RasGetErrorString(_In_ UINT uErrorValue,_Out_ LPTSTR lpszErrorString,_In_ DWORD cBufSize)
DWORD None rasapi32.RasGetErrorStringW(_In_ UINT uErrorValue,_Out_ LPTSTR lpszErrorString,_In_ DWORD cBufSize)
DWORD None rasapi32.RasGetErrorStringA(_In_ UINT uErrorValue,_Out_ LPTSTR lpszErrorString,_In_ DWORD cBufSize)
DWORD WINAPI comdlg32.CommDlgExtendedError(void None None)
BOOL WINAPI winhttp.WinHttpSetCredentials(_In_ HINTERNET hRequest,_In_ DWORD AuthTargets,_In_ DWORD AuthScheme,_In_ LPCWSTR pwszUserName,_In_ LPCWSTR pwszPassword,_Reserved_ LPVOID pAuthParams)
BOOL None spoolss.ClosePrinter(_In_ HANDLE hPrinter)
BOOL None wininet.InternetAutodial(_In_ DWORD dwFlags,_In_ HWND hwndParent)
int WINAPI user32.LookupIconIdFromDirectory(_In_ PBYTE presbits,_In_ BOOL fIcon)
HRESULT None None.Execute(UINT32 commandId None,UI_EXECUTIONVERB verb None,const PROPERTYKEY *key,const PROPVARIANT *currentValue,IUISimplePropertySet *commandExecutionProperties None)
HRESULT None msftedit.GetAutospaceAlpha([out None None,retval] long *pValue)
DWORD None rasapi32.RasEnumAutodialAddresses(_Inout_ LPTSTR *lppAddresses,_Inout_ LPDWORD lpdwcbAddresses,_Out_ LPDWORD lpdwcAddresses)
DWORD None rasapi32.RasEnumAutodialAddressesW(_Inout_ LPTSTR *lppAddresses,_Inout_ LPDWORD lpdwcbAddresses,_Out_ LPDWORD lpdwcAddresses)
DWORD None rasapi32.RasEnumAutodialAddressesA(_Inout_ LPTSTR *lppAddresses,_Inout_ LPDWORD lpdwcbAddresses,_Out_ LPDWORD lpdwcAddresses)
HRESULT None msdrm.DRMGetClientVersion(_In_ DRM_CLIENT_VERSION_INFO *pDRMClientVersionInfo)
HRESULT None msdrm.DRMGetCertificateChainCount(_In_ PWSTR wszChain,_Out_ UINT *pcCertCount)
HRESULT None msdrm.DRMCloseHandle(_In_ DRMHANDLE handle)
HRESULT None msftedit.SetAlignment([in] long Value)
DWORD None rasapi32.RasGetEapUserIdentity(_In_ LPCSTR pszPhonebook,_In_ LPCSTR pszEntry,_In_ DWORD dwFlags,_In_ HWND hwnd,_Out_ LPRASEAPUSERIDENTITY *ppRasEapUserIdentity)
DWORD None rasapi32.RasGetEapUserIdentityW(_In_ LPCSTR pszPhonebook,_In_ LPCSTR pszEntry,_In_ DWORD dwFlags,_In_ HWND hwnd,_Out_ LPRASEAPUSERIDENTITY *ppRasEapUserIdentity)
DWORD None rasapi32.RasGetEapUserIdentityA(_In_ LPCSTR pszPhonebook,_In_ LPCSTR pszEntry,_In_ DWORD dwFlags,_In_ HWND hwnd,_Out_ LPRASEAPUSERIDENTITY *ppRasEapUserIdentity)
HRESULT None None.GetQueueBasepriorityProp(LPCWSTR wszQueueFormatName None,SHORT *piValue None)
HRESULT None msftedit.SetTypographyOptions([in] long Options,[in] long Mask)
HRESULT None msftedit.GetLineSpacingRule(long *pValue None)
HRESULT None None.SetContent([in] IStream *sourceStream,[in] XPS_IMAGE_TYPE imageType,[in] IOpcPartUri *partName)
HRESULT None msftedit.GetStrings([out] ITextStrings **ppStrs)
HRESULT None msftedit.SetPosition([in] float Value)
HRESULT None msftedit.SetShadow([in] long Value)
HRESULT None usp10.ScriptGetFontProperties(_In_ HDC hdc,_Inout_ SCRIPT_CACHE *psc,_Out_ SCRIPT_FONTPROPERTIES *sfp)
HRESULT None msdrm.DRMGetInfo(_In_ DRMHANDLE handle,_In_ PWSTR wszAttribute,_Out_ DRMENCODINGTYPE *peEncoding,_Inout_ UINT *pcBuffer,_Out_ BYTE *pbBuffer)
HRESULT None msftedit.GetImmContext([out None None,retval] __int64 *pContext)
HRESULT None msdrm.DRMCloseEnvironmentHandle(_In_ DRMENVHANDLE hEnv)
HRESULT None msdrm.DRMSetGlobalOptions(_In_ DRMGLOBALOPTIONS eGlobalOptions,_In_ LPVOID pvdata,_In_ DWORD dwlen)
HRESULT None msftedit.SetBold([in] long Value)
HRESULT None msftedit.SetIndents([in] float First,[in] float Left,[in] float Right)
DWORD None rasapi32.RasGetConnectionStatistics(_In_ HRASCONN hRasConn,_Inout_ RAS_STATS *lpStatistics)
HRESULT None msftedit.SetNotificationMode([in] long Value)
BOOL WINAPI user32.InSendMessage(void None None)
LONG WINAPI advapi32.RegUnLoadKey(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey)
LONG WINAPI advapi32.RegUnLoadKeyW(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey)
LONG WINAPI advapi32.RegUnLoadKeyA(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey)
HRESULT None msdrm.DRMDuplicateSession(_In_ DRMHSESSION hSessionIn,_Out_ DRMHSESSION *phSessionOut)
HANDLE WINAPI ktmw32.OpenTransactionManager(_In_ LPWSTR LogFileName,_In_ ACCESS_MASK DesiredAccess,_In_opt_ ULONG OpenOptions)
HRESULT None msftedit.SetAllCaps([in] long Value)
HRESULT None msdrm.DRMCreateRight(_In_ PWSTR wszRightName,_In_ SYSTEMTIME *pstFrom,_In_ SYSTEMTIME *pstUntil,_In_ UINT cExtendedInfo,_In_ PWSTR *pwszExtendedInfoName,_In_ PWSTR *pwszExtendedInfoValue,_Out_ DRMPUBHANDLE *phRight)
HRESULT None msdrm.DRMGetUsagePolicy(_In_ DRMPUBHANDLE hIssuanceLicense,_In_ UINT uIndex,_Out_ DRM_USAGEPOLICY_TYPE *peUsagePolicyType,_Out_ BOOL *pfExclusion,_Inout_ UINT *puNameLength,_Out_ PWSTR wszName,_Inout_ UINT *puMinVersionLength,_Out_ PWSTR wszMinVersion,_Inout_ UINT *puMaxVersionLength,_Out_ PWSTR wszMaxVersion,_Inout_ UINT *puPublicKeyLength,_Out_ PWSTR wszPublicKey,_Inout_ UINT *puDigestAlgorithmLength,_Out_ PWSTR wszDigestAlgorithm,_Inout_ UINT *pcbDigest,_Out_ BYTE *pbDigest)
HRESULT None msftedit.GetEmboss(long *pValue None)
HRESULT None None.GetUnicodeString([out None None,retval] LPWSTR *unicodeString)
HRESULT None msftedit.GetCellColorFore([out None None,retval] long *pValue)
HRESULT None msdrm.DRMCreateUser(_In_ PWSTR wszUserName,_In_ PWSTR wszUserId,_In_ PWSTR wszUserIdType,_Out_ DRMPUBHANDLE *phUser)
HRESULT None msdrm.DRMAddRightWithUser(_In_ DRMPUBHANDLE hIssuanceLicense,_In_ DRMPUBHANDLE hRight,_In_ DRMPUBHANDLE hUser)
HRESULT None None.Append([in] Object *object)
BOOL None msimg32.TransparentBlt(_In_ HDC hdcDest,_In_ int xoriginDest,_In_ int yoriginDest,_In_ int wDest,_In_ int hDest,_In_ HDC hdcSrc,_In_ int xoriginSrc,_In_ int yoriginSrc,_In_ int wSrc,_In_ int hSrc,_In_ UINT crTransparent)
HRESULT None msftedit.GetForeColor(long *pValue None)
HRESULT None None.GetContentBox([out None None,retval] XPS_RECT *contentBox)
DWORD None rasapi32.RasEnumConnections(_Inout_ LPRASCONN lprasconn,_Inout_ LPDWORD lpcb,_Out_ LPDWORD lpcConnections)
DWORD None rasapi32.RasEnumConnectionsW(_Inout_ LPRASCONN lprasconn,_Inout_ LPDWORD lpcb,_Out_ LPDWORD lpcConnections)
DWORD None rasapi32.RasEnumConnectionsA(_Inout_ LPRASCONN lprasconn,_Inout_ LPDWORD lpcb,_Out_ LPDWORD lpcConnections)
DWORD WINAPI None.RasCustomHangUp(HRASCONN hRasConn None)
HRESULT None None.CreatePageFromStream([in] IStream *pageMarkupStream,[in] IOpcPartUri *partUri,[in] IXpsOMPartResources *resources,[in] BOOL reuseObjects,[out None None,retval] IXpsOMPage **page)
LPARAM WINAPI user32.GetMessageExtraInfo(void None None)
HRESULT None msftedit.SetCellShading([in] long Value)
DWORD None rasapi32.RasInvokeEapUI(_In_ HRASCONN hRasConn,_In_ DWORD dwSubEntry,_In_ LPRASDIALEXTENSIONS lpExtensions,_In_ HWND hwnd)
HRESULT None msdrm.DRMInitEnvironment(_In_ DRMSECURITYPROVIDERTYPE eSecurityProviderType,_In_ DRMSPECTYPE eSpecification,_In_ PWSTR wszSecurityProvider,_In_ PWSTR wszManifestCredentials,_In_ PWSTR wszMachineCredentials,_Out_ DRMENVHANDLE *phEnv,_Out_ DRMHANDLE *phDefaultLibrary)
DWORD None rasapi32.RasGetCredentials(_In_ LPCTSTR lpszPhonebook,_In_ LPCTSTR lpszEntry,_Inout_ LPRASCREDENTIALS lpCredentials)
DWORD None rasapi32.RasGetCredentialsW(_In_ LPCTSTR lpszPhonebook,_In_ LPCTSTR lpszEntry,_Inout_ LPRASCREDENTIALS lpCredentials)
DWORD None rasapi32.RasGetCredentialsA(_In_ LPCTSTR lpszPhonebook,_In_ LPCTSTR lpszEntry,_Inout_ LPRASCREDENTIALS lpCredentials)
DWORD None rasapi32.RasSetAutodialParam(_In_ DWORD dwKey,_Out_ LPVOID lpvValue,_In_ DWORD dwcbValue)
DWORD None rasapi32.RasSetAutodialParamW(_In_ DWORD dwKey,_Out_ LPVOID lpvValue,_In_ DWORD dwcbValue)
DWORD None rasapi32.RasSetAutodialParamA(_In_ DWORD dwKey,_Out_ LPVOID lpvValue,_In_ DWORD dwcbValue)
HRESULT None msftedit.SetKeepTogether([in] long Value)
HRESULT None msdrm.DRMRegisterContent(_In_ BOOL fRegister)
HRESULT None msftedit.GetCch([out None None,retval] long *pcch)
HRESULT None msdrm.DRMGetSignedIssuanceLicense(_In_ DRMENVHANDLE hEnv,_In_ DRMPUBHANDLE hIssuanceLicense,_In_ UINT uFlags,_In_ BYTE *pbSymKey,_In_ UINT cbSymKey,_In_ PWSTR wszSymKeyType,_In_ PWSTR wszClientLicensorCertificate,_In_ DRMCALLBACK pfnCallback,_In_ PWSTR wszURL,_In_ VOID *pvContext)
HRESULT None msftedit.SetHidden([in] long Value)
BOOL WINAPI None.RasCustomEntryDlg(HINSTANCE hInstDll None,LPWSTR lpszPhonebook None,LPWSTR lpszEntry None,LPRASENTRYDLG lpInfo None,DWORD dwFlags None)
HRESULT None msftedit.GetCaretType([out None None,retval] long *pValue)
HRESULT None msftedit.GetEastAsianFlags([out None None,retval] long *pFlags)
DWORD None rasapi32.RasHangUp(_In_ HRASCONN hrasconn)
DWORD None rasapi32.RasHangUpW(_In_ HRASCONN hrasconn)
DWORD None rasapi32.RasHangUpA(_In_ HRASCONN hrasconn)
HRESULT None msftedit.GetWidowControl(long *pBool None)
HRESULT None msdrm.DRMCreateClientSession(_In_ DRMCALLBACK pfnCallback,_In_ UINT uCallbackVersion,_In_ PWSTR wszGroupIDProviderType,_In_opt_ PWSTR wszGroupID,_Out_ DRMHSESSION *phClient)
HRESULT None msdrm.DRMCreateIssuanceLicense(_In_ SYSTEMTIME *pstTimeFrom,_In_ SYSTEMTIME *pstTimeUntil,_In_ PWSTR wszReferralInfoName,_In_ PWSTR wszReferralInfoURL,_In_opt_ DRMPUBHANDLE hOwner,_In_ PWSTR wszIssuanceLicense,_In_ DRMHANDLE hBoundLicense,_Out_ DRMPUBHANDLE *phIssuanceLicense)
DWORD WINAPI None.RasCustomDial(HINSTANCE hInstDll None,LPRASDIALEXTENSIONS lpRasDialExtensions None,LPCWSTR lpszPhonebook None,LPRASDIALPARAMS lpRasDialParams None,DWORD dwNotifierType None,LPVOID lpvNotifier None,LPHRASCONN lphRasConn None,DWORD dwFlags None)
DWORD WINAPI None.RasCustomDialW(HINSTANCE hInstDll None,LPRASDIALEXTENSIONS lpRasDialExtensions None,LPCWSTR lpszPhonebook None,LPRASDIALPARAMS lpRasDialParams None,DWORD dwNotifierType None,LPVOID lpvNotifier None,LPHRASCONN lphRasConn None,DWORD dwFlags None)
DWORD WINAPI None.RasCustomDialA(HINSTANCE hInstDll None,LPRASDIALEXTENSIONS lpRasDialExtensions None,LPCWSTR lpszPhonebook None,LPRASDIALPARAMS lpRasDialParams None,DWORD dwNotifierType None,LPVOID lpvNotifier None,LPHRASCONN lphRasConn None,DWORD dwFlags None)
BOOL WINAPI msnsspc.CleanupCredentialCache(void None None)
HRESULT None msdrm.DRMGetTime(_In_ DRMENVHANDLE hEnv,_In_ DRMTIMETYPE eTimerIdType,_Out_ SYSTEMTIME *poTimeObject)
HRESULT None msftedit.Find([in] ITextRange2 *pRange,[in] long Count,[in] long Flags,[out] long *pDelta)
HRESULT None msdrm.DRMGetBoundLicenseAttributeCount(_In_ DRMHANDLE hQueryRoot,_In_ PWSTR wszAttribute,_Out_ UINT *pcAttributes)
HRESULT __stdcall None.DRMCallback(DRM_STATUS_MSG msg None,HRESULT hr None,VOID *pvParam None,VOID *pvContext None)
HRESULT None msdrm.DRMParseUnboundLicense(_In_ PWSTR wszCertificate,_Out_ DRMQUERYHANDLE *phQueryRoot)
HRESULT None msdrm.DRMEnumerateLicense(_In_ DRMHSESSION hSession,_In_ UINT uFlags,_In_ UINT uIndex,_Inout_ BOOL *pfSharedFlag,_Inout_ UINT *puCertificateDataLen,_Out_ PWSTR wszCertificateData)
HRESULT None msftedit.SetBackColor([in] long Value)
HRESULT None msdrm.DRMSetIntervalTime(_In_ DRMPUBHANDLE hIssuanceLicense,_In_ UINT cDays)
HRESULT None None.AddModelTexture([in] IOpcPartUri *texturePartName,[in] IStream *textureData)
HRESULT None msftedit.SetPageBreakBefore([in] long Bool)
HRESULT None msdrm.DRMGetEnvironmentInfo(_In_ DRMENVHANDLE handle,_In_ PWSTR wszAttribute,_Out_ DRMENCODINGTYPE *peEncoding,_Inout_ UINT *pcBuffer,_Out_ BYTE *pbBuffer)
HRESULT None msftedit.AddSubrange([in] long cp1,[in] long cp2,[in] long Activate)
HRESULT None None.SetFontRenderingEmSize([in] FLOAT fontRenderingEmSize)
DWORD None rasapi32.RasSetCustomAuthData(_In_ LPCWSTR pszPhonebook,_In_ LPCWSTR pszEntry,_In_ BYTE *pbCustomAuthData,_In_ DWORD dwSizeofCustomAuthData)
DWORD None rasapi32.RasSetCustomAuthDataW(_In_ LPCWSTR pszPhonebook,_In_ LPCWSTR pszEntry,_In_ BYTE *pbCustomAuthData,_In_ DWORD dwSizeofCustomAuthData)
DWORD None rasapi32.RasSetCustomAuthDataA(_In_ LPCWSTR pszPhonebook,_In_ LPCWSTR pszEntry,_In_ BYTE *pbCustomAuthData,_In_ DWORD dwSizeofCustomAuthData)
HRESULT None msftedit.SetMathProperties([in] long Options,[in] long Mask)
HRESULT None msftedit.GetChar2([out] long *pChar,[in] long Offset)
HRESULT None msdrm.DRMGetNameAndDescription(_In_ DRMPUBHANDLE hIssuanceLicense,_In_ UINT uIndex,_Out_ UINT *pulcid,_Inout_ UINT *puNameLength,_Out_ PWSTR wszName,_Inout_ UINT *puDescriptionLength,_Out_ PWSTR wszDescription)
HRESULT None None.GetBleedBox([out None None,retval] XPS_RECT *bleedBox)
HRESULT None None.GenerateUnusedLookupKey([in] XPS_OBJECT_TYPE type,[out None None,retval] LPWSTR *key)
BOOL WINAPI user32.LogicalToPhysicalPoint(_In_ HWND hWnd,_Inout_ LPPOINT lpPoint)
HRESULT None msdrm.DRMCreateEnablingBitsDecryptor(_In_ DRMHANDLE hBoundLicense,_In_opt_ PWSTR wszRight,_In_ DRMHANDLE hAuxLib,_In_opt_ PWSTR wszAuxPlug,_Out_ DRMHANDLE *phDecryptor)
HRESULT None msftedit.SetSpaceBefore([in] float Value)
DWORD None rasapi32.RasSetCredentials(_In_ LPCTSTR lpszPhonebook,_In_ LPCTSTR lpszEntry,_In_ LPRASCREDENTIALS lpCredentials,_In_ BOOL fClearCredentials)
DWORD None rasapi32.RasSetCredentialsW(_In_ LPCTSTR lpszPhonebook,_In_ LPCTSTR lpszEntry,_In_ LPRASCREDENTIALS lpCredentials,_In_ BOOL fClearCredentials)
DWORD None rasapi32.RasSetCredentialsA(_In_ LPCTSTR lpszPhonebook,_In_ LPCTSTR lpszEntry,_In_ LPRASCREDENTIALS lpCredentials,_In_ BOOL fClearCredentials)
HRESULT None msftedit.CheckTextLimit([in] long cch,[out] long *pcch)
HRESULT None msdrm.DRMGetUnboundLicenseAttribute(_In_ DRMQUERYHANDLE hQueryRoot,_In_ PWSTR wszAttributeType,_In_ UINT iWhich,_Out_ DRMENCODINGTYPE *peEncoding,_Inout_ UINT *pcBuffer,_Out_ BYTE *pbBuffer)
HRESULT None msdrm.DRMCreateBoundLicense(_In_ DRMENVHANDLE hEnv,_In_ DRMBOUNDLICENSEPARAMS *pParams,_In_ PWSTR wszLicenseChain,_Out_ DRMHANDLE *phBoundLicense,_Out_ DRMHANDLE *phErrorLog)
HRESULT None msdrm.DRMGetUnboundLicenseObjectCount(_In_ DRMQUERYHANDLE hQueryRoot,_In_ PWSTR wszSubObjectType,_Out_ UINT *pcSubObjects)
HRESULT None None.GetDictionaryResource([out None None,retval] IXpsOMRemoteDictionaryResource **remoteDictionaryResource)
HRESULT None msftedit.GetNoLineNumber(long *pBool None)
BOOL WINAPI user32.GetWindowDisplayAffinity(_In_ HWND hWnd,_Out_ DWORD *dwAffinity)
HRESULT None msdrm.DRMSetUsagePolicy(_In_ DRMPUBHANDLE hIssuanceLicense,_In_ DRM_USAGEPOLICY_TYPE eUsagePolicyType,_In_ BOOL fDelete,_In_ BOOL fExclusion,_In_ PWSTR wszName,_In_ PWSTR wszMinVersion,_In_ PWSTR wszMaxVersion,_In_ PWSTR wszPublicKey,_In_ PWSTR wszDigestAlgorithm,_In_ BYTE *pbDigest,_In_ UINT cbDigest)
BOOL WINAPI None.ORASADFunc(_In_ HWND hwndOwner,_In_ LPSTR lpszEntry,_In_ DWORD dwFlags,_In_ LPDWORD lpdwRetCode)
HRESULT None None.GetStream([out None None,retval] IStream **stream)
HRESULT None msftedit.GetLineSpacing(float *pValue None)
HRESULT None None.SetQueueBasePriorityProp(LPCWSTR wszQueueFormatName None,SHORT iValue None)
HRESULT None msftedit.GetListType(long *pValue None)
HRESULT None msftedit.GetNotificationMode([out None None,retval] long *pValue)
HRESULT None msftedit.SetActiveSubrange([in] long cpAnchor,[in] long cpActive)
DWORD None rasapi32.RasSetEntryProperties(_In_ LPCTSTR lpszPhonebook,_In_ LPCTSTR lpszEntry,_In_ LPRASENTRY lpRasEntry,_In_ DWORD dwEntryInfoSize,_In_ LPBYTE lpbDeviceInfo,_In_ DWORD dwDeviceInfoSize)
DWORD None rasapi32.RasSetEntryPropertiesW(_In_ LPCTSTR lpszPhonebook,_In_ LPCTSTR lpszEntry,_In_ LPRASENTRY lpRasEntry,_In_ DWORD dwEntryInfoSize,_In_ LPBYTE lpbDeviceInfo,_In_ DWORD dwDeviceInfoSize)
DWORD None rasapi32.RasSetEntryPropertiesA(_In_ LPCTSTR lpszPhonebook,_In_ LPCTSTR lpszEntry,_In_ LPRASENTRY lpRasEntry,_In_ DWORD dwEntryInfoSize,_In_ LPBYTE lpbDeviceInfo,_In_ DWORD dwDeviceInfoSize)
HRESULT None msdrm.DRMGetSecurityProvider(_In_ UINT uFlags,_Inout_ UINT *puTypeLen,_Out_ PWSTR wszType,_Inout_ UINT *puPathLen,_Out_ PWSTR wszPath)
HRESULT None msdrm.DRMDeconstructCertificateChain(_In_ PWSTR wszChain,_In_ UINT iWhich,_Inout_ UINT *pcCert,_Out_ PWSTR wszCert)
HRESULT None msftedit.GetDisplays([out None None,retval] ITextDisplays **ppDisplays)
HRESULT None None.GetIsHyperlinkTarget([out None None,retval] BOOL *isHyperlinkTarget)
HRESULT None msdrm.DRMGetUnboundLicenseAttributeCount(_In_ DRMQUERYHANDLE hQueryRoot,_In_ PWSTR wszAttributeType,_Out_ UINT *pcAttributes)
HRESULT None msdrm.DRMGetSecurityProvider(_In_ UINT uFlags,_Inout_ UINT *puTypeLen,_Out_ PWSTR wszType,_Inout_ UINT *puPathLen,_Out_ PWSTR wszPath)
HRESULT None None.GetDictionary([out None None,retval] IXpsOMDictionary **resourceDictionary)
HRESULT None msdrm.DRMAddLicense(_In_ DRMHSESSION hLicenseStorage,_In_ UINT uFlags,_In_ PWSTR wszLicense)
BOOL None rasdlg.RasEntryDlg(_In_ LPTSTR lpszPhonebook,_In_ LPTSTR lpszEntry,_In_ LPRASENTRYDLG lpInfo)
BOOL None rasdlg.RasEntryDlgW(_In_ LPTSTR lpszPhonebook,_In_ LPTSTR lpszEntry,_In_ LPRASENTRYDLG lpInfo)
BOOL None rasdlg.RasEntryDlgA(_In_ LPTSTR lpszPhonebook,_In_ LPTSTR lpszEntry,_In_ LPRASENTRYDLG lpInfo)
HRESULT None None.Requesting40BitEncryption(LPCWSTR wszQueueFormatName None)
HRESULT None msftedit.GetBackColor(long *pValue None)
HRESULT None msdrm.DRMClosePubHandle(_In_ DRMPUBHANDLE hPub)
HRESULT None None.GetOwner([out None None,retval] IXpsOMPageReference **pageReference)
HRESULT None msdrm.DRMAddLicense(_In_ DRMHSESSION hLicenseStorage,_In_ UINT uFlags,_In_ PWSTR wszLicense)
BOOL WINAPI user32.DeregisterShellHookWindow(_In_ HWND hWnd)
HRESULT None msftedit.SetKerning([in] float Value)
HRESULT None msdrm.DRMGetRightExtendedInfo(_In_ DRMPUBHANDLE hRight,_In_ UINT uIndex,_Inout_ UINT *puExtendedInfoNameLength,_Out_ PWSTR wszExtendedInfoName,_Inout_ UINT *puExtendedInfoValueLength,_Out_ PWSTR wszExtendedInfoValue)
HRESULT None None.IsClosed([out None None,retval] BOOL *isClosed)
HRESULT None msftedit.GetRightIndent(float *pValue None)
BOOL WINAPI user32.GetAltTabInfo(_In_opt_ HWND hwnd,_In_ int iItem,_Inout_ PALTTABINFO pati,_Out_opt_ LPTSTR pszItemText,_In_ UINT cchItemText)
BOOL WINAPI user32.GetAltTabInfoW(_In_opt_ HWND hwnd,_In_ int iItem,_Inout_ PALTTABINFO pati,_Out_opt_ LPTSTR pszItemText,_In_ UINT cchItemText)
BOOL WINAPI user32.GetAltTabInfoA(_In_opt_ HWND hwnd,_In_ int iItem,_Inout_ PALTTABINFO pati,_Out_opt_ LPTSTR pszItemText,_In_ UINT cchItemText)
HRESULT None msftedit.GetVersion([out None None,retval] long *pValue)
HRESULT None msftedit.AttachMsgFilter([in] IUnknown *pFilter)
HRESULT None msftedit.GetListTab(float *pValue None)
HRESULT None msftedit.GetText2([in] long Flags,[out] BSTR *pbstr)
HRESULT None msftedit.SetSpaceAfter([in] float Value)
HRESULT None msdrm.DRMDuplicatePubHandle(_In_ DRMPUBHANDLE hPubIn,_Out_ DRMPUBHANDLE *phPubOut)
int None gdi32.GetTextFace(_In_ HDC hdc,_In_ int nCount,_Out_ LPTSTR lpFaceName)
int None gdi32.GetTextFaceW(_In_ HDC hdc,_In_ int nCount,_Out_ LPTSTR lpFaceName)
int None gdi32.GetTextFaceA(_In_ HDC hdc,_In_ int nCount,_Out_ LPTSTR lpFaceName)
HRESULT None msdrm.DRMGetBoundLicenseObject(_In_ DRMHANDLE hQueryRoot,_In_ PWSTR wszSubObjectType,_In_ UINT iWhich,_Out_ DRMHANDLE *phSubObject)
HRESULT None None.GetFontFaceIndex([out None None,retval] SHORT *fontFaceIndex)
HRESULT None msftedit.GetDuplicate(ITextPara **ppPara None)
HDC None gdi32.CreateCompatibleDC(_In_ HDC hdc)
HRESULT None None.GetGlyphMappings([in None None,out] UINT32 *glyphMappingCount,[in None None,out] XPS_GLYPH_MAPPING *glyphMappings)
HRESULT None msdrm.DRMRepair(void None None)
HRESULT None msdrm.DRMRepair(void None None)
HRESULT None msdrm.DRMDecrypt(_In_ DRMHANDLE hCryptoProvider,_In_ UINT iPosition,_In_ UINT cNumInBytes,_In_ BYTE *pbInData,_Inout_ UINT *pcNumOutBytes,_Out_ BYTE *pbOutData)
HRESULT None None.GetFontFaceIndex([out None None,retval] SHORT *fontFaceIndex)
HRESULT None None.GetGlyphMappingCount([out None None,retval] UINT32 *glyphMappingCount)
HRESULT None msdrm.DRMGetUsers(_In_ DRMPUBHANDLE hIssuanceLicense,_In_ UINT uIndex,_Out_ DRMPUBHANDLE *phUser)
HRESULT None msftedit.SetRightIndent([in] float Value)
HRESULT None msdrm.DRMDecrypt(_In_ DRMHANDLE hCryptoProvider,_In_ UINT iPosition,_In_ UINT cNumInBytes,_In_ BYTE *pbInData,_Inout_ UINT *pcNumOutBytes,_Out_ BYTE *pbOutData)
HRESULT None None.SetFillBrushLocal([in] IXpsOMBrush *fillBrush)
HRESULT None msftedit.SetKeepTogether([in] long Value)
HRESULT None msftedit.GetWindow([out None None,retval] __int64 *pHwnd)
HRESULT None msdrm.DRMDecrypt(_In_ DRMHANDLE hCryptoProvider,_In_ UINT iPosition,_In_ UINT cNumInBytes,_In_ BYTE *pbInData,_Inout_ UINT *pcNumOutBytes,_Out_ BYTE *pbOutData)
HRESULT None msftedit.IsEqual(ITextPara *pPara None,long *pB None)
HRESULT None None.Append([in] Object *object)
HRESULT None msdrm.DRMRepair(void None None)
HRESULT None msftedit.SetCaretType([in] long Value)
HRESULT None None.GetCreator([out None None,retval] LPWSTR *creator)
HRESULT None msdrm.DRMDecrypt(_In_ DRMHANDLE hCryptoProvider,_In_ UINT iPosition,_In_ UINT cNumInBytes,_In_ BYTE *pbInData,_Inout_ UINT *pcNumOutBytes,_Out_ BYTE *pbOutData)
HRESULT None msftedit.GetDuplicate(ITextPara **ppPara None)
HRESULT None msftedit.GetWindow([out None None,retval] __int64 *pHwnd)
HRESULT None msdrm.DRMGetUsers(_In_ DRMPUBHANDLE hIssuanceLicense,_In_ UINT uIndex,_Out_ DRMPUBHANDLE *phUser)
HRESULT None None.ShowContextualUI(POINT ptLocation None,HWND hWnd None)
HRESULT None msdrm.DRMGetUsers(_In_ DRMPUBHANDLE hIssuanceLicense,_In_ UINT uIndex,_Out_ DRMPUBHANDLE *phUser)
HRESULT None msdrm.DRMRepair(void None None)
HRESULT None msdrm.DRMDecrypt(_In_ DRMHANDLE hCryptoProvider,_In_ UINT iPosition,_In_ UINT cNumInBytes,_In_ BYTE *pbInData,_Inout_ UINT *pcNumOutBytes,_Out_ BYTE *pbOutData)
HRESULT None msdrm.DRMRepair(void None None)
HRESULT None msdrm.DRMSetIntervalTime(_In_ DRMPUBHANDLE hIssuanceLicense,_In_ UINT cDays)
HRESULT None msdrm.DRMGetUsers(_In_ DRMPUBHANDLE hIssuanceLicense,_In_ UINT uIndex,_Out_ DRMPUBHANDLE *phUser)
HRESULT None msftedit.InsertTable([in] long cCol,[in] long cRow,[in] long AutoFit)
HRESULT None msdrm.DRMDeconstructCertificateChain(_In_ PWSTR wszChain,_In_ UINT iWhich,_Inout_ UINT *pcCert,_Out_ PWSTR wszCert)
HRESULT None msdrm.DRMRepair(void None None)
HRESULT None msdrm.DRMDeconstructCertificateChain(_In_ PWSTR wszChain,_In_ UINT iWhich,_Inout_ UINT *pcCert,_Out_ PWSTR wszCert)
HRESULT None msdrm.DRMSetIntervalTime(_In_ DRMPUBHANDLE hIssuanceLicense,_In_ UINT cDays)
HRESULT None msdrm.DRMAcquireLicense(_In_ DRMHSESSION hSession,_In_ UINT uFlags,_In_ PWSTR wszGroupIdentityCredential,_In_ PWSTR wszRequestedRights,_In_ PWSTR wszCustomData,_In_ PWSTR wszURL,_In_ VOID *pvContext)
HRESULT None msdrm.DRMRepair(void None None)
HRESULT None msdrm.DRMDecrypt(_In_ DRMHANDLE hCryptoProvider,_In_ UINT iPosition,_In_ UINT cNumInBytes,_In_ BYTE *pbInData,_Inout_ UINT *pcNumOutBytes,_Out_ BYTE *pbOutData)
HRESULT None None.SetOpacityMaskBrushLookup([in] LPCWSTR key)
HRESULT None msdrm.DRMCheckSecurity(_In_ DRMENVHANDLE hEnv,_In_ UINT cLevel)
HRESULT None None.GetName([out None None,retval] LPWSTR *name)
HRESULT None msdrm.DRMRepair(void None None)
BOOL WINAPI user32.SetProcessDefaultLayout(_In_ DWORD dwDefaultLayout)
HRESULT None None.GetAccessibilityShortDescription([out None None,retval] LPWSTR *shortDescription)
HRESULT None None.InitRibbon(CMainFrame* pMainFrame None,IUnknown** ppFramework None)
HRESULT None None.GetFillBrushLocal([out None None,retval] IXpsOMBrush **fillBrush)
HRESULT None None.GetPage([out None None,retval] IXpsOMPage **page)
HRESULT None msftedit.GetLineSpacingRule(long *pValue None)
HRESULT None None.SetBidiLevel([in] UINT32 bidiLevel)
HRESULT None msdrm.DRMGetUsers(_In_ DRMPUBHANDLE hIssuanceLicense,_In_ UINT uIndex,_Out_ DRMPUBHANDLE *phUser)
HRESULT None msdrm.DRMDuplicateSession(_In_ DRMHSESSION hSessionIn,_Out_ DRMHSESSION *phSessionOut)
HRESULT None msdrm.DRMDecrypt(_In_ DRMHANDLE hCryptoProvider,_In_ UINT iPosition,_In_ UINT cNumInBytes,_In_ BYTE *pbInData,_Inout_ UINT *pcNumOutBytes,_Out_ BYTE *pbOutData)
DWORD CALLBACK None.RasRetrieveBuffer(HPORT hPort None,PBYTE pBuffer None,PDWORD pdwSize None)
HRESULT None msdrm.DRMGetUsers(_In_ DRMPUBHANDLE hIssuanceLicense,_In_ UINT uIndex,_Out_ DRMPUBHANDLE *phUser)
DWORD None wininet.InternetSetFilePointer(_In_ HINTERNET hFile,_In_ LONG lDistanceToMove,_Inout_ PLONG lpDistanceToMoveHigh,_In_ DWORD dwMoveMethod,_In_ DWORD_PTR dwContext)
HRESULT None None.GetGlyphIndices([in None None,out] UINT32 *indexCount,[out] XPS_GLYPH_INDEX *glyphIndices)
HRESULT None msdrm.DRMRepair(void None None)
HRESULT None msdrm.DRMDuplicateSession(_In_ DRMHSESSION hSessionIn,_Out_ DRMHSESSION *phSessionOut)
HRESULT None msdrm.DRMDecrypt(_In_ DRMHANDLE hCryptoProvider,_In_ UINT iPosition,_In_ UINT cNumInBytes,_In_ BYTE *pbInData,_Inout_ UINT *pcNumOutBytes,_Out_ BYTE *pbOutData)
HRESULT None msdrm.DRMDuplicateSession(_In_ DRMHSESSION hSessionIn,_Out_ DRMHSESSION *phSessionOut)
HRESULT None msdrm.DRMDeconstructCertificateChain(_In_ PWSTR wszChain,_In_ UINT iWhich,_Inout_ UINT *pcCert,_Out_ PWSTR wszCert)
HRESULT None msdrm.DRMDuplicateSession(_In_ DRMHSESSION hSessionIn,_Out_ DRMHSESSION *phSessionOut)
HRESULT None None.CreateColorProfileResource([in] IStream *acquiredStream,[in] IOpcPartUri *partUri,[out None None,retval] IXpsOMColorProfileResource **colorProfileResource)
HRESULT None None.SetFillBrushLookup([in] LPCWSTR key)
HRESULT None msftedit.GetInlineObject([out] long *pType,[out] long *pAlign,[out] long *pChar,[out] long *pChar1,[out] long *pChar2,[out] long *pCount,[out] long *pTeXStyle,[out] long *pcCol,[out] long *pLevel)
HRESULT None msdrm.DRMGetNameAndDescription(_In_ DRMPUBHANDLE hIssuanceLicense,_In_ UINT uIndex,_Out_ UINT *pulcid,_Inout_ UINT *puNameLength,_Out_ PWSTR wszName,_Inout_ UINT *puDescriptionLength,_Out_ PWSTR wszDescription)
HRESULT None msftedit.GetModWidthSpace([out None None,retval] long *pValue)
HRESULT None msdrm.DRMDuplicateSession(_In_ DRMHSESSION hSessionIn,_Out_ DRMHSESSION *phSessionOut)
HRESULT None msdrm.DRMGetRightInfo(_In_ DRMPUBHANDLE hRight,_Inout_ UINT *puRightNameLength,_Out_ PWSTR wszRightName,_Out_ SYSTEMTIME *pstFrom,_Out_ SYSTEMTIME *pstUntil)
HRESULT None msdrm.DRMSetIntervalTime(_In_ DRMPUBHANDLE hIssuanceLicense,_In_ UINT cDays)
GROUPID None wininet.CreateUrlCacheGroup(_In_ DWORD dwFlags,_Reserved_ LPVOID lpReserved)
HRESULT None msdrm.DRMDecrypt(_In_ DRMHANDLE hCryptoProvider,_In_ UINT iPosition,_In_ UINT cNumInBytes,_In_ BYTE *pbInData,_Inout_ UINT *pcNumOutBytes,_Out_ BYTE *pbOutData)
HRESULT None msdrm.DRMDeconstructCertificateChain(_In_ PWSTR wszChain,_In_ UINT iWhich,_Inout_ UINT *pcCert,_Out_ PWSTR wszCert)
HRESULT None None.SetFontResource([in] IXpsOMFontResource *fontResource)
HRESULT None None.GetProhibitedCaretStopCount([out None None,retval] UINT32 *prohibitedCaretStopCount)
DWORD WINAPI rasapi32.RasGetProjectionInfoEx(_In_ HRASCONN Hrasconn,_Inout_ PRAS_PROJECTION_INFO pRasProjection,_Inout_ LPDWORD lpdwSize)
HRESULT None None.GetOrigin([out None None,retval] XPS_POINT *origin)
HRESULT None msdrm.DRMDuplicateSession(_In_ DRMHSESSION hSessionIn,_Out_ DRMHSESSION *phSessionOut)
HRESULT None msftedit.GetCellShading([out None None,retval] long *pValue)
HRESULT None msftedit.DeleteSubrange([in] long cpFirst,[in] long cpLim)
HRESULT None msdrm.DRMDeconstructCertificateChain(_In_ PWSTR wszChain,_In_ UINT iWhich,_Inout_ UINT *pcCert,_Out_ PWSTR wszCert)
HWND WINAPI user32.ChildWindowFromPoint(_In_ HWND hWndParent,_In_ POINT Point)
HRESULT None msdrm.DRMGetIntervalTime(_In_ DRMPUBHANDLE hIssuanceLicense,_In_ UINT *pcDays)
HRESULT None None.GetOwner([out None None,retval] IXpsOMDocument **document)
HRESULT None None.SetPage([in] IXpsOMPage *page)
HRESULT None ole32.Stat([out] STATSTG *pstatstg,[in] DWORD grfStatFlag)
BOOL WINAPI ktmw32.RecoverTransactionManager(_In_ HANDLE TransactionManagerHandle)
HRESULT None msftedit.SetWeight([in] long Value)
HWND None user32.WindowFromDC(_In_ HDC hDC)
HRESULT None None.SetDeviceFontName([in] LPCWSTR deviceFontName)
BOOL WINAPI user32.DeleteMenu(_In_ HMENU hMenu,_In_ UINT uPosition,_In_ UINT uFlags)
HRESULT None None.SetContent([in] IStream *sourceStream,[in] XPS_IMAGE_TYPE imageType,[in] IOpcPartUri *partName)
HRESULT None msftedit.SetNoLineNumber([in] long Value)
HRESULT None usp10.ScriptStringXtoCP(_In_ SCRIPT_STRING_ANALYSIS ssa,_In_ int iX,_Out_ int *piCh,_Out_ int *piTrailing)
HRESULT None msdrm.DRMDeleteLicense(_In_ DRMHSESSION hSession,_In_ PWSTR wszLicenseId)
BOOL WINAPI None.RasCustomDialDlg(HINSTANCE hInstDll None,DWORD dwFlags None,LPWSTR lpszPhonebook None,LPWSTR lpszEntry None,LPWSTR lpszPhoneNumber None,LPRASDIALDLG lpInfo None,PVOID pvInfo None)
BOOL WINAPI None.RasCustomDialDlgW(HINSTANCE hInstDll None,DWORD dwFlags None,LPWSTR lpszPhonebook None,LPWSTR lpszEntry None,LPWSTR lpszPhoneNumber None,LPRASDIALDLG lpInfo None,PVOID pvInfo None)
BOOL WINAPI None.RasCustomDialDlgA(HINSTANCE hInstDll None,DWORD dwFlags None,LPWSTR lpszPhonebook None,LPWSTR lpszEntry None,LPWSTR lpszPhoneNumber None,LPRASDIALDLG lpInfo None,PVOID pvInfo None)
HRESULT None msdrm.DRMCloseSession(_In_ DRMHSESSION hSession)
HRESULT None None.GetFillBrush([out None None,retval] IXpsOMBrush **fillBrush)
HRESULT None msftedit.GetNotificationMode([out None None,retval] long *pValue)
DWORD WINAPI winhttp.WinHttpGetProxyResult(_In_ HINTERNET hResolver,_Out_ WINHTTP_PROXY_RESULT *pProxyResult)
HRESULT None msdrm.DRMSetApplicationSpecificData(_In_ DRMPUBHANDLE hIssuanceLicense,_In_ BOOL fDelete,_In_ PWSTR wszName,_In_ PWSTR wszValue)
HRESULT None None.GetGlyphIndices([in None None,out] UINT32 *indexCount,[in None None,out] XPS_GLYPH_INDEX *glyphIndices)
HRESULT None None.SetFillBrushLocal([in] IXpsOMBrush *fillBrush)
HRESULT None mshtml.OnViewChanged([in] UINT32 viewId,[in] UI_VIEWTYPE typeID,[in] IUnknown *view,[in] UI_VIEWVERB verb,[in] INT32 uReasonCode)
HRESULT None None.GetProhibitedCaretStops([in None None,out] UINT32 *prohibitedCaretStopCount,[out] UINT32 *prohibitedCaretStops)
HRESULT None msdrm.DRMClearAllRights(_In_ DRMPUBHANDLE hIssuanceLicense)
HRESULT None mshtml.GetUICommandProperty([in] UINT32 commandId,[in] REFPROPERTYKEY key,[out] PROPVARIANT *value)
HRESULT None msftedit.GetProperty([in] long Type,[out] long *pValue)
HRESULT None msdrm.DRMCloseQueryHandle(_In_ DRMQUERYHANDLE hQuery)
HRESULT None None.GetStrokeDashOffset([out None None,retval] FLOAT *strokeDashOffset)
HRESULT None None.GetSigningTime([out None None,retval] LPCWSTR *signingTime)
HRESULT None msdrm.DRMLoadLibrary(_In_ DRMENVHANDLE hEnv,_In_ DRMSPECTYPE eSpecification,_In_ PWSTR wszLibraryProvider,_In_ PWSTR wszCredentials,_Out_ DRMHANDLE *phLibrary)
HRESULT None None.GetStream([out None None,retval] IStream **readerStream)
HRESULT None msftedit.GetText2([in] long Flags,[out] BSTR *pbstr)
HRESULT None msftedit.SetModWidthSpace([in] long Value)
HRESULT None msdrm.DRMRegisterRevocationList(_In_ DRMENVHANDLE hEnv,_In_ PWSTR wszRevocationList)
HRESULT None msdrm.DRMParseUnboundLicense(_In_ PWSTR wszCertificate,_Out_ DRMQUERYHANDLE *phQueryRoot)
HRESULT None msdrm.DRMAttest(_In_ DRMHANDLE hEnablingPrincipal,_In_ PWSTR wszData,_In_ DRMATTESTTYPE eType,_Inout_ UINT *pcStrLen,_Out_ PWSTR wszAttestedBlob)
HRESULT None msdrm.DRMDeconstructCertificateChain(_In_ PWSTR wszChain,_In_ UINT iWhich,_Inout_ UINT *pcCert,_Out_ PWSTR wszCert)
HRESULT None None.SetModified([in] SYSTEMTIME *modified)
HRESULT None msftedit.GetSubrange([in] long iSubrange,[out] long *pcpFirst,[out] long *pcpLim)
HDWP WINAPI user32.BeginDeferWindowPos(_In_ int nNumWindows)
HRESULT None msdrm.DRMGetIssuanceLicenseTemplate(_In_ DRMPUBHANDLE hIssuanceLicense,_Inout_ UINT *puIssuanceLicenseTemplateLength,_Out_ PWSTR wszIssuanceLicenseTemplate)
HRESULT None msdrm.DRMConstructCertificateChain(_In_ UINT cCertificates,_In_ PWSTR *rgwszCertificates,_Inout_ UINT *pcChain,_Out_ PWSTR wszChain)
HRESULT None msftedit.SetCellVerticalText([in] long Value)
HRESULT None None.GetStrokeBrushLocal([out None None,retval] IXpsOMBrush **brush)
HRESULT None None.HasRestrictedFonts([out None None,retval] BOOL *restrictedFonts)
HWND WINAPI user32.SetCapture(_In_ HWND hWnd)
BOOL WINAPI user32.GetAltTabInfo(_In_opt_ HWND hwnd,_In_ int iItem,_Inout_ PALTTABINFO pati,_Out_opt_ LPTSTR pszItemText,_In_ UINT cchItemText)
BOOL WINAPI user32.GetAltTabInfoW(_In_opt_ HWND hwnd,_In_ int iItem,_Inout_ PALTTABINFO pati,_Out_opt_ LPTSTR pszItemText,_In_ UINT cchItemText)
BOOL WINAPI user32.GetAltTabInfoA(_In_opt_ HWND hwnd,_In_ int iItem,_Inout_ PALTTABINFO pati,_Out_opt_ LPTSTR pszItemText,_In_ UINT cchItemText)
HRESULT None None.GetSegmentStrokes([in None None,out] UINT32 *segmentCount,[in None None,out] BOOL *segmentStrokes)
HWND WINAPI user32.GetShellWindow(void None None)
DWORD None rasapi32.RasGetAutodialParam(_In_ DWORD dwKey,_Out_ LPVOID lpvValue,_Inout_ LPDWORD lpdwcbValue)
DWORD None rasapi32.RasGetAutodialParamW(_In_ DWORD dwKey,_Out_ LPVOID lpvValue,_Inout_ LPDWORD lpdwcbValue)
DWORD None rasapi32.RasGetAutodialParamA(_In_ DWORD dwKey,_Out_ LPVOID lpvValue,_Inout_ LPDWORD lpdwcbValue)
HRESULT None msftedit.SetCellCountCache([in] long Value)
HRESULT None None.GetXpsOMFactory([out None None,retval] IXpsOMObjectFactory **xpsFactory)
HRESULT None None.GetDeviceFontName([out None None,retval] LPWSTR *deviceFontName)
UINT WINAPI user32.RegisterWindowMessage(_In_ LPCTSTR lpString)
UINT WINAPI user32.RegisterWindowMessageW(_In_ LPCTSTR lpString)
UINT WINAPI user32.RegisterWindowMessageA(_In_ LPCTSTR lpString)
HRESULT None None.SetStrokeEndLineCap([in] XPS_LINE_CAP strokeEndLineCap)
HRESULT None msftedit.GetAlignment([out None None,retval] long *pValue)
HRESULT None msftedit.SetCellBorderWidths([in] long duLeft,[in] long duTop,[in] long duRight,[in] long duBottom)
HRESULT None msftedit.GetEffects2([out] long *pValue,[out] long *pMask)
HRESULT None msftedit.SetProperty([in] long Type,[in] long Value)
HRESULT None msftedit.GetProperty([in] long Type,[out] long *pValue)
HRESULT None msftedit.GetSpaceBefore(float *pValue None)
BOOL WINAPI ktmw32.RollbackComplete(_In_ HANDLE EnlistmentHandle,_In_ PLARGE_INTEGER TmVirtualClock)
BOOL None None.GetPrinter(_In_ HANDLE hPrinter,_In_ DWORD Level,_Out_ LPBYTE pPrinter,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded)
BOOL None None.GetPrinterW(_In_ HANDLE hPrinter,_In_ DWORD Level,_Out_ LPBYTE pPrinter,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded)
BOOL None None.GetPrinterA(_In_ HANDLE hPrinter,_In_ DWORD Level,_Out_ LPBYTE pPrinter,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded)
HRESULT None msftedit.GetSmallCaps(long *pValue None)
HRESULT None mshtml.ShowAtLocation(INT32 x None,INT32 y None)
HRESULT None msftedit.SetHeight([in] long Value)
HRESULT None msftedit.SetCellCount([in] long Value)
HRESULT None None.GetAt([in] UINT32 index,[out None None,retval] LPWSTR *name)
HRESULT None None.GetDeviceFontName([out None None,retval] LPWSTR *deviceFontName)
HRESULT None msftedit.RangeFromPoint2([in] long x,[in] long y,[in] long Type,[out None None,retval] ITextRange2 **ppRange)
DWORD None rasapi32.RasSetAutodialAddress(_In_ LPCTSTR lpszAddress,_In_ DWORD dwReserved,_In_ LPRASAUTODIALENTRY lpAutoDialEntries,_In_ DWORD dwcbAutoDialEntries,_In_ DWORD dwcAutoDialEntries)
DWORD None rasapi32.RasSetAutodialAddressW(_In_ LPCTSTR lpszAddress,_In_ DWORD dwReserved,_In_ LPRASAUTODIALENTRY lpAutoDialEntries,_In_ DWORD dwcbAutoDialEntries,_In_ DWORD dwcAutoDialEntries)
DWORD None rasapi32.RasSetAutodialAddressA(_In_ LPCTSTR lpszAddress,_In_ DWORD dwReserved,_In_ LPRASAUTODIALENTRY lpAutoDialEntries,_In_ DWORD dwcbAutoDialEntries,_In_ DWORD dwcAutoDialEntries)
HRESULT None None.SetName([in] LPCWSTR name)
HRESULT None None.CreatePackageFromFile([in] LPCWSTR filename,[in] BOOL reuseObjects,[out None None,retval] IXpsOMPackage **package)
HRESULT None msdrm.DRMGetOwnerLicense(_In_ DRMPUBHANDLE hIssuanceLicense,_Inout_ UINT *puLength,_Out_ PWSTR wszOwnerLicense)
HRESULT None msftedit.GetStyle(long *pValue None)
HRESULT None msdrm.DRMIsWindowProtected(_In_ HWND hwnd,_Out_ BOOL *pfProtected)
HRESULT None msdrm.DRMAcquireAdvisories(_In_ DRMHSESSION hLicenseStorage,_In_ PWSTR wszLicense,_In_opt_ PWSTR wszURL,_In_ VOID *pvContext)
HRESULT None msdrm.DRMCreateEnablingPrincipal(_In_ DRMENVHANDLE hEnv,_In_ DRMHANDLE hLibrary,_In_ PWSTR wszObject,_In_ DRMID *pidPrincipal,_In_ PWSTR wszCredentials,_Out_ DRMHANDLE *pHEnablingPrincipal)
HRESULT None None.GetGlyphMappingCount([out None None,retval] UINT32 *glyphMappingCount)
HRESULT None None.GetClipGeometryLookup([out None None,retval] LPWSTR *key)
HRESULT None None.GetVisuals([out None None,retval] IXpsOMVisualCollection **visuals)
HRESULT None None.GetGlyphsEditor([out None None,retval] IXpsOMGlyphsEditor **editor)
HRESULT None None.GetGlyphIndexCount([out None None,retval] UINT32 *indexCount)
HRESULT None None.GetUnicodeString([out None None,retval] LPWSTR *unicodeString)
LONG WINAPI advapi32.RegQueryValue(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_Out_opt_ LPTSTR lpValue,_Inout_opt_ PLONG lpcbValue)
LONG WINAPI advapi32.RegQueryValueW(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_Out_opt_ LPTSTR lpValue,_Inout_opt_ PLONG lpcbValue)
LONG WINAPI advapi32.RegQueryValueA(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_Out_opt_ LPTSTR lpValue,_Inout_opt_ PLONG lpcbValue)
HRESULT None msdrm.DRMDecrypt(_In_ DRMHANDLE hCryptoProvider,_In_ UINT iPosition,_In_ UINT cNumInBytes,_In_ BYTE *pbInData,_Inout_ UINT *pcNumOutBytes,_Out_ BYTE *pbOutData)
HRESULT None msdrm.DRMSetMetaData(_In_ DRMPUBHANDLE hIssuanceLicense,_In_ PWSTR wszContentId,_In_ PWSTR wszContentIdType,_In_opt_ PWSTR wszSKUId,_In_opt_ PWSTR wszSKUIdType,_In_opt_ PWSTR wszContentType,_In_opt_ PWSTR wszContentName)
HRESULT None None.Clone([out None None,retval] IXpsOMPath **path)
HRESULT None None.SetTransformLookup([in] LPCWSTR key)
HRESULT None None.GetIsSideways([out None None,retval] BOOL *isSideways)
HRESULT None msftedit.SetDuplicate([in] ITextPara *pPara)
HRESULT None msdrm.DRMGetUsagePolicy(_In_ DRMPUBHANDLE hIssuanceLicense,_In_ UINT uIndex,_Out_ DRM_USAGEPOLICY_TYPE *peUsagePolicyType,_Out_ BOOL *pfExclusion,_Inout_ UINT *puNameLength,_Out_ PWSTR wszName,_Inout_ UINT *puMinVersionLength,_Out_ PWSTR wszMinVersion,_Inout_ UINT *puMaxVersionLength,_Out_ PWSTR wszMaxVersion,_Inout_ UINT *puPublicKeyLength,_Out_ PWSTR wszPublicKey,_Inout_ UINT *puDigestAlgorithmLength,_Out_ PWSTR wszDigestAlgorithm,_Inout_ UINT *pcbDigest,_Out_ BYTE *pbDigest)
HRESULT None usp10.ScriptStringValidate(_In_ SCRIPT_STRING_ANALYSIS ssa)
LONG WINAPI tapi32.lineGetDevConfig(DWORD dwDeviceID None,LPVARSTRING lpDeviceConfig None,LPCSTR lpszDeviceClass None)
LONG WINAPI tapi32.lineGetDevConfigW(DWORD dwDeviceID None,LPVARSTRING lpDeviceConfig None,LPCSTR lpszDeviceClass None)
LONG WINAPI tapi32.lineGetDevConfigA(DWORD dwDeviceID None,LPVARSTRING lpDeviceConfig None,LPCSTR lpszDeviceClass None)
HRESULT None msftedit.GetPreferredFont([in] long cp,[in] long CharRep,[in] long Options,[in] long charRepCur,[in] long curFontSize,[out] BSTR *pbstr,[out] long *pPitchAndFamily,[out] long *pNewFontSize)
HRESULT None msdrm.DRMAcquireIssuanceLicenseTemplate(_In_ DRMHSESSION hClient,_In_ UINT uFlags,_In_ VOID *pvReserved,_In_ UINT cReserved,_In_opt_ PWSTR *pwszReserved,_In_ PWSTR wszURL,_In_ VOID *pvContext)
DWORD APIENTRY rasapi32.RasUpdateConnection(_In_ HRASCONN hrasconn,_In_ LPRASUPDATECONN lprasupdateconn)
HRESULT None msftedit.CanChange([retval] long *pbCanChange)
HRESULT None msftedit.GetEffectColor([in] long Index,[out] long *pValue)
HRESULT None msdrm.DRMGetMetaData(_In_ DRMPUBHANDLE hIssuanceLicense,_Inout_ UINT *puContentIdLength,_Out_opt_ PWSTR wszContentId,_Inout_ UINT *puContentIdTypeLength,_Out_opt_ PWSTR wszContentIdType,_Inout_opt_ UINT *puSKUIdLength,_Out_opt_ PWSTR wszSKUId,_Inout_opt_ UINT *puSKUIdTypeLength,_Out_opt_ PWSTR wszSKUIdType,_Inout_opt_ UINT *puContentTypeLength,_Out_opt_ PWSTR wszContentType,_Inout_opt_ UINT *puContentNameLength,_Out_opt_ PWSTR wszContentName)
HRESULT None msftedit.SetMathZone([in] long Value)
HRESULT None msdrm.DRMCreateLicenseStorageSession(_In_ DRMENVHANDLE hEnv,_In_ DRMHANDLE hDefaultLibrary,_In_ DRMHSESSION hClient,_In_ UINT uFlags,_In_ PWSTR wszIssuanceLicense,_Out_ DRMHSESSION *phLicenseStorage)
HRESULT None msdrm.DRMVerify(_In_ PWSTR wszData,_Inout_ UINT *pcStrLenAttestedData,_Out_ PWSTR wszAttestedData,_Out_ DRMATTESTTYPE *peType,_Inout_ UINT *pcPrincipalChain,_Out_ PWSTR wszPrincipalChain,_Inout_ UINT *pcManifestChain,_Out_ PWSTR wszManifestChain)
HRESULT None msftedit.GetKeepWithNext(long *pBool None)
BOOL None None.GetPrinterDriver(_In_ HANDLE hPrinter,_In_ LPTSTR pEnvironment,_In_ DWORD Level,_Out_ LPBYTE pDriverInfo,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded)
BOOL None None.GetPrinterDriverW(_In_ HANDLE hPrinter,_In_ LPTSTR pEnvironment,_In_ DWORD Level,_Out_ LPBYTE pDriverInfo,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded)
BOOL None None.GetPrinterDriverA(_In_ HANDLE hPrinter,_In_ LPTSTR pEnvironment,_In_ DWORD Level,_Out_ LPBYTE pDriverInfo,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded)
int None None.CommDlg_OpenSave_GetFilePath(hwnd None None,lparam None None,wparam None None)
BOOL WINAPI comdlg32.PageSetupDlg(_Inout_ LPPAGESETUPDLG lppsd)
BOOL WINAPI comdlg32.PageSetupDlgW(_Inout_ LPPAGESETUPDLG lppsd)
BOOL WINAPI comdlg32.PageSetupDlgA(_Inout_ LPPAGESETUPDLG lppsd)
HRESULT None msftedit.SetWeight([in] long Value)
HRESULT None None.VerifyingAcknowledgment(LPCWSTR wszQueueFormatName None)
HRESULT None msdrm.DRMRegisterProtectedWindow(_In_ DRMENVHANDLE hEnv,_In_ HWND hwnd)
HRESULT None ole32.CopyTo([in None None,unique] IStream *pstm,[in] ULARGE_INTEGER cb,[out] ULARGE_INTEGER *pcbRead,[out] ULARGE_INTEGER *pcbWritten)
HRESULT None ole32.CopyTo([in None None,unique] IStream *pstm,[in] ULARGE_INTEGER cb,[out] ULARGE_INTEGER *pcbRead,[out] ULARGE_INTEGER *pcbWritten)
HRESULT None msftedit.GetKeepTogether(long *pBool None)
HRESULT None msftedit.GetSmallCaps(long *pValue None)
HRESULT None mshtml.Initialize([in] HWND frameWnd,[in] IUIApplication *application)
HRESULT None msdrm.DRMDuplicateSession(_In_ DRMHSESSION hSessionIn,_Out_ DRMHSESSION *phSessionOut)
HRESULT None msftedit.SetPositionSubSuper([in] long Value)
HRESULT None msftedit.GetPageBreakBefore(long *pBool None)
HRESULT None None.SetDocumentSequence([in] IXpsOMDocumentSequence *documentSequence)
HRESULT None msftedit.Update([in] long Value)
HRESULT None None.GetStrokeDashCap([out None None,retval] XPS_DASH_CAP *strokeDashCap)
HRESULT None None.GetSnapsToPixels([out None None,retval] BOOL *snapsToPixels)
HRESULT None msftedit.SetListTab([in] float Value)
HRESULT None msdrm.DRMSetRevocationPoint(_In_ DRMPUBHANDLE hIssuanceLicense,_In_ BOOL fDelete,_In_ PWSTR wszId,_In_ PWSTR wszIdType,_In_ PWSTR wszURL,_In_ SYSTEMTIME *pstFrequency,_In_ PWSTR wszName,_In_ PWSTR wszPublicKey)
HRESULT None None.GetXpsType([out None None,retval] XPS_DOCUMENT_TYPE *documentType)
HRESULT None msftedit.SetKeepWithNext([in] long Value)
HRESULT None msftedit.GetOverlapping([out None None,retval] long *pValue)
HRESULT None None.CreateDocumentStructureResource([in] IStream *acquiredStream,[in] IOpcPartUri *partUri,[out None None,retval] IXpsOMDocumentStructureResource **documentStructureResource)
DWORD None rasapi32.RasSetCustomAuthData(_In_ LPCWSTR pszPhonebook,_In_ LPCWSTR pszEntry,_In_ BYTE *pbCustomAuthData,_In_ DWORD dwSizeofCustomAuthData)
DWORD None rasapi32.RasSetCustomAuthDataW(_In_ LPCWSTR pszPhonebook,_In_ LPCWSTR pszEntry,_In_ BYTE *pbCustomAuthData,_In_ DWORD dwSizeofCustomAuthData)
DWORD None rasapi32.RasSetCustomAuthDataA(_In_ LPCWSTR pszPhonebook,_In_ LPCWSTR pszEntry,_In_ BYTE *pbCustomAuthData,_In_ DWORD dwSizeofCustomAuthData)
HRESULT None None.GetPageReferences([out None None,retval] IXpsOMPageReferenceCollection **pageReferences)
HRESULT None None.SetDocumentStructureResource([in] IXpsOMDocumentStructureResource *documentStructureResource)
HRESULT None None.CreatePackageWriterOnStream([in] ISequentialStream *outputStream,[in] BOOL optimizeMarkupSize,[in] XPS_INTERLEAVING interleaving,[in] IOpcPartUri *documentSequencePartName,[in] IXpsOMCoreProperties *coreProperties,[in] IXpsOMImageResource *packageThumbnail,[in] IXpsOMPrintTicketResource *documentSequencePrintTicket,[in] IOpcPartUri *discardControlPartName,[out None None,retval] IXpsOMPackageWriter **packageWriter)
HRESULT None None.GetFillRule([out None None,retval] XPS_FILL_RULE *fillRule)
HRESULT None None.GetGeometryLocal([out None None,retval] IXpsOMGeometry **geometry)
HRESULT None None.GetSegmentStrokePattern([out None None,retval] XPS_SEGMENT_STROKE_PATTERN *segmentStrokePattern)
HRESULT None None.SetUnicodeString([in] LPCWSTR unicodeString)
HRESULT None msftedit.GetPositionSubSuper([out None None,retval] long *pValue)
HRESULT None None.GetFontResource([out None None,retval] IXpsOMFontResource **fontResource)
HRESULT None None.GetOwner([out None None,retval] IXpsOMPackage **package)
HRESULT None None.GetThumbnailResource([out None None,retval] IXpsOMImageResource **imageResource)
HRESULT None None.GetOwner([out None None,retval] IXpsOMPackage **package)
HRESULT None None.GetContentType([out None None,retval] LPWSTR *contentType)
int WINAPI user32.GetMouseMovePointsEx(_In_ UINT cbSize,_In_ LPMOUSEMOVEPOINT lppt,_Out_ LPMOUSEMOVEPOINT lpptBuf,_In_ int nBufPoints,_In_ DWORD resolution)
LONG WINAPI tapi32.lineMonitorTones(HCALL hCall None,LPLINEMONITORTONE const lpToneList,DWORD dwNumEntries None)
HRESULT None None.GetDocumentType([out None None,retval] XPS_DOCUMENT_TYPE *documentType)
HRESULT None msdrm.DRMSetRevocationPoint(_In_ DRMPUBHANDLE hIssuanceLicense,_In_ BOOL fDelete,_In_ PWSTR wszId,_In_ PWSTR wszIdType,_In_ PWSTR wszURL,_In_ SYSTEMTIME *pstFrequency,_In_ PWSTR wszName,_In_ PWSTR wszPublicKey)
HRESULT None None.SetLastModifiedBy([in] LPCWSTR lastModifiedBy)
HRESULT None None.SetVisualLookup([in] LPCWSTR lookup)
HRESULT None None.GetTransformLocal([out None None,retval] IXpsOMMatrixTransform **matrixTransform)
HRESULT None msdrm.DRMSetRevocationPoint(_In_ DRMPUBHANDLE hIssuanceLicense,_In_ BOOL fDelete,_In_ PWSTR wszId,_In_ PWSTR wszIdType,_In_ PWSTR wszURL,_In_ SYSTEMTIME *pstFrequency,_In_ PWSTR wszName,_In_ PWSTR wszPublicKey)
HRESULT None None.WriteToStream([in] ISequentialStream *stream,[in] BOOL optimizeMarkupSize)
BOOL WINAPI user32.GetWindowInfo(_In_ HWND hwnd,_Inout_ PWINDOWINFO pwi)
HRESULT None None.GetVisual([out None None,retval] IXpsOMVisual **visual)
HRESULT None msdrm.DRMCreateIssuanceLicense(_In_ SYSTEMTIME *pstTimeFrom,_In_ SYSTEMTIME *pstTimeUntil,_In_ PWSTR wszReferralInfoName,_In_ PWSTR wszReferralInfoURL,_In_opt_ DRMPUBHANDLE hOwner,_In_ PWSTR wszIssuanceLicense,_In_ DRMHANDLE hBoundLicense,_Out_ DRMPUBHANDLE *phIssuanceLicense)
HRESULT None mshtml.Initialize([in] HWND frameWnd,[in] IUIApplication *application)
HRESULT None None.GetPrintTicketResource([out None None,retval] IXpsOMPrintTicketResource **printTicketResource)
HRESULT None msftedit.GetEffects([out] long *pValue,[out] long *pMask)
HRESULT None msftedit.GetSpacing(float *pValue None)
HRESULT None None.GetDocumentStructureResource([out None None,retval] IXpsOMDocumentStructureResource **documentStructureResource)
HRESULT None None.CreatePackage([out None None,retval] IXpsOMPackage **package)
LONG WINAPI tapi32.lineDeallocateCall(HCALL hCall None)
HRESULT None msdrm.DRMClosePubHandle(_In_ DRMPUBHANDLE hPub)
HRESULT None None.SetStrokeMiterLimit([in] FLOAT strokeMiterLimit)
HRESULT None msftedit.GetAutospaceParens([out None None,retval] long *pValue)
HRESULT None None.CreateFontResource([in] IStream *acquiredStream,[in] XPS_FONT_EMBEDDING fontEmbedding,[in] IOpcPartUri *partUri,[in] BOOL isObfSourceStream,[out None None,retval] IXpsOMFontResource **fontResource)
HRESULT None msftedit.SetCellIndex([in] long Value)
DWORD None rasapi32.RasGetEntryProperties(_In_ LPCTSTR lpszPhonebook,_In_ LPCTSTR lpszEntry,_Inout_ LPRASENTRY lpRasEntry,_Inout_ LPDWORD lpdwEntryInfoSize,_Out_ LPBYTE lpbDeviceInfo,_Inout_ LPDWORD lpdwDeviceInfoSize)
DWORD None rasapi32.RasGetEntryPropertiesW(_In_ LPCTSTR lpszPhonebook,_In_ LPCTSTR lpszEntry,_Inout_ LPRASENTRY lpRasEntry,_Inout_ LPDWORD lpdwEntryInfoSize,_Out_ LPBYTE lpbDeviceInfo,_Inout_ LPDWORD lpdwDeviceInfoSize)
DWORD None rasapi32.RasGetEntryPropertiesA(_In_ LPCTSTR lpszPhonebook,_In_ LPCTSTR lpszEntry,_Inout_ LPRASENTRY lpRasEntry,_Inout_ LPDWORD lpdwEntryInfoSize,_Out_ LPBYTE lpbDeviceInfo,_Inout_ LPDWORD lpdwDeviceInfoSize)
HRESULT None msftedit.GetCompressionMode([out None None,retval] long *pValue)
HRESULT None None.GetCoreProperties([out None None,retval] IXpsOMCoreProperties **coreProperties)
HRESULT None None.GetProhibitedCaretStops([in None None,out] UINT32 *count,[out] UINT32 *prohibitedCaretStops)
HRESULT None msftedit.GetHyphenation(long *pBool None)
HRESULT None None.Append([in] IXpsOMRemoteDictionaryResource *object)
HWND WINAPI user32.SetParent(_In_ HWND hWndChild,_In_opt_ HWND hWndNewParent)
HRESULT None None.GetContentStatus([out None None,retval] LPWSTR *contentStatus)
HRESULT None None.GetDictionaryResource([out None None,retval] IXpsOMRemoteDictionaryResource **remoteDictionaryResource)
int None None.GET_Y_LPARAM(LPARAM lParam None)
HRESULT None msftedit.SetEffects([in] long Value,[in] long Mask)
LRESULT CALLBACK None.EditDlgProc(HWND hwndDlg None,UINT uMsg None,WPARAM wParam None,LPARAM lParam None)
HRESULT None None.GetProhibitedCaretStopCount([out None None,retval] UINT32 *prohibitedCaretStopCount)
HRESULT None msftedit.BuildUpMath([in] long Flags)
HRESULT None None.SetStrokeThickness([in] FLOAT strokeThickness)
void None None.CommDlg_OpenSave_HideControl(hwnd None None,wparam None None)
HRESULT None msftedit.SetKeepWithNext([in] long Value)
DWORD None rasapi32.RasGetEntryDialParams(_In_ LPCTSTR lpszPhonebook,_Inout_ LPRASDIALPARAMS lprasdialparams,_Out_ LPBOOL lpfPassword)
DWORD None rasapi32.RasGetEntryDialParamsW(_In_ LPCTSTR lpszPhonebook,_Inout_ LPRASDIALPARAMS lprasdialparams,_Out_ LPBOOL lpfPassword)
DWORD None rasapi32.RasGetEntryDialParamsA(_In_ LPCTSTR lpszPhonebook,_Inout_ LPRASDIALPARAMS lprasdialparams,_Out_ LPBOOL lpfPassword)
HRESULT None None.GetCategory([out None None,retval] LPWSTR *category)
HRESULT None None.CreatePath([out None None,retval] IXpsOMPath **path)
HRESULT None None.GetIsSideways([out None None,retval] BOOL *isSideways)
HRESULT None msftedit.GetEffectColor([in] long Index,[out] long *pValue)
BOOL WINAPI user32.ChangeWindowMessageFilterEx(_In_ HWND hWnd,_In_ UINT message,_In_ DWORD action,_Inout_opt_ PCHANGEFILTERSTRUCT pChangeFilterStruct)
HRESULT None None.RemoveAt([in] UINT32 index)
HRESULT None ole32.LockRegion([in] ULARGE_INTEGER libOffset,[in] ULARGE_INTEGER cb,[in] DWORD dwLockType)
HRESULT None msdrm.DRMSetIntervalTime(_In_ DRMPUBHANDLE hIssuanceLicense,_In_ UINT cDays)
HRESULT None None.CreatePartResources([out None None,retval] IXpsOMPartResources **partResources)
HRESULT None msftedit.GetCellVerticalText([out None None,retval] long *pValue)
HRESULT None None.GetRadiiSizes([out None None,retval] XPS_SIZE *radiiSizes)
HRESULT None None.GetCount([out None None,retval] UINT32 *count)
HRESULT None None.SetThumbnailResource([in] IXpsOMImageResource *imageResource)
HRESULT None None.CreatePrintTicketResource([in] IStream *acquiredStream,[in] IOpcPartUri *partUri,[out None None,retval] IXpsOMPrintTicketResource **printTicketResource)
HRESULT None msftedit.GetHyphenation(long *pBool None)
HRESULT None msftedit.SetCellIndex([in] long Value)
HRESULT None msftedit.GetKeepTogether(long *pBool None)
HRESULT None None.RemoveAt([in] UINT32 index)
HRESULT None None.GetStrokeStartLineCap([out None None,retval] XPS_LINE_CAP *strokeStartLineCap)
HRESULT None msftedit.AddTab([in] float tbPos,[in] long tbAlign,[in] long tbLeader)
HRESULT None None.GetCustomReferenceEnumerator([out None None,retval] IOpcSignatureReferenceEnumerator **customReferenceEnumerator)
HRESULT None None.SetKeywords([in] LPCWSTR keywords)
HRESULT None msftedit.GetAutoLigatures([out None None,retval] long *pValue)
LONG WINAPI advapi32.RegQueryValue(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_Out_opt_ LPTSTR lpValue,_Inout_opt_ PLONG lpcbValue)
LONG WINAPI advapi32.RegQueryValueW(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_Out_opt_ LPTSTR lpValue,_Inout_opt_ PLONG lpcbValue)
LONG WINAPI advapi32.RegQueryValueA(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_Out_opt_ LPTSTR lpValue,_Inout_opt_ PLONG lpcbValue)
HRESULT None None.GetStrokeMiterLimit([out None None,retval] FLOAT *strokeMiterLimit)
HRESULT None None.SetVersion([in] LPCWSTR version)
HRESULT None None.GetGeometry([out None None,retval] IXpsOMGeometry **geometry)
HRESULT None msftedit.GetPositionSubSuper([out None None,retval] long *pValue)
HRESULT None msdrm.DRMCloseEnvironmentHandle(_In_ DRMENVHANDLE hEnv)
BOOL WINAPI ktmw32.RollbackComplete(_In_ HANDLE EnlistmentHandle,_In_ PLARGE_INTEGER TmVirtualClock)
HRESULT None None.GetTransformLookup([out None None,retval] LPWSTR *key)
void None None.CommDlg_OpenSave_SetControlText(hwnd None None,wparam None None,lparam None None)
HRESULT None None.SetLanguage([in] LPCWSTR language)
HRESULT None None.GetSignatureBlockResources([out None None,retval] IXpsOMSignatureBlockResourceCollection **signatureBlockResources)
HRESULT None msdrm.DRMVerify(_In_ PWSTR wszData,_Inout_ UINT *pcStrLenAttestedData,_Out_ PWSTR wszAttestedData,_Out_ DRMATTESTTYPE *peType,_Inout_ UINT *pcPrincipalChain,_Out_ PWSTR wszPrincipalChain,_Inout_ UINT *pcManifestChain,_Out_ PWSTR wszManifestChain)
HRESULT None None.GetFontRenderingEmSize([out None None,retval] FLOAT *fontRenderingEmSize)
HRESULT None msftedit.SetCellBorderColors([in] long crLeft,[in] long crTop,[in] long crRight,[in] long crBottom)
HRESULT None None.WriteToStream([in] ISequentialStream *stream,[in] BOOL optimizeMarkupSize)
HRESULT None None.CreateGlyphs([in] IXpsOMFontResource *fontResource,[out None None,retval] IXpsOMGlyphs **glyphs)
HRESULT None None.GetCenter([out None None,retval] XPS_POINT *center)
HWND WINAPI user32.GetShellWindow(void None None)
HRESULT None msftedit.GetPropertyInfo([in] long Index,[out] long *pType,[out] long *pValue)
HRESULT WINAPI dwmapi.DwmIsCompositionEnabled(_Out_ BOOL *pfEnabled)
HRESULT None msdrm.DRMRepair(void None None)
HRESULT None ole32.UnlockRegion([in] ULARGE_INTEGER libOffset,[in] ULARGE_INTEGER cb,[in] DWORD dwLockType)
HRESULT None None.SetStrokeStartLineCap([in] XPS_LINE_CAP strokeStartLineCap)
LONG WINAPI tapi32.lineUnpark(HLINE hLine None,DWORD dwAddressID None,LPHCALL lphCall None,LPCSTR lpszDestAddress None)
LONG WINAPI tapi32.lineUnparkW(HLINE hLine None,DWORD dwAddressID None,LPHCALL lphCall None,LPCSTR lpszDestAddress None)
LONG WINAPI tapi32.lineUnparkA(HLINE hLine None,DWORD dwAddressID None,LPHCALL lphCall None,LPCSTR lpszDestAddress None)
HRESULT None msftedit.SetAutoLigatures([in] long Value)
HRESULT None msftedit.SetRTL([in] long Value)
HRESULT None None.GetIsHyperlinkTarget([out None None,retval] BOOL *isHyperlink)
HRESULT None msftedit.IsEqual2([in] ITextFont2 *pFont,[out] long *pB)
HRESULT None msftedit.SetUnderlinePositionMode([in] long Value)
HRESULT None None.GetGlyphIndexCount([out None None,retval] UINT32 *indexCount)
HRESULT None None.SetIdentifier([in] LPCWSTR identifier)
HRESULT None msftedit.GetDuplicate2([out None None,retval] ITextFont2 **ppFont)
HRESULT None None.SetStrokeLineJoin([in] XPS_LINE_JOIN strokeLineJoin)
LONG WINAPI tapi32.lineGetStatusMessages(HLINE hLine None,LPDWORD lpdwLineStates None,LPDWORD lpdwAddressStates None)
HRESULT None None.GetStrokeBrushLookup([out None None,retval] LPWSTR *lookup)
HRESULT None usp10.ScriptGetGlyphABCWidth(_In_ HDC hdc,_Inout_ SCRIPT_CACHE *psc,_In_ WORD wGlyph,_Out_ ABC *pABC)
HRESULT None None.GetStrokeBrushLookup([out None None,retval] LPWSTR *lookup)
LONG WINAPI tapi32.lineAccept(HCALL hCall None,LPCSTR lpsUserUserInfo None,DWORD dwSize None)
HRESULT None msftedit.GetHeight([out None None,retval] long *pValue)
LONG WINAPI tapi32.lineSetDevConfig(DWORD dwDeviceID None,LPVOID const lpDeviceConfig,DWORD dwSize None,LPCSTR lpszDeviceClass None)
LONG WINAPI tapi32.lineSetDevConfigW(DWORD dwDeviceID None,LPVOID const lpDeviceConfig,DWORD dwSize None,LPCSTR lpszDeviceClass None)
LONG WINAPI tapi32.lineSetDevConfigA(DWORD dwDeviceID None,LPVOID const lpDeviceConfig,DWORD dwSize None,LPCSTR lpszDeviceClass None)
DWORD None rasapi32.RasGetConnectStatus(_In_ HRASCONN hrasconn,_Inout_ LPRASCONNSTATUS lprasconnstatus)
DWORD None rasapi32.RasGetConnectStatusW(_In_ HRASCONN hrasconn,_Inout_ LPRASCONNSTATUS lprasconnstatus)
DWORD None rasapi32.RasGetConnectStatusA(_In_ HRASCONN hrasconn,_Inout_ LPRASCONNSTATUS lprasconnstatus)
HRESULT None None.GetFillBrush([out None None,retval] IXpsOMBrush **brush)
HRESULT None msftedit.Insert([in] long cRow)
HRESULT None msdrm.DRMGetInfo(_In_ DRMHANDLE handle,_In_ PWSTR wszAttribute,_Out_ DRMENCODINGTYPE *peEncoding,_Inout_ UINT *pcBuffer,_Out_ BYTE *pbBuffer)
HRESULT None msftedit.GetSubrange([in] long iSubrange,[out] long *pcpFirst,[out] long *pcpLim)
HRESULT None None.SetIsFilled([in] BOOL isFilled)
HRESULT None None.SetStrokeDashCap([in] XPS_DASH_CAP strokeDashCap)
HRESULT None None.SetGeometryLookup([in] LPCWSTR lookup)
HRESULT None None.SetStyleSimulations([in] XPS_STYLE_SIMULATION styleSimulations)
HRESULT None None.GetFillBrushLookup([out None None,retval] LPWSTR *lookup)
HRESULT None None.GetTitle([out None None,retval] LPWSTR *title)
HRESULT None msftedit.GetModWidthPairs([out None None,retval] long *pValue)
HRESULT None None.GetStrokeLineJoin([out None None,retval] XPS_LINE_JOIN *strokeLineJoin)
HRESULT None msftedit.SetAlignment([in] long Value)
HRESULT None None.InsertAt([in] UINT32 index,[in] IXpsOMColorProfileResource *object)
HRESULT None None.GetAccessibilityLongDescription([out None None,retval] LPWSTR *longDescription)
HRESULT None None.CreatePackageFromStream([in] IStream *stream,[in] BOOL reuseObjects,[out None None,retval] IXpsOMPackage **package)
HRESULT None mshtml.SetModes(INT32 iModes None)
HRESULT None None.SetHyperlinkNavigateUri([in] IUri *hyperlinkUri)
BOOL None rasdlg.RasDialDlg(_In_ LPTSTR lpszPhonebook,_In_ LPTSTR lpszEntry,_In_ LPTSTR lpszPhoneNumber,_In_ LPRASDIALDLG lpInfo)
BOOL None rasdlg.RasDialDlgW(_In_ LPTSTR lpszPhonebook,_In_ LPTSTR lpszEntry,_In_ LPTSTR lpszPhoneNumber,_In_ LPRASDIALDLG lpInfo)
BOOL None rasdlg.RasDialDlgA(_In_ LPTSTR lpszPhonebook,_In_ LPTSTR lpszEntry,_In_ LPTSTR lpszPhoneNumber,_In_ LPRASDIALDLG lpInfo)
HRESULT None msftedit.SetProperty([in] long Type,[in] long Value)
HRESULT None msftedit.SetDocumentPara([in] ITextPara2 *pPara)
HRESULT None None.GetDictionaryLocal([out None None,retval] IXpsOMDictionary **resourceDictionary)
HRESULT None msdrm.DRMGetApplicationSpecificData(_In_ DRMPUBHANDLE hIssuanceLicense,_In_ UINT uIndex,_Inout_ UINT *puNameLength,_Out_ PWSTR wszName,_Inout_ UINT *puValueLength,_Out_ PWSTR wszValue)
HRESULT None None.GetXpsType([out None None,retval] XPS_DOCUMENT_TYPE *documentType)
HRESULT None msftedit.IsEqual2([in] ITextFont2 *pFont,[out] long *pB)
HRESULT None None.SetCertificateEmbeddingOption([in] OPC_CERTIFICATE_EMBEDDING_OPTION embeddingOption)
DWORD None rasapi32.RasGetCountryInfo(_Inout_ LPRASCTRYINFO lpRasCtryInfo,_Inout_ LPDWORD lpdwSize)
DWORD None rasapi32.RasGetCountryInfoW(_Inout_ LPRASCTRYINFO lpRasCtryInfo,_Inout_ LPDWORD lpdwSize)
DWORD None rasapi32.RasGetCountryInfoA(_Inout_ LPRASCTRYINFO lpRasCtryInfo,_Inout_ LPDWORD lpdwSize)
HRESULT None None.GetPackageObjectReference([out None None,retval] IOpcSignatureReference **packageObjectReference)
HRESULT None None.GetAt([in] UINT32 index,[out None None,retval] IXpsOMRemoteDictionaryResource **object)
HRESULT None None.GetSubject([out None None,retval] LPWSTR *subject)
HWND WINAPI user32.ChildWindowFromPoint(_In_ HWND hWndParent,_In_ POINT Point)
HRESULT None msftedit.SetCompressionMode([in] long Value)
HRESULT None msftedit.Reset([in] long Value)
HRESULT None None.CreateGeometry([out None None,retval] IXpsOMGeometry **geometry)
HRESULT None msftedit.SetCellWidth([in] long Value)
HRESULT None msftedit.GetCellCountCache([out None None,retval] long *pValue)
HRESULT None msftedit.Apply([in] long cRow,[in] long Flags)
HRESULT None None.QueryInterface([in] REFIID riid,[out] void **ppvObject)
HRESULT None None.CreateDocumentSequence([in] IOpcPartUri *partUri,[out None None,retval] IXpsOMDocumentSequence **documentSequence)
BOOL WINAPI user32.ChangeWindowMessageFilter(_In_ UINT message,_In_ DWORD dwFlag)
HRESULT None None.GetLastPrinted([out None None,retval] SYSTEMTIME *lastPrinted)
HRESULT None None.WriteToFile1([in None None,string] LPCWSTR fileName,[in None None,unique] LPSECURITY_ATTRIBUTES securityAttributes,[in] DWORD flagsAndAttributes,[in] BOOL optimizeMarkupSize,[in] XPS_DOCUMENT_TYPE documentType)
HRESULT None None.GetTimeFormat([out None None,retval] OPC_SIGNATURE_TIME_FORMAT *timeFormat)
HRESULT None None.CreatePackageWriterOnFile([in] LPCWSTR fileName,[in None None,unique] LPSECURITY_ATTRIBUTES securityAttributes,[in] DWORD flagsAndAttributes,[in] BOOL optimizeMarkupSize,[in] XPS_INTERLEAVING interleaving,[in] IOpcPartUri *documentSequencePartName,[in] IXpsOMCoreProperties *coreProperties,[in] IXpsOMImageResource *packageThumbnail,[in] IXpsOMPrintTicketResource *documentSequencePrintTicket,[in] IOpcPartUri *discardControlPartName,[out None None,retval] IXpsOMPackageWriter **packageWriter)
HRESULT None None.GetLastModifiedBy([out None None,retval] LPWSTR *lastModifiedBy)
HRESULT None None.SetCoreProperties([in] IXpsOMCoreProperties *coreProperties)
HRESULT None msftedit.SetAutoLigatures([in] long Value)
LONG WINAPI tapi32.lineCompleteCall(HCALL hCall None,LPDWORD lpdwCompletionID None,DWORD dwCompletionMode None,DWORD dwMessageID None)
HRESULT None None.GetDiscardControlPartName([out None None,retval] IOpcPartUri **discardControlPartUri)
HRESULT None msftedit.GetCellAlignment([out None None,retval] long *pValue)
HRESULT None None.GetSignatureRelationshipReferenceEnumerator([out None None,retval] IOpcSignatureRelationshipReferenceEnumerator **relationshipReferenceEnumerator)
HRESULT None None.Clone([out None None,retval] IXpsOMCoreProperties **coreProperties)
HRESULT None msftedit.SetSpaceExtension([in] float Value)
HRESULT None None.GetEnumerator([out None None,retval] IOpcSignatureCustomObjectEnumerator **customObjectEnumerator)
HRESULT None usp10.ScriptStringXtoCP(_In_ SCRIPT_STRING_ANALYSIS ssa,_In_ int iX,_Out_ int *piCh,_Out_ int *piTrailing)
LONG WINAPI tapi32.lineSetCallTreatment(HCALL hCall None,DWORD dwTreatment None)
HRESULT None None.Clone([out None None,retval] IXpsOMGeometry **geometry)
HRESULT None None.SetCreator([in] LPCWSTR creator)
HRESULT None mshtml.SetUICommandProperty([in] UINT32 commandId,[in] REFPROPERTYKEY key,[in] PROPVARIANT value)
HRESULT None None.SetName([in] LPCWSTR name)
HRESULT None msftedit.SetCharRep([in] long Value)
HRESULT None None.SetGeometryLocal([in] IXpsOMGeometry *geometry)
HRESULT None None.CreatePartUriCollection([out None None,retval] IXpsOMPartUriCollection **partUriCollection)
HRESULT None None.CreateRelationship([in] LPCWSTR relationshipIdentifier,[in] LPCWSTR relationshipType,[in] IUri *targetUri,[in] OPC_URI_TARGET_MODE targetMode,[out None None,retval] IOpcRelationship **relationship)
HRESULT None None.CreateCanvas([out None None,retval] IXpsOMCanvas **canvas)
LONG WINAPI tapi32.lineGetCallInfo(HCALL hCall None,LPLINECALLINFO lpCallInfo None)
LONG WINAPI tapi32.lineGetCallInfoW(HCALL hCall None,LPLINECALLINFO lpCallInfo None)
LONG WINAPI tapi32.lineGetCallInfoA(HCALL hCall None,LPLINECALLINFO lpCallInfo None)
LONG WINAPI tapi32.lineGenerateDigits(HCALL hCall None,DWORD dwDigitMode None,LPCSTR lpszDigits None,DWORD dwDuration None)
LONG WINAPI tapi32.lineGenerateDigitsW(HCALL hCall None,DWORD dwDigitMode None,LPCSTR lpszDigits None,DWORD dwDuration None)
LONG WINAPI tapi32.lineGenerateDigitsA(HCALL hCall None,DWORD dwDigitMode None,LPCSTR lpszDigits None,DWORD dwDuration None)
HRESULT None msftedit.SetScaling([in] long Value)
HRESULT None None.SetStrokeBrushLocal([in] IXpsOMBrush *brush)
HRESULT None msftedit.GetAutospaceNumeric([out None None,retval] long *pValue)
LONG WINAPI tapi32.lineBlindTransfer(HCALL hCall None,LPCSTR lpszDestAddress None,DWORD dwCountryCode None)
LONG WINAPI tapi32.lineBlindTransferW(HCALL hCall None,LPCSTR lpszDestAddress None,DWORD dwCountryCode None)
LONG WINAPI tapi32.lineBlindTransferA(HCALL hCall None,LPCSTR lpszDestAddress None,DWORD dwCountryCode None)
HRESULT None None.GetOpacityMaskBrush([out None None,retval] IXpsOMBrush **opacityMaskBrush)
LONG WINAPI tapi32.lineSetAppPriority(LPCSTR lpszAppFilename None,DWORD dwMediaMode None,LPLINEEXTENSIONID lpExtensionID None,DWORD dwRequestMode None,LPCSTR lpszExtensionName None,DWORD dwPriority None)
LONG WINAPI tapi32.lineSetAppPriorityW(LPCSTR lpszAppFilename None,DWORD dwMediaMode None,LPLINEEXTENSIONID lpExtensionID None,DWORD dwRequestMode None,LPCSTR lpszExtensionName None,DWORD dwPriority None)
LONG WINAPI tapi32.lineSetAppPriorityA(LPCSTR lpszAppFilename None,DWORD dwMediaMode None,LPLINEEXTENSIONID lpExtensionID None,DWORD dwRequestMode None,LPCSTR lpszExtensionName None,DWORD dwPriority None)
HRESULT None msftedit.GetCellCount([out None None,retval] long *pValue)
HRESULT None None.GetOwner([out None None,retval] IXpsOMPageReference **owner)
LONG WINAPI tapi32.lineDevSpecificFeature(HLINE hLine None,DWORD dwFeature None,LPVOID lpParams None,DWORD dwSize None)
HRESULT None None.GetStrokeBrush([out None None,retval] IXpsOMBrush **brush)
LONG WINAPI tapi32.lineConfigProvider(HWND hwndOwner None,DWORD dwPermanentProviderID None)
HRESULT None explorerframe.SetProgressState([in] HWND hwnd,[in] TBPFLAG tbpFlags)
HRESULT None msftedit.GetUnderlinePositionMode([out None None,retval] long *pValue)
BOOL WINAPI comdlg32.GetSaveFileName(_Inout_ LPOPENFILENAME lpofn)
BOOL WINAPI comdlg32.GetSaveFileNameW(_Inout_ LPOPENFILENAME lpofn)
BOOL WINAPI comdlg32.GetSaveFileNameA(_Inout_ LPOPENFILENAME lpofn)
HRESULT None msftedit.GetScaling([out None None,retval] long *pValue)
HRESULT None None.SetThumbnailResource([in] IXpsOMImageResource *imageResource)
LONG WINAPI tapi32.lineOpen(HLINEAPP hLineApp None,DWORD dwDeviceID None,LPHLINE lphLine None,DWORD dwAPIVersion None,DWORD dwExtVersion None,DWORD_PTR dwCallbackInstance None,DWORD dwPrivileges None,DWORD dwMediaModes None,LPLINECALLPARAMS const lpCallParams)
LONG WINAPI tapi32.lineOpenW(HLINEAPP hLineApp None,DWORD dwDeviceID None,LPHLINE lphLine None,DWORD dwAPIVersion None,DWORD dwExtVersion None,DWORD_PTR dwCallbackInstance None,DWORD dwPrivileges None,DWORD dwMediaModes None,LPLINECALLPARAMS const lpCallParams)
LONG WINAPI tapi32.lineOpenA(HLINEAPP hLineApp None,DWORD dwDeviceID None,LPHLINE lphLine None,DWORD dwAPIVersion None,DWORD dwExtVersion None,DWORD_PTR dwCallbackInstance None,DWORD dwPrivileges None,DWORD dwMediaModes None,LPLINECALLPARAMS const lpCallParams)
HRESULT None msftedit.SetModWidthPairs([in] long Value)
HRESULT None None.SetCategory([in] LPCWSTR category)
HRESULT None None.SetFillBrushLookup([in] LPCWSTR lookup)
HRESULT None None.RemoveAt([in] UINT32 index)
HRESULT None msftedit.SetIndent([in] long Value)
HRESULT None msftedit.GetCount([out None None,retval] long *pCount)
HRESULT None None.SetSignatureMethod([in] LPCWSTR signatureMethod)
HRESULT None msdrm.DRMAcquireAdvisories(_In_ DRMHSESSION hLicenseStorage,_In_ PWSTR wszLicense,_In_opt_ PWSTR wszURL,_In_ VOID *pvContext)
HRESULT None None.GetIsFilled([out None None,retval] BOOL *isFilled)
HRESULT None None.GetOpacity([out None None,retval] FLOAT *opacity)
LONG WINAPI tapi32.lineSendUserUserInfo(HCALL hCall None,LPCSTR lpsUserUserInfo None,DWORD dwSize None)
HRESULT None None.SetContentStatus([in] LPCWSTR contentStatus)
LONG WINAPI tapi32.lineSetStatusMessages(HLINE hLine None,DWORD dwLineStates None,DWORD dwAddressStates None)
HRESULT None ole32.Clone([out] IStream **ppstm)
HRESULT None msdrm.DRMAcquireIssuanceLicenseTemplate(_In_ DRMHSESSION hClient,_In_ UINT uFlags,_In_ VOID *pvReserved,_In_ UINT cReserved,_In_opt_ PWSTR *pwszReserved,_In_ PWSTR wszURL,_In_ VOID *pvContext)
HRESULT WINAPI dwmapi.DwmSetIconicLivePreviewBitmap(HWND hwnd None,HBITMAP hbmp None,_In_opt_ POINT *pptClient,DWORD dwSITFlags None)
LONG WINAPI tapi32.lineRegisterRequestRecipient(HLINEAPP hLineApp None,DWORD dwRegistrationInstance None,DWORD dwRequestMode None,DWORD bEnable None)
LONG WINAPI tapi32.lineSetupTransfer(HCALL hCall None,LPHCALL lphConsultCall None,LPLINECALLPARAMS const lpCallParams)
LONG WINAPI tapi32.lineSetupTransferW(HCALL hCall None,LPHCALL lphConsultCall None,LPLINECALLPARAMS const lpCallParams)
LONG WINAPI tapi32.lineSetupTransferA(HCALL hCall None,LPHCALL lphConsultCall None,LPLINECALLPARAMS const lpCallParams)
HRESULT None msftedit.GetCellMargin([out None None,retval] long *pValue)
HRESULT None None.SetDefaultDigestMethod([in] LPCWSTR digestMethod)
HRESULT None msftedit.SetDuplicate2([in] ITextFont2 *pFont)
HRESULT WINAPI dwmapi.DwmAttachMilContent(_In_ HWND hwnd)
HRESULT None None.SetSignaturePartName([in] IOpcPartUri *signaturePartName)
LONG WINAPI tapi32.lineMonitorDigits(HCALL hCall None,DWORD dwDigitModes None)
HRESULT None None.CreateStoryFragmentsResource([in] IStream *acquiredStream,[in] IOpcPartUri *partUri,[out None None,retval] IXpsOMStoryFragmentsResource **storyFragmentsResource)
BOOL None None.GetPrinter(_In_ HANDLE hPrinter,_In_ DWORD Level,_Out_ LPBYTE pPrinter,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded)
BOOL None None.GetPrinterW(_In_ HANDLE hPrinter,_In_ DWORD Level,_Out_ LPBYTE pPrinter,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded)
BOOL None None.GetPrinterA(_In_ HANDLE hPrinter,_In_ DWORD Level,_Out_ LPBYTE pPrinter,_In_ DWORD cbBuf,_Out_ LPDWORD pcbNeeded)
HRESULT None None.GetOpacityMaskBrushLookup([out None None,retval] LPWSTR *key)
LONG WINAPI tapi32.lineGetCallStatus(HCALL hCall None,LPLINECALLSTATUS lpCallStatus None)
LONG WINAPI tapi32.linePrepareAddToConference(HCALL hConfCall None,LPHCALL lphConsultCall None,LPLINECALLPARAMS const lpCallParams)
LONG WINAPI tapi32.linePrepareAddToConferenceW(HCALL hConfCall None,LPHCALL lphConsultCall None,LPLINECALLPARAMS const lpCallParams)
LONG WINAPI tapi32.linePrepareAddToConferenceA(HCALL hConfCall None,LPHCALL lphConsultCall None,LPLINECALLPARAMS const lpCallParams)
HRESULT None None.SetRevision([in] LPCWSTR revision)
HRESULT None msftedit.SetCellMargin([in] long Value)
HRESULT None None.SetCertificateEmbeddingOption([in] OPC_CERTIFICATE_EMBEDDING_OPTION embeddingOption)
LONG WINAPI tapi32.lineMonitorMedia(HCALL hCall None,DWORD dwMediaModes None)
HRESULT None msftedit.GetLinkType([out None None,retval] long *pValue)
HRESULT None msftedit.SetOverlapping([in] long Value)
HRESULT None msftedit.GetCookie([out None None,retval] long *pValue)
HRESULT None None.GetStream([out None None,retval] IStream **stream)
HRESULT None None.SetDescription([in] LPCWSTR description)
HRESULT None msftedit.SetCellWidth([in] long Value)
HRESULT None None.SetAccessibilityShortDescription([in] LPCWSTR shortDescription)
LONG WINAPI tapi32.lineGatherDigits(HCALL hCall None,DWORD dwDigitModes None,LPSTR lpsDigits None,DWORD dwNumDigits None,LPCSTR lpszTerminationDigits None,DWORD dwFirstDigitTimeout None,DWORD dwInterDigitTimeout None)
LONG WINAPI tapi32.lineGatherDigitsW(HCALL hCall None,DWORD dwDigitModes None,LPSTR lpsDigits None,DWORD dwNumDigits None,LPCSTR lpszTerminationDigits None,DWORD dwFirstDigitTimeout None,DWORD dwInterDigitTimeout None)
LONG WINAPI tapi32.lineGatherDigitsA(HCALL hCall None,DWORD dwDigitModes None,LPSTR lpsDigits None,DWORD dwNumDigits None,LPCSTR lpszTerminationDigits None,DWORD dwFirstDigitTimeout None,DWORD dwInterDigitTimeout None)
HRESULT None None.GetVersion([out None None,retval] LPWSTR *version)
HRESULT None msftedit.GetRTL([out None None,retval] long *pValue)
HRESULT None msftedit.GetAutospaceParens([out None None,retval] long *pValue)
HRESULT None None.CreateGeometry([out None None,retval] IXpsOMGeometry **geometry)
HRESULT None None.GetFillBrushLocal([out None None,retval] IXpsOMBrush **brush)
LONG WINAPI tapi32.lineGetLineDevStatus(HLINE hLine None,LPLINEDEVSTATUS lpLineDevStatus None)
LONG WINAPI tapi32.lineGetLineDevStatusW(HLINE hLine None,LPLINEDEVSTATUS lpLineDevStatus None)
LONG WINAPI tapi32.lineGetLineDevStatusA(HLINE hLine None,LPLINEDEVSTATUS lpLineDevStatus None)
LONG WINAPI tapi32.lineAccept(HCALL hCall None,LPCSTR lpsUserUserInfo None,DWORD dwSize None)
HRESULT None msftedit.SetCellColorBack([in] long Value)
HRESULT None None.GetStrokeBrushLocal([out None None,retval] IXpsOMBrush **brush)
HRESULT None usp10.ScriptGetFontLanguageTags(_In_opt_ HDC hdc,_Inout_ SCRIPT_CACHE *psc,_In_opt_ SCRIPT_ANALYSIS *psa,_In_ OPENTYPE_TAG tagScript,_In_ int cMaxTags,_Out_ OPENTYPE_TAG *pLangSysTags,_Out_ int *pcTags)
HRESULT None msftedit.SetDoubleStrike([in] long Value)
DWORD None rasapi32.RasGetConnectStatus(_In_ HRASCONN hrasconn,_Inout_ LPRASCONNSTATUS lprasconnstatus)
DWORD None rasapi32.RasGetConnectStatusW(_In_ HRASCONN hrasconn,_Inout_ LPRASCONNSTATUS lprasconnstatus)
DWORD None rasapi32.RasGetConnectStatusA(_In_ HRASCONN hrasconn,_Inout_ LPRASCONNSTATUS lprasconnstatus)
LONG WINAPI tapi32.lineGetAddressCaps(HLINEAPP hLineApp None,DWORD dwDeviceID None,DWORD dwAddressID None,DWORD dwAPIVersion None,DWORD dwExtVersion None,LPLINEADDRESSCAPS lpAddressCaps None)
LONG WINAPI tapi32.lineGetAddressCapsW(HLINEAPP hLineApp None,DWORD dwDeviceID None,DWORD dwAddressID None,DWORD dwAPIVersion None,DWORD dwExtVersion None,LPLINEADDRESSCAPS lpAddressCaps None)
LONG WINAPI tapi32.lineGetAddressCapsA(HLINEAPP hLineApp None,DWORD dwDeviceID None,DWORD dwAddressID None,DWORD dwAPIVersion None,DWORD dwExtVersion None,LPLINEADDRESSCAPS lpAddressCaps None)
DWMAPI None dwmapi.DwmTransitionOwnedWindow(HWND hwnd None,DWMTRANSITION_OWNEDWINDOW_TARGET target None)
HRESULT None msftedit.GetKeepWithNext([out None None,retval] long *pValue)
LONG WINAPI tapi32.lineGenerateTone(HCALL hCall None,DWORD dwToneMode None,DWORD dwDuration None,DWORD dwNumTones None,LPLINEGENERATETONE const lpTones)
HRESULT None msftedit.GetCellIndex([out None None,retval] long *pValue)
HRESULT None None.SetStrokeDashOffset([in] FLOAT strokeDashOffset)
HRESULT None None.GetSignatureMethod([out None None,retval] LPCWSTR *signatureMethod)
LONG WINAPI tapi32.lineClose(HLINE hLine None)
HRESULT None msftedit.GetProperty([in] long Type,[out] long *pValue)
HRESULT None None.GetTimeFormat([out None None,retval] OPC_SIGNATURE_TIME_FORMAT *timeFormat)
HRESULT None None.RemoveAt([in] UINT32 index)
HRESULT None ole32.Read([out] void *pv,[in] ULONG cb,[out] ULONG *pcbRead)
HRESULT None mshtml.LoadUI([in] HINSTANCE instance,[in] LPCWSTR resourceName)
HRESULT None None.CreateCoreProperties([in] IOpcPartUri *partUri,[out None None,retval] IXpsOMCoreProperties **coreProperties)
HRESULT None None.GetSignatureId([out None None,retval] LPCWSTR *signatureId)
HRESULT None None.SetAt([in] UINT32 index,[in] IXpsOMRemoteDictionaryResource *object)
LONG WINAPI tapi32.lineShutdown(HLINEAPP hLineApp None)
HRESULT None None.GetGeometryLookup([out None None,retval] LPWSTR *lookup)
LONG WINAPI tapi32.lineDrop(HCALL hCall None,LPCSTR lpsUserUserInfo None,DWORD dwSize None)
LONG WINAPI tapi32.lineInitializeEx(LPHLINEAPP lphLineApp None,HINSTANCE hInstance None,LINECALLBACK lpfnCallback None,LPCSTR lpszFriendlyAppName None,LPDWORD lpdwNumDevs None,LPDWORD lpdwAPIVersion None,LPLINEINITIALIZEEXPARAMS lpLineInitializeExParams None)
LONG WINAPI tapi32.lineInitializeExW(LPHLINEAPP lphLineApp None,HINSTANCE hInstance None,LINECALLBACK lpfnCallback None,LPCSTR lpszFriendlyAppName None,LPDWORD lpdwNumDevs None,LPDWORD lpdwAPIVersion None,LPLINEINITIALIZEEXPARAMS lpLineInitializeExParams None)
LONG WINAPI tapi32.lineInitializeExA(LPHLINEAPP lphLineApp None,HINSTANCE hInstance None,LINECALLBACK lpfnCallback None,LPCSTR lpszFriendlyAppName None,LPDWORD lpdwNumDevs None,LPDWORD lpdwAPIVersion None,LPLINEINITIALIZEEXPARAMS lpLineInitializeExParams None)
HRESULT None None.SetSubject([in] LPCWSTR subject)
HRESULT None None.CreateDictionary([out None None,retval] IXpsOMDictionary **dictionary)
HRESULT None msftedit.SetCellColorFore([in] long Value)
HRESULT None None.GetSignatureXml([out] UINT8 **signatureXml,[out] UINT32 *count)
HRESULT None msftedit.GetDoubleStrike([out None None,retval] long *pValue)
LONG WINAPI tapi32.lineSetLineDevStatus(HLINE hLine None,DWORD dwStatusToChange None,DWORD fStatus None)
HRESULT None None.GetAt([in] UINT32 index,[out None None,retval] IXpsOMSignatureBlockResource **signatureBlockResource)
HRESULT None msftedit.SetAutospaceAlpha([in] long Value)
HRESULT None None.SetAccessibilityLongDescription([in] LPCWSTR longDescription)
LONG WINAPI tapi32.lineSetupConference(HCALL hCall None,HLINE hLine None,LPHCALL lphConfCall None,LPHCALL lphConsultCall None,DWORD dwNumParties None,LPLINECALLPARAMS const lpCallParams)
LONG WINAPI tapi32.lineSetupConferenceW(HCALL hCall None,HLINE hLine None,LPHCALL lphConfCall None,LPHCALL lphConsultCall None,DWORD dwNumParties None,LPLINECALLPARAMS const lpCallParams)
LONG WINAPI tapi32.lineSetupConferenceA(HCALL hCall None,HLINE hLine None,LPHCALL lphConfCall None,LPHCALL lphConsultCall None,DWORD dwNumParties None,LPLINECALLPARAMS const lpCallParams)
HRESULT None msftedit.SetKeepWithNext([in] long Value)
HRESULT None msftedit.BuildUpMath([in] long Flags)
HRESULT None None.SetFillBrushLocal([in] IXpsOMBrush *brush)
HRESULT None None.GetStrokeEndLineCap([out None None,retval] XPS_LINE_CAP *strokeEndLineCap)
HRESULT None msftedit.GetCellWidth([out None None,retval] long *pValue)
HRESULT None msftedit.SetEffects2([in] long Value,[in] long Mask)
HRESULT None None.GetCertificateEnumerator([out None None,retval] IOpcCertificateEnumerator **certificateEnumerator)
HRESULT None None.Create([in] UINT8 *xmlMarkup,[in] UINT32 count,[out None None,retval] IOpcSignatureCustomObject **customObject)
HRESULT None msdrm.DRMGetApplicationSpecificData(_In_ DRMPUBHANDLE hIssuanceLicense,_In_ UINT uIndex,_Inout_ UINT *puNameLength,_Out_ PWSTR wszName,_Inout_ UINT *puValueLength,_Out_ PWSTR wszValue)
HRESULT None msftedit.SetAutospaceNumeric([in] long Value)
LONG WINAPI tapi32.lineSetTerminal(HLINE hLine None,DWORD dwAddressID None,HCALL hCall None,DWORD dwSelect None,DWORD dwTerminalModes None,DWORD dwTerminalID None,DWORD bEnable None)
LONG WINAPI tapi32.lineInitialize(LPHLINEAPP lphLineApp None,HINSTANCE hInstance None,LINECALLBACK lpfnCallback None,LPCSTR lpszAppName None,LPDWORD lpdwNumDevs None)
LONG WINAPI tapi32.lineGetAppPriority(LPCSTR lpszAppFilename None,DWORD dwMediaMode None,LPLINEEXTENSIONID lpExtensionID None,DWORD dwRequestMode None,LPVARSTRING lpExtensionName None,LPDWORD lpdwPriority None)
LONG WINAPI tapi32.lineGetAppPriorityW(LPCSTR lpszAppFilename None,DWORD dwMediaMode None,LPLINEEXTENSIONID lpExtensionID None,DWORD dwRequestMode None,LPVARSTRING lpExtensionName None,LPDWORD lpdwPriority None)
LONG WINAPI tapi32.lineGetAppPriorityA(LPCSTR lpszAppFilename None,DWORD dwMediaMode None,LPLINEEXTENSIONID lpExtensionID None,DWORD dwRequestMode None,LPVARSTRING lpExtensionName None,LPDWORD lpdwPriority None)
LONG WINAPI tapi32.lineGetAddressID(HLINE hLine None,LPDWORD lpdwAddressID None,DWORD dwAddressMode None,LPCSTR lpsAddress None,DWORD dwSize None)
LONG WINAPI tapi32.lineGetAddressIDW(HLINE hLine None,LPDWORD lpdwAddressID None,DWORD dwAddressMode None,LPCSTR lpsAddress None,DWORD dwSize None)
LONG WINAPI tapi32.lineGetAddressIDA(HLINE hLine None,LPDWORD lpdwAddressID None,DWORD dwAddressMode None,LPCSTR lpsAddress None,DWORD dwSize None)
HRESULT None msftedit.GetKeepTogether([out None None,retval] long *pValue)
HRESULT None None.SetStrokeMiterLimit([in] FLOAT strokeMiterLimit)
HRESULT None msftedit.SetDocumentPara([in] ITextPara2 *pPara)
HRESULT None None.SetSnapsToPixels([in] BOOL snapsToPixels)
HRESULT None msftedit.GetCellMergeFlags([out None None,retval] long *pValue)
HRESULT None None.CreateRemoteDictionaryResource([in] IXpsOMDictionary *dictionary,[in] IOpcPartUri *partUri,[out None None,retval] IXpsOMRemoteDictionaryResource **remoteDictionaryResource)
HRESULT None msftedit.GetAllCaps(long *pValue None)
LONG WINAPI tapi32.lineInitialize(LPHLINEAPP lphLineApp None,HINSTANCE hInstance None,LINECALLBACK lpfnCallback None,LPCSTR lpszAppName None,LPDWORD lpdwNumDevs None)
LONG WINAPI tapi32.lineRedirect(HCALL hCall None,LPCSTR lpszDestAddress None,DWORD dwCountryCode None)
LONG WINAPI tapi32.lineRedirectW(HCALL hCall None,LPCSTR lpszDestAddress None,DWORD dwCountryCode None)
LONG WINAPI tapi32.lineRedirectA(HCALL hCall None,LPCSTR lpszDestAddress None,DWORD dwCountryCode None)
HRESULT None None.GetCustomObjectSet([out None None,retval] IOpcSignatureCustomObjectSet **customObjectSet)
HRESULT None usp10.ScriptFreeCache(_Inout_ SCRIPT_CACHE *psc)
LONG WINAPI tapi32.lineSetNumRings(HLINE hLine None,DWORD dwAddressID None,DWORD dwNumRings None)
HRESULT None msftedit.GetOldNumbers([out None None,retval] long *pValue)
HRESULT None msftedit.SetProperty([in] long Type,[in] long Value)
LONG WINAPI tapi32.lineCompleteTransfer(HCALL hCall None,HCALL hConsultCall None,LPHCALL lphConfCall None,DWORD dwTransferMode None)
LONG WINAPI tapi32.lineSetAppSpecific(HCALL hCall None,DWORD dwAppSpecific None)
LONG WINAPI tapi32.lineCompleteCall(HCALL hCall None,LPDWORD lpdwCompletionID None,DWORD dwCompletionMode None,DWORD dwMessageID None)
LONG WINAPI tapi32.lineGetCountry(DWORD dwCountryID None,DWORD dwAPIVersion None,LPLINECOUNTRYLIST lpLineCountryList None)
LONG WINAPI tapi32.lineGetCountryW(DWORD dwCountryID None,DWORD dwAPIVersion None,LPLINECOUNTRYLIST lpLineCountryList None)
LONG WINAPI tapi32.lineGetCountryA(DWORD dwCountryID None,DWORD dwAPIVersion None,LPLINECOUNTRYLIST lpLineCountryList None)
LONG WINAPI tapi32.lineTranslateAddress(HLINEAPP hLineApp None,DWORD dwDeviceID None,DWORD dwAPIVersion None,LPCSTR lpszAddressIn None,DWORD dwCard None,DWORD dwTranslateOptions None,LPLINETRANSLATEOUTPUT lpTranslateOutput None)
LONG WINAPI tapi32.lineTranslateAddressW(HLINEAPP hLineApp None,DWORD dwDeviceID None,DWORD dwAPIVersion None,LPCSTR lpszAddressIn None,DWORD dwCard None,DWORD dwTranslateOptions None,LPLINETRANSLATEOUTPUT lpTranslateOutput None)
LONG WINAPI tapi32.lineTranslateAddressA(HLINEAPP hLineApp None,DWORD dwDeviceID None,DWORD dwAPIVersion None,LPCSTR lpszAddressIn None,DWORD dwCard None,DWORD dwTranslateOptions None,LPLINETRANSLATEOUTPUT lpTranslateOutput None)
LONG WINAPI tapi32.lineRemoveProvider(DWORD dwPermanentProviderID None,HWND hwndOwner None)
HRESULT None msftedit.IsEqual2([in] ITextFont2 *pFont,[out] long *pB)
HRESULT None None.GetOwner([out None None,retval] IXpsOMDocumentSequence **documentSequence)
LONG WINAPI tapi32.lineUnhold(HCALL hCall None)
LONG WINAPI tapi32.lineSetCurrentLocation(HLINEAPP hLineApp None,DWORD dwLocation None)
HRESULT None None.GetOwner([out None None,retval] IXpsOMDocumentSequence **documentSequence)
HRESULT None None.GetStream([out None None,retval] IStream **readerStream)
LONG WINAPI tapi32.lineConfigDialogEdit(DWORD dwDeviceID None,HWND hwndOwner None,LPCSTR lpszDeviceClass None,LPVOID const lpDeviceConfigIn,DWORD dwSize None,LPVARSTRING lpDeviceConfigOut None)
LONG WINAPI tapi32.lineConfigDialogEditW(DWORD dwDeviceID None,HWND hwndOwner None,LPCSTR lpszDeviceClass None,LPVOID const lpDeviceConfigIn,DWORD dwSize None,LPVARSTRING lpDeviceConfigOut None)
LONG WINAPI tapi32.lineConfigDialogEditA(DWORD dwDeviceID None,HWND hwndOwner None,LPCSTR lpszDeviceClass None,LPVOID const lpDeviceConfigIn,DWORD dwSize None,LPVARSTRING lpDeviceConfigOut None)
HRESULT None ole32.Seek([in] LARGE_INTEGER dlibMove,[in] DWORD dwOrigin,[out] ULARGE_INTEGER *plibNewPosition)
HRESULT None None.GetUseAliasedEdgeMode([out None None,retval] BOOL *useAliasedEdgeMode)
HRESULT None None.SetDiscardControlPartName([in] IOpcPartUri *discardControlPartUri)
HRESULT None msftedit.SetCellCount([in] long Value)
LONG WINAPI tapi32.lineGetProviderList(DWORD dwAPIVersion None,LPLINEPROVIDERLIST lpProviderList None)
LONG WINAPI tapi32.lineGetProviderListW(DWORD dwAPIVersion None,LPLINEPROVIDERLIST lpProviderList None)
LONG WINAPI tapi32.lineGetProviderListA(DWORD dwAPIVersion None,LPLINEPROVIDERLIST lpProviderList None)
HRESULT None None.GetVisual([out None None,retval] IXpsOMVisual **visual)
HWND WINAPI user32.GetCapture(void None None)
LONG WINAPI tapi32.lineNegotiateExtVersion(HLINEAPP hLineApp None,DWORD dwDeviceID None,DWORD dwAPIVersion None,DWORD dwExtLowVersion None,DWORD dwExtHighVersion None,LPDWORD lpdwExtVersion None)
HRESULT None None.CreateReadOnlyStreamOnFile([in] LPCWSTR filename,[out None None,retval] IStream **stream)
HRESULT None None.WriteToFile([in] LPCWSTR fileName,[in None None,unique] LPSECURITY_ATTRIBUTES securityAttributes,[in] DWORD flagsAndAttributes,[in] BOOL optimizeMarkupSize)
LONG WINAPI tapi32.lineInitialize(LPHLINEAPP lphLineApp None,HINSTANCE hInstance None,LINECALLBACK lpfnCallback None,LPCSTR lpszAppName None,LPDWORD lpdwNumDevs None)
LONG WINAPI tapi32.lineAddToConference(HCALL hConfCall None,HCALL hConsultCall None)
HRESULT None msftedit.SetOldNumbers([in] long Value)
LONG WINAPI tapi32.linePark(HCALL hCall None,DWORD dwParkMode None,LPCSTR lpszDirAddress None,LPVARSTRING lpNonDirAddress None)
LONG WINAPI tapi32.lineParkW(HCALL hCall None,DWORD dwParkMode None,LPCSTR lpszDirAddress None,LPVARSTRING lpNonDirAddress None)
LONG WINAPI tapi32.lineParkA(HCALL hCall None,DWORD dwParkMode None,LPCSTR lpszDirAddress None,LPVARSTRING lpNonDirAddress None)
LONG WINAPI tapi32.lineInitialize(LPHLINEAPP lphLineApp None,HINSTANCE hInstance None,LINECALLBACK lpfnCallback None,LPCSTR lpszAppName None,LPDWORD lpdwNumDevs None)
LONG WINAPI tapi32.lineUnpark(HLINE hLine None,DWORD dwAddressID None,LPHCALL lphCall None,LPCSTR lpszDestAddress None)
LONG WINAPI tapi32.lineUnparkW(HLINE hLine None,DWORD dwAddressID None,LPHCALL lphCall None,LPCSTR lpszDestAddress None)
LONG WINAPI tapi32.lineUnparkA(HLINE hLine None,DWORD dwAddressID None,LPHCALL lphCall None,LPCSTR lpszDestAddress None)
LONG WINAPI tapi32.lineSwapHold(HCALL hActiveCall None,HCALL hHeldCall None)
LONG WINAPI tapi32.lineGetAddressStatus(HLINE hLine None,DWORD dwAddressID None,LPLINEADDRESSSTATUS lpAddressStatus None)
LONG WINAPI tapi32.lineGetAddressStatusW(HLINE hLine None,DWORD dwAddressID None,LPLINEADDRESSSTATUS lpAddressStatus None)
LONG WINAPI tapi32.lineGetAddressStatusA(HLINE hLine None,DWORD dwAddressID None,LPLINEADDRESSSTATUS lpAddressStatus None)
HRESULT None None.SetIsHyperlinkTarget([in] BOOL isHyperlink)
HRESULT None None.CreateDocument([in] IOpcPartUri *partUri,[out None None,retval] IXpsOMDocument **document)
LONG WINAPI tapi32.lineForward(HLINE hLine None,DWORD bAllAddresses None,DWORD dwAddressID None,LPLINEFORWARDLIST const lpForwardList,DWORD dwNumRingsNoAnswer None,LPHCALL lphConsultCall None,LPLINECALLPARAMS const lpCallParams)
LONG WINAPI tapi32.lineForwardW(HLINE hLine None,DWORD bAllAddresses None,DWORD dwAddressID None,LPLINEFORWARDLIST const lpForwardList,DWORD dwNumRingsNoAnswer None,LPHCALL lphConsultCall None,LPLINECALLPARAMS const lpCallParams)
LONG WINAPI tapi32.lineForwardA(HLINE hLine None,DWORD bAllAddresses None,DWORD dwAddressID None,LPLINEFORWARDLIST const lpForwardList,DWORD dwNumRingsNoAnswer None,LPHCALL lphConsultCall None,LPLINECALLPARAMS const lpCallParams)
HRESULT None msftedit.GetCharRep([out None None,retval] long *pValue)
HRESULT None None.GetDiscardControlPartName([out None None,retval] IOpcPartUri **discardControlPartUri)
LONG WINAPI tapi32.lineAddProvider(LPCSTR lpszProviderFilename None,HWND hwndOwner None,LPDWORD lpdwPermanentProviderID None)
LONG WINAPI tapi32.lineAddProviderW(LPCSTR lpszProviderFilename None,HWND hwndOwner None,LPDWORD lpdwPermanentProviderID None)
LONG WINAPI tapi32.lineAddProviderA(LPCSTR lpszProviderFilename None,HWND hwndOwner None,LPDWORD lpdwPermanentProviderID None)
LONG WINAPI tapi32.lineSecureCall(HCALL hCall None)
LONG WINAPI tapi32.lineTranslateDialog(HLINEAPP hLineApp None,DWORD dwDeviceID None,DWORD dwAPIVersion None,HWND hwndOwner None,LPCSTR lpszAddressIn None)
LONG WINAPI tapi32.lineTranslateDialogW(HLINEAPP hLineApp None,DWORD dwDeviceID None,DWORD dwAPIVersion None,HWND hwndOwner None,LPCSTR lpszAddressIn None)
LONG WINAPI tapi32.lineTranslateDialogA(HLINEAPP hLineApp None,DWORD dwDeviceID None,DWORD dwAPIVersion None,HWND hwndOwner None,LPCSTR lpszAddressIn None)
HRESULT None None.SetContentType([in] LPCWSTR contentType)
HRESULT None msftedit.GetMathZone([out None None,retval] long *pValue)
HRESULT None None.GetCount([out None None,retval] UINT32 *count)
HRESULT None None.Clone([out None None,retval] IOpcSignatureCustomObjectEnumerator **copy)
HRESULT None None.GetName([out None None,retval] LPWSTR *name)
HRESULT None None.GetCreated([out None None,retval] SYSTEMTIME *created)
HRESULT None None.GetSignaturePartReferenceEnumerator([out None None,retval] IOpcSignaturePartReferenceEnumerator **partReferenceEnumerator)
LONG WINAPI tapi32.lineNegotiateAPIVersion(HLINEAPP hLineApp None,DWORD dwDeviceID None,DWORD dwAPILowVersion None,DWORD dwAPIHighVersion None,LPDWORD lpdwAPIVersion None,LPLINEEXTENSIONID lpExtensionID None)
HRESULT None None.SetTransformLookup([in] LPCWSTR lookup)
LONG WINAPI tapi32.lineSetMediaControl(HLINE hLine None,DWORD dwAddressID None,HCALL hCall None,DWORD dwSelect None,LPLINEMEDIACONTROLDIGIT const lpDigitList,DWORD dwDigitNumEntries None,LPLINEMEDIACONTROLMEDIA const lpMediaList,DWORD dwMediaNumEntries None,LPLINEMEDIACONTROLTONE const lpToneList,DWORD dwToneNumEntries None,LPLINEMEDIACONTROLCALLSTATE const lpCallStateList,DWORD dwCallStateNumEntries None)
HRESULT None None.GetOpacityMaskBrush([out None None,retval] IXpsOMBrush **opacityMaskBrush)
HRESULT None None.GetCount([out None None,retval] UINT32 *count)
LONG WINAPI tapi32.lineGetDevCaps(HLINEAPP hLineApp None,DWORD dwDeviceID None,DWORD dwAPIVersion None,DWORD dwExtVersion None,LPLINEDEVCAPS lpLineDevCaps None)
LONG WINAPI tapi32.lineGetDevCapsW(HLINEAPP hLineApp None,DWORD dwDeviceID None,DWORD dwAPIVersion None,DWORD dwExtVersion None,LPLINEDEVCAPS lpLineDevCaps None)
LONG WINAPI tapi32.lineGetDevCapsA(HLINEAPP hLineApp None,DWORD dwDeviceID None,DWORD dwAPIVersion None,DWORD dwExtVersion None,LPLINEDEVCAPS lpLineDevCaps None)
HRESULT None None.WriteToFile([in] LPCWSTR fileName,[in None None,unique] LPSECURITY_ATTRIBUTES securityAttributes,[in] DWORD flagsAndAttributes,[in] BOOL optimizeMarkupSize)
HRESULT None None.SetDiscardControlPartName([in] IOpcPartUri *discardControlPartUri)
HRESULT None None.GetDictionaryLocal([out None None,retval] IXpsOMDictionary **resourceDictionary)
HRESULT None None.GetDescription([out None None,retval] LPWSTR *description)
LONG WINAPI tapi32.lineInitialize(LPHLINEAPP lphLineApp None,HINSTANCE hInstance None,LINECALLBACK lpfnCallback None,LPCSTR lpszAppName None,LPDWORD lpdwNumDevs None)
LONG WINAPI tapi32.lineUncompleteCall(HLINE hLine None,DWORD dwCompletionID None)
LONG WINAPI tapi32.lineCompleteTransfer(HCALL hCall None,HCALL hConsultCall None,LPHCALL lphConfCall None,DWORD dwTransferMode None)
LONG WINAPI tapi32.lineRemoveFromConference(HCALL hCall None)
HRESULT None None.GetRevision([out None None,retval] LPWSTR *revision)
LONG WINAPI tapi32.lineSetCallPrivilege(HCALL hCall None,DWORD dwCallPrivilege None)
LONG WINAPI tapi32.lineConfigDialogEdit(DWORD dwDeviceID None,HWND hwndOwner None,LPCSTR lpszDeviceClass None,LPVOID const lpDeviceConfigIn,DWORD dwSize None,LPVARSTRING lpDeviceConfigOut None)
LONG WINAPI tapi32.lineConfigDialogEditW(DWORD dwDeviceID None,HWND hwndOwner None,LPCSTR lpszDeviceClass None,LPVOID const lpDeviceConfigIn,DWORD dwSize None,LPVARSTRING lpDeviceConfigOut None)
LONG WINAPI tapi32.lineConfigDialogEditA(DWORD dwDeviceID None,HWND hwndOwner None,LPCSTR lpszDeviceClass None,LPVOID const lpDeviceConfigIn,DWORD dwSize None,LPVARSTRING lpDeviceConfigOut None)
LONG WINAPI tapi32.lineGetNewCalls(HLINE hLine None,DWORD dwAddressID None,DWORD dwSelect None,LPLINECALLLIST lpCallList None)
HRESULT None msftedit.IsEqual([in] ITextRow *pRow,[out None None,retval] long *pB)
HRESULT None None.GetIdentifier([out None None,retval] LPWSTR *identifier)
HRESULT None msftedit.GetMathZone([out None None,retval] long *pValue)
HRESULT None None.SetTitle([in] LPCWSTR title)
LONG WINAPI tapi32.lineSetCallParams(HCALL hCall None,DWORD dwBearerMode None,DWORD dwMinRate None,DWORD dwMaxRate None,LPLINEDIALPARAMS const lpDialParams)
HRESULT None None.GetTimeFormat([out None None,retval] OPC_SIGNATURE_TIME_FORMAT *timeFormat)
LONG WINAPI tapi32.lineDevSpecific(HLINE hLine None,DWORD dwAddressID None,HCALL hCall None,LPVOID lpParams None,DWORD dwSize None)
LONG WINAPI tapi32.lineMakeCall(HLINE hLine None,LPHCALL lphCall None,LPCSTR lpszDestAddress None,DWORD dwCountryCode None,LPLINECALLPARAMS const lpCallParams)
LONG WINAPI tapi32.lineMakeCallW(HLINE hLine None,LPHCALL lphCall None,LPCSTR lpszDestAddress None,DWORD dwCountryCode None,LPLINECALLPARAMS const lpCallParams)
LONG WINAPI tapi32.lineMakeCallA(HLINE hLine None,LPHCALL lphCall None,LPCSTR lpszDestAddress None,DWORD dwCountryCode None,LPLINECALLPARAMS const lpCallParams)
HRESULT None msftedit.GetOldNumbers([out None None,retval] long *pValue)
HRESULT None None.SetFillBrushLookup([in] LPCWSTR lookup)
HRESULT None None.GetCertificateEnumerator([out None None,retval] IOpcCertificateEnumerator **certificateEnumerator)
HRESULT None None.SetContentType([in] LPCWSTR contentType)
LONG WINAPI tapi32.lineReleaseUserUserInfo(HCALL hCall None)
HRESULT None None.SetAccessibilityShortDescription([in] LPCWSTR shortDescription)
HRESULT None msftedit.SetCellAlignment([in] long Value)
LONG WINAPI tapi32.lineConfigDialog(DWORD dwDeviceID None,HWND hwndOwner None,LPCSTR lpszDeviceClass None)
LONG WINAPI tapi32.lineConfigDialogW(DWORD dwDeviceID None,HWND hwndOwner None,LPCSTR lpszDeviceClass None)
LONG WINAPI tapi32.lineConfigDialogA(DWORD dwDeviceID None,HWND hwndOwner None,LPCSTR lpszDeviceClass None)
HRESULT None None.GetSignatureRelationshipReferenceEnumerator([out None None,retval] IOpcSignatureRelationshipReferenceEnumerator **relationshipReferenceEnumerator)
HRESULT None None.GetModified([out None None,retval] SYSTEMTIME *modified)
HRESULT WINAPI dwmapi.DwmGetTransportAttributes(_Out_ BOOL *pfIsRemoting,_Out_ BOOL *pfIsConnected,_Out_ DWORD *pDwGeneration)
HRESULT None None.GetOpacityMaskBrushLocal([out None None,retval] IXpsOMBrush **opacityMaskBrush)
LONG WINAPI tapi32.lineConfigDialog(DWORD dwDeviceID None,HWND hwndOwner None,LPCSTR lpszDeviceClass None)
LONG WINAPI tapi32.lineConfigDialogW(DWORD dwDeviceID None,HWND hwndOwner None,LPCSTR lpszDeviceClass None)
LONG WINAPI tapi32.lineConfigDialogA(DWORD dwDeviceID None,HWND hwndOwner None,LPCSTR lpszDeviceClass None)
HRESULT None None.GetDefaultDigestMethod([out None None,retval] LPCWSTR *digestMethod)
LONG WINAPI tapi32.lineGetConfRelatedCalls(HCALL hCall None,LPLINECALLLIST lpCallList None)
HRESULT None None.GetCustomObjectSet([out None None,retval] IOpcSignatureCustomObjectSet **customObjectSet)
HRESULT None msftedit.SetAutospaceParens([in] long Value)
HRESULT None None.SetStrokeDashOffset([in] FLOAT strokeDashOffset)
HRESULT None msftedit.SetCookie([in] long Value)
HRESULT None None.GetSignaturePartName([out None None,retval] IOpcPartUri **signaturePartName)
HRESULT None None.SetCoreProperties([in] IXpsOMCoreProperties *coreProperties)
HRESULT WINAPI dwmapi.DwmSetIconicLivePreviewBitmap(HWND hwnd None,HBITMAP hbmp None,_In_opt_ POINT *pptClient,DWORD dwSITFlags None)
LONG WINAPI tapi32.lineGetNumRings(HLINE hLine None,DWORD dwAddressID None,LPDWORD lpdwNumRings None)
HRESULT None None.SetLastPrinted([in] SYSTEMTIME *lastPrinted)
LONG WINAPI tapi32.lineAddToConference(HCALL hConfCall None,HCALL hConsultCall None)
HRESULT None None.GetTransform([out None None,retval] IXpsOMMatrixTransform **matrixTransform)
HRESULT None msftedit.GetSpaceExtension([out None None,retval] float *pValue)
HRESULT None None.GetLastModifiedBy([out None None,retval] LPWSTR *lastModifiedBy)
HRESULT None None.GetDocumentSequence([out None None,retval] IXpsOMDocumentSequence **documentSequence)
LONG WINAPI tapi32.lineHold(HCALL hCall None)
LONG WINAPI tapi32.lineDial(HCALL hCall None,LPCSTR lpszDestAddress None,DWORD dwCountryCode None)
LONG WINAPI tapi32.lineDialW(HCALL hCall None,LPCSTR lpszDestAddress None,DWORD dwCountryCode None)
LONG WINAPI tapi32.lineDialA(HCALL hCall None,LPCSTR lpszDestAddress None,DWORD dwCountryCode None)
LONG WINAPI tapi32.lineSetCallQualityOfService(HCALL hCall None,LPVOID lpSendingFlowspec None,DWORD dwSendingFlowspecSize None,LPVOID lpReceivingFlowspec None,DWORD dwReceivingFlowspecSize None)
HRESULT WINAPI dwmapi.DwmFlush(void None None)
LONG WINAPI tapi32.lineSetTollList(HLINEAPP hLineApp None,DWORD dwDeviceID None,LPCSTR lpszAddressIn None,DWORD dwTollListOption None)
LONG WINAPI tapi32.lineSetTollListW(HLINEAPP hLineApp None,DWORD dwDeviceID None,LPCSTR lpszAddressIn None,DWORD dwTollListOption None)
LONG WINAPI tapi32.lineSetTollListA(HLINEAPP hLineApp None,DWORD dwDeviceID None,LPCSTR lpszAddressIn None,DWORD dwTollListOption None)
HRESULT None msftedit.SetCellMergeFlags([in] long Value)
LONG WINAPI tapi32.lineAgentSpecific(HLINE hLine None,DWORD dwAddressID None,DWORD dwAgentExtensionIDIndex None,LPVOID lpParams None,DWORD dwSize None)
LONG WINAPI tapi32.lineGetAddressStatus(HLINE hLine None,DWORD dwAddressID None,LPLINEADDRESSSTATUS lpAddressStatus None)
LONG WINAPI tapi32.lineGetAddressStatusW(HLINE hLine None,DWORD dwAddressID None,LPLINEADDRESSSTATUS lpAddressStatus None)
LONG WINAPI tapi32.lineGetAddressStatusA(HLINE hLine None,DWORD dwAddressID None,LPLINEADDRESSSTATUS lpAddressStatus None)
HRESULT None msdrm.DRMSetRevocationPoint(_In_ DRMPUBHANDLE hIssuanceLicense,_In_ BOOL fDelete,_In_ PWSTR wszId,_In_ PWSTR wszIdType,_In_ PWSTR wszURL,_In_ SYSTEMTIME *pstFrequency,_In_ PWSTR wszName,_In_ PWSTR wszPublicKey)
LONG WINAPI tapi32.lineSetAppPriority(LPCSTR lpszAppFilename None,DWORD dwMediaMode None,LPLINEEXTENSIONID lpExtensionID None,DWORD dwRequestMode None,LPCSTR lpszExtensionName None,DWORD dwPriority None)
LONG WINAPI tapi32.lineSetAppPriorityW(LPCSTR lpszAppFilename None,DWORD dwMediaMode None,LPLINEEXTENSIONID lpExtensionID None,DWORD dwRequestMode None,LPCSTR lpszExtensionName None,DWORD dwPriority None)
LONG WINAPI tapi32.lineSetAppPriorityA(LPCSTR lpszAppFilename None,DWORD dwMediaMode None,LPLINEEXTENSIONID lpExtensionID None,DWORD dwRequestMode None,LPCSTR lpszExtensionName None,DWORD dwPriority None)
LONG WINAPI tapi32.lineGatherDigits(HCALL hCall None,DWORD dwDigitModes None,LPSTR lpsDigits None,DWORD dwNumDigits None,LPCSTR lpszTerminationDigits None,DWORD dwFirstDigitTimeout None,DWORD dwInterDigitTimeout None)
LONG WINAPI tapi32.lineGatherDigitsW(HCALL hCall None,DWORD dwDigitModes None,LPSTR lpsDigits None,DWORD dwNumDigits None,LPCSTR lpszTerminationDigits None,DWORD dwFirstDigitTimeout None,DWORD dwInterDigitTimeout None)
LONG WINAPI tapi32.lineGatherDigitsA(HCALL hCall None,DWORD dwDigitModes None,LPSTR lpsDigits None,DWORD dwNumDigits None,LPCSTR lpszTerminationDigits None,DWORD dwFirstDigitTimeout None,DWORD dwInterDigitTimeout None)
LONG WINAPI tapi32.lineSetMediaMode(HCALL hCall None,DWORD dwMediaModes None)
LONG WINAPI tapi32.lineDial(HCALL hCall None,LPCSTR lpszDestAddress None,DWORD dwCountryCode None)
LONG WINAPI tapi32.lineDialW(HCALL hCall None,LPCSTR lpszDestAddress None,DWORD dwCountryCode None)
LONG WINAPI tapi32.lineDialA(HCALL hCall None,LPCSTR lpszDestAddress None,DWORD dwCountryCode None)
HRESULT None None.GetKeywords([out None None,retval] LPWSTR *keywords)
HRESULT None None.GetLanguage([out None None,retval] LPWSTR *language)
LONG WINAPI tapi32.lineSetCallData(HCALL hCall None,LPVOID lpCallData None,DWORD dwSize None)
LONG WINAPI tapi32.lineCompleteTransfer(HCALL hCall None,HCALL hConsultCall None,LPHCALL lphConfCall None,DWORD dwTransferMode None)
HRESULT None msdrm.DRMSetRevocationPoint(_In_ DRMPUBHANDLE hIssuanceLicense,_In_ BOOL fDelete,_In_ PWSTR wszId,_In_ PWSTR wszIdType,_In_ PWSTR wszURL,_In_ SYSTEMTIME *pstFrequency,_In_ PWSTR wszName,_In_ PWSTR wszPublicKey)
HRESULT WINAPI dwmapi.DwmSetDxFrameDuration(HWND hwnd None,INT cRefreshes None)
LONG WINAPI tapi32.lineSetupTransfer(HCALL hCall None,LPHCALL lphConsultCall None,LPLINECALLPARAMS const lpCallParams)
LONG WINAPI tapi32.lineSetupTransferW(HCALL hCall None,LPHCALL lphConsultCall None,LPLINECALLPARAMS const lpCallParams)
LONG WINAPI tapi32.lineSetupTransferA(HCALL hCall None,LPHCALL lphConsultCall None,LPLINECALLPARAMS const lpCallParams)
HRESULT None None.GetOwner([out None None,retval] IXpsOMDocumentSequence **documentSequence)
LONG WINAPI tapi32.lineSetAppPriority(LPCSTR lpszAppFilename None,DWORD dwMediaMode None,LPLINEEXTENSIONID lpExtensionID None,DWORD dwRequestMode None,LPCSTR lpszExtensionName None,DWORD dwPriority None)
LONG WINAPI tapi32.lineSetAppPriorityW(LPCSTR lpszAppFilename None,DWORD dwMediaMode None,LPLINEEXTENSIONID lpExtensionID None,DWORD dwRequestMode None,LPCSTR lpszExtensionName None,DWORD dwPriority None)
LONG WINAPI tapi32.lineSetAppPriorityA(LPCSTR lpszAppFilename None,DWORD dwMediaMode None,LPLINEEXTENSIONID lpExtensionID None,DWORD dwRequestMode None,LPCSTR lpszExtensionName None,DWORD dwPriority None)
HRESULT None None.GetDocumentSequence([out None None,retval] IXpsOMDocumentSequence **documentSequence)
LONG WINAPI tapi32.lineSetLineDevStatus(HLINE hLine None,DWORD dwStatusToChange None,DWORD fStatus None)
HRESULT None None.GetCustomReferenceSet([out None None,retval] IOpcSignatureReferenceSet **customReferenceSet)
HRESULT None None.SetSignatureId([in] LPCWSTR signatureId)
LONG WINAPI tapi32.lineSetDevConfig(DWORD dwDeviceID None,LPVOID const lpDeviceConfig,DWORD dwSize None,LPCSTR lpszDeviceClass None)
LONG WINAPI tapi32.lineSetDevConfigW(DWORD dwDeviceID None,LPVOID const lpDeviceConfig,DWORD dwSize None,LPCSTR lpszDeviceClass None)
LONG WINAPI tapi32.lineSetDevConfigA(DWORD dwDeviceID None,LPVOID const lpDeviceConfig,DWORD dwSize None,LPCSTR lpszDeviceClass None)
LONG WINAPI tapi32.lineSetAppPriority(LPCSTR lpszAppFilename None,DWORD dwMediaMode None,LPLINEEXTENSIONID lpExtensionID None,DWORD dwRequestMode None,LPCSTR lpszExtensionName None,DWORD dwPriority None)
LONG WINAPI tapi32.lineSetAppPriorityW(LPCSTR lpszAppFilename None,DWORD dwMediaMode None,LPLINEEXTENSIONID lpExtensionID None,DWORD dwRequestMode None,LPCSTR lpszExtensionName None,DWORD dwPriority None)
LONG WINAPI tapi32.lineSetAppPriorityA(LPCSTR lpszAppFilename None,DWORD dwMediaMode None,LPLINEEXTENSIONID lpExtensionID None,DWORD dwRequestMode None,LPCSTR lpszExtensionName None,DWORD dwPriority None)
HRESULT None None.CreatePackageWriterOnFile([in] LPCWSTR fileName,[in None None,unique] LPSECURITY_ATTRIBUTES securityAttributes,[in] DWORD flagsAndAttributes,[in] BOOL optimizeMarkupSize,[in] XPS_INTERLEAVING interleaving,[in] IOpcPartUri *documentSequencePartName,[in] IXpsOMCoreProperties *coreProperties,[in] IXpsOMImageResource *packageThumbnail,[in] IXpsOMPrintTicketResource *documentSequencePrintTicket,[in] IOpcPartUri *discardControlPartName,[out None None,retval] IXpsOMPackageWriter **packageWriter)
HRESULT None None.WriteToFile([in] LPCWSTR fileName,[in None None,unique] LPSECURITY_ATTRIBUTES securityAttributes,[in] DWORD flagsAndAttributes,[in] BOOL optimizeMarkupSize)
LONG WINAPI tapi32.lineDrop(HCALL hCall None,LPCSTR lpsUserUserInfo None,DWORD dwSize None)
void None None.CommDlg_OpenSave_SetDefExt(hwnd None None,lparam None None)
LONG WINAPI tapi32.lineDial(HCALL hCall None,LPCSTR lpszDestAddress None,DWORD dwCountryCode None)
LONG WINAPI tapi32.lineDialW(HCALL hCall None,LPCSTR lpszDestAddress None,DWORD dwCountryCode None)
LONG WINAPI tapi32.lineDialA(HCALL hCall None,LPCSTR lpszDestAddress None,DWORD dwCountryCode None)
HRESULT None None.SetStrokeBrushLookup([in] LPCWSTR lookup)
HRESULT None None.GetCreated([out None None,retval] SYSTEMTIME *created)
LONG WINAPI tapi32.lineReleaseUserUserInfo(HCALL hCall None)
LONG WINAPI tapi32.lineSetTerminal(HLINE hLine None,DWORD dwAddressID None,HCALL hCall None,DWORD dwSelect None,DWORD dwTerminalModes None,DWORD dwTerminalID None,DWORD bEnable None)
LONG WINAPI tapi32.lineCompleteTransfer(HCALL hCall None,HCALL hConsultCall None,LPHCALL lphConfCall None,DWORD dwTransferMode None)
HRESULT None None.SetCreated([in] SYSTEMTIME *created)
LONG WINAPI tapi32.lineSetMediaMode(HCALL hCall None,DWORD dwMediaModes None)
LONG WINAPI tapi32.lineAnswer(HCALL hCall None,LPCSTR lpsUserUserInfo None,DWORD dwSize None)
LONG WINAPI tapi32.lineCompleteTransfer(HCALL hCall None,HCALL hConsultCall None,LPHCALL lphConfCall None,DWORD dwTransferMode None)
HRESULT None None.SetLanguage([in] LPCWSTR language)
LONG WINAPI tapi32.lineSetAppPriority(LPCSTR lpszAppFilename None,DWORD dwMediaMode None,LPLINEEXTENSIONID lpExtensionID None,DWORD dwRequestMode None,LPCSTR lpszExtensionName None,DWORD dwPriority None)
LONG WINAPI tapi32.lineSetAppPriorityW(LPCSTR lpszAppFilename None,DWORD dwMediaMode None,LPLINEEXTENSIONID lpExtensionID None,DWORD dwRequestMode None,LPCSTR lpszExtensionName None,DWORD dwPriority None)
LONG WINAPI tapi32.lineSetAppPriorityA(LPCSTR lpszAppFilename None,DWORD dwMediaMode None,LPLINEEXTENSIONID lpExtensionID None,DWORD dwRequestMode None,LPCSTR lpszExtensionName None,DWORD dwPriority None)
int None None.GET_KEYSTATE_WPARAM(WPARAM wParam None)
HRESULT None None.CreatePartUri([in] LPCWSTR uri,[out None None,retval] IOpcPartUri **partUri)
LONG WINAPI tapi32.lineGatherDigits(HCALL hCall None,DWORD dwDigitModes None,LPSTR lpsDigits None,DWORD dwNumDigits None,LPCSTR lpszTerminationDigits None,DWORD dwFirstDigitTimeout None,DWORD dwInterDigitTimeout None)
LONG WINAPI tapi32.lineGatherDigitsW(HCALL hCall None,DWORD dwDigitModes None,LPSTR lpsDigits None,DWORD dwNumDigits None,LPCSTR lpszTerminationDigits None,DWORD dwFirstDigitTimeout None,DWORD dwInterDigitTimeout None)
LONG WINAPI tapi32.lineGatherDigitsA(HCALL hCall None,DWORD dwDigitModes None,LPSTR lpsDigits None,DWORD dwNumDigits None,LPCSTR lpszTerminationDigits None,DWORD dwFirstDigitTimeout None,DWORD dwInterDigitTimeout None)
LONG WINAPI tapi32.lineSetMediaMode(HCALL hCall None,DWORD dwMediaModes None)
HRESULT WINAPI dwmapi.DwmModifyPreviousDxFrameDuration(HWND hwnd None,INT cRefreshes None,BOOL fRelative None)
HRESULT None None.GetCertificateSet([out None None,retval] IOpcCertificateSet **certificateSet)
LONG WINAPI tapi32.lineSetMediaMode(HCALL hCall None,DWORD dwMediaModes None)
LONG WINAPI tapi32.lineGetMessage(HLINEAPP hLineApp None,LPLINEMESSAGE lpMessage None,DWORD dwTimeout None)
LONG WINAPI tapi32.lineGetRequest(HLINEAPP hLineApp None,DWORD dwRequestMode None,LPVOID lpRequestBuffer None)
LONG WINAPI tapi32.lineGetRequestW(HLINEAPP hLineApp None,DWORD dwRequestMode None,LPVOID lpRequestBuffer None)
LONG WINAPI tapi32.lineGetRequestA(HLINEAPP hLineApp None,DWORD dwRequestMode None,LPVOID lpRequestBuffer None)
LONG WINAPI tapi32.lineSendUserUserInfo(HCALL hCall None,LPCSTR lpsUserUserInfo None,DWORD dwSize None)
LONG WINAPI tapi32.lineOpen(HLINEAPP hLineApp None,DWORD dwDeviceID None,LPHLINE lphLine None,DWORD dwAPIVersion None,DWORD dwExtVersion None,DWORD_PTR dwCallbackInstance None,DWORD dwPrivileges None,DWORD dwMediaModes None,LPLINECALLPARAMS const lpCallParams)
LONG WINAPI tapi32.lineOpenW(HLINEAPP hLineApp None,DWORD dwDeviceID None,LPHLINE lphLine None,DWORD dwAPIVersion None,DWORD dwExtVersion None,DWORD_PTR dwCallbackInstance None,DWORD dwPrivileges None,DWORD dwMediaModes None,LPLINECALLPARAMS const lpCallParams)
LONG WINAPI tapi32.lineOpenA(HLINEAPP hLineApp None,DWORD dwDeviceID None,LPHLINE lphLine None,DWORD dwAPIVersion None,DWORD dwExtVersion None,DWORD_PTR dwCallbackInstance None,DWORD dwPrivileges None,DWORD dwMediaModes None,LPLINECALLPARAMS const lpCallParams)
LONG WINAPI tapi32.lineConfigDialogEdit(DWORD dwDeviceID None,HWND hwndOwner None,LPCSTR lpszDeviceClass None,LPVOID const lpDeviceConfigIn,DWORD dwSize None,LPVARSTRING lpDeviceConfigOut None)
LONG WINAPI tapi32.lineConfigDialogEditW(DWORD dwDeviceID None,HWND hwndOwner None,LPCSTR lpszDeviceClass None,LPVOID const lpDeviceConfigIn,DWORD dwSize None,LPVARSTRING lpDeviceConfigOut None)
LONG WINAPI tapi32.lineConfigDialogEditA(DWORD dwDeviceID None,HWND hwndOwner None,LPCSTR lpszDeviceClass None,LPVOID const lpDeviceConfigIn,DWORD dwSize None,LPVARSTRING lpDeviceConfigOut None)
LONG WINAPI tapi32.lineGetID(HLINE hLine None,DWORD dwAddressID None,HCALL hCall None,DWORD dwSelect None,LPVARSTRING lpDeviceID None,LPCSTR lpszDeviceClass None)
LONG WINAPI tapi32.lineGetIDW(HLINE hLine None,DWORD dwAddressID None,HCALL hCall None,DWORD dwSelect None,LPVARSTRING lpDeviceID None,LPCSTR lpszDeviceClass None)
LONG WINAPI tapi32.lineGetIDA(HLINE hLine None,DWORD dwAddressID None,HCALL hCall None,DWORD dwSelect None,LPVARSTRING lpDeviceID None,LPCSTR lpszDeviceClass None)
LONG WINAPI tapi32.lineReleaseUserUserInfo(HCALL hCall None)
LONG WINAPI tapi32.lineGetCallInfo(HCALL hCall None,LPLINECALLINFO lpCallInfo None)
LONG WINAPI tapi32.lineGetCallInfoW(HCALL hCall None,LPLINECALLINFO lpCallInfo None)
LONG WINAPI tapi32.lineGetCallInfoA(HCALL hCall None,LPLINECALLINFO lpCallInfo None)
LONG WINAPI tapi32.lineConfigDialog(DWORD dwDeviceID None,HWND hwndOwner None,LPCSTR lpszDeviceClass None)
LONG WINAPI tapi32.lineConfigDialogW(DWORD dwDeviceID None,HWND hwndOwner None,LPCSTR lpszDeviceClass None)
LONG WINAPI tapi32.lineConfigDialogA(DWORD dwDeviceID None,HWND hwndOwner None,LPCSTR lpszDeviceClass None)
LONG WINAPI tapi32.lineConfigDialog(DWORD dwDeviceID None,HWND hwndOwner None,LPCSTR lpszDeviceClass None)
LONG WINAPI tapi32.lineConfigDialogW(DWORD dwDeviceID None,HWND hwndOwner None,LPCSTR lpszDeviceClass None)
LONG WINAPI tapi32.lineConfigDialogA(DWORD dwDeviceID None,HWND hwndOwner None,LPCSTR lpszDeviceClass None)
BOOL WINAPI user32.ChangeWindowMessageFilter(_In_ UINT message,_In_ DWORD dwFlag)
HRESULT WINAPI dwmapi.DwmSetWindowAttribute(HWND hwnd None,DWORD dwAttribute None,_In_ LPCVOID pvAttribute,DWORD cbAttribute None)
LONG WINAPI tapi32.lineGatherDigits(HCALL hCall None,DWORD dwDigitModes None,LPSTR lpsDigits None,DWORD dwNumDigits None,LPCSTR lpszTerminationDigits None,DWORD dwFirstDigitTimeout None,DWORD dwInterDigitTimeout None)
LONG WINAPI tapi32.lineGatherDigitsW(HCALL hCall None,DWORD dwDigitModes None,LPSTR lpsDigits None,DWORD dwNumDigits None,LPCSTR lpszTerminationDigits None,DWORD dwFirstDigitTimeout None,DWORD dwInterDigitTimeout None)
LONG WINAPI tapi32.lineGatherDigitsA(HCALL hCall None,DWORD dwDigitModes None,LPSTR lpsDigits None,DWORD dwNumDigits None,LPCSTR lpszTerminationDigits None,DWORD dwFirstDigitTimeout None,DWORD dwInterDigitTimeout None)
HRESULT None None.GetSignaturePartName([out None None,retval] IOpcPartUri **signaturePartName)
LONG WINAPI tapi32.lineReleaseUserUserInfo(HCALL hCall None)
LONG WINAPI tapi32.lineGetTranslateCaps(HLINEAPP hLineApp None,DWORD dwAPIVersion None,LPLINETRANSLATECAPS lpTranslateCaps None)
LONG WINAPI tapi32.lineGetTranslateCapsW(HLINEAPP hLineApp None,DWORD dwAPIVersion None,LPLINETRANSLATECAPS lpTranslateCaps None)
LONG WINAPI tapi32.lineGetTranslateCapsA(HLINEAPP hLineApp None,DWORD dwAPIVersion None,LPLINETRANSLATECAPS lpTranslateCaps None)
HRESULT None None.Create([in] IUri *referenceUri,[in] LPCWSTR referenceId,[in] LPCWSTR type,[in] LPCWSTR digestMethod,[in] OPC_CANONICALIZATION_METHOD transformMethod,[out None None,retval] IOpcSignatureReference **reference)
LONG WINAPI tapi32.lineSetLineDevStatus(HLINE hLine None,DWORD dwStatusToChange None,DWORD fStatus None)
HRESULT None None.GetAccessibilityLongDescription([out None None,retval] LPWSTR *longDescription)
LONG WINAPI tapi32.lineDial(HCALL hCall None,LPCSTR lpszDestAddress None,DWORD dwCountryCode None)
LONG WINAPI tapi32.lineDialW(HCALL hCall None,LPCSTR lpszDestAddress None,DWORD dwCountryCode None)
LONG WINAPI tapi32.lineDialA(HCALL hCall None,LPCSTR lpszDestAddress None,DWORD dwCountryCode None)
HRESULT None None.SetThumbnailResource([in] IXpsOMImageResource *imageResource)
LONG WINAPI tapi32.lineHandoff(HCALL hCall None,LPCSTR lpszFileName None,DWORD dwMediaMode None)
LONG WINAPI tapi32.lineHandoffW(HCALL hCall None,LPCSTR lpszFileName None,DWORD dwMediaMode None)
LONG WINAPI tapi32.lineHandoffA(HCALL hCall None,LPCSTR lpszFileName None,DWORD dwMediaMode None)
LONG WINAPI tapi32.lineGetStatusMessages(HLINE hLine None,LPDWORD lpdwLineStates None,LPDWORD lpdwAddressStates None)
LONG WINAPI tapi32.lineSetupConference(HCALL hCall None,HLINE hLine None,LPHCALL lphConfCall None,LPHCALL lphConsultCall None,DWORD dwNumParties None,LPLINECALLPARAMS const lpCallParams)
LONG WINAPI tapi32.lineSetupConferenceW(HCALL hCall None,HLINE hLine None,LPHCALL lphConfCall None,LPHCALL lphConsultCall None,DWORD dwNumParties None,LPLINECALLPARAMS const lpCallParams)
LONG WINAPI tapi32.lineSetupConferenceA(HCALL hCall None,HLINE hLine None,LPHCALL lphConfCall None,LPHCALL lphConsultCall None,DWORD dwNumParties None,LPLINECALLPARAMS const lpCallParams)
HRESULT None None.SetDiscardControlPartName([in] IOpcPartUri *discardControlPartUri)
LONG WINAPI tapi32.lineGetIcon(DWORD dwDeviceID None,LPCSTR lpszDeviceClass None,LPHICON lphIcon None)
LONG WINAPI tapi32.lineGetIconW(DWORD dwDeviceID None,LPCSTR lpszDeviceClass None,LPHICON lphIcon None)
LONG WINAPI tapi32.lineGetIconA(DWORD dwDeviceID None,LPCSTR lpszDeviceClass None,LPHICON lphIcon None)
LONG WINAPI tapi32.lineSetLineDevStatus(HLINE hLine None,DWORD dwStatusToChange None,DWORD fStatus None)
VOID WINAPI user32.mouse_event(_In_ DWORD dwFlags,_In_ DWORD dx,_In_ DWORD dy,_In_ DWORD dwData,_In_ ULONG_PTR dwExtraInfo)
HRESULT None None.GetAccessibilityShortDescription([out None None,retval] LPWSTR *shortDescription)
HRESULT None None.SetAt([in] UINT32 index,[in] IXpsOMRemoteDictionaryResource *object)
LONG WINAPI tapi32.lineGenerateTone(HCALL hCall None,DWORD dwToneMode None,DWORD dwDuration None,DWORD dwNumTones None,LPLINEGENERATETONE const lpTones)
LONG WINAPI tapi32.lineRedirect(HCALL hCall None,LPCSTR lpszDestAddress None,DWORD dwCountryCode None)
LONG WINAPI tapi32.lineRedirectW(HCALL hCall None,LPCSTR lpszDestAddress None,DWORD dwCountryCode None)
LONG WINAPI tapi32.lineRedirectA(HCALL hCall None,LPCSTR lpszDestAddress None,DWORD dwCountryCode None)
HRESULT None None.GetStrokeThickness([out None None,retval] FLOAT *strokeThickness)
HRESULT None None.SetOpacityMaskBrushLocal([in] IXpsOMBrush *opacityMaskBrush)
HRESULT None msftedit.GetCellBorderColors([in] long *pcrLeft,[in] long *pcrTop,[in] long *pcrRight,[in] long *pcrBottom)
HRESULT None explorerframe.SetProgressValue([in] HWND hwnd,[in] ULONGLONG ullCompleted,[in] ULONGLONG ullTotal)
LONG TSPIAPI None.TSPI_providerRemove(HWND hwndOwner None,DWORD dwPermanentProviderID None)
LONG WINAPI tapi32.lineGetDevCaps(HLINEAPP hLineApp None,DWORD dwDeviceID None,DWORD dwAPIVersion None,DWORD dwExtVersion None,LPLINEDEVCAPS lpLineDevCaps None)
LONG WINAPI tapi32.lineGetDevCapsW(HLINEAPP hLineApp None,DWORD dwDeviceID None,DWORD dwAPIVersion None,DWORD dwExtVersion None,LPLINEDEVCAPS lpLineDevCaps None)
LONG WINAPI tapi32.lineGetDevCapsA(HLINEAPP hLineApp None,DWORD dwDeviceID None,DWORD dwAPIVersion None,DWORD dwExtVersion None,LPLINEDEVCAPS lpLineDevCaps None)
HRESULT None None.SetAccessibilityLongDescription([in] LPCWSTR longDescription)
HRESULT None None.GetDictionary([out None None,retval] IXpsOMDictionary **resourceDictionary)
HRESULT None None.GetObjectInformation([out] PSI_OBJECT_INFO pObjectInfo)
HRESULT None None.GetVisuals([out None None,retval] IXpsOMVisualCollection **visuals)
HRESULT None None.Clone([out None None,retval] IXpsOMCanvas **canvas)
HRESULT None None.SetDictionaryResource([in] IXpsOMRemoteDictionaryResource *remoteDictionaryResource)
HRESULT None None.SetUseAliasedEdgeMode([in] BOOL useAliasedEdgeMode)
HRESULT None tapi3.Finish([in] FINISH_MODE finishMode)
HRESULT None None.SetDictionaryLocal([in] IXpsOMDictionary *resourceDictionary)
HRESULT None None.GetTimeFormat([out None None,retval] OPC_SIGNATURE_TIME_FORMAT *timeFormat)
HRESULT None None.GetTransform([out None None,retval] IXpsOMMatrixTransform **matrixTransform)
LONG WINAPI tapi32.linePrepareAddToConference(HCALL hConfCall None,LPHCALL lphConsultCall None,LPLINECALLPARAMS const lpCallParams)
LONG WINAPI tapi32.linePrepareAddToConferenceW(HCALL hConfCall None,LPHCALL lphConsultCall None,LPLINECALLPARAMS const lpCallParams)
LONG WINAPI tapi32.linePrepareAddToConferenceA(HCALL hConfCall None,LPHCALL lphConsultCall None,LPLINECALLPARAMS const lpCallParams)
LONG WINAPI tapi32.lineSetAppSpecific(HCALL hCall None,DWORD dwAppSpecific None)
HRESULT None tapi3.MonitorMedia([in] long lMediaType)
LONG WINAPI tapi32.lineGetAddressCaps(HLINEAPP hLineApp None,DWORD dwDeviceID None,DWORD dwAddressID None,DWORD dwAPIVersion None,DWORD dwExtVersion None,LPLINEADDRESSCAPS lpAddressCaps None)
LONG WINAPI tapi32.lineGetAddressCapsW(HLINEAPP hLineApp None,DWORD dwDeviceID None,DWORD dwAddressID None,DWORD dwAPIVersion None,DWORD dwExtVersion None,LPLINEADDRESSCAPS lpAddressCaps None)
LONG WINAPI tapi32.lineGetAddressCapsA(HLINEAPP hLineApp None,DWORD dwDeviceID None,DWORD dwAddressID None,DWORD dwAPIVersion None,DWORD dwExtVersion None,LPLINEADDRESSCAPS lpAddressCaps None)
HRESULT None None.GetPrintTicketResource([out None None,retval] IXpsOMPrintTicketResource **printTicketResource)
LONG WINAPI tapi32.lineCompleteTransfer(HCALL hCall None,HCALL hConsultCall None,LPHCALL lphConfCall None,DWORD dwTransferMode None)
LONG WINAPI tapi32.lineGetAppPriority(LPCSTR lpszAppFilename None,DWORD dwMediaMode None,LPLINEEXTENSIONID lpExtensionID None,DWORD dwRequestMode None,LPVARSTRING lpExtensionName None,LPDWORD lpdwPriority None)
LONG WINAPI tapi32.lineGetAppPriorityW(LPCSTR lpszAppFilename None,DWORD dwMediaMode None,LPLINEEXTENSIONID lpExtensionID None,DWORD dwRequestMode None,LPVARSTRING lpExtensionName None,LPDWORD lpdwPriority None)
LONG WINAPI tapi32.lineGetAppPriorityA(LPCSTR lpszAppFilename None,DWORD dwMediaMode None,LPLINEEXTENSIONID lpExtensionID None,DWORD dwRequestMode None,LPVARSTRING lpExtensionName None,LPDWORD lpdwPriority None)
HRESULT None None.GetDocumentStructureResource([out None None,retval] IXpsOMDocumentStructureResource **documentStructureResource)
LONG WINAPI tapi32.lineConfigDialogEdit(DWORD dwDeviceID None,HWND hwndOwner None,LPCSTR lpszDeviceClass None,LPVOID const lpDeviceConfigIn,DWORD dwSize None,LPVARSTRING lpDeviceConfigOut None)
LONG WINAPI tapi32.lineConfigDialogEditW(DWORD dwDeviceID None,HWND hwndOwner None,LPCSTR lpszDeviceClass None,LPVOID const lpDeviceConfigIn,DWORD dwSize None,LPVARSTRING lpDeviceConfigOut None)
LONG WINAPI tapi32.lineConfigDialogEditA(DWORD dwDeviceID None,HWND hwndOwner None,LPCSTR lpszDeviceClass None,LPVOID const lpDeviceConfigIn,DWORD dwSize None,LPVARSTRING lpDeviceConfigOut None)
LONG WINAPI tapi32.lineSetCurrentLocation(HLINEAPP hLineApp None,DWORD dwLocation None)
LONG WINAPI tapi32.lineSetCallTreatment(HCALL hCall None,DWORD dwTreatment None)
LONG WINAPI tapi32.lineSetAppPriority(LPCSTR lpszAppFilename None,DWORD dwMediaMode None,LPLINEEXTENSIONID lpExtensionID None,DWORD dwRequestMode None,LPCSTR lpszExtensionName None,DWORD dwPriority None)
LONG WINAPI tapi32.lineSetAppPriorityW(LPCSTR lpszAppFilename None,DWORD dwMediaMode None,LPLINEEXTENSIONID lpExtensionID None,DWORD dwRequestMode None,LPCSTR lpszExtensionName None,DWORD dwPriority None)
LONG WINAPI tapi32.lineSetAppPriorityA(LPCSTR lpszAppFilename None,DWORD dwMediaMode None,LPLINEEXTENSIONID lpExtensionID None,DWORD dwRequestMode None,LPCSTR lpszExtensionName None,DWORD dwPriority None)
LONG WINAPI tapi32.lineMonitorDigits(HCALL hCall None,DWORD dwDigitModes None)
HRESULT None azroles.OpenRole([in] BSTR bstrRoleName,[in None None,optional] VARIANT varReserved,[out] IAzRole **ppRole)
HRESULT None None.CreatePackageWriterOnStream([in] ISequentialStream *outputStream,[in] BOOL optimizeMarkupSize,[in] XPS_INTERLEAVING interleaving,[in] IOpcPartUri *documentSequencePartName,[in] IXpsOMCoreProperties *coreProperties,[in] IXpsOMImageResource *packageThumbnail,[in] IXpsOMPrintTicketResource *documentSequencePrintTicket,[in] IOpcPartUri *discardControlPartName,[out None None,retval] IXpsOMPackageWriter **packageWriter)
HRESULT WINAPI dwmapi.DwmQueryThumbnailSourceSize(HTHUMBNAIL hThumbnail None,_Out_ PSIZE pSize)
LONG WINAPI tapi32.lineGetAgentActivityList(HLINE hLine None,DWORD dwAddressID None,LPLINEAGENTACTIVITYLIST lpAgentActivityList None)
LONG WINAPI tapi32.lineGetAgentActivityListW(HLINE hLine None,DWORD dwAddressID None,LPLINEAGENTACTIVITYLIST lpAgentActivityList None)
LONG WINAPI tapi32.lineGetAgentActivityListA(HLINE hLine None,DWORD dwAddressID None,LPLINEAGENTACTIVITYLIST lpAgentActivityList None)
HRESULT None azroles.InitializeClientContextFromName([in] BSTR ClientName,[in None None,optional] BSTR DomainName,[in None None,optional] VARIANT varReserved,[out] IAzClientContext **ppClientContext)
HRESULT WINAPI dwmapi.DwmGetGraphicsStreamClient(UINT uIndex None,_Out_ UUID *pClientUuid)
HRESULT WINAPI dwmapi.DwmSetWindowAttribute(HWND hwnd None,DWORD dwAttribute None,_In_ LPCVOID pvAttribute,DWORD cbAttribute None)
LONG WINAPI tapi32.lineInitialize(LPHLINEAPP lphLineApp None,HINSTANCE hInstance None,LINECALLBACK lpfnCallback None,LPCSTR lpszAppName None,LPDWORD lpdwNumDevs None)
LONG WINAPI tapi32.lineHandoff(HCALL hCall None,LPCSTR lpszFileName None,DWORD dwMediaMode None)
LONG WINAPI tapi32.lineHandoffW(HCALL hCall None,LPCSTR lpszFileName None,DWORD dwMediaMode None)
LONG WINAPI tapi32.lineHandoffA(HCALL hCall None,LPCSTR lpszFileName None,DWORD dwMediaMode None)
HRESULT None None.GetCurrent([out None None,retval] IOpcSignatureCustomObject **customObject)
HRESULT None None.SetStrokeBrushLookup([in] LPCWSTR lookup)
LONG WINAPI tapi32.lineSetAgentActivity(HLINE hLine None,DWORD dwAddressID None,DWORD dwActivityID None)
HRESULT None explorerframe.SetProgressValue([in] HWND hwnd,[in] ULONGLONG ullCompleted,[in] ULONGLONG ullTotal)
HRESULT None None.GetNamespaces([out] LPCWSTR **prefixes,[out] LPCWSTR **namespaces,[out] UINT32 *count)
HRESULT None None.SetCreated([in] SYSTEMTIME *created)
HRESULT None azroles.DeletePolicyReader([in] BSTR bstrReader,[in None None,optional] VARIANT varReserved)
LONG WINAPI tapi32.lineProxyMessage(HLINE hLine None,HCALL hCall None,DWORD dwMsg None,DWORD dwParam1 None,DWORD dwParam2 None,DWORD dwParam3 None)
HRESULT WINAPI dwmapi.DwmGetGraphicsStreamClient(UINT uIndex None,_Out_ UUID *pClientUuid)
short None None.GET_NCHITTEST_WPARAM(WPARAM wParam None)
HRESULT None shell32.InsertMenusSB(HMENU hmenuShared None,LPOLEMENUGROUPWIDTHS lpMenuWidths None)
HRESULT None azroles.SetProperty([in] LONG lPropId,[in] VARIANT varProp,[in None None,optional] VARIANT varReserved)
HRESULT WINAPI dwmapi.DwmModifyPreviousDxFrameDuration(HWND hwnd None,INT cRefreshes None,BOOL fRelative None)
LONG WINAPI tapi32.tapiGetLocationInfo(LPSTR lpszCountryCode None,LPSTR lpszCityCode None)
LONG WINAPI tapi32.tapiGetLocationInfoW(LPSTR lpszCountryCode None,LPSTR lpszCityCode None)
LONG WINAPI tapi32.tapiGetLocationInfoA(LPSTR lpszCountryCode None,LPSTR lpszCityCode None)
int None None.GET_KEYSTATE_WPARAM(WPARAM wParam None)
HRESULT None None.GetSignaturePartName([out None None,retval] IOpcPartUri **signaturePartName)
HRESULT None None.GetSignatureRelationshipReferenceSet([out None None,retval] IOpcSignatureRelationshipReferenceSet **relationshipReferenceSet)
LONG TSPIAPI None.TSPI_providerInstall(HWND hwndOwner None,DWORD dwPermanentProviderID None)
LONG WINAPI tapi32.phoneNegotiateExtVersion(HPHONEAPP hPhoneApp None,DWORD dwDeviceID None,DWORD dwAPIVersion None,DWORD dwExtLowVersion None,DWORD dwExtHighVersion None,LPDWORD lpdwExtVersion None)
HRESULT None None.GetDictionaryLocal([out None None,retval] IXpsOMDictionary **resourceDictionary)
HRESULT None None.GetCount([out None None,retval] UINT32 *count)
LONG WINAPI tapi32.phoneInitialize(LPHPHONEAPP lphPhoneApp None,HINSTANCE hInstance None,PHONECALLBACK lpfnCallback None,LPCSTR lpszAppName None,LPDWORD lpdwNumDevs None)
LRESULT APIENTRY None.MainWndProc(HWND hwndMain None,UINT uMsg None,WPARAM wParam None,LPARAM lParam None)
HRESULT None None.GetEmbeddingOption([out None None,retval] XPS_FONT_EMBEDDING *embeddingOption)
LONG WINAPI tapi32.lineInitialize(LPHLINEAPP lphLineApp None,HINSTANCE hInstance None,LINECALLBACK lpfnCallback None,LPCSTR lpszAppName None,LPDWORD lpdwNumDevs None)
HRESULT None None.SetContent([in] IStream *sourceStream,[in] XPS_FONT_EMBEDDING embeddingOption,[in] IOpcPartUri *partName)
HRESULT None tapi3.GenerateDigits([in] BSTR pDigits,[in] TAPI_DIGITMODE DigitMode)
HRESULT WINAPI dwmapi.DwmRegisterThumbnail(HWND hwndDestination None,HWND hwndSource None,_Out_ PHTHUMBNAIL phThumbnailId)
HRESULT None msftedit.GetCharRep([out None None,retval] long *pValue)
LONG WINAPI tapi32.lineInitialize(LPHLINEAPP lphLineApp None,HINSTANCE hInstance None,LINECALLBACK lpfnCallback None,LPCSTR lpszAppName None,LPDWORD lpdwNumDevs None)
LONG WINAPI tapi32.lineNegotiateAPIVersion(HLINEAPP hLineApp None,DWORD dwDeviceID None,DWORD dwAPILowVersion None,DWORD dwAPIHighVersion None,LPDWORD lpdwAPIVersion None,LPLINEEXTENSIONID lpExtensionID None)
HRESULT None None.CreateDocument([in] IOpcPartUri *partUri,[out None None,retval] IXpsOMDocument **document)
LONG WINAPI tapi32.phoneShutdown(HPHONEAPP hPhoneApp None)
LONG WINAPI tapi32.lineNegotiateExtVersion(HLINEAPP hLineApp None,DWORD dwDeviceID None,DWORD dwAPIVersion None,DWORD dwExtLowVersion None,DWORD dwExtHighVersion None,LPDWORD lpdwExtVersion None)
HRESULT None None.GetClipGeometryLocal([out None None,retval] IXpsOMGeometry **clipGeometry)
HRESULT None azroles.get_CanBeDelegated([out] BOOL *pfProp)
HRESULT None None.GetSignaturePartReferenceSet([out None None,retval] IOpcSignaturePartReferenceSet **partReferenceSet)
HRESULT WINAPI dwmapi.DwmFlush(void None None)
HRESULT None None.GetSignatureValue([out] UINT8 **signatureValue,[out] UINT32 *count)
HRESULT None None.SetDictionaryLocal([in] IXpsOMDictionary *resourceDictionary)
HRESULT None None.CreatePartUri([in] LPCWSTR uri,[out None None,retval] IOpcPartUri **partUri)
HRESULT None None.SetSecurity([in] SECURITY_INFORMATION SecurityInformation,[in] PSECURITY_DESCRIPTOR pSecurityDescriptor)
LONG WINAPI tapi32.lineGetLineDevStatus(HLINE hLine None,LPLINEDEVSTATUS lpLineDevStatus None)
LONG WINAPI tapi32.lineGetLineDevStatusW(HLINE hLine None,LPLINEDEVSTATUS lpLineDevStatus None)
LONG WINAPI tapi32.lineGetLineDevStatusA(HLINE hLine None,LPLINEDEVSTATUS lpLineDevStatus None)
HRESULT WINAPI dwmapi.DwmGetColorizationColor(_Out_ DWORD *pcrColorization,_Out_ BOOL *pfOpaqueBlend)
HRESULT None None.GetClipGeometry([out None None,retval] IXpsOMGeometry **clipGeometry)
LONG WINAPI tapi32.lineInitialize(LPHLINEAPP lphLineApp None,HINSTANCE hInstance None,LINECALLBACK lpfnCallback None,LPCSTR lpszAppName None,LPDWORD lpdwNumDevs None)
HRESULT WINAPI dwmapi.DwmGetWindowAttribute(HWND hwnd None,DWORD dwAttribute None,_Out_ PVOID pvAttribute,DWORD cbAttribute None)
LONG None tapi32.lineGetQueueInfo(HLINE hLine None,DWORD dwQueueID None,LPLINEQUEUEINFO lpLineQueueInfo None)
HRESULT None None.GetXml([out] UINT8 **xmlMarkup,[out] UINT32 *count)
HRESULT None None.GetHyperlinkNavigateUri([out None None,retval] IUri **hyperlinkUri)
LONG None tapi32.lineGetAgentInfo(HLINE hLine None,HAGENT hAgent None,LPLINEAGENTINFO lpAgentInfo None)
HRESULT None azroles.DeletePropertyItem([in] LONG lPropId,[in] VARIANT varProp,[in None None,optional] VARIANT varReserved)
LONG WINAPI tapi32.lineAgentSpecific(HLINE hLine None,DWORD dwAddressID None,DWORD dwAgentExtensionIDIndex None,LPVOID lpParams None,DWORD dwSize None)
HRESULT None azroles.get_Roles([out] IAzRoles **ppRoleCollection)
HRESULT None azroles.CreateApplicationGroup([in] BSTR bstrGroupName,[in None None,optional] VARIANT varReserved,[out] IAzApplicationGroup **ppGroup)
LONG None tapi32.lineCreateAgentSession(HLINE hLine None,HAGENT hAgent None,LPWSTR lpszAgentPIN None,DWORD dwWorkingAddressID None,LPGUID lpGroupID None,LPHAGENTSESSION lphAgentSession None)
LONG None tapi32.lineCreateAgentSessionW(HLINE hLine None,HAGENT hAgent None,LPWSTR lpszAgentPIN None,DWORD dwWorkingAddressID None,LPGUID lpGroupID None,LPHAGENTSESSION lphAgentSession None)
LONG None tapi32.lineCreateAgentSessionA(HLINE hLine None,HAGENT hAgent None,LPWSTR lpszAgentPIN None,DWORD dwWorkingAddressID None,LPGUID lpGroupID None,LPHAGENTSESSION lphAgentSession None)
HRESULT None tapi3.HandoffIndirect([in] long lMediaType)
HRESULT None None.CreateDocumentSequence([in] IOpcPartUri *partUri,[out None None,retval] IXpsOMDocumentSequence **documentSequence)
LONG None tapi32.lineSetAgentSessionState(HLINE hLine None,HAGENTSESSION hAgentSession None,DWORD dwAgentSessionState None,DWORD dwNextAgentSessionState None)
HRESULT WINAPI dwmapi.DwmSetIconicThumbnail(_In_ HWND hwnd,_In_ HBITMAP hbmp,_In_ DWORD dwSITFlags)
HRESULT WINAPI dwmapi.DwmDetachMilContent(_In_ HWND hwnd)
LONG None tapi32.lineGetAgentSessionInfo(HLINE hLine None,HAGENTSESSION hAgentSession None,LPLINEAGENTSESSIONINFO lpAgentSessionInfo None)
HRESULT None msftedit.SetCellAlignment([in] long Value)
LONG WINAPI tapi32.linePickup(HLINE hLine None,DWORD dwAddressID None,LPHCALL lphCall None,LPCSTR lpszDestAddress None,LPCSTR lpszGroupID None)
LONG WINAPI tapi32.linePickupW(HLINE hLine None,DWORD dwAddressID None,LPHCALL lphCall None,LPCSTR lpszDestAddress None,LPCSTR lpszGroupID None)
LONG WINAPI tapi32.linePickupA(HLINE hLine None,DWORD dwAddressID None,LPHCALL lphCall None,LPCSTR lpszDestAddress None,LPCSTR lpszGroupID None)
LONG WINAPI tapi32.phoneGetDevCaps(HPHONEAPP hPhoneApp None,DWORD dwDeviceID None,DWORD dwAPIVersion None,DWORD dwExtVersion None,LPPHONECAPS lpPhoneCaps None)
LONG WINAPI tapi32.phoneGetDevCapsW(HPHONEAPP hPhoneApp None,DWORD dwDeviceID None,DWORD dwAPIVersion None,DWORD dwExtVersion None,LPPHONECAPS lpPhoneCaps None)
LONG WINAPI tapi32.phoneGetDevCapsA(HPHONEAPP hPhoneApp None,DWORD dwDeviceID None,DWORD dwAPIVersion None,DWORD dwExtVersion None,LPPHONECAPS lpPhoneCaps None)
LONG None tapi32.lineSetQueueMeasurementPeriod(HLINE hLine None,DWORD dwQueueID None,DWORD dwMeasurementPeriod None)
HRESULT None None.GetXml([out] UINT8 **xmlMarkup,[out] UINT32 *count)
HRESULT None tapi3.HandoffDirect([in] BSTR pApplicationName)
HRESULT None azroles.InitializeClientContextFromStringSid([in] BSTR SidString,[in] LONG lOptions,[in None None,optional] VARIANT varReserved,[out] IAzClientContext **ppClientContext)
LONG WINAPI tapi32.phoneNegotiateAPIVersion(HPHONEAPP hPhoneApp None,DWORD dwDeviceID None,DWORD dwAPILowVersion None,DWORD dwAPIHighVersion None,LPDWORD lpdwAPIVersion None,LPPHONEEXTENSIONID lpExtensionID None)
WINOLEAPI None ole32.OleConvertOLESTREAMToIStorageEx(_In_ LPOLESTREAM lpolestm,_Out_ IStorage *pstg,_Out_ CLIPFORMAT *pcfFormat,_Out_ LONG *plWidth,_Out_ LONG *plHeight,_Out_ DWORD *pdwSize,_Out_ STGMEDIUM pmedium)
LONG WINAPI tapi32.lineGetAgentStatus(HLINE hLine None,DWORD dwAddressID None,LPLINEAGENTSTATUS lpAgentStatus None)
LONG WINAPI tapi32.lineGetAgentStatusW(HLINE hLine None,DWORD dwAddressID None,LPLINEAGENTSTATUS lpAgentStatus None)
LONG WINAPI tapi32.lineGetAgentStatusA(HLINE hLine None,DWORD dwAddressID None,LPLINEAGENTSTATUS lpAgentStatus None)
HRESULT None azroles.CreateRole([in] BSTR bstrRoleName,[in None None,optional] VARIANT varReserved,[out] IAzRole **ppRole)
HRESULT WINAPI dwmapi.DwmEnableMMCSS(BOOL fEnableMMCSS None)
LONG WINAPI tapi32.lineProxyResponse(HLINE hLine None,LPLINEPROXYREQUEST lpProxyRequest None,DWORD dwResult None)
WINOLEAPI None ole32.ReadClassStg(_In_ IStorage *pStg,_Out_ CLSID *pclsid)
HRESULT None azroles.AddPolicyAdministratorName([in] BSTR bstrAdmin,[in None None,optional] VARIANT varReserved)
LONG WINAPI tapi32.phoneGetStatusMessages(HPHONE hPhone None,LPDWORD lpdwPhoneStates None,LPDWORD lpdwButtonModes None,LPDWORD lpdwButtonStates None)
LONG WINAPI tapi32.phoneInitializeEx(LPHPHONEAPP lphPhoneApp None,HINSTANCE hInstance None,PHONECALLBACK lpfnCallback None,LPCSTR lpszFriendlyAppName None,LPDWORD lpdwNumDevs None,LPDWORD lpdwAPIVersion None,LPPHONEINITIALIZEEXPARAMS lpPhoneInitializeExParams None)
LONG WINAPI tapi32.phoneInitializeExW(LPHPHONEAPP lphPhoneApp None,HINSTANCE hInstance None,PHONECALLBACK lpfnCallback None,LPCSTR lpszFriendlyAppName None,LPDWORD lpdwNumDevs None,LPDWORD lpdwAPIVersion None,LPPHONEINITIALIZEEXPARAMS lpPhoneInitializeExParams None)
LONG WINAPI tapi32.phoneInitializeExA(LPHPHONEAPP lphPhoneApp None,HINSTANCE hInstance None,PHONECALLBACK lpfnCallback None,LPCSTR lpszFriendlyAppName None,LPDWORD lpdwNumDevs None,LPDWORD lpdwAPIVersion None,LPPHONEINITIALIZEEXPARAMS lpPhoneInitializeExParams None)
LONG WINAPI tapi32.lineGetTranslateCaps(HLINEAPP hLineApp None,DWORD dwAPIVersion None,LPLINETRANSLATECAPS lpTranslateCaps None)
LONG WINAPI tapi32.lineGetTranslateCapsW(HLINEAPP hLineApp None,DWORD dwAPIVersion None,LPLINETRANSLATECAPS lpTranslateCaps None)
LONG WINAPI tapi32.lineGetTranslateCapsA(HLINEAPP hLineApp None,DWORD dwAPIVersion None,LPLINETRANSLATECAPS lpTranslateCaps None)
HRESULT None None.GetSignatureRelationshipReferenceSet([out None None,retval] IOpcSignatureRelationshipReferenceSet **relationshipReferenceSet)
HRESULT None azroles.AddPolicyAdministrator([in] BSTR bstrAdmin,[in None None,optional] VARIANT varReserved)
int None None.AddMetadata(DRMPUBHANDLE* phIssuanceLicense None)
HRESULT None None.GetCurrent([out None None,retval] IOpcSignatureRelationshipReference **relationshipReference)
HRESULT WINAPI dwmapi.DwmDetachMilContent(_In_ HWND hwnd)
void CALLBACK None.CompletionProc(DRV_REQUESTID dwRequestID None,LONG lResult None)
HRESULT None azroles.get__NewEnum(LPUNKNOWN *ppEnumPtr None)
WINOLEAPI None ole32.CreateStreamOnHGlobal(_In_ HGLOBAL hGlobal,_In_ BOOL fDeleteOnRelease,_Out_ LPSTREAM *ppstm)
HRESULT None tapi3.GetDevConfig([in] BSTR pDeviceClass,[out] DWORD *pdwSize,[out] BYTE **ppDeviceConfig)
LONG WINAPI tapi32.phoneGetVolume(HPHONE hPhone None,DWORD dwHookSwitchDev None,LPDWORD lpdwVolume None)
LONG WINAPI tapi32.phoneGetData(HPHONE hPhone None,DWORD dwDataID None,LPVOID lpData None,DWORD dwSize None)
HRESULT None azroles.AddApplicationGroups([in] VARIANT varApplicationGroups)
HRESULT None azroles.get_Item([in] LONG Index,VARIANT *pvarObtPtr None)
DWMAPI None dwmapi.DwmTetherContact(DWORD dwPointerID None,BOOL fEnable None,POINT ptTether None)
LONG WINAPI tapi32.phoneGetButtonInfo(HPHONE hPhone None,DWORD dwButtonLampID None,LPPHONEBUTTONINFO lpButtonInfo None)
LONG WINAPI tapi32.phoneGetButtonInfoW(HPHONE hPhone None,DWORD dwButtonLampID None,LPPHONEBUTTONINFO lpButtonInfo None)
LONG WINAPI tapi32.phoneGetButtonInfoA(HPHONE hPhone None,DWORD dwButtonLampID None,LPPHONEBUTTONINFO lpButtonInfo None)
BOOL WINAPI dwmapi.DwmDefWindowProc(_In_ HWND hwnd,UINT msg None,WPARAM wParam None,LPARAM lParam None,_Out_ LRESULT *plResult)
HRESULT WINAPI dwmapi.DwmSetPresentParameters(HWND hwnd None,_Inout_ DWM_PRESENT_PARAMETERS *pPresentParams)
HRESULT None None.get_ObjectPicker([out] IAzObjectPicker **ppObjectPicker)
HRESULT None tapi3.BlindTransfer([in] BSTR pDestAddress)
HRESULT None tapi3.Pickup([in] BSTR pGroupID)
LONG TSPIAPI None.TSPI_lineGetExtensionID(DWORD dwDeviceID None,DWORD dwTSPIVersion None,LPLINEEXTENSIONID lpExtensionID None)
DWMAPI None dwmapi.DwmRenderGesture(_In_ GESTURE_TYPE gt,_In_ UINT cContacts,_In_ DWORD *pdwPointerID,_In_ POINT *pPoints)
HRESULT None azroles.put_ApplicationData([in] BSTR bstrApplicationData)
HRESULT WINAPI dwmapi.DwmGetGraphicsStreamTransformHint(UINT uIndex None,_Out_ MilMatrix3x2D *pTransform)
LONG WINAPI tapi32.lineSetAgentGroup(HLINE hLine None,DWORD dwAddressID None,LPLINEAGENTGROUPLIST lpAgentGroupList None)
HRESULT WINAPI dwmapi.DwmSetIconicThumbnail(_In_ HWND hwnd,_In_ HBITMAP hbmp,_In_ DWORD dwSITFlags)
HRESULT WINAPI dwmapi.DwmInvalidateIconicBitmaps(_In_ HWND hwnd)
LONG WINAPI tapi32.phoneShutdown(HPHONEAPP hPhoneApp None)
WINOLEAPI None ole32.CreateILockBytesOnHGlobal(_In_ HGLOBAL hGlobal,_In_ BOOL fDeleteOnRelease,_Out_ ILockBytes **ppLkbyt)
HRESULT None None.RoleAssignments([in] BSTR bstrScopeName,[in] VARIANT_BOOL bRecursive,[out] IAzRoleAssignments **ppRoleAssignments)
HRESULT None azroles.CreateOperation([in] BSTR bstrOperationName,[in None None,optional] VARIANT varReserved,[out] IAzOperation **ppOperation)
LONG WINAPI tapi32.lineSetAgentState(HLINE hLine None,DWORD dwAddressID None,DWORD dwAgentState None,DWORD dwNextAgentState None)
HRESULT None azroles.DeletePolicyAdministrator([in] BSTR bstrAdmin,[in None None,optional] VARIANT varReserved)
HRESULT None azroles.DeleteApplicationGroup([in] BSTR bstrGroupName,[in None None,optional] VARIANT varReserved)
HRESULT None None.GetCount([out None None,retval] UINT32 *count)
HRESULT None None.GetCustomObjectEnumerator([out None None,retval] IOpcSignatureCustomObjectEnumerator **customObjectEnumerator)
HRESULT None azroles.OpenOperation([in] BSTR bstrOperationName,[in None None,optional] VARIANT varReserved,[out] IAzOperation **ppOperation)
HRESULT None azroles.get_PolicyReaders([out] VARIANT *pvarReaders)
HRESULT None azroles.put_RoleForAccessCheck([in] BSTR bstrProp)
HRESULT None azroles.Submit([in] LONG lFlags,[in None None,optional] VARIANT varReserved)
HRESULT None tapi3.Connect([in] VARIANT_BOOL fSync)
LRESULT APIENTRY None.MainWndProc(HWND hwndMain None,UINT uMsg None,WPARAM wParam None,LPARAM lParam None)
HRESULT None azroles.get_ApplicationGroups([out] IAzApplicationGroups **ppGroupCollection)
HRESULT None azroles.get_Tasks([out] IAzTasks **ppTaskCollection)
DWORD None rasapi32.RasEnumDevices(_In_ LPRASDEVINFO lpRasDevInfo,_Inout_ LPDWORD lpcb,_Out_ LPDWORD lpcDevices)
DWORD None rasapi32.RasEnumDevicesW(_In_ LPRASDEVINFO lpRasDevInfo,_Inout_ LPDWORD lpcb,_Out_ LPDWORD lpcDevices)
DWORD None rasapi32.RasEnumDevicesA(_In_ LPRASDEVINFO lpRasDevInfo,_Inout_ LPDWORD lpcb,_Out_ LPDWORD lpcDevices)
HRESULT None None.MovePrevious([out None None,retval] BOOL *hasPrevious)
HRESULT None None.Delete([in] IOpcSignatureReference *reference)
HRESULT None azroles.AddPropertyItem([in] LONG lPropId,[in] VARIANT varProp,[in None None,optional] VARIANT varReserved)
LONG WINAPI tapi32.phoneGetRing(HPHONE hPhone None,LPDWORD lpdwRingMode None,LPDWORD lpdwVolume None)
HRESULT None azroles.CreateRoleAssignment([in] BSTR bstrRoleAssignmentName,[out] IAzRoleAssignment **ppRoleAssignment)
HRESULT None None.GetOperations([in] BSTR bstrScopeName,[out] IAzOperations **ppOperationCollection)
LONG WINAPI tapi32.phoneSetButtonInfo(HPHONE hPhone None,DWORD dwButtonLampID None,LPPHONEBUTTONINFO const lpButtonInfo)
LONG WINAPI tapi32.phoneSetButtonInfoW(HPHONE hPhone None,DWORD dwButtonLampID None,LPPHONEBUTTONINFO const lpButtonInfo)
LONG WINAPI tapi32.phoneSetButtonInfoA(HPHONE hPhone None,DWORD dwButtonLampID None,LPPHONEBUTTONINFO const lpButtonInfo)
HRESULT None None.GetContentType([out None None,retval] LPCWSTR *contentType)
HRESULT WINAPI dwmapi.DwmEnableComposition(UINT uCompositionAction None)
HRESULT WINAPI dwmapi.DwmUnregisterThumbnail(HTHUMBNAIL hThumbnailId None)
LONG None tapi32.lineGetQueueList(HLINE hLine None,LPGUID lpGroupID None,LPLINEQUEUELIST lpQueueList None)
LONG None tapi32.lineGetQueueListW(HLINE hLine None,LPGUID lpGroupID None,LPLINEQUEUELIST lpQueueList None)
LONG None tapi32.lineGetQueueListA(HLINE hLine None,LPGUID lpGroupID None,LPLINEQUEUELIST lpQueueList None)
HRESULT None ole32.StgCreatePropSetStg(_In_ IStorage *pStorage,DWORD dwReserved None,_Out_ IPropertySetStorage **ppPropSetStg)
HRESULT None tapi3.SetMediaType([in] long lMediaType)
HRESULT None azroles.SetProperty([in] LONG lPropId,[in] VARIANT varProp,[in None None,optional] VARIANT varReserved)
HRESULT None azroles.CreateRole([in] BSTR bstrRoleName,[in None None,optional] VARIANT varReserved,[out] IAzRole **ppRole)
HRESULT WINAPI dwmapi.DwmSetIconicThumbnail(_In_ HWND hwnd,_In_ HBITMAP hbmp,_In_ DWORD dwSITFlags)
HRESULT None azroles.get_RoleDefinitions([out] IAzRoleDefinitions **ppRoleDefs)
HRESULT None azroles.AddPolicyReaderName([in] BSTR bstrReader,[in None None,optional] VARIANT varReserved)
HRESULT None shell32.OnViewWindowActive(IShellView *ppshv None)
LONG WINAPI tapi32.tapiRequestMakeCall(LPCSTR lpszDestAddress None,LPCSTR lpszAppName None,LPCSTR lpszCalledParty None,LPCSTR lpszComment None)
LONG WINAPI tapi32.tapiRequestMakeCallW(LPCSTR lpszDestAddress None,LPCSTR lpszAppName None,LPCSTR lpszCalledParty None,LPCSTR lpszComment None)
LONG WINAPI tapi32.tapiRequestMakeCallA(LPCSTR lpszDestAddress None,LPCSTR lpszAppName None,LPCSTR lpszCalledParty None,LPCSTR lpszComment None)
HRESULT WINAPI dwmapi.DwmDetachMilContent(_In_ HWND hwnd)
int None None.GET_XBUTTON_WPARAM(WPARAM wParam None)
WINOLEAPI None ole32.ReadFmtUserTypeStg(_In_ IStorage *pStg,_Out_ CLIPFORMAT *pcf,_Out_ LPWSTR *lplpszUserType)
HRESULT None azroles.DeleteDelegatedPolicyUserName([in] BSTR bstrDelegatedPolicyUser,[in None None,optional] VARIANT varReserved)
HRESULT None None.GetKeywords([out None None,retval] LPWSTR *keywords)
LONG WINAPI tapi32.linePickup(HLINE hLine None,DWORD dwAddressID None,LPHCALL lphCall None,LPCSTR lpszDestAddress None,LPCSTR lpszGroupID None)
LONG WINAPI tapi32.linePickupW(HLINE hLine None,DWORD dwAddressID None,LPHCALL lphCall None,LPCSTR lpszDestAddress None,LPCSTR lpszGroupID None)
LONG WINAPI tapi32.linePickupA(HLINE hLine None,DWORD dwAddressID None,LPHCALL lphCall None,LPCSTR lpszDestAddress None,LPCSTR lpszGroupID None)
LONG WINAPI tapi32.lineSetAgentState(HLINE hLine None,DWORD dwAddressID None,DWORD dwAgentState None,DWORD dwNextAgentState None)
LONG WINAPI tapi32.phoneGetData(HPHONE hPhone None,DWORD dwDataID None,LPVOID lpData None,DWORD dwSize None)
LONG TSPIAPI None.TSPI_lineCreateMSPInstance(HDRVLINE hdLine None,DWORD dwAddressID None,HTAPIMSPLINE htMSPLine None,LPHDRVMSPLINE lphdMSPLine None)
LONG WINAPI tapi32.phoneSetVolume(HPHONE hPhone None,DWORD dwHookSwitchDev None,DWORD dwVolume None)
WINOLEAPI None ole32.ReadClassStg(_In_ IStorage *pStg,_Out_ CLSID *pclsid)
LONG WINAPI tapi32.lineGetAgentCaps(HLINEAPP hLineApp None,DWORD dwDeviceID None,DWORD dwAddressID None,DWORD dwAppAPIVersion None,LPLINEAGENTCAPS lpAgentCaps None)
LONG WINAPI tapi32.lineGetAgentCapsW(HLINEAPP hLineApp None,DWORD dwDeviceID None,DWORD dwAddressID None,DWORD dwAppAPIVersion None,LPLINEAGENTCAPS lpAgentCaps None)
LONG WINAPI tapi32.lineGetAgentCapsA(HLINEAPP hLineApp None,DWORD dwDeviceID None,DWORD dwAddressID None,DWORD dwAppAPIVersion None,LPLINEAGENTCAPS lpAgentCaps None)
HRESULT None azroles.OpenRoleDefinition([in] BSTR bstrRoleDefinitionName,[out] IAzRoleDefinition **ppRoleDefinitions)
HRESULT None azroles.DeleteRole([in] BSTR bstrRoleName,[in None None,optional] VARIANT varReserved)
HRESULT None None.IsUpdateNeeded([out] VARIANT_BOOL *pbIsUpdateNeeded)
LONG None tapi32.lineSetQueueMeasurementPeriod(HLINE hLine None,DWORD dwQueueID None,DWORD dwMeasurementPeriod None)
HRESULT None azroles.get_Roles([out] IAzRoles **ppRoleCollection)
HRESULT None azroles.get_UserDnsSamCompat([out] BSTR *pbstrProp)
HRESULT None azroles.CreateApplicationGroup([in] BSTR bstrGroupName,[in None None,optional] VARIANT varReserved,[out] IAzApplicationGroup **ppGroup)
HRESULT None azroles.DeleteOperation([in] BSTR bstrOperationName,[in None None,optional] VARIANT varReserved)
HRESULT None tapi3.Dial([in] BSTR pDestAddress)
LONG WINAPI tapi32.phoneGetID(HPHONE hPhone None,LPVARSTRING lpDeviceID None,LPCSTR lpszDeviceClass None)
LONG WINAPI tapi32.phoneGetIDW(HPHONE hPhone None,LPVARSTRING lpDeviceID None,LPCSTR lpszDeviceClass None)
LONG WINAPI tapi32.phoneGetIDA(HPHONE hPhone None,LPVARSTRING lpDeviceID None,LPCSTR lpszDeviceClass None)
DWMAPI None dwmapi.DwmShowContact(DWORD dwPointerID None,DWM_SHOWCONTACT eShowContact None)
LONG WINAPI tapi32.lineGetConfRelatedCalls(HCALL hCall None,LPLINECALLLIST lpCallList None)
DWMAPI None dwmapi.DwmShowContact(DWORD dwPointerID None,DWM_SHOWCONTACT eShowContact None)
HRESULT None azroles.get_Item([in] LONG Index,VARIANT *pvarObtPtr None)
LONG WINAPI tapi32.phoneSetLamp(HPHONE hPhone None,DWORD dwButtonLampID None,DWORD dwLampMode None)
HRESULT None shell32.GetControlWindow(UINT id None,HWND *lphwnd None)
HRESULT WINAPI dwmapi.DwmGetCompositionTimingInfo(HWND hwnd None,_Out_ DWM_TIMING_INFO *pTimingInfo)
HRESULT None azroles.Submit([in] LONG lFlags,[in None None,optional] VARIANT varReserved)
LONG WINAPI tapi32.phoneGetDisplay(HPHONE hPhone None,LPVARSTRING lpDisplay None)
HRESULT None None.GetTasks([in] BSTR bstrScopeName,[out] IAzTasks **ppTaskCollection)
HRESULT WINAPI dwmapi.DwmDetachMilContent(_In_ HWND hwnd)
LONG None tapi32.lineGetAgentSessionInfo(HLINE hLine None,HAGENTSESSION hAgentSession None,LPLINEAGENTSESSIONINFO lpAgentSessionInfo None)
HRESULT None tapi3.SetForwardType([in] long ForwardType,[in] BSTR pDestAddress,[in] BSTR pCallerAddress)
HRESULT None azroles.AddPolicyAdministrator([in] BSTR bstrAdmin,[in None None,optional] VARIANT varReserved)
HRESULT None azroles.put_ApplyStoreSacl([in] BOOL bProp)
HRESULT None tapi3.get_Event([out] PARTICIPANT_EVENT *pParticipantEvent)
HRESULT None shell32.Init([in] HWND hwndEdit,[in] IUnknown *punkACL,[in None None,optional] LPCWSTR pwszRegKeyPath,[in None None,optional] LPCWSTR pwszQuickComplete)
HRESULT None ole32.StgCreateDocfileOnILockBytes(_In_ ILockBytes *plkbyt,_In_ DWORD grfMode,_In_ DWORD reserved,_Out_ IStorage **ppstgOpen)
LONG TSPIAPI None.TSPI_lineSetTerminal(DRV_REQUESTID dwRequestID None,HDRVLINE hdLine None,DWORD dwAddressID None,HDRVCALL hdCall None,DWORD dwSelect None,DWORD dwTerminalModes None,DWORD dwTerminalID None,DWORD bEnable None)
HRESULT None azroles.GetRoles([in None None,optional] BSTR bstrScopeName,[out] VARIANT *pvarRoleNames)
HRESULT WINAPI dwmapi.DwmGetCompositionTimingInfo(HWND hwnd None,_Out_ DWM_TIMING_INFO *pTimingInfo)
LONG TSPIAPI None.TSPI_lineSetupConference(DRV_REQUESTID dwRequestID None,HDRVCALL hdCall None,HDRVLINE hdLine None,HTAPICALL htConfCall None,LPHDRVCALL lphdConfCall None,HTAPICALL htConsultCall None,LPHDRVCALL lphdConsultCall None,DWORD dwNumParties None,LPLINECALLPARAMS const lpCallParams)
HRESULT None azroles.Submit([in] LONG lFlags,[in None None,optional] VARIANT varReserved)
LONG WINAPI tapi32.phoneGetButtonInfo(HPHONE hPhone None,DWORD dwButtonLampID None,LPPHONEBUTTONINFO lpButtonInfo None)
LONG WINAPI tapi32.phoneGetButtonInfoW(HPHONE hPhone None,DWORD dwButtonLampID None,LPPHONEBUTTONINFO lpButtonInfo None)
LONG WINAPI tapi32.phoneGetButtonInfoA(HPHONE hPhone None,DWORD dwButtonLampID None,LPPHONEBUTTONINFO lpButtonInfo None)
HRESULT None azroles.get_PolicyAdministratorsName([out] VARIANT *pvarAdmins)
HRESULT None None.GetEnumerator([out None None,retval] IOpcRelationshipEnumerator **relationshipEnumerator)
HRESULT None azroles.GetProperty([in] LONG lPropId,[in None None,optional] VARIANT varReserved,[out] VARIANT *pvarProp)
HRESULT None azroles.DeletePolicyAdministratorName([in] BSTR bstrAdmin,[in None None,optional] VARIANT varReserved)
HRESULT None ole32.StgCreatePropSetStg(_In_ IStorage *pStorage,DWORD dwReserved None,_Out_ IPropertySetStorage **ppPropSetStg)
LONG TSPIAPI None.TSPI_phoneOpen(DWORD dwDeviceID None,HTAPIPHONE htPhone None,LPHDRVPHONE lphdPhone None,DWORD dwTSPIVersion None,PHONEEVENT lpfnEventProc None)
HRESULT None tapi3.SetDevConfig([in] BSTR pDeviceClass,[in] DWORD dwSize,[in] BYTE *pDeviceConfig)
HRESULT None azroles.get_UserDn([out] BSTR *pbstrProp)
HRESULT None None.get_BizRuleInterfaces([out] IAzBizRuleInterfaces **ppBizRuleInterfaces)
HRESULT None tapi3.Clone([out] IEnumAddress **ppEnum)
HRESULT None azroles.get_UserCanonical([out] BSTR *pbstrProp)
HRESULT None azroles.AddDelegatedPolicyUserName([in] BSTR bstrDelegatedPolicyUser,[in None None,optional] VARIANT varReserved)
HRESULT None None.get_BizRuleParameters([out] IAzBizRuleParameters **ppBizRuleParam)
LONG TSPIAPI None.TSPI_lineSecureCall(DRV_REQUESTID dwRequestID None,HDRVCALL hdCall None)
LONG WINAPI tapi32.lineDevSpecific(HLINE hLine None,DWORD dwAddressID None,HCALL hCall None,LPVOID lpParams None,DWORD dwSize None)
DWORD None rasapi32.RasClearLinkStatistics(_In_ HRASCONN hRasConn,_In_ DWORD dwSubEntry)
HRESULT None None.get_Name([out] BSTR *pbstrName)
HRESULT None azroles.DeleteTask([in] BSTR bstrTaskName,[in None None,optional] VARIANT varReserved)
HRESULT None tapi3.Connect([in] VARIANT_BOOL fSync)
HRESULT None azroles.put_BizRuleLanguage([in] BSTR bstrProp)
HRESULT None azroles.CreateTask([in] BSTR bstrTaskName,[in None None,optional] VARIANT varReserved,[out] IAzTask **ppTask)
HRESULT None azroles.DeleteDelegatedPolicyUserName([in] BSTR bstrDelegatedPolicyUser,[in None None,optional] VARIANT varReserved)
LONG WINAPI tapi32.linePickup(HLINE hLine None,DWORD dwAddressID None,LPHCALL lphCall None,LPCSTR lpszDestAddress None,LPCSTR lpszGroupID None)
LONG WINAPI tapi32.linePickupW(HLINE hLine None,DWORD dwAddressID None,LPHCALL lphCall None,LPCSTR lpszDestAddress None,LPCSTR lpszGroupID None)
LONG WINAPI tapi32.linePickupA(HLINE hLine None,DWORD dwAddressID None,LPHCALL lphCall None,LPCSTR lpszDestAddress None,LPCSTR lpszGroupID None)
HRESULT None tapi3.SwapHold([in] ITBasicCallControl *pCall)
HRESULT None shell32.GetAsyncMode([out] BOOL *pfIsOpAsync)
void None None.PropVariantInit(_Out_ PROPVARIANT *pvar)
HRESULT None azroles.OpenApplicationGroup([in] BSTR bstrGroupName,[in None None,optional] VARIANT varReserved,[out] IAzApplicationGroup **ppGroup)
WINOLEAPI None ole32.WriteClassStg(_In_ IStorage *pStg,_In_ REFCLSID rclsid)
HRESULT None ole32.StgOpenPropStg(_In_ IUnknown *pUnk,_In_ REFFMTID fmtid,_In_ DWORD grfFlags,_In_ DWORD dwReserved,_Out_ IPropertyStorage **ppPropStg)
LONG None tapi32.lineCreateAgent(HLINE hLine None,LPWSTR lpszAgentID None,LPWSTR lpszAgentPIN None,LPHAGENT lphAgent None)
LONG None tapi32.lineCreateAgentW(HLINE hLine None,LPWSTR lpszAgentID None,LPWSTR lpszAgentPIN None,LPHAGENT lphAgent None)
LONG None tapi32.lineCreateAgentA(HLINE hLine None,LPWSTR lpszAgentID None,LPWSTR lpszAgentPIN None,LPHAGENT lphAgent None)
LONG WINAPI tapi32.phoneDevSpecific(HPHONE hPhone None,LPVOID lpParams None,DWORD dwSize None)
HANDLE WINAPI kernel32.CreateMailslot(_In_ LPCTSTR lpName,_In_ DWORD nMaxMessageSize,_In_ DWORD lReadTimeout,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes)
HANDLE WINAPI kernel32.CreateMailslotW(_In_ LPCTSTR lpName,_In_ DWORD nMaxMessageSize,_In_ DWORD lReadTimeout,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes)
HANDLE WINAPI kernel32.CreateMailslotA(_In_ LPCTSTR lpName,_In_ DWORD nMaxMessageSize,_In_ DWORD lReadTimeout,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes)
HRESULT None tapi3.get_Locations([out] VARIANT *pVariant)
HRESULT None azroles.CreateTask([in] BSTR bstrTaskName,[in None None,optional] VARIANT varReserved,[out] IAzTask **ppTask)
HRESULT None azroles.get_DelegatedPolicyUsersName([out] VARIANT *pvarDelegatedPolicyUsers)
WINOLEAPI None ole32.SetConvertStg(IStorage *pStg None,BOOL fConvert None)
HRESULT None tapi3.Next([in] ULONG celt,[out] ITCallingCard **ppElements,[out] ULONG *pceltFetched)
HRESULT None azroles.AddDelegatedPolicyUser([in] BSTR bstrDelegatedPolicyUser,[in None None,optional] VARIANT varReserved)
HRESULT None shell32.Enable([in] BOOL fEnable)
LONG WINAPI tapi32.phoneDevSpecific(HPHONE hPhone None,LPVOID lpParams None,DWORD dwSize None)
HRESULT None None.GetSignatureMethod([out None None,retval] LPCWSTR *signatureMethod)
LONG WINAPI tapi32.phoneDevSpecific(HPHONE hPhone None,LPVOID lpParams None,DWORD dwSize None)
HRESULT None azroles.CreateRoleDefinition([in] BSTR bstrRoleDefinitionName,[out] IAzRoleDefinition **ppRoleDefinitions)
LONG TSPIAPI None.TSPI_lineDevSpecificFeature(DRV_REQUESTID dwRequestID None,HDRVLINE hdLine None,DWORD dwFeature None,LPVOID lpParams None,DWORD dwSize None)
LONG TSPIAPI None.TSPI_lineSetCallQualityOfService(DRV_REQUESTID dwRequestID None,HDRVCALL hdCall None,LPVOID lpSendingFlowspec None,DWORD dwSendingFlowspecSize None,LPVOID lpReceivingFlowspec None,DWORD dwReceivingFlowspecSize None)
LONG WINAPI tapi32.phoneDevSpecific(HPHONE hPhone None,LPVOID lpParams None,DWORD dwSize None)
HRESULT None tapi3.Skip([in] ULONG celt)
HRESULT None azroles.get_Operations([out] VARIANT *pvarProp)
HRESULT None azroles.CreateTask([in] BSTR bstrTaskName,[in None None,optional] VARIANT varReserved,[out] IAzTask **ppTask)
LONG TSPIAPI None.TSPI_phoneGetDisplay(HDRVPHONE hdPhone None,LPVARSTRING lpDisplay None)
HRESULT None azroles.get_Count(LONG *plCount None)
LONG WINAPI tapi32.phoneDevSpecific(HPHONE hPhone None,LPVOID lpParams None,DWORD dwSize None)
HRESULT None tapi3.put_CLSID([in] BSTR bstrCLSID)
LONG WINAPI tapi32.phoneDevSpecific(HPHONE hPhone None,LPVOID lpParams None,DWORD dwSize None)
public IInputStream None.GetInputStreamAt(UInt64 position None)
HRESULT None azroles.DeletePropertyItem([in] LONG lPropId,[in] VARIANT varProp,[in None None,optional] VARIANT varReserved)
HRESULT None shell32.BindToHandler(IBindCtx *pbc None,REFGUID rbhid None,REFIID riid None,void **ppvOut None)
HRESULT None tapi3.get_LongestEverWaitTime([out] long *plWaitTime)
LONG WINAPI tapi32.phoneGetGain(HPHONE hPhone None,DWORD dwHookSwitchDev None,LPDWORD lpdwGain None)
HRESULT None azroles.AddPolicyReader([in] BSTR bstrReader,[in None None,optional] VARIANT varReserved)
HRESULT None tapi3.get_TAPIObject([out] ITTAPI **ppTAPIObject)
HRESULT None azroles.OpenApplicationGroup([in] BSTR bstrGroupName,[in None None,optional] VARIANT varReserved,[out] IAzApplicationGroup **ppGroup)
WINOLEAPI None ole32.ReadClassStm(_In_ IStream *pStm,_Out_ CLSID *pclsid)
HRESULT None ole32.SetSize([in] ULARGE_INTEGER cb)
HRESULT None azroles.Submit([in None None,optional] LONG lFlags,[in None None,optional] VARIANT varReserved)
HRESULT None shell32.Init([in] HWND hwndEdit,[in] IUnknown *punkACL,[in None None,optional] LPCWSTR pwszRegKeyPath,[in None None,optional] LPCWSTR pwszQuickComplete)
HRESULT None azroles.DeletePropertyItem([in] LONG lPropId,[in] VARIANT varProp,[in None None,optional] VARIANT varReserved)
HRESULT None ole32.StgOpenPropStg(_In_ IUnknown *pUnk,_In_ REFFMTID fmtid,_In_ DWORD grfFlags,_In_ DWORD dwReserved,_Out_ IPropertyStorage **ppPropStg)
HRESULT None azroles.get_PolicyAdministrators([out] VARIANT *pvarAdmins)
HRESULT None azroles.AddPolicyAdministrator([in] BSTR bstrAdmin,[in None None,optional] VARIANT varReserved)
LONG WINAPI tapi32.phoneDevSpecific(HPHONE hPhone None,LPVOID lpParams None,DWORD dwSize None)
HRESULT None tapi3.get_CallbackInstance([out] long *plCallbackInstance)
HRESULT None tapi3.get_Locations([out] VARIANT *pVariant)
HRESULT None azroles.put_Name([in] BSTR bstrName)
LONG TSPIAPI None.TSPI_lineCompleteTransfer(DRV_REQUESTID dwRequestID None,HDRVCALL hdCall None,HDRVCALL hdConsultCall None,HTAPICALL htConfCall None,LPHDRVCALL lphdConfCall None,DWORD dwTransferMode None)
HRESULT None None.AddInterfaces([in] VARIANT varInterfaceNames,[in] VARIANT varInterfaceFlags,[in] VARIANT varInterfaces)
HRESULT None tapi3.Disconnect([in] DISCONNECT_CODE code)
LONG TSPIAPI None.TSPI_lineGetCallStatus(HDRVCALL hdCall None,LPLINECALLSTATUS lpCallStatus None)
STDAPI None None.DataObj_SetDWORD(IDataObject *pdtobj None,UINT cf None,DWORD dw None)
HRESULT None tapi3.get_ServiceProviderName([out] BSTR *ppName)
LONG TSPIAPI None.TSPI_lineGetAddressStatus(HDRVLINE hdLine None,DWORD dwAddressID None,LPLINEADDRESSSTATUS lpAddressStatus None)
LONG WINAPI tapi32.phoneDevSpecific(HPHONE hPhone None,LPVOID lpParams None,DWORD dwSize None)
LONG TSPIAPI None.TSPI_lineAddToConference(DRV_REQUESTID dwRequestID None,HDRVCALL hdConfCall None,HDRVCALL hdConsultCall None)
HRESULT None tapi3.SwapHold([in] ITBasicCallControl *pCall)
HRESULT None azroles.put_OperationID([in] LONG lProp)
HRESULT None azroles.OpenApplicationGroup([in] BSTR bstrGroupName,[in None None,optional] VARIANT varReserved,[out] IAzApplicationGroup **ppGroup)
HRESULT None azroles.get_PolicyReaders([out] VARIANT *pvarReaders)
HRESULT None tapi3.CreateForwardInfoObject([out] ITForwardInformation **ppForwardInfo)
HRESULT None azroles.CreateTask([in] BSTR bstrTaskName,[in None None,optional] VARIANT varReserved,[out] IAzTask **ppTask)
WINOLEAPI None ole32.StgOpenAsyncDocfileOnIFillLockBytes(_In_ IFillLockBytes *ppflb,_In_ DWORD grfmode,_In_ DWORD asyncFlags,_Out_ IStorage **ppstgOpen)
LONG WINAPI tapi32.phoneGetMessage(HPHONEAPP hPhoneApp None,LPPHONEMESSAGE lpMessage None,DWORD dwTimeout None)
LONG TSPIAPI None.TSPI_linePickup(DRV_REQUESTID dwRequestID None,HDRVLINE hdLine None,DWORD dwAddressID None,HTAPICALL htCall None,LPHDRVCALL lphdCall None,LPCWSTR lpszDestAddress None,LPCWSTR lpszGroupID None)
HRESULT None tapi3.get_Error([out] HRESULT *phrError)
LONG TSPIAPI None.TSPI_lineGatherDigits(HDRVCALL hdCall None,DWORD dwEndToEndID None,DWORD dwDigitModes None,LPWSTR lpsDigits None,DWORD dwNumDigits None,LPCWSTR lpszTerminationDigits None,DWORD dwFirstDigitTimeout None,DWORD dwInterDigitTimeout None)
HRESULT None tapi3.get_Digits([out] BSTR *ppDigits)
LONG WINAPI tapi32.phoneGetLamp(HPHONE hPhone None,DWORD dwButtonLampID None,LPDWORD lpdwLampMode None)
LONG TSPIAPI None.TSPI_lineSetCallData(DRV_REQUESTID dwRequestID None,HDRVCALL hdCall None,LPVOID lpCallData None,DWORD dwSize None)
LONG TSPIAPI None.TSPI_phoneGetDevCaps(DWORD dwDeviceID None,DWORD dwTSPIVersion None,DWORD dwExtVersion None,LPPHONECAPS lpPhoneCaps None)
LONG TSPIAPI None.TSPI_lineGetNumAddressIDs(HDRVLINE hdLine None,LPDWORD lpdwNumAddressIDs None)
BOOL WINAPI kernel32.GetMailslotInfo(_In_ HANDLE hMailslot,_Out_opt_ LPDWORD lpMaxMessageSize,_Out_opt_ LPDWORD lpNextSize,_Out_opt_ LPDWORD lpMessageCount,_Out_opt_ LPDWORD lpReadTimeout)
LONG TSPIAPI None.TSPI_lineConfigDialogEdit(DWORD dwDeviceID None,HWND hwndOwner None,LPCWSTR lpszDeviceClass None,LPVOID const lpDeviceConfigIn,DWORD dwSize None,LPVARSTRING lpDeviceConfigOut None)
HRESULT None azroles.DeleteApplicationGroup([in] BSTR bstrGroupName,[in None None,optional] VARIANT varReserved)
LONG WINAPI tapi32.phoneSetDisplay(HPHONE hPhone None,DWORD dwRow None,DWORD dwColumn None,LPCSTR lpsDisplay None,DWORD dwSize None)
HRESULT None tapi3.Next([in] ULONG celt,[out] ITCallingCard **ppElements,[out] ULONG *pceltFetched)
HRESULT None azroles.AddPolicyReaderName([in] BSTR bstrReader,[in None None,optional] VARIANT varReserved)
HRESULT None azroles.Submit([in None None,optional] LONG lFlags,[in None None,optional] VARIANT varReserved)
LONG TSPIAPI None.TSPI_lineOpen(DWORD dwDeviceID None,HTAPILINE htLine None,LPHDRVLINE lphdLine None,DWORD dwTSPIVersion None,LINEEVENT lpfnEventProc None)
LONG TSPIAPI None.TSPI_lineReleaseUserUserInfo(DRV_REQUESTID dwRequestID None,HDRVCALL hdCall None)
HRESULT None azroles.put_AuthzInterfaceClsid([in] BSTR bstrProp)
HRESULT None ole32.UnlockRegion([in] ULARGE_INTEGER libOffset,[in] ULARGE_INTEGER cb,[in] DWORD dwLockType)
HRESULT None tapi3.get_lParam3([out] long *pParam3)
HRESULT None azroles.put_Name([in] BSTR bstrName)
LONG TSPIAPI None.TSPI_lineSetLineDevStatus(DRV_REQUESTID dwRequestID None,HDRVLINE hdLine None,DWORD dwStatusToChange None,DWORD fStatus None)
HRESULT None azroles.AddPolicyAdministratorName([in] BSTR bstrAdmin,[in None None,optional] VARIANT varReserved)
HRESULT None azroles.put_GenerateAudits([in] BOOL bProp)
HRESULT None tapi3.get_Privilege([out] CALL_PRIVILEGE *pPrivilege)
LONG TSPIAPI None.TSPI_lineDrop(DRV_REQUESTID dwRequestID None,HDRVCALL hdCall None,LPCSTR lpsUserUserInfo None,DWORD dwSize None)
HRESULT None azroles.get_DelegatedPolicyUsers([out] VARIANT *pvarDelegatedPolicyUsers)
WINOLEAPI None ole32.StgIsStorageILockBytes(ILockBytes *plkbyt None)
HRESULT None None.EnumSubCommands([out] IEnumExplorerCommand **ppEnum)
HRESULT None azroles.DeleteScope2([in] BSTR bstrScopeName)
LONG TSPIAPI None.TSPI_lineSetupTransfer(DRV_REQUESTID dwRequestID None,HDRVCALL hdCall None,HTAPICALL htConsultCall None,LPHDRVCALL lphdConsultCall None,LPLINECALLPARAMS const lpCallParams)
LONG WINAPI tapi32.phoneGetStatus(HPHONE hPhone None,LPPHONESTATUS lpPhoneStatus None)
LONG WINAPI tapi32.phoneGetStatusW(HPHONE hPhone None,LPPHONESTATUS lpPhoneStatus None)
LONG WINAPI tapi32.phoneGetStatusA(HPHONE hPhone None,LPPHONESTATUS lpPhoneStatus None)
void PASCAL None.phoneCallbackFunc(HANDLE hDevice None,DWORD dwMsg None,DWORD dwCallbackInstance None,DWORD dwParam1 None,DWORD dwParam2 None,DWORD dwParam3 None)
HRESULT None ole32.Stat([out] STATSTG *pstatstg,[in] DWORD grfStatFlag)
LONG WINAPI tapi32.phoneClose(HPHONE hPhone None)
HRESULT None tapi3.RegisterCallNotifications([in] ITAddress *pAddress,[in] VARIANT_BOOL fMonitor,[in] VARIANT_BOOL fOwner,[in] long lMediaTypes,[in] long lCallbackInstance,[out] long *plRegister)
HRESULT None tapi3.get_lParam2([out] long *pParam2)
LONG TSPIAPI None.TSPI_lineSetCallHubTracking(HDRVLINE hdLine None,LPLINECALLHUBTRACKINGINFO lpTrackingInfo None)
HRESULT None tapi3.Next([in] ULONG celt,[out] ITLocationInfo **ppElements,[out] ULONG *pceltFetched)
HRESULT None tapi3.CreateForwardInfoObject([out] ITForwardInformation **ppForwardInfo)
LONG TSPIAPI None.TSPI_lineGenerateTone(HDRVCALL hdCall None,DWORD dwEndToEndID None,DWORD dwToneMode None,DWORD dwDuration None,DWORD dwNumTones None,LPLINEGENERATETONE const lpTones)
HRESULT None azroles.DeletePolicyReader([in] BSTR bstrReader,[in None None,optional] VARIANT varReserved)
LONG TSPIAPI None.TSPI_lineSelectExtVersion(HDRVLINE hdLine None,DWORD dwExtVersion None)
HRESULT None tapi3.get_Cause([out] CALL_MEDIA_EVENT_CAUSE *pCause)
HRESULT None tapi3.get_CallInfoBuffer([in] CALLINFO_BUFFER CallInfoBuffer,[out] VARIANT *ppCallInfoBuffer)
HRESULT None azroles.AddTask([in] BSTR bstrTask,[in None None,optional] VARIANT varReserved)
HRESULT None tapi3.get_CallInfoLong([in] CALLINFO_LONG CallInfoLong,[out] long *plCallInfoLongVal)
LONG TSPIAPI None.TSPI_lineRemoveFromConference(DRV_REQUESTID dwRequestID None,HDRVCALL hdCall None)
HRESULT None tapi3.get_Call([out] ITCallInfo **ppCall)
HRESULT None azroles.get_PolicyAdministratorsName([out] VARIANT *pvarAdmins)
HRESULT None azroles.put_Description([in] BSTR bstrDescription)
WINOLEAPI None ole32.WriteClassStm(_In_ IStream *pStm,_In_ REFCLSID rclsid)
WINOLEAPI None ole32.OleConvertIStorageToOLESTREAMEx(_In_ IStorage *pStg,_In_ CLIPFORMAT cfFormat,_In_ LONG lWidth,_In_ LONG lHeight,_In_ DWORD dwSize,_In_ STGMEDIUM pmedium,_Out_ LPOLESTREAM lpolestm)
HRESULT None tapi3.get_Call([out] ITCallInfo **ppCallInfo)
HRESULT None None.AddInterface([in] BSTR bstrInterfaceName,[in] LONG lInterfaceFlag,[in] VARIANT varInterface)
HRESULT None None.GetEnumerator([out None None,retval] IOpcRelationshipEnumerator **relationshipEnumerator)
LONG None tapi32.lineSetAgentMeasurementPeriod(HLINE hLine None,HAGENT hAgent None,DWORD dwMeasurementPeriod None)
LONG WINAPI tapi32.phoneGetIcon(DWORD dwDeviceID None,LPCSTR lpszDeviceClass None,LPHICON lphIcon None)
LONG WINAPI tapi32.phoneGetIconW(DWORD dwDeviceID None,LPCSTR lpszDeviceClass None,LPHICON lphIcon None)
LONG WINAPI tapi32.phoneGetIconA(DWORD dwDeviceID None,LPCSTR lpszDeviceClass None,LPHICON lphIcon None)
HRESULT None tapi3.get_TickCount([out] long *plTickCount)
HRESULT None tapi3.get_DigitMode([out] TAPI_DIGITMODE *pDigitMode)
LONG WINAPI tapi32.phoneConfigDialog(DWORD dwDeviceID None,HWND hwndOwner None,LPCSTR lpszDeviceClass None)
LONG WINAPI tapi32.phoneConfigDialogW(DWORD dwDeviceID None,HWND hwndOwner None,LPCSTR lpszDeviceClass None)
LONG WINAPI tapi32.phoneConfigDialogA(DWORD dwDeviceID None,HWND hwndOwner None,LPCSTR lpszDeviceClass None)
LONG WINAPI tapi32.phoneSetHookSwitch(HPHONE hPhone None,DWORD dwHookSwitchDevs None,DWORD dwHookSwitchMode None)
HRESULT None shell32.GetParent(IShellItem **ppsi None)
HRESULT None shlwapi.QISearch(_In_ void *that,_In_ LPCQITAB pqit,_In_ REFIID riid,_Out_ void **ppv)
HRESULT None azroles.DeletePolicyAdministrator([in] BSTR bstrAdmin,[in None None,optional] VARIANT varReserved)
LONG TSPIAPI None.TSPI_lineSetMediaControl(HDRVLINE hdLine None,DWORD dwAddressID None,HDRVCALL hdCall None,DWORD dwSelect None,LPLINEMEDIACONTROLDIGIT const lpDigitList,DWORD dwDigitNumEntries None,LPLINEMEDIACONTROLMEDIA const lpMediaList,DWORD dwMediaNumEntries None,LPLINEMEDIACONTROLTONE const lpToneList,DWORD dwToneNumEntries None,LPLINEMEDIACONTROLCALLSTATE const lpCallStateList,DWORD dwCallStateNumEntries None)
LONG WINAPI tapi32.phoneDevSpecific(HPHONE hPhone None,LPVOID lpParams None,DWORD dwSize None)
HRESULT None None.Remove([in] BSTR bstrInterfaceName)
WINOLEAPI None ole32.StgGetIFillLockBytesOnFile(_In_ OLECHAR *pwcsName,_Out_ IFillLockBytes **ppflb)
HRESULT None azroles.put_Type([in] LONG lProp)
HRESULT None tapi3.get_CallbackInstance([out] long *plCallbackInstance)
LONG TSPIAPI None.TSPI_lineMSPIdentify(DWORD dwDeviceID None,GUID *pCLSID None)
LONG WINAPI tapi32.phoneOpen(HPHONEAPP hPhoneApp None,DWORD dwDeviceID None,LPHPHONE lphPhone None,DWORD dwAPIVersion None,DWORD dwExtVersion None,DWORD_PTR dwCallbackInstance None,DWORD dwPrivilege None)
HRESULT None azroles.DeletePolicyReaderName([in] BSTR bstrReader,[in None None,optional] VARIANT varReserved)
HRESULT None azroles.AddPolicyReaderName([in] BSTR bstrReader,[in None None,optional] VARIANT varReserved)
HANDLE None advapi32.OpenBackupEventLog(_In_ LPCTSTR lpUNCServerName,_In_ LPCTSTR lpFileName)
HANDLE None advapi32.OpenBackupEventLogW(_In_ LPCTSTR lpUNCServerName,_In_ LPCTSTR lpFileName)
HANDLE None advapi32.OpenBackupEventLogA(_In_ LPCTSTR lpUNCServerName,_In_ LPCTSTR lpFileName)
HRESULT None azroles.CreateScope([in] BSTR bstrScopeName,[in None None,optional] VARIANT varReserved,[out] IAzScope **ppScope)
HRESULT None azroles.DeletePolicyAdministratorName([in] BSTR bstrAdmin,[in None None,optional] VARIANT varReserved)
HRESULT None tapi3.CreateCustomToneObject([out] ITCustomTone **ppCustomTone)
HRESULT None azroles.DeletePropertyItem([in] LONG lPropId,[in] VARIANT varProp,[in None None,optional] VARIANT varReserved)
HRESULT None tapi3.get_PreferredPhones([out] VARIANT *pPhones)
HRESULT None azroles.CreateApplication([in] BSTR bstrApplicationName,[in None None,optional] VARIANT varReserved,[out] IAzApplication **ppApplication)
HRESULT None None.SetData([in] FORMATETC *pformatetc,[in] STGMEDIUM *pmedium,[in] BOOL fRelease)
HRESULT None azroles.get_UserGuid([out] BSTR *pbstrProp)
LONG TSPIAPI None.TSPI_lineGetCallHubTracking(HDRVLINE hdLine None,LPLINECALLHUBTRACKINGINFO lpTrackingInfo None)
HRESULT None tapi3.SwitchTerminalToSubStream([in] ITTerminal *pITTerminal,[in] ITSubStream *pITSubStream)
HRESULT None tapi3.EnumerateAgentHandlers([out] IEnumAgentHandler **ppEnumHandler)
HRESULT None tapi3.get_DeviceClasses([out] VARIANT *pVariant)
HRESULT None tapi3.QueryDispatchInterface([in] BSTR pIID,[in] IDispatch *pInterfaceToMap,[out] IDispatch **ppReturnedInterface)
LONG TSPIAPI None.TSPI_lineClose(HDRVLINE hdLine None)
HRESULT None azroles.CreateApplicationGroup([in] BSTR bstrGroupName,[in None None,optional] VARIANT varReserved,[out] IAzApplicationGroup **ppGroup)
HRESULT None tapi3.EnumerateCallTreatments([out] IEnumBstr **ppEnumCallTreatment)
HRESULT None None.GetTransformLocal([out None None,retval] IXpsOMMatrixTransform **transform)
HRESULT None azroles.get_PolicyReadersName([out] VARIANT *pvarReaders)
LONG TSPIAPI None.TSPI_linePrepareAddToConference(DRV_REQUESTID dwRequestID None,HDRVCALL hdConfCall None,HTAPICALL htConsultCall None,LPHDRVCALL lphdConsultCall None,LPLINECALLPARAMS const lpCallParams)
LONG WINAPI tapi32.phoneSetStatusMessages(HPHONE hPhone None,DWORD dwPhoneStates None,DWORD dwButtonModes None,DWORD dwButtonStates None)
LONG TSPIAPI None.TSPI_lineNegotiateTSPIVersion(DWORD dwDeviceID None,DWORD dwLowVersion None,DWORD dwHighVersion None,LPDWORD lpdwTSPIVersion None)
BOOL None None.IsDaclCanonical([in] PACL pDacl)
HRESULT None azroles.DeletePolicyReaderName([in] BSTR bstrReader,[in None None,optional] VARIANT varReserved)
HRESULT None None.BizruleGroupSupported([out] VARIANT_BOOL *pbSupported)
HRESULT None tapi3.get_AddressName([out] BSTR *ppName)
LONG TSPIAPI None.TSPI_lineGetAddressCaps(DWORD dwDeviceID None,DWORD dwAddressID None,DWORD dwTSPIVersion None,DWORD dwExtVersion None,LPLINEADDRESSCAPS lpAddressCaps None)
HRESULT None tapi3.put_LampMode([in] long lLampID,[in] PHONE_LAMP_MODE LampMode)
LONG TSPIAPI None.TSPI_lineUnhold(DRV_REQUESTID dwRequestID None,HDRVCALL hdCall None)
HRESULT None azroles.InitializeClientContextFromToken([in] ULONGLONG ullTokenHandle,[in None None,optional] VARIANT varReserved,[out] IAzClientContext **ppClientContext)
LONG TSPIAPI None.TSPI_phoneGetID(HDRVPHONE hdPhone None,LPVARSTRING lpDeviceID None,LPCWSTR lpszDeviceClass None,HANDLE hTargetProcess None)
LONG TSPIAPI None.TSPI_lineSetDefaultMediaDetection(HDRVLINE hdLine None,DWORD dwMediaModes None)
LONG TSPIAPI None.TSPI_lineConfigDialog(DWORD dwDeviceID None,HWND hwndOwner None,LPCWSTR lpszDeviceClass None)
LONG WINAPI tapi32.phoneGetDisplay(HPHONE hPhone None,LPVARSTRING lpDisplay None)
HRESULT None tapi3.Delete([in] BSTR bstrSuperclass)
HRESULT None azroles.DeletePolicyAdministratorName([in] BSTR bstrAdmin,[in None None,optional] VARIANT varReserved)
HRESULT None tapi3.get_DialableAddress([out] BSTR *pDialableAddress)
LONG TSPIAPI None.TSPI_lineMonitorDigits(HDRVCALL hdCall None,DWORD dwDigitModes None)
HRESULT None tapi3.GetID([in] BSTR pDeviceClass,[out] DWORD *pdwSize,[out] BYTE **ppDeviceID)
HRESULT None tapi3.get_ButtonMode([in] long lButtonID,[out] PHONE_BUTTON_MODE *pButtonMode)
LONG TSPIAPI None.TSPI_lineDevSpecific(DRV_REQUESTID dwRequestID None,HDRVLINE hdLine None,DWORD dwAddressID None,HDRVCALL hdCall None,LPVOID lpParams None,DWORD dwSize None)
HRESULT None azroles.GetProperty([in] LONG lPropId,[in None None,optional] VARIANT varReserved,[out] VARIANT *pvarProp)
HRESULT None tapi3.DetectTonesByCollection([in] ITCollection2 *pDetectToneCollection)
LONG TSPIAPI None.TSPI_lineUnpark(DRV_REQUESTID dwRequestID None,HDRVLINE hdLine None,DWORD dwAddressID None,HTAPICALL htCall None,LPHDRVCALL lphdCall None,LPCWSTR lpszDestAddress None)
BOOL WINAPI kernel32.GetMailslotInfo(_In_ HANDLE hMailslot,_Out_opt_ LPDWORD lpMaxMessageSize,_Out_opt_ LPDWORD lpNextSize,_Out_opt_ LPDWORD lpMessageCount,_Out_opt_ LPDWORD lpReadTimeout)
HRESULT None azroles.CloseApplication([in] BSTR bstrApplicationName,[in] LONG lFlag)
LONG TSPIAPI None.TSPI_lineNegotiateExtVersion(DWORD dwDeviceID None,DWORD dwTSPIVersion None,DWORD dwLowVersion None,DWORD dwHighVersion None,LPDWORD lpdwExtVersion None)
HRESULT None tapi3.get_CLSID([out] BSTR *pCLSID)
HRESULT None tapi3.get_Address([out] ITAddress **ppAddress)
HRESULT None tapi3.get_Call([out] ITCallInfo **ppCall)
HRESULT None tapi3.get_Addresses([out] VARIANT *pAddresses)
HRESULT None None.IsFunctionalLevelUpgradeSupported([in] LONG lFunctionalLevel,[out] VARIANT_BOOL *pbSupported)
HRESULT None azroles.get_Applications([out] IAzApplications **ppAppCollection)
LONG TSPIAPI None.TSPI_lineGetCallInfo(HDRVCALL hdCall None,LPLINECALLINFO lpCallInfo None)
LONG TSPIAPI None.TSPI_lineGetDevCaps(DWORD dwDeviceID None,DWORD dwTSPIVersion None,DWORD dwExtVersion None,LPLINEDEVCAPS lpLineDevCaps None)
HRESULT None tapi3.Skip([in] ULONG celt)
HRESULT None tapi3.put_HookSwitchState([in] PHONE_HOOK_SWITCH_DEVICE HookSwitchDevice,[in] PHONE_HOOK_SWITCH_STATE HookSwitchState)
LONG TSPIAPI None.TSPI_lineSetCallTreatment(DRV_REQUESTID dwRequestID None,HDRVCALL hdCall None,DWORD dwTreatment None)
HRESULT None tapi3.Skip([in] ULONG celt)
HRESULT None tapi3.DeviceSpecificVariant([in] ITCallInfo *pCall,[in] VARIANT varDevSpecificByteArray)
LONG TSPIAPI None.TSPI_lineSetDevConfig(DWORD dwDeviceID None,LPVOID const lpDeviceConfig,DWORD dwSize None,LPCWSTR lpszDeviceClass None)
HRESULT None mdhcp.EnumerateAddresses([out] IEnumBstr **ppEnumAddresses)
HRESULT None tapi3.Skip([in] ULONG celt)
HRESULT None tapi3.get_Address([out] ITAddress **ppAddress)
LONG TSPIAPI None.TSPI_phoneSetLamp(DRV_REQUESTID dwRequestID None,HDRVPHONE hdPhone None,DWORD dwButtonLampID None,DWORD dwLampMode None)
HRESULT None tapi3.put_TerminalClass([in] BSTR bstrTerminalClass)
HRESULT None tapi3.get_Volume([out] long *plVolume)
HRESULT None tapi3.ParkDirect([in] BSTR pParkAddress)
HRESULT None tapi3.put_EventFilter([in] long lFilterMask)
HRESULT None tapi3.get_Event([out] TAPIOBJECT_EVENT *pEvent)
LONG TSPIAPI None.TSPI_lineUncompleteCall(DRV_REQUESTID dwRequestID None,HDRVLINE hdLine None,DWORD dwCompletionID None)
HRESULT None azroles.get_UserSamCompat([out] BSTR *pbstrProp)
HRESULT None tapi3.put_EventFilter([in] TAPI_EVENT TapiEvent,[in] long lSubEvent,[in] VARIANT_BOOL bEnable)
HRESULT None tapi3.Next([in] ULONG celt,[out] BSTR *ppStrings,[in None None,out] ULONG *pceltFetched)
HRESULT None tapi3.get_Name([out] BSTR *pName)
LONG TSPIAPI None.TSPI_lineSetStatusMessages(HDRVLINE hdLine None,DWORD dwLineStates None,DWORD dwAddressStates None)
HRESULT None azroles.put_LdapQuery([in] BSTR bstrProp)
LONG TSPIAPI None.TSPI_phoneGetGain(HDRVPHONE hdPhone None,DWORD dwHookSwitchDev None,LPDWORD lpdwGain None)
LONG TSPIAPI None.TSPI_lineForward(DRV_REQUESTID dwRequestID None,HDRVLINE hdLine None,DWORD bAllAddresses None,DWORD dwAddressID None,LPLINEFORWARDLIST const lpForwardList,DWORD dwNumRingsNoAnswer None,HTAPICALL htConsultCall None,LPHDRVCALL lphdConsultCall None,LPLINECALLPARAMS const lpCallParams)
HRESULT None tapi3.GetIDAsVariant([in] BSTR bstrDeviceClass,[out] VARIANT *pVarDeviceID)
HRESULT None tapi3.get_CallingCards([out] VARIANT *pVariant)
HRESULT None tapi3.Event([in] TAPI_EVENT TapiEvent,[in] IDispatch *pEvent)
void None tapi3.get_PrivateTAPIObjects([out] VARIANT *pVariant)
LONG TSPIAPI None.TSPI_lineSetAppSpecific(HDRVCALL hdCall None,DWORD dwAppSpecific None)
LONG TSPIAPI None.TSPI_lineCloseCall(HDRVCALL hdCall None)
LONG TSPIAPI None.TSPI_lineGetCallIDs(HDRVCALL hdCall None,LPDWORD lpdwAddressID None,LPDWORD lpdwCallID None,LPDWORD lpdwRelatedCallID None)
LONG TSPIAPI None.TSPI_lineSendUserUserInfo(DRV_REQUESTID dwRequestID None,HDRVCALL hdCall None,LPCSTR lpsUserUserInfo None,DWORD dwSize None)
HRESULT None azroles.OpenScope([in] BSTR bstrScopeName,[in None None,optional] VARIANT varReserved,[out] IAzScope **ppScope)
HRESULT None tapi3.put_Frequency([in] long lFrequency)
HRESULT None None.IsUpdateNeeded([out] VARIANT_BOOL *pbIsUpdateNeeded)
LONG TSPIAPI None.TSPI_lineGetIcon(DWORD dwDeviceID None,LPCWSTR lpszDeviceClass None,LPHICON lphIcon None)
HRESULT None tapi3.put_CallInfoString([in] CALLINFO_STRING CallInfoString,[in] BSTR pCallInfoString)
LONG WINAPI tapi32.phoneSetData(HPHONE hPhone None,DWORD dwDataID None,LPVOID const lpData,DWORD dwSize None)
WINOLEAPI None ole32.StgGetIFillLockBytesOnILockBytes(_In_ ILockBytes *pilb,_Out_ IFillLockBytes **ppflb)
HRESULT None tapi3.GetIDAsVariant([in] BSTR bstrDeviceClass,[out] VARIANT *pVarDeviceID)
HRESULT None tapi3.get_CurrentForwardInfo([out] ITForwardInformation **ppForwardInfo)
HRESULT None tapi3.get_MediaState([out] TERMINAL_MEDIA_STATE *pTerminalMediaState)
HRESULT None tapi3.Next([in] ULONG celt,[out] ITPluggableTerminalClassInfo **ppElements,[in None None,out] ULONG *pceltFetched)
HRESULT None tapi3.Skip([in] ULONG celt)
HRESULT None tapi3.get_DigitMode([out] TAPI_DIGITMODE *pDigitMode)
LONG WINAPI tapi32.phoneSetGain(HPHONE hPhone None,DWORD dwHookSwitchDev None,DWORD dwGain None)
LONG TSPIAPI None.TSPI_lineGetID(HDRVLINE hdLine None,DWORD dwAddressID None,HDRVCALL hdCall None,DWORD dwSelect None,LPVARSTRING lpDeviceID None,LPCWSTR lpszDeviceClass None,HANDLE hTargetProcess None)
HRESULT None tapi3.get_Phone([out] ITPhone **ppPhone)
HRESULT None azroles.Submit([in] LONG lFlags,[in None None,optional] VARIANT varReserved)
HRESULT None shlwapi.IStream_WritePidl(_In_ IStream* pstm,_In_ PCUIDLIST_RELATIVE pidlWrite)
HRESULT None tapi3.GetIDAsVariant([in] BSTR bstrDeviceClass,[out] VARIANT *pVarDeviceID)
LONG TSPIAPI None.TSPI_lineBlindTransfer(DRV_REQUESTID dwRequestID None,HDRVCALL hdCall None,LPCWSTR lpszDestAddress None,DWORD dwCountryCode None)
HRESULT None azroles.DeletePropertyItem([in] LONG lPropId,[in] VARIANT varProp,[in None None,optional] VARIANT varReserved)
HRESULT None None.DeleteRelationship([in] LPCWSTR relationshipIdentifier)
LONG TSPIAPI None.TSPI_phoneGetRing(HDRVPHONE hdPhone None,LPDWORD lpdwRingMode None,LPDWORD lpdwVolume None)
HRESULT None tapi3.get_ForwardTypeDestination([in] long ForwardType,[out] BSTR *ppDestAddress)
LONG WINAPI tapi32.phoneSetDisplay(HPHONE hPhone None,DWORD dwRow None,DWORD dwColumn None,LPCSTR lpsDisplay None,DWORD dwSize None)
HRESULT None tapi3.Clone([out] IEnumCallingCard **ppEnum)
HRESULT None tapi3.put_CallInfoLong([in] CALLINFO_LONG CallInfoLong,[in] long lCallInfoLongVal)
HRESULT None tapi3.get_DestAddress([out] BSTR *ppDestAddress)
HRESULT None tapi3.get_RequestMode([out] long *plRequestMode)
HRESULT None tapi3.get_CallTreatments([out] VARIANT *pVariant)
HRESULT None tapi3.Get([in] AudioSettingsProperty Property,[out] long *plValue,[out] TAPIControlFlags *plFlags)
WINOLEAPI None ole32.StgIsStorageILockBytes(ILockBytes *plkbyt None)
LONG TSPIAPI None.TSPI_lineReceiveMSPData(HDRVLINE hdLine None,HDRVCALL hdCall None,HDRVMSPLINE hdMSPLine None,LPVOID pBuffer None,DWORD dwSize None)
HRESULT None tapi3.get_EmptyAudioFormatForScripting([out] ITScriptableAudioFormat **ppAudioFormat)
HRESULT None tapi3.get_CallHub([out] ITCallHub **ppCallHub)
HRESULT None tapi3.get_CLSID([out] BSTR *pCLSID)
LONG TSPIAPI None.TSPI_lineMonitorTones(HDRVCALL hdCall None,DWORD dwToneListID None,LPLINEMONITORTONE const lpToneList,DWORD dwNumEntries None)
LONG TSPIAPI None.TSPI_lineGenerateDigits(HDRVCALL hdCall None,DWORD dwEndToEndID None,DWORD dwDigitMode None,LPCWSTR lpszDigits None,DWORD dwDuration None)
LONG TSPIAPI None.TSPI_lineGetCallAddressID(HDRVCALL hdCall None,LPDWORD lpdwAddressID None)
LONG TSPIAPI None.TSPI_lineAnswer(DRV_REQUESTID dwRequestID None,HDRVCALL hdCall None,LPCSTR lpsUserUserInfo None,DWORD dwSize None)
LONG TSPIAPI None.TSPI_lineDial(DRV_REQUESTID dwRequestID None,HDRVCALL hdCall None,LPCWSTR lpszDestAddress None,DWORD dwCountryCode None)
HRESULT None azroles.OpenApplicationGroup([in] BSTR bstrGroupName,[in None None,optional] VARIANT varReserved,[out] IAzApplicationGroup **ppGroup)
HRESULT None azroles.AddDelegatedPolicyUser([in] BSTR bstrDelegatedPolicyUser,[in None None,optional] VARIANT varReserved)
HRESULT None tapi3.get_Phones([out] VARIANT *pPhones)
HRESULT None azroles.DeleteRoleDefinition([in] BSTR bstrRoleDefinition)
HRESULT None tapi3.get_DeviceClasses([out] VARIANT *pVariant)
LONG TSPIAPI None.TSPI_lineGenerateTone(HDRVCALL hdCall None,DWORD dwEndToEndID None,DWORD dwToneMode None,DWORD dwDuration None,DWORD dwNumTones None,LPLINEGENERATETONE const lpTones)
HRESULT None azroles.AddOperation([in] BSTR bstrOp,[in None None,optional] VARIANT varReserved)
HRESULT None tapi3.get_ButtonText([in] long lButtonID,[out] BSTR *ppButtonText)
HRESULT None shlwapi.QISearch(_In_ void *that,_In_ LPCQITAB pqit,_In_ REFIID riid,_Out_ void **ppv)
LONG TSPIAPI None.TSPI_lineGetAddressID(HDRVLINE hdLine None,LPDWORD lpdwAddressID None,DWORD dwAddressMode None,LPCWSTR lpsAddress None,DWORD dwSize None)
HRESULT None tapi3.Skip([in] ULONG celt)
HRESULT None None.EnumSubCommands([out] IEnumExplorerCommand **ppEnum)
HRESULT None tapi3.Skip([in] ULONG celt)
HRESULT None azroles.CreateScope2([in] BSTR bstrScopeName,[out] IAzScope2 **ppScope2)
HRESULT None tapi3.UnregisterNotifications([in] long lRegister)
HRESULT None None.GetFlags([out] EXPCMDFLAGS *pFlags)
HRESULT None oleaut32.SafeArrayRedim(_Inout_ SAFEARRAY *psa,_In_ SAFEARRAYBOUND *psaboundNew)
HRESULT None tapi3.GetRange([in] AudioSettingsProperty Property,[out] long *plMin,[out] long *plMax,[out] long *plSteppingDelta,[out] long *plDefault,[out] TAPIControlFlags *plFlags)
HRESULT None tapi3.get_Address([out] ITAddress **ppAddress)
HRESULT None tapi3.get_CadenceOn([out] long *plCadenceOn)
HRESULT None tapi3.get_CallInfoString([in] CALLINFO_STRING CallInfoString,[out] BSTR *ppCallInfoString)
HRESULT None tapi3.get_lParam1([out] long *pParam1)
HRESULT None mdhcp.get_LeaseStopTime([out] DATE *pTime)
HRESULT None tapi3.get_GatherTermination([out] TAPI_GATHERTERM *pGatherTermination)
HRESULT None tapi3.get_TerminalClass([out] BSTR *pTerminalClass)
HRESULT None tapi3.get_Call([out] ITCallInfo **ppCallInfo)
LONG TSPIAPI None.TSPI_lineGetAddressID(HDRVLINE hdLine None,LPDWORD lpdwAddressID None,DWORD dwAddressMode None,LPCWSTR lpsAddress None,DWORD dwSize None)
HRESULT None azroles.get_Count(LONG *plCount None)
HRESULT None azroles.get__NewEnum(LPUNKNOWN *ppEnumPtr None)
void STDAPICALLTYPE oleaut32.SafeArrayReleaseData(_In_ PVOID pData)
HRESULT None shlwapi.IUnknown_GetSite(_In_ IUnknown *punk,_In_ REFIID riid,_Out_ VOID **ppvSite)
HRESULT None azroles.get_Item([in] LONG Index,VARIANT *pvarObtPtr None)
LONG TSPIAPI None.TSPI_lineConditionalMediaDetection(HDRVLINE hdLine None,DWORD dwMediaModes None,LPLINECALLPARAMS const lpCallParams)
HRESULT None azroles.put_Name([in] BSTR bstrName)
HRESULT None azroles.get_Operations([out] IAzOperations **ppOperationCollection)
LONG WINAPI tapi32.phoneSetRing(HPHONE hPhone None,DWORD dwRingMode None,DWORD dwVolume None)
LONG WINAPI tapi32.phoneGetHookSwitch(HPHONE hPhone None,LPDWORD lpdwHookSwitchDevs None)
HRESULT None azroles.DeletePolicyReader([in] BSTR bstrReader,[in None None,optional] VARIANT varReserved)
HRESULT None tapi3.EnumerateAgentHandlers([out] IEnumAgentHandler **ppEnumHandler)
HRESULT None tapi3.get_Version([out] BSTR *pVersion)
HRESULT None tapi3.SetCallInfoBuffer([in] CALLINFO_BUFFER CallInfoBuffer,[in] DWORD dwSize,[in] BYTE *pCallInfoBuffer)
HRESULT None tapi3.NegotiateExtVersion([in] long lLowVersion,[in] long lHighVersion,[out] long *plExtVersion)
LONG TSPIAPI None.TSPI_lineHold(DRV_REQUESTID dwRequestID None,HDRVCALL hdCall None)
HRESULT None azroles.DeleteDelegatedPolicyUser([in] BSTR bstrDelegatedPolicyUser,[in None None,optional] VARIANT varReserved)
HRESULT None azroles.OpenTask([in] BSTR bstrTaskName,[in None None,optional] VARIANT varReserved,[out] IAzTask **ppTask)
HRESULT None azroles.DeleteScope([in] BSTR bstrScopeName,[in None None,optional] VARIANT varReserved)
HRESULT None azroles.AddPolicyReader([in] BSTR bstrReader,[in None None,optional] VARIANT varReserved)
HRESULT None azroles.OpenApplicationGroup([in] BSTR bstrGroupName,[in None None,optional] VARIANT varReserved,[out] IAzApplicationGroup **ppGroup)
HRESULT None azroles.DeleteApplicationGroup([in] BSTR bstrGroupName,[in None None,optional] VARIANT varReserved)
LONG TSPIAPI None.TSPI_lineSetMediaMode(HDRVCALL hdCall None,DWORD dwMediaMode None)
HRESULT None azroles.DeleteTask([in] BSTR bstrTaskName,[in None None,optional] VARIANT varReserved)
LONG TSPIAPI None.TSPI_lineRedirect(DRV_REQUESTID dwRequestID None,HDRVCALL hdCall None,LPCWSTR lpszDestAddress None,DWORD dwCountryCode None)
HRESULT None azroles.AddPropertyItem([in] LONG lPropId,[in None None,optional] VARIANT varReserved)
LONG TSPIAPI None.TSPI_lineGetDevConfig(DWORD dwDeviceID None,LPVARSTRING lpDeviceConfig None,LPCWSTR lpszDeviceClass None)
LONG TSPIAPI None.TSPI_lineGenerateDigits(HDRVCALL hdCall None,DWORD dwEndToEndID None,DWORD dwDigitMode None,LPCWSTR lpszDigits None,DWORD dwDuration None)
LONG TSPIAPI None.TSPI_lineMakeCall(DRV_REQUESTID dwRequestID None,HDRVLINE hdLine None,HTAPICALL htCall None,LPHDRVCALL lphdCall None,LPCWSTR lpszDestAddress None,DWORD dwCountryCode None,LPLINECALLPARAMS const lpCallParams)
LONG TSPIAPI None.TSPI_lineConditionalMediaDetection(HDRVLINE hdLine None,DWORD dwMediaModes None,LPLINECALLPARAMS const lpCallParams)
LONG TSPIAPI None.TSPI_lineCompleteCall(DRV_REQUESTID dwRequestID None,HDRVCALL hdCall None,LPDWORD lpdwCompletionID None,DWORD dwCompletionMode None,DWORD dwMessageID None)
LONG TSPIAPI None.TSPI_lineConfigDialogEdit(DWORD dwDeviceID None,HWND hwndOwner None,LPCWSTR lpszDeviceClass None,LPVOID const lpDeviceConfigIn,DWORD dwSize None,LPVARSTRING lpDeviceConfigOut None)
LONG TSPIAPI None.TSPI_lineGetLineDevStatus(HDRVLINE hdLine None,LPLINEDEVSTATUS lpLineDevStatus None)
LONG TSPIAPI None.TSPI_lineSetCallParams(DRV_REQUESTID dwRequestID None,HDRVCALL hdCall None,DWORD dwBearerMode None,DWORD dwMinRate None,DWORD dwMaxRate None,LPLINEDIALPARAMS const lpDialParams)
LONG TSPIAPI None.TSPI_linePark(DRV_REQUESTID dwRequestID None,HDRVCALL hdCall None,DWORD dwParkMode None,LPCWSTR lpszDirAddress None,LPVARSTRING lpNonDirAddress None)
LONG TSPIAPI None.TSPI_lineMonitorTones(HDRVCALL hdCall None,DWORD dwToneListID None,LPLINEMONITORTONE const lpToneList,DWORD dwNumEntries None)
LONG TSPIAPI None.TSPI_lineAccept(DRV_REQUESTID dwRequestID None,HDRVCALL hdCall None,LPCSTR lpsUserUserInfo None,DWORD dwSize None)
LONG TSPIAPI None.TSPI_lineMonitorMedia(HDRVCALL hdCall None,DWORD dwMediaModes None)
LONG TSPIAPI None.TSPI_lineCloseMSPInstance(HDRVMSPLINE hdMSPLine None)
LONG TSPIAPI None.TSPI_lineSwapHold(DRV_REQUESTID dwRequestID None,HDRVCALL hdActiveCall None,HDRVCALL hdHeldCall None)
LONG TSPIAPI None.TSPI_lineGetAddressID(HDRVLINE hdLine None,LPDWORD lpdwAddressID None,DWORD dwAddressMode None,LPCWSTR lpsAddress None,DWORD dwSize None)
LONG TSPIAPI None.TSPI_lineDial(DRV_REQUESTID dwRequestID None,HDRVCALL hdCall None,LPCWSTR lpszDestAddress None,DWORD dwCountryCode None)
LONG TSPIAPI None.TSPI_lineAnswer(DRV_REQUESTID dwRequestID None,HDRVCALL hdCall None,LPCSTR lpsUserUserInfo None,DWORD dwSize None)
LONG TSPIAPI None.TSPI_lineUnpark(DRV_REQUESTID dwRequestID None,HDRVLINE hdLine None,DWORD dwAddressID None,HTAPICALL htCall None,LPHDRVCALL lphdCall None,LPCWSTR lpszDestAddress None)
LONG TSPIAPI None.TSPI_lineReceiveMSPData(HDRVLINE hdLine None,HDRVCALL hdCall None,HDRVMSPLINE hdMSPLine None,LPVOID pBuffer None,DWORD dwSize None)
LONG TSPIAPI None.TUISPI_lineConfigDialogEdit(TUISPIDLLCALLBACK lpfnUIDLLCallback None,DWORD dwDeviceID None,HWND hwndOwner None,LPCWSTR lpszDeviceClass None,LPVOID const lpDeviceConfigIn,DWORD dwSize None,LPVARSTRING lpDeviceConfigOut None)
HRESULT None tapi3.get_CLSID([out] BSTR *pCLSID)
HRESULT None tapi3.get_TickCount([out] long *plTickCount)
LONG TSPIAPI None.TSPI_lineGetCallAddressID(HDRVCALL hdCall None,LPDWORD lpdwAddressID None)
HRESULT None tapi3.get_AddressCapabilityString([in] ADDRESS_CAPABILITY_STRING AddressCapString,[out] BSTR *ppCapabilityString)
BOOL WINAPI kernel32.SetMailslotInfo(_In_ HANDLE hMailslot,_In_ DWORD lReadTimeout)
HRESULT None tapi3.put_RingVolume([in] long lRingVolume)
HRESULT None tapi3.get_lParam1([out] long *pParam1)
HRESULT None azroles.get_Members([out] VARIANT *pvarProp)
HRESULT None tapi3.get_TAPIObject([out] ITTAPI **ppTapiObject)
LONG TSPIAPI None.TSPI_lineSetupTransfer(DRV_REQUESTID dwRequestID None,HDRVCALL hdCall None,HTAPICALL htConsultCall None,LPHDRVCALL lphdConsultCall None,LPLINECALLPARAMS const lpCallParams)
HRESULT None tapi3.get_TickCount([out] long *plTickCount)
HRESULT None tapi3.SetDisplay([in] long lRow,[in] long lColumn,[in] BSTR bstrDisplay)
HRESULT None shell32.GetDisplayName([in] SIGDN sigdnName,[out] LPWSTR *ppszName)
HRESULT None azroles.DeletePolicyAdministrator([in] BSTR bstrAdmin,[in None None,optional] VARIANT varReserved)
BOOL None shlwapi.SHCreateThreadWithHandle(_In_ LPTHREAD_START_ROUTINE pfnThreadProc,_In_opt_ void *pData,_In_ SHCT_FLAGS flags,_In_opt_ LPTHREAD_START_ROUTINE pfnCallback,_Out_opt_ HANDLE *pHandle)
HRESULT None None.GetTitle([in] IShellItemArray *psiItemArray,[out] LPWSTR *ppszName)
HRESULT None None.SetData([in] FORMATETC *pformatetc,[in] STGMEDIUM *pmedium,[in] BOOL fRelease)
HRESULT None tapi3.get_ButtonState([out] PHONE_BUTTON_STATE *pState)
HRESULT None azroles.OpenScope2([in] BSTR bstrScopeName,[out] IAzScope2 **ppScope2)
HRESULT None azroles.DeleteApplication([in] BSTR bstrApplicationName,[in None None,optional] VARIANT varReserved)
HRESULT None tapi3.get_State([out] ADDRESS_STATE *pAddressState)
HRESULT None azroles.DeletePropertyItem([in] LONG lPropId,[in] VARIANT varProp,[in None None,optional] VARIANT varReserved)
HRESULT None tapi3.put_Version([in] BSTR bstrVersion)
HRESULT None tapi3.NegotiateExtVersion([in] long lLowVersion,[in] long lHighVersion,[out] long *plExtVersion)
LONG TSPIAPI None.TSPI_lineMonitorDigits(HDRVCALL hdCall None,DWORD dwDigitModes None)
HRESULT None tapi3.get_Stream([out] ITStream **ppStream)
HRESULT None azroles.put_ApplyStoreSacl([in] BOOL bApplyStoreSacl)
HRESULT None azroles.OpenTask([in] BSTR bstrTaskName,[in None None,optional] VARIANT varReserved,[out] IAzTask **ppTask)
HRESULT None tapi3.RegisterSink([in] ITPluggableTerminalEventSink *pEventSink)
HRESULT None azroles.put_GenerateAudits([in] BOOL bProp)
HRESULT None tapi3.get_PhoneCapsBuffer([in] PHONECAPS_BUFFER pcbCaps,[out] VARIANT *pVarBuffer)
HRESULT None None.put_BizRule([in] BSTR bstrProp)
HRESULT None tapi3.get_CurrentForwardInfo([out] ITForwardInformation **ppForwardInfo)
HRESULT None tapi3.get_Name([out] BSTR *pName)
HRESULT None tapi3.get_CadenceOff([out] long *plCadenceOff)
HRESULT None azroles.put_LdapQuery([in] BSTR bstrProp)
HRESULT None tapi3.SwitchTerminalToSubStream([in] ITTerminal *pITTerminal,[in] ITSubStream *pITSubStream)
HRESULT None tapi3.get_Call([out] ITCallInfo **ppCall)
HRESULT None None.EnumerateStaticTerminals([out] IEnumTerminal **ppTerminalEnumerator)
HRESULT None shlwapi.IStream_Copy(_In_ IStream *pstmFrom,_In_ IStream *pstmTo,_In_ DWORD cb)
HRESULT None azroles.put_ApplicationData([in] BSTR bstrApplicationData)
HRESULT None tapi3.Skip([in] ULONG celt)
LONG TSPIAPI None.TSPI_phoneSelectExtVersion(HDRVPHONE hdPhone None,DWORD dwExtVersion None)
HRESULT None azroles.put_Type([in] LONG lProp)
HRESULT None tapi3.DeviceSpecific([in] ITCallInfo *pCall,[in] BYTE *pParams,[in] DWORD dwSize)
LONG TSPIAPI None.TSPI_lineSetStatusMessages(HDRVLINE hdLine None,DWORD dwLineStates None,DWORD dwAddressStates None)
HRESULT None tapi3.SetCallInfoBuffer([in] CALLINFO_BUFFER CallInfoBuffer,[in] DWORD dwSize,[in] BYTE *pCallInfoBuffer)
HANDLE None advapi32.OpenEventLog(_In_ LPCTSTR lpUNCServerName,_In_ LPCTSTR lpSourceName)
HANDLE None advapi32.OpenEventLogW(_In_ LPCTSTR lpUNCServerName,_In_ LPCTSTR lpSourceName)
HANDLE None advapi32.OpenEventLogA(_In_ LPCTSTR lpUNCServerName,_In_ LPCTSTR lpSourceName)
HRESULT None tapi3.get_Event([out] CALL_MEDIA_EVENT *pCallMediaEvent)
HRESULT None azroles.put_ApplicationData([in] BSTR bstrApplicationData)
HRESULT None None.put_BizRuleLanguage([in] BSTR bstrProp)
HRESULT None tapi3.GetPhoneFromTerminal([in] ITTerminal *pTerminal,[out] ITPhone **ppPhone)
HRESULT None tapi3.EnumerateCallTreatments([out] IEnumBstr **ppEnumCallTreatment)
BOOL None None.IsDaclCanonical([in] PACL pDacl)
HRESULT None tapi3.get_HookSwitchDevice([out] PHONE_HOOK_SWITCH_DEVICE *pDevice)
LONG TSPIAPI None.TSPI_phoneSetData(DRV_REQUESTID dwRequestID None,HDRVPHONE hdPhone None,DWORD dwDataID None,LPVOID const lpData,DWORD dwSize None)
HRESULT None azroles.AddOperation([in] BSTR bstrProp,[in None None,optional] VARIANT varReserved)
HRESULT None tapi3.CreateCall([in] BSTR pDestAddress,[in] long lAddressType,[in] long lMediaTypes,[out] ITBasicCallControl **ppCall)
WINOLEAPI None ole32.FreePropVariantArray(_In_ ULONG cVariants,_In_ PROPVARIANT *rgvars)
HRESULT None azroles.AccessCheck([in] BSTR bstrObjectName,[in] VARIANT varScopeNames,[in] VARIANT varOperations,[in None None,optional] VARIANT varParameterNames,[in None None,optional] VARIANT varParameterValues,[in None None,optional] VARIANT varInterfaceNames,[in None None,optional] VARIANT varInterfaceFlags,[in None None,optional] VARIANT varInterfaces,[out] VARIANT *pvarResults)
HRESULT None tapi3.get_ButtonFunction([in] long lButtonID,[out] PHONE_BUTTON_FUNCTION *pButtonFunction)
HRESULT None mdhcp.put_LeaseStopTime([in] DATE time)
HRESULT None None.get_PluggableTerminalClasses([in] BSTR bstrTerminalSuperclass,[in] long lMediaType,[out] VARIANT *pVariant)
HRESULT None shlwapi.IStream_ReadStr(_In_ IStream *pstm,_Out_ PWSTR *ppsz)
LONG TSPIAPI None.TSPI_phoneNegotiateExtVersion(DWORD dwDeviceID None,DWORD dwTSPIVersion None,DWORD dwLowVersion None,DWORD dwHighVersion None,LPDWORD lpdwExtVersion None)
LONG TSPIAPI None.TSPI_phoneSetGain(DRV_REQUESTID dwRequestID None,HDRVPHONE hdPhone None,DWORD dwHookSwitchDev None,DWORD dwGain None)
HRESULT None tapi3.put_ButtonMode([in] long lButtonID,[in] PHONE_BUTTON_MODE ButtonMode)
HRESULT None tapi3.get_Format([out] AM_MEDIA_TYPE **ppmt)
HRESULT None tapi3.Next([in] ULONG celt,[out] ITAgentHandler **ppElements,[out] ULONG *pceltFetched)
HRESULT None tapi3.get_LampMode([in] long lLampID,[out] PHONE_LAMP_MODE *pLampMode)
LONG WINAPI tapi32.phoneSetHookSwitch(HPHONE hPhone None,DWORD dwHookSwitchDevs None,DWORD dwHookSwitchMode None)
LONG TSPIAPI None.TSPI_lineGetDevConfig(DWORD dwDeviceID None,LPVARSTRING lpDeviceConfig None,LPCWSTR lpszDeviceClass None)
HRESULT None tapi3.put_Volume([in] long lVolume)
HRESULT None shlwapi.SHGetThreadRef(_In_ IUnknown **ppunk)
HRESULT None tapi3.Next([in] ULONG celt,[out] ITTerminal **ppElements,[out] ULONG *pceltFetched)
LONG TSPIAPI None.TSPI_lineGetCallInfo(HDRVCALL hdCall None,LPLINECALLINFO lpCallInfo None)
HRESULT None azroles.AddNonMemberName([in] BSTR bstrProp,[in None None,optional] VARIANT varReserved)
HRESULT None azroles.Submit([in] LONG lFlags,[in None None,optional] VARIANT varReserved)
HRESULT None None.put_BizRuleLanguage([in] BSTR bstrProp)
HRESULT None None.EnumeratePluggableSuperclasses([out] IEnumPluggableSuperclassInfo **ppSuperclassEnumerator)
HRESULT None azroles.get_Tasks([out] VARIANT *pvarProp)
HRESULT None tapi3.put_CLSID([in] BSTR bstrCLSID)
BOOL None advapi32.GetNumberOfEventLogRecords(_In_ HANDLE hEventLog,_Out_ PDWORD NumberOfRecords)
HRESULT None ole32.SetStateBits([in] DWORD grfStateBits,[in] DWORD grfMask)
HRESULT None azroles.get_PolicyReadersName([out] VARIANT *pvarReaders)
HRESULT None tapi3.get_Event([out] CALLHUB_EVENT *pEvent)
HRESULT None tapi3.put_RingMode([in] long lRingMode)
HRESULT None tapi3.get_HookSwitchState([in] PHONE_HOOK_SWITCH_DEVICE HookSwitchDevice,[out] PHONE_HOOK_SWITCH_STATE *pHookSwitchState)
HRESULT None azroles.get_AppNonMembers([out] VARIANT *pvarProp)
HRESULT None tapi3.get_LampMode([in] long lLampID,[out] PHONE_LAMP_MODE *pLampMode)
HRESULT None tapi3.get_Volume([out] long *plVolume)
HRESULT None azroles.AddPolicyReaderName([in] BSTR bstrReader,[in None None,optional] VARIANT varReserved)
HRESULT None shlwapi.IStream_WriteStr(_In_ IStream *pstm,_In_ PCWSTR psz)
HRESULT None tapi3.ParkIndirect([out] BSTR *ppNonDirAddress)
HRESULT None None.GetState([in None None,unique] IShellItemArray *psiItemArray,[in] BOOL fOkToBeSlow,[out] EXPCMDSTATE *pCmdState)
LONG TSPIAPI None.TSPI_phoneConfigDialog(DWORD dwDeviceID None,HWND hwndOwner None,LPCWSTR lpszDeviceClass None)
HRESULT None tapi3.Open([in] PHONE_PRIVILEGE Privilege)
HRESULT None tapi3.GetCallInfoBuffer([in] CALLINFO_BUFFER CallInfoBuffer,[out] DWORD *pdwSize,[out] BYTE **ppCallInfoBuffer)
HRESULT None tapi3.put_AutoDialtone([in] VARIANT_BOOL fEnabled)
HRESULT None tapi3.DetectTones([in] TAPI_DETECTTONE *pToneList,[in] long lNumTones)
LONG TSPIAPI None.TUISPI_lineConfigDialogEdit(TUISPIDLLCALLBACK lpfnUIDLLCallback None,DWORD dwDeviceID None,HWND hwndOwner None,LPCWSTR lpszDeviceClass None,LPVOID const lpDeviceConfigIn,DWORD dwSize None,LPVARSTRING lpDeviceConfigOut None)
HRESULT None None.GetIcon([in] IShellItemArray *psiItemArray,[out] LPWSTR *ppszIcon)
HRESULT None tapi3.get_CallState([out] CALL_STATE *pCallState)
HRESULT None azroles.put_ScriptEngineTimeout([in] LONG lProp)
LONG TSPIAPI None.TSPI_phoneSetRing(DRV_REQUESTID dwRequestID None,HDRVPHONE hdPhone None,DWORD dwRingMode None,DWORD dwVolume None)
HRESULT None tapi3.ParkDirect([in] BSTR pParkAddress)
HRESULT None azroles.put_Description([in] BSTR bstrDescription)
LONG TSPIAPI None.TSPI_lineSetAppSpecific(HDRVCALL hdCall None,DWORD dwAppSpecific None)
HRESULT None tapi3.get_MediaFormat([out] AM_MEDIA_TYPE **ppmt)
WINOLEAPI None ole32.StgGetIFillLockBytesOnFile(_In_ OLECHAR *pwcsName,_Out_ IFillLockBytes **ppflb)
WINOLEAPI None ole32.GetConvertStg(_In_ IStorage *pStg)
HRESULT None azroles.get_PolicyReadersName([out] VARIANT *pvarReaders)
HRESULT None tapi3.get_RingVolume([out] long *plRingVolume)
HRESULT None tapi3.Skip([in] ULONG celt)
LONG TSPIAPI None.TSPI_phoneSetDisplay(DRV_REQUESTID dwRequestID None,HDRVPHONE hdPhone None,DWORD dwRow None,DWORD dwColumn None,LPCWSTR lpsDisplay None,DWORD dwSize None)
HRESULT None tapi3.put_ButtonMode([in] long lButtonID,[in] PHONE_BUTTON_MODE ButtonMode)
HRESULT None azroles.put_DomainTimeout([in] LONG lProp)
BOOL None shlwapi.SHCreateThread(_In_ LPTHREAD_START_ROUTINE pfnThreadProc,_In_opt_ void *pData,_In_ SHCT_FLAGS dwFlags,_In_opt_ LPTHREAD_START_ROUTINE pfnCallback)
HRESULT None azroles.GetProperty([in] LONG lPropId,[in None None,optional] VARIANT varReserved,[out] VARIANT *pvarProp)
LONG TSPIAPI None.TSPI_lineGetCallAddressID(HDRVCALL hdCall None,LPDWORD lpdwAddressID None)
HRESULT None None.GetToolTip([in] IShellItemArray *psiItemArray,[out] LPWSTR *ppszInfotip)
LONG TSPIAPI None.TUISPI_lineConfigDialog(TUISPIDLLCALLBACK lpfnUIDLLCallback None,DWORD dwDeviceID None,HWND hwndOwner None,LPCWSTR lpszDeviceClass None)
HRESULT None tapi3.put_AutoKeypadTones([in] VARIANT_BOOL fEnabled)
LONG TSPIAPI None.TSPI_lineDrop(DRV_REQUESTID dwRequestID None,HDRVCALL hdCall None,LPCSTR lpsUserUserInfo None,DWORD dwSize None)
HRESULT STDAPICALLTYPE oleaut32.SafeArrayAddRef(_In_ SAFEARRAY *psa,_Out_ PVOID **ppDataToRelease)
HRESULT None azroles.AddTask([in] BSTR bstrProp,[in None None,optional] VARIANT varReserved)
HRESULT None tapi3.EnumerateCalls([out] IEnumCall **ppEnumCall)
HRESULT None ole32.LockRegion([in] ULARGE_INTEGER libOffset,[in] ULARGE_INTEGER cb,[in] DWORD dwLockType)
LONG TSPIAPI None.TSPI_linePark(DRV_REQUESTID dwRequestID None,HDRVCALL hdCall None,DWORD dwParkMode None,LPCWSTR lpszDirAddress None,LPVARSTRING lpNonDirAddress None)
void CALLBACK None.Line_Event(HTAPILINE htLine None,HTAPICALL htCall None,DWORD dwMsg None,DWORD_PTR dwParam1 None,DWORD_PTR dwParam2 None,DWORD_PTR dwParam3 None)
HRESULT None None.CreateDynamicTerminal([in] IUnknown *pOuterUnknown,[in] IID iidTerminalClass,[in] DWORD dwMediaType,[in] TERMINAL_DIRECTION Direction,[in] MSP_HANDLE htAddress,[out] ITTerminal **ppTerminal)
HRESULT None azroles.DeletePolicyAdministrator([in] BSTR bstrAdmin,[in None None,optional] VARIANT varReserved)
HRESULT None tapi3.Forward([in] ITForwardInformation *pForwardInfo,[in] ITBasicCallControl *pCall)
HRESULT None azroles.get_Writable([out] BOOL *pfProp)
HRESULT None tapi3.get_Display([out] BSTR *pbstrDisplay)
HRESULT None tapi3.get_PreferredAddresses([out] VARIANT *pAddresses)
HRESULT None azroles.put_Name([in] BSTR bstrName)
HRESULT None tapi3.Skip([in] ULONG celt)
HRESULT None azroles.DeletePolicyReader([in] BSTR bstrReader,[in None None,optional] VARIANT varReserved)
HRESULT None azroles.UpdateCache([in None None,optional] VARIANT varReserved)
HRESULT None tapi3.put_AutoEndOfNumberTimeout([in] long lTimeout)
HRESULT None oleaut32.SafeArrayUnaccessData(_In_ SAFEARRAY *psa)
HRESULT None tapi3.put_Direction([in] TMGR_DIRECTION nDirection)
LONG TSPIAPI None.TSPI_providerGenericDialogData(DWORD_PTR dwObjectID None,DWORD dwObjectType None,LPVOID lpParams None,DWORD dwSize None)
HRESULT None tapi3.get_PhoneCapsString([in] PHONECAPS_STRING pcsCap,[out] BSTR *ppCapability)
void None shlwapi.IUnknown_Set(_Inout_ IUnknown **ppunk,_In_opt_ IUnknown *punk)
HRESULT None tapi3.put_ButtonMode([in] long lButtonID,[in] PHONE_BUTTON_MODE ButtonMode)
HRESULT None tapi3.get_Terminals([in] ITAddress *pAddress,[out] VARIANT *pTerminals)
HRESULT None tapi3.get_Volume([out] long *plVolume)
LONG TSPIAPI None.TSPI_lineReceiveMSPData(HDRVLINE hdLine None,HDRVCALL hdCall None,HDRVMSPLINE hdMSPLine None,LPVOID pBuffer None,DWORD dwSize None)
HRESULT None tapi3.SelectCall([in] ITCallInfo *pCall,[in] VARIANT_BOOL fSelectDefaultTerminals)
LONG TSPIAPI None.TUISPI_providerGenericDialogData(HTAPIDIALOGINSTANCE htDlgInst None,LPVOID lpParams None,DWORD dwSize None)
HRESULT None shlwapi.IStream_ReadPidl(_In_ IStream* pstm,_Out_ PIDLIST_RELATIVE* ppidlOut)
HRESULT None None.GetTransformLocal([out None None,retval] IXpsOMMatrixTransform **transform)
HRESULT None tapi3.get_Version([out] BSTR *pVersion)
HRESULT None tapi3.DeviceSpecific([in] BYTE *pParams,[in] DWORD dwSize)
HRESULT None None.GetPart([in] IOpcPartUri *name,[out None None,retval] IOpcPart **part)
HRESULT None tapi3.get_AddressCapabilityString([in] ADDRESS_CAPABILITY_STRING AddressCapString,[out] BSTR *ppCapabilityString)
HRESULT None azroles.InitializeClientContextFromToken2([in] ULONG ulTokenHandleLowPart,[in] ULONG ulTokenHandleHighPart,[in None None,optional] VARIANT varReserved,[out] IAzClientContext2 **ppClientContext2)
HRESULT None tapi3.put_AutoVolumeControlRepeatDelay([in] long lDelay)
HRESULT None tapi3.get_NumberOfACDCalls([out] long *plCalls)
HRESULT None tapi3.put_ButtonText([in] long lButtonID,[in] BSTR bstrButtonText)
HRESULT None tapi3.get_AutoVolumeControlRepeatPeriod([out] long *plPeriod)
HRESULT None tapi3.put_AutoStopRingOnOffHook([in] VARIANT_BOOL fEnabled)
HRESULT None None.get_PluggableTerminalClasses([in] BSTR bstrTerminalSuperclass,[in] long lMediaType,[out] VARIANT *pVariant)
void None None.IID_PPV_ARGS(T **pType None)
HRESULT None tapi3.get_MediaTypes([out] long *pMediaTypes)
HRESULT None tapi3.get_AutoVolumeControlRepeatDelay([out] long *plDelay)
LONG TSPIAPI None.TSPI_phoneGetHookSwitch(HDRVPHONE hdPhone None,LPDWORD lpdwHookSwitchDevs None)
HRESULT None azroles.Submit([in None None,optional] LONG lFlags,[in None None,optional] VARIANT varReserved)
HRESULT None tapi3.get_Event([out] PHONE_EVENT *pEvent)
HRESULT None tapi3.get_AutoKeypadTones([out] VARIANT_BOOL *pfEnabled)
LONG TSPIAPI None.TSPI_lineDial(DRV_REQUESTID dwRequestID None,HDRVCALL hdCall None,LPCWSTR lpszDestAddress None,DWORD dwCountryCode None)
HRESULT None None.get_Direction([out] TERMINAL_DIRECTION *pTD)
HRESULT None tapi3.put_Company([in] BSTR bstrCompany)
HRESULT None tapi3.EnumerateAgentSessions([out] IEnumAgentSession **ppEnumAgentSession)
HRESULT None tapi3.GetTerminalClassInfo([in] BSTR bstrSuperclass)
HRESULT None shlwapi.IUnknown_SetSite(_In_ IUnknown *punk,_In_ IUnknown *punkSite)
HRESULT None azroles.get_Writable([out] BOOL *pfProp)
HRESULT None tapi3.put_EventFilter([in] TAPI_EVENT TapiEvent,[in] long lSubEvent,[in] VARIANT_BOOL bEnable)
HRESULT None tapi3.put_LocalParticipantTypedInfo([in] PARTICIPANT_TYPED_INFO InfoType,[in] BSTR ppInfo)
HRESULT None tapi3.put_RingMode([in] long lRingMode)
HRESULT None azroles.DeleteOperation([in] BSTR bstrOp,[in None None,optional] VARIANT varReserved)
HRESULT None tapi3.RegisterSink([in] ITPluggableTerminalEventSink *pEventSink)
HRESULT None tapi3.get_LocalParticipantTypedInfo([in] PARTICIPANT_TYPED_INFO InfoType,[out] BSTR *ppInfo)
long TSPIAPI None.TSPI_phoneClose(HDRVPHONE hdPhone None)
HRESULT None tapi3.get_Call([out] ITCallInfo **ppCall)
HRESULT None tapi3.EnumeratePreferredAddresses([out] IEnumAddress **ppEnumAddress)
HRESULT None oleaut32.SafeArrayAllocData(_In_ SAFEARRAY *psa)
HRESULT None tapi3.EnumerateAddresses([out] IEnumAddress **ppEnumAddress)
HRESULT None shlwapi.IStream_Size(_In_ IStream *pstm,_Out_ ULARGE_INTEGER *pui)
LONG TSPIAPI None.TSPI_phoneGetExtensionID(DWORD dwDeviceID None,DWORD dwTSPIVersion None,LPPHONEEXTENSIONID lpExtensionID None)
HRESULT None tapi3.get_lParam1([out] long *pParam1)
HRESULT None None.get_Direction([out] TERMINAL_DIRECTION *pDirection)
UINT None oleaut32.SafeArrayGetDim(_In_ SAFEARRAY *psa)
HRESULT None tapi3.get_Error([out] HRESULT *phrErrorCode)
HRESULT None azroles.AddDelegatedPolicyUserName([in] BSTR bstrDelegatedPolicyUser,[in None None,optional] VARIANT varReserved)
HRESULT None tapi3.RequestTerminal([in] BSTR bstrTerminalClassGUID,[in] long lMediaType,[in] TERMINAL_DIRECTION Direction,[out] ITTerminal **ppTerminal)
HRESULT None tapi3.EnumerateDeviceClasses([out] IEnumBstr **ppEnumDeviceClass)
BOOL None shlwapi.IsInternetESCEnabled(void None None)
LONG TSPIAPI None.TSPI_phoneGetData(HDRVPHONE hdPhone None,DWORD dwDataID None,LPVOID lpData None,DWORD dwSize None)
HRESULT None azroles.AddPropertyItem([in] LONG lPropId,[in] VARIANT varProp,[in None None,optional] VARIANT varReserved)
HRESULT None shlwapi.SHReleaseThreadRef(void None None)
HRESULT None tapi3.get_AvgBytesPerSec([out] long *pVal)
HRESULT None None.GetSchemaVersion([out] LONG *plMajorVersion,[out] LONG *plMinorVersion)
HRESULT None azroles.get_DelegatedPolicyUsers([out] VARIANT *pvarDelegatedPolicyUsers)
HRESULT None tapi3.put_DoNotDisturb([in] VARIANT_BOOL fDoNotDisturb)
HRESULT None tapi3.get_Direction([out] TERMINAL_DIRECTION *pDirection)
LONG TSPIAPI None.TSPI_phoneSetHookSwitch(DRV_REQUESTID dwRequestID None,HDRVPHONE hdPhone None,DWORD dwHookSwitchDevs None,DWORD dwHookSwitchMode None)
HRESULT None tapi3.get_MeasurementPeriod([out] long *plPeriod)
LONG TSPIAPI None.TSPI_phoneGetStatus(HDRVPHONE hdPhone None,LPPHONESTATUS lpPhoneStatus None)
WINOLEAPI None ole32.OleConvertIStorageToOLESTREAM(_In_ IStorage *pStg,_Out_ LPOLESTREAM lpolestream)
HRESULT None tapi3.get_AutoStopRingOnOffHook([out] VARIANT_BOOL *pfEnabled)
HRESULT None tapi3.get_RingMode([out] long *plRingMode)
HRESULT None tapi3.get_Company([out] BSTR *pCompany)
LONG WINAPI tapi32.phoneSetGain(HPHONE hPhone None,DWORD dwHookSwitchDev None,DWORD dwGain None)
HRESULT None azroles.DeletePropertyItem([in] LONG lPropId,[in] VARIANT varProp,[in None None,optional] VARIANT varReserved)
HRESULT None azroles.get_DelegatedPolicyUsersName([out] VARIANT *pvarDelegatedPolicyUsers)
HRESULT None tapi3.get_GenerationTermination([out] long *plGenerationTermination)
HRESULT None tapi3.get_SelectedCalls([out] VARIANT *pVariant)
HRESULT None mdhcp.get_ServerAddress([out] BSTR *ppAddress)
HRESULT None azroles.DeleteApplicationGroup([in] BSTR bstrGroupName,[in None None,optional] VARIANT varReserved)
HRESULT None tapi3.get_Privilege([out] PHONE_PRIVILEGE *pPrivilege)
HRESULT None tapi3.get_HookSwitchState([in] PHONE_HOOK_SWITCH_DEVICE HookSwitchDevice,[out] PHONE_HOOK_SWITCH_STATE *pHookSwitchState)
void None shlwapi.IUnknown_Set(_Inout_ IUnknown **ppunk,_In_opt_ IUnknown *punk)
HRESULT None shlwapi.IStream_Reset(_In_ IStream *pstm)
HRESULT None tapi3.get_AutoVolumeControlRepeatPeriod([out] long *plPeriod)
LONG TSPIAPI None.TSPI_phoneGetVolume(HDRVPHONE hdPhone None,DWORD dwHookSwitchDev None,LPDWORD lpdwVolume None)
MMRESULT None None.waveOutOpen(LPHWAVEOUT phwo None,UINT_PTR uDeviceID None,LPWAVEFORMATEX pwfx None,DWORD_PTR dwCallback None,DWORD_PTR dwCallbackInstance None,DWORD fdwOpen None)
HRESULT None tapi3.get_AutoDialtone([out] VARIANT_BOOL *pfEnabled)
HRESULT None shlwapi.SHCreateThreadRef(_In_ LONG *pcRef,_Out_ IUnknown **ppunk)
LONG TSPIAPI None.TUISPI_lineConfigDialog(TUISPIDLLCALLBACK lpfnUIDLLCallback None,DWORD dwDeviceID None,HWND hwndOwner None,LPCWSTR lpszDeviceClass None)
HRESULT None tapi3.DeviceSpecificVariant([in] VARIANT varDevSpecificByteArray)
LONG TSPIAPI None.TSPI_phoneGetButtonInfo(HDRVPHONE hdPhone None,DWORD dwButtonLampID None,LPPHONEBUTTONINFO lpButtonInfo None)
LONG TSPIAPI None.TSPI_phoneDevSpecific(DRV_REQUESTID dwRequestID None,HDRVPHONE hdPhone None,LPVOID lpParams None,DWORD dwSize None)
LONG TSPIAPI None.TSPI_phoneSetVolume(DRV_REQUESTID dwRequestID None,HDRVPHONE hdPhone None,DWORD dwHookSwitchDev None,DWORD dwVolume None)
LONG TSPIAPI None.TSPI_phoneGetHookSwitch(HDRVPHONE hdPhone None,LPDWORD lpdwHookSwitchDevs None)
HRESULT None tapi3.Next([in] ULONG celt,[out] ITAgentHandler **ppElements,[out] ULONG *pceltFetched)
HRESULT None tapi3.get_AutoEndOfNumberTimeout([out] long *plTimeout)
HRESULT None tapi3.EnumerateTerminals([in] ITAddress *pAddress,[out] IEnumTerminal **ppEnumTerminal)
HRESULT None tapi3.put_ButtonFunction([in] long lButtonID,[in] PHONE_BUTTON_FUNCTION ButtonFunction)
HRESULT None tapi3.UnselectCall([in] ITCallInfo *pCall)
HRESULT None tapi3.get_LampMode([in] long lLampID,[out] PHONE_LAMP_MODE *pLampMode)
LONG TSPIAPI None.TSPI_phoneSetVolume(DRV_REQUESTID dwRequestID None,HDRVPHONE hdPhone None,DWORD dwHookSwitchDev None,DWORD dwVolume None)
HRESULT None azroles.AddPropertyItem([in] LONG lPropId,[in] VARIANT varProp,[in None None,optional] VARIANT varReserved)
HRESULT None tapi3.get_Privilege([out] PHONE_PRIVILEGE *pPrivilege)
HRESULT None azroles.get_TargetMachine([out] BSTR *pbstrDescription)
HRESULT None tapi3.get_ButtonState([in] long lButtonID,[out] PHONE_BUTTON_STATE *pButtonState)
HRESULT None tapi3.Clone([out] IEnumAgentHandler **ppEnum)
HRESULT None azroles.AddPropertyItem([in] LONG lPropId,[in] VARIANT varProp,[in None None,optional] VARIANT varReserved)
HRESULT None tapi3.get_ControllingTerminal([out] ITTerminal **ppControllingTerminal)
HRESULT None tapi3.get_AutoVolumeControlStep([out] long *plStepSize)
HRESULT None None.SetSite([in] IUnknown *pUnkSite)
LONG TSPIAPI None.TSPI_phoneGetLamp(HDRVPHONE hdPhone None,DWORD dwButtonLampID None,LPDWORD lpdwLampMode None)
HRESULT None tapi3.get_Name([out] BSTR *pName)
HRESULT None oleaut32.SafeArrayDestroy(_In_ SAFEARRAY *psa)
HRESULT None None.get_TerminalClass([out] BSTR *ppTerminalClass)
HRESULT None tapi3.EnumerateTerminals([in] ITAddress *pAddress,[out] IEnumTerminal **ppEnumTerminal)
HRESULT None tapi3.get_GenerationTermination([out] long *plGenerationTermination)
HRESULT None tapi3.get_WaveId([out] long *plWaveId)
HRESULT None azroles.put_MaxScriptEngines([in] LONG lProp)
HRESULT None tapi3.get_AutoStopTonesOnOnHook([out] VARIANT_BOOL *pfEnabled)
HRESULT None tapi3.Set([in] AudioDeviceProperty Property,[in] long lValue,[in] TAPIControlFlags lFlags)
HRESULT None ole32.LockRegion([in] ULARGE_INTEGER libOffset,[in] ULARGE_INTEGER cb,[in] DWORD dwLockType)
HRESULT None azroles.put_DomainTimeout([in] LONG lProp)
HRESULT None tapi3.EnumeratePreferredPhones([out] IEnumPhone **ppEnumPhone)
HRESULT None tapi3.get_ButtonState([in] long lButtonID,[out] PHONE_BUTTON_STATE *pButtonState)
HRESULT None tapi3.put_AutoVolumeControlRepeatPeriod([in] long lPeriod)
HRESULT None rend.get_DirectoryType([out] DIRECTORY_TYPE *pDirectoryType)
HRESULT None tapi3.GetPhoneCapsBuffer([in] PHONECAPS_BUFFER pcbCaps,[out] DWORD *pdwSize,[out] BYTE **ppPhoneCapsBuffer)
HRESULT None tapi3.get_AudioFormatForScripting([out] ITScriptableAudioFormat **ppAudioFormat)
HRESULT None tapi3.get_TerminalClass([out] BSTR *pTerminalClass)
HRESULT None tapi3.GenerateTone([in] TAPI_TONEMODE ToneMode,[in] long lDuration)
HRESULT None shlwapi.SHAutoComplete(_In_ HWND hwndEdit,DWORD dwFlags None)
HRESULT None azroles.InitializeClientContext2([in] BSTR IdentifyingString,[in None None,optional] VARIANT varReserved,[out] IAzClientContext2 **ppClientContext2)
HRESULT None shlwapi.IUnknown_GetWindow(_In_ IUnknown *punk,_Out_ HWND *phwnd)
LONG TSPIAPI None.TSPI_phoneSetStatusMessages(HDRVPHONE hdPhone None,DWORD dwPhoneStates None,DWORD dwButtonModes None,DWORD dwButtonStates None)
LONG TSPIAPI None.TSPI_phoneSetButtonInfo(DRV_REQUESTID dwRequestID None,HDRVPHONE hdPhone None,DWORD dwButtonLampID None,LPPHONEBUTTONINFO const lpButtonInfo)
LONG TSPIAPI None.TSPI_phoneDevSpecific(DRV_REQUESTID dwRequestID None,HDRVPHONE hdPhone None,LPVOID lpParams None,DWORD dwSize None)
HRESULT None shlwapi.SHCreateStreamOnFileEx(_In_ LPCWSTR pszFile,_In_ DWORD grfMode,_In_ DWORD dwAttributes,_In_ BOOL fCreate,_Reserved_ IStream *pstmTemplate,_Out_ IStream **ppstm)
HRESULT None tapi3.get_AutoVolumeControl([out] VARIANT_BOOL *fEnabled)
LONG TSPIAPI None.TSPI_phoneNegotiateTSPIVersion(DWORD dwDeviceID None,DWORD dwLowVersion None,DWORD dwHighVersion None,LPDWORD lpdwTSPIVersion None)
HRESULT None tapi3.get_RingMode([out] long *plRingMode)
HRESULT None tapi3.put_AudioFormatForScripting([in] ITScriptableAudioFormat *pAudioFormat)
LONG TSPIAPI None.TSPI_phoneNegotiateTSPIVersion(DWORD dwDeviceID None,DWORD dwLowVersion None,DWORD dwHighVersion None,LPDWORD lpdwTSPIVersion None)
LONG TSPIAPI None.TSPI_phoneSetButtonInfo(DRV_REQUESTID dwRequestID None,HDRVPHONE hdPhone None,DWORD dwButtonLampID None,LPPHONEBUTTONINFO const lpButtonInfo)
LONG TSPIAPI None.TSPI_phoneGetIcon(DWORD dwDeviceID None,LPCWSTR lpszDeviceClass None,LPHICON lphIcon None)
HRESULT None tapi3.get_GenerationTermination([out] long *plGenerationTermination)
HRESULT None shlwapi.DllInstall(BOOL bInstall None,_In_opt_ PCWSTR pszCmdLine)
LONG TSPIAPI None.TSPI_phoneSetGain(DRV_REQUESTID dwRequestID None,HDRVPHONE hdPhone None,DWORD dwHookSwitchDev None,DWORD dwGain None)
BOOL None shlwapi.IsOS(_In_ DWORD dwOS)
LONG TSPIAPI None.TSPI_phoneSetStatusMessages(HDRVPHONE hdPhone None,DWORD dwPhoneStates None,DWORD dwButtonModes None,DWORD dwButtonStates None)
HRESULT None tapi3.put_ButtonFunction([in] long lButtonID,[in] PHONE_BUTTON_FUNCTION ButtonFunction)
HRESULT None shlwapi.IStream_ReadStr(_In_ IStream *pstm,_Out_ PWSTR *ppsz)
HRESULT None tapi3.put_AutoVolumeControlRepeatDelay([in] long lDelay)
HRESULT None tapi3.get_Format([out] AM_MEDIA_TYPE **ppmt)
HRESULT None tapi3.get_GenerationTermination([out] long *plGenerationTermination)
void None shlwapi.IUnknown_AtomicRelease(_Inout_opt_ void **ppunk)
HRESULT None tapi3.get_Call([out] ITCallInfo **ppCall)
LONG TSPIAPI None.TSPI_phoneGetButtonInfo(HDRVPHONE hdPhone None,DWORD dwButtonLampID None,LPPHONEBUTTONINFO lpButtonInfo None)
LONG TSPIAPI None.TSPI_phoneGetVolume(HDRVPHONE hdPhone None,DWORD dwHookSwitchDev None,LPDWORD lpdwVolume None)
LONG TSPIAPI None.TSPI_phoneGetLamp(HDRVPHONE hdPhone None,DWORD dwButtonLampID None,LPDWORD lpdwLampMode None)
HRESULT None tapi3.GetPhoneCapsBuffer([in] PHONECAPS_BUFFER pcbCaps,[out] DWORD *pdwSize,[out] BYTE **ppPhoneCapsBuffer)
HRESULT None tapi3.get_PhoneCapsLong([in] PHONECAPS_LONG pclCap,[out] long *plCapability)
HRESULT None tapi3.DeviceSpecificVariant([in] VARIANT varDevSpecificByteArray)
HRESULT None shlwapi.ParseURL(_In_ LPCTSTR pcszUrl,_Inout_ PARSEDURL *ppu)
HRESULT None shlwapi.ParseURLW(_In_ LPCTSTR pcszUrl,_Inout_ PARSEDURL *ppu)
HRESULT None shlwapi.ParseURLA(_In_ LPCTSTR pcszUrl,_Inout_ PARSEDURL *ppu)
HRESULT None tapi3.get_AddressCapability([in] ADDRESS_CAPABILITY AddressCap,[out] long *plCapability)
HRESULT None tapi3.get_Balance([out] long *plBalance)
HRESULT None shlwapi.SHSetThreadRef(_In_opt_ IUnknown *punk)
LWSTDAPI None api-ms-win-shcore-thread-l1-1-0.GetProcessReference(_Out_ IUnknown **punk)
HRESULT None azroles.DeletePropertyItem([in] LONG lPropId,[in] VARIANT varProp,[in None None,optional] VARIANT varReserved)
HRESULT None shlwapi.HashData(_In_ BYTE *pbData,DWORD cbData None,_Out_ BYTE *pbHash,DWORD cbHash None)
HRESULT None tapi3.GetRange([in] StreamQualityProperty Property,[out] long *plMin,[out] long *plMax,[out] long *plSteppingDelta,[out] long *plDefault,[out] TAPIControlFlags *plFlags)
LONG TSPIAPI None.TSPI_phoneNegotiateExtVersion(DWORD dwDeviceID None,DWORD dwTSPIVersion None,DWORD dwLowVersion None,DWORD dwHighVersion None,LPDWORD lpdwExtVersion None)
HRESULT None shlwapi.IStream_Read(_In_ IStream *pstm,_Out_ VOID *pv,_In_ ULONG cb)
HRESULT None tapi3.Add([in] BSTR bstrSuperclass)
HRESULT None tapi3.get_FormatTag([out] long *pVal)
HRESULT None shlwapi.IUnknown_QueryService(_In_ IUnknown *punk,_In_ REFGUID guidService,_In_ REFIID riid,_Out_ void **ppvOut)
HRESULT None tapi3.Remove([in] long Index)
HRESULT None tapi3.EnumerateStreams([out] IEnumStream **ppEnumStream)
LONG TSPIAPI None.TSPI_phoneGetIcon(DWORD dwDeviceID None,LPCWSTR lpszDeviceClass None,LPHICON lphIcon None)
HRESULT None tapi3.get_Balance([out] long *plBalance)
HRESULT None tapi3.put_Status([in] ITStream *pITStream,[in] VARIANT_BOOL fEnable)
HRESULT None tapi3.put_AutoVolumeControl([in] VARIANT_BOOL fEnabled)
HRESULT None azroles.put_GenerateAudits([in] BOOL bProp)
HRESULT None tapi3.StartRinger([in] long lRingMode,[in] long lDuration)
HRESULT None tapi3.SetQOS([in] long lMediaType,[in] QOS_SERVICE_LEVEL ServiceLevel)
HRESULT None azroles.AddMember([in] BSTR bstrProp,[in None None,optional] VARIANT varReserved)
HRESULT None azroles.DeleteDelegatedPolicyUser([in] BSTR bstrDelegatedPolicyUser,[in None None,optional] VARIANT varReserved)
HRESULT None oleaut32.SafeArrayUnlock(_In_ SAFEARRAY *psa)
HRESULT None azroles.GetProperty([in] LONG lPropId,[in None None,optional] VARIANT varReserved,[out] VARIANT *pvarProp)
HRESULT None oleaut32.SafeArrayGetUBound(_In_ SAFEARRAY *psa,_In_ UINT nDim,_Out_ LONG *plUbound)
HRESULT None tapi3.EnumerateTerminals([in] ITAddress *pAddress,[out] IEnumTerminal **ppEnumTerminal)
HRESULT None azroles.get_Writable([out] BOOL *pfProp)
HRESULT None oleaut32.SafeArrayUnlock(_In_ SAFEARRAY *psa)
HRESULT None azroles.get_PolicyAdministratorsName([out] VARIANT *pvarAdmins)
HRESULT None tapi3.get_AutoVolumeControlStep([out] long *plStepSize)
HRESULT None oleaut32.SafeArrayDestroyData(_In_ SAFEARRAY *psa)
HRESULT None azroles.get_DelegatedPolicyUsers([out] VARIANT *pvarDelegatedPolicyUsers)
HRESULT None tapi3.get_Address([out] ITAddress **ppAddress)
HRESULT None oleaut32.SafeArraySetIID(_In_ SAFEARRAY *psa,_In_ REFGUID guid)
HRESULT None azroles.OpenApplication([in] BSTR bstrApplicationName,[in None None,optional] VARIANT varReserved,[out] IAzApplication **ppApplication)
HRESULT None azroles.DeleteDelegatedPolicyUserName([in] BSTR bstrDelegatedPolicyUser,[in None None,optional] VARIANT varReserved)
DWORD WINAPI None.ThreadProc(LPVOID lpParameter None)
HRESULT None azroles.get_Writable([out] BOOL *pfProp)
HRESULT None oleaut32.SafeArraySetIID(_In_ SAFEARRAY *psa,_In_ REFGUID guid)
LONG TSPIAPI None.TSPI_phoneSetRing(DRV_REQUESTID dwRequestID None,HDRVPHONE hdPhone None,DWORD dwRingMode None,DWORD dwVolume None)
HRESULT None tapi3.get_ACDGroups([out] VARIANT *pVariant)
HRESULT None None.get_TerminalClass([out] BSTR *ppTerminalClass)
HRESULT None tapi3.put_State([in] AGENT_SESSION_STATE SessionState)
HRESULT None azroles.OpenApplication([in] BSTR bstrApplicationName,[in None None,optional] VARIANT varReserved,[out] IAzApplication **ppApplication)
HRESULT None tapi3.get_PhoneCapsLong([in] PHONECAPS_LONG pclCap,[out] long *plCapability)
HRESULT None tapi3.get_CLSID([out] BSTR *pCLSID)
HRESULT None oleaut32.SafeArrayAllocData(_In_ SAFEARRAY *psa)
HRESULT None tapi3.GenerateCustomTones([in] TAPI_CUSTOMTONE *pToneList,[in] long lNumTones,[in] long lDuration)
BOOL None advapi32.ReadEventLog(_In_ HANDLE hEventLog,_In_ DWORD dwReadFlags,_In_ DWORD dwRecordOffset,_Out_ LPVOID lpBuffer,_In_ DWORD nNumberOfBytesToRead,_Out_ DWORD *pnBytesRead,_Out_ DWORD *pnMinNumberOfBytesNeeded)
BOOL None advapi32.ReadEventLogW(_In_ HANDLE hEventLog,_In_ DWORD dwReadFlags,_In_ DWORD dwRecordOffset,_Out_ LPVOID lpBuffer,_In_ DWORD nNumberOfBytesToRead,_Out_ DWORD *pnBytesRead,_Out_ DWORD *pnMinNumberOfBytesNeeded)
BOOL None advapi32.ReadEventLogA(_In_ HANDLE hEventLog,_In_ DWORD dwReadFlags,_In_ DWORD dwRecordOffset,_Out_ LPVOID lpBuffer,_In_ DWORD nNumberOfBytesToRead,_Out_ DWORD *pnBytesRead,_Out_ DWORD *pnMinNumberOfBytesNeeded)
HRESULT None tapi3.get_AudioFormatForScripting([out] ITScriptableAudioFormat **ppAudioFormat)
HRESULT None tapi3.get_ID([out] BSTR *ppID)
HRESULT None azroles.put_Version([in] BSTR bstrProp)
HRESULT None tapi3.SetQOS([in] long lMediaType,[in] QOS_SERVICE_LEVEL ServiceLevel)
HRESULT None tapi3.EnumerateSelectedCalls([out] IEnumCall **ppCallEnum)
HRESULT None azroles.put_Version([in] BSTR bstrProp)
HRESULT None tapi3.get_State([out] CALLHUB_STATE *pState)
HRESULT None None.GetPart([in] IOpcPartUri *name,[out None None,retval] IOpcPart **part)
HRESULT None tapi3.get_Event([out] AGENT_SESSION_EVENT *pEvent)
HRESULT None tapi3.get_DoNotDisturb([out] VARIANT_BOOL *pfDoNotDisturb)
HRESULT None azroles.DeleteApplicationGroup([in] BSTR bstrGroupName,[in None None,optional] VARIANT varReserved)
HRESULT None azroles.Initialize([in] LONG lFlags,[in] BSTR bstrPolicyURL,[in None None,optional] VARIANT varReserved)
HRESULT None tapi3.get_OverallCallRate([out] CURRENCY *pcyCallrate)
HRESULT None tapi3.Open([in] PHONE_PRIVILEGE Privilege)
HRESULT None azroles.AddMemberName([in] BSTR bstrProp,[in None None,optional] VARIANT varReserved)
HRESULT None rend.get_DirectoryObjects([in] DIRECTORY_OBJECT_TYPE DirectoryObjectType,[in] BSTR pName,[out] VARIANT *pVariant)
HRESULT None tapi3.get_DoNotDisturb([out] VARIANT_BOOL *pfDoNotDisturb)
HRESULT None tapi3.put_ButtonText([in] long lButtonID,[in] BSTR bstrButtonText)
HRESULT None tapi3.get_PhoneHandlingEnabled([out] VARIANT_BOOL *pfEnabled)
HRESULT None tapi3.get_OverallCallRate([out] CURRENCY *pcyCallrate)
HRESULT None oleaut32.SafeArrayPutElement(_In_ SAFEARRAY *psa,_In_ LONG *rgIndices,_In_ void *pv)
void None shlwapi.IUnknown_AtomicRelease(_Inout_opt_ void **ppunk)
HRESULT None shell32.AddPages([in] LPFNADDPROPSHEETPAGE pfnAddPage,[in] LPARAM lParam)
HRESULT None azroles.Delete([in None None,optional] VARIANT varReserved)
HRESULT None tapi3.get_Direction([out] TMGR_DIRECTION *pDirection)
HRESULT None azroles.DeleteDelegatedPolicyUser([in] BSTR bstrDelegatedPolicyUser,[in None None,optional] VARIANT varReserved)
HRESULT None azroles.AddNonMemberName([in] BSTR bstrProp,[in None None,optional] VARIANT varReserved)
HRESULT None oleaut32.SafeArrayUnlock(_In_ SAFEARRAY *psa)
HRESULT None tapi3.get_State([out] TERMINAL_MEDIA_STATE *pState)
HKEY_CURRENT_USER SOFTWARE None.Clients(Default None None)
HRESULT None tapi3.Get([in] AudioDeviceProperty Property,[out] long *plValue,[out] TAPIControlFlags *plFlags)
HRESULT None azroles.DeleteDelegatedPolicyUser([in] BSTR bstrDelegatedPolicyUser,[in None None,optional] VARIANT varReserved)
HRESULT None azroles.DeleteDelegatedPolicyUser([in] BSTR bstrDelegatedPolicyUser,[in None None,optional] VARIANT varReserved)
HRESULT None azroles.OpenApplication([in] BSTR bstrApplicationName,[in None None,optional] VARIANT varReserved,[out] IAzApplication **ppApplication)
HRESULT None ole32.ReadAt([in] ULARGE_INTEGER ulOffset,[in] void *pv,[in] ULONG cb,[out] ULONG *pcbRead)
HRESULT None azroles.get_Writable([out] BOOL *pfProp)
UINT None oleaut32.SafeArrayGetDim(_In_ SAFEARRAY *psa)
HRESULT None azroles.OpenApplication([in] BSTR bstrApplicationName,[in None None,optional] VARIANT varReserved,[out] IAzApplication **ppApplication)
BOOL None shlwapi.IsOS(_In_ DWORD dwOS)
HRESULT None tapi3.Set([in] StreamQualityProperty Property,[in] long lValue,[in] TAPIControlFlags lFlags)
HRESULT None azroles.AddMemberName([in] BSTR bstrProp,[in None None,optional] VARIANT varReserved)
HRESULT None azroles.OpenApplication([in] BSTR bstrApplicationName,[in None None,optional] VARIANT varReserved,[out] IAzApplication **ppApplication)
HRESULT None tapi3.put_Status([in] ITStream *pITStream,[in] VARIANT_BOOL fEnable)
HRESULT None azroles.OpenApplication([in] BSTR bstrApplicationName,[in None None,optional] VARIANT varReserved,[out] IAzApplication **ppApplication)
HRESULT None azroles.put_GenerateAudits([in] BOOL bProp)
HRESULT None azroles.DeletePropertyItem([in] LONG lPropId,[in] VARIANT varProp,[in None None,optional] VARIANT varReserved)
HRESULT None azroles.AddMember([in] BSTR bstrProp,[in None None,optional] VARIANT varReserved)
HRESULT None azroles.DeleteDelegatedPolicyUser([in] BSTR bstrDelegatedPolicyUser,[in None None,optional] VARIANT varReserved)
HRESULT None azroles.AddPropertyItem([in] LONG lPropId,[in] VARIANT varProp,[in None None,optional] VARIANT varReserved)
HRESULT None azroles.get_PolicyAdministratorsName([out] VARIANT *pvarAdmins)
HRESULT None tapi3.get_OverallCallRate([out] CURRENCY *pcyCallrate)
HRESULT None tapi3.EnumerateAddresses([out] IEnumAddress **ppEnumAddress)
HRESULT None tapi3.put_PhoneHandlingEnabled([in] VARIANT_BOOL fEnabled)
HRESULT None tapi3.get_ACDCallRate([out] CURRENCY *pcyCallrate)
HRESULT None tapi3.get_AgentHandler([out] ITAgentHandler **ppAgentHandler)
HRESULT None tapi3.put_AutoKeypadTonesMinimumDuration([in] long lDuration)
HRESULT None tapi3.get_AutoKeypadTonesMinimumDuration([out] long *plDuration)
HRESULT None rend.get_IsDynamic([out] VARIANT_BOOL *pfDynamic)
HRESULT None azroles.DeleteAppMember([in] BSTR bstrProp,[in None None,optional] VARIANT varReserved)
HRESULT None azroles.DeleteDelegatedPolicyUser([in] BSTR bstrDelegatedPolicyUser,[in None None,optional] VARIANT varReserved)
HRESULT None tapi3.get_Balance([out] long *plBalance)
HRESULT None tapi3.get_Ringer([out] VARIANT_BOOL *pfRinging)
HRESULT None tapi3.get_Call([out] ITCallInfo **ppCallInfo)
HRESULT None tapi3.get_Tone([out] PHONE_TONE *pTone)
HRESULT None None.EnumerateTerminals([out] IEnumTerminal **ppEnumTerminal)
LONG TSPIAPI None.TSPI_phoneGetVolume(HDRVPHONE hdPhone None,DWORD dwHookSwitchDev None,LPDWORD lpdwVolume None)
HRESULT None tapi3.get_Ringer([out] VARIANT_BOOL *pfRinging)
HRESULT None azroles.AddMemberName([in] BSTR bstrProp,[in None None,optional] VARIANT varReserved)
HRESULT None tapi3.get_EventFilter([out] long *plFilterMask)
HRESULT None azroles.AddMemberName([in] BSTR bstrProp,[in None None,optional] VARIANT varReserved)
HRESULT None azroles.put_MaxScriptEngines([in] LONG lProp)
HRESULT None tapi3.get_Call([out] ITCallInfo **ppCallInfo)
HRESULT None oleaut32.SafeArrayGetIID(_In_ SAFEARRAY *psa,_Out_ GUID *pguid)
HRESULT None None.get_Terminals([out] VARIANT *pTerminals)
HRESULT None None.get_Terminals([out] VARIANT *pTerminals)
HRESULT None tapi3.Set([in] CallQualityProperty Property,[in] long lValue,[in] TAPIControlFlags lFlags)
HRESULT None tapi3.put_AutoStopTonesOnOnHook([in] VARIANT_BOOL fEnabled)
HRESULT None tapi3.put_AutoKeypadTonesMinimumDuration([in] long lDuration)
HRESULT None tapi3.CreateDetectToneObject([out] ITDetectTone **ppDetectTone)
HRESULT None azroles.get_Operations([out] VARIANT *pvarProp)
HRESULT None tapi3.StartTone([in] PHONE_TONE Tone,[in] long lDuration)
HRESULT None shell32.AddPages([in] LPFNADDPROPSHEETPAGE pfnAddPage,[in] LPARAM lParam)
HRESULT None tapi3.get_Event([out] AGENT_SESSION_EVENT *pEvent)
HRESULT None azroles.put_ApplicationData([in] BSTR bstrApplicationData)
LONG TSPIAPI None.TSPI_phoneGetVolume(HDRVPHONE hdPhone None,DWORD dwHookSwitchDev None,LPDWORD lpdwVolume None)
HRESULT None tapi3.get_Balance([out] long *plBalance)
HRESULT None azroles.GetProperty([in] LONG lPropId,[in None None,optional] VARIANT varReserved,[out] VARIANT *pvarProp)
HRESULT None tapi3.get_Event([out] ACDQUEUE_EVENT *pEvent)
HRESULT None sdpblb.get_Item([in] LONG Index,[out] ITMedia **pVal)
HRESULT None tapi3.put_AutoStopTonesOnOnHook([in] VARIANT_BOOL fEnabled)
HRESULT None azroles.DeleteMemberName([in] BSTR bstrProp,[in None None,optional] VARIANT varReserved)
HRESULT None tapi3.get_Name([out] BSTR *pName)
HRESULT None rend.DeleteDirectoryObject([in] ITDirectoryObject *pDirectoryObject)
HRESULT None shell32.ReplacePage(UINT uPageID None,[in] LPFNADDPROPSHEETPAGE pfnReplacePage,[in] LPARAM lParam)
HRESULT None oleaut32.SafeArrayAccessData(_In_ SAFEARRAY *psa,_Out_ void **ppvData)
HRESULT None azroles.AddPolicyAdministrator([in] BSTR bstrAdmin,[in None None,optional] VARIANT varReserved)
HRESULT None tapi3.SetApplicationPriority([in] BSTR pAppFilename,[in] long lMediaType,[in] VARIANT_BOOL fPriority)
HRESULT None tapi3.get_Call([out] ITCallInfo **ppCallInfo)
LONG TSPIAPI None.TSPI_phoneGetHookSwitch(HDRVPHONE hdPhone None,LPDWORD lpdwHookSwitchDevs None)
HRESULT None azroles.get_ApplicationGroups([out] IAzApplicationGroups **ppGroupCollection)
HRESULT None None.get_Terminals([out] VARIANT *pTerminals)
HRESULT None azroles.put_Version([in] BSTR bstrProp)
HRESULT None tapi3.get_Agent([out] ITAgent **ppAgent)
HRESULT None tapi3.put_AutoKeypadTonesMinimumDuration([in] long lDuration)
HRESULT None None.get_TerminalType([out] TERMINAL_TYPE *pType)
HRESULT None tapi3.SetAssistedTelephonyPriority([in] BSTR pAppFilename,[in] VARIANT_BOOL fPriority)
HRESULT None azroles.get_ApplicationGroups([out] IAzApplicationGroups **ppGroupCollection)
HRESULT None tapi3.get_EventFilter([in] TAPI_EVENT TapiEvent,[in] long lSubEvent,[out] VARIANT_BOOL *pEnable)
HRESULT None tapi3.get_MediaTypes([out] long *pMediaTypes)
HRESULT None tapi3.put_AutoVolumeControlStep([in] long lStepSize)
HRESULT None None.get_Terminals([out] VARIANT *pTerminals)
HRESULT None tapi3.get_ParticipantTypedInfo([in] PARTICIPANT_TYPED_INFO InfoType,[out] BSTR *ppInfo)
HRESULT None None.SelectTerminal([in] ITTerminal *pTerminal)
HRESULT None tapi3.get_MediaTypes([out] long *plMediaType)
HRESULT None tapi3.get_Event([out] AGENTHANDLER_EVENT *pEvent)
HRESULT None azroles.AddMember([in] BSTR bstrProp,[in None None,optional] VARIANT varReserved)
HRESULT None azroles.AddAppMember([in] BSTR bstrProp,[in None None,optional] VARIANT varReserved)
HRESULT None None.get_Stream([out] ITStream **ppITStream)
HRESULT None tapi3.CreateAgentWithID([in] BSTR pID,[in] BSTR pPIN,[out] ITAgent **ppAgent)
LONG TSPIAPI None.TSPI_phoneSetVolume(DRV_REQUESTID dwRequestID None,HDRVPHONE hdPhone None,DWORD dwHookSwitchDev None,DWORD dwVolume None)
HRESULT None azroles.Delete([in None None,optional] VARIANT varReserved)
HRESULT None tapi3.put_MediaTypes([in] long nMediaTypes)
HRESULT None azroles.DeleteMemberName([in] BSTR bstrProp,[in None None,optional] VARIANT varReserved)
HRESULT None tapi3.get_AgentSessions([out] VARIANT *pVariant)
HRESULT None tapi3.get_AgentHandler([out] ITAgentHandler **ppAgentHandler)
HRESULT None tapi3.get_State([out] CALLHUB_STATE *pState)
HRESULT None tapi3.CreateSessionWithPIN([in] ITACDGroup *pACDGroup,[in] ITAddress *pAddress,[in] BSTR pPIN,[out] ITAgentSession **ppAgentSession)
HRESULT None azroles.DeletePolicyAdministratorName([in] BSTR bstrAdmin,[in None None,optional] VARIANT varReserved)
HRESULT None azroles.DeleteOperation([in] BSTR bstrProp,[in None None,optional] VARIANT varReserved)
HRESULT None oleaut32.SafeArrayPtrOfIndex(_In_ SAFEARRAY *psa,_In_ LONG *rgIndices,_Out_ void **ppvData)
HRESULT None tapi3.EnumerateACDGroups([out] IEnumACDGroup **ppEnumACDGroup)
HRESULT None None.CreateSubStream([out] ITSubStream **ppSubStream)
HRESULT None oleaut32.SafeArrayGetRecordInfo(_In_ SAFEARRAY *psa,_Out_ IRecordInfo **prinfo)
HRESULT None azroles.Submit([in None None,optional] LONG lFlags,[in None None,optional] VARIANT varReserved)
HRESULT None oleaut32.SafeArraySetRecordInfo(_In_ SAFEARRAY *psa,_In_ IRecordInfo *prinfo)
HRESULT None oleaut32.SafeArraySetRecordInfo(_In_ SAFEARRAY *psa,_In_ IRecordInfo *prinfo)
HRESULT None rend.Connect([in] VARIANT_BOOL fSecure)
HRESULT None rend.Bind([in] BSTR pDomainName,[in] BSTR pUserName,[in] BSTR pPassword,[in] long lFlags)
HRESULT None shell32.ReplacePage(UINT uPageID None,[in] LPFNADDPROPSHEETPAGE pfnReplacePage,[in] LPARAM lParam)
HRESULT None azroles.DeleteAppNonMember([in] BSTR bstrProp,[in None None,optional] VARIANT varReserved)
HRESULT None tapi3.put_AutoVolumeControlRepeatPeriod([in] long lPeriod)
LSTATUS None shlwapi.SHRegEnumUSValue(_In_ HUSKEY hUSKey,_In_ DWORD dwIndex,_Out_ LPTSTR pszValueName,_Inout_ LPDWORD pcchValueNameLen,_Out_opt_ LPDWORD pdwType,_Out_opt_ void *pvData,_Inout_opt_ LPDWORD pcbData,_In_ SHREGENUM_FLAGS enumRegFlags)
LSTATUS None shlwapi.SHRegEnumUSValueW(_In_ HUSKEY hUSKey,_In_ DWORD dwIndex,_Out_ LPTSTR pszValueName,_Inout_ LPDWORD pcchValueNameLen,_Out_opt_ LPDWORD pdwType,_Out_opt_ void *pvData,_Inout_opt_ LPDWORD pcbData,_In_ SHREGENUM_FLAGS enumRegFlags)
LSTATUS None shlwapi.SHRegEnumUSValueA(_In_ HUSKEY hUSKey,_In_ DWORD dwIndex,_Out_ LPTSTR pszValueName,_Inout_ LPDWORD pcchValueNameLen,_Out_opt_ LPDWORD pdwType,_Out_opt_ void *pvData,_Inout_opt_ LPDWORD pcbData,_In_ SHREGENUM_FLAGS enumRegFlags)
HRESULT None mdhcp.get_ScopeID([out] long *pID)
HRESULT None tapi3.get_AverageTimeToAnswer([out] long *plAnswerTime)
HRESULT None rend.get_DefaultObjectTTL([out] long *pTTL)
HRESULT None oleaut32.SafeArrayGetElement(_In_ SAFEARRAY *psa,_In_ LONG *rgIndices,_Out_ void *pv)
HRESULT None tapi3.Transfer([in] ITBasicCallControl *pCall,[in] VARIANT_BOOL fSync)
HRESULT None tapi3.get_AverageCallTime([out] long *plCallTime)
HRESULT None tapi3.EnumerateCallHubs([out] IEnumCallHub **ppEnumCallHub)
HRESULT None tapi3.Get([in] StreamQualityProperty Property,[out] long *plValue,[out] TAPIControlFlags *plFlags)
HRESULT None tapi3.EnumerateACDGroups([out] IEnumACDGroup **ppEnumACDGroup)
BOOL None advapi32.ClearEventLog(_In_ HANDLE hEventLog,_In_ LPCTSTR lpBackupFileName)
BOOL None advapi32.ClearEventLogW(_In_ HANDLE hEventLog,_In_ LPCTSTR lpBackupFileName)
BOOL None advapi32.ClearEventLogA(_In_ HANDLE hEventLog,_In_ LPCTSTR lpBackupFileName)
HRESULT None oleaut32.SafeArraySetRecordInfo(_In_ SAFEARRAY *psa,_In_ IRecordInfo *prinfo)
HRESULT None tapi3.get_TotalACDTalkTime([out] long *plTalkTime)
HRESULT None tapi3.get_NumberOfCalls([out] long *plCalls)
HRESULT None tapi3.Get([in] StreamQualityProperty Property,[out] long *plValue,[out] TAPIControlFlags *plFlags)
HRESULT None rend.RefreshDirectoryObject([in] ITDirectoryObject *pDirectoryObject)
HRESULT None azroles.DeleteAppNonMember([in] BSTR bstrProp,[in None None,optional] VARIANT varReserved)
HRESULT None azroles.put_ApplicationData([in] BSTR bstrApplicationData)
HRESULT None tapi3.get_SessionStartTime([out] DATE *pdateSessionStart)
HRESULT None tapi3.get_Address([out] ITAddress **ppAddress)
HRESULT None tapi3.get_CallbackInstance([out] long *plCallbackInstance)
HRESULT None tapi3.get_Addresses([out] VARIANT *pVariant)
HRESULT None azroles.DeleteAppNonMember([in] BSTR bstrProp,[in None None,optional] VARIANT varReserved)
HRESULT None tapi3.get_DoNotDisturb([out] VARIANT_BOOL *pfDoNotDisturb)
HRESULT None tapi3.get_Status([in] ITStream *pITStream,[out] VARIANT_BOOL *pStatus)
Function None None.ScopeNodeHasChild(ScopeNamespace None None,SampleNode None None)
LONG TSPIAPI None.TSPI_providerInit(DWORD dwTSPIVersion None,DWORD dwPermanentProviderID None,DWORD dwLineDeviceIDBase None,DWORD dwPhoneDeviceIDBase None,DWORD_PTR dwNumLines None,DWORD_PTR dwNumPhones None,ASYNC_COMPLETION lpfnCompletionProc None,LPDWORD lpdwTSPIOptions None)
HRESULT None tapi3.get_Error([out] HRESULT *phrErrorCode)
HRESULT None tapi3.put_Volume([in] long lVolume)
HRESULT None oleaut32.SafeArraySetRecordInfo(_In_ SAFEARRAY *psa,_In_ IRecordInfo *prinfo)
HRESULT None azroles.get_TargetMachine([out] BSTR *pbstrDescription)
HRESULT None tapi3.get_LongestTimeToAnswer([out] long *plAnswerTime)
HRESULT None tapi3.CreateAgent([out] ITAgent **ppAgent)
HRESULT None tapi3.DeviceSpecificVariant([in] VARIANT varDevSpecificByteArray)
HRESULT None sdpblb.Delete([in] LONG Index)
HRESULT None tapi3.StartRinger([in] long lRingMode,[in] long lDuration)
HRESULT None None.RemoveStream([in] ITStream *pStream)
HRESULT None azroles.DeleteMember([in] BSTR bstrProp,[in None None,optional] VARIANT varReserved)
HRESULT None azroles.DeleteTask([in] BSTR bstrProp,[in None None,optional] VARIANT varReserved)
HRESULT None rend.put_IPPhonePrimary([in] BSTR pName)
HRESULT None tapi3.CreateDetectToneObject([out] ITDetectTone **ppDetectTone)
HRESULT None azroles.DeleteNonMemberName([in] BSTR bstrProp,[in None None,optional] VARIANT varReserved)
HRESULT None tapi3.get_Streams([out] VARIANT *pVariant)
HRESULT None azroles.put_ApplicationData([in] BSTR bstrApplicationData)
HRESULT None sdpblb.put_MediaName([in] BSTR pMediaName)
HRESULT None mdhcp.EnumerateScopes([out] IEnumMcastScope **ppEnumMcastScope)
LSTATUS None shlwapi.SHRegDeleteEmptyUSKey(_In_ HUSKEY hUSKey,_In_ LPCSTR pszValue,_In_ SHREGDEL_FLAGS delRegFlags)
LSTATUS None shlwapi.SHRegDeleteEmptyUSKeyW(_In_ HUSKEY hUSKey,_In_ LPCSTR pszValue,_In_ SHREGDEL_FLAGS delRegFlags)
LSTATUS None shlwapi.SHRegDeleteEmptyUSKeyA(_In_ HUSKEY hUSKey,_In_ LPCSTR pszValue,_In_ SHREGDEL_FLAGS delRegFlags)
HRESULT None rend.put_Originator([in] BSTR pOriginator)
HRESULT None tapi3.get_TotalTalkTime([out] long *plTalkTime)
HRESULT None azroles.AddPolicyReader([in] BSTR bstrReader,[in None None,optional] VARIANT varReserved)
HRESULT None tapi3.get_ID([out] BSTR *ppID)
HRESULT None azroles.get_Operations([out] VARIANT *pvarProp)
HRESULT None rend.get_DisplayName([out] BSTR *pName)
HRESULT None None.CreateTerminal([in] BSTR pTerminalClass,[in] long lMediaType,[in] TERMINAL_DIRECTION Direction,[out] ITTerminal **ppTerminal)
HRESULT None tapi3.get_TotalWrapUpTime([out] long *plWrapUpTime)
BOOL None advapi32.ClearEventLog(_In_ HANDLE hEventLog,_In_ LPCTSTR lpBackupFileName)
BOOL None advapi32.ClearEventLogW(_In_ HANDLE hEventLog,_In_ LPCTSTR lpBackupFileName)
BOOL None advapi32.ClearEventLogA(_In_ HANDLE hEventLog,_In_ LPCTSTR lpBackupFileName)
BOOL None advapi32.NotifyChangeEventLog(_In_ HANDLE hEventLog,_In_ HANDLE hEvent)
HRESULT None tapi3.get_Agent([out] ITAgent **ppAgent)
HRESULT None azroles.AddAppMember([in] BSTR bstrProp,[in None None,optional] VARIANT varReserved)
HRESULT None urlmon.GetWindow([out] HWND *phwnd)
HRESULT None azroles.get_MembersName([out] VARIANT *pvarProp)
HRESULT None tapi3.put_AutoStopTonesOnOnHook([in] VARIANT_BOOL fEnabled)
HRESULT None azroles.DeleteNonMemberName([in] BSTR bstrProp,[in None None,optional] VARIANT varReserved)
HRESULT None tapi3.get_TotalCallTime([out] long *plCallTime)
HRESULT None azroles.put_Description([in] BSTR bstrDescription)
HRESULT None azroles.SetProperty([in] LONG lPropId,[in] VARIANT varProp,[in None None,optional] VARIANT varReserved)
HRESULT None azroles.AddPolicyAdministratorName([in] BSTR bstrAdmin,[in None None,optional] VARIANT varReserved)
HRESULT None tapi3.get_Track([out] ITFileTrack **ppTrackTerminal)
HRESULT None oleaut32.SafeArrayCopyData(_In_ SAFEARRAY *psaSource,_In_ SAFEARRAY *psaTarget)
HRESULT None tapi3.get_Cause([out] CALL_STATE_EVENT_CAUSE *pCEC)
HRESULT None azroles.get_AppMembers([out] VARIANT *pvarProp)
HRESULT None tapi3.get_TickCount([out] long *plTickCount)
HRESULT None tapi3.get_Name([out] BSTR *ppName)
HRESULT None sdpblb.put_SessionVersion([in] DOUBLE SessionVersion)
HRESULT None oleaut32.SafeArrayCopy(_In_ SAFEARRAY *psa,_Out_ SAFEARRAY **ppsaOut)
HRESULT None oleaut32.SafeArrayGetLBound(_In_ SAFEARRAY *psa,_In_ UINT nDim,_Out_ LONG *plLbound)
HRESULT None azroles.get_AppMembers([out] VARIANT *pvarProp)
HRESULT None tapi3.get_SessionDuration([out] long *plDuration)
HRESULT None tapi3.get_State([out] AGENT_STATE *pAgentState)
HRESULT None azroles.AddAppNonMember([in] BSTR bstrProp,[in None None,optional] VARIANT varReserved)
HRESULT None sdpblb.SetPhoneNumbers([in] VARIANT Numbers,[in] VARIANT Names)
HRESULT None rend.EnumerateDefaultDirectories([out] IEnumDirectory **ppEnumDirectory)
HRESULT None azroles.DeletePropertyItem([in] LONG lPropId,[in] VARIANT varProp,[in None None,optional] VARIANT varReserved)
HRESULT None sdpblb.get_MediaTitle([out] BSTR *ppMediaTitle)
HRESULT None tapi3.get_AverageWrapUpTime([out] long *plWrapUpTime)
HRESULT None None.GetSite([in] REFIID riid,[out] void **ppvSite)
HRESULT None sdpblb.get_ConferenceBlob([out] BSTR *ppBlob)
HRESULT None tapi3.put_MessageWaiting([in] VARIANT_BOOL fMessageWaiting)
HRESULT None sdpblb.Init([in] BSTR pName,[in] BLOB_CHARACTER_SET CharacterSet,[in] BSTR pBlob)
HRESULT None None.Command([in] long lCommandID,[in] LPDATAOBJECT piDataObject)
LSTATUS None shlwapi.SHRegSetUSValue(_In_ LPCTSTR pszSubKey,_In_ LPCTSTR pszValue,_In_ DWORD dwType,_In_opt_ LPVOID *pvData,_In_opt_ DWORD cbData,_In_opt_ DWORD dwFlags)
LSTATUS None shlwapi.SHRegSetUSValueW(_In_ LPCTSTR pszSubKey,_In_ LPCTSTR pszValue,_In_ DWORD dwType,_In_opt_ LPVOID *pvData,_In_opt_ DWORD cbData,_In_opt_ DWORD dwFlags)
LSTATUS None shlwapi.SHRegSetUSValueA(_In_ LPCTSTR pszSubKey,_In_ LPCTSTR pszValue,_In_ DWORD dwType,_In_opt_ LPVOID *pvData,_In_opt_ DWORD cbData,_In_opt_ DWORD dwFlags)
HRESULT None None.GetParentState([out] DWORD *pdwState)
HRESULT None ole32.Stat([out] STATSTG *pstatstg,[in] DWORD grfStatFlag)
void STDAPICALLTYPE oleaut32.SafeArrayReleaseDescriptor(_In_ SAFEARRAY *psa)
HRESULT None tapi3.get_User([out] BSTR *ppUser)
HRESULT None azroles.AddAppMember([in] BSTR bstrProp,[in None None,optional] VARIANT varReserved)
HRESULT None sdpblb.get_SessionVersion([out] DOUBLE *pSessionVersion)
HRESULT None azroles.get_PolicyAdministratorsName([out] VARIANT *pvarAdmins)
HRESULT None None.get_State([out] TERMINAL_STATE *pTerminalState)
LSTATUS None shlwapi.SHEnumValue(_In_ HKEY hkey,_In_ DWORD dwIndex,LPTSTR pszValueName None,_Inout_opt_ LPDWORD pcchValueName,_Out_opt_ LPDWORD pdwType,LPVOID pvData None,_Inout_opt_ LPDWORD pcbData)
LSTATUS None shlwapi.SHEnumValueW(_In_ HKEY hkey,_In_ DWORD dwIndex,LPTSTR pszValueName None,_Inout_opt_ LPDWORD pcchValueName,_Out_opt_ LPDWORD pdwType,LPVOID pvData None,_Inout_opt_ LPDWORD pcbData)
LSTATUS None shlwapi.SHEnumValueA(_In_ HKEY hkey,_In_ DWORD dwIndex,LPTSTR pszValueName None,_Inout_opt_ LPDWORD pcchValueName,_Out_opt_ LPDWORD pdwType,LPVOID pvData None,_Inout_opt_ LPDWORD pcbData)
BOOL None advapi32.GetOldestEventLogRecord(_In_ HANDLE hEventLog,_Out_ PDWORD OldestRecord)
HRESULT None mdhcp.get_ScopeDescription([out] BSTR *ppDescription)
UINT None oleaut32.SafeArrayGetElemsize(_In_ SAFEARRAY *psa)
HRESULT None azroles.DeleteMemberName([in] BSTR bstrProp,[in None None,optional] VARIANT varReserved)
LONG TSPIAPI None.TUISPI_providerRemove(TUISPIDLLCALLBACK lpfnUIDLLCallback None,HWND hwndOwner None,DWORD dwPermanentProviderID None)
HRESULT None None.AddMenuItems([in] LPDATAOBJECT piDataObject,[in] LPCONTEXTMENUCALLBACK piCallback,[in None None,out] long *pInsertionAllowed)
HRESULT None rend.RefreshDirectoryObject([in] ITDirectoryObject *pDirectoryObject)
HRESULT None mmcndmgr.AddItem([in] CONTEXTMENUITEM *pItem)
LONG TSPIAPI None.TSPI_providerShutdown(DWORD dwTSPIVersion None,DWORD dwPermanentProviderID None)
LSTATUS None shlwapi.SHCopyKey(_In_ HKEY hkeySrc,_In_opt_ LPCTSTR pszSrcSubKey,_In_ HKEY hkeyDest,_Reserved_ DWORD fReserved)
LSTATUS None shlwapi.SHCopyKeyW(_In_ HKEY hkeySrc,_In_opt_ LPCTSTR pszSrcSubKey,_In_ HKEY hkeyDest,_Reserved_ DWORD fReserved)
LSTATUS None shlwapi.SHCopyKeyA(_In_ HKEY hkeySrc,_In_opt_ LPCTSTR pszSrcSubKey,_In_ HKEY hkeyDest,_Reserved_ DWORD fReserved)
HRESULT None azroles.get_BizrulesWritable([out] BOOL *pfProp)
HRESULT None tapi3.Transfer([in] ITBasicCallControl *pCall,[in] VARIANT_BOOL fSync)
LSTATUS None shlwapi.SHQueryInfoKey(_In_ HKEY hkey,_Out_opt_ LPDWORD pcSubKeys,_Out_opt_ LPDWORD pcchMaxSubKeyLen,_Out_opt_ LPDWORD pcValues,_Out_opt_ LPDWORD pcchMaxValueNameLen)
LSTATUS None shlwapi.SHQueryInfoKeyW(_In_ HKEY hkey,_Out_opt_ LPDWORD pcSubKeys,_Out_opt_ LPDWORD pcchMaxSubKeyLen,_Out_opt_ LPDWORD pcValues,_Out_opt_ LPDWORD pcchMaxValueNameLen)
LSTATUS None shlwapi.SHQueryInfoKeyA(_In_ HKEY hkey,_Out_opt_ LPDWORD pcSubKeys,_Out_opt_ LPDWORD pcchMaxSubKeyLen,_Out_opt_ LPDWORD pcValues,_Out_opt_ LPDWORD pcchMaxValueNameLen)
HRESULT None tapi3.Skip([in] ULONG celt)
HRESULT None tapi3.get_AverageTalkTime([out] long *plTalkTime)
LSTATUS None shlwapi.SHRegGetPath(_In_ HKEY hkey,_In_ LPCTSTR pszSubkey,_In_ LPCTSTR pszValue,_Out_ LPTSTR pszPath,DWORD dwFlags None)
LSTATUS None shlwapi.SHRegGetPathW(_In_ HKEY hkey,_In_ LPCTSTR pszSubkey,_In_ LPCTSTR pszValue,_Out_ LPTSTR pszPath,DWORD dwFlags None)
LSTATUS None shlwapi.SHRegGetPathA(_In_ HKEY hkey,_In_ LPCTSTR pszSubkey,_In_ LPCTSTR pszValue,_Out_ LPTSTR pszPath,DWORD dwFlags None)
HRESULT None oleaut32.SafeArrayDestroyDescriptor(_In_ SAFEARRAY *psa)
HRESULT None oleaut32.SafeArrayAllocDescriptorEx(_In_ VARTYPE vt,_In_ UINT cDims,_Out_ SAFEARRAY **ppsaOut)
HRESULT None sdpblb.get_SessionVersion([out] DOUBLE *pSessionVersion)
HRESULT None sdpblb.get_Name([out] BSTR *ppName)
HRESULT None rend.ModifyDirectoryObject([in] ITDirectoryObject *pDirectoryObject)
HRESULT None rend.EnumerateDirectoryObjects([in] DIRECTORY_OBJECT_TYPE DirectoryObjectType,[in] BSTR pName,[out] IEnumDirectoryObject **ppEnumObject)
LSTATUS None shlwapi.SHDeleteEmptyKey(_In_ HKEY hkey,_In_opt_ LPCTSTR pszSubKey)
LSTATUS None shlwapi.SHDeleteEmptyKeyW(_In_ HKEY hkey,_In_opt_ LPCTSTR pszSubKey)
LSTATUS None shlwapi.SHDeleteEmptyKeyA(_In_ HKEY hkey,_In_opt_ LPCTSTR pszSubKey)
HRESULT None tapi3.get_UsableAddresses([out] VARIANT *pVariant)
HRESULT None sdpblb.get__NewEnum([out] IUnknown **pVal)
HRESULT None azroles.AddNonMember([in] BSTR bstrProp,[in None None,optional] VARIANT varReserved)
HRESULT None rend.get_Originator([out] BSTR *ppOriginator)
HRESULT None tapi3.Hold([in] VARIANT_BOOL fHold)
HRESULT None sdpblb.Create([in] LONG Index,[out] ITMedia **ppMedia)
HRESULT None tapi3.get_State([out] AGENT_SESSION_STATE *pSessionState)
HRESULT None sdpblb.get_Originator([out] BSTR *ppOriginator)
HRESULT None None.EnumerateDynamicTerminalClasses([out] IEnumTerminalClass **ppTerminalClassEnumerator)
HRESULT None sdpblb.put_MachineAddress([in] BSTR pMachineAddress)
HRESULT None tapi3.CreateAgentWithID([in] BSTR pID,[in] BSTR pPIN,[out] ITAgent **ppAgent)
HRESULT None oleaut32.SafeArrayUnlock(_In_ SAFEARRAY *psa)
HRESULT None rend.put_AdvertisingScope([in] RND_ADVERTISING_SCOPE AdvertisingScope)
HRESULT None sdpblb.get_MediaCollection([out] ITMediaCollection **ppMediaCollection)
HRESULT None sdpblb.get_IsValid([out] VARIANT_BOOL *pfIsValid)
HRESULT None rend.put_IPPhonePrimary([in] BSTR pName)
LONG TSPIAPI None.TUISPI_providerInstall(TUISPIDLLCALLBACK lpfnUIDLLCallback None,HWND hwndOwner None,DWORD dwPermanentProviderID None)
HRESULT None rend.get_AdvertisingScope([out] RND_ADVERTISING_SCOPE *pAdvertisingScope)
LSTATUS None shlwapi.SHRegEnumUSValue(_In_ HUSKEY hUSKey,_In_ DWORD dwIndex,_Out_ LPTSTR pszValueName,_Inout_ LPDWORD pcchValueNameLen,_Out_opt_ LPDWORD pdwType,_Out_opt_ void *pvData,_Inout_opt_ LPDWORD pcbData,_In_ SHREGENUM_FLAGS enumRegFlags)
LSTATUS None shlwapi.SHRegEnumUSValueW(_In_ HUSKEY hUSKey,_In_ DWORD dwIndex,_Out_ LPTSTR pszValueName,_Inout_ LPDWORD pcchValueNameLen,_Out_opt_ LPDWORD pdwType,_Out_opt_ void *pvData,_Inout_opt_ LPDWORD pcbData,_In_ SHREGENUM_FLAGS enumRegFlags)
LSTATUS None shlwapi.SHRegEnumUSValueA(_In_ HUSKEY hUSKey,_In_ DWORD dwIndex,_Out_ LPTSTR pszValueName,_Inout_ LPDWORD pcchValueNameLen,_Out_opt_ LPDWORD pdwType,_Out_opt_ void *pvData,_Inout_opt_ LPDWORD pcbData,_In_ SHREGENUM_FLAGS enumRegFlags)
HRESULT None oleaut32.SafeArrayAllocDescriptor(_In_ UINT cDims,_Out_ SAFEARRAY **ppsaOut)
LSTATUS None shlwapi.SHSetValue(_In_ HKEY hkey,_In_opt_ LPCTSTR pszSubKey,_In_opt_ LPCTSTR pszValue,_In_ DWORD dwType,_In_opt_ LPCVOID pvData,_In_ DWORD cbData)
LSTATUS None shlwapi.SHSetValueW(_In_ HKEY hkey,_In_opt_ LPCTSTR pszSubKey,_In_opt_ LPCTSTR pszValue,_In_ DWORD dwType,_In_opt_ LPCVOID pvData,_In_ DWORD cbData)
LSTATUS None shlwapi.SHSetValueA(_In_ HKEY hkey,_In_opt_ LPCTSTR pszSubKey,_In_opt_ LPCTSTR pszValue,_In_ DWORD dwType,_In_opt_ LPCVOID pvData,_In_ DWORD cbData)
HRESULT None oleaut32.SafeArrayLock(_In_ SAFEARRAY *psa)
HRESULT None rend.get_IsEncrypted([out] VARIANT_BOOL *pfEncrypted)
HRESULT None tapi3.GenerateDigits2([in] BSTR pDigits,[in] TAPI_DIGITMODE DigitMode,[in] long lDuration)
HRESULT None azroles.get_Writable([out] BOOL *pfProp)
LSTATUS None shlwapi.SHRegOpenUSKey(_In_ LPCTSTR pszPath,_In_ REGSAM samDesired,_In_opt_ HUSKEY hRelativeUSKey,_Out_ PHUSKEY phNewUSKey,_In_ BOOL fIgnoreHKCU)
LSTATUS None shlwapi.SHRegOpenUSKeyW(_In_ LPCTSTR pszPath,_In_ REGSAM samDesired,_In_opt_ HUSKEY hRelativeUSKey,_Out_ PHUSKEY phNewUSKey,_In_ BOOL fIgnoreHKCU)
LSTATUS None shlwapi.SHRegOpenUSKeyA(_In_ LPCTSTR pszPath,_In_ REGSAM samDesired,_In_opt_ HUSKEY hRelativeUSKey,_Out_ PHUSKEY phNewUSKey,_In_ BOOL fIgnoreHKCU)
HRESULT None azroles.DeleteNonMemberName([in] BSTR bstrProp,[in None None,optional] VARIANT varReserved)
HRESULT None azroles.DeleteNonMember([in] BSTR bstrProp,[in None None,optional] VARIANT varReserved)
HRESULT None None.CreateStream([in] long lMediaType,[in] TERMINAL_DIRECTION td,[out] ITStream **ppStream)
HRESULT None tapi3.GenerateCustomTonesByCollection([in] ITCollection2 *pCustomToneCollection,[in] long lDuration)
HRESULT None azroles.DeleteTask([in] BSTR bstrProp,[in None None,optional] VARIANT varReserved)
HRESULT None mdhcp.CreateLeaseInfo([in] DATE LeaseStartTime,[in] DATE LeaseStopTime,[in] DWORD dwNumAddresses,[in] LPWSTR *ppAddresses,[in] LPWSTR pRequestID,[in] LPWSTR pServerAddress,[out] IMcastLeaseInfo **ppReleaseRequest)
HRESULT None tapi3.Next([in] ULONG celt,[out] ITACDGroup **ppElements,[in None None,out] ULONG *pceltFetched)
HRESULT None sdpblb.get_StartPort([out] LONG *pStartPort)
HRESULT None azroles.SetProperty([in] LONG lPropId,[in] VARIANT varProp,[in None None,optional] VARIANT varReserved)
HRESULT None azroles.SetProperty([in] LONG lPropId,[in] VARIANT varProp,[in None None,optional] VARIANT varReserved)
HRESULT None azroles.DeleteNonMemberName([in] BSTR bstrProp,[in None None,optional] VARIANT varReserved)
HRESULT None None.GetNextExtension([out] LPCLSID pExtCLSID)
HRESULT None None.RemoveStream([in] ITStream *pStream)
HRESULT None sdpblb.GetPhoneNumbers([out] VARIANT *pNumbers,[out] VARIANT *pNames)
LSTATUS None shlwapi.SHDeleteKey(_In_ HKEY hkey,_In_opt_ LPCTSTR pszSubKey)
LSTATUS None shlwapi.SHDeleteKeyW(_In_ HKEY hkey,_In_opt_ LPCTSTR pszSubKey)
LSTATUS None shlwapi.SHDeleteKeyA(_In_ HKEY hkey,_In_opt_ LPCTSTR pszSubKey)
HRESULT None sdpblb.SetPortInfo([in] LONG StartPort,[in] LONG NumPorts)
HRESULT None None.EnumerateStreams([out] IEnumStream **ppEnumStream)
BOOL None advapi32.DeregisterEventSource(_Inout_ HANDLE hEventLog)
HRESULT None tapi3.GatherDigits([in] TAPI_DIGITMODE DigitMode,[in] long lNumDigits,[in] BSTR pTerminationDigits,[in] long lFirstDigitTimeout,[in] long lInterDigitTimeout)
HRESULT None sdpblb.get_EnumerationIf([out] IEnumMedia **pVal)
HRESULT None tapi3.Clone([out] IEnumACDGroup **ppEnum)
BOOL None advapi32.NotifyChangeEventLog(_In_ HANDLE hEventLog,_In_ HANDLE hEvent)
HRESULT None sdpblb.Delete([in] LONG Index)
HRESULT None rend.put_IsEncrypted([in] VARIANT_BOOL fEncrypted)
HRESULT None None.get_Streams([out] VARIANT *pVariant)
HRESULT None sdpblb.get_Count([out] LONG *pVal)
HRESULT None tapi3.SetDefaultCapabilityPreferrence([in] DWORD dwNumCaps,[in] H245_CAPABILITY *pCapabilities,[in] DWORD *pWeights)
HRESULT None tapi3.SetDefaultCapabilityPreferrence([in] DWORD dwNumCaps,[in] H245_CAPABILITY *pCapabilities,[in] DWORD *pWeights)
HRESULT None tapi3.get_HookSwitchState([out] PHONE_HOOK_SWITCH_STATE *pState)
HRESULT None mdhcp.get_ScopeDescription([out] BSTR *ppDescription)
HRESULT None tapi3.get_Track([out] ITFileTrack **ppTrackTerminal)
HRESULT None azroles.get_AppMembers([out] VARIANT *pvarProp)
HRESULT None shlwapi.AssocGetPerceivedType(_In_ PCWSTR pszExt,_Out_ PERCEIVED *ptype,_Out_ PERCEIVEDFLAG *pflag,_Out_opt_ PWSTR *ppszType)
HRESULT None shlwapi.AssocQueryString(_In_ ASSOCF flags,_In_ ASSOCSTR str,_In_ LPCTSTR pszAssoc,_In_opt_ LPCTSTR pszExtra,_Out_opt_ LPTSTR pszOut,_Inout_ DWORD *pcchOut)
HRESULT None shlwapi.AssocQueryStringW(_In_ ASSOCF flags,_In_ ASSOCSTR str,_In_ LPCTSTR pszAssoc,_In_opt_ LPCTSTR pszExtra,_Out_opt_ LPTSTR pszOut,_Inout_ DWORD *pcchOut)
HRESULT None shlwapi.AssocQueryStringA(_In_ ASSOCF flags,_In_ ASSOCSTR str,_In_ LPCTSTR pszAssoc,_In_opt_ LPCTSTR pszExtra,_Out_opt_ LPTSTR pszOut,_Inout_ DWORD *pcchOut)
HRESULT None rend.get_StartTime([out] DATE *pDate)
LSTATUS None shlwapi.SHRegCloseUSKey(_In_ HUSKEY hUSKey)
HRESULT None rend.get_Url([out] BSTR *ppUrl)
HRESULT None sdpblb.get_FormatCodes([out] VARIANT *pVal)
HRESULT None tapi3.get_SessionDuration([out] long *plDuration)
HRESULT None shlwapi.AssocQueryKey(_In_ ASSOCF flags,_In_ ASSOCKEY key,_In_ LPCTSTR pszAssoc,_In_ LPCTSTR pszExtra,_Out_ HKEY *phkeyOut)
HRESULT None shlwapi.AssocQueryKeyW(_In_ ASSOCF flags,_In_ ASSOCKEY key,_In_ LPCTSTR pszAssoc,_In_ LPCTSTR pszExtra,_Out_ HKEY *phkeyOut)
HRESULT None shlwapi.AssocQueryKeyA(_In_ ASSOCF flags,_In_ ASSOCKEY key,_In_ LPCTSTR pszAssoc,_In_ LPCTSTR pszExtra,_Out_ HKEY *phkeyOut)
UINT None oleaut32.SafeArrayGetElemsize(_In_ SAFEARRAY *psa)
HRESULT None sdpblb.put_FormatCodes([in] VARIANT NewVal)
Function None None.ScopeNodeHasChild(ScopeNamespace None None,SampleNode None None)
UINT None oleaut32.SafeArrayGetElemsize(_In_ SAFEARRAY *psa)
UINT None oleaut32.SafeArrayGetElemsize(_In_ SAFEARRAY *psa)
HRESULT None None.Invoke([in] DISPID dispIdMember,[in] REFIID riid,[in] LCID lcid,[in] WORD wFlags,[in None None,out] DISPPARAMS *pDispParams,[out] VARIANT *pVarResult,[out] EXCEPINFO *pExcepInfo,[out] UINT *puArgErr)
LSTATUS None shlwapi.SHSetValue(_In_ HKEY hkey,_In_opt_ LPCTSTR pszSubKey,_In_opt_ LPCTSTR pszValue,_In_ DWORD dwType,_In_opt_ LPCVOID pvData,_In_ DWORD cbData)
LSTATUS None shlwapi.SHSetValueW(_In_ HKEY hkey,_In_opt_ LPCTSTR pszSubKey,_In_opt_ LPCTSTR pszValue,_In_ DWORD dwType,_In_opt_ LPCVOID pvData,_In_ DWORD cbData)
LSTATUS None shlwapi.SHSetValueA(_In_ HKEY hkey,_In_opt_ LPCTSTR pszSubKey,_In_opt_ LPCTSTR pszValue,_In_ DWORD dwType,_In_opt_ LPCVOID pvData,_In_ DWORD cbData)
HRESULT None None.Invoke([in] DISPID dispIdMember,[in] REFIID riid,[in] LCID lcid,[in] WORD wFlags,[in None None,out] DISPPARAMS *pDispParams,[out] VARIANT *pVarResult,[out] EXCEPINFO *pExcepInfo,[out] UINT *puArgErr)
UINT None oleaut32.SafeArrayGetElemsize(_In_ SAFEARRAY *psa)
LSTATUS None shlwapi.SHEnumKeyEx(_In_ HKEY hkey,DWORD dwIndex None,LPTSTR pszName None,_In_ LPDWORD pcchName)
LSTATUS None shlwapi.SHEnumKeyExW(_In_ HKEY hkey,DWORD dwIndex None,LPTSTR pszName None,_In_ LPDWORD pcchName)
LSTATUS None shlwapi.SHEnumKeyExA(_In_ HKEY hkey,DWORD dwIndex None,LPTSTR pszName None,_In_ LPDWORD pcchName)
HRESULT None oleaut32.SafeArrayLock(_In_ SAFEARRAY *psa)
HRESULT None rend.put_StopTime([in] DATE Date)
HRESULT None azroles.put_Description([in] BSTR bstrDescription)
HRESULT None azroles.SetProperty([in] LONG lPropId,[in] VARIANT varProp,[in None None,optional] VARIANT varReserved)
HRESULT None azroles.SetProperty([in] LONG lPropId,[in] VARIANT varProp,[in None None,optional] VARIANT varReserved)
HRESULT None oleaut32.SafeArrayLock(_In_ SAFEARRAY *psa)
HRESULT None shlwapi.AssocQueryStringByKey(_In_ ASSOCF flags,_In_ ASSOCSTR str,_In_ HKEY hkAssoc,_In_opt_ LPCTSTR pszExtra,_Out_opt_ LPTSTR pszOut,_Inout_ DWORD *pcchOut)
HRESULT None shlwapi.AssocQueryStringByKeyW(_In_ ASSOCF flags,_In_ ASSOCSTR str,_In_ HKEY hkAssoc,_In_opt_ LPCTSTR pszExtra,_Out_opt_ LPTSTR pszOut,_Inout_ DWORD *pcchOut)
HRESULT None shlwapi.AssocQueryStringByKeyA(_In_ ASSOCF flags,_In_ ASSOCSTR str,_In_ HKEY hkAssoc,_In_opt_ LPCTSTR pszExtra,_Out_opt_ LPTSTR pszOut,_Inout_ DWORD *pcchOut)
UINT None oleaut32.SafeArrayGetElemsize(_In_ SAFEARRAY *psa)
UINT None oleaut32.SafeArrayGetElemsize(_In_ SAFEARRAY *psa)
HRESULT None oleaut32.SafeArrayLock(_In_ SAFEARRAY *psa)
HRESULT None oleaut32.SafeArrayLock(_In_ SAFEARRAY *psa)
HRESULT None oleaut32.SafeArrayLock(_In_ SAFEARRAY *psa)
HRESULT None shlwapi.AssocQueryString(_In_ ASSOCF flags,_In_ ASSOCSTR str,_In_ LPCTSTR pszAssoc,_In_opt_ LPCTSTR pszExtra,_Out_opt_ LPTSTR pszOut,_Inout_ DWORD *pcchOut)
HRESULT None shlwapi.AssocQueryStringW(_In_ ASSOCF flags,_In_ ASSOCSTR str,_In_ LPCTSTR pszAssoc,_In_opt_ LPCTSTR pszExtra,_Out_opt_ LPTSTR pszOut,_Inout_ DWORD *pcchOut)
HRESULT None shlwapi.AssocQueryStringA(_In_ ASSOCF flags,_In_ ASSOCSTR str,_In_ LPCTSTR pszAssoc,_In_opt_ LPCTSTR pszExtra,_Out_opt_ LPTSTR pszOut,_Inout_ DWORD *pcchOut)
HRESULT None tapi3.get_AverageWrapUpTime([out] long *plWrapUpTime)
LSTATUS None shlwapi.SHRegSetPath(_In_ HKEY hkey,_In_ LPCTSTR pszSubkey,_In_ LPCTSTR pszValue,_In_ LPCTSTR pszPath,DWORD dwFlags None)
LSTATUS None shlwapi.SHRegSetPathW(_In_ HKEY hkey,_In_ LPCTSTR pszSubkey,_In_ LPCTSTR pszValue,_In_ LPCTSTR pszPath,DWORD dwFlags None)
LSTATUS None shlwapi.SHRegSetPathA(_In_ HKEY hkey,_In_ LPCTSTR pszSubkey,_In_ LPCTSTR pszValue,_In_ LPCTSTR pszPath,DWORD dwFlags None)
HRESULT None rend.get_DefaultDirectories([out] VARIANT *pVariant)
HRESULT None shlwapi.AssocGetPerceivedType(_In_ PCWSTR pszExt,_Out_ PERCEIVED *ptype,_Out_ PERCEIVEDFLAG *pflag,_Out_opt_ PWSTR *ppszType)
HRESULT None shlwapi.AssocCreate(_In_ CLSID clsid,_In_ REFIID riid,_Out_ void *ppv)
HRESULT None sdpblb.SetEncryptionKey([in] BSTR pKeyType,[in] BSTR *ppKeyData)
HRESULT None sdpblb.get_Url([out] BSTR *ppUrl)
HRESULT None ole32.Stat([out] STATSTG *pstatstg,[in] DWORD grfStatFlag)
HRESULT None sdpblb.put_MediaTitle([in] BSTR pMediaTitle)
HRESULT None None.FindUnit([in] IOleUndoUnit *pUU)
HRESULT None sdpblb.get_Url([out] BSTR *ppUrl)
HRESULT None sdpblb.Next([in] ULONG celt,[out] ITMedia **pVal,[out] ULONG *pceltFetched)
int None shlwapi.SHRegGetIntW(_In_ HKEY hk,_In_ LPCWSTR szKey,_In_ int nDefault)
int None shlwapi.SHRegGetIntW(_In_ HKEY hk,_In_ LPCWSTR szKey,_In_ int nDefault)
LSTATUS None shlwapi.SHEnumValue(_In_ HKEY hkey,_In_ DWORD dwIndex,LPTSTR pszValueName None,_Inout_opt_ LPDWORD pcchValueName,_Out_opt_ LPDWORD pdwType,LPVOID pvData None,_Inout_opt_ LPDWORD pcbData)
LSTATUS None shlwapi.SHEnumValueW(_In_ HKEY hkey,_In_ DWORD dwIndex,LPTSTR pszValueName None,_Inout_opt_ LPDWORD pcchValueName,_Out_opt_ LPDWORD pdwType,LPVOID pvData None,_Inout_opt_ LPDWORD pcbData)
LSTATUS None shlwapi.SHEnumValueA(_In_ HKEY hkey,_In_ DWORD dwIndex,LPTSTR pszValueName None,_Inout_opt_ LPDWORD pcchValueName,_Out_opt_ LPDWORD pdwType,LPVOID pvData None,_Inout_opt_ LPDWORD pcbData)
HRESULT None mmcndmgr.AddItem([in] CONTEXTMENUITEM *pItem)
HRESULT None tapi3.get_AverageTalkTime([out] long *plTalkTime)
LONG TSPIAPI None.TSPI_providerShutdown(DWORD dwTSPIVersion None,DWORD dwPermanentProviderID None)
HRESULT None mdhcp.RenewAddress([in] long lReserved,[in] IMcastLeaseInfo *pRenewRequest,[out] IMcastLeaseInfo **ppRenewResponse)
HRESULT None mmcndmgr.GetItem([in None None,out] LPSCOPEDATAITEM item)
HRESULT None azroles.put_Name([in] BSTR bstrName)
HRESULT None rend.put_Description([in] BSTR pDescription)
HRESULT None rend.EnableAutoRefresh([in] VARIANT_BOOL fEnable)
HRESULT None azroles.put_Name([in] BSTR bstrName)
HRESULT None rend.get_IPPhonePrimary([out] BSTR *ppName)
HRESULT None azroles.get_Members([out] VARIANT *pvarProp)
HRESULT None None.SelectTerminal([in] ITTerminal *pTerminal)
LSTATUS None shlwapi.SHGetValue(_In_ HKEY hkey,_In_opt_ LPCTSTR pszSubKey,_In_opt_ LPCTSTR pszValue,_Out_opt_ LPDWORD pdwType,_Out_opt_ LPVOID pvData,_Inout_opt_ LPDWORD pcbData)
LSTATUS None shlwapi.SHGetValueW(_In_ HKEY hkey,_In_opt_ LPCTSTR pszSubKey,_In_opt_ LPCTSTR pszValue,_Out_opt_ LPDWORD pdwType,_Out_opt_ LPVOID pvData,_Inout_opt_ LPDWORD pcbData)
LSTATUS None shlwapi.SHGetValueA(_In_ HKEY hkey,_In_opt_ LPCTSTR pszSubKey,_In_opt_ LPCTSTR pszValue,_Out_opt_ LPDWORD pdwType,_Out_opt_ LPVOID pvData,_Inout_opt_ LPDWORD pcbData)
MMRESULT None None.waveOutReset(HWAVEOUT hwo None)
HRESULT None tapi3.get_Terminal([out] ITTerminal **ppTerminal)
HRESULT None sdpblb.get_MachineAddress([out] BSTR *ppMachineAddress)
HRESULT None mdhcp.RequestAddress([in] IMcastScope *pScope,[in] DATE LeaseStartTime,[in] DATE LeaseStopTime,[in] long NumAddresses,[out] IMcastLeaseInfo **ppLeaseResponse)
HRESULT None mmcndmgr.AddThirdPartyExtensionItems([in] LPDATAOBJECT piDataObject)
HRESULT None mmcndmgr.AddThirdPartyExtensionItems([in] LPDATAOBJECT piDataObject)
HRESULT None tapi3.DetectDigits([in] TAPI_DIGITMODE DigitMode)
HRESULT None sdpblb.get_MachineAddress([out] BSTR *ppMachineAddress)
HRESULT None mmcndmgr.RenameResultItem([in] HRESULTITEM itemID)
HRESULT None rend.CreateDirectoryObject([in] DIRECTORY_OBJECT_TYPE DirectoryObjectType,[in] BSTR pName,[out] ITDirectoryObject **ppDirectoryObject)
MMRESULT None None.waveInOpen(LPHWAVEIN phwi None,UINT_PTR uDeviceID None,LPWAVEFORMATEX pwfx None,DWORD_PTR dwCallback None,DWORD_PTR dwCallbackInstance None,DWORD fdwOpen None)
HRESULT None rend.put_DefaultObjectTTL([in] long TTL)
HRESULT None rend.get_IsEncrypted([out] VARIANT_BOOL *pfEncrypted)
LSTATUS None shlwapi.SHRegCloseUSKey(_In_ HUSKEY hUSKey)
void STDAPICALLTYPE oleaut32.SysReleaseString(_In_ BSTR bstrString)
HRESULT None oleaut32.VarDecAbs(_In_ LPDECIMAL pdecIn,_Out_ LPDECIMAL pdecResult)
BOOL None shlwapi.AssocIsDangerous(_In_ PCWSTR pszAssoc)
HRESULT None mmcndmgr.AddItem([in] CONTEXTMENUITEM2 *pItem)
HRESULT None tapi3.get_Call([out] ITCallInfo **ppCall)
HRESULT None sdpblb.put_Name([in] BSTR pName)
HRESULT None tapi3.get_TotalWrapUpTime([out] long *plWrapUpTime)
HRESULT None None.GetTitle([in] LPOLESTR pszGroup,[out] LPOLESTR *pszTitle)
HRESULT None shlwapi.AssocQueryKey(_In_ ASSOCF flags,_In_ ASSOCKEY key,_In_ LPCTSTR pszAssoc,_In_ LPCTSTR pszExtra,_Out_ HKEY *phkeyOut)
HRESULT None shlwapi.AssocQueryKeyW(_In_ ASSOCF flags,_In_ ASSOCKEY key,_In_ LPCTSTR pszAssoc,_In_ LPCTSTR pszExtra,_Out_ HKEY *phkeyOut)
HRESULT None shlwapi.AssocQueryKeyA(_In_ ASSOCF flags,_In_ ASSOCKEY key,_In_ LPCTSTR pszAssoc,_In_ LPCTSTR pszExtra,_Out_ HKEY *phkeyOut)
HRESULT None oleaut32.VarParseNumFromStr(_In_ LPCOLESTR strIn,_In_ LCID lcid,_In_ ULONG dwFlags,_Out_ NUMPARSE *pnumprs,_Out_ BYTE *rgbDig)
HRESULT None None.Open([in] IOleParentUndoUnit *pPUU)
HRESULT None None.EnumerateDynamicTerminalClasses([out] IEnumTerminalClass **ppTerminalClassEnumerator)
HRESULT None azroles.DeleteAppMember([in] BSTR bstrProp,[in None None,optional] VARIANT varReserved)
HRESULT None tapi3.put_State([in] AGENT_STATE AgentState)
HRESULT None mmcndmgr.DeleteString([in] MMC_STRING_ID StringID)
HRESULT None mmcndmgr.UpdateItem([in] HRESULTITEM itemID)
HRESULT None azroles.DeleteNonMember([in] BSTR bstrProp,[in None None,optional] VARIANT varReserved)
LSTATUS None shlwapi.SHRegEnumUSKey(_In_ HUSKEY hUSKey,_In_ DWORD dwIndex,_Out_ LPTSTR pszName,_Inout_ LPDWORD pcchName,_In_ SHREGENUM_FLAGS enumRegFlags)
LSTATUS None shlwapi.SHRegEnumUSKeyW(_In_ HUSKEY hUSKey,_In_ DWORD dwIndex,_Out_ LPTSTR pszName,_Inout_ LPDWORD pcchName,_In_ SHREGENUM_FLAGS enumRegFlags)
LSTATUS None shlwapi.SHRegEnumUSKeyA(_In_ HUSKEY hUSKey,_In_ DWORD dwIndex,_Out_ LPTSTR pszName,_Inout_ LPDWORD pcchName,_In_ SHREGENUM_FLAGS enumRegFlags)
HRESULT None azroles.get_Tasks([out] VARIANT *pvarProp)
HRESULT None shell32.TranslateAcceleratorIO(LPMSG lpMsg None)
HRESULT None shell32.Initialize([in] PCIDLIST_ABSOLUTE pidlFolder,[in] IDataObject *pdtobj,[in] HKEY hkeyProgID)
LSTATUS None shlwapi.SHRegCloseUSKey(_In_ HUSKEY hUSKey)
HRESULT None tapi3.Skip([in] ULONG celt)
HRESULT None None.RemoveSubStream([in] ITSubStream *pSubStream)
HRESULT None rend.get_Description([out] BSTR *ppDescription)
HRESULT None mmcndmgr.AddPropertyName([in] LPCOLESTR pszPropName,[in] DWORD dwFlags)
HRESULT None None.CompareObjects([in] LPDATAOBJECT lpDataObjectA,[in] LPDATAOBJECT lpDataObjectB)
HRESULT None tapi3.get_TickCount([out] long *plTickCount)
HRESULT None azroles.get_PolicyAdministrators([out] VARIANT *pvarAdmins)
HRESULT None sdpblb.Skip([in] ULONG celt)
HRESULT None mmcndmgr.GetViewMode([out] long *lViewMode)
HRESULT None tapi3.get_NumberOfOutgoingCalls([out] long *plCalls)
HRESULT None rend.get_Protocol([out] BSTR *ppProtocol)
HRESULT None sdpblb.SetConferenceBlob([in] BLOB_CHARACTER_SET CharacterSet,[in] BSTR pBlob)
HRESULT None sdpblb.get_Count([out] LONG *pVal)
HRESULT None azroles.DeleteMember([in] BSTR bstrProp,[in None None,optional] VARIANT varReserved)
HRESULT None None.Add([in] IOleUndoUnit *pUU)
LSTATUS None shlwapi.SHQueryInfoKey(_In_ HKEY hkey,_Out_opt_ LPDWORD pcSubKeys,_Out_opt_ LPDWORD pcchMaxSubKeyLen,_Out_opt_ LPDWORD pcValues,_Out_opt_ LPDWORD pcchMaxValueNameLen)
LSTATUS None shlwapi.SHQueryInfoKeyW(_In_ HKEY hkey,_Out_opt_ LPDWORD pcSubKeys,_Out_opt_ LPDWORD pcchMaxSubKeyLen,_Out_opt_ LPDWORD pcValues,_Out_opt_ LPDWORD pcchMaxValueNameLen)
LSTATUS None shlwapi.SHQueryInfoKeyA(_In_ HKEY hkey,_Out_opt_ LPDWORD pcSubKeys,_Out_opt_ LPDWORD pcchMaxSubKeyLen,_Out_opt_ LPDWORD pcValues,_Out_opt_ LPDWORD pcchMaxValueNameLen)
LSTATUS None shlwapi.SHDeleteEmptyKey(_In_ HKEY hkey,_In_opt_ LPCTSTR pszSubKey)
LSTATUS None shlwapi.SHDeleteEmptyKeyW(_In_ HKEY hkey,_In_opt_ LPCTSTR pszSubKey)
LSTATUS None shlwapi.SHDeleteEmptyKeyA(_In_ HKEY hkey,_In_opt_ LPCTSTR pszSubKey)
HRESULT None rend.put_AdvertisingScope([in] RND_ADVERTISING_SCOPE AdvertisingScope)
HRESULT None tapi3.get_Streams([out] VARIANT *pVariant)
DWORD WINAPI shlwapi.SHGetAssocKeys(_In_ IQueryAssociations *pqa,_Out_ HKEY *rgKeys,DWORD cKeys None)
HRESULT None rend.put_Url([in] BSTR pUrl)
HRESULT None oleaut32.VarBstrCat(_In_ BSTR bstrLeft,_In_ BSTR bstrRight,_Out_ LPBSTR pbstrResult)
HRESULT None mmcndmgr.GetMMCVersion([out] long *pVersionMajor,[out] long *pVersionMinor)
MMRESULT None None.midiOutPrepareHeader(HMIDIOUT hmo None,LPMIDIHDR lpMidiOutHdr None,UINT cbMidiOutHdr None)
HRESULT None None.GetDisplayInfo([in None None,out] SCOPEDATAITEM *pScopeDataItem)
LONG TSPIAPI None.TUISPI_providerRemove(TUISPIDLLCALLBACK lpfnUIDLLCallback None,HWND hwndOwner None,DWORD dwPermanentProviderID None)
HRESULT None None.CreatePart([in] IOpcPartUri *name,[in] LPCWSTR contentType,[in] OPC_COMPRESSION_OPTIONS compressionOptions,[out None None,retval] IOpcPart **part)
HRESULT None tapi3.get_ACDGroup([out] ITACDGroup **ppACDGroup)
HRESULT None None.get_State([out] TERMINAL_STATE *pTerminalState)
HRESULT None tapi3.GenerateDigits2([in] BSTR pDigits,[in] TAPI_DIGITMODE DigitMode,[in] long lDuration)
HRESULT None shell32.UIActivateIO([in] BOOL fActivate,[in] MSG *pMsg)
HRESULT None tapi3.EnumerateUsableAddresses([out] IEnumAddress **ppEnumAddress)
HRESULT None tapi3.get_State([out] AGENT_SESSION_STATE *pSessionState)
HRESULT None sdpblb.put_Url([in] BSTR pUrl)
HRESULT None sdpblb.get_TransportProtocol([out] BSTR *ppProtocol)
HRESULT None tapi3.get_Queues([out] VARIANT *pVariant)
HRESULT None mmcndmgr.AddString([in] LPCOLESTR pszAdd,[out] MMC_STRING_ID *pStringID)
HRESULT None tapi3.CreateSession([in] ITACDGroup *pACDGroup,[in] ITAddress *pAddress,[out] ITAgentSession **ppAgentSession)
HRESULT None None.get_MediaType([out] long *plMediaType)
BOOL None advapi32.BackupEventLog(_In_ HANDLE hEventLog,_In_ LPCTSTR lpBackupFileName)
BOOL None advapi32.BackupEventLogW(_In_ HANDLE hEventLog,_In_ LPCTSTR lpBackupFileName)
BOOL None advapi32.BackupEventLogA(_In_ HANDLE hEventLog,_In_ LPCTSTR lpBackupFileName)
HRESULT None sdpblb.Clone([out] IEnumMedia **ppEnum)
HRESULT None azroles.get_NonMembersName([out] VARIANT *pvarProp)
HRESULT None mmcndmgr.SetBodyText([in] LPCOLESTR pszBodyText)
HRESULT None sdpblb.get_ConferenceBlob([out] BSTR *ppBlob)
HRESULT None None.GetSite([in] REFIID riid,[out] void **ppvSite)
HRESULT None None.GetResultViewType([in] long cookie,[out] LPOLESTR *ppViewType,[out] long *pViewOptions)
HRESULT STDAPICALLTYPE oleaut32.SysAddRefString(_In_ BSTR bstrString)
HRESULT None None.Destroy(LONG cookie None)
HRESULT None mmcndmgr.GetColumnFilter([in] UINT nColumn,[in None None,out] LPDWORD pdwType,[in None None,out] MMC_FILTERDATA *pFilterData)
HRESULT None urlmon.SetSecuritySite([in] IInternetSecurityMgrSite *pSite)
LSTATUS None shlwapi.SHRegQueryInfoUSKey(_In_ HUSKEY hUSKey,_Out_opt_ LPDWORD pcSubKeys,_Out_opt_ LPDWORD pcchMaxSubKeyLen,_Out_opt_ LPDWORD pcValues,_Out_opt_ LPDWORD pcchMaxValueNameLen,_In_ SHREGENUM_FLAGS enumRegFlags)
LSTATUS None shlwapi.SHRegQueryInfoUSKeyW(_In_ HUSKEY hUSKey,_Out_opt_ LPDWORD pcSubKeys,_Out_opt_ LPDWORD pcchMaxSubKeyLen,_Out_opt_ LPDWORD pcValues,_Out_opt_ LPDWORD pcchMaxValueNameLen,_In_ SHREGENUM_FLAGS enumRegFlags)
LSTATUS None shlwapi.SHRegQueryInfoUSKeyA(_In_ HUSKEY hUSKey,_Out_opt_ LPDWORD pcSubKeys,_Out_opt_ LPDWORD pcchMaxSubKeyLen,_Out_opt_ LPDWORD pcValues,_Out_opt_ LPDWORD pcchMaxValueNameLen,_In_ SHREGENUM_FLAGS enumRegFlags)
HRESULT None None.GetDefaultStaticTerminal([in] long lMediaType,[in] TERMINAL_DIRECTION Direction,[out] ITTerminal **ppTerminal)
HRESULT None None.Invoke([in] DISPID dispIdMember,[in] REFIID riid,[in] LCID lcid,[in] WORD wFlags,[in None None,out] DISPPARAMS *pDispParams,[out] VARIANT *pVarResult,[out] EXCEPINFO *pExcepInfo,[out] UINT *puArgErr)
void CALLBACK None.ClModifyFlowComplete(_In_ HANDLE ClFlowCtx,_In_ DWORD Status)
HRESULT None sdpblb.get_Name([out] BSTR *ppName)
MMRESULT None None.waveOutPrepareHeader(HWAVEOUT hwo None,LPWAVEHDR pwh None,UINT cbwh None)
BOOL None advapi32.GetEventLogInformation(_In_ HANDLE hEventLog,_In_ DWORD dwInfoLevel,_Out_ LPVOID lpBuffer,_In_ DWORD cbBufSize,_Out_ LPDWORD pcbBytesNeeded)
STDAPI None None.EditStreamClone(PAVISTREAM pavi None,PAVISTREAM * ppResult)
HRESULT None None.AddMenuItems([in] LPDATAOBJECT piDataObject,[in] LPCONTEXTMENUCALLBACK piCallback,[in None None,out] long *pInsertionAllowed)
HKEY None shlwapi.SHRegDuplicateHKey(_In_ HKEY hkey)
STDAPI None None.AVIStreamGetFrameClose(PGETFRAME pget None)
HRESULT None None.ControlbarNotify([in] MMC_NOTIFY_TYPE event,[in] LPARAM arg,[in] LPARAM param)
MMRESULT None None.midiDisconnect(HMIDI hMidi None,HMIDIOUT hmo None,LPVOID pReserved None)
HRESULT None mmcndmgr.InsertItem([in None None,out] LPSCOPEDATAITEM item)
MMRESULT None None.acmStreamSize(HACMSTREAM has None,DWORD cbInput None,LPDWORD pdwOutputBytes None,DWORD fdwSize None)
LSTATUS None shlwapi.SHRegCreateUSKey(_In_ LPCTSTR pszPath,_In_ REGSAM samDesired,_In_opt_ HUSKEY hRelativeUSKey,_Out_ PHUSKEY phNewUSKey,_In_ DWORD dwFlags)
LSTATUS None shlwapi.SHRegCreateUSKeyW(_In_ LPCTSTR pszPath,_In_ REGSAM samDesired,_In_opt_ HUSKEY hRelativeUSKey,_Out_ PHUSKEY phNewUSKey,_In_ DWORD dwFlags)
LSTATUS None shlwapi.SHRegCreateUSKeyA(_In_ LPCTSTR pszPath,_In_ REGSAM samDesired,_In_opt_ HUSKEY hRelativeUSKey,_Out_ PHUSKEY phNewUSKey,_In_ DWORD dwFlags)
HRESULT None oleaut32.VarDecRound(_In_ LPDECIMAL pdecIn,_In_ int cDecimals,_Out_ LPDECIMAL pdecResult)
HRESULT None None.Next([in] ULONG celt,[out] ITStream **ppElements,[out] ULONG *pceltFetched)
HRESULT None mdhcp.CreateLeaseInfoFromVariant([in] DATE LeaseStartTime,[in] DATE LeaseStopTime,[in] VARIANT vAddresses,[in] BSTR pRequestID,[in] BSTR pServerAddress,[out] IMcastLeaseInfo **ppReleaseRequest)
HRESULT None shlwapi.AssocGetPerceivedType(_In_ PCWSTR pszExt,_Out_ PERCEIVED *ptype,_Out_ PERCEIVEDFLAG *pflag,_Out_opt_ PWSTR *ppszType)
LSTATUS None shlwapi.SHRegGetUSValue(_In_ LPCTSTR pszSubKey,_In_opt_ LPCTSTR pszValue,_Inout_opt_ DWORD *pdwType,_Out_opt_ void *pvData,_Inout_opt_ DWORD *pcbData,_In_ BOOL fIgnoreHKCU,_In_opt_ void *pvDefaultData,_In_ DWORD dwDefaultDataSize)
LSTATUS None shlwapi.SHRegGetUSValueW(_In_ LPCTSTR pszSubKey,_In_opt_ LPCTSTR pszValue,_Inout_opt_ DWORD *pdwType,_Out_opt_ void *pvData,_Inout_opt_ DWORD *pcbData,_In_ BOOL fIgnoreHKCU,_In_opt_ void *pvDefaultData,_In_ DWORD dwDefaultDataSize)
LSTATUS None shlwapi.SHRegGetUSValueA(_In_ LPCTSTR pszSubKey,_In_opt_ LPCTSTR pszValue,_Inout_opt_ DWORD *pdwType,_Out_opt_ void *pvData,_Inout_opt_ DWORD *pcbData,_In_ BOOL fIgnoreHKCU,_In_opt_ void *pvDefaultData,_In_ DWORD dwDefaultDataSize)
HRESULT None shlwapi.AssocQueryKey(_In_ ASSOCF flags,_In_ ASSOCKEY key,_In_ LPCTSTR pszAssoc,_In_ LPCTSTR pszExtra,_Out_ HKEY *phkeyOut)
HRESULT None shlwapi.AssocQueryKeyW(_In_ ASSOCF flags,_In_ ASSOCKEY key,_In_ LPCTSTR pszAssoc,_In_ LPCTSTR pszExtra,_Out_ HKEY *phkeyOut)
HRESULT None shlwapi.AssocQueryKeyA(_In_ ASSOCF flags,_In_ ASSOCKEY key,_In_ LPCTSTR pszAssoc,_In_ LPCTSTR pszExtra,_Out_ HKEY *phkeyOut)
HRESULT None tapi3.get_TotalWrapUpTime([out] long *plWrapUpTime)
HRESULT None sdpblb.Clone([out] IEnumTime **ppEnum)
HRESULT None None.QueryDataObject([in] long cookie,[in] DATA_OBJECT_TYPES type,[out] LPDATAOBJECT *ppDataObject)
LSTATUS None shlwapi.SHRegDeleteUSValue(_In_ HUSKEY hUSKey,_In_ LPCTSTR pszValue,_In_ SHREGDEL_FLAGS delRegFlags)
LSTATUS None shlwapi.SHRegDeleteUSValueW(_In_ HUSKEY hUSKey,_In_ LPCTSTR pszValue,_In_ SHREGDEL_FLAGS delRegFlags)
LSTATUS None shlwapi.SHRegDeleteUSValueA(_In_ HUSKEY hUSKey,_In_ LPCTSTR pszValue,_In_ SHREGDEL_FLAGS delRegFlags)
HRESULT None None.GetDescriptiveText([in] LPOLESTR pszGroup,[out] LPOLESTR *pszDescriptiveText)
HRESULT None None.FindItem([in] LPRESULTFINDINFO pFindinfo,[out] int pnFoundIndex)
HRESULT None sdpblb.SetPhoneNumbers([in] VARIANT Numbers,[in] VARIANT Names)
HRESULT None oleaut32.SafeArrayCopyData(_In_ SAFEARRAY *psaSource,_In_ SAFEARRAY *psaTarget)
HRESULT None oleaut32.VarCyFromR4(_In_ FLOAT fltIn,_Out_ CY *pcyOut)
HRESULT None None.Next([in] ULONG celt,[out] MMC_TASK *rgelt,[out] ULONG *pceltFetched)
HRESULT None tapi3.get_TotalACDCallTime([out] long *plCallTime)
HRESULT None oleaut32.VarUI4FromCy(_In_ CY cyIn,_Out_ ULONG *pulOut)
HRESULT None mmcndmgr.SetDescBarText([in] LPOLESTR DescText)
HRESULT None oleaut32.SafeArrayAllocDescriptor(_In_ UINT cDims,_Out_ SAFEARRAY **ppsaOut)
HRESULT None sdpblb.put_Originator([in] BSTR pOriginator)
HRESULT None sdpblb.SetPortInfo([in] LONG StartPort,[in] LONG NumPorts)
HRESULT None None.TaskNotify([in] IDataObject *pdo,[in] VARIANT *arg,[in] VARIANT *param)
HRESULT None oleaut32.VarI4FromUI4(_In_ ULONG ulIn,_Out_ LONG *plOut)
HRESULT None mmcndmgr.ShowTopic([in] LPOLESTR pszHelpTopic)
HRESULT None None.get_Name([out] BSTR *ppName)
LSTATUS None shlwapi.SHDeleteValue(HKEY hkey None,LPCTSTR pszSubKey None,LPCTSTR pszValue None)
LSTATUS None shlwapi.SHDeleteValueW(HKEY hkey None,LPCTSTR pszSubKey None,LPCTSTR pszValue None)
LSTATUS None shlwapi.SHDeleteValueA(HKEY hkey None,LPCTSTR pszSubKey None,LPCTSTR pszValue None)
HRESULT None oleaut32.VarR4FromI8(_In_ LONG64 i64In,_Out_ FLOAT *pfltOut)
MMRESULT None None.waveOutSetPlaybackRate(HWAVEOUT hwo None,DWORD dwRate None)
HRESULT None oleaut32.SafeArrayGetVartype(_In_ SAFEARRAY *psa,_Out_ VARTYPE *pvt)
HRESULT None oleaut32.VarI1FromCy(_In_ CY cyIn,_Out_ CHAR *pcOut)
HRESULT None sdpblb.Clone([out] IEnumMedia **ppEnum)
HRESULT None mmcndmgr.GetColumnConfigData([in] SColumnSetID *pColID,[out] MMC_COLUMN_SET_DATA **ppColSetData)
HRESULT None None.GetBackground([in] LPOLESTR pszGroup,[out] MMC_TASK_DISPLAY_OBJECT *pTDO)
HRESULT None oleaut32.VarUI4FromUI8(_In_ ULONG64 ui64In,_Out_ ULONG *plOut)
MCIERROR None None.mciSendCommand(MCIDEVICEID IDDevice None,UINT uMsg None,DWORD fdwCommand None,DWORD_PTR dwParam None)
HRESULT None tapi3.get_TotalCallTime([out] long *plCallTime)
HRESULT None oleaut32.VarI2FromI1(_In_ CHAR cIn,_Out_ SHORT *psOut)
HRESULT None azroles.get_PolicyReaders([out] VARIANT *pvarReaders)
HRESULT None azroles.put_Description([in] BSTR bstrDescription)
HRESULT None mmcndmgr.Sort([in] int nColumn,[in] DWORD dwSortOptions,[in] long lUserParam)
HRESULT None oleaut32.SafeArrayDestroyDescriptor(_In_ SAFEARRAY *psa)
HRESULT None mmcndmgr.SetHeader([in] LPHEADERCTRL pHeader)
DWORD None shlwapi.SHQueryValueEx(_In_ HKEY hkey,_In_opt_ LPCTSTR pszValue,LPDWORD pdwReserved None,_Out_opt_ LPDWORD pdwType,_Out_opt_ LPVOID pvData,_Inout_opt_ LPDWORD pcbData)
DWORD None shlwapi.SHQueryValueExW(_In_ HKEY hkey,_In_opt_ LPCTSTR pszValue,LPDWORD pdwReserved None,_Out_opt_ LPDWORD pdwType,_Out_opt_ LPVOID pvData,_Inout_opt_ LPDWORD pcbData)
DWORD None shlwapi.SHQueryValueExA(_In_ HKEY hkey,_In_opt_ LPCTSTR pszValue,LPDWORD pdwReserved None,_Out_opt_ LPDWORD pdwType,_Out_opt_ LPVOID pvData,_Inout_opt_ LPDWORD pcbData)
HRESULT None mdhcp.Skip([in] ULONG celt)
HRESULT None azroles.GetProperty([in] LONG lPropId,[in None None,optional] VARIANT varReserved,[out] VARIANT *pvarProp)
HRESULT None mmcndmgr.UpdateAllViews([in] LPDATAOBJECT lpDataObject,[in] LPARAM data,[in] LONG_PTR hint)
HRESULT None mmcndmgr.CreatePropertySheet([in] LPCWSTR title,[in] boolean type,[in] long cookie,[in] LPDATAOBJECT pIDataObject,[in] DWORD dwOptions)
HRESULT None rend.Clone([out] IEnumDirectory **ppEnum)
HRESULT None mmcndmgr.AddPrimaryPages([in] LPUNKNOWN lpUnknown,[in] BOOL bCreateHandle,[in] HWND hNotifyWindow,[in] BOOL bScopePane)
HRESULT None mmcndmgr.ModifyItemState([in] int nIndex,[in] HRESULTITEM itemID,[in] UINT uAdd,[in] UINT uRemove)
UINT ACMFILTERCHOOSEHOOKPROC None.acmFilterChooseHookProc(HWND hwnd None,UINT uMsg None,WPARAM wParam None,LPARAM lParam None)
HRESULT None azroles.SetProperty([in] LONG lPropId,[in] VARIANT varProp,[in None None,optional] VARIANT varReserved)
HRESULT None azroles.get_PolicyAdministratorsName([out] VARIANT *pvarAdmins)
MMRESULT None None.waveOutGetPitch(HWAVEOUT hwo None,LPDWORD pdwPitch None)
BOOL None None.mmTaskSignal(DWORD h None)
HRESULT None mmcndmgr.DeleteItem([in] HRESULTITEM itemID,[in] INT nCol)
HRESULT None oleaut32.VarI4FromUI2(_In_ USHORT uiIn,_Out_ LONG *plOut)
HRESULT None mmcndmgr.ShowContextMenu([in] HWND hwndParent,[in] long xPos,[in] long yPos,[out] long *plSelected)
HRESULT None None.GetDisplayInfo([in None None,out] RESULTDATAITEM *pResultDataItem)
HRESULT None sdpblb.get_SessionId([out] DOUBLE *pSessionId)
HRESULT None tapi3.get_Calls([out] VARIANT *pVariant)
STDAPI None None.AVIFileInfo(PAVIFILE pfile None,AVIFILEINFO * pfi,LONG lSize None)
LSTATUS None shlwapi.SHRegQueryUSValue(_In_ HUSKEY hUSKey,_In_opt_ LPCTSTR pszValue,_Inout_opt_ LPDWORD *pdwType,_Out_opt_ LPVOID *pvData,_Inout_ LPDWORD *pcbData,_In_ BOOL fIgnoreHKCU,_In_opt_ LPVOID *pvDefaultData,_In_opt_ DWORD dwDefaultDataSize)
LSTATUS None shlwapi.SHRegQueryUSValueW(_In_ HUSKEY hUSKey,_In_opt_ LPCTSTR pszValue,_Inout_opt_ LPDWORD *pdwType,_Out_opt_ LPVOID *pvData,_Inout_ LPDWORD *pcbData,_In_ BOOL fIgnoreHKCU,_In_opt_ LPVOID *pvDefaultData,_In_opt_ DWORD dwDefaultDataSize)
LSTATUS None shlwapi.SHRegQueryUSValueA(_In_ HUSKEY hUSKey,_In_opt_ LPCTSTR pszValue,_Inout_opt_ LPDWORD *pdwType,_Out_opt_ LPVOID *pvData,_Inout_ LPDWORD *pcbData,_In_ BOOL fIgnoreHKCU,_In_opt_ LPVOID *pvDefaultData,_In_opt_ DWORD dwDefaultDataSize)
HRESULT None mmcndmgr.GetChildItem([in] HSCOPEITEM item,[out] HSCOPEITEM *pItemChild,[out] long *plCookie)
HRESULT None None.CreatePropertyPages([in] LPPROPERTYSHEETCALLBACK lpProvider,[in] LONG_PTR handle,[in] LPDATAOBJECT lpIDataObject)
HRESULT None azroles.DeleteMember([in] BSTR bstrProp,[in None None,optional] VARIANT varReserved)
HRESULT None None.CreatePartUri([in] LPCWSTR pwzUri,[out None None,retval] IOpcPartUri **partUri)
HRESULT STDAPICALLTYPE oleaut32.SysAddRefString(_In_ BSTR bstrString)
HRESULT None sdpblb.put_TransportProtocol([in] BSTR pProtocol)
HRESULT None mmcndmgr.SetColumnSortData([in] SColumnSetID *pColID,[in] MMC_SORT_SET_DATA *pColSortData)
HRESULT None mmcndmgr.SetTitleText([in] LPCOLESTR pszTitleText)
HRESULT None mmcndmgr.InsertItem([in None None,out] LPRESULTDATAITEM item)
HRESULT None oleaut32.VarBoolFromUI2(_In_ USHORT uiIn,_Out_ VARIANT_BOOL *pboolOut)
HRESULT None None.QueryDispatch([in] MMC_COOKIE cookie,[in] DATA_OBJECT_TYPES type,[out] LPDISPATCH *ppDispatch)
HRESULT None oleaut32.VectorFromBstr(_In_ BSTR bstr,_Out_ SAFEARRAY **ppsa)
HRESULT None mmcndmgr.Show([in] LONG_PTR window,[in] int page)
HRESULT None None.Initialize([in] LPUNKNOWN pUnknown)
HRESULT None oleaut32.VarI4FromDisp(IDispatch *pdispIn None,_In_ LCID lcid,_Out_ LONG *plOut)
HRESULT None None.get_DynamicTerminalClasses([out] VARIANT *pVariant)
HRESULT None None.ActivateMe([in] IOleDocumentView *pViewToActivate)
void CALLBACK None.ClAddFlowComplete(_In_ HANDLE ClFlowCtx,_In_ ULONG Status)
STDAPI None None.AVIStreamSetFormat(PAVISTREAM pavi None,LONG lPos None,LPVOID lpFormat None,LONG cbFormat None)
HIC None None.ICGetDisplayFormat(HIC hic None,LPBITMAPINFOHEADER lpbiIn None,LPBITMAPINFOHEADER lpbiOut None,int BitDepth None,int dx None,int dy None)
MMRESULT None None.mmioFlush(HMMIO hmmio None,UINT fuFlush None)
BOOL None None.MCIWndRegisterClass(HINSTANCE hInstance None)
HRESULT None None.QueryDispatch([in] MMC_COOKIE cookie,[in] DATA_OBJECT_TYPES type,[out] LPDISPATCH *ppDispatch)
HRESULT None mmcndmgr.SetItem([in] LPRESULTDATAITEM item)
UINT None None.midiOutGetNumDevs(VOID None None)
HRESULT None None.GetFirstExtension([out] LPCLSID pExtCLSID)
HRESULT None mmcndmgr.SetToolbar([in] LPTOOLBAR pToolbar)
STDAPI None None.AVIFileOpen(PAVIFILE * ppfile,LPCTSTR szFile None,UINT mode None,CLSID pclsidHandler None)
HRESULT None mmcndmgr.ModifyViewStyle([in] MMC_RESULT_VIEW_STYLE add,[in] MMC_RESULT_VIEW_STYLE remove)
HRESULT None None.RestoreResultView([in] MMC_COOKIE cookie,[in] PRESULT_VIEW_TYPE_INFO pResultViewType)
HRESULT None oleaut32.VarUI2FromI8(_In_ LONG64 i64In,_Out_ USHORT *puiOut)
HRESULT None oleaut32.VarI1FromStr(_In_ LPCOLESTR strIn,_In_ LCID lcid,_In_ ULONG dwFlags,_Out_ CHAR *pcOut)
void None None.ICSeqCompressFrameEnd(PCOMPVARS pc None)
HRESULT None mmcndmgr.QueryResultImageList([out] LPIMAGELIST *ppImageList)
HRESULT None oleaut32.VarI1FromUI2(_In_ USHORT uiIn,_Out_ CHAR *pcOut)
HRESULT None mmcndmgr.GetItem([in None None,out] LPRESULTDATAITEM item)
HRESULT None mmcndmgr.RenameScopeItem([in] HSCOPEITEM hScopeItem)
HRESULT None mmcndmgr.SelectScopeItem([in] HSCOPEITEM hScopeItem)
HRESULT None oleaut32.VarUI8FromDisp(_In_ IDispatch *pdispIn,_In_ LCID lcid,_Out_ ULONG64 *pi64Out)
HRESULT None mmcndmgr.GetColumnText([in] int nCol,[out] LPOLESTR *pText)
MMRESULT None None.waveOutPrepareHeader(HWAVEOUT hwo None,LPWAVEHDR pwh None,UINT cbwh None)
HRESULT None oleaut32.VarDecFromI2(_In_ SHORT uiIn,_Out_ DECIMAL *pdecOut)
STDAPI None None.AVIStreamGetFrameClose(PGETFRAME pget None)
MMRESULT None None.acmStreamSize(HACMSTREAM has None,DWORD cbInput None,LPDWORD pdwOutputBytes None,DWORD fdwSize None)
void CALLBACK None.ClNotifyHandler(_In_ HANDLE ClRegCtx,_In_ HANDLE ClIfcCtx,_In_ ULONG Event,_In_ HANDLE SubCode,_In_ ULONG BufSize,_In_ PVOID Buffer)
MMRESULT None None.waveInReset(HWAVEIN hwi None)
BOOL None shlwapi.SHRegGetBoolUSValue(_In_ LPCTSTR pszSubKey,_In_opt_ LPCTSTR pszValue,_In_ BOOL fIgnoreHKCU,_In_ BOOL fDefault)
BOOL None shlwapi.SHRegGetBoolUSValueW(_In_ LPCTSTR pszSubKey,_In_opt_ LPCTSTR pszValue,_In_ BOOL fIgnoreHKCU,_In_ BOOL fDefault)
BOOL None shlwapi.SHRegGetBoolUSValueA(_In_ LPCTSTR pszSubKey,_In_opt_ LPCTSTR pszValue,_In_ BOOL fIgnoreHKCU,_In_ BOOL fDefault)
HRESULT None mmcndmgr.SetColumnFilter([in] UINT nColumn,[in] DWORD dwType,[in] MMC_FILTERDATA *pFilterData)
HRESULT None None.get_StaticTerminals([out] VARIANT *pVariant)
BOOL WINAPI user32.PeekMessage(_Out_ LPMSG lpMsg,_In_opt_ HWND hWnd,_In_ UINT wMsgFilterMin,_In_ UINT wMsgFilterMax,_In_ UINT wRemoveMsg)
BOOL WINAPI user32.PeekMessageW(_Out_ LPMSG lpMsg,_In_opt_ HWND hWnd,_In_ UINT wMsgFilterMin,_In_ UINT wMsgFilterMax,_In_ UINT wRemoveMsg)
BOOL WINAPI user32.PeekMessageA(_Out_ LPMSG lpMsg,_In_opt_ HWND hWnd,_In_ UINT wMsgFilterMin,_In_ UINT wMsgFilterMax,_In_ UINT wRemoveMsg)
void CALLBACK None.ClModifyFlowComplete(_In_ HANDLE ClFlowCtx,_In_ DWORD Status)
HRESULT None mmcndmgr.GetNextItem([in] HSCOPEITEM item,[out] HSCOPEITEM *pItemNext,[out] long *plCookie)
LSTATUS None shlwapi.SHRegQueryInfoUSKey(_In_ HUSKEY hUSKey,_Out_opt_ LPDWORD pcSubKeys,_Out_opt_ LPDWORD pcchMaxSubKeyLen,_Out_opt_ LPDWORD pcValues,_Out_opt_ LPDWORD pcchMaxValueNameLen,_In_ SHREGENUM_FLAGS enumRegFlags)
LSTATUS None shlwapi.SHRegQueryInfoUSKeyW(_In_ HUSKEY hUSKey,_Out_opt_ LPDWORD pcSubKeys,_Out_opt_ LPDWORD pcchMaxSubKeyLen,_Out_opt_ LPDWORD pcValues,_Out_opt_ LPDWORD pcchMaxValueNameLen,_In_ SHREGENUM_FLAGS enumRegFlags)
LSTATUS None shlwapi.SHRegQueryInfoUSKeyA(_In_ HUSKEY hUSKey,_Out_opt_ LPDWORD pcSubKeys,_Out_opt_ LPDWORD pcchMaxSubKeyLen,_Out_opt_ LPDWORD pcValues,_Out_opt_ LPDWORD pcchMaxValueNameLen,_In_ SHREGENUM_FLAGS enumRegFlags)
void CALLBACK None.ClDeleteFlowComplete(_In_ HANDLE ClFlowCtx,_In_ DWORD Status)
HRESULT None None.GetDefaultStaticTerminal([in] long lMediaType,[in] TERMINAL_DIRECTION Direction,[out] ITTerminal **ppTerminal)
LRESULT CALLBACK None.WndProc(HWND hWnd None,UINT uMessage None,WPARAM wParam None,LPARAM lParam None)
HRESULT None mmcndmgr.SetColumnWidth([in] int nCol,[in] int nWidth)
HRESULT None mmcndmgr.DeleteColumn([in] int nCol)
HRESULT None mmcndmgr.GetColumnFilter([in] UINT nColumn,[in None None,out] LPDWORD pdwType,[in None None,out] MMC_FILTERDATA *pFilterData)
HRESULT None oleaut32.VarUI1FromR8(_In_ DOUBLE dblIn,_Out_ BYTE *pbOut)
HRESULT None mmcndmgr.InsertColumn([in] int nCol,[in] LPCWSTR title,[in] int nFormat,[in] int nWidth)
HRESULT None mmcndmgr.SetColumnText([in] int nCol,[in] LPCWSTR title)
HRESULT None urlmon.SetSecuritySite([in] IInternetSecurityMgrSite *pSite)
HRESULT None mmcndmgr.GetColumnWidth([in] int nCol,[out] int *pWidth)
HRESULT None mmcndmgr.GetColumnText([in] int nCol,[out] LPOLESTR *pText)
DWORD None None.ICCompress(HIC hic None,DWORD dwFlags None,LPBITMAPINFOHEADER lpbiOutput None,LPVOID lpData None,LPBITMAPINFOHEADER lpbiInput None,LPVOID lpBits None,LPDWORD lpckid None,LPDWORD lpdwFlags None,LONG lFrameNum None,DWORD dwFrameSize None,DWORD dwQuality None,LPBITMAPINFOHEADER lpbiPrev None,LPVOID lpPrev None)
HRESULT None mmcndmgr.SetColumnFilter([in] UINT nColumn,[in] DWORD dwType,[in] MMC_FILTERDATA *pFilterData)
MMRESULT None None.midiInGetID(HMIDIIN hmi None,LPUINT puDeviceID None)
MMRESULT None None.acmStreamConvert(HACMSTREAM has None,LPACMSTREAMHEADER pash None,DWORD fdwConvert None)
UINT None None.mixerGetNumDevs(VOID None None)
MMRESULT None None.timeKillEvent(UINT uTimerID None)
LRESULT CALLBACK None.capErrorCallback(HWND hWnd None,int nID None,LPCTSTR lpsz None)
BOOL None None.mciExecute(LPCSTR pszCommand None)
LONG None None.mmioWrite(HMMIO hmmio None,char _huge* pch,LONG cch None)
MMRESULT None None.midiOutGetDevCaps(UINT_PTR uDeviceID None,LPMIDIOUTCAPS lpMidiOutCaps None,UINT cbMidiOutCaps None)
LONG None None.AVISaveOptionsFree(int nStreams None,LPAVICOMPRESSOPTIONS *plpOptions None)
HRESULT None None.CreateStreamOnFile([in] LPCWSTR filename,[in] OPC_STREAM_IO_MODE ioMode,[in] LPSECURITY_ATTRIBUTES securityAttributes,[in] DWORD dwFlagsAndAttributes,[out None None,retval] IStream **stream)
DWORD None None.ICDraw(HIC hic None,DWORD dwFlags None,LPVOID lpFormat None,LPVOID lpData None,DWORD cbData None,LONG lTime None)
UINT None None.auxGetNumDevs(VOID None None)
MMRESULT None None.timeSetEvent(UINT uDelay None,UINT uResolution None,LPTIMECALLBACK lpTimeProc None,DWORD_PTR dwUser None,UINT fuEvent None)
LONG None None.MyStatusProc(LPARAM lParam None,UINT Message None)
MMRESULT None None.waveOutClose(HWAVEOUT hwo None)
MMRESULT None None.waveInClose(HWAVEIN hwi None)
LRESULT None None.ICClose(HIC hic None)
VOID None None.mmTaskBlock(DWORD h None)
YIELDPROC None None.mciGetYieldProc(MCIDEVICEID IDDevice None,LPDWORD lpdwYieldData None)
LRESULT CALLBACK None.capControlCallback(HWND hWnd None,int nState None)
void CALLBACK None.TimeProc(UINT uID None,UINT uMsg None,DWORD dwUser None,DWORD dw1 None,DWORD dw2 None)
MMRESULT None None.waveOutBreakLoop(HWAVEOUT hwo None)
UINT None None.joyGetNumDevs(VOID None None)
HRESULT None None.ActivateMe([in] IOleDocumentView *pViewToActivate)
BOOL None None.DrawDibTime(HDRAWDIB hdd None,LPDRAWDIBTIME lpddtime None)
BOOL None None.DrawDibDraw(HDRAWDIB hdd None,HDC hdc None,int xDst None,int yDst None,int dxDst None,int dyDst None,LPBITMAPINFOHEADER lpbi None,LPVOID lpBits None,int xSrc None,int ySrc None,int dxSrc None,int dySrc None,UINT wFlags None)
MMRESULT None None.waveOutSetPitch(HWAVEOUT hwo None,DWORD dwPitch None)
STDAPI None None.AVIStreamWriteData(PAVISTREAM pavi None,DWORD ckid None,LPVOID lpData None,LONG cbData None)
MMRESULT None None.acmFilterEnum(HACMDRIVER had None,LPACMFILTERDETAILS pafd None,ACMFILTERENUMCB fnCallback None,DWORD_PTR dwInstance None,DWORD fdwEnum None)
BOOL VFWAPI None.capGetDriverDescription(WORD wDriverIndex None,LPTSTR lpszName None,INT cbName None,LPTSTR lpszVer None,INT cbVer None)
MMRESULT None None.midiStreamOpen(LPHMIDISTRM lphStream None,LPUINT puDeviceID None,DWORD cMidi None,DWORD_PTR dwCallback None,DWORD_PTR dwInstance None,DWORD fdwOpen None)
MMRESULT None None.midiStreamPause(HMIDISTRM hms None)
HANDLE None None.ICImageCompress(HIC hic None,UINT uiFlags None,LPBITMAPINFO lpbiIn None,LPVOID lpBits None,LPBITMAPINFO lpbiOut None,LONG lQuality None,LONG * plSize)
LRESULT CALLBACK None.capYieldCallback(HWND hWnd None)
LPVOID None None.ICSeqCompressFrame(PCOMPVARS pc None,UINT uiFlags None,LPVOID lpBits None,BOOL * pfKey,LONG * plSize)
STDAPI None None.CreateEditableStream(PAVISTREAM * ppsEditable,PAVISTREAM psSource None)
MMRESULT None None.joyGetDevCaps(UINT_PTR uJoyID None,LPJOYCAPS pjc None,UINT cbjc None)
void CALLBACK None.waveOutProc(HWAVEOUT hwo None,UINT uMsg None,DWORD_PTR dwInstance None,DWORD_PTR dwParam1 None,DWORD_PTR dwParam2 None)
MCIERROR None None.mciSendString(LPCTSTR lpszCommand None,LPTSTR lpszReturnString None,UINT cchReturn None,HANDLE hwndCallback None)
MMRESULT None None.midiInStart(HMIDIIN hMidiIn None)
MMRESULT None None.midiOutCacheDrumPatches(HMIDIOUT hmo None,UINT wPatch None,WORD * lpKeyArray,UINT wFlags None)
MMRESULT None None.waveInPrepareHeader(HWAVEIN hwi None,LPWAVEHDR pwh None,UINT cbwh None)
BOOL None None.ICRemove(DWORD fccType None,DWORD fccHandler None,UINT wFlags None)
DWORD None None.ICDrawSuggestFormat(HIC hic None,LPBITMAPINFOHEADER lpbiIn None,LPBITMAPINFOHEADER lpbiOut None,int dxSrc None,int dySrc None,int dxDst None,int dyDst None,HIC hicDecompressor None)
LPVOID None None.ICSeqCompressFrame(PCOMPVARS pc None,UINT uiFlags None,LPVOID lpBits None,BOOL * pfKey,LONG * plSize)
MMRESULT None None.auxGetDevCaps(UINT_PTR uDeviceID None,LPAUXCAPS lpCaps None,UINT cbCaps None)
MMRESULT None None.mmioRename(LPCTSTR szFilename None,LPCTSTR szNewFilename None,const LPMMIOINFO lpmmioinfo,DWORD dwRenameFlags None)
MCIDEVICEID None None.mciGetDeviceID(LPCTSTR lpszDevice None)
DWORD None None.waveOutMessage(HWAVEOUT deviceID None,UINT uMsg None,DWORD_PTR dwParam1 None,DWORD_PTR dwParam2 None)
STDAPI None None.AVIMakeFileFromStreams(PAVIFILE * ppfile,int nStreams None,PAVISTREAM * papStreams)
MMRESULT None None.waveOutGetDevCaps(UINT_PTR uDeviceID None,LPWAVEOUTCAPS pwoc None,UINT cbwoc None)
UINT None None.midiInGetNumDevs(VOID None None)
UINT None None.waveOutGetNumDevs(VOID None None)
HWND None None.MCIWndCreate(HWND hwndParent None,HINSTANCE hInstance None,DWORD dwStyle None,LPCTSTR szFile None)
LRESULT None None.ICSendMessage(HIC hic None,UINT wMsg None,DWORD dw1 None,DWORD dw2 None)
HANDLE None None.ICImageDecompress(HIC hic None,UINT uiFlags None,LPBITMAPINFO lpbiIn None,LPVOID lpBits None,LPBITMAPINFO lpbiOut None)
STDAPI None None.EditStreamCut(PAVISTREAM pavi None,LONG * plStart,LONG * plLength,PAVISTREAM * ppResult)
DWORD None None.ICDecompressEx(HIC hic None,DWORD dwFlags None,LPBITMAPINFOHEADER lpbiSrc None,LPVOID lpSrc None,int xSrc None,int ySrc None,int dxSrc None,int dySrc None,LPBITMAPINFOHEADER lpbiDst None,LPVOID lpDst None,int xDst None,int yDst None,int dxDst None,int dyDst None)
SDTAPI None None.EditStreamSetName(PAVISTREAM pavi None,LPCTSTR lpszName None)
STDAPI None None.AVIStreamReadFormat(PAVISTREAM pavi None,LONG lPos None,LPVOID lpFormat None,LONG * lpcbFormat)
MMRESULT None None.joyReleaseCapture(UINT uJoyID None)
UINT ACMFORMATCHOOSEHOOKPROC None.acmFormatChooseHookProc(HWND hwnd None,UINT uMsg None,WPARAM wParam None,LPARAM lParam None)
MMRESULT None None.midiInOpen(LPHMIDIIN lphMidiIn None,UINT_PTR uDeviceID None,DWORD_PTR dwCallback None,DWORD_PTR dwCallbackInstance None,DWORD dwFlags None)
MMRESULT None None.acmDriverDetails(HACMDRIVERID hadid None,LPACMDRIVERDETAILS padd None,DWORD fdwDetails None)
MMRESULT None None.timeGetSystemTime(LPMMTIME pmmt None,UINT cbmmt None)
DWORD None None.timeGetTime(VOID None None)
BOOL None None.DrawDibEnd(HDRAWDIB hdd None)
HRESULT None oleaut32.VarDecFromUI1(_In_ BYTE bIn,_Out_ DECIMAL *pdecOut)
STDAPI None None.AVISaveV(LPCTSTR szFile None,CLSID * pclsidHandler,AVISAVECALLBACK lpfnCallback None,int nStreams None,PAVISTREAM * ppavi,LPAVICOMPRESSOPTIONS * plpOptions)
MMRESULT None None.waveOutSetVolume(HWAVEOUT hwo None,DWORD dwVolume None)
UINT None None.mciSetYieldProc(MCIDEVICEID IDDevice None,YIELDPROC yp None,DWORD dwYieldData None)
HRESULT None oleaut32.VarUI4FromI4(_In_ LONG lIn,_Out_ ULONG *pulOut)
STDAPI None None.AVIFileCreateStream(PAVIFILE pfile None,PAVISTREAM * ppavi,AVISTREAMINFO * psi)
MMRESULT None None.acmFilterChoose(LPACMFILTERCHOOSE pafltrc None)
BOOL None None.AVISaveOptions(HWND hwnd None,UINT uiFlags None,int nStreams None,PAVISTREAM * ppavi,LPAVICOMPRESSOPTIONS * plpOptions)
MMRESULT None None.midiInUnprepareHeader(HMIDIIN hMidiIn None,LPMIDIHDR lpMidiInHdr None,UINT cbMidiInHdr None)
MMRESULT None None.mixerGetDevCaps(UINT_PTR uMxId None,LPMIXERCAPS pmxcaps None,UINT cbmxcaps None)
HRESULT None oleaut32.VarCyFromI4(_In_ LONG lIn,_Out_ CY *pcyOut)
LRESULT CALLBACK None.acmDriverProc(DWORD_PTR dwID None,HDRIVER hdrvr None,UINT uMsg None,LPARAM lParam1 None,LPARAM lParam2 None)
BOOL None None.DrawDibStop(HDRAWDIB hdd None)
HRESULT None oleaut32.VarUI1FromI2(_In_ SHORT sIn,_Out_ BYTE *pbOut)
MMRESULT None None.midiStreamRestart(HMIDISTRM hms None)
HRESULT None oleaut32.VarR4FromDate(_In_ DATE dateIn,_Out_ FLOAT *pfltOut)
MMRESULT None None.waveInGetErrorText(MMRESULT mmrError None,LPTSTR pszText None,UINT cchText None)
MMRESULT None None.midiInReset(HMIDIIN hMidiIn None)
HRESULT None oleaut32.VarUI8FromR4(_In_ FLOAT fltIn,_Out_ ULONG64 *pi64Out)
BOOL None None.ICInstall(DWORD fccType None,DWORD fccHandler None,LPARAM lParam None,LPSTR szDesc None,UINT wFlags None)
MMRESULT None None.midiOutSetVolume(HMIDIOUT hmo None,DWORD dwVolume None)
HRESULT None oleaut32.VarI1FromI8(_In_ LONG64 i64In,_Out_ CHAR *pcOut)
HRESULT None oleaut32.VarUI2FromI2(_In_ SHORT uiIn,_Out_ USHORT *puiOut)
HRESULT None oleaut32.VarI1FromBool(_In_ VARIANT_BOOL boolIn,_Out_ CHAR *pcOut)
HRESULT None oleaut32.VarR4FromUI8(_In_ ULONG64 ui64In,_Out_ FLOAT *pfltOut)
HRESULT None oleaut32.VarCyFromUI4(_In_ ULONG ulIn,_Out_ CY *pcyOut)
HRESULT None oleaut32.VarBstrFromDate(_In_ DATE dateIn,_In_ LCID lcid,_In_ ULONG dwFlags,_Out_ BSTR *pbstrOut)
HRESULT None oleaut32.VarDecFromUI8(_In_ ULONG64 ui64In,_Out_ DECIMAL *pdecOut)
HRESULT None oleaut32.VarR8FromI8(_In_ LONG64 i64In,_Out_ DOUBLE *pdblOut)
HRESULT None oleaut32.VarUI2FromCy(_In_ CY cyIn,_Out_ USHORT *puiOut)
HRESULT None oleaut32.VarI1FromR8(_In_ DOUBLE dblIn,_Out_ CHAR *pcOut)
HRESULT None oleaut32.VarBstrFromI4(_In_ LONG lIn,_In_ LCID lcid,_In_ ULONG dwFlags,_Out_ BSTR *pbstrOut)
HRESULT None oleaut32.VarR8FromBool(_In_ VARIANT_BOOL boolIn,_Out_ DOUBLE *pdblOut)
HRESULT None oleaut32.VarI1FromI4(_In_ LONG lIn,_Out_ CHAR *pcOut)
MMRESULT None None.midiInGetErrorText(MMRESULT wError None,LPTSTR lpText None,UINT cchText None)
MMRESULT None None.midiInGetDevCaps(UINT_PTR uDeviceID None,LPMIDIINCAPS lpMidiInCaps None,UINT cbMidiInCaps None)
HRESULT None oleaut32.VarBoolFromUI4(_In_ ULONG ulIn,_Out_ VARIANT_BOOL *pboolOut)
HRESULT None oleaut32.VarUI1FromDate(_In_ DATE dateIn,_Out_ BYTE *pbOut)
HRESULT None oleaut32.VarI2FromR4(_In_ FLOAT fltIn,_Out_ SHORT *psOut)
HRESULT None oleaut32.VarDateFromUI2(_In_ USHORT uiIn,_Out_ DATE *pdateOut)
HRESULT None None.FindItem([in] LPRESULTFINDINFO pFindinfo,[out] int pnFoundIndex)
HRESULT None oleaut32.VarUI8FromDate(_In_ DATE dateIn,_Out_ ULONG64 *pi64Out)
HRESULT None oleaut32.VarI4FromBool(_In_ VARIANT_BOOL boolIn,_Out_ LONG *plOut)
HRESULT None oleaut32.VarDateFromBool(_In_ VARIANT_BOOL boolIn,_Out_ DATE *pdateOut)
HRESULT None oleaut32.VarR8FromUI1(_In_ BYTE bIn,_Out_ DOUBLE *pdblOut)
HRESULT None oleaut32.VarBoolFromI2(_In_ SHORT sIn,_Out_ VARIANT_BOOL *pboolOut)
HRESULT None oleaut32.VarI4FromI1(_In_ CHAR cIn,_Out_ LONG *plOut)
LRESULT CALLBACK None.capStatusCallback(HWND hWnd None,int nID None,LPCTSTR lpsz None)
MMRESULT None None.mmioClose(HMMIO hmmio None,UINT wFlags None)
STDAPI None None.AVIStreamEndStreaming(PAVISTREAM pavi None)
HIC None None.ICOpen(DWORD fccType None,DWORD fccHandler None,UINT wMode None)
LRESULT None None.mmioSendMessage(HMMIO hmmio None,UINT wMsg None,LPARAM lParam1 None,LPARAM lParam2 None)
STDAPI None None.AVIMakeCompressedStream(PAVISTREAM * ppsCompressed,PAVISTREAM psSource None,AVICOMPRESSOPTIONS * lpOptions,CLSID * pclsidHandler)
MMRESULT None None.midiOutGetVolume(HMIDIOUT hmo None,LPDWORD lpdwVolume None)
HIC None None.ICOpenFunction(DWORD fccType None,DWORD fccHandler None,UINT wMode None,FARPROC lpfnHandler None)
HRESULT None oleaut32.VarUI4FromUI2(_In_ USHORT uiIn,_Out_ ULONG *pulOut)
HRESULT None None.AVISave(LPCTSTR szFile None,CLSID * pclsidHandler,AVISAVECALLBACK lpfnCallback None,int nStreams None,PAVISTREAM pavi None,LPAVICOMPRESSOPTIONS lpOptions None,. . .)
DWORD None None.midiOutMessage(HMIDIOUT deviceID None,UINT msg None,DWORD_PTR dw1 None,DWORD_PTR dw2 None)
MMRESULT None None.waveOutRestart(HWAVEOUT hwo None)
BOOL ACMFILTERENUMCB None.acmFilterEnumCallback(HACMDRIVERID hadid None,LPACMFILTERDETAILS pafd None,DWORD_PTR dwInstance None,DWORD fdwSupport None)
UINT None None.midiOutGetErrorText(MMRESULT mmrError None,LPTSTR lpText None,UINT cchText None)
void CALLBACK None.MidiInProc(HMIDIIN hMidiIn None,UINT wMsg None,DWORD_PTR dwInstance None,DWORD_PTR dwParam1 None,DWORD_PTR dwParam2 None)
BOOL None None.GetOpenFileNamePreview(LPOPENFILENAME lpofn None)
BOOL None None.ICSeqCompressFrameStart(PCOMPVARS pc None,LPBITMAPINFO lpbiIn None)
STDAPI None None.AVIGetFromClipboard(PAVIFILE * lppf)
HRESULT None oleaut32.VarBoolFromUI1(_In_ BYTE bIn,_Out_ VARIANT_BOOL *pboolOut)
HRESULT None oleaut32.VarDecFromUI4(_In_ ULONG ulIn,_Out_ DECIMAL *pdecOut)
HRESULT None oleaut32.VarBstrFromCy(_In_ CY cyIn,_In_ LCID lcid,_In_ ULONG dwFlags,_Out_ BSTR *pbstrOut)
HRESULT None None.Next([in] ULONG celt,[out] MMC_TASK *rgelt,[out] ULONG *pceltFetched)
HRESULT None oleaut32.VarUI1FromI4(_In_ LONG lIn,_Out_ BYTE *pbOut)
HRESULT None oleaut32.VarBoolFromUI8(_In_ ULONG64 i64In,_Out_ VARIANT_BOOL *pboolOut)
HRESULT None oleaut32.VarUI2FromBool(_In_ VARIANT_BOOL boolIn,_Out_ USHORT *puiOut)
LRESULT CALLBACK None.capWaveStreamCallback(HWND hWnd None,LPWAVEHDR lpWHdr None)
HMMIO None None.mmioOpen(LPTSTR szFilename None,LPMMIOINFO lpmmioinfo None,DWORD dwOpenFlags None)
BOOL None None.DrawDibClose(HDRAWDIB hdd None)
HRESULT None oleaut32.VarCyFromStr(_In_ LPCOLESTR strIn,_In_ LCID lcid,_In_ ULONG dwFlags,_Out_ CY *pcyOut)
HRESULT None oleaut32.VarI2FromUI8(_In_ ULONG64 ui64In,_Out_ SHORT *psOut)
HRESULT None oleaut32.VarI8FromUI4(_In_ ULONG ulIn,_Out_ LONG64 *pi64Out)
HRESULT None oleaut32.VarDateFromUI4(_In_ ULONG ulIn,_Out_ DATE *pdateOut)
MMRESULT None None.timeGetDevCaps(LPTIMECAPS ptc None,UINT cbtc None)
HRESULT None oleaut32.VarCyFromDisp(_In_ IDispatch *pdispIn,_In_ LCID lcid,_Out_ CY *pcyOut)
MMRESULT None None.midiStreamProperty(HMIDISTRM hm None,LPBYTE lppropdata None,DWORD dwProperty None)
HRESULT None oleaut32.VarUI4FromUI1(_In_ BYTE bIn,_Out_ ULONG *pulOut)
BOOL None None.DrawDibProfileDisplay(LPBITMAPINFOHEADER lpbi None)
HRESULT None oleaut32.VarI8FromDisp(IDispatch *pdispIn None,_In_ LCID lcid,_Out_ LONG64 *pi64Out)
HRESULT None oleaut32.VarUI8FromI2(_In_ SHORT sIn,_Out_ ULONG64 *pi64Out)
HRESULT None oleaut32.VarBoolFromI1(_In_ CHAR cIn,_Out_ VARIANT_BOOL *pboolOut)
HRESULT None oleaut32.VarDateFromR4(_In_ FLOAT fltIn,_Out_ DATE *pdateOut)
HRESULT None oleaut32.VarR8FromCy(_In_ CY cyIn,DOUBLE *pdblOut None)
HRESULT None oleaut32.VarCyFromI1(_In_ CHAR cIn,_Out_ CY *pcyOut)
HRESULT None oleaut32.VarUI2FromStr(_In_ LPCOLESTR strIn,_In_ LCID lcid,_In_ ULONG dwFlags,_Out_ USHORT *puiOut)
HRESULT None oleaut32.VarI8FromI1(_In_ CHAR cIn,_Out_ LONG64 *pi64Out)
HRESULT None oleaut32.VarUI8FromI1(_In_ CHAR cIn,_Out_ ULONG64 *pi64Out)
HRESULT None oleaut32.VarI8FromUI1(_In_ BYTE bIn,_Out_ LONG64 *pi64Out)
HRESULT None oleaut32.VarDateFromStr(_In_ LPCOLESTR strIn,_In_ LCID lcid,_In_ ULONG dwFlags,_Out_ DATE *pdateOut)
HRESULT None oleaut32.VarUI1FromI1(_In_ CHAR cIn,_Out_ BYTE *pbOut)
HRESULT None mmcndmgr.Detach([in] LPUNKNOWN lpUnknown)
HRESULT None sdpblb.get_SessionId([out] DOUBLE *pSessionId)
HRESULT None oleaut32.VarDecCmp(_In_ LPDECIMAL pdecLeft,_In_ LPDECIMAL pdecRight)
HRESULT None mmcndmgr.DeleteItem([in] HSCOPEITEM hItem,[in] long fDeleteThis)
HRESULT None mmcndmgr.SetColumnConfigData([in] SColumnSetID *pColID,[in] MMC_COLUMN_SET_DATA *pColSetData)
HRESULT None mmcndmgr.AddBitmap([in] int nImages,[in] HBITMAP hbmp,[in] int cxSize,[in] int cySize,[in] COLORREF crMask)
MMRESULT None None.midiStreamPosition(HMIDISTRM hms None,LPMMTIME pmmt None,UINT cbmmt None)
BOOL None None.mciGetErrorString(DWORD fdwError None,LPTSTR lpszErrorText None,UINT cchErrorText None)
HRESULT None mmcndmgr.GetVerbState([in] MMC_CONSOLE_VERB eCmdID,[in] MMC_BUTTON_STATE nState,[out] BOOL *pState)
ULONG None traffic.TcModifyFlow(_In_ HANDLE FlowHandle,_In_ PTC_GEN_FLOW pGenericFlow)
ULONG None traffic.TcAddFilter(_In_ HANDLE FlowHandle,_In_ PTC_GEN_FILTER pGenericFilter,_Out_ PHANDLE pFilterHandle)
HRESULT None mmcndmgr.QueryResultView([out] LPUNKNOWN *pUnknown)
HRESULT None oleaut32.VarImp(_In_ LPVARIANT pvarLeft,_In_ LPVARIANT pvarRight,_Out_ LPVARIANT pvarResult)
void CALLBACK None.ClAddFlowComplete(_In_ HANDLE ClFlowCtx,_In_ ULONG Status)
void __cdecl oleaut32.SetOaNoCache(void None None)
MMRESULT None None.timeKillEvent(UINT uTimerID None)
HRESULT None None.SortItems([in] int nColumn,[in] DWORD dwSortOptions,[in] long lUserParam)
HRESULT None fastprox.Indicate([in] LONG lObjectCount,[in] IWbemClassObject **ppObjArray)
HRESULT None None.QueryDataObject([in] long cookie,[in] DATA_OBJECT_TYPES type,[out] LPDATAOBJECT *ppDataObject)
void None None.ICCompressorFree(PCOMPVARS pc None)
HRESULT None mmcndmgr.ShowContextMenu([in] HWND hwndParent,[in] long xPos,[in] long yPos,[out] long *plSelected)
HRESULT None mmcndmgr.DeleteItem([in] HRESULTITEM itemID,[in] INT nCol)
HRESULT None oleaut32.VarBoolFromR8(_In_ DOUBLE dblIn,_Out_ VARIANT_BOOL *pboolOut)
MMRESULT None None.mixerOpen(LPHMIXER phmx None,UINT uMxId None,DWORD_PTR dwCallback None,DWORD_PTR dwInstance None,DWORD fdwOpen None)
MMRESULT None None.midiOutSetVolume(HMIDIOUT hmo None,DWORD dwVolume None)
HRESULT None None.CreateDigitalSignatureManager([in] IOpcPackage *package,[out None None,retval] IOpcDigitalSignatureManager **signatureManager)
HRESULT None sdpblb.SetEmailNames([in] VARIANT Addresses,[in] VARIANT Names)
HRESULT None mmcndmgr.InsertItem([in None None,out] LPRESULTDATAITEM item)
HRESULT None None.SerializePropVariantAsString(const PROPVARIANT *ppropvar,PWSTR *pszOut None)
MMRESULT None None.midiOutGetVolume(HMIDIOUT hmo None,LPDWORD lpdwVolume None)
STDAPI None None.AVIGetFromClipboard(PAVIFILE * lppf)
BOOL None advapi32.GetEventLogInformation(_In_ HANDLE hEventLog,_In_ DWORD dwInfoLevel,_Out_ LPVOID lpBuffer,_In_ DWORD cbBufSize,_Out_ LPDWORD pcbBytesNeeded)
BOOL WINAPI user32.PostThreadMessage(_In_ DWORD idThread,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
BOOL WINAPI user32.PostThreadMessageW(_In_ DWORD idThread,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
BOOL WINAPI user32.PostThreadMessageA(_In_ DWORD idThread,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
LSTATUS None shlwapi.SHRegDeleteUSValue(_In_ HUSKEY hUSKey,_In_ LPCTSTR pszValue,_In_ SHREGDEL_FLAGS delRegFlags)
LSTATUS None shlwapi.SHRegDeleteUSValueW(_In_ HUSKEY hUSKey,_In_ LPCTSTR pszValue,_In_ SHREGDEL_FLAGS delRegFlags)
LSTATUS None shlwapi.SHRegDeleteUSValueA(_In_ HUSKEY hUSKey,_In_ LPCTSTR pszValue,_In_ SHREGDEL_FLAGS delRegFlags)
BOOL None None.DrawDibTime(HDRAWDIB hdd None,LPDRAWDIBTIME lpddtime None)
HRESULT None mmcndmgr.AddItem([in] CONTEXTMENUITEM *pItem)
BOOL None None.ICCompressorChoose(HWND hwnd None,UINT uiFlags None,LPVOID pvIn None,LPVOID lpData None,PCOMPVARS pc None,LPSTR lpszTitle None)
MMRESULT None None.midiStreamOpen(LPHMIDISTRM lphStream None,LPUINT puDeviceID None,DWORD cMidi None,DWORD_PTR dwCallback None,DWORD_PTR dwInstance None,DWORD fdwOpen None)
MMRESULT None None.midiDisconnect(HMIDI hMidi None,HMIDIOUT hmo None,LPVOID pReserved None)
MMRESULT None None.acmFilterChoose(LPACMFILTERCHOOSE pafltrc None)
ULONG None None.AddRef(LPUNKNWON ps None)
STDAPI None None.EditStreamCopy(PAVISTREAM pavi None,LONG * plStart,LONG * plLength,PAVISTREAM * ppResult)
MMRESULT None None.midiOutShortMsg(HMIDIOUT hmo None,DWORD dwMsg None)
MMRESULT None None.acmDriverDetails(HACMDRIVERID hadid None,LPACMDRIVERDETAILS padd None,DWORD fdwDetails None)
MMRESULT None None.midiInAddBuffer(HMIDIIN hMidiIn None,LPMIDIHDR lpMidiInHdr None,UINT cbMidiInHdr None)
HRESULT None sdpblb.get_TimeCollection([out] ITTimeCollection **ppTimeCollection)
HRESULT None oleaut32.VarI1FromDisp(_In_ IDispatch *pdispIn,_In_ LCID lcid,_Out_ CHAR *pcOut)
HRESULT None sdpblb.Next([in] ULONG celt,[out] ITTime **pVal,[out] ULONG *pceltFetched)
HRESULT None mmcndmgr.SetViewMode([in] long lViewMode)
HRESULT None oleaut32.VarDecMul(_In_ LPDECIMAL pdecLeft,_In_ LPDECIMAL pdecRight,_Out_ LPDECIMAL pdecResult)
HRESULT None oleaut32.VarBstrFromR8(_In_ DOUBLE dblIn,_In_ LCID lcid,_In_ ULONG dwFlags,_Out_ BSTR *pbstrOut)
HRESULT None mmcndmgr.SetDescBarText([in] LPOLESTR DescText)
ULONG None traffic.TcEnumerateInterfaces(_In_ HANDLE ClientHandle,_Inout_ PULONG pBufferSize,_Out_ PTC_IFC_DESCRIPTOR InterfaceBuffer)
HRESULT None mmcndmgr.SetTitleText([in] LPCOLESTR pszTitleText)
HRESULT None oleaut32.VarBoolFromCy(_In_ CY cyIn,_Out_ VARIANT_BOOL *pboolOut)
MMRESULT None None.acmFormatChoose(LPACMFORMATCHOOSE pfmtc None)
ULONG None traffic.TcSetSocketFlow(_In_ HANDLE SocketHandle,_In_ HANDLE FlowHandle)
HRESULT None mmcndmgr.GetColumnSortData([in] SColumnSetID *pColID,[out] MMC_SORT_SET_DATA **ppColSortData)
BOOL None None.MCIWndRegisterClass(HINSTANCE hInstance None)
SCODE None None.GetValue([out] PROPVARIANT **ppPropValue)
HRESULT None None.GetListPadInfo([in] LPOLESTR pszGroup,[out] MMC_LISTPAD_INFO *lpListPadInfo)
HRESULT None mmcndmgr.SetItemCount([in] int nItemCount,[in] DWORD dwOptions)
HRESULT None mmcndmgr.QueryConsoleVerb([out] LPCONSOLEVERB *ppConsoleVerb)
HRESULT None oleaut32.VarBoolFromDate(_In_ DATE dateIn,_Out_ VARIANT_BOOL *pboolOut)
HRESULT None oleaut32.DispInvoke(void *_this None,ITypeInfo *ptinfo None,DISPID dispidMember None,WORD wFlags None,DISPPARAMS *pparams None,VARIANT *pvarResult None,EXCEPINFO *pexcepinfo None,UINT *puArgErr None)
HRESULT None oleaut32.VarI2FromR8(_In_ DOUBLE dblIn,_Out_ SHORT *psOut)
HRESULT None mmcndmgr.MessageBox([in] LPCWSTR lpszText,[in] LPCWSTR lpszTitle,[in] UINT fuStyle,[out] int *piRetval)
HRESULT None azroles.get_PolicyReadersName([out] VARIANT *pvarReaders)
HRESULT None mmcndmgr.AddExtension([in] HSCOPEITEM hItem,[in] LPCLSID lpClsid)
HRESULT None oleaut32.VarDecFix(_In_ LPDECIMAL pdecIn,_Out_ LPDECIMAL pdecResult)
HRESULT None oleaut32.VarUI8FromUI1(_In_ BYTE bIn,_Out_ ULONG64 *pi64Out)
HRESULT None oleaut32.VarDecFromR4(_In_ FLOAT fltIn,_Out_ DECIMAL *pdecOut)
HRESULT None sdpblb.put_Description([in] BSTR pDescription)
HRESULT None mdhcp.CreateLeaseInfoFromVariant([in] DATE LeaseStartTime,[in] DATE LeaseStopTime,[in] VARIANT vAddresses,[in] BSTR pRequestID,[in] BSTR pServerAddress,[out] IMcastLeaseInfo **ppReleaseRequest)
HRESULT None oleaut32.VarAnd(_In_ LPVARIANT pvarLeft,_In_ LPVARIANT pvarRight,_Out_ LPVARIANT pvarResult)
HRESULT None oleaut32.VarI8FromR8(_In_ DOUBLE dblIn,_Out_ LONG64 *pi64Out)
HRESULT None oleaut32.VarR4FromCy(_In_ CY cyIn,FLOAT *pfltOut None)
HRESULT None None.EndRecord(PAVISTREAM pf None)
HRESULT None None.GetControlInfo([in None None,out] CONTROLINFO *pCI)
HRESULT None None.get_Terminals([out] VARIANT *pTerminals)
HRESULT None oleaut32.GetVarConversionLocaleSetting(_Out_ ULONG *dwFlags)
BOOL None None.DrawDibChangePalette(HDRAWDIB hdd None,int iStart None,int iLen None,LPPALETTEENTRY lppe None)
HRESULT None oleaut32.VarR4FromI4(_In_ LONG lIn,_Out_ FLOAT *pfltOut)
HRESULT None oleaut32.VarI8FromI2(_In_ SHORT sIn,_Out_ LONG64 *pi64Out)
HRESULT None mmcndmgr.FindItemByLParam([in] LPARAM lParam,[out] HRESULTITEM *pItemID)
HRESULT None oleaut32.VarR8FromI4(_In_ LONG lIn,_Out_ DOUBLE *pdblOut)
HRESULT None oleaut32.VarR4FromBool(_In_ VARIANT_BOOL boolIn,_Out_ FLOAT *pfltOut)
void __cdecl oleaut32.SetOaNoCache(void None None)
HRESULT None oleaut32.VarDecFromDate(_In_ DATE dateIn,_Out_ DECIMAL *pdecOut)
HRESULT None None.GetResultViewType2([in] MMC_COOKIE cookie,[in None None,out] PRESULT_VIEW_TYPE_INFO pResultViewType)
HRESULT None mmcndmgr.SetToolbar([in] LPTOOLBAR pToolbar)
HRESULT None oleaut32.VarUI1FromUI2(_In_ USHORT uiIn,_Out_ BYTE *pbOut)
HRESULT None oleaut32.VarR8FromUI4(_In_ ULONG ulIn,_Out_ DOUBLE *pdblOut)
HRESULT None None.GetHelpTopic([out] LPOLESTR *lpCompiledHelpFile)
HRESULT None oleaut32.VarIdiv(_In_ LPVARIANT pvarLeft,_In_ LPVARIANT pvarRight,_Out_ LPVARIANT pvarResult)
HRESULT None oleaut32.VarDateFromI8(_In_ LONG64 i64In,_Out_ DATE *pdateOut)
HRESULT None oleaut32.VarI2FromI8(_In_ LONG64 i64In,_Out_ SHORT *psOut)
HRESULT None oleaut32.VarI4FromI8(_In_ LONG64 i64In,_Out_ LONG *plOut)
HRESULT None oleaut32.VarUI4FromI8(_In_ LONG64 i64In,_Out_ ULONG *plOut)
HRESULT None oleaut32.VarR4FromUI1(_In_ BYTE bIn,_Out_ FLOAT *pfltOut)
ULONG None traffic.TcDeleteFlow(_In_ HANDLE FlowHandle)
HRESULT None oleaut32.VarDateFromDisp(IDispatch *pdispIn None,_In_ LCID lcid,_Out_ DATE *pdateOut)
HRESULT None oleaut32.VarR4FromUI2(_In_ USHORT uiIn,_Out_ FLOAT *pfltOut)
HRESULT None None.MMCPropertyHelp(pszHelpTopic None None)
HRESULT None oleaut32.VarR4FromDisp(IDispatch *pdispIn None,_In_ LCID lcid,_Out_ FLOAT *pfltOut)
HRESULT None oleaut32.VarDecAdd(_In_ LPDECIMAL pdecLeft,_In_ LPDECIMAL pdecRight,_Out_ LPDECIMAL pdecResult)
HRESULT None oleaut32.VarUI4FromI2(_In_ SHORT uiIn,_Out_ ULONG *pulOut)
void APIENTRY None.PFREEMEM(_In_ void *pv)
HRESULT None oleaut32.VarUI8FromR8(_In_ DOUBLE dblIn,_Out_ ULONG64 *pi64Out)
HRESULT None mmcndmgr.AddView([in] PMMC_EXT_VIEW_DATA pExtViewData)
LRESULT CALLBACK None.WndProc(HWND hWnd None,UINT uMessage None,WPARAM wParam None,LPARAM lParam None)
HRESULT None oleaut32.VarI4FromStr(_In_ LPCOLESTR strIn,_In_ LCID lcid,_In_ ULONG dwFlags,_Out_ LONG *plOut)
HRESULT None oleaut32.BstrFromVector(_In_ SAFEARRAY *psa,_Out_ BSTR *pbstr)
STDAPI None None.AVIStreamBeginStreaming(PAVISTREAM pavi None,LONG lStart None,LONG lEnd None,LONG lRate None)
HRESULT None oleaut32.VarUI1FromBool(_In_ VARIANT_BOOL boolIn,_Out_ BYTE *pbOut)
HRESULT None shell32.AddTab(HWND hwnd None)
HRESULT None None.ReadPackageFromStream([in] IStream *stream,[in] OPC_READ_FLAGS flags,[out None None,retval] IOpcPackage **package)
BOOL None None.ICInstall(DWORD fccType None,DWORD fccHandler None,LPARAM lParam None,LPSTR szDesc None,UINT wFlags None)
HRESULT None oleaut32.VarDateFromDisp(IDispatch *pdispIn None,_In_ LCID lcid,_Out_ DATE *pdateOut)
HRESULT None oleaut32.VarI1FromUI2(_In_ USHORT uiIn,_Out_ CHAR *pcOut)
HRESULT None oleaut32.VarDecNeg(_In_ LPDECIMAL pdecIn,_Out_ LPDECIMAL pdecResult)
HRESULT None oleaut32.VarUI8FromUI2(_In_ USHORT uiIn,_Out_ ULONG64 *pi64Out)
STDAPI None None.AVIStreamReadData(PAVISTREAM pavi None,DWORD ckid None,LPVOID lpData None,LONG * lpcbData)
STDAPI None None.AVIFileGetStream(PAVIFILE pfile None,PAVISTREAM * ppavi,DWORD fccType None,LONG lParam None)
HRESULT None None.CreatePackage([out None None,retval] IOpcPackage **package)
HRESULT None oleaut32.VarDecFromUI8(_In_ ULONG64 ui64In,_Out_ DECIMAL *pdecOut)
HRESULT None mmcndmgr.SetItem([in] LPSCOPEDATAITEM item)
HRESULT None oleaut32.VarI4FromCy(_In_ CY cyIn,_Out_ LONG *plOut)
HRESULT None oleaut32.VarMod(_In_ LPVARIANT pvarLeft,_In_ LPVARIANT pvarRight,_Out_ LPVARIANT pvarResult)
HRESULT None oleaut32.VarR4FromI2(_In_ SHORT sIn,_Out_ FLOAT *pfltOut)
ULONG None traffic.TcSetFlow(_In_ LPTSTR pFlowName,_In_ LPGUID pGuidParam,_In_ ULONG BufferSize,_In_ PVOID Buffer)
ULONG None traffic.TcSetFlowW(_In_ LPTSTR pFlowName,_In_ LPGUID pGuidParam,_In_ ULONG BufferSize,_In_ PVOID Buffer)
ULONG None traffic.TcSetFlowA(_In_ LPTSTR pFlowName,_In_ LPGUID pGuidParam,_In_ ULONG BufferSize,_In_ PVOID Buffer)
MMRESULT None None.midiConnect(HMIDI hMidi None,HMIDIOUT hmo None,LPVOID pReserved None)
HRESULT None oleaut32.VarI4FromUI8(_In_ ULONG64 ui64In,_Out_ LONG *plOut)
HRESULT None oleaut32.VarBstrFromUI1(_In_ BYTE bVal,_In_ LCID lcid,_In_ ULONG dwFlags,_Out_ BSTR *pbstrOut)
HRESULT None oleaut32.VarDateFromI1(_In_ CHAR cIn,_Out_ DATE *pdateOut)
HRESULT None sdpblb.GetEmailNames([out] VARIANT *pAddresses,[out] VARIANT *pNames)
STDAPI None None.EditStreamPaste(PAVISTREAM pavi None,LONG * plPos,LONG * plLength,PAVISTREAM pstream None,LONG lStart None,LONG lLength None)
HANDLE None None.mciGetCreatorTask(MCIDEVICEID IDDevice None)
LONG CALLBACK None.DllCallbackProc(DWORD_PTR dwObjectID None,DWORD dwObjectType None,LPVOID lpParams None,DWORD dwSize None)
HRESULT None mmcndmgr.DeleteButton([in] int nIndex)
HRESULT None oleaut32.VarR4FromUI4(_In_ ULONG ulIn,_Out_ FLOAT *pfltOut)
ULONG None traffic.TcQueryInterface(_In_ HANDLE IfcHandle,_In_ LPGUID pGuidParam,_In_ BOOLEAN NotifyChange,_Inout_ PULONG BufferSize,_Out_ PVOID Buffer)
MMRESULT None None.joySetThreshold(UINT uJoyID None,UINT uThreshold None)
HRESULT None oleaut32.VarR8FromDisp(IDispatch *pdispIn None,_In_ LCID lcid,_Out_ DOUBLE *pdblOut)
HRESULT None oleaut32.VarI4FromR4(_In_ FLOAT fltIn,_Out_ LONG *plOut)
HRESULT None oleaut32.VarDecInt(_In_ LPDECIMAL pdecIn,_Out_ LPDECIMAL pdecResult)
HRESULT None oleaut32.VarI2FromBool(_In_ VARIANT_BOOL boolIn,_Out_ SHORT *psOut)
HRESULT None mmcndmgr.GetButtonState([in] int idCommand,[in] MMC_BUTTON_STATE nState,[out] BOOL *pState)
HRESULT None mmcndmgr.GetParentItem([in] HSCOPEITEM item,[out] HSCOPEITEM *pItemParent,[out] long *plCookie)
HRESULT None oleaut32.VarUI1FromStr(_In_ LPCOLESTR strIn,_In_ LCID lcid,_In_ ULONG dwFlags,_Out_ BYTE *pbOut)
HRESULT None oleaut32.VarDecSub(_In_ LPDECIMAL pdecLeft,_In_ LPDECIMAL pdecRight,_Out_ LPDECIMAL pdecResult)
HRESULT None shell32.Initialize(LPCITEMIDLIST pidl None)
HRESULT None oleaut32.VarUI4FromDate(_In_ DATE dateIn,_Out_ ULONG *pulOut)
HRESULT None oleaut32.VarCyFromDate(_In_ DATE dateIn,_Out_ CY *pcyOut)
ULONG None traffic.TcCloseInterface(_In_ HANDLE IfcHandle)
MMRESULT None None.midiOutGetID(HMIDIOUT hmo None,LPUINT puDeviceID None)
HRESULT None oleaut32.VarR8FromR4(_In_ FLOAT fltIn,_Out_ DOUBLE *pdblOut)
HRESULT None oleaut32.VarUI2FromI1(_In_ CHAR cIn,_Out_ USHORT *puiOut)
HRESULT None None.WritePackageToStream([in] IOpcPackage *package,[in] OPC_WRITE_FLAGS flags,[in] IStream *stream)
HRESULT None oleaut32.VarI8FromCy(_In_ CY cyIn,_Out_ LONG64 *pi64Out)
HRESULT None oleaut32.VarI4FromInt(_In_ INT intIn,_Out_ LONG *plOut)
ULONG None traffic.TcEnumerateFlows(_In_ HANDLE IfcHandle,_Inout_ PHANDLE pEnumToken,_Inout_ PULONG pFlowCount,_Inout_ PULONG pBufSize,_Out_ PENUMERATION_BUFFER Buffer)
HRESULT None oleaut32.VarUI8FromI8(_In_ LONG64 ui64In,_Out_ ULONG64 *pi64Out)
HRESULT None oleaut32.VarEqv(_In_ LPVARIANT pvarLeft,_In_ LPVARIANT pvarRight,_Out_ LPVARIANT pvarResult)
HRESULT None oleaut32.VarUI4FromStr(_In_ LPCOLESTR strIn,_In_ LCID lcid,_In_ ULONG dwFlags,_Out_ ULONG *pulOut)
HRESULT None None.SetControlbar([in] LPCONTROLBAR pControlbar)
HRESULT None sdpblb.put_Originator([in] BSTR pOriginator)
HRESULT None oleaut32.VarNot(_In_ LPVARIANT pvarIn,_Out_ LPVARIANT pvarResult)
STDAPI None None.AVIStreamWrite(PAVISTREAM pavi None,LONG lStart None,LONG lSamples None,LPVOID lpBuffer None,LONG cbBuffer None,DWORD dwFlags None,LONG * plSampWritten,LONG * plBytesWritten)
LRESULT WINAPI user32.SendMessageTimeout(_In_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam,_In_ UINT fuFlags,_In_ UINT uTimeout,_Out_opt_ PDWORD_PTR lpdwResult)
LRESULT WINAPI user32.SendMessageTimeoutW(_In_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam,_In_ UINT fuFlags,_In_ UINT uTimeout,_Out_opt_ PDWORD_PTR lpdwResult)
LRESULT WINAPI user32.SendMessageTimeoutA(_In_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam,_In_ UINT fuFlags,_In_ UINT uTimeout,_Out_opt_ PDWORD_PTR lpdwResult)
HRESULT None None.GetViews([in] LPDATAOBJECT pDataObject,[in] LPVIEWEXTENSIONCALLBACK pViewExtensionCallback)
HRESULT None mmcndmgr.AddPage([in] HPROPSHEETPAGE hPage)
HRESULT None None.GetWatermarks([in] LPDATAOBJECT lpIDataObject,[out] HBITMAP *lphWatermark,[out] HBITMAP *lphHeader,[out] HPALETTE *lphPalette,[out] BOOL *bStretch)
ULONG None traffic.TcDeregisterClient(_In_ HANDLE ClientHandle)
HRESULT None oleaut32.VarCyFromUI8(_In_ ULONG64 ui64In,_Out_ CY *pcyOut)
HRESULT None oleaut32.VarBstrFromR4(_In_ FLOAT fltIn,_In_ LCID lcid,_In_ ULONG dwFlags,_Out_ BSTR *pbstrOut)
HRESULT None mmcndmgr.ImageListSetStrip([in] LONG_PTR *BMapSm,[in] LONG_PTR *BMapLg,[in] long nStartLoc,[in] COLORREF cMask)
HRESULT None mmcndmgr.MessageBox([in] LPCWSTR lpszText,[in] LPCWSTR lpszTitle,[in] UINT fuStyle,[out] int *piRetval)
HRESULT None oleaut32.VarI2FromCy(_In_ CY cyIn,SHORT *psOut None)
HRESULT None oleaut32.VarI4FromR8(_In_ DOUBLE dblIn,_Out_ LONG *plOut)
HRESULT None mmcndmgr.GetDefaultVerb([out] MMC_CONSOLE_VERB peCmID)
HRESULT None oleaut32.VarR4FromStr(_In_ LPCOLESTR strIn,_In_ LCID lcid,_In_ ULONG dwFlags,_Out_ FLOAT *pfltOut)
MMRESULT None None.joySetCapture(HWND hwnd None,UINT uJoyID None,UINT uPeriod None,BOOL fChanged None)
DWORD None None.acmGetVersion(VOID None None)
HRESULT None oleaut32.VarDecNeg(_In_ LPDECIMAL pdecIn,_Out_ LPDECIMAL pdecResult)
HRESULT None oleaut32.VarSub(_In_ LPVARIANT pvarLeft,_In_ LPVARIANT pvarRight,_Out_ LPVARIANT pvarResult)
MMRESULT None None.timeEndPeriod(UINT uPeriod None)
HRESULT None oleaut32.VarI2FromUI4(_In_ ULONG ulIn,_Out_ SHORT *psOut)
HRESULT None sdpblb.GetEmailNames([out] VARIANT *pAddresses,[out] VARIANT *pNames)
HRESULT None None.Info(PAVISTREAM ps None,AVISTREAMINFO *psi None,LONG lSize None)
MMRESULT None None.acmFormatTagEnum(HACMDRIVER had None,LPACMFORMATTAGDETAILS paftd None,ACMFORMATTAGENUMCB fnCallback None,DWORD_PTR dwInstance None,DWORD fdwEnum None)
DWORD None None.ICCompressGetSize(hic None None,lpbiInput None None,lpbiOutput None None)
HRESULT None oleaut32.VarBoolFromR4(_In_ FLOAT fltIn,_Out_ VARIANT_BOOL *pboolOut)
HRESULT None oleaut32.VarI2FromUI4(_In_ ULONG ulIn,_Out_ SHORT *psOut)
HRESULT None oleaut32.VarBstrFromUI4(_In_ ULONG ulIn,_In_ LCID lcid,_In_ ULONG dwFlags,_Out_ BSTR *pbstrOut)
HRESULT None oleaut32.VarUI8FromUI1(_In_ BYTE bIn,_Out_ ULONG64 *pi64Out)
HRESULT None None.Write(PAVISTREAM ps None,LONG lStart None,LONG lSamples None,LPVOID lpBuffer None,LONG cbBuffer None,DWORD dwFlags None,LONG *plSampWritten None,LONG *plBytesWritten None)
HRESULT None oleaut32.VarI8FromDate(_In_ DATE dateIn,_Out_ LONG64 *pi64Out)
HRESULT None None.QueryInterface(LPUNKNOWN ps None,const IID riid,void **ppvObj None)
HRESULT None oleaut32.VarUI8FromBool(_In_ VARIANT_BOOL boolIn,_Out_ ULONG64 *pi64Out)
HRESULT None oleaut32.VarBoolFromR4(_In_ FLOAT fltIn,_Out_ VARIANT_BOOL *pboolOut)
HRESULT None oleaut32.VarBstrFromUI4(_In_ ULONG ulIn,_In_ LCID lcid,_In_ ULONG dwFlags,_Out_ BSTR *pbstrOut)
HRESULT None oleaut32.VarUI4FromDisp(_In_ IDispatch *pdispIn,_In_ LCID lcid,_Out_ ULONG *pulOut)
HRESULT None oleaut32.VarBstrFromBool(_In_ VARIANT_BOOL boolIn,_In_ LCID lcid,_In_ ULONG dwFlags,_Out_ BSTR *pbstrOut)
HRESULT None oleaut32.VarI2FromUI4(_In_ ULONG ulIn,_Out_ SHORT *psOut)
HRESULT None oleaut32.VarCyFromR8(_In_ DOUBLE dblIn,_Out_ CY *pcyOut)
HRESULT None oleaut32.VarCyFromUI2(_In_ USHORT uiIn,_Out_ CY *pcyOut)
HRESULT None None.OnAmbientPropertyChange([in] DISPID dispID)
HRESULT None oleaut32.VarI8FromDate(_In_ DATE dateIn,_Out_ LONG64 *pi64Out)
HRESULT None oleaut32.VarCyFromR8(_In_ DOUBLE dblIn,_Out_ CY *pcyOut)
HRESULT None oleaut32.VarBoolFromR4(_In_ FLOAT fltIn,_Out_ VARIANT_BOOL *pboolOut)
HRESULT None oleaut32.VarCyFromUI2(_In_ USHORT uiIn,_Out_ CY *pcyOut)
HRESULT None oleaut32.VarUI1FromCy(_In_ CY cyIn,_Out_ BYTE *pbOut)
HRESULT None oleaut32.VarI2FromDisp(IDispatch *pdispIn None,_In_ LCID lcid,_Out_ SHORT *psOut)
HRESULT None oleaut32.VarI2FromUI4(_In_ ULONG ulIn,_Out_ SHORT *psOut)
HRESULT None oleaut32.VarBoolFromR4(_In_ FLOAT fltIn,_Out_ VARIANT_BOOL *pboolOut)
HRESULT None oleaut32.VarI2FromUI4(_In_ ULONG ulIn,_Out_ SHORT *psOut)
HRESULT None oleaut32.VarUI4FromDisp(_In_ IDispatch *pdispIn,_In_ LCID lcid,_Out_ ULONG *pulOut)
HRESULT None oleaut32.VarI1FromUI8(_In_ ULONG64 i64In,_Out_ CHAR *pcOut)
HRESULT None oleaut32.VarI8FromDate(_In_ DATE dateIn,_Out_ LONG64 *pi64Out)
HRESULT None oleaut32.VarBstrFromUI4(_In_ ULONG ulIn,_In_ LCID lcid,_In_ ULONG dwFlags,_Out_ BSTR *pbstrOut)
HRESULT None oleaut32.VarI1FromUI8(_In_ ULONG64 i64In,_Out_ CHAR *pcOut)
HRESULT None oleaut32.VarDateFromUI8(_In_ ULONG64 ui64In,_Out_ DATE *pdateOut)
HRESULT None oleaut32.VarFix(_In_ LPVARIANT pvarIn,_Out_ LPVARIANT pvarResult)
HRESULT None oleaut32.VarI2FromUI4(_In_ ULONG ulIn,_Out_ SHORT *psOut)
HRESULT None oleaut32.VarI2FromUI4(_In_ ULONG ulIn,_Out_ SHORT *psOut)
HRESULT None oleaut32.VarDateFromUI8(_In_ ULONG64 ui64In,_Out_ DATE *pdateOut)
HRESULT None oleaut32.VarI8FromDate(_In_ DATE dateIn,_Out_ LONG64 *pi64Out)
HRESULT None oleaut32.VarCyFromUI2(_In_ USHORT uiIn,_Out_ CY *pcyOut)
HRESULT None oleaut32.VarCyFromBool(_In_ VARIANT_BOOL boolIn,_Out_ CY *pcyOut)
HRESULT None oleaut32.VarUI8FromBool(_In_ VARIANT_BOOL boolIn,_Out_ ULONG64 *pi64Out)
HRESULT None oleaut32.VarUI2FromUI8(_In_ ULONG64 i64In,_Out_ USHORT *puiOut)
LONG TSPIAPI None.TUISPI_providerConfig(TUISPIDLLCALLBACK lpfnUIDLLCallback None,HWND hwndOwner None,DWORD dwPermanentProviderID None)
HRESULT None oleaut32.VarBoolFromI1(_In_ CHAR cIn,_Out_ VARIANT_BOOL *pboolOut)
HRESULT None oleaut32.VarBoolFromI8(_In_ LONG64 i64In,_Out_ VARIANT_BOOL *pboolOut)
HRESULT None oleaut32.VarUI8FromBool(_In_ VARIANT_BOOL boolIn,_Out_ ULONG64 *pi64Out)
ULONG None traffic.TcDeleteFilter(_In_ HANDLE FilterHandle)
HRESULT None oleaut32.VarUI2FromI1(_In_ CHAR cIn,_Out_ USHORT *puiOut)
HRESULT None mmcndmgr.AddButton([in] int idCommand,[in] LPOLESTR lpButtonText,[in] LPOLESTR lpTooltipText)
MMRESULT None None.acmMetrics(HACMOBJ hao None,UINT uMetric None,LPVOID pMetric None)
HRESULT None oleaut32.VarR8FromI1(_In_ CHAR cIn,DOUBLE *pdblOut None)
HRESULT None oleaut32.VarR8FromUI2(_In_ USHORT uiIn,_Out_ DOUBLE *pdblOut)
HRESULT None oleaut32.VarUI4FromDisp(_In_ IDispatch *pdispIn,_In_ LCID lcid,_Out_ ULONG *pulOut)
HRESULT None oleaut32.VarI8FromDate(_In_ DATE dateIn,_Out_ LONG64 *pi64Out)
BOOL ACMFORMATENUMCB None.acmFormatEnumCallback(HACMDRIVERID hadid None,LPACMFORMATDETAILS pafd None,DWORD_PTR dwInstance None,DWORD fdwSupport None)
HRESULT None oleaut32.VarI2FromDisp(IDispatch *pdispIn None,_In_ LCID lcid,_Out_ SHORT *psOut)
HRESULT None oleaut32.VarI1FromUI8(_In_ ULONG64 i64In,_Out_ CHAR *pcOut)
HRESULT None oleaut32.VarBoolFromI8(_In_ LONG64 i64In,_Out_ VARIANT_BOOL *pboolOut)
HRESULT None oleaut32.VarUI4FromDisp(_In_ IDispatch *pdispIn,_In_ LCID lcid,_Out_ ULONG *pulOut)
HRESULT None oleaut32.VarUI1FromCy(_In_ CY cyIn,_Out_ BYTE *pbOut)
MMRESULT ACMAPI None.acmStreamMessage(HACMSTREAM has None,UINT uMsg None,LPARAM lParam1 None,LPARAM lParam2 None)
HRESULT None oleaut32.VarUI1FromCy(_In_ CY cyIn,_Out_ BYTE *pbOut)
HRESULT None oleaut32.VarBstrFromBool(_In_ VARIANT_BOOL boolIn,_In_ LCID lcid,_In_ ULONG dwFlags,_Out_ BSTR *pbstrOut)
HRESULT None oleaut32.VarDateFromUI8(_In_ ULONG64 ui64In,_Out_ DATE *pdateOut)
HRESULT None oleaut32.VarI2FromUI4(_In_ ULONG ulIn,_Out_ SHORT *psOut)
HRESULT None oleaut32.VarBstrFromUI4(_In_ ULONG ulIn,_In_ LCID lcid,_In_ ULONG dwFlags,_Out_ BSTR *pbstrOut)
HRESULT None oleaut32.VarBstrFromBool(_In_ VARIANT_BOOL boolIn,_In_ LCID lcid,_In_ ULONG dwFlags,_Out_ BSTR *pbstrOut)
HRESULT None mmcndmgr.SetButton([in] int idCommand,[in] LPOLESTR lpButtonText,[in] LPOLESTR lpTooltipText)
HRESULT None oleaut32.VarCyFromR8(_In_ DOUBLE dblIn,_Out_ CY *pcyOut)
HRESULT None oleaut32.VarI8FromDate(_In_ DATE dateIn,_Out_ LONG64 *pi64Out)
HRESULT None oleaut32.VarI2FromDisp(IDispatch *pdispIn None,_In_ LCID lcid,_Out_ SHORT *psOut)
HRESULT None oleaut32.VarCyFromBool(_In_ VARIANT_BOOL boolIn,_Out_ CY *pcyOut)
HRESULT None oleaut32.VarI2FromUI4(_In_ ULONG ulIn,_Out_ SHORT *psOut)
HRESULT None oleaut32.VarI8FromDate(_In_ DATE dateIn,_Out_ LONG64 *pi64Out)
HRESULT None oleaut32.VarI2FromUI4(_In_ ULONG ulIn,_Out_ SHORT *psOut)
HRESULT None shell32.DeleteTab(HWND hwnd None)
HRESULT None oleaut32.VarDateFromI8(_In_ LONG64 i64In,_Out_ DATE *pdateOut)
HRESULT None oleaut32.VarCyFromUI2(_In_ USHORT uiIn,_Out_ CY *pcyOut)
HRESULT None oleaut32.VarBstrFromUI4(_In_ ULONG ulIn,_In_ LCID lcid,_In_ ULONG dwFlags,_Out_ BSTR *pbstrOut)
HRESULT None oleaut32.VarI1FromUI8(_In_ ULONG64 i64In,_Out_ CHAR *pcOut)
HRESULT None oleaut32.VarCyFromUI2(_In_ USHORT uiIn,_Out_ CY *pcyOut)
HRESULT None oleaut32.VarDateFromUI8(_In_ ULONG64 ui64In,_Out_ DATE *pdateOut)
HRESULT None oleaut32.VarI2FromUI4(_In_ ULONG ulIn,_Out_ SHORT *psOut)
HRESULT None oleaut32.VarUI1FromCy(_In_ CY cyIn,_Out_ BYTE *pbOut)
HRESULT None oleaut32.VarBoolFromI8(_In_ LONG64 i64In,_Out_ VARIANT_BOOL *pboolOut)
HRESULT None sdpblb.get_Description([out] BSTR *ppDescription)
HRESULT None oleaut32.VarI2FromUI4(_In_ ULONG ulIn,_Out_ SHORT *psOut)
HRESULT None oleaut32.VarI1FromUI8(_In_ ULONG64 i64In,_Out_ CHAR *pcOut)
HRESULT None oleaut32.VarUI8FromBool(_In_ VARIANT_BOOL boolIn,_Out_ ULONG64 *pi64Out)
HRESULT None oleaut32.VarCyFromBool(_In_ VARIANT_BOOL boolIn,_Out_ CY *pcyOut)
HRESULT None oleaut32.VarBstrFromUI4(_In_ ULONG ulIn,_In_ LCID lcid,_In_ ULONG dwFlags,_Out_ BSTR *pbstrOut)
HRESULT None oleaut32.VarCyFromUI2(_In_ USHORT uiIn,_Out_ CY *pcyOut)
HRESULT None oleaut32.VarR8FromI1(_In_ CHAR cIn,DOUBLE *pdblOut None)
HRESULT None oleaut32.VarI2FromUI4(_In_ ULONG ulIn,_Out_ SHORT *psOut)
HRESULT None oleaut32.VarR8FromUI2(_In_ USHORT uiIn,_Out_ DOUBLE *pdblOut)
HRESULT None oleaut32.VarUI1FromCy(_In_ CY cyIn,_Out_ BYTE *pbOut)
HRESULT None oleaut32.VarUI1FromCy(_In_ CY cyIn,_Out_ BYTE *pbOut)
HRESULT None oleaut32.VarI4FromUI2(_In_ USHORT uiIn,_Out_ LONG *plOut)
HRESULT None oleaut32.VarUI2FromI2(_In_ SHORT uiIn,_Out_ USHORT *puiOut)
HRESULT None oleaut32.VarUI8FromBool(_In_ VARIANT_BOOL boolIn,_Out_ ULONG64 *pi64Out)
HRESULT None oleaut32.VarI2FromI1(_In_ CHAR cIn,_Out_ SHORT *psOut)
HRESULT None oleaut32.VarDateFromUI8(_In_ ULONG64 ui64In,_Out_ DATE *pdateOut)
HRESULT None oleaut32.VarI8FromDate(_In_ DATE dateIn,_Out_ LONG64 *pi64Out)
HRESULT None oleaut32.VarBstrFromBool(_In_ VARIANT_BOOL boolIn,_In_ LCID lcid,_In_ ULONG dwFlags,_Out_ BSTR *pbstrOut)
HRESULT None oleaut32.VarBoolFromR4(_In_ FLOAT fltIn,_Out_ VARIANT_BOOL *pboolOut)
HRESULT None oleaut32.VarI2FromUI4(_In_ ULONG ulIn,_Out_ SHORT *psOut)
HRESULT None oleaut32.VarBstrFromUI4(_In_ ULONG ulIn,_In_ LCID lcid,_In_ ULONG dwFlags,_Out_ BSTR *pbstrOut)
HRESULT None oleaut32.VarCyFromR8(_In_ DOUBLE dblIn,_Out_ CY *pcyOut)
HRESULT None oleaut32.VarI2FromUI4(_In_ ULONG ulIn,_Out_ SHORT *psOut)
HRESULT None oleaut32.VarUI4FromDisp(_In_ IDispatch *pdispIn,_In_ LCID lcid,_Out_ ULONG *pulOut)
HRESULT None oleaut32.VarI1FromUI8(_In_ ULONG64 i64In,_Out_ CHAR *pcOut)
HRESULT None oleaut32.VarCyFromUI2(_In_ USHORT uiIn,_Out_ CY *pcyOut)
HRESULT None oleaut32.VarUI2FromUI8(_In_ ULONG64 i64In,_Out_ USHORT *puiOut)
HRESULT None oleaut32.SetVarConversionLocaleSetting(_In_ ULONG dwFlags)
HRESULT None oleaut32.VarUI1FromCy(_In_ CY cyIn,_Out_ BYTE *pbOut)
HRESULT None oleaut32.VarI2FromDisp(IDispatch *pdispIn None,_In_ LCID lcid,_Out_ SHORT *psOut)
HRESULT None oleaut32.VarBstrFromBool(_In_ VARIANT_BOOL boolIn,_In_ LCID lcid,_In_ ULONG dwFlags,_Out_ BSTR *pbstrOut)
HRESULT None oleaut32.VarDateFromUI8(_In_ ULONG64 ui64In,_Out_ DATE *pdateOut)
HRESULT None oleaut32.VarR8FromI1(_In_ CHAR cIn,DOUBLE *pdblOut None)
HRESULT None oleaut32.VarCyFromR8(_In_ DOUBLE dblIn,_Out_ CY *pcyOut)
HRESULT None oleaut32.VarI2FromUI4(_In_ ULONG ulIn,_Out_ SHORT *psOut)
HRESULT None oleaut32.VarBoolFromR4(_In_ FLOAT fltIn,_Out_ VARIANT_BOOL *pboolOut)
HRESULT None oleaut32.VarBoolFromR4(_In_ FLOAT fltIn,_Out_ VARIANT_BOOL *pboolOut)
HRESULT None oleaut32.VarBoolFromI8(_In_ LONG64 i64In,_Out_ VARIANT_BOOL *pboolOut)
HRESULT None oleaut32.VarI2FromDisp(IDispatch *pdispIn None,_In_ LCID lcid,_Out_ SHORT *psOut)
HRESULT None oleaut32.VarI2FromDisp(IDispatch *pdispIn None,_In_ LCID lcid,_Out_ SHORT *psOut)
HRESULT None oleaut32.VarBstrFromBool(_In_ VARIANT_BOOL boolIn,_In_ LCID lcid,_In_ ULONG dwFlags,_Out_ BSTR *pbstrOut)
HRESULT None oleaut32.VarOr(_In_ LPVARIANT pvarLeft,_In_ LPVARIANT pvarRight,_Out_ LPVARIANT pvarResult)
HRESULT None oleaut32.VarR8FromI1(_In_ CHAR cIn,DOUBLE *pdblOut None)
ULONG None traffic.TcQueryInterface(_In_ HANDLE IfcHandle,_In_ LPGUID pGuidParam,_In_ BOOLEAN NotifyChange,_Inout_ PULONG BufferSize,_Out_ PVOID Buffer)
HRESULT None oleaut32.VarCat(_In_ LPVARIANT pvarLeft,_In_ LPVARIANT pvarRight,_Out_ LPVARIANT pvarResult)
HRESULT None oleaut32.VarUI2FromUI8(_In_ ULONG64 i64In,_Out_ USHORT *puiOut)
HRESULT None oleaut32.VarCyFromUI2(_In_ USHORT uiIn,_Out_ CY *pcyOut)
ULONG None traffic.TcSetInterface(_In_ HANDLE IfcHandle,_In_ LPGUID pGuidParam,_In_ ULONG BufferSize,_In_ PVOID Buffer)
HRESULT None oleaut32.VarUI1FromCy(_In_ CY cyIn,_Out_ BYTE *pbOut)
HRESULT None oleaut32.VarNeg(_In_ LPVARIANT pvarIn,_Out_ LPVARIANT pvarResult)
HRESULT None mmcndmgr.DeleteColumn([in] int nCol)
HRESULT None oleaut32.VarBstrFromUI4(_In_ ULONG ulIn,_In_ LCID lcid,_In_ ULONG dwFlags,_Out_ BSTR *pbstrOut)
HRESULT None oleaut32.VarUI8FromBool(_In_ VARIANT_BOOL boolIn,_Out_ ULONG64 *pi64Out)
HRESULT None oleaut32.VarR8FromI1(_In_ CHAR cIn,DOUBLE *pdblOut None)
HRESULT None oleaut32.VarDateFromUI8(_In_ ULONG64 ui64In,_Out_ DATE *pdateOut)
HRESULT None oleaut32.VarR8FromUI2(_In_ USHORT uiIn,_Out_ DOUBLE *pdblOut)
HRESULT None oleaut32.VarBstrFromBool(_In_ VARIANT_BOOL boolIn,_In_ LCID lcid,_In_ ULONG dwFlags,_Out_ BSTR *pbstrOut)
HRESULT None oleaut32.VarXor(_In_ LPVARIANT pvarLeft,_In_ LPVARIANT pvarRight,_Out_ LPVARIANT pvarResult)
HRESULT None oleaut32.VarI8FromDate(_In_ DATE dateIn,_Out_ LONG64 *pi64Out)
HRESULT None oleaut32.VarBoolFromI8(_In_ LONG64 i64In,_Out_ VARIANT_BOOL *pboolOut)
HRESULT None oleaut32.VarCyFromR8(_In_ DOUBLE dblIn,_Out_ CY *pcyOut)
HRESULT None None.SetOptions([in] FILEOPENDIALOGOPTIONS fos)
HRESULT None oleaut32.VarUI4FromUI2(_In_ USHORT uiIn,_Out_ ULONG *pulOut)
HRESULT None oleaut32.VarBoolFromUI2(_In_ USHORT uiIn,_Out_ VARIANT_BOOL *pboolOut)
HRESULT None oleaut32.VarUI4FromDisp(_In_ IDispatch *pdispIn,_In_ LCID lcid,_Out_ ULONG *pulOut)
HRESULT None oleaut32.VarIdiv(_In_ LPVARIANT pvarLeft,_In_ LPVARIANT pvarRight,_Out_ LPVARIANT pvarResult)
HRESULT None oleaut32.VarI2FromUI4(_In_ ULONG ulIn,_Out_ SHORT *psOut)
HRESULT None oleaut32.VarR8FromI1(_In_ CHAR cIn,DOUBLE *pdblOut None)
HRESULT None oleaut32.VarI2FromDisp(IDispatch *pdispIn None,_In_ LCID lcid,_Out_ SHORT *psOut)
HRESULT None oleaut32.VarBoolFromI8(_In_ LONG64 i64In,_Out_ VARIANT_BOOL *pboolOut)
HRESULT None oleaut32.VarR8FromI1(_In_ CHAR cIn,DOUBLE *pdblOut None)
HRESULT None oleaut32.VarR8FromUI2(_In_ USHORT uiIn,_Out_ DOUBLE *pdblOut)
HRESULT None oleaut32.VarCyFromBool(_In_ VARIANT_BOOL boolIn,_Out_ CY *pcyOut)
HRESULT None oleaut32.VarCyFromR8(_In_ DOUBLE dblIn,_Out_ CY *pcyOut)
HRESULT None oleaut32.VarCyFromBool(_In_ VARIANT_BOOL boolIn,_Out_ CY *pcyOut)
HRESULT None oleaut32.VarBoolFromUI4(_In_ ULONG ulIn,_Out_ VARIANT_BOOL *pboolOut)
HRESULT None oleaut32.VarUI2FromI4(_In_ LONG lIn,_Out_ USHORT *puiOut)
HRESULT None oleaut32.VarUI2FromI4(_In_ LONG lIn,_Out_ USHORT *puiOut)
HRESULT None oleaut32.VarUI2FromUI4(_In_ ULONG ulIn,_Out_ USHORT *puiOut)
HRESULT None oleaut32.VarUI4FromDisp(_In_ IDispatch *pdispIn,_In_ LCID lcid,_Out_ ULONG *pulOut)
HRESULT None oleaut32.VarUI8FromBool(_In_ VARIANT_BOOL boolIn,_Out_ ULONG64 *pi64Out)
HRESULT None oleaut32.VarCyFromBool(_In_ VARIANT_BOOL boolIn,_Out_ CY *pcyOut)
HRESULT None oleaut32.VarUI2FromUI8(_In_ ULONG64 i64In,_Out_ USHORT *puiOut)
HRESULT None oleaut32.VarCyFromBool(_In_ VARIANT_BOOL boolIn,_Out_ CY *pcyOut)
HRESULT None oleaut32.VarBoolFromI8(_In_ LONG64 i64In,_Out_ VARIANT_BOOL *pboolOut)
HRESULT None oleaut32.VarUI4FromI4(_In_ LONG lIn,_Out_ ULONG *pulOut)
HRESULT None oleaut32.VarUI1FromUI8(_In_ ULONG64 ui64In,_Out_ BYTE *pbOut)
HRESULT None oleaut32.VarUI8FromR8(_In_ DOUBLE dblIn,_Out_ ULONG64 *pi64Out)
DWORD None None.acmGetVersion(VOID None None)
HRESULT None None.Write(PAVISTREAM ps None,LONG lStart None,LONG lSamples None,LPVOID lpBuffer None,LONG cbBuffer None,DWORD dwFlags None,LONG *plSampWritten None,LONG *plBytesWritten None)
HRESULT None None.QueryInterface(LPUNKNOWN ps None,const IID riid,void **ppvObj None)
HRESULT None mmcndmgr.SetButtonState([in] int idCommand,[in] MMC_BUTTON_STATE nState,[in] BOOL bState)
HRESULT None None.GetAt([in] DWORD iProp,[out] PROPERTYKEY *pkey)
HRESULT None None.LaunchAdvancedAssociationUI([in] LPCWSTR pszAppRegName)
HRESULT None shell32.SHGetSpecialFolderLocation(_In_ HWND hwndOwner,_In_ int nFolder,_Out_ PIDLIST_ABSOLUTE *ppidl)
MMRESULT None None.acmFilterTagEnum(HACMDRIVER had None,LPACMFILTERTAGDETAILS paftd None,ACMFILTERTAGENUMCB fnCallback None,DWORD_PTR dwInstance None,DWORD fdwEnum None)
MMRESULT None None.acmDriverEnum(ACMDRIVERENUMCB fnCallback None,DWORD_PTR dwInstance None,DWORD fdwEnum None)
HRESULT None oleaut32.VarDecFromR4(_In_ FLOAT fltIn,_Out_ DECIMAL *pdecOut)
HRESULT None None.GetDataHere([in] FORMATETC *pformatetc,[in None None,out] STGMEDIUM *pmedium)
LRESULT WINAPI user32.SendMessageTimeout(_In_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam,_In_ UINT fuFlags,_In_ UINT uTimeout,_Out_opt_ PDWORD_PTR lpdwResult)
LRESULT WINAPI user32.SendMessageTimeoutW(_In_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam,_In_ UINT fuFlags,_In_ UINT uTimeout,_Out_opt_ PDWORD_PTR lpdwResult)
LRESULT WINAPI user32.SendMessageTimeoutA(_In_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam,_In_ UINT fuFlags,_In_ UINT uTimeout,_Out_opt_ PDWORD_PTR lpdwResult)
HRESULT None None.SetDefaultExtension([in] LPCWSTR pszDefaultExtension)
HRESULT None oleaut32.VarCmp(_In_ LPVARIANT pvarLeft,_In_ LPVARIANT pvarRight,_In_ LCID lcid,_In_ ULONG dwFlags)
MMRESULT None None.acmFormatEnum(HACMDRIVER had None,LPACMFORMATDETAILS pafd None,ACMFORMATENUMCB fnCallback None,DWORD_PTR dwInstance None,DWORD fdwEnum None)
HRESULT None mmcndmgr.Create([in] MMC_CONTROL_TYPE nType,[in] LPEXTENDCONTROLBAR pExtendControlbar,[out] LPUNKNOWN *ppUnknown)
HRESULT None mmcndmgr.SetButtonState([in] int idCommand,[in] MMC_BUTTON_STATE nState,[in] BOOL bState)
MMRESULT None None.acmFormatTagDetails(HACMDRIVER had None,LPACMFORMATTAGDETAILS paftd None,DWORD fdwDetails None)
HRESULT None oleaut32.VarI4FromInt(_In_ INT intIn,_Out_ LONG *plOut)
HRESULT None None.SetTouchDisableProperty(HWND hwnd None,BOOL fDisableTouch None)
HRESULT None None.SetOkButtonLabel([in] LPCWSTR pszText)
MMRESULT None None.timeEndPeriod(UINT uPeriod None)
HRESULT None None.GetAt([in] DWORD iProp,[out] PROPERTYKEY *pkey)
HRESULT None oleaut32.VarBoolFromI8(_In_ LONG64 i64In,_Out_ VARIANT_BOOL *pboolOut)
BOOL None None.capSetUserData(hwnd None None,lUser None None)
HRESULT None oleaut32.VarBoolFromI4(_In_ LONG lIn,_Out_ VARIANT_BOOL *pboolOut)
UINT None shell32.Shell_MergeMenus(_In_ HMENU hmDst,_In_ HMENU hmSrc,UINT uInsert None,UINT uIDAdjust None,UINT uIDAdjustMax None,ULONG uFlags None)
HRESULT None None.Info(PAVISTREAM ps None,AVISTREAMINFO *psi None,LONG lSize None)
HRESULT None None.GetFileName([out] WCHAR **pszName)
MMRESULT ACMAPI None.acmStreamMessage(HACMSTREAM has None,UINT uMsg None,LPARAM lParam1 None,LPARAM lParam2 None)
HRESULT None oleaut32.VarI2FromI4(_In_ LONG lIn,_Out_ SHORT *psOut)
HRESULT None oleaut32.VarI4FromUI1(_In_ BYTE bIn,_Out_ LONG *plOut)
BOOL None None.capSetScrollPos(hwnd None None,lpP None None)
HRESULT None oleaut32.VarR4FromR8(_In_ DOUBLE dblIn,_Out_ FLOAT *pfltOut)
BOOL None None.capOverlay(hwnd None None,f None None)
HRESULT None oleaut32.VarUI2FromR4(_In_ FLOAT fltIn,_Out_ USHORT *puiOut)
HRESULT None oleaut32.VarR8Round(_In_ double dblIn,_In_ int cDecimals,_Out_ double *pdblResult)
HRESULT None oleaut32.VarUI4FromBool(_In_ VARIANT_BOOL boolIn,_Out_ ULONG *pulOut)
HRESULT None oleaut32.VarI2FromUI1(_In_ BYTE bIn,_Out_ SHORT *psOut)
HRESULT None mmcndmgr.AddButton([in] int idCommand,[in] LPOLESTR lpButtonText,[in] LPOLESTR lpTooltipText)
HRESULT None oleaut32.VarDateFromI4(_In_ LONG lIn,_Out_ DATE *pdateOut)
HRESULT None oleaut32.VarCyFromI2(_In_ SHORT sIn,_Out_ CY *pcyOut)
HRESULT None oleaut32.VarI1FromDate(_In_ DATE dateIn,_Out_ CHAR *pcOut)
HRESULT None None.AddPlace([in] IShellItem *psi,[in] FDAP fdap)
HRESULT None oleaut32.VarPow(_In_ LPVARIANT pvarLeft,_In_ LPVARIANT pvarRight,_Out_ LPVARIANT pvarResult)
HRESULT None oleaut32.VarUI2FromDisp(_In_ IDispatch *pdispIn,_In_ LCID lcid,_Out_ USHORT *puiOut)
HRESULT None oleaut32.VarUI2FromDate(_In_ DATE dateIn,_Out_ USHORT *puiOut)
HRESULT None oleaut32.VarR8FromStr(_In_ LPCOLESTR strIn,_In_ LCID lcid,_In_ ULONG dwFlags,_Out_ DOUBLE *pdblOut)
HRESULT None oleaut32.VarBoolFromStr(_In_ LPCOLESTR strIn,_In_ LCID lcid,_In_ ULONG dwFlags,_Out_ VARIANT_BOOL *pboolOut)
HRESULT None mmcndmgr.InsertColumn([in] int nCol,[in] LPCWSTR title,[in] int nFormat,[in] int nWidth)
HRESULT None mmcndmgr.SetButtonState([in] int idCommand,[in] MMC_BUTTON_STATE nState,[in] BOOL bState)
HRESULT None oleaut32.VarCyFromUI1(_In_ BYTE bIn,_Out_ CY *pcyOut)
HRESULT None oleaut32.VarDecFromStr(_In_ LPCOLESTR strIn,_In_ LCID lcid,_In_ ULONG dwFlags,_Out_ DECIMAL *pdecOut)
HRESULT None oleaut32.VarBoolFromDisp(IDispatch *pdispIn None,_In_ LCID lcid,_Out_ VARIANT_BOOL *pboolOut)
HRESULT None oleaut32.VarDateFromR8(_In_ DOUBLE dblIn,_Out_ DATE *pdateOut)
HRESULT None oleaut32.VarR4FromBool(_In_ VARIANT_BOOL boolIn,_Out_ FLOAT *pfltOut)
HRESULT None oleaut32.VarI4FromI2(_In_ SHORT sIn,_Out_ LONG *plOut)
HRESULT None oleaut32.VarI8FromR4(_In_ FLOAT fltIn,_Out_ LONG64 *pi64Out)
HRESULT None None.SetFileName([in] LPCWSTR pszName)
HRESULT None None.SetOptions([in] FILEOPENDIALOGOPTIONS fos)
HRESULT None oleaut32.VarI2FromStr(_In_ LPCOLESTR strIn,_In_ LCID lcid,_In_ ULONG dwFlags,_Out_ SHORT *psOut)
HRESULT None oleaut32.VarDecFromCy(_In_ CY cyIn,_Out_ DECIMAL *pdecOut)
MMRESULT None None.acmStreamUnprepareHeader(HACMSTREAM has None,LPACMSTREAMHEADER pash None,DWORD fdwUnprepare None)
HRESULT None None.QueryAppIsDefault([in] LPCWSTR pszQuery,[in] ASSOCIATIONTYPE atQueryType,[in] ASSOCIATIONLEVEL alQueryLevel,[in] LPCWSTR pszAppRegistryName,[out] BOOL *pfDefault)
HRESULT None oleaut32.VarUI4FromR8(_In_ DOUBLE dblIn,_Out_ ULONG *pulOut)
HRESULT None oleaut32.VarR4FromI1(_In_ CHAR cIn,_Out_ FLOAT *pfltOut)
SCODE None None.GetChunk([out] STAT_CHUNK *pStat)
HRESULT None oleaut32.VarBstrFromI1(_In_ CHAR cIn,_In_ LCID lcid,_In_ ULONG dwFlags,_Out_ BSTR *pbstrOut)
HRESULT None oleaut32.VarI8FromUI8(_In_ ULONG64 ui64In,_Out_ LONG64 *pi64Out)
BOOL None None.capDriverGetCaps(hwnd None None,psCaps None None,wSize None None)
HRESULT None oleaut32.VarUI8FromCy(_In_ CY cyIn,_Out_ ULONG64 *pi64Out)
MMRESULT None None.acmFormatTagDetails(HACMDRIVER had None,LPACMFORMATTAGDETAILS paftd None,DWORD fdwDetails None)
ULONG None traffic.TcDeleteFilter(_In_ HANDLE FilterHandle)
HRESULT None oleaut32.VarBstrFromUI2(_In_ USHORT uiIn,_In_ LCID lcid,_In_ ULONG dwFlags,_Out_ BSTR *pbstrOut)
HRESULT None oleaut32.VarI8FromBool(_In_ VARIANT_BOOL boolIn,_Out_ LONG64 *pi64Out)
HRESULT None oleaut32.VarDateFromUI1(_In_ BYTE bIn,_Out_ DATE *pdateOut)
HRESULT None oleaut32.VarUI1FromR4(_In_ FLOAT fltIn,BYTE *pbOut None)
HRESULT None oleaut32.VarDateFromI2(_In_ SHORT sIn,_Out_ DATE *pdateOut)
HRESULT None oleaut32.VarR8Pow(_In_ double dblLeft,_In_ double dblRight,_Out_ double *pdblResult)
HRESULT None oleaut32.VarUI1FromUI4(_In_ ULONG ulIn,_Out_ BYTE *pbOut)
HRESULT None oleaut32.VarDecFromBool(_In_ VARIANT_BOOL boolIn,_Out_ DECIMAL *pdecOut)
HRESULT None oleaut32.VarDecFromI4(_In_ LONG lIn,_Out_ DECIMAL *pdecOut)
HRESULT None oleaut32.VarI2FromUI2(_In_ USHORT uiIn,_Out_ SHORT *psOut)
HRESULT None oleaut32.VarUI1FromI8(_In_ LONG64 i64In,_Out_ BYTE *pbOut)
HRESULT None oleaut32.VarUI1FromDisp(IDispatch *pdispIn None,_In_ LCID lcid,_Out_ BYTE *pbOut)
HRESULT None oleaut32.VarDecFromBool(_In_ VARIANT_BOOL boolIn,_Out_ DECIMAL *pdecOut)
HRESULT None oleaut32.VarUI1FromDisp(IDispatch *pdispIn None,_In_ LCID lcid,_Out_ BYTE *pbOut)
HRESULT None oleaut32.VarUI1FromI8(_In_ LONG64 i64In,_Out_ BYTE *pbOut)
HRESULT None oleaut32.VarDecFromBool(_In_ VARIANT_BOOL boolIn,_Out_ DECIMAL *pdecOut)
HRESULT None oleaut32.VarI2FromBool(_In_ VARIANT_BOOL boolIn,_Out_ SHORT *psOut)
HRESULT None oleaut32.VarUI1FromI8(_In_ LONG64 i64In,_Out_ BYTE *pbOut)
HRESULT None oleaut32.VarUI1FromDisp(IDispatch *pdispIn None,_In_ LCID lcid,_Out_ BYTE *pbOut)
HRESULT None oleaut32.VarUI1FromI8(_In_ LONG64 i64In,_Out_ BYTE *pbOut)
HRESULT None oleaut32.VarI1FromUI4(_In_ ULONG ulIn,_Out_ CHAR *pcOut)
HRESULT None oleaut32.VarUI1FromDisp(IDispatch *pdispIn None,_In_ LCID lcid,_Out_ BYTE *pbOut)
HRESULT None oleaut32.VarDecFromBool(_In_ VARIANT_BOOL boolIn,_Out_ DECIMAL *pdecOut)
HRESULT None oleaut32.VarI1FromUI4(_In_ ULONG ulIn,_Out_ CHAR *pcOut)
HRESULT None oleaut32.VarI1FromUI4(_In_ ULONG ulIn,_Out_ CHAR *pcOut)
HRESULT None oleaut32.VarDecFromBool(_In_ VARIANT_BOOL boolIn,_Out_ DECIMAL *pdecOut)
HRESULT None oleaut32.VarI1FromUI4(_In_ ULONG ulIn,_Out_ CHAR *pcOut)
HRESULT None oleaut32.VarI1FromUI4(_In_ ULONG ulIn,_Out_ CHAR *pcOut)
HRESULT None oleaut32.VarI1FromUI4(_In_ ULONG ulIn,_Out_ CHAR *pcOut)
HRESULT None oleaut32.VarI1FromUI4(_In_ ULONG ulIn,_Out_ CHAR *pcOut)
HRESULT None oleaut32.VarUI1FromDisp(IDispatch *pdispIn None,_In_ LCID lcid,_Out_ BYTE *pbOut)
HRESULT None oleaut32.VarDecFromBool(_In_ VARIANT_BOOL boolIn,_Out_ DECIMAL *pdecOut)
HRESULT None oleaut32.VarI2FromUI2(_In_ USHORT uiIn,_Out_ SHORT *psOut)
HRESULT None oleaut32.VarUI8FromUI4(_In_ ULONG ulIn,_Out_ ULONG64 *pi64Out)
HRESULT None mmcndmgr.InsertColumn([in] int nCol,[in] LPCWSTR title,[in] int nFormat,[in] int nWidth)
HRESULT None oleaut32.VarDecFromBool(_In_ VARIANT_BOOL boolIn,_Out_ DECIMAL *pdecOut)
HRESULT None oleaut32.VarUI4FromR4(_In_ FLOAT fltIn,_Out_ ULONG *pulOut)
HRESULT None oleaut32.VarDecFromI4(_In_ LONG lIn,_Out_ DECIMAL *pdecOut)
HRESULT None oleaut32.VarI1FromUI4(_In_ ULONG ulIn,_Out_ CHAR *pcOut)
HRESULT None oleaut32.VarDecFromBool(_In_ VARIANT_BOOL boolIn,_Out_ DECIMAL *pdecOut)
HRESULT None oleaut32.VarI1FromUI4(_In_ ULONG ulIn,_Out_ CHAR *pcOut)
HRESULT None oleaut32.VarI1FromUI4(_In_ ULONG ulIn,_Out_ CHAR *pcOut)
HRESULT None oleaut32.VarI1FromUI4(_In_ ULONG ulIn,_Out_ CHAR *pcOut)
HRESULT None oleaut32.VarUI1FromI8(_In_ LONG64 i64In,_Out_ BYTE *pbOut)
HRESULT None oleaut32.VarI1FromUI4(_In_ ULONG ulIn,_Out_ CHAR *pcOut)
HRESULT None oleaut32.VarI1FromUI4(_In_ ULONG ulIn,_Out_ CHAR *pcOut)
HRESULT None oleaut32.VarDecFromI4(_In_ LONG lIn,_Out_ DECIMAL *pdecOut)
HRESULT None oleaut32.VarI1FromUI4(_In_ ULONG ulIn,_Out_ CHAR *pcOut)
HRESULT None oleaut32.VarI1FromUI4(_In_ ULONG ulIn,_Out_ CHAR *pcOut)
HRESULT None oleaut32.VarI1FromUI4(_In_ ULONG ulIn,_Out_ CHAR *pcOut)
HRESULT None oleaut32.VarDecFromBool(_In_ VARIANT_BOOL boolIn,_Out_ DECIMAL *pdecOut)
HRESULT None oleaut32.VarDecFromBool(_In_ VARIANT_BOOL boolIn,_Out_ DECIMAL *pdecOut)
HRESULT None oleaut32.VarDecFromI4(_In_ LONG lIn,_Out_ DECIMAL *pdecOut)
HRESULT None oleaut32.VarDecFromBool(_In_ VARIANT_BOOL boolIn,_Out_ DECIMAL *pdecOut)
HRESULT None oleaut32.VarDecFromBool(_In_ VARIANT_BOOL boolIn,_Out_ DECIMAL *pdecOut)
HRESULT None oleaut32.VarDecFromI4(_In_ LONG lIn,_Out_ DECIMAL *pdecOut)
HRESULT None oleaut32.VarDecFromBool(_In_ VARIANT_BOOL boolIn,_Out_ DECIMAL *pdecOut)
HRESULT None oleaut32.VarDecFromBool(_In_ VARIANT_BOOL boolIn,_Out_ DECIMAL *pdecOut)
HRESULT None oleaut32.VarUI1FromI8(_In_ LONG64 i64In,_Out_ BYTE *pbOut)
HRESULT None oleaut32.VarDecFromBool(_In_ VARIANT_BOOL boolIn,_Out_ DECIMAL *pdecOut)
HRESULT None oleaut32.VarI1FromUI4(_In_ ULONG ulIn,_Out_ CHAR *pcOut)
HRESULT None oleaut32.VarDecFromI4(_In_ LONG lIn,_Out_ DECIMAL *pdecOut)
HRESULT None oleaut32.VarDecFromBool(_In_ VARIANT_BOOL boolIn,_Out_ DECIMAL *pdecOut)
HRESULT None oleaut32.VarI1FromUI4(_In_ ULONG ulIn,_Out_ CHAR *pcOut)
HRESULT None oleaut32.VarUI1FromI8(_In_ LONG64 i64In,_Out_ BYTE *pbOut)
HRESULT None oleaut32.VarUI1FromDisp(IDispatch *pdispIn None,_In_ LCID lcid,_Out_ BYTE *pbOut)
HRESULT None oleaut32.VarDecFromI4(_In_ LONG lIn,_Out_ DECIMAL *pdecOut)
HRESULT None oleaut32.VarUI1FromI8(_In_ LONG64 i64In,_Out_ BYTE *pbOut)
HRESULT None oleaut32.VarI1FromUI4(_In_ ULONG ulIn,_Out_ CHAR *pcOut)
HRESULT None oleaut32.VarI1FromUI4(_In_ ULONG ulIn,_Out_ CHAR *pcOut)
HRESULT None oleaut32.VarDecFromBool(_In_ VARIANT_BOOL boolIn,_Out_ DECIMAL *pdecOut)
HRESULT None oleaut32.VarUI1FromDisp(IDispatch *pdispIn None,_In_ LCID lcid,_Out_ BYTE *pbOut)
HRESULT None oleaut32.VarUI1FromI8(_In_ LONG64 i64In,_Out_ BYTE *pbOut)
HRESULT None oleaut32.VarDecFromBool(_In_ VARIANT_BOOL boolIn,_Out_ DECIMAL *pdecOut)
HRESULT None oleaut32.VarI1FromUI4(_In_ ULONG ulIn,_Out_ CHAR *pcOut)
HRESULT None oleaut32.VarDecFromBool(_In_ VARIANT_BOOL boolIn,_Out_ DECIMAL *pdecOut)
HRESULT None oleaut32.VarI1FromUI4(_In_ ULONG ulIn,_Out_ CHAR *pcOut)
DWORD None None.ICDrawFlush(hic None None)
SCODE None None.GetChunk([out] STAT_CHUNK *pStat)
HRESULT None oleaut32.VarI2FromDate(_In_ DATE dateIn,_Out_ SHORT *psOut)
DWORD None None.ICGetDefaultKeyFrameRate(hic None None)
HRESULT None None.CompareObjects([in] LPDATAOBJECT lpDataObjectA,[in] LPDATAOBJECT lpDataObjectB)
HRESULT None oleaut32.VarInt(_In_ LPVARIANT pvarIn,_Out_ LPVARIANT pvarResult)
HRESULT None oleaut32.VarCyFromI8(_In_ LONG64 i64In,_Out_ CY *pcyOut)
HRESULT None oleaut32.VarUI4FromI1(_In_ CHAR cIn,_Out_ ULONG *pulOut)
HRESULT None None.SetGuid([in] REFGUID guid)
HRESULT None oleaut32.VarUI4FromI1(_In_ CHAR cIn,_Out_ ULONG *pulOut)
HRESULT None oleaut32.VarI1FromI2(_In_ SHORT uiIn,_Out_ CHAR *pcOut)
HRESULT None oleaut32.VarDecFromI1(_In_ CHAR cIn,_Out_ DECIMAL *pdecOut)
HRESULT None oleaut32.VarDecFromUI2(_In_ USHORT uiIn,_Out_ DECIMAL *pdecOut)
HRESULT None oleaut32.VarCyFromI8(_In_ LONG64 i64In,_Out_ CY *pcyOut)
HRESULT None oleaut32.VarCyFromI8(_In_ LONG64 i64In,_Out_ CY *pcyOut)
HRESULT None oleaut32.VarR8FromUI8(_In_ ULONG64 ui64In,_Out_ DOUBLE *pdblOut)
HRESULT None oleaut32.VarDecFromI8(_In_ LONG64 i64In,_Out_ DECIMAL *pdecOut)
HRESULT None oleaut32.VarBstrFromDisp(IDispatch *pdispIn None,_In_ LCID lcid,_In_ ULONG dwFlags,_Out_ BSTR *pbstrOut)
HRESULT None oleaut32.VarDiv(_In_ LPVARIANT pvarLeft,_In_ LPVARIANT pvarRight,_Out_ LPVARIANT pvarResult)
HRESULT None oleaut32.VarUI2FromR8(_In_ DOUBLE dblIn,USHORT *puiOut None)
HRESULT None oleaut32.VarI1FromUI1(_In_ BYTE bIn,_Out_ CHAR *pcOut)
BOOL None None.capSetCallbackOnStatus(hwnd None None,fpProc None None)
HRESULT None oleaut32.VarDecFromDisp(_In_ IDispatch *pdispIn,_In_ LCID lcid,_Out_ DECIMAL *pdecOut)
HRESULT None oleaut32.VarR8FromDate(_In_ DATE dateIn,_Out_ DOUBLE *pdblOut)
HRESULT None oleaut32.VarUI2FromI4(_In_ LONG lIn,_Out_ USHORT *puiOut)
BOOL None None.capFileSaveAs(hwnd None None,szName None None)
HRESULT None oleaut32.VarDiv(_In_ LPVARIANT pvarLeft,_In_ LPVARIANT pvarRight,_Out_ LPVARIANT pvarResult)
HRESULT None oleaut32.VarR4CmpR8(_In_ float fltLeft,_In_ double dblRight)
HRESULT None oleaut32.VarI2FromUI1(_In_ BYTE bIn,_Out_ SHORT *psOut)
HRESULT None oleaut32.VarDateFromCy(_In_ CY cyIn,_Out_ DATE *pdateOut)
HRESULT None oleaut32.VarI8FromUI2(_In_ USHORT uiIn,_Out_ LONG64 *pi64Out)
HRESULT None oleaut32.VarI4FromDate(_In_ DATE dateIn,_Out_ LONG *plOut)
HRESULT None oleaut32.VarR8FromI2(_In_ SHORT sIn,_Out_ DOUBLE *pdblOut)
HRESULT None oleaut32.VarI1FromI2(_In_ SHORT uiIn,_Out_ CHAR *pcOut)
BOOL None None.capFileSaveAs(hwnd None None,szName None None)
HRESULT None None.SetLcid([in] LCID lcid)
HRESULT None None.GetScopeStatistics([out] DWORD *indexedDocumentCount,[out] DWORD *oustandingAddCount,[out] DWORD *oustandingModifyCount)
HRESULT None None.GetUIObjectOf([in None None,optional] LCID locale,[out] REFIID riid,[out] void **ppUIObject)
HRESULT None None.GetParentFolder([out] ppShellFolder **IShellFolder,[out] ppidl *LPITEMIDLIST)
HRESULT None oleaut32.VarI1FromR4(_In_ FLOAT fltIn,_Out_ CHAR *pcOut)
HRESULT None oleaut32.VarUI2FromUI1(_In_ BYTE bIn,_Out_ USHORT *puiOut)
HRESULT None oleaut32.VarBstrFromI2(_In_ SHORT iVal,_In_ LCID lcid,_In_ ULONG dwFlags,BSTR *pbstrOut None)
HRESULT None oleaut32.VarUI8FromBool(_In_ VARIANT_BOOL boolIn,_Out_ ULONG64 *pi64Out)
HRESULT None None.CreateStringLeaf([in] REFPROPERTYKEY propkey,[in] CONDITION_OPERATION cop,[in] LPCWSTR pszValue,[in] LPCWSTR pszLocaleName,[in] CONDITION_CREATION_OPTIONS cco,[in] REFIID riid,[out] void **ppv)
HRESULT None oleaut32.VarUI1FromUI4(_In_ ULONG ulIn,_Out_ BYTE *pbOut)
HRESULT None oleaut32.OleLoadPictureFileEx(_In_ VARIANT varFileName,_In_ DWORD xSizeDesired,_In_ DWORD ySizeDesired,_In_ DWORD dwFlags,_Out_ LPDISPATCH *lplpdispPicture)
HRESULT None None.CreateBooleanLeaf([in] REFPROPERTYKEY propkey,[in] CONDITION_OPERATION cop,[in] BOOL fValue,[in] CONDITION_CREATION_OPTIONS cco,[in] REFIID riid,[out] void **ppv)
HRESULT None oleaut32.VarUI2FromDisp(_In_ IDispatch *pdispIn,_In_ LCID lcid,_Out_ USHORT *puiOut)
HRESULT None oleaut32.OleSavePictureFile(_In_ LPDISPATCH lpdispPicture,_In_ BSTR bstrFileName)
HRESULT None None.GetSubConditions([in] REFIID riid,[out None None,retval] void **ppv)
HRESULT None oleaut32.VarDecFromI4(_In_ LONG lIn,_Out_ DECIMAL *pdecOut)
HRESULT None oleaut32.VarDecFromBool(_In_ VARIANT_BOOL boolIn,_Out_ DECIMAL *pdecOut)
HRESULT None oleaut32.VarUI1FromI8(_In_ LONG64 i64In,_Out_ BYTE *pbOut)
HRESULT None None.GetValue([out None None,retval] LPWSTR *ppszValue)
HRESULT None None.SetMultiOption([in] STRUCTURED_QUERY_MULTIOPTION option,[in] LPCWSTR pszOptionKey,[in] PROPVARIANT *pOptionValue)
HRESULT None None.Entities([in] REFIID riid,[out None None,retval] void **pEntities)
HRESULT None oleaut32.VarCyFromI8(_In_ LONG64 i64In,_Out_ CY *pcyOut)
HRESULT None None.GetNamedEntity([in] LPCWSTR pszValue,[out None None,retval] INamedEntity **ppNamedEntity)
HRESULT None None.OnNewItem([in] REFPROPVARIANT itemID,[in] ROWSETEVENT_ITEMSTATE newItemState)
HRESULT None oleaut32.VarDecFromR8(_In_ DOUBLE dblIn,_Out_ DECIMAL *pdecOut)
HRESULT None shell32.ParseDisplayName([in] HWND hwnd,[in] IBindCtx *pbc,[in] LPWSTR pszDisplayName,[out] ULONG *pchEaten,[out] PIDLIST_RELATIVE *ppidl,[in None None,out] ULONG *pdwAttributes)
HRESULT None None.GetScopePriority([out] PRIORITY_LEVEL *priority,[out] DWORD *scopeStatisticsEventFrequency)
HRESULT None None.NamedEntities([in] REFIID riid,[out None None,retval] void **pNamedEntities)
HRESULT None shell32.CreateViewObject([in] HWND hwndOwner,[in] REFIID riid,[out] void **ppv)
HRESULT None None.OnRowsetEvent([in] ROWSETEVENT_TYPE eventType,[in] REFPROPVARIANT eventData)
HRESULT None shell32.BindToObject([in] PCUIDLIST_RELATIVE pidl,[in] IBindCtx *pbc,[in] REFIID riid,[out] void **ppvOut)
HRESULT None None.RootEntity([out None None,retval] IEntity **pRootEntity)
HRESULT None None.Initialize([in] ISchemaProvider *pSchemaProvider)
HRESULT None None.GetErrors([in] REFIID riid,[out None None,retval] void **ppParseErrors)
HRESULT None None.Parse([in] LPCWSTR pszInputString,[in] IEnumUnknown *pCustomProperties,[out None None,retval] IQuerySolution **ppSolution)
void None None.CreateLeaf([in] REFPROPERTYKEY propkey,[in] CONDITION_OPERATION cop,[in] REFPROPERTYKEY propvar,[in None None,optional] LPCWSTR pszSemanticType,[in None None,optional] LPCWSTR pszLocaleName,[in None None,optional] IRichChunk *pPropertyNameTerm,[in None None,optional] IRichChunk *pOperationTerm,[in None None,optional] IRichChunk *pValueTerm,[in] CONDITION_CREATION_OPTIONS cco,[in] REFIID riid,[out] void **ppv)
HRESULT None None.GetRelationship([in] LPCWSTR pszRelationName,[out None None,retval] IRelationship **pRelationship)
HRESULT None None.SetProperties(ULONG cPropertySets None,DBPROPSET rgPropertySets[] None)
HRESULT None None.RestatePropertyValueToString([in] ICondition *pCondition,[in] BOOL fUseEnglish,[out] LPWSTR *ppszPropertyName,[out] LPWSTR *ppszQueryString)
HRESULT None shell32.CompareIDs([in] LPARAM lParam,[in] PCUIDLIST_RELATIVE pidl1,[in] PCUIDLIST_RELATIVE pidl2)
HRESULT None shell32.SetNameOf([in] HWND hwndOwner,[in] PCUITEMID_CHILD pidl,[in] LPCWSTR pszName,[in] SHGDNF uFlags,[out] PITEMID_CHILD *ppidlOut)
HRESULT None None.get_QuerySelectColumns([out None None,retval] LPWSTR *ppszSelectColumns)
HRESULT None None.GetImpersonationSidBlobs([in] LPCWSTR pcwszURL,[out] DWORD *pcSidCount,[out] BLOB **ppSidBlobs)
HRESULT None None.get_QueryTermExpansion([out None None,retval] SEARCH_TERM_EXPANSION *pExpandTerms)
HRESULT None None.SetProperties(ULONG cPropertySets None,DBPROPSET rgPropertySets[] None)
HRESULT None None.GetErrors([in] REFIID riid,[out None None,retval] void **ppParseErrors)
HRESULT None None.OnDeletedItem([in] REFPROPVARIANT itemID,[in] ROWSETEVENT_ITEMSTATE deletedItemState)
HRESULT None None.RegisterObjectParam([in] LPOLESTR pszKey,[in] IUnknown *punk)
HRESULT None None.CreateNegation([in] ICondition *pcSub,[in] CONDITION_CREATION_OPTIONS cco,[in] REFIID riid,[out] void **ppv)
HRESULT None None.put_QuerySelectColumns([in None None,unique] LPCWSTR pszSelectColumns)
HRESULT None None.GetData([out None None,unique] ULONG *pFirstPos,[out None None,unique] ULONG *pLength,[out None None,unique] LPWSTR *ppsz,[out None None,unique] PROPVARIANT *pValue)
HRESULT None None.AddUserScopeRule([in] LPCWSTR pszURL,[in] BOOL fInclude,[in] BOOL fOverrideChildren,[in] DWORD fFollowFlags)
HRESULT None None.GetPropertyInfo(ULONG cPropertyIDSets None,const DBPROPIDSET rgPropertyIDSets[],ULONG *pcPropertyInfoSets None,DBPROPINFOSET **prgPropertyInfoSets None,OLECHAR **ppDescBuffer None)
HRESULT None None.SetProperties(ULONG cPropertySets None,DBPROPSET rgPropertySets[] None)
HRESULT None None.put_QueryContentProperties([in None None,unique] LPCWSTR pszContentProperties)
HRESULT None None.EnumObjectParam([out] IEnumString **ppenum)
HRESULT None None.SetOption([in] STRUCTURED_QUERY_SINGLE_OPTION option,[in] PROPVARIANT *pOptionValue)
HRESULT None None.SetBindOptions([in] BIND_OPTS *pbindopts)
HRESULT None None.get_QueryTermExpansion([out None None,retval] SEARCH_TERM_EXPANSION *pExpandTerms)
HRESULT None None.GetLocale([out None None,optional] LPWSTR *ppszLocaleName)
HRESULT None None.GetQueryHelper([out None None,retval] ISearchQueryHelper **ppSearchQueryHelper)
HRESULT None None.put_QueryWhereRestrictions([in None None,unique] LPCWSTR pszRestrictions)
HRESULT None None.GetLocale([out None None,optional] LPWSTR *ppszLocaleName)
HRESULT None None.RemoveDefaultScopeRule([in] LPCWSTR pszURL)
HRESULT None None.put_QueryContentLocale([in] LCID lcid)
HRESULT None None.get_QueryContentProperties([out None None,retval] LPWSTR *ppszContentProperties)
HRESULT None None.CreateCompoundFromArray([in] CONDITION_TYPE ct,[in] ICondition **ppCondSubs,[in] ULONG cSubs,[in] CONDITION_CREATION_OPTIONS cco,[in] REFIID riid,[out] void **ppv)
HRESULT None None.get_QuerySyntax([out None None,retval] SEARCH_QUERY_SYNTAX *pQuerySyntax)
HRESULT None None.get_ConnectionString([out None None,retval] LPWSTR *pwszConnectionString)
HRESULT None None.MetaData([in] REFIID riid,[out None None,retval] void **pMetaData)
HRESULT None None.GenerateSQLFromUserQuery([in] LPCWSTR pszQuery,[out None None,retval] LPWSTR *ppszSQL)
HRESULT None None.get_QueryContentLocale([out None None,retval] LCID *plcid)
HRESULT None None.InitializeOptions([in] BOOL fUnderstandNQS,[in] BOOL fAutoWildCard,[in] IQueryParser *pQueryParser)
HRESULT None None.BindToObject([in] IBindCtx *pbc,[in] IMoniker *pmkToLeft,[in] REFIID riidResult,[out] void **ppvResult)
HRESULT None None.GetData([out None None,unique] ULONG *pFirstPos,[out None None,unique] ULONG *pLength,[out None None,unique] LPWSTR *ppsz,[out None None,unique] PROPVARIANT *pValue)
HRESULT None None.get_QueryMaxResults([out None None,retval] LONG *pcMaxResults)
HRESULT None None.get_QueryKeywordLocale([out None None,retval] LCID *plcid)
HRESULT None None.GetBindOptions([in None None,out] BIND_OPTS *pbindopts)
HRESULT None None.get_QuerySorting([out None None,retval] LPWSTR *ppszSorting)
HRESULT None None.put_QuerySyntax([in] SEARCH_QUERY_SYNTAX querySyntax)
HRESULT None None.HasChildScopeRule([in] LPCWSTR pszURL,[out None None,retval] BOOL *pfHasChildRule)
HRESULT None None.EnumerateScopeRules([out] IEnumSearchScopeRules **ppSearchScopeRules)
HRESULT None None.GetRunningObjectTable([out] IRunningObjectTable **pprot)
HRESULT None None.put_QueryTermExpansion([in] SEARCH_TERM_EXPANSION expandTerms)
HRESULT None None.put_QueryMaxResults([in] LONG cMaxResults)
HRESULT None None.put_QueryKeywordLocale([in] LCID lcid)
HRESULT None None.put_QuerySorting([in None None,unique] LPCWSTR pszSorting)
HRESULT None None.RestateToString([in] ICondition *pCondition,[in] BOOL fUseEnglish,[out] LPWSTR *ppszQueryString)
HRESULT None None.get_QueryWhereRestrictions([out None None,retval] LPWSTR *ppszRestrictions)
HRESULT None None.put_QueryTermExpansion([in] SEARCH_TERM_EXPANSION expandTerms)
HRESULT None None.RevokeObjectBound([in] IUnknown *punk)
HRESULT None None.URLBeingIndexed([out None None,retval] LPWSTR *pszUrl)
HRESULT None None.CreateCompoundFromArray([in] CONDITION_TYPE ct,[in] ICondition **ppCondSubs,[in] ULONG cSubs,[in] CONDITION_CREATION_OPTIONS cco,[in] REFIID riid,[out] void **ppv)
HRESULT None None.InitializeOptions([in] BOOL fUnderstandNQS,[in] BOOL fAutoWildCard,[in] IQueryParser *pQueryParser)
HRESULT None None.GetOption([in] STRUCTURED_QUERY_SINGLE_OPTION option,[out None None,retval] PROPVARIANT *pOptionValue)
HRESULT None None.GetSchemaProvider([out None None,retval] ISchemaProvider **ppSchemaProvider)
HRESULT None None.get_QueryKeywordLocale([out None None,retval] LCID *plcid)
HRESULT None None.get_QueryMaxResults([out None None,retval] LONG *pcMaxResults)
HRESULT None None.ParsePropertyValue([in] LPCWSTR pszPropertyName,[in] LPCWSTR pszInputString,[out None None,retval] IQuerySolution **ppSolution)
HRESULT None None.get_QueryMaxResults([out None None,retval] LONG *pcMaxResults)
HRESULT None None.put_QuerySyntax([in] SEARCH_QUERY_SYNTAX querySyntax)
HRESULT None None.get_QueryMaxResults([out None None,retval] LONG *pcMaxResults)
HRESULT None None.get_QueryContentProperties([out None None,retval] LPWSTR *ppszContentProperties)
HRESULT None None.CreateLoadedParser([in] LPCWSTR pszCatalog,[in] LANGID langidForKeywords,[in] REFIID riid,[out None None,retval] void **ppQueryParser)
HRESULT None None.get_QueryKeywordLocale([out None None,retval] LCID *plcid)
HRESULT None None.CreateCompoundFromObjectArray([in] CONDITION_TYPE ct,[in None None,optional] IObjectArray *poaSubs,[in] CONDITION_CREATION_OPTIONS cco,[in] REFIID riid,[out] void **ppv)
HRESULT None None.put_QuerySyntax([in] SEARCH_QUERY_SYNTAX querySyntax)
HRESULT None None.get_QueryKeywordLocale([out None None,retval] LCID *plcid)
HRESULT None None.IncludedInCrawlScope([in] LPCWSTR pszURL,[out None None,retval] BOOL *pfIsIncluded)
HRESULT None None.put_QueryMaxResults([in] LONG cMaxResults)
HRESULT None None.put_QuerySyntax([in] SEARCH_QUERY_SYNTAX querySyntax)
HRESULT None None.GetLeafConditionInfo([out None None,optional] PROPERTYKEY *ppropkey,[out None None,optional] CONDITION_OPERATION *pcop,[out None None,optional] PROPVARIANT *pPropVar)
HRESULT None None.put_QueryMaxResults([in] LONG cMaxResults)
HRESULT None None.put_QueryMaxResults([in] LONG cMaxResults)
HRESULT None None.RemoveRoot([in] LPCWSTR pszURL)
HRESULT None None.Execute(IUnknown *pUnkOuter None,REFIID riid None,DBPARAMS *pParams None,DBROWCOUNT *pcRowsAffected None,IUnknown **ppRowset None)
HRESULT None None.ThreadIdle([in] DWORD dwTimeElaspedSinceLastCallInMS)
HRESULT None None.CreateTrueFalse([in] BOOL fValue,[in] CONDITION_CREATION_OPTIONS cco,[in] REFIID riid,[out] void **ppv)
HRESULT None None.GetObjectParam([in] LPOLESTR pszKey,[out] IUnknown **ppunk)
HRESULT None None.CreateNegation([in] ICondition *pcSub,[in] CONDITION_CREATION_OPTIONS cco,[in] REFIID riid,[out] void **ppv)
HRESULT None None.AddRoot([in] ISearchRoot *pSearchRoot)
HRESULT None None.put_QueryContentProperties([in None None,unique] LPCWSTR pszContentProperties)
HRESULT None None.DefaultPhrase([out None None,retval] LPWSTR *ppszPhrase)
HRESULT None None.GetCodePage([out] WCHAR wszCodePage[],[in] DWORD dwSize,[out] DWORD *pdwLength)
HRESULT None None.HasParentScopeRule([in] LPCWSTR pszURL,[out None None,retval] BOOL *pfHasParentRule)
HRESULT None None.AddHierarchicalScope([in] LPCWSTR pszURL,[in] BOOL fInclude,[in] BOOL fDefault,[in] BOOL fOverrideChildren)
HRESULT None None.Load([in] LPCOLESTR pszFileName,[in] DWORD dwMode)
HRESULT None None.GetCatalogStatus([out] CatalogStatus *pStatus,[out] CatalogPausedReason *pPausedReason)
HRESULT None None.GetProperties(ULONG cPropertyIDSets None,const DBPROPIDSET rgPropertyIDSets[],ULONG *pcPropertySets None,DBPROPSET **prgPropertySets None)
HRESULT None None.Prepare(ULONG cExpectedRuns None)
HRESULT None None.GetData([out] LPCWSTR *ppszKey,[out] LPWSTR *ppszValue)
HRESULT None None.RevokeObjectParam([in] LPOLESTR pszKey)
HRESULT None None.EnumerateRoots([out None None,retval] IEnumSearchRoots **ppSearchRoots)
HRESULT None None.OnDeletedItem([in] REFPROPVARIANT itemID,[in] ROWSETEVENT_ITEMSTATE deletedItemState)
HRESULT None None.RegisterObjectParam([in] LPOLESTR pszKey,[in] IUnknown *punk)
HRESULT None None.CreateCompoundFromObjectArray([in] CONDITION_TYPE ct,[in None None,optional] IObjectArray *poaSubs,[in] CONDITION_CREATION_OPTIONS cco,[in] REFIID riid,[out] void **ppv)
HRESULT None None.GetPropertyInfo(ULONG cPropertyIDSets None,const DBPROPIDSET rgPropertyIDSets[],ULONG *pcPropertyInfoSets None,DBPROPINFOSET **prgPropertyInfoSets None,OLECHAR **ppDescBuffer None)
HRESULT None None.IncludedInCrawlScopeEx([in] LPCWSTR pszURL,[out] BOOL *pfIsIncluded,[out] CLUSION_REASON *pReason)
HRESULT None None.get_QueryKeywordLocale([out None None,retval] LCID *plcid)
HRESULT None None.CreateIntegerLeaf([in] REFPROPERTYKEY propkey,[in] CONDITION_OPERATION cop,[in] INT32 lValue,[in] CONDITION_CREATION_OPTIONS cco,[in] REFIID riid,[out] void **ppv)
HRESULT None None.GetQueryHelper([out None None,retval] ISearchQueryHelper **ppSearchQueryHelper)
HRESULT None None.EnumObjectParam([out] IEnumString **ppenum)
HRESULT None None.put_QuerySorting([in None None,unique] LPCWSTR pszSorting)
HRESULT None None.CreateTrueFalse([in] BOOL fValue,[in] CONDITION_CREATION_OPTIONS cco,[in] REFIID riid,[out] void **ppv)
HRESULT None None.put_QueryKeywordLocale([in] LCID lcid)
HRESULT None None.RegisterObjectBound([in] IUnknown *punk)
HRESULT None None.GetQuery([out] ICondition **ppQueryNode,[out] IEntity **ppMainType)
HRESULT None None.GetLexicalData([out] LPWSTR *ppszInputString,[out] ITokenCollection **ppTokens,[out] LCID *plcid,[out] IUnknown **ppWordBreaker)
HRESULT None None.OnChangedItem([in] REFPROPVARIANT itemID,[in] ROWSETEVENT_ITEMSTATE rowsetItemState,[in] ROWSETEVENT_ITEMSTATE changedItemState)
HRESULT None None.get_QueryWhereRestrictions([out None None,retval] LPWSTR *ppszRestrictions)
HRESULT None None.put_QueryTermExpansion([in] SEARCH_TERM_EXPANSION expandTerms)
HRESULT None None.get_DataTimeout([out None None,retval] DWORD *pdwDataTimeout)
HRESULT None None.URLBeingIndexed([out None None,retval] LPWSTR *pszUrl)
HRESULT None None.SetProperties(ULONG cPropertySets None,DBPROPSET rgPropertySets[] None)
HRESULT None None.SetBindOptions([in] BIND_OPTS *pbindopts)
HRESULT None None.Enum([in] BOOL fForward,[out] IEnumMoniker **ppenumMoniker)
HRESULT None None.GetParentScopeVersionId([in] LPCWSTR pszUrl,[out None None,retval] LONG *plScopeId)
HRESULT None None.Next([in] ULONG cConnections,[out] CONNECTDATA *rgcd,[out] ULONG *lpcFetched)
HRESULT None None.GetProperties(const ULONG cPropertyIDSets,const DBPROPIDSET rgPropertyIDSets[],ULONG * pcPropertySets,DBPROPSET ** prgPropertySets)
HRESULT None None.put_QuerySorting([in None None,unique] LPCWSTR pszSorting)
HRESULT None None.GetProperties(const ULONG cPropertyIDSets,const DBPROPIDSET rgPropertyIDSets[],ULONG *pcPropertySets None,DBPROPSET **prgPropertySets None)
HRESULT None None.put_QueryKeywordLocale([in] LCID lcid)
HRESULT None None.GetBindOptions([in None None,out] BIND_OPTS *pbindopts)
HRESULT None None.AddDefaultScopeRule([in] LPCWSTR pszUrl,[in] BOOL fInclude,[in] DWORD fFollowFlags)
HRESULT None None.get_QueryMaxResults([out None None,retval] LONG *pcMaxResults)
HRESULT None None.put_QuerySyntax([in] SEARCH_QUERY_SYNTAX querySyntax)
HRESULT None None.put_QuerySyntax([in] SEARCH_QUERY_SYNTAX querySyntax)
HRESULT None None.GetDisplayUrl([out] WCHAR wszDocUrl[],[in] DWORD dwSize,[out] DWORD *pdwLength)
HRESULT None None.put_QueryKeywordLocale([in] LCID lcid)
HRESULT None None.get_DiacriticSensitivity([out None None,retval] BOOL *pfDiacriticSensitive)
HRESULT None None.put_QueryContentLocale([in] LCID lcid)
HRESULT None None.SetParameter([in] LPCWSTR pszName,[in] PROPVARIANT *pValue)
HRESULT None shell32.GetAttributesOf([in] UINT cidl,[in] PCUITEMID_CHILD_ARRAY *apidl,[in None None,out] SFGAOF *rgfInOut)
HRESULT None None.get_QueryWhereRestrictions([out None None,retval] LPWSTR *ppszRestrictions)
HRESULT None None.put_QueryMaxResults([in] LONG cMaxResults)
HRESULT None None.get_QueryWhereRestrictions([out None None,retval] LPWSTR *ppszRestrictions)
HRESULT None None.CreateIntegerLeaf([in] REFPROPERTYKEY propkey,[in] CONDITION_OPERATION cop,[in] INT32 lValue,[in] CONDITION_CREATION_OPTIONS cco,[in] REFIID riid,[out] void **ppv)
HRESULT None None.RemoteGetData([out] ULONG *pFirstPos,[out] ULONG *pLength,[out] LPWSTR *ppsz,[out] PROPVARIANT *pValue)
DWORD None None.HandleInComingCall([in] DWORD dwCallType,[in] HTASK htaskCaller,[in] DWORD dwTickCount,[in] LPINTERFACEINFO lpInterfaceInfo)
HRESULT None None.put_QuerySorting([in None None,unique] LPCWSTR pszSorting)
HRESULT None None.GetImpersonationSidBlobs([in] LPCWSTR pcwszURL,[out] DWORD *pcSidCount,[out] BLOB **ppSidBlobs)
HRESULT None None.put_QueryTermExpansion([in] SEARCH_TERM_EXPANSION expandTerms)
HRESULT None None.get_QuerySelectColumns([out None None,retval] LPWSTR *ppszSelectColumns)
HRESULT None None.RemoveScopeRule([in] LPCWSTR pszRule)
HRESULT None None.GetItemsChangedSink([in] ISearchNotifyInlineSite *pISearchNotifyInlineSite,[in] REFIID riid,[out] void *ppv,[out] GUID *pGUIDCatalogResetSignature,[out] GUID *pGUIDCheckPointSignature,[out] DWORD *pdwLastCheckPointNumber)
HRESULT None None.RevokeObjectBound([in] IUnknown *punk)
HRESULT None None.HasParentScopeRule([in] LPCWSTR pszURL,[out None None,retval] BOOL *pfHasParentRule)
HRESULT None None.get_ConnectionString([out None None,retval] LPWSTR *pwszConnectionString)
HRESULT None None.get_QuerySorting([out None None,retval] LPWSTR *ppszSorting)
HRESULT None None.put_QueryTermExpansion([in] SEARCH_TERM_EXPANSION expandTerms)
HRESULT None None.put_QueryTermExpansion([in] SEARCH_TERM_EXPANSION expandTerms)
HRESULT None None.NumberOfItemsToIndex([out] LONG *plIncrementalCount,[out] LONG *plNotificationQueue,[out] LONG *plHighPriorityQueue)
HRESULT None None.CreateTrueFalse([in] BOOL fValue,[in] CONDITION_CREATION_OPTIONS cco,[in] REFIID riid,[out] void **ppv)
HRESULT None None.GetRunningObjectTable([out] IRunningObjectTable **pprot)
HRESULT None None.Read([in] ULONG cProperties,[in] ITEMPROP *pPropBag,[out] VARIANT *pvarValue,[out] HRESULT *phrError)
HRESULT None None.put_QuerySelectColumns([in None None,unique] LPCWSTR pszSelectColumns)
HRESULT None None.RestateToString([in] ICondition *pCondition,[in] BOOL fUseEnglish,[out] LPWSTR *ppszQueryString)
HRESULT None None.GetSecurityProvider([out] CLSID *pSPClsid)
HRESULT None None.put_ConnectTimeout([in] DWORD dwConnectTimeout)
HRESULT None None.ReindexMatchingURLs([in] LPCWSTR pszPattern)
HRESULT None None.get_QueryKeywordLocale([out None None,retval] LCID *plcid)
HRESULT None None.GetParentScopeVersionId([in] LPCWSTR pszUrl,[out None None,retval] LONG *plScopeId)
HRESULT None None.Next([in] ULONG cConnections,[out] CONNECTDATA *rgcd,[out] ULONG *lpcFetched)
HRESULT None None.IncludedInCrawlScopeEx([in] LPCWSTR pszURL,[out] BOOL *pfIsIncluded,[out] CLUSION_REASON *pReason)
HRESULT None urlmon.OnStartBinding([in] DWORD dwReserved,[in] IBinding *pib)
HRESULT None None.GetPersistentItemsChangedSink([out None None,retval] ISearchPersistentItemsChangedSink **ppISearchPersistentItemsChangedSink)
HRESULT None urlmon.OnDataAvailable([in] DWORD grfBSCF,[in] DWORD dwSize,[in] FORMATETC *pformatetc,[in] STGMEDIUM *pstgmed)
HRESULT None None.CreateAccessor(DBACCESSORFLAGS dwAccessorFlags None,DBCOUNTITEM cBindings None,const DBBINDING rgBindings[],DBLENGTH cbRowSize None,HACCESSOR *phAccessor None,DBBINDSTATUS rgStatus[] None)
HRESULT None None.GetQuery([out] ICondition **ppQueryNode,[out] IEntity **ppMainType)
HRESULT None None.GetDisplayName([in] IBindCtx *pbc,[in] IMoniker *pmkToLeft,[out] LPOLESTR *ppszDisplayName)
HRESULT None None.put_ConnectTimeout([in] DWORD dwConnectTimeout)
HRESULT None None.GetHost([out] WCHAR wszHost[],[in] DWORD dwSize,[out] DWORD *pdwLength)
HRESULT None None.HasParentScopeRule([in] LPCWSTR pszURL,[out None None,retval] BOOL *pfHasParentRule)
HRESULT None None.JoinTransaction(IUnknown *punkTransactionCoord None,ISOLEVEL isoLevel None,ULONG isoFlags None,ITransactionOptions *pOtherOptions None)
HRESULT None None.GetProperties(const ULONG cPropertyIDSets,const DBPROPIDSET rgPropertyIDSets[],ULONG *pcPropertySets None,DBPROPSET **prgPropertySets None)
HRESULT None None.Init([in] TIMEOUT_INFO *pTimeoutInfo,[in] IProtocolHandlerSite *pProtocolHandlerSite,[in] PROXY_INFO *pProxyInfo)
HRESULT None None.GetCLSID([out] CLSID *pClsid)
HRESULT None wmp.get_type([out] WMPLibraryType *pwmplt)
HRESULT None None.put_QuerySorting([in None None,unique] LPCWSTR pszSorting)
HRESULT None None.PrioritizeMatchingURLs([in] LPCWSTR pszPattern,[in] PRIORITIZE_FLAGS dwPrioritizeFlags)
HRESULT None None.GetCrawlScopeManager([out None None,retval] ISearchCrawlScopeManager **ppCrawlScopeManager)
HRESULT None None.NumberOfTokens([out] ULONG *pCount)
HRESULT None None.ReindexMatchingURLs([in] LPCWSTR pszPattern)
HRESULT None None.GetDisplayUrl([out] WCHAR wszDocUrl[],[in] DWORD dwSize,[out] DWORD *pdwLength)
HRESULT None shell32.BindToStorage([in] PCUIDLIST_RELATIVE pidl,[in] IBindCtx *pbc,[in] REFIID riid,[out] void **ppvOut)
HRESULT None None.RemoteGetData([out] ULONG *pFirstPos,[out] ULONG *pLength,[out] LPWSTR *ppsz,[out] PROPVARIANT *pValue)
HRESULT None None.GetItemsChangedSink([in] ISearchNotifyInlineSite *pISearchNotifyInlineSite,[in] REFIID riid,[out] void *ppv,[out] GUID *pGUIDCatalogResetSignature,[out] GUID *pGUIDCheckPointSignature,[out] DWORD *pdwLastCheckPointNumber)
HRESULT None None.GetFileName([out] WCHAR wszFileName[],[in] DWORD dwSize,[out] DWORD *pdwLength)
HRESULT None None.get_QueryWhereRestrictions([out None None,retval] LPWSTR *ppszRestrictions)
HRESULT None None.IsSystemMoniker([out] DWORD *pdwMksys)
HRESULT None None.get_Name([out None None,retval] LPCWSTR *pszName)
HRESULT None None.InterfaceSupportsErrorInfo(REFIID riid None)
HRESULT None None.get_QueryMaxResults([out None None,retval] LONG *pcMaxResults)
HRESULT None None.OnRowChange(IRowset *pRowset None,DBCOUNTITEM cRows None,const HROW rghRows[],DBREASON eReason None,DBEVENTPHASE ePhase None,BOOL fCantDeny None)
HRESULT None None.NumberOfItemsToIndex([out] LONG *plIncrementalCount,[out] LONG *plNotificationQueue,[out] LONG *plHighPriorityQueue)
HRESULT None None.NumberOfItems([out None None,retval] LONG *plCount)
HRESULT None None.GetSecurityDescriptor([out] BYTE *pSD,[in] DWORD dwSize,[out] DWORD *pdwLength)
HRESULT None None.ReindexSearchRoot([in] LPCWSTR pszRootURL)
HRESULT None None.BindToStream([out] IStream **ppStream)
HRESULT None None.put_DiacriticSensitivity([in] BOOL fDiacriticSensitive)
HRESULT None None.put_DataTimeout([in] DWORD dwDataTimeout)
HRESULT None None.ComposeWith([in] IMoniker *pmkRight,[in] BOOL fOnlyIfNotGeneric,[out] IMoniker **ppmkComposite)
HRESULT None urlmon.GetBindInfo([out] DWORD *grfBINDF,[in None None,out] BINDINFO *pbindinfo)
HRESULT None None.put_DiacriticSensitivity([in] BOOL fDiacriticSensitive)
HRESULT None None.CreateDataSource(ULONG cPropertySets None,DBPROPSET rgPropertySets[] None,IUnknown *pUnkOuter None,REFIID riid None,IUnknown **ppSession None)
HRESULT None None.get_ConnectionString([out None None,retval] LPWSTR *pwszConnectionString)
HRESULT None wmp.get_status([out] WMPDeviceStatus *pwmpds)
HRESULT None None.GetBindings(HACCESSOR hAccessor None,DBACCESSORFLAGS *pdwAccessorFlags None,DBCOUNTITEM *pcBindings None,DBBINDING **prgBindings None)
HRESULT None None.GetHelpContext(DWORD *pdwHelpContext None)
HRESULT None None.ReleaseAccessor(HACCESSOR hAccessor None,DBREFCOUNT *pcRefCount None)
HRESULT None None.GetRowStatus(HCHAPTER hReserved None,DBCOUNTITEM cRows None,const HROW rghRows[],DBPENDINGSTATUS rgPendingStatus[] None)
HRESULT None None.get_ConnectTimeout([out None None,retval] DWORD *pdwConnectTimeout)
HRESULT None None.get_ConnectTimeout([out None None,retval] DWORD *pdwConnectTimeout)
HRESULT None None.CloseAccessor([in] IUrlAccessor *pAccessor)
HRESULT None None.GetLastModified([out] FILETIME *pftLastModified)
HRESULT None None.InsertRow(HCHAPTER hChapter None,HACCESSOR hAccessor None,void *pData None,HROW *phRow None)
HRESULT None None.IsRunning([in] IBindCtx *pbc,[in] IMoniker *pmkToLeft,[in] IMoniker *pmkNewlyRunning)
HRESULT None None.IsRunning([in] IBindCtx *pbc,[in] IMoniker *pmkToLeft,[in] IMoniker *pmkNewlyRunning)
void None wmp.DeviceSyncStateChange([in] IWMPSyncDevice *pDevice,[in] WMPSyncState NewState)
HRESULT None wmp.get_partnershipIndex([out] long *plIndex)
HRESULT None wmp.get_syncState([out] WMPSyncState *pwmpss)
virtual STDMETHODIMP None.AddErrorRecord(HRESULT hrErr None,WCHAR * pwszDescription)
HRESULT None None.DataConvert(DBTYPE wSrcType None,DBTYPE wDstType None,DBLENGTH cbSrcLength None,DBLENGTH * pcbDstLength,void * pSrc,void * pDst,DBLENGTH cbDstMaxLength None,DBSTATUS dbsSrcStatus None,DBSTATUS * pdbsStatus,BYTE bPrecision None,BYTE bScale None,DBDATACONVERT dwFlags None)
HRESULT None None.GetConversionSize(DBTYPE wSrcType None,DBTYPE wDstType None,DBLENGTH * pcbSrcLength,DBLENGTH * pcbDstLength,void * pSrc)
HRESULT None None.GetErrorDescription(HRESULT hrError None,DWORD dwLookupID None,DISPPARAMS *pdispparams None,LCID lcid None,BSTR *pbstrSource None,BSTR *pbstrDescription None)
HRESULT None None.CanConvert(DBTYPE wSrcType None,DBTYPE wDstType None)
HRESULT None wmp.get_sourceURL([out] BSTR *pbstrSourceURL)
HRESULT None None.ReleaseErrors(const DWORD dwDynamicErrorID)
HRESULT None None.GetColumns(DBORDINAL cColumns None,DBCOLUMNACCESS rgColumns[ ])
HRESULT None None.CreateCommand(IUnknown *pUnkOuter None,REFIID riid None,IUnknown **ppCommand None)
HRESULT None None.CreateCommand(IUnknown *pUnkOuter None,REFIID riid None,IUnknown **ppCommand None)
HRESULT None wmp.get_sourceURL([out] BSTR *pbstrSourceURL)
HRESULT None None.QueryBlanket([in] IUnknown *pProxy,[out] DWORD *pAuthnSvc,[out] DWORD *pAuthzSvc,[out] OLECHAR **pServerPrincName,[out] DWORD *pAuthnLevel,[out] DWORD *pImpLevel,[out] void **pAuthInfo,[out] DWORD *pCapabilites)
HRESULT None wmp.get_sourceURL([out] BSTR *pbstrSourceURL)
HRESULT None None.GetLastVisibleData(HROW hRow None,HACCESSOR hAccessor None,void *pData None)
HRESULT None None.GetBasicErrorInfo(ULONG ulRecordNum None,ERRORINFO *pErrorInfo None)
HRESULT None None.CopyProxy([in] IUnknown *pProxy,[out] IUnknown **ppCopy)
HRESULT None wmp.get_attributeCount([out] long *plCount)
HRESULT None None.GetParameterInfo(DB_UPARAMS *pcParams None,DBPARAMINFO **prgParamInfo None,OLECHAR **ppNamesBuffer None)
HRESULT None None.AddRefChapter(HCHAPTER hChapter None,DBREFCOUNT *pcRefCount None)
HRESULT None None.GetCurrentCommand(DBID **ppCommandID None)
HRESULT None wmp.setItemInfo([in] BSTR bstrItemName,[in] BSTR bstrVal)
HRESULT None None.StartTransaction(ISOLEVEL isoLevel None,ULONG isoFlags None,ITransactionOptions *pOtherOptions None,ULONG *pulTransactionLevel None)
HRESULT None None.SaveCommand(DBID *pCommandID None,DWORD dwFlags None)
HRESULT None None.GetSortOrder(DBORDINAL *pcColumns None,DBORDINAL *prgColumns[] None,DBSORT *prgOrders[] None)
HRESULT None None.GetStatus(HCHAPTER hChapter None,ULONG ulOperation None,DBCOUNTITEM *pulProgress None,DBCOUNTITEM *pulProgressMax None,DBASYNCHPHASE* peAsynchPhase None,LPOLESTR *ppwszStatusText None)
HRESULT None None.GetCustomErrorObject(ULONG ulRecordNum None,REFIID riid None,IUnknown **ppObject None)
HRESULT None None.GetTransactionObject(ULONG ulTransactionLevel None,ITransaction **ppTransactionObject None)
HRESULT None wmp.isMemberOf([in] IWMPPlaylist *pPlaylist,[out] VARIANT_BOOL *pvarfIsMemberOf)
HRESULT None wmp.put_name([in] BSTR bstrName)
HRESULT None None.GetDBSession(REFIID riid None,IUnknown **ppSession None)
HRESULT None None.IsSameRow(HROW hThisRow None,HROW hThatRow None)
HRESULT None wmp.isReadOnlyItem([in] BSTR bstrItemName,[out] VARIANT_BOOL *pvarfIsReadOnly)
HRESULT None None.GetApproximatePosition(HCHAPTER hChapter None,DBBKMARK cbBookmark None,const BYTE *pBookmark,DBCOUNTITEM *pulPosition None,DBCOUNTITEM *pcRows None)
HRESULT None None.CreateIndex(DBID *pTableID None,DBID *pIndexID None,DBORDINAL cIndexColumnDescs None,const DBINDEXCOLUMNDESC rgIndexColumnDescs[],ULONG cPropertySets None,DBPROPSET rgPropertySets[] None,DBID **ppIndexID None)
HRESULT None None.GetRowsAtRatio(HWATCHREGION hReserved1 None,HCHAPTER hChapter None,DBCOUNTITEM ulNumerator None,DBCOUNTITEM ulDenominator None,DBROWCOUNT cRows None,DBCOUNTITEM *pcRowsObtained None,HROW **prghRows None)
HRESULT None wmp.getAttributeName([in] long lIndex,[out] BSTR *pbstrItemName)
HRESULT None None.DropIndex(DBID *pTableID None,DBID *pIndexID None)
HRESULT None None.SetSortOrder(DBORDINAL cColumns None,const DBORDINAL rgColumns[],const DBSORT rgOrders[])
HRESULT None wmp.get_isIdentical([in] IWMPMedia *pIWMPMedia,[out] VARIANT_BOOL *pvbool)
HRESULT None None.GetParameterInfo(DB_UPARAMS *pcParams None,DBPARAMINFO **prgParamInfo None,OLECHAR **ppNamesBuffer None)
HRESULT None None.CopyProxy([in] IUnknown *pProxy,[out] IUnknown **ppCopy)
HRESULT None None.GetSchemas(ULONG *pcSchemas None,GUID **prgSchemas None,ULONG **prgRestrictionSupport None)
HRESULT None None.AddConstraint(DBID *pTableID None,DBCONSTRAINTDESC *pConstraintDesc None)
HRESULT None None.AlterColumn(DBID *pTableID None,DBID *pColumnID None,DBCOLUMNDESCFLAGS dwColumnDescFlags None,DBCOLUMNDESC *pColumnDesc None)
HRESULT None None.DropColumn(DBID *pTableID None,DBID *pColumnID None)
HRESULT None None.OpenRowset(IUnknown *pUnkOuter None,DBID *pTableID None,DBID *pIndexID None,REFIID riid None,ULONG cPropertySets None,DBPROPSET rgPropertySets[ ],IUnknown **ppRowset None)
HRESULT None None.ReleaseChapter(HCHAPTER hChapter None,DBREFCOUNT *pcRefCount None)
HRESULT None None.GetOptionsObject(ITransactionOptions **ppOptions None)
HRESULT None None.GetURLFromHROW(HROW hRow None,LPOLESTR *ppwszURL None)
HRESULT None None.CreateIndex(DBID *pTableID None,DBID *pIndexID None,DBORDINAL cIndexColumnDescs None,const DBINDEXCOLUMNDESC rgIndexColumnDescs[],ULONG cPropertySets None,DBPROPSET rgPropertySets[] None,DBID **ppIndexID None)
HRESULT None wmp.get_durationString([out] BSTR *pbstrDuration)
HRESULT None None.GetRowsAtRatio(HWATCHREGION hReserved1 None,HCHAPTER hChapter None,DBCOUNTITEM ulNumerator None,DBCOUNTITEM ulDenominator None,DBROWCOUNT cRows None,DBCOUNTITEM *pcRowsObtained None,HROW **prghRows None)
HRESULT None None.SaveCommand(DBID *pCommandID None,DWORD dwFlags None)
HRESULT None None.Move(DBCOUNTITEM cRows None,LPCOLESTR rgpwszSourceURLs[ ],LPCOLESTR rgpwszDestURLs[ ],DBMOVEFLAGS dwMoveFlags None,IAuthenticate *pAuthenticate None,DBSTATUS rgdwStatus[ ],LPOLESTR rgpwszNewURLs[ ],OLECHAR **ppStringsBuffer None)
HRESULT None wmp.get_imageSourceHeight([out] long *pHeight)
HRESULT None None.GetRecordCount(ULONG * pcRecords)
HRESULT None wmp.getByName([in] BSTR bstrName,[out] IWMPPlaylistArray **ppPlaylistArray)
HRESULT None None.Move(DBCOUNTITEM cRows None,LPCOLESTR rgpwszSourceURLs[ ],LPCOLESTR rgpwszDestURLs[ ],DBMOVEFLAGS dwMoveFlags None,IAuthenticate *pAuthenticate None,DBSTATUS rgdwStatus[ ],LPOLESTR rgpwszNewURLs[ ],OLECHAR **ppStringsBuffer None)
HRESULT None wmp.get_imageSourceWidth([out] long *pWidth)
HRESULT None None.SetOptions(XACTOPT *pOptions None)
HRESULT None None.Move(DBCOUNTITEM cRows None,LPCOLESTR rgpwszSourceURLs[ ],LPCOLESTR rgpwszDestURLs[ ],DBMOVEFLAGS dwMoveFlags None,IAuthenticate *pAuthenticate None,DBSTATUS rgdwStatus[ ],LPOLESTR rgpwszNewURLs[ ],OLECHAR **ppStringsBuffer None)
HRESULT None None.SetCommandText(REFGUID rguidDialect None,LPCOLESTR pwszCommand None)
HRESULT None None.Move(DBCOUNTITEM cRows None,LPCOLESTR rgpwszSourceURLs[ ],LPCOLESTR rgpwszDestURLs[ ],DBMOVEFLAGS dwMoveFlags None,IAuthenticate *pAuthenticate None,DBSTATUS rgdwStatus[ ],LPOLESTR rgpwszNewURLs[ ],OLECHAR **ppStringsBuffer None)
HRESULT None None.PromptDataSource(IUnknown * pUnkOuter,HWND hWndParent None,DBPROMPTOPTIONS dwPromptOptions None,ULONG cSourceTypeFilter None,DBSOURCETYPE * rgSourceTypeFilter,LPCOLESTR pwszszzProviderFilter None,REFIID riid None,IUnknown ** ppDataSource)
HRESULT None None.Bind(IUnknown * pUnkOuter,LPCOLESTR pwszURL None,DBBINDURLFLAG dwBindURLFlags None,REFGUID rguid None,REFIID riid None,IAuthenticate * pAuthenticate,DBIMPLICITSESSION * pImplSession,DBBINDURLSTATUS * pdwBindStatus,IUnknown ** ppUnk)
HRESULT None None.SetURLMapping(LPCOLESTR pwszURL None,DB_DWRESERVE dwReserved None,REFCLSID rclsidProvider None)
HRESULT None wmp.getItemInfo([in] BSTR bstrItemName,[out] BSTR *pbstrVal)
HRESULT None None.GetErrorInfo(ULONG ulRecordNum None,LCID lcid None,IErrorInfo **ppErrorInfo None)
HRESULT None wmp.get_markerCount([out] long *pMarkerCount)
HRESULT None wmp.getMarkerTime([in] long MarkerNum,[out] double *pMarkerTime)
HRESULT None wmp.get_imageSourceWidth([out] long *pWidth)
HRESULT None None.PromptDataSource(IUnknown * pUnkOuter,HWND hWndParent None,DBPROMPTOPTIONS dwPromptOptions None,ULONG cSourceTypeFilter None,DBSOURCETYPE * rgSourceTypeFilter,LPCOLESTR pwszszzProviderFilter None,REFIID riid None,IUnknown ** ppDataSource)
HRESULT None wmp.getMarkerName([in] long MarkerNum,[out] BSTR *pbstrMarkerName)
HRESULT None wmp.getMarkerName([in] long MarkerNum,[out] BSTR *pbstrMarkerName)
HRESULT None None.Bind(IUnknown * pUnkOuter,LPCOLESTR pwszURL None,DBBINDURLFLAG dwBindURLFlags None,REFGUID rguid None,REFIID riid None,IAuthenticate * pAuthenticate,DBIMPLICITSESSION * pImplSession,DBBINDURLSTATUS * pdwBindStatus,IUnknown ** ppUnk)
HRESULT None wmp.getByName([in] BSTR bstrName,[out] IWMPPlaylistArray **ppPlaylistArray)
HRESULT None wmp.getItemInfo([in] BSTR bstrItemName,[out] BSTR *pbstrVal)
HRESULT None wmp.get_duration([out] double *pDuration)
HRESULT None None.PromptDataSource(IUnknown * pUnkOuter,HWND hWndParent None,DBPROMPTOPTIONS dwPromptOptions None,ULONG cSourceTypeFilter None,DBSOURCETYPE * rgSourceTypeFilter,LPCOLESTR pwszszzProviderFilter None,REFIID riid None,IUnknown ** ppDataSource)
HRESULT None wmp.getItemInfo([in] BSTR bstrItemName,[out] BSTR *pbstrVal)
HRESULT None None.CreateTableWithConstraints(IUnknown *pUnkOuter None,DBID *pTableID None,DBORDINAL cColumnDescs None,const DBCOLUMNDESC rgColumnDescs[],ULONG cConstraintDescs None,DBCONSTRAINTDESC rgConstraintDescs[] None,REFIID riid None,ULONG cPropertySets None,DBPROPSET rgPropertySets[] None,DBID **ppTableID None,IUnknown **ppRowset None)
HRESULT None None.GetErrorParameters(ULONG ulRecordNum None,DISPPARAMS * pdispparams)
HRESULT None wmp.getMarkerName([in] long MarkerNum,[out] BSTR *pbstrMarkerName)
HRESULT None wmp.getItemInfo([in] BSTR bstrItemName,[out] BSTR *pbstrVal)
HRESULT None None.GetRowsAt(HWATCHREGION hReserved1 None,HCHAPTER hChapter None,DBBKMARK cbBookmark None,const BYTE *pBookmark,DBROWOFFSET lRowsOffset None,DBROWCOUNT cRows None,DBCOUNTITEM *pcRowsObtained None,HROW **prghRows None)
HRESULT None None.SetCommandStream(REFIID riid None,REFGUID rguidDialect None,IUnknown *pCommandStream None)
HRESULT None None.GetData(HROW hRow None,HACCESSOR hAccessor None,void *pData None)
HRESULT None wmp.getMarkerTime([in] long MarkerNum,[out] double *pMarkerTime)
HRESULT None wmp.get_ripProgress([out] long *plProgress)
HRESULT None None.UnregisterProvider(LPCOLESTR pwszURL None,DB_DWRESERVE dwReserved None,REFCLSID rclsidProvider None)
HRESULT None wmp.get_name([out] BSTR *pbstrName)
HRESULT None wmp.isDeleted([in] IWMPPlaylist *pItem,[out] VARIANT_BOOL *pvarfIsDeleted)
HRESULT None wmp.getItemInfoByAtom([in] long lAtom,[out] BSTR *pbstrVal)
HRESULT None wmp.getItemInfo([in] BSTR bstrItemName,[out] BSTR *pbstrVal)
HRESULT None wmp.get_burnFormat([out] WMPBurnFormat *pwmpbf)
HRESULT None None.Hash(HCHAPTER hChapter None,DBBKMARK cBookmarks None,const DBBKMARK rgcbBookmarks[],const BYTE *rgpBookmarks[],DBHASHVALUE rgHashedValues[] None,DBROWSTATUS rgBookmarkStatus[] None)
HRESULT None None.GetRowsAt(HWATCHREGION hReserved1 None,HCHAPTER hChapter None,DBBKMARK cbBookmark None,const BYTE *pBookmark,DBROWOFFSET lRowsOffset None,DBROWCOUNT cRows None,DBCOUNTITEM *pcRowsObtained None,HROW **prghRows None)
HRESULT None None.GetMute([out] BOOL *pbMute)
HRESULT None wmp.get_friendlyName([out] BSTR *pbstrName)
HRESULT None None.ReleaseRows(DBCOUNTITEM cRows None,const HROW rghRows[],DBROWOPTIONS rgRowOptions[] None,DBREFCOUNT rgRefCounts[] None,DBROWSTATUS rgRowStatus[] None)
HRESULT None wmp.get_name([out] BSTR *pbstrName)
HRESULT None None.SetURLMapping(LPCOLESTR pwszURL None,DB_DWRESERVE dwReserved None,REFCLSID rclsidProvider None)
HRESULT None None.PromptDataSource(IUnknown * pUnkOuter,HWND hWndParent None,DBPROMPTOPTIONS dwPromptOptions None,ULONG cSourceTypeFilter None,DBSOURCETYPE * rgSourceTypeFilter,LPCOLESTR pwszszzProviderFilter None,REFIID riid None,IUnknown ** ppDataSource)
HRESULT None wmp.get_count([out] long *plCount)
HRESULT None wmp.get_count([out] long *plCount)
HRESULT None None.GetChannelVolume([in] UINT32 dwIndex,[out] float *pfLevel)
HRESULT None None.PromptDataSource(IUnknown * pUnkOuter,HWND hWndParent None,DBPROMPTOPTIONS dwPromptOptions None,ULONG cSourceTypeFilter None,DBSOURCETYPE * rgSourceTypeFilter,LPCOLESTR pwszszzProviderFilter None,REFIID riid None,IUnknown ** ppDataSource)
BOOL None None.IsDigitalEndpoint(IMMDevice *pDevice None)
HRESULT None wmp.get_baseURL([out] BSTR *pbstrBaseURL)
HRESULT None None.Seek(HACCESSOR hAccessor None,DBORDINAL cKeyValues None,void *pData None,DBSEEK dwSeekOptions None)
HRESULT None None.CreateSessionManager(IAudioSessionManager2** ppSessionManager None)
HRESULT None None.SetCommandStream(REFIID riid None,REFGUID rguidDialect None,IUnknown *pCommandStream None)
HRESULT None None.AddErrorRecord(ERRORINFO *pErrorInfo None,DWORD dwLookupID None,DISPPARAMS *pdispparams None,IUnknown *punkCustomError None,DWORD dwDynamicErrorID None)
HRESULT None wmp.setMode([in] BSTR bstrMode,[in] VARIANT_BOOL varfMode)
HRESULT None wmp.get_errorCount([out] long *plNumErrors)
HRESULT None wmp.playItem([in] IWMPMedia *pIWMPMedia)
HRESULT None wmp.put_defaultFrame([in] BSTR bstrDefaultFrame)
HRESULT None wmp.get_progress([out] long *plProgress)
HRESULT None None.Activate([in] REFIID iid,[in] DWORD dwClsCtx,[in] PROPVARIANT *pActivationParams,[out] void **ppInterface)
HRESULT None wmp.put_playCount([in] long lCount)
HRESULT None wmp.GraphCreationPreRender([in] IUnknown *pFilterGraph,[in] IUnknown *pReserved)
HRESULT None wmp.getItemInfo([in] BSTR bstrItem,[out] BSTR *pbstrVal)
HRESULT None wmp.put_currentItem([in] IWMPMedia *pIWMPMedia)
HRESULT None wmp.get_currentPositionTimecode([out] BSTR *bstrTimecode)
HRESULT None wmp.get_invokeURLs([out] VARIANT_BOOL *pfInvokeURLs)
HRESULT None wmp.put_uiMode([in] BSTR bstrMode)
HRESULT None wmp.getAttributeCountByType([in] long lCollectionIndex,[in] BSTR bstrType,[in] BSTR bstrLanguage,[out] long *plCount)
void None wmp.MediaCollectionAttributeStringRemoved([in] BSTR bstrAttribName,[in] BSTR bstrAttribVal)
HRESULT None wmp.getItemInfo([in] BSTR bstrItemName,[out] BSTR *pbstrVal)
HRESULT None wmp.get_playCount([out] long *plCount)
HRESULT None wmp.get_defaultFrame([out] BSTR *pbstrDefaultFrame)
HRESULT None wmp.remove([in] IWMPPlaylist *pItem)
HRESULT None None.GetLocalId([out] UINT *pnId)
HRESULT None wmp.put_URL([in] BSTR bstrURL)
HRESULT None None.GetSelection([out] UINT *pnIdSelected)
HRESULT None wmp.get_enableContextMenu([out] VARIANT_BOOL *pbEnableContextMenu)
HRESULT None wmp.get_balance([out] long *plBalance)
HRESULT None None.GetCurrentPadding([out] UINT32 *pNumPaddingFrames)
HRESULT None wmp.get_deviceId([out] BSTR *pbstrDeviceId)
HRESULT None None.EnumSessions(IAudioSessionManager2* pSessionManager None)
HRESULT None wmp.get_fullScreen([out] VARIANT_BOOL *pbFullScreen)
HRESULT None wmp.get_status([out] BSTR *pbstrStatus)
HRESULT None wmp.isIdentical([in] IWMPSyncDevice *pDevice,[out] VARIANT_BOOL *pvbool)
HRESULT None wmp.get_isAvailable([in] BSTR bstrItem,[out] VARIANT_BOOL *pIsAvailable)
HRESULT None wmp.getAudioLanguageDescription([in] long lIndex,[out] BSTR *pbstrLangDesc)
HRESULT None wmp.get_deviceName([out] BSTR *pbstrName)
HRESULT None wmp.get_connected([out] VARIANT_BOOL *pvbConnected)
HRESULT None None.GetName([out] LPWSTR *ppwstrName)
HRESULT None wmp.get_burnFormat([out] WMPBurnFormat *pwmpbf)
HRESULT None wmp.allowTranscode([out] VARIANT_BOOL *pvarfAllow)
HRESULT None wmp.getAll([out] IWMPPlaylistArray **ppPlaylistArray)
HRESULT None wmp.get_enabled([out] VARIANT_BOOL *pbEnabled)
HRESULT None wmp.get_scannedFilesCount([out] long *plCount)
HRESULT None wmp.put_currentMarker([in] long lMarker)
HRESULT None None.GetChannelVolumeLevelScalar([in] UINT nChannel,[out] float *pfLevel)
HRESULT None wmp.get_currentAudioLanguage([out] long *plLangID)
HRESULT None wmp.put_SAMIStyle([in] BSTR bstrSAMIStyle)
HRESULT None None.GetId([out] LPWSTR *ppstrId)
HRESULT None None.GetAudioObjectType([out] AudioObjectType *audioObjectType)
HRESULT None None.GetCount([out] UINT *pCount)
HRESULT None wmp.get_isAvailable([in] BSTR bstrItem,[out] VARIANT_BOOL *pIsAvailable)
HRESULT None wmp.getMode([in] BSTR bstrMode,[out] VARIANT_BOOL *pvarfMode)
HRESULT None None.GetChannelVolumeLevel([in] UINT nChannel,[out] float *pfLevelDB)
HRESULT None None.RegisterDuckNotification(LPCWSTR SessionID None,IAudioVolumeDuckNotification *duckNotification None)
void None wmp.MarkerHit([in] long MarkerNum)
void None wmp.MediaCollectionAttributeStringAdded([in] BSTR bstrAttribName,[in] BSTR bstrAttribVal)
HRESULT None wmp.get_name([out] BSTR *pbstrName)
void None wmp.PlaylistCollectionPlaylistRemoved([in] BSTR bstrPlaylistName)
HRESULT None wmp.get_count([out] long *plCount)
void None wmp.LibraryConnect([in] IWMPLibrary *pLibrary)
void None wmp.MediaCollectionMediaAdded([in] IDispatch *pdispMedia)
HRESULT None None.GetDevicePeriod([out] REFERENCE_TIME *phnsDefaultDevicePeriod,[out] REFERENCE_TIME *phnsMinimumDevicePeriod)
HRESULT None None.WriteNextMetadataCommand([in] BYTE commandID,[in] VOID *valueBuffer,[in] UINT32 valueBufferLength)
HRESULT None wmp.getLibraryByType([in] WMPLibraryType wmplt,[in] long lIndex,[out] IWMPLibrary **ppIWMPLibrary)
HRESULT None None.GetSubunitCount([out] UINT *pCount)
HRESULT None wmp.put_balance([in] long lBalance)
HRESULT None wmp.getByGenre([in] BSTR bstrGenre,[out] IWMPPlaylist **ppMediaItems)
void None wmp.ScriptCommand([in] BSTR scType,[in] BSTR Param)
HRESULT None None.QueryHardwareSupport([out] DWORD *pdwHardwareSupportMask)
HRESULT None wmp.createPartnership([out] VARIANT_BOOL vbShowUI)
HRESULT None wmp.getMediaAtom([in] BSTR bstrItemName,[out] long *plAtom)
HRESULT None wmp.get_defaultFrame([out] BSTR *pbstrDefaultFrame)
HRESULT None wmp.get_SAMILang([out] BSTR *pbstrSAMILang)
HRESULT None None.SetPosition([in] float x,[in] float y,[in] float z)
HRESULT None None.DeleteRows(HCHAPTER hChapter None,DBCOUNTITEM cRows None,const HROW rghRows[],DBROWSTATUS rgRowStatus[] None)
void None wmp.DomainChange([in] BSTR strDomain)
HRESULT None wmp.get_controls([out] IWMPControls **ppControl)
void None wmp.KeyUp([in] short nKeyCode,[in] short nShiftState)
HRESULT None wmp.get_errorCode([out] long *phr)
HRESULT None wmp.get_burnPlaylist([out] IWMPPlaylist **ppPlaylist)
HRESULT None None.EnumSessions(IAudioSessionManager2* pSessionManager None)
HRESULT None wmp.put_currentAudioLanguageIndex([in] long lIndex)
HRESULT None None.GetJackSinkInformation([out] KSJACK_SINK_INFORMATION *pJackSinkInformation)
HRESULT None None.SetMasterVolumeLevelScalar([in] float fLevel,[in] LPCGUID pguidEventContext)
HRESULT None wmp.get_currentMarker([out] long *plMarker)
HRESULT None None.GetState([out] DWORD *pdwState)
HRESULT None wmp.get_autoStart([out] VARIANT_BOOL *pfAutoStart)
HRESULT None wmp.get_progress([out] long *plProgress)
HRESULT None wmp.get_uiMode([out] BSTR *pbstrMode)
HRESULT None None.GetChannelCount([out] UINT *pnChannelCount)
HRESULT None wmp.put_currentAudioLanguage([in] long lLangID)
void None wmp.LibraryDisconnect([in] IWMPLibrary *pLibrary)
HRESULT None None.ActivateSpatialAudioObjectForMetadataItems([in] AudioObjectType type,[out] ISpatialAudioObjectForMetadataItems **audioObject)
BOOL None winmm.PlaySound(LPCTSTR pszSound None,HMODULE hmod None,DWORD fdwSound None)
BOOL None winmm.PlaySoundW(LPCTSTR pszSound None,HMODULE hmod None,DWORD fdwSound None)
BOOL None winmm.PlaySoundA(LPCTSTR pszSound None,HMODULE hmod None,DWORD fdwSound None)
HRESULT None None.GetVolumeStepInfo([out] UINT *pnStep,[out] UINT *pnStepCount)
HRESULT None wmp.get_inProcOnly([in] BOOL *pfInProc)
HRESULT None wmp.get_item([in] long dwIndex,[out] IWMPErrorItem **ppErrorItem)
HRESULT None None.EnumPartsIncoming([out] IPartsList **ppParts)
HRESULT None wmp.get_rate([out] double *pdRate)
void None wmp.CurrentItemChange([in] IDispatch *pdispMedia)
HRESULT None wmp.get_currentItem([out] IWMPMedia **ppIWMPMedia)
HRESULT None None.VolumeStepUp([in] LPCGUID pguidEventContext)
HRESULT None wmp.put_rate([in] double dRate)
HRESULT None wmp.getItemInfo([in] long lCollectionIndex,[in] BSTR bstrItemName,[out] BSTR *pbstrValue)
HRESULT None wmp.put_playCount([in] long lCount)
HRESULT None wmp.put_friendlyName([in] BSTR bstrName)
HRESULT None wmp.get_captioningId([out] BSTR *pbstrCaptioningID)
HRESULT None wmp.GetServiceType([out] BSTR *pbstrType)
HRESULT None wmp.GetCustomUIMode([out] BSTR *pbstrFile)
void None wmp.OpenStateChange([in] long NewState)
void None wmp.MouseMove([in] short nButton,[in] short nShiftState,[in] long fX,[in] long fY)
void None wmp.MouseDown([in] short nButton,[in] short nShiftState,[in] long fX,[in] long fY)
void None None.EndOfStream([in] long Result)
void None None.DurationUnitChange([in] long NewDurationUnit)
void None wmp.KeyDown([in] short nKeyCode,[in] short nShiftState)
void None wmp.PlaylistChange([in] IDispatch *Playlist,[in] WMPPlaylistChangeEventType change)
HRESULT None wmp.put_enabled([in] VARIANT_BOOL bEnabled)
HRESULT None wmp.get_volume([out] long *plVolume)
HRESULT None None.GetControlInterface([in] UINT nIndex,[out] IControlInterface **ppFunction)
HRESULT None wmp.put_enableErrorDialogs([in] VARIANT_BOOL fEnableErrorDialogs)
HRESULT None None.GetMasterVolumeLevel([out] float *pfLevelDB)
HRESULT None None.OpenPropertyStore([in] DWORD stgmAccess,[out] IPropertyStore **ppProperties)
HRESULT None wmp.get_currentPlaylist([out] IWMPPlaylist **ppPL)
void None wmp.KeyPress([in] short nKeyAscii)
HRESULT None wmp.get_isOnline([out] VARIANT_BOOL *pfOnline)
HRESULT None None.GetBuffer([out] BYTE **buffer,[out] UINT32 *bufferLength)
HRESULT None None.SetLevel([in] UINT nChannel,[in] float fLevelDB,[in] LPCGUID pguidEventContext)
HRESULT None wmp.get_currentAudioLanguageIndex([out] long *plIndex)
HRESULT None wmp.get_error([out] IWMPError **ppError)
HRESULT None wmp.get_currentPlaylist([out] IWMPPlaylist **ppPL)
void None wmp.Buffering([in] VARIANT_BOOL Start)
HRESULT None wmp.get_volume([out] long *plVolume)
HRESULT None wmp.launchURL([in] BSTR bstrURL)
void None None.PlaylistCollectionPlaylistSetAsDeleted([in] BSTR bstrPlaylistName,[in] VARIANT_BOOL varfIsDeleted)
void None wmp.DoubleClick([in] short nButton,[in] short nShiftState,[in] long fX,[in] long fY)
HRESULT None None.GetSelection([out] UINT *pnIdSelected)
HRESULT None None.Activate([in] DWORD dwClsContext,[in] REFIID refiid,[out] void **ppvObject)
BOOL None None.DSEnumCallback(LPGUID lpGuid None,LPCSTR lpcstrDescription None,LPCSTR lpcstrModule None,LPVOID lpContext None)
void None wmp.CdromMediaChange([in] long CdromNum)
HRESULT None None.OnChannelVolumeChanged([in] DWORD ChannelCount,[in] float NewChannelVolumeArray[],[in] DWORD ChangedChannel,[in] LPCGUID EventContext)
void None wmp.MediaChange([in] IDispatch *pItem)
void None wmp.KeyDown([in] short nKeyCode,[in] short nShiftState)
void None wmp.PlaylistCollectionPlaylistAdded([in] BSTR bstrPlaylistName)
HRESULT None wmp.put_autoStart([in] VARIANT_BOOL fAutoStart)
HRESULT None wmp.put_fullScreen([in] VARIANT_BOOL bFullScreen)
void None wmp.ModeChange([in] BSTR ModeName,[in] VARIANT_BOOL NewValue)
HRESULT None None.SetChannelConfig([in] DWORD dwConfig,[in] LPCGUID pguidEventContext)
HRESULT None None.KsEvent([in None None,optional] PKSEVENT Event,[in] ULONG EventLength,[in None None,out] LPVOID EventData,[in] ULONG DataLength,[in None None,out] ULONG *BytesReturned)
HRESULT None wmp.getByGenre([in] BSTR bstrGenre,[out] IWMPPlaylist **ppMediaItems)
HRESULT None None.GetPart([in] UINT nIndex,[out] IPart **ppPart)
HRESULT None wmp.get_currentPositionString([out] BSTR *pbstrCurrentPosition)
HRESULT None None.SendEndOfStream([in] UINT32 frameCount)
HRESULT None wmp.put_currentMedia([in] IWMPMedia *pMedia)
HRESULT None wmp.get_mute([out] VARIANT_BOOL *pfMute)
HRESULT None wmp.get_mediaCollection([out] IWMPMediaCollection **ppMediaCollection)
void None None.Disconnect([in] long Result)
HRESULT None None.GetAudioSessionControl([in] LPCGUID AudioSessionGuid,[in] DWORD StreamFlags,[out] IAudioSessionControl **SessionControl)
HRESULT None None.RegisterControlChangeCallback([in] REFGUID riid,[in] IControlChangeNotify *pNotify)
HRESULT None wmp.get_mute([out] VARIANT_BOOL *pfMute)
HRESULT None wmp.put_currentPlaylist([in] IWMPPlaylist *pPL)
HRESULT None None.GetConnectedTo([out] IConnector **ppConTo)
void None wmp.CdromRipMediaError([in] IWMPCdromRip *pCdromRip,[in] IDispatch *pMedia)
HRESULT None wmp.appendItem([in] IWMPMedia *pIWMPMedia)
void None wmp.CurrentPlaylistItemAvailable([in] BSTR bstrItemName)
HRESULT None wmp.remove([in] IWMPMedia *pItem,[in] VARIANT_BOOL varfDeleteFile)
HRESULT None wmp.remove([in] long lIndex)
HRESULT None None.VolumeStepDown([in] LPCGUID pguidEventContext)
HRESULT None wmp.get_playCount([out] long *plCount)
HRESULT None None.SetEnabled([in] BOOL bEnable,[in] LPCGUID pguidEventContext)
HRESULT None wmp.get_audioLanguageCount([out] long *plCount)
HRESULT None wmp.put_autoStart([in] VARIANT_BOOL fAutoStart)
HRESULT None wmp.put_audioOutputDevice(BSTR bstrOutputDevice None)
HRESULT None None.UnregisterControlChangeCallback([in] IControlChangeNotify *pNotify)
HRESULT None wmp.get_domain([out] BSTR *strDomain)
HRESULT None wmp.isIdentical([in] IWMPLibrary *pIWMPLibrary,[out] VARIANT_BOOL *pvbool)
HRESULT None wmp.get_enableErrorDialogs([out] VARIANT_BOOL *pfEnableErrorDialogs)
HRESULT None wmp.put_mute([in] VARIANT_BOOL fMute)
void None wmp.DeviceStatusChange([in] IWMPSyncDevice *pDevice,[in] WMPDeviceStatus NewStatus)
HRESULT None wmp.getStringCollectionByQuery([in] BSTR bstrAttribute,[in] IWMPQuery *pQuery,[in] BSTR bstrMediaType,[in] BSTR bstrSortAttribute,[in] VARIANT_BOOL fSortAscending,[out] IWMPStringCollection **ppStringCollection)
HRESULT None wmp.get_playState([out] WMPPlayState *pwmpps)
HRESULT None wmp.put_autoStart([in] VARIANT_BOOL fAutoStart)
HRESULT None wmp.put_mute([in] VARIANT_BOOL fMute)
HRESULT None wmp.getByName([in] BSTR bstrName,[out] IWMPPlaylist **ppMediaItems)
HRESULT None wmp.getLanguageName([in] long lLangID,[out] BSTR *pbstrLangName)
HRESULT None wmp.isAvailable([in] BSTR bstrItem,[out] VARIANT_BOOL *pIsAvailable)
HRESULT None wmp.get_enableErrorDialogs([out] VARIANT_BOOL *pfEnableErrorDialogs)
HRESULT None wmp.getAll([out] IWMPPlaylist **ppMediaItems)
HRESULT None wmp.setBackgroundProcessingPriority([in] BSTR bstrPriority)
HRESULT None None.UnregisterSessionNotification(IAudioSessionNotification *SessionNotification None)
HRESULT None wmp.get_currentFolder([out] BSTR *pbstrFolder)
HRESULT None wmp.get_versionInfo([out] BSTR *pbstrVersionInfo)
void None wmp.CdromBurnMediaError([in] IWMPCdromBurn *pCdromBurn,[in] IDispatch *pMedia)
HRESULT None None.GetConnector([in] UINT nIndex,[out] IConnector **ppConnector)
HRESULT None wmp.get_attributeCount([out] long *plCount)
HRESULT None None.GetConnector([in] UINT nIndex,[out] IConnector **ppConnector)
HRESULT None wmp.item([in] long lIndex,[out] BSTR *pbstrFolder)
HRESULT None wmp.get_label([out] BSTR *pbstrLabel)
void None wmp.PlayStateChange([in] long NewState)
void None wmp.Click([in] short nButton,[in] short nShiftState,[in] long fX,[in] long fY)
HRESULT None wmp.put_burnFormat([in] WMPBurnFormat wmpbf)
HRESULT None None.SetMute([in] BOOL bMute,[in] LPCGUID pguidEventContext)
HRESULT None wmp.get_isAvailable([in] BSTR bstrItem,[out] VARIANT_BOOL *pIsAvailable)
void None wmp.MediaCollectionMediaAdded([in] IDispatch *pdispMedia)
void None wmp.FolderScanStateChange([in] WMPFolderScanState wmpfss)
HRESULT None None.GetSignalPath([in] IPart *pIPartFrom,[in] IPart *pIPartTo,[in] BOOL bRejectMixedPaths,[out] IPartsList **ppParts)
HRESULT None wmp.get_SAMIStyle([out] BSTR *pbstrSAMIStyle)
void None wmp.CurrentMediaItemAvailable([in] BSTR bstrItemName)
HRESULT None None.OnNotify([in] PAUDIO_VOLUME_NOTIFICATION_DATA pNotify)
HRESULT None wmp.get_scanState([out] WMPFolderScanState *pwmpfss)
HRESULT None wmp.put_enabled([in] VARIANT_BOOL bEnabled)
HRESULT None None.SetPosition([in] float x,[in] float y,[in] float z)
HRESULT None wmp.put_inProcOnly([in] BOOL fInProc)
HRESULT None wmp.getAudioLanguageID([in] long lIndex,[out] long *plLangID)
HRESULT None None.GetCurrentPadding([out] UINT32 *pNumPaddingFrames)
HRESULT None wmp.getItemInfo([in] long lCollectionIndex,[in] BSTR bstrItemName,[out] BSTR *pbstrValue)
HRESULT None wmp.get_uiMode([out] BSTR *pbstrMode)
HRESULT None wmp.put_enableContextMenu([in] VARIANT_BOOL bEnableContextMenu)
void None wmp.MediaCollectionAttributeStringChanged([in] BSTR bstrAttribName,[in] BSTR bstrOldAttribVal,[in] BSTR bstrNewAttribVal)
HRESULT None wmp.get_balance([out] long *plBalance)
HRESULT None None.UnregisterDuckNotification(IAudioVolumeDuckNotification *duckNotification None)
HRESULT None wmp.getDevice([in] long lIndex,[out] IWMPSyncDevice **ppDevice)
HRESULT None None.GetJackDescription2([in] UINT nJack,[out] KSJACK_DESCRIPTION2 *pDescription2)
void None wmp.DoubleClick([in] short nButton,[in] short nShiftState,[in] long fX,[in] long fY)
HRESULT None wmp.get_errorCode([out] long *phr)
HRESULT None None.Activate([in] DWORD dwClsContext,[in] REFIID refiid,[out] void **ppvObject)
HRESULT None wmp.get_enableErrorDialogs([out] VARIANT_BOOL *pfEnableErrorDialogs)
HRESULT None None.BeginUpdatingAudioObjects([out] UINT32 *availableDynamicObjectCount,[out] UINT32 *frameCountPerBuffer)
HRESULT None None.GetVolumeStepInfo([out] UINT *pnStep,[out] UINT *pnStepCount)
HRESULT None None.SetEngineDeviceFormat([in] IMMDevice *pDevice,[in] WAVEFORMATEX *_pwfxFormat)
HRESULT None None.GetName([out] LPWSTR *ppwstrName)
HRESULT None None.UnregisterControlChangeNotify([in] IAudioEndpointVolumeCallback *pNotify)
HRESULT None None.GetService([in] REFIID riid,[out] REFIID **service)
HRESULT None wmp.moveItem([in] long lIndexOld,[in] long lIndexNew)
HRESULT None wmp.get_openState([out] WMPOpenState *pwmpos)
void None wmp.FolderScanStateChange([in] WMPFolderScanState wmpfss)
HRESULT None None.OpenPropertyStore([in] DWORD stgmAccess,[out] IPropertyStore **ppProperties)
HRESULT None None.GetMasterVolumeLevelScalar([out] float *pfLevel)
HRESULT None wmp.get_SAMIStyle([out] BSTR *pbstrSAMIStyle)
HRESULT None wmp.put_SAMIFileName([in] BSTR bstrSAMIFileName)
HRESULT None None.IsConnected([out] BOOL *pbConnected)
HRESULT None None.GetConnectedTo([out] IConnector **ppConTo)
HRESULT None wmp.estimateSyncSize([in] IWMPPlaylist *pNonRulePlaylist,[in] IWMPPlaylist *pRulesPlaylist)
HRESULT None wmp.put_presenterActivate([in] IMFActivate *pActivate)
HRESULT None wmp.get_burnProgress([out] long *plProgress)
HRESULT None wmp.get_deviceCount([out] long *plCount)
HRESULT None None.ConnectTo([in] IConnector *pConnectTo)
HRESULT None None.GetGroupingParam([out] GUID *pRetVal)
HRESULT None wmp.setBackgroundProcessingPriority([in] BSTR bstrPriority)
HRESULT None None.UnregisterSessionNotification(IAudioSessionNotification *SessionNotification None)
HRESULT None None.GetTopologyObject([out] IDeviceTopology **ppTopology)
HRESULT None wmp.put_fullScreen([in] VARIANT_BOOL bFullScreen)
HRESULT None wmp.get_settings([out] IWMPSettings **ppSettings)
HRESULT None None.QueryHardwareSupport([out] DWORD *pdwHardwareSupportMask)
HRESULT None wmp.get_scannedFilesCount([out] long *plCount)
HRESULT None None.GetSimpleAudioVolume([in] LPCGUID AudioSessionGuid,[in] DWORD CrossProcessSession,[out] ISimpleAudioVolume **AudioVolume)
HRESULT None None.SetMute([in] BOOL bMuted,[in] LPCGUID pguidEventContext)
HRESULT None wmp.get_errorContext([out] VARIANT *pvarContext)
HRESULT None None.GetState([out] DWORD *pdwState)
HRESULT None None.GetBufferSize([out] UINT32 *pNumBufferFrames)
void None wmp.LibraryDisconnect([in] IWMPLibrary *pLibrary)
HRESULT None None.GetLevel([in] UINT nChannel,[out] float *pfLevelDB)
HRESULT None wmp.getAudioLanguageDescription([in] long lIndex,[out] BSTR *pbstrLangDesc)
HRESULT None wmp.get_isIdentical([in] IWMPPlaylist *pIWMPPlaylist,[out] VARIANT_BOOL *pvbool)
HRESULT None wmp.put_autoStart([in] VARIANT_BOOL fAutoStart)
HRESULT None None.GetSelection([out] UINT *pnIdSelected)
HRESULT None wmp.get_enableContextMenu([out] VARIANT_BOOL *pbEnableContextMenu)
HRESULT None wmp.get_playlistCollection([out] IWMPPlaylistCollection **ppPlaylistCollection)
VOID None None.StreamClassStreamNotification(_In_ STREAM_MINIDRIVER_STREAM_NOTIFICATION_TYPE NotificationType,_In_ PHW_STREAM_OBJECT StreamObject,PHW_STREAM_REQUEST_BLOCK pSrb None,PKSEVENT_ENTRY EventEntry None,GUID *EventSet None,ULONG EventId None)
void None wmp.PositionChange([in] double oldPosition,[in] double newPosition)
HRESULT None None.SetChannelVolumeLevel([in] UINT nChannel,[in] float fLevelDB,[in] LPCGUID pguidEventContext)
HRESULT None wmp.put_baseURL([in] BSTR bstrBaseURL)
HRESULT None wmp.get_addedFilesCount([out] long *plCount)
HRESULT None wmp.put_inProcOnly([in] BOOL fInProc)
HRESULT None wmp.get_mediaCollection([out] IWMPMediaCollection **ppIWMPMediaCollection)
HRESULT None None.OnNotify([in] PAUDIO_VOLUME_NOTIFICATION_DATA pNotify)
HRESULT None wmp.get_errorDescription([out] BSTR *pbstrDescription)
HRESULT None wmp.getByAttributeAndMediaType([in] BSTR bstrAttribute,[in] BSTR bstrValue,[in] BSTR bstrMediaType,[out] IWMPPlaylist **ppMediaItems)
HRESULT None wmp.isIdentical([in] IWMPLibrary *pIWMPLibrary,[out] VARIANT_BOOL *pvbool)
HRESULT None wmp.put_currentPositionTimecode([in] BSTR bstrTimecode)
HRESULT None None.GetControlInterfaceCount([out] UINT *pCount)
HRESULT None wmp.setItemInfo([in] BSTR bstrName,[in] BSTR bstrValue)
void None wmp.OpenPlaylistSwitch([in] IDispatch *pItem)
HRESULT None wmp.getAttributeStringCollection([in] BSTR bstrAttribute,[in] BSTR bstrMediaType,[out] IWMPStringCollection **ppStringCollection)
HRESULT None wmp.get_currentPositionString([out] BSTR *pbstrCurrentPosition)
HRESULT None wmp.getByAuthor([in] BSTR bstrAuthor,[out] IWMPPlaylist **ppMediaItems)
HRESULT None None.GetSession([in] int SessionCount,[out] IAudioSessionControl **Session)
HRESULT None wmp.get_name([out] BSTR *pbstrName)
HRESULT None wmp.get_updateProgress([out] long *plProgress)
HRESULT None wmp.get_URL([out] BSTR *pbstrURL)
HRESULT None None.Update(HCHAPTER hReserved None,DBCOUNTITEM cRows None,const HROW rghRows[],DBCOUNTITEM *pcRows None,HROW **prgRows None,DBROWSTATUS **prgRowStatus None)
HRESULT None None.GetDisplayName([out] LPWSTR *pRetVal)
HRESULT None None.IsActive([out] BOOL isActive)
HRESULT None wmp.getLanguageName([in] long lLangID,[out] BSTR *pbstrLangName)
HRESULT None None.GetEnabled([out] BOOL *pbEnabled)
HRESULT None None.OnDefaultDeviceChanged([in] EDataFlow flow,[in] ERole role,[in] LPCWSTR pwstrDefaultDevice)
void None wmp.CurrentPlaylistChange([in] WMPPlaylistChangeEventType change)
HRESULT None None.OnAvailableDynamicObjectCountChange([in] ISpatialAudioObjectRenderStream *sender,[in] LONGLONG hnsComplianceDeadlineTime,[in] UINT32 availableDynamicObjectCountChange)
HRESULT None None.SetGfxState([in] IMMDevice *pDevice,[in] BOOL *pbEnable)
HRESULT None wmp.put_invokeURLs([in] VARIANT_BOOL fInvokeURLs)
HRESULT None wmp.isIdentical([in] IWMPStringCollection2 *pIWMPStringCollection2,[out] VARIANT_BOOL *pvbool)
void None wmp.MediaChange([in] IDispatch *pItem)
HRESULT None wmp.get_deviceName([out] BSTR *pbstrName)
MMRESULT None winmm.waveInOpen(LPHWAVEIN phwi None,UINT uDeviceID None,LPCWAVEFORMATEX pwfx None,DWORD_PTR dwCallback None,DWORD_PTR dwCallbackInstance None,DWORD fdwOpen None)
HRESULT None wmp.get_currentMedia([out] IWMPMedia **ppMedia)
VOID None None.StreamClassStreamNotification(_In_ STREAM_MINIDRIVER_STREAM_NOTIFICATION_TYPE NotificationType,_In_ PHW_STREAM_OBJECT StreamObject,PHW_STREAM_REQUEST_BLOCK pSrb None,PKSEVENT_ENTRY EventEntry None,GUID *EventSet None,ULONG EventId None)
HRESULT None wmp.put_SAMILang([in] BSTR bstrSAMILang)
HRESULT None None.SetEventHandle([in] HANDLE eventHandle)
HRESULT None wmp.get_isAvailable([in] BSTR bstrItem,[out] VARIANT_BOOL *pIsAvailable)
HRESULT None wmp.put_burnPlaylist([in] IWMPPlaylist *pPlaylist)
HRESULT None wmp.get_playerDocked([out] VARIANT_BOOL *pbPlayerDocked)
NTSTATUS None None.KsEvent(PKSEVENT Event None,ULONG EventLength None,PVOID EventData None,ULONG DataLength None,ULONG BytesReturned None)
HRESULT None None.GetStreamLatency([out] REFERENCE_TIME *phnsLatency)
HRESULT None None.GetState([out] AudioSessionState *pRetVal)
HRESULT None wmp.get_network([out] IWMPNetwork **ppQNI)
HRESULT None None.GetVolumeRangeChannel([in] UINT iChannel,[out] float *pflVolumeMinDB,[out] float *pflVolumeMaxDB,[out] float *pflVolumeIncrementDB)
HRESULT None None.GetService([in] REFIID riid,[out] void **ppv)
HRESULT None None.SetChannelVolumeLevelScalar([in] UINT nChannel,[in] float fLevel,[in] LPCGUID pguidEventContext)
HRESULT None wmp.allowTranscode([out] VARIANT_BOOL *pvarfAllow)
CComPtrIWMPSyncDevice None None.spSyncDevice(m_ppWMPDevices[lIndex] None None)
HRESULT None None.GetMute([out] BOOL *pbMuted)
HRESULT None wmp.put_captioningId([in] BSTR bstrCaptioningID)
HRESULT None wmp.get_domain([out] BSTR *strDomain)
HRESULT None None.RegisterSessionNotification(IAudioSessionNotification *SessionNotification None)
HRESULT None None.GetChannelsPeakValues([in] UINT32 u32ChannelCount,[out] float *afPeakValues)
HRESULT None None.SetDistanceDecay([in] SpatialAudioHrtfDistanceDecay *distanceDecay)
HRESULT None None.GetSpatialAudioMetadataItemsBufferLength([in] UINT16 maxItemCount,[out] UINT32 *bufferLength)
HRESULT None wmp.put_presenterActivate([in] IMFActivate *pActivate)
MMRESULT None winmm.waveOutUnprepareHeader(HWAVEOUT hwo None,LPWAVEHDR pwh None,UINT cbwh None)
HRESULT None wmp.get_autoStart([out] VARIANT_BOOL *pfAutoStart)
HRESULT None None.GetChannelVolume([in] UINT32 dwIndex,[out] float *pfLevel)
HRESULT None None.ActivateSpatialAudioObject([in] AudioObjectType type,[out] ISpatialAudioObjectForHrtf **audioObject)
void None wmp.CdromBurnStateChange([in] IWMPCdromBurn *pCdromBurn,[in] WMPBurnState wmpbs)
HRESULT None None.ActivateSpatialAudioMetadataWriter([in] SpatialAudioMetadataWriterOverflowMode overflowMode,[out] ISpatialAudioMetadataWriter **metadataWriter)
HRESULT None wmp.newPlaylist([in] BSTR bstrName,[out] IWMPPlaylist **ppItem)
void None None.Warning([in] long WarningType,[in] long Param,[in] BSTR Description)
HRESULT None None.GetGfxState([in] IMMDevice *pDevice,[out] BOOL *_pbEnable)
HRESULT None wmp.put_volume([in] long lVolume)
HRESULT None None.GetAudioSessionControl([in] LPCGUID AudioSessionGuid,[in] DWORD StreamFlags,[out] IAudioSessionControl **SessionControl)
HRESULT None wmp.get_cdromCollection([out] IWMPCdromCollection **ppCdromCollection)
HRESULT None None.GetGlobalId([out] LPWSTR *ppwstrGlobalId)
void None wmp.Click([in] short nButton,[in] short nShiftState,[in] long fX,[in] long fY)
HRESULT None None.GetSupportedAudioObjectFormatEnumerator([out] IAudioFormatEnumerator **enumerator)
HRESULT None None.OnDeviceAdded([in] LPCWSTR pwstrDeviceId)
HRESULT None None.GetMixFormat([out] WAVEFORMATEX **ppDeviceFormat)
HRESULT None None.GetLocalEffectsState([out] BOOL *pbEnabled)
void None wmp.AudioLanguageChange([in] long LangID)
HRESULT None None.GetSubType([out] GUID *pSubType)
HRESULT None wmp.get_item([in] long lIndex,[out] IWMPMedia **ppIWMPMedia)
void None wmp.MouseUp([in] short nButton,[in] short nShiftState,[in] long fX,[in] long fY)
HRESULT None None.IsOffloadCapable([in] AUDIO_STREAM_CATEGORY Category,[out] BOOL *pbOffloadCapable)
HRESULT None None.ActivateSpatialAudioMetadataCopier([out] ISpatialAudioMetadataCopier ***metadataCopier)
HRESULT None None.ActivateSpatialAudioMetadataItems([in] UINT16 maxItemCount,[in] UINT16 frameCount,[out None None,optional] ISpatialAudioMetadataItemsBuffer **metadataItemsBuffer,[out] ISpatialAudioMetadataItems **metadataItems)
HRESULT None None.BeginUpdatingAudioObjects([out] UINT32 *availableDynamicObjectCount,[out] UINT32 *frameCountPerBuffer)
HRESULT None None.RegisterAudioSessionNotification([in] IAudioSessionEvents *NewNotifications)
HRESULT None None.GetPartType([out] PartType *pPartType)
HRESULT None None.SetMute([in] BOOL bMuted)
HRESULT None wmp.get_closedCaption([out] IWMPClosedCaption **ppClosedCaption)
MMRESULT None winmm.waveInReset(HWAVEIN hwi None)
HRESULT None wmp.put_currentPosition([in] double dCurrentPosition)
HRESULT None wmp.get_attributeName([in] long lIndex,[out] BSTR *pbstrAttributeName)
HRESULT None wmp.getPlaylistByQuery([in] IWMPQuery *pQuery,[in] BSTR bstrMediaType,[in] BSTR bstrSortAttribute,[in] VARIANT_BOOL fSortAscending,[out] IWMPPlaylist **ppPlaylist)
HRESULT None None.GetDefaultAudioEndpoint([in] EDataFlow dataFlow,[in] ERole role,[out] IMMDevice **ppDevice)
HRESULT None wmp.get_burnState([out] WMPBurnState *pwmpbs)
HRESULT None None.RegisterControlChangeNotify([in] IAudioEndpointVolumeCallback *pNotify)
HRESULT None None.GetChannelVolumeLevelScalar([in] UINT nChannel,[out] float *pfLevel)
HRESULT None None.GetAllVolumes([in] UINT32 dwCount,[out] float *pfVolumes)
HRESULT None wmp.get_SAMILangCount([out] long *plCount)
HRESULT None None.Item([in] UINT nDevice,[out] IMMDevice **ppDevice)
NTSTATUS None None.KsProperty([in] PKSPROPERTY Property,[in] ULONG PropertyLength,[in None None,out] PVOID PropertyData,[in] ULONG DataLength,[out] ULONG *BytesReturned)
HRESULT None wmp.get_burnState([out] WMPBurnState *pwmpbs)
HRESULT None wmp.get_volume([out] long *plVolume)
HRESULT None None.GetAvailableOffloadConnectorCount([in] LPWSTR pwstrDeviceId,[in] UINT32 uConnectorId,[out] UINT32 *pAvailableConnectorInstanceCount)
HRESULT None None.IsActive([out] BOOL isActive)
HRESULT None wmp.GetScriptableObject([out] BSTR *pbstrName,[out] IDispatch **ppDispatch)
HRESULT None None.BeginUpdatingAudioObjects([out] UINT32 *availableDynamicObjectCount,[out] UINT32 *frameCountPerBuffer)
HRESULT None wmp.getMode([in] BSTR bstrMode,[out] VARIANT_BOOL *pvarfMode)
HRESULT None None.UnregisterAudioSessionNotification([in] IAudioSessionEvents *NewNotifications)
HRESULT None None.SetDuckingPreference([in] BOOL optOut)
HRESULT None None.GetVolumeRange([out] float *pfLevelMinDB,[out] float *pfLevelMaxDB,[out] float *pfVolumeIncrementDB)
void None wmp.PlaylistCollectionPlaylistAdded([in] BSTR bstrPlaylistName)
HRESULT None None.OnSessionCreated([in] IAudioSessionControl *NewSession)
HRESULT None None.OnSimpleVolumeChanged([in] float NewVolume,[in] BOOL NewMute,[in] LPCGUID EventContext)
void None wmp.MediaError([in] IDispatch *pMediaObject)
HRESULT None None.Get4BRange([out] LONG *plMin,[out] LONG *plMax,[out] LONG *plStepping)
HRESULT None wmp.put_URL([in] BSTR bstrURL)
HRESULT None wmp.getProxyExceptionList([in] BSTR bstrProtocol,[out] BSTR *pbstrExceptionList)
HRESULT None None.SetDuckingPreference([in] BOOL optOut)
HRESULT None None.GetDefaultAudioEndpoint([in] EDataFlow dataFlow,[in] ERole role,[out] IMMDevice **ppDevice)
HRESULT None None.GetDevice([in] LPCWSTR pwstrId,[out] IMMDevice **ppDevice)
HRESULT None None.SetChannelVolumes([in] UINT32 u32ChannelCount,[in] FLOAT32 *pf32Volumes)
HRESULT None None.GetVolumeChannelCount([out] UINT32 *pu32ChannelCount)
HRESULT None None.SetMute([in] BOOL bMute,[in] LPCGUID EventContext)
HRESULT None None.GetSessionInstanceIdentifier([out] LPWSTR *pRetVal)
HRESULT None None.SetChannelVolumes([in] UINT32 u32ChannelCount,[in] FLOAT32 *pf32Volumes)
HRESULT None None.GetDefaultAudioEndpoint([in] EDataFlow dataFlow,[in] ERole role,[out] IMMDevice **ppDevice)
HRESULT None None.GetDevice([in] LPCWSTR pwstrId,[out] IMMDevice **ppDevice)
HRESULT None None.GetDevice([in] LPCWSTR pwstrId,[out] IMMDevice **ppDevice)
HRESULT None wmp.getProxyBypassForLocal([in] BSTR bstrProtocol,[out] VARIANT_BOOL *pfBypassForLocal)
HRESULT None wmp.isIdentical([in] IWMPStringCollection2 *pIWMPStringCollection2,[out] VARIANT_BOOL *pvbool)
HRESULT None None.SetGroupingParam([in] LPCGUID Grouping,[in] LPCGUID EventContext)
void CALLBACK None.waveInProc(HWAVEIN hwi None,UINT uMsg None,DWORD_PTR dwInstance None,DWORD_PTR dwParam1 None,DWORD_PTR dwParam2 None)
HRESULT None None.GetIconPath([out] LPWSTR *pRetVal)
HRESULT None wmp.setProxyBypassForLocal([in] BSTR bstrProtocol,[in] VARIANT_BOOL fBypassForLocal)
HRESULT None wmp.get_bitRate([out] long *plBitRate)
HRESULT None wmp.get_encodedFrameRate([out] long *plFrameRate)
HRESULT None None.GetDisplayName([out] LPWSTR *pRetVal)
HRESULT None wmp.get_bufferingTime([out] long *plBufferingTime)
HRESULT None wmp.get_lostPackets([out] long *plLostPackets)
HRESULT None wmp.setProxyPort([in] BSTR bstrProtocol,[in] long lProxyPort)
HRESULT None None.GetPendingRows(HCHAPTER hReserved None,DBPENDINGSTATUS dwRowStatus None,DBCOUNTITEM *pcPendingRows None,HROW **prgPendingRows None,DBPENDINGSTATUS **prgPendingStatus None)
HRESULT None None.GetOriginalData(HROW hRow None,HACCESSOR hAccessor None,void *pData None)
HRESULT None None.GetStreamLatency([out] REFERENCE_TIME *phnsLatency)
HRESULT None None.Update(HCHAPTER hReserved None,DBCOUNTITEM cRows None,const HROW rghRows[],DBCOUNTITEM *pcRows None,HROW **prgRows None,DBROWSTATUS **prgRowStatus None)
HRESULT None wmp.get_bitRate([out] long *plBitRate)
HRESULT None None.Undo(HCHAPTER hReserved None,DBCOUNTITEM cRows None,const HROW rghRows[],DBCOUNTITEM *pcRows None,HROW **prgRows None,DBROWSTATUS **prgRowStatus None)
HRESULT None None.GetService([in] REFIID riid,[out] REFIID **service)
HRESULT None None.ActivateSpatialAudioObject([in] AudioObjectType type,[out] ISpatialAudioObject **audioObject)
HRESULT None None.BeginUpdatingAudioObjects([out] UINT32 *availableDynamicObjectCount,[out] UINT32 *frameCountPerBuffer)
HRESULT None None.GetBuffer([out] BYTE **buffer,[out] UINT32 *bufferLength)
HRESULT None None.GetAvailableDynamicObjectCount([out] UINT32 *value)
HRESULT None wmp.get_URL([out] BSTR *pbstrURL)
HRESULT None wmp.get_updateProgress([out] long *plProgress)
HRESULT None None.SetEnvironment([in] SpatialAudioHrtfEnvironmentType environment)
HRESULT None None.RegisterSessionNotification(IAudioSessionNotification *SessionNotification None)
HRESULT None wmp.add([in] BSTR bstrFolder)
HRESULT None wmp.get_SAMIStyleCount([out] long *plCount)
HRESULT None None.Open([in] ISpatialAudioMetadataItems *metadataItems)
private void None.button1_Click(object sender None,System.EventArgs e None)
HRESULT None None.GetCount([out] int *SessionCount)
HRESULT None wmp.setDeleted([in] IWMPMedia *pItem,[in] VARIANT_BOOL varfIsDeleted)
HRESULT None None.GetSession([in] int SessionCount,[out] IAudioSessionControl **Session)
HRESULT None wmp.add([in] BSTR bstrURL,[out] IWMPMedia **ppItem)
HRESULT None wmp.getByAuthor([in] BSTR bstrAuthor,[out] IWMPPlaylist **ppMediaItems)
HRESULT None wmp.getByAlbum([in] BSTR bstrAlbum,[out] IWMPPlaylist **ppMediaItems)
HRESULT None None.OnSessionCreated([in] IAudioSessionControl *NewSession)
HRESULT None None.OnAvailableDynamicObjectCountChange([in] ISpatialAudioObjectRenderStream *sender,[in] LONGLONG hnsComplianceDeadlineTime,[in] UINT32 availableDynamicObjectCountChange)
HRESULT None None.GetActivateResult([out] HRESULT *activateResult,[out] IUnknown **activatedInterface)
HRESULT None None.GetEngineFormat([in] IMMDevice *pDevice,[in] BOOL bRequestDeviceFormat,[out] WAVEFORMATEX **ppwfxFormat)
HRESULT None None.GetFrameCount([out] UINT16 *frameCount)
HRESULT None None.SetEnabled([in] BOOL bEnable,[in] LPCGUID pguidEventContext)
HRESULT None None.GetVolumeChannelCount([out] UINT32 *pu32ChannelCount)
HRESULT None wmp.getByAttribute([in] BSTR bstrAttribute,[in] BSTR bstrValue,[out] IWMPPlaylist **ppMediaItems)
HRESULT None None.OnDeviceRemoved([in] LPCWSTR pwstrDeviceId)
HRESULT None None.GetActivateResult([out] HRESULT *activateResult,[out] IUnknown **activatedInterface)
HRESULT None None.SetIconPath([in] LPCWSTR Value,[in] LPCGUID EventContext)
HRESULT None None.SetIconPath([in] LPCWSTR Value,[in] LPCGUID EventContext)
HRESULT None None.SetEnabled([in] BOOL bEnable,[in] LPCGUID pguidEventContext)
HRESULT None None.SetMasterVolume([in] float fLevel,[in] LPCGUID EventContext)
HRESULT None None.GetFormat([in] UINT32 index,[out] WAVEFORMATEX **format)
HRESULT None None.SetIconPath([in] LPCWSTR Value,[in] LPCGUID EventContext)
HRESULT None None.SetEnabled([in] BOOL bEnable,[in] LPCGUID pguidEventContext)
HRESULT None None.GetActivateResult([out] HRESULT *activateResult,[out] IUnknown **activatedInterface)
HRESULT None None.SetEnabled([in] BOOL bEnable,[in] LPCGUID pguidEventContext)
HRESULT None None.SetIconPath([in] LPCWSTR Value,[in] LPCGUID EventContext)
HRESULT None None.SetEnabled([in] BOOL bEnable,[in] LPCGUID pguidEventContext)
HRESULT None None.SetIconPath([in] LPCWSTR Value,[in] LPCGUID EventContext)
HRESULT None None.SetEnabled([in] BOOL bEnable,[in] LPCGUID pguidEventContext)
HRESULT None None.SetIconPath([in] LPCWSTR Value,[in] LPCGUID EventContext)
HRESULT None None.SetIconPath([in] LPCWSTR Value,[in] LPCGUID EventContext)
HRESULT None None.SetIconPath([in] LPCWSTR Value,[in] LPCGUID EventContext)
HRESULT None None.SetEnabled([in] BOOL bEnable,[in] LPCGUID pguidEventContext)
HRESULT None None.SetIconPath([in] LPCWSTR Value,[in] LPCGUID EventContext)
HRESULT None None.SetIconPath([in] LPCWSTR Value,[in] LPCGUID EventContext)
HRESULT None None.ActivateSpatialAudioMetadataReader([out] ISpatialAudioMetadataReader **metadataReader)
HRESULT None None.SetEnabled([in] BOOL bEnable,[in] LPCGUID pguidEventContext)
HRESULT None None.SetIconPath([in] LPCWSTR Value,[in] LPCGUID EventContext)
HRESULT None None.SetEnabled([in] BOOL bEnable,[in] LPCGUID pguidEventContext)
HRESULT None None.SetEnabled([in] BOOL bEnable,[in] LPCGUID pguidEventContext)
HRESULT None None.SetIconPath([in] LPCWSTR Value,[in] LPCGUID EventContext)
HRESULT None None.SetEnabled([in] BOOL bEnable,[in] LPCGUID pguidEventContext)
HRESULT None None.SetEnabled([in] BOOL bEnable,[in] LPCGUID pguidEventContext)
HRESULT None None.SetEnabled([in] BOOL bEnable,[in] LPCGUID pguidEventContext)
HRESULT None None.SetIconPath([in] LPCWSTR Value,[in] LPCGUID EventContext)
HRESULT None None.SetIconPath([in] LPCWSTR Value,[in] LPCGUID EventContext)
HRESULT None None.SetIconPath([in] LPCWSTR Value,[in] LPCGUID EventContext)
HRESULT None None.SetEnabled([in] BOOL bEnable,[in] LPCGUID pguidEventContext)
HRESULT None None.SetIconPath([in] LPCWSTR Value,[in] LPCGUID EventContext)
HRESULT None None.SetEnabled([in] BOOL bEnable,[in] LPCGUID pguidEventContext)
HRESULT None None.SetIconPath([in] LPCWSTR Value,[in] LPCGUID EventContext)
HRESULT None None.SetEnabled([in] BOOL bEnable,[in] LPCGUID pguidEventContext)
HRESULT None None.SetIconPath([in] LPCWSTR Value,[in] LPCGUID EventContext)
HRESULT None None.SetEnabled([in] BOOL bEnable,[in] LPCGUID pguidEventContext)
HRESULT None None.SetEnabled([in] BOOL bEnable,[in] LPCGUID pguidEventContext)
HRESULT None None.SetIconPath([in] LPCWSTR Value,[in] LPCGUID EventContext)
HRESULT None None.SetIconPath([in] LPCWSTR Value,[in] LPCGUID EventContext)
HRESULT None None.SetEnabled([in] BOOL bEnable,[in] LPCGUID pguidEventContext)
HRESULT None None.SetEnabled([in] BOOL bEnable,[in] LPCGUID pguidEventContext)
HRESULT None None.GetChannelVolumes([in] UINT32 u32ChannelCount,[out] FLOAT32 *pf32Volumes)
HRESULT None None.GetDevicePosition([out] UINT64 *DevicePosition,[out None None,unique] UINT64 *QPCPosition)
HRESULT None None.GetActivateResult([out] HRESULT *activateResult,[out] IUnknown **activatedInterface)
HRESULT None None.GetProcessId([out] DWORD *pRetVal)
HRESULT None None.GetValue([out] void *pvValue,DWORD *pcbValue None)
HRESULT None None.GetValue([out] void *pvValue,DWORD *pcbValue None)
HRESULT None wmp.GetApplicationName([out] BSTR *pbstrName)
HRESULT None None.GetValue([out] void *pvValue,DWORD *pcbValue None)
HRESULT None None.SetSampleRate([in] float flSampleRate)
HRESULT None None.GetValue([out] void *pvValue,DWORD *pcbValue None)
HRESULT None None.GetValue([out] void *pvValue,DWORD *pcbValue None)
HRESULT None None.RegisterEndpointNotificationCallback([in] IMMNotificationClient *pNotify)
HRESULT None None.OnDeviceStateChanged([in] LPCWSTR pwstrDeviceId,[in] DWORD dwNewState)
HRESULT None None.GetSessionIdentifier([out] LPWSTR *pRetVal)
MMRESULT None winmm.waveInAddBuffer(HWAVEIN hwi None,LPWAVEHDR pwh None,UINT cbwh None)
HRESULT None None.SetSampleRate([in] float flSampleRate)
HRESULT None wmp.get_playerDocked([out] VARIANT_BOOL *pbPlayerDocked)
HRESULT None None.GetValue([out] void *pvValue,DWORD *pcbValue None)
HRESULT None None.GetMaxDynamicObjectCount([out] UINT32 *value)
HRESULT None None.get_Name(long lIndex None,ITransformProperty** ppProperty None)
HRESULT None None.SetDisplayName([in] LPCWSTR Value,[in] LPCGUID EventContext)
HRESULT None wmp.get_bufferingProgress([out] long *plBufferingProgress)
HRESULT None None.GetBuffer([out] BYTE **buffer,[out] UINT32 *bufferLength)
HRESULT None None.SetEventHandle([in] HANDLE eventHandle)
HRESULT None None.GetChannelCount([out] UINT32 *pdwCount)
HRESULT None None.OnDefaultDeviceChanged([in] EDataFlow flow,[in] ERole role,[in] LPCWSTR pwstrDefaultDevice)
HRESULT None None.SetChannelVolumeLevelScalar([in] UINT nChannel,[in] float fLevel,[in] LPCGUID pguidEventContext)
HRESULT None None.GetValue([out] void *pvValue,DWORD *pcbValue None)
HRESULT None None.GetMute([out] BOOL *pbMuted)
HRESULT None wmp.get_framesSkipped([out] long *plFrames)
HRESULT None None.GetValue([out] void *pvValue,DWORD *pcbValue None)
HRESULT None None.GetCharacteristics([out] DWORD *pdwCharacteristics)
HRESULT None None.ActivateSpatialAudioMetadataItems([in] UINT16 maxItemCount,[in] UINT16 frameCount,[out None None,optional] ISpatialAudioMetadataItemsBuffer **metadataItemsBuffer,[out] ISpatialAudioMetadataItems **metadataItems)
HRESULT None None.SetDisplayName([in] LPCWSTR Value,[in] LPCGUID EventContext)
void None wmp.CdromBurnError([in] IWMPCdromBurn *pCdromBurn,[in] HRESULT hrError)
HRESULT None None.SetSampleRate([in] float flSampleRate)
HRESULT None wmp.getPlaylistByQuery([in] IWMPQuery *pQuery,[in] BSTR bstrMediaType,[in] BSTR bstrSortAttribute,[in] VARIANT_BOOL fSortAscending,[out] IWMPPlaylist **ppPlaylist)
HRESULT None None.GetFormat([in] UINT32 index,[out] WAVEFORMATEX **format)
HRESULT None None.GetAudioObjectType([out] AudioObjectType *audioObjectType)
MMRESULT None winmm.waveOutPrepareHeader(HWAVEOUT hwo None,LPWAVEHDR pwh None,UINT cbwh None)
HRESULT None None.GetJackDescription([in] UINT nJack,[out] KSJACK_DESCRIPTION *pDescription)
HRESULT None None.RegisterEndpointNotificationCallback([in] IMMNotificationClient *pNotify)
HRESULT None wmp.getSAMILangName([in] long nIndex,[out] BSTR *pbstrName)
HRESULT None None.GetChannelVolumes([in] UINT32 u32ChannelCount,[out] FLOAT32 *pf32Volumes)
HRESULT None None.SetDisplayName([in] LPCWSTR Value,[in] LPCGUID EventContext)
HRESULT None None.EnumAudioEndpoints([in] EDataFlow dataFlow,[in] DWORD dwStateMask,[out] IMMDeviceCollection **ppDevices)
HRESULT None None.SetDisplayName([in] LPCWSTR Value,[in] LPCGUID EventContext)
HRESULT None None.SetDisplayName([in] LPCWSTR Value,[in] LPCGUID EventContext)
HRESULT None None.SetDisplayName([in] LPCWSTR Value,[in] LPCGUID EventContext)
void CALLBACK None.waveInProc(HWAVEIN hwi None,UINT uMsg None,DWORD_PTR dwInstance None,DWORD_PTR dwParam1 None,DWORD_PTR dwParam2 None)
HRESULT None None.GetAudioObjectType([out] AudioObjectType *audioObjectType)
HRESULT None None.SetDisplayName([in] LPCWSTR Value,[in] LPCGUID EventContext)
HRESULT None None.OnDeviceRemoved([in] LPCWSTR pwstrDeviceId)
HRESULT None None.SetDisplayName([in] LPCWSTR Value,[in] LPCGUID EventContext)
HRESULT None None.SetDisplayName([in] LPCWSTR Value,[in] LPCGUID EventContext)
HRESULT None None.GetFrameCount([out] UINT16 *frameCount)
HRESULT None None.SetDisplayName([in] LPCWSTR Value,[in] LPCGUID EventContext)
HRESULT None None.SetDisplayName([in] LPCWSTR Value,[in] LPCGUID EventContext)
HRESULT None None.SetDisplayName([in] LPCWSTR Value,[in] LPCGUID EventContext)
HRESULT None None.SetDisplayName([in] LPCWSTR Value,[in] LPCGUID EventContext)
HRESULT None None.SetDisplayName([in] LPCWSTR Value,[in] LPCGUID EventContext)
HRESULT None None.Get4BRange([out] LONG *plMin,[out] LONG *plMax,[out] LONG *plStepping)
HRESULT None None.SetDisplayName([in] LPCWSTR Value,[in] LPCGUID EventContext)
HRESULT None None.GetVolumeRange([out] float *pfLevelMinDB,[out] float *pfLevelMaxDB,[out] float *pfVolumeIncrementDB)
HRESULT None None.SetDisplayName([in] LPCWSTR Value,[in] LPCGUID EventContext)
HRESULT None wmp.get_item([in] long lIndex,[out] IWMPMedia **ppIWMPMedia)
HRESULT None None.GetSessionIdentifier([out] LPWSTR *pRetVal)
HRESULT None None.ReadNextItem([out] UINT8 *commandCount,[out] UINT16 *frameOffset)
HRESULT None None.GetMute([out] BOOL *pbMuted)
HRESULT None None.SetDisplayName([in] LPCWSTR Value,[in] LPCGUID EventContext)
HRESULT None None.SetIconPath([in] LPCWSTR Value,[in] LPCGUID EventContext)
HRESULT None None.SetDisplayName([in] LPCWSTR Value,[in] LPCGUID EventContext)
HRESULT None None.GetMeteringChannelCount([out] UINT *pnChannelCount)
HRESULT None None.SetDisplayName([in] LPCWSTR Value,[in] LPCGUID EventContext)
HRESULT None None.SetDisplayName([in] LPCWSTR Value,[in] LPCGUID EventContext)
HRESULT None wmp.getSAMIStyleName([in] long nIndex,[out] BSTR *pbstrName)
HRESULT None None.GetAllVolumes([in] UINT32 dwCount,[out] float *pfVolumes)
HRESULT None None.Item([in] UINT nDevice,[out] IMMDevice **ppDevice)
HRESULT None None.EnumAudioEndpoints([in] EDataFlow dataFlow,[in] DWORD dwStateMask,[out] IMMDeviceCollection **ppDevices)
HRESULT None None.GetBuffer([in] UINT32 NumFramesRequested,[out] BYTE **ppData)
HRESULT None None.GetVolumeChannelCount([out] UINT32 *pu32ChannelCount)
HRESULT None None.SetMute([in] BOOL bMuted)
HRESULT None wmp.get_SAMILangCount([out] long *plCount)
HRESULT None None.ActivateCompleted([in] IActivateAudioInterfaceAsyncOperation *activateOperation)
HRESULT None None.GetService([in] REFIID riid,[out] REFIID **service)
HRESULT None None.GetBuffer([out] BYTE **buffer,[out] UINT32 *bufferLength)
HRESULT None None.OnSimpleVolumeChanged([in] float NewVolume,[in] BOOL NewMute,[in] LPCGUID EventContext)
HRESULT None None.GetCount([out] int *SessionCount)
HRESULT None None.CreateTransformProperties(ITransformProperties** ppPropertyCollection None)
HRESULT None None.SetEnvironment([in] SpatialAudioHrtfEnvironmentType environment)
HRESULT None wmp.get_ripState([out] WMPRipState *pwmprs)
HRESULT None None.GetAudioObjectType([out] AudioObjectType *audioObjectType)
HRESULT None wmp.get_playlist([out] IWMPPlaylist **ppPlaylist)
HRESULT None None.IsActive([out] BOOL isActive)
HRESULT None None.GetDefaultAudioEndpoint([in] EDataFlow dataFlow,[in] ERole role,[out] IMMDevice **ppDevice)
HRESULT None None.SetVolume([in] float volume)
HRESULT None None.ActivateSpatialAudioMetadataReader([out] ISpatialAudioMetadataReader **metadataReader)
HRESULT None None.GetMute([out] BOOL *pbMuted)
HRESULT None None.OnDeviceAdded([in] LPCWSTR pwstrDeviceId)
HRESULT None None.GetVolumeRangeChannel([in] UINT iChannel,[out] float *pflVolumeMinDB,[out] float *pflVolumeMaxDB,[out] float *pflVolumeIncrementDB)
HRESULT None None.GetFormat([in] UINT32 index,[out] WAVEFORMATEX **format)
CComPtrIWMPSyncDevice None None.spSyncDevice(m_ppWMPDevices[lIndex] None None)
HRESULT None wmp.setProxyName([in] BSTR bstrProtocol,[in] BSTR bstrProxyName)
void None wmp.StringCollectionChange([in] IDispatch *pdispStringCollection,[in] WMPStringCollectionChangeEventType change,[in] long lCollectionIndex)
HRESULT None None.BeginUpdatingAudioObjects([out] UINT32 *availableDynamicObjectCount,[out] UINT32 *frameCountPerBuffer)
HRESULT None wmp.get_SAMIStyleCount([out] long *plCount)
HRESULT None wmp.importPlaylist([in] IWMPPlaylist *pItem,[out] IWMPPlaylist **ppImportedItem)
HRESULT None None.GetType([out] VARTYPE *pVType)
HRESULT None None.GetFrameCount([out] UINT16 *frameCount)
void None wmp.MediaCollectionMediaRemoved([in] IDispatch *pdispMedia)
HRESULT None wmp.put_label([in] BSTR bstrLabel)
HRESULT None wmp.put_maxBandwidth([in] long lMaxBandwidth)
HRESULT None wmp.put_name([in] BSTR bstrName)
HRESULT None wmp.getProxyName([in] BSTR bstrProtocol,[out] BSTR *pbstrProxyName)
HRESULT None wmp.get_maxBandwidth([out] long *plMaxBandwidth)
HRESULT None None.GetMeteringChannelCount([out] UINT *pnChannelCount)
HRESULT None None.SetGain([in] float gain)
HRESULT None wmp.getProxySettings([in] BSTR bstrProtocol,[out] long *plProxySetting)
HRESULT None None.GetMixFormat([out] WAVEFORMATEX **ppDeviceFormat)
HRESULT None None.IsActive([out] BOOL isActive)
HRESULT None None.allowPlay([in] HWND hwnd,[in] IWMPMedia *pMedia,[out] BOOL *pfAllowPlay)
HRESULT None None.SetDirectivity(SpatialAudioHrtfDirectivityUnion directivity None)
HRESULT None None.Open([in] ISpatialAudioMetadataItems *metadataItems)
HRESULT None None.SetLocalEffectsState([in] BOOL bEnabled)
HRESULT None wmp.get_receivedPackets([out] long *plReceivedPackets)
HRESULT None None.GetCount([out] UINT32 count)
HRESULT None wmp.get_mediaAccessRights([out] BSTR *pbstrRights)
HRESULT None wmp.get_frameRate([out] long *plFrameRate)
HRESULT None None.UnregisterEndpointNotificationCallback([in] IMMNotificationClient *pNotify)
HRESULT None None.GetDataFlow([out] EDataFlow *pDataFlow)
HRESULT None None.SetValue([in] void *pvValue,[in] DWORD cbValue,[in] LPCGUID pguidEventContext)
public IWMPPlaylist None.getByAttributeAndMediaType(System.String bstrAttribute None,System.String bstrValue None,System.String bstrMediaType None)
HRESULT None wmp.get_recoveredPackets([out] long *plRecoveredPackets)
HRESULT None wmp.get_bandWidth([out] long *plBandwidth)
HRESULT None None.GetPeakValue([out] float *pfPeak)
HRESULT None None.RegisterEndpointNotificationCallback([in] IMMNotificationClient *pNotify)
HRESULT None wmp.put_bufferingTime([in] long lBufferingTime)
HRESULT None None.IsActive([out] BOOL isActive)
HRESULT None None.GetPartById([in] UINT nId,[out] IPart **ppPart)
HRESULT None None.SetDisplayName([in] LPCWSTR Value,[in] LPCGUID EventContext)
HRESULT None wmp.setProxyExceptionList([in] BSTR bstrProtocol,[in] BSTR pbstrExceptionList)
HRESULT None wmp.setProxySettings([in] BSTR bstrProtocol,[in] long lProxySetting)
HRESULT None wmp.get_sourceProtocol([out] BSTR *pbstrSourceProtocol)
HRESULT None wmp.get_downloadProgress([out] long *plDownloadProgress)
HRESULT None wmp.get_bufferingCount([out] long *plBufferingCount)
HRESULT None wmp.get_maxBitRate([out] long *plBitRate)
private void None.weblist_SelectedIndexChanged(object sender None,System.EventArgs e None)
HRESULT None None.OnSessionDisconnected([in] AudioSessionDisconnectReason DisconnectReason)
public IWMPPlaylist None.getPlaylistByQuery(IWMPQuery pQuery None,System.String bstrMediaType None,System.String bstrSortAttribute None,System.Boolean fSortAscending None)
private void None.setNewName_Click(object sender None,System.EventArgs e None)
HRESULT None wmp.get_receptionQuality([out] long *plReceptionQuality)
HRESULT None wmp.getProxyPort([in] BSTR bstrProtocol,[out] long *plProxyPort)
HRESULT None wmp.importPlaylist([in] IWMPPlaylist *pItem,[out] IWMPPlaylist **ppImportedItem)
HRESULT None wmp.setProxyName([in] BSTR bstrProtocol,[in] BSTR bstrProxyName)
HRESULT None None.CompareContainerListPrices([in] IWMPContentContainerList *pListBase,[in] IWMPContentContainerList *pListCompare,[out] long *pResult)
HRESULT None None.SetDirectivity(SpatialAudioHrtfDirectivityUnion directivity None)
HRESULT None wmp.setItemInfo([in] BSTR bstrItemName,[in] BSTR bstrVal)
HRESULT None wmp.get_driveSpecifier([out] BSTR *pbstrDrive)
function None None.setindex(idx None None)
public void None.setItemInfo(System.String bstrItemName None,System.String bstrVal None)
HRESULT None None.IsFormatSupported([in] PKSDATAFORMAT pKsFormat,[in] DWORD cbFormat,[out] BOOL *pbSupported)
HRESULT None None.IsActive([out] BOOL isActive)
private void None.weblist_SelectedIndexChanged(object sender None,System.EventArgs e None)
HRESULT None None.GetAllVolumes([in] UINT32 dwCount,[out] float *pfVolumes)
HRESULT None None.GetIID([out] GUID *pIID)
HRESULT None None.EnumPartsOutgoing([out] IPartsList **ppParts)
HRESULT None None.SetPosition([in] float x,[in] float y,[in] float z)
private void None.playItem_OnSelectedIndexChanged(object sender None,System.EventArgs e None)
HRESULT None None.SendEndOfStream([in] UINT32 frameCount)
HRESULT None None.SetPosition([in] float x,[in] float y,[in] float z)
HRESULT None None.GetName([out] LPWSTR *ppwstrName)
HRESULT None None.GetAvailableDynamicObjectCount([out] UINT32 *value)
HRESULT None None.GetAvailableDynamicObjectCount([out] UINT32 *value)
HRESULT None None.GetDevicePreferredFormat([out] PKSDATAFORMAT *ppKsFormat)
NTSTATUS None None.StreamClassRegisterMinidriver(_In_ PVOID Argument1,_In_ PVOID Argument2,_In_ PHW_INITIALIZATION_DATA HwInitializationData)
HRESULT None None.GetAudioObjectType([out] AudioObjectType *audioObjectType)
DWORD None winmm.waveOutMessage(HWAVEOUT deviceID None,UINT uMsg None,DWORD_PTR dwParam1 None,DWORD_PTR dwParam2 None)
HRESULT None None.SendEndOfStream([in] UINT32 frameCount)
NTSTATUS None None.StreamClassRegisterMinidriver(_In_ PVOID Argument1,_In_ PVOID Argument2,_In_ PHW_INITIALIZATION_DATA HwInitializationData)
HRESULT None None.SendEndOfStream([in] UINT32 frameCount)
HRESULT None None.OnDisplayNameChanged([in] LPCWSTR NewDisplayName,[in] LPCGUID EventContext)
HRESULT None wmp.put_name([in] BSTR bstrName)
VOID None None.StreamClassDeviceNotification(_In_ STREAM_MINIDRIVER_DEVICE_NOTIFICATION_TYPE NotificationType,_In_ PVOID HwDeviceExtension,PHW_STREAM_REQUEST_BLOCK pSrb None,PKSEVENT_ENTRY EventEntry None,GUID *EventSet None,ULONG EventId None)
void None wmp.CurrentPlaylistChange([in] WMPPlaylistChangeEventType change)
HRESULT None wmp.get_maxBitRate([out] long *plBitRate)
HRESULT None None.GetFrameCount([out] UINT16 *frameCount)
HRESULT None wmp.put_label([in] BSTR bstrLabel)
HRESULT None None.GetCount([out] UINT32 count)
public void None.playItem(IWMPMedia pIWMPMedia None)
HRESULT None None.UnregisterEndpointNotificationCallback([in] IMMNotificationClient *pNotify)
HRESULT None None.InvokeCommand([in] DWORD dwCommandID,[in] BSTR location,[in] VARIANT *pLocationContext,[in] BSTR itemLocation,[in] ULONG cItemIDs,[in] ULONG *rgItemIDs)
HRESULT None None.GetSpatialAudioMetadataItems([out] ISpatialAudioMetadataItems **metadataItems)
HRESULT None None.SetGain([in] float gain)
HRESULT None None.allowPlay([in] HWND hwnd,[in] IWMPMedia *pMedia,[out] BOOL *pfAllowPlay)
HRESULT None None.GetListContents([in] BSTR location,[in] VARIANT *pContext,[in] BSTR bstrListType,[in] BSTR bstrParams,[in] DWORD dwListCookie)
void None wmp.CdromRipStateChange([in] IWMPCdromRip *pCdromRip,[in] WMPRipState wmprs)
function None None.setindex(idx None None)
HRESULT None None.GetAllVolumes([in] UINT32 dwCount,[out] float *pfVolumes)
public void None.setProxyName(System.String bstrProtocol None,System.String bstrProxyName None)
private void None.weblist_SelectedIndexChanged(object sender None,System.EventArgs e None)
HRESULT None None.GetType([out] VARTYPE *pVType)
public void None.removeItem(IWMPMedia pIWMPMedia None)
public IWMPPlaylist None.getByAttributeAndMediaType(System.String bstrAttribute None,System.String bstrValue None,System.String bstrMediaType None)
HRESULT None None.GetFrameCount([out] UINT16 *frameCount)
HRESULT None wmp.get_receptionQuality([out] long *plReceptionQuality)
void None wmp.MediaCollectionMediaRemoved([in] IDispatch *pdispMedia)
HRESULT None wmp.setProxySettings([in] BSTR bstrProtocol,[in] long lProxySetting)
HRESULT None wmp.requestMediaAccessRights([in] BSTR bstrDesiredAccess,[out] VARIANT_BOOL *pvbAccepted)
HRESULT None wmp.get_recoveredPackets([out] long *plRecoveredPackets)
HRESULT None None.Buy([in] IWMPContentContainerList *pInfo,[in] DWORD cookie)
private void None.fastReverseButton_Click(object o None,System.EventArgs args None)
HRESULT None None.CanBuySilent([in] IWMPContentContainerList *pInfo,[out] BSTR *pbstrTotalPrice,[out] VARIANT_BOOL *pSilentOK)
NTSTATUS None None.StreamClassRegisterMinidriver(_In_ PVOID Argument1,_In_ PVOID Argument2,_In_ PHW_INITIALIZATION_DATA HwInitializationData)
HRESULT None None.Notify([in] WMPPartnerNotification type,[in] VARIANT *pContext)
HRESULT None wmp.insertItem([in] long lIndex,[in] IWMPMedia *pIWMPMedia)
HRESULT None wmp.getSAMILangID([in] long nIndex,[out] long *plLangID)
public IWMPStringCollection None.getAttributeStringCollection(System.String bstrAttribute None,System.String bstrMediaType None)
HRESULT None None.GetAvailableDynamicObjectCount([out] UINT32 *value)
HRESULT None wmp.get_receivedPackets([out] long *plReceivedPackets)
private void None.showLostPackets_Click(object sender None,System.EventArgs e None)
public void None.setItemInfo(System.String bstrName None,System.String bstrValue None)
HRESULT None None.GetStreamingURL([in] WMPStreamingType st,[in] VARIANT *pStreamContext,[out] BSTR *pbstrURL)
HRESULT None None.GetFrameCount([out] UINT16 *frameCount)
public IWMPPlaylist None.newPlaylist(System.String bstrName None)
NTSTATUS None None.IoCallDriver(_In_ PDEVICE_OBJECT DeviceObject,_Inout_ PIRP Irp)
HRESULT None None.GetCommands([in] BSTR location,[in] VARIANT *pLocationContext,[in] BSTR itemLocation,[in] ULONG cItemIDs,[in] ULONG *prgItemIDs,[out] ULONG *pcItemIDs,[out] WMPContextMenuInfo **pprgItems)
public void None.openPlayer(System.String bstrURL None)
public IWMPPlaylist None.getByAuthor(System.String bstrAuthor None)
void None None.KsPinAttachAndGate(_In_ PKSPIN Pin,_In_opt_ PKSGATE AndGate)
private void None.player_ErrorEvent_clearErrorQueue(object sender None,System.EventArgs e None)
void None None.KsPinAttachOrGate(_In_ PKSPIN Pin,_In_opt_ PKSGATE OrGate)
private void None.nextButton_Click(object o None,System.EventArgs args None)
private void None.setNewName_Click(object sender None,System.EventArgs e None)
HRESULT None None.GetAudioObjectType([out] AudioObjectType *audioObjectType)
private void None.setNewName_Click(object sender None,System.EventArgs e None)
public IWMPPlaylist None.getByGenre(System.String bstrGenre None)
private void None.closeIt_Click(object sender None,System.EventArgs e None)
HRESULT None None.RefreshLicense([in] DWORD dwCookie,[in] VARIANT_BOOL fLocal,[in] BSTR bstrURL,[in] WMPStreamingType type,[in] ULONG contentID,[in] BSTR bstrRefreshReason,[in] VARIANT *pReasonContext)
HRESULT None None.ListContentsComplete([in] DWORD dwListCookie,[in] HRESULT hrSuccess)
HRESULT None None.GetBuffer([out] BYTE **buffer,[out] UINT32 *bufferLength)
HRESULT None None.allowPDATransfer([in] HWND hwnd,[in None None,out] IWMPPlaylist *pPlaylist,[out] BOOL *pfAllowTransfer)
HRESULT None None.GetContentPartnerInfo([in] BSTR bstrInfoName,[out] VARIANT *pData)
public void None.insertItem(System.Int32 lIndex None,IWMPMedia pIWMPMedia None)
HRESULT None None.Download([in] IWMPContentContainerList *pInfo,[in] DWORD cookie)
private void None.setPosition_Click(object sender None,System.EventArgs e None)
public void None.setProxySettings(System.String bstrProtocol None,System.Int32 lProxySetting None)
HRESULT None None.Authenticate([in] BLOB userInfo,[in] BLOB pwdInfo)
public IWMPPlaylist None.newPlaylist(System.String bstrName None,System.String bstrURL None)
public void None.setProxyPort(System.String bstrProtocol None,System.Int32 lProxyPort None)
HRESULT None wmp.get_frameRate([out] long *plFrameRate)
HRESULT None None.AddListContents([in] DWORD dwListCookie,[in] DWORD cItems,[in] DWORD *prgItems)
HRESULT None None.ActivateSpatialAudioObjectForMetadataCommands([in] AudioObjectType type,[out] ISpatialAudioObjectForMetadataCommands **audioObject)
public void None.step(System.Int32 lStep None)
private void None.showFramesSkipped_Click(object sender None,System.EventArgs e None)
public IWMPPlaylist None.getPlaylistByQuery(IWMPQuery pQuery None,System.String bstrMediaType None,System.String bstrSortAttribute None,System.Boolean fSortAscending None)
private void None.fastForwardButton_Click(object o None,System.EventArgs args None)
private void None.playButton_Click(object o None,System.EventArgs args None)
private void None.showLostPackets_Click(object sender None,System.EventArgs e None)
private void None.showLostPackets_Click(object sender None,System.EventArgs e None)
PIRP None None.IoBuildSynchronousFsdRequest(_In_ ULONG MajorFunction,_In_ PDEVICE_OBJECT DeviceObject,_Inout_ PVOID Buffer,_In_opt_ ULONG Length,_In_opt_ PLARGE_INTEGER StartingOffset,_In_ PKEVENT Event,_Out_ PIO_STATUS_BLOCK IoStatusBlock)
HRESULT None None.VerifyPermissionComplete([in] BSTR bstrPermission,[in] VARIANT *pContext,[in] HRESULT hrPermission)
public void None.openPlayer(System.String bstrURL None)
public void None.openPlayer(System.String bstrURL None)
public void None.openPlayer(System.String bstrURL None)
public void None.openPlayer(System.String bstrURL None)
public void None.launchURL(System.String bstrURL None)
public void None.launchURL(System.String bstrURL None)
public void None.launchURL(System.String bstrURL None)
public void None.launchURL(System.String bstrURL None)
HRESULT None None.prepareForSync([in] BSTR bstrFilename,[in] BSTR bstrDeviceName,[in] IWMPSubscriptionServiceCallback *pCB)
HRESULT None None.GetContentPartnerInfo([in] BSTR bstrInfoName,[out] VARIANT *pData)
public void None.launchURL(System.String bstrURL None)
public void None.launchURL(System.String bstrURL None)
public void None.launchURL(System.String bstrURL None)
public void None.insertItem(System.Int32 lIndex None,IWMPMedia pIWMPMedia None)
HRESULT None wmp.getSAMILangID([in] long nIndex,[out] long *plLangID)
HRESULT None None.RefreshLicenseComplete([in] DWORD dwCookie,[in] ULONG contentID,[in] HRESULT hrRefresh)
HRESULT None None.RefreshLicenseComplete([in] DWORD dwCookie,[in] ULONG contentID,[in] HRESULT hrRefresh)
public void None.setItemInfo(System.String bstrName None,System.String bstrValue None)
VOID None None.IoReleaseRemoveLock(_In_ PIO_REMOVE_LOCK RemoveLock,_In_ PVOID Tag)
private void None.pauseButton_Click(object o None,System.EventArgs args None)
private void None.player_ErrorEvent_get_Item(object sender None,System.EventArgs e None)
HRESULT None None.StationEvent([in] BSTR bstrStationEventType,[in] ULONG StationId,[in] ULONG PlaylistIndex,[in] ULONG TrackID,[in] BSTR TrackData,[in] DWORD dwSecondsPlayed)
public IWMPPlaylist None.getByAlbum(System.String bstrAlbum None)
private void None.previousButton_Click(object o None,System.EventArgs args None)
HRESULT None None.SendMessage([in] BSTR bstrMsg,[in] BSTR bstrParam)
HRESULT None None.AddListContents([in] DWORD dwListCookie,[in] DWORD cItems,[in] DWORD *prgItems)
public void None.remove(IWMPMedia pItem None,System.Boolean varfDeleteFile None)
PIRP None None.IoBuildDeviceIoControlRequest(_In_ ULONG IoControlCode,_In_ PDEVICE_OBJECT DeviceObject,_In_opt_ PVOID InputBuffer,_In_ ULONG InputBufferLength,_Out_opt_ PVOID OutputBuffer,_In_ ULONG OutputBufferLength,_In_ BOOLEAN InternalDeviceIoControl,_In_opt_ PKEVENT Event,_Out_ PIO_STATUS_BLOCK IoStatusBlock)
HRESULT None None.ListContentsComplete([in] DWORD dwListCookie,[in] HRESULT hrSuccess)
private void None.webHelpButton_Click(object sender None,System.EventArgs e None)
HRESULT None None.OnVolumeDuckNotification([in] LPCWSTR sessionID,[in] UINT32 countCommunicationsSessions)
HRESULT None None.InitBufferManager(IBufferManager* pManager None)
NTSTATUS None None.IoInitializeTimer(_In_ PDEVICE_OBJECT DeviceObject,_In_ PIO_TIMER_ROUTINE TimerRoutine,_In_opt_ PVOID Context)
HRESULT None None.GetContainerCount([out] ULONG *pcContainer)
HRESULT None wmp.removeItem([in] IWMPMedia *pIWMPMedia)
HRESULT None None.RefreshLicense([in] DWORD dwCookie,[in] VARIANT_BOOL fLocal,[in] BSTR bstrURL,[in] WMPStreamingType type,[in] ULONG contentID,[in] BSTR bstrRefreshReason,[in] VARIANT *pReasonContext)
public IWMPPlaylist None.getByAlbum(System.String bstrAlbum None)
private void None.player_ErrorEvent_get_Item(object sender None,System.EventArgs e None)
public IWMPPlaylist None.getPlaylistByQuery(IWMPQuery pQuery None,System.String bstrMediaType None,System.String bstrSortAttribute None,System.Boolean fSortAscending None)
HRESULT None None.DownloadTrackComplete([in] HRESULT hrResult,[in] ULONG contentID,[in] BSTR downloadTrackParam)
private void None.stopButton_Click(object o None,System.EventArgs args None)
HRESULT None None.startBackgroundProcessing([in] HWND hwnd)
HRESULT None None.GetCatalogURL([in] DWORD dwCatalogVersion,[in] DWORD dwCatalogSchemaVersion,[in] LCID catalogLCID,[out] DWORD *pdwNewCatalogVersion,[out] BSTR *pbstrCatalogURL,[out] VARIANT *pExpirationDate)
private void None.playButton_Click(object o None,System.EventArgs args None)
private void None.player_ErrorEvent_errorCount(object sender None,System.EventArgs e None)
private void None.nextButton_Click(object o None,System.EventArgs args None)
NTSTATUS None None.IoGetDeviceObjectPointer(_In_ PUNICODE_STRING ObjectName,_In_ ACCESS_MASK DesiredAccess,_Out_ PFILE_OBJECT *FileObject,_Out_ PDEVICE_OBJECT *DeviceObject)
public void None.moveItem(System.Int32 lIndexOld None,System.Int32 lIndexNew None)
private void None.pauseButton_Click(object o None,System.EventArgs args None)
VOID None None.IoStartNextPacket(_In_ PDEVICE_OBJECT DeviceObject,_In_ BOOLEAN Cancelable)
BOOLEAN None None.KeSetTimer(_Inout_ PKTIMER Timer,_In_ LARGE_INTEGER DueTime,_In_opt_ PKDPC Dpc)
VOID None None.IoCompleteRequest(_In_ PIRP Irp,_In_ CCHAR PriorityBoost)
VOID None None.IoStopTimer(_In_ PDEVICE_OBJECT DeviceObject)
HRESULT None None.StationEvent([in] BSTR bstrStationEventType,[in] ULONG StationId,[in] ULONG PlaylistIndex,[in] ULONG TrackID,[in] BSTR TrackData,[in] DWORD dwSecondsPlayed)
private void None.openMedia_Click(object sender None,System.EventArgs e None)
public void None.openPlayer(System.String bstrURL None)
public void None.setDeleted(IWMPMedia pItem None,System.Boolean varfIsDeleted None)
public IWMPPlaylist None.getByAlbum(System.String bstrAlbum None)
HRESULT None None.Login([in] BLOB userInfo,[in] BLOB pwdInfo,[in] VARIANT_BOOL fUsedCachedCreds,[in] VARIANT_BOOL fOkToCache)
VOID None None.KeInitializeTimer(_Out_ PKTIMER Timer)
NTSTATUS None None.PoCallDriver(_In_ PDEVICE_OBJECT DeviceObject,_Inout_ PIRP Irp)
VOID None None.IoSetCompletionRoutine(_In_ PIRP Irp,_In_opt_ PIO_COMPLETION_ROUTINE CompletionRoutine,_In_opt_ PVOID Context,_In_ BOOLEAN InvokeOnSuccess,_In_ BOOLEAN InvokeOnError,_In_ BOOLEAN InvokeOnCancel)
HRESULT None None.UpdateDeviceComplete([in] BSTR bstrDeviceName)
public void None.setMode(System.String bstrMode None,System.Boolean varfMode None)
HRESULT None None.VerifyPermission([in] BSTR bstrPermission,[in] VARIANT *pContext)
NTSTATUS None None.KeWaitForSingleObject(_In_ PVOID Object,_In_ KWAIT_REASON WaitReason,_In_ KPROCESSOR_MODE WaitMode,_In_ BOOLEAN Alertable,_In_opt_ PLARGE_INTEGER Timeout)
HRESULT None None.SetCallback([in] IWMPContentPartnerCallback *pCallback)
HRESULT None None.Notify([in] WMPCallbackNotification type,[in] VARIANT *pContext)
public void None.setProxyExceptionList(System.String bstrProtocol None,System.String pbstrExceptionList None)
public IWMPPlaylistArray None.getByName(System.String bstrName None)
HRESULT None None.get_Device(IDirect3DDevice9** ppDevice None)
private void None.showVersion_Click(object sender None,System.EventArgs e None)
public IWMPPlaylist None.getByAttribute(System.String bstrAttribute None,System.String bstrValue None)
HRESULT None None.UpdateDevice([in] BSTR bstrDeviceName)
public void None.setProxyPort(System.String bstrProtocol None,System.Int32 lProxyPort None)
public IWMPPlaylist None.newPlaylist(System.String bstrName None,System.String bstrURL None)
private void None.player_ErrorEvent_clearErrorQueue(object sender None,System.EventArgs e None)
private void None.setBufTime_Click(object sender None,System.EventArgs e None)
public IWMPMedia None.newMedia(System.String bstrURL None)
HRESULT None None.OnVolumeUnduckNotification([in] LPCWSTR sessionID,[in] UINT32 countCommunicationsSessions)
HRESULT None None.AllocSurface(FORMAT_TYPE type None,ISurface** ppBuffer None)
HRESULT None None.SendMessageComplete([in] BSTR bstrMsg,[in] BSTR bstrParam,[in] BSTR bstrResult)
private void None.player_ErrorEvent_errorCount(object sender None,System.EventArgs e None)
public void None.setProxyBypassForLocal(System.String bstrProtocol None,System.Boolean fBypassForLocal None)
public void None.setItemInfo(System.String bstrName None,System.String bstrValue None)
HRESULT None None.UpdateDeviceComplete([in] BSTR bstrDeviceName)
VOID None None.IoSetCompletionRoutine(_In_ PIRP Irp,_In_opt_ PIO_COMPLETION_ROUTINE CompletionRoutine,_In_opt_ PVOID Context,_In_ BOOLEAN InvokeOnSuccess,_In_ BOOLEAN InvokeOnError,_In_ BOOLEAN InvokeOnCancel)
private void None.player_ErrorEvent_errorCount(object sender None,System.EventArgs e None)
NTSTATUS None None.IoAcquireRemoveLock(_In_ PIO_REMOVE_LOCK RemoveLock,_In_opt_ PVOID Tag)
VOID None None.IoReleaseRemoveLockAndWait(_In_ PIO_REMOVE_LOCK RemoveLock,_In_ PVOID Tag)
HRESULT None None.Notify([in] WMPCallbackNotification type,[in] VARIANT *pContext)
VOID None None.IoReleaseRemoveLockAndWait(_In_ PIO_REMOVE_LOCK RemoveLock,_In_ PVOID Tag)
NTSTATUS None None.IoCreateDevice(_In_ PDRIVER_OBJECT DriverObject,_In_ ULONG DeviceExtensionSize,_In_opt_ PUNICODE_STRING DeviceName,_In_ DEVICE_TYPE DeviceType,_In_ ULONG DeviceCharacteristics,_In_ BOOLEAN Exclusive,_Out_ PDEVICE_OBJECT *DeviceObject)
PDEVICE_OBJECT None None.IoAttachDeviceToDeviceStack(_In_ PDEVICE_OBJECT SourceDevice,_In_ PDEVICE_OBJECT TargetDevice)
NTSTATUS None None.IoGetDeviceObjectPointer(_In_ PUNICODE_STRING ObjectName,_In_ ACCESS_MASK DesiredAccess,_Out_ PFILE_OBJECT *FileObject,_Out_ PDEVICE_OBJECT *DeviceObject)
NTSTATUS None None.IoAttachDevice(_In_ PDEVICE_OBJECT SourceDevice,_In_ PUNICODE_STRING TargetDevice,_Out_ PDEVICE_OBJECT *AttachedDevice)
HRESULT None None.GetCatalogURL([in] DWORD dwCatalogVersion,[in] DWORD dwCatalogSchemaVersion,[in] LCID catalogLCID,[out] DWORD *pdwNewCatalogVersion,[out] BSTR *pbstrCatalogURL,[out] VARIANT *pExpirationDate)
HRESULT None None.ShowPopup([in] long lIndex,[in] BSTR bstrParameters)
HRESULT None None.GetTemplate([in] WMPTaskType task,[in] BSTR location,[in] VARIANT *pContext,[in] BSTR clickLocation,[in] VARIANT *pClickContext,[in] BSTR bstrFilter,[in] BSTR bstrViewParams,[out] BSTR *pbstrTemplateURL,[out] WMPTemplateSize *pTemplateSize)
HRESULT None None.BuyComplete([in] HRESULT hrResult,[in] DWORD dwBuyCookie)
public IWMPPlaylist None.getByName(System.String bstrName None)
private void None.player_ErrorEvent_errorCount(object sender None,System.EventArgs e None)
HRESULT None None.GetContentIDsInLibrary([out] ULONG *pcContentIDs,[out] ULONG **pprgIDs)
HRESULT None None.GetCatalogVersion([out] DWORD *pdwVersion,[out] DWORD *pdwSchemaVersion,[out] LCID *plcid)
HRESULT None None.GetItemInfo([in] BSTR bstrInfoName,[in] VARIANT *pContext,[out] VARIANT *pData)
PDEVICE_OBJECT None None.IoAttachDeviceToDeviceStack(_In_ PDEVICE_OBJECT SourceDevice,_In_ PDEVICE_OBJECT TargetDevice)
HRESULT None None.OnVolumeUnduckNotification([in] LPCWSTR sessionID,[in] UINT32 countCommunicationsSessions)
private void None.nextButton_Click(object o None,System.EventArgs args None)
public void None.appendItem(IWMPMedia pIWMPMedia None)
NTSTATUS None None.IoCreateDevice(_In_ PDRIVER_OBJECT DriverObject,_In_ ULONG DeviceExtensionSize,_In_opt_ PUNICODE_STRING DeviceName,_In_ DEVICE_TYPE DeviceType,_In_ ULONG DeviceCharacteristics,_In_ BOOLEAN Exclusive,_Out_ PDEVICE_OBJECT *DeviceObject)
VOID None None.KeBugCheckEx(_In_ ULONG BugCheckCode,_In_ ULONG_PTR BugCheckParameter1,_In_ ULONG_PTR BugCheckParameter2,_In_ ULONG_PTR BugCheckParameter3,_In_ ULONG_PTR BugCheckParameter4)
private void None.nextButton_Click(object o None,System.EventArgs args None)
VOID None None.IoMarkIrpPending(_Inout_ PIRP Irp)
private void None.playButton_Click(object o None,System.EventArgs args None)
private void None.playButton_Click(object o None,System.EventArgs args None)
private void None.player_ErrorEvent_errorDescription(object sender None,System.EventArgs e None)
NTSTATUS None None.PoCallDriver(_In_ PDEVICE_OBJECT DeviceObject,_Inout_ PIRP Irp)
NTSTATUS None None.KeWaitForMultipleObjects(_In_ ULONG Count,_In_ PVOID Object[],_In_ WAIT_TYPE WaitType,_In_ KWAIT_REASON WaitReason,_In_ KPROCESSOR_MODE WaitMode,_In_ BOOLEAN Alertable,_In_opt_ PLARGE_INTEGER Timeout,_Out_opt_ PKWAIT_BLOCK WaitBlockArray)
private void None.playbackRate_Click(object sender None,System.EventArgs e None)
private void None.setBufTime_Click(object sender None,System.EventArgs e None)
HRESULT None None.GetContainer([in] ULONG idxContainer,[out] IWMPContentContainer **ppContent)
NTSTATUS None None.IoCsqInsertIrpEx(_Inout_ PIO_CSQ Csq,_Inout_ PIRP Irp,_Out_opt_ PIO_CSQ_IRP_CONTEXT Context,_In_opt_ PVOID InsertContext)
PDEVICE_OBJECT None None.IoAttachDeviceToDeviceStack(_In_ PDEVICE_OBJECT SourceDevice,_In_ PDEVICE_OBJECT TargetDevice)
public void None.setDeleted(IWMPMedia pItem None,System.Boolean varfIsDeleted None)
HRESULT None None.BuyComplete([in] HRESULT hrResult,[in] DWORD dwBuyCookie)
HRESULT None None.GetContentIDsInLibrary([out] ULONG *pcContentIDs,[out] ULONG **pprgIDs)
VOID None None.KeInitializeTimerEx(_Out_ PKTIMER Timer,_In_ TIMER_TYPE Type)
public void None.setProxyBypassForLocal(System.String bstrProtocol None,System.Boolean fBypassForLocal None)
HRESULT None None.get_Flags(FORMAT_TYPE* pdwFlags None)
public void None.setProxyBypassForLocal(System.String bstrProtocol None,System.Boolean fBypassForLocal None)
NTSTATUS None None.IoCreateDevice(_In_ PDRIVER_OBJECT DriverObject,_In_ ULONG DeviceExtensionSize,_In_opt_ PUNICODE_STRING DeviceName,_In_ DEVICE_TYPE DeviceType,_In_ ULONG DeviceCharacteristics,_In_ BOOLEAN Exclusive,_Out_ PDEVICE_OBJECT *DeviceObject)
LONG None None.KeReadStateMutex(_In_ PRKMUTEX Mutex)
private void None.Mute_CheckStateChanged(object sender None,System.EventArgs e None)
NTSTATUS None None.ZwQueryFullAttributesFile(_In_ POBJECT_ATTRIBUTES ObjectAttributes,_Out_ PFILE_NETWORK_OPEN_INFORMATION FileInformation)
PLIST_ENTRY None None.ExInterlockedInsertHeadList(_Inout_ PLIST_ENTRY ListHead,_Inout_ PLIST_ENTRY ListEntry,_Inout_ PKSPIN_LOCK Lock)
BOOLEAN None None.KeCancelTimer(_Inout_ PKTIMER Timer)
public void None.moveItem(System.Int32 lIndexOld None,System.Int32 lIndexNew None)
VOID None None.IoDetachDevice(_Inout_ PDEVICE_OBJECT TargetDevice)
VOID None None.ObDereferenceObject(_In_ PVOID Object)
PLIST_ENTRY None None.ExInterlockedInsertTailList(_Inout_ PLIST_ENTRY ListHead,_Inout_ PLIST_ENTRY ListEntry,_Inout_ PKSPIN_LOCK Lock)
NTSTATUS None None.IoAttachDevice(_In_ PDEVICE_OBJECT SourceDevice,_In_ PUNICODE_STRING TargetDevice,_Out_ PDEVICE_OBJECT *AttachedDevice)
PLIST_ENTRY None None.ExInterlockedInsertTailList(_Inout_ PLIST_ENTRY ListHead,_Inout_ PLIST_ENTRY ListEntry,_Inout_ PKSPIN_LOCK Lock)
HRESULT None None.AllocSurface(FORMAT_TYPE type None,ISurface** ppBuffer None)
VOID None None.KeInitializeMutex(_Out_ PRKMUTEX Mutex,_In_ ULONG Level)
public void None.setDeleted(IWMPMedia pItem None,System.Boolean varfIsDeleted None)
VOID None None.ExWaitForRundownProtectionRelease(_Inout_ PEX_RUNDOWN_REF RunRef)
PSINGLE_LIST_ENTRY None None.ExInterlockedPushEntryList(_Inout_ PSINGLE_LIST_ENTRY ListHead,_Inout_ PSINGLE_LIST_ENTRY ListEntry,_Inout_ PKSPIN_LOCK Lock)
BOOLEAN None None.PsGetVersion(_Out_opt_ PULONG MajorVersion,_Out_opt_ PULONG MinorVersion,_Out_opt_ PULONG BuildNumber,_Out_opt_ PUNICODE_STRING CSDVersion)
public IWMPPlaylist None.importPlaylist(IWMPPlaylist pItem None)
HRESULT None None.get_Monitor(HMONITOR* phMon None)
NTSTATUS None None.ExInitializeResourceLite(_Out_ PERESOURCE Resource)
LONG None None.KeReadStateMutex(_In_ PRKMUTEX Mutex)
NTSTATUS None None.ZwDeviceIoControlFile(_In_ HANDLE FileHandle,_In_opt_ HANDLE Event,_In_opt_ PIO_APC_ROUTINE ApcRoutine,_In_opt_ PVOID ApcContext,_Out_ PIO_STATUS_BLOCK IoStatusBlock,_In_ ULONG IoControlCode,_In_opt_ PVOID InputBuffer,_In_ ULONG InputBufferLength,_Out_opt_ PVOID OutputBuffer,_In_ ULONG OutputBufferLength)
VOID None None.IoDetachDevice(_Inout_ PDEVICE_OBJECT TargetDevice)
HRESULT None None.VerifyPermission([in] BSTR bstrPermission,[in] VARIANT *pContext)
VOID None None.IoDeleteDevice(_In_ PDEVICE_OBJECT DeviceObject)
NTSTATUS None None.ZwRollbackComplete(_In_ HANDLE EnlistmentHandle,_In_opt_ PLARGE_INTEGER TmVirtualClock)
public IWMPPlaylist None.getByName(System.String bstrName None)
public void None.setDeleted(IWMPMedia pItem None,System.Boolean varfIsDeleted None)
NTSTATUS None None.IoSetDeviceInterfaceState(_In_ PUNICODE_STRING SymbolicLinkName,_In_ BOOLEAN Enable)
private void None.player_ErrorEvent_errorDescription(object sender None,System.EventArgs e None)
NTSTATUS None None.PoRequestPowerIrp(_In_ PDEVICE_OBJECT DeviceObject,_In_ UCHAR MinorFunction,_In_ POWER_STATE PowerState,_In_opt_ PREQUEST_POWER_COMPLETE CompletionFunction,_In_opt_ PVOID Context,_Out_ PIRP *Irp)
public IWMPPlaylistArray None.getByName(System.String bstrName None)
NTSTATUS None None.IoRegisterPlugPlayNotification(_In_ IO_NOTIFICATION_EVENT_CATEGORY EventCategory,_In_ ULONG EventCategoryFlags,_In_opt_ PVOID EventCategoryData,_In_ PDRIVER_OBJECT DriverObject,_In_ PDRIVER_NOTIFICATION_CALLBACK_ROUTINE CallbackRoutine,_In_opt_ PVOID Context,_Out_ PVOID *NotificationEntry)
BOOLEAN None None.ExAcquireResourceExclusiveLite(_Inout_ PERESOURCE Resource,_In_ BOOLEAN Wait)
BOOLEAN None None.KeReadStateTimer(_In_ PKTIMER Timer)
VOID None None.KeSetSystemAffinityThread(_In_ KAFFINITY Affinity)
VOID None None.IoAssignArcName(_In_ PUNICODE_STRING ArcName,_In_ PUNICODE_STRING DeviceName)
VOID None None.ProbeForWrite(_Inout_ PVOID Address,_In_ SIZE_T Length,_In_ ULONG Alignment)
NTSTATUS None None.IoSetCompletionRoutineEx(_In_ PDEVICE_OBJECT DeviceObject,_In_ PIRP Irp,_In_ PIO_COMPLETION_ROUTINE CompletionRoutine,_In_opt_ PVOID Context,_In_ BOOLEAN InvokeOnSuccess,_In_ BOOLEAN InvokeOnError,_In_ BOOLEAN InvokeOnCancel)
NTSTATUS None None.ExUuidCreate(_Out_ UUID *Uuid)
KIRQL None None.KeAcquireSpinLockForDpc(_Inout_ PKSPIN_LOCK SpinLock)
HRESULT None None.GetSurface(IBuffer* pBuffer None,IDirect3DSurface9** ppSurface None)
VOID None None.MmLockPagableSectionByHandle(_In_ PVOID ImageSectionHandle)
BOOLEAN None None.KeTryToAcquireSpinLockAtDpcLevel(_Inout_ PKSPIN_LOCK SpinLock)
NTSTATUS None None.ZwPrepareEnlistment(_In_ HANDLE EnlistmentHandle,_In_opt_ PLARGE_INTEGER TmVirtualClock)
VOID None None.IoDetachDevice(_Inout_ PDEVICE_OBJECT TargetDevice)
NTSTATUS None None.ZwQueryInformationResourceManager(_In_ HANDLE ResourceManagerHandle,_In_ RESOURCEMANAGER_INFORMATION_CLASS ResourceManagerInformationClass,_Out_ PVOID ResourceManagerInformation,_In_ ULONG ResourceManagerInformationLength,_Out_opt_ PULONG ReturnLength)
VOID None None.IoSetStartIoAttributes(_In_ PDEVICE_OBJECT DeviceObject,_In_ BOOLEAN DeferredStartIo,_In_ BOOLEAN NonCancelable)
NTSTATUS None None.ZwQueryInformationTransactionManager(_In_ HANDLE TransactionManagerHandle,_In_ TRANSACTIONMANAGER_INFORMATION_CLASS TransactionManagerInformationClass,_Out_ PVOID TransactionManagerInformation,_In_ ULONG TransactionManagerInformationLength,_Out_opt_ PULONG ReturnLength)
NTSTATUS None None.ZwPrepareComplete(_In_ HANDLE EnlistmentHandle,_In_opt_ PLARGE_INTEGER TmVirtualClock)
VOID None None.KeInitializeSemaphore(_Out_ PRKSEMAPHORE Semaphore,_In_ LONG Count,_In_ LONG Limit)
VOID None None.IoInitializeIrp(_Inout_ PIRP Irp,_In_ USHORT PacketSize,_In_ CCHAR StackSize)
ULONG None None.ExIsResourceAcquiredLite(_In_ PERESOURCE Resource)
NTSTATUS None None.ZwCreateResourceManager(_Out_ PHANDLE ResourceManagerHandle,_In_ ACCESS_MASK DesiredAccess,_In_ HANDLE TmHandle,_In_opt_ LPGUID ResourceManagerGuid,_In_opt_ POBJECT_ATTRIBUTES ObjectAttributes,_In_opt_ ULONG CreateOptions,_In_opt_ PUNICODE_STRING Description)
NTSTATUS None None.ZwOpenKey(_Out_ PHANDLE KeyHandle,_In_ ACCESS_MASK DesiredAccess,_In_ POBJECT_ATTRIBUTES ObjectAttributes)
VOID None None.ExReleaseFastMutexUnsafe(_Inout_ PFAST_MUTEX FastMutex)
VOID None None.IoCopyCurrentIrpStackLocationToNext(_Inout_ PIRP Irp)
VOID None None.MmFreeNonCachedMemory(_In_ PVOID BaseAddress,_In_ SIZE_T NumberOfBytes)
VOID None None.KeSetSystemGroupAffinityThread(_In_ PGROUP_AFFINITY Affinity,_Out_opt_ PGROUP_AFFINITY PreviousAffinity)
private void None.fullScreen_Click(object sender None,System.EventArgs e None)
NTSTATUS None None.ZwQueryEaFile(__in HANDLE FileHandle,__out PIO_STATUS_BLOCK IoStatusBlock,__out PVOID Buffer,__in ULONG Length,__in BOOLEAN ReturnSingleEntry,__in_opt PVOID EaList,__in ULONG EaListLength,__in_opt PULONG EaIndex,__in BOOLEAN RestartScan)
NTSTATUS None None.ZwUnlockFile(_In_ HANDLE FileHandle,_Out_ PIO_STATUS_BLOCK IoStatusBlock,_In_ PLARGE_INTEGER ByteOffset,_In_ PLARGE_INTEGER Length,_In_ ULONG Key)
HRESULT None None.Login([in] BLOB userInfo,[in] BLOB pwdInfo,[in] VARIANT_BOOL fUsedCachedCreds,[in] VARIANT_BOOL fOkToCache)
NTSTATUS None None.SeDeassignSecurity(_Inout_ PSECURITY_DESCRIPTOR *SecurityDescriptor)
PKDEVICE_QUEUE_ENTRY None None.KeRemoveDeviceQueue(_Inout_ PKDEVICE_QUEUE DeviceQueue)
VOID None None.InitializeListHead(_Out_ PLIST_ENTRY ListHead)
private void None.player_ErrorEvent_errorCount(object sender None,System.EventArgs e None)
VOID None None.ExReleaseResourceForThreadLite(_Inout_ PERESOURCE Resource,_In_ ERESOURCE_THREAD ResourceThreadId)
public void None.setMode(System.String bstrMode None,System.Boolean varfMode None)
VOID None None.KeReleaseGuardedMutex(_Inout_ PKGUARDED_MUTEX Mutex)
NTSTATUS None None.IoRegisterLastChanceShutdownNotification(_In_ PDEVICE_OBJECT DeviceObject)
VOID None None.KeReleaseInterruptSpinLock(_Inout_ PKINTERRUPT Interrupt,_In_ KIRQL OldIrql)
VOID None None.MmUnlockPagableImageSection(_In_ PVOID ImageSectionHandle)
VOID None None.IoUpdateShareAccess(_In_ PFILE_OBJECT FileObject,_Inout_ PSHARE_ACCESS ShareAccess)
NTSTATUS None None.ZwWriteFile(_In_ HANDLE FileHandle,_In_opt_ HANDLE Event,_In_opt_ PIO_APC_ROUTINE ApcRoutine,_In_opt_ PVOID ApcContext,_Out_ PIO_STATUS_BLOCK IoStatusBlock,_In_ PVOID Buffer,_In_ ULONG Length,_In_opt_ PLARGE_INTEGER ByteOffset,_In_opt_ PULONG Key)
NTSTATUS None None.ObGetObjectSecurity(_In_ PVOID Object,_Out_ PSECURITY_DESCRIPTOR *SecurityDescriptor,_Out_ PBOOLEAN MemoryAllocated)
NTSTATUS None None.IoCreateUnprotectedSymbolicLink(_In_ PUNICODE_STRING SymbolicLinkName,_In_ PUNICODE_STRING DeviceName)
PLIST_ENTRY None None.ExInterlockedInsertTailList(_Inout_ PLIST_ENTRY ListHead,_Inout_ PLIST_ENTRY ListEntry,_Inout_ PKSPIN_LOCK Lock)
PVOID None None.IoAllocateErrorLogEntry(_In_ PVOID IoObject,_In_ UCHAR EntrySize)
NTSTATUS None None.IoCsqInitializeEx(_Out_ PIO_CSQ Csq,_In_ PIO_CSQ_INSERT_IRP_EX CsqInsertIrp,_In_ PIO_CSQ_REMOVE_IRP CsqRemoveIrp,_In_ PIO_CSQ_PEEK_NEXT_IRP CsqPeekNextIrp,_In_ PIO_CSQ_ACQUIRE_LOCK CsqAcquireLock,_In_ PIO_CSQ_RELEASE_LOCK CsqReleaseLock,_In_ PIO_CSQ_COMPLETE_CANCELED_IRP CsqCompleteCanceledIrp)
NTSTATUS None None.IoWMIAllocateInstanceIds(_In_ GUID *Guid,_In_ ULONG InstanceCount,_Out_ ULONG *FirstInstanceId)
NTSTATUS None None.ZwReadFile(_In_ HANDLE FileHandle,_In_opt_ HANDLE Event,_In_opt_ PIO_APC_ROUTINE ApcRoutine,_In_opt_ PVOID ApcContext,_Out_ PIO_STATUS_BLOCK IoStatusBlock,_Out_ PVOID Buffer,_In_ ULONG Length,_In_opt_ PLARGE_INTEGER ByteOffset,_In_opt_ PULONG Key)
NTSTATUS None None.ZwDeleteKey(_In_ HANDLE KeyHandle)
VOID None None.ExRaiseDatatypeMisalignment(void None None)
NTSTATUS None None.ZwTerminateProcess(_In_opt_ HANDLE ProcessHandle,_In_ NTSTATUS ExitStatus)
NTSTATUS None None.IoUnregisterPlugPlayNotificationEx(_In_ PVOID NotificationEntry)
NTSTATUS None None.ZwSetInformationTransaction(_In_ HANDLE TransactionHandle,_In_ TRANSACTION_INFORMATION_CLASS TransactionInformationClass,_In_ PVOID TransactionInformation,_In_ ULONG TransactionInformationLength)
NTSTATUS None None.ZwRollbackEnlistment(_In_ HANDLE EnlistmentHandle,_In_opt_ PLARGE_INTEGER TmVirtualClock)
NTSTATUS None None.KsAddItemToObjectBag(_In_ KSOBJECT_BAG ObjectBag,_In_ PVOID Item,_In_opt_ PFNKSFREE Free)
NTSTATUS None None.RtlGetVersion(_Out_ PRTL_OSVERSIONINFOW lpVersionInformation)
HRESULT None None.ChangeView([in] BSTR bstrType,[in] BSTR bstrID,[in] BSTR bstrFilter)
HRESULT None None.UpdateDevice([in] BSTR bstrDeviceName)
NTSTATUS None None.BuildMdlFromScatterGatherList(_In_ PADAPTER_OBJECT DmaAdapter,_In_ PSCATTER_GATHER_LIST ScatterGather,_In_ PMDL OriginalMdl,_Out_ PMDL *TargetMdl)
NTSTATUS None None.ZwMakeTemporaryObject(_In_ HANDLE Handle)
private void None.showVersion_Click(object sender None,System.EventArgs e None)
BOOLEAN None None.ExIsResourceAcquiredExclusiveLite(_In_ PERESOURCE Resource)
NTSTATUS None None.IoRegisterPlugPlayNotification(_In_ IO_NOTIFICATION_EVENT_CATEGORY EventCategory,_In_ ULONG EventCategoryFlags,_In_opt_ PVOID EventCategoryData,_In_ PDRIVER_OBJECT DriverObject,_In_ PDRIVER_NOTIFICATION_CALLBACK_ROUTINE CallbackRoutine,_In_opt_ PVOID Context,_Out_ PVOID *NotificationEntry)
VOID None None.InsertHeadList(_Inout_ PLIST_ENTRY ListHead,_Inout_ PLIST_ENTRY Entry)
LONG None None.KeResetEvent(_Inout_ PRKEVENT Event)
PIRP None None.IoAllocateIrp(_In_ CCHAR StackSize,_In_ BOOLEAN ChargeQuota)
VOID None None.IoWriteErrorLogEntry(_In_ PVOID ElEntry)
VOID None None.MyPowerCompletion(__in PDEVICE_OBJECT DeviceObject,__in UCHAR MinorFunction,__in POWER_STATE PowerState,__in_opt PVOID Context,__in PIO_STATUS_BLOCK IoStatus)
NTSTATUS None None.ZwPowerInformation(_In_ POWER_INFORMATION_LEVEL InformationLevel,_In_opt_ PVOID InputBuffer,_In_ ULONG InputBufferLength,_Out_opt_ PVOID OutputBuffer,_In_ ULONG OutputBufferLength)
VOID None None.IoRequestDpc(_In_ PDEVICE_OBJECT DeviceObject,_In_ PIRP Irp,_In_ PVOID Context)
private void None.player_ErrorEvent_errorDescription(object sender None,System.EventArgs e None)
NTSTATUS None None.KeWaitForMutexObject(_In_ PVOID Mutex,_In_ KWAIT_REASON WaitReason,_In_ KPROCESSOR_MODE WaitMode,_In_ BOOLEAN Alertable,_In_opt_ PLARGE_INTEGER Timeout)
VOID None None.IoFreeController(_In_ PCONTROLLER_OBJECT ControllerObject)
private void None.Mute_CheckStateChanged(object sender None,System.EventArgs e None)
LONG None None.KeSetEvent(_Inout_ PRKEVENT Event,_In_ KPRIORITY Increment,_In_ BOOLEAN Wait)
NTSTATUS None None.IoUnregisterPlugPlayNotification(_In_ PVOID NotificationEntry)
HRESULT None None.get_Flags(FORMAT_TYPE* pdwFlags None)
NTSTATUS None None.ZwSetInformationToken(_In_ HANDLE TokenHandle,_In_ TOKEN_INFORMATION_CLASS TokenInformationClass,_In_ PVOID TokenInformation,_In_ ULONG TokenInformationLength)
private void None.player_ErrorEvent_errorDescription(object sender None,System.EventArgs e None)
public IWMPPlaylistArray None.getByName(System.String bstrName None)
private void None.showVersion_Click(object sender None,System.EventArgs e None)
private void None.Mute_CheckStateChanged(object sender None,System.EventArgs e None)
private void None.setBufTime_Click(object sender None,System.EventArgs e None)
NTSTATUS None None.TmPrepareEnlistment(_In_ PKENLISTMENT Enlistment,_In_ PLARGE_INTEGER TmVirtualClock)
private void None.openMedia_Click(object sender None,System.EventArgs e None)
private void None.playbackRate_Click(object sender None,System.EventArgs e None)
BOOLEAN None None.ExTryToAcquireFastMutex(_Inout_ PFAST_MUTEX FastMutex)
NTSTATUS None None.ZwCreateKey(_Out_ PHANDLE KeyHandle,_In_ ACCESS_MASK DesiredAccess,_In_ POBJECT_ATTRIBUTES ObjectAttributes,_Reserved_ ULONG TitleIndex,_In_opt_ PUNICODE_STRING Class,_In_ ULONG CreateOptions,_Out_opt_ PULONG Disposition)
PVOID None None.MmLockPagableDataSection(_In_ PVOID AddressWithinSection)
LONG None None.KeReleaseSemaphore(_Inout_ PRKSEMAPHORE Semaphore,_In_ KPRIORITY Increment,_In_ LONG Adjustment,_In_ BOOLEAN Wait)
BOOLEAN None None.ExAcquireResourceSharedLite(_Inout_ PERESOURCE Resource,_In_ BOOLEAN Wait)
BOOLEAN None None.KeRemoveEntryDeviceQueue(_Inout_ PKDEVICE_QUEUE DeviceQueue,_Inout_ PKDEVICE_QUEUE_ENTRY DeviceQueueEntry)
VOID None None.KeInitializeSpinLock(_Out_ PKSPIN_LOCK SpinLock)
NTSTATUS None None.ObReferenceObjectByHandle(_In_ HANDLE Handle,_In_ ACCESS_MASK DesiredAccess,_In_opt_ POBJECT_TYPE ObjectType,_In_ KPROCESSOR_MODE AccessMode,_Out_ PVOID *Object,_Out_opt_ POBJECT_HANDLE_INFORMATION HandleInformation)
NTSTATUS None None.ZwGetNotificationResourceManager(_In_ HANDLE ResourceManagerHandle,_Out_ PTRANSACTION_NOTIFICATION TransactionNotification,_In_ ULONG NotificationLength,_In_ PLARGE_INTEGER Timeout,_Out_opt_ PULONG ReturnLength,_In_ ULONG Asynchronous,_In_opt_ ULONG_PTR AsynchronousContext)
VOID None None.IoFreeErrorLogEntry(_In_ PVOID ElEntry)
ULONG None None.ExIsResourceAcquiredSharedLite(_In_ PERESOURCE Resource)
BOOLEAN None None.KeReadStateTimer(_In_ PKTIMER Timer)
BOOLEAN None None.KeTryToAcquireSpinLockAtDpcLevel(_Inout_ PKSPIN_LOCK SpinLock)
BOOLEAN None None.ExAcquireResourceExclusiveLite(_Inout_ PERESOURCE Resource,_In_ BOOLEAN Wait)
PKDEVICE_QUEUE_ENTRY None None.KeRemoveDeviceQueue(_Inout_ PKDEVICE_QUEUE DeviceQueue)
VOID None None.IoCsqInsertIrp(_Inout_ PIO_CSQ Csq,_Inout_ PIRP Irp,_Out_opt_ PIO_CSQ_IRP_CONTEXT Context)
PIO_STACK_LOCATION None None.IoGetCurrentIrpStackLocation(_In_ PIRP Irp)
VOID None None.IoRaiseHardError(_In_ PIRP Irp,_In_opt_ PVPB Vpb,_In_ PDEVICE_OBJECT RealDeviceObject)
PVOID None None.MmMapLockedPages(_In_ PMDL MemoryDescriptorList,_In_ KPROCESSOR_MODE AccessMode)
NTSTATUS None None.ZwQueryInformationEnlistment(_In_ HANDLE EnlistmentHandle,_In_ ENLISTMENT_INFORMATION_CLASS EnlistmentInformationClass,_Out_ PVOID EnlistmentInformation,_In_ ULONG EnlistmentInformationLength,_Out_opt_ PULONG ReturnLength)
PVOID None None.ExAllocatePoolWithTagPriority(_In_ POOL_TYPE PoolType,_In_ SIZE_T NumberOfBytes,_In_ ULONG Tag,_In_ EX_POOL_PRIORITY Priority)
NTSTATUS None None.ZwSetEaFile(__in HANDLE FileHandle,__out PIO_STATUS_BLOCK IoStatusBlock,__in PVOID Buffer,__in ULONG Length)
NTSTATUS None None.ZwRecoverEnlistment(_In_ HANDLE EnlistmentHandle,_In_opt_ PVOID EnlistmentKey)
NTSTATUS None None.KeDelayExecutionThread(_In_ KPROCESSOR_MODE WaitMode,_In_ BOOLEAN Alertable,_In_ PLARGE_INTEGER Interval)
NTSTATUS None None.ZwSetValueKey(_In_ HANDLE KeyHandle,_In_ PUNICODE_STRING ValueName,_In_opt_ ULONG TitleIndex,_In_ ULONG Type,_In_opt_ PVOID Data,_In_ ULONG DataSize)
NTSTATUS None None.ZwOpenProcess(_Out_ PHANDLE ProcessHandle,_In_ ACCESS_MASK DesiredAccess,_In_ POBJECT_ATTRIBUTES ObjectAttributes,_In_opt_ PCLIENT_ID ClientId)
NTSTATUS None None.ZwSetInformationEnlistment(_In_ HANDLE EnlistmentHandle,_In_ ENLISTMENT_INFORMATION_CLASS EnlistmentInformationClass,_In_ PVOID EnlistmentInformation,_In_ ULONG EnlistmentInformationLength)
BOOLEAN None None.KeTryToAcquireGuardedMutex(_Inout_ PKGUARDED_MUTEX Mutex)
ULONG None None.ExGetSharedWaiterCount(_In_ PERESOURCE Resource)
NTSTATUS None None.ZwFreeVirtualMemory(_In_ HANDLE ProcessHandle,_Inout_ PVOID *BaseAddress,_Inout_ PSIZE_T RegionSize,_In_ ULONG FreeType)
VOID None None.ExSetResourceOwnerPointer(_Inout_ PERESOURCE Resource,_In_ PVOID OwnerPointer)
VOID None None.MmUnsecureVirtualMemory(_In_ HANDLE SecureHandle)
NTSTATUS None None.ZwWaitForSingleObject(_In_ HANDLE Handle,_In_ BOOLEAN Alertable,_In_opt_ PLARGE_INTEGER Timeout)
BOOLEAN None None.SeSinglePrivilegeCheck(_In_ LUID PrivilegeValue,_In_ KPROCESSOR_MODE PreviousMode)
NTSTATUS None None.ZwEnumerateValueKey(_In_ HANDLE KeyHandle,_In_ ULONG Index,_In_ KEY_VALUE_INFORMATION_CLASS KeyValueInformationClass,_Out_opt_ PVOID KeyValueInformation,_In_ ULONG Length,_Out_ PULONG ResultLength)
NTSTATUS None None.ZwQueryInformationTransaction(_In_ HANDLE TransactionHandle,_In_ TRANSACTION_INFORMATION_CLASS TransactionInformationClass,_Out_ PVOID TransactionInformation,_In_ ULONG TransactionInformationLength,_Out_opt_ PULONG ReturnLength)
NTSTATUS None None.IoGetDeviceNumaNode(_In_ PDEVICE_OBJECT Pdo,_Out_ PUSHORT NodeNumber)
VOID None None.HalExamineMBR(_In_ PDEVICE_OBJECT DeviceObject,_In_ ULONG SectorSize,_In_ ULONG MBRTypeIdentifier,_Out_ PVOID *Buffer)
NTSTATUS None None.ZwCreateTransaction(_Out_ PHANDLE TransactionHandle,_In_ ACCESS_MASK DesiredAccess,_In_opt_ POBJECT_ATTRIBUTES ObjectAttributes,_In_opt_ LPGUID Uow,_In_opt_ HANDLE TmHandle,_In_opt_ ULONG CreateOptions,_In_opt_ ULONG IsolationLevel,_In_opt_ ULONG IsolationFlags,_In_opt_ PLARGE_INTEGER Timeout,_In_opt_ PUNICODE_STRING Description)
ULONG None None.KeQueryRuntimeThread(_In_ PKTHREAD Thread,_Out_ PULONG UserTime)
NTSTATUS None None.ZwDeleteFile(_In_ POBJECT_ATTRIBUTES ObjectAttributes)
VOID None None.KeReleaseSpinLockForDpc(_Inout_ PKSPIN_LOCK SpinLock,_In_ KIRQL OldIrql)
VOID None None.ExSetResourceOwnerPointerEx(_Inout_ PERESOURCE Resource,_In_ PVOID OwnerPointer,_In_ ULONG Flags)
NTSTATUS None None.ZwOpenSection(_Out_ PHANDLE SectionHandle,_In_ ACCESS_MASK DesiredAccess,_In_ POBJECT_ATTRIBUTES ObjectAttributes)
NTSTATUS None None.ZwOpenResourceManager(_Out_ PHANDLE ResourceManagerHandle,_In_ ACCESS_MASK DesiredAccess,_In_ HANDLE TmHandle,_In_ LPGUID ResourceManagerGuid,_In_opt_ POBJECT_ATTRIBUTES ObjectAttributes)
VOID None None.IoDeleteController(_In_ PCONTROLLER_OBJECT ControllerObject)
PVOID None None.MmGetSystemRoutineAddress(_In_ PUNICODE_STRING SystemRoutineName)
NTSTATUS None None.PsTerminateSystemThread(_In_ NTSTATUS ExitStatus)
NTSTATUS None None.ZwClose(_In_ HANDLE Handle)
NTSTATUS None None.CmRegisterCallbackEx(_In_ PEX_CALLBACK_FUNCTION Function,_In_ PCUNICODE_STRING Altitude,_In_ PVOID Driver,_In_opt_ PVOID Context,_Out_ PLARGE_INTEGER Cookie,_Reserved_ PVOID Reserved)
NTSTATUS None None.ZwMapViewOfSection(_In_ HANDLE SectionHandle,_In_ HANDLE ProcessHandle,_Inout_ PVOID *BaseAddress,_In_ ULONG_PTR ZeroBits,_In_ SIZE_T CommitSize,_Inout_opt_ PLARGE_INTEGER SectionOffset,_Inout_ PSIZE_T ViewSize,_In_ SECTION_INHERIT InheritDisposition,_In_ ULONG AllocationType,_In_ ULONG Win32Protect)
NTSTATUS None None.ZwOpenKeyTransacted(_Out_ PHANDLE KeyHandle,_In_ ACCESS_MASK DesiredAccess,_In_ POBJECT_ATTRIBUTES ObjectAttributes,_In_ HANDLE TransactionHandle)
VOID None None.IoSetShareAccess(_In_ ACCESS_MASK DesiredAccess,_In_ ULONG DesiredShareAccess,_Inout_ PFILE_OBJECT FileObject,_Out_ PSHARE_ACCESS ShareAccess)
VOID None None.KeClearEvent(_Inout_ PRKEVENT Event)
PVOID None None.MmPageEntireDriver(_In_ PVOID AddressWithinSection)
BOOLEAN None None.ExAcquireSharedWaitForExclusive(_Inout_ PERESOURCE Resource,_In_ BOOLEAN Wait)
NTSTATUS None None.PsSetCreateThreadNotifyRoutine(_In_ PCREATE_THREAD_NOTIFY_ROUTINE NotifyRoutine)
VOID None None.ObReleaseObjectSecurity(_In_ PSECURITY_DESCRIPTOR SecurityDescriptor,_In_ BOOLEAN MemoryAllocated)
PIRP None None.IoBuildAsynchronousFsdRequest(_In_ ULONG MajorFunction,_In_ PDEVICE_OBJECT DeviceObject,_Inout_ PVOID Buffer,_In_opt_ ULONG Length,_In_opt_ PLARGE_INTEGER StartingOffset,_In_opt_ PIO_STATUS_BLOCK IoStatusBlock)
NTSTATUS None None.ZwSinglePhaseReject(_In_ HANDLE EnlistmentHandle,_In_opt_ PLARGE_INTEGER TmVirtualClock)
PKEVENT None None.IoCreateSynchronizationEvent(_In_ PUNICODE_STRING EventName,_Out_ PHANDLE EventHandle)
NTSTATUS None None.ZwOpenTransaction(_Out_ PHANDLE TransactionHandle,_In_ ACCESS_MASK DesiredAccess,_In_opt_ POBJECT_ATTRIBUTES ObjectAttributes,_In_ LPGUID Uow,_In_opt_ HANDLE TmHandle)
VOID None None.IoRemoveShareAccess(_In_ PFILE_OBJECT FileObject,_Inout_ PSHARE_ACCESS ShareAccess)
LONG None None.KeReadStateSemaphore(_In_ PRKSEMAPHORE Semaphore)
VOID None None.ObReferenceObject(_In_ PVOID Object)
NTSTATUS None None.ZwUnmapViewOfSection(_In_ HANDLE ProcessHandle,_In_opt_ PVOID BaseAddress)
NTSTATUS None None.ZwCreateTransactionManager(_Out_ PHANDLE TmHandle,_In_ ACCESS_MASK DesiredAccess,_In_opt_ POBJECT_ATTRIBUTES ObjectAttributes,_In_opt_ PUNICODE_STRING LogFileName,_In_opt_ ULONG CreateOptions,_In_opt_ ULONG CommitStrength)
NTSTATUS None None.ZwSetQuotaInformationFile(_In_ HANDLE FileHandle,_Out_ PIO_STATUS_BLOCK IoStatusBlock,_In_ PVOID Buffer,_In_ ULONG Length)
VOID None None.KeReleaseInStackQueuedSpinLockForDpc(_In_ PKLOCK_QUEUE_HANDLE LockHandle)
PGENERIC_MAPPING None None.IoGetFileObjectGenericMapping(void None None)
NTSTATUS None None.IoReportDetectedDevice(_In_ PDRIVER_OBJECT DriverObject,_In_ INTERFACE_TYPE LegacyBusType,_In_ ULONG BusNumber,_In_ ULONG SlotNumber,_In_opt_ PCM_RESOURCE_LIST ResourceList,_In_opt_ PIO_RESOURCE_REQUIREMENTS_LIST ResourceRequirements,_In_ BOOLEAN ResourceAssigned,_Inout_ PDEVICE_OBJECT *DeviceObject)
NTSTATUS None None.IoGetDeviceProperty(_In_ PDEVICE_OBJECT DeviceObject,_In_ DEVICE_REGISTRY_PROPERTY DeviceProperty,_In_ ULONG BufferLength,_Out_opt_ PVOID PropertyBuffer,_Out_ PULONG ResultLength)
PVOID None None.ExRegisterCallback(_Inout_ PCALLBACK_OBJECT CallbackObject,_In_ PCALLBACK_FUNCTION CallbackFunction,_In_opt_ PVOID CallbackContext)
VOID None None.KeAcquireSpinLock(_In_ PKSPIN_LOCK SpinLock,_Out_ PKIRQL OldIrql)
NTSTATUS None None.IoWMIRegistrationControl(_In_ PDEVICE_OBJECT DeviceObject,_In_ ULONG Action)
NTSTATUS None None.ZwSetInformationFile(_In_ HANDLE FileHandle,_Out_ PIO_STATUS_BLOCK IoStatusBlock,_In_ PVOID FileInformation,_In_ ULONG Length,_In_ FILE_INFORMATION_CLASS FileInformationClass)
VOID None None.KeAcquireInStackQueuedSpinLockForDpc(_Inout_ PKSPIN_LOCK SpinLock,_Out_ PKLOCK_QUEUE_HANDLE LockHandle)
VOID None None.ExInitializePagedLookasideList(_Out_ PPAGED_LOOKASIDE_LIST Lookaside,_In_opt_ PALLOCATE_FUNCTION Allocate,_In_opt_ PFREE_FUNCTION Free,_In_ ULONG Flags,_In_ SIZE_T Size,_In_ ULONG Tag,_In_ USHORT Depth)
VOID None None.KeRevertToUserAffinityThreadEx(_In_ KAFFINITY Affinity)
NTSTATUS None None.ZwPrePrepareComplete(_In_ HANDLE EnlistmentHandle,_In_opt_ PLARGE_INTEGER TmVirtualClock)
VOID None None.MmResetDriverPaging(_In_ PVOID AddressWithinSection)
ULONG None None.ExSetTimerResolution(_In_ ULONG DesiredTime,_In_ BOOLEAN SetResolution)
VOID None hal.KeReleaseInStackQueuedSpinLock(_In_ PKLOCK_QUEUE_HANDLE LockHandle)
BOOLEAN None None.KeRemoveEntryDeviceQueue(_Inout_ PKDEVICE_QUEUE DeviceQueue,_Inout_ PKDEVICE_QUEUE_ENTRY DeviceQueueEntry)
NTSTATUS None None.PsSetCreateProcessNotifyRoutine(_In_ PCREATE_PROCESS_NOTIFY_ROUTINE NotifyRoutine,_In_ BOOLEAN Remove)
NTSTATUS None None.ZwCreateEnlistment(_Out_ PHANDLE EnlistmentHandle,_In_ ACCESS_MASK DesiredAccess,_In_ HANDLE ResourceManagerHandle,_In_ HANDLE TransactionHandle,_In_opt_ POBJECT_ATTRIBUTES ObjectAttributes,_In_opt_ ULONG CreateOptions,_In_ NOTIFICATION_MASK NotificationMask,_In_opt_ PVOID EnlistmentKey)
PMDL None None.MmAllocatePagesForMdl(_In_ PHYSICAL_ADDRESS LowAddress,_In_ PHYSICAL_ADDRESS HighAddress,_In_ PHYSICAL_ADDRESS SkipBytes,_In_ SIZE_T TotalBytes)
NTSTATUS None None.ZwRecoverTransactionManager(_In_ HANDLE TransactionManagerHandle)
KIRQL None None.KeAcquireInterruptSpinLock(_Inout_ PKINTERRUPT Interrupt)
NTSTATUS None None.IoReportTargetDeviceChange(_In_ PDEVICE_OBJECT PhysicalDeviceObject,_In_ PVOID NotificationStructure)
VOID None None.KeLeaveCriticalRegion(void None None)
NTSTATUS None None.ZwPrePrepareComplete(_In_ HANDLE EnlistmentHandle,_In_opt_ PLARGE_INTEGER TmVirtualClock)
NTSTATUS None None.ZwEnumerateTransactionObject(_In_opt_ HANDLE RootObjectHandle,_In_ KTMOBJECT_TYPE QueryType,_Inout_ PKTMOBJECT_CURSOR ObjectCursor,_In_ ULONG ObjectCursorLength,_Out_ PULONG ReturnLength)
NTSTATUS None None.IoConnectInterruptEx(_Inout_ PIO_CONNECT_INTERRUPT_PARAMETERS Parameters)
VOID None None.KeAcquireGuardedMutexUnsafe(_Inout_ PKGUARDED_MUTEX FastMutex)
NTSTATUS None None.ZwNotifyChangeKey(_In_ HANDLE KeyHandle,_In_opt_ HANDLE Event,_In_opt_ PIO_APC_ROUTINE ApcRoutine,_In_opt_ PVOID ApcContext,_Out_ PIO_STATUS_BLOCK IoStatusBlock,_In_ ULONG CompletionFilter,_In_ BOOLEAN WatchTree,_Out_opt_ PVOID Buffer,_In_ ULONG BufferSize,_In_ BOOLEAN Asynchronous)
VOID None None.KeAcquireGuardedMutex(_Inout_ PKGUARDED_MUTEX Mutex)
HRESULT None None.GetSurface(IBuffer* pBuffer None,IDirect3DSurface9** ppSurface None)
NTSTATUS None None.ZwSetVolumeInformationFile(_In_ HANDLE FileHandle,_Out_ PIO_STATUS_BLOCK IoStatusBlock,_In_ PVOID FsInformation,_In_ ULONG Length,_In_ FS_INFORMATION_CLASS FsInformationClass)
VOID None None.MmFreePagesFromMdl(_In_ PMDLX MemoryDescriptorList)
PKEVENT None None.IoCreateNotificationEvent(_In_ PUNICODE_STRING EventName,_Out_ PHANDLE EventHandle)
NTSTATUS None None.ZwOpenKeyEx(_Out_ PHANDLE KeyHandle,_In_ ACCESS_MASK DesiredAccess,_In_ POBJECT_ATTRIBUTES ObjectAttributes,_In_ ULONG OpenOptions)
NTSTATUS None None.ZwFlushKey(_In_ HANDLE KeyHandle)
VOID None None.IoAllocateController(_In_ PCONTROLLER_OBJECT ControllerObject,_In_ PDEVICE_OBJECT DeviceObject,_In_ PDRIVER_CONTROL ExecutionRoutine,_In_opt_ PVOID Context)
NTSTATUS None None.ObReferenceObjectByHandle(_In_ HANDLE Handle,_In_ ACCESS_MASK DesiredAccess,_In_opt_ POBJECT_TYPE ObjectType,_In_ KPROCESSOR_MODE AccessMode,_Out_ PVOID *Object,_Out_opt_ POBJECT_HANDLE_INFORMATION HandleInformation)
KPRIORITY None None.KeQueryPriorityThread(_In_ PKTHREAD Thread)
PVOID None None.ExAllocatePoolWithQuota(_In_ POOL_TYPE PoolType,_In_ SIZE_T NumberOfBytes)
NTSTATUS None None.IoCreateFile(_Out_ PHANDLE FileHandle,_In_ ACCESS_MASK DesiredAccess,_In_ POBJECT_ATTRIBUTES ObjectAttributes,_Out_ PIO_STATUS_BLOCK IoStatusBlock,_In_opt_ PLARGE_INTEGER AllocationSize,_In_ ULONG FileAttributes,_In_ ULONG ShareAccess,_In_ ULONG Disposition,_In_ ULONG CreateOptions,_In_opt_ PVOID EaBuffer,_In_ ULONG EaLength,_In_ CREATE_FILE_TYPE CreateFileType,_In_opt_ PVOID InternalParameters,_In_ ULONG Options)
BOOLEAN None None.KeInsertQueueDpc(_Inout_ PRKDPC Dpc,_In_opt_ PVOID SystemArgument1,_In_opt_ PVOID SystemArgument2)
NTSTATUS FASTCALL None.IoSetPartitionInformation(_In_ PDEVICE_OBJECT DeviceObject,_In_ ULONG SectorSize,_In_ ULONG PartitionNumber,_In_ ULONG PartitionType)
NTSTATUS None None.SeAssignSecurity(_In_opt_ PSECURITY_DESCRIPTOR ParentDescriptor,_In_opt_ PSECURITY_DESCRIPTOR ExplicitDescriptor,_Out_ PSECURITY_DESCRIPTOR *NewDescriptor,_In_ BOOLEAN IsDirectoryObject,_In_ PSECURITY_SUBJECT_CONTEXT SubjectContext,_In_ PGENERIC_MAPPING GenericMapping,_In_ POOL_TYPE PoolType)
BOOLEAN None None.ExAcquireRundownProtectionEx(_Inout_ PEX_RUNDOWN_REF RunRef,_In_ ULONG Count)
VOID None None.KeAcquireInStackQueuedSpinLock(_Inout_ PKSPIN_LOCK SpinLock,_Out_ PKLOCK_QUEUE_HANDLE LockHandle)
NTSTATUS None None.ZwCommitEnlistment(_In_ HANDLE EnlistmentHandle,_In_opt_ PLARGE_INTEGER TmVirtualClock)
LONG None None.KePulseEvent(_Inout_ PRKEVENT Event,_In_ KPRIORITY Increment,_In_ BOOLEAN Wait)
VOID None None.KeReleaseSpinLock(_Inout_ PKSPIN_LOCK SpinLock,_In_ KIRQL NewIrql)
NTSTATUS None None.ZwOpenProcessTokenEx(_In_ HANDLE ProcessHandle,_In_ ACCESS_MASK DesiredAccess,_In_ ULONG HandleAttributes,_Out_ PHANDLE TokenHandle)
PVOID None None.KeRegisterNmiCallback(_In_ PNMI_CALLBACK CallbackRoutine,_In_opt_ PVOID Context)
NTSTATUS None None.ZwLoadDriver(_In_ PUNICODE_STRING DriverServiceName)
VOID None None.KeEnterCriticalRegion(void None None)
BOOLEAN None None.SeValidSecurityDescriptor(_In_ ULONG Length,_In_ PSECURITY_DESCRIPTOR SecurityDescriptor)
NTSTATUS None None.CmRegisterCallback(_In_ PEX_CALLBACK_FUNCTION Function,_In_opt_ PVOID Context,_Out_ PLARGE_INTEGER Cookie)
NTSTATUS None None.ZwOpenEvent(_Out_ PHANDLE EventHandle,_In_ ACCESS_MASK DesiredAccess,_In_ POBJECT_ATTRIBUTES ObjectAttributes)
NTSTATUS None None.ZwFsControlFile(_In_ HANDLE FileHandle,_In_opt_ HANDLE Event,_In_opt_ PIO_APC_ROUTINE ApcRoutine,_In_opt_ PVOID ApcContext,_Out_ PIO_STATUS_BLOCK IoStatusBlock,_In_ ULONG FsControlCode,_In_opt_ PVOID InputBuffer,_In_ ULONG InputBufferLength,_Out_opt_ PVOID OutputBuffer,_In_ ULONG OutputBufferLength)
NTSTATUS None None.IoDeleteSymbolicLink(_In_ PUNICODE_STRING SymbolicLinkName)
NTSTATUS None None.IoCheckShareAccess(_In_ ACCESS_MASK DesiredAccess,_In_ ULONG DesiredShareAccess,_Inout_ PFILE_OBJECT FileObject,_Inout_ PSHARE_ACCESS ShareAccess,_In_ BOOLEAN Update)
KIRQL None None.KeRaiseIrqlToDpcLevel(void None None)
LONG None None.KeReadStateEvent(_In_ PRKEVENT Event)
BOOLEAN None None.SeAccessCheck(_In_ PSECURITY_DESCRIPTOR SecurityDescriptor,_In_ PSECURITY_SUBJECT_CONTEXT SubjectSecurityContext,_In_ BOOLEAN SubjectContextLocked,_In_ ACCESS_MASK DesiredAccess,_In_ ACCESS_MASK PreviouslyGrantedAccess,_Out_ PPRIVILEGE_SET *Privileges,_In_ PGENERIC_MAPPING GenericMapping,_In_ KPROCESSOR_MODE AccessMode,_Out_ PACCESS_MASK GrantedAccess,_Out_ PNTSTATUS AccessStatus)
NTSTATUS None None.IoRegisterShutdownNotification(_In_ PDEVICE_OBJECT DeviceObject)
NTSTATUS None None.ZwAllocateVirtualMemory(_In_ HANDLE ProcessHandle,_Inout_ PVOID *BaseAddress,_In_ ULONG_PTR ZeroBits,_Inout_ PSIZE_T RegionSize,_In_ ULONG AllocationType,_In_ ULONG Protect)
ULONG None None.ExGetExclusiveWaiterCount(_In_ PERESOURCE Resource)
NTSTATUS None None.PsRemoveLoadImageNotifyRoutine(_In_ PLOAD_IMAGE_NOTIFY_ROUTINE NotifyRoutine)
NTSTATUS None None.ZwReadOnlyEnlistment(_In_ HANDLE EnlistmentHandle,_In_opt_ PLARGE_INTEGER TmVirtualClock)
NTSTATUS None None.ZwCreateKey(_Out_ PHANDLE KeyHandle,_In_ ACCESS_MASK DesiredAccess,_In_ POBJECT_ATTRIBUTES ObjectAttributes,_Reserved_ ULONG TitleIndex,_In_opt_ PUNICODE_STRING Class,_In_ ULONG CreateOptions,_Out_opt_ PULONG Disposition)
NTSTATUS None None.ZwLockFile(_In_ HANDLE FileHandle,_In_opt_ HANDLE Event,_In_opt_ PIO_APC_ROUTINE ApcRoutine,_In_opt_ PVOID ApcContext,_Out_ PIO_STATUS_BLOCK IoStatusBlock,_In_ PLARGE_INTEGER ByteOffset,_In_ PLARGE_INTEGER Length,_In_ ULONG Key,_In_ BOOLEAN FailImmediately,_In_ BOOLEAN ExclusiveLock)
BOOLEAN None None.KeInsertDeviceQueue(_Inout_ PKDEVICE_QUEUE DeviceQueue,_Inout_ PKDEVICE_QUEUE_ENTRY DeviceQueueEntry)
VOID None None.IoRegisterBootDriverReinitialization(_In_ PDRIVER_OBJECT DriverObject,_In_ PDRIVER_REINITIALIZE DriverReinitializationRoutine,_In_opt_ PVOID Context)
NTSTATUS None None.ZwOpenEnlistment(_Out_ PHANDLE EnlistmentHandle,_In_ ACCESS_MASK DesiredAccess,_In_ HANDLE RmHandle,_In_ LPGUID EnlistmentGuid,_In_opt_ POBJECT_ATTRIBUTES ObjectAttributes)
ULONG None None.ExIsResourceAcquiredSharedLite(_In_ PERESOURCE Resource)
PVOID None None.MmLockPagableDataSection(_In_ PVOID AddressWithinSection)
LONG None None.KeReleaseSemaphore(_Inout_ PRKSEMAPHORE Semaphore,_In_ KPRIORITY Increment,_In_ LONG Adjustment,_In_ BOOLEAN Wait)
NTSTATUS None None.ExDeleteResourceLite(_Inout_ PERESOURCE Resource)
LONG None None.KeReleaseMutex(_Inout_ PRKMUTEX Mutex,_In_ BOOLEAN Wait)
NTSTATUS None None.CmUnRegisterCallback(_In_ LARGE_INTEGER Cookie)
KIRQL None None.KeGetCurrentIrql(void None None)
NTSTATUS None None.ZwRollforwardTransactionManager(_In_ HANDLE TransactionManagerHandle,_In_opt_ PLARGE_INTEGER TmVirtualClock)
NTSTATUS None None.ExCreateCallback(_Out_ PCALLBACK_OBJECT *CallbackObject,_In_ POBJECT_ATTRIBUTES ObjectAttributes,_In_ BOOLEAN Create,_In_ BOOLEAN AllowMultipleCallbacks)
NTSTATUS None None.IoConnectInterrupt(_Out_ PKINTERRUPT *InterruptObject,_In_ PKSERVICE_ROUTINE ServiceRoutine,_In_opt_ PVOID ServiceContext,_In_opt_ PKSPIN_LOCK SpinLock,_In_ ULONG Vector,_In_ KIRQL Irql,_In_ KIRQL SynchronizeIrql,_In_ KINTERRUPT_MODE InterruptMode,_In_ BOOLEAN ShareVector,_In_ KAFFINITY ProcessorEnableMask,_In_ BOOLEAN FloatingSave)
BOOLEAN None None.ExTryToAcquireFastMutex(_Inout_ PFAST_MUTEX FastMutex)
NTSTATUS None None.ZwCreateEvent(_Out_ PHANDLE EventHandle,_In_ ACCESS_MASK DesiredAccess,_In_opt_ POBJECT_ATTRIBUTES ObjectAttributes,_In_ EVENT_TYPE EventType,_In_ BOOLEAN InitialState)
NTSTATUS None None.ZwQueryInformationFile(_In_ HANDLE FileHandle,_Out_ PIO_STATUS_BLOCK IoStatusBlock,_Out_ PVOID FileInformation,_In_ ULONG Length,_In_ FILE_INFORMATION_CLASS FileInformationClass)
NTSTATUS None None.ZwUnloadDriver(_In_ PUNICODE_STRING DriverServiceName)
PVOID None None.IoGetInitialStack(void None None)
VOID None None.KeInitializeGuardedMutex(_Out_ PKGUARDED_MUTEX Mutex)
BOOLEAN None None.KeRemoveQueueDpc(_Inout_ PRKDPC Dpc)
NTSTATUS None None.RtlVerifyVersionInfo(_In_ PRTL_OSVERSIONINFOEXW VersionInfo,_In_ ULONG TypeMask,_In_ ULONGLONG ConditionMask)
PVOID None None.MmMapLockedPagesWithReservedMapping(_In_ PVOID MappingAddress,_In_ ULONG PoolTag,_In_ PMDLX MemoryDescriptorList,_In_ MEMORY_CACHING_TYPE CacheType)
VOID None None.IoReleaseCancelSpinLock(_In_ KIRQL Irql)
VOID None None.KeReleaseGuardedMutexUnsafe(_Inout_ PKGUARDED_MUTEX FastMutex)
VOID None None.KeInitializeSpinLock(_Out_ PKSPIN_LOCK SpinLock)
BOOLEAN None None.ExAcquireRundownProtection(_Inout_ PEX_RUNDOWN_REF RunRef)
NTSTATUS None None.SeAssignSecurityEx(_In_opt_ PSECURITY_DESCRIPTOR ParentDescriptor,_In_opt_ PSECURITY_DESCRIPTOR ExplicitDescriptor,_Out_ PSECURITY_DESCRIPTOR *NewDescriptor,_In_opt_ GUID *ObjectType,_In_ BOOLEAN IsDirectoryObject,_In_ ULONG AutoInheritFlags,_In_ PSECURITY_SUBJECT_CONTEXT SubjectContext,_In_ PGENERIC_MAPPING GenericMapping,_In_ POOL_TYPE PoolType)
NTSTATUS None None.PsSetCreateProcessNotifyRoutineEx(_In_ PCREATE_PROCESS_NOTIFY_ROUTINE_EX NotifyRoutine,_In_ BOOLEAN Remove)
VOID None None.KeFlushQueuedDpcs(void None None)
NTSTATUS None None.ZwPrePrepareEnlistment(_In_ HANDLE EnlistmentHandle,_In_opt_ PLARGE_INTEGER TmVirtualClock)
NTSTATUS None None.IoOpenDeviceInterfaceRegistryKey(_In_ PUNICODE_STRING SymbolicLinkName,_In_ ACCESS_MASK DesiredAccess,_Out_ PHANDLE DeviceInterfaceKey)
VOID None None.ExReleaseRundownProtection(_Inout_ PEX_RUNDOWN_REF RunRef)
PVOID None None.MmLockPagableCodeSection(_In_ PVOID AddressWithinSection)
BOOLEAN None None.ExAcquireSharedStarveExclusive(_Inout_ PERESOURCE Resource,_In_ BOOLEAN Wait)
PKDEVICE_QUEUE_ENTRY None None.KeRemoveByKeyDeviceQueue(_Inout_ PKDEVICE_QUEUE DeviceQueue,_In_ ULONG SortKey)
NTSTATUS None None.ObReferenceObjectByHandleWithTag(_In_ HANDLE Handle,_In_ ACCESS_MASK DesiredAccess,_In_opt_ POBJECT_TYPE ObjectType,_In_ KPROCESSOR_MODE AccessMode,_In_ ULONG Tag,_Out_ PVOID *Object,_Out_opt_ POBJECT_HANDLE_INFORMATION HandleInformation)
VOID None None.IoReuseIrp(_Inout_ PIRP Irp,_In_ NTSTATUS Status)
VOID None None.KeLowerIrql(_In_ KIRQL NewIrql)
HANDLE None None.MmSecureVirtualMemory(_In_ PVOID Address,_In_ SIZE_T Size,_In_ ULONG ProbeMode)
NTSTATUS None None.ZwFlushBuffersFile(_In_ HANDLE FileHandle,_Out_ PIO_STATUS_BLOCK IoStatusBlock)
VOID None None.IoInvalidateDeviceRelations(_In_ PDEVICE_OBJECT DeviceObject,_In_ DEVICE_RELATION_TYPE Type)
NTSTATUS None None.ObReferenceObjectByPointerWithTag(_In_ PVOID Object,_In_ ACCESS_MASK DesiredAccess,_In_opt_ POBJECT_TYPE ObjectType,_In_ KPROCESSOR_MODE AccessMode,_In_ ULONG Tag)
VOID None None.KeInitializeEvent(_Out_ PRKEVENT Event,_In_ EVENT_TYPE Type,_In_ BOOLEAN State)
NTSTATUS None None.RtlDeleteRegistryValue(_In_ ULONG RelativeTo,_In_ PCWSTR Path,_In_ PCWSTR ValueName)
NTSTATUS None None.ZwOpenKeyTransacted(_Out_ PHANDLE KeyHandle,_In_ ACCESS_MASK DesiredAccess,_In_ POBJECT_ATTRIBUTES ObjectAttributes,_In_ HANDLE TransactionHandle)
NTSTATUS None None.IoCreateDeviceSecure(_In_ PDRIVER_OBJECT DriverObject,_In_ ULONG DeviceExtensionSize,_In_opt_ PUNICODE_STRING DeviceName,_In_ DEVICE_TYPE DeviceType,_In_ ULONG DeviceCharacteristics,_In_ BOOLEAN Exclusive,_In_ PCUNICODE_STRING DefaultSDDLString,_In_opt_ LPCGUID DeviceClassGuid,_Out_ PDEVICE_OBJECT *DeviceObject)
NTSTATUS None None.ExUuidCreate(_Out_ UUID *Uuid)
VOID None None.IoAssignArcName(_In_ PUNICODE_STRING ArcName,_In_ PUNICODE_STRING DeviceName)
KIRQL None None.KeAcquireSpinLockForDpc(_Inout_ PKSPIN_LOCK SpinLock)
NTSTATUS None None.IoWMIAllocateInstanceIds(_In_ GUID *Guid,_In_ ULONG InstanceCount,_Out_ ULONG *FirstInstanceId)
NTSTATUS None None.ZwReadFile(_In_ HANDLE FileHandle,_In_opt_ HANDLE Event,_In_opt_ PIO_APC_ROUTINE ApcRoutine,_In_opt_ PVOID ApcContext,_Out_ PIO_STATUS_BLOCK IoStatusBlock,_Out_ PVOID Buffer,_In_ ULONG Length,_In_opt_ PLARGE_INTEGER ByteOffset,_In_opt_ PULONG Key)
NTSTATUS None None.KsAllocateObjectBag(_In_ PKSDEVICE Device,_Out_ KSOBJECT_BAG *ObjectBag)
VOID None None.IoWriteErrorLogEntry(_In_ PVOID ElEntry)
BOOLEAN None None.ExTryToAcquireFastMutex(_Inout_ PFAST_MUTEX FastMutex)
VOID None None.InitializeListHead(_Out_ PLIST_ENTRY ListHead)
PIO_STACK_LOCATION None None.IoGetNextIrpStackLocation(_In_ PIRP Irp)
VOID None None.KeReleaseInterruptSpinLock(_Inout_ PKINTERRUPT Interrupt,_In_ KIRQL OldIrql)
VOID None None.MmLockPagableSectionByHandle(_In_ PVOID ImageSectionHandle)
VOID None None.ExAcquireFastMutex(_Inout_ PFAST_MUTEX FastMutex)
PVOID None None.ExAllocatePoolWithTagPriority(_In_ POOL_TYPE PoolType,_In_ SIZE_T NumberOfBytes,_In_ ULONG Tag,_In_ EX_POOL_PRIORITY Priority)
NTSTATUS None None.ZwSetInformationTransaction(_In_ HANDLE TransactionHandle,_In_ TRANSACTION_INFORMATION_CLASS TransactionInformationClass,_In_ PVOID TransactionInformation,_In_ ULONG TransactionInformationLength)
NTSTATUS None None._KsEdit(_In_ KSOBJECT_BAG ObjectBag,_Inout_ PVOID *PointerToPointerToItem,_In_ ULONG NewSize,_In_ ULONG OldSize,_In_ ULONG Tag)
BOOLEAN None None.ExIsResourceAcquiredExclusiveLite(_In_ PERESOURCE Resource)
VOID None None.IoDeleteController(_In_ PCONTROLLER_OBJECT ControllerObject)
NTSTATUS None None.PsSetCreateThreadNotifyRoutine(_In_ PCREATE_THREAD_NOTIFY_ROUTINE NotifyRoutine)
NTSTATUS None None.ZwOpenKeyEx(_Out_ PHANDLE KeyHandle,_In_ ACCESS_MASK DesiredAccess,_In_ POBJECT_ATTRIBUTES ObjectAttributes,_In_ ULONG OpenOptions)
PCONTROLLER_OBJECT None None.IoCreateController(_In_ ULONG Size)
VOID None None.SeFreePrivileges(_In_ PPRIVILEGE_SET Privileges)
PSINGLE_LIST_ENTRY None None.PopEntryList(_Inout_ PSINGLE_LIST_ENTRY ListHead)
ULONG None None.KeQueryMaximumProcessorCountEx(_In_ USHORT GroupNumber)
NTSTATUS None None.IoCsqInitializeEx(_Out_ PIO_CSQ Csq,_In_ PIO_CSQ_INSERT_IRP_EX CsqInsertIrp,_In_ PIO_CSQ_REMOVE_IRP CsqRemoveIrp,_In_ PIO_CSQ_PEEK_NEXT_IRP CsqPeekNextIrp,_In_ PIO_CSQ_ACQUIRE_LOCK CsqAcquireLock,_In_ PIO_CSQ_RELEASE_LOCK CsqReleaseLock,_In_ PIO_CSQ_COMPLETE_CANCELED_IRP CsqCompleteCanceledIrp)
NTSTATUS None None.IoUnregisterPlugPlayNotificationEx(_In_ PVOID NotificationEntry)
HRESULT None None.GetTexture(IBuffer* pBuffer None,IDirect3DTexture9** ppTexture None)
NTSTATUS None None.ZwTerminateProcess(_In_opt_ HANDLE ProcessHandle,_In_ NTSTATUS ExitStatus)
NTSTATUS None None.ZwRecoverResourceManager(_In_ HANDLE ResourceManagerHandle)
VOID None None.IoSetHardErrorOrVerifyDevice(_In_ PIRP Irp,_In_ PDEVICE_OBJECT DeviceObject)
NTSTATUS None None.ZwOpenProcess(_Out_ PHANDLE ProcessHandle,_In_ ACCESS_MASK DesiredAccess,_In_ POBJECT_ATTRIBUTES ObjectAttributes,_In_opt_ PCLIENT_ID ClientId)
NTSTATUS None None.ZwSetInformationToken(_In_ HANDLE TokenHandle,_In_ TOKEN_INFORMATION_CLASS TokenInformationClass,_In_ PVOID TokenInformation,_In_ ULONG TokenInformationLength)
BOOLEAN None None.KeInsertByKeyDeviceQueue(_Inout_ PKDEVICE_QUEUE DeviceQueue,_Inout_ PKDEVICE_QUEUE_ENTRY DeviceQueueEntry,_In_ ULONG SortKey)
PKEVENT None None.IoCreateNotificationEvent(_In_ PUNICODE_STRING EventName,_Out_ PHANDLE EventHandle)
KIRQL None None.KeRaiseIrqlToDpcLevel(void None None)
PETHREAD None None.PsGetCurrentThread(void None None)
NTSTATUS None None.ZwCreateKey(_Out_ PHANDLE KeyHandle,_In_ ACCESS_MASK DesiredAccess,_In_ POBJECT_ATTRIBUTES ObjectAttributes,_Reserved_ ULONG TitleIndex,_In_opt_ PUNICODE_STRING Class,_In_ ULONG CreateOptions,_Out_opt_ PULONG Disposition)
NTSTATUS None None.IoCsqInitialize(_Out_ PIO_CSQ Csq,_In_ PIO_CSQ_INSERT_IRP CsqInsertIrp,_In_ PIO_CSQ_REMOVE_IRP CsqRemoveIrp,_In_ PIO_CSQ_PEEK_NEXT_IRP CsqPeekNextIrp,_In_ PIO_CSQ_ACQUIRE_LOCK CsqAcquireLock,_In_ PIO_CSQ_RELEASE_LOCK CsqReleaseLock,_In_ PIO_CSQ_COMPLETE_CANCELED_IRP CsqCompleteCanceledIrp)
NTSTATUS None None.IoCreateFileEx(_Out_ PHANDLE FileHandle,_In_ ACCESS_MASK DesiredAccess,_In_ POBJECT_ATTRIBUTES ObjectAttributes,_Out_ PIO_STATUS_BLOCK IoStatusBlock,_In_opt_ PLARGE_INTEGER AllocationSize,_In_ ULONG FileAttributes,_In_ ULONG ShareAccess,_In_ ULONG Disposition,_In_ ULONG CreateOptions,_In_opt_ PVOID EaBuffer,_In_ ULONG EaLength,_In_ CREATE_FILE_TYPE CreateFileType,_In_opt_ PVOID InternalParameters,_In_ ULONG Options,_In_opt_ PIO_DRIVER_CREATE_CONTEXT DriverContext)
PVOID None None.MmAllocateMappingAddress(_In_ SIZE_T NumberOfBytes,_In_ ULONG PoolTag)
BOOLEAN None None.KeAreApcsDisabled(void None None)
BOOLEAN None None.RemoveEntryList(_In_ PLIST_ENTRY Entry)
PVOID None None.MmLockPagableCodeSection(_In_ PVOID AddressWithinSection)
ULONG None None.KsRemoveItemFromObjectBag(_In_ KSOBJECT_BAG ObjectBag,_In_ PVOID Item,_In_ BOOLEAN Free)
ULONG None None.ExIsResourceAcquiredLite(_In_ PERESOURCE Resource)
VOID None None.MmProbeAndLockPages(_Inout_ PMDLX MemoryDescriptorList,_In_ KPROCESSOR_MODE AccessMode,_In_ LOCK_OPERATION Operation)
VOID None None.IoRaiseHardError(_In_ PIRP Irp,_In_opt_ PVPB Vpb,_In_ PDEVICE_OBJECT RealDeviceObject)
NTSTATUS None None.KeDelayExecutionThread(_In_ KPROCESSOR_MODE WaitMode,_In_ BOOLEAN Alertable,_In_ PLARGE_INTEGER Interval)
NTSTATUS None None.IoConnectInterrupt(_Out_ PKINTERRUPT *InterruptObject,_In_ PKSERVICE_ROUTINE ServiceRoutine,_In_opt_ PVOID ServiceContext,_In_opt_ PKSPIN_LOCK SpinLock,_In_ ULONG Vector,_In_ KIRQL Irql,_In_ KIRQL SynchronizeIrql,_In_ KINTERRUPT_MODE InterruptMode,_In_ BOOLEAN ShareVector,_In_ KAFFINITY ProcessorEnableMask,_In_ BOOLEAN FloatingSave)
public void None.setMode(System.String bstrMode None,System.Boolean varfMode None)
VOID None None.ObDereferenceObjectWithTag(_In_ PVOID Object,_In_ ULONG Tag)
VOID None None.KeAcquireSpinLockAtDpcLevel(_Inout_ PKSPIN_LOCK SpinLock)
NTSTATUS None None.KsAllocateObjectBag(_In_ PKSDEVICE Device,_Out_ KSOBJECT_BAG *ObjectBag)
NTSTATUS None None.DispatchRequest(__in PDEVICE_REQUEST DeviceRequest)
private void None.player_ErrorEvent_errorDescription(object sender None,System.EventArgs e None)
NTSTATUS None None.ZwCreateResourceManager(_Out_ PHANDLE ResourceManagerHandle,_In_ ACCESS_MASK DesiredAccess,_In_ HANDLE TmHandle,_In_opt_ LPGUID ResourceManagerGuid,_In_opt_ POBJECT_ATTRIBUTES ObjectAttributes,_In_opt_ ULONG CreateOptions,_In_opt_ PUNICODE_STRING Description)
NTSTATUS None None.ZwLoadDriver(_In_ PUNICODE_STRING DriverServiceName)
PVOID None None.ExAllocatePool(_In_ POOL_TYPE PoolType,_In_ SIZE_T NumberOfBytes)
NTSTATUS None None.ZwPrePrepareEnlistment(_In_ HANDLE EnlistmentHandle,_In_opt_ PLARGE_INTEGER TmVirtualClock)
NTSTATUS None None.PsCreateSystemThread(_Out_ PHANDLE ThreadHandle,_In_ ULONG DesiredAccess,_In_opt_ POBJECT_ATTRIBUTES ObjectAttributes,_In_opt_ HANDLE ProcessHandle,_Out_opt_ PCLIENT_ID ClientId,_In_ PKSTART_ROUTINE StartRoutine,_In_opt_ PVOID StartContext)
ULONG None None.KsRemoveItemFromObjectBag(_In_ KSOBJECT_BAG ObjectBag,_In_ PVOID Item,_In_ BOOLEAN Free)
PDRIVER_CANCEL None None.IoSetCancelRoutine(_In_ PIRP Irp,_In_ PDRIVER_CANCEL CancelRoutine)
VOID None None.MmUnlockPagableImageSection(_In_ PVOID ImageSectionHandle)
NTSTATUS None None.ZwEnumerateKey(_In_ HANDLE KeyHandle,_In_ ULONG Index,_In_ KEY_INFORMATION_CLASS KeyInformationClass,_Out_opt_ PVOID KeyInformation,_In_ ULONG Length,_Out_ PULONG ResultLength)
VOID None None.IoSetNextIrpStackLocation(_Inout_ PIRP Irp)
VOID None None.IoRequestDpc(_In_ PDEVICE_OBJECT DeviceObject,_In_ PIRP Irp,_In_ PVOID Context)
VOID None None.IoFreeController(_In_ PCONTROLLER_OBJECT ControllerObject)
NTSTATUS None None.ZwOpenFile(_Out_ PHANDLE FileHandle,_In_ ACCESS_MASK DesiredAccess,_In_ POBJECT_ATTRIBUTES ObjectAttributes,_Out_ PIO_STATUS_BLOCK IoStatusBlock,_In_ ULONG ShareAccess,_In_ ULONG OpenOptions)
PVOID None None.MmAllocateMappingAddress(_In_ SIZE_T NumberOfBytes,_In_ ULONG PoolTag)
NTSTATUS None None.ZwCommitTransaction(_In_ HANDLE TransactionHandle,_In_ BOOLEAN Wait)
BOOLEAN None None.ExIsProcessorFeaturePresent(_In_ ULONG ProcessorFeature)
VOID None None.ExUnregisterCallback(_Inout_ PVOID CbRegistration)
NTSTATUS None None.IoCreateFileEx(_Out_ PHANDLE FileHandle,_In_ ACCESS_MASK DesiredAccess,_In_ POBJECT_ATTRIBUTES ObjectAttributes,_Out_ PIO_STATUS_BLOCK IoStatusBlock,_In_opt_ PLARGE_INTEGER AllocationSize,_In_ ULONG FileAttributes,_In_ ULONG ShareAccess,_In_ ULONG Disposition,_In_ ULONG CreateOptions,_In_opt_ PVOID EaBuffer,_In_ ULONG EaLength,_In_ CREATE_FILE_TYPE CreateFileType,_In_opt_ PVOID InternalParameters,_In_ ULONG Options,_In_opt_ PIO_DRIVER_CREATE_CONTEXT DriverContext)
PIRP None None.IoCsqRemoveIrp(_Inout_ PIO_CSQ Csq,_Inout_ PIO_CSQ_IRP_CONTEXT Context)
VOID None None.IoFreeIrp(_In_ PIRP Irp)
BOOLEAN None None.KeTryToAcquireGuardedMutex(_Inout_ PKGUARDED_MUTEX Mutex)
PIRP None None.IoBuildAsynchronousFsdRequest(_In_ ULONG MajorFunction,_In_ PDEVICE_OBJECT DeviceObject,_Inout_ PVOID Buffer,_In_opt_ ULONG Length,_In_opt_ PLARGE_INTEGER StartingOffset,_In_opt_ PIO_STATUS_BLOCK IoStatusBlock)
PVOID None None.ExEnterCriticalRegionAndAcquireResourceExclusive(_Inout_ PERESOURCE Resource)
HRESULT None None.DownloadTrack([in] DWORD cookie,[in] BSTR bstrTrackURL,[in] DWORD dwServiceTrackID,[in] BSTR bstrDownloadParams,[in] HRESULT hrDownload)
NTSTATUS None None.FltAllocateExtraCreateParameterList(_In_ PFLT_FILTER Filter,_In_ FSRTL_ALLOCATE_ECPLIST_FLAGS Flags,_Out_ PECP_LIST *EcpList)
PMDL None None.MmAllocatePagesForMdlEx(_In_ PHYSICAL_ADDRESS LowAddress,_In_ PHYSICAL_ADDRESS HighAddress,_In_ PHYSICAL_ADDRESS SkipBytes,_In_ SIZE_T TotalBytes,_In_ MEMORY_CACHING_TYPE CacheType,_In_ ULONG Flags)
NTSTATUS None None.FltFsControlFile(_In_ PFLT_INSTANCE Instance,_In_ PFILE_OBJECT FileObject,_In_ ULONG FsControlCode,_In_opt_ PVOID InputBuffer,_In_ ULONG InputBufferLength,_Out_opt_ PVOID OutputBuffer,_In_ ULONG OutputBufferLength,_Out_opt_ PULONG LengthReturned)
NTSTATUS None None.KsAddItemToObjectBag(_In_ KSOBJECT_BAG ObjectBag,_In_ PVOID Item,_In_opt_ PFNKSFREE Free)
VOID None None.KeReleaseInStackQueuedSpinLockFromDpcLevel(_In_ PKLOCK_QUEUE_HANDLE LockHandle)
NTSTATUS None None.ZwRollbackTransaction(_In_ HANDLE TransactionHandle,_In_ BOOLEAN Wait)
VOID None None.KeReleaseSpinLockFromDpcLevel(_Inout_ PKSPIN_LOCK SpinLock)
NTSTATUS None None.ObOpenObjectByPointer(_In_ PVOID Object,_In_ ULONG HandleAttributes,_In_opt_ PACCESS_STATE PassedAccessState,_In_ ACCESS_MASK DesiredAccess,_In_opt_ POBJECT_TYPE ObjectType,_In_ KPROCESSOR_MODE AccessMode,_Out_ PHANDLE Handle)
NTSTATUS None None.KsMergeAutomationTables(_Out_ PKSAUTOMATION_TABLE *AutomationTableAB,_In_opt_ PKSAUTOMATION_TABLE AutomationTableA,_In_opt_ PKSAUTOMATION_TABLE AutomationTableB,_In_opt_ KSOBJECT_BAG Bag)
NTSTATUS None None.RtlGetVersion(_Out_ PRTL_OSVERSIONINFOW lpVersionInformation)
VOID None None.KeAcquireInStackQueuedSpinLockAtDpcLevel(_Inout_ PKSPIN_LOCK SpinLock,_Out_ PKLOCK_QUEUE_HANDLE LockHandle)
NTSTATUS None None.TmReferenceEnlistmentKey(_In_ PKENLISTMENT Enlistment,_Out_ PVOID *Key)
PVOID None None.ExAllocatePool(_In_ POOL_TYPE PoolType,_In_ SIZE_T NumberOfBytes)
NTSTATUS None None.FltAllocateExtraCreateParameter(_In_ PFLT_FILTER Filter,_In_ LPCGUID EcpType,_In_ ULONG SizeOfContext,_In_ FSRTL_ALLOCATE_ECP_FLAGS Flags,_In_opt_ PFSRTL_EXTRA_CREATE_PARAMETER_CLEANUP_CALLBACK CleanupCallback,_In_ ULONG PoolTag,_Out_ PVOID *EcpContext)
BOOLEAN None None.ExAcquireSharedStarveExclusive(_Inout_ PERESOURCE Resource,_In_ BOOLEAN Wait)
VOID None None.InitializeObjectAttributes([out] POBJECT_ATTRIBUTES InitializedAttributes,[in] PUNICODE_STRING ObjectName,[in] ULONG Attributes,[in] HANDLE RootDirectory,[in None None,optional] PSECURITY_DESCRIPTOR SecurityDescriptor)
NTSTATUS None None.ObReferenceObjectByPointerWithTag(_In_ PVOID Object,_In_ ACCESS_MASK DesiredAccess,_In_opt_ POBJECT_TYPE ObjectType,_In_ KPROCESSOR_MODE AccessMode,_In_ ULONG Tag)
VOID None None.IoBuildPartialMdl(_In_ PMDL SourceMdl,_Inout_ PMDL TargetMdl,_In_ PVOID VirtualAddress,_In_ ULONG Length)
VOID None None.ExAcquireFastMutexUnsafe(_Inout_ PFAST_MUTEX FastMutex)
PLIST_ENTRY None None.RemoveTailList(_Inout_ PLIST_ENTRY ListHead)
BOOLEAN None None.KeSetTimerEx(_Inout_ PKTIMER Timer,_In_ LARGE_INTEGER DueTime,_In_ LONG Period,_In_opt_ PKDPC Dpc)
NTSTATUS None None.PsCreateSystemThread(_Out_ PHANDLE ThreadHandle,_In_ ULONG DesiredAccess,_In_opt_ POBJECT_ATTRIBUTES ObjectAttributes,_In_opt_ HANDLE ProcessHandle,_Out_opt_ PCLIENT_ID ClientId,_In_ PKSTART_ROUTINE StartRoutine,_In_opt_ PVOID StartContext)
BOOL None None.DrvRealizeBrush(_In_ BRUSHOBJ *pbo,_Inout_ SURFOBJ *psoTarget,_In_ SURFOBJ *psoPattern,_In_opt_ SURFOBJ *psoMask,_In_ XLATEOBJ *pxlo,_In_ ULONG iHatch)
LONG None None.KeReleaseSemaphore(_Inout_ PRKSEMAPHORE Semaphore,_In_ KPRIORITY Increment,_In_ LONG Adjustment,_In_ BOOLEAN Wait)
ULONG None None.KeQueryMaximumProcessorCount(void None None)
VOID None None.IoSetNextIrpStackLocation(_Inout_ PIRP Irp)
NTSTATUS None None.ZwCreateFile(_Out_ PHANDLE FileHandle,_In_ ACCESS_MASK DesiredAccess,_In_ POBJECT_ATTRIBUTES ObjectAttributes,_Out_ PIO_STATUS_BLOCK IoStatusBlock,_In_opt_ PLARGE_INTEGER AllocationSize,_In_ ULONG FileAttributes,_In_ ULONG ShareAccess,_In_ ULONG CreateDisposition,_In_ ULONG CreateOptions,_In_opt_ PVOID EaBuffer,_In_ ULONG EaLength)
NTSTATUS None None.ZwRecoverResourceManager(_In_ HANDLE ResourceManagerHandle)
VOID None None.ExInitializeFastMutex(_Out_ PFAST_MUTEX FastMutex)
VOID None None.MmFreeMappingAddress(_In_ PVOID BaseAddress,_In_ ULONG PoolTag)
NTSTATUS None None.ZwOpenKeyTransactedEx(_Out_ PHANDLE KeyHandle,_In_ ACCESS_MASK DesiredAccess,_In_ POBJECT_ATTRIBUTES ObjectAttributes,_In_ ULONG OpenOptions,_In_ HANDLE TransactionHandle)
NTSTATUS None None.ZwClose(_In_ HANDLE Handle)
VOID None None.IoReuseIrp(_Inout_ PIRP Irp,_In_ NTSTATUS Status)
NTSTATUS None None.ZwOpenKey(_Out_ PHANDLE KeyHandle,_In_ ACCESS_MASK DesiredAccess,_In_ POBJECT_ATTRIBUTES ObjectAttributes)
private void None.openMedia_Click(object sender None,System.EventArgs e None)
VOID None None.ExInitializeNPagedLookasideList(_Out_ PNPAGED_LOOKASIDE_LIST Lookaside,_In_opt_ PALLOCATE_FUNCTION Allocate,_In_opt_ PFREE_FUNCTION Free,_In_ ULONG Flags,_In_ SIZE_T Size,_In_ ULONG Tag,_In_ USHORT Depth)
NTSTATUS None None.DriverCloseResources(_In_ PDRIVER_CONTEXT Context)
VOID None None.ExReleaseResourceLite(_Inout_ PERESOURCE Resource)
PVOID None None.AllocateCommonBufferEx(_In_ PDMA_ADAPTER DmaAdapter,_In_opt_ PPHYSICAL_ADDRESS MaximumAddress,_In_ ULONG Length,_Out_ PPHYSICAL_ADDRESS LogicalAddress,_In_ BOOLEAN CacheEnabled,_In_ NODE_REQUIREMENT PreferredNode)
BOOLEAN None None.KeTestSpinLock(_In_ PKSPIN_LOCK SpinLock)
NTSTATUS None None.ZwSetValueKey(_In_ HANDLE KeyHandle,_In_ PUNICODE_STRING ValueName,_In_opt_ ULONG TitleIndex,_In_ ULONG Type,_In_opt_ PVOID Data,_In_ ULONG DataSize)
NTSTATUS None None.RtlQueryRegistryValues(_In_ ULONG RelativeTo,_In_ PCWSTR Path,_Inout_ PRTL_QUERY_REGISTRY_TABLE QueryTable,_In_opt_ PVOID Context,_In_opt_ PVOID Environment)
NTSTATUS None None.ZwCreateDirectoryObject(_Out_ PHANDLE DirectoryHandle,_In_ ACCESS_MASK DesiredAccess,_In_ POBJECT_ATTRIBUTES ObjectAttributes)
PVOID None None.AllocateCommonBuffer(_In_ PDMA_ADAPTER DmaAdapter,_In_ ULONG Length,_Out_ PPHYSICAL_ADDRESS LogicalAddress,_In_ BOOLEAN CacheEnabled)
LONG None None.KeSetBasePriorityThread(_Inout_ PKTHREAD Thread,_In_ LONG Increment)
NTSTATUS None None.myEvtDriverDeviceAdd(WDFDRIVER Driver None,PWDFDEVICE_INIT DeviceInit None)
NTSTATUS None None.RtlWriteRegistryValue(_In_ ULONG RelativeTo,_In_ PCWSTR Path,_In_ PCWSTR ValueName,_In_ ULONG ValueType,_In_opt_ PVOID ValueData,_In_ ULONG ValueLength)
KAFFINITY None None.KeQueryActiveProcessors(void None None)
ULONG None None.KsDiscard(_In_ KSxxx Object,_In_ PVOID Pointer)
NTSTATUS None None.GetDmaAdapterInfo(_In_ PDMA_ADAPTER DmaAdapter,_Inout_ PDMA_ADAPTER_INFO AdapterInfo)
NTSTATUS None None.FlushAdapterBuffersEx(_In_ PDMA_ADAPTER DmaAdapter,_In_ PMDL Mdl,_In_ PVOID MapRegisterBase,_In_ ULONGLONG Offset,_In_ ULONG Length,_In_ BOOLEAN WriteToDevice)
BOOL None None.DrvTextOut(SURFOBJ *pso None,STROBJ *pstro None,FONTOBJ *pfo None,CLIPOBJ *pco None,RECTL *prclExtra None,RECTL *prclOpaque None,BRUSHOBJ *pboFore None,BRUSHOBJ *pboOpaque None,POINTL *pptlOrg None,MIX mix None)
VOID None None.IoAcquireCancelSpinLock(_Out_ PKIRQL Irql)
BOOL None None.DrvStretchBlt(_Inout_ SURFOBJ *psoDest,_Inout_ SURFOBJ *psoSrc,_In_opt_ SURFOBJ *psoMask,_In_ CLIPOBJ *pco,_In_opt_ XLATEOBJ *pxlo,_In_opt_ COLORADJUSTMENT *pca,_In_ POINTL *pptlHTOrg,_In_ RECTL *prclDest,_In_ RECTL *prclSrc,_In_opt_ POINTL *pptlMask,_In_ ULONG iMode)
ULONG None None.DrvDitherColor(_In_ DHPDEV dhpdev,_In_ ULONG iMode,_In_ ULONG rgb,_Inout_ ULONG *pul)
NTSTATUS None None.TmPrePrepareEnlistment(_In_ PKENLISTMENT Enlistment,_In_ PLARGE_INTEGER TmVirtualClock)
PVOID None None.ExAllocatePoolWithTag(_In_ POOL_TYPE PoolType,_In_ SIZE_T NumberOfBytes,_In_ ULONG Tag)
VOID None None.RtlInitUnicodeString(_Out_ PUNICODE_STRING DestinationString,_In_opt_ PCWSTR SourceString)
VOID None None.ExFreePool(_In_ PVOID P)
NTSTATUS None None.ZwCommitTransaction(_In_ HANDLE TransactionHandle,_In_ BOOLEAN Wait)
NTSTATUS None None.FltLoadFilter(_In_ PCUNICODE_STRING FilterName)
NTSTATUS None None.IoAllocateDriverObjectExtension(_In_ PDRIVER_OBJECT DriverObject,_In_ PVOID ClientIdentificationAddress,_In_ ULONG DriverObjectExtensionSize,_Out_ PVOID *DriverObjectExtension)
NTSTATUS None None.ZwOpenTransactionManager(_Out_ PHANDLE TmHandle,_In_ ACCESS_MASK DesiredAccess,_In_opt_ POBJECT_ATTRIBUTES ObjectAttributes,_In_opt_ PUNICODE_STRING LogFileName,_In_opt_ LPGUID TmIdentity,_In_opt_ ULONG OpenOptions)
NTSTATUS None None.ZwDuplicateToken(_In_ HANDLE ExistingTokenHandle,_In_ ACCESS_MASK DesiredAccess,_In_ POBJECT_ATTRIBUTES ObjectAttributes,_In_ BOOLEAN EffectiveOnly,_In_ TOKEN_TYPE TokenType,_Out_ PHANDLE NewTokenHandle)
VOID None None.MmUnmapLockedPages(_In_ PVOID BaseAddress,_In_ PMDL MemoryDescriptorList)
VOID None None.MmFreeContiguousMemory(_In_ PVOID BaseAddress)
NTSTATUS None None.ZwSetInformationThread(_In_ HANDLE ThreadHandle,_In_ THREADINFOCLASS ThreadInformationClass,_In_ PVOID ThreadInformation,_In_ ULONG ThreadInformationLength)
NTSTATUS None None.IoReportTargetDeviceChangeAsynchronous(_In_ PDEVICE_OBJECT PhysicalDeviceObject,_In_ PVOID NotificationStructure,_In_opt_ PDEVICE_CHANGE_COMPLETE_CALLBACK Callback,_Inout_ PVOID Context)
NTSTATUS None None.KsCopyObjectBagItems(_In_ KSOBJECT_BAG ObjectBagDestination,_In_ KSOBJECT_BAG ObjectBagSource)
VOID None None.IoDisconnectInterrupt(_In_ PKINTERRUPT InterruptObject)
NTSTATUS None None.ZwQueryDirectoryFile(_In_ HANDLE FileHandle,_In_opt_ HANDLE Event,_In_opt_ PIO_APC_ROUTINE ApcRoutine,_In_opt_ PVOID ApcContext,_Out_ PIO_STATUS_BLOCK IoStatusBlock,_Out_ PVOID FileInformation,_In_ ULONG Length,_In_ FILE_INFORMATION_CLASS FileInformationClass,_In_ BOOLEAN ReturnSingleEntry,_In_opt_ PUNICODE_STRING FileName,_In_ BOOLEAN RestartScan)
PDRIVER_CANCEL None None.IoSetCancelRoutine(_In_ PIRP Irp,_In_ PDRIVER_CANCEL CancelRoutine)
NTSTATUS None None.ZwCreateKeyTransacted(_Out_ PHANDLE KeyHandle,_In_ ACCESS_MASK DesiredAccess,_In_ POBJECT_ATTRIBUTES ObjectAttributes,_Reserved_ ULONG TitleIndex,_In_opt_ PUNICODE_STRING Class,_In_ ULONG CreateOptions,_In_ HANDLE TransactionHandle,_Out_opt_ PULONG Disposition)
NTSTATUS None None.IoCreateSymbolicLink(_In_ PUNICODE_STRING SymbolicLinkName,_In_ PUNICODE_STRING DeviceName)
KIRQL None None.KeAcquireSpinLockRaiseToDpc(_Inout_ PKSPIN_LOCK SpinLock)
BOOLEAN None None.IoCancelIrp(_In_ PIRP Irp)
NTSTATUS None None.ZwQuerySymbolicLinkObject(_In_ HANDLE LinkHandle,_Inout_ PUNICODE_STRING LinkTarget,_Out_opt_ PULONG ReturnedLength)
PVOID None None.ExAllocatePoolWithTag(_In_ POOL_TYPE PoolType,_In_ SIZE_T NumberOfBytes,_In_ ULONG Tag)
private void None.player_ErrorEvent_errorCode(object sender None,System.EventArgs e None)
NTSTATUS None None.ZwOpenThreadTokenEx(_In_ HANDLE ThreadHandle,_In_ ACCESS_MASK DesiredAccess,_In_ BOOLEAN OpenAsSelf,_In_ ULONG HandleAttributes,_Out_ PHANDLE TokenHandle)
VOID None None.ExConvertExclusiveToSharedLite(_Inout_ PERESOURCE Resource)
VOID None None.KeLeaveGuardedRegion(void None None)
NTSTATUS None None.KeDeregisterNmiCallback(_In_ PVOID Handle)
PCONFIGURATION_INFORMATION None None.IoGetConfigurationInformation(void None None)
NTSTATUS None None.ZwQueryVolumeInformationFile(_In_ HANDLE FileHandle,_Out_ PIO_STATUS_BLOCK IoStatusBlock,_Out_ PVOID FsInformation,_In_ ULONG Length,_In_ FS_INFORMATION_CLASS FsInformationClass)
VOID None None.ProbeForRead(_In_ PVOID Address,_In_ SIZE_T Length,_In_ ULONG Alignment)
BOOLEAN None None.IoIsWdmVersionAvailable(_In_ UCHAR MajorVersion,_In_ UCHAR MinorVersion)
VOID None None.KeInitializeDeviceQueue(_Out_ PKDEVICE_QUEUE DeviceQueue)
VOID None None.ExReleaseRundownProtectionEx(_Inout_ PEX_RUNDOWN_REF RunRef,_In_ ULONG Count)
NTSTATUS None None.ObReferenceObjectByPointer(_In_ PVOID Object,_In_ ACCESS_MASK DesiredAccess,_In_opt_ POBJECT_TYPE ObjectType,_In_ KPROCESSOR_MODE AccessMode)
NTSTATUS None None.ZwQueryKey(_In_ HANDLE KeyHandle,_In_ KEY_INFORMATION_CLASS KeyInformationClass,_Out_opt_ PVOID KeyInformation,_In_ ULONG Length,_Out_ PULONG ResultLength)
NTSTATUS None None.ZwQueryObject(_In_opt_ HANDLE Handle,_In_ OBJECT_INFORMATION_CLASS ObjectInformationClass,_Out_opt_ PVOID ObjectInformation,_In_ ULONG ObjectInformationLength,_Out_opt_ PULONG ReturnLength)
VOID None None.IoRegisterDriverReinitialization(_In_ PDRIVER_OBJECT DriverObject,_In_ PDRIVER_REINITIALIZE DriverReinitializationRoutine,_In_opt_ PVOID Context)
NTSTATUS None None.ExReinitializeResourceLite(_Inout_ PERESOURCE Resource)
NTSTATUS None None.ZwCommitComplete(_In_ HANDLE EnlistmentHandle,_In_opt_ PLARGE_INTEGER TmVirtualClock)
VOID None None.ExRaiseStatus(_In_ NTSTATUS Status)
NTSTATUS None None.IoOpenDeviceRegistryKey(_In_ PDEVICE_OBJECT DeviceObject,_In_ ULONG DevInstKeyType,_In_ ACCESS_MASK DesiredAccess,_Out_ PHANDLE DevInstRegKey)
BOOLEAN None None.IoRaiseInformationalHardError(_In_ NTSTATUS ErrorStatus,_In_opt_ PUNICODE_STRING String,_In_opt_ PKTHREAD Thread)
VOID None None.MmUnlockPages(_Inout_ PMDL MemoryDescriptorList)
PVOID None None.MmAllocateNonCachedMemory(_In_ SIZE_T NumberOfBytes)
VOID None None.IoDeassignArcName(_In_ PUNICODE_STRING ArcName)
VOID None None.ObReferenceObjectWithTag(_In_ PVOID Object,_In_ ULONG Tag)
NTSTATUS None None.KeSaveFloatingPointState(_Out_ PKFLOATING_SAVE FloatSave)
NTSTATUS None None.FltCreateFile(_In_ PFLT_FILTER Filter,_In_opt_ PFLT_INSTANCE Instance,_Out_ PHANDLE FileHandle,_In_ ACCESS_MASK DesiredAccess,_In_ POBJECT_ATTRIBUTES ObjectAttributes,_Out_ PIO_STATUS_BLOCK IoStatusBlock,_In_opt_ PLARGE_INTEGER AllocationSize,_In_ ULONG FileAttributes,_In_ ULONG ShareAccess,_In_ ULONG CreateDisposition,_In_ ULONG CreateOptions,_In_opt_ PVOID EaBuffer,_In_ ULONG EaLength,_In_ ULONG Flags)
NTSTATUS None None.ZwOpenTransactionManager(_Out_ PHANDLE TmHandle,_In_ ACCESS_MASK DesiredAccess,_In_opt_ POBJECT_ATTRIBUTES ObjectAttributes,_In_opt_ PUNICODE_STRING LogFileName,_In_opt_ LPGUID TmIdentity,_In_opt_ ULONG OpenOptions)
NTSTATUS None None.ZwOpenDirectoryObject(_Out_ PHANDLE DirectoryHandle,_In_ ACCESS_MASK DesiredAccess,_In_ POBJECT_ATTRIBUTES ObjectAttributes)
VOID None None.IoUnregisterShutdownNotification(_In_ PDEVICE_OBJECT DeviceObject)
PVOID None None.ExAllocateFromNPagedLookasideList(_Inout_ PNPAGED_LOOKASIDE_LIST Lookaside)
PVOID None None.MmMapLockedPagesSpecifyCache(_In_ PMDLX MemoryDescriptorList,_In_ KPROCESSOR_MODE AccessMode,_In_ MEMORY_CACHING_TYPE CacheType,_In_opt_ PVOID BaseAddress,_In_ ULONG BugCheckOnFailure,_In_ MM_PAGE_PRIORITY Priority)
NTSTATUS None None.ZwQueryValueKey(_In_ HANDLE KeyHandle,_In_ PUNICODE_STRING ValueName,_In_ KEY_VALUE_INFORMATION_CLASS KeyValueInformationClass,_Out_opt_ PVOID KeyValueInformation,_In_ ULONG Length,_Out_ PULONG ResultLength)
private void None.player_ErrorEvent_errorDescription(object sender None,System.EventArgs e None)
PDEVICE_OBJECT None None.IoGetAttachedDeviceReference(_In_ PDEVICE_OBJECT DeviceObject)
VOID None None.MmUnmapReservedMapping(_In_ PVOID BaseAddress,_In_ ULONG PoolTag,_In_ PMDLX MemoryDescriptorList)
private void None.fullScreen_Click(object sender None,System.EventArgs e None)
BOOLEAN None None.KeAreAllApcsDisabled(void None None)
NTSTATUS None None.IoCreateFileSpecifyDeviceObjectHint(_Out_ PHANDLE FileHandle,_In_ ACCESS_MASK DesiredAccess,_In_ POBJECT_ATTRIBUTES ObjectAttributes,_Out_ PIO_STATUS_BLOCK IoStatusBlock,_In_opt_ PLARGE_INTEGER AllocationSize,_In_ ULONG FileAttributes,_In_ ULONG ShareAccess,_In_ ULONG Disposition,_In_ ULONG CreateOptions,_In_opt_ PVOID EaBuffer,_In_ ULONG EaLength,_In_ CREATE_FILE_TYPE CreateFileType,_In_opt_ PVOID InternalParameters,_In_ ULONG Options,_In_opt_ PVOID DeviceObject)
NTSTATUS None None.InitializeDmaTransferContext(_In_ PDMA_ADAPTER DmaAdapter,_Out_ PVOID DmaTransferContext)
BOOLEAN None None.IoCancelIrp(_In_ PIRP Irp)
NTSTATUS None None.FltInsertExtraCreateParameter(_In_ PFLT_FILTER Filter,_Inout_ PECP_LIST EcpList,_Inout_ PVOID EcpContext)
VOID None None.ObDereferenceObjectDeferDeleteWithTag(_In_ PVOID Object,_In_ ULONG Tag)
VOID None None.ExRaiseAccessViolation(void None None)
VOID None None.KeEnterGuardedRegion(void None None)
NTSTATUS None None.ZwQueryValueKey(_In_ HANDLE KeyHandle,_In_ PUNICODE_STRING ValueName,_In_ KEY_VALUE_INFORMATION_CLASS KeyValueInformationClass,_Out_opt_ PVOID KeyValueInformation,_In_ ULONG Length,_Out_ PULONG ResultLength)
NTSTATUS None None.ZwQueryInformationToken(_In_ HANDLE TokenHandle,_In_ TOKEN_INFORMATION_CLASS TokenInformationClass,_Out_ PVOID TokenInformation,_In_ ULONG TokenInformationLength,_Out_ PULONG ReturnLength)
NTSTATUS None None.ZwQueryValueKey(_In_ HANDLE KeyHandle,_In_ PUNICODE_STRING ValueName,_In_ KEY_VALUE_INFORMATION_CLASS KeyValueInformationClass,_Out_opt_ PVOID KeyValueInformation,_In_ ULONG Length,_Out_ PULONG ResultLength)
BOOL None None.DrvRealizeBrush(_In_ BRUSHOBJ *pbo,_Inout_ SURFOBJ *psoTarget,_In_ SURFOBJ *psoPattern,_In_opt_ SURFOBJ *psoMask,_In_ XLATEOBJ *pxlo,_In_ ULONG iHatch)
VOID None None.ExReleaseResourceAndLeaveCriticalRegion(_Inout_ PERESOURCE Resource)
VOID None None.KeReleaseSpinLockFromDpcLevel(_Inout_ PKSPIN_LOCK SpinLock)
NTSTATUS None None.ZwQuerySecurityObject(_In_ HANDLE Handle,_In_ SECURITY_INFORMATION SecurityInformation,_Out_ PSECURITY_DESCRIPTOR SecurityDescriptor,_In_ ULONG Length,_Out_ PULONG LengthNeeded)
NTSTATUS None None.ZwQueryValueKey(_In_ HANDLE KeyHandle,_In_ PUNICODE_STRING ValueName,_In_ KEY_VALUE_INFORMATION_CLASS KeyValueInformationClass,_Out_opt_ PVOID KeyValueInformation,_In_ ULONG Length,_Out_ PULONG ResultLength)
NTSTATUS None None.FltUntagFile(_In_ PFLT_INSTANCE InitiatingInstance,_In_ PFILE_OBJECT FileObject,_In_ ULONG FileTag,_In_opt_ GUID *Guid)
VOID None None.KeReleaseSpinLock(_Inout_ PKSPIN_LOCK SpinLock,_In_ KIRQL NewIrql)
BOOLEAN None None.KeSetTimerEx(_Inout_ PKTIMER Timer,_In_ LARGE_INTEGER DueTime,_In_ LONG Period,_In_opt_ PKDPC Dpc)
VOID None None.IoAcquireCancelSpinLock(_Out_ PKIRQL Irql)
private void None.setBufTime_Click(object sender None,System.EventArgs e None)
VOID None None.ExUnregisterCallback(_Inout_ PVOID CbRegistration)
NTSTATUS None None.ZwOpenSymbolicLinkObject(_Out_ PHANDLE LinkHandle,_In_ ACCESS_MASK DesiredAccess,_In_ POBJECT_ATTRIBUTES ObjectAttributes)
VOID None None.IoInitializeDriverCreateContext(PIO_DRIVER_CREATE_CONTEXT DriverContext None)
PIRP None None.IoCsqRemoveIrp(_Inout_ PIO_CSQ Csq,_Inout_ PIO_CSQ_IRP_CONTEXT Context)
NTSTATUS None None.ZwEnumerateKey(_In_ HANDLE KeyHandle,_In_ ULONG Index,_In_ KEY_INFORMATION_CLASS KeyInformationClass,_Out_opt_ PVOID KeyInformation,_In_ ULONG Length,_Out_ PULONG ResultLength)
HANDLE None None.BRUSHOBJ_hGetColorTransform(BRUSHOBJ *pbo None)
NTSTATUS None None.ZwQueryVolumeInformationFile(_In_ HANDLE FileHandle,_Out_ PIO_STATUS_BLOCK IoStatusBlock,_Out_ PVOID FsInformation,_In_ ULONG Length,_In_ FS_INFORMATION_CLASS FsInformationClass)
NTSTATUS None None.FltSetEcpListIntoCallbackData(_In_ PFLT_FILTER Filter,_In_ PFLT_CALLBACK_DATA Data,_In_ PECP_LIST EcpList)
PLIST_ENTRY None None.RemoveTailList(_Inout_ PLIST_ENTRY ListHead)
NTSTATUS None None.ZwOpenDirectoryObject(_Out_ PHANDLE DirectoryHandle,_In_ ACCESS_MASK DesiredAccess,_In_ POBJECT_ATTRIBUTES ObjectAttributes)
VOID None None.ExConvertExclusiveToSharedLite(_Inout_ PERESOURCE Resource)
VOID None None.ExFreePool(_In_ PVOID P)
NTSTATUS None None.ZwCreateKeyTransacted(_Out_ PHANDLE KeyHandle,_In_ ACCESS_MASK DesiredAccess,_In_ POBJECT_ATTRIBUTES ObjectAttributes,_Reserved_ ULONG TitleIndex,_In_opt_ PUNICODE_STRING Class,_In_ ULONG CreateOptions,_In_ HANDLE TransactionHandle,_Out_opt_ PULONG Disposition)
BOOLEAN None None.KeAreAllApcsDisabled(void None None)
VOID None None.TmGetTransactionId(_In_ PKTRANSACTION Transaction,_Out_ PUOW TransactionId)
VOID None None.KeReleaseInStackQueuedSpinLockFromDpcLevel(_In_ PKLOCK_QUEUE_HANDLE LockHandle)
ULONG None None.KeQueryActiveProcessorCount(_Out_opt_ PKAFFINITY ActiveProcessors)
VOID None None.ExReleaseResourceAndLeaveCriticalRegion(_Inout_ PERESOURCE Resource)
VOID None None.KeInitializeDeviceQueue(_Out_ PKDEVICE_QUEUE DeviceQueue)
BOOLEAN None None.RtlIsNtDdiVersionAvailable(_In_ ULONG Version)
ULONG None None.RtlAnsiStringToUnicodeSize(_In_ PANSI_STRING AnsiString)
DHPDEV None None.DrvEnablePDEV(_In_ DEVMODEW *pdm,_In_ LPWSTR pwszLogAddress,ULONG cPat None,_In_opt_ HSURF *phsurfPatterns,ULONG cjCaps None,_Out_ ULONG *pdevcaps,ULONG cjDevInfo None,_Out_ DEVINFO *pdi,HDEV hdev None,_In_ LPWSTR pwszDeviceName,HANDLE hDriver None)
VOID None None.SeUnlockSubjectContext(_In_ PSECURITY_SUBJECT_CONTEXT SubjectContext)
NTSTATUS None None.KsPinGetReferenceClockInterface(_In_ PKSPIN Pin,_Out_ PIKSREFERENCECLOCK *Interface)
VOID None None.KeRaiseIrql(_In_ KIRQL NewIrql,_Out_ PKIRQL OldIrql)
VOID None None.MmUnmapReservedMapping(_In_ PVOID BaseAddress,_In_ ULONG PoolTag,_In_ PMDLX MemoryDescriptorList)
PDEVICE_OBJECT None None.IoGetAttachedDeviceReference(_In_ PDEVICE_OBJECT DeviceObject)
ULONG None None.KeQueryMaximumProcessorCount(void None None)
NTSTATUS None None.GetDmaAdapterInfo(_In_ PDMA_ADAPTER DmaAdapter,_Inout_ PDMA_ADAPTER_INFO AdapterInfo)
NTSTATUS None None.ZwOpenFile(_Out_ PHANDLE FileHandle,_In_ ACCESS_MASK DesiredAccess,_In_ POBJECT_ATTRIBUTES ObjectAttributes,_Out_ PIO_STATUS_BLOCK IoStatusBlock,_In_ ULONG ShareAccess,_In_ ULONG OpenOptions)
BOOL None None.EngStretchBlt(SURFOBJ *psoDest None,SURFOBJ *psoSrc None,SURFOBJ *psoMask None,CLIPOBJ *pco None,XLATEOBJ *pxlo None,_In_ COLORADJUSTMENT *pca,_In_ POINTL *pptlHTOrg,_In_ RECTL *prclDest,_In_ RECTL *prclSrc,POINTL *pptlMask None,_In_ ULONG iMode)
NTSTATUS None None.ZwQueryInformationThread(_In_ HANDLE ThreadHandle,_In_ THREADINFOCLASS ThreadInformationClass,_In_ PVOID ThreadInformation,_In_ ULONG ThreadInformationLength,_Out_opt_ PULONG ReturnLength)
NTSTATUS None None.ZwQueryDirectoryFile(_In_ HANDLE FileHandle,_In_opt_ HANDLE Event,_In_opt_ PIO_APC_ROUTINE ApcRoutine,_In_opt_ PVOID ApcContext,_Out_ PIO_STATUS_BLOCK IoStatusBlock,_Out_ PVOID FileInformation,_In_ ULONG Length,_In_ FILE_INFORMATION_CLASS FileInformationClass,_In_ BOOLEAN ReturnSingleEntry,_In_opt_ PUNICODE_STRING FileName,_In_ BOOLEAN RestartScan)
NTSTATUS None None.FltAllocateExtraCreateParameterFromLookasideList(_In_ PFLT_FILTER Filter,_In_ LPCGUID EcpType,_In_ ULONG SizeOfContext,_In_ FSRTL_ALLOCATE_ECP_FLAGS Flags,_In_opt_ PFSRTL_EXTRA_CREATE_PARAMETER_CLEANUP_CALLBACK CleanupCallback,_Inout_ PVOID LookasideList,_Out_ PVOID *EcpContext)
NTSTATUS None None.InitializeDmaTransferContext(_In_ PDMA_ADAPTER DmaAdapter,_Out_ PVOID DmaTransferContext)
VOID None None.ExFreePoolWithTag(_In_ PVOID P,_In_ ULONG Tag)
NTSTATUS None None.TmReferenceEnlistmentKey(_In_ PKENLISTMENT Enlistment,_Out_ PVOID *Key)
PVOID None None.ExAllocatePoolWithQuotaTag(_In_ POOL_TYPE PoolType,_In_ SIZE_T NumberOfBytes,_In_ ULONG Tag)
NTSTATUS None None.TmPrePrepareEnlistment(_In_ PKENLISTMENT Enlistment,_In_ PLARGE_INTEGER TmVirtualClock)
BOOLEAN None None.FLT_IS_FS_FILTER_OPERATION([in] PFLT_CALLBACK_DATA Data)
VOID None None.CsqCompleteCanceledIrp(PIO_CSQ Csq None,PIRP Irp None)
NTSTATUS None None.GetScatterGatherListEx(_In_ PDMA_ADAPTER DmaAdapter,_In_ PDEVICE_OBJECT DeviceObject,_In_ PVOID DmaTransferContext,_In_ PMDL Mdl,_In_ ULONGLONG Offset,_In_ ULONG Length,_In_ ULONG Flags,_In_opt_ PDRIVER_LIST_CONTROL ExecutionRoutine,_In_opt_ PVOID Context,_In_ BOOLEAN WriteToDevice,_In_opt_ PDMA_COMPLETION_ROUTINE DmaCompletionRoutine,_In_opt_ PVOID CompletionContext,_Out_opt_ PSCATTER_GATHER_LIST *ScatterGatherList)
NTSTATUS None None.ZwCreateDirectoryObject(_Out_ PHANDLE DirectoryHandle,_In_ ACCESS_MASK DesiredAccess,_In_ POBJECT_ATTRIBUTES ObjectAttributes)
VOID None None.ExDeleteNPagedLookasideList(_Inout_ PNPAGED_LOOKASIDE_LIST Lookaside)
PVOID None None.MmAllocateContiguousMemory(_In_ SIZE_T NumberOfBytes,_In_ PHYSICAL_ADDRESS HighestAcceptableAddress)
NTSTATUS None None.TmDereferenceEnlistmentKey(_In_ PKENLISTMENT Enlistment,_Out_opt_ PBOOLEAN LastReference)
PACCESS_TOKEN None None.PsReferenceImpersonationToken(_Inout_ PETHREAD Thread,_Out_ PBOOLEAN CopyOnOpen,_Out_ PBOOLEAN EffectiveOnly,_Out_ PSECURITY_IMPERSONATION_LEVEL ImpersonationLevel)
NTSTATUS None None.FltGetNextExtraCreateParameter(_In_ PFLT_FILTER Filter,_In_ PECP_LIST EcpList,_In_opt_ PVOID CurrentEcpContext,_Out_opt_ LPGUID NextEcpType,_Out_opt_ PVOID *NextEcpContext,_Out_opt_ ULONG *NextEcpContextSize)
NTSTATUS None None.FltCreateFile(_In_ PFLT_FILTER Filter,_In_opt_ PFLT_INSTANCE Instance,_Out_ PHANDLE FileHandle,_In_ ACCESS_MASK DesiredAccess,_In_ POBJECT_ATTRIBUTES ObjectAttributes,_Out_ PIO_STATUS_BLOCK IoStatusBlock,_In_opt_ PLARGE_INTEGER AllocationSize,_In_ ULONG FileAttributes,_In_ ULONG ShareAccess,_In_ ULONG CreateDisposition,_In_ ULONG CreateOptions,_In_opt_ PVOID EaBuffer,_In_ ULONG EaLength,_In_ ULONG Flags)
BOOL None None.EngStretchBlt(SURFOBJ *psoDest None,SURFOBJ *psoSrc None,SURFOBJ *psoMask None,CLIPOBJ *pco None,XLATEOBJ *pxlo None,_In_ COLORADJUSTMENT *pca,_In_ POINTL *pptlHTOrg,_In_ RECTL *prclDest,_In_ RECTL *prclSrc,POINTL *pptlMask None,_In_ ULONG iMode)
NTSTATUS None None.ZwQuerySecurityObject(_In_ HANDLE Handle,_In_ SECURITY_INFORMATION SecurityInformation,_Out_ PSECURITY_DESCRIPTOR SecurityDescriptor,_In_ ULONG Length,_Out_ PULONG LengthNeeded)
NTSTATUS None None.FltUntagFile(_In_ PFLT_INSTANCE InitiatingInstance,_In_ PFILE_OBJECT FileObject,_In_ ULONG FileTag,_In_opt_ GUID *Guid)
VOID None None.TmGetTransactionId(_In_ PKTRANSACTION Transaction,_Out_ PUOW TransactionId)
VOID None None.FsRtlEnterFileSystem(VOID None None)
HANDLE None None.DrvIcmCreateColorTransform(_In_ DHPDEV dhpdev,_In_ LPLOGCOLORSPACEW pLogColorSpace,_In_opt_ PVOID pvSourceProfile,_In_ ULONG cjSourceProfile,_In_ PVOID pvDestProfile,_In_ ULONG cjDestProfile,_In_opt_ PVOID pvTargetProfile,_In_ ULONG cjTargetProfile,_In_ DWORD dwReserved)
VOID None None.ExDeletePagedLookasideList(_Inout_ PPAGED_LOOKASIDE_LIST Lookaside)
VOID None None.IoInitializeDpcRequest(_In_ PDEVICE_OBJECT DeviceObject,_In_ PIO_DPC_ROUTINE DpcRoutine)
NTSTATUS None None.FsRtlOplockFsctrl(_In_ POPLOCK Oplock,_In_ PIRP Irp,_In_ ULONG OpenCount)
NTSTATUS None None.ZwSetSecurityObject(_In_ HANDLE Handle,_In_ SECURITY_INFORMATION SecurityInformation,_In_ PSECURITY_DESCRIPTOR SecurityDescriptor)
PVOID None None.MmAllocateContiguousMemorySpecifyCacheNode(_In_ SIZE_T NumberOfBytes,_In_ PHYSICAL_ADDRESS LowestAcceptableAddress,_In_ PHYSICAL_ADDRESS HighestAcceptableAddress,_In_opt_ PHYSICAL_ADDRESS BoundaryAddressMultiple,_In_ MEMORY_CACHING_TYPE CacheType,_In_ NODE_REQUIREMENT PreferredNode)
VOID None None.FreeCommonBuffer(_In_ PDMA_ADAPTER DmaAdapter,_In_ ULONG Length,_In_ PHYSICAL_ADDRESS LogicalAddress,_In_ PVOID VirtualAddress,_In_ BOOLEAN CacheEnabled)
BOOL None None.DrvBitBlt(_Inout_ SURFOBJ *psoTrg,_In_opt_ SURFOBJ *psoSrc,_In_opt_ SURFOBJ *psoMask,_In_ CLIPOBJ *pco,_In_opt_ XLATEOBJ *pxlo,_In_ RECTL *prclTrg,_In_opt_ POINTL *pptlSrc,_In_opt_ POINTL *pptlMask,_In_opt_ BRUSHOBJ *pbo,_In_opt_ POINTL *pptlBrush,_In_ ROP4 rop4)
HRESULT None wmp.GetStreamState([in] WMPServices_StreamState *pState)
NTSTATUS None None.WdfDmaTransactionInitialize(_In_ WDFDMATRANSACTION DmaTransaction,_In_ PFN_WDF_PROGRAM_DMA EvtProgramDmaFunction,_In_ WDF_DMA_DIRECTION DmaDirection,_In_ PMDL Mdl,_In_ PVOID VirtualAddress,_In_ size_t Length)
NTSTATUS None None.KeRestoreFloatingPointState(_In_ PKFLOATING_SAVE FloatSave)
HANDLE None None.XLATEOBJ_hGetColorTransform(XLATEOBJ *pxlo None)
NTSTATUS None None.FltSetVolumeInformation(_In_ PFLT_INSTANCE Instance,_Out_ PIO_STATUS_BLOCK Iosb,_Out_ PVOID FsInformation,_In_ ULONG Length,_In_ FS_INFORMATION_CLASS FsInformationClass)
NTSTATUS None None.RtlUnicodeStringToAnsiString(_Inout_ PANSI_STRING DestinationString,_In_ PCUNICODE_STRING SourceString,_In_ BOOLEAN AllocateDestinationString)
NTSTATUS None None.ZwQuerySymbolicLinkObject(_In_ HANDLE LinkHandle,_Inout_ PUNICODE_STRING LinkTarget,_Out_opt_ PULONG ReturnedLength)
BOOL None None.DrvFillPath(_Inout_ SURFOBJ *pso,_In_ PATHOBJ *ppo,_In_ CLIPOBJ *pco,_In_ BRUSHOBJ *pbo,_In_ POINTL *pptlBrushOrg,_In_ MIX mix,_In_ FLONG flOptions)
LONG None None.DrvDescribePixelFormat(DHPDEV dhpdev None,LONG iPixelFormat None,ULONG cjpfd None,PIXELFORMATDESCRIPTOR *ppfd None)
NTSTATUS None None.RtlCmEncodeMemIoResource(_In_ PCM_PARTIAL_RESOURCE_DESCRIPTOR Descriptor,_In_ UCHAR Type,_In_ ULONGLONG Length,_In_ ULONGLONG Start)
VOID None None.RtlInitAnsiString(_Out_ PANSI_STRING DestinationString,_In_opt_ PCSZ SourceString)
NTSTATUS None None.WdfRequestRetrieveOutputWdmMdl(_In_ WDFREQUEST Request,_Out_ PMDL *Mdl)
NTSTATUS None None.FltCreateFileEx(_In_ PFLT_FILTER Filter,_In_opt_ PFLT_INSTANCE Instance,_Out_ PHANDLE FileHandle,_Out_ PFILE_OBJECT *FileObject,_In_ ACCESS_MASK DesiredAccess,_In_ POBJECT_ATTRIBUTES ObjectAttributes,_Out_ PIO_STATUS_BLOCK IoStatusBlock,_In_opt_ PLARGE_INTEGER AllocationSize,_In_ ULONG FileAttributes,_In_ ULONG ShareAccess,_In_ ULONG CreateDisposition,_In_ ULONG CreateOptions,_In_opt_ PVOID EaBuffer,_In_ ULONG EaLength,_In_ ULONG Flags)
VOID None None.FltCancelFileOpen(_In_ PFLT_INSTANCE Instance,_In_ PFILE_OBJECT FileObject)
VOID None None.FsRtlNotifyFullChangeDirectory(_In_ PNOTIFY_SYNC NotifySync,_In_ PLIST_ENTRY NotifyList,_In_ PVOID FsContext,_In_ PSTRING FullDirectoryName,_In_ BOOLEAN WatchTree,_In_ BOOLEAN IgnoreBuffer,_In_ ULONG CompletionFilter,_In_opt_ PIRP NotifyIrp,_In_opt_ PCHECK_FOR_TRAVERSE_ACCESS TraverseCallback,_In_opt_ PSECURITY_SUBJECT_CONTEXT SubjectContext)
BOOLEAN None None.FltIsCallbackDataDirty(_In_ PFLT_CALLBACK_DATA Data)
NTSTATUS None None.FltWriteFile(_In_ PFLT_INSTANCE InitiatingInstance,_In_ PFILE_OBJECT FileObject,_In_opt_ PLARGE_INTEGER ByteOffset,_In_ ULONG Length,_In_ PVOID Buffer,_In_ FLT_IO_OPERATION_FLAGS Flags,_Out_opt_ PULONG BytesWritten,_In_opt_ PFLT_COMPLETED_ASYNC_IO_CALLBACK CallbackRoutine,_In_opt_ PVOID CallbackContext)
NTSTATUS None None.RtlCreateSecurityDescriptor(_Out_ PSECURITY_DESCRIPTOR SecurityDescriptor,_In_ ULONG Revision)
VOID None None.FreeAdapterObject(_In_ PDMA_ADAPTER DmaAdapter,_In_ IO_ALLOCATION_ACTION AllocationAction)
private void None.fullScreen_Click(object sender None,System.EventArgs e None)
VOID None None.RtlInitUnicodeString(_Out_ PUNICODE_STRING DestinationString,_In_opt_ PCWSTR SourceString)
NTSTATUS None None.ZwQueryInformationThread(_In_ HANDLE ThreadHandle,_In_ THREADINFOCLASS ThreadInformationClass,_In_ PVOID ThreadInformation,_In_ ULONG ThreadInformationLength,_Out_opt_ PULONG ReturnLength)
BOOLEAN None None.FLT_IS_SYSTEM_BUFFER([in] PFLT_CALLBACK_DATA Data)
VOID None None.WdfRequestCompleteWithPriorityBoost(_In_ WDFREQUEST Request,_In_ NTSTATUS Status,_In_ CCHAR PriorityBoost)
VOID None None.FltPerformSynchronousIo(_Inout_ PFLT_CALLBACK_DATA CallbackData)
VOID None None.SeCaptureSubjectContext(_Out_ PSECURITY_SUBJECT_CONTEXT SubjectContext)
NTSTATUS None None.BuildScatterGatherListEx(_In_ PDMA_ADAPTER DmaAdapter,_In_ PDEVICE_OBJECT DeviceObject,_In_ PVOID DmaTransferContext,_In_ PMDL Mdl,_In_ ULONGLONG Offset,_In_ ULONG Length,_In_ ULONG Flags,_In_opt_ PDRIVER_LIST_CONTROL ExecutionRoutine,_In_opt_ PVOID Context,_In_ BOOLEAN WriteToDevice,_In_ PVOID ScatterGatherBuffer,_In_ ULONG ScatterGatherBufferLength,_In_opt_ PDMA_COMPLETION_ROUTINE DmaCompletionRoutine,_In_opt_ PVOID CompletionContext,_Out_opt_ PSCATTER_GATHER_LIST *ScatterGatherList)
typedef None None.FLT_PREOP_CALLBACK_STATUS(*PFLT_PRE_OPERATION_CALLBACK None None)
NTSTATUS None None.TmEnableCallbacks(_In_ PKRESOURCEMANAGER ResourceManager,_In_ PTM_RM_NOTIFICATION CallbackRoutine,_In_opt_ PVOID RMKey)
NTSTATUS None None.FltGetEcpListFromCallbackData(_In_ PFLT_FILTER Filter,_In_ PFLT_CALLBACK_DATA Data,_Out_ PECP_LIST *EcpList)
NTSTATUS None None.KsPinGetReferenceClockInterface(_In_ PKSPIN Pin,_Out_ PIKSREFERENCECLOCK *Interface)
BOOL None None.DrvSetPixelFormat(SURFOBJ *pso None,LONG iPixelFormat None,HWND hwnd None)
VOID None None.FltInitExtraCreateParameterLookasideList(_In_ PFLT_FILTER Filter,_Inout_ PVOID Lookaside,_In_ FSRTL_ECP_LOOKASIDE_FLAGS Flags,_In_ SIZE_T Size,_In_ ULONG Tag)
VOID None None.KeInitializeDpc(_Out_ PRKDPC Dpc,_In_ PKDEFERRED_ROUTINE DeferredRoutine,_In_opt_ PVOID DeferredContext)
VOID None None.FltDeleteExtraCreateParameterLookasideList(_In_ PFLT_FILTER Filter,_Inout_ PVOID Lookaside,_In_ FSRTL_ECP_LOOKASIDE_FLAGS Flags)
FLT_PREOP_CALLBACK_STATUS None None.FltOplockFsctrl(_In_ POPLOCK Oplock,_In_ PFLT_CALLBACK_DATA CallbackData,_In_ ULONG OpenCount)
VOID None None.FreeAdapterChannel(_In_ PDMA_ADAPTER DmaAdapter)
ULONG None None.IsReparseTagMicrosoft(_In_ ULONG _tag)
PUNKNOWN __inline None.KsFilterGetOuterUnknown(_In_ PKSFILTER Filter)
NTSTATUS None None.ExReinitializeResourceLite(_Inout_ PERESOURCE Resource)
VOID None None.WdfRequestComplete(_In_ WDFREQUEST Request,_In_ NTSTATUS Status)
BOOL None None.DrvPlgBlt(_Inout_ SURFOBJ *psoTrg,_Inout_ SURFOBJ *psoSrc,_In_opt_ SURFOBJ *psoMsk,_In_ CLIPOBJ *pco,_In_opt_ XLATEOBJ *pxlo,_In_opt_ COLORADJUSTMENT *pca,_In_opt_ POINTL *pptlBrushOrg,_In_ POINTFIX *pptfx,_In_ RECTL *prcl,_In_opt_ POINTL *pptl,_In_ ULONG iMode)
NTSTATUS None None.FltQueryVolumeInformationFile(_In_ PFLT_INSTANCE Instance,_In_ PFILE_OBJECT FileObject,_Out_ PVOID FsInformation,_In_ ULONG Length,_In_ FS_INFORMATION_CLASS FsInformationClass,_Out_opt_ PULONG LengthReturned)
NTSTATUS None None.GetPhysicalNetworkName(HANDLE Target None,WCHAR *NetworkName None,ULONG MaxNetworkNameLength None)
NTSTATUS None None.FltFindExtraCreateParameter(_In_ PFLT_FILTER Filter,_In_ PECP_LIST EcpList,_In_ LPCGUID EcpType,_Out_opt_ PVOID *EcpContext,_Out_opt_ ULONG *EcpContextSize)
NTSTATUS None None.IoCheckEaBufferValidity(_In_ PFILE_FULL_EA_INFORMATION EaBuffer,_In_ ULONG EaLength,_Out_ PULONG ErrorOffset)
typedef None None.FLT_POSTOP_CALLBACK_STATUS(*PFLT_POST_OPERATION_CALLBACK None None)
BOOLEAN None None.FlushAdapterBuffers(_In_ PDMA_ADAPTER DmaAdapter,_In_ PMDL Mdl,_In_ PVOID MapRegisterBase,_In_ PVOID CurrentVa,_In_ ULONG Length,_In_ BOOLEAN WriteToDevice)
BOOLEAN None None.FLT_IS_IRP_OPERATION([in] PFLT_CALLBACK_DATA Data)
NTSTATUS None None.FltQueryVolumeInformation(_In_ PFLT_INSTANCE Instance,_Out_ PIO_STATUS_BLOCK Iosb,_Out_ PVOID FsInformation,_In_ ULONG Length,_In_ FS_INFORMATION_CLASS FsInformationClass)
NTSTATUS None None.KeSaveFloatingPointState(_Out_ PKFLOATING_SAVE FloatSave)
VOID None None.IoFreeMdl(_In_ PMDL Mdl)
VOID None None.MyFreeMdl(PMDL Mdl None)
VOID None None.FltAcquireResourceShared(_Inout_ PERESOURCE Resource)
private void None.setBufTime_Click(object sender None,System.EventArgs e None)
NTSTATUS None None.RtlGetOwnerSecurityDescriptor(_In_ PSECURITY_DESCRIPTOR SecurityDescriptor,_Out_ PSID *Owner,_Out_ PBOOLEAN OwnerDefaulted)
NTSTATUS None None.FltQueryVolumeInformation(_In_ PFLT_INSTANCE Instance,_Out_ PIO_STATUS_BLOCK Iosb,_Out_ PVOID FsInformation,_In_ ULONG Length,_In_ FS_INFORMATION_CLASS FsInformationClass)
VOID None None.FsRtlExitFileSystem(VOID None None)
VOID None None.PsDereferenceImpersonationToken(_In_ PACCESS_TOKEN ImpersonationToken)
NTSTATUS None None.GetScatterGatherList(_In_ PDMA_ADAPTER DmaAdapter,_In_ PDEVICE_OBJECT DeviceObject,_In_ PMDL Mdl,_In_ PVOID CurrentVa,_In_ ULONG Length,_In_ PDRIVER_LIST_CONTROL ExecutionRoutine,_In_ PVOID Context,_In_ BOOLEAN WriteToDevice)
VOID None None.FltAcquireResourceExclusive(_Inout_ PERESOURCE Resource)
PACCESS_TOKEN None None.PsReferenceImpersonationToken(_Inout_ PETHREAD Thread,_Out_ PBOOLEAN CopyOnOpen,_Out_ PBOOLEAN EffectiveOnly,_Out_ PSECURITY_IMPERSONATION_LEVEL ImpersonationLevel)
NTSTATUS None None.TmDereferenceEnlistmentKey(_In_ PKENLISTMENT Enlistment,_Out_opt_ PBOOLEAN LastReference)
PVOID None None.MmAllocateContiguousMemorySpecifyCacheNode(_In_ SIZE_T NumberOfBytes,_In_ PHYSICAL_ADDRESS LowestAcceptableAddress,_In_ PHYSICAL_ADDRESS HighestAcceptableAddress,_In_opt_ PHYSICAL_ADDRESS BoundaryAddressMultiple,_In_ MEMORY_CACHING_TYPE CacheType,_In_ NODE_REQUIREMENT PreferredNode)
NTSTATUS None None.RtlSetOwnerSecurityDescriptor(_Inout_ PSECURITY_DESCRIPTOR SecurityDescriptor,_In_opt_ PSID Owner,_In_opt_ BOOLEAN OwnerDefaulted)
NTSTATUS None None.KeRestoreFloatingPointState(_In_ PKFLOATING_SAVE FloatSave)
NTSTATUS None None.MapTransferEx(_In_ PDMA_ADAPTER DmaAdapter,_In_ PMDL Mdl,_In_ PVOID MapRegisterBase,_In_ ULONGLONG Offset,_In_ ULONG DeviceOffset,_Inout_ PULONG Length,_In_ BOOLEAN WriteToDevice,_Out_opt_ PSCATTER_GATHER_LIST ScatterGatherBuffer,_In_ ULONG ScatterGatherBufferLength,_In_opt_ PDMA_COMPLETION_ROUTINE DmaCompletionRoutine,_In_opt_ PVOID CompletionContext)
NTSTATUS None None.WdfRequestRetrieveInputWdmMdl(_In_ WDFREQUEST Request,_Out_ PMDL *Mdl)
HRESULT None None.SetEnable([in] BOOL fEnable)
NTSTATUS None None.AllocateAdapterChannelEx(_In_ PDMA_ADAPTER DmaAdapter,_In_ PDEVICE_OBJECT DeviceObject,_In_ PVOID DmaTransferContext,_In_ ULONG NumberOfMapRegisters,_In_ ULONG Flags,_In_opt_ PDRIVER_CONTROL ExecutionRoutine,_In_opt_ PVOID ExecutionContext,_Out_opt_ PVOID *MapRegisterBase)
PFILE_OBJECT None None.IoCreateStreamFileObject(_In_opt_ PFILE_OBJECT FileObject,_In_opt_ PDEVICE_OBJECT DeviceObject)
BOOLEAN None None.CancelAdapterChannel(_In_ PDMA_ADAPTER DmaAdapter,_In_ PDEVICE_OBJECT DeviceObject,_In_ PVOID DmaTransferContext)
NTSTATUS None None.GetScatterGatherListEx(_In_ PDMA_ADAPTER DmaAdapter,_In_ PDEVICE_OBJECT DeviceObject,_In_ PVOID DmaTransferContext,_In_ PMDL Mdl,_In_ ULONGLONG Offset,_In_ ULONG Length,_In_ ULONG Flags,_In_opt_ PDRIVER_LIST_CONTROL ExecutionRoutine,_In_opt_ PVOID Context,_In_ BOOLEAN WriteToDevice,_In_opt_ PDMA_COMPLETION_ROUTINE DmaCompletionRoutine,_In_opt_ PVOID CompletionContext,_Out_opt_ PSCATTER_GATHER_LIST *ScatterGatherList)
BOOL None None.DrvIcmDeleteColorTransform(_In_ DHPDEV dhpdev,_In_ HANDLE hcmXform)
NTSTATUS None None.FltDecodeParameters(_In_ PFLT_CALLBACK_DATA CallbackData,_Out_ PMDL **MdlAddressPointer,_Out_ PVOID **Buffer,_Out_ PULONG *Length,_Out_opt_ LOCK_OPERATION *DesiredAccess)
BOOL None None.DrvStrokeAndFillPath(_Inout_ SURFOBJ *pso,_Inout_ PATHOBJ *ppo,_In_ CLIPOBJ *pco,_In_opt_ XFORMOBJ *pxo,_In_ BRUSHOBJ *pboStroke,_In_ LINEATTRS *plineattrs,_In_ BRUSHOBJ *pboFill,_In_ POINTL *pptlBrushOrg,_In_ MIX mixFill,_In_ FLONG flOptions)
BOOL WINAPI setupapi.SetupCopyOEMInf(_In_ PCTSTR SourceInfFileName,_In_ PCTSTR OEMSourceMediaLocation,_In_ DWORD OEMSourceMediaType,_In_ DWORD CopyStyle,_Out_opt_ PTSTR DestinationInfFileName,_In_ DWORD DestinationInfFileNameSize,_Out_opt_ PDWORD RequiredSize,_Out_opt_ PTSTR DestinationInfFileNameComponent)
BOOL WINAPI setupapi.SetupCopyOEMInfW(_In_ PCTSTR SourceInfFileName,_In_ PCTSTR OEMSourceMediaLocation,_In_ DWORD OEMSourceMediaType,_In_ DWORD CopyStyle,_Out_opt_ PTSTR DestinationInfFileName,_In_ DWORD DestinationInfFileNameSize,_Out_opt_ PDWORD RequiredSize,_Out_opt_ PTSTR DestinationInfFileNameComponent)
BOOL WINAPI setupapi.SetupCopyOEMInfA(_In_ PCTSTR SourceInfFileName,_In_ PCTSTR OEMSourceMediaLocation,_In_ DWORD OEMSourceMediaType,_In_ DWORD CopyStyle,_Out_opt_ PTSTR DestinationInfFileName,_In_ DWORD DestinationInfFileNameSize,_Out_opt_ PDWORD RequiredSize,_Out_opt_ PTSTR DestinationInfFileNameComponent)
HBITMAP None None.EngCreateBitmap(SIZEL sizl None,LONG lWidth None,_In_ ULONG iFormat,_In_ FLONG fl,_In_ PVOID pvBits)
NTSTATUS None None.FltReadFile(_In_ PFLT_INSTANCE InitiatingInstance,_In_ PFILE_OBJECT FileObject,_In_opt_ PLARGE_INTEGER ByteOffset,_In_ ULONG Length,_Out_ PVOID Buffer,_In_ FLT_IO_OPERATION_FLAGS Flags,_Out_opt_ PULONG BytesRead,_In_opt_ PFLT_COMPLETED_ASYNC_IO_CALLBACK CallbackRoutine,_In_opt_ PVOID CallbackContext)
BOOL None None.DrvCopyBits(SURFOBJ *psoDest None,SURFOBJ *psoSrc None,CLIPOBJ *pco None,XLATEOBJ *pxlo None,RECTL *prclDest None,POINTL *pptlSrc None)
BOOL None None.DrvStrokePath(_Inout_ SURFOBJ *pso,_In_ PATHOBJ *ppo,_In_ CLIPOBJ *pco,_In_opt_ XFORMOBJ *pxo,_In_ BRUSHOBJ *pbo,_In_ POINTL *pptlBrushOrg,_In_ LINEATTRS *plineattrs,_In_ MIX mix)
VOID None None.FltReissueSynchronousIo(_In_ PFLT_INSTANCE InitiatingInstance,_In_ PFLT_CALLBACK_DATA CallbackData)
NTSTATUS None None.IoCheckEaBufferValidity(_In_ PFILE_FULL_EA_INFORMATION EaBuffer,_In_ ULONG EaLength,_Out_ PULONG ErrorOffset)
LONGLONG None None.GetCorrelatedPhysicalTime([out] PLONGLONG SystemTime)
NTSTATUS None None.FltQueryVolumeInformation(_In_ PFLT_INSTANCE Instance,_Out_ PIO_STATUS_BLOCK Iosb,_Out_ PVOID FsInformation,_In_ ULONG Length,_In_ FS_INFORMATION_CLASS FsInformationClass)
VOID None None.IoFreeMdl(_In_ PMDL Mdl)
PFILE_OBJECT None None.IoCreateStreamFileObjectLite(_In_opt_ PFILE_OBJECT FileObject,_In_opt_ PDEVICE_OBJECT DeviceObject)
NTSTATUS None None.FltReadFile(_In_ PFLT_INSTANCE InitiatingInstance,_In_ PFILE_OBJECT FileObject,_In_opt_ PLARGE_INTEGER ByteOffset,_In_ ULONG Length,_Out_ PVOID Buffer,_In_ FLT_IO_OPERATION_FLAGS Flags,_Out_opt_ PULONG BytesRead,_In_opt_ PFLT_COMPLETED_ASYNC_IO_CALLBACK CallbackRoutine,_In_opt_ PVOID CallbackContext)
PVOID None None.MmAllocateContiguousMemorySpecifyCache(_In_ SIZE_T NumberOfBytes,_In_ PHYSICAL_ADDRESS LowestAcceptableAddress,_In_ PHYSICAL_ADDRESS HighestAcceptableAddress,_In_opt_ PHYSICAL_ADDRESS BoundaryAddressMultiple,_In_ MEMORY_CACHING_TYPE CacheType)
BOOL None None.DrvTransparentBlt(_Inout_ SURFOBJ *psoDst,_In_ SURFOBJ *psoSrc,_In_ CLIPOBJ *pco,_In_opt_ XLATEOBJ *pxlo,_In_ RECTL *prclDst,_In_ RECTL *prclSrc,_In_ ULONG iTransColor,_In_ ULONG ulReserved)
VOID None None.FltReissueSynchronousIo(_In_ PFLT_INSTANCE InitiatingInstance,_In_ PFLT_CALLBACK_DATA CallbackData)
VOID None None.DrvMovePointer(_In_ SURFOBJ pso,_In_ LONG x,_In_ LONG y,_In_ RECTL *prcl)
NTSTATUS None None.FltReadFile(_In_ PFLT_INSTANCE InitiatingInstance,_In_ PFILE_OBJECT FileObject,_In_opt_ PLARGE_INTEGER ByteOffset,_In_ ULONG Length,_Out_ PVOID Buffer,_In_ FLT_IO_OPERATION_FLAGS Flags,_Out_opt_ PULONG BytesRead,_In_opt_ PFLT_COMPLETED_ASYNC_IO_CALLBACK CallbackRoutine,_In_opt_ PVOID CallbackContext)
BOOLEAN None None.FsRtlCurrentBatchOplock(_In_ POPLOCK Oplock)
BOOL None None.DrvStretchBltROP(_Inout_ SURFOBJ *psoDest,_Inout_ SURFOBJ *psoSrc,_In_opt_ SURFOBJ *psoMask,_In_ CLIPOBJ *pco,_In_opt_ XLATEOBJ *pxlo,_In_opt_ COLORADJUSTMENT *pca,_In_ POINTL *pptlHTOrg,_In_ RECTL *prclDest,_In_ RECTL *prclSrc,_In_opt_ POINTL *pptlMask,_In_ ULONG iMode,_In_ BRUSHOBJ *pbo,_In_ DWORD rop4)
NTSTATUS None None.FltSetEcpListIntoCallbackData(_In_ PFLT_FILTER Filter,_In_ PFLT_CALLBACK_DATA Data,_In_ PECP_LIST EcpList)
NTSTATUS None None.PsImpersonateClient(_Inout_ PETHREAD Thread,_In_ PACCESS_TOKEN Token,_In_ BOOLEAN CopyOnOpen,_In_ BOOLEAN EffectiveOnly,_In_ SECURITY_IMPERSONATION_LEVEL ImpersonationLevel)
typedef None None.FLT_PREOP_CALLBACK_STATUS(*PFLT_PRE_OPERATION_CALLBACK None None)
PHYSICAL_ADDRESS None None.MapTransfer(_In_ PDMA_ADAPTER DmaAdapter,_In_ PMDL Mdl,_In_ PVOID MapRegisterBase,_In_ PVOID CurrentVa,_Inout_ PULONG Length,_In_ BOOLEAN WriteToDevice)
NTSTATUS None None.ZwSetSecurityObject(_In_ HANDLE Handle,_In_ SECURITY_INFORMATION SecurityInformation,_In_ PSECURITY_DESCRIPTOR SecurityDescriptor)
NTSTATUS None None.GetScatterGatherList(_In_ PDMA_ADAPTER DmaAdapter,_In_ PDEVICE_OBJECT DeviceObject,_In_ PMDL Mdl,_In_ PVOID CurrentVa,_In_ ULONG Length,_In_ PDRIVER_LIST_CONTROL ExecutionRoutine,_In_ PVOID Context,_In_ BOOLEAN WriteToDevice)
BOOLEAN None None.FLT_IS_REISSUED_IO([in] PFLT_CALLBACK_DATA Data)
NTSTATUS None None.SeQueryInformationToken(_In_ PACCESS_TOKEN Token,_In_ TOKEN_INFORMATION_CLASS TokenInformationClass,_Out_ PVOID *TokenInformation)
BOOL None None.EngStretchBltROP(SURFOBJ *psoDest None,SURFOBJ *psoSrc None,SURFOBJ *psoMask None,CLIPOBJ *pco None,XLATEOBJ *pxlo None,COLORADJUSTMENT *pca None,POINTL *pptlHTOrg None,_In_ RECTL *prclDest,_In_ RECTL *prclSrc,POINTL *pptlMask None,_In_ ULONG iMode,BRUSHOBJ *pbo None,_In_ DWORD rop4)
BOOLEAN None None.FlushAdapterBuffers(_In_ PDMA_ADAPTER DmaAdapter,_In_ PMDL Mdl,_In_ PVOID MapRegisterBase,_In_ PVOID CurrentVa,_In_ ULONG Length,_In_ BOOLEAN WriteToDevice)
NTSTATUS None None.GetPhysicalNetworkName(HANDLE Target None,WCHAR *NetworkName None,ULONG MaxNetworkNameLength None)
void None None.WdfDmaTransactionFreeResources(_In_ WDFDMATRANSACTION DmaTransaction)
typedef None None.VOID(*PFLT_COMPLETED_ASYNC_IO_CALLBACK None None)
NTSTATUS None None.FltCreateFileEx2(_In_ PFLT_FILTER Filter,_In_opt_ PFLT_INSTANCE Instance,_Out_ PHANDLE FileHandle,_Out_opt_ PFILE_OBJECT *FileObject,_In_ ACCESS_MASK DesiredAccess,_In_ POBJECT_ATTRIBUTES ObjectAttributes,_Out_ PIO_STATUS_BLOCK IoStatusBlock,_In_opt_ PLARGE_INTEGER AllocationSize,_In_ ULONG FileAttributes,_In_ ULONG ShareAccess,_In_ ULONG CreateDisposition,_In_ ULONG CreateOptions,_In_opt_ PVOID EaBuffer,_In_ ULONG EaLength,_In_ ULONG Flags,_In_opt_ PIO_DRIVER_CREATE_CONTEXT DriverContext)
PACCESS_TOKEN None None.SeQuerySubjectContextToken(_In_ PSECURITY_SUBJECT_CONTEXT SubjectContext)
VOID None None.IoInitializeDpcRequest(_In_ PDEVICE_OBJECT DeviceObject,_In_ PIO_DPC_ROUTINE DpcRoutine)
VOID None None.FsRtlUninitializeOplock(_Inout_ POPLOCK Oplock)
NTSTATUS None None.IoCreateFileSpecifyDeviceObjectHint(_Out_ PHANDLE FileHandle,_In_ ACCESS_MASK DesiredAccess,_In_ POBJECT_ATTRIBUTES ObjectAttributes,_Out_ PIO_STATUS_BLOCK IoStatusBlock,_In_opt_ PLARGE_INTEGER AllocationSize,_In_ ULONG FileAttributes,_In_ ULONG ShareAccess,_In_ ULONG Disposition,_In_ ULONG CreateOptions,_In_opt_ PVOID EaBuffer,_In_ ULONG EaLength,_In_ CREATE_FILE_TYPE CreateFileType,_In_opt_ PVOID InternalParameters,_In_ ULONG Options,_In_opt_ PVOID DeviceObject)
HANDLE None None.DrvIcmCreateColorTransform(_In_ DHPDEV dhpdev,_In_ LPLOGCOLORSPACEW pLogColorSpace,_In_opt_ PVOID pvSourceProfile,_In_ ULONG cjSourceProfile,_In_ PVOID pvDestProfile,_In_ ULONG cjDestProfile,_In_opt_ PVOID pvTargetProfile,_In_ ULONG cjTargetProfile,_In_ DWORD dwReserved)
BOOLEAN None None.SeAuditingFileOrGlobalEvents(_In_ BOOLEAN AccessGranted,_In_ PSECURITY_DESCRIPTOR SecurityDescriptor,_In_ PSECURITY_SUBJECT_CONTEXT SubjectSecurityContext)
NTSTATUS None None.WdfDmaTransactionExecute(_In_ WDFDMATRANSACTION DmaTransaction,_In_opt_ WDFCONTEXT Context)
BOOL None None.EngAssociateSurface(HSURF hsurf None,HDEV hdev None,FLONG flHooks None)
HRESULT None wmp.GetStreamState([in] WMPServices_StreamState *pState)
ULONG None None.DrvSetPointerShape(_In_ SURFOBJ *pso,_In_ SURFOBJ *psoMask,_In_ SURFOBJ *psoColor,_In_ XLATEOBJ *pxlo,_In_ LONG xHot,_In_ LONG yHot,_In_ LONG x,_In_ LONG y,_In_ RECTL *prcl,_In_ FLONG fl)
VOID None None.RtlFreeAnsiString(_Inout_ PANSI_STRING AnsiString)
VOID None None.RtlInitString(_Out_ PSTRING DestinationString,_In_opt_ PCSZ SourceString)
VOID None None.WdfRequestMarkCancelable(_In_ WDFREQUEST Request,_In_ PFN_WDF_REQUEST_CANCEL EvtRequestCancel)
VOID None None.FltCancelFileOpen(_In_ PFLT_INSTANCE Instance,_In_ PFILE_OBJECT FileObject)
NTSTATUS None None.FltGetVolumeProperties(_In_ PFLT_VOLUME Volume,_Out_ PFLT_VOLUME_PROPERTIES VolumeProperties,_In_ ULONG Length,_Out_ PULONG LengthReturned)
VOID None None.CcFlushCache(_In_ PSECTION_OBJECT_POINTERS SectionObjectPointer,_In_opt_ PLARGE_INTEGER FileOffset,_In_ ULONG Length,_Out_opt_ PIO_STATUS_BLOCK IoStatus)
VOID None None.STROBJ_vEnumStart(STROBJ *pstro None)
NTSTATUS None None.GetResolution([out] PKSRESOLUTION Resolution)
NTSTATUS None None.WdfWmiInstanceCreate(_In_ WDFDEVICE Device,_In_ PWDF_WMI_INSTANCE_CONFIG InstanceConfig,_In_opt_ PWDF_OBJECT_ATTRIBUTES InstanceAttributes,_Out_opt_ WDFWMIINSTANCE *Instance)
NTSTATUS None None.RtlCheckRegistryKey(_In_ ULONG RelativeTo,_In_ PWSTR Path)
BOOLEAN None None.FltIsEcpFromUserMode(_In_ PFLT_FILTER Filter,_In_ PVOID EcpContext)
NTSTATUS None None.RtlGetAce(_In_ PACL Acl,_In_ ULONG AceIndex,_Out_ PVOID *Ace)
NTSTATUS None None.DriverCloseResources(_In_ PDRIVER_CONTEXT Context)
NTSTATUS None None.CalculateScatterGatherList(_In_ PDMA_ADAPTER DmaAdapter,_In_opt_ PMDL Mdl,_In_ PVOID CurrentVa,_In_ ULONG Length,_Out_ PULONG ScatterGatherListSize,_Out_opt_ PULONG NumberOfMapRegisters)
VOID None None.WdfDmaEnablerSetMaximumScatterGatherElements(_In_ WDFDMAENABLER DmaEnabler,_In_ size_t MaximumFragments)
BOOLEAN None None.FltOplockIsFastIoPossible(_In_ POPLOCK Oplock)
VOID None None.PATHOBJ_vEnumStartClipLines(PATHOBJ *ppo None,CLIPOBJ *pco None,SURFOBJ *pso None,LINEATTRS *pla None)
typedef None None.FLT_PREOP_CALLBACK_STATUS(*PFLT_PRE_OPERATION_CALLBACK None None)
NTSTATUS None None.FltCreateFileEx2(_In_ PFLT_FILTER Filter,_In_opt_ PFLT_INSTANCE Instance,_Out_ PHANDLE FileHandle,_Out_opt_ PFILE_OBJECT *FileObject,_In_ ACCESS_MASK DesiredAccess,_In_ POBJECT_ATTRIBUTES ObjectAttributes,_Out_ PIO_STATUS_BLOCK IoStatusBlock,_In_opt_ PLARGE_INTEGER AllocationSize,_In_ ULONG FileAttributes,_In_ ULONG ShareAccess,_In_ ULONG CreateDisposition,_In_ ULONG CreateOptions,_In_opt_ PVOID EaBuffer,_In_ ULONG EaLength,_In_ ULONG Flags,_In_opt_ PIO_DRIVER_CREATE_CONTEXT DriverContext)
LONG None None.DrvDescribePixelFormat(DHPDEV dhpdev None,LONG iPixelFormat None,ULONG cjpfd None,PIXELFORMATDESCRIPTOR *ppfd None)
typedef None None.VOID(*PFLT_INSTANCE_TEARDOWN_CALLBACK None None)
NTSTATUS None None.RtlSetOwnerSecurityDescriptor(_Inout_ PSECURITY_DESCRIPTOR SecurityDescriptor,_In_opt_ PSID Owner,_In_opt_ BOOLEAN OwnerDefaulted)
VOID None None.FltSetCallbackDataDirty(_Inout_ PFLT_CALLBACK_DATA Data)
VOID None None.FsRtlNotifyFullReportChange(_In_ PNOTIFY_SYNC NotifySync,_In_ PLIST_ENTRY NotifyList,_In_ PSTRING FullTargetName,_In_ USHORT TargetNameOffset,_In_opt_ PSTRING StreamName,_In_opt_ PSTRING NormalizedParentName,_In_ ULONG FilterMatch,_In_ ULONG Action,_In_opt_ PVOID TargetContext)
NTSTATUS None None.WdfDmaTransactionInitialize(_In_ WDFDMATRANSACTION DmaTransaction,_In_ PFN_WDF_PROGRAM_DMA EvtProgramDmaFunction,_In_ WDF_DMA_DIRECTION DmaDirection,_In_ PMDL Mdl,_In_ PVOID VirtualAddress,_In_ size_t Length)
ULONG None None.ReadDmaCounter(_In_ PDMA_ADAPTER DmaAdapter)
NTSTATUS None None.ZwCreateFile(_Out_ PHANDLE FileHandle,_In_ ACCESS_MASK DesiredAccess,_In_ POBJECT_ATTRIBUTES ObjectAttributes,_Out_ PIO_STATUS_BLOCK IoStatusBlock,_In_opt_ PLARGE_INTEGER AllocationSize,_In_ ULONG FileAttributes,_In_ ULONG ShareAccess,_In_ ULONG CreateDisposition,_In_ ULONG CreateOptions,_In_opt_ PVOID EaBuffer,_In_ ULONG EaLength)
NTSTATUS None None.FltRemoveExtraCreateParameter(_In_ PFLT_FILTER Filter,_Inout_ PECP_LIST EcpList,_In_ LPCGUID EcpType,_Out_ PVOID *EcpContext,_Out_opt_ ULONG *EcpContextSize)
PVOID None None.MmAllocateContiguousMemorySpecifyCache(_In_ SIZE_T NumberOfBytes,_In_ PHYSICAL_ADDRESS LowestAcceptableAddress,_In_ PHYSICAL_ADDRESS HighestAcceptableAddress,_In_opt_ PHYSICAL_ADDRESS BoundaryAddressMultiple,_In_ MEMORY_CACHING_TYPE CacheType)
VOID None None.FltReuseCallbackData(_Inout_ PFLT_CALLBACK_DATA CallbackData)
FLT_PREOP_CALLBACK_STATUS None None.FltOplockFsctrl(_In_ POPLOCK Oplock,_In_ PFLT_CALLBACK_DATA CallbackData,_In_ ULONG OpenCount)
NTSTATUS None None.WdfDmaTransactionAllocateResources(_In_ WDFDMATRANSACTION DmaTransaction,_In_ WDF_DMA_DIRECTION DmaDirection,_In_ ULONG RequiredMapRegisters,_In_ PFN_WDF_RESERVE_DMA EvtReserveDmaFunction,_In_ PVOID EvtReserveDmaContext)
PUNKNOWN None None.KsRegisterAggregatedClientUnknown(_In_ PVOID Object,_In_ PUNKNOWN ClientUnknown)
BOOL None None.PATHOBJ_bMoveTo(PATHOBJ *ppo None,POINTFIX ptfx None)
ULONGLONG None None.RtlCmDecodeMemIoResource(_In_ PCM_PARTIAL_RESOURCE_DESCRIPTOR Descriptor,_Out_opt_ PULONGLONG Start)
ULONG None None.RtlLengthSecurityDescriptor(_In_ PSECURITY_DESCRIPTOR SecurityDescriptor)
BOOLEAN None None.SeTokenIsRestricted(_In_ PACCESS_TOKEN Token)
VOID None None.RtlFreeAnsiString(_Inout_ PANSI_STRING AnsiString)
VOID None None.FltAcknowledgeEcp(_In_ PFLT_FILTER Filter,_In_ PVOID EcpContext)
VOID None None.FltFreeExtraCreateParameter(_In_ PFLT_FILTER Filter,_In_ PVOID EcpContext)
VOID None None.KsPinSetPinClockTime(_In_ PKSPIN Pin,_In_ LONGLONG Time)
private void None.fullScreen_Click(object sender None,System.EventArgs e None)
HRESULT None wmp.GetStreamTime([in] REFERENCE_TIME *prt)
NTSTATUS None None.FltQueryInformationFile(_In_ PFLT_INSTANCE Instance,_In_ PFILE_OBJECT FileObject,_Out_ PVOID FileInformation,_In_ ULONG Length,_In_ FILE_INFORMATION_CLASS FileInformationClass,_Out_opt_ PULONG LengthReturned)
NTSTATUS None None.RtlCheckRegistryKey(_In_ ULONG RelativeTo,_In_ PWSTR Path)
VOID None None.FltClearCallbackDataDirty(_Inout_ PFLT_CALLBACK_DATA Data)
NTSTATUS None None.RtlCmEncodeMemIoResource(_In_ PCM_PARTIAL_RESOURCE_DESCRIPTOR Descriptor,_In_ UCHAR Type,_In_ ULONGLONG Length,_In_ ULONGLONG Start)
BOOL WINAPI setupapi.SetupCopyOEMInf(_In_ PCTSTR SourceInfFileName,_In_ PCTSTR OEMSourceMediaLocation,_In_ DWORD OEMSourceMediaType,_In_ DWORD CopyStyle,_Out_opt_ PTSTR DestinationInfFileName,_In_ DWORD DestinationInfFileNameSize,_Out_opt_ PDWORD RequiredSize,_Out_opt_ PTSTR DestinationInfFileNameComponent)
BOOL WINAPI setupapi.SetupCopyOEMInfW(_In_ PCTSTR SourceInfFileName,_In_ PCTSTR OEMSourceMediaLocation,_In_ DWORD OEMSourceMediaType,_In_ DWORD CopyStyle,_Out_opt_ PTSTR DestinationInfFileName,_In_ DWORD DestinationInfFileNameSize,_Out_opt_ PDWORD RequiredSize,_Out_opt_ PTSTR DestinationInfFileNameComponent)
BOOL WINAPI setupapi.SetupCopyOEMInfA(_In_ PCTSTR SourceInfFileName,_In_ PCTSTR OEMSourceMediaLocation,_In_ DWORD OEMSourceMediaType,_In_ DWORD CopyStyle,_Out_opt_ PTSTR DestinationInfFileName,_In_ DWORD DestinationInfFileNameSize,_Out_opt_ PDWORD RequiredSize,_Out_opt_ PTSTR DestinationInfFileNameComponent)
NTSTATUS None None.FltGetFileNameInformation(_In_ PFLT_CALLBACK_DATA CallbackData,_In_ FLT_FILE_NAME_OPTIONS NameOptions,_Out_ PFLT_FILE_NAME_INFORMATION *FileNameInformation)
VOID None None.ExDeleteNPagedLookasideList(_Inout_ PNPAGED_LOOKASIDE_LIST Lookaside)
WDF_DEVICE_POWER_POLICY_STATE None None.WdfDeviceGetDevicePowerPolicyState(_In_ WDFDEVICE Device)
void None None.WdfDmaTransactionSetImmediateExecution(_In_ WDFDMATRANSACTION DmaTransaction,_In_ BOOLEAN UseImmediateExecution)
NTSTATUS None None.FltGetVolumeProperties(_In_ PFLT_VOLUME Volume,_Out_ PFLT_VOLUME_PROPERTIES VolumeProperties,_In_ ULONG Length,_Out_ PULONG LengthReturned)
NTSTATUS None None.FltSetSecurityObject(_In_ PFLT_INSTANCE Instance,_In_ PFILE_OBJECT FileObject,_In_ SECURITY_INFORMATION SecurityInformation,_In_ PSECURITY_DESCRIPTOR SecurityDescriptor)
NTSTATUS None None.FltCreateFileEx2(_In_ PFLT_FILTER Filter,_In_opt_ PFLT_INSTANCE Instance,_Out_ PHANDLE FileHandle,_Out_opt_ PFILE_OBJECT *FileObject,_In_ ACCESS_MASK DesiredAccess,_In_ POBJECT_ATTRIBUTES ObjectAttributes,_Out_ PIO_STATUS_BLOCK IoStatusBlock,_In_opt_ PLARGE_INTEGER AllocationSize,_In_ ULONG FileAttributes,_In_ ULONG ShareAccess,_In_ ULONG CreateDisposition,_In_ ULONG CreateOptions,_In_opt_ PVOID EaBuffer,_In_ ULONG EaLength,_In_ ULONG Flags,_In_opt_ PIO_DRIVER_CREATE_CONTEXT DriverContext)
NTSTATUS None None.IoCheckQuotaBufferValidity(_In_ PFILE_QUOTA_INFORMATION QuotaBuffer,_In_ ULONG QuotaLength,_Out_ PULONG ErrorOffset)
NTSTATUS None None.FltLockUserBuffer(_In_ PFLT_CALLBACK_DATA CallbackData)
BOOLEAN None None.SeAuditingFileEvents(_In_ BOOLEAN AccessGranted,_In_ PSECURITY_DESCRIPTOR SecurityDescriptor)
BOOL None None.DrvPlgBlt(_Inout_ SURFOBJ *psoTrg,_Inout_ SURFOBJ *psoSrc,_In_opt_ SURFOBJ *psoMsk,_In_ CLIPOBJ *pco,_In_opt_ XLATEOBJ *pxlo,_In_opt_ COLORADJUSTMENT *pca,_In_opt_ POINTL *pptlBrushOrg,_In_ POINTFIX *pptfx,_In_ RECTL *prcl,_In_opt_ POINTL *pptl,_In_ ULONG iMode)
BOOLEAN None None.FltIsCallbackDataDirty(_In_ PFLT_CALLBACK_DATA Data)
BOOL None None.DrvCopyBits(SURFOBJ *psoDest None,SURFOBJ *psoSrc None,CLIPOBJ *pco None,XLATEOBJ *pxlo None,RECTL *prclDest None,POINTL *pptlSrc None)
NTSTATUS None None.WdfIoQueueCreate(_In_ WDFDEVICE Device,_In_ PWDF_IO_QUEUE_CONFIG Config,_In_opt_ PWDF_OBJECT_ATTRIBUTES QueueAttributes,_Out_opt_ WDFQUEUE *Queue)
PWDFDEVICE_INIT None None.WdfPdoInitAllocate(_In_ WDFDEVICE ParentDevice)
BOOL None None.DrvStrokePath(_Inout_ SURFOBJ *pso,_In_ PATHOBJ *ppo,_In_ CLIPOBJ *pco,_In_opt_ XFORMOBJ *pxo,_In_ BRUSHOBJ *pbo,_In_ POINTL *pptlBrushOrg,_In_ LINEATTRS *plineattrs,_In_ MIX mix)
VOID None None.FreeAdapterObject(_In_ PDMA_ADAPTER DmaAdapter,_In_ IO_ALLOCATION_ACTION AllocationAction)
NTSTATUS None None.WdfUsbInterfaceSelectSetting(_In_ WDFUSBINTERFACE UsbInterface,_In_opt_ PWDF_OBJECT_ATTRIBUTES PipesAttributes,_In_ PWDF_USB_INTERFACE_SELECT_SETTING_PARAMS Params)
VOID None None.WDF_WMI_INSTANCE_CONFIG_INIT_PROVIDER_CONFIG(_Out_ PWDF_WMI_INSTANCE_CONFIG Config,_In_ PWDF_WMI_PROVIDER_CONFIG ProviderConfig)
NTSTATUS None None.SeSetSecurityDescriptorInfoEx(_In_opt_ PVOID Object,_In_ PSECURITY_INFORMATION SecurityInformation,_In_ PSECURITY_DESCRIPTOR SecurityDescriptor,_Inout_ PSECURITY_DESCRIPTOR *ObjectsSecurityDescriptor,_In_ ULONG AutoInheritFlags,_In_ POOL_TYPE PoolType,_In_ PGENERIC_MAPPING GenericMapping)
NTSTATUS None None.FltGetVolumeGuidName(_In_ PFLT_VOLUME Volume,_Out_ PUNICODE_STRING VolumeGuidName,_Out_opt_ PULONG BufferSizeNeeded)
NTSTATUS None None.WdfWmiInstanceCreate(_In_ WDFDEVICE Device,_In_ PWDF_WMI_INSTANCE_CONFIG InstanceConfig,_In_opt_ PWDF_OBJECT_ATTRIBUTES InstanceAttributes,_Out_opt_ WDFWMIINSTANCE *Instance)
PWSTR None None.WdfDriverGetRegistryPath(_In_ WDFDRIVER Driver)
void None None.FillBufferWithSilence(WAVEFORMATEX *pWfex None)
VOID None None.WdfObjectReference([in] WDFOBJECT Handle)
PIFIMETRICS None None.DrvQueryFont(DHPDEV dhpdev None,ULONG_PTR iFile None,ULONG iFace None,ULONG_PTR *pid None)
NTSTATUS None None.WdfWmiInstanceRegister(_In_ WDFWMIINSTANCE WmiInstance)
PFILE_OBJECT None None.IoCreateStreamFileObject(_In_opt_ PFILE_OBJECT FileObject,_In_opt_ PDEVICE_OBJECT DeviceObject)
NTSTATUS None None.WdfRegistryRemoveKey(_In_ WDFKEY Key)
VOID None None.FltFreeExtraCreateParameterList(_In_ PFLT_FILTER Filter,_In_ PECP_LIST EcpList)
HRESULT None fltlib.FilterDetach(_In_ LPCWSTR lpFilterName,_In_ LPCWSTR lpVolumeName,_In_opt_ LPCWSTR lpInstanceName)
BOOL None None.EngPlgBlt(SURFOBJ *psoTrg None,SURFOBJ *psoSrc None,SURFOBJ *psoMsk None,CLIPOBJ *pco None,XLATEOBJ *pxlo None,COLORADJUSTMENT *pca None,POINTL *pptlBrushOrg None,POINTFIX *pptfx None,RECTL *prcl None,POINTL *pptl None,_In_ ULONG iMode)
PUNKNOWN __inline None.KsPinGetOuterUnknown(_In_ PKSPIN Pin)
NTSTATUS None None.WdfIoQueueRetrieveRequestByFileObject(_In_ WDFQUEUE Queue,_In_ WDFFILEOBJECT FileObject,_Out_ WDFREQUEST *OutRequest)
VOID None None.FltFreeExtraCreateParameter(_In_ PFLT_FILTER Filter,_In_ PVOID EcpContext)
PIRP None None.IoCsqRemoveNextIrp(_Inout_ PIO_CSQ Csq,_In_opt_ PVOID PeekContext)
BOOLEAN None None.RtlValidSid(_In_ PSID Sid)
VOID None None.FltPerformSynchronousIo(_Inout_ PFLT_CALLBACK_DATA CallbackData)
BOOL None None.DrvGradientFill(_Inout_ SURFOBJ *psoDest,_In_ CLIPOBJ *pco,_In_opt_ XLATEOBJ *pxlo,_In_ TRIVERTEX *pVertex,_In_ ULONG nVertex,_In_ PVOID pMesh,_In_ ULONG nMesh,_In_ RECTL *prclExtents,_In_ POINTL *pptlDitherOrg,_In_ ULONG ulMode)
NTSTATUS None None.FsRtlOplockFsctrl(_In_ POPLOCK Oplock,_In_ PIRP Irp,_In_ ULONG OpenCount)
VOID None None.WdfIoQueuePurgeSynchronously(_In_ WDFQUEUE Queue)
VOID None None.FltReleaseResource(_Inout_ PERESOURCE Resource)
VOID None None.WdfRegistryClose(_In_ WDFKEY Key)
BOOL None None.EngAlphaBlend(SURFOBJ *psoDest None,SURFOBJ *psoSrc None,CLIPOBJ *pco None,XLATEOBJ *pxlo None,RECTL *prclDest None,RECTL *prclSrc None,BLENDOBJ *pBlendObj None)
VOID None None.CcFlushCache(_In_ PSECTION_OBJECT_POINTERS SectionObjectPointer,_In_opt_ PLARGE_INTEGER FileOffset,_In_ ULONG Length,_Out_opt_ PIO_STATUS_BLOCK IoStatus)
ULONG None None.WdfIoResourceRequirementsListGetCount(_In_ WDFIORESREQLIST RequirementsList)
NTSTATUS None None.WdfRequestRetrieveInputMemory(_In_ WDFREQUEST Request,_Out_ WDFMEMORY *Memory)
BOOL None None.DrvSetPalette(DHPDEV dhpdev None,PALOBJ *ppalo None,FLONG fl None,__range iStart None,__range cColors None)
VOID None None.WdfDeviceInitSetExclusive(_In_ PWDFDEVICE_INIT DeviceInit,_In_ BOOLEAN IsExclusive)
NTSTATUS None None.WdfDmaTransactionInitializeUsingRequest(_In_ WDFDMATRANSACTION DmaTransaction,_In_ WDFREQUEST Request,_In_ PFN_WDF_PROGRAM_DMA EvtProgramDmaFunction,_In_ WDF_DMA_DIRECTION DmaDirection)
NTSTATUS None None.WdfDeviceCreate(_Inout_ PWDFDEVICE_INIT *DeviceInit,_In_opt_ PWDF_OBJECT_ATTRIBUTES DeviceAttributes,_Out_ WDFDEVICE *Device)
BOOL None None.EngStretchBltROP(SURFOBJ *psoDest None,SURFOBJ *psoSrc None,SURFOBJ *psoMask None,CLIPOBJ *pco None,XLATEOBJ *pxlo None,COLORADJUSTMENT *pca None,POINTL *pptlHTOrg None,_In_ RECTL *prclDest,_In_ RECTL *prclSrc,POINTL *pptlMask None,_In_ ULONG iMode,BRUSHOBJ *pbo None,_In_ DWORD rop4)
VOID None None.FsRtlInitializeOplock(_Inout_ POPLOCK Oplock)
NTSTATUS None None.WdfRequestChangeTarget(_In_ WDFREQUEST Request,_In_ WDFIOTARGET IoTarget)
NTSTATUS None None.CrossVolumeCreate(_In_ PUNICODE_STRING FileName,_In_ PFLT_FILTER Filter,_In_ PFLT_INSTANCE Instance,_Inout_ PIO_STATUS_BLOCK IoStatus,_Out_ PHANDLE Handle,_Outptr_ PFILE_OBJECT *FileObject)
NTSTATUS None None.WdfPdoUpdateAddressDescription(_In_ WDFDEVICE Device,_Inout_ PWDF_CHILD_ADDRESS_DESCRIPTION_HEADER AddressDescription)
VOID None None.WdfCmResourceListRemoveByDescriptor(_In_ WDFCMRESLIST List,_In_ PCM_PARTIAL_RESOURCE_DESCRIPTOR Descriptor)
VOID None None.DrvSynchronize(DHPDEV dhpdev None,RECTL *prcl None)
LONGLONG None None.GetCorrelatedTime([out] PLONGLONG SystemTime)
NTSTATUS None None.WdfWorkItemCreate(_In_ PWDF_WORKITEM_CONFIG Config,_In_ PWDF_OBJECT_ATTRIBUTES Attributes,_Out_ WDFWORKITEM *WorkItem)
NTSTATUS None None.WdfRegistryOpenKey(_In_opt_ WDFKEY ParentKey,_In_ PCUNICODE_STRING KeyName,_In_ ACCESS_MASK DesiredAccess,_In_opt_ PWDF_OBJECT_ATTRIBUTES KeyAttributes,_Out_ WDFKEY *Key)
VOID None None.CcMdlRead(_In_ PFILE_OBJECT FileObject,_In_ PLARGE_INTEGER FileOffset,_In_ ULONG Length,_Out_ PMDL *MdlChain,_Out_ PIO_STATUS_BLOCK IoStatus)
BOOLEAN None None.WdfRequestIsFrom32BitProcess(_In_ WDFREQUEST Request)
VOID None None.WdfDeviceSetSpecialFileSupport(_In_ WDFDEVICE Device,_In_ WDF_SPECIAL_FILE_TYPE FileType,_In_ BOOLEAN FileTypeIsSupported)
NTSTATUS None None.WdfDeviceInitAssignName(_In_ PWDFDEVICE_INIT DeviceInit,_In_opt_ PCUNICODE_STRING DeviceName)
WDFDEVICE None None.WdfIoTargetGetDevice(_In_ WDFIOTARGET IoTarget)
PTXN_PARAMETER_BLOCK None None.IoGetTransactionParameterBlock(_In_ PFILE_OBJECT FileObject)
VOID None None.WdfRequestGetParameters(_In_ WDFREQUEST Request,_Out_ PWDF_REQUEST_PARAMETERS Parameters)
BOOL None None.DrvSetPixelFormat(SURFOBJ *pso None,LONG iPixelFormat None,HWND hwnd None)
NTSTATUS None None.WdfUsbTargetPipeWriteSynchronously(_In_ WDFUSBPIPE Pipe,_In_opt_ WDFREQUEST Request,_In_opt_ PWDF_REQUEST_SEND_OPTIONS RequestOptions,_In_opt_ PWDF_MEMORY_DESCRIPTOR MemoryDescriptor,_Out_opt_ PULONG BytesWritten)
NTSTATUS None None.FltGetDestinationFileNameInformation(_In_ PFLT_INSTANCE Instance,_In_ PFILE_OBJECT FileObject,_In_opt_ HANDLE RootDirectory,_In_ PWSTR FileName,_In_ ULONG FileNameLength,_In_ FLT_FILE_NAME_OPTIONS NameOptions,_Out_ PFLT_FILE_NAME_INFORMATION *RetFileNameInformation)
NTSTATUS None None.WdfIoTargetFormatRequestForInternalIoctlOthers(_In_ WDFIOTARGET IoTarget,_In_ WDFREQUEST Request,_In_ ULONG IoctlCode,_In_opt_ WDFMEMORY OtherArg1,_In_opt_ PWDFMEMORY_OFFSET OtherArg1Offset,_In_opt_ WDFMEMORY OtherArg2,_In_opt_ PWDFMEMORY_OFFSET OtherArg2Offset,_In_opt_ WDFMEMORY OtherArg4,_In_opt_ PWDFMEMORY_OFFSET OtherArg4Offset)
NTSTATUS None None.WdfUsbTargetDeviceSendControlTransferSynchronously(_In_ WDFUSBDEVICE UsbDevice,_In_opt_ WDFREQUEST Request,_In_opt_ PWDF_REQUEST_SEND_OPTIONS RequestOptions,_In_ PWDF_USB_CONTROL_SETUP_PACKET SetupPacket,_In_opt_ PWDF_MEMORY_DESCRIPTOR MemoryDescriptor,_Out_opt_ PULONG BytesTransferred)
VOID None None.KeFlushIoBuffers(_In_ PMDL Mdl,_In_ BOOLEAN ReadOperation,_In_ BOOLEAN DmaOperation)
void None None.WdfDmaTransactionFreeResources(_In_ WDFDMATRANSACTION DmaTransaction)
NTSTATUS None None.WdfRequestUnmarkCancelable(_In_ WDFREQUEST Request)
NTSTATUS None None.FltClose(_In_ HANDLE FileHandle)
VOID None None.WdfDeviceInitSetPowerPolicyOwnership(_In_ PWDFDEVICE_INIT DeviceInit,_In_ BOOLEAN IsPowerPolicyOwner)
NTSTATUS None None.RtlInitializeSid(_Out_ PSID Sid,_In_ PSID_IDENTIFIER_AUTHORITY IdentifierAuthority,_In_ UCHAR SubAuthorityCount)
NTSTATUS None None.WdfDeviceStopIdle(_In_ WDFDEVICE Device,_In_ BOOLEAN WaitForD0)
NTSTATUS None None.WdfDmaTransactionCreate(_In_ WDFDMAENABLER DmaEnabler,_In_opt_ PWDF_OBJECT_ATTRIBUTES Attributes,_Out_ WDFDMATRANSACTION *DmaTransaction)
NTSTATUS None None.CmSetCallbackObjectContext(_Inout_ PVOID Object,_In_ PLARGE_INTEGER Cookie,_In_ PVOID NewContext,_Out_opt_ PVOID *OldContext)
VOID None None.WdfIoResourceRequirementsListSetSlotNumber(_In_ WDFIORESREQLIST RequirementsList,_In_ ULONG SlotNumber)
BOOLEAN None None.WdfDmaTransactionDmaCompletedWithLength(_In_ WDFDMATRANSACTION DmaTransaction,_In_ size_t TransferredLength,_Out_ NTSTATUS *Status)
VOID None None.WdfIoQueueDrainSynchronously(_In_ WDFQUEUE Queue)
NTSTATUS None None.WdfDmaEnablerCreate(_In_ WDFDEVICE Device,_In_ PWDF_DMA_ENABLER_CONFIG Config,_In_opt_ PWDF_OBJECT_ATTRIBUTES Attributes,_Out_ WDFDMAENABLER *DmaEnablerHandle)
NTSTATUS None None.WdfPdoRetrieveIdentificationDescription(_In_ WDFDEVICE Device,_Inout_ PWDF_CHILD_IDENTIFICATION_DESCRIPTION_HEADER IdentificationDescription)
BOOLEAN None None.WdfDmaTransactionDmaCompletedFinal(_In_ WDFDMATRANSACTION DmaTransaction,_In_ size_t FinalTransferredLength,_Out_ NTSTATUS *Status)
VOID None None.FltCompletePendedPreOperation(_In_ PFLT_CALLBACK_DATA Data,_In_ FLT_PREOP_CALLBACK_STATUS CallbackStatus,_In_opt_ PVOID Context)
VOID None None.FsRtlNotifyFullChangeDirectory(_In_ PNOTIFY_SYNC NotifySync,_In_ PLIST_ENTRY NotifyList,_In_ PVOID FsContext,_In_ PSTRING FullDirectoryName,_In_ BOOLEAN WatchTree,_In_ BOOLEAN IgnoreBuffer,_In_ ULONG CompletionFilter,_In_opt_ PIRP NotifyIrp,_In_opt_ PCHECK_FOR_TRAVERSE_ACCESS TraverseCallback,_In_opt_ PSECURITY_SUBJECT_CONTEXT SubjectContext)
VOID None None.WdfUsbInterfaceGetDescriptor(_In_ WDFUSBINTERFACE UsbInterface,_In_ UCHAR SettingIndex,_Out_ PUSB_INTERFACE_DESCRIPTOR InterfaceDescriptor)
BOOLEAN None None.FltIsEcpAcknowledged(_In_ PFLT_FILTER Filter,_In_ PVOID EcpContext)
WDFWMIPROVIDER None None.WdfWmiInstanceGetProvider(_In_ WDFWMIINSTANCE WmiInstance)
VOID None None.SeCaptureSubjectContext(_Out_ PSECURITY_SUBJECT_CONTEXT SubjectContext)
PIRP None None.IoGetTopLevelIrp(VOID None None)
VOID None None.DrvSynchronizeSurface(SURFOBJ *pso None,RECTL *prcl None,FLONG fl None)
ULONG None None.WdfFileObjectGetFlags(_In_ WDFFILEOBJECT FileObject)
BOOL None setupapi.SetupGetFileQueueFlags(_In_ HSPFILEQ FileQueue,_Out_ PDWORD Flags)
NTSTATUS None None.FltSetInformationFile(_In_ PFLT_INSTANCE Instance,_In_ PFILE_OBJECT FileObject,_In_ PVOID FileInformation,_In_ ULONG Length,_In_ FILE_INFORMATION_CLASS FileInformationClass)
VOID None None.FltDeleteExtraCreateParameterLookasideList(_In_ PFLT_FILTER Filter,_Inout_ PVOID Lookaside,_In_ FSRTL_ECP_LOOKASIDE_FLAGS Flags)
BOOL None None.EngTransparentBlt(_In_ SURFOBJ *psoDst,_In_ SURFOBJ *psoSrc,_In_opt_ CLIPOBJ *pco,_In_opt_ XLATEOBJ *pxlo,_In_ RECTL *prclDst,_In_ RECTL *prclSrc,_In_ ULONG iTransColor,_In_ ULONG ulReserved)
BOOLEAN None None.FsRtlOplockIsFastIoPossible(_In_ POPLOCK Oplock)
NTSTATUS None None.WdfIoTargetSendInternalIoctlSynchronously(_In_ WDFIOTARGET IoTarget,_In_opt_ WDFREQUEST Request,_In_ ULONG IoctlCode,_In_opt_ PWDF_MEMORY_DESCRIPTOR InputBuffer,_In_opt_ PWDF_MEMORY_DESCRIPTOR OutputBuffer,_In_opt_ PWDF_REQUEST_SEND_OPTIONS RequestOptions,_Out_opt_ PULONG_PTR BytesReturned)
BOOLEAN None None.RtlValidSecurityDescriptor(_In_ PSECURITY_DESCRIPTOR SecurityDescriptor)
NTSTATUS None None.FsRtlCheckOplock(_In_ POPLOCK Oplock,_In_ PIRP Irp,_In_opt_ PVOID Context,_In_opt_ POPLOCK_WAIT_COMPLETE_ROUTINE CompletionRoutine,_In_opt_ POPLOCK_FS_PREPOST_IRP PostIrpRoutine)
NTSTATUS None None.WdfRequestAllocateTimer(_In_ WDFREQUEST Request)
WDFREQUEST None None.WdfDmaTransactionGetRequest(_In_ WDFDMATRANSACTION DmaTransaction)
NTSTATUS None None.WdfDmaTransactionInitializeUsingOffset(_In_ WDFDMATRANSACTION DmaTransaction,_In_ PFN_WDF_PROGRAM_DMA EvtProgramDmaFunction,_In_ WDF_DMA_DIRECTION DmaDirection,_In_ PMDL Mdl,_In_ size_t Offset,_In_ size_t Length)
VOID None None.DrvFree(PVOID pv None,ULONG_PTR id None)
BOOL None setupapi.SetupSetFileQueueAlternatePlatform(_In_ HSPFILEQ QueueHandle,_In_ PSP_ALTPLATFORM_INFO AlternatePlatformInfo,_In_ PCWSTR AlternateDefaultCatalogFile)
BOOL None setupapi.SetupSetFileQueueAlternatePlatformW(_In_ HSPFILEQ QueueHandle,_In_ PSP_ALTPLATFORM_INFO AlternatePlatformInfo,_In_ PCWSTR AlternateDefaultCatalogFile)
BOOL None setupapi.SetupSetFileQueueAlternatePlatformA(_In_ HSPFILEQ QueueHandle,_In_ PSP_ALTPLATFORM_INFO AlternatePlatformInfo,_In_ PCWSTR AlternateDefaultCatalogFile)
VOID None None.EngSetLastError(_In_ ULONG iError)
BOOL None setupapi.SetupInstallFile(_In_ HINF InfHandle,_In_ PINFCONTEXT InfContext,_In_ PCTSTR SourceFile,_In_ PCTSTR SourcePathRoot,_In_ PCTSTR DestinationName,_In_ DWORD CopyStyle,_In_ PSP_FILE_CALLBACK CopyMsgHandler,_In_ PVOID Context)
BOOL None setupapi.SetupInstallFileW(_In_ HINF InfHandle,_In_ PINFCONTEXT InfContext,_In_ PCTSTR SourceFile,_In_ PCTSTR SourcePathRoot,_In_ PCTSTR DestinationName,_In_ DWORD CopyStyle,_In_ PSP_FILE_CALLBACK CopyMsgHandler,_In_ PVOID Context)
BOOL None setupapi.SetupInstallFileA(_In_ HINF InfHandle,_In_ PINFCONTEXT InfContext,_In_ PCTSTR SourceFile,_In_ PCTSTR SourcePathRoot,_In_ PCTSTR DestinationName,_In_ DWORD CopyStyle,_In_ PSP_FILE_CALLBACK CopyMsgHandler,_In_ PVOID Context)
BOOL None setupapi.SetupDestroyDiskSpaceList(_Inout_ HDSKSPC DiskSpace)
BOOL None None.EngDeletePalette(_In_ HPALETTE hpal)
NTSTATUS None None.DriverEntry(_In_ PDRIVER_OBJECT DriverObject,_In_ PUNICODE_STRING RegistryPath)
VOID None None.SeDeleteObjectAuditAlarm(_In_ PVOID Object,_In_ HANDLE Handle)
VOID None None.SeOpenObjectForDeleteAuditAlarm(_In_ PUNICODE_STRING ObjectTypeName,_In_opt_ PVOID Object,_In_opt_ PUNICODE_STRING AbsoluteObjectName,_In_ PSECURITY_DESCRIPTOR SecurityDescriptor,_In_ PACCESS_STATE AccessState,_In_ BOOLEAN ObjectCreated,_In_ BOOLEAN AccessGranted,_In_ KPROCESSOR_MODE AccessMode,_Out_ PBOOLEAN GenerateOnClose)
BOOLEAN None None.SeAuditingFileEvents(_In_ BOOLEAN AccessGranted,_In_ PSECURITY_DESCRIPTOR SecurityDescriptor)
VOID None None.SeOpenObjectAuditAlarm(_In_ PUNICODE_STRING ObjectTypeName,_In_opt_ PVOID Object,_In_opt_ PUNICODE_STRING AbsoluteObjectName,_In_ PSECURITY_DESCRIPTOR SecurityDescriptor,_In_ PACCESS_STATE AccessState,_In_ BOOLEAN ObjectCreated,_In_ BOOLEAN AccessGranted,_In_ KPROCESSOR_MODE AccessMode,_Out_ PBOOLEAN GenerateOnClose)
NTSTATUS None None.IoCheckQuotaBufferValidity(_In_ PFILE_QUOTA_INFORMATION QuotaBuffer,_In_ ULONG QuotaLength,_Out_ PULONG ErrorOffset)
NTSTATUS None None.FltLockUserBuffer(_In_ PFLT_CALLBACK_DATA CallbackData)
VOID None None.WdfChildListEndIteration(_In_ WDFCHILDLIST ChildList,_In_ PWDF_CHILD_LIST_ITERATOR Iterator)
NTSTATUS None None.WdfPdoAddEjectionRelationsPhysicalDevice(_In_ WDFDEVICE Device,_In_ PDEVICE_OBJECT PhysicalDevice)
BOOLEAN None None.WdfWmiProviderIsEnabled(_In_ WDFWMIPROVIDER WmiProvider,_In_ WDF_WMI_PROVIDER_CONTROL ProviderControl)
NTSTATUS None None.WdfIoTargetOpen(_In_ WDFIOTARGET IoTarget,_In_ PWDF_IO_TARGET_OPEN_PARAMS OpenParams)
WDFCHILDLIST None None.WdfFdoGetDefaultChildList(_In_ WDFDEVICE Fdo)
NTSTATUS None None.WdfCollectionCreate(_In_opt_ PWDF_OBJECT_ATTRIBUTES CollectionAttributes,_Out_ WDFCOLLECTION *Collection)
NTSTATUS None None.ZwDeleteValueKey(_In_ HANDLE KeyHandle,_In_ PUNICODE_STRING ValueName)
BOOL None setupapi.SetupQueueRename(_In_ HSPFILEQ QueueHandle,_In_ PCTSTR SourcePath,_In_ PCTSTR SourceFileName,_In_ PCTSTR TargetPath,_In_ PCTSTR TargetFileName)
BOOL None setupapi.SetupQueueRenameW(_In_ HSPFILEQ QueueHandle,_In_ PCTSTR SourcePath,_In_ PCTSTR SourceFileName,_In_ PCTSTR TargetPath,_In_ PCTSTR TargetFileName)
BOOL None setupapi.SetupQueueRenameA(_In_ HSPFILEQ QueueHandle,_In_ PCTSTR SourcePath,_In_ PCTSTR SourceFileName,_In_ PCTSTR TargetPath,_In_ PCTSTR TargetFileName)
BOOL None None.EngAlphaBlend(SURFOBJ *psoDest None,SURFOBJ *psoSrc None,CLIPOBJ *pco None,XLATEOBJ *pxlo None,RECTL *prclDest None,RECTL *prclSrc None,BLENDOBJ *pBlendObj None)
PVOID None None.WdfMemoryGetBuffer(_In_ WDFMEMORY Memory,_Out_opt_ size_t *BufferSize)
NTSTATUS None None.SeSetSecurityDescriptorInfoEx(_In_opt_ PVOID Object,_In_ PSECURITY_INFORMATION SecurityInformation,_In_ PSECURITY_DESCRIPTOR SecurityDescriptor,_Inout_ PSECURITY_DESCRIPTOR *ObjectsSecurityDescriptor,_In_ ULONG AutoInheritFlags,_In_ POOL_TYPE PoolType,_In_ PGENERIC_MAPPING GenericMapping)
PSCSI_REQUEST_BLOCK None None.ScsiPortGetSrb(_In_ PVOID DeviceExtension,_In_ UCHAR PathId,_In_ UCHAR TargetId,_In_ UCHAR Lun,_In_ LONG QueueTag)
PIRP None None.IoGetTopLevelIrp(VOID None None)
NTSTATUS None None.WdfDriverCreate(_In_ PDRIVER_OBJECT DriverObject,_In_ PCUNICODE_STRING RegistryPath,_In_opt_ PWDF_OBJECT_ATTRIBUTES DriverAttributes,_In_ PWDF_DRIVER_CONFIG DriverConfig,_Out_opt_ WDFDRIVER *Driver)
NTSTATUS None None.WdfDeviceInitRegisterPowerStateChangeCallback(_In_ PWDFDEVICE_INIT DeviceInit,_In_ WDF_DEVICE_POWER_STATE PowerState,_In_ PFN_WDF_DEVICE_POWER_STATE_CHANGE_NOTIFICATION EvtDevicePowerStateChange,_In_ ULONG CallbackTypes)
NTSTATUS None None.WdfIoTargetQueryForInterface(_In_ WDFIOTARGET IoTarget,_In_ LPCGUID InterfaceType,_Out_ PINTERFACE Interface,_In_ USHORT Size,_In_ USHORT Version,_In_opt_ PVOID InterfaceSpecificData)
WDFQUEUE None None.WdfDeviceGetDefaultQueue(_In_ WDFDEVICE Device)
PFILE_OBJECT None None.WdfIoTargetWdmGetTargetFileObject(_In_ WDFIOTARGET IoTarget)
WDFDEVICE None None.WdfDmaTransactionGetDevice(_In_ WDFDMATRANSACTION DmaTransaction)
VOID None None.WdfDeviceResumeIdle(_In_ WDFDEVICE Device)
VOID None None.WdfRequestStopAcknowledge(_In_ WDFREQUEST Request,_In_ BOOLEAN Requeue)
ULONG None None.WdfCmResourceListGetCount(_In_ WDFCMRESLIST List)
WDFIORESLIST None None.WdfIoResourceRequirementsListGetIoResList(_In_ WDFIORESREQLIST RequirementsList,_In_ ULONG Index)
ULONG_PTR None None.DrvLoadFontFile(ULONG cFiles None,ULONG_PTR *piFile None,PVOID *ppvView None,ULONG *pcjView None,DESIGNVECTOR *pdv None,ULONG ulLangID None,ULONG ulFastCheckSum None)
NTSTATUS None None.WdfUsbTargetPipeResetSynchronously(_In_ WDFUSBPIPE Pipe,_In_opt_ WDFREQUEST Request,_In_opt_ PWDF_REQUEST_SEND_OPTIONS RequestOptions)
NTSTATUS None None.WdfDeviceQueryProperty(_In_ WDFDEVICE Device,_In_ DEVICE_REGISTRY_PROPERTY DeviceProperty,_In_ ULONG BufferLength,_Out_ PVOID PropertyBuffer,_Out_ PULONG ResultLength)
VOID None None.WdfObjectReleaseLock(_In_ WDFOBJECT Object)
NTSTATUS None None.WdfRegistryQueryMultiString(_In_ WDFKEY Key,_In_ PCUNICODE_STRING ValueName,_In_opt_ PWDF_OBJECT_ATTRIBUTES StringsAttributes,_In_ WDFCOLLECTION Collection)
NTSTATUS None None.WdfIoQueueRetrieveNextRequest(_In_ WDFQUEUE Queue,_Out_ WDFREQUEST *OutRequest)
BYTE None None.WdfUsbInterfaceGetConfiguredSettingIndex(_In_ WDFUSBINTERFACE Interface)
WDFDEVICE None None.WdfWmiInstanceGetDevice(_In_ WDFWMIINSTANCE WmiInstance)
VOID None None.WdfRequestGetCompletionParams(_In_ WDFREQUEST Request,_Out_ PWDF_REQUEST_COMPLETION_PARAMS Params)
VOID None None.WdfDeviceInitSetDeviceType(_In_ PWDFDEVICE_INIT DeviceInit,_In_ DEVICE_TYPE DeviceType)
PDEVICE_OBJECT None None.WdfFdoInitWdmGetPhysicalDevice(_In_ PWDFDEVICE_INIT DeviceInit)
PIRP None None.WdfRequestWdmGetIrp(_In_ WDFREQUEST Request)
NTSTATUS None None.WdfIoTargetQueryTargetProperty(_In_ WDFIOTARGET IoTarget,_In_ DEVICE_REGISTRY_PROPERTY DeviceProperty,_In_ ULONG BufferLength,_Out_opt_ PVOID PropertyBuffer,_Out_ PULONG ResultLength)
VOID None None.WdfRequestCompleteWithInformation(_In_ WDFREQUEST Request,_In_ NTSTATUS Status,_In_ ULONG_PTR Information)
BOOLEAN None None.WdfDpcEnqueue(_In_ WDFDPC Dpc)
VOID None None.WdfWaitLockRelease(_In_ WDFWAITLOCK Lock)
NTSTATUS None None.WdfLookasideListCreate(_In_opt_ PWDF_OBJECT_ATTRIBUTES LookasideAttributes,_In_ size_t BufferSize,_In_ POOL_TYPE PoolType,_In_opt_ PWDF_OBJECT_ATTRIBUTES MemoryAttributes,_In_opt_ ULONG PoolTag,_Out_ WDFLOOKASIDE *Lookaside)
BOOLEAN None None.WdfRequestCancelSentRequest(_In_ WDFREQUEST Request)
WDFIOTARGET None None.WdfDeviceGetIoTarget(_In_ WDFDEVICE Device)
VOID None None.WdfUsbTargetDeviceGetDeviceDescriptor(_In_ WDFUSBDEVICE UsbDevice,_Out_ PUSB_DEVICE_DESCRIPTOR UsbDeviceDescriptor)
NTSTATUS None None.WdfRegistryAssignMultiString(_In_ WDFKEY Key,_In_ PCUNICODE_STRING ValueName,_In_ WDFCOLLECTION StringsCollection)
NTSTATUS None None.WdfDeviceAddRemovalRelationsPhysicalDevice(_In_ WDFDEVICE Device,_In_ PDEVICE_OBJECT PhysicalDevice)
VOID None None.WdfDeviceSetStaticStopRemove(_In_ WDFDEVICE Device,_In_ BOOLEAN Stoppable)
WDFUSBPIPE None None.WdfUsbInterfaceGetConfiguredPipe(_In_ WDFUSBINTERFACE UsbInterface,_In_ UCHAR PipeIndex,_Out_opt_ PWDF_USB_PIPE_INFORMATION PipeInfo)
NTSTATUS None None.WdfIoResourceListCreate(_In_ WDFIORESREQLIST RequirementsList,_In_opt_ PWDF_OBJECT_ATTRIBUTES Attributes,_Out_ WDFIORESLIST *ResourceList)
NTSTATUS None None.WdfRegistryAssignMemory(_In_ WDFKEY Key,_In_ PCUNICODE_STRING ValueName,_In_ ULONG ValueType,_In_ WDFMEMORY Memory,_In_opt_ PWDFMEMORY_OFFSET MemoryOffsets)
VOID None None.WdfDeviceInitSetPowerInrush(_In_ PWDFDEVICE_INIT DeviceInit)
NTSTATUS None None.WdfRegistryAssignValue(_In_ WDFKEY Key,_In_ PCUNICODE_STRING ValueName,_In_ ULONG ValueType,_In_ ULONG ValueLength,_In_ PVOID Value)
VOID None None.WdfStringGetUnicodeString(_In_ WDFSTRING String,_Out_ PUNICODE_STRING UnicodeString)
NTSTATUS None None.WdfCommonBufferCreateWithConfig(_In_ WDFDMAENABLER DmaEnabler,_In_ size_t Length,_In_ PWDF_COMMON_BUFFER_CONFIG Config,_In_opt_ PWDF_OBJECT_ATTRIBUTES Attributes,_Out_ WDFCOMMONBUFFER *CommonBuffer)
VOID None None.WdfPdoInitSetEventCallbacks(_In_ PWDFDEVICE_INIT DeviceInit,_In_ PWDF_PDO_EVENT_CALLBACKS DispatchTable)
NTSTATUS None None.WdfFdoInitQueryProperty(_In_ PWDFDEVICE_INIT DeviceInit,_In_ DEVICE_REGISTRY_PROPERTY DeviceProperty,_In_ ULONG BufferLength,_Out_ PVOID PropertyBuffer,_Out_ PULONG ResultLength)
VOID None None.WdfDeviceSetBusInformationForChildren(_In_ WDFDEVICE Device,_In_ PPNP_BUS_INFORMATION BusInformation)
VOID None None.WdfPdoInitSetDefaultLocale(_In_ PWDFDEVICE_INIT DeviceInit,_In_ LCID LocaleId)
VOID None None.WdfDeviceSetDeviceState(_In_ WDFDEVICE Device,_In_ PWDF_DEVICE_STATE DeviceState)
NTSTATUS None None.WdfUsbTargetDeviceSendUrbSynchronously(_In_ WDFUSBDEVICE UsbDevice,_In_opt_ WDFREQUEST Request,_In_opt_ PWDF_REQUEST_SEND_OPTIONS RequestOptions,_In_ PURB Urb)
NTSTATUS None None.WdfIoResourceListAppendDescriptor(_In_ WDFIORESLIST ResourceList,_In_ PIO_RESOURCE_DESCRIPTOR Descriptor)
NTSTATUS None None.WdfChildListRetrieveNextDevice(_In_ WDFCHILDLIST ChildList,_In_ PWDF_CHILD_LIST_ITERATOR Iterator,_Out_ WDFDEVICE *Device,_Inout_ PWDF_CHILD_RETRIEVE_INFO Info)
VOID None None.WdfIoResourceRequirementsListSetInterfaceType(_In_ WDFIORESREQLIST RequirementsList,_In_ INTERFACE_TYPE InterfaceType)
VOID None None.WdfIoTargetClose(_In_ WDFIOTARGET IoTarget)
VOID None None.WdfIoResourceListRemove(_In_ WDFIORESLIST ResourceList,_In_ ULONG Index)
NTSTATUS None None.WdfDeviceAddQueryInterface(_In_ WDFDEVICE Device,_In_ PWDF_QUERY_INTERFACE_CONFIG InterfaceConfig)
NTSTATUS None None.WdfIoTargetSendIoctlSynchronously(_In_ WDFIOTARGET IoTarget,_In_opt_ WDFREQUEST Request,_In_ ULONG IoctlCode,_In_opt_ PWDF_MEMORY_DESCRIPTOR InputBuffer,_In_opt_ PWDF_MEMORY_DESCRIPTOR OutputBuffer,_In_opt_ PWDF_REQUEST_SEND_OPTIONS RequestOptions,_Out_opt_ PULONG_PTR BytesReturned)
NTSTATUS None None.WdfWaitLockCreate(_In_opt_ PWDF_OBJECT_ATTRIBUTES LockAttributes,_Out_ WDFWAITLOCK *Lock)
BOOLEAN None None.WdfDmaTransactionDmaCompleted(_In_ WDFDMATRANSACTION DmaTransaction,_Out_ NTSTATUS *Status)
NTSTATUS None None.WdfDeviceMiniportCreate(_In_ WDFDRIVER Driver,_In_opt_ PWDF_OBJECT_ATTRIBUTES Attributes,_In_ PDEVICE_OBJECT DeviceObject,_In_opt_ PDEVICE_OBJECT AttachedDeviceObject,_In_opt_ PDEVICE_OBJECT Pdo,_Out_ WDFDEVICE *Device)
NTSTATUS None None.WdfRequestRetrieveUnsafeUserOutputBuffer(_In_ WDFREQUEST Request,_In_ size_t MinimumRequiredLength,_Out_ PVOID *OutputBuffer,_Out_opt_ size_t *Length)
NTSTATUS None None.WdfIoTargetAllocAndQueryTargetProperty(_In_ WDFIOTARGET IoTarget,_In_ DEVICE_REGISTRY_PROPERTY DeviceProperty,_In_ POOL_TYPE PoolType,_In_opt_ PWDF_OBJECT_ATTRIBUTES PropertyMemoryAttributes,_Out_ WDFMEMORY *PropertyMemory)
NTSTATUS None None.WdfUsbTargetDeviceRetrieveCurrentFrameNumber(_In_ WDFUSBDEVICE UsbDevice,_Out_ PULONG CurrentFrameNumber)
BOOLEAN None None.WdfUsbTargetPipeIsOutEndpoint(_In_ WDFUSBPIPE Pipe)
NTSTATUS None None.WdfDeviceInitAssignSDDLString(_In_ PWDFDEVICE_INIT DeviceInit,_In_opt_ PCUNICODE_STRING SDDLString)
NTSTATUS None None.WdfIoTargetFormatRequestForInternalIoctl(_In_ WDFIOTARGET IoTarget,_In_ WDFREQUEST Request,_In_ ULONG IoctlCode,_In_opt_ WDFMEMORY InputBuffer,_In_opt_ PWDFMEMORY_OFFSET InputBufferOffset,_In_opt_ WDFMEMORY OutputBuffer,_In_opt_ PWDFMEMORY_OFFSET OutputBufferOffset)
PDEVICE_OBJECT None None.WdfIoTargetWdmGetTargetDeviceObject(_In_ WDFIOTARGET IoTarget)
PIO_RESOURCE_DESCRIPTOR None None.WdfIoResourceListGetDescriptor(_In_ WDFIORESLIST ResourceList,_In_ ULONG Index)
NTSTATUS None None.WdfUsbTargetDeviceFormatRequestForUrb(_In_ WDFUSBDEVICE UsbDevice,_In_ WDFREQUEST Request,_In_ WDFMEMORY UrbMemory,_In_opt_ PWDFMEMORY_OFFSET UrbMemoryOffset)
VOID None None.WdfDeviceInitSetPowerPolicyEventCallbacks(_In_ PWDFDEVICE_INIT DeviceInit,_In_ PWDF_POWER_POLICY_EVENT_CALLBACKS PowerPolicyEventCallbacks)
NTSTATUS None None.WdfRegistryQueryULong(_In_ WDFKEY Key,_In_ PCUNICODE_STRING ValueName,_Out_ PULONG Value)
NTSTATUS None None.WdfUsbTargetPipeReadSynchronously(_In_ WDFUSBPIPE Pipe,_In_opt_ WDFREQUEST Request,_In_opt_ PWDF_REQUEST_SEND_OPTIONS RequestOptions,_In_opt_ PWDF_MEMORY_DESCRIPTOR MemoryDescriptor,_Out_opt_ PULONG BytesRead)
VOID None None.WdfDeviceInitSetPowerNotPageable(_In_ PWDFDEVICE_INIT DeviceInit)
NTSTATUS None None.WdfIoQueueReadyNotify(_In_ WDFQUEUE Queue,_In_opt_ PFN_WDF_IO_QUEUE_STATE QueueReady,_In_opt_ WDFCONTEXT Context)
WDFFILEOBJECT None None.WdfDeviceGetFileObject(_In_ WDFDEVICE Device,_In_ PFILE_OBJECT FileObject)
VOID None None.WdfRequestSetCompletionRoutine(_In_ WDFREQUEST Request,_In_opt_ PFN_WDF_REQUEST_COMPLETION_ROUTINE CompletionRoutine,_In_opt_ WDFCONTEXT CompletionContext)
NTSTATUS None None.WdfRegistryQueryUnicodeString(_In_ WDFKEY Key,_In_ PCUNICODE_STRING ValueName,_Out_opt_ PUSHORT ValueByteLength,_Inout_ PUNICODE_STRING Value)
NTSTATUS None None.WdfWmiProviderCreate(_In_ WDFDEVICE Device,_In_ PWDF_WMI_PROVIDER_CONFIG WmiProviderConfig,_In_opt_ PWDF_OBJECT_ATTRIBUTES ProviderAttributes,_Out_ WDFWMIPROVIDER *WmiProvider)
HANDLE None None.WdfIoTargetWdmGetTargetFileHandle(_In_ WDFIOTARGET IoTarget)
NTSTATUS None None.WdfRegistryQueryString(_In_ WDFKEY Key,_In_ PCUNICODE_STRING ValueName,_In_ WDFSTRING String)
NTSTATUS None None.WdfWaitLockAcquire(_In_ WDFWAITLOCK Lock,_In_opt_ PLONGLONG Timeout)
NTSTATUS None None.WdfRequestGetStatus(_In_ WDFREQUEST Request)
NTSTATUS None None.WdfUsbTargetDeviceFormatRequestForString(_In_ WDFUSBDEVICE UsbDevice,_In_ WDFREQUEST Request,_In_ WDFMEMORY Memory,_In_opt_ PWDFMEMORY_OFFSET Offset,_In_ UCHAR StringIndex,_In_opt_ USHORT LangID)
VOID None None.WdfUsbTargetPipeSetNoMaximumPacketSizeCheck(_In_ WDFUSBPIPE Pipe)
VOID None None.WdfIoResourceListRemoveByDescriptor(_In_ WDFIORESLIST ResourceList,_In_ PIO_RESOURCE_DESCRIPTOR Descriptor)
NTSTATUS None None.WdfSpinLockCreate(_In_opt_ PWDF_OBJECT_ATTRIBUTES SpinLockAttributes,_Out_ WDFSPINLOCK *SpinLock)
NTSTATUS None None.WdfObjectCreate(_In_opt_ PWDF_OBJECT_ATTRIBUTES Attributes,_Out_ WDFOBJECT *Object)
NTSTATUS None None.WdfRequestRequeue(_In_ WDFREQUEST Request)
NTSTATUS None None.WdfCmResourceListInsertDescriptor(_In_ WDFCMRESLIST List,_In_ PCM_PARTIAL_RESOURCE_DESCRIPTOR Descriptor,_In_ ULONG Index)
VOID None None.WdfChildListUpdateAllChildDescriptionsAsPresent(_In_ WDFCHILDLIST ChildList)
VOID None None.WdfIoTargetCloseForQueryRemove(_In_ WDFIOTARGET IoTarget)
BOOLEAN None None.WdfTimerStop(_In_ WDFTIMER Timer,_In_ BOOLEAN Wait)
NTSTATUS None None.WdfRequestMarkCancelableEx(_In_ WDFREQUEST Request,_In_ PFN_WDF_REQUEST_CANCEL EvtRequestCancel)
NTSTATUS None None.WdfChildListUpdateChildDescriptionAsMissing(_In_ WDFCHILDLIST ChildList,_In_ PWDF_CHILD_IDENTIFICATION_DESCRIPTION_HEADER IdentificationDescription)
NTSTATUS None None.WdfPdoInitAddHardwareID(_In_ PWDFDEVICE_INIT DeviceInit,_In_ PCUNICODE_STRING HardwareID)
BYTE None None.WdfUsbInterfaceGetInterfaceNumber(_In_ WDFUSBINTERFACE UsbInterface)
NTSTATUS None None.WdfUsbTargetDeviceCreate(_In_ WDFDEVICE Device,_In_opt_ PWDF_OBJECT_ATTRIBUTES Attributes,_Out_ WDFUSBDEVICE *UsbDevice)
PVOID None None.WdfCommonBufferGetAlignedVirtualAddress(_In_ WDFCOMMONBUFFER CommonBuffer)
VOID None None.WdfIoResourceListUpdateDescriptor(_In_ WDFIORESLIST ResourceList,_In_ PIO_RESOURCE_DESCRIPTOR Descriptor,_In_ ULONG Index)
WDFOBJECT None None.WdfCollectionGetFirstItem(_In_ WDFCOLLECTION Collection)
NTSTATUS None None.WdfRequestReuse(_In_ WDFREQUEST Request,_In_ PWDF_REQUEST_REUSE_PARAMS ReuseParams)
NTSTATUS None None.WdfDeviceInitRegisterPowerPolicyStateChangeCallback(_In_ PWDFDEVICE_INIT DeviceInit,_In_ WDF_DEVICE_POWER_POLICY_STATE PowerPolicyState,_In_ PFN_WDF_DEVICE_POWER_POLICY_STATE_CHANGE_NOTIFICATION EvtDevicePowerPolicyStateChange,_In_ ULONG CallbackTypes)
VOID None None.WdfUsbTargetPipeGetInformation(_In_ WDFUSBPIPE Pipe,_Out_ PWDF_USB_PIPE_INFORMATION PipeInformation)
VOID None None.WdfIoQueueStart(_In_ WDFQUEUE Queue)
WDFUSBINTERFACE None None.WdfUsbTargetDeviceGetInterface(_In_ WDFUSBDEVICE UsbDevice,_In_ UCHAR InterfaceIndex)
NTSTATUS None None.WdfDeviceAssignSxWakeSettings(_In_ WDFDEVICE Device,_In_ PWDF_DEVICE_POWER_POLICY_WAKE_SETTINGS Settings)
NTSTATUS None None.WdfIoTargetSendWriteSynchronously(_In_ WDFIOTARGET IoTarget,_In_opt_ WDFREQUEST Request,_In_opt_ PWDF_MEMORY_DESCRIPTOR InputBuffer,_In_opt_ PLONGLONG DeviceOffset,_In_opt_ PWDF_REQUEST_SEND_OPTIONS RequestOptions,_Out_opt_ PULONG_PTR BytesWritten)
WDFDEVICE None None.WdfWdmDeviceGetWdfDeviceHandle(_In_ PDEVICE_OBJECT DeviceObject)
WDFOBJECT None None.WdfWorkItemGetParentObject(_In_ WDFWORKITEM WorkItem)
NTSTATUS None None.WdfDeviceEnqueueRequest(_In_ WDFDEVICE Device,_In_ WDFREQUEST Request)
BOOLEAN None None.WdfInterruptSynchronize(_In_ WDFINTERRUPT Interrupt,_In_ PFN_WDF_INTERRUPT_SYNCHRONIZE Callback,_In_ WDFCONTEXT Context)
VOID None None.WdfFdoLockStaticChildListForIteration(_In_ WDFDEVICE Fdo)
PTXN_PARAMETER_BLOCK None None.IoGetTransactionParameterBlock(_In_ PFILE_OBJECT FileObject)
NTSTATUS None None.WdfIoTargetCreate(_In_ WDFDEVICE Device,_In_opt_ PWDF_OBJECT_ATTRIBUTES IoTargetAttributes,_Out_ WDFIOTARGET *IoTarget)
VOID None None.WdfDeviceInitFree(_In_ PWDFDEVICE_INIT DeviceInit)
NTSTATUS None None.WdfFdoQueryForInterface(_In_ WDFDEVICE Device,_In_ LPCGUID InterfaceType,_Out_ PINTERFACE Interface,_In_ USHORT Size,_In_ USHORT Version,_In_opt_ PVOID InterfaceSpecificData)
VOID None None.WdfPdoRequestEject(_In_ WDFDEVICE Device)
NTSTATUS None None.WdfRequestRetrieveOutputMemory(_In_ WDFREQUEST Request,_Out_ WDFMEMORY *Memory)
WDFFILEOBJECT None None.WdfRequestGetFileObject(_In_ WDFREQUEST Request)
NTSTATUS None None.WdfIoQueueFindRequest(_In_ WDFQUEUE Queue,_In_opt_ WDFREQUEST FoundRequest,_In_opt_ WDFFILEOBJECT FileObject,_Inout_ PWDF_REQUEST_PARAMETERS Parameters,_Out_ WDFREQUEST *OutRequest)
NTSTATUS None None.WdfDeviceOpenRegistryKey(_In_ WDFDEVICE Device,_In_ ULONG DeviceInstanceKeyType,_In_ ACCESS_MASK DesiredAccess,_In_opt_ PWDF_OBJECT_ATTRIBUTES KeyAttributes,_Out_ WDFKEY *Key)
VOID None None.WdfDeviceSetFailed(_In_ WDFDEVICE Device,_In_ WDF_DEVICE_FAILED_ACTION FailedAction)
VOID None None.WdfRequestFormatRequestUsingCurrentType(_In_ WDFREQUEST Request)
NTSTATUS None None.WdfUsbTargetDeviceFormatRequestForControlTransfer(_In_ WDFUSBDEVICE UsbDevice,_In_ WDFREQUEST Request,_In_ PWDF_USB_CONTROL_SETUP_PACKET SetupPacket,_In_opt_ WDFMEMORY TransferMemory,_In_opt_ PWDFMEMORY_OFFSET TransferOffset)
NTSTATUS None None.WdfRegistryAssignUnicodeString(_In_ WDFKEY Key,_In_ PCUNICODE_STRING ValueName,_In_ PCUNICODE_STRING Value)
VOID None None.WdfChildListEndScan(_In_ WDFCHILDLIST ChildList)
NTSTATUS None None.WdfUsbTargetPipeFormatRequestForWrite(_In_ WDFUSBPIPE Pipe,_In_ WDFREQUEST Request,_In_opt_ WDFMEMORY WriteMemory,_In_opt_ PWDFMEMORY_OFFSET WriteOffset)
PHYSICAL_ADDRESS None None.WdfCommonBufferGetAlignedLogicalAddress(_In_ WDFCOMMONBUFFER CommonBuffer)
size_t None None.WdfDmaEnablerGetMaximumScatterGatherElements(_In_ WDFDMAENABLER DmaEnabler)
ULONG_PTR None None.WdfRequestGetInformation(_In_ WDFREQUEST Request)
NTSTATUS None None.WdfCmResourceListAppendDescriptor(_In_ WDFCMRESLIST List,_In_ PCM_PARTIAL_RESOURCE_DESCRIPTOR Descriptor)
VOID None None.WdfControlDeviceInitSetShutdownNotification(_In_ PWDFDEVICE_INIT DeviceInit,_In_ PFN_WDF_DEVICE_SHUTDOWN_NOTIFICATION Notification,_In_ UCHAR Flags)
USBD_CONFIGURATION_HANDLE None None.WdfUsbTargetDeviceWdmGetConfigurationHandle(_In_ WDFUSBDEVICE UsbDevice)
WDFOBJECT None None.WdfCollectionGetItem(_In_ WDFCOLLECTION Collection,_In_ ULONG Index)
NTSTATUS None None.WdfWmiInstanceFireEvent(_In_ WDFWMIINSTANCE WmiInstance,_In_opt_ ULONG EventDataSize,_In_opt_ PVOID EventData)
NTSTATUS None None.WdfFdoInitOpenRegistryKey(_In_ PWDFDEVICE_INIT DeviceInit,_In_ ULONG DeviceInstanceKeyType,_In_ ACCESS_MASK DesiredAccess,_In_opt_ PWDF_OBJECT_ATTRIBUTES KeyAttributes,_Out_ WDFKEY *Key)
BOOLEAN None None.WdfChildListRequestChildEject(_In_ WDFCHILDLIST ChildList,_In_ PWDF_CHILD_IDENTIFICATION_DESCRIPTION_HEADER IdentificationDescription)
PUNICODE_STRING None None.WdfFileObjectGetFileName(_In_ WDFFILEOBJECT FileObject)
WDFDRIVER None None.WdfDeviceGetDriver(_In_ WDFDEVICE Device)
VOID None None.WdfDeviceInitSetRequestAttributes(_In_ PWDFDEVICE_INIT DeviceInit,_In_ PWDF_OBJECT_ATTRIBUTES RequestAttributes)
KPROCESSOR_MODE None None.WdfRequestGetRequestorMode(_In_ WDFREQUEST Request)
ULONG None None.WdfDeviceGetCharacteristics(_In_ WDFDEVICE Device)
NTSTATUS None None.WdfUsbTargetDeviceCyclePortSynchronously(_In_ WDFUSBDEVICE UsbDevice)
NTSTATUS None None.WdfDeviceWdmDispatchPreprocessedIrp(_In_ WDFDEVICE Device,_In_ PIRP Irp)
NTSTATUS None None.WdfRegistryQueryValue(_In_ WDFKEY Key,_In_ PCUNICODE_STRING ValueName,_In_ ULONG ValueLength,_Out_opt_ PVOID Value,_Out_opt_ PULONG ValueLengthQueried,_Out_opt_ PULONG ValueType)
NTSTATUS None None.WdfRequestRetrieveOutputBuffer(_In_ WDFREQUEST Request,_In_ size_t MinimumRequiredSize,_Out_ PVOID *Buffer,_Out_opt_ size_t *Length)
BOOLEAN None None.RtlEqualSid(_In_ PSID Sid1,_In_ PSID Sid2)
NTSTATUS None None.WdfRegistryAssignULong(_In_ WDFKEY Key,_In_ PCUNICODE_STRING ValueName,_In_ ULONG Value)
NTSTATUS None None.WdfPdoInitAddDeviceText(_In_ PWDFDEVICE_INIT DeviceInit,_In_ PCUNICODE_STRING DeviceDescription,_In_ PCUNICODE_STRING DeviceLocation,_In_ LCID LocaleId)
VOID None None.WdfIoTargetStop(_In_ WDFIOTARGET IoTarget,_In_ WDF_IO_TARGET_SENT_IO_ACTION Action)
VOID None None.WdfRequestWdmFormatUsingStackLocation(_In_ WDFREQUEST Request,_In_ PIO_STACK_LOCATION Stack)
NTSTATUS None None.WdfRequestRetrieveUnsafeUserInputBuffer(_In_ WDFREQUEST Request,_In_ size_t MinimumRequiredLength,_Out_ PVOID *InputBuffer,_Out_opt_ size_t *Length)
POWER_ACTION None None.WdfDeviceGetSystemPowerAction(_In_ WDFDEVICE Device)
NTSTATUS None None.WdfChildListCreate(_In_ WDFDEVICE Device,_In_ PWDF_CHILD_LIST_CONFIG Config,_In_opt_ PWDF_OBJECT_ATTRIBUTES ChildListAttributes,_Out_ WDFCHILDLIST *ChildList)
NTSTATUS None None.WdfDeviceAssignMofResourceName(_In_ WDFDEVICE Device,_In_ PCUNICODE_STRING MofResourceName)
VOID None None.WdfChildListBeginIteration(_In_ WDFCHILDLIST ChildList,_In_ PWDF_CHILD_LIST_ITERATOR Iterator)
NTSTATUS None None.WdfDpcCreate(_In_ PWDF_DPC_CONFIG Config,_In_ PWDF_OBJECT_ATTRIBUTES Attributes,_Out_ WDFDPC *Dpc)
VOID None None.WdfDeviceSetPnpCapabilities(_In_ WDFDEVICE Device,_In_ PWDF_DEVICE_PNP_CAPABILITIES PnpCapabilities)
NTSTATUS None None.WdfDeviceInitRegisterPnpStateChangeCallback(_In_ PWDFDEVICE_INIT DeviceInit,_In_ WDF_DEVICE_PNP_STATE PnpState,_In_ PFN_WDF_DEVICE_PNP_STATE_CHANGE_NOTIFICATION EvtDevicePnpStateChange,_In_ ULONG CallbackTypes)
NTSTATUS None None.WdfUsbTargetPipeFormatRequestForReset(_In_ WDFUSBPIPE Pipe,_In_ WDFREQUEST Request)
VOID None None.WdfIoQueuePurge(_In_ WDFQUEUE Queue,_In_opt_ PFN_WDF_IO_QUEUE_STATE PurgeComplete,_In_opt_ WDFCONTEXT Context)
WDFDEVICE None None.WdfWmiProviderGetDevice(_In_ WDFWMIPROVIDER WmiProvider)
NTSTATUS None None.WdfIoTargetFormatRequestForWrite(_In_ WDFIOTARGET IoTarget,_In_ WDFREQUEST Request,_In_opt_ WDFMEMORY InputBuffer,_In_opt_ PWDFMEMORY_OFFSET InputBufferOffset,_In_opt_ PLONGLONG DeviceOffset)
VOID None None.WdfDeviceInitSetCharacteristics(_In_ PWDFDEVICE_INIT DeviceInit,_In_ ULONG DeviceCharacteristics,_In_ BOOLEAN OrInValues)
VOID None None.WdfDeviceRemoveDependentUsageDeviceObject(_In_ WDFDEVICE Device,_In_ PDEVICE_OBJECT DependentDevice)
ULONGLONG None None.WdfWmiProviderGetTracingHandle(_In_ WDFWMIPROVIDER WmiProvider)
NTSTATUS None None.WdfRequestRetrieveInputBuffer(_In_ WDFREQUEST Request,_In_ size_t MinimumRequiredSize,_Out_ PVOID *Buffer,_Out_opt_ size_t *Length)
NTSTATUS None None.WdfIoResourceRequirementsListInsertIoResList(_In_ WDFIORESREQLIST RequirementsList,_In_ WDFIORESLIST IoResList,_In_ ULONG Index)
VOID None None.WdfPdoClearEjectionRelationsDevices(_In_ WDFDEVICE Device)
NTSTATUS None None.WdfRegistryCreateKey(_In_opt_ WDFKEY ParentKey,_In_ PCUNICODE_STRING KeyName,_In_ ACCESS_MASK DesiredAccess,_In_ ULONG CreateOptions,_Out_opt_ PULONG CreateDisposition,_In_opt_ PWDF_OBJECT_ATTRIBUTES KeyAttributes,_Out_ WDFKEY *Key)
NTSTATUS None None.WdfIoTargetFormatRequestForIoctl(_In_ WDFIOTARGET IoTarget,_In_ WDFREQUEST Request,_In_ ULONG IoctlCode,_In_opt_ WDFMEMORY InputBuffer,_In_opt_ PWDFMEMORY_OFFSET InputBufferOffset,_In_opt_ WDFMEMORY OutputBuffer,_In_opt_ PWDFMEMORY_OFFSET OutputBufferOffset)
PDEVICE_OBJECT None None.WdfDeviceWdmGetDeviceObject(_In_ WDFDEVICE hDevice)
VOID None None.WdfInterruptEnable(_In_ WDFINTERRUPT Interrupt)
VOID None None.WdfCmResourceListRemove(_In_ WDFCMRESLIST List,_In_ ULONG Index)
WDFQUEUE None None.WdfRequestGetIoQueue(_In_ WDFREQUEST Request)
VOID None None.WdfWorkItemEnqueue(_In_ WDFWORKITEM WorkItem)
PFILE_OBJECT None None.WdfFileObjectWdmGetFileObject(_In_ WDFFILEOBJECT FileObject)
NTSTATUS None None.WdfFdoInitAllocAndQueryProperty(_In_ PWDFDEVICE_INIT DeviceInit,_In_ DEVICE_REGISTRY_PROPERTY DeviceProperty,_In_ POOL_TYPE PoolType,_In_opt_ PWDF_OBJECT_ATTRIBUTES PropertyMemoryAttributes,_Out_ WDFMEMORY *PropertyMemory)
VOID None None.WdfDeviceSetPowerCapabilities(_In_ WDFDEVICE Device,_In_ PWDF_DEVICE_POWER_CAPABILITIES PowerCapabilities)
NTSTATUS None None.WdfRegistryRemoveValue(_In_ WDFKEY Key,_In_ PCUNICODE_STRING ValueName)
NTSTATUS None None.WdfDeviceAddDependentUsageDeviceObject(_In_ WDFDEVICE Device,_In_ PDEVICE_OBJECT DependentDevice)
WDFDEVICE None None.WdfIoQueueGetDevice(_In_ WDFQUEUE Queue)
VOID None None.WdfSpinLockRelease(_In_ WDFSPINLOCK SpinLock)
WDFDEVICE None None.WdfChildListRetrievePdo(_In_ WDFCHILDLIST ChildList,_Inout_ PWDF_CHILD_RETRIEVE_INFO RetrieveInfo)
NTSTATUS None None.WdfIoTargetStart(_In_ WDFIOTARGET IoTarget)
VOID None None.WdfDeviceSetCharacteristics(_In_ WDFDEVICE Device,_In_ ULONG DeviceCharacteristics)
VOID None None.WdfPdoRemoveEjectionRelationsPhysicalDevice(_In_ WDFDEVICE Device,_In_ PDEVICE_OBJECT PhysicalDevice)
NTSTATUS None None.WdfUsbTargetDeviceFormatRequestForCyclePort(_In_ WDFUSBDEVICE UsbDevice,_In_ WDFREQUEST Request)
WDFDEVICE None None.WdfChildListGetDevice(_In_ WDFCHILDLIST ChildList)
BOOLEAN None None.WdfRequestIsCanceled(_In_ WDFREQUEST Request)
NTSTATUS None None.WdfRequestProbeAndLockUserBufferForRead(_In_ WDFREQUEST Request,_In_ PVOID Buffer,_In_ size_t Length,_Out_ WDFMEMORY *MemoryObject)
NTSTATUS None None.WdfUsbTargetDeviceQueryString(_In_ WDFUSBDEVICE UsbDevice,_In_opt_ WDFREQUEST Request,_In_opt_ PWDF_REQUEST_SEND_OPTIONS RequestOptions,_Out_opt_ PUSHORT String,_Inout_ PUSHORT NumCharacters,_In_ UCHAR StringIndex,_In_opt_ USHORT LangID)
NTSTATUS None None.WdfUsbTargetDeviceSelectConfig(_In_ WDFUSBDEVICE UsbDevice,_In_opt_ PWDF_OBJECT_ATTRIBUTES PipeAttributes,_Inout_ PWDF_USB_DEVICE_SELECT_CONFIG_PARAMS Params)
VOID None None.WdfObjectAcquireLock(_In_ WDFOBJECT Object)
NTSTATUS None None.WdfPdoInitAddCompatibleID(_In_ PWDFDEVICE_INIT DeviceInit,_In_ PCUNICODE_STRING CompatibleID)
WDF_DEVICE_PNP_STATE None None.WdfDeviceGetDevicePnpState(_In_ WDFDEVICE Device)
NTSTATUS None None.WdfStringCreate(_In_opt_ PCUNICODE_STRING UnicodeString,_In_opt_ PWDF_OBJECT_ATTRIBUTES StringAttributes,_Out_ WDFSTRING *String)
ULONG None None.WdfIoResourceListGetCount(_In_ WDFIORESLIST ResourceList)
BOOL None setupapi.SetupGetInfInformation(_In_ LPCVOID InfSpec,_In_ DWORD SearchControl,_Inout_ PSP_INF_INFORMATION ReturnBuffer,_In_ DWORD ReturnBufferSize,_Inout_ PDWORD RequiredSize)
BOOL None setupapi.SetupGetInfInformationW(_In_ LPCVOID InfSpec,_In_ DWORD SearchControl,_Inout_ PSP_INF_INFORMATION ReturnBuffer,_In_ DWORD ReturnBufferSize,_Inout_ PDWORD RequiredSize)
BOOL None setupapi.SetupGetInfInformationA(_In_ LPCVOID InfSpec,_In_ DWORD SearchControl,_Inout_ PSP_INF_INFORMATION ReturnBuffer,_In_ DWORD ReturnBufferSize,_Inout_ PDWORD RequiredSize)
VOID None None.WdfDeviceClearRemovalRelationsDevices(_In_ WDFDEVICE Device)
NTSTATUS None None.WdfRequestCreate(_In_opt_ PWDF_OBJECT_ATTRIBUTES RequestAttributes,_In_opt_ WDFIOTARGET IoTarget,_Out_ WDFREQUEST *Request)
VOID None None.WdfIoQueueStop(_In_ WDFQUEUE Queue,_In_opt_ PFN_WDF_IO_QUEUE_STATE StopComplete,_In_opt_ WDFCONTEXT Context)
BOOLEAN None None.WdfDriverIsVersionAvailable(_In_ WDFDRIVER Driver,_In_ PWDF_DRIVER_VERSION_AVAILABLE_PARAMS VersionAvailableParams)
NTSTATUS None None.WdfDmaTransactionRelease(_In_ WDFDMATRANSACTION DmaTransaction)
NTSTATUS None None.WdfTimerCreate(_In_ PWDF_TIMER_CONFIG Config,_In_ PWDF_OBJECT_ATTRIBUTES Attributes,_Out_ WDFTIMER *Timer)
NTSTATUS None None.WdfCollectionAdd(_In_ WDFCOLLECTION Collection,_In_ WDFOBJECT Object)
NTSTATUS None None.WdfPdoRetrieveAddressDescription(_In_ WDFDEVICE Device,_Inout_ PWDF_CHILD_ADDRESS_DESCRIPTION_HEADER AddressDescription)
NTSTATUS None None.WdfUsbTargetPipeFormatRequestForRead(_In_ WDFUSBPIPE Pipe,_In_ WDFREQUEST Request,_In_opt_ WDFMEMORY ReadMemory,_In_opt_ PWDFMEMORY_OFFSET ReadOffset)
NTSTATUS None None.WdfPdoMarkMissing(_In_ WDFDEVICE Device)
VOID None None.WdfWmiInstanceDeregister(_In_ WDFWMIINSTANCE WmiInstance)
VOID None None.WdfDeviceInitSetPnpPowerEventCallbacks(_In_ PWDFDEVICE_INIT DeviceInit,_In_ PWDF_PNPPOWER_EVENT_CALLBACKS PnpPowerEventCallbacks)
VOID None None.CcInitializeCacheMap(_In_ PFILE_OBJECT FileObject,_In_ PCC_FILE_SIZES FileSizes,_In_ BOOLEAN PinAccess,_In_ PCACHE_MANAGER_CALLBACKS Callbacks,_In_ PVOID LazyWriteContext)
WDF_IO_TARGET_STATE None None.WdfIoTargetGetState(_In_ WDFIOTARGET IoTarget)
NTSTATUS None None.WdfPdoInitAssignDeviceID(_In_ PWDFDEVICE_INIT DeviceInit,_In_ PCUNICODE_STRING DeviceID)
NTSTATUS None None.WdfDeviceCreateSymbolicLink(_In_ WDFDEVICE Device,_In_ PCUNICODE_STRING SymbolicLinkName)
VOID None None.WdfDeviceGetDeviceState(_In_ WDFDEVICE Device,_Out_ PWDF_DEVICE_STATE DeviceState)
NTSTATUS None None.WdfFdoAddStaticChild(_In_ WDFDEVICE Fdo,_In_ WDFDEVICE Child)
PDEVICE_OBJECT None None.WdfIoTargetWdmGetTargetPhysicalDevice(_In_ WDFIOTARGET IoTarget)
WDFDEVICE None None.WdfFileObjectGetDevice(_In_ WDFFILEOBJECT FileObject)
size_t None None.WdfDmaEnablerGetFragmentLength(_In_ WDFDMAENABLER DmaEnabler,_In_ WDF_DMA_DIRECTION DmaDirection)
size_t None None.WdfDmaTransactionGetCurrentDmaTransferLength(_In_ WDFDMATRANSACTION DmaTransaction)
VOID None None.WdfCollectionRemove(_In_ WDFCOLLECTION Collection,_In_ WDFOBJECT Item)
USBD_PIPE_HANDLE None None.WdfUsbTargetPipeWdmGetPipeHandle(_In_ WDFUSBPIPE UsbPipe)
size_t None None.WdfDmaTransactionGetBytesTransferred(_In_ WDFDMATRANSACTION DmaTransaction)
ULONG None None.WdfDeviceGetAlignmentRequirement(_In_ WDFDEVICE Device)
PCM_PARTIAL_RESOURCE_DESCRIPTOR None None.WdfCmResourceListGetDescriptor(_In_ WDFCMRESLIST List,_In_ ULONG Index)
BOOLEAN None None.WdfTimerStart(_In_ WDFTIMER Timer,_In_ LONGLONG DueTime)
NTSTATUS None None.WdfIoTargetSendInternalIoctlSynchronously(_In_ WDFIOTARGET IoTarget,_In_opt_ WDFREQUEST Request,_In_ ULONG IoctlCode,_In_opt_ PWDF_MEMORY_DESCRIPTOR InputBuffer,_In_opt_ PWDF_MEMORY_DESCRIPTOR OutputBuffer,_In_opt_ PWDF_REQUEST_SEND_OPTIONS RequestOptions,_Out_opt_ PULONG_PTR BytesReturned)
ULONG None None.WdfCollectionGetCount(_In_ WDFCOLLECTION Collection)
NTSTATUS None None.WdfPdoInitAssignInstanceID(_In_ PWDFDEVICE_INIT DeviceInit,_In_ PCUNICODE_STRING InstanceID)
WDFDEVICE None None.WdfFdoRetrieveNextStaticChild(_In_ WDFDEVICE Fdo,_In_opt_ WDFDEVICE PreviousChild,_In_ ULONG Flags)
VOID None None.WdfUsbInterfaceGetEndpointInformation(_In_ WDFUSBINTERFACE UsbInterface,_In_ UCHAR SettingIndex,_In_ UCHAR EndpointIndex,_Out_ PWDF_USB_PIPE_INFORMATION EndpointInfo)
NTSTATUS None None.WdfUsbTargetDeviceRetrieveInformation(_In_ WDFUSBDEVICE UsbDevice,_Out_ PWDF_USB_DEVICE_INFORMATION Information)
NTSTATUS None None.WdfChildListRetrieveAddressDescription(_In_ WDFCHILDLIST ChildList,_In_ PWDF_CHILD_IDENTIFICATION_DESCRIPTION_HEADER IdentificationDescription,_Inout_ PWDF_CHILD_ADDRESS_DESCRIPTION_HEADER AddressDescription)
NTSTATUS None None.WdfUsbTargetPipeConfigContinuousReader(_In_ WDFUSBPIPE Pipe,_In_ PWDF_USB_CONTINUOUS_READER_CONFIG Config)
NTSTATUS None None.WdfUsbTargetPipeSendUrbSynchronously(_In_ WDFUSBPIPE Pipe,_In_opt_ WDFREQUEST Request,_In_opt_ PWDF_REQUEST_SEND_OPTIONS RequestOptions,_In_ PURB Urb)
NTSTATUS None None.WdfInterruptCreate(_In_ WDFDEVICE Device,_In_ PWDF_INTERRUPT_CONFIG Configuration,_In_opt_ PWDF_OBJECT_ATTRIBUTES Attributes,_Out_ WDFINTERRUPT *Interrupt)
VOID None None.WdfControlFinishInitializing(_In_ WDFDEVICE Device)
BYTE None None.WdfUsbInterfaceGetNumSettings(_In_ WDFUSBINTERFACE UsbInterface)
NTSTATUS None None.WdfDeviceInitAssignWdmIrpPreprocessCallback(_In_ PWDFDEVICE_INIT DeviceInit,_In_ PFN_WDFDEVICE_WDM_IRP_PREPROCESS EvtDeviceWdmIrpPreprocess,_In_ UCHAR MajorFunction,_In_opt_ PUCHAR MinorFunctions,_In_ ULONG NumMinorFunctions)
NTSTATUS None None.WdfRequestCreateFromIrp(_In_opt_ PWDF_OBJECT_ATTRIBUTES RequestAttributes,_In_ PIRP Irp,_In_ BOOLEAN RequestFreesIrp,_Out_ WDFREQUEST *Request)
NTSTATUS None None.WdfUsbTargetPipeFormatRequestForUrb(_In_ WDFUSBPIPE Pipe,_In_ WDFREQUEST Request,_In_ WDFMEMORY UrbMemory,_In_opt_ PWDFMEMORY_OFFSET UrbMemoryOffset)
VOID None None.WdfFdoInitSetDefaultChildListConfig(_Inout_ PWDFDEVICE_INIT DeviceInit,_In_ PWDF_CHILD_LIST_CONFIG Config,_In_opt_ PWDF_OBJECT_ATTRIBUTES DefaultChildListAttributes)
void None None.WdfDeviceInitSetIoType(_In_ PWDFDEVICE_INIT DeviceInit,_In_ WDF_DEVICE_IO_TYPE IoType)
SCSI_PHYSICAL_ADDRESS None None.ScsiPortGetPhysicalAddress(_In_ PVOID HwDeviceExtension,_In_ PSCSI_REQUEST_BLOCK Srb,_In_ PVOID VirtualAddress,_Out_ ULONG *Length)
VOID None None.WdfChildListBeginScan(_In_ WDFCHILDLIST ChildList)
VOID None None.WdfFdoInitSetFilter(_In_ PWDFDEVICE_INIT DeviceInit)
WDFDEVICE None None.WdfPdoGetParent(_In_ WDFDEVICE Device)
VOID None None.WdfUsbInterfaceGetDescriptor(_In_ WDFUSBINTERFACE UsbInterface,_In_ UCHAR SettingIndex,_Out_ PUSB_INTERFACE_DESCRIPTOR InterfaceDescriptor)
NTSTATUS None None.WdfDriverOpenParametersRegistryKey(_In_ WDFDRIVER Driver,_In_ ACCESS_MASK DesiredAccess,_In_opt_ PWDF_OBJECT_ATTRIBUTES KeyAttributes,_Out_ WDFKEY *Key)
VOID None None.WdfDeviceInitSetPowerPageable(_In_ PWDFDEVICE_INIT DeviceInit)
VOID None None.WdfSpinLockAcquire(_In_ WDFSPINLOCK SpinLock)
NTSTATUS None None.WdfIoQueueRetrieveFoundRequest(_In_ WDFQUEUE Queue,_In_ WDFREQUEST FoundRequest,_Out_ WDFREQUEST *OutRequest)
VOID None None.WdfDeviceRemoveRemovalRelationsPhysicalDevice(_In_ WDFDEVICE Device,_In_ PDEVICE_OBJECT PhysicalDevice)
WDF_USB_PIPE_TYPE None None.WdfUsbTargetPipeGetType(_In_ WDFUSBPIPE Pipe)
VOID None None.WdfWorkItemFlush(_In_ WDFWORKITEM WorkItem)
BYTE None None.WdfUsbInterfaceGetNumConfiguredPipes(_In_ WDFUSBINTERFACE UsbInterface)
NTSTATUS None None.WdfUsbTargetDeviceResetPortSynchronously(_In_ WDFUSBDEVICE UsbDevice)
NTSTATUS None None.WdfUsbTargetDeviceIsConnectedSynchronous(_In_ WDFUSBDEVICE UsbDevice)
NTSTATUS None None.WdfChildListAddOrUpdateChildDescriptionAsPresent(_In_ WDFCHILDLIST ChildList,_In_ PWDF_CHILD_IDENTIFICATION_DESCRIPTION_HEADER IdentificationDescription,_In_opt_ PWDF_CHILD_ADDRESS_DESCRIPTION_HEADER AddressDescription)
BOOLEAN None None.WdfRequestSend(_In_ WDFREQUEST Request,_In_ WDFIOTARGET Target,_In_opt_ PWDF_REQUEST_SEND_OPTIONS RequestOptions)
PWDFDEVICE_INIT None None.WdfPdoInitAllocate(_In_ WDFDEVICE ParentDevice)
ULONG None None.RtlLengthSid(_In_ PSID Sid)
BOOL None None.EngGradientFill(SURFOBJ *psoDest None,CLIPOBJ *pco None,XLATEOBJ *pxlo None,TRIVERTEX *pVertex None,ULONG nVertex None,PVOID pMesh None,ULONG nMesh None,RECTL *prclExtents None,POINTL *pptlDitherOrg None,_In_ ULONG ulMode)
VOID None None.SeSetAccessStateGenericMapping(_Inout_ PACCESS_STATE AccessState,_In_ PGENERIC_MAPPING GenericMapping)
BOOL None setupapi.SetupSetFileQueueFlags(_In_ HSPFILEQ FileQueue,_In_ DWORD FlagMask,_In_ DWORD Flags)
ULONG None None.WdfIoResourceRequirementsListGetCount(_In_ WDFIORESREQLIST RequirementsList)
NTSTATUS None None.WdfRequestForwardToParentDeviceIoQueue(_In_ WDFREQUEST Request,_In_ WDFQUEUE ParentDeviceQueue,_In_ PWDF_REQUEST_FORWARD_OPTIONS ForwardOptions)
BOOL None None.EngDeletePalette(_In_ HPALETTE hpal)
WDFIOTARGET None None.WdfUsbTargetDeviceGetIoTarget(_In_ WDFUSBDEVICE UsbDevice)
NTSTATUS None None.WdfIoTargetFormatRequestForRead(_In_ WDFIOTARGET IoTarget,_In_ WDFREQUEST Request,_In_opt_ WDFMEMORY OutputBuffer,_In_opt_ PWDFMEMORY_OFFSET OutputBufferOffset,_In_opt_ PLONGLONG DeviceOffset)
BOOLEAN None None.WdfInterruptSynchronize(_In_ WDFINTERRUPT Interrupt,_In_ PFN_WDF_INTERRUPT_SYNCHRONIZE Callback,_In_ WDFCONTEXT Context)
VOID None None.WdfChildListEndScan(_In_ WDFCHILDLIST ChildList)
VOID None None.WdfDeviceClearRemovalRelationsDevices(_In_ WDFDEVICE Device)
NTSTATUS None None.WdfPdoInitAddCompatibleID(_In_ PWDFDEVICE_INIT DeviceInit,_In_ PCUNICODE_STRING CompatibleID)
NTSTATUS None None.WdfDriverRetrieveVersionString(_In_ WDFDRIVER Driver,_In_ WDFSTRING String)
ULONG None None.EngGetLastError(void None None)
size_t None None.WdfDmaTransactionGetCurrentDmaTransferLength(_In_ WDFDMATRANSACTION DmaTransaction)
NTSTATUS None None.WdfMemoryCreatePreallocated(_In_opt_ PWDF_OBJECT_ATTRIBUTES Attributes,_In_ PVOID Buffer,_In_ size_t BufferSize,_Out_ WDFMEMORY *Memory)
BOOLEAN None None.WdfRequestCancelSentRequest(_In_ WDFREQUEST Request)
BOOL None None.PATHOBJ_bEnumClipLines(PATHOBJ *ppo None,ULONG cb None,CLIPLINE *pcl None)
HRESULT None wudfx.RetrieveDeviceName([out] PWSTR pDeviceName,[in None None,out] DWORD *pdwDeviceNameLength)
VOID None None.WdfControlDeviceInitSetShutdownNotification(_In_ PWDFDEVICE_INIT DeviceInit,_In_ PFN_WDF_DEVICE_SHUTDOWN_NOTIFICATION Notification,_In_ UCHAR Flags)
VOID None None.EngDeletePath(PATHOBJ *ppo None)
void None None.WDF_DECLARE_CONTEXT_TYPE(_contexttype None None)
HSPFILEQ None setupapi.SetupOpenFileQueue(void None None)
HPALETTE None None.EngCreatePalette(_In_ ULONG iMode,_In_ ULONG cColors,_In_ ULONG *pulColors,_In_ FLONG flRed,_In_ FLONG flGreen,_In_ FLONG flBlue)
VOID None None.CcPrepareMdlWrite(_In_ PFILE_OBJECT FileObject,_In_ PLARGE_INTEGER FileOffset,_In_ ULONG Length,_Out_ PMDL *MdlChain,_Out_ PIO_STATUS_BLOCK IoStatus)
void None None.WDF_IO_TARGET_OPEN_PARAMS_INIT_OPEN_BY_FILE(_Out_ PWDF_IO_TARGET_OPEN_PARAMS Params,_In_opt_ PCUNICODE_STRING FileName)
NTSTATUS None None.WdfMemoryCreate(_In_opt_ PWDF_OBJECT_ATTRIBUTES Attributes,_In_ POOL_TYPE PoolType,_In_opt_ ULONG PoolTag,_In_ size_t BufferSize,_Out_ WDFMEMORY *Memory,_Out_opt_ PVOID *Buffer)
NTSTATUS None None.WdfPdoRetrieveAddressDescription(_In_ WDFDEVICE Device,_Inout_ PWDF_CHILD_ADDRESS_DESCRIPTION_HEADER AddressDescription)
VOID None None.SeSetAccessStateGenericMapping(_Inout_ PACCESS_STATE AccessState,_In_ PGENERIC_MAPPING GenericMapping)
VOID None None.WDF_IO_QUEUE_CONFIG_INIT_DEFAULT_QUEUE(_Out_ PWDF_IO_QUEUE_CONFIG Config,_In_ WDF_IO_QUEUE_DISPATCH_TYPE DispatchType)
NTSTATUS None None.WdfRequestCreateFromIrp(_In_opt_ PWDF_OBJECT_ATTRIBUTES RequestAttributes,_In_ PIRP Irp,_In_ BOOLEAN RequestFreesIrp,_Out_ WDFREQUEST *Request)
void None None.WDF_DECLARE_CONTEXT_TYPE_WITH_NAME(_contexttype None None,_castingfunction None None)
NTSTATUS None None.WdfUsbTargetDeviceCreateIsochUrb(_In_ WDFUSBDEVICE UsbDevice,_In_opt_ PWDF_OBJECT_ATTRIBUTES Attributes,_In_ ULONG NumberOfIsochPackets,_Out_ WDFMEMORY *UrbMemory,_Out_opt_ PURB *Urb)
WDFIORESLIST None None.WdfIoResourceRequirementsListGetIoResList(_In_ WDFIORESREQLIST RequirementsList,_In_ ULONG Index)
VOID None None.EngFntCacheFault(_In_ ULONG ulFastCheckSum,_In_ ULONG iFaultMode)
BOOLEAN None None.FsRtlAreThereCurrentFileLocks(_In_ PFILE_LOCK FileLock)
PWSTR None None.WdfDriverGetRegistryPath(_In_ WDFDRIVER Driver)
WDFIOTARGET None None.WdfUsbTargetPipeGetIoTarget(_In_ WDFUSBPIPE Pipe)
NTSTATUS None None.WdfUsbTargetDeviceFormatRequestForControlTransfer(_In_ WDFUSBDEVICE UsbDevice,_In_ WDFREQUEST Request,_In_ PWDF_USB_CONTROL_SETUP_PACKET SetupPacket,_In_opt_ WDFMEMORY TransferMemory,_In_opt_ PWDFMEMORY_OFFSET TransferOffset)
VOID None None.WDF_CHILD_IDENTIFICATION_DESCRIPTION_HEADER_INIT(_Out_ PWDF_CHILD_IDENTIFICATION_DESCRIPTION_HEADER Header,_In_ ULONG IdentificationDescriptionSize)
VOID None None.FltObjectDereference(_Inout_ PVOID FltObject)
BOOL None None.EngModifySurface(HSURF hsurf None,HDEV hdev None,FLONG flHooks None,FLONG flSurface None,DHSURF dhsurf None,VOID *pvScan0 None,LONG lDelta None,VOID *pvReserved None)
BOOL None setupapi.SetupGetSourceInfo(_In_ HINF InfHandle,_In_ UINT SourceId,_In_ UINT InfoDesired,_Inout_ PTSTR ReturnBuffer,_In_ DWORD ReturnBufferSize,_Inout_ LPDWORD RequiredSize)
BOOL None setupapi.SetupGetSourceInfoW(_In_ HINF InfHandle,_In_ UINT SourceId,_In_ UINT InfoDesired,_Inout_ PTSTR ReturnBuffer,_In_ DWORD ReturnBufferSize,_Inout_ LPDWORD RequiredSize)
BOOL None setupapi.SetupGetSourceInfoA(_In_ HINF InfHandle,_In_ UINT SourceId,_In_ UINT InfoDesired,_Inout_ PTSTR ReturnBuffer,_In_ DWORD ReturnBufferSize,_Inout_ LPDWORD RequiredSize)
NTSTATUS None None.WdfIoTargetQueryForInterface(_In_ WDFIOTARGET IoTarget,_In_ LPCGUID InterfaceType,_Out_ PINTERFACE Interface,_In_ USHORT Size,_In_ USHORT Version,_In_opt_ PVOID InterfaceSpecificData)
WDFQUEUE None None.WdfDeviceGetDefaultQueue(_In_ WDFDEVICE Device)
ULONG_PTR None None.DrvLoadFontFile(ULONG cFiles None,ULONG_PTR *piFile None,PVOID *ppvView None,ULONG *pcjView None,DESIGNVECTOR *pdv None,ULONG ulLangID None,ULONG ulFastCheckSum None)
BYTE None None.WdfUsbInterfaceGetNumConfiguredPipes(_In_ WDFUSBINTERFACE UsbInterface)
VOID None None.WdfFdoUnlockStaticChildListFromIteration(_In_ WDFDEVICE Fdo)
BOOLEAN None None.WdfWmiProviderIsEnabled(_In_ WDFWMIPROVIDER WmiProvider,_In_ WDF_WMI_PROVIDER_CONTROL ProviderControl)
PKDPC None None.WdfDpcWdmGetDpc(_In_ WDFDPC Dpc)
NTSTATUS None None.CmSetCallbackObjectContext(_Inout_ PVOID Object,_In_ PLARGE_INTEGER Cookie,_In_ PVOID NewContext,_Out_opt_ PVOID *OldContext)
NTSTATUS None None.WdfPdoAddEjectionRelationsPhysicalDevice(_In_ WDFDEVICE Device,_In_ PDEVICE_OBJECT PhysicalDevice)
VOID None None.WdfUsbTargetPipeGetInformation(_In_ WDFUSBPIPE Pipe,_Out_ PWDF_USB_PIPE_INFORMATION PipeInformation)
VOID None None.WDF_TIMER_CONFIG_INIT(_In_ PWDF_TIMER_CONFIG Config,_In_ PFN_WDF_TIMER EvtTimerFunc)
VOID None None.WdfInterruptDisable(_In_ WDFINTERRUPT Interrupt)
PFILE_OBJECT None None.IoCreateStreamFileObjectEx(_In_opt_ PFILE_OBJECT FileObject,_In_opt_ PDEVICE_OBJECT DeviceObject,_Out_opt_ PHANDLE FileHandle)
VOID None None.WDF_IO_QUEUE_CONFIG_INIT_DEFAULT_QUEUE(_Out_ PWDF_IO_QUEUE_CONFIG Config,_In_ WDF_IO_QUEUE_DISPATCH_TYPE DispatchType)
VOID None None.WdfRequestWdmFormatUsingStackLocation(_In_ WDFREQUEST Request,_In_ PIO_STACK_LOCATION Stack)
HSPFILELOG None setupapi.SetupInitializeFileLog(_In_ PCTSTR LogFileName,_In_ DWORD Flags)
HSPFILELOG None setupapi.SetupInitializeFileLogW(_In_ PCTSTR LogFileName,_In_ DWORD Flags)
HSPFILELOG None setupapi.SetupInitializeFileLogA(_In_ PCTSTR LogFileName,_In_ DWORD Flags)
VOID None None.WdfWorkItemFlush(_In_ WDFWORKITEM WorkItem)
NTSTATUS None None.WdfRequestForwardToIoQueue(_In_ WDFREQUEST Request,_In_ WDFQUEUE DestinationQueue)
NTSTATUS None None.WdfUsbTargetDeviceFormatRequestForString(_In_ WDFUSBDEVICE UsbDevice,_In_ WDFREQUEST Request,_In_ WDFMEMORY Memory,_In_opt_ PWDFMEMORY_OFFSET Offset,_In_ UCHAR StringIndex,_In_opt_ USHORT LangID)
VOID None None.WdfPdoInitAllowForwardingRequestToParent(_In_ PWDFDEVICE_INIT DeviceInit)
NTSTATUS None None.WdfRegistryQueryMemory(_In_ WDFKEY Key,_In_ PCUNICODE_STRING ValueName,_In_ POOL_TYPE PoolType,_In_opt_ PWDF_OBJECT_ATTRIBUTES MemoryAttributes,_Out_ WDFMEMORY *Memory,_Out_opt_ PULONG ValueType)
NTSTATUS None None.WdfUsbTargetDeviceFormatRequestForCyclePort(_In_ WDFUSBDEVICE UsbDevice,_In_ WDFREQUEST Request)
NTSTATUS None None.WdfUsbTargetDeviceCreateIsochUrb(_In_ WDFUSBDEVICE UsbDevice,_In_opt_ PWDF_OBJECT_ATTRIBUTES Attributes,_In_ ULONG NumberOfIsochPackets,_Out_ WDFMEMORY *UrbMemory,_Out_opt_ PURB *Urb)
NTSTATUS None None.WdfIoTargetFormatRequestForRead(_In_ WDFIOTARGET IoTarget,_In_ WDFREQUEST Request,_In_opt_ WDFMEMORY OutputBuffer,_In_opt_ PWDFMEMORY_OFFSET OutputBufferOffset,_In_opt_ PLONGLONG DeviceOffset)
VOID None None.WdfInterruptAcquireLock(_In_ WDFINTERRUPT Interrupt)
WDFQUEUE None None.WdfRequestGetIoQueue(_In_ WDFREQUEST Request)
VOID None None.WdfCollectionRemove(_In_ WDFCOLLECTION Collection,_In_ WDFOBJECT Item)
BOOLEAN None None.WDF_USB_PIPE_DIRECTION_OUT(_In_ UCHAR EndpointAddress)
VOID None None.WdfIoQueueStop(_In_ WDFQUEUE Queue,_In_opt_ PFN_WDF_IO_QUEUE_STATE StopComplete,_In_opt_ WDFCONTEXT Context)
VOID None None.FltReleaseFileNameInformation(_In_ PFLT_FILE_NAME_INFORMATION FileNameInformation)
VOID None None.WdfInterruptReleaseLock(_In_ WDFINTERRUPT Interrupt)
VOID None None.WDF_OBJECT_ATTRIBUTES_INIT(_Out_ PWDF_OBJECT_ATTRIBUTES Attributes)
VOID None None.WdfIoQueueDrain(_In_ WDFQUEUE Queue,_In_opt_ PFN_WDF_IO_QUEUE_STATE DrainComplete,_In_opt_ WDFCONTEXT Context)
BOOLEAN None None.WdfDriverIsVersionAvailable(_In_ WDFDRIVER Driver,_In_ PWDF_DRIVER_VERSION_AVAILABLE_PARAMS VersionAvailableParams)
NTSTATUS None None.WdfUsbTargetDeviceCreateWithParameters(_In_ WDFDEVICE Device,_In_ PWDF_USB_DEVICE_CREATE_CONFIG Config,_In_opt_ PWDF_OBJECT_ATTRIBUTES Attributes,_Out_ WDFUSBDEVICE *UsbDevice)
VOID None None.WdfObjectDelete(_In_ WDFOBJECT Object)
VOID None None.WdfIoTargetPurge(_In_ WDFIOTARGET IoTarget,_In_ WDF_IO_TARGET_PURGE_IO_ACTION Action)
HRESULT None wmp.WMPUnRegisterPlayerPlugin(GUID guidPluginType None,CLSID clsid None)
BOOL None None.PATHOBJ_bPolyLineTo(PATHOBJ *ppo None,POINTFIX *pptfx None,ULONG cptfx None)
PDRIVER_OBJECT None None.WdfDriverWdmGetDriverObject(_In_ WDFDRIVER Driver)
BOOLEAN None None.RtlEqualSid(_In_ PSID Sid1,_In_ PSID Sid2)
NTSTATUS None None.WdfUsbTargetPipeFormatRequestForAbort(_In_ WDFUSBPIPE Pipe,_In_ WDFREQUEST Request)
size_t None None.WdfCommonBufferGetLength(_In_ WDFCOMMONBUFFER CommonBuffer)
VOID None None.WdfIoQueueStopSynchronously(_In_ WDFQUEUE Queue)
BOOLEAN None ntdll.RtlEqualPrefixSid(_In_ PSID Sid1,_In_ PSID Sid2)
NTSTATUS None None.WdfRegistryQueryValue(_In_ WDFKEY Key,_In_ PCUNICODE_STRING ValueName,_In_ ULONG ValueLength,_Out_opt_ PVOID Value,_Out_opt_ PULONG ValueLengthQueried,_Out_opt_ PULONG ValueType)
void None setupapi.SetupCloseFileQueue(_In_ HSPFILEQ QueueHandle)
PVOID None None.DrvQueryFontTree(DHPDEV dhpdev None,ULONG_PTR iFile None,ULONG iFace None,ULONG iMode None,ULONG_PTR *pid None)
NTSTATUS None None.WdfUsbTargetDeviceRetrieveCurrentFrameNumber(_In_ WDFUSBDEVICE UsbDevice,_Out_ PULONG CurrentFrameNumber)
WDFIOTARGET None None.WdfUsbTargetDeviceGetIoTarget(_In_ WDFUSBDEVICE UsbDevice)
size_t None None.WdfDmaEnablerGetMaximumScatterGatherElements(_In_ WDFDMAENABLER DmaEnabler)
NTSTATUS None None.WdfDeviceAllocAndQueryProperty(_In_ WDFDEVICE Device,_In_ DEVICE_REGISTRY_PROPERTY DeviceProperty,_In_ POOL_TYPE PoolType,_In_opt_ PWDF_OBJECT_ATTRIBUTES PropertyMemoryAttributes,_Out_ WDFMEMORY *PropertyMemory)
NTSTATUS None None.WdfRegistryCreateKey(_In_opt_ WDFKEY ParentKey,_In_ PCUNICODE_STRING KeyName,_In_ ACCESS_MASK DesiredAccess,_In_ ULONG CreateOptions,_Out_opt_ PULONG CreateDisposition,_In_opt_ PWDF_OBJECT_ATTRIBUTES KeyAttributes,_Out_ WDFKEY *Key)
NTSTATUS None None.RtlSetDaclSecurityDescriptor(_Inout_ PSECURITY_DESCRIPTOR SecurityDescriptor,_In_ BOOLEAN DaclPresent,_In_opt_ PACL Dacl,_In_opt_ BOOLEAN DaclDefaulted)
BOOL None setupapi.SetupGetMultiSzField(_In_ PINFCONTEXT Context,_In_ DWORD FieldIndex,_Inout_ PTSTR ReturnBuffer,_In_ DWORD ReturnBufferSize,_In_ LPDWORD RequiredSize)
BOOL None setupapi.SetupGetMultiSzFieldW(_In_ PINFCONTEXT Context,_In_ DWORD FieldIndex,_Inout_ PTSTR ReturnBuffer,_In_ DWORD ReturnBufferSize,_In_ LPDWORD RequiredSize)
BOOL None setupapi.SetupGetMultiSzFieldA(_In_ PINFCONTEXT Context,_In_ DWORD FieldIndex,_Inout_ PTSTR ReturnBuffer,_In_ DWORD ReturnBufferSize,_In_ LPDWORD RequiredSize)
VOID None None.WDF_USB_CONTROL_SETUP_PACKET_INIT_GET_STATUS(_Out_ PWDF_USB_CONTROL_SETUP_PACKET Packet,_In_ WDF_USB_BMREQUEST_RECIPIENT BmRequestRecipient,_In_ USHORT Index)
VOID None None.WdfObjectDereference([in] WDFOBJECT Handle)
NTSTATUS None None.WdfMemoryCopyFromBuffer(_In_ WDFMEMORY DestinationMemory,_In_ size_t DestinationOffset,_In_ PVOID Buffer,_In_ size_t NumBytesToCopyFrom)
NTSTATUS None None.WdfWmiProviderCreate(_In_ WDFDEVICE Device,_In_ PWDF_WMI_PROVIDER_CONFIG WmiProviderConfig,_In_opt_ PWDF_OBJECT_ATTRIBUTES ProviderAttributes,_Out_ WDFWMIPROVIDER *WmiProvider)
PMDL None None.IoAllocateMdl(_In_opt_ PVOID VirtualAddress,_In_ ULONG Length,_In_ BOOLEAN SecondaryBuffer,_In_ BOOLEAN ChargeQuota,_Inout_opt_ PIRP Irp)
NTSTATUS None None.WdfPdoInitAssignContainerID(_In_ PWDFDEVICE_INIT DeviceInit,_In_ PCUNICODE_STRING ContainerID)
NTSTATUS None None.WdfRequestRetrieveOutputMemory(_In_ WDFREQUEST Request,_Out_ WDFMEMORY *Memory)
VOID None None.WdfDeviceInitSetPowerPolicyEventCallbacks(_In_ PWDFDEVICE_INIT DeviceInit,_In_ PWDF_POWER_POLICY_EVENT_CALLBACKS PowerPolicyEventCallbacks)
VOID None None.WdfDeviceInitSetExclusive(_In_ PWDFDEVICE_INIT DeviceInit,_In_ BOOLEAN IsExclusive)
BOOL None setupapi.SetupSetDirectoryId(_In_ HINF InfHandle,_In_ DWORD Id,_In_ PCTSTR Directory)
BOOL None setupapi.SetupSetDirectoryIdW(_In_ HINF InfHandle,_In_ DWORD Id,_In_ PCTSTR Directory)
BOOL None setupapi.SetupSetDirectoryIdA(_In_ HINF InfHandle,_In_ DWORD Id,_In_ PCTSTR Directory)
PDEVICE_OBJECT None None.WdfDeviceWdmGetPhysicalDevice(_In_ WDFDEVICE Device)
BOOL None setupapi.SetupGetTargetPath(_In_ HINF InfHandle,_In_ PINFCONTEXT InfContext,_In_ PCTSTR Section,_Inout_ PTSTR ReturnBuffer,_In_ DWORD ReturnBufferSize,_Inout_ PDWORD RequiredSize)
BOOL None setupapi.SetupGetTargetPathW(_In_ HINF InfHandle,_In_ PINFCONTEXT InfContext,_In_ PCTSTR Section,_Inout_ PTSTR ReturnBuffer,_In_ DWORD ReturnBufferSize,_Inout_ PDWORD RequiredSize)
BOOL None setupapi.SetupGetTargetPathA(_In_ HINF InfHandle,_In_ PINFCONTEXT InfContext,_In_ PCTSTR Section,_Inout_ PTSTR ReturnBuffer,_In_ DWORD ReturnBufferSize,_Inout_ PDWORD RequiredSize)
VOID None None.WdfDeviceInitSetRequestAttributes(_In_ PWDFDEVICE_INIT DeviceInit,_In_ PWDF_OBJECT_ATTRIBUTES RequestAttributes)
NTSTATUS None None.WdfUsbTargetPipeFormatRequestForUrb(_In_ WDFUSBPIPE Pipe,_In_ WDFREQUEST Request,_In_ WDFMEMORY UrbMemory,_In_opt_ PWDFMEMORY_OFFSET UrbMemoryOffset)
NTSTATUS None None.WdfDriverRetrieveVersionString(_In_ WDFDRIVER Driver,_In_ WDFSTRING String)
WDF_IO_QUEUE_STATE None None.WdfIoQueueGetState(_In_ WDFQUEUE Queue,_Out_opt_ PULONG QueueRequests,_Out_opt_ PULONG DriverRequests)
VOID None None.WdfIoQueueDrainSynchronously(_In_ WDFQUEUE Queue)
typedef None None.VOID(EVT_WDF_REQUEST_COMPLETION_ROUTINE None None)
NTSTATUS None None.RtlCreateSecurityDescriptorRelative(_Out_ PISECURITY_DESCRIPTOR_RELATIVE SecurityDescriptor,_In_ ULONG Revision)
VOID None None.WdfDriverMiniportUnload(_In_ WDFDRIVER Driver)
NTSTATUS None None.OpenStreams(_In_ WDFDEVICE Device,_In_ WDFUSBPIPE Pipe)
void None None.WdfDeviceInitSetReleaseHardwareOrderOnFailure(_In_ PWDFDEVICE_INIT DeviceInit,_In_ WDF_RELEASE_HARDWARE_ORDER_ON_FAILURE ReleaseHardwareOrderOnFailure)
NTSTATUS None None.WdfRequestRetrieveUnsafeUserInputBuffer(_In_ WDFREQUEST Request,_In_ size_t MinimumRequiredLength,_Out_ PVOID *InputBuffer,_Out_opt_ size_t *Length)
NTSTATUS None None.WdfRequestProbeAndLockUserBufferForRead(_In_ WDFREQUEST Request,_In_ PVOID Buffer,_In_ size_t Length,_Out_ WDFMEMORY *MemoryObject)
NTSTATUS None None.FsRtlAllocateExtraCreateParameterList(_In_ FSRTL_ALLOCATE_ECPLIST_FLAGS Flags,_Out_ PECP_LIST *EcpList)
NTSTATUS None None.WdfUsbTargetDeviceAllocAndQueryString(_In_ WDFUSBDEVICE UsbDevice,_In_opt_ PWDF_OBJECT_ATTRIBUTES StringMemoryAttributes,_Out_ WDFMEMORY *StringMemory,_Out_opt_ PUSHORT NumCharacters,_In_ UCHAR StringIndex,_In_opt_ USHORT LangID)
void None wudfx.SetIoTypePreference([in] WDF_DEVICE_IO_BUFFER_RETRIEVAL RetrievalMode,[in] WDF_DEVICE_IO_TYPE ReadWritePreference,[in] WDF_DEVICE_IO_TYPE IoControlPreference)
HSURF None None.EngCreateDeviceSurface(_In_ DHSURF dhsurf,_In_ SIZEL sizl,ULONG iFormatCompat None)
BOOL None setupapi.SetupRemoveFromDiskSpaceList(_In_ HDSKSPC DiskSpace,_In_ PCTSTR TargetFilespec,_In_ UINT Operation,_In_ PVOID Reserved1,_In_ UINT Reserved2)
BOOL None setupapi.SetupRemoveFromDiskSpaceListW(_In_ HDSKSPC DiskSpace,_In_ PCTSTR TargetFilespec,_In_ UINT Operation,_In_ PVOID Reserved1,_In_ UINT Reserved2)
BOOL None setupapi.SetupRemoveFromDiskSpaceListA(_In_ HDSKSPC DiskSpace,_In_ PCTSTR TargetFilespec,_In_ UINT Operation,_In_ PVOID Reserved1,_In_ UINT Reserved2)
VOID None None.WDF_USB_DEVICE_SELECT_CONFIG_PARAMS_INIT_SINGLE_INTERFACE(_Out_ PWDF_USB_DEVICE_SELECT_CONFIG_PARAMS Params)
VOID None None.WDF_TIMER_CONFIG_INIT_PERIODIC(_In_ PWDF_TIMER_CONFIG Config,_In_ PFN_WDF_TIMER EvtTimerFunc,_In_ LONG Period)
VOID None None.WdfIoTargetStop(_In_ WDFIOTARGET IoTarget,_In_ WDF_IO_TARGET_SENT_IO_ACTION Action)
NTSTATUS None None.WdfUsbTargetPipeAbortSynchronously(_In_ WDFUSBPIPE Pipe,_In_opt_ WDFREQUEST Request,_In_opt_ PWDF_REQUEST_SEND_OPTIONS RequestOptions)
void None None.WDF_OBJECT_ATTRIBUTES_SET_CONTEXT_TYPE(_attributes None None,_contexttype None None)
NTSTATUS None None.WdfDeviceRetrieveDeviceName(_In_ WDFDEVICE Device,_In_ WDFSTRING String)
NTSTATUS None None.WdfIoTargetSendInternalIoctlOthersSynchronously(_In_ WDFIOTARGET IoTarget,_In_opt_ WDFREQUEST Request,_In_ ULONG IoctlCode,_In_opt_ PWDF_MEMORY_DESCRIPTOR OtherArg1,_In_opt_ PWDF_MEMORY_DESCRIPTOR OtherArg2,_In_opt_ PWDF_MEMORY_DESCRIPTOR OtherArg4,_In_opt_ PWDF_REQUEST_SEND_OPTIONS RequestOptions,_Out_opt_ PULONG_PTR BytesReturned)
UINT None setupapi.SetupDeleteError(_In_ HWND hwndParent,_In_ PCTSTR DialogTitle,_In_ PCTSTR File,_Out_ UINT Win32ErrorCode,_In_ DWORD Style)
UINT None setupapi.SetupDeleteErrorW(_In_ HWND hwndParent,_In_ PCTSTR DialogTitle,_In_ PCTSTR File,_Out_ UINT Win32ErrorCode,_In_ DWORD Style)
UINT None setupapi.SetupDeleteErrorA(_In_ HWND hwndParent,_In_ PCTSTR DialogTitle,_In_ PCTSTR File,_Out_ UINT Win32ErrorCode,_In_ DWORD Style)
NTSTATUS None None.WdfCommonBufferCreate(_In_ WDFDMAENABLER DmaEnabler,_In_ size_t Length,_In_opt_ PWDF_OBJECT_ATTRIBUTES Attributes,_Out_ WDFCOMMONBUFFER *CommonBuffer)
NTSTATUS None None.WdfDeviceIndicateWakeStatus(_In_ WDFDEVICE Device,_In_ NTSTATUS WaitWakeStatus)
BOOLEAN None None.WdfDpcCancel(_In_ WDFDPC Dpc,_In_ BOOLEAN Wait)
VOID None None.CcMdlWriteComplete(_In_ PFILE_OBJECT FileObject,_In_ PLARGE_INTEGER FileOffset,_In_ PMDL MdlChain)
VOID None None.FsRtlFreeExtraCreateParameterList(_In_ PECP_LIST EcpList)
NTSTATUS None None.WdfRegistryAssignString(_In_ WDFKEY Key,_In_ PCUNICODE_STRING ValueName,_In_ WDFSTRING String)
VOID None None.WdfRequestSetInformation(_In_ WDFREQUEST Request,_In_ ULONG_PTR Information)
NTSTATUS None None.WdfIoResourceListInsertDescriptor(_In_ WDFIORESLIST ResourceList,_In_ PIO_RESOURCE_DESCRIPTOR Descriptor,_In_ ULONG Index)
NTSTATUS None None.WdfUsbTargetPipeFormatRequestForWrite(_In_ WDFUSBPIPE Pipe,_In_ WDFREQUEST Request,_In_opt_ WDFMEMORY WriteMemory,_In_opt_ PWDFMEMORY_OFFSET WriteOffset)
NTSTATUS None None.WdfUsbTargetDeviceRetrieveConfigDescriptor(_In_ WDFUSBDEVICE UsbDevice,_Out_ PVOID ConfigDescriptor,_Inout_ PUSHORT ConfigDescriptorLength)
NTSTATUS None None.WdfRegistryAssignMultiString(_In_ WDFKEY Key,_In_ PCUNICODE_STRING ValueName,_In_ WDFCOLLECTION StringsCollection)
DWORD None setupapi.SetupGetFieldCount(_In_ PINFCONTEXT Context)
size_t None None.WdfDmaEnablerGetMaximumLength(_In_ WDFDMAENABLER DmaEnabler)
VOID None None.WDF_MEMORY_DESCRIPTOR_INIT_BUFFER(_Out_ PWDF_MEMORY_DESCRIPTOR Descriptor,_In_ PVOID Buffer,_In_ ULONG BufferLength)
NTSTATUS None None.WdfRequestProbeAndLockUserBufferForWrite(_In_ WDFREQUEST Request,_In_ PVOID Buffer,_In_ size_t Length,_Out_ WDFMEMORY *MemoryObject)
NTSTATUS None None.WdfIoTargetFormatRequestForInternalIoctlOthers(_In_ WDFIOTARGET IoTarget,_In_ WDFREQUEST Request,_In_ ULONG IoctlCode,_In_opt_ WDFMEMORY OtherArg1,_In_opt_ PWDFMEMORY_OFFSET OtherArg1Offset,_In_opt_ WDFMEMORY OtherArg2,_In_opt_ PWDFMEMORY_OFFSET OtherArg2Offset,_In_opt_ WDFMEMORY OtherArg4,_In_opt_ PWDFMEMORY_OFFSET OtherArg4Offset)
NTSTATUS None None.WdfRequestMarkCancelableEx(_In_ WDFREQUEST Request,_In_ PFN_WDF_REQUEST_CANCEL EvtRequestCancel)
NTSTATUS None None.WdfIoTargetSendIoctlSynchronously(_In_ WDFIOTARGET IoTarget,_In_opt_ WDFREQUEST Request,_In_ ULONG IoctlCode,_In_opt_ PWDF_MEMORY_DESCRIPTOR InputBuffer,_In_opt_ PWDF_MEMORY_DESCRIPTOR OutputBuffer,_In_opt_ PWDF_REQUEST_SEND_OPTIONS RequestOptions,_Out_opt_ PULONG_PTR BytesReturned)
NTSTATUS None None.WdfIoResourceRequirementsListAppendIoResList(_In_ WDFIORESREQLIST RequirementsList,_In_ WDFIORESLIST IoResList)
NTSTATUS None None.WdfDeviceConfigureRequestDispatching(_In_ WDFDEVICE Device,_In_ WDFQUEUE Queue,_In_ WDF_REQUEST_TYPE RequestType)
NTSTATUS None None.WdfIoTargetFormatRequestForWrite(_In_ WDFIOTARGET IoTarget,_In_ WDFREQUEST Request,_In_opt_ WDFMEMORY InputBuffer,_In_opt_ PWDFMEMORY_OFFSET InputBufferOffset,_In_opt_ PLONGLONG DeviceOffset)
PVOID None None.MmGetSystemAddressForMdl(_In_ PMDL Mdl)
BYTE None None.WdfUsbInterfaceGetNumEndpoints(_In_ WDFUSBINTERFACE UsbInterface,_In_ UCHAR SettingIndex)
BOOL None setupapi.SetupLogError(_In_ PCTSTR MessageString,_In_ LogSeverity Severity)
BOOL None setupapi.SetupLogErrorW(_In_ PCTSTR MessageString,_In_ LogSeverity Severity)
BOOL None setupapi.SetupLogErrorA(_In_ PCTSTR MessageString,_In_ LogSeverity Severity)
void None None.WDF_OBJECT_ATTRIBUTES_INIT_CONTEXT_TYPE(_attributes None None,_contexttype None None)
NTSTATUS None None.WdfIoTargetSendReadSynchronously(_In_ WDFIOTARGET IoTarget,_In_opt_ WDFREQUEST Request,_In_opt_ PWDF_MEMORY_DESCRIPTOR OutputBuffer,_In_opt_ PLONGLONG DeviceOffset,_In_opt_ PWDF_REQUEST_SEND_OPTIONS RequestOptions,_Out_opt_ PULONG_PTR BytesRead)
void None None.WdfIoQueueStopAndPurge(_In_ WDFQUEUE Queue,_In_opt_ PFN_WDF_IO_QUEUE_STATE StopAndPurgeComplete,_In_opt_ WDFCONTEXT Context)
BOOL None setupapi.SetupInstallFromInfSection(HWND Owner None,HINF InfHandle None,PCTSTR SectionName None,UINT Flags None,HKEY RelativeKeyRoot None,PCTSTR SourceRootPath None,UINT CopyFlags None,PSP_FILE_CALLBACK MsgHandler None,PVOID Context None,HDEVINFO DeviceInfoSet None,PSP_DEVINFO_DATA DeviceInfoData None)
BOOL None setupapi.SetupInstallFromInfSectionW(HWND Owner None,HINF InfHandle None,PCTSTR SectionName None,UINT Flags None,HKEY RelativeKeyRoot None,PCTSTR SourceRootPath None,UINT CopyFlags None,PSP_FILE_CALLBACK MsgHandler None,PVOID Context None,HDEVINFO DeviceInfoSet None,PSP_DEVINFO_DATA DeviceInfoData None)
BOOL None setupapi.SetupInstallFromInfSectionA(HWND Owner None,HINF InfHandle None,PCTSTR SectionName None,UINT Flags None,HKEY RelativeKeyRoot None,PCTSTR SourceRootPath None,UINT CopyFlags None,PSP_FILE_CALLBACK MsgHandler None,PVOID Context None,HDEVINFO DeviceInfoSet None,PSP_DEVINFO_DATA DeviceInfoData None)
VOID None None.WDF_CHILD_ADDRESS_DESCRIPTION_HEADER_INIT(_Out_ PWDF_CHILD_ADDRESS_DESCRIPTION_HEADER Header,_In_ ULONG AddressDescriptionSize)
VOID None None.WDF_DRIVER_CONFIG_INIT(_Out_ PWDF_DRIVER_CONFIG Config,_In_opt_ PFN_WDF_DRIVER_DEVICE_ADD EvtDriverDeviceAdd)
BOOLEAN None None.WDF_USB_PIPE_DIRECTION_IN(_In_ UCHAR EndpointAddress)
VOID None None.WDF_USB_PIPE_INFORMATION_INIT(_Out_ PWDF_USB_PIPE_INFORMATION Info)
PUSB_INTERFACE_DESCRIPTOR None None.USBD_ParseConfigurationDescriptorEx(_In_ PUSB_CONFIGURATION_DESCRIPTOR ConfigurationDescriptor,_In_ PVOID StartPosition,_In_ LONG InterfaceNumber,_In_ LONG AlternateSetting,_In_ LONG InterfaceClass,_In_ LONG InterfaceSubClass,_In_ LONG InterfaceProtocol)
NTSTATUS None None.WdfIoQueueAssignForwardProgressPolicy(_In_ WDFQUEUE Queue,_In_ PWDF_IO_QUEUE_FORWARD_PROGRESS_POLICY ForwardProgressPolicy)
WDFDEVICE None None.WdfInterruptGetDevice(_In_ WDFINTERRUPT Interrupt)
NTSTATUS None None.WdfMemoryAssignBuffer(_In_ WDFMEMORY Memory,_In_ PVOID Buffer,_In_ size_t BufferSize)
void None None.WdfIoQueueStopAndPurgeSynchronously(_In_ WDFQUEUE Queue)
VOID None None.WdfInterruptGetInfo(_In_ WDFINTERRUPT Interrupt,_Out_ PWDF_INTERRUPT_INFO Info)
NTSTATUS None None.WdfObjectAllocateContext(_In_ WDFOBJECT Handle,_In_ PWDF_OBJECT_ATTRIBUTES ContextAttributes,_Out_ PVOID *Context)
PKINTERRUPT None None.WdfInterruptWdmGetInterrupt(_In_ WDFINTERRUPT Interrupt)
BOOLEAN None None.WdfDmaTransactionCancel(_In_ WDFDMATRANSACTION DmaTransaction)
BOOLEAN None None.WdfInterruptTryToAcquireLock(_In_ WDFINTERRUPT Interrupt)
VOID None None.WDF_USB_CONTROL_SETUP_PACKET_INIT_GET_STATUS(_Out_ PWDF_USB_CONTROL_SETUP_PACKET Packet,_In_ WDF_USB_BMREQUEST_RECIPIENT BmRequestRecipient,_In_ USHORT Index)
void None None.WdfDmaTransactionStopSystemTransfer(_In_ WDFDMATRANSACTION DmaTransaction)
BOOLEAN None None.WdfInterruptQueueDpcForIsr(_In_ WDFINTERRUPT Interrupt)
NTSTATUS None None.WdfMemoryCreateFromLookaside(_In_ WDFLOOKASIDE Lookaside,_Out_ WDFMEMORY *Memory)
PVOID None None.WdfObjectGetTypedContextWorker(_In_ WDFOBJECT Handle,_In_ PCWDF_OBJECT_CONTEXT_TYPE_INFO TypeInfo)
NTSTATUS None None.WdfDeviceWdmAssignPowerFrameworkSettings(_In_ WDFDEVICE Device,_In_ PWDF_POWER_FRAMEWORK_SETTINGS PowerFrameworkSettings)
VOID None None.WdfObjectReferenceActual(_In_ WDFOBJECT Handle,_In_opt_ PVOID Tag,_In_ LONG Line,_In_ PCCH File)
BOOLEAN None None.WdfRequestIsReserved(_In_ WDFREQUEST Request)
HANDLE None None.WdfRegistryWdmGetHandle(_In_ WDFKEY Key)
NTSTATUS None None.WdfPdoInitAssignContainerID(_In_ PWDFDEVICE_INIT DeviceInit,_In_ PCUNICODE_STRING ContainerID)
void None None.WdfDeviceInitSetRemoveLockOptions(_In_ PWDFDEVICE_INIT DeviceInit,_In_ PWDF_REMOVE_LOCK_OPTIONS Options)
void None None.WdfInterruptReportActive(_In_ WDFINTERRUPT Interrupt)
BOOL None setupapi.SetupGetInfFileList(_In_ PCTSTR DirectoryPath,_In_ DWORD InfStyle,_Inout_ PTSTR ReturnBuffer,_In_ DWORD ReturnBufferSize,_Inout_ PDWORD RequiredSize)
BOOL None setupapi.SetupGetInfFileListW(_In_ PCTSTR DirectoryPath,_In_ DWORD InfStyle,_Inout_ PTSTR ReturnBuffer,_In_ DWORD ReturnBufferSize,_Inout_ PDWORD RequiredSize)
BOOL None setupapi.SetupGetInfFileListA(_In_ PCTSTR DirectoryPath,_In_ DWORD InfStyle,_Inout_ PTSTR ReturnBuffer,_In_ DWORD ReturnBufferSize,_Inout_ PDWORD RequiredSize)
VOID None None.WdfDmaTransactionSetMaximumLength(_In_ WDFDMATRANSACTION DmaTransaction,_In_ size_t MaximumLength)
NTSTATUS None None.WdfDeviceWdmDispatchIrp(_In_ WDFDEVICE Device,_In_ PIRP Irp,_In_ WDFCONTEXT DispatchContext)
VOID None None.WdfVerifierKeBugCheck(_In_ ULONG BugCheckCode,_In_ ULONG_PTR BugCheckParameter1,_In_ ULONG_PTR BugCheckParameter2,_In_ ULONG_PTR BugCheckParameter3,_In_ ULONG_PTR BugCheckParameter4)
void None None.WdfInterruptReportInactive(_In_ WDFINTERRUPT Interrupt)
WDFOBJECT None None.WdfTimerGetParentObject(_In_ WDFTIMER Timer)
NTSTATUS None None.WdfDeviceConfigureWdmIrpDispatchCallback(_In_ WDFDEVICE Device,_In_opt_ WDFDRIVER Driver,_In_ UCHAR MajorFunction,_In_ PFN_WDFDEVICE_WDM_IRP_DISPATCH EvtDeviceWdmIrpDispatch,_In_opt_ WDFCONTEXT DriverContext)
BOOL None setupapi.SetupIterateCabinet(_In_ PCTSTR CabinetFile,_In_ DWORD Reserved,_In_ PSP_FILE_CALLBACK MsgHandler,_In_ PVOID Context)
BOOL None setupapi.SetupIterateCabinetW(_In_ PCTSTR CabinetFile,_In_ DWORD Reserved,_In_ PSP_FILE_CALLBACK MsgHandler,_In_ PVOID Context)
BOOL None setupapi.SetupIterateCabinetA(_In_ PCTSTR CabinetFile,_In_ DWORD Reserved,_In_ PSP_FILE_CALLBACK MsgHandler,_In_ PVOID Context)
WDFOBJECT None None.WdfObjectContextGetObject(_In_ PVOID ContextPointer)
VOID None None.WdfInterruptSetPolicy(_In_ WDFINTERRUPT Interrupt,_In_ WDF_INTERRUPT_POLICY Policy,_In_ WDF_INTERRUPT_PRIORITY Priority,_In_ KAFFINITY TargetProcessorSet)
VOID None None.WdfInterruptSetExtendedPolicy(_In_ WDFINTERRUPT Interrupt,_In_ PWDF_INTERRUPT_EXTENDED_POLICY PolicyAndGroup)
void None None.WdfDmaTransactionSetDeviceAddressOffset(_In_ WDFDMATRANSACTION DmaTransaction,_In_ ULONG Offset)
NTSTATUS None None.WdfUsbTargetDeviceCreateUrb(_In_ WDFUSBDEVICE UsbDevice,_In_opt_ PWDF_OBJECT_ATTRIBUTES Attributes,_Out_ WDFMEMORY *UrbMemory,_Out_opt_ PURB *Urb)
NTSTATUS None None.WdfDeviceWdmDispatchIrpToIoQueue(_In_ WDFDEVICE Device,_In_ PIRP Irp,_In_ WDFQUEUE Queue,_In_ ULONG Flags)
LONG None setupapi.SetupGetLineCount(_In_ HINF InfHandle,_In_ PCTSTR Section)
LONG None setupapi.SetupGetLineCountW(_In_ HINF InfHandle,_In_ PCTSTR Section)
LONG None setupapi.SetupGetLineCountA(_In_ HINF InfHandle,_In_ PCTSTR Section)
NTSTATUS None None.RtlCopySid(_In_ ULONG DestinationSidLength,_In_ PSID DestinationSid,_In_ PSID SourceSid)
BOOL None setupapi.SetupQueueCopy(_In_ HSPFILEQ QueueHandle,_In_ PCTSTR SourceRootPath,_In_ PCTSTR SourcePath,_In_ PCTSTR SourceFileName,_In_ PCTSTR SourceDescription,_In_ PCTSTR SourceTagFile,_In_ PCTSTR TargetDirectory,_In_ PCTSTR TargetFileName,_In_ DWORD CopyStyle)
BOOL None setupapi.SetupQueueCopyW(_In_ HSPFILEQ QueueHandle,_In_ PCTSTR SourceRootPath,_In_ PCTSTR SourcePath,_In_ PCTSTR SourceFileName,_In_ PCTSTR SourceDescription,_In_ PCTSTR SourceTagFile,_In_ PCTSTR TargetDirectory,_In_ PCTSTR TargetFileName,_In_ DWORD CopyStyle)
BOOL None setupapi.SetupQueueCopyA(_In_ HSPFILEQ QueueHandle,_In_ PCTSTR SourceRootPath,_In_ PCTSTR SourcePath,_In_ PCTSTR SourceFileName,_In_ PCTSTR SourceDescription,_In_ PCTSTR SourceTagFile,_In_ PCTSTR TargetDirectory,_In_ PCTSTR TargetFileName,_In_ DWORD CopyStyle)
BOOLEAN None None.WdfInterruptQueueWorkItemForIsr(_In_ WDFINTERRUPT Interrupt)
BOOL None setupapi.SetupGetLineText(_In_ PINFCONTEXT Context,_In_ HINF InfHandle,_In_ PCTSTR Section,_In_ PCTSTR Key,_Inout_ PTSTR ReturnBuffer,_In_ DWORD ReturnBufferSize,_Inout_ PDWORD RequiredSize)
BOOL None setupapi.SetupGetLineTextW(_In_ PINFCONTEXT Context,_In_ HINF InfHandle,_In_ PCTSTR Section,_In_ PCTSTR Key,_Inout_ PTSTR ReturnBuffer,_In_ DWORD ReturnBufferSize,_Inout_ PDWORD RequiredSize)
BOOL None setupapi.SetupGetLineTextA(_In_ PINFCONTEXT Context,_In_ HINF InfHandle,_In_ PCTSTR Section,_In_ PCTSTR Key,_Inout_ PTSTR ReturnBuffer,_In_ DWORD ReturnBufferSize,_Inout_ PDWORD RequiredSize)
PVOID None None.WdfGetTriageInfo(void None None)
void None None.WdfIoQueueStopAndPurge(_In_ WDFQUEUE Queue,_In_opt_ PFN_WDF_IO_QUEUE_STATE StopAndPurgeComplete,_In_opt_ WDFCONTEXT Context)
WDFDRIVER None None.WdfWdmDriverGetWdfDriverHandle(_In_ PDRIVER_OBJECT DriverObject)
void None None.WdfDmaTransactionSetTransferCompleteCallback(_In_ WDFDMATRANSACTION DmaTransaction,_In_opt_ PFN_WDF_DMA_TRANSACTION_DMA_TRANSFER_COMPLETE DmaCompletionRoutine,_In_opt_ PVOID DmaCompletionContext)
BOOL None setupapi.SetupGetStringField(_In_ PINFCONTEXT Context,_In_ DWORD FieldIndex,_Inout_ PTSTR ReturnBuffer,_In_ DWORD ReturnBufferSize,_Out_ PDWORD RequiredSize)
BOOL None setupapi.SetupGetStringFieldW(_In_ PINFCONTEXT Context,_In_ DWORD FieldIndex,_Inout_ PTSTR ReturnBuffer,_In_ DWORD ReturnBufferSize,_Out_ PDWORD RequiredSize)
BOOL None setupapi.SetupGetStringFieldA(_In_ PINFCONTEXT Context,_In_ DWORD FieldIndex,_Inout_ PTSTR ReturnBuffer,_In_ DWORD ReturnBufferSize,_Out_ PDWORD RequiredSize)
BOOL None setupapi.SetupGetSourceFileSize(_In_ HINF InfHandle,_In_ PINFCONTEXT InfContext,_In_ PCTSTR FileName,_In_ PCTSTR Section,_Inout_ PDWORD FileSize,_In_ UINT RoundingFactor)
BOOL None setupapi.SetupGetSourceFileSizeW(_In_ HINF InfHandle,_In_ PINFCONTEXT InfContext,_In_ PCTSTR FileName,_In_ PCTSTR Section,_Inout_ PDWORD FileSize,_In_ UINT RoundingFactor)
BOOL None setupapi.SetupGetSourceFileSizeA(_In_ HINF InfHandle,_In_ PINFCONTEXT InfContext,_In_ PCTSTR FileName,_In_ PCTSTR Section,_Inout_ PDWORD FileSize,_In_ UINT RoundingFactor)
BOOL None setupapi.SetupQueueDefaultCopy(_In_ HSPFILE QueueHandle,_In_ HINF InfHandle,_In_ PCTSTR SourceRootPath,_In_ PCTSTR SourceFileName,_In_ PCTSTR TargetFileName,_In_ DWORD CopyStyle)
BOOL None setupapi.SetupQueueDefaultCopyW(_In_ HSPFILE QueueHandle,_In_ HINF InfHandle,_In_ PCTSTR SourceRootPath,_In_ PCTSTR SourceFileName,_In_ PCTSTR TargetFileName,_In_ DWORD CopyStyle)
BOOL None setupapi.SetupQueueDefaultCopyA(_In_ HSPFILE QueueHandle,_In_ HINF InfHandle,_In_ PCTSTR SourceRootPath,_In_ PCTSTR SourceFileName,_In_ PCTSTR TargetFileName,_In_ DWORD CopyStyle)
BOOL None setupapi.SetupFreeSourceList(_Inout_ PCTSTR **List,_In_ UINT Count)
BOOL None setupapi.SetupFreeSourceListW(_Inout_ PCTSTR **List,_In_ UINT Count)
BOOL None setupapi.SetupFreeSourceListA(_Inout_ PCTSTR **List,_In_ UINT Count)
BOOL None setupapi.SetupAddToSourceList(_In_ DWORD Flags,_In_ PCTSTR Source)
BOOL None setupapi.SetupAddToSourceListW(_In_ DWORD Flags,_In_ PCTSTR Source)
BOOL None setupapi.SetupAddToSourceListA(_In_ DWORD Flags,_In_ PCTSTR Source)
BOOL None setupapi.SetupGetLineByIndex(_In_ HINF InfHandle,_In_ PCTSTR Section,_In_ DWORD Index,_Inout_ PINFCONTEXT Context)
BOOL None setupapi.SetupGetLineByIndexW(_In_ HINF InfHandle,_In_ PCTSTR Section,_In_ DWORD Index,_Inout_ PINFCONTEXT Context)
BOOL None setupapi.SetupGetLineByIndexA(_In_ HINF InfHandle,_In_ PCTSTR Section,_In_ DWORD Index,_Inout_ PINFCONTEXT Context)
void None None.WdfDmaTransactionGetTransferInfo(_In_ WDFDMATRANSACTION DmaTransaction,_Out_opt_ ULONG *MapRegisterCount,_Out_opt_ ULONG *ScatterGatherElementCount)
UINT None setupapi.SetupCopyError(_In_ HWND hwndParent,_In_ PCTSTR DialogTitle,_In_ PCTSTR DiskName,_In_ PCTSTR PathToSource,_In_ PCTSTR SourceFile,_In_ PCTSTR TargetPathFile,_Out_ UINT Win32ErrorCode,_In_ DWORD Style,_Inout_ PTSTR PathBuffer,_In_ DWORD PathBufferSize,_Inout_ PDWORD PathRequiredSize)
UINT None setupapi.SetupCopyErrorW(_In_ HWND hwndParent,_In_ PCTSTR DialogTitle,_In_ PCTSTR DiskName,_In_ PCTSTR PathToSource,_In_ PCTSTR SourceFile,_In_ PCTSTR TargetPathFile,_Out_ UINT Win32ErrorCode,_In_ DWORD Style,_Inout_ PTSTR PathBuffer,_In_ DWORD PathBufferSize,_Inout_ PDWORD PathRequiredSize)
UINT None setupapi.SetupCopyErrorA(_In_ HWND hwndParent,_In_ PCTSTR DialogTitle,_In_ PCTSTR DiskName,_In_ PCTSTR PathToSource,_In_ PCTSTR SourceFile,_In_ PCTSTR TargetPathFile,_Out_ UINT Win32ErrorCode,_In_ DWORD Style,_Inout_ PTSTR PathBuffer,_In_ DWORD PathBufferSize,_Inout_ PDWORD PathRequiredSize)
DWORD None setupapi.SetupDecompressOrCopyFile(_In_ PCTSTR SourceFileName,_In_ PCTSTR TargetFileName,_In_ PUINT CompressionType)
DWORD None setupapi.SetupDecompressOrCopyFileW(_In_ PCTSTR SourceFileName,_In_ PCTSTR TargetFileName,_In_ PUINT CompressionType)
DWORD None setupapi.SetupDecompressOrCopyFileA(_In_ PCTSTR SourceFileName,_In_ PCTSTR TargetFileName,_In_ PUINT CompressionType)
UINT None setupapi.SetupDefaultQueueCallback(_In_ PVOID Context,_In_ UINT Notification,_In_ UINT Param1,_In_ UINT Param2)
UINT None setupapi.SetupDefaultQueueCallbackW(_In_ PVOID Context,_In_ UINT Notification,_In_ UINT Param1,_In_ UINT Param2)
UINT None setupapi.SetupDefaultQueueCallbackA(_In_ PVOID Context,_In_ UINT Notification,_In_ UINT Param1,_In_ UINT Param2)
BOOL None setupapi.SetupConfigureWmiFromInfSection(_In_ HINF InfHandle,_In_ PCWSTR SectionName,_In_ DWORD Flags)
BOOL None setupapi.SetupConfigureWmiFromInfSectionW(_In_ HINF InfHandle,_In_ PCWSTR SectionName,_In_ DWORD Flags)
BOOL None setupapi.SetupConfigureWmiFromInfSectionA(_In_ HINF InfHandle,_In_ PCWSTR SectionName,_In_ DWORD Flags)
BOOL None setupapi.SetupRemoveInstallSectionFromDiskSpaceList(_In_ HDSKSPC DiskSpace,_In_ HINF InfHandle,_In_ HINF LayoutInfHandle,_In_ PCTSTR SectionName,_In_ PVOID Reserved1,_In_ UINT Reserved2)
BOOL None setupapi.SetupRemoveInstallSectionFromDiskSpaceListW(_In_ HDSKSPC DiskSpace,_In_ HINF InfHandle,_In_ HINF LayoutInfHandle,_In_ PCTSTR SectionName,_In_ PVOID Reserved1,_In_ UINT Reserved2)
BOOL None setupapi.SetupRemoveInstallSectionFromDiskSpaceListA(_In_ HDSKSPC DiskSpace,_In_ HINF InfHandle,_In_ HINF LayoutInfHandle,_In_ PCTSTR SectionName,_In_ PVOID Reserved1,_In_ UINT Reserved2)
VOID None None.WdfVerifierDbgBreakPoint(void None None)
UINT None setupapi.SetupBackupError(_In_ HWND hwndParent,_In_ PCTSTR DialogTitle,_In_ PCTSTR SourceFile,_In_ PCTSTR TargetFile,_Out_ UINT Win32ErrorCode,_In_ DWORD Style)
UINT None setupapi.SetupBackupErrorW(_In_ HWND hwndParent,_In_ PCTSTR DialogTitle,_In_ PCTSTR SourceFile,_In_ PCTSTR TargetFile,_Out_ UINT Win32ErrorCode,_In_ DWORD Style)
UINT None setupapi.SetupBackupErrorA(_In_ HWND hwndParent,_In_ PCTSTR DialogTitle,_In_ PCTSTR SourceFile,_In_ PCTSTR TargetFile,_Out_ UINT Win32ErrorCode,_In_ DWORD Style)
DWORD None setupapi.SetupGetFieldCount(_In_ PINFCONTEXT Context)
BOOL None setupapi.SetupQueueDelete(_In_ HSPFILEQ QueueHandle,_In_ PCTSTR PathPart1,_In_ PCTSTR PathPart2)
BOOL None setupapi.SetupQueueDeleteW(_In_ HSPFILEQ QueueHandle,_In_ PCTSTR PathPart1,_In_ PCTSTR PathPart2)
BOOL None setupapi.SetupQueueDeleteA(_In_ HSPFILEQ QueueHandle,_In_ PCTSTR PathPart1,_In_ PCTSTR PathPart2)
BOOL None setupapi.SetupRemoveFileLogEntry(_In_ HSPFILELOG FileLogHandle,_In_ PCTSTR LogSectionName,_In_ PCTSTR TargetFileName)
BOOL None setupapi.SetupRemoveFileLogEntryW(_In_ HSPFILELOG FileLogHandle,_In_ PCTSTR LogSectionName,_In_ PCTSTR TargetFileName)
BOOL None setupapi.SetupRemoveFileLogEntryA(_In_ HSPFILELOG FileLogHandle,_In_ PCTSTR LogSectionName,_In_ PCTSTR TargetFileName)
VOID None None.WdfDeviceSetAlignmentRequirement(_In_ WDFDEVICE Device,_In_ ULONG AlignmentRequirement)
HINF None setupapi.SetupOpenMasterInf(void None None)
VOID None None.WdfDeviceInitSetFileObjectConfig(_In_ PWDFDEVICE_INIT DeviceInit,_In_ PWDF_FILEOBJECT_CONFIG FileObjectConfig,_In_opt_ PWDF_OBJECT_ATTRIBUTES FileObjectAttributes)
BOOL WINAPI setupapi.SetupAdjustDiskSpaceList(_In_ HDSKSPC DiskSpace,_In_ LPCTSTR DriveRoot,_In_ LONGLONG Amount,_Reserved_ PVOID Reserved1,_Reserved_ UINT Reserved2)
BOOL WINAPI setupapi.SetupAdjustDiskSpaceListW(_In_ HDSKSPC DiskSpace,_In_ LPCTSTR DriveRoot,_In_ LONGLONG Amount,_Reserved_ PVOID Reserved1,_Reserved_ UINT Reserved2)
BOOL WINAPI setupapi.SetupAdjustDiskSpaceListA(_In_ HDSKSPC DiskSpace,_In_ LPCTSTR DriveRoot,_In_ LONGLONG Amount,_Reserved_ PVOID Reserved1,_Reserved_ UINT Reserved2)
BOOL None setupapi.SetupQuerySourceList(_In_ DWORD Flags,_Inout_ PCTSTR **List,_Inout_ PUINT Count)
BOOL None setupapi.SetupQuerySourceListW(_In_ DWORD Flags,_Inout_ PCTSTR **List,_Inout_ PUINT Count)
BOOL None setupapi.SetupQuerySourceListA(_In_ DWORD Flags,_Inout_ PCTSTR **List,_Inout_ PUINT Count)
PDEVICE_OBJECT None None.WdfDeviceWdmGetAttachedDevice(_In_ WDFDEVICE Device)
BOOL None setupapi.SetupSetPlatformPathOverride(_In_ PCTSTR Override)
BOOL None setupapi.SetupSetPlatformPathOverrideW(_In_ PCTSTR Override)
BOOL None setupapi.SetupSetPlatformPathOverrideA(_In_ PCTSTR Override)
VOID CALLBACK setupapi.InstallHinfSection(_In_ HWND hwnd,_In_ HINSTANCE ModuleHandle,_In_ PCTSTR CmdLineBuffer,_In_ INT nCmdShow)
VOID CALLBACK setupapi.InstallHinfSectionW(_In_ HWND hwnd,_In_ HINSTANCE ModuleHandle,_In_ PCTSTR CmdLineBuffer,_In_ INT nCmdShow)
VOID CALLBACK setupapi.InstallHinfSectionA(_In_ HWND hwnd,_In_ HINSTANCE ModuleHandle,_In_ PCTSTR CmdLineBuffer,_In_ INT nCmdShow)
BOOL WINAPI setupapi.SetupEnumInfSections(_In_ HINF InfHandle,_In_ UINT EnumerationIndex,_Out_opt_ PTSTR ReturnBuffer,_In_ DWORD ReturnBufferSize,_Out_opt_ PDWORD RequiredSize)
BOOL WINAPI setupapi.SetupEnumInfSectionsW(_In_ HINF InfHandle,_In_ UINT EnumerationIndex,_Out_opt_ PTSTR ReturnBuffer,_In_ DWORD ReturnBufferSize,_Out_opt_ PDWORD RequiredSize)
BOOL WINAPI setupapi.SetupEnumInfSectionsA(_In_ HINF InfHandle,_In_ UINT EnumerationIndex,_Out_opt_ PTSTR ReturnBuffer,_In_ DWORD ReturnBufferSize,_Out_opt_ PDWORD RequiredSize)
PVOID None setupapi.SetupInitDefaultQueueCallback(_In_ HWND OwnerWindow)
NTSTATUS None None.WdfDeviceConfigureRequestDispatching(_In_ WDFDEVICE Device,_In_ WDFQUEUE Queue,_In_ WDF_REQUEST_TYPE RequestType)
VOID None None.WdfDeviceSetAlignmentRequirement(_In_ WDFDEVICE Device,_In_ ULONG AlignmentRequirement)
BOOL None setupapi.SetupCancelTemporarySourceList(void None None)
VOID None None.WdfDeviceInitSetFileObjectConfig(_In_ PWDFDEVICE_INIT DeviceInit,_In_ PWDF_FILEOBJECT_CONFIG FileObjectConfig,_In_opt_ PWDF_OBJECT_ATTRIBUTES FileObjectAttributes)
NTSTATUS None None.WdfDeviceAssignS0IdleSettings(_In_ WDFDEVICE Device,_In_ PWDF_DEVICE_POWER_POLICY_IDLE_SETTINGS Settings)
BOOL None setupapi.SetupFindNextMatchLine(_In_ PINFCONTEXT ContextIn,_In_ PCTSTR Key,_Inout_ PINFCONTEXT ContextOut)
BOOL None setupapi.SetupFindNextMatchLineW(_In_ PINFCONTEXT ContextIn,_In_ PCTSTR Key,_Inout_ PINFCONTEXT ContextOut)
BOOL None setupapi.SetupFindNextMatchLineA(_In_ PINFCONTEXT ContextIn,_In_ PCTSTR Key,_Inout_ PINFCONTEXT ContextOut)
NTSTATUS None None.WdfDeviceAssignS0IdleSettings(_In_ WDFDEVICE Device,_In_ PWDF_DEVICE_POWER_POLICY_IDLE_SETTINGS Settings)
PDEVICE_OBJECT None None.WdfDeviceWdmGetAttachedDevice(_In_ WDFDEVICE Device)
WDFOBJECT None None.WdfCollectionGetLastItem(_In_ WDFCOLLECTION Collection)
BOOL None setupapi.SetupTerminateFileLog(_In_ HSPFILELOG FileLogHandle)
VOID None None.WdfDeviceInitSetIoInCallerContextCallback(_In_ PWDFDEVICE_INIT DeviceInit,_In_ PFN_WDF_IO_IN_CALLER_CONTEXT EvtIoInCallerContext)
BOOL None setupapi.SetupInstallFilesFromInfSection(_In_ HINF InfHandle,_In_ HINF LayoutInfHandle,_In_ HSPFILEQ FileQueue,_In_ PCTSTR SectionName,_In_ PCTSTR SourceRootPath,_In_ UINT CopyFlags)
BOOL None setupapi.SetupInstallFilesFromInfSectionW(_In_ HINF InfHandle,_In_ HINF LayoutInfHandle,_In_ HSPFILEQ FileQueue,_In_ PCTSTR SectionName,_In_ PCTSTR SourceRootPath,_In_ UINT CopyFlags)
BOOL None setupapi.SetupInstallFilesFromInfSectionA(_In_ HINF InfHandle,_In_ HINF LayoutInfHandle,_In_ HSPFILEQ FileQueue,_In_ PCTSTR SectionName,_In_ PCTSTR SourceRootPath,_In_ UINT CopyFlags)
UCHAR None None.WdfUsbTargetDeviceGetNumInterfaces(_In_ WDFUSBDEVICE UsbDevice)
NTSTATUS None None.WdfMemoryCopyToBuffer(_In_ WDFMEMORY SourceMemory,_In_ size_t SourceOffset,_Out_ PVOID Buffer,_In_ size_t NumBytesToCopyTo)
BOOL None setupapi.SetupCommitFileQueue(_In_ HWND Owner,_In_ HSPFILEQ QueueHandle,_In_ PSP_FILE_CALLBACK MsgHandler,_In_ PVOID Context)
BOOL None setupapi.SetupCommitFileQueueW(_In_ HWND Owner,_In_ HSPFILEQ QueueHandle,_In_ PSP_FILE_CALLBACK MsgHandler,_In_ PVOID Context)
BOOL None setupapi.SetupCommitFileQueueA(_In_ HWND Owner,_In_ HSPFILEQ QueueHandle,_In_ PSP_FILE_CALLBACK MsgHandler,_In_ PVOID Context)
HDSKSPC WINAPI setupapi.SetupDuplicateDiskSpaceList(_In_ HDSKSPC DiskSpace,_Reserved_ PVOID Reserved1,_Reserved_ DWORD Reserved2,_Reserved_ UINT Flags)
HDSKSPC WINAPI setupapi.SetupDuplicateDiskSpaceListW(_In_ HDSKSPC DiskSpace,_Reserved_ PVOID Reserved1,_Reserved_ DWORD Reserved2,_Reserved_ UINT Flags)
HDSKSPC WINAPI setupapi.SetupDuplicateDiskSpaceListA(_In_ HDSKSPC DiskSpace,_Reserved_ PVOID Reserved1,_Reserved_ DWORD Reserved2,_Reserved_ UINT Flags)
UCHAR None None.WdfUsbTargetDeviceGetNumInterfaces(_In_ WDFUSBDEVICE UsbDevice)
VOID None None.WdfRequestCompleteWithInformation(_In_ WDFREQUEST Request,_In_ NTSTATUS Status,_In_ ULONG_PTR Information)
BOOL None setupapi.SetupGetSourceFileLocation(_In_ HINF InfHandle,_In_ PINFCONTEXT InfContext,_In_ PCTSTR FileName,_Inout_ PUINT SourceId,_Inout_ PTSTR ReturnBuffer,_Out_ DWORD ReturnBufferSize,_Inout_ PDWORD RequiredSize)
BOOL None setupapi.SetupGetSourceFileLocationW(_In_ HINF InfHandle,_In_ PINFCONTEXT InfContext,_In_ PCTSTR FileName,_Inout_ PUINT SourceId,_Inout_ PTSTR ReturnBuffer,_Out_ DWORD ReturnBufferSize,_Inout_ PDWORD RequiredSize)
BOOL None setupapi.SetupGetSourceFileLocationA(_In_ HINF InfHandle,_In_ PINFCONTEXT InfContext,_In_ PCTSTR FileName,_Inout_ PUINT SourceId,_Inout_ PTSTR ReturnBuffer,_Out_ DWORD ReturnBufferSize,_Inout_ PDWORD RequiredSize)
PDMA_ADAPTER None None.WdfDmaEnablerWdmGetDmaAdapter(_In_ WDFDMAENABLER DmaEnabler,_In_ WDF_DMA_DIRECTION DmaDirection)
BOOL None setupapi.SetupAddSectionToDiskSpaceList(_In_ HDSKSPC DiskSpace,_In_ HINF InfHandle,_In_ HINF ListInfHandle,_In_ PCTSTR SectionName,_In_ UINT Operation,_In_ PVOID Reserved1,_In_ UINT Reserved2)
BOOL None setupapi.SetupAddSectionToDiskSpaceListW(_In_ HDSKSPC DiskSpace,_In_ HINF InfHandle,_In_ HINF ListInfHandle,_In_ PCTSTR SectionName,_In_ UINT Operation,_In_ PVOID Reserved1,_In_ UINT Reserved2)
BOOL None setupapi.SetupAddSectionToDiskSpaceListA(_In_ HDSKSPC DiskSpace,_In_ HINF InfHandle,_In_ HINF ListInfHandle,_In_ PCTSTR SectionName,_In_ UINT Operation,_In_ PVOID Reserved1,_In_ UINT Reserved2)
BOOL None setupapi.SetupVerifyInfFile(_In_ PCWSTR InfName,_In_ PSP_ALTPLATFORM_FORM AltPlatformInfo,_Out_ PSP_INF_SIGNER_INFO_W InfFileName)
BOOL None setupapi.SetupVerifyInfFileW(_In_ PCWSTR InfName,_In_ PSP_ALTPLATFORM_FORM AltPlatformInfo,_Out_ PSP_INF_SIGNER_INFO_W InfFileName)
BOOL None setupapi.SetupVerifyInfFileA(_In_ PCWSTR InfName,_In_ PSP_ALTPLATFORM_FORM AltPlatformInfo,_Out_ PSP_INF_SIGNER_INFO_W InfFileName)
BOOL None setupapi.SetupLogFile(_In_ HSPFILELOG FileLogHandle,_In_ PCTSTR LogSectionName,_In_ PCTSTR SourceFileName,_In_ PCTSTR TargetFileName,_In_ DWORD Checksum,_In_ PCTSTR DiskTagfile,_In_ PCTSTR DiskDescription,_In_ PCTSTR OtherInfo,_In_ DWORD Flags)
BOOL None setupapi.SetupLogFileW(_In_ HSPFILELOG FileLogHandle,_In_ PCTSTR LogSectionName,_In_ PCTSTR SourceFileName,_In_ PCTSTR TargetFileName,_In_ DWORD Checksum,_In_ PCTSTR DiskTagfile,_In_ PCTSTR DiskDescription,_In_ PCTSTR OtherInfo,_In_ DWORD Flags)
BOOL None setupapi.SetupLogFileA(_In_ HSPFILELOG FileLogHandle,_In_ PCTSTR LogSectionName,_In_ PCTSTR SourceFileName,_In_ PCTSTR TargetFileName,_In_ DWORD Checksum,_In_ PCTSTR DiskTagfile,_In_ PCTSTR DiskDescription,_In_ PCTSTR OtherInfo,_In_ DWORD Flags)
BOOL None setupapi.SetupInstallServicesFromInfSection(_In_ HINF InfHandle,_In_ PCTSTR SectionName,_In_ DWORD Flags)
BOOL None setupapi.SetupInstallServicesFromInfSectionW(_In_ HINF InfHandle,_In_ PCTSTR SectionName,_In_ DWORD Flags)
BOOL None setupapi.SetupInstallServicesFromInfSectionA(_In_ HINF InfHandle,_In_ PCTSTR SectionName,_In_ DWORD Flags)
BOOL None setupapi.SetupInstallFileEx(_In_ HINF InfHandle,_In_ PINFCONTEXT InfContext,_In_ PCTSTR SourceFile,_In_ PCTSTR SourcePathRoot,_In_ PCTSTR DestinationName,_In_ DWORD CopyStyle,_In_ PSP_FILE_CALLBACK CopyMsgHandler,_In_ PVOID Context,_Out_ PBOOL FileWasInUse)
BOOL None setupapi.SetupInstallFileExW(_In_ HINF InfHandle,_In_ PINFCONTEXT InfContext,_In_ PCTSTR SourceFile,_In_ PCTSTR SourcePathRoot,_In_ PCTSTR DestinationName,_In_ DWORD CopyStyle,_In_ PSP_FILE_CALLBACK CopyMsgHandler,_In_ PVOID Context,_Out_ PBOOL FileWasInUse)
BOOL None setupapi.SetupInstallFileExA(_In_ HINF InfHandle,_In_ PINFCONTEXT InfContext,_In_ PCTSTR SourceFile,_In_ PCTSTR SourcePathRoot,_In_ PCTSTR DestinationName,_In_ DWORD CopyStyle,_In_ PSP_FILE_CALLBACK CopyMsgHandler,_In_ PVOID Context,_Out_ PBOOL FileWasInUse)
NTSTATUS None None.WdfRegistryAssignString(_In_ WDFKEY Key,_In_ PCUNICODE_STRING ValueName,_In_ WDFSTRING String)
NTSTATUS None None.WdfIoTargetSendReadSynchronously(_In_ WDFIOTARGET IoTarget,_In_opt_ WDFREQUEST Request,_In_opt_ PWDF_MEMORY_DESCRIPTOR OutputBuffer,_In_opt_ PLONGLONG DeviceOffset,_In_opt_ PWDF_REQUEST_SEND_OPTIONS RequestOptions,_Out_opt_ PULONG_PTR BytesRead)
WDFOBJECT None None.WdfCollectionGetLastItem(_In_ WDFCOLLECTION Collection)
PDMA_ADAPTER None None.WdfDmaEnablerWdmGetDmaAdapter(_In_ WDFDMAENABLER DmaEnabler,_In_ WDF_DMA_DIRECTION DmaDirection)
BOOL None setupapi.SetupScanFileQueue(_In_ HSPFILEQ FileQueue,_In_ DWORD Flags,_In_ HWND Window,_In_ PSP_FILE_CALLBACK CallbackRoutine,_In_ PVOID CallbackContext,_Out_ PDWORD Result)
BOOL None setupapi.SetupScanFileQueueW(_In_ HSPFILEQ FileQueue,_In_ DWORD Flags,_In_ HWND Window,_In_ PSP_FILE_CALLBACK CallbackRoutine,_In_ PVOID CallbackContext,_Out_ PDWORD Result)
BOOL None setupapi.SetupScanFileQueueA(_In_ HSPFILEQ FileQueue,_In_ DWORD Flags,_In_ HWND Window,_In_ PSP_FILE_CALLBACK CallbackRoutine,_In_ PVOID CallbackContext,_Out_ PDWORD Result)
VOID None None.WdfDeviceInitSetIoInCallerContextCallback(_In_ PWDFDEVICE_INIT DeviceInit,_In_ PFN_WDF_IO_IN_CALLER_CONTEXT EvtIoInCallerContext)
BOOL None setupapi.SetupAddToDiskSpaceList(_In_ HDSKSPC DiskSpace,_In_ PCTSTR TargetFilespec,_In_ LONGLONG FileSize,_In_ UINT Operation,_In_ PVOID Reserved1,_In_ UINT Reserved2)
BOOL None setupapi.SetupAddToDiskSpaceListW(_In_ HDSKSPC DiskSpace,_In_ PCTSTR TargetFilespec,_In_ LONGLONG FileSize,_In_ UINT Operation,_In_ PVOID Reserved1,_In_ UINT Reserved2)
BOOL None setupapi.SetupAddToDiskSpaceListA(_In_ HDSKSPC DiskSpace,_In_ PCTSTR TargetFilespec,_In_ LONGLONG FileSize,_In_ UINT Operation,_In_ PVOID Reserved1,_In_ UINT Reserved2)
BOOL None setupapi.SetupAddInstallSectionToDiskSpaceList(_In_ HDSKSPC DiskSpace,_In_ HINF InfHandle,_In_ HINF LayoutInfHandle,_In_ PCTSTR SectionName,_In_ PVOID Reserved1,_In_ UINT Reserved2)
BOOL None setupapi.SetupAddInstallSectionToDiskSpaceListW(_In_ HDSKSPC DiskSpace,_In_ HINF InfHandle,_In_ HINF LayoutInfHandle,_In_ PCTSTR SectionName,_In_ PVOID Reserved1,_In_ UINT Reserved2)
BOOL None setupapi.SetupAddInstallSectionToDiskSpaceListA(_In_ HDSKSPC DiskSpace,_In_ HINF InfHandle,_In_ HINF LayoutInfHandle,_In_ PCTSTR SectionName,_In_ PVOID Reserved1,_In_ UINT Reserved2)
VOID None None.WdfCollectionRemoveItem(_In_ WDFCOLLECTION Collection,_In_ ULONG Index)
void None None.WdfDmaTransactionSetChannelConfigurationCallback(_In_ WDFDMATRANSACTION DmaTransaction,_In_opt_ PFN_WDF_DMA_TRANSACTION_CONFIGURE_DMA_CHANNEL ConfigureRoutine,_In_opt_ PVOID ConfigureContext)
BOOL None setupapi.SetupGetFileQueueCount(_In_ HSPFILEQ FileQueue,_In_ UINT SubQueueFileOp,_Out_ PUINT NumOperations)
BOOL None setupapi.SetupQueryDrivesInDiskSpaceList(_In_ HDSKSPC DiskSpace,_Inout_ PSTR ReturnBuffer,_In_ DWORD ReturnBufferSize,_Inout_ PDWORD RequiredSize)
BOOL None setupapi.SetupQueryDrivesInDiskSpaceListW(_In_ HDSKSPC DiskSpace,_Inout_ PSTR ReturnBuffer,_In_ DWORD ReturnBufferSize,_Inout_ PDWORD RequiredSize)
BOOL None setupapi.SetupQueryDrivesInDiskSpaceListA(_In_ HDSKSPC DiskSpace,_Inout_ PSTR ReturnBuffer,_In_ DWORD ReturnBufferSize,_Inout_ PDWORD RequiredSize)
NTSTATUS None None.WdfUsbTargetDeviceFormatRequestForUrb(_In_ WDFUSBDEVICE UsbDevice,_In_ WDFREQUEST Request,_In_ WDFMEMORY UrbMemory,_In_opt_ PWDFMEMORY_OFFSET UrbMemoryOffset)
VOID None None.WdfFdoInitSetEventCallbacks(_In_ PWDFDEVICE_INIT DeviceInit,_In_ PWDF_FDO_EVENT_CALLBACKS FdoEventCallbacks)
BOOL None setupapi.SetupQueryInfFileInformation(_In_ PSP_INF_INFORMATION InfInformation,_In_ UINT InfIndex,_Inout_ PTSTR ReturnBuffer,_In_ DWORD ReturnBufferSize,_Inout_ PDWORD RequiredSize)
BOOL None setupapi.SetupQueryInfFileInformationW(_In_ PSP_INF_INFORMATION InfInformation,_In_ UINT InfIndex,_Inout_ PTSTR ReturnBuffer,_In_ DWORD ReturnBufferSize,_Inout_ PDWORD RequiredSize)
BOOL None setupapi.SetupQueryInfFileInformationA(_In_ PSP_INF_INFORMATION InfInformation,_In_ UINT InfIndex,_Inout_ PTSTR ReturnBuffer,_In_ DWORD ReturnBufferSize,_Inout_ PDWORD RequiredSize)
NTSTATUS None None.WdfUsbTargetPipeAbortSynchronously(_In_ WDFUSBPIPE Pipe,_In_opt_ WDFREQUEST Request,_In_opt_ PWDF_REQUEST_SEND_OPTIONS RequestOptions)
NTSTATUS None None.WdfIoTargetSendReadSynchronously(_In_ WDFIOTARGET IoTarget,_In_opt_ WDFREQUEST Request,_In_opt_ PWDF_MEMORY_DESCRIPTOR OutputBuffer,_In_opt_ PLONGLONG DeviceOffset,_In_opt_ PWDF_REQUEST_SEND_OPTIONS RequestOptions,_Out_opt_ PULONG_PTR BytesRead)
PFILE_OBJECT None None.IoCreateStreamFileObjectEx(_In_opt_ PFILE_OBJECT FileObject,_In_opt_ PDEVICE_OBJECT DeviceObject,_Out_opt_ PHANDLE FileHandle)
NTSTATUS None None.WdfUsbTargetDeviceCreateUrb(_In_ WDFUSBDEVICE UsbDevice,_In_opt_ PWDF_OBJECT_ATTRIBUTES Attributes,_Out_ WDFMEMORY *UrbMemory,_Out_opt_ PURB *Urb)
BOOL None setupapi.SetupRemoveSectionFromDiskSpaceList(_In_ HDSKSPC DiskSpace,_In_ HINF InfHandle,_In_ HINF ListInfHandle,_In_ PCTSTR SectionName,_In_ UINT Operation,_In_ PVOID Reserved1,_In_ UINT Reserved2)
BOOL None setupapi.SetupRemoveSectionFromDiskSpaceListW(_In_ HDSKSPC DiskSpace,_In_ HINF InfHandle,_In_ HINF ListInfHandle,_In_ PCTSTR SectionName,_In_ UINT Operation,_In_ PVOID Reserved1,_In_ UINT Reserved2)
BOOL None setupapi.SetupRemoveSectionFromDiskSpaceListA(_In_ HDSKSPC DiskSpace,_In_ HINF InfHandle,_In_ HINF ListInfHandle,_In_ PCTSTR SectionName,_In_ UINT Operation,_In_ PVOID Reserved1,_In_ UINT Reserved2)
NTSTATUS None None.WdfDeviceCreate(_Inout_ PWDFDEVICE_INIT *DeviceInit,_In_opt_ PWDF_OBJECT_ATTRIBUTES DeviceAttributes,_Out_ WDFDEVICE *Device)
NTSTATUS None None.WdfIoTargetSendWriteSynchronously(_In_ WDFIOTARGET IoTarget,_In_opt_ WDFREQUEST Request,_In_opt_ PWDF_MEMORY_DESCRIPTOR InputBuffer,_In_opt_ PLONGLONG DeviceOffset,_In_opt_ PWDF_REQUEST_SEND_OPTIONS RequestOptions,_Out_opt_ PULONG_PTR BytesWritten)
UINT None setupapi.SetupRenameError(_In_ HWND hwndParent,_In_ PCTSTR DialogTitle,_In_ PCTSTR SourceFile,_In_ PCTSTR TargetFile,_In_ UINT Win32ErrorCode,_In_ DWORD Style)
UINT None setupapi.SetupRenameErrorW(_In_ HWND hwndParent,_In_ PCTSTR DialogTitle,_In_ PCTSTR SourceFile,_In_ PCTSTR TargetFile,_In_ UINT Win32ErrorCode,_In_ DWORD Style)
UINT None setupapi.SetupRenameErrorA(_In_ HWND hwndParent,_In_ PCTSTR DialogTitle,_In_ PCTSTR SourceFile,_In_ PCTSTR TargetFile,_In_ UINT Win32ErrorCode,_In_ DWORD Style)
BOOL None setupapi.SetupFindFirstLine(_In_ HINF InfHandle,_In_ PCTSTR Section,_In_ PCTSTR Key,_Inout_ PINFCONTEXT Context)
BOOL None setupapi.SetupFindFirstLineW(_In_ HINF InfHandle,_In_ PCTSTR Section,_In_ PCTSTR Key,_Inout_ PINFCONTEXT Context)
BOOL None setupapi.SetupFindFirstLineA(_In_ HINF InfHandle,_In_ PCTSTR Section,_In_ PCTSTR Key,_Inout_ PINFCONTEXT Context)
VOID None None.WDF_IO_QUEUE_CONFIG_INIT(_Out_ PWDF_IO_QUEUE_CONFIG Config,_In_ WDF_IO_QUEUE_DISPATCH_TYPE DispatchType)
void None None.OnCreateFile([in] IWDFIoQueue *pWdfQueue,[in] IWDFIoRequest *pWdfRequest,[in] IWDFFile *pWdfFileObject)
VOID None None.WdfInterruptReleaseLock(_In_ WDFINTERRUPT Interrupt)
NTSTATUS None None.WdfRequestForwardToIoQueue(_In_ WDFREQUEST Request,_In_ WDFQUEUE DestinationQueue)
WDF_DEVICE_POWER_STATE None None.WdfDeviceGetDevicePowerState(_In_ WDFDEVICE Device)
HSPFILELOG None setupapi.SetupInitializeFileLog(_In_ PCTSTR LogFileName,_In_ DWORD Flags)
HSPFILELOG None setupapi.SetupInitializeFileLogW(_In_ PCTSTR LogFileName,_In_ DWORD Flags)
HSPFILELOG None setupapi.SetupInitializeFileLogA(_In_ PCTSTR LogFileName,_In_ DWORD Flags)
VOID None None.WDF_TIMER_CONFIG_INIT(_In_ PWDF_TIMER_CONFIG Config,_In_ PFN_WDF_TIMER EvtTimerFunc)
VOID None None.CcMdlWriteComplete(_In_ PFILE_OBJECT FileObject,_In_ PLARGE_INTEGER FileOffset,_In_ PMDL MdlChain)
NTSTATUS None None.WdfCommonBufferCreate(_In_ WDFDMAENABLER DmaEnabler,_In_ size_t Length,_In_opt_ PWDF_OBJECT_ATTRIBUTES Attributes,_Out_ WDFCOMMONBUFFER *CommonBuffer)
NTSTATUS None None.WdfDeviceWdmDispatchIrp(_In_ WDFDEVICE Device,_In_ PIRP Irp,_In_ WDFCONTEXT DispatchContext)
VOID None None.FltReferenceFileNameInformation(_In_ PFLT_FILE_NAME_INFORMATION FileNameInformation)
VOID None None.WdfInterruptSetPolicy(_In_ WDFINTERRUPT Interrupt,_In_ WDF_INTERRUPT_POLICY Policy,_In_ WDF_INTERRUPT_PRIORITY Priority,_In_ KAFFINITY TargetProcessorSet)
VOID None None.WdfVerifierDbgBreakPoint(void None None)
BOOL None setupapi.SetupGetIntField(_In_ PINFCONTEXT Context,_In_ DWORD FieldIndex,_Out_ PINT IntegerValue)
VOID None None.WDF_USB_DEVICE_SELECT_CONFIG_PARAMS_INIT_URB(_Out_ PWDF_USB_DEVICE_SELECT_CONFIG_PARAMS Params,_In_ PURB Urb)
HRESULT None None.deviceAvailable([in] BSTR bstrDeviceName,[in] IWMPSubscriptionServiceCallback *pCB)
NTSTATUS None None.WdfMemoryAssignBuffer(_In_ WDFMEMORY Memory,_In_ PVOID Buffer,_In_ size_t BufferSize)
VOID None None.WdfInterruptAcquireLock(_In_ WDFINTERRUPT Interrupt)
VOID None None.UcmTcpciPortControllerAlert(_In_ UCMTCPCIPORTCONTROLLER PortControllerObject,PUCMTCPCI_PORT_CONTROLLER_ALERT_DATA AlertData None,size_t NumberOfAlerts None)
BOOL None setupapi.SetupQueueCopySection(_In_ HSPFILEQ QueueHandle,_In_ PCTSTR SourceRootPath,_In_ HINF InfHandle,_In_ HINF ListInfHandle,_In_ PCTSTR Section,_In_ DWORD CopyStyle)
BOOL None setupapi.SetupQueueCopySectionW(_In_ HSPFILEQ QueueHandle,_In_ PCTSTR SourceRootPath,_In_ HINF InfHandle,_In_ HINF ListInfHandle,_In_ PCTSTR Section,_In_ DWORD CopyStyle)
BOOL None setupapi.SetupQueueCopySectionA(_In_ HSPFILEQ QueueHandle,_In_ PCTSTR SourceRootPath,_In_ HINF InfHandle,_In_ HINF ListInfHandle,_In_ PCTSTR Section,_In_ DWORD CopyStyle)
BYTE None None.WdfUsbInterfaceGetNumEndpoints(_In_ WDFUSBINTERFACE UsbInterface,_In_ UCHAR SettingIndex)
NTSTATUS None None.WdfDeviceAllocAndQueryPropertyEx(_In_ WDFDEVICE Device,_In_ PWDF_DEVICE_PROPERTY_DATA DeviceProperty,_In_ POOL_TYPE PoolType,_In_opt_ PWDF_OBJECT_ATTRIBUTES PropertyMemoryAttributes,_Out_ WDFMEMORY *PropertyMemory,_Out_ PDEVPROPTYPE Type)
NTSTATUS None None.WdfDeviceConfigureRequestDispatching(_In_ WDFDEVICE Device,_In_ WDFQUEUE Queue,_In_ WDF_REQUEST_TYPE RequestType)
BOOL None setupapi.SetupGetStringField(_In_ PINFCONTEXT Context,_In_ DWORD FieldIndex,_Inout_ PTSTR ReturnBuffer,_In_ DWORD ReturnBufferSize,_Out_ PDWORD RequiredSize)
BOOL None setupapi.SetupGetStringFieldW(_In_ PINFCONTEXT Context,_In_ DWORD FieldIndex,_Inout_ PTSTR ReturnBuffer,_In_ DWORD ReturnBufferSize,_Out_ PDWORD RequiredSize)
BOOL None setupapi.SetupGetStringFieldA(_In_ PINFCONTEXT Context,_In_ DWORD FieldIndex,_Inout_ PTSTR ReturnBuffer,_In_ DWORD ReturnBufferSize,_Out_ PDWORD RequiredSize)
DWORD None setupapi.SetupGetFileCompressionInfo(_In_ PCTSTR SourceFileName,_Inout_ PTSTR *ActualSourceFileName,_Inout_ PDWORD SourceFileSize,_Inout_ PDWORD TargetFileSize,_Inout_ PUINT CompressionType)
DWORD None setupapi.SetupGetFileCompressionInfoW(_In_ PCTSTR SourceFileName,_Inout_ PTSTR *ActualSourceFileName,_Inout_ PDWORD SourceFileSize,_Inout_ PDWORD TargetFileSize,_Inout_ PUINT CompressionType)
DWORD None setupapi.SetupGetFileCompressionInfoA(_In_ PCTSTR SourceFileName,_Inout_ PTSTR *ActualSourceFileName,_Inout_ PDWORD SourceFileSize,_Inout_ PDWORD TargetFileSize,_Inout_ PUINT CompressionType)
void None None.UdecxUsbDeviceInitSetStateChangeCallbacks(_Inout_ PUDECXUSBDEVICE_INIT UdecxUsbDeviceInit,_In_ PUDECX_USB_DEVICE_STATE_CHANGE_CALLBACKS Callbacks)
BOOL None setupapi.SetupSetPlatformPathOverride(_In_ PCTSTR Override)
BOOL None setupapi.SetupSetPlatformPathOverrideW(_In_ PCTSTR Override)
BOOL None setupapi.SetupSetPlatformPathOverrideA(_In_ PCTSTR Override)
PDMA_ADAPTER None None.WdfDmaEnablerWdmGetDmaAdapter(_In_ WDFDMAENABLER DmaEnabler,_In_ WDF_DMA_DIRECTION DmaDirection)
VOID None None.WDF_INTERRUPT_INFO_INIT(_Out_ PWDF_INTERRUPT_INFO Info)
VOID None None.WdfCollectionRemoveItem(_In_ WDFCOLLECTION Collection,_In_ ULONG Index)
BOOL None setupapi.SetupQuerySpaceRequiredOnDrive(_In_ HDSKSPC DiskSpace,_In_ PCTSTR DriveSpec,_Out_ LONGLONG *SpaceRequired,_In_ PVOID Reserved1,_In_ UINT Reserved2)
BOOL None setupapi.SetupQuerySpaceRequiredOnDriveW(_In_ HDSKSPC DiskSpace,_In_ PCTSTR DriveSpec,_Out_ LONGLONG *SpaceRequired,_In_ PVOID Reserved1,_In_ UINT Reserved2)
BOOL None setupapi.SetupQuerySpaceRequiredOnDriveA(_In_ HDSKSPC DiskSpace,_In_ PCTSTR DriveSpec,_Out_ LONGLONG *SpaceRequired,_In_ PVOID Reserved1,_In_ UINT Reserved2)
WDF_IO_QUEUE_STATE None None.WdfIoQueueGetState(_In_ WDFQUEUE Queue,_Out_opt_ PULONG QueueRequests,_Out_opt_ PULONG DriverRequests)
VOID None None.WDF_MEMORY_DESCRIPTOR_INIT_HANDLE(_Out_ PWDF_MEMORY_DESCRIPTOR Descriptor,_In_ WDFMEMORY Memory,_In_opt_ PWDFMEMORY_OFFSET Offsets)
void None None.WdfInterruptReportActive(_In_ WDFINTERRUPT Interrupt)
BOOL None setupapi.SetupAddSectionToDiskSpaceList(_In_ HDSKSPC DiskSpace,_In_ HINF InfHandle,_In_ HINF ListInfHandle,_In_ PCTSTR SectionName,_In_ UINT Operation,_In_ PVOID Reserved1,_In_ UINT Reserved2)
BOOL None setupapi.SetupAddSectionToDiskSpaceListW(_In_ HDSKSPC DiskSpace,_In_ HINF InfHandle,_In_ HINF ListInfHandle,_In_ PCTSTR SectionName,_In_ UINT Operation,_In_ PVOID Reserved1,_In_ UINT Reserved2)
BOOL None setupapi.SetupAddSectionToDiskSpaceListA(_In_ HDSKSPC DiskSpace,_In_ HINF InfHandle,_In_ HINF ListInfHandle,_In_ PCTSTR SectionName,_In_ UINT Operation,_In_ PVOID Reserved1,_In_ UINT Reserved2)
NTSTATUS None None.FsRtlAllocateExtraCreateParameterList(_In_ FSRTL_ALLOCATE_ECPLIST_FLAGS Flags,_Out_ PECP_LIST *EcpList)
BOOL None setupapi.SetupFindFirstLine(_In_ HINF InfHandle,_In_ PCTSTR Section,_In_ PCTSTR Key,_Inout_ PINFCONTEXT Context)
BOOL None setupapi.SetupFindFirstLineW(_In_ HINF InfHandle,_In_ PCTSTR Section,_In_ PCTSTR Key,_Inout_ PINFCONTEXT Context)
BOOL None setupapi.SetupFindFirstLineA(_In_ HINF InfHandle,_In_ PCTSTR Section,_In_ PCTSTR Key,_Inout_ PINFCONTEXT Context)
BOOLEAN None None.WdfUsbTargetPipeIsInEndpoint(_In_ WDFUSBPIPE Pipe)
BOOLEAN None None.HwScsiAdapterState(_In_ PVOID HwDeviceExtension,_In_ PVOID Context,_In_ BOOLEAN SaveState)
VOID None None.WDF_MEMORY_DESCRIPTOR_INIT_MDL(_Out_ PWDF_MEMORY_DESCRIPTOR Descriptor,_In_ PMDL Mdl,_In_ ULONG BufferLength)
BOOLEAN None None.WDF_IO_QUEUE_READY(_In_ WDF_IO_QUEUE_STATE State)
VOID None None.WDF_USB_DEVICE_SELECT_CONFIG_PARAMS_INIT_DECONFIG(_Out_ PWDF_USB_DEVICE_SELECT_CONFIG_PARAMS Params)
BOOL None setupapi.SetupFindNextLine(_In_ PINFCONTEXT ContextIn,_Out_ PINFCONTEXT ContextOut)
UINT None msi.MsiInstallProduct(_In_ LPCTSTR szPackagePath,_In_ LPCTSTR szCommandLine)
UINT None msi.MsiInstallProductW(_In_ LPCTSTR szPackagePath,_In_ LPCTSTR szCommandLine)
UINT None msi.MsiInstallProductA(_In_ LPCTSTR szPackagePath,_In_ LPCTSTR szCommandLine)
BOOL None setupapi.SetupSetSourceList(_In_ DWORD Flags,_In_ PCTSTR *SourceList,_In_ UINT SourceCount)
BOOL None setupapi.SetupSetSourceListW(_In_ DWORD Flags,_In_ PCTSTR *SourceList,_In_ UINT SourceCount)
BOOL None setupapi.SetupSetSourceListA(_In_ DWORD Flags,_In_ PCTSTR *SourceList,_In_ UINT SourceCount)
PVOID None setupapi.SetupInitDefaultQueueCallbackEx(_In_ HWND OwnerWindow,_In_ HWND AlternateProgressWindow,_In_ UINT ProgressMessage,_In_ DWORD Reserved1,_In_ PVOID Reserved2)
HINF None setupapi.SetupOpenMasterInf(void None None)
BOOL None setupapi.SetupTerminateFileLog(_In_ HSPFILELOG FileLogHandle)
VOID None None.WDF_USB_DEVICE_SELECT_CONFIG_PARAMS_INIT_SINGLE_INTERFACE(_Out_ PWDF_USB_DEVICE_SELECT_CONFIG_PARAMS Params)
typedef BOOLEAN None.HW_INTERRUPT(IN PVOID DeviceExtension)
NTSTATUS None None.WdfRegistryAssignString(_In_ WDFKEY Key,_In_ PCUNICODE_STRING ValueName,_In_ WDFSTRING String)
NTSTATUS None None.WdfDeviceIndicateWakeStatus(_In_ WDFDEVICE Device,_In_ NTSTATUS WaitWakeStatus)
PKINTERRUPT None None.WdfInterruptWdmGetInterrupt(_In_ WDFINTERRUPT Interrupt)
UINT None msi.MsiProvideQualifiedComponent(_In_ LPCTSTR szComponent,_In_ LPCTSTR szQualifier,_In_ DWORD dwInstallMode,_Out_ LPTSTR lpPathBuf,_Inout_ DWORD *pcchPathBuf)
UINT None msi.MsiProvideQualifiedComponentW(_In_ LPCTSTR szComponent,_In_ LPCTSTR szQualifier,_In_ DWORD dwInstallMode,_Out_ LPTSTR lpPathBuf,_Inout_ DWORD *pcchPathBuf)
UINT None msi.MsiProvideQualifiedComponentA(_In_ LPCTSTR szComponent,_In_ LPCTSTR szQualifier,_In_ DWORD dwInstallMode,_Out_ LPTSTR lpPathBuf,_Inout_ DWORD *pcchPathBuf)
BOOL None setupapi.SetupQueryDrivesInDiskSpaceList(_In_ HDSKSPC DiskSpace,_Inout_ PSTR ReturnBuffer,_In_ DWORD ReturnBufferSize,_Inout_ PDWORD RequiredSize)
BOOL None setupapi.SetupQueryDrivesInDiskSpaceListW(_In_ HDSKSPC DiskSpace,_Inout_ PSTR ReturnBuffer,_In_ DWORD ReturnBufferSize,_Inout_ PDWORD RequiredSize)
BOOL None setupapi.SetupQueryDrivesInDiskSpaceListA(_In_ HDSKSPC DiskSpace,_Inout_ PSTR ReturnBuffer,_In_ DWORD ReturnBufferSize,_Inout_ PDWORD RequiredSize)
NTSTATUS None None.WdfMemoryCreateFromLookaside(_In_ WDFLOOKASIDE Lookaside,_Out_ WDFMEMORY *Memory)
BOOL None setupapi.SetupQueueRenameSection(_In_ HSPFILEQ QueueHandle,_In_ HINF InfHandle,_In_ HINF ListInfHandle,_In_ PCTSTR Section)
BOOL None setupapi.SetupQueueRenameSectionW(_In_ HSPFILEQ QueueHandle,_In_ HINF InfHandle,_In_ HINF ListInfHandle,_In_ PCTSTR Section)
BOOL None setupapi.SetupQueueRenameSectionA(_In_ HSPFILEQ QueueHandle,_In_ HINF InfHandle,_In_ HINF ListInfHandle,_In_ PCTSTR Section)
VOID None None.FltReleaseFileNameInformation(_In_ PFLT_FILE_NAME_INFORMATION FileNameInformation)
VOID None None.WDF_USB_CONTROL_SETUP_PACKET_INIT(_Out_ PWDF_USB_CONTROL_SETUP_PACKET Packet,_In_ WDF_USB_BMREQUEST_DIRECTION Direction,_In_ WDF_USB_BMREQUEST_RECIPIENT Recipient,_In_ BYTE Request,_In_ USHORT Value,_In_ USHORT Index)
UINT None setupapi.SetupPromptForDisk(_In_ HWND hwndParent,_In_ PCTSTR DialogTitle,_In_ PCTSTR DiskName,_In_ INPCTSTR PathToSource,_In_ PCTSTR FileSought,_In_ PCTSTR TagFile,_In_ DWORD DiskPromptStyle,_Inout_ PTSTR PathBuffer,_In_ DWORD PathBufferSize,_Inout_ PDWORD PathRequiredSize)
UINT None setupapi.SetupPromptForDiskW(_In_ HWND hwndParent,_In_ PCTSTR DialogTitle,_In_ PCTSTR DiskName,_In_ INPCTSTR PathToSource,_In_ PCTSTR FileSought,_In_ PCTSTR TagFile,_In_ DWORD DiskPromptStyle,_Inout_ PTSTR PathBuffer,_In_ DWORD PathBufferSize,_Inout_ PDWORD PathRequiredSize)
UINT None setupapi.SetupPromptForDiskA(_In_ HWND hwndParent,_In_ PCTSTR DialogTitle,_In_ PCTSTR DiskName,_In_ INPCTSTR PathToSource,_In_ PCTSTR FileSought,_In_ PCTSTR TagFile,_In_ DWORD DiskPromptStyle,_Inout_ PTSTR PathBuffer,_In_ DWORD PathBufferSize,_Inout_ PDWORD PathRequiredSize)
BOOL None setupapi.SetupRemoveFileLogEntry(_In_ HSPFILELOG FileLogHandle,_In_ PCTSTR LogSectionName,_In_ PCTSTR TargetFileName)
BOOL None setupapi.SetupRemoveFileLogEntryW(_In_ HSPFILELOG FileLogHandle,_In_ PCTSTR LogSectionName,_In_ PCTSTR TargetFileName)
BOOL None setupapi.SetupRemoveFileLogEntryA(_In_ HSPFILELOG FileLogHandle,_In_ PCTSTR LogSectionName,_In_ PCTSTR TargetFileName)
NTSTATUS None None.WdfUsbTargetDeviceCreateUrb(_In_ WDFUSBDEVICE UsbDevice,_In_opt_ PWDF_OBJECT_ATTRIBUTES Attributes,_Out_ WDFMEMORY *UrbMemory,_Out_opt_ PURB *Urb)
BOOLEAN None None.WDF_IO_QUEUE_IDLE(_In_ WDF_IO_QUEUE_STATE State)
UCHAR None None.WdfUsbTargetDeviceGetNumInterfaces(_In_ WDFUSBDEVICE UsbDevice)
SCSI_ADAPTER_CONTROL_STATUS None None.HwScsiAdapterControl(_In_ PVOID HwDeviceExtension,_In_ SCSI_ADAPTER_CONTROL_TYPE ControlType,_In_ PVOID Parameters)
NTSTATUS None None.USBD_UrbAllocate(_In_ USBD_HANDLE USBDHandle,_Out_ PURB *Urb)
void None wudfx.Complete([in] HRESULT CompletionStatus)
HRESULT None wudfx.ForwardToIoQueue([in] IWDFIoQueue *pDestination)
WDFDRIVER None None.WdfWdmDriverGetWdfDriverHandle(_In_ PDRIVER_OBJECT DriverObject)
BOOL None setupapi.SetupRemoveFromSourceList(_In_ DWORD Flags,_In_ PCTSTR Source)
BOOL None setupapi.SetupRemoveFromSourceListW(_In_ DWORD Flags,_In_ PCTSTR Source)
BOOL None setupapi.SetupRemoveFromSourceListA(_In_ DWORD Flags,_In_ PCTSTR Source)
VOID None None.WDF_USB_DEVICE_SELECT_CONFIG_PARAMS_INIT_INTERFACES_DESCRIPTORS(_Out_ PWDF_USB_DEVICE_SELECT_CONFIG_PARAMS Params,_In_ PUSB_CONFIGURATION_DESCRIPTOR ConfigDescriptor,_In_ PUSB_INTERFACE_DESCRIPTOR *InterfaceDescriptors,_In_ ULONG NumInterfaceDescriptors)
WDFOBJECT None None.WdfDpcGetParentObject(_In_ WDFDPC Dpc)
void None setupapi.SetupCloseInfFile(_In_ HINF InfHandle)
BOOL None setupapi.SetupGetTargetPath(_In_ HINF InfHandle,_In_ PINFCONTEXT InfContext,_In_ PCTSTR Section,_Inout_ PTSTR ReturnBuffer,_In_ DWORD ReturnBufferSize,_Inout_ PDWORD RequiredSize)
BOOL None setupapi.SetupGetTargetPathW(_In_ HINF InfHandle,_In_ PINFCONTEXT InfContext,_In_ PCTSTR Section,_Inout_ PTSTR ReturnBuffer,_In_ DWORD ReturnBufferSize,_Inout_ PDWORD RequiredSize)
BOOL None setupapi.SetupGetTargetPathA(_In_ HINF InfHandle,_In_ PINFCONTEXT InfContext,_In_ PCTSTR Section,_Inout_ PTSTR ReturnBuffer,_In_ DWORD ReturnBufferSize,_Inout_ PDWORD RequiredSize)
DWORD None setupapi.SetupGetFileCompressionInfo(_In_ PCTSTR SourceFileName,_Inout_ PTSTR *ActualSourceFileName,_Inout_ PDWORD SourceFileSize,_Inout_ PDWORD TargetFileSize,_Inout_ PUINT CompressionType)
DWORD None setupapi.SetupGetFileCompressionInfoW(_In_ PCTSTR SourceFileName,_Inout_ PTSTR *ActualSourceFileName,_Inout_ PDWORD SourceFileSize,_Inout_ PDWORD TargetFileSize,_Inout_ PUINT CompressionType)
DWORD None setupapi.SetupGetFileCompressionInfoA(_In_ PCTSTR SourceFileName,_Inout_ PTSTR *ActualSourceFileName,_Inout_ PDWORD SourceFileSize,_Inout_ PDWORD TargetFileSize,_Inout_ PUINT CompressionType)
UINT None msi.MsiGetFeatureUsage(_In_ LPCTSTR szProduct,_In_ LPCTSTR szFeature,_Out_ DWORD *pdwUseCount,_Out_ WORD *pwDateUsed)
UINT None msi.MsiGetFeatureUsageW(_In_ LPCTSTR szProduct,_In_ LPCTSTR szFeature,_Out_ DWORD *pdwUseCount,_Out_ WORD *pwDateUsed)
UINT None msi.MsiGetFeatureUsageA(_In_ LPCTSTR szProduct,_In_ LPCTSTR szFeature,_Out_ DWORD *pdwUseCount,_Out_ WORD *pwDateUsed)
UINT None msi.MsiEnableLog(_In_ DWORD dwLogMode,_In_ LPCTSTR szLogFile,_In_ DWORD dwLogAttributes)
UINT None msi.MsiEnableLogW(_In_ DWORD dwLogMode,_In_ LPCTSTR szLogFile,_In_ DWORD dwLogAttributes)
UINT None msi.MsiEnableLogA(_In_ DWORD dwLogMode,_In_ LPCTSTR szLogFile,_In_ DWORD dwLogAttributes)
VOID None None.WdfInterruptDisable(_In_ WDFINTERRUPT Interrupt)
BOOL None setupapi.SetupFreeSourceList(_Inout_ PCTSTR **List,_In_ UINT Count)
BOOL None setupapi.SetupFreeSourceListW(_Inout_ PCTSTR **List,_In_ UINT Count)
BOOL None setupapi.SetupFreeSourceListA(_Inout_ PCTSTR **List,_In_ UINT Count)
VOID None None.UCMTCPCI_PORT_CONTROLLER_CONFIG_INIT(_Out_ PUCMTCPCI_PORT_CONTROLLER_CONFIG Config,_In_ PUCMTCPCI_PORT_CONTROLLER_IDENTIFICATION Identification,_In_ PUCMTCPCI_PORT_CONTROLLER_CAPABILITIES Capabilities)
NTSTATUS None None.FltGetFileNameInformationUnsafe(_In_ PFILE_OBJECT FileObject,_In_opt_ PFLT_INSTANCE Instance,_In_ FLT_FILE_NAME_OPTIONS NameOptions,_Out_ PFLT_FILE_NAME_INFORMATION *FileNameInformation)
INSTALLSTATE None msi.MsiQueryFeatureState(_In_ LPCTSTR szProduct,_In_ LPCTSTR szFeature)
INSTALLSTATE None msi.MsiQueryFeatureStateW(_In_ LPCTSTR szProduct,_In_ LPCTSTR szFeature)
INSTALLSTATE None msi.MsiQueryFeatureStateA(_In_ LPCTSTR szProduct,_In_ LPCTSTR szFeature)
VOID None None.WDF_USB_DEVICE_SELECT_CONFIG_PARAMS_INIT_MULTIPLE_INTERFACES(_Inout_ PWDF_USB_DEVICE_SELECT_CONFIG_PARAMS Params,_In_opt_ UCHAR NumberInterfaces,_In_opt_ PWDF_USB_INTERFACE_SETTING_PAIR SettingPairs)
BOOL None setupapi.SetupGetBinaryField(_In_ PINFCONTEXT Context,_In_ DWORD FieldIndex,_Inout_ BYTE *ReturnBuffer,_In_ DWORD ReturnBufferSize,_Inout_ LPDWORD RequiredSize)
UINT None msi.MsiSetExternalUIRecord(_In_ PINSTALLUI_HANDLER_RECORD puiHandler,_In_ DWORD dwMessageFilter,_In_ LPVOID pvContext,_Out_opt_ PINSTALLUI_HANDLER_RECORD ppuiPrevHandler)
UINT None msi.MsiSetExternalUIRecord(_In_ PINSTALLUI_HANDLER_RECORD puiHandler,_In_ DWORD dwMessageFilter,_In_ LPVOID pvContext,_Out_opt_ PINSTALLUI_HANDLER_RECORD ppuiPrevHandler)
UINT None msi.MsiAdvertiseScript(_In_ LPCTSTR szScriptFile,_In_ DWORD dwFlags,_In_ PHKEY phRegData,_In_ BOOL fRemoveItems)
UINT None msi.MsiAdvertiseScriptW(_In_ LPCTSTR szScriptFile,_In_ DWORD dwFlags,_In_ PHKEY phRegData,_In_ BOOL fRemoveItems)
UINT None msi.MsiAdvertiseScriptA(_In_ LPCTSTR szScriptFile,_In_ DWORD dwFlags,_In_ PHKEY phRegData,_In_ BOOL fRemoveItems)
void None None.UsbBuildInterruptOrBulkTransferRequest(_Inout_ PURB Urb,_In_ USHORT Length,_In_ USBD_PIPE_HANDLE PipeHandle,_In_opt_ PVOID TransferBuffer,_In_opt_ PMDL TransferBufferMDL,_In_ ULONG TransferBufferLength,_In_ ULONG TransferFlags,_In_ PURB Link)
VOID None None.WdfDmaTransactionSetMaximumLength(_In_ WDFDMATRANSACTION DmaTransaction,_In_ size_t MaximumLength)
BOOLEAN None None.WdfDpcCancel(_In_ WDFDPC Dpc,_In_ BOOLEAN Wait)
void None setupapi.SetupTermDefaultQueueCallback(_In_ PVOID Context)
void None wudfx.SetIoTypePreference([in] WDF_DEVICE_IO_BUFFER_RETRIEVAL RetrievalMode,[in] WDF_DEVICE_IO_TYPE ReadWritePreference,[in] WDF_DEVICE_IO_TYPE IoControlPreference)
UINT None msi.MsiReinstallProduct(_In_ LPCTSTR szProduct,_In_ DWORD dwReinstallMode)
UINT None msi.MsiReinstallProductW(_In_ LPCTSTR szProduct,_In_ DWORD dwReinstallMode)
UINT None msi.MsiReinstallProductA(_In_ LPCTSTR szProduct,_In_ DWORD dwReinstallMode)
void None wudfx.CompleteWithInformation([in] HRESULT CompletionStatus,[in] SIZE_T Information)
WDFDRIVER None None.WdfGetDriver(void None None)
UINT None setupapi.SetupRenameError(_In_ HWND hwndParent,_In_ PCTSTR DialogTitle,_In_ PCTSTR SourceFile,_In_ PCTSTR TargetFile,_In_ UINT Win32ErrorCode,_In_ DWORD Style)
UINT None setupapi.SetupRenameErrorW(_In_ HWND hwndParent,_In_ PCTSTR DialogTitle,_In_ PCTSTR SourceFile,_In_ PCTSTR TargetFile,_In_ UINT Win32ErrorCode,_In_ DWORD Style)
UINT None setupapi.SetupRenameErrorA(_In_ HWND hwndParent,_In_ PCTSTR DialogTitle,_In_ PCTSTR SourceFile,_In_ PCTSTR TargetFile,_In_ UINT Win32ErrorCode,_In_ DWORD Style)
void None None.UsbBuildOpenStaticStreamsRequest(_Inout_ PURB Urb,_In_ USBD_PIPE_HANDLE PipeHandle,_In_ USHORT NumberOfStreams,_In_ USBD_STREAM_INFORMATION StreamInfoArray)
typedef None None.VOID(EVT_WDF_REQUEST_COMPLETION_ROUTINE None None)
void None setupapi.SetupCloseFileQueue(_In_ HSPFILEQ QueueHandle)
VOID None None.WdfDeviceInitSetFileObjectConfig(_In_ PWDFDEVICE_INIT DeviceInit,_In_ PWDF_FILEOBJECT_CONFIG FileObjectConfig,_In_opt_ PWDF_OBJECT_ATTRIBUTES FileObjectAttributes)
BOOLEAN None None.WDF_IO_QUEUE_PURGED(_In_ WDF_IO_QUEUE_STATE State)
NTSTATUS None None.USBD_CreateHandle(_In_ PDEVICE_OBJECT DeviceObject,_In_ PDEVICE_OBJECT TargetDeviceObject,_In_ ULONG USBDClientContractVersion,_In_ ULONG PoolTag,_Out_ USBD_HANDLE *USBDHandle)
NTSTATUS None None.UdecxUsbDeviceCreate(_Inout_ PUDECXUSBDEVICE_INIT *UdecxUsbDeviceInit,_In_opt_ PWDF_OBJECT_ATTRIBUTES Attributes,_Out_ UDECXUSBDEVICE *UdecxUsbDevice)
WDFDRIVER None None.WdfGetDriver(void None None)
BOOL None setupapi.SetupFindNextLine(_In_ PINFCONTEXT ContextIn,_Out_ PINFCONTEXT ContextOut)
INT None setupapi.SetupPromptReboot(_In_ HSPFILEQ FileQueue,_In_ HWND Owner,_In_ BOOL ScanOnly)
UINT None None.PSP_FILE_CALLBACK(PVOID Context None,UINT Notification None,UINT_PTR Param1 None,UINT_PTR Param2 None)
UINT None None.PSP_FILE_CALLBACKW(PVOID Context None,UINT Notification None,UINT_PTR Param1 None,UINT_PTR Param2 None)
UINT None None.PSP_FILE_CALLBACKA(PVOID Context None,UINT Notification None,UINT_PTR Param1 None,UINT_PTR Param2 None)
void None None.UsbBuildGetDescriptorRequest([in None None,out] PURB Urb,[in] USHORT Length,[in] UCHAR DescriptorType,[in] UCHAR Index,[in] USHORT LanguageId,[in None None,optional] PVOID TransferBuffer,[in None None,optional] PMDL TransferBufferMDL,[in] ULONG TransferBufferLength,[in] PURB Link)
VOID None None.WdfInterruptSetExtendedPolicy(_In_ WDFINTERRUPT Interrupt,_In_ PWDF_INTERRUPT_EXTENDED_POLICY PolicyAndGroup)
UINT None msi.MsiInstallMissingComponent(_In_ LPCTSTR szProduct,_In_ LPCTSTR szComponent,_In_ INSTALLSTATE eInstallState)
UINT None msi.MsiInstallMissingComponentW(_In_ LPCTSTR szProduct,_In_ LPCTSTR szComponent,_In_ INSTALLSTATE eInstallState)
UINT None msi.MsiInstallMissingComponentA(_In_ LPCTSTR szProduct,_In_ LPCTSTR szComponent,_In_ INSTALLSTATE eInstallState)
UINT None msi.MsiGetProductInfoFromScript(_In_ LPCTSTR szScriptFile,_Out_ LPTSTR lpProductBuf39,_Out_ LANGID *plgidLanguage,_Out_ DWORD *pdwVersion,_Out_ LPTSTR lpNameBuf,_Inout_ DWORD *pcchNameBuf,_Out_ LPTSTR lpPackageBuf,_Inout_ DWORD *pcchPackageBuf)
UINT None msi.MsiGetProductInfoFromScriptW(_In_ LPCTSTR szScriptFile,_Out_ LPTSTR lpProductBuf39,_Out_ LANGID *plgidLanguage,_Out_ DWORD *pdwVersion,_Out_ LPTSTR lpNameBuf,_Inout_ DWORD *pcchNameBuf,_Out_ LPTSTR lpPackageBuf,_Inout_ DWORD *pcchPackageBuf)
UINT None msi.MsiGetProductInfoFromScriptA(_In_ LPCTSTR szScriptFile,_Out_ LPTSTR lpProductBuf39,_Out_ LANGID *plgidLanguage,_Out_ DWORD *pdwVersion,_Out_ LPTSTR lpNameBuf,_Inout_ DWORD *pcchNameBuf,_Out_ LPTSTR lpPackageBuf,_Inout_ DWORD *pcchPackageBuf)
VOID None None.MmBuildMdlForNonPagedPool(_Inout_ PMDLX MemoryDescriptorList)
ULONG None None.GET_ISO_URB_SIZE([in] ULONG NumberOfPackets)
NTSTATUS None None.WdfDeviceWdmAssignPowerFrameworkSettings(_In_ WDFDEVICE Device,_In_ PWDF_POWER_FRAMEWORK_SETTINGS PowerFrameworkSettings)
typedef None None.BOOLEAN(*PHW_INITIALIZE None None)
VOID None None.WDF_MEMORY_DESCRIPTOR_INIT_MDL(_Out_ PWDF_MEMORY_DESCRIPTOR Descriptor,_In_ PMDL Mdl,_In_ ULONG BufferLength)
typedef None None.BOOLEAN(*PHW_ADAPTER_STATE None None)
typedef BOOLEAN None.HW_RESET_BUS(_In_ PVOID DeviceExtension,_In ULONG PathId)
NTSTATUS None None.WdfUsbTargetPipeFormatRequestForAbort(_In_ WDFUSBPIPE Pipe,_In_ WDFREQUEST Request)
HRESULT None None.onComplete([in] HRESULT hrResult)
UINT WINAPI msi.MsiOpenPackageEx(_In_ LPCTSTR szPackagePath,_In_ DWORD dwOptions,_Out_ MSIHANDLE *hProduct)
UINT WINAPI msi.MsiOpenPackageExW(_In_ LPCTSTR szPackagePath,_In_ DWORD dwOptions,_Out_ MSIHANDLE *hProduct)
UINT WINAPI msi.MsiOpenPackageExA(_In_ LPCTSTR szPackagePath,_In_ DWORD dwOptions,_Out_ MSIHANDLE *hProduct)
PUSB_COMMON_DESCRIPTOR None None.USBD_ParseDescriptors(_In_ PVOID DescriptorBuffer,_In_ ULONG TotalLength,_In_ PVOID StartPosition,_In_ LONG DescriptorType)
BOOL None setupapi.SetupInstallFromInfSection(HWND Owner None,HINF InfHandle None,PCTSTR SectionName None,UINT Flags None,HKEY RelativeKeyRoot None,PCTSTR SourceRootPath None,UINT CopyFlags None,PSP_FILE_CALLBACK MsgHandler None,PVOID Context None,HDEVINFO DeviceInfoSet None,PSP_DEVINFO_DATA DeviceInfoData None)
BOOL None setupapi.SetupInstallFromInfSectionW(HWND Owner None,HINF InfHandle None,PCTSTR SectionName None,UINT Flags None,HKEY RelativeKeyRoot None,PCTSTR SourceRootPath None,UINT CopyFlags None,PSP_FILE_CALLBACK MsgHandler None,PVOID Context None,HDEVINFO DeviceInfoSet None,PSP_DEVINFO_DATA DeviceInfoData None)
BOOL None setupapi.SetupInstallFromInfSectionA(HWND Owner None,HINF InfHandle None,PCTSTR SectionName None,UINT Flags None,HKEY RelativeKeyRoot None,PCTSTR SourceRootPath None,UINT CopyFlags None,PSP_FILE_CALLBACK MsgHandler None,PVOID Context None,HDEVINFO DeviceInfoSet None,PSP_DEVINFO_DATA DeviceInfoData None)
PVOID None None.StorPortGetUncachedExtension(IN PVOID HwDeviceExtension,IN PPORT_CONFIGURATION_INFORMATION ConfigInfo,ULONG NumberOfBytes None)
HDSKSPC None setupapi.SetupCreateDiskSpaceList(_In_ PVOID Reserved1,_In_ DWORD Reserved2,_In_ UINT Flags)
HDSKSPC None setupapi.SetupCreateDiskSpaceListW(_In_ PVOID Reserved1,_In_ DWORD Reserved2,_In_ UINT Flags)
HDSKSPC None setupapi.SetupCreateDiskSpaceListA(_In_ PVOID Reserved1,_In_ DWORD Reserved2,_In_ UINT Flags)
HINF None setupapi.SetupOpenInfFile(_In_ PCTSTR FileName,_In_ PCTSTR InfClass,_In_ DWORD InfStyle,_In_ PUINT ErrorLine)
HINF None setupapi.SetupOpenInfFileW(_In_ PCTSTR FileName,_In_ PCTSTR InfClass,_In_ DWORD InfStyle,_In_ PUINT ErrorLine)
HINF None setupapi.SetupOpenInfFileA(_In_ PCTSTR FileName,_In_ PCTSTR InfClass,_In_ DWORD InfStyle,_In_ PUINT ErrorLine)
void None None.WDF_POWER_FRAMEWORK_SETTINGS_INIT(_Out_ PWDF_POWER_FRAMEWORK_SETTINGS PowerFrameworkSettings)
void None wudfx.GetDeviceIoControlParameters([out] ULONG *pControlCode,[out] SIZE_T *pInBufferSize,[out] SIZE_T *pOutBufferSize)
INSTALLSTATE None msi.MsiUseFeatureEx(_In_ LPCTSTR szProduct,_In_ LPCTSTR szFeature,_In_ DWORD dwInstallMode,_In_ DWORD dwReserved)
INSTALLSTATE None msi.MsiUseFeatureExW(_In_ LPCTSTR szProduct,_In_ LPCTSTR szFeature,_In_ DWORD dwInstallMode,_In_ DWORD dwReserved)
INSTALLSTATE None msi.MsiUseFeatureExA(_In_ LPCTSTR szProduct,_In_ LPCTSTR szFeature,_In_ DWORD dwInstallMode,_In_ DWORD dwReserved)
UINT None msi.MsiExtractPatchXMLData(_In_ LPCTSTR szPatchPath,_In_ DWORD dwReserved,_Out_opt_ LPTSTR szXMLData,_Inout_opt_ DWORD *pcchXMLData)
UINT None msi.MsiExtractPatchXMLDataW(_In_ LPCTSTR szPatchPath,_In_ DWORD dwReserved,_Out_opt_ LPTSTR szXMLData,_Inout_opt_ DWORD *pcchXMLData)
UINT None msi.MsiExtractPatchXMLDataA(_In_ LPCTSTR szPatchPath,_In_ DWORD dwReserved,_Out_opt_ LPTSTR szXMLData,_Inout_opt_ DWORD *pcchXMLData)
typedef None None.BOOLEAN(*PHW_STARTIO None None)
void None wudfx.SetInformation([in] ULONG_PTR Information)
UINT None msi.MsiInstallMissingFile(_In_ LPCTSTR szProduct,_In_ LPCTSTR szFile)
UINT None msi.MsiInstallMissingFileW(_In_ LPCTSTR szProduct,_In_ LPCTSTR szFile)
UINT None msi.MsiInstallMissingFileA(_In_ LPCTSTR szProduct,_In_ LPCTSTR szFile)
UINT None msi.MsiProvideQualifiedComponentEx(_In_ LPCTSTR szComponent,_In_ LPCTSTR szQualifier,_In_ DWORD dwInstallMode,_In_ LPTSTR szProduct,_In_ DWORD dwUnused1,_In_ DWORD dwUnused2,_Out_ LPTSTR lpPathBuf,_Inout_ DWORD *pcchPathBuf)
UINT None msi.MsiProvideQualifiedComponentExW(_In_ LPCTSTR szComponent,_In_ LPCTSTR szQualifier,_In_ DWORD dwInstallMode,_In_ LPTSTR szProduct,_In_ DWORD dwUnused1,_In_ DWORD dwUnused2,_Out_ LPTSTR lpPathBuf,_Inout_ DWORD *pcchPathBuf)
UINT None msi.MsiProvideQualifiedComponentExA(_In_ LPCTSTR szComponent,_In_ LPCTSTR szQualifier,_In_ DWORD dwInstallMode,_In_ LPTSTR szProduct,_In_ DWORD dwUnused1,_In_ DWORD dwUnused2,_Out_ LPTSTR lpPathBuf,_Inout_ DWORD *pcchPathBuf)
INSTALLSTATE None msi.MsiGetComponentPathEx(_In_ LPCTSTR szProductCode,_In_ LPCTSTR szComponentCode,_In_opt_ LPCTSTR szUserSid,_In_opt_ MSIINSTALLCONTEXT dwContext,_Out_opt_ LPTSTR szPathBuf,_Inout_opt_ LPDWORD pcchBuf)
INSTALLSTATE None msi.MsiGetComponentPathExW(_In_ LPCTSTR szProductCode,_In_ LPCTSTR szComponentCode,_In_opt_ LPCTSTR szUserSid,_In_opt_ MSIINSTALLCONTEXT dwContext,_Out_opt_ LPTSTR szPathBuf,_Inout_opt_ LPDWORD pcchBuf)
INSTALLSTATE None msi.MsiGetComponentPathExA(_In_ LPCTSTR szProductCode,_In_ LPCTSTR szComponentCode,_In_opt_ LPCTSTR szUserSid,_In_opt_ MSIINSTALLCONTEXT dwContext,_Out_opt_ LPTSTR szPathBuf,_Inout_opt_ LPDWORD pcchBuf)
UINT None msi.MsiNotifySidChange(_In_ LPCTSTR szOldSid,_In_ LPCTSTR szNewSid)
UINT None msi.MsiNotifySidChangeW(_In_ LPCTSTR szOldSid,_In_ LPCTSTR szNewSid)
UINT None msi.MsiNotifySidChangeA(_In_ LPCTSTR szOldSid,_In_ LPCTSTR szNewSid)
HRESULT None wudfx.ForwardToIoQueue([in] IWDFIoQueue *pDestination)
UINT None msi.MsiGetProductProperty(_In_ MSIHANDLE hProduct,_In_ LPCTSTR szProperty,_Out_ LPTSTR lpValueBuf,_Inout_ DWORD *pcchValueBuf)
UINT None msi.MsiGetProductPropertyW(_In_ MSIHANDLE hProduct,_In_ LPCTSTR szProperty,_Out_ LPTSTR lpValueBuf,_Inout_ DWORD *pcchValueBuf)
UINT None msi.MsiGetProductPropertyA(_In_ MSIHANDLE hProduct,_In_ LPCTSTR szProperty,_Out_ LPTSTR lpValueBuf,_Inout_ DWORD *pcchValueBuf)
void None wudfx.Complete([in] HRESULT CompletionStatus)
VOID None None.USBD_CloseHandle(_In_ USBD_HANDLE USBDHandle)
ULONG None None.ScsiPortGetBusData(_In_ PVOID DeviceExtension,_In_ ULONG BusDataType,_In_ ULONG SystemIoBusNumber,_In_ ULONG SlotNumber,_In_ PVOID Buffer,_In_ ULONG Length)
VOID None None.WDF_USB_CONTROL_SETUP_PACKET_INIT_CLASS(_Out_ PWDF_USB_CONTROL_SETUP_PACKET Packet,_In_ WDF_USB_BMREQUEST_DIRECTION Direction,_In_ WDF_USB_BMREQUEST_RECIPIENT Recipient,_In_ BYTE Request,_In_ USHORT Value,_In_ USHORT Index)
VOID None None.WDF_USB_CONTROL_SETUP_PACKET_INIT_FEATURE(_Out_ PWDF_USB_CONTROL_SETUP_PACKET Packet,_In_ WDF_USB_BMREQUEST_RECIPIENT BmRequestRecipient,_In_ USHORT FeatureSelector,_In_ USHORT Index,_In_ BOOLEAN SetFeature)
VOID None None.WDF_USB_CONTROL_SETUP_PACKET_INIT_VENDOR(_Out_ PWDF_USB_CONTROL_SETUP_PACKET Packet,_In_ WDF_USB_BMREQUEST_DIRECTION Direction,_In_ WDF_USB_BMREQUEST_RECIPIENT Recipient,_In_ BYTE Request,_In_ USHORT Value,_In_ USHORT Index)
NTSTATUS None None.FltGetTunneledName(_In_ PFLT_CALLBACK_DATA CallbackData,_In_ PFLT_FILE_NAME_INFORMATION FileNameInformation,_Out_ PFLT_FILE_NAME_INFORMATION *RetTunneledFileNameInformation)
UINT None setupapi.SetupPromptForDisk(_In_ HWND hwndParent,_In_ PCTSTR DialogTitle,_In_ PCTSTR DiskName,_In_ INPCTSTR PathToSource,_In_ PCTSTR FileSought,_In_ PCTSTR TagFile,_In_ DWORD DiskPromptStyle,_Inout_ PTSTR PathBuffer,_In_ DWORD PathBufferSize,_Inout_ PDWORD PathRequiredSize)
UINT None setupapi.SetupPromptForDiskW(_In_ HWND hwndParent,_In_ PCTSTR DialogTitle,_In_ PCTSTR DiskName,_In_ INPCTSTR PathToSource,_In_ PCTSTR FileSought,_In_ PCTSTR TagFile,_In_ DWORD DiskPromptStyle,_Inout_ PTSTR PathBuffer,_In_ DWORD PathBufferSize,_Inout_ PDWORD PathRequiredSize)
UINT None setupapi.SetupPromptForDiskA(_In_ HWND hwndParent,_In_ PCTSTR DialogTitle,_In_ PCTSTR DiskName,_In_ INPCTSTR PathToSource,_In_ PCTSTR FileSought,_In_ PCTSTR TagFile,_In_ DWORD DiskPromptStyle,_Inout_ PTSTR PathBuffer,_In_ DWORD PathBufferSize,_Inout_ PDWORD PathRequiredSize)
VOID None None.WDF_USB_CONTROL_SETUP_PACKET_INIT(_Out_ PWDF_USB_CONTROL_SETUP_PACKET Packet,_In_ WDF_USB_BMREQUEST_DIRECTION Direction,_In_ WDF_USB_BMREQUEST_RECIPIENT Recipient,_In_ BYTE Request,_In_ USHORT Value,_In_ USHORT Index)
VOID None None.WdfIoResourceRequirementsListRemoveByIoResList(_In_ WDFIORESREQLIST RequirementsList,_In_ WDFIORESLIST IoResList)
BOOL None setupapi.SetupQueueDeleteSection(_In_ HSPFILEQ QueueHandle,_In_ HINF InfHandle,_In_ HINF ListInfHandle,_In_ PCTSTR Section)
BOOL None setupapi.SetupQueueDeleteSectionW(_In_ HSPFILEQ QueueHandle,_In_ HINF InfHandle,_In_ HINF ListInfHandle,_In_ PCTSTR Section)
BOOL None setupapi.SetupQueueDeleteSectionA(_In_ HSPFILEQ QueueHandle,_In_ HINF InfHandle,_In_ HINF ListInfHandle,_In_ PCTSTR Section)
INSTALLSTATE None msi.MsiQueryProductState(_In_ LPCTSTR szProduct)
INSTALLSTATE None msi.MsiQueryProductStateW(_In_ LPCTSTR szProduct)
INSTALLSTATE None msi.MsiQueryProductStateA(_In_ LPCTSTR szProduct)
SCSI_ADAPTER_CONTROL_STATUS None None.HwScsiAdapterControl(_In_ PVOID HwDeviceExtension,_In_ SCSI_ADAPTER_CONTROL_TYPE ControlType,_In_ PVOID Parameters)
BOOLEAN None None.WDF_IO_QUEUE_STOPPED(_In_ WDF_IO_QUEUE_STATE State)
void None wudfx.SetInformation([in] ULONG_PTR Information)
NTSTATUS None None.USBD_IsochUrbAllocate(_In_ USBD_HANDLE USBDHandle,_In_ ULONG NumberOfIsochPacket,_Out_ PURB *Urb)
VOID None None.RootHub_EvtRootHubGet20PortInfo(UCXROOTHUB UcxRootHub None,WDFREQUEST Request None)
UINT None msi.MsiGetPatchInfo(_In_ LPCTSTR szPatch,_In_ LPCTSTR szAttribute,_Out_ LPTSTR lpValueBuf,_Inout_ DWORD *pcchValueBuf)
UINT None msi.MsiGetPatchInfoW(_In_ LPCTSTR szPatch,_In_ LPCTSTR szAttribute,_Out_ LPTSTR lpValueBuf,_Inout_ DWORD *pcchValueBuf)
UINT None msi.MsiGetPatchInfoA(_In_ LPCTSTR szPatch,_In_ LPCTSTR szAttribute,_Out_ LPTSTR lpValueBuf,_Inout_ DWORD *pcchValueBuf)
UINT None msi.MsiEnumClients(_In_ LPCTSTR szComponent,_In_ DWORD iProductIndex,_Out_ LPTSTR lpProductBuf)
UINT None msi.MsiEnumClientsW(_In_ LPCTSTR szComponent,_In_ DWORD iProductIndex,_Out_ LPTSTR lpProductBuf)
UINT None msi.MsiEnumClientsA(_In_ LPCTSTR szComponent,_In_ DWORD iProductIndex,_Out_ LPTSTR lpProductBuf)
UINT None msi.MsiEnumRelatedProducts(_In_ LPCTSTR lpUpgradeCode,_In_ DWORD dwReserved,_In_ DWORD iProductIndex,_Out_ LPTSTR lpProductBuf)
UINT None msi.MsiEnumRelatedProductsW(_In_ LPCTSTR lpUpgradeCode,_In_ DWORD dwReserved,_In_ DWORD iProductIndex,_Out_ LPTSTR lpProductBuf)
UINT None msi.MsiEnumRelatedProductsA(_In_ LPCTSTR lpUpgradeCode,_In_ DWORD dwReserved,_In_ DWORD iProductIndex,_Out_ LPTSTR lpProductBuf)
UINT None msi.MsiGetPatchInfo(_In_ LPCTSTR szPatch,_In_ LPCTSTR szAttribute,_Out_ LPTSTR lpValueBuf,_Inout_ DWORD *pcchValueBuf)
UINT None msi.MsiGetPatchInfoW(_In_ LPCTSTR szPatch,_In_ LPCTSTR szAttribute,_Out_ LPTSTR lpValueBuf,_Inout_ DWORD *pcchValueBuf)
UINT None msi.MsiGetPatchInfoA(_In_ LPCTSTR szPatch,_In_ LPCTSTR szAttribute,_Out_ LPTSTR lpValueBuf,_Inout_ DWORD *pcchValueBuf)
UINT None msi.MsiEnumRelatedProducts(_In_ LPCTSTR lpUpgradeCode,_In_ DWORD dwReserved,_In_ DWORD iProductIndex,_Out_ LPTSTR lpProductBuf)
UINT None msi.MsiEnumRelatedProductsW(_In_ LPCTSTR lpUpgradeCode,_In_ DWORD dwReserved,_In_ DWORD iProductIndex,_Out_ LPTSTR lpProductBuf)
UINT None msi.MsiEnumRelatedProductsA(_In_ LPCTSTR lpUpgradeCode,_In_ DWORD dwReserved,_In_ DWORD iProductIndex,_Out_ LPTSTR lpProductBuf)
VOID None None.RootHub_EvtRootHubGetInfo(UCXROOTHUB UcxRootHub None,WDFREQUEST Request None)
VOID None None.UsbDevice_EvtUcxUsbDeviceAddress(UCXCONTROLLER UcxController None,WDFREQUEST Request None)
UINT None msi.MsiProvideAssembly(_In_ LPCTSTR szAssemblyName,_In_ LPCTSTR szAppContext,_In_ DWORD dwInstallMode,_In_ DWORD dwAssemblyInfo,_Out_ LPTSTR lpPathBuf,_Inout_ DWORD *pcchPathBuf)
UINT None msi.MsiProvideAssemblyW(_In_ LPCTSTR szAssemblyName,_In_ LPCTSTR szAppContext,_In_ DWORD dwInstallMode,_In_ DWORD dwAssemblyInfo,_Out_ LPTSTR lpPathBuf,_Inout_ DWORD *pcchPathBuf)
UINT None msi.MsiProvideAssemblyA(_In_ LPCTSTR szAssemblyName,_In_ LPCTSTR szAppContext,_In_ DWORD dwInstallMode,_In_ DWORD dwAssemblyInfo,_Out_ LPTSTR lpPathBuf,_Inout_ DWORD *pcchPathBuf)
UINT None msi.MsiCloseAllHandles(void None None)
UINT None msi.MsiGetFileHash(_In_ LPCTSTR szFilePath,_In_ DWORD dwOptions,_Out_ PMSIFILEHASHINFO pHash)
UINT None msi.MsiGetFileHashW(_In_ LPCTSTR szFilePath,_In_ DWORD dwOptions,_Out_ PMSIFILEHASHINFO pHash)
UINT None msi.MsiGetFileHashA(_In_ LPCTSTR szFilePath,_In_ DWORD dwOptions,_Out_ PMSIFILEHASHINFO pHash)
UINT None msi.MsiEnumClients(_In_ LPCTSTR szComponent,_In_ DWORD iProductIndex,_Out_ LPTSTR lpProductBuf)
UINT None msi.MsiEnumClientsW(_In_ LPCTSTR szComponent,_In_ DWORD iProductIndex,_Out_ LPTSTR lpProductBuf)
UINT None msi.MsiEnumClientsA(_In_ LPCTSTR szComponent,_In_ DWORD iProductIndex,_Out_ LPTSTR lpProductBuf)
HRESULT None msi.MsiGetFileSignatureInformation(_In_ LPCTSTR szSignedObjectPath,_In_ DWORD dwFlags,_Out_ PCCERT_CONTEXT *ppcCertContext,_Out_ BYTE *pbHashData,_Inout_ DWORD *pcbHashData)
HRESULT None msi.MsiGetFileSignatureInformationW(_In_ LPCTSTR szSignedObjectPath,_In_ DWORD dwFlags,_Out_ PCCERT_CONTEXT *ppcCertContext,_Out_ BYTE *pbHashData,_Inout_ DWORD *pcbHashData)
HRESULT None msi.MsiGetFileSignatureInformationA(_In_ LPCTSTR szSignedObjectPath,_In_ DWORD dwFlags,_Out_ PCCERT_CONTEXT *ppcCertContext,_Out_ BYTE *pbHashData,_Inout_ DWORD *pcbHashData)
UINT None msi.MsiAdvertiseProductEx(_In_ LPCTSTR szPackagePath,_In_ LPCTSTR szScriptfilePath,_In_ LPCTSTR szTransforms,_In_ LANGID lgidLanguage,_In_ DWORD dwPlatform,_In_ DWORD dwOptions)
UINT None msi.MsiAdvertiseProductExW(_In_ LPCTSTR szPackagePath,_In_ LPCTSTR szScriptfilePath,_In_ LPCTSTR szTransforms,_In_ LANGID lgidLanguage,_In_ DWORD dwPlatform,_In_ DWORD dwOptions)
UINT None msi.MsiAdvertiseProductExA(_In_ LPCTSTR szPackagePath,_In_ LPCTSTR szScriptfilePath,_In_ LPCTSTR szTransforms,_In_ LANGID lgidLanguage,_In_ DWORD dwPlatform,_In_ DWORD dwOptions)
UINT None msi.MsiSourceListClearAllEx(_In_ LPCTSTR szProductCodeOrPatchCode,_In_opt_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD dwOptions)
UINT None msi.MsiSourceListClearAllExW(_In_ LPCTSTR szProductCodeOrPatchCode,_In_opt_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD dwOptions)
UINT None msi.MsiSourceListClearAllExA(_In_ LPCTSTR szProductCodeOrPatchCode,_In_opt_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD dwOptions)
UINT None msi.MsiCloseHandle(_In_ MSIHANDLE hAny)
UINT None msi.MsiEnableLog(_In_ DWORD dwLogMode,_In_ LPCTSTR szLogFile,_In_ DWORD dwLogAttributes)
UINT None msi.MsiEnableLogW(_In_ DWORD dwLogMode,_In_ LPCTSTR szLogFile,_In_ DWORD dwLogAttributes)
UINT None msi.MsiEnableLogA(_In_ DWORD dwLogMode,_In_ LPCTSTR szLogFile,_In_ DWORD dwLogAttributes)
UINT None msi.MsiCloseHandle(_In_ MSIHANDLE hAny)
UINT WINAPI msi.MsiBeginTransaction(_In_ LPCWSTR szTransactionName,_In_ DWORD dwTransactionAttributes,_Out_ MSIHANDLE *hTransactionID,_Out_ HANDLE *phChangeOfOwnerEvent)
UINT WINAPI msi.MsiBeginTransactionW(_In_ LPCWSTR szTransactionName,_In_ DWORD dwTransactionAttributes,_Out_ MSIHANDLE *hTransactionID,_Out_ HANDLE *phChangeOfOwnerEvent)
UINT WINAPI msi.MsiBeginTransactionA(_In_ LPCWSTR szTransactionName,_In_ DWORD dwTransactionAttributes,_Out_ MSIHANDLE *hTransactionID,_Out_ HANDLE *phChangeOfOwnerEvent)
UINT WINAPI msi.MsiBeginTransaction(_In_ LPCWSTR szTransactionName,_In_ DWORD dwTransactionAttributes,_Out_ MSIHANDLE *hTransactionID,_Out_ HANDLE *phChangeOfOwnerEvent)
UINT WINAPI msi.MsiBeginTransactionW(_In_ LPCWSTR szTransactionName,_In_ DWORD dwTransactionAttributes,_Out_ MSIHANDLE *hTransactionID,_Out_ HANDLE *phChangeOfOwnerEvent)
UINT WINAPI msi.MsiBeginTransactionA(_In_ LPCWSTR szTransactionName,_In_ DWORD dwTransactionAttributes,_Out_ MSIHANDLE *hTransactionID,_Out_ HANDLE *phChangeOfOwnerEvent)
UINT None msi.MsiCollectUserInfo(_In_ LPCTSTR szProduct)
UINT None msi.MsiCollectUserInfoW(_In_ LPCTSTR szProduct)
UINT None msi.MsiCollectUserInfoA(_In_ LPCTSTR szProduct)
UINT None msi.MsiDeterminePatchSequence(_In_ LPCTSTR szProductCode,_In_opt_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD cPatchInfo,_In_ PMSIPATCHSEQUENCEINFO pPatchInfo)
UINT None msi.MsiDeterminePatchSequenceW(_In_ LPCTSTR szProductCode,_In_opt_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD cPatchInfo,_In_ PMSIPATCHSEQUENCEINFO pPatchInfo)
UINT None msi.MsiDeterminePatchSequenceA(_In_ LPCTSTR szProductCode,_In_opt_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD cPatchInfo,_In_ PMSIPATCHSEQUENCEINFO pPatchInfo)
FORCEINLINE void None.UDECX_USB_ENDPOINT_CALLBACKS_INIT(_Out_ PUDECX_USB_ENDPOINT_CALLBACKS Callbacks)
UINT None msi.MsiDeterminePatchSequence(_In_ LPCTSTR szProductCode,_In_opt_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD cPatchInfo,_In_ PMSIPATCHSEQUENCEINFO pPatchInfo)
UINT None msi.MsiDeterminePatchSequenceW(_In_ LPCTSTR szProductCode,_In_opt_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD cPatchInfo,_In_ PMSIPATCHSEQUENCEINFO pPatchInfo)
UINT None msi.MsiDeterminePatchSequenceA(_In_ LPCTSTR szProductCode,_In_opt_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD cPatchInfo,_In_ PMSIPATCHSEQUENCEINFO pPatchInfo)
UINT None msi.MsiConfigureProduct(_In_ LPCTSTR szProduct,_In_ int iInstallLevel,_In_ INSTALLSTATE eInstallState)
UINT None msi.MsiConfigureProductW(_In_ LPCTSTR szProduct,_In_ int iInstallLevel,_In_ INSTALLSTATE eInstallState)
UINT None msi.MsiConfigureProductA(_In_ LPCTSTR szProduct,_In_ int iInstallLevel,_In_ INSTALLSTATE eInstallState)
UINT None msi.MsiEnumComponents(_In_ DWORD iComponentIndex,_Out_ LPTSTR lpComponentBuf)
UINT None msi.MsiEnumComponentsW(_In_ DWORD iComponentIndex,_Out_ LPTSTR lpComponentBuf)
UINT None msi.MsiEnumComponentsA(_In_ DWORD iComponentIndex,_Out_ LPTSTR lpComponentBuf)
HRESULT None msi.MsiGetFileSignatureInformation(_In_ LPCTSTR szSignedObjectPath,_In_ DWORD dwFlags,_Out_ PCCERT_CONTEXT *ppcCertContext,_Out_ BYTE *pbHashData,_Inout_ DWORD *pcbHashData)
HRESULT None msi.MsiGetFileSignatureInformationW(_In_ LPCTSTR szSignedObjectPath,_In_ DWORD dwFlags,_Out_ PCCERT_CONTEXT *ppcCertContext,_Out_ BYTE *pbHashData,_Inout_ DWORD *pcbHashData)
HRESULT None msi.MsiGetFileSignatureInformationA(_In_ LPCTSTR szSignedObjectPath,_In_ DWORD dwFlags,_Out_ PCCERT_CONTEXT *ppcCertContext,_Out_ BYTE *pbHashData,_Inout_ DWORD *pcbHashData)
UINT None msi.MsiIsProductElevated(_In_ LPCTSTR szProductCode,_Out_ BOOL *pfElevated)
UINT None msi.MsiIsProductElevatedW(_In_ LPCTSTR szProductCode,_Out_ BOOL *pfElevated)
UINT None msi.MsiIsProductElevatedA(_In_ LPCTSTR szProductCode,_Out_ BOOL *pfElevated)
UINT None msi.MsiCloseAllHandles(void None None)
UINT None msi.MsiProvideAssembly(_In_ LPCTSTR szAssemblyName,_In_ LPCTSTR szAppContext,_In_ DWORD dwInstallMode,_In_ DWORD dwAssemblyInfo,_Out_ LPTSTR lpPathBuf,_Inout_ DWORD *pcchPathBuf)
UINT None msi.MsiProvideAssemblyW(_In_ LPCTSTR szAssemblyName,_In_ LPCTSTR szAppContext,_In_ DWORD dwInstallMode,_In_ DWORD dwAssemblyInfo,_Out_ LPTSTR lpPathBuf,_Inout_ DWORD *pcchPathBuf)
UINT None msi.MsiProvideAssemblyA(_In_ LPCTSTR szAssemblyName,_In_ LPCTSTR szAppContext,_In_ DWORD dwInstallMode,_In_ DWORD dwAssemblyInfo,_Out_ LPTSTR lpPathBuf,_Inout_ DWORD *pcchPathBuf)
UINT None msi.MsiSourceListClearAllEx(_In_ LPCTSTR szProductCodeOrPatchCode,_In_opt_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD dwOptions)
UINT None msi.MsiSourceListClearAllExW(_In_ LPCTSTR szProductCodeOrPatchCode,_In_opt_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD dwOptions)
UINT None msi.MsiSourceListClearAllExA(_In_ LPCTSTR szProductCodeOrPatchCode,_In_opt_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD dwOptions)
VOID None None.UsbDevice_EvtUcxUsbDeviceDisable(UCXCONTROLLER UcxController None,WDFREQUEST Request None)
UINT None msi.MsiGetFileHash(_In_ LPCTSTR szFilePath,_In_ DWORD dwOptions,_Out_ PMSIFILEHASHINFO pHash)
UINT None msi.MsiGetFileHashW(_In_ LPCTSTR szFilePath,_In_ DWORD dwOptions,_Out_ PMSIFILEHASHINFO pHash)
UINT None msi.MsiGetFileHashA(_In_ LPCTSTR szFilePath,_In_ DWORD dwOptions,_Out_ PMSIFILEHASHINFO pHash)
UINT None msi.MsiConfigureProduct(_In_ LPCTSTR szProduct,_In_ int iInstallLevel,_In_ INSTALLSTATE eInstallState)
UINT None msi.MsiConfigureProductW(_In_ LPCTSTR szProduct,_In_ int iInstallLevel,_In_ INSTALLSTATE eInstallState)
UINT None msi.MsiConfigureProductA(_In_ LPCTSTR szProduct,_In_ int iInstallLevel,_In_ INSTALLSTATE eInstallState)
HRESULT None wudfx.CreateIoQueue([in None None,optional] IUnknown *pCallbackInterface,[in] BOOL bDefaultQueue,[in] WDF_IO_QUEUE_DISPATCH_TYPE DispatchType,[in] BOOL bPowerManaged,[in] BOOL bAllowZeroLengthRequests,[out] IWDFIoQueue **ppIoQueue)
USERINFOSTATE None msi.MsiGetUserInfo(_In_ LPCTSTR szProduct,_Out_ LPTSTR lpUserNameBuf,_Inout_ DWORD *pcchUserNameBuf,_Out_ LPTSTR lpOrgNameBuf,_Inout_ DWORD *pcchOrgNameBuf,_In_ LPTSTR lpSerialBuf,_Inout_ DWORD *pcchSerialBuf)
USERINFOSTATE None msi.MsiGetUserInfoW(_In_ LPCTSTR szProduct,_Out_ LPTSTR lpUserNameBuf,_Inout_ DWORD *pcchUserNameBuf,_Out_ LPTSTR lpOrgNameBuf,_Inout_ DWORD *pcchOrgNameBuf,_In_ LPTSTR lpSerialBuf,_Inout_ DWORD *pcchSerialBuf)
USERINFOSTATE None msi.MsiGetUserInfoA(_In_ LPCTSTR szProduct,_Out_ LPTSTR lpUserNameBuf,_Inout_ DWORD *pcchUserNameBuf,_Out_ LPTSTR lpOrgNameBuf,_Inout_ DWORD *pcchOrgNameBuf,_In_ LPTSTR lpSerialBuf,_Inout_ DWORD *pcchSerialBuf)
UINT None msi.MsiAdvertiseProductEx(_In_ LPCTSTR szPackagePath,_In_ LPCTSTR szScriptfilePath,_In_ LPCTSTR szTransforms,_In_ LANGID lgidLanguage,_In_ DWORD dwPlatform,_In_ DWORD dwOptions)
UINT None msi.MsiAdvertiseProductExW(_In_ LPCTSTR szPackagePath,_In_ LPCTSTR szScriptfilePath,_In_ LPCTSTR szTransforms,_In_ LANGID lgidLanguage,_In_ DWORD dwPlatform,_In_ DWORD dwOptions)
UINT None msi.MsiAdvertiseProductExA(_In_ LPCTSTR szPackagePath,_In_ LPCTSTR szScriptfilePath,_In_ LPCTSTR szTransforms,_In_ LANGID lgidLanguage,_In_ DWORD dwPlatform,_In_ DWORD dwOptions)
UINT None msi.MsiEnumProductsEx(_In_opt_ LPCTSTR szProductCode,_In_ LPCTSTR szUserSid,_In_ DWORD dwContext,_In_ DWORD dwIndex,_Out_opt_ TCHAR szInstalledProductCode[39],_Out_opt_ MSIINSTALLCONTEXT *pdwInstalledContext,_Out_opt_ LPTSTR szSid,_Inout_opt_ LPDWORD pcchSid)
UINT None msi.MsiEnumProductsExW(_In_opt_ LPCTSTR szProductCode,_In_ LPCTSTR szUserSid,_In_ DWORD dwContext,_In_ DWORD dwIndex,_Out_opt_ TCHAR szInstalledProductCode[39],_Out_opt_ MSIINSTALLCONTEXT *pdwInstalledContext,_Out_opt_ LPTSTR szSid,_Inout_opt_ LPDWORD pcchSid)
UINT None msi.MsiEnumProductsExA(_In_opt_ LPCTSTR szProductCode,_In_ LPCTSTR szUserSid,_In_ DWORD dwContext,_In_ DWORD dwIndex,_Out_opt_ TCHAR szInstalledProductCode[39],_Out_opt_ MSIINSTALLCONTEXT *pdwInstalledContext,_Out_opt_ LPTSTR szSid,_Inout_opt_ LPDWORD pcchSid)
UINT None msi.MsiIsProductElevated(_In_ LPCTSTR szProductCode,_Out_ BOOL *pfElevated)
UINT None msi.MsiIsProductElevatedW(_In_ LPCTSTR szProductCode,_Out_ BOOL *pfElevated)
UINT None msi.MsiIsProductElevatedA(_In_ LPCTSTR szProductCode,_Out_ BOOL *pfElevated)
UINT None msi.MsiGetProductInfo(_In_ LPCTSTR szProduct,_In_ LPCTSTR szProperty,_Out_ LPTSTR lpValueBuf,_Inout_ DWORD *pcchValueBuf)
UINT None msi.MsiGetProductInfoW(_In_ LPCTSTR szProduct,_In_ LPCTSTR szProperty,_Out_ LPTSTR lpValueBuf,_Inout_ DWORD *pcchValueBuf)
UINT None msi.MsiGetProductInfoA(_In_ LPCTSTR szProduct,_In_ LPCTSTR szProperty,_Out_ LPTSTR lpValueBuf,_Inout_ DWORD *pcchValueBuf)
UINT None msi.MsiEnumProductsEx(_In_opt_ LPCTSTR szProductCode,_In_ LPCTSTR szUserSid,_In_ DWORD dwContext,_In_ DWORD dwIndex,_Out_opt_ TCHAR szInstalledProductCode[39],_Out_opt_ MSIINSTALLCONTEXT *pdwInstalledContext,_Out_opt_ LPTSTR szSid,_Inout_opt_ LPDWORD pcchSid)
UINT None msi.MsiEnumProductsExW(_In_opt_ LPCTSTR szProductCode,_In_ LPCTSTR szUserSid,_In_ DWORD dwContext,_In_ DWORD dwIndex,_Out_opt_ TCHAR szInstalledProductCode[39],_Out_opt_ MSIINSTALLCONTEXT *pdwInstalledContext,_Out_opt_ LPTSTR szSid,_Inout_opt_ LPDWORD pcchSid)
UINT None msi.MsiEnumProductsExA(_In_opt_ LPCTSTR szProductCode,_In_ LPCTSTR szUserSid,_In_ DWORD dwContext,_In_ DWORD dwIndex,_Out_opt_ TCHAR szInstalledProductCode[39],_Out_opt_ MSIINSTALLCONTEXT *pdwInstalledContext,_Out_opt_ LPTSTR szSid,_Inout_opt_ LPDWORD pcchSid)
UINT None msi.MsiAdvertiseProduct(_In_ LPCTSTR szPackagePath,_In_ LPCTSTR szScriptfilePath,_In_ LPCTSTR szTransforms,_In_ LANGID lgidLanguage)
UINT None msi.MsiAdvertiseProductW(_In_ LPCTSTR szPackagePath,_In_ LPCTSTR szScriptfilePath,_In_ LPCTSTR szTransforms,_In_ LANGID lgidLanguage)
UINT None msi.MsiAdvertiseProductA(_In_ LPCTSTR szPackagePath,_In_ LPCTSTR szScriptfilePath,_In_ LPCTSTR szTransforms,_In_ LANGID lgidLanguage)
USERINFOSTATE None msi.MsiGetUserInfo(_In_ LPCTSTR szProduct,_Out_ LPTSTR lpUserNameBuf,_Inout_ DWORD *pcchUserNameBuf,_Out_ LPTSTR lpOrgNameBuf,_Inout_ DWORD *pcchOrgNameBuf,_In_ LPTSTR lpSerialBuf,_Inout_ DWORD *pcchSerialBuf)
USERINFOSTATE None msi.MsiGetUserInfoW(_In_ LPCTSTR szProduct,_Out_ LPTSTR lpUserNameBuf,_Inout_ DWORD *pcchUserNameBuf,_Out_ LPTSTR lpOrgNameBuf,_Inout_ DWORD *pcchOrgNameBuf,_In_ LPTSTR lpSerialBuf,_Inout_ DWORD *pcchSerialBuf)
USERINFOSTATE None msi.MsiGetUserInfoA(_In_ LPCTSTR szProduct,_Out_ LPTSTR lpUserNameBuf,_Inout_ DWORD *pcchUserNameBuf,_Out_ LPTSTR lpOrgNameBuf,_Inout_ DWORD *pcchOrgNameBuf,_In_ LPTSTR lpSerialBuf,_Inout_ DWORD *pcchSerialBuf)
UINT None msi.MsiAdvertiseProduct(_In_ LPCTSTR szPackagePath,_In_ LPCTSTR szScriptfilePath,_In_ LPCTSTR szTransforms,_In_ LANGID lgidLanguage)
UINT None msi.MsiAdvertiseProductW(_In_ LPCTSTR szPackagePath,_In_ LPCTSTR szScriptfilePath,_In_ LPCTSTR szTransforms,_In_ LANGID lgidLanguage)
UINT None msi.MsiAdvertiseProductA(_In_ LPCTSTR szPackagePath,_In_ LPCTSTR szScriptfilePath,_In_ LPCTSTR szTransforms,_In_ LANGID lgidLanguage)
UINT None msi.MsiConfigureProductEx(_In_ LPCTSTR szProduct,_In_ int iInstallLevel,_In_ INSTALLSTATE eInstallState,_In_ LPCTSTR szCommandLine)
UINT None msi.MsiConfigureProductExW(_In_ LPCTSTR szProduct,_In_ int iInstallLevel,_In_ INSTALLSTATE eInstallState,_In_ LPCTSTR szCommandLine)
UINT None msi.MsiConfigureProductExA(_In_ LPCTSTR szProduct,_In_ int iInstallLevel,_In_ INSTALLSTATE eInstallState,_In_ LPCTSTR szCommandLine)
UINT None msi.MsiCollectUserInfo(_In_ LPCTSTR szProduct)
UINT None msi.MsiCollectUserInfoW(_In_ LPCTSTR szProduct)
UINT None msi.MsiCollectUserInfoA(_In_ LPCTSTR szProduct)
UINT None msi.MsiConfigureProductEx(_In_ LPCTSTR szProduct,_In_ int iInstallLevel,_In_ INSTALLSTATE eInstallState,_In_ LPCTSTR szCommandLine)
UINT None msi.MsiConfigureProductExW(_In_ LPCTSTR szProduct,_In_ int iInstallLevel,_In_ INSTALLSTATE eInstallState,_In_ LPCTSTR szCommandLine)
UINT None msi.MsiConfigureProductExA(_In_ LPCTSTR szProduct,_In_ int iInstallLevel,_In_ INSTALLSTATE eInstallState,_In_ LPCTSTR szCommandLine)
UINT None msi.MsiGetProductInfo(_In_ LPCTSTR szProduct,_In_ LPCTSTR szProperty,_Out_ LPTSTR lpValueBuf,_Inout_ DWORD *pcchValueBuf)
UINT None msi.MsiGetProductInfoW(_In_ LPCTSTR szProduct,_In_ LPCTSTR szProperty,_Out_ LPTSTR lpValueBuf,_Inout_ DWORD *pcchValueBuf)
UINT None msi.MsiGetProductInfoA(_In_ LPCTSTR szProduct,_In_ LPCTSTR szProperty,_Out_ LPTSTR lpValueBuf,_Inout_ DWORD *pcchValueBuf)
UINT None msi.MsiQueryComponentState(_In_ LPTSTR szProductCode,_In_ LPTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ LPCTSTR szComponent,_Out_ INSTALLSTATE *pdwState)
UINT None msi.MsiQueryComponentStateW(_In_ LPTSTR szProductCode,_In_ LPTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ LPCTSTR szComponent,_Out_ INSTALLSTATE *pdwState)
UINT None msi.MsiQueryComponentStateA(_In_ LPTSTR szProductCode,_In_ LPTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ LPCTSTR szComponent,_Out_ INSTALLSTATE *pdwState)
UINT None msi.MsiSourceListForceResolution(_In_ LPCTSTR szProduct,_In_ LPCTSTR szUserName,_In_ DWORD dwReserved)
UINT None msi.MsiSourceListForceResolutionW(_In_ LPCTSTR szProduct,_In_ LPCTSTR szUserName,_In_ DWORD dwReserved)
UINT None msi.MsiSourceListForceResolutionA(_In_ LPCTSTR szProduct,_In_ LPCTSTR szUserName,_In_ DWORD dwReserved)
UINT None msi.MsiQueryComponentState(_In_ LPTSTR szProductCode,_In_ LPTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ LPCTSTR szComponent,_Out_ INSTALLSTATE *pdwState)
UINT None msi.MsiQueryComponentStateW(_In_ LPTSTR szProductCode,_In_ LPTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ LPCTSTR szComponent,_Out_ INSTALLSTATE *pdwState)
UINT None msi.MsiQueryComponentStateA(_In_ LPTSTR szProductCode,_In_ LPTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ LPCTSTR szComponent,_Out_ INSTALLSTATE *pdwState)
UINT None msi.MsiEnumComponents(_In_ DWORD iComponentIndex,_Out_ LPTSTR lpComponentBuf)
UINT None msi.MsiEnumComponentsW(_In_ DWORD iComponentIndex,_Out_ LPTSTR lpComponentBuf)
UINT None msi.MsiEnumComponentsA(_In_ DWORD iComponentIndex,_Out_ LPTSTR lpComponentBuf)
UINT None msi.MsiApplyMultiplePatches(_In_ LPCTSTR szPatchPackages,_In_opt_ LPCTSTR szProductCode,_In_opt_ LPCTSTR szPropertiesList)
UINT None msi.MsiApplyMultiplePatchesW(_In_ LPCTSTR szPatchPackages,_In_opt_ LPCTSTR szProductCode,_In_opt_ LPCTSTR szPropertiesList)
UINT None msi.MsiApplyMultiplePatchesA(_In_ LPCTSTR szPatchPackages,_In_opt_ LPCTSTR szProductCode,_In_opt_ LPCTSTR szPropertiesList)
UINT None msi.MsiApplyMultiplePatches(_In_ LPCTSTR szPatchPackages,_In_opt_ LPCTSTR szProductCode,_In_opt_ LPCTSTR szPropertiesList)
UINT None msi.MsiApplyMultiplePatchesW(_In_ LPCTSTR szPatchPackages,_In_opt_ LPCTSTR szProductCode,_In_opt_ LPCTSTR szPropertiesList)
UINT None msi.MsiApplyMultiplePatchesA(_In_ LPCTSTR szPatchPackages,_In_opt_ LPCTSTR szProductCode,_In_opt_ LPCTSTR szPropertiesList)
UINT None msi.MsiEnumProducts(_In_ DWORD iProductIndex,_Out_ LPTSTR lpProductBuf)
UINT None msi.MsiEnumProductsW(_In_ DWORD iProductIndex,_Out_ LPTSTR lpProductBuf)
UINT None msi.MsiEnumProductsA(_In_ DWORD iProductIndex,_Out_ LPTSTR lpProductBuf)
UINT None msi.MsiEnumProducts(_In_ DWORD iProductIndex,_Out_ LPTSTR lpProductBuf)
UINT None msi.MsiEnumProductsW(_In_ DWORD iProductIndex,_Out_ LPTSTR lpProductBuf)
UINT None msi.MsiEnumProductsA(_In_ DWORD iProductIndex,_Out_ LPTSTR lpProductBuf)
UINT None msi.MsiAdvertiseScript(_In_ LPCTSTR szScriptFile,_In_ DWORD dwFlags,_In_ PHKEY phRegData,_In_ BOOL fRemoveItems)
UINT None msi.MsiAdvertiseScriptW(_In_ LPCTSTR szScriptFile,_In_ DWORD dwFlags,_In_ PHKEY phRegData,_In_ BOOL fRemoveItems)
UINT None msi.MsiAdvertiseScriptA(_In_ LPCTSTR szScriptFile,_In_ DWORD dwFlags,_In_ PHKEY phRegData,_In_ BOOL fRemoveItems)
FORCEINLINE void None.UDECX_USB_DEVICE_PLUG_IN_OPTIONS_INIT(_Out_ PUDECX_USB_DEVICE_PLUG_IN_OPTIONS Options)
UINT None msi.MsiSourceListForceResolution(_In_ LPCTSTR szProduct,_In_ LPCTSTR szUserName,_In_ DWORD dwReserved)
UINT None msi.MsiSourceListForceResolutionW(_In_ LPCTSTR szProduct,_In_ LPCTSTR szUserName,_In_ DWORD dwReserved)
UINT None msi.MsiSourceListForceResolutionA(_In_ LPCTSTR szProduct,_In_ LPCTSTR szUserName,_In_ DWORD dwReserved)
UINT None msi.MsiSourceListAddMediaDisk(_In_ LPCTSTR szProductCodeOrPatchCode,_In_opt_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD dwOptions,_In_ DWORD dwDiskId,_In_ LPCTSTR szVolumeLabel,_In_opt_ LPCTSTR szDiskPrompt)
UINT None msi.MsiSourceListAddMediaDiskW(_In_ LPCTSTR szProductCodeOrPatchCode,_In_opt_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD dwOptions,_In_ DWORD dwDiskId,_In_ LPCTSTR szVolumeLabel,_In_opt_ LPCTSTR szDiskPrompt)
UINT None msi.MsiSourceListAddMediaDiskA(_In_ LPCTSTR szProductCodeOrPatchCode,_In_opt_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD dwOptions,_In_ DWORD dwDiskId,_In_ LPCTSTR szVolumeLabel,_In_opt_ LPCTSTR szDiskPrompt)
UINT None msi.MsiGetFileVersion(_In_ LPCTSTR szFilePath,_Out_ LPTSTR lpVersionBuf,_Inout_ DWORD *pcchVersionBuf,_Out_ LPTSTR lpLangBuf,_Inout_ DWORD *pcchLangBuf)
UINT None msi.MsiGetFileVersionW(_In_ LPCTSTR szFilePath,_Out_ LPTSTR lpVersionBuf,_Inout_ DWORD *pcchVersionBuf,_Out_ LPTSTR lpLangBuf,_Inout_ DWORD *pcchLangBuf)
UINT None msi.MsiGetFileVersionA(_In_ LPCTSTR szFilePath,_Out_ LPTSTR lpVersionBuf,_Inout_ DWORD *pcchVersionBuf,_Out_ LPTSTR lpLangBuf,_Inout_ DWORD *pcchLangBuf)
INSTALLSTATE None msi.MsiUseFeature(_In_ LPCTSTR szProduct,_In_ LPCTSTR szFeature)
INSTALLSTATE None msi.MsiUseFeatureW(_In_ LPCTSTR szProduct,_In_ LPCTSTR szFeature)
INSTALLSTATE None msi.MsiUseFeatureA(_In_ LPCTSTR szProduct,_In_ LPCTSTR szFeature)
UINT None msi.MsiSourceListAddMediaDisk(_In_ LPCTSTR szProductCodeOrPatchCode,_In_opt_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD dwOptions,_In_ DWORD dwDiskId,_In_ LPCTSTR szVolumeLabel,_In_opt_ LPCTSTR szDiskPrompt)
UINT None msi.MsiSourceListAddMediaDiskW(_In_ LPCTSTR szProductCodeOrPatchCode,_In_opt_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD dwOptions,_In_ DWORD dwDiskId,_In_ LPCTSTR szVolumeLabel,_In_opt_ LPCTSTR szDiskPrompt)
UINT None msi.MsiSourceListAddMediaDiskA(_In_ LPCTSTR szProductCodeOrPatchCode,_In_opt_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD dwOptions,_In_ DWORD dwDiskId,_In_ LPCTSTR szVolumeLabel,_In_opt_ LPCTSTR szDiskPrompt)
UINT None msi.MsiGetFileVersion(_In_ LPCTSTR szFilePath,_Out_ LPTSTR lpVersionBuf,_Inout_ DWORD *pcchVersionBuf,_Out_ LPTSTR lpLangBuf,_Inout_ DWORD *pcchLangBuf)
UINT None msi.MsiGetFileVersionW(_In_ LPCTSTR szFilePath,_Out_ LPTSTR lpVersionBuf,_Inout_ DWORD *pcchVersionBuf,_Out_ LPTSTR lpLangBuf,_Inout_ DWORD *pcchLangBuf)
UINT None msi.MsiGetFileVersionA(_In_ LPCTSTR szFilePath,_Out_ LPTSTR lpVersionBuf,_Inout_ DWORD *pcchVersionBuf,_Out_ LPTSTR lpLangBuf,_Inout_ DWORD *pcchLangBuf)
BOOLEAN None None.WDF_IO_QUEUE_PURGED(_In_ WDF_IO_QUEUE_STATE State)
NTSTATUS None None.Controller_EvtControllerQueryUsbCapability(WDFDEVICE UdeWdfDevice None,PGUID CapabilityType None,ULONG OutputBufferLength None,PVOID OutputBuffer None,PULONG ResultLength None)
typedef None None.BOOLEAN(*PHW_STARTIO None None)
void None wudfx.GetInputMemory([out] IWDFMemory **ppWdfMemory)
UINT None msi.MsiSourceListClearAll(_In_ LPCTSTR szProduct,_In_ LPCTSTR szUserName,_In_ DWORD dwReserved)
UINT None msi.MsiSourceListClearAllW(_In_ LPCTSTR szProduct,_In_ LPCTSTR szUserName,_In_ DWORD dwReserved)
UINT None msi.MsiSourceListClearAllA(_In_ LPCTSTR szProduct,_In_ LPCTSTR szUserName,_In_ DWORD dwReserved)
BOOL None setupapi.SetupGetFileCompressionInfoEx(_In_ PCTSTR SourceFileName,_Inout_ PTSTR ActualSourceFileNameBuffer,_Inout_ DWORD ActualSourceFileNameLen,_Out_ PDWORD RequiredBufferLen,_Out_ PDWORD SourceFileSize,_Out_ PDWORD TargetFileSize,_Out_ PUINT CompressionType)
BOOL None setupapi.SetupGetFileCompressionInfoExW(_In_ PCTSTR SourceFileName,_Inout_ PTSTR ActualSourceFileNameBuffer,_Inout_ DWORD ActualSourceFileNameLen,_Out_ PDWORD RequiredBufferLen,_Out_ PDWORD SourceFileSize,_Out_ PDWORD TargetFileSize,_Out_ PUINT CompressionType)
BOOL None setupapi.SetupGetFileCompressionInfoExA(_In_ PCTSTR SourceFileName,_Inout_ PTSTR ActualSourceFileNameBuffer,_Inout_ DWORD ActualSourceFileNameLen,_Out_ PDWORD RequiredBufferLen,_Out_ PDWORD SourceFileSize,_Out_ PDWORD TargetFileSize,_Out_ PUINT CompressionType)
HRESULT None wudfx.RetrieveNextRequest([out] IWDFIoRequest **ppRequest)
VOID None None.UCMTCPCI_PORT_CONTROLLER_CONFIG_INIT(_Out_ PUCMTCPCI_PORT_CONTROLLER_CONFIG Config,_In_ PUCMTCPCI_PORT_CONTROLLER_IDENTIFICATION Identification,_In_ PUCMTCPCI_PORT_CONTROLLER_CAPABILITIES Capabilities)
INSTALLSTATE None msi.MsiLocateComponent(_In_ LPCTSTR szComponent,_Out_ LPTSTR lpPathBuf,_Inout_ DWORD *pcchBuf)
INSTALLSTATE None msi.MsiLocateComponentW(_In_ LPCTSTR szComponent,_Out_ LPTSTR lpPathBuf,_Inout_ DWORD *pcchBuf)
INSTALLSTATE None msi.MsiLocateComponentA(_In_ LPCTSTR szComponent,_Out_ LPTSTR lpPathBuf,_Inout_ DWORD *pcchBuf)
NTSTATUS None None.UcxControllerCreate([in] WDFDEVICE Device,[in] PUCX_CONTROLLER_CONFIG Config,[in None None,optional] PWDF_OBJECT_ATTRIBUTES Attributes,[out] UCXCONTROLLER *Controller)
FORCEINLINE void None.UCM_CONNECTOR_TYPEC_ATTACH_PARAMS_INIT(_Out_ PUCM_CONNECTOR_TYPEC_ATTACH_PARAMS Config,_In_ UCM_TYPE_C_PORT_STATE PortPartnerType)
typedef None None.BOOLEAN(*PHW_STARTIO None None)
HRESULT None wudfx.CreateIoQueue([in None None,optional] IUnknown *pCallbackInterface,[in] BOOL bDefaultQueue,[in] WDF_IO_QUEUE_DISPATCH_TYPE DispatchType,[in] BOOL bPowerManaged,[in] BOOL bAllowZeroLengthRequests,[out] IWDFIoQueue **ppIoQueue)
UINT None msi.MsiOpenProduct(_In_ LPCTSTR szProduct,_Out_ MSIHANDLE *hProduct)
UINT None msi.MsiOpenProductW(_In_ LPCTSTR szProduct,_Out_ MSIHANDLE *hProduct)
UINT None msi.MsiOpenProductA(_In_ LPCTSTR szProduct,_Out_ MSIHANDLE *hProduct)
typedef None None.BOOLEAN(*PHW_INITIALIZE None None)
VOID None None.WDF_USB_CONTROL_SETUP_PACKET_INIT_FEATURE(_Out_ PWDF_USB_CONTROL_SETUP_PACKET Packet,_In_ WDF_USB_BMREQUEST_RECIPIENT BmRequestRecipient,_In_ USHORT FeatureSelector,_In_ USHORT Index,_In_ BOOLEAN SetFeature)
NTSTATUS None None.UcmTcpciPortControllerCreate(WDFDEVICE WdfDevice None,PUCMTCPCI_PORT_CONTROLLER_CONFIG Config None,PWDF_OBJECT_ATTRIBUTES Attributes None,UCMTCPCIPORTCONTROLLER* PortControllerObject None)
typedef None None.BOOLEAN(*PHW_ADAPTER_STATE None None)
PUSB_COMMON_DESCRIPTOR None None.USBD_ParseDescriptors(_In_ PVOID DescriptorBuffer,_In_ ULONG TotalLength,_In_ PVOID StartPosition,_In_ LONG DescriptorType)
UINT None msi.MsiAdvertiseProduct(_In_ LPCTSTR szPackagePath,_In_ LPCTSTR szScriptfilePath,_In_ LPCTSTR szTransforms,_In_ LANGID lgidLanguage)
UINT None msi.MsiAdvertiseProductW(_In_ LPCTSTR szPackagePath,_In_ LPCTSTR szScriptfilePath,_In_ LPCTSTR szTransforms,_In_ LANGID lgidLanguage)
UINT None msi.MsiAdvertiseProductA(_In_ LPCTSTR szPackagePath,_In_ LPCTSTR szScriptfilePath,_In_ LPCTSTR szTransforms,_In_ LANGID lgidLanguage)
PVOID None None.StorPortGetUncachedExtension(IN PVOID HwDeviceExtension,IN PPORT_CONFIGURATION_INFORMATION ConfigInfo,ULONG NumberOfBytes None)
VOID None None.UsbDevice_EvtUcxUsbDeviceAddress(UCXCONTROLLER UcxController None,WDFREQUEST Request None)
VOID None None.WDF_DEVICE_POWER_POLICY_IDLE_SETTINGS_INIT(_Out_ PWDF_DEVICE_POWER_POLICY_IDLE_SETTINGS Settings,_In_ WDF_POWER_POLICY_S0_IDLE_CAPABILITIES IdleCaps)
NTSTATUS None None.UdecxUsbDeviceCreate(_Inout_ PUDECXUSBDEVICE_INIT *UdecxUsbDeviceInit,_In_opt_ PWDF_OBJECT_ATTRIBUTES Attributes,_Out_ UDECXUSBDEVICE *UdecxUsbDevice)
UINT None msi.MsiSourceListForceResolution(_In_ LPCTSTR szProduct,_In_ LPCTSTR szUserName,_In_ DWORD dwReserved)
UINT None msi.MsiSourceListForceResolutionW(_In_ LPCTSTR szProduct,_In_ LPCTSTR szUserName,_In_ DWORD dwReserved)
UINT None msi.MsiSourceListForceResolutionA(_In_ LPCTSTR szProduct,_In_ LPCTSTR szUserName,_In_ DWORD dwReserved)
void None None.UCM_CONNECTOR_PD_CONN_STATE_CHANGED_PARAMS_INIT(_Out_ PUCM_CONNECTOR_PD_CONN_STATE_CHANGED_PARAMS Params,_In_ UCM_PD_CONN_STATE PdConnState)
typedef None None.NTSTATUS(USB_BUSIFFN *PUSB_BUSIFFN_QUERY_BUS_TIME None)
UINT None msi.MsiSourceListEnumMediaDisks(_In_ LPCTSTR szProductCodeOrPatchCode,_In_opt_ LPCTSTR szUserSID,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD dwOptions,_In_ DWORD dwIndex,_Out_opt_ LPWORD pdwDiskId,_Out_opt_ LPTSTR szVolumeLabel,_Inout_opt_ LPDWORD pcchVolumeLabel,_Out_opt_ LPTSTR szDiskPrompt,_Inout_opt_ LPDWORD pcchDiskPrompt)
UINT None msi.MsiSourceListEnumMediaDisksW(_In_ LPCTSTR szProductCodeOrPatchCode,_In_opt_ LPCTSTR szUserSID,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD dwOptions,_In_ DWORD dwIndex,_Out_opt_ LPWORD pdwDiskId,_Out_opt_ LPTSTR szVolumeLabel,_Inout_opt_ LPDWORD pcchVolumeLabel,_Out_opt_ LPTSTR szDiskPrompt,_Inout_opt_ LPDWORD pcchDiskPrompt)
UINT None msi.MsiSourceListEnumMediaDisksA(_In_ LPCTSTR szProductCodeOrPatchCode,_In_opt_ LPCTSTR szUserSID,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD dwOptions,_In_ DWORD dwIndex,_Out_opt_ LPWORD pdwDiskId,_Out_opt_ LPTSTR szVolumeLabel,_Inout_opt_ LPDWORD pcchVolumeLabel,_Out_opt_ LPTSTR szDiskPrompt,_Inout_opt_ LPDWORD pcchDiskPrompt)
BOOL None setupapi.SetupGetBinaryField(_In_ PINFCONTEXT Context,_In_ DWORD FieldIndex,_Inout_ BYTE *ReturnBuffer,_In_ DWORD ReturnBufferSize,_Inout_ LPDWORD RequiredSize)
NTSTATUS None None.UcmConnectorCreate([in] WDFDEVICE WdfDevice,[in] PUCM_CONNECTOR_CONFIG Config,[in] PWDF_OBJECT_ATTRIBUTES Attributes,[out] UCMCONNECTOR *Connector)
NTSTATUS None None.USBD_CreateHandle(_In_ PDEVICE_OBJECT DeviceObject,_In_ PDEVICE_OBJECT TargetDeviceObject,_In_ ULONG USBDClientContractVersion,_In_ ULONG PoolTag,_Out_ USBD_HANDLE *USBDHandle)
UINT None msi.MsiGetFeatureInfo(_In_ MSIHANDLE hProduct,_In_ LPCTSTR szFeature,_Out_opt_ LPDWORD lpAttributes,_Out_opt_ LPTSTR lpTitleBuf,_Inout_opt_ LPDWORD pcchTitleBuf,_Out_opt_ LPTSTR lpHelpBuf,_Inout_opt_ LPDWORD pcchHelpBuf)
UINT None msi.MsiGetFeatureInfoW(_In_ MSIHANDLE hProduct,_In_ LPCTSTR szFeature,_Out_opt_ LPDWORD lpAttributes,_Out_opt_ LPTSTR lpTitleBuf,_Inout_opt_ LPDWORD pcchTitleBuf,_Out_opt_ LPTSTR lpHelpBuf,_Inout_opt_ LPDWORD pcchHelpBuf)
UINT None msi.MsiGetFeatureInfoA(_In_ MSIHANDLE hProduct,_In_ LPCTSTR szFeature,_Out_opt_ LPDWORD lpAttributes,_Out_opt_ LPTSTR lpTitleBuf,_Inout_opt_ LPDWORD pcchTitleBuf,_Out_opt_ LPTSTR lpHelpBuf,_Inout_opt_ LPDWORD pcchHelpBuf)
INSTALLSTATE None msi.MsiGetComponentPath(_In_ LPCTSTR szProduct,_In_ LPCTSTR szComponent,_Out_ LPTSTR lpPathBuf,_Inout_ DWORD *pcchBuf)
INSTALLSTATE None msi.MsiGetComponentPathW(_In_ LPCTSTR szProduct,_In_ LPCTSTR szComponent,_Out_ LPTSTR lpPathBuf,_Inout_ DWORD *pcchBuf)
INSTALLSTATE None msi.MsiGetComponentPathA(_In_ LPCTSTR szProduct,_In_ LPCTSTR szComponent,_Out_ LPTSTR lpPathBuf,_Inout_ DWORD *pcchBuf)
STORPORT_API ULONG None.StorPortInitialize(_In_ PVOID Argument1,_In_ PVOID Argument2,_In_ PHW_INITIALIZATION_DATA HwInitializationData,_In_opt_ PVOID HwContext)
UINT WINAPI msi.MsiEndTransaction(_In_ DWORD dwTransactionState)
HINF None setupapi.SetupOpenInfFile(_In_ PCTSTR FileName,_In_ PCTSTR InfClass,_In_ DWORD InfStyle,_In_ PUINT ErrorLine)
HINF None setupapi.SetupOpenInfFileW(_In_ PCTSTR FileName,_In_ PCTSTR InfClass,_In_ DWORD InfStyle,_In_ PUINT ErrorLine)
HINF None setupapi.SetupOpenInfFileA(_In_ PCTSTR FileName,_In_ PCTSTR InfClass,_In_ DWORD InfStyle,_In_ PUINT ErrorLine)
DWORD CALLBACK None.ShutdownEmbeddedUI(void None None)
VOID None None.WDF_CHILD_LIST_CONFIG_INIT(_Out_ PWDF_CHILD_LIST_CONFIG Config,_In_ ULONG IdentificationDescriptionSize,_In_ PFN_WDF_CHILD_LIST_CREATE_DEVICE EvtChildListCreateDevice)
typedef BOOLEAN None.HW_INITIALIZE(_In_ PVOID DeviceExtension)
HDSKSPC None setupapi.SetupCreateDiskSpaceList(_In_ PVOID Reserved1,_In_ DWORD Reserved2,_In_ UINT Flags)
HDSKSPC None setupapi.SetupCreateDiskSpaceListW(_In_ PVOID Reserved1,_In_ DWORD Reserved2,_In_ UINT Flags)
HDSKSPC None setupapi.SetupCreateDiskSpaceListA(_In_ PVOID Reserved1,_In_ DWORD Reserved2,_In_ UINT Flags)
NTSTATUS None None.FltParseFileName(_In_ PCUNICODE_STRING FileName,_Inout_ PUNICODE_STRING Extension,_Inout_ PUNICODE_STRING Stream,_Inout_ PUNICODE_STRING FinalComponent)
UINT None msi.MsiGetShortcutTarget(_In_ LPCTSTR szShortcutTarget,_Out_ LPTSTR szProductCode,_Out_ LPTSTR szFeatureId,_Out_ LPTSTR szComponentCode)
UINT None msi.MsiGetShortcutTargetW(_In_ LPCTSTR szShortcutTarget,_Out_ LPTSTR szProductCode,_Out_ LPTSTR szFeatureId,_Out_ LPTSTR szComponentCode)
UINT None msi.MsiGetShortcutTargetA(_In_ LPCTSTR szShortcutTarget,_Out_ LPTSTR szProductCode,_Out_ LPTSTR szFeatureId,_Out_ LPTSTR szComponentCode)
BOOLEAN None None.WDF_IO_QUEUE_DRAINED(_In_ WDF_IO_QUEUE_STATE State)
void None wudfx.GetDeviceIoControlParameters([out] ULONG *pControlCode,[out] SIZE_T *pInBufferSize,[out] SIZE_T *pOutBufferSize)
UINT None msi.MsiGetProductCode(_In_ LPCTSTR szComponent,_Out_ LPTSTR lpProductBuf)
UINT None msi.MsiGetProductCodeW(_In_ LPCTSTR szComponent,_Out_ LPTSTR lpProductBuf)
UINT None msi.MsiGetProductCodeA(_In_ LPCTSTR szComponent,_Out_ LPTSTR lpProductBuf)
BOOLEAN None None.HwScsiStartIo(_In_ PVOID DeviceExtension,_In_ PSCSI_REQUEST_BLOCK Srb)
UINT None msi.MsiGetFileHash(_In_ LPCTSTR szFilePath,_In_ DWORD dwOptions,_Out_ PMSIFILEHASHINFO pHash)
UINT None msi.MsiGetFileHashW(_In_ LPCTSTR szFilePath,_In_ DWORD dwOptions,_Out_ PMSIFILEHASHINFO pHash)
UINT None msi.MsiGetFileHashA(_In_ LPCTSTR szFilePath,_In_ DWORD dwOptions,_Out_ PMSIFILEHASHINFO pHash)
VOID None None.UsbDevice_EvtUcxUsbDeviceUpdate(UCXCONTROLLER UcxController None,WDFREQUEST Request None)
UINT None msi.MsiProvideAssembly(_In_ LPCTSTR szAssemblyName,_In_ LPCTSTR szAppContext,_In_ DWORD dwInstallMode,_In_ DWORD dwAssemblyInfo,_Out_ LPTSTR lpPathBuf,_Inout_ DWORD *pcchPathBuf)
UINT None msi.MsiProvideAssemblyW(_In_ LPCTSTR szAssemblyName,_In_ LPCTSTR szAppContext,_In_ DWORD dwInstallMode,_In_ DWORD dwAssemblyInfo,_Out_ LPTSTR lpPathBuf,_Inout_ DWORD *pcchPathBuf)
UINT None msi.MsiProvideAssemblyA(_In_ LPCTSTR szAssemblyName,_In_ LPCTSTR szAppContext,_In_ DWORD dwInstallMode,_In_ DWORD dwAssemblyInfo,_Out_ LPTSTR lpPathBuf,_Inout_ DWORD *pcchPathBuf)
FORCEINLINE void None.UCM_CONNECTOR_CONFIG_INIT(_Out_ PUCM_CONNECTOR_CONFIG Config,_In_ ULONGULONG ConnectorId)
UINT None msi.MsiGetPatchInfoEx(_In_ LPCTSTR szPatchCode,_In_ LPCTSTR szProductCode,_In_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ LPCTSTR szProperty,_Out_opt_ LPTSTR lpValue,_Inout_ DWORD *pcchValue)
UINT None msi.MsiGetPatchInfoExW(_In_ LPCTSTR szPatchCode,_In_ LPCTSTR szProductCode,_In_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ LPCTSTR szProperty,_Out_opt_ LPTSTR lpValue,_Inout_ DWORD *pcchValue)
UINT None msi.MsiGetPatchInfoExA(_In_ LPCTSTR szPatchCode,_In_ LPCTSTR szProductCode,_In_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ LPCTSTR szProperty,_Out_opt_ LPTSTR lpValue,_Inout_ DWORD *pcchValue)
UINT None msi.MsiSourceListAddSourceEx(_In_ LPCTSTR szProductCodeOrPatchCode,_In_opt_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD dwOptions,_In_ LPCTSTR szSource,_In_opt_ DWORD dwIndex)
UINT None msi.MsiSourceListAddSourceExW(_In_ LPCTSTR szProductCodeOrPatchCode,_In_opt_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD dwOptions,_In_ LPCTSTR szSource,_In_opt_ DWORD dwIndex)
UINT None msi.MsiSourceListAddSourceExA(_In_ LPCTSTR szProductCodeOrPatchCode,_In_opt_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD dwOptions,_In_ LPCTSTR szSource,_In_opt_ DWORD dwIndex)
VOID None None.StorPortNotification(IN SCSI_NOTIFICATION_TYPE NotificationType,IN PVOID HwDeviceExtension,... arguments None)
UINT None msi.MsiSourceListEnumSources(_In_ LPCTSTR szProductCodeOrPatchCode,_In_opt_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD dwOptions,_In_ DWORD dwIndex,_In_opt_ LPTSTR szSource,_Inout_opt_ LPDWORD pcchSource)
UINT None msi.MsiSourceListEnumSourcesW(_In_ LPCTSTR szProductCodeOrPatchCode,_In_opt_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD dwOptions,_In_ DWORD dwIndex,_In_opt_ LPTSTR szSource,_Inout_opt_ LPDWORD pcchSource)
UINT None msi.MsiSourceListEnumSourcesA(_In_ LPCTSTR szProductCodeOrPatchCode,_In_opt_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD dwOptions,_In_ DWORD dwIndex,_In_opt_ LPTSTR szSource,_Inout_opt_ LPDWORD pcchSource)
INT CALLBACK None.EmbeddedUIHandler(UINT uiMessageType None,MSIHANDLE hRecord None)
UINT None msi.MsiApplyPatch(_In_ LPCTSTR szPatchPackage,_In_ LPCTSTR szInstallPackage,_In_ INSTALLTYPE eInstallType,_In_ LPCTSTR szCommandLine)
UINT None msi.MsiApplyPatchW(_In_ LPCTSTR szPatchPackage,_In_ LPCTSTR szInstallPackage,_In_ INSTALLTYPE eInstallType,_In_ LPCTSTR szCommandLine)
UINT None msi.MsiApplyPatchA(_In_ LPCTSTR szPatchPackage,_In_ LPCTSTR szInstallPackage,_In_ INSTALLTYPE eInstallType,_In_ LPCTSTR szCommandLine)
BOOL None setupapi.SetupRemoveFromSourceList(_In_ DWORD Flags,_In_ PCTSTR Source)
BOOL None setupapi.SetupRemoveFromSourceListW(_In_ DWORD Flags,_In_ PCTSTR Source)
BOOL None setupapi.SetupRemoveFromSourceListA(_In_ DWORD Flags,_In_ PCTSTR Source)
UINT WINAPI msi.MsiEnumClientsEx(_In_ LPCTSTR szComponent,_In_opt_ LPCTSTR szUserSid,_In_ DWORD dwContext,_In_ DWORD dwProductIndex,_Out_opt_ TCHAR szProductBuf,_Out_opt_ MSIINSTALLCONTEXT *pdwInstalledContext,_Out_opt_ LPTSTR szSid,_Inout_opt_ LPDWORD pcchSid)
UINT WINAPI msi.MsiEnumClientsExW(_In_ LPCTSTR szComponent,_In_opt_ LPCTSTR szUserSid,_In_ DWORD dwContext,_In_ DWORD dwProductIndex,_Out_opt_ TCHAR szProductBuf,_Out_opt_ MSIINSTALLCONTEXT *pdwInstalledContext,_Out_opt_ LPTSTR szSid,_Inout_opt_ LPDWORD pcchSid)
UINT WINAPI msi.MsiEnumClientsExA(_In_ LPCTSTR szComponent,_In_opt_ LPCTSTR szUserSid,_In_ DWORD dwContext,_In_ DWORD dwProductIndex,_Out_opt_ TCHAR szProductBuf,_Out_opt_ MSIINSTALLCONTEXT *pdwInstalledContext,_Out_opt_ LPTSTR szSid,_Inout_opt_ LPDWORD pcchSid)
UINT None msi.MsiSourceListAddSource(_In_ LPCTSTR szProduct,_In_ LPCTSTR szUserName,_In_ DWORD dwReserved,_In_ LPCTSTR szSource)
UINT None msi.MsiSourceListAddSourceW(_In_ LPCTSTR szProduct,_In_ LPCTSTR szUserName,_In_ DWORD dwReserved,_In_ LPCTSTR szSource)
UINT None msi.MsiSourceListAddSourceA(_In_ LPCTSTR szProduct,_In_ LPCTSTR szUserName,_In_ DWORD dwReserved,_In_ LPCTSTR szSource)
UINT None msi.MsiSourceListForceResolutionEx(_In_ LPCTSTR szProductCodeOrPatchCode,_In_opt_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD dwOptions)
UINT None msi.MsiSourceListForceResolutionExW(_In_ LPCTSTR szProductCodeOrPatchCode,_In_opt_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD dwOptions)
UINT None msi.MsiSourceListForceResolutionExA(_In_ LPCTSTR szProductCodeOrPatchCode,_In_opt_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD dwOptions)
UINT None msi.MsiProcessAdvertiseScript(_In_ LPCTSTR szScriptFile,_In_ LPCTSTR szIconFolder,_In_ HKEY hRegData,_In_ BOOL fShortcuts,_In_ BOOL fRemoveItems)
UINT None msi.MsiProcessAdvertiseScriptW(_In_ LPCTSTR szScriptFile,_In_ LPCTSTR szIconFolder,_In_ HKEY hRegData,_In_ BOOL fShortcuts,_In_ BOOL fRemoveItems)
UINT None msi.MsiProcessAdvertiseScriptA(_In_ LPCTSTR szScriptFile,_In_ LPCTSTR szIconFolder,_In_ HKEY hRegData,_In_ BOOL fShortcuts,_In_ BOOL fRemoveItems)
void None None.USBD_UrbFree(_In_ USBD_HANDLE USBDHandle,_In_ PURB Urb)
UINT None msi.MsiSourceListClearSource(_In_ LPCTSTR szProductCodeOrPatchCode,_In_opt_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD dwOptions,_In_ LPCTSTR szSource)
UINT None msi.MsiSourceListClearSourceW(_In_ LPCTSTR szProductCodeOrPatchCode,_In_opt_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD dwOptions,_In_ LPCTSTR szSource)
UINT None msi.MsiSourceListClearSourceA(_In_ LPCTSTR szProductCodeOrPatchCode,_In_opt_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD dwOptions,_In_ LPCTSTR szSource)
NTSTATUS None None.UcmConnectorPdConnectionStateChanged([in] UCMCONNECTOR Connector,[in] PUCM_CONNECTOR_PD_CONN_STATE_CHANGED_PARAMS Params)
UINT None msi.MsiGetProductInfoEx(_In_ LPCTSTR szProductCode,_In_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ LPCTSTR szProperty,_Out_opt_ LPTSTR lpValue,_Inout_opt_ LPDWORD pcchValue)
UINT None msi.MsiGetProductInfoExW(_In_ LPCTSTR szProductCode,_In_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ LPCTSTR szProperty,_Out_opt_ LPTSTR lpValue,_Inout_opt_ LPDWORD pcchValue)
UINT None msi.MsiGetProductInfoExA(_In_ LPCTSTR szProductCode,_In_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ LPCTSTR szProperty,_Out_opt_ LPTSTR lpValue,_Inout_opt_ LPDWORD pcchValue)
UINT None msi.MsiConfigureFeature(_In_ LPCTSTR szProduct,_In_ LPCTSTR szFeature,_In_ INSTALLSTATE eInstallState)
UINT None msi.MsiConfigureFeatureW(_In_ LPCTSTR szProduct,_In_ LPCTSTR szFeature,_In_ INSTALLSTATE eInstallState)
UINT None msi.MsiConfigureFeatureA(_In_ LPCTSTR szProduct,_In_ LPCTSTR szFeature,_In_ INSTALLSTATE eInstallState)
UINT WINAPI msi.MsiEnumComponentsEx(_In_opt_ LPCTSTR szUserSid,_In_ DWORD dwContext,_In_ DWORD dwIndex,_Out_opt_ TCHAR szInstalledComponentCode[39],_Out_opt_ MSIINSTALLCONTEXT *pdwInstalledContext,_Out_opt_ LPTSTR szSid,_Inout_ LPDWORD pcchSid)
UINT WINAPI msi.MsiEnumComponentsExW(_In_opt_ LPCTSTR szUserSid,_In_ DWORD dwContext,_In_ DWORD dwIndex,_Out_opt_ TCHAR szInstalledComponentCode[39],_Out_opt_ MSIINSTALLCONTEXT *pdwInstalledContext,_Out_opt_ LPTSTR szSid,_Inout_ LPDWORD pcchSid)
UINT WINAPI msi.MsiEnumComponentsExA(_In_opt_ LPCTSTR szUserSid,_In_ DWORD dwContext,_In_ DWORD dwIndex,_Out_opt_ TCHAR szInstalledComponentCode[39],_Out_opt_ MSIINSTALLCONTEXT *pdwInstalledContext,_Out_opt_ LPTSTR szSid,_Inout_ LPDWORD pcchSid)
INT CALLBACK None.InstalluiHandlerRecord(LPVOID pvContext None,UINT iMessageType None,MSIHANDLE hRecord None)
UINT None msi.MsiSourceListSetInfo(_In_ LPCTSTR szProductCodeOrPatchCode,_In_opt_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD dwOptions,_In_ LPCTSTR szProperty,_In_ LPCTSTR szValue)
UINT None msi.MsiSourceListSetInfoW(_In_ LPCTSTR szProductCodeOrPatchCode,_In_opt_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD dwOptions,_In_ LPCTSTR szProperty,_In_ LPCTSTR szValue)
UINT None msi.MsiSourceListSetInfoA(_In_ LPCTSTR szProductCodeOrPatchCode,_In_opt_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD dwOptions,_In_ LPCTSTR szProperty,_In_ LPCTSTR szValue)
UINT None msi.MsiEnumPatches(_In_ LPCTSTR szProduct,_In_ DWORD iPatchIndex,_Out_ LPTSTR lpPatchBuf,_Out_ LPTSTR lpTransformsBuf,_Inout_ DWORD *pcchTransformsBuf)
UINT None msi.MsiEnumPatchesW(_In_ LPCTSTR szProduct,_In_ DWORD iPatchIndex,_Out_ LPTSTR lpPatchBuf,_Out_ LPTSTR lpTransformsBuf,_Inout_ DWORD *pcchTransformsBuf)
UINT None msi.MsiEnumPatchesA(_In_ LPCTSTR szProduct,_In_ DWORD iPatchIndex,_Out_ LPTSTR lpPatchBuf,_Out_ LPTSTR lpTransformsBuf,_Inout_ DWORD *pcchTransformsBuf)
UINT None msi.MsiSourceListGetInfo(_In_ LPCTSTR szProductCodeOrPatchCode,_In_opt_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD dwOptions,_In_ LPCTSTR szProperty,_Out_opt_ LPTSTR szValue,_Inout_opt_ LPDWORD pcchValue)
UINT None msi.MsiSourceListGetInfoW(_In_ LPCTSTR szProductCodeOrPatchCode,_In_opt_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD dwOptions,_In_ LPCTSTR szProperty,_Out_opt_ LPTSTR szValue,_Inout_opt_ LPDWORD pcchValue)
UINT None msi.MsiSourceListGetInfoA(_In_ LPCTSTR szProductCodeOrPatchCode,_In_opt_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD dwOptions,_In_ LPCTSTR szProperty,_Out_opt_ LPTSTR szValue,_Inout_opt_ LPDWORD pcchValue)
UINT None msi.MsiEnumComponentQualifiers(_In_ LPTSTR szComponent,_In_ DWORD iIndex,_Out_ LPTSTR lpQualifierBuf,_Inout_ DWORD *pcchQualifierBuf,_Out_ LPTSTR lpApplicationDataBuf,_Inout_ DWORD *pcchApplicationDataBuf)
UINT None msi.MsiEnumComponentQualifiersW(_In_ LPTSTR szComponent,_In_ DWORD iIndex,_Out_ LPTSTR lpQualifierBuf,_Inout_ DWORD *pcchQualifierBuf,_Out_ LPTSTR lpApplicationDataBuf,_Inout_ DWORD *pcchApplicationDataBuf)
UINT None msi.MsiEnumComponentQualifiersA(_In_ LPTSTR szComponent,_In_ DWORD iIndex,_Out_ LPTSTR lpQualifierBuf,_Inout_ DWORD *pcchQualifierBuf,_Out_ LPTSTR lpApplicationDataBuf,_Inout_ DWORD *pcchApplicationDataBuf)
UINT None msi.MsiCloseAllHandles(void None None)
UINT None msi.MsiProvideComponent(_In_ LPCTSTR szProduct,_In_ LPCTSTR szFeature,_In_ LPCTSTR szComponent,_In_ DWORD dwInstallMode,_Out_ LPTSTR lpPathBuf,_Inout_ DWORD *pcchPathBuf)
UINT None msi.MsiProvideComponentW(_In_ LPCTSTR szProduct,_In_ LPCTSTR szFeature,_In_ LPCTSTR szComponent,_In_ DWORD dwInstallMode,_Out_ LPTSTR lpPathBuf,_Inout_ DWORD *pcchPathBuf)
UINT None msi.MsiProvideComponentA(_In_ LPCTSTR szProduct,_In_ LPCTSTR szFeature,_In_ LPCTSTR szComponent,_In_ DWORD dwInstallMode,_Out_ LPTSTR lpPathBuf,_Inout_ DWORD *pcchPathBuf)
UINT None msi.MsiProvideComponent(_In_ LPCTSTR szProduct,_In_ LPCTSTR szFeature,_In_ LPCTSTR szComponent,_In_ DWORD dwInstallMode,_Out_ LPTSTR lpPathBuf,_Inout_ DWORD *pcchPathBuf)
UINT None msi.MsiProvideComponentW(_In_ LPCTSTR szProduct,_In_ LPCTSTR szFeature,_In_ LPCTSTR szComponent,_In_ DWORD dwInstallMode,_Out_ LPTSTR lpPathBuf,_Inout_ DWORD *pcchPathBuf)
UINT None msi.MsiProvideComponentA(_In_ LPCTSTR szProduct,_In_ LPCTSTR szFeature,_In_ LPCTSTR szComponent,_In_ DWORD dwInstallMode,_Out_ LPTSTR lpPathBuf,_Inout_ DWORD *pcchPathBuf)
NTSTATUS None None.UcmConnectorPdConnectionStateChanged([in] UCMCONNECTOR Connector,[in] PUCM_CONNECTOR_PD_CONN_STATE_CHANGED_PARAMS Params)
HRESULT None wudfx.RetrieveDevicePropertyStore([in None None,optional] PCWSTR pcwszServiceName,[in] WDF_PROPERTY_STORE_RETRIEVE_FLAGS Flags,[out] IWDFNamedPropertyStore **ppPropStore,[out None None,optional] WDF_PROPERTY_STORE_DISPOSITION *pDisposition)
STORPORT_API ULONG None.StorPortInitialize(_In_ PVOID Argument1,_In_ PVOID Argument2,_In_ PHW_INITIALIZATION_DATA HwInitializationData,_In_opt_ PVOID HwContext)
NTSTATUS None None.RPMUnloadAlternateDriverForDevice(_In_ HANDLE RegisteredDriver,_In_ ULONG64 HubID,_In_ ULONG ConnectionIndex)
UINT None msi.MsiEnableUIPreview(_In_ MSIHANDLE hDatabase,_Out_ MSIHANDLE *phPreview)
UINT None msi.MsiRemovePatches(_In_ LPCTSTR szPatchList,_In_ LPCTSTR szProductCode,_In_ INSTALLTYPE eUninstallType,_In_opt_ LPCTSTR szPropertyList)
UINT None msi.MsiRemovePatchesW(_In_ LPCTSTR szPatchList,_In_ LPCTSTR szProductCode,_In_ INSTALLTYPE eUninstallType,_In_opt_ LPCTSTR szPropertyList)
UINT None msi.MsiRemovePatchesA(_In_ LPCTSTR szPatchList,_In_ LPCTSTR szProductCode,_In_ INSTALLTYPE eUninstallType,_In_opt_ LPCTSTR szPropertyList)
VOID None None.USBD_RegisterHcFilter(_In_ PDEVICE_OBJECT DeviceObject,_In_ PDEVICE_OBJECT FilterDeviceObject)
INT CALLBACK None.InstalluiHandler(LPVOID pvContext None,UINT iMessageType None,LPCTSTR szMessage None)
INT CALLBACK None.INSTALLUI_HANDLERW(LPVOID pvContext None,UINT iMessageType None,LPCTSTR szMessage None)
INT CALLBACK None.INSTALLUI_HANDLERA(LPVOID pvContext None,UINT iMessageType None,LPCTSTR szMessage None)
UINT None msi.MsiEnableUIPreview(_In_ MSIHANDLE hDatabase,_Out_ MSIHANDLE *phPreview)
UINT None msi.MsiViewFetch(_In_ MSIHANDLE hView,_Out_ MSIHANDLE *phRecord)
NTSTATUS None None.USBD_SelectConfigUrbAllocateAndBuild(_In_ USBD_HANDLE USBDHandle,_In_ PUSB_CONFIGURATION_DESCRIPTOR ConfigurationDescriptor,_In_ PUSBD_INTERFACE_LIST_ENTRY InterfaceList,_Out_ PURB *Urb)
BOOL None None.WMPNotifySubscriptionPluginAddRemove(void None None)
FORCEINLINE void None.UCM_CONNECTOR_CONFIG_INIT(_Out_ PUCM_CONNECTOR_CONFIG Config,_In_ ULONGULONG ConnectorId)
UINT None msi.MsiSetComponentState(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szComponent,_In_ INSTALLSTATE iState)
UINT None msi.MsiSetComponentStateW(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szComponent,_In_ INSTALLSTATE iState)
UINT None msi.MsiSetComponentStateA(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szComponent,_In_ INSTALLSTATE iState)
UINT None msi.MsiReinstallFeature(_In_ LPCTSTR szProduct,_In_ LPCTSTR szFeature,_In_ DWORD dwReinstallMode)
UINT None msi.MsiReinstallFeatureW(_In_ LPCTSTR szProduct,_In_ LPCTSTR szFeature,_In_ DWORD dwReinstallMode)
UINT None msi.MsiReinstallFeatureA(_In_ LPCTSTR szProduct,_In_ LPCTSTR szFeature,_In_ DWORD dwReinstallMode)
HRESULT None wudfx.AssignDeviceInterfaceState([in] LPCGUID pDeviceInterfaceGuid,[in None None,optional] PCWSTR pReferenceString,[in] BOOL Enable)
UINT None msi.MsiSetTargetPath(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szFolder,_In_ LPCTSTR szFolderPath)
UINT None msi.MsiSetTargetPathW(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szFolder,_In_ LPCTSTR szFolderPath)
UINT None msi.MsiSetTargetPathA(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szFolder,_In_ LPCTSTR szFolderPath)
UINT None msi.MsiProvideComponent(_In_ LPCTSTR szProduct,_In_ LPCTSTR szFeature,_In_ LPCTSTR szComponent,_In_ DWORD dwInstallMode,_Out_ LPTSTR lpPathBuf,_Inout_ DWORD *pcchPathBuf)
UINT None msi.MsiProvideComponentW(_In_ LPCTSTR szProduct,_In_ LPCTSTR szFeature,_In_ LPCTSTR szComponent,_In_ DWORD dwInstallMode,_Out_ LPTSTR lpPathBuf,_Inout_ DWORD *pcchPathBuf)
UINT None msi.MsiProvideComponentA(_In_ LPCTSTR szProduct,_In_ LPCTSTR szFeature,_In_ LPCTSTR szComponent,_In_ DWORD dwInstallMode,_Out_ LPTSTR lpPathBuf,_Inout_ DWORD *pcchPathBuf)
UINT None msi.MsiGetFeatureInfo(_In_ MSIHANDLE hProduct,_In_ LPCTSTR szFeature,_Out_opt_ LPDWORD lpAttributes,_Out_opt_ LPTSTR lpTitleBuf,_Inout_opt_ LPDWORD pcchTitleBuf,_Out_opt_ LPTSTR lpHelpBuf,_Inout_opt_ LPDWORD pcchHelpBuf)
UINT None msi.MsiGetFeatureInfoW(_In_ MSIHANDLE hProduct,_In_ LPCTSTR szFeature,_Out_opt_ LPDWORD lpAttributes,_Out_opt_ LPTSTR lpTitleBuf,_Inout_opt_ LPDWORD pcchTitleBuf,_Out_opt_ LPTSTR lpHelpBuf,_Inout_opt_ LPDWORD pcchHelpBuf)
UINT None msi.MsiGetFeatureInfoA(_In_ MSIHANDLE hProduct,_In_ LPCTSTR szFeature,_Out_opt_ LPDWORD lpAttributes,_Out_opt_ LPTSTR lpTitleBuf,_Inout_opt_ LPDWORD pcchTitleBuf,_Out_opt_ LPTSTR lpHelpBuf,_Inout_opt_ LPDWORD pcchHelpBuf)
UINT None msi.MsiCloseAllHandles(void None None)
UINT WINAPI msi.MsiEnumComponentsEx(_In_opt_ LPCTSTR szUserSid,_In_ DWORD dwContext,_In_ DWORD dwIndex,_Out_opt_ TCHAR szInstalledComponentCode[39],_Out_opt_ MSIINSTALLCONTEXT *pdwInstalledContext,_Out_opt_ LPTSTR szSid,_Inout_ LPDWORD pcchSid)
UINT WINAPI msi.MsiEnumComponentsExW(_In_opt_ LPCTSTR szUserSid,_In_ DWORD dwContext,_In_ DWORD dwIndex,_Out_opt_ TCHAR szInstalledComponentCode[39],_Out_opt_ MSIINSTALLCONTEXT *pdwInstalledContext,_Out_opt_ LPTSTR szSid,_Inout_ LPDWORD pcchSid)
UINT WINAPI msi.MsiEnumComponentsExA(_In_opt_ LPCTSTR szUserSid,_In_ DWORD dwContext,_In_ DWORD dwIndex,_Out_opt_ TCHAR szInstalledComponentCode[39],_Out_opt_ MSIINSTALLCONTEXT *pdwInstalledContext,_Out_opt_ LPTSTR szSid,_Inout_ LPDWORD pcchSid)
INT CALLBACK None.InstalluiHandler(LPVOID pvContext None,UINT iMessageType None,LPCTSTR szMessage None)
INT CALLBACK None.INSTALLUI_HANDLERW(LPVOID pvContext None,UINT iMessageType None,LPCTSTR szMessage None)
INT CALLBACK None.INSTALLUI_HANDLERA(LPVOID pvContext None,UINT iMessageType None,LPCTSTR szMessage None)
INT CALLBACK None.InstalluiHandler(LPVOID pvContext None,UINT iMessageType None,LPCTSTR szMessage None)
INT CALLBACK None.INSTALLUI_HANDLERW(LPVOID pvContext None,UINT iMessageType None,LPCTSTR szMessage None)
INT CALLBACK None.INSTALLUI_HANDLERA(LPVOID pvContext None,UINT iMessageType None,LPCTSTR szMessage None)
UINT None msi.MsiDatabaseOpenView(_In_ MSIHANDLE hDatabase,_In_ LPCTSTR szQuery,_Out_ MSIHANDLE *phView)
UINT None msi.MsiDatabaseOpenViewW(_In_ MSIHANDLE hDatabase,_In_ LPCTSTR szQuery,_Out_ MSIHANDLE *phView)
UINT None msi.MsiDatabaseOpenViewA(_In_ MSIHANDLE hDatabase,_In_ LPCTSTR szQuery,_Out_ MSIHANDLE *phView)
UINT None msi.MsiDetermineApplicablePatches(_In_ LPCTSTR szProductPackagePath,_In_ DWORD cPatchInfo,_In_ PMSIPATCHSEQUENCEINFO pPatchInfo)
UINT None msi.MsiDetermineApplicablePatchesW(_In_ LPCTSTR szProductPackagePath,_In_ DWORD cPatchInfo,_In_ PMSIPATCHSEQUENCEINFO pPatchInfo)
UINT None msi.MsiDetermineApplicablePatchesA(_In_ LPCTSTR szProductPackagePath,_In_ DWORD cPatchInfo,_In_ PMSIPATCHSEQUENCEINFO pPatchInfo)
NTSTATUS None None.RPMRegisterAlternateDriver(_In_ PDRIVER_OBJECT DriverObject,_In_ LPCWSTR CompatibleId,_Out_ PHANDLE RegisteredDriver)
INSTALLUI_HANDLER None msi.MsiSetExternalUI(_In_ INSTALLUI_HANDLER puiHandler,_In_ DWORD dwMessageFilter,_In_ LPVOID pvContext)
INSTALLUI_HANDLER None msi.MsiSetExternalUIW(_In_ INSTALLUI_HANDLER puiHandler,_In_ DWORD dwMessageFilter,_In_ LPVOID pvContext)
INSTALLUI_HANDLER None msi.MsiSetExternalUIA(_In_ INSTALLUI_HANDLER puiHandler,_In_ DWORD dwMessageFilter,_In_ LPVOID pvContext)
UINT None msi.MsiViewFetch(_In_ MSIHANDLE hView,_Out_ MSIHANDLE *phRecord)
INSTALLUILEVEL None msi.MsiSetInternalUI(_In_ INSTALLUILEVEL dwUILevel,_Inout_ HWND *phWnd)
UINT None msi.MsiDetermineApplicablePatches(_In_ LPCTSTR szProductPackagePath,_In_ DWORD cPatchInfo,_In_ PMSIPATCHSEQUENCEINFO pPatchInfo)
UINT None msi.MsiDetermineApplicablePatchesW(_In_ LPCTSTR szProductPackagePath,_In_ DWORD cPatchInfo,_In_ PMSIPATCHSEQUENCEINFO pPatchInfo)
UINT None msi.MsiDetermineApplicablePatchesA(_In_ LPCTSTR szProductPackagePath,_In_ DWORD cPatchInfo,_In_ PMSIPATCHSEQUENCEINFO pPatchInfo)
UINT None msi.MsiSummaryInfoGetProperty(_In_ MSIHANDLE hSummaryInfo,_In_ UINT uiProperty,_Out_ UINT *puiDataType,_Out_ INT *piValue,_Out_ FILETIME *pftValue,_Out_ LPTSTR szValueBuf,_Inout_ DWORD *pcchValueBuf)
UINT None msi.MsiSummaryInfoGetPropertyW(_In_ MSIHANDLE hSummaryInfo,_In_ UINT uiProperty,_Out_ UINT *puiDataType,_Out_ INT *piValue,_Out_ FILETIME *pftValue,_Out_ LPTSTR szValueBuf,_Inout_ DWORD *pcchValueBuf)
UINT None msi.MsiSummaryInfoGetPropertyA(_In_ MSIHANDLE hSummaryInfo,_In_ UINT uiProperty,_Out_ UINT *puiDataType,_Out_ INT *piValue,_Out_ FILETIME *pftValue,_Out_ LPTSTR szValueBuf,_Inout_ DWORD *pcchValueBuf)
INSTALLUILEVEL None msi.MsiSetInternalUI(_In_ INSTALLUILEVEL dwUILevel,_Inout_ HWND *phWnd)
UINT None None.UiCreatePatchPackage(LPCTSTR szPcpPath None,LPCTSTR szPatchPath None,LPCTSTR szLogPath None,HWND hwndStatus None,LPCTSTR szTempFolder None,Bool fRemoveTempFolderContents None)
UINT None msi.MsiDatabaseGetPrimaryKeys(_In_ MSIHANDLE hDatabase,_In_ LPCTSTR szTableName,_Out_ MSIHANDLE *phRecord)
UINT None msi.MsiDatabaseGetPrimaryKeysW(_In_ MSIHANDLE hDatabase,_In_ LPCTSTR szTableName,_Out_ MSIHANDLE *phRecord)
UINT None msi.MsiDatabaseGetPrimaryKeysA(_In_ MSIHANDLE hDatabase,_In_ LPCTSTR szTableName,_Out_ MSIHANDLE *phRecord)
HRESULT None wudfx.RetrieveDevicePropertyStore([in None None,optional] PCWSTR pcwszServiceName,[in] WDF_PROPERTY_STORE_RETRIEVE_FLAGS Flags,[out] IWDFNamedPropertyStore **ppPropStore,[out None None,optional] WDF_PROPERTY_STORE_DISPOSITION *pDisposition)
UINT None msi.MsiDetermineApplicablePatches(_In_ LPCTSTR szProductPackagePath,_In_ DWORD cPatchInfo,_In_ PMSIPATCHSEQUENCEINFO pPatchInfo)
UINT None msi.MsiDetermineApplicablePatchesW(_In_ LPCTSTR szProductPackagePath,_In_ DWORD cPatchInfo,_In_ PMSIPATCHSEQUENCEINFO pPatchInfo)
UINT None msi.MsiDetermineApplicablePatchesA(_In_ LPCTSTR szProductPackagePath,_In_ DWORD cPatchInfo,_In_ PMSIPATCHSEQUENCEINFO pPatchInfo)
INSTALLUI_HANDLER None msi.MsiSetExternalUI(_In_ INSTALLUI_HANDLER puiHandler,_In_ DWORD dwMessageFilter,_In_ LPVOID pvContext)
INSTALLUI_HANDLER None msi.MsiSetExternalUIW(_In_ INSTALLUI_HANDLER puiHandler,_In_ DWORD dwMessageFilter,_In_ LPVOID pvContext)
INSTALLUI_HANDLER None msi.MsiSetExternalUIA(_In_ INSTALLUI_HANDLER puiHandler,_In_ DWORD dwMessageFilter,_In_ LPVOID pvContext)
UINT CALLBACK None.InitializeEmbeddedUI(_In_ MSIHANDLE hInstall,_In_ LPCWSTR wzResourcePath,_Inout_ LPDWORD pdwInternalUILevel)
LANGID None msi.MsiGetLanguage(_In_ MSIHANDLE hInstall)
INSTALLUI_HANDLER None msi.MsiSetExternalUI(_In_ INSTALLUI_HANDLER puiHandler,_In_ DWORD dwMessageFilter,_In_ LPVOID pvContext)
INSTALLUI_HANDLER None msi.MsiSetExternalUIW(_In_ INSTALLUI_HANDLER puiHandler,_In_ DWORD dwMessageFilter,_In_ LPVOID pvContext)
INSTALLUI_HANDLER None msi.MsiSetExternalUIA(_In_ INSTALLUI_HANDLER puiHandler,_In_ DWORD dwMessageFilter,_In_ LPVOID pvContext)
INSTALLUI_HANDLER None msi.MsiSetExternalUI(_In_ INSTALLUI_HANDLER puiHandler,_In_ DWORD dwMessageFilter,_In_ LPVOID pvContext)
INSTALLUI_HANDLER None msi.MsiSetExternalUIW(_In_ INSTALLUI_HANDLER puiHandler,_In_ DWORD dwMessageFilter,_In_ LPVOID pvContext)
INSTALLUI_HANDLER None msi.MsiSetExternalUIA(_In_ INSTALLUI_HANDLER puiHandler,_In_ DWORD dwMessageFilter,_In_ LPVOID pvContext)
UINT None msi.MsiDetermineApplicablePatches(_In_ LPCTSTR szProductPackagePath,_In_ DWORD cPatchInfo,_In_ PMSIPATCHSEQUENCEINFO pPatchInfo)
UINT None msi.MsiDetermineApplicablePatchesW(_In_ LPCTSTR szProductPackagePath,_In_ DWORD cPatchInfo,_In_ PMSIPATCHSEQUENCEINFO pPatchInfo)
UINT None msi.MsiDetermineApplicablePatchesA(_In_ LPCTSTR szProductPackagePath,_In_ DWORD cPatchInfo,_In_ PMSIPATCHSEQUENCEINFO pPatchInfo)
INSTALLUI_HANDLER None msi.MsiSetExternalUI(_In_ INSTALLUI_HANDLER puiHandler,_In_ DWORD dwMessageFilter,_In_ LPVOID pvContext)
INSTALLUI_HANDLER None msi.MsiSetExternalUIW(_In_ INSTALLUI_HANDLER puiHandler,_In_ DWORD dwMessageFilter,_In_ LPVOID pvContext)
INSTALLUI_HANDLER None msi.MsiSetExternalUIA(_In_ INSTALLUI_HANDLER puiHandler,_In_ DWORD dwMessageFilter,_In_ LPVOID pvContext)
UINT None msi.MsiDetermineApplicablePatches(_In_ LPCTSTR szProductPackagePath,_In_ DWORD cPatchInfo,_In_ PMSIPATCHSEQUENCEINFO pPatchInfo)
UINT None msi.MsiDetermineApplicablePatchesW(_In_ LPCTSTR szProductPackagePath,_In_ DWORD cPatchInfo,_In_ PMSIPATCHSEQUENCEINFO pPatchInfo)
UINT None msi.MsiDetermineApplicablePatchesA(_In_ LPCTSTR szProductPackagePath,_In_ DWORD cPatchInfo,_In_ PMSIPATCHSEQUENCEINFO pPatchInfo)
UINT None msi.MsiDetermineApplicablePatches(_In_ LPCTSTR szProductPackagePath,_In_ DWORD cPatchInfo,_In_ PMSIPATCHSEQUENCEINFO pPatchInfo)
UINT None msi.MsiDetermineApplicablePatchesW(_In_ LPCTSTR szProductPackagePath,_In_ DWORD cPatchInfo,_In_ PMSIPATCHSEQUENCEINFO pPatchInfo)
UINT None msi.MsiDetermineApplicablePatchesA(_In_ LPCTSTR szProductPackagePath,_In_ DWORD cPatchInfo,_In_ PMSIPATCHSEQUENCEINFO pPatchInfo)
UINT None msi.MsiDetermineApplicablePatches(_In_ LPCTSTR szProductPackagePath,_In_ DWORD cPatchInfo,_In_ PMSIPATCHSEQUENCEINFO pPatchInfo)
UINT None msi.MsiDetermineApplicablePatchesW(_In_ LPCTSTR szProductPackagePath,_In_ DWORD cPatchInfo,_In_ PMSIPATCHSEQUENCEINFO pPatchInfo)
UINT None msi.MsiDetermineApplicablePatchesA(_In_ LPCTSTR szProductPackagePath,_In_ DWORD cPatchInfo,_In_ PMSIPATCHSEQUENCEINFO pPatchInfo)
INSTALLUI_HANDLER None msi.MsiSetExternalUI(_In_ INSTALLUI_HANDLER puiHandler,_In_ DWORD dwMessageFilter,_In_ LPVOID pvContext)
INSTALLUI_HANDLER None msi.MsiSetExternalUIW(_In_ INSTALLUI_HANDLER puiHandler,_In_ DWORD dwMessageFilter,_In_ LPVOID pvContext)
INSTALLUI_HANDLER None msi.MsiSetExternalUIA(_In_ INSTALLUI_HANDLER puiHandler,_In_ DWORD dwMessageFilter,_In_ LPVOID pvContext)
UINT None msi.MsiDetermineApplicablePatches(_In_ LPCTSTR szProductPackagePath,_In_ DWORD cPatchInfo,_In_ PMSIPATCHSEQUENCEINFO pPatchInfo)
UINT None msi.MsiDetermineApplicablePatchesW(_In_ LPCTSTR szProductPackagePath,_In_ DWORD cPatchInfo,_In_ PMSIPATCHSEQUENCEINFO pPatchInfo)
UINT None msi.MsiDetermineApplicablePatchesA(_In_ LPCTSTR szProductPackagePath,_In_ DWORD cPatchInfo,_In_ PMSIPATCHSEQUENCEINFO pPatchInfo)
UINT None msi.MsiDetermineApplicablePatches(_In_ LPCTSTR szProductPackagePath,_In_ DWORD cPatchInfo,_In_ PMSIPATCHSEQUENCEINFO pPatchInfo)
UINT None msi.MsiDetermineApplicablePatchesW(_In_ LPCTSTR szProductPackagePath,_In_ DWORD cPatchInfo,_In_ PMSIPATCHSEQUENCEINFO pPatchInfo)
UINT None msi.MsiDetermineApplicablePatchesA(_In_ LPCTSTR szProductPackagePath,_In_ DWORD cPatchInfo,_In_ PMSIPATCHSEQUENCEINFO pPatchInfo)
UINT None msi.MsiDetermineApplicablePatches(_In_ LPCTSTR szProductPackagePath,_In_ DWORD cPatchInfo,_In_ PMSIPATCHSEQUENCEINFO pPatchInfo)
UINT None msi.MsiDetermineApplicablePatchesW(_In_ LPCTSTR szProductPackagePath,_In_ DWORD cPatchInfo,_In_ PMSIPATCHSEQUENCEINFO pPatchInfo)
UINT None msi.MsiDetermineApplicablePatchesA(_In_ LPCTSTR szProductPackagePath,_In_ DWORD cPatchInfo,_In_ PMSIPATCHSEQUENCEINFO pPatchInfo)
INSTALLUILEVEL None msi.MsiSetInternalUI(_In_ INSTALLUILEVEL dwUILevel,_Inout_ HWND *phWnd)
INSTALLUILEVEL None msi.MsiSetInternalUI(_In_ INSTALLUILEVEL dwUILevel,_Inout_ HWND *phWnd)
INSTALLUI_HANDLER None msi.MsiSetExternalUI(_In_ INSTALLUI_HANDLER puiHandler,_In_ DWORD dwMessageFilter,_In_ LPVOID pvContext)
INSTALLUI_HANDLER None msi.MsiSetExternalUIW(_In_ INSTALLUI_HANDLER puiHandler,_In_ DWORD dwMessageFilter,_In_ LPVOID pvContext)
INSTALLUI_HANDLER None msi.MsiSetExternalUIA(_In_ INSTALLUI_HANDLER puiHandler,_In_ DWORD dwMessageFilter,_In_ LPVOID pvContext)
BOOL None msi.MsiGetMode(_In_ MSIHANDLE hInstall,_In_ MSIRUNMODE iRunMode)
UINT WINAPI msi.MsiJoinTransaction(_In_ MSIHANDLE hTransactionID,_In_ DWORD dwTransactionAttributes,_Out_ HANDLE *phChangeOfOwnerEvent)
UINT None None.UiCreatePatchPackageEx(LPCTSTR szPcpPath None,LPCTSTR szPatchPath None,LPCTSTR szLogPath None,HWND hwndStatus None,LPCTSTR szTempFolder None,BOOL fRemoveTempFolderContents None,DWORD dwFlags None,DWORD dwReserved None)
UINT None msi.MsiSetProperty(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szName,_In_ LPCTSTR szValue)
UINT None msi.MsiSetPropertyW(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szName,_In_ LPCTSTR szValue)
UINT None msi.MsiSetPropertyA(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szName,_In_ LPCTSTR szValue)
UINT None msi.MsiDoAction(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szAction)
UINT None msi.MsiDoActionW(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szAction)
UINT None msi.MsiDoActionA(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szAction)
UINT None msi.MsiSetInstallLevel(_In_ MSIHANDLE hInstall,_In_ int iInstallLevel)
UINT None msi.MsiSourceListClearMediaDisk(_In_ LPCTSTR szProductCodeOrPatchCode,_In_opt_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD dwOptions,_In_ DWORD dwDiskID)
UINT None msi.MsiSourceListClearMediaDiskW(_In_ LPCTSTR szProductCodeOrPatchCode,_In_opt_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD dwOptions,_In_ DWORD dwDiskID)
UINT None msi.MsiSourceListClearMediaDiskA(_In_ LPCTSTR szProductCodeOrPatchCode,_In_opt_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD dwOptions,_In_ DWORD dwDiskID)
UINT None msi.MsiOpenPackage(_In_ LPCTSTR szPackagePath,_Out_ MSIHANDLE *hProduct)
UINT None msi.MsiOpenPackageW(_In_ LPCTSTR szPackagePath,_Out_ MSIHANDLE *hProduct)
UINT None msi.MsiOpenPackageA(_In_ LPCTSTR szPackagePath,_Out_ MSIHANDLE *hProduct)
SC_HANDLE WINAPI advapi32.CreateService(_In_ SC_HANDLE hSCManager,_In_ LPCTSTR lpServiceName,_In_opt_ LPCTSTR lpDisplayName,_In_ DWORD dwDesiredAccess,_In_ DWORD dwServiceType,_In_ DWORD dwStartType,_In_ DWORD dwErrorControl,_In_opt_ LPCTSTR lpBinaryPathName,_In_opt_ LPCTSTR lpLoadOrderGroup,_Out_opt_ LPDWORD lpdwTagId,_In_opt_ LPCTSTR lpDependencies,_In_opt_ LPCTSTR lpServiceStartName,_In_opt_ LPCTSTR lpPassword)
SC_HANDLE WINAPI advapi32.CreateServiceW(_In_ SC_HANDLE hSCManager,_In_ LPCTSTR lpServiceName,_In_opt_ LPCTSTR lpDisplayName,_In_ DWORD dwDesiredAccess,_In_ DWORD dwServiceType,_In_ DWORD dwStartType,_In_ DWORD dwErrorControl,_In_opt_ LPCTSTR lpBinaryPathName,_In_opt_ LPCTSTR lpLoadOrderGroup,_Out_opt_ LPDWORD lpdwTagId,_In_opt_ LPCTSTR lpDependencies,_In_opt_ LPCTSTR lpServiceStartName,_In_opt_ LPCTSTR lpPassword)
SC_HANDLE WINAPI advapi32.CreateServiceA(_In_ SC_HANDLE hSCManager,_In_ LPCTSTR lpServiceName,_In_opt_ LPCTSTR lpDisplayName,_In_ DWORD dwDesiredAccess,_In_ DWORD dwServiceType,_In_ DWORD dwStartType,_In_ DWORD dwErrorControl,_In_opt_ LPCTSTR lpBinaryPathName,_In_opt_ LPCTSTR lpLoadOrderGroup,_Out_opt_ LPDWORD lpdwTagId,_In_opt_ LPCTSTR lpDependencies,_In_opt_ LPCTSTR lpServiceStartName,_In_opt_ LPCTSTR lpPassword)
UINT None msi.MsiGetProperty(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szName,_Out_ LPTSTR szValueBuf,_Inout_ DWORD *pchValueBuf)
UINT None msi.MsiGetPropertyW(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szName,_Out_ LPTSTR szValueBuf,_Inout_ DWORD *pchValueBuf)
UINT None msi.MsiGetPropertyA(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szName,_Out_ LPTSTR szValueBuf,_Inout_ DWORD *pchValueBuf)
UINT None msi.MsiGetFeatureState(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szFeature,_Out_ INSTALLSTATE *piInstalled,_Out_ INSTALLSTATE *piAction)
UINT None msi.MsiGetFeatureStateW(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szFeature,_Out_ INSTALLSTATE *piInstalled,_Out_ INSTALLSTATE *piAction)
UINT None msi.MsiGetFeatureStateA(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szFeature,_Out_ INSTALLSTATE *piInstalled,_Out_ INSTALLSTATE *piAction)
UINT None msi.MsiSetFeatureAttributes(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szFeature,_In_ DWORD dwAttributes)
UINT None msi.MsiSetFeatureAttributesW(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szFeature,_In_ DWORD dwAttributes)
UINT None msi.MsiSetFeatureAttributesA(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szFeature,_In_ DWORD dwAttributes)
UINT None msi.MsiEnumPatchesEx(_In_opt_ LPCTSTR szProductCode,_In_opt_ LPCTSTR szUserSid,_In_ DWORD dwContext,_In_ DWORD dwFilter,_In_ DWORD dwIndex,_Out_opt_ TCHAR szPatchCode[39],_Out_opt_ TCHAR szTargetProductCode[39],_Out_opt_ MSIINSTALLCONTEXT *pdwTargetProductContext,_Out_opt_ LPTSTR szTargetUserSid,_Inout_opt_ LPDWORD pcchTargetUserSid)
UINT None msi.MsiEnumPatchesExW(_In_opt_ LPCTSTR szProductCode,_In_opt_ LPCTSTR szUserSid,_In_ DWORD dwContext,_In_ DWORD dwFilter,_In_ DWORD dwIndex,_Out_opt_ TCHAR szPatchCode[39],_Out_opt_ TCHAR szTargetProductCode[39],_Out_opt_ MSIINSTALLCONTEXT *pdwTargetProductContext,_Out_opt_ LPTSTR szTargetUserSid,_Inout_opt_ LPDWORD pcchTargetUserSid)
UINT None msi.MsiEnumPatchesExA(_In_opt_ LPCTSTR szProductCode,_In_opt_ LPCTSTR szUserSid,_In_ DWORD dwContext,_In_ DWORD dwFilter,_In_ DWORD dwIndex,_Out_opt_ TCHAR szPatchCode[39],_Out_opt_ TCHAR szTargetProductCode[39],_Out_opt_ MSIINSTALLCONTEXT *pdwTargetProductContext,_Out_opt_ LPTSTR szTargetUserSid,_Inout_opt_ LPDWORD pcchTargetUserSid)
UINT None msi.MsiDatabaseMerge(_In_ MSIHANDLE hDatabase,_In_ MSIHANDLE hDatabaseMerge,_In_ LPCTSTR szTableName)
UINT None msi.MsiDatabaseMergeW(_In_ MSIHANDLE hDatabase,_In_ MSIHANDLE hDatabaseMerge,_In_ LPCTSTR szTableName)
UINT None msi.MsiDatabaseMergeA(_In_ MSIHANDLE hDatabase,_In_ MSIHANDLE hDatabaseMerge,_In_ LPCTSTR szTableName)
UINT None msi.MsiDetermineApplicablePatches(_In_ LPCTSTR szProductPackagePath,_In_ DWORD cPatchInfo,_In_ PMSIPATCHSEQUENCEINFO pPatchInfo)
UINT None msi.MsiDetermineApplicablePatchesW(_In_ LPCTSTR szProductPackagePath,_In_ DWORD cPatchInfo,_In_ PMSIPATCHSEQUENCEINFO pPatchInfo)
UINT None msi.MsiDetermineApplicablePatchesA(_In_ LPCTSTR szProductPackagePath,_In_ DWORD cPatchInfo,_In_ PMSIPATCHSEQUENCEINFO pPatchInfo)
UINT None msi.MsiVerifyDiskSpace(_In_ MSIHANDLE hInstall)
UINT None msi.MsiGetComponentState(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szComponent,_Out_ INSTALLSTATE *piInstalled,_Out_ INSTALLSTATE *piAction)
UINT None msi.MsiGetComponentStateW(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szComponent,_Out_ INSTALLSTATE *piInstalled,_Out_ INSTALLSTATE *piAction)
UINT None msi.MsiGetComponentStateA(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szComponent,_Out_ INSTALLSTATE *piInstalled,_Out_ INSTALLSTATE *piAction)
INSTALLUILEVEL None msi.MsiSetInternalUI(_In_ INSTALLUILEVEL dwUILevel,_Inout_ HWND *phWnd)
UINT None msi.MsiSummaryInfoGetProperty(_In_ MSIHANDLE hSummaryInfo,_In_ UINT uiProperty,_Out_ UINT *puiDataType,_Out_ INT *piValue,_Out_ FILETIME *pftValue,_Out_ LPTSTR szValueBuf,_Inout_ DWORD *pcchValueBuf)
UINT None msi.MsiSummaryInfoGetPropertyW(_In_ MSIHANDLE hSummaryInfo,_In_ UINT uiProperty,_Out_ UINT *puiDataType,_Out_ INT *piValue,_Out_ FILETIME *pftValue,_Out_ LPTSTR szValueBuf,_Inout_ DWORD *pcchValueBuf)
UINT None msi.MsiSummaryInfoGetPropertyA(_In_ MSIHANDLE hSummaryInfo,_In_ UINT uiProperty,_Out_ UINT *puiDataType,_Out_ INT *piValue,_Out_ FILETIME *pftValue,_Out_ LPTSTR szValueBuf,_Inout_ DWORD *pcchValueBuf)
INSTALLUILEVEL None msi.MsiSetInternalUI(_In_ INSTALLUILEVEL dwUILevel,_Inout_ HWND *phWnd)
UINT None msi.MsiPreviewDialog(_In_ MSIHANDLE hPreview,_In_ LPCTSTR szDialogName)
UINT None msi.MsiPreviewDialogW(_In_ MSIHANDLE hPreview,_In_ LPCTSTR szDialogName)
UINT None msi.MsiPreviewDialogA(_In_ MSIHANDLE hPreview,_In_ LPCTSTR szDialogName)
SERVICE_STATUS_HANDLE WINAPI advapi32.RegisterServiceCtrlHandlerEx(_In_ LPCTSTR lpServiceName,_In_ LPHANDLER_FUNCTION_EX lpHandlerProc,_In_opt_ LPVOID lpContext)
SERVICE_STATUS_HANDLE WINAPI advapi32.RegisterServiceCtrlHandlerExW(_In_ LPCTSTR lpServiceName,_In_ LPHANDLER_FUNCTION_EX lpHandlerProc,_In_opt_ LPVOID lpContext)
SERVICE_STATUS_HANDLE WINAPI advapi32.RegisterServiceCtrlHandlerExA(_In_ LPCTSTR lpServiceName,_In_ LPHANDLER_FUNCTION_EX lpHandlerProc,_In_opt_ LPVOID lpContext)
SC_HANDLE WINAPI advapi32.CreateService(_In_ SC_HANDLE hSCManager,_In_ LPCTSTR lpServiceName,_In_opt_ LPCTSTR lpDisplayName,_In_ DWORD dwDesiredAccess,_In_ DWORD dwServiceType,_In_ DWORD dwStartType,_In_ DWORD dwErrorControl,_In_opt_ LPCTSTR lpBinaryPathName,_In_opt_ LPCTSTR lpLoadOrderGroup,_Out_opt_ LPDWORD lpdwTagId,_In_opt_ LPCTSTR lpDependencies,_In_opt_ LPCTSTR lpServiceStartName,_In_opt_ LPCTSTR lpPassword)
SC_HANDLE WINAPI advapi32.CreateServiceW(_In_ SC_HANDLE hSCManager,_In_ LPCTSTR lpServiceName,_In_opt_ LPCTSTR lpDisplayName,_In_ DWORD dwDesiredAccess,_In_ DWORD dwServiceType,_In_ DWORD dwStartType,_In_ DWORD dwErrorControl,_In_opt_ LPCTSTR lpBinaryPathName,_In_opt_ LPCTSTR lpLoadOrderGroup,_Out_opt_ LPDWORD lpdwTagId,_In_opt_ LPCTSTR lpDependencies,_In_opt_ LPCTSTR lpServiceStartName,_In_opt_ LPCTSTR lpPassword)
SC_HANDLE WINAPI advapi32.CreateServiceA(_In_ SC_HANDLE hSCManager,_In_ LPCTSTR lpServiceName,_In_opt_ LPCTSTR lpDisplayName,_In_ DWORD dwDesiredAccess,_In_ DWORD dwServiceType,_In_ DWORD dwStartType,_In_ DWORD dwErrorControl,_In_opt_ LPCTSTR lpBinaryPathName,_In_opt_ LPCTSTR lpLoadOrderGroup,_Out_opt_ LPDWORD lpdwTagId,_In_opt_ LPCTSTR lpDependencies,_In_opt_ LPCTSTR lpServiceStartName,_In_opt_ LPCTSTR lpPassword)
UINT None msi.MsiDatabaseImport(_In_ MSIHANDLE hDatabase,_In_ LPCTSTR szFolderPath,_In_ LPCTSTR szFileName)
UINT None msi.MsiDatabaseImportW(_In_ MSIHANDLE hDatabase,_In_ LPCTSTR szFolderPath,_In_ LPCTSTR szFileName)
UINT None msi.MsiDatabaseImportA(_In_ MSIHANDLE hDatabase,_In_ LPCTSTR szFolderPath,_In_ LPCTSTR szFileName)
UINT None msi.MsiPreviewBillboard(_In_ MSIHANDLE hPreview,_In_ LPCTSTR szControlName,_In_ LPCTSTR szBillboard)
UINT None msi.MsiPreviewBillboardW(_In_ MSIHANDLE hPreview,_In_ LPCTSTR szControlName,_In_ LPCTSTR szBillboard)
UINT None msi.MsiPreviewBillboardA(_In_ MSIHANDLE hPreview,_In_ LPCTSTR szControlName,_In_ LPCTSTR szBillboard)
MSICONDITION None msi.MsiDatabaseIsTablePersistent(_In_ MSIHANDLE hDatabase,_In_ LPCTSTR szTableName)
MSICONDITION None msi.MsiDatabaseIsTablePersistentW(_In_ MSIHANDLE hDatabase,_In_ LPCTSTR szTableName)
MSICONDITION None msi.MsiDatabaseIsTablePersistentA(_In_ MSIHANDLE hDatabase,_In_ LPCTSTR szTableName)
MSICONDITION None msi.MsiEvaluateCondition(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szCondition)
MSICONDITION None msi.MsiEvaluateConditionW(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szCondition)
MSICONDITION None msi.MsiEvaluateConditionA(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szCondition)
UINT None msi.MsiGetTargetPath(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szFolder,_Out_ LPTSTR szPathBuf,_Inout_ DWORD *pcchPathBuf)
UINT None msi.MsiGetTargetPathW(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szFolder,_Out_ LPTSTR szPathBuf,_Inout_ DWORD *pcchPathBuf)
UINT None msi.MsiGetTargetPathA(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szFolder,_Out_ LPTSTR szPathBuf,_Inout_ DWORD *pcchPathBuf)
UINT None msi.MsiFormatRecord(_In_ MSIHANDLE hInstall,_In_ MSIHANDLE hRecord,_Out_ LPTSTR szResultBuf,_Inout_ DWORD *pcchResultBuf)
UINT None msi.MsiFormatRecordW(_In_ MSIHANDLE hInstall,_In_ MSIHANDLE hRecord,_Out_ LPTSTR szResultBuf,_Inout_ DWORD *pcchResultBuf)
UINT None msi.MsiFormatRecordA(_In_ MSIHANDLE hInstall,_In_ MSIHANDLE hRecord,_Out_ LPTSTR szResultBuf,_Inout_ DWORD *pcchResultBuf)
MSIDBERROR None msi.MsiViewGetError(_In_ MSIHANDLE hView,_Out_ LPTSTR szColumnNameBuffer,_Inout_ DWORD *pcchBuf)
MSIDBERROR None msi.MsiViewGetErrorW(_In_ MSIHANDLE hView,_Out_ LPTSTR szColumnNameBuffer,_Inout_ DWORD *pcchBuf)
MSIDBERROR None msi.MsiViewGetErrorA(_In_ MSIHANDLE hView,_Out_ LPTSTR szColumnNameBuffer,_Inout_ DWORD *pcchBuf)
UINT None msi.MsiDatabaseCommit(_In_ MSIHANDLE hDatabase)
UINT None msi.MsiSummaryInfoGetPropertyCount(_In_ MSIHANDLE hSummaryInfo,_Out_ UINT *puiPropertyCount)
unsigned int msi.MsiRecordClearData(_In_ MSIHANDLE hRecord)
UINT None msi.MsiRecordSetStream(_In_ MSIHANDLE hRecord,_In_ UNIT iField,_In_ LPCTSTR szFilePath)
UINT None msi.MsiRecordSetStreamW(_In_ MSIHANDLE hRecord,_In_ UNIT iField,_In_ LPCTSTR szFilePath)
UINT None msi.MsiRecordSetStreamA(_In_ MSIHANDLE hRecord,_In_ UNIT iField,_In_ LPCTSTR szFilePath)
DWORD WINAPI None.HandlerEx(_In_ DWORD dwControl,_In_ DWORD dwEventType,_In_ LPVOID lpEventData,_In_ LPVOID lpContext)
UINT None msi.MsiCreateTransformSummaryInfo(_In_ MSIHANDLE hDatabase,_In_ MSIHANDLE hDatabaseReference,_In_ LPCTSTR szTransformFile,_In_ int iErrorConditions,_In_ int iValidation)
UINT None msi.MsiCreateTransformSummaryInfoW(_In_ MSIHANDLE hDatabase,_In_ MSIHANDLE hDatabaseReference,_In_ LPCTSTR szTransformFile,_In_ int iErrorConditions,_In_ int iValidation)
UINT None msi.MsiCreateTransformSummaryInfoA(_In_ MSIHANDLE hDatabase,_In_ MSIHANDLE hDatabaseReference,_In_ LPCTSTR szTransformFile,_In_ int iErrorConditions,_In_ int iValidation)
UINT None msi.MsiDatabaseExport(_In_ MSIHANDLE hDatabase,_In_ LPCTSTR szTableName,_In_ LPCTSTR szFolderPath,_In_ LPCTSTR szFileName)
UINT None msi.MsiDatabaseExportW(_In_ MSIHANDLE hDatabase,_In_ LPCTSTR szTableName,_In_ LPCTSTR szFolderPath,_In_ LPCTSTR szFileName)
UINT None msi.MsiDatabaseExportA(_In_ MSIHANDLE hDatabase,_In_ LPCTSTR szTableName,_In_ LPCTSTR szFolderPath,_In_ LPCTSTR szFileName)
int None msi.MsiProcessMessage(_In_ MSIHANDLE hInstall,_In_ INSTALLMESSAGE eMessageType,_In_ MSIHANDLE hRecord)
UINT None msi.MsiEnumFeatures(_In_ LPCTSTR szProduct,_In_ DWORD iFeatureIndex,_Out_ LPTSTR lpFeatureBuf,_Out_ LPTSTR lpParentBuf)
UINT None msi.MsiEnumFeaturesW(_In_ LPCTSTR szProduct,_In_ DWORD iFeatureIndex,_Out_ LPTSTR lpFeatureBuf,_Out_ LPTSTR lpParentBuf)
UINT None msi.MsiEnumFeaturesA(_In_ LPCTSTR szProduct,_In_ DWORD iFeatureIndex,_Out_ LPTSTR lpFeatureBuf,_Out_ LPTSTR lpParentBuf)
LANGID None msi.MsiGetLanguage(_In_ MSIHANDLE hInstall)
UINT None msi.MsiViewExecute(_In_ MSIHANDLE hView,_In_ MSIHANDLE hRecord)
unsigned int msi.MsiRecordGetFieldCount(_In_ MSIHANDLE hRecord)
UINT None msi.MsiGetFeatureCost(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szFeature,_In_ MSICOSTTREE iCostTree,_In_ INSTALLSTATE iState,_Out_ INT *piCost)
UINT None msi.MsiGetFeatureCostW(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szFeature,_In_ MSICOSTTREE iCostTree,_In_ INSTALLSTATE iState,_Out_ INT *piCost)
UINT None msi.MsiGetFeatureCostA(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szFeature,_In_ MSICOSTTREE iCostTree,_In_ INSTALLSTATE iState,_Out_ INT *piCost)
UINT None msi.MsiDatabaseGenerateTransform(_In_ MSIHANDLE hDatabase,_In_ MSIHANDLE hDatabaseReference,_In_ LPCTSTR szTransformFile,_In_ int iReserved1,_In_ int iReserved2)
UINT None msi.MsiDatabaseGenerateTransformW(_In_ MSIHANDLE hDatabase,_In_ MSIHANDLE hDatabaseReference,_In_ LPCTSTR szTransformFile,_In_ int iReserved1,_In_ int iReserved2)
UINT None msi.MsiDatabaseGenerateTransformA(_In_ MSIHANDLE hDatabase,_In_ MSIHANDLE hDatabaseReference,_In_ LPCTSTR szTransformFile,_In_ int iReserved1,_In_ int iReserved2)
BOOL WINAPI advapi32.ControlServiceEx(_In_ SC_HANDLE hService,_In_ DWORD dwControl,_In_ DWORD dwInfoLevel,_Inout_ PVOID pControlParams)
BOOL WINAPI advapi32.ControlServiceExW(_In_ SC_HANDLE hService,_In_ DWORD dwControl,_In_ DWORD dwInfoLevel,_Inout_ PVOID pControlParams)
BOOL WINAPI advapi32.ControlServiceExA(_In_ SC_HANDLE hService,_In_ DWORD dwControl,_In_ DWORD dwInfoLevel,_Inout_ PVOID pControlParams)
MSIDBSTATE None msi.MsiGetDatabaseState(_In_ MSIHANDLE hDatabase)
BOOL WINAPI advapi32.SetServiceBits(_In_ SERVICE_STATUS_HANDLE hServiceStatus,_In_ DWORD dwServiceBits,_In_ BOOL bSetBitsOn,_In_ BOOL bUpdateImmediately)
UINT None msi.MsiVerifyPackage(_In_ LPCTSTR szPackagePath)
UINT None msi.MsiVerifyPackageW(_In_ LPCTSTR szPackagePath)
UINT None msi.MsiVerifyPackageA(_In_ LPCTSTR szPackagePath)
UINT None msi.MsiGetSourcePath(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szFolder,_Out_ LPTSTR szPathBuf,_Inout_ DWORD *pcchPathBuf)
UINT None msi.MsiGetSourcePathW(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szFolder,_Out_ LPTSTR szPathBuf,_Inout_ DWORD *pcchPathBuf)
UINT None msi.MsiGetSourcePathA(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szFolder,_Out_ LPTSTR szPathBuf,_Inout_ DWORD *pcchPathBuf)
UINT None msi.MsiSummaryInfoPersist(_In_ MSIHANDLE hSummaryInfo)
BOOL WINAPI advapi32.GetServiceKeyName(_In_ SC_HANDLE hSCManager,_In_ LPCTSTR lpDisplayName,_Out_opt_ LPTSTR lpServiceName,_Inout_ LPDWORD lpcchBuffer)
BOOL WINAPI advapi32.GetServiceKeyNameW(_In_ SC_HANDLE hSCManager,_In_ LPCTSTR lpDisplayName,_Out_opt_ LPTSTR lpServiceName,_Inout_ LPDWORD lpcchBuffer)
BOOL WINAPI advapi32.GetServiceKeyNameA(_In_ SC_HANDLE hSCManager,_In_ LPCTSTR lpDisplayName,_Out_opt_ LPTSTR lpServiceName,_Inout_ LPDWORD lpcchBuffer)
BOOL WINAPI advapi32.QueryServiceConfig2(_In_ SC_HANDLE hService,_In_ DWORD dwInfoLevel,_Out_opt_ LPBYTE lpBuffer,_In_ DWORD cbBufSize,_Out_ LPDWORD pcbBytesNeeded)
BOOL WINAPI advapi32.QueryServiceConfig2W(_In_ SC_HANDLE hService,_In_ DWORD dwInfoLevel,_Out_opt_ LPBYTE lpBuffer,_In_ DWORD cbBufSize,_Out_ LPDWORD pcbBytesNeeded)
BOOL WINAPI advapi32.QueryServiceConfig2A(_In_ SC_HANDLE hService,_In_ DWORD dwInfoLevel,_Out_opt_ LPBYTE lpBuffer,_In_ DWORD cbBufSize,_Out_ LPDWORD pcbBytesNeeded)
BOOL WINAPI advapi32.QueryServiceStatusEx(_In_ SC_HANDLE hService,_In_ SC_STATUS_TYPE InfoLevel,_Out_opt_ LPBYTE lpBuffer,_In_ DWORD cbBufSize,_Out_ LPDWORD pcbBytesNeeded)
UINT None msi.MsiViewClose(_In_ MSIHANDLE hView)
UINT None msi.MsiSetFeatureAttributes(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szFeature,_In_ DWORD dwAttributes)
UINT None msi.MsiSetFeatureAttributesW(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szFeature,_In_ DWORD dwAttributes)
UINT None msi.MsiSetFeatureAttributesA(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szFeature,_In_ DWORD dwAttributes)
UINT None msi.MsiEnumComponentCosts(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szComponent,_In_ DWORD dwIndex,_In_ INSTALLSTATE iState,_Out_ LPTSTR lpDriveBuf,_Inout_ DWORD *pcchDriveBuf,_Out_ int *piCost,_Out_ int *pTempCost)
UINT None msi.MsiEnumComponentCostsW(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szComponent,_In_ DWORD dwIndex,_In_ INSTALLSTATE iState,_Out_ LPTSTR lpDriveBuf,_Inout_ DWORD *pcchDriveBuf,_Out_ int *piCost,_Out_ int *pTempCost)
UINT None msi.MsiEnumComponentCostsA(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szComponent,_In_ DWORD dwIndex,_In_ INSTALLSTATE iState,_Out_ LPTSTR lpDriveBuf,_Inout_ DWORD *pcchDriveBuf,_Out_ int *piCost,_Out_ int *pTempCost)
UINT None msi.MsiSetFeatureState(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szFeature,_In_ INSTALLSTATE iState)
UINT None msi.MsiSetFeatureStateW(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szFeature,_In_ INSTALLSTATE iState)
UINT None msi.MsiSetFeatureStateA(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szFeature,_In_ INSTALLSTATE iState)
BOOL WINAPI advapi32.NotifyBootConfigStatus(_In_ BOOL BootAcceptable)
BOOL WINAPI advapi32.EnumServicesStatusEx(_In_ SC_HANDLE hSCManager,_In_ SC_ENUM_TYPE InfoLevel,_In_ DWORD dwServiceType,_In_ DWORD dwServiceState,_Out_opt_ LPBYTE lpServices,_In_ DWORD cbBufSize,_Out_ LPDWORD pcbBytesNeeded,_Out_ LPDWORD lpServicesReturned,_Inout_opt_ LPDWORD lpResumeHandle,_In_opt_ LPCTSTR pszGroupName)
BOOL WINAPI advapi32.EnumServicesStatusExW(_In_ SC_HANDLE hSCManager,_In_ SC_ENUM_TYPE InfoLevel,_In_ DWORD dwServiceType,_In_ DWORD dwServiceState,_Out_opt_ LPBYTE lpServices,_In_ DWORD cbBufSize,_Out_ LPDWORD pcbBytesNeeded,_Out_ LPDWORD lpServicesReturned,_Inout_opt_ LPDWORD lpResumeHandle,_In_opt_ LPCTSTR pszGroupName)
BOOL WINAPI advapi32.EnumServicesStatusExA(_In_ SC_HANDLE hSCManager,_In_ SC_ENUM_TYPE InfoLevel,_In_ DWORD dwServiceType,_In_ DWORD dwServiceState,_Out_opt_ LPBYTE lpServices,_In_ DWORD cbBufSize,_Out_ LPDWORD pcbBytesNeeded,_Out_ LPDWORD lpServicesReturned,_Inout_opt_ LPDWORD lpResumeHandle,_In_opt_ LPCTSTR pszGroupName)
UINT None msi.MsiSequence(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szTable,_In_ INT iSequenceMode)
UINT None msi.MsiSequenceW(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szTable,_In_ INT iSequenceMode)
UINT None msi.MsiSequenceA(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szTable,_In_ INT iSequenceMode)
MSIHANDLE None msi.MsiGetActiveDatabase(_In_ MSIHANDLE hInstall)
MSIHANDLE None msi.MsiGetLastErrorRecord(void None None)
DWORD WINAPI sechost.SubscribeServiceChangeNotifications(_In_ SC_HANDLE hService,_In_ SC_EVENT_TYPE eEventType,_In_ PSC_NOTIFICATION_CALLBACK pCallback,_In_opt_ PVOID pCallbackContext,_Out_ PSC_NOTIFICATION_REGISTRATION *pSubscription)
BOOL WINAPI advapi32.EnumDependentServices(_In_ SC_HANDLE hService,_In_ DWORD dwServiceState,_Out_opt_ LPENUM_SERVICE_STATUS lpServices,_In_ DWORD cbBufSize,_Out_ LPDWORD pcbBytesNeeded,_Out_ LPDWORD lpServicesReturned)
BOOL WINAPI advapi32.EnumDependentServicesW(_In_ SC_HANDLE hService,_In_ DWORD dwServiceState,_Out_opt_ LPENUM_SERVICE_STATUS lpServices,_In_ DWORD cbBufSize,_Out_ LPDWORD pcbBytesNeeded,_Out_ LPDWORD lpServicesReturned)
BOOL WINAPI advapi32.EnumDependentServicesA(_In_ SC_HANDLE hService,_In_ DWORD dwServiceState,_Out_opt_ LPENUM_SERVICE_STATUS lpServices,_In_ DWORD cbBufSize,_Out_ LPDWORD pcbBytesNeeded,_Out_ LPDWORD lpServicesReturned)
UINT None msi.MsiDatabaseApplyTransform(_In_ MSIHANDLE hDatabase,_In_ LPCTSTR szTransformFile,_In_ int iErrorConditions)
UINT None msi.MsiDatabaseApplyTransformW(_In_ MSIHANDLE hDatabase,_In_ LPCTSTR szTransformFile,_In_ int iErrorConditions)
UINT None msi.MsiDatabaseApplyTransformA(_In_ MSIHANDLE hDatabase,_In_ LPCTSTR szTransformFile,_In_ int iErrorConditions)
UINT None msi.MsiViewModify(_In_ MSIHANDLE hView,_In_ MSIMODIFY eModifyMode,_In_ MSIHANDLE hRecord)
SC_HANDLE WINAPI advapi32.OpenSCManager(_In_opt_ LPCTSTR lpMachineName,_In_opt_ LPCTSTR lpDatabaseName,_In_ DWORD dwDesiredAccess)
SC_HANDLE WINAPI advapi32.OpenSCManagerW(_In_opt_ LPCTSTR lpMachineName,_In_opt_ LPCTSTR lpDatabaseName,_In_ DWORD dwDesiredAccess)
SC_HANDLE WINAPI advapi32.OpenSCManagerA(_In_opt_ LPCTSTR lpMachineName,_In_opt_ LPCTSTR lpDatabaseName,_In_ DWORD dwDesiredAccess)
UINT None msi.MsiRecordReadStream(_In_ MSIHANDLE hRecord,_In_ UINT iField,_Out_ char *szDataBuf,_Inout_ DWORD *pcbDataBuf)
UINT None msi.MsiRecordReadStream(_In_ MSIHANDLE hRecord,_In_ UINT iField,_Out_ char *szDataBuf,_Inout_ DWORD *pcbDataBuf)
SC_LOCK WINAPI advapi32.LockServiceDatabase(_In_ SC_HANDLE hSCManager)
BOOL WINAPI advapi32.QueryServiceConfig(_In_ SC_HANDLE hService,_Out_opt_ LPQUERY_SERVICE_CONFIG lpServiceConfig,_In_ DWORD cbBufSize,_Out_ LPDWORD pcbBytesNeeded)
BOOL WINAPI advapi32.QueryServiceConfigW(_In_ SC_HANDLE hService,_Out_opt_ LPQUERY_SERVICE_CONFIG lpServiceConfig,_In_ DWORD cbBufSize,_Out_ LPDWORD pcbBytesNeeded)
BOOL WINAPI advapi32.QueryServiceConfigA(_In_ SC_HANDLE hService,_Out_opt_ LPQUERY_SERVICE_CONFIG lpServiceConfig,_In_ DWORD cbBufSize,_Out_ LPDWORD pcbBytesNeeded)
DWORD WINAPI sechost.SubscribeServiceChangeNotifications(_In_ SC_HANDLE hService,_In_ SC_EVENT_TYPE eEventType,_In_ PSC_NOTIFICATION_CALLBACK pCallback,_In_opt_ PVOID pCallbackContext,_Out_ PSC_NOTIFICATION_REGISTRATION *pSubscription)
BOOL WINAPI advapi32.CloseServiceHandle(_In_ SC_HANDLE hSCObject)
BOOL WINAPI advapi32.ChangeServiceConfig2(_In_ SC_HANDLE hService,_In_ DWORD dwInfoLevel,_In_opt_ LPVOID lpInfo)
BOOL WINAPI advapi32.ChangeServiceConfig2W(_In_ SC_HANDLE hService,_In_ DWORD dwInfoLevel,_In_opt_ LPVOID lpInfo)
BOOL WINAPI advapi32.ChangeServiceConfig2A(_In_ SC_HANDLE hService,_In_ DWORD dwInfoLevel,_In_opt_ LPVOID lpInfo)
BOOL WINAPI advapi32.DeleteService(_In_ SC_HANDLE hService)
UINT None msi.MsiOpenDatabase(_In_ LPCTSTR szDatabasePath,_In_ LPCTSTR szPersist,_Out_ MSIHANDLE *phDatabase)
UINT None msi.MsiOpenDatabaseW(_In_ LPCTSTR szDatabasePath,_In_ LPCTSTR szPersist,_Out_ MSIHANDLE *phDatabase)
UINT None msi.MsiOpenDatabaseA(_In_ LPCTSTR szDatabasePath,_In_ LPCTSTR szPersist,_Out_ MSIHANDLE *phDatabase)
VOID WINAPI sechost.UnsubscribeServiceChangeNotifications(_In_ PSC_NOTIFICATION_REGISTRATION pSubscription)
UINT None msi.MsiRecordReadStream(_In_ MSIHANDLE hRecord,_In_ UINT iField,_Out_ char *szDataBuf,_Inout_ DWORD *pcbDataBuf)
UINT None msi.MsiVerifyPackage(_In_ LPCTSTR szPackagePath)
UINT None msi.MsiVerifyPackageW(_In_ LPCTSTR szPackagePath)
UINT None msi.MsiVerifyPackageA(_In_ LPCTSTR szPackagePath)
UINT None msi.MsiGetFeatureValidStates(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szFeature,_Out_ DWORD *pInstallState)
UINT None msi.MsiGetFeatureValidStatesW(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szFeature,_Out_ DWORD *pInstallState)
UINT None msi.MsiGetFeatureValidStatesA(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szFeature,_Out_ DWORD *pInstallState)
SERVICE_STATUS_HANDLE WINAPI advapi32.RegisterServiceCtrlHandler(_In_ LPCTSTR lpServiceName,_In_ LPHANDLER_FUNCTION lpHandlerProc)
SERVICE_STATUS_HANDLE WINAPI advapi32.RegisterServiceCtrlHandlerW(_In_ LPCTSTR lpServiceName,_In_ LPHANDLER_FUNCTION lpHandlerProc)
SERVICE_STATUS_HANDLE WINAPI advapi32.RegisterServiceCtrlHandlerA(_In_ LPCTSTR lpServiceName,_In_ LPHANDLER_FUNCTION lpHandlerProc)
UINT None msi.MsiViewExecute(_In_ MSIHANDLE hView,_In_ MSIHANDLE hRecord)
BOOL WINAPI advapi32.EnumServicesStatus(_In_ SC_HANDLE hSCManager,_In_ DWORD dwServiceType,_In_ DWORD dwServiceState,_Out_opt_ LPENUM_SERVICE_STATUS lpServices,_In_ DWORD cbBufSize,_Out_ LPDWORD pcbBytesNeeded,_Out_ LPDWORD lpServicesReturned,_Inout_opt_ LPDWORD lpResumeHandle)
BOOL WINAPI advapi32.EnumServicesStatusW(_In_ SC_HANDLE hSCManager,_In_ DWORD dwServiceType,_In_ DWORD dwServiceState,_Out_opt_ LPENUM_SERVICE_STATUS lpServices,_In_ DWORD cbBufSize,_Out_ LPDWORD pcbBytesNeeded,_Out_ LPDWORD lpServicesReturned,_Inout_opt_ LPDWORD lpResumeHandle)
BOOL WINAPI advapi32.EnumServicesStatusA(_In_ SC_HANDLE hSCManager,_In_ DWORD dwServiceType,_In_ DWORD dwServiceState,_Out_opt_ LPENUM_SERVICE_STATUS lpServices,_In_ DWORD cbBufSize,_Out_ LPDWORD pcbBytesNeeded,_Out_ LPDWORD lpServicesReturned,_Inout_opt_ LPDWORD lpResumeHandle)
BOOL WINAPI advapi32.UnlockServiceDatabase(_In_ SC_LOCK ScLock)
BOOL WINAPI kernel32.InstallELAMCertificateInfo(_In_ HANDLE ELAMFile)
UINT None msi.MsiGetSummaryInformation(_In_ MSIHANDLE hDatabase,_In_ LPCTSTR szDatabasePath,_In_ UINT uiUpdateCount,_Out_ MSIHANDLE *phSummaryInfo)
UINT None msi.MsiGetSummaryInformationW(_In_ MSIHANDLE hDatabase,_In_ LPCTSTR szDatabasePath,_In_ UINT uiUpdateCount,_Out_ MSIHANDLE *phSummaryInfo)
UINT None msi.MsiGetSummaryInformationA(_In_ MSIHANDLE hDatabase,_In_ LPCTSTR szDatabasePath,_In_ UINT uiUpdateCount,_Out_ MSIHANDLE *phSummaryInfo)
VOID WINAPI None.ServiceMain(_In_ DWORD dwArgc,_In_ LPTSTR *lpszArgv)
BOOL WINAPI advapi32.StartService(_In_ SC_HANDLE hService,_In_ DWORD dwNumServiceArgs,_In_opt_ LPCTSTR *lpServiceArgVectors)
BOOL WINAPI advapi32.StartServiceW(_In_ SC_HANDLE hService,_In_ DWORD dwNumServiceArgs,_In_opt_ LPCTSTR *lpServiceArgVectors)
BOOL WINAPI advapi32.StartServiceA(_In_ SC_HANDLE hService,_In_ DWORD dwNumServiceArgs,_In_opt_ LPCTSTR *lpServiceArgVectors)
UINT None msi.MsiSummaryInfoSetProperty(_In_ MSIHANDLE hSummaryInfo,_In_ UINT uiProperty,_In_ UINT uiDataType,_In_ INT iValue,_In_ FILETIME *pftValue,_In_ LPTSTR szValue)
UINT None msi.MsiSummaryInfoSetPropertyW(_In_ MSIHANDLE hSummaryInfo,_In_ UINT uiProperty,_In_ UINT uiDataType,_In_ INT iValue,_In_ FILETIME *pftValue,_In_ LPTSTR szValue)
UINT None msi.MsiSummaryInfoSetPropertyA(_In_ MSIHANDLE hSummaryInfo,_In_ UINT uiProperty,_In_ UINT uiDataType,_In_ INT iValue,_In_ FILETIME *pftValue,_In_ LPTSTR szValue)
BOOL WINAPI advapi32.SetServiceStatus(_In_ SERVICE_STATUS_HANDLE hServiceStatus,_In_ LPSERVICE_STATUS lpServiceStatus)
MSIDBSTATE None msi.MsiGetDatabaseState(_In_ MSIHANDLE hDatabase)
unsigned int msi.MsiRecordGetFieldCount(_In_ MSIHANDLE hRecord)
BOOL WINAPI advapi32.StartService(_In_ SC_HANDLE hService,_In_ DWORD dwNumServiceArgs,_In_opt_ LPCTSTR *lpServiceArgVectors)
BOOL WINAPI advapi32.StartServiceW(_In_ SC_HANDLE hService,_In_ DWORD dwNumServiceArgs,_In_opt_ LPCTSTR *lpServiceArgVectors)
BOOL WINAPI advapi32.StartServiceA(_In_ SC_HANDLE hService,_In_ DWORD dwNumServiceArgs,_In_opt_ LPCTSTR *lpServiceArgVectors)
DWORD WINAPI None.HandlerEx(_In_ DWORD dwControl,_In_ DWORD dwEventType,_In_ LPVOID lpEventData,_In_ LPVOID lpContext)
BOOL WINAPI advapi32.ChangeServiceConfig(_In_ SC_HANDLE hService,_In_ DWORD dwServiceType,_In_ DWORD dwStartType,_In_ DWORD dwErrorControl,_In_opt_ LPCTSTR lpBinaryPathName,_In_opt_ LPCTSTR lpLoadOrderGroup,_Out_opt_ LPDWORD lpdwTagId,_In_opt_ LPCTSTR lpDependencies,_In_opt_ LPCTSTR lpServiceStartName,_In_opt_ LPCTSTR lpPassword,_In_opt_ LPCTSTR lpDisplayName)
BOOL WINAPI advapi32.ChangeServiceConfigW(_In_ SC_HANDLE hService,_In_ DWORD dwServiceType,_In_ DWORD dwStartType,_In_ DWORD dwErrorControl,_In_opt_ LPCTSTR lpBinaryPathName,_In_opt_ LPCTSTR lpLoadOrderGroup,_Out_opt_ LPDWORD lpdwTagId,_In_opt_ LPCTSTR lpDependencies,_In_opt_ LPCTSTR lpServiceStartName,_In_opt_ LPCTSTR lpPassword,_In_opt_ LPCTSTR lpDisplayName)
BOOL WINAPI advapi32.ChangeServiceConfigA(_In_ SC_HANDLE hService,_In_ DWORD dwServiceType,_In_ DWORD dwStartType,_In_ DWORD dwErrorControl,_In_opt_ LPCTSTR lpBinaryPathName,_In_opt_ LPCTSTR lpLoadOrderGroup,_Out_opt_ LPDWORD lpdwTagId,_In_opt_ LPCTSTR lpDependencies,_In_opt_ LPCTSTR lpServiceStartName,_In_opt_ LPCTSTR lpPassword,_In_opt_ LPCTSTR lpDisplayName)
UINT None msi.MsiRecordReadStream(_In_ MSIHANDLE hRecord,_In_ UINT iField,_Out_ char *szDataBuf,_Inout_ DWORD *pcbDataBuf)
SERVICE_STATUS_HANDLE WINAPI advapi32.RegisterServiceCtrlHandler(_In_ LPCTSTR lpServiceName,_In_ LPHANDLER_FUNCTION lpHandlerProc)
SERVICE_STATUS_HANDLE WINAPI advapi32.RegisterServiceCtrlHandlerW(_In_ LPCTSTR lpServiceName,_In_ LPHANDLER_FUNCTION lpHandlerProc)
SERVICE_STATUS_HANDLE WINAPI advapi32.RegisterServiceCtrlHandlerA(_In_ LPCTSTR lpServiceName,_In_ LPHANDLER_FUNCTION lpHandlerProc)
UINT None msi.MsiViewGetColumnInfo(_In_ MSIHANDLE hView,_In_ MSICOLINFO eColumnInfo,_Out_ MSIHANDLE *phRecord)
BOOL WINAPI advapi32.QueryServiceStatus(_In_ SC_HANDLE hService,_Out_ LPSERVICE_STATUS lpServiceStatus)
UINT WINAPI msi.MsiJoinTransaction(_In_ MSIHANDLE hTransactionID,_In_ DWORD dwTransactionAttributes,_Out_ HANDLE *phChangeOfOwnerEvent)
VOID WINAPI None.Handler(_In_ DWORD fdwControl)
BOOL WINAPI advapi32.ChangeServiceConfig2(_In_ SC_HANDLE hService,_In_ DWORD dwInfoLevel,_In_opt_ LPVOID lpInfo)
BOOL WINAPI advapi32.ChangeServiceConfig2W(_In_ SC_HANDLE hService,_In_ DWORD dwInfoLevel,_In_opt_ LPVOID lpInfo)
BOOL WINAPI advapi32.ChangeServiceConfig2A(_In_ SC_HANDLE hService,_In_ DWORD dwInfoLevel,_In_opt_ LPVOID lpInfo)
BOOL WINAPI advapi32.EnumServicesStatusEx(_In_ SC_HANDLE hSCManager,_In_ SC_ENUM_TYPE InfoLevel,_In_ DWORD dwServiceType,_In_ DWORD dwServiceState,_Out_opt_ LPBYTE lpServices,_In_ DWORD cbBufSize,_Out_ LPDWORD pcbBytesNeeded,_Out_ LPDWORD lpServicesReturned,_Inout_opt_ LPDWORD lpResumeHandle,_In_opt_ LPCTSTR pszGroupName)
BOOL WINAPI advapi32.EnumServicesStatusExW(_In_ SC_HANDLE hSCManager,_In_ SC_ENUM_TYPE InfoLevel,_In_ DWORD dwServiceType,_In_ DWORD dwServiceState,_Out_opt_ LPBYTE lpServices,_In_ DWORD cbBufSize,_Out_ LPDWORD pcbBytesNeeded,_Out_ LPDWORD lpServicesReturned,_Inout_opt_ LPDWORD lpResumeHandle,_In_opt_ LPCTSTR pszGroupName)
BOOL WINAPI advapi32.EnumServicesStatusExA(_In_ SC_HANDLE hSCManager,_In_ SC_ENUM_TYPE InfoLevel,_In_ DWORD dwServiceType,_In_ DWORD dwServiceState,_Out_opt_ LPBYTE lpServices,_In_ DWORD cbBufSize,_Out_ LPDWORD pcbBytesNeeded,_Out_ LPDWORD lpServicesReturned,_Inout_opt_ LPDWORD lpResumeHandle,_In_opt_ LPCTSTR pszGroupName)
BOOL WINAPI advapi32.ControlService(_In_ SC_HANDLE hService,_In_ DWORD dwControl,_Out_ LPSERVICE_STATUS lpServiceStatus)
typedef None None.VOID(CALLBACK * PFN_SC_NOTIFY_CALLBACK)
typedef None None.SERVICE_NOTIFYW(CALLBACK * PFN_SC_NOTIFY_CALLBACK)
typedef None None.SERVICE_NOTIFYA(CALLBACK * PFN_SC_NOTIFY_CALLBACK)
typedef None None.VOID(CALLBACK * PFN_SC_NOTIFY_CALLBACK)
typedef None None.SERVICE_NOTIFYW(CALLBACK * PFN_SC_NOTIFY_CALLBACK)
typedef None None.SERVICE_NOTIFYA(CALLBACK * PFN_SC_NOTIFY_CALLBACK)
void WINAPI kernel32.OutputDebugString(_In_opt_ LPCTSTR lpOutputString)
void WINAPI kernel32.OutputDebugStringW(_In_opt_ LPCTSTR lpOutputString)
void WINAPI kernel32.OutputDebugStringA(_In_opt_ LPCTSTR lpOutputString)
BOOL WINAPI advapi32.QueryServiceDynamicInformation(_In_ SERVICE_STATUS_HANDLE hServiceStatus,_In_ DWORD dwInfoLevel,_Outptr_ PVOID *ppDynamicInfo)
UINT None msi.MsiViewClose(_In_ MSIHANDLE hView)
DWORD WINAPI advapi32.NotifyServiceStatusChange(_In_ SC_HANDLE hService,_In_ DWORD dwNotifyMask,_In_ PSERVICE_NOTIFY pNotifyBuffer)
DWORD WINAPI advapi32.NotifyServiceStatusChangeW(_In_ SC_HANDLE hService,_In_ DWORD dwNotifyMask,_In_ PSERVICE_NOTIFY pNotifyBuffer)
DWORD WINAPI advapi32.NotifyServiceStatusChangeA(_In_ SC_HANDLE hService,_In_ DWORD dwNotifyMask,_In_ PSERVICE_NOTIFY pNotifyBuffer)
BOOL WINAPI advapi32.GetServiceDisplayName(_In_ SC_HANDLE hSCManager,_In_ LPCTSTR lpServiceName,_Out_opt_ LPTSTR lpDisplayName,_Inout_ LPDWORD lpcchBuffer)
BOOL WINAPI advapi32.GetServiceDisplayNameW(_In_ SC_HANDLE hSCManager,_In_ LPCTSTR lpServiceName,_Out_opt_ LPTSTR lpDisplayName,_Inout_ LPDWORD lpcchBuffer)
BOOL WINAPI advapi32.GetServiceDisplayNameA(_In_ SC_HANDLE hSCManager,_In_ LPCTSTR lpServiceName,_Out_opt_ LPTSTR lpDisplayName,_Inout_ LPDWORD lpcchBuffer)
BOOL WINAPI advapi32.SetServiceStatus(_In_ SERVICE_STATUS_HANDLE hServiceStatus,_In_ LPSERVICE_STATUS lpServiceStatus)
UINT None msi.MsiSummaryInfoSetProperty(_In_ MSIHANDLE hSummaryInfo,_In_ UINT uiProperty,_In_ UINT uiDataType,_In_ INT iValue,_In_ FILETIME *pftValue,_In_ LPTSTR szValue)
UINT None msi.MsiSummaryInfoSetPropertyW(_In_ MSIHANDLE hSummaryInfo,_In_ UINT uiProperty,_In_ UINT uiDataType,_In_ INT iValue,_In_ FILETIME *pftValue,_In_ LPTSTR szValue)
UINT None msi.MsiSummaryInfoSetPropertyA(_In_ MSIHANDLE hSummaryInfo,_In_ UINT uiProperty,_In_ UINT uiDataType,_In_ INT iValue,_In_ FILETIME *pftValue,_In_ LPTSTR szValue)
UINT None msi.MsiViewGetColumnInfo(_In_ MSIHANDLE hView,_In_ MSICOLINFO eColumnInfo,_Out_ MSIHANDLE *phRecord)
UINT None msi.MsiSetFeatureState(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szFeature,_In_ INSTALLSTATE iState)
UINT None msi.MsiSetFeatureStateW(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szFeature,_In_ INSTALLSTATE iState)
UINT None msi.MsiSetFeatureStateA(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szFeature,_In_ INSTALLSTATE iState)
SC_LOCK WINAPI advapi32.LockServiceDatabase(_In_ SC_HANDLE hSCManager)
UINT None msi.MsiDatabaseApplyTransform(_In_ MSIHANDLE hDatabase,_In_ LPCTSTR szTransformFile,_In_ int iErrorConditions)
UINT None msi.MsiDatabaseApplyTransformW(_In_ MSIHANDLE hDatabase,_In_ LPCTSTR szTransformFile,_In_ int iErrorConditions)
UINT None msi.MsiDatabaseApplyTransformA(_In_ MSIHANDLE hDatabase,_In_ LPCTSTR szTransformFile,_In_ int iErrorConditions)
BOOL WINAPI advapi32.UnlockServiceDatabase(_In_ SC_LOCK ScLock)
BOOL WINAPI advapi32.QueryServiceLockStatus(_In_ SC_HANDLE hSCManager,_Out_opt_ LPQUERY_SERVICE_LOCK_STATUS lpLockStatus,_In_ DWORD cbBufSize,_Out_ LPDWORD pcbBytesNeeded)
BOOL WINAPI advapi32.QueryServiceLockStatusW(_In_ SC_HANDLE hSCManager,_Out_opt_ LPQUERY_SERVICE_LOCK_STATUS lpLockStatus,_In_ DWORD cbBufSize,_Out_ LPDWORD pcbBytesNeeded)
BOOL WINAPI advapi32.QueryServiceLockStatusA(_In_ SC_HANDLE hSCManager,_Out_opt_ LPQUERY_SERVICE_LOCK_STATUS lpLockStatus,_In_ DWORD cbBufSize,_Out_ LPDWORD pcbBytesNeeded)
BOOL WINAPI advapi32.QueryServiceLockStatus(_In_ SC_HANDLE hSCManager,_Out_opt_ LPQUERY_SERVICE_LOCK_STATUS lpLockStatus,_In_ DWORD cbBufSize,_Out_ LPDWORD pcbBytesNeeded)
BOOL WINAPI advapi32.QueryServiceLockStatusW(_In_ SC_HANDLE hSCManager,_Out_opt_ LPQUERY_SERVICE_LOCK_STATUS lpLockStatus,_In_ DWORD cbBufSize,_Out_ LPDWORD pcbBytesNeeded)
BOOL WINAPI advapi32.QueryServiceLockStatusA(_In_ SC_HANDLE hSCManager,_Out_opt_ LPQUERY_SERVICE_LOCK_STATUS lpLockStatus,_In_ DWORD cbBufSize,_Out_ LPDWORD pcbBytesNeeded)
UINT None msi.MsiGetSummaryInformation(_In_ MSIHANDLE hDatabase,_In_ LPCTSTR szDatabasePath,_In_ UINT uiUpdateCount,_Out_ MSIHANDLE *phSummaryInfo)
UINT None msi.MsiGetSummaryInformationW(_In_ MSIHANDLE hDatabase,_In_ LPCTSTR szDatabasePath,_In_ UINT uiUpdateCount,_Out_ MSIHANDLE *phSummaryInfo)
UINT None msi.MsiGetSummaryInformationA(_In_ MSIHANDLE hDatabase,_In_ LPCTSTR szDatabasePath,_In_ UINT uiUpdateCount,_Out_ MSIHANDLE *phSummaryInfo)
BOOL WINAPI advapi32.QueryServiceLockStatus(_In_ SC_HANDLE hSCManager,_Out_opt_ LPQUERY_SERVICE_LOCK_STATUS lpLockStatus,_In_ DWORD cbBufSize,_Out_ LPDWORD pcbBytesNeeded)
BOOL WINAPI advapi32.QueryServiceLockStatusW(_In_ SC_HANDLE hSCManager,_Out_opt_ LPQUERY_SERVICE_LOCK_STATUS lpLockStatus,_In_ DWORD cbBufSize,_Out_ LPDWORD pcbBytesNeeded)
BOOL WINAPI advapi32.QueryServiceLockStatusA(_In_ SC_HANDLE hSCManager,_Out_opt_ LPQUERY_SERVICE_LOCK_STATUS lpLockStatus,_In_ DWORD cbBufSize,_Out_ LPDWORD pcbBytesNeeded)
BOOL WINAPI advapi32.QueryServiceLockStatus(_In_ SC_HANDLE hSCManager,_Out_opt_ LPQUERY_SERVICE_LOCK_STATUS lpLockStatus,_In_ DWORD cbBufSize,_Out_ LPDWORD pcbBytesNeeded)
BOOL WINAPI advapi32.QueryServiceLockStatusW(_In_ SC_HANDLE hSCManager,_Out_opt_ LPQUERY_SERVICE_LOCK_STATUS lpLockStatus,_In_ DWORD cbBufSize,_Out_ LPDWORD pcbBytesNeeded)
BOOL WINAPI advapi32.QueryServiceLockStatusA(_In_ SC_HANDLE hSCManager,_Out_opt_ LPQUERY_SERVICE_LOCK_STATUS lpLockStatus,_In_ DWORD cbBufSize,_Out_ LPDWORD pcbBytesNeeded)
BOOL WINAPI advapi32.QueryServiceLockStatus(_In_ SC_HANDLE hSCManager,_Out_opt_ LPQUERY_SERVICE_LOCK_STATUS lpLockStatus,_In_ DWORD cbBufSize,_Out_ LPDWORD pcbBytesNeeded)
BOOL WINAPI advapi32.QueryServiceLockStatusW(_In_ SC_HANDLE hSCManager,_Out_opt_ LPQUERY_SERVICE_LOCK_STATUS lpLockStatus,_In_ DWORD cbBufSize,_Out_ LPDWORD pcbBytesNeeded)
BOOL WINAPI advapi32.QueryServiceLockStatusA(_In_ SC_HANDLE hSCManager,_Out_opt_ LPQUERY_SERVICE_LOCK_STATUS lpLockStatus,_In_ DWORD cbBufSize,_Out_ LPDWORD pcbBytesNeeded)
BOOL WINAPI advapi32.QueryServiceLockStatus(_In_ SC_HANDLE hSCManager,_Out_opt_ LPQUERY_SERVICE_LOCK_STATUS lpLockStatus,_In_ DWORD cbBufSize,_Out_ LPDWORD pcbBytesNeeded)
BOOL WINAPI advapi32.QueryServiceLockStatusW(_In_ SC_HANDLE hSCManager,_Out_opt_ LPQUERY_SERVICE_LOCK_STATUS lpLockStatus,_In_ DWORD cbBufSize,_Out_ LPDWORD pcbBytesNeeded)
BOOL WINAPI advapi32.QueryServiceLockStatusA(_In_ SC_HANDLE hSCManager,_Out_opt_ LPQUERY_SERVICE_LOCK_STATUS lpLockStatus,_In_ DWORD cbBufSize,_Out_ LPDWORD pcbBytesNeeded)
BOOL WINAPI advapi32.QueryServiceLockStatus(_In_ SC_HANDLE hSCManager,_Out_opt_ LPQUERY_SERVICE_LOCK_STATUS lpLockStatus,_In_ DWORD cbBufSize,_Out_ LPDWORD pcbBytesNeeded)
BOOL WINAPI advapi32.QueryServiceLockStatusW(_In_ SC_HANDLE hSCManager,_Out_opt_ LPQUERY_SERVICE_LOCK_STATUS lpLockStatus,_In_ DWORD cbBufSize,_Out_ LPDWORD pcbBytesNeeded)
BOOL WINAPI advapi32.QueryServiceLockStatusA(_In_ SC_HANDLE hSCManager,_Out_opt_ LPQUERY_SERVICE_LOCK_STATUS lpLockStatus,_In_ DWORD cbBufSize,_Out_ LPDWORD pcbBytesNeeded)
BOOL WINAPI advapi32.QueryServiceConfig2(_In_ SC_HANDLE hService,_In_ DWORD dwInfoLevel,_Out_opt_ LPBYTE lpBuffer,_In_ DWORD cbBufSize,_Out_ LPDWORD pcbBytesNeeded)
BOOL WINAPI advapi32.QueryServiceConfig2W(_In_ SC_HANDLE hService,_In_ DWORD dwInfoLevel,_Out_opt_ LPBYTE lpBuffer,_In_ DWORD cbBufSize,_Out_ LPDWORD pcbBytesNeeded)
BOOL WINAPI advapi32.QueryServiceConfig2A(_In_ SC_HANDLE hService,_In_ DWORD dwInfoLevel,_Out_opt_ LPBYTE lpBuffer,_In_ DWORD cbBufSize,_Out_ LPDWORD pcbBytesNeeded)
BOOL WINAPI advapi32.QueryServiceStatus(_In_ SC_HANDLE hService,_Out_ LPSERVICE_STATUS lpServiceStatus)
UINT None msi.MsiGetFeatureValidStates(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szFeature,_Out_ DWORD *pInstallState)
UINT None msi.MsiGetFeatureValidStatesW(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szFeature,_Out_ DWORD *pInstallState)
UINT None msi.MsiGetFeatureValidStatesA(_In_ MSIHANDLE hInstall,_In_ LPCTSTR szFeature,_Out_ DWORD *pInstallState)
BOOL WINAPI None.SetConsoleCtrlHandler(_In_opt_ PHANDLER_ROUTINE HandlerRoutine,_In_ BOOL Add)
UINT None msi.MsiOpenDatabase(_In_ LPCTSTR szDatabasePath,_In_ LPCTSTR szPersist,_Out_ MSIHANDLE *phDatabase)
UINT None msi.MsiOpenDatabaseW(_In_ LPCTSTR szDatabasePath,_In_ LPCTSTR szPersist,_Out_ MSIHANDLE *phDatabase)
UINT None msi.MsiOpenDatabaseA(_In_ LPCTSTR szDatabasePath,_In_ LPCTSTR szPersist,_Out_ MSIHANDLE *phDatabase)
BOOL WINAPI advapi32.CloseServiceHandle(_In_ SC_HANDLE hSCObject)
BOOL WINAPI None.SetConsoleCtrlHandler(_In_opt_ PHANDLER_ROUTINE HandlerRoutine,_In_ BOOL Add)
BOOL None None.InstallELAMCertificateInfo(_In_ HANDLE ELAMFile)
BOOL WINAPI advapi32.StartService(_In_ SC_HANDLE hService,_In_ DWORD dwNumServiceArgs,_In_opt_ LPCTSTR *lpServiceArgVectors)
BOOL WINAPI advapi32.StartServiceW(_In_ SC_HANDLE hService,_In_ DWORD dwNumServiceArgs,_In_opt_ LPCTSTR *lpServiceArgVectors)
BOOL WINAPI advapi32.StartServiceA(_In_ SC_HANDLE hService,_In_ DWORD dwNumServiceArgs,_In_opt_ LPCTSTR *lpServiceArgVectors)
BOOL WINAPI advapi32.StartService(_In_ SC_HANDLE hService,_In_ DWORD dwNumServiceArgs,_In_opt_ LPCTSTR *lpServiceArgVectors)
BOOL WINAPI advapi32.StartServiceW(_In_ SC_HANDLE hService,_In_ DWORD dwNumServiceArgs,_In_opt_ LPCTSTR *lpServiceArgVectors)
BOOL WINAPI advapi32.StartServiceA(_In_ SC_HANDLE hService,_In_ DWORD dwNumServiceArgs,_In_opt_ LPCTSTR *lpServiceArgVectors)
BOOL WINAPI advapi32.DeleteService(_In_ SC_HANDLE hService)
BOOL None None.InstallELAMCertificateInfo(_In_ HANDLE ELAMFile)
UINT __stdcall None.CustomAction(MSIHANDLE hInstall None)
HDEVNOTIFY WINAPI user32.RegisterDeviceNotification(_In_ HANDLE hRecipient,_In_ LPVOID NotificationFilter,_In_ DWORD Flags)
HDEVNOTIFY WINAPI user32.RegisterDeviceNotificationW(_In_ HANDLE hRecipient,_In_ LPVOID NotificationFilter,_In_ DWORD Flags)
HDEVNOTIFY WINAPI user32.RegisterDeviceNotificationA(_In_ HANDLE hRecipient,_In_ LPVOID NotificationFilter,_In_ DWORD Flags)
BOOL WINAPI advapi32.ControlService(_In_ SC_HANDLE hService,_In_ DWORD dwControl,_Out_ LPSERVICE_STATUS lpServiceStatus)
SC_HANDLE WINAPI advapi32.OpenService(_In_ SC_HANDLE hSCManager,_In_ LPCTSTR lpServiceName,_In_ DWORD dwDesiredAccess)
SC_HANDLE WINAPI advapi32.OpenServiceW(_In_ SC_HANDLE hSCManager,_In_ LPCTSTR lpServiceName,_In_ DWORD dwDesiredAccess)
SC_HANDLE WINAPI advapi32.OpenServiceA(_In_ SC_HANDLE hSCManager,_In_ LPCTSTR lpServiceName,_In_ DWORD dwDesiredAccess)
BOOL WINAPI kernel32.CreateProcess(_In_opt_ LPCTSTR lpApplicationName,_Inout_opt_ LPTSTR lpCommandLine,_In_opt_ LPSECURITY_ATTRIBUTES lpProcessAttributes,_In_opt_ LPSECURITY_ATTRIBUTES lpThreadAttributes,_In_ BOOL bInheritHandles,_In_ DWORD dwCreationFlags,_In_opt_ LPVOID lpEnvironment,_In_opt_ LPCTSTR lpCurrentDirectory,_In_ LPSTARTUPINFO lpStartupInfo,_Out_ LPPROCESS_INFORMATION lpProcessInformation)
BOOL WINAPI kernel32.CreateProcessW(_In_opt_ LPCTSTR lpApplicationName,_Inout_opt_ LPTSTR lpCommandLine,_In_opt_ LPSECURITY_ATTRIBUTES lpProcessAttributes,_In_opt_ LPSECURITY_ATTRIBUTES lpThreadAttributes,_In_ BOOL bInheritHandles,_In_ DWORD dwCreationFlags,_In_opt_ LPVOID lpEnvironment,_In_opt_ LPCTSTR lpCurrentDirectory,_In_ LPSTARTUPINFO lpStartupInfo,_Out_ LPPROCESS_INFORMATION lpProcessInformation)
BOOL WINAPI kernel32.CreateProcessA(_In_opt_ LPCTSTR lpApplicationName,_Inout_opt_ LPTSTR lpCommandLine,_In_opt_ LPSECURITY_ATTRIBUTES lpProcessAttributes,_In_opt_ LPSECURITY_ATTRIBUTES lpThreadAttributes,_In_ BOOL bInheritHandles,_In_ DWORD dwCreationFlags,_In_opt_ LPVOID lpEnvironment,_In_opt_ LPCTSTR lpCurrentDirectory,_In_ LPSTARTUPINFO lpStartupInfo,_Out_ LPPROCESS_INFORMATION lpProcessInformation)
SC_HANDLE WINAPI advapi32.OpenService(_In_ SC_HANDLE hSCManager,_In_ LPCTSTR lpServiceName,_In_ DWORD dwDesiredAccess)
SC_HANDLE WINAPI advapi32.OpenServiceW(_In_ SC_HANDLE hSCManager,_In_ LPCTSTR lpServiceName,_In_ DWORD dwDesiredAccess)
SC_HANDLE WINAPI advapi32.OpenServiceA(_In_ SC_HANDLE hSCManager,_In_ LPCTSTR lpServiceName,_In_ DWORD dwDesiredAccess)
BOOL WINAPI kernel32.ContinueDebugEvent(_In_ DWORD dwProcessId,_In_ DWORD dwThreadId,_In_ DWORD dwContinueStatus)
VOID WINAPI None.Handler(_In_ DWORD fdwControl)
HRESULT None mergemod.Connect([in] BSTR Feature)
BOOL WINAPI advapi32.QueryServiceDynamicInformation(_In_ SERVICE_STATUS_HANDLE hServiceStatus,_In_ DWORD dwInfoLevel,_Outptr_ PVOID *ppDynamicInfo)
BOOL WINAPI advapi32.QueryServiceDynamicInformation(_In_ SERVICE_STATUS_HANDLE hServiceStatus,_In_ DWORD dwInfoLevel,_Outptr_ PVOID *ppDynamicInfo)
BOOL WINAPI kernel32.GetThreadSelectorEntry(_In_ HANDLE hThread,_In_ DWORD dwSelector,_Out_ LPLDT_ENTRY lpSelectorEntry)
SC_HANDLE WINAPI advapi32.OpenService(_In_ SC_HANDLE hSCManager,_In_ LPCTSTR lpServiceName,_In_ DWORD dwDesiredAccess)
SC_HANDLE WINAPI advapi32.OpenServiceW(_In_ SC_HANDLE hSCManager,_In_ LPCTSTR lpServiceName,_In_ DWORD dwDesiredAccess)
SC_HANDLE WINAPI advapi32.OpenServiceA(_In_ SC_HANDLE hSCManager,_In_ LPCTSTR lpServiceName,_In_ DWORD dwDesiredAccess)
BOOL WINAPI advapi32.QueryServiceDynamicInformation(_In_ SERVICE_STATUS_HANDLE hServiceStatus,_In_ DWORD dwInfoLevel,_Outptr_ PVOID *ppDynamicInfo)
SC_HANDLE WINAPI advapi32.OpenService(_In_ SC_HANDLE hSCManager,_In_ LPCTSTR lpServiceName,_In_ DWORD dwDesiredAccess)
SC_HANDLE WINAPI advapi32.OpenServiceW(_In_ SC_HANDLE hSCManager,_In_ LPCTSTR lpServiceName,_In_ DWORD dwDesiredAccess)
SC_HANDLE WINAPI advapi32.OpenServiceA(_In_ SC_HANDLE hSCManager,_In_ LPCTSTR lpServiceName,_In_ DWORD dwDesiredAccess)
BOOL WINAPI advapi32.QueryServiceDynamicInformation(_In_ SERVICE_STATUS_HANDLE hServiceStatus,_In_ DWORD dwInfoLevel,_Outptr_ PVOID *ppDynamicInfo)
HPOWERNOTIFY WINAPI user32.RegisterPowerSettingNotification(_In_ HANDLE hRecipient,_In_ LPCGUID PowerSettingGuid,_In_ DWORD Flags)
BOOL WINAPI user32.GetUserObjectInformation(_In_ HANDLE hObj,_In_ int nIndex,_Out_opt_ PVOID pvInfo,_In_ DWORD nLength,_Out_opt_ LPDWORD lpnLengthNeeded)
BOOL WINAPI user32.GetUserObjectInformationW(_In_ HANDLE hObj,_In_ int nIndex,_Out_opt_ PVOID pvInfo,_In_ DWORD nLength,_Out_opt_ LPDWORD lpnLengthNeeded)
BOOL WINAPI user32.GetUserObjectInformationA(_In_ HANDLE hObj,_In_ int nIndex,_Out_opt_ PVOID pvInfo,_In_ DWORD nLength,_Out_opt_ LPDWORD lpnLengthNeeded)
UINT __stdcall None.CustomAction(MSIHANDLE hInstall None)
DWORD WINAPI advapi32.NotifyServiceStatusChange(_In_ SC_HANDLE hService,_In_ DWORD dwNotifyMask,_In_ PSERVICE_NOTIFY pNotifyBuffer)
DWORD WINAPI advapi32.NotifyServiceStatusChangeW(_In_ SC_HANDLE hService,_In_ DWORD dwNotifyMask,_In_ PSERVICE_NOTIFY pNotifyBuffer)
DWORD WINAPI advapi32.NotifyServiceStatusChangeA(_In_ SC_HANDLE hService,_In_ DWORD dwNotifyMask,_In_ PSERVICE_NOTIFY pNotifyBuffer)
SC_HANDLE WINAPI advapi32.OpenService(_In_ SC_HANDLE hSCManager,_In_ LPCTSTR lpServiceName,_In_ DWORD dwDesiredAccess)
SC_HANDLE WINAPI advapi32.OpenServiceW(_In_ SC_HANDLE hSCManager,_In_ LPCTSTR lpServiceName,_In_ DWORD dwDesiredAccess)
SC_HANDLE WINAPI advapi32.OpenServiceA(_In_ SC_HANDLE hSCManager,_In_ LPCTSTR lpServiceName,_In_ DWORD dwDesiredAccess)
DWORD WINAPI advapi32.NotifyServiceStatusChange(_In_ SC_HANDLE hService,_In_ DWORD dwNotifyMask,_In_ PSERVICE_NOTIFY pNotifyBuffer)
DWORD WINAPI advapi32.NotifyServiceStatusChangeW(_In_ SC_HANDLE hService,_In_ DWORD dwNotifyMask,_In_ PSERVICE_NOTIFY pNotifyBuffer)
DWORD WINAPI advapi32.NotifyServiceStatusChangeA(_In_ SC_HANDLE hService,_In_ DWORD dwNotifyMask,_In_ PSERVICE_NOTIFY pNotifyBuffer)
LONG WINAPI storprop.CdromDisableDigitalPlayback(_In_ HDEVINFO DevInfo,_In_ PSP_DEVINFO_DATA DevInfoData)
SC_HANDLE WINAPI advapi32.OpenService(_In_ SC_HANDLE hSCManager,_In_ LPCTSTR lpServiceName,_In_ DWORD dwDesiredAccess)
SC_HANDLE WINAPI advapi32.OpenServiceW(_In_ SC_HANDLE hSCManager,_In_ LPCTSTR lpServiceName,_In_ DWORD dwDesiredAccess)
SC_HANDLE WINAPI advapi32.OpenServiceA(_In_ SC_HANDLE hSCManager,_In_ LPCTSTR lpServiceName,_In_ DWORD dwDesiredAccess)
DWORD WINAPI advapi32.NotifyServiceStatusChange(_In_ SC_HANDLE hService,_In_ DWORD dwNotifyMask,_In_ PSERVICE_NOTIFY pNotifyBuffer)
DWORD WINAPI advapi32.NotifyServiceStatusChangeW(_In_ SC_HANDLE hService,_In_ DWORD dwNotifyMask,_In_ PSERVICE_NOTIFY pNotifyBuffer)
DWORD WINAPI advapi32.NotifyServiceStatusChangeA(_In_ SC_HANDLE hService,_In_ DWORD dwNotifyMask,_In_ PSERVICE_NOTIFY pNotifyBuffer)
UINT None msi.MsiQueryFeatureStateEx(_In_ LPTSTR szProductCode,_In_ LPTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ LPCTSTR szFeature,_Out_opt_ INSTALLSTATE *pdwState)
UINT None msi.MsiQueryFeatureStateExW(_In_ LPTSTR szProductCode,_In_ LPTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ LPCTSTR szFeature,_Out_opt_ INSTALLSTATE *pdwState)
UINT None msi.MsiQueryFeatureStateExA(_In_ LPTSTR szProductCode,_In_ LPTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ LPCTSTR szFeature,_Out_opt_ INSTALLSTATE *pdwState)
DWORD WINAPI advapi32.NotifyServiceStatusChange(_In_ SC_HANDLE hService,_In_ DWORD dwNotifyMask,_In_ PSERVICE_NOTIFY pNotifyBuffer)
DWORD WINAPI advapi32.NotifyServiceStatusChangeW(_In_ SC_HANDLE hService,_In_ DWORD dwNotifyMask,_In_ PSERVICE_NOTIFY pNotifyBuffer)
DWORD WINAPI advapi32.NotifyServiceStatusChangeA(_In_ SC_HANDLE hService,_In_ DWORD dwNotifyMask,_In_ PSERVICE_NOTIFY pNotifyBuffer)
SC_HANDLE WINAPI advapi32.OpenService(_In_ SC_HANDLE hSCManager,_In_ LPCTSTR lpServiceName,_In_ DWORD dwDesiredAccess)
SC_HANDLE WINAPI advapi32.OpenServiceW(_In_ SC_HANDLE hSCManager,_In_ LPCTSTR lpServiceName,_In_ DWORD dwDesiredAccess)
SC_HANDLE WINAPI advapi32.OpenServiceA(_In_ SC_HANDLE hSCManager,_In_ LPCTSTR lpServiceName,_In_ DWORD dwDesiredAccess)
BOOL WINAPI kernel32.DebugSetProcessKillOnExit(_In_ BOOL KillOnExit)
SC_HANDLE WINAPI advapi32.OpenService(_In_ SC_HANDLE hSCManager,_In_ LPCTSTR lpServiceName,_In_ DWORD dwDesiredAccess)
SC_HANDLE WINAPI advapi32.OpenServiceW(_In_ SC_HANDLE hSCManager,_In_ LPCTSTR lpServiceName,_In_ DWORD dwDesiredAccess)
SC_HANDLE WINAPI advapi32.OpenServiceA(_In_ SC_HANDLE hSCManager,_In_ LPCTSTR lpServiceName,_In_ DWORD dwDesiredAccess)
DWORD WINAPI advapi32.NotifyServiceStatusChange(_In_ SC_HANDLE hService,_In_ DWORD dwNotifyMask,_In_ PSERVICE_NOTIFY pNotifyBuffer)
DWORD WINAPI advapi32.NotifyServiceStatusChangeW(_In_ SC_HANDLE hService,_In_ DWORD dwNotifyMask,_In_ PSERVICE_NOTIFY pNotifyBuffer)
DWORD WINAPI advapi32.NotifyServiceStatusChangeA(_In_ SC_HANDLE hService,_In_ DWORD dwNotifyMask,_In_ PSERVICE_NOTIFY pNotifyBuffer)
SC_HANDLE WINAPI advapi32.OpenService(_In_ SC_HANDLE hSCManager,_In_ LPCTSTR lpServiceName,_In_ DWORD dwDesiredAccess)
SC_HANDLE WINAPI advapi32.OpenServiceW(_In_ SC_HANDLE hSCManager,_In_ LPCTSTR lpServiceName,_In_ DWORD dwDesiredAccess)
SC_HANDLE WINAPI advapi32.OpenServiceA(_In_ SC_HANDLE hSCManager,_In_ LPCTSTR lpServiceName,_In_ DWORD dwDesiredAccess)
SC_HANDLE WINAPI advapi32.OpenService(_In_ SC_HANDLE hSCManager,_In_ LPCTSTR lpServiceName,_In_ DWORD dwDesiredAccess)
SC_HANDLE WINAPI advapi32.OpenServiceW(_In_ SC_HANDLE hSCManager,_In_ LPCTSTR lpServiceName,_In_ DWORD dwDesiredAccess)
SC_HANDLE WINAPI advapi32.OpenServiceA(_In_ SC_HANDLE hSCManager,_In_ LPCTSTR lpServiceName,_In_ DWORD dwDesiredAccess)
SC_HANDLE WINAPI advapi32.OpenService(_In_ SC_HANDLE hSCManager,_In_ LPCTSTR lpServiceName,_In_ DWORD dwDesiredAccess)
SC_HANDLE WINAPI advapi32.OpenServiceW(_In_ SC_HANDLE hSCManager,_In_ LPCTSTR lpServiceName,_In_ DWORD dwDesiredAccess)
SC_HANDLE WINAPI advapi32.OpenServiceA(_In_ SC_HANDLE hSCManager,_In_ LPCTSTR lpServiceName,_In_ DWORD dwDesiredAccess)
DWORD WINAPI advapi32.NotifyServiceStatusChange(_In_ SC_HANDLE hService,_In_ DWORD dwNotifyMask,_In_ PSERVICE_NOTIFY pNotifyBuffer)
DWORD WINAPI advapi32.NotifyServiceStatusChangeW(_In_ SC_HANDLE hService,_In_ DWORD dwNotifyMask,_In_ PSERVICE_NOTIFY pNotifyBuffer)
DWORD WINAPI advapi32.NotifyServiceStatusChangeA(_In_ SC_HANDLE hService,_In_ DWORD dwNotifyMask,_In_ PSERVICE_NOTIFY pNotifyBuffer)
BOOL WINAPI user32.SwitchDesktop(_In_ HDESK hDesktop)
BOOL WINAPI user32.UnregisterDeviceNotification(_In_ HDEVNOTIFY Handle)
BOOL WINAPI advapi32.QueryServiceLockStatus(_In_ SC_HANDLE hSCManager,_Out_opt_ LPQUERY_SERVICE_LOCK_STATUS lpLockStatus,_In_ DWORD cbBufSize,_Out_ LPDWORD pcbBytesNeeded)
BOOL WINAPI advapi32.QueryServiceLockStatusW(_In_ SC_HANDLE hSCManager,_Out_opt_ LPQUERY_SERVICE_LOCK_STATUS lpLockStatus,_In_ DWORD cbBufSize,_Out_ LPDWORD pcbBytesNeeded)
BOOL WINAPI advapi32.QueryServiceLockStatusA(_In_ SC_HANDLE hSCManager,_Out_opt_ LPQUERY_SERVICE_LOCK_STATUS lpLockStatus,_In_ DWORD cbBufSize,_Out_ LPDWORD pcbBytesNeeded)
BOOL WINAPI kernel32.ReadProcessMemory(_In_ HANDLE hProcess,_In_ LPCVOID lpBaseAddress,_Out_ LPVOID lpBuffer,_In_ SIZE_T nSize,_Out_ SIZE_T *lpNumberOfBytesRead)
DWORD WINAPI kernel32.GetLastError(void None None)
BOOLEAN WINAPI powrprof.EnumPwrSchemes(_In_ PWRSCHEMESENUMPROC lpfnPwrSchemesEnumProc,_In_ LPARAM lParam)
BOOL WINAPI kernel32.WriteProcessMemory(_In_ HANDLE hProcess,_In_ LPVOID lpBaseAddress,_In_ LPCVOID lpBuffer,_In_ SIZE_T nSize,_Out_ SIZE_T *lpNumberOfBytesWritten)
BOOL WINAPI kernel32.RequestWakeupLatency(_In_ LATENCY_TIME latency)
HANDLE WINAPI kernel32.OpenThread(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ DWORD dwThreadId)
HRESULT None mergemod.get_Errors([out] IMsmErrors **Errors)
HRESULT None mergemod.OpenDatabase(const BSTR Path)
SC_HANDLE WINAPI advapi32.OpenService(_In_ SC_HANDLE hSCManager,_In_ LPCTSTR lpServiceName,_In_ DWORD dwDesiredAccess)
SC_HANDLE WINAPI advapi32.OpenServiceW(_In_ SC_HANDLE hSCManager,_In_ LPCTSTR lpServiceName,_In_ DWORD dwDesiredAccess)
SC_HANDLE WINAPI advapi32.OpenServiceA(_In_ SC_HANDLE hSCManager,_In_ LPCTSTR lpServiceName,_In_ DWORD dwDesiredAccess)
BOOL WINAPI kernel32.InitializeProcThreadAttributeList(_Out_opt_ LPPROC_THREAD_ATTRIBUTE_LIST lpAttributeList,_In_ DWORD dwAttributeCount,_Reserved_ DWORD dwFlags,_Inout_ PSIZE_T lpSize)
SC_HANDLE WINAPI advapi32.OpenService(_In_ SC_HANDLE hSCManager,_In_ LPCTSTR lpServiceName,_In_ DWORD dwDesiredAccess)
SC_HANDLE WINAPI advapi32.OpenServiceW(_In_ SC_HANDLE hSCManager,_In_ LPCTSTR lpServiceName,_In_ DWORD dwDesiredAccess)
SC_HANDLE WINAPI advapi32.OpenServiceA(_In_ SC_HANDLE hSCManager,_In_ LPCTSTR lpServiceName,_In_ DWORD dwDesiredAccess)
HDESK WINAPI user32.OpenInputDesktop(_In_ DWORD dwFlags,_In_ BOOL fInherit,_In_ ACCESS_MASK dwDesiredAccess)
UINT WINAPI kernel32.SetErrorMode(_In_ UINT uMode)
SC_HANDLE WINAPI advapi32.OpenService(_In_ SC_HANDLE hSCManager,_In_ LPCTSTR lpServiceName,_In_ DWORD dwDesiredAccess)
SC_HANDLE WINAPI advapi32.OpenServiceW(_In_ SC_HANDLE hSCManager,_In_ LPCTSTR lpServiceName,_In_ DWORD dwDesiredAccess)
SC_HANDLE WINAPI advapi32.OpenServiceA(_In_ SC_HANDLE hSCManager,_In_ LPCTSTR lpServiceName,_In_ DWORD dwDesiredAccess)
BOOLEAN WINAPI powrprof.GetPwrCapabilities(_Out_ PSYSTEM_POWER_CAPABILITIES lpSystemPowerCapabilities)
BOOLEAN WINAPI powrprof.SetSuspendState(_In_ BOOLEAN Hibernate,_In_ BOOLEAN ForceCritical,_In_ BOOLEAN DisableWakeEvent)
DWORD WINAPI powrprof.PowerSettingUnregisterNotification(_Inout_ HPOWERNOTIFY RegistrationHandle)
DWORD WINAPI powrprof.PowerSettingRegisterNotification(_In_ LPCGUID SettingGuid,_In_ DWORD Flags,_In_ HANDLE Recipient,_Out_ PHPOWERNOTIFY RegistrationHandle)
UINT __stdcall None.CustomAction(MSIHANDLE hInstall None)
HWINSTA WINAPI user32.OpenWindowStation(_In_ LPTSTR lpszWinSta,_In_ BOOL fInherit,_In_ ACCESS_MASK dwDesiredAccess)
HWINSTA WINAPI user32.OpenWindowStationW(_In_ LPTSTR lpszWinSta,_In_ BOOL fInherit,_In_ ACCESS_MASK dwDesiredAccess)
HWINSTA WINAPI user32.OpenWindowStationA(_In_ LPTSTR lpszWinSta,_In_ BOOL fInherit,_In_ ACCESS_MASK dwDesiredAccess)
SC_HANDLE WINAPI advapi32.OpenService(_In_ SC_HANDLE hSCManager,_In_ LPCTSTR lpServiceName,_In_ DWORD dwDesiredAccess)
SC_HANDLE WINAPI advapi32.OpenServiceW(_In_ SC_HANDLE hSCManager,_In_ LPCTSTR lpServiceName,_In_ DWORD dwDesiredAccess)
SC_HANDLE WINAPI advapi32.OpenServiceA(_In_ SC_HANDLE hSCManager,_In_ LPCTSTR lpServiceName,_In_ DWORD dwDesiredAccess)
BOOLEAN WINAPI powrprof.SetActivePwrScheme(_In_ UINT uiID,_In_opt_ PGLOBAL_POWER_POLICY lpGlobalPowerPolicy,_In_opt_ PPOWER_POLICY lpPowerPolicy)
BOOL None wtsapi32.WTSSendMessage(_In_ HANDLE hServer,_In_ DWORD SessionId,_In_ LPTSTR pTitle,_In_ DWORD TitleLength,_In_ LPTSTR pMessage,_In_ DWORD MessageLength,_In_ DWORD Style,_In_ DWORD Timeout,_Out_ DWORD *pResponse,_In_ BOOL bWait)
BOOL None wtsapi32.WTSSendMessageW(_In_ HANDLE hServer,_In_ DWORD SessionId,_In_ LPTSTR pTitle,_In_ DWORD TitleLength,_In_ LPTSTR pMessage,_In_ DWORD MessageLength,_In_ DWORD Style,_In_ DWORD Timeout,_Out_ DWORD *pResponse,_In_ BOOL bWait)
BOOL None wtsapi32.WTSSendMessageA(_In_ HANDLE hServer,_In_ DWORD SessionId,_In_ LPTSTR pTitle,_In_ DWORD TitleLength,_In_ LPTSTR pMessage,_In_ DWORD MessageLength,_In_ DWORD Style,_In_ DWORD Timeout,_Out_ DWORD *pResponse,_In_ BOOL bWait)
BOOL WINAPI user32.UnregisterPowerSettingNotification(_In_ HPOWERNOTIFY Handle)
DWORD WINAPI powrprof.PowerUnregisterSuspendResumeNotification(_Inout_ HPOWERNOTIFY RegistrationHandle)
SC_HANDLE WINAPI advapi32.OpenService(_In_ SC_HANDLE hSCManager,_In_ LPCTSTR lpServiceName,_In_ DWORD dwDesiredAccess)
SC_HANDLE WINAPI advapi32.OpenServiceW(_In_ SC_HANDLE hSCManager,_In_ LPCTSTR lpServiceName,_In_ DWORD dwDesiredAccess)
SC_HANDLE WINAPI advapi32.OpenServiceA(_In_ SC_HANDLE hSCManager,_In_ LPCTSTR lpServiceName,_In_ DWORD dwDesiredAccess)
BOOL WINAPI kernel32.GetThreadContext(_In_ HANDLE hThread,_Inout_ LPCONTEXT lpContext)
BOOL None kernel32.Wow64GetThreadSelectorEntry(_In_ HANDLE hThread,_In_ DWORD dwSelector,_Out_ PWOW64_LDT_ENTRY lpSelectorEntry)
BOOLEAN WINAPI powrprof.CanUserWritePwrScheme(void None None)
BOOL WINAPI kernel32.GetExitCodeProcess(_In_ HANDLE hProcess,_Out_ LPDWORD lpExitCode)
BOOL WINAPI kernel32.CloseHandle(_In_ HANDLE hObject)
HRESULT None mergemod.OpenLog([in] BSTR FileName)
HPOWERNOTIFY WINAPI user32.RegisterPowerSettingNotification(_In_ HANDLE hRecipient,_In_ LPCGUID PowerSettingGuid,_In_ DWORD Flags)
BOOL WINAPI user32.CloseDesktop(_In_ HDESK hDesktop)
HRESULT None mergemod.ExtractFiles([in] BSTR Path)
DWORD WINAPI powrprof.PowerRestoreDefaultPowerSchemes(void None None)
NTSTATUS WINAPI powrprof.CallNtPowerInformation(_In_ POWER_INFORMATION_LEVEL InformationLevel,_In_ PVOID lpInputBuffer,_In_ ULONG nInputBufferSize,_Out_ PVOID lpOutputBuffer,_In_ ULONG nOutputBufferSize)
BOOL WINAPI user32.SetProcessWindowStation(_In_ HWINSTA hWinSta)
HDESK WINAPI user32.CreateDesktopEx(_In_ LPCTSTR lpszDesktop,_Reserved_ LPCTSTR lpszDevice,_Reserved_ DEVMODE *pDevmode,_In_ DWORD dwFlags,_In_ ACCESS_MASK dwDesiredAccess,_In_opt_ LPSECURITY_ATTRIBUTES lpsa,_In_ ULONG ulHeapSize,_Reserved_ PVOID pvoid)
HDESK WINAPI user32.CreateDesktopExW(_In_ LPCTSTR lpszDesktop,_Reserved_ LPCTSTR lpszDevice,_Reserved_ DEVMODE *pDevmode,_In_ DWORD dwFlags,_In_ ACCESS_MASK dwDesiredAccess,_In_opt_ LPSECURITY_ATTRIBUTES lpsa,_In_ ULONG ulHeapSize,_Reserved_ PVOID pvoid)
HDESK WINAPI user32.CreateDesktopExA(_In_ LPCTSTR lpszDesktop,_Reserved_ LPCTSTR lpszDevice,_Reserved_ DEVMODE *pDevmode,_In_ DWORD dwFlags,_In_ ACCESS_MASK dwDesiredAccess,_In_opt_ LPSECURITY_ATTRIBUTES lpsa,_In_ ULONG ulHeapSize,_Reserved_ PVOID pvoid)
DWORD WINAPI advapi32.NotifyServiceStatusChange(_In_ SC_HANDLE hService,_In_ DWORD dwNotifyMask,_In_ PSERVICE_NOTIFY pNotifyBuffer)
DWORD WINAPI advapi32.NotifyServiceStatusChangeW(_In_ SC_HANDLE hService,_In_ DWORD dwNotifyMask,_In_ PSERVICE_NOTIFY pNotifyBuffer)
DWORD WINAPI advapi32.NotifyServiceStatusChangeA(_In_ SC_HANDLE hService,_In_ DWORD dwNotifyMask,_In_ PSERVICE_NOTIFY pNotifyBuffer)
BOOL WINAPI user32.SetThreadDesktop(_In_ HDESK hDesktop)
HWINSTA WINAPI user32.CreateWindowStation(_In_opt_ LPCTSTR lpwinsta,DWORD dwFlags None,_In_ ACCESS_MASK dwDesiredAccess,_In_opt_ LPSECURITY_ATTRIBUTES lpsa)
HWINSTA WINAPI user32.CreateWindowStationW(_In_opt_ LPCTSTR lpwinsta,DWORD dwFlags None,_In_ ACCESS_MASK dwDesiredAccess,_In_opt_ LPSECURITY_ATTRIBUTES lpsa)
HWINSTA WINAPI user32.CreateWindowStationA(_In_opt_ LPCTSTR lpwinsta,DWORD dwFlags None,_In_ ACCESS_MASK dwDesiredAccess,_In_opt_ LPSECURITY_ATTRIBUTES lpsa)
HWINSTA WINAPI user32.GetProcessWindowStation(void None None)
VOID WINAPI wtsapi32.WTSCloseServer(_In_ HANDLE hServer)
HRESULT None None.HRESULT_FROM_WIN32(DWORD x None)
BOOLEAN WINAPI powrprof.EnumPwrSchemes(_In_ PWRSCHEMESENUMPROC lpfnPwrSchemesEnumProc,_In_ LPARAM lParam)
LPTSTR WINAPI kernel32.GetCommandLine(void None None)
LPTSTR WINAPI kernel32.GetCommandLineW(void None None)
LPTSTR WINAPI kernel32.GetCommandLineA(void None None)
HANDLE WINAPI kernel32.OpenProcess(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ DWORD dwProcessId)
VOID WINAPI kernel32.ExitProcess(_In_ UINT uExitCode)
UINT WINAPI kernel32.GetWindowsDirectory(_Out_ LPTSTR lpBuffer,_In_ UINT uSize)
UINT WINAPI kernel32.GetWindowsDirectoryW(_Out_ LPTSTR lpBuffer,_In_ UINT uSize)
UINT WINAPI kernel32.GetWindowsDirectoryA(_Out_ LPTSTR lpBuffer,_In_ UINT uSize)
DWORD WINAPI user32.WaitForInputIdle(_In_ HANDLE hProcess,_In_ DWORD dwMilliseconds)
DWORD WINAPI kernel32.GetPriorityClass(_In_ HANDLE hProcess)
BOOL WINAPI kernel32.CreateProcess(_In_opt_ LPCTSTR lpApplicationName,_Inout_opt_ LPTSTR lpCommandLine,_In_opt_ LPSECURITY_ATTRIBUTES lpProcessAttributes,_In_opt_ LPSECURITY_ATTRIBUTES lpThreadAttributes,_In_ BOOL bInheritHandles,_In_ DWORD dwCreationFlags,_In_opt_ LPVOID lpEnvironment,_In_opt_ LPCTSTR lpCurrentDirectory,_In_ LPSTARTUPINFO lpStartupInfo,_Out_ LPPROCESS_INFORMATION lpProcessInformation)
BOOL WINAPI kernel32.CreateProcessW(_In_opt_ LPCTSTR lpApplicationName,_Inout_opt_ LPTSTR lpCommandLine,_In_opt_ LPSECURITY_ATTRIBUTES lpProcessAttributes,_In_opt_ LPSECURITY_ATTRIBUTES lpThreadAttributes,_In_ BOOL bInheritHandles,_In_ DWORD dwCreationFlags,_In_opt_ LPVOID lpEnvironment,_In_opt_ LPCTSTR lpCurrentDirectory,_In_ LPSTARTUPINFO lpStartupInfo,_Out_ LPPROCESS_INFORMATION lpProcessInformation)
BOOL WINAPI kernel32.CreateProcessA(_In_opt_ LPCTSTR lpApplicationName,_Inout_opt_ LPTSTR lpCommandLine,_In_opt_ LPSECURITY_ATTRIBUTES lpProcessAttributes,_In_opt_ LPSECURITY_ATTRIBUTES lpThreadAttributes,_In_ BOOL bInheritHandles,_In_ DWORD dwCreationFlags,_In_opt_ LPVOID lpEnvironment,_In_opt_ LPCTSTR lpCurrentDirectory,_In_ LPSTARTUPINFO lpStartupInfo,_Out_ LPPROCESS_INFORMATION lpProcessInformation)
BOOL WINAPI None.SetConsoleCtrlHandler(_In_opt_ PHANDLER_ROUTINE HandlerRoutine,_In_ BOOL Add)
DWORD WINAPI powrprof.PowerGetActiveScheme(_In_opt_ HKEY UserRootPowerKey,_Out_ GUID **ActivePolicyGuid)
BOOL WINAPI kernel32.SetSystemPowerState(_In_ BOOL fSuspend,_In_ BOOL fForce)
BOOL WINAPI kernel32.TerminateProcess(_In_ HANDLE hProcess,_In_ UINT uExitCode)
BOOLEAN WINAPI powrprof.IsPwrShutdownAllowed(void None None)
BOOL WINAPI avrt.AvRtCreateThreadOrderingGroupEx(_Out_ PHANDLE Context,_In_ PLARGE_INTEGER Period,_Inout_ GUID *ThreadOrderingGuid,_In_opt_ PLARGE_INTEGER Timeout,_In_ LPCTSTR TaskName)
BOOL WINAPI avrt.AvRtCreateThreadOrderingGroupExW(_Out_ PHANDLE Context,_In_ PLARGE_INTEGER Period,_Inout_ GUID *ThreadOrderingGuid,_In_opt_ PLARGE_INTEGER Timeout,_In_ LPCTSTR TaskName)
BOOL WINAPI avrt.AvRtCreateThreadOrderingGroupExA(_Out_ PHANDLE Context,_In_ PLARGE_INTEGER Period,_Inout_ GUID *ThreadOrderingGuid,_In_opt_ PLARGE_INTEGER Timeout,_In_ LPCTSTR TaskName)
BOOL WINAPI kernel32.QueryThreadCycleTime(_In_ HANDLE ThreadHandle,_Out_ PULONG64 CycleTime)
VOID FORCEINLINE None.TpSetCallbackPriority(_Inout_ PTP_CALLBACK_ENVIRON CallbackEnviron,_In_ TP_CALLBACK_PRIORITY Priority)
BOOL WINAPI kernel32.GetSystemPowerStatus(_Out_ LPSYSTEM_POWER_STATUS lpSystemPowerStatus)
BOOLEAN WINAPI powrprof.IsPwrSuspendAllowed(void None None)
BOOL WINAPI kernel32.IsSystemResumeAutomatic(void None None)
HANDLE None kernel32.PowerCreateRequest(_In_ PREASON_CONTEXT Context)
EXECUTION_STATE WINAPI kernel32.SetThreadExecutionState(_In_ EXECUTION_STATE esFlags)
BOOL WINAPI advapi32.CreateProcessAsUser(_In_opt_ HANDLE hToken,_In_opt_ LPCTSTR lpApplicationName,_Inout_opt_ LPTSTR lpCommandLine,_In_opt_ LPSECURITY_ATTRIBUTES lpProcessAttributes,_In_opt_ LPSECURITY_ATTRIBUTES lpThreadAttributes,_In_ BOOL bInheritHandles,_In_ DWORD dwCreationFlags,_In_opt_ LPVOID lpEnvironment,_In_opt_ LPCTSTR lpCurrentDirectory,_In_ LPSTARTUPINFO lpStartupInfo,_Out_ LPPROCESS_INFORMATION lpProcessInformation)
BOOL WINAPI advapi32.CreateProcessAsUserW(_In_opt_ HANDLE hToken,_In_opt_ LPCTSTR lpApplicationName,_Inout_opt_ LPTSTR lpCommandLine,_In_opt_ LPSECURITY_ATTRIBUTES lpProcessAttributes,_In_opt_ LPSECURITY_ATTRIBUTES lpThreadAttributes,_In_ BOOL bInheritHandles,_In_ DWORD dwCreationFlags,_In_opt_ LPVOID lpEnvironment,_In_opt_ LPCTSTR lpCurrentDirectory,_In_ LPSTARTUPINFO lpStartupInfo,_Out_ LPPROCESS_INFORMATION lpProcessInformation)
BOOL WINAPI advapi32.CreateProcessAsUserA(_In_opt_ HANDLE hToken,_In_opt_ LPCTSTR lpApplicationName,_Inout_opt_ LPTSTR lpCommandLine,_In_opt_ LPSECURITY_ATTRIBUTES lpProcessAttributes,_In_opt_ LPSECURITY_ATTRIBUTES lpThreadAttributes,_In_ BOOL bInheritHandles,_In_ DWORD dwCreationFlags,_In_opt_ LPVOID lpEnvironment,_In_opt_ LPCTSTR lpCurrentDirectory,_In_ LPSTARTUPINFO lpStartupInfo,_Out_ LPPROCESS_INFORMATION lpProcessInformation)
BOOLEAN WINAPI powrprof.DevicePowerEnumDevices(_In_ ULONG QueryIndex,_In_ ULONG QueryInterpretationFlags,_In_ ULONG QueryFlags,_Out_opt_ PBYTE pReturnBuffer,_Inout_ PULONG pBufferSize)
BOOL WINAPI advapi32.CreateProcessWithLogonW(_In_ LPCWSTR lpUsername,_In_opt_ LPCWSTR lpDomain,_In_ LPCWSTR lpPassword,_In_ DWORD dwLogonFlags,_In_opt_ LPCWSTR lpApplicationName,_Inout_opt_ LPWSTR lpCommandLine,_In_ DWORD dwCreationFlags,_In_opt_ LPVOID lpEnvironment,_In_opt_ LPCWSTR lpCurrentDirectory,_In_ LPSTARTUPINFOW lpStartupInfo,_Out_ LPPROCESS_INFORMATION lpProcessInfo)
UINT None msi.MsiQueryFeatureStateEx(_In_ LPTSTR szProductCode,_In_ LPTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ LPCTSTR szFeature,_Out_opt_ INSTALLSTATE *pdwState)
UINT None msi.MsiQueryFeatureStateExW(_In_ LPTSTR szProductCode,_In_ LPTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ LPCTSTR szFeature,_Out_opt_ INSTALLSTATE *pdwState)
UINT None msi.MsiQueryFeatureStateExA(_In_ LPTSTR szProductCode,_In_ LPTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ LPCTSTR szFeature,_Out_opt_ INSTALLSTATE *pdwState)
BOOL WINAPI avrt.AvRevertMmThreadCharacteristics(_In_ HANDLE AvrtHandle)
HPOWERNOTIFY WINAPI user32.RegisterSuspendResumeNotification(_In_ HANDLE hRecipient,_In_ DWORD Flags)
BOOLEAN WINAPI powrprof.DeletePwrScheme(_In_ UINT uiIndex)
VOID FORCEINLINE None.TpSetCallbackRaceWithDll(_Inout_ PTP_CALLBACK_ENVIRON CallbackEnviron,_In_ PVOID DllHandle)
BOOL WINAPI kernel32.GetDevicePowerState(_In_ HANDLE hDevice,_Out_ BOOL *pfOn)
BOOLEAN WINAPI powrprof.GetPwrDiskSpindownRange(_Out_ PUINT RangeMax,_Out_ PUINT RangeMin)
BOOLEAN WINAPI powrprof.WritePwrScheme(_In_ PUINT puiID,_In_ LPWSTR lpszName,_In_opt_ LPWSTR lpszDescription,_In_ PPOWER_POLICY pPowerPolicy)
BOOL WINAPI kernel32.QueryProcessCycleTime(_In_ HANDLE ProcessHandle,_Out_ PULONG64 CycleTime)
DWORD WINAPI kernel32.GetFullPathName(_In_ LPCTSTR lpFileName,_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer,_Out_ LPTSTR *lpFilePart)
DWORD WINAPI kernel32.GetFullPathNameW(_In_ LPCTSTR lpFileName,_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer,_Out_ LPTSTR *lpFilePart)
DWORD WINAPI kernel32.GetFullPathNameA(_In_ LPCTSTR lpFileName,_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer,_Out_ LPTSTR *lpFilePart)
BOOL None kernel32.PowerSetRequest(_In_ HANDLE PowerRequest,_In_ POWER_REQUEST_TYPE RequestType)
HRESULT WINAPI kernel32.GetThreadDescription(_In_ HANDLE hThread,_Out_ PWSTR *threadDescription)
POWER_PLATFORM_ROLE WINAPI powrprof.PowerDeterminePlatformRoleEx(_In_ ULONG Version)
DWORD WINAPI powrprof.PowerReportThermalEvent(_In_ PTHERMAL_EVENT Event)
POWER_PLATFORM_ROLE WINAPI powrprof.PowerDeterminePlatformRole(void None None)
BOOL WINUSERAPI user32.UnregisterSuspendResumeNotification(_Inout_ HPOWERNOTIFY RegistrationHandle)
BOOLEAN WINAPI powrprof.ReadProcessorPwrScheme(_In_ UINT uiID,_Out_ PMACHINE_PROCESSOR_POWER_POLICY pMachineProcessorPowerPolicy)
DWORD WINAPI kernel32.GetEnvironmentVariable(_In_opt_ LPCTSTR lpName,_Out_opt_ LPTSTR lpBuffer,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetEnvironmentVariableW(_In_opt_ LPCTSTR lpName,_Out_opt_ LPTSTR lpBuffer,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetEnvironmentVariableA(_In_opt_ LPCTSTR lpName,_Out_opt_ LPTSTR lpBuffer,_In_ DWORD nSize)
BOOLEAN WINAPI powrprof.WriteProcessorPwrScheme(_In_ UINT ID,_In_ PMACHINE_PROCESSOR_POWER_POLICY pMachineProcessorPowerPolicy)
typedef None None.UINT(VCAPITYPE *VirtualChannelClose None)
BOOLEAN WINAPI powrprof.ReadGlobalPwrPolicy(_Out_ PGLOBAL_POWER_POLICY pGlobalPowerPolicy)
DWORD WINAPI powrprof.PowerReplaceDefaultPowerSchemes(void None None)
UINT WINAPI kernel32.GetSystemDirectory(_Out_ LPTSTR lpBuffer,_In_ UINT uSize)
UINT WINAPI kernel32.GetSystemDirectoryW(_Out_ LPTSTR lpBuffer,_In_ UINT uSize)
UINT WINAPI kernel32.GetSystemDirectoryA(_Out_ LPTSTR lpBuffer,_In_ UINT uSize)
DWORD WINAPI powrprof.PowerRegisterSuspendResumeNotification(_In_ DWORD Flags,_In_ HANDLE Recipient,_Out_ PHPOWERNOTIFY RegistrationHandle)
NTSTATUS WINAPI powrprof.CallNtPowerInformation(_In_ POWER_INFORMATION_LEVEL InformationLevel,_In_ PVOID lpInputBuffer,_In_ ULONG nInputBufferSize,_Out_ PVOID lpOutputBuffer,_In_ ULONG nOutputBufferSize)
BOOLEAN WINAPI powrprof.WriteGlobalPwrPolicy(_In_ PGLOBAL_POWER_POLICY pGlobalPowerPolicy)
LPTCH WINAPI kernel32.GetEnvironmentStrings(void None None)
LPTCH WINAPI kernel32.GetEnvironmentStringsW(void None None)
LPTCH WINAPI kernel32.GetEnvironmentStringsA(void None None)
BOOLEAN WINAPI powrprof.GetActivePwrScheme(_Out_ PUINT puiID)
BOOL WINAPI kernel32.ReadProcessMemory(_In_ HANDLE hProcess,_In_ LPCVOID lpBaseAddress,_Out_ LPVOID lpBuffer,_In_ SIZE_T nSize,_Out_ SIZE_T *lpNumberOfBytesRead)
BOOL WINAPI storprop.DvdLauncher(_In_ HWND HWnd,_In_ CHAR DriveLetter)
BOOL CALLBACK None.EnumWindowStationProc(_In_ LPTSTR lpszWindowStation,_In_ LPARAM lParam)
BOOL CALLBACK None.WINSTAENUMPROCW(_In_ LPTSTR lpszWindowStation,_In_ LPARAM lParam)
BOOL CALLBACK None.WINSTAENUMPROCA(_In_ LPTSTR lpszWindowStation,_In_ LPARAM lParam)
BOOL CALLBACK None.EnumDesktopProc(_In_ LPTSTR lpszDesktop,_In_ LPARAM lParam)
DWORD WINAPI powrprof.DevicePowerSetDeviceState(_In_ LPCWSTR DeviceDescription,_In_ ULONG SetFlags,_In_ PCVOID SetData)
BOOL WINAPI kernel32.DebugBreakProcess(_In_ HANDLE Process)
LONG WINAPI storprop.CdromIsDigitalPlaybackEnabled(_In_ HDEVINFO DevInfo,_In_ PSP_DEVINFO_DATA DevInfoData,_Out_ PBOOLEAN Enabled)
BOOL WINAPI advapi32.CreateProcessWithTokenW(_In_ HANDLE hToken,_In_ DWORD dwLogonFlags,_In_opt_ LPCWSTR lpApplicationName,_Inout_opt_ LPWSTR lpCommandLine,_In_ DWORD dwCreationFlags,_In_opt_ LPVOID lpEnvironment,_In_opt_ LPCWSTR lpCurrentDirectory,_In_ LPSTARTUPINFOW lpStartupInfo,_Out_ LPPROCESS_INFORMATION lpProcessInfo)
HDESK WINAPI user32.CreateDesktop(_In_ LPCTSTR lpszDesktop,_Reserved_ LPCTSTR lpszDevice,_Reserved_ DEVMODE *pDevmode,_In_ DWORD dwFlags,_In_ ACCESS_MASK dwDesiredAccess,_In_opt_ LPSECURITY_ATTRIBUTES lpsa)
HDESK WINAPI user32.CreateDesktopW(_In_ LPCTSTR lpszDesktop,_Reserved_ LPCTSTR lpszDevice,_Reserved_ DEVMODE *pDevmode,_In_ DWORD dwFlags,_In_ ACCESS_MASK dwDesiredAccess,_In_opt_ LPSECURITY_ATTRIBUTES lpsa)
HDESK WINAPI user32.CreateDesktopA(_In_ LPCTSTR lpszDesktop,_Reserved_ LPCTSTR lpszDevice,_Reserved_ DEVMODE *pDevmode,_In_ DWORD dwFlags,_In_ ACCESS_MASK dwDesiredAccess,_In_opt_ LPSECURITY_ATTRIBUTES lpsa)
HRESULT None mergemod.get_Errors([out] IMsmErrors **Errors)
BOOL WINAPI kernel32.SetHandleInformation(_In_ HANDLE hObject,_In_ DWORD dwMask,_In_ DWORD dwFlags)
BOOLEAN WINAPI powrprof.GetCurrentPowerPolicies(_Out_ PGLOBAL_POWER_POLICY pGlobalPowerPolicy,_Out_ PPOWER_POLICY pPowerPolicy)
UINT WINAPI kernel32.GetWindowsDirectory(_Out_ LPTSTR lpBuffer,_In_ UINT uSize)
UINT WINAPI kernel32.GetWindowsDirectoryW(_Out_ LPTSTR lpBuffer,_In_ UINT uSize)
UINT WINAPI kernel32.GetWindowsDirectoryA(_Out_ LPTSTR lpBuffer,_In_ UINT uSize)
BOOL WINAPI kernel32.SetProcessWorkingSetSizeEx(_In_ HANDLE hProcess,_In_ SIZE_T dwMinimumWorkingSetSize,_In_ SIZE_T dwMaximumWorkingSetSize,_In_ DWORD Flags)
BOOL WINAPI kernel32.DebugBreakProcess(_In_ HANDLE Process)
BOOL WINAPI kernel32.DebugBreakProcess(_In_ HANDLE Process)
BOOL WINAPI user32.SwitchDesktop(_In_ HDESK hDesktop)
BOOLEAN WINAPI powrprof.IsPwrHibernateAllowed(void None None)
HANDLE WINAPI kernel32.CreateRemoteThread(_In_ HANDLE hProcess,_In_ LPSECURITY_ATTRIBUTES lpThreadAttributes,_In_ SIZE_T dwStackSize,_In_ LPTHREAD_START_ROUTINE lpStartAddress,_In_ LPVOID lpParameter,_In_ DWORD dwCreationFlags,_Out_ LPDWORD lpThreadId)
HANDLE None wtsapi32.WTSVirtualChannelOpenEx(_In_ DWORD SessionId,_In_ LPSTR pVirtualName,_In_ DWORD flags)
BOOL WINAPI None.ExitWindows(DWORD dwReserved None,UINT uReserved None)
BOOL WINAPI user32.CloseWindowStation(_In_ HWINSTA hWinSta)
LONG WINAPI storprop.CdromEnableDigitalPlayback(_In_ HDEVINFO DevInfo,_In_ PSP_DEVINFO_DATA DevInfoData,_In_ BOOLEAN ForceUnknown)
DWORD WINAPI mstlsapi.TLSKeyPackEnumEnd(_In_ TLS_HANDLE hHandle,_Out_ PDWORD pdwErrCode)
BOOL None kernel32.SetThreadErrorMode(_In_ DWORD dwNewMode,_Out_ LPDWORD lpOldMode)
BOOL WINAPI kernel32.DebugBreakProcess(_In_ HANDLE Process)
BOOLEAN WINAPI powrprof.DevicePowerClose(void None None)
HDESK WINAPI user32.OpenDesktop(_In_ LPTSTR lpszDesktop,_In_ DWORD dwFlags,_In_ BOOL fInherit,_In_ ACCESS_MASK dwDesiredAccess)
HDESK WINAPI user32.OpenDesktopW(_In_ LPTSTR lpszDesktop,_In_ DWORD dwFlags,_In_ BOOL fInherit,_In_ ACCESS_MASK dwDesiredAccess)
HDESK WINAPI user32.OpenDesktopA(_In_ LPTSTR lpszDesktop,_In_ DWORD dwFlags,_In_ BOOL fInherit,_In_ ACCESS_MASK dwDesiredAccess)
BOOL WINAPI avrt.AvRevertMmThreadCharacteristics(_In_ HANDLE AvrtHandle)
BOOL WINAPI user32.EnumDesktops(_In_opt_ HWINSTA hwinsta,_In_ DESKTOPENUMPROC lpEnumFunc,_In_ LPARAM lParam)
BOOL WINAPI user32.EnumDesktopsW(_In_opt_ HWINSTA hwinsta,_In_ DESKTOPENUMPROC lpEnumFunc,_In_ LPARAM lParam)
BOOL WINAPI user32.EnumDesktopsA(_In_opt_ HWINSTA hwinsta,_In_ DESKTOPENUMPROC lpEnumFunc,_In_ LPARAM lParam)
BOOL WINAPI newdev.InstallNewDevice(_In_ HWND hwndParent,_In_ LPGUID ClassGuid,_Out_ PDWORD pReboot)
HRESULT WINAPI kernel32.CopyFile2(_In_ PCWSTR pwszExistingFileName,_In_ PCWSTR pwszNewFileName,_In_opt_ COPYFILE2_EXTENDED_PARAMETERS *pExtendedParameters)
BOOL WINAPI wtsapi32.WTSEnumerateProcessesEx(_In_ HANDLE hServer,_Inout_ DWORD *pLevel,_In_ DWORD SessionID,_Out_ LPTSTR *ppProcessInfo,_Out_ DWORD *pCount)
BOOL WINAPI wtsapi32.WTSEnumerateProcessesExW(_In_ HANDLE hServer,_Inout_ DWORD *pLevel,_In_ DWORD SessionID,_Out_ LPTSTR *ppProcessInfo,_Out_ DWORD *pCount)
BOOL WINAPI wtsapi32.WTSEnumerateProcessesExA(_In_ HANDLE hServer,_Inout_ DWORD *pLevel,_In_ DWORD SessionID,_Out_ LPTSTR *ppProcessInfo,_Out_ DWORD *pCount)
POWER_PLATFORM_ROLE WINAPI powrprof.PowerDeterminePlatformRoleEx(_In_ ULONG Version)
BOOL WINAPI user32.SetProcessWindowStation(_In_ HWINSTA hWinSta)
BOOL WINAPI kernel32.GetExitCodeThread(_In_ HANDLE hThread,_Out_ LPDWORD lpExitCode)
BOOLEAN WINAPI powrprof.GetActivePwrScheme(_Out_ PUINT puiID)
DWORD WINAPI powrprof.PowerImportPowerScheme(_In_ HKEY RootPowerKey,_In_ LPCWSTR ImportFileNamePath,_Inout_ GUID **DestinationSchemeGuid)
BOOL WINAPI kernel32.DebugActiveProcessStop(_In_ DWORD dwProcessId)
BOOL WINAPI kernel32.WriteProcessMemory(_In_ HANDLE hProcess,_In_ LPVOID lpBaseAddress,_In_ LPCVOID lpBuffer,_In_ SIZE_T nSize,_Out_ SIZE_T *lpNumberOfBytesWritten)
BOOL WINAPI kernel32.WaitForDebugEvent(_Out_ LPDEBUG_EVENT lpDebugEvent,_In_ DWORD dwMilliseconds)
VOID VCAPITYPE None.CHANNEL_OPEN_EVENT_FN(_In_ DWORD openHandle,_In_ UINT event,_In_ LPVOID pData,_In_ UINT32 dataLength,_In_ UINT32 totalLength,_In_ UINT32 dataFlags)
BOOL None kernel32.PowerClearRequest(_In_ HANDLE PowerRequest,_In_ POWER_REQUEST_TYPE RequestType)
BOOL WINAPI wtsapi32.WTSFreeMemoryEx(_In_ WTS_TYPE_CLASS WTSTypeClass,_In_ PVOID pMemory,_In_ ULONG NumberOfEntries)
BOOL WINAPI wtsapi32.WTSFreeMemoryExW(_In_ WTS_TYPE_CLASS WTSTypeClass,_In_ PVOID pMemory,_In_ ULONG NumberOfEntries)
BOOL WINAPI wtsapi32.WTSFreeMemoryExA(_In_ WTS_TYPE_CLASS WTSTypeClass,_In_ PVOID pMemory,_In_ ULONG NumberOfEntries)
BOOL WINAPI wtsapi32.WTSStopRemoteControlSession(_In_ ULONG LogonId)
HRESULT None mergemod.get_ConfigurableItems([out] IMsmConfigurableItems **ConfigurableItems)
BOOL WINAPI user32.EnumWindowStations(_In_ WINSTAENUMPROC lpEnumFunc,_In_ LPARAM lParam)
BOOL WINAPI user32.EnumWindowStationsW(_In_ WINSTAENUMPROC lpEnumFunc,_In_ LPARAM lParam)
BOOL WINAPI user32.EnumWindowStationsA(_In_ WINSTAENUMPROC lpEnumFunc,_In_ LPARAM lParam)
UINT WINAPI kernel32.GetSystemFirmwareTable(_In_ DWORD FirmwareTableProviderSignature,_In_ DWORD FirmwareTableID,_Out_ PVOID pFirmwareTableBuffer,_In_ DWORD BufferSize)
VOID VCAPITYPE None.CHANNEL_INIT_EVENT_FN(_In_ LPVOID pInitHandle,_In_ UINT event,_In_ LPVOID pData,_In_ UINT dataLength)
BOOLEAN WINAPI powrprof.DevicePowerOpen(ULONG Flags None)
BOOL None wtsapi32.WTSDisconnectSession(_In_ HANDLE hServer,_In_ DWORD SessionId,_In_ BOOL bWait)
BOOLEAN WINAPI powrprof.ReadPwrScheme(_In_ UINT uiID,_Out_ PPOWER_POLICY pPowerPolicy)
BOOL WINAPI kernel32.WaitForDebugEventEx(_Out_ LPDEBUG_EVENT lpDebugEvent,_In_ DWORD dwMilliseconds)
BOOL None wtsapi32.WTSSetUserConfig(_In_ LPTSTR pServerName,_In_ LPTSTR pUserName,_In_ WTS_CONFIG_CLASS WTSConfigClass,_In_ LPTSTR pBuffer,_In_ DWORD DataLength)
BOOL None wtsapi32.WTSSetUserConfigW(_In_ LPTSTR pServerName,_In_ LPTSTR pUserName,_In_ WTS_CONFIG_CLASS WTSConfigClass,_In_ LPTSTR pBuffer,_In_ DWORD DataLength)
BOOL None wtsapi32.WTSSetUserConfigA(_In_ LPTSTR pServerName,_In_ LPTSTR pUserName,_In_ WTS_CONFIG_CLASS WTSConfigClass,_In_ LPTSTR pBuffer,_In_ DWORD DataLength)
BOOL None wtsapi32.WTSVirtualChannelClose(_In_ HANDLE hChannelHandle)
DWORD WINAPI kernel32.SetThreadIdealProcessor(_In_ HANDLE hThread,_In_ DWORD dwIdealProcessor)
BOOL None wtsapi32.WTSUnRegisterSessionNotification(_In_ HWND hWnd)
BOOL WINAPI kernel32.GetNumaNodeProcessorMask(_In_ UCHAR Node,_Out_ PULONGLONG ProcessorMask)
UINT WINAPI kernel32.WinExec(_In_ LPCSTR lpCmdLine,_In_ UINT uCmdShow)
DWORD WINAPI mstlsapi.TLSLicenseEnumNext(_In_ TLS_HANDLE hHandle,_In_ LSLicense *lpLicense,_Out_ PDWORD pdwErrCode)
BOOL WINAPI user32.SetUserObjectInformation(_In_ HANDLE hObj,_In_ int nIndex,_In_ PVOID pvInfo,_In_ DWORD nLength)
BOOL WINAPI user32.SetUserObjectInformationW(_In_ HANDLE hObj,_In_ int nIndex,_In_ PVOID pvInfo,_In_ DWORD nLength)
BOOL WINAPI user32.SetUserObjectInformationA(_In_ HANDLE hObj,_In_ int nIndex,_In_ PVOID pvInfo,_In_ DWORD nLength)
HDESK WINAPI user32.GetThreadDesktop(_In_ DWORD dwThreadId)
HANDLE WINAPI kernel32.CreateJobObject(_In_opt_ LPSECURITY_ATTRIBUTES lpJobAttributes,_In_opt_ LPCTSTR lpName)
HANDLE WINAPI kernel32.CreateJobObjectW(_In_opt_ LPSECURITY_ATTRIBUTES lpJobAttributes,_In_opt_ LPCTSTR lpName)
HANDLE WINAPI kernel32.CreateJobObjectA(_In_opt_ LPSECURITY_ATTRIBUTES lpJobAttributes,_In_opt_ LPCTSTR lpName)
HRESULT None mergemod.get_Type([out] msmErrorType *ErrorType)
DWORD WINAPI kernel32.GetCurrentDirectory(_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer)
DWORD WINAPI kernel32.GetCurrentDirectoryW(_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer)
DWORD WINAPI kernel32.GetCurrentDirectoryA(_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer)
BOOL None wtsapi32.WTSEnumerateServers(_In_ LPTSTR pDomainName,_In_ DWORD Reserved,_In_ DWORD Version,PWTS_SERVER_INFO *ppServerInfo None,DWORD *pCount None)
BOOL None wtsapi32.WTSEnumerateServersW(_In_ LPTSTR pDomainName,_In_ DWORD Reserved,_In_ DWORD Version,PWTS_SERVER_INFO *ppServerInfo None,DWORD *pCount None)
BOOL None wtsapi32.WTSEnumerateServersA(_In_ LPTSTR pDomainName,_In_ DWORD Reserved,_In_ DWORD Version,PWTS_SERVER_INFO *ppServerInfo None,DWORD *pCount None)
BOOL WINAPI kernel32.DebugActiveProcess(_In_ DWORD dwProcessId)
HANDLE None wtsapi32.WTSOpenServer(_In_ LPTSTR pServerName)
HANDLE None wtsapi32.WTSOpenServerW(_In_ LPTSTR pServerName)
HANDLE None wtsapi32.WTSOpenServerA(_In_ LPTSTR pServerName)
BOOL WINAPI wtsapi32.WTSSetListenerSecurity(_In_ HANDLE hServer,_In_ PVOID pReserved,_In_ DWORD Reserved,_In_ LPTSTR pListenerName,_In_ SECURITY_INFORMATION SecurityInformation,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor)
BOOL WINAPI wtsapi32.WTSSetListenerSecurityW(_In_ HANDLE hServer,_In_ PVOID pReserved,_In_ DWORD Reserved,_In_ LPTSTR pListenerName,_In_ SECURITY_INFORMATION SecurityInformation,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor)
BOOL WINAPI wtsapi32.WTSSetListenerSecurityA(_In_ HANDLE hServer,_In_ PVOID pReserved,_In_ DWORD Reserved,_In_ LPTSTR pListenerName,_In_ SECURITY_INFORMATION SecurityInformation,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor)
HANDLE WINAPI kernel32.CreateThread(_In_opt_ LPSECURITY_ATTRIBUTES lpThreadAttributes,_In_ SIZE_T dwStackSize,_In_ LPTHREAD_START_ROUTINE lpStartAddress,_In_opt_ LPVOID lpParameter,_In_ DWORD dwCreationFlags,_Out_opt_ LPDWORD lpThreadId)
HANDLE None kernel32.CreateRemoteThreadEx(_In_ HANDLE hProcess,_In_opt_ LPSECURITY_ATTRIBUTES lpThreadAttributes,_In_ SIZE_T dwStackSize,_In_ LPTHREAD_START_ROUTINE lpStartAddress,_In_opt_ LPVOID lpParameter,_In_ DWORD dwCreationFlags,_In_opt_ LPPROC_THREAD_ATTRIBUTE_LIST lpAttributeList,_Out_opt_ LPDWORD lpThreadId)
VOID WINAPI kernel32.Sleep(_In_ DWORD dwMilliseconds)
BOOL WINAPI user32.LockWorkStation(void None None)
BOOL WINAPI kernel32.CreateUmsThreadContext(_Out_ PUMS_CONTEXT *lpUmsThread)
BOOLEAN WINAPI powrprof.GetCurrentPowerPolicies(_Out_ PGLOBAL_POWER_POLICY pGlobalPowerPolicy,_Out_ PPOWER_POLICY pPowerPolicy)
BOOL WINAPI userenv.LoadUserProfile(_In_ HANDLE hToken,_Inout_ LPPROFILEINFO lpProfileInfo)
BOOL WINAPI userenv.LoadUserProfileW(_In_ HANDLE hToken,_Inout_ LPPROFILEINFO lpProfileInfo)
BOOL WINAPI userenv.LoadUserProfileA(_In_ HANDLE hToken,_Inout_ LPPROFILEINFO lpProfileInfo)
BOOL WINAPI kernel32.GetDevicePowerState(_In_ HANDLE hDevice,_Out_ BOOL *pfOn)
VOID FORCEINLINE None.TpSetCallbackThreadpool(_Inout_ PTP_CALLBACK_ENVIRON CallbackEnviron,_In_ PTP_POOL Pool)
VOID FORCEINLINE None.TpSetCallbackPersistent(_Inout_ PTP_CALLBACK_ENVIRON CallbackEnviron)
VOID WINAPI kernel32.ExitThread(_In_ DWORD dwExitCode)
DWORD WINAPI mstlsapi.TLSGetServerCertificate(_In_ TLS_HANDLE hHandle,_In_ BOOL bSignCert,_Out_ LPBYTE *ppbCertBlob,_Out_ LPDWORD lpdwCertBlobLen,_Out_ PDWORD pdwErrCode)
BOOL WINAPI advapi32.DuplicateTokenEx(_In_ HANDLE hExistingToken,_In_ DWORD dwDesiredAccess,_In_opt_ LPSECURITY_ATTRIBUTES lpTokenAttributes,_In_ SECURITY_IMPERSONATION_LEVEL ImpersonationLevel,_In_ TOKEN_TYPE TokenType,_Out_ PHANDLE phNewToken)
BOOLEAN WINAPI powrprof.DevicePowerClose(void None None)
DWORD WINAPI mstlsapi.TLSLicenseEnumEnd(_In_ TLS_HANDLE hHandle,_Out_ PDWORD pdwErrCode)
DWORD WINAPI powrprof.PowerReportThermalEvent(_In_ PTHERMAL_EVENT Event)
DWORD WINAPI kernel32.GetProcessVersion(_In_ DWORD ProcessId)
VOID FORCEINLINE None.TpDestroyCallbackEnviron(_In_ PTP_CALLBACK_ENVIRON CallbackEnviron)
BOOL WINAPI kernel32.SetProcessPriorityBoost(_In_ HANDLE hProcess,_In_ BOOL DisablePriorityBoost)
PUMS_CONTEXT WINAPI kernel32.GetCurrentUmsThread(void None None)
DWORD None kernel32.GetActiveProcessorCount(_In_ WORD GroupNumber)
DWORD WINAPI kernel32.ResumeThread(_In_ HANDLE hThread)
VOID None None.SetThreadpoolCallbackCleanupGroup(_Inout_ PTP_CALLBACK_ENVIRON pcbe,_In_ PTP_CLEANUP_GROUP ptpcg,_In_opt_ PTP_CLEANUP_GROUP_CANCEL_CALLBACK pfng)
typedef None None.UINT(VCAPITYPE *VirtualChannelInit None)
DWORD WINAPI kernel32.GetThreadId(_In_ HANDLE Thread)
BOOL WINAPI kernel32.SetThreadpoolTimerEx(_Inout_ PTP_TIMER pti,_In_opt_ PFILETIME pftDueTime,_In_ DWORD msPeriod,_In_opt_ DWORD msWindowLength)
BOOL WINAPI kernel32.GetExitCodeThread(_In_ HANDLE hThread,_Out_ LPDWORD lpExitCode)
void WINAPI mstlsapi.TLSDisconnectFromServer(_In_ TLS_HANDLE hHandle)
BOOL WINAPI kernel32.GetHandleInformation(_In_ HANDLE hObject,_Out_ LPDWORD lpdwFlags)
HDESK WINAPI user32.OpenDesktop(_In_ LPTSTR lpszDesktop,_In_ DWORD dwFlags,_In_ BOOL fInherit,_In_ ACCESS_MASK dwDesiredAccess)
HDESK WINAPI user32.OpenDesktopW(_In_ LPTSTR lpszDesktop,_In_ DWORD dwFlags,_In_ BOOL fInherit,_In_ ACCESS_MASK dwDesiredAccess)
HDESK WINAPI user32.OpenDesktopA(_In_ LPTSTR lpszDesktop,_In_ DWORD dwFlags,_In_ BOOL fInherit,_In_ ACCESS_MASK dwDesiredAccess)
typedef None None.BOOL(VCAPITYPE *VirtualChannelEntry None)
HRESULT None mergemod.get_DatabaseTable([out] BSTR *Table)
BOOL WINAPI user32.ShutdownBlockReasonCreate(_In_ HWND hWnd,_In_ LPCWSTR pwszReason)
VOID WINAPI wtsapi32.WTSCloseServer(_In_ HANDLE hServer)
HANDLE None wtsapi32.WTSVirtualChannelOpen(_In_ HANDLE hServer,_In_ DWORD SessionId,_In_ LPSTR pVirtualName)
typedef None None.UINT(VCAPITYPE *VirtualChannelOpen None)
VOID WINAPI kernel32.SubmitThreadpoolWork(_Inout_ PTP_WORK pwk)
DWORD WINAPI powrprof.PowerReplaceDefaultPowerSchemes(void None None)
BOOL WINAPI kernel32.DuplicateHandle(_In_ HANDLE hSourceProcessHandle,_In_ HANDLE hSourceHandle,_In_ HANDLE hTargetProcessHandle,_Out_ LPHANDLE lpTargetHandle,_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ DWORD dwOptions)
BOOL WINAPI advapi32.InitiateSystemShutdownEx(_In_opt_ LPTSTR lpMachineName,_In_opt_ LPTSTR lpMessage,_In_ DWORD dwTimeout,_In_ BOOL bForceAppsClosed,_In_ BOOL bRebootAfterShutdown,_In_ DWORD dwReason)
BOOL WINAPI advapi32.InitiateSystemShutdownExW(_In_opt_ LPTSTR lpMachineName,_In_opt_ LPTSTR lpMessage,_In_ DWORD dwTimeout,_In_ BOOL bForceAppsClosed,_In_ BOOL bRebootAfterShutdown,_In_ DWORD dwReason)
BOOL WINAPI advapi32.InitiateSystemShutdownExA(_In_opt_ LPTSTR lpMachineName,_In_opt_ LPTSTR lpMessage,_In_ DWORD dwTimeout,_In_ BOOL bForceAppsClosed,_In_ BOOL bRebootAfterShutdown,_In_ DWORD dwReason)
BOOL WINAPI kernel32.SetInformationJobObject(_In_ HANDLE hJob,_In_ JOBOBJECTINFOCLASS JobObjectInfoClass,_In_ LPVOID lpJobObjectInfo,_In_ DWORD cbJobObjectInfoLength)
BOOL None wtsapi32.WTSVirtualChannelPurgeOutput(_In_ HANDLE hChannelHandle)
HANDLE WINAPI ktmw32.CreateTransaction(_In_opt_ LPSECURITY_ATTRIBUTES lpTransactionAttributes,_In_opt_ LPGUID UOW,_In_opt_ DWORD CreateOptions,_In_opt_ DWORD IsolationLevel,_In_opt_ DWORD IsolationFlags,_In_opt_ DWORD Timeout,_In_opt_ LPWSTR Description)
BOOL None wtsapi32.WTSRegisterSessionNotification(_In_ HWND hWnd,_In_ DWORD dwFlags)
LONG WINAPI advapi32.RegCreateKeyEx(_In_ HKEY hKey,_In_ LPCTSTR lpSubKey,_Reserved_ DWORD Reserved,_In_opt_ LPTSTR lpClass,_In_ DWORD dwOptions,_In_ REGSAM samDesired,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_Out_ PHKEY phkResult,_Out_opt_ LPDWORD lpdwDisposition)
LONG WINAPI advapi32.RegCreateKeyExW(_In_ HKEY hKey,_In_ LPCTSTR lpSubKey,_Reserved_ DWORD Reserved,_In_opt_ LPTSTR lpClass,_In_ DWORD dwOptions,_In_ REGSAM samDesired,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_Out_ PHKEY phkResult,_Out_opt_ LPDWORD lpdwDisposition)
LONG WINAPI advapi32.RegCreateKeyExA(_In_ HKEY hKey,_In_ LPCTSTR lpSubKey,_Reserved_ DWORD Reserved,_In_opt_ LPTSTR lpClass,_In_ DWORD dwOptions,_In_ REGSAM samDesired,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_Out_ PHKEY phkResult,_Out_opt_ LPDWORD lpdwDisposition)
BOOL WINAPI kernel32.GetExitCodeProcess(_In_ HANDLE hProcess,_Out_ LPDWORD lpExitCode)
BOOL None wtsapi32.WTSVirtualChannelWrite(_In_ HANDLE hChannelHandle,_In_ PCHAR Buffer,_In_ ULONG Length,_Out_ PULONG pBytesWritten)
HRESULT None shell32.SHGetFolderPath(_In_ HWND hwndOwner,_In_ int nFolder,_In_ HANDLE hToken,_In_ DWORD dwFlags,_Out_ LPTSTR pszPath)
HRESULT None shell32.SHGetFolderPathW(_In_ HWND hwndOwner,_In_ int nFolder,_In_ HANDLE hToken,_In_ DWORD dwFlags,_Out_ LPTSTR pszPath)
HRESULT None shell32.SHGetFolderPathA(_In_ HWND hwndOwner,_In_ int nFolder,_In_ HANDLE hToken,_In_ DWORD dwFlags,_Out_ LPTSTR pszPath)
BOOL WINAPI wtsapi32.WTSEnumerateSessionsEx(_In_ HANDLE hServer,_Inout_ DWORD *pLevel,_In_ DWORD Filter,_Out_ PWTS_SESSION_INFO_1 *ppSessionInfo,_Out_ DWORD *pCount)
BOOL WINAPI wtsapi32.WTSEnumerateSessionsExW(_In_ HANDLE hServer,_Inout_ DWORD *pLevel,_In_ DWORD Filter,_Out_ PWTS_SESSION_INFO_1 *ppSessionInfo,_Out_ DWORD *pCount)
BOOL WINAPI wtsapi32.WTSEnumerateSessionsExA(_In_ HANDLE hServer,_Inout_ DWORD *pLevel,_In_ DWORD Filter,_Out_ PWTS_SESSION_INFO_1 *ppSessionInfo,_Out_ DWORD *pCount)
BOOL None wtsapi32.WTSRegisterSessionNotificationEx(_In_ HANDLE hServer,_In_ HWND hWnd,_In_ DWORD dwFlags)
DWORD WINAPI powrprof.PowerRegisterSuspendResumeNotification(_In_ DWORD Flags,_In_ HANDLE Recipient,_Out_ PHPOWERNOTIFY RegistrationHandle)
HWND WINAPI None.CreateWindow(_In_opt_ LPCTSTR lpClassName,_In_opt_ LPCTSTR lpWindowName,_In_ DWORD dwStyle,_In_ int x,_In_ int y,_In_ int nWidth,_In_ int nHeight,_In_opt_ HWND hWndParent,_In_opt_ HMENU hMenu,_In_opt_ HINSTANCE hInstance,_In_opt_ LPVOID lpParam)
HWND WINAPI None.CreateWindowW(_In_opt_ LPCTSTR lpClassName,_In_opt_ LPCTSTR lpWindowName,_In_ DWORD dwStyle,_In_ int x,_In_ int y,_In_ int nWidth,_In_ int nHeight,_In_opt_ HWND hWndParent,_In_opt_ HMENU hMenu,_In_opt_ HINSTANCE hInstance,_In_opt_ LPVOID lpParam)
HWND WINAPI None.CreateWindowA(_In_opt_ LPCTSTR lpClassName,_In_opt_ LPCTSTR lpWindowName,_In_ DWORD dwStyle,_In_ int x,_In_ int y,_In_ int nWidth,_In_ int nHeight,_In_opt_ HWND hWndParent,_In_opt_ HMENU hMenu,_In_opt_ HINSTANCE hInstance,_In_opt_ LPVOID lpParam)
DWORD WINAPI kernel32.GetLongPathNameTransacted(_In_ LPCTSTR lpszShortPath,_Out_ LPTSTR lpszLongPath,_In_ DWORD cchBuffer,_In_ HANDLE hTransaction)
DWORD WINAPI kernel32.GetLongPathNameTransactedW(_In_ LPCTSTR lpszShortPath,_Out_ LPTSTR lpszLongPath,_In_ DWORD cchBuffer,_In_ HANDLE hTransaction)
DWORD WINAPI kernel32.GetLongPathNameTransactedA(_In_ LPCTSTR lpszShortPath,_Out_ LPTSTR lpszLongPath,_In_ DWORD cchBuffer,_In_ HANDLE hTransaction)
HANDLE WINAPI kernel32.CreateFile(_In_ LPCTSTR lpFileName,_In_ DWORD dwDesiredAccess,_In_ DWORD dwShareMode,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ DWORD dwCreationDisposition,_In_ DWORD dwFlagsAndAttributes,_In_opt_ HANDLE hTemplateFile)
HANDLE WINAPI kernel32.CreateFileW(_In_ LPCTSTR lpFileName,_In_ DWORD dwDesiredAccess,_In_ DWORD dwShareMode,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ DWORD dwCreationDisposition,_In_ DWORD dwFlagsAndAttributes,_In_opt_ HANDLE hTemplateFile)
HANDLE WINAPI kernel32.CreateFileA(_In_ LPCTSTR lpFileName,_In_ DWORD dwDesiredAccess,_In_ DWORD dwShareMode,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ DWORD dwCreationDisposition,_In_ DWORD dwFlagsAndAttributes,_In_opt_ HANDLE hTemplateFile)
BOOL WINAPI ktmw32.CommitTransaction(_In_ HANDLE TransactionHandle)
HRGN None gdi32.CreateRoundRectRgn(_In_ int nLeftRect,_In_ int nTopRect,_In_ int nRightRect,_In_ int nBottomRect,_In_ int nWidthEllipse,_In_ int nHeightEllipse)
BOOL None kernel32.GetThreadIdealProcessorEx(_In_ HANDLE hThread,_Out_ PPROCESSOR_NUMBER lpIdealProcessor)
BOOL WINAPI ktmw32.RollbackTransaction(_In_ HANDLE TransactionHandle)
BOOL WINAPI kernelbase.CompareObjectHandles(_In_ HANDLE hFirstObjectHandle,_In_ HANDLE hSecondObjectHandle)
BOOL WINAPI kernelbase.CompareObjectHandles(_In_ HANDLE hFirstObjectHandle,_In_ HANDLE hSecondObjectHandle)
static void None.Main(string[] args None)
void WINAPI kernel32.FatalExit(_In_ int ExitCode)
BOOL WINAPI user32.EnumDesktopWindows(_In_opt_ HDESK hDesktop,_In_ WNDENUMPROC lpfn,_In_ LPARAM lParam)
BOOL WINAPI user32.LockWorkStation(void None None)
BOOL WINAPI kernel32.SetFileIoOverlappedRange(_In_ HANDLE FileHandle,_In_ PUCHAR OverlappedRangeStart,_In_ ULONG Length)
void WINAPI kernel32.DebugBreak(void None None)
BOOL WINAPI kernel32.Wow64GetThreadContext(_In_ HANDLE hThread,_Inout_ PWOW64_CONTEXT lpContext)
BOOL None kernel32.SetThreadIdealProcessorEx(_In_ HANDLE hThread,_In_ PPROCESSOR_NUMBER lpIdealProcessor,_Out_opt_ PPROCESSOR_NUMBER lpPreviousIdealProcessor)
BOOL WINAPI kernel32.GetProcessShutdownParameters(_Out_ LPDWORD lpdwLevel,_Out_ LPDWORD lpdwFlags)
VOID WINAPI kernel32.WaitForThreadpoolIoCallbacks(_Inout_ PTP_IO pio,_In_ BOOL fCancelPendingCallbacks)
BOOL WINAPI kernel32.Thread32First(_In_ HANDLE hSnapshot,_Inout_ LPTHREADENTRY32 lpte)
BOOL None kernel32.SetThreadInformation(_In_ HANDLE hThread,_In_ THREAD_INFORMATION_CLASS ThreadInformationClass,_In_reads_bytes_ ThreadInformation None,_In_ DWORD ThreadInformationSize)
BOOL WINAPI kernel32.SetPriorityClass(_In_ HANDLE hProcess,_In_ DWORD dwPriorityClass)
WORD None kernel32.GetActiveProcessorGroupCount(void None None)
BOOL WINAPI avrt.AvRtCreateThreadOrderingGroupEx(_Out_ PHANDLE Context,_In_ PLARGE_INTEGER Period,_Inout_ GUID *ThreadOrderingGuid,_In_opt_ PLARGE_INTEGER Timeout,_In_ LPCTSTR TaskName)
BOOL WINAPI avrt.AvRtCreateThreadOrderingGroupExW(_Out_ PHANDLE Context,_In_ PLARGE_INTEGER Period,_Inout_ GUID *ThreadOrderingGuid,_In_opt_ PLARGE_INTEGER Timeout,_In_ LPCTSTR TaskName)
BOOL WINAPI avrt.AvRtCreateThreadOrderingGroupExA(_Out_ PHANDLE Context,_In_ PLARGE_INTEGER Period,_Inout_ GUID *ThreadOrderingGuid,_In_opt_ PLARGE_INTEGER Timeout,_In_ LPCTSTR TaskName)
BOOL WINAPI kernel32.SetProcessShutdownParameters(_In_ DWORD dwLevel,_In_ DWORD dwFlags)
VOID WINAPI kernel32.SetThreadpoolThreadMaximum(_Inout_ PTP_POOL ptpp,_In_ DWORD cthrdMost)
VOID FORCEINLINE None.TpSetCallbackRaceWithDll(_Inout_ PTP_CALLBACK_ENVIRON CallbackEnviron,_In_ PVOID DllHandle)
BOOL WINAPI kernel32.QueryInformationJobObject(_In_opt_ HANDLE hJob,_In_ JOBOBJECTINFOCLASS JobObjectInfoClass,_Out_ LPVOID lpJobObjectInfo,_In_ DWORD cbJobObjectInfoLength,_Out_opt_ LPDWORD lpReturnLength)
BOOL WINAPI kernel32.SetThreadStackGuarantee(_Inout_ PULONG StackSizeInBytes)
VOID FORCEINLINE None.TpSetCallbackLongFunction(_Inout_ PTP_CALLBACK_ENVIRON CallbackEnviron)
VOID WINAPI kernel32.CancelThreadpoolIo(_Inout_ PTP_IO pio)
BOOL WINAPI kernel32.GetNumaProximityNode(_In_ ULONG ProximityId,_Out_ PUCHAR NodeNumber)
PTP_TIMER WINAPI kernel32.CreateThreadpoolTimer(_In_ PTP_TIMER_CALLBACK pfnti,_Inout_opt_ PVOID pv,_In_opt_ PTP_CALLBACK_ENVIRON pcbe)
NTSTATUS WINAPI ntdll.ZwQueryInformationProcess(_In_ HANDLE ProcessHandle,_In_ PROCESSINFOCLASS ProcessInformationClass,_Out_ PVOID ProcessInformation,_In_ ULONG ProcessInformationLength,_Out_opt_ PULONG ReturnLength)
VOID WINAPI kernel32.DeleteFiber(_In_ LPVOID lpFiber)
DWORD WINAPI kernel32.GetCurrentThreadId(void None None)
VOID WINAPI kernel32.CloseThreadpoolCleanupGroupMembers(_Inout_ PTP_CLEANUP_GROUP ptpcg,_In_ BOOL fCancelPendingCallbacks,_Inout_opt_ PVOID pvCleanupContext)
BOOL WINAPI avrt.AvRtJoinThreadOrderingGroup(_Out_ PHANDLE Context,_In_ GUID *ThreadOrderingGuid,_In_ BOOL Before)
BOOL None kernel32.GetNumaProcessorNodeEx(_In_ PPROCESSOR_NUMBER Processor,_Out_ PUSHORT NodeNumber)
BOOL WINAPI kernel32.IsProcessInJob(_In_ HANDLE ProcessHandle,_In_opt_ HANDLE JobHandle,_Out_ PBOOL Result)
BOOL WINAPI kernel32.FlsSetValue(_In_ DWORD dwFlsIndex,_In_opt_ PVOID lpFlsData)
VOID WINAPI kernel32.FreeLibraryWhenCallbackReturns(_Inout_ PTP_CALLBACK_INSTANCE pci,_In_ HMODULE mod)
VOID FORCEINLINE None.TpSetCallbackFinalizationCallback(_Inout_ PTP_CALLBACK_ENVIRON CallbackEnviron,_In_ PTP_SIMPLE_CALLBACK FinalizationCallback)
VOID None None.SetThreadpoolCallbackRunsLong(_Inout_ PTP_CALLBACK_ENVIRON pcbe)
BOOL None wtsapi32.WTSEnumerateProcesses(_In_ HANDLE hServer,_In_ DWORD Reserved,_In_ DWORD Version,_Out_ PWTS_PROCESS_INFO *ppProcessInfo,_Out_ DWORD *pCount)
BOOL None wtsapi32.WTSEnumerateProcessesW(_In_ HANDLE hServer,_In_ DWORD Reserved,_In_ DWORD Version,_Out_ PWTS_PROCESS_INFO *ppProcessInfo,_Out_ DWORD *pCount)
BOOL None wtsapi32.WTSEnumerateProcessesA(_In_ HANDLE hServer,_In_ DWORD Reserved,_In_ DWORD Version,_Out_ PWTS_PROCESS_INFO *ppProcessInfo,_Out_ DWORD *pCount)
BOOL WINAPI kernel32.SetEnvironmentVariable(_In_ LPCTSTR lpName,_In_opt_ LPCTSTR lpValue)
BOOL WINAPI kernel32.SetEnvironmentVariableW(_In_ LPCTSTR lpName,_In_opt_ LPCTSTR lpValue)
BOOL WINAPI kernel32.SetEnvironmentVariableA(_In_ LPCTSTR lpName,_In_opt_ LPCTSTR lpValue)
BOOL WINAPI kernel32.IsThreadAFiber(void None None)
LPVOID WINAPI kernel32.CreateFiber(_In_ SIZE_T dwStackSize,_In_ LPFIBER_START_ROUTINE lpStartAddress,_In_opt_ LPVOID lpParameter)
VOID WINAPI kernel32.CloseThreadpool(_Inout_ PTP_POOL ptpp)
LPVOID WINAPI kernel32.ConvertThreadToFiber(_In_opt_ LPVOID lpParameter)
VOID WINAPI kernel32.SetThreadpoolTimer(_Inout_ PTP_TIMER pti,_In_opt_ PFILETIME pftDueTime,_In_ DWORD msPeriod,_In_opt_ DWORD msWindowLength)
BOOL WINAPI avrt.AvRtCreateThreadOrderingGroup(_Out_ PHANDLE Context,_In_ PLARGE_INTEGER Period,_Inout_ GUID *ThreadOrderingGuid,_In_opt_ PLARGE_INTEGER Timeout)
BOOL WINAPI kernel32.ConvertFiberToThread(void None None)
BOOL WINAPI user32.UserHandleGrantAccess(_In_ HANDLE hUserHandle,_In_ HANDLE hJob,_In_ BOOL bGrant)
BOOL WINAPI kernel32.GetThreadTimes(_In_ HANDLE hThread,_Out_ LPFILETIME lpCreationTime,_Out_ LPFILETIME lpExitTime,_Out_ LPFILETIME lpKernelTime,_Out_ LPFILETIME lpUserTime)
BOOL WINAPI kernel32.EnumProcesses(_Out_ DWORD *pProcessIds,_In_ DWORD cb,_Out_ DWORD *pBytesReturned)
BOOL WINAPI kernel32.DeleteUmsCompletionList(_In_ PUMS_COMPLETION_LIST UmsCompletionList)
BOOL WINAPI kernel32.QueryProtectedPolicy(_In_ LPCGUID PolicyGuid,_Out_ PULONG_PTR PolicyValue)
BOOL WINAPI kernel32.SetProcessAffinityMask(_In_ HANDLE hProcess,_In_ DWORD_PTR dwProcessAffinityMask)
BOOL WINAPI advapi32.InitiateSystemShutdownEx(_In_opt_ LPTSTR lpMachineName,_In_opt_ LPTSTR lpMessage,_In_ DWORD dwTimeout,_In_ BOOL bForceAppsClosed,_In_ BOOL bRebootAfterShutdown,_In_ DWORD dwReason)
BOOL WINAPI advapi32.InitiateSystemShutdownExW(_In_opt_ LPTSTR lpMachineName,_In_opt_ LPTSTR lpMessage,_In_ DWORD dwTimeout,_In_ BOOL bForceAppsClosed,_In_ BOOL bRebootAfterShutdown,_In_ DWORD dwReason)
BOOL WINAPI advapi32.InitiateSystemShutdownExA(_In_opt_ LPTSTR lpMachineName,_In_opt_ LPTSTR lpMessage,_In_ DWORD dwTimeout,_In_ BOOL bForceAppsClosed,_In_ BOOL bRebootAfterShutdown,_In_ DWORD dwReason)
BOOL WINAPI kernel32.SetThreadpoolThreadMinimum(_Inout_ PTP_POOL ptpp,_In_ DWORD cthrdMic)
BOOL WINAPI kernel32.QueueUserWorkItem(_In_ LPTHREAD_START_ROUTINE Function,_In_opt_ PVOID Context,_In_ ULONG Flags)
BOOL WINAPI kernel32.GetProcessHandleCount(_In_ HANDLE hProcess,_Inout_ PDWORD pdwHandleCount)
BOOL WINAPI kernel32.GetNumaHighestNodeNumber(_Out_ PULONG HighestNodeNumber)
PTP_WORK WINAPI kernel32.CreateThreadpoolWork(_In_ PTP_WORK_CALLBACK pfnwk,_Inout_opt_ PVOID pv,_In_opt_ PTP_CALLBACK_ENVIRON pcbe)
BOOL None kernel32.QueryIdleProcessorCycleTimeEx(_In_ USHORT Group,_Inout_ PULONG BufferLength,_Out_ PULONG64 ProcessorIdleCycleTime)
VOID FORCEINLINE None.TpSetCallbackPriority(_Inout_ PTP_CALLBACK_ENVIRON CallbackEnviron,_In_ TP_CALLBACK_PRIORITY Priority)
HRESULT WINAPI kernel32.GetThreadDescription(_In_ HANDLE hThread,_Out_ PWSTR *threadDescription)
BOOL WINAPI kernel32.GetProcessAffinityMask(_In_ HANDLE hProcess,_Out_ PDWORD_PTR lpProcessAffinityMask,_Out_ PDWORD_PTR lpSystemAffinityMask)
DWORD WINAPI None.ThreadProc(_In_ LPVOID lpParameter)
NTSTATUS WINAPI ntdll.NtQueryInformationProcess(_In_ HANDLE ProcessHandle,_In_ PROCESSINFOCLASS ProcessInformationClass,_Out_ PVOID ProcessInformation,_In_ ULONG ProcessInformationLength,_Out_opt_ PULONG ReturnLength)
BOOL WINAPI kernel32.UmsThreadYield(_In_ PVOID SchedulerParam)
VOID WINAPI kernel32.CloseThreadpoolCleanupGroup(_Inout_ PTP_CLEANUP_GROUP ptpcg)
HRESULT WINAPI kernel32.SetThreadDescription(_In_ HANDLE hThread,_In_ PCWSTR lpThreadDescription)
HANDLE WINAPI kernel32.GetCurrentProcess(void None None)
BOOL WINAPI kernel32.TerminateThread(_Inout_ HANDLE hThread,_In_ DWORD dwExitCode)
HANDLE WINAPI kernel32.GetCurrentThread(void None None)
BOOL WINAPI kernel32.NeedCurrentDirectoryForExePath(_In_ LPCTSTR ExeName)
BOOL WINAPI kernel32.NeedCurrentDirectoryForExePathW(_In_ LPCTSTR ExeName)
BOOL WINAPI kernel32.NeedCurrentDirectoryForExePathA(_In_ LPCTSTR ExeName)
BOOL WINAPI userenv.LoadUserProfile(_In_ HANDLE hToken,_Inout_ LPPROFILEINFO lpProfileInfo)
BOOL WINAPI userenv.LoadUserProfileW(_In_ HANDLE hToken,_Inout_ LPPROFILEINFO lpProfileInfo)
BOOL WINAPI userenv.LoadUserProfileA(_In_ HANDLE hToken,_Inout_ LPPROFILEINFO lpProfileInfo)
DWORD WINAPI kernel32.Wow64SuspendThread(_In_ HANDLE hThread)
VOID WINAPI kernel32.LeaveCriticalSectionWhenCallbackReturns(_Inout_ PTP_CALLBACK_INSTANCE pci,_Inout_ PCRITICAL_SECTION pcs)
BOOL WINAPI kernel32.CreateUmsCompletionList(_Out_ PUMS_COMPLETION_LIST *UmsCompletionList)
BOOL WINAPI user32.IsWow64Message(void None None)
HRESULT None mergemod.get_Version([out] BSTR *Version)
VOID WINAPI kernel32.SetThreadpoolWait(_Inout_ PTP_WAIT pwa,_In_opt_ HANDLE h,_In_opt_ PFILETIME pftTimeout)
HRESULT WINAPI coremessaging.CreateDispatcherQueueController(_In_ DispatcherQueueOptions options,_Out_ DispatcherQueueController dispatcherQueueController)
DWORD WINAPI kernelbase.TlsAlloc(void None None)
int WINAPI kernel32.GetThreadPriority(_In_ HANDLE hThread)
BOOL WINAPI kernel32.GetNumaProcessorNode(_In_ UCHAR Processor,_Out_ PUCHAR NodeNumber)
BOOL WINAPI kernel32.RegisterWaitForSingleObject(_Out_ PHANDLE phNewWaitObject,_In_ HANDLE hObject,_In_ WAITORTIMERCALLBACK Callback,_In_opt_ PVOID Context,_In_ ULONG dwMilliseconds,_In_ ULONG dwFlags)
VOID None None.DestroyThreadpoolEnvironment(_Inout_ PTP_CALLBACK_ENVIRON pcbe)
BOOL WINAPI wtsapi32.WTSEnumerateProcessesEx(_In_ HANDLE hServer,_Inout_ DWORD *pLevel,_In_ DWORD SessionID,_Out_ LPTSTR *ppProcessInfo,_Out_ DWORD *pCount)
BOOL WINAPI wtsapi32.WTSEnumerateProcessesExW(_In_ HANDLE hServer,_Inout_ DWORD *pLevel,_In_ DWORD SessionID,_Out_ LPTSTR *ppProcessInfo,_Out_ DWORD *pCount)
BOOL WINAPI wtsapi32.WTSEnumerateProcessesExA(_In_ HANDLE hServer,_Inout_ DWORD *pLevel,_In_ DWORD SessionID,_Out_ LPTSTR *ppProcessInfo,_Out_ DWORD *pCount)
DWORD WINAPI kernel32.GetCurrentProcessId(void None None)
BOOL WINAPI kernel32.CallbackMayRunLong(_Inout_ PTP_CALLBACK_INSTANCE pci)
BOOL WINAPI kernel32.AssignProcessToJobObject(_In_ HANDLE hJob,_In_ HANDLE hProcess)
BOOL WINAPI avrt.AvQuerySystemResponsiveness(_In_ HANDLE AvrtHandle,_Out_ PULONG SystemResponsivenessValue)
BOOL WINAPI kernel32.DeleteUmsThreadContext(_In_ PUMS_CONTEXT UmsThread)
VOID None None.InitializeThreadpoolEnvironment(_Out_ PTP_CALLBACK_ENVIRON pcbe)
BOOL WINAPI kernel32.GetProcessIoCounters(_In_ HANDLE hProcess,_Out_ PIO_COUNTERS lpIoCounters)
VOID WINAPI kernel32.FlushProcessWriteBuffers(void None None)
BOOL WINAPI kernel32.QueryProcessCycleTime(_In_ HANDLE ProcessHandle,_Out_ PULONG64 CycleTime)
LPVOID WINAPI kernel32.ConvertThreadToFiberEx(_In_opt_ LPVOID lpParameter,_In_ DWORD dwFlags)
HANDLE WINAPI avrt.AvSetMmThreadCharacteristics(_In_ LPCTSTR TaskName,_Inout_ LPDWORD TaskIndex)
HANDLE WINAPI avrt.AvSetMmThreadCharacteristicsW(_In_ LPCTSTR TaskName,_Inout_ LPDWORD TaskIndex)
HANDLE WINAPI avrt.AvSetMmThreadCharacteristicsA(_In_ LPCTSTR TaskName,_Inout_ LPDWORD TaskIndex)
VOID WINAPI kernel32.CloseThreadpoolIo(_Inout_ PTP_IO pio)
BOOL WINAPI kernel32.SetProcessWorkingSetSize(_In_ HANDLE hProcess,_In_ SIZE_T dwMinimumWorkingSetSize,_In_ SIZE_T dwMaximumWorkingSetSize)
VOID None kernel32.GetCurrentProcessorNumberEx(_Out_ PPROCESSOR_NUMBER ProcNumber)
VOID WINAPI kernel32.SwitchToFiber(_In_ LPVOID lpFiber)
DWORD_PTR WINAPI kernel32.SetThreadAffinityMask(_In_ HANDLE hThread,_In_ DWORD_PTR dwThreadAffinityMask)
VOID WINAPI kernel32.CloseThreadpoolWork(_Inout_ PTP_WORK pwk)
PUMS_CONTEXT WINAPI kernel32.GetNextUmsListItem(_Inout_ PUMS_CONTEXT UmsContext)
BOOL None kernel32.GetNumaNodeNumberFromHandle(_In_ HANDLE hFile,_Out_ PUSHORT NodeNumber)
BOOL WINAPI kernel32.TerminateJobObject(_In_ HANDLE hJob,_In_ UINT uExitCode)
BOOL WINAPI kernel32.FreeEnvironmentStrings(_In_ LPTCH lpszEnvironmentBlock)
BOOL WINAPI kernel32.FreeEnvironmentStringsW(_In_ LPTCH lpszEnvironmentBlock)
BOOL WINAPI kernel32.FreeEnvironmentStringsA(_In_ LPTCH lpszEnvironmentBlock)
BOOL WINAPI avrt.AvSetMmThreadPriority(_In_ HANDLE AvrtHandle,_In_ AVRT_PRIORITY Priority)
PTP_POOL WINAPI kernel32.CreateThreadpool(_Reserved_ PVOID reserved)
VOID CALLBACK None.FiberProc(_In_ PVOID lpParameter)
BOOL None kernel32.GetNumaAvailableMemoryNodeEx(_In_ USHORT Node,_Out_ PULONGLONG AvailableBytes)
BOOL WINAPI kernel32.DequeueUmsCompletionListItems(_In_ PUMS_COMPLETION_LIST UmsCompletionList,_In_ DWORD WaitTimeOut,_Out_ PUMS_CONTEXT *UmsThreadList)
DWORD None kernel32.GetMaximumProcessorCount(_In_ WORD GroupNumber)
DWORD WINAPI kernel32.SuspendThread(_In_ HANDLE hThread)
BOOL None kernel32.QueryThreadpoolStackInformation(_In_ PTP_POOL ptpp,_Out_ PTP_POOL_STACK_INFORMATION ptpsi)
BOOL WINAPI kernel32.ExecuteUmsThread(_Inout_ PUMS_CONTEXT UmsThread)
BOOL WINAPI kernel32.VirtualProtectEx(_In_ HANDLE hProcess,_In_ LPVOID lpAddress,_In_ SIZE_T dwSize,_In_ DWORD flNewProtect,_Out_ PDWORD lpflOldProtect)
BOOL WINAPI advapi32.CreateProcessWithTokenW(_In_ HANDLE hToken,_In_ DWORD dwLogonFlags,_In_opt_ LPCWSTR lpApplicationName,_Inout_opt_ LPWSTR lpCommandLine,_In_ DWORD dwCreationFlags,_In_opt_ LPVOID lpEnvironment,_In_opt_ LPCWSTR lpCurrentDirectory,_In_ LPSTARTUPINFOW lpStartupInfo,_Out_ LPPROCESS_INFORMATION lpProcessInfo)
LPVOID WINAPI kernelbase.TlsGetValue(_In_ DWORD dwTlsIndex)
VOID WINAPI kernel32.CloseThreadpoolWait(_Inout_ PTP_WAIT pwa)
BOOL WINAPI userenv.LoadUserProfile(_In_ HANDLE hToken,_Inout_ LPPROFILEINFO lpProfileInfo)
BOOL WINAPI userenv.LoadUserProfileW(_In_ HANDLE hToken,_Inout_ LPPROFILEINFO lpProfileInfo)
BOOL WINAPI userenv.LoadUserProfileA(_In_ HANDLE hToken,_Inout_ LPPROFILEINFO lpProfileInfo)
DWORD WINAPI kernel32.GetProcessId(_In_ HANDLE Process)
BOOL WINAPI kernel32.QueryProcessAffinityUpdateMode(_In_ HANDLE ProcessHandle,_Out_opt_ DWORD lpdwFlags)
BOOL WINAPI advapi32.CreateProcessWithLogonW(_In_ LPCWSTR lpUsername,_In_opt_ LPCWSTR lpDomain,_In_ LPCWSTR lpPassword,_In_ DWORD dwLogonFlags,_In_opt_ LPCWSTR lpApplicationName,_Inout_opt_ LPWSTR lpCommandLine,_In_ DWORD dwCreationFlags,_In_opt_ LPVOID lpEnvironment,_In_opt_ LPCWSTR lpCurrentDirectory,_In_ LPSTARTUPINFOW lpStartupInfo,_Out_ LPPROCESS_INFORMATION lpProcessInfo)
VOID FORCEINLINE None.TpSetCallbackNoActivationContext(_Inout_ PTP_CALLBACK_ENVIRON CallbackEnviron)
BOOL WINAPI kernel32.GetUmsSystemThreadInformation(_In_ HANDLE ThreadHandle,_Inout_ PUMS_SYSTEM_THREAD_INFORMATION SystemThreadInfo)
ULONG WINAPI ntdll.NtGetCurrentProcessorNumber(void None None)
BOOL WINAPI avrt.AvRtLeaveThreadOrderingGroup(_In_ HANDLE Context)
BOOL WINAPI kernel32.IsThreadpoolTimerSet(_Inout_ PTP_TIMER pti)
HANDLE WINAPI avrt.AvSetMmMaxThreadCharacteristics(_In_ LPCTSTR FirstTask,_In_ LPCTSTR SecondTask,_Inout_ LPDWORD TaskIndex)
HANDLE WINAPI avrt.AvSetMmMaxThreadCharacteristicsW(_In_ LPCTSTR FirstTask,_In_ LPCTSTR SecondTask,_Inout_ LPDWORD TaskIndex)
HANDLE WINAPI avrt.AvSetMmMaxThreadCharacteristicsA(_In_ LPCTSTR FirstTask,_In_ LPCTSTR SecondTask,_Inout_ LPDWORD TaskIndex)
BOOL WINAPI advapi32.CreateProcessAsUser(_In_opt_ HANDLE hToken,_In_opt_ LPCTSTR lpApplicationName,_Inout_opt_ LPTSTR lpCommandLine,_In_opt_ LPSECURITY_ATTRIBUTES lpProcessAttributes,_In_opt_ LPSECURITY_ATTRIBUTES lpThreadAttributes,_In_ BOOL bInheritHandles,_In_ DWORD dwCreationFlags,_In_opt_ LPVOID lpEnvironment,_In_opt_ LPCTSTR lpCurrentDirectory,_In_ LPSTARTUPINFO lpStartupInfo,_Out_ LPPROCESS_INFORMATION lpProcessInformation)
BOOL WINAPI advapi32.CreateProcessAsUserW(_In_opt_ HANDLE hToken,_In_opt_ LPCTSTR lpApplicationName,_Inout_opt_ LPTSTR lpCommandLine,_In_opt_ LPSECURITY_ATTRIBUTES lpProcessAttributes,_In_opt_ LPSECURITY_ATTRIBUTES lpThreadAttributes,_In_ BOOL bInheritHandles,_In_ DWORD dwCreationFlags,_In_opt_ LPVOID lpEnvironment,_In_opt_ LPCTSTR lpCurrentDirectory,_In_ LPSTARTUPINFO lpStartupInfo,_Out_ LPPROCESS_INFORMATION lpProcessInformation)
BOOL WINAPI advapi32.CreateProcessAsUserA(_In_opt_ HANDLE hToken,_In_opt_ LPCTSTR lpApplicationName,_Inout_opt_ LPTSTR lpCommandLine,_In_opt_ LPSECURITY_ATTRIBUTES lpProcessAttributes,_In_opt_ LPSECURITY_ATTRIBUTES lpThreadAttributes,_In_ BOOL bInheritHandles,_In_ DWORD dwCreationFlags,_In_opt_ LPVOID lpEnvironment,_In_opt_ LPCTSTR lpCurrentDirectory,_In_ LPSTARTUPINFO lpStartupInfo,_Out_ LPPROCESS_INFORMATION lpProcessInformation)
PTP_CLEANUP_GROUP WINAPI kernel32.CreateThreadpoolCleanupGroup(void None None)
BOOL WINAPI kernel32.SetProcessAffinityUpdateMode(_In_ HANDLE ProcessHandle,_In_ DWORD dwFlags)
BOOL WINAPI kernel32.SetPriorityClass(_In_ HANDLE hProcess,_In_ DWORD dwPriorityClass)
BOOL WINAPI kernel32.SetPriorityClass(_In_ HANDLE hProcess,_In_ DWORD dwPriorityClass)
BOOL WINAPI kernel32.WriteProcessMemory(_In_ HANDLE hProcess,_In_ LPVOID lpBaseAddress,_In_ LPCVOID lpBuffer,_In_ SIZE_T nSize,_Out_ SIZE_T *lpNumberOfBytesWritten)
BOOL WINAPI kernel32.EmptyWorkingSet(_In_ HANDLE hProcess)
BOOL WINAPI avrt.AvRtWaitOnThreadOrderingGroup(_In_ HANDLE Context)
WORD None kernel32.GetMaximumProcessorGroupCount(void None None)
BOOL WINAPI kernel32.SetEnvironmentVariable(_In_ LPCTSTR lpName,_In_opt_ LPCTSTR lpValue)
BOOL WINAPI kernel32.SetEnvironmentVariableW(_In_ LPCTSTR lpName,_In_opt_ LPCTSTR lpValue)
BOOL WINAPI kernel32.SetEnvironmentVariableA(_In_ LPCTSTR lpName,_In_opt_ LPCTSTR lpValue)
VOID FORCEINLINE None.TpSetCallbackRaceWithDll(_Inout_ PTP_CALLBACK_ENVIRON CallbackEnviron,_In_ PVOID DllHandle)
PVOID None None.GetFiberData(void None None)
DWORD WINAPI kernel32.GetModuleFileNameEx(_In_ HANDLE hProcess,_In_opt_ HMODULE hModule,_Out_ LPTSTR lpFilename,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetModuleFileNameExW(_In_ HANDLE hProcess,_In_opt_ HMODULE hModule,_Out_ LPTSTR lpFilename,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetModuleFileNameExA(_In_ HANDLE hProcess,_In_opt_ HMODULE hModule,_Out_ LPTSTR lpFilename,_In_ DWORD nSize)
BOOL WINAPI kernel32.SetEnvironmentVariable(_In_ LPCTSTR lpName,_In_opt_ LPCTSTR lpValue)
BOOL WINAPI kernel32.SetEnvironmentVariableW(_In_ LPCTSTR lpName,_In_opt_ LPCTSTR lpValue)
BOOL WINAPI kernel32.SetEnvironmentVariableA(_In_ LPCTSTR lpName,_In_opt_ LPCTSTR lpValue)
BOOL WINAPI kernel32.QueryIdleProcessorCycleTime(_Inout_ PULONG BufferLength,_Out_ PULONG64 ProcessorIdleCycleTime)
BOOL WINAPI kernelbase.TlsFree(_In_ DWORD dwTlsIndex)
BOOL WINAPI kernel32.Process32First(_In_ HANDLE hSnapshot,_Inout_ LPPROCESSENTRY32 lppe)
BOOL WINAPI kernel32.Process32FirstW(_In_ HANDLE hSnapshot,_Inout_ LPPROCESSENTRY32 lppe)
BOOL WINAPI kernel32.Process32First(_In_ HANDLE hSnapshot,_Inout_ LPPROCESSENTRY32 lppe)
BOOL WINAPI userenv.CreateEnvironmentBlock(_Out_ LPVOID *lpEnvironment,_In_opt_ HANDLE hToken,_In_ BOOL bInherit)
DWORD WINAPI kernel32.GetProcessIdOfThread(_In_ HANDLE Thread)
BOOL WINAPI kernel32.SetProcessWorkingSetSizeEx(_In_ HANDLE hProcess,_In_ SIZE_T dwMinimumWorkingSetSize,_In_ SIZE_T dwMaximumWorkingSetSize,_In_ DWORD Flags)
VOID None None.UmsSchedulerProc(_In_ UMS_SCHEDULER_REASON Reason,_In_ ULONG_PTR ActivationPayload,_In_ PVOID SchedulerParam)
LPTCH WINAPI kernel32.GetEnvironmentStrings(void None None)
LPTCH WINAPI kernel32.GetEnvironmentStringsW(void None None)
LPTCH WINAPI kernel32.GetEnvironmentStringsA(void None None)
BOOL WINAPI userenv.CreateEnvironmentBlock(_Out_ LPVOID *lpEnvironment,_In_opt_ HANDLE hToken,_In_ BOOL bInherit)
BOOL WINAPI userenv.CreateEnvironmentBlock(_Out_ LPVOID *lpEnvironment,_In_opt_ HANDLE hToken,_In_ BOOL bInherit)
BOOL None kernel32.GetNumaNodeProcessorMaskEx(_In_ USHORT Node,_Out_ PGROUP_AFFINITY ProcessorMask)
BOOL WINAPI kernel32.InitializeProcThreadAttributeList(_Out_opt_ LPPROC_THREAD_ATTRIBUTE_LIST lpAttributeList,_In_ DWORD dwAttributeCount,_Reserved_ DWORD dwFlags,_Inout_ PSIZE_T lpSize)
DWORD WINAPI user32.WaitForInputIdle(_In_ HANDLE hProcess,_In_ DWORD dwMilliseconds)
VOID None None.SetThreadpoolCallbackPersistent(_Inout_ PTP_CALLBACK_ENVIRON pcbe)
HANDLE WINAPI kernel32.GetCurrentProcess(void None None)
DWORD WINAPI kernel32.WaitForSingleObject(_In_ HANDLE hHandle,_In_ DWORD dwMilliseconds)
BOOL WINAPI kernel32.Process32Next(_In_ HANDLE hSnapshot,_Out_ LPPROCESSENTRY32 lppe)
BOOL WINAPI kernel32.Process32NextW(_In_ HANDLE hSnapshot,_Out_ LPPROCESSENTRY32 lppe)
BOOL WINAPI kernel32.Process32Next(_In_ HANDLE hSnapshot,_Out_ LPPROCESSENTRY32 lppe)
BOOL WINAPI kernel32.TerminateThread(_Inout_ HANDLE hThread,_In_ DWORD dwExitCode)
DWORD WINAPI None.ThreadProc(_In_ LPVOID lpParameter)
HANDLE WINAPI kernel32.OpenThread(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ DWORD dwThreadId)
DWORD WINAPI kernel32.GetEnvironmentVariable(_In_opt_ LPCTSTR lpName,_Out_opt_ LPTSTR lpBuffer,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetEnvironmentVariableW(_In_opt_ LPCTSTR lpName,_Out_opt_ LPTSTR lpBuffer,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetEnvironmentVariableA(_In_opt_ LPCTSTR lpName,_Out_opt_ LPTSTR lpBuffer,_In_ DWORD nSize)
BOOL WINAPI None.GenerateConsoleCtrlEvent(_In_ DWORD dwCtrlEvent,_In_ DWORD dwProcessGroupId)
BOOL WINAPI None.GenerateConsoleCtrlEvent(_In_ DWORD dwCtrlEvent,_In_ DWORD dwProcessGroupId)
BOOL WINAPI kernel32.VirtualLock(_In_ LPVOID lpAddress,_In_ SIZE_T dwSize)
LPTSTR WINAPI kernel32.GetCommandLine(void None None)
LPTSTR WINAPI kernel32.GetCommandLineW(void None None)
LPTSTR WINAPI kernel32.GetCommandLineA(void None None)
DWORD WINAPI kernel32.GetCurrentProcessId(void None None)
BOOL None gdi32.DeleteMetaFile(_In_ HMETAFILE hmf)
int WINAPI kernel32.GetThreadPriority(_In_ HANDLE hThread)
BOOL WINAPI avrt.AvRtDeleteThreadOrderingGroup(_In_ HANDLE Context)
BOOL WINAPI avrt.AvRtCreateThreadOrderingGroupEx(_Out_ PHANDLE Context,_In_ PLARGE_INTEGER Period,_Inout_ GUID *ThreadOrderingGuid,_In_opt_ PLARGE_INTEGER Timeout,_In_ LPCTSTR TaskName)
BOOL WINAPI avrt.AvRtCreateThreadOrderingGroupExW(_Out_ PHANDLE Context,_In_ PLARGE_INTEGER Period,_Inout_ GUID *ThreadOrderingGuid,_In_opt_ PLARGE_INTEGER Timeout,_In_ LPCTSTR TaskName)
BOOL WINAPI avrt.AvRtCreateThreadOrderingGroupExA(_Out_ PHANDLE Context,_In_ PLARGE_INTEGER Period,_Inout_ GUID *ThreadOrderingGuid,_In_opt_ PLARGE_INTEGER Timeout,_In_ LPCTSTR TaskName)
BOOL None shell32.SHCreateProcessAsUserW(_Inout_ PSHCREATEPROCESSINFOW pscpi)
BOOL None shell32.SHCreateProcessAsUserW(_Inout_ PSHCREATEPROCESSINFOW pscpi)
BOOL WINAPI kernel32.FreeEnvironmentStrings(_In_ LPTCH lpszEnvironmentBlock)
BOOL WINAPI kernel32.FreeEnvironmentStringsW(_In_ LPTCH lpszEnvironmentBlock)
BOOL WINAPI kernel32.FreeEnvironmentStringsA(_In_ LPTCH lpszEnvironmentBlock)
BOOL WINAPI advapi32.SetTokenInformation(_In_ HANDLE TokenHandle,_In_ TOKEN_INFORMATION_CLASS TokenInformationClass,_In_ LPVOID TokenInformation,_In_ DWORD TokenInformationLength)
BOOL WINAPI avrt.AvRevertMmThreadCharacteristics(_In_ HANDLE AvrtHandle)
BOOL WINAPI kernel32.UpdateProcThreadAttribute(_Inout_ LPPROC_THREAD_ATTRIBUTE_LIST lpAttributeList,_In_ DWORD dwFlags,_In_ DWORD_PTR Attribute,_In_ PVOID lpValue,_In_ SIZE_T cbSize,_Out_opt_ PVOID lpPreviousValue,_In_opt_ PSIZE_T lpReturnSize)
BOOL WINAPI kernel32.QueryThreadCycleTime(_In_ HANDLE ThreadHandle,_Out_ PULONG64 CycleTime)
BOOL WINAPI kernel32.SetProcessWorkingSetSize(_In_ HANDLE hProcess,_In_ SIZE_T dwMinimumWorkingSetSize,_In_ SIZE_T dwMaximumWorkingSetSize)
HRESULT WINAPI kernel32.GetThreadDescription(_In_ HANDLE hThread,_Out_ PWSTR *threadDescription)
BOOL WINAPI advapi32.SetTokenInformation(_In_ HANDLE TokenHandle,_In_ TOKEN_INFORMATION_CLASS TokenInformationClass,_In_ LPVOID TokenInformation,_In_ DWORD TokenInformationLength)
BOOL None kernel32.GetThreadGroupAffinity(_In_ HANDLE hThread,_Out_ PGROUP_AFFINITY GroupAffinity)
VOID None None.SetThreadpoolCallbackPool(_Inout_ PTP_CALLBACK_ENVIRON pcbe,_In_ PTP_POOL ptpp)
VOID WINAPI kernel32.WaitForThreadpoolTimerCallbacks(_Inout_ PTP_TIMER pti,_In_ BOOL fCancelPendingCallbacks)
BOOL WINAPI kernel32.SetProcessWorkingSetSize(_In_ HANDLE hProcess,_In_ SIZE_T dwMinimumWorkingSetSize,_In_ SIZE_T dwMaximumWorkingSetSize)
int WINAPI kernel32.GetThreadPriority(_In_ HANDLE hThread)
BOOL WINAPI kernel32.AssignProcessToJobObject(_In_ HANDLE hJob,_In_ HANDLE hProcess)
VOID WINAPI kernel32.WaitForThreadpoolWorkCallbacks(_Inout_ PTP_WORK pwk,_In_ BOOL fCancelPendingCallbacks)
BOOL WINAPI kernel32.SetThreadpoolWaitEx(_Inout_ PTP_WAIT pwa,_In_opt_ HANDLE h,_In_opt_ PFILETIME pftTimeout,_Reserved_ PVOID Reserved)
BOOL WINAPI kernel32.GetProcessWorkingSetSize(_In_ HANDLE hProcess,_Out_ PSIZE_T lpMinimumWorkingSetSize,_Out_ PSIZE_T lpMaximumWorkingSetSize)
DWORD WINAPI user32.GetGuiResources(_In_ HANDLE hProcess,_In_ DWORD uiFlags)
VOID None None.SetThreadpoolCallbackPriority(_Inout_ PTP_CALLBACK_ENVIRON pcbe,_In_ TP_CALLBACK_PRIORITY Priority)
BOOL WINAPI advapi32.SetTokenInformation(_In_ HANDLE TokenHandle,_In_ TOKEN_INFORMATION_CLASS TokenInformationClass,_In_ LPVOID TokenInformation,_In_ DWORD TokenInformationLength)
BOOL None kernel32.GetProcessorSystemCycleTime(_In_ USHORT Group,_Out_ PSYSTEM_PROCESSOR_CYCLE_TIME_INFORMATION Buffer,_Inout_ PDWORD ReturnedLength)
BOOL WINAPI kernel32.IsWow64Process2(_In_ HANDLE hProcess,_Out_ USHORT *pProcessMachine,_Out_opt_ USHORT *pNativeMachine)
HANDLE WINAPI kernel32.OpenProcess(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ DWORD dwProcessId)
NTSTATUS WINAPI ntdll.NtQueryInformationThread(_In_ HANDLE ThreadHandle,_In_ THREADINFOCLASS ThreadInformationClass,_Inout_ PVOID ThreadInformation,_In_ ULONG ThreadInformationLength,_Out_opt_ PULONG ReturnLength)
BOOL WINAPI kernel32.EnumProcesses(_Out_ DWORD *pProcessIds,_In_ DWORD cb,_Out_ DWORD *pBytesReturned)
DWORD WINAPI kernel32.ResumeThread(_In_ HANDLE hThread)
VOID WINAPI kernel32.ReleaseSemaphoreWhenCallbackReturns(_Inout_ PTP_CALLBACK_INSTANCE pci,_In_ HANDLE sem,_In_ DWORD crel)
BOOL WINAPI user32.AttachThreadInput(_In_ DWORD idAttach,_In_ DWORD idAttachTo,_In_ BOOL fAttach)
BOOL None advapi32.LogonUser(_In_ LPTSTR lpszUsername,_In_opt_ LPTSTR lpszDomain,_In_opt_ LPTSTR lpszPassword,_In_ DWORD dwLogonType,_In_ DWORD dwLogonProvider,_Out_ PHANDLE phToken)
BOOL None advapi32.LogonUserW(_In_ LPTSTR lpszUsername,_In_opt_ LPTSTR lpszDomain,_In_opt_ LPTSTR lpszPassword,_In_ DWORD dwLogonType,_In_ DWORD dwLogonProvider,_Out_ PHANDLE phToken)
BOOL None advapi32.LogonUserA(_In_ LPTSTR lpszUsername,_In_opt_ LPTSTR lpszDomain,_In_opt_ LPTSTR lpszPassword,_In_ DWORD dwLogonType,_In_ DWORD dwLogonProvider,_Out_ PHANDLE phToken)
HRESULT None mergemod.get_Module([out] BSTR *Module)
BOOL WINAPI kernel32.GetQueuedCompletionStatusEx(_In_ HANDLE CompletionPort,_Out_ LPOVERLAPPED_ENTRY lpCompletionPortEntries,_In_ ULONG ulCount,_Out_ PULONG ulNumEntriesRemoved,_In_ DWORD dwMilliseconds,_In_ BOOL fAlertable)
HANDLE WINAPI kernel32.CreateEvent(_In_opt_ LPSECURITY_ATTRIBUTES lpEventAttributes,_In_ BOOL bManualReset,_In_ BOOL bInitialState,_In_opt_ LPCTSTR lpName)
HANDLE WINAPI kernel32.CreateEventW(_In_opt_ LPSECURITY_ATTRIBUTES lpEventAttributes,_In_ BOOL bManualReset,_In_ BOOL bInitialState,_In_opt_ LPCTSTR lpName)
HANDLE WINAPI kernel32.CreateEventA(_In_opt_ LPSECURITY_ATTRIBUTES lpEventAttributes,_In_ BOOL bManualReset,_In_ BOOL bInitialState,_In_opt_ LPCTSTR lpName)
BOOL WINAPI kernel32.GetProcessWorkingSetSizeEx(_In_ HANDLE hProcess,_Out_ PSIZE_T lpMinimumWorkingSetSize,_Out_ PSIZE_T lpMaximumWorkingSetSize,_Out_ PDWORD Flags)
DWORD WINAPI kernel32.ResumeThread(_In_ HANDLE hThread)
DWORD WINAPI kernel32.ResumeThread(_In_ HANDLE hThread)
static void None.Main(string[] args None)
HRESULT None mergemod.get_HelpLocation([out] BSTR *HelpLocation)
BOOL WINAPI None.SetStdHandle(_In_ DWORD nStdHandle,_In_ HANDLE hHandle)
DWORD WINAPI kernel32.ExpandEnvironmentStrings(_In_ LPCTSTR lpSrc,_Out_opt_ LPTSTR lpDst,_In_ DWORD nSize)
DWORD WINAPI kernel32.ExpandEnvironmentStringsW(_In_ LPCTSTR lpSrc,_Out_opt_ LPTSTR lpDst,_In_ DWORD nSize)
DWORD WINAPI kernel32.ExpandEnvironmentStringsA(_In_ LPCTSTR lpSrc,_Out_opt_ LPTSTR lpDst,_In_ DWORD nSize)
BOOL None advapi32.LogonUser(_In_ LPTSTR lpszUsername,_In_opt_ LPTSTR lpszDomain,_In_opt_ LPTSTR lpszPassword,_In_ DWORD dwLogonType,_In_ DWORD dwLogonProvider,_Out_ PHANDLE phToken)
BOOL None advapi32.LogonUserW(_In_ LPTSTR lpszUsername,_In_opt_ LPTSTR lpszDomain,_In_opt_ LPTSTR lpszPassword,_In_ DWORD dwLogonType,_In_ DWORD dwLogonProvider,_Out_ PHANDLE phToken)
BOOL None advapi32.LogonUserA(_In_ LPTSTR lpszUsername,_In_opt_ LPTSTR lpszDomain,_In_opt_ LPTSTR lpszPassword,_In_ DWORD dwLogonType,_In_ DWORD dwLogonProvider,_Out_ PHANDLE phToken)
BOOL WINAPI advapi32.InitiateSystemShutdown(_In_opt_ LPTSTR lpMachineName,_In_opt_ LPTSTR lpMessage,_In_ DWORD dwTimeout,_In_ BOOL bForceAppsClosed,_In_ BOOL bRebootAfterShutdown)
BOOL WINAPI advapi32.InitiateSystemShutdownW(_In_opt_ LPTSTR lpMachineName,_In_opt_ LPTSTR lpMessage,_In_ DWORD dwTimeout,_In_ BOOL bForceAppsClosed,_In_ BOOL bRebootAfterShutdown)
BOOL WINAPI advapi32.InitiateSystemShutdownA(_In_opt_ LPTSTR lpMachineName,_In_opt_ LPTSTR lpMessage,_In_ DWORD dwTimeout,_In_ BOOL bForceAppsClosed,_In_ BOOL bRebootAfterShutdown)
BOOL WINAPI kernel32.GetLogicalProcessorInformation(_Out_ PSYSTEM_LOGICAL_PROCESSOR_INFORMATION Buffer,_Inout_ PDWORD ReturnLength)
BOOL None advapi32.LogonUser(_In_ LPTSTR lpszUsername,_In_opt_ LPTSTR lpszDomain,_In_opt_ LPTSTR lpszPassword,_In_ DWORD dwLogonType,_In_ DWORD dwLogonProvider,_Out_ PHANDLE phToken)
BOOL None advapi32.LogonUserW(_In_ LPTSTR lpszUsername,_In_opt_ LPTSTR lpszDomain,_In_opt_ LPTSTR lpszPassword,_In_ DWORD dwLogonType,_In_ DWORD dwLogonProvider,_Out_ PHANDLE phToken)
BOOL None advapi32.LogonUserA(_In_ LPTSTR lpszUsername,_In_opt_ LPTSTR lpszDomain,_In_opt_ LPTSTR lpszPassword,_In_ DWORD dwLogonType,_In_ DWORD dwLogonProvider,_Out_ PHANDLE phToken)
BOOL None kernel32.GetThreadIdealProcessorEx(_In_ HANDLE hThread,_Out_ PPROCESSOR_NUMBER lpIdealProcessor)
HRESULT None mergemod.get_Path([out] BSTR *Path)
HANDLE WINAPI ktmw32.CreateTransaction(_In_opt_ LPSECURITY_ATTRIBUTES lpTransactionAttributes,_In_opt_ LPGUID UOW,_In_opt_ DWORD CreateOptions,_In_opt_ DWORD IsolationLevel,_In_opt_ DWORD IsolationFlags,_In_opt_ DWORD Timeout,_In_opt_ LPWSTR Description)
HANDLE WINAPI kernel32.OpenEvent(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpName)
HANDLE WINAPI kernel32.OpenEventW(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpName)
HANDLE WINAPI kernel32.OpenEventA(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpName)
int None ws2_32.WSADuplicateSocket(_In_ SOCKET s,_In_ DWORD dwProcessId,_Out_ LPWSAPROTOCOL_INFO lpProtocolInfo)
int None ws2_32.WSADuplicateSocketW(_In_ SOCKET s,_In_ DWORD dwProcessId,_Out_ LPWSAPROTOCOL_INFO lpProtocolInfo)
int None ws2_32.WSADuplicateSocketA(_In_ SOCKET s,_In_ DWORD dwProcessId,_Out_ LPWSAPROTOCOL_INFO lpProtocolInfo)
static void None.Main(string[] args None)
BOOL WINAPI advapi32.AdjustTokenPrivileges(_In_ HANDLE TokenHandle,_In_ BOOL DisableAllPrivileges,_In_opt_ PTOKEN_PRIVILEGES NewState,_In_ DWORD BufferLength,_Out_opt_ PTOKEN_PRIVILEGES PreviousState,_Out_opt_ PDWORD ReturnLength)
BOOL WINAPI kernel32.SetThreadPriority(_In_ HANDLE hThread,_In_ int nPriority)
DWORD WINAPI kernel32.ResumeThread(_In_ HANDLE hThread)
BOOL WINAPI user32.EnumDesktopWindows(_In_opt_ HDESK hDesktop,_In_ WNDENUMPROC lpfn,_In_ LPARAM lParam)
void WINAPI kernel32.DebugBreak(void None None)
DWORD WINAPI kernel32.SuspendThread(_In_ HANDLE hThread)
BOOL WINAPI kernel32.FlsFree(_In_ DWORD dwFlsIndex)
BOOL WINAPI kernel32.AllocateUserPhysicalPagesNuma(_In_ HANDLE hProcess,_Inout_ PULONG_PTR NumberOfPages,_Out_ PULONG_PTR PageArray,_In_ DWORD nndPreferred)
void None wtsapi32.WTSFreeMemory(_In_ PVOID pMemory)
VOID FORCEINLINE None.TpInitializeCallbackEnviron(_Out_ PTP_CALLBACK_ENVIRON CallbackEnviron)
DWORD WINAPI kernel32.GetTempPath(_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer)
DWORD WINAPI kernel32.GetTempPathW(_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer)
DWORD WINAPI kernel32.GetTempPathA(_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer)
BOOL WINAPI kernel32.QueryProcessCycleTime(_In_ HANDLE ProcessHandle,_Out_ PULONG64 CycleTime)
BOOL WINAPI kernel32.GetThreadContext(_In_ HANDLE hThread,_Inout_ LPCONTEXT lpContext)
VOID WINAPI kernel32.DeleteProcThreadAttributeList(_Inout_ LPPROC_THREAD_ATTRIBUTE_LIST lpAttributeList)
BOOL WINAPI kernel32.SetUmsThreadInformation(_In_ PUMS_CONTEXT UmsThread,_In_ UMS_THREAD_INFO_CLASS UmsThreadInfoClass,_In_ PVOID UmsThreadInformation,_In_ ULONG UmsThreadInformationLength)
int CALLBACK None.WinMain(_In_ HINSTANCE hInstance,_In_ HINSTANCE hPrevInstance,_In_ LPSTR lpCmdLine,_In_ int nCmdShow)
DWORD WINAPI kernel32.GetMappedFileName(_In_ HANDLE hProcess,_In_ LPVOID lpv,_Out_ LPTSTR lpFilename,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetMappedFileNameW(_In_ HANDLE hProcess,_In_ LPVOID lpv,_Out_ LPTSTR lpFilename,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetMappedFileNameA(_In_ HANDLE hProcess,_In_ LPVOID lpv,_Out_ LPTSTR lpFilename,_In_ DWORD nSize)
TLS_HANDLE WINAPI mstlsapi.TLSConnectToLsServer(_In_ LPTSTR pszLsServer)
HGLOBAL WINAPI kernel32.GlobalAlloc(_In_ UINT uFlags,_In_ SIZE_T dwBytes)
DWORD WINAPI powrprof.PowerImportPowerScheme(_In_ HKEY RootPowerKey,_In_ LPCWSTR ImportFileNamePath,_Inout_ GUID **DestinationSchemeGuid)
BOOL WINAPI kernel32.QueryWorkingSetEx(_In_ HANDLE hProcess,_Inout_ PVOID pv,_In_ DWORD cb)
HRESULT None mergemod.get_Dependencies(IMsmDependencies **Dependencies None)
BOOL WINAPI kernel32.RegisterWaitForSingleObject(_Out_ PHANDLE phNewWaitObject,_In_ HANDLE hObject,_In_ WAITORTIMERCALLBACK Callback,_In_opt_ PVOID Context,_In_ ULONG dwMilliseconds,_In_ ULONG dwFlags)
HRESULT None mergemod.ProvideTextData([in] BSTR Name,[out] BSTR *ConfigData)
HRESULT None mergemod.get_ModuleFiles([out] IMsmStrings *Files)
HRESULT None ole32.CoInitialize(_In_opt_ LPVOID pvReserved)
BOOL WINAPI kernel32.QueryUmsThreadInformation(_In_ PUMS_CONTEXT UmsThread,_In_ UMS_THREAD_INFO_CLASS UmsThreadInfoClass,_Out_ PVOID UmsThreadInformation,_In_ ULONG UmsThreadInformationLength,_Out_opt_ PULONG ReturnLength)
BOOL WINAPI user32.ShutdownBlockReasonQuery(_In_ HWND hWnd,_Out_opt_ LPWSTR pwszBuff,_Inout_ DWORD *pcchBuff)
typedef None None.BOOL(VCAPITYPE *VirtualChannelEntry None)
HDC None gdi32.CreateMetaFile(_In_ LPCTSTR lpszFile)
HDC None gdi32.CreateMetaFileW(_In_ LPCTSTR lpszFile)
HDC None gdi32.CreateMetaFileA(_In_ LPCTSTR lpszFile)
DWORD WINAPI rstrtmgr.RmCancelCurrentTask(_In_ DWORD dwSessionHandle)
DWORD WINAPI advapi32.InitiateShutdown(_In_opt_ LPTSTR lpMachineName,_In_opt_ LPTSTR lpMessage,_In_ DWORD dwGracePeriod,_In_ DWORD dwShutdownFlags,_In_ DWORD dwReason)
DWORD WINAPI advapi32.InitiateShutdownW(_In_opt_ LPTSTR lpMachineName,_In_opt_ LPTSTR lpMessage,_In_ DWORD dwGracePeriod,_In_ DWORD dwShutdownFlags,_In_ DWORD dwReason)
DWORD WINAPI advapi32.InitiateShutdownA(_In_opt_ LPTSTR lpMachineName,_In_opt_ LPTSTR lpMessage,_In_ DWORD dwGracePeriod,_In_ DWORD dwShutdownFlags,_In_ DWORD dwReason)
static void None.Main(string[] args None)
HRESULT None mergemod.get_ModuleTable([out] BSTR *Table)
HANDLE WINAPI kernel32.CreateToolhelp32Snapshot(_In_ DWORD dwFlags,_In_ DWORD th32ProcessID)
BOOL WINAPI wtsapi32.WTSCreateListener(_In_ HANDLE hServer,_In_ PVOID pReserved,_In_ DWORD Reserved,_In_ LPTSTR pListenerName,_In_ PWTSLISTENERCONFIG pBuffer,_In_ DWORD flag)
BOOL WINAPI wtsapi32.WTSCreateListenerW(_In_ HANDLE hServer,_In_ PVOID pReserved,_In_ DWORD Reserved,_In_ LPTSTR pListenerName,_In_ PWTSLISTENERCONFIG pBuffer,_In_ DWORD flag)
BOOL WINAPI wtsapi32.WTSCreateListenerA(_In_ HANDLE hServer,_In_ PVOID pReserved,_In_ DWORD Reserved,_In_ LPTSTR pListenerName,_In_ PWTSLISTENERCONFIG pBuffer,_In_ DWORD flag)
HRESULT None mergemod.get_HelpLocation([out] BSTR *HelpLocation)
LONG WINAPI advapi32.RegOpenCurrentUser(_In_ REGSAM samDesired,_Out_ PHKEY phkResult)
LPVOID WINAPI kernel32.MapViewOfFileExNuma(_In_ HANDLE hFileMappingObject,_In_ DWORD dwDesiredAccess,_In_ DWORD dwFileOffsetHigh,_In_ DWORD dwFileOffsetLow,_In_ SIZE_T dwNumberOfBytesToMap,_In_opt_ LPVOID lpBaseAddress,_In_ DWORD nndPreferred)
BOOL WINAPI ktmw32.RollbackTransaction(_In_ HANDLE TransactionHandle)
HRGN None gdi32.PathToRegion(_In_ HDC hdc)
BOOL None kernel32.GetLogicalProcessorInformationEx(_In_ LOGICAL_PROCESSOR_RELATIONSHIP RelationshipType,_Out_opt_ PSYSTEM_LOGICAL_PROCESSOR_INFORMATION_EX Buffer,_Inout_ PDWORD ReturnedLength)
BOOL WINAPI wtsapi32.WTSQueryListenerConfig(_In_ HANDLE hServer,_In_ PVOID pReserved,_In_ DWORD Reserved,_In_ LPTSTR pListenerName,_Out_ PWTSLISTENERCONFIG pBuffer)
BOOL WINAPI wtsapi32.WTSQueryListenerConfigW(_In_ HANDLE hServer,_In_ PVOID pReserved,_In_ DWORD Reserved,_In_ LPTSTR pListenerName,_Out_ PWTSLISTENERCONFIG pBuffer)
BOOL WINAPI wtsapi32.WTSQueryListenerConfigA(_In_ HANDLE hServer,_In_ PVOID pReserved,_In_ DWORD Reserved,_In_ LPTSTR pListenerName,_Out_ PWTSLISTENERCONFIG pBuffer)
BOOL WINAPI kernel32.GetModuleInformation(_In_ HANDLE hProcess,_In_ HMODULE hModule,_Out_ LPMODULEINFO lpmodinfo,_In_ DWORD cb)
BOOL WINAPI advapi32.OpenProcessToken(_In_ HANDLE ProcessHandle,_In_ DWORD DesiredAccess,_Out_ PHANDLE TokenHandle)
BOOL None wtsapi32.WTSUnRegisterSessionNotificationEx(_In_ HANDLE hServer,_In_ HWND hWnd)
BOOL None wtsapi32.WTSQueryUserConfig(_In_ LPTSTR pServerName,_In_ LPTSTR pUserName,_In_ WTS_CONFIG_CLASS WTSConfigClass,_Out_ LPTSTR *ppBuffer,_Out_ DWORD *pBytesReturned)
BOOL None wtsapi32.WTSQueryUserConfigW(_In_ LPTSTR pServerName,_In_ LPTSTR pUserName,_In_ WTS_CONFIG_CLASS WTSConfigClass,_Out_ LPTSTR *ppBuffer,_Out_ DWORD *pBytesReturned)
BOOL None wtsapi32.WTSQueryUserConfigA(_In_ LPTSTR pServerName,_In_ LPTSTR pUserName,_In_ WTS_CONFIG_CLASS WTSConfigClass,_Out_ LPTSTR *ppBuffer,_Out_ DWORD *pBytesReturned)
UINT WINAPI kernel32.GetSystemFirmwareTable(_In_ DWORD FirmwareTableProviderSignature,_In_ DWORD FirmwareTableID,_Out_ PVOID pFirmwareTableBuffer,_In_ DWORD BufferSize)
BOOL WINAPI kernel32.EnumDeviceDrivers(_Out_ LPVOID *lpImageBase,_In_ DWORD cb,_Out_ LPDWORD lpcbNeeded)
BOOL WINAPI userenv.UnloadUserProfile(_In_ HANDLE hToken,_In_ HANDLE hProfile)
BOOL WINAPI kernel32.CreateDirectoryEx(_In_ LPCTSTR lpTemplateDirectory,_In_ LPCTSTR lpNewDirectory,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes)
BOOL WINAPI kernel32.CreateDirectoryExW(_In_ LPCTSTR lpTemplateDirectory,_In_ LPCTSTR lpNewDirectory,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes)
BOOL WINAPI kernel32.CreateDirectoryExA(_In_ LPCTSTR lpTemplateDirectory,_In_ LPCTSTR lpNewDirectory,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes)
BOOL WINAPI kernelbase.CompareObjectHandles(_In_ HANDLE hFirstObjectHandle,_In_ HANDLE hSecondObjectHandle)
BOOL WINAPI advapi32.OpenThreadToken(_In_ HANDLE ThreadHandle,_In_ DWORD DesiredAccess,_In_ BOOL OpenAsSelf,_Out_ PHANDLE TokenHandle)
BOOL WINAPI kernel32.GetNumaAvailableMemoryNode(_In_ UCHAR Node,_Out_ PULONGLONG AvailableBytes)
BOOL WINAPI user32.SetUserObjectInformation(_In_ HANDLE hObj,_In_ int nIndex,_In_ PVOID pvInfo,_In_ DWORD nLength)
BOOL WINAPI user32.SetUserObjectInformationW(_In_ HANDLE hObj,_In_ int nIndex,_In_ PVOID pvInfo,_In_ DWORD nLength)
BOOL WINAPI user32.SetUserObjectInformationA(_In_ HANDLE hObj,_In_ int nIndex,_In_ PVOID pvInfo,_In_ DWORD nLength)
BOOL WINAPI kernel32.FreeUserPhysicalPages(_In_ HANDLE hProcess,_Inout_ PULONG_PTR NumberOfPages,_In_ PULONG_PTR UserPfnArray)
static void None.Main(string[] args None)
BOOL WINAPI kernel32.EnumProcesses(_Out_ DWORD *pProcessIds,_In_ DWORD cb,_Out_ DWORD *pBytesReturned)
HANDLE WINAPI kernel32.CreateSemaphore(_In_opt_ LPSECURITY_ATTRIBUTES lpSemaphoreAttributes,_In_ LONG lInitialCount,_In_ LONG lMaximumCount,_In_opt_ LPCTSTR lpName)
HANDLE WINAPI kernel32.CreateSemaphoreW(_In_opt_ LPSECURITY_ATTRIBUTES lpSemaphoreAttributes,_In_ LONG lInitialCount,_In_ LONG lMaximumCount,_In_opt_ LPCTSTR lpName)
HANDLE WINAPI kernel32.CreateSemaphoreA(_In_opt_ LPSECURITY_ATTRIBUTES lpSemaphoreAttributes,_In_ LONG lInitialCount,_In_ LONG lMaximumCount,_In_opt_ LPCTSTR lpName)
BOOL WINAPI kernel32.GetUmsCompletionListEvent(_In_ PUMS_COMPLETION_LIST UmsCompletionList,_Inout_ PHANDLE UmsCompletionEvent)
BOOL WINAPI kernel32.SetFileIoOverlappedRange(_In_ HANDLE FileHandle,_In_ PUCHAR OverlappedRangeStart,_In_ ULONG Length)
BOOL WINAPI kernel32.SetCurrentDirectory(_In_ LPCTSTR lpPathName)
BOOL WINAPI kernel32.SetCurrentDirectoryW(_In_ LPCTSTR lpPathName)
BOOL WINAPI kernel32.SetCurrentDirectoryA(_In_ LPCTSTR lpPathName)
BOOL WINAPI kernel32.EmptyWorkingSet(_In_ HANDLE hProcess)
LPVOID WINAPI kernel32.MapViewOfFile(_In_ HANDLE hFileMappingObject,_In_ DWORD dwDesiredAccess,_In_ DWORD dwFileOffsetHigh,_In_ DWORD dwFileOffsetLow,_In_ SIZE_T dwNumberOfBytesToMap)
BOOL WINAPI wtsapi32.WTSGetListenerSecurity(_In_ HANDLE hServer,_In_ PVOID pReserved,_In_ DWORD Reserved,_In_ LPTSTR pListenerName,_In_ SECURITY_INFORMATION SecurityInformation,_Out_opt_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_ DWORD nLength,_Out_ LPDWORD lpnLengthNeeded)
BOOL WINAPI wtsapi32.WTSGetListenerSecurityW(_In_ HANDLE hServer,_In_ PVOID pReserved,_In_ DWORD Reserved,_In_ LPTSTR pListenerName,_In_ SECURITY_INFORMATION SecurityInformation,_Out_opt_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_ DWORD nLength,_Out_ LPDWORD lpnLengthNeeded)
BOOL WINAPI wtsapi32.WTSGetListenerSecurityA(_In_ HANDLE hServer,_In_ PVOID pReserved,_In_ DWORD Reserved,_In_ LPTSTR pListenerName,_In_ SECURITY_INFORMATION SecurityInformation,_Out_opt_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_ DWORD nLength,_Out_ LPDWORD lpnLengthNeeded)
DWORD WINAPI credui.CredUICmdLinePromptForCredentials(_In_ PCTSTR pszTargetName,_In_ PCtxtHandle Reserved,_In_opt_ DWORD dwAuthError,_Inout_ PTSTR pszUserName,_In_ ULONG ulUserNameMaxChars,_Inout_ PTSTR pszPassword,_In_ ULONG ulPasswordMaxChars,_Inout_ PBOOL pfSave,_In_ DWORD dwFlags)
DWORD WINAPI credui.CredUICmdLinePromptForCredentialsW(_In_ PCTSTR pszTargetName,_In_ PCtxtHandle Reserved,_In_opt_ DWORD dwAuthError,_Inout_ PTSTR pszUserName,_In_ ULONG ulUserNameMaxChars,_Inout_ PTSTR pszPassword,_In_ ULONG ulPasswordMaxChars,_Inout_ PBOOL pfSave,_In_ DWORD dwFlags)
DWORD WINAPI credui.CredUICmdLinePromptForCredentialsA(_In_ PCTSTR pszTargetName,_In_ PCtxtHandle Reserved,_In_opt_ DWORD dwAuthError,_Inout_ PTSTR pszUserName,_In_ ULONG ulUserNameMaxChars,_Inout_ PTSTR pszPassword,_In_ ULONG ulPasswordMaxChars,_Inout_ PBOOL pfSave,_In_ DWORD dwFlags)
BOOL WINAPI user32.GetMessage(_Out_ LPMSG lpMsg,_In_opt_ HWND hWnd,_In_ UINT wMsgFilterMin,_In_ UINT wMsgFilterMax)
BOOL WINAPI user32.GetMessageW(_Out_ LPMSG lpMsg,_In_opt_ HWND hWnd,_In_ UINT wMsgFilterMin,_In_ UINT wMsgFilterMax)
BOOL WINAPI user32.GetMessageA(_Out_ LPMSG lpMsg,_In_opt_ HWND hWnd,_In_ UINT wMsgFilterMin,_In_ UINT wMsgFilterMax)
BOOL WINAPI kernel32.BindIoCompletionCallback(_In_ HANDLE FileHandle,_In_ LPOVERLAPPED_COMPLETION_ROUTINE Function,_In_ ULONG Flags)
DWORD None netapi32.DsGetDcName(_In_ LPCTSTR ComputerName,_In_ LPCTSTR DomainName,_In_ GUID *DomainGuid,_In_ LPCTSTR SiteName,_In_ ULONG Flags,_Out_ PDOMAIN_CONTROLLER_INFO *DomainControllerInfo)
DWORD None netapi32.DsGetDcNameW(_In_ LPCTSTR ComputerName,_In_ LPCTSTR DomainName,_In_ GUID *DomainGuid,_In_ LPCTSTR SiteName,_In_ ULONG Flags,_Out_ PDOMAIN_CONTROLLER_INFO *DomainControllerInfo)
DWORD None netapi32.DsGetDcNameA(_In_ LPCTSTR ComputerName,_In_ LPCTSTR DomainName,_In_ GUID *DomainGuid,_In_ LPCTSTR SiteName,_In_ ULONG Flags,_Out_ PDOMAIN_CONTROLLER_INFO *DomainControllerInfo)
DWORD WINAPI kernel32.GetModuleBaseName(_In_ HANDLE hProcess,_In_opt_ HMODULE hModule,_Out_ LPTSTR lpBaseName,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetModuleBaseNameW(_In_ HANDLE hProcess,_In_opt_ HMODULE hModule,_Out_ LPTSTR lpBaseName,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetModuleBaseNameA(_In_ HANDLE hProcess,_In_opt_ HMODULE hModule,_Out_ LPTSTR lpBaseName,_In_ DWORD nSize)
HANDLE WINAPI wtsapi32.WTSOpenServerEx(_In_ LPTSTR pServerName)
HANDLE WINAPI wtsapi32.WTSOpenServerExW(_In_ LPTSTR pServerName)
HANDLE WINAPI wtsapi32.WTSOpenServerExA(_In_ LPTSTR pServerName)
BOOL WINAPI advapi32.GetUserName(_Out_ LPTSTR lpBuffer,_Inout_ LPDWORD lpnSize)
BOOL WINAPI advapi32.GetUserNameW(_Out_ LPTSTR lpBuffer,_Inout_ LPDWORD lpnSize)
BOOL WINAPI advapi32.GetUserNameA(_Out_ LPTSTR lpBuffer,_Inout_ LPDWORD lpnSize)
BOOL WINAPI kernel32.ReadFile(_In_ HANDLE hFile,_Out_ LPVOID lpBuffer,_In_ DWORD nNumberOfBytesToRead,_Out_opt_ LPDWORD lpNumberOfBytesRead,_Inout_opt_ LPOVERLAPPED lpOverlapped)
BOOLEAN WINAPI kernel32.Wow64EnableWow64FsRedirection(_In_ BOOLEAN Wow64FsEnableRedirection)
LPVOID WINAPI kernel32.MapViewOfFileEx(_In_ HANDLE hFileMappingObject,_In_ DWORD dwDesiredAccess,_In_ DWORD dwFileOffsetHigh,_In_ DWORD dwFileOffsetLow,_In_ SIZE_T dwNumberOfBytesToMap,_In_opt_ LPVOID lpBaseAddress)
static void None.Main(string[] args None)
BOOL WINAPI kernel32.UnmapViewOfFile(_In_ LPCVOID lpBaseAddress)
static void None.Main(string[] args None)
HANDLE WINAPI kernel32.OpenJobObject(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandles,_In_ LPCTSTR lpName)
HANDLE WINAPI kernel32.OpenJobObjectW(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandles,_In_ LPCTSTR lpName)
HANDLE WINAPI kernel32.OpenJobObjectA(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandles,_In_ LPCTSTR lpName)
VOID FORCEINLINE None.TpSetCallbackCleanupGroup(_Inout_ PTP_CALLBACK_ENVIRON CallbackEnviron,_In_ PTP_CLEANUP_GROUP CleanupGroup,_In_opt_ PTP_CLEANUP_GROUP_CANCEL_CALLBACK CleanupGroupCancelCallback)
BOOL WINAPI kernelbase.TlsSetValue(_In_ DWORD dwTlsIndex,_In_opt_ LPVOID lpTlsValue)
void WINAPI kernel32.GetSystemInfo(_Out_ LPSYSTEM_INFO lpSystemInfo)
BOOL None wtsapi32.WTSTerminateProcess(_In_ HANDLE hServer,_In_ DWORD ProcessId,_In_ DWORD ExitCode)
BOOL None wtsapi32.WTSEnumerateProcesses(_In_ HANDLE hServer,_In_ DWORD Reserved,_In_ DWORD Version,_Out_ PWTS_PROCESS_INFO *ppProcessInfo,_Out_ DWORD *pCount)
BOOL None wtsapi32.WTSEnumerateProcessesW(_In_ HANDLE hServer,_In_ DWORD Reserved,_In_ DWORD Version,_Out_ PWTS_PROCESS_INFO *ppProcessInfo,_Out_ DWORD *pCount)
BOOL None wtsapi32.WTSEnumerateProcessesA(_In_ HANDLE hServer,_In_ DWORD Reserved,_In_ DWORD Version,_Out_ PWTS_PROCESS_INFO *ppProcessInfo,_Out_ DWORD *pCount)
BOOL WINAPI kernelbase.CompareObjectHandles(_In_ HANDLE hFirstObjectHandle,_In_ HANDLE hSecondObjectHandle)
BOOL WINAPI kernel32.GetWsChanges(_In_ HANDLE hProcess,_Out_ PPSAPI_WS_WATCH_INFORMATION lpWatchInfo,_In_ DWORD cb)
BOOL WINAPI kernel32.TryEnterCriticalSection(_Inout_ LPCRITICAL_SECTION lpCriticalSection)
BOOL WINAPI user32.IsImmersiveProcess(_In_ HANDLE hProcess)
DWORD WINAPI kernel32.GetDeviceDriverFileName(_In_ LPVOID ImageBase,_Out_ LPTSTR lpFilename,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetDeviceDriverFileNameW(_In_ LPVOID ImageBase,_Out_ LPTSTR lpFilename,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetDeviceDriverFileNameA(_In_ LPVOID ImageBase,_Out_ LPTSTR lpFilename,_In_ DWORD nSize)
LPVOID WINAPI kernel32.GlobalLock(_In_ HGLOBAL hMem)
PCUIDLIST_RELATIVE None None.ILNext(_In_ PCUIDLIST_RELATIVE pidl)
VOID WINAPI kernel32.CloseThreadpoolTimer(_Inout_ PTP_TIMER pti)
VOID WINAPI kernel32.ReleaseMutexWhenCallbackReturns(_Inout_ PTP_CALLBACK_INSTANCE pci,_In_ HANDLE mut)
BOOL WINAPI kernel32.VirtualLock(_In_ LPVOID lpAddress,_In_ SIZE_T dwSize)
BOOLEAN WINAPI advapi32.AuditSetSystemPolicy(_In_ PCAUDIT_POLICY_INFORMATION pAuditPolicy,_In_ ULONG PolicyCount)
DWORD WINAPI kernel32.GetFullPathNameTransacted(_In_ LPCTSTR lpFileName,_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer,_Out_ LPTSTR *lpFilePart,_In_ HANDLE hTransaction)
DWORD WINAPI kernel32.GetFullPathNameTransactedW(_In_ LPCTSTR lpFileName,_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer,_Out_ LPTSTR *lpFilePart,_In_ HANDLE hTransaction)
DWORD WINAPI kernel32.GetFullPathNameTransactedA(_In_ LPCTSTR lpFileName,_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer,_Out_ LPTSTR *lpFilePart,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.GetPerformanceInfo(_Out_ PPERFORMANCE_INFORMATION pPerformanceInformation,_In_ DWORD cb)
HMODULE WINAPI kernel32.GetModuleHandle(_In_opt_ LPCTSTR lpModuleName)
HMODULE WINAPI kernel32.GetModuleHandleW(_In_opt_ LPCTSTR lpModuleName)
HMODULE WINAPI kernel32.GetModuleHandleA(_In_opt_ LPCTSTR lpModuleName)
BOOL None wtsapi32.WTSRegisterSessionNotificationEx(_In_ HANDLE hServer,_In_ HWND hWnd,_In_ DWORD dwFlags)
BOOL None wtsapi32.WTSEnumerateSessions(_In_ HANDLE hServer,_In_ DWORD Reserved,_In_ DWORD Version,_Out_ PWTS_SESSION_INFO *ppSessionInfo,_Out_ DWORD *pCount)
BOOL None wtsapi32.WTSEnumerateSessionsW(_In_ HANDLE hServer,_In_ DWORD Reserved,_In_ DWORD Version,_Out_ PWTS_SESSION_INFO *ppSessionInfo,_Out_ DWORD *pCount)
BOOL None wtsapi32.WTSEnumerateSessionsA(_In_ HANDLE hServer,_In_ DWORD Reserved,_In_ DWORD Version,_Out_ PWTS_SESSION_INFO *ppSessionInfo,_Out_ DWORD *pCount)
BOOL None wtsapi32.WTSQueryUserToken(_In_ ULONG SessionId,_Out_ PHANDLE phToken)
BOOL WINAPI kernel32.CopyFile(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName,_In_ BOOL bFailIfExists)
BOOL WINAPI kernel32.CopyFileW(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName,_In_ BOOL bFailIfExists)
BOOL WINAPI kernel32.CopyFileA(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName,_In_ BOOL bFailIfExists)
HANDLE WINAPI kernel32.FindFirstChangeNotification(_In_ LPCTSTR lpPathName,_In_ BOOL bWatchSubtree,_In_ DWORD dwNotifyFilter)
HANDLE WINAPI kernel32.FindFirstChangeNotificationW(_In_ LPCTSTR lpPathName,_In_ BOOL bWatchSubtree,_In_ DWORD dwNotifyFilter)
HANDLE WINAPI kernel32.FindFirstChangeNotificationA(_In_ LPCTSTR lpPathName,_In_ BOOL bWatchSubtree,_In_ DWORD dwNotifyFilter)
DWORD WINAPI kernel32.GetModuleBaseName(_In_ HANDLE hProcess,_In_opt_ HMODULE hModule,_Out_ LPTSTR lpBaseName,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetModuleBaseNameW(_In_ HANDLE hProcess,_In_opt_ HMODULE hModule,_Out_ LPTSTR lpBaseName,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetModuleBaseNameA(_In_ HANDLE hProcess,_In_opt_ HMODULE hModule,_Out_ LPTSTR lpBaseName,_In_ DWORD nSize)
DWORD WINAPI mstlsapi.TLSLicenseEnumNext(_In_ TLS_HANDLE hHandle,_In_ LSLicense *lpLicense,_Out_ PDWORD pdwErrCode)
BOOL WINAPI kernel32.FlushInstructionCache(_In_ HANDLE hProcess,_In_ LPCVOID lpBaseAddress,_In_ SIZE_T dwSize)
BOOLEAN WINAPI advapi32.AuditSetSystemPolicy(_In_ PCAUDIT_POLICY_INFORMATION pAuditPolicy,_In_ ULONG PolicyCount)
static void None.Main(string[] args None)
LONG WINAPI advapi32.RegCreateKey(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_Out_ PHKEY phkResult)
LONG WINAPI advapi32.RegCreateKeyW(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_Out_ PHKEY phkResult)
LONG WINAPI advapi32.RegCreateKeyA(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_Out_ PHKEY phkResult)
BOOL WINAPI kernel32.GetPerformanceInfo(_Out_ PPERFORMANCE_INFORMATION pPerformanceInformation,_In_ DWORD cb)
BOOL WINAPI user32.SetProcessRestrictionExemption(BOOL fEnableExemption None)
BOOL WINAPI kernel32.GetModuleInformation(_In_ HANDLE hProcess,_In_ HMODULE hModule,_Out_ LPMODULEINFO lpmodinfo,_In_ DWORD cb)
HANDLE WINAPI avrt.AvSetMmMaxThreadCharacteristics(_In_ LPCTSTR FirstTask,_In_ LPCTSTR SecondTask,_Inout_ LPDWORD TaskIndex)
HANDLE WINAPI avrt.AvSetMmMaxThreadCharacteristicsW(_In_ LPCTSTR FirstTask,_In_ LPCTSTR SecondTask,_Inout_ LPDWORD TaskIndex)
HANDLE WINAPI avrt.AvSetMmMaxThreadCharacteristicsA(_In_ LPCTSTR FirstTask,_In_ LPCTSTR SecondTask,_Inout_ LPDWORD TaskIndex)
public None None.TransactionScope(TransactionScopeOption scopeOption None,TransactionScopeAsyncFlowOption asyncFlowOption None)
HMODULE WINAPI kernel32.LoadLibrary(_In_ LPCTSTR lpFileName)
HMODULE WINAPI kernel32.LoadLibraryW(_In_ LPCTSTR lpFileName)
HMODULE WINAPI kernel32.LoadLibraryA(_In_ LPCTSTR lpFileName)
LONG WINAPI advapi32.RegDisablePredefinedCache(void None None)
BOOL WINAPI advapi32.IsValidSecurityDescriptor(_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor)
BOOL WINAPI kernel32.CreatePipe(_Out_ PHANDLE hReadPipe,_Out_ PHANDLE hWritePipe,_In_opt_ LPSECURITY_ATTRIBUTES lpPipeAttributes,_In_ DWORD nSize)
DWORD WINAPI mstlsapi.TLSLicenseEnumEnd(_In_ TLS_HANDLE hHandle,_Out_ PDWORD pdwErrCode)
BOOL WINAPI kernel32.SetCurrentDirectory(_In_ LPCTSTR lpPathName)
BOOL WINAPI kernel32.SetCurrentDirectoryW(_In_ LPCTSTR lpPathName)
BOOL WINAPI kernel32.SetCurrentDirectoryA(_In_ LPCTSTR lpPathName)
static void None.Main(string[] args None)
HANDLE WINAPI kernel32.CreateFileMapping(_In_ HANDLE hFile,_In_opt_ LPSECURITY_ATTRIBUTES lpAttributes,_In_ DWORD flProtect,_In_ DWORD dwMaximumSizeHigh,_In_ DWORD dwMaximumSizeLow,_In_opt_ LPCTSTR lpName)
HANDLE WINAPI kernel32.CreateFileMappingW(_In_ HANDLE hFile,_In_opt_ LPSECURITY_ATTRIBUTES lpAttributes,_In_ DWORD flProtect,_In_ DWORD dwMaximumSizeHigh,_In_ DWORD dwMaximumSizeLow,_In_opt_ LPCTSTR lpName)
HANDLE WINAPI kernel32.CreateFileMappingA(_In_ HANDLE hFile,_In_opt_ LPSECURITY_ATTRIBUTES lpAttributes,_In_ DWORD flProtect,_In_ DWORD dwMaximumSizeHigh,_In_ DWORD dwMaximumSizeLow,_In_opt_ LPCTSTR lpName)
HRESULT None None.GetHandle(HANDLE * pHandle)
HANDLE WINAPI kernel32.GetCurrentProcess(void None None)
HANDLE WINAPI kernel32.CreateMutex(_In_opt_ LPSECURITY_ATTRIBUTES lpMutexAttributes,_In_ BOOL bInitialOwner,_In_opt_ LPCTSTR lpName)
HANDLE WINAPI kernel32.CreateMutexW(_In_opt_ LPSECURITY_ATTRIBUTES lpMutexAttributes,_In_ BOOL bInitialOwner,_In_opt_ LPCTSTR lpName)
HANDLE WINAPI kernel32.CreateMutexA(_In_opt_ LPSECURITY_ATTRIBUTES lpMutexAttributes,_In_ BOOL bInitialOwner,_In_opt_ LPCTSTR lpName)
LRESULT WINAPI user32.SendMessage(_In_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
LRESULT WINAPI user32.SendMessageW(_In_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
LRESULT WINAPI user32.SendMessageA(_In_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
HANDLE WINAPI kernel32.CreateMailslot(_In_ LPCTSTR lpName,_In_ DWORD nMaxMessageSize,_In_ DWORD lReadTimeout,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes)
HANDLE WINAPI kernel32.CreateMailslotW(_In_ LPCTSTR lpName,_In_ DWORD nMaxMessageSize,_In_ DWORD lReadTimeout,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes)
HANDLE WINAPI kernel32.CreateMailslotA(_In_ LPCTSTR lpName,_In_ DWORD nMaxMessageSize,_In_ DWORD lReadTimeout,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes)
DWORD WINAPI kernel32.ExpandEnvironmentStrings(_In_ LPCTSTR lpSrc,_Out_opt_ LPTSTR lpDst,_In_ DWORD nSize)
DWORD WINAPI kernel32.ExpandEnvironmentStringsW(_In_ LPCTSTR lpSrc,_Out_opt_ LPTSTR lpDst,_In_ DWORD nSize)
DWORD WINAPI kernel32.ExpandEnvironmentStringsA(_In_ LPCTSTR lpSrc,_Out_opt_ LPTSTR lpDst,_In_ DWORD nSize)
HANDLE WINAPI kernel32.OpenWaitableTimer(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpTimerName)
HANDLE WINAPI kernel32.OpenWaitableTimerW(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpTimerName)
HANDLE WINAPI kernel32.OpenWaitableTimerA(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpTimerName)
DWORD WINAPI kernel32.WaitForSingleObjectEx(_In_ HANDLE hHandle,_In_ DWORD dwMilliseconds,_In_ BOOL bAlertable)
static void None.Main(string[] args None)
VOID WINAPI kernel32.WakeByAddressAll(_In_ PVOID Address)
DWORD WINAPI kernel32.FormatMessage(_In_ DWORD dwFlags,_In_opt_ LPCVOID lpSource,_In_ DWORD dwMessageId,_In_ DWORD dwLanguageId,_Out_ LPTSTR lpBuffer,_In_ DWORD nSize,_In_opt_ va_list *Arguments)
DWORD WINAPI kernel32.FormatMessageW(_In_ DWORD dwFlags,_In_opt_ LPCVOID lpSource,_In_ DWORD dwMessageId,_In_ DWORD dwLanguageId,_Out_ LPTSTR lpBuffer,_In_ DWORD nSize,_In_opt_ va_list *Arguments)
DWORD WINAPI kernel32.FormatMessageA(_In_ DWORD dwFlags,_In_opt_ LPCVOID lpSource,_In_ DWORD dwMessageId,_In_ DWORD dwLanguageId,_Out_ LPTSTR lpBuffer,_In_ DWORD nSize,_In_opt_ va_list *Arguments)
BOOL WINAPI avrt.AvRtWaitOnThreadOrderingGroup(_In_ HANDLE Context)
VOID WINAPI kernel32.WaitForThreadpoolWaitCallbacks(_Inout_ PTP_WAIT pwa,_In_ BOOL fCancelPendingCallbacks)
BOOL WINAPI kernel32.GetPerformanceInfo(_Out_ PPERFORMANCE_INFORMATION pPerformanceInformation,_In_ DWORD cb)
VOID WINAPI kernel32.WaitForThreadpoolWaitCallbacks(_Inout_ PTP_WAIT pwa,_In_ BOOL fCancelPendingCallbacks)
void WINAPI advapi32.CloseEncryptedFileRaw(_In_ PVOID pvContext)
static void None.Main(string[] args None)
VOID WINAPI kernel32.ReleaseMutexWhenCallbackReturns(_Inout_ PTP_CALLBACK_INSTANCE pci,_In_ HANDLE mut)
SerializableAttribute None None.ComVisibleAttribute(true None None)
BOOL WINAPI kernel32.CopyFile(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName,_In_ BOOL bFailIfExists)
BOOL WINAPI kernel32.CopyFileW(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName,_In_ BOOL bFailIfExists)
BOOL WINAPI kernel32.CopyFileA(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName,_In_ BOOL bFailIfExists)
VOID WINAPI kernel32.ReleaseMutexWhenCallbackReturns(_Inout_ PTP_CALLBACK_INSTANCE pci,_In_ HANDLE mut)
void None ole32.CoUninitialize(void None None)
HRESULT None mergemod.get_ModuleTable([out] BSTR *Table)
BOOL WINAPI user32.DdeImpersonateClient(_In_ HCONV hConv)
BOOL WINAPI kernel32.CopyFile(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName,_In_ BOOL bFailIfExists)
BOOL WINAPI kernel32.CopyFileW(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName,_In_ BOOL bFailIfExists)
BOOL WINAPI kernel32.CopyFileA(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName,_In_ BOOL bFailIfExists)
HRESULT None mergemod.get_Context([out] BSTR *Context)
DWORD WINAPI kernel32.GetModuleBaseName(_In_ HANDLE hProcess,_In_opt_ HMODULE hModule,_Out_ LPTSTR lpBaseName,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetModuleBaseNameW(_In_ HANDLE hProcess,_In_opt_ HMODULE hModule,_Out_ LPTSTR lpBaseName,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetModuleBaseNameA(_In_ HANDLE hProcess,_In_opt_ HMODULE hModule,_Out_ LPTSTR lpBaseName,_In_ DWORD nSize)
HANDLE WINAPI kernel32.CreateIoCompletionPort(_In_ HANDLE FileHandle,_In_opt_ HANDLE ExistingCompletionPort,_In_ ULONG_PTR CompletionKey,_In_ DWORD NumberOfConcurrentThreads)
VOID WINAPI kernel32.CloseThreadpoolTimer(_Inout_ PTP_TIMER pti)
BOOL None wtsapi32.WTSSetUserConfig(_In_ LPTSTR pServerName,_In_ LPTSTR pUserName,_In_ WTS_CONFIG_CLASS WTSConfigClass,_In_ LPTSTR pBuffer,_In_ DWORD DataLength)
BOOL None wtsapi32.WTSSetUserConfigW(_In_ LPTSTR pServerName,_In_ LPTSTR pUserName,_In_ WTS_CONFIG_CLASS WTSConfigClass,_In_ LPTSTR pBuffer,_In_ DWORD DataLength)
BOOL None wtsapi32.WTSSetUserConfigA(_In_ LPTSTR pServerName,_In_ LPTSTR pUserName,_In_ WTS_CONFIG_CLASS WTSConfigClass,_In_ LPTSTR pBuffer,_In_ DWORD DataLength)
VOID VCAPITYPE None.CHANNEL_INIT_EVENT_FN(_In_ LPVOID pInitHandle,_In_ UINT event,_In_ LPVOID pData,_In_ UINT dataLength)
VOID WINAPI kernel32.CloseThreadpoolTimer(_Inout_ PTP_TIMER pti)
PVOID WINAPI kernel32.FlsGetValue(_In_ DWORD dwFlsIndex)
VOID WINAPI kernel32.WaitForThreadpoolWaitCallbacks(_Inout_ PTP_WAIT pwa,_In_ BOOL fCancelPendingCallbacks)
VOID WINAPI kernel32.StartThreadpoolIo(_Inout_ PTP_IO pio)
BOOL WINAPI kernel32.GetThreadContext(_In_ HANDLE hThread,_Inout_ LPCONTEXT lpContext)
VOID WINAPI kernel32.DisassociateCurrentThreadFromCallback(_Inout_ PTP_CALLBACK_INSTANCE pci)
BOOL None kernel32.GetThreadIdealProcessorEx(_In_ HANDLE hThread,_Out_ PPROCESSOR_NUMBER lpIdealProcessor)
ULONG WINAPI ntdll.NtGetCurrentProcessorNumber(void None None)
DWORD None kernel32.GetActiveProcessorCount(_In_ WORD GroupNumber)
BOOL WINAPI wtsapi32.WTSIsChildSessionsEnabled(_Out_ BOOL *pbEnabled)
LONG WINAPI advapi32.RegCreateKeyEx(_In_ HKEY hKey,_In_ LPCTSTR lpSubKey,_Reserved_ DWORD Reserved,_In_opt_ LPTSTR lpClass,_In_ DWORD dwOptions,_In_ REGSAM samDesired,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_Out_ PHKEY phkResult,_Out_opt_ LPDWORD lpdwDisposition)
LONG WINAPI advapi32.RegCreateKeyExW(_In_ HKEY hKey,_In_ LPCTSTR lpSubKey,_Reserved_ DWORD Reserved,_In_opt_ LPTSTR lpClass,_In_ DWORD dwOptions,_In_ REGSAM samDesired,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_Out_ PHKEY phkResult,_Out_opt_ LPDWORD lpdwDisposition)
LONG WINAPI advapi32.RegCreateKeyExA(_In_ HKEY hKey,_In_ LPCTSTR lpSubKey,_Reserved_ DWORD Reserved,_In_opt_ LPTSTR lpClass,_In_ DWORD dwOptions,_In_ REGSAM samDesired,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_Out_ PHKEY phkResult,_Out_opt_ LPDWORD lpdwDisposition)
HRESULT None None.HandleConfirmationFromOurXln([in] DTXLUXLNCONFIRMATION Confirmation)
BOOL WINAPI wtsapi32.WTSStartRemoteControlSession(_In_ LPTSTR pTargetServerName,_In_ ULONG TargetLogonId,_In_ BYTE HotkeyVk,_In_ USHORT HotkeyModifiers)
BOOL WINAPI wtsapi32.WTSStartRemoteControlSessionW(_In_ LPTSTR pTargetServerName,_In_ ULONG TargetLogonId,_In_ BYTE HotkeyVk,_In_ USHORT HotkeyModifiers)
BOOL WINAPI wtsapi32.WTSStartRemoteControlSessionA(_In_ LPTSTR pTargetServerName,_In_ ULONG TargetLogonId,_In_ BYTE HotkeyVk,_In_ USHORT HotkeyModifiers)
PTP_WORK WINAPI kernel32.CreateThreadpoolWork(_In_ PTP_WORK_CALLBACK pfnwk,_Inout_opt_ PVOID pv,_In_opt_ PTP_CALLBACK_ENVIRON pcbe)
DWORD WINAPI mstlsapi.TLSKeyPackEnumBegin(_In_ TLS_HANDLE hHandle,_In_ DWORD dwSearchParm,_In_ BOOL bMatchAll,_In_ LSKeyPack *lpSearchParm,_Out_ PDWORD pdwErrCode)
DWORD WINAPI mstlsapi.TLSKeyPackEnumNext(_In_ TLS_HANDLE hHandle,_In_ LsKeyPack *lpKeyPack,_Out_ PDWORD pdwErrCode)
BOOL WINAPI kernel32.ResetEvent(_In_ HANDLE hEvent)
DWORD WINAPI kernel32.GetProcessImageFileName(_In_ HANDLE hProcess,_Out_ LPTSTR lpImageFileName,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetProcessImageFileNameW(_In_ HANDLE hProcess,_Out_ LPTSTR lpImageFileName,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetProcessImageFileNameA(_In_ HANDLE hProcess,_Out_ LPTSTR lpImageFileName,_In_ DWORD nSize)
BOOL WINAPI kernel32.GetPerformanceInfo(_Out_ PPERFORMANCE_INFORMATION pPerformanceInformation,_In_ DWORD cb)
typedef None None.UINT(VCAPITYPE *VirtualChannelWrite None)
BOOL WINAPI kernel32.QueryProtectedPolicy(_In_ LPCGUID PolicyGuid,_Out_ PULONG_PTR PolicyValue)
public int None.ShiftAndWrap(int value None,int positions None)
BOOL WINAPI kernel32.QueryWorkingSet(_In_ HANDLE hProcess,_Out_ PVOID pv,_In_ DWORD cb)
BOOL WINAPI kernel32.EnumDeviceDrivers(_Out_ LPVOID *lpImageBase,_In_ DWORD cb,_Out_ LPDWORD lpcbNeeded)
typedef None None.UINT(VCAPITYPE *VirtualChannelOpen None)
BOOL WINAPI advapi32.ImpersonateNamedPipeClient(_In_ HANDLE hNamedPipe)
BOOL None wtsapi32.WTSEnumerateServers(_In_ LPTSTR pDomainName,_In_ DWORD Reserved,_In_ DWORD Version,PWTS_SERVER_INFO *ppServerInfo None,DWORD *pCount None)
BOOL None wtsapi32.WTSEnumerateServersW(_In_ LPTSTR pDomainName,_In_ DWORD Reserved,_In_ DWORD Version,PWTS_SERVER_INFO *ppServerInfo None,DWORD *pCount None)
BOOL None wtsapi32.WTSEnumerateServersA(_In_ LPTSTR pDomainName,_In_ DWORD Reserved,_In_ DWORD Version,PWTS_SERVER_INFO *ppServerInfo None,DWORD *pCount None)
BOOL None wtsapi32.WTSVirtualChannelRead(_In_ HANDLE hChannelHandle,_In_ ULONG TimeOut,_Out_ PCHAR Buffer,_In_ ULONG BufferSize,_Out_ PULONG pBytesRead)
LPVOID WINAPI kernel32.VirtualAllocEx(_In_ HANDLE hProcess,_In_opt_ LPVOID lpAddress,_In_ SIZE_T dwSize,_In_ DWORD flAllocationType,_In_ DWORD flProtect)
BOOL WINAPI advapi32.GetTokenInformation(_In_ HANDLE TokenHandle,_In_ TOKEN_INFORMATION_CLASS TokenInformationClass,_Out_opt_ LPVOID TokenInformation,_In_ DWORD TokenInformationLength,_Out_ PDWORD ReturnLength)
BOOL WINAPI kernel32.GetPerformanceInfo(_Out_ PPERFORMANCE_INFORMATION pPerformanceInformation,_In_ DWORD cb)
SIZE_T WINAPI kernel32.VirtualQueryEx(_In_ HANDLE hProcess,_In_opt_ LPCVOID lpAddress,_Out_ PMEMORY_BASIC_INFORMATION lpBuffer,_In_ SIZE_T dwLength)
BOOL None wtsapi32.WTSVirtualChannelPurgeInput(_In_ HANDLE hChannelHandle)
DWORD None netapi32.DsGetSiteName(_In_ LPCTSTR ComputerName,_Out_ LPTSTR *SiteName)
DWORD None netapi32.DsGetSiteNameW(_In_ LPCTSTR ComputerName,_Out_ LPTSTR *SiteName)
DWORD None netapi32.DsGetSiteNameA(_In_ LPCTSTR ComputerName,_Out_ LPTSTR *SiteName)
BOOL WINAPI kernel32.RemoveDirectoryTransacted(_In_ LPCTSTR lpPathName,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.RemoveDirectoryTransactedW(_In_ LPCTSTR lpPathName,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.RemoveDirectoryTransactedA(_In_ LPCTSTR lpPathName,_In_ HANDLE hTransaction)
SIZE_T WINAPI kernel32.GetLargePageMinimum(void None None)
BOOL WINAPI kernel32.EnumProcessModules(_In_ HANDLE hProcess,_Out_ HMODULE *lphModule,_In_ DWORD cb,_Out_ LPDWORD lpcbNeeded)
BOOL WINAPI advapi32.DuplicateToken(_In_ HANDLE ExistingTokenHandle,_In_ SECURITY_IMPERSONATION_LEVEL ImpersonationLevel,_Out_ PHANDLE DuplicateTokenHandle)
DWORD WINAPI kernel32.GetModuleFileNameEx(_In_ HANDLE hProcess,_In_opt_ HMODULE hModule,_Out_ LPTSTR lpFilename,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetModuleFileNameExW(_In_ HANDLE hProcess,_In_opt_ HMODULE hModule,_Out_ LPTSTR lpFilename,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetModuleFileNameExA(_In_ HANDLE hProcess,_In_opt_ HMODULE hModule,_Out_ LPTSTR lpFilename,_In_ DWORD nSize)
BOOL None wtsapi32.WTSWaitSystemEvent(_In_ HANDLE hServer,_In_ DWORD EventMask,_Out_ DWORD *pEventFlags)
PVOID None None.GetFiberData(void None None)
VOID CALLBACK None.TimerProc(_In_ HWND hwnd,_In_ UINT uMsg,_In_ UINT_PTR idEvent,_In_ DWORD dwTime)
BOOL WINAPI advapi32.CredIsProtected(_In_ LPTSTR pszProtectedCredentials,_Out_ CRED_PROTECTION_TYPE *pProtectionType)
BOOL WINAPI advapi32.CredIsProtectedW(_In_ LPTSTR pszProtectedCredentials,_Out_ CRED_PROTECTION_TYPE *pProtectionType)
BOOL WINAPI advapi32.CredIsProtectedA(_In_ LPTSTR pszProtectedCredentials,_Out_ CRED_PROTECTION_TYPE *pProtectionType)
HANDLE WINAPI kernel32.CreateFileMappingNuma(_In_ HANDLE hFile,_In_opt_ LPSECURITY_ATTRIBUTES lpFileMappingAttributes,_In_ DWORD flProtect,_In_ DWORD dwMaximumSizeHigh,_In_ DWORD dwMaximumSizeLow,_In_opt_ LPCTSTR lpName,_In_ DWORD nndPreferred)
HANDLE WINAPI kernel32.CreateFileMappingNumaW(_In_ HANDLE hFile,_In_opt_ LPSECURITY_ATTRIBUTES lpFileMappingAttributes,_In_ DWORD flProtect,_In_ DWORD dwMaximumSizeHigh,_In_ DWORD dwMaximumSizeLow,_In_opt_ LPCTSTR lpName,_In_ DWORD nndPreferred)
HANDLE WINAPI kernel32.CreateFileMappingNumaA(_In_ HANDLE hFile,_In_opt_ LPSECURITY_ATTRIBUTES lpFileMappingAttributes,_In_ DWORD flProtect,_In_ DWORD dwMaximumSizeHigh,_In_ DWORD dwMaximumSizeLow,_In_opt_ LPCTSTR lpName,_In_ DWORD nndPreferred)
HRESULT None None.Enlist(ITransaction * pTransaction,ITransactionResourceAsync * pRes,XACTUOW * pUOW,LONG * pisoLevel,ITransactionEnlistmentAsync ** ppEnlist)
DWORD WINAPI mstlsapi.TLSLicenseEnumBegin(_In_ TLS_HANDLE hHandle,_In_ DWORD dwSearchParm,_In_ BOOL bMatchAll,_In_ LSLicense *lpSearchParm,_Out_ PDWORD pdwErrCode)
long WINAPI user32.BroadcastSystemMessage(_In_ DWORD dwFlags,_Inout_opt_ LPDWORD lpdwRecipients,_In_ UINT uiMessage,_In_ WPARAM wParam,_In_ LPARAM lParam)
long WINAPI user32.BroadcastSystemMessageW(_In_ DWORD dwFlags,_Inout_opt_ LPDWORD lpdwRecipients,_In_ UINT uiMessage,_In_ WPARAM wParam,_In_ LPARAM lParam)
BOOL WINAPI user32.DdeSetUserHandle(_In_ HCONV hConv,_In_ DWORD id,_In_ DWORD_PTR hUser)
int None ws2_32.WSAEventSelect(_In_ SOCKET s,_In_ WSAEVENT hEventObject,_In_ long lNetworkEvents)
HRESULT None mergemod.get_Dependencies(IMsmDependencies **Dependencies None)
BOOL WINAPI user32.DdeDisconnect(_In_ HCONV hConv)
DWORD WINAPI advapi32.WriteEncryptedFileRaw(_In_ PFE_IMPORT_FUNC pfImportCallback,_In_opt_ PVOID pvCallbackContext,_In_ PVOID pvContext)
DWORD WINAPI user32.DdeGetData(_In_ HDDEDATA hData,_Out_opt_ LPBYTE pDst,_In_ DWORD cbMax,_In_ DWORD cbOff)
HRESULT None None.EnlistResourceManager(DWORD dwRMCookie None,DWORD * pdwITransaction)
BOOL WINAPI kernel32.ReadDirectoryChangesW(_In_ HANDLE hDirectory,_Out_ LPVOID lpBuffer,_In_ DWORD nBufferLength,_In_ BOOL bWatchSubtree,_In_ DWORD dwNotifyFilter,_Out_opt_ LPDWORD lpBytesReturned,_Inout_opt_ LPOVERLAPPED lpOverlapped,_In_opt_ LPOVERLAPPED_COMPLETION_ROUTINE lpCompletionRoutine)
BOOL WINAPI wtsapi32.WTSIsChildSessionsEnabled(_Out_ BOOL *pbEnabled)
uint32 None cimwin32.Create([in] string CommandLine,[in] string CurrentDirectory,[in] Win32_ProcessStartup ProcessStartupInformation,[out] uint32 ProcessId)
BOOL WINAPI advapi32.IsValidAcl(_In_ PACL pAcl)
HRESULT None mergemod.get_Attributes([out] long *Attributes)
HMODULE WINAPI kernel32.GetModuleHandle(_In_opt_ LPCTSTR lpModuleName)
HMODULE WINAPI kernel32.GetModuleHandleW(_In_opt_ LPCTSTR lpModuleName)
HMODULE WINAPI kernel32.GetModuleHandleA(_In_opt_ LPCTSTR lpModuleName)
BOOL WINAPI kernel32.HeapWalk(_In_ HANDLE hHeap,_Inout_ LPPROCESS_HEAP_ENTRY lpEntry)
BOOL None advapi32.CredGetTargetInfo(_In_ LPCTSTR TargetName,_In_ DWORD Flags,_Out_ PCREDENTIAL_TARGET_INFORMATION *TargetInfo)
BOOL None advapi32.CredGetTargetInfoW(_In_ LPCTSTR TargetName,_In_ DWORD Flags,_Out_ PCREDENTIAL_TARGET_INFORMATION *TargetInfo)
BOOL None advapi32.CredGetTargetInfoA(_In_ LPCTSTR TargetName,_In_ DWORD Flags,_Out_ PCREDENTIAL_TARGET_INFORMATION *TargetInfo)
LONG WINAPI winscard.SCardIsValidContext(_In_ SCARDCONTEXT hContext)
PVOID None None.SecureZeroMemory(_In_ PVOID ptr,_In_ SIZE_T cnt)
DWORD WINAPI advapi32.SetSecurityDescriptorRMControl(_Inout_ PSECURITY_DESCRIPTOR SecurityDescriptor,_In_opt_ PUCHAR RMControl)
BOOL None wtsapi32.WTSEnumerateProcesses(_In_ HANDLE hServer,_In_ DWORD Reserved,_In_ DWORD Version,_Out_ PWTS_PROCESS_INFO *ppProcessInfo,_Out_ DWORD *pCount)
BOOL None wtsapi32.WTSEnumerateProcessesW(_In_ HANDLE hServer,_In_ DWORD Reserved,_In_ DWORD Version,_Out_ PWTS_PROCESS_INFO *ppProcessInfo,_Out_ DWORD *pCount)
BOOL None wtsapi32.WTSEnumerateProcessesA(_In_ HANDLE hServer,_In_ DWORD Reserved,_In_ DWORD Version,_Out_ PWTS_PROCESS_INFO *ppProcessInfo,_Out_ DWORD *pCount)
HANDLE WINAPI kernel32.CreateMemoryResourceNotification(_In_ MEMORY_RESOURCE_NOTIFICATION_TYPE NotificationType)
DWORD WINAPI advapi32.SetNamedSecurityInfo(_In_ LPTSTR pObjectName,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_In_opt_ PSID psidOwner,_In_opt_ PSID psidGroup,_In_opt_ PACL pDacl,_In_opt_ PACL pSacl)
DWORD WINAPI advapi32.SetNamedSecurityInfoW(_In_ LPTSTR pObjectName,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_In_opt_ PSID psidOwner,_In_opt_ PSID psidGroup,_In_opt_ PACL pDacl,_In_opt_ PACL pSacl)
DWORD WINAPI advapi32.SetNamedSecurityInfoA(_In_ LPTSTR pObjectName,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_In_opt_ PSID psidOwner,_In_opt_ PSID psidGroup,_In_opt_ PACL pDacl,_In_opt_ PACL pSacl)
BOOL WINAPI advapi32.SetSecurityDescriptorDacl(_Inout_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_ BOOL bDaclPresent,_In_opt_ PACL pDacl,_In_ BOOL bDaclDefaulted)
HANDLE WINAPI kernel32.CreateEventEx(_In_opt_ LPSECURITY_ATTRIBUTES lpEventAttributes,_In_opt_ LPCTSTR lpName,_In_ DWORD dwFlags,_In_ DWORD dwDesiredAccess)
HANDLE WINAPI kernel32.CreateEventExW(_In_opt_ LPSECURITY_ATTRIBUTES lpEventAttributes,_In_opt_ LPCTSTR lpName,_In_ DWORD dwFlags,_In_ DWORD dwDesiredAccess)
HANDLE WINAPI kernel32.CreateEventExA(_In_opt_ LPSECURITY_ATTRIBUTES lpEventAttributes,_In_opt_ LPCTSTR lpName,_In_ DWORD dwFlags,_In_ DWORD dwDesiredAccess)
static void None.Main(string[] args None)
BOOL WINAPI ntdll.IsProcessCritical(_In_ HANDLE hProcess,_Out_ PBOOL Critical)
void WINAPI kernel32.SetFileApisToOEM(void None None)
static void None.Main(string[] args None)
int None ws2_32.WSARecv(_In_ SOCKET s,_Inout_ LPWSABUF lpBuffers,_In_ DWORD dwBufferCount,_Out_ LPDWORD lpNumberOfBytesRecvd,_Inout_ LPDWORD lpFlags,_In_ LPWSAOVERLAPPED lpOverlapped,_In_ LPWSAOVERLAPPED_COMPLETION_ROUTINE lpCompletionRoutine)
STDAPI None shcore.GetScaleFactorForMonitor(_In_ HMONITOR hMon,_Out_ DEVICE_SCALE_FACTOR *pScale)
HRESULT None mergemod.get_Type([out] BSTR *Type)
BOOL None None.SUCCEEDED(HRESULT hr None)
DWORD WINAPI rstrtmgr.RmShutdown(_In_ DWORD dwSessionHandle,_In_ ULONG lActionFlags,_In_opt_ RM_WRITE_STATUS_CALLBACK fnStatus)
HRESULT None ole32.CoInitializeEx(_In_opt_ LPVOID pvReserved,_In_ DWORD dwCoInit)
DWORD WINAPI advapi32.InitiateShutdown(_In_opt_ LPTSTR lpMachineName,_In_opt_ LPTSTR lpMessage,_In_ DWORD dwGracePeriod,_In_ DWORD dwShutdownFlags,_In_ DWORD dwReason)
DWORD WINAPI advapi32.InitiateShutdownW(_In_opt_ LPTSTR lpMachineName,_In_opt_ LPTSTR lpMessage,_In_ DWORD dwGracePeriod,_In_ DWORD dwShutdownFlags,_In_ DWORD dwReason)
DWORD WINAPI advapi32.InitiateShutdownA(_In_opt_ LPTSTR lpMachineName,_In_opt_ LPTSTR lpMessage,_In_ DWORD dwGracePeriod,_In_ DWORD dwShutdownFlags,_In_ DWORD dwReason)
BOOL WINAPI kernel32.FreeLibrary(_In_ HMODULE hModule)
DWORD WINAPI rstrtmgr.RmRemoveFilter(_In_ DWORD dwSessionHandle,_In_opt_ LPCWSTR strFilename,_In_opt_ RM_UNIQUE_PROCESS *Application,_In_opt_ LPCWSTR strShortServiceName)
DWORD WINAPI mstlsapi.TLSKeyPackEnumNext(_In_ TLS_HANDLE hHandle,_In_ LsKeyPack *lpKeyPack,_Out_ PDWORD pdwErrCode)
static void None.Main(string[] args None)
static void None.Main(string[] args None)
static void None.Main(string[] args None)
BOOL WINAPI advapi32.AccessCheck(_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_ HANDLE ClientToken,_In_ DWORD DesiredAccess,_In_ PGENERIC_MAPPING GenericMapping,_Out_opt_ PPRIVILEGE_SET PrivilegeSet,_Inout_ LPDWORD PrivilegeSetLength,_Out_ LPDWORD GrantedAccess,_Out_ LPBOOL AccessStatus)
BOOL WINAPI kernel32.GetFileAttributesTransacted(_In_ LPCTSTR lpFileName,_In_ GET_FILEEX_INFO_LEVELS fInfoLevelId,_Out_ LPVOID lpFileInformation,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.GetFileAttributesTransactedW(_In_ LPCTSTR lpFileName,_In_ GET_FILEEX_INFO_LEVELS fInfoLevelId,_Out_ LPVOID lpFileInformation,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.GetFileAttributesTransactedA(_In_ LPCTSTR lpFileName,_In_ GET_FILEEX_INFO_LEVELS fInfoLevelId,_Out_ LPVOID lpFileInformation,_In_ HANDLE hTransaction)
BOOL None kernel32.ProcessIdToSessionId(_In_ DWORD dwProcessId,_Out_ DWORD *pSessionId)
LPVOID WINAPI kernel32.LocalLock(_In_ HLOCAL hMem)
BOOL WINAPI user32.ShowWindow(_In_ HWND hWnd,_In_ int nCmdShow)
HANDLE WINAPI kernel32.FindFirstFileNameTransactedW(_In_ LPCWSTR lpFileName,_In_ DWORD dwFlags,_Inout_ LPDWORD StringLength,_Inout_ PWCHAR LinkName,_In_opt_ HANDLE hTransaction)
HRESULT None shlwapi.AssocQueryString(_In_ ASSOCF flags,_In_ ASSOCSTR str,_In_ LPCTSTR pszAssoc,_In_opt_ LPCTSTR pszExtra,_Out_opt_ LPTSTR pszOut,_Inout_ DWORD *pcchOut)
HRESULT None shlwapi.AssocQueryStringW(_In_ ASSOCF flags,_In_ ASSOCSTR str,_In_ LPCTSTR pszAssoc,_In_opt_ LPCTSTR pszExtra,_Out_opt_ LPTSTR pszOut,_Inout_ DWORD *pcchOut)
HRESULT None shlwapi.AssocQueryStringA(_In_ ASSOCF flags,_In_ ASSOCSTR str,_In_ LPCTSTR pszAssoc,_In_opt_ LPCTSTR pszExtra,_Out_opt_ LPTSTR pszOut,_Inout_ DWORD *pcchOut)
BOOL WINAPI kernel32.GetFileAttributesTransacted(_In_ LPCTSTR lpFileName,_In_ GET_FILEEX_INFO_LEVELS fInfoLevelId,_Out_ LPVOID lpFileInformation,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.GetFileAttributesTransactedW(_In_ LPCTSTR lpFileName,_In_ GET_FILEEX_INFO_LEVELS fInfoLevelId,_Out_ LPVOID lpFileInformation,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.GetFileAttributesTransactedA(_In_ LPCTSTR lpFileName,_In_ GET_FILEEX_INFO_LEVELS fInfoLevelId,_Out_ LPVOID lpFileInformation,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.SetEnvironmentVariable(_In_ LPCTSTR lpName,_In_opt_ LPCTSTR lpValue)
BOOL WINAPI kernel32.SetEnvironmentVariableW(_In_ LPCTSTR lpName,_In_opt_ LPCTSTR lpValue)
BOOL WINAPI kernel32.SetEnvironmentVariableA(_In_ LPCTSTR lpName,_In_opt_ LPCTSTR lpValue)
HINSTANCE None shell32.WOWShellExecute(_In_ HWND hwnd,_In_ LPCTSTR lpOperation,_In_ LPCTSTR lpFile,_In_ LPCTSTR lpParameters,_In_ LPCTSTR lpDirectory,_In_ INT nShowCmd,void *lpfnCBWinExec None)
BOOL None wtsapi32.WTSVirtualChannelQuery(_In_ HANDLE hChannelHandle,_In_ WTS_VIRTUAL_CLASS WtsVirtualClass,_Out_ PVOID *ppBuffer,_Out_ DWORD *pBytesReturned)
BOOL WINAPI kernel32.EnumProcessModules(_In_ HANDLE hProcess,_Out_ HMODULE *lphModule,_In_ DWORD cb,_Out_ LPDWORD lpcbNeeded)
void None shell32.SHFree(_In_ void *pv)
BOOL WINAPI user32.DdeKeepStringHandle(_In_ DWORD idInst,_In_ HSZ hsz)
BOOL WINAPI user32.DdeKeepStringHandle(_In_ DWORD idInst,_In_ HSZ hsz)
HANDLE WINAPI kernel32.OpenMutex(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpName)
HANDLE WINAPI kernel32.OpenMutexW(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpName)
HANDLE WINAPI kernel32.OpenMutexA(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpName)
BOOL WINAPI kernel32.SetFileValidData(_In_ HANDLE hFile,_In_ LONGLONG ValidDataLength)
BOOL WINAPI kernel32.GetThreadTimes(_In_ HANDLE hThread,_Out_ LPFILETIME lpCreationTime,_Out_ LPFILETIME lpExitTime,_Out_ LPFILETIME lpKernelTime,_Out_ LPFILETIME lpUserTime)
DWORD WINAPI kernel32.GetDeviceDriverFileName(_In_ LPVOID ImageBase,_Out_ LPTSTR lpFilename,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetDeviceDriverFileNameW(_In_ LPVOID ImageBase,_Out_ LPTSTR lpFilename,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetDeviceDriverFileNameA(_In_ LPVOID ImageBase,_Out_ LPTSTR lpFilename,_In_ DWORD nSize)
DWORD None netapi32.DsGetSiteName(_In_ LPCTSTR ComputerName,_Out_ LPTSTR *SiteName)
DWORD None netapi32.DsGetSiteNameW(_In_ LPCTSTR ComputerName,_Out_ LPTSTR *SiteName)
DWORD None netapi32.DsGetSiteNameA(_In_ LPCTSTR ComputerName,_Out_ LPTSTR *SiteName)
BOOL WINAPI kernel32.SetFileValidData(_In_ HANDLE hFile,_In_ LONGLONG ValidDataLength)
DWORD_PTR WINAPI kernel32.SetThreadAffinityMask(_In_ HANDLE hThread,_In_ DWORD_PTR dwThreadAffinityMask)
HRESULT None ole32.CreateFileMoniker(_In_ LPCOLESTR lpszPathName,_Out_ LPMONIKER *ppmk)
HANDLE WINAPI kernel32.CreateThread(_In_opt_ LPSECURITY_ATTRIBUTES lpThreadAttributes,_In_ SIZE_T dwStackSize,_In_ LPTHREAD_START_ROUTINE lpStartAddress,_In_opt_ LPVOID lpParameter,_In_ DWORD dwCreationFlags,_Out_opt_ LPDWORD lpThreadId)
BOOL WINAPI user32.DdeDisconnectList(_In_ HCONVLIST hConvList)
static void None.Main(string[] args None)
BOOL WINAPI kernel32.SetSystemFileCacheSize(_In_ SIZE_T MinimumFileCacheSize,_In_ SIZE_T MaximumFileCacheSize,_In_ DWORD Flags)
BOOL WINAPI kernel32.SetEnvironmentVariable(_In_ LPCTSTR lpName,_In_opt_ LPCTSTR lpValue)
BOOL WINAPI kernel32.SetEnvironmentVariableW(_In_ LPCTSTR lpName,_In_opt_ LPCTSTR lpValue)
BOOL WINAPI kernel32.SetEnvironmentVariableA(_In_ LPCTSTR lpName,_In_opt_ LPCTSTR lpValue)
public int None.ShiftAndWrap(int value None,int positions None)
LPVOID WINAPI kernelbase.TlsGetValue(_In_ DWORD dwTlsIndex)
VOID WINAPI kernel32.DisassociateCurrentThreadFromCallback(_Inout_ PTP_CALLBACK_INSTANCE pci)
BOOL WINAPI kernel32.GetFileAttributesTransacted(_In_ LPCTSTR lpFileName,_In_ GET_FILEEX_INFO_LEVELS fInfoLevelId,_Out_ LPVOID lpFileInformation,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.GetFileAttributesTransactedW(_In_ LPCTSTR lpFileName,_In_ GET_FILEEX_INFO_LEVELS fInfoLevelId,_Out_ LPVOID lpFileInformation,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.GetFileAttributesTransactedA(_In_ LPCTSTR lpFileName,_In_ GET_FILEEX_INFO_LEVELS fInfoLevelId,_Out_ LPVOID lpFileInformation,_In_ HANDLE hTransaction)
LONG WINAPI advapi32.RegConnectRegistry(_In_opt_ LPCTSTR lpMachineName,_In_ HKEY hKey,_Out_ PHKEY phkResult)
LONG WINAPI advapi32.RegConnectRegistryW(_In_opt_ LPCTSTR lpMachineName,_In_ HKEY hKey,_Out_ PHKEY phkResult)
LONG WINAPI advapi32.RegConnectRegistryA(_In_opt_ LPCTSTR lpMachineName,_In_ HKEY hKey,_Out_ PHKEY phkResult)
BOOL WINAPI kernel32.SetUmsThreadInformation(_In_ PUMS_CONTEXT UmsThread,_In_ UMS_THREAD_INFO_CLASS UmsThreadInfoClass,_In_ PVOID UmsThreadInformation,_In_ ULONG UmsThreadInformationLength)
HRESULT None None.XARMCreate(char * pszDSN,char * pszClientDllName,DWORD * pdwRMCookie)
HRESULT None None.XARMCreate(char * pszDSN,char * pszClientDllName,DWORD * pdwRMCookie)
BOOL WINAPI kernel32.ReadFileScatter(_In_ HANDLE hFile,_In_ FILE_SEGMENT_ELEMENT aSegmentArray[],_In_ DWORD nNumberOfBytesToRead,_Reserved_ LPDWORD lpReserved,_Inout_ LPOVERLAPPED lpOverlapped)
BOOL WINAPI kernel32.GetFileAttributesTransacted(_In_ LPCTSTR lpFileName,_In_ GET_FILEEX_INFO_LEVELS fInfoLevelId,_Out_ LPVOID lpFileInformation,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.GetFileAttributesTransactedW(_In_ LPCTSTR lpFileName,_In_ GET_FILEEX_INFO_LEVELS fInfoLevelId,_Out_ LPVOID lpFileInformation,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.GetFileAttributesTransactedA(_In_ LPCTSTR lpFileName,_In_ GET_FILEEX_INFO_LEVELS fInfoLevelId,_Out_ LPVOID lpFileInformation,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.SetEnvironmentVariable(_In_ LPCTSTR lpName,_In_opt_ LPCTSTR lpValue)
BOOL WINAPI kernel32.SetEnvironmentVariableW(_In_ LPCTSTR lpName,_In_opt_ LPCTSTR lpValue)
BOOL WINAPI kernel32.SetEnvironmentVariableA(_In_ LPCTSTR lpName,_In_opt_ LPCTSTR lpValue)
VOID None None.SetThreadpoolCallbackPriority(_Inout_ PTP_CALLBACK_ENVIRON pcbe,_In_ TP_CALLBACK_PRIORITY Priority)
BOOL WINAPI wtsapi32.WTSEnumerateListeners(_In_ HANDLE hServer,_In_ PVOID pReserved,_In_ DWORD Reserved,_Out_opt_ PWTSLISTENERNAME pListeners,_Inout_ DWORD *pCount)
BOOL WINAPI wtsapi32.WTSEnumerateListenersW(_In_ HANDLE hServer,_In_ PVOID pReserved,_In_ DWORD Reserved,_Out_opt_ PWTSLISTENERNAME pListeners,_Inout_ DWORD *pCount)
BOOL WINAPI wtsapi32.WTSEnumerateListenersA(_In_ HANDLE hServer,_In_ PVOID pReserved,_In_ DWORD Reserved,_Out_opt_ PWTSLISTENERNAME pListeners,_Inout_ DWORD *pCount)
BOOL WINAPI kernel32.EmptyWorkingSet(_In_ HANDLE hProcess)
UINT_PTR WINAPI user32.SetCoalescableTimer(_In_opt_ HWND hwnd,_In_ UINT_PTR nIDEvent,_In_ UINT uElapse,_In_opt_ TIMERPROC lpTimerFunc,_In_ ULONG uToleranceDelay)
DWORD None netapi32.DsRoleGetPrimaryDomainInformation(_In_ LPCWSTR lpServer,_In_ DSROLE_PRIMARY_DOMAIN_INFO_LEVEL InfoLevel,_Out_ PBYTE *Buffer)
DWORD WINAPI kernel32.ResumeThread(_In_ HANDLE hThread)
BOOL WINAPI user32.DdeUninitialize(_In_ DWORD idInst)
HRESULT None None.HandleConfirmationFromOurXln([in] DTXLUXLNCONFIRMATION Confirmation)
public int None.ShiftAndWrap(int value None,int positions None)
LONG WINAPI advapi32.RegSetValue(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_ DWORD dwType,_In_ LPCTSTR lpData,_In_ DWORD cbData)
LONG WINAPI advapi32.RegSetValueW(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_ DWORD dwType,_In_ LPCTSTR lpData,_In_ DWORD cbData)
LONG WINAPI advapi32.RegSetValueA(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_ DWORD dwType,_In_ LPCTSTR lpData,_In_ DWORD cbData)
DWORD WINAPI kernel32.GetProcessIdOfThread(_In_ HANDLE Thread)
HRESULT None mergemod.get_Type([out] BSTR *Type)
DWORD WINAPI advapi32.WriteEncryptedFileRaw(_In_ PFE_IMPORT_FUNC pfImportCallback,_In_opt_ PVOID pvCallbackContext,_In_ PVOID pvContext)
void None None.ZeroMemory([in] PVOID Destination,[in] SIZE_T Length)
static void None.Main(string[] args None)
BOOL WINAPI kernel32.QueryWorkingSetEx(_In_ HANDLE hProcess,_Inout_ PVOID pv,_In_ DWORD cb)
HRESULT None None.GetNodeNameSize(ULONG * pcbNodeNameSize)
LPVOID WINAPI kernel32.MapViewOfFileExNuma(_In_ HANDLE hFileMappingObject,_In_ DWORD dwDesiredAccess,_In_ DWORD dwFileOffsetHigh,_In_ DWORD dwFileOffsetLow,_In_ SIZE_T dwNumberOfBytesToMap,_In_opt_ LPVOID lpBaseAddress,_In_ DWORD nndPreferred)
DWORD WINAPI user32.DdeQueryString(_In_ DWORD idInst,_In_ HSZ hsz,_Out_opt_ LPTSTR psz,_In_ DWORD cchMax,_In_ int iCodePage)
DWORD WINAPI user32.DdeQueryStringW(_In_ DWORD idInst,_In_ HSZ hsz,_Out_opt_ LPTSTR psz,_In_ DWORD cchMax,_In_ int iCodePage)
DWORD WINAPI user32.DdeQueryStringA(_In_ DWORD idInst,_In_ HSZ hsz,_Out_opt_ LPTSTR psz,_In_ DWORD cchMax,_In_ int iCodePage)
BOOL WINAPI kernel32.GlobalMemoryStatusEx(_Inout_ LPMEMORYSTATUSEX lpBuffer)
BOOL None kernel32.ProcessIdToSessionId(_In_ DWORD dwProcessId,_Out_ DWORD *pSessionId)
DWORD WINAPI advapi32.RemoveUsersFromEncryptedFile(_In_ LPCWSTR lpFileName,_In_ PENCRYPTION_CERTIFICATE_HASH_LIST pHashes)
BOOL WINAPI user32.DdeDisconnect(_In_ HCONV hConv)
BOOL WINAPI wtsapi32.WTSConnectSession(_In_ ULONG LogonId,_In_ ULONG TargetLogonId,_In_ PTSTR pPassword,_In_ BOOL bWait)
BOOL WINAPI wtsapi32.WTSConnectSessionW(_In_ ULONG LogonId,_In_ ULONG TargetLogonId,_In_ PTSTR pPassword,_In_ BOOL bWait)
BOOL WINAPI wtsapi32.WTSConnectSessionA(_In_ ULONG LogonId,_In_ ULONG TargetLogonId,_In_ PTSTR pPassword,_In_ BOOL bWait)
UINT WINAPI user32.DdeQueryConvInfo(_In_ HCONV hConv,_In_ DWORD idTransaction,_Inout_ PCONVINFO pConvInfo)
BOOL WINAPI kernel32.WritePrivateProfileString(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ LPCTSTR lpString,_In_ LPCTSTR lpFileName)
BOOL WINAPI kernel32.WritePrivateProfileStringW(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ LPCTSTR lpString,_In_ LPCTSTR lpFileName)
BOOL WINAPI kernel32.WritePrivateProfileStringA(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ LPCTSTR lpString,_In_ LPCTSTR lpFileName)
BOOL None kernel32.GetNumaProcessorNodeEx(_In_ PPROCESSOR_NUMBER Processor,_Out_ PUSHORT NodeNumber)
int None shell32.RestartDialog(_In_opt_ HWND hParent,_In_opt_ PCWSTR pszPrompt,DWORD dwFlags None)
NTSTATUS WINAPI ntdll.NtQuerySystemTime(_Out_ PLARGE_INTEGER SystemTime)
static void None.Main(string[] args None)
HRESULT None None.Create(ITransactionPhase0NotifyAsync * pITransactionPhase0Notify,ITransactionPhase0EnlistmentAsync ** ppITransactionPhase0Enlistment)
HRESULT None ole32.CoDisconnectObject(_In_ LPUNKNOWN pUnk,_In_ DWORD dwReserved)
HRESULT None mergemod.OpenModule([in] BSTR FileName,[in] short Language)
HCONV WINAPI user32.DdeQueryNextServer(_In_ HCONVLIST hConvList,_In_ HCONV hConvPrev)
HRESULT WINAPI kernel32.ConvertPerformanceCounterToAuxiliaryCounter(_In_ ULONGLONG ullPerformanceCounterValue,_Out_ PULONGLONG lpAuxiliaryCounterValue,_Out_opt_ PULONGLONG lpConversionError)
HRESULT WINAPI wofutil.WofIsExternalFile(_In_ LPCWSTR FilePath,_Out_opt_ PBOOL IsExternalFile,_Out_opt_ PULONG Provider,_Out_opt_ PVOID ExternalFileInfo,_Inout_opt_ PULONG BufferLength)
HDDEDATA WINAPI user32.DdeNameService(_In_ DWORD idInst,_In_opt_ HSZ hsz1,_In_opt_ HSZ hsz2,_In_ UINT afCmd)
BOOL WINAPI kernel32.CopyFile(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName,_In_ BOOL bFailIfExists)
BOOL WINAPI kernel32.CopyFileW(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName,_In_ BOOL bFailIfExists)
BOOL WINAPI kernel32.CopyFileA(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName,_In_ BOOL bFailIfExists)
BOOL WINAPI kernel32.QueryWorkingSetEx(_In_ HANDLE hProcess,_Inout_ PVOID pv,_In_ DWORD cb)
HRESULT None None.SetNetworkTIPAccess(BOOL bNetworkTIPAccess None)
BOOL WINAPI kernel32.UnlockFileEx(_In_ HANDLE hFile,_Reserved_ DWORD dwReserved,_In_ DWORD nNumberOfBytesToUnlockLow,_In_ DWORD nNumberOfBytesToUnlockHigh,_Inout_ LPOVERLAPPED lpOverlapped)
int None ws2_32.WSAStartup(_In_ WORD wVersionRequested,_Out_ LPWSADATA lpWSAData)
HDDEDATA CALLBACK None.DdeCallback(_In_ UINT uType,_In_ UINT uFmt,_In_ HCONV hconv,_In_ HSZ hsz1,_In_ HSZ hsz2,_In_ HDDEDATA hdata,_In_ ULONG_PTR dwData1,_In_ ULONG_PTR dwData2)
BOOL None wtsapi32.WTSShutdownSystem(_In_ HANDLE hServer,_In_ DWORD ShutdownFlag)
HRESULT None activeds.ADsGetLastError(_Out_ LPDWORD lpError,_Out_ LPWSTR lpErrorBuf,_In_ DWORD dwErrorBufLen,_Out_ LPWSTR lpNameBuf,_In_ DWORD dwNameBufLen)
int WINAPI user32.DdeCmpStringHandles(_In_ HSZ hsz1,_In_ HSZ hsz2)
DWORD WINAPI user32.DdeGetData(_In_ HDDEDATA hData,_Out_opt_ LPBYTE pDst,_In_ DWORD cbMax,_In_ DWORD cbOff)
HRESULT None mergemod.get_Name([out] BSTR *Name)
int None ws2_32.WSAGetLastError(void None None)
ULONG WINAPI ntdll.RtlNtStatusToDosError(_In_ NTSTATUS Status)
BOOL WINAPI kernel32.GetProcessHandleCount(_In_ HANDLE hProcess,_Inout_ PDWORD pdwHandleCount)
LONG WINAPI advapi32.RegQueryValueEx(_In_ HKEY hKey,_In_opt_ LPCTSTR lpValueName,_Reserved_ LPDWORD lpReserved,_Out_opt_ LPDWORD lpType,_Out_opt_ LPBYTE lpData,_Inout_opt_ LPDWORD lpcbData)
LONG WINAPI advapi32.RegQueryValueExW(_In_ HKEY hKey,_In_opt_ LPCTSTR lpValueName,_Reserved_ LPDWORD lpReserved,_Out_opt_ LPDWORD lpType,_Out_opt_ LPBYTE lpData,_Inout_opt_ LPDWORD lpcbData)
LONG WINAPI advapi32.RegQueryValueExA(_In_ HKEY hKey,_In_opt_ LPCTSTR lpValueName,_Reserved_ LPDWORD lpReserved,_Out_opt_ LPDWORD lpType,_Out_opt_ LPBYTE lpData,_Inout_opt_ LPDWORD lpcbData)
HANDLE WINAPI kernel32.HeapCreate(_In_ DWORD flOptions,_In_ SIZE_T dwInitialSize,_In_ SIZE_T dwMaximumSize)
public string None.ToString(string format None,IFormatProvider provider None)
public int None.ShiftAndWrap(int value None,int positions None)
static void None.Main(string[] args None)
BOOL WINAPI advapi32.GetSecurityDescriptorDacl(_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_Out_ LPBOOL lpbDaclPresent,_Out_ PACL *pDacl,_Out_ LPBOOL lpbDaclDefaulted)
BOOL WINAPI api-ms-win-core-enclave-l1-1-0.IsEnclaveTypeSupported(_In_ DWORD flEnclaveType)
HRESULT None None.SetNetworkClientAccess(BOOL bNetworkClientAccess None)
BOOL WINAPI kernel32.GetUmsCompletionListEvent(_In_ PUMS_COMPLETION_LIST UmsCompletionList,_Inout_ PHANDLE UmsCompletionEvent)
VOID WINAPI advapi32.QuerySecurityAccessMask(_In_ SECURITY_INFORMATION SecurityInformation,_Out_ LPDWORD DesiredAccess)
BOOL WINAPI kernel32.HeapWalk(_In_ HANDLE hHeap,_Inout_ LPPROCESS_HEAP_ENTRY lpEntry)
BOOL WINAPI userenv.DeleteProfile(_In_ LPCTSTR lpSidString,_In_opt_ LPCTSTR lpProfilePath,_In_opt_ LPCTSTR lpComputerName)
BOOL WINAPI userenv.DeleteProfileW(_In_ LPCTSTR lpSidString,_In_opt_ LPCTSTR lpProfilePath,_In_opt_ LPCTSTR lpComputerName)
BOOL WINAPI userenv.DeleteProfileA(_In_ LPCTSTR lpSidString,_In_opt_ LPCTSTR lpProfilePath,_In_opt_ LPCTSTR lpComputerName)
BOOL WINAPI advapi32.GetSecurityDescriptorGroup(_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_Out_ PSID *pGroup,_Out_ LPBOOL lpbGroupDefaulted)
BOOL WINAPI advapi32.DuplicateTokenEx(_In_ HANDLE hExistingToken,_In_ DWORD dwDesiredAccess,_In_opt_ LPSECURITY_ATTRIBUTES lpTokenAttributes,_In_ SECURITY_IMPERSONATION_LEVEL ImpersonationLevel,_In_ TOKEN_TYPE TokenType,_Out_ PHANDLE phNewToken)
BOOL WINAPI kernel32.VirtualUnlock(_In_ LPVOID lpAddress,_In_ SIZE_T dwSize)
DWORD WINAPI user32.DdeGetData(_In_ HDDEDATA hData,_Out_opt_ LPBYTE pDst,_In_ DWORD cbMax,_In_ DWORD cbOff)
BOOL WINAPI kernel32.GetSystemFileCacheSize(_Out_ PSIZE_T lpMinimumFileCacheSize,_Out_ PSIZE_T lpMaximumFileCacheSize,_Out_ PDWORD lpFlags)
VOID None None.SetThreadpoolCallbackPool(_Inout_ PTP_CALLBACK_ENVIRON pcbe,_In_ PTP_POOL ptpp)
HRESULT None None.GetNetworkTransactionAccess(BOOL * pbNetworkTransactionAccess)
HRESULT None None.GetOptionsObject(ITransactionOptions ** ppOptions)
public int None.ShiftAndWrap(int value None,int positions None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
UINT WINAPI user32.DdeInitialize(_Inout_ LPDWORD pidInst,_In_ PFNCALLBACK pfnCallback,_In_ DWORD afCmd,_Reserved_ DWORD ulRes)
UINT WINAPI user32.DdeInitializeW(_Inout_ LPDWORD pidInst,_In_ PFNCALLBACK pfnCallback,_In_ DWORD afCmd,_Reserved_ DWORD ulRes)
UINT WINAPI user32.DdeInitializeA(_Inout_ LPDWORD pidInst,_In_ PFNCALLBACK pfnCallback,_In_ DWORD afCmd,_Reserved_ DWORD ulRes)
BOOL WINAPI kernel32.GetSystemTimes(_Out_opt_ LPFILETIME lpIdleTime,_Out_opt_ LPFILETIME lpKernelTime,_Out_opt_ LPFILETIME lpUserTime)
BOOL WINAPI kernel32.DeleteTimerQueueEx(_In_ HANDLE TimerQueue,_In_opt_ HANDLE CompletionEvent)
DWORD WINAPI kernelbase.TlsAlloc(void None None)
UINT WINAPI user32.DdeGetLastError(_In_ DWORD idInst)
void None None.Prepare(PreparingEnlistment preparingEnlistment None)
HANDLE WINAPI kernel32.CreateFileMapping(_In_ HANDLE hFile,_In_opt_ LPSECURITY_ATTRIBUTES lpAttributes,_In_ DWORD flProtect,_In_ DWORD dwMaximumSizeHigh,_In_ DWORD dwMaximumSizeLow,_In_opt_ LPCTSTR lpName)
HANDLE WINAPI kernel32.CreateFileMappingW(_In_ HANDLE hFile,_In_opt_ LPSECURITY_ATTRIBUTES lpAttributes,_In_ DWORD flProtect,_In_ DWORD dwMaximumSizeHigh,_In_ DWORD dwMaximumSizeLow,_In_opt_ LPCTSTR lpName)
HANDLE WINAPI kernel32.CreateFileMappingA(_In_ HANDLE hFile,_In_opt_ LPSECURITY_ATTRIBUTES lpAttributes,_In_ DWORD flProtect,_In_ DWORD dwMaximumSizeHigh,_In_ DWORD dwMaximumSizeLow,_In_opt_ LPCTSTR lpName)
HRESULT None None.TMDown(void None None)
BOOL None kernel32.GetNumaNodeProcessorMaskEx(_In_ USHORT Node,_Out_ PGROUP_AFFINITY ProcessorMask)
HRESULT None None.Aborted(BOID * pboidReason,BOOL fRetaining None,XACTUOW * pNewUOW,HRESULT hr None)
HCONV WINAPI user32.DdeReconnect(_In_ HCONV hConv)
static void None.Main(string[] args None)
HRESULT None None.GetAnyNetworkAccess(BOOL * pbAnyNetworkAccess)
typedef None None.UINT(VCAPITYPE *VirtualChannelWrite None)
HRESULT None None.MarshalReturnToken(ULONGcbReturnToken None None,byte *rgbReturnToken None,ULONG *pcbUsed None, None None)
HRESULT None ole32.CoUnmarshalHresult(_In_ LPSTREAM pstm,_Out_ HRESULT *phresult)
VOID WINAPI kernel32.FlushProcessWriteBuffers(void None None)
HRESULT None None.GetNetworkOutboundAccess(BOOL * pbOutbound)
VOID None activeds.ADsSetLastError(_In_ DWORD dwErr,_In_ LPWSTR pszError,_In_ LPWSTR pszProvider)
VOID WINAPI kernel32.CloseThreadpoolWait(_Inout_ PTP_WAIT pwa)
HGLOBAL None ole32.OleGetIconOfFile(_In_ LPOLESTR lpszPath,_In_ BOOL fUseFileAsLabel)
BOOL WINAPI user32.DdeFreeDataHandle(_In_ HDDEDATA hData)
DWORD APIENTRY None.NPLogonNotify(_In_ PLUID lpLogon,_In_ LPCWSTR lpAuthentInfoType,_In_ LPVOID lpAuthentInfo,_In_ LPCWSTR lpPreviousAuthentInfoType,_In_ LPVOID lpPreviousAuthentInfo,_In_ LPWSTR lpStationName,_In_ LPVOID StationHandle,_Out_ LPWSTR *lpLogonScript)
BOOL None ws2_32.WSACloseEvent(_In_ WSAEVENT hEvent)
DWORD WINAPI kernel32.GetCurrentThreadId(void None None)
DWORD WINAPI kernel32.GetPrivateProfileSection(_In_ LPCTSTR lpAppName,_Out_ LPTSTR lpReturnedString,_In_ DWORD nSize,_In_ LPCTSTR lpFileName)
DWORD WINAPI kernel32.GetPrivateProfileSectionW(_In_ LPCTSTR lpAppName,_Out_ LPTSTR lpReturnedString,_In_ DWORD nSize,_In_ LPCTSTR lpFileName)
DWORD WINAPI kernel32.GetPrivateProfileSectionA(_In_ LPCTSTR lpAppName,_Out_ LPTSTR lpReturnedString,_In_ DWORD nSize,_In_ LPCTSTR lpFileName)
VOID None shell32.DragFinish(HDROP hDrop None)
VOID WINAPI kernel32.WaitForThreadpoolWaitCallbacks(_Inout_ PTP_WAIT pwa,_In_ BOOL fCancelPendingCallbacks)
int None None.ToInt32(IFormatProvider provider None)
HRESULT None None.GetOptions(XACTOPT * pOptions)
public bool None.EnlistPromotableSinglePhase(IPromotableSinglePhaseNotification promotableSinglePhaseNotification None)
BOOL WINAPI user32.IsImmersiveProcess(_In_ HANDLE hProcess)
BOOL WINAPI vertdll.TerminateEnclave(_In_ LPVOID lpAddress,_In_ BOOL fWait)
typedef None None.HRESULT(CALLBACK *LPFNVIEWCALLBACK None)
HRESULT None None.Reenlist2(XID * pXid,DWORDdwTimeout None None,XACTSTAT * pXactStat)
HRESULT None None.TMDown(void None None)
HRESULT None None.GetNetworkTIPAccess(BOOL * pbNetworkTIPAccess)
HRESULT None None.GetXAAccess(BOOL * pbXAAccess)
public int None.ShiftAndWrap(int value None,int positions None)
ULONG None None.IsReparseTagMicrosoft(ULONG _tag None)
BOOLEAN WINAPI kernel32.Wow64EnableWow64FsRedirection(_In_ BOOLEAN Wow64FsEnableRedirection)
BOOL WINAPI user32.DdeFreeStringHandle(_In_ DWORD idInst,_In_ HSZ hsz)
LONG WINAPI advapi32.RegCopyTree(_In_ HKEY hKeySrc,_In_opt_ LPCTSTR lpSubKey,_In_ HKEY hKeyDest)
LONG WINAPI advapi32.RegCopyTreeW(_In_ HKEY hKeySrc,_In_opt_ LPCTSTR lpSubKey,_In_ HKEY hKeyDest)
LONG WINAPI advapi32.RegCopyTreeA(_In_ HKEY hKeySrc,_In_opt_ LPCTSTR lpSubKey,_In_ HKEY hKeyDest)
VOID None kernel32.QueryInterruptTimePrecise(_Out_ PULONGLONG lpInterruptTimePrecise)
HRESULT None activeds.SecurityDescriptorToBinarySD(_In_ VARIANT vVarSecDes,_Out_ PSECURITY_DESCRIPTOR *ppSecurityDescriptor,_Out_ PDWORD pdwSDLength,_In_ LPCWSTR pszServerName,_In_ LPCWSTR userName,_In_ LPCWSTR passWord,_In_ DWORD dwFlags)
BOOL None kernel32.BackupWrite(_In_ HANDLE hFile,_In_ LPBYTE lpBuffer,_In_ DWORD nNumberOfBytesToWrite,_Out_ LPDWORD lpNumberOfBytesWritten,_In_ BOOL bAbort,_In_ BOOL bProcessSecurity,_Out_ LPVOID *lpContext)
int None comctl32.AddMRUStringW(_In_ HANDLE hMRU,_In_ LPCTSTR szString)
int None comctl32.AddMRUStringW(_In_ HANDLE hMRU,_In_ LPCTSTR szString)
VOID WINAPI kernel32.WaitForThreadpoolWaitCallbacks(_Inout_ PTP_WAIT pwa,_In_ BOOL fCancelPendingCallbacks)
LPVOID WINAPI kernel32.VirtualAlloc(_In_opt_ LPVOID lpAddress,_In_ SIZE_T dwSize,_In_ DWORD flAllocationType,_In_ DWORD flProtect)
VOID WINAPI kernel32.CloseThreadpoolTimer(_Inout_ PTP_TIMER pti)
LONG WINAPI advapi32.RegOpenUserClassesRoot(_In_ HANDLE hToken,_Reserved_ DWORD dwOptions,_In_ REGSAM samDesired,_Out_ PHKEY phkResult)
public object None.Invoke(Delegate method None,params object[] args)
SerializableAttribute None None.ComVisibleAttribute(true None None)
char None None.ToChar(IFormatProvider provider None)
HRESULT None ole32.CoQueryAuthenticationServices(_Out_ DWORD *pcAuthSvc,_Out_ SOLE_AUTHENTICATION_SERVICE **asAuthSvc)
BOOL WINAPI kernel32.HeapDestroy(_In_ HANDLE hHeap)
DWORD WINAPI None.ExportCallback(_In_ PBYTE pbData,_In_opt_ PVOID pvCallbackContext,_In_ ULONG ulLength)
static void None.Main(string[] args None)
byte None None.ToByte(IFormatProvider provider None)
LPBYTE WINAPI user32.DdeAccessData(_In_ HDDEDATA hData,_Out_opt_ LPDWORD pcbDataSize)
void None None.Rollback(Enlistment enlistment None)
VOID WINAPI kernel32.WaitForThreadpoolWorkCallbacks(_Inout_ PTP_WORK pwk,_In_ BOOL fCancelPendingCallbacks)
BOOL WINAPI user32.DdeEnableCallback(_In_ DWORD idInst,_In_ HCONV hConv,_In_ UINT wCmd)
WSAEVENT None ws2_32.WSACreateEvent(void None None)
NTSTATUS None None.PsSetLoadImageNotifyRoutine(_In_ PLOAD_IMAGE_NOTIFY_ROUTINE NotifyRoutine)
BOOL WINAPI kernel32.GetSystemTimes(_Out_opt_ LPFILETIME lpIdleTime,_Out_opt_ LPFILETIME lpKernelTime,_Out_opt_ LPFILETIME lpUserTime)
VOID WINAPI kernel32.WakeByAddressAll(_In_ PVOID Address)
public int None.CompareTo(object value None)
void None None.InDoubt(Enlistment enlistment None)
BOOL WINAPI kernel32.SetSystemFileCacheSize(_In_ SIZE_T MinimumFileCacheSize,_In_ SIZE_T MaximumFileCacheSize,_In_ DWORD Flags)
BOOL WINAPI authz.AuthzAddSidsToContext(_In_ AUTHZ_CLIENT_CONTEXT_HANDLE OrigClientContext,_In_ PSID_AND_ATTRIBUTES Sids,_In_ DWORD SidCount,_In_ PSID_AND_ATTRIBUTES RestrictedSids,_In_ DWORD RestrictedSidCount,_Out_ PAUTHZ_CLIENT_CONTEXT_HANDLE pNewClientContext)
ULONG None ole32.CoAddRefServerProcess(void None None)
VOID WINAPI kernel32.CloseThreadpoolCleanupGroupMembers(_Inout_ PTP_CLEANUP_GROUP ptpcg,_In_ BOOL fCancelPendingCallbacks,_Inout_opt_ PVOID pvCleanupContext)
public int None.ShiftAndWrap(int value None,int positions None)
float None None.ToSingle(IFormatProvider provider None)
HRESULT None ole32.CoCreateFreeThreadedMarshaler(_In_ LPUNKNOWN punkOuter,_Out_ LPUNKNOWN *ppunkMarshal)
LPVOID WINAPI kernel32.VirtualAllocExNuma(_In_ HANDLE hProcess,_In_opt_ LPVOID lpAddress,_In_ SIZE_T dwSize,_In_ DWORD flAllocationType,_In_ DWORD flProtect,_In_ DWORD nndPreferred)
BOOL WINAPI kernel32.HeapValidate(_In_ HANDLE hHeap,_In_ DWORD dwFlags,_In_opt_ LPCVOID lpMem)
BOOL WINAPI kernel32.SetEvent(_In_ HANDLE hEvent)
BOOL WINAPI advapi32.AccessCheckByTypeResultListAndAuditAlarm(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ LPCTSTR ObjectTypeName,_In_opt_ LPCTSTR ObjectName,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_opt_ PSID PrincipalSelfSid,_In_ DWORD DesiredAccess,_In_ AUDIT_EVENT_TYPE AuditType,_In_ DWORD Flags,_Inout_opt_ POBJECT_TYPE_LIST ObjectTypeList,_In_ DWORD ObjectTypeListLength,_In_ PGENERIC_MAPPING GenericMapping,_In_ BOOL ObjectCreation,_Out_ LPDWORD GrantedAccess,_Out_ LPDWORD AccessStatusList,_Out_ LPBOOL pfGenerateOnClose)
BOOL WINAPI advapi32.AccessCheckByTypeResultListAndAuditAlarmW(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ LPCTSTR ObjectTypeName,_In_opt_ LPCTSTR ObjectName,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_opt_ PSID PrincipalSelfSid,_In_ DWORD DesiredAccess,_In_ AUDIT_EVENT_TYPE AuditType,_In_ DWORD Flags,_Inout_opt_ POBJECT_TYPE_LIST ObjectTypeList,_In_ DWORD ObjectTypeListLength,_In_ PGENERIC_MAPPING GenericMapping,_In_ BOOL ObjectCreation,_Out_ LPDWORD GrantedAccess,_Out_ LPDWORD AccessStatusList,_Out_ LPBOOL pfGenerateOnClose)
BOOL WINAPI advapi32.AccessCheckByTypeResultListAndAuditAlarmA(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ LPCTSTR ObjectTypeName,_In_opt_ LPCTSTR ObjectName,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_opt_ PSID PrincipalSelfSid,_In_ DWORD DesiredAccess,_In_ AUDIT_EVENT_TYPE AuditType,_In_ DWORD Flags,_Inout_opt_ POBJECT_TYPE_LIST ObjectTypeList,_In_ DWORD ObjectTypeListLength,_In_ PGENERIC_MAPPING GenericMapping,_In_ BOOL ObjectCreation,_Out_ LPDWORD GrantedAccess,_Out_ LPDWORD AccessStatusList,_Out_ LPBOOL pfGenerateOnClose)
HRESULT None None.PathCchSkipRoot(_In_ PCWSTR pszPath,_Out_ PCWSTR *ppszRootEnd)
public bool None.Equals(byte obj None)
public bool None.Equals(bool obj None)
BOOLEAN WINAPI kernel32.Wow64EnableWow64FsRedirection(_In_ BOOLEAN Wow64FsEnableRedirection)
WINAPI None kernel32.UnmapViewOfFile2(_In_ HANDLE ProcessHandle,_In_ PVOID BaseAddress,_In_ ULONG UnmapFlags)
HRESULT None None.Import(ULONG cbTransactionCookie None,byte * rgbTransactionCookie,IID * piid,void ** ppvTransaction)
HRESULT WINAPI wofutil.WofIsExternalFile(_In_ LPCWSTR FilePath,_Out_opt_ PBOOL IsExternalFile,_Out_opt_ PULONG Provider,_Out_opt_ PVOID ExternalFileInfo,_Inout_opt_ PULONG BufferLength)
HRESULT None None.GetPrepareInfo(byte * pPrepInfo)
HDDEDATA WINAPI user32.DdeClientTransaction(_In_opt_ LPBYTE pData,_In_ DWORD cbData,_In_ HCONV hConv,_In_opt_ HSZ hszItem,_In_ UINT wFmt,_In_ UINT wType,_In_ DWORD dwTimeout,_Out_opt_ LPDWORD pdwResult)
PVOID WINAPI kernel32.RegisterBadMemoryNotification(_In_ PBAD_MEMORY_CALLBACK_ROUTINE Callback)
DWORD WINAPI kernel32.QueueUserAPC(_In_ PAPCFUNC pfnAPC,_In_ HANDLE hThread,_In_ ULONG_PTR dwData)
HDDEDATA WINAPI user32.DdeAddData(_In_ HDDEDATA hData,_In_ LPBYTE pSrc,_In_ DWORD cb,_In_ DWORD cbOff)
int None ws2_32.WSACleanup(void None None)
HRESULT None shell32.SHCreateDefaultPropertiesOp(_In_ IShellItem *psi,_Out_ IFileOperation **ppFileOp)
WORD None None.MAKEWORD(BYTE bLow None,BYTE bHigh None)
BOOL WINAPI kernel32.GetFileAttributesEx(_In_ LPCTSTR lpFileName,_In_ GET_FILEEX_INFO_LEVELS fInfoLevelId,_Out_ LPVOID lpFileInformation)
BOOL WINAPI kernel32.GetFileAttributesExW(_In_ LPCTSTR lpFileName,_In_ GET_FILEEX_INFO_LEVELS fInfoLevelId,_Out_ LPVOID lpFileInformation)
BOOL WINAPI kernel32.GetFileAttributesExA(_In_ LPCTSTR lpFileName,_In_ GET_FILEEX_INFO_LEVELS fInfoLevelId,_Out_ LPVOID lpFileInformation)
BOOL WINAPI kernel32.ReleaseMutex(_In_ HANDLE hMutex)
UINT WINAPI user32.DdeGetLastError(_In_ DWORD idInst)
int WINAPI kernel32.GetThreadPriority(_In_ HANDLE hThread)
void WINAPI kernel32.GetNativeSystemInfo(_Out_ LPSYSTEM_INFO lpSystemInfo)
BOOL WINAPI vertdll.CallEnclave(_In_ LPENCLAVE_ROUTINE lpRoutine,_In_ LPVOID lpParameter,_In_ BOOL fWaitForThread,_Out_ LPVOID *lpReturnValue)
HRESULT None None.PathCchRemoveBackslash(_Inout_ PWSTR pszPath,_In_ size_t cchPath)
UINT WINAPI kernel32.GlobalFlags(_In_ HGLOBAL hMem)
NET_API_STATUS None netapi32.NetUserGetInfo(_In_ LPCWSTR servername,_In_ LPCWSTR username,_In_ DWORD level,_Out_ LPBYTE *bufptr)
BOOL WINAPI kernel32.ReadFileEx(_In_ HANDLE hFile,_Out_opt_ LPVOID lpBuffer,_In_ DWORD nNumberOfBytesToRead,_Inout_ LPOVERLAPPED lpOverlapped,_In_ LPOVERLAPPED_COMPLETION_ROUTINE lpCompletionRoutine)
HRESULT None ole32.CoGetStandardMarshal(_In_ REFIID riid,_In_ LPUNKNOWN pUnk,_In_ DWORD dwDestContext,_In_opt_ LPVOID pvDestContext,_In_ DWORD mshlflags,_Out_ LPMARSHAL *ppMarshal)
public string None.Insert(int startIndex None,string value None)
HRESULT None None.Create(ITransaction * pITransaction,ITransactionVoterNotifyAsync2 * pVoterNotify,ITransactionVoterBallotAsync2 ** ppVoterBallot)
BOOL WINAPI kernel32.QueryUmsThreadInformation(_In_ PUMS_CONTEXT UmsThread,_In_ UMS_THREAD_INFO_CLASS UmsThreadInfoClass,_Out_ PVOID UmsThreadInformation,_In_ ULONG UmsThreadInformationLength,_Out_opt_ PULONG ReturnLength)
static void None.WriteObjectInfo(object testObject None)
UINT WINAPI kernel32.LocalFlags(_In_ HLOCAL hMem)
static void None.Main(string[] args None)
BOOL WINAPI user32.DdePostAdvise(_In_ DWORD idInst,_In_ HSZ hszTopic,_In_ HSZ hszItem)
HRESULT None None.PathCchAppend(_Inout_ PWSTR pszPath,_In_ size_t cchPath,_In_opt_ PCWSTR pszMore)
LONG WINAPI advapi32.RegQueryValueEx(_In_ HKEY hKey,_In_opt_ LPCTSTR lpValueName,_Reserved_ LPDWORD lpReserved,_Out_opt_ LPDWORD lpType,_Out_opt_ LPBYTE lpData,_Inout_opt_ LPDWORD lpcbData)
LONG WINAPI advapi32.RegQueryValueExW(_In_ HKEY hKey,_In_opt_ LPCTSTR lpValueName,_Reserved_ LPDWORD lpReserved,_Out_opt_ LPDWORD lpType,_Out_opt_ LPBYTE lpData,_Inout_opt_ LPDWORD lpcbData)
LONG WINAPI advapi32.RegQueryValueExA(_In_ HKEY hKey,_In_opt_ LPCTSTR lpValueName,_Reserved_ LPDWORD lpReserved,_Out_opt_ LPDWORD lpType,_Out_opt_ LPBYTE lpData,_Inout_opt_ LPDWORD lpcbData)
HDDEDATA WINAPI user32.DdeClientTransaction(_In_opt_ LPBYTE pData,_In_ DWORD cbData,_In_ HCONV hConv,_In_opt_ HSZ hszItem,_In_ UINT wFmt,_In_ UINT wType,_In_ DWORD dwTimeout,_Out_opt_ LPDWORD pdwResult)
BOOL WINAPI user32.DdeAbandonTransaction(_In_ DWORD idInst,_In_ HCONV hConv,_In_ DWORD idTransaction)
LPBYTE WINAPI user32.DdeAccessData(_In_ HDDEDATA hData,_Out_opt_ LPDWORD pcbDataSize)
static void None.Main(string[] args None)
ushort None None.ToUInt16(IFormatProvider provider None)
HRESULT None None.GetPrepareInfoSize(ULONG * pcbPrepInfo)
static void None.Main(string[] args None)
BOOL WINAPI advapi32.GetSecurityDescriptorGroup(_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_Out_ PSID *pGroup,_Out_ LPBOOL lpbGroupDefaulted)
void None query.CIShutdown(void None None)
BOOL WINAPI kernel32.VirtualFreeEx(_In_ HANDLE hProcess,_In_ LPVOID lpAddress,_In_ SIZE_T dwSize,_In_ DWORD dwFreeType)
HRESULT None None.GetWhereaboutsSize(ULONG * pcbSize)
int None ws2_32.WSARecv(_In_ SOCKET s,_Inout_ LPWSABUF lpBuffers,_In_ DWORD dwBufferCount,_Out_ LPDWORD lpNumberOfBytesRecvd,_Inout_ LPDWORD lpFlags,_In_ LPWSAOVERLAPPED lpOverlapped,_In_ LPWSAOVERLAPPED_COMPLETION_ROUTINE lpCompletionRoutine)
BOOL WINAPI kernel32.HeapQueryInformation(_In_opt_ HANDLE HeapHandle,_In_ HEAP_INFORMATION_CLASS HeapInformationClass,_Out_ PVOID HeapInformation,_In_ SIZE_T HeapInformationLength,_Out_opt_ PSIZE_T ReturnLength)
BOOL WINAPI kernel32.SetThreadPriority(_In_ HANDLE hThread,_In_ int nPriority)
BOOL WINAPI authz.AuthzUnregisterCapChangeNotification(_In_ AUTHZ_CAP_CHANGE_SUBSCRIPTION_HANDLE hCapChangeSubscription)
BOOL WINAPI user32.DdeImpersonateClient(_In_ HCONV hConv)
static void None.Main(string[] args None)
BOOL WINAPI kernel32.GetQueuedCompletionStatus(_In_ HANDLE CompletionPort,_Out_ LPDWORD lpNumberOfBytes,_Out_ PULONG_PTR lpCompletionKey,_Out_ LPOVERLAPPED *lpOverlapped,_In_ DWORD dwMilliseconds)
static void None.Main(string[] args None)
HRESULT None None.PathCchFindExtension(_In_ PCWSTR pszPath,_In_ size_t cchPath,_Out_ PCWSTR *ppszExt)
ULONG None None.KeQueryTimeIncrement(void None None)
public boolean None.Equals(Object obj None)
void None None.Rollback(Enlistment enlistment None)
public bool None.EnlistPromotableSinglePhase(IPromotableSinglePhaseNotification promotableSinglePhaseNotification None)
int None None.ToInt32(IFormatProvider provider None)
float None None.ToSingle(IFormatProvider provider None)
ulong None None.ToUInt64(IFormatProvider provider None)
char None None.ToChar(IFormatProvider provider None)
public None None.DivideByZeroException(string message None,Exception innerException None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
string None None.ToString(string format None,IFormatProvider formatProvider None)
BOOL WINAPI advapi32.DeleteAce(_Inout_ PACL pAcl,_In_ DWORD dwAceIndex)
HRESULT None None.PathCchAddExtension(_Inout_ PWSTR pszPath,_In_ size_t cchPath,_In_ PCWSTR pszExt)
BOOL WINAPI kernel32.PulseEvent(_In_ HANDLE hEvent)
public object None.Invoke(Delegate method None,params object[] args)
public string None.ToString(IFormatProvider provider None)
VOID None kernel32.QueryInterruptTimePrecise(_Out_ PULONGLONG lpInterruptTimePrecise)
public None None.ArrayList(int capacity None)
int None None.CompareTo(T other None)
public None None.OperatingSystem(PlatformID platform None,Version version None)
public object None.Invoke(Delegate method None,params object[] args)
HRESULT None None.GetPrepareInfoSize(ULONG * pcbPrepInfo)
HDDEDATA WINAPI user32.DdeClientTransaction(_In_opt_ LPBYTE pData,_In_ DWORD cbData,_In_ HCONV hConv,_In_opt_ HSZ hszItem,_In_ UINT wFmt,_In_ UINT wType,_In_ DWORD dwTimeout,_Out_opt_ LPDWORD pdwResult)
SerializableAttribute None None.ComVisibleAttribute(true None None)
UINT None shell32.ExtractIconEx(_In_ LPCTSTR lpszFile,_In_ int nIconIndex,_Out_ HICON *phiconLarge,_Out_ HICON *phiconSmall,UINT nIcons None)
UINT None shell32.ExtractIconExW(_In_ LPCTSTR lpszFile,_In_ int nIconIndex,_Out_ HICON *phiconLarge,_Out_ HICON *phiconSmall,UINT nIcons None)
UINT None shell32.ExtractIconExA(_In_ LPCTSTR lpszFile,_In_ int nIconIndex,_Out_ HICON *phiconLarge,_Out_ HICON *phiconSmall,UINT nIcons None)
int None None.ToInt32(IFormatProvider provider None)
BOOL WINAPI kernel32.InitializeProcessForWsWatch(_In_ HANDLE hProcess)
BOOL WINAPI user32.DdeEnableCallback(_In_ DWORD idInst,_In_ HCONV hConv,_In_ UINT wCmd)
void None None.Rollback(Enlistment enlistment None)
void WINAPI kernel32.DeleteCriticalSection(_Inout_ LPCRITICAL_SECTION lpCriticalSection)
HDDEDATA WINAPI user32.DdeAddData(_In_ HDDEDATA hData,_In_ LPBYTE pSrc,_In_ DWORD cb,_In_ DWORD cbOff)
public bool None.Equals(bool obj None)
public None None.Guid(int a None,short b None,short c None,byte d None,byte e None,byte f None,byte g None,byte h None,byte i None,byte j None,byte k None)
ULONG None None.IsReparseTagMicrosoft(ULONG _tag None)
public string None.ToString(IFormatProvider provider None)
static void None.EndReadCallback(IAsyncResult asyncResult None)
BOOL None None.PathIsUNCEx(_In_ PCWSTR pszPath,_Out_opt_ PCWSTR *ppszServer)
int None ws2_32.shutdown(_In_ SOCKET s,_In_ int how)
static void None.Main(string[] args None)
public int None.CompareTo(object value None)
BOOL WINAPI advapi32.GetKernelObjectSecurity(_In_ HANDLE Handle,_In_ SECURITY_INFORMATION RequestedInformation,_Out_opt_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_ DWORD nLength,_Out_ LPDWORD lpnLengthNeeded)
char None None.ToChar(IFormatProvider provider None)
public Enlistment None.EnlistVolatile(ISinglePhaseNotification singlePhaseNotification None,EnlistmentOptions enlistmentOptions None)
char None None.ToChar(IFormatProvider provider None)
BOOL None kernel32.QueryUnbiasedInterruptTime(_Out_ PULONGLONG lpUnbiasedInterruptTime)
byte None None.ToByte(IFormatProvider provider None)
ushort None None.ToUInt16(IFormatProvider provider None)
BOOL WINAPI user32.RegisterShellHookWindow(_In_ HWND hWnd)
BOOL None activeds.FreeADsMem(_In_ LPVOID pMem)
char None None.ToChar(IFormatProvider provider None)
public None None.ArrayList(ICollection c None)
VOID WINAPI advapi32.QuerySecurityAccessMask(_In_ SECURITY_INFORMATION SecurityInformation,_Out_ LPDWORD DesiredAccess)
static void None.Main(string[] args None)
DWORD None ntdsapi.DsRemoveDsDomain(_In_ HANDLE hDs,_In_ LPTSTR DomainDN)
DWORD None ntdsapi.DsRemoveDsDomainW(_In_ HANDLE hDs,_In_ LPTSTR DomainDN)
DWORD None ntdsapi.DsRemoveDsDomainA(_In_ HANDLE hDs,_In_ LPTSTR DomainDN)
DWORD WINAPI kernel32.GetPrivateProfileSectionNames(_Out_ LPTSTR lpszReturnBuffer,_In_ DWORD nSize,_In_ LPCTSTR lpFileName)
DWORD WINAPI kernel32.GetPrivateProfileSectionNamesW(_Out_ LPTSTR lpszReturnBuffer,_In_ DWORD nSize,_In_ LPCTSTR lpFileName)
DWORD WINAPI kernel32.GetPrivateProfileSectionNamesA(_Out_ LPTSTR lpszReturnBuffer,_In_ DWORD nSize,_In_ LPCTSTR lpFileName)
int None ws2_32.closesocket(_In_ SOCKET s)
ushort None None.ToUInt16(IFormatProvider provider None)
DWORD None ntdsapi.DsBindWithSpn(_In_opt_ LPCTSTR DomainControllerName,_In_opt_ LPCTSTR DnsDomainName,_In_opt_ RPC_AUTH_IDENTITY_HANDLE AuthIdentity,_In_opt_ LPCTSTR ServicePrincipalName,_Out_ HANDLE *phDS)
DWORD None ntdsapi.DsBindWithSpnW(_In_opt_ LPCTSTR DomainControllerName,_In_opt_ LPCTSTR DnsDomainName,_In_opt_ RPC_AUTH_IDENTITY_HANDLE AuthIdentity,_In_opt_ LPCTSTR ServicePrincipalName,_Out_ HANDLE *phDS)
DWORD None ntdsapi.DsBindWithSpnA(_In_opt_ LPCTSTR DomainControllerName,_In_opt_ LPCTSTR DnsDomainName,_In_opt_ RPC_AUTH_IDENTITY_HANDLE AuthIdentity,_In_opt_ LPCTSTR ServicePrincipalName,_Out_ HANDLE *phDS)
public None None.BigInteger(long value None)
static char None.GetFirstCharacter(String s None)
public string None.ToString(string format None)
LPVOID None activeds.AllocADsMem(_In_ DWORD cb)
object None None.ToType(Type conversionType None,IFormatProvider provider None)
DWORD None ntdsapi.DsCrackSpn(_In_ LPCTSTR pszSPN,_Inout_opt_ DWORD *pcServiceClass,_Out_opt_ LPTSTR ServiceClass,_Inout_opt_ DWORD *pcServiceName,_Out_opt_ LPTSTR ServiceName,_Inout_opt_ DWORD *pcInstanceName,_Out_opt_ LPTSTR InstanceName,_Out_opt_ USHORT *pInstancePort)
DWORD None ntdsapi.DsCrackSpnW(_In_ LPCTSTR pszSPN,_Inout_opt_ DWORD *pcServiceClass,_Out_opt_ LPTSTR ServiceClass,_Inout_opt_ DWORD *pcServiceName,_Out_opt_ LPTSTR ServiceName,_Inout_opt_ DWORD *pcInstanceName,_Out_opt_ LPTSTR InstanceName,_Out_opt_ USHORT *pInstancePort)
DWORD None ntdsapi.DsCrackSpnA(_In_ LPCTSTR pszSPN,_Inout_opt_ DWORD *pcServiceClass,_Out_opt_ LPTSTR ServiceClass,_Inout_opt_ DWORD *pcServiceName,_Out_opt_ LPTSTR ServiceName,_Inout_opt_ DWORD *pcInstanceName,_Out_opt_ LPTSTR InstanceName,_Out_opt_ USHORT *pInstancePort)
PSLIST_ENTRY WINAPI ntdll.RtlInterlockedPushEntrySList(_In_ PSLIST_HEADER ListHead,_In_ PSLIST_ENTRY ListEntry)
public None None.WeakReference(object target None)
BOOL WSAAPI ws2_32.WSAGetOverlappedResult(_In_ SOCKET s,_In_ LPWSAOVERLAPPED lpOverlapped,_Out_ LPDWORD lpcbTransfer,_In_ BOOL fWait,_Out_ LPDWORD lpdwFlags)
BOOL WINAPI user32.GetClientRect(_In_ HWND hWnd,_Out_ LPRECT lpRect)
protected Object None.OnGet(Object key None,Object currentValue None)
byte None None.ToByte(IFormatProvider provider None)
VOID None kernel32.QueryUnbiasedInterruptTimePrecise(_Out_ PULONGLONG lpUnbiasedInterruptTimePrecise)
public None None.Guid(byte[] b None)
char None None.ToChar(IFormatProvider provider None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
HRESULT None None.GetTransactionInfo2(XACTTRANSINFO * pinfo)
public int None.CompareTo(object obj None)
BOOL WINAPI advapi32.GetSecurityDescriptorGroup(_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_Out_ PSID *pGroup,_Out_ LPBOOL lpbGroupDefaulted)
public bool None.Equals(string value None,StringComparison comparisonType None)
public string None.ToString(IFormatProvider provider None)
public None None.ArrayList(int capacity None)
BOOL WINAPI kernel32.CreateDirectory(_In_ LPCTSTR lpPathName,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes)
BOOL WINAPI kernel32.CreateDirectoryW(_In_ LPCTSTR lpPathName,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes)
BOOL WINAPI kernel32.CreateDirectoryA(_In_ LPCTSTR lpPathName,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes)
public int None.GetUpperBound(int dimension None)
static void None.Main(string[] args None)
public None None.Guid(int a None,short b None,short c None,byte d None,byte e None,byte f None,byte g None,byte h None,byte i None,byte j None,byte k None)
public PropertyBuilder None.DefineProperty(string name None,PropertyAttributes attributes None,CallingConventions callingConvention None,Type returnType None,Type[] returnTypeRequiredCustomModifiers None,Type[] returnTypeOptionalCustomModifiers None,Type[] parameterTypes None,Type[][] parameterTypeRequiredCustomModifiers None,Type[][] parameterTypeOptionalCustomModifiers None)
BOOL WINAPI user32.DdeEnableCallback(_In_ DWORD idInst,_In_ HCONV hConv,_In_ UINT wCmd)
BOOLEAN WINAPI kernel32.Wow64EnableWow64FsRedirection(_In_ BOOLEAN Wow64FsEnableRedirection)
public None None.Tuple(T1 item1 None,T2 item2 None,T3 item3 None,T4 item4 None,T5 item5 None,T6 item6 None,T7 item7 None,TRest rest None)
BOOL WINAPI kernel32.VirtualFree(_In_ LPVOID lpAddress,_In_ SIZE_T dwSize,_In_ DWORD dwFreeType)
BOOL WINAPI user32.GetLayeredWindowAttributes(_In_ HWND hwnd,_Out_opt_ COLORREF *pcrKey,_Out_opt_ BYTE *pbAlpha,_Out_opt_ DWORD *pdwFlags)
DWORD None None.MAKELONG(WORD wLow None,WORD wHigh None)
public None None.UnauthorizedAccessException(string message None,Exception inner None)
HRESULT None shell32.GetDetailsOf([in] PCUITEMID_CHILD pidl,[in] UINT iColumn,[out] SHELLDETAILS *psd)
HANDLE WINAPI kernel32.OpenSemaphore(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpName)
HANDLE WINAPI kernel32.OpenSemaphoreW(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpName)
HANDLE WINAPI kernel32.OpenSemaphoreA(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpName)
static void None.Main(string[] args None)
ushort None None.ToUInt16(IFormatProvider provider None)
BOOL WINAPI advapi32.GetKernelObjectSecurity(_In_ HANDLE Handle,_In_ SECURITY_INFORMATION RequestedInformation,_Out_opt_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_ DWORD nLength,_Out_ LPDWORD lpnLengthNeeded)
public bool None.EnlistPromotableSinglePhase(IPromotableSinglePhaseNotification promotableSinglePhaseNotification None)
short None None.ToInt16(IFormatProvider provider None)
public string None.Insert(int startIndex None,string value None)
public None None.BigInteger(float value None)
HRESULT None None.PathCchAddBackslash(_Inout_ PWSTR pszPath,_In_ size_t cchPath)
ushort None None.ToUInt16(IFormatProvider provider None)
static void None.Main(string[] args None)
BOOL WINAPI user32.DeregisterShellHookWindow(_In_ HWND hWnd)
public int None.CompareTo(decimal value None)
uint32 None cimwin32.SetIGMPLevel([in] uint8 IGMPLevel)
LPBYTE WINAPI user32.DdeAccessData(_In_ HDDEDATA hData,_Out_opt_ LPDWORD pcbDataSize)
ushort None None.ToUInt16(IFormatProvider provider None)
bool None None.ToBoolean(IFormatProvider provider None)
public None None.DivideByZeroException(string message None,Exception innerException None)
public PropertyBuilder None.DefineProperty(string name None,PropertyAttributes attributes None,CallingConventions callingConvention None,Type returnType None,Type[] parameterTypes None)
public MethodBuilder None.DefinePInvokeMethod(string name None,string dllName None,MethodAttributes attributes None,CallingConventions callingConvention None,Type returnType None,Type[] parameterTypes None,CallingConvention nativeCallConv None,CharSet nativeCharSet None)
ULONG None ole32.CoAddRefServerProcess(void None None)
static bool None.IsFileURI(String path None)
VOID WINAPI ntdsapi.DsQuerySitesFree(_In_ PDS_SITE_COST_INFO rgSiteInfo)
public PropertyInfo None.GetProperty(string name None,Type[] types None)
static void None.Main(string[] args None)
LRESULT WINAPI user32.DefWindowProc(_In_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
LRESULT WINAPI user32.DefWindowProcW(_In_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
LRESULT WINAPI user32.DefWindowProcA(_In_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
FlagsAttribute None None.ComVisibleAttribute(false None None)
sbyte None None.ToSByte(IFormatProvider provider None)
static void None.Main(string[] args None)
ushort None None.ToUInt16(IFormatProvider provider None)
public void None.Sort(int index None,int count None,IComparerT comparer None)
ushort None None.ToUInt16(IFormatProvider provider None)
void None None.SinglePhaseCommit(SinglePhaseEnlistment singlePhaseEnlistment None)
public void None.MinMaxFields(int numberToSet None)
double None None.ToDouble(IFormatProvider provider None)
ushort None None.ToUInt16(IFormatProvider provider None)
public None None.HMACSHA1(byte[] key None,bool useManagedSha1 None)
public MethodBuilder None.DefineMethod(string name None,MethodAttributes attributes None,CallingConventions callingConvention None)
BOOL WINAPI user32.EnumWindows(_In_ WNDENUMPROC lpEnumFunc,_In_ LPARAM lParam)
protected MarshalByRefObject None.MemberwiseClone(bool cloneIdentity None)
HANDLE WINAPI kernel32.GetProcessHeap(void None None)
public void None.Add(DiscoveryReference value None)
uint None None.ToUInt32(IFormatProvider provider None)
public PropertyBuilder None.DefineProperty(string name None,PropertyAttributes attributes None,Type returnType None,Type[] returnTypeRequiredCustomModifiers None,Type[] returnTypeOptionalCustomModifiers None,Type[] parameterTypes None,Type[][] parameterTypeRequiredCustomModifiers None,Type[][] parameterTypeOptionalCustomModifiers None)
HRESULT None activeds.BinarySDToSecurityDescriptor(_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_Out_ VARIANT *pVarsec,_In_ LPCWSTR pszServerName,_In_ LPCWSTR userName,_In_ LPCWSTR passWord,_In_ DWORD dwFlags)
LONG WINAPI advapi32.RegGetValue(_In_ HKEY hkey,_In_opt_ LPCTSTR lpSubKey,_In_opt_ LPCTSTR lpValue,_In_opt_ DWORD dwFlags,_Out_opt_ LPDWORD pdwType,_Out_opt_ PVOID pvData,_Inout_opt_ LPDWORD pcbData)
LONG WINAPI advapi32.RegGetValueW(_In_ HKEY hkey,_In_opt_ LPCTSTR lpSubKey,_In_opt_ LPCTSTR lpValue,_In_opt_ DWORD dwFlags,_Out_opt_ LPDWORD pdwType,_Out_opt_ PVOID pvData,_Inout_opt_ LPDWORD pcbData)
LONG WINAPI advapi32.RegGetValueA(_In_ HKEY hkey,_In_opt_ LPCTSTR lpSubKey,_In_opt_ LPCTSTR lpValue,_In_opt_ DWORD dwFlags,_Out_opt_ LPDWORD pdwType,_Out_opt_ PVOID pvData,_Inout_opt_ LPDWORD pcbData)
void None None.Rollback(Enlistment enlistment None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
public None None.Guid(int a None,short b None,short c None,byte[] d None)
object None None.GetFormat(Type formatType None)
public Type None.GetInterface(string name None)
SerializableAttribute FlagsAttribute None.ComVisibleAttribute(true None None)
public None None.HMACSHA1(byte[] key None)
uint32 None cimwin32.SetDatabasePath([in] string DatabasePath)
static void None.Main(string[] args None)
HCONVLIST WINAPI user32.DdeConnectList(_In_ DWORD idInst,_In_ HSZ hszService,_In_ HSZ hszTopic,_In_ HCONVLIST hConvList,_In_opt_ PCONVCONTEXT pCC)
DWORD WINAPI advapi32.SetSecurityInfo(_In_ HANDLE handle,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_In_opt_ PSID psidOwner,_In_opt_ PSID psidGroup,_In_opt_ PACL pDacl,_In_opt_ PACL pSacl)
DWORD None ntdsapi.DsListSites(_In_ HANDLE hDs,_Out_ PDS_NAME_RESULT *ppSites)
DWORD None ntdsapi.DsListSitesW(_In_ HANDLE hDs,_Out_ PDS_NAME_RESULT *ppSites)
DWORD None ntdsapi.DsListSitesA(_In_ HANDLE hDs,_Out_ PDS_NAME_RESULT *ppSites)
HWND WINAPI user32.GetParent(_In_ HWND hWnd)
public int None.BinarySearch(T item None)
LONG WINAPI winscard.SCardIsValidContext(_In_ SCARDCONTEXT hContext)
BOOL WINAPI advapi32.GetFileSecurity(_In_ LPCTSTR lpFileName,_In_ SECURITY_INFORMATION RequestedInformation,_Out_opt_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_ DWORD nLength,_Out_ LPDWORD lpnLengthNeeded)
BOOL WINAPI advapi32.GetFileSecurityW(_In_ LPCTSTR lpFileName,_In_ SECURITY_INFORMATION RequestedInformation,_Out_opt_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_ DWORD nLength,_Out_ LPDWORD lpnLengthNeeded)
BOOL WINAPI advapi32.GetFileSecurityA(_In_ LPCTSTR lpFileName,_In_ SECURITY_INFORMATION RequestedInformation,_Out_opt_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_ DWORD nLength,_Out_ LPDWORD lpnLengthNeeded)
BOOL None mswsock.RIOResizeCompletionQueue(_In_ RIO_CQ CQ,_In_ DWORD QueueSize)
public int None.TransformBlock(byte[] inputBuffer None,int inputOffset None,int inputCount None,byte[] outputBuffer None,int outputOffset None)
public string None.ToString(string format None,IFormatProvider provider None)
LPVOID WINAPI kernel32.HeapReAlloc(_In_ HANDLE hHeap,_In_ DWORD dwFlags,_In_ LPVOID lpMem,_In_ SIZE_T dwBytes)
BOOL WINAPI advapi32.AccessCheckByType(_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_opt_ PSID PrincipalSelfSid,_In_ HANDLE ClientToken,_In_ DWORD DesiredAccess,_Inout_opt_ POBJECT_TYPE_LIST ObjectTypeList,_In_ DWORD ObjectTypeListLength,_In_ PGENERIC_MAPPING GenericMapping,_Out_opt_ PPRIVILEGE_SET PrivilegeSet,_Inout_ LPDWORD PrivilegeSetLength,_Out_ LPDWORD GrantedAccess,_Out_ LPBOOL AccessStatus)
BOOL WINAPI kernel32.CreateTimerQueueTimer(_Out_ PHANDLE phNewTimer,_In_opt_ HANDLE TimerQueue,_In_ WAITORTIMERCALLBACK Callback,_In_opt_ PVOID Parameter,_In_ DWORD DueTime,_In_ DWORD Period,_In_ ULONG Flags)
VOID CALLBACK None.TimerAPCProc(_In_opt_ LPVOID lpArgToCompletionRoutine,_In_ DWORD dwTimerLowValue,_In_ DWORD dwTimerHighValue)
PTSTR None shlwapi.PathSkipRoot(_In_ PTSTR pszPath)
PTSTR None shlwapi.PathSkipRootW(_In_ PTSTR pszPath)
PTSTR None shlwapi.PathSkipRootA(_In_ PTSTR pszPath)
ushort None None.ToUInt16(IFormatProvider provider None)
BOOL None kernel32.BackupSeek(_In_ HANDLE hFile,_In_ DWORD dwLowBytesToSeek,_In_ DWORD dwHighBytesToSeek,_Out_ LPDWORD lpdwLowByteSeeked,_Out_ LPDWORD lpdwHighByteSeeked,_In_ LPVOID *lpContext)
SerializableAttribute None None.ComVisibleAttribute(true None None)
delegate int None.del(int i None)
HRESULT None shell32.GetCurFolder(LPITEMIDLIST *ppidl None)
ushort None None.ToUInt16(IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
ushort None None.ToUInt16(IFormatProvider provider None)
VOID WINAPI ntdsapi.DsFreePasswordCredentials(_In_ RPC_AUTH_IDENTITY_HANDLE AuthIdentity)
public string None.ToString(string format None,IFormatProvider provider None)
public bool None.Equals(byte obj None)
public string None.ToString(string format None,IFormatProvider provider None)
public None None.Guid(int a None,short b None,short c None,byte d None,byte e None,byte f None,byte g None,byte h None,byte i None,byte j None,byte k None)
public None None.DivideByZeroException(string message None,Exception innerException None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
public int None.LastIndexOfAny(char[] anyOf None)
DWORD None ntdsapi.DsClientMakeSpnForTargetServer(_In_ LPCTSTR ServiceClass,_In_ LPCTSTR ServiceName,_Inout_ DWORD *pcSpnLength,_Out_ LPTSTR pszSpn)
DWORD None ntdsapi.DsClientMakeSpnForTargetServerW(_In_ LPCTSTR ServiceClass,_In_ LPCTSTR ServiceName,_Inout_ DWORD *pcSpnLength,_Out_ LPTSTR pszSpn)
DWORD None ntdsapi.DsClientMakeSpnForTargetServerA(_In_ LPCTSTR ServiceClass,_In_ LPCTSTR ServiceName,_Inout_ DWORD *pcSpnLength,_Out_ LPTSTR pszSpn)
public None None.Tuple(T1 item1 None,T2 item2 None,T3 item3 None,T4 item4 None,T5 item5 None,T6 item6 None,T7 item7 None,TRest rest None)
public PropertyBuilder None.DefineProperty(string name None,PropertyAttributes attributes None,CallingConventions callingConvention None,Type returnType None,Type[] returnTypeRequiredCustomModifiers None,Type[] returnTypeOptionalCustomModifiers None,Type[] parameterTypes None,Type[][] parameterTypeRequiredCustomModifiers None,Type[][] parameterTypeOptionalCustomModifiers None)
protected None None.Delegate(object target None,string method None)
uint32 None cimwin32.SetDeadGWDetect([in] boolean DeadGWDetectEnabled)
char None None.ToChar(IFormatProvider provider None)
public int None.CompareTo(object obj None)
ushort None None.ToUInt16(IFormatProvider provider None)
SerializableAttribute None None.AttributeUsageAttribute(AttributeTargets.Field None None,Inherited=false None None)
PDWORD WINAPI advapi32.GetSidSubAuthority(_In_ PSID pSid,_In_ DWORD nSubAuthority)
uint32 None cimwin32.SetPMTUBHDetect([in] boolean PMTUBHDetectEnabled)
uint32 None cimwin32.TakeOwnerShipEx([out] string StopFileName,[in None None,optional] string StartFileName,[in None None,optional] boolean Recursive)
public None None.Decimal(int value None)
NET_API_STATUS None netapi32.NetUserAdd(_In_ LMSTR servername,_In_ DWORD level,_In_ LPBYTE buf,_Out_ LPDWORD parm_err)
public string None.ToString(string format None)
public None None.Guid(byte[] b None)
ushort None None.ToUInt16(IFormatProvider provider None)
public int None.CompareTo(decimal value None)
uint32 None cimwin32.SetDynamicDNSRegistration([in] boolean FullDNSRegistrationEnabled,[in None None,optional] boolean DomainDNSRegistrationEnabled)
BOOL WINAPI user32.DdeDisconnectList(_In_ HCONVLIST hConvList)
BOOL WINAPI kernel32.RemoveDirectory(_In_ LPCTSTR lpPathName)
BOOL WINAPI kernel32.RemoveDirectoryW(_In_ LPCTSTR lpPathName)
BOOL WINAPI kernel32.RemoveDirectoryA(_In_ LPCTSTR lpPathName)
SerializableAttribute None None.ComVisibleAttribute(true None None)
public None None.Decimal(int value None)
public string None.Remove(int startIndex None,int count None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
HRESULT None shell32.MapColumnToSCID([in] UINT iColumn,[out] SHCOLUMNID *pscid)
public object None.DynamicInvoke(params object[] args)
decimal None None.ToDecimal(IFormatProvider provider None)
static void None.Main(string[] args None)
public None None.BigInteger(long value None)
public None None.Guid(int a None,short b None,short c None,byte d None,byte e None,byte f None,byte g None,byte h None,byte i None,byte j None,byte k None)
FlagsAttribute None None.ComVisibleAttribute(false None None)
public int None.TransformBlock(byte[] inputBuffer None,int inputOffset None,int inputCount None,byte[] outputBuffer None,int outputOffset None)
public void None.Sort(int index None,int count None,IComparerT comparer None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
bool None None.Equals(T x None,T y None)
public int None.CompareTo(object obj None)
BOOL None shlwapi.PathRenameExtension(_Inout_ LPTSTR pszPath,_In_ LPCTSTR pszExt)
BOOL None shlwapi.PathRenameExtensionW(_Inout_ LPTSTR pszPath,_In_ LPCTSTR pszExt)
BOOL None shlwapi.PathRenameExtensionA(_Inout_ LPTSTR pszPath,_In_ LPCTSTR pszExt)
ushort None None.ToUInt16(IFormatProvider provider None)
void WINAPI ntdsapi.DsFreeNameResult(DS_NAME_RESULT *pResult None)
void WINAPI ntdsapi.DsFreeNameResultW(DS_NAME_RESULT *pResult None)
void WINAPI ntdsapi.DsFreeNameResultA(DS_NAME_RESULT *pResult None)
ushort None None.ToUInt16(IFormatProvider provider None)
FlagsAttribute None None.ComVisibleAttribute(false None None)
HRESULT None None.PathCchAddBackslashEx(_Inout_ PWSTR pszPath,_In_ size_t cchPath,_Out_opt_ PWSTR *ppszEnd,_Out_opt_ size_t *pcchRemaining)
public int None.CompareTo(object obj None)
bool None None.ToBoolean(IFormatProvider provider None)
int None None.CompareTo(object obj None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
long None None.ToInt64(IFormatProvider provider None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
BOOL None shlwapi.PathMakeSystemFolder(_In_ LPTSTR pszPath)
BOOL None shlwapi.PathMakeSystemFolderW(_In_ LPTSTR pszPath)
BOOL None shlwapi.PathMakeSystemFolderA(_In_ LPTSTR pszPath)
static void None.Main(string[] args None)
public string None.ToString(string format None)
public int None.CompareTo(decimal value None)
BOOL None kernel32.BackupSeek(_In_ HANDLE hFile,_In_ DWORD dwLowBytesToSeek,_In_ DWORD dwHighBytesToSeek,_Out_ LPDWORD lpdwLowByteSeeked,_Out_ LPDWORD lpdwHighByteSeeked,_In_ LPVOID *lpContext)
HRESULT None shlwapi.UrlUnescapeInPlace(_Inout_ LPTSTR pszURL,_In_ DWORD dwFlags)
public None None.ExecutionEngineException(string message None,Exception innerException None)
DWORD None ntdsapi.DsMakePasswordCredentials(_In_ LPCTSTR User,_In_ LPCTSTR Domain,_In_ LPCTSTR Password,_Out_ RPC_AUTH_IDENTITY_HANDLE *pAuthIdentity)
DWORD None ntdsapi.DsMakePasswordCredentialsW(_In_ LPCTSTR User,_In_ LPCTSTR Domain,_In_ LPCTSTR Password,_Out_ RPC_AUTH_IDENTITY_HANDLE *pAuthIdentity)
DWORD None ntdsapi.DsMakePasswordCredentialsA(_In_ LPCTSTR User,_In_ LPCTSTR Domain,_In_ LPCTSTR Password,_Out_ RPC_AUTH_IDENTITY_HANDLE *pAuthIdentity)
If None cimwin32.Len(dtmMonth None None)
public string None.Trim(params char[] trimChars)
bool None None.Equals(T x None,T y None)
public string None.ToString(string format None,IFormatProvider provider None)
BOOL CALLBACK None.EnumWindowsProc(_In_ HWND hwnd,_In_ LPARAM lParam)
public int None.CompareTo(decimal value None)
BOOL WINAPI advapi32.GetPrivateObjectSecurity(_In_ PSECURITY_DESCRIPTOR ObjectDescriptor,_In_ SECURITY_INFORMATION SecurityInformation,_Out_opt_ PSECURITY_DESCRIPTOR ResultantDescriptor,_In_ DWORD DescriptorLength,_Out_ PDWORD ReturnLength)
long None None.ToInt64(IFormatProvider provider None)
public function None.FindMembers(memberType : MemberTypes,bindingAttr : BindingFlags,filter : MemberFilter,filterCriteria : Object)
private void None.ComboBox1_SelectedIndexChanged(System.Object sender None,System.EventArgs e None)
void None None.GetObjectData(SerializationInfo info None,StreamingContext context None)
public int None.CompareTo(decimal value None)
DWORD None ntdsapi.DsBindingSetTimeout(_In_ HANDLE hDS,_In_ ULONG cTimeoutSecs)
public int None.GetInt32(string name None)
public None None.Decimal(int value None)
BOOL None None.SyncUpdateProc(LPVOID pData None,PDS_REPSYNCALL_UPDATE pUpdate None)
DWORD None ntdsapi.DsReplicaGetInfo(_In_ HANDLE hDS,_In_ DS_REPL_INFO_TYPE InfoType,_In_opt_ LPCWSTR pszObject,_In_opt_ UUID *puuidForSourceDsaObjGuid,_Out_ VOID **ppInfo)
DWORD None ntdsapi.DsReplicaGetInfoW(_In_ HANDLE hDS,_In_ DS_REPL_INFO_TYPE InfoType,_In_opt_ LPCWSTR pszObject,_In_opt_ UUID *puuidForSourceDsaObjGuid,_Out_ VOID **ppInfo)
protected void None.OkToDouble_Click(object sender None,EventArgs e None)
public int None.IndexOf(string value None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
uint32 None cimwin32.EnableWINS([in] boolean DNSEnabledForWINSResolution,[in] boolean WINSEnableLMHostsLookup,[in None None,optional] string WINSHostLookupFile,[in None None,optional] string WINSScopeID)
public void None.MinMaxFields(int numberToSet None)
uint32 None cimwin32.SetKeepAliveTime([in] uint32 KeepAliveTime)
uint32 None cimwin32.UncompressEx([out] string StopFileName,[in None None,optional] string StartFileName,[in None None,optional] boolean Recursive)
SerializableAttribute None None.ComVisibleAttribute(true None None)
uint32 None cimwin32.SetWINSServer([in] string WINSPrimaryServer,[in] string WINSSecondaryServer)
DWORD None ntdsapi.DsUnquoteRdnValue(_In_ DWORD cQuotedRdnValueLength,_In_ LPCTCH psQuotedRdnValue,_Inout_ DWORD *pcUnquotedRdnValueLength,_Out_ LPTCH psUnquotedRdnValue)
DWORD None ntdsapi.DsUnquoteRdnValueW(_In_ DWORD cQuotedRdnValueLength,_In_ LPCTCH psQuotedRdnValue,_Inout_ DWORD *pcUnquotedRdnValueLength,_Out_ LPTCH psUnquotedRdnValue)
DWORD None ntdsapi.DsUnquoteRdnValueA(_In_ DWORD cQuotedRdnValueLength,_In_ LPCTCH psQuotedRdnValue,_Inout_ DWORD *pcUnquotedRdnValueLength,_Out_ LPTCH psUnquotedRdnValue)
public void None.Insert(int index None,T item None)
uint32 None cimwin32.SetConfigurationSecurityDescriptor([in] Win32_SecurityDescriptor Descriptor)
uint32 None cimwin32.SetArpAlwaysSourceRoute([in] boolean ArpAlwaysSourceRoute)
public None None.Dictionary(int capacity None)
public None None.SecurityPermissionAttribute(SecurityAction action None)
HWND WINAPI user32.GetParent(_In_ HWND hWnd)
private void None.ShowLineJoin(PaintEventArgs e None)
public int None.LastIndexOfAny(char[] anyOf None)
public string None.ToString(string format None,IFormatProvider provider None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
uint32 None cimwin32.SetMTU([in] uint32 MTU)
public char None.GetChar(string name None)
public string None.Insert(int startIndex None,string value None)
public string None.ToString(string format None)
DWORD None ntdsapi.DsListRoles(_In_ HANDLE hDs,_Out_ PDS_NAME_RESULTW *ppRoles)
DWORD None ntdsapi.DsListRolesW(_In_ HANDLE hDs,_Out_ PDS_NAME_RESULTW *ppRoles)
DWORD None ntdsapi.DsListRolesA(_In_ HANDLE hDs,_Out_ PDS_NAME_RESULTW *ppRoles)
HRESULT None shell32.GetData([in] ASSOCF flags,[in] ASSOCDATA data,[in None None,optional] LPCWSTR pwszExtra,[out None None,optional] void *pvOut,[in None None,out None None,optional] DWORD *pcbOut)
public None None.Tuple(T1 item1 None,T2 item2 None,T3 item3 None,T4 item4 None,T5 item5 None,T6 item6 None,T7 item7 None,TRest rest None)
static void None.Main(string[] args None)
public MethodBuilder None.DefinePInvokeMethod(string name None,string dllName None,MethodAttributes attributes None,CallingConventions callingConvention None,Type returnType None,Type[] parameterTypes None,CallingConvention nativeCallConv None,CharSet nativeCharSet None)
public bool None.Equals(double obj None)
BOOL None ntdsapi.DsIsMangledDn(_In_ LPCTSTR pszDn,_In_ DS_MANGLE_FOR eDsMangleFor)
BOOL None ntdsapi.DsIsMangledDnW(_In_ LPCTSTR pszDn,_In_ DS_MANGLE_FOR eDsMangleFor)
BOOL None ntdsapi.DsIsMangledDnA(_In_ LPCTSTR pszDn,_In_ DS_MANGLE_FOR eDsMangleFor)
object None None.GetFormat(Type formatType None)
public None None.HMACSHA1(byte[] key None)
uint32 None cimwin32.UncompressEx([out] string StopFileName,[in None None,optional] string StartFileName,[in None None,optional] boolean Recursive)
BOOL None shlwapi.PathIsHTMLFile(_In_ LPCTSTR pszFile)
BOOL None shlwapi.PathIsHTMLFileW(_In_ LPCTSTR pszFile)
BOOL None shlwapi.PathIsHTMLFileA(_In_ LPCTSTR pszFile)
void None shlwapi.PathUndecorate(_Inout_ LPTSTR pszPath)
void None shlwapi.PathUndecorateW(_Inout_ LPTSTR pszPath)
void None shlwapi.PathUndecorateA(_Inout_ LPTSTR pszPath)
uint32 None cimwin32.Copy([in] string FileName)
public string None.Insert(int startIndex None,string value None)
public void None.MinMaxFields(int numberToSet None)
IPermission None None.Union(IPermission target None)
uint32 None cimwin32.CopyEx([in] string FileName,[out] string StopFileName,[in None None,optional] string StartFileName,[in None None,optional] boolean Recursive)
ushort None None.ToUInt16(IFormatProvider provider None)
public int None.IndexOf(char value None)
public void None.ConvertStringFloat(string stringVal None)
public void None.Insert(int index None,T item None)
void None None.RemoveAt(int index None)
IQueryable None None.CreateQuery(Expression expression None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
public string None.ToString(string format None,IFormatProvider provider None)
boolean None cimwin32.GetEffectivePermission([in] uint32 Permissions)
BOOL None shlwapi.PathRemoveFileSpec(_Inout_ LPTSTR pszPath)
BOOL None shlwapi.PathRemoveFileSpecW(_Inout_ LPTSTR pszPath)
BOOL None shlwapi.PathRemoveFileSpecA(_Inout_ LPTSTR pszPath)
public None None.HMACSHA1(byte[] key None)
public string None.Trim(params char[] trimChars)
public string None.ToString(string format None)
DWORD WINAPI advapi32.GetSidLengthRequired(_In_ UCHAR nSubAuthorityCount)
bool None None.Contains(object key None)
public boolean None.Match(Object obj None)
public None None.ExecutionEngineException(string message None,Exception innerException None)
public string None.ToString(string format None,IFormatProvider provider None)
public void None.Equals_Example(PaintEventArgs e None)
public int None.CompareTo(decimal value None)
bool None None.ToBoolean(IFormatProvider provider None)
HRESULT None shlwapi.PathMatchSpecEx(_In_ LPCTSTR pszFile,_In_ LPCTSTR pszSpec,_In_ DWORD dwFlags)
HRESULT None shlwapi.PathMatchSpecExW(_In_ LPCTSTR pszFile,_In_ LPCTSTR pszSpec,_In_ DWORD dwFlags)
HRESULT None shlwapi.PathMatchSpecExA(_In_ LPCTSTR pszFile,_In_ LPCTSTR pszSpec,_In_ DWORD dwFlags)
HRESULT None shlwapi.UrlApplyScheme(_In_ PCTSTR pszIn,_Out_ PTSTR pszOut,_Inout_ DWORD *pcchOut,DWORD dwFlags None)
HRESULT None shlwapi.UrlApplySchemeW(_In_ PCTSTR pszIn,_Out_ PTSTR pszOut,_Inout_ DWORD *pcchOut,DWORD dwFlags None)
HRESULT None shlwapi.UrlApplySchemeA(_In_ PCTSTR pszIn,_Out_ PTSTR pszOut,_Inout_ DWORD *pcchOut,DWORD dwFlags None)
public int None.CompareTo(Object obj None)
public bool None.Contains(object value None)
public None None.HMACSHA1(byte[] key None)
BOOL None shlwapi.PathMatchSpec(_In_ LPCSTR pszFile,_In_ LPCSTR pszSpec)
BOOL None shlwapi.PathMatchSpecW(_In_ LPCSTR pszFile,_In_ LPCSTR pszSpec)
BOOL None shlwapi.PathMatchSpecA(_In_ LPCSTR pszFile,_In_ LPCSTR pszSpec)
ObjectHandle None None.CreateInstanceFrom(string assemblyFile None,string typeName None,bool ignoreCase None,BindingFlags bindingAttr None,Binder binder None,object[] args None,CultureInfo culture None,object[] activationAttributes None,Evidence securityAttributes None)
short None None.ToInt16(IFormatProvider provider None)
public int None.CompareTo(decimal value None)
HWND WINAPI user32.SetParent(_In_ HWND hWndChild,_In_opt_ HWND hWndNewParent)
public None None.HMACSHA1(byte[] key None)
public None None.HMACSHA1(byte[] key None)
int None None.CompareTo(Object obj None)
public string None.Insert(int startIndex None,string value None)
LPTSTR None shlwapi.PathRemoveBackslash(_Inout_ LPTSTR lpszPath)
LPTSTR None shlwapi.PathRemoveBackslashW(_Inout_ LPTSTR lpszPath)
LPTSTR None shlwapi.PathRemoveBackslashA(_Inout_ LPTSTR lpszPath)
uint32 None cimwin32.SetTcpMaxDataRetransmissions([in] uint32 TcpMaxDataRetransmissions)
HRESULT None shlwapi.UrlCanonicalize(_In_ PCTSTR pszUrl,_Out_ PTSTR pszCanonicalized,_Inout_ DWORD *pcchCanonicalized,DWORD dwFlags None)
HRESULT None shlwapi.UrlCanonicalizeW(_In_ PCTSTR pszUrl,_Out_ PTSTR pszCanonicalized,_Inout_ DWORD *pcchCanonicalized,DWORD dwFlags None)
HRESULT None shlwapi.UrlCanonicalizeA(_In_ PCTSTR pszUrl,_Out_ PTSTR pszCanonicalized,_Inout_ DWORD *pcchCanonicalized,DWORD dwFlags None)
BOOL None shlwapi.PathIsRelative(_In_ LPCTSTR lpszPath)
BOOL None shlwapi.PathIsRelativeW(_In_ LPCTSTR lpszPath)
BOOL None shlwapi.PathIsRelativeA(_In_ LPCTSTR lpszPath)
uint32 None cimwin32.EnableIPSec([in] string IPSecPermitTCPPorts[],[in] string IPSecPermitUDPPorts[],[in] string IPSecPermitIPProtocols[])
PTSTR None shlwapi.PathFindExtension(_In_ PTSTR pszPath)
PTSTR None shlwapi.PathFindExtensionW(_In_ PTSTR pszPath)
PTSTR None shlwapi.PathFindExtensionA(_In_ PTSTR pszPath)
public string None.TrimEnd(params char[] trimChars)
DWORD None ntdsapi.DsQuoteRdnValue(_In_ DWORD cUnquotedRdnValueLength,_In_ LPCTCH psUnquotedRdnValue,_Inout_ DWORD *pcQuotedRdnValueLength,_Out_ LPTCH psQuotedRdnValue)
DWORD None ntdsapi.DsQuoteRdnValueW(_In_ DWORD cUnquotedRdnValueLength,_In_ LPCTCH psUnquotedRdnValue,_Inout_ DWORD *pcQuotedRdnValueLength,_Out_ LPTCH psQuotedRdnValue)
DWORD None ntdsapi.DsQuoteRdnValueA(_In_ DWORD cUnquotedRdnValueLength,_In_ LPCTCH psUnquotedRdnValue,_Inout_ DWORD *pcQuotedRdnValueLength,_Out_ LPTCH psQuotedRdnValue)
void None None.WaitCallback(Object state None)
IQueryable None None.CreateQuery(Expression expression None)
ushort None None.ToUInt16(IFormatProvider provider None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
uint32 None cimwin32.SetIPXVirtualNetworkNumber([in] string IPXVirtualNetNumber)
public None None.Semaphore(int initialCount None,int maximumCount None,string name None,out bool createdNew)
uint32 None cimwin32.EnableStatic([in] string IPAddress[],[in] string SubnetMask[])
HRESULT None shlwapi.UrlCombine(_In_ PCTSTR pszBase,_In_ PCTSTR pszRelative,_Out_opt_ PTSTR pszCombined,_Inout_ DWORD *pcchCombined,DWORD dwFlags None)
HRESULT None shlwapi.UrlCombineW(_In_ PCTSTR pszBase,_In_ PCTSTR pszRelative,_Out_opt_ PTSTR pszCombined,_Inout_ DWORD *pcchCombined,DWORD dwFlags None)
HRESULT None shlwapi.UrlCombineA(_In_ PCTSTR pszBase,_In_ PCTSTR pszRelative,_Out_opt_ PTSTR pszCombined,_Inout_ DWORD *pcchCombined,DWORD dwFlags None)
IPermission None None.Union(IPermission target None)
ushort None None.ToUInt16(IFormatProvider provider None)
uint32 None cimwin32.Rename(string FileName None)
uint32 None cimwin32.SetDefaultTOS([in] uint8 DefaultTOS)
public StringBuilder None.AppendFormat(string format None,object arg0 None)
HRESULT None shdocvw.RegisterPending([in] VARIANT *pvarloc,[in] VARIANT *pvarlocRoot,[in] int swClass,[out] long *plCookie)
public string None.PadRight(int totalWidth None,char paddingChar None)
bool None None.ToBoolean(IFormatProvider provider None)
BOOL None ntdsapi.DsIsMangledRdnValue(_In_ LPCTSTR pszRdn,_In_ DWORD cRdn,_In_ DS_MANGLE_FOR eDsMangleForDesired)
BOOL None ntdsapi.DsIsMangledRdnValueW(_In_ LPCTSTR pszRdn,_In_ DWORD cRdn,_In_ DS_MANGLE_FOR eDsMangleForDesired)
BOOL None ntdsapi.DsIsMangledRdnValueA(_In_ LPCTSTR pszRdn,_In_ DWORD cRdn,_In_ DS_MANGLE_FOR eDsMangleForDesired)
AssemblyBuilder None None.DefineDynamicAssembly(AssemblyName name None,AssemblyBuilderAccess access None,string dir None,Evidence evidence None,PermissionSet requiredPermissions None,PermissionSet optionalPermissions None,PermissionSet refusedPermissions None,bool isSynchronized None)
public string None.ToString(string format None)
PSID_IDENTIFIER_AUTHORITY WINAPI advapi32.GetSidIdentifierAuthority(_In_ PSID pSid)
void None None.RemoveAt(int index None)
public None None.Semaphore(int initialCount None,int maximumCount None,string name None,out bool createdNew,SemaphoreSecurity semaphoreSecurity None)
public void None.ToLogFont(object logFont None,Graphics graphics None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
DWORD None ntdsapi.DsQuerySitesByCost(_In_ HANDLE hDS,_In_ LPTSTR pwszFromSite,_In_ LPTSTR *rgwszToSites,_In_ DWORD cToSites,_In_ DWORD dwFlags,_Out_ PDS_SITE_COST_INFO *prgSiteInfo)
DWORD None ntdsapi.DsQuerySitesByCostW(_In_ HANDLE hDS,_In_ LPTSTR pwszFromSite,_In_ LPTSTR *rgwszToSites,_In_ DWORD cToSites,_In_ DWORD dwFlags,_Out_ PDS_SITE_COST_INFO *prgSiteInfo)
DWORD None ntdsapi.DsQuerySitesByCostA(_In_ HANDLE hDS,_In_ LPTSTR pwszFromSite,_In_ LPTSTR *rgwszToSites,_In_ DWORD cToSites,_In_ DWORD dwFlags,_Out_ PDS_SITE_COST_INFO *prgSiteInfo)
int None None.ComparisonT(T x None,T y None)
public int None.CompareTo(double value None)
DWORD None ntdsapi.DsCrackNames(_In_ HANDLE hDS,_In_ DS_NAME_FLAGS flags,_In_ DS_NAME_FORMAT formatOffered,_In_ DS_NAME_FORMAT formatDesired,_In_ DWORD cNames,_In_ LPCTSTR *rpNames,_Out_ PDS_NAME_RESULT *ppResult)
DWORD None ntdsapi.DsCrackNamesW(_In_ HANDLE hDS,_In_ DS_NAME_FLAGS flags,_In_ DS_NAME_FORMAT formatOffered,_In_ DS_NAME_FORMAT formatDesired,_In_ DWORD cNames,_In_ LPCTSTR *rpNames,_Out_ PDS_NAME_RESULT *ppResult)
DWORD None ntdsapi.DsCrackNamesA(_In_ HANDLE hDS,_In_ DS_NAME_FLAGS flags,_In_ DS_NAME_FORMAT formatOffered,_In_ DS_NAME_FORMAT formatDesired,_In_ DWORD cNames,_In_ LPCTSTR *rpNames,_Out_ PDS_NAME_RESULT *ppResult)
public int None.IndexOf(char value None)
public void None.MinMaxFields(int numberToSet None)
public None None.Dictionary(int capacity None)
public int None.CompareTo(int value None)
public void None.MinMaxFields(int numberToSet None)
public bool None.Equals(double obj None)
DWORD WINAPI ntdsapi.DsGetRdnW(_Inout_ LPCWCH *ppDN,_Inout_ DWORD *pcDN,_Out_ LPCWCH *ppKey,_Out_ DWORD *pcKey,_Out_ LPCWCH *ppVal,_Out_ DWORD *pcVal)
DWORD None ntdsapi.DsListInfoForServer(_In_ HANDLE hDs,_In_ LPTSTR server,_Out_ PDS_NAME_RESULT *ppInfo)
DWORD None ntdsapi.DsListInfoForServerW(_In_ HANDLE hDs,_In_ LPTSTR server,_Out_ PDS_NAME_RESULT *ppInfo)
DWORD None ntdsapi.DsListInfoForServerA(_In_ HANDLE hDs,_In_ LPTSTR server,_Out_ PDS_NAME_RESULT *ppInfo)
private void None.dataGridView1_CellStateChanged(object sender None,DataGridViewCellStateChangedEventArgs e None)
uint32 None cimwin32.EnableIPFilterSec([in] boolean IPFilterSecurityEnabled)
public string None.Insert(int startIndex None,string value None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
private void None.DrawImagePointF(PaintEventArgs e None)
public int None.CompareTo(Object obj None)
public string None.ToString(string format None,IFormatProvider provider None)
public None None.Font(FontFamily family None,float emSize None,FontStyle style None,GraphicsUnit unit None)
DWORD None ntdsapi.DsUnBind(_In_ HANDLE *phDS)
DWORD None ntdsapi.DsUnBindW(_In_ HANDLE *phDS)
DWORD None ntdsapi.DsUnBindA(_In_ HANDLE *phDS)
private void None.textBox1_Enter(object sender None,System.EventArgs e None)
public string None.ToString(string format None)
uint32 None cimwin32.CopyEx([in] string FileName,[out] string StopFileName,[in None None,optional] string StartFileName,[in None None,optional] boolean Recursive)
private void None.OutputLabels(DataTable dt None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
SerializableAttribute None None.ClassInterfaceAttribute(ClassInterfaceType.None None None)
BOOL None shlwapi.PathIsUNCServerShare(_In_ LPCTSTR pszPath)
BOOL None shlwapi.PathIsUNCServerShareW(_In_ LPCTSTR pszPath)
BOOL None shlwapi.PathIsUNCServerShareA(_In_ LPCTSTR pszPath)
void None None.RemoveAt(int index None)
public void None.RunOracleTransaction(string connectionString None)
DWORD None ntdsapi.DsServerRegisterSpn(_In_ DS_SPN_WRITE_OP Operation,_In_ LPCTSTR ServiceClass,_In_opt_ LPCTSTR UserObjectDN)
DWORD None ntdsapi.DsServerRegisterSpnW(_In_ DS_SPN_WRITE_OP Operation,_In_ LPCTSTR ServiceClass,_In_opt_ LPCTSTR UserObjectDN)
DWORD None ntdsapi.DsServerRegisterSpnA(_In_ DS_SPN_WRITE_OP Operation,_In_ LPCTSTR ServiceClass,_In_opt_ LPCTSTR UserObjectDN)
public void None.GenerateContract(ServiceContractGenerationContext context None)
HRESULT None shlwapi.UrlUnescape(_Inout_ PTSTR pszURL,_Out_opt_ PTSTR pszUnescaped,_Inout_opt_ DWORD *pcchUnescaped,DWORD dwFlags None)
HRESULT None shlwapi.UrlUnescapeW(_Inout_ PTSTR pszURL,_Out_opt_ PTSTR pszUnescaped,_Inout_opt_ DWORD *pcchUnescaped,DWORD dwFlags None)
HRESULT None shlwapi.UrlUnescapeA(_Inout_ PTSTR pszURL,_Out_opt_ PTSTR pszUnescaped,_Inout_opt_ DWORD *pcchUnescaped,DWORD dwFlags None)
BOOL None shlwapi.UrlIsFileUrl(LPCTSTR pszUrl None)
BOOL None shlwapi.UrlIsFileUrlW(LPCTSTR pszUrl None)
BOOL None shlwapi.UrlIsFileUrlA(LPCTSTR pszUrl None)
short None None.ToInt16(IFormatProvider provider None)
LPTSTR None shlwapi.PathAddBackslash(_Inout_ LPTSTR lpszPath)
LPTSTR None shlwapi.PathAddBackslashW(_Inout_ LPTSTR lpszPath)
LPTSTR None shlwapi.PathAddBackslashA(_Inout_ LPTSTR lpszPath)
public string None.ToString(string format None,IFormatProvider provider None)
bool None None.Contains(Object key None)
VOID WINAPI ntdsapi.DsFreeSchemaGuidMap(_In_ PDS_SCHEMA_GUID_MAP pGuidMap)
VOID WINAPI ntdsapi.DsFreeSchemaGuidMapW(_In_ PDS_SCHEMA_GUID_MAP pGuidMap)
VOID WINAPI ntdsapi.DsFreeSchemaGuidMapA(_In_ PDS_SCHEMA_GUID_MAP pGuidMap)
SerializableAttribute None None.ComVisibleAttribute(true None None)
BOOL None shlwapi.PathStripToRoot(_Inout_ LPTSTR szRoot)
BOOL None shlwapi.PathStripToRootW(_Inout_ LPTSTR szRoot)
BOOL None shlwapi.PathStripToRootA(_Inout_ LPTSTR szRoot)
BOOL None shlwapi.PathQuoteSpaces(_Inout_ LPTSTR lpsz)
BOOL None shlwapi.PathQuoteSpacesW(_Inout_ LPTSTR lpsz)
BOOL None shlwapi.PathQuoteSpacesA(_Inout_ LPTSTR lpsz)
uint32 None cimwin32.SetTcpMaxConnectRetransmissions([in] uint32 TcpMaxConnectRetransmissions)
BOOL None shlwapi.PathIsDirectoryEmpty(_In_ LPCTSTR pszPath)
BOOL None shlwapi.PathIsDirectoryEmptyW(_In_ LPCTSTR pszPath)
BOOL None shlwapi.PathIsDirectoryEmptyA(_In_ LPCTSTR pszPath)
uint32 None cimwin32.SetGateways([in] string DefaultIPGateway[],[in None None,optional] uint16 GatewayCostMetric[])
public string None.Replace(char oldChar None,char newChar None)
uint32 None cimwin32.SetDefaultTTL([in] uint8 DefaultTTL)
public int None.IndexOf(char value None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
public void None.MinMaxFields(int numberToSet None)
public None None.ReflectionPermission(PermissionState state None)
BOOL None shlwapi.PathCompactPathEx(_Out_ LPTSTR pszOut,_In_ LPCTSTR pszSrc,_In_ UINT cchMax,_Reserved_ DWORD dwFlags)
BOOL None shlwapi.PathCompactPathExW(_Out_ LPTSTR pszOut,_In_ LPCTSTR pszSrc,_In_ UINT cchMax,_Reserved_ DWORD dwFlags)
BOOL None shlwapi.PathCompactPathExA(_Out_ LPTSTR pszOut,_In_ LPCTSTR pszSrc,_In_ UINT cchMax,_Reserved_ DWORD dwFlags)
int None None.CompareTo(Object obj None)
public None None.InvalidCastException(string message None,int errorCode None)
protected None None.TypeLoadException(SerializationInfo info None,StreamingContext context None)
public void None.GenerateContract(ServiceContractGenerationContext context None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public void None.MinMaxFields(int numberToSet None)
uint32 None cimwin32.SetForwardBufferMemory([in] uint32 ForwardBufferMemory)
public string None.ToString(string format None)
BOOL None shlwapi.PathIsNetworkPath(_In_ LPCTSTR pszPath)
BOOL None shlwapi.PathIsNetworkPathW(_In_ LPCTSTR pszPath)
BOOL None shlwapi.PathIsNetworkPathA(_In_ LPCTSTR pszPath)
BOOL None shlwapi.PathIsSameRoot(_In_ LPCTSTR pszPath1,_In_ LPCTSTR pszPath2)
BOOL None shlwapi.PathIsSameRootW(_In_ LPCTSTR pszPath1,_In_ LPCTSTR pszPath2)
BOOL None shlwapi.PathIsSameRootA(_In_ LPCTSTR pszPath1,_In_ LPCTSTR pszPath2)
public void None.DrawImage(Image image None,Rectangle destRect None,int srcX None,int srcY None,int srcWidth None,int srcHeight None,GraphicsUnit srcUnit None,ImageAttributes imageAttr None,Graphics.DrawImageAbort callback None)
public void None.DrawImage(Image image None,PointF[] destPoints None,RectangleF srcRect None,GraphicsUnit srcUnit None,ImageAttributes imageAttr None)
decimal None None.ToDecimal(IFormatProvider provider None)
void None None.button1_Click(object sender None,EventArgs e None)
private void None.textBox1_Enter(object sender None,System.EventArgs e None)
public string None.ToString(string format None)
public int None.ShiftAndWrap(int value None,int positions None)
ushort None None.ToUInt16(IFormatProvider provider None)
public bool None.IsVisible(RectangleF rect None)
BOOL None shlwapi.PathFindOnPath(_Inout_ LPTSTR pszFile,_In_opt_ LPCTSTR *ppszOtherDirs)
BOOL None shlwapi.PathFindOnPathW(_Inout_ LPTSTR pszFile,_In_opt_ LPCTSTR *ppszOtherDirs)
BOOL None shlwapi.PathFindOnPathA(_Inout_ LPTSTR pszFile,_In_opt_ LPCTSTR *ppszOtherDirs)
SerializableAttribute None None.ComVisibleAttribute(true None None)
public None None.Semaphore(int initialCount None,int maximumCount None,string name None,out bool createdNew)
short None None.ToInt16(IFormatProvider provider None)
DWORD None ntdsapi.DsGetDomainControllerInfo(_In_ HANDLE hDs,_In_ LPTSTR DomainName,_In_ DWORD InfoLevel,_Out_ DWORD *pcOut,_Out_ VOID **ppInfo)
DWORD None ntdsapi.DsGetDomainControllerInfoW(_In_ HANDLE hDs,_In_ LPTSTR DomainName,_In_ DWORD InfoLevel,_Out_ DWORD *pcOut,_Out_ VOID **ppInfo)
DWORD None ntdsapi.DsGetDomainControllerInfoA(_In_ HANDLE hDs,_In_ LPTSTR DomainName,_In_ DWORD InfoLevel,_Out_ DWORD *pcOut,_Out_ VOID **ppInfo)
DWORD None ntdsapi.DsListServersForDomainInSite(_In_ HANDLE hDs,_In_ LPTSTR domain,_In_ LPTSTR site,_Out_ PDS_NAME_RESULT *ppServers)
DWORD None ntdsapi.DsListServersForDomainInSiteW(_In_ HANDLE hDs,_In_ LPTSTR domain,_In_ LPTSTR site,_Out_ PDS_NAME_RESULT *ppServers)
DWORD None ntdsapi.DsListServersForDomainInSiteA(_In_ HANDLE hDs,_In_ LPTSTR domain,_In_ LPTSTR site,_Out_ PDS_NAME_RESULT *ppServers)
public int None.CompareTo(object value None)
public int None.CompareTo(double value None)
uint32 None cimwin32.CompressEx([out] string StopFileName,[in None None,optional] string StartFileName,[in None None,optional] boolean Recursive)
public void None.MinMaxFields(int numberToSet None)
public string None.PadRight(int totalWidth None,char paddingChar None)
public string None.TrimStart(params char[] trimChars)
public None None.GuidAttribute(string guid None)
int None shlwapi.UrlCompare(_In_ PCTSTR psz1,_In_ PCTSTR psz2,BOOL fIgnoreSlash None)
int None shlwapi.UrlCompareW(_In_ PCTSTR psz1,_In_ PCTSTR psz2,BOOL fIgnoreSlash None)
int None shlwapi.UrlCompareA(_In_ PCTSTR psz1,_In_ PCTSTR psz2,BOOL fIgnoreSlash None)
DWORD None ntdsapi.DsMakeSpn(_In_ LPCTSTR ServiceClass,_In_ LPCTSTR ServiceName,_In_opt_ LPCTSTR InstanceName,_In_ USHORT InstancePort,_In_opt_ LPCTSTR Referrer,_Inout_ DWORD *pcSpnLength,_Out_ LPTSTR pszSpn)
DWORD None ntdsapi.DsMakeSpnW(_In_ LPCTSTR ServiceClass,_In_ LPCTSTR ServiceName,_In_opt_ LPCTSTR InstanceName,_In_ USHORT InstancePort,_In_opt_ LPCTSTR Referrer,_Inout_ DWORD *pcSpnLength,_Out_ LPTSTR pszSpn)
DWORD None ntdsapi.DsMakeSpnA(_In_ LPCTSTR ServiceClass,_In_ LPCTSTR ServiceName,_In_opt_ LPCTSTR InstanceName,_In_ USHORT InstancePort,_In_opt_ LPCTSTR Referrer,_Inout_ DWORD *pcSpnLength,_Out_ LPTSTR pszSpn)
public void None.SetMethodBody(byte[] il None,int maxStack None,byte[] localSignature None,IEnumerableExceptionHandler exceptionHandlers None,IEnumerableint tokenFixups None)
public void None.FillClosedCurve(Brush brush None,Point[] points None)
public string None.ToString(string format None)
BOOL None shlwapi.PathCompactPath(_In_ HDC hDC,_Inout_ LPTSTR lpszPath,_In_ UINT dx)
BOOL None shlwapi.PathCompactPathW(_In_ HDC hDC,_Inout_ LPTSTR lpszPath,_In_ UINT dx)
BOOL None shlwapi.PathCompactPathA(_In_ HDC hDC,_Inout_ LPTSTR lpszPath,_In_ UINT dx)
private void None.SelectNode(TreeNode node None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
private void None.textBox1_Enter(object sender None,System.EventArgs e None)
delegate int None.del(int i None)
DWORD None ntdsapi.DsRemoveDsServer(_In_ HANDLE hDs,_In_ LPTSTR ServerDN,_In_opt_ LPTSTR DomainDN,_Out_opt_ BOOL *fLastDcInDomain,_In_ BOOL fCommit)
DWORD None ntdsapi.DsRemoveDsServerW(_In_ HANDLE hDs,_In_ LPTSTR ServerDN,_In_opt_ LPTSTR DomainDN,_Out_opt_ BOOL *fLastDcInDomain,_In_ BOOL fCommit)
DWORD None ntdsapi.DsRemoveDsServerA(_In_ HANDLE hDs,_In_ LPTSTR ServerDN,_In_opt_ LPTSTR DomainDN,_Out_opt_ BOOL *fLastDcInDomain,_In_ BOOL fCommit)
SerializableAttribute None None.ComVisibleAttribute(true None None)
uint32 None cimwin32.SetArpUseEtherSNAP([in] boolean ArpUseEtherSNAP)
public string None.Insert(int startIndex None,string value None)
BOOL None shlwapi.PathIsFileSpec(_In_ LPCTSTR lpszPath)
BOOL None shlwapi.PathIsFileSpecW(_In_ LPCTSTR lpszPath)
BOOL None shlwapi.PathIsFileSpecA(_In_ LPCTSTR lpszPath)
void None shlwapi.PathRemoveBlanks(_Inout_ LPTSTR lpszString)
void None shlwapi.PathRemoveBlanksW(_Inout_ LPTSTR lpszString)
void None shlwapi.PathRemoveBlanksA(_Inout_ LPTSTR lpszString)
public string None.ToString(IFormatProvider provider None)
public string None.ToString(string format None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
public None None.InvalidCastException(string message None,int errorCode None)
void None shlwapi.PathStripPath(_Inout_ LPTSTR pszPath)
void None shlwapi.PathStripPathW(_Inout_ LPTSTR pszPath)
void None shlwapi.PathStripPathA(_Inout_ LPTSTR pszPath)
public None None.Semaphore(int initialCount None,int maximumCount None,string name None,out bool createdNew,SemaphoreSecurity semaphoreSecurity None)
public string None.TrimEnd(params char[] trimChars)
public int None.LastIndexOf(string value None,int startIndex None)
public string None.ToString(string format None)
public boolean None.Equals(Object o None)
private void None.ImageExampleForm_Paint(object sender None,PaintEventArgs e None)
public void None.MinMaxFields(int numberToSet None)
uint32 None cimwin32.SetTcpWindowSize([in] uint16 TcpWindowSize)
DateTime None None.ToDateTime(IFormatProvider provider None)
public string None.ToString(IFormatProvider provider None)
public DateTime None.AddYears(int value None)
private void None.Form1_Deactivate(Object sender None,EventArgs e None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
public void None.DrawImage(Image image None,PointF[] destPoints None,RectangleF srcRect None,GraphicsUnit srcUnit None,ImageAttributes imageAttr None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
private void None.Button1_Click(System.Object sender None,System.EventArgs e None)
public void None.SetValue(Object value None,int index1 None,int index2 None)
int None shlwapi.PathCommonPrefix(_In_ LPCTSTR pszFile1,_In_ LPCTSTR pszFile2,_Out_opt_ LPTSTR pszPath)
int None shlwapi.PathCommonPrefixW(_In_ LPCTSTR pszFile1,_In_ LPCTSTR pszFile2,_Out_opt_ LPTSTR pszPath)
int None shlwapi.PathCommonPrefixA(_In_ LPCTSTR pszFile1,_In_ LPCTSTR pszFile2,_Out_opt_ LPTSTR pszPath)
int None shlwapi.PathParseIconLocation(_Inout_ LPTSTR pszIconFile)
int None shlwapi.PathParseIconLocationW(_Inout_ LPTSTR pszIconFile)
int None shlwapi.PathParseIconLocationA(_Inout_ LPTSTR pszIconFile)
private void None.ShowLineJoin(PaintEventArgs e None)
public void None.RunOracleTransaction(string connectionString None)
BOOL None shlwapi.PathSearchAndQualify(_In_ LPCTSTR pcszPath,_Out_ LPTSTR pszFullyQualifiedPath,_In_ UINT cchFullyQualifiedPath)
BOOL None shlwapi.PathSearchAndQualifyW(_In_ LPCTSTR pcszPath,_Out_ LPTSTR pszFullyQualifiedPath,_In_ UINT cchFullyQualifiedPath)
BOOL None shlwapi.PathSearchAndQualifyA(_In_ LPCTSTR pcszPath,_Out_ LPTSTR pszFullyQualifiedPath,_In_ UINT cchFullyQualifiedPath)
protected None None.MulticastDelegate(object target None,string method None)
public None None.ReflectionPermission(PermissionState state None)
public void None.DrawImage(Image image None,Rectangle destRect None,int srcX None,int srcY None,int srcWidth None,int srcHeight None,GraphicsUnit srcUnit None,ImageAttributes imageAttr None,Graphics..::.DrawImageAbort callback None)
private void None.Button2_Click(System.Object sender None,System.EventArgs e None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
private void None.OutputLabels(DataTable dt None)
PTSTR None shlwapi.PathGetArgs(_In_ PTSTR pszPath)
PTSTR None shlwapi.PathGetArgsW(_In_ PTSTR pszPath)
PTSTR None shlwapi.PathGetArgsA(_In_ PTSTR pszPath)
DWORD None ntdsapi.DsWriteAccountSpn(_In_ HANDLE hDS,_In_ DS_SPN_WRITE_OP Operation,_In_ LPCTSTR pszAccount,_In_ DWORD cSpn,_In_ LPCTSTR *rpszSpn)
DWORD None ntdsapi.DsWriteAccountSpnW(_In_ HANDLE hDS,_In_ DS_SPN_WRITE_OP Operation,_In_ LPCTSTR pszAccount,_In_ DWORD cSpn,_In_ LPCTSTR *rpszSpn)
DWORD None ntdsapi.DsWriteAccountSpnA(_In_ HANDLE hDS,_In_ DS_SPN_WRITE_OP Operation,_In_ LPCTSTR pszAccount,_In_ DWORD cSpn,_In_ LPCTSTR *rpszSpn)
DWORD WINAPI ntdsapi.DsReplicaConsistencyCheck(_In_ HANDLE hDS,_In_ DS_KCC_TASKID TaskID,_In_ DWORD dwFlags)
PTSTR None shlwapi.PathFindNextComponent(_In_ PTSTR pszPath)
PTSTR None shlwapi.PathFindNextComponentW(_In_ PTSTR pszPath)
PTSTR None shlwapi.PathFindNextComponentA(_In_ PTSTR pszPath)
private void None.ShowPropertiesOfSlateBlue(PaintEventArgs e None)
public None None.SystemException(string message None)
HRESULT None shlwapi.UrlEscapeSpaces(_In_ LPCTSTR pszURL,_Out_ LPTSTR pszEscaped,_Out_ LPDWORD pcchEscaped)
public bool None.IsVisible(RectangleF rect None)
void None None.button1_Click(object sender None,EventArgs e None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
uint32 None cimwin32.SetKeepAliveInterval([in] uint32 KeepAliveInterval)
LPTSTR None shlwapi.PathCombine(_Out_ LPTSTR pszPathOut,_In_opt_ LPCTSTR pszPathIn,_In_ LPCTSTR pszMore)
LPTSTR None shlwapi.PathCombineW(_Out_ LPTSTR pszPathOut,_In_opt_ LPCTSTR pszPathIn,_In_ LPCTSTR pszMore)
LPTSTR None shlwapi.PathCombineA(_Out_ LPTSTR pszPathOut,_In_opt_ LPCTSTR pszPathIn,_In_ LPCTSTR pszMore)
public void None.RemoveAt(int index None)
public string None.ToString(string format None,IFormatProvider provider None)
public StringBuilder None.AppendFormat(string format None,object arg0 None)
public string None.ToString(string format None,IFormatProvider provider None)
DWORD None ntdsapi.DsListDomainsInSite(_In_ HANDLE hDs,_In_ LPTSTR site,_Out_ PDS_NAME_RESULT *ppDomains)
DWORD None ntdsapi.DsListDomainsInSiteW(_In_ HANDLE hDs,_In_ LPTSTR site,_Out_ PDS_NAME_RESULT *ppDomains)
DWORD None ntdsapi.DsListDomainsInSiteA(_In_ HANDLE hDs,_In_ LPTSTR site,_Out_ PDS_NAME_RESULT *ppDomains)
int None shlwapi.PathGetDriveNumber(_In_ LPCTSTR lpsz)
int None shlwapi.PathGetDriveNumberW(_In_ LPCTSTR lpsz)
int None shlwapi.PathGetDriveNumberA(_In_ LPCTSTR lpsz)
public None None.Semaphore(int initialCount None,int maximumCount None,string name None,out bool createdNew)
BOOL None shlwapi.PathIsUNCServer(_In_ LPCTSTR pszPath)
BOOL None shlwapi.PathIsUNCServerW(_In_ LPCTSTR pszPath)
BOOL None shlwapi.PathIsUNCServerA(_In_ LPCTSTR pszPath)
protected None None.Dictionary(SerializationInfo info None,StreamingContext context None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
public void None.GenerateContract(ServiceContractGenerationContext context None)
short None None.ToInt16(IFormatProvider provider None)
HRESULT None shlwapi.PathCreateFromUrlAlloc(_In_ PCWSTR pszIn,_Out_ PWSTR *ppszOut,DWORD dwFlags None)
BOOL None shlwapi.PathMakePretty(_Inout_ LPTSTR lpPath)
BOOL None shlwapi.PathMakePrettyW(_Inout_ LPTSTR lpPath)
BOOL None shlwapi.PathMakePrettyA(_Inout_ LPTSTR lpPath)
public None None.Tuple(T1 item1 None,T2 item2 None,T3 item3 None,T4 item4 None,T5 item5 None,T6 item6 None,T7 item7 None)
Uint32 None cimwin32.GetDeviceProperties([in None None,optional] string devicePropertyKeys[],[out] Win32_PnPDeviceProperty deviceProperties[])
uint32 None cimwin32.SetPowerState([in] uint16 PowerState,[in] datetime Time)
BOOL None shlwapi.PathIsUNC(_In_ LPCTSTR pszPath)
BOOL None shlwapi.PathIsUNCW(_In_ LPCTSTR pszPath)
BOOL None shlwapi.PathIsUNCA(_In_ LPCTSTR pszPath)
BOOL None shlwapi.PathIsContentType(_In_ LPCTSTR pszPath,_In_ LPCTSTR pszContentType)
BOOL None shlwapi.PathIsContentTypeW(_In_ LPCTSTR pszPath,_In_ LPCTSTR pszContentType)
BOOL None shlwapi.PathIsContentTypeA(_In_ LPCTSTR pszPath,_In_ LPCTSTR pszContentType)
BOOL None shlwapi.PathAddExtension(_Inout_ LPTSTR pszPath,_In_opt_ LPCTSTR pszExtension)
BOOL None shlwapi.PathAddExtensionW(_Inout_ LPTSTR pszPath,_In_opt_ LPCTSTR pszExtension)
BOOL None shlwapi.PathAddExtensionA(_Inout_ LPTSTR pszPath,_In_opt_ LPCTSTR pszExtension)
protected void None.OnResize(EventArgs e None)
public None None.GuidAttribute(string guid None)
PTSTR None shlwapi.PathFindFileName(_In_ PTSTR pPath)
PTSTR None shlwapi.PathFindFileNameW(_In_ PTSTR pPath)
PTSTR None shlwapi.PathFindFileNameA(_In_ PTSTR pPath)
public string None.Remove(int startIndex None)
public int None.IndexOfAny(char[] anyOf None)
IQueryableTElement None None.CreateQueryTElement(Expression expression None)
public None None.Semaphore(int initialCount None,int maximumCount None,string name None,out bool createdNew)
LPCTSTR None shlwapi.UrlGetLocation(_In_ PCTSTR pszURL)
LPCTSTR None shlwapi.UrlGetLocationW(_In_ PCTSTR pszURL)
LPCTSTR None shlwapi.UrlGetLocationA(_In_ PCTSTR pszURL)
private void None.ShowPropertiesOfSlateBlue(PaintEventArgs e None)
private void None.Button1_Click(System.Object sender None,System.EventArgs e None)
public string None.ToString(string format None,IFormatProvider provider None)
Function None None.WMIDateStringToDate(dtmInstallDate None None)
short None None.ToInt16(IFormatProvider provider None)
public None None.GuidAttribute(string guid None)
public None None.ReflectionPermission(PermissionState state None)
DateTime None None.ToDateTime(IFormatProvider provider None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
public string None.ToString(string format None)
public void None.RemoveAt(int index None)
BOOL None shlwapi.PathFileExists(_In_ LPCTSTR pszPath)
BOOL None shlwapi.PathFileExistsW(_In_ LPCTSTR pszPath)
BOOL None shlwapi.PathFileExistsA(_In_ LPCTSTR pszPath)
public void None.FillEllipse(Brush brush None,float x None,float y None,float width None,float height None)
public bool None.IsNormalized(NormalizationForm normalizationForm None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
public void None.SetMethodBody(byte[] il None,int maxStack None,byte[] localSignature None,IEnumerableExceptionHandler exceptionHandlers None,IEnumerableint tokenFixups None)
public string None.ToString(string format None,IFormatProvider provider None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
public string None.ToString(string format None,IFormatProvider provider None)
static void None.WriteObjectInfo(object testObject None)
public string None.TrimStart(params char[] trimChars)
void None shlwapi.PathRemoveArgs(_Inout_ LPTSTR pszPath)
void None shlwapi.PathRemoveArgsW(_Inout_ LPTSTR pszPath)
void None shlwapi.PathRemoveArgsA(_Inout_ LPTSTR pszPath)
bool None None.Equals(T other None)
public None None.ReflectionPermission(PermissionState state None)
protected None None.MulticastDelegate(Object target None,string method None)
BOOL None ntdsapi.DsCrackUnquotedMangledRdn(_In_ LPCTSTR pszRDN,_In_ DWORD cchRDN,_Out_opt_ GUID *pGuid,_Out_opt_ DS_MANGLE_FOR *peDsMangleFor)
BOOL None ntdsapi.DsCrackUnquotedMangledRdnW(_In_ LPCTSTR pszRDN,_In_ DWORD cchRDN,_Out_opt_ GUID *pGuid,_Out_opt_ DS_MANGLE_FOR *peDsMangleFor)
BOOL None ntdsapi.DsCrackUnquotedMangledRdnA(_In_ LPCTSTR pszRDN,_In_ DWORD cchRDN,_Out_opt_ GUID *pGuid,_Out_opt_ DS_MANGLE_FOR *peDsMangleFor)
SerializableAttribute None None.ComVisibleAttribute(true None None)
HRESULT None shlwapi.UrlGetPart(_In_ PCTSTR pszIn,_Out_ PTSTR pszOut,_Inout_ DWORD *pcchOut,DWORD dwPart None,DWORD dwFlags None)
HRESULT None shlwapi.UrlGetPartW(_In_ PCTSTR pszIn,_Out_ PTSTR pszOut,_Inout_ DWORD *pcchOut,DWORD dwPart None,DWORD dwFlags None)
HRESULT None shlwapi.UrlGetPartA(_In_ PCTSTR pszIn,_Out_ PTSTR pszOut,_Inout_ DWORD *pcchOut,DWORD dwPart None,DWORD dwFlags None)
BOOL None shlwapi.UrlIsNoHistory(_In_ PCTSTR pszURL)
BOOL None shlwapi.UrlIsNoHistoryW(_In_ PCTSTR pszURL)
BOOL None shlwapi.UrlIsNoHistoryA(_In_ PCTSTR pszURL)
BOOL None shlwapi.UrlIs(_In_ PCTSTR pszUrl,URLIS UrlIs None)
BOOL None shlwapi.UrlIsW(_In_ PCTSTR pszUrl,URLIS UrlIs None)
BOOL None shlwapi.UrlIsA(_In_ PCTSTR pszUrl,URLIS UrlIs None)
public None None.ReflectionPermission(PermissionState state None)
void None None.button1_Click(object sender None,EventArgs e None)
public void None.EnumerateMetafile(Metafile metafile None,RectangleF destRect None,RectangleF srcRect None,GraphicsUnit srcUnit None,Graphics.EnumerateMetafileProc callback None)
public bool None.IsVisible(RectangleF rect None)
public None None.Semaphore(int initialCount None,int maximumCount None,string name None,out bool createdNew)
BOOL None shlwapi.PathIsSystemFolder(_In_opt_ LPCTSTR pszPath,_In_ DWORD dwAttrb)
BOOL None shlwapi.PathIsSystemFolderW(_In_opt_ LPCTSTR pszPath,_In_ DWORD dwAttrb)
BOOL None shlwapi.PathIsSystemFolderA(_In_opt_ LPCTSTR pszPath,_In_ DWORD dwAttrb)
LPTSTR None shlwapi.PathBuildRoot(_Out_ LPTSTR szRoot,_In_ int iDrive)
LPTSTR None shlwapi.PathBuildRootW(_Out_ LPTSTR szRoot,_In_ int iDrive)
LPTSTR None shlwapi.PathBuildRootA(_Out_ LPTSTR szRoot,_In_ int iDrive)
public None None.ReflectionPermission(PermissionState state None)
Display using None.current(en-us None None)
protected None None.MulticastDelegate(Object target None,string method None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
private void None.Form1_Load(object sender None,EventArgs e None)
string None None.ToString(string format None,IFormatProvider formatProvider None)
public None None.ReflectionPermission(PermissionState state None)
void None None.Add(TKey key None,TValue value None)
public IMessage None.SyncProcessMessage(IMessage msg None)
public None None.Semaphore(int initialCount None,int maximumCount None,string name None,out bool createdNew)
public string None.ToString(string format None)
uint32 None cimwin32.DeleteEx([out] string StopFileName,[in None None,optional] string StartFileName)
private void None.dataGridView1_CellMouseEnter(object sender None,DataGridViewCellEventArgs e None)
BOOL None shlwapi.UrlIsOpaque(_In_ PCTSTR pszURL)
BOOL None shlwapi.UrlIsOpaqueW(_In_ PCTSTR pszURL)
BOOL None shlwapi.UrlIsOpaqueA(_In_ PCTSTR pszURL)
public void None.SetMethodBody(byte[] il None,int maxStack None,byte[] localSignature None,IEnumerableExceptionHandler exceptionHandlers None,IEnumerableint tokenFixups None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
protected None None.MulticastDelegate(Object target None,string method None)
public None None.Semaphore(int initialCount None,int maximumCount None,string name None,out bool createdNew)
public void None.SetSecurityDescriptorBinaryForm(byte[] binaryForm None,AccessControlSections includeSections None)
public void None.Lock(long position None,long length None)
public int None.LastIndexOf(string value None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
public bool None.SelectNextControl(Control ctl None,bool forward None,bool tabStopOnly None,bool nested None,bool wrap None)
uint32 None cimwin32.SetDNSServerSearchOrder([in] string DNSServerSearchOrder[])
public string None.ToString(string format None,IFormatProvider provider None)
void None shlwapi.PathSetDlgItemPath(_In_ HWND hDlg,_In_ int id,_In_ LPCSTR pszPath)
void None shlwapi.PathSetDlgItemPathW(_In_ HWND hDlg,_In_ int id,_In_ LPCSTR pszPath)
void None shlwapi.PathSetDlgItemPathA(_In_ HWND hDlg,_In_ int id,_In_ LPCSTR pszPath)
BOOL None shlwapi.PathUnExpandEnvStrings(_In_ LPCTSTR pszPath,_Out_ LPTSTR pszBuf,_In_ UINT cchBuf)
BOOL None shlwapi.PathUnExpandEnvStringsW(_In_ LPCTSTR pszPath,_Out_ LPTSTR pszBuf,_In_ UINT cchBuf)
BOOL None shlwapi.PathUnExpandEnvStringsA(_In_ LPCTSTR pszPath,_Out_ LPTSTR pszBuf,_In_ UINT cchBuf)
public bool None.IsNormalized(NormalizationForm normalizationForm None)
public None None.FontFamily(string name None,FontCollection fontCollection None)
uint32 None cimwin32.SetDNSDomain([in] string DNSDomain)
bool None None.ToBoolean(IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.PadLeft(int totalWidth None)
public void None.ConvertDoubleDecimal(decimal decimalVal None)
public None None.ReflectionPermission(PermissionState state None)
private void None.Control1_TabIndexChanged(Object sender None,EventArgs e None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
public None None.ReflectionPermission(PermissionState state None)
public None None.FileIOPermission(PermissionState state None)
public DateTime None.AddMinutes(double value None)
uint32 None cimwin32.SetTcpUseRFC1122UrgentPointer([in] boolean TcpUseRFC1122UrgentPointer)
public bool None.EndsWith(string value None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
public None None.Rectangle(int x None,int y None,int width None,int height None)
public None None.ReflectionPermission(PermissionState state None)
BOOL None shlwapi.PathAppend(_Inout_ LPTSTR pszPath,_In_ LPCTSTR pszMore)
BOOL None shlwapi.PathAppendW(_Inout_ LPTSTR pszPath,_In_ LPCTSTR pszMore)
BOOL None shlwapi.PathAppendA(_Inout_ LPTSTR pszPath,_In_ LPCTSTR pszMore)
public void None.DrawRectangle(Pen pen None,Rectangle rect None)
public None None.DateTime(long ticks None,DateTimeKind kind None)
private void None.FromImageImage(PaintEventArgs e None)
uint32 None cimwin32.TakeOwnerShipEx([out] string StopFileName,[in None None,optional] string StartFileName,[in None None,optional] boolean Recursive)
SerializableAttribute None None.ComVisibleAttribute(true None None)
void None shlwapi.PathUnquoteSpaces(_Inout_ LPTSTR lpsz)
void None shlwapi.PathUnquoteSpacesW(_Inout_ LPTSTR lpsz)
void None shlwapi.PathUnquoteSpacesA(_Inout_ LPTSTR lpsz)
SerializableAttribute None None.ComVisibleAttribute(true None None)
BOOL None shlwapi.PathIsDirectory(_In_ LPCTSTR pszPath)
BOOL None shlwapi.PathIsDirectoryW(_In_ LPCTSTR pszPath)
BOOL None shlwapi.PathIsDirectoryA(_In_ LPCTSTR pszPath)
public string None.Replace(string oldValue None,string newValue None)
string None None.ToString(string format None,IFormatProvider formatProvider None)
public string None.ToString(string format None)
double None None.ToDouble(IFormatProvider provider None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
public bool None.EndsWith(string value None)
public None None.PrintSystemException(int errorCode None,string message None,string printerMessage None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
public None None.Semaphore(int initialCount None,int maximumCount None,string name None,out bool createdNew)
BOOL None shlwapi.PathRelativePathTo(_Out_ LPTSTR pszPath,_In_ LPCTSTR pszFrom,_In_ DWORD dwAttrFrom,_In_ LPCTSTR pszTo,_In_ DWORD dwAttrTo)
BOOL None shlwapi.PathRelativePathToW(_Out_ LPTSTR pszPath,_In_ LPCTSTR pszFrom,_In_ DWORD dwAttrFrom,_In_ LPCTSTR pszTo,_In_ DWORD dwAttrTo)
BOOL None shlwapi.PathRelativePathToA(_Out_ LPTSTR pszPath,_In_ LPCTSTR pszFrom,_In_ DWORD dwAttrFrom,_In_ LPCTSTR pszTo,_In_ DWORD dwAttrTo)
public void None.DrawCurve(Pen pen None,PointF[] points None)
public None None.ReflectionPermission(PermissionState state None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
BOOL None shlwapi.PathCanonicalize(_Out_ LPTSTR lpszDst,_In_ LPCTSTR lpszSrc)
BOOL None shlwapi.PathCanonicalizeW(_Out_ LPTSTR lpszDst,_In_ LPCTSTR lpszSrc)
BOOL None shlwapi.PathCanonicalizeA(_Out_ LPTSTR lpszDst,_In_ LPCTSTR lpszSrc)
uint32 None dnsserverpsprovider.Get([in] string ComputerName,[in] string Name,[out] DnsServerResponseRateLimitingExceptionlist cmdletOutput[])
public void None.Save(string filename None)
private void None.ShowPropertiesOfSlateBlue(PaintEventArgs e None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
public Type None.MakeGenericType(Type[] typeArguments None)
public void None.EnumerateMetafile(Metafile metafile None,Point destPoint None,Graphics.EnumerateMetafileProc callback None)
public int None.LastIndexOf(String source None,char value None,int startIndex None,int count None,CompareOptions options None)
private void None.dataGridView1_CellEnter(object sender None,DataGridViewCellEventArgs e None)
private void None.WriteDescriptionInfo(StylusPointCollection points None)
float None None.ToSingle(IFormatProvider provider None)
private void None.button1_Click(object sender None,EventArgs e None)
static char None.GetFirstCharacter(String s None)
private void None.DataGridView1_CellContextMenuStripChanged(Object sender None,DataGridViewCellEventArgs e None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
public EncoderParameters None.GetEncoderParameterList(Guid encoder None)
private void None.RoundingAndTruncatingRectangles(PaintEventArgs e None)
int None shlwapi.UrlCompare(_In_ PCTSTR psz1,_In_ PCTSTR psz2,BOOL fIgnoreSlash None)
int None shlwapi.UrlCompareW(_In_ PCTSTR psz1,_In_ PCTSTR psz2,BOOL fIgnoreSlash None)
int None shlwapi.UrlCompareA(_In_ PCTSTR psz1,_In_ PCTSTR psz2,BOOL fIgnoreSlash None)
public string None.ToString(string format None,IFormatProvider provider None)
bool None None.Equals(T other None)
private void None.CopyWithProgress(string[] filenames None)
public StringBuilder None.AppendFormat(string format None,object arg0 None)
protected None None.SafeHandle(IntPtr invalidHandleValue None,bool ownsHandle None)
public void None.DrawImage(Image image None,Rectangle destRect None,int srcX None,int srcY None,int srcWidth None,int srcHeight None,GraphicsUnit srcUnit None,ImageAttributes imageAttr None,Graphics..::.DrawImageAbort callback None)
void None None.button1_Click(object sender None,EventArgs e None)
public void None.DrawVisualStyleElementWindowSmallFrameRight1(PaintEventArgs e None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
public string None.ToString(string format None,IFormatProvider provider None)
protected None None.MulticastDelegate(Object target None,string method None)
public string None.ToString(string format None,IFormatProvider provider None)
public void None.Invalidate(Region region None)
private void None.Form1_Deactivate(Object sender None,EventArgs e None)
SerializableAttribute None None.ComVisibleAttribute(false None None)
public string None.ToString(string format None,IFormatProvider provider None)
public bool None.Contains(RectangleF rect None)
public string None.ToString(string format None,IFormatProvider provider None)
public None None.ReflectionPermission(PermissionState state None)
uint32 None cimwin32.Copy(string FileName None)
private void None.RoundingAndTruncatingRectangles(PaintEventArgs e None)
public int None.IndexOf(string value None,int startIndex None,int count None)
private void None.WriteDescriptionInfo(StylusPointCollection points None)
public bool None.StartsWith(string value None,bool ignoreCase None,CultureInfo culture None)
SerializableAttribute None None.ComVisibleAttribute(false None None)
SerializableAttribute None None.TypeConverterAttribute(System.UriTypeConverter None None)
public string None.ToString(string format None,IFormatProvider provider None)
public int None.IndexOf(char value None,int startIndex None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
public void None.ConvertByteDecimal(byte byteVal None)
public void None.FillPolygon(Brush brush None,Point[] points None,FillMode fillMode None)
public void None.DrawStretched(Graphics g None,Rectangle targetRect None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
void None None.button1_Click(object sender None,EventArgs e None)
public object None.ConvertFromString(ITypeDescriptorContext context None,string text None)
private void None.ShowPropertiesOfSlateBlue(PaintEventArgs e None)
public None None.FontFamily(string name None,FontCollection fontCollection None)
public string None.PadLeft(int totalWidth None)
public OracleTransaction None.BeginTransaction(IsolationLevel il None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
HRESULT None shlwapi.UrlEscape(_In_ PCTSTR pszURL,_Out_ PTSTR pszEscaped,_Inout_ DWORD *pcchEscaped,DWORD dwFlags None)
HRESULT None shlwapi.UrlEscapeW(_In_ PCTSTR pszURL,_Out_ PTSTR pszEscaped,_Inout_ DWORD *pcchEscaped,DWORD dwFlags None)
HRESULT None shlwapi.UrlEscapeA(_In_ PCTSTR pszURL,_Out_ PTSTR pszEscaped,_Inout_ DWORD *pcchEscaped,DWORD dwFlags None)
Uint32 None cimwin32.Disable([out] boolean rebootNeeded)
BOOL None shlwapi.PathUnmakeSystemFolder(_In_ LPTSTR pszPath)
BOOL None shlwapi.PathUnmakeSystemFolderW(_In_ LPTSTR pszPath)
BOOL None shlwapi.PathUnmakeSystemFolderA(_In_ LPTSTR pszPath)
public void None.Invalidate(Region region None)
static bool None.IsFileURI(String path None)
private void None.button1_Click(object sender None,EventArgs e None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
public Assembly None.Load(AssemblyName assemblyRef None)
public void None.Equals_Example(PaintEventArgs e None)
public string None.ToString(string format None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
public void None.ConvertDoubleBool(double doubleVal None)
uint32 None cimwin32.SetIPXFrameTypeNetworkPairs([in] string IPXNetworkNumber[],[in] uint32 IPXFrameType[])
bool None None.Equals(T other None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
public void None.Save(string filename None)
Assembly None None.Load(byte[] rawAssembly None,byte[] rawSymbolStore None,Evidence securityEvidence None)
private void None.myButton_Click(object sender None,EventArgs e None)
public string None.ToString(string format None,IFormatProvider provider None)
public boolean None.Equals(Object obj None)
void None None.button1_Click(object sender None,EventArgs e None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
public int None.IndexOf(Link link None)
public None None.InstallException(string message None,Exception innerException None)
DWORD None ntdsapi.DsReplicaGetInfo2(_In_ HANDLE hDS,_In_ DS_REPL_INFO_TYPE InfoType,_In_opt_ LPCWSTR pszObject,_In_opt_ UUID *puuidForSourceDsaObjGuid,_In_opt_ LPCWSTR pszAttributeName,_In_opt_ LPCWSTR pszValue,_In_ DWORD dwFlags,_In_ DWORD dwEnumerationContext,_Out_ VOID **ppInfo)
DWORD None ntdsapi.DsReplicaGetInfo2W(_In_ HANDLE hDS,_In_ DS_REPL_INFO_TYPE InfoType,_In_opt_ LPCWSTR pszObject,_In_opt_ UUID *puuidForSourceDsaObjGuid,_In_opt_ LPCWSTR pszAttributeName,_In_opt_ LPCWSTR pszValue,_In_ DWORD dwFlags,_In_ DWORD dwEnumerationContext,_Out_ VOID **ppInfo)
public None None.ConcurrentDictionary(int concurrencyLevel None,IEnumerableKeyValuePairTKey None None, TValue collection None,IEqualityComparerTKey comparer None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
public void None.DrawVisualStyleElementMenuBandNewApplicationButton1(PaintEventArgs e None)
public string None.ToString(string format None,IFormatProvider provider None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
public int None.LastIndexOfAny(char[] anyOf None,int startIndex None,int count None)
public StringBuilder None.AppendFormat(string format None,object arg0 None)
public None None.String(char[] value None)
public int None.IndexOf(string value None,StringComparison comparisonType None)
private void None.DataGridView1_RowStateChanged(Object sender None,DataGridViewRowStateChangedEventArgs e None)
int None None.ToInt32(IFormatProvider provider None)
BOOL None shlwapi.PathIsLFNFileSpec(_In_ LPCTSTR pszName)
BOOL None shlwapi.PathIsLFNFileSpecW(_In_ LPCTSTR pszName)
BOOL None shlwapi.PathIsLFNFileSpecA(_In_ LPCTSTR pszName)
private void None.AboutDialog_Load(object sender None,EventArgs e None)
public int None.IndexOfAny(char[] anyOf None,int startIndex None)
public None None.DateTime(long ticks None)
public string None.ToString(string format None,IFormatProvider provider None)
Assembly None None.Load(byte[] rawAssembly None,byte[] rawSymbolStore None,Evidence securityEvidence None)
private void None.button1_Click(object sender None,EventArgs e None)
public boolean None.Equals(Object obj None)
Assembly None None.Load(AssemblyName assemblyRef None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
public object None.GetData(string name None)
public string None.GetDayName(DayOfWeek dayofweek None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
public void None.Save(string filename None)
public void None.DrawImage(Image image None,Rectangle destRect None,int srcX None,int srcY None,int srcWidth None,int srcHeight None,GraphicsUnit srcUnit None,ImageAttributes imageAttr None,Graphics..::..DrawImageAbort callback None)
public bool None.Equals(string value None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
private void None.ListDragSource_GiveFeedback(object sender None,System.Windows.Forms.GiveFeedbackEventArgs e None)
public string None.Replace(string oldValue None,string newValue None)
public bool None.Equals(DateTime value None)
public string None.Replace(string oldValue None,string newValue None)
public int None.IndexOf(string value None,int startIndex None,int count None)
public void None.DrawStretched(Graphics g None,Rectangle targetRect None)
string None None.ToString(string format None,IFormatProvider formatProvider None)
public string None.ToString(string format None,IFormatProvider provider None)
public None None.DateTime(int year None,int month None,int day None,int hour None,int minute None,int second None,int millisecond None,Calendar calendar None)
public void None.EnumerateMetafile(Metafile metafile None,PointF destPoint None,Graphics.EnumerateMetafileProc callback None,IntPtr callbackData None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
public int None.IndexOf(Link link None)
string None None.ToString(string format None,IFormatProvider formatProvider None)
protected None None.InvalidBodyAccessException(string message None)
public string None.ToString(string format None,IFormatProvider provider None)
void None None.button1_Click(object sender None,EventArgs e None)
Assembly None None.Load(byte[] rawAssembly None,byte[] rawSymbolStore None,Evidence securityEvidence None)
public void None.ConvertDoubleBool(double doubleVal None)
long None None.ToInt64(IFormatProvider provider None)
public int None.CompareTo(object value None)
public int None.GetRowsHeight(DataGridViewElementStates includeFilter None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
public None None.String(char[] value None)
public None None.DateTime(long ticks None)
public int None.IndexOf(string value None,int startIndex None,int count None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
private void None.DataGridView1_RowErrorTextNeeded(Object sender None,DataGridViewRowErrorTextNeededEventArgs e None)
public DateTime None.AddMilliseconds(double value None)
public int None.LastIndexOf(String source None,char value None)
public void None.RunOracleTransaction(string connectionString None)
HRESULT None shlwapi.UrlHash(_In_ PCTSTR pszURL,_Out_ BYTE *pbHash,DWORD cbHash None)
HRESULT None shlwapi.UrlHashW(_In_ PCTSTR pszURL,_Out_ BYTE *pbHash,DWORD cbHash None)
HRESULT None shlwapi.UrlHashA(_In_ PCTSTR pszURL,_Out_ BYTE *pbHash,DWORD cbHash None)
public string None.GetDayName(DayOfWeek dayofweek None)
public int None.IndexOf(string value None,int startIndex None,int count None)
public string None.ToString(string format None,IFormatProvider provider None)
public None None.InstallException(string message None,Exception innerException None)
public string None.Replace(string oldValue None,string newValue None)
public None None.SqlTypeException(string message None,Exception e None)
uint32 None cimwin32.SetTcpipNetbios([in] uint32 TcpipNetbiosOptions)
public void None.FillPolygon(Brush brush None,PointF[] points None)
public void None.Save(string filename None)
public int None.LastIndexOf(char value None,int startIndex None,int count None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
private void None.SelectNode(TreeNode node None)
SerializableAttribute None None.ClassInterfaceAttribute(ClassInterfaceType.AutoDual None None)
protected void None.OkToSingle_Click(object sender None,EventArgs e None)
public None None.PrintSystemException(int errorCode None,string message None,Exception innerException None)
long None None.ToInt64(IFormatProvider provider None)
private void None.DataGridView1_RowErrorTextNeeded(Object sender None,DataGridViewRowErrorTextNeededEventArgs e None)
public int None.LastIndexOf(String source None,String value None,CompareOptions options None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
public string None.ToTitleCase(string str None)
private void None.SplitContainer1_SplitterMoving(Object sender None,SplitterCancelEventArgs e None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
int None None.ToInt32(IFormatProvider provider None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
public None None.SqlTypeException(string message None,Exception e None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public StringBuilder None.AppendFormat(string format None,object arg0 None)
long None None.ToInt64(IFormatProvider provider None)
static bool None.IsFileURI(String path None)
FlagsAttribute None None.ComVisibleAttribute(true None None)
public boolean None.AbortRecord(LogRecord log None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
public void None.Save(string filename None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
public void None.SetClip(Region region None,CombineMode combineMode None)
public boolean None.Equals(Object obj None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
public int None.CompareTo(object value None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
static char None.GetFirstCharacter(String s None)
public string None.ToString(string format None,IFormatProvider formatProvider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public None None.InstallException(string message None,Exception innerException None)
public string None.ToString(string format None,IFormatProvider provider None)
public int None.IndexOf(string value None,int startIndex None,int count None)
public string None.Replace(string oldValue None,string newValue None)
public void None.ConvertDoubleBool(double doubleVal None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
public int None.CompareTo(DateTime value None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
public void None.FillPolygon(Brush brush None,PointF[] points None)
SerializableAttribute None None.AttributeUsageAttribute(AttributeTargets.Enum None None,Inherited=false None None)
long None None.ToInt64(IFormatProvider provider None)
public int None.IndexOf(string value None,int startIndex None,int count None)
static bool None.IsFileURI(String path None)
private void None.DataGridView1_ColumnStateChanged(Object sender None,DataGridViewColumnStateChangedEventArgs e None)
private void None.button1_Click(object sender None,System.EventArgs e None)
public string None.ConvertToInvariantString(ITypeDescriptorContext context None,object value None)
public string None.ToTitleCase(string str None)
public int None.CompareTo(bool value None)
decimal None None.ToDecimal(IFormatProvider provider None)
private void None.dataGridView1_SortCompare(object sender None,DataGridViewSortCompareEventArgs e None)
public DateTime None.AddYears(DateTime time None,int years None)
public string None.GetDayName(DayOfWeek dayofweek None)
static bool None.IsFileURI(String path None)
public int None.IndexOf(string value None,int startIndex None,int count None)
static char None.GetFirstCharacter(String s None)
public int None.IndexFromPoint(Point p None)
public string None.GetAbbreviatedEraName(int era None)
private void None.DemonstrateRegionData2(PaintEventArgs e None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.Replace(string oldValue None,string newValue None)
public string None.ConvertToString(ITypeDescriptorContext context None,object value None)
uint32 None cimwin32.SetTcpipNetbios([in] uint32 TcpipNetbiosOptions)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.Replace(string oldValue None,string newValue None)
private void None.DataGridView1_RowErrorTextNeeded(Object sender None,DataGridViewRowErrorTextNeededEventArgs e None)
public string None.ToString(string format None,IFormatProvider provider None)
public int None.IndexOf(string value None,int startIndex None,int count None)
public boolean None.Equals(Object obj None)
public StringBuilder None.AppendFormat(string format None,Object arg0 None)
public void None.SetClip(Region region None,CombineMode combineMode None)
public object None.ConvertFromString(string text None)
public string None.PadRight(int totalWidth None)
uint32 None dnsserverpsprovider.AddByParameters([in] string IPAddress[],[in] string NameServer,[in] string ComputerName,[in] boolean PassThru,[out] DnsServerRootHint cmdletOutput)
public int None.IndexOf(char value None,int startIndex None,int count None)
int None None.CompareTo(T other None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
SerializableAttribute None None.AttributeUsageAttribute(AttributeTargets.Enum None None,Inherited=false None None)
static char None.GetFirstCharacter(String s None)
ulong None None.ToUInt64(IFormatProvider provider None)
Assembly None None.Load(string assemblyString None,Evidence assemblySecurity None)
int None None.CompareTo(T other None)
SerializableAttribute None None.AttributeUsageAttribute(AttributeTargets.Enum None None,Inherited=false None None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
static bool None.IsFileURI(String path None)
public DateTime None.AddYears(DateTime time None,int years None)
public void None.ConvertDoubleBool(double doubleVal None)
public None None.DateTime(int year None,int month None,int day None,Calendar calendar None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
public string None.ConvertToInvariantString(ITypeDescriptorContext context None,Object value None)
private void None.ListView1_ColumnReordered(Object sender None,ColumnReorderedEventArgs e None)
protected void None.OnBackColorChanged(EventArgs e None)
public int None.GetSecond(DateTime time None)
public string None.PadRight(int totalWidth None)
private void None.button2_Click(object sender None,System.EventArgs e None)
static char None.GetFirstCharacter(String s None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public bool None.Equals(sbyte obj None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
SerializableAttribute None None.ClassInterfaceAttribute(ClassInterfaceType.None None None)
public int None.CompareTo(int value None)
private void None.currencyTextBox_TextChanged(object sender None,EventArgs e None)
public bool None.IsBaseOf(Uri uri None)
public string None.Replace(string oldValue None,string newValue None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
public string None.ToUpper(CultureInfo culture None)
private void None.Control1_BackgroundImageLayoutChanged(Object sender None,EventArgs e None)
public void None.Invalidate(Rectangle rc None)
public void None.Xor(Rectangle rect None)
private void None.ToolStrip1_ItemClicked(Object sender None,ToolStripItemClickedEventArgs e None)
public string None.ConvertToInvariantString(ITypeDescriptorContext context None,Object value None)
private void None.button2_Click(object sender None,System.EventArgs e None)
int None None.ComparisonT(T x None,T y None)
public bool None.Equals(bool obj None)
public int None.IndexOfAny(char[] anyOf None,int startIndex None,int count None)
public string None.GetAbbreviatedDayName(DayOfWeek dayofweek None)
public string None.GetMonthName(int month None)
private void None.treeView1_ItemDrag(object sender None,ItemDragEventArgs e None)
public int None.IndexOf(char value None,int startIndex None,int count None)
public string None.Remove(int startIndex None)
public string None.ToTitleCase(string str None)
uint32 None dnsserverpsprovider.Get([in] string ComputerName,[in] string Name,[out] DnsServerTrustAnchor cmdletOutput[])
int None None.CompareTo(T other None)
public void None.SetData(string name None,Object data None)
protected void None.SetHandle(IntPtr handle None)
public int None.GetNodeCount(bool includeSubTrees None)
private void None.Form1_Load(object sender None,System.EventArgs e None)
public void None.DowngradeFromWriterLock(ref LockCookie lockCookie)
static char None.GetFirstCharacter(String s None)
public string None.ToString(string format None,IFormatProvider provider None)
private void None.button1_Click(object sender None,System.EventArgs e None)
public bool None.IsVisible(float x None,float y None,float width None,float height None,Graphics g None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
public string None.ToString(string format None,IFormatProvider provider None)
public StringBuilder None.AppendFormat(string format None,object arg0 None)
static char None.GetFirstCharacter(String s None)
public string None.Replace(char oldChar None,char newChar None)
public void None.Invalidate(bool invalidateChildren None)
static bool None.IsFileURI(String path None)
public string None.ToString(string format None)
protected void None.SetVisibleCore(boolean value None)
int None None.CompareTo(T other None)
public boolean None.Equals(Object obj None)
public void None.FromArgb2(PaintEventArgs e None)
public int None.IndexOf(char value None,int startIndex None,int count None)
public string None.ToString(string format None,IFormatProvider provider None)
HRESULT None None.New1(int ar[10] None)
private void None.CopyWithProgress(string[] filenames None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
public string None.ToString(string format None)
uint32 None dnsserverpsprovider.GetByName([in] string Name,[in] string ComputerName,[out] DnsServerDirectoryPartition cmdletOutput)
private void None.ListView1_ColumnReordered(Object sender None,ColumnReorderedEventArgs e None)
public void None.Invalidate(bool invalidateChildren None)
public string None.ToUpper(CultureInfo culture None)
public boolean None.Equals(Object obj None)
public string None.ConvertToInvariantString(ITypeDescriptorContext context None,Object value None)
protected void None.OnBackColorChanged(EventArgs e None)
public None None.DateTime(int year None,int month None,int day None,int hour None,int minute None,int second None,Calendar calendar None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
void None None.Remove(object value None)
private void None.buttonNewCustomer_Click(object sender None,EventArgs e None)
private void None.button1_Click(object sender None,System.EventArgs e None)
HRESULT None None.NeedsVirtualAddressSpace([in] LPVOID startAddress,[in] SIZE_T size)
public int None.CompareTo(object value None)
static bool None.IsFileURI(String path None)
public Type None.GetInterface(string name None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
uint32 None dnsserverpsprovider.Remove([in] string Name,[in] boolean PassThru,[in] boolean Force,[in] string ComputerName,[out] DnsServerClientSubnet cmdletOutput)
public string None.ToString(string format None,IFormatProvider provider None)
int None None.CompareTo(T other None)
public string None.ToString(string format None,IFormatProvider provider None)
public None None.DateTime(int year None,int month None,int day None,int hour None,int minute None,int second None,int millisecond None,DateTimeKind kind None)
public string None.GetMonthName(int month None)
public string None.Remove(int startIndex None)
public void None.Transform(Matrix matrix None)
public string None.Replace(char oldChar None,char newChar None)
public object None.Invoke(Delegate method None,params object[] args)
public string None.ToString(string format None)
public None None.DateTime(long ticks None,DateTimeKind kind None)
FieldInfo None None.GetField(string name None,BindingFlags bindingAttr None)
public int None.IndexOf(char value None,int startIndex None,int count None)
private void None.Control1_ChangeUICues(Object sender None,UICuesEventArgs e None)
public int None.IndexOf(string value None,int startIndex None,StringComparison comparisonType None)
public DataSet None.CreateCmdsAndUpdate(string connectionString None,string queryString None)
public IPermission None.CreateIdentityPermission(Evidence evidence None)
public string None.ToString(string format None)
public string None.Replace(char oldChar None,char newChar None)
private void None.buttonNewCustomer_Click(object sender None,EventArgs e None)
public DateTime None.AddTicks(long value None)
private void None.treeView1_ItemDrag(object sender None,ItemDragEventArgs e None)
public string None.ToString(string format None,IFormatProvider provider None)
uint None None.ToUInt32(IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
private void None.button1_Click(object sender None,System.EventArgs e None)
public string None.ToString(IFormatProvider provider None)
public int None.GetTerrestrialBranch(int sexagenaryYear None)
public int None.CompareTo(Object value None)
public object None.GetFormat(Type formatType None)
static bool None.IsFileURI(String path None)
private void None.SetAndFillClip(PaintEventArgs e None)
private void None.button1_Click(object sender None,System.EventArgs e None)
public int None.IndexOf(string value None,int startIndex None)
public None None.ItemDragEventArgs(MouseButtons button None,object item None)
static char None.GetFirstCharacter(String s None)
public int None.LastIndexOfAny(char[] anyOf None,int startIndex None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public int None.CompareTo(Object value None)
public IPermission None.CreateIdentityPermission(Evidence evidence None)
private void None.button1_MouseDown(object sender None,MouseEventArgs e None)
public PreProcessControlState None.PreProcessControlMessage(ref Message msg)
public DateTime None.Add(TimeSpan value None)
public bool None.StartsWith(string value None)
public Control None.GetChildAtPoint(Point pt None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
public bool None.Equals(float obj None)
static bool None.IsFileURI(String path None)
private void None.ToolStrip1_ItemClicked(Object sender None,ToolStripItemClickedEventArgs e None)
int None None.CompareTo(T other None)
public string None.ToString(string format None,IFormatProvider provider None)
public void None.AddMetafileComment(byte[] data None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
static char None.GetFirstCharacter(String s None)
uint32 None dnsserverpsprovider.AddByFileReverseLookupZone([in] boolean LoadExisting,[in] string MasterServers[],[in] string NetworkId,[in] string ComputerName,[in] string ZoneFile,[in] boolean PassThru,[out] DnsServerStubZone cmdletOutput[])
protected MarshalByRefObject None.MemberwiseClone(bool cloneIdentity None)
public string None.ToString(string format None,IFormatProvider provider None)
private void None.ToolStripItem1_MouseHover(Object sender None,EventArgs e None)
public bool None.StartsWith(string value None)
public None None.DateTime(int year None,int month None,int day None)
public string None.GetEraName(int era None)
protected void None.OnMouseClick(MouseEventArgs e None)
public IPermission None.CreateIdentityPermission(Evidence evidence None)
static char None.GetFirstCharacter(String s None)
public string None.ToString(string format None)
public int None.LastIndexOf(string value None,int startIndex None,StringComparison comparisonType None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
private void None.Form1_Load(object sender None,EventArgs e None)
private void None.Control1_BackgroundImageLayoutChanged(Object sender None,EventArgs e None)
public string None.ToString(string format None,IFormatProvider provider None)
public IAsyncResult None.BeginInvoke(Delegate method None,params object[] args)
SerializableAttribute None None.ComVisibleAttribute(true None None)
public None None.MissingSatelliteAssemblyException(string message None)
static bool None.IsFileURI(String path None)
public string None.ToString(string format None,IFormatProvider provider None)
public None None.DateTime(long ticks None)
public void None.Add(T item None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
private void None.ToolStripItem1_MouseHover(Object sender None,EventArgs e None)
static bool None.IsFileURI(String path None)
protected Size None.SizeFromClientSize(Size clientSize None)
public int None.LastIndexOf(string value None,int startIndex None,StringComparison comparisonType None)
public Control None.GetChildAtPoint(Point pt None)
public string None.GetAbbreviatedMonthName(int month None)
public string None.Remove(int startIndex None)
private void None.showCheckedNodesButton_Click(object sender None,EventArgs e None)
public int None.CompareTo(float value None)
static char None.GetFirstCharacter(String s None)
private void None.DrawImagePointF(PaintEventArgs e None)
static char None.GetFirstCharacter(String s None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
public string None.ToString(string format None,IFormatProvider provider None)
static bool None.IsFileURI(String path None)
public None None.DateTime(int year None,int month None,int day None,int hour None,int minute None,int second None,int millisecond None,Calendar calendar None,DateTimeKind kind None)
public string None.Replace(char oldChar None,char newChar None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
public DateTime None.Add(TimeSpan value None)
public void None.Add(T item None)
public DateTime None.AddDays(double value None)
void None None.Add(T item None)
public bool None.StartsWith(string value None)
static char None.GetFirstCharacter(String s None)
private void None.Form1_Load(object sender None,EventArgs e None)
protected None None.ArgumentOutOfRangeException(SerializationInfo info None,StreamingContext context None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
public void None.SetState(string targetStateName None)
public string None.ToString(string format None,IFormatProvider provider None)
public bool None.StartsWith(string value None)
protected None None.Uri(SerializationInfo serializationInfo None,StreamingContext streamingContext None)
public string None.ToString(string format None,IFormatProvider provider None)
public boolean None.IsLeapDay(int year None,int month None,int day None,int era None)
void None None.Add(T item None)
public string None.Normalize(NormalizationForm normalizationForm None)
public string None.Remove(int startIndex None)
uint32 None dnsserverpsprovider.Enable([in] string Level,[in] string Name,[in] string ComputerName,[in] string ZoneName,[in] boolean Force)
public None None.ListViewItem(string text None,int imageIndex None)
private void None.RichTextBox1_LinkClicked(Object sender None,LinkClickedEventArgs e None)
private void None.Control1_MouseDoubleClick(Object sender None,MouseEventArgs e None)
public string None.ToString(IFormatProvider provider None)
public DateTime None.Add(TimeSpan value None)
public string None.ToString(string format None,IFormatProvider provider None)
public bool None.Equals(float obj None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
public DateTime None.AddMilliseconds(DateTime time None,double milliseconds None)
private void None.GetTable(DataRow row None)
sbyte None None.ToSByte(IFormatProvider provider None)
public int None.LastIndexOf(string value None,int startIndex None,StringComparison comparisonType None)
public void None.Add(T item None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
public DateTime None.AddDays(double value None)
public void None.Add(T item None)
public None None.ListViewItem(string[] items None,ListViewGroup group None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.GetEraName(int era None)
public string None.ToString(string format None,IFormatProvider provider None)
public None None.ToolStripItemRenderEventArgs(Graphics g None,ToolStripItem item None)
private void None.ToolStripItem1_DragLeave(Object sender None,EventArgs e None)
public None None.ArgumentOutOfRangeException(string paramName None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None)
public string None.GetAbbreviatedEraName(int era None)
static char None.GetFirstCharacter(String s None)
protected void None.InvokeGotFocus(Control toInvoke None,EventArgs e None)
public int None.FindIndex(PredicateT match None)
public None None.ArgumentOutOfRangeException(string paramName None,string message None)
static char None.GetFirstCharacter(String s None)
public void None.DrawOverflowButtonBackground(ToolStripItemRenderEventArgs e None)
public int None.LastIndexOf(string value None,int startIndex None,int count None)
protected void None.RaiseDragEvent(object key None,DragEventArgs e None)
public int None.IndexOf(String source None,char value None,int startIndex None,int count None,CompareOptions options None)
public int None.CompareTo(object value None)
public int None.GetHour(DateTime time None)
void None None.Add(T item None)
public None None.CultureInfo(string name None)
public int None.IndexOfAny(char[] anyOf None)
public string None.Substring(int startIndex None)
public boolean None.IsLeapDay(int year None,int month None,int day None,int era None)
public None None.ArgumentOutOfRangeException(string paramName None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
void None None.EventHandler(object sender None,EventNameEventArgs e None)
private void None.Control1_GotFocus(Object sender None,EventArgs e None)
public int None.LastIndexOf(string value None,int startIndex None,StringComparison comparisonType None)
public void None.ControlSetFocus(Control control None)
public bool None.Contains(string value None)
protected void None.OnMouseHover(EventArgs e None)
public None None.DateTime(int year None,int month None,int day None,int hour None,int minute None,int second None,DateTimeKind kind None)
private void None.DataGrid1_Click(object sender None,System.EventArgs e None)
public int None.CompareTo(object value None)
private void None.textBox1_Enter(object sender None,System.EventArgs e None)
private void None.ListDragSource_QueryContinueDrag(object sender None,System.Windows.Forms.QueryContinueDragEventArgs e None)
public None None.DllNotFoundException(string message None)
public void None.DrawItemBackground(ToolStripItemRenderEventArgs e None)
protected void None.RaiseKeyEvent(object key None,KeyEventArgs e None)
static char None.GetFirstCharacter(String s None)
private void None.ToolStripRenderer1_RenderSeparator(Object sender None,ToolStripSeparatorRenderEventArgs e None)
private void None.GetAllErrs(DataRow row None)
protected void None.OnLeave(EventArgs e None)
void None None.Add(T item None)
public string None.ToString(string format None,IFormatProvider provider None)
public DateTime None.Add(TimeSpan value None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
protected void None.RaiseDragEvent(object key None,DragEventArgs e None)
private void None.menuItemHelpAbout_Click(object sender None,EventArgs e None)
static char None.GetFirstCharacter(String s None)
public DateTime None.Add(TimeSpan value None)
public DateTime None.Add(TimeSpan value None)
public None None.DateTime(int year None,int month None,int day None,int hour None,int minute None,int second None,int millisecond None,DateTimeKind kind None)
private void None.Control1_StyleChanged(Object sender None,EventArgs e None)
public TimeSpan None.Subtract(DateTime value None)
public int None.LastIndexOfAny(char[] anyOf None)
public string None.Substring(int startIndex None)
public void None.AnonymousIdentification_Creating(object sender None,AnonymousIdentificationEventArgs args None)
public int None.IndexOfAny(char[] anyOf None,int startIndex None)
private void None.RichTextBox1_LinkClicked(Object sender None,LinkClickedEventArgs e None)
private void None.Control1_ClientSizeChanged(Object sender None,EventArgs e None)
public DateTime None.AddDays(double value None)
public int None.BinarySearch(Object value None,IComparer comparer None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
uint32 None None.QuiesceDevice([in] boolean Quiesce)
public TimeSpan None.Subtract(DateTime value None)
private void None.button1_MouseDown(object sender None,MouseEventArgs e None)
public None None.DateTimeOffset(long ticks None,TimeSpan offset None)
public DateTime None.AddMinutes(double value None)
public int None.LastIndexOf(string value None,int startIndex None,int count None,StringComparison comparisonType None)
protected void None.RaiseKeyEvent(object key None,KeyEventArgs e None)
public MethodInfo None.GetMethod(string name None,BindingFlags bindingAttr None,Binder binder None,CallingConventions callConvention None,Type[] types None,ParameterModifier[] modifiers None)
static char None.GetFirstCharacter(String s None)
private void None.GetAllErrs(DataRow row None)
static char None.GetFirstCharacter(String s None)
public string None.Normalize(NormalizationForm normalizationForm None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
public void None.DrawVisualStyleElementWindowVerticalThumb1(PaintEventArgs e None)
public DateTime None.Add(TimeSpan value None)
public void None.SetConstant(object defaultValue None)
public int None.LastIndexOf(string value None,StringComparison comparisonType None)
public DateTime None.AddHours(double value None)
public IAsyncResult None.BeginInvoke(Delegate method None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public int None.Add(LinkLabel.Link value None)
public None None.DateTime(int year None,int month None,int day None,int hour None,int minute None,int second None,int millisecond None,Calendar calendar None,DateTimeKind kind None)
private void None.ToolStripRenderer1_RenderImageMargin(Object sender None,ToolStripRenderEventArgs e None)
private void None.RichTextBox1_LinkClicked(Object sender None,LinkClickedEventArgs e None)
public string None.Substring(int startIndex None)
public int None.GetEra(string eraName None)
public bool None.Contains(string value None)
public DateTime None.Add(TimeSpan value None)
public DateTime None.Add(TimeSpan value None)
public void None.AnonymousIdentification_Creating(object sender None,AnonymousIdentificationEventArgs args None)
protected HorizontalAlignment None.RtlTranslateHorizontal(HorizontalAlignment align None)
public int None.IndexOfAny(char[] anyOf None,int startIndex None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
private void None.comboBox1_SelectedIndexChanged(Object sender None,EventArgs e None)
public TimeSpan None.Subtract(DateTime value None)
public Type None.GetNestedType(string name None)
private void None.button1_MouseDown(object sender None,MouseEventArgs e None)
public Rectangle None.RectangleToScreen(Rectangle r None)
public void None.Insert(int index None,string text None,int width None)
private void None.ToolStripRenderer1_RenderSplitButtonBackground(Object sender None,ToolStripItemRenderEventArgs e None)
uint32 None dnsserverpsprovider.Add([in] string Name,[in] string Forwarder[],[in] boolean EnableRecursion,[in] boolean PassThru,[in] string ComputerName,[out] DnsServerRecursionScope cmdletOutput)
protected void None.InvokePaintBackground(Control c None,PaintEventArgs e None)
public int None.LastIndexOf(string value None)
public int None.GetEra(DateTime time None)
static char None.GetFirstCharacter(String s None)
public None None.String(char[] value None,int startIndex None,int length None)
public None None.CultureInfo(string name None,bool useUserOverride None)
public Control None.GetChildAtPoint(Point pt None,GetChildAtPointSkip skipValue None)
public int None.CompareTo(string strB None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public int None.IndexOfAny(char[] anyOf None,int startIndex None)
public int None.LastIndexOf(char value None)
public int None.IndexOf(char value None)
public Rectangle None.RectangleToScreen(Rectangle r None)
public None None.String(char c None,int count None)
protected void None.OnMove(EventArgs e None)
private void None.BindControl(DataTable myTable None)
public string None.Substring(int startIndex None)
private void None.dataGridView1_CellStateChanged(object sender None,DataGridViewCellStateChangedEventArgs e None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
private void None.ToolStripRenderer1_RenderSplitButtonBackground(Object sender None,ToolStripItemRenderEventArgs e None)
public TimeSpan None.Subtract(DateTimeOffset value None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
public DateTime None.AddDays(double value None)
uint32 None None.SetPowerState([in] uint16 PowerState,[in] datetime Time)
private void None.toggleRowStylesBtn_Click(System.Object sender None,System.EventArgs e None)
private void None.AutoSizeControl(Control control None,int textPadding None)
public int None.LastIndexOf(char value None,int startIndex None)
public DateTime None.AddSeconds(double value None)
private void None.Form1_Load(object sender None,EventArgs e None)
public DateTime None.AddYears(int value None)
private void None.Form1_FormClosing(object sender None,FormClosingEventArgs e None)
public int None.IndexOf(string value None,int startIndex None,int count None,StringComparison comparisonType None)
public void None.Serialize(XmlWriter xmlWriter None,object o None)
Display using None.current(en-us None None)
uint32 None None.OnlineDevice([in] boolean Online)
protected void None.InvokePaintBackground(Control c None,PaintEventArgs e None)
public string None.Substring(int startIndex None,int length None)
public DateTime None.AddSeconds(double value None)
public int None.LastIndexOf(char value None,int startIndex None,int count None)
public bool None.EndsWith(string value None,bool ignoreCase None,CultureInfo culture None)
public string None.ToString(IFormatProvider provider None)
protected void None.AccessibilityNotifyClients(AccessibleEvents accEvent None,int objectID None,int childID None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
public void None.DrawLabelBackground(ToolStripItemRenderEventArgs e None)
private void None.AutoSizeControl(Control control None,int textPadding None)
public int None.GetTerrestrialBranch(int sexagenaryYear None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
private void None.AutoSizeControl(Control control None,int textPadding None)
public string None.ToString(string format None,IFormatProvider provider None)
private void None.Control1_HandleDestroyed(Object sender None,EventArgs e None)
public void None.PerformLayout(Control affectedControl None,string affectedProperty None)
private void None.ToolStripItem1_DisplayStyleChanged(Object sender None,EventArgs e None)
private void None.Control1_MarginChanged(Object sender None,EventArgs e None)
public None None.ArgumentOutOfRangeException(string paramName None,object actualValue None,string message None)
private void None.Form1_InputLanguageChanging(Object sender None,InputLanguageChangingEventArgs e None)
public void None.ControlSetFocus(Control control None)
public void None.SetAuditRule(MutexAuditRule rule None)
public void None.DrawLabelBackground(ToolStripItemRenderEventArgs e None)
public string None.ToString(string format None,IFormatProvider provider None)
private void None.Form1_Load(object sender None,EventArgs e None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public DateTime None.AddDays(double value None)
string None None.ToString(IFormatProvider provider None)
private void None.button1_Click(object sender None,System.EventArgs e None)
public string None.ToString(string format None,IFormatProvider provider None)
public None None.DateTime(int year None,int month None,int day None,int hour None,int minute None,int second None,int millisecond None)
protected void None.UpdateBounds(int x None,int y None,int width None,int height None)
private void None.button1_Click(object sender None,EventArgs e None)
public void None.RemoveAccessRuleAll(MutexAccessRule rule None)
public void None.PerformLayout(Control affectedControl None,string affectedProperty None)
private void None.Control1_MouseClick(Object sender None,MouseEventArgs e None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
private void None.currencyTextBox_TextChanged(object sender None,EventArgs e None)
private void None.ToolStripItem1_VisibleChanged(Object sender None,EventArgs e None)
public bool None.Equals(string value None)
protected void None.OkToLong_Click(object sender None,EventArgs e None)
protected void None.OnDragDrop(DragEventArgs drgevent None)
public ColumnHeader None.Add(String key None,String text None)
public void None.Insert(int index None,ColumnHeader value None)
protected void None.InvokePaintBackground(Control c None,PaintEventArgs e None)
private void None.ListBox1_SelectedValueChanged(object sender None,EventArgs e None)
private void None.Form1_MinimumSizeChanged(Object sender None,EventArgs e None)
protected void None.OnContextMenuChanged(EventArgs e None)
private void None.Form1_Load(object sender None,EventArgs e None)
static char None.GetFirstCharacter(String s None)
public void None.SetAuditRule(MutexAuditRule rule None)
public string None.ToString(string format None,IFormatProvider provider None)
public void None.Insert(int index None,ColumnHeader value None)
protected void None.InvokePaint(Control c None,PaintEventArgs e None)
public void None.SetAuditRule(MutexAuditRule rule None)
public ToolStripItem None.GetItemAt(Point point None)
private void None.ToolStripItem1_DisplayStyleChanged(Object sender None,EventArgs e None)
public ColumnHeader None.Add(String key None,String text None)
protected void None.OnPaintBackground(PaintEventArgs e None)
object None None.ToType(Type conversionType None,IFormatProvider provider None)
public ListViewItem None.FindNearestItem(SearchDirectionHint dir None,Point point None)
private void None.button1_Click(object sender None,EventArgs e None)
private void None.ToolStripItem1_QueryContinueDrag(Object sender None,QueryContinueDragEventArgs e None)
public None None.CultureInfo(string name None)
public void None.RemoveAccessRuleAll(MutexAccessRule rule None)
public bool None.Equals(DateTime value None)
public void None.PerformLayout(Control affectedControl None,string affectedProperty None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public None None.DateTime(int year None,int month None,int day None)
uint32 None None.EnableDevice([in] boolean Enabled)
public bool None.Contains(Control ctl None)
protected void None.RaisePaintEvent(object key None,PaintEventArgs e None)
public Control None.GetChildAtPoint(Point pt None)
public void None.Insert(int index None,ColumnHeader value None)
private void None.menuItemEdit_Popup(object sender None,EventArgs e None)
public Control None.GetNextControl(Control ctl None,bool forward None)
public void None.DrawToolStripPanelBackground(ToolStripPanelRenderEventArgs e None)
private void None.textBox1_Enter(object sender None,System.EventArgs e None)
public bool None.Equals(PeerContact other None)
public void None.CopyTo(int sourceIndex None,char[] destination None,int destinationIndex None,int count None)
public None None.DateTime(int year None,int month None,int day None,int hour None,int minute None,int second None,DateTimeKind kind None)
private void None.Control1_MouseClick(Object sender None,MouseEventArgs e None)
private void None.ListBox1_SelectedValueChanged(object sender None,EventArgs e None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public None None.DateTime(int year None,int month None,int day None,int hour None,int minute None,int second None,DateTimeKind kind None)
public ToolStripItem None.GetItemAt(Point point None)
public void None.PerformLayout(Control affectedControl None,string affectedProperty None)
private void None.Control1_Invalidated(Object sender None,InvalidateEventArgs e None)
public void None.Invalidate(bool invalidateChildren None)
public void None.LoadDataFromCultureInfo(CultureInfo culture None)
private void None.DataGridView1_RowHeightInfoNeeded(Object sender None,DataGridViewRowHeightInfoNeededEventArgs e None)
private void None.Control1_SystemColorsChanged(Object sender None,EventArgs e None)
protected bool None.GetScrollState(int bit None)
public void None.ScaleBitmapLogicalToDevice(ref Bitmap logicalBitmap)
public None None.ColumnHeaderCollection(ListView owner None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
Display using None.current(en-us None None)
public ToolStripItem None.GetItemAt(Point point None)
public int None.ToFourDigitYear(int year None)
protected void None.OnDragOver(DragEventArgs drgevent None)
private void None.MyForm_Layout(object sender None,System.Windows.Forms.LayoutEventArgs e None)
private void None.ListBox1_SelectedValueChanged(object sender None,EventArgs e None)
private void None.menuItemEdit_Popup(object sender None,EventArgs e None)
public string None.ToString(string format None,IFormatProvider provider None)
private void None.currencyTextBox_TextChanged(object sender None,EventArgs e None)
protected ContentAlignment None.RtlTranslateAlignment(ContentAlignment align None)
private void None.DecimalToCurrencyString(object sender None,ConvertEventArgs cevent None)
private void None.Button1_Click(System.Object sender None,System.EventArgs e None)
public void None.SetPropertyItem(PropertyItem propitem None)
private void None.ToolStripRenderer1_RenderGrip(Object sender None,ToolStripGripRenderEventArgs e None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public int None.CompareTo(object value None)
public string None.ToString(string format None)
protected bool None.GetStyle(ControlStyles flag None)
public ToolStripItem None.GetItemAt(Point point None)
public void None.Invalidate(bool invalidateChildren None)
public ToolStripItem None.GetItemAt(Point point None)
public void None.SetPropertyItem(PropertyItem propitem None)
public void None.LayoutMdi(MdiLayout value None)
private void None.MyForm_Layout(object sender None,System.Windows.Forms.LayoutEventArgs e None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public DateTime None.ToDateTime(int year None,int month None,int day None,int hour None,int minute None,int second None,int millisecond None,int era None)
public ToolStripItem None.GetItemAt(Point point None)
public object None.Deserialize(Stream serializationStream None)
private void None.Button1_Click(System.Object sender None,System.EventArgs e None)
private void None.Menu_Copy(System.Object sender None,System.EventArgs e None)
uint32 None None.GenerateWwpn([in] uint32 NumberOfWwpns,[out] string GeneratedWwpn[])
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
protected HorizontalAlignment None.RtlTranslateAlignment(HorizontalAlignment align None)
public void None.ScrollControlIntoView(Control activeControl None)
public bool None.IsInvalidTime(DateTime dateTime None)
uint32 None None.QuiesceDevice([in] boolean Quiesce)
public None None.Metafile(string fileName None,IntPtr referenceHdc None,Rectangle frameRect None,MetafileFrameUnit frameUnit None,EmfType type None,string description None)
public void None.RotateFlip(RotateFlipType rotateFlipType None)
private void None.dataGridView1_CellFormatting(object sender None,DataGridViewCellFormattingEventArgs e None)
public string None.ToString(string format None,IFormatProvider provider None)
public DateTime None.ToDateTime(int year None,int month None,int day None,int hour None,int minute None,int second None,int millisecond None,int era None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
protected LeftRightAlignment None.RtlTranslateLeftRight(LeftRightAlignment align None)
public void None.ResumeLayout(bool performLayout None)
public int None.GetWeekOfYear(DateTime time None,CalendarWeekRule rule None,DayOfWeek firstDayOfWeek None)
public None None.Metafile(Stream stream None,IntPtr referenceHdc None)
private void None.currencyTextBox_TextChanged(object sender None,EventArgs e None)
public DateTime None.AddHours(double value None)
protected void None.InvokeLostFocus(Control toInvoke None,EventArgs e None)
public None None.Metafile(IntPtr referenceHdc None,Rectangle frameRect None,MetafileFrameUnit frameUnit None,EmfType type None,string desc None)
public string None.ToString(string format None,IFormatProvider provider None)
public None None.Metafile(IntPtr referenceHdc None,Rectangle frameRect None,MetafileFrameUnit frameUnit None,EmfType type None,string desc None)
protected HorizontalAlignment None.RtlTranslateAlignment(HorizontalAlignment align None)
private void None.ListView1_ItemSelectionChanged(Object sender None,ListViewItemSelectionChangedEventArgs e None)
protected LeftRightAlignment None.RtlTranslateLeftRight(LeftRightAlignment align None)
public DateTime None.AddMonths(int months None)
private void None.ToolStripDropDown1_BackgroundImageLayoutChanged(Object sender None,EventArgs e None)
private void None.currencyTextBox_TextChanged(object sender None,EventArgs e None)
public void None.ResumeLayout(bool performLayout None)
private void None.AboutDialog_Load(object sender None,EventArgs e None)
private void None.ToolStripRenderer1_RenderToolStripBackground(Object sender None,ToolStripRenderEventArgs e None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
public None None.Metafile(Stream stream None,IntPtr referenceHdc None)
private void None.ListDragTarget_DragOver(object sender None,System.Windows.Forms.DragEventArgs e None)
private void None.Form1_FormClosing(Object sender None,FormClosingEventArgs e None)
protected void None.OnImeModeChanged(EventArgs e None)
public string None.ToString(string format None,IFormatProvider provider None)
protected HorizontalAlignment None.RtlTranslateHorizontal(HorizontalAlignment align None)
private void None.MyForm_Layout(object sender None,System.Windows.Forms.LayoutEventArgs e None)
private void None.textBox1_Validating(object sender None,System.ComponentModel.CancelEventArgs e None)
protected LeftRightAlignment None.RtlTranslateLeftRight(LeftRightAlignment align None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
private void None.ListView1_ItemSelectionChanged(Object sender None,ListViewItemSelectionChangedEventArgs e None)
private void None.Control1_BackgroundImageLayoutChanged(Object sender None,EventArgs e None)
protected HorizontalAlignment None.RtlTranslateHorizontal(HorizontalAlignment align None)
private void None.ListDragTarget_DragOver(object sender None,System.Windows.Forms.DragEventArgs e None)
void None None.EventHandler(object sender None,EventNameEventArgs e None)
protected HorizontalAlignment None.RtlTranslateAlignment(HorizontalAlignment align None)
public string None.ToString(string format None,IFormatProvider provider None)
private void None.DrawImagePointF(PaintEventArgs e None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
private void None.WebBrowser1_ProgressChanged(Object sender None,WebBrowserProgressChangedEventArgs e None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
public DataSet None.GetDataSetFromAdapter(DataSet dataSet None,string connectionString None,string queryString None)
protected void None.UpdateBounds(int x None,int y None,int width None,int height None,int clientWidth None,int clientHeight None)
public None None.DateTime(int year None,int month None,int day None,int hour None,int minute None,int second None,int millisecond None)
public string None.ToString(string format None,IFormatProvider provider None)
private void None.addButton_Click(object sender None,System.EventArgs e None)
private void None.Control1_ContextMenuStripChanged(Object sender None,EventArgs e None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
public DateTime None.AddTicks(long value None)
public object None.GetFormat(Type formatType None)
private void None.menuItemHelpAbout_Click(object sender None,EventArgs e None)
public int None.IndexOf(char value None,int startIndex None)
public void None.EnumerateMetafile(Metafile metafile None,Point destPoint None,Rectangle srcRect None,GraphicsUnit srcUnit None,Graphics.EnumerateMetafileProc callback None,IntPtr callbackData None)
public Control None.GetChildAtPoint(Point point None)
public string None.ToString(string format None,IFormatProvider provider None)
private void None.Control1_StyleChanged(Object sender None,EventArgs e None)
public DateTime None.AddTicks(long value None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public bool None.HasSameRules(TimeZoneInfo other None)
public string None.ToString(string format None,IFormatProvider provider None)
private void None.Control1_HandleCreated(Object sender None,EventArgs e None)
private void None.FromImageImage(PaintEventArgs e None)
protected void None.SetStyle(ControlStyles flag None,bool value None)
protected void None.SetAutoSizeMode(AutoSizeMode mode None)
private void None.addButton_Click(object sender None,System.EventArgs e None)
void None None.inkCanvas1_StylusOutOfRange(object sender None,StylusEventArgs e None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
private void None.TextBoxBase1_BorderStyleChanged(Object sender None,EventArgs e None)
public IInputElement None.InputHitTest(Point point None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
private void None.addButton_Click(object sender None,System.EventArgs e None)
private void None.textBox1_Enter(object sender None,System.EventArgs e None)
private void None.Form1_Closing(object sender None,System.ComponentModel.CancelEventArgs e None)
public void None.DrawLine(Pen pen None,float x1 None,float y1 None,float x2 None,float y2 None)
public void None.DrawVisualStyleElementToolBarSeparatorVertical1(PaintEventArgs e None)
private void None.TextBoxBase1_BorderStyleChanged(Object sender None,EventArgs e None)
public string None.ToString(string format None,IFormatProvider provider None)
protected void None.RaiseMouseEvent(object key None,MouseEventArgs e None)
public int None.LastIndexOf(string value None,int startIndex None)
public void None.EnumerateMetafile(Metafile metafile None,PointF destPoint None,RectangleF srcRect None,GraphicsUnit srcUnit None,Graphics.EnumerateMetafileProc callback None,IntPtr callbackData None)
public DateTime None.Subtract(TimeSpan value None)
public SizeF None.MeasureString(string text None,Font font None,PointF origin None,StringFormat stringFormat None)
private void None.MeasureCharacterRangesRegions(PaintEventArgs e None)
public void None.SetCurrentValue(DependencyProperty dp None,object value None)
protected void None.SetScrollState(int bit None,bool value None)
private void None.ReadData(DataSet thisDataSet None)
private void None.ListDragTarget_DragLeave(object sender None,System.EventArgs e None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public bool None.IsVisible(int x None,int y None,int width None,int height None)
public int None.LastIndexOf(string value None,int startIndex None,StringComparison comparisonType None)
private void None.ReadData(DataSet thisDataSet None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
private void None.CommonClickHandler(object sender None,RoutedEventArgs e None)
private void None.button1_Click(object sender None,System.EventArgs e None)
public string None.ToString(string format None,IFormatProvider provider None)
private void None.ReadData(DataSet thisDataSet None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.Trim(params char[] trimChars)
public bool None.IsVisible(int x None,int y None,int width None,int height None)
public None None.DateTime(int year None,int month None,int day None,Calendar calendar None)
private void None.MeasureCharacterRangesRegions(PaintEventArgs e None)
private void None.CommonClickHandler(object sender None,RoutedEventArgs e None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
private void None.button1_Click(object sender None,System.EventArgs e None)
private void None.ListDragTarget_DragOver(object sender None,System.Windows.Forms.DragEventArgs e None)
public bool None.RelationshipExists(string id None)
protected void None.InvokePaintBackground(Control c None,PaintEventArgs e None)
public void None.ControlSelect(Control control None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
private void None.myButton_Click(object sender None,EventArgs e None)
public void None.ControlSetFocus(Control control None)
public DateTime None.AddSeconds(DateTime time None,int seconds None)
public string None.ToUpper(CultureInfo culture None)
private void None.ListDragTarget_DragEnter(object sender None,System.Windows.Forms.DragEventArgs e None)
public string None.ToString(string format None,IFormatProvider provider None)
private void None.ListView1_ColumnReordered(Object sender None,ColumnReorderedEventArgs e None)
public string None.PadLeft(int totalWidth None,char paddingChar None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public int None.LastIndexOf(string value None,StringComparison comparisonType None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public bool None.StartsWith(string value None)
private void None.currencyTextBox_TextChanged(object sender None,EventArgs e None)
private void None.showCheckedNodesButton_Click(object sender None,EventArgs e None)
public DateTime None.AddSeconds(DateTime time None,int seconds None)
protected void None.OnRenderImageMargin(ToolStripRenderEventArgs e None)
public string None.ToString(string format None,IFormatProvider provider None)
public HtmlElement None.InsertAdjacentElement(HtmlElementInsertionOrientation orient None,HtmlElement newElement None)
private void None.ListDragSource_GiveFeedback(object sender None,System.Windows.Forms.GiveFeedbackEventArgs e None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
static bool None.IsFileURI(String path None)
private void None.ListDragSource_QueryContinueDrag(object sender None,System.Windows.Forms.QueryContinueDragEventArgs e None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToTitleCase(string str None)
private void None.Form1_Load(object sender None,EventArgs e None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
private void None.textBox1_Validating(object sender None,System.ComponentModel.CancelEventArgs e None)
public None None.String(char[] value None,int startIndex None,int length None)
public bool None.Contains(Control ctl None)
public bool None.StartsWith(string value None,bool ignoreCase None,CultureInfo culture None)
public DateTime None.Add(TimeSpan value None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public object None.Invoke(Delegate method None)
private void None.textBox1_Validating(object sender None,System.ComponentModel.CancelEventArgs e None)
private void None.dataGridView1_EditingControlShowing(object sender None,DataGridViewEditingControlShowingEventArgs e None)
DateTime None None.ToDateTime(IFormatProvider provider None)
private void None.Control1_TabStopChanged(Object sender None,EventArgs e None)
private void None.Form1_Load(object sender None,EventArgs e None)
private void None.button1_Click(object sender None,System.EventArgs e None)
public None None.String(char c None,int count None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public int None.CompareTo(string strB None)
private void None.DrawMyPanel(object sender None,System.Windows.Forms.StatusBarDrawItemEventArgs sbdevent None)
public string None.ToString(IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.PadRight(int totalWidth None)
protected void None.InvokePaint(Control c None,PaintEventArgs e None)
public void None.DrawVisualStyleElementExplorerBarHeaderPin1(PaintEventArgs e None)
protected void None.InvokeLostFocus(Control toInvoke None,EventArgs e None)
public string None.ToString(string format None,IFormatProvider provider None)
protected LeftRightAlignment None.RtlTranslateAlignment(LeftRightAlignment align None)
protected void None.OnKeyUp(KeyEventArgs e None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
private void None.currencyTextBox_TextChanged(object sender None,EventArgs e None)
public Point None.PointToClient(Point p None)
public string None.ToString(string format None,IFormatProvider provider None)
public int None.IndexOfAny(char[] anyOf None,int startIndex None,int count None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
static bool None.IsFileURI(String path None)
private void None.Form1_Load(object sender None,EventArgs e None)
public Rectangle None.RectangleToClient(Rectangle r None)
public void None.AppendText(string text None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
private void None.TextBoxBase1_ReadOnlyChanged(Object sender None,EventArgs e None)
public int None.IndexOfAny(char[] anyOf None,int startIndex None,int count None)
public int None.IndexOfAny(char[] anyOf None,int startIndex None,int count None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
protected void None.OnPaddingChanged(EventArgs e None)
bool None None.ToBoolean(IFormatProvider provider None)
private void None.Menu_Copy(System.Object sender None,System.EventArgs e None)
public void None.AppendText(string text None)
public string None.ToString(string format None,IFormatProvider provider None)
public bool None.IsNormalized(NormalizationForm normalizationForm None)
public string None.ToString(string format None,IFormatProvider provider None)
void None None.OnStylusButtonDown(object sender None,StylusButtonEventArgs e None)
public int None.LastIndexOf(string value None,int startIndex None,int count None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public int None.LastIndexOfAny(char[] anyOf None,int startIndex None,int count None)
static bool None.IsFileURI(String path None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.Remove(int startIndex None,int count None)
public int None.IndexOf(string value None,int startIndex None)
public ListViewItem None.FindItemWithText(string text None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
static void None.GenerateCSCodeForService(EndpointAddress metadataAddress None,string outputFile None)
public void None.RedrawItems(int startIndex None,int endIndex None,bool invalidateOnly None)
public int None.LastIndexOf(char value None)
private void None.treeView1_MouseUp(object sender None,MouseEventArgs e None)
private void None.treeView1_MouseUp(object sender None,MouseEventArgs e None)
public bool None.EndsWith(string value None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public void None.DrawVisualStyleElementTabTabItemBothEdges1(PaintEventArgs e None)
public string None.Replace(string oldValue None,string newValue None)
SerializableAttribute None None.ClassInterfaceAttribute(ClassInterfaceType.AutoDispatch None None)
static IEnumerableXElement None.StreamCustomerItem(string uri None)
public void None.DrawVisualStyleElement_Page_UpHorizontal1(PaintEventArgs e None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public int None.IndexOf(string value None,int startIndex None,int count None,StringComparison comparisonType None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
public string None.ToString(string format None,IFormatProvider provider None)
byte None None.ToByte(IFormatProvider provider None)
public int None.LastIndexOf(string value None,int startIndex None,int count None,StringComparison comparisonType None)
public int None.IndexOf(string value None,int startIndex None,int count None,StringComparison comparisonType None)
private void None.ListDragSource_QueryContinueDrag(object sender None,System.Windows.Forms.QueryContinueDragEventArgs e None)
public bool None.TrueForAll(PredicateT match None)
void None None.Remove(object value None)
public StringBuilder None.Append(char[] value None,int startIndex None,int charCount None)
public int None.IndexOf(char value None,int startIndex None,int count None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.Substring(int startIndex None)
public int None.IndexOf(string value None,int startIndex None,int count None,StringComparison comparisonType None)
void None None.button1_Click(object sender None,EventArgs e None)
public int None.IndexOf(string value None,int startIndex None,StringComparison comparisonType None)
string None None.ToString(string format None,IFormatProvider formatProvider None)
public int None.LastIndexOf(string value None,int startIndex None,int count None,StringComparison comparisonType None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public int None.LastIndexOf(string value None,int startIndex None,int count None,StringComparison comparisonType None)
public int None.LastIndexOf(string value None,int startIndex None,int count None,StringComparison comparisonType None)
public StringBuilder None.Insert(int index None,float value None)
public int None.IndexOf(string value None,int startIndex None,int count None,StringComparison comparisonType None)
private void None.WriteDescriptionInfo(StylusPointCollection points None)
public ListT None.GetRange(int index None,int count None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.PadLeft(int totalWidth None,char paddingChar None)
public ListT None.FindAll(PredicateT match None)
public bool None.EndsWith(string value None,bool ignoreCase None,CultureInfo culture None)
public StringBuilder None.Remove(int startIndex None,int length None)
public string None.ToString(string format None,IFormatProvider provider None)
double None None.ToDouble(IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.PadLeft(int totalWidth None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.TrimEnd(params char[] trimChars)
public string None.ToString(string format None,IFormatProvider provider None)
public int None.IndexOf(string value None,int startIndex None,int count None)
public string None.Insert(int startIndex None,string value None)
public bool None.Remove(TKey key None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
static bool None.IsFileURI(String path None)
public bool None.Contains(string value None)
public void None.CopyTo(int sourceIndex None,char[] destination None,int destinationIndex None,int count None)
static bool None.IsFileURI(String path None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public StringBuilder None.Insert(int index None,long value None)
public int None.IndexOf(string value None)
public StringBuilder None.Append(string value None)
public string None.ToString(string format None,IFormatProvider provider None)
private void None.RenderText1(PaintEventArgs e None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.PadRight(int totalWidth None,char paddingChar None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public void None.DrawVisualStyleElementProgressBarBar1(PaintEventArgs e None)
public string None.ToString(string format None,IFormatProvider provider None)
static bool None.IsFileURI(String path None)
public int None.IndexOf(string value None,StringComparison comparisonType None)
public string None.TrimStart(params char[] trimChars)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
static bool None.IsFileURI(String path None)
static bool None.IsFileURI(String path None)
public string None.ToString(string format None,IFormatProvider provider None)
public void None.DrawVisualStyleElementWindowMdiHelpButton1(PaintEventArgs e None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToLower(CultureInfo culture None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
public string None.Replace(char oldChar None,char newChar None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public int None.LastIndexOf(char value None,int startIndex None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public bool None.Equals(string value None,StringComparison comparisonType None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
static bool None.IsFileURI(String path None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public void None.DrawVisualStyleElementProgressBarBarVertical1(PaintEventArgs e None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public None None.String(char[] value None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.Substring(int startIndex None,int length None)
public string None.ToString(string format None,IFormatProvider provider None)
public void None.ExportContract(WsdlExporter exporter None,WsdlContractConversionContext context None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
static bool None.IsFileURI(String path None)
public int None.CompareTo(object value None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public void None.DrawVisualStyleElementWindowHelpButton1(PaintEventArgs e None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public int None.LastIndexOfAny(char[] anyOf None,int startIndex None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public void None.DrawVisualStyleElementStartPanelMoreProgramsArrow1(PaintEventArgs e None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
private void None.ImageExampleForm_Paint(object sender None,PaintEventArgs e None)
public string None.ToString(string format None,IFormatProvider provider None)
public void None.DrawVisualStyleElementStartPanelPreview1(PaintEventArgs e None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public void None.DrawVisualStyleElement_Button_GroupBox1(PaintEventArgs e None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
private SpeechRecognitionEngine None.SelectRecognizer(CultureInfo requiredCulture None,string requiredId None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
publi