BOOL WINAPI kernel32.CopyFile(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName,_In_ BOOL bFailIfExists)
BOOL WINAPI kernel32.CopyFileW(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName,_In_ BOOL bFailIfExists)
BOOL WINAPI kernel32.CopyFileA(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName,_In_ BOOL bFailIfExists)
BOOL WINAPI kernel32.CopyFileTransacted(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName,_In_opt_ LPPROGRESS_ROUTINE lpProgressRoutine,_In_opt_ LPVOID lpData,_In_opt_ LPBOOL pbCancel,_In_ DWORD dwCopyFlags,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.CopyFileTransactedW(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName,_In_opt_ LPPROGRESS_ROUTINE lpProgressRoutine,_In_opt_ LPVOID lpData,_In_opt_ LPBOOL pbCancel,_In_ DWORD dwCopyFlags,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.CopyFileTransactedA(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName,_In_opt_ LPPROGRESS_ROUTINE lpProgressRoutine,_In_opt_ LPVOID lpData,_In_opt_ LPBOOL pbCancel,_In_ DWORD dwCopyFlags,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.MoveFileWithProgress(_In_ LPCTSTR lpExistingFileName,_In_opt_ LPCTSTR lpNewFileName,_In_opt_ LPPROGRESS_ROUTINE lpProgressRoutine,_In_opt_ LPVOID lpData,_In_ DWORD dwFlags)
BOOL WINAPI kernel32.MoveFileWithProgressW(_In_ LPCTSTR lpExistingFileName,_In_opt_ LPCTSTR lpNewFileName,_In_opt_ LPPROGRESS_ROUTINE lpProgressRoutine,_In_opt_ LPVOID lpData,_In_ DWORD dwFlags)
BOOL WINAPI kernel32.MoveFileWithProgressA(_In_ LPCTSTR lpExistingFileName,_In_opt_ LPCTSTR lpNewFileName,_In_opt_ LPPROGRESS_ROUTINE lpProgressRoutine,_In_opt_ LPVOID lpData,_In_ DWORD dwFlags)
HRESULT WINAPI wofutil.WofWimUpdateEntry(_In_ PCWSTR VolumeName,_In_ LARGE_INTEGER DataSourceId,_In_ PCWSTR NewWimPath)
BOOL WINAPI kernel32.CancelIoEx(_In_ HANDLE hFile,_In_opt_ LPOVERLAPPED lpOverlapped)
HRESULT WINAPI wofutil.WofEnumEntries(_In_ PCWSTR VolumeName,_In_ ULONG Provider,_In_ WofEnumEntryProc EnumProc,_In_opt_ PVOID UserData)
HRESULT WINAPI wofutil.WofFileEnumFiles(_In_ PCWSTR VolumeName,_In_ ULONG Algorithm,_In_ WofEnumFilesProc EnumProc,_In_opt_ PVOID UserData)
DWORD WINAPI kernel32.GetFinalPathNameByHandle(_In_ HANDLE hFile,_Out_ LPTSTR lpszFilePath,_In_ DWORD cchFilePath,_In_ DWORD dwFlags)
DWORD WINAPI kernel32.GetFinalPathNameByHandleW(_In_ HANDLE hFile,_Out_ LPTSTR lpszFilePath,_In_ DWORD cchFilePath,_In_ DWORD dwFlags)
DWORD WINAPI kernel32.GetFinalPathNameByHandleA(_In_ HANDLE hFile,_Out_ LPTSTR lpszFilePath,_In_ DWORD cchFilePath,_In_ DWORD dwFlags)
BOOL WINAPI advapi32.EncryptFile(_In_ LPCTSTR lpFileName)
BOOL WINAPI advapi32.EncryptFileW(_In_ LPCTSTR lpFileName)
BOOL WINAPI advapi32.EncryptFileA(_In_ LPCTSTR lpFileName)
DWORD CALLBACK None.CopyProgressRoutine(_In_ LARGE_INTEGER TotalFileSize,_In_ LARGE_INTEGER TotalBytesTransferred,_In_ LARGE_INTEGER StreamSize,_In_ LARGE_INTEGER StreamBytesTransferred,_In_ DWORD dwStreamNumber,_In_ DWORD dwCallbackReason,_In_ HANDLE hSourceFile,_In_ HANDLE hDestinationFile,_In_opt_ LPVOID lpData)
DWORD WINAPI advapi32.QueryUsersOnEncryptedFile(_In_ LPCWSTR lpFileName,_Out_ PENCRYPTION_CERTIFICATE_HASH_LIST *pUsers)
DWORD WINAPI kernel32.GetLastError(void None None)
DWORD WINAPI advapi32.ReadEncryptedFileRaw(_In_ PFE_EXPORT_FUNC pfExportCallback,_In_opt_ PVOID pvCallbackContext,_In_ PVOID pvContext)
DWORD WINAPI advapi32.RemoveUsersFromEncryptedFile(_In_ LPCWSTR lpFileName,_In_ PENCRYPTION_CERTIFICATE_HASH_LIST pHashes)
HANDLE WINAPI kernel32.FindFirstFile(_In_ LPCTSTR lpFileName,_Out_ LPWIN32_FIND_DATA lpFindFileData)
HANDLE WINAPI kernel32.FindFirstFileW(_In_ LPCTSTR lpFileName,_Out_ LPWIN32_FIND_DATA lpFindFileData)
HANDLE WINAPI kernel32.FindFirstFileA(_In_ LPCTSTR lpFileName,_Out_ LPWIN32_FIND_DATA lpFindFileData)
BOOL WINAPI kernel32.FindNextFileNameW(_In_ HANDLE hFindStream,_Inout_ LPDWORD StringLength,_Inout_ PWCHAR LinkName)
BOOL WINAPI kernel32.GetFileSizeEx(_In_ HANDLE hFile,_Out_ PLARGE_INTEGER lpFileSize)
INT WINAPI lz32.GetExpandedName(_In_ LPTSTR lpszSource,_Out_ LPTSTR lpszBuffer)
INT WINAPI lz32.GetExpandedNameW(_In_ LPTSTR lpszSource,_Out_ LPTSTR lpszBuffer)
INT WINAPI lz32.GetExpandedNameA(_In_ LPTSTR lpszSource,_Out_ LPTSTR lpszBuffer)
HANDLE WINAPI kernel32.FindFirstFileNameW(_In_ LPCWSTR lpFileName,_In_ DWORD dwFlags,_Inout_ LPDWORD StringLength,_Inout_ PWCHAR LinkName)
BOOL WINAPI kernel32.GetFileAttributesEx(_In_ LPCTSTR lpFileName,_In_ GET_FILEEX_INFO_LEVELS fInfoLevelId,_Out_ LPVOID lpFileInformation)
BOOL WINAPI kernel32.GetFileAttributesExW(_In_ LPCTSTR lpFileName,_In_ GET_FILEEX_INFO_LEVELS fInfoLevelId,_Out_ LPVOID lpFileInformation)
BOOL WINAPI kernel32.GetFileAttributesExA(_In_ LPCTSTR lpFileName,_In_ GET_FILEEX_INFO_LEVELS fInfoLevelId,_Out_ LPVOID lpFileInformation)
BOOL WINAPI kernel32.ReadFileEx(_In_ HANDLE hFile,_Out_opt_ LPVOID lpBuffer,_In_ DWORD nNumberOfBytesToRead,_Inout_ LPOVERLAPPED lpOverlapped,_In_ LPOVERLAPPED_COMPLETION_ROUTINE lpCompletionRoutine)
BOOL WINAPI kernel32.GetFileBandwidthReservation(_In_ HANDLE hFile,_Out_ LPDWORD lpPeriodMilliseconds,_Out_ LPDWORD lpBytesPerPeriod,_Out_ LPBOOL pDiscardable,_Out_ LPDWORD lpTransferSize,_Out_ LPDWORD lpNumOutstandingRequests)
void WINAPI advapi32.FreeEncryptionCertificateHashList(_In_ PENCRYPTION_CERTIFICATE_HASH_LIST pHashes)
DWORD WINAPI advapi32.SetUserFileEncryptionKey(_In_ PENCRYPTION_CERTIFICATE pEncryptionCertificate)
BOOL WINAPI kernel32.SetFileBandwidthReservation(_In_ HANDLE hFile,_In_ DWORD nPeriodMilliseconds,_In_ DWORD nBytesPerPeriod,_In_ BOOL bDiscardable,_Out_ LPDWORD lpTransferSize,_Out_ LPDWORD lpNumOutstandingRequests)
DWORD WINAPI kernel32.GetTempPath(_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer)
DWORD WINAPI kernel32.GetTempPathW(_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer)
DWORD WINAPI kernel32.GetTempPathA(_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer)
BOOL WINAPI kernel32.SetFileCompletionNotificationModes(_In_ HANDLE FileHandle,_In_ UCHAR Flags)
BOOL WINAPI kernel32.SetFileAttributesTransacted(_In_ LPCTSTR lpFileName,_In_ DWORD dwFileAttributes,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.SetFileAttributesTransactedW(_In_ LPCTSTR lpFileName,_In_ DWORD dwFileAttributes,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.SetFileAttributesTransactedA(_In_ LPCTSTR lpFileName,_In_ DWORD dwFileAttributes,_In_ HANDLE hTransaction)
DWORD WINAPI advapi32.WriteEncryptedFileRaw(_In_ PFE_IMPORT_FUNC pfImportCallback,_In_opt_ PVOID pvCallbackContext,_In_ PVOID pvContext)
DWORD WINAPI kernel32.GetCompressedFileSizeTransacted(_In_ LPCTSTR lpFileName,_Out_opt_ LPDWORD lpFileSizeHigh,_In_ HANDLE hTransaction)
DWORD WINAPI kernel32.GetCompressedFileSizeTransactedW(_In_ LPCTSTR lpFileName,_Out_opt_ LPDWORD lpFileSizeHigh,_In_ HANDLE hTransaction)
DWORD WINAPI kernel32.GetCompressedFileSizeTransactedA(_In_ LPCTSTR lpFileName,_Out_opt_ LPDWORD lpFileSizeHigh,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.SetFileIoOverlappedRange(_In_ HANDLE FileHandle,_In_ PUCHAR OverlappedRangeStart,_In_ ULONG Length)
DWORD WINAPI advapi32.QueryRecoveryAgentsOnEncryptedFile(_In_ LPCWSTR lpFileName,_Out_ PENCRYPTION_CERTIFICATE_HASH_LIST *pRecoveryAgents)
BOOL WINAPI kernel32.SetFileShortName(_In_ HANDLE hFile,_In_ LPCTSTR lpShortName)
BOOL WINAPI kernel32.SetFileShortNameW(_In_ HANDLE hFile,_In_ LPCTSTR lpShortName)
BOOL WINAPI kernel32.SetFileShortNameA(_In_ HANDLE hFile,_In_ LPCTSTR lpShortName)
BOOL WINAPI kernel32.CopyFileEx(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName,_In_opt_ LPPROGRESS_ROUTINE lpProgressRoutine,_In_opt_ LPVOID lpData,_In_opt_ LPBOOL pbCancel,_In_ DWORD dwCopyFlags)
BOOL WINAPI kernel32.CopyFileExW(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName,_In_opt_ LPPROGRESS_ROUTINE lpProgressRoutine,_In_opt_ LPVOID lpData,_In_opt_ LPBOOL pbCancel,_In_ DWORD dwCopyFlags)
BOOL WINAPI kernel32.CopyFileExA(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName,_In_opt_ LPPROGRESS_ROUTINE lpProgressRoutine,_In_opt_ LPVOID lpData,_In_opt_ LPBOOL pbCancel,_In_ DWORD dwCopyFlags)
HANDLE WINAPI kernel32.ReOpenFile(_In_ HANDLE hOriginalFile,_In_ DWORD dwDesiredAccess,_In_ DWORD dwShareMode,_In_ DWORD dwFlags)
BOOL WINAPI kernel32.GetQueuedCompletionStatus(_In_ HANDLE CompletionPort,_Out_ LPDWORD lpNumberOfBytes,_Out_ PULONG_PTR lpCompletionKey,_Out_ LPOVERLAPPED *lpOverlapped,_In_ DWORD dwMilliseconds)
HRESULT WINAPI wofutil.WofWimAddEntry(_In_ PCWSTR VolumeName,_In_ PCWSTR WimPath,_In_ DWORD WimType,_In_ DWORD WimIndex,_Out_ PLARGE_INTEGER DataSourceId)
BOOL WINAPI kernel32.SetFileInformationByHandle(_In_ HANDLE hFile,_In_ FILE_INFO_BY_HANDLE_CLASS FileInformationClass,_In_ LPVOID lpFileInformation,_In_ DWORD dwBufferSize)
HRESULT WINAPI wofutil.WofIsExternalFile(_In_ LPCWSTR FilePath,_Out_opt_ PBOOL IsExternalFile,_Out_opt_ PULONG Provider,_Out_opt_ PVOID ExternalFileInfo,_Inout_opt_ PULONG BufferLength)
BOOL WINAPI kernel32.GetBinaryType(_In_ LPCTSTR lpApplicationName,_Out_ LPDWORD lpBinaryType)
BOOL WINAPI kernel32.GetBinaryTypeW(_In_ LPCTSTR lpApplicationName,_Out_ LPDWORD lpBinaryType)
BOOL WINAPI kernel32.GetBinaryTypeA(_In_ LPCTSTR lpApplicationName,_Out_ LPDWORD lpBinaryType)
BOOL WINAPI kernel32.DeleteFile(_In_ LPCTSTR lpFileName)
BOOL WINAPI kernel32.DeleteFileW(_In_ LPCTSTR lpFileName)
BOOL WINAPI kernel32.DeleteFileA(_In_ LPCTSTR lpFileName)
BOOL WINAPI kernel32.GetFileInformationByHandleEx(_In_ HANDLE hFile,_In_ FILE_INFO_BY_HANDLE_CLASS FileInformationClass,_Out_ LPVOID lpFileInformation,_In_ DWORD dwBufferSize)
HRESULT WINAPI wofutil.WofSetFileDataLocation(_In_ HANDLE FileHandle,_In_ ULONG Provider,_In_ PVOID ExternalFileInfo,_In_ ULONG Length)
void APIENTRY lz32.LZClose(_In_ INT hFile)
BOOL WINAPI wofutil.WofShouldCompressBinaries(_In_ LPCWSTR Volume,_Out_ PULONG Algorithm)
BOOL WINAPI kernel32.ReadFile(_In_ HANDLE hFile,_Out_ LPVOID lpBuffer,_In_ DWORD nNumberOfBytesToRead,_Out_opt_ LPDWORD lpNumberOfBytesRead,_Inout_opt_ LPOVERLAPPED lpOverlapped)
BOOL WINAPI kernel32.Wow64RevertWow64FsRedirection(_In_ PVOID OldValue)
INT WINAPI lz32.LZInit(_In_ INT hfSource)
DWORD WINAPI kernel32.SetFilePointer(_In_ HANDLE hFile,_In_ LONG lDistanceToMove,_Inout_opt_ PLONG lpDistanceToMoveHigh,_In_ DWORD dwMoveMethod)
BOOL WINAPI kernel32.SetFileValidData(_In_ HANDLE hFile,_In_ LONGLONG ValidDataLength)
HANDLE WINAPI kernel32.FindFirstStreamTransactedW(_In_ LPCWSTR lpFileName,_In_ STREAM_INFO_LEVELS InfoLevel,_Out_ LPVOID lpFindStreamData,_Reserved_ DWORD dwFlags,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.GetFileInformationByHandle(_In_ HANDLE hFile,_Out_ LPBY_HANDLE_FILE_INFORMATION lpFileInformation)
BOOL WINAPI kernel32.CancelSynchronousIo(_In_ HANDLE hThread)
HRESULT WINAPI kernel32.CopyFile2(_In_ PCWSTR pwszExistingFileName,_In_ PCWSTR pwszNewFileName,_In_opt_ COPYFILE2_EXTENDED_PARAMETERS *pExtendedParameters)
LONG WINAPI lz32.LZSeek(_In_ INT hFile,_In_ LONG lOffset,_In_ INT iOrigin)
BOOL WINAPI kernel32.FindNextFile(_In_ HANDLE hFindFile,_Out_ LPWIN32_FIND_DATA lpFindFileData)
BOOL WINAPI kernel32.FindNextFileW(_In_ HANDLE hFindFile,_Out_ LPWIN32_FIND_DATA lpFindFileData)
BOOL WINAPI kernel32.FindNextFileA(_In_ HANDLE hFindFile,_Out_ LPWIN32_FIND_DATA lpFindFileData)
BOOL WINAPI kernel32.CancelIo(_In_ HANDLE hFile)
BOOL WINAPI kernel32.MoveFile(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName)
BOOL WINAPI kernel32.MoveFileW(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName)
BOOL WINAPI kernel32.MoveFileA(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName)
BOOL WINAPI kernel32.LockFileEx(_In_ HANDLE hFile,_In_ DWORD dwFlags,_Reserved_ DWORD dwReserved,_In_ DWORD nNumberOfBytesToLockLow,_In_ DWORD nNumberOfBytesToLockHigh,_Inout_ LPOVERLAPPED lpOverlapped)
DWORD WINAPI None.ImportCallback(_In_ PBYTE pbData,_In_opt_ PVOID pvCallbackContext,_Inout_ PULONG ulLength)
BOOL WINAPI kernel32.GetQueuedCompletionStatusEx(_In_ HANDLE CompletionPort,_Out_ LPOVERLAPPED_ENTRY lpCompletionPortEntries,_In_ ULONG ulCount,_Out_ PULONG ulNumEntriesRemoved,_In_ DWORD dwMilliseconds,_In_ BOOL fAlertable)
BOOL WINAPI advapi32.DecryptFile(_In_ LPCTSTR lpFileName,_Reserved_ DWORD dwReserved)
BOOL WINAPI advapi32.DecryptFileW(_In_ LPCTSTR lpFileName,_Reserved_ DWORD dwReserved)
BOOL WINAPI advapi32.DecryptFileA(_In_ LPCTSTR lpFileName,_Reserved_ DWORD dwReserved)
BOOL WINAPI kernel32.CopyFile(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName,_In_ BOOL bFailIfExists)
BOOL WINAPI kernel32.CopyFileW(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName,_In_ BOOL bFailIfExists)
BOOL WINAPI kernel32.CopyFileA(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName,_In_ BOOL bFailIfExists)
void WINAPI kernel32.SetFileApisToANSI(void None None)
DWORD WINAPI kernel32.GetFileAttributes(_In_ LPCTSTR lpFileName)
DWORD WINAPI kernel32.GetFileAttributesW(_In_ LPCTSTR lpFileName)
DWORD WINAPI kernel32.GetFileAttributesA(_In_ LPCTSTR lpFileName)
LONG WINAPI lz32.LZCopy(_In_ INT hfSource,_In_ INT hfDest)
BOOL WINAPI kernel32.ReplaceFile(_In_ LPCTSTR lpReplacedFileName,_In_ LPCTSTR lpReplacementFileName,_In_opt_ LPCTSTR lpBackupFileName,_In_ DWORD dwReplaceFlags,_Reserved_ LPVOID lpExclude,_Reserved_ LPVOID lpReserved)
BOOL WINAPI kernel32.ReplaceFileW(_In_ LPCTSTR lpReplacedFileName,_In_ LPCTSTR lpReplacementFileName,_In_opt_ LPCTSTR lpBackupFileName,_In_ DWORD dwReplaceFlags,_Reserved_ LPVOID lpExclude,_Reserved_ LPVOID lpReserved)
BOOL WINAPI kernel32.ReplaceFileA(_In_ LPCTSTR lpReplacedFileName,_In_ LPCTSTR lpReplacementFileName,_In_opt_ LPCTSTR lpBackupFileName,_In_ DWORD dwReplaceFlags,_Reserved_ LPVOID lpExclude,_Reserved_ LPVOID lpReserved)
BOOL WINAPI kernel32.MoveFileTransacted(_In_ LPCTSTR lpExistingFileName,_In_opt_ LPCTSTR lpNewFileName,_In_opt_ LPPROGRESS_ROUTINE lpProgressRoutine,_In_opt_ LPVOID lpData,_In_ DWORD dwFlags,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.MoveFileTransactedW(_In_ LPCTSTR lpExistingFileName,_In_opt_ LPCTSTR lpNewFileName,_In_opt_ LPPROGRESS_ROUTINE lpProgressRoutine,_In_opt_ LPVOID lpData,_In_ DWORD dwFlags,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.MoveFileTransactedA(_In_ LPCTSTR lpExistingFileName,_In_opt_ LPCTSTR lpNewFileName,_In_opt_ LPPROGRESS_ROUTINE lpProgressRoutine,_In_opt_ LPVOID lpData,_In_ DWORD dwFlags,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.SetFilePointerEx(_In_ HANDLE hFile,_In_ LARGE_INTEGER liDistanceToMove,_Out_opt_ PLARGE_INTEGER lpNewFilePointer,_In_ DWORD dwMoveMethod)
BOOLEAN WINAPI kernel32.CreateSymbolicLinkTransacted(_In_ LPTSTR lpSymlinkFileName,_In_ LPTSTR lpTargetFileName,_In_ DWORD dwFlags,_In_ HANDLE hTransaction)
BOOLEAN WINAPI kernel32.CreateSymbolicLinkTransactedW(_In_ LPTSTR lpSymlinkFileName,_In_ LPTSTR lpTargetFileName,_In_ DWORD dwFlags,_In_ HANDLE hTransaction)
BOOLEAN WINAPI kernel32.CreateSymbolicLinkTransactedA(_In_ LPTSTR lpSymlinkFileName,_In_ LPTSTR lpTargetFileName,_In_ DWORD dwFlags,_In_ HANDLE hTransaction)
BOOL WINAPI advapi32.EncryptionDisable(_In_ LPCWSTR DirPath,_In_ BOOL Disable)
BOOL WINAPI kernel32.Wow64DisableWow64FsRedirection(_Out_ PVOID *OldValue)
BOOL WINAPI kernel32.FindNextStreamW(_In_ HANDLE hFindStream,_Out_ LPVOID lpFindStreamData)
HANDLE WINAPI kernel32.CreateFileTransacted(_In_ LPCTSTR lpFileName,_In_ DWORD dwDesiredAccess,_In_ DWORD dwShareMode,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ DWORD dwCreationDisposition,_In_ DWORD dwFlagsAndAttributes,_In_opt_ HANDLE hTemplateFile,_In_ HANDLE hTransaction,_In_opt_ PUSHORT pusMiniVersion,_Reserved_ PVOID pExtendedParameter)
HANDLE WINAPI kernel32.CreateFileTransactedW(_In_ LPCTSTR lpFileName,_In_ DWORD dwDesiredAccess,_In_ DWORD dwShareMode,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ DWORD dwCreationDisposition,_In_ DWORD dwFlagsAndAttributes,_In_opt_ HANDLE hTemplateFile,_In_ HANDLE hTransaction,_In_opt_ PUSHORT pusMiniVersion,_Reserved_ PVOID pExtendedParameter)
HANDLE WINAPI kernel32.CreateFileTransactedA(_In_ LPCTSTR lpFileName,_In_ DWORD dwDesiredAccess,_In_ DWORD dwShareMode,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ DWORD dwCreationDisposition,_In_ DWORD dwFlagsAndAttributes,_In_opt_ HANDLE hTemplateFile,_In_ HANDLE hTransaction,_In_opt_ PUSHORT pusMiniVersion,_Reserved_ PVOID pExtendedParameter)
HRESULT WINAPI wofutil.WofWimSuspendEntry(_In_ PCWSTR VolumeName,_In_ LARGE_INTEGER DataSourceId)
DWORD WINAPI advapi32.AddUsersToEncryptedFile(_In_ LPCWSTR lpFileName,_In_ PENCRYPTION_CERTIFICATE_LIST pUsers)
BOOLEAN WINAPI kernel32.Wow64EnableWow64FsRedirection(_In_ BOOLEAN Wow64FsEnableRedirection)
BOOL WINAPI kernel32.CreateHardLink(_In_ LPCTSTR lpFileName,_In_ LPCTSTR lpExistingFileName,_Reserved_ LPSECURITY_ATTRIBUTES lpSecurityAttributes)
BOOL WINAPI kernel32.CreateHardLinkW(_In_ LPCTSTR lpFileName,_In_ LPCTSTR lpExistingFileName,_Reserved_ LPSECURITY_ATTRIBUTES lpSecurityAttributes)
BOOL WINAPI kernel32.CreateHardLinkA(_In_ LPCTSTR lpFileName,_In_ LPCTSTR lpExistingFileName,_Reserved_ LPSECURITY_ATTRIBUTES lpSecurityAttributes)
HANDLE WINAPI kernel32.FindFirstStreamW(_In_ LPCWSTR lpFileName,_In_ STREAM_INFO_LEVELS InfoLevel,_Out_ LPVOID lpFindStreamData,_Reserved_ DWORD dwFlags)
BOOL WINAPI kernel32.WriteFileGather(_In_ HANDLE hFile,_In_ FILE_SEGMENT_ELEMENT aSegmentArray[],_In_ DWORD nNumberOfBytesToWrite,_Reserved_ LPDWORD lpReserved,_Inout_ LPOVERLAPPED lpOverlapped)
HANDLE WINAPI kernel32.CreateIoCompletionPort(_In_ HANDLE FileHandle,_In_opt_ HANDLE ExistingCompletionPort,_In_ ULONG_PTR CompletionKey,_In_ DWORD NumberOfConcurrentThreads)
BOOL WINAPI kernel32.DeleteFileTransacted(_In_ LPCTSTR lpFileName,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.DeleteFileTransactedW(_In_ LPCTSTR lpFileName,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.DeleteFileTransactedA(_In_ LPCTSTR lpFileName,_In_ HANDLE hTransaction)
INT WINAPI lz32.LZRead(_In_ INT hFile,_Out_ LPSTR lpBuffer,_In_ INT cbRead)
BOOL WINAPI kernel32.CreateHardLinkTransacted(_In_ LPCTSTR lpFileName,_In_ LPCTSTR lpExistingFileName,_Reserved_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.CreateHardLinkTransactedW(_In_ LPCTSTR lpFileName,_In_ LPCTSTR lpExistingFileName,_Reserved_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.CreateHardLinkTransactedA(_In_ LPCTSTR lpFileName,_In_ LPCTSTR lpExistingFileName,_Reserved_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ HANDLE hTransaction)
HRESULT WINAPI wofutil.WofWimEnumFiles(_In_ PCWSTR VolumeName,_In_ LARGE_INTEGER DataSourceId,_In_ WofEnumFilesProc EnumProc,_In_opt_ PVOID UserData)
BOOL WINAPI kernel32.UnlockFile(_In_ HANDLE hFile,_In_ DWORD dwFileOffsetLow,_In_ DWORD dwFileOffsetHigh,_In_ DWORD nNumberOfBytesToUnlockLow,_In_ DWORD nNumberOfBytesToUnlockHigh)
BOOL WINAPI kernel32.FindClose(_Inout_ HANDLE hFindFile)
BOOL WINAPI kernel32.GetFileAttributesTransacted(_In_ LPCTSTR lpFileName,_In_ GET_FILEEX_INFO_LEVELS fInfoLevelId,_Out_ LPVOID lpFileInformation,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.GetFileAttributesTransactedW(_In_ LPCTSTR lpFileName,_In_ GET_FILEEX_INFO_LEVELS fInfoLevelId,_Out_ LPVOID lpFileInformation,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.GetFileAttributesTransactedA(_In_ LPCTSTR lpFileName,_In_ GET_FILEEX_INFO_LEVELS fInfoLevelId,_Out_ LPVOID lpFileInformation,_In_ HANDLE hTransaction)
UINT WINAPI kernel32.GetTempFileName(_In_ LPCTSTR lpPathName,_In_ LPCTSTR lpPrefixString,_In_ UINT uUnique,_Out_ LPTSTR lpTempFileName)
UINT WINAPI kernel32.GetTempFileNameW(_In_ LPCTSTR lpPathName,_In_ LPCTSTR lpPrefixString,_In_ UINT uUnique,_Out_ LPTSTR lpTempFileName)
UINT WINAPI kernel32.GetTempFileNameA(_In_ LPCTSTR lpPathName,_In_ LPCTSTR lpPrefixString,_In_ UINT uUnique,_Out_ LPTSTR lpTempFileName)
BOOL WINAPI kernel32.ReadFileScatter(_In_ HANDLE hFile,_In_ FILE_SEGMENT_ELEMENT aSegmentArray[],_In_ DWORD nNumberOfBytesToRead,_Reserved_ LPDWORD lpReserved,_Inout_ LPOVERLAPPED lpOverlapped)
BOOL WINAPI kernel32.WriteFileEx(_In_ HANDLE hFile,_In_opt_ LPCVOID lpBuffer,_In_ DWORD nNumberOfBytesToWrite,_Inout_ LPOVERLAPPED lpOverlapped,_In_ LPOVERLAPPED_COMPLETION_ROUTINE lpCompletionRoutine)
BOOL WINAPI kernel32.SetEndOfFile(_In_ HANDLE hFile)
BOOL WINAPI kernel32.SetSearchPathMode(_In_ DWORD Flags)
BOOL WINAPI kernel32.CheckNameLegalDOS8Dot3(_In_ LPCTSTR lpName,_Out_opt_ LPSTR lpOemName,_In_ DWORD OemNameSize,_Out_opt_ PBOOL pbNameContainsSpaces,_Out_ PBOOL pbNameLegal)
BOOL WINAPI kernel32.CheckNameLegalDOS8Dot3W(_In_ LPCTSTR lpName,_Out_opt_ LPSTR lpOemName,_In_ DWORD OemNameSize,_Out_opt_ PBOOL pbNameContainsSpaces,_Out_ PBOOL pbNameLegal)
BOOL WINAPI kernel32.CheckNameLegalDOS8Dot3A(_In_ LPCTSTR lpName,_Out_opt_ LPSTR lpOemName,_In_ DWORD OemNameSize,_Out_opt_ PBOOL pbNameContainsSpaces,_Out_ PBOOL pbNameLegal)
HRESULT WINAPI wofutil.WofWimRemoveEntry(_In_ PCWSTR VolumeName,_In_ LARGE_INTEGER DataSourceId)
BOOL WINAPI advapi32.FileEncryptionStatus(_In_ LPCTSTR lpFileName,_Out_ LPDWORD lpStatus)
BOOL WINAPI advapi32.FileEncryptionStatusW(_In_ LPCTSTR lpFileName,_Out_ LPDWORD lpStatus)
BOOL WINAPI advapi32.FileEncryptionStatusA(_In_ LPCTSTR lpFileName,_Out_ LPDWORD lpStatus)
DWORD WINAPI kernel32.GetLongPathName(_In_ LPCTSTR lpszShortPath,_Out_ LPTSTR lpszLongPath,_In_ DWORD cchBuffer)
DWORD WINAPI kernel32.GetLongPathNameW(_In_ LPCTSTR lpszShortPath,_Out_ LPTSTR lpszLongPath,_In_ DWORD cchBuffer)
DWORD WINAPI kernel32.GetLongPathNameA(_In_ LPCTSTR lpszShortPath,_Out_ LPTSTR lpszLongPath,_In_ DWORD cchBuffer)
HANDLE WINAPI kernel32.FindFirstFileNameTransactedW(_In_ LPCWSTR lpFileName,_In_ DWORD dwFlags,_Inout_ LPDWORD StringLength,_Inout_ PWCHAR LinkName,_In_opt_ HANDLE hTransaction)
DWORD WINAPI kernel32.GetFullPathNameTransacted(_In_ LPCTSTR lpFileName,_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer,_Out_ LPTSTR *lpFilePart,_In_ HANDLE hTransaction)
DWORD WINAPI kernel32.GetFullPathNameTransactedW(_In_ LPCTSTR lpFileName,_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer,_Out_ LPTSTR *lpFilePart,_In_ HANDLE hTransaction)
DWORD WINAPI kernel32.GetFullPathNameTransactedA(_In_ LPCTSTR lpFileName,_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer,_Out_ LPTSTR *lpFilePart,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.SetFileAttributes(_In_ LPCTSTR lpFileName,_In_ DWORD dwFileAttributes)
BOOL WINAPI kernel32.SetFileAttributesW(_In_ LPCTSTR lpFileName,_In_ DWORD dwFileAttributes)
BOOL WINAPI kernel32.SetFileAttributesA(_In_ LPCTSTR lpFileName,_In_ DWORD dwFileAttributes)
DWORD WINAPI kernel32.SearchPath(_In_opt_ LPCTSTR lpPath,_In_ LPCTSTR lpFileName,_In_opt_ LPCTSTR lpExtension,_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer,_Out_opt_ LPTSTR *lpFilePart)
DWORD WINAPI kernel32.SearchPathW(_In_opt_ LPCTSTR lpPath,_In_ LPCTSTR lpFileName,_In_opt_ LPCTSTR lpExtension,_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer,_Out_opt_ LPTSTR *lpFilePart)
DWORD WINAPI kernel32.SearchPathA(_In_opt_ LPCTSTR lpPath,_In_ LPCTSTR lpFileName,_In_opt_ LPCTSTR lpExtension,_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer,_Out_opt_ LPTSTR *lpFilePart)
DWORD WINAPI kernel32.GetFullPathName(_In_ LPCTSTR lpFileName,_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer,_Out_ LPTSTR *lpFilePart)
DWORD WINAPI kernel32.GetFullPathNameW(_In_ LPCTSTR lpFileName,_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer,_Out_ LPTSTR *lpFilePart)
DWORD WINAPI kernel32.GetFullPathNameA(_In_ LPCTSTR lpFileName,_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer,_Out_ LPTSTR *lpFilePart)
HANDLE WINAPI kernel32.CreateFile2(_In_ LPCWSTR lpFileName,_In_ DWORD dwDesiredAccess,_In_ DWORD dwShareMode,_In_ DWORD dwCreationDisposition,_In_opt_ LPCREATEFILE2_EXTENDED_PARAMETERS pCreateExParams)
BOOL WINAPI kernel32.PostQueuedCompletionStatus(_In_ HANDLE CompletionPort,_In_ DWORD dwNumberOfBytesTransferred,_In_ ULONG_PTR dwCompletionKey,_In_opt_ LPOVERLAPPED lpOverlapped)
void WINAPI kernel32.SetFileApisToOEM(void None None)
HRESULT WINAPI wofutil.WofGetDriverVersion(_In_ HANDLE FileOrVolumeHandle,_In_ ULONG Provider,_Out_ PULONG WofVersion)
HANDLE WINAPI kernel32.CreateFile(_In_ LPCTSTR lpFileName,_In_ DWORD dwDesiredAccess,_In_ DWORD dwShareMode,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ DWORD dwCreationDisposition,_In_ DWORD dwFlagsAndAttributes,_In_opt_ HANDLE hTemplateFile)
HANDLE WINAPI kernel32.CreateFileW(_In_ LPCTSTR lpFileName,_In_ DWORD dwDesiredAccess,_In_ DWORD dwShareMode,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ DWORD dwCreationDisposition,_In_ DWORD dwFlagsAndAttributes,_In_opt_ HANDLE hTemplateFile)
HANDLE WINAPI kernel32.CreateFileA(_In_ LPCTSTR lpFileName,_In_ DWORD dwDesiredAccess,_In_ DWORD dwShareMode,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ DWORD dwCreationDisposition,_In_ DWORD dwFlagsAndAttributes,_In_opt_ HANDLE hTemplateFile)
BOOL WINAPI kernel32.AreFileApisANSI(void None None)
BOOL WINAPI kernel32.FlushFileBuffers(_In_ HANDLE hFile)
DWORD WINAPI kernel32.GetFileSize(_In_ HANDLE hFile,_Out_opt_ LPDWORD lpFileSizeHigh)
BOOL WINAPI kernel32.LockFile(_In_ HANDLE hFile,_In_ DWORD dwFileOffsetLow,_In_ DWORD dwFileOffsetHigh,_In_ DWORD nNumberOfBytesToLockLow,_In_ DWORD nNumberOfBytesToLockHigh)
void WINAPI advapi32.CloseEncryptedFileRaw(_In_ PVOID pvContext)
VOID CALLBACK None.FileIOCompletionRoutine(_In_ DWORD dwErrorCode,_In_ DWORD dwNumberOfBytesTransfered,_Inout_ LPOVERLAPPED lpOverlapped)
HANDLE WINAPI kernel32.FindFirstFileEx(_In_ LPCTSTR lpFileName,_In_ FINDEX_INFO_LEVELS fInfoLevelId,_Out_ LPVOID lpFindFileData,_In_ FINDEX_SEARCH_OPS fSearchOp,_Reserved_ LPVOID lpSearchFilter,_In_ DWORD dwAdditionalFlags)
HANDLE WINAPI kernel32.FindFirstFileExW(_In_ LPCTSTR lpFileName,_In_ FINDEX_INFO_LEVELS fInfoLevelId,_Out_ LPVOID lpFindFileData,_In_ FINDEX_SEARCH_OPS fSearchOp,_Reserved_ LPVOID lpSearchFilter,_In_ DWORD dwAdditionalFlags)
HANDLE WINAPI kernel32.FindFirstFileExA(_In_ LPCTSTR lpFileName,_In_ FINDEX_INFO_LEVELS fInfoLevelId,_Out_ LPVOID lpFindFileData,_In_ FINDEX_SEARCH_OPS fSearchOp,_Reserved_ LPVOID lpSearchFilter,_In_ DWORD dwAdditionalFlags)
DWORD WINAPI None.ExportCallback(_In_ PBYTE pbData,_In_opt_ PVOID pvCallbackContext,_In_ ULONG ulLength)
DWORD WINAPI kernel32.GetLongPathNameTransacted(_In_ LPCTSTR lpszShortPath,_Out_ LPTSTR lpszLongPath,_In_ DWORD cchBuffer,_In_ HANDLE hTransaction)
DWORD WINAPI kernel32.GetLongPathNameTransactedW(_In_ LPCTSTR lpszShortPath,_Out_ LPTSTR lpszLongPath,_In_ DWORD cchBuffer,_In_ HANDLE hTransaction)
DWORD WINAPI kernel32.GetLongPathNameTransactedA(_In_ LPCTSTR lpszShortPath,_Out_ LPTSTR lpszLongPath,_In_ DWORD cchBuffer,_In_ HANDLE hTransaction)
HFILE WINAPI kernel32.OpenFile(_In_ LPCSTR lpFileName,_Out_ LPOFSTRUCT lpReOpenBuff,_In_ UINT uStyle)
HANDLE WINAPI kernel32.OpenFileById(_In_ HANDLE hFile,_In_ LPFILE_ID_DESCRIPTOR lpFileID,_In_ DWORD dwDesiredAccess,_In_ DWORD dwShareMode,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ DWORD dwFlags)
BOOL WINAPI kernel32.WriteFile(_In_ HANDLE hFile,_In_ LPCVOID lpBuffer,_In_ DWORD nNumberOfBytesToWrite,_Out_opt_ LPDWORD lpNumberOfBytesWritten,_Inout_opt_ LPOVERLAPPED lpOverlapped)
HANDLE WINAPI kernel32.FindFirstFileTransacted(_In_ LPCTSTR lpFileName,_In_ FINDEX_INFO_LEVELS fInfoLevelId,_Out_ LPVOID lpFindFileData,_In_ FINDEX_SEARCH_OPS fSearchOp,_Reserved_ LPVOID lpSearchFilter,_In_ DWORD dwAdditionalFlags,_In_ HANDLE hTransaction)
HANDLE WINAPI kernel32.FindFirstFileTransactedW(_In_ LPCTSTR lpFileName,_In_ FINDEX_INFO_LEVELS fInfoLevelId,_Out_ LPVOID lpFindFileData,_In_ FINDEX_SEARCH_OPS fSearchOp,_Reserved_ LPVOID lpSearchFilter,_In_ DWORD dwAdditionalFlags,_In_ HANDLE hTransaction)
HANDLE WINAPI kernel32.FindFirstFileTransactedA(_In_ LPCTSTR lpFileName,_In_ FINDEX_INFO_LEVELS fInfoLevelId,_Out_ LPVOID lpFindFileData,_In_ FINDEX_SEARCH_OPS fSearchOp,_Reserved_ LPVOID lpSearchFilter,_In_ DWORD dwAdditionalFlags,_In_ HANDLE hTransaction)
DWORD WINAPI kernel32.GetFileType(_In_ HANDLE hFile)
DWORD WINAPI kernel32.GetCompressedFileSize(_In_ LPCTSTR lpFileName,_Out_opt_ LPDWORD lpFileSizeHigh)
DWORD WINAPI kernel32.GetCompressedFileSizeW(_In_ LPCTSTR lpFileName,_Out_opt_ LPDWORD lpFileSizeHigh)
DWORD WINAPI kernel32.GetCompressedFileSizeA(_In_ LPCTSTR lpFileName,_Out_opt_ LPDWORD lpFileSizeHigh)
BOOLEAN WINAPI kernel32.CreateSymbolicLink(_In_ LPTSTR lpSymlinkFileName,_In_ LPTSTR lpTargetFileName,_In_ DWORD dwFlags)
BOOLEAN WINAPI kernel32.CreateSymbolicLinkW(_In_ LPTSTR lpSymlinkFileName,_In_ LPTSTR lpTargetFileName,_In_ DWORD dwFlags)
BOOLEAN WINAPI kernel32.CreateSymbolicLinkA(_In_ LPTSTR lpSymlinkFileName,_In_ LPTSTR lpTargetFileName,_In_ DWORD dwFlags)
HANDLE WINAPI ktmw32.CreateTransaction(_In_opt_ LPSECURITY_ATTRIBUTES lpTransactionAttributes,_In_opt_ LPGUID UOW,_In_opt_ DWORD CreateOptions,_In_opt_ DWORD IsolationLevel,_In_opt_ DWORD IsolationFlags,_In_opt_ DWORD Timeout,_In_opt_ LPWSTR Description)
BOOL WINAPI kernel32.MoveFileEx(_In_ LPCTSTR lpExistingFileName,_In_opt_ LPCTSTR lpNewFileName,_In_ DWORD dwFlags)
BOOL WINAPI kernel32.MoveFileExW(_In_ LPCTSTR lpExistingFileName,_In_opt_ LPCTSTR lpNewFileName,_In_ DWORD dwFlags)
BOOL WINAPI kernel32.MoveFileExA(_In_ LPCTSTR lpExistingFileName,_In_opt_ LPCTSTR lpNewFileName,_In_ DWORD dwFlags)
DWORD WINAPI kernel32.GetShortPathName(_In_ LPCTSTR lpszLongPath,_Out_ LPTSTR lpszShortPath,_In_ DWORD cchBuffer)
DWORD WINAPI kernel32.GetShortPathNameW(_In_ LPCTSTR lpszLongPath,_Out_ LPTSTR lpszShortPath,_In_ DWORD cchBuffer)
DWORD WINAPI kernel32.GetShortPathNameA(_In_ LPCTSTR lpszLongPath,_Out_ LPTSTR lpszShortPath,_In_ DWORD cchBuffer)
INT WINAPI lz32.LZOpenFile(_In_ LPTSTR lpFileName,_Out_ LPOFSTRUCT lpReOpenBuf,_In_ WORD wStyle)
INT WINAPI lz32.LZOpenFileW(_In_ LPTSTR lpFileName,_Out_ LPOFSTRUCT lpReOpenBuf,_In_ WORD wStyle)
INT WINAPI lz32.LZOpenFileA(_In_ LPTSTR lpFileName,_Out_ LPOFSTRUCT lpReOpenBuf,_In_ WORD wStyle)
BOOL WINAPI kernel32.UnlockFileEx(_In_ HANDLE hFile,_Reserved_ DWORD dwReserved,_In_ DWORD nNumberOfBytesToUnlockLow,_In_ DWORD nNumberOfBytesToUnlockHigh,_Inout_ LPOVERLAPPED lpOverlapped)
DWORD WINAPI advapi32.OpenEncryptedFileRaw(_In_ LPCTSTR lpFileName,_In_ ULONG ulFlags,_Out_ PVOID *pvContext)
DWORD WINAPI advapi32.OpenEncryptedFileRawW(_In_ LPCTSTR lpFileName,_In_ ULONG ulFlags,_Out_ PVOID *pvContext)
DWORD WINAPI advapi32.OpenEncryptedFileRawA(_In_ LPCTSTR lpFileName,_In_ ULONG ulFlags,_Out_ PVOID *pvContext)
BOOL WINAPI kernel32.GetOverlappedResult(_In_ HANDLE hFile,_In_ LPOVERLAPPED lpOverlapped,_Out_ LPDWORD lpNumberOfBytesTransferred,_In_ BOOL bWait)
BOOL WINAPI kernel32.CopyFileTransacted(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName,_In_opt_ LPPROGRESS_ROUTINE lpProgressRoutine,_In_opt_ LPVOID lpData,_In_opt_ LPBOOL pbCancel,_In_ DWORD dwCopyFlags,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.CopyFileTransactedW(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName,_In_opt_ LPPROGRESS_ROUTINE lpProgressRoutine,_In_opt_ LPVOID lpData,_In_opt_ LPBOOL pbCancel,_In_ DWORD dwCopyFlags,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.CopyFileTransactedA(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName,_In_opt_ LPPROGRESS_ROUTINE lpProgressRoutine,_In_opt_ LPVOID lpData,_In_opt_ LPBOOL pbCancel,_In_ DWORD dwCopyFlags,_In_ HANDLE hTransaction)
HRESULT WINAPI wofutil.WofWimUpdateEntry(_In_ PCWSTR VolumeName,_In_ LARGE_INTEGER DataSourceId,_In_ PCWSTR NewWimPath)
void WINAPI kernel32.RtlUnwind(_In_opt_ PVOID TargetFrame,_In_opt_ PVOID TargetIp,_In_opt_ PEXCEPTION_RECORD ExceptionRecord,_In_ PVOID ReturnValue)
void WINAPI kernel32.SetLastError(_In_ DWORD dwErrCode)
BOOL None kernel32.SetThreadErrorMode(_In_ DWORD dwNewMode,_Out_ LPDWORD lpOldMode)
DWORD WINAPI kernel32.FormatMessage(_In_ DWORD dwFlags,_In_opt_ LPCVOID lpSource,_In_ DWORD dwMessageId,_In_ DWORD dwLanguageId,_Out_ LPTSTR lpBuffer,_In_ DWORD nSize,_In_opt_ va_list *Arguments)
DWORD WINAPI kernel32.FormatMessageW(_In_ DWORD dwFlags,_In_opt_ LPCVOID lpSource,_In_ DWORD dwMessageId,_In_ DWORD dwLanguageId,_Out_ LPTSTR lpBuffer,_In_ DWORD nSize,_In_opt_ va_list *Arguments)
DWORD WINAPI kernel32.FormatMessageA(_In_ DWORD dwFlags,_In_opt_ LPCVOID lpSource,_In_ DWORD dwMessageId,_In_ DWORD dwLanguageId,_Out_ LPTSTR lpBuffer,_In_ DWORD nSize,_In_opt_ va_list *Arguments)
HANDLE WINAPI kernel32.CreateIoCompletionPort(_In_ HANDLE FileHandle,_In_opt_ HANDLE ExistingCompletionPort,_In_ ULONG_PTR CompletionKey,_In_ DWORD NumberOfConcurrentThreads)
BOOL WINAPI kernel32.GetVolumeInformation(_In_opt_ LPCTSTR lpRootPathName,_Out_opt_ LPTSTR lpVolumeNameBuffer,_In_ DWORD nVolumeNameSize,_Out_opt_ LPDWORD lpVolumeSerialNumber,_Out_opt_ LPDWORD lpMaximumComponentLength,_Out_opt_ LPDWORD lpFileSystemFlags,_Out_opt_ LPTSTR lpFileSystemNameBuffer,_In_ DWORD nFileSystemNameSize)
BOOL WINAPI kernel32.GetVolumeInformationW(_In_opt_ LPCTSTR lpRootPathName,_Out_opt_ LPTSTR lpVolumeNameBuffer,_In_ DWORD nVolumeNameSize,_Out_opt_ LPDWORD lpVolumeSerialNumber,_Out_opt_ LPDWORD lpMaximumComponentLength,_Out_opt_ LPDWORD lpFileSystemFlags,_Out_opt_ LPTSTR lpFileSystemNameBuffer,_In_ DWORD nFileSystemNameSize)
BOOL WINAPI kernel32.GetVolumeInformationA(_In_opt_ LPCTSTR lpRootPathName,_Out_opt_ LPTSTR lpVolumeNameBuffer,_In_ DWORD nVolumeNameSize,_Out_opt_ LPDWORD lpVolumeSerialNumber,_Out_opt_ LPDWORD lpMaximumComponentLength,_Out_opt_ LPDWORD lpFileSystemFlags,_Out_opt_ LPTSTR lpFileSystemNameBuffer,_In_ DWORD nFileSystemNameSize)
DWORD WINAPI advapi32.ReadEncryptedFileRaw(_In_ PFE_EXPORT_FUNC pfExportCallback,_In_opt_ PVOID pvCallbackContext,_In_ PVOID pvContext)
BOOL None ktmw32.PrePrepareEnlistment(_In_ HANDLE EnlistmentHandle,_In_ PLARGE_INTEGER TmVirtualClock)
BOOL WINAPI kernel32.GetDiskFreeSpace(_In_ LPCTSTR lpRootPathName,_Out_ LPDWORD lpSectorsPerCluster,_Out_ LPDWORD lpBytesPerSector,_Out_ LPDWORD lpNumberOfFreeClusters,_Out_ LPDWORD lpTotalNumberOfClusters)
BOOL WINAPI kernel32.GetDiskFreeSpaceW(_In_ LPCTSTR lpRootPathName,_Out_ LPDWORD lpSectorsPerCluster,_Out_ LPDWORD lpBytesPerSector,_Out_ LPDWORD lpNumberOfFreeClusters,_Out_ LPDWORD lpTotalNumberOfClusters)
BOOL WINAPI kernel32.GetDiskFreeSpaceA(_In_ LPCTSTR lpRootPathName,_Out_ LPDWORD lpSectorsPerCluster,_Out_ LPDWORD lpBytesPerSector,_Out_ LPDWORD lpNumberOfFreeClusters,_Out_ LPDWORD lpTotalNumberOfClusters)
BOOL WINAPI kernel32.GetFileInformationByHandleEx(_In_ HANDLE hFile,_In_ FILE_INFO_BY_HANDLE_CLASS FileInformationClass,_Out_ LPVOID lpFileInformation,_In_ DWORD dwBufferSize)
VOID CALLBACK None.FileIOCompletionRoutine(_In_ DWORD dwErrorCode,_In_ DWORD dwNumberOfBytesTransfered,_Inout_ LPOVERLAPPED lpOverlapped)
HANDLE WINAPI kernel32.FindFirstFileEx(_In_ LPCTSTR lpFileName,_In_ FINDEX_INFO_LEVELS fInfoLevelId,_Out_ LPVOID lpFindFileData,_In_ FINDEX_SEARCH_OPS fSearchOp,_Reserved_ LPVOID lpSearchFilter,_In_ DWORD dwAdditionalFlags)
HANDLE WINAPI kernel32.FindFirstFileExW(_In_ LPCTSTR lpFileName,_In_ FINDEX_INFO_LEVELS fInfoLevelId,_Out_ LPVOID lpFindFileData,_In_ FINDEX_SEARCH_OPS fSearchOp,_Reserved_ LPVOID lpSearchFilter,_In_ DWORD dwAdditionalFlags)
HANDLE WINAPI kernel32.FindFirstFileExA(_In_ LPCTSTR lpFileName,_In_ FINDEX_INFO_LEVELS fInfoLevelId,_Out_ LPVOID lpFindFileData,_In_ FINDEX_SEARCH_OPS fSearchOp,_Reserved_ LPVOID lpSearchFilter,_In_ DWORD dwAdditionalFlags)
BOOL WINAPI ktmw32.SetTransactionInformation(_In_ HANDLE TransactionHandle,_In_opt_ DWORD IsolationLevel,_In_opt_ DWORD IsolationFlags,_In_opt_ DWORD Timeout,_In_opt_ LPWSTR Description)
BOOL WINAPI kernel32.ReadFileEx(_In_ HANDLE hFile,_Out_opt_ LPVOID lpBuffer,_In_ DWORD nNumberOfBytesToRead,_Inout_ LPOVERLAPPED lpOverlapped,_In_ LPOVERLAPPED_COMPLETION_ROUTINE lpCompletionRoutine)
BOOL WINAPI kernel32.UnmapViewOfFile(_In_ LPCVOID lpBaseAddress)
PEXCEPTION_ROUTINE WINAPI kernel32.RtlVirtualUnwind(_In_ HandlerType None,_In_ ImageBase None,_In_ ControlPC None,_In_ FunctionEntry None,_Inout_ ContextRecord None,_Out_ InFunction None,_Out_ EstablisherFrame None,_Inout_opt_ ContextPointers None)
HANDLE WINAPI ktmw32.OpenTransactionManagerById(_In_ LPGUID TransactionManagerId,_In_ ACCESS_MASK DesiredAccess,_In_opt_ ULONG OpenOptions)
SOCKET WSAAPI ws2_32.socket(_In_ int af,_In_ int type,_In_ int protocol)
BOOL WINAPI kernel32.FindNextStreamW(_In_ HANDLE hFindStream,_Out_ LPVOID lpFindStreamData)
BOOL WINAPI kernel32.GetFileAttributesTransacted(_In_ LPCTSTR lpFileName,_In_ GET_FILEEX_INFO_LEVELS fInfoLevelId,_Out_ LPVOID lpFileInformation,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.GetFileAttributesTransactedW(_In_ LPCTSTR lpFileName,_In_ GET_FILEEX_INFO_LEVELS fInfoLevelId,_Out_ LPVOID lpFileInformation,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.GetFileAttributesTransactedA(_In_ LPCTSTR lpFileName,_In_ GET_FILEEX_INFO_LEVELS fInfoLevelId,_Out_ LPVOID lpFileInformation,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.MoveFileTransacted(_In_ LPCTSTR lpExistingFileName,_In_opt_ LPCTSTR lpNewFileName,_In_opt_ LPPROGRESS_ROUTINE lpProgressRoutine,_In_opt_ LPVOID lpData,_In_ DWORD dwFlags,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.MoveFileTransactedW(_In_ LPCTSTR lpExistingFileName,_In_opt_ LPCTSTR lpNewFileName,_In_opt_ LPPROGRESS_ROUTINE lpProgressRoutine,_In_opt_ LPVOID lpData,_In_ DWORD dwFlags,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.MoveFileTransactedA(_In_ LPCTSTR lpExistingFileName,_In_opt_ LPCTSTR lpNewFileName,_In_opt_ LPPROGRESS_ROUTINE lpProgressRoutine,_In_opt_ LPVOID lpData,_In_ DWORD dwFlags,_In_ HANDLE hTransaction)
HRESULT None None.HRESULT_FROM_WIN32(DWORD x None)
USHORT WINAPI kernel32.CaptureStackBackTrace(_In_ ULONG FramesToSkip,_In_ ULONG FramesToCapture,_Out_ PVOID *BackTrace,_Out_opt_ PULONG BackTraceHash)
BOOL WINAPI ktmw32.CommitTransactionAsync(_In_ HANDLE TransactionHandle)
void WINAPI kernel32.RtlUnwind2(_In_opt_ PVOID TargetFrame,_In_opt_ PVOID TargetIp,_In_opt_ PEXCEPTION_RECORD ExceptionRecord,_In_ PVOID ReturnValue,_In_ PCONTEXT OriginalContext)
DWORD WINAPI kernel32.GetFileSize(_In_ HANDLE hFile,_Out_opt_ LPDWORD lpFileSizeHigh)
DWORD WINAPI kernel32.GetCurrentDirectory(_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer)
DWORD WINAPI kernel32.GetCurrentDirectoryW(_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer)
DWORD WINAPI kernel32.GetCurrentDirectoryA(_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer)
BOOL WINAPI kernel32.UnlockFileEx(_In_ HANDLE hFile,_Reserved_ DWORD dwReserved,_In_ DWORD nNumberOfBytesToUnlockLow,_In_ DWORD nNumberOfBytesToUnlockHigh,_Inout_ LPOVERLAPPED lpOverlapped)
BOOL WINAPI ktmw32.SinglePhaseReject(_In_ HANDLE EnlistmentHandle,_In_ PLARGE_INTEGER TmVirtualClock)
DWORD WINAPI kernel32.GetFileAttributes(_In_ LPCTSTR lpFileName)
DWORD WINAPI kernel32.GetFileAttributesW(_In_ LPCTSTR lpFileName)
DWORD WINAPI kernel32.GetFileAttributesA(_In_ LPCTSTR lpFileName)
PSLIST_ENTRY WINAPI kernel32.InterlockedPushEntrySList(_Inout_ PSLIST_HEADER ListHead,_Inout_ PSLIST_ENTRY ListEntry)
BOOL WINAPI kernel32.CloseHandle(_In_ HANDLE hObject)
HMODULE WINAPI kernel32.LoadLibrary(_In_ LPCTSTR lpFileName)
HMODULE WINAPI kernel32.LoadLibraryW(_In_ LPCTSTR lpFileName)
HMODULE WINAPI kernel32.LoadLibraryA(_In_ LPCTSTR lpFileName)
BOOL WINAPI kernel32.DefineDosDevice(_In_ DWORD dwFlags,_In_ LPCTSTR lpDeviceName,_In_opt_ LPCTSTR lpTargetPath)
BOOL WINAPI kernel32.DefineDosDeviceW(_In_ DWORD dwFlags,_In_ LPCTSTR lpDeviceName,_In_opt_ LPCTSTR lpTargetPath)
BOOL WINAPI kernel32.DefineDosDeviceA(_In_ DWORD dwFlags,_In_ LPCTSTR lpDeviceName,_In_opt_ LPCTSTR lpTargetPath)
DWORD WINAPI kernel32.GetLastError(void None None)
int WSAAPI ws2_32.GetAddrInfoExCancel(_In_ LPHANDLE lpHandle)
LPVOID WINAPI kernel32.MapViewOfFileEx(_In_ HANDLE hFileMappingObject,_In_ DWORD dwDesiredAccess,_In_ DWORD dwFileOffsetHigh,_In_ DWORD dwFileOffsetLow,_In_ SIZE_T dwNumberOfBytesToMap,_In_opt_ LPVOID lpBaseAddress)
BOOL WINAPI ktmw32.GetCurrentClockTransactionManager(_In_ HANDLE TransactionManagerHandle,_Out_ PLARGE_INTEGER TmVirtualClock)
BOOL None mswsock.AcceptEx(_In_ SOCKET sListenSocket,_In_ SOCKET sAcceptSocket,_In_ PVOID lpOutputBuffer,_In_ DWORD dwReceiveDataLength,_In_ DWORD dwLocalAddressLength,_In_ DWORD dwRemoteAddressLength,_Out_ LPDWORD lpdwBytesReceived,_In_ LPOVERLAPPED lpOverlapped)
BOOL WINAPI user32.SwitchDesktop(_In_ HDESK hDesktop)
DWORD None None.SCODE_SEVERITY(SCODE sc None)
DEP_SYSTEM_POLICY_TYPE WINAPI kernel32.GetSystemDEPPolicy(void None None)
BOOL WINAPI ktmw32.GetNotificationResourceManager(_In_ HANDLE ResourceManagerHandle,_Out_ PTRANSACTION_NOTIFICATION TransactionNotification,_In_ ULONG NotificationLength,_In_opt_ DWORD dwMilliseconds,_Out_opt_ PULONG ReturnLength)
BOOL None None.HasOverlappedIoCompleted(LPOVERLAPPED lpOverlapped None)
void __stdcall atlthunk.AtlThunk_InitData(AtlThunkData_t *Thunk None,void *Proc None,size_t FirstParameter None)
PSLIST_ENTRY WINAPI ntdll.RtlFirstEntrySList(_In_ PSLIST_HEADER ListHead)
BOOL WINAPI kernel32.CreateHardLinkTransacted(_In_ LPCTSTR lpFileName,_In_ LPCTSTR lpExistingFileName,_Reserved_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.CreateHardLinkTransactedW(_In_ LPCTSTR lpFileName,_In_ LPCTSTR lpExistingFileName,_Reserved_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.CreateHardLinkTransactedA(_In_ LPCTSTR lpFileName,_In_ LPCTSTR lpExistingFileName,_Reserved_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ HANDLE hTransaction)
void None mswsock.GetAcceptExSockaddrs(_In_ PVOID lpOutputBuffer,_In_ DWORD dwReceiveDataLength,_In_ DWORD dwLocalAddressLength,_In_ DWORD dwRemoteAddressLength,_Out_ LPSOCKADDR *LocalSockaddr,_Out_ LPINT LocalSockaddrLength,_Out_ LPSOCKADDR *RemoteSockaddr,_Out_ LPINT RemoteSockaddrLength)
HLOCAL WINAPI kernel32.LocalFree(_In_ HLOCAL hMem)
BOOL WINAPI kernel32.GetVolumePathName(_In_ LPCTSTR lpszFileName,_Out_ LPTSTR lpszVolumePathName,_In_ DWORD cchBufferLength)
BOOL WINAPI kernel32.GetVolumePathNameW(_In_ LPCTSTR lpszFileName,_Out_ LPTSTR lpszVolumePathName,_In_ DWORD cchBufferLength)
BOOL WINAPI kernel32.GetVolumePathNameA(_In_ LPCTSTR lpszFileName,_Out_ LPTSTR lpszVolumePathName,_In_ DWORD cchBufferLength)
BOOL WINAPI kernel32.VirtualProtectEx(_In_ HANDLE hProcess,_In_ LPVOID lpAddress,_In_ SIZE_T dwSize,_In_ DWORD flNewProtect,_Out_ PDWORD lpflOldProtect)
BOOL None None.SUCCEEDED(HRESULT hr None)
INT None mswsock.RIONotify(_In_ RIO_CQ CQ)
BOOL WINAPI user32.FlashWindowEx(_In_ PFLASHWINFO pfwi)
HANDLE WINAPI ktmw32.CreateResourceManager(_In_opt_ LPSECURITY_ATTRIBUTES lpResourceManagerAttributes,_In_ LPGUID ResourceManagerID,_In_opt_ DWORD CreateOptions,_In_ HANDLE TmHandle,_In_opt_ LPWSTR Description)
DWORD WINAPI kernel32.SearchPath(_In_opt_ LPCTSTR lpPath,_In_ LPCTSTR lpFileName,_In_opt_ LPCTSTR lpExtension,_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer,_Out_opt_ LPTSTR *lpFilePart)
DWORD WINAPI kernel32.SearchPathW(_In_opt_ LPCTSTR lpPath,_In_ LPCTSTR lpFileName,_In_opt_ LPCTSTR lpExtension,_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer,_Out_opt_ LPTSTR *lpFilePart)
DWORD WINAPI kernel32.SearchPathA(_In_opt_ LPCTSTR lpPath,_In_ LPCTSTR lpFileName,_In_opt_ LPCTSTR lpExtension,_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer,_Out_opt_ LPTSTR *lpFilePart)
HGLOBAL WINAPI None.GlobalDiscard([in] HGLOBAL hMem)
WORD None None.SCODE_FACILITY(SCODE sc None)
BOOL WINAPI ktmw32.GetEnlistmentRecoveryInformation(_In_ HANDLE EnlistmentHandle,_In_ ULONG BufferSize,_Out_ PVOID Buffer,_Out_opt_ PULONG BufferUsed)
BOOL WINAPI kernel32.GetVolumeNameForVolumeMountPoint(_In_ LPCTSTR lpszVolumeMountPoint,_Out_ LPTSTR lpszVolumeName,_In_ DWORD cchBufferLength)
BOOL WINAPI kernel32.GetVolumeNameForVolumeMountPointW(_In_ LPCTSTR lpszVolumeMountPoint,_Out_ LPTSTR lpszVolumeName,_In_ DWORD cchBufferLength)
BOOL WINAPI kernel32.GetVolumeNameForVolumeMountPointA(_In_ LPCTSTR lpszVolumeMountPoint,_Out_ LPTSTR lpszVolumeName,_In_ DWORD cchBufferLength)
HDESK WINAPI user32.CreateDesktopEx(_In_ LPCTSTR lpszDesktop,_Reserved_ LPCTSTR lpszDevice,_Reserved_ DEVMODE *pDevmode,_In_ DWORD dwFlags,_In_ ACCESS_MASK dwDesiredAccess,_In_opt_ LPSECURITY_ATTRIBUTES lpsa,_In_ ULONG ulHeapSize,_Reserved_ PVOID pvoid)
HDESK WINAPI user32.CreateDesktopExW(_In_ LPCTSTR lpszDesktop,_Reserved_ LPCTSTR lpszDevice,_Reserved_ DEVMODE *pDevmode,_In_ DWORD dwFlags,_In_ ACCESS_MASK dwDesiredAccess,_In_opt_ LPSECURITY_ATTRIBUTES lpsa,_In_ ULONG ulHeapSize,_Reserved_ PVOID pvoid)
HDESK WINAPI user32.CreateDesktopExA(_In_ LPCTSTR lpszDesktop,_Reserved_ LPCTSTR lpszDevice,_Reserved_ DEVMODE *pDevmode,_In_ DWORD dwFlags,_In_ ACCESS_MASK dwDesiredAccess,_In_opt_ LPSECURITY_ATTRIBUTES lpsa,_In_ ULONG ulHeapSize,_Reserved_ PVOID pvoid)
void WINAPI kernel32.RtlUnwind2(_In_opt_ PVOID TargetFrame,_In_opt_ PVOID TargetIp,_In_opt_ PEXCEPTION_RECORD ExceptionRecord,_In_ PVOID ReturnValue,_In_ PCONTEXT OriginalContext)
BOOL WINAPI kernel32.CreateDirectoryTransacted(_In_opt_ LPCTSTR lpTemplateDirectory,_In_ LPCTSTR lpNewDirectory,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.CreateDirectoryTransactedW(_In_opt_ LPCTSTR lpTemplateDirectory,_In_ LPCTSTR lpNewDirectory,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.CreateDirectoryTransactedA(_In_opt_ LPCTSTR lpTemplateDirectory,_In_ LPCTSTR lpNewDirectory,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ HANDLE hTransaction)
PSLIST_ENTRY FASTCALL kernel32.InterlockedPushListSList(_Inout_ PSLIST_HEADER ListHead,_Inout_ PSLIST_ENTRY List,_Inout_ PSLIST_ENTRY ListEnd,_In_ ULONG Count)
BOOL WINAPI user32.FlashWindow(_In_ HWND hWnd,_In_ BOOL bInvert)
void WINAPI kernel32.RtlUnwind(_In_opt_ PVOID TargetFrame,_In_opt_ PVOID TargetIp,_In_opt_ PEXCEPTION_RECORD ExceptionRecord,_In_ PVOID ReturnValue)
BOOL WINAPI api-ms-win-core-libraryloader-l1-1-1.QueryOptionalDelayLoadedAPI(_In_ HMODULE hParentModule,_In_ LPCSTR lpDllName,_In_ LPCSTR lpProcName,_Reserved_ DWORD Reserved)
BOOL WINAPI kernel32.GetBinaryType(_In_ LPCTSTR lpApplicationName,_Out_ LPDWORD lpBinaryType)
BOOL WINAPI kernel32.GetBinaryTypeW(_In_ LPCTSTR lpApplicationName,_Out_ LPDWORD lpBinaryType)
BOOL WINAPI kernel32.GetBinaryTypeA(_In_ LPCTSTR lpApplicationName,_Out_ LPDWORD lpBinaryType)
HANDLE WINAPI ktmw32.OpenTransaction(_In_ DWORD dwDesiredAccess,_In_ LPGUID TransactionId)
BOOL WINAPI kernel32.DisableThreadLibraryCalls(_In_ HMODULE hModule)
HLOCAL WINAPI kernel32.LocalFree(_In_ HLOCAL hMem)
HANDLE WINAPI kernel32.FindFirstVolume(_Out_ LPTSTR lpszVolumeName,_In_ DWORD cchBufferLength)
HANDLE WINAPI kernel32.FindFirstVolumeW(_Out_ LPTSTR lpszVolumeName,_In_ DWORD cchBufferLength)
HANDLE WINAPI kernel32.FindFirstVolumeA(_Out_ LPTSTR lpszVolumeName,_In_ DWORD cchBufferLength)
HRESULT None None.StringCchPrintf(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszFormat,_In_ ... None)
HRESULT None None.StringCchPrintfW(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszFormat,_In_ ... None)
HRESULT None None.StringCchPrintfA(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszFormat,_In_ ... None)
void None None.YieldProcessor(void None None)
BOOL WINAPI kernel32.Beep(_In_ DWORD dwFreq,_In_ DWORD dwDuration)
LPVOID WINAPI kernel32.LocalLock(_In_ HLOCAL hMem)
HWINSTA WINAPI user32.CreateWindowStation(_In_opt_ LPCTSTR lpwinsta,DWORD dwFlags None,_In_ ACCESS_MASK dwDesiredAccess,_In_opt_ LPSECURITY_ATTRIBUTES lpsa)
HWINSTA WINAPI user32.CreateWindowStationW(_In_opt_ LPCTSTR lpwinsta,DWORD dwFlags None,_In_ ACCESS_MASK dwDesiredAccess,_In_opt_ LPSECURITY_ATTRIBUTES lpsa)
HWINSTA WINAPI user32.CreateWindowStationA(_In_opt_ LPCTSTR lpwinsta,DWORD dwFlags None,_In_ ACCESS_MASK dwDesiredAccess,_In_opt_ LPSECURITY_ATTRIBUTES lpsa)
BOOL WINAPI kernel32.CreateTimerQueueTimer(_Out_ PHANDLE phNewTimer,_In_opt_ HANDLE TimerQueue,_In_ WAITORTIMERCALLBACK Callback,_In_opt_ PVOID Parameter,_In_ DWORD DueTime,_In_ DWORD Period,_In_ ULONG Flags)
DWORD WINAPI None.ExportCallback(_In_ PBYTE pbData,_In_opt_ PVOID pvCallbackContext,_In_ ULONG ulLength)
BOOL WINAPI kernel32.CancelSynchronousIo(_In_ HANDLE hThread)
PVOID WINAPI api-ms-win-core-memory-l1-1-5.MapViewOfFileNuma2(_In_ HANDLE FileMappingHandle,_In_ HANDLE ProcessHandle,_In_ ULONG64 Offset,_In_opt_ PVOID BaseAddress,_In_ SIZE_T ViewSize,_In_ ULONG AllocationType,_In_ ULONG PageProtection,_In_ ULONG PreferredNode)
BOOL WINAPI user32.CloseDesktop(_In_ HDESK hDesktop)
BOOL None None.HasOverlappedIoCompleted(LPOVERLAPPED lpOverlapped None)
int WSAAPI ws2_32.WSAPoll(_Inout_ WSAPOLLFD fdarray[],_In_ ULONG nfds,_In_ INT timeout)
DWORD None kernel32.GetThreadErrorMode(void None None)
BOOL WINAPI kernel32.SetCurrentDirectory(_In_ LPCTSTR lpPathName)
BOOL WINAPI kernel32.SetCurrentDirectoryW(_In_ LPCTSTR lpPathName)
BOOL WINAPI kernel32.SetCurrentDirectoryA(_In_ LPCTSTR lpPathName)
LPTSTR WINAPI advapi32.GetTrusteeName(_In_ PTRUSTEE pTrustee)
LPTSTR WINAPI advapi32.GetTrusteeNameW(_In_ PTRUSTEE pTrustee)
LPTSTR WINAPI advapi32.GetTrusteeNameA(_In_ PTRUSTEE pTrustee)
BOOL WINAPI user32.GetUserObjectInformation(_In_ HANDLE hObj,_In_ int nIndex,_Out_opt_ PVOID pvInfo,_In_ DWORD nLength,_Out_opt_ LPDWORD lpnLengthNeeded)
BOOL WINAPI user32.GetUserObjectInformationW(_In_ HANDLE hObj,_In_ int nIndex,_Out_opt_ PVOID pvInfo,_In_ DWORD nLength,_Out_opt_ LPDWORD lpnLengthNeeded)
BOOL WINAPI user32.GetUserObjectInformationA(_In_ HANDLE hObj,_In_ int nIndex,_Out_opt_ PVOID pvInfo,_In_ DWORD nLength,_Out_opt_ LPDWORD lpnLengthNeeded)
int WSAAPI ws2_32.GetHostNameW(_Out_ PWSTR name,_In_ int namelen)
BOOL WINAPI ktmw32.GetEnlistmentId(_In_ HANDLE EnlistmentHandle,_Out_ LPGUID EnlistmentId)
UINT WINAPI kernel32.GlobalFlags(_In_ HGLOBAL hMem)
void WINAPI kernel32.DeleteCriticalSection(_Inout_ LPCRITICAL_SECTION lpCriticalSection)
VOID WINAPI kernel32.WakeByAddressAll(_In_ PVOID Address)
UINT WINAPI kernel32.GetDriveType(_In_opt_ LPCTSTR lpRootPathName)
UINT WINAPI kernel32.GetDriveTypeW(_In_opt_ LPCTSTR lpRootPathName)
UINT WINAPI kernel32.GetDriveTypeA(_In_opt_ LPCTSTR lpRootPathName)
WORD None None.SCODE_FACILITY(SCODE sc None)
UINT WINAPI kernel32.GetErrorMode(void None None)
BOOL None ktmw32.PrepareEnlistment(_In_ HANDLE EnlistmentHandle,_In_ PLARGE_INTEGER TmVirtualClock)
BOOL WINAPI ktmw32.SinglePhaseReject(_In_ HANDLE EnlistmentHandle,_In_ PLARGE_INTEGER TmVirtualClock)
int None ws2_32.listen(_In_ SOCKET s,_In_ int backlog)
BOOL WINAPI kernel32.VirtualProtectFromApp(_In_ PVOID Address,_In_ SIZE_T Size,_In_ ULONG NewProtection,_Out_ PULONG OldProtection)
BOOL WINAPI user32.SetThreadDesktop(_In_ HDESK hDesktop)
BOOL WINAPI kernel32.ReadFileScatter(_In_ HANDLE hFile,_In_ FILE_SEGMENT_ELEMENT aSegmentArray[],_In_ DWORD nNumberOfBytesToRead,_Reserved_ LPDWORD lpReserved,_Inout_ LPOVERLAPPED lpOverlapped)
HMODULE WINAPI kernel32.LoadLibraryEx(_In_ LPCTSTR lpFileName,_Reserved_ HANDLE hFile,_In_ DWORD dwFlags)
HMODULE WINAPI kernel32.LoadLibraryExW(_In_ LPCTSTR lpFileName,_Reserved_ HANDLE hFile,_In_ DWORD dwFlags)
HMODULE WINAPI kernel32.LoadLibraryExA(_In_ LPCTSTR lpFileName,_Reserved_ HANDLE hFile,_In_ DWORD dwFlags)
BOOL WINAPI kernel32.Wow64DisableWow64FsRedirection(_Out_ PVOID *OldValue)
HRESULT None None.StringCbCopy(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc)
HRESULT None None.StringCbCopyW(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc)
HRESULT None None.StringCbCopyA(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc)
BOOL WINAPI kernel32.CopyFileEx(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName,_In_opt_ LPPROGRESS_ROUTINE lpProgressRoutine,_In_opt_ LPVOID lpData,_In_opt_ LPBOOL pbCancel,_In_ DWORD dwCopyFlags)
BOOL WINAPI kernel32.CopyFileExW(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName,_In_opt_ LPPROGRESS_ROUTINE lpProgressRoutine,_In_opt_ LPVOID lpData,_In_opt_ LPBOOL pbCancel,_In_ DWORD dwCopyFlags)
BOOL WINAPI kernel32.CopyFileExA(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName,_In_opt_ LPPROGRESS_ROUTINE lpProgressRoutine,_In_opt_ LPVOID lpData,_In_opt_ LPBOOL pbCancel,_In_ DWORD dwCopyFlags)
BOOL None ktmw32.CommitEnlistment(_In_ HANDLE EnlistmentHandle,_In_ PLARGE_INTEGER TmVirtualClock)
TRUSTEE_FORM WINAPI advapi32.GetTrusteeForm(_In_ PTRUSTEE pTrustee)
TRUSTEE_FORM WINAPI advapi32.GetTrusteeFormW(_In_ PTRUSTEE pTrustee)
TRUSTEE_FORM WINAPI advapi32.GetTrusteeFormA(_In_ PTRUSTEE pTrustee)
DWORD WINAPI advapi32.GetNamedSecurityInfo(_In_ LPTSTR pObjectName,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_Out_opt_ PSID *ppsidOwner,_Out_opt_ PSID *ppsidGroup,_Out_opt_ PACL *ppDacl,_Out_opt_ PACL *ppSacl,_Out_opt_ PSECURITY_DESCRIPTOR *ppSecurityDescriptor)
DWORD WINAPI advapi32.GetNamedSecurityInfoW(_In_ LPTSTR pObjectName,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_Out_opt_ PSID *ppsidOwner,_Out_opt_ PSID *ppsidGroup,_Out_opt_ PACL *ppDacl,_Out_opt_ PACL *ppSacl,_Out_opt_ PSECURITY_DESCRIPTOR *ppSecurityDescriptor)
DWORD WINAPI advapi32.GetNamedSecurityInfoA(_In_ LPTSTR pObjectName,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_Out_opt_ PSID *ppsidOwner,_Out_opt_ PSID *ppsidGroup,_Out_opt_ PACL *ppDacl,_Out_opt_ PACL *ppSacl,_Out_opt_ PSECURITY_DESCRIPTOR *ppSecurityDescriptor)
VOID WINAPI kernel32.InitializeSRWLock(_Out_ PSRWLOCK SRWLock)
SOCKET None ws2_32.WSASocket(_In_ int af,_In_ int type,_In_ int protocol,_In_ LPWSAPROTOCOL_INFO lpProtocolInfo,_In_ GROUP g,_In_ DWORD dwFlags)
SOCKET None ws2_32.WSASocketW(_In_ int af,_In_ int type,_In_ int protocol,_In_ LPWSAPROTOCOL_INFO lpProtocolInfo,_In_ GROUP g,_In_ DWORD dwFlags)
SOCKET None ws2_32.WSASocketA(_In_ int af,_In_ int type,_In_ int protocol,_In_ LPWSAPROTOCOL_INFO lpProtocolInfo,_In_ GROUP g,_In_ DWORD dwFlags)
DWORD WINAPI kernel32.GetCurrentDirectory(_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer)
DWORD WINAPI kernel32.GetCurrentDirectoryW(_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer)
DWORD WINAPI kernel32.GetCurrentDirectoryA(_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer)
DWORD WINAPI advapi32.GetSecurityInfo(_In_ HANDLE handle,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_Out_opt_ PSID *ppsidOwner,_Out_opt_ PSID *ppsidGroup,_Out_opt_ PACL *ppDacl,_Out_opt_ PACL *ppSacl,_Out_opt_ PSECURITY_DESCRIPTOR *ppSecurityDescriptor)
DWORD None None.SCODE_SEVERITY(SCODE sc None)
LPVOID WINAPI kernel32.MapViewOfFileExNuma(_In_ HANDLE hFileMappingObject,_In_ DWORD dwDesiredAccess,_In_ DWORD dwFileOffsetHigh,_In_ DWORD dwFileOffsetLow,_In_ SIZE_T dwNumberOfBytesToMap,_In_opt_ LPVOID lpBaseAddress,_In_ DWORD nndPreferred)
void WINAPI kernel32.RtlUnwindEx(_In_opt_ PVOID TargetFrame,_In_opt_ PVOID TargetIp,_In_opt_ PEXCEPTION_RECORD ExceptionRecord,_In_ PVOID ReturnValue,_In_ PCONTEXT OriginalContext,_In_opt_ PUNWIND_HISTORY_TABLE HistoryTable)
HRESULT None None.StringCbCopyNEx(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc,_In_ size_t cbSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCbCopyNExW(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc,_In_ size_t cbSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCbCopyNExA(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc,_In_ size_t cbSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags)
void WINAPI kernel32.InitializeSListHead(_Inout_ PSLIST_HEADER ListHead)
BOOL None None.SUCCEEDED(HRESULT hr None)
BOOL WINAPI kernel32.TerminateThread(_Inout_ HANDLE hThread,_In_ DWORD dwExitCode)
BOOL None ole32.CoDosDateTimeToFileTime(_In_ WORD nDosDate,_In_ WORD nDosTime,_Out_ FILETIME *lpFileTime)
BOOL None ktmw32.RollforwardTransactionManager(_In_ HANDLE TransactionManagerHandle,_In_ PLARGE_INTEGER TmVirtualClock)
DWORD CALLBACK None.CopyProgressRoutine(_In_ LARGE_INTEGER TotalFileSize,_In_ LARGE_INTEGER TotalBytesTransferred,_In_ LARGE_INTEGER StreamSize,_In_ LARGE_INTEGER StreamBytesTransferred,_In_ DWORD dwStreamNumber,_In_ DWORD dwCallbackReason,_In_ HANDLE hSourceFile,_In_ HANDLE hDestinationFile,_In_opt_ LPVOID lpData)
BOOL None kernel32.SetThreadErrorMode(_In_ DWORD dwNewMode,_Out_ LPDWORD lpOldMode)
HANDLE WINAPI kernel32.FindFirstVolumeMountPoint(_In_ LPTSTR lpszRootPathName,_Out_ LPTSTR lpszVolumeMountPoint,_In_ DWORD cchBufferLength)
HANDLE WINAPI kernel32.FindFirstVolumeMountPointW(_In_ LPTSTR lpszRootPathName,_Out_ LPTSTR lpszVolumeMountPoint,_In_ DWORD cchBufferLength)
HANDLE WINAPI kernel32.FindFirstVolumeMountPointA(_In_ LPTSTR lpszRootPathName,_Out_ LPTSTR lpszVolumeMountPoint,_In_ DWORD cchBufferLength)
VOID WINAPI advapi32.BuildTrusteeWithSid(_Inout_ PTRUSTEE pTrustee,_In_opt_ PSID pSid)
VOID WINAPI advapi32.BuildTrusteeWithSidW(_Inout_ PTRUSTEE pTrustee,_In_opt_ PSID pSid)
VOID WINAPI advapi32.BuildTrusteeWithSidA(_Inout_ PTRUSTEE pTrustee,_In_opt_ PSID pSid)
void WINAPI kernel32.SetLastError(_In_ DWORD dwErrCode)
BOOL WINAPI ktmw32.GetCurrentClockTransactionManager(_In_ HANDLE TransactionManagerHandle,_Out_ PLARGE_INTEGER TmVirtualClock)
SCODE None None.MAKE_SCODE(WORD sev None,WORD fac None,WORD code None)
PSLIST_ENTRY WINAPI kernel32.InterlockedFlushSList(_Inout_ PSLIST_HEADER ListHead)
BOOL WINAPI kernel32.BindIoCompletionCallback(_In_ HANDLE FileHandle,_In_ LPOVERLAPPED_COMPLETION_ROUTINE Function,_In_ ULONG Flags)
NTSTATUS NTAPI ntdll.NtCompareTokens(_In_ HANDLE FirstTokenHandle,_In_ HANDLE SecondTokenHandle,_Out_ PBOOLEAN Equal)
VOID WINAPI kernel32.ReleaseSRWLockExclusive(_Inout_ PSRWLOCK SRWLock)
LONG WINAPI advapi32.RegCloseKey(_In_ HKEY hKey)
BOOL WINAPI kernel32.SetFileAttributesTransacted(_In_ LPCTSTR lpFileName,_In_ DWORD dwFileAttributes,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.SetFileAttributesTransactedW(_In_ LPCTSTR lpFileName,_In_ DWORD dwFileAttributes,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.SetFileAttributesTransactedA(_In_ LPCTSTR lpFileName,_In_ DWORD dwFileAttributes,_In_ HANDLE hTransaction)
PVOID WINAPI kernel32.RtlPcToFileHeader(_In_ PVOID PcValue,_Out_ PVOID *BaseOfImage)
BOOL WINAPI advapi32.LookupPrivilegeName(_In_opt_ LPCTSTR lpSystemName,_In_ PLUID lpLuid,_Out_opt_ LPTSTR lpName,_Inout_ LPDWORD cchName)
BOOL WINAPI advapi32.LookupPrivilegeNameW(_In_opt_ LPCTSTR lpSystemName,_In_ PLUID lpLuid,_Out_opt_ LPTSTR lpName,_Inout_ LPDWORD cchName)
BOOL WINAPI advapi32.LookupPrivilegeNameA(_In_opt_ LPCTSTR lpSystemName,_In_ PLUID lpLuid,_Out_opt_ LPTSTR lpName,_Inout_ LPDWORD cchName)
DWORD WINAPI advapi32.WriteEncryptedFileRaw(_In_ PFE_IMPORT_FUNC pfImportCallback,_In_opt_ PVOID pvCallbackContext,_In_ PVOID pvContext)
void WINAPI kernel32.InitializeCriticalSection(_Out_ LPCRITICAL_SECTION lpCriticalSection)
BOOL WINAPI kernel32.SetEndOfFile(_In_ HANDLE hFile)
BOOL WINAPI kernel32.GetDiskFreeSpace(_In_ LPCTSTR lpRootPathName,_Out_ LPDWORD lpSectorsPerCluster,_Out_ LPDWORD lpBytesPerSector,_Out_ LPDWORD lpNumberOfFreeClusters,_Out_ LPDWORD lpTotalNumberOfClusters)
BOOL WINAPI kernel32.GetDiskFreeSpaceW(_In_ LPCTSTR lpRootPathName,_Out_ LPDWORD lpSectorsPerCluster,_Out_ LPDWORD lpBytesPerSector,_Out_ LPDWORD lpNumberOfFreeClusters,_Out_ LPDWORD lpTotalNumberOfClusters)
BOOL WINAPI kernel32.GetDiskFreeSpaceA(_In_ LPCTSTR lpRootPathName,_Out_ LPDWORD lpSectorsPerCluster,_Out_ LPDWORD lpBytesPerSector,_Out_ LPDWORD lpNumberOfFreeClusters,_Out_ LPDWORD lpTotalNumberOfClusters)
BOOL None kernel32.BackupRead(_In_ HANDLE hFile,_Out_ LPBYTE lpBuffer,_In_ DWORD nNumberOfBytesToRead,_Out_ LPDWORD lpNumberOfBytesRead,_In_ BOOL bAbort,_In_ BOOL bProcessSecurity,_Out_ LPVOID *lpContext)
void WINAPI advapi32.BuildTrusteeWithObjectsAndSid(_Inout_ PTRUSTEE pTrustee,_In_opt_ POBJECTS_AND_SID pObjSid,_In_opt_ GUID *pObjectGuid,_In_opt_ GUID *pInheritedObjectGuid,_In_opt_ PSID pSid)
void WINAPI advapi32.BuildTrusteeWithObjectsAndSidW(_Inout_ PTRUSTEE pTrustee,_In_opt_ POBJECTS_AND_SID pObjSid,_In_opt_ GUID *pObjectGuid,_In_opt_ GUID *pInheritedObjectGuid,_In_opt_ PSID pSid)
void WINAPI advapi32.BuildTrusteeWithObjectsAndSidA(_Inout_ PTRUSTEE pTrustee,_In_opt_ POBJECTS_AND_SID pObjSid,_In_opt_ GUID *pObjectGuid,_In_opt_ GUID *pInheritedObjectGuid,_In_opt_ PSID pSid)
HRESULT None None.StringCbPrintf_lEx(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_Out_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ ... None)
HRESULT None None.StringCbPrintf_lExW(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_Out_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ ... None)
HRESULT None None.StringCbPrintf_lExA(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_Out_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ ... None)
BOOLEAN WINAPI kernel32.TryAcquireSRWLockExclusive(_Inout_ PSRWLOCK SRWLock)
DWORD WINAPI advapi32.SetEntriesInAcl(_In_ ULONG cCountOfExplicitEntries,_In_opt_ PEXPLICIT_ACCESS pListOfExplicitEntries,_In_opt_ PACL OldAcl,_Out_ PACL *NewAcl)
DWORD WINAPI advapi32.SetEntriesInAclW(_In_ ULONG cCountOfExplicitEntries,_In_opt_ PEXPLICIT_ACCESS pListOfExplicitEntries,_In_opt_ PACL OldAcl,_Out_ PACL *NewAcl)
DWORD WINAPI advapi32.SetEntriesInAclA(_In_ ULONG cCountOfExplicitEntries,_In_opt_ PEXPLICIT_ACCESS pListOfExplicitEntries,_In_opt_ PACL OldAcl,_Out_ PACL *NewAcl)
int None ws2_32.ioctlsocket(_In_ SOCKET s,_In_ long cmd,_Inout_ u_long *argp)
HFONT None gdi32.CreateFont(_In_ int nHeight,_In_ int nWidth,_In_ int nEscapement,_In_ int nOrientation,_In_ int fnWeight,_In_ DWORD fdwItalic,_In_ DWORD fdwUnderline,_In_ DWORD fdwStrikeOut,_In_ DWORD fdwCharSet,_In_ DWORD fdwOutputPrecision,_In_ DWORD fdwClipPrecision,_In_ DWORD fdwQuality,_In_ DWORD fdwPitchAndFamily,_In_ LPCTSTR lpszFace)
HFONT None gdi32.CreateFontW(_In_ int nHeight,_In_ int nWidth,_In_ int nEscapement,_In_ int nOrientation,_In_ int fnWeight,_In_ DWORD fdwItalic,_In_ DWORD fdwUnderline,_In_ DWORD fdwStrikeOut,_In_ DWORD fdwCharSet,_In_ DWORD fdwOutputPrecision,_In_ DWORD fdwClipPrecision,_In_ DWORD fdwQuality,_In_ DWORD fdwPitchAndFamily,_In_ LPCTSTR lpszFace)
HFONT None gdi32.CreateFontA(_In_ int nHeight,_In_ int nWidth,_In_ int nEscapement,_In_ int nOrientation,_In_ int fnWeight,_In_ DWORD fdwItalic,_In_ DWORD fdwUnderline,_In_ DWORD fdwStrikeOut,_In_ DWORD fdwCharSet,_In_ DWORD fdwOutputPrecision,_In_ DWORD fdwClipPrecision,_In_ DWORD fdwQuality,_In_ DWORD fdwPitchAndFamily,_In_ LPCTSTR lpszFace)
LONG WINAPI advapi32.RegSaveKeyEx(_In_ HKEY hKey,_In_ LPCTSTR lpFile,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ DWORD Flags)
LONG WINAPI advapi32.RegSaveKeyExW(_In_ HKEY hKey,_In_ LPCTSTR lpFile,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ DWORD Flags)
LONG WINAPI advapi32.RegSaveKeyExA(_In_ HKEY hKey,_In_ LPCTSTR lpFile,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ DWORD Flags)
DLL_DIRECTORY_COOKIE WINAPI kernel32.AddDllDirectory(_In_ PCWSTR NewDirectory)
HRESULT None None.StringCbCatEx(_Inout_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCbCatExW(_Inout_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCbCatExA(_Inout_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags)
int None None.WSARecvMsg(_In_ SOCKET s,_Inout_ LPWSAMSG lpMsg,_Out_ LPDWORD lpdwNumberOfBytesRecvd,_In_ LPWSAOVERLAPPED lpOverlapped,_In_ LPWSAOVERLAPPED_COMPLETION_ROUTINE lpCompletionRoutine)
HRESULT WINAPI wofutil.WofGetDriverVersion(_In_ HANDLE FileOrVolumeHandle,_In_ ULONG Provider,_Out_ PULONG WofVersion)
BOOL WINAPI kernel32.DisableThreadLibraryCalls(_In_ HMODULE hModule)
DWORD WINAPI kernel32.GetProfileString(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ LPCTSTR lpDefault,_Out_ LPTSTR lpReturnedString,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetProfileStringW(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ LPCTSTR lpDefault,_Out_ LPTSTR lpReturnedString,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetProfileStringA(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ LPCTSTR lpDefault,_Out_ LPTSTR lpReturnedString,_In_ DWORD nSize)
HRESULT None ole32.StringFromCLSID(_In_ REFCLSID rclsid,_Out_ LPOLESTR *lplpsz)
HRESULT WINAPI windows.networking.SetSocketMediaStreamingMode(BOOL value None)
BOOL WINAPI ktmw32.GetTransactionInformation(_In_ HANDLE TransactionHandle,_Out_opt_ PDWORD Outcome,_Out_opt_ PDWORD IsolationLevel,_Out_opt_ PDWORD IsolationFlags,_Out_opt_ PDWORD Timeout,_In_ DWORD BufferLength,_Out_opt_ LPWSTR Description)
HRESULT None None.HRESULT_FROM_NT(DWORD x None)
HRGN None gdi32.CreateRoundRectRgn(_In_ int nLeftRect,_In_ int nTopRect,_In_ int nRightRect,_In_ int nBottomRect,_In_ int nWidthEllipse,_In_ int nHeightEllipse)
BOOL WINAPI kernel32.Process32First(_In_ HANDLE hSnapshot,_Inout_ LPPROCESSENTRY32 lppe)
BOOL WINAPI kernel32.Process32FirstW(_In_ HANDLE hSnapshot,_Inout_ LPPROCESSENTRY32 lppe)
BOOL WINAPI kernel32.Process32First(_In_ HANDLE hSnapshot,_Inout_ LPPROCESSENTRY32 lppe)
UINT WINAPI kernel32.SetErrorMode(_In_ UINT uMode)
HRESULT None None.StringCbVPrintf_lEx(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_Out_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ va_list argList)
HRESULT None None.StringCbVPrintf_lExW(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_Out_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ va_list argList)
HRESULT None None.StringCbVPrintf_lExA(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_Out_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ va_list argList)
BOOL WINAPI advapi32.ImpersonateSelf(_In_ SECURITY_IMPERSONATION_LEVEL ImpersonationLevel)
UINT WINAPI kernel32.GetSystemDirectory(_Out_ LPTSTR lpBuffer,_In_ UINT uSize)
UINT WINAPI kernel32.GetSystemDirectoryW(_Out_ LPTSTR lpBuffer,_In_ UINT uSize)
UINT WINAPI kernel32.GetSystemDirectoryA(_Out_ LPTSTR lpBuffer,_In_ UINT uSize)
SOCKET None ws2_32.WSASocket(_In_ int af,_In_ int type,_In_ int protocol,_In_ LPWSAPROTOCOL_INFO lpProtocolInfo,_In_ GROUP g,_In_ DWORD dwFlags)
SOCKET None ws2_32.WSASocketW(_In_ int af,_In_ int type,_In_ int protocol,_In_ LPWSAPROTOCOL_INFO lpProtocolInfo,_In_ GROUP g,_In_ DWORD dwFlags)
SOCKET None ws2_32.WSASocketA(_In_ int af,_In_ int type,_In_ int protocol,_In_ LPWSAPROTOCOL_INFO lpProtocolInfo,_In_ GROUP g,_In_ DWORD dwFlags)
BOOL WINAPI kernel32.DeleteVolumeMountPoint(_In_ LPCTSTR lpszVolumeMountPoint)
BOOL WINAPI kernel32.DeleteVolumeMountPointW(_In_ LPCTSTR lpszVolumeMountPoint)
BOOL WINAPI kernel32.DeleteVolumeMountPointA(_In_ LPCTSTR lpszVolumeMountPoint)
BOOL WINAPI kernel32.GetPrivateProfileStruct(_In_ LPCTSTR lpszSection,_In_ LPCTSTR lpszKey,_Out_ LPVOID lpStruct,_In_ UINT uSizeStruct,_In_ LPCTSTR szFile)
BOOL WINAPI kernel32.GetPrivateProfileStructW(_In_ LPCTSTR lpszSection,_In_ LPCTSTR lpszKey,_Out_ LPVOID lpStruct,_In_ UINT uSizeStruct,_In_ LPCTSTR szFile)
BOOL WINAPI kernel32.GetPrivateProfileStructA(_In_ LPCTSTR lpszSection,_In_ LPCTSTR lpszKey,_Out_ LPVOID lpStruct,_In_ UINT uSizeStruct,_In_ LPCTSTR szFile)
INSTALLSTATE None msi.MsiQueryFeatureState(_In_ LPCTSTR szProduct,_In_ LPCTSTR szFeature)
INSTALLSTATE None msi.MsiQueryFeatureStateW(_In_ LPCTSTR szProduct,_In_ LPCTSTR szFeature)
INSTALLSTATE None msi.MsiQueryFeatureStateA(_In_ LPCTSTR szProduct,_In_ LPCTSTR szFeature)
BOOL WINAPI ktmw32.RecoverTransactionManager(_In_ HANDLE TransactionManagerHandle)
UINT WINAPI kernel32.GetWindowsDirectory(_Out_ LPTSTR lpBuffer,_In_ UINT uSize)
UINT WINAPI kernel32.GetWindowsDirectoryW(_Out_ LPTSTR lpBuffer,_In_ UINT uSize)
UINT WINAPI kernel32.GetWindowsDirectoryA(_Out_ LPTSTR lpBuffer,_In_ UINT uSize)
HRESULT None None.MAKE_HRESULT(WORD sev None,WORD fac None,WORD code None)
HRESULT None None.StringCchVPrintf_l(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ va_list argList)
HRESULT None None.StringCchVPrintf_lW(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ va_list argList)
HRESULT None None.StringCchVPrintf_lA(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ va_list argList)
BOOL WINAPI advapi32.SetPrivateObjectSecurityEx(_In_ SECURITY_INFORMATION SecurityInformation,_In_ PSECURITY_DESCRIPTOR ModificationDescriptor,_Inout_ PSECURITY_DESCRIPTOR *ObjectsSecurityDescriptor,_In_ ULONG AutoInheritFlags,_In_ PGENERIC_MAPPING GenericMapping,_In_opt_ HANDLE Token)
BOOL WINAPI ktmw32.RollbackComplete(_In_ HANDLE EnlistmentHandle,_In_ PLARGE_INTEGER TmVirtualClock)
BOOL WINAPI kernel32.SetProcessDEPPolicy(_In_ DWORD dwFlags)
INT None mswsock.RIONotify(_In_ RIO_CQ CQ)
BOOL WINAPI kernel32.GetPhysicallyInstalledSystemMemory(_Out_ PULONGLONG TotalMemoryInKilobytes)
BOOL WINAPI kernel32.RemoveDirectoryTransacted(_In_ LPCTSTR lpPathName,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.RemoveDirectoryTransactedW(_In_ LPCTSTR lpPathName,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.RemoveDirectoryTransactedA(_In_ LPCTSTR lpPathName,_In_ HANDLE hTransaction)
int None ws2_32.WSARecv(_In_ SOCKET s,_Inout_ LPWSABUF lpBuffers,_In_ DWORD dwBufferCount,_Out_ LPDWORD lpNumberOfBytesRecvd,_Inout_ LPDWORD lpFlags,_In_ LPWSAOVERLAPPED lpOverlapped,_In_ LPWSAOVERLAPPED_COMPLETION_ROUTINE lpCompletionRoutine)
BOOL WINAPI ktmw32.RollbackTransactionAsync(_In_ HANDLE TransactionHandle)
BOOL WINAPI ktmw32.GetTransactionManagerId(_In_ HANDLE TransactionManagerHandle,_Out_ LPGUID TransactionManagerId)
BOOL WINAPI kernel32.SetProcessPriorityBoost(_In_ HANDLE hProcess,_In_ BOOL DisablePriorityBoost)
BOOL WINAPI ktmw32.RecoverEnlistment(_In_ HANDLE EnlistmentHandle,_In_opt_ PVOID EnlistmentKey)
void WINAPI kernel32.FatalAppExit(_In_ UINT uAction,_In_ LPCTSTR lpMessageText)
void WINAPI kernel32.FatalAppExitW(_In_ UINT uAction,_In_ LPCTSTR lpMessageText)
void WINAPI kernel32.FatalAppExitA(_In_ UINT uAction,_In_ LPCTSTR lpMessageText)
BOOL WINAPI advapi32.AccessCheckByTypeResultList(_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_opt_ PSID PrincipalSelfSid,_In_ HANDLE ClientToken,_In_ DWORD DesiredAccess,_Inout_opt_ POBJECT_TYPE_LIST ObjectTypeList,_In_ DWORD ObjectTypeListLength,_Out_ PGENERIC_MAPPING GenericMapping,_Out_opt_ PPRIVILEGE_SET PrivilegeSet,_Inout_ LPDWORD PrivilegeSetLength,_Out_ LPDWORD GrantedAccessList,_Out_ LPDWORD AccessStatusList)
BOOL WINAPI ktmw32.SetResourceManagerCompletionPort(_In_ HANDLE ResourceManagerHandle,_In_ HANDLE IoCompletionPortHandle,_In_ ULONG_PTR CompletionKey)
BOOL None None.IS_ERROR(HRESULT Status None)
BOOL WINAPI kernel32.Process32Next(_In_ HANDLE hSnapshot,_Out_ LPPROCESSENTRY32 lppe)
BOOL WINAPI kernel32.Process32NextW(_In_ HANDLE hSnapshot,_Out_ LPPROCESSENTRY32 lppe)
BOOL WINAPI kernel32.Process32Next(_In_ HANDLE hSnapshot,_Out_ LPPROCESSENTRY32 lppe)
DWORD WINAPI advapi32.SetSecurityDescriptorRMControl(_Inout_ PSECURITY_DESCRIPTOR SecurityDescriptor,_In_opt_ PUCHAR RMControl)
BOOL WINAPI kernel32.MoveFileWithProgress(_In_ LPCTSTR lpExistingFileName,_In_opt_ LPCTSTR lpNewFileName,_In_opt_ LPPROGRESS_ROUTINE lpProgressRoutine,_In_opt_ LPVOID lpData,_In_ DWORD dwFlags)
BOOL WINAPI kernel32.MoveFileWithProgressW(_In_ LPCTSTR lpExistingFileName,_In_opt_ LPCTSTR lpNewFileName,_In_opt_ LPPROGRESS_ROUTINE lpProgressRoutine,_In_opt_ LPVOID lpData,_In_ DWORD dwFlags)
BOOL WINAPI kernel32.MoveFileWithProgressA(_In_ LPCTSTR lpExistingFileName,_In_opt_ LPCTSTR lpNewFileName,_In_opt_ LPPROGRESS_ROUTINE lpProgressRoutine,_In_opt_ LPVOID lpData,_In_ DWORD dwFlags)
BOOL WINAPI ktmw32.RollbackTransaction(_In_ HANDLE TransactionHandle)
DWORD WINAPI kernel32.GetPrivateProfileSectionNames(_Out_ LPTSTR lpszReturnBuffer,_In_ DWORD nSize,_In_ LPCTSTR lpFileName)
DWORD WINAPI kernel32.GetPrivateProfileSectionNamesW(_Out_ LPTSTR lpszReturnBuffer,_In_ DWORD nSize,_In_ LPCTSTR lpFileName)
DWORD WINAPI kernel32.GetPrivateProfileSectionNamesA(_Out_ LPTSTR lpszReturnBuffer,_In_ DWORD nSize,_In_ LPCTSTR lpFileName)
BOOL WINAPI kernel32.FindNextVolumeMountPoint(_In_ HANDLE hFindVolumeMountPoint,_Out_ LPTSTR lpszVolumeMountPoint,_In_ DWORD cchBufferLength)
BOOL WINAPI kernel32.FindNextVolumeMountPointW(_In_ HANDLE hFindVolumeMountPoint,_Out_ LPTSTR lpszVolumeMountPoint,_In_ DWORD cchBufferLength)
BOOL WINAPI kernel32.FindNextVolumeMountPointA(_In_ HANDLE hFindVolumeMountPoint,_Out_ LPTSTR lpszVolumeMountPoint,_In_ DWORD cchBufferLength)
DWORD WINAPI kernel32.GetModuleFileName(_In_opt_ HMODULE hModule,_Out_ LPTSTR lpFilename,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetModuleFileNameW(_In_opt_ HMODULE hModule,_Out_ LPTSTR lpFilename,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetModuleFileNameA(_In_opt_ HMODULE hModule,_Out_ LPTSTR lpFilename,_In_ DWORD nSize)
BOOL WINAPI kernel32.SetComputerNameEx(_In_ COMPUTER_NAME_FORMAT NameType,_In_ LPCTSTR lpBuffer)
BOOL WINAPI kernel32.SetComputerNameExW(_In_ COMPUTER_NAME_FORMAT NameType,_In_ LPCTSTR lpBuffer)
BOOL WINAPI kernel32.SetComputerNameExA(_In_ COMPUTER_NAME_FORMAT NameType,_In_ LPCTSTR lpBuffer)
HRESULT None None.ResolveTargetUriToPart(IOpcRelationship * relativeUri,IOpcPartUri **resolvedUri None)
HLOCAL WINAPI kernel32.LocalReAlloc(_In_ HLOCAL hMem,_In_ SIZE_T uBytes,_In_ UINT uFlags)
BOOL WINAPI kernel32.FindVolumeClose(_In_ HANDLE hFindVolume)
VOID WINAPI advapi32.QuerySecurityAccessMask(_In_ SECURITY_INFORMATION SecurityInformation,_Out_ LPDWORD DesiredAccess)
BOOL WINAPI kernel32.CreateDirectory(_In_ LPCTSTR lpPathName,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes)
BOOL WINAPI kernel32.CreateDirectoryW(_In_ LPCTSTR lpPathName,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes)
BOOL WINAPI kernel32.CreateDirectoryA(_In_ LPCTSTR lpPathName,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes)
HMODULE WINAPI kernel32.LoadPackagedLibrary(_In_ LPCWSTR lpwLibFileName,_Reserved_ DWORD Reserved)
SIZE_T WINAPI kernel32.GetLargePageMinimum(void None None)
BOOL WINAPI ktmw32.RollbackEnlistment(_In_ HANDLE EnlistmentHandle,_In_ PLARGE_INTEGER TmVirtualClock)
BOOL WINAPI kernel32.Module32Next(_In_ HANDLE hSnapshot,_Out_ LPMODULEENTRY32 lpme)
BOOL WINAPI kernel32.Module32NextW(_In_ HANDLE hSnapshot,_Out_ LPMODULEENTRY32 lpme)
BOOL WINAPI kernel32.Module32Next(_In_ HANDLE hSnapshot,_Out_ LPMODULEENTRY32 lpme)
DWORD None kernel32.SetTapePosition(_In_ HANDLE hDevice,_In_ DWORD dwPositionMethod,_In_ DWORD dwPartition,_In_ DWORD dwOffsetLow,_In_ DWORD dwOffsetHigh,_In_ BOOL bImmediate)
BOOL WINAPI advapi32.CreatePrivateObjectSecurityEx(_In_opt_ PSECURITY_DESCRIPTOR ParentDescriptor,_In_opt_ PSECURITY_DESCRIPTOR CreatorDescriptor,_Out_ PSECURITY_DESCRIPTOR *NewDescriptor,_In_opt_ GUID *ObjectType,_In_ BOOL IsContainerObject,_In_ ULONG AutoInheritFlags,_In_opt_ HANDLE Token,_In_ PGENERIC_MAPPING GenericMapping)
BOOL WINAPI user32.CloseDesktop(_In_ HDESK hDesktop)
HANDLE WINAPI kernel32.GetProcessHeap(void None None)
LPVOID WINAPI kernel32.HeapAlloc(_In_ HANDLE hHeap,_In_ DWORD dwFlags,_In_ SIZE_T dwBytes)
BOOL WINAPI kernel32.GetFileTime(_In_ HANDLE hFile,_Out_opt_ LPFILETIME lpCreationTime,_Out_opt_ LPFILETIME lpLastAccessTime,_Out_opt_ LPFILETIME lpLastWriteTime)
BOOL WINAPI kernel32.AllocateUserPhysicalPages(_In_ HANDLE hProcess,_Inout_ PULONG_PTR NumberOfPages,_Out_ PULONG_PTR UserPfnArray)
INT None ws2_32.WSAInstallServiceClass(_In_ LPWSASERVICECLASSINFO lpServiceClassInfo)
INT None ws2_32.WSAInstallServiceClassW(_In_ LPWSASERVICECLASSINFO lpServiceClassInfo)
INT None ws2_32.WSAInstallServiceClassA(_In_ LPWSASERVICECLASSINFO lpServiceClassInfo)
BOOL WINAPI kernel32.GetFileAttributesEx(_In_ LPCTSTR lpFileName,_In_ GET_FILEEX_INFO_LEVELS fInfoLevelId,_Out_ LPVOID lpFileInformation)
BOOL WINAPI kernel32.GetFileAttributesExW(_In_ LPCTSTR lpFileName,_In_ GET_FILEEX_INFO_LEVELS fInfoLevelId,_Out_ LPVOID lpFileInformation)
BOOL WINAPI kernel32.GetFileAttributesExA(_In_ LPCTSTR lpFileName,_In_ GET_FILEEX_INFO_LEVELS fInfoLevelId,_Out_ LPVOID lpFileInformation)
HANDLE WINAPI ktmw32.OpenEnlistment(_In_ DWORD dwDesiredAccess,_In_ ResourceManagerHandle None,_In_ LPGUID EnlistmentId)
BOOL WINAPI kernel32.GetMemoryErrorHandlingCapabilities(_Out_ PULONG Capabilities)
BOOL WINAPI authz.AuthzInstallSecurityEventSource(_In_ DWORD dwFlags,_In_ PAUTHZ_SOURCE_SCHEMA_REGISTRATION pRegistration)
void WINAPI kernel32.RtlUnwindEx(_In_opt_ PVOID TargetFrame,_In_opt_ PVOID TargetIp,_In_opt_ PEXCEPTION_RECORD ExceptionRecord,_In_ PVOID ReturnValue,_In_ PCONTEXT OriginalContext,_In_opt_ PUNWIND_HISTORY_TABLE HistoryTable)
ULONG WINAPI ntdll.RtlNtStatusToDosError(_In_ NTSTATUS Status)
BOOL WINAPI avrt.AvRtJoinThreadOrderingGroup(_Out_ PHANDLE Context,_In_ GUID *ThreadOrderingGuid,_In_ BOOL Before)
PSLIST_ENTRY WINAPI kernel32.InterlockedPushListSListEx(_Inout_ PSLIST_HEADER ListHead,_Inout_ PSLIST_ENTRY List,_Inout_ PSLIST_ENTRY ListEnd,_In_ ULONG Count)
LPVOID WINAPI kernelbase.TlsGetValue(_In_ DWORD dwTlsIndex)
BOOL WINAPI ktmw32.CommitTransaction(_In_ HANDLE TransactionHandle)
BOOL None None.DisconnectEx(_In_ SOCKET hSocket,_In_ LPOVERLAPPED lpOverlapped,_In_ DWORD dwFlags,_In_ DWORD reserved)
VOID WINAPI kernel32.InitializeConditionVariable(_Out_ PCONDITION_VARIABLE ConditionVariable)
HANDLE WINAPI kernel32.OpenFileMappingFromApp(_In_ ULONG DesiredAccess,_In_ BOOL InheritHandle,_In_ PCWSTR Name)
HDESK WINAPI user32.OpenInputDesktop(_In_ DWORD dwFlags,_In_ BOOL fInherit,_In_ ACCESS_MASK dwDesiredAccess)
HRESULT None ole32.CoRegisterPSClsid(_In_ REFIID riid,_In_ REFCLSID rclsid)
FARPROC WINAPI kernel32.GetProcAddress(_In_ HMODULE hModule,_In_ LPCSTR lpProcName)
void WINAPI advapi32.BuildTrusteeWithObjectsAndName(_Inout_ PTRUSTEE pTrustee,_In_opt_ POBJECTS_AND_NAME pObjName,_In_opt_ SE_OBJECT_TYPE ObjectType,_In_opt_ LPTSTR ObjectTypeName,_In_opt_ LPTSTR InheritedObjectTypeName,_In_opt_ LPTSTR Name)
void WINAPI advapi32.BuildTrusteeWithObjectsAndNameW(_Inout_ PTRUSTEE pTrustee,_In_opt_ POBJECTS_AND_NAME pObjName,_In_opt_ SE_OBJECT_TYPE ObjectType,_In_opt_ LPTSTR ObjectTypeName,_In_opt_ LPTSTR InheritedObjectTypeName,_In_opt_ LPTSTR Name)
void WINAPI advapi32.BuildTrusteeWithObjectsAndNameA(_Inout_ PTRUSTEE pTrustee,_In_opt_ POBJECTS_AND_NAME pObjName,_In_opt_ SE_OBJECT_TYPE ObjectType,_In_opt_ LPTSTR ObjectTypeName,_In_opt_ LPTSTR InheritedObjectTypeName,_In_opt_ LPTSTR Name)
BOOL WINAPI kernel32.HeapDestroy(_In_ HANDLE hHeap)
BOOL WINAPI kernel32.CheckNameLegalDOS8Dot3(_In_ LPCTSTR lpName,_Out_opt_ LPSTR lpOemName,_In_ DWORD OemNameSize,_Out_opt_ PBOOL pbNameContainsSpaces,_Out_ PBOOL pbNameLegal)
BOOL WINAPI kernel32.CheckNameLegalDOS8Dot3W(_In_ LPCTSTR lpName,_Out_opt_ LPSTR lpOemName,_In_ DWORD OemNameSize,_Out_opt_ PBOOL pbNameContainsSpaces,_Out_ PBOOL pbNameLegal)
BOOL WINAPI kernel32.CheckNameLegalDOS8Dot3A(_In_ LPCTSTR lpName,_Out_opt_ LPSTR lpOemName,_In_ DWORD OemNameSize,_Out_opt_ PBOOL pbNameContainsSpaces,_Out_ PBOOL pbNameLegal)
HRESULT None None.StringCchPrintf_lEx(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_Out_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ ... None)
HRESULT None None.StringCchPrintf_lExW(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_Out_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ ... None)
HRESULT None None.StringCchPrintf_lExA(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_Out_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ ... None)
DWORD WINAPI kernel32.WaitForSingleObject(_In_ HANDLE hHandle,_In_ DWORD dwMilliseconds)
BOOL WINAPI kernel32.HeapSetInformation(_In_opt_ HANDLE HeapHandle,_In_ HEAP_INFORMATION_CLASS HeapInformationClass,_In_ PVOID HeapInformation,_In_ SIZE_T HeapInformationLength)
BOOL None sisbkup.SisFreeBackupStructure(_In_ PVOID sisBackupStructure)
HANDLE WINAPI ktmw32.OpenTransactionManager(_In_ LPWSTR LogFileName,_In_ ACCESS_MASK DesiredAccess,_In_opt_ ULONG OpenOptions)
BOOL WINAPI ktmw32.GetTransactionId(_In_ HANDLE TransactionHandle,_Out_ LPGUID TransactionId)
BOOL None ktmw32.RenameTransactionManager(_In_ LPWSTR LogFileName,_In_ LPGUID ExistingTransactionManagerGuid)
BOOL WINAPI user32.MessageBeep(_In_ UINT uType)
BOOLEAN WINAPI advapi32.AuditEnumeratePerUserPolicy(_Out_ PPOLICY_AUDIT_SID_ARRAY *ppAuditSidArray)
INT WSPAPI ws2_32.WSAEnumNameSpaceProvidersEx(_Inout_ LPDWORD lpdwBufferLength,_Out_ LPWSANAMESPACE_INFOEX lpnspBuffer)
INT WSPAPI ws2_32.WSAEnumNameSpaceProvidersExW(_Inout_ LPDWORD lpdwBufferLength,_Out_ LPWSANAMESPACE_INFOEX lpnspBuffer)
INT WSPAPI ws2_32.WSAEnumNameSpaceProvidersExA(_Inout_ LPDWORD lpdwBufferLength,_Out_ LPWSANAMESPACE_INFOEX lpnspBuffer)
DWORD WINAPI kernel32.QueryDosDevice(_In_opt_ LPCTSTR lpDeviceName,_Out_ LPTSTR lpTargetPath,_In_ DWORD ucchMax)
DWORD WINAPI kernel32.QueryDosDeviceW(_In_opt_ LPCTSTR lpDeviceName,_Out_ LPTSTR lpTargetPath,_In_ DWORD ucchMax)
DWORD WINAPI kernel32.QueryDosDeviceA(_In_opt_ LPCTSTR lpDeviceName,_Out_ LPTSTR lpTargetPath,_In_ DWORD ucchMax)
HGLOBAL WINAPI kernel32.GlobalReAlloc(_In_ HGLOBAL hMem,_In_ SIZE_T dwBytes,_In_ UINT uFlags)
BOOL WINAPI kernel32.GetVolumeInformationByHandleW(_In_ HANDLE hFile,_Out_opt_ LPWSTR lpVolumeNameBuffer,_In_ DWORD nVolumeNameSize,_Out_opt_ LPDWORD lpVolumeSerialNumber,_Out_opt_ LPDWORD lpMaximumComponentLength,_Out_opt_ LPDWORD lpFileSystemFlags,_Out_opt_ LPWSTR lpFileSystemNameBuffer,_In_ DWORD nFileSystemNameSize)
BOOL WINAPI kernel32.RemoveDllDirectory(_In_ DLL_DIRECTORY_COOKIE Cookie)
BOOL WINAPI ktmw32.CommitComplete(_In_ HANDLE EnlistmentHandle,_In_ PLARGE_INTEGER TmVirtualClock)
DWORD WINAPI kernel32.GetLogicalDrives(void None None)
BOOL WINAPI advapi32.LookupPrivilegeDisplayName(_In_opt_ LPCTSTR lpSystemName,_In_ LPCTSTR lpName,_Out_opt_ LPTSTR lpDisplayName,_Inout_ LPDWORD cchDisplayName,_Out_ LPDWORD lpLanguageId)
BOOL WINAPI advapi32.LookupPrivilegeDisplayNameW(_In_opt_ LPCTSTR lpSystemName,_In_ LPCTSTR lpName,_Out_opt_ LPTSTR lpDisplayName,_Inout_ LPDWORD cchDisplayName,_Out_ LPDWORD lpLanguageId)
BOOL WINAPI advapi32.LookupPrivilegeDisplayNameA(_In_opt_ LPCTSTR lpSystemName,_In_ LPCTSTR lpName,_Out_opt_ LPTSTR lpDisplayName,_Inout_ LPDWORD cchDisplayName,_Out_ LPDWORD lpLanguageId)
BOOLEAN WINAPI kernel32.TryAcquireSRWLockShared(_Inout_ PSRWLOCK SRWLock)
HANDLE WINAPI kernel32.CreateWaitableTimer(_In_opt_ LPSECURITY_ATTRIBUTES lpTimerAttributes,_In_ BOOL bManualReset,_In_opt_ LPCTSTR lpTimerName)
HANDLE WINAPI kernel32.CreateWaitableTimerW(_In_opt_ LPSECURITY_ATTRIBUTES lpTimerAttributes,_In_ BOOL bManualReset,_In_opt_ LPCTSTR lpTimerName)
HANDLE WINAPI kernel32.CreateWaitableTimerA(_In_opt_ LPSECURITY_ATTRIBUTES lpTimerAttributes,_In_ BOOL bManualReset,_In_opt_ LPCTSTR lpTimerName)
BOOL WINAPI advapi32.InitializeSid(_Out_ PSID Sid,_In_ PSID_IDENTIFIER_AUTHORITY pIdentifierAuthority,_In_ BYTE nSubAuthorityCount)
ULONG WINAPI ntdll.RtlNtStatusToDosErrorNoTeb(_In_ NTSTATUS Status)
BOOL WINAPI advapi32.CopySid(_In_ DWORD nDestinationSidLength,_Out_ PSID pDestinationSid,_In_ PSID pSourceSid)
BOOL WINAPI user32.SetUserObjectInformation(_In_ HANDLE hObj,_In_ int nIndex,_In_ PVOID pvInfo,_In_ DWORD nLength)
BOOL WINAPI user32.SetUserObjectInformationW(_In_ HANDLE hObj,_In_ int nIndex,_In_ PVOID pvInfo,_In_ DWORD nLength)
BOOL WINAPI user32.SetUserObjectInformationA(_In_ HANDLE hObj,_In_ int nIndex,_In_ PVOID pvInfo,_In_ DWORD nLength)
DWORD WINAPI kernel32.WaitForSingleObjectEx(_In_ HANDLE hHandle,_In_ DWORD dwMilliseconds,_In_ BOOL bAlertable)
BOOL WINAPI advapi32.AllocateLocallyUniqueId(_Out_ PLUID Luid)
BOOL WINAPI kernel32.InitOnceComplete(_Inout_ LPINIT_ONCE lpInitOnce,_In_ DWORD dwFlags,_In_opt_ LPVOID lpContext)
BOOL WINAPI kernel32.VirtualProtect(_In_ LPVOID lpAddress,_In_ SIZE_T dwSize,_In_ DWORD flNewProtect,_Out_ PDWORD lpflOldProtect)
BOOL WINAPI advapi32.AreAllAccessesGranted(_In_ DWORD GrantedAccess,_In_ DWORD DesiredAccess)
HRESULT None ole32.CoInitializeEx(_In_opt_ LPVOID pvReserved,_In_ DWORD dwCoInit)
BOOL WINAPI advapi32.CreateProcessAsUser(_In_opt_ HANDLE hToken,_In_opt_ LPCTSTR lpApplicationName,_Inout_opt_ LPTSTR lpCommandLine,_In_opt_ LPSECURITY_ATTRIBUTES lpProcessAttributes,_In_opt_ LPSECURITY_ATTRIBUTES lpThreadAttributes,_In_ BOOL bInheritHandles,_In_ DWORD dwCreationFlags,_In_opt_ LPVOID lpEnvironment,_In_opt_ LPCTSTR lpCurrentDirectory,_In_ LPSTARTUPINFO lpStartupInfo,_Out_ LPPROCESS_INFORMATION lpProcessInformation)
BOOL WINAPI advapi32.CreateProcessAsUserW(_In_opt_ HANDLE hToken,_In_opt_ LPCTSTR lpApplicationName,_Inout_opt_ LPTSTR lpCommandLine,_In_opt_ LPSECURITY_ATTRIBUTES lpProcessAttributes,_In_opt_ LPSECURITY_ATTRIBUTES lpThreadAttributes,_In_ BOOL bInheritHandles,_In_ DWORD dwCreationFlags,_In_opt_ LPVOID lpEnvironment,_In_opt_ LPCTSTR lpCurrentDirectory,_In_ LPSTARTUPINFO lpStartupInfo,_Out_ LPPROCESS_INFORMATION lpProcessInformation)
BOOL WINAPI advapi32.CreateProcessAsUserA(_In_opt_ HANDLE hToken,_In_opt_ LPCTSTR lpApplicationName,_Inout_opt_ LPTSTR lpCommandLine,_In_opt_ LPSECURITY_ATTRIBUTES lpProcessAttributes,_In_opt_ LPSECURITY_ATTRIBUTES lpThreadAttributes,_In_ BOOL bInheritHandles,_In_ DWORD dwCreationFlags,_In_opt_ LPVOID lpEnvironment,_In_opt_ LPCTSTR lpCurrentDirectory,_In_ LPSTARTUPINFO lpStartupInfo,_Out_ LPPROCESS_INFORMATION lpProcessInformation)
PVOID WINAPI kernel32.RtlLookupFunctionEntry(_In_ ULONGLONG ControlPc,_Out_ PULONGLONG ImageBase,_Out_ PULONGLONG TargetGp)
HRESULT WINAPI dssec.DSCreateISecurityInfoObject(_In_ LPCWSTR pwszObjectPath,_In_ LPCWSTR pwszObjectClass,_In_ DWORD dwFlags,_Out_ LPSECURITYINFO *ppSI,_In_opt_ PFNREADOBJECTSECURITY pfnReadSD,_In_opt_ PFNWRITEOBJECTSECURITY pfnWriteSD,_In_ LPARAM lpContext)
LONG WINAPI advapi32.RegSaveKey(_In_ HKEY hKey,_In_ LPCTSTR lpFile,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes)
LONG WINAPI advapi32.RegSaveKeyW(_In_ HKEY hKey,_In_ LPCTSTR lpFile,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes)
LONG WINAPI advapi32.RegSaveKeyA(_In_ HKEY hKey,_In_ LPCTSTR lpFile,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes)
VOID WINAPI kernel32.DeleteBoundaryDescriptor(_In_ HANDLE BoundaryDescriptor)
BOOL WINAPI ktmw32.GetNotificationResourceManagerAsync(_In_ HANDLE ResourceManagerHandle,_Out_ PTRANSACTION_NOTIFICATION TransactionNotification,_In_ ULONG TransactionNotificationLength,_Out_ PULONG ReturnLength,_In_ LPOVERLAPPED pOverlapped)
BOOL WINAPI ktmw32.GetEnlistmentId(_In_ HANDLE EnlistmentHandle,_Out_ LPGUID EnlistmentId)
BOOL CALLBACK None.EnumDesktopProc(_In_ LPTSTR lpszDesktop,_In_ LPARAM lParam)
SIZE_T WINAPI kernel32.VirtualQuery(_In_opt_ LPCVOID lpAddress,_Out_ PMEMORY_BASIC_INFORMATION lpBuffer,_In_ SIZE_T dwLength)
BOOL WINAPI kernel32.GetProcessAffinityMask(_In_ HANDLE hProcess,_Out_ PDWORD_PTR lpProcessAffinityMask,_Out_ PDWORD_PTR lpSystemAffinityMask)
BOOL WINAPI kernel32.TryEnterCriticalSection(_Inout_ LPCRITICAL_SECTION lpCriticalSection)
BOOL WINAPI kernel32.InitializeCriticalSectionAndSpinCount(_Out_ LPCRITICAL_SECTION lpCriticalSection,_In_ DWORD dwSpinCount)
BOOL None ole32.IsEqualGUID(_In_ REFGUID rguid1,_In_ REFGUID rguid2)
int None ws2_32.getipv4sourcefilter(_In_ SOCKET Socket,_In_ IN_ADDR Interface,_In_ IN_ADDR Group,_Out_ MULTICAST_MODE_TYPE *FilterMode,_Inout_ ULONG *SourceCount,_Out_ IN_ADDR *SourceList)
BOOL WINAPI advapi32.GetSecurityDescriptorDacl(_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_Out_ LPBOOL lpbDaclPresent,_Out_ PACL *pDacl,_Out_ LPBOOL lpbDaclDefaulted)
HANDLE WINAPI kernel32.HeapCreate(_In_ DWORD flOptions,_In_ SIZE_T dwInitialSize,_In_ SIZE_T dwMaximumSize)
BOOL WINAPI advapi32.ConvertToAutoInheritPrivateObjectSecurity(_In_opt_ PSECURITY_DESCRIPTOR ParentDescriptor,_In_ PSECURITY_DESCRIPTOR CurrentSecurityDescriptor,_Out_ PSECURITY_DESCRIPTOR *NewSecurityDescriptor,_In_opt_ GUID *ObjectType,_In_ BOOLEAN IsDirectoryObject,_In_ PGENERIC_MAPPING GenericMapping)
LONG WINAPI advapi32.RegEnableReflectionKey(_In_ HKEY hBase)
HRESULT None None.StringCchVPrintf_lEx(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_Out_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ va_list argList)
HRESULT None None.StringCchVPrintf_lExW(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_Out_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ va_list argList)
HRESULT None None.StringCchVPrintf_lExA(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_Out_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ va_list argList)
BOOL None sisbkup.SisCreateBackupStructure(_In_ PWCHAR volumeRoot,_Out_ PVOID *sisBackupStructure,_Out_ PWCHAR *commonStoreRootPathname,_Out_ PULONG countOfCommonStoreFilesToBackUp,_Out_ PWCHAR **commonStoreFilesToBackUp)
BOOL WINAPI advapi32.ImpersonateNamedPipeClient(_In_ HANDLE hNamedPipe)
BOOL WINAPI ktmw32.ReadOnlyEnlistment(_In_ HANDLE EnlistmentHandle,_In_ PLARGE_INTEGER TmVirtualClock)
BOOL WINAPI advapi32.InitializeSecurityDescriptor(_Out_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_ DWORD dwRevision)
ULONG None ole32.CoAddRefServerProcess(void None None)
HANDLE WINAPI ktmw32.CreateEnlistment(_In_opt_ LPSECURITY_ATTRIBUTES lpEnlistmentrAttributes,_In_ HANDLE ResourceManagerHandle,_In_ HANDLE TransactionHandle,_In_ NOTIFICATION_MASK NotificationMask,_In_opt_ DWORD CreateOptions,_In_opt_ PVOID EnlistmentKey)
VOID WINAPI kernel32.WakeByAddressSingle(_In_ PVOID Address)
LONG WINAPI advapi32.RegNotifyChangeKeyValue(_In_ HKEY hKey,_In_ BOOL bWatchSubtree,_In_ DWORD dwNotifyFilter,_In_opt_ HANDLE hEvent,_In_ BOOL fAsynchronous)
LONG WINAPI advapi32.RegDeleteKeyValue(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_opt_ LPCTSTR lpValueName)
LONG WINAPI advapi32.RegDeleteKeyValueW(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_opt_ LPCTSTR lpValueName)
LONG WINAPI advapi32.RegDeleteKeyValueA(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_opt_ LPCTSTR lpValueName)
HRSRC WINAPI kernel32.FindResource(_In_opt_ HMODULE hModule,_In_ LPCTSTR lpName,_In_ LPCTSTR lpType)
HRSRC WINAPI kernel32.FindResourceW(_In_opt_ HMODULE hModule,_In_ LPCTSTR lpName,_In_ LPCTSTR lpType)
HRSRC WINAPI kernel32.FindResourceA(_In_opt_ HMODULE hModule,_In_ LPCTSTR lpName,_In_ LPCTSTR lpType)
BOOL WINAPI advapi32.CreateWellKnownSid(_In_ WELL_KNOWN_SID_TYPE WellKnownSidType,_In_opt_ PSID DomainSid,_Out_opt_ PSID pSid,_Inout_ DWORD *cbSid)
void None ole32.CoFreeLibrary(_In_ HINSTANCE hInst)
BOOL WINAPI kernel32.CheckTokenCapability(_In_opt_ HANDLE TokenHandle,_In_ PSID CapabilitySidToCheck,_Out_ PBOOL HasCapability)
BOOL WINAPI kernel32.Thread32Next(_In_ HANDLE hSnapshot,_Out_ LPTHREADENTRY32 lpte)
DWORD WINAPI kernel32.ExpandEnvironmentStrings(_In_ LPCTSTR lpSrc,_Out_opt_ LPTSTR lpDst,_In_ DWORD nSize)
DWORD WINAPI kernel32.ExpandEnvironmentStringsW(_In_ LPCTSTR lpSrc,_Out_opt_ LPTSTR lpDst,_In_ DWORD nSize)
DWORD WINAPI kernel32.ExpandEnvironmentStringsA(_In_ LPCTSTR lpSrc,_Out_opt_ LPTSTR lpDst,_In_ DWORD nSize)
HANDLE WINAPI ktmw32.CreateTransactionManager(_In_opt_ LPSECURITY_ATTRIBUTES lpTransactionAttributes,_In_opt_ LPWSTR LogFileName,_In_opt_ ULONG CreateOptions,_In_opt_ ULONG CommitStrength)
HANDLE WINAPI kernel32.CreateFileMappingFromApp(_In_ HANDLE hFile,_In_opt_ PSECURITY_ATTRIBUTES SecurityAttributes,_In_ ULONG PageProtection,_In_ ULONG64 MaximumSize,_In_opt_ PCWSTR Name)
BOOL WINAPI kernel32.FlushFileBuffers(_In_ HANDLE hFile)
BOOL WINAPI kernel32.HeapFree(_In_ HANDLE hHeap,_In_ DWORD dwFlags,_In_ LPVOID lpMem)
LONG WINAPI advapi32.RegOpenKeyEx(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_ DWORD ulOptions,_In_ REGSAM samDesired,_Out_ PHKEY phkResult)
LONG WINAPI advapi32.RegOpenKeyExW(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_ DWORD ulOptions,_In_ REGSAM samDesired,_Out_ PHKEY phkResult)
LONG WINAPI advapi32.RegOpenKeyExA(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_ DWORD ulOptions,_In_ REGSAM samDesired,_Out_ PHKEY phkResult)
UINT WINAPI kernel32.GetProfileInt(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ INT nDefault)
UINT WINAPI kernel32.GetProfileIntW(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ INT nDefault)
UINT WINAPI kernel32.GetProfileIntA(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ INT nDefault)
BOOL APIENTRY kernel32.CheckTokenMembershipEx(_In_opt_ HANDLE TokenHandle,_In_ PSID SidToCheck,_In_ DWORD Flags,_Out_ PBOOL IsMember)
BOOL WINAPI kernel32.GetHandleInformation(_In_ HANDLE hObject,_Out_ LPDWORD lpdwFlags)
UINT None msi.MsiProvideQualifiedComponentEx(_In_ LPCTSTR szComponent,_In_ LPCTSTR szQualifier,_In_ DWORD dwInstallMode,_In_ LPTSTR szProduct,_In_ DWORD dwUnused1,_In_ DWORD dwUnused2,_Out_ LPTSTR lpPathBuf,_Inout_ DWORD *pcchPathBuf)
UINT None msi.MsiProvideQualifiedComponentExW(_In_ LPCTSTR szComponent,_In_ LPCTSTR szQualifier,_In_ DWORD dwInstallMode,_In_ LPTSTR szProduct,_In_ DWORD dwUnused1,_In_ DWORD dwUnused2,_Out_ LPTSTR lpPathBuf,_Inout_ DWORD *pcchPathBuf)
UINT None msi.MsiProvideQualifiedComponentExA(_In_ LPCTSTR szComponent,_In_ LPCTSTR szQualifier,_In_ DWORD dwInstallMode,_In_ LPTSTR szProduct,_In_ DWORD dwUnused1,_In_ DWORD dwUnused2,_Out_ LPTSTR lpPathBuf,_Inout_ DWORD *pcchPathBuf)
BOOL WINAPI advapi32.AddAccessDeniedAceEx(_Inout_ PACL pAcl,_In_ DWORD dwAceRevision,_In_ DWORD AceFlags,_In_ DWORD AccessMask,_In_ PSID pSid)
int None ws2_32.shutdown(_In_ SOCKET s,_In_ int how)
BOOL WINAPI api-ms-win-core-apiquery-l1-1-0.ApiSetQueryApiSetPresence(_In_ PCUNICODE_STRING Namespace,_Out_ PBOOLEAN Present)
BOOL None mswsock.RIOSend(_In_ RIO_RQ SocketQueue,_In_ PRIO_BUF pData,_In_ ULONG DataBufferCount,_In_ DWORD Flags,_In_ PVOID RequestContext)
BOOL WINAPI kernel32.GetProcessWorkingSetSizeEx(_In_ HANDLE hProcess,_Out_ PSIZE_T lpMinimumWorkingSetSize,_Out_ PSIZE_T lpMaximumWorkingSetSize,_Out_ PDWORD Flags)
HRESULT None None.StringCchPrintf_l(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ ... None)
HRESULT None None.StringCchPrintf_lW(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ ... None)
HRESULT None None.StringCchPrintf_lA(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ ... None)
BOOL WINAPI ktmw32.SetEnlistmentRecoveryInformation(_In_ HANDLE EnlistmentHandle,_In_ ULONG BufferSize,_In_ PVOID Buffer)
BOOL WINAPI advapi32.GetSecurityDescriptorSacl(_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_Out_ LPBOOL lpbSaclPresent,_Out_ PACL *pSacl,_Out_ LPBOOL lpbSaclDefaulted)
HRESULT None shell32.SHGetFolderPath(_In_ HWND hwndOwner,_In_ int nFolder,_In_ HANDLE hToken,_In_ DWORD dwFlags,_Out_ LPTSTR pszPath)
HRESULT None shell32.SHGetFolderPathW(_In_ HWND hwndOwner,_In_ int nFolder,_In_ HANDLE hToken,_In_ DWORD dwFlags,_Out_ LPTSTR pszPath)
HRESULT None shell32.SHGetFolderPathA(_In_ HWND hwndOwner,_In_ int nFolder,_In_ HANDLE hToken,_In_ DWORD dwFlags,_Out_ LPTSTR pszPath)
PCTSTR WSAAPI ws2_32.InetNtop(_In_ INT Family,_In_ PVOID pAddr,_Out_ PTSTR pStringBuf,_In_ size_t StringBufSize)
PCTSTR WSAAPI ws2_32.InetNtopW(_In_ INT Family,_In_ PVOID pAddr,_Out_ PTSTR pStringBuf,_In_ size_t StringBufSize)
PCTSTR WSAAPI ws2_32.InetNtopA or inet_ntop(_In_ INT Family,_In_ PVOID pAddr,_Out_ PTSTR pStringBuf,_In_ size_t StringBufSize)
UINT None msi.MsiGetProductProperty(_In_ MSIHANDLE hProduct,_In_ LPCTSTR szProperty,_Out_ LPTSTR lpValueBuf,_Inout_ DWORD *pcchValueBuf)
UINT None msi.MsiGetProductPropertyW(_In_ MSIHANDLE hProduct,_In_ LPCTSTR szProperty,_Out_ LPTSTR lpValueBuf,_Inout_ DWORD *pcchValueBuf)
UINT None msi.MsiGetProductPropertyA(_In_ MSIHANDLE hProduct,_In_ LPCTSTR szProperty,_Out_ LPTSTR lpValueBuf,_Inout_ DWORD *pcchValueBuf)
HRESULT None None.StringCbCatN(_Inout_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc,_In_ size_t cbMaxAppend)
HRESULT None None.StringCbCatNW(_Inout_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc,_In_ size_t cbMaxAppend)
HRESULT None None.StringCbCatNA(_Inout_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc,_In_ size_t cbMaxAppend)
DWORD None kernel32.GetTapePosition(_In_ HANDLE hDevice,_In_ DWORD dwPositionType,_Out_ LPDWORD lpdwPartition,_Out_ LPDWORD lpdwOffsetLow,_Out_ LPDWORD lpdwOffsetHigh)
HRESULT None None.StringCchVPrintfEx(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags,_In_ LPCTSTR pszFormat,_In_ va_list argList)
HRESULT None None.StringCchVPrintfExW(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags,_In_ LPCTSTR pszFormat,_In_ va_list argList)
HRESULT None None.StringCchVPrintfExA(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags,_In_ LPCTSTR pszFormat,_In_ va_list argList)
BOOL None None.FAILED(HRESULT hr None)
HANDLE WINAPI ktmw32.OpenResourceManager(_In_ DWORD dwDesiredAccess,_In_ TmHandle None,_In_ LPGUID RmGuid)
HLOCAL WINAPI kernel32.LocalAlloc(_In_ UINT uFlags,_In_ SIZE_T uBytes)
BOOL WINAPI kernel32.LocalUnlock(_In_ HLOCAL hMem)
int WSAAPI ws2_32.WSAProviderConfigChange(_Inout_ LPHANDLE lpNotificationHandle,_In_ LPWSAOVERLAPPED lpOverlapped,_In_ LPWSAOVERLAPPED_COMPLETION_ROUTINE lpCompletionRoutine)
BOOL WINAPI kernel32.SetVolumeLabel(_In_opt_ LPCTSTR lpRootPathName,_In_opt_ LPCTSTR lpVolumeName)
BOOL WINAPI kernel32.SetVolumeLabelW(_In_opt_ LPCTSTR lpRootPathName,_In_opt_ LPCTSTR lpVolumeName)
BOOL WINAPI kernel32.SetVolumeLabelA(_In_opt_ LPCTSTR lpRootPathName,_In_opt_ LPCTSTR lpVolumeName)
DWORD WINAPI advapi32.FreeInheritedFromArray(_In_ PINHERITED_FROM pInheritArray,_In_ USHORT AceCnt,_In_opt_ PFN_OBJECT_MGR_FUNCTS pfnArray)
HRESULT None None.ResolveTargetUriToPart(IOpcRelationship * relativeUri,IOpcPartUri **resolvedUri None)
HDESK WINAPI user32.OpenInputDesktop(_In_ DWORD dwFlags,_In_ BOOL fInherit,_In_ ACCESS_MASK dwDesiredAccess)
BOOL WINAPI kernel32.RemoveSecureMemoryCacheCallback(_In_ PSECURE_MEMORY_CACHE_CALLBACK pfnCallBack)
INT WSAAPI ws2_32.InetPton(_In_ INT Family,_In_ PCTSTR pszAddrString,_Out_ PVOID pAddrBuf)
INT WSAAPI ws2_32.InetPtonW(_In_ INT Family,_In_ PCTSTR pszAddrString,_Out_ PVOID pAddrBuf)
INT WSAAPI ws2_32.InetPtonA or inet_pton(_In_ INT Family,_In_ PCTSTR pszAddrString,_Out_ PVOID pAddrBuf)
BOOL None ws2_32.WSASetEvent(_In_ WSAEVENT hEvent)
HRESULT None ole32.CoResumeClassObjects(void None None)
BOOL WINAPI user32.CloseWindowStation(_In_ HWINSTA hWinSta)
VOID CALLBACK None.WaitOrTimerCallback(_In_ PVOID lpParameter,_In_ BOOLEAN TimerOrWaitFired)
BOOL WINAPI kernel32.GetModuleHandleEx(_In_ DWORD dwFlags,_In_opt_ LPCTSTR lpModuleName,_Out_ HMODULE *phModule)
BOOL WINAPI kernel32.GetModuleHandleExW(_In_ DWORD dwFlags,_In_opt_ LPCTSTR lpModuleName,_Out_ HMODULE *phModule)
BOOL WINAPI kernel32.GetModuleHandleExA(_In_ DWORD dwFlags,_In_opt_ LPCTSTR lpModuleName,_Out_ HMODULE *phModule)
INT None ws2_32.WSALookupServiceBegin(_In_ LPWSAQUERYSET lpqsRestrictions,_In_ DWORD dwControlFlags,_Out_ LPHANDLE lphLookup)
INT None ws2_32.WSALookupServiceBeginW(_In_ LPWSAQUERYSET lpqsRestrictions,_In_ DWORD dwControlFlags,_Out_ LPHANDLE lphLookup)
INT None ws2_32.WSALookupServiceBeginA(_In_ LPWSAQUERYSET lpqsRestrictions,_In_ DWORD dwControlFlags,_Out_ LPHANDLE lphLookup)
BOOL WINAPI advapi32.GetUserName(_Out_ LPTSTR lpBuffer,_Inout_ LPDWORD lpnSize)
BOOL WINAPI advapi32.GetUserNameW(_Out_ LPTSTR lpBuffer,_Inout_ LPDWORD lpnSize)
BOOL WINAPI advapi32.GetUserNameA(_Out_ LPTSTR lpBuffer,_Inout_ LPDWORD lpnSize)
BOOL WINAPI kernel32.FindVolumeMountPointClose(_In_ HANDLE hFindVolumeMountPoint)
BOOL WINAPI advapi32.GetFileSecurity(_In_ LPCTSTR lpFileName,_In_ SECURITY_INFORMATION RequestedInformation,_Out_opt_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_ DWORD nLength,_Out_ LPDWORD lpnLengthNeeded)
BOOL WINAPI advapi32.GetFileSecurityW(_In_ LPCTSTR lpFileName,_In_ SECURITY_INFORMATION RequestedInformation,_Out_opt_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_ DWORD nLength,_Out_ LPDWORD lpnLengthNeeded)
BOOL WINAPI advapi32.GetFileSecurityA(_In_ LPCTSTR lpFileName,_In_ SECURITY_INFORMATION RequestedInformation,_Out_opt_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_ DWORD nLength,_Out_ LPDWORD lpnLengthNeeded)
BOOL WINAPI authz.AuthzUnregisterCapChangeNotification(_In_ AUTHZ_CAP_CHANGE_SUBSCRIPTION_HANDLE hCapChangeSubscription)
HGLOBAL WINAPI kernel32.GlobalAlloc(_In_ UINT uFlags,_In_ SIZE_T dwBytes)
HRESULT WINAPI ole32.CoIncrementMTAUsage(_Out_ CO_MTA_USAGE_COOKIE *pCookie)
SIZE_T WINAPI kernel32.HeapCompact(_In_ HANDLE hHeap,_In_ DWORD dwFlags)
BOOL None ktmw32.RenameTransactionManager(_In_ LPWSTR LogFileName,_In_ LPGUID ExistingTransactionManagerGuid)
UINT None msi.MsiGetFeatureInfo(_In_ MSIHANDLE hProduct,_In_ LPCTSTR szFeature,_Out_opt_ LPDWORD lpAttributes,_Out_opt_ LPTSTR lpTitleBuf,_Inout_opt_ LPDWORD pcchTitleBuf,_Out_opt_ LPTSTR lpHelpBuf,_Inout_opt_ LPDWORD pcchHelpBuf)
UINT None msi.MsiGetFeatureInfoW(_In_ MSIHANDLE hProduct,_In_ LPCTSTR szFeature,_Out_opt_ LPDWORD lpAttributes,_Out_opt_ LPTSTR lpTitleBuf,_Inout_opt_ LPDWORD pcchTitleBuf,_Out_opt_ LPTSTR lpHelpBuf,_Inout_opt_ LPDWORD pcchHelpBuf)
UINT None msi.MsiGetFeatureInfoA(_In_ MSIHANDLE hProduct,_In_ LPCTSTR szFeature,_Out_opt_ LPDWORD lpAttributes,_Out_opt_ LPTSTR lpTitleBuf,_Inout_opt_ LPDWORD pcchTitleBuf,_Out_opt_ LPTSTR lpHelpBuf,_Inout_opt_ LPDWORD pcchHelpBuf)
UINT None msi.MsiGetFeatureUsage(_In_ LPCTSTR szProduct,_In_ LPCTSTR szFeature,_Out_ DWORD *pdwUseCount,_Out_ WORD *pwDateUsed)
UINT None msi.MsiGetFeatureUsageW(_In_ LPCTSTR szProduct,_In_ LPCTSTR szFeature,_Out_ DWORD *pdwUseCount,_Out_ WORD *pwDateUsed)
UINT None msi.MsiGetFeatureUsageA(_In_ LPCTSTR szProduct,_In_ LPCTSTR szFeature,_Out_ DWORD *pdwUseCount,_Out_ WORD *pwDateUsed)
BOOL WINAPI advapi32.IsTokenRestricted(_In_ HANDLE TokenHandle)
VOID CALLBACK None.TimerAPCProc(_In_opt_ LPVOID lpArgToCompletionRoutine,_In_ DWORD dwTimerLowValue,_In_ DWORD dwTimerHighValue)
UINT WINAPI kernel32.GetPrivateProfileInt(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ INT nDefault,_In_ LPCTSTR lpFileName)
UINT WINAPI kernel32.GetPrivateProfileIntW(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ INT nDefault,_In_ LPCTSTR lpFileName)
UINT WINAPI kernel32.GetPrivateProfileIntA(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ INT nDefault,_In_ LPCTSTR lpFileName)
DWORD None kernel32.SetTapePosition(_In_ HANDLE hDevice,_In_ DWORD dwPositionMethod,_In_ DWORD dwPartition,_In_ DWORD dwOffsetLow,_In_ DWORD dwOffsetHigh,_In_ BOOL bImmediate)
UINT WINAPI kernel32.GetWriteWatch(_In_ DWORD dwFlags,_In_ PVOID lpBaseAddress,_In_ SIZE_T dwRegionSize,_Out_ PVOID *lpAddresses,_Inout_ PULONG_PTR lpdwCount,_Out_ PULONG lpdwGranularity)
BOOL WINAPI advapi32.GetSecurityDescriptorGroup(_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_Out_ PSID *pGroup,_Out_ LPBOOL lpbGroupDefaulted)
BOOL WINAPI kernel32.HeapValidate(_In_ HANDLE hHeap,_In_ DWORD dwFlags,_In_opt_ LPCVOID lpMem)
LONG WINAPI advapi32.RegCopyTree(_In_ HKEY hKeySrc,_In_opt_ LPCTSTR lpSubKey,_In_ HKEY hKeyDest)
LONG WINAPI advapi32.RegCopyTreeW(_In_ HKEY hKeySrc,_In_opt_ LPCTSTR lpSubKey,_In_ HKEY hKeyDest)
LONG WINAPI advapi32.RegCopyTreeA(_In_ HKEY hKeySrc,_In_opt_ LPCTSTR lpSubKey,_In_ HKEY hKeyDest)
BOOL WINAPI kernel32.GetSystemTimeAdjustment(_Out_ PDWORD lpTimeAdjustment,_Out_ PDWORD lpTimeIncrement,_Out_ PBOOL lpTimeAdjustmentDisabled)
LPVOID WINAPI kernel32.MapViewOfFileEx(_In_ HANDLE hFileMappingObject,_In_ DWORD dwDesiredAccess,_In_ DWORD dwFileOffsetHigh,_In_ DWORD dwFileOffsetLow,_In_ SIZE_T dwNumberOfBytesToMap,_In_opt_ LPVOID lpBaseAddress)
DWORD WINAPI kernel32.GetDllDirectory(_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer)
DWORD WINAPI kernel32.GetDllDirectoryW(_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer)
DWORD WINAPI kernel32.GetDllDirectoryA(_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer)
BOOL None sisbkup.SisCreateRestoreStructure(_In_ PWCHAR volumeRoot,_Out_ PVOID *sisRestoreStructure,_Out_ PWCHAR *commonStoreRootPathname,_Out_ PULONG countOfCommonStoreFilesToRestore,_Out_ PWCHAR **commonStoreFilesToRestore)
HRESULT None shell32.SHGetKnownFolderPath(_In_ REFKNOWNFOLDERID rfid,_In_ DWORD dwFlags,_In_opt_ HANDLE hToken,_Out_ PWSTR *ppszPath)
BOOL WINAPI kernel32.HeapQueryInformation(_In_opt_ HANDLE HeapHandle,_In_ HEAP_INFORMATION_CLASS HeapInformationClass,_Out_ PVOID HeapInformation,_In_ SIZE_T HeapInformationLength,_Out_opt_ PSIZE_T ReturnLength)
LPTSTR WINAPI kernel32.lstrcat(_Inout_ LPTSTR lpString1,_In_ LPTSTR lpString2)
LPTSTR WINAPI kernel32.lstrcatW(_Inout_ LPTSTR lpString1,_In_ LPTSTR lpString2)
LPTSTR WINAPI kernel32.lstrcatA(_Inout_ LPTSTR lpString1,_In_ LPTSTR lpString2)
BOOL WINAPI kernel32.ReadDirectoryChangesW(_In_ HANDLE hDirectory,_Out_ LPVOID lpBuffer,_In_ DWORD nBufferLength,_In_ BOOL bWatchSubtree,_In_ DWORD dwNotifyFilter,_Out_opt_ LPDWORD lpBytesReturned,_Inout_opt_ LPOVERLAPPED lpOverlapped,_In_opt_ LPOVERLAPPED_COMPLETION_ROUTINE lpCompletionRoutine)
BOOL WINAPI kernel32.HeapWalk(_In_ HANDLE hHeap,_Inout_ LPPROCESS_HEAP_ENTRY lpEntry)
BOOL WINAPI kernel32.HeapLock(_In_ HANDLE hHeap)
BOOL None ws2_32.WSACloseEvent(_In_ WSAEVENT hEvent)
INT None mswsock.GetService(_In_ DWORD dwNameSpace,_In_ PGUID lpGuid,_In_ LPTSTR lpServiceName,_In_ DWORD dwProperties,_Out_ LPVOID lpBuffer,_Inout_ LPDWORD lpdwBufferSize,_In_opt_ LPSERVICE_ASYNC_INFO lpServiceAsyncInfo)
INT None mswsock.GetServiceW(_In_ DWORD dwNameSpace,_In_ PGUID lpGuid,_In_ LPTSTR lpServiceName,_In_ DWORD dwProperties,_Out_ LPVOID lpBuffer,_Inout_ LPDWORD lpdwBufferSize,_In_opt_ LPSERVICE_ASYNC_INFO lpServiceAsyncInfo)
INT None mswsock.GetServiceA(_In_ DWORD dwNameSpace,_In_ PGUID lpGuid,_In_ LPTSTR lpServiceName,_In_ DWORD dwProperties,_Out_ LPVOID lpBuffer,_Inout_ LPDWORD lpdwBufferSize,_In_opt_ LPSERVICE_ASYNC_INFO lpServiceAsyncInfo)
BOOL CALLBACK None.EnumWindowStationProc(_In_ LPTSTR lpszWindowStation,_In_ LPARAM lParam)
BOOL CALLBACK None.WINSTAENUMPROCW(_In_ LPTSTR lpszWindowStation,_In_ LPARAM lParam)
BOOL CALLBACK None.WINSTAENUMPROCA(_In_ LPTSTR lpszWindowStation,_In_ LPARAM lParam)
HRESULT None ole32.CLSIDFromProgID(_In_ LPCOLESTR lpszProgID,_Out_ LPCLSID lpclsid)
VOID WINAPI kernel32.ExitProcess(_In_ UINT uExitCode)
NTSTATUS WINAPI ntdll.ZwQuerySystemInformation(_In_ SYSTEM_INFORMATION_CLASS SystemInformationClass,_Inout_ PVOID SystemInformation,_In_ ULONG SystemInformationLength,_Out_opt_ PULONG ReturnLength)
DWORD WINAPI advapi32.GetAuditedPermissionsFromAcl(_In_ PACL pacl,_In_ PTRUSTEE pTrustee,_Out_ PACCESS_MASK pSuccessfulAuditedRights,_Out_ PACCESS_MASK pFailedAuditRights)
DWORD WINAPI advapi32.GetAuditedPermissionsFromAclW(_In_ PACL pacl,_In_ PTRUSTEE pTrustee,_Out_ PACCESS_MASK pSuccessfulAuditedRights,_Out_ PACCESS_MASK pFailedAuditRights)
DWORD WINAPI advapi32.GetAuditedPermissionsFromAclA(_In_ PACL pacl,_In_ PTRUSTEE pTrustee,_Out_ PACCESS_MASK pSuccessfulAuditedRights,_Out_ PACCESS_MASK pFailedAuditRights)
BOOL None kernel32.BackupSeek(_In_ HANDLE hFile,_In_ DWORD dwLowBytesToSeek,_In_ DWORD dwHighBytesToSeek,_Out_ LPDWORD lpdwLowByteSeeked,_Out_ LPDWORD lpdwHighByteSeeked,_In_ LPVOID *lpContext)
void WINAPI kernel32.EnterCriticalSection(_Inout_ LPCRITICAL_SECTION lpCriticalSection)
HRESULT None None.StringCchCopyNEx(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_In_ size_t cchSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCchCopyNExW(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_In_ size_t cchSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCchCopyNExA(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_In_ size_t cchSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
BOOL WINAPI kernel32.FindNextVolumeMountPoint(_In_ HANDLE hFindVolumeMountPoint,_Out_ LPTSTR lpszVolumeMountPoint,_In_ DWORD cchBufferLength)
BOOL WINAPI kernel32.FindNextVolumeMountPointW(_In_ HANDLE hFindVolumeMountPoint,_Out_ LPTSTR lpszVolumeMountPoint,_In_ DWORD cchBufferLength)
BOOL WINAPI kernel32.FindNextVolumeMountPointA(_In_ HANDLE hFindVolumeMountPoint,_Out_ LPTSTR lpszVolumeMountPoint,_In_ DWORD cchBufferLength)
BOOL WINAPI authz.AuthzEnumerateSecurityEventSources(_In_ DWORD dwFlags,_Out_ PAUTHZ_SOURCE_SCHEMA_REGISTRATION Buffer,_Out_ PDWORD pdwCount,_Inout_ PDWORD pdwLength)
BOOL WINAPI advapi32.SetSecurityDescriptorDacl(_Inout_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_ BOOL bDaclPresent,_In_opt_ PACL pDacl,_In_ BOOL bDaclDefaulted)
BOOL WINAPI kernel32.VirtualUnlock(_In_ LPVOID lpAddress,_In_ SIZE_T dwSize)
HRESULT None None.StringCbCopyN(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc,_In_ size_t cbSrc)
HRESULT None None.StringCbCopyNW(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc,_In_ size_t cbSrc)
HRESULT None None.StringCbCopyNA(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc,_In_ size_t cbSrc)
BOOL WINAPI advapi32.SetSecurityDescriptorOwner(_Inout_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_opt_ PSID pOwner,_In_ BOOL bOwnerDefaulted)
HANDLE WINAPI kernel32.OpenMutex(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpName)
HANDLE WINAPI kernel32.OpenMutexW(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpName)
HANDLE WINAPI kernel32.OpenMutexA(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpName)
void __stdcall atlthunk.AtlThunk_FreeData(AtlThunkData_t *Thunk None)
DWORD WINAPI advapi32.TreeResetNamedSecurityInfo(_In_ LPTSTR pObjectName,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_In_opt_ PSID pOwner,_In_opt_ PSID pGroup,_In_opt_ PACL pDacl,_In_opt_ PACL pSacl,_In_ BOOL KeepExplicit,_In_opt_ FN_PROGRESS fnProgress,_In_ PROG_INVOKE_SETTING ProgressInvokeSetting,_In_opt_ PVOID Args)
DWORD WINAPI advapi32.TreeResetNamedSecurityInfoW(_In_ LPTSTR pObjectName,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_In_opt_ PSID pOwner,_In_opt_ PSID pGroup,_In_opt_ PACL pDacl,_In_opt_ PACL pSacl,_In_ BOOL KeepExplicit,_In_opt_ FN_PROGRESS fnProgress,_In_ PROG_INVOKE_SETTING ProgressInvokeSetting,_In_opt_ PVOID Args)
DWORD WINAPI advapi32.TreeResetNamedSecurityInfoA(_In_ LPTSTR pObjectName,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_In_opt_ PSID pOwner,_In_opt_ PSID pGroup,_In_opt_ PACL pDacl,_In_opt_ PACL pSacl,_In_ BOOL KeepExplicit,_In_opt_ FN_PROGRESS fnProgress,_In_ PROG_INVOKE_SETTING ProgressInvokeSetting,_In_opt_ PVOID Args)
BOOL WINAPI authz.AuthzFreeCentralAccessPolicyCache(void None None)
HRESULT None ole32.CoQueryProxyBlanket(_In_ IUnknown *pProxy,_Out_opt_ DWORD *pwAuthnSvc,_Out_opt_ DWORD *pAuthzSvc,_Out_opt_ OLECHAR **pServerPrincName,_Out_opt_ DWORD *pAuthnLevel,_Out_opt_ DWORD *pImpLevel,_Out_opt_ RPC_AUTH_IDENTITY_HANDLE *pAuthInfo,_Out_opt_ DWORD *pCapabilites)
LONG WINAPI advapi32.RegOverridePredefKey(_In_ HKEY hKey,_In_opt_ HKEY hNewHKey)
void None None.ZeroMemory([in] PVOID Destination,[in] SIZE_T Length)
BOOL WINAPI kernel32.WriteProfileSection(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpString)
BOOL WINAPI kernel32.WriteProfileSectionW(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpString)
BOOL WINAPI kernel32.WriteProfileSectionA(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpString)
BOOL WINAPI kernel32.GetSystemTimes(_Out_opt_ LPFILETIME lpIdleTime,_Out_opt_ LPFILETIME lpKernelTime,_Out_opt_ LPFILETIME lpUserTime)
BOOL WINAPI advapi32.AddAccessDeniedObjectAce(_Inout_ PACL pAcl,_In_ DWORD dwAceRevision,_In_ DWORD AceFlags,_In_ DWORD AccessMask,_In_opt_ GUID *ObjectTypeGuid,_In_opt_ GUID *InheritedObjectTypeGuid,_In_ PSID pSid)
BOOL None kernel32.GetThreadIdealProcessorEx(_In_ HANDLE hThread,_Out_ PPROCESSOR_NUMBER lpIdealProcessor)
HRESULT None ole32.CoSetCancelObject(_In_opt_ IUnknown *pUnk)
BOOL WINAPI kernel32.GlobalMemoryStatusEx(_Inout_ LPMEMORYSTATUSEX lpBuffer)
LPVOID WINAPI kernel32.HeapReAlloc(_In_ HANDLE hHeap,_In_ DWORD dwFlags,_In_ LPVOID lpMem,_In_ SIZE_T dwBytes)
HRESULT None ole32.GetClassFile(_In_ LPCOLESTR szFilename,_Out_ CLSID *pclsid)
DWORD WINAPI advapi32.GetLengthSid(_In_ PSID pSid)
int None ws2_32.__WSAFDIsSet(SOCKET fd None,fd_set *set None)
void None None.FillMemory([out] PVOID Destination,[in] SIZE_T Length,[in] BYTE Fill)
HRESULT None None.StringCchVPrintf(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszFormat,_In_ va_list argList)
HRESULT None None.StringCchVPrintfW(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszFormat,_In_ va_list argList)
HRESULT None None.StringCchVPrintfA(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszFormat,_In_ va_list argList)
int None shell32.RestartDialogEx(_In_opt_ HWND hParent,_In_opt_ PCWSTR pszPrompt,DWORD dwFlags None,DWORD dwReasonCode None)
PDWORD WINAPI advapi32.GetSidSubAuthority(_In_ PSID pSid,_In_ DWORD nSubAuthority)
BOOL None None.IS_INTRESOURCE(const void *p)
RIO_RQ None mswsock.RIOCreateRequestQueue(_In_ SOCKET Socket,_In_ ULONG MaxOutstandingReceive,_In_ ULONG MaxReceiveDataBuffers,_In_ ULONG MaxOutstandingSend,_In_ ULONG MaxSendDataBuffers,_In_ RIO_CQ ReceiveCQ,_In_ RIO_CQ SendCQ,_In_ PVOID SocketContext)
LONG WINAPI advapi32.RegDeleteValue(_In_ HKEY hKey,_In_opt_ LPCTSTR lpValueName)
LONG WINAPI advapi32.RegDeleteValueW(_In_ HKEY hKey,_In_opt_ LPCTSTR lpValueName)
LONG WINAPI advapi32.RegDeleteValueA(_In_ HKEY hKey,_In_opt_ LPCTSTR lpValueName)
BOOL WINAPI kernel32.GlobalUnlock(_In_ HGLOBAL hMem)
LPVOID WINAPI kernel32.VirtualAlloc(_In_opt_ LPVOID lpAddress,_In_ SIZE_T dwSize,_In_ DWORD flAllocationType,_In_ DWORD flProtect)
int None ws2_32.WSAEnumProtocols(_In_ LPINT lpiProtocols,_Out_ LPWSAPROTOCOL_INFO lpProtocolBuffer,_Inout_ LPDWORD lpdwBufferLength)
int None ws2_32.WSAEnumProtocolsW(_In_ LPINT lpiProtocols,_Out_ LPWSAPROTOCOL_INFO lpProtocolBuffer,_Inout_ LPDWORD lpdwBufferLength)
int None ws2_32.WSAEnumProtocolsA(_In_ LPINT lpiProtocols,_Out_ LPWSAPROTOCOL_INFO lpProtocolBuffer,_Inout_ LPDWORD lpdwBufferLength)
HRESULT None ole32.CoRegisterClassObject(_In_ REFCLSID rclsid,_In_ LPUNKNOWN pUnk,_In_ DWORD dwClsContext,_In_ DWORD flags,_Out_ LPDWORD lpdwRegister)
WINAPI None kernel32.UnmapViewOfFile2(_In_ HANDLE ProcessHandle,_In_ PVOID BaseAddress,_In_ ULONG UnmapFlags)
BOOL WINAPI authz.AuthzReportSecurityEvent(_In_ DWORD dwFlags,_Inout_ AUTHZ_SECURITY_EVENT_PROVIDER_HANDLE hEventProvider,_In_ DWORD dwAuditId,_In_opt_ PSID pUserSid,_In_ DWORD dwCount,_In_ ... None)
DWORD None kernel32.GetTapeStatus(_In_ HANDLE hDevice)
BOOL WINAPI advapi32.AddAccessDeniedAce(_Inout_ PACL pAcl,_In_ DWORD dwAceRevision,_In_ DWORD AccessMask,_In_ PSID pSid)
VOID FORCEINLINE None.TpInitializeCallbackEnviron(_Out_ PTP_CALLBACK_ENVIRON CallbackEnviron)
BOOL WINAPI kernel32.GetProcessDEPPolicy(_In_ HANDLE hProcess,_Out_ LPDWORD lpFlags,_Out_ PBOOL lpPermanent)
LONG WINAPI advapi32.RegDeleteKeyEx(_In_ HKEY hKey,_In_ LPCTSTR lpSubKey,_In_ REGSAM samDesired,_Reserved_ DWORD Reserved)
LONG WINAPI advapi32.RegDeleteKeyExW(_In_ HKEY hKey,_In_ LPCTSTR lpSubKey,_In_ REGSAM samDesired,_Reserved_ DWORD Reserved)
LONG WINAPI advapi32.RegDeleteKeyExA(_In_ HKEY hKey,_In_ LPCTSTR lpSubKey,_In_ REGSAM samDesired,_Reserved_ DWORD Reserved)
DWORD None None.HRESULT_SEVERITY(HRESULT hr None)
LRESULT None shlwapi.SHSendMessageBroadcast(_In_ UINT uMsg,_In_ WPARAM wParam,_In_ LPARAM lParam)
LRESULT None shlwapi.SHSendMessageBroadcastW(_In_ UINT uMsg,_In_ WPARAM wParam,_In_ LPARAM lParam)
LRESULT None shlwapi.SHSendMessageBroadcastA(_In_ UINT uMsg,_In_ WPARAM wParam,_In_ LPARAM lParam)
BOOL WINAPI advapi32.AccessCheck(_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_ HANDLE ClientToken,_In_ DWORD DesiredAccess,_In_ PGENERIC_MAPPING GenericMapping,_Out_opt_ PPRIVILEGE_SET PrivilegeSet,_Inout_ LPDWORD PrivilegeSetLength,_Out_ LPDWORD GrantedAccess,_Out_ LPBOOL AccessStatus)
INT WSAAPI ws2_32.WSAEnumNameSpaceProviders(_Inout_ LPDWORD lpdwBufferLength,_Out_ LPWSANAMESPACE_INFO lpnspBuffer)
INT WSAAPI ws2_32.WSAEnumNameSpaceProvidersW(_Inout_ LPDWORD lpdwBufferLength,_Out_ LPWSANAMESPACE_INFO lpnspBuffer)
INT WSAAPI ws2_32.WSAEnumNameSpaceProvidersA(_Inout_ LPDWORD lpdwBufferLength,_Out_ LPWSANAMESPACE_INFO lpnspBuffer)
BOOL WINAPI kernel32.FreeUserPhysicalPages(_In_ HANDLE hProcess,_Inout_ PULONG_PTR NumberOfPages,_In_ PULONG_PTR UserPfnArray)
HRESULT None ole32.CoGetClassObject(_In_ REFCLSID rclsid,_In_ DWORD dwClsContext,_In_opt_ COSERVERINFO *pServerInfo,_In_ REFIID riid,_Out_ LPVOID *ppv)
DWORD None kernel32.SetTapeParameters(_In_ HANDLE hDevice,_In_ DWORD dwOperation,_In_ LPVOID lpTapeInformation)
UINT WINAPI user32.GetDlgItemInt(_In_ HWND hDlg,_In_ int nIDDlgItem,_Out_opt_ BOOL *lpTranslated,_In_ BOOL bSigned)
BOOL WINAPI kernel32.ReleaseMutex(_In_ HANDLE hMutex)
HANDLE WINAPI kernel32.CreateFileMapping(_In_ HANDLE hFile,_In_opt_ LPSECURITY_ATTRIBUTES lpAttributes,_In_ DWORD flProtect,_In_ DWORD dwMaximumSizeHigh,_In_ DWORD dwMaximumSizeLow,_In_opt_ LPCTSTR lpName)
HANDLE WINAPI kernel32.CreateFileMappingW(_In_ HANDLE hFile,_In_opt_ LPSECURITY_ATTRIBUTES lpAttributes,_In_ DWORD flProtect,_In_ DWORD dwMaximumSizeHigh,_In_ DWORD dwMaximumSizeLow,_In_opt_ LPCTSTR lpName)
HANDLE WINAPI kernel32.CreateFileMappingA(_In_ HANDLE hFile,_In_opt_ LPSECURITY_ATTRIBUTES lpAttributes,_In_ DWORD flProtect,_In_ DWORD dwMaximumSizeHigh,_In_ DWORD dwMaximumSizeLow,_In_opt_ LPCTSTR lpName)
UINT WINAPI msi.MsiEnumComponentsEx(_In_opt_ LPCTSTR szUserSid,_In_ DWORD dwContext,_In_ DWORD dwIndex,_Out_opt_ TCHAR szInstalledComponentCode[39],_Out_opt_ MSIINSTALLCONTEXT *pdwInstalledContext,_Out_opt_ LPTSTR szSid,_Inout_ LPDWORD pcchSid)
UINT WINAPI msi.MsiEnumComponentsExW(_In_opt_ LPCTSTR szUserSid,_In_ DWORD dwContext,_In_ DWORD dwIndex,_Out_opt_ TCHAR szInstalledComponentCode[39],_Out_opt_ MSIINSTALLCONTEXT *pdwInstalledContext,_Out_opt_ LPTSTR szSid,_Inout_ LPDWORD pcchSid)
UINT WINAPI msi.MsiEnumComponentsExA(_In_opt_ LPCTSTR szUserSid,_In_ DWORD dwContext,_In_ DWORD dwIndex,_Out_opt_ TCHAR szInstalledComponentCode[39],_Out_opt_ MSIINSTALLCONTEXT *pdwInstalledContext,_Out_opt_ LPTSTR szSid,_Inout_ LPDWORD pcchSid)
INT None mswsock.GetAddressByName(_In_ DWORD dwNameSpace,_In_ LPGUID lpServiceType,_In_opt_ LPTSTR lpServiceName,_In_opt_ LPINT lpiProtocols,_In_ DWORD dwResolution,_In_opt_ LPSERVICE_ASYNC_INFO lpServiceAsyncInfo,_Out_ LPVOID lpCsaddrBuffer,_Inout_ LPDWORD lpdwBufferLength,_Inout_ LPTSTR lpAliasBuffer,_Inout_ LPDWORD lpdwAliasBufferLength)
INT None mswsock.GetAddressByNameW(_In_ DWORD dwNameSpace,_In_ LPGUID lpServiceType,_In_opt_ LPTSTR lpServiceName,_In_opt_ LPINT lpiProtocols,_In_ DWORD dwResolution,_In_opt_ LPSERVICE_ASYNC_INFO lpServiceAsyncInfo,_Out_ LPVOID lpCsaddrBuffer,_Inout_ LPDWORD lpdwBufferLength,_Inout_ LPTSTR lpAliasBuffer,_Inout_ LPDWORD lpdwAliasBufferLength)
INT None mswsock.GetAddressByNameA(_In_ DWORD dwNameSpace,_In_ LPGUID lpServiceType,_In_opt_ LPTSTR lpServiceName,_In_opt_ LPINT lpiProtocols,_In_ DWORD dwResolution,_In_opt_ LPSERVICE_ASYNC_INFO lpServiceAsyncInfo,_Out_ LPVOID lpCsaddrBuffer,_Inout_ LPDWORD lpdwBufferLength,_Inout_ LPTSTR lpAliasBuffer,_Inout_ LPDWORD lpdwAliasBufferLength)
HANDLE WINAPI kernel32.CreateRemoteThread(_In_ HANDLE hProcess,_In_ LPSECURITY_ATTRIBUTES lpThreadAttributes,_In_ SIZE_T dwStackSize,_In_ LPTHREAD_START_ROUTINE lpStartAddress,_In_ LPVOID lpParameter,_In_ DWORD dwCreationFlags,_Out_ LPDWORD lpThreadId)
BOOL WINAPI kernel32.AddResourceAttributeAce(_Inout_ PACL pAcl,_In_ DWORD dwAceRevision,_In_ DWORD AceFlags,_In_ DWORD AccessMask,_In_ PSID pSid,_In_ PCLAIM_SECURITY_ATTRIBUTES_INFORMATION pAttributeInfo,_Out_ PDWORD pReturnLength)
HANDLE WINAPI kernel32.OpenFileMapping(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpName)
HANDLE WINAPI kernel32.OpenFileMappingW(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpName)
HANDLE WINAPI kernel32.OpenFileMappingA(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpName)
UINT None msi.MsiApplyPatch(_In_ LPCTSTR szPatchPackage,_In_ LPCTSTR szInstallPackage,_In_ INSTALLTYPE eInstallType,_In_ LPCTSTR szCommandLine)
UINT None msi.MsiApplyPatchW(_In_ LPCTSTR szPatchPackage,_In_ LPCTSTR szInstallPackage,_In_ INSTALLTYPE eInstallType,_In_ LPCTSTR szCommandLine)
UINT None msi.MsiApplyPatchA(_In_ LPCTSTR szPatchPackage,_In_ LPCTSTR szInstallPackage,_In_ INSTALLTYPE eInstallType,_In_ LPCTSTR szCommandLine)
LPVOID WINAPI kernel32.VirtualAllocEx(_In_ HANDLE hProcess,_In_opt_ LPVOID lpAddress,_In_ SIZE_T dwSize,_In_ DWORD flAllocationType,_In_ DWORD flProtect)
int WINAPI kernel32.GetThreadPriority(_In_ HANDLE hThread)
BOOL WINAPI kernel32.AllocateUserPhysicalPagesNuma(_In_ HANDLE hProcess,_Inout_ PULONG_PTR NumberOfPages,_Out_ PULONG_PTR PageArray,_In_ DWORD nndPreferred)
HANDLE WINAPI kernel32.OpenWaitableTimer(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpTimerName)
HANDLE WINAPI kernel32.OpenWaitableTimerW(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpTimerName)
HANDLE WINAPI kernel32.OpenWaitableTimerA(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpTimerName)
BOOL WINBASEAPI kernel32.SetFirmwareEnvironmentVariableEx(_In_ LPCTSTR lpName,_In_ LPCTSTR lpGuid,_In_ PVOID pValue,_In_ DWORD nSize,_In_ DWORD dwAttributes)
BOOL WINBASEAPI kernel32.SetFirmwareEnvironmentVariableExW(_In_ LPCTSTR lpName,_In_ LPCTSTR lpGuid,_In_ PVOID pValue,_In_ DWORD nSize,_In_ DWORD dwAttributes)
BOOL WINBASEAPI kernel32.SetFirmwareEnvironmentVariableExA(_In_ LPCTSTR lpName,_In_ LPCTSTR lpGuid,_In_ PVOID pValue,_In_ DWORD nSize,_In_ DWORD dwAttributes)
HRESULT None None.UnalignedStringCchLength(_In_ LPCTSTR psz,_In_ size_t cchMax,_Out_opt_ size_t *pcchLength)
HRESULT None None.UnalignedStringCchLengthW(_In_ LPCTSTR psz,_In_ size_t cchMax,_Out_opt_ size_t *pcchLength)
HRESULT None None.StringCchLengthA(_In_ LPCTSTR psz,_In_ size_t cchMax,_Out_opt_ size_t *pcchLength)
HRESULT None azroles.get__NewEnum(LPUNKNOWN *ppEnumPtr None)
HRESULT None oleaut32.SetErrorInfo(_In_ ULONG dwReserved,_In_opt_ IErrorInfo *perrinfo)
BOOL WINAPI kernel32.SetEvent(_In_ HANDLE hEvent)
BOOL WINAPI advapi32.AddAccessAllowedObjectAce(_Inout_ PACL pAcl,_In_ DWORD dwAceRevision,_In_ DWORD AceFlags,_In_ DWORD AccessMask,_In_opt_ GUID *ObjectTypeGuid,_In_opt_ GUID *InheritedObjectTypeGuid,_In_ PSID pSid)
BOOL WINAPI kernel32.IsThreadAFiber(void None None)
PVOID WINAPI kernel32.RegisterBadMemoryNotification(_In_ PBAD_MEMORY_CALLBACK_ROUTINE Callback)
VOID WINAPI kernel32.ReleaseSRWLockShared(_Inout_ PSRWLOCK SRWLock)
BOOL WINAPI kernel32.DeleteTimerQueueEx(_In_ HANDLE TimerQueue,_In_opt_ HANDLE CompletionEvent)
BOOL WINAPI authz.AuthzInitializeObjectAccessAuditEvent(_In_ DWORD Flags,_In_ AUTHZ_AUDIT_EVENT_TYPE_HANDLE hAuditEventType,_In_ PWSTR szOperationType,_In_ PWSTR szObjectType,_In_ PWSTR szObjectName,_In_ PWSTR szAdditionalInfo,_Out_ PAUTHZ_AUDIT_EVENT_HANDLE phAuditEvent,_In_ DWORD dwAdditionalParamCount)
int None ws2_32.WSASend(_In_ SOCKET s,_In_ LPWSABUF lpBuffers,_In_ DWORD dwBufferCount,_Out_ LPDWORD lpNumberOfBytesSent,_In_ DWORD dwFlags,_In_ LPWSAOVERLAPPED lpOverlapped,_In_ LPWSAOVERLAPPED_COMPLETION_ROUTINE lpCompletionRoutine)
int None ws2_32.recv(_In_ SOCKET s,_Out_ char *buf,_In_ int len,_In_ int flags)
int WINAPI user32.GetDlgCtrlID(_In_ HWND hwndCtl)
DWORD WINAPI kernel32.GetLongPathNameTransacted(_In_ LPCTSTR lpszShortPath,_Out_ LPTSTR lpszLongPath,_In_ DWORD cchBuffer,_In_ HANDLE hTransaction)
DWORD WINAPI kernel32.GetLongPathNameTransactedW(_In_ LPCTSTR lpszShortPath,_Out_ LPTSTR lpszLongPath,_In_ DWORD cchBuffer,_In_ HANDLE hTransaction)
DWORD WINAPI kernel32.GetLongPathNameTransactedA(_In_ LPCTSTR lpszShortPath,_Out_ LPTSTR lpszLongPath,_In_ DWORD cchBuffer,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.GetFirmwareType(_Inout_ PFIRMWARE_TYPE FirmwareType)
VOID CALLBACK None.APCProc(_In_ ULONG_PTR dwParam)
DWORD WINAPI kernel32.GetProcessHeaps(_In_ DWORD NumberOfHeaps,_Out_ PHANDLE ProcessHeaps)
DWORD WINAPI kernel32.QueueUserAPC(_In_ PAPCFUNC pfnAPC,_In_ HANDLE hThread,_In_ ULONG_PTR dwData)
void WSAAPI ws2_32.FreeAddrInfoEx(_In_ PADDRINFOEX pAddrInfo)
void WSAAPI ws2_32.FreeAddrInfoExW(_In_ PADDRINFOEX pAddrInfo)
void WSAAPI ws2_32.FreeAddrInfoEx(_In_ PADDRINFOEX pAddrInfo)
BOOL WINAPI kernel32.IsBadStringPtr(_In_ LPCTSTR lpsz,_In_ UINT_PTR ucchMax)
BOOL WINAPI kernel32.IsBadStringPtrW(_In_ LPCTSTR lpsz,_In_ UINT_PTR ucchMax)
BOOL WINAPI kernel32.IsBadStringPtrA(_In_ LPCTSTR lpsz,_In_ UINT_PTR ucchMax)
WNDPROC __stdcall atlthunk.AtlThunk_DataToCode(AtlThunkData_t * None)
HRESULT WINAPI ole32.CoDecrementMTAUsage(_In_ CO_MTA_USAGE_COOKIE Cookie)
VOID WINAPI kernel32.SetThreadpoolWait(_Inout_ PTP_WAIT pwa,_In_opt_ HANDLE h,_In_opt_ PFILETIME pftTimeout)
HRESULT None ole32.CoRegisterSurrogate(_In_ LPSURROGATE pSurrogate)
LONG WINAPI advapi32.RegDeleteKeyTransacted(_In_ HKEY hKey,_In_ LPCTSTR lpSubKey,_In_ REGSAM samDesired,_Reserved_ DWORD Reserved,_In_ HANDLE hTransaction,_Reserved_ PVOID pExtendedParameter)
LONG WINAPI advapi32.RegDeleteKeyTransactedW(_In_ HKEY hKey,_In_ LPCTSTR lpSubKey,_In_ REGSAM samDesired,_Reserved_ DWORD Reserved,_In_ HANDLE hTransaction,_Reserved_ PVOID pExtendedParameter)
LONG WINAPI advapi32.RegDeleteKeyTransactedA(_In_ HKEY hKey,_In_ LPCTSTR lpSubKey,_In_ REGSAM samDesired,_Reserved_ DWORD Reserved,_In_ HANDLE hTransaction,_Reserved_ PVOID pExtendedParameter)
HRESULT None azroles.AddPolicyReaderName([in] BSTR bstrReader,[in None None,optional] VARIANT varReserved)
HRESULT None None.StringCbCopyEx(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCbCopyExW(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCbCopyExA(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCbPrintfEx(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags,_In_ LPCTSTR pszFormat,_In_ ... None)
HRESULT None None.StringCbPrintfExW(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags,_In_ LPCTSTR pszFormat,_In_ ... None)
HRESULT None None.StringCbPrintfExA(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags,_In_ LPCTSTR pszFormat,_In_ ... None)
HRESULT None None.StringCbGetsEx(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCbGetsExW(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCbGetsExA(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags)
BOOL WINAPI advapi32.PrivilegedServiceAuditAlarm(_In_ LPCTSTR SubsystemName,_In_ LPCTSTR ServiceName,_In_ HANDLE ClientToken,_In_ PPRIVILEGE_SET Privileges,_In_ BOOL AccessGranted)
BOOL WINAPI advapi32.PrivilegedServiceAuditAlarmW(_In_ LPCTSTR SubsystemName,_In_ LPCTSTR ServiceName,_In_ HANDLE ClientToken,_In_ PPRIVILEGE_SET Privileges,_In_ BOOL AccessGranted)
BOOL WINAPI advapi32.PrivilegedServiceAuditAlarmA(_In_ LPCTSTR SubsystemName,_In_ LPCTSTR ServiceName,_In_ HANDLE ClientToken,_In_ PPRIVILEGE_SET Privileges,_In_ BOOL AccessGranted)
HRESULT None ole32.OleRegGetUserType(_In_ REFCLSID clsid,_In_ DWORD dwFormOfType,_Out_ LPOLESTR *pszUserType)
UINT None msi.MsiGetFileHash(_In_ LPCTSTR szFilePath,_In_ DWORD dwOptions,_Out_ PMSIFILEHASHINFO pHash)
UINT None msi.MsiGetFileHashW(_In_ LPCTSTR szFilePath,_In_ DWORD dwOptions,_Out_ PMSIFILEHASHINFO pHash)
UINT None msi.MsiGetFileHashA(_In_ LPCTSTR szFilePath,_In_ DWORD dwOptions,_Out_ PMSIFILEHASHINFO pHash)
HRESULT None None.StringCbPrintf(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszFormat,_In_ ... None)
HRESULT None None.StringCbPrintfW(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszFormat,_In_ ... None)
HRESULT None None.StringCbPrintfA(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszFormat,_In_ ... None)
DWORD WINAPI kernel32.OfferVirtualMemory(_In_ PVOID VirtualAddress,_In_ SIZE_T Size,_In_ OFFER_PRIORITY Priority)
BOOL WINAPI kernel32.GetSystemRegistryQuota(_Out_opt_ PDWORD pdwQuotaAllowed,_Out_opt_ PDWORD pdwQuotaUsed)
LONG WINAPI advapi32.RegConnectRegistry(_In_opt_ LPCTSTR lpMachineName,_In_ HKEY hKey,_Out_ PHKEY phkResult)
LONG WINAPI advapi32.RegConnectRegistryW(_In_opt_ LPCTSTR lpMachineName,_In_ HKEY hKey,_Out_ PHKEY phkResult)
LONG WINAPI advapi32.RegConnectRegistryA(_In_opt_ LPCTSTR lpMachineName,_In_ HKEY hKey,_Out_ PHKEY phkResult)
LONG WINAPI advapi32.RegCreateKeyEx(_In_ HKEY hKey,_In_ LPCTSTR lpSubKey,_Reserved_ DWORD Reserved,_In_opt_ LPTSTR lpClass,_In_ DWORD dwOptions,_In_ REGSAM samDesired,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_Out_ PHKEY phkResult,_Out_opt_ LPDWORD lpdwDisposition)
LONG WINAPI advapi32.RegCreateKeyExW(_In_ HKEY hKey,_In_ LPCTSTR lpSubKey,_Reserved_ DWORD Reserved,_In_opt_ LPTSTR lpClass,_In_ DWORD dwOptions,_In_ REGSAM samDesired,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_Out_ PHKEY phkResult,_Out_opt_ LPDWORD lpdwDisposition)
LONG WINAPI advapi32.RegCreateKeyExA(_In_ HKEY hKey,_In_ LPCTSTR lpSubKey,_Reserved_ DWORD Reserved,_In_opt_ LPTSTR lpClass,_In_ DWORD dwOptions,_In_ REGSAM samDesired,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_Out_ PHKEY phkResult,_Out_opt_ LPDWORD lpdwDisposition)
BOOL WINAPI advapi32.SetServiceObjectSecurity(_In_ SC_HANDLE hService,_In_ SECURITY_INFORMATION dwSecurityInformation,_In_ PSECURITY_DESCRIPTOR lpSecurityDescriptor)
BOOL WINAPI advapi32.ImpersonateAnonymousToken(_In_ HANDLE ThreadHandle)
BOOL WINAPI authz.AuthzInitializeContextFromAuthzContext(_In_ DWORD flags,_In_ AUTHZ_CLIENT_CONTEXT_HANDLE hAuthzClientContext,_In_opt_ PLARGE_INTEGER pExpirationTime,_In_ LUID Identifier,_In_ PVOID DynamicGroupArgs,_Out_ PAUTHZ_CLIENT_CONTEXT_HANDLE phNewAuthzClientContext)
VOID WINAPI kernel32.CloseThreadpoolWait(_Inout_ PTP_WAIT pwa)
PVOID WINAPI kernel32.VirtualAllocFromApp(_In_opt_ PVOID BaseAddress,_In_ SIZE_T Size,_In_ ULONG AllocationType,_In_ ULONG Protection)
BOOL WINAPI kernel32.SetSystemFileCacheSize(_In_ SIZE_T MinimumFileCacheSize,_In_ SIZE_T MaximumFileCacheSize,_In_ DWORD Flags)
HRESULT None ole32.CoUnmarshalInterface(_In_ LPSTREAM pStm,_In_ REFIID riid,_Out_ LPVOID *ppv)
VOID WINAPI advapi32.BuildTrusteeWithName(_Inout_ PTRUSTEE pTrustee,_In_opt_ LPTSTR pName)
VOID WINAPI advapi32.BuildTrusteeWithNameW(_Inout_ PTRUSTEE pTrustee,_In_opt_ LPTSTR pName)
VOID WINAPI advapi32.BuildTrusteeWithNameA(_Inout_ PTRUSTEE pTrustee,_In_opt_ LPTSTR pName)
int None ws2_32.WSADuplicateSocket(_In_ SOCKET s,_In_ DWORD dwProcessId,_Out_ LPWSAPROTOCOL_INFO lpProtocolInfo)
int None ws2_32.WSADuplicateSocketW(_In_ SOCKET s,_In_ DWORD dwProcessId,_Out_ LPWSAPROTOCOL_INFO lpProtocolInfo)
int None ws2_32.WSADuplicateSocketA(_In_ SOCKET s,_In_ DWORD dwProcessId,_Out_ LPWSAPROTOCOL_INFO lpProtocolInfo)
UINT None msi.MsiEnumPatchesEx(_In_opt_ LPCTSTR szProductCode,_In_opt_ LPCTSTR szUserSid,_In_ DWORD dwContext,_In_ DWORD dwFilter,_In_ DWORD dwIndex,_Out_opt_ TCHAR szPatchCode[39],_Out_opt_ TCHAR szTargetProductCode[39],_Out_opt_ MSIINSTALLCONTEXT *pdwTargetProductContext,_Out_opt_ LPTSTR szTargetUserSid,_Inout_opt_ LPDWORD pcchTargetUserSid)
UINT None msi.MsiEnumPatchesExW(_In_opt_ LPCTSTR szProductCode,_In_opt_ LPCTSTR szUserSid,_In_ DWORD dwContext,_In_ DWORD dwFilter,_In_ DWORD dwIndex,_Out_opt_ TCHAR szPatchCode[39],_Out_opt_ TCHAR szTargetProductCode[39],_Out_opt_ MSIINSTALLCONTEXT *pdwTargetProductContext,_Out_opt_ LPTSTR szTargetUserSid,_Inout_opt_ LPDWORD pcchTargetUserSid)
UINT None msi.MsiEnumPatchesExA(_In_opt_ LPCTSTR szProductCode,_In_opt_ LPCTSTR szUserSid,_In_ DWORD dwContext,_In_ DWORD dwFilter,_In_ DWORD dwIndex,_Out_opt_ TCHAR szPatchCode[39],_Out_opt_ TCHAR szTargetProductCode[39],_Out_opt_ MSIINSTALLCONTEXT *pdwTargetProductContext,_Out_opt_ LPTSTR szTargetUserSid,_Inout_opt_ LPDWORD pcchTargetUserSid)
BOOL WINAPI comctl32._TrackMouseEvent(_Inout_ LPTRACKMOUSEEVENT lpEventTrack)
BOOL WINAPI kernel32.GetSystemCpuSetInformation(_Out_opt_ PSYSTEM_CPU_SET_INFORMATION Information,_In_ ULONG BufferLength,_Out_ PULONG ReturnedLength,_In_opt_ HANDLE Process,_Reserved_ ULONG Flags)
UINT None msi.MsiGetFeatureInfo(_In_ MSIHANDLE hProduct,_In_ LPCTSTR szFeature,_Out_opt_ LPDWORD lpAttributes,_Out_opt_ LPTSTR lpTitleBuf,_Inout_opt_ LPDWORD pcchTitleBuf,_Out_opt_ LPTSTR lpHelpBuf,_Inout_opt_ LPDWORD pcchHelpBuf)
UINT None msi.MsiGetFeatureInfoW(_In_ MSIHANDLE hProduct,_In_ LPCTSTR szFeature,_Out_opt_ LPDWORD lpAttributes,_Out_opt_ LPTSTR lpTitleBuf,_Inout_opt_ LPDWORD pcchTitleBuf,_Out_opt_ LPTSTR lpHelpBuf,_Inout_opt_ LPDWORD pcchHelpBuf)
UINT None msi.MsiGetFeatureInfoA(_In_ MSIHANDLE hProduct,_In_ LPCTSTR szFeature,_Out_opt_ LPDWORD lpAttributes,_Out_opt_ LPTSTR lpTitleBuf,_Inout_opt_ LPDWORD pcchTitleBuf,_Out_opt_ LPTSTR lpHelpBuf,_Inout_opt_ LPDWORD pcchHelpBuf)
HRESULT None ole32.CoUnmarshalHresult(_In_ LPSTREAM pstm,_Out_ HRESULT *phresult)
BOOL CALLBACK None.EnumResLangProc(_In_opt_ HMODULE hModule,_In_ LPCTSTR lpszType,_In_ LPCTSTR lpszName,_In_ WORD wIDLanguage,_In_ LONG_PTR lParam)
BOOL CALLBACK None.EnumResLangProcW(_In_opt_ HMODULE hModule,_In_ LPCTSTR lpszType,_In_ LPCTSTR lpszName,_In_ WORD wIDLanguage,_In_ LONG_PTR lParam)
BOOL CALLBACK None.EnumResLangProcA(_In_opt_ HMODULE hModule,_In_ LPCTSTR lpszType,_In_ LPCTSTR lpszName,_In_ WORD wIDLanguage,_In_ LONG_PTR lParam)
RIO_BUFFERID None mswsock.RIORegisterBuffer(_In_ PCHAR DataBuffer,_In_ DWORD DataLength)
BOOLEAN WINAPI advapi32.AuditSetSystemPolicy(_In_ PCAUDIT_POLICY_INFORMATION pAuditPolicy,_In_ ULONG PolicyCount)
BOOL WINAPI kernel32.PrefetchVirtualMemory(_In_ HANDLE hProcess,_In_ ULONG_PTR NumberOfEntries,_In_ PWIN32_MEMORY_RANGE_ENTRY VirtualAddresses,_In_ ULONG Flags)
LONG WINAPI advapi32.RegSetKeyValue(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_opt_ LPCTSTR lpValueName,_In_ DWORD dwType,_In_opt_ LPCVOID lpData,_In_ DWORD cbData)
LONG WINAPI advapi32.RegSetKeyValueW(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_opt_ LPCTSTR lpValueName,_In_ DWORD dwType,_In_opt_ LPCVOID lpData,_In_ DWORD cbData)
LONG WINAPI advapi32.RegSetKeyValueA(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_opt_ LPCTSTR lpValueName,_In_ DWORD dwType,_In_opt_ LPCVOID lpData,_In_ DWORD cbData)
INT WSAAPI ws2_32.WSAStringToAddress(_In_ LPTSTR AddressString,_In_ INT AddressFamily,_In_opt_ LPWSAPROTOCOL_INFO lpProtocolInfo,_Out_ LPSOCKADDR lpAddress,_Inout_ LPINT lpAddressLength)
INT WSAAPI ws2_32.WSAStringToAddressW(_In_ LPTSTR AddressString,_In_ INT AddressFamily,_In_opt_ LPWSAPROTOCOL_INFO lpProtocolInfo,_Out_ LPSOCKADDR lpAddress,_Inout_ LPINT lpAddressLength)
INT WSAAPI ws2_32.WSAStringToAddressA(_In_ LPTSTR AddressString,_In_ INT AddressFamily,_In_opt_ LPWSAPROTOCOL_INFO lpProtocolInfo,_Out_ LPSOCKADDR lpAddress,_Inout_ LPINT lpAddressLength)
LONG WINAPI advapi32.RegLoadAppKey(_In_ LPCTSTR lpFile,_Out_ PHKEY phkResult,_In_ REGSAM samDesired,_In_ DWORD dwOptions,_Reserved_ DWORD Reserved)
LONG WINAPI advapi32.RegLoadAppKeyW(_In_ LPCTSTR lpFile,_Out_ PHKEY phkResult,_In_ REGSAM samDesired,_In_ DWORD dwOptions,_Reserved_ DWORD Reserved)
LONG WINAPI advapi32.RegLoadAppKeyA(_In_ LPCTSTR lpFile,_Out_ PHKEY phkResult,_In_ REGSAM samDesired,_In_ DWORD dwOptions,_Reserved_ DWORD Reserved)
BOOL WINAPI kernel32.GetThreadTimes(_In_ HANDLE hThread,_Out_ LPFILETIME lpCreationTime,_Out_ LPFILETIME lpExitTime,_Out_ LPFILETIME lpKernelTime,_Out_ LPFILETIME lpUserTime)
DWORD WINAPI kernelbase.SleepEx(_In_ DWORD dwMilliseconds,_In_ BOOL bAlertable)
BOOL None ole32.CoFileTimeToDosDateTime(_In_ FILETIME *lpFileTime,_Out_ LPWORD lpDosDate,_Out_ LPWORD lpDosTime)
BOOL WINAPI advapi32.CreateWellKnownSid(_In_ WELL_KNOWN_SID_TYPE WellKnownSidType,_In_opt_ PSID DomainSid,_Out_opt_ PSID pSid,_Inout_ DWORD *cbSid)
BOOL WINAPI kernel32.UpdateProcThreadAttribute(_Inout_ LPPROC_THREAD_ATTRIBUTE_LIST lpAttributeList,_In_ DWORD dwFlags,_In_ DWORD_PTR Attribute,_In_ PVOID lpValue,_In_ SIZE_T cbSize,_Out_opt_ PVOID lpPreviousValue,_In_opt_ PSIZE_T lpReturnSize)
HRESULT CALLBACK shell32.DllGetVersion(DLLVERSIONINFO *pdvi None)
LONG WINAPI advapi32.RegDisableReflectionKey(_In_ HKEY hBase)
BOOL WINAPI advapi32.ConvertStringSidToSid(_In_ LPCTSTR StringSid,_Out_ PSID *Sid)
BOOL WINAPI advapi32.ConvertStringSidToSidW(_In_ LPCTSTR StringSid,_Out_ PSID *Sid)
BOOL WINAPI advapi32.ConvertStringSidToSidA(_In_ LPCTSTR StringSid,_Out_ PSID *Sid)
BOOL WINAPI aclui.EditSecurity(_In_ HWND hwndOwner,_In_ LPSECURITYINFO psi)
BOOL WINAPI authz.AuthzAccessCheck(_In_ DWORD flags,_In_ AUTHZ_CLIENT_CONTEXT_HANDLE hAuthzClientContext,_In_ PAUTHZ_ACCESS_REQUEST pRequest,_In_opt_ AUTHZ_AUDIT_EVENT_HANDLE AuditEvent,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_opt_ PSECURITY_DESCRIPTOR *OptionalSecurityDescriptorArray,_In_opt_ DWORD OptionalSecurityDescriptorCount,_Inout_ PAUTHZ_ACCESS_REPLY pReply,_Out_opt_ PAUTHZ_ACCESS_CHECK_RESULTS_HANDLE phAccessCheckResults)
HGLOBAL WINAPI kernel32.GlobalHandle(_In_ LPCVOID pMem)
LPVOID WINAPI kernel32.CreateFiber(_In_ SIZE_T dwStackSize,_In_ LPFIBER_START_ROUTINE lpStartAddress,_In_opt_ LPVOID lpParameter)
INSTALLUI_HANDLER None msi.MsiSetExternalUI(_In_ INSTALLUI_HANDLER puiHandler,_In_ DWORD dwMessageFilter,_In_ LPVOID pvContext)
INSTALLUI_HANDLER None msi.MsiSetExternalUIW(_In_ INSTALLUI_HANDLER puiHandler,_In_ DWORD dwMessageFilter,_In_ LPVOID pvContext)
INSTALLUI_HANDLER None msi.MsiSetExternalUIA(_In_ INSTALLUI_HANDLER puiHandler,_In_ DWORD dwMessageFilter,_In_ LPVOID pvContext)
HRESULT None azroles.Submit([in] LONG lFlags,[in None None,optional] VARIANT varReserved)
INT None ws2_32.WSAGetServiceClassNameByClassId(_In_ LPGUID lpServiceClassId,_Out_ LPTSTR lpszServiceClassName,_Inout_ LPDWORD lpdwBufferLength)
INT None ws2_32.WSAGetServiceClassNameByClassIdW(_In_ LPGUID lpServiceClassId,_Out_ LPTSTR lpszServiceClassName,_Inout_ LPDWORD lpdwBufferLength)
INT None ws2_32.WSAGetServiceClassNameByClassIdA(_In_ LPGUID lpServiceClassId,_Out_ LPTSTR lpszServiceClassName,_Inout_ LPDWORD lpdwBufferLength)
HRESULT None shlwapi.ConnectToConnectionPoint(_In_opt_ IUnknown *punk,_In_ REFIID riidEvent,BOOL fConnect None,_In_ IUnknown *punkTarget,_Out_ DWORD *pdwCookie,_Out_opt_ IConnectionPoint **ppcpOut)
LONG WINAPI advapi32.RegSetKeySecurity(_In_ HKEY hKey,_In_ SECURITY_INFORMATION SecurityInformation,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor)
INT None ws2_32.WSALookupServiceEnd(_In_ HANDLE hLookup)
BOOL WINAPI advapi32.SetAclInformation(_Inout_ PACL pAcl,_In_ LPVOID pAclInformation,_In_ DWORD nAclInformationLength,_In_ ACL_INFORMATION_CLASS dwAclInformationClass)
BOOL WINAPI kernel32.IsBadWritePtr(_In_ LPVOID lp,_In_ UINT_PTR ucb)
VOID None mswsock.RIODeregisterBuffer(_In_ RIO_BUFFERID BufferId)
HANDLE WINAPI kernel32.GetCurrentThread(void None None)
BOOL None kernel32.QueryIdleProcessorCycleTimeEx(_In_ USHORT Group,_Inout_ PULONG BufferLength,_Out_ PULONG64 ProcessorIdleCycleTime)
INT None mswsock.GetTypeByName(_In_ LPTSTR lpServiceName,_Inout_ PGUID lpServiceType)
INT None mswsock.GetTypeByNameW(_In_ LPTSTR lpServiceName,_Inout_ PGUID lpServiceType)
INT None mswsock.GetTypeByNameA(_In_ LPTSTR lpServiceName,_Inout_ PGUID lpServiceType)
BOOL WINAPI advapi32.GetCurrentHwProfile(_Out_ LPHW_PROFILE_INFO lpHwProfileInfo)
BOOL WINAPI advapi32.GetCurrentHwProfileW(_Out_ LPHW_PROFILE_INFO lpHwProfileInfo)
BOOL WINAPI advapi32.GetCurrentHwProfileA(_Out_ LPHW_PROFILE_INFO lpHwProfileInfo)
LPVOID None ole32.CoTaskMemAlloc(_In_ SIZE_T cb)
SIZE_T WINAPI kernel32.GlobalSize(_In_ HGLOBAL hMem)
HRESULT WINAPI kernel32.GetThreadDescription(_In_ HANDLE hThread,_Out_ PWSTR *threadDescription)
BOOL WINAPI kernel32.DeleteFile(_In_ LPCTSTR lpFileName)
BOOL WINAPI kernel32.DeleteFileW(_In_ LPCTSTR lpFileName)
BOOL WINAPI kernel32.DeleteFileA(_In_ LPCTSTR lpFileName)
UINT None msi.MsiConfigureProductEx(_In_ LPCTSTR szProduct,_In_ int iInstallLevel,_In_ INSTALLSTATE eInstallState,_In_ LPCTSTR szCommandLine)
UINT None msi.MsiConfigureProductExW(_In_ LPCTSTR szProduct,_In_ int iInstallLevel,_In_ INSTALLSTATE eInstallState,_In_ LPCTSTR szCommandLine)
UINT None msi.MsiConfigureProductExA(_In_ LPCTSTR szProduct,_In_ int iInstallLevel,_In_ INSTALLSTATE eInstallState,_In_ LPCTSTR szCommandLine)
BOOL WINAPI kernel32.WritePrivateProfileString(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ LPCTSTR lpString,_In_ LPCTSTR lpFileName)
BOOL WINAPI kernel32.WritePrivateProfileStringW(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ LPCTSTR lpString,_In_ LPCTSTR lpFileName)
BOOL WINAPI kernel32.WritePrivateProfileStringA(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ LPCTSTR lpString,_In_ LPCTSTR lpFileName)
BOOL WINAPI advapi32.LookupAccountName(_In_opt_ LPCTSTR lpSystemName,_In_ LPCTSTR lpAccountName,_Out_opt_ PSID Sid,_Inout_ LPDWORD cbSid,_Out_opt_ LPTSTR ReferencedDomainName,_Inout_ LPDWORD cchReferencedDomainName,_Out_ PSID_NAME_USE peUse)
BOOL WINAPI advapi32.LookupAccountNameW(_In_opt_ LPCTSTR lpSystemName,_In_ LPCTSTR lpAccountName,_Out_opt_ PSID Sid,_Inout_ LPDWORD cbSid,_Out_opt_ LPTSTR ReferencedDomainName,_Inout_ LPDWORD cchReferencedDomainName,_Out_ PSID_NAME_USE peUse)
BOOL WINAPI advapi32.LookupAccountNameA(_In_opt_ LPCTSTR lpSystemName,_In_ LPCTSTR lpAccountName,_Out_opt_ PSID Sid,_Inout_ LPDWORD cbSid,_Out_opt_ LPTSTR ReferencedDomainName,_Inout_ LPDWORD cchReferencedDomainName,_Out_ PSID_NAME_USE peUse)
VOID WINAPI kernel32.CloseThreadpoolCleanupGroupMembers(_Inout_ PTP_CLEANUP_GROUP ptpcg,_In_ BOOL fCancelPendingCallbacks,_Inout_opt_ PVOID pvCleanupContext)
UINT None msi.MsiNotifySidChange(_In_ LPCTSTR szOldSid,_In_ LPCTSTR szNewSid)
UINT None msi.MsiNotifySidChangeW(_In_ LPCTSTR szOldSid,_In_ LPCTSTR szNewSid)
UINT None msi.MsiNotifySidChangeA(_In_ LPCTSTR szOldSid,_In_ LPCTSTR szNewSid)
BOOL WINAPI advapi32.AreAnyAccessesGranted(_In_ DWORD GrantedAccess,_In_ DWORD DesiredAccess)
HRESULT None ole32.CoImpersonateClient(void None None)
WORD None None.SCODE_CODE(SCODE sc None)
BOOL WINAPI kernel32.WritePrivateProfileSection(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpString,_In_ LPCTSTR lpFileName)
BOOL WINAPI kernel32.WritePrivateProfileSectionW(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpString,_In_ LPCTSTR lpFileName)
BOOL WINAPI kernel32.WritePrivateProfileSectionA(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpString,_In_ LPCTSTR lpFileName)
BOOL None mswsock.RIOResizeCompletionQueue(_In_ RIO_CQ CQ,_In_ DWORD QueueSize)
PVOID None kernel32.MapViewOfFile2(_In_ HANDLE FileMappingHandle,_In_ HANDLE ProcessHandle,_In_ ULONG64 Offset,_In_opt_ PVOID BaseAddress,_In_ SIZE_T ViewSize,_In_ ULONG AllocationType,_In_ ULONG PageProtection)
HANDLE WINAPI kernel32.CreateTimerQueue(void None None)
BOOL WINAPI authz.AuthzModifySids(_In_ AUTHZ_CLIENT_CONTEXT_HANDLE hAuthzClientContext,_In_ AUTHZ_CONTEXT_INFORMATION_CLASS SidClass,_In_ PAUTHZ_SID_OPERATION pSidOperations,_In_opt_ PTOKEN_GROUPS pSids)
BOOL WINAPI kernel32.VirtualLock(_In_ LPVOID lpAddress,_In_ SIZE_T dwSize)
BOOL WINAPI user32.AttachThreadInput(_In_ DWORD idAttach,_In_ DWORD idAttachTo,_In_ BOOL fAttach)
BOOL WINAPI advapi32.DuplicateTokenEx(_In_ HANDLE hExistingToken,_In_ DWORD dwDesiredAccess,_In_opt_ LPSECURITY_ATTRIBUTES lpTokenAttributes,_In_ SECURITY_IMPERSONATION_LEVEL ImpersonationLevel,_In_ TOKEN_TYPE TokenType,_Out_ PHANDLE phNewToken)
DWORD WINAPI kernel32.GetPrivateProfileString(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ LPCTSTR lpDefault,_Out_ LPTSTR lpReturnedString,_In_ DWORD nSize,_In_ LPCTSTR lpFileName)
DWORD WINAPI kernel32.GetPrivateProfileStringW(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ LPCTSTR lpDefault,_Out_ LPTSTR lpReturnedString,_In_ DWORD nSize,_In_ LPCTSTR lpFileName)
DWORD WINAPI kernel32.GetPrivateProfileStringA(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ LPCTSTR lpDefault,_Out_ LPTSTR lpReturnedString,_In_ DWORD nSize,_In_ LPCTSTR lpFileName)
HRESULT None ole32.CoTestCancel(void None None)
HRESULT None ole32.StringFromIID(_In_ REFIID rclsid,_Out_ LPOLESTR *lplpsz)
int WSAAPI fwpuclnt.WSARevertImpersonation(void None None)
BOOL WINAPI kernel32.ConnectNamedPipe(_In_ HANDLE hNamedPipe,_Inout_opt_ LPOVERLAPPED lpOverlapped)
HANDLE WINAPI kernel32.FindFirstStreamTransactedW(_In_ LPCWSTR lpFileName,_In_ STREAM_INFO_LEVELS InfoLevel,_Out_ LPVOID lpFindStreamData,_Reserved_ DWORD dwFlags,_In_ HANDLE hTransaction)
HRESULT None ole32.CoGetClassObject(_In_ REFCLSID rclsid,_In_ DWORD dwClsContext,_In_opt_ COSERVERINFO *pServerInfo,_In_ REFIID riid,_Out_ LPVOID *ppv)
UINT WINAPI kernel32.ResetWriteWatch(_In_ LPVOID lpBaseAddress,_In_ SIZE_T dwRegionSize)
HRESULT None ole32.CoRevokeMallocSpy(void None None)
BOOL WINAPI kernel32.GetSystemFileCacheSize(_Out_ PSIZE_T lpMinimumFileCacheSize,_Out_ PSIZE_T lpMaximumFileCacheSize,_Out_ PDWORD lpFlags)
HWND WINAPI user32.CreateWindowEx(_In_ DWORD dwExStyle,_In_opt_ LPCTSTR lpClassName,_In_opt_ LPCTSTR lpWindowName,_In_ DWORD dwStyle,_In_ int x,_In_ int y,_In_ int nWidth,_In_ int nHeight,_In_opt_ HWND hWndParent,_In_opt_ HMENU hMenu,_In_opt_ HINSTANCE hInstance,_In_opt_ LPVOID lpParam)
HWND WINAPI user32.CreateWindowExW(_In_ DWORD dwExStyle,_In_opt_ LPCTSTR lpClassName,_In_opt_ LPCTSTR lpWindowName,_In_ DWORD dwStyle,_In_ int x,_In_ int y,_In_ int nWidth,_In_ int nHeight,_In_opt_ HWND hWndParent,_In_opt_ HMENU hMenu,_In_opt_ HINSTANCE hInstance,_In_opt_ LPVOID lpParam)
HWND WINAPI user32.CreateWindowExA(_In_ DWORD dwExStyle,_In_opt_ LPCTSTR lpClassName,_In_opt_ LPCTSTR lpWindowName,_In_ DWORD dwStyle,_In_ int x,_In_ int y,_In_ int nWidth,_In_ int nHeight,_In_opt_ HWND hWndParent,_In_opt_ HMENU hMenu,_In_opt_ HINSTANCE hInstance,_In_opt_ LPVOID lpParam)
VOID WINAPI None.FlsCallback(_In_ PVOID lpFlsData)
HRESULT None ole32.CoGetCallerTID(_Out_ LPDWORD lpdwTID)
BOOL WINAPI kernel32.DeleteTimerQueueTimer(_In_opt_ HANDLE TimerQueue,_In_ HANDLE Timer,_In_opt_ HANDLE CompletionEvent)
UINT None msi.MsiSourceListGetInfo(_In_ LPCTSTR szProductCodeOrPatchCode,_In_opt_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD dwOptions,_In_ LPCTSTR szProperty,_Out_opt_ LPTSTR szValue,_Inout_opt_ LPDWORD pcchValue)
UINT None msi.MsiSourceListGetInfoW(_In_ LPCTSTR szProductCodeOrPatchCode,_In_opt_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD dwOptions,_In_ LPCTSTR szProperty,_Out_opt_ LPTSTR szValue,_Inout_opt_ LPDWORD pcchValue)
UINT None msi.MsiSourceListGetInfoA(_In_ LPCTSTR szProductCodeOrPatchCode,_In_opt_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD dwOptions,_In_ LPCTSTR szProperty,_Out_opt_ LPTSTR szValue,_Inout_opt_ LPDWORD pcchValue)
BOOL WINAPI kernel32.MapUserPhysicalPagesScatter(_In_ PVOID *VirtualAddresses,_In_ ULONG_PTR NumberOfPages,_In_ PULONG_PTR PageArray)
BOOL WINAPI kernel32.SetProcessWorkingSetSizeEx(_In_ HANDLE hProcess,_In_ SIZE_T dwMinimumWorkingSetSize,_In_ SIZE_T dwMaximumWorkingSetSize,_In_ DWORD Flags)
LPTSTR WINAPI kernel32.lstrcpy(_Out_ LPTSTR lpString1,_In_ LPTSTR lpString2)
LPTSTR WINAPI kernel32.lstrcpyW(_Out_ LPTSTR lpString1,_In_ LPTSTR lpString2)
LPTSTR WINAPI kernel32.lstrcpyA(_Out_ LPTSTR lpString1,_In_ LPTSTR lpString2)
BOOL WINAPI advapi32.ObjectOpenAuditAlarm(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ LPTSTR ObjectTypeName,_In_opt_ LPTSTR ObjectName,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_ HANDLE ClientToken,_In_ DWORD DesiredAccess,_In_ DWORD GrantedAccess,_In_opt_ PPRIVILEGE_SET Privileges,_In_ BOOL ObjectCreation,_In_ BOOL AccessGranted,_Out_ LPBOOL GenerateOnClose)
BOOL WINAPI advapi32.ObjectOpenAuditAlarmW(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ LPTSTR ObjectTypeName,_In_opt_ LPTSTR ObjectName,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_ HANDLE ClientToken,_In_ DWORD DesiredAccess,_In_ DWORD GrantedAccess,_In_opt_ PPRIVILEGE_SET Privileges,_In_ BOOL ObjectCreation,_In_ BOOL AccessGranted,_Out_ LPBOOL GenerateOnClose)
BOOL WINAPI advapi32.ObjectOpenAuditAlarmA(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ LPTSTR ObjectTypeName,_In_opt_ LPTSTR ObjectName,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_ HANDLE ClientToken,_In_ DWORD DesiredAccess,_In_ DWORD GrantedAccess,_In_opt_ PPRIVILEGE_SET Privileges,_In_ BOOL ObjectCreation,_In_ BOOL AccessGranted,_Out_ LPBOOL GenerateOnClose)
int None ws2_32.WSAIoctl(_In_ SOCKET s,_In_ DWORD dwIoControlCode,_In_ LPVOID lpvInBuffer,_In_ DWORD cbInBuffer,_Out_ LPVOID lpvOutBuffer,_In_ DWORD cbOutBuffer,_Out_ LPDWORD lpcbBytesReturned,_In_ LPWSAOVERLAPPED lpOverlapped,_In_ LPWSAOVERLAPPED_COMPLETION_ROUTINE lpCompletionRoutine)
BOOL WINAPI user32.IsCharLower(_In_ TCHAR ch)
BOOL WINAPI user32.IsCharLowerA(_In_ TCHAR ch)
HRESULT None None.StringCbVPrintfEx(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags,_In_ LPCTSTR pszFormat,_In_ va_list argList)
HRESULT None None.StringCbVPrintfExW(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags,_In_ LPCTSTR pszFormat,_In_ va_list argList)
HRESULT None None.StringCbVPrintfExA(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags,_In_ LPCTSTR pszFormat,_In_ va_list argList)
UINT WINAPI kernel32.GetWriteWatch(_In_ DWORD dwFlags,_In_ PVOID lpBaseAddress,_In_ SIZE_T dwRegionSize,_Out_ PVOID *lpAddresses,_Inout_ PULONG_PTR lpdwCount,_Out_ PULONG lpdwGranularity)
NTSTATUS None None.PsSetLoadImageNotifyRoutine(_In_ PLOAD_IMAGE_NOTIFY_ROUTINE NotifyRoutine)
BOOL WINAPI advapi32.CreatePrivateObjectSecurityWithMultipleInheritance(_In_opt_ PSECURITY_DESCRIPTOR ParentDescriptor,_In_opt_ PSECURITY_DESCRIPTOR CreatorDescriptor,_Out_ PSECURITY_DESCRIPTOR *NewDescriptor,_In_opt_ GUID **ObjectTypes,_In_ ULONG GuidCount,_In_ BOOL IsContainerObject,_In_ ULONG AutoInheritFlags,_In_opt_ HANDLE Token,_In_ PGENERIC_MAPPING GenericMapping)
BOOL WINAPI advapi32.MakeAbsoluteSD(_In_ PSECURITY_DESCRIPTOR pSelfRelativeSD,_Out_opt_ PSECURITY_DESCRIPTOR pAbsoluteSD,_Inout_ LPDWORD lpdwAbsoluteSDSize,_Out_opt_ PACL pDacl,_Inout_ LPDWORD lpdwDaclSize,_Out_opt_ PACL pSacl,_Inout_ LPDWORD lpdwSaclSize,_Out_opt_ PSID pOwner,_Inout_ LPDWORD lpdwOwnerSize,_Out_opt_ PSID pPrimaryGroup,_Inout_ LPDWORD lpdwPrimaryGroupSize)
UINT None msi.MsiSetExternalUIRecord(_In_ PINSTALLUI_HANDLER_RECORD puiHandler,_In_ DWORD dwMessageFilter,_In_ LPVOID pvContext,_Out_opt_ PINSTALLUI_HANDLER_RECORD ppuiPrevHandler)
UINT None msi.MsiSetExternalUIRecord(_In_ PINSTALLUI_HANDLER_RECORD puiHandler,_In_ DWORD dwMessageFilter,_In_ LPVOID pvContext,_Out_opt_ PINSTALLUI_HANDLER_RECORD ppuiPrevHandler)
int None ole32.StringFromGUID2(_In_ REFGUID rguid,_Out_ LPOLESTR lpsz,_In_ int cchMax)
LPTSTR WINAPI user32.CharUpper(_Inout_ LPTSTR lpsz)
LPTSTR WINAPI user32.CharUpperW(_Inout_ LPTSTR lpsz)
LPTSTR WINAPI user32.CharUpperA(_Inout_ LPTSTR lpsz)
HRESULT None ole32.CoGetInterceptor(_In_ REFIID iidIntercepted,_In_ IUnknown *punkOuter,_In_ REFIID iid,_Out_ void **ppv)
BOOL WINAPI user32.IsImmersiveProcess(_In_ HANDLE hProcess)
BOOL WINAPI advapi32.LookupAccountSid(_In_ PSID lpSid,_Out_opt_ LPTSTR lpName,_Inout_ LPDWORD cchName,_Out_opt_ LPTSTR lpReferencedDomainName,_Inout_ LPDWORD cchReferencedDomainName,_Out_ PSID_NAME_USE peUse)
BOOL WINAPI advapi32.LookupAccountSidLocalW(_In_ PSID lpSid,_Out_opt_ LPTSTR lpName,_Inout_ LPDWORD cchName,_Out_opt_ LPTSTR lpReferencedDomainName,_Inout_ LPDWORD cchReferencedDomainName,_Out_ PSID_NAME_USE peUse)
BOOL WINAPI advapi32.LookupAccountSidLocalA(_In_ PSID lpSid,_Out_opt_ LPTSTR lpName,_Inout_ LPDWORD cchName,_Out_opt_ LPTSTR lpReferencedDomainName,_Inout_ LPDWORD cchReferencedDomainName,_Out_ PSID_NAME_USE peUse)
HRESULT None ole32.CreateAntiMoniker(_Out_ LPMONIKER *ppmk)
RIO_CQ None mswsock.RIOCreateCompletionQueue(_In_ DWORD QueueSize,_In_opt_ RIO_NOTIFICATION_COMPLETION NotificationCompletion)
LONG WINAPI advapi32.RegLoadMUIString(_In_ HKEY hKey,_In_opt_ LPCTSTR pszValue,_Out_opt_ LPTSTR pszOutBuf,_In_ DWORD cbOutBuf,_Out_opt_ LPDWORD pcbData,_In_ DWORD Flags,_In_opt_ LPCTSTR pszDirectory)
LONG WINAPI advapi32.RegLoadMUIStringW(_In_ HKEY hKey,_In_opt_ LPCTSTR pszValue,_Out_opt_ LPTSTR pszOutBuf,_In_ DWORD cbOutBuf,_Out_opt_ LPDWORD pcbData,_In_ DWORD Flags,_In_opt_ LPCTSTR pszDirectory)
LONG WINAPI advapi32.RegLoadMUIStringA(_In_ HKEY hKey,_In_opt_ LPCTSTR pszValue,_Out_opt_ LPTSTR pszOutBuf,_In_ DWORD cbOutBuf,_Out_opt_ LPDWORD pcbData,_In_ DWORD Flags,_In_opt_ LPCTSTR pszDirectory)
BOOL WINAPI kernelbase.TlsSetValue(_In_ DWORD dwTlsIndex,_In_opt_ LPVOID lpTlsValue)
BOOL WINAPI kernel32.TerminateJobObject(_In_ HANDLE hJob,_In_ UINT uExitCode)
DWORD WINAPI kernel32.GetFirmwareEnvironmentVariable(_In_ LPCTSTR lpName,_In_ LPCTSTR lpGuid,_Out_ PVOID pBuffer,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetFirmwareEnvironmentVariableW(_In_ LPCTSTR lpName,_In_ LPCTSTR lpGuid,_Out_ PVOID pBuffer,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetFirmwareEnvironmentVariableA(_In_ LPCTSTR lpName,_In_ LPCTSTR lpGuid,_Out_ PVOID pBuffer,_In_ DWORD nSize)
LONG WINAPI advapi32.RegDisablePredefinedCacheEx(void None None)
BOOL WINAPI kernel32.InitOnceExecuteOnce(_Inout_ PINIT_ONCE InitOnce,_In_ PINIT_ONCE_FN InitFn,_Inout_opt_ PVOID Parameter,_Out_opt_ LPVOID *Context)
HANDLE WINAPI kernel32.CreateEvent(_In_opt_ LPSECURITY_ATTRIBUTES lpEventAttributes,_In_ BOOL bManualReset,_In_ BOOL bInitialState,_In_opt_ LPCTSTR lpName)
HANDLE WINAPI kernel32.CreateEventW(_In_opt_ LPSECURITY_ATTRIBUTES lpEventAttributes,_In_ BOOL bManualReset,_In_ BOOL bInitialState,_In_opt_ LPCTSTR lpName)
HANDLE WINAPI kernel32.CreateEventA(_In_opt_ LPSECURITY_ATTRIBUTES lpEventAttributes,_In_ BOOL bManualReset,_In_ BOOL bInitialState,_In_opt_ LPCTSTR lpName)
BOOL WINAPI kernel32.SetInformationJobObject(_In_ HANDLE hJob,_In_ JOBOBJECTINFOCLASS JobObjectInfoClass,_In_ LPVOID lpJobObjectInfo,_In_ DWORD cbJobObjectInfoLength)
UINT None msi.MsiEnumComponentQualifiers(_In_ LPTSTR szComponent,_In_ DWORD iIndex,_Out_ LPTSTR lpQualifierBuf,_Inout_ DWORD *pcchQualifierBuf,_Out_ LPTSTR lpApplicationDataBuf,_Inout_ DWORD *pcchApplicationDataBuf)
UINT None msi.MsiEnumComponentQualifiersW(_In_ LPTSTR szComponent,_In_ DWORD iIndex,_Out_ LPTSTR lpQualifierBuf,_Inout_ DWORD *pcchQualifierBuf,_Out_ LPTSTR lpApplicationDataBuf,_Inout_ DWORD *pcchApplicationDataBuf)
UINT None msi.MsiEnumComponentQualifiersA(_In_ LPTSTR szComponent,_In_ DWORD iIndex,_Out_ LPTSTR lpQualifierBuf,_Inout_ DWORD *pcchQualifierBuf,_Out_ LPTSTR lpApplicationDataBuf,_Inout_ DWORD *pcchApplicationDataBuf)
BOOL WINAPI advapi32.ConvertStringSecurityDescriptorToSecurityDescriptor(_In_ LPCTSTR StringSecurityDescriptor,_In_ DWORD StringSDRevision,_Out_ PSECURITY_DESCRIPTOR *SecurityDescriptor,_Out_ PULONG SecurityDescriptorSize)
BOOL WINAPI advapi32.ConvertStringSecurityDescriptorToSecurityDescriptorW(_In_ LPCTSTR StringSecurityDescriptor,_In_ DWORD StringSDRevision,_Out_ PSECURITY_DESCRIPTOR *SecurityDescriptor,_Out_ PULONG SecurityDescriptorSize)
BOOL WINAPI advapi32.ConvertStringSecurityDescriptorToSecurityDescriptorA(_In_ LPCTSTR StringSecurityDescriptor,_In_ DWORD StringSDRevision,_Out_ PSECURITY_DESCRIPTOR *SecurityDescriptor,_Out_ PULONG SecurityDescriptorSize)
BOOL WINAPI authz.AuthzInitializeCompoundContext(_In_ AUTHZ_CLIENT_CONTEXT_HANDLE UserContext,_In_ AUTHZ_CLIENT_CONTEXT_HANDLE DeviceContext,_Out_ PAUTHZ_CLIENT_CONTEXT_HANDLE phCompoundContext)
BOOL WINAPI kernel32.GetNumaNodeProcessorMask(_In_ UCHAR Node,_Out_ PULONGLONG ProcessorMask)
LONG WINAPI advapi32.RegCreateKey(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_Out_ PHKEY phkResult)
LONG WINAPI advapi32.RegCreateKeyW(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_Out_ PHKEY phkResult)
LONG WINAPI advapi32.RegCreateKeyA(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_Out_ PHKEY phkResult)
UINT None msi.MsiReinstallFeature(_In_ LPCTSTR szProduct,_In_ LPCTSTR szFeature,_In_ DWORD dwReinstallMode)
UINT None msi.MsiReinstallFeatureW(_In_ LPCTSTR szProduct,_In_ LPCTSTR szFeature,_In_ DWORD dwReinstallMode)
UINT None msi.MsiReinstallFeatureA(_In_ LPCTSTR szProduct,_In_ LPCTSTR szFeature,_In_ DWORD dwReinstallMode)
BOOL WINAPI kernel32.InitializeCriticalSectionEx(_Out_ LPCRITICAL_SECTION lpCriticalSection,_In_ DWORD dwSpinCount,_In_ DWORD Flags)
LONG None None.ScreenSaverProc(HWND hWnd None,UINT message None,WPARAM wParam None,LPARAM lParam None)
BOOL WINAPI kernel32.GetProductInfo(_In_ DWORD dwOSMajorVersion,_In_ DWORD dwOSMinorVersion,_In_ DWORD dwSpMajorVersion,_In_ DWORD dwSpMinorVersion,_Out_ PDWORD pdwReturnedProductType)
BOOL None kernel32.QueryUnbiasedInterruptTime(_Out_ PULONGLONG lpUnbiasedInterruptTime)
int None shell32.PathResolve(_Inout_ PWSTR pszPath,_In_opt_ PZPCWSTR dirs,UINT fFlags None)
BOOLEAN WINAPI kernel32.ClosePrivateNamespace(_In_ HANDLE Handle,_In_ ULONG Flags)
HRESULT None None.AddInterface([in] BSTR bstrInterfaceName,[in] LONG lInterfaceFlag,[in] VARIANT varInterface)
HRESULT WINAPI None.Initialize(RO_INIT_TYPE initType None)
void None ole32.CoUninitialize(void None None)
BOOL WINAPI kernel32.QueryMemoryResourceNotification(_In_ HANDLE ResourceNotificationHandle,_Out_ PBOOL ResourceState)
BOOL WINAPI user32.SetUserObjectSecurity(_In_ HANDLE hObj,_In_ PSECURITY_INFORMATION pSIRequested,_In_ PSECURITY_DESCRIPTOR pSID)
UINT WINAPI kernel32.LocalFlags(_In_ HLOCAL hMem)
VOID None None.DestroyThreadpoolEnvironment(_Inout_ PTP_CALLBACK_ENVIRON pcbe)
HRESULT None None.StringCbPrintf(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszFormat,_In_ ... None)
HRESULT None None.StringCbPrintfW(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszFormat,_In_ ... None)
HRESULT None None.StringCbPrintfA(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszFormat,_In_ ... None)
u_long WSAAPI ws2_32.htonl(_In_ u_long hostlong)
BOOL WINAPI authz.AuthzModifySecurityAttributes(_In_ AUTHZ_CLIENT_CONTEXT_HANDLE hAuthzClientContext,_In_ PAUTHZ_SECURITY_ATTRIBUTE_OPERATION pOperations,_In_ PAUTHZ_SECURITY_ATTRUBUTES_INFORMATION pAttributes)
BOOL WINAPI advapi32.RevertToSelf(void None None)
DWORD WINAPI advapi32.BuildSecurityDescriptor(_In_opt_ PTRUSTEE pOwner,_In_opt_ PTRUSTEE pGroup,_In_ ULONG cCountOfAccessEntries,_In_opt_ PEXPLICIT_ACCESS pListOfAccessEntries,_In_ ULONG cCountOfAuditEntries,_In_opt_ PEXPLICIT_ACCESS pListOfAuditEntries,_In_opt_ PSECURITY_DESCRIPTOR pOldSD,_Out_ PULONG pSizeNewSD,_Out_ PSECURITY_DESCRIPTOR *pNewSD)
DWORD WINAPI advapi32.BuildSecurityDescriptorW(_In_opt_ PTRUSTEE pOwner,_In_opt_ PTRUSTEE pGroup,_In_ ULONG cCountOfAccessEntries,_In_opt_ PEXPLICIT_ACCESS pListOfAccessEntries,_In_ ULONG cCountOfAuditEntries,_In_opt_ PEXPLICIT_ACCESS pListOfAuditEntries,_In_opt_ PSECURITY_DESCRIPTOR pOldSD,_Out_ PULONG pSizeNewSD,_Out_ PSECURITY_DESCRIPTOR *pNewSD)
DWORD WINAPI advapi32.BuildSecurityDescriptorA(_In_opt_ PTRUSTEE pOwner,_In_opt_ PTRUSTEE pGroup,_In_ ULONG cCountOfAccessEntries,_In_opt_ PEXPLICIT_ACCESS pListOfAccessEntries,_In_ ULONG cCountOfAuditEntries,_In_opt_ PEXPLICIT_ACCESS pListOfAuditEntries,_In_opt_ PSECURITY_DESCRIPTOR pOldSD,_Out_ PULONG pSizeNewSD,_Out_ PSECURITY_DESCRIPTOR *pNewSD)
LONG WINAPI advapi32.RegQueryValueEx(_In_ HKEY hKey,_In_opt_ LPCTSTR lpValueName,_Reserved_ LPDWORD lpReserved,_Out_opt_ LPDWORD lpType,_Out_opt_ LPBYTE lpData,_Inout_opt_ LPDWORD lpcbData)
LONG WINAPI advapi32.RegQueryValueExW(_In_ HKEY hKey,_In_opt_ LPCTSTR lpValueName,_Reserved_ LPDWORD lpReserved,_Out_opt_ LPDWORD lpType,_Out_opt_ LPBYTE lpData,_Inout_opt_ LPDWORD lpcbData)
LONG WINAPI advapi32.RegQueryValueExA(_In_ HKEY hKey,_In_opt_ LPCTSTR lpValueName,_Reserved_ LPDWORD lpReserved,_Out_opt_ LPDWORD lpType,_Out_opt_ LPBYTE lpData,_Inout_opt_ LPDWORD lpcbData)
BOOL WINAPI kernel32.GetLogicalProcessorInformation(_Out_ PSYSTEM_LOGICAL_PROCESSOR_INFORMATION Buffer,_Inout_ PDWORD ReturnLength)
BOOL WINAPI advapi32.SetFileSecurity(_In_ LPCTSTR lpFileName,_In_ SECURITY_INFORMATION SecurityInformation,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor)
BOOL WINAPI advapi32.SetFileSecurityW(_In_ LPCTSTR lpFileName,_In_ SECURITY_INFORMATION SecurityInformation,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor)
BOOL WINAPI advapi32.SetFileSecurityA(_In_ LPCTSTR lpFileName,_In_ SECURITY_INFORMATION SecurityInformation,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor)
HRESULT None azroles.AddRoleDefinition([in] BSTR bstrRoleDefinition)
BOOL None kernel32.GetNumaAvailableMemoryNodeEx(_In_ USHORT Node,_Out_ PULONGLONG AvailableBytes)
HRESULT None azroles.DeleteTask([in] BSTR bstrProp,[in None None,optional] VARIANT varReserved)
HRESULT None combase.CoGetInstanceFromFile(_In_opt_ COSERVERINFO *pServerInfo,_In_opt_ CLSID *pClsid,_In_opt_ IUnknown *punkOuter,_In_ DWORD dwClsCtx,_In_ DWORD grfMode,_In_ OLECHAR *pwszName,_In_ DWORD dwCount,_Inout_ MULTI_QI *pResults)
BOOLEAN WINAPI advapi32.AuditSetSecurity(_In_ SECURITY_INFORMATION SecurityInformation,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor)
HRESULT WINOLEAPI combase.CoRegisterChannelHook(_In_ REFGUID ExtensionUuid,_In_ IChannelHook *pChannelHook)
HRESULT WINOLEAPI combase.CoWaitForMultipleObjects(_In_ DWORD dwFlags,_In_ DWORD dwTimeout,_In_ ULONG cHandles,_In_ LPHANDLE pHandles,_Out_ LPDWORD lpdwIndex)
u_short WSAAPI ws2_32.htons(_In_ u_short hostshort)
BOOL WINAPI advapi32.AccessCheckAndAuditAlarm(_In_ LPCTSTR SubsystemName,_In_opt_ LPVOID HandleId,_In_ LPTSTR ObjectTypeName,_In_opt_ LPTSTR ObjectName,_In_ PSECURITY_DESCRIPTOR SecurityDescriptor,_In_ DWORD DesiredAccess,_In_ PGENERIC_MAPPING GenericMapping,_In_ BOOL ObjectCreation,_Out_ LPDWORD GrantedAccess,_Out_ LPBOOL AccessStatus,_Out_ LPBOOL pfGenerateOnClose)
BOOL WINAPI advapi32.AccessCheckAndAuditAlarmW(_In_ LPCTSTR SubsystemName,_In_opt_ LPVOID HandleId,_In_ LPTSTR ObjectTypeName,_In_opt_ LPTSTR ObjectName,_In_ PSECURITY_DESCRIPTOR SecurityDescriptor,_In_ DWORD DesiredAccess,_In_ PGENERIC_MAPPING GenericMapping,_In_ BOOL ObjectCreation,_Out_ LPDWORD GrantedAccess,_Out_ LPBOOL AccessStatus,_Out_ LPBOOL pfGenerateOnClose)
BOOL WINAPI advapi32.AccessCheckAndAuditAlarmA(_In_ LPCTSTR SubsystemName,_In_opt_ LPVOID HandleId,_In_ LPTSTR ObjectTypeName,_In_opt_ LPTSTR ObjectName,_In_ PSECURITY_DESCRIPTOR SecurityDescriptor,_In_ DWORD DesiredAccess,_In_ PGENERIC_MAPPING GenericMapping,_In_ BOOL ObjectCreation,_Out_ LPDWORD GrantedAccess,_Out_ LPBOOL AccessStatus,_Out_ LPBOOL pfGenerateOnClose)
BOOL WINAPI advapi32.LookupPrivilegeValue(_In_opt_ LPCTSTR lpSystemName,_In_ LPCTSTR lpName,_Out_ PLUID lpLuid)
BOOL WINAPI advapi32.LookupPrivilegeValueW(_In_opt_ LPCTSTR lpSystemName,_In_ LPCTSTR lpName,_Out_ PLUID lpLuid)
BOOL WINAPI advapi32.LookupPrivilegeValueA(_In_opt_ LPCTSTR lpSystemName,_In_ LPCTSTR lpName,_Out_ PLUID lpLuid)
int None ws2_32.WSACancelAsyncRequest(_In_ HANDLE hAsyncTaskHandle)
INT WSAAPI ws2_32.WSAEnumNameSpaceProviders(_Inout_ LPDWORD lpdwBufferLength,_Out_ LPWSANAMESPACE_INFO lpnspBuffer)
INT WSAAPI ws2_32.WSAEnumNameSpaceProvidersW(_Inout_ LPDWORD lpdwBufferLength,_Out_ LPWSANAMESPACE_INFO lpnspBuffer)
INT WSAAPI ws2_32.WSAEnumNameSpaceProvidersA(_Inout_ LPDWORD lpdwBufferLength,_Out_ LPWSANAMESPACE_INFO lpnspBuffer)
LONG WINAPI advapi32.RegOpenUserClassesRoot(_In_ HANDLE hToken,_Reserved_ DWORD dwOptions,_In_ REGSAM samDesired,_Out_ PHKEY phkResult)
HANDLE None kernel32.CreateRemoteThreadEx(_In_ HANDLE hProcess,_In_opt_ LPSECURITY_ATTRIBUTES lpThreadAttributes,_In_ SIZE_T dwStackSize,_In_ LPTHREAD_START_ROUTINE lpStartAddress,_In_opt_ LPVOID lpParameter,_In_ DWORD dwCreationFlags,_In_opt_ LPPROC_THREAD_ATTRIBUTE_LIST lpAttributeList,_Out_opt_ LPDWORD lpThreadId)
BOOLEAN WINAPI secur32.TranslateName(_In_ LPCTSTR lpAccountName,_In_ EXTENDED_NAME_FORMAT AccountNameFormat,_In_ EXTENDED_NAME_FORMAT DesiredNameFormat,_Out_ LPTSTR lpTranslatedName,_Inout_ PULONG nSize)
BOOLEAN WINAPI secur32.TranslateNameW(_In_ LPCTSTR lpAccountName,_In_ EXTENDED_NAME_FORMAT AccountNameFormat,_In_ EXTENDED_NAME_FORMAT DesiredNameFormat,_Out_ LPTSTR lpTranslatedName,_Inout_ PULONG nSize)
BOOLEAN WINAPI secur32.TranslateNameA(_In_ LPCTSTR lpAccountName,_In_ EXTENDED_NAME_FORMAT AccountNameFormat,_In_ EXTENDED_NAME_FORMAT DesiredNameFormat,_Out_ LPTSTR lpTranslatedName,_Inout_ PULONG nSize)
WORD None kernel32.GetMaximumProcessorGroupCount(void None None)
DWORD WINAPI kernel32.Wow64SuspendThread(_In_ HANDLE hThread)
int None comctl32.AddMRUStringW(_In_ HANDLE hMRU,_In_ LPCTSTR szString)
int None comctl32.AddMRUStringW(_In_ HANDLE hMRU,_In_ LPCTSTR szString)
BOOL WINAPI kernel32.RemoveDirectory(_In_ LPCTSTR lpPathName)
BOOL WINAPI kernel32.RemoveDirectoryW(_In_ LPCTSTR lpPathName)
BOOL WINAPI kernel32.RemoveDirectoryA(_In_ LPCTSTR lpPathName)
HRESULT None ole32.CoRegisterInitializeSpy(_In_ LPINITIALIZESPY pSpy,_Out_ ULARGE_INTEGER *puliCookie)
BOOL WINAPI advapi32.ObjectDeleteAuditAlarm(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ BOOL GenerateOnClose)
BOOL WINAPI advapi32.ObjectDeleteAuditAlarmW(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ BOOL GenerateOnClose)
BOOL WINAPI advapi32.ObjectDeleteAuditAlarmA(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ BOOL GenerateOnClose)
INT WSAAPI ws2_32.WSAAddressToString(_In_ LPSOCKADDR lpsaAddress,_In_ DWORD dwAddressLength,_In_opt_ LPWSAPROTOCOL_INFO lpProtocolInfo,_Inout_ LPTSTR lpszAddressString,_Inout_ LPDWORD lpdwAddressStringLength)
INT WSAAPI ws2_32.WSAAddressToStringW(_In_ LPSOCKADDR lpsaAddress,_In_ DWORD dwAddressLength,_In_opt_ LPWSAPROTOCOL_INFO lpProtocolInfo,_Inout_ LPTSTR lpszAddressString,_Inout_ LPDWORD lpdwAddressStringLength)
INT WSAAPI ws2_32.WSAAddressToStringA(_In_ LPSOCKADDR lpsaAddress,_In_ DWORD dwAddressLength,_In_opt_ LPWSAPROTOCOL_INFO lpProtocolInfo,_Inout_ LPTSTR lpszAddressString,_Inout_ LPDWORD lpdwAddressStringLength)
HRESULT None ole32.CreateObjrefMoniker(_In_opt_ LPUNKNOWN punk,_Out_ LPMONIKER *ppmk)
BOOL PASCAL mswsock.TransmitFile(SOCKET hSocket None,HANDLE hFile None,DWORD nNumberOfBytesToWrite None,DWORD nNumberOfBytesPerSend None,LPOVERLAPPED lpOverlapped None,LPTRANSMIT_FILE_BUFFERS lpTransmitBuffers None,DWORD dwFlags None)
BOOL WINAPI authz.AuthzOpenObjectAudit(_In_ DWORD Flags,_In_ AUTHZ_CLIENT_CONTEXT_HANDLE hAuthzClientContext,_In_ PAUTHZ_ACCESS_REQUEST pRequest,_In_ AUTHZ_AUDIT_EVENT_HANDLE hAuditEvent,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_ PSECURITY_DESCRIPTOR *SecurityDescriptorArray,_In_ DWORD SecurityDescriptorCount,_In_ PAUTHZ_ACCESS_REPLY pReply)
BOOL WINAPI kernel32.PulseEvent(_In_ HANDLE hEvent)
BOOL WINAPI kernel32.AddSecureMemoryCacheCallback(_In_ PSECURE_MEMORY_CACHE_CALLBACK pfnCallBack)
BOOL WINAPI authz.AuthzFreeResourceManager(_In_ AUTHZ_RESOURCE_MANAGER_HANDLE AuthzResourceManager)
BOOL WINAPI kernel32.ConvertFiberToThread(void None None)
void WINAPI advapi32.BuildTrusteeWithObjectsAndSid(_Inout_ PTRUSTEE pTrustee,_In_opt_ POBJECTS_AND_SID pObjSid,_In_opt_ GUID *pObjectGuid,_In_opt_ GUID *pInheritedObjectGuid,_In_opt_ PSID pSid)
void WINAPI advapi32.BuildTrusteeWithObjectsAndSidW(_Inout_ PTRUSTEE pTrustee,_In_opt_ POBJECTS_AND_SID pObjSid,_In_opt_ GUID *pObjectGuid,_In_opt_ GUID *pInheritedObjectGuid,_In_opt_ PSID pSid)
void WINAPI advapi32.BuildTrusteeWithObjectsAndSidA(_Inout_ PTRUSTEE pTrustee,_In_opt_ POBJECTS_AND_SID pObjSid,_In_opt_ GUID *pObjectGuid,_In_opt_ GUID *pInheritedObjectGuid,_In_opt_ PSID pSid)
HRESULT None ole32.CoRegisterActivationFilter(_In_ IActivationFilter *pActivationFilter)
BOOL WINAPI user32.EnumWindowStations(_In_ WINSTAENUMPROC lpEnumFunc,_In_ LPARAM lParam)
BOOL WINAPI user32.EnumWindowStationsW(_In_ WINSTAENUMPROC lpEnumFunc,_In_ LPARAM lParam)
BOOL WINAPI user32.EnumWindowStationsA(_In_ WINSTAENUMPROC lpEnumFunc,_In_ LPARAM lParam)
BOOL None cabinet.ResetCompressor(_In_ COMPRESSOR_HANDLE CompressorHandle)
PUCHAR WINAPI advapi32.GetSidSubAuthorityCount(_In_ PSID pSid)
HRESULT WINAPI aclui.EditSecurityAdvanced(_In_ HWND hwndOwner,_In_ LPSECURITYINFO psi,_In_ SI_PAGE_TYPE uSIPage)
PSLIST_ENTRY WINAPI ntdll.RtlInterlockedFlushSList(_In_ PSLIST_HEADER ListHead)
NTSTATUS WINAPI ntdll.RtlConvertSidToUnicodeString(_Out_ PUNICODE_STRING UnicodeString,_In_ PSID Sid,_In_ BOOLEAN AllocateDestinationString)
HRESULT None ole32.CLSIDFromProgIDEx(_In_ LPCOLESTR lpszProgID,_Out_ LPCLSID lpclsid)
BOOL WINAPI advapi32.CheckTokenMembership(_In_opt_ HANDLE TokenHandle,_In_ PSID SidToCheck,_Out_ PBOOL IsMember)
BOOL WINAPI kernel32.SetFirmwareEnvironmentVariable(_In_ LPCTSTR lpName,_In_ LPCTSTR lpGuid,_In_ PVOID pBuffer,_In_ DWORD nSize)
BOOL WINAPI kernel32.SetFirmwareEnvironmentVariableW(_In_ LPCTSTR lpName,_In_ LPCTSTR lpGuid,_In_ PVOID pBuffer,_In_ DWORD nSize)
BOOL WINAPI kernel32.SetFirmwareEnvironmentVariableA(_In_ LPCTSTR lpName,_In_ LPCTSTR lpGuid,_In_ PVOID pBuffer,_In_ DWORD nSize)
BOOL WINAPI advapi32.AllocateAndInitializeSid(_In_ PSID_IDENTIFIER_AUTHORITY pIdentifierAuthority,_In_ BYTE nSubAuthorityCount,_In_ DWORD dwSubAuthority0,_In_ DWORD dwSubAuthority1,_In_ DWORD dwSubAuthority2,_In_ DWORD dwSubAuthority3,_In_ DWORD dwSubAuthority4,_In_ DWORD dwSubAuthority5,_In_ DWORD dwSubAuthority6,_In_ DWORD dwSubAuthority7,_Out_ PSID *pSid)
INSTALLSTATE None msi.MsiLocateComponent(_In_ LPCTSTR szComponent,_Out_ LPTSTR lpPathBuf,_Inout_ DWORD *pcchBuf)
INSTALLSTATE None msi.MsiLocateComponentW(_In_ LPCTSTR szComponent,_Out_ LPTSTR lpPathBuf,_Inout_ DWORD *pcchBuf)
INSTALLSTATE None msi.MsiLocateComponentA(_In_ LPCTSTR szComponent,_Out_ LPTSTR lpPathBuf,_Inout_ DWORD *pcchBuf)
BOOL WINAPI kernel32.HeapUnlock(_In_ HANDLE hHeap)
u_short WSAAPI ws2_32.ntohs(_In_ u_short netshort)
BOOL WINAPI kernel32.QueryInformationJobObject(_In_opt_ HANDLE hJob,_In_ JOBOBJECTINFOCLASS JobObjectInfoClass,_Out_ LPVOID lpJobObjectInfo,_In_ DWORD cbJobObjectInfoLength,_Out_opt_ LPDWORD lpReturnLength)
FORCEINLINE HANDLE None.GetCurrentProcessToken(void None None)
BOOL PASCAL None.TransmitPackets(SOCKET hSocket None,LPTRANSMIT_PACKETS_ELEMENT lpPacketArray None,DWORD nElementCount None,DWORD nSendSize None,LPOVERLAPPED lpOverlapped None,DWORD dwFlags None)
BOOL WINAPI avrt.AvSetMmThreadPriority(_In_ HANDLE AvrtHandle,_In_ AVRT_PRIORITY Priority)
DWORD WINAPI kernel32.ReclaimVirtualMemory(_In_ PVOID VirtualAddress,_In_ SIZE_T Size)
BOOL None ole32.IsEqualCLSID(_In_ REFCLSID rclsid1,_In_ REFCLSID rclsid2)
HRESULT None None.StringCchCatEx(_Inout_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCchCatExW(_Inout_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCchCatExA(_Inout_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
BOOL WINAPI advapi32.SetSecurityDescriptorGroup(_Inout_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_opt_ PSID pGroup,_In_ BOOL bGroupDefaulted)
int None ws2_32.closesocket(_In_ SOCKET s)
int __cdecl user32.wsprintf(_Out_ LPTSTR lpOut,_In_ LPCTSTR lpFmt,_In_ ... None)
int __cdecl user32.wsprintfW(_Out_ LPTSTR lpOut,_In_ LPCTSTR lpFmt,_In_ ... None)
int __cdecl user32.wsprintfA(_Out_ LPTSTR lpOut,_In_ LPCTSTR lpFmt,_In_ ... None)
BOOL WINAPI api-ms-win-core-enclave-l1-1-0.InitializeEnclave(_In_ HANDLE hProcess,_In_ LPVOID lpAddress,_In_ LPVOID lpEnclaveInformation,_In_ DWORD dwInfoLength,_In_ LPDWORD lpEnclaveError)
TRUSTEE_TYPE WINAPI advapi32.GetTrusteeType(_In_opt_ PTRUSTEE pTrustee)
TRUSTEE_TYPE WINAPI advapi32.GetTrusteeTypeW(_In_opt_ PTRUSTEE pTrustee)
TRUSTEE_TYPE WINAPI advapi32.GetTrusteeTypeA(_In_opt_ PTRUSTEE pTrustee)
HRESULT None ole32.CoSuspendClassObjects(void None None)
HRESULT None None.StringCchCatN(_Inout_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_In_ size_t cchMaxAppend)
HRESULT None None.StringCchCatNW(_Inout_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_In_ size_t cchMaxAppend)
HRESULT None None.StringCchCatNA(_Inout_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_In_ size_t cchMaxAppend)
DWORD WINAPI kernel32.GetDynamicTimeZoneInformation(_Out_ PDYNAMIC_TIME_ZONE_INFORMATION pTimeZoneInformation)
BOOL WINAPI kernel32.SetProcessDefaultCpuSets(_In_ HANDLE Process,_In_opt_ ULONG CpuSetIds,_In_ ULONG CpuSetIdCound)
LONG WINAPI advapi32.RegGetKeySecurity(_In_ HKEY hKey,_In_ SECURITY_INFORMATION SecurityInformation,_Out_opt_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_Inout_ LPDWORD lpcbSecurityDescriptor)
UINT None msi.MsiDetermineApplicablePatches(_In_ LPCTSTR szProductPackagePath,_In_ DWORD cPatchInfo,_In_ PMSIPATCHSEQUENCEINFO pPatchInfo)
UINT None msi.MsiDetermineApplicablePatchesW(_In_ LPCTSTR szProductPackagePath,_In_ DWORD cPatchInfo,_In_ PMSIPATCHSEQUENCEINFO pPatchInfo)
UINT None msi.MsiDetermineApplicablePatchesA(_In_ LPCTSTR szProductPackagePath,_In_ DWORD cPatchInfo,_In_ PMSIPATCHSEQUENCEINFO pPatchInfo)
BOOL WINAPI advapi32.MakeSelfRelativeSD(_In_ PSECURITY_DESCRIPTOR pAbsoluteSD,_Out_opt_ PSECURITY_DESCRIPTOR pSelfRelativeSD,_Inout_ LPDWORD lpdwBufferLength)
HRESULT None azroles.DeleteAppMember([in] BSTR bstrProp,[in None None,optional] VARIANT varReserved)
LONG WINAPI advapi32.RegGetValue(_In_ HKEY hkey,_In_opt_ LPCTSTR lpSubKey,_In_opt_ LPCTSTR lpValue,_In_opt_ DWORD dwFlags,_Out_opt_ LPDWORD pdwType,_Out_opt_ PVOID pvData,_Inout_opt_ LPDWORD pcbData)
LONG WINAPI advapi32.RegGetValueW(_In_ HKEY hkey,_In_opt_ LPCTSTR lpSubKey,_In_opt_ LPCTSTR lpValue,_In_opt_ DWORD dwFlags,_Out_opt_ LPDWORD pdwType,_Out_opt_ PVOID pvData,_Inout_opt_ LPDWORD pcbData)
LONG WINAPI advapi32.RegGetValueA(_In_ HKEY hkey,_In_opt_ LPCTSTR lpSubKey,_In_opt_ LPCTSTR lpValue,_In_opt_ DWORD dwFlags,_Out_opt_ LPDWORD pdwType,_Out_opt_ PVOID pvData,_Inout_opt_ LPDWORD pcbData)
uint32 None dhcpserverpsprovider.AddByHotStandby([in] string ComputerName,[in] string Name,[in] string PartnerServer,[in] string ScopeId[],[in] datetime MaxClientLeadTime,[in] boolean AutoStateTransition,[in] datetime StateSwitchInterval,[in] boolean Force,[in] string SharedSecret,[in] boolean PassThru,[in] uint32 ReservePercent,[in] string ServerRole,[out] DhcpServerv4Failover cmdletOutput)
HANDLE WINAPI kernel32.CreateFileMappingNuma(_In_ HANDLE hFile,_In_opt_ LPSECURITY_ATTRIBUTES lpFileMappingAttributes,_In_ DWORD flProtect,_In_ DWORD dwMaximumSizeHigh,_In_ DWORD dwMaximumSizeLow,_In_opt_ LPCTSTR lpName,_In_ DWORD nndPreferred)
HANDLE WINAPI kernel32.CreateFileMappingNumaW(_In_ HANDLE hFile,_In_opt_ LPSECURITY_ATTRIBUTES lpFileMappingAttributes,_In_ DWORD flProtect,_In_ DWORD dwMaximumSizeHigh,_In_ DWORD dwMaximumSizeLow,_In_opt_ LPCTSTR lpName,_In_ DWORD nndPreferred)
HANDLE WINAPI kernel32.CreateFileMappingNumaA(_In_ HANDLE hFile,_In_opt_ LPSECURITY_ATTRIBUTES lpFileMappingAttributes,_In_ DWORD flProtect,_In_ DWORD dwMaximumSizeHigh,_In_ DWORD dwMaximumSizeLow,_In_opt_ LPCTSTR lpName,_In_ DWORD nndPreferred)
DWORD WINAPI advapi32.GetEffectiveRightsFromAcl(_In_ PACL pacl,_In_ PTRUSTEE pTrustee,_Out_ PACCESS_MASK pAccessRights)
DWORD WINAPI advapi32.GetEffectiveRightsFromAclW(_In_ PACL pacl,_In_ PTRUSTEE pTrustee,_Out_ PACCESS_MASK pAccessRights)
DWORD WINAPI advapi32.GetEffectiveRightsFromAclA(_In_ PACL pacl,_In_ PTRUSTEE pTrustee,_Out_ PACCESS_MASK pAccessRights)
RIO_BUFFERID None mswsock.RIORegisterBuffer(_In_ PCHAR DataBuffer,_In_ DWORD DataLength)
BOOL WINAPI authz.AuthzInitializeObjectAccessAuditEvent2(_In_ DWORD Flags,_In_ AUTHZ_AUDIT_EVENT_TYPE_HANDLE hAuditEventType,_In_ PWSTR szOperationType,_In_ PWSTR szObjectType,_In_ PWSTR szObjectName,_In_ PWSTR szAdditionalInfo,_In_ PWSTR szAdditionalInfo2,_Out_ PAUTHZ_AUDIT_EVENT_HANDLE phAuditEvent,_In_ DWORD dwAdditionalParameterCount)
BOOL WINAPI kernel32.AddScopedPolicyIDAce(_Inout_ PACL pAcl,_In_ DWORD dwAceRevision,_In_ DWORD AceFlags,_In_ DWORD AccessMask,_In_ PSID pSid)
HANDLE WINAPI kernel32.CreateMemoryResourceNotification(_In_ MEMORY_RESOURCE_NOTIFICATION_TYPE NotificationType)
BOOL WINAPI kernel32.GetUmsCompletionListEvent(_In_ PUMS_COMPLETION_LIST UmsCompletionList,_Inout_ PHANDLE UmsCompletionEvent)
BOOL WINAPI kernel32.IsProcessInJob(_In_ HANDLE ProcessHandle,_In_opt_ HANDLE JobHandle,_Out_ PBOOL Result)
BOOL None advapi32.ConvertSidToStringSid(_In_ PSID Sid,_Out_ LPTSTR *StringSid)
BOOL None advapi32.ConvertSidToStringSidW(_In_ PSID Sid,_Out_ LPTSTR *StringSid)
BOOL None advapi32.ConvertSidToStringSidA(_In_ PSID Sid,_Out_ LPTSTR *StringSid)
HRESULT None azroles.OpenTask([in] BSTR bstrTaskName,[in None None,optional] VARIANT varReserved,[out] IAzTask **ppTask)
BOOL None sisbkup.SisFreeRestoreStructure(_In_ PVOID sisRestoreStructure)
HRESULT WINAPI dssec.DSCreateSecurityPage(_In_ LPCWSTR pwszObjectPath,_In_opt_ LPCWSTR pwszObjectClass,_In_ DWORD dwFlags,_Out_ HPROPSHEETPAGE *phPage,_In_opt_ PFNREADOBJECTSECURITY pfnReadSD,_In_opt_ PFNWRITEOBJECTSECURITY pfnWriteSD,_In_ LPARAM lpContext)
LONG WINAPI advapi32.RegOpenCurrentUser(_In_ REGSAM samDesired,_Out_ PHKEY phkResult)
int WSAAPI ws2_32.WSAHtonl(_In_ SOCKET s,_In_ u_long hostlong,_Out_ u_long *lpnetlong)
BOOL WINAPI advapi32.GetAclInformation(_In_ PACL pAcl,_Out_ LPVOID pAclInformation,_In_ DWORD nAclInformationLength,_In_ ACL_INFORMATION_CLASS dwAclInformationClass)
HRESULT None None.StringCbPrintf_l(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ ... None)
HRESULT None None.StringCbPrintf_lW(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ ... None)
HRESULT None None.StringCbPrintf_lA(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ ... None)
UINT WINAPI user32.GetDlgItemText(_In_ HWND hDlg,_In_ int nIDDlgItem,_Out_ LPTSTR lpString,_In_ int nMaxCount)
UINT WINAPI user32.GetDlgItemTextW(_In_ HWND hDlg,_In_ int nIDDlgItem,_Out_ LPTSTR lpString,_In_ int nMaxCount)
UINT WINAPI user32.GetDlgItemTextA(_In_ HWND hDlg,_In_ int nIDDlgItem,_Out_ LPTSTR lpString,_In_ int nMaxCount)
HRESULT None shell32.SHGetFolderPath(_In_ HWND hwndOwner,_In_ int nFolder,_In_ HANDLE hToken,_In_ DWORD dwFlags,_Out_ LPTSTR pszPath)
HRESULT None shell32.SHGetFolderPathW(_In_ HWND hwndOwner,_In_ int nFolder,_In_ HANDLE hToken,_In_ DWORD dwFlags,_Out_ LPTSTR pszPath)
HRESULT None shell32.SHGetFolderPathA(_In_ HWND hwndOwner,_In_ int nFolder,_In_ HANDLE hToken,_In_ DWORD dwFlags,_Out_ LPTSTR pszPath)
PCUIDLIST_RELATIVE None None.ILNext(_In_ PCUIDLIST_RELATIVE pidl)
BOOL WINAPI advapi32.IsValidSecurityDescriptor(_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor)
HRESULT None shell32.SHLoadOLE(_In_ LPARAM lParam)
BOOL WINAPI authz.AuthzInitializeResourceManager(_In_ DWORD flags,_In_opt_ PFN_AUTHZ_DYNAMIC_ACCESS_CHECK pfnAccessCheck,_In_opt_ PFN_AUTHZ_COMPUTE_DYNAMIC_GROUPS pfnComputeDynamicGroups,_In_opt_ PFN_AUTHZ_FREE_DYNAMIC_GROUPS pfnFreeDynamicGroups,_In_ PCWSTR szResourceManagerName,_Out_ PAUTHZ_RESOURCE_MANAGER_HANDLE phAuthzResourceManager)
HCURSOR None oleaut32.OleIconToCursor(_In_ HINSTANCE hinstExe,_In_ HICON hIcon)
BOOL WINAPI advapi32.SetPrivateObjectSecurity(_In_ SECURITY_INFORMATION SecurityInformation,_In_ PSECURITY_DESCRIPTOR ModificationDescriptor,_Inout_ PSECURITY_DESCRIPTOR *ObjectsSecurityDescriptor,_In_ PGENERIC_MAPPING GenericMapping,_In_opt_ HANDLE Token)
BOOL WINAPI kernel32.CreateTimerQueueTimer(_Out_ PHANDLE phNewTimer,_In_opt_ HANDLE TimerQueue,_In_ WAITORTIMERCALLBACK Callback,_In_opt_ PVOID Parameter,_In_ DWORD DueTime,_In_ DWORD Period,_In_ ULONG Flags)
DWORD WINAPI kernel32.GetProfileSection(_In_ LPCTSTR lpAppName,_Out_ LPTSTR lpReturnedString,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetProfileSectionW(_In_ LPCTSTR lpAppName,_Out_ LPTSTR lpReturnedString,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetProfileSectionA(_In_ LPCTSTR lpAppName,_Out_ LPTSTR lpReturnedString,_In_ DWORD nSize)
BOOL WINAPI user32.UserHandleGrantAccess(_In_ HANDLE hUserHandle,_In_ HANDLE hJob,_In_ BOOL bGrant)
FORCEINLINE HANDLE None.GetCurrentThreadToken(void None None)
FORCEINLINE HANDLE None.GetCurrentThreadEffectiveToken(void None None)
HANDLE WINAPI kernel32.CreateMutexEx(_In_opt_ LPSECURITY_ATTRIBUTES lpMutexAttributes,_In_opt_ LPCTSTR lpName,_In_ DWORD dwFlags,_In_ DWORD dwDesiredAccess)
HANDLE WINAPI kernel32.CreateMutexExW(_In_opt_ LPSECURITY_ATTRIBUTES lpMutexAttributes,_In_opt_ LPCTSTR lpName,_In_ DWORD dwFlags,_In_ DWORD dwDesiredAccess)
HANDLE WINAPI kernel32.CreateMutexExA(_In_opt_ LPSECURITY_ATTRIBUTES lpMutexAttributes,_In_opt_ LPCTSTR lpName,_In_ DWORD dwFlags,_In_ DWORD dwDesiredAccess)
BOOL WINAPI advapi32.ObjectCloseAuditAlarm(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ BOOL GenerateOnClose)
BOOL WINAPI advapi32.ObjectCloseAuditAlarmW(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ BOOL GenerateOnClose)
BOOL WINAPI advapi32.ObjectCloseAuditAlarmA(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ BOOL GenerateOnClose)
LPTSTR WINAPI kernel32.GetCommandLine(void None None)
LPTSTR WINAPI kernel32.GetCommandLineW(void None None)
LPTSTR WINAPI kernel32.GetCommandLineA(void None None)
HGLOBAL None ole32.OleGetIconOfFile(_In_ LPOLESTR lpszPath,_In_ BOOL fUseFileAsLabel)
HGLOBAL None ole32.OleGetIconOfClass(_In_ REFCLSID rclsid,_In_opt_ LPOLESTR lpszLabel,_In_ BOOL fUseTypeAsLabel)
BOOL WINAPI authz.AuthzUnregisterSecurityEventSource(_In_ DWORD dwFlags,_Inout_ PAUTHZ_SECURITY_EVENT_PROVIDER_HANDLE phEventProvider)
int None ws2_32.getsockopt(_In_ SOCKET s,_In_ int level,_In_ int optname,_Out_ char *optval,_Inout_ int *optlen)
HRESULT __stdcall None.DllCanUnloadNow(void None None)
HRESULT None ole32.CoInstall(_In_ IBindCtx *pbc,_In_ DWORD dwFlags,_In_ uCLSSPEC *pClassSpec,_In_ QUERYCONTEXT *pQuery,_In_ LPWSTR pszCodeBase)
DWORD WINAPI user32.CharLowerBuff(_Inout_ LPTSTR lpsz,_In_ DWORD cchLength)
DWORD WINAPI user32.CharLowerBuffW(_Inout_ LPTSTR lpsz,_In_ DWORD cchLength)
DWORD WINAPI user32.CharLowerBuffA(_Inout_ LPTSTR lpsz,_In_ DWORD cchLength)
BOOL WINAPI kernel32.VerifyVersionInfo(_In_ LPOSVERSIONINFOEX lpVersionInfo,_In_ DWORD dwTypeMask,_In_ DWORDLONG dwlConditionMask)
BOOL WINAPI kernel32.VerifyVersionInfoW(_In_ LPOSVERSIONINFOEX lpVersionInfo,_In_ DWORD dwTypeMask,_In_ DWORDLONG dwlConditionMask)
BOOL WINAPI kernel32.VerifyVersionInfoA(_In_ LPOSVERSIONINFOEX lpVersionInfo,_In_ DWORD dwTypeMask,_In_ DWORDLONG dwlConditionMask)
LONG WINAPI advapi32.RegEnumKey(_In_ HKEY hKey,_In_ DWORD dwIndex,_Out_ LPTSTR lpName,_In_ DWORD cchName)
LONG WINAPI advapi32.RegEnumKeyW(_In_ HKEY hKey,_In_ DWORD dwIndex,_Out_ LPTSTR lpName,_In_ DWORD cchName)
LONG WINAPI advapi32.RegEnumKeyA(_In_ HKEY hKey,_In_ DWORD dwIndex,_Out_ LPTSTR lpName,_In_ DWORD cchName)
BOOL None kernel32.GetAppContainerNamedObjectPath(_In_opt_ HANDLE Token,_In_opt_ PSID AppContainerSid,_In_ ULONG ObjectPathLength,_Out_opt_ LPWSTR ObjectPath,_Out_ PULONG ReturnLength)
SIZE_T WINAPI kernel32.HeapSize(_In_ HANDLE hHeap,_In_ DWORD dwFlags,_In_ LPCVOID lpMem)
VOID WINAPI advapi32.BuildExplicitAccessWithName(_Inout_ PEXPLICIT_ACCESS pExplicitAccess,_In_opt_ LPTSTR pTrusteeName,_In_ DWORD AccessPermissions,_In_ ACCESS_MODE AccessMode,_In_ DWORD Inheritance)
VOID WINAPI advapi32.BuildExplicitAccessWithNameW(_Inout_ PEXPLICIT_ACCESS pExplicitAccess,_In_opt_ LPTSTR pTrusteeName,_In_ DWORD AccessPermissions,_In_ ACCESS_MODE AccessMode,_In_ DWORD Inheritance)
VOID WINAPI advapi32.BuildExplicitAccessWithNameA(_Inout_ PEXPLICIT_ACCESS pExplicitAccess,_In_opt_ LPTSTR pTrusteeName,_In_ DWORD AccessPermissions,_In_ ACCESS_MODE AccessMode,_In_ DWORD Inheritance)
BOOL None ole32.IsEqualIID(_In_ REFGUID riid1,_In_ REFGUID riid2)
void WINAPI kernel32.GetSystemInfo(_Out_ LPSYSTEM_INFO lpSystemInfo)
HRESULT None ole32.CoRevokeClassObject(_In_ DWORD dwRegister)
VOID WINAPI kernel32.DeleteFiber(_In_ LPVOID lpFiber)
BOOL WINAPI kernel32.DeleteTimerQueue(_In_ HANDLE TimerQueue)
BOOL WINAPI advapi32.AdjustTokenGroups(_In_ HANDLE TokenHandle,_In_ BOOL ResetToDefault,_In_opt_ PTOKEN_GROUPS NewState,_In_ DWORD BufferLength,_Out_opt_ PTOKEN_GROUPS PreviousState,_Out_opt_ PDWORD ReturnLength)
BOOL CALLBACK None.AuthzFreeCentralAccessPolicyCallback(_In_ PVOID pCentralAccessPolicy)
HRESULT None azroles.get_UserDisplay([out] BSTR *pbstrProp)
BOOL WINAPI kernel32.WriteProfileString(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ LPCTSTR lpString)
BOOL WINAPI kernel32.WriteProfileStringW(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ LPCTSTR lpString)
BOOL WINAPI kernel32.WriteProfileStringA(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ LPCTSTR lpString)
BOOLEAN WINAPI advapi32.AuditEnumerateCategories(_Out_ GUID **ppAuditCategoriesArray,_Out_ PULONG pCountReturned)
UINT None msi.MsiGetProductInfoEx(_In_ LPCTSTR szProductCode,_In_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ LPCTSTR szProperty,_Out_opt_ LPTSTR lpValue,_Inout_opt_ LPDWORD pcchValue)
UINT None msi.MsiGetProductInfoExW(_In_ LPCTSTR szProductCode,_In_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ LPCTSTR szProperty,_Out_opt_ LPTSTR lpValue,_Inout_opt_ LPDWORD pcchValue)
UINT None msi.MsiGetProductInfoExA(_In_ LPCTSTR szProductCode,_In_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ LPCTSTR szProperty,_Out_opt_ LPTSTR lpValue,_Inout_opt_ LPDWORD pcchValue)
PSLIST_ENTRY FASTCALL kernel32.InterlockedPushListSList(_Inout_ PSLIST_HEADER ListHead,_Inout_ PSLIST_ENTRY List,_Inout_ PSLIST_ENTRY ListEnd,_In_ ULONG Count)
SIZE_T WINAPI kernel32.VirtualQueryEx(_In_ HANDLE hProcess,_In_opt_ LPCVOID lpAddress,_Out_ PMEMORY_BASIC_INFORMATION lpBuffer,_In_ SIZE_T dwLength)
BOOL WINAPI advapi32.AddConditionalAce(_Inout_ PACL pAcl,_In_ DWORD dwAceRevision,_In_ DWORD AceFlags,_In_ UCHAR AceType,_In_ DWORD AccessMask,_In_ PSID pSid,_In_ PWCHAR ConditionStr,_Out_ DWORD *ReturnLength)
HRESULT WINAPI shell32.SHGetFolderPathEx(_In_ REFKNOWNFOLDERID rfid,_In_ DWORD dwFlags,_In_opt_ HANDLE hToken,_Out_ LPWSTR pszPath,_In_ UINT cchPath)
BOOL WINAPI kernel32.EnumResourceLanguagesEx(_In_ HMODULE hModule,_In_ LPCTSTR lpType,_In_ LPCTSTR lpName,_In_ ENUMRESLANGPROC lpEnumFunc,_In_ LONG_PTR lParam,_In_ DWORD dwFlags,_In_ LANGID LangId)
BOOL WINAPI kernel32.EnumResourceLanguagesExW(_In_ HMODULE hModule,_In_ LPCTSTR lpType,_In_ LPCTSTR lpName,_In_ ENUMRESLANGPROC lpEnumFunc,_In_ LONG_PTR lParam,_In_ DWORD dwFlags,_In_ LANGID LangId)
BOOL WINAPI kernel32.EnumResourceLanguagesExA(_In_ HMODULE hModule,_In_ LPCTSTR lpType,_In_ LPCTSTR lpName,_In_ ENUMRESLANGPROC lpEnumFunc,_In_ LONG_PTR lParam,_In_ DWORD dwFlags,_In_ LANGID LangId)
DWORD WINAPI kernel32.DiscardVirtualMemory(_In_ PVOID VirtualAddress,_In_ SIZE_T Size)
HRESULT None shell32.SHBindToObject(IShellFolder *psf None,PCUIDLIST_RELATIVE pidl None,_In_ IBindCtx *pbc,REFIID riid None,_Out_ void **ppv)
HINSTANCE None shell32.WOWShellExecute(_In_ HWND hwnd,_In_ LPCTSTR lpOperation,_In_ LPCTSTR lpFile,_In_ LPCTSTR lpParameters,_In_ LPCTSTR lpDirectory,_In_ INT nShowCmd,void *lpfnCBWinExec None)
VOID CALLBACK None.TimerCallback(_Inout_ PTP_CALLBACK_INSTANCE Instance,_Inout_opt_ PVOID Context,_Inout_ PTP_TIMER Timer)
HANDLE WINAPI user32.CopyImage(_In_ HANDLE hImage,_In_ UINT uType,_In_ int cxDesired,_In_ int cyDesired,_In_ UINT fuFlags)
HRESULT None shell32.SHEmptyRecycleBin(_In_opt_ HWND hwnd,_In_opt_ LPCTSTR pszRootPath,DWORD dwFlags None)
HRESULT None shell32.SHEmptyRecycleBinW(_In_opt_ HWND hwnd,_In_opt_ LPCTSTR pszRootPath,DWORD dwFlags None)
HRESULT None shell32.SHEmptyRecycleBinA(_In_opt_ HWND hwnd,_In_opt_ LPCTSTR pszRootPath,DWORD dwFlags None)
HGLOBAL WINAPI kernel32.GlobalFree(_In_ HGLOBAL hMem)
BOOL None kernel32.GetNumaNodeNumberFromHandle(_In_ HANDLE hFile,_Out_ PUSHORT NodeNumber)
HICON None shell32.ExtractAssociatedIcon(_Reserved_ HINSTANCE hInst,_Inout_ LPTSTR lpIconPath,_Inout_ LPWORD lpiIcon)
HICON None shell32.ExtractAssociatedIconW(_Reserved_ HINSTANCE hInst,_Inout_ LPTSTR lpIconPath,_Inout_ LPWORD lpiIcon)
HICON None shell32.ExtractAssociatedIconA(_Reserved_ HINSTANCE hInst,_Inout_ LPTSTR lpIconPath,_Inout_ LPWORD lpiIcon)
void WINAPI kernel32.GetSystemTimeAsFileTime(_Out_ LPFILETIME lpSystemTimeAsFileTime)
UINT None msi.MsiSourceListAddSource(_In_ LPCTSTR szProduct,_In_ LPCTSTR szUserName,_In_ DWORD dwReserved,_In_ LPCTSTR szSource)
UINT None msi.MsiSourceListAddSourceW(_In_ LPCTSTR szProduct,_In_ LPCTSTR szUserName,_In_ DWORD dwReserved,_In_ LPCTSTR szSource)
UINT None msi.MsiSourceListAddSourceA(_In_ LPCTSTR szProduct,_In_ LPCTSTR szUserName,_In_ DWORD dwReserved,_In_ LPCTSTR szSource)
BOOL WINAPI authz.AuthzInitializeRemoteResourceManager(_In_ PAUTHZ_RPC_INIT_INFO_CLIENT pRpcInitInfo,_Out_ PAUTHZ_RESOURCE_MANAGER_HANDLE phAuthzResourceManager)
BOOL WINAPI kernel32.FindNextVolume(_In_ HANDLE hFindVolume,_Out_ LPTSTR lpszVolumeName,_In_ DWORD cchBufferLength)
BOOL WINAPI kernel32.FindNextVolumeW(_In_ HANDLE hFindVolume,_Out_ LPTSTR lpszVolumeName,_In_ DWORD cchBufferLength)
BOOL WINAPI kernel32.FindNextVolumeA(_In_ HANDLE hFindVolume,_Out_ LPTSTR lpszVolumeName,_In_ DWORD cchBufferLength)
BOOL WINAPI kernel.GetDisplayAutoRotationPreferences(_Out_ ORIENTATION_PREFERENCE *pOrientation)
LONG WINAPI advapi32.RegSetValue(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_ DWORD dwType,_In_ LPCTSTR lpData,_In_ DWORD cbData)
LONG WINAPI advapi32.RegSetValueW(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_ DWORD dwType,_In_ LPCTSTR lpData,_In_ DWORD cbData)
LONG WINAPI advapi32.RegSetValueA(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_ DWORD dwType,_In_ LPCTSTR lpData,_In_ DWORD cbData)
LPVOID WINAPI kernel32.MapViewOfFile(_In_ HANDLE hFileMappingObject,_In_ DWORD dwDesiredAccess,_In_ DWORD dwFileOffsetHigh,_In_ DWORD dwFileOffsetLow,_In_ SIZE_T dwNumberOfBytesToMap)
BOOL WINAPI advapi32.AddAuditAccessAceEx(_Inout_ PACL pAcl,_In_ DWORD dwAceRevision,_In_ DWORD AceFlags,_In_ DWORD dwAccessMask,_In_ PSID pSid,_In_ BOOL bAuditSuccess,_In_ BOOL bAuditFailure)
void None shell32.SHFree(_In_ void *pv)
BOOL WINAPI advapi32.AddAce(_Inout_ PACL pAcl,_In_ DWORD dwAceRevision,_In_ DWORD dwStartingAceIndex,_In_ LPVOID pAceList,_In_ DWORD nAceListLength)
VOID WINAPI kernel32.StartThreadpoolIo(_Inout_ PTP_IO pio)
HRESULT None ole32.CoCreateInstanceEx(_In_ REFCLSID rclsid,_In_ IUnknown *punkOuter,_In_ DWORD dwClsCtx,_In_ COSERVERINFO *pServerInfo,_In_ DWORD dwCount,_Inout_ MULTI_QI *pResults)
DWORD WINAPI kernel32.GetProcessVersion(_In_ DWORD ProcessId)
HRESULT None azroles.AddOperation([in] BSTR bstrProp,[in None None,optional] VARIANT varReserved)
float __inline None.ntohf(unsigned __int32 value)
void None None.FreeIDListArrayChild(_In_ PITEMID_CHILD *ppidls,UINT cItems None)
HRESULT __stdcall None.DllRegisterServer(void None None)
BOOL WINAPI user32.SetProcessWindowStation(_In_ HWINSTA hWinSta)
BOOLEAN WINAPI advapi32.AuditQuerySecurity(_In_ SECURITY_INFORMATION SecurityInformation,_Out_ PSECURITY_DESCRIPTOR *ppSecurityDescriptor)
LPVOID WINAPI kernel32.VirtualAllocExNuma(_In_ HANDLE hProcess,_In_opt_ LPVOID lpAddress,_In_ SIZE_T dwSize,_In_ DWORD flAllocationType,_In_ DWORD flProtect,_In_ DWORD nndPreferred)
WINAPI None kernelbase.SetProcessValidCallTargets(_In_ HANDLE hProcess,_In_ PVOID VirtualAddress,_In_ SIZE_T RegionSize,_In_ ULONG NumberOfOffsets,_Inout_ PCFG_CALL_TARGET_INFO OffsetInformation)
BOOL WINAPI authz.AuthzModifyClaims(_In_ AUTHZ_CLIENT_CONTEXT_HANDLE hAuthzClientContext,_In_ AUTHZ_CONTEXT_INFORMATION_CLASS ClaimClass,_In_ PAUTHZ_SECURITY_ATTRIBUTE_OPERATION pClaimOperations,_In_opt_ PAUTHZ_SECURITY_ATTRIBUTES_INFORMATION pClaims)
DWORD None shell32.SHRestricted(RESTRICTIONS rest None)
BOOLEAN WINAPI advapi32.AuditSetGlobalSacl(_In_ PCWSTR ObjectTypeName,_In_opt_ PACL Acl)
BOOLEAN WINAPI advapi32.AuditSetGlobalSaclW(_In_ PCWSTR ObjectTypeName,_In_opt_ PACL Acl)
BOOLEAN WINAPI advapi32.AuditSetGlobalSaclA(_In_ PCWSTR ObjectTypeName,_In_opt_ PACL Acl)
HRESULT None azroles.AddAppMember([in] BSTR bstrProp,[in None None,optional] VARIANT varReserved)
BOOL WINAPI authz.AuthzRegisterSecurityEventSource(_In_ DWORD dwFlags,_In_ PCWSTR szEventSourceName,_Out_ PAUTHZ_SECURITY_EVENT_PROVIDER_HANDLE phEventProvider)
DWORD WINAPI kernel32.GetCurrentProcessorNumber(void None None)
UINT None msi.MsiVerifyPackage(_In_ LPCTSTR szPackagePath)
UINT None msi.MsiVerifyPackageW(_In_ LPCTSTR szPackagePath)
UINT None msi.MsiVerifyPackageA(_In_ LPCTSTR szPackagePath)
DWORD WINAPI advapi32.LookupSecurityDescriptorParts(_Out_opt_ PTRUSTEE *pOwner,_Out_opt_ PTRUSTEE *pGroup,_Out_opt_ PULONG cCountOfAccessEntries,_Out_opt_ PEXPLICIT_ACCESS *pListOfAccessEntries,_Out_opt_ PULONG cCountOfAuditEntries,_Out_opt_ PEXPLICIT_ACCESS *pListOfAuditEntries,_In_ PSECURITY_DESCRIPTOR pSD)
DWORD WINAPI advapi32.LookupSecurityDescriptorPartsW(_Out_opt_ PTRUSTEE *pOwner,_Out_opt_ PTRUSTEE *pGroup,_Out_opt_ PULONG cCountOfAccessEntries,_Out_opt_ PEXPLICIT_ACCESS *pListOfAccessEntries,_Out_opt_ PULONG cCountOfAuditEntries,_Out_opt_ PEXPLICIT_ACCESS *pListOfAuditEntries,_In_ PSECURITY_DESCRIPTOR pSD)
DWORD WINAPI advapi32.LookupSecurityDescriptorPartsA(_Out_opt_ PTRUSTEE *pOwner,_Out_opt_ PTRUSTEE *pGroup,_Out_opt_ PULONG cCountOfAccessEntries,_Out_opt_ PEXPLICIT_ACCESS *pListOfAccessEntries,_Out_opt_ PULONG cCountOfAuditEntries,_Out_opt_ PEXPLICIT_ACCESS *pListOfAuditEntries,_In_ PSECURITY_DESCRIPTOR pSD)
HRESULT None ole32.CoRevokeInitializeSpy(_In_ ULARGE_INTEGER uliCookie)
HRESULT WINOLEAPI combase.CoCreateInstanceFromApp(_In_ REFCLSID rclsid,_In_opt_ IUnknown *punkOuter,_In_ DWORD dwClsCtx,_In_opt_ void *reserved,_In_ DWORD dwCount,_Inout_ MULTI_QI *pResults)
BOOL None mswsock.RIOReceive(_In_ RIO_RQ SocketQueue,_In_ PRIO_BUF pData,_In_ ULONG DataBufferCount,_In_ DWORD Flags,_In_ PVOID RequestContext)
HRESULT None None.StringCchPrintfEx(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags,_In_ LPCTSTR pszFormat,_In_ ... None)
HRESULT None None.StringCchPrintfExW(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags,_In_ LPCTSTR pszFormat,_In_ ... None)
HRESULT None None.StringCchPrintfExA(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags,_In_ LPCTSTR pszFormat,_In_ ... None)
uint32 None dhcpserverpsprovider.AddByHotStandby([in] string ComputerName,[in] string Name,[in] string PartnerServer,[in] string ScopeId[],[in] datetime MaxClientLeadTime,[in] boolean AutoStateTransition,[in] datetime StateSwitchInterval,[in] boolean Force,[in] string SharedSecret,[in] boolean PassThru,[in] uint32 ReservePercent,[in] string ServerRole,[out] DhcpServerv4Failover cmdletOutput)
DWORD CALLBACK None.ShutdownEmbeddedUI(void None None)
BOOL WINAPI authz.AuthzOpenObjectAudit(_In_ DWORD Flags,_In_ AUTHZ_CLIENT_CONTEXT_HANDLE hAuthzClientContext,_In_ PAUTHZ_ACCESS_REQUEST pRequest,_In_ AUTHZ_AUDIT_EVENT_HANDLE hAuditEvent,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_ PSECURITY_DESCRIPTOR *SecurityDescriptorArray,_In_ DWORD SecurityDescriptorCount,_In_ PAUTHZ_ACCESS_REPLY pReply)
void None shlwapi.OutputDebugStringWrapW(_In_ LPCWSTR lpOutputString)
BOOL WINAPI kernel32.RegisterWaitForSingleObject(_Out_ PHANDLE phNewWaitObject,_In_ HANDLE hObject,_In_ WAITORTIMERCALLBACK Callback,_In_opt_ PVOID Context,_In_ ULONG dwMilliseconds,_In_ ULONG dwFlags)
BOOL WINAPI advapi32.GetWindowsAccountDomainSid(_In_ PSID pSid,_Out_opt_ PSID ppDomainSid,_Inout_ DWORD *cbSid)
HRESULT None ole32.CLSIDFromString(_In_ LPCOLESTR lpsz,_Out_ LPCLSID pclsid)
BOOL WINAPI kernel32.QueryThreadCycleTime(_In_ HANDLE ThreadHandle,_Out_ PULONG64 CycleTime)
UINT WINAPI msi.MsiJoinTransaction(_In_ MSIHANDLE hTransactionID,_In_ DWORD dwTransactionAttributes,_Out_ HANDLE *phChangeOfOwnerEvent)
BOOL None cabinet.CreateDecompressor(_In_ DWORD Algorithm,_In_opt_ PCOMPRESS_ALLOCATION_ROUTINES AllocationRoutines,_Out_ PDECOMPRESSOR_HANDLE DecompressorHandle)
int None ws2_32.WSAEnumNetworkEvents(_In_ SOCKET s,_In_ WSAEVENT hEventObject,_Out_ LPWSANETWORKEVENTS lpNetworkEvents)
DWORD WINAPI kernel32.GetProcessHeaps(_In_ DWORD NumberOfHeaps,_Out_ PHANDLE ProcessHeaps)
BOOL None sisbkup.SisCSFilesToBackupForLink(_In_ PVOID sisBackupStructure,_In_ PVOID reparseData,_In_ ULONG reparseDataSize,_Out_ PVOID thisFileContext,_Out_ PVOID *matchingFileContext,_Out_ PULONG countOfCommonStoreFilesToBackUp,_Out_ PWCHAR **commonStoreFilesToBackUp)
BOOL WINAPI advapi32.EqualSid(_In_ PSID pSid1,_In_ PSID pSid2)
typedef None None.void(CALLBACK *PFNASYNCICONTASKBALLBACK None)
UINT None msi.MsiProvideAssembly(_In_ LPCTSTR szAssemblyName,_In_ LPCTSTR szAppContext,_In_ DWORD dwInstallMode,_In_ DWORD dwAssemblyInfo,_Out_ LPTSTR lpPathBuf,_Inout_ DWORD *pcchPathBuf)
UINT None msi.MsiProvideAssemblyW(_In_ LPCTSTR szAssemblyName,_In_ LPCTSTR szAppContext,_In_ DWORD dwInstallMode,_In_ DWORD dwAssemblyInfo,_Out_ LPTSTR lpPathBuf,_Inout_ DWORD *pcchPathBuf)
UINT None msi.MsiProvideAssemblyA(_In_ LPCTSTR szAssemblyName,_In_ LPCTSTR szAppContext,_In_ DWORD dwInstallMode,_In_ DWORD dwAssemblyInfo,_Out_ LPTSTR lpPathBuf,_Inout_ DWORD *pcchPathBuf)
BOOL WINAPI user32.IsWow64Message(void None None)
LONG WINAPI advapi32.RegLoadKey(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_ LPCTSTR lpFile)
LONG WINAPI advapi32.RegLoadKeyW(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_ LPCTSTR lpFile)
LONG WINAPI advapi32.RegLoadKeyA(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_ LPCTSTR lpFile)
BOOL WINAPI kernel32.VirtualFree(_In_ LPVOID lpAddress,_In_ SIZE_T dwSize,_In_ DWORD dwFreeType)
DWORD WINAPI kernel32.GetDynamicTimeZoneInformation(_Out_ PDYNAMIC_TIME_ZONE_INFORMATION pTimeZoneInformation)
HRESULT None ole32.CoMarshalHresult(_In_ LPSTREAM pstm,_In_ HRESULT hresult)
BOOL WINAPI kernel32.GetProcessWorkingSetSize(_In_ HANDLE hProcess,_Out_ PSIZE_T lpMinimumWorkingSetSize,_Out_ PSIZE_T lpMaximumWorkingSetSize)
PWSTR None shell32.StrStrNIW(_In_ PWSTR pszFirst,_In_ PCWSTR pszSrch,UINT cchMax None)
INSTALLSTATE None msi.MsiGetComponentPathEx(_In_ LPCTSTR szProductCode,_In_ LPCTSTR szComponentCode,_In_opt_ LPCTSTR szUserSid,_In_opt_ MSIINSTALLCONTEXT dwContext,_Out_opt_ LPTSTR szPathBuf,_Inout_opt_ LPDWORD pcchBuf)
INSTALLSTATE None msi.MsiGetComponentPathExW(_In_ LPCTSTR szProductCode,_In_ LPCTSTR szComponentCode,_In_opt_ LPCTSTR szUserSid,_In_opt_ MSIINSTALLCONTEXT dwContext,_Out_opt_ LPTSTR szPathBuf,_Inout_opt_ LPDWORD pcchBuf)
INSTALLSTATE None msi.MsiGetComponentPathExA(_In_ LPCTSTR szProductCode,_In_ LPCTSTR szComponentCode,_In_opt_ LPCTSTR szUserSid,_In_opt_ MSIINSTALLCONTEXT dwContext,_Out_opt_ LPTSTR szPathBuf,_Inout_opt_ LPDWORD pcchBuf)
HANDLE WINAPI kernel32.CreateThread(_In_opt_ LPSECURITY_ATTRIBUTES lpThreadAttributes,_In_ SIZE_T dwStackSize,_In_ LPTHREAD_START_ROUTINE lpStartAddress,_In_opt_ LPVOID lpParameter,_In_ DWORD dwCreationFlags,_Out_opt_ LPDWORD lpThreadId)
VOID WINAPI advapi32.MapGenericMask(_Inout_ PDWORD AccessMask,_In_ PGENERIC_MAPPING GenericMapping)
BOOL WINAPI kernel32.DeleteUmsCompletionList(_In_ PUMS_COMPLETION_LIST UmsCompletionList)
double __inline None.ntohd(unsigned __int64 value)
DWORD WINAPI advapi32.SetSecurityInfo(_In_ HANDLE handle,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_In_opt_ PSID psidOwner,_In_opt_ PSID psidGroup,_In_opt_ PACL pDacl,_In_opt_ PACL pSacl)
WORD None kernel32.GetActiveProcessorGroupCount(void None None)
UINT None msi.MsiRemovePatches(_In_ LPCTSTR szPatchList,_In_ LPCTSTR szProductCode,_In_ INSTALLTYPE eUninstallType,_In_opt_ LPCTSTR szPropertyList)
UINT None msi.MsiRemovePatchesW(_In_ LPCTSTR szPatchList,_In_ LPCTSTR szProductCode,_In_ INSTALLTYPE eUninstallType,_In_opt_ LPCTSTR szPropertyList)
UINT None msi.MsiRemovePatchesA(_In_ LPCTSTR szPatchList,_In_ LPCTSTR szProductCode,_In_ INSTALLTYPE eUninstallType,_In_opt_ LPCTSTR szPropertyList)
BOOL WINAPI kernel32.GetPerformanceInfo(_Out_ PPERFORMANCE_INFORMATION pPerformanceInformation,_In_ DWORD cb)
LONG WINAPI advapi32.RegOpenKeyTransacted(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_ DWORD ulOptions,_In_ REGSAM samDesired,_Out_ PHKEY phkResult,_In_ HANDLE hTransaction,_Reserved_ PVOID pExtendedParameter)
LONG WINAPI advapi32.RegOpenKeyTransactedW(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_ DWORD ulOptions,_In_ REGSAM samDesired,_Out_ PHKEY phkResult,_In_ HANDLE hTransaction,_Reserved_ PVOID pExtendedParameter)
LONG WINAPI advapi32.RegOpenKeyTransactedA(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_ DWORD ulOptions,_In_ REGSAM samDesired,_Out_ PHKEY phkResult,_In_ HANDLE hTransaction,_Reserved_ PVOID pExtendedParameter)
UINT None msi.MsiGetPatchInfo(_In_ LPCTSTR szPatch,_In_ LPCTSTR szAttribute,_Out_ LPTSTR lpValueBuf,_Inout_ DWORD *pcchValueBuf)
UINT None msi.MsiGetPatchInfoW(_In_ LPCTSTR szPatch,_In_ LPCTSTR szAttribute,_Out_ LPTSTR lpValueBuf,_Inout_ DWORD *pcchValueBuf)
UINT None msi.MsiGetPatchInfoA(_In_ LPCTSTR szPatch,_In_ LPCTSTR szAttribute,_Out_ LPTSTR lpValueBuf,_Inout_ DWORD *pcchValueBuf)
DWORD WINAPI advapi32.GetExplicitEntriesFromAcl(_In_ PACL pacl,_Out_ PULONG pcCountOfExplicitEntries,_Out_ PEXPLICIT_ACCESS *pListOfExplicitEntries)
DWORD WINAPI advapi32.GetExplicitEntriesFromAclW(_In_ PACL pacl,_Out_ PULONG pcCountOfExplicitEntries,_Out_ PEXPLICIT_ACCESS *pListOfExplicitEntries)
DWORD WINAPI advapi32.GetExplicitEntriesFromAclA(_In_ PACL pacl,_Out_ PULONG pcCountOfExplicitEntries,_Out_ PEXPLICIT_ACCESS *pListOfExplicitEntries)
HRESULT WINAPI ole32.CoGetApartmentType(_Out_ APTTYPE *pAptType,_Out_ APTTYPEQUALIFIER *pAptQualifier)
int None ws2_32.WSACleanup(void None None)
BOOL WINAPI advapi32.OpenThreadToken(_In_ HANDLE ThreadHandle,_In_ DWORD DesiredAccess,_In_ BOOL OpenAsSelf,_Out_ PHANDLE TokenHandle)
HRESULT None ole32.CoReleaseMarshalData(_In_ LPSTREAM pStm)
BOOLEAN WINAPI secur32.GetUserNameEx(_In_ EXTENDED_NAME_FORMAT NameFormat,_Out_ LPTSTR lpNameBuffer,_Inout_ PULONG lpnSize)
BOOLEAN WINAPI secur32.GetUserNameExW(_In_ EXTENDED_NAME_FORMAT NameFormat,_Out_ LPTSTR lpNameBuffer,_Inout_ PULONG lpnSize)
BOOLEAN WINAPI secur32.GetUserNameExA(_In_ EXTENDED_NAME_FORMAT NameFormat,_Out_ LPTSTR lpNameBuffer,_Inout_ PULONG lpnSize)
BOOL None mswsock.RIOReceiveEx(_In_ RIO_RQ SocketQueue,_In_ PRIO_BUF pData,_In_ ULONG DataBufferCount,_In_ PRIO_BUF pLocalAddress,_In_ PRIO_BUF pRemoteAddress,_In_ PRIO_BUF pControlContext,_In_ PRIO_BUF pFlags,_In_ DWORD Flags,_In_ PVOID RequestContext)
BOOL WINAPI kernel32.MapUserPhysicalPages(_In_ PVOID lpAddress,_In_ ULONG_PTR NumberOfPages,_In_ PULONG_PTR UserPfnArray)
int None ws2_32.WSASendDisconnect(_In_ SOCKET s,_In_ LPWSABUF lpOutboundDisconnectData)
HRESULT None ole32.CreateItemMoniker(_In_ LPCOLESTR lpszDelim,_In_ LPCOLESTR lpszItem,_Out_ LPMONIKER *ppmk)
HRESULT None shell32.SHCreateDefaultPropertiesOp(_In_ IShellItem *psi,_Out_ IFileOperation **ppFileOp)
UINT None msi.MsiCloseHandle(_In_ MSIHANDLE hAny)
BOOL WINAPI kernel32.GetVersionEx(_Inout_ LPOSVERSIONINFO lpVersionInfo)
BOOL WINAPI kernel32.GetVersionExW(_Inout_ LPOSVERSIONINFO lpVersionInfo)
BOOL WINAPI kernel32.GetVersionExA(_Inout_ LPOSVERSIONINFO lpVersionInfo)
DWORD WINAPI kernel32.GetProcessId(_In_ HANDLE Process)
HRESULT None ole32.CreateBindCtx(_In_ DWORD reserved,_Out_ LPBC *ppbc)
HRESULT WINAPI dssec.DSEditSecurity(_In_ HWND hwndOwner,_In_ LPCWSTR pwszObjectPath,_In_opt_ LPCWSTR pwszObjectClass,_In_ DWORD dwFlags,_In_opt_ LPCWSTR *pwszCaption,_In_opt_ PFNREADOBJECTSECURITY pfnReadSD,_In_opt_ PFNWRITEOBJECTSECURITY pfnWriteSD,_In_ LPARAM lpContext)
DWORD WINAPI kernel32.SetThreadIdealProcessor(_In_ HANDLE hThread,_In_ DWORD dwIdealProcessor)
BOOL None ws2_32.WSAGetQOSByName(_In_ SOCKET s,_Inout_ LPWSABUF lpQOSName,_Out_ LPQOS lpQOS)
BOOL WINAPI advapi32.AddAuditAccessObjectAce(_Inout_ PACL pAcl,_In_ DWORD dwAceRevision,_In_ DWORD AceFlags,_In_ DWORD AccessMask,_In_opt_ GUID *ObjectTypeGuid,_In_opt_ GUID *InheritedObjectTypeGuid,_In_ PSID pSid,_In_ BOOL bAuditSuccess,_In_ BOOL bAuditFailure)
HRESULT None ole32.CreatePointerMoniker(_In_opt_ LPUNKNOWN punk,_Out_ LPMONIKER *ppmk)
DWORD WINAPI advapi32.GetSidLengthRequired(_In_ UCHAR nSubAuthorityCount)
BOOL WINAPI advapi32.GetSecurityDescriptorControl(_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_Out_ PSECURITY_DESCRIPTOR_CONTROL pControl,_Out_ LPDWORD lpdwRevision)
HANDLE WINAPI kernel32.CreateBoundaryDescriptor(_In_ LPCTSTR Name,_In_ ULONG Flags)
HANDLE WINAPI kernel32.CreateBoundaryDescriptorW(_In_ LPCTSTR Name,_In_ ULONG Flags)
HANDLE WINAPI kernel32.CreateBoundaryDescriptorA(_In_ LPCTSTR Name,_In_ ULONG Flags)
INT None ws2_32.WSASetService(_In_ LPWSAQUERYSET lpqsRegInfo,_In_ WSAESETSERVICEOP essOperation,_In_ DWORD dwControlFlags)
INT None ws2_32.WSASetServiceW(_In_ LPWSAQUERYSET lpqsRegInfo,_In_ WSAESETSERVICEOP essOperation,_In_ DWORD dwControlFlags)
INT None ws2_32.WSASetServiceA(_In_ LPWSAQUERYSET lpqsRegInfo,_In_ WSAESETSERVICEOP essOperation,_In_ DWORD dwControlFlags)
BOOL WINAPI authz.AuthzGetInformationFromContext(_In_ AUTHZ_CLIENT_CONTEXT_HANDLE hAuthzClientContext,_In_ AUTHZ_CONTEXT_INFORMATION_CLASS InfoClass,_In_ DWORD BufferSize,_Out_ PDWORD pSizeRequired,_Out_ PVOID Buffer)
BOOL None mswsock.RIOSendEx(_In_ RIO_RQ SocketQueue,_In_ PRIO_BUF pData,_In_ ULONG DataBufferCount,_In_ PRIO_BUF pLocalAddress,_In_ PRIO_BUF pRemoteAddress,_In_ PRIO_BUF pControlContext,_In_ PRIO_BUF pFlags,_In_ DWORD Flags,_In_ PVOID RequestContext)
HRESULT None ole32.ProgIDFromCLSID(_In_ REFCLSID clsid,_Out_ LPOLESTR *lplpszProgID)
DWORD WINAPI advapi32.SetNamedSecurityInfo(_In_ LPTSTR pObjectName,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_In_opt_ PSID psidOwner,_In_opt_ PSID psidGroup,_In_opt_ PACL pDacl,_In_opt_ PACL pSacl)
DWORD WINAPI advapi32.SetNamedSecurityInfoW(_In_ LPTSTR pObjectName,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_In_opt_ PSID psidOwner,_In_opt_ PSID psidGroup,_In_opt_ PACL pDacl,_In_opt_ PACL pSacl)
DWORD WINAPI advapi32.SetNamedSecurityInfoA(_In_ LPTSTR pObjectName,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_In_opt_ PSID psidOwner,_In_opt_ PSID psidGroup,_In_opt_ PACL pDacl,_In_opt_ PACL pSacl)
BOOL WINAPI authz.AuthzCachedAccessCheck(_In_ DWORD Flags,_In_ AUTHZ_ACCESS_CHECK_RESULTS_HANDLE AuthzHandle,_In_ PAUTHZ_ACCESS_REQUEST pRequest,_In_ AUTHZ_AUDIT_EVENT_HANDLE AuditInfo,_Out_ PAUTHZ_ACCESS_REPLY pReply)
int WINAPI user32.GetSystemMetrics(_In_ int nIndex)
BOOL WINAPI advapi32.DuplicateToken(_In_ HANDLE ExistingTokenHandle,_In_ SECURITY_IMPERSONATION_LEVEL ImpersonationLevel,_Out_ PHANDLE DuplicateTokenHandle)
BOOL WINAPI kernel.GetDisplayAutoRotationPreferencesByProcessId(_In_ DWORD *dwProcessId,_Out_ ORIENTATION_PREFERENCE *pOrientation,_Out_ BOOL *fRotateScreen)
INSTALLSTATE None msi.MsiUseFeatureEx(_In_ LPCTSTR szProduct,_In_ LPCTSTR szFeature,_In_ DWORD dwInstallMode,_In_ DWORD dwReserved)
INSTALLSTATE None msi.MsiUseFeatureExW(_In_ LPCTSTR szProduct,_In_ LPCTSTR szFeature,_In_ DWORD dwInstallMode,_In_ DWORD dwReserved)
INSTALLSTATE None msi.MsiUseFeatureExA(_In_ LPCTSTR szProduct,_In_ LPCTSTR szFeature,_In_ DWORD dwInstallMode,_In_ DWORD dwReserved)
HRESULT None ole32.CoDisableCallCancellation(_In_opt_ LPVOID pReserved)
BOOL WINAPI kernel32.GetThreadSelectedCpuSets(_In_ HANDLE Thread,_Out_opt_ PULONG CpuSetIds,_In_ ULONG CpuSetIdCount,_Out_ PULONG RequiredIdCount)
BOOL WINAPI authz.AuthzFreeContext(_In_ AUTHZ_CLIENT_CONTEXT_HANDLE AuthzClientContext)
INT None ws2_32.WSALookupServiceNext(_In_ HANDLE hLookup,_In_ DWORD dwControlFlags,_Inout_ LPDWORD lpdwBufferLength,_Out_ LPWSAQUERYSET lpqsResults)
INT None ws2_32.WSALookupServiceNextW(_In_ HANDLE hLookup,_In_ DWORD dwControlFlags,_Inout_ LPDWORD lpdwBufferLength,_Out_ LPWSAQUERYSET lpqsResults)
INT None ws2_32.WSALookupServiceNextA(_In_ HANDLE hLookup,_In_ DWORD dwControlFlags,_Inout_ LPDWORD lpdwBufferLength,_Out_ LPWSAQUERYSET lpqsResults)
BOOL WINAPI advapi32.AddAuditAccessAce(_Inout_ PACL pAcl,_In_ DWORD dwAceRevision,_In_ DWORD dwAccessMask,_In_ PSID pSid,_In_ BOOL bAuditSuccess,_In_ BOOL bAuditFailure)
HRESULT None ole32.CoWaitForMultipleHandles(_In_ DWORD dwFlags,_In_ DWORD dwTimeout,_In_ ULONG cHandles,_In_ LPHANDLE pHandles,_Out_ LPDWORD lpdwindex)
HRESULT None ole32.MonikerRelativePathTo(_In_ LPMONIKER pmkSrc,_In_ LPMONIKER pmkDest,_Out_ LPMONIKER *ppmkRelPath,_In_ BOOL dwReserved)
INT None ws2_32.WSARemoveServiceClass(_In_ LPGUID lpServiceClassId)
INT None mswsock.SetService(_In_ DWORD dwNameSpace,_In_ DWORD dwOperation,_In_ DWORD dwFlags,_In_ LPSERVICE_INFO lpServiceInfo,_In_opt_ LPSERVICE_ASYNC_INFO lpServiceAsyncInfo,_Out_ LPDWORD lpdwStatusFlags)
INT None mswsock.SetServiceW(_In_ DWORD dwNameSpace,_In_ DWORD dwOperation,_In_ DWORD dwFlags,_In_ LPSERVICE_INFO lpServiceInfo,_In_opt_ LPSERVICE_ASYNC_INFO lpServiceAsyncInfo,_Out_ LPDWORD lpdwStatusFlags)
INT None mswsock.SetServiceA(_In_ DWORD dwNameSpace,_In_ DWORD dwOperation,_In_ DWORD dwFlags,_In_ LPSERVICE_INFO lpServiceInfo,_In_opt_ LPSERVICE_ASYNC_INFO lpServiceAsyncInfo,_Out_ LPDWORD lpdwStatusFlags)
void WINAPI kernel32.GlobalMemoryStatus(_Out_ LPMEMORYSTATUS lpBuffer)
HRESULT None shell32.SHCreateDataObject(_In_opt_ PCIDLIST_ABSOLUTE pidlFolder,_In_ UINT cidl,_In_opt_ PCUITEMID_CHILD_ARRAY apidl,_In_opt_ IDataObject *pdtInner,_In_ REFIID riid,_Out_ void **ppv)
VOID WINAPI kernel32.CloseThreadpoolTimer(_Inout_ PTP_TIMER pti)
VOID None None.SetThreadpoolCallbackPool(_Inout_ PTP_CALLBACK_ENVIRON pcbe,_In_ PTP_POOL ptpp)
LONG WINAPI advapi32.RegDisablePredefinedCache(void None None)
VOID WINAPI kernel32.WaitForThreadpoolIoCallbacks(_Inout_ PTP_IO pio,_In_ BOOL fCancelPendingCallbacks)
DWORD WINAPI advapi32.GetInheritanceSource(_In_ LPTSTR pObjectName,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_In_ BOOL Container,_In_opt_ GUID **pObjectClassGuids,_In_ DWORD GuidCount,_In_ PACL pAcl,_In_opt_ PFN_OBJECT_MGR_FUNCTS pfnArray,_In_ PGENERIC_MAPPING pGenericMapping,_Out_ PINHERITED_FROM pInheritArray)
DWORD WINAPI advapi32.GetInheritanceSourceW(_In_ LPTSTR pObjectName,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_In_ BOOL Container,_In_opt_ GUID **pObjectClassGuids,_In_ DWORD GuidCount,_In_ PACL pAcl,_In_opt_ PFN_OBJECT_MGR_FUNCTS pfnArray,_In_ PGENERIC_MAPPING pGenericMapping,_Out_ PINHERITED_FROM pInheritArray)
DWORD WINAPI advapi32.GetInheritanceSourceA(_In_ LPTSTR pObjectName,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_In_ BOOL Container,_In_opt_ GUID **pObjectClassGuids,_In_ DWORD GuidCount,_In_ PACL pAcl,_In_opt_ PFN_OBJECT_MGR_FUNCTS pfnArray,_In_ PGENERIC_MAPPING pGenericMapping,_Out_ PINHERITED_FROM pInheritArray)
UINT WINAPI msi.MsiBeginTransaction(_In_ LPCWSTR szTransactionName,_In_ DWORD dwTransactionAttributes,_Out_ MSIHANDLE *hTransactionID,_Out_ HANDLE *phChangeOfOwnerEvent)
UINT WINAPI msi.MsiBeginTransactionW(_In_ LPCWSTR szTransactionName,_In_ DWORD dwTransactionAttributes,_Out_ MSIHANDLE *hTransactionID,_Out_ HANDLE *phChangeOfOwnerEvent)
UINT WINAPI msi.MsiBeginTransactionA(_In_ LPCWSTR szTransactionName,_In_ DWORD dwTransactionAttributes,_Out_ MSIHANDLE *hTransactionID,_Out_ HANDLE *phChangeOfOwnerEvent)
BOOL WINAPI kernel32.UnregisterBadMemoryNotification(_In_ PVOID RegistrationHandle)
void None combase.CoFreeUnusedLibrariesEx(_In_ DWORD dwUnloadDelay,_In_ DWORD dwReserved)
VOID WINAPI advapi32.AuditFree(_In_ PVOID Buffer)
BOOL WINAPI kernel32.ChangeTimerQueueTimer(_In_opt_ HANDLE TimerQueue,_Inout_ HANDLE Timer,_In_ ULONG DueTime,_In_ ULONG Period)
HRESULT WINAPI dssec.DSCreateISecurityInfoObjectEx(_In_ LPCWSTR pwszObjectPath,_In_ LPCWSTR pwszObjectClass,_In_ LPCWSTR pwszServer,_In_ LPCWSTR pwszUserName,_In_ LPCWSTR pwszPassword,_In_ DWORD dwFlags,_Out_ LPSECURITYINFO *ppSI,_In_opt_ PFNREADOBJECTSECURITY pfnReadSD,_In_opt_ PFNWRITEOBJECTSECURITY pfnWriteSD,_In_ LPARAM lpContext)
BOOL None shell32.DAD_ShowDragImage(BOOL fShow None)
HRESULT None ole32.CoMarshalInterThreadInterfaceInStream(_In_ REFIID riid,_In_ LPUNKNOWN pUnk,_Out_ LPSTREAM *ppStm)
PSLIST_ENTRY WINAPI ntdll.RtlInterlockedPushEntrySList(_In_ PSLIST_HEADER ListHead,_In_ PSLIST_ENTRY ListEntry)
BOOL WINAPI advapi32.SetTokenInformation(_In_ HANDLE TokenHandle,_In_ TOKEN_INFORMATION_CLASS TokenInformationClass,_In_ LPVOID TokenInformation,_In_ DWORD TokenInformationLength)
HRESULT None None.StringCbCatNEx(_Inout_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc,_In_ size_t cbMaxAppend,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCbCatNExW(_Inout_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc,_In_ size_t cbMaxAppend,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCbCatNExA(_Inout_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc,_In_ size_t cbMaxAppend,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags)
HANDLE WINAPI kernel32.OpenEvent(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpName)
HANDLE WINAPI kernel32.OpenEventW(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpName)
HANDLE WINAPI kernel32.OpenEventA(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpName)
BOOL None shell32.GetFileNameFromBrowse(_In_opt_ HWND hwnd,_Inout_ PWSTR pszFilePath,UINT cchFilePath None,_In_opt_ PCWSTR pszWorkingDir,_In_ PCWSTR pszDefExt,_In_opt_ PCWSTR pszFilters,_In_opt_ PCWSTR szTitle)
VOID WINAPI kernel32.ReleaseMutexWhenCallbackReturns(_Inout_ PTP_CALLBACK_INSTANCE pci,_In_ HANDLE mut)
HRESULT None ole32.CreateGenericComposite(_In_opt_ LPMONIKER pmkFirst,_In_opt_ LPMONIKER pmkRest,_Out_ LPMONIKER *ppmkComposite)
LPVOID WINAPI kernel32.CreateFiberEx(_In_ SIZE_T dwStackCommitSize,_In_ SIZE_T dwStackReserveSize,_In_ DWORD dwFlags,_In_ LPFIBER_START_ROUTINE lpStartAddress,_In_opt_ LPVOID lpParameter)
VOID WINAPI kernel32.WaitForThreadpoolWaitCallbacks(_Inout_ PTP_WAIT pwa,_In_ BOOL fCancelPendingCallbacks)
PTP_TIMER WINAPI kernel32.CreateThreadpoolTimer(_In_ PTP_TIMER_CALLBACK pfnti,_Inout_opt_ PVOID pv,_In_opt_ PTP_CALLBACK_ENVIRON pcbe)
BOOL WINAPI authz.AuthzRegisterCapChangeNotification(_Out_ PAUTHZ_CAP_CHANGE_SUBSCRIPTION_HANDLE phCapChangeSubscription,_In_ LPTHREAD_START_ROUTINE pfnCapChangeCallback,_In_opt_ PVOID pCallbackContext)
UINT None msi.MsiGetShortcutTarget(_In_ LPCTSTR szShortcutTarget,_Out_ LPTSTR szProductCode,_Out_ LPTSTR szFeatureId,_Out_ LPTSTR szComponentCode)
UINT None msi.MsiGetShortcutTargetW(_In_ LPCTSTR szShortcutTarget,_Out_ LPTSTR szProductCode,_Out_ LPTSTR szFeatureId,_Out_ LPTSTR szComponentCode)
UINT None msi.MsiGetShortcutTargetA(_In_ LPCTSTR szShortcutTarget,_Out_ LPTSTR szProductCode,_Out_ LPTSTR szFeatureId,_Out_ LPTSTR szComponentCode)
BOOL WINAPI advapi32.InitializeSecurityDescriptor(_Out_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_ DWORD dwRevision)
BOOL WINAPI advapi32.ObjectPrivilegeAuditAlarm(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ HANDLE ClientToken,_In_ DWORD DesiredAccess,_In_ PPRIVILEGE_SET Privileges,_In_ BOOL AccessGranted)
BOOL WINAPI advapi32.ObjectPrivilegeAuditAlarmW(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ HANDLE ClientToken,_In_ DWORD DesiredAccess,_In_ PPRIVILEGE_SET Privileges,_In_ BOOL AccessGranted)
BOOL WINAPI advapi32.ObjectPrivilegeAuditAlarmA(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ HANDLE ClientToken,_In_ DWORD DesiredAccess,_In_ PPRIVILEGE_SET Privileges,_In_ BOOL AccessGranted)
BOOL WINAPI advapi32.DestroyPrivateObjectSecurity(_Inout_ PSECURITY_DESCRIPTOR *ObjectDescriptor)
BOOL WINAPI advapi32.DeleteAce(_Inout_ PACL pAcl,_In_ DWORD dwAceIndex)
BOOL None kernel32.GetThreadGroupAffinity(_In_ HANDLE hThread,_Out_ PGROUP_AFFINITY GroupAffinity)
BOOL WINAPI kernel32.EnterUmsSchedulingMode(_In_ PUMS_SCHEDULER_STARTUP_INFO SchedulerStartupInfo)
int WSAAPI ws2_32.GetAddrInfoExOverlappedResult(LPOVERLAPPED lpOverlapped None)
BOOL WINAPI advapi32.EqualDomainSid(_In_ PSID pSid1,_In_ PSID pSid2,_Out_ BOOL *pfEqual)
HRESULT None None.ReleaseMarshalData([in] IStream *pStm)
void None ole32.CoTaskMemFree(_In_opt_ LPVOID pv)
DWORD WINAPI kernel32.ResumeThread(_In_ HANDLE hThread)
DWORD None kernel32.EraseTape(_In_ HANDLE hDevice,_In_ DWORD dwEraseType,_In_ BOOL bImmediate)
BOOL WINAPI advapi32.EqualPrefixSid(_In_ PSID pSid1,_In_ PSID pSid2)
HRESULT WINAPI combase.CoGetSystemSecurityPermissions(_In_ COMSD comSDType,_Out_ PSECURITY_DESCRIPTOR *ppSD)
BOOL WSAAPI ws2_32.WSAGetOverlappedResult(_In_ SOCKET s,_In_ LPWSAOVERLAPPED lpOverlapped,_Out_ LPDWORD lpcbTransfer,_In_ BOOL fWait,_Out_ LPDWORD lpdwFlags)
BOOL WINAPI avrt.AvRtLeaveThreadOrderingGroup(_In_ HANDLE Context)
HANDLE WINAPI kernel32.CreatePrivateNamespace(_In_opt_ LPSECURITY_ATTRIBUTES lpPrivateNamespaceAttributes,_In_ LPVOID lpBoundaryDescriptor,_In_ LPCTSTR lpAliasPrefix)
HANDLE WINAPI kernel32.CreatePrivateNamespaceW(_In_opt_ LPSECURITY_ATTRIBUTES lpPrivateNamespaceAttributes,_In_ LPVOID lpBoundaryDescriptor,_In_ LPCTSTR lpAliasPrefix)
HANDLE WINAPI kernel32.CreatePrivateNamespaceA(_In_opt_ LPSECURITY_ATTRIBUTES lpPrivateNamespaceAttributes,_In_ LPVOID lpBoundaryDescriptor,_In_ LPCTSTR lpAliasPrefix)
BOOL WINAPI advapi32.PrivilegeCheck(_In_ HANDLE ClientToken,_Inout_ PPRIVILEGE_SET RequiredPrivileges,_Out_ LPBOOL pfResult)
VOID WINAPI kernel32.ReleaseSemaphoreWhenCallbackReturns(_Inout_ PTP_CALLBACK_INSTANCE pci,_In_ HANDLE sem,_In_ DWORD crel)
LONG WINAPI advapi32.RegEnumKeyEx(_In_ HKEY hKey,_In_ DWORD dwIndex,_Out_ LPTSTR lpName,_Inout_ LPDWORD lpcName,_Reserved_ LPDWORD lpReserved,_Inout_ LPTSTR lpClass,_Inout_opt_ LPDWORD lpcClass,_Out_opt_ PFILETIME lpftLastWriteTime)
LONG WINAPI advapi32.RegEnumKeyExW(_In_ HKEY hKey,_In_ DWORD dwIndex,_Out_ LPTSTR lpName,_Inout_ LPDWORD lpcName,_Reserved_ LPDWORD lpReserved,_Inout_ LPTSTR lpClass,_Inout_opt_ LPDWORD lpcClass,_Out_opt_ PFILETIME lpftLastWriteTime)
LONG WINAPI advapi32.RegEnumKeyExA(_In_ HKEY hKey,_In_ DWORD dwIndex,_Out_ LPTSTR lpName,_Inout_ LPDWORD lpcName,_Reserved_ LPDWORD lpReserved,_Inout_ LPTSTR lpClass,_Inout_opt_ LPDWORD lpcClass,_Out_opt_ PFILETIME lpftLastWriteTime)
BOOL WINAPI avrt.AvQuerySystemResponsiveness(_In_ HANDLE AvrtHandle,_Out_ PULONG SystemResponsivenessValue)
BOOL WINAPI authz.AuthzUninstallSecurityEventSource(_In_ DWORD dwFlags,_In_ PCWSTR szEventSourceName)
VOID WINAPI kernel32.FreeLibraryWhenCallbackReturns(_Inout_ PTP_CALLBACK_INSTANCE pci,_In_ HMODULE mod)
BOOL WINAPI advapi32.GetTokenInformation(_In_ HANDLE TokenHandle,_In_ TOKEN_INFORMATION_CLASS TokenInformationClass,_Out_opt_ LPVOID TokenInformation,_In_ DWORD TokenInformationLength,_Out_ PDWORD ReturnLength)
BOOL None shell32.DAD_DragEnterEx2(_In_ HWND hwndTarget,const POINT ptStart,_In_opt_ IDataObject *pdtObject)
int WSAAPI None.WSANSPIoctl(_In_ HANDLE hLookup,_In_ DWORD dwControlCode,_In_ LPVOID lpvInBuffer,_Inout_ DWORD cbInBuffer,_Out_ LPVOID lpvOutBuffer,_In_ DWORD cbOutBuffer,_Out_ LPDWORD lpcbBytesReturned,_In_ LPWSACOMPLETION lpCompletion)
PVOID WINAPI kernel32.FlsGetValue(_In_ DWORD dwFlsIndex)
BOOL WINAPI advapi32.InitializeAcl(_Out_ PACL pAcl,_In_ DWORD nAclLength,_In_ DWORD dwAclRevision)
BOOL WINAPI kernel32.CreateUmsThreadContext(_Out_ PUMS_CONTEXT *lpUmsThread)
void WSAAPI ws2_32.FreeAddrInfoW(_In_ PADDRINFOW pAddrInfo)
HRESULT None shell32.SHSetLocalizedName(_In_ PCWSTR pszPath,_In_ PCWSTR pszResModule,int idsRes None)
int None shell32.ShellAbout(_In_opt_ HWND hWnd,_In_ LPCTSTR szApp,_In_opt_ LPCTSTR szOtherStuff,_In_opt_ HICON hIcon)
int None shell32.ShellAboutW(_In_opt_ HWND hWnd,_In_ LPCTSTR szApp,_In_opt_ LPCTSTR szOtherStuff,_In_opt_ HICON hIcon)
int None shell32.ShellAboutA(_In_opt_ HWND hWnd,_In_ LPCTSTR szApp,_In_opt_ LPCTSTR szOtherStuff,_In_opt_ HICON hIcon)
VOID WINAPI None.BadMemoryCallbackRoutine(VOID None None)
BOOL WINAPI kernel32.GetProcessTimes(_In_ HANDLE hProcess,_Out_ LPFILETIME lpCreationTime,_Out_ LPFILETIME lpExitTime,_Out_ LPFILETIME lpKernelTime,_Out_ LPFILETIME lpUserTime)
BOOL WINAPI advapi32.SetSecurityDescriptorSacl(_Inout_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_ BOOL bSaclPresent,_In_opt_ PACL pSacl,_In_ BOOL bSaclDefaulted)
DWORD WINAPI advapi32.SetNamedSecurityInfo(_In_ LPTSTR pObjectName,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_In_opt_ PSID psidOwner,_In_opt_ PSID psidGroup,_In_opt_ PACL pDacl,_In_opt_ PACL pSacl)
DWORD WINAPI advapi32.SetNamedSecurityInfoW(_In_ LPTSTR pObjectName,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_In_opt_ PSID psidOwner,_In_opt_ PSID psidGroup,_In_opt_ PACL pDacl,_In_opt_ PACL pSacl)
DWORD WINAPI advapi32.SetNamedSecurityInfoA(_In_ LPTSTR pObjectName,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_In_opt_ PSID psidOwner,_In_opt_ PSID psidGroup,_In_opt_ PACL pDacl,_In_opt_ PACL pSacl)
HRESULT None ole32.CoRevertToSelf(void None None)
BOOLEAN WINAPI advapi32.AuditLookupCategoryGuidFromCategoryId(_In_ POLICY_AUDIT_EVENT_TYPE AuditCategoryId,_Out_ GUID *pAuditCategoryGuid)
BOOL WINAPI kernel32.SleepConditionVariableCS(_Inout_ PCONDITION_VARIABLE ConditionVariable,_Inout_ PCRITICAL_SECTION CriticalSection,_In_ DWORD dwMilliseconds)
BOOL WINAPI advapi32.GetKernelObjectSecurity(_In_ HANDLE Handle,_In_ SECURITY_INFORMATION RequestedInformation,_Out_opt_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_ DWORD nLength,_Out_ LPDWORD lpnLengthNeeded)
UINT CALLBACK None.InitializeEmbeddedUI(_In_ MSIHANDLE hInstall,_In_ LPCWSTR wzResourcePath,_Inout_ LPDWORD pdwInternalUILevel)
BOOL WINAPI kernel32.QueryProtectedPolicy(_In_ LPCGUID PolicyGuid,_Out_ PULONG_PTR PolicyValue)
BOOL None kernel32.GetLogicalProcessorInformationEx(_In_ LOGICAL_PROCESSOR_RELATIONSHIP RelationshipType,_Out_opt_ PSYSTEM_LOGICAL_PROCESSOR_INFORMATION_EX Buffer,_Inout_ PDWORD ReturnedLength)
INSTALLUILEVEL None msi.MsiSetInternalUI(_In_ INSTALLUILEVEL dwUILevel,_Inout_ HWND *phWnd)
LPTCH WINAPI kernel32.GetEnvironmentStrings(void None None)
LPTCH WINAPI kernel32.GetEnvironmentStringsW(void None None)
LPTCH WINAPI kernel32.GetEnvironmentStringsA(void None None)
BOOL WINAPI user32.IsWindowUnicode(_In_ HWND hWnd)
PIDLIST_ABSOLUTE None shell32.ILCombine(_In_ PCIDLIST_ABSOLUTE pidl1,_In_ PCUIDLIST_RELATIVE pidl2)
BOOL WINAPI advapi32.SetKernelObjectSecurity(_In_ HANDLE Handle,_In_ SECURITY_INFORMATION SecurityInformation,_In_ PSECURITY_DESCRIPTOR SecurityDescriptor)
BOOL WINAPI advapi32.CreateProcessWithLogonW(_In_ LPCWSTR lpUsername,_In_opt_ LPCWSTR lpDomain,_In_ LPCWSTR lpPassword,_In_ DWORD dwLogonFlags,_In_opt_ LPCWSTR lpApplicationName,_Inout_opt_ LPWSTR lpCommandLine,_In_ DWORD dwCreationFlags,_In_opt_ LPVOID lpEnvironment,_In_opt_ LPCWSTR lpCurrentDirectory,_In_ LPSTARTUPINFOW lpStartupInfo,_Out_ LPPROCESS_INFORMATION lpProcessInfo)
BOOL WINAPI user32.GetKeyboardState(_Out_ PBYTE lpKeyState)
HRESULT None ole32.CoQueryAuthenticationServices(_Out_ DWORD *pcAuthSvc,_Out_ SOLE_AUTHENTICATION_SERVICE **asAuthSvc)
BOOL WINAPI advapi32.CreateRestrictedToken(_In_ HANDLE ExistingTokenHandle,_In_ DWORD Flags,_In_ DWORD DisableSidCount,_In_opt_ PSID_AND_ATTRIBUTES SidsToDisable,_In_ DWORD DeletePrivilegeCount,_In_opt_ PLUID_AND_ATTRIBUTES PrivilegesToDelete,_In_ DWORD RestrictedSidCount,_In_opt_ PSID_AND_ATTRIBUTES SidsToRestrict,_Out_ PHANDLE NewTokenHandle)
BOOL None shell32.SHChangeNotifyDeregister(ULONG ulID None)
BOOL WINAPI advapi32.AddMandatoryAce(_Inout_ PACL pAcl,_In_ DWORD dwAceRevision,_In_ DWORD AceFlags,_In_ DWORD MandatoryPolicy,_In_ PSID pLabelSid)
HRESULT None ole32.CoAllowSetForegroundWindow(_In_ IUnknown *pUnk,_In_ LPVOID lpvReserved)
HRESULT None ole32.CoGetMalloc(_In_ DWORD dwMemContext,_Out_ LPMALLOC *ppMalloc)
BOOL WINAPI authz.AuthzInitializeContextFromSid(_In_ DWORD Flags,_In_ PSID UserSid,_In_opt_ AUTHZ_RESOURCE_MANAGER_HANDLE hAuthzResourceManager,_In_ PLARGE_INTEGER pExpirationTime,_In_ LUID Identifier,_In_opt_ PVOID DynamicGroupArgs,_Out_ PAUTHZ_CLIENT_CONTEXT_HANDLE pAuthzClientContext)
LPVOID None shell32.SHAlloc(_In_ SIZE_T cb)
BOOL WINAPI authz.AuthzInitializeResourceManagerEx(_In_opt_ DWORD Flags,_In_opt_ PVOID pAuthzInitInfo,_Out_ PAUTHZ_RESOURCE_MANAGER_HANDLE phAuthzResourceManager)
int None ws2_32.WSAEventSelect(_In_ SOCKET s,_In_ WSAEVENT hEventObject,_In_ long lNetworkEvents)
HRESULT None shell32.ILLoadFromStream(_In_ IStream *pstm,_Out_ PIDLIST_RELATIVE *pidl)
BOOL WINAPI kernel32.SetThreadpoolThreadMinimum(_Inout_ PTP_POOL ptpp,_In_ DWORD cthrdMic)
UINT None msi.MsiConfigureFeature(_In_ LPCTSTR szProduct,_In_ LPCTSTR szFeature,_In_ INSTALLSTATE eInstallState)
UINT None msi.MsiConfigureFeatureW(_In_ LPCTSTR szProduct,_In_ LPCTSTR szFeature,_In_ INSTALLSTATE eInstallState)
UINT None msi.MsiConfigureFeatureA(_In_ LPCTSTR szProduct,_In_ LPCTSTR szFeature,_In_ INSTALLSTATE eInstallState)
HRESULT None ole32.GetRunningObjectTable(_In_ DWORD reserved,_Out_ LPRUNNINGOBJECTTABLE *pprot)
HRESULT None ole32.OleGetAutoConvert(_In_ REFCLSID clsidOld,_Out_ LPCLSID pClsidNew)
UINT None msi.MsiAdvertiseScript(_In_ LPCTSTR szScriptFile,_In_ DWORD dwFlags,_In_ PHKEY phRegData,_In_ BOOL fRemoveItems)
UINT None msi.MsiAdvertiseScriptW(_In_ LPCTSTR szScriptFile,_In_ DWORD dwFlags,_In_ PHKEY phRegData,_In_ BOOL fRemoveItems)
UINT None msi.MsiAdvertiseScriptA(_In_ LPCTSTR szScriptFile,_In_ DWORD dwFlags,_In_ PHKEY phRegData,_In_ BOOL fRemoveItems)
LONG WINAPI advapi32.RegDeleteTree(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey)
LONG WINAPI advapi32.RegDeleteTreeW(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey)
LONG WINAPI advapi32.RegDeleteTreeA(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey)
PSID_IDENTIFIER_AUTHORITY WINAPI advapi32.GetSidIdentifierAuthority(_In_ PSID pSid)
HRESULT None shell32.SHGetDesktopFolder(_Out_ IShellFolder **ppshf)
VOID WINAPI advapi32.SetSecurityAccessMask(_In_ SECURITY_INFORMATION SecurityInformation,_Out_ LPDWORD DesiredAccess)
BOOL WINAPI avrt.AvRevertMmThreadCharacteristics(_In_ HANDLE AvrtHandle)
VOID FORCEINLINE None.TpSetCallbackFinalizationCallback(_Inout_ PTP_CALLBACK_ENVIRON CallbackEnviron,_In_ PTP_SIMPLE_CALLBACK FinalizationCallback)
HRESULT None ole32.CoGetCancelObject(_In_ DWORD dwThreadId,_In_ REFIID iid,_Out_ void **ppUnk)
HRESULT None ole32.OleSetAutoConvert(_In_ REFCLSID clsidOld,_In_ REFCLSID clsidNew)
BOOL WINAPI kernel32.SleepConditionVariableSRW(_Inout_ PCONDITION_VARIABLE ConditionVariable,_Inout_ PSRWLOCK SRWLock,_In_ DWORD dwMilliseconds,_In_ ULONG Flags)
BOOL WINAPI kernel32.SetProcessAffinityMask(_In_ HANDLE hProcess,_In_ DWORD_PTR dwProcessAffinityMask)
HRESULT None ole32.ProgIDFromCLSID(_In_ REFCLSID clsid,_Out_ LPOLESTR *lplpszProgID)
UINT None msi.MsiGetPatchInfoEx(_In_ LPCTSTR szPatchCode,_In_ LPCTSTR szProductCode,_In_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ LPCTSTR szProperty,_Out_opt_ LPTSTR lpValue,_Inout_ DWORD *pcchValue)
UINT None msi.MsiGetPatchInfoExW(_In_ LPCTSTR szPatchCode,_In_ LPCTSTR szProductCode,_In_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ LPCTSTR szProperty,_Out_opt_ LPTSTR lpValue,_Inout_ DWORD *pcchValue)
UINT None msi.MsiGetPatchInfoExA(_In_ LPCTSTR szPatchCode,_In_ LPCTSTR szProductCode,_In_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ LPCTSTR szProperty,_Out_opt_ LPTSTR lpValue,_Inout_ DWORD *pcchValue)
HRESULT None shell32.SHGetStockIconInfo(SHSTOCKICONID siid None,UINT uFlags None,_Inout_ SHSTOCKICONINFO *psii)
UINT None msi.MsiApplyMultiplePatches(_In_ LPCTSTR szPatchPackages,_In_opt_ LPCTSTR szProductCode,_In_opt_ LPCTSTR szPropertiesList)
UINT None msi.MsiApplyMultiplePatchesW(_In_ LPCTSTR szPatchPackages,_In_opt_ LPCTSTR szProductCode,_In_opt_ LPCTSTR szPropertiesList)
UINT None msi.MsiApplyMultiplePatchesA(_In_ LPCTSTR szPatchPackages,_In_opt_ LPCTSTR szProductCode,_In_opt_ LPCTSTR szPropertiesList)
DWORD WINAPI kernel32.GetCurrentThreadId(void None None)
DWORD WINAPI None.ThreadProc(_In_ LPVOID lpParameter)
VOID FORCEINLINE None.TpSetCallbackLongFunction(_Inout_ PTP_CALLBACK_ENVIRON CallbackEnviron)
UINT None msi.MsiDeterminePatchSequence(_In_ LPCTSTR szProductCode,_In_opt_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD cPatchInfo,_In_ PMSIPATCHSEQUENCEINFO pPatchInfo)
UINT None msi.MsiDeterminePatchSequenceW(_In_ LPCTSTR szProductCode,_In_opt_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD cPatchInfo,_In_ PMSIPATCHSEQUENCEINFO pPatchInfo)
UINT None msi.MsiDeterminePatchSequenceA(_In_ LPCTSTR szProductCode,_In_opt_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD cPatchInfo,_In_ PMSIPATCHSEQUENCEINFO pPatchInfo)
BOOL WINAPI kernel32.QueryProcessAffinityUpdateMode(_In_ HANDLE ProcessHandle,_Out_opt_ DWORD lpdwFlags)
UINT None msi.MsiProcessAdvertiseScript(_In_ LPCTSTR szScriptFile,_In_ LPCTSTR szIconFolder,_In_ HKEY hRegData,_In_ BOOL fShortcuts,_In_ BOOL fRemoveItems)
UINT None msi.MsiProcessAdvertiseScriptW(_In_ LPCTSTR szScriptFile,_In_ LPCTSTR szIconFolder,_In_ HKEY hRegData,_In_ BOOL fShortcuts,_In_ BOOL fRemoveItems)
UINT None msi.MsiProcessAdvertiseScriptA(_In_ LPCTSTR szScriptFile,_In_ LPCTSTR szIconFolder,_In_ HKEY hRegData,_In_ BOOL fShortcuts,_In_ BOOL fRemoveItems)
VOID FORCEINLINE None.TpSetCallbackThreadpool(_Inout_ PTP_CALLBACK_ENVIRON CallbackEnviron,_In_ PTP_POOL Pool)
VOID WINAPI kernel32.CloseThreadpoolCleanupGroup(_Inout_ PTP_CLEANUP_GROUP ptpcg)
INT None mswsock.GetNameByType(_In_ LPGUID lpServiceType,_Out_ LPTSTR lpServiceName,_In_ DWORD dwNameLength)
INT None mswsock.GetNameByTypeW(_In_ LPGUID lpServiceType,_Out_ LPTSTR lpServiceName,_In_ DWORD dwNameLength)
INT None mswsock.GetNameByTypeA(_In_ LPGUID lpServiceType,_Out_ LPTSTR lpServiceName,_In_ DWORD dwNameLength)
DWORD WINAPI user32.WaitForInputIdle(_In_ HANDLE hProcess,_In_ DWORD dwMilliseconds)
int None shlwapi.SHAnsiToAnsi(_In_ LPCSTR pszSrc,_Out_ LPWSTR pszDst,int cchBuf None)
BOOL WINAPI advapi32.GetSecurityDescriptorOwner(_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_Out_ PSID *pOwner,_Out_ LPBOOL lpbOwnerDefaulted)
BOOL WINAPI kernel32.CallbackMayRunLong(_Inout_ PTP_CALLBACK_INSTANCE pci)
BOOL WINAPI kernel32.UmsThreadYield(_In_ PVOID SchedulerParam)
UINT None msi.MsiSourceListEnumMediaDisks(_In_ LPCTSTR szProductCodeOrPatchCode,_In_opt_ LPCTSTR szUserSID,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD dwOptions,_In_ DWORD dwIndex,_Out_opt_ LPWORD pdwDiskId,_Out_opt_ LPTSTR szVolumeLabel,_Inout_opt_ LPDWORD pcchVolumeLabel,_Out_opt_ LPTSTR szDiskPrompt,_Inout_opt_ LPDWORD pcchDiskPrompt)
UINT None msi.MsiSourceListEnumMediaDisksW(_In_ LPCTSTR szProductCodeOrPatchCode,_In_opt_ LPCTSTR szUserSID,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD dwOptions,_In_ DWORD dwIndex,_Out_opt_ LPWORD pdwDiskId,_Out_opt_ LPTSTR szVolumeLabel,_Inout_opt_ LPDWORD pcchVolumeLabel,_Out_opt_ LPTSTR szDiskPrompt,_Inout_opt_ LPDWORD pcchDiskPrompt)
UINT None msi.MsiSourceListEnumMediaDisksA(_In_ LPCTSTR szProductCodeOrPatchCode,_In_opt_ LPCTSTR szUserSID,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD dwOptions,_In_ DWORD dwIndex,_Out_opt_ LPWORD pdwDiskId,_Out_opt_ LPTSTR szVolumeLabel,_Inout_opt_ LPDWORD pcchVolumeLabel,_Out_opt_ LPTSTR szDiskPrompt,_Inout_opt_ LPDWORD pcchDiskPrompt)
int None ws2_32.WSAGetLastError(void None None)
WSAEVENT None ws2_32.WSACreateEvent(void None None)
HRESULT None ole32.MkParseDisplayName(_In_ LPBC pbc,_In_ LPCOLESTR szUserName,_Out_ ULONG *pchEaten,_Out_ LPMONIKER *ppmk)
HRESULT None ole32.CoSwitchCallContext(_In_opt_ IUnknown *pNewObject,_Out_ IUnknown **ppOldObject)
BOOL None shell32.FileIconInit(_In_ BOOL fRestoreCache)
UINT None msi.MsiEnumClients(_In_ LPCTSTR szComponent,_In_ DWORD iProductIndex,_Out_ LPTSTR lpProductBuf)
UINT None msi.MsiEnumClientsW(_In_ LPCTSTR szComponent,_In_ DWORD iProductIndex,_Out_ LPTSTR lpProductBuf)
UINT None msi.MsiEnumClientsA(_In_ LPCTSTR szComponent,_In_ DWORD iProductIndex,_Out_ LPTSTR lpProductBuf)
VOID None None.SetThreadpoolCallbackLibrary(_Inout_ PTP_CALLBACK_ENVIRON pcbe,_In_ PVOID mod)
LONG None None.DefScreenSaverProc(HWND hWnd None,UINT msg None,WPARAM wParam None,LPARAM lParam None)
HRESULT None ole32.CoDisconnectContext(_In_ DWORD dwTimeout)
HRESULT None azroles.Delete([in None None,optional] VARIANT varReserved)
BOOL None kernel32.GetNumaProcessorNodeEx(_In_ PPROCESSOR_NUMBER Processor,_Out_ PUSHORT NodeNumber)
BOOL WINAPI advapi32.IsValidSid(_In_ PSID pSid)
HRESULT None ole32.BindMoniker(_In_ LPMONIKER pmk,_In_ DWORD grfOpt,_In_ REFIID iidResult,_Out_ LPVOID *ppvResult)
DWORD WINAPI kernel32.GetCurrentProcessId(void None None)
BOOL WINAPI kernel.SetDisplayAutoRotationPreferences(_In_ ORIENTATION_PREFERENCE *pOrientation)
u_long __inline None.ntohll(unsigned __int64 value)
DWORD WINAPI kernel32.SignalObjectAndWait(_In_ HANDLE hObjectToSignal,_In_ HANDLE hObjectToWaitOn,_In_ DWORD dwMilliseconds,_In_ BOOL bAlertable)
BOOL WINAPI advapi32.AccessCheckByType(_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_opt_ PSID PrincipalSelfSid,_In_ HANDLE ClientToken,_In_ DWORD DesiredAccess,_Inout_opt_ POBJECT_TYPE_LIST ObjectTypeList,_In_ DWORD ObjectTypeListLength,_In_ PGENERIC_MAPPING GenericMapping,_Out_opt_ PPRIVILEGE_SET PrivilegeSet,_Inout_ LPDWORD PrivilegeSetLength,_Out_ LPDWORD GrantedAccess,_Out_ LPBOOL AccessStatus)
BOOL WINAPI kernel32.QueryIdleProcessorCycleTime(_Inout_ PULONG BufferLength,_Out_ PULONG64 ProcessorIdleCycleTime)
UINT None msi.MsiSourceListClearSource(_In_ LPCTSTR szProductCodeOrPatchCode,_In_opt_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD dwOptions,_In_ LPCTSTR szSource)
UINT None msi.MsiSourceListClearSourceW(_In_ LPCTSTR szProductCodeOrPatchCode,_In_opt_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD dwOptions,_In_ LPCTSTR szSource)
UINT None msi.MsiSourceListClearSourceA(_In_ LPCTSTR szProductCodeOrPatchCode,_In_opt_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD dwOptions,_In_ LPCTSTR szSource)
HRESULT None ole32.CoEnableCallCancellation(_In_opt_ LPVOID pReserved)
int None ws2_32.WSASendMsg(_In_ SOCKET s,_In_ LPWSAMSG lpMsg,_In_ DWORD dwFlags,_Out_ LPDWORD lpNumberOfBytesSent,_In_ LPWSAOVERLAPPED lpOverlapped,_In_ LPWSAOVERLAPPED_COMPLETION_ROUTINE lpCompletionRoutine)
ULONG None mswsock.RIODequeueCompletion(_In_ RIO_CQ CQ,_Out_ PRIORESULT Array,_In_ ULONG ArraySize)
u_long WSAAPI ws2_32.ntohl(_In_ u_long netlong)
BOOL WINAPI authz.AuthzFreeAuditEvent(_In_ AUTHZ_AUDIT_EVENT_HANDLE pAuditEventInfo)
HRESULT None ole32.OleRegGetMiscStatus(_In_ REFCLSID clsid,_In_ DWORD dwAspect,_Out_ DWORD *pdwStatus)
BOOL WINAPI kernel32.SetThreadStackGuarantee(_Inout_ PULONG StackSizeInBytes)
BOOL WINAPI authz.AuthzFreeHandle(_In_ AUTHZ_ACCESS_CHECK_RESULTS_HANDLE AuthzHandle)
BOOL WINAPI advapi32.ConvertSecurityDescriptorToStringSecurityDescriptor(_In_ PSECURITY_DESCRIPTOR SecurityDescriptor,_In_ DWORD RequestedStringSDRevision,_In_ SECURITY_INFORMATION SecurityInformation,_Out_ LPTSTR *StringSecurityDescriptor,_Out_ PULONG StringSecurityDescriptorLen)
BOOL WINAPI advapi32.ConvertSecurityDescriptorToStringSecurityDescriptorW(_In_ PSECURITY_DESCRIPTOR SecurityDescriptor,_In_ DWORD RequestedStringSDRevision,_In_ SECURITY_INFORMATION SecurityInformation,_Out_ LPTSTR *StringSecurityDescriptor,_Out_ PULONG StringSecurityDescriptorLen)
BOOL WINAPI advapi32.ConvertSecurityDescriptorToStringSecurityDescriptorA(_In_ PSECURITY_DESCRIPTOR SecurityDescriptor,_In_ DWORD RequestedStringSDRevision,_In_ SECURITY_INFORMATION SecurityInformation,_Out_ LPTSTR *StringSecurityDescriptor,_Out_ PULONG StringSecurityDescriptorLen)
HPSXA None shell32.SHCreatePropSheetExtArray(_In_ HKEY hkey,_In_opt_ PCWSTR pszSubkey,UINT max_iface None)
BOOL WINAPI advapi32.FindFirstFreeAce(_In_ PACL pAcl,_Out_ LPVOID *pAce)
UINT None shlwapi.WhichPlatform(void None None)
int None shell32.PathCleanupSpec(_In_opt_ PCWSTR pszDir,_Inout_ PWSTR pszSpec)
HRESULT None shell32.SHCreateFileExtractIcon(_In_ LPCTSTR pszFile,_In_ DWORD dwFileAttributes,_In_ REFIID riid,void **ppv None)
HRESULT None shell32.SHCreateFileExtractIconW(_In_ LPCTSTR pszFile,_In_ DWORD dwFileAttributes,_In_ REFIID riid,void **ppv None)
PTP_CLEANUP_GROUP WINAPI kernel32.CreateThreadpoolCleanupGroup(void None None)
HRESULT None None.BeginTransaction(IUnknown * punkOuter,ISOLEVEL isoLevel None,ULONG isoFlags None,ITransactionOptions * pOptions,ITransaction ** ppTransaction)
void None None.DisplayPackageUsers(Windows::Management::Deployment::PackageManager^ packageManager None,Windows::ApplicationModel::Package^ package None)
HANDLE WINAPI kernel32.GetCurrentProcess(void None None)
VOID FORCEINLINE None.TpSetCallbackPersistent(_Inout_ PTP_CALLBACK_ENVIRON CallbackEnviron)
BOOL None kernel32.GetProcessGroupAffinity(_In_ HANDLE hProcess,_Inout_ PUSHORT GroupCount,_Out_ PUSHORT GroupArray)
BOOL WINAPI kernel32.SetThreadpoolWaitEx(_Inout_ PTP_WAIT pwa,_In_opt_ HANDLE h,_In_opt_ PFILETIME pftTimeout,_Reserved_ PVOID Reserved)
HRESULT None ole32.CoTreatAsClass(_In_ REFCLSID clsidOld,_In_ REFCLSID clsidNew)
BOOL WINAPI userenv.DestroyEnvironmentBlock(_In_ LPVOID lpEnvironment)
HRESULT None shell32.SHQueryRecycleBin(_In_opt_ LPCTSTR pszRootPath,_Inout_ LPSHQUERYRBINFO pSHQueryRBInfo)
HRESULT None shell32.SHQueryRecycleBinW(_In_opt_ LPCTSTR pszRootPath,_Inout_ LPSHQUERYRBINFO pSHQueryRBInfo)
HRESULT None shell32.SHQueryRecycleBinA(_In_opt_ LPCTSTR pszRootPath,_Inout_ LPSHQUERYRBINFO pSHQueryRBInfo)
BOOL WINAPI advapi32.AddAccessAllowedAce(_Inout_ PACL pAcl,_In_ DWORD dwAceRevision,_In_ DWORD AccessMask,_In_ PSID pSid)
BOOL None shell32.GUIDFromString(_In_ LPCTSTR psz,_Out_ LPGUID pguid)
BOOL None shell32.GUIDFromStringW(_In_ LPCTSTR psz,_Out_ LPGUID pguid)
BOOL None shell32.GUIDFromStringA(_In_ LPCTSTR psz,_Out_ LPGUID pguid)
PVOID WINAPI advapi32.FreeSid(_In_ PSID pSid)
BOOL WINAPI kernel32.TerminateProcess(_In_ HANDLE hProcess,_In_ UINT uExitCode)
UINT None msi.MsiGetProductInfoFromScript(_In_ LPCTSTR szScriptFile,_Out_ LPTSTR lpProductBuf39,_Out_ LANGID *plgidLanguage,_Out_ DWORD *pdwVersion,_Out_ LPTSTR lpNameBuf,_Inout_ DWORD *pcchNameBuf,_Out_ LPTSTR lpPackageBuf,_Inout_ DWORD *pcchPackageBuf)
UINT None msi.MsiGetProductInfoFromScriptW(_In_ LPCTSTR szScriptFile,_Out_ LPTSTR lpProductBuf39,_Out_ LANGID *plgidLanguage,_Out_ DWORD *pdwVersion,_Out_ LPTSTR lpNameBuf,_Inout_ DWORD *pcchNameBuf,_Out_ LPTSTR lpPackageBuf,_Inout_ DWORD *pcchPackageBuf)
UINT None msi.MsiGetProductInfoFromScriptA(_In_ LPCTSTR szScriptFile,_Out_ LPTSTR lpProductBuf39,_Out_ LANGID *plgidLanguage,_Out_ DWORD *pdwVersion,_Out_ LPTSTR lpNameBuf,_Inout_ DWORD *pcchNameBuf,_Out_ LPTSTR lpPackageBuf,_Inout_ DWORD *pcchPackageBuf)
int WSAAPI ws2_32.WSANtohs(_In_ SOCKET s,_In_ u_short netshort,_Out_ u_short *lphostshort)
BOOL WINAPI advapi32.AddAccessAllowedAceEx(_Inout_ PACL pAcl,_In_ DWORD dwAceRevision,_In_ DWORD AceFlags,_In_ DWORD AccessMask,_In_ PSID pSid)
HRESULT None shell32.SHBindToFolderIDListParent(_In_opt_ IShellFolder *psfRoot,_In_ PCUIDLIST_RELATIVE pidl,_In_ REFIID riid,_Out_ void **ppv,_Out_opt_ PCUITEMID_CHILD *ppidlLast)
void WINAPI ntdll.RtlInitializeSListHead(_In_ PSLIST_HEADER ListHead)
UINT None msi.MsiSourceListForceResolutionEx(_In_ LPCTSTR szProductCodeOrPatchCode,_In_opt_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD dwOptions)
UINT None msi.MsiSourceListForceResolutionExW(_In_ LPCTSTR szProductCodeOrPatchCode,_In_opt_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD dwOptions)
UINT None msi.MsiSourceListForceResolutionExA(_In_ LPCTSTR szProductCodeOrPatchCode,_In_opt_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD dwOptions)
BOOL WINAPI advapi32.ImpersonateLoggedOnUser(_In_ HANDLE hToken)
BOOL None shell32.LinkWindow_UnregisterClass(void None None)
BOOL WINAPI advapi32.OpenProcessToken(_In_ HANDLE ProcessHandle,_In_ DWORD DesiredAccess,_Out_ PHANDLE TokenHandle)
BOOLEAN CALLBACK None.SecureMemoryCacheCallback(_In_ PVOID Addr,_In_ SIZE_T Range)
BOOL None kernel32.SetThreadIdealProcessorEx(_In_ HANDLE hThread,_In_ PPROCESSOR_NUMBER lpIdealProcessor,_Out_opt_ PPROCESSOR_NUMBER lpPreviousIdealProcessor)
BOOL None shell32.SHObjectProperties(_In_ HWND hwnd,_In_ DWORD shopObjectType,_In_ PCWSTR pszObjectName,_In_ PCWSTR pszPropertyPage)
VOID WINAPI kernel32.DeleteProcThreadAttributeList(_Inout_ LPPROC_THREAD_ATTRIBUTE_LIST lpAttributeList)
DWORD WINAPI user32.GetGuiResources(_In_ HANDLE hProcess,_In_ DWORD uiFlags)
int WSPAPI ws2_32.WSCEnumProtocols32(_In_ LPINT lpiProtocols,_Out_ LPWSAPROTOCOL_INFOW lpProtocolBuffer,_Inout_ LPDWORD lpdwBufferLength,_Out_ LPINT lpErrno)
INT None ws2_32.WSAGetServiceClassInfo(_In_ LPGUID lpProviderId,_In_ LPGUID lpServiceClassId,_Inout_ LPDWORD lpdwBufferLength,_Out_ LPWSASERVICECLASSINFO lpServiceClassInfo)
INT None ws2_32.WSAGetServiceClassInfoW(_In_ LPGUID lpProviderId,_In_ LPGUID lpServiceClassId,_Inout_ LPDWORD lpdwBufferLength,_Out_ LPWSASERVICECLASSINFO lpServiceClassInfo)
INT None ws2_32.WSAGetServiceClassInfoA(_In_ LPGUID lpProviderId,_In_ LPGUID lpServiceClassId,_Inout_ LPDWORD lpdwBufferLength,_Out_ LPWSASERVICECLASSINFO lpServiceClassInfo)
BOOL WINAPI advapi32.CreateProcessWithTokenW(_In_ HANDLE hToken,_In_ DWORD dwLogonFlags,_In_opt_ LPCWSTR lpApplicationName,_Inout_opt_ LPWSTR lpCommandLine,_In_ DWORD dwCreationFlags,_In_opt_ LPVOID lpEnvironment,_In_opt_ LPCWSTR lpCurrentDirectory,_In_ LPSTARTUPINFOW lpStartupInfo,_Out_ LPPROCESS_INFORMATION lpProcessInfo)
BOOL WINAPI kernel.GetDisplayAutoRotationPreferences(_Out_ PAR_STATE pState)
UINT None msi.MsiSourceListAddMediaDisk(_In_ LPCTSTR szProductCodeOrPatchCode,_In_opt_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD dwOptions,_In_ DWORD dwDiskId,_In_ LPCTSTR szVolumeLabel,_In_opt_ LPCTSTR szDiskPrompt)
UINT None msi.MsiSourceListAddMediaDiskW(_In_ LPCTSTR szProductCodeOrPatchCode,_In_opt_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD dwOptions,_In_ DWORD dwDiskId,_In_ LPCTSTR szVolumeLabel,_In_opt_ LPCTSTR szDiskPrompt)
UINT None msi.MsiSourceListAddMediaDiskA(_In_ LPCTSTR szProductCodeOrPatchCode,_In_opt_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD dwOptions,_In_ DWORD dwDiskId,_In_ LPCTSTR szVolumeLabel,_In_opt_ LPCTSTR szDiskPrompt)
HRESULT None shell32.SHCLSIDFromString(_In_ PCWSTR psz,_Out_ CLSID *pcClsid)
VOID WINAPI kernel32.WaitForThreadpoolTimerCallbacks(_Inout_ PTP_TIMER pti,_In_ BOOL fCancelPendingCallbacks)
BOOL WINAPI authz.AuthzAddSidsToContext(_In_ AUTHZ_CLIENT_CONTEXT_HANDLE OrigClientContext,_In_ PSID_AND_ATTRIBUTES Sids,_In_ DWORD SidCount,_In_ PSID_AND_ATTRIBUTES RestrictedSids,_In_ DWORD RestrictedSidCount,_Out_ PAUTHZ_CLIENT_CONTEXT_HANDLE pNewClientContext)
BOOL WINAPI advapi32.QueryServiceObjectSecurity(_In_ SC_HANDLE hService,_In_ SECURITY_INFORMATION dwSecurityInformation,_Out_opt_ PSECURITY_DESCRIPTOR lpSecurityDescriptor,_In_ DWORD cbBufSize,_Out_ LPDWORD pcbBytesNeeded)
UINT None msi.MsiProvideQualifiedComponent(_In_ LPCTSTR szComponent,_In_ LPCTSTR szQualifier,_In_ DWORD dwInstallMode,_Out_ LPTSTR lpPathBuf,_Inout_ DWORD *pcchPathBuf)
UINT None msi.MsiProvideQualifiedComponentW(_In_ LPCTSTR szComponent,_In_ LPCTSTR szQualifier,_In_ DWORD dwInstallMode,_Out_ LPTSTR lpPathBuf,_Inout_ DWORD *pcchPathBuf)
UINT None msi.MsiProvideQualifiedComponentA(_In_ LPCTSTR szComponent,_In_ LPCTSTR szQualifier,_In_ DWORD dwInstallMode,_Out_ LPTSTR lpPathBuf,_Inout_ DWORD *pcchPathBuf)
VOID WINAPI kernel32.AcquireSRWLockExclusive(_Inout_ PSRWLOCK SRWLock)
DWORD WINAPI advapi32.GetSecurityDescriptorLength(_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor)
HRESULT __stdcall None.DllGetClassObject(_In_ REFCLSID rclsid,_In_ REFIID riid,_Out_ LPVOID *ppv)
LONG WINAPI advapi32.RegRestoreKey(_In_ HKEY hKey,_In_ LPCTSTR lpFile,_In_ DWORD dwFlags)
LONG WINAPI advapi32.RegRestoreKeyW(_In_ HKEY hKey,_In_ LPCTSTR lpFile,_In_ DWORD dwFlags)
LONG WINAPI advapi32.RegRestoreKeyA(_In_ HKEY hKey,_In_ LPCTSTR lpFile,_In_ DWORD dwFlags)
HRESULT None ole32.CoMarshalInterface(_In_ LPSTREAM pStm,_In_ REFIID riid,_In_ LPUNKNOWN pUnk,_In_ DWORD dwDestContext,_In_opt_ LPVOID pvDestContext,_In_ DWORD mshlflags)
DWORD WINAPI kernel32.FlsAlloc(_In_ PFLS_CALLBACK_FUNCTION lpCallback)
BOOL WINAPI avrt.AvRtCreateThreadOrderingGroup(_Out_ PHANDLE Context,_In_ PLARGE_INTEGER Period,_Inout_ GUID *ThreadOrderingGuid,_In_opt_ PLARGE_INTEGER Timeout)
BOOL WINAPI kernel32.GetProcessPriorityBoost(_In_ HANDLE hProcess,_Out_ PBOOL pDisablePriorityBoost)
HRESULT None ole32.CoGetObject(_In_ LPCWSTR pszName,_In_opt_ BIND_OPTS *pBindOptions,_In_ REFIID riid,_Out_ void **ppv)
BOOL WINAPI user32.SetProcessRestrictionExemption(BOOL fEnableExemption None)
BOOL WINAPI advapi32.LookupAccountSid(_In_opt_ LPCTSTR lpSystemName,_In_ PSID lpSid,_Out_opt_ LPTSTR lpName,_Inout_ LPDWORD cchName,_Out_opt_ LPTSTR lpReferencedDomainName,_Inout_ LPDWORD cchReferencedDomainName,_Out_ PSID_NAME_USE peUse)
BOOL WINAPI advapi32.LookupAccountSidW(_In_opt_ LPCTSTR lpSystemName,_In_ PSID lpSid,_Out_opt_ LPTSTR lpName,_Inout_ LPDWORD cchName,_Out_opt_ LPTSTR lpReferencedDomainName,_Inout_ LPDWORD cchReferencedDomainName,_Out_ PSID_NAME_USE peUse)
BOOL WINAPI advapi32.LookupAccountSidA(_In_opt_ LPCTSTR lpSystemName,_In_ PSID lpSid,_Out_opt_ LPTSTR lpName,_Inout_ LPDWORD cchName,_Out_opt_ LPTSTR lpReferencedDomainName,_Inout_ LPDWORD cchReferencedDomainName,_Out_ PSID_NAME_USE peUse)
UINT None msi.MsiConfigureProduct(_In_ LPCTSTR szProduct,_In_ int iInstallLevel,_In_ INSTALLSTATE eInstallState)
UINT None msi.MsiConfigureProductW(_In_ LPCTSTR szProduct,_In_ int iInstallLevel,_In_ INSTALLSTATE eInstallState)
UINT None msi.MsiConfigureProductA(_In_ LPCTSTR szProduct,_In_ int iInstallLevel,_In_ INSTALLSTATE eInstallState)
HRESULT WINAPI userenv.GetAppContainerRegistryLocation(_In_ REGSAM desiredAccess,_Out_ PHKEY phAppContainerKey)
UINT None msi.MsiSourceListEnumSources(_In_ LPCTSTR szProductCodeOrPatchCode,_In_opt_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD dwOptions,_In_ DWORD dwIndex,_In_opt_ LPTSTR szSource,_Inout_opt_ LPDWORD pcchSource)
UINT None msi.MsiSourceListEnumSourcesW(_In_ LPCTSTR szProductCodeOrPatchCode,_In_opt_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD dwOptions,_In_ DWORD dwIndex,_In_opt_ LPTSTR szSource,_Inout_opt_ LPDWORD pcchSource)
UINT None msi.MsiSourceListEnumSourcesA(_In_ LPCTSTR szProductCodeOrPatchCode,_In_opt_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD dwOptions,_In_ DWORD dwIndex,_In_opt_ LPTSTR szSource,_Inout_opt_ LPDWORD pcchSource)
UINT None msi.MsiGetProductInfo(_In_ LPCTSTR szProduct,_In_ LPCTSTR szProperty,_Out_ LPTSTR lpValueBuf,_Inout_ DWORD *pcchValueBuf)
UINT None msi.MsiGetProductInfoW(_In_ LPCTSTR szProduct,_In_ LPCTSTR szProperty,_Out_ LPTSTR lpValueBuf,_Inout_ DWORD *pcchValueBuf)
UINT None msi.MsiGetProductInfoA(_In_ LPCTSTR szProduct,_In_ LPCTSTR szProperty,_Out_ LPTSTR lpValueBuf,_Inout_ DWORD *pcchValueBuf)
BOOL WINAPI user32.GetUserObjectSecurity(_In_ HANDLE hObj,_In_ PSECURITY_INFORMATION pSIRequested,_Inout_opt_ PSECURITY_DESCRIPTOR pSD,_In_ DWORD nLength,_Out_ LPDWORD lpnLengthNeeded)
BOOL WINAPI authz.AuthzInitializeContextFromToken(_In_ DWORD Flags,_In_ HANDLE TokenHandle,_In_ AUTHZ_RESOURCE_MANAGER_HANDLE hAuthzResourceManager,_In_opt_ PLARGE_INTEGER pExpirationTime,_In_ LUID Identifier,_In_opt_ PVOID DynamicGroupArgs,_Out_ PAUTHZ_CLIENT_CONTEXT_HANDLE phAuthzClientContext)
HRESULT None ole32.CoCancelCall(_In_ DWORD dwThreadId,_In_ ULONG ulTimeout)
BOOL WINAPI kernel32.DeriveCapabilitySidsFromName(_In_ LPCWSTR CapName,_Out_ PSID **CapabilityGroupSids,_Out_ DWORD *CapabilityGroupSidCount,_Out_ PSID **CapabilitySids,_Out_ DWORD *CapabilitySidCount)
BOOL WINAPI advapi32.AccessCheckByTypeResultListAndAuditAlarmByHandle(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ HANDLE ClientToken,_In_ LPCTSTR ObjectTypeName,_In_opt_ LPCTSTR ObjectName,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_opt_ PSID PrincipalSelfSid,_In_ DWORD DesiredAccess,_In_ AUDIT_EVENT_TYPE AuditType,_In_ DWORD Flags,_Inout_opt_ POBJECT_TYPE_LIST ObjectTypeList,_In_ DWORD ObjectTypeListLength,_In_ PGENERIC_MAPPING GenericMapping,_In_ BOOL ObjectCreation,_Out_ LPDWORD GrantedAccess,_Out_ LPDWORD AccessStatusList,_Out_ LPBOOL pfGenerateOnClose)
BOOL WINAPI advapi32.AccessCheckByTypeResultListAndAuditAlarmByHandleW(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ HANDLE ClientToken,_In_ LPCTSTR ObjectTypeName,_In_opt_ LPCTSTR ObjectName,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_opt_ PSID PrincipalSelfSid,_In_ DWORD DesiredAccess,_In_ AUDIT_EVENT_TYPE AuditType,_In_ DWORD Flags,_Inout_opt_ POBJECT_TYPE_LIST ObjectTypeList,_In_ DWORD ObjectTypeListLength,_In_ PGENERIC_MAPPING GenericMapping,_In_ BOOL ObjectCreation,_Out_ LPDWORD GrantedAccess,_Out_ LPDWORD AccessStatusList,_Out_ LPBOOL pfGenerateOnClose)
BOOL WINAPI advapi32.AccessCheckByTypeResultListAndAuditAlarmByHandleA(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ HANDLE ClientToken,_In_ LPCTSTR ObjectTypeName,_In_opt_ LPCTSTR ObjectName,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_opt_ PSID PrincipalSelfSid,_In_ DWORD DesiredAccess,_In_ AUDIT_EVENT_TYPE AuditType,_In_ DWORD Flags,_Inout_opt_ POBJECT_TYPE_LIST ObjectTypeList,_In_ DWORD ObjectTypeListLength,_In_ PGENERIC_MAPPING GenericMapping,_In_ BOOL ObjectCreation,_Out_ LPDWORD GrantedAccess,_Out_ LPDWORD AccessStatusList,_Out_ LPBOOL pfGenerateOnClose)
HLOCAL WINAPI kernel32.LocalHandle(_In_ LPCVOID pMem)
HRESULT None None.GetCurrentApartmentType([out] APTTYPE *pAptType)
VOID FORCEINLINE None.TpSetCallbackPriority(_Inout_ PTP_CALLBACK_ENVIRON CallbackEnviron,_In_ TP_CALLBACK_PRIORITY Priority)
HRESULT None ole32.CoQueryClientBlanket(_Out_opt_ DWORD *pAuthnSvc,_Out_opt_ DWORD *pAuthzSvc,_Out_opt_ OLECHAR **pServerPrincName,_Out_opt_ DWORD *pAuthnLevel,_Out_opt_ DWORD *pImpLevel,_Out_opt_ RPC_AUTHZ_HANDLE *pPrivs,_Inout_opt_ DWORD *pCapabilities)
VOID CALLBACK None.WaitCallback(_Inout_ PTP_CALLBACK_INSTANCE Instance,_Inout_opt_ PVOID Context,_Inout_ PTP_WAIT Wait,_In_ TP_WAIT_RESULT WaitResult)
BOOL None shell32.SHTestTokenMembership(_In_opt_ HANDLE hToken,ULONG ulRID None)
HRESULT None ole32.MonikerCommonPrefixWith(_In_ LPMONIKER pmkThis,_In_ LPMONIKER pmkOther,_Out_ LPMONIKER *ppmkCommon)
BOOL None shell32.SHInvokePrinterCommand(_In_opt_ HWND hwnd,UINT uAction None,_In_ LPCTSTR lpBuf1,_In_opt_ LPCTSTR lpBuf2,BOOL fModal None)
BOOL None shell32.SHInvokePrinterCommandW(_In_opt_ HWND hwnd,UINT uAction None,_In_ LPCTSTR lpBuf1,_In_opt_ LPCTSTR lpBuf2,BOOL fModal None)
BOOL None shell32.SHInvokePrinterCommandA(_In_opt_ HWND hwnd,UINT uAction None,_In_ LPCTSTR lpBuf1,_In_opt_ LPCTSTR lpBuf2,BOOL fModal None)
VOID None None.InitializeThreadpoolEnvironment(_Out_ PTP_CALLBACK_ENVIRON pcbe)
VOID WINAPI kernel32.WakeConditionVariable(_Inout_ PCONDITION_VARIABLE ConditionVariable)
void None None.FreeKnownFolderDefinitionFields(_In_ KNOWNFOLDER_DEFINITION *pKFD)
BOOL WINAPI advapi32.CreatePrivateObjectSecurity(_In_opt_ PSECURITY_DESCRIPTOR ParentDescriptor,_In_opt_ PSECURITY_DESCRIPTOR CreatorDescriptor,_Out_ PSECURITY_DESCRIPTOR *NewDescriptor,_In_ BOOL IsDirectoryObject,_In_opt_ HANDLE Token,_In_ PGENERIC_MAPPING GenericMapping)
BOOL WINAPI kernel32.GetProcessMitigationPolicy(_In_ HANDLE hProcess,_In_ PROCESS_MITIGATION_POLICY MitigationPolicy,_Out_ PVOID lpBuffer,_In_ SIZE_T dwLength)
VOID WINAPI kernel32.WaitForThreadpoolWorkCallbacks(_Inout_ PTP_WORK pwk,_In_ BOOL fCancelPendingCallbacks)
HRESULT None urlmon.CreateAsyncBindCtx(_In_ DWORD reserved,_In_ IBindStatusCallback *pBSCb,_In_ IEnumFORMATETC *pEFetc,_Out_ IBindCtx **ppBC)
HRESULT __stdcall None.DllUnregisterServer(void None None)
HRESULT None ole32.CoRegisterMessageFilter(_In_opt_ LPMESSAGEFILTER lpMessageFilter,_Out_opt_ LPMESSAGEFILTER *lplpMessageFilter)
void CALLBACK None.AuthzFreeGroupsCallback(_In_ PSID_AND_ATTRIBUTES pSidAttrArray)
ULONG None ole32.CoReleaseServerProcess(void None None)
HANDLE WINAPI kernel32.OpenSemaphore(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpName)
HANDLE WINAPI kernel32.OpenSemaphoreW(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpName)
HANDLE WINAPI kernel32.OpenSemaphoreA(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpName)
int None shlwapi.SHAnsiToUnicode(_In_ PCSTR pszSrc,_Out_ PWSTR pwszDst,int cwchBuf None)
void None ole32.CoFreeUnusedLibraries(void None None)
void None None.MyUpdateImage(LPCWSTR pszHashItem None,int iIndex None,UINT uFlags None,int iImageIndex None)
DWORD None kernel32.GetActiveProcessorCount(_In_ WORD GroupNumber)
HRESULT None shell32.StgMakeUniqueName(_In_ IStorage *pstgParent,_In_ PCWSTR pszFileSpec,_In_ DWORD grfMode,_In_ REFIID riid,_Out_ void **ppv)
HWND WINAPI user32.GetForegroundWindow(void None None)
NTSTATUS WINAPI ntdll.NtQueryInformationProcess(_In_ HANDLE ProcessHandle,_In_ PROCESSINFOCLASS ProcessInformationClass,_Out_ PVOID ProcessInformation,_In_ ULONG ProcessInformationLength,_Out_opt_ PULONG ReturnLength)
void None shell32.SHUpdateImage(_In_ LPCTSTR pszHashItem,_In_ int iIndex,_In_ UINT uFlags,_In_ int iImageIndex)
void None shell32.SHUpdateImageW(_In_ LPCTSTR pszHashItem,_In_ int iIndex,_In_ UINT uFlags,_In_ int iImageIndex)
void None shell32.SHUpdateImageA(_In_ LPCTSTR pszHashItem,_In_ int iIndex,_In_ UINT uFlags,_In_ int iImageIndex)
HRESULT None ole32.CoGetInterfaceAndReleaseStream(_In_ LPSTREAM pStm,_In_ REFIID iid,_Out_ LPVOID *ppv)
VOID WINAPI kernel32.SubmitThreadpoolWork(_Inout_ PTP_WORK pwk)
BOOL WINAPI kernel32.TrySubmitThreadpoolCallback(_In_ PTP_SIMPLE_CALLBACK pfns,_Inout_opt_ PVOID pv,_In_opt_ PTP_CALLBACK_ENVIRON pcbe)
UINT None msi.MsiIsProductElevated(_In_ LPCTSTR szProductCode,_Out_ BOOL *pfElevated)
UINT None msi.MsiIsProductElevatedW(_In_ LPCTSTR szProductCode,_Out_ BOOL *pfElevated)
UINT None msi.MsiIsProductElevatedA(_In_ LPCTSTR szProductCode,_Out_ BOOL *pfElevated)
int None shell32.SHHandleUpdateImage(_In_ PCIDLIST_ABSOLUTE pidlExtra)
UINT None msi.MsiEnumFeatures(_In_ LPCTSTR szProduct,_In_ DWORD iFeatureIndex,_Out_ LPTSTR lpFeatureBuf,_Out_ LPTSTR lpParentBuf)
UINT None msi.MsiEnumFeaturesW(_In_ LPCTSTR szProduct,_In_ DWORD iFeatureIndex,_Out_ LPTSTR lpFeatureBuf,_Out_ LPTSTR lpParentBuf)
UINT None msi.MsiEnumFeaturesA(_In_ LPCTSTR szProduct,_In_ DWORD iFeatureIndex,_Out_ LPTSTR lpFeatureBuf,_Out_ LPTSTR lpParentBuf)
BOOL WINAPI advapi32.ObjectDeleteAuditAlarm(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ BOOL GenerateOnClose)
BOOL WINAPI advapi32.ObjectDeleteAuditAlarmW(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ BOOL GenerateOnClose)
BOOL WINAPI advapi32.ObjectDeleteAuditAlarmA(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ BOOL GenerateOnClose)
UINT None msi.MsiGetProductCode(_In_ LPCTSTR szComponent,_Out_ LPTSTR lpProductBuf)
UINT None msi.MsiGetProductCodeW(_In_ LPCTSTR szComponent,_Out_ LPTSTR lpProductBuf)
UINT None msi.MsiGetProductCodeA(_In_ LPCTSTR szComponent,_Out_ LPTSTR lpProductBuf)
int None comctl32.EnumMRUListW(_In_ HANDLE hMRU,_In_ int nItem,_Out_ void *lpData,_In_ UINT uLen)
int None comctl32.EnumMRUListW(_In_ HANDLE hMRU,_In_ int nItem,_Out_ void *lpData,_In_ UINT uLen)
HRESULT None shlwapi.SHGetInverseCMAP(_Out_ BYTE *pbMap,_In_ ULONG cbMap)
HRESULT None ole32.CoGetContextToken(_Out_ ULONG_PTR *pToken)
typedef None None.HRESULT(CALLBACK *LPFNDFMCALLBACK None)
VOID WINAPI kernel32.ExitThread(_In_ DWORD dwExitCode)
PUIDLIST_RELATIVE None None.ILSkip(_In_ PUIDLIST_RELATIVE pidl,UINT cb None)
HRESULT None shell32.SHGetAttributesFromDataObject(_In_opt_ IDataObject *pdo,DWORD dwAttributeMask None,_Out_opt_ DWORD *pdwAttributes,_Out_opt_ UINT *pcItems)
VOID CALLBACK None.IoCompletionCallback(_Inout_ PTP_CALLBACK_INSTANCE Instance,_Inout_opt_ PVOID Context,_Inout_opt_ PVOID Overlapped,_In_ ULONG IoResult,_In_ ULONG_PTR NumberOfBytesTransferred,_Inout_ PTP_IO Io)
HRESULT None shell32.SHGetIDListFromObject(_In_ IUnknown *punk,_Out_ PIDLIST_ABSOLUTE *ppidl)
BOOL None kernel32.GetNumaNodeProcessorMaskEx(_In_ USHORT Node,_Out_ PGROUP_AFFINITY ProcessorMask)
UINT None msi.MsiSourceListClearMediaDisk(_In_ LPCTSTR szProductCodeOrPatchCode,_In_opt_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD dwOptions,_In_ DWORD dwDiskID)
UINT None msi.MsiSourceListClearMediaDiskW(_In_ LPCTSTR szProductCodeOrPatchCode,_In_opt_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD dwOptions,_In_ DWORD dwDiskID)
UINT None msi.MsiSourceListClearMediaDiskA(_In_ LPCTSTR szProductCodeOrPatchCode,_In_opt_ LPCTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ DWORD dwOptions,_In_ DWORD dwDiskID)
ULONG WINAPI ntdll.NtGetCurrentProcessorNumber(void None None)
VOID WINAPI kernel32.FreeMemoryJobObject(_In_ VOID *Buffer)
int None shlwapi.ShellMessageBox(_In_ HINSTANCE hInst,_In_ HWND hWnd,_In_ LPCTSTR pszMsg,_In_ LPCTSTR pszTitle,_In_ UINT fuStyle,_In_ ... None)
int None shlwapi.ShellMessageBoxW(_In_ HINSTANCE hInst,_In_ HWND hWnd,_In_ LPCTSTR pszMsg,_In_ LPCTSTR pszTitle,_In_ UINT fuStyle,_In_ ... None)
int None shlwapi.ShellMessageBoxA(_In_ HINSTANCE hInst,_In_ HWND hWnd,_In_ LPCTSTR pszMsg,_In_ LPCTSTR pszTitle,_In_ UINT fuStyle,_In_ ... None)
PIDLIST_RELATIVE None shell32.ILAppendID(_In_opt_ PIDLIST_RELATIVE pidl,_In_ LPSHITEMID pmkid,BOOL fAppend None)
HRESULT None mobsync.GetMostRecentRunTime([out] SYSTEMTIME *pstRecentRun)
HRESULT None ole32.CoGetObjectContext(_In_ REFIID riid,_Out_ LPVOID *ppv)
HANDLE WINAPI kernel32.CreateSemaphore(_In_opt_ LPSECURITY_ATTRIBUTES lpSemaphoreAttributes,_In_ LONG lInitialCount,_In_ LONG lMaximumCount,_In_opt_ LPCTSTR lpName)
HANDLE WINAPI kernel32.CreateSemaphoreW(_In_opt_ LPSECURITY_ATTRIBUTES lpSemaphoreAttributes,_In_ LONG lInitialCount,_In_ LONG lMaximumCount,_In_opt_ LPCTSTR lpName)
HANDLE WINAPI kernel32.CreateSemaphoreA(_In_opt_ LPSECURITY_ATTRIBUTES lpSemaphoreAttributes,_In_ LONG lInitialCount,_In_ LONG lMaximumCount,_In_opt_ LPCTSTR lpName)
BOOL WINAPI user32.PhysicalToLogicalPoint(_In_ HWND hWnd,_Inout_ LPPOINT lpPoint)
PIDLIST_RELATIVE None shell32.ILClone(_In_ PCUIDLIST_RELATIVE pidl)
int None ws2_32.WSARecvDisconnect(_In_ SOCKET s,_Out_ LPWSABUF lpInboundDisconnectData)
VOID WINAPI kernel32.SetThreadpoolTimer(_Inout_ PTP_TIMER pti,_In_opt_ PFILETIME pftDueTime,_In_ DWORD msPeriod,_In_opt_ DWORD msWindowLength)
HANDLE WINAPI kernel32.CreateJobObject(_In_opt_ LPSECURITY_ATTRIBUTES lpJobAttributes,_In_opt_ LPCTSTR lpName)
HANDLE WINAPI kernel32.CreateJobObjectW(_In_opt_ LPSECURITY_ATTRIBUTES lpJobAttributes,_In_opt_ LPCTSTR lpName)
HANDLE WINAPI kernel32.CreateJobObjectA(_In_opt_ LPSECURITY_ATTRIBUTES lpJobAttributes,_In_opt_ LPCTSTR lpName)
BOOL WINAPI advapi32.EqualDomainSid(_In_ PSID pSid1,_In_ PSID pSid2,_Out_ BOOL *pfEqual)
UINT None msi.MsiAdvertiseProductEx(_In_ LPCTSTR szPackagePath,_In_ LPCTSTR szScriptfilePath,_In_ LPCTSTR szTransforms,_In_ LANGID lgidLanguage,_In_ DWORD dwPlatform,_In_ DWORD dwOptions)
UINT None msi.MsiAdvertiseProductExW(_In_ LPCTSTR szPackagePath,_In_ LPCTSTR szScriptfilePath,_In_ LPCTSTR szTransforms,_In_ LANGID lgidLanguage,_In_ DWORD dwPlatform,_In_ DWORD dwOptions)
UINT None msi.MsiAdvertiseProductExA(_In_ LPCTSTR szPackagePath,_In_ LPCTSTR szScriptfilePath,_In_ LPCTSTR szTransforms,_In_ LANGID lgidLanguage,_In_ DWORD dwPlatform,_In_ DWORD dwOptions)
HRESULT None ole32.CoInvalidateRemoteMachineBindings(_In_ LPOLESTR pszMachineName)
BOOL CALLBACK None.AuthzAccessCheckCallback(_In_ AUTHZ_CLIENT_CONTEXT_HANDLE hAuthzClientContext,_In_ PACE_HEADER pAce,_In_opt_ PVOID pArgs,_Inout_ PBOOL pbAceApplicable)
HRESULT None shell32.SHRemoveLocalizedName(_In_ PCWSTR pszPath)
HRESULT WINAPI userenv.DeriveAppContainerSidFromAppContainerName(_In_ PCWSTR pszAppContainerName,_Out_ PSID *ppsidAppContainerSid)
HRESULT None ole32.CoRegisterMallocSpy(_In_ LPMALLOCSPY pMallocSpy)
BOOL None ws2_32.WSAResetEvent(_In_ WSAEVENT hEvent)
DWORD None kernel32.GetMaximumProcessorCount(_In_ WORD GroupNumber)
HRESULT None shell32.SHOpenFolderAndSelectItems(_In_ PCIDLIST_ABSOLUTE pidlFolder,UINT cidl None,_In_opt_ PCUITEMID_CHILD_ARRAY apidl,DWORD dwFlags None)
VOID WINAPI kernel32.GetCurrentThreadStackLimits(_Out_ PULONG_PTR LowLimit,_Out_ PULONG_PTR HighLimit)
HRESULT None ole32.CoGetPSClsid(_In_ REFIID riid,_Out_ CLSID *pClsid)
DWORD WINAPI kernel32.SetIoRateControlInformationJobObject(_In_ HANDLE hJob,_In_ JOBOBJECT_IO_RATE_CONTROL_INFORMATION *IoRateControlInfo)
VOID None mswsock.RIOCloseCompletionQueue(_In_ RIO_CQ CQ)
PIDLIST_ABSOLUTE None shell32.SHCloneSpecialIDList(HWND hwndOwner None,_In_ int csidl,_In_ BOOL fCreate)
void None shell32.SHFreeNameMappings(_In_opt_ HANDLE hNameMappings)
BOOL WINAPI kernel32.GetExitCodeProcess(_In_ HANDLE hProcess,_Out_ LPDWORD lpExitCode)
BOOL None shell32.WriteCabinetState(_In_ CABINETSTATE *pcs)
PTP_WAIT WINAPI kernel32.CreateThreadpoolWait(_In_ PTP_WAIT_CALLBACK pfnwa,_Inout_opt_ PVOID pv,_In_opt_ PTP_CALLBACK_ENVIRON pcbe)
HRESULT WINAPI kernel32.SetThreadDescription(_In_ HANDLE hThread,_In_ PCWSTR lpThreadDescription)
VOID WINAPI kernel32.DisassociateCurrentThreadFromCallback(_Inout_ PTP_CALLBACK_INSTANCE pci)
BOOL WINAPI advapi32.SetSecurityDescriptorControl(_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_ SECURITY_DESCRIPTOR_CONTROL ControlBitsOfInterest,_In_ SECURITY_DESCRIPTOR_CONTROL ControlBitsToSet)
BOOL WINAPI kernel32.GetNumaProximityNode(_In_ ULONG ProximityId,_Out_ PUCHAR NodeNumber)
HRESULT None shell32.SHCreateDefaultExtractIcon(REFIID riid None,_Out_ void **ppv)
BOOL WINAPI userenv.GetUserProfileDirectory(_In_ HANDLE hToken,_Out_opt_ LPTSTR lpProfileDir,_Inout_ LPDWORD lpcchSize)
BOOL WINAPI userenv.GetUserProfileDirectoryW(_In_ HANDLE hToken,_Out_opt_ LPTSTR lpProfileDir,_Inout_ LPDWORD lpcchSize)
BOOL WINAPI userenv.GetUserProfileDirectoryA(_In_ HANDLE hToken,_Out_opt_ LPTSTR lpProfileDir,_Inout_ LPDWORD lpcchSize)
BOOL None mswsock.RIOResizeRequestQueue(_In_ RIO_RQ RQ,_In_ DWORD MaxOutstandingReceive,_In_ DWORD MaxOutstandingSend)
BOOL WINAPI kernel32.UnregisterWaitEx(_In_ HANDLE WaitHandle,_In_opt_ HANDLE CompletionEvent)
HRESULT None shell32.SHGetInstanceExplorer(_Out_ IUnknown **ppunk)
BOOL WINAPI kernel32.IsThreadpoolTimerSet(_Inout_ PTP_TIMER pti)
BOOL WINAPI advapi32.IsWellKnownSid(_In_ PSID pSid,_In_ WELL_KNOWN_SID_TYPE WellKnownSidType)
BOOL WINAPI user32.AnyPopup(void None None)
BOOL WINAPI kernel32.CreateUmsCompletionList(_Out_ PUMS_COMPLETION_LIST *UmsCompletionList)
UINT None msi.MsiEnumProductsEx(_In_opt_ LPCTSTR szProductCode,_In_ LPCTSTR szUserSid,_In_ DWORD dwContext,_In_ DWORD dwIndex,_Out_opt_ TCHAR szInstalledProductCode[39],_Out_opt_ MSIINSTALLCONTEXT *pdwInstalledContext,_Out_opt_ LPTSTR szSid,_Inout_opt_ LPDWORD pcchSid)
UINT None msi.MsiEnumProductsExW(_In_opt_ LPCTSTR szProductCode,_In_ LPCTSTR szUserSid,_In_ DWORD dwContext,_In_ DWORD dwIndex,_Out_opt_ TCHAR szInstalledProductCode[39],_Out_opt_ MSIINSTALLCONTEXT *pdwInstalledContext,_Out_opt_ LPTSTR szSid,_Inout_opt_ LPDWORD pcchSid)
UINT None msi.MsiEnumProductsExA(_In_opt_ LPCTSTR szProductCode,_In_ LPCTSTR szUserSid,_In_ DWORD dwContext,_In_ DWORD dwIndex,_Out_opt_ TCHAR szInstalledProductCode[39],_Out_opt_ MSIINSTALLCONTEXT *pdwInstalledContext,_Out_opt_ LPTSTR szSid,_Inout_opt_ LPDWORD pcchSid)
BOOL CALLBACK None.AuthzComputeGroupsCallback(_In_ AUTHZ_CLIENT_CONTEXT_HANDLE hAuthzClientContext,_In_ PVOID Args,_Out_ PSID_AND_ATTRIBUTES *pSidAttrArray,_Out_ PDWORD pSidCount,_Out_ PSID_AND_ATTRIBUTES *pRestrictedSidAttrArray,_Out_ PDWORD pRestrictedSidCount)
BOOL WINAPI advapi32.AccessCheckByTypeResultListAndAuditAlarm(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ LPCTSTR ObjectTypeName,_In_opt_ LPCTSTR ObjectName,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_opt_ PSID PrincipalSelfSid,_In_ DWORD DesiredAccess,_In_ AUDIT_EVENT_TYPE AuditType,_In_ DWORD Flags,_Inout_opt_ POBJECT_TYPE_LIST ObjectTypeList,_In_ DWORD ObjectTypeListLength,_In_ PGENERIC_MAPPING GenericMapping,_In_ BOOL ObjectCreation,_Out_ LPDWORD GrantedAccess,_Out_ LPDWORD AccessStatusList,_Out_ LPBOOL pfGenerateOnClose)
BOOL WINAPI advapi32.AccessCheckByTypeResultListAndAuditAlarmW(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ LPCTSTR ObjectTypeName,_In_opt_ LPCTSTR ObjectName,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_opt_ PSID PrincipalSelfSid,_In_ DWORD DesiredAccess,_In_ AUDIT_EVENT_TYPE AuditType,_In_ DWORD Flags,_Inout_opt_ POBJECT_TYPE_LIST ObjectTypeList,_In_ DWORD ObjectTypeListLength,_In_ PGENERIC_MAPPING GenericMapping,_In_ BOOL ObjectCreation,_Out_ LPDWORD GrantedAccess,_Out_ LPDWORD AccessStatusList,_Out_ LPBOOL pfGenerateOnClose)
BOOL WINAPI advapi32.AccessCheckByTypeResultListAndAuditAlarmA(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ LPCTSTR ObjectTypeName,_In_opt_ LPCTSTR ObjectName,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_opt_ PSID PrincipalSelfSid,_In_ DWORD DesiredAccess,_In_ AUDIT_EVENT_TYPE AuditType,_In_ DWORD Flags,_Inout_opt_ POBJECT_TYPE_LIST ObjectTypeList,_In_ DWORD ObjectTypeListLength,_In_ PGENERIC_MAPPING GenericMapping,_In_ BOOL ObjectCreation,_Out_ LPDWORD GrantedAccess,_Out_ LPDWORD AccessStatusList,_Out_ LPBOOL pfGenerateOnClose)
VOID WINAPI kernel32.CloseThreadpool(_Inout_ PTP_POOL ptpp)
INSTALLSTATE None msi.MsiQueryProductState(_In_ LPCTSTR szProduct)
INSTALLSTATE None msi.MsiQueryProductStateW(_In_ LPCTSTR szProduct)
INSTALLSTATE None msi.MsiQueryProductStateA(_In_ LPCTSTR szProduct)
BOOL WINAPI ntdll.IsProcessCritical(_In_ HANDLE hProcess,_Out_ PBOOL Critical)
BOOL WINAPI avrt.AvRtDeleteThreadOrderingGroup(_In_ HANDLE Context)
HRESULT WINAPI userenv.DeriveRestrictedAppContainerSidFromAppContainerSidAndRestrictedName(_In_ PSID psidAppContainerSid,_In_ PCWSTR pszRestrictedAppContainerName,_Out_ PSID *ppsidRestrictedAppContainerSid)
HRESULT None None.EnumRunning([out] IEnumMoniker **ppenumMoniker)
BOOL WINAPI kernel32.InitOnceBeginInitialize(_Inout_ LPINIT_ONCE lpInitOnce,_In_ DWORD dwFlags,_Out_ PBOOL fPending,_Out_opt_ LPVOID *lpContext)
HRESULT None ole32.CoInitializeSecurity(_In_opt_ PSECURITY_DESCRIPTOR pSecDesc,_In_ LONG cAuthSvc,_In_opt_ SOLE_AUTHENTICATION_SERVICE *asAuthSvc,_In_opt_ void *pReserved1,_In_ DWORD dwAuthnLevel,_In_ DWORD dwImpLevel,_In_opt_ void *pAuthList,_In_ DWORD dwCapabilities,_In_opt_ void *pReserved3)
UINT WINAPI kernel32.WinExec(_In_ LPCSTR lpCmdLine,_In_ UINT uCmdShow)
DWORD None user32.GetWindowContextHelpId(HWND hwnd None)
HANDLE WINAPI kernel32.OpenSemaphore(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpName)
HANDLE WINAPI kernel32.OpenSemaphoreW(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpName)
HANDLE WINAPI kernel32.OpenSemaphoreA(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpName)
int None shell32.DriveType(_In_ int iDrive)
HRESULT None shell32.SHGetImageList(_In_ int iImageList,_In_ REFIID riid,_Out_ void **ppv)
VOID WINAPI kernel32.Sleep(_In_ DWORD dwMilliseconds)
HRESULT None shell32.SHCreateShellItemArrayFromShellItem(_In_ IShellItem *psi,_In_ REFIID riid,_Out_ void **ppv)
USERINFOSTATE None msi.MsiGetUserInfo(_In_ LPCTSTR szProduct,_Out_ LPTSTR lpUserNameBuf,_Inout_ DWORD *pcchUserNameBuf,_Out_ LPTSTR lpOrgNameBuf,_Inout_ DWORD *pcchOrgNameBuf,_In_ LPTSTR lpSerialBuf,_Inout_ DWORD *pcchSerialBuf)
USERINFOSTATE None msi.MsiGetUserInfoW(_In_ LPCTSTR szProduct,_Out_ LPTSTR lpUserNameBuf,_Inout_ DWORD *pcchUserNameBuf,_Out_ LPTSTR lpOrgNameBuf,_Inout_ DWORD *pcchOrgNameBuf,_In_ LPTSTR lpSerialBuf,_Inout_ DWORD *pcchSerialBuf)
USERINFOSTATE None msi.MsiGetUserInfoA(_In_ LPCTSTR szProduct,_Out_ LPTSTR lpUserNameBuf,_Inout_ DWORD *pcchUserNameBuf,_Out_ LPTSTR lpOrgNameBuf,_Inout_ DWORD *pcchOrgNameBuf,_In_ LPTSTR lpSerialBuf,_Inout_ DWORD *pcchSerialBuf)
HRESULT None ole32.CoSetProxyBlanket(_In_ IUnknown *pProxy,_In_ DWORD dwAuthnSvc,_In_ DWORD dwAuthzSvc,_In_opt_ OLECHAR *pServerPrincName,_In_ DWORD dwAuthnLevel,_In_ DWORD dwImpLevel,_In_opt_ RPC_AUTH_IDENTITY_HANDLE pAuthInfo,_In_ DWORD dwCapabilities)
PUMS_CONTEXT WINAPI kernel32.GetNextUmsListItem(_Inout_ PUMS_CONTEXT UmsContext)
HWND WINAPI user32.GetAncestor(_In_ HWND hwnd,_In_ UINT gaFlags)
BOOL WINAPI kernel32.CreateProcess(_In_opt_ LPCTSTR lpApplicationName,_Inout_opt_ LPTSTR lpCommandLine,_In_opt_ LPSECURITY_ATTRIBUTES lpProcessAttributes,_In_opt_ LPSECURITY_ATTRIBUTES lpThreadAttributes,_In_ BOOL bInheritHandles,_In_ DWORD dwCreationFlags,_In_opt_ LPVOID lpEnvironment,_In_opt_ LPCTSTR lpCurrentDirectory,_In_ LPSTARTUPINFO lpStartupInfo,_Out_ LPPROCESS_INFORMATION lpProcessInformation)
BOOL WINAPI kernel32.CreateProcessW(_In_opt_ LPCTSTR lpApplicationName,_Inout_opt_ LPTSTR lpCommandLine,_In_opt_ LPSECURITY_ATTRIBUTES lpProcessAttributes,_In_opt_ LPSECURITY_ATTRIBUTES lpThreadAttributes,_In_ BOOL bInheritHandles,_In_ DWORD dwCreationFlags,_In_opt_ LPVOID lpEnvironment,_In_opt_ LPCTSTR lpCurrentDirectory,_In_ LPSTARTUPINFO lpStartupInfo,_Out_ LPPROCESS_INFORMATION lpProcessInformation)
BOOL WINAPI kernel32.CreateProcessA(_In_opt_ LPCTSTR lpApplicationName,_Inout_opt_ LPTSTR lpCommandLine,_In_opt_ LPSECURITY_ATTRIBUTES lpProcessAttributes,_In_opt_ LPSECURITY_ATTRIBUTES lpThreadAttributes,_In_ BOOL bInheritHandles,_In_ DWORD dwCreationFlags,_In_opt_ LPVOID lpEnvironment,_In_opt_ LPCTSTR lpCurrentDirectory,_In_ LPSTARTUPINFO lpStartupInfo,_Out_ LPPROCESS_INFORMATION lpProcessInformation)
HPROPSHEETPAGE WINAPI aclui.CreateSecurityPage(_In_ LPSECURITYINFO psi)
BOOL WINAPI advapi32.AdjustTokenPrivileges(_In_ HANDLE TokenHandle,_In_ BOOL DisableAllPrivileges,_In_opt_ PTOKEN_PRIVILEGES NewState,_In_ DWORD BufferLength,_Out_opt_ PTOKEN_PRIVILEGES PreviousState,_Out_opt_ PDWORD ReturnLength)
BOOL WINAPI kernel32.GetNumaHighestNodeNumber(_Out_ PULONG HighestNodeNumber)
HANDLE WINAPI kernel32.OpenThread(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ DWORD dwThreadId)
HRESULT None ole32.CoInitialize(_In_opt_ LPVOID pvReserved)
BOOL None ole32.IsAccelerator(_In_ HACCEL hAccel,_In_ int cAccelEntries,_In_ LPMSG lpMsg,_Out_ WORD *lpwCmd)
BOOL None shell32.SHGetPathFromIDListEx(_In_ PCIDLIST_ABSOLUTE pidl,_Out_ PWSTR pszPath,DWORD cchPath None,GPFIDL_FLAGS uOpts None)
VOID None None.SetThreadpoolCallbackPersistent(_Inout_ PTP_CALLBACK_ENVIRON pcbe)
VOID FORCEINLINE None.TpSetCallbackCleanupGroup(_Inout_ PTP_CALLBACK_ENVIRON CallbackEnviron,_In_ PTP_CLEANUP_GROUP CleanupGroup,_In_opt_ PTP_CLEANUP_GROUP_CANCEL_CALLBACK CleanupGroupCancelCallback)
BOOL WINAPI kernel32.SetUmsThreadInformation(_In_ PUMS_CONTEXT UmsThread,_In_ UMS_THREAD_INFO_CLASS UmsThreadInfoClass,_In_ PVOID UmsThreadInformation,_In_ ULONG UmsThreadInformationLength)
int None comctl32.FreeMRUList(_In_ HANDLE hMRU)
BOOL None None.ILIsAligned(_In_ PCUIDLIST_RELATIVE pidl)
BOOL WINAPI kernel32.AddSIDToBoundaryDescriptor(_Inout_ HANDLE *BoundaryDescriptor,_In_ PSID RequiredSid)
BOOL None shell32.SHRunControlPanel(_In_ PCWSTR lpcszCmdLine,_In_opt_ HWND hwndMsgParent)
VOID CALLBACK None.FiberProc(_In_ PVOID lpParameter)
BOOL WINAPI kernel32.GetProcessIoCounters(_In_ HANDLE hProcess,_Out_ PIO_COUNTERS lpIoCounters)
HRESULT None ole32.CoGetStandardMarshal(_In_ REFIID riid,_In_ LPUNKNOWN pUnk,_In_ DWORD dwDestContext,_In_opt_ LPVOID pvDestContext,_In_ DWORD mshlflags,_Out_ LPMARSHAL *ppMarshal)
HWND WINAPI user32.WindowFromPoint(_In_ POINT Point)
HRESULT None None.WalkFrame([in] DWORD walkWhat,[in] ICallFrameWalker *pWalker)
BOOL None shell32.InitNetworkAddressControl(void None None)
HRESULT None shell32.SHCreateQueryCancelAutoPlayMoniker(_Out_ IMoniker **ppmoniker)
DWORD WINAPI kernel32.SuspendThread(_In_ HANDLE hThread)
UINT None msi.MsiAdvertiseProduct(_In_ LPCTSTR szPackagePath,_In_ LPCTSTR szScriptfilePath,_In_ LPCTSTR szTransforms,_In_ LANGID lgidLanguage)
UINT None msi.MsiAdvertiseProductW(_In_ LPCTSTR szPackagePath,_In_ LPCTSTR szScriptfilePath,_In_ LPCTSTR szTransforms,_In_ LANGID lgidLanguage)
UINT None msi.MsiAdvertiseProductA(_In_ LPCTSTR szPackagePath,_In_ LPCTSTR szScriptfilePath,_In_ LPCTSTR szTransforms,_In_ LANGID lgidLanguage)
void None ole32.CoFreeAllLibraries(void None None)
BOOL WINAPI advapi32.IsValidAcl(_In_ PACL pAcl)
BOOL None ole32.OleIsRunning(_In_ LPOLEOBJECT pObject)
HRESULT None mobsync.EnumItems([in] REFCLSID pHandlerID,[in] IEnumSyncItems **ppEnumItems)
BOOL WINAPI kernel32.AssignProcessToJobObject(_In_ HANDLE hJob,_In_ HANDLE hProcess)
BOOL WINAPI kernel32.ExecuteUmsThread(_Inout_ PUMS_CONTEXT UmsThread)
UINT None msi.MsiQueryComponentState(_In_ LPTSTR szProductCode,_In_ LPTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ LPCTSTR szComponent,_Out_ INSTALLSTATE *pdwState)
UINT None msi.MsiQueryComponentStateW(_In_ LPTSTR szProductCode,_In_ LPTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ LPCTSTR szComponent,_Out_ INSTALLSTATE *pdwState)
UINT None msi.MsiQueryComponentStateA(_In_ LPTSTR szProductCode,_In_ LPTSTR szUserSid,_In_ MSIINSTALLCONTEXT dwContext,_In_ LPCTSTR szComponent,_Out_ INSTALLSTATE *pdwState)
HRESULT None shell32.SHStartNetConnectionDialog(_In_opt_ HWND hwnd,_In_opt_ LPCTSTR pszRemoteName,DWORD dwType None)
HRESULT None shell32.SHStartNetConnectionDialogW(_In_opt_ HWND hwnd,_In_opt_ LPCTSTR pszRemoteName,DWORD dwType None)
HRESULT None shell32.SHStartNetConnectionDialogA(_In_opt_ HWND hwnd,_In_opt_ LPCTSTR pszRemoteName,DWORD dwType None)
VOID None None.UmsSchedulerProc(_In_ UMS_SCHEDULER_REASON Reason,_In_ ULONG_PTR ActivationPayload,_In_ PVOID SchedulerParam)
UINT None shell32.SHReplaceFromPropSheetExtArray(_In_ HPSXA hpsxa,UINT uPageID None,_In_ LPFNADDPROPSHEETPAGE lpfnReplaceWith,LPARAM lParam None)
BOOL WINAPI kernel32.GetProcessShutdownParameters(_Out_ LPDWORD lpdwLevel,_Out_ LPDWORD lpdwFlags)
int None ws2_32.WSASendMsg(_In_ SOCKET s,_In_ LPWSAMSG lpMsg,_In_ DWORD dwFlags,_Out_ LPDWORD lpNumberOfBytesSent,_In_ LPWSAOVERLAPPED lpOverlapped,_In_ LPWSAOVERLAPPED_COMPLETION_ROUTINE lpCompletionRoutine)
BOOL None shell32.SHCreateProcessAsUserW(_Inout_ PSHCREATEPROCESSINFOW pscpi)
BOOL None shell32.SHCreateProcessAsUserW(_Inout_ PSHCREATEPROCESSINFOW pscpi)
DWORD_PTR None shell32.SHGetFileInfo(_In_ LPCTSTR pszPath,DWORD dwFileAttributes None,_Inout_ SHFILEINFO *psfi,UINT cbFileInfo None,UINT uFlags None)
DWORD_PTR None shell32.SHGetFileInfoW(_In_ LPCTSTR pszPath,DWORD dwFileAttributes None,_Inout_ SHFILEINFO *psfi,UINT cbFileInfo None,UINT uFlags None)
DWORD_PTR None shell32.SHGetFileInfoA(_In_ LPCTSTR pszPath,DWORD dwFileAttributes None,_Inout_ SHFILEINFO *psfi,UINT cbFileInfo None,UINT uFlags None)
BOOL WINAPI kernel32.SetProcessAffinityUpdateMode(_In_ HANDLE ProcessHandle,_In_ DWORD dwFlags)
HRESULT None mobsync.GetNextRunTime([out] SYSTEMTIME *pstNextRun)
BOOL None shell32.SHGetDiskFreeSpace(LPCTSTR pszVolume None,ULARGE_INTEGER *pqwFreeCaller None,ULARGE_INTEGER *pqwTot None,ULARGE_INTEGER *pqwFree None)
HRESULT None ole32.CoCreateInstance(_In_ REFCLSID rclsid,_In_ LPUNKNOWN pUnkOuter,_In_ DWORD dwClsContext,_In_ REFIID riid,_Out_ LPVOID *ppv)
BOOL WINAPI kernel32.GetProcessDefaultCpuSets(_In_ HANDLE Process,_Out_opt_ PULONG CpuSetIds,_In_ ULONG CpuSetIdCount,_Out_ PULONG RequiredIdCount)
BOOL WINAPI kernel32.QueueUserWorkItem(_In_ LPTHREAD_START_ROUTINE Function,_In_opt_ PVOID Context,_In_ ULONG Flags)
BOOL WINAPI kernel32.SetPriorityClass(_In_ HANDLE hProcess,_In_ DWORD dwPriorityClass)
HRESULT None shell32.SHCreateItemWithParent(_In_ PCIDLIST_ABSOLUTE pidlParent,_In_ IShellFolder *psfParent,_In_ PCUITEMID_CHILD pidl,_In_ REFIID riid,_Out_ void **ppvItem)
HRESULT None shell32.GetCurrentProcessExplicitAppUserModelID(_Out_ PWSTR *AppID)
BOOL WINAPI kernel32.ReleaseSemaphore(_In_ HANDLE hSemaphore,_In_ LONG lReleaseCount,_Out_opt_ LPLONG lpPreviousCount)
VOID None None.WinExecError(_In_ HWND hwnd,_In_ int error,_In_ LPCTSTR lpstrFileName,_In_ LPCTSTR lpstrTitle)
HRESULT None shell32.SHGetKnownFolderIDList(_In_ REFKNOWNFOLDERID rfid,_In_ DWORD dwFlags,_In_ HANDLE hToken,_Out_ PIDLIST_ABSOLUTE *ppidl)
VOID FORCEINLINE None.TpSetCallbackRaceWithDll(_Inout_ PTP_CALLBACK_ENVIRON CallbackEnviron,_In_ PVOID DllHandle)
BOOL WINAPI authz.AuthzSetAppContainerInformation(_In_ AUTHZ_CLIENT_CONTEXT_HANDLE hAuthzClientContext,_In_ PSID pAppContainerSid,_In_ DWORD CapabilityCount,_In_opt_ PSID_AND_ATTRIBUTES pCapabilitySids[CapabilityCount])
int WSPAPI ws2_32.WSCDeinstallProvider(_In_ LPGUID lpProviderId,_Out_ LPINT lpErrno)
VOID FORCEINLINE None.TpSetCallbackNoActivationContext(_Inout_ PTP_CALLBACK_ENVIRON CallbackEnviron)
HRESULT None shell32.SHDefExtractIcon(_In_ LPCTSTR pszIconFile,int iIndex None,_In_ UINT uFlags,_Out_opt_ HICON *phiconLarge,_Out_opt_ HICON *phiconSmall,UINT nIconSize None)
HRESULT None shell32.SHDefExtractIconW(_In_ LPCTSTR pszIconFile,int iIndex None,_In_ UINT uFlags,_Out_opt_ HICON *phiconLarge,_Out_opt_ HICON *phiconSmall,UINT nIconSize None)
HRESULT None shell32.SHDefExtractIconA(_In_ LPCTSTR pszIconFile,int iIndex None,_In_ UINT uFlags,_Out_opt_ HICON *phiconLarge,_Out_opt_ HICON *phiconSmall,UINT nIconSize None)
LONG None shell32.PathProcessCommand(_In_ PCWSTR pszSrc,_Out_ PWSTR pszDest,int iDestMax None,DWORD dwFlags None)
DWORD WINAPI kernel32.GetThreadId(_In_ HANDLE Thread)
BOOL WINAPI kernel32.SetEnvironmentVariable(_In_ LPCTSTR lpName,_In_opt_ LPCTSTR lpValue)
BOOL WINAPI kernel32.SetEnvironmentVariableW(_In_ LPCTSTR lpName,_In_opt_ LPCTSTR lpValue)
BOOL WINAPI kernel32.SetEnvironmentVariableA(_In_ LPCTSTR lpName,_In_opt_ LPCTSTR lpValue)
BOOL None kernel32.QueryThreadpoolStackInformation(_In_ PTP_POOL ptpp,_Out_ PTP_POOL_STACK_INFORMATION ptpsi)
BOOL None shlwapi.SHUnlockShared(_In_ void *pvData)
HRESULT None msi.MsiGetFileSignatureInformation(_In_ LPCTSTR szSignedObjectPath,_In_ DWORD dwFlags,_Out_ PCCERT_CONTEXT *ppcCertContext,_Out_ BYTE *pbHashData,_Inout_ DWORD *pcbHashData)
HRESULT None msi.MsiGetFileSignatureInformationW(_In_ LPCTSTR szSignedObjectPath,_In_ DWORD dwFlags,_Out_ PCCERT_CONTEXT *ppcCertContext,_Out_ BYTE *pbHashData,_Inout_ DWORD *pcbHashData)
HRESULT None msi.MsiGetFileSignatureInformationA(_In_ LPCTSTR szSignedObjectPath,_In_ DWORD dwFlags,_Out_ PCCERT_CONTEXT *ppcCertContext,_Out_ BYTE *pbHashData,_Inout_ DWORD *pcbHashData)
HINSTANCE None shlwapi.MLLoadLibrary(_In_ LPCTSTR lpszLibFileName,_In_ HMODULE hModule,_In_ DWORD dwCrossCodePage)
HINSTANCE None shlwapi.MLLoadLibraryW(_In_ LPCTSTR lpszLibFileName,_In_ HMODULE hModule,_In_ DWORD dwCrossCodePage)
HINSTANCE None shlwapi.MLLoadLibraryA(_In_ LPCTSTR lpszLibFileName,_In_ HMODULE hModule,_In_ DWORD dwCrossCodePage)
BOOL WINAPI kernel32.SetProcessMitigationPolicy(_In_ PROCESS_MITIGATION_POLICY MitigationPolicy,_In_ PVOID lpBuffer,_In_ SIZE_T dwLength)
BOOL None shell32.SHGetSpecialFolderPath(HWND hwndOwner None,_Out_ LPTSTR lpszPath,_In_ int csidl,_In_ BOOL fCreate)
BOOL None shell32.SHGetSpecialFolderPathW(HWND hwndOwner None,_Out_ LPTSTR lpszPath,_In_ int csidl,_In_ BOOL fCreate)
BOOL None shell32.SHGetSpecialFolderPathA(HWND hwndOwner None,_Out_ LPTSTR lpszPath,_In_ int csidl,_In_ BOOL fCreate)
DWORD None user32.GetMenuContextHelpId(HMENU hmenu None)
BOOL WINAPI kernel32.QueryProcessCycleTime(_In_ HANDLE ProcessHandle,_Out_ PULONG64 CycleTime)
BOOL WINAPI kernel32.FlsFree(_In_ DWORD dwFlsIndex)
BOOL None None.SHQueueUserWorkItem(LPTHREAD_START_ROUTINE pfnCallback None,LPVOID pContext None,LONG lPriority None,DWORD_PTR dwTag None,DWORD_PTR * pdwId,LPCSTR pszModule None,DWORD dwFlags None)
UINT None msi.MsiInstallProduct(_In_ LPCTSTR szPackagePath,_In_ LPCTSTR szCommandLine)
UINT None msi.MsiInstallProductW(_In_ LPCTSTR szPackagePath,_In_ LPCTSTR szCommandLine)
UINT None msi.MsiInstallProductA(_In_ LPCTSTR szPackagePath,_In_ LPCTSTR szCommandLine)
HRESULT None ole32.IIDFromString(_In_ LPCOLESTR lpsz,_Out_ LPIID lpiid)
UINT None msi.MsiEnumRelatedProducts(_In_ LPCTSTR lpUpgradeCode,_In_ DWORD dwReserved,_In_ DWORD iProductIndex,_Out_ LPTSTR lpProductBuf)
UINT None msi.MsiEnumRelatedProductsW(_In_ LPCTSTR lpUpgradeCode,_In_ DWORD dwReserved,_In_ DWORD iProductIndex,_Out_ LPTSTR lpProductBuf)
UINT None msi.MsiEnumRelatedProductsA(_In_ LPCTSTR lpUpgradeCode,_In_ DWORD dwReserved,_In_ DWORD iProductIndex,_Out_ LPTSTR lpProductBuf)
HRESULT None shell32.SHAssocEnumHandlers(_In_ PCWSTR pszExtra,_In_ ASSOC_FILTER afFilter,_Out_ IEnumAssocHandlers **ppEnumHandler)
UINT None msi.MsiReinstallProduct(_In_ LPCTSTR szProduct,_In_ DWORD dwReinstallMode)
UINT None msi.MsiReinstallProductW(_In_ LPCTSTR szProduct,_In_ DWORD dwReinstallMode)
UINT None msi.MsiReinstallProductA(_In_ LPCTSTR szProduct,_In_ DWORD dwReinstallMode)
DWORD WINAPI kernel32.GetEnvironmentVariable(_In_opt_ LPCTSTR lpName,_Out_opt_ LPTSTR lpBuffer,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetEnvironmentVariableW(_In_opt_ LPCTSTR lpName,_Out_opt_ LPTSTR lpBuffer,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetEnvironmentVariableA(_In_opt_ LPCTSTR lpName,_Out_opt_ LPTSTR lpBuffer,_In_ DWORD nSize)
int WSAAPI ws2_32.WSAHtons(_In_ SOCKET s,_In_ u_short hostshort,_Out_ u_short *lpnetshort)
DWORD WINAPI kernel32.SetCriticalSectionSpinCount(_Inout_ LPCRITICAL_SECTION lpCriticalSection,_In_ DWORD dwSpinCount)
VOID None kernel32.GetCurrentProcessorNumberEx(_Out_ PPROCESSOR_NUMBER ProcNumber)
HRESULT None ole32.CoFileTimeNow(_Out_ FILETIME *lpFileTime)
HRESULT WINAPI ole32.CoHandlePriorityEventsFromMessagePump(void None None)
BOOL WINAPI authz.AuthzReportSecurityEventFromParams(_In_ DWORD dwFlags,_In_ AUTHZ_SECURITY_EVENT_PROVIDER_HANDLE hEventProvider,_In_ DWORD dwAuditId,_In_opt_ PSID pUserSid,_In_ PAUDIT_PARAMS pParams)
VOID WINAPI kernel32.InitOnceInitialize(_Out_ PINIT_ONCE InitOnce)
int None None.NSPStartup(_In_ LPGUID lpProviderId,_Out_ LPNSP_ROUTINE lpnspRoutines)
BOOL WINAPI avrt.AvRtCreateThreadOrderingGroupEx(_Out_ PHANDLE Context,_In_ PLARGE_INTEGER Period,_Inout_ GUID *ThreadOrderingGuid,_In_opt_ PLARGE_INTEGER Timeout,_In_ LPCTSTR TaskName)
BOOL WINAPI avrt.AvRtCreateThreadOrderingGroupExW(_Out_ PHANDLE Context,_In_ PLARGE_INTEGER Period,_Inout_ GUID *ThreadOrderingGuid,_In_opt_ PLARGE_INTEGER Timeout,_In_ LPCTSTR TaskName)
BOOL WINAPI avrt.AvRtCreateThreadOrderingGroupExA(_Out_ PHANDLE Context,_In_ PLARGE_INTEGER Period,_Inout_ GUID *ThreadOrderingGuid,_In_opt_ PLARGE_INTEGER Timeout,_In_ LPCTSTR TaskName)
BOOLEAN WINAPI advapi32.AuditQueryGlobalSacl(_In_ PCWSTR ObjectTypeName,_Out_ PACL *Acl)
BOOLEAN WINAPI advapi32.AuditQueryGlobalSaclW(_In_ PCWSTR ObjectTypeName,_Out_ PACL *Acl)
BOOLEAN WINAPI advapi32.AuditQueryGlobalSaclA(_In_ PCWSTR ObjectTypeName,_Out_ PACL *Acl)
BOOL WINAPI kernel32.SwitchToThread(void None None)
int None shlwapi.SHMessageBoxCheck(_In_opt_ HWND hwnd,_In_ LPCTSTR pszText,_In_ LPCTSTR pszCaption,UINT uType None,int iDefault None,_In_ LPCTSTR pszRegVal)
int None shlwapi.SHMessageBoxCheckW(_In_opt_ HWND hwnd,_In_ LPCTSTR pszText,_In_ LPCTSTR pszCaption,UINT uType None,int iDefault None,_In_ LPCTSTR pszRegVal)
int None shlwapi.SHMessageBoxCheckA(_In_opt_ HWND hwnd,_In_ LPCTSTR pszText,_In_ LPCTSTR pszCaption,UINT uType None,int iDefault None,_In_ LPCTSTR pszRegVal)
LPVOID WINAPI kernel32.ConvertThreadToFiberEx(_In_opt_ LPVOID lpParameter,_In_ DWORD dwFlags)
BOOL None kernel32.GetProcessorSystemCycleTime(_In_ USHORT Group,_Out_ PSYSTEM_PROCESSOR_CYCLE_TIME_INFORMATION Buffer,_Inout_ PDWORD ReturnedLength)
BOOL None shell32.SHRegGetBoolValueFromHKCUHKLM(PCWSTR pszKey None,_In_ PCWSTR pszValue,_In_ BOOL fDefault)
HRESULT None shell32.CIDLData_CreateFromIDArray(_In_ PCIDLIST_ABSOLUTE pidlFolder,_In_ UINT cidl,_In_ PCUIDLIST_RELATIVE_ARRAY apidl,_Out_ IDataObject **ppdtobj)
NTSTATUS WINAPI ntdll.NtQueryInformationThread(_In_ HANDLE ThreadHandle,_In_ THREADINFOCLASS ThreadInformationClass,_Inout_ PVOID ThreadInformation,_In_ ULONG ThreadInformationLength,_Out_opt_ PULONG ReturnLength)
HRESULT None mobsync.GetScheduleCookie([out] SYNCSCHEDULECOOKIE *pSyncSchedCookie)
void WINAPI ntdll.RtlInitializeSListHead(_In_ PSLIST_HEADER ListHead)
PUMS_CONTEXT WINAPI kernel32.GetNextUmsListItem(_Inout_ PUMS_CONTEXT UmsContext)
BOOL None shell32.PathIsExe(_In_ PCWSTR szfile)
void None None.SetContractDelegateWindow(_In_ HWND hwndSource,_In_opt_ HWND hwndDelegate)
BOOL WINAPI kernel32.GetNumaProcessorNode(_In_ UCHAR Processor,_Out_ PUCHAR NodeNumber)
DWORD WINAPI user32.GetWindowThreadProcessId(_In_ HWND hWnd,_Out_opt_ LPDWORD lpdwProcessId)
BOOL WINAPI kernel32.GetExitCodeThread(_In_ HANDLE hThread,_Out_ LPDWORD lpExitCode)
HANDLE WINAPI kernel32.OpenProcess(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ DWORD dwProcessId)
HRESULT None ole32.CreateClassMoniker(_In_ REFCLSID rclsid,_Out_ LPMONIKER *ppmk)
BOOL None url.InetIsOffline(DWORD dwFlags None)
int None shlwapi.GetMenuPosFromID(_In_ HMENU hmenu,UINT id None)
DWORD WINAPI kernelbase.TlsAlloc(void None None)
BOOL WINAPI user32.ShowOwnedPopups(_In_ HWND hWnd,_In_ BOOL fShow)
UINT None msi.MsiEnumProducts(_In_ DWORD iProductIndex,_Out_ LPTSTR lpProductBuf)
UINT None msi.MsiEnumProductsW(_In_ DWORD iProductIndex,_Out_ LPTSTR lpProductBuf)
UINT None msi.MsiEnumProductsA(_In_ DWORD iProductIndex,_Out_ LPTSTR lpProductBuf)
HRESULT None shell32.SHIsFileAvailableOffline(_In_ PCWSTR pszPath,_Out_opt_ LPDWORD pdwStatus)
HRESULT None ole32.CoGetCurrentLogicalThreadId(_Out_ GUID *pguid)
BOOL WINAPI kernel32.InitializeProcThreadAttributeList(_Out_opt_ LPPROC_THREAD_ATTRIBUTE_LIST lpAttributeList,_In_ DWORD dwAttributeCount,_Reserved_ DWORD dwFlags,_Inout_ PSIZE_T lpSize)
TCHAR None shlwapi.SHStripMneumonic(_Inout_ LPTSTR *pszMenu)
TCHAR None shlwapi.SHStripMneumonicW(_Inout_ LPTSTR *pszMenu)
TCHAR None shlwapi.SHStripMneumonicA(_Inout_ LPTSTR *pszMenu)
BOOL WINAPI kernelbase.TlsFree(_In_ DWORD dwTlsIndex)
int None shell32.SHCreateDirectory(_In_opt_ HWND hwnd,_In_ PCWSTR pszPath)
int WSPAPI ws2_32.WSCGetApplicationCategory(_In_ LPCWSTR Path,_In_ DWORD PathLength,_In_ LPCWSTR Extra,_In_ DWORD ExtraLength,_Out_ DWORD *pPermittedLspCategories,_Out_ LPINT lpErrno)
HRESULT None url.TranslateURL(PCTSTR pcszURL None,DWORD dwInFlags None,_Out_ PTSTR *ppszTranslatedURL)
HRESULT None url.TranslateURLW(PCTSTR pcszURL None,DWORD dwInFlags None,_Out_ PTSTR *ppszTranslatedURL)
HRESULT None url.TranslateURLA(PCTSTR pcszURL None,DWORD dwInFlags None,_Out_ PTSTR *ppszTranslatedURL)
BOOL WINAPI kernel32.SetThreadPriority(_In_ HANDLE hThread,_In_ int nPriority)
BOOL WINAPI kernel32.GetThreadIOPendingFlag(_In_ HANDLE hThread,_Inout_ PBOOL lpIOIsPending)
int None shlwapi.SHUnicodeToUnicode(_In_ PCWSTR pwzSrc,_Out_ PWSTR pwzDst,int cwchBuf None)
NTSTATUS WINAPI ntdll.ZwQueryInformationProcess(_In_ HANDLE ProcessHandle,_In_ PROCESSINFOCLASS ProcessInformationClass,_Out_ PVOID ProcessInformation,_In_ ULONG ProcessInformationLength,_Out_opt_ PULONG ReturnLength)
void None shdocvw.ShellDDEInit(_In_ BOOL init)
HRESULT None shell32.SHCreateStdEnumFmtEtc(_In_ UINT cfmt,const FORMATETC afmt[],_Out_ IEnumFORMATETC **ppenumFormatEtc)
void None shell32.PathGetShortPath(_Inout_ PWSTR pszLongPath)
VOID CALLBACK None.WorkCallback(_Inout_ PTP_CALLBACK_INSTANCE Instance,_Inout_opt_ PVOID Context,_Inout_ PTP_WORK Work)
PIDLIST_ABSOLUTE None shell32.SHBrowseForFolder(_In_ LPBROWSEINFO lpbi)
PIDLIST_ABSOLUTE None shell32.SHBrowseForFolderW(_In_ LPBROWSEINFO lpbi)
PIDLIST_ABSOLUTE None shell32.SHBrowseForFolderA(_In_ LPBROWSEINFO lpbi)
VOID WINAPI kernel32.AcquireSRWLockShared(_Inout_ PSRWLOCK SRWLock)
BOOL WINAPI advapi32.AccessCheckByTypeAndAuditAlarm(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ LPCTSTR ObjectTypeName,_In_opt_ LPCTSTR ObjectName,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_opt_ PSID PrincipalSelfSid,_In_ DWORD DesiredAccess,_In_ AUDIT_EVENT_TYPE AuditType,_In_ DWORD Flags,_Inout_opt_ POBJECT_TYPE_LIST ObjectTypeList,_In_ DWORD ObjectTypeListLength,_In_ PGENERIC_MAPPING GenericMapping,_In_ BOOL ObjectCreation,_Out_ LPDWORD GrantedAccess,_Out_ LPBOOL AccessStatus,_Out_ LPBOOL pfGenerateOnClose)
BOOL WINAPI advapi32.AccessCheckByTypeAndAuditAlarmW(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ LPCTSTR ObjectTypeName,_In_opt_ LPCTSTR ObjectName,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_opt_ PSID PrincipalSelfSid,_In_ DWORD DesiredAccess,_In_ AUDIT_EVENT_TYPE AuditType,_In_ DWORD Flags,_Inout_opt_ POBJECT_TYPE_LIST ObjectTypeList,_In_ DWORD ObjectTypeListLength,_In_ PGENERIC_MAPPING GenericMapping,_In_ BOOL ObjectCreation,_Out_ LPDWORD GrantedAccess,_Out_ LPBOOL AccessStatus,_Out_ LPBOOL pfGenerateOnClose)
BOOL WINAPI advapi32.AccessCheckByTypeAndAuditAlarmA(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ LPCTSTR ObjectTypeName,_In_opt_ LPCTSTR ObjectName,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_opt_ PSID PrincipalSelfSid,_In_ DWORD DesiredAccess,_In_ AUDIT_EVENT_TYPE AuditType,_In_ DWORD Flags,_Inout_opt_ POBJECT_TYPE_LIST ObjectTypeList,_In_ DWORD ObjectTypeListLength,_In_ PGENERIC_MAPPING GenericMapping,_In_ BOOL ObjectCreation,_Out_ LPDWORD GrantedAccess,_Out_ LPBOOL AccessStatus,_Out_ LPBOOL pfGenerateOnClose)
int None shlwapi.SHUnicodeToAnsi(_In_ PCWSTR pwszSrc,_Out_ PSTR pszDst,int cchBuf None)
HRESULT None shell32.SHGetNameFromIDList(_In_ PCIDLIST_ABSOLUTE pidl,_In_ SIGDN sigdnName,_Out_ PWSTR *ppszName)
HRESULT None shell32.SHCreateItemFromIDList(_In_ PCIDLIST_ABSOLUTE pidl,_In_ REFIID riid,_Out_ void **ppv)
void None None.MyUpdateImage(LPCWSTR pszHashItem None,int iIndex None,UINT uFlags None,int iImageIndex None)
BOOL CALLBACK None.AuthzGetCentralAccessPolicyCallback(_In_ AUTHZ_CLIENT_CONTEXT_HANDLE hAuthzClientContext,_In_ PSID capid,_In_opt_ PVOID pArgs,_Out_ PBOOL pCentralAccessPolicyApplicable,_Out_ PVOID ppCentralAccessPolicy)
void None shell32.SHAddToRecentDocs(UINT uFlags None,_In_opt_ LPCVOID pv)
BOOL WINAPI kernel32.NeedCurrentDirectoryForExePath(_In_ LPCTSTR ExeName)
BOOL WINAPI kernel32.NeedCurrentDirectoryForExePathW(_In_ LPCTSTR ExeName)
BOOL WINAPI kernel32.NeedCurrentDirectoryForExePathA(_In_ LPCTSTR ExeName)
DWORD None shlwapi.CharUpperBuffWrapW(_In_ LPWSTR pch,_In_ DWORD cchLength)
BOOL WINAPI kernel32.SetThreadpoolTimerEx(_Inout_ PTP_TIMER pti,_In_opt_ PFILETIME pftDueTime,_In_ DWORD msPeriod,_In_opt_ DWORD msWindowLength)
HRESULT None shell32.MessageSFVCB([in] UINT uMsg,WPARAM wParam None,LPARAM lParam None)
UINT None msi.MsiOpenPackage(_In_ LPCTSTR szPackagePath,_Out_ MSIHANDLE *hProduct)
UINT None msi.MsiOpenPackageW(_In_ LPCTSTR szPackagePath,_Out_ MSIHANDLE *hProduct)
UINT None msi.MsiOpenPackageA(_In_ LPCTSTR szPackagePath,_Out_ MSIHANDLE *hProduct)
HRESULT None shell32.SHGetSetFolderCustomSettings(_Inout_ LPSHFOLDERCUSTOMSETTINGS pfcs,_In_ PCTSTR pszPath,DWORD dwReadWrite None)
uint32 None raserverpsprovider.Get([in] boolean Refresh,[out] RemoteAccessServerHealthLocal cmdletOutput)
BOOL None shell32.PathMakeUniqueName(_Out_ PWSTR pszUniqueName,UINT cchMax None,_In_ PCWSTR pszTemplate,_In_opt_ PCWSTR pszLongPlate,_In_opt_ PCWSTR pszDir)
BOOL None shell32.ReadCabinetState(_Out_ CABINETSTATE *pcs,_In_ int cLength)
int None shell32.SHMapPIDLToSystemImageListIndex(_In_ IShellFolder *psf,_In_ PCUITEMID_CHILD pidl,_Out_opt_ int *piIndex)
UINT None msi.MsiEnableLog(_In_ DWORD dwLogMode,_In_ LPCTSTR szLogFile,_In_ DWORD dwLogAttributes)
UINT None msi.MsiEnableLogW(_In_ DWORD dwLogMode,_In_ LPCTSTR szLogFile,_In_ DWORD dwLogAttributes)
UINT None msi.MsiEnableLogA(_In_ DWORD dwLogMode,_In_ LPCTSTR szLogFile,_In_ DWORD dwLogAttributes)
BOOL None shell32.DAD_DragMove(POINT pt None)
BOOL None kernel32.SetThreadpoolStackInformation(_Inout_ PTP_POOL ptpp,_In_ PTP_POOL_STACK_INFORMATION ptpsi)
VOID WINAPI kernel32.CancelThreadpoolIo(_Inout_ PTP_IO pio)
VOID WINAPI kernel32.SwitchToFiber(_In_ LPVOID lpFiber)
VOID CALLBACK None.SimpleCallback(_Inout_ PTP_CALLBACK_INSTANCE Instance,_Inout_opt_ PVOID Context)
BOOL None shell32.InitNetworkAddressControl(void None None)
UINT None oledlg.OleUIChangeSource(_In_ LPOLEUICHANGESOURCE lpCS)
UINT None oledlg.OleUIChangeSourceW(_In_ LPOLEUICHANGESOURCE lpCS)
UINT None oledlg.OleUIChangeSourceA(_In_ LPOLEUICHANGESOURCE lpCS)
BOOL WINAPI kernel32.FreeEnvironmentStrings(_In_ LPTCH lpszEnvironmentBlock)
BOOL WINAPI kernel32.FreeEnvironmentStringsW(_In_ LPTCH lpszEnvironmentBlock)
BOOL WINAPI kernel32.FreeEnvironmentStringsA(_In_ LPTCH lpszEnvironmentBlock)
bool None shell32.ParseField(_In_ LPCTSTR *szData,_In_ int n,_In_ LPTSTR *szBuf,_In_ int iBufLen)
DWORD WINAPI kernel32.GetProcessIdOfThread(_In_ HANDLE Thread)
VOID WINAPI kernel32.SetEventWhenCallbackReturns(_Inout_ PTP_CALLBACK_INSTANCE pci,_In_ HANDLE evt)
HRESULT None ole32.OleIsCurrentClipboard(_In_ LPDATAOBJECT pDataObj)
int None shell32.RestartDialog(_In_opt_ HWND hParent,_In_opt_ PCWSTR pszPrompt,DWORD dwFlags None)
VOID WINAPI kernel32.DeleteFiber(_In_ LPVOID lpFiber)
HANDLE WINAPI kernel32.CreateWaitableTimerEx(_In_opt_ LPSECURITY_ATTRIBUTES lpTimerAttributes,_In_opt_ LPCTSTR lpTimerName,_In_ DWORD dwFlags,_In_ DWORD dwDesiredAccess)
HANDLE WINAPI kernel32.CreateWaitableTimerExW(_In_opt_ LPSECURITY_ATTRIBUTES lpTimerAttributes,_In_opt_ LPCTSTR lpTimerName,_In_ DWORD dwFlags,_In_ DWORD dwDesiredAccess)
HANDLE WINAPI kernel32.CreateWaitableTimerExA(_In_opt_ LPSECURITY_ATTRIBUTES lpTimerAttributes,_In_opt_ LPCTSTR lpTimerName,_In_ DWORD dwFlags,_In_ DWORD dwDesiredAccess)
BOOL __inline None.IDListContainerIsConsistent(_In_ PCUIDLIST_RELATIVE pidl,_In_ UINT cbAlloc)
BOOL None None.ScreenSaverConfigureDialog(HWND hDlg None,UINT message None,WPARAM wParam None,LPARAM lParam None)
HRESULT WINAPI coremessaging.CreateDispatcherQueueController(_In_ DispatcherQueueOptions options,_Out_ DispatcherQueueController dispatcherQueueController)
HRESULT None shell32.SHLimitInputEdit(_In_opt_ HWND hwndEdit,_In_ IShellFolder *psf)
HRESULT None shell32.CountTasks([in] REFTASKOWNERID rtoid)
HRESULT None shell32.SHEvaluateSystemCommandTemplate(_In_ PCWSTR pszCmdTemplate,_Out_ PWSTR *ppszApplication,_Out_opt_ PWSTR *ppszCommandLine,_Out_opt_ PWSTR *ppszParameters)
VOID WINAPI kernel32.GetStartupInfo(_Out_ LPSTARTUPINFO lpStartupInfo)
VOID WINAPI kernel32.GetStartupInfoW(_Out_ LPSTARTUPINFO lpStartupInfo)
VOID WINAPI kernel32.GetStartupInfoA(_Out_ LPSTARTUPINFO lpStartupInfo)
BOOL WINAPI avrt.AvRtWaitOnThreadOrderingGroup(_In_ HANDLE Context)
int None shell32.PickIconDlg(_In_opt_ HWND hwnd,_Inout_ PWSTR pszIconPath,UINT cchIconPath None,_Inout_opt_ int *piIconIndex)
BOOL None comctl32.GetWindowSubclass(_In_ HWND hWnd,_In_ SUBCLASSPROC pfnSubclass,_In_ UINT_PTR uIdSubclass,_Out_ DWORD_PTR *pdwRefData)
UINT WINAPI msi.MsiOpenPackageEx(_In_ LPCTSTR szPackagePath,_In_ DWORD dwOptions,_Out_ MSIHANDLE *hProduct)
UINT WINAPI msi.MsiOpenPackageExW(_In_ LPCTSTR szPackagePath,_In_ DWORD dwOptions,_Out_ MSIHANDLE *hProduct)
UINT WINAPI msi.MsiOpenPackageExA(_In_ LPCTSTR szPackagePath,_In_ DWORD dwOptions,_Out_ MSIHANDLE *hProduct)
BOOL WINAPI kernel32.SetProcessShutdownParameters(_In_ DWORD dwLevel,_In_ DWORD dwFlags)
void None shell32.ILFree(_In_ PIDLIST_RELATIVE pidl)
DWORD WINAPI advapi32.TreeSetNamedSecurityInfo(_In_ LPTSTR pObjectName,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_In_opt_ PSID pOwner,_In_opt_ PSID pGroup,_In_opt_ PACL pDacl,_In_opt_ PACL pSacl,_In_ DWORD dwAction,_In_ FN_PROGRESS fnProgress,_In_ PROG_INVOKE_SETTING ProgressInvokeSetting,_In_opt_ PVOID Args)
DWORD WINAPI advapi32.TreeSetNamedSecurityInfoW(_In_ LPTSTR pObjectName,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_In_opt_ PSID pOwner,_In_opt_ PSID pGroup,_In_opt_ PACL pDacl,_In_opt_ PACL pSacl,_In_ DWORD dwAction,_In_ FN_PROGRESS fnProgress,_In_ PROG_INVOKE_SETTING ProgressInvokeSetting,_In_opt_ PVOID Args)
DWORD WINAPI advapi32.TreeSetNamedSecurityInfoA(_In_ LPTSTR pObjectName,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_In_opt_ PSID pOwner,_In_opt_ PSID pGroup,_In_opt_ PACL pDacl,_In_opt_ PACL pSacl,_In_ DWORD dwAction,_In_ FN_PROGRESS fnProgress,_In_ PROG_INVOKE_SETTING ProgressInvokeSetting,_In_opt_ PVOID Args)
HANDLE WINAPI avrt.AvSetMmThreadCharacteristics(_In_ LPCTSTR TaskName,_Inout_ LPDWORD TaskIndex)
HANDLE WINAPI avrt.AvSetMmThreadCharacteristicsW(_In_ LPCTSTR TaskName,_Inout_ LPDWORD TaskIndex)
HANDLE WINAPI avrt.AvSetMmThreadCharacteristicsA(_In_ LPCTSTR TaskName,_Inout_ LPDWORD TaskIndex)
HRESULT None shell32.ILLoadFromStreamEx(_In_ IStream *pstm,_Out_ PIDLIST_RELATIVE *pidl)
BOOL WINAPI kernel32.DequeueUmsCompletionListItems(_In_ PUMS_COMPLETION_LIST UmsCompletionList,_In_ DWORD WaitTimeOut,_Out_ PUMS_CONTEXT *UmsThreadList)
BOOL None shell32.PathIsSlow(_In_ LPCTSTR pszFile,DWORD dwFileAttr None)
BOOL None shell32.PathIsSlowW(_In_ LPCTSTR pszFile,DWORD dwFileAttr None)
BOOL None shell32.PathIsSlowA(_In_ LPCTSTR pszFile,DWORD dwFileAttr None)
HRESULT None shell32.SHGetSpecialFolderLocation(_In_ HWND hwndOwner,_In_ int nFolder,_Out_ PIDLIST_ABSOLUTE *ppidl)
HRESULT None shell32.SHGetFolderPathAndSubDir(_In_ HWND hwnd,_In_ int csidl,_In_ HANDLE hToken,_In_ DWORD dwFlags,_In_ LPCTSTR pszSubDir,_Out_ LPTSTR pszPath)
HRESULT None shell32.SHGetFolderPathAndSubDirW(_In_ HWND hwnd,_In_ int csidl,_In_ HANDLE hToken,_In_ DWORD dwFlags,_In_ LPCTSTR pszSubDir,_Out_ LPTSTR pszPath)
HRESULT None shell32.SHGetFolderPathAndSubDirA(_In_ HWND hwnd,_In_ int csidl,_In_ HANDLE hToken,_In_ DWORD dwFlags,_In_ LPCTSTR pszSubDir,_Out_ LPTSTR pszPath)
UINT None shell32.SHAddFromPropSheetExtArray(_In_ HPSXA hpsxa,_In_ LPFNADDPROPSHEETPAGE lpfnAddPage,LPARAM lParam None)
void None shell32.SHGetSetSettings(_Inout_ LPSHELLSTATE lpss,_In_ DWORD dwMask,_In_ BOOL bSet)
PTP_IO WINAPI kernel32.CreateThreadpoolIo(_In_ HANDLE fl,_In_ PTP_WIN32_IO_CALLBACK pfnio,_Inout_opt_ PVOID pv,_In_opt_ PTP_CALLBACK_ENVIRON pcbe)
BOOL WINAPI advapi32.ObjectPrivilegeAuditAlarm(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ HANDLE ClientToken,_In_ DWORD DesiredAccess,_In_ PPRIVILEGE_SET Privileges,_In_ BOOL AccessGranted)
BOOL WINAPI advapi32.ObjectPrivilegeAuditAlarmW(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ HANDLE ClientToken,_In_ DWORD DesiredAccess,_In_ PPRIVILEGE_SET Privileges,_In_ BOOL AccessGranted)
BOOL WINAPI advapi32.ObjectPrivilegeAuditAlarmA(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ HANDLE ClientToken,_In_ DWORD DesiredAccess,_In_ PPRIVILEGE_SET Privileges,_In_ BOOL AccessGranted)
BOOL None shell32.SHFindFiles(_In_opt_ PCIDLIST_ABSOLUTE pidlFolder,_In_opt_ PCIDLIST_ABSOLUTE pidlSaveFile)
HRESULT WINOLEAPI ole32.CoAllowUnmarshalerCLSID(_In_ REFCLSID clsid)
BOOL WINAPI user32.EndDeferWindowPos(_In_ HDWP hWinPosInfo)
HRESULT WINAPI userenv.CreateProfile(_In_ LPCWSTR pszUserSid,_In_ LPCWSTR pszUserName,_Out_ LPWSTR pszProfilePath,_In_ DWORD cchProfilePath)
USHORT WINAPI kernel32.QueryDepthSList(_In_ PSLIST_HEADER ListHead)
HRESULT None shell32.SHBindToFolderIDListParentEx(_In_opt_ IShellFolder *psfRoot,_In_ PCUIDLIST_RELATIVE pidl,_In_opt_ IBindCtx *ppbc,_In_ REFIID riid,_Out_ void **ppv,_Out_opt_ PCUITEMID_CHILD *ppidlLast)
HRESULT None shell32.SHSetFolderPath(_In_ int csidl,_In_ HANDLE hToken,_Reserved_ DWORD dwFlags,_In_ LPCTSTR pszPath)
HRESULT None shell32.SHSetFolderPathW(_In_ int csidl,_In_ HANDLE hToken,_Reserved_ DWORD dwFlags,_In_ LPCTSTR pszPath)
HRESULT None shell32.SHSetFolderPathA(_In_ int csidl,_In_ HANDLE hToken,_Reserved_ DWORD dwFlags,_In_ LPCTSTR pszPath)
HRESULT None shlwapi.SHGetViewStatePropertyBag(_In_opt_ PCIDLIST_ABSOLUTE pidl,_In_opt_ PCWSTR pszBagName,DWORD dwFlags None,_In_ REFIID riid,_Out_ void **ppv)
int None shell32.CallCPLEntry16(_In_ HINSTANCE hInst,_In_ FARPROC16 lpfnEntry,_In_ HWND hwndCPL,_In_ UINT msg,_In_ LPARAM lParam1,_In_ LPARAM lParam2)
BOOL WINAPI kernel32.GetUmsSystemThreadInformation(_In_ HANDLE ThreadHandle,_Inout_ PUMS_SYSTEM_THREAD_INFORMATION SystemThreadInfo)
int WSAAPI ws2_32.WSCInstallNamespace32(_In_ LPWSTR lpszIdentifier,_In_ LPWSTR lpszPathName,_In_ DWORD dwNameSpace,_In_ DWORD dwVersion,_In_ LPGUID lpProviderId)
BOOL WINAPI kernel32.GetThreadPriorityBoost(_In_ HANDLE hThread,_Out_ PBOOL pDisablePriorityBoost)
HRESULT None ole32.OleDoAutoConvert(_In_ LPSTORAGE pStg,_Out_ LPCLSID pClsidNew)
UINT None shell32.Shell_MergeMenus(_In_ HMENU hmDst,_In_ HMENU hmSrc,UINT uInsert None,UINT uIDAdjust None,UINT uIDAdjustMax None,ULONG uFlags None)
UINT None msi.MsiSourceListForceResolution(_In_ LPCTSTR szProduct,_In_ LPCTSTR szUserName,_In_ DWORD dwReserved)
UINT None msi.MsiSourceListForceResolutionW(_In_ LPCTSTR szProduct,_In_ LPCTSTR szUserName,_In_ DWORD dwReserved)
UINT None msi.MsiSourceListForceResolutionA(_In_ LPCTSTR szProduct,_In_ LPCTSTR szUserName,_In_ DWORD dwReserved)
typedef None None.HRESULT(CALLBACK *LPFNDFMCALLBACK None)
HRESULT None shell32.SHGetNameFromPropertyKey(_In_ REFPROPERTYKEY propkey,_Out_ PWSTR *ppszCanonicalName)
STDAPI None shcore.RevokeScaleChangeNotifications(_In_ DISPLAY_DEVICE_TYPE displayDevice,_In_ DWORD dwCookie)
BOOL None kernel32.SetThreadInformation(_In_ HANDLE hThread,_In_ THREAD_INFORMATION_CLASS ThreadInformationClass,_In_reads_bytes_ ThreadInformation None,_In_ DWORD ThreadInformationSize)
BOOL None shell32.Shell_GetImageLists(_In_ HIMAGELIST *phiml,_In_ HIMAGELIST *phimlSmall)
HRESULT None None.GetSetCodePage([in] VARIANT *pvarIn,[out] VARIANT *pvarOut)
BOOL None None.RegisterDialogClasses(HANDLE hInst None)
HRESULT None shell32.SHGetFolderLocation(_In_ HWND hwndOwner,_In_ int nFolder,_In_ HANDLE hToken,_Reserved_ DWORD dwReserved,_Out_ PIDLIST_ABSOLUTE *ppidl)
LRESULT None comctl32.DefSubclassProc(_In_ HWND hWnd,_In_ UINT uMsg,_In_ WPARAM WPARAM,_In_ LPARAM LPARAM)
PIDLIST_ABSOLUTE None shell32.ILCreateFromPath(_In_ PCTSTR pszPath)
PIDLIST_ABSOLUTE None shell32.ILCreateFromPathW(_In_ PCTSTR pszPath)
PIDLIST_ABSOLUTE None shell32.ILCreateFromPathA(_In_ PCTSTR pszPath)
LPWSTR None shlwapi.CharLowerWrapW(_Inout_ LPWSTR pch)
BOOL None None.ILIsChild(_In_ PCUIDLIST_RELATIVE pidl)
int WSPAPI ws2_32.WSCInstallNameSpace(_In_ LPWSTR lpszIdentifier,_In_ LPWSTR lpszPathName,_In_ DWORD dwNameSpace,_In_ DWORD dwVersion,_In_ LPGUID lpProviderId)
PTP_WORK WINAPI kernel32.CreateThreadpoolWork(_In_ PTP_WORK_CALLBACK pfnwk,_Inout_opt_ PVOID pv,_In_opt_ PTP_CALLBACK_ENVIRON pcbe)
HRESULT None shell32.SHParseDisplayName(_In_ LPCWSTR pszName,_In_opt_ IBindCtx *pbc,_Out_ PIDLIST_ABSOLUTE *ppidl,_In_ SFGAOF sfgaoIn,_Out_opt_ SFGAOF *psfgaoOut)
BOOL WINAPI user32.IsProcessDPIAware(void None None)
BOOL None shell32.ShellExecuteEx(_Inout_ SHELLEXECUTEINFO *pExecInfo)
BOOL None shell32.ShellExecuteExW(_Inout_ SHELLEXECUTEINFO *pExecInfo)
BOOL None shell32.ShellExecuteExA(_Inout_ SHELLEXECUTEINFO *pExecInfo)
BOOL WINAPI kernel32.SetProtectedPolicy(_In_ LPCGUID PolicyGuid,_In_ ULONG_PTR PolicyValue,_Out_ PULONG_PTR OldPolicyValue)
PUMS_CONTEXT WINAPI kernel32.GetCurrentUmsThread(void None None)
HWND None user32.WindowFromDC(_In_ HDC hDC)
HRESULT None shell32.SHCreateItemFromParsingName(_In_ PCWSTR pszPath,_In_opt_ IBindCtx *pbc,_In_ REFIID riid,_Out_ void **ppv)
int None shell32.SHGetIconOverlayIndex(_In_opt_ LPCTSTR pszIconPath,int iIconIndex None)
int None shell32.SHGetIconOverlayIndexW(_In_opt_ LPCTSTR pszIconPath,int iIconIndex None)
int None shell32.SHGetIconOverlayIndexA(_In_opt_ LPCTSTR pszIconPath,int iIconIndex None)
HRESULT None shell32.SHQueryUserNotificationState(_Out_ QUERY_USER_NOTIFICATION_STATE *pquns)
STDAPI None shcore.GetScaleFactorForMonitor(_In_ HMONITOR hMon,_Out_ DEVICE_SCALE_FACTOR *pScale)
void None shell32.SHDestroyPropSheetExtArray(_In_ HPSXA hpsxa)
int WSPAPI ws2_32.WSCGetProviderPath(_In_ LPGUID lpProviderId,_Out_ LPWSTR lpszProviderDllPath,_Inout_ LPINT lpProviderDllPathLen,_Out_ LPINT lpErrno)
int None shell32.RealDriveType(_In_ int iDrive,_Reserved_ BOOL fOKToHitNet)
int None None.WSPCloseSocket(_In_ SOCKET s,_Out_ LPINT lpErrno)
BOOL WINAPI kernel32.FlsSetValue(_In_ DWORD dwFlsIndex,_In_opt_ PVOID lpFlsData)
BOOL None shell32.IsUserAnAdmin(void None None)
PITEMID_CHILD None shell32.ILCloneFirst(_In_ PCUIDLIST_RELATIVE pidl)
STDAPI None shcore.RegisterScaleChangeNotifications(_In_ DISPLAY_DEVICE_TYPE displayDevice,_In_ HWND hwndNotify,_In_ UINT uMsgNotify,_Out_ DWORD *pdwCookie)
HRESULT None shell32.SHSetKnownFolderPath(_In_ REFKNOWNFOLDERID rfid,_In_ DWORD dwFlags,_In_ HANDLE hToken,_In_ PCWSTR pszPath)
int None None.WSPAddressToString(_In_ LPSOCKADDR lpsaAddress,_In_ DWORD dwAddressLength,_In_ LPWSAPROTOCOL_INFO lpProtocolInfo,_Out_ LPWSTR lpszAddressString,_Inout_ LPDWORD lpdwAddressStringLength,_Out_ LPINT lpErrno)
DWORD None shlwapi.StopWatchFlush(void None None)
PDNS_RECORD None dnsapi.DnsRecordSetDetach(_Inout_ PDNS_RECORD pRR)
void None shell32.SHFlushSFCache(void None None)
BOOL None shell32.SHGetPathFromIDList(_In_ PCIDLIST_ABSOLUTE pidl,_Out_ LPTSTR pszPath)
BOOL None shell32.SHGetPathFromIDListW(_In_ PCIDLIST_ABSOLUTE pidl,_Out_ LPTSTR pszPath)
BOOL None shell32.SHGetPathFromIDListA(_In_ PCIDLIST_ABSOLUTE pidl,_Out_ LPTSTR pszPath)
HRESULT None shell32.SHCreateShellItem(_In_opt_ PCIDLIST_ABSOLUTE pidlParent,_In_opt_ IShellFolder *psfParent,_In_ PCUITEMID_CHILD pidl,_Out_ IShellItem **ppsi)
HRESULT None shell32.SHILCreateFromPath(_In_ PCWSTR pszPath,_Out_ PIDLIST_ABSOLUTE *ppidl,_Inout_opt_ DWORD *rgflnOut)
BOOL None shell32.SignalFileOpen(_In_ PCIDLIST_ABSOLUTE pidl)
PUIDLIST_RELATIVE None shell32.ILGetNext(_In_opt_ PCUIDLIST_RELATIVE pidl)
BOOL WINAPI user32.UpdateLayeredWindow(_In_ HWND hwnd,_In_opt_ HDC hdcDst,_In_opt_ POINT *pptDst,_In_opt_ SIZE *psize,_In_opt_ HDC hdcSrc,_In_opt_ POINT *pptSrc,_In_ COLORREF crKey,_In_opt_ BLENDFUNCTION *pblend,_In_ DWORD dwFlags)
HRESULT None shlwapi.SHCreateStreamOnFile(_In_ LPCTSTR pszFile,_In_ DWORD grfMode,_Out_ IStream **ppstm)
HRESULT None shlwapi.SHCreateStreamOnFileW(_In_ LPCTSTR pszFile,_In_ DWORD grfMode,_Out_ IStream **ppstm)
HRESULT None shlwapi.SHCreateStreamOnFileA(_In_ LPCTSTR pszFile,_In_ DWORD grfMode,_Out_ IStream **ppstm)
BOOL WINAPI userenv.GetProfilesDirectory(_Out_ LPTSTR lpProfilesDir,_Inout_ LPDWORD lpcchSize)
BOOL WINAPI userenv.GetProfilesDirectoryW(_Out_ LPTSTR lpProfilesDir,_Inout_ LPDWORD lpcchSize)
BOOL WINAPI userenv.GetProfilesDirectoryA(_Out_ LPTSTR lpProfilesDir,_Inout_ LPDWORD lpcchSize)
HRESULT None shell32.SHCreateItemFromRelativeName(_In_ IShellItem *psiParent,_In_ PCWSTR pszName,_In_ IBindCtx *pbc,_In_ REFIID riid,_Out_ void **ppv)
HRESULT None shell32.SHCreateShellItemArrayFromDataObject(_In_ IDataObject *pdo,_In_ REFIID riid,_Out_ void **ppv)
BOOL None shell32.DAD_SetDragImage(HIMAGELIST him None,POINT *pptOffset None)
HRESULT None shell32.SHGetKnownFolderItem(_In_ REFKNOWNFOLDERID rfid,_In_ KNOWN_FOLDER_FLAG dwFlags,_In_ HANDLE hToken,_In_ REFIID riid,_Out_ void **ppv)
HANDLE WINAPI kernel32.CreateEventEx(_In_opt_ LPSECURITY_ATTRIBUTES lpEventAttributes,_In_opt_ LPCTSTR lpName,_In_ DWORD dwFlags,_In_ DWORD dwDesiredAccess)
HANDLE WINAPI kernel32.CreateEventExW(_In_opt_ LPSECURITY_ATTRIBUTES lpEventAttributes,_In_opt_ LPCTSTR lpName,_In_ DWORD dwFlags,_In_ DWORD dwDesiredAccess)
HANDLE WINAPI kernel32.CreateEventExA(_In_opt_ LPSECURITY_ATTRIBUTES lpEventAttributes,_In_opt_ LPCTSTR lpName,_In_ DWORD dwFlags,_In_ DWORD dwDesiredAccess)
void None ws2_32.WSASetLastError(_In_ int iError)
PUITEMID_CHILD None shell32.ILFindLastID(_In_ PCUIDLIST_RELATIVE pidl)
BOOL WINAPI userenv.GetDefaultUserProfileDirectory(_Out_opt_ LPTSTR lpProfileDir,_Inout_ LPDWORD lpcchSize)
BOOL WINAPI userenv.GetDefaultUserProfileDirectoryW(_Out_opt_ LPTSTR lpProfileDir,_Inout_ LPDWORD lpcchSize)
BOOL WINAPI userenv.GetDefaultUserProfileDirectoryA(_Out_opt_ LPTSTR lpProfileDir,_Inout_ LPDWORD lpcchSize)
HRESULT None shell32.SHGetRealIDL(_In_ IShellFolder *psf,_In_ PCUITEMID_CHILD pidlSimple,_Out_ PITEMID_CHILD *ppidlReal)
HRESULT WINAPI userenv.GetAppContainerFolderPath(_In_ PCWSTR pszAppContainerSid,_Out_ PWSTR *ppszPath)
int None shell32.SHFileOperation(_Inout_ LPSHFILEOPSTRUCT lpFileOp)
int None shell32.SHFileOperationW(_Inout_ LPSHFILEOPSTRUCT lpFileOp)
int None shell32.SHFileOperationA(_Inout_ LPSHFILEOPSTRUCT lpFileOp)
BOOL WINAPI user32.SetProcessDPIAware(void None None)
HRESULT None ntshrui.ShowShareFolderUI(_In_ HWND hwndParent,_In_ LPCWSTR pszPath)
HRESULT None ntshrui.ShowShareFolderUIW(_In_ HWND hwndParent,_In_ LPCWSTR pszPath)
BOOL None shell32.ShellExecuteEx(_Inout_ SHELLEXECUTEINFO *pExecInfo)
BOOL None shell32.ShellExecuteExW(_Inout_ SHELLEXECUTEINFO *pExecInfo)
BOOL None shell32.ShellExecuteExA(_Inout_ SHELLEXECUTEINFO *pExecInfo)
void None shell32.SHChangeNotify(LONG wEventId None,UINT uFlags None,_In_opt_ LPCVOID dwItem1,_In_opt_ LPCVOID dwItem2)
STDAPI None ntshrui.CanShareFolderW(_In_ LPCWSTR pszPath)
STDAPI None ntshrui.CanShareFolderW(_In_ LPCWSTR pszPath)
UINT_PTR None shell32.SHAppBarMessage(_In_ DWORD dwMessage,_Inout_ PAPPBARDATA pData)
HRESULT None None.QueryInterface([in] REFIID riid,[out] void **ppvObject)
HRESULT None shlwapi.UrlFixupW(_In_ PCWSTR pcszUrl,_Out_ PWSTR pszTranslatedUrl,DWORD cchMax None)
HRESULT None shlwapi.UrlFixupW(_In_ PCWSTR pcszUrl,_Out_ PWSTR pszTranslatedUrl,DWORD cchMax None)
int WSAAPI None.NSPv2Startup(_In_ LPGUID lpProviderId,_In_ LPVOID *ppvClientSessionArg)
HRESULT None shell32.SHGetItemFromObject(_In_ IUnknown *punk,_In_ REFIID riid,_Out_ void **ppv)
int WINAPI user32.TranslateAccelerator(_In_ HWND hWnd,_In_ HACCEL hAccTable,_In_ LPMSG lpMsg)
int WINAPI user32.TranslateAcceleratorW(_In_ HWND hWnd,_In_ HACCEL hAccTable,_In_ LPMSG lpMsg)
int WINAPI user32.TranslateAcceleratorA(_In_ HWND hWnd,_In_ HACCEL hAccTable,_In_ LPMSG lpMsg)
HRESULT None shell32.SHDoDragDrop(_In_ HWND hwnd,_In_ IDataObject *pdtobj,_In_ IDropSource *pdsrc,_In_ DWORD dwEffect,_Out_ DWORD *pdwEffect)
DWORD WINAPI kernel32.GetPriorityClass(_In_ HANDLE hProcess)
HRESULT None shell32.SHSetDefaultProperties(_In_opt_ HWND hwnd,_In_ IShellItem *psi,DWORD dwFileOpFlags None,_In_opt_ IFileOperationProgressSink *pfops)
HRESULT WINOLEAPI None.CoSetMessageDispatcher(_In_opt_ *pMessageDispatcher None)
BOOL None shlwapi.IsCharAlphaNumericWrapW(_In_ WCHAR ch)
int WSAAPI ws2_32.WSCInstallNameSpaceEx(_In_ LPWSTR lpszIdentifier,_In_ LPWSTR lpszPathName,_In_ DWORD dwNameSpace,_In_ DWORD dwVersion,_In_ LPGUID lpProviderId,_In_ LPBLOB lpProviderInfo)
HRESULT None shell32.Extract([in] PCTSTR pszFile,UINT nIconIndex None,[out None None,optional] HICON *phiconLarge,[out None None,optional] HICON *phiconSmall,UINT nIconSize None)
BOOL None shell32.DragQueryPoint(_In_ HDROP hDrop,_Out_ POINT *lppt)
BOOL None user32.WinHelp(HWND hWndMain None,LPCTSTR lpszHelp None,UINT uCommand None,ULONG_PTR dwData None)
BOOL None user32.WinHelpW(HWND hWndMain None,LPCTSTR lpszHelp None,UINT uCommand None,ULONG_PTR dwData None)
BOOL None user32.WinHelpA(HWND hWndMain None,LPCTSTR lpszHelp None,UINT uCommand None,ULONG_PTR dwData None)
HRESULT None shell32.SHGetUnreadMailCount(_In_opt_ HKEY hKeyUser,_In_opt_ LPCTSTR pszMailAddress,_Out_opt_ DWORD *pdwCount,_Out_opt_ FILETIME *pFileTime,_Out_opt_ LPCTSTR pszShellExecuteCommand,int cchShellExecuteCommand None)
HRESULT None shell32.SHGetUnreadMailCountW(_In_opt_ HKEY hKeyUser,_In_opt_ LPCTSTR pszMailAddress,_Out_opt_ DWORD *pdwCount,_Out_opt_ FILETIME *pFileTime,_Out_opt_ LPCTSTR pszShellExecuteCommand,int cchShellExecuteCommand None)
DWORD WINAPI advapi32.GetSecurityDescriptorRMControl(_In_ PSECURITY_DESCRIPTOR SecurityDescriptor,_Out_ PUCHAR RMControl)
HRESULT None shell32.SHMapIDListToImageListIndexAsync(IShellTaskScheduler *pts None,IShellFolder *psf None,LPCITEMIDLIST pidl None,UINT flags None,PFNASYNCICONTASKBALLBACK pfn None,void *pvData None,void *pvHint None,int *piIndex None,int *piIndexSel None)
uint32 None ramgmtpsprovider.Clear([in] string RoutingDomain,[in] boolean Force,[in] string Prefix[])
HRESULT None shell32.SHAssocEnumHandlersForProtocolByApplication(_In_ PCWSTR protocol,_In_ REFIID riid,_Out_ void **enumHandlers)
BOOL None shell32.SHGetNewLinkInfo(_In_ LPCTSTR pszLinkTo,_In_ LPCTSTR pszDir,_Out_ LPTSTR pszName,_Out_ BOOL *pfMustCopy,_In_ UINT uFlags)
BOOL None shell32.SHGetNewLinkInfoW(_In_ LPCTSTR pszLinkTo,_In_ LPCTSTR pszDir,_Out_ LPTSTR pszName,_Out_ BOOL *pfMustCopy,_In_ UINT uFlags)
BOOL None shell32.SHGetNewLinkInfoA(_In_ LPCTSTR pszLinkTo,_In_ LPCTSTR pszDir,_Out_ LPTSTR pszName,_Out_ BOOL *pfMustCopy,_In_ UINT uFlags)
HRESULT None shell32.SHMultiFileProperties(_In_ IDataObject *pdtobj,DWORD dwFlags None)
BOOL None shell32.SHChangeNotification_Unlock(_In_ HANDLE hLock)
BOOL None shell32.UpdateAllDesktopSubscriptions(IADesktopP2 *padp2 None)
VOID WINAPI kernel32.CloseThreadpoolIo(_Inout_ PTP_IO pio)
HRESULT None shell32.SHGetDataFromIDList(_In_ IShellFolder *psf,_In_ PCUITEMID_CHILD pidl,int nFormat None,_Out_ void *pv,int cb None)
HRESULT None shell32.SHGetDataFromIDListW(_In_ IShellFolder *psf,_In_ PCUITEMID_CHILD pidl,int nFormat None,_Out_ void *pv,int cb None)
HRESULT None shell32.SHGetDataFromIDListA(_In_ IShellFolder *psf,_In_ PCUITEMID_CHILD pidl,int nFormat None,_Out_ void *pv,int cb None)
BOOL WINAPI kernel32.QueryFullProcessImageName(_In_ HANDLE hProcess,_In_ DWORD dwFlags,_Out_ LPTSTR lpExeName,_Inout_ PDWORD lpdwSize)
BOOL WINAPI kernel32.QueryFullProcessImageNameW(_In_ HANDLE hProcess,_In_ DWORD dwFlags,_Out_ LPTSTR lpExeName,_Inout_ PDWORD lpdwSize)
BOOL WINAPI kernel32.QueryFullProcessImageNameA(_In_ HANDLE hProcess,_In_ DWORD dwFlags,_Out_ LPTSTR lpExeName,_Inout_ PDWORD lpdwSize)
DWORD None shlwapi.StopWatchMode(void None None)
BOOL None user32.SetMenuContextHelpId(HMENU hmenu None,DWORD dwContextHelpId None)
typedef None None.HRESULT(CALLBACK *LPFNVIEWCALLBACK None)
HANDLE WINAPI avrt.AvSetMmMaxThreadCharacteristics(_In_ LPCTSTR FirstTask,_In_ LPCTSTR SecondTask,_Inout_ LPDWORD TaskIndex)
HANDLE WINAPI avrt.AvSetMmMaxThreadCharacteristicsW(_In_ LPCTSTR FirstTask,_In_ LPCTSTR SecondTask,_Inout_ LPDWORD TaskIndex)
HANDLE WINAPI avrt.AvSetMmMaxThreadCharacteristicsA(_In_ LPCTSTR FirstTask,_In_ LPCTSTR SecondTask,_Inout_ LPDWORD TaskIndex)
BOOL None None.WSPGetOverlappedResult(_In_ SOCKET s,_In_ LPWSAOVERLAPPED lpOverlapped,_Out_ LPDWORD lpcbTransfer,_In_ BOOL fWait,_Out_ LPDWORD lpdwFlags,_Out_ LPINT lpErrno)
HICON None shell32.ExtractAssociatedIconEx(_Reserved_ HINSTANCE hInst,_Inout_ LPTSTR lpIconPath,_Inout_ LPWORD lpiIconIndex,_Inout_ LPWORD lpiIconId)
HICON None shell32.ExtractAssociatedIconExW(_Reserved_ HINSTANCE hInst,_Inout_ LPTSTR lpIconPath,_Inout_ LPWORD lpiIconIndex,_Inout_ LPWORD lpiIconId)
HICON None shell32.ExtractAssociatedIconExA(_Reserved_ HINSTANCE hInst,_Inout_ LPTSTR lpIconPath,_Inout_ LPWORD lpiIconIndex,_Inout_ LPWORD lpiIconId)
BOOL WINAPI kernel32.AddIntegrityLabelToBoundaryDescriptor(_Inout_ HANDLE *BoundaryDescriptor,_In_ PSID IntegrityLabel)
HINSTANCE None ole32.CoLoadLibrary(_In_ LPOLESTR lpszLibName,_In_ BOOL bAutoFree)
PCUIDLIST_RELATIVE None None.ILSkip(_In_ PCUIDLIST_RELATIVE pidl,UINT cb None)
BOOL None shell32.Win32DeleteFile(_In_ PCWSTR pszFileName)
BOOL WINAPI userenv.UnloadUserProfile(_In_ HANDLE hToken,_In_ HANDLE hProfile)
HRESULT None None.GetHistoryObject([out] IOleObject **ppole,[out] IStream **pstm,[out] IBindCtx **ppbc)
PTP_POOL WINAPI kernel32.CreateThreadpool(_Reserved_ PVOID reserved)
HRESULT None shell32.SHGetItemFromDataObject(_In_ IDataObject *pdtobj,_In_ DATAOBJ_GET_ITEM_FLAGS dwFlags,_In_ REFIID riid,_Out_ void **ppv)
DWORD None shell32.SHFormatDrive(_In_ HWND hwnd,UINT drive None,UINT fmtID None,UINT options None)
BOOL WINAPI userenv.ExpandEnvironmentStringsForUser(_In_opt_ HANDLE hToken,_In_ LPCTSTR lpSrc,_Out_ LPTSTR lpDest,_In_ DWORD dwSize)
BOOL WINAPI userenv.ExpandEnvironmentStringsForUserW(_In_opt_ HANDLE hToken,_In_ LPCTSTR lpSrc,_Out_ LPTSTR lpDest,_In_ DWORD dwSize)
BOOL WINAPI userenv.ExpandEnvironmentStringsForUserA(_In_opt_ HANDLE hToken,_In_ LPCTSTR lpSrc,_Out_ LPTSTR lpDest,_In_ DWORD dwSize)
BOOL WINAPI userenv.CreateUserProfileEx(_In_ PSID pSid,_In_ LPCTSTR lpUserName,_In_opt_ LPCTSTR lpUserHive,_Out_opt_ LPTSTR lpProfileDir,_In_ DWORD dwDirSize,_In_ BOOL bWin9xUpg)
BOOL WINAPI userenv.CreateUserProfileExW(_In_ PSID pSid,_In_ LPCTSTR lpUserName,_In_opt_ LPCTSTR lpUserHive,_Out_opt_ LPTSTR lpProfileDir,_In_ DWORD dwDirSize,_In_ BOOL bWin9xUpg)
BOOL WINAPI userenv.CreateUserProfileExA(_In_ PSID pSid,_In_ LPCTSTR lpUserName,_In_opt_ LPCTSTR lpUserHive,_Out_opt_ LPTSTR lpProfileDir,_In_ DWORD dwDirSize,_In_ BOOL bWin9xUpg)
HRESULT None shell32.SHCreateShellFolderViewEx(_In_ CSFV *pcsfv,_Out_ IShellView **ppsv)
BOOL None shell32.SHValidateUNC(_In_opt_ HWND hwndOwner,_Inout_ PWSTR pszFile,UINT fConnect None)
BOOL WINAPI kernel32.ResetEvent(_In_ HANDLE hEvent)
HRESULT None shell32.SHFlushClipboard(void None None)
BOOL None shlwapi.MLFreeLibrary(_In_ HMODULE hModule)
VOID None None.SetThreadpoolCallbackRunsLong(_Inout_ PTP_CALLBACK_ENVIRON pcbe)
HRESULT None shell32.SetCurrentProcessExplicitAppUserModelID(_In_ PCWSTR AppID)
HINSTANCE None shell32.ShellExecute(_In_opt_ HWND hwnd,_In_opt_ LPCTSTR lpOperation,_In_ LPCTSTR lpFile,_In_opt_ LPCTSTR lpParameters,_In_opt_ LPCTSTR lpDirectory,_In_ INT nShowCmd)
HINSTANCE None shell32.ShellExecuteW(_In_opt_ HWND hwnd,_In_opt_ LPCTSTR lpOperation,_In_ LPCTSTR lpFile,_In_opt_ LPCTSTR lpParameters,_In_opt_ LPCTSTR lpDirectory,_In_ INT nShowCmd)
HINSTANCE None shell32.ShellExecuteA(_In_opt_ HWND hwnd,_In_opt_ LPCTSTR lpOperation,_In_ LPCTSTR lpFile,_In_opt_ LPCTSTR lpParameters,_In_opt_ LPCTSTR lpDirectory,_In_ INT nShowCmd)
HRESULT None shell32.SHCreateShellItemArrayFromIDLists(_In_ UINT cidl,_In_ PCIDLIST_ABSOLUTE_ARRAY rgpidl,_Out_ IShellItemArray **ppsiItemArray)
HRESULT None shell32.SHCreateItemInKnownFolder(_In_ REFKNOWNFOLDERID kfid,DWORD dwKFFlags None,_In_opt_ PCWSTR pszItem,_In_ REFIID riid,_Out_ void **ppv)
HWND WINAPI user32.GetDesktopWindow(void None None)
int None gdi32.GetObject(_In_ HGDIOBJ hgdiobj,_In_ int cbBuffer,_Out_ LPVOID lpvObject)
int None gdi32.GetObjectW(_In_ HGDIOBJ hgdiobj,_In_ int cbBuffer,_Out_ LPVOID lpvObject)
int None gdi32.GetObjectA(_In_ HGDIOBJ hgdiobj,_In_ int cbBuffer,_Out_ LPVOID lpvObject)
DWORD None shell32.DoEnvironmentSubst(_Inout_ LPTSTR pszSrc,UINT cchSrc None)
DWORD None shell32.DoEnvironmentSubstW(_Inout_ LPTSTR pszSrc,UINT cchSrc None)
DWORD None shell32.DoEnvironmentSubstA(_Inout_ LPTSTR pszSrc,UINT cchSrc None)
BOOL WINAPI userenv.CreateEnvironmentBlock(_Out_ LPVOID *lpEnvironment,_In_opt_ HANDLE hToken,_In_ BOOL bInherit)
NTSTATUS None cscapi.CscSearchApiGetInterface(_In_ ULONG Version,_In_ ULONG Cookie,_Out_ CCscSearchApiInterface **Interface)
HRESULT None None.ILLoadFromStreamEx(_In_ IStream *pstm,_Out_ PIDLIST_ABSOLUTE *ppidl)
HINSTANCE None shell32.FindExecutable(_In_ LPCTSTR lpFile,_In_opt_ LPCTSTR lpDirectory,_Out_ LPTSTR lpResult)
HINSTANCE None shell32.FindExecutableW(_In_ LPCTSTR lpFile,_In_opt_ LPCTSTR lpDirectory,_Out_ LPTSTR lpResult)
HINSTANCE None shell32.FindExecutableA(_In_ LPCTSTR lpFile,_In_opt_ LPCTSTR lpDirectory,_Out_ LPTSTR lpResult)
LSTATUS None shlwapi.SHRegGetValue(_In_ HKEY hkey,_In_ LPCTSTR pszSubKey,_In_ LPCTSTR pszValue,_In_ SRRF srrfFlags,_Inout_ LPDWORD pdwType,_Out_ LPVOID pvData,_Inout_ LPDWORD pcbData)
LSTATUS None shlwapi.SHRegGetValueW(_In_ HKEY hkey,_In_ LPCTSTR pszSubKey,_In_ LPCTSTR pszValue,_In_ SRRF srrfFlags,_Inout_ LPDWORD pdwType,_Out_ LPVOID pvData,_Inout_ LPDWORD pcbData)
LSTATUS None shlwapi.SHRegGetValueA(_In_ HKEY hkey,_In_ LPCTSTR pszSubKey,_In_ LPCTSTR pszValue,_In_ SRRF srrfFlags,_Inout_ LPDWORD pdwType,_Out_ LPVOID pvData,_Inout_ LPDWORD pcbData)
STDAPI None shcore.UnregisterScaleChangeEvent(_In_ DWORD_PTR dwCookie)
HRESULT None shell32.SHGetTemporaryPropertyForItem(_In_ IShellItem *psi,REFPROPERTYKEY pk None,_Out_ PROPVARIANT *ppropvarInk)
HRESULT None shell32.SHGetDriveMedia(_In_ PCWSTR pszDrive,_Out_ DWORD *pdwMediaContent)
VOID WINAPI kernel32.SetThreadpoolThreadMaximum(_Inout_ PTP_POOL ptpp,_In_ DWORD cthrdMost)
HICON None shell32.ExtractIcon(_Reserved_ HINSTANCE hInst,_In_ LPCTSTR lpszExeFileName,UINT nIconIndex None)
HICON None shell32.ExtractIconW(_Reserved_ HINSTANCE hInst,_In_ LPCTSTR lpszExeFileName,UINT nIconIndex None)
HICON None shell32.ExtractIconA(_Reserved_ HINSTANCE hInst,_In_ LPCTSTR lpszExeFileName,UINT nIconIndex None)
BOOL None shell32.DAD_DragEnterEx(HWND hwndTarget None,const POINT ptStart)
HRESULT None None.StringCchCopyN(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_In_ size_t cchSrc)
HRESULT None None.StringCchCopyNW(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_In_ size_t cchSrc)
HRESULT None None.StringCchCopyNA(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_In_ size_t cchSrc)
BOOLEAN WINAPI advapi32.AuditQueryGlobalSacl(_In_ PCWSTR ObjectTypeName,_Out_ PACL *Acl)
BOOLEAN WINAPI advapi32.AuditQueryGlobalSaclW(_In_ PCWSTR ObjectTypeName,_Out_ PACL *Acl)
BOOLEAN WINAPI advapi32.AuditQueryGlobalSaclA(_In_ PCWSTR ObjectTypeName,_Out_ PACL *Acl)
BOOL WINAPI user32.EnumThreadWindows(_In_ DWORD dwThreadId,_In_ WNDENUMPROC lpfn,_In_ LPARAM lParam)
BOOL None shlwapi.SHFreeShared(_In_ HANDLE hData,_In_ DWORD dwProcessId)
void None mydocs.PerUserInit(void None None)
SOCKET None None.WPUModifyIFSHandle(_In_ DWORD dwCatalogEntryId,_In_ SOCKET ProposedHandle,_Out_ LPINT lpErrno)
BOOL None None.WSPGetQOSByName(_In_ SOCKET s,_Inout_ LPWSABUF lpQOSName,_Out_ LPQOS lpQOS,_Out_ LPINT lpErrno)
BOOL None shell32.SHGetDiskFreeSpaceEx(_In_ LPCTSTR pszDirectoryName,_Out_opt_ ULARGE_INTEGER *pulFreeBytesAvailableToCaller,_Out_opt_ ULARGE_INTEGER *pulTotalNumberOfBytes,_Out_opt_ ULARGE_INTEGER *pulTotalNumberOfFreeBytes)
BOOL None shell32.SHGetDiskFreeSpaceExW(_In_ LPCTSTR pszDirectoryName,_Out_opt_ ULARGE_INTEGER *pulFreeBytesAvailableToCaller,_Out_opt_ ULARGE_INTEGER *pulTotalNumberOfBytes,_Out_opt_ ULARGE_INTEGER *pulTotalNumberOfFreeBytes)
BOOL None shell32.SHGetDiskFreeSpaceExA(_In_ LPCTSTR pszDirectoryName,_Out_opt_ ULARGE_INTEGER *pulFreeBytesAvailableToCaller,_Out_opt_ ULARGE_INTEGER *pulTotalNumberOfBytes,_Out_opt_ ULARGE_INTEGER *pulTotalNumberOfFreeBytes)
BOOL WINAPI user32.SetWindowPos(_In_ HWND hWnd,_In_opt_ HWND hWndInsertAfter,_In_ int X,_In_ int Y,_In_ int cx,_In_ int cy,_In_ UINT uFlags)
void None shell32.SHChangeNotifyRegisterThread(SCNRT_STATUS status None)
BOOL WINAPI kernel32.IsWow64Process2(_In_ HANDLE hProcess,_Out_ USHORT *pProcessMachine,_Out_opt_ USHORT *pNativeMachine)
VOID CALLBACK None.CleanupGroupCancelCallback(_Inout_opt_ PVOID ObjectContext,_Inout_opt_ PVOID CleanupContext)
ULONG None twinapi.core.RegisterAppStateChangeNotification(_In_ PAPPSTATE_CHANGE_ROUTINE Routine,_In_opt_ PVOID Context,_Out_ PAPPSTATE_REGISTRATION *Registration)
BOOL CALLBACK None.InitOnceCallback(_Inout_ PINIT_ONCE InitOnce,_Inout_opt_ PVOID Parameter,_Out_opt_ PVOID *Context)
LONG None shlwapi.SHRegGetValueFromHKCUHKLM(_In_ PCWSTR pwszKey,_In_ PCWSTR pwszValue,_In_ SRRF srrfFlags,_Out_ DWORD *pdwType,_In_ LPCVOID pvData,_Inout_ DWORD *pcbData)
BOOL None shell32.ILIsParent(_In_ PCIDLIST_ABSOLUTE pidl1,_In_ PCIDLIST_ABSOLUTE pidl2,_In_ BOOL fImmediate)
HRESULT None None.SHLocalStrDup(PCTSTR psz None,_Out_opt_ PTSTR *ppsz)
HRESULT None None.SHLocalStrDupW(PCTSTR psz None,_Out_opt_ PTSTR *ppsz)
HRESULT None None.SHLocalStrDupA(PCTSTR psz None,_Out_opt_ PTSTR *ppsz)
VOID WINAPI kernel32.CloseThreadpoolWork(_Inout_ PTP_WORK pwk)
HRESULT None shell32.SHCreateAssociationRegistration(_In_ REFIID riid,_Out_ void **ppv)
PIDLIST_ABSOLUTE None None.ILCloneFull(_In_ PCUIDLIST_ABSOLUTE pidl)
HRESULT None shell32.SHGetMalloc(LPMALLOC *ppMalloc None)
VOID WINAPI kernel32.FlushProcessWriteBuffers(void None None)
BOOL WINAPI user32.DestroyWindow(_In_ HWND hWnd)
int WSPAPI ws2_32.WSCSetProviderInfo32(_In_ LPGUID lpProviderId,_In_ WSC_PROVIDER_INFO_TYPE InfoType,_In_ PBYTE Info,_In_ size_t InfoSize,_In_ DWORD Flags,_Out_ LPINT lpErrno)
BOOL WINAPI user32.DeregisterShellHookWindow(_In_ HWND hWnd)
BOOL WINAPI kernel32.SetProcessWorkingSetSize(_In_ HANDLE hProcess,_In_ SIZE_T dwMinimumWorkingSetSize,_In_ SIZE_T dwMaximumWorkingSetSize)
int WSAAPI None.NSPRemoveServiceClass(_In_ LPGUID lpProviderId,_In_ LPGUID lpServiceClassId)
WSAEVENT None None.WPUCreateEvent(_Out_ LPINT lpErrno)
BOOL WINAPI kernel32.SetThreadPriorityBoost(_In_ HANDLE hThread,_In_ BOOL DisablePriorityBoost)
BOOL WINAPI kernel32.IsWow64Process(_In_ HANDLE hProcess,_Out_ PBOOL Wow64Process)
BOOL None None.WPUResetEvent(_In_ WSAEVENT hEvent,_Out_ LPINT lpErrno)
BOOL WINAPI userenv.GetProfileType(_Out_ DWORD *pdwFlags)
VOID None shell32.DragAcceptFiles(HWND hWnd None,BOOL fAccept None)
HRESULT None shell32.SHLoadInProc(_In_ REFCLSID rclsid)
int WSPAPI ws2_32.WSCGetProviderInfo(_In_ LPGUID lpProviderId,_In_ WSC_PROVIDER_INFO_TYPE InfoType,_Out_ PBYTE Info,_Inout_ size_t *InfoSize,_In_ DWORD Flags,_Out_ LPINT lpErrno)
DWORD None shdocvw.SoftwareUpdateMessageBox(_In_opt_ HWND hWnd,_In_ PCWSTR pszDistUnit,DWORD dwFlags None,_Out_opt_ LPSOFTDISTINFO psdi)
BOOL WINAPI user32.EnumChildWindows(_In_opt_ HWND hWndParent,_In_ WNDENUMPROC lpEnumFunc,_In_ LPARAM lParam)
BOOL WINAPI userenv.LoadUserProfile(_In_ HANDLE hToken,_Inout_ LPPROFILEINFO lpProfileInfo)
BOOL WINAPI userenv.LoadUserProfileW(_In_ HANDLE hToken,_Inout_ LPPROFILEINFO lpProfileInfo)
BOOL WINAPI userenv.LoadUserProfileA(_In_ HANDLE hToken,_Inout_ LPPROFILEINFO lpProfileInfo)
HRESULT None None.SetReferrer([in] LPITEMIDLIST pidl)
BOOL WINAPI user32.IsWindowVisible(_In_ HWND hWnd)
PCUITEMID_CHILD None None.ILCloneChild(_In_ PCUITEMID_CHILD pidl)
VOID None shell32.DragFinish(HDROP hDrop None)
void NTAPI twinapi.core.UnregisterAppStateChangeNotification(_Inout_ PAPPSTATE_REGISTRATION Registration)
BOOL None None.WPUSetEvent(_In_ WSAEVENT hEvent,_Out_ LPINT lpErrno)
HANDLE WINAPI kernel32.OpenPrivateNamespace(_In_ LPVOID lpBoundaryDescriptor,_In_ LPCTSTR lpAliasPrefix)
HANDLE WINAPI kernel32.OpenPrivateNamespaceW(_In_ LPVOID lpBoundaryDescriptor,_In_ LPCTSTR lpAliasPrefix)
HANDLE WINAPI kernel32.OpenPrivateNamespaceA(_In_ LPVOID lpBoundaryDescriptor,_In_ LPCTSTR lpAliasPrefix)
BOOL None shell32.ILIsEqual(_In_ PCIDLIST_ABSOLUTE pidl1,_In_ PCIDLIST_ABSOLUTE pidl2)
int None None.WSPShutdown(_In_ SOCKET s,_In_ int how,_Out_ LPINT lpErrno)
HRESULT None shell32.GetCompositionState([out] BOOL *pfCompositionEnabled)
HINSTANCE None shell32.SHGetShellStyleHInstance(void None None)
DWORD_PTR WINAPI kernel32.SetThreadAffinityMask(_In_ HANDLE hThread,_In_ DWORD_PTR dwThreadAffinityMask)
BOOL WINAPI user32.IsChild(_In_ HWND hWndParent,_In_ HWND hWnd)
HRESULT None shell32.SHBindToParent(_In_ PCIDLIST_ABSOLUTE pidl,_In_ REFIID riid,_Out_ VOID **ppv,_Out_ PCUITEMID_CHILD *ppidlLast)
int WSPAPI ws2_32.WSCWriteProviderOrder32(_In_ LPDWORD lpwdCatalogEntryId,_In_ DWORD dwNumberOfEntries)
LRESULT None shell32.SHShellFolderView_Message(_In_ HWND hwndMain,UINT uMsg None,LPARAM lParam None)
HRESULT None url.URLAssociationDialog(HWND hwndParent None,DWORD dwInFlags None,PTCSTR pcszFile None,PTCSTR pcszURL None,_Out_ PTSTR pszAppBuf,UINT ucAppBufLen None)
HRESULT None url.URLAssociationDialogW(HWND hwndParent None,DWORD dwInFlags None,PTCSTR pcszFile None,PTCSTR pcszURL None,_Out_ PTSTR pszAppBuf,UINT ucAppBufLen None)
HRESULT None url.URLAssociationDialogA(HWND hwndParent None,DWORD dwInFlags None,PTCSTR pcszFile None,PTCSTR pcszURL None,_Out_ PTSTR pszAppBuf,UINT ucAppBufLen None)
BOOL WINAPI user32.SoundSentry(void None None)
UINT None shell32.ExtractIconEx(_In_ LPCTSTR lpszFile,_In_ int nIconIndex,_Out_ HICON *phiconLarge,_Out_ HICON *phiconSmall,UINT nIcons None)
UINT None shell32.ExtractIconExW(_In_ LPCTSTR lpszFile,_In_ int nIconIndex,_Out_ HICON *phiconLarge,_Out_ HICON *phiconSmall,UINT nIcons None)
UINT None shell32.ExtractIconExA(_In_ LPCTSTR lpszFile,_In_ int nIconIndex,_Out_ HICON *phiconLarge,_Out_ HICON *phiconSmall,UINT nIcons None)
BOOL None shell32.PathYetAnotherMakeUniqueName(_Out_ PWSTR pszUniqueName,_In_ PCWSTR pszPath,_In_opt_ PCWSTR pszShort,_In_opt_ PCWSTR pszFileSpec)
HRESULT None shell32.SHLoadNonloadedIconOverlayIdentifiers(void None None)
HWND None None.GetContractDelegateWindow(_In_ HWND hwndSource)
HRESULT None None.ILLoadFromStreamEx(_In_ IStream *pstm,_Out_ PITEMID_CHILD *ppidl)
HWND WINAPI user32.ChildWindowFromPoint(_In_ HWND hWndParent,_In_ POINT Point)
int None shell32.IsNetDrive(_In_ int iDrive)
BOOL WINAPI userenv.GetAllUsersProfileDirectory(_Out_opt_ LPTSTR lpProfileDir,_Inout_ LPDWORD lpcchSize)
BOOL WINAPI userenv.GetAllUsersProfileDirectoryW(_Out_opt_ LPTSTR lpProfileDir,_Inout_ LPDWORD lpcchSize)
BOOL WINAPI userenv.GetAllUsersProfileDirectoryA(_Out_opt_ LPTSTR lpProfileDir,_Inout_ LPDWORD lpcchSize)
LONG None None.CPlApplet(HWND hwndCPl None,UINT uMsg None,LPARAM lParam1 None,LPARAM lParam2 None)
uint32 None dnsserverpsprovider.SetByZone([in] boolean PassThru,[in] string ComputerName,[in] string Name,[in] string ZoneName,[in] string ClientSubnet,[in] string InternetProtocol,[in] string TimeOfDay,[in] string TransportProtocol,[in] uint32 ProcessingOrder,[in] string ServerInterfaceIP,[in] string Condition,[out] DnsServerPolicy cmdletOutput)
PWSTR None shell32.StrStrNW(_In_ PWSTR pszFirst,_In_ PCWSTR pszSrch,UINT cchMax None)
PITEMID_CHILD None shell32.ILCloneFirst(_In_ PCUIDLIST_RELATIVE pidl)
HRESULT None url.MIMEAssociationDialog(HWND hwndParent None,DWORD dwInFlags None,PCTSTR pcszFile None,PCTSTR pcszMIMEContentType None,_Out_ PTSTR pszAppBuf,UINT ucAppBufLen None)
HRESULT None url.MIMEAssociationDialogW(HWND hwndParent None,DWORD dwInFlags None,PCTSTR pcszFile None,PCTSTR pcszMIMEContentType None,_Out_ PTSTR pszAppBuf,UINT ucAppBufLen None)
HRESULT None url.MIMEAssociationDialogA(HWND hwndParent None,DWORD dwInFlags None,PCTSTR pcszFile None,PCTSTR pcszMIMEContentType None,_Out_ PTSTR pszAppBuf,UINT ucAppBufLen None)
HRESULT WINAPI userenv.CreateAppContainerProfile(_In_ PCWSTR pszAppContainerName,_In_ PCWSTR pszDisplayName,_In_ PCWSTR pszDescription,_In_ PSID_AND_ATTRIBUTES pCapabilities,_In_ DWORD dwCapabilityCount,_Out_ PSID *ppSidAppContainerSid)
int None None.WSPStringToAddress(_In_ LPWSTR AddressString,_In_ INT AddressFamily,_In_ LPWSAPROTOCOL_INFO lpProtocolInfo,_Out_ LPSOCKADDR lpAddress,_Inout_ LPINT lpAddressLength,_Out_ LPINT lpErrno)
BOOL WINAPI user32.SetForegroundWindow(_In_ HWND hWnd)
BOOL None user32.SetWindowContextHelpId(HWND hwnd None,DWORD dwContextHelpId None)
INT None None.WPUOpenCurrentThread(_Out_ LPWSATHREADID lpThreadId,_Out_ LPINT lpErrno)
HRESULT None shlwapi.SHIsChildOrSelf(_In_ HWND hwndParent,_In_ HWND hwnd)
UINT None shell32.SHExtractIconsW(_In_ LPCWSTR pszFileName,_In_ int nIconIndex,_In_ int cxIcon,_In_ int cyIcon,_Out_ HICON *phIcon,_Out_ UINT *pIconId,_In_ UINT nIcons,_In_ UINT flags)
UINT None shell32.SHExtractIconsW(_In_ LPCWSTR pszFileName,_In_ int nIconIndex,_In_ int cxIcon,_In_ int cyIcon,_Out_ HICON *phIcon,_Out_ UINT *pIconId,_In_ UINT nIcons,_In_ UINT flags)
BOOL None None.ILIsEmpty(_In_ PCUID_RELATIVE pidl)
int WSAAPI None.NSPv2LookupServiceEnd(_In_ HANDLE hLookup)
HRESULT None None._GetBorderDWHelper([in] IUnknown *punkSrc,[in] LPRECT lprectBorder,[in] BOOL bUseHmonitor)
LPVOID WINAPI kernel32.ConvertThreadToFiber(_In_opt_ LPVOID lpParameter)
HRESULT None shell32.SHEnumerateUnreadMailAccounts(_In_opt_ HKEY hKeyUser,DWORD dwIndex None,_Out_ LPTSTR pszMailAddress,int cchMailAddress None)
HRESULT None shell32.SHEnumerateUnreadMailAccountsW(_In_opt_ HKEY hKeyUser,DWORD dwIndex None,_Out_ LPTSTR pszMailAddress,int cchMailAddress None)
HRESULT None shell32.SHEnumerateUnreadMailAccountsA(_In_opt_ HKEY hKeyUser,DWORD dwIndex None,_Out_ LPTSTR pszMailAddress,int cchMailAddress None)
int None None.WPUQuerySocketHandleContext(_In_ SOCKET s,_Out_ PDWORD_PTR lpContext,_Out_ LPINT lpErrno)
HANDLE WINAPI kernel32.CreateMutex(_In_opt_ LPSECURITY_ATTRIBUTES lpMutexAttributes,_In_ BOOL bInitialOwner,_In_opt_ LPCTSTR lpName)
HANDLE WINAPI kernel32.CreateMutexW(_In_opt_ LPSECURITY_ATTRIBUTES lpMutexAttributes,_In_ BOOL bInitialOwner,_In_opt_ LPCTSTR lpName)
HANDLE WINAPI kernel32.CreateMutexA(_In_opt_ LPSECURITY_ATTRIBUTES lpMutexAttributes,_In_ BOOL bInitialOwner,_In_opt_ LPCTSTR lpName)
HRESULT None shell32.ParseDisplayName([in] HWND hwnd,[in] IBindCtx *pbc,[in] LPWSTR pszDisplayName,[out] ULONG *pchEaten,[out] PIDLIST_RELATIVE *ppidl,[in None None,out] ULONG *pdwAttributes)
BOOL WINAPI kernel32.EnterSynchronizationBarrier(_Inout_ LPSYNCHRONIZATION_BARRIER lpBarrier,_In_ DWORD dwFlags)
void WINAPI webservices.WsFreeServiceProxy(_In_ WS_SERVICE_PROXY* serviceProxy)
int WSPAPI ws2_32.WSCUninstallNamespace32(_In_ LPGUID lpProviderId)
VOID WINAPI kernel32.LeaveCriticalSectionWhenCallbackReturns(_Inout_ PTP_CALLBACK_INSTANCE pci,_Inout_ PCRITICAL_SECTION pcs)
void None shell32.SHSetInstanceExplorer(_In_opt_ IUnknown *punk)
INT WSPAPI None.WPUCloseThread(_In_ LPWSATHREADID lpThreadId,_Out_ LPINT lpErrno)
BOOL WINAPI user32.GetGUIThreadInfo(_In_ DWORD idThread,_Inout_ LPGUITHREADINFO lpgui)
HRESULT WINAPI webservices.WsGetListenerProperty(_In_ WS_LISTENER* listener,_In_ WS_LISTENER_PROPERTY_ID id,void* value None,_In_ ULONG valueSize,_In_opt_ WS_ERROR* error)
int None comctl32.CreateMRUListW(_In_ LPMRUINFO lpmi)
int None comctl32.CreateMRUListW(_In_ LPMRUINFO lpmi)
BOOL WINAPI user32.AnimateWindow(_In_ HWND hwnd,_In_ DWORD dwTime,_In_ DWORD dwFlags)
int WSAAPI None.NSPLookupServiceEnd(_In_ HANDLE hLookup)
INT WSPAPI ws2_32.WSAProviderCompleteAsyncCall(HANDLE hAsyncCall None,INT iRetCode None)
UINT None shell32.ILGetSize(_In_opt_ PCUIDLIST_RELATIVE pidl)
BOOL None comctl32.RemoveWindowSubclass(_In_ HWND hWnd,_In_ SUBCLASSPROC pfnSubclass,_In_ UINT_PTR uIdSubclass)
BOOL None shell32.LinkWindow_RegisterClass(void None None)
BOOL WINAPI kernel32.DeleteUmsThreadContext(_In_ PUMS_CONTEXT UmsThread)
HRESULT WINAPI userenv.DeleteAppContainerProfile(_In_ PCWSTR pszAppContainerName)
BOOL WINAPI crypt32.CertCompareIntegerBlob(_In_ PCRYPT_INTEGER_BLOB pInt1,_In_ PCRYPT_INTEGER_BLOB pInt2)
HANDLE None shell32.SHChangeNotification_Lock(_In_ HANDLE hChange,DWORD dwProcId None,_Out_opt_ PIDLIST_ABSOLUTE **pppidl,_Out_opt_ LONG *plEvent)
HRESULT None shell32.SHCreateItemFromParsingName(_In_ PCWSTR pszPath,_In_opt_ IBindCtx *pbc,_In_ REFIID riid,_Out_ void **ppv)
BOOL None shell32.DAD_DragLeave(void None None)
void None query.CIShutdown(void None None)
HRESULT None shell32.SHGetFolderPathAndSubDir(_In_ HWND hwnd,_In_ int csidl,_In_ HANDLE hToken,_In_ DWORD dwFlags,_In_ LPCTSTR pszSubDir,_Out_ LPTSTR pszPath)
HRESULT None shell32.SHGetFolderPathAndSubDirW(_In_ HWND hwnd,_In_ int csidl,_In_ HANDLE hToken,_In_ DWORD dwFlags,_In_ LPCTSTR pszSubDir,_Out_ LPTSTR pszPath)
HRESULT None shell32.SHGetFolderPathAndSubDirA(_In_ HWND hwnd,_In_ int csidl,_In_ HANDLE hToken,_In_ DWORD dwFlags,_In_ LPCTSTR pszSubDir,_Out_ LPTSTR pszPath)
int WSPAPI ws2_32.WSCWriteProviderOrder(_In_ LPDWORD lpwdCatalogEntryId,_In_ DWORD dwNumberOfEntries)
INT WSPAPI ws2_32.WSCEnumNameSpaceProviders32(_Inout_ LPDWORD lpdwBufferLength,_Out_ LPWSANAMESPACE_INFOW lpnspBuffer)
UINT WINAPI shcore.GetDpiForShellUiComponent(_In_ SHELL_UI_COMPONENT component)
HRESULT None shell32.GetAppInfo([out] APPINFODATA *pInfo)
HRESULT None None.GetSourceViewSizePreference([out] APPLICATION_VIEW_SIZE_PREFERENCE *sourceSizeAfterLaunch)
int WSPAPI ws2_32.WSCWriteNameSpaceOrder(_In_ LPGUID lpProviderId,_In_ DWORD dwNumberOfEntries)
PIDLIST_ABSOLUTE None shell32.SHSimpleIDListFromPath(_In_ PCWSTR pszPath)
HRESULT None certadm.CertSrvBackupGetDynamicFileList(_In_ HCSBC hbc,_Out_ WCHAR **ppwszzFileList,_Out_ DWORD *pcbSize)
HRESULT None certadm.CertSrvBackupGetDynamicFileListW(_In_ HCSBC hbc,_Out_ WCHAR **ppwszzFileList,_Out_ DWORD *pcbSize)
HRESULT None None.RegisterCategories([in] ULONG cCategories,[in] CATEGORYINFO rgCategoryInfo[])
UINT WINAPI user32.RealGetWindowClass(_In_ HWND hwnd,_Out_ LPTSTR pszType,_In_ UINT cchType)
UINT WINAPI user32.RealGetWindowClassW(_In_ HWND hwnd,_Out_ LPTSTR pszType,_In_ UINT cchType)
UINT WINAPI user32.ArrangeIconicWindows(_In_ HWND hWnd)
BOOL WINAPI kernel32.GetProcessHandleCount(_In_ HANDLE hProcess,_Inout_ PDWORD pdwHandleCount)
int WINAPI user32.InternalGetWindowText(_In_ HWND hWnd,_Out_ LPWSTR lpString,_In_ int nMaxCount)
int None None.WSPListen(_In_ SOCKET s,_In_ int backlog,_Out_ LPINT lpErrno)
HRESULT WINAPI webservices.WsReadQualifiedName(_In_ WS_XML_READER* reader,_In_ WS_HEAP* heap,WS_XML_STRING* prefix None,_Out_ WS_XML_STRING* *localName,WS_XML_STRING* ns None,_In_opt_ WS_ERROR* error)
uint32 None dnsserverpsprovider.AddByMX([in] string ZoneName,[in] string MailExchange,[in] uint16 Preference,[in] datetime TimeToLive,[in] boolean AgeRecord,[in] boolean AllowUpdateAny,[in] string Name,[in] boolean MX,[in] string ComputerName,[in] boolean PassThru,[in] string ZoneScope,[out] DnsServerResourceRecord cmdletOutput)
int WSPAPI ws2_32.WSCGetProviderInfo32(_In_ LPGUID lpProviderId,_In_ WSC_PROVIDER_INFO_TYPE InfoType,_Out_ PBYTE Info,_Inout_ size_t *InfoSize,_In_ DWORD Flags,_Out_ LPINT lpErrno)
BOOL WINAPI user32.EnumWindows(_In_ WNDENUMPROC lpEnumFunc,_In_ LPARAM lParam)
void None None.FreeIDListArray(_In_ PIDLIST_RELATIVE *ppidls,UINT cItems None)
BOOL WINAPI user32.ShowWindow(_In_ HWND hWnd,_In_ int nCmdShow)
int WSPAPI ws2_32.WSCEnableNSProvider(_In_ LPGUID lpProviderId,_In_ BOOL fEnable)
uint32 None dnsserverpsprovider.AddByNs([in] string ZoneName,[in] string NameServer,[in] datetime TimeToLive,[in] boolean AllowUpdateAny,[in] string Name,[in] string ComputerName,[in] boolean AgeRecord,[in] boolean NS,[in] boolean PassThru,[in] string ZoneScope,[out] DnsServerResourceRecord cmdletOutput)
HRESULT None shell32.AssocGetDetailsOfPropKey(_In_ IShellFolder *psf,_In_ PCUITEMID_CHILD pidl,_In_ PROPERTYKEY *pkey,_Out_ VARIANT *pv,_Out_ BOOL *pfFoundPropKey)
BOOL WINAPI kernel32.GetNumaAvailableMemoryNode(_In_ UCHAR Node,_Out_ PULONGLONG AvailableBytes)
void WINAPI webservices.WsFreeListener(_In_ WS_LISTENER *listener)
BOOL WINAPI user32.AdjustWindowRect(_Inout_ LPRECT lpRect,_In_ DWORD dwStyle,_In_ BOOL bMenu)
BOOL WINAPI user32.IsWindow(_In_opt_ HWND hWnd)
HRESULT None shlwapi.AssocGetPerceivedType(_In_ PCWSTR pszExt,_Out_ PERCEIVED *ptype,_Out_ PERCEIVEDFLAG *pflag,_Out_opt_ PWSTR *ppszType)
BOOL WINAPI crypt32.CryptImportPublicKeyInfo(_In_ HCRYPTPROV hCryptProv,_In_ DWORD dwCertEncodingType,_In_ PCERT_PUBLIC_KEY_INFO pInfo,_Out_ HCRYPTKEY *phKey)
INT WSPAPI ws2_32.WSCEnumNameSpaceProviders32(_Inout_ LPDWORD lpdwBufferLength,_Out_ LPWSANAMESPACE_INFOW lpnspBuffer)
int None None.WPUQueueApc(_In_ LPWSATHREADID lpThreadId,_In_ LPWSAUSERAPC lpfnUserApc,_In_ DWORD dwContext,_Out_ LPINT lpErrno)
BOOL WINAPI kernel32.UnregisterWait(_In_ HANDLE WaitHandle)
int WSAAPI None.NSPCleanup(_In_ LPGUID lpProviderId)
int None None.WSPSend(_In_ SOCKET s,_In_ LPWSABUF lpBuffers,_In_ DWORD dwBufferCount,_Out_ LPDWORD lpNumberOfBytesSent,_In_ DWORD dwFlags,_In_ LPWSAOVERLAPPED lpOverlapped,_In_ LPWSAOVERLAPPED_COMPLETION_ROUTINE lpCompletionRoutine,_In_ LPWSATHREADID lpThreadId,_Out_ LPINT lpErrno)
BOOL WINAPI crypt32.CertDeleteCRLFromStore(_In_ PCCRL_CONTEXT pCrlContext)
HRESULT WINAPI webservices.WsPushBytes(_In_ WS_XML_WRITER* writer,_In_ WS_PUSH_BYTES_CALLBACK callback,_In_opt_ void* callbackState,_In_opt_ WS_ERROR* error)
DWORD WINAPI kernel32.GetModuleFileNameEx(_In_ HANDLE hProcess,_In_opt_ HMODULE hModule,_Out_ LPTSTR lpFilename,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetModuleFileNameExW(_In_ HANDLE hProcess,_In_opt_ HMODULE hModule,_Out_ LPTSTR lpFilename,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetModuleFileNameExA(_In_ HANDLE hProcess,_In_opt_ HMODULE hModule,_Out_ LPTSTR lpFilename,_In_ DWORD nSize)
BOOL None kernel32.GetNumaProximityNodeEx(_In_ ULONG ProximityId,_Out_ PUSHORT NodeNumber)
NETIOAPI_API None iphlpapi.GetIpInterfaceEntry(_Inout_ PMIB_IPINTERFACE_ROW Row)
HRESULT None oleaut32.VarParseNumFromStr(_In_ LPCOLESTR strIn,_In_ LCID lcid,_In_ ULONG dwFlags,_Out_ NUMPARSE *pnumprs,_Out_ BYTE *rgbDig)
NTSTATUS WINAPI bcrypt.BCryptDeleteContext(_In_ ULONG dwTable,_In_ LPCWSTR pszContext)
int WSAAPI None.NSPv2LookupServiceNextEx(_In_ HANDLE hAsyncCall,_In_ HANDLE hLookup,_In_ DWORD dwControlFlags,_Inout_ LPDWORD lpdwBufferLength,_Out_ LPWSAQUERYSET2W lpqsResults)
LONG WINAPI advapi32.RegQueryValue(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_Out_opt_ LPTSTR lpValue,_Inout_opt_ PLONG lpcbValue)
LONG WINAPI advapi32.RegQueryValueW(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_Out_opt_ LPTSTR lpValue,_Inout_opt_ PLONG lpcbValue)
LONG WINAPI advapi32.RegQueryValueA(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_Out_opt_ LPTSTR lpValue,_Inout_opt_ PLONG lpcbValue)
SOCKET None None.WPUCreateSocketHandle(_In_ DWORD dwCatalogEntryId,_In_ DWORD_PTR dwContext,_Out_ LPINT lpErrno)
BOOL WINAPI crypt32.CryptSIPCreateIndirectData(_In_ SIP_SUBJECTINFO *pSubjectInfo,_Inout_ DWORD *pcbIndirectData,_Out_ SIP_INDIRECT_DATA *pIndirectData)
BOOL None kernel32.EnumSystemCodePages(_In_ CODEPAGE_ENUMPROC lpCodePageEnumProc,_In_ DWORD dwFlags)
BOOL None kernel32.EnumSystemCodePagesW(_In_ CODEPAGE_ENUMPROC lpCodePageEnumProc,_In_ DWORD dwFlags)
BOOL None kernel32.EnumSystemCodePagesA(_In_ CODEPAGE_ENUMPROC lpCodePageEnumProc,_In_ DWORD dwFlags)
VOID None None.SetThreadpoolCallbackPriority(_Inout_ PTP_CALLBACK_ENVIRON pcbe,_In_ TP_CALLBACK_PRIORITY Priority)
UINT None kernel32.GetACP(void None None)
UCHAR None advapi32.GetTraceEnableLevel(_In_ TRACEHANDLE SessionHandle)
HRESULT None None.RenameItem([in] IShellItem *psiSource,[in] LPCWSTR pszNewName,[in] TRANSFER_SOURCE_FLAGS dwFlags,[out] IShellItem **ppsiNewDest)
VOID WINAPI kernel32.CloseThreadpoolWork(_Inout_ PTP_WORK pwk)
int WSAAPI None.NSPv2LookupServiceBegin(_In_ LPGUID lpProviderId,_In_ LPWSAQUERYSET2W lpqsRestrictions,_In_ DWORD dwControlFlags,_Out_ LPVOID lpvClientSessionArg,_Out_ LPHANDLE lphLookup)
NETIOAPI_API None iphlpapi.FlushIpNetTable2(_In_ ADDRESS_FAMILY Family,_In_ NET_IFINDEX InterfaceIndex)
int None kernel32.GetSystemDefaultLocaleName(_Out_ LPWSTR lpLocaleName,_In_ int cchLocaleName)
HRESULT WINAPI webservices.WsMoveWriter(_In_ WS_XML_WRITER* writer,_In_ WS_MOVE_TO moveTo,BOOL* found None,_In_opt_ WS_ERROR* error)
DWORD None iphlpapi.GetIpStatistics(_Out_ PMIB_IPSTATS pStats)
typedef None None.HRESULT(WINAPI *CryptXmlDllEncodeAlgorithm None)
HRESULT None None.SetOwnerWindow([in] HWND hwndOwner)
VOID None None.SetThreadpoolCallbackCleanupGroup(_Inout_ PTP_CALLBACK_ENVIRON pcbe,_In_ PTP_CLEANUP_GROUP ptpcg,_In_opt_ PTP_CLEANUP_GROUP_CANCEL_CALLBACK pfng)
HICON None shell32.ExtractIcon(_Reserved_ HINSTANCE hInst,_In_ LPCTSTR lpszExeFileName,UINT nIconIndex None)
HICON None shell32.ExtractIconW(_Reserved_ HINSTANCE hInst,_In_ LPCTSTR lpszExeFileName,UINT nIconIndex None)
HICON None shell32.ExtractIconA(_Reserved_ HINSTANCE hInst,_In_ LPCTSTR lpszExeFileName,UINT nIconIndex None)
BOOL WINAPI crypt32.CryptRegisterDefaultOIDFunction(_In_ DWORD dwEncodingType,_In_ LPCSTR pszFuncName,_In_ DWORD dwIndex,_In_ LPCWSTR pwszDll)
BOOL WINAPI crypt32.CertResyncCertificateChainEngine(_In_opt_ HCERTCHAINENGINE hChainEngine)
ULONG __stdcall tdh.TdhEnumerateProviderFilters(_In_ LPGUID pGuid,_In_ ULONG TdhContextCount,_In_opt_ PTDH_CONTEXT pTdhContext,_In_ ULONG *FilterCount,_Out_opt_ PPROVIDER_FILTER_INFO *pBuffer,_Inout_ ULONG *pBufferSize)
DWORD WINAPI kernel32.GetDeviceDriverFileName(_In_ LPVOID ImageBase,_Out_ LPTSTR lpFilename,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetDeviceDriverFileNameW(_In_ LPVOID ImageBase,_Out_ LPTSTR lpFilename,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetDeviceDriverFileNameA(_In_ LPVOID ImageBase,_Out_ LPTSTR lpFilename,_In_ DWORD nSize)
HRESULT WINAPI webservices.WsWriteChars(_In_ WS_XML_WRITER* writer,const WCHAR* chars,_In_ ULONG charCount,_In_opt_ WS_ERROR* error)
HRESULT None shell32.GetParent(IShellItem **ppsi None)
VOID WINAPI crypt32.CertFreeCertificateChain(_In_ PCCERT_CHAIN_CONTEXT pChainContext)
DWORD WINAPI user32.GetSysColor(_In_ int nIndex)
TRACEHANDLE None sechost.OpenTrace(_Inout_ PEVENT_TRACE_LOGFILE Logfile)
TRACEHANDLE None sechost.OpenTraceW(_Inout_ PEVENT_TRACE_LOGFILE Logfile)
TRACEHANDLE None sechost.OpenTraceA(_Inout_ PEVENT_TRACE_LOGFILE Logfile)
HICON None shell32.DuplicateIcon(_Reserved_ HINSTANCE hInst,_In_ HICON hIcon)
typedef None None.BOOL(WINAPI *pfnIsFileSupportedName None)
HRESULT WINAPI webservices.WsSetErrorProperty(_In_ WS_ERROR* error,_In_ WS_ERROR_PROPERTY_ID id,const void* value,_In_ ULONG valueSize)
ULONG None advapi32.CreateTraceInstanceId(_In_ HANDLE RegHandle,_Out_ PEVENT_INSTANCE_INFO pInstInfo)
ULONG None sechost.ProcessTrace(_In_ PTRACEHANDLE HandleArray,_In_ ULONG HandleCount,_In_ LPFILETIME StartTime,_In_ LPFILETIME EndTime)
NETIOAPI_API None iphlpapi.GetAnycastIpAddressEntry(_Inout_ PMIB_ANYCASTIPADDRESS_ROW Row)
LONG WINAPI advapi32.RegFlushKey(_In_ HKEY hKey)
int None kernel32.CompareStringOrdinal(_In_ LPCWSTR lpString1,_In_ int cchCount1,_In_ LPCWSTR lpString2,_In_ int cchCount2,_In_ BOOL bIgnoreCase)
HRESULT None None.GetSyncItem([in] LPCWSTR *ppszItemID,[out] ISyncMgrSyncItem **ppItem)
HRESULT WINAPI webservices.WsAbortServiceProxy(_In_ WS_SERVICE_PROXY* serviceProxy,_In_opt_ WS_ERROR* error)
ULONG None sechost.EventAccessRemove(_In_ LPGUID Guid)
void None shell32.SHSetInstanceExplorer(_In_opt_ IUnknown *punk)
HRESULT None None.SetPresenterNextStep([in] SYNCMGR_PRESENTER_NEXT_STEP nPresenterNextStep)
NETIOAPI_API None iphlpapi.GetUnicastIpAddressTable(_In_ ADDRESS_FAMILY Family,_Out_ PMIB_UNICASTIPADDRESS_TABLE *Table)
DWORD None mpr.WNetGetConnection(_In_ LPCTSTR lpLocalName,_Out_ LPTSTR lpRemoteName,_Inout_ LPDWORD lpnLength)
DWORD None mpr.WNetGetConnectionW(_In_ LPCTSTR lpLocalName,_Out_ LPTSTR lpRemoteName,_Inout_ LPDWORD lpnLength)
DWORD None mpr.WNetGetConnectionA(_In_ LPCTSTR lpLocalName,_Out_ LPTSTR lpRemoteName,_Inout_ LPDWORD lpnLength)
DWORD None iphlpapi.GetUdpTable(_Out_ PMIB_UDPTABLE pUdpTable,_Inout_ PDWORD pdwSize,_In_ BOOL bOrder)
int None None.WSPGetSockOpt(_In_ SOCKET s,_In_ int level,_In_ int optname,_Out_ char *optval,_Inout_ LPINT optlen,_Out_ LPINT lpErrno)
BOOL None kernel32.EnumCalendarInfoExEx(_In_ CALINFO_ENUMPROCEXEX pCalInfoEnumProcExEx,_In_opt_ LPCWSTR lpLocaleName,_In_ CALID Calendar,_In_opt_ LPCWSTR lpReserved,_In_ CALTYPE CalType,_In_ LPARAM lParam)
BOOL WINAPI user32.LogicalToPhysicalPoint(_In_ HWND hWnd,_Inout_ LPPOINT lpPoint)
BOOL WINAPI crypt32.CertStrToName(_In_ DWORD dwCertEncodingType,_In_ LPCTSTR pszX500,_In_ DWORD dwStrType,_In_opt_ void *pvReserved,_Out_ BYTE *pbEncoded,_Inout_ DWORD *pcbEncoded,_Out_opt_ LPCTSTR *ppszError)
BOOL WINAPI crypt32.CertStrToNameW(_In_ DWORD dwCertEncodingType,_In_ LPCTSTR pszX500,_In_ DWORD dwStrType,_In_opt_ void *pvReserved,_Out_ BYTE *pbEncoded,_Inout_ DWORD *pcbEncoded,_Out_opt_ LPCTSTR *ppszError)
BOOL WINAPI crypt32.CertStrToNameA(_In_ DWORD dwCertEncodingType,_In_ LPCTSTR pszX500,_In_ DWORD dwStrType,_In_opt_ void *pvReserved,_Out_ BYTE *pbEncoded,_Inout_ DWORD *pcbEncoded,_Out_opt_ LPCTSTR *ppszError)
BOOL WINAPI user32.GetWindowPlacement(_In_ HWND hWnd,_Inout_ WINDOWPLACEMENT *lpwndpl)
HRESULT WINAPI mssign32.SignerSignEx2(_In_ DWORD dwFlags,_In_ SIGNER_SUBJECT_INFO *pSubjectInfo,_In_ SIGNER_CERT *pSignerCert,_In_ SIGNER_SIGNATURE_INFO *pSignatureInfo,_In_opt_ SIGNER_PROVIDER_INFO *pProviderInfo,_In_opt_ DWORD dwTimestampFlags,_In_opt_ PCSTR pszTimestampAlgorithmOid,_In_opt_ PCWSTR pwszHttpTimeStamp,_In_opt_ PCRYPT_ATTRIBUTES psRequest,_In_opt_ PVOID pSipData,_Out_ SIGNER_CONTEXT **ppSignerContext,_In_opt_ PCERT_STRONG_SIGN_PARA pCryptoPolicy,_Reserved_ PVOID pReserved)
int WSAAPI None.NSPv2SetServiceEx(_In_ HANDLE hAsyncCall,_In_ LPGUID lpProviderId,_In_ LPWSAQUERYSET2W lpqsRegInfo,_In_ WSAESETSERVICEOP essOperation,_In_ DWORD dwControlFlags,_In_ LPVOID lpvClientSessionArg)
LPTSTR WINAPI user32.CharLower(_Inout_ LPTSTR lpsz)
LPTSTR WINAPI user32.CharLowerW(_Inout_ LPTSTR lpsz)
LPTSTR WINAPI user32.CharLowerA(_Inout_ LPTSTR lpsz)
DWORD WINAPI iphlpapi.UnenableRouter(OVERLAPPED *pOverlapped None,_Out_opt_ LPDWORD lpdwEnableCount)
HRESULT None shell32.SHGetLocalizedName(_In_ PCWSTR pszPath,_Out_ PWSTR pszResModule,UINT cch None,_Out_ int *pidsRes)
HRESULT WINAPI webservices.WsReadCharsUtf8(_In_ WS_XML_READER* reader,BYTE* bytes None,_In_ ULONG maxByteCount,_Out_ ULONG* actualByteCount,_In_opt_ WS_ERROR* error)
HRESULT WINAPI cryptxml.CryptXmlOpenToEncode(_In_opt_ CRYPT_XML_TRANSFORM_CHAIN_CONFIG *pConfig,DWORD dwFlags None,_In_opt_ LPCWSTR wszId,_In_ CRYPT_XML_PROPERTY *rgProperty,_In_ ULONG cProperty,_In_opt_ CRYPT_XML_BLOB *pEncoded,HCRYPTXML *phSignature None)
HRESULT None None.CredentialsChanged([in] UINT_PTR upAdviseContext)
typedef None None.void(WINAPI *PFN_CRYPT_OBJECT_LOCATOR_PROVIDER_FREE_PASSWORD None)
PCCERT_CONTEXT WINAPI wintrust.WTHelperCertFindIssuerCertificate(_In_ PCCERT_CONTEXT pChildContext,_In_ DWORD chStores,_In_ HCERTSTORE *pahStores,_In_ FILETIME *psftVerifyAsOf,_In_ DWORD dwEncoding,_Out_opt_ DWORD *pdwConfidence,_Out_ DWORD *dwError)
HRESULT WINAPI webservices.WsGetChannelProperty(_In_ WS_CHANNEL* channel,_In_ WS_CHANNEL_PROPERTY_ID id,void* value None,_In_ ULONG valueSize,_In_opt_ WS_ERROR* error)
int None None.WSPIoctl(_In_ SOCKET s,_In_ DWORD dwIoControlCode,_In_ LPVOID lpvInBuffer,_In_ DWORD cbInBuffer,_Out_ LPVOID lpvOutBuffer,_In_ DWORD cbOutBuffer,_Out_ LPDWORD lpcbBytesReturned,_In_ LPWSAOVERLAPPED lpOverlapped,_In_ LPWSAOVERLAPPED_COMPLETION_ROUTINE lpCompletionRoutine,_In_ LPWSATHREADID lpThreadId,_Out_ LPINT lpErrno)
HRESULT WINAPI webservices.WsReadEndElement(_In_ WS_XML_READER* reader,_In_opt_ WS_ERROR* error)
BOOL CALLBACK None.EnumPageFilesProc(_In_ LPVOID pContext,_In_ PENUM_PAGE_FILE_INFORMATION pPageFileInfo,_In_ LPCTSTR lpFilename)
BOOL CALLBACK None.PENUM_PAGE_FILE_CALLBACKW(_In_ LPVOID pContext,_In_ PENUM_PAGE_FILE_INFORMATION pPageFileInfo,_In_ LPCTSTR lpFilename)
BOOL CALLBACK None.PENUM_PAGE_FILE_CALLBACKA(_In_ LPVOID pContext,_In_ PENUM_PAGE_FILE_INFORMATION pPageFileInfo,_In_ LPCTSTR lpFilename)
HRESULT WINAPI webservices.WsWriteEnvelopeStart(_In_ WS_MESSAGE* message,_In_ WS_XML_WRITER* writer,_In_opt_ WS_MESSAGE_DONE_CALLBACK doneCallback,_In_opt_ void* doneCallbackState,_In_opt_ WS_ERROR* error)
BOOL None wintrust.CryptCATClose(_In_ HANDLE hCatalog)
HCRYPTOIDFUNCSET WINAPI crypt32.CryptInitOIDFunctionSet(_In_ LPCSTR pszFuncName,_In_ DWORD dwFlags)
HRESULT WINAPI webservices.WsSetInputToBuffer(_In_ WS_XML_READER *reader,_In_ WS_XML_BUFFER *buffer,const WS_XML_READER_PROPERTY *properties,_In_ ULONG propertyCount,_In_opt_ WS_ERROR *error)
BOOL WINAPI crypt32.PFXExportCertStore(_In_ HCERTSTORE hStore,_Inout_ CRYPT_DATA_BLOB *pPFX,_In_ LPCWSTR szPassword,_In_ DWORD dwFlags)
HRESULT WINAPI None.WsDumpMemory(_In_opt_ WS_ERROR* error)
DWORD None mpr.WNetConnectionDialog(_In_ HWND hwnd,_In_ DWORD dwType)
DWORD None cryptdlg.GetFriendlyNameOfCert(_In_ PCCERT_CONTEXT pccert,_Out_ LPTSTR pchBuffer,_In_ DWORD cchBuffer)
DWORD None cryptdlg.GetFriendlyNameOfCertW(_In_ PCCERT_CONTEXT pccert,_Out_ LPTSTR pchBuffer,_In_ DWORD cchBuffer)
DWORD None cryptdlg.GetFriendlyNameOfCertA(_In_ PCCERT_CONTEXT pccert,_Out_ LPTSTR pchBuffer,_In_ DWORD cchBuffer)
ULONG WINAPI iphlpapi.DeletePersistentUdpPortReservation(_In_ USHORT StartPort,_In_ USHORT NumberOfPorts)
int None kernel32.CompareStringEx(_In_opt_ LPCWSTR lpLocaleName,_In_ DWORD dwCmpFlags,_In_ LPCWSTR lpString1,_In_ int cchCount1,_In_ LPCWSTR lpString2,_In_ int cchCount2,_In_opt_ LPNLSVERSIONINFO lpVersionInformation,_In_opt_ LPVOID lpReserved,_In_opt_ LPARAM lParam)
DWORD None iphlpapi.GetAdaptersInfo(_Out_ PIP_ADAPTER_INFO pAdapterInfo,_Inout_ PULONG pOutBufLen)
HRESULT None oleaut32.VarR8FromUI2(_In_ USHORT uiIn,_Out_ DOUBLE *pdblOut)
HRESULT None explorerframe.UnregisterTab([in] HWND hwndTab)
int WSAAPI None.NSPGetServiceClassInfo(_In_ LPGUID lpProviderId,_Inout_ LPDWORD lpdwBufSize,_Inout_ LPWSASERVICECLASSINFOW lpServiceClassInfo)
DWORD None iphlpapi.GetNumberOfInterfaces(_Out_ PDWORD pdwNumIf)
HRESULT WINAPI webservices.WsGetReaderPosition(_In_ WS_XML_READER* reader,_Out_ WS_XML_NODE_POSITION* *nodePosition,_In_opt_ WS_ERROR* error)
int None None.WSPCancelBlockingCall(_Out_ LPINT lpErrno)
DWORD None mpr.WNetAddConnection(_In_ LPCTSTR lpRemoteName,_In_ LPCTSTR lpPassword,_In_ LPCTSTR lpLocalName)
DWORD None mpr.WNetAddConnectionW(_In_ LPCTSTR lpRemoteName,_In_ LPCTSTR lpPassword,_In_ LPCTSTR lpLocalName)
DWORD None mpr.WNetAddConnectionA(_In_ LPCTSTR lpRemoteName,_In_ LPCTSTR lpPassword,_In_ LPCTSTR lpLocalName)
NETIOAPI_API None iphlpapi.GetMulticastIpAddressEntry(_Inout_ PMIB_MULTICASTIPADDRESS_ROW Row)
WSAEVENT None None.WPUCompleteOverlappedRequest(_In_ SOCKET s,_In_ LPWSAOVERLAPPED lpOverlapped,_In_ DWORD dwError,_In_ DWORD cbTransferred,_Out_ LPINT lpErrno)
BOOL WINAPI user32.SetWindowText(_In_ HWND hWnd,_In_opt_ LPCTSTR lpString)
BOOL WINAPI user32.SetWindowTextW(_In_ HWND hWnd,_In_opt_ LPCTSTR lpString)
BOOL WINAPI user32.SetWindowTextA(_In_ HWND hWnd,_In_opt_ LPCTSTR lpString)
BOOL None kernel32.IsCalendarLeapYear(_In_ CALID calId,_In_ UINT year,_In_ UINT era)
HRESULT WINAPI webservices.WsReadEndAttribute(_In_ WS_XML_READER* reader,_In_opt_ WS_ERROR* error)
BOOL WINAPI crypt32.CertSetEnhancedKeyUsage(_In_ PCCERT_CONTEXT pCertContext,_In_ PCERT_ENHKEY_USAGE pUsage)
ULONG None advapi32.EventUnregister(_In_ REGHANDLE RegHandle)
ULONG TDHAPI tdh.TdhAggregatePayloadFilters(ULONG PayloadFilterCount None,PVOID PayloadFilterPtrs None,_In_opt_ PBOOLEAN EventMatchAllFlags,_Out_ PEVENT_FILTER_DESCRIPTOR EventFilterDescriptor)
BOOL WINAPI crypt32.CryptUnregisterDefaultOIDFunction(_In_ DWORD dwEncodingType,_In_ LPCSTR pszFuncName,_In_ LPCWSTR pwszDll)
int None kernel32.FoldString(_In_ DWORD dwMapFlags,_In_ LPCTSTR lpSrcStr,_In_ int cchSrc,_Out_opt_ LPTSTR lpDestStr,_In_ int cchDest)
int None kernel32.FoldStringW(_In_ DWORD dwMapFlags,_In_ LPCTSTR lpSrcStr,_In_ int cchSrc,_Out_opt_ LPTSTR lpDestStr,_In_ int cchDest)
int None kernel32.FoldStringA(_In_ DWORD dwMapFlags,_In_ LPCTSTR lpSrcStr,_In_ int cchSrc,_Out_opt_ LPTSTR lpDestStr,_In_ int cchDest)
BOOL WINAPI iphlpapi.CancelIPChangeNotify(_In_ LPOVERLAPPED notifyOverlapped)
DWORD None iphlpapi.IcmpSendEcho(_In_ HANDLE IcmpHandle,_In_ IPAddr DestinationAddress,_In_ LPVOID RequestData,_In_ WORD RequestSize,_In_opt_ PIP_OPTION_INFORMATION RequestOptions,_Out_ LPVOID ReplyBuffer,_In_ DWORD ReplySize,_In_ DWORD Timeout)
BOOL None kernel32.SetThreadLocale(_In_ LCID Locale)
DWORD WINAPI crypt32.CertEnumCTLContextProperties(_In_ PCCTL_CONTEXT pCtlContext,_In_ DWORD dwPropId)
BOOL None user32.LogicalToPhysicalPointForPerMonitorDPI(_In_ HWND hwnd,_Inout_ LPPOINT lpPoint)
void WINAPI crypt32.CryptMemFree(_In_ LPVOID pv)
NETIOAPI_API None iphlpapi.GetUnicastIpAddressEntry(_Inout_ PMIB_UNICASTIPADDRESS_ROW Row)
BOOL WINAPI advapi32.CryptEncrypt(_In_ HCRYPTKEY hKey,_In_ HCRYPTHASH hHash,_In_ BOOL Final,_In_ DWORD dwFlags,_Inout_ BYTE *pbData,_Inout_ DWORD *pdwDataLen,_In_ DWORD dwBufLen)
HRESULT WINAPI webservices.WsGetMetadataEndpoints(_In_ WS_METADATA* metadata,_Out_ WS_METADATA_ENDPOINTS* endpoints,_In_opt_ WS_ERROR* error)
ULONG None advapi32.EventWrite(_In_ REGHANDLE RegHandle,_In_ PCEVENT_DESCRIPTOR EventDescriptor,_In_ ULONG UserDataCount,_In_opt_ PEVENT_DATA_DESCRIPTOR UserData)
HWND WINAPI user32.ChildWindowFromPointEx(_In_ HWND hwndParent,_In_ POINT pt,_In_ UINT uFlags)
ULONG WINAPI iphlpapi.SetPerTcpConnectionEStats(PMIB_TCPROW Row None,TCP_ESTATS_TYPE EstatsType None,PUCHAR Rw None,ULONG RwVersion None,ULONG RwSize None,ULONG Offset None)
DWORD None mpr.WNetGetNetworkInformation(_In_ LPCTSTR lpProvider,_Out_ LPNETINFOSTRUCT lpNetInfoStruct)
DWORD None mpr.WNetGetNetworkInformationW(_In_ LPCTSTR lpProvider,_Out_ LPNETINFOSTRUCT lpNetInfoStruct)
DWORD None mpr.WNetGetNetworkInformationA(_In_ LPCTSTR lpProvider,_Out_ LPNETINFOSTRUCT lpNetInfoStruct)
BOOL WINAPI advapi32.CryptGetKeyParam(_In_ HCRYPTKEY hKey,_In_ DWORD dwParam,_Out_ BYTE *pbData,_Inout_ DWORD *pdwDataLen,_In_ DWORD dwFlags)
DWORD None iphlpapi.DeleteIPAddress(_In_ ULONG NTEContext)
BOOL None kernel32.GetStringTypeW(_In_ DWORD dwInfoType,_In_ LPCWSTR lpSrcStr,_In_ int cchSrc,_Out_ LPWORD lpCharType)
ULONG STDMETHODCALLTYPE rpcrt4.NdrCStdStubBuffer_Release(_In_ IRpcStubBuffer *This,_In_ IPSFactoryBuffer *pPSF)
Boolean None advapi32.EventProviderEnabled(_In_ REGHANDLE RegHandle,_In_ UCHAR Level,_In_ ULONGLONG Keyword)
int WSPAPI ws2_32.WSCEnumProtocols(_In_ LPINT lpiProtocols,_Out_ LPWSAPROTOCOL_INFOW lpProtocolBuffer,_Inout_ LPDWORD lpdwBufferLength,_Out_ LPINT lpErrno)
NETIOAPI_API None iphlpapi.GetTeredoPort(_Out_ USHORT *Port)
BOOL WINAPI kernel32.LoadStringByReference(_In_ DWORD Flags,_In_opt_ PCWSTR Language,_In_ PCWSTR SourceString,_Out_opt_ PWSTR Buffer,_In_ ULONG cchBuffer,_In_opt_ PCWSTR Directory,_Out_opt_ PULONG pcchBufferOut)
HRESULT None ole32.OleGetClipboard(_Out_ LPDATAOBJECT *ppDataObj)
PCCTL_CONTEXT WINAPI crypt32.CertEnumCTLsInStore(_In_ HCERTSTORE hCertStore,_In_ PCCTL_CONTEXT pPrevCtlContext)
HRESULT None None.Enable([in] BOOL fEnable)
BOOL WINAPI wintrust.IsCatalogFile(_In_opt_ HANDLE hFile,_In_opt_ WCHAR *pwszFileName)
BOOL None kernel32.UpdateCalendarDayOfWeek(_Inout_ LPCALDATETIME lpCalDateTime)
DWORD None mpr.WNetCloseEnum(_In_ HANDLE hEnum)
HANDLE WINAPI kernel32.OpenJobObject(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandles,_In_ LPCTSTR lpName)
HANDLE WINAPI kernel32.OpenJobObjectW(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandles,_In_ LPCTSTR lpName)
HANDLE WINAPI kernel32.OpenJobObjectA(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandles,_In_ LPCTSTR lpName)
DWORD None mpr.WNetUseConnection(_In_ HWND hwndOwner,_In_ LPNETRESOURCE lpNetResource,_In_ LPCTSTR lpPassword,_In_ LPCTSTR lpUserID,_In_ DWORD dwFlags,_Out_ LPTSTR lpAccessName,_Inout_ LPDWORD lpBufferSize,_Out_ LPDWORD lpResult)
DWORD None mpr.WNetUseConnectionW(_In_ HWND hwndOwner,_In_ LPNETRESOURCE lpNetResource,_In_ LPCTSTR lpPassword,_In_ LPCTSTR lpUserID,_In_ DWORD dwFlags,_Out_ LPTSTR lpAccessName,_Inout_ LPDWORD lpBufferSize,_Out_ LPDWORD lpResult)
DWORD None mpr.WNetUseConnectionA(_In_ HWND hwndOwner,_In_ LPNETRESOURCE lpNetResource,_In_ LPCTSTR lpPassword,_In_ LPCTSTR lpUserID,_In_ DWORD dwFlags,_Out_ LPTSTR lpAccessName,_Inout_ LPDWORD lpBufferSize,_Out_ LPDWORD lpResult)
uint32 None dmwmibridgeprov.GetLicenseFromStoreMethod([in] string param)
BOOL WINAPI crypt32.CertIsValidCRLForCertificate(_In_ PCCERT_CONTEXT pCert,_In_ PCCRL_CONTEXT pCRL,_In_ DWORD dwFlags,_In_ void *pvReserved)
typedef None None.HRESULT(WINAPI *CryptXmlDllVerifySignature None)
HRESULT WINAPI webservices.WsAbortServiceHost(_In_ WS_SERVICE_HOST* serviceHost,_In_opt_ WS_ERROR* error)
HRESULT CALLBACK None.PFN_CRYPT_XML_DATA_PROVIDER_READ(_Inout_ void *pvCallbackState,_Out_ BYTE *pbData,_In_ ULONG cbData,_Out_ ULONG *pcbRead)
int None kernel32.ResolveLocaleName(_In_opt_ LPCWSTR lpNameToResolve,_Out_opt_ LPWSTR lpLocaleName,_In_ int cchLocaleName)
NET_IFINDEX WINAPI iphlpapi.if_nametoindex(_In_ PCSTR InterfaceName)
DWORD None iphlpapi.GetOwnerModuleFromUdpEntry(_In_ PMIB_UDPROW_OWNER_MODULE pUdpEntry,_In_ TCPIP_OWNER_MODULE_INFO_CLASS Class,_Out_ PVOID Buffer,_Inout_ PDWORD pdwSize)
int WSAAPI None.NSPIoctl(_In_ HANDLE hLookup,_In_ DWORD dwControlCode,_In_ LPVOID lpvInBuffer,_Inout_ DWORD cbInBuffer,_Out_ LPVOID lpvOutBuffer,_In_ DWORD cbOutBuffer,_Out_ LPDWORD lpcbBytesReturned,_In_ LPWSACOMPLETION lpCompletion,_In_ LPWSATHREADID lpThreadId)
DWORD None mpr.WNetGetResourceInformation(_In_ LPNETRESOURCE lpNetResource,_Out_ LPVOID lpBuffer,_Inout_ LPDWORD lpcbBuffer,_Out_ LPTSTR *lplpSystem)
DWORD None mpr.WNetGetResourceInformationW(_In_ LPNETRESOURCE lpNetResource,_Out_ LPVOID lpBuffer,_Inout_ LPDWORD lpcbBuffer,_Out_ LPTSTR *lplpSystem)
DWORD None mpr.WNetGetResourceInformationA(_In_ LPNETRESOURCE lpNetResource,_Out_ LPVOID lpBuffer,_Inout_ LPDWORD lpcbBuffer,_Out_ LPTSTR *lplpSystem)
NETIOAPI_API WINAPI iphlpapi.GetIpNetworkConnectionBandwidthEstimates(_In_ NET_IFINDEX InterfaceIndex,_In_ ADDRESS_FAMILY AddressFamily,_Out_ PMIB_IP_NETWORK_CONNECTION_BANDWIDTH_ESTIMATES BandwidthEstimates)
HRESULT None None.Skip([in] ULONG celt)
BOOL None kernel32.GetCPInfo(_In_ UINT CodePage,_Out_ LPCPINFO lpCPInfo)
DWORD WINAPI iphlpapi.GetTcpTable(_Out_ PMIB_TCPTABLE pTcpTable,_Inout_ PDWORD pdwSize,_In_ BOOL bOrder)
BOOL WINAPI crypt32.CertGetEnhancedKeyUsage(_In_ PCCERT_CONTEXT pCertContext,_In_ DWORD dwFlags,_Out_ PCERT_ENHKEY_USAGE pUsage,_Inout_ DWORD *pcbUsage)
WINAPI None crypt32.CertFreeServerOcspResponseContext(_In_ PCCERT_SERVER_OCSP_RESPONSE_CONTEXT pServerOcspResponseContext)
BOOL WINAPI crypt32.CryptEnumOIDInfo(_In_ DWORD dwGroupId,_In_ DWORD dwFlags,_In_ void *pvArg,_In_ PFN_CRYPT_ENUM_OID_INFO pfnEnumOIDInfo)
int WSPAPI ws2_32.WSCGetProviderPath32(_In_ LPGUID lpProviderId,_Out_ LPWSTR lpszProviderDllPath,_Inout_ LPINT lpProviderDllPathLen,_Out_ LPINT lpErrno)
BOOL WINAPI crypt32.CryptGetOIDFunctionAddress(_In_ HCRYPTOIDFUNCSET hFuncSet,_In_ DWORD dwEncodingType,_In_ LPCSTR pszOID,_In_ DWORD dwFlags,_Out_ void **ppvFuncAddr,_Out_ HCRYPTOIDFUNCADDR *phFuncAddr)
HRESULT None oleaut32.VarUI1FromI4(_In_ LONG lIn,_Out_ BYTE *pbOut)
DPI_AWARENESS_CONTEXT WINAPI user32.GetWindowDpiAwarenessContext(_In_ HWND hwnd)
BOOL WINAPI cryptui.CryptUIWizImport(_In_ DWORD dwFlags,_In_ HWND hwndParent,_In_ LPCWSTR pwszWizardTitle,_In_ PCCRYPTUI_WIZ_IMPORT_SRC_INFO pImportSrc,_In_ HCERTSTORE hDestCertStore)
VOID None iphlpapi.InitializeIpInterfaceEntry(_Inout_ PMIB_IPINTERFACE_ROW Row)
HRESULT WINAPI webservices.WsGetReaderProperty(_In_ WS_XML_READER* reader,_In_ WS_XML_READER_PROPERTY_ID id,void* value None,_In_ ULONG valueSize,_In_opt_ WS_ERROR* error)
VOID WINAPI None.EventCallback(_In_ PEVENT_TRACE pEvent)
HRESULT None None.SetDefaultExtension([in] LPCWSTR pszDefaultExtension)
VOID NETIOAPI iphlpapi.InitializeUnicastIpAddressEntry(_Out_ PMIB_UNICASTIPADDRESS_ROW Row)
typedef None None.BOOL(WINAPI *PFN_CERT_CREATE_CONTEXT_SORT_FUNC None)
HRESULT WINAPI webservices.WsReadNode(_In_ WS_XML_READER* reader,_In_opt_ WS_ERROR* error)
BOOL WINAPI user32.AdjustWindowRectEx(_Inout_ LPRECT lpRect,_In_ DWORD dwStyle,_In_ BOOL bMenu,_In_ DWORD dwExStyle)
typedef None None.HRESULT(WINAPI *CryptXmlDllCreateDigest None)
BOOL WINAPI crypt32.CertSetCertificateContextPropertiesFromCTLEntry(_In_ PCCERT_CONTEXT pCertContext,_In_ PCTL_ENTRY pCtlEntry,_In_ DWORD dwFlags)
HRESULT WINAPI webservices.WsCreateWriter(const WS_XML_WRITER_PROPERTY* properties,_In_ ULONG propertyCount,WS_XML_WRITER** writer None,_In_opt_ WS_ERROR* error)
BOOL WINAPI crypt32.CertGetCertificateChain(_In_opt_ HCERTCHAINENGINE hChainEngine,_In_ PCCERT_CONTEXT pCertContext,_In_opt_ LPFILETIME pTime,_In_ HCERTSTORE hAdditionalStore,_In_ PCERT_CHAIN_PARA pChainPara,_In_ DWORD dwFlags,_In_ LPVOID pvReserved,_Out_ PCCERT_CHAIN_CONTEXT *ppChainContext)
HRESULT WINAPI mssign32.SignError(void None None)
DWORD None iphlpapi.CreateIpForwardEntry(_In_ PMIB_IPFORWARDROW pRoute)
HRESULT WINAPI cryptxml.CryptXmlGetStatus(HCRYPTXML hCryptXml None,CRYPT_XML_STATUS *pStatus None)
DWORD None iphlpapi.GetNetworkParams(_Out_ PFIXED_INFO pFixedInfo,_In_ PULONG pOutBufLen)
DIALOG_DPI_CHANGE_BEHAVIORS WINAPI user32.GetDialogDpiChangeBehavior(HWDN hDlg None)
typedef None None.BOOL(WINAPI *PFN_CRYPT_OBJECT_LOCATOR_PROVIDER_INITIALIZE None)
DWORD WINAPI iphlpapi.SetIpStatistics(_In_ PMIB_IPSTATS pIpStats)
HRESULT WINAPI webservices.WsCreateError(const WS_ERROR_PROPERTY* properties,_In_ ULONG propertyCount,WS_ERROR** error None)
BOOL WINAPI advapi32.CryptContextAddRef(_In_ HCRYPTPROV hProv,_In_ DWORD *pdwReserved,_In_ DWORD dwFlags)
DWORD None mpr.WNetOpenEnum(_In_ DWORD dwScope,_In_ DWORD dwType,_In_ DWORD dwUsage,_In_ LPNETRESOURCE lpNetResource,_Out_ LPHANDLE lphEnum)
DWORD None mpr.WNetOpenEnumW(_In_ DWORD dwScope,_In_ DWORD dwType,_In_ DWORD dwUsage,_In_ LPNETRESOURCE lpNetResource,_Out_ LPHANDLE lphEnum)
DWORD None mpr.WNetOpenEnumA(_In_ DWORD dwScope,_In_ DWORD dwType,_In_ DWORD dwUsage,_In_ LPNETRESOURCE lpNetResource,_Out_ LPHANDLE lphEnum)
DWORD None iphlpapi.GetIcmpStatistics(_Out_ PMIB_ICMP pStats)
DWORD None mpr.WNetUseConnection(_In_ HWND hwndOwner,_In_ LPNETRESOURCE lpNetResource,_In_ LPCTSTR lpPassword,_In_ LPCTSTR lpUserID,_In_ DWORD dwFlags,_Out_ LPTSTR lpAccessName,_Inout_ LPDWORD lpBufferSize,_Out_ LPDWORD lpResult)
DWORD None mpr.WNetUseConnectionW(_In_ HWND hwndOwner,_In_ LPNETRESOURCE lpNetResource,_In_ LPCTSTR lpPassword,_In_ LPCTSTR lpUserID,_In_ DWORD dwFlags,_Out_ LPTSTR lpAccessName,_Inout_ LPDWORD lpBufferSize,_Out_ LPDWORD lpResult)
DWORD None mpr.WNetUseConnectionA(_In_ HWND hwndOwner,_In_ LPNETRESOURCE lpNetResource,_In_ LPCTSTR lpPassword,_In_ LPCTSTR lpUserID,_In_ DWORD dwFlags,_Out_ LPTSTR lpAccessName,_Inout_ LPDWORD lpBufferSize,_Out_ LPDWORD lpResult)
HRESULT None explorerframe.ThumbBarAddButtons([in] HWND hwnd,[in] UINT cButtons,[in] LPTHUMBBUTTON pButton)
ULONG WINAPI iphlpapi.ResolveNeighbor(_In_ SOCKADDR *NetworkAddress,_Out_ PVOID PhysicalAddress,_Inout_ PULONG PhysicalAddressLength)
BOOL WINAPI crypt32.CryptFreeOIDFunctionAddress(_In_ HCRYPTOIDFUNCADDR hFuncAddr,_In_ DWORD dwFlags)
BOOL WINAPI crypt32.CryptMsgCountersignEncoded(_In_ DWORD dwEncodingType,_In_ PBYTE pbSignerInfo,_In_ DWORD cbSignerInfo,_In_ DWORD cCountersigners,_In_ PCMSG_SIGNER_ENCODE_INFO rgCountersigners,_Out_ PBYTE pbCountersignature,_Inout_ PDWORD pcbCountersignature)
DWORD None mpr.WNetConnectionDialog1(_Inout_ LPCONNECTDLGSTRUCT lpConnDlgStruct)
DWORD None mpr.WNetConnectionDialog1W(_Inout_ LPCONNECTDLGSTRUCT lpConnDlgStruct)
DWORD None mpr.WNetConnectionDialog1A(_Inout_ LPCONNECTDLGSTRUCT lpConnDlgStruct)
HRESULT None None.GetThumbnail([in] UINT cx,[out] HBITMAP *phbmp,[out] WTS_ALPHATYPE *pdwAlpha)
UINT WINAPI user32.GetDpiForWindow(_In_ HWND hwnd)
BOOL WINAPI crypt32.CryptSIPGetCaps(_In_ SIP_SUBJECTINFO *pSubjInfo,_Inout_ SIP_CAP_SET *pCaps)
BOOL WINAPI crypt32.CryptUninstallDefaultContext(_In_ HCRYPTDEFAULTCONTEXT hDefaultContext,_In_ DWORD dwFlags,_In_ void *pvReserved)
HRESULT None None.OnLeftClick([in] POINT *pt)
DWORD None iphlpapi.GetUdpStatisticsEx(_Out_ PMIB_UDPSTATS pStats,_In_ DWORD dwFamily)
BOOL CALLBACK None.EnumDateFormatsProcExEx(_In_ LPWSTR lpDateFormatString,_In_ CALID CalendarID,_In_ LPARAM lParam)
HRESULT STDMETHODCALLTYPE ole32.CStdAsyncStubBuffer_Connect(_In_ IRpcStubBuffer *pthis,_In_ IUnknown *pUnkServer)
DWORD WINAPI iphlpapi.IcmpSendEcho2(_In_ HANDLE IcmpHandle,_In_opt_ HANDLE Event,_In_opt_ PIO_APC_ROUTINE ApcRoutine,_In_opt_ PVOID ApcContext,_In_ IPAddr DestinationAddress,_In_ LPVOID RequestData,_In_ WORD RequestSize,_In_opt_ PIP_OPTION_INFORMATION RequestOptions,_Out_ LPVOID ReplyBuffer,_In_ DWORD ReplySize,_In_ DWORD Timeout)
DWORD None iphlpapi.DeleteIpNetEntry(_In_ PMIB_IPNETROW pArpEntry)
BOOL WINAPI crypt32.CertVerifySubjectCertificateContext(_In_ PCCERT_CONTEXT pSubject,_In_opt_ PCCERT_CONTEXT pIssuer,_Inout_ DWORD *pdwFlags)
BOOL WINAPI crypt32.CryptSIPRetrieveSubjectGuid(_In_ LPCWSTR FileName,_In_opt_ HANDLE hFileIn,_Out_ GUID *pgSubject)
BOOL WINAPI None.CertStoreProvFindCTL(_In_ HCERTSTOREPROV hStoreProv,_In_ PCCERT_STORE_PROV_FIND_INFO pFindInfo,_In_ PCCTL_CONTEXT pPrevCtlContext,_In_ DWORD dwFlags,_Inout_ void **ppvStoreProvFindInfo,_Out_ PCCTL_CONTEXT *ppProvCtlContext)
HRESULT None oleaut32.VarI4FromR8(_In_ DOUBLE dblIn,_Out_ LONG *plOut)
DWORD None iphlpapi.GetIfEntry(_Inout_ PMIB_IFROW pIfRow)
BOOL WINAPI crypt32.CertAddCRLContextToStore(_In_ HCERTSTORE hCertStore,_In_ PCCRL_CONTEXT pCrlContext,_In_ DWORD dwAddDisposition,_Out_opt_ PCCRL_CONTEXT *ppStoreContext)
BOOL None wintrust.WintrustAddActionID(_In_ GUID *pgActionID,_In_ DWORD fdwFlags,_In_ CRYPT_REGISTER_ACTIONID *psProvInfo)
typedef None None.BOOL(WINAPI *PFN_CMSG_CNG_IMPORT_CONTENT_ENCRYPT_KEY None)
HRESULT WINAPI dwmapi.DwmSetIconicLivePreviewBitmap(HWND hwnd None,HBITMAP hbmp None,_In_opt_ POINT *pptClient,DWORD dwSITFlags None)
HRESULT WINAPI mssign32.SignerTimeStampEx(_Reserved_ DWORD dwFlags,_In_ SIGNER_SUBJECT_INFO *pSubjectInfo,_In_ LPCWSTR pwszHttpTimeStamp,_In_ PCRYPT_ATTRIBUTES psRequest,_In_ LPVOID pSipData,_Out_ SIGNER_CONTEXT **ppSignerContext)
BOOL WINAPI crypt32.CertCompareCertificate(_In_ DWORD dwCertEncodingType,_In_ PCERT_INFO pCertId1,_In_ PCERT_INFO pCertId2)
BOOL WINAPI crypt32.CertGetCertificateContextProperty(_In_ PCCERT_CONTEXT pCertContext,_In_ DWORD dwPropId,_Out_ void *pvData,_Inout_ DWORD *pcbData)
HRESULT None None.Set([in] DWORD dwProperty,[in] ULONG_PTR dwValue)
DWORD None mpr.WNetDisconnectDialog(_In_ HWND hwnd,_In_ DWORD dwType)
HRESULT WINAPI webservices.WsSetListenerProperty(_In_ WS_LISTENER *listener,_In_ WS_LISTENER_PROPERTY_ID id,const void *value,_In_ ULONG valueSize,_In_opt_ WS_ERROR *error)
VOID NETIOAPI_API_ iphlpapi.FreeMibTable(_In_ PVOID Memory)
BOOL WINAPI None.CertStoreProvGetCertProperty(_In_ HCERTSTOREPROV hStoreProv,_In_ PCCERT_CONTEXT pCertContext,_In_ DWORD dwPropId,_In_ DWORD dwFlags,_Out_ void *pvData,_Inout_ DWORD *pcbData)
NETIOAPI_API None iphlpapi.GetDefaultCompartmentId(void None None)
DWORD None mpr.WNetAddConnection2(_In_ LPNETRESOURCE lpNetResource,_In_ LPCTSTR lpPassword,_In_ LPCTSTR lpUsername,_In_ DWORD dwFlags)
DWORD None mpr.WNetAddConnection2W(_In_ LPNETRESOURCE lpNetResource,_In_ LPCTSTR lpPassword,_In_ LPCTSTR lpUsername,_In_ DWORD dwFlags)
DWORD None mpr.WNetAddConnection2A(_In_ LPNETRESOURCE lpNetResource,_In_ LPCTSTR lpPassword,_In_ LPCTSTR lpUsername,_In_ DWORD dwFlags)
BOOL WINAPI cryptui.CryptUIDlgViewSignerInfo(_In_ CRYPTUI_VIEWSIGNERINFO_STRUCT *pcvsi)
BOOL WINAPI cryptui.CryptUIDlgViewSignerInfoW(_In_ CRYPTUI_VIEWSIGNERINFO_STRUCT *pcvsi)
BOOL WINAPI cryptui.CryptUIDlgViewSignerInfoA(_In_ CRYPTUI_VIEWSIGNERINFO_STRUCT *pcvsi)
ULONG WINAPI iphlpapi.SetPerTcp6ConnectionEStats(PMIB_TCP6ROW Row None,TCP_ESTATS_TYPE EstatsType None,PUCHAR Rw None,ULONG RwVersion None,ULONG RwSize None,ULONG Offset None)
BOOL None kernel32.EnumSystemLocalesEx(_In_ LOCALE_ENUMPROCEX lpLocaleEnumProcEx,_In_ DWORD dwFlags,_In_ LPARAM lParam,_In_opt_ LPVOID lpReserved)
HRESULT WINAPI webservices.WsMatchPolicyAlternative(_In_ WS_POLICY* policy,_In_ ULONG alternativeIndex,_In_ WS_POLICY_CONSTRAINTS* policyConstraints,_In_ BOOL matchRequired,_In_ WS_HEAP* heap,_In_opt_ WS_ERROR* error)
DWORD None iphlpapi.DisableMediaSense(HANDLE *pHandle None,OVERLAPPED *pOverlapped None)
BOOL WINAPI wintrust.CryptCATPersistStore(_In_ HANDLE hCatalog)
typedef None None.BOOL(WINAPI *PFN_CMSG_EXPORT_MAIL_LIST None)
HRESULT WINAPI mssign32.SignerFreeSignerContext(_In_ SIGNER_CONTEXT *pSignerContext)
DWORD WINAPI crypt32.CertRDNValueToStr(_In_ DWORD dwValueType,_In_ PCERT_RDN_VALUE_BLOB pValue,_Out_ LPTSTR psz,_In_ DWORD csz)
DWORD WINAPI crypt32.CertRDNValueToStrW(_In_ DWORD dwValueType,_In_ PCERT_RDN_VALUE_BLOB pValue,_Out_ LPTSTR psz,_In_ DWORD csz)
DWORD WINAPI crypt32.CertRDNValueToStrA(_In_ DWORD dwValueType,_In_ PCERT_RDN_VALUE_BLOB pValue,_Out_ LPTSTR psz,_In_ DWORD csz)
DWORD None iphlpapi.RestoreMediaSense(OVERLAPPED *pOverlapped None,LPDWORD lpdwEnableCount None)
BOOL WINAPI crypt32.PFXExportCertStoreEx(_In_ HCERTSTORE hStore,_Inout_ CRYPT_DATA_BLOB *pPFX,_In_ LPCWSTR szPassword,_In_ void *pvPara,_In_ DWORD dwFlags)
HRESULT None None.UpdateConflicts([in] LPCWSTR pszHandlerID,[in] LPCWSTR pszItemID,[in] SYNCMGR_CONTROL_FLAGS nControlFlags)
VOID WINAPI user32.SwitchToThisWindow(_In_ HWND hWnd,_In_ BOOL fAltTab)
BOOL None kernel32.EnumCalendarInfoEx(_In_ CALINFO_ENUMPROCEX pCalInfoEnumProcEx,_In_ LCID Locale,_In_ CALID Calendar,_In_ CALTYPE CalType)
BOOL None kernel32.EnumCalendarInfoExW(_In_ CALINFO_ENUMPROCEX pCalInfoEnumProcEx,_In_ LCID Locale,_In_ CALID Calendar,_In_ CALTYPE CalType)
BOOL None kernel32.EnumCalendarInfoExA(_In_ CALINFO_ENUMPROCEX pCalInfoEnumProcEx,_In_ LCID Locale,_In_ CALID Calendar,_In_ CALTYPE CalType)
ULONG None advapi32.EventAccessQuery(_In_ LPGUID Guid,_Inout_ PSECURITY_DESCRIPTOR Buffer,_Inout_ PULONG BufferSize)
ULONG None advapi32.TraceMessage(_In_ TRACEHANDLE SessionHandle,_In_ ULONG MessageFlags,_In_ LPGUID MessageGuid,_In_ USHORT MessageNumber,... None None)
BOOL WINAPI cryptui.CryptUIWizDigitalSign(_In_ DWORD dwFlags,_In_opt_ HWND hwndParent,_In_opt_ LPCWSTR pwszWizardTitle,_In_ PCCRYPTUI_WIZ_DIGITAL_SIGN_INFO pDigitalSignInfo,_Out_opt_ PCCRYPTUI_WIZ_DIGITAL_SIGN_CONTEXT *ppSignContext)
NETIOAPI_API None iphlpapi.NotifyStableUnicastIpAddressTable(_In_ ADDRESS_FAMILY Family,_Inout_ PMIB_UNICASTIPADDRESS_TABLE *Table,_In_ PSTABLE_UNICAST_IPADDRESS_TABLE_CALLBACK CallerCallback,_In_ PVOID CallerContext,_Inout_ HANDLE *NotificationHandle)
HRESULT WINAPI shcore.SetProcessDpiAwareness(_In_ PROCESS_DPI_AWARENESS value)
DWORD None iphlpapi.GetFriendlyIfIndex(_In_ DWORD IfIndex)
BOOL None kernel32.EnumDateFormatsEx(_In_ DATEFMT_ENUMPROCEX lpDateFmtEnumProcEx,_In_ LCID Locale,_In_ DWORD dwFlags)
BOOL None kernel32.EnumDateFormatsExW(_In_ DATEFMT_ENUMPROCEX lpDateFmtEnumProcEx,_In_ LCID Locale,_In_ DWORD dwFlags)
BOOL None kernel32.EnumDateFormatsExA(_In_ DATEFMT_ENUMPROCEX lpDateFmtEnumProcEx,_In_ LCID Locale,_In_ DWORD dwFlags)
HRESULT WINAPI dwmapi.DwmRegisterThumbnail(HWND hwndDestination None,HWND hwndSource None,_Out_ PHTHUMBNAIL phThumbnailId)
ULONG TDHAPI tdh.TdhGetManifestEventInformation(_In_ LPGUID ProviderGuid,_In_ PEVENT_DESCRIPTOR EventDescriptor,_Out_ PTRACE_EVENT_INFO Buffer,_Inout_ ULONG *BufferSize)
HRESULT None shimgvw.Initialize([in] LPCWSTR pszParams)
void WINAPI crypt32.CertFreeCertificateChainEngine(_In_ HCERTCHAINENGINE hChainEngine)
BOOL WINAPI crypt32.CertAddCRLLinkToStore(_In_ HCERTSTORE hCertStore,_In_ PCCRL_CONTEXT pCrlContext,_In_ DWORD dwAddDisposition,_Out_opt_ PCCRL_CONTEXT *ppStoreContext)
HRESULT None None.SetTabProperties([in] HWND hwndTab,[in] STPFLAG stpFlags)
LONG NTAPI ntdll.RtlIpv4StringToAddressEx(_In_ PCTSTR AddressString,_In_ BOOLEAN Strict,_Out_ IN_ADDR *Address,_Out_ PUSHORT Port)
LONG NTAPI ntdll.RtlIpv4StringToAddressExW(_In_ PCTSTR AddressString,_In_ BOOLEAN Strict,_Out_ IN_ADDR *Address,_Out_ PUSHORT Port)
LONG NTAPI ntdll.RtlIpv4StringToAddressEx(_In_ PCTSTR AddressString,_In_ BOOLEAN Strict,_Out_ IN_ADDR *Address,_Out_ PUSHORT Port)
int WSPAPI ws2_32.WSCDeinstallProvider32(_In_ LPGUID lpProviderId,_Out_ LPINT lpErrno)
PCCERT_CHAIN_CONTEXT WINAPI crypt32.CertDuplicateCertificateChain(_In_ PCCERT_CHAIN_CONTEXT pChainContext)
HRESULT WINAPI webservices.WsGetFaultErrorProperty(_In_ WS_ERROR* error,_In_ WS_FAULT_ERROR_PROPERTY_ID id,void* buffer None,_In_ ULONG bufferSize)
NETIOAPI_API None iphlpapi.GetIpInterfaceTable(_In_ ADDRESS_FAMILY Family,_Out_ PMIB_IPINTERFACE_TABLE *Table)
void WINAPI webservices.WsFreeSecurityToken(_In_ WS_SECURITY_TOKEN* token)
HRESULT None None.SetDefaultFolder([in] IShellItem *psi)
DWORD WINAPI crypt32.CertOIDToAlgId(_In_ LPCSTR pszObjId)
BOOL WINAPI crypt32.CryptUnregisterOIDFunction(_In_ DWORD dwEncodingType,_In_ LPCSTR pszFuncName,_In_ LPCSTR pszOID)
HRESULT WINAPI webservices.WsWriteEndAttribute(_In_ WS_XML_WRITER* writer,_In_opt_ WS_ERROR* error)
DWORD None iphlpapi.DeleteProxyArpEntry(_In_ DWORD dwAddress,_In_ DWORD dwMask,_In_ DWORD dwIfIndex)
typedef None None.HRESULT(WINAPI *CryptXmlDllDigestData None)
BOOL WINAPI crypt32.CertCreateCertificateChainEngine(_In_ PCERT_CHAIN_ENGINE_CONFIG pConfig,_Out_ HCERTCHAINENGINE *phChainEngine)
HRESULT WINAPI mssign32.SignerTimeStampEx3(_In_ DWORD dwFlags,_In_ DWORD dwIndex,_In_ SIGNER_SUBJECT_INFO *pSubjectInfo,_In_ PCWSTR pwszHttpTimeStamp,_In_ PCWSTR pszAlgorithmOid,_In_opt_ PCRYPT_ATTRIBUTES psRequest,_In_opt_ PVOID pSipData,_Out_ SIGNER_CONTEXT **ppSignerContext,_In_opt_ PCERT_STRONG_SIGN_PARA pCryptoPolicy,_Reserved_ PVOID pReserved)
int None idndl.DownlevelGetLocaleScripts(_In_ LPCWSTR lpLocaleName,_Out_ LPWSTR lpScripts,_In_ int cchScripts)
DWORD None iphlpapi.GetOwnerModuleFromTcpEntry(_In_ PMIB_TCPROW_OWNER_MODULE pTcpEntry,_In_ TCPIP_OWNER_MODULE_INFO_CLASS Class,_Out_ PVOID Buffer,_Inout_ PDWORD pdwSize)
BOOL WINAPI advapi32.CryptDecrypt(_In_ HCRYPTKEY hKey,_In_ HCRYPTHASH hHash,_In_ BOOL Final,_In_ DWORD dwFlags,_Inout_ BYTE *pbData,_Inout_ DWORD *pdwDataLen)
HCRYPTMSG WINAPI crypt32.CryptMsgDuplicate(_In_ HCRYPTMSG hCryptMsg)
HRESULT WINAPI webservices.WsTrimXmlWhitespace(WCHAR* chars None,_In_ ULONG charCount,WCHAR** trimmedChars None,_Out_ ULONG* *trimmedCount,_In_opt_ WS_ERROR* error)
DWORD None iphlpapi.GetExtendedUdpTable(_Out_ PVOID pUdpTable,_Inout_ PDWORD pdwSize,_In_ BOOL bOrder,_In_ ULONG ulAf,_In_ UDP_TABLE_CLASS TableClass,_In_ ULONG Reserved)
BOOL WINAPI crypt32.CertRetrieveLogoOrBiometricInfo(_In_ PCCERT_CONTEXT pCertContext,_In_ LPCSTR lpszLogoOrBiometricType,_In_ DWORD dwRetrievalFlags,_In_ DWORD dwTimeout,_In_ DWORD dwFlags,_Reserved_ void *pvReserved,_Out_ BYTE **ppbData,_Out_ DWORD *pcbData,_Out_ LPWSTR *ppwszMimeType)
BOOL CALLBACK None.EnumLocalesProcEx(_In_ LPWSTR lpLocaleString,_In_ DWORD dwFlags,_In_ LPARAM lParam)
int WSAAPI None.NSPInstallServiceClass(_In_ LPGUID lpProviderId,_In_ LPWSASERVICECLASSINFOW lpServiceClassInfo)
BOOL WINAPI crypt32.CryptVerifyCertificateSignature(_In_ HCRYPTPROV_LEGACY hCryptProv,_In_ DWORD dwCertEncodingType,_In_ BYTE *pbEncoded,_In_ DWORD cbEncoded,_In_ PCERT_PUBLIC_KEY_INFO pPublicKey)
BOOL WINAPI advapi32.CryptAcquireContext(_Out_ HCRYPTPROV *phProv,_In_ LPCTSTR pszContainer,_In_ LPCTSTR pszProvider,_In_ DWORD dwProvType,_In_ DWORD dwFlags)
BOOL WINAPI advapi32.CryptAcquireContextW(_Out_ HCRYPTPROV *phProv,_In_ LPCTSTR pszContainer,_In_ LPCTSTR pszProvider,_In_ DWORD dwProvType,_In_ DWORD dwFlags)
BOOL WINAPI advapi32.CryptAcquireContextA(_Out_ HCRYPTPROV *phProv,_In_ LPCTSTR pszContainer,_In_ LPCTSTR pszProvider,_In_ DWORD dwProvType,_In_ DWORD dwFlags)
DWORD WINAPI iphlpapi.AllocateAndGetTcpExTableFromStack(_Out_ PVOID *ppTcpTable,_In_ BOOL bOrder,_In_ HANDLE hHeap,_In_ DWORD dwFlags,_In_ DWORD dwFamily)
BOOL WINAPI advapi32.CryptSignHash(_In_ HCRYPTHASH hHash,_In_ DWORD dwKeySpec,_In_ LPCTSTR sDescription,_In_ DWORD dwFlags,_Out_ BYTE *pbSignature,_Inout_ DWORD *pdwSigLen)
BOOL WINAPI advapi32.CryptSignHashW(_In_ HCRYPTHASH hHash,_In_ DWORD dwKeySpec,_In_ LPCTSTR sDescription,_In_ DWORD dwFlags,_Out_ BYTE *pbSignature,_Inout_ DWORD *pdwSigLen)
BOOL WINAPI advapi32.CryptSignHashA(_In_ HCRYPTHASH hHash,_In_ DWORD dwKeySpec,_In_ LPCTSTR sDescription,_In_ DWORD dwFlags,_Out_ BYTE *pbSignature,_Inout_ DWORD *pdwSigLen)
HRESULT WINAPI cryptxml.CryptXmlClose(_In_ HXML hCryptXml)
BOOL WINAPI advapi32.CryptExportKey(_In_ HCRYPTKEY hKey,_In_ HCRYPTKEY hExpKey,_In_ DWORD dwBlobType,_In_ DWORD dwFlags,_Out_ BYTE *pbData,_Inout_ DWORD *pdwDataLen)
HRESULT None oleaut32.VarI4FromI1(_In_ CHAR cIn,_Out_ LONG *plOut)
CLIENT_CALL_RETURN None rpcrt4.NdrAsyncClientCall(_In_ PMIDL_STUB_DESC pStubDescriptor,_In_ PFORMAT_STRING pFormat,_Inout_ ... None)
HRESULT WINAPI webservices.WsInitializeMessage(_In_ WS_MESSAGE* message,_In_ WS_MESSAGE_INITIALIZATION initialization,_In_opt_ WS_MESSAGE* sourceMessage,_In_opt_ WS_ERROR* error)
HRESULT WINAPI webservices.WsGetWriterProperty(_In_ WS_XML_WRITER* writer,_In_ WS_XML_WRITER_PROPERTY_ID id,void* value None,_In_ ULONG valueSize,_In_opt_ WS_ERROR* error)
HRESULT WINAPI webservices.WsEndReaderCanonicalization(_In_ WS_XML_READER* reader,_In_opt_ WS_ERROR* error)
NETIOAPI_API None iphlpapi.NotifyRouteChange2(_In_ ADDRESS_FAMILY Family,_In_ PIPFORWARD_CHANGE_CALLBACK Callback,_In_ PVOID CallerContext,_In_ BOOLEAN InitialNotification,_Inout_ HANDLE *NotificationHandle)
HRESULT WINAPI webservices.WsWriteValue(_In_ WS_XML_WRITER* writer,_In_ WS_VALUE_TYPE valueType,const void* value,_In_ ULONG valueSize,_In_opt_ WS_ERROR* error)
HRESULT WINAPI webservices.WsResetServiceHost(_In_ WS_SERVICE_HOST *serviceHost,_In_opt_ WS_ERROR *error)
BOOL WINAPI crypt32.CertFindSubjectInSortedCTL(_In_ PCRYPT_DATA_BLOB pSubjectIdentifier,_In_ PCCTL_CONTEXT pCtlContext,_In_ DWORD dwFlags,_In_ void *pvReserved,_Out_ PCRYPT_DER_BLOB pEncodedAttributes)
DWORD None iphlpapi.GetInterfaceInfo(_Out_ PIP_INTERFACE_INFO pIfTable,_Inout_ PULONG dwOutBufLen)
ULONG WINAPI advapi32.QueryTraceProcessingHandle(_In_ TRACEHANDLE ProcessingHandle,_In_ ETW_PROCESS_HANDLE_INFO_TYPE InformationClass,_In_opt_ PVOID InBuffer,_In_ ULONG InBufferSize,_Out_opt_ PVOID OutBuffer,_In_ ULONG OutBufferSize,_Out_ PULONG ReturnLength)
NETIOAPI_API None iphlpapi.GetIpForwardEntry2(_Inout_ PMIB_IPFORWARD_ROW2 Row)
BOOL WINAPI user32.GetWindowDisplayAffinity(_In_ HWND hWnd,_Out_ DWORD *dwAffinity)
BOOL WINAPI None.CertStoreProvReadCRLCallback(_In_ HCERTSTOREPROV hStoreProv,_In_ PCCRL_CONTEXT pStoreCrlContext,_In_ DWORD dwFlags,_Out_ PCCRL_CONTEXT *ppProvCrlContext)
HRESULT None shell32.HandleMenuMsg(UINT uMsg None,WPARAM wParam None,LPARAM lParam None)
HRESULT WINAPI mssign32.SignerSign(_In_ SIGNER_SUBJECT_INFO *pSubjectInfo,_In_ SIGNER_CERT *pSignerCert,_In_ SIGNER_SIGNATURE_INFO *pSignatureInfo,_In_opt_ SIGNER_PROVIDER_INFO *pProviderInfo,_In_opt_ LPCWSTR pwszHttpTimeStamp,_In_opt_ PCRYPT_ATTRIBUTES psRequest,_In_opt_ LPVOID pSipData)
BOOL WINAPI crypt32.CryptRegisterOIDFunction(_In_ DWORD dwEncodingType,_In_ LPCSTR pszFuncName,_In_ LPCSTR pszOID,_In_ LPCWSTR pwszDll,_In_ LPCSTR pszOverrideFuncName)
HRESULT WINAPI wintrust.WTHelperCertCheckValidSignature(CRYPT_PROVIDER_DATA *pProvData None)
DWORD None iphlpapi.IpRenewAddress(_In_ PIP_ADAPTER_INDEX_MAP AdapterInfo)
DWORD None iphlpapi.IpReleaseAddress(_In_ PIP_ADAPTER_INDEX_MAP AdapterInfo)
int WINAPI kernel32.GetGeoInfoEx(_In_ PWSTR location,_In_ GEOTYPE geoType,_Out_opt_ PWSTR geoData,_In_ int geoDataCount)
BOOL WINAPI crypt32.CryptImportPublicKeyInfoEx(_In_ HCRYPTPROV hCryptProv,_In_ DWORD dwCertEncodingType,_In_ PCERT_PUBLIC_KEY_INFO pInfo,_In_ ALG_ID aiKeyAlg,_In_ DWORD dwFlags,_In_ void *pvAuxInfo,_Out_ HCRYPTKEY *phKey)
VOID WINAPI crypt32.CertCloseServerOcspResponse(_In_ HCERT_SERVER_OCSP_RESPONSE hServerOcspResponse,_In_ DWORD dwFlags)
HRESULT None None.UpdateHandlerCollection([in] REFCLSID rclsidCollectionID,[in] SYNCMGR_CONTROL_FLAGS nControlFlags)
HRESULT WINAPI webservices.WsWriteBytes(_In_ WS_XML_WRITER* writer,const void* bytes,_In_ ULONG byteCount,_In_opt_ WS_ERROR* error)
BOOL WINAPI kernel32.EnumSystemGeoNames(_In_ GEOCLASS geoClass,_In_ GEO_ENUMNAMEPROC geoEnumProc,_In_opt_ LPARAM data)
HRESULT WINAPI webservices.WsReadValue(_In_ WS_XML_READER* reader,_In_ WS_VALUE_TYPE valueType,void* value None,_In_ ULONG valueSize,_In_opt_ WS_ERROR* error)
NETIOAPI_API None iphlpapi.NotifyUnicastIpAddressChange(_In_ ADDRESS_FAMILY Family,_In_ PUNICAST_IPADDRESS_CHANGE_CALLBACK Callback,_In_ PVOID CallerContext,_In_ BOOLEAN InitialNotification,_Inout_ HANDLE *NotificationHandle)
HRESULT WINAPI webservices.WsAbortListener(_In_ WS_LISTENER* listener,_In_opt_ WS_ERROR* error)
typedef None None.BOOL(WINAPI *PFN_CRYPT_EXTRACT_ENCODED_SIGNATURE_PARAMETERS_FUNC None)
BOOL WINAPI crypt32.CryptUnprotectMemory(_Inout_ LPVOID pData,_In_ DWORD cbData,_In_ DWORD dwFlags)
HRESULT WINAPI dwmapi.DwmGetGraphicsStreamClient(UINT uIndex None,_Out_ UUID *pClientUuid)
HRESULT None wintrust.WinVerifyTrustEx(_In_ HWND hwnd,_In_ GUID *pgActionID,_In_ WINTRUST_DATA *pWinTrustData)
BOOL WINAPI crypt32.CertAddCertificateLinkToStore(_In_ HCERTSTORE hCertStore,_In_ PCCERT_CONTEXT pCertContext,_In_ DWORD dwAddDisposition,_Out_opt_ PCCERT_CONTEXT *ppStoreContext)
BOOL WINAPI mssign32.GetCryptProvFromCert(_In_ HWND hwnd,_In_ PCCERT_CONTEXT pCert,_Out_ HCRYPTPROV *phCryptProv,_Out_ DWORD *pdwKeySpec,_In_ BOOL *pfDidCryptAcquire,_Out_opt_ LPWSTR *ppwszTmpContainer,_Out_opt_ LPWSTR *ppwszProviderName,_Out_ DWORD *pdwProviderType)
BOOL None kernel32.GetNLSVersionEx(_In_ NLS_FUNCTION function,_In_opt_ LPCWSTR lpLocaleName,_Inout_ LPNLSVERSIONINFOEX lpVersionInformation)
HRESULT None oleaut32.VarUI8FromUI2(_In_ USHORT uiIn,_Out_ ULONG64 *pi64Out)
NETIOAPI_API None iphlpapi.GetIpPathEntry(_Inout_ PMIB_IPPATH_ROW Row)
HRESULT None oleaut32.VarCyFromI8(_In_ LONG64 i64In,_Out_ CY *pcyOut)
ULONG WINAPI iphlpapi.GetAdaptersAddresses(_In_ ULONG Family,_In_ ULONG Flags,_In_ PVOID Reserved,_Inout_ PIP_ADAPTER_ADDRESSES AdapterAddresses,_Inout_ PULONG SizePointer)
int None kernel32.LCMapStringEx(_In_opt_ LPCWSTR lpLocaleName,_In_ DWORD dwMapFlags,_In_ LPCWSTR lpSrcStr,_In_ int cchSrc,_Out_opt_ LPWSTR lpDestStr,_In_ int cchDest,_In_opt_ LPNLSVERSIONINFO lpVersionInformation,_In_opt_ LPVOID lpReserved,_In_opt_ LPARAM sortHandle)
BOOL WINAPI advapi32.CryptHashData(_In_ HCRYPTHASH hHash,_In_ BYTE *pbData,_In_ DWORD dwDataLen,_In_ DWORD dwFlags)
BOOL None kernel32.EnumTimeFormats(_In_ TIMEFMT_ENUMPROC lpTimeFmtEnumProc,_In_ LCID Locale,_In_ DWORD dwFlags)
BOOL None kernel32.EnumTimeFormatsW(_In_ TIMEFMT_ENUMPROC lpTimeFmtEnumProc,_In_ LCID Locale,_In_ DWORD dwFlags)
BOOL None kernel32.EnumTimeFormatsA(_In_ TIMEFMT_ENUMPROC lpTimeFmtEnumProc,_In_ LCID Locale,_In_ DWORD dwFlags)
void STDMETHODCALLTYPE rpcrt4.CStdStubBuffer_DebugServerRelease(_In_ IRpcStubBuffer *This,_In_ void *pv)
void None certadm.CertSrvBackupFree(_In_ VOID *pv)
BOOL WINAPI crypt32.CryptSIPRetrieveSubjectGuidForCatalogFile(_In_ LPCWSTR FileName,_In_opt_ HANDLE hFileIn,_Out_ GUID *pgSubject)
HRESULT WINAPI cryptxml.CryptXmlImportPublicKey(DWORD dwFlags None,_In_ CRYPT_XML_KEY_VALUE *pKeyValue,_Out_ BCRYPT_KEY_HANDLE *phKey)
HRESULT None None.StopHandlerSync([in] LPCWSTR pszHandlerID)
int None kernel32.GetUserDefaultLocaleName(_Out_ LPWSTR lpLocaleName,_In_ int cchLocaleName)
void WINAPI mssign32.FreeCryptProvFromCert(_In_ BOOL fAcquired,_In_ HCRYPTPROV hProv,_In_opt_ LPWSTR pwszCapiProvider,_In_ DWORD dwProviderType,_In_opt_ LPWSTR pwszTmpContainer)
DWORD None iphlpapi.FlushIpNetTable(_In_ DWORD dwIfIndex)
HRESULT WINAPI webservices.WsCreateChannelForListener(_In_ WS_LISTENER* listener,const WS_CHANNEL_PROPERTY* properties,_In_ ULONG propertyCount,WS_CHANNEL** channel None,_In_opt_ WS_ERROR* error)
typedef None None.HRESULT(WINAPI *CryptXmlDllCloseDigest None)
DWORD None iphlpapi.DeleteIpForwardEntry(_In_ PMIB_IPFORWARDROW pRoute)
HRESULT None None.SetAccessRights([in] PACTRL_ACCESSW pAccessList)
PCCERT_CONTEXT WINAPI crypt32.CertGetIssuerCertificateFromStore(_In_ HCERTSTORE hCertStore,_In_ PCCERT_CONTEXT pSubjectContext,_In_opt_ PCCERT_CONTEXT pPrevIssuerContext,_Inout_ DWORD *pdwFlags)
HRESULT WINAPI webservices.WsReadStartAttribute(_In_ WS_XML_READER* reader,_In_ ULONG attributeIndex,_In_opt_ WS_ERROR* error)
HRESULT WINAPI webservices.WsCreateMetadata(const WS_METADATA_PROPERTY* properties,_In_ ULONG propertyCount,WS_METADATA** metadata None,_In_opt_ WS_ERROR* error)
BOOL WINAPI None.CertStoreProvReadCertCallback(_In_ HCERTSTOREPROV hStoreProv,_In_ PCCERT_CONTEXT pStoreCertContext,_In_ DWORD dwFlags,_Out_ PCCERT_CONTEXT *ppProvCertContext)
DWORD None iphlpapi.GetUdpStatisticsEx2(_Out_ PMIB_UDPSTATS2 Statistics,_In_ ULONG Family)
HRESULT WINAPI webservices.WsGetSecurityContextProperty(_In_ WS_SECURITY_CONTEXT* securityContext,_In_ WS_SECURITY_CONTEXT_PROPERTY_ID id,void* value None,_In_ ULONG valueSize,_In_opt_ WS_ERROR* error)
DWORD None iphlpapi.GetAdapterIndex(_In_ LPWSTR AdapterName,_Inout_ PULONG IfIndex)
HRESULT None certadm.CertSrvBackupTruncateLogs(_In_ HCSBC hbc)
typedef None None.BOOL(CALLBACK *PCRYPT_ENCRYPT_PRIVATE_KEY_FUNC None)
HRESULT None oleaut32.VarDecFromI2(_In_ SHORT uiIn,_Out_ DECIMAL *pdecOut)
typedef None None.HRESULT(WINAPI *CryptXmlDllGetAlgorithmInfo None)
uint32 None dnsserverpsprovider.GetByName([in] string Name,[in] string ComputerName,[out] DnsServerDirectoryPartition cmdletOutput)
ULONG WINAPI iphlpapi.LookupPersistentTcpPortReservation(_In_ USHORT StartPort,_In_ USHORT NumberOfPorts,_Out_ PULONG64 Token)
HRESULT None oleaut32.VarBstrFromR4(_In_ FLOAT fltIn,_In_ LCID lcid,_In_ ULONG dwFlags,_Out_ BSTR *pbstrOut)
ULONG None None.RKeyPFXInstall(_In_ KEYSVCC_HANDLE hKeySvcCli,_In_ PKEYSVC_BLOB pPFX,_In_ PKEYSVC_UNICODE_STRING pPassword,_In_ ULONG ulFlags)
BOOL None kernel32.GetCPInfoEx(_In_ UINT CodePage,_In_ DWORD dwFlags,_Out_ LPCPINFOEX lpCPInfoEx)
BOOL None kernel32.GetCPInfoExW(_In_ UINT CodePage,_In_ DWORD dwFlags,_Out_ LPCPINFOEX lpCPInfoEx)
BOOL None kernel32.GetCPInfoExA(_In_ UINT CodePage,_In_ DWORD dwFlags,_Out_ LPCPINFOEX lpCPInfoEx)
BOOL WINAPI None.CertStoreProvFindCert(_In_ HCERTSTOREPROV hStoreProv,_In_ PCCERT_STORE_PROV_FIND_INFO pFindInfo,_In_ PCCERT_CONTEXT pPrevCertContext,_In_ DWORD dwFlags,_Inout_ void **ppvStoreProvFindInfo,_Out_ PCCERT_CONTEXT *ppProvCertContext)
DWORD None iphlpapi.NotifyRouteChange(_Out_ PHANDLE Handle,_In_ LPOVERLAPPED overlapped)
BOOL WINAPI None.CertStoreProvDeleteCRLCallback(_In_ HCERTSTOREPROV hStoreProv,_In_ PCCRL_CONTEXT pCrlContext,_In_ DWORD dwFlags)
BOOL WINAPI advapi32.CryptSetProvider(_In_ LPCTSTR pszProvName,_In_ DWORD dwProvType)
BOOL WINAPI advapi32.CryptSetProviderW(_In_ LPCTSTR pszProvName,_In_ DWORD dwProvType)
BOOL WINAPI advapi32.CryptSetProviderA(_In_ LPCTSTR pszProvName,_In_ DWORD dwProvType)
BOOL WINAPI advapi32.CryptHashSessionKey(_In_ HCRYPTHASH hHash,_In_ HCRYPTKEY hKey,_In_ DWORD dwFlags)
BOOL WINAPI crypt32.CertCloseStore(_In_ HCERTSTORE hCertStore,_In_ DWORD dwFlags)
typedef None None.BOOL(WINAPI *PFN_CRYPT_OBJECT_LOCATOR_PROVIDER_GET None)
DWORD WINAPI iphlpapi.EnableRouter(HANDLE *pHandle None,OVERLAPPED *pOverlapped None)
HRESULT None None.MoveItem([in] IShellItem *psiItem,[in] IShellItem *psiDestinationFolder,[in None None,unique] LPCWSTR pszNewName,[in None None,unique] IFileOperationProgressSink *pfopsItem)
HRESULT WINAPI webservices.WsGetMessageProperty(_In_ WS_MESSAGE* message,_In_ WS_MESSAGE_PROPERTY_ID id,void* value None,_In_ ULONG valueSize,_In_opt_ WS_ERROR* error)
NETIOAPI_API None iphlpapi.GetIpNetTable2(_In_ ADDRESS_FAMILY Family,_Out_ PMIB_IPNET_TABLE2 *Table)
DWORD None iphlpapi.SetIpTTL(_In_ UINT nTTL)
BOOL WINAPI crypt32.CertSerializeCRLStoreElement(_In_ PCCRL_CONTEXT pCrlContext,_In_ DWORD dwFlags,_Out_ BYTE *pbElement,_Inout_ DWORD *pcbElement)
BOOL WINAPI crypt32.CryptExportPublicKeyInfoFromBCryptKeyHandle(_In_ BCRYPT_KEY_HANDLE hBCryptKey,_In_ DWORD dwCertEncodingType,_In_opt_ LPSTR pszPublicKeyObjId,_In_ DWORD dwFlags,_In_opt_ void pvAuxInfo,_Out_opt_ PCERT_PUBLIC_KEY_INFO pInfo,_Inout_ DWORD pcbInfo)
CRYPTCATMEMBER WINAPI wintrust.CryptCATEnumerateMember(_In_ HANDLE hCatalog,_In_ CRYPTCATMEMBER *pPrevMember)
ULONG None tdh.TdhCloseDecodingHandle(_In_ TDH_HANDLE Handle)
BOOL WINAPI crypt32.CryptSIPRemoveSignedDataMsg(_In_ SIP_SUBJECTINFO *pSubjectInfo,_In_ DWORD dwIndex)
BOOL WINAPI crypt32.CryptMsgSignCTL(_In_ DWORD dwMsgEncodingType,_In_ BYTE *pbCtlContent,_In_ DWORD cbCtlContent,_In_ PCMSG_SIGNED_ENCODE_INFO pSignInfo,_In_ DWORD dwFlags,_Out_ BYTE *pbEncoded,_Inout_ DWORD *pcbEncoded)
HRESULT None oleaut32.VarUI4FromI8(_In_ LONG64 i64In,_Out_ ULONG *plOut)
BOOL WINAPI crypt32.CertAddCTLContextToStore(_In_ HCERTSTORE hCertStore,_In_ PCCTL_CONTEXT pCtlContext,_In_ DWORD dwAddDisposition,_Out_opt_ PCCTL_CONTEXT *ppStoreContext)
DWORD None iphlpapi.GetBestRoute(_In_ DWORD dwDestAddr,_In_ DWORD dwSourceAddr,_Out_ PMIB_IPFORWARDROW pBestRoute)
DWORD WINAPI crypt32.CertGetPublicKeyLength(_In_ DWORD dwCertEncodingType,_In_ PCERT_PUBLIC_KEY_INFO pPublicKey)
typedef None None.HRESULT(WINAPI *CryptXmlDllCreateKey None)
BOOL WINAPI advapi32.CryptVerifySignature(_In_ HCRYPTHASH hHash,_In_ BYTE *pbSignature,_In_ DWORD dwSigLen,_In_ HCRYPTKEY hPubKey,_In_ LPCTSTR sDescription,_In_ DWORD dwFlags)
BOOL WINAPI advapi32.CryptVerifySignatureW(_In_ HCRYPTHASH hHash,_In_ BYTE *pbSignature,_In_ DWORD dwSigLen,_In_ HCRYPTKEY hPubKey,_In_ LPCTSTR sDescription,_In_ DWORD dwFlags)
BOOL WINAPI advapi32.CryptVerifySignatureA(_In_ HCRYPTHASH hHash,_In_ BYTE *pbSignature,_In_ DWORD dwSigLen,_In_ HCRYPTKEY hPubKey,_In_ LPCTSTR sDescription,_In_ DWORD dwFlags)
HRESULT None None.PostPaint([in] HDC hdc,[in] RECT *prc)
BOOL WINAPI crypt32.CertVerifyValidityNesting(_In_ PCERT_INFO pSubjectInfo,_In_ PCERT_INFO pIssuerInfo)
LCID None kernel32.GetSystemDefaultLCID(void None None)
ULONG None None.RKeyCloseKeyService(_In_ KEYSVCC_HANDLE hKeySvcCli,_Inout_ void *pReserved)
BOOL WINAPI crypt32.CertRemoveEnhancedKeyUsageIdentifier(_In_ PCCERT_CONTEXT pCertContext,_In_ LPCSTR pszUsageIdentifier)
BOOL None kernel32.EnumCalendarInfo(_In_ CALINFO_ENUMPROC pCalInfoEnumProc,_In_ LCID Locale,_In_ CALID Calendar,_In_ CALTYPE CalType)
BOOL None kernel32.EnumCalendarInfoW(_In_ CALINFO_ENUMPROC pCalInfoEnumProc,_In_ LCID Locale,_In_ CALID Calendar,_In_ CALTYPE CalType)
BOOL None kernel32.EnumCalendarInfoA(_In_ CALINFO_ENUMPROC pCalInfoEnumProc,_In_ LCID Locale,_In_ CALID Calendar,_In_ CALTYPE CalType)
BOOL WINAPI crypt32.CryptAcquireCertificatePrivateKey(_In_ PCCERT_CONTEXT pCert,_In_ DWORD dwFlags,_In_opt_ void *pvParameters,_Out_ HCRYPTPROV_OR_NCRYPT_KEY_HANDLE *phCryptProvOrNCryptKey,_Out_ DWORD *pdwKeySpec,_Out_ BOOL *pfCallerFreeProvOrNCryptKey)
BOOL None wintrust.WintrustLoadFunctionPointers(_In_ GUID *pgActionID,_Out_ CRYPT_PROVIDER_FUNCTIONS *pPfns)
DWORD None iphlpapi.GetTcpStatistics(_Out_ PMIB_TCPSTATS pStats)
DWORD None iphlpapi.SendARP(_In_ IPAddr DestIP,_In_ IPAddr SrcIP,_Out_ PULONG pMacAddr,_Inout_ PULONG PhyAddrLen)
void WINAPI webservices.WsFreeMetadata(_In_ WS_METADATA* metadata)
typedef None None.BOOL(WINAPI *PFN_IMPORT_PUBLIC_KEY_INFO_EX2_FUNC None)
LCID None kernel32.LocaleNameToLCID(_In_ LPCWSTR lpName,_In_ DWORD dwFlags)
typedef None None.BOOL(WINAPI *PFN_CERT_STORE_PROV_CONTROL None)
HRESULT None None.MoveItems([in] IUnknown *punkItems,[in] IShellItem *psiDestinationFolder)
ULONG WINAPI iphlpapi.GetUdp6Table(_Out_ PMIB_UDP6TABLE Udp6Table,_Inout_ PULONG SizePointer,_In_ BOOL Order)
BOOL CALLBACK None.EnumLocalesProc(_In_ LPTSTR lpLocaleString)
HRESULT WINAPI webservices.WsResetServiceProxy(_In_ WS_SERVICE_PROXY* serviceProxy,_In_opt_ WS_ERROR* error)
BOOL WINAPI crypt32.CertDeleteCTLFromStore(_In_ PCCTL_CONTEXT pCtlContext)
BOOL None kernel32.IsNLSDefinedString(_In_ NLS_FUNCTION Function,_In_ DWORD dwFlags,_In_ LPNLSVERSIONINFO lpVersionInformation,_In_ LPCWSTR lpString,_In_ INT cchStr)
NETIOAPI_API None iphlpapi.GetMulticastIpAddressTable(_In_ ADDRESS_FAMILY Family,_Out_ PMIB_MULTICASTIPADDRESS_TABLE *Table)
HRESULT None oleaut32.VarI2FromCy(_In_ CY cyIn,SHORT *psOut None)
NETIOAPI_API None iphlpapi.GetIfEntry2Ex(_In_ MIB_IF_ENTRY_LEVEL Level,_Inout_ PMIB_IF_ROW2 Row)
void None None.WsOffsetOf(type None None,field None None)
BOOL WINAPI iphlpapi.CancelSecurityHealthChangeNotify(LPOVERLAPPED notifyOverlapped None)
HRESULT WINAPI mssign32.SignerTimeStampEx2(_Reserved_ DWORD dwFlags,_In_ SIGNER_SUBJECT_INFO *pSubjectInfo,_In_ LPCWSTR pwszHttpTimeStamp,_In_ ALG_ID dwAlgId,_In_ PCRYPT_ATTRIBUTES psRequest,_In_ LPVOID pSipData,_Out_ SIGNER_CONTEXT **ppSignerContext)
ULONG WINAPI iphlpapi.GetTcpTable2(_Out_ PMIB_TCPTABLE2 TcpTable,_Inout_ PULONG SizePointer,_In_ BOOL Order)
void RPC_ENTRY rpcrt4.NdrContextHandleSize(PMIDL_STUB_MESSAGE pStubMsg None,unsigned char *pMemory,PFORMAT_STRING pFormat None)
BOOL WINAPI crypt32.PFXVerifyPassword(_In_ CRYPT_DATA_BLOB *pPFX,_In_ LPCWSTR szPassword,_In_ DWORD dwFlags)
HRESULT None oleaut32.VarDateFromUI2(_In_ USHORT uiIn,_Out_ DATE *pdateOut)
HRESULT None None.GetObject([in] REFGUID rguidObjectID,[in] REFIID riid,[out] void **ppv)
BOOL None kernel32.GetStringTypeA(_In_ LCID Locale,_In_ DWORD dwInfoType,_In_ LPCSTR lpSrcStr,_In_ int cchSrc,_Out_ LPWORD lpCharType)
LCID None kernel32.ConvertDefaultLocale(_In_ LCID Locale)
HRESULT None oleaut32.VarDateFromI2(_In_ SHORT sIn,_Out_ DATE *pdateOut)
BOOL WINAPI crypt32.CertIsStrongHashToSign(_In_ PCCERT_STRONG_SIGN_PARA pStrongSignPara,_In_ LPCWSTR pwszCNGHashAlgid,_In_opt_ PCCERT_CONTEXT pSigningCert)
ULONG None advapi32.EnableTrace(_In_ ULONG Enable,_In_ ULONG EnableFlag,_In_ ULONG EnableLevel,_In_ LPCGUID ControlGuid,_In_ TRACEHANDLE SessionHandle)
BOOL WINAPI crypt32.CertDeleteCertificateFromStore(_In_ PCCERT_CONTEXT pCertContext)
HRESULT None oleaut32.VarR8FromR4(_In_ FLOAT fltIn,_Out_ DOUBLE *pdblOut)
BOOL WINAPI crypt32.CryptMsgCountersign(_Inout_ HCRYPTMSG hCryptMsg,_In_ DWORD dwIndex,_In_ DWORD cCountersigners,_In_ PCMSG_SIGNER_ENCODE_INFO rgCountersigners)
void WINAPI mssign32.PvkFreeCryptProv(_In_ HCRYPTPROV hProv,_In_ LPCWSTR pwszCapiProvider,_In_ DWORD dwProviderType,_In_opt_ LPWSTR pwszTmpContainer)
BOOL WINAPI crypt32.CryptGetDefaultOIDDllList(_In_ HCRYPTOIDFUNCSET hFuncSet,_In_ DWORD dwEncodingType,_Out_ LPWSTR pwszDllList,_Inout_ DWORD *pcchDllList)
HRESULT None shell32.AddBand([in] IUnknown* punk)
NETIOAPI_API None iphlpapi.GetAnycastIpAddressTable(_In_ ADDRESS_FAMILY Family,_Out_ PMIB_ANYCASTIPADDRESS_TABLE *Table)
DWORD None iphlpapi.GetOwnerModuleFromUdp6Entry(_In_ PMIB_UDP6ROW_OWNER_MODULE pUdpEntry,_In_ TCPIP_OWNER_MODULE_INFO_CLASS Class,_Out_ PVOID Buffer,_Inout_ PDWORD pdwSize)
HRESULT None certadm.CertSrvRestoreGetDatabaseLocations(_In_ HCSBC hbc,_Out_ WCHAR **ppwszzDatabaseLocationList,_Out_ DWORD *pcbSize)
HRESULT None certadm.CertSrvRestoreGetDatabaseLocationsW(_In_ HCSBC hbc,_Out_ WCHAR **ppwszzDatabaseLocationList,_Out_ DWORD *pcbSize)
BOOL WINAPI crypt32.CertAddCTLLinkToStore(_In_ HCERTSTORE hCertStore,_In_ PCCTL_CONTEXT pCtlContext,_In_ DWORD dwAddDisposition,_Out_opt_ PCCTL_CONTEXT *ppStoreContext)
DWORD WINAPI iphlpapi.NotifySecurityHealthChange(PHANDLE pHandle None,LPOVERLAPPED pOverLapped None,PULONG SecurityHealthFlags None)
HRESULT None None.LoadLibraryFromKnownFolder([in] REFKNOWNFOLDERID kfidLibrary,[in] DWORD grfMode)
HRESULT None None.Initialize([in] LPCWSTR pszCommandName,[in] IPropertyBag *ppb)
int None kernel32.CompareString(_In_ LCID Locale,_In_ DWORD dwCmpFlags,_In_ LPCTSTR lpString1,_In_ int cchCount1,_In_ LPCTSTR lpString2,_In_ int cchCount2)
int None kernel32.CompareStringW(_In_ LCID Locale,_In_ DWORD dwCmpFlags,_In_ LPCTSTR lpString1,_In_ int cchCount1,_In_ LPCTSTR lpString2,_In_ int cchCount2)
int None kernel32.CompareStringA(_In_ LCID Locale,_In_ DWORD dwCmpFlags,_In_ LPCTSTR lpString1,_In_ int cchCount1,_In_ LPCTSTR lpString2,_In_ int cchCount2)
DWORD None iphlpapi.GetUdpStatistics(_Out_ PMIB_UDPSTATS pStats)
HRESULT WINAPI webservices.WsSetOutputToBuffer(_In_ WS_XML_WRITER* writer,_In_ WS_XML_BUFFER* buffer,const WS_XML_WRITER_PROPERTY* properties,_In_ ULONG propertyCount,_In_opt_ WS_ERROR* error)
DWORD None iphlpapi.SetIpNetEntry(_In_ PMIB_IPNETROW pArpEntry)
typedef None None.HRESULT(WINAPI *CryptXmlDllEncodeKeyValue None)
DWORD None iphlpapi.GetIpAddrTable(_Out_ PMIB_IPADDRTABLE pIpAddrTable,_Inout_ PULONG pdwSize,_In_ BOOL bOrder)
ULONG WINAPI iphlpapi.GetPerTcpConnectionEStats(PMIB_TCPROW Row None,TCP_ESTATS_TYPE EstatsType None,_Out_ PUCHAR Rw,ULONG RwVersion None,ULONG RwSize None,_Out_ PUCHAR Ros,ULONG RosVersion None,ULONG RosSize None,_Out_ PUCHAR Rod,ULONG RodVersion None,ULONG RodSize None)
LCID None nlsmap.DownlevelGetParentLocaleLCID(_In_ LCID Locale)
HRESULT WINAPI webservices.WsAbandonMessage(_In_ WS_CHANNEL* channel,_In_ WS_MESSAGE* message,_In_opt_ WS_ERROR* error)
DWORD None iphlpapi.GetOwnerModuleFromTcp6Entry(_In_ PMIB_TCP6ROW_OWNER_MODULE pTcpEntry,_In_ TCPIP_OWNER_MODULE_INFO_CLASS Class,_Out_ PVOID Buffer,_Inout_ PDWORD pdwSize)
ULONG WINAPI iphlpapi.DeletePersistentTcpPortReservation(_In_ USHORT StartPort,_In_ USHORT NumberOfPorts)
DWORD None iphlpapi.GetIfTable(_Out_ PMIB_IFTABLE pIfTable,_Inout_ PULONG pdwSize,_In_ BOOL bOrder)
BOOL WINAPI mssign32.PvkPrivateKeyAcquireContextFromMemory(_In_ LPCWSTR pwszProvName,_In_ DWORD dwProvType,_In_ BYTE *pbData,_In_ DWORD cbData,_In_ HWND hwndOwner,_In_ LPCWSTR pwszKeyName,_Inout_opt_ DWORD *pdwKeySpec,_Out_ HCRYPTPROV *phCryptProv,_Out_ LPTSTR *ppwszTmpContainer)
NETIOAPI_API None iphlpapi.SetIpNetEntry2(_Inout_ PMIB_IPNET_ROW2 Row)
BOOL WINAPI crypt32.CryptMsgEncodeAndSignCTL(_In_ DWORD dwMsgEncodingType,_In_ PCTL_INFO pCtlInfo,_In_ PCMSG_SIGNED_ENCODE_INFO pSignInfo,_In_ DWORD dwFlags,_Out_ BYTE *pbEncoded,_Inout_ DWORD *pcbEncoded)
BOOL WINAPI advapi32.CryptGenRandom(_In_ HCRYPTPROV hProv,_In_ DWORD dwLen,_Inout_ BYTE *pbBuffer)
BOOL WINAPI crypt32.CryptExportPublicKeyInfoEx(_In_ HCRYPTPROV_OR_NCRYPT_KEY_HANDLE hCryptProvOrNCryptKey,_In_ DWORD dwKeySpec,_In_ DWORD dwCertEncodingType,_In_ LPSTR pszPublicKeyObjId,_In_ DWORD dwFlags,_In_ void *pvAuxInfo,_Out_ PCERT_PUBLIC_KEY_INFO pInfo,_Inout_ DWORD *pcbInfo)
HRESULT WINAPI webservices.WsReadEnvelopeStart(_In_ WS_MESSAGE* message,_In_ WS_XML_READER* reader,_In_opt_ WS_MESSAGE_DONE_CALLBACK doneCallback,_In_opt_ void* doneCallbackState,_In_opt_ WS_ERROR* error)
HRESULT WINAPI webservices.WsCreateXmlSecurityToken(_In_ WS_XML_BUFFER* tokenXml,_In_opt_ WS_SECURITY_KEY_HANDLE* tokenKey,const WS_XML_SECURITY_TOKEN_PROPERTY* properties,_In_ ULONG propertyCount,WS_SECURITY_TOKEN** token None,_In_opt_ WS_ERROR* error)
void WINAPI webservices.WsFreeWriter(_In_ WS_XML_WRITER* writer)
HRESULT WINAPI webservices.WsRemoveHeader(_In_ WS_MESSAGE *message,_In_ WS_HEADER_TYPE headerType,_In_opt_ WS_ERROR* *error)
HRESULT None oleaut32.VarCyFromUI8(_In_ ULONG64 ui64In,_Out_ CY *pcyOut)
HRESULT WINAPI webservices.WsCreateFaultFromError(_In_ WS_ERROR* error,_In_ HRESULT errorCode,_In_ WS_FAULT_DISCLOSURE disclosure,_In_ WS_HEAP* heap,_Out_ WS_FAULT* fault)
BOOL None kernel32.IsValidLocaleName(_In_ LPCWSTR lpLocaleName)
HRESULT None oleaut32.VarBstrFromCy(_In_ CY cyIn,_In_ LCID lcid,_In_ ULONG dwFlags,_Out_ BSTR *pbstrOut)
HRESULT None oleaut32.VarI4FromUI8(_In_ ULONG64 ui64In,_Out_ LONG *plOut)
HRESULT None None.GetRelativeDescription([in] REFPROPVARIANT propvar1,[in] REFPROPVARIANT propvar2,[out] LPWSTR *ppszDesc1,[out] LPWSTR *ppszDesc2)
NETIOAPI_API None iphlpapi.GetIfTable2Ex(_In_ MIB_IF_TABLE_LEVEL Level,_Out_ PMIB_IF_TABLE2 *Table)
HRESULT WINAPI webservices.WsGetHeapProperty(_In_ WS_HEAP* heap,_In_ WS_HEAP_PROPERTY_ID id,void* value None,_In_ ULONG valueSize,_In_opt_ WS_ERROR* error)
LONG CALLBACK None.FMExtensionProc(HWND hwnd None,WORD wMsg None,LONG lParam None)
LONG CALLBACK None.FMExtensionProcW(HWND hwnd None,WORD wMsg None,LONG lParam None)
HRESULT WINAPI webservices.WsWriteEnvelopeEnd(_In_ WS_MESSAGE* message,_In_opt_ WS_ERROR* error)
typedef None None.HRESULT(WINAPI *CryptXmlDllFinalizeDigest None)
typedef None None.BOOL(WINAPI *PFN_CRYPT_OBJECT_LOCATOR_PROVIDER_FLUSH None)
DWORD WINAPI crypt32.CertEnumCertificateContextProperties(_In_ PCCERT_CONTEXT pCertContext,_In_ DWORD dwPropId)
DWORD None iphlpapi.GetIcmpStatisticsEx(_Out_ PMIB_ICMP_EX pStats,_In_ DWORD dwFamily)
PCCERT_CONTEXT WINAPI cryptui.CryptUIDlgSelectCertificateFromStore(_In_ HCERTSTORE hCertStore,_In_ HWND hwnd,_In_opt_ LPCWSTR pwszTitle,_In_opt_ LPCWSTR pwszDisplayString,_In_ DWORD dwDontUseColumn,_In_ DWORD dwFlags,_In_ void *pvReserved)
CLIENT_CALL_RETURN None rpcrt4.NdrMesProcEncodeDecode4(handle_t Handle None,_In_ PMIDL_STUB_DESC pStubDescriptor,_In_ PFORMAT_STRING pFormat,_Inout_ ... None)
ULONG WINAPI advapi32.EnumerateTraceGuidsEx(_In_ TRACE_QUERY_INFO_CLASS TraceQueryInfoClass,_In_ PVOID InBuffer,_In_ ULONG InBufferSize,_Out_ PVOID OutBuffer,_In_ ULONG OutBufferSize,_Out_ PULONG ReturnLength)
HRESULT WINAPI webservices.WsWriteEndStartElement(_In_ WS_XML_WRITER* writer,_In_opt_ WS_ERROR* error)
ULONG WINAPI iphlpapi.GetTcp6Table(_Out_ PMIB_TCP6TABLE TcpTable,_Inout_ PULONG SizePointer,_In_ BOOL Order)
typedef None None.int(CALLBACK *BrowseCallbackProc None)
HRESULT None None.SetMenuRestrictions([in] DEFAULT_FOLDER_MENU_RESTRICTIONS dfmrValues)
HRESULT None shell32.SetBorderSpaceDW([in] IUnknown *punkObj,[in] LPCBORDERWIDTHS pbw)
BOOL WINAPI None.CertEnumSystemStoreLocationCallback(_In_ LPCWSTR pvszStoreLocations,_In_ DWORD dwFlags,_In_ void *pvReserved,_In_ void *pvArg)
HRESULT None None.GetName([out] LPWSTR *ppszName)
HRESULT WINAPI webservices.WsPullBytes(_In_ WS_XML_WRITER* writer,_In_ WS_PULL_BYTES_CALLBACK callback,_In_opt_ void* callbackState,_In_opt_ WS_ERROR* error)
void STDMETHODCALLTYPE ole32.CStdAsyncStubBuffer_Disconnect(_In_ IRpcStubBuffer *pthis)
HRESULT None oleaut32.VarI8FromUI8(_In_ ULONG64 ui64In,_Out_ LONG64 *pi64Out)
NETIOAPI_API None iphlpapi.GetIfEntry2(PMIB_IF_ROW2 Row None)
LPVOID WINAPI crypt32.CryptMemRealloc(_In_ LPVOID pv,_In_ ULONG cbSize)
HRESULT WINAPI webservices.WsGetHeader(_In_ WS_MESSAGE* message,_In_ WS_HEADER_TYPE headerType,_In_ WS_TYPE valueType,_In_ WS_READ_OPTION readOption,_In_opt_ WS_HEAP* heap,void* value None,_In_ ULONG valueSize,_In_opt_ WS_ERROR* error)
HRESULT None mobsync.EnumSyncMgrItems([out] ISyncMgrEnumItems **ppSyncMgrEnumItems)
BOOL WINAPI wintrust.OpenPersonalTrustDBDialog(_In_opt_ HWND hwndParent)
PCCTL_CONTEXT WINAPI crypt32.CertDuplicateCTLContext(_In_ PCCTL_CONTEXT pCtlContext)
HRESULT WINAPI dwmapi.DwmIsCompositionEnabled(_Out_ BOOL *pfEnabled)
HRESULT None shell32.GetData([in] ASSOCF flags,[in] ASSOCDATA data,[in None None,optional] LPCWSTR pwszExtra,[out None None,optional] void *pvOut,[in None None,out None None,optional] DWORD *pcbOut)
HRESULT None None.GetOptions([out] FILEOPENDIALOGOPTIONS *fos)
HRESULT WINAPI webservices.WsCreateMessage(_In_ WS_ENVELOPE_VERSION envelopeVersion,_In_ WS_ADDRESSING_VERSION addressingVersion,const WS_MESSAGE_PROPERTY* properties,_In_ ULONG propertyCount,WS_MESSAGE** message None,_In_opt_ WS_ERROR* error)
BOOL CALLBACK None.EnumCalendarInfoProcExEx(_In_ LPWSTR lpCalendarInfoString,_In_ CALID Calendar,_In_ LPWSTR lpReserved,_In_ LPARAM lParam)
HRESULT None oleaut32.GetVarConversionLocaleSetting(_Out_ ULONG *dwFlags)
NETIOAPI_API None iphlpapi.SetIpInterfaceEntry(_Inout_ PMIB_IPINTERFACE_ROW Row)
NETIO_STATUS WINAPI iphlpapi.ConvertLengthToIpv4Mask(_In_ ULONG MaskLength,_Out_ PULONG Mask)
BOOL WINAPI advapi32.CryptDeriveKey(_In_ HCRYPTPROV hProv,_In_ ALG_ID Algid,_In_ HCRYPTHASH hBaseData,_In_ DWORD dwFlags,_Inout_ HCRYPTKEY *phKey)
HRESULT WINAPI webservices.WsResetHeap(_In_ WS_HEAP* heap,_In_opt_ WS_ERROR* error)
BOOL WINAPI None.CRYPT_ENUM_OID_INFO(_In_ PCRYPT_OID_INFO pInfo,_In_ void *pvArg)
BOOL WINAPI None.OffloadModExpo(_In_ BYTE *pbBase,_In_ BYTE *pbExpo,_In_ DWORD cbExpo,_In_ BYTE *pbMod,_In_ DWORD cbMod,_Out_ BYTE *pbResult,_In_ void *pReserved,_In_ DWORD dwFlags)
BOOL WINAPI None.CertStoreProvWriteCRLCallback(_In_ HCERTSTOREPROV hStoreProv,_In_ PCCRL_CONTEXT pCrlContext,_In_ DWORD dwFlags)
DWORD None iphlpapi.SetIpForwardEntry(_In_ PMIB_IPFORWARDROW pRoute)
VOID WINAPI crypt32.CertFreeCertificateChainList(_In_ PCCERT_CHAIN_CONTEXT *prgpSelection)
HRESULT None oleaut32.VarI4FromUI4(_In_ ULONG ulIn,_Out_ LONG *plOut)
LONG WINAPI crypt32.CertVerifyTimeValidity(_In_ LPFILETIME pTimeToVerify,_In_ PCERT_INFO pCertInfo)
BOOL WINAPI advapi32.CryptEnumProviders(_In_ DWORD dwIndex,_In_ DWORD *pdwReserved,_In_ DWORD dwFlags,_Out_ DWORD *pdwProvType,_Out_ LPTSTR pszProvName,_Inout_ DWORD *pcbProvName)
BOOL WINAPI advapi32.CryptEnumProvidersW(_In_ DWORD dwIndex,_In_ DWORD *pdwReserved,_In_ DWORD dwFlags,_Out_ DWORD *pdwProvType,_Out_ LPTSTR pszProvName,_Inout_ DWORD *pcbProvName)
BOOL WINAPI advapi32.CryptEnumProvidersA(_In_ DWORD dwIndex,_In_ DWORD *pdwReserved,_In_ DWORD dwFlags,_Out_ DWORD *pdwProvType,_Out_ LPTSTR pszProvName,_Inout_ DWORD *pcbProvName)
ULONG WINAPI iphlpapi.CreatePersistentUdpPortReservation(_In_ USHORT StartPort,_In_ USHORT NumberOfPorts,_Out_ PULONG64 Token)
ULONG WINAPI iphlpapi.CreatePersistentTcpPortReservation(_In_ USHORT StartPort,_In_ USHORT NumberOfPorts,_Out_ PULONG64 Token)
BOOL WINAPI crypt32.CertSerializeCTLStoreElement(_In_ PCCTL_CONTEXT pCtlContext,_In_ DWORD dwFlags,_Out_ BYTE *pbElement,_Inout_ DWORD *pcbElement)
BOOL WINAPI advapi32.CryptImportKey(_In_ HCRYPTPROV hProv,_In_ BYTE *pbData,_In_ DWORD dwDataLen,_In_ HCRYPTKEY hPubKey,_In_ DWORD dwFlags,_Out_ HCRYPTKEY *phKey)
NETIOAPI_API None iphlpapi.FlushIpPathTable(_In_ ADDRESS_FAMILY Family)
DWORD None iphlpapi.NhpAllocateAndGetInterfaceInfoFromStack(IP_INTERFACE_NAME_INFO ppTable None,PDWORD pdwCount None,BOOL bOrder None,HANDLE hHeap None,DWORD dwFlags None)
HRESULT WINAPI webservices.WsWriteEndCData(_In_ WS_XML_WRITER* writer,_In_opt_ WS_ERROR* error)
typedef None None.BOOL(CALLBACK *PCRYPT_RESOLVE_HCRYPTPROV_FUNC None)
HRESULT None oleaut32.VarCyFromDate(_In_ DATE dateIn,_Out_ CY *pcyOut)
HRESULT None oleaut32.VarI4FromStr(_In_ LPCOLESTR strIn,_In_ LCID lcid,_In_ ULONG dwFlags,_Out_ LONG *plOut)
DWORD None iphlpapi.GetIcmpStatisticsEx(_Out_ PMIB_ICMP_EX pStats,_In_ DWORD dwFamily)
PCTL_ENTRY WINAPI crypt32.CertFindSubjectInCTL(_In_ DWORD dwEncodingType,_In_ DWORD dwSubjectType,_In_ void *pvSubject,_In_ PCCTL_CONTEXT pCtlContext,_In_ DWORD dwFlags)
HRESULT None oleaut32.VarCyFromStr(_In_ LPCOLESTR strIn,_In_ LCID lcid,_In_ ULONG dwFlags,_Out_ CY *pcyOut)
NETIOAPI_API None iphlpapi.CancelMibChangeNotify2(_In_ HANDLE NotificationHandle)
LPCWSTR WINAPI crypt32.CryptFindLocalizedName(_In_ LPCWSTR pwszCryptName)
DWORD WINAPI iphlpapi.IcmpSendEcho2Ex(_In_ HANDLE IcmpHandle,_In_opt_ HANDLE Event,_In_opt_ PIO_APC_ROUTINE ApcRoutine,_In_opt_ PVOID ApcContext,_In_ IPAddr SourceAddress,_In_ IPAddr DestinationAddress,_In_ LPVOID RequestData,_In_ WORD RequestSize,_In_opt_ PIP_OPTION_INFORMATION RequestOptions,_Out_ LPVOID ReplyBuffer,_In_ DWORD ReplySize,_In_ DWORD Timeout)
void WINAPI None.CertStoreProvCloseCallback(_In_ HCERTSTOREPROV hStoreProv,_In_ DWORD dwFlags)
DWORD None iphlpapi.CreateProxyArpEntry(_In_ DWORD dwAddress,_In_ DWORD dwMask,_In_ DWORD dwIfIndex)
BOOL WINAPI crypt32.CryptUnprotectMemory(_Inout_ LPVOID pData,_In_ DWORD cbData,_In_ DWORD dwFlags)
typedef None None.BOOL(WINAPI *PFN_CRYPT_SIGN_AND_ENCODE_HASH_FUNC None)
HRESULT None oleaut32.VarUI2FromI8(_In_ LONG64 i64In,_Out_ USHORT *puiOut)
DWORD None iphlpapi.GetBestInterface(_In_ IPAddr dwDestAddr,_Out_ PDWORD pdwBestIfIndex)
HRESULT None oleaut32.VarI4FromI8(_In_ LONG64 i64In,_Out_ LONG *plOut)
DWORD None iphlpapi.GetUniDirectionalAdapterInfo(_Out_ PIP_UNIDIRECTIONAL_ADAPTER_ADDRESS pIPIfInfo,_Out_ PULONG dwOutBufLen)
NETIO_STATUS WINAPI iphlpapi.ConvertInterfaceIndexToLuid(_In_ NET_IFINDEX InterfaceIndex,_Out_ PNET_LUID InterfaceLuid)
HCERTSTORE WINAPI crypt32.CertDuplicateStore(_In_ HCERTSTORE hCertStore)
LONG WINAPI wintrust.WinVerifyTrust(_In_ HWND hWnd,_In_ GUID *pgActionID,_In_ LPVOID pWVTData)
VOID WINAPI crypt32.CertAddRefServerOcspResponseContext(_In_ PCCERT_SERVER_OCSP_RESPONSE_CONTEXT pServerOcspResponseContext)
void WINAPI webservices.WsFreeServiceHost(_In_ WS_SERVICE_HOST* serviceHost)
HANDLE None iphlpapi.Icmp6CreateFile(void None None)
ULONG WINAPI iphlpapi.GetPerTcpConnectionEStats(PMIB_TCPROW Row None,TCP_ESTATS_TYPE EstatsType None,_Out_ PUCHAR Rw,ULONG RwVersion None,ULONG RwSize None,_Out_ PUCHAR Ros,ULONG RosVersion None,ULONG RosSize None,_Out_ PUCHAR Rod,ULONG RodVersion None,ULONG RodSize None)
BOOL WINAPI kernel32.SetUserGeoName(_In_ PWSTR geoName)
BOOL WINAPI crypt32.CertVerifyCTLUsage(_In_ DWORD dwEncodingType,_In_ DWORD dwSubjectType,_In_ void *pvSubject,_In_ PCTL_USAGE pSubjectUsage,_In_ DWORD dwFlags,_In_opt_ PCTL_VERIFY_USAGE_PARA pVerifyUsagePara,_Inout_ PCTL_VERIFY_USAGE_STATUS pVerifyUsageStatus)
HRESULT WINAPI webservices.WsEndWriterCanonicalization(_In_ WS_XML_WRITER* writer,_In_opt_ WS_ERROR* error)
HRESULT CALLBACK None.PFN_CRYPT_XML_DATA_PROVIDER_CLOSE(_Inout_ void *pvCallbackState)
HRESULT None oleaut32.VarI8FromR8(_In_ DOUBLE dblIn,_Out_ LONG64 *pi64Out)
BOOL WINAPI crypt32.CryptImportPublicKeyInfoEx2(_In_ DWORD dwCertEncodingType,_In_ PCERT_PUBLIC_KEY_INFO pInfo,_In_ DWORD dwFlags,_In_ void *pvAuxInfo,_Out_ BCRYPT_KEY_HANDLE *phKey)
DWORD None iphlpapi.GetIpErrorString(_In_ IP_STATUS ErrorCode,_Out_ PWCHAR Buffer,_Inout_ PDWORD Size)
BOOL WINAPI wintrust.WintrustSetRegPolicyFlags(_In_ DWORD dwPolicyFlags)
typedef None None.HRESULT(WINAPI *CryptXmlDllGetInterface None)
BOOL None crypt32.CryptSIPRemoveProvider(_In_ GUID *pgProv)
int None kernel32.FindStringOrdinal(_In_ DWORD dwFindStringOrdinalFlags,_In_ LPCWSTR lpStringSource,_In_ int cchSource,_In_ LPCWSTR lpStringValue,_In_ int cchValue,_In_ BOOL bIgnoreCase)
HRESULT None None.Unadvise([in] DWORD dwCookie)
typedef None None.void(WINAPI *PFN_CDF_PARSE_ERROR_CALLBACK None)
HRESULT None oleaut32.VarBoolFromDisp(IDispatch *pdispIn None,_In_ LCID lcid,_Out_ VARIANT_BOOL *pboolOut)
BOOL WINAPI None.CertStoreProvReadCTL(_In_ HCERTSTOREPROV hStoreProv,_In_ PCCTL_CONTEXT pStoreCtlContext,_In_ DWORD dwFlags,_Out_ PCCTL_CONTEXT *ppProvCtlContext)
LPWSTR WINAPI wintrust.CryptCATCDFEnumMembersByCDFTagEx(_In_ CRYPTCATCDF *pCDF,_Inout_ LPWSTR pwszPrevCDFTag,_In_ PFN_CDF_PARSE_ERROR_CALLBACK pfnParseError,_In_ CRYPTCATMEMBER **ppMember,_In_ BOOL fContinueOnError,_In_ LPVOID pvReserved)
typedef None None.BOOL(WINAPI *PFN_CMSG_CNG_IMPORT_KEY_AGREE None)
int None normaliz.IdnToAscii(_In_ DWORD dwFlags,_In_ LPCWSTR lpUnicodeCharStr,_In_ int cchUnicodeChar,_Out_opt_ LPWSTR lpASCIICharStr,_In_ int cchASCIIChar)
PCERT_RDN_ATTR WINAPI crypt32.CertFindRDNAttr(_In_ LPCSTR pszObjId,_In_ PCERT_NAME_INFO pName)
HRESULT WINAPI dwmapi.DwmAttachMilContent(_In_ HWND hwnd)
BOOL WINAPI crypt32.CertSelectCertificateChains(_In_opt_ LPCGUID pSelectionContext,_In_ DWORD dwFlags,_In_opt_ PCCERT_SELECT_CHAIN_PARA pChainParameters,_In_ DWORD cCriteria,_In_opt_ PCCERT_SELECT_CRITERIA rgpCriteria,_In_ HCERTSTORE hStore,_Out_ PDWORD pcSelection,_Out_ PCCERT_CHAIN_CONTEXT **pprgpSelection)
HRESULT None oleaut32.VarR4FromBool(_In_ VARIANT_BOOL boolIn,_Out_ FLOAT *pfltOut)
BOOL None wintrust.CryptCATAdminReleaseContext(_In_ HCATADMIN hCatAdmin,_In_ DWORD dwFlags)
HRESULT WINAPI webservices.WsSetFaultErrorProperty(_In_ WS_ERROR* error,_In_ WS_FAULT_ERROR_PROPERTY_ID id,const void* value,_In_ ULONG valueSize)
NTSTATUS None advapi32.RtlDecryptMemory(_Inout_ PVOID Memory,_In_ ULONG MemoryLength,_In_ ULONG OptionFlags)
HRESULT WINAPI webservices.WsGetMetadataProperty(_In_ WS_METADATA* metadata,_In_ WS_METADATA_PROPERTY_ID id,void* value None,_In_ ULONG valueSize,_In_opt_ WS_ERROR* error)
HRESULT WINAPI dwmapi.DwmIsCompositionEnabled(_Out_ BOOL *pfEnabled)
BOOL WINAPI crypt32.CertAddCertificateContextToStore(_In_ HCERTSTORE hCertStore,_In_ PCCERT_CONTEXT pCertContext,_In_ DWORD dwAddDisposition,_Out_opt_ PCCERT_CONTEXT *ppStoreContext)
HRESULT None certadm.CertSrvBackupGetBackupLogs(_In_ HCSBC hbc,_Out_ WCHAR **ppwszzBackupLogFiles,_Out_ DWORD *pcbSize)
HRESULT None certadm.CertSrvBackupGetBackupLogsW(_In_ HCSBC hbc,_Out_ WCHAR **ppwszzBackupLogFiles,_Out_ DWORD *pcbSize)
void WINAPI wintrust.WintrustGetRegPolicyFlags(_Out_ DWORD *pdwPolicyFlags)
HRESULT WINAPI webservices.WsMoveReader(_In_ WS_XML_READER* reader,_In_ WS_MOVE_TO moveTo,BOOL* found None,_In_opt_ WS_ERROR* error)
typedef None None.BOOL(WINAPI *PFN_CMSG_GEN_CONTENT_ENCRYPT_KEY None)
HRESULT None oleaut32.VarDecFromDisp(_In_ IDispatch *pdispIn,_In_ LCID lcid,_Out_ DECIMAL *pdecOut)
HRESULT WINAPI webservices.WsReadBytes(_In_ WS_XML_READER* reader,void* bytes None,_In_ ULONG maxByteCount,_Out_ ULONG* actualByteCount,_In_opt_ WS_ERROR* error)
BOOL WINAPI None.CertStoreProvGetCTLProperty(_In_ HCERTSTOREPROV hStoreProv,_In_ PCCTL_CONTEXT pCtlContext,_In_ DWORD dwPropId,_In_ DWORD dwFlags,_Out_ void *pvData,_Inout_ DWORD *pcbData)
BOOL WINAPI None.CertStoreProvGetCRLProperty(_In_ HCERTSTOREPROV hStoreProv,_In_ PCCRL_CONTEXT pCrlContext,_In_ DWORD dwPropId,_In_ DWORD dwFlags,_Out_ void *pvData,_Inout_ DWORD *pcbData)
BOOL None kernel32.SetUserGeoID(_In_ GEOID GeoId)
BOOL WINAPI crypt32.CertAddEnhancedKeyUsageIdentifier(_In_ PCCERT_CONTEXT pCertContext,_In_ LPCSTR pszUsageIdentifier)
BOOL WINAPI crypt32.CertSaveStore(_In_ HCERTSTORE hCertStore,_In_ DWORD dwMsgAndCertEncodingType,_In_ DWORD dwSaveAs,_In_ DWORD dwSaveTo,_Inout_ void *pvSaveToPara,_In_ DWORD dwFlags)
BOOL WINAPI crypt32.CryptProtectMemory(_Inout_ LPVOID pData,_In_ DWORD cbData,_In_ DWORD dwFlags)
NTSTATUS None advapi32.RtlEncryptMemory(_Inout_ PVOID Memory,_In_ ULONG MemoryLength,_In_ ULONG OptionFlags)
HRESULT None certadm.CertSrvBackupGetDatabaseNames(_In_ HCSBC hbc,_Out_ WCHAR **ppwszzAttachmentInformation,_Out_ DWORD *pcbSize)
HRESULT None certadm.CertSrvBackupGetDatabaseNamesW(_In_ HCSBC hbc,_Out_ WCHAR **ppwszzAttachmentInformation,_Out_ DWORD *pcbSize)
int None kernel32.GetStringScripts(_In_ DWORD dwFlags,_In_ LPCWSTR lpString,_In_ int cchString,_Out_opt_ LPWSTR lpScripts,_In_ int cchScripts)
DWORD WINAPI crypt32.CertEnumCRLContextProperties(_In_ PCCRL_CONTEXT pCrlContext,_In_ DWORD dwPropId)
BOOL WINAPI cryptnet.CryptGetObjectUrl(_In_ LPCSTR pszUrlOid,_In_ LPVOID pvPara,_In_ DWORD dwFlags,_Out_ PCRYPT_URL_ARRAY pUrlArray,_Inout_ DWORD *pcbUrlArray,_Out_ PCRYPT_URL_INFO pUrlInfo,_Inout_ DWORD *pcbUrlInfo,_Reserved_ LPVOID pvReserved)
void RPC_ENTRY rpcrt4.Ndr64AsyncServerCallAll(PRPC_MESSAGE pRpcMsg None)
HRESULT None oleaut32.VarBstrFromI1(_In_ CHAR cIn,_In_ LCID lcid,_In_ ULONG dwFlags,_Out_ BSTR *pbstrOut)
HRESULT WINAPI webservices.WsGetDictionary(_In_ WS_ENCODING encoding,WS_XML_DICTIONARY** dictionary None,_In_opt_ WS_ERROR* error)
ULONG STDMETHODCALLTYPE ole32.CStdAsyncStubBuffer2_Release(_In_ IRpcStubBuffer *pthis)
HRESULT None None.ApplyProperties([in] IShellItem *psi,[in] IPropertyStore *pStore,[in] HWND hwnd,[in] IFileOperationProgressSink *pSink)
HRESULT WINAPI webservices.WsGetHeaderAttributes(_In_ WS_MESSAGE* message,_In_ WS_XML_READER* reader,_Out_ ULONG* headerAttributes,_In_opt_ WS_ERROR* error)
ULONG WINAPI iphlpapi.GetTcp6Table2(_Out_ PMIB_TCP6TABLE2 TcpTable,_Inout_ PULONG SizePointer,_In_ BOOL Order)
HRESULT None None.ItemPostPaint([in] HDC hdc,[in] RECT *prc,[in] NSTCCUSTOMDRAW *pnstccdItem)
HRESULT None oleaut32.VarDecFromUI2(_In_ USHORT uiIn,_Out_ DECIMAL *pdecOut)
int None kernel32.GetLocaleInfo(_In_ LCID Locale,_In_ LCTYPE LCType,_Out_opt_ LPTSTR lpLCData,_In_ int cchData)
int None kernel32.GetLocaleInfoW(_In_ LCID Locale,_In_ LCTYPE LCType,_Out_opt_ LPTSTR lpLCData,_In_ int cchData)
int None kernel32.GetLocaleInfoA(_In_ LCID Locale,_In_ LCTYPE LCType,_Out_opt_ LPTSTR lpLCData,_In_ int cchData)
HRESULT None oleaut32.VarR4FromR8(_In_ DOUBLE dblIn,_Out_ FLOAT *pfltOut)
void STDMETHODCALLTYPE ole32.CStdAsyncStubBuffer2_Disconnect(_In_ IRpcStubBuffer *pthis)
HRESULT None oleaut32.VarI1FromUI2(_In_ USHORT uiIn,_Out_ CHAR *pcOut)
BOOL WINAPI crypt32.CryptHashPublicKeyInfo(_In_ HCRYPTPROV_LEGACY hCryptProv,_In_ ALG_ID Algid,_In_ DWORD dwFlags,_In_ DWORD dwCertEncodingType,_In_ PCERT_PUBLIC_KEY_INFO pInfo,_Out_ BYTE *pbComputedHash,_Inout_ DWORD *pcbComputedHash)
BOOL WINAPI advapi32.CryptReleaseContext(_In_ HCRYPTPROV hProv,_In_ DWORD dwFlags)
HRESULT None oleaut32.VarUI8FromCy(_In_ CY cyIn,_Out_ ULONG64 *pi64Out)
BOOL WINAPI crypt32.CertFreeCertificateContext(_In_ PCCERT_CONTEXT pCertContext)
PCCERT_CONTEXT WINAPI crypt32.CertEnumCertificatesInStore(_In_ HCERTSTORE hCertStore,_In_ PCCERT_CONTEXT pPrevCertContext)
BOOL WINAPI crypt32.CertEnumSystemStoreLocation(_In_ DWORD dwFlags,_In_ void *pvArg,_In_ PFN_CERT_ENUM_SYSTEM_STORE_LOCATION pfnEnum)
BOOL WINAPI crypt32.PFXIsPFXBlob(_In_ CRYPT_DATA_BLOB *pPFX)
HRESULT None oleaut32.VarI1FromR8(_In_ DOUBLE dblIn,_Out_ CHAR *pcOut)
int None nlsmap.DownlevelLCIDToLocaleName(_In_ LCID Locale,_Out_ LPWSTR lpName,_In_ int cchName,_In_ DWORD dwFlags)
STDAPI None shcore.RegisterScaleChangeEvent(_In_ HANDLE hEvent,_Out_ DWORD_PTR *pdwCookie)
BOOL None crypt32.CertGetStoreProperty(_In_ HCERTSTORE hCertStore,_In_ DWORD dwPropId,_Out_ void *pvData,_Inout_ DWORD *pcbData)
BOOL WINAPI wintrust.CryptCATAdminResolveCatalogPath(_In_ HCATADMIN hCatAdmin,_In_ WCHAR *pwszCatalogFile,_Inout_ CATALOG_INFO *psCatInfo,_In_ DWORD dwFlags)
HRESULT WINAPI webservices.WsGetPolicyAlternativeCount(_In_ WS_POLICY* policy,_Out_ ULONG* count,_In_opt_ WS_ERROR* error)
HRESULT None oleaut32.VarUI1FromBool(_In_ VARIANT_BOOL boolIn,_Out_ BYTE *pbOut)
BOOL WINAPI crypt32.CryptFindCertificateKeyProvInfo(_In_ PCCERT_CONTEXT pCert,_In_ DWORD dwFlags,_In_ void *pvReserved)
BOOL WINAPI advapi32.CryptDestroyHash(_In_ HCRYPTHASH hHash)
DWORD None kernel32.IsValidNLSVersion(_In_ NLS_FUNCTION function,_In_opt_ LPCWSTR lpLocaleName,_In_ LPNLSVERSIONINFOEX lpVersionInformation)
HRESULT None oleaut32.VarBoolFromR8(_In_ DOUBLE dblIn,_Out_ VARIANT_BOOL *pboolOut)
HRESULT None oleaut32.VarUI2FromUI1(_In_ BYTE bIn,_Out_ USHORT *puiOut)
void RSA32API ntdll.A_SHAInit(_Inout_ A_SHA_CTX *Context)
LPCSTR WINAPI crypt32.CertAlgIdToOID(_In_ DWORD dwAlgId)
HRESULT None oleaut32.VarBstrFromBool(_In_ VARIANT_BOOL boolIn,_In_ LCID lcid,_In_ ULONG dwFlags,_Out_ BSTR *pbstrOut)
HRESULT None oleaut32.VarI4FromInt(_In_ INT intIn,_Out_ LONG *plOut)
BOOL None None.PFNCFILTERPROC(_In_ PCCERT_CONTEXT pCertContext,_In_ BOOL *pfInitialSelectedCert,_In_ void *pvCallbackData)
HRESULT WINAPI dwmapi.DwmInvalidateIconicBitmaps(_In_ HWND hwnd)
NETIOAPI_API None iphlpapi.GetIpPathTable(_In_ ADDRESS_FAMILY Family,_Out_ PMIB_IPPATH_TABLE *Table)
int None normaliz.NormalizeString(_In_ NORM_FORM NormForm,_In_ LPCWSTR lpSrcString,_In_ int cwSrcLength,_Out_opt_ LPWSTR lpDstString,_In_ int cwDstLength)
BOOL WINAPI advapi32.CryptCreateHash(_In_ HCRYPTPROV hProv,_In_ ALG_ID Algid,_In_ HCRYPTKEY hKey,_In_ DWORD dwFlags,_Out_ HCRYPTHASH *phHash)
DWORD None iphlpapi.NotifyAddrChange(_Out_ PHANDLE Handle,_In_ LPOVERLAPPED overlapped)
BOOL WINAPI crypt32.CertVerifyCRLRevocation(_In_ DWORD dwCertEncodingType,_In_ PCERT_INFO pCertId,_In_ DWORD cCrlInfo,_In_ PCRL_INFO rgpCrlInfo[])
BOOL WINAPI advapi32.CryptGetProvParam(_In_ HCRYPTPROV hProv,_In_ DWORD dwParam,_Out_ BYTE *pbData,_Inout_ DWORD *pdwDataLen,_In_ DWORD dwFlags)
HRESULT None oleaut32.VarR4FromI4(_In_ LONG lIn,_Out_ FLOAT *pfltOut)
HRESULT None oleaut32.VarCyFromDisp(_In_ IDispatch *pdispIn,_In_ LCID lcid,_Out_ CY *pcyOut)
HRESULT None oleaut32.VarI4FromI2(_In_ SHORT sIn,_Out_ LONG *plOut)
BOOL WINAPI crypt32.CryptGetOIDFunctionValue(_In_ DWORD dwEncodingType,_In_ LPCSTR pszFuncName,_In_ LPCSTR pszOID,_In_ LPCWSTR pwszValueName,_Out_ DWORD *pdwValueType,_Out_ BYTE *pbValueData,_Inout_ DWORD *pcbValueData)
HRESULT None oleaut32.VarI8FromR4(_In_ FLOAT fltIn,_Out_ LONG64 *pi64Out)
HRESULT None oleaut32.VarDateFromDisp(IDispatch *pdispIn None,_In_ LCID lcid,_Out_ DATE *pdateOut)
HRESULT WINAPI webservices.WsSetHeader(_In_ WS_MESSAGE* message,_In_ WS_HEADER_TYPE headerType,_In_ WS_TYPE valueType,_In_ WS_WRITE_OPTION writeOption,const void* value,_In_ ULONG valueSize,_In_opt_ WS_ERROR* error)
HRESULT None oleaut32.VarUI4FromI1(_In_ CHAR cIn,_Out_ ULONG *pulOut)
typedef None None.BOOL(CALLBACK *PCRYPT_DECRYPT_PRIVATE_KEY_FUNC None)
BOOL WINAPI crypt32.CertFreeCTLContext(_In_ PCCTL_CONTEXT pCtlContext)
HRESULT None oleaut32.VarCyFromR4(_In_ FLOAT fltIn,_Out_ CY *pcyOut)
BOOL WINAPI dwmapi.DwmDefWindowProc(_In_ HWND hwnd,UINT msg None,WPARAM wParam None,LPARAM lParam None,_Out_ LRESULT *plResult)
HRESULT None certadm.CertSrvBackupRead(_In_ HCSBC hbc,_Out_ VOID *pvBuffer,_In_ DWORD cbBuffer,_Out_ DWORD *pcbRead)
HANDLE None iphlpapi.IcmpCreateFile(void None None)
HRESULT WINAPI webservices.WsRevokeSecurityContext(_In_ WS_SECURITY_CONTEXT* securityContext,_In_opt_ WS_ERROR* error)
HRESULT None oleaut32.VarUI2FromI1(_In_ CHAR cIn,_Out_ USHORT *puiOut)
HRESULT WINAPI webservices.WsStartWriterCanonicalization(_In_ WS_XML_WRITER* writer,_In_ WS_WRITE_CALLBACK writeCallback,_In_ void* writeCallbackState,const WS_XML_CANONICALIZATION_PROPERTY* properties,_In_ ULONG propertyCount,_In_opt_ WS_ERROR* error)
HRESULT None oleaut32.VarI2FromUI8(_In_ ULONG64 ui64In,_Out_ SHORT *psOut)
HRESULT None oleaut32.VarR8FromUI4(_In_ ULONG ulIn,_Out_ DOUBLE *pdblOut)
DWORD None iphlpapi.GetIpStatisticsEx(_Out_ PMIB_IPSTATS pStats,_In_ DWORD dwFamily)
BOOL WINAPI crypt32.CryptUpdateProtectedState(_In_ PSID pOldSid,_In_ LPCWSTR pwszOldPassword,_In_ DWORD dwFlags,_Out_ DWORD *pdwSuccessCount,_Out_ DWORD *pdwFailureCount)
BOOL WINAPI cryptui.CryptUIWizExport(_In_ DWORD dwFlags,_In_ HWND hwndParent,_In_ LPCWSTR pwszWizardTitle,_In_ PCCRYPTUI_WIZ_EXPORT_INFO pExportInfo,_In_ void *pvoid)
CLIENT_CALL_RETURN RPC_VAR_ENTRY rpcrt4.NdrClientCall(_In_ PMIDL_STUB_DESC pStubDescriptor,_In_ PFORMAT_STRING pFormat,_Inout_ ... None)
BOOL WINAPI crypt32.CertEnumSubjectInSortedCTL(_In_ PCCTL_CONTEXT pCtlContext,_Inout_ void **ppvNextSubject,_Out_ PCRYPT_DER_BLOB pSubjectIdentifier,_Out_ PCRYPT_DER_BLOB pEncodedAttributes)
void WINAPI crypt32.CertRemoveStoreFromCollection(_In_ HCERTSTORE hCollectionStore,_In_ HCERTSTORE hSiblingStore)
ULONG STDMETHODCALLTYPE ole32.CStdAsyncStubBuffer_Release(_In_ IRpcStubBuffer *pthis)
BOOL None kernel32.EnumSystemLocales(_In_ LOCALE_ENUMPROC lpLocaleEnumProc,_In_ DWORD dwFlags)
BOOL None kernel32.EnumSystemLocalesW(_In_ LOCALE_ENUMPROC lpLocaleEnumProc,_In_ DWORD dwFlags)
BOOL None kernel32.EnumSystemLocalesA(_In_ LOCALE_ENUMPROC lpLocaleEnumProc,_In_ DWORD dwFlags)
HRESULT None oleaut32.VarUI1FromUI2(_In_ USHORT uiIn,_Out_ BYTE *pbOut)
HRESULT None shell32.SetIconInfo([in] HICON hIcon,[in] LPCWSTR pszToolTip)
HRESULT None oleaut32.VarR8FromDate(_In_ DATE dateIn,_Out_ DOUBLE *pdblOut)
void None None.FuncReturnhWnd(_Inout_ HWND *phWnd)
HRESULT None oleaut32.VarR8FromI1(_In_ CHAR cIn,DOUBLE *pdblOut None)
BOOL None crypt32.CryptSIPAddProvider(_In_ SIP_ADD_NEWPROVIDER *psNewProv)
HRESULT WINAPI mssign32.SignerSignEx(_In_ DWORD dwFlags,_In_ SIGNER_SUBJECT_INFO *pSubjectInfo,_In_ SIGNER_CERT *pSignerCert,_In_ SIGNER_SIGNATURE_INFO *pSignatureInfo,_In_opt_ SIGNER_PROVIDER_INFO *pProviderInfo,_In_opt_ LPCWSTR pwszHttpTimeStamp,_In_opt_ PCRYPT_ATTRIBUTES psRequest,_In_opt_ LPVOID pSipData,_Out_ SIGNER_CONTEXT **ppSignerContext)
HRESULT None oleaut32.VarDecFromStr(_In_ LPCOLESTR strIn,_In_ LCID lcid,_In_ ULONG dwFlags,_Out_ DECIMAL *pdecOut)
HRESULT None oleaut32.VarUI2FromI4(_In_ LONG lIn,_Out_ USHORT *puiOut)
DWORD WINAPI iphlpapi.SetIpStatisticsEx(_In_ PMIB_IPSTATS pIpStats,ULONG Family None)
BOOL WINAPI crypt32.CryptImportPKCS8(_In_ CRYPT_PKCS8_IMPORT_PARAMS sPrivateKeyAndParams,_In_ DWORD dwFlags,_Out_opt_ HCRYPTPROV *phCryptProv,_In_opt_ void *pvAuxInfo)
BOOL WINAPI advapi32.CryptGetUserKey(_In_ HCRYPTPROV hProv,_In_ DWORD dwKeySpec,_Out_ HCRYPTKEY *phUserKey)
ULONG WINAPI iphlpapi.GetPerTcp6ConnectionEStats(PMIB_TCP6ROW Row None,TCP_ESTATS_TYPE EstatsType None,_Out_ PUCHAR Rw,ULONG RwVersion None,ULONG RwSize None,_Out_ PUCHAR Ros,ULONG RosVersion None,ULONG RosSize None,_Out_ PUCHAR Rod,ULONG RodVersion None,ULONG RodSize None)
int None kernel32.GetLocaleInfoEx(_In_opt_ LPCWSTR lpLocaleName,_In_ LCTYPE LCType,_Out_opt_ LPWSTR lpLCData,_In_ int cchData)
LONG NTAPI ntdll.RtlEthernetStringToAddress(_In_ PCTSTR S,_Out_ PCTSTR *Terminator,_Out_ DL_EUI48 *Addr)
LONG NTAPI ntdll.RtlEthernetStringToAddressW(_In_ PCTSTR S,_Out_ PCTSTR *Terminator,_Out_ DL_EUI48 *Addr)
LONG NTAPI ntdll.RtlEthernetStringToAddressA(_In_ PCTSTR S,_Out_ PCTSTR *Terminator,_Out_ DL_EUI48 *Addr)
HRESULT None oleaut32.VarUI4FromUI1(_In_ BYTE bIn,_Out_ ULONG *pulOut)
HRESULT WINAPI webservices.WsReadXmlBuffer(_In_ WS_XML_READER* reader,_In_ WS_HEAP* heap,WS_XML_BUFFER** xmlBuffer None,_In_opt_ WS_ERROR* error)
HRESULT None oleaut32.VarBoolFromI4(_In_ LONG lIn,_Out_ VARIANT_BOOL *pboolOut)
HRESULT None None.SetSelection([in] IShellItemArray *psia)
HRESULT None oleaut32.VarR8FromBool(_In_ VARIANT_BOOL boolIn,_Out_ DOUBLE *pdblOut)
HRESULT None oleaut32.VarCyFromI2(_In_ SHORT sIn,_Out_ CY *pcyOut)
HRESULT None oleaut32.VarR4FromUI1(_In_ BYTE bIn,_Out_ FLOAT *pfltOut)
BOOL WINAPI advapi32.CryptEnumProviderTypes(_In_ DWORD dwIndex,_In_ DWORD *pdwReserved,_In_ DWORD dwFlags,_Out_ DWORD *pdwProvType,_Out_ LPTSTR pszTypeName,_Inout_ DWORD *pcbTypeName)
BOOL WINAPI advapi32.CryptEnumProviderTypesW(_In_ DWORD dwIndex,_In_ DWORD *pdwReserved,_In_ DWORD dwFlags,_Out_ DWORD *pdwProvType,_Out_ LPTSTR pszTypeName,_Inout_ DWORD *pcbTypeName)
BOOL WINAPI advapi32.CryptEnumProviderTypesA(_In_ DWORD dwIndex,_In_ DWORD *pdwReserved,_In_ DWORD dwFlags,_Out_ DWORD *pdwProvType,_Out_ LPTSTR pszTypeName,_Inout_ DWORD *pcbTypeName)
HRESULT None shell32.SHSetTemporaryPropertyForItem(_In_ IShellItem *psi,_In_ REFPROPERTYKEY propkey,_In_ REFPROPVARIANT propvar)
DWMAPI None dwmapi.DwmShowContact(DWORD dwPointerID None,DWM_SHOWCONTACT eShowContact None)
HRESULT WINAPI cryptdlg.CertModifyCertificatesToTrust(_In_ int cCerts,_In_ PCTL_MODIFY_REQUEST rgCerts,_In_ LPCSTR szPurpose,_In_ HWND hwnd,_In_opt_ HCERTSTORE hcertstoreTrust,_In_opt_ PCCERT_CONTEXT pccertSigner)
DWORD None iphlpapi.GetTcpStatisticsEx(_Out_ PMIB_TCPSTATS pStats,_In_ DWORD dwFamily)
DWORD None iphlpapi.CreateIpNetEntry(_In_ PMIB_IPNETROW pArpEntry)
DWORD None iphlpapi.SetIfEntry(_In_ PMIB_IFROW pIfRow)
HRESULT None oleaut32.VarBoolFromI2(_In_ SHORT sIn,_Out_ VARIANT_BOOL *pboolOut)
BOOL None wintrust.CryptCATAdminCalcHashFromFileHandle(_In_ HANDLE hFile,_Inout_ DWORD *pcbHash,_In_ BYTE *pbHash,_In_ DWORD dwFlags)
HRESULT None oleaut32.VarR8FromUI8(_In_ ULONG64 ui64In,_Out_ DOUBLE *pdblOut)
HRESULT None oleaut32.VarI4FromUI2(_In_ USHORT uiIn,_Out_ LONG *plOut)
PCCERT_CONTEXT WINAPI crypt32.CertGetSubjectCertificateFromStore(_In_ HCERTSTORE hCertStore,_In_ DWORD dwCertEncodingType,_In_ PCERT_INFO pCertId)
void RPC_ENTRY rpcrt4.NdrServerCall2(PRPC_MESSAGE pRpcMsg None)
HRESULT WINAPI webservices.WsResetListener(_In_ WS_LISTENER* listener,_In_opt_ WS_ERROR* error)
BOOL WINAPI crypt32.CertAddStoreToCollection(_In_ HCERTSTORE hCollectionStore,_In_opt_ HCERTSTORE hSiblingStore,_In_ DWORD dwUpdateFlag,_In_ DWORD dwPriority)
PCERT_EXTENSION WINAPI crypt32.CertFindExtension(_In_ LPCSTR pszObjId,_In_ DWORD cExtensions,_In_ CERT_EXTENSION rgExtensions[])
BOOL WINAPI crypt32.CryptStringToBinary(_In_ LPCTSTR pszString,_In_ DWORD cchString,_In_ DWORD dwFlags,_In_ BYTE *pbBinary,_Inout_ DWORD *pcbBinary,_Out_ DWORD *pdwSkip,_Out_ DWORD *pdwFlags)
BOOL WINAPI crypt32.CryptStringToBinaryW(_In_ LPCTSTR pszString,_In_ DWORD cchString,_In_ DWORD dwFlags,_In_ BYTE *pbBinary,_Inout_ DWORD *pcbBinary,_Out_ DWORD *pdwSkip,_Out_ DWORD *pdwFlags)
BOOL WINAPI crypt32.CryptStringToBinaryA(_In_ LPCTSTR pszString,_In_ DWORD cchString,_In_ DWORD dwFlags,_In_ BYTE *pbBinary,_Inout_ DWORD *pcbBinary,_Out_ DWORD *pdwSkip,_Out_ DWORD *pdwFlags)
HRESULT None oleaut32.VarI1FromCy(_In_ CY cyIn,_Out_ CHAR *pcOut)
CLIENT_CALL_RETURN None rpcrt4.NdrClientCall3(MIDL_STUBLESS_PROXY_INFO *pProxyInfo None,unsigned long nProcNum,void *pReturnValue None)
BOOL WINAPI crypt32.CryptMsgGetAndVerifySigner(_In_ HCRYPTMSG hCryptMsg,_In_ DWORD cSignerStore,_In_opt_ HCERTSTORE *rghSignerStore,_In_ DWORD dwFlags,_Out_opt_ PCCERT_CONTEXT *ppSigner,_Inout_opt_ DWORD *pdwSignerIndex)
HRESULT WINAPI webservices.WsGetSecurityTokenProperty(_In_ WS_SECURITY_TOKEN* securityToken,_In_ WS_SECURITY_TOKEN_PROPERTY_ID id,void* value None,_In_ ULONG valueSize,_In_opt_ WS_HEAP* heap,_In_opt_ WS_ERROR* error)
NETIOAPI_API None iphlpapi.GetIpForwardTable2(_In_ ADDRESS_FAMILY Family,_Out_ PMIB_IPFORWARD_TABLE2 *Table)
HRESULT WINAPI webservices.WsWriteStartCData(_In_ WS_XML_WRITER* writer,_In_opt_ WS_ERROR* error)
HRESULT None oleaut32.VarBstrFromI2(_In_ SHORT iVal,_In_ LCID lcid,_In_ ULONG dwFlags,BSTR *pbstrOut None)
HRESULT None oleaut32.VarUI1FromStr(_In_ LPCOLESTR strIn,_In_ LCID lcid,_In_ ULONG dwFlags,_Out_ BYTE *pbOut)
HRESULT WINAPI webservices.WsCreateMessageForChannel(_In_ WS_CHANNEL* channel,const WS_MESSAGE_PROPERTY* properties,_In_ ULONG propertyCount,WS_MESSAGE** message None,_In_opt_ WS_ERROR* error)
typedef None None.BOOL(WINAPI *PFN_CRYPT_EXPORT_PUBLIC_KEY_INFO_EX2_FUNC None)
void WINAPI webservices.WsFreeHeap(_In_ WS_HEAP* heap)
typedef None None.void(WINAPI *PFN_CRYPT_OBJECT_LOCATOR_PROVIDER_RELEASE None)
void WINAPI mssign32.FreeCryptProvFromCertEx(_In_ BOOL fAcquired,_In_ HCRYPTPROV_OR_NCRYPT_KEY_HANDLE hProv,DWORD dwKeySpec None,_In_opt_ LPWSTR pwszCapiProvider,_In_ DWORD dwProviderType,_In_opt_ LPWSTR pwszTmpContainer)
BOOL WINAPI crypt32.CryptMsgClose(_In_ HCRYPTMSG hCryptMsg)
void RPC_ENTRY rpcrt4.NdrClearOutParameters(_In_ PMIDL_STUB_MESSAGE *pStubMsg,_In_ PFORMAT_STRING *pFormat,_Inout_ void *ArgAddr)
NETIO_STATUS WINAPI iphlpapi.ConvertIpv4MaskToLength(_In_ ULONG Mask,_Out_ PUINT8 MaskLength)
HRESULT None None.StartSyncAll([in] HWND hwndOwner)
HRESULT WINAPI webservices.WsResetError(_In_ WS_ERROR* error)
NETIOAPI_API None iphlpapi.GetInvertedIfStackTable(_Out_ PMIB_INVERTEDIFSTACK_TABLE *Table)
LCID None kernel32.GetUserDefaultLCID(void None None)
HCATINFO None wintrust.CryptCATAdminEnumCatalogFromHash(_In_ HCATADMIN hCatAdmin,_In_ BYTE *pbHash,_In_ DWORD cbHash,_In_ DWORD dwFlags,_In_ HCATINFO *phPrevCatInfo)
DWORD None iphlpapi.GetExtendedTcpTable(_Out_ PVOID pTcpTable,_Inout_ PDWORD pdwSize,_In_ BOOL bOrder,_In_ ULONG ulAf,_In_ TCP_TABLE_CLASS TableClass,_In_ ULONG Reserved)
DWORD WINAPI iphlpapi.AllocateAndGetUdpExTableFromStack(_Out_ PVOID *ppUDPTable,_In_ BOOL bOrder,_In_ HANDLE hHeap,_In_ DWORD dwFlags,_In_ DWORD dwFamily)
HRESULT None oleaut32.VarI2FromI8(_In_ LONG64 i64In,_Out_ SHORT *psOut)
HRESULT WINAPI webservices.WsWriteEndElement(_In_ WS_XML_WRITER* writer,_In_opt_ WS_ERROR* error)
typedef None None.BOOL(WINAPI *PFN_CMSG_CNG_IMPORT_KEY_TRANS None)
HRESULT None oleaut32.VarDecFromR8(_In_ DOUBLE dblIn,_Out_ DECIMAL *pdecOut)
HRESULT None oleaut32.VarR4FromUI8(_In_ ULONG64 ui64In,_Out_ FLOAT *pfltOut)
int None normaliz.IdnToAscii(_In_ DWORD dwFlags,_In_ LPCWSTR lpUnicodeCharStr,_In_ int cchUnicodeChar,_Out_opt_ LPWSTR lpASCIICharStr,_In_ int cchASCIIChar)
HRESULT None oleaut32.VarR4FromCy(_In_ CY cyIn,FLOAT *pfltOut None)
HRESULT None oleaut32.VarBoolFromI8(_In_ LONG64 i64In,_Out_ VARIANT_BOOL *pboolOut)
HRESULT None oleaut32.VarBoolFromI1(_In_ CHAR cIn,_Out_ VARIANT_BOOL *pboolOut)
HRESULT None oleaut32.VarI8FromI1(_In_ CHAR cIn,_Out_ LONG64 *pi64Out)
HRESULT None oleaut32.VarUI4FromStr(_In_ LPCOLESTR strIn,_In_ LCID lcid,_In_ ULONG dwFlags,_Out_ ULONG *pulOut)
HRESULT None oleaut32.VarR4FromI8(_In_ LONG64 i64In,_Out_ FLOAT *pfltOut)
HRESULT None certadm.CertSrvRestoreRegisterComplete(_In_ HCSBC hbc,_In_ HRESULT hrRestoreState)
BOOL WINAPI None.CertStoreProvDeleteCertCallback(_In_ HCERTSTOREPROV hStoreProv,_In_ PCCERT_CONTEXT pCertContext,_In_ DWORD dwFlags)
HRESULT STDMETHODCALLTYPE ole32.CStdAsyncStubBuffer_QueryInterface(_In_ IRpcStubBuffer *pthis,_In_ REFIID riid,_Out_ void **ppvObject)
HRESULT WINAPI cryptui.CertSelectionGetSerializedBlob(_In_ PCERT_SELECTUI_INPUT pcsi,_Out_ void **ppOutBuffer,_Out_ ULONG *pulOutBufferSize)
HRESULT None oleaut32.VarUI4FromDisp(_In_ IDispatch *pdispIn,_In_ LCID lcid,_Out_ ULONG *pulOut)
VOID None iphlpapi.InitializeIpForwardEntry(_Out_ PMIB_IPFORWARD_ROW2 Row)
HRESULT None oleaut32.VarUI4FromDate(_In_ DATE dateIn,_Out_ ULONG *pulOut)
HRESULT WINAPI webservices.WsReadEndpointAddressExtension(_In_ WS_XML_READER* reader,_In_ WS_ENDPOINT_ADDRESS* endpointAddress,_In_ WS_ENDPOINT_ADDRESS_EXTENSION_TYPE extensionType,_In_ WS_READ_OPTION readOption,_In_ WS_HEAP* heap,void* value None,_In_ ULONG valueSize,_In_opt_ WS_ERROR* error)
HANDLE WINAPI wintrust.CryptCATHandleFromStore(_In_ CRYPTCATSTORE *pCatStore)
HRESULT WINAPI webservices.WsGetReaderNode(_In_ WS_XML_READER *xmlReader,const WS_XML_NODE **node,_In_opt_ WS_ERROR *error)
HRESULT WINAPI webservices.WsReadChars(_In_ WS_XML_READER* reader,WCHAR* chars None,_In_ ULONG maxCharCount,_Out_ ULONG* actualCharCount,_In_opt_ WS_ERROR* error)
BOOL WINAPI None.CertStoreProvWriteCertCallback(_In_ HCERTSTOREPROV hStoreProv,_In_ PCCERT_CONTEXT pCertContext,_In_ DWORD dwFlags)
HRESULT CALLBACK None.PFN_CRYPT_XML_WRITE_CALLBACK(_Inout_ void *pvCallbackState,_In_ BYTE pbData,ULONG cbData None)
HRESULT WINAPI cryptxml.CryptXmlVerifySignature(_In_ HCRYPTXML hSignature,_In_opt_ BCRYPT_KEY_HANDLE hKey,DWORD dwFlags None)
HRESULT WINAPI webservices.WsStartReaderCanonicalization(_In_ WS_XML_READER* reader,_In_ WS_WRITE_CALLBACK writeCallback,_In_ void* writeCallbackState,const WS_XML_CANONICALIZATION_PROPERTY* properties,_In_ ULONG propertyCount,_In_opt_ WS_ERROR* error)
HRESULT None oleaut32.VarR8FromDisp(IDispatch *pdispIn None,_In_ LCID lcid,_Out_ DOUBLE *pdblOut)
HRESULT None oleaut32.VarI2FromStr(_In_ LPCOLESTR strIn,_In_ LCID lcid,_In_ ULONG dwFlags,_Out_ SHORT *psOut)
HRESULT None oleaut32.VarDecFromUI8(_In_ ULONG64 ui64In,_Out_ DECIMAL *pdecOut)
typedef None None.BOOL(WINAPI *pfnIsFileSupported None)
HRESULT None oleaut32.VarUI8FromUI1(_In_ BYTE bIn,_Out_ ULONG64 *pi64Out)
PCCERT_CONTEXT WINAPI crypt32.CertDuplicateCertificateContext(_In_ PCCERT_CONTEXT pCertContext)
BOOL WINAPI crypt32.CryptExportPKCS8(_In_ HCRYPTPROV hCryptProv,_In_ DWORD dwKeySpec,_In_ LPSTR pszPrivateKeyObjId,_In_ DWORD dwFlags,_In_opt_ void *pvAuxInfo,_Out_opt_ BYTE *pbPrivateKeyBlob,_Inout_ DWORD *pcbPrivateKeyBlob)
HRESULT None oleaut32.VarR8FromCy(_In_ CY cyIn,DOUBLE *pdblOut None)
BOOL None kernel32.EnumLanguageGroupLocales(_In_ LANGGROUPLOCALE_ENUMPROC lpLangGroupLocaleEnumProc,_In_ LGRPID LanguageGroup,_In_ DWORD dwFlags,_In_ LONG_PTR lParam)
BOOL None kernel32.EnumLanguageGroupLocalesW(_In_ LANGGROUPLOCALE_ENUMPROC lpLangGroupLocaleEnumProc,_In_ LGRPID LanguageGroup,_In_ DWORD dwFlags,_In_ LONG_PTR lParam)
BOOL None kernel32.EnumLanguageGroupLocalesA(_In_ LANGGROUPLOCALE_ENUMPROC lpLangGroupLocaleEnumProc,_In_ LGRPID LanguageGroup,_In_ DWORD dwFlags,_In_ LONG_PTR lParam)
BOOL WINAPI crypt32.CertGetIntendedKeyUsage(_In_ DWORD dwCertEncodingType,_In_ PCERT_INFO pCertInfo,_Out_ BYTE *pbKeyUsage,_In_ DWORD cbKeyUsage)
BOOL WINAPI None.CertStoreProvFreeFindCRL(_In_ HCERTSTOREPROV hStoreProv,_In_ PCCRL_CONTEXT pCrlContext,_In_ void *pvStoreProvFindInfo,_In_ DWORD dwFlags)
typedef None None.BOOL(WINAPI *PFN_CMSG_EXPORT_KEY_AGREE None)
HRESULT None oleaut32.VarUI8FromUI4(_In_ ULONG ulIn,_Out_ ULONG64 *pi64Out)
HRESULT None oleaut32.VarBoolFromUI2(_In_ USHORT uiIn,_Out_ VARIANT_BOOL *pboolOut)
HRESULT None oleaut32.VarI2FromI1(_In_ CHAR cIn,_Out_ SHORT *psOut)
HRESULT None oleaut32.VarDateFromI1(_In_ CHAR cIn,_Out_ DATE *pdateOut)
HRESULT None oleaut32.VarCyFromBool(_In_ VARIANT_BOOL boolIn,_Out_ CY *pcyOut)
LONG NTAPI ntdll.RtlIpv4StringToAddress(_In_ PCTSTR S,_In_ BOOLEAN Strict,_Out_ LPCTSTR *Terminator,_Out_ IN_ADDR *Addr)
LONG NTAPI ntdll.RtlIpv4StringToAddressW(_In_ PCTSTR S,_In_ BOOLEAN Strict,_Out_ LPCTSTR *Terminator,_Out_ IN_ADDR *Addr)
LONG NTAPI ntdll.RtlIpv4StringToAddressA(_In_ PCTSTR S,_In_ BOOLEAN Strict,_Out_ LPCTSTR *Terminator,_Out_ IN_ADDR *Addr)
BOOL WINAPI crypt32.CryptMsgVerifyCountersignatureEncoded(_In_ HCRYPTPROV_LEGACY hCryptProv,_In_ DWORD dwEncodingType,_In_ PBYTE pbSignerInfo,_In_ DWORD cbSignerInfo,_In_ PBYTE pbSignerInfoCountersignature,_In_ DWORD cbSignerInfoCountersignature,_In_ PCERT_INFO pciCountersigner)
HRESULT None oleaut32.VarUI2FromDisp(_In_ IDispatch *pdispIn,_In_ LCID lcid,_Out_ USHORT *puiOut)
HRESULT None oleaut32.VarI4FromCy(_In_ CY cyIn,_Out_ LONG *plOut)
BOOL WINAPI wintrust.OpenPersonalTrustDBDialogEx(_In_opt_ HWND hwndParent,_In_ DWORD dwFlags,_Inout_opt_ PVOID *pvReserved)
BOOL WINAPI wintrust.CryptCATCDFClose(_In_ CRYPTCATCDF *pCDF)
typedef None None.BOOL(WINAPI *PFN_CMSG_IMPORT_MAIL_LIST None)
HRESULT STDMETHODCALLTYPE ole32.CStdAsyncStubBuffer2_Connect(_In_ IRpcStubBuffer *pthis,_In_ IUnknown *pUnkServer)
ULONG WINAPI iphlpapi.LookupPersistentUdpPortReservation(_In_ USHORT StartPort,_In_ USHORT NumberOfPorts,_Out_ PULONG64 Token)
HRESULT WINAPI webservices.WsGetMissingMetadataDocumentAddress(_In_ WS_METADATA* metadata,WS_ENDPOINT_ADDRESS** address None,_In_opt_ WS_ERROR* error)
HANDLE None wintrust.CryptCATOpen(_In_ LPWSTR pwszFileName,_In_ DWORD fdwOpenFlags,_In_ HCRYPTPROV hProv,_In_ DWORD dwPublicVersion,_In_ DWORD dwEncodingType)
HRESULT WINAPI webservices.WsAlloc(_In_ WS_HEAP* heap,_In_ SIZE_T size,void** ptr None,_In_opt_ WS_ERROR* error)
HRESULT WINAPI webservices.WsGetErrorProperty(_In_ WS_ERROR* error,_In_ WS_ERROR_PROPERTY_ID id,void* buffer None,_In_ ULONG bufferSize)
BOOL WINAPI None.CryptGetLocalKeyLimits(_In_ ALG_ID algId,_In_ DWORD dwFlags,_Out_ PCRYPT_KEY_LIMITS pLimits,_Inout_ LPDWORD cbLimitLength)
LONG NTAPI ntdll.RtlIpv6StringToAddress(_In_ PCTSTR S,_Out_ PCTSTR *Terminator,_Out_ IN6_ADDR *Addr)
LONG NTAPI ntdll.RtlIpv6StringToAddressW(_In_ PCTSTR S,_Out_ PCTSTR *Terminator,_Out_ IN6_ADDR *Addr)
LONG NTAPI ntdll.RtlIpv6StringToAddressA(_In_ PCTSTR S,_Out_ PCTSTR *Terminator,_Out_ IN6_ADDR *Addr)
PCCRL_CONTEXT WINAPI crypt32.CertGetCRLFromStore(_In_ HCERTSTORE hCertStore,_In_opt_ PCCERT_CONTEXT pIssuerContext,_In_ PCCRL_CONTEXT pPrevCrlContext,_Inout_ DWORD *pdwFlags)
BOOL WINAPI advapi32.CryptGetHashParam(_In_ HCRYPTHASH hHash,_In_ DWORD dwParam,_Out_ BYTE *pbData,_Inout_ DWORD *pdwDataLen,_In_ DWORD dwFlags)
HRESULT None oleaut32.VarBstrFromDisp(IDispatch *pdispIn None,_In_ LCID lcid,_In_ ULONG dwFlags,_Out_ BSTR *pbstrOut)
HRESULT None oleaut32.VarR4FromR8(_In_ DOUBLE dblIn,_Out_ FLOAT *pfltOut)
void WINAPI webservices.WsFreeReader(_In_ WS_XML_READER* reader)
BOOL WINAPI advapi32.CryptDuplicateKey(_In_ HCRYPTKEY hKey,_In_ DWORD *pdwReserved,_In_ DWORD dwFlags,_Out_ HCRYPTKEY *phKey)
HRESULT None oleaut32.VarI4FromDisp(IDispatch *pdispIn None,_In_ LCID lcid,_Out_ LONG *plOut)
DWORD None iphlpapi.GetIpForwardTable(_Out_ PMIB_IPFORWARDTABLE pIpForwardTable,_Inout_ PULONG pdwSize,_In_ BOOL bOrder)
BOOL WINAPI cryptnet.CryptGetTimeValidObject(_In_ LPCSTR pszTimeValidOid,_In_ LPVOID pvPara,_In_ PCCERT_CONTEXT pIssuer,_In_opt_ LPFILETIME pftValidFor,_In_ DWORD dwFlags,_In_ DWORD dwTimeout,_Out_opt_ LPVOID *ppvObject,_In_opt_ PCRYPT_CREDENTIALS pCredentials,_Inout_opt_ PCRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO pExtraInfo)
HRESULT None oleaut32.VarI1FromI2(_In_ SHORT uiIn,_Out_ CHAR *pcOut)
HRESULT None oleaut32.VarBoolFromCy(_In_ CY cyIn,_Out_ VARIANT_BOOL *pboolOut)
HRESULT None oleaut32.VarUI1FromR8(_In_ DOUBLE dblIn,_Out_ BYTE *pbOut)
HRESULT WINAPI webservices.WsAbandonCall(_In_ WS_SERVICE_PROXY* serviceProxy,_In_ ULONG callId,_In_opt_ WS_ERROR* error)
NDR_SCONTEXT RPC_ENTRY rpcrt4.NdrContextHandleInitialize(PMIDL_STUB_MESSAGE pStubMsg None,PFORMAT_STRING pFormat None)
BOOL WINAPI crypt32.CryptSIPPutSignedDataMsg(_In_ SIP_SUBJECTINFO *pSubjectInfo,_In_ DWORD dwEncodingType,_Out_ DWORD *pdwIndex,_In_ DWORD cbSignedDataMsg,_In_ BYTE *pbSignedDataMsg)
HRESULT None oleaut32.VarUI4FromUI8(_In_ ULONG64 ui64In,_Out_ ULONG *plOut)
BOOL WINAPI crypt32.CryptHashCertificate2(_In_ LPCWSTR pwszCNGHashAlgid,_In_ DWORD dwFlags,_Reserved_ void *pvReserved,_In_ BYTE *pbEncoded,_In_ DWORD cbEncoded,_Out_ BYTE *pbComputedHash,_Inout_ DWORD *pcbComputedHash)
HRESULT None oleaut32.VarI2FromBool(_In_ VARIANT_BOOL boolIn,_Out_ SHORT *psOut)
BOOL WINAPI crypt32.CryptUnprotectData(_In_ DATA_BLOB *pDataIn,_Out_opt_ LPWSTR *ppszDataDescr,_In_opt_ DATA_BLOB *pOptionalEntropy,_Reserved_ PVOID pvReserved,_In_opt_ CRYPTPROTECT_PROMPTSTRUCT *pPromptStruct,_In_ DWORD dwFlags,_Out_ DATA_BLOB *pDataOut)
HRESULT None oleaut32.VarI2FromR8(_In_ DOUBLE dblIn,_Out_ SHORT *psOut)
BOOL None iphlpapi.IcmpCloseHandle(_In_ HANDLE IcmpHandle)
DWORD None iphlpapi.AddIPAddress(_In_ IPAddr Address,_In_ IPMask IpMask,_In_ DWORD IfIndex,_Out_ PULONG NTEContext,_Out_ PULONG NTEInstance)
HRESULT None oleaut32.VarDateFromR4(_In_ FLOAT fltIn,_Out_ DATE *pdateOut)
DWORD WINAPI crypt32.CertNameToStr(_In_ DWORD dwCertEncodingType,_In_ PCERT_NAME_BLOB pName,_In_ DWORD dwStrType,_Out_ LPTSTR psz,_In_ DWORD csz)
DWORD WINAPI crypt32.CertNameToStrW(_In_ DWORD dwCertEncodingType,_In_ PCERT_NAME_BLOB pName,_In_ DWORD dwStrType,_Out_ LPTSTR psz,_In_ DWORD csz)
DWORD WINAPI crypt32.CertNameToStrA(_In_ DWORD dwCertEncodingType,_In_ PCERT_NAME_BLOB pName,_In_ DWORD dwStrType,_Out_ LPTSTR psz,_In_ DWORD csz)
HRESULT None oleaut32.VarI8FromUI2(_In_ USHORT uiIn,_Out_ LONG64 *pi64Out)
HRESULT None oleaut32.VarUI8FromDisp(_In_ IDispatch *pdispIn,_In_ LCID lcid,_Out_ ULONG64 *pi64Out)
HRESULT None oleaut32.VarI4FromR4(_In_ FLOAT fltIn,_Out_ LONG *plOut)
HRESULT None oleaut32.VarI8FromI2(_In_ SHORT sIn,_Out_ LONG64 *pi64Out)
HRESULT None oleaut32.VarR8FromI2(_In_ SHORT sIn,_Out_ DOUBLE *pdblOut)
HRESULT WINAPI webservices.WsGetWriterPosition(_In_ WS_XML_WRITER* writer,_Out_ WS_XML_NODE_POSITION* *nodePosition,_In_opt_ WS_ERROR* error)
HRESULT WINAPI webservices.WsVerifyXmlNCName(const WCHAR* ncNameChars,_In_ ULONG ncNameCharCount,_In_opt_ WS_ERROR* error)
HRESULT None oleaut32.VarUI2FromDate(_In_ DATE dateIn,_Out_ USHORT *puiOut)
HRESULT None oleaut32.VarCyFromUI4(_In_ ULONG ulIn,_Out_ CY *pcyOut)
HRESULT WINAPI webservices.WsCopyNode(_In_ WS_XML_WRITER* writer,_In_ WS_XML_READER* reader,_In_opt_ WS_ERROR* error)
HRESULT None oleaut32.VarR4FromI2(_In_ SHORT sIn,_Out_ FLOAT *pfltOut)
HRESULT None oleaut32.VarUI2FromUI4(_In_ ULONG ulIn,_Out_ USHORT *puiOut)
HRESULT None oleaut32.VarDateFromCy(_In_ CY cyIn,_Out_ DATE *pdateOut)
BOOL None wintrust.CryptCATAdminReleaseCatalogContext(_In_ HCATADMIN hCatAdmin,_In_ HCATINFO hCatInfo,_In_ DWORD dwFlags)
HRESULT WINAPI webservices.WsResetChannel(_In_ WS_CHANNEL* channel,_In_opt_ WS_ERROR* error)
HRESULT WINAPI webservices.WsWriteXmlBuffer(_In_ WS_XML_WRITER* writer,_In_ WS_XML_BUFFER* xmlBuffer,_In_opt_ WS_ERROR* error)
HRESULT None oleaut32.VarUI2FromUI8(_In_ ULONG64 i64In,_Out_ USHORT *puiOut)
BOOL WINAPI crypt32.CryptMsgVerifyCountersignatureEncodedEx(_In_opt_ HCRYPTPROV_LEGACY hCryptProv,_In_ DWORD dwEncodingType,_In_ PBYTE pbSignerInfo,_In_ DWORD cbSignerInfo,_In_ PBYTE pbSignerInfoCountersignature,_In_ DWORD cbSignerInfoCountersignature,_In_ DWORD dwSignerType,_In_ void *pvSigner,_Reserved_ DWORD dwFlags,_Reserved_ void *pvExtra)
ULONG None None.RKeyOpenKeyService(_In_ LPSTR pszMachineName,_In_ KEYSVC_TYPE OwnerType,_In_ LPWSTR pwszOwnerName,_In_ void *pAuthentication,_Inout_ void *pReserved,_Out_ KEYSVCC_HANDLE *phKeySvcCli)
BOOL WINAPI crypt32.CertIsRDNAttrsInCertificateName(_In_ DWORD dwCertEncodingType,_In_ DWORD dwFlags,_In_ PCERT_NAME_BLOB pCertName,_In_ PCERT_RDN pRDN)
HRESULT None oleaut32.VarR4FromDisp(IDispatch *pdispIn None,_In_ LCID lcid,_Out_ FLOAT *pfltOut)
typedef None None.void(WINAPI *PFN_CRYPT_OBJECT_LOCATOR_PROVIDER_FREE None)
HRESULT None oleaut32.VarBstrFromUI2(_In_ USHORT uiIn,_In_ LCID lcid,_In_ ULONG dwFlags,_Out_ BSTR *pbstrOut)
BOOL WINAPI cryptnet.CryptRetrieveObjectByUrl(_In_ LPCTSTR pszUrl,_In_ LPCSTR pszObjectOid,_In_ DWORD dwRetrievalFlags,_In_ DWORD dwTimeout,_Out_ LPVOID *ppvObject,_In_ HCRYPTASYNC hAsyncRetrieve,_In_opt_ PCRYPT_CREDENTIALS pCredentials,_In_opt_ LPVOID pvVerify,_In_ PCRYPT_RETRIEVE_AUX_INFO pAuxInfo)
BOOL WINAPI cryptnet.CryptRetrieveObjectByUrlW(_In_ LPCTSTR pszUrl,_In_ LPCSTR pszObjectOid,_In_ DWORD dwRetrievalFlags,_In_ DWORD dwTimeout,_Out_ LPVOID *ppvObject,_In_ HCRYPTASYNC hAsyncRetrieve,_In_opt_ PCRYPT_CREDENTIALS pCredentials,_In_opt_ LPVOID pvVerify,_In_ PCRYPT_RETRIEVE_AUX_INFO pAuxInfo)
BOOL WINAPI cryptnet.CryptRetrieveObjectByUrlA(_In_ LPCTSTR pszUrl,_In_ LPCSTR pszObjectOid,_In_ DWORD dwRetrievalFlags,_In_ DWORD dwTimeout,_Out_ LPVOID *ppvObject,_In_ HCRYPTASYNC hAsyncRetrieve,_In_opt_ PCRYPT_CREDENTIALS pCredentials,_In_opt_ LPVOID pvVerify,_In_ PCRYPT_RETRIEVE_AUX_INFO pAuxInfo)
typedef None None.void(WINAPI *PFN_CRYPT_OBJECT_LOCATOR_PROVIDER_FREE_IDENTIFIER None)
PCCERT_CONTEXT WINAPI None.CryptGetSignerCertificateCallback(_In_ void *pvGetArg,_In_ DWORD dwCertEncodingType,_In_ PCERT_INFO pSignerId,_In_ HCERTSTORE hMsgCertStore)
HRESULT None oleaut32.VarCyFromUI1(_In_ BYTE bIn,_Out_ CY *pcyOut)
HRESULT None shell32.GetCategory([out] KF_CATEGORY *pCategory)
BOOL WINAPI crypt32.CryptSIPGetSignedDataMsg(_In_ SIP_SUBJECTINFO *pSubjectInfo,_Out_ DWORD *pdwEncodingType,_In_ DWORD dwIndex,_Inout_ DWORD *pcbSignedDataMsg,_Out_ BYTE *pbSignedDataMsg)
HRESULT None oleaut32.VarR8FromI4(_In_ LONG lIn,_Out_ DOUBLE *pdblOut)
HRESULT None oleaut32.VarDateFromUI8(_In_ ULONG64 ui64In,_Out_ DATE *pdateOut)
HRESULT WINAPI webservices.WsResetMetadata(_In_ WS_METADATA* metadata,_In_opt_ WS_ERROR* error)
HRESULT None oleaut32.VarI1FromStr(_In_ LPCOLESTR strIn,_In_ LCID lcid,_In_ ULONG dwFlags,_Out_ CHAR *pcOut)
HRESULT None oleaut32.VarI2FromDate(_In_ DATE dateIn,_Out_ SHORT *psOut)
typedef None None.BOOL(WINAPI *PFN_CMSG_IMPORT_KEY_AGREE None)
HRESULT None oleaut32.VarDecFromBool(_In_ VARIANT_BOOL boolIn,_Out_ DECIMAL *pdecOut)
PIP_ADAPTER_ORDER_MAP WINAPI iphlpapi.GetAdapterOrderMap(void None None)
BOOL WINAPI advapi32.CryptDuplicateHash(_In_ HCRYPTHASH hHash,_In_ DWORD *pdwReserved,_In_ DWORD dwFlags,_Out_ HCRYPTHASH *phHash)
BOOL WINAPI None.PFNCMFILTERPROC(_In_ PCCERT_CONTEXT pCertContext,_In_ DWORD lCustData,_In_ DWORD dwFlags,_In_ DWORD dwDisplayWell)
HRESULT None oleaut32.VarUI4FromI4(_In_ LONG lIn,_Out_ ULONG *pulOut)
BOOL WINAPI advapi32.CryptGenKey(_In_ HCRYPTPROV hProv,_In_ ALG_ID Algid,_In_ DWORD dwFlags,_Out_ HCRYPTKEY *phKey)
HRESULT None oleaut32.VarR4FromStr(_In_ LPCOLESTR strIn,_In_ LCID lcid,_In_ ULONG dwFlags,_Out_ FLOAT *pfltOut)
PCCRL_CONTEXT WINAPI crypt32.CertEnumCRLsInStore(_In_ HCERTSTORE hCertStore,_In_ PCCRL_CONTEXT pPrevCrlContext)
HRESULT None oleaut32.VarI1FromUI4(_In_ ULONG ulIn,_Out_ CHAR *pcOut)
NETIOAPI_API None iphlpapi.NotifyTeredoPortChange(_In_ PTEREDO_PORT_CHANGE_CALLBACK Callback,_In_ PVOID CallerContext,_In_ BOOLEAN InitialNotification,_Inout_ HANDLE *NotificationHandle)
NET_API_STATUS None netapi32.NetGroupGetUsers(_In_ LPCWSTR servername,_In_ LPCWSTR groupname,_In_ DWORD level,_Out_ LPBYTE *bufptr,_In_ DWORD prefmaxlen,_Out_ LPDWORD entriesread,_Out_ LPDWORD totalentries,_Inout_ PDWORD_PTR ResumeHandle)
DWORD WINAPI crypt32.CertGetNameString(_In_ PCCERT_CONTEXT pCertContext,_In_ DWORD dwType,_In_ DWORD dwFlags,_In_ void *pvTypePara,_Out_ LPTSTR pszNameString,_In_ DWORD cchNameString)
DWORD WINAPI crypt32.CertGetNameStringW(_In_ PCCERT_CONTEXT pCertContext,_In_ DWORD dwType,_In_ DWORD dwFlags,_In_ void *pvTypePara,_Out_ LPTSTR pszNameString,_In_ DWORD cchNameString)
DWORD WINAPI crypt32.CertGetNameStringA(_In_ PCCERT_CONTEXT pCertContext,_In_ DWORD dwType,_In_ DWORD dwFlags,_In_ void *pvTypePara,_Out_ LPTSTR pszNameString,_In_ DWORD cchNameString)
typedef None None.HRESULT(WINAPI *CryptXmlDllSignData None)
HRESULT WINAPI cryptxml.CryptXmlGetTransforms(_Out_ PCRYPT_XML_TRANSFORM_CHAIN_CONFIG **pConfig)
BOOL None kernel32.RtlIsValidLocaleName(_In_ LPCWSTR LocaleName,_In_ ULONG Flags)
HRESULT None oleaut32.VarI8FromCy(_In_ CY cyIn,_Out_ LONG64 *pi64Out)
HRESULT None oleaut32.VarBoolFromStr(_In_ LPCOLESTR strIn,_In_ LCID lcid,_In_ ULONG dwFlags,_Out_ VARIANT_BOOL *pboolOut)
BOOL None None.CertStoreProvFreeFindCTL(_In_ HCERTSTOREPROV hStoreProv,_In_ PCCTL_CONTEXT pCtlContext,_In_ void *pvStoreProvFindInfo,_In_ DWORD dwFlags)
HRESULT None None.SetCurrentFolderFlags([in] DWORD dwMask,[in] DWORD dwFlags)
LONG NTAPI ntdll.RtlIpv6StringToAddressEx(_In_ PCTSTR AddressString,_Out_ IN6_ADDR *Address,_Out_ PULONG ScopeId,_Out_ PUSHORT Port)
LONG NTAPI ntdll.RtlIpv6StringToAddressExW(_In_ PCTSTR AddressString,_Out_ IN6_ADDR *Address,_Out_ PULONG ScopeId,_Out_ PUSHORT Port)
LONG NTAPI ntdll.RtlIpv6StringToAddressEx(_In_ PCTSTR AddressString,_Out_ IN6_ADDR *Address,_Out_ PULONG ScopeId,_Out_ PUSHORT Port)
HRESULT WINAPI webservices.WsGetPolicyProperty(_In_ WS_POLICY* policy,_In_ WS_POLICY_PROPERTY_ID id,void* value None,_In_ ULONG valueSize,_In_opt_ WS_ERROR* error)
BOOL None kernel32.EnumSystemGeoID(_In_ GEOCLASS GeoClass,_In_ GEOID ParentGeoId,_In_ GEO_ENUMPROC lpGeoEnumProc)
BOOL None wintrust.WintrustRemoveActionID(_In_ GUID *pgActionID)
BOOL CALLBACK None.EnumTimeFormatsProcEx(_In_ LPWSTR lpTimeFormatString,_In_ LPARAM lParam)
void WINAPI webservices.WsFreeChannel(_In_ WS_CHANNEL* channel)
HCRYPTMSG WINAPI crypt32.CryptMsgOpenToDecode(_In_ DWORD dwMsgEncodingType,_In_ DWORD dwFlags,_In_ DWORD dwMsgType,_In_ HCRYPTPROV_LEGACY hCryptProv,_In_ PCERT_INFO pRecipientInfo,_In_opt_ PCMSG_STREAM_INFO pStreamInfo)
BOOL WINAPI crypt32.CryptVerifyMessageHash(_In_ PCRYPT_HASH_MESSAGE_PARA pHashPara,_In_ BYTE *pbHashedBlob,_In_ DWORD cbHashedBlob,_Out_ BYTE *pbToBeHashed,_Inout_ DWORD *pcbToBeHashed,_Out_opt_ BYTE *pbComputedHash,_Inout_opt_ DWORD *pcbComputedHash)
HRESULT None oleaut32.VarI1FromDate(_In_ DATE dateIn,_Out_ CHAR *pcOut)
HRESULT None oleaut32.VarI1FromR4(_In_ FLOAT fltIn,_Out_ CHAR *pcOut)
BOOL WINAPI crypt32.CryptUnregisterOIDInfo(_In_ PCCRYPT_OID_INFO pInfo)
HRESULT None oleaut32.VarUI4FromBool(_In_ VARIANT_BOOL boolIn,_Out_ ULONG *pulOut)
HRESULT None oleaut32.VarR8FromStr(_In_ LPCOLESTR strIn,_In_ LCID lcid,_In_ ULONG dwFlags,_Out_ DOUBLE *pdblOut)
HRESULT None oleaut32.VarUI4FromCy(_In_ CY cyIn,_Out_ ULONG *pulOut)
HRESULT None oleaut32.VarI1FromUI1(_In_ BYTE bIn,_Out_ CHAR *pcOut)
HCERT_SERVER_OCSP_RESPONSE WINAPI crypt32.CertOpenServerOcspResponse(_In_ PCCERT_CHAIN_CONTEXT pChainContext,_In_ DWORD dwFlags,_Reserved_ LPVOID pvReserved)
HRESULT None oleaut32.VarI2FromI4(_In_ LONG lIn,_Out_ SHORT *psOut)
HRESULT STDMETHODCALLTYPE ole32.CStdStubBuffer2_Connect(_In_ IRpcStubBuffer *pthis,_In_ IUnknown *pUnkServer)
HRESULT WINAPI cryptxml.CryptXmlDigestReference(_In_ HCRYPTXML hReference,DWORD dwFlags None,_In_ CRYPT_XML_DATA_PROVIDER *pDataProviderIn)
BOOL WINAPI cryptui.CryptUIDlgViewCertificate(_In_ PCCRYPTUI_VIEWCERTIFICATE_STRUCTW pCertViewInfo,_Out_ BOOL *pfPropertiesChanged)
BOOL WINAPI cryptui.CryptUIDlgViewCertificateW(_In_ PCCRYPTUI_VIEWCERTIFICATE_STRUCTW pCertViewInfo,_Out_ BOOL *pfPropertiesChanged)
BOOL WINAPI cryptui.CryptUIDlgViewCertificateA(_In_ PCCRYPTUI_VIEWCERTIFICATE_STRUCTW pCertViewInfo,_Out_ BOOL *pfPropertiesChanged)
BOOL WINAPI crypt32.CertCompareCertificateName(_In_ DWORD dwCertEncodingType,_In_ PCERT_NAME_BLOB pCertName1,_In_ PCERT_NAME_BLOB pCertName2)
HRESULT None oleaut32.VarUI8FromBool(_In_ VARIANT_BOOL boolIn,_Out_ ULONG64 *pi64Out)
BOOL WINAPI cryptdlg.CertSelectCertificate(_Inout_ PCERT_SELECT_STRUCT_W pCertSelectInfo)
PCCERT_CONTEXT WINAPI crypt32.CertCreateSelfSignCertificate(_In_opt_ HCRYPTPROV_OR_NCRYPT_KEY_HANDLE hCryptProvOrNCryptKey,_In_ PCERT_NAME_BLOB pSubjectIssuerBlob,_In_ DWORD dwFlags,_In_opt_ PCRYPT_KEY_PROV_INFO pKeyProvInfo,_In_opt_ PCRYPT_ALGORITHM_IDENTIFIER pSignatureAlgorithm,_In_opt_ PSYSTEMTIME pStartTime,_In_opt_ PSYSTEMTIME pEndTime,PCERT_EXTENSIONS pExtensions None)
PCCTL_CONTEXT WINAPI crypt32.CertEnumCTLsInStore(_In_ HCERTSTORE hCertStore,_In_ PCCTL_CONTEXT pPrevCtlContext)
LONG WINAPI crypt32.CertVerifyCRLTimeValidity(_In_ LPFILETIME pTimeToVerify,_In_ PCRL_INFO pCrlInfo)
HRESULT None oleaut32.VarI2FromUI1(_In_ BYTE bIn,_Out_ SHORT *psOut)
HRESULT None shell32.GetCategory([out] KF_CATEGORY *pCategory)
HRESULT None oleaut32.VarDateFromI8(_In_ LONG64 i64In,_Out_ DATE *pdateOut)
BOOL WINAPI cryptui.CryptUIDlgCertMgr(_In_ PCCRYPTUI_CERT_MGR_STRUCT pCryptUICertMgr)
HRESULT None oleaut32.VarUI2FromR8(_In_ DOUBLE dblIn,USHORT *puiOut None)
HRESULT None oleaut32.VarBstrFromR8(_In_ DOUBLE dblIn,_In_ LCID lcid,_In_ ULONG dwFlags,_Out_ BSTR *pbstrOut)
BOOL WINAPI crypt32.CertVerifyCertificateChainPolicy(_In_ LPCSTR pszPolicyOID,_In_ PCCERT_CHAIN_CONTEXT pChainContext,_In_ PCERT_CHAIN_POLICY_PARA pPolicyPara,_Inout_ PCERT_CHAIN_POLICY_STATUS pPolicyStatus)
HRESULT None oleaut32.VarI8FromUI4(_In_ ULONG ulIn,_Out_ LONG64 *pi64Out)
HRESULT None oleaut32.VarUI1FromI8(_In_ LONG64 i64In,_Out_ BYTE *pbOut)
HRESULT None oleaut32.VarDateFromUI1(_In_ BYTE bIn,_Out_ DATE *pdateOut)
HRESULT None oleaut32.VarUI8FromI8(_In_ LONG64 ui64In,_Out_ ULONG64 *pi64Out)
HRESULT None oleaut32.VarI8FromUI1(_In_ BYTE bIn,_Out_ LONG64 *pi64Out)
typedef None None.BOOL(WINAPI *PFN_CMSG_EXPORT_KEY_TRANS None)
PCCRL_CONTEXT WINAPI crypt32.CertDuplicateCRLContext(_In_ PCCRL_CONTEXT pCrlContext)
HRESULT None oleaut32.VarI1FromI8(_In_ LONG64 i64In,_Out_ CHAR *pcOut)
BOOL WINAPI crypt32.CertEnumSystemStore(_In_ DWORD dwFlags,_In_opt_ void *pvSystemStoreLocationPara,_In_ void *pvArg,_In_ PFN_CERT_ENUM_SYSTEM_STORE pfnEnum)
LONG WINAPI wintrust.WTHelperGetFileHash(_In_ LPCWSTR pwszFilename,_In_ DWORD dwFlags,_Inout_opt_ PVOID pvReserved,_Out_opt_ BYTE *pbFileHash,_Inout_opt_ DWORD *pcbFileHash,_Out_opt_ ALG_ID *pHashAlgid)
BOOL WINAPI None.CertStoreProvFindCRL(_In_ HCERTSTOREPROV hStoreProv,_In_ PCCERT_STORE_PROV_FIND_INFO pFindInfo,_In_ PCCRL_CONTEXT pPrevCrlContext,_In_ DWORD dwFlags,_Inout_ void **ppvStoreProvFindInfo,_Out_ PCCRL_CONTEXT *ppProvCrlContext)
HRESULT None certadm.CertSrvBackupEnd(_In_ HCSBC hbc)
HRESULT None oleaut32.VarUI4FromI2(_In_ SHORT uiIn,_Out_ ULONG *pulOut)
BOOL WINAPI crypt32.CertGetValidUsages(_In_ DWORD cCerts,_In_ PCCERT_CONTEXT *rghCerts,_Out_ int *cNumOIDs,_Out_ LPSTR *rghOIDs,_Inout_ DWORD *pcbOIDs)
DWORD None iphlpapi.SetTcpEntry(_In_ PMIB_TCPROW pTcpRow)
void WINAPI wintrust.WintrustSetDefaultIncludePEPageHashes(_In_ BOOL fIncludePEPageHashes)
HRESULT None oleaut32.VarDateFromStr(_In_ LPCOLESTR strIn,_In_ LCID lcid,_In_ ULONG dwFlags,_Out_ DATE *pdateOut)
HRESULT None oleaut32.VarI2FromR4(_In_ FLOAT fltIn,_Out_ SHORT *psOut)
HRESULT None oleaut32.VarDecFromI8(_In_ LONG64 i64In,_Out_ DECIMAL *pdecOut)
HRESULT None oleaut32.SetVarConversionLocaleSetting(_In_ ULONG dwFlags)
HRESULT None None.Advise([in] IUnknown *pWindow,[in] IFrameworkInputPaneHandler *pHandler,[out] DWORD *pdwCookie)
HRESULT None oleaut32.VarBstrFromDate(_In_ DATE dateIn,_In_ LCID lcid,_In_ ULONG dwFlags,_Out_ BSTR *pbstrOut)
HRESULT None certadm.CertSrvBackupClose(_In_ HCSBC hbc)
typedef None None.BOOL(WINAPI *PFN_CMSG_IMPORT_KEY_TRANS None)
void WINAPI kernel32.LeaveCriticalSection(_Inout_ LPCRITICAL_SECTION lpCriticalSection)
HRESULT None oleaut32.VarI4FromUI1(_In_ BYTE bIn,_Out_ LONG *plOut)
HRESULT None oleaut32.VarUI8FromDate(_In_ DATE dateIn,_Out_ ULONG64 *pi64Out)
HRESULT None oleaut32.VarI8FromBool(_In_ VARIANT_BOOL boolIn,_Out_ LONG64 *pi64Out)
DWORD None iphlpapi.Icmp6ParseReplies(_In_ LPVOID ReplyBuffer,_In_ DWORD ReplySize)
HRESULT WINAPI None.WsSetAutoFail(_In_ ULONG count,_In_opt_ WS_ERROR* error)
BOOLEAN None advapi32.RtlGenRandom(_Out_ PVOID RandomBuffer,_In_ ULONG RandomBufferLength)
CLIENT_CALL_RETURN None rpcrt4.NdrAsyncClientCall2(_In_ PMIDL_STUB_DESC pStubDescriptor,_In_ PFORMAT_STRING pFormat,_Inout_ ... None)
HRESULT None oleaut32.VarR8FromI8(_In_ LONG64 i64In,_Out_ DOUBLE *pdblOut)
HRESULT None oleaut32.VarUI4FromR4(_In_ FLOAT fltIn,_Out_ ULONG *pulOut)
HRESULT None oleaut32.VarI1FromI4(_In_ LONG lIn,_Out_ CHAR *pcOut)
BOOL WINAPI advapi32.CryptDestroyKey(_In_ HCRYPTKEY hKey)
BOOL WINAPI advapi32.CryptGetDefaultProvider(_In_ DWORD dwProvType,_In_ DWORD *pdwReserved,_In_ DWORD dwFlags,_Out_ LPTSTR pszProvName,_Inout_ DWORD *pcbProvName)
BOOL WINAPI advapi32.CryptGetDefaultProviderW(_In_ DWORD dwProvType,_In_ DWORD *pdwReserved,_In_ DWORD dwFlags,_Out_ LPTSTR pszProvName,_Inout_ DWORD *pcbProvName)
BOOL WINAPI advapi32.CryptGetDefaultProviderA(_In_ DWORD dwProvType,_In_ DWORD *pdwReserved,_In_ DWORD dwFlags,_Out_ LPTSTR pszProvName,_Inout_ DWORD *pcbProvName)
HRESULT None oleaut32.VarDateFromUI4(_In_ ULONG ulIn,_Out_ DATE *pdateOut)
BOOL WINAPI None.CertStoreProvWriteCTL(_In_ HCERTSTOREPROV hStoreProv,_In_ PCCTL_CONTEXT pCtlContext,_In_ DWORD dwFlags)
HRESULT None oleaut32.VarCyFromR8(_In_ DOUBLE dblIn,_Out_ CY *pcyOut)
HRESULT None oleaut32.VarUI8FromI2(_In_ SHORT sIn,_Out_ ULONG64 *pi64Out)
BOOL WINAPI wintrust.WTHelperCertIsSelfSigned(_In_ DWORD dwEncoding,_In_ CERT_INFO *pCert)
PCCERT_CONTEXT WINAPI cryptui.CryptUIDlgSelectCertificate(_In_ PCCRYPTUI_SELECTCERTIFICATE_STRUCT pcsc)
PCCERT_CONTEXT WINAPI cryptui.CryptUIDlgSelectCertificateW(_In_ PCCRYPTUI_SELECTCERTIFICATE_STRUCT pcsc)
PCCERT_CONTEXT WINAPI cryptui.CryptUIDlgSelectCertificateA(_In_ PCCRYPTUI_SELECTCERTIFICATE_STRUCT pcsc)
void WINAPI webservices.WsFreeMessage(_In_ WS_MESSAGE* message)
HRESULT None oleaut32.VarUI2FromBool(_In_ VARIANT_BOOL boolIn,_Out_ USHORT *puiOut)
HRESULT None oleaut32.VarDecFromI1(_In_ CHAR cIn,_Out_ DECIMAL *pdecOut)
HRESULT None oleaut32.VarDecFromCy(_In_ CY cyIn,_Out_ DECIMAL *pdecOut)
PCCERT_CONTEXT WINAPI crypt32.CertGetIssuerCertificateFromStore(_In_ HCERTSTORE hCertStore,_In_ PCCERT_CONTEXT pSubjectContext,_In_opt_ PCCERT_CONTEXT pPrevIssuerContext,_Inout_ DWORD *pdwFlags)
HRESULT WINAPI mssign32.PvkGetCryptProv(_In_ HWND hwnd,_In_ LPCWSTR pwszCaption,_In_ LPCWSTR pwszCapiProvider,_In_ DWORD dwProviderType,_In_ LPCWSTR pwszPvkFile,_In_ LPCWSTR pwszKeyContainerName,_Out_ DWORD *pdwKeySpec,_Out_opt_ LPWSTR *ppwszTmpContainer,_Out_ HCRYPTPROV *phCryptProv)
BOOL None None.CertChainFindByIssuerCallback(_In_ PCCERT_CONTEXT pCert,_In_ void *pvFindArg)
BOOL CALLBACK None.EnumCalendarInfoProcEx(_In_ LPTSTR lpCalendarInfoString,_In_ CALID Calendar)
BOOL CALLBACK None.EnumCalendarInfoProcExW(_In_ LPTSTR lpCalendarInfoString,_In_ CALID Calendar)
BOOL CALLBACK None.EnumCalendarInfoProcExA(_In_ LPTSTR lpCalendarInfoString,_In_ CALID Calendar)
BOOL WINAPI crypt32.CryptRegisterOIDInfo(_In_ PCCRYPT_OID_INFO pInfo,_In_ DWORD dwFlags)
NTSTATUS WINAPI bcrypt.BCryptOpenAlgorithmProvider(_Out_ BCRYPT_ALG_HANDLE *phAlgorithm,_In_ LPCWSTR pszAlgId,_In_ LPCWSTR pszImplementation,_In_ DWORD dwFlags)
HRESULT None oleaut32.VarR4FromI1(_In_ CHAR cIn,_Out_ FLOAT *pfltOut)
int None kernel32.FindNLSStringEx(_In_opt_ LPCWSTR lpLocaleName,_In_ DWORD dwFindNLSStringFlags,_In_ LPCWSTR lpStringSource,_In_ int cchSource,_In_ LPCWSTR lpStringValue,_In_ int cchValue,_Out_opt_ LPINT pcchFound,_In_opt_ LPNLSVERSIONINFO lpVersionInformation,_In_opt_ LPVOID lpReserved,_In_opt_ LPARAM sortHandle)
HRESULT None oleaut32.VarUI1FromI2(_In_ SHORT sIn,_Out_ BYTE *pbOut)
HRESULT None oleaut32.VarBstrFromI4(_In_ LONG lIn,_In_ LCID lcid,_In_ ULONG dwFlags,_Out_ BSTR *pbstrOut)
HRESULT None oleaut32.VarUI2FromCy(_In_ CY cyIn,_Out_ USHORT *puiOut)
NETIOAPI_API None iphlpapi.GetIfTable2(_Out_ PMIB_IF_TABLE2 *Table)
BOOL WINAPI crypt32.CertFreeCRLContext(_In_ PCCRL_CONTEXT pCrlContext)
PCCERT_SERVER_OCSP_RESPONSE_CONTEXT WINAPI crypt32.CertGetServerOcspResponseContext(_In_ HCERT_SERVER_OCSP_RESPONSE hServerOcspResponse,_In_ DWORD dwFlags,_Reserved_ LPVOID pvReserved)
BOOL WINAPI crypt32.CryptSIPVerifyIndirectData(_In_ SIP_SUBJECTINFO *pSubjectInfo,_In_ SIP_INDIRECT_DATA *pIndirectData)
HRESULT None oleaut32.VarDecFromI4(_In_ LONG lIn,_Out_ DECIMAL *pdecOut)
HRESULT None oleaut32.VarCyFromUI2(_In_ USHORT uiIn,_Out_ CY *pcyOut)
BOOL __cdecl instrsa5.GetEncSChannel(_Out_ BYTE **pData,_Out_ DWORD *dwDecSize)
BOOL None wintrust.CryptCATCatalogInfoFromContext(_In_ HCATINFO hCatInfo,_Inout_ CATALOG_INFO *psCatInfo,_In_ DWORD dwFlags)
HRESULT None oleaut32.VarUI1FromUI4(_In_ ULONG ulIn,_Out_ BYTE *pbOut)
typedef None None.BOOL(WINAPI *PFN_CRYPT_VERIFY_ENCODED_SIGNATURE_FUNC None)
HRESULT WINAPI webservices.WsCreateXmlBuffer(_In_ WS_HEAP* heap,const WS_XML_BUFFER_PROPERTY* properties,_In_ ULONG propertyCount,WS_XML_BUFFER** buffer None,_In_opt_ WS_ERROR* error)
HRESULT None oleaut32.VarUI1FromUI2(_In_ USHORT uiIn,_Out_ BYTE *pbOut)
HRESULT None oleaut32.VarI4FromDate(_In_ DATE dateIn,_Out_ LONG *plOut)
HRESULT WINAPI mssign32.SignerTimeStamp(_In_ SIGNER_SUBJECT_INFO *pSubjectInfo,_In_ LPCWSTR pwszHttpTimeStamp,_In_opt_ PCRYPT_ATTRIBUTES psRequest,_In_opt_ LPVOID pSipData)
BOOL WINAPI advapi32.CryptSetProviderEx(_In_ LPCTSTR pszProvName,_In_ DWORD dwProvType,_In_ DWORD *pdwReserved,_In_ DWORD dwFlags)
BOOL WINAPI advapi32.CryptSetProviderExW(_In_ LPCTSTR pszProvName,_In_ DWORD dwProvType,_In_ DWORD *pdwReserved,_In_ DWORD dwFlags)
BOOL WINAPI advapi32.CryptSetProviderExA(_In_ LPCTSTR pszProvName,_In_ DWORD dwProvType,_In_ DWORD *pdwReserved,_In_ DWORD dwFlags)
HRESULT None oleaut32.VarBoolFromDate(_In_ DATE dateIn,_Out_ VARIANT_BOOL *pboolOut)
NTSTATUS WINAPI bcrypt.BCryptHash(BCRYPT_ALG_HANDLE hAlgorithm None,PUCHAR pbSecret None,ULONG cbSecret None,PUCHAR pbInput None,ULONG cbInput None,PUCHAR pbOutput None,ULONG cbOutput None)
HRESULT None oleaut32.VarUI1FromDate(_In_ DATE dateIn,_Out_ BYTE *pbOut)
BOOL WINAPI crypt32.CertCreateCTLEntryFromCertificateContextProperties(_In_ PCCERT_CONTEXT pCertContext,_In_ DWORD cOptAttr,_In_ PCRYPT_ATTRIBUTE rgOptAttr,_In_ DWORD dwFlags,_In_ void *pvReserved,_Out_ PCTL_ENTRY pCtlEntry,_Inout_ DWORD *pcbCtlEntry)
BOOL None kernel32.SetLocaleInfo(_In_ LCID Locale,_In_ LCTYPE LCType,_In_ LPCTSTR lpLCData)
BOOL None kernel32.SetLocaleInfoW(_In_ LCID Locale,_In_ LCTYPE LCType,_In_ LPCTSTR lpLCData)
BOOL None kernel32.SetLocaleInfoA(_In_ LCID Locale,_In_ LCTYPE LCType,_In_ LPCTSTR lpLCData)
BOOL WINAPI crypt32.CryptExportPKCS8Ex(_In_ CRYPT_PKCS8_EXPORT_PARAMS *psExportParams,_In_ DWORD dwFlags,_In_opt_ void *pvAuxInfo,_Out_opt_ BYTE *pbPrivateKeyBlob,_Inout_ DWORD *pcbPrivateKeyBlob)
HRESULT None oleaut32.VarUI8FromR8(_In_ DOUBLE dblIn,_Out_ ULONG64 *pi64Out)
HRESULT WINAPI webservices.WsSkipNode(_In_ WS_XML_READER* reader,_In_opt_ WS_ERROR* error)
BOOL WINAPI crypt32.CryptGetDefaultOIDFunctionAddress(_In_ HCRYPTOIDFUNCSET hFuncSet,_In_ DWORD dwEncodingType,_In_opt_ LPCWSTR pwszDll,_In_ DWORD dwFlags,_Out_ void **ppvFuncAddr,_Inout_ HCRYPTOIDFUNCADDR *phFuncAddr)
HRESULT None oleaut32.VarI8FromDisp(IDispatch *pdispIn None,_In_ LCID lcid,_Out_ LONG64 *pi64Out)
HRESULT None oleaut32.VarUI4FromR8(_In_ DOUBLE dblIn,_Out_ ULONG *pulOut)
NET_API_STATUS None netapi32.NetApiBufferAllocate(_In_ DWORD ByteCount,_Out_ LPVOID *Buffer)
HRESULT None oleaut32.VarUI2FromStr(_In_ LPCOLESTR strIn,_In_ LCID lcid,_In_ ULONG dwFlags,_Out_ USHORT *puiOut)
BOOL WINAPI crypt32.CryptVerifyCertificateSignatureEx(_In_ HCRYPTPROV_LEGACY hCryptProv,_In_ DWORD dwCertEncodingType,_In_ DWORD dwSubjectType,_In_ void *pvSubject,_In_ DWORD dwIssuerType,_In_ void *pvIssuer,_In_ DWORD dwFlags,_Inout_opt_ void *pvExtra)
HRESULT None oleaut32.VarDecFromDate(_In_ DATE dateIn,_Out_ DECIMAL *pdecOut)
NTSTATUS WINAPI bcrypt.BCryptGenerateSymmetricKey(_Inout_ BCRYPT_ALG_HANDLE hAlgorithm,_Out_ BCRYPT_KEY_HANDLE *phKey,_Out_opt_ PUCHAR pbKeyObject,_In_ ULONG cbKeyObject,_In_ PUCHAR pbSecret,_In_ ULONG cbSecret,_In_ ULONG dwFlags)
PCRYPT_ATTRIBUTE WINAPI crypt32.CertFindAttribute(_In_ LPCSTR pszObjId,_In_ DWORD cAttr,_In_ CRYPT_ATTRIBUTE rgAttr[])
HRESULT None oleaut32.VarR8FromUI1(_In_ BYTE bIn,_Out_ DOUBLE *pdblOut)
BOOL WINAPI crypt32.CertFindCertificateInCRL(_In_ PCCERT_CONTEXT pCert,_In_ PCCRL_CONTEXT pCrlContext,_In_ DWORD dwFlags,_In_opt_ void *pvReserved,_Out_ PCRL_ENTRY *ppCrlEntry)
HRESULT None oleaut32.VarR4FromUI1(_In_ BYTE bIn,_Out_ FLOAT *pfltOut)
LONG NTAPI ntdll.RtlIpv4StringToAddress(_In_ PCTSTR S,_In_ BOOLEAN Strict,_Out_ LPCTSTR *Terminator,_Out_ IN_ADDR *Addr)
LONG NTAPI ntdll.RtlIpv4StringToAddressW(_In_ PCTSTR S,_In_ BOOLEAN Strict,_Out_ LPCTSTR *Terminator,_Out_ IN_ADDR *Addr)
LONG NTAPI ntdll.RtlIpv4StringToAddressA(_In_ PCTSTR S,_In_ BOOLEAN Strict,_Out_ LPCTSTR *Terminator,_Out_ IN_ADDR *Addr)
HRESULT None oleaut32.VarCyFromI1(_In_ CHAR cIn,_Out_ CY *pcyOut)
BOOL None wintrust.CryptCATAdminRemoveCatalog(_In_ HCATADMIN hCatAdmin,_In_ LPCWSTR pwszCatalogFile,_In_ DWORD dwFlags)
HRESULT None oleaut32.VarI2FromUI2(_In_ USHORT uiIn,_Out_ SHORT *psOut)
HRESULT None oleaut32.VarUI4FromUI2(_In_ USHORT uiIn,_Out_ ULONG *pulOut)
HRESULT None oleaut32.VarI1FromBool(_In_ VARIANT_BOOL boolIn,_Out_ CHAR *pcOut)
HRESULT None oleaut32.VarUI1FromDisp(IDispatch *pdispIn None,_In_ LCID lcid,_Out_ BYTE *pbOut)
BOOL WINAPI crypt32.CertGetCTLContextProperty(_In_ PCCTL_CONTEXT pCtlContext,_In_ DWORD dwPropId,_Out_ void *pvData,_Inout_ DWORD *pcbData)
HRESULT None oleaut32.VarR4FromUI4(_In_ ULONG ulIn,_Out_ FLOAT *pfltOut)
BOOL WINAPI crypt32.CryptExportPublicKeyInfo(_In_ HCRYPTPROV_OR_NCRYPT_KEY_HANDLE hCryptProvOrNCryptKey,_In_ DWORD dwKeySpec,_In_ DWORD dwCertEncodingType,_Out_ PCERT_PUBLIC_KEY_INFO pInfo,_Inout_ DWORD *pcbInfo)
BOOL WINAPI crypt32.CertComparePublicKeyInfo(_In_ DWORD dwCertEncodingType,_In_ PCERT_PUBLIC_KEY_INFO pPublicKey1,_In_ PCERT_PUBLIC_KEY_INFO pPublicKey2)
BOOL WINAPI crypt32.CryptEnumOIDFunction(_In_ DWORD dwEncodingType,_In_ LPCSTR pszFuncName,_In_ LPCSTR pszOID,_In_ DWORD dwFlags,_In_ void *pvArg,_In_ PFN_CRYPT_ENUM_OID_FUNC pfnEnumOIDFunc)
HRESULT None oleaut32.VarUI8FromI1(_In_ CHAR cIn,_Out_ ULONG64 *pi64Out)
HRESULT WINAPI webservices.WsSetMessageProperty(_In_ WS_MESSAGE* message,_In_ WS_MESSAGE_PROPERTY_ID id,const void* value,_In_ ULONG valueSize,_In_opt_ WS_ERROR* error)
int None normaliz.IdnToNameprepUnicode(_In_ DWORD dwFlags,_In_ LPCWSTR lpUnicodeCharStr,_In_ int cchUnicodeChar,_Out_opt_ LPWSTR lpNameprepCharStr,_In_ int cchNameprepChar)
HRESULT None shell32.GetColumnInfo([in] REFPROPERTYKEY propkey,[in None None,out] CM_COLUMNINFO *pcmci)
HRESULT None oleaut32.VarI1FromUI8(_In_ ULONG64 i64In,_Out_ CHAR *pcOut)
NET_API_STATUS None netapi32.NetApiBufferReallocate(_In_ LPVOID OldBuffer,_In_ DWORD NewByteCount,_Out_ LPVOID *NewBuffer)
HRESULT None oleaut32.VarI1FromDisp(_In_ IDispatch *pdispIn,_In_ LCID lcid,_Out_ CHAR *pcOut)
HRESULT None oleaut32.VarUI1FromUI8(_In_ ULONG64 ui64In,_Out_ BYTE *pbOut)
ULONG None wldap32.ldap_simple_bind(_In_ LDAP *ld,_In_ PCHAR dn,_In_ PCHAR passwd)
ULONG None wldap32.ldap_simple_bindW(_In_ LDAP *ld,_In_ PCHAR dn,_In_ PCHAR passwd)
ULONG None wldap32.ldap_simple_bindA(_In_ LDAP *ld,_In_ PCHAR dn,_In_ PCHAR passwd)
BOOL WINAPI None.CertStoreProvFreeFindCert(_In_ HCERTSTOREPROV hStoreProv,_In_ PCCERT_CONTEXT pCertContext,_In_ void *pvStoreProvFindInfo,_In_ DWORD dwFlags)
HRESULT None oleaut32.VarDateFromI4(_In_ LONG lIn,_Out_ DATE *pdateOut)
HRESULT None certadm.CertSrvRestoreEnd(_In_ HCSBC hbc)
BOOL WINAPI None.CertStoreProvDeleteCTL(_In_ HCERTSTOREPROV hStoreProv,_In_ PCCTL_CONTEXT pCtlContext,_In_ DWORD dwFlags)
BOOL None kernel32.AdjustCalendarDate(_Inout_ LPCALDATETIME lpCalDateTime,_In_ CALDATETIME_DATEUNIT calUnit,_Out_ INT amount)
HRESULT None oleaut32.VarUI8FromR4(_In_ FLOAT fltIn,_Out_ ULONG64 *pi64Out)
HCERTSTORE WINAPI crypt32.PFXImportCertStore(_In_ CRYPT_DATA_BLOB *pPFX,_In_ LPCWSTR szPassword,_In_ DWORD dwFlags)
NET_API_STATUS None netapi32.NetSetPrimaryComputerName(_In_opt_ LPCWSTR Server,_In_ LPCWSTR PrimaryName,_In_opt_ LPCWSTR DomainAccount,_In_opt_ LPCWSTR DomainAccountPassword,_In_ ULONG Reserved)
BOOL WINAPI crypt32.CryptMsgGetParam(_In_ HCRYPTMSG hCryptMsg,_In_ DWORD dwParamType,_In_ DWORD dwIndex,_Out_ void *pvData,_Inout_ DWORD *pcbData)
HRESULT WINAPI webservices.WsSetChannelProperty(_In_ WS_CHANNEL* channel,_In_ WS_CHANNEL_PROPERTY_ID id,const void* value,_In_ ULONG valueSize,_In_opt_ WS_ERROR* error)
typedef None None.BOOL(WINAPI *pCryptSIPGetCaps None)
BOOL WINAPI mssign32.PvkPrivateKeySave(_In_ HCRYPTPROV hCryptProv,_In_ HANDLE hFile,_In_ DWORD dwKeySpec,_In_ HWND hwndOwner,_In_ LPCWSTR pwszKeyName,_In_ DWORD dwFlags)
BOOL WINAPI crypt32.CryptProtectData(_In_ DATA_BLOB *pDataIn,_In_opt_ LPCWSTR szDataDescr,_In_opt_ DATA_BLOB *pOptionalEntropy,_Reserved_ PVOID pvReserved,_In_opt_ CRYPTPROTECT_PROMPTSTRUCT *pPromptStruct,_In_ DWORD dwFlags,_Out_ DATA_BLOB *pDataOut)
HRESULT None oleaut32.VarR8FromBool(_In_ VARIANT_BOOL boolIn,_Out_ DOUBLE *pdblOut)
HRESULT WINAPI webservices.WsReadStartElement(_In_ WS_XML_READER* reader,_In_opt_ WS_ERROR* error)
BOOL None cryptdlg.CertViewProperties(_In_ CERT_VIEWPROPERTIES_STRUCT *pCertViewInfo)
BOOL None cryptdlg.CertViewPropertiesW(_In_ CERT_VIEWPROPERTIES_STRUCT *pCertViewInfo)
BOOL None cryptdlg.CertViewPropertiesA(_In_ CERT_VIEWPROPERTIES_STRUCT *pCertViewInfo)
void WINAPI webservices.WsFreeError(_In_ WS_ERROR* error)
NET_API_STATUS None netapi32.NetUseAdd(_In_ LMSTR UncServerName,_In_ DWORD Level,_In_ LPBYTE Buf,_Out_ LPDWORD ParmError)
HRESULT None oleaut32.VarBoolFromUI4(_In_ ULONG ulIn,_Out_ VARIANT_BOOL *pboolOut)
HRESULT None oleaut32.VarDateFromR8(_In_ DOUBLE dblIn,_Out_ DATE *pdateOut)
HRESULT None oleaut32.VarI2FromDisp(IDispatch *pdispIn None,_In_ LCID lcid,_Out_ SHORT *psOut)
BOOL WINAPI crypt32.CertSerializeCertificateStoreElement(_In_ PCCERT_CONTEXT pCertContext,_In_ DWORD dwFlags,_Out_ BYTE *pbElement,_Inout_ DWORD *pcbElement)
HRESULT None shell32.InsertMenusSB(HMENU hmenuShared None,LPOLEMENUGROUPWIDTHS lpMenuWidths None)
HRESULT None oleaut32.VarUI2FromR4(_In_ FLOAT fltIn,_Out_ USHORT *puiOut)
BOOL CALLBACK None.EnumCodePagesProc(_In_ LPTSTR lpCodePageString)
NTSTATUS WINAPI bcrypt.BCryptDuplicateHash(_In_ BCRYPT_HASH_HANDLE hHash,_Out_ BCRYPT_HASH_HANDLE *phNewHash,_Out_ PUCHAR pbHashObject,_In_ ULONG cbHashObject,_In_ ULONG dwFlags)
HRESULT None oleaut32.VarDecFromUI4(_In_ ULONG ulIn,_Out_ DECIMAL *pdecOut)
HCERTSTORE WINAPI crypt32.CertOpenSystemStore(_In_ HCRYPTPROV_LEGACY hprov,_In_ LPTCSTR szSubsystemProtocol)
HCERTSTORE WINAPI crypt32.CertOpenSystemStoreW(_In_ HCRYPTPROV_LEGACY hprov,_In_ LPTCSTR szSubsystemProtocol)
HCERTSTORE WINAPI crypt32.CertOpenSystemStoreA(_In_ HCRYPTPROV_LEGACY hprov,_In_ LPTCSTR szSubsystemProtocol)
NET_API_STATUS None netapi32.NetUnjoinDomain(_In_ LPCWSTR lpServer,_In_ LPCWSTR lpAccount,_In_ LPCWSTR lpPassword,_In_ DWORD fUnjoinOptions)
LPVOID WINAPI crypt32.CryptMemAlloc(_In_ ULONG cbSize)
HRESULT None oleaut32.VarI2FromUI4(_In_ ULONG ulIn,_Out_ SHORT *psOut)
HRESULT None oleaut32.VarBoolFromUI1(_In_ BYTE bIn,_Out_ VARIANT_BOOL *pboolOut)
HRESULT None oleaut32.VarBstrFromUI1(_In_ BYTE bVal,_In_ LCID lcid,_In_ ULONG dwFlags,_Out_ BSTR *pbstrOut)
ULONG None wldap32.ldap_modify_s(_In_ LDAP *ld,_In_ PCHAR dn,_In_ LDAPMod *mods[])
ULONG None wldap32.ldap_modify_sW(_In_ LDAP *ld,_In_ PCHAR dn,_In_ LDAPMod *mods[])
ULONG None wldap32.ldap_modify_sA(_In_ LDAP *ld,_In_ PCHAR dn,_In_ LDAPMod *mods[])
void RPC_ENTRY rpcrt4.NdrStubInitialize(_In_ PRPC_MESSAGE pRpcMsg,_Inout_ PMIDL_STUB_MESSAGE pStubMsg,_In_ PMIDL_STUB_DESC pStubDescriptor,_In_ IRpcChannelBuffer *pRpcChannelBuffer)
HRESULT None oleaut32.VarDecFromUI1(_In_ BYTE bIn,_Out_ DECIMAL *pdecOut)
BOOL None kernel32.GetStringTypeEx(_In_ LCID Locale,_In_ DWORD dwInfoType,_In_ LPCTSTR lpSrcStr,_In_ int cchSrc,_Out_ LPWORD lpCharType)
BOOL None kernel32.GetStringTypeExW(_In_ LCID Locale,_In_ DWORD dwInfoType,_In_ LPCTSTR lpSrcStr,_In_ int cchSrc,_Out_ LPWORD lpCharType)
BOOL None kernel32.GetStringTypeExA(_In_ LCID Locale,_In_ DWORD dwInfoType,_In_ LPCTSTR lpSrcStr,_In_ int cchSrc,_Out_ LPWORD lpCharType)
LCID None kernel32.GetThreadLocale(void None None)
HRESULT None oleaut32.VarR4FromUI2(_In_ USHORT uiIn,_Out_ FLOAT *pfltOut)
NET_API_STATUS None netapi32.NetGetJoinInformation(_In_ LPCWSTR lpServer,_Out_ LPWSTR *lpNameBuffer,_Out_ PNETSETUP_JOIN_STATUS BufferType)
NET_API_STATUS None netapi32.NetJoinDomain(_In_ LPCWSTR lpServer,_In_ LPCWSTR lpDomain,_In_ LPCWSTR lpAccountOU,_In_ LPCWSTR lpAccount,_In_ LPCWSTR lpPassword,_In_ DWORD fJoinOptions)
BOOL None kernel32.VerifyScripts(_In_ DWORD dwFlags,_In_ LPCWSTR lpLocaleScripts,_In_ int cchLocaleScripts,_In_ LPCWSTR lpTestScripts,_In_ int cchTestScripts)
HRESULT WINAPI webservices.WsWriteXmlBuffer(_In_ WS_XML_WRITER* writer,_In_ WS_XML_BUFFER* xmlBuffer,_In_opt_ WS_ERROR* error)
BOOL None kernel32.EnumTimeFormatsEx(_In_ TIMEFMT_ENUMPROCEX lpTimeFmtEnumProcEx,_In_opt_ LPCWSTR lpLocaleName,_In_ DWORD dwFlags,_In_ LPARAM lParam)
BOOL WINAPI crypt32.CertVerifyRevocation(_In_ DWORD dwEncodingType,_In_ DWORD dwRevType,_In_ DWORD cContext,_In_ PVOID rgpvContext[],_In_ DWORD dwFlags,_In_opt_ PCERT_REVOCATION_PARA pRevPara,_Inout_ PCERT_REVOCATION_STATUS pRevStatus)
BOOL None kernel32.IsValidLanguageGroup(_In_ LGRPID LanguageGroup,_In_ DWORD dwFlags)
HMODULE WINAPI kernel32.GetModuleHandle(_In_opt_ LPCTSTR lpModuleName)
HMODULE WINAPI kernel32.GetModuleHandleW(_In_opt_ LPCTSTR lpModuleName)
HMODULE WINAPI kernel32.GetModuleHandleA(_In_opt_ LPCTSTR lpModuleName)
HRESULT None shell32.OnViewWindowActive(IShellView *ppshv None)
HRESULT None oleaut32.VarUI1FromI1(_In_ CHAR cIn,_Out_ BYTE *pbOut)
NET_API_STATUS None netapi32.NetScheduleJobAdd(_In_opt_ LPCWSTR Servername,_In_ LPBYTE Buffer,_Out_ LPDWORD JobId)
typedef None None.BOOL(CALLBACK *PCRYPT_RESOLVE_HCRYPTPROV_FUNC None)
NET_API_STATUS None netapi32.NetUserGetInfo(_In_ LPCWSTR servername,_In_ LPCWSTR username,_In_ DWORD level,_Out_ LPBYTE *bufptr)
int None kernel32.LCIDToLocaleName(_In_ LCID Locale,_Out_opt_ LPWSTR lpName,_In_ int cchName,_In_ DWORD dwFlags)
ULONG None wldap32.ldap_delete(_In_ LDAP *ld,_In_ PCHAR dn)
ULONG None wldap32.ldap_deleteW(_In_ LDAP *ld,_In_ PCHAR dn)
ULONG None wldap32.ldap_deleteA(_In_ LDAP *ld,_In_ PCHAR dn)
HRESULT None oleaut32.VarUI1FromR4(_In_ FLOAT fltIn,BYTE *pbOut None)
BOOL CALLBACK None.EnumGeoInfoProc(_In_ GEOID GeoId)
HRESULT None oleaut32.VarBoolFromR4(_In_ FLOAT fltIn,_Out_ VARIANT_BOOL *pboolOut)
HRESULT None oleaut32.VarCyFromI4(_In_ LONG lIn,_Out_ CY *pcyOut)
DWORD WINAPI crypt32.CertGetNameString(_In_ PCCERT_CONTEXT pCertContext,_In_ DWORD dwType,_In_ DWORD dwFlags,_In_ void *pvTypePara,_Out_ LPTSTR pszNameString,_In_ DWORD cchNameString)
DWORD WINAPI crypt32.CertGetNameStringW(_In_ PCCERT_CONTEXT pCertContext,_In_ DWORD dwType,_In_ DWORD dwFlags,_In_ void *pvTypePara,_Out_ LPTSTR pszNameString,_In_ DWORD cchNameString)
DWORD WINAPI crypt32.CertGetNameStringA(_In_ PCCERT_CONTEXT pCertContext,_In_ DWORD dwType,_In_ DWORD dwFlags,_In_ void *pvTypePara,_Out_ LPTSTR pszNameString,_In_ DWORD cchNameString)
BOOL WINAPI crypt32.CertVerifyCTLUsage(_In_ DWORD dwEncodingType,_In_ DWORD dwSubjectType,_In_ void *pvSubject,_In_ PCTL_USAGE pSubjectUsage,_In_ DWORD dwFlags,_In_opt_ PCTL_VERIFY_USAGE_PARA pVerifyUsagePara,_Inout_ PCTL_VERIFY_USAGE_STATUS pVerifyUsageStatus)
int None normaliz.IdnToUnicode(_In_ DWORD dwFlags,_In_ LPCWSTR lpASCIICharStr,_In_ int cchASCIIChar,_Out_opt_ LPWSTR lpUnicodeCharStr,_In_ int cchUnicodeChar)
PCCRYPT_OID_INFO WINAPI crypt32.CryptFindOIDInfo(_In_ DWORD dwKeyType,_In_ void *pvKey,_In_ DWORD dwGroupId)
LPWSTR WINAPI wintrust.CryptCATCDFEnumMembersByCDFTagEx(_In_ CRYPTCATCDF *pCDF,_Inout_ LPWSTR pwszPrevCDFTag,_In_ PFN_CDF_PARSE_ERROR_CALLBACK pfnParseError,_In_ CRYPTCATMEMBER **ppMember,_In_ BOOL fContinueOnError,_In_ LPVOID pvReserved)
ULONG None wldap32.ldap_modify(_In_ LDAP *ld,_In_ PCHAR dn,_In_ LDAPMod *mods[])
ULONG None wldap32.ldap_modifyW(_In_ LDAP *ld,_In_ PCHAR dn,_In_ LDAPMod *mods[])
ULONG None wldap32.ldap_modifyA(_In_ LDAP *ld,_In_ PCHAR dn,_In_ LDAPMod *mods[])
void WINAPI mssign32.FreeCryptProvFromCertEx(_In_ BOOL fAcquired,_In_ HCRYPTPROV_OR_NCRYPT_KEY_HANDLE hProv,DWORD dwKeySpec None,_In_opt_ LPWSTR pwszCapiProvider,_In_ DWORD dwProviderType,_In_opt_ LPWSTR pwszTmpContainer)
HRESULT None oleaut32.VarDecFromR4(_In_ FLOAT fltIn,_Out_ DECIMAL *pdecOut)
BOOL WINAPI crypt32.CertGetCRLContextProperty(_In_ PCCRL_CONTEXT pCrlContext,_In_ DWORD dwPropId,_Out_ void *pvData,_Inout_ DWORD *pcbData)
typedef None None.BOOL(WINAPI *PFN_CMSG_CNG_IMPORT_KEY_TRANS None)
HRESULT None shell32.GetControlWindow(UINT id None,HWND *lphwnd None)
NET_API_STATUS None netapi32.NetAddAlternateComputerName(_In_opt_ LPCWSTR Server,_In_ LPCWSTR AlternateName,_In_opt_ LPCWSTR DomainAccount,_In_opt_ LPCWSTR DomainAccountPassword,_In_ ULONG Reserved)
ULONG None wldap32.ldap_search_abandon_page(_In_ PLDAP ExternalHandle,_In_ PLDAPSearch SearchBlock)
NET_API_STATUS None netapi32.NetUseGetInfo(_In_ LMSTR UncServerName,_In_ LMSTR UseName,_In_ DWORD Level,_Out_ LPBYTE *BufPtr)
NET_API_STATUS None netapi32.NetGroupSetInfo(_In_ LPCWSTR servername,_In_ LPCWSTR groupname,_In_ DWORD level,_In_ LPBYTE buf,_Out_ LPDWORD parm_err)
NTSTATUS WINAPI bcrypt.BCryptImportKey(_In_ BCRYPT_ALG_HANDLE hAlgorithm,_In_opt_ BCRYPT_KEY_HANDLE hImportKey,_In_ LPCWSTR pszBlobType,_Out_ BCRYPT_KEY_HANDLE *phKey,_Out_opt_ PUCHAR pbKeyObject,_In_ ULONG cbKeyObject,_In_ PUCHAR pbInput,_In_ ULONG cbInput,_In_ ULONG dwFlags)
HRESULT None oleaut32.VarBoolFromUI8(_In_ ULONG64 i64In,_Out_ VARIANT_BOOL *pboolOut)
HRESULT None shell32.CallbackSM([in None None,out] LPSMDATA psmd,UINT uMsg None,WPARAM wParam None,LPARAM lParam None)
NET_API_STATUS None netapi32.NetAlertRaiseEx(_In_ LPCWSTR AlertEventName,_In_ LPVOID VariableInfo,_In_ DWORD VariableInfoSize,_In_ LPCWSTR ServiceName)
NTSTATUS WINAPI bcrypt.BCryptHashData(_Inout_ BCRYPT_HASH_HANDLE hHash,_In_ PUCHAR pbInput,_In_ ULONG cbInput,_In_ ULONG dwFlags)
NET_API_STATUS None netapi32.NetServerComputerNameDel(_In_ LPWSTR ServerName,_In_ LPWSTR EmulatedServerName)
NET_API_STATUS None netapi32.NetGroupGetInfo(_In_ LPCWSTR servername,_In_ LPCWSTR groupname,_In_ DWORD level,_Out_ LPBYTE *bufptr)
NTSTATUS WINAPI bcrypt.BCryptExportKey(_In_ BCRYPT_KEY_HANDLE hKey,_In_ BCRYPT_KEY_HANDLE hExportKey,_In_ LPCWSTR pszBlobType,_Out_ PUCHAR pbOutput,_In_ ULONG cbOutput,_Out_ ULONG *pcbResult,_In_ ULONG dwFlags)
DWORD WINAPI xinput1_4.XInputGetKeystroke(DWORD dwUserIndex None,DWORD dwReserved None,PXINPUT_KEYSTROKE pKeystroke None)
HRESULT None oleaut32.VarUI4FromBool(_In_ VARIANT_BOOL boolIn,_Out_ ULONG *pulOut)
HRESULT None oleaut32.VarDateFromBool(_In_ VARIANT_BOOL boolIn,_Out_ DATE *pdateOut)
BOOL WINAPI cryptui.CryptUIWizFreeDigitalSignContext(_In_ PCCRYPTUI_WIZ_DIGITAL_SIGN_CONTEXT pSignContext)
NET_API_STATUS None netapi32.NetGroupSetUsers(_In_ LPCWSTR servername,_In_ LPCWSTR groupname,_In_ DWORD level,_In_ LPBYTE buf,_In_ DWORD totalentries)
BOOL WINAPI crypt32.CryptInstallOIDFunctionAddress(_In_ HMODULE hModule,_In_ DWORD dwEncodingType,_In_ LPCSTR pszFuncName,_In_ DWORD cFuncEntry,_In_ CRYPT_OID_FUNC_ENTRY rgFuncEntry[],_In_ DWORD dwFlags)
NET_API_STATUS None netapi32.NetUserAdd(_In_ LMSTR servername,_In_ DWORD level,_In_ LPBYTE buf,_Out_ LPDWORD parm_err)
HRESULT None mstask.SetNetScheduleAccountInformation(_In_ LPCWSTR pwszServerName,_In_ LPCWSTR pwszAccount,_In_ LPCWSTR pwszPassword)
HRESULT None oleaut32.VarDecFromBool(_In_ VARIANT_BOOL boolIn,_Out_ DECIMAL *pdecOut)
NET_API_STATUS None netapi32.NetApiBufferFree(_In_ LPVOID Buffer)
RPC_STATUS RPC_ENTRY rpcrt4.RpcErrorGetNumberOfRecords(_In_ RPC_ERROR_ENUM_HANDLE *EnumHandle,_Out_ int *Records)
HRESULT None oleaut32.VarR4FromDate(_In_ DATE dateIn,_Out_ FLOAT *pfltOut)
WORD WINAPI ntdll.RtlQueryDepthSList(_In_ PSLIST_HEADER ListHead)
HRESULT None oleaut32.VarBstrFromUI4(_In_ ULONG ulIn,_In_ LCID lcid,_In_ ULONG dwFlags,_Out_ BSTR *pbstrOut)
NET_API_STATUS None netapi32.NetMessageBufferSend(_In_ LPCWSTR servername,_In_ LPCWSTR msgname,_In_ LPCWSTR fromname,_In_ LPBYTE buf,_In_ DWORD buflen)
HRESULT None oleaut32.VarI4FromBool(_In_ VARIANT_BOOL boolIn,_Out_ LONG *plOut)
NET_API_STATUS None netapi32.NetRequestOfflineDomainJoin(_In_ BYTE *pProvisionBinData,_In_ DWORD cbProvisionBinDataSize,_In_ DWORD dwOptions,_In_ LPCWSTR lpWindowsPath)
NET_API_STATUS None netapi32.NetMessageNameGetInfo(_In_ LPCWSTR servername,_In_ LPCWSTR msgname,_In_ DWORD level,_Out_ LPBYTE *bufptr)
NET_API_STATUS None netapi32.NetUserSetInfo(_In_ LPCWSTR servername,_In_ LPCWSTR username,_In_ DWORD level,_In_ LPBYTE buf,_Out_ LPDWORD parm_err)
NET_API_STATUS None netapi32.NetLocalGroupDelMembers(_In_ LPCWSTR servername,_In_ LPCWSTR groupname,_In_ DWORD level,_In_ LPBYTE buf,_In_ DWORD totalentries)
HRESULT None mstask.GetNetScheduleAccountInformation(_In_ LPCWSTR pwszServerName,_In_ DWORD ccAccount,_Out_ WCHAR wszAccount[])
HRESULT None oleaut32.VarUI1FromCy(_In_ CY cyIn,_Out_ BYTE *pbOut)
NET_API_STATUS None netapi32.NetServerTransportAddEx(_In_ LPWSTR servername,_In_ DWORD level,_In_ LPBYTE bufptr)
ULONG None wldap32.ber_skip_tag(_In_ BerElement *pBerElement,_Out_ ULONG *pLen)
BOOL WINAPI None.SetConsoleCursorPosition(_In_ HANDLE hConsoleOutput,_In_ COORD dwCursorPosition)
NET_API_STATUS None netapi32.NetWkstaTransportEnum(_In_ LPWSTR servername,_In_ DWORD level,_Out_ LPBYTE *bufptr,_In_ DWORD prefmaxlen,_Out_ LPDWORD entriesread,_Out_ LPDWORD totalentries,_Inout_ LPDWORD resumehandle)
NET_API_STATUS None netapi32.NetUseDel(_In_ LMSTR UncServerName,_In_ LMSTR UseName,_In_ DWORD ForceCond)
NET_API_STATUS None netapi32.NetWkstaUserGetInfo(LPWSTR reserved None,_In_ DWORD level,_Out_ LPBYTE *bufptr)
NTSTATUS WINAPI bcrypt.BCryptSetProperty(_Inout_ BCRYPT_HANDLE hObject,_In_ LPCWSTR pszProperty,_In_ PUCHAR pbInput,_In_ ULONG cbInput,_In_ ULONG dwFlags)
NET_API_STATUS None netapi32.NetValidatePasswordPolicy(_In_ LPCWSTR ServerName,_In_ LPVOID Qualifier,_In_ NET_VALIDATE_PASSWORD_TYPE ValidationType,_In_ LPVOID InputArg,_Out_ LPVOID OutputArg)
NET_API_STATUS None netapi32.NetRenameMachineInDomain(_In_ LPCWSTR lpServer,_In_ LPCWSTR lpNewMachineName,_In_ LPCWSTR lpAccount,_In_ LPCWSTR lpPassword,_In_ DWORD fRenameOptions)
NET_API_STATUS None netapi32.NetAlertRaise(_In_ LPCWSTR AlertEventName,_In_ LPVOID Buffer,_In_ DWORD BufferSize)
NET_API_STATUS None netapi32.NetEnumerateComputerNames(_In_opt_ LPCWSTR Server,_In_ NET_COMPUTER_NAME_TYPE NameType,_In_ ULONG Reserved,_Out_ PDWORD EntryCount,_Out_ LPWSTR **ComputerNames)
ULONG None wldap32.ldap_modify_ext(_In_ LDAP *ld,_In_ PCHAR dn,_In_ LDAPMod *mods[],_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls,_Out_ ULONG *MessageNumber)
ULONG None wldap32.ldap_modify_extW(_In_ LDAP *ld,_In_ PCHAR dn,_In_ LDAPMod *mods[],_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls,_Out_ ULONG *MessageNumber)
ULONG None wldap32.ldap_modify_extA(_In_ LDAP *ld,_In_ PCHAR dn,_In_ LDAPMod *mods[],_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls,_Out_ ULONG *MessageNumber)
HRESULT WINAPI webservices.WsCheckMustUnderstandHeaders(_In_ WS_MESSAGE* message,_In_opt_ WS_ERROR* error)
NET_API_STATUS None netapi32.NetGroupAdd(_In_ LPCWSTR servername,_In_ DWORD level,_In_ LPBYTE buf,_Out_ LPDWORD parm_err)
NTSTATUS WINAPI bcrypt.BCryptGenerateKeyPair(_Inout_ BCRYPT_ALG_HANDLE hAlgorithm,_Out_ BCRYPT_KEY_HANDLE *phKey,_In_ ULONG dwLength,_In_ ULONG dwFlags)
NET_API_STATUS None netapi32.NetServerSetInfo(_In_ LPWSTR servername,_In_ DWORD level,_In_ LPBYTE buf,_Out_ LPDWORD ParmError)
int None kernel32.GetGeoInfo(_In_ GEOID Location,_In_ GEOTYPE GeoType,_Out_opt_ LPTSTR lpGeoData,_In_ int cchData,_In_ LANGID LangId)
int None kernel32.GetGeoInfoW(_In_ GEOID Location,_In_ GEOTYPE GeoType,_Out_opt_ LPTSTR lpGeoData,_In_ int cchData,_In_ LANGID LangId)
int None kernel32.GetGeoInfoA(_In_ GEOID Location,_In_ GEOTYPE GeoType,_Out_opt_ LPTSTR lpGeoData,_In_ int cchData,_In_ LANGID LangId)
NET_API_STATUS None netapi32.NetProvisionComputerAccount(_In_ LPCWSTR lpDomain,_In_ LPCWSTR lpMachineName,_In_opt_ LPCWSTR lpMachineAccountOU,_In_opt_ LPCWSTR lpDcName,_In_ DWORD dwOptions,_Out_opt_ PBYTE *pProvisionBinData,_Out_opt_ DWORD *pdwProvisionBinDataSize,_Out_opt_ LPWSTR *pProvisionTextData)
VOID NET_API_FUNCTION netapi32.NetFreeAadJoinInformation(_In_opt_ PDSREG_JOIN_INFO pJoinInfo)
HRESULT NET_API_FUNCTION netapi32.NetGetAadJoinInformation(_In_opt_ LPCWSTR pcszTenantId,_Out_ PDSREG_JOIN_INFO *ppJoinInfo)
NET_API_STATUS None netapi32.NetLocalGroupGetInfo(_In_ LPCWSTR servername,_In_ LPCWSTR groupname,_In_ DWORD level,_Out_ LPBYTE *bufptr)
INT None wldap32.ber_flatten(_In_ BerElement *pBerElement,_Out_ PBERVAL *pBerVal)
NET_API_STATUS None netapi32.NetLocalGroupDel(_In_ LPCWSTR servername,_In_ LPCWSTR groupname)
HRESULT None oleaut32.VarI4FromUI1(_In_ BYTE bIn,_Out_ LONG *plOut)
RPC_STATUS RPC_ENTRY rpcrt4.RpcNsBindingInqEntryName(RPC_BINDING_HANDLE Binding None,unsigned long EntryNameSyntax,unsigned char **EntryName)
RPC_STATUS RPC_ENTRY rpcrt4.RpcNsBindingInqEntryNameW(RPC_BINDING_HANDLE Binding None,unsigned long EntryNameSyntax,unsigned char **EntryName)
RPC_STATUS RPC_ENTRY rpcrt4.RpcNsBindingInqEntryNameA(RPC_BINDING_HANDLE Binding None,unsigned long EntryNameSyntax,unsigned char **EntryName)
NET_API_STATUS None netapi32.NetServerDiskEnum(_In_ LPWSTR servername,_In_ DWORD level,_Out_ LPBYTE *bufptr,_In_ DWORD prefmaxlen,_Out_ LPDWORD entriesread,_Out_ LPDWORD totalentries,_Inout_ LPDWORD resume_handle)
NET_API_STATUS None netapi32.NetLocalGroupSetInfo(_In_ LPCWSTR servername,_In_ LPCWSTR groupname,_In_ DWORD level,_In_ LPBYTE buf,_Out_ LPDWORD parm_err)
NET_API_STATUS None netapi32.NetGroupGetInfo(_In_ LPCWSTR servername,_In_ LPCWSTR groupname,_In_ DWORD level,_Out_ LPBYTE *bufptr)
ULONG None wldap32.ldap_encode_sort_control(_In_ PLDAP ExternalHandle,_In_ PLDAPSortKey *SortKeys,_Out_ PLDAPControl Control,_In_ BOOLEAN IsCritical)
ULONG None wldap32.ldap_encode_sort_controlW(_In_ PLDAP ExternalHandle,_In_ PLDAPSortKey *SortKeys,_Out_ PLDAPControl Control,_In_ BOOLEAN IsCritical)
ULONG None wldap32.ldap_encode_sort_controlA(_In_ PLDAP ExternalHandle,_In_ PLDAPSortKey *SortKeys,_Out_ PLDAPControl Control,_In_ BOOLEAN IsCritical)
NET_API_STATUS None netapi32.NetUserGetGroups(_In_ LPCWSTR servername,_In_ LPCWSTR username,_In_ DWORD level,_Out_ LPBYTE *bufptr,_In_ DWORD prefmaxlen,_Out_ LPDWORD entriesread,_Out_ LPDWORD totalentries)
HCATINFO None wintrust.CryptCATAdminAddCatalog(_In_ HCATADMIN hCatAdmin,_In_ WCHAR *pwszCatalogFile,_In_ WCHAR *pwszSelectBaseName,_In_ DWORD dwFlags)
NET_API_STATUS None netapi32.NetLocalGroupEnum(_In_ LPCWSTR servername,_In_ DWORD level,_Out_ LPBYTE *bufptr,_In_ DWORD prefmaxlen,_Out_ LPDWORD entriesread,_Out_ LPDWORD totalentries,_Inout_ PDWORD_PTR resumehandle)
NET_API_STATUS None netapi32.NetServerComputerNameDel(_In_ LPWSTR ServerName,_In_ LPWSTR EmulatedServerName)
NET_API_STATUS None netapi32.NetWkstaUserEnum(_In_ LPWSTR servername,_In_ DWORD level,_Out_ LPBYTE *bufptr,_In_ DWORD prefmaxlen,_Out_ LPDWORD entriesread,_Out_ LPDWORD totalentries,_Inout_ LPDWORD resumehandle)
NET_API_STATUS None netapi32.NetApiBufferSize(_In_ LPVOID Buffer,_Out_ LPDWORD ByteCount)
NET_API_STATUS None netapi32.NetGroupDel(_In_ LPCWSTR servername,_In_ LPCWSTR groupname)
HRESULT None oleaut32.VarUI2FromI2(_In_ SHORT uiIn,_Out_ USHORT *puiOut)
NET_API_STATUS None netapi32.NetGetDisplayInformationIndex(_In_ LPCWSTR ServerName,_In_ DWORD Level,_In_ LPCWSTR Prefix,_Out_ LPDWORD Index)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsGroupMbrRemove(unsigned long GroupNameSyntax,unsigned char *GroupName,unsigned long MemberNameSyntax,unsigned char *MemberName)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsGroupMbrRemoveW(unsigned long GroupNameSyntax,unsigned char *GroupName,unsigned long MemberNameSyntax,unsigned char *MemberName)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsGroupMbrRemoveA(unsigned long GroupNameSyntax,unsigned char *GroupName,unsigned long MemberNameSyntax,unsigned char *MemberName)
NET_API_STATUS None netapi32.NetUserModalsSet(_In_ LPCWSTR servername,_In_ DWORD level,_In_ LPBYTE buf,_Out_ LPDWORD parm_err)
ULONG None wldap32.ldap_add(_In_ LDAP *ld,_In_ PCHAR dn,_In_ LDAPMod *attrs[])
ULONG None wldap32.ldap_addW(_In_ LDAP *ld,_In_ PCHAR dn,_In_ LDAPMod *attrs[])
ULONG None wldap32.ldap_addA(_In_ LDAP *ld,_In_ PCHAR dn,_In_ LDAPMod *attrs[])
ULONG None wldap32.ldap_compare_s(_In_ LDAP *ld,_In_ PCHAR dn,_In_ PCHAR attr,_In_ PCHAR value)
ULONG None wldap32.ldap_compare_sW(_In_ LDAP *ld,_In_ PCHAR dn,_In_ PCHAR attr,_In_ PCHAR value)
ULONG None wldap32.ldap_compare_sA(_In_ LDAP *ld,_In_ PCHAR dn,_In_ PCHAR attr,_In_ PCHAR value)
NET_API_STATUS None netapi32.NetGetDCName(_In_ LPCWSTR servername,_In_ LPCWSTR domainname,_Out_ LPBYTE *bufptr)
NET_API_STATUS None netapi32.NetGroupEnum(_In_ LPCWSTR servername,_In_ DWORD level,_Out_ LPBYTE *bufptr,_In_ DWORD prefmaxlen,_Out_ LPDWORD entriesread,_Out_ LPDWORD totalentries,_Inout_ PDWORD_PTR resume_handle)
NET_API_STATUS None netapi32.NetMessageNameAdd(_In_ LPCWSTR servername,_In_ LPCWSTR msgname)
LANGID None kernel32.GetSystemDefaultLangID(void None None)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsMgmtEntryCreate(unsigned long EntryNameSyntax,unsigned char *EntryName)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsMgmtEntryCreateW(unsigned long EntryNameSyntax,unsigned char *EntryName)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsMgmtEntryCreateA(unsigned long EntryNameSyntax,unsigned char *EntryName)
HRESULT None oleaut32.VarI8FromDate(_In_ DATE dateIn,_Out_ LONG64 *pi64Out)
ULONG None wldap32.ldap_connect(_In_ LDAP *ld,_In_ LDAP_TIMEVAL *timeout)
ULONG None wldap32.ldap_parse_reference(_In_ LDAP *Connection,_In_ LDAPMessage *ResultMessage,_Out_ PCHAR **Referrals)
ULONG None wldap32.ldap_parse_referenceW(_In_ LDAP *Connection,_In_ LDAPMessage *ResultMessage,_Out_ PCHAR **Referrals)
ULONG None wldap32.ldap_parse_referenceA(_In_ LDAP *Connection,_In_ LDAPMessage *ResultMessage,_Out_ PCHAR **Referrals)
BOOL WINAPI None.CRYPT_ENUM_KEYID_PROP(_In_ PCRYPT_HASH_BLOB pKeyIdentifier,_In_ DWORD dwFlags,_In_ void *pvReserved,_Inout_ void *pvArg,_In_ DWORD cProp,_In_ DWORD *rgdwPropId,_In_ void **rgpvData,_In_ DWORD *rgcbData)
NET_API_STATUS None netapi32.NetLocalGroupGetMembers(_In_ LPCWSTR servername,_In_ LPCWSTR localgroupname,_In_ DWORD level,_Out_ LPBYTE *bufptr,_In_ DWORD prefmaxlen,_Out_ LPDWORD entriesread,_Out_ LPDWORD totalentries,_Inout_ PDWORD_PTR resumehandle)
RPC_STATUS RPC_ENTRY rpcrt4.RpcCancelThreadEx(HANDLE ThreadHandle None,LONG Timeout None)
ULONG None wldap32.ldap_start_tls_s(_In_ PLDAP ExternalHandle,_Out_ PULONG ServerReturnValue,_Out_ LDAPMessage **result,_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls)
ULONG None wldap32.ldap_start_tls_sW(_In_ PLDAP ExternalHandle,_Out_ PULONG ServerReturnValue,_Out_ LDAPMessage **result,_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls)
ULONG None wldap32.ldap_start_tls_sA(_In_ PLDAP ExternalHandle,_Out_ PULONG ServerReturnValue,_Out_ LDAPMessage **result,_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls)
NET_API_STATUS None netapi32.NetWkstaUserSetInfo(LPWSTR reserved None,_In_ DWORD level,_In_ LPBYTE buf,_Out_ LPDWORD parm_err)
RPC_STATUS RPC_ENTRY rpcrt4.UuidCreateSequential(UUID __RPC_FAR *Uuid)
void RPC_ENTRY rpcrt4.RpcRaiseException(RPC_STATUS Exception None)
NET_API_STATUS WINAPI netapi32.NetRequestProvisioningPackageInstall(_In_ BYTE *pPackageBinData,_In_ DWORD dwPackageBinDataSize,_In_ DWORD dwProvisionOptions,_In_ LPCWSTR lpWindowsPath,_Reserved_ PVOID pvReserved)
ULONG None wldap32.ldap_result2error(_In_ LDAP *ld,_In_ LDAPMessage *res,_In_ ULONG freeit)
NET_API_STATUS None netapi32.NetUserChangePassword(_In_ LPCWSTR domainname,_In_ LPCWSTR username,_In_ LPCWSTR oldpassword,_In_ LPCWSTR newpassword)
ULONG None wldap32.ldap_compare(_In_ LDAP *ld,_In_ PCHAR dn,_In_ PCHAR attr,_In_ PCHAR value)
ULONG None wldap32.ldap_compareW(_In_ LDAP *ld,_In_ PCHAR dn,_In_ PCHAR attr,_In_ PCHAR value)
ULONG None wldap32.ldap_compareA(_In_ LDAP *ld,_In_ PCHAR dn,_In_ PCHAR attr,_In_ PCHAR value)
ULONG None wldap32.ldap_check_filter(_In_ LDAP *ld,_In_ PWCHAR SearchFilter)
ULONG None wldap32.ldap_check_filterW(_In_ LDAP *ld,_In_ PWCHAR SearchFilter)
ULONG None wldap32.ldap_check_filterA(_In_ LDAP *ld,_In_ PWCHAR SearchFilter)
ULONG None wldap32.ldap_escape_filter_element(_In_ PCHAR sourceFilterElement,_In_ ULONG sourceLength,_Out_ PCHAR destFilterElement,_In_ ULONG destLength)
ULONG None wldap32.ldap_escape_filter_elementW(_In_ PCHAR sourceFilterElement,_In_ ULONG sourceLength,_Out_ PCHAR destFilterElement,_In_ ULONG destLength)
ULONG None wldap32.ldap_escape_filter_elementA(_In_ PCHAR sourceFilterElement,_In_ ULONG sourceLength,_Out_ PCHAR destFilterElement,_In_ ULONG destLength)
NET_API_STATUS None netapi32.NetQueryDisplayInformation(_In_ LPCWSTR ServerName,_In_ DWORD Level,_In_ DWORD Index,_In_ DWORD EntriesRequested,_In_ DWORD PreferredMaximumLength,_Out_ LPDWORD ReturnedEntryCount,_Out_ PVOID *SortedBuffer)
PCHAR None wldap32.ldap_get_dn(_In_ LDAP *ld,_In_ LDAPMessage *entry)
PCHAR None wldap32.ldap_get_dnW(_In_ LDAP *ld,_In_ LDAPMessage *entry)
PCHAR None wldap32.ldap_get_dnA(_In_ LDAP *ld,_In_ LDAPMessage *entry)
ULONG None wldap32.ldap_modify_ext_s(_In_ LDAP *ld,_In_ PCHAR dn,_In_ LDAPMod *mods[],_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls)
ULONG None wldap32.ldap_modify_ext_sW(_In_ LDAP *ld,_In_ PCHAR dn,_In_ LDAPMod *mods[],_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls)
ULONG None wldap32.ldap_modify_ext_sA(_In_ LDAP *ld,_In_ PCHAR dn,_In_ LDAPMod *mods[],_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls)
RPC_STATUS RPC_ENTRY rpcrt4.RpcStringBindingCompose(TCHAR *ObjUuid None,TCHAR *ProtSeq None,TCHAR *NetworkAddr None,TCHAR *EndPoint None,TCHAR *Options None,TCHAR **StringBinding None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcStringBindingComposeW(TCHAR *ObjUuid None,TCHAR *ProtSeq None,TCHAR *NetworkAddr None,TCHAR *EndPoint None,TCHAR *Options None,TCHAR **StringBinding None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcStringBindingComposeA(TCHAR *ObjUuid None,TCHAR *ProtSeq None,TCHAR *NetworkAddr None,TCHAR *EndPoint None,TCHAR *Options None,TCHAR **StringBinding None)
NET_API_STATUS None netapi32.NetGetAnyDCName(_In_ LPCWSTR servername,_In_ LPCWSTR domainname,_Out_ LPBYTE *bufptr)
NET_API_STATUS None netapi32.NetScheduleJobEnum(_In_opt_ LPCWSTR Servername,_Out_ LPBYTE *PointerToBuffer,_In_ DWORD PreferredMaximumLength,_Out_ LPDWORD EntriesRead,_Out_ LPDWORD TotalEntries,_Inout_ LPDWORD ResumeHandle)
ULONG None wldap32.ber_next_element(_In_ BerElement *pBerElement,_Inout_ ULONG *pLen,_Inout_ CHAR *opaque)
NET_API_STATUS None netapi32.NetGroupAddUser(_In_ LPCWSTR servername,_In_ LPCWSTR GroupName,_In_ LPCWSTR username)
ULONG None wldap32.ldap_set_option(_In_ LDAP *ld,_In_ int option,_In_ void *invalue)
ULONG None wldap32.ldap_set_optionW(_In_ LDAP *ld,_In_ int option,_In_ void *invalue)
ULONG None wldap32.ldap_set_option(_In_ LDAP *ld,_In_ int option,_In_ void *invalue)
NET_API_STATUS None netapi32.NetUserDel(_In_ LPCWSTR servername,_In_ LPCWSTR username)
NET_API_STATUS None netapi32.NetMessageNameDel(_In_ LPCWSTR servername,_In_ LPCWSTR msgname)
NET_API_STATUS None netapi32.NetValidatePasswordPolicyFree(_In_ LPVOID *OutputArg)
ULONG None wldap32.ber_peek_tag(_In_ BerElement *pBerElement,_Out_ ULONG *pLen)
ULONG None wldap32.ber_first_element(_In_ BerElement *pBerElement,_Out_ ULONG *pLen,_Out_ CHAR **ppOpaque)
ULONG None wldap32.ldap_bind_s(_In_ LDAP *ld,_In_ PCHAR dn,_In_ PCHAR cred,_In_ ULONG method)
ULONG None wldap32.ldap_bind_sW(_In_ LDAP *ld,_In_ PCHAR dn,_In_ PCHAR cred,_In_ ULONG method)
ULONG None wldap32.ldap_bind_sA(_In_ LDAP *ld,_In_ PCHAR dn,_In_ PCHAR cred,_In_ ULONG method)
RPC_STATUS RPC_ENTRY rpcrt4.RpcRevertToSelfEx(RPC_BINDING_HANDLE BindingHandle None)
NET_API_STATUS None netapi32.NetMessageNameEnum(_In_ LPCWSTR servername,_In_ DWORD level,_Out_ LPBYTE *bufptr,_In_ DWORD prefmaxlen,_Out_ LPDWORD entriesread,_Out_ LPDWORD totalentries,_Inout_ LPDWORD resume_handle)
PCHAR None wldap32.ldap_next_attribute(_In_ LDAP *ld,_In_ LDAPMessage *entry,_Inout_ BerElement *ptr)
PCHAR None wldap32.ldap_next_attributeW(_In_ LDAP *ld,_In_ LDAPMessage *entry,_Inout_ BerElement *ptr)
PCHAR None wldap32.ldap_next_attributeA(_In_ LDAP *ld,_In_ LDAPMessage *entry,_Inout_ BerElement *ptr)
ULONG None wldap32.ldap_bind_s(_In_ LDAP *ld,_In_ PCHAR dn,_In_ PCHAR cred,_In_ ULONG method)
ULONG None wldap32.ldap_bind_sW(_In_ LDAP *ld,_In_ PCHAR dn,_In_ PCHAR cred,_In_ ULONG method)
ULONG None wldap32.ldap_bind_sA(_In_ LDAP *ld,_In_ PCHAR dn,_In_ PCHAR cred,_In_ ULONG method)
RPC_STATUS RPC_ENTRY rpcrt4.RpcAsyncCompleteCall(PRPC_SYNC_STATE pAsync None,PVOID Reply None)
NET_API_STATUS None netapi32.NetGetJoinableOUs(_In_ LPCWSTR lpServer,_In_ LPCWSTR lpDomain,_In_ LPCWSTR lpAccount,_In_ LPCWSTR lpPassword,_Out_ DWORD *OUCount,_Out_ LPWSTR **OUs)
RPC_STATUS RPC_ENTRY rpcrt4.RpcEpRegisterNoReplace(RPC_IF_HANDLE IfSpec None,RPC_BINDING_VECTOR *BindingVector None,UUID_VECTOR *UuidVector None,unsigned char *Annotation)
RPC_STATUS RPC_ENTRY rpcrt4.RpcEpRegisterNoReplaceW(RPC_IF_HANDLE IfSpec None,RPC_BINDING_VECTOR *BindingVector None,UUID_VECTOR *UuidVector None,unsigned char *Annotation)
RPC_STATUS RPC_ENTRY rpcrt4.RpcEpRegisterNoReplaceA(RPC_IF_HANDLE IfSpec None,RPC_BINDING_VECTOR *BindingVector None,UUID_VECTOR *UuidVector None,unsigned char *Annotation)
NET_API_STATUS None netapi32.NetWkstaSetInfo(_In_ LPWSTR servername,_In_ DWORD level,_In_ LPBYTE buffer,_Out_ LPDWORD parm_err)
INT None oleaut32.VariantTimeToSystemTime(_In_ DOUBLE vtime,_Out_ LPSYSTEMTIME lpSystemTime)
NET_API_STATUS None netapi32.NetServerTransportDel(_In_ LPWSTR servername,_In_ DWORD level,_In_ LPBYTE bufptr)
ULONG None wldap32.ldap_close_extended_op(_In_ LDAP *ld,_In_ ULONG MessageNumber)
NET_API_STATUS None netapi32.NetServerEnum(_In_opt_ LPCWSTR servername,_In_ DWORD level,_Out_ LPBYTE *bufptr,_In_ DWORD prefmaxlen,_Out_ LPDWORD entriesread,_Out_ LPDWORD totalentries,_In_ DWORD servertype,_In_opt_ LPCWSTR domain,_Inout_opt_ LPDWORD resume_handle)
HRESULT WINAPI webservices.WsReadEnvelopeEnd(_In_ WS_MESSAGE* message,_In_opt_ WS_ERROR* error)
NET_API_STATUS None netapi32.NetLocalGroupAdd(_In_ LPCWSTR servername,_In_ DWORD level,_In_ LPBYTE buf,_Out_ LPDWORD parm_err)
NET_API_STATUS None netapi32.NetScheduleJobGetInfo(_In_opt_ LPCWSTR Servername,_In_ DWORD JobId,_Out_ LPBYTE *PointerToBuffer)
ULONG None wldap32.ldap_modrdn(_In_ LDAP *ExternalHandle,_In_ PCHAR DistinguishedName,_Out_ PCHAR NewDistinguishedName)
ULONG None wldap32.ldap_modrdnW(_In_ LDAP *ExternalHandle,_In_ PCHAR DistinguishedName,_Out_ PCHAR NewDistinguishedName)
ULONG None wldap32.ldap_modrdnA(_In_ LDAP *ExternalHandle,_In_ PCHAR DistinguishedName,_Out_ PCHAR NewDistinguishedName)
NET_API_STATUS None netapi32.NetGroupDelUser(_In_ LPCWSTR servername,_In_ LPCWSTR GroupName,_In_ LPCWSTR Username)
BOOLEAN _cdecl None.VERIFYSERVERCERT(PLDAP Connection None,PCCERT_CONTEXT *ppServerCert None)
NTSTATUS WINAPI bcrypt.BCryptVerifySignature(_In_ BCRYPT_KEY_HANDLE hKey,_In_opt_ VOID *pPaddingInfo,_In_ PUCHAR pbHash,_In_ ULONG cbHash,_In_ PUCHAR pbSignature,_In_ ULONG cbSignature,_In_ ULONG dwFlags)
ULONG None wldap32.ldap_unbind(_In_ LDAP *ld)
NET_API_STATUS None netapi32.NetUserGetLocalGroups(_In_ LPCWSTR servername,_In_ LPCWSTR username,_In_ DWORD level,_In_ DWORD flags,_Out_ LPBYTE *bufptr,_In_ DWORD prefmaxlen,_Out_ LPDWORD entriesread,_Out_ LPDWORD totalentries)
BOOL WINAPI kernel32.CancelWaitableTimer(_In_ HANDLE hTimer)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsBindingExportPnP(unsigned long EntryNameSyntax,unsigned char *EntryName,RPC_IF_HANDLE IfSpec None,UUID_VECTOR *ObjectUuidVec None)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsBindingExportPnPW(unsigned long EntryNameSyntax,unsigned char *EntryName,RPC_IF_HANDLE IfSpec None,UUID_VECTOR *ObjectUuidVec None)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsBindingExportPnPA(unsigned long EntryNameSyntax,unsigned char *EntryName,RPC_IF_HANDLE IfSpec None,UUID_VECTOR *ObjectUuidVec None)
ULONG None wldap32.ldap_rename_ext_s(_In_ LDAP *ld,_In_ PWCHAR dn,_In_ PWCHAR NewRDN,_In_ PWCHAR NewParent,_In_ INT DeleteOldRdn,_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls)
ULONG None wldap32.ldap_rename_ext_sW(_In_ LDAP *ld,_In_ PWCHAR dn,_In_ PWCHAR NewRDN,_In_ PWCHAR NewParent,_In_ INT DeleteOldRdn,_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls)
ULONG None wldap32.ldap_rename_ext_sA(_In_ LDAP *ld,_In_ PWCHAR dn,_In_ PWCHAR NewRDN,_In_ PWCHAR NewParent,_In_ INT DeleteOldRdn,_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls)
NET_API_STATUS None netapi32.NetServerTransportEnum(_In_ LPWSTR servername,_In_ DWORD level,_Out_ LPBYTE *bufptr,_In_ DWORD prefmaxlen,_Out_ LPDWORD entriesread,_Out_ LPDWORD totalentries,_Inout_ LPDWORD resumehandle)
RPC_STATUS RPC_ENTRY rpcrt4.RpcAsyncGetCallStatus(PRPC_ASYNC_STATE pAsync None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcSmDisableAllocate(void None None)
RPC_STATUS RPC_ENTRY rpcrt4.DceErrorInqText(unsigned long StatusToConvert,unsigned char *ErrorText)
RPC_STATUS RPC_ENTRY rpcrt4.DceErrorInqTextW(unsigned long StatusToConvert,unsigned char *ErrorText)
RPC_STATUS RPC_ENTRY rpcrt4.DceErrorInqTextA(unsigned long StatusToConvert,unsigned char *ErrorText)
ULONG None wldap32.ldap_delete_ext_s(_In_ LDAP *ld,_In_ PCHAR dn,_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls)
ULONG None wldap32.ldap_delete_ext_sW(_In_ LDAP *ld,_In_ PCHAR dn,_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls)
ULONG None wldap32.ldap_delete_ext_sA(_In_ LDAP *ld,_In_ PCHAR dn,_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls)
BOOL None kernel32.EnumDateFormats(_In_ DATEFMT_ENUMPROC lpDateFmtEnumProc,_In_ LCID Locale,_In_ DWORD dwFlags)
BOOL None kernel32.EnumDateFormatsW(_In_ DATEFMT_ENUMPROC lpDateFmtEnumProc,_In_ LCID Locale,_In_ DWORD dwFlags)
BOOL None kernel32.EnumDateFormatsA(_In_ DATEFMT_ENUMPROC lpDateFmtEnumProc,_In_ LCID Locale,_In_ DWORD dwFlags)
ULONG None wldap32.ldap_modrdn_s(_In_ LDAP *ExternalHandle,_In_ PCHAR DistinguishedName,_Out_ PCHAR NewDistinguishedName)
ULONG None wldap32.ldap_modrdn_sW(_In_ LDAP *ExternalHandle,_In_ PCHAR DistinguishedName,_Out_ PCHAR NewDistinguishedName)
ULONG None wldap32.ldap_modrdn_sA(_In_ LDAP *ExternalHandle,_In_ PCHAR DistinguishedName,_Out_ PCHAR NewDistinguishedName)
RPC_STATUS RPC_ENTRY rpcrt4.RpcMgmtInqStats(RPC_BINDING_HANDLE Binding None,RPC_STATS_VECTOR **Statistics None)
ULONG None wldap32.LdapMapErrorToWin32(_In_ ULONG LdapError)
ULONG None wldap32.ldap_add_ext_s(_In_ LDAP *ld,_In_ PCHAR dn,_In_ LDAPMod *attrs[],_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls)
ULONG None wldap32.ldap_add_ext_sW(_In_ LDAP *ld,_In_ PCHAR dn,_In_ LDAPMod *attrs[],_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls)
ULONG None wldap32.ldap_add_ext_sA(_In_ LDAP *ld,_In_ PCHAR dn,_In_ LDAPMod *attrs[],_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls)
RPC_STATUS RPC_ENTRY rpcrt4.RpcErrorGetNextRecord(_In_ RPC_ERROR_ENUM_HANDLE *EnumHandle,_In_ BOOL CopyStrings,_Out_ RPC_EXTENDED_ERROR_INFO *ErrorInfo)
NET_API_STATUS None netapi32.NetLocalGroupSetMembers(_In_ LPCWSTR servername,_In_ LPCWSTR groupname,_In_ DWORD level,_In_ LPBYTE buf,_In_ DWORD totalentries)
NET_API_STATUS None netapi32.NetScheduleJobDel(_In_opt_ LPCWSTR Servername,_In_ DWORD MinJobId,_In_ DWORD MaxJobId)
NET_API_STATUS None netapi32.NetRemoteTOD(_In_ LPCWSTR UncServerName,_Out_ LPBYTE *BufferPtr)
NET_API_STATUS None netapi32.NetLocalGroupAddMembers(_In_ LPCWSTR servername,_In_ LPCWSTR groupname,_In_ DWORD level,_In_ LPBYTE buf,_In_ DWORD totalentries)
NET_API_STATUS None netapi32.NetWkstaGetInfo(_In_ LPWSTR servername,_In_ DWORD level,_Out_ LPBYTE *bufptr)
NET_API_STATUS None netapi32.NetServerGetInfo(_In_ LPWSTR servername,_In_ DWORD level,_Out_ LPBYTE *bufptr)
NET_API_STATUS None netapi32.NetRemoteComputerSupports(_In_ LPCWSTR UncServerName,_In_ DWORD OptionsWanted,_Out_ LPDWORD OptionsSupported)
ULONG None wldap32.ldap_control_free(_In_ LDAPControl *Control)
ULONG None wldap32.ldap_control_freeW(_In_ LDAPControl *Control)
ULONG None wldap32.ldap_control_freeA(_In_ LDAPControl *Control)
RPC_STATUS RPC_ENTRY rpcrt4.RpcMgmtSetCancelTimeout(signed int Seconds)
RPC_STATUS RPC_ENTRY rpcrt4.RpcIfInqId(RPC_IF_HANDLE RpcIfHandle None,RPC_IF_ID *RpcIfId None)
ULONG LDAPAPI wldap32.ldap_cleanup(HANDLE hInstance None)
ULONG None wldap32.ldap_abandon(_In_ LDAP *ld,_In_ ULONG msgid)
NET_API_STATUS NET_API_FUNCTION netapi32.NetDfsGetClientInfo(_In_ LPWSTR DfsEntryPath,_In_opt_ LPWSTR ServerName,_In_opt_ LPWSTR ShareName,_In_ DWORD Level,_Out_ LPBYTE *Buffer)
ULONG None wldap32.ldap_get_option(_In_ LDAP *ld,_In_ int option,_Out_ void *outvalue)
ULONG None wldap32.ldap_get_optionW(_In_ LDAP *ld,_In_ int option,_Out_ void *outvalue)
ULONG None wldap32.ldap_get_option(_In_ LDAP *ld,_In_ int option,_Out_ void *outvalue)
RPC_STATUS RPC_ENTRY rpcrt4.RpcServerUseAllProtseqs(unsigned int MaxCalls,void *SecurityDescriptor None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcSmDestroyClientContext(void **ContextHandle None)
ULONG None wldap32.ldap_msgfree(_In_ LDAPMessage *res)
ULONG None wldap32.ldap_count_entries(_In_ LDAP *ld,_In_ LDAPMessage *res)
PCHAR None wldap32.ldap_dn2ufn(_In_ PCHAR dn)
PCHAR None wldap32.ldap_dn2ufnW(_In_ PCHAR dn)
PCHAR None wldap32.ldap_dn2ufnA(_In_ PCHAR dn)
PLDAPSearch None wldap32.ldap_search_init_page(_In_ PLDAP ExternalHandle,_In_ PCHAR DistinguishedName,_In_ ULONG ScopeOfSearch,_In_ PCHAR SearchFilter,_In_ PCHAR AttributeList[],_In_ ULONG AttributesOnly,_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls,_In_ ULONG PageTimeLimit,_In_ ULONG TotalSizeLimit,_In_ PLDAPSortKey *SortKeys)
PLDAPSearch None wldap32.ldap_search_init_pageW(_In_ PLDAP ExternalHandle,_In_ PCHAR DistinguishedName,_In_ ULONG ScopeOfSearch,_In_ PCHAR SearchFilter,_In_ PCHAR AttributeList[],_In_ ULONG AttributesOnly,_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls,_In_ ULONG PageTimeLimit,_In_ ULONG TotalSizeLimit,_In_ PLDAPSortKey *SortKeys)
PLDAPSearch None wldap32.ldap_search_init_pageA(_In_ PLDAP ExternalHandle,_In_ PCHAR DistinguishedName,_In_ ULONG ScopeOfSearch,_In_ PCHAR SearchFilter,_In_ PCHAR AttributeList[],_In_ ULONG AttributesOnly,_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls,_In_ ULONG PageTimeLimit,_In_ ULONG TotalSizeLimit,_In_ PLDAPSortKey *SortKeys)
RPC_STATUS RPC_ENTRY rpcrt4.RpcServerUseProtseqEpEx(unsigned char *Protseq,unsigned int MaxCalls,unsigned char *Endpoint,void *SecurityDescriptor None,PRPC_POLICY Policy None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcServerUseProtseqEpExW(unsigned char *Protseq,unsigned int MaxCalls,unsigned char *Endpoint,void *SecurityDescriptor None,PRPC_POLICY Policy None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcServerUseProtseqEpExA(unsigned char *Protseq,unsigned int MaxCalls,unsigned char *Endpoint,void *SecurityDescriptor None,PRPC_POLICY Policy None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcSmSetClientAllocFree(RPC_CLIENT_ALLOC *pfnAllocate None,RPC_CLIENT_FREE *pfnFree None)
NET_API_STATUS None netapi32.NetServerTransportAdd(_In_ LPWSTR servername,_In_ DWORD level,_In_ LPBYTE bufptr)
NET_API_STATUS None netapi32.NetValidateName(_In_ LPCWSTR lpServer,_In_ LPCWSTR lpName,_In_ LPCWSTR lpAccount,_In_ LPCWSTR lpPassword,_In_ NETSETUP_NAME_TYPE NameType)
RPC_STATUS None rpcrt4.RpcBindingUnbind(_In_ RPC_BINDING_HANDLE Binding)
NET_API_STATUS WINAPI netapi32.NetCreateProvisioningPackage(_In_ PNETSETUP_PROVISIONING_PARAMS pProvisioningParams,_Out_opt_ PBYTE *pPackageBinData,_Out_opt_ DWORD *pdwPackageBinDataSize,_Out_opt_ LPWSTR *pPackageTextData)
RPC_STATUS RPC_ENTRY rpcrt4.RpcServerUseProtseqEx(unsigned char *ProtSeq,unsigned int MaxCalls,void *SecurityDescriptor None,PRPC_POLICY Policy None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcServerUseProtseqExW(unsigned char *ProtSeq,unsigned int MaxCalls,void *SecurityDescriptor None,PRPC_POLICY Policy None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcServerUseProtseqExA(unsigned char *ProtSeq,unsigned int MaxCalls,void *SecurityDescriptor None,PRPC_POLICY Policy None)
BOOL CALLBACK None.Geo_EnumNameProc(_In_ PWSTR GeoName,LPARAM data None)
NET_API_STATUS None netapi32.NetUserSetGroups(_In_ LPCWSTR servername,_In_ LPCWSTR username,_In_ DWORD level,_In_ LPBYTE buf,_In_ DWORD num_entries)
ULONG None wldap32.ldap_value_free(PCHAR *vals None)
ULONG None wldap32.ldap_value_freeW(PCHAR *vals None)
ULONG None wldap32.ldap_value_freeA(PCHAR *vals None)
NET_API_STATUS None netapi32.NetUserEnum(_In_ LPCWSTR servername,_In_ DWORD level,_In_ DWORD filter,_Out_ LPBYTE *bufptr,_In_ DWORD prefmaxlen,_Out_ LPDWORD entriesread,_Out_ LPDWORD totalentries,_Inout_ LPDWORD resume_handle)
RPC_STATUS RPC_ENTRY rpcrt4.RpcErrorSaveErrorInfo(_In_ RPC_ERROR_ENUM_HANDLE *EnumHandle,_Out_ PVOID *ErrorBlob,_Out_ size_t *BlobSize)
RPC_STATUS RPC_ENTRY rpcrt4.RpcBindingServerFromClient(RPC_BINDING_HANDLE ClientBinding None,RPC_BINDING_HANDLE *ServerBinding None)
void None wldap32.ber_bvecfree(_In_ PBERVAL *pBerVal)
ULONG None wldap32.ldap_search_s(_In_ LDAP *ld,_In_ PCHAR base,_In_ ULONG scope,_In_ PCHAR filter,_In_ PCHAR attrs[],_In_ ULONG attrsonly,_Out_ LDAPMessage **res)
ULONG None wldap32.ldap_search_sW(_In_ LDAP *ld,_In_ PCHAR base,_In_ ULONG scope,_In_ PCHAR filter,_In_ PCHAR attrs[],_In_ ULONG attrsonly,_Out_ LDAPMessage **res)
ULONG None wldap32.ldap_search_sA(_In_ LDAP *ld,_In_ PCHAR base,_In_ ULONG scope,_In_ PCHAR filter,_In_ PCHAR attrs[],_In_ ULONG attrsonly,_Out_ LDAPMessage **res)
NET_API_STATUS None netapi32.NetServerTransportAdd(_In_ LPWSTR servername,_In_ DWORD level,_In_ LPBYTE bufptr)
ULONG None wldap32.ldap_add_ext(_In_ LDAP *ld,_In_ PCHAR dn,_In_ LDAPMod *attrs[],_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls,_Out_ ULONG *MessageNumber)
ULONG None wldap32.ldap_add_extW(_In_ LDAP *ld,_In_ PCHAR dn,_In_ LDAPMod *attrs[],_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls,_Out_ ULONG *MessageNumber)
ULONG None wldap32.ldap_add_extA(_In_ LDAP *ld,_In_ PCHAR dn,_In_ LDAPMod *attrs[],_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls,_Out_ ULONG *MessageNumber)
PCHAR None wldap32.ldap_err2string(_In_ ULONG err)
PCHAR None wldap32.ldap_err2stringW(_In_ ULONG err)
PCHAR None wldap32.ldap_err2stringA(_In_ ULONG err)
ULONG None wldap32.ldap_controls_free(_In_ LDAPControl **Controls)
ULONG None wldap32.ldap_controls_freeW(_In_ LDAPControl **Controls)
ULONG None wldap32.ldap_controls_freeA(_In_ LDAPControl **Controls)
BOOLEAN _cdecl None.QUERYCLIENTCERT(_In_ PLDAP Connection,_In_ PSecPkgContext_IssuerListInfoEx trusted_CAs,_Inout_ PCCERT_CONTEXT *ppCertificate)
ULONG None wldap32.ldap_modrdn2_s(_In_ LDAP *ExternalHandle,_In_ PCHAR DistinguishedName,_In_ PCHAR NewDistinguishedName,_In_ INT DeleteOldRdn)
ULONG None wldap32.ldap_modrdn2_sW(_In_ LDAP *ExternalHandle,_In_ PCHAR DistinguishedName,_In_ PCHAR NewDistinguishedName,_In_ INT DeleteOldRdn)
ULONG None wldap32.ldap_modrdn2_sA(_In_ LDAP *ExternalHandle,_In_ PCHAR DistinguishedName,_In_ PCHAR NewDistinguishedName,_In_ INT DeleteOldRdn)
RPC_STATUS RPC_ENTRY rpcrt4.RpcBindingInqObject(RPC_BINDING_HANDLE Binding None,UUID *ObjectUuid None)
INT None wldap32.ber_printf(_Inout_ BerElement *pBerElement,_In_ PCHAR fmt,_In_ ... None)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsGroupDelete(unsigned long GroupNameSyntax,unsigned char *GroupName)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsGroupDeleteW(unsigned long GroupNameSyntax,unsigned char *GroupName)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsGroupDeleteA(unsigned long GroupNameSyntax,unsigned char *GroupName)
RPC_STATUS RPC_ENTRY rpcrt4.RpcServerInqBindings(RPC_BINDING_VECTOR **BindingVector None)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsEntryObjectInqBegin(unsigned long EntryNameSyntax,unsigned char *EntryName,RPC_NS_HANDLE *InquiryContext None)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsEntryObjectInqBeginW(unsigned long EntryNameSyntax,unsigned char *EntryName,RPC_NS_HANDLE *InquiryContext None)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsEntryObjectInqBeginA(unsigned long EntryNameSyntax,unsigned char *EntryName,RPC_NS_HANDLE *InquiryContext None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcMgmtEpEltInqBegin(RPC_BINDING_HANDLE EpBinding None,unsigned long InquiryType,RPC_IF_ID *IfId None,unsigned long VersOption,UUID *ObjectUuid None,RPC_EP_INQ_HANDLE *InquiryContext None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcMgmtEpEltInqDone(RPC_EP_INQ_HANDLE *InquiryContext None)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsBindingSelect(RPC_BINDING_VECTOR *BindingVec None,RPC_BINDING_HANDLE *Binding None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcErrorAddRecord(_In_ RPC_EXTENDED_ERROR_INFO *ErrorInfo)
RPC_STATUS RPC_ENTRY rpcrt4.RpcServerRegisterIf2(RPC_IF_HANDLE IfSpec None,UUID *MgrTypeUuid None,RPC_MGR_EPV *MgrEpv None,unsigned int Flags,unsigned int MaxCalls,unsigned int MaxRpcSize,RPC_IF_CALLBACK_FN *IfCallbackFn None)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsBindingUnexport(unsigned long EntryNameSyntax,unsigned char *EntryName,RPC_IF_HANDLE IfSpec None,UUID_VECTOR *ObjectUuidVec None)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsBindingUnexportW(unsigned long EntryNameSyntax,unsigned char *EntryName,RPC_IF_HANDLE IfSpec None,UUID_VECTOR *ObjectUuidVec None)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsBindingUnexportA(unsigned long EntryNameSyntax,unsigned char *EntryName,RPC_IF_HANDLE IfSpec None,UUID_VECTOR *ObjectUuidVec None)
ULONG None wldap32.ldap_modrdn2(_In_ LDAP *ExternalHandle,_In_ PCHAR DistinguishedName,_In_ PCHAR NewDistinguishedName,_In_ INT DeleteOldRdn)
ULONG None wldap32.ldap_modrdn2W(_In_ LDAP *ExternalHandle,_In_ PCHAR DistinguishedName,_In_ PCHAR NewDistinguishedName,_In_ INT DeleteOldRdn)
ULONG None wldap32.ldap_modrdn2A(_In_ LDAP *ExternalHandle,_In_ PCHAR DistinguishedName,_In_ PCHAR NewDistinguishedName,_In_ INT DeleteOldRdn)
RPC_STATUS RPC_ENTRY rpcrt4.RpcMgmtEnableIdleCleanup(void None None)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsBindingSelect(RPC_BINDING_VECTOR *BindingVec None,RPC_BINDING_HANDLE *Binding None)
ULONG None wldap32.ldap_search_ext(_In_ LDAP *ld,_In_ PCHAR base,_In_ ULONG scope,_In_ PCHAR filter,_In_ PCHAR attrs[],_In_ ULONG attrsonly,_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls,_In_ ULONG TimeLimit,_In_ ULONG SizeLimit,_Out_ ULONG *MessageNumber)
ULONG None wldap32.ldap_search_extW(_In_ LDAP *ld,_In_ PCHAR base,_In_ ULONG scope,_In_ PCHAR filter,_In_ PCHAR attrs[],_In_ ULONG attrsonly,_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls,_In_ ULONG TimeLimit,_In_ ULONG SizeLimit,_Out_ ULONG *MessageNumber)
ULONG None wldap32.ldap_search_extA(_In_ LDAP *ld,_In_ PCHAR base,_In_ ULONG scope,_In_ PCHAR filter,_In_ PCHAR attrs[],_In_ ULONG attrsonly,_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls,_In_ ULONG TimeLimit,_In_ ULONG SizeLimit,_Out_ ULONG *MessageNumber)
RPC_STATUS RPC_ENTRY rpcrt4.RpcBindingFree(RPC_BINDING_HANDLE *Binding None)
INT None wldap32.ldap_create_vlv_control(_In_ LDAP *ld,_In_ LDAPVLVInfo *Vlvinfop,_In_ char IsCritical,_Out_ LDAPControl **ctrlp)
INT None wldap32.ldap_create_vlv_controlW(_In_ LDAP *ld,_In_ LDAPVLVInfo *Vlvinfop,_In_ char IsCritical,_Out_ LDAPControl **ctrlp)
INT None wldap32.ldap_create_vlv_controlA(_In_ LDAP *ld,_In_ LDAPVLVInfo *Vlvinfop,_In_ char IsCritical,_Out_ LDAPControl **ctrlp)
ULONG None wldap32.ldap_get_next_page(_In_ PLDAP ExternalHandle,_In_ PLDAPSearch SearchHandle,_In_ ULONG PageSize,_Out_ ULONG *MessageNumber)
void RPC_ENTRY rpcrt4.RpcSsDisableAllocate(void None None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcBindingInqAuthClient(RPC_BINDING_HANDLE ClientBinding None,RPC_AUTHZ_HANDLE *Privs None,unsigned char **ServerPrincName,unsigned long *AuthnLevel,unsigned long *AuthnSvc,unsigned long *AuthzSvc)
RPC_STATUS RPC_ENTRY rpcrt4.RpcBindingInqAuthClientW(RPC_BINDING_HANDLE ClientBinding None,RPC_AUTHZ_HANDLE *Privs None,unsigned char **ServerPrincName,unsigned long *AuthnLevel,unsigned long *AuthnSvc,unsigned long *AuthzSvc)
RPC_STATUS RPC_ENTRY rpcrt4.RpcBindingInqAuthClientA(RPC_BINDING_HANDLE ClientBinding None,RPC_AUTHZ_HANDLE *Privs None,unsigned char **ServerPrincName,unsigned long *AuthnLevel,unsigned long *AuthnSvc,unsigned long *AuthzSvc)
RPC_STATUS RPC_ENTRY rpcrt4.RpcMgmtStatsVectorFree(RPC_STATS_VECTOR **StatsVector None)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsMgmtSetExpAge(unsigned long ExpirationAge)
RPC_STATUS RPC_ENTRY rpcrt4.MesIncrementalHandleReset(handle_t Handle None,void *UserState None,MIDL_ES_ALLOC AllocFn None,MIDL_ES_WRITE WriteFn None,MIDL_ES_READ ReadFn None,MIDL_ES_CODE OpCode None)
PCHAR None wldap32.ldap_first_attribute(_In_ LDAP *ld,_In_ LDAPMessage *entry,_Out_ BerElement **ptr)
PCHAR None wldap32.ldap_first_attributeW(_In_ LDAP *ld,_In_ LDAPMessage *entry,_Out_ BerElement **ptr)
PCHAR None wldap32.ldap_first_attributeA(_In_ LDAP *ld,_In_ LDAPMessage *entry,_Out_ BerElement **ptr)
RPC_STATUS RPC_ENTRY rpcrt4.RpcServerUseProtseq(unsigned char *ProtSeq,unsigned int MaxCalls,void *SecurityDescriptor None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcServerUseProtseqW(unsigned char *ProtSeq,unsigned int MaxCalls,void *SecurityDescriptor None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcServerUseProtseqA(unsigned char *ProtSeq,unsigned int MaxCalls,void *SecurityDescriptor None)
NTSTATUS WINAPI netapi32.NetLogonSetServiceBits(_In_ LPWSTR ServerName,_In_ DWORD ServiceBitsOfInterest,_In_ DWORD ServiceBits)
void None wldap32.ber_free(_In_ BerElement *pBerElement,_In_ INT fbuf)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsMgmtEntryInqIfIds(unsigned long EntryNameSyntax,unsigned char *EntryName,RPC_IF_ID_VECTOR **IfIdVec None)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsMgmtEntryInqIfIdsW(unsigned long EntryNameSyntax,unsigned char *EntryName,RPC_IF_ID_VECTOR **IfIdVec None)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsMgmtEntryInqIfIdsA(unsigned long EntryNameSyntax,unsigned char *EntryName,RPC_IF_ID_VECTOR **IfIdVec None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcServerInterfaceGroupClose(_In_ RPC_INTERFACE_GROUP IfGroup)
BOOL None kernel32.IsValidCodePage(_In_ UINT CodePage)
ULONG None wldap32.ldap_rename_ext(_In_ LDAP *ld,_In_ PWCHAR dn,_In_ PWCHAR NewRDN,_In_ PWCHAR NewParent,_In_ INT DeleteOldRdn,_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls,_Out_ ULONG *MessageNumber)
ULONG None wldap32.ldap_rename_extW(_In_ LDAP *ld,_In_ PWCHAR dn,_In_ PWCHAR NewRDN,_In_ PWCHAR NewParent,_In_ INT DeleteOldRdn,_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls,_Out_ ULONG *MessageNumber)
ULONG None wldap32.ldap_rename_extA(_In_ LDAP *ld,_In_ PWCHAR dn,_In_ PWCHAR NewRDN,_In_ PWCHAR NewParent,_In_ INT DeleteOldRdn,_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls,_Out_ ULONG *MessageNumber)
BOOL WINAPI None.RoOriginateError(_In_ HRESULT error,_In_ HSTRING message)
RPC_STATUS RPC_ENTRY rpcrt4.RpcImpersonateClient(RPC_BINDING_HANDLE BindingHandle None)
HRESULT WINAPI webservices.WsResetMessage(_In_ WS_MESSAGE* message,_In_opt_ WS_ERROR* error)
RPC_STATUS RPC_ENTRY rpcrt4.RpcBindingReset(RPC_BINDING_HANDLE Binding None)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsBindingUnexportPnP(unsigned long EntryNameSyntax,unsigned char *EntryName,RPC_IF_HANDLE IfSpec None,UUID_VECTOR *ObjectUuidVec None)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsBindingUnexportPnPW(unsigned long EntryNameSyntax,unsigned char *EntryName,RPC_IF_HANDLE IfSpec None,UUID_VECTOR *ObjectUuidVec None)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsBindingUnexportPnPA(unsigned long EntryNameSyntax,unsigned char *EntryName,RPC_IF_HANDLE IfSpec None,UUID_VECTOR *ObjectUuidVec None)
RPC_SS_THREAD_HANDLE RPC_ENTRY rpcrt4.RpcSmGetThreadHandle(RPC_STATUS *pStatus None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcSmSwapClientAllocFree(RPC_CLIENT_ALLOC *pfnAllocate None,RPC_CLIENT_FREE *pfnFree None,RPC_CLIENT_ALLOC **pfnOldAllocate None,RPC_CLIENT_FREE **pfnOldFree None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcServerUseProtseqIfEx(unsigned char *Protseq,unsigned int MaxCalls,RPC_IF_HANDLE IfSpec None,void *SecurityDescriptor None,PRPC_POLICY Policy None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcServerUseProtseqIfExW(unsigned char *Protseq,unsigned int MaxCalls,RPC_IF_HANDLE IfSpec None,void *SecurityDescriptor None,PRPC_POLICY Policy None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcServerUseProtseqIfExA(unsigned char *Protseq,unsigned int MaxCalls,RPC_IF_HANDLE IfSpec None,void *SecurityDescriptor None,PRPC_POLICY Policy None)
ULONG None wldap32.ldap_bind(_In_ LDAP *ld,_In_ PCHAR dn,_In_ PCHAR cred,_In_ ULONG method)
ULONG None wldap32.ldap_bindW(_In_ LDAP *ld,_In_ PCHAR dn,_In_ PCHAR cred,_In_ ULONG method)
ULONG None wldap32.ldap_bindA(_In_ LDAP *ld,_In_ PCHAR dn,_In_ PCHAR cred,_In_ ULONG method)
RPC_STATUS None rpcrt4.RpcSsContextLockExclusive(_In_ RPC_BINDING_HANDLE ServerBindingHandle,_In_ PVOID UserContext)
VOID None wldap32.ldap_memfree(_In_ PCHAR Block)
VOID None wldap32.ldap_memfreeW(_In_ PCHAR Block)
VOID None wldap32.ldap_memfreeA(_In_ PCHAR Block)
NET_API_STATUS None netapi32.NetGroupDelUser(_In_ LPCWSTR servername,_In_ LPCWSTR GroupName,_In_ LPCWSTR Username)
RPC_ENTRY None rpcrt4.UuidCreateNil(UUID __RPC_FAR *Nil_Uuid)
RPC_STATUS RPC_ENTRY rpcrt4.RpcMgmtInqServerPrincName(RPC_BINDING_HANDLE Binding None,unsigned int AuthnSvc,unsigned char **ServerPrincName)
RPC_STATUS RPC_ENTRY rpcrt4.RpcMgmtInqServerPrincNameW(RPC_BINDING_HANDLE Binding None,unsigned int AuthnSvc,unsigned char **ServerPrincName)
RPC_STATUS RPC_ENTRY rpcrt4.RpcMgmtInqServerPrincNameA(RPC_BINDING_HANDLE Binding None,unsigned int AuthnSvc,unsigned char **ServerPrincName)
void None wldap32.ber_bvfree(_In_ BERVAL *pBerVal)
ULONG None wldap32.LdapGetLastError(void None None)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsEntryObjectInqDone(RPC_NS_HANDLE *InquiryContext None)
ULONG None wldap32.ldap_count_values(_In_ PCHAR *vals)
ULONG None wldap32.ldap_count_valuesW(_In_ PCHAR *vals)
ULONG None wldap32.ldap_count_valuesA(_In_ PCHAR *vals)
RPC_STATUS RPC_ENTRY rpcrt4.RpcTestCancel(void None None)
ULONG None wldap32.ldap_parse_sort_control(_In_ PLDAP ExternalHandle,_In_ PLDAPControl *Control,_Out_ ULONG *Result,_Out_ PCHAR *Attribute)
ULONG None wldap32.ldap_parse_sort_controlW(_In_ PLDAP ExternalHandle,_In_ PLDAPControl *Control,_Out_ ULONG *Result,_Out_ PCHAR *Attribute)
ULONG None wldap32.ldap_parse_sort_controlA(_In_ PLDAP ExternalHandle,_In_ PLDAPControl *Control,_Out_ ULONG *Result,_Out_ PCHAR *Attribute)
RPC_STATUS RPC_ENTRY rpcrt4.MesEncodeIncrementalHandleCreate(void *UserState None,MIDL_ES_ALLOC AllocFn None,MIDL_ES_WRITE WriteFn None,handle_t *pHandle None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcEpUnregister(RPC_IF_HANDLE IfSpec None,RPC_BINDING_VECTOR *BindingVector None,UUID_VECTOR *UuidVector None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcMgmtInqComTimeout(RPC_BINDING_HANDLE Binding None,unsigned int *Timeout)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsProfileEltInqNext(RPC_NS_HANDLE InquiryContext None,RPC_IF_ID *IfId None,unsigned char **MemberName,unsigned long *Priority,unsigned char **Annotation)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsProfileEltInqNextW(RPC_NS_HANDLE InquiryContext None,RPC_IF_ID *IfId None,unsigned char **MemberName,unsigned long *Priority,unsigned char **Annotation)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsProfileEltInqNextA(RPC_NS_HANDLE InquiryContext None,RPC_IF_ID *IfId None,unsigned char **MemberName,unsigned long *Priority,unsigned char **Annotation)
void None rpcrt4.RpcCertGeneratePrincipalName(PCCERT_CONTEXT Context None,DWORD Flags None,UCHAR **pBuffer None)
void None rpcrt4.RpcCertGeneratePrincipalNameW(PCCERT_CONTEXT Context None,DWORD Flags None,UCHAR **pBuffer None)
void None rpcrt4.RpcCertGeneratePrincipalNameA(PCCERT_CONTEXT Context None,DWORD Flags None,UCHAR **pBuffer None)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsGroupMbrInqDone(RPC_NS_HANDLE *InquiryContext None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcSmClientFree(void *NodeToFree None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcServerUseAllProtseqsEx(unsigned int MaxCalls,void *SecurityDescriptor None,PRPC_POLICY Policy None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcServerRegisterAuthInfo(unsigned char *ServerPrincName,unsigned long AuthnSvc,RPC_AUTH_KEY_RETRIEVAL_FN GetKeyFn None,void *Arg None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcServerRegisterAuthInfoW(unsigned char *ServerPrincName,unsigned long AuthnSvc,RPC_AUTH_KEY_RETRIEVAL_FN GetKeyFn None,void *Arg None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcServerRegisterAuthInfoA(unsigned char *ServerPrincName,unsigned long AuthnSvc,RPC_AUTH_KEY_RETRIEVAL_FN GetKeyFn None,void *Arg None)
BOOLEAN None wldap32.ldap_stop_tls_s(_In_ PLDAP ExternalHandle)
RPC_STATUS RPC_ENTRY rpcrt4.RpcBindingCopy(RPC_BINDING_HANDLE SourceBinding None,RPC_BINDING_HANDLE *DestinationBinding None)
HRESULT None oleaut32.SafeArraySetRecordInfo(_In_ SAFEARRAY *psa,_In_ IRecordInfo *prinfo)
RPC_STATUS RPC_ENTRY rpcrt4.RpcBindingInqAuthClientEx(RPC_BINDING_HANDLE ClientBinding None,RPC_AUTHZ_HANDLE *Privs None,unsigned char **ServerPrincName,unsigned long *AuthnLevel,unsigned long *AuthnSvc,unsigned long *AuthzSvc,unsigned long flags)
RPC_STATUS RPC_ENTRY rpcrt4.RpcBindingInqAuthClientExW(RPC_BINDING_HANDLE ClientBinding None,RPC_AUTHZ_HANDLE *Privs None,unsigned char **ServerPrincName,unsigned long *AuthnLevel,unsigned long *AuthnSvc,unsigned long *AuthzSvc,unsigned long flags)
RPC_STATUS RPC_ENTRY rpcrt4.RpcBindingInqAuthClientExA(RPC_BINDING_HANDLE ClientBinding None,RPC_AUTHZ_HANDLE *Privs None,unsigned char **ServerPrincName,unsigned long *AuthnLevel,unsigned long *AuthnSvc,unsigned long *AuthzSvc,unsigned long flags)
void RPC_ENTRY rpcrt4.RpcUserFree(handle_t AsyncHandle None,void *pBuffer None)
RPC_STATUS RPC_ENTRY rpcrt4.UuidCreate(UUID __RPC_FAR *Uuid)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsProfileEltInqBegin(unsigned long ProfileNameSyntax,unsigned char *ProfileName,unsigned long InquiryType,RPC_IF_ID *IfId None,unsigned long VersOption,unsigned long MemberNameSyntax,unsigned char *MemberName,RPC_NS_HANDLE *InquiryContext None)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsProfileEltInqBeginW(unsigned long ProfileNameSyntax,unsigned char *ProfileName,unsigned long InquiryType,RPC_IF_ID *IfId None,unsigned long VersOption,unsigned long MemberNameSyntax,unsigned char *MemberName,RPC_NS_HANDLE *InquiryContext None)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsProfileEltInqBeginA(unsigned long ProfileNameSyntax,unsigned char *ProfileName,unsigned long InquiryType,RPC_IF_ID *IfId None,unsigned long VersOption,unsigned long MemberNameSyntax,unsigned char *MemberName,RPC_NS_HANDLE *InquiryContext None)
BOOL WINAPI ncrypt.NCryptIsKeyHandle(_In_ NCRYPT_KEY_HANDLE hKey)
RPC_STATUS RPC_ENTRY rpcrt4.RpcMgmtSetAuthorizationFn(RPC_MGMT_AUTHORIZATION_FN AuthorizationFn None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcObjectSetType(UUID *ObjUuid None,UUID *TypeUuid None)
RPC_STATUS WINAPI rpcrt4.RpcServerInterfaceGroupInqBindings(_In_ RPC_INTERFACE_GROUP IfGroup,_Out_ RPC_BINDING_VECTOR *BindingVector)
ULONG None wldap32.ldap_search(_In_ LDAP *ld,_In_ PCHAR base,_In_ ULONG scope,_In_ PCHAR filter,_In_ PCHAR attrs[],_In_ ULONG attrsonly)
ULONG None wldap32.ldap_searchW(_In_ LDAP *ld,_In_ PCHAR base,_In_ ULONG scope,_In_ PCHAR filter,_In_ PCHAR attrs[],_In_ ULONG attrsonly)
ULONG None wldap32.ldap_searchA(_In_ LDAP *ld,_In_ PCHAR base,_In_ ULONG scope,_In_ PCHAR filter,_In_ PCHAR attrs[],_In_ ULONG attrsonly)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsMgmtInqExpAge(unsigned long *ExpirationAge)
RPC_STATUS RPC_ENTRY rpcrt4.RpcMgmtEpEltInqNext(RPC_EP_INQ_HANDLE InquiryContext None,RPC_IF_ID *IfId None,RPC_BINDING_HANDLE *Binding None,UUID *ObjectUuid None,unsigned char **Annotation)
RPC_STATUS RPC_ENTRY rpcrt4.RpcMgmtEpEltInqNextW(RPC_EP_INQ_HANDLE InquiryContext None,RPC_IF_ID *IfId None,RPC_BINDING_HANDLE *Binding None,UUID *ObjectUuid None,unsigned char **Annotation)
RPC_STATUS RPC_ENTRY rpcrt4.RpcMgmtEpEltInqNextA(RPC_EP_INQ_HANDLE InquiryContext None,RPC_IF_ID *IfId None,RPC_BINDING_HANDLE *Binding None,UUID *ObjectUuid None,unsigned char **Annotation)
ULONG None wldap32.ldap_simple_bind_s(_In_ LDAP *ld,_In_ PCHAR dn,_In_ PCHAR passwd)
ULONG None wldap32.ldap_simple_bind_sW(_In_ LDAP *ld,_In_ PCHAR dn,_In_ PCHAR passwd)
ULONG None wldap32.ldap_simple_bind_sA(_In_ LDAP *ld,_In_ PCHAR dn,_In_ PCHAR passwd)
ULONG None wldap32.ldap_count_entries(_In_ LDAP *ld,_In_ LDAPMessage *res)
RPC_STATUS RPC_ENTRY rpcrt4.MesDecodeIncrementalHandleCreate(void *UserState None,MIDL_ES_READ ReadFn None,handle_t *pHandle None)
ULONG None wldap32.ldap_count_references(_In_ LDAP *ld,_In_ LDAPMessage *res)
RPC_STATUS RPC_ENTRY rpcrt4.RpcObjectSetInqFn(RPC_OBJECT_INQ_FN InquiryFn None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcRevertContainerImpersonation(void None None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcBindingInqOption(RPC_BINDING_HANDLE hBinding None,unsigned long Option,unsigned long *pOptionValue)
INT None wldap32.ber_scanf(_Inout_ BerElement *pBerElement,_In_ PCHAR fmt,_In_ ... None)
RPC_STATUS None rpcrt4.RpcBindingCreate(_In_ RPC_BINDING_HANDLE_TEMPLATE *Template,_In_opt_ RPC_BINDING_HANDLE_SECURITY *Security,_In_opt_ RPC_BINDING_HANDLE_OPTIONS *Options,_Out_ RPC_BINDING_HANDLE *Binding)
RPC_STATUS None rpcrt4.RpcBindingCreateW(_In_ RPC_BINDING_HANDLE_TEMPLATE *Template,_In_opt_ RPC_BINDING_HANDLE_SECURITY *Security,_In_opt_ RPC_BINDING_HANDLE_OPTIONS *Options,_Out_ RPC_BINDING_HANDLE *Binding)
RPC_STATUS None rpcrt4.RpcBindingCreateA(_In_ RPC_BINDING_HANDLE_TEMPLATE *Template,_In_opt_ RPC_BINDING_HANDLE_SECURITY *Security,_In_opt_ RPC_BINDING_HANDLE_OPTIONS *Options,_Out_ RPC_BINDING_HANDLE *Binding)
RPC_STATUS RPC_ENTRY rpcrt4.MesInqProcEncodingId(handle_t Handle None,PRPC_SYNTAX_IDENTIFIER pInterfaceId None,unsigned long *pProcNum)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsMgmtHandleSetExpAge(RPC_NS_HANDLE NsHandle None,unsigned long ExpirationAge)
RPC_STATUS RPC_ENTRY rpcrt4.RpcBindingSetOption(RPC_BINDING_HANDLE hBinding None,unsigned long Option,unsigned long OptionValue)
RPC_STATUS RPC_ENTRY rpcrt4.RpcStringFree(unsigned char **String)
RPC_STATUS RPC_ENTRY rpcrt4.RpcStringFreeW(unsigned char **String)
RPC_STATUS RPC_ENTRY rpcrt4.RpcStringFreeA(unsigned char **String)
RPC_STATUS RPC_ENTRY rpcrt4.RpcServerInterfaceGroupActivate(_In_ RPC_INTERFACE_GROUP IfGroup)
RPC_STATUS RPC_ENTRY rpcrt4.RpcCancelThread(HANDLE ThreadHandle None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcMgmtInqIfIds(RPC_BINDING_HANDLE Binding None,RPC_IF_ID_VECTOR **IfIdVector None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcMgmtInqIfIds(RPC_BINDING_HANDLE Binding None,RPC_IF_ID_VECTOR **IfIdVector None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcNetworkInqProtseqs(RPC_PROTSEQ_VECTOR **ProtSeqVector None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcNetworkInqProtseqsW(RPC_PROTSEQ_VECTOR **ProtSeqVector None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcNetworkInqProtseqsA(RPC_PROTSEQ_VECTOR **ProtSeqVector None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcBindingToStringBinding(RPC_BINDING_HANDLE Binding None,unsigned char **StringBinding)
RPC_STATUS RPC_ENTRY rpcrt4.RpcBindingToStringBindingW(RPC_BINDING_HANDLE Binding None,unsigned char **StringBinding)
RPC_STATUS RPC_ENTRY rpcrt4.RpcBindingToStringBindingA(RPC_BINDING_HANDLE Binding None,unsigned char **StringBinding)
HRESULT None oleaut32.SafeArrayRedim(_Inout_ SAFEARRAY *psa,_In_ SAFEARRAYBOUND *psaboundNew)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsProfileDelete(unsigned long ProfileNameSyntax,unsigned char *ProfileName)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsProfileDeleteW(unsigned long ProfileNameSyntax,unsigned char *ProfileName)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsProfileDeleteA(unsigned long ProfileNameSyntax,unsigned char *ProfileName)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsEntryExpandName(unsigned long EntryNameSyntax,unsigned char *EntryName,unsigned char **ExpandedName)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsEntryExpandNameW(unsigned long EntryNameSyntax,unsigned char *EntryName,unsigned char **ExpandedName)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsEntryExpandNameA(unsigned long EntryNameSyntax,unsigned char *EntryName,unsigned char **ExpandedName)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsGroupMbrAdd(unsigned long GroupNameSyntax,unsigned char *GroupName,unsigned long MemberNameSyntax,unsigned char *MemberName)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsGroupMbrAddW(unsigned long GroupNameSyntax,unsigned char *GroupName,unsigned long MemberNameSyntax,unsigned char *MemberName)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsGroupMbrAddA(unsigned long GroupNameSyntax,unsigned char *GroupName,unsigned long MemberNameSyntax,unsigned char *MemberName)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsEntryObjectInqNext(RPC_NS_HANDLE InquiryContext None,UUID *ObjUuid None)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsMgmtEntryDelete(unsigned long EntryNameSyntax,unsigned char *EntryName)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsMgmtEntryDeleteW(unsigned long EntryNameSyntax,unsigned char *EntryName)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsMgmtEntryDeleteA(unsigned long EntryNameSyntax,unsigned char *EntryName)
typedef None None.ULONG(_cdecl QUERYFORCONNECTION None)
int RPC_ENTRY rpcrt4.UuidIsNil(UUID __RPC_FAR *Uuid,RPC_STATUS __RPC_FAR *Status)
RPC_STATUS None rpcrt4.RpcBindingBind(_In_opt_ PRPC_ASYNC_STATE pAsync,_In_ RPC_BINDING_HANDLE Binding,_In_ RPC_IF_HANDLE IfSpec)
RPC_STATUS RPC_ENTRY rpcrt4.RpcBindingSetAuthInfo(RPC_BINDING_HANDLE Binding None,unsigned char *ServerPrincName,unsigned long AuthnLevel,unsigned long AuthnSvc,RPC_AUTH_IDENTITY_HANDLE AuthIdentity None,unsigned long AuthzService)
RPC_STATUS RPC_ENTRY rpcrt4.RpcBindingSetAuthInfoW(RPC_BINDING_HANDLE Binding None,unsigned char *ServerPrincName,unsigned long AuthnLevel,unsigned long AuthnSvc,RPC_AUTH_IDENTITY_HANDLE AuthIdentity None,unsigned long AuthzService)
RPC_STATUS RPC_ENTRY rpcrt4.RpcBindingSetAuthInfoA(RPC_BINDING_HANDLE Binding None,unsigned char *ServerPrincName,unsigned long AuthnLevel,unsigned long AuthnSvc,RPC_AUTH_IDENTITY_HANDLE AuthIdentity None,unsigned long AuthzService)
RPC_STATUS RPC_ENTRY rpcrt4.RpcEpResolveBinding(RPC_BINDING_HANDLE Binding None,RPC_IF_HANDLE IfSpec None)
void RPC_ENTRY rpcrt4.RpcSsSetClientAllocFree(RPC_CLIENT_ALLOC *pfnAllocate None,RPC_CLIENT_FREE *pfnFree None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcMgmtSetServerStackSize(unsigned int ThreadStackSize)
void RPC_ENTRY rpcrt4.RpcSsDestroyClientContext(void **ContextHandle None)
NET_API_STATUS WINAPI netapi32.NetCreateProvisioningPackage(_In_ PNETSETUP_PROVISIONING_PARAMS pProvisioningParams,_Out_opt_ PBYTE *pPackageBinData,_Out_opt_ DWORD *pdwPackageBinDataSize,_Out_opt_ LPWSTR *pPackageTextData)
RPC_STATUS RPC_ENTRY rpcrt4.RpcServerRegisterIf(RPC_IF_HANDLE IfSpec None,UUID *MgrTypeUuid None,RPC_MGR_EPV *MgrEpv None)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsBindingImportBegin(unsigned long EntryNameSyntax,unsigned char *EntryName,RPC_IF_HANDLE IfSpec None,UUID *ObjUuid None,RPC_NS_HANDLE *ImportContext None)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsBindingImportBeginW(unsigned long EntryNameSyntax,unsigned char *EntryName,RPC_IF_HANDLE IfSpec None,UUID *ObjUuid None,RPC_NS_HANDLE *ImportContext None)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsBindingImportBeginA(unsigned long EntryNameSyntax,unsigned char *EntryName,RPC_IF_HANDLE IfSpec None,UUID *ObjUuid None,RPC_NS_HANDLE *ImportContext None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcBindingFree(RPC_BINDING_HANDLE *Binding None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcServerUseProtseqEp(unsigned char *Protseq,unsigned int MaxCalls,unsigned char *Endpoint,void *SecurityDescriptor None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcServerUseProtseqEpW(unsigned char *Protseq,unsigned int MaxCalls,unsigned char *Endpoint,void *SecurityDescriptor None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcServerUseProtseqEpA(unsigned char *Protseq,unsigned int MaxCalls,unsigned char *Endpoint,void *SecurityDescriptor None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcServerInqIf(RPC_IF_HANDLE IfSpec None,UUID *MgrTypeUuid None,RPC_MGR_EPV **MgrEpv None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcMgmtEpUnregister(RPC_BINDING_HANDLE EpBinding None,RPC_IF_ID *IfId None,RPC_BINDING_HANDLE Binding None,UUID *ObjectUuid None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcServerTestCancel(RPC_BINDING_HANDLE BindingHandle None)
ULONG None wldap32.ldap_get_paged_count(_In_ PLDAP ExternalHandle,_In_ PLDAPSearch SearchBlock,_Out_ ULONG *TotalCount,_Out_ PLDAPMessage Results)
RPC_STATUS RPC_ENTRY rpcrt4.RpcBindingSetObject(RPC_BINDING_HANDLE Binding None,UUID *ObjectUuid None)
LCID None nlsmap.DownlevelLocaleNameToLCID(_In_ LPWSTR lpName,_In_ DWORD dwFlags)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsBindingImportDone(RPC_NS_HANDLE *ImportContext None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcMgmtStopServerListening(RPC_BINDING_HANDLE Binding None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcServerRegisterIfEx(RPC_IF_HANDLE IfSpec None,UUID *MgrTypeUuid None,RPC_MGR_EPV *MgrEpv None,unsigned int Flags,unsigned int MaxCalls,RPC_IF_CALLBACK_FN *IfCallback None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcImpersonateClientContainer(_In_opt_ RPC_BINDING_HANDLE BindingHandle)
void None None.VoidFunc1(void None None)
RPC_STATUS RPC_ENTRY rpcrt4.MesBufferHandleReset(handle_t Handle None,unsigned long HandleStyle,MIDL_ES_CODE OpCode None,char **ppBuffer None,unsigned long BufferSize,unsigned long *pEncodedSize)
HCERTSTORE WINAPI crypt32.CertOpenSystemStore(_In_ HCRYPTPROV_LEGACY hprov,_In_ LPTCSTR szSubsystemProtocol)
HCERTSTORE WINAPI crypt32.CertOpenSystemStoreW(_In_ HCRYPTPROV_LEGACY hprov,_In_ LPTCSTR szSubsystemProtocol)
HCERTSTORE WINAPI crypt32.CertOpenSystemStoreA(_In_ HCRYPTPROV_LEGACY hprov,_In_ LPTCSTR szSubsystemProtocol)
SECURITY_STATUS WINAPI ncrypt.NCryptFreeBuffer(_In_ PVOID pvInput)
RPC_STATUS RPC_ENTRY rpcrt4.RpcMgmtStatsVectorFree(RPC_STATS_VECTOR **StatsVector None)
RPC_STATUS RPC_ENTRY rpcrt4.MesEncodeFixedBufferHandleCreate(char *Buffer None,unsigned long BufferSize,unsigned long *pEncodedSize,handle_t *pHandle None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcServerUseAllProtseqsIfEx(unsigned int MaxCalls,RPC_IF_HANDLE IfSpec None,void *SecurityDescriptor None,PRPC_POLICY Policy None)
SECURITY_STATUS WINAPI ncrypt.NCryptVerifySignature(_In_ NCRYPT_KEY_HANDLE hKey,_In_opt_ VOID *pPaddingInfo,_In_ PBYTE pbHashValue,_In_ DWORD cbHashValue,_In_ PBYTE pbSignature,_In_ DWORD cbSignature,_In_ DWORD dwFlags)
void None None.WS_GET_LISTENER_PROPERTY_CALLBACK(_In_ void* listenerInstance,_In_ WS_LISTENER_PROPERTY_ID id,void* value None,_In_ ULONG valueSize,_In_opt_ WS_ERROR* error)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsGroupMbrInqDone(RPC_NS_HANDLE *InquiryContext None)
NET_API_STATUS None netapi32.NetShareSetInfo(_In_ LPWSTR servername,_In_ LPWSTR netname,_In_ DWORD level,_In_ LPBYTE buf,_Out_ LPDWORD parm_err)
RPC_STATUS RPC_ENTRY rpcrt4.RpcServerInqDefaultPrincName(unsigned long AuthnSvc,RPC_CHAR **PrincName None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcServerInqDefaultPrincNameW(unsigned long AuthnSvc,RPC_CHAR **PrincName None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcServerInqDefaultPrincNameA(unsigned long AuthnSvc,RPC_CHAR **PrincName None)
LPVOID None ole32.CoTaskMemRealloc(_In_opt_ LPVOID pv,_In_ SIZE_T cb)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsProfileEltAdd(unsigned long ProfileNameSyntax,unsigned char *ProfileName,RPC_IF_ID *IfId None,unsigned long MemberNameSyntax,unsigned char *MemberName,unsigned long Priority,unsigned char *Annotation)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsProfileEltAddW(unsigned long ProfileNameSyntax,unsigned char *ProfileName,RPC_IF_ID *IfId None,unsigned long MemberNameSyntax,unsigned char *MemberName,unsigned long Priority,unsigned char *Annotation)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsProfileEltAddA(unsigned long ProfileNameSyntax,unsigned char *ProfileName,RPC_IF_ID *IfId None,unsigned long MemberNameSyntax,unsigned char *MemberName,unsigned long Priority,unsigned char *Annotation)
RPC_STATUS RPC_ENTRY rpcrt4.RpcServerUseAllProtseqsIf(unsigned int MaxCalls,RPC_IF_HANDLE IfSpec None,void *SecurityDescriptor None)
ULONG None wldap32.ldap_create_sort_control(_In_ PLDAP ExternalHandle,_In_ PLDAPSortKey *SortKeys,_In_ UCHAR IsCritical,_Out_ PLDAPControl *Control)
ULONG None wldap32.ldap_create_sort_controlW(_In_ PLDAP ExternalHandle,_In_ PLDAPSortKey *SortKeys,_In_ UCHAR IsCritical,_Out_ PLDAPControl *Control)
ULONG None wldap32.ldap_create_sort_controlA(_In_ PLDAP ExternalHandle,_In_ PLDAPSortKey *SortKeys,_In_ UCHAR IsCritical,_Out_ PLDAPControl *Control)
RPC_STATUS RPC_ENTRY rpcrt4.RpcFreeAuthorizationContext(_In_ PVOID *pAuthzClientContext)
HRESULT WINAPI webservices.WsGetErrorString(_In_ WS_ERROR* error,_In_ ULONG index,_Out_ WS_STRING* *string)
RPC_STATUS RPC_ENTRY rpcrt4.RpcAsyncCancelCall(PRPC_ASYNC_STATE pAsync None,BOOL fAbortCall None)
ULONG None wldap32.ldap_parse_result(_In_ LDAP *Connection,_In_ LDAPMessage *ResultMessage,_Out_opt_ ULONG *ReturnCode,_Out_opt_ PWCHAR *MatchedDNs,_Out_opt_ PWCHAR *ErrorMessage,_Out_opt_ PWCHAR **Referrals,_Out_opt_ PLDAPControl **ServerControls,_In_ BOOLEAN Freeit)
ULONG None wldap32.ldap_parse_resultW(_In_ LDAP *Connection,_In_ LDAPMessage *ResultMessage,_Out_opt_ ULONG *ReturnCode,_Out_opt_ PWCHAR *MatchedDNs,_Out_opt_ PWCHAR *ErrorMessage,_Out_opt_ PWCHAR **Referrals,_Out_opt_ PLDAPControl **ServerControls,_In_ BOOLEAN Freeit)
ULONG None wldap32.ldap_parse_resultA(_In_ LDAP *Connection,_In_ LDAPMessage *ResultMessage,_Out_opt_ ULONG *ReturnCode,_Out_opt_ PWCHAR *MatchedDNs,_Out_opt_ PWCHAR *ErrorMessage,_Out_opt_ PWCHAR **Referrals,_Out_opt_ PLDAPControl **ServerControls,_In_ BOOLEAN Freeit)
RPC_STATUS RPC_ENTRY rpcrt4.RpcProtseqVectorFree(RPC_PROTSEQ_VECTOR **ProtSeqVector None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcProtseqVectorFreeW(RPC_PROTSEQ_VECTOR **ProtSeqVector None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcProtseqVectorFreeA(RPC_PROTSEQ_VECTOR **ProtSeqVector None)
void RPC_ENTRY rpcrt4.RpcSsEnableAllocate(void None None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcBindingVectorFree(RPC_BINDING_VECTOR **BindingVector None)
void RPC_ENTRY rpcrt4.RpcSsSwapClientAllocFree(RPC_CLIENT_ALLOC *pfnAllocate None,RPC_CLIENT_FREE *pfnFree None,RPC_CLIENT_ALLOC **pfnOldAllocate None,RPC_CLIENT_FREE **pfnOldFree None)
NTSTATUS None advapi32.LsaEnumerateTrustedDomainsEx(_In_ LSA_HANDLE PolicyHandle,_In_ PLSA_ENUMERATION_HANDLE EnumerationContext,_Out_ PVOID *Buffer,_In_ ULONG PreferredMaximumLength,_Out_ PULONG CountReturned)
BOOL None kernel32.IsValidLocale(_In_ LCID Locale,_In_ DWORD dwFlags)
RPC_STATUS RPC_ENTRY rpcrt4.RpcBindingInqAuthInfo(RPC_BINDING_HANDLE Binding None,RPC_CHAR **ServerPrincName None,unsigned long *AuthnLevel,unsigned long *AuthnSvc,RPC_AUTH_IDENTITY_HANDLE *AuthIdentity None,unsigned long *AuthzSvc)
RPC_STATUS RPC_ENTRY rpcrt4.RpcBindingInqAuthInfoW(RPC_BINDING_HANDLE Binding None,RPC_CHAR **ServerPrincName None,unsigned long *AuthnLevel,unsigned long *AuthnSvc,RPC_AUTH_IDENTITY_HANDLE *AuthIdentity None,unsigned long *AuthzSvc)
RPC_STATUS RPC_ENTRY rpcrt4.RpcBindingInqAuthInfoA(RPC_BINDING_HANDLE Binding None,RPC_CHAR **ServerPrincName None,unsigned long *AuthnLevel,unsigned long *AuthnSvc,RPC_AUTH_IDENTITY_HANDLE *AuthIdentity None,unsigned long *AuthzSvc)
RPC_STATUS RPC_ENTRY rpcrt4.RpcServerUnregisterIf(RPC_IF_HANDLE IfSpec None,UUID *MgrTypeUuid None,unsigned int WaitForCallsToComplete)
LONG WINAPI kernel32.GetStagedPackageOrigin(_In_ PCWSTR packageFullName,_Out_ PackageOrigin *origin)
RPC_STATUS RPC_ENTRY rpcrt4.RpcBindingFromStringBinding(unsigned char *StringBinding,RPC_BINDING_HANDLE *Binding None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcBindingFromStringBindingW(unsigned char *StringBinding,RPC_BINDING_HANDLE *Binding None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcBindingFromStringBindingA(unsigned char *StringBinding,RPC_BINDING_HANDLE *Binding None)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsBindingLookupNext(RPC_NS_HANDLE LookupContext None,RPC_BINDING_VECTOR **BindingVec None)
LCID None nlsmap.DownlevelLocaleNameToLCID(_In_ LPWSTR lpName,_In_ DWORD dwFlags)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsMgmtBindingUnexport(unsigned long EntryNameSyntax,unsigned char *EntryName,RPC_IF_ID *IfId None,unsigned long VersOption,UUID_VECTOR *ObjectUuidVec None)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsMgmtBindingUnexportW(unsigned long EntryNameSyntax,unsigned char *EntryName,RPC_IF_ID *IfId None,unsigned long VersOption,UUID_VECTOR *ObjectUuidVec None)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsMgmtBindingUnexportA(unsigned long EntryNameSyntax,unsigned char *EntryName,RPC_IF_ID *IfId None,unsigned long VersOption,UUID_VECTOR *ObjectUuidVec None)
RPC_STATUS RPC_ENTRY rpcdiag.RpcDiagnoseError(_In_ RPC_BINDING_HANDLE BindingHandle,_In_ RPC_IF_HANDLE IfSpec,_In_ RPC_STATUS RpcStatus,_In_opt_ RPC_ERROR_ENUM_HANDLE *EnumHandle,_In_ ULONG Options,_In_opt_ HWND ParentWindow)
void None None.WS_ABANDON_MESSAGE_CALLBACK(_In_ void* channelInstance,_In_ WS_MESSAGE* message,_In_opt_ WS_ERROR* error)
void None rpcrt4.RpcAsyncRegisterInfo(void None None)
SECURITY_STATUS WINAPI ncrypt.NCryptKeyDerivation(_In_ NCRYPT_KEY_HANDLE hKey,_In_ NCryptBufferDesc *pParameterList,_Out_ PUCHAR pbDerivedKey,_In_ DWORD cbDerivedKey,_Out_ DWORD *pcbResult,_In_ ULONG dwFlags)
RPC_STATUS RPC_ENTRY rpcrt4.RpcBindingReset(RPC_BINDING_HANDLE Binding None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcMgmtInqDefaultProtectLevel(unsigned int AuthnSvc,unsigned int *AuthnLevel)
RPC_STATUS RPC_ENTRY rpcrt4.RpcSmEnableAllocate(void None None)
RPC_STATUS RPC_ENTRY rpcrt4.MesHandleFree(handle_t Handle None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcMgmtSetComTimeout(RPC_BINDING_HANDLE Binding None,unsigned int Timeout)
RPC_STATUS RPC_ENTRY rpcrt4.RpcIfIdVectorFree(RPC_IF_ID_VECTOR **IfIdVec None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcEpRegister(RPC_IF_HANDLE IfSpec None,RPC_BINDING_VECTOR *BindingVector None,UUID_VECTOR *UuidVector None,unsigned char *Annotation)
RPC_STATUS RPC_ENTRY rpcrt4.RpcEpRegisterW(RPC_IF_HANDLE IfSpec None,RPC_BINDING_VECTOR *BindingVector None,UUID_VECTOR *UuidVector None,unsigned char *Annotation)
RPC_STATUS RPC_ENTRY rpcrt4.RpcEpRegisterA(RPC_IF_HANDLE IfSpec None,RPC_BINDING_VECTOR *BindingVector None,UUID_VECTOR *UuidVector None,unsigned char *Annotation)
RPC_STATUS RPC_ENTRY rpcrt4.RpcStringBindingParse(TCHAR *StringBinding None,TCHAR **ObjectUuid None,TCHAR **ProtSeq None,TCHAR **NetworkAddr None,TCHAR **EndPoint None,TCHAR **NetworkOptions None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcStringBindingParseW(TCHAR *StringBinding None,TCHAR **ObjectUuid None,TCHAR **ProtSeq None,TCHAR **NetworkAddr None,TCHAR **EndPoint None,TCHAR **NetworkOptions None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcStringBindingParseA(TCHAR *StringBinding None,TCHAR **ObjectUuid None,TCHAR **ProtSeq None,TCHAR **NetworkAddr None,TCHAR **EndPoint None,TCHAR **NetworkOptions None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcMgmtWaitServerListen(void None None)
void None None.MyProcedure_notify_flag(boolean __MIDL_NotifyFlag None)
HRESULT None None.IFace_Remf1_Stub(parameter list None)
void RPC_ENTRY rpcrt4.RpcSsFree(void *NodeToFree None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcMgmtSetCancelTimeout(signed int Seconds)
RPC_STATUS RPC_ENTRY rpcrt4.RpcSmSetThreadHandle(RPC_SS_THREAD_HANDLE Handle None)
void RPC_ENTRY rpcrt4.RpcSsDontSerializeContext(void None None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcErrorLoadErrorInfo(_In_ PVOID ErrorBlob,_In_ size_t BlobSize,_Out_ RPC_ERROR_ENUM_HANDLE *EnumHandle)
RPC_STATUS RPC_ENTRY rpcrt4.RpcSmFree(void *NodeToFree None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcServerUseProtseqIf(unsigned char *Protseq,unsigned int MaxCalls,RPC_IF_HANDLE IfSpec None,void *SecurityDescriptor None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcServerUseProtseqIfW(unsigned char *Protseq,unsigned int MaxCalls,RPC_IF_HANDLE IfSpec None,void *SecurityDescriptor None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcServerUseProtseqIfA(unsigned char *Protseq,unsigned int MaxCalls,RPC_IF_HANDLE IfSpec None,void *SecurityDescriptor None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcMgmtIsServerListening(RPC_BINDING_HANDLE Binding None)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsGroupMbrInqBegin(unsigned long GroupNameSyntax,unsigned char *GroupName,unsigned long MemberNameSyntax,RPC_NS_HANDLE *InquiryContext None)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsGroupMbrInqBeginW(unsigned long GroupNameSyntax,unsigned char *GroupName,unsigned long MemberNameSyntax,RPC_NS_HANDLE *InquiryContext None)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsGroupMbrInqBeginA(unsigned long GroupNameSyntax,unsigned char *GroupName,unsigned long MemberNameSyntax,RPC_NS_HANDLE *InquiryContext None)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsBindingLookupBegin(unsigned long EntryNameSyntax,unsigned char *EntryName,RPC_IF_HANDLE IfSpec None,UUID *ObjUuid None,unsigned long BindingMaxCount,RPC_NS_HANDLE *LookupContext None)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsBindingLookupBeginW(unsigned long EntryNameSyntax,unsigned char *EntryName,RPC_IF_HANDLE IfSpec None,UUID *ObjUuid None,unsigned long BindingMaxCount,RPC_NS_HANDLE *LookupContext None)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsBindingLookupBeginA(unsigned long EntryNameSyntax,unsigned char *EntryName,RPC_IF_HANDLE IfSpec None,UUID *ObjUuid None,unsigned long BindingMaxCount,RPC_NS_HANDLE *LookupContext None)
NET_API_STATUS None netapi32.NetShareGetInfo(_In_ LPWSTR servername,_In_ LPWSTR netname,_In_ DWORD level,_Out_ LPBYTE *bufptr)
HRESULT None None.WS_CERTIFICATE_VALIDATION_CALLBACK(_In_ CERT_CONTEXT *certContext,_In_opt_ void *state)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsBindingImportNext(RPC_NS_HANDLE ImportContext None,RPC_BINDING_HANDLE *Binding None)
SECURITY_STATUS WINAPI ncrypt.NCryptSecretAgreement(_In_ NCRYPT_KEY_HANDLE hPrivKey,_In_ NCRYPT_KEY_HANDLE hPubKey,_Out_ NCRYPT_SECRET_HANDLE *phSecret,_In_ DWORD dwFlags)
RPC_STATUS RPC_ENTRY rpcrt4.MesEncodeDynBufferHandleCreate(char **ppBuffer None,unsigned long *pEncodedSize,handle_t *pHandle None)
NET_API_STATUS None netapi32.NetSessionGetInfo(_In_ LPWSTR servername,_In_ LPWSTR UncClientName,_In_ LPWSTR username,_In_ DWORD level,_Out_ LPBYTE *bufptr)
HRESULT None oleaut32.SafeArraySetIID(_In_ SAFEARRAY *psa,_In_ REFGUID guid)
void None None.WS_OPERATION_FREE_STATE_CALLBACK(_In_ void* state)
RPC_STATUS RPC_ENTRY rpcrt4.RpcServerListen(unsigned int MinimumCallThreads,unsigned int MaxCalls,unsigned int DontWait)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsProfileEltInqBegin(unsigned long ProfileNameSyntax,unsigned char *ProfileName,unsigned long InquiryType,RPC_IF_ID *IfId None,unsigned long VersOption,unsigned long MemberNameSyntax,unsigned char *MemberName,RPC_NS_HANDLE *InquiryContext None)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsProfileEltInqBeginW(unsigned long ProfileNameSyntax,unsigned char *ProfileName,unsigned long InquiryType,RPC_IF_ID *IfId None,unsigned long VersOption,unsigned long MemberNameSyntax,unsigned char *MemberName,RPC_NS_HANDLE *InquiryContext None)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsProfileEltInqBeginA(unsigned long ProfileNameSyntax,unsigned char *ProfileName,unsigned long InquiryType,RPC_IF_ID *IfId None,unsigned long VersOption,unsigned long MemberNameSyntax,unsigned char *MemberName,RPC_NS_HANDLE *InquiryContext None)
NTSTATUS WINAPI ncrypt.NCryptStreamOpenToUnprotect(_In_ NCRYPT_PROTECT_STREAM_INFO *pStreamInfo,DWORD dwFlags None,_In_opt_ HWND hWnd,_Out_ NCRYPT_STREAM_HANDLE *phStream)
void RPC_ENTRY rpcrt4.RpcSsSetThreadHandle(RPC_SM_THREAD_HANDLE Handle None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcGetAuthorizationContextForClient(_In_opt_ RPC_BINDING_HANDLE ClientBinding,_In_ BOOL ImpersonateOnReturn,_In_ PVOID Reserved1,_In_opt_ PLARGE_INTEGER pExpirationTime,_In_ LUID Reserved2,_In_ DWORD Reserved3,_In_ PVOID Reserved4,_Out_ PVOID *pAuthzClientContext)
void None None.WS_GET_LISTENER_PROPERTY_CALLBACK(_In_ void* listenerInstance,_In_ WS_LISTENER_PROPERTY_ID id,void* value None,_In_ ULONG valueSize,_In_opt_ WS_ERROR* error)
NTSTATUS WINAPI netapi32.NetRemoveServiceAccount(_In_opt_ LPWSTR ServerName,_In_ LPWSTR AccountName,_In_ DWORD Flags)
GEOID None kernel32.GetUserGeoID(_In_ GEOCLASS GeoClass)
BOOL None None.RpcAbnormalTermination(void None None)
int RPC_ENTRY rpcrt4.UuidEqual(UUID __RPC_FAR *Uuid1,UUID __RPC_FAR *Uuid2,RPC_STATUS __RPC_FAR *Status)
RPC_STATUS RPC_ENTRY rpcrt4.RpcNetworkIsProtseqValid(unsigned char *Protseq)
RPC_STATUS RPC_ENTRY rpcrt4.RpcNetworkIsProtseqValidW(unsigned char *Protseq)
RPC_STATUS RPC_ENTRY rpcrt4.RpcNetworkIsProtseqValidA(unsigned char *Protseq)
HRESULT None None.MyFunc([in None None,optional] VARIANT Param1,[out None None,optional] VARIANT Param2)
NTSTATUS None advapi32.LsaFreeMemory(_In_ PVOID Buffer)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsProfileEltInqDone(RPC_NS_HANDLE *InquiryContext None)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsProfileEltRemove(unsigned long ProfileNameSyntax,unsigned char *ProfileName,RPC_IF_ID *IfId None,unsigned long MemberNameSyntax,unsigned char *MemberName)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsProfileEltRemoveW(unsigned long ProfileNameSyntax,unsigned char *ProfileName,RPC_IF_ID *IfId None,unsigned long MemberNameSyntax,unsigned char *MemberName)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsProfileEltRemoveA(unsigned long ProfileNameSyntax,unsigned char *ProfileName,RPC_IF_ID *IfId None,unsigned long MemberNameSyntax,unsigned char *MemberName)
void None None.MyProcedure_notify(void None None)
HRESULT None None.Method3([in None None,readonly] int iMmutable)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsGroupMbrInqNext(RPC_NS_HANDLE InquiryContext None,unsigned char **MemberName)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsGroupMbrInqNextW(RPC_NS_HANDLE InquiryContext None,unsigned char **MemberName)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsGroupMbrInqNextA(RPC_NS_HANDLE InquiryContext None,unsigned char **MemberName)
void None None.WS_RESET_LISTENER_CALLBACK(_In_ void* listenerInstance,_In_opt_ WS_ERROR* error)
BOOL None kernel32.GetProcessPreferredUILanguages(_In_ DWORD dwFlags,_Out_ PULONG pulNumLanguages,_Out_opt_ PZZWSTR pwszLanguagesBuffer,_Inout_ PULONG pcchLanguagesBuffer)
NTSTATUS WINAPI ncrypt.NCryptQueryProtectionDescriptorName(_In_ LPCWSTR pwszName,_Out_ LPWSTR pwszDescriptorString,_Inout_ SIZE_T *pcDescriptorString,DWORD dwFlags None)
typedef None None.SCESTATUS(*PFSCE_QUERY_INFO None None)
HRESULT None None.Method3([in None None,readonly] int iMmutable)
RPC_STATUS RPC_ENTRY rpcrt4.RpcRevertToSelf(void None None)
ULONG None wldap32.ldap_delete_s(_In_ LDAP *ld,_In_ PCHAR dn)
ULONG None wldap32.ldap_delete_sW(_In_ LDAP *ld,_In_ PCHAR dn)
ULONG None wldap32.ldap_delete_sA(_In_ LDAP *ld,_In_ PCHAR dn)
HRESULT None None.MyMethod([out None None,retval] InMyFace** ReturnVal)
RPC_STATUS RPC_ENTRY rpcrt4.RpcAsyncAbortCall(PRPC_ASYNC_STATE pAsync None,unsigned long ExceptionCode)
NTSTATUS WINAPI advapi32.LsaLookupPrivilegeValue(LSA_HANDLE PolicyHandle None,PUNICODE_STRING Name None,PLUID Value None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcServerRegisterIfEx(RPC_IF_HANDLE IfSpec None,UUID *MgrTypeUuid None,RPC_MGR_EPV *MgrEpv None,unsigned int Flags,unsigned int MaxCalls,RPC_IF_CALLBACK_FN *IfCallback None)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsGroupMbrInqNext(RPC_NS_HANDLE InquiryContext None,unsigned char **MemberName)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsGroupMbrInqNextW(RPC_NS_HANDLE InquiryContext None,unsigned char **MemberName)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsGroupMbrInqNextA(RPC_NS_HANDLE InquiryContext None,unsigned char **MemberName)
RPC_STATUS None rpcrt4.RpcServerInqBindingHandle(RPC_BINDING_HANDLE *Binding None)
HRESULT None None.WS_CREATE_ENCODER_CALLBACK(_In_ void* createContext,_In_ WS_WRITE_CALLBACK writeCallback,_In_ void* writeContext,void** encoderContext None,_In_opt_ WS_ERROR* error)
RPC_STATUS RPC_ENTRY rpcrt4.MesDecodeBufferHandleCreate(char *Buffer None,unsigned long BufferSize,handle_t *pHandle None)
NET_API_STATUS None netapi32.NetSessionEnum(_In_ LPWSTR servername,_In_ LPWSTR UncClientName,_In_ LPWSTR username,_In_ DWORD level,_Out_ LPBYTE *bufptr,_In_ DWORD prefmaxlen,_Out_ LPDWORD entriesread,_Out_ LPDWORD totalentries,_Inout_ LPDWORD resume_handle)
SCESTATUS WINAPI None.SceSvcAttachmentAnalyze(_In_ PSCESVC_CALLBACK_INFO pSceCbInfo)
HRESULT None ole32.StgOpenStorageOnILockBytes(_In_ ILockBytes *plkbyt,_In_ IStorage *pStgPriority,_In_ DWORD grfMode,_In_ SNB snbExclude,_In_ DWORD reserved,_Out_ IStorage **ppstgOpen)
RPC_SS_THREAD_HANDLE RPC_ENTRY rpcrt4.RpcSsGetThreadHandle(void None None)
RPC_STATUS RPC_ENTRY rpcrt4.RpcMgmtInqComTimeout(RPC_BINDING_HANDLE Binding None,unsigned int *Timeout)
ULONG None advapi32.EnableTraceEx(_In_ LPCGUID ProviderId,_In_opt_ LPCGUID SourceId,_In_ TRACEHANDLE TraceHandle,_In_ ULONG IsEnabled,_In_ UCHAR Level,_In_ ULONGLONG MatchAnyKeyword,_In_ ULONGLONG MatchAllKeyword,_In_ ULONG EnableProperty,_In_opt_ PEVENT_FILTER_DESCRIPTOR EnableFilterDesc)
NTSTATUS WINAPI netapi32.NetRemoveServiceAccount(_In_opt_ LPWSTR ServerName,_In_ LPWSTR AccountName,_In_ DWORD Flags)
BOOL WINAPI advapi32.SaferComputeTokenFromLevel(_In_ SAFER_LEVEL_HANDLE LevelHandle,_In_opt_ HANDLE InAccessToken,_Out_ PHANDLE OutAccessToken,_In_ DWORD dwFlags,_Inout_opt_ LPVOID lpReserved)
void RPC_ENTRY rpcrt4.RpcErrorClearInformation(void None None)
HRESULT None None.WS_CREATE_DECODER_CALLBACK(_In_ void* createContext,_In_ WS_READ_CALLBACK readCallback,_In_ void* readContext,void** decoderContext None,_In_opt_ WS_ERROR* error)
RPC_STATUS None rpcrt4.RpcServerSubscribeForNotification(_In_ RPC_BINDING_HANDLE Binding,_In_ DWORD Notification,_In_ RPC_NOTIFICATION_TYPES NotificationType,_In_ RPC_ASYNC_NOTIFICATION_INFO *NotificationInfo)
RPC_STATUS None rpcrt4.RpcSsContextLockShared(_In_ RPC_BINDING_HANDLE ServerBindingHandle,_In_ PVOID UserContext)
RPC_STATUS RPC_ENTRY rpcrt4.RpcAsyncInitializeHandle(PRPC_ASYNC_STATE pAsync None,unsigned int Size)
NET_API_STATUS None netapi32.NetSessionGetInfo(_In_ LPWSTR servername,_In_ LPWSTR UncClientName,_In_ LPWSTR username,_In_ DWORD level,_Out_ LPBYTE *bufptr)
ULONG None wldap32.ldap_add_s(_In_ LDAP *ld,_In_ PCHAR dn,_In_ LDAPMod *attrs[])
ULONG None wldap32.ldap_add_sW(_In_ LDAP *ld,_In_ PCHAR dn,_In_ LDAPMod *attrs[])
ULONG None wldap32.ldap_add_sA(_In_ LDAP *ld,_In_ PCHAR dn,_In_ LDAPMod *attrs[])
RPC_STATUS RPC_ENTRY rpcrt4.RpcEpUnregister(RPC_IF_HANDLE IfSpec None,RPC_BINDING_VECTOR *BindingVector None,UUID_VECTOR *UuidVector None)
NTSTATUS None advapi32.LsaSetTrustedDomainInfoByName(_In_ LSA_HANDLE PolicyHandle,_In_ PLSA_UNICODE_STRING TrustedDomainName,_In_ TRUSTED_INFORMATION_CLASS InformationClass,_In_ PVOID Buffer)
HRESULT None oleaut32.SafeArrayAllocDescriptor(_In_ UINT cDims,_Out_ SAFEARRAY **ppsaOut)
void None xinput1_4.XInputEnable(_In_ BOOL enable)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsBindingLookupDone(RPC_NS_HANDLE *LookupContext None)
HRESULT None None.Proc3([in] short Arr[MAX_SIZE])
NTSTATUS None advapi32.LsaClose(_In_ LSA_HANDLE ObjectHandle)
NTSTATUS None advapi32.LsaCreateTrustedDomainEx(_In_ LSA_HANDLE PolicyHandle,_In_ PTRUSTED_DOMAIN_INFORMATION_EX TrustedDomainInformation,_In_ PTRUSTED_DOMAIN_AUTH_INFORMATION AuthenticationInformation,_In_ ACCESS_MASK DesiredAccess,_Out_ PLSA_HANDLE TrustedDomainHandle)
BOOL None kernel32.EnumDateFormatsExEx(_In_ DATEFMT_ENUMPROCEXEX lpDateFmtEnumProcExEx,_In_opt_ LPCWSTR lpLocaleName,_In_ DWORD dwFlags,_In_ LPARAM lParam)
HRESULT None None.MyFunction([in] short count)
midl_pragma None None.warning(warning_option : message_list)
LONG WINAPI advapi32.CveEventWrite(_In_ PCWSTR CveId,_In_opt_ PCWSTR AdditionalDetails)
typedef None None.SCESTATUS(*PFSCE_LOG_INFO None None)
NET_API_STATUS None netapi32.NetShareEnum(_In_ LPWSTR servername,_In_ DWORD level,_Out_ LPBYTE *bufptr,_In_ DWORD prefmaxlen,_Out_ LPDWORD entriesread,_Out_ LPDWORD totalentries,_Inout_ LPDWORD resume_handle)
HRESULT None None.MyFunction([in] short count)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsBindingExport(unsigned long EntryNameSyntax,unsigned char *EntryName,RPC_IF_HANDLE IfSpec None,RPC_BINDING_VECTOR *BindingVec None,UUID_VECTOR *ObjectUuidVec None)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsBindingExportW(unsigned long EntryNameSyntax,unsigned char *EntryName,RPC_IF_HANDLE IfSpec None,RPC_BINDING_VECTOR *BindingVec None,UUID_VECTOR *ObjectUuidVec None)
RPC_STATUS RPC_ENTRY rpcns4.RpcNsBindingExportA(unsigned long EntryNameSyntax,unsigned char *EntryName,RPC_IF_HANDLE IfSpec None,RPC_BINDING_VECTOR *BindingVec None,UUID_VECTOR *ObjectUuidVec None)
BOOL CALLBACK None.EnumUILanguagesProc(_In_ LPTSTR lpUILanguageString,_In_ LONG_PTR lParam)
NTSTATUS None advapi32.LsaSetTrustedDomainInformation(_In_ LSA_HANDLE PolicyHandle,_In_ PSID TrustedDomainSid,_In_ TRUSTED_INFORMATION_CLASS InformationClass,_In_ PVOID Buffer)
HRESULT None None.MyFunction([in] short count)
RPC_ENTRY None rpcrt4.UuidCreateNil(UUID __RPC_FAR *Nil_Uuid)
HRESULT None None.MyFunction([in] short count)
BOOL None kernel32.GetFileMUIPath(_In_ DWORD dwFlags,_In_ PCWSTR pcwszFilePath,_Inout_opt_ PWSTR pwszLanguage,_Inout_ PULONG pcchLanguage,_Out_opt_ PWSTR pwszFileMUIPath,_Inout_ PULONG pcchFileMUIPath,_Inout_ PULONGLONG pululEnumerator)
HRESULT None oleaut32.SafeArraySetIID(_In_ SAFEARRAY *psa,_In_ REFGUID guid)
void None None.WS_VALIDATE_SAML_CALLBACK(_In_opt_ void* samlValidatorCallbackState,_In_ WS_XML_BUFFER* samlAssertion,_In_opt_ WS_ERROR* error)
BOOL WINAPI kernel32.NotifyUILanguageChange(_In_ DWORD dwFlags,_In_opt_ PCWSTR pcwstrNewLanguage,_In_opt_ PCWSTR pcwstrPreviousLanguage,_In_ DWORD dwReserved,_Out_opt_ PDWORD pdwStatusRtrn)
BOOL WINAPI advapi32.SaferRecordEventLogEntry(_In_ SAFER_LEVEL_HANDLE hLevel,_In_ LPCWSTR szTargetPath,_Reserved_ LPVOID lpReserved)
int None nlsmap.DownlevelGetParentLocaleName(_In_ LCID Locale,_Out_ LPWSTR lpName,_In_ int cchName)
BOOL WINAPI advapi32.SaferGetLevelInformation(_In_ SAFER_LEVEL_HANDLE LevelHandle,_In_ SAFER_OBJECT_INFO_CLASS dwInfoType,_Out_opt_ LPVOID lpQueryBuffer,_In_ DWORD dwInBufferSize,_Out_ LPDWORD lpdwOutBufferSize)
typedef None None.SCESTATUS(*PFSCE_SET_INFO None None)
int None kernel32.FindNLSString(_In_ LCID Locale,_In_ DWORD dwFindNLSStringFlags,_In_ LPCWSTR lpStringSource,_In_ int cchSource,_In_ LPCWSTR lpStringValue,_In_ int cchValue,_Out_opt_ LPINT pcchFound)
NET_API_STATUS None netapi32.NetUseEnum(_In_ LMSTR UncServerName,_In_ DWORD Level,_Out_ LPBYTE *BufPtr,_In_ DWORD PreferedMaximumSize,_Out_ LPDWORD EntriesRead,_Out_ LPDWORD TotalEntries,_Inout_ LPDWORD ResumeHandle)
BOOL WINAPI advapi32.SaferSetLevelInformation(_In_ SAFER_LEVEL_HANDLE LevelHandle,_In_ SAFER_OBJECT_INFO_CLASS dwInfoType,_In_ LPVOID lpQueryBuffer,_In_ DWORD dwInBufferSize)
int None kernel32.LCMapString(_In_ LCID Locale,_In_ DWORD dwMapFlags,_In_ LPCTSTR lpSrcStr,_In_ int cchSrc,_Out_opt_ LPTSTR lpDestStr,_In_ int cchDest)
int None kernel32.LCMapStringW(_In_ LCID Locale,_In_ DWORD dwMapFlags,_In_ LPCTSTR lpSrcStr,_In_ int cchSrc,_Out_opt_ LPTSTR lpDestStr,_In_ int cchDest)
int None kernel32.LCMapStringA(_In_ LCID Locale,_In_ DWORD dwMapFlags,_In_ LPCTSTR lpSrcStr,_In_ int cchSrc,_Out_opt_ LPTSTR lpDestStr,_In_ int cchDest)
HRESULT None None.MyFunction([in] short count)
int None kernel32.GetCalendarInfo(_In_ LCID Locale,_In_ CALID Calendar,_In_ CALTYPE CalType,_Out_opt_ LPTSTR lpCalData,_In_ int cchData,_Out_opt_ LPDWORD lpValue)
int None kernel32.GetCalendarInfoW(_In_ LCID Locale,_In_ CALID Calendar,_In_ CALTYPE CalType,_Out_opt_ LPTSTR lpCalData,_In_ int cchData,_Out_opt_ LPDWORD lpValue)
int None kernel32.GetCalendarInfoA(_In_ LCID Locale,_In_ CALID Calendar,_In_ CALTYPE CalType,_Out_opt_ LPTSTR lpCalData,_In_ int cchData,_Out_opt_ LPDWORD lpValue)
RPC_STATUS RPC_ENTRY rpcrt4.MesBufferHandleReset(handle_t Handle None,unsigned long HandleStyle,MIDL_ES_CODE OpCode None,char **ppBuffer None,unsigned long BufferSize,unsigned long *pEncodedSize)
HRESULT None None.MyFunction([in] short count)
BOOL WINAPI advapi32.SaferCreateLevel(_In_ DWORD dwScopeId,_In_ DWORD dwLevelId,_In_ DWORD OpenFlags,_Out_ SAFER_LEVEL_HANDLE *pLevelHandle,_Reserved_ LPVOID lpReserved)
NET_API_STATUS WINAPI netapi32.NetShareDelEx(_In_ LMSTR servername,_In_ DWORD level,_In_ LPBYTE buf)
BOOLEAN None None.PasswordFilter(_In_ PUNICODE_STRING AccountName,_In_ PUNICODE_STRING FullName,_In_ PUNICODE_STRING Password,_In_ BOOLEAN SetOperation)
NTSTATUS None advapi32.LsaLookupNames2(_In_ LSA_HANDLE PolicyHandle,_In_ ULONG Flags,_In_ ULONG Count,_In_ PLSA_UNICODE_STRING Names,_Out_ PLSA_REFERENCED_DOMAIN_LIST *ReferencedDomains,_Out_ PLSA_TRANSLATED_SID2 *Sids)
LANGID None kernel32.GetUserDefaultLangID(void None None)
BOOL CALLBACK None.EnumCalendarInfoProc(_In_ LPTSTR lpCalendarInfoString)
void None None.WS_MESSAGE_DONE_CALLBACK(_In_ void *doneCallbackState)
HRESULT None oleaut32.DispGetParam(_In_ DISPPARAMS *pdispparams,UINT position None,VARTYPE vtTarg None,_Out_ VARIANT *pvarResult,_Out_opt_ UINT *puArgErr)
void STDAPICALLTYPE oleaut32.SafeArrayReleaseData(_In_ PVOID pData)
void None None.WS_FREE_ENCODER_CALLBACK(_In_ void* encoderContext)
NTSTATUS None advapi32.LsaLookupNames2(_In_ LSA_HANDLE PolicyHandle,_In_ ULONG Flags,_In_ ULONG Count,_In_ PLSA_UNICODE_STRING Names,_Out_ PLSA_REFERENCED_DOMAIN_LIST *ReferencedDomains,_Out_ PLSA_TRANSLATED_SID2 *Sids)
BOOL WINAPI advapi32.SaferIdentifyLevel(_In_ DWORD dwNumProperties,_In_opt_ PSAFER_CODE_PROPERTIES pCodeProperties,_Out_ SAFER_LEVEL_HANDLE *pLevelHandle,_Reserved_ LPVOID lpReserved)
BOOL WINAPI advapi32.SaferCreateLevel(_In_ DWORD dwScopeId,_In_ DWORD dwLevelId,_In_ DWORD OpenFlags,_Out_ SAFER_LEVEL_HANDLE *pLevelHandle,_Reserved_ LPVOID lpReserved)
ULONG None tdh.TdhSetDecodingParameter(_In_ TDH_HANDLE Handle,_In_ PTDH_CONTEXT TdhContext)
DWORD WINAPI xinput9_1_0.XInputGetDSoundAudioDeviceGuids(DWORD dwUserIndex None,GUID* pDSoundRenderGuid None,GUID* pDSoundCaptureGuid None)
void None None.WS_ASYNC_CALLBACK(_In_ HRESULT errorCode,_In_ WS_CALLBACK_MODEL callbackModel,_In_ void *callbackState)
BOOL None advapi32.SaferiIsExecutableFileType(_In_ LPCWSTR szFullPath,_In_ BOOLEAN bFromShellExecute)
HRESULT None oleaut32.DispInvoke(void *_this None,ITypeInfo *ptinfo None,DISPID dispidMember None,WORD wFlags None,DISPPARAMS *pparams None,VARIANT *pvarResult None,EXCEPINFO *pexcepinfo None,UINT *puArgErr None)
BOOL None None.FreeMUILibrary(_In_ HMODULE hResModule)
NTSTATUS None advapi32.LsaOpenTrustedDomainByName(_In_ LSA_HANDLE PolicyHandle,_In_ PLSA_UNICODE_STRING TrustedDomainName,_In_ ACCESS_MASK DesiredAccess,_Out_ PLSA_HANDLE TrustedDomainHandle)
WINOLEAPI None ole32.WriteClassStm(_In_ IStream *pStm,_In_ REFCLSID rclsid)
NTSTATUS NTAPI None.GetServiceAccountPassword(_In_ PUNICODE_STRING AccountName,_In_opt_ PUNICODE_STRING DomainName,_In_ CRED_FETCH CredFetch,_Inout_opt_ FILETIME *FileTimeExpiry,_Out_ PUNICODE_STRING CurrentPassword,_Out_ PUNICODE_STRING PreviousPassword,_Out_opt_ FILETIME *FileTimeCurrPwdValidForOutbound)
HRESULT None activeds.Get([in] BSTR bstrName,[out] VARIANT *pvProp)
void None None.WS_CREATE_LISTENER_CALLBACK(_In_ WS_CHANNEL_TYPE channelType,const void* listenerParameters,_In_ ULONG listenerParametersSize,void** listenerInstance None,_In_opt_ WS_ERROR* error)
NET_API_STATUS None netapi32.NetFileGetInfo(_In_ LMSTR servername,_In_ DWORD fileid,_In_ DWORD level,_Out_ LPBYTE *bufptr)
NTSTATUS WINAPI netapi32.NetIsServiceAccount(_In_opt_ LPWSTR ServerName,_In_ LPWSTR AccountName,_Out_ BOOL *IsService)
ULONG WINAPI tdh.TdhLoadManifest(_In_ PWSTR Manifest)
WINOLEAPI None ole32.CreateStreamOnHGlobal(_In_ HGLOBAL hGlobal,_In_ BOOL fDeleteOnRelease,_Out_ LPSTREAM *ppstm)
HRESULT None oleaut32.SafeArrayGetElement(_In_ SAFEARRAY *psa,_In_ LONG *rgIndices,_Out_ void *pv)
ULONG None advapi32.LsaNtStatusToWinError(_In_ NTSTATUS Status)
typedef None None.SCESTATUS(*PFSCE_FREE_INFO None None)
NTSTATUS None advapi32.LsaQueryTrustedDomainInfoByName(_In_ LSA_HANDLE PolicyHandle,_In_ PLSA_UNICODE_STRING TrustedDomainName,_In_ TRUSTED_INFORMATION_CLASS InformationClass,_Out_ PVOID *Buffer)
SCESTATUS WINAPI None.SceSvcAttachmentUpdate(IN PSCESVC_CALLBACK_INFO pSceCbInfo,IN SCESVC_CONFIGURATION_INFO *ServiceInfo)
BOOL None kernel32.GetFileMUIInfo(_In_ DWORD dwFlags,_In_ PCWSTR pcwszFilePath,_Inout_opt_ PFILEMUIINFO pFileMUIInfo,_Inout_ DWORD *pcbFileMUIInfo)
ULONG TDHAPI tdh.TdhCreatePayloadFilter(_In_ LPGUID ProviderGuid,_In_ PCEVENT_DESCRIPTOR EventDescriptor,_In_ BOOLEAN EventMatchANY,_In_ ULONG PayloadPredicateCount,_In_ PPAYLOAD_FILTER_PREDICATE PayloadPredicates,_Out_ PVOID *PayloadFilter)
NTSTATUS None advapi32.LsaEnumerateTrustedDomains(_In_ LSA_HANDLE PolicyHandle,_In_ PLSA_ENUMERATION_HANDLE EnumerationContext,_Out_ PVOID *Buffer,_In_ ULONG PreferedMaximumLength,_Out_ PULONG CountReturned)
int __RPC_API None.RpcMgmtAuthorizationFn(RPC_BINDING_HANDLE ClientBinding None,ULONG RequestedMgmtOperation None,RPC_STATUS *Status None)
HRESULT None oleaut32.SafeArrayGetLBound(_In_ SAFEARRAY *psa,_In_ UINT nDim,_Out_ LONG *plLbound)
DWORD None xinput1_4.XInputGetBatteryInformation(_In_ DWORD dwUserIndex,_In_ BYTE devType,_Out_ XINPUT_BATTERY_INFORMATION *pBatteryInformation)
HRESULT None oleaut32.SafeArrayGetVartype(_In_ SAFEARRAY *psa,_Out_ VARTYPE *pvt)
LANGID None kernel32.GetThreadUILanguage(void None None)
NTSTATUS WINAPI netapi32.NetEnumerateServiceAccounts(_In_opt_ LPWSTR ServerName,_In_ DWORD Flags,_Out_ DWORD *AccountsCount,_Out_ PZPWSTR *Accounts)
NET_API_STATUS None netapi32.NetSessionEnum(_In_ LPWSTR servername,_In_ LPWSTR UncClientName,_In_ LPWSTR username,_In_ DWORD level,_Out_ LPBYTE *bufptr,_In_ DWORD prefmaxlen,_Out_ LPDWORD entriesread,_Out_ LPDWORD totalentries,_Inout_ LPDWORD resume_handle)
NET_API_STATUS None netapi32.NetFileClose(_In_ LMSTR servername,_In_ DWORD fileid)
HRESULT None oleaut32.SafeArrayGetRecordInfo(_In_ SAFEARRAY *psa,_Out_ IRecordInfo **prinfo)
void None None.WS_GET_CHANNEL_PROPERTY_CALLBACK(_In_ void* channelInstance,_In_ WS_CHANNEL_PROPERTY_ID id,void* value None,_In_ ULONG valueSize,_In_opt_ WS_ERROR* error)
NTSTATUS None advapi32.LsaRemoveAccountRights(_In_ LSA_HANDLE PolicyHandle,_In_ PSID AccountSid,_In_ BOOLEAN AllRights,_In_ PLSA_UNICODE_STRING UserRights,_In_ ULONG CountOfRights)
SECURITY_STATUS SEC_Entry secur32.QueryContextAttributes(_In_ PCtxtHandle phContext,_In_ ULONG ulAttribute,_Out_ PVOID pBuffer)
SECURITY_STATUS SEC_Entry secur32.QueryContextAttributesW(_In_ PCtxtHandle phContext,_In_ ULONG ulAttribute,_Out_ PVOID pBuffer)
SECURITY_STATUS SEC_Entry secur32.QueryContextAttributesA(_In_ PCtxtHandle phContext,_In_ ULONG ulAttribute,_Out_ PVOID pBuffer)
RPC_STATUS RPC_ENTRY rpcrt4.RpcBindingInqOption(RPC_BINDING_HANDLE hBinding None,unsigned long Option,unsigned long *pOptionValue)
NET_API_STATUS None netapi32.NetFileEnum(_In_ LMSTR servername,_In_ LMSTR basepath,_In_ LMSTR username,_In_ DWORD level,_Out_ LPBYTE *bufptr,_In_ DWORD prefmaxlen,_Out_ LPDWORD entriesread,_Out_ LPDWORD totalentries,_Inout_ PDWORD_PTR resume_handle)
int None idndl.DownlevelGetStringScripts(_In_ DWORD dwFlags,_In_ LPCWSTR lpString,_In_ int cchString,_Out_ LPWSTR lpScripts,_In_ int cchScripts)
DWORD None xinput1_4.XInputGetAudioDeviceIds(_In_ DWORD dwUserIndex,_Out_opt_ LPWSTR pRenderDeviceId,_Inout_opt_ UINT *pRenderCount,_Out_opt_ LPWSTR pCaptureDeviceId,_Inout_opt_ UINT *pCaptureCount)
BOOL None advapi32.SaferiIsExecutableFileType(_In_ LPCWSTR szFullPath,_In_ BOOLEAN bFromShellExecute)
WINOLEAPI None ole32.OleConvertOLESTREAMToIStorageEx(_In_ LPOLESTREAM lpolestm,_Out_ IStorage *pstg,_Out_ CLIPFORMAT *pcfFormat,_Out_ LONG *plWidth,_Out_ LONG *plHeight,_Out_ DWORD *pdwSize,_Out_ STGMEDIUM pmedium)
void None None.WS_CREATE_CHANNEL_CALLBACK(_In_ WS_CHANNEL_TYPE channelType,const void* channelParameters,_In_ ULONG channelParametersSize,void** channelInstance None,_In_opt_ WS_ERROR* error)
ULONG None sechost.EnableTraceEx2(_In_ TRACEHANDLE TraceHandle,_In_ LPCGUID ProviderId,_In_ ULONG ControlCode,_In_ UCHAR Level,_In_ ULONGLONG MatchAnyKeyword,_In_ ULONGLONG MatchAllKeyword,_In_ ULONG Timeout,_In_opt_ PENABLE_TRACE_PARAMETERS EnableParameters)
BOOL WINAPI advapi32.SaferIdentifyLevel(_In_ DWORD dwNumProperties,_In_opt_ PSAFER_CODE_PROPERTIES pCodeProperties,_Out_ SAFER_LEVEL_HANDLE *pLevelHandle,_Reserved_ LPVOID lpReserved)
BOOL WINAPI advapi32.SaferCloseLevel(_In_ SAFER_LEVEL_HANDLE hLevelHandle)
HINSTANCE None None.LoadMUILibrary(_In_ LPCTSTR pszFullModuleName,_In_ DWORD dwLangConvention,_In_ LANGID LangID)
HINSTANCE None None.LoadMUILibraryW(_In_ LPCTSTR pszFullModuleName,_In_ DWORD dwLangConvention,_In_ LANGID LangID)
HINSTANCE None None.LoadMUILibraryA(_In_ LPCTSTR pszFullModuleName,_In_ DWORD dwLangConvention,_In_ LANGID LangID)
BOOL None None.WlxGetSourceDesktop(_In_ HANDLE hWlx,_Out_ PWLX_DESKTOP *ppDesktop)
void None None.WS_CREATE_CHANNEL_CALLBACK(_In_ WS_CHANNEL_TYPE channelType,const void* channelParameters,_In_ ULONG channelParametersSize,void** channelInstance None,_In_opt_ WS_ERROR* error)
ULONG TDHAPI tdh.TdhDeletePayloadFilter(_Inout_ PVOID *PayloadFilterDescriptor)
void None None.WS_CREATE_CHANNEL_CALLBACK(_In_ WS_CHANNEL_TYPE channelType,const void* channelParameters,_In_ ULONG channelParametersSize,void** channelInstance None,_In_opt_ WS_ERROR* error)
HRESULT None oleaut32.DispGetParam(_In_ DISPPARAMS *pdispparams,UINT position None,VARTYPE vtTarg None,_Out_ VARIANT *pvarResult,_Out_opt_ UINT *puArgErr)
NTSTATUS None advapi32.LsaAddAccountRights(_In_ LSA_HANDLE PolicyHandle,_In_ PSID AccountSid,_In_ PLSA_UNICODE_STRING UserRights,_In_ ULONG CountOfRights)
void None None.WS_RESET_CHANNEL_CALLBACK(_In_ void* channelInstance,_In_opt_ WS_ERROR* error)
BOOL WINAPI advapi32.SaferGetPolicyInformation(_In_ DWORD dwScopeId,_In_ SAFER_POLICY_INFO_CLASS SaferPolicyInfoClass,_In_ DWORD InfoBufferSize,_Out_ PVOID InfoBuffer,_Out_ PDWORD InfoBufferRetSize,_Reserved_ LPVOID lpReserved)
BOOL None None.WlxNetworkProviderLoad(_In_ PVOID pWlxContext,_Out_ PWLX_MPR_NOTIFY_INFO pNprNotifyInfo)
DWORD None xinput1_4.XInputGetState(_In_ DWORD dwUserIndex,_Out_ XINPUT_STATE *pState)
ULONG None advapi32.TraceEvent(_In_ TRACEHANDLE SessionHandle,_In_ PEVENT_TRACE_HEADER EventTrace)
BOOL CALLBACK None.EnumDateFormatsProc(_In_ LPTSTR lpDateFormatString)
NTSTATUS None secur32.LsaUnregisterPolicyChangeNotification(_In_ POLICY_NOTIFICATION_INFORMATION_CLASS InformationClass,_In_ HANDLE NotificationEventHandle)
BOOL None None.GetUILanguageFallbackList(_Out_opt_ PWSTR pFallbackList,_In_ ULONG cchFallbackList,_Out_opt_ PULONG pcchFallbackListOut)
WINOLEAPI None ole32.ReadFmtUserTypeStg(_In_ IStorage *pStg,_Out_ CLIPFORMAT *pcf,_Out_ LPWSTR *lplpszUserType)
RPC_STATUS CALLBACK None.RPC_IF_CALLBACK_FN(_In_ RPC_IF_HANDLE Interface,_In_ void *Context)
SCESTATUS WINAPI None.SceSvcAttachmentConfig(_In_ PSCESVC_CALLBACK_INFO pSceCbInfo)
ULONG __stdcall tdh.TdhGetEventMapInformation(_In_ PEVENT_RECORD pEvent,_In_ LPWSTR pMapName,_Out_ PEVENT_MAP_INFO pBuffer,_Inout_ ULONG *pBufferSize)
LANGID None kernel32.SetThreadUILanguage(_In_ LANGID LangId)
NTSTATUS None advapi32.LsaLookupSids(_In_ LSA_HANDLE PolicyHandle,_In_ ULONG Count,_In_ PSID *Sids,_Out_ PLSA_REFERENCED_DOMAIN_LIST *ReferencedDomains,_Out_ PLSA_TRANSLATED_NAME *Names)
HRESULT None None.WS_PROXY_MESSAGE_CALLBACK(_In_ WS_MESSAGE* message,_In_ WS_HEAP* heap,_In_ void* state,_In_opt_ WS_ERROR* error)
HRESULT None oleaut32.SafeArrayCopyData(_In_ SAFEARRAY *psaSource,_In_ SAFEARRAY *psaTarget)
NET_API_STATUS None netapi32.NetShareDel(_In_ LMSTR servername,_In_ LMSTR netname,DWORD reserved None)
NTSTATUS WINAPI netapi32.NetAddServiceAccount(_In_opt_ LPWSTR ServerName,_In_ LPWSTR AccountName,_In_ LPWSTR Reserved,_In_ DWORD Flags)
int WINAPI kernel32.GetUserDefaultGeoName(_Out_ LPWSTR geoName,_In_ geoNameCount int)
HRESULT None oleaut32.SafeArrayPutElement(_In_ SAFEARRAY *psa,_In_ LONG *rgIndices,_In_ void *pv)
NTSTATUS None advapi32.LsaQueryTrustedDomainInfo(_In_ LSA_HANDLE PolicyHandle,_In_ PSID TrustedDomainSid,_In_ TRUSTED_INFORMATION_CLASS InformationClass,_Out_ PVOID *Buffer)
WINOLEAPI None ole32.WriteClassStg(_In_ IStorage *pStg,_In_ REFCLSID rclsid)
WINOLEAPI None ole32.OleConvertIStorageToOLESTREAM(_In_ IStorage *pStg,_Out_ LPOLESTREAM lpolestream)
BOOL None kernel32.EnumUILanguages(_In_ UILANGUAGE_ENUMPROC lpUILanguageEnumProc,_In_ DWORD dwFlags,_In_ LONG_PTR lParam)
BOOL None kernel32.EnumUILanguagesW(_In_ UILANGUAGE_ENUMPROC lpUILanguageEnumProc,_In_ DWORD dwFlags,_In_ LONG_PTR lParam)
BOOL None kernel32.EnumUILanguagesA(_In_ UILANGUAGE_ENUMPROC lpUILanguageEnumProc,_In_ DWORD dwFlags,_In_ LONG_PTR lParam)
ULONG None sechost.QueryAllTraces(_Out_ PEVENT_TRACE_PROPERTIES *PropertyArray,_In_ ULONG PropertyArrayCount,_Out_ PULONG SessionCount)
ULONG None sechost.QueryAllTracesW(_Out_ PEVENT_TRACE_PROPERTIES *PropertyArray,_In_ ULONG PropertyArrayCount,_Out_ PULONG SessionCount)
ULONG None sechost.QueryAllTracesA(_Out_ PEVENT_TRACE_PROPERTIES *PropertyArray,_In_ ULONG PropertyArrayCount,_Out_ PULONG SessionCount)
WINOLEAPI None ole32.WriteFmtUserTypeStg(_In_ IStorage *pStg,_In_ CLIPFORMAT cf,_In_ LPWSTR *lpszUserType)
HRESULT None ole32.StgCreatePropSetStg(_In_ IStorage *pStorage,DWORD dwReserved None,_Out_ IPropertySetStorage **ppPropSetStg)
BOOLEAN None None.InitializeChangeNotify(void None None)
WINOLEAPI None ole32.CreateILockBytesOnHGlobal(_In_ HGLOBAL hGlobal,_In_ BOOL fDeleteOnRelease,_Out_ ILockBytes **ppLkbyt)
HRESULT None oleaut32.CreateStdDispatch(IUnknown *punkOuter None,void *pvThis None,ITypeInfo *ptinfo None,IUnknown **ppunkStdDisp None)
NTSTATUS WINAPI netapi32.NetQueryServiceAccount(_In_opt_ LPWSTR ServerName,_In_ LPWSTR AccountName,_In_ DWORD InfoLevel,_Out_ PBYTE *Buffer)
ULONG None advapi32.FlushTrace(_In_ TRACEHANDLE SessionHandle,_In_ LPCTSTR SessionName,_Inout_ PEVENT_TRACE_PROPERTIES Properties)
ULONG None advapi32.FlushTraceW(_In_ TRACEHANDLE SessionHandle,_In_ LPCTSTR SessionName,_Inout_ PEVENT_TRACE_PROPERTIES Properties)
ULONG None advapi32.FlushTraceA(_In_ TRACEHANDLE SessionHandle,_In_ LPCTSTR SessionName,_Inout_ PEVENT_TRACE_PROPERTIES Properties)
int None None.WlxChangePasswordNotifyEx(_In_ HANDLE hWlx,_In_ PWLX_MPR_NOTIFY_INFO pMprInfo,_In_ DWORD dwChangeInfo,_In_ PWSTR ProviderName,_In_ PVOID Reserved)
NTSTATUS None None.PasswordChangeNotify(_In_ PUNICODE_STRING UserName,_In_ ULONG RelativeId,_In_ PUNICODE_STRING NewPassword)
SECURITY_STATUS SEC_Entry secur32.InitializeSecurityContext(_In_opt_ PCredHandle phCredential,_In_opt_ PCtxtHandle phContext,_In_opt_ SEC_CHAR *pszTargetName,_In_ ULONG fContextReq,_In_ ULONG Reserved1,_In_ ULONG TargetDataRep,_In_opt_ PSecBufferDesc pInput,_In_ ULONG Reserved2,_Inout_opt_ PCtxtHandle phNewContext,_Inout_opt_ PSecBufferDesc pOutput,_Out_ PULONG pfContextAttr,_Out_opt_ PTimeStamp ptsExpiry)
SECURITY_STATUS SEC_Entry secur32.InitializeSecurityContextW(_In_opt_ PCredHandle phCredential,_In_opt_ PCtxtHandle phContext,_In_opt_ SEC_CHAR *pszTargetName,_In_ ULONG fContextReq,_In_ ULONG Reserved1,_In_ ULONG TargetDataRep,_In_opt_ PSecBufferDesc pInput,_In_ ULONG Reserved2,_Inout_opt_ PCtxtHandle phNewContext,_Inout_opt_ PSecBufferDesc pOutput,_Out_ PULONG pfContextAttr,_Out_opt_ PTimeStamp ptsExpiry)
SECURITY_STATUS SEC_Entry secur32.InitializeSecurityContextA(_In_opt_ PCredHandle phCredential,_In_opt_ PCtxtHandle phContext,_In_opt_ SEC_CHAR *pszTargetName,_In_ ULONG fContextReq,_In_ ULONG Reserved1,_In_ ULONG TargetDataRep,_In_opt_ PSecBufferDesc pInput,_In_ ULONG Reserved2,_Inout_opt_ PCtxtHandle phNewContext,_Inout_opt_ PSecBufferDesc pOutput,_Out_ PULONG pfContextAttr,_Out_opt_ PTimeStamp ptsExpiry)
NTSTATUS None advapi32.LsaLookupNames(_In_ LSA_HANDLE PolicyHandle,_In_ ULONG Count,_In_ PLSA_UNICODE_STRING Names,_Out_ PLSA_REFERENCED_DOMAIN_LIST *ReferencedDomains,_Out_ PLSA_TRANSLATED_SID *Sids)
HRESULT None oleaut32.SafeArrayLock(_In_ SAFEARRAY *psa)
SCESTATUS WINAPI None.SceSvcAttachmentUpdate(_In_ PSCESVC_CALLBACK_INFO pSceCbInfo,_In_ SCESVC_CONFIGURATION_INFO *ServiceInfo)
ULONG None sechost.EventAccessControl(_In_ LPGUID Guid,_In_ ULONG Operation,_In_ PSID Sid,_In_ ULONG Rights,_In_ BOOLEAN AllowOrDeny)
NTSTATUS None advapi32.LsaEnumerateAccountsWithUserRight(_In_ LSA_HANDLE PolicyHandle,_In_ PLSA_UNICODE_STRING UserRights,_Out_ PVOID *EnumerationBuffer,_Out_ PULONG CountReturned)
Public Sub activeds.ListServicesOnComputer(ComputerName As String)
BOOL None advapi32.CredIsMarshaledCredential(_In_ LPCTSTR MarshaledCredential)
BOOL None advapi32.CredIsMarshaledCredentialW(_In_ LPCTSTR MarshaledCredential)
BOOL None advapi32.CredIsMarshaledCredentialA(_In_ LPCTSTR MarshaledCredential)
HRESULT WINAPI srpapi.srpInheritOriginClaim(_In_ Handle OriginToken,_In_ Handle InheritingToken,Handle ResultToken None)
NTSTATUS None advapi32.LsaCreateTrustedDomainEx(_In_ LSA_HANDLE PolicyHandle,_In_ PTRUSTED_DOMAIN_INFORMATION_EX TrustedDomainInformation,_In_ PTRUSTED_DOMAIN_AUTH_INFORMATION AuthenticationInformation,_In_ ACCESS_MASK DesiredAccess,_Out_ PLSA_HANDLE TrustedDomainHandle)
void RPC_ENTRY rpcrt4.RpcSsDontSerializeContext(void None None)
void None None.WS_CREATE_CHANNEL_FOR_LISTENER_CALLBACK(_In_ void* listenerInstance,const void* channelParameters,_In_ ULONG channelParametersSize,void** channelInstance None,_In_opt_ WS_ERROR* error)
HRESULT None None.MyFunc([in None None,optional] VARIANT Param1,[out None None,optional] VARIANT Param2)
HRESULT None ole32.StgOpenPropStg(_In_ IUnknown *pUnk,_In_ REFFMTID fmtid,_In_ DWORD grfFlags,_In_ DWORD dwReserved,_Out_ IPropertyStorage **ppPropStg)
HRESULT None oleaut32.SafeArrayDestroyData(_In_ SAFEARRAY *psa)
ULONG WINAPI tdh.TdhFormatProperty(_In_ PTRACE_EVENT_INFO EventInfo,_In_opt_ PEVENT_MAP_INFO MapInfo,_In_ ULONG PointerSize,_In_ USHORT PropertyInType,_In_ USHORT PropertyOutType,_In_ USHORT PropertyLength,_In_ USHORT UserDataLength,_In_ PBYTE UserData,_Inout_ PULONG BufferSize,_Out_opt_ PWCHAR Buffer,_Out_ PUSHORT UserDataConsumed)
UINT None oleaut32.SafeArrayGetElemsize(_In_ SAFEARRAY *psa)
NET_API_STATUS None netapi32.NetShareCheck(_In_ LPWSTR servername,_In_ LPWSTR device,_Out_ LPDWORD type)
NTSTATUS None advapi32.LsaDeleteTrustedDomain(_In_ LSA_HANDLE PolicyHandle,_In_ PSID TrustedDomainSid)
ULONG __stdcall tdh.TdhGetEventInformation(_In_ PEVENT_RECORD pEvent,_In_ ULONG TdhContextCount,_In_ PTDH_CONTEXT pTdhContext,_Out_ PTRACE_EVENT_INFO pBuffer,_Inout_ ULONG *pBufferSize)
ULONG None advapi32.EventWriteEx(_In_ REGHANDLE RegHandle,_In_ PCEVENT_DESCRIPTOR EventDescriptor,_In_ ULONG64 Filter,_In_ ULONG Flags,_In_opt_ LPCGUID ActivityId,_In_opt_ LPCGUID RelatedActivityId,_In_ ULONG UserDataCount,_In_opt_ PEVENT_DATA_DESCRIPTOR UserData)
HRESULT None oleaut32.SafeArrayPtrOfIndex(_In_ SAFEARRAY *psa,_In_ LONG *rgIndices,_Out_ void **ppvData)
ULONG __stdcall tdh.TdhGetEventInformation(_In_ PEVENT_RECORD pEvent,_In_ ULONG TdhContextCount,_In_ PTDH_CONTEXT pTdhContext,_Out_ PTRACE_EVENT_INFO pBuffer,_Inout_ ULONG *pBufferSize)
ULONG __stdcall tdh.TdhGetPropertySize(_In_ PEVENT_RECORD pEvent,_In_ ULONG TdhContextCount,_In_ PTDH_CONTEXT pTdhContext,_In_ ULONG PropertyDataCount,_In_ PPROPERTY_DATA_DESCRIPTOR pPropertyData,_Out_ ULONG *pPropertySize)
BOOL None kernel32.GetUserPreferredUILanguages(_In_ DWORD dwFlags,_Out_ PULONG pulNumLanguages,_Out_opt_ PZZWSTR pwszLanguagesBuffer,_Inout_ PULONG pcchLanguagesBuffer)
ULONG None advapi32.TraceMessageVa(_In_ TRACEHANDLE SessionHandle,_In_ ULONG MessageFlags,_In_ LPGUID MessageGuid,_In_ USHORT MessageNumber,_In_ va_list MessageArgList)
NET_API_STATUS None netapi32.NetSessionDel(_In_ LPWSTR servername,_In_ LPWSTR UncClientName,_In_ LPWSTR username)
WINOLEAPI None ole32.ReadClassStm(_In_ IStream *pStm,_Out_ CLSID *pclsid)
BOOL WINAPI advapi32.SaferCreateLevel(_In_ DWORD dwScopeId,_In_ DWORD dwLevelId,_In_ DWORD OpenFlags,_Out_ SAFER_LEVEL_HANDLE *pLevelHandle,_Reserved_ LPVOID lpReserved)
HRESULT None oleaut32.SafeArrayAccessData(_In_ SAFEARRAY *psa,_Out_ void **ppvData)
WINOLEAPI None ole32.ReadClassStg(_In_ IStorage *pStg,_Out_ CLSID *pclsid)
NET_API_STATUS None netapi32.NetShareCheck(_In_ LPWSTR servername,_In_ LPWSTR device,_Out_ LPDWORD type)
NTSTATUS WINAPI netapi32.NetEnumerateServiceAccounts(_In_opt_ LPWSTR ServerName,_In_ DWORD Flags,_Out_ DWORD *AccountsCount,_Out_ PZPWSTR *Accounts)
void None None.WS_FREE_DECODER_CALLBACK(_In_ void* decoderContext)
void None None.WS_ABORT_LISTENER_CALLBACK(_In_ void* listenerInstance,_In_opt_ WS_ERROR* error)
NET_API_STATUS None netapi32.NetShareCheck(_In_ LPWSTR servername,_In_ LPWSTR device,_Out_ LPDWORD type)
NET_API_STATUS WINAPI netapi32.NetShareDelEx(_In_ LMSTR servername,_In_ DWORD level,_In_ LPBYTE buf)
UINT None oleaut32.SafeArrayGetElemsize(_In_ SAFEARRAY *psa)
ULONG WINAPI tdh.TdhLoadManifest(_In_ PWSTR Manifest)
VOID None None.WlxSetContextPointer(_In_ HANDLE hWlx,_In_ PVOID pWlxContext)
int None kernel32.GetCalendarInfoEx(_In_opt_ LPCWSTR lpLocaleName,_In_ CALID Calendar,_In_opt_ LPCWSTR lpReserved,_In_ CALTYPE CalType,_Out_opt_ LPWSTR lpCalData,_In_ int cchData,_Out_opt_ LPDWORD lpValue)
NTSTATUS NTAPI None.CrediReadDomainCredentials(_In_ PLUID LogonId,_In_ ULONG CredFlags,_In_ PCREDENTIAL_TARGET_INFORMATIONW TargetInfo,ULONG Flags None,PULONG Count None,_Out_ PENCRYPTED_CREDENTIALW **Credential)
NTSTATUS NTAPI None.SpExchangeMetaDataFn(_In_ LSA_SEC_HANDLE CredentialHandle,_In_opt_ PUNICODE_STRING TargetName,_In_ ULONG ContextRequirements,_In_ ULONG MetaDataLength,_In_ PUCHAR MetaData,_Inout_ PLSA_SEC_HANDLE ContextHandle)
DWORD None None.MAKELCID(WORD wLanguageID None,WORD wSortID None)
int None kernel32.GetCalendarInfoEx(_In_opt_ LPCWSTR lpLocaleName,_In_ CALID Calendar,_In_opt_ LPCWSTR lpReserved,_In_ CALTYPE CalType,_Out_opt_ LPWSTR lpCalData,_In_ int cchData,_Out_opt_ LPDWORD lpValue)
NTSTATUS SEC_ENTRY None.SpUserModeInitialize(_In_ ULONG LsaVersion,_Out_ PULONG PackageVersion,_Out_ PSECPKG_USER_FUNCTION_TABLE *ppTables,_Out_ PULONG pcTables)
ULONG None None.WsCountOf([in] arrayName None)
HRESULT None oleaut32.VarAdd(_In_ LPVARIANT pvarLeft,_In_ LPVARIANT pvarRight,_Out_ LPVARIANT pvarResult)
ULONG WINAPI None.ControlCallback(_In_ WMIDPREQUESTCODE RequestCode,_In_ PVOID Context,_In_ ULONG *Reserved,_In_ PVOID Buffer)
void None None.PropVariantInit(_Out_ PROPVARIANT *pvar)
NTSTATUS None None.SpDeleteContext(_In_ LSA_SEC_HANDLE ContextHandle)
HRESULT None oleaut32.SafeArrayGetUBound(_In_ SAFEARRAY *psa,_In_ UINT nDim,_Out_ LONG *plUbound)
HRESULT WINAPI combase.SetRestrictedErrorInfo(_In_ IRestrictedErrorInfo *pRestrictedErrorInfo)
HRESULT None oleaut32.SafeArrayDestroyData(_In_ SAFEARRAY *psa)
SECURITY_STATUS None sspicli.SspiValidateAuthIdentity(_In_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE AuthData)
SECURITY_STATUS SEC_Entry secur32.EncryptMessage(_In_ PCtxtHandle phContext,_In_ ULONG fQOP,_Inout_ PSecBufferDesc pMessage,_In_ ULONG MessageSeqNo)
SECURITY_STATUS SEC_Entry secur32.RevertSecurityContext(_In_ PCtxtHandle phContext)
BOOL WINAPI advapi32.SaferCreateLevel(_In_ DWORD dwScopeId,_In_ DWORD dwLevelId,_In_ DWORD OpenFlags,_Out_ SAFER_LEVEL_HANDLE *pLevelHandle,_Reserved_ LPVOID lpReserved)
ULONG None sechost.CloseTrace(_In_ TRACEHANDLE TraceHandle)
HRESULT None oleaut32.SafeArrayUnaccessData(_In_ SAFEARRAY *psa)
LONG WINAPI winscard.SCardReleaseContext(_In_ SCARDCONTEXT hContext)
NTSTATUS None None.PasswordChangeNotify(_In_ PUNICODE_STRING UserName,_In_ ULONG RelativeId,_In_ PUNICODE_STRING NewPassword)
int None kernel32.GetCalendarInfoEx(_In_opt_ LPCWSTR lpLocaleName,_In_ CALID Calendar,_In_opt_ LPCWSTR lpReserved,_In_ CALTYPE CalType,_Out_opt_ LPWSTR lpCalData,_In_ int cchData,_Out_opt_ LPDWORD lpValue)
ULONG None wldap32.ldap_delete_ext(_In_ LDAP *ld,_In_ PCHAR dn,_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls,_Out_ ULONG *MessageNumber)
ULONG None wldap32.ldap_delete_extW(_In_ LDAP *ld,_In_ PCHAR dn,_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls,_Out_ ULONG *MessageNumber)
ULONG None wldap32.ldap_delete_extA(_In_ LDAP *ld,_In_ PCHAR dn,_In_ PLDAPControl *ServerControls,_In_ PLDAPControl *ClientControls,_Out_ ULONG *MessageNumber)
void NTAPI None.LsaUnprotectMemory(_Inout_ PVOID Buffer,_In_ ULONG BufferSize)
NTSTATUS None secur32.LsaRegisterPolicyChangeNotification(_In_ POLICY_NOTIFICATION_INFORMATION_CLASS InformationClass,_In_ HANDLE NotificationEventHandle)
WINOLEAPI None ole32.OleConvertIStorageToOLESTREAMEx(_In_ IStorage *pStg,_In_ CLIPFORMAT cfFormat,_In_ LONG lWidth,_In_ LONG lHeight,_In_ DWORD dwSize,_In_ STGMEDIUM pmedium,_Out_ LPOLESTREAM lpolestm)
BOOL None kernel32.GetUILanguageInfo(_In_ DWORD dwFlags,_In_ PCZZWSTR pwmszLanguage,_Out_opt_ PZZWSTR pwszFallbackLanguages,_Inout_opt_ PDWORD pcchFallbackLanguages,_Out_ PDWORD pdwAttributes)
HRESULT None oleaut32.SafeArrayDestroy(_In_ SAFEARRAY *psa)
NET_API_STATUS None netapi32.NetRemoveAlternateComputerName(_In_opt_ LPCWSTR Server,_In_ LPCWSTR AlternateName,_In_opt_ LPCWSTR DomainAccount,_In_opt_ LPCWSTR DomainAccountPassword,_In_ ULONG Reserved)
ULONG __stdcall tdh.TdhEnumerateProviderFieldInformation(_In_ LPGUID pGuid,_In_ EVENT_FIELD_TYPE EventFieldType,_Out_opt_ PPROVIDER_FIELD_INFOARRAY pBuffer,_Inout_ ULONG *pBufferSize)
void None None.WS_FREE_CHANNEL_CALLBACK(_In_ void* channelInstance)
WORD None None.SORTVERSIONFROMLCID(LCID lcid None)
NT_STATUS None None.SspiDecryptAuthIdentityEx(_In_ ULONG Options,_Inout_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE EncryptedAuthData)
NTSTATUS WINAPI certpoleng.PstGetCertificates(_In_ PUNICODE_STRING pTargetName,_In_ DWORD cCriteria,_In_opt_ PCCERT_SELECT_CRITERIA rgpCriteria,_In_ BOOL bIsClient,_Out_ PDWORD pdwCertChainContextCount,_Out_ PCCERT_CHAIN_CONTEXT **ppCertChainContexts)
NTSTATUS NTAPI None.CrediFreeCredentials(_In_ ULONG Count,_Inout_ PENCRYPTED_CREDENTIALW *Credentials)
DWORD None xinput1_4.XInputSetState(_In_ DWORD dwUserIndex,_Inout_ XINPUT_VIBRATION *pVibration)
void None None.WlxShutdown(_In_ PVOID pWlxContext,_In_ DWORD ShutdownType)
NTSTATUS WINAPI certpoleng.PstGetCertificates(_In_ PUNICODE_STRING pTargetName,_In_ DWORD cCriteria,_In_opt_ PCCERT_SELECT_CRITERIA rgpCriteria,_In_ BOOL bIsClient,_Out_ PDWORD pdwCertChainContextCount,_Out_ PCCERT_CHAIN_CONTEXT **ppCertChainContexts)
void None None.WS_XML_STRING_VALUE(void None None)
WINOLEAPI None ole32.ReadClassStg(_In_ IStorage *pStg,_Out_ CLSID *pclsid)
HRESULT None None.PathCchAppend(_Inout_ PWSTR pszPath,_In_ size_t cchPath,_In_opt_ PCWSTR pszMore)
NTSTATUS WINAPI certpoleng.PstGetCertificates(_In_ PUNICODE_STRING pTargetName,_In_ DWORD cCriteria,_In_opt_ PCCERT_SELECT_CRITERIA rgpCriteria,_In_ BOOL bIsClient,_Out_ PDWORD pdwCertChainContextCount,_Out_ PCCERT_CHAIN_CONTEXT **ppCertChainContexts)
WINOLEAPI None ole32.GetConvertStg(_In_ IStorage *pStg)
ULONG None tdh.TdhGetWppMessage(_In_ TDH_HANDLE Handle,_In_ PEVENT_RECORD EventRecord,_Inout_ PULONG BufferSize,_Out_ PBYTE Buffer)
NTSTATUS None None.GetCredentials(_In_ PLUID LogonId,_In_ ULONG AuthenticationPackage,_Inout_ PULONG QueryContext,_In_ BOOLEAN RetrieveAllCredentials,_Inout_ PLSA_STRING PrimaryKeyValue,_Out_ PULONG PrimaryKeyLength,_Out_ PLSA_STRING Credentials)
HRESULT STDAPICALLTYPE oleaut32.SafeArrayAddRef(_In_ SAFEARRAY *psa,_Out_ PVOID **ppDataToRelease)
NTSTATUS WINAPI certpoleng.PstGetCertificates(_In_ PUNICODE_STRING pTargetName,_In_ DWORD cCriteria,_In_opt_ PCCERT_SELECT_CRITERIA rgpCriteria,_In_ BOOL bIsClient,_Out_ PDWORD pdwCertChainContextCount,_Out_ PCCERT_CHAIN_CONTEXT **ppCertChainContexts)
SECURITY_STATUS SEC_Entry secur32.DeleteSecurityContext(_In_ PCtxtHandle phContext)
HRESULT None ole32.Clone([out] IStream **ppstm)
HRESULT None oleaut32.SafeArrayDestroy(_In_ SAFEARRAY *psa)
LONG WINAPI winscard.SCardForgetReaderGroup(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szGroupName)
LONG WINAPI winscard.SCardForgetReaderGroupW(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szGroupName)
LONG WINAPI winscard.SCardForgetReaderGroupA(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szGroupName)
ULONG None sechost.StopTrace(_In_ TRACEHANDLE SessionHandle,_In_ LPCTSTR SessionName,_Out_ PEVENT_TRACE_PROPERTIES Properties)
ULONG None sechost.StopTraceW(_In_ TRACEHANDLE SessionHandle,_In_ LPCTSTR SessionName,_Out_ PEVENT_TRACE_PROPERTIES Properties)
ULONG None sechost.StopTraceA(_In_ TRACEHANDLE SessionHandle,_In_ LPCTSTR SessionName,_Out_ PEVENT_TRACE_PROPERTIES Properties)
HRESULT None oleaut32.SafeArrayUnlock(_In_ SAFEARRAY *psa)
ULONG None tdh.TdhGetWppProperty(_In_ TDH_HANDLE Handle,_In_ PEVENT_RECORD EventRecord,_In_ PWSTR PropertyName,_Inout_ PULONG BufferSize,_Out_ PBYTE Buffer)
NTSTATUS None None.MapBuffer(_In_ PSecBuffer InputBuffer,_Out_ PSecBuffer OutputBuffer)
NTSTATUS None None.RegisterCallback(_In_ ULONG CallbackId,_In_ PLSA_CALLBACK_FUNCTION Callback)
NTSTATUS None None.SpInstanceInit(_In_ ULONG Version,_In_ PSECPKG_DLL_FUNCTIONS FunctionTable,_Out_ PVOID *UserFunctions)
NTSTATUS None None.SpInstanceInit(_In_ ULONG Version,_In_ PSECPKG_DLL_FUNCTIONS FunctionTable,_Out_ PVOID *UserFunctions)
DWORD None None.MAKELCID(WORD wLanguageID None,WORD wSortID None)
LONG WINAPI winscard.SCardControl(_In_ SCARDHANDLE hCard,_In_ DWORD dwControlCode,_In_ LPCVOID lpInBuffer,_In_ DWORD nInBufferSize,_Out_ LPVOID lpOutBuffer,_In_ DWORD nOutBufferSize,_Out_ LPDWORD lpBytesReturned)
HRESULT None None.PathCchAddExtension(_Inout_ PWSTR pszPath,_In_ size_t cchPath,_In_ PCWSTR pszExt)
WINOLEAPI None ole32.StgOpenAsyncDocfileOnIFillLockBytes(_In_ IFillLockBytes *ppflb,_In_ DWORD grfmode,_In_ DWORD asyncFlags,_Out_ IStorage **ppstgOpen)
NET_API_STATUS None netapi32.NetShareCheck(_In_ LPWSTR servername,_In_ LPWSTR device,_Out_ LPDWORD type)
BOOL None None.WlxNegotiate(_In_ DWORD dwWinLogonVersion,_Out_ PDWORD pdwDllVersion)
BOOL CALLBACK None.EnumTimeFormatsProc(_In_ LPTSTR lpTimeFormatString)
NTSTATUS NTAPI None.Msv1_0SubAuthenticationRoutine(_In_ NETLOGON_LOGON_INFO_CLASS LogonLevel,_In_ PVOID LogonInformation,_In_ ULONG Flags,_In_ PUSER_ALL_INFORMATION UserAll,_Out_ PULONG WhichFields,_Out_ PULONG UserFlags,_Out_ PBOOLEAN Authoritative,_Out_ PLARGE_INTEGER LogoffTime,_Out_ PLARGE_INTEGER KickoffTime)
void None oleaut32.SysFreeString(_In_opt_ BSTR bstrString)
BOOL WINAPI advapi32.LogonUserExExW(_In_ LPTSTR lpszUsername,_In_opt_ LPTSTR lpszDomain,_In_opt_ LPTSTR lpszPassword,_In_ DWORD dwLogonType,_In_ DWORD dwLogonProvider,_In_opt_ PTOKEN_GROUPS pTokenGroups,_Out_opt_ PHANDLE phToken,_Out_opt_ PSID *ppLogonSid,_Out_opt_ PVOID *ppProfileBuffer,_Out_opt_ LPDWORD pdwProfileLength,_Out_opt_ PQUOTA_LIMITS pQuotaLimits)
WINOLEAPI None ole32.StgGetIFillLockBytesOnFile(_In_ OLECHAR *pwcsName,_Out_ IFillLockBytes **ppflb)
void None None.PropVariantInit(_Out_ PROPVARIANT *pvar)
NTSTATUS None advapi32.LsaEnumerateAccountRights(_In_ LSA_HANDLE PolicyHandle,_In_ PSID AccountSid,_Out_ PLSA_UNICODE_STRING *UserRights,_Out_ PULONG CountOfRights)
ULONG None advapi32.TraceEventInstance(_In_ TRACEHANDLE SessionHandle,_In_ PEVENT_INSTANCE_HEADER EventTrace,_In_ PEVENT_INSTANCE_INFO pInstInfo,_In_ PEVENT_INSTANCE_INFO pParentInstInfo)
HRESULT None None.PathCchAddBackslashEx(_Inout_ PWSTR pszPath,_In_ size_t cchPath,_Out_opt_ PWSTR *ppszEnd,_Out_opt_ size_t *pcchRemaining)
NTSTATUS None secur32.LsaFreeReturnBuffer(_In_ PVOID Buffer)
int None None.WlxLoggedOnSAS(_In_ PVOID pWlxContext,_In_ DWORD dwSasType,_In_ PVOID pReserved)
ULONG None tdh.TdhLoadManifestFromBinary(_In_ PWSTR BinaryPath)
SECURITY_STATUS None sspicli.SspiEncodeAuthIdentityAsStrings(_In_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE pAuthIdentity,_Out_ PCWSTR *ppszUserName,_Out_ PCWSTR *ppszDomainName,_Out_ PCWSTR *ppszPackedCredentialsString)
SECURITY_STATUS None sspicli.SspiEncodeAuthIdentityAsStringsW(_In_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE pAuthIdentity,_Out_ PCWSTR *ppszUserName,_Out_ PCWSTR *ppszDomainName,_Out_ PCWSTR *ppszPackedCredentialsString)
SECURITY_STATUS None sspicli.SspiEncodeAuthIdentityAsStringsA(_In_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE pAuthIdentity,_Out_ PCWSTR *ppszUserName,_Out_ PCWSTR *ppszDomainName,_Out_ PCWSTR *ppszPackedCredentialsString)
void None None.WS_FREE_LISTENER_CALLBACK(_In_ void* listenerInstance)
BOOL None advapi32.CredWriteDomainCredentials(_In_ PCREDENTIAL_TARGET_INFORMATION TargetInfo,_In_ PCREDENTIAL Credential,_In_ DWORD Flags)
BOOL None advapi32.CredWriteDomainCredentialsW(_In_ PCREDENTIAL_TARGET_INFORMATION TargetInfo,_In_ PCREDENTIAL Credential,_In_ DWORD Flags)
BOOL None advapi32.CredWriteDomainCredentialsA(_In_ PCREDENTIAL_TARGET_INFORMATION TargetInfo,_In_ PCREDENTIAL Credential,_In_ DWORD Flags)
int RPC_ENTRY rpcrt4.UuidEqual(UUID __RPC_FAR *Uuid1,UUID __RPC_FAR *Uuid2,RPC_STATUS __RPC_FAR *Status)
NTSTATUS None None.GetCertificateFromCred(_In_ PVOID ProviderHandle,_In_ HANDLE ClientToken,_In_ PVOID SuppliedCred,_In_ ULONG SuppliedCredSize,_Out_ PVOID *CertContext)
HRESULT None ole32.Read([out] void *pv,[in] ULONG cb,[out] ULONG *pcbRead)
NTSTATUS None None.CreateToken(_In_ PLUID LogonId,_In_ PTOKEN_SOURCE TokenSource,_In_ SECURITY_LOGON_TYPE LogonType,_In_ SECURITY_IMPERSONATION_LEVEL ImpersonationLevel,_In_ LSA_TOKEN_INFORMATION_TYPE TokenInformationType,_In_ PVOID TokenInformation,_In_ PTOKEN_GROUPS TokenGroups,_In_ PUNICODE_STRING AccountName,_In_ PUNICODE_STRING AuthorityName,_In_ PUNICODE_STRING Workstation,_In_ PUNICODE_STRING ProfilePath,_Out_ PHANDLE Token,_Out_ PNTSTATUS SubStatus)
VOID None None.WlxSasNotify(_In_ HANDLE hWlx,_In_ DWORD dwSasType)
ULONG None wldap32.ldap_ufn2dn(_In_ PCHAR ufn,_Out_ PCHAR *pDn)
ULONG None wldap32.ldap_ufn2dnW(_In_ PCHAR ufn,_Out_ PCHAR *pDn)
ULONG None wldap32.ldap_ufn2dnA(_In_ PCHAR ufn,_Out_ PCHAR *pDn)
ULONG WINAPI sechost.TraceQueryInformation(_In_ TRACEHANDLE SessionHandle,_In_ TRACE_QUERY_INFO_CLASS InformationClass,_Out_ PVOID TraceInformation,_In_ ULONG InformationLength,_Out_opt_ PULONG ReturnLength)
ULONG None sechost.QueryAllTraces(_Out_ PEVENT_TRACE_PROPERTIES *PropertyArray,_In_ ULONG PropertyArrayCount,_Out_ PULONG SessionCount)
ULONG None sechost.QueryAllTracesW(_Out_ PEVENT_TRACE_PROPERTIES *PropertyArray,_In_ ULONG PropertyArrayCount,_Out_ PULONG SessionCount)
ULONG None sechost.QueryAllTracesA(_Out_ PEVENT_TRACE_PROPERTIES *PropertyArray,_In_ ULONG PropertyArrayCount,_Out_ PULONG SessionCount)
HRESULT None oleaut32.SafeArrayGetIID(_In_ SAFEARRAY *psa,_Out_ GUID *pguid)
void NTAPI None.FreePrivateHeap(_In_ PVOID Base)
HRESULT None oleaut32.VarCmp(_In_ LPVARIANT pvarLeft,_In_ LPVARIANT pvarRight,_In_ LCID lcid,_In_ ULONG dwFlags)
WINOLEAPI None ole32.GetHGlobalFromStream(_In_ IStream *pstm,_Out_ HGLOBAL *phglobal)
DWORD APIENTRY None.NPPasswordChangeNotify(_In_ LPCWSTR lpAuthentInfoType,_In_ LPVOID lpAuthentInfo,_In_ LPCWSTR lpPreviousAuthentInfoType,_In_ LPVOID lpPreviousAuthentInfo,_In_ LPWSTR lpStationName,_In_ LPVOID StationHandle,_In_ DWORD dwChangeInfo)
HRESULT None oleaut32.SafeArrayAllocData(_In_ SAFEARRAY *psa)
NTSTATUS None advapi32.LsaRetrievePrivateData(_In_ LSA_HANDLE PolicyHandle,_In_ PLSA_UNICODE_STRING KeyName,_Out_ PLSA_UNICODE_STRING *PrivateData)
LONG WINAPI winscard.SCardControl(_In_ SCARDHANDLE hCard,_In_ DWORD dwControlCode,_In_ LPCVOID lpInBuffer,_In_ DWORD nInBufferSize,_Out_ LPVOID lpOutBuffer,_In_ DWORD nOutBufferSize,_Out_ LPDWORD lpBytesReturned)
BOOL None advapi32.CredRead(_In_ LPCTSTR TargetName,_In_ DWORD Type,_In_ DWORD Flags,_Out_ PCREDENTIAL *Credential)
BOOL None advapi32.CredReadW(_In_ LPCTSTR TargetName,_In_ DWORD Type,_In_ DWORD Flags,_Out_ PCREDENTIAL *Credential)
BOOL None advapi32.CredReadA(_In_ LPCTSTR TargetName,_In_ DWORD Type,_In_ DWORD Flags,_Out_ PCREDENTIAL *Credential)
VOID None None.FreeHeap(_Inout_ PVOID Base)
TRACEHANDLE None advapi32.GetTraceLoggerHandle(_In_ PVOID Buffer)
NTSTATUS None None.CreateLogonSession(_In_ PLUID LogonId)
NTSTATUS None advapi32.LsaLookupSids2(_In_ LSA_HANDLE PolicyHandle,_In_ ULONG LookupOptions,_In_ ULONG Count,_In_ PSID *Sids,_Out_ PLSA_REFERENCED_DOMAIN_LIST *ReferencedDomains,_Out_ PLSA_TRANSLATED_NAME *Names)
ULONG None tdh.TdhOpenDecodingHandle(_Out_ PTDH_HANDLE Handle)
SECURITY_STATUS None sspicli.SspiEncryptAuthIdentity(_Inout_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE AuthData)
WINOLEAPI None ole32.OleConvertOLESTREAMToIStorageEx(_In_ LPOLESTREAM lpolestm,_Out_ IStorage *pstg,_Out_ CLIPFORMAT *pcfFormat,_Out_ LONG *plWidth,_Out_ LONG *plHeight,_Out_ DWORD *pdwSize,_Out_ STGMEDIUM pmedium)
NTSTATUS None None.SpShutDown(void None None)
NTSTATUS None advapi32.LsaOpenPolicy(_In_ PLSA_UNICODE_STRING SystemName,_In_ PLSA_OBJECT_ATTRIBUTES ObjectAttributes,_In_ ACCESS_MASK DesiredAccess,_Inout_ PLSA_HANDLE PolicyHandle)
ULONG None advapi32.EventActivityIdControl(_In_ ULONG ControlCode,_Inout_ LPGUID ActivityId)
HRESULT None activeds.GetInfoEx([in] VARIANT vProperties,[in] LONG lnReserved)
BOOL None kernel32.GetCalendarSupportedDateRange(_In_ CALID Calendar,_Out_ LPCALDATETIME lpCalMinDateTime,_Out_ LPCALDATETIME lpCalMaxDateTime)
BOOL WINAPI credui.CredPackAuthenticationBuffer(_In_ DWORD dwFlags,_In_ LPTSTR pszUserName,_In_ LPTSTR pszPassword,_Out_ PBYTE pPackedCredentials,_Inout_ DWORD *pcbPackedCredentials)
BOOL WINAPI credui.CredPackAuthenticationBufferW(_In_ DWORD dwFlags,_In_ LPTSTR pszUserName,_In_ LPTSTR pszPassword,_Out_ PBYTE pPackedCredentials,_Inout_ DWORD *pcbPackedCredentials)
BOOL WINAPI credui.CredPackAuthenticationBufferA(_In_ DWORD dwFlags,_In_ LPTSTR pszUserName,_In_ LPTSTR pszPassword,_Out_ PBYTE pPackedCredentials,_Inout_ DWORD *pcbPackedCredentials)
BOOL CALLBACK None.EnumLanguageGroupsProc(_In_ LGRPID LanguageGroup,_In_ LPTSTR lpLanguageGroupString,_In_ LPTSTR lpLanguageGroupNameString,_In_ DWORD dwFlags,_In_ LONG_PTR lParam)
NTSTATUS None None.LsaApCallPackageUntrusted(_In_ PLSA_CLIENT_REQUEST ClientRequest,_In_ PVOID ProtocolSubmitBuffer,_In_ PVOID ClientBufferBase,_In_ ULONG SubmitBufferLength,_Out_ PVOID *ProtocolReturnBuffer,_Out_ PULONG ReturnBufferLength,_Out_ PNTSTATUS ProtocolStatus)
ULONG WINAPI tdh.TdhUnloadManifest(_In_ PWSTR Manifest)
void None None.WlxDisplaySASNotice(_In_ PVOID pWlxContext)
PVOID None None.SecureZeroMemory(_In_ PVOID ptr,_In_ SIZE_T cnt)
BOOL None advapi32.CredWrite(_In_ PCREDENTIAL Credential,_In_ DWORD Flags)
BOOL None advapi32.CredWriteW(_In_ PCREDENTIAL Credential,_In_ DWORD Flags)
BOOL None advapi32.CredWriteA(_In_ PCREDENTIAL Credential,_In_ DWORD Flags)
SECURITY_STATUS None None.SspiEncryptAuthIdentityEx(_In_ ULONG Options,_Inout_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE AuthData)
ULONG None advapi32.EventRegister(_In_ LPCGUID ProviderId,_In_opt_ PENABLECALLBACK EnableCallback,_In_opt_ PVOID CallbackContext,_Out_ PREGHANDLE RegHandle)
NTSTATUS None None.SpInitUserModeContext(_In_ LSA_SEC_HANDLE ContextHandle,_In_ PSecBuffer PackedContext)
NTSTATUS NTAPI None.CrediUnmarshalandDecodeString(_In_ LPWSTR MarshaledString,_Out_ LPBYTE *Blob,_Out_ ULONG *BlobSize,_Out_ BOOLEAN *IsFailureFatal)
void None schannel.SslFreeCertificate(_In_ PX509Certificate pCertificate)
ULONG WINAPI sechost.TraceSetInformation(_In_ TRACEHANDLE SessionHandle,_In_ TRACE_INFO_CLASS InformationClass,_In_ PVOID TraceInformation,_In_ ULONG InformationLength)
ULONG None tdh.TdhGetDecodingParameter(_In_ TDH_HANDLE Handle,_Inout_ PTDH_CONTEXT TdhContext)
DWORD None None.NPGetDirectoryType(_In_ LPTSTR lpName,_In_ LPINT lpType,_In_ BOOL bFlushCache)
UINT None oleaut32.SafeArrayGetDim(_In_ SAFEARRAY *psa)
ULONG None sechost.RegisterTraceGuids(_In_ WMIDPREQUEST RequestAddress,_In_ PVOID RequestContext,_In_ LPCGUID ControlGuid,_In_ ULONG GuidCount,_Inout_ PTRACE_GUID_REGISTRATION TraceGuidReg,_In_ LPCTSTR MofImagePath,_In_ LPCTSTR MofResourceName,_Out_ PTRACEHANDLE RegistrationHandle)
ULONG None sechost.RegisterTraceGuidsW(_In_ WMIDPREQUEST RequestAddress,_In_ PVOID RequestContext,_In_ LPCGUID ControlGuid,_In_ ULONG GuidCount,_Inout_ PTRACE_GUID_REGISTRATION TraceGuidReg,_In_ LPCTSTR MofImagePath,_In_ LPCTSTR MofResourceName,_Out_ PTRACEHANDLE RegistrationHandle)
ULONG None sechost.RegisterTraceGuidsA(_In_ WMIDPREQUEST RequestAddress,_In_ PVOID RequestContext,_In_ LPCGUID ControlGuid,_In_ ULONG GuidCount,_Inout_ PTRACE_GUID_REGISTRATION TraceGuidReg,_In_ LPCTSTR MofImagePath,_In_ LPCTSTR MofResourceName,_Out_ PTRACEHANDLE RegistrationHandle)
NTSTATUS None advapi32.LsaEnumerateAccountsWithUserRight(_In_ LSA_HANDLE PolicyHandle,_In_ PLSA_UNICODE_STRING UserRights,_Out_ PVOID *EnumerationBuffer,_Out_ PULONG CountReturned)
ULONG __stdcall tdh.TdhGetProperty(_In_ PEVENT_RECORD pEvent,_In_ ULONG TdhContextCount,_In_ PTDH_CONTEXT pTdhContext,_In_ ULONG PropertyDataCount,_In_ PPROPERTY_DATA_DESCRIPTOR pPropertyData,_In_ ULONG BufferSize,_Out_ PBYTE pBuffer)
NTSTATUS WINAPI certpoleng.PstAcquirePrivateKey(_In_ PCCERT_CONTEXT pCert)
ULONG None sechost.RegisterTraceGuids(_In_ WMIDPREQUEST RequestAddress,_In_ PVOID RequestContext,_In_ LPCGUID ControlGuid,_In_ ULONG GuidCount,_Inout_ PTRACE_GUID_REGISTRATION TraceGuidReg,_In_ LPCTSTR MofImagePath,_In_ LPCTSTR MofResourceName,_Out_ PTRACEHANDLE RegistrationHandle)
ULONG None sechost.RegisterTraceGuidsW(_In_ WMIDPREQUEST RequestAddress,_In_ PVOID RequestContext,_In_ LPCGUID ControlGuid,_In_ ULONG GuidCount,_Inout_ PTRACE_GUID_REGISTRATION TraceGuidReg,_In_ LPCTSTR MofImagePath,_In_ LPCTSTR MofResourceName,_Out_ PTRACEHANDLE RegistrationHandle)
ULONG None sechost.RegisterTraceGuidsA(_In_ WMIDPREQUEST RequestAddress,_In_ PVOID RequestContext,_In_ LPCGUID ControlGuid,_In_ ULONG GuidCount,_Inout_ PTRACE_GUID_REGISTRATION TraceGuidReg,_In_ LPCTSTR MofImagePath,_In_ LPCTSTR MofResourceName,_Out_ PTRACEHANDLE RegistrationHandle)
void NTAPI None.EnableCallback(_In_ LPCGUID SourceId,_In_ ULONG IsEnabled,_In_ UCHAR Level,_In_ ULONGLONG MatchAnyKeyword,_In_ ULONGLONG MatchAllKeywords,_In_opt_ PEVENT_FILTER_DESCRIPTOR FilterData,_In_opt_ PVOID CallbackContext)
BOOLEAN None None.GetCallInfo(_Out_ PSECPKG_CALL_INFO Info)
HRESULT None oleaut32.SafeArrayDestroyDescriptor(_In_ SAFEARRAY *psa)
HRESULT None None.MyFunction([in] short count)
HRESULT None None.PathCchRemoveExtension(_Inout_ PWSTR pszPath,_In_ size_t cchPath)
BOOL CALLBACK None.EnumLanguageGroupLocalesProc(_In_ LGRPID LanguageGroup,_In_ LCID Locale,_In_ LPTSTR lpLocaleString,_In_ LONG_PTR lParam)
void NTAPI None.EnableCallback(_In_ LPCGUID SourceId,_In_ ULONG IsEnabled,_In_ UCHAR Level,_In_ ULONGLONG MatchAnyKeyword,_In_ ULONGLONG MatchAllKeywords,_In_opt_ PEVENT_FILTER_DESCRIPTOR FilterData,_In_opt_ PVOID CallbackContext)
NTSTATUS None None.UnloadPackage(void None None)
NTSTATUS None secur32.LsaLogonUser(_In_ HANDLE LsaHandle,_In_ PLSA_STRING OriginName,_In_ SECURITY_LOGON_TYPE LogonType,_In_ ULONG AuthenticationPackage,_In_ PVOID AuthenticationInformation,_In_ ULONG AuthenticationInformationLength,_In_opt_ PTOKEN_GROUPS LocalGroups,_In_ PTOKEN_SOURCE SourceContext,_Out_ PVOID *ProfileBuffer,_Out_ PULONG ProfileBufferLength,_Out_ PLUID LogonId,_Out_ PHANDLE Token,_Out_ PQUOTA_LIMITS Quotas,_Out_ PNTSTATUS SubStatus)
BOOL WINAPI None.WlxGetConsoleSwitchCredentials(_In_ PVOID pWlxContext,_Out_ PVOID pInfo)
NTSTATUS None secur32.LsaLogonUser(_In_ HANDLE LsaHandle,_In_ PLSA_STRING OriginName,_In_ SECURITY_LOGON_TYPE LogonType,_In_ ULONG AuthenticationPackage,_In_ PVOID AuthenticationInformation,_In_ ULONG AuthenticationInformationLength,_In_opt_ PTOKEN_GROUPS LocalGroups,_In_ PTOKEN_SOURCE SourceContext,_Out_ PVOID *ProfileBuffer,_Out_ PULONG ProfileBufferLength,_Out_ PLUID LogonId,_Out_ PHANDLE Token,_Out_ PQUOTA_LIMITS Quotas,_Out_ PNTSTATUS SubStatus)
LONG WINAPI winscard.SCardRemoveReaderFromGroup(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReaderName,_In_ LPCTSTR szGroupName)
LONG WINAPI winscard.SCardRemoveReaderFromGroupW(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReaderName,_In_ LPCTSTR szGroupName)
LONG WINAPI winscard.SCardRemoveReaderFromGroupA(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReaderName,_In_ LPCTSTR szGroupName)
void NTAPI None.EnableCallback(_In_ LPCGUID SourceId,_In_ ULONG IsEnabled,_In_ UCHAR Level,_In_ ULONGLONG MatchAnyKeyword,_In_ ULONGLONG MatchAllKeywords,_In_opt_ PEVENT_FILTER_DESCRIPTOR FilterData,_In_opt_ PVOID CallbackContext)
VOID WINAPI None.EventClassCallback(_In_ PEVENT_TRACE pEvent)
HRESULT None oleaut32.SafeArrayDestroyDescriptor(_In_ SAFEARRAY *psa)
BOOLEAN None None.GetCallInfo(_Out_ PSECPKG_CALL_INFO Info)
void None None.WS_SET_LISTENER_PROPERTY_CALLBACK(_In_ void* listenerInstance,_In_ WS_LISTENER_PROPERTY_ID id,const void* value,_In_ ULONG valueSize,_In_opt_ WS_ERROR* error)
DWORD None credui.CredUIReadSSOCredW(_In_ PCWSTR pszRealm,_Out_ PWSTR *ppszUsername)
int None None.WlxMessageBox(_In_ HANDLE hWlx,_In_ HWND hwndOwner,_In_ LPWSTR lpszText,_In_ LPWSTR lpszTitle,_In_ UINT fuStyle)
PVOID WINAPI None.AllocatePrivateHeap(_In_ SIZE_T Length)
ULONG None sechost.RegisterTraceGuids(_In_ WMIDPREQUEST RequestAddress,_In_ PVOID RequestContext,_In_ LPCGUID ControlGuid,_In_ ULONG GuidCount,_Inout_ PTRACE_GUID_REGISTRATION TraceGuidReg,_In_ LPCTSTR MofImagePath,_In_ LPCTSTR MofResourceName,_Out_ PTRACEHANDLE RegistrationHandle)
ULONG None sechost.RegisterTraceGuidsW(_In_ WMIDPREQUEST RequestAddress,_In_ PVOID RequestContext,_In_ LPCGUID ControlGuid,_In_ ULONG GuidCount,_Inout_ PTRACE_GUID_REGISTRATION TraceGuidReg,_In_ LPCTSTR MofImagePath,_In_ LPCTSTR MofResourceName,_Out_ PTRACEHANDLE RegistrationHandle)
ULONG None sechost.RegisterTraceGuidsA(_In_ WMIDPREQUEST RequestAddress,_In_ PVOID RequestContext,_In_ LPCGUID ControlGuid,_In_ ULONG GuidCount,_Inout_ PTRACE_GUID_REGISTRATION TraceGuidReg,_In_ LPCTSTR MofImagePath,_In_ LPCTSTR MofResourceName,_Out_ PTRACEHANDLE RegistrationHandle)
void NTAPI None.EnableCallback(_In_ LPCGUID SourceId,_In_ ULONG IsEnabled,_In_ UCHAR Level,_In_ ULONGLONG MatchAnyKeyword,_In_ ULONGLONG MatchAllKeywords,_In_opt_ PEVENT_FILTER_DESCRIPTOR FilterData,_In_opt_ PVOID CallbackContext)
ULONG None advapi32.EventWriteString(_In_ REGHANDLE RegHandle,_In_ UCHAR Level,_In_ ULONGLONG Keyword,_In_ PCWSTR String)
BOOL CALLBACK None.EnumCalendarInfoProc(_In_ LPTSTR lpCalendarInfoString)
LONG WINAPI winscard.SCardIsValidContext(_In_ SCARDCONTEXT hContext)
BOOL CALLBACK None.EnumDateFormatsProc(_In_ LPTSTR lpDateFormatString)
BOOL None None.WlxSetReturnDesktop(_In_ HANDLE hWlx,_In_ PWLX_DESKTOP pDesktop)
int None None.WlxMessageBox(_In_ HANDLE hWlx,_In_ HWND hwndOwner,_In_ LPWSTR lpszText,_In_ LPWSTR lpszTitle,_In_ UINT fuStyle)
NTSTATUS None None.GetAuthDataForUser(_In_ PSECURITY_STRING Name,_In_ SECPKG_NAME_TYPE NameType,_In_ PSECURITY_STRING Prefix,_Out_ PUCHAR *UserAuthData,_Out_ PULONG UserAuthDataSize,_Out_ PUNICODE_STRING UserFlatName)
ULONG None advapi32.EventWriteTransfer(_In_ REGHANDLE RegHandle,_In_ PCEVENT_DESCRIPTOR EventDescriptor,_In_opt_ LPCGUID ActivityId,_In_opt_ LPCGUID RelatedActivityId,_In_ ULONG UserDataCount,_In_opt_ PEVENT_DATA_DESCRIPTOR UserData)
void NTAPI None.EnableCallback(_In_ LPCGUID SourceId,_In_ ULONG IsEnabled,_In_ UCHAR Level,_In_ ULONGLONG MatchAnyKeyword,_In_ ULONGLONG MatchAllKeywords,_In_opt_ PEVENT_FILTER_DESCRIPTOR FilterData,_In_opt_ PVOID CallbackContext)
HRESULT None oleaut32.VarCat(_In_ LPVARIANT pvarLeft,_In_ LPVARIANT pvarRight,_Out_ LPVARIANT pvarResult)
HRESULT None oleaut32.SafeArrayDestroyDescriptor(_In_ SAFEARRAY *psa)
BOOLEAN None None.GetCallInfo(_Out_ PSECPKG_CALL_INFO Info)
ULONG TDHAPI tdh.TdhCleanupPayloadEventFilterDescriptor(_Inout_ PEVENT_FILTER_DESCRIPTOR PayloadEventFilterDescriptor)
LPBYTE None None.ALERT_OTHER_INFO(LPBYTE x None)
BOOL None None.WlxSetReturnDesktop(_In_ HANDLE hWlx,_In_ PWLX_DESKTOP pDesktop)
HRESULT None oleaut32.VarAbs(_In_ LPVARIANT pvarIn,_Out_ LPVARIANT pvarResult)
NTSTATUS None secur32.LsaCallAuthenticationPackage(_In_ HANDLE LsaHandle,_In_ ULONG AuthenticationPackage,_In_ PVOID ProtocolSubmitBuffer,_In_ ULONG SubmitBufferLength,_Out_ PVOID *ProtocolReturnBuffer,_Out_ PULONG *ReturnBufferLength,_Out_ PNTSTATUS ProtocolStatus)
NTSTATUS None advapi32.LsaStorePrivateData(_In_ LSA_HANDLE PolicyHandle,_In_ PLSA_UNICODE_STRING KeyName,_In_ PLSA_UNICODE_STRING PrivateData)
NTSTATUS None None.SpAcceptCredentials(_In_ SECURITY_LOGON_TYPE LogonType,_In_ PUNICODE_STRING AccountName,_In_ PSECPKG_PRIMARY_CRED PrimaryCredentials,_In_ PSECPKG_SUPPLEMENTAL_CRED SupplementalCredentials)
NTSTATUS WINAPI None.Msv1_0SubAuthenticationRoutineGeneric(PVOID SubmitBuffer None,ULONG SubmitBufferLength None,_Out_ PULONG ReturnBufferLength,_Out_ PVOID *ReturnBuffer)
ULONG None sechost.StartTrace(_Out_ PTRACEHANDLE SessionHandle,_In_ LPCTSTR SessionName,_Inout_ PEVENT_TRACE_PROPERTIES Properties)
ULONG None sechost.StartTraceW(_Out_ PTRACEHANDLE SessionHandle,_In_ LPCTSTR SessionName,_Inout_ PEVENT_TRACE_PROPERTIES Properties)
ULONG None sechost.StartTraceA(_Out_ PTRACEHANDLE SessionHandle,_In_ LPCTSTR SessionName,_Inout_ PEVENT_TRACE_PROPERTIES Properties)
DWORD None None.NPDeviceMode(_In_ HWND hParent)
ULONG None sechost.SetTraceCallback(_In_ LPCGUID pGuid,_In_ PEVENT_CALLBACK EventCallback)
DWORD None None.WlxQueryConsoleSwitchCredentials(_Out_ PWLX_CONSOLESWITCH_CREDENTIALS_INFO_V1_0 pCred)
int None None.WlxMessageBox(_In_ HANDLE hWlx,_In_ HWND hwndOwner,_In_ LPWSTR lpszText,_In_ LPWSTR lpszTitle,_In_ UINT fuStyle)
ULONG None sechost.RegisterTraceGuids(_In_ WMIDPREQUEST RequestAddress,_In_ PVOID RequestContext,_In_ LPCGUID ControlGuid,_In_ ULONG GuidCount,_Inout_ PTRACE_GUID_REGISTRATION TraceGuidReg,_In_ LPCTSTR MofImagePath,_In_ LPCTSTR MofResourceName,_Out_ PTRACEHANDLE RegistrationHandle)
ULONG None sechost.RegisterTraceGuidsW(_In_ WMIDPREQUEST RequestAddress,_In_ PVOID RequestContext,_In_ LPCGUID ControlGuid,_In_ ULONG GuidCount,_Inout_ PTRACE_GUID_REGISTRATION TraceGuidReg,_In_ LPCTSTR MofImagePath,_In_ LPCTSTR MofResourceName,_Out_ PTRACEHANDLE RegistrationHandle)
ULONG None sechost.RegisterTraceGuidsA(_In_ WMIDPREQUEST RequestAddress,_In_ PVOID RequestContext,_In_ LPCGUID ControlGuid,_In_ ULONG GuidCount,_Inout_ PTRACE_GUID_REGISTRATION TraceGuidReg,_In_ LPCTSTR MofImagePath,_In_ LPCTSTR MofResourceName,_Out_ PTRACEHANDLE RegistrationHandle)
HRESULT None ole32.Read([out] void *pv,[in] ULONG cb,[out] ULONG *pcbRead)
bool None None.IS_LOW_SURROGATE(WCHAR wch None)
NTSTATUS NTAPI None.CreateTokenEx(_In_ PLUID LogonId,_In_ PTOKEN_SOURCE TokenSource,_In_ SECURITY_LOGON_TYPE LogonType,_In_ SECURITY_IMPERSONATION_LEVEL ImpersonationLevel,_In_ LSA_TOKEN_INFORMATION_TYPE TokenInformationType,_In_ PVOID TokenInformation,_In_ PTOKEN_GROUPS TokenGroups,_In_ PUNICODE_STRING Workstation,_In_ PUNICODE_STRING ProfilePath,_In_ PVOID SessionInformation,_In_ SECPKG_SESSIONINFO_TYPE SessionInformationType,_Out_ PHANDLE Token,_Out_ PNTSTATUS SubStatus)
UINT None oleaut32.SysStringLen(_In_opt_ BSTR bstr)
UINT None oleaut32.SafeArrayGetDim(_In_ SAFEARRAY *psa)
DWORD None None.NPGetUniversalName(_In_ LPCTSTR lpLocalPath,_In_ DWORD dwInfoLevel,_Out_ LPVOID lpBuffer,_Inout_ LPDWORD lpBufferSize)
HRESULT None oleaut32.VarImp(_In_ LPVARIANT pvarLeft,_In_ LPVARIANT pvarRight,_Out_ LPVARIANT pvarResult)
HANDLE WINAPI winscard.SCardAccessStartedEvent(void None None)
LONG WINAPI winscard.SCardReadCache(_In_ SCARDCONTEXT hContext,_In_ UUID *CardIdentifier,_In_ DWORD FreshnessCounter,_In_ LPTSTR LookupName,_Out_ PBYTE Data,_Out_ DWORD *DataLen)
LONG WINAPI winscard.SCardReadCacheW(_In_ SCARDCONTEXT hContext,_In_ UUID *CardIdentifier,_In_ DWORD FreshnessCounter,_In_ LPTSTR LookupName,_Out_ PBYTE Data,_Out_ DWORD *DataLen)
LONG WINAPI winscard.SCardReadCacheA(_In_ SCARDCONTEXT hContext,_In_ UUID *CardIdentifier,_In_ DWORD FreshnessCounter,_In_ LPTSTR LookupName,_Out_ PBYTE Data,_Out_ DWORD *DataLen)
ULONG __stdcall tdh.TdhEnumerateProviders(_Out_ PPROVIDER_ENUMERATION_INFO pBuffer,_Inout_ ULONG *pBufferSize)
int None None.WlxMessageBox(_In_ HANDLE hWlx,_In_ HWND hwndOwner,_In_ LPWSTR lpszText,_In_ LPWSTR lpszTitle,_In_ UINT fuStyle)
DWORD WINAPI powrprof.PowerSettingUnregisterNotification(_Inout_ HPOWERNOTIFY RegistrationHandle)
DWORD None None.NPGetDirectoryType(_In_ LPTSTR lpName,_In_ LPINT lpType,_In_ BOOL bFlushCache)
NTSTATUS None None.CrackSingleName(_In_ ULONG FormatOffered,_In_ BOOLEAN PerformAtGC,_In_ PUNICODE_STRING NameInput,_In_opt_ PUNICODE_STRING Prefix,_In_ ULONG RequestedFormat,_Out_ PUNICODE_STRING CrackedName,_Out_ PUNICODE_STRING DnsDomainName,_Out_ PULONG SubStatus)
VOID WINAPI None.EventRecordCallback(_In_ PEVENT_RECORD EventRecord)
NTSTATUS None None.SpQueryContextAttributes(_In_ LSA_SEC_HANDLE ContextHandle,_In_ ULONG ContextAttribute,_Out_ PVOID Buffer)
NTSTATUS None None.LsaApCallPackagePassthrough(_In_ PLSA_CLIENT_REQUEST ClientRequest,_In_ PVOID ProtocolSubmitBuffer,_In_ PVOID ClientBufferBase,_In_ ULONG SubmitBufferLength,_Out_ PVOID *ProtocolReturnBuffer,_Out_ PULONG ReturnBufferLength,_Out_ PNTSTATUS ProtocolStatus)
int None None.WlxMessageBox(_In_ HANDLE hWlx,_In_ HWND hwndOwner,_In_ LPWSTR lpszText,_In_ LPWSTR lpszTitle,_In_ UINT fuStyle)
VOID None None.FreeLsaHeap(_In_ PVOID Base)
NTSTATUS None None.LsaApLogonUser(_In_ PLSA_CLIENT_REQUEST ClientRequest,_In_ SECURITY_LOGON_TYPE LogonType,_In_ PVOID AuthenticationInformation,_In_ PVOID ClientAuthenticationBase,_In_ ULONG AuthenticationInformationLength,_Out_ PVOID *ProfileBuffer,_Out_ PULONG ProfileBufferLength,_Out_ PLUID LogonId,_Out_ PNTSTATUS SubStatus,_Out_ PLSA_TOKEN_INFORMATION_TYPE TokenInformationType,_Out_ PVOID *TokenInformation,_Out_ PLSA_UNICODE_STRING *AccountName,_Out_ PLSA_UNICODE_STRING *AuthenticatingAuthority)
NTSTATUS None None.CloseSamUser(_In_ PVOID UserHandle)
void None None.WlxLogoff(_In_ PVOID pWlxContext)
DWORD None None.NPEnumResource(_In_ HANDLE hEnum,_Inout_ LPDWORD lpcCount,_Out_ LPVOID lpBuffer,_Inout_ LPDWORD lpBufferSize)
int None None.WlxSwitchDesktopToUser(_In_ HANDLE hWlx)
HRESULT None ole32.Stat([out] STATSTG *pstatstg,[in] DWORD grfStatFlag)
int None None.WlxChangePasswordNotify(_In_ HANDLE hWlx,_In_ PWLX_MPR_NOTIFY_INFO pMprInfo,_In_ DWORD dwChangeInfo)
int None None.WlxAssignShellProtection(_In_ HANDLE hWlx,_In_ HANDLE hToken,_In_ HANDLE hProcess,_In_ HANDLE hThread)
WINOLEAPI None ole32.PropVariantClear(_In_ PROPVARIANT *pvar)
HRESULT None oleaut32.VarNeg(_In_ LPVARIANT pvarIn,_Out_ LPVARIANT pvarResult)
BOOL None None.WlxCreateUserDesktop(_In_ HANDLE hWlx,_In_ HANDLE hToken,_In_ DWORD Flags,_In_ PWSTR pszDesktopName,_Out_ PWLX_DESKTOP *ppDesktop)
HRESULT None None.PathCchAddExtension(_Inout_ PWSTR pszPath,_In_ size_t cchPath,_In_ PCWSTR pszExt)
ULONG None advapi32.QueryTrace(_In_ TRACEHANDLE SessionHandle,_In_ LPCTSTR SessionName,_Inout_ PEVENT_TRACE_PROPERTIES Properties)
ULONG None advapi32.QueryTraceW(_In_ TRACEHANDLE SessionHandle,_In_ LPCTSTR SessionName,_Inout_ PEVENT_TRACE_PROPERTIES Properties)
ULONG None advapi32.QueryTraceA(_In_ TRACEHANDLE SessionHandle,_In_ LPCTSTR SessionName,_Inout_ PEVENT_TRACE_PROPERTIES Properties)
ULONG None advapi32.QueryTrace(_In_ TRACEHANDLE SessionHandle,_In_ LPCTSTR SessionName,_Inout_ PEVENT_TRACE_PROPERTIES Properties)
ULONG None advapi32.QueryTraceW(_In_ TRACEHANDLE SessionHandle,_In_ LPCTSTR SessionName,_Inout_ PEVENT_TRACE_PROPERTIES Properties)
ULONG None advapi32.QueryTraceA(_In_ TRACEHANDLE SessionHandle,_In_ LPCTSTR SessionName,_Inout_ PEVENT_TRACE_PROPERTIES Properties)
WINOLEAPI None ole32.GetHGlobalFromStream(_In_ IStream *pstm,_Out_ HGLOBAL *phglobal)
void None None.ClientCallback_Function(_In_ ULONG_PTR Argument1,_In_ ULONG_PTR Argument2,_In_ PSecBuffer InputBuffer,_Out_ PSecBuffer OutputBuffer)
LONG WINAPI winscard.SCardFreeMemory(_In_ SCARDCONTEXT hContext,_In_ LPCVOID pvMem)
NTSTATUS NTAPI None.SpGetCredUIContextFn(_In_ LSA_SEC_HANDLE ContextHandle,_In_ GUID *CredType,_Out_ PULONG FlatCredUIContextLength,_Out_ PUCHAR *FlatCredUIContext)
LONG WINAPI winscard.SCardFreeMemory(_In_ SCARDCONTEXT hContext,_In_ LPCVOID pvMem)
VOID WINAPI None.EventRecordCallback(_In_ PEVENT_RECORD EventRecord)
Boolean None advapi32.EventEnabled(_In_ REGHANDLE RegHandle,_In_ PCEVENT_DESCRIPTOR EventDescriptor)
ULONG None advapi32.EventSetInformation(_In_ REGHANDLE RegHandle,_In_ EVENT_INFO_CLASS InformationClass,_In_ PVOID EventInformation,_In_ ULONG InformationLength)
BOOL WINAPI advapi32.CredIsProtected(_In_ LPTSTR pszProtectedCredentials,_Out_ CRED_PROTECTION_TYPE *pProtectionType)
BOOL WINAPI advapi32.CredIsProtectedW(_In_ LPTSTR pszProtectedCredentials,_Out_ CRED_PROTECTION_TYPE *pProtectionType)
BOOL WINAPI advapi32.CredIsProtectedA(_In_ LPTSTR pszProtectedCredentials,_Out_ CRED_PROTECTION_TYPE *pProtectionType)
ULONG None advapi32.QueryTrace(_In_ TRACEHANDLE SessionHandle,_In_ LPCTSTR SessionName,_Inout_ PEVENT_TRACE_PROPERTIES Properties)
ULONG None advapi32.QueryTraceW(_In_ TRACEHANDLE SessionHandle,_In_ LPCTSTR SessionName,_Inout_ PEVENT_TRACE_PROPERTIES Properties)
ULONG None advapi32.QueryTraceA(_In_ TRACEHANDLE SessionHandle,_In_ LPCTSTR SessionName,_Inout_ PEVENT_TRACE_PROPERTIES Properties)
LONG WINAPI winscard.SCardFreeMemory(_In_ SCARDCONTEXT hContext,_In_ LPCVOID pvMem)
ULONG None advapi32.GetTraceEnableFlags(_In_ TRACEHANDLE SessionHandle)
HRESULT None ole32.StgCreateDocfileOnILockBytes(_In_ ILockBytes *plkbyt,_In_ DWORD grfMode,_In_ DWORD reserved,_Out_ IStorage **ppstgOpen)
LONG WINAPI winscard.SCardFreeMemory(_In_ SCARDCONTEXT hContext,_In_ LPCVOID pvMem)
ULONG None advapi32.TraceEventInstance(_In_ TRACEHANDLE SessionHandle,_In_ PEVENT_INSTANCE_HEADER EventTrace,_In_ PEVENT_INSTANCE_INFO pInstInfo,_In_ PEVENT_INSTANCE_INFO pParentInstInfo)
LONG WINAPI winscard.SCardFreeMemory(_In_ SCARDCONTEXT hContext,_In_ LPCVOID pvMem)
BOOL None None.WlxQueryInetConnectorCredentials(_Out_ PWLX_CLIENT_CREDENTIALS_INFO_V1_0 pCred)
ULONG None advapi32.EnumerateTraceGuids(_Inout_ PTRACE_GUID_PROPERTIES *GuidPropertiesArray,_In_ ULONG PropertyArrayCount,_Out_ PULONG GuidCount)
BOOL None normaliz.IsNormalizedString(_In_ NORM_FORM NormForm,_In_ LPCWSTR lpString,_In_ int cwLength)
HRESULT None None.PathCchRemoveFileSpec(_Inout_ PWSTR pszPath,_In_ size_t cchPath)
HRESULT None oleaut32.VarOr(_In_ LPVARIANT pvarLeft,_In_ LPVARIANT pvarRight,_Out_ LPVARIANT pvarResult)
ULONG TDHAPI tdh.TdhEnumerateManifestProviderEvents(_In_ LPGUID ProviderGuid,_Out_ PPROVIDER_EVENT_INFO ProviderInfo,_Inout_ ULONG *BufferSize)
DWORD WINAPI credui.CredUIParseUserName(_In_ PCTSTR pszUserName,_Out_ PTSTR pszUser,_In_ ULONG ulUserMaxChars,_Out_ PTSTR pszDomain,_In_ ULONG ulDomainMaxChars)
DWORD WINAPI credui.CredUIParseUserNameW(_In_ PCTSTR pszUserName,_Out_ PTSTR pszUser,_In_ ULONG ulUserMaxChars,_Out_ PTSTR pszDomain,_In_ ULONG ulDomainMaxChars)
DWORD WINAPI credui.CredUIParseUserNameA(_In_ PCTSTR pszUserName,_Out_ PTSTR pszUser,_In_ ULONG ulUserMaxChars,_Out_ PTSTR pszDomain,_In_ ULONG ulDomainMaxChars)
HRESULT None oleaut32.SafeArrayCopy(_In_ SAFEARRAY *psa,_Out_ SAFEARRAY **ppsaOut)
LONG WINAPI scarddlg.SCardUIDlgSelectCard(_In_ LPOPENCARDNAME_EX pDlgStruc)
LONG WINAPI scarddlg.SCardUIDlgSelectCardW(_In_ LPOPENCARDNAME_EX pDlgStruc)
LONG WINAPI scarddlg.SCardUIDlgSelectCardA(_In_ LPOPENCARDNAME_EX pDlgStruc)
HRESULT None ole32.Commit([in] DWORD grfCommitFlags)
DWORD APIENTRY None.CancelConnectNotify(_Inout_ LPNOTIFYINFO lpNotifyInfo,_In_ LPNOTIFYCANCEL lpCancelInfo)
ULONG None advapi32.QueryTrace(_In_ TRACEHANDLE SessionHandle,_In_ LPCTSTR SessionName,_Inout_ PEVENT_TRACE_PROPERTIES Properties)
ULONG None advapi32.QueryTraceW(_In_ TRACEHANDLE SessionHandle,_In_ LPCTSTR SessionName,_Inout_ PEVENT_TRACE_PROPERTIES Properties)
ULONG None advapi32.QueryTraceA(_In_ TRACEHANDLE SessionHandle,_In_ LPCTSTR SessionName,_Inout_ PEVENT_TRACE_PROPERTIES Properties)
ULONG None advapi32.UpdateTrace(_In_ TRACEHANDLE SessionHandle,_In_ LPCTSTR SessionName,_Inout_ PEVENT_TRACE_PROPERTIES Properties)
ULONG None advapi32.UpdateTraceW(_In_ TRACEHANDLE SessionHandle,_In_ LPCTSTR SessionName,_Inout_ PEVENT_TRACE_PROPERTIES Properties)
ULONG None advapi32.UpdateTraceA(_In_ TRACEHANDLE SessionHandle,_In_ LPCTSTR SessionName,_Inout_ PEVENT_TRACE_PROPERTIES Properties)
LONG WINAPI winscard.SCardFreeMemory(_In_ SCARDCONTEXT hContext,_In_ LPCVOID pvMem)
LPVOID WINAPI kernel32.GlobalLock(_In_ HGLOBAL hMem)
ULONG None advapi32.UpdateTrace(_In_ TRACEHANDLE SessionHandle,_In_ LPCTSTR SessionName,_Inout_ PEVENT_TRACE_PROPERTIES Properties)
ULONG None advapi32.UpdateTraceW(_In_ TRACEHANDLE SessionHandle,_In_ LPCTSTR SessionName,_Inout_ PEVENT_TRACE_PROPERTIES Properties)
ULONG None advapi32.UpdateTraceA(_In_ TRACEHANDLE SessionHandle,_In_ LPCTSTR SessionName,_Inout_ PEVENT_TRACE_PROPERTIES Properties)
HRESULT None oleaut32.VarFix(_In_ LPVARIANT pvarIn,_Out_ LPVARIANT pvarResult)
ULONG None sechost.RemoveTraceCallback(_In_ LPCGUID pGuid)
LONG WINAPI winscard.SCardFreeMemory(_In_ SCARDCONTEXT hContext,_In_ LPCVOID pvMem)
ULONG None advapi32.QueryTrace(_In_ TRACEHANDLE SessionHandle,_In_ LPCTSTR SessionName,_Inout_ PEVENT_TRACE_PROPERTIES Properties)
ULONG None advapi32.QueryTraceW(_In_ TRACEHANDLE SessionHandle,_In_ LPCTSTR SessionName,_Inout_ PEVENT_TRACE_PROPERTIES Properties)
ULONG None advapi32.QueryTraceA(_In_ TRACEHANDLE SessionHandle,_In_ LPCTSTR SessionName,_Inout_ PEVENT_TRACE_PROPERTIES Properties)
ULONG None wldap32.ldap_unbind_s(_In_ LDAP *ld)
SECURITY_STATUS SEC_Entry secur32.ImpersonateSecurityContext(_In_ PCtxtHandle phContext)
NTSTATUS None None.ClientCallback(_In_ PCHAR Callback,_In_ ULONG_PTR Argument1,_In_ ULONG_PTR Argument2,_In_ PSecBuffer Input,_Out_ PSecBuffer Output)
LONG WINAPI winscard.SCardGetCardTypeProviderName(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCardName,_In_ DWORD dwProviderId,_Out_ LPTSTR szProvider,_Inout_ LPDWORD pcchProvider)
LONG WINAPI winscard.SCardGetCardTypeProviderNameW(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCardName,_In_ DWORD dwProviderId,_Out_ LPTSTR szProvider,_Inout_ LPDWORD pcchProvider)
LONG WINAPI winscard.SCardGetCardTypeProviderNameA(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCardName,_In_ DWORD dwProviderId,_Out_ LPTSTR szProvider,_Inout_ LPDWORD pcchProvider)
BOOL None advapi32.CredGetTargetInfo(_In_ LPCTSTR TargetName,_In_ DWORD Flags,_Out_ PCREDENTIAL_TARGET_INFORMATION *TargetInfo)
BOOL None advapi32.CredGetTargetInfoW(_In_ LPCTSTR TargetName,_In_ DWORD Flags,_Out_ PCREDENTIAL_TARGET_INFORMATION *TargetInfo)
BOOL None advapi32.CredGetTargetInfoA(_In_ LPCTSTR TargetName,_In_ DWORD Flags,_Out_ PCREDENTIAL_TARGET_INFORMATION *TargetInfo)
virtual void None.Free(void* pv None)
HRESULT None ole32.Stat([out] STATSTG *pstatstg,[in] DWORD grfStatFlag)
LONG WINAPI winscard.SCardFreeMemory(_In_ SCARDCONTEXT hContext,_In_ LPCVOID pvMem)
BOOL None None.WlxSetTimeout(_In_ HANDLE hWlx,_In_ DWORD Timeout)
SECURITY_STATUS SEC_Entry secur32.InitializeSecurityContext(_In_opt_ PCredHandle phCredential,_In_opt_ PCtxtHandle phContext,_In_opt_ SEC_CHAR *pszTargetName,_In_ ULONG fContextReq,_In_ ULONG Reserved1,_In_ ULONG TargetDataRep,_In_opt_ PSecBufferDesc pInput,_In_ ULONG Reserved2,_Inout_opt_ PCtxtHandle phNewContext,_Inout_opt_ PSecBufferDesc pOutput,_Out_ PULONG pfContextAttr,_Out_opt_ PTimeStamp ptsExpiry)
SECURITY_STATUS SEC_Entry secur32.InitializeSecurityContextW(_In_opt_ PCredHandle phCredential,_In_opt_ PCtxtHandle phContext,_In_opt_ SEC_CHAR *pszTargetName,_In_ ULONG fContextReq,_In_ ULONG Reserved1,_In_ ULONG TargetDataRep,_In_opt_ PSecBufferDesc pInput,_In_ ULONG Reserved2,_Inout_opt_ PCtxtHandle phNewContext,_Inout_opt_ PSecBufferDesc pOutput,_Out_ PULONG pfContextAttr,_Out_opt_ PTimeStamp ptsExpiry)
SECURITY_STATUS SEC_Entry secur32.InitializeSecurityContextA(_In_opt_ PCredHandle phCredential,_In_opt_ PCtxtHandle phContext,_In_opt_ SEC_CHAR *pszTargetName,_In_ ULONG fContextReq,_In_ ULONG Reserved1,_In_ ULONG TargetDataRep,_In_opt_ PSecBufferDesc pInput,_In_ ULONG Reserved2,_Inout_opt_ PCtxtHandle phNewContext,_Inout_opt_ PSecBufferDesc pOutput,_Out_ PULONG pfContextAttr,_Out_opt_ PTimeStamp ptsExpiry)
WINOLEAPI None ole32.FreePropVariantArray(_In_ ULONG cVariants,_In_ PROPVARIANT *rgvars)
SECURITY_STATUS SEC_Entry secur32.QueryContextAttributes(_In_ PCtxtHandle phContext,_In_ ULONG ulAttribute,_Out_ PVOID pBuffer)
SECURITY_STATUS SEC_Entry secur32.QueryContextAttributesW(_In_ PCtxtHandle phContext,_In_ ULONG ulAttribute,_Out_ PVOID pBuffer)
SECURITY_STATUS SEC_Entry secur32.QueryContextAttributesA(_In_ PCtxtHandle phContext,_In_ ULONG ulAttribute,_Out_ PVOID pBuffer)
SECURITY_STATUS SEC_Entry secur32.MakeSignature(_In_ PCtxtHandle phContext,_In_ ULONG fQOP,_Inout_ PSecBufferDesc pMessage,_In_ ULONG MessageSeqNo)
BOOL WINAPI kernel32.RequestWakeupLatency(_In_ LATENCY_TIME latency)
NTSTATUS None None.CopyFromClientBuffer(_In_ PLSA_CLIENT_REQUEST ClientRequest,_In_ ULONG Length,_In_ PVOID BufferToCopy,_In_ PVOID ClientBaseAddress)
void None mpr.WNetSetLastError(_In_ DWORD err,_In_ LPTSTR lpError,_In_ LPTSTR lpProvider)
void None mpr.WNetSetLastErrorA(_In_ DWORD err,_In_ LPTSTR lpError,_In_ LPTSTR lpProvider)
void None None.WS_SET_CHANNEL_PROPERTY_CALLBACK(_In_ void* channelInstance,_In_ WS_CHANNEL_PROPERTY_ID id,const void* value,_In_ ULONG valueSize,_In_opt_ WS_ERROR* error)
HRESULT None ole32.Delete([in] REFFMTID fmtid)
void NTAPI None.LsaProtectMemory(_Inout_ PVOID Buffer,_In_ ULONG BufferSize)
HRESULT None dwrite.DWriteCreateFactory(_In_ DWRITE_FACTORY_TYPE factoryType,_In_ REFIID iid,_Out_ IUnknown **factory)
VOID None None.LsaApLogonTerminated(_In_ PLUID LogonId)
ULONG None advapi32.UnregisterTraceGuids(_In_ TRACEHANDLE RegistrationHandle)
SECURITY_STATUS SEC_Entry secur32.AcquireCredentialsHandle(_In_ SEC_CHAR *pszPrincipal,_In_ SEC_CHAR *pszPackage,_In_ ULONG fCredentialUse,_In_ PLUID pvLogonID,_In_ PVOID pAuthData,_In_ SEC_GET_KEY_FN pGetKeyFn,_In_ PVOID pvGetKeyArgument,_Out_ PCredHandle phCredential,_Out_ PTimeStamp ptsExpiry)
SECURITY_STATUS SEC_Entry secur32.AcquireCredentialsHandleW(_In_ SEC_CHAR *pszPrincipal,_In_ SEC_CHAR *pszPackage,_In_ ULONG fCredentialUse,_In_ PLUID pvLogonID,_In_ PVOID pAuthData,_In_ SEC_GET_KEY_FN pGetKeyFn,_In_ PVOID pvGetKeyArgument,_Out_ PCredHandle phCredential,_Out_ PTimeStamp ptsExpiry)
SECURITY_STATUS SEC_Entry secur32.AcquireCredentialsHandleA(_In_ SEC_CHAR *pszPrincipal,_In_ SEC_CHAR *pszPackage,_In_ ULONG fCredentialUse,_In_ PLUID pvLogonID,_In_ PVOID pAuthData,_In_ SEC_GET_KEY_FN pGetKeyFn,_In_ PVOID pvGetKeyArgument,_Out_ PCredHandle phCredential,_Out_ PTimeStamp ptsExpiry)
DWORD None None.NPGetUser(_In_ LPTSTR lpName,_Out_ LPTSTR lpUserName,_Inout_ LPDWORD lpBufferSize)
NTSTATUS None None.SpImportSecurityContext(_In_ PSecBuffer pPackedContext,_In_ HANDLE Token,_Out_ PLSA_SEC_HANDLE phContext)
HRESULT None oleaut32.VarAnd(_In_ LPVARIANT pvarLeft,_In_ LPVARIANT pvarRight,_Out_ LPVARIANT pvarResult)
NTSTATUS None None.GetClientInfo(_Out_ PSECPKG_CLIENT_INFO ClientInfo)
NTSTATUS WINAPI certpoleng.PstGetUserNameForCertificate(_In_ PCCERT_CONTEXT pCertContext,_Out_ PUNICODE_STRING UserName)
NTSTATUS None None.SpUnsealMessage(_In_ LSA_SEC_HANDLE ContextHandle,_In_ PSecBufferDesc MessageBuffers,_In_ ULONG MessageSequenceNumber,_Out_ PULONG QualityOfProtection)
BOOLEAN WINAPI powrprof.ReadPwrScheme(_In_ UINT uiID,_Out_ PPOWER_POLICY pPowerPolicy)
LONG WINAPI winscard.SCardGetTransmitCount(_In_ SCARDHANDLE hCard,_Out_ LPDWORD pcTransmitCount)
SECURITY_STATUS None sspicli.SspiFreeAuthIdentity(_In_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE AuthData)
HRESULT None oleaut32.VarIdiv(_In_ LPVARIANT pvarLeft,_In_ LPVARIANT pvarRight,_Out_ LPVARIANT pvarResult)
ULONG None advapi32.EventActivityIdControl(_In_ ULONG ControlCode,_Inout_ LPGUID ActivityId)
HRESULT None oleaut32.VarPow(_In_ LPVARIANT pvarLeft,_In_ LPVARIANT pvarRight,_Out_ LPVARIANT pvarResult)
BOOL WINAPI advapi32.SaferSetPolicyInformation(_In_ DWORD dwScopeId,_In_ SAFER_POLICY_INFO_CLASS SaferPolicyInfoClass,_In_ DWORD InfoBufferSize,_In_ PVOID InfoBuffer,_Reserved_ LPVOID lpReserved)
HRESULT None oleaut32.VarImp(_In_ LPVARIANT pvarLeft,_In_ LPVARIANT pvarRight,_Out_ LPVARIANT pvarResult)
NTSTATUS NTAPI None.SpLsaModeInitialize(_In_ ULONG LsaVersion,_Out_ PULONG PackageVersion,_Out_ PSECPKG_FUNCTION_TABLE *ppTables,_Out_ PULONG pcTables)
NTSTATUS None None.LsapChangeBlankPasswordRestriction(_In_ BOOLEAN Enable)
BOOL None advapi32.CredRename(_In_ LPCTSTR OldTargetName,_In_ LPCTSTR NewTargetName,_In_ DWORD Type,_In_ DWORD Flags)
BOOL None advapi32.CredRenameW(_In_ LPCTSTR OldTargetName,_In_ LPCTSTR NewTargetName,_In_ DWORD Type,_In_ DWORD Flags)
BOOL None advapi32.CredRenameA(_In_ LPCTSTR OldTargetName,_In_ LPCTSTR NewTargetName,_In_ DWORD Type,_In_ DWORD Flags)
WINOLEAPI None ole32.StgIsStorageILockBytes(ILockBytes *plkbyt None)
HRESULT None None.PathCchFindExtension(_In_ PCWSTR pszPath,_In_ size_t cchPath,_Out_ PCWSTR *ppszExt)
BOOL None advapi32.CredRename(_In_ LPCTSTR OldTargetName,_In_ LPCTSTR NewTargetName,_In_ DWORD Type,_In_ DWORD Flags)
BOOL None advapi32.CredRenameW(_In_ LPCTSTR OldTargetName,_In_ LPCTSTR NewTargetName,_In_ DWORD Type,_In_ DWORD Flags)
BOOL None advapi32.CredRenameA(_In_ LPCTSTR OldTargetName,_In_ LPCTSTR NewTargetName,_In_ DWORD Type,_In_ DWORD Flags)
BOOL None kernel32.GetNLSVersion(_In_ NLS_FUNCTION Function,_In_ LCID Locale,_Inout_ LPNLSVERSIONINFO lpVersionInformation)
DWORD None None.NPCancelConnection(_In_ LPTSTR lpName,_In_ BOOL fForce)
NTSTATUS None None.FreeClientBuffer(_In_ PLSA_CLIENT_REQUEST ClientRequest,_In_ PVOID ClientBaseAddress)
WINOLEAPI None ole32.StgGetIFillLockBytesOnILockBytes(_In_ ILockBytes *pilb,_Out_ IFillLockBytes **ppflb)
BOOL None advapi32.CredRename(_In_ LPCTSTR OldTargetName,_In_ LPCTSTR NewTargetName,_In_ DWORD Type,_In_ DWORD Flags)
BOOL None advapi32.CredRenameW(_In_ LPCTSTR OldTargetName,_In_ LPCTSTR NewTargetName,_In_ DWORD Type,_In_ DWORD Flags)
BOOL None advapi32.CredRenameA(_In_ LPCTSTR OldTargetName,_In_ LPCTSTR NewTargetName,_In_ DWORD Type,_In_ DWORD Flags)
SEC_ENTRY None None.OnProfileLoaded(_In_ PVOID ProviderHandle,_In_ HANDLE UserToken,_In_ BOOLEAN Loaded)
NTSTATUS None None.FreeClientBuffer(_In_ PLSA_CLIENT_REQUEST ClientRequest,_In_ PVOID ClientBaseAddress)
LONG WINAPI winscard.SCardIntroduceReaderGroup(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szGroupName)
LONG WINAPI winscard.SCardIntroduceReaderGroupW(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szGroupName)
LONG WINAPI winscard.SCardIntroduceReaderGroupA(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szGroupName)
NTSTATUS NTAPI secur32.LsaGetLogonSessionData(_In_ PLUID LogonId,_Out_ PSECURITY_LOGON_SESSION_DATA *ppLogonSessionData)
NTSTATUS None None.LsaApLogonUserEx(_In_ PLSA_CLIENT_REQUEST ClientRequest,_In_ SECURITY_LOGON_TYPE LogonType,_In_ PVOID AuthenticationInformation,_In_ PVOID ClientAuthenticationBase,_In_ ULONG AuthenticationInformationLength,_Out_ PVOID *ProfileBuffer,_Out_ PULONG ProfileBufferLength,_Out_ PLUID LogonId,_Out_ PNTSTATUS SubStatus,_Out_ PLSA_TOKEN_INFORMATION_TYPE TokenInformationType,_Out_ PVOID *TokenInformation,_Out_ PUNICODE_STRING *AccountName,_Out_ PUNICODE_STRING *AuthenticatingAuthority,_Out_ PUNICODE_STRING *MachineName)
LONG WINAPI winscard.SCardControl(_In_ SCARDHANDLE hCard,_In_ DWORD dwControlCode,_In_ LPCVOID lpInBuffer,_In_ DWORD nInBufferSize,_Out_ LPVOID lpOutBuffer,_In_ DWORD nOutBufferSize,_Out_ LPDWORD lpBytesReturned)
NTSTATUS WINAPI None.SpValidateTargetInfoFn(_In_opt_ PLSA_CLIENT_REQUEST ClientRequest,_In_ PVOID ProtocolSubmitBuffer,_In_ PVOID ClientBufferBase,_In_ ULONG SubmitBufferLength,_In_ PSECPKG_TARGETINFO TargetInfo)
NTSTATUS None None.FreeClientBuffer(_In_ PLSA_CLIENT_REQUEST ClientRequest,_In_ PVOID ClientBaseAddress)
void None None.WS_ABORT_CHANNEL_CALLBACK(_In_ void* channelInstance,_In_opt_ WS_ERROR* error)
NTSTATUS None None.FreeClientBuffer(_In_ PLSA_CLIENT_REQUEST ClientRequest,_In_ PVOID ClientBaseAddress)
PVOID NTAPI None.CreateSharedMemory(_In_ ULONG MaxSize,_In_ ULONG InitialSize)
DWORD WINAPI credui.CredUIConfirmCredentials(_In_ PCTSTR pszTargetName,_In_ BOOL bConfirm)
DWORD WINAPI credui.CredUIConfirmCredentialsW(_In_ PCTSTR pszTargetName,_In_ BOOL bConfirm)
DWORD WINAPI credui.CredUIConfirmCredentialsA(_In_ PCTSTR pszTargetName,_In_ BOOL bConfirm)
HRESULT None oleaut32.VarXor(_In_ LPVARIANT pvarLeft,_In_ LPVARIANT pvarRight,_Out_ LPVARIANT pvarResult)
SECURITY_STATUS SEC_Entry sspicli.EnumerateSecurityPackages(_In_ PULONG pcPackages,_In_ PSecPkgInfo *ppPackageInfo)
SECURITY_STATUS SEC_Entry sspicli.EnumerateSecurityPackagesW(_In_ PULONG pcPackages,_In_ PSecPkgInfo *ppPackageInfo)
SECURITY_STATUS SEC_Entry sspicli.EnumerateSecurityPackagesA(_In_ PULONG pcPackages,_In_ PSecPkgInfo *ppPackageInfo)
ULONG None advapi32.UpdateTrace(_In_ TRACEHANDLE SessionHandle,_In_ LPCTSTR SessionName,_Inout_ PEVENT_TRACE_PROPERTIES Properties)
ULONG None advapi32.UpdateTraceW(_In_ TRACEHANDLE SessionHandle,_In_ LPCTSTR SessionName,_Inout_ PEVENT_TRACE_PROPERTIES Properties)
ULONG None advapi32.UpdateTraceA(_In_ TRACEHANDLE SessionHandle,_In_ LPCTSTR SessionName,_Inout_ PEVENT_TRACE_PROPERTIES Properties)
NTSTATUS None None.FreeClientBuffer(_In_ PLSA_CLIENT_REQUEST ClientRequest,_In_ PVOID ClientBaseAddress)
DWORD None None.NPGetConnection3(_In_ LPCWSTR lpLocalName,_In_ DWORD dwLevel,_Out_ LPVOID lpBuffer,_Inout_ LPDWORD lpBufferSize)
NTSTATUS None None.LsapChangeBlankPasswordRestriction(_In_ BOOLEAN Enable)
BOOL None advapi32.CredRename(_In_ LPCTSTR OldTargetName,_In_ LPCTSTR NewTargetName,_In_ DWORD Type,_In_ DWORD Flags)
BOOL None advapi32.CredRenameW(_In_ LPCTSTR OldTargetName,_In_ LPCTSTR NewTargetName,_In_ DWORD Type,_In_ DWORD Flags)
BOOL None advapi32.CredRenameA(_In_ LPCTSTR OldTargetName,_In_ LPCTSTR NewTargetName,_In_ DWORD Type,_In_ DWORD Flags)
BOOL None shlwapi.PathRemoveFileSpec(_Inout_ LPTSTR pszPath)
BOOL None shlwapi.PathRemoveFileSpecW(_Inout_ LPTSTR pszPath)
BOOL None shlwapi.PathRemoveFileSpecA(_Inout_ LPTSTR pszPath)
SECURITY_STATUS None sspicli.SspiZeroAuthIdentity(_In_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE AuthData)
HRESULT None oleaut32.VarDecCmp(_In_ LPDECIMAL pdecLeft,_In_ LPDECIMAL pdecRight)
ULONG __stdcall tdh.TdhQueryProviderFieldInformation(_In_ LPGUID pGuid,_In_ ULONGLONG EventFieldValue,_In_ EVENT_FIELD_TYPE EventFieldType,_Out_ PPROVIDER_FIELD_INFOARRAY pBuffer,_Inout_ ULONG *pBufferSize)
SECURITY_STATUS SEC_Entry secur32.InitializeSecurityContext(_In_opt_ PCredHandle phCredential,_In_opt_ PCtxtHandle phContext,_In_opt_ SEC_CHAR *pszTargetName,_In_ ULONG fContextReq,_In_ ULONG Reserved1,_In_ ULONG TargetDataRep,_In_opt_ PSecBufferDesc pInput,_In_ ULONG Reserved2,_Inout_opt_ PCtxtHandle phNewContext,_Inout_opt_ PSecBufferDesc pOutput,_Out_ PULONG pfContextAttr,_Out_opt_ PTimeStamp ptsExpiry)
SECURITY_STATUS SEC_Entry secur32.InitializeSecurityContextW(_In_opt_ PCredHandle phCredential,_In_opt_ PCtxtHandle phContext,_In_opt_ SEC_CHAR *pszTargetName,_In_ ULONG fContextReq,_In_ ULONG Reserved1,_In_ ULONG TargetDataRep,_In_opt_ PSecBufferDesc pInput,_In_ ULONG Reserved2,_Inout_opt_ PCtxtHandle phNewContext,_Inout_opt_ PSecBufferDesc pOutput,_Out_ PULONG pfContextAttr,_Out_opt_ PTimeStamp ptsExpiry)
SECURITY_STATUS SEC_Entry secur32.InitializeSecurityContextA(_In_opt_ PCredHandle phCredential,_In_opt_ PCtxtHandle phContext,_In_opt_ SEC_CHAR *pszTargetName,_In_ ULONG fContextReq,_In_ ULONG Reserved1,_In_ ULONG TargetDataRep,_In_opt_ PSecBufferDesc pInput,_In_ ULONG Reserved2,_Inout_opt_ PCtxtHandle phNewContext,_Inout_opt_ PSecBufferDesc pOutput,_Out_ PULONG pfContextAttr,_Out_opt_ PTimeStamp ptsExpiry)
HRESULT None ole32.Enum([out] IEnumSTATPROPSTG **ppenum)
bool None None.IS_HIGH_SURROGATE(WCHAR wch None)
HRESULT None oleaut32.VarR8Round(_In_ double dblIn,_In_ int cDecimals,_Out_ double *pdblResult)
NTSTATUS None None.SpGetCredentials(_In_ LSA_SEC_HANDLE CredentialHandle,_Out_ PSecBuffer Credentials)
NTSTATUS NTAPI advapi32.LsaSetDomainInformationPolicy(_In_ LSA_HANDLE PolicyHandle,_In_ POLICY_DOMAIN_INFORMATION_CLASS InformationClass,_In_ PVOID Buffer)
SECURITY_STATUS SEC_Entry secur32.QuerySecurityContextToken(_In_ PCtxtHandle phContext,_Out_ HANDLE *phToken)
BOOL None kernel32.SetCalendarInfo(_In_ LCID Locale,_In_ CALID Calendar,_In_ CALTYPE CalType,_In_ LPCTSTR lpCalData)
BOOL None kernel32.SetCalendarInfoW(_In_ LCID Locale,_In_ CALID Calendar,_In_ CALTYPE CalType,_In_ LPCTSTR lpCalData)
BOOL None kernel32.SetCalendarInfoA(_In_ LCID Locale,_In_ CALID Calendar,_In_ CALTYPE CalType,_In_ LPCTSTR lpCalData)
SECURITY_STATUS SEC_Entry secur32.DecryptMessage(_In_ PCtxtHandle phContext,_Inout_ PSecBufferDesc pMessage,_In_ ULONG MessageSeqNo,_Out_ PULONG pfQOP)
HRESULT None oleaut32.VarFix(_In_ LPVARIANT pvarIn,_Out_ LPVARIANT pvarResult)
ULONG None sechost.ControlTrace(_In_ TRACEHANDLE SessionHandle,_In_ LPCTSTR SessionName,_Inout_ PEVENT_TRACE_PROPERTIES Properties,_In_ ULONG ControlCode)
ULONG None sechost.ControlTraceW(_In_ TRACEHANDLE SessionHandle,_In_ LPCTSTR SessionName,_Inout_ PEVENT_TRACE_PROPERTIES Properties,_In_ ULONG ControlCode)
ULONG None sechost.ControlTraceA(_In_ TRACEHANDLE SessionHandle,_In_ LPCTSTR SessionName,_Inout_ PEVENT_TRACE_PROPERTIES Properties,_In_ ULONG ControlCode)
NTSTATUS None None.CopyToClientBuffer(_In_ PLSA_CLIENT_REQUEST ClientRequest,_In_ ULONG Length,_In_ PVOID ClientBaseAddress,_In_ PVOID BufferToCopy)
DWORD None credui.CredUIStoreSSOCredW(_In_ PCWSTR pszRealm,_In_ PCWSTR pszUsername,_In_ PCWSTR pszPassword,_In_ BOOL bPersist)
SECURITY_STATUS None credui.SspiGetCredUIContext(_In_ HANDLE ContextHandle,_In_ GUID *CredType,_In_ LUID *LogonId,_Out_ PSEC_WINNT_CREDUI_CONTEXT_VECTOR *CredUIContexts,_Out_ HANDLE *TokenHandle)
BOOL None gdi32.DeleteEnhMetaFile(_In_ HENHMETAFILE hemf)
BOOL None gdi32.DeleteEnhMetaFileW(_In_ HENHMETAFILE hemf)
SECURITY_STATUS SEC_Entry secur32.AcceptSecurityContext(_In_opt_ PCredHandle phCredential,_Inout_opt_ PCtxtHandle phContext,_In_opt_ PSecBufferDesc pInput,_In_ ULONG fContextReq,_In_ ULONG TargetDataRep,_Inout_opt_ PCtxtHandle phNewContext,_Inout_opt_ PSecBufferDesc pOutput,_Out_ PULONG pfContextAttr,_Out_opt_ PTimeStamp ptsTimeStamp)
NTSTATUS None None.AddCredential(_In_ PLUID LogonId,_In_ ULONG AuthenticationPackage,_In_ PLSA_STRING PrimaryKeyValue,_In_ PLSA_STRING Credentials)
DWORD None None.NPFMXEditPerm(_In_ LPTSTR lpDriveName,_In_ HWND hwndFMX,_In_ DWORD nType)
NTSTATUS None None.AllocateClientBuffer(_In_ PLSA_CLIENT_REQUEST ClientRequest,_In_ ULONG LengthRequired,_Out_ PVOID *ClientBaseAddress)
DWORD None credui.CredUIStoreSSOCredW(_In_ PCWSTR pszRealm,_In_ PCWSTR pszUsername,_In_ PCWSTR pszPassword,_In_ BOOL bPersist)
NTSTATUS None None.LsaApCallPackage(_In_ PLSA_CLIENT_REQUEST ClientRequest,_In_ PVOID ProtocolSubmitBuffer,_In_ PVOID ClientBufferBase,_In_ ULONG SubmitBufferLength,_Out_ PVOID *ProtocolReturnBuffer,_Out_ PULONG ReturnBufferLength,_Out_ PNTSTATUS ProtocolStatus)
NTSTATUS None None.SpAcquireCredentialsHandle(_In_ PUNICODE_STRING PrincipalName,_In_ ULONG CredentialUseFlags,_In_ PLUID LogonId,_In_ PVOID AuthorizationData,_In_ PVOID GetKeyFunction,_In_ PVOID GetKeyArgument,_Out_ PLSA_SEC_HANDLE CredentialHandle,_Out_ PTimeStamp ExpirationTime)
SECURITY_STATUS SEC_Entry secur32.QuerySecurityPackageInfo(_In_ SEC_CHAR *pszPackageName,_Out_ PSecPkgInfo *ppPackageInfo)
SECURITY_STATUS SEC_Entry secur32.QuerySecurityPackageInfoW(_In_ SEC_CHAR *pszPackageName,_Out_ PSecPkgInfo *ppPackageInfo)
SECURITY_STATUS SEC_Entry secur32.QuerySecurityPackageInfoA(_In_ SEC_CHAR *pszPackageName,_Out_ PSecPkgInfo *ppPackageInfo)
BOOLEAN WINAPI powrprof.IsPwrHibernateAllowed(void None None)
DWORD None credui.CredUIStoreSSOCredW(_In_ PCWSTR pszRealm,_In_ PCWSTR pszUsername,_In_ PCWSTR pszPassword,_In_ BOOL bPersist)
BOOLEAN None sspicli.SspiIsAuthIdentityEncrypted(_In_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE EncryptedAuthData)
NTSTATUS NTAPI None.Msv1_0SubAuthenticationFilter(_In_ NETLOGON_LOGON_INFO_CLASS LogonLevel,_In_ PVOID LogonInformation,_In_ ULONG Flags,_In_ PUSER_ALL_INFORMATION UserAll,_Out_ PULONG WhichFields,_Out_ PULONG UserFlags,_Out_ PBOOLEAN Authoritative,_Out_ PLARGE_INTEGER LogoffTime,_Out_ PLARGE_INTEGER KickoffTime)
SECURITY_STATUS None credui.SspiGetCredUIContext(_In_ HANDLE ContextHandle,_In_ GUID *CredType,_In_ LUID *LogonId,_Out_ PSEC_WINNT_CREDUI_CONTEXT_VECTOR *CredUIContexts,_Out_ HANDLE *TokenHandle)
DWORD None None.NPSearchDialog(_In_ HWND hParent,_In_ LPNETRESOURCE lpNetResource,_Out_ LPVOID lpBuffer,_Out_ DWORD cbBuffer,_In_ LPDWORD lpnFlags)
HRESULT None None.ResizeBuffers(UINT BufferCount None,UINT Width None,UINT Height None,DXGI_FORMAT NewFormat None,UINT SwapChainFlags None)
SECURITY_STATUS SEC_Entry secur32.QuerySecurityPackageInfo(_In_ SEC_CHAR *pszPackageName,_Out_ PSecPkgInfo *ppPackageInfo)
SECURITY_STATUS SEC_Entry secur32.QuerySecurityPackageInfoW(_In_ SEC_CHAR *pszPackageName,_Out_ PSecPkgInfo *ppPackageInfo)
SECURITY_STATUS SEC_Entry secur32.QuerySecurityPackageInfoA(_In_ SEC_CHAR *pszPackageName,_Out_ PSecPkgInfo *ppPackageInfo)
LONG WINAPI winscard.SCardStatus(_In_ SCARDHANDLE hCard,_Out_ LPTSTR szReaderName,_Inout_opt_ LPDWORD pcchReaderLen,_Out_opt_ LPDWORD pdwState,_Out_opt_ LPDWORD pdwProtocol,_Out_ LPBYTE pbAtr,_Inout_opt_ LPDWORD pcbAtrLen)
LONG WINAPI winscard.SCardStatusW(_In_ SCARDHANDLE hCard,_Out_ LPTSTR szReaderName,_Inout_opt_ LPDWORD pcchReaderLen,_Out_opt_ LPDWORD pdwState,_Out_opt_ LPDWORD pdwProtocol,_Out_ LPBYTE pbAtr,_Inout_opt_ LPDWORD pcbAtrLen)
LONG WINAPI winscard.SCardStatusA(_In_ SCARDHANDLE hCard,_Out_ LPTSTR szReaderName,_Inout_opt_ LPDWORD pcchReaderLen,_Out_opt_ LPDWORD pdwState,_Out_opt_ LPDWORD pdwProtocol,_Out_ LPBYTE pbAtr,_Inout_opt_ LPDWORD pcbAtrLen)
BOOLEAN WINAPI powrprof.CanUserWritePwrScheme(void None None)
SECURITY_STATUS SEC_Entry secur32.AcceptSecurityContext(_In_opt_ PCredHandle phCredential,_Inout_opt_ PCtxtHandle phContext,_In_opt_ PSecBufferDesc pInput,_In_ ULONG fContextReq,_In_ ULONG TargetDataRep,_Inout_opt_ PCtxtHandle phNewContext,_Inout_opt_ PSecBufferDesc pOutput,_Out_ PULONG pfContextAttr,_Out_opt_ PTimeStamp ptsTimeStamp)
HRESULT None oleaut32.VarRound(_In_ LPVARIANT pvarIn,_In_ int cDecimals,_Out_ LPVARIANT pvarResult)
VOID None None.AuditLogon(_In_ NTSTATUS Status,_In_ NTSTATUS SubStatus,_In_ PUNICODE_STRING AccountName,_In_ PUNICODE_STRING AuthenticatingAuthority,_In_ PUNICODE_STRING WorkstationName,_In_opt_ PSID UserSid,_In_ SECURITY_LOGON_TYPE LogonType,_In_ PTOKEN_SOURCE TokenSource,_In_ PLUID LogonId)
SECURITY_STATUS SEC_ENTRY secur32.SaslGetContextOption(_In_ PCtxtHandle ContextHandle,_In_ ULONG Option,_Out_ PVOID Value,_Out_ ULONG Size,_Out_opt_ PULONG Needed)
NETIOAPI_API None iphlpapi.NotifyIpInterfaceChange(_In_ ADDRESS_FAMILY Family,_In_ PIPINTERFACE_CHANGE_CALLBACK Callback,_In_ PVOID CallerContext,_In_ BOOLEAN InitialNotification,_Inout_ HANDLE *NotificationHandle)
SECURITY_STATUS SEC_Entry secur32.EncryptMessage(_In_ PCtxtHandle phContext,_In_ ULONG fQOP,_Inout_ PSecBufferDesc pMessage,_In_ ULONG MessageSeqNo)
BOOL None None.WlxQueryTsLogonCredentials(_Out_ PWLX_CLIENT_CREDENTIALS_INFO_V2_0 pCred)
HRESULT None oleaut32.VarNot(_In_ LPVARIANT pvarIn,_Out_ LPVARIANT pvarResult)
BOOL None None.WlxDisplayStatusMessage(_In_ PVOID pWlxContext,_In_ HDESK hDesktop,_In_ DWORD dwOptions,_In_ PWSTR pTitle,_In_ PWSTR pMessage)
SECURITY_STATUS None sspicli.SspiDecryptAuthIdentity(_Inout_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE EncryptedAuthData)
NTSTATUS None secur32.LsaConnectUntrusted(_Out_ PHANDLE LsaHandle)
DWORD None None.NPOpenEnum(_In_ DWORD dwScope,_In_ DWORD dwType,_In_ DWORD dwUsage,_In_ LPNETRESOURCE lpNetResource,_Out_ LPHANDLE lphEnum)
NTSTATUS None None.CallPackagePassthrough(_In_ PUNICODE_STRING AuthenticationPackage,_In_ PVOID ClientBufferBase,_In_ PVOID ProtocolSubmitBuffer,_In_ ULONG SubmitBufferLength,_Out_ PVOID *ProtocolReturnBuffer,_Out_ PULONG ReturnBufferLength,_Out_ PNTSTATUS ProtocolStatus)
BOOL None schannel.SslEmptyCache(_In_ LPSTR pszTargetName,_In_ DWORD dwFlags)
BOOL None schannel.SslEmptyCacheW(_In_ LPSTR pszTargetName,_In_ DWORD dwFlags)
BOOL None schannel.SslEmptyCacheA(_In_ LPSTR pszTargetName,_In_ DWORD dwFlags)
SECURITY_STATUS None sspicli.SspiPrepareForCredWrite(_In_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE AuthIdentity,_In_ PCWSTR pszTargetName,_Out_ PULONG pCredmanCredentialType,_Out_ PCWSTR *ppszCredmanTargetName,_Out_ PCWSTR *ppszCredmanUserName,_Out_ PUCHAR *ppCredentialBlob,_Out_ PULONG pCredentialBlobSize)
DWORD WINAPI powrprof.PowerSettingRegisterNotification(_In_ LPCGUID SettingGuid,_In_ DWORD Flags,_In_ HANDLE Recipient,_Out_ PHPOWERNOTIFY RegistrationHandle)
DWORD None None.NPOpenEnum(_In_ DWORD dwScope,_In_ DWORD dwType,_In_ DWORD dwUsage,_In_ LPNETRESOURCE lpNetResource,_Out_ LPHANDLE lphEnum)
BOOL None kernel32.EnumSystemLanguageGroups(_In_ LANGUAGEGROUP_ENUMPROC lpLanguageGroupEnumProc,_In_ DWORD dwFlags,_In_ LONG_PTR lParam)
BOOL None kernel32.EnumSystemLanguageGroupsW(_In_ LANGUAGEGROUP_ENUMPROC lpLanguageGroupEnumProc,_In_ DWORD dwFlags,_In_ LONG_PTR lParam)
BOOL None kernel32.EnumSystemLanguageGroupsA(_In_ LANGUAGEGROUP_ENUMPROC lpLanguageGroupEnumProc,_In_ DWORD dwFlags,_In_ LONG_PTR lParam)
BOOL None schannel.SslEmptyCache(_In_ LPSTR pszTargetName,_In_ DWORD dwFlags)
BOOL None schannel.SslEmptyCacheW(_In_ LPSTR pszTargetName,_In_ DWORD dwFlags)
BOOL None schannel.SslEmptyCacheA(_In_ LPSTR pszTargetName,_In_ DWORD dwFlags)
NTSTATUS None None.SpInitialize(_In_ ULONG_PTR PackageId,_In_ PSECPKG_PARAMETERS Parameters,_In_ PLSA_SECPKG_FUNCTION_TABLE FunctionTable)
NTSTATUS None None.SpMarshallSupplementalCreds(_In_ ULONG CredentialSize,_In_ PUCHAR Credentials,_Out_ PULONG MarshalledCredSize,_Out_ PVOID *MarshalledCreds)
VOID None None.WlxWin31Migrate(_In_ HANDLE hWlx)
NTSTATUS None None.GetUserAuthData(_In_ PVOID UserHandle,_Out_ PUCHAR *UserAuthData,_Out_ PULONG UserAuthDataSize)
BOOL None advapi32.CredReadDomainCredentials(_In_ PCREDENTIAL_TARGET_INFORMATION TargetInfo,_In_ DWORD Flags,_Out_ DWORD *Count,_Out_ PCREDENTIAL **Credentials)
BOOL None advapi32.CredReadDomainCredentialsW(_In_ PCREDENTIAL_TARGET_INFORMATION TargetInfo,_In_ DWORD Flags,_Out_ DWORD *Count,_Out_ PCREDENTIAL **Credentials)
BOOL None advapi32.CredReadDomainCredentialsA(_In_ PCREDENTIAL_TARGET_INFORMATION TargetInfo,_In_ DWORD Flags,_Out_ DWORD *Count,_Out_ PCREDENTIAL **Credentials)
BOOL None advapi32.CredGetSessionTypes(_In_ DWORD MaximumPersistCount,_Out_ LPDWORD MaximumPersist)
HANDLE None kernel32.PowerCreateRequest(_In_ PREASON_CONTEXT Context)
NTSTATUS None None.SpExportSecurityContext(_In_ LSA_SEC_HANDLE phContext,_In_ ULONG fFlags,_Out_ PSecBuffer pPackedContext,_Out_ PHANDLE pToken)
NTSTATUS None advapi32.LsaStorePrivateData(_In_ LSA_HANDLE PolicyHandle,_In_ PLSA_UNICODE_STRING KeyName,_In_ PLSA_UNICODE_STRING PrivateData)
HRESULT None oleaut32.VarR4CmpR8(_In_ float fltLeft,_In_ double dblRight)
HRESULT None oleaut32.VarDecInt(_In_ LPDECIMAL pdecIn,_Out_ LPDECIMAL pdecResult)
NTSTATUS None None.SpDeleteCredentials(_In_ LSA_SEC_HANDLE CredentialHandle,_In_ PSecBuffer Key)
BOOL None shlwapi.UrlIsOpaque(_In_ PCTSTR pszURL)
BOOL None shlwapi.UrlIsOpaqueW(_In_ PCTSTR pszURL)
BOOL None shlwapi.UrlIsOpaqueA(_In_ PCTSTR pszURL)
LONG WINAPI winscard.SCardGetDeviceTypeId(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReaderName,_Inout_ LPDWORD pdwDeviceTypeId)
LONG WINAPI winscard.SCardGetDeviceTypeIdW(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReaderName,_Inout_ LPDWORD pdwDeviceTypeId)
LONG WINAPI winscard.SCardGetDeviceTypeIdA(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReaderName,_Inout_ LPDWORD pdwDeviceTypeId)
SECURITY_STATUS SEC_ENTRY secur32.SetContextAttributes(_In_ PCtxtHandle phContext,_In_ ULONG ulAttribute,_In_ void *pBuffer,_In_ ULONG cbBuffer)
SECURITY_STATUS SEC_ENTRY secur32.SetContextAttributesW(_In_ PCtxtHandle phContext,_In_ ULONG ulAttribute,_In_ void *pBuffer,_In_ ULONG cbBuffer)
SECURITY_STATUS SEC_ENTRY secur32.SetContextAttributesA(_In_ PCtxtHandle phContext,_In_ ULONG ulAttribute,_In_ void *pBuffer,_In_ ULONG cbBuffer)
SECURITY_STATUS SEC_Entry secur32.QueryCredentialsAttributes(_In_ PCredHandle phCredential,_In_ ULONG ulAttribute,_Out_ PVOID pBuffer)
SECURITY_STATUS SEC_Entry secur32.QueryCredentialsAttributesW(_In_ PCredHandle phCredential,_In_ ULONG ulAttribute,_Out_ PVOID pBuffer)
SECURITY_STATUS SEC_Entry secur32.QueryCredentialsAttributesA(_In_ PCredHandle phCredential,_In_ ULONG ulAttribute,_Out_ PVOID pBuffer)
LONG WINAPI winscard.SCardEndTransaction(_In_ SCARDHANDLE hCard,_In_ DWORD dwDisposition)
NTSTATUS None secur32.LsaDeregisterLogonProcess(_In_ HANDLE LsaHandle)
BSTR None oleaut32.SysAllocStringByteLen(_In_opt_ LPCSTR psz,_In_ UINT len)
NTSTATUS None secur32.LsaRegisterLogonProcess(_In_ PLSA_STRING LogonProcessName,_Out_ PHANDLE LsaHandle,_Out_ PLSA_OPERATIONAL_MODE SecurityMode)
NTSTATUS None None.ConvertAuthDataToToken(_In_ PVOID UserAuthData,_In_ ULONG UserAuthDataSize,_In_ SECURITY_IMPERSONATION_LEVEL ImpersonationLevel,_In_ PTOKEN_SOURCE TokenSource,_In_ SECURITY_LOGON_TYPE LogonType,_In_ PUNICODE_STRING AuthorityName,_Out_ PHANDLE Token,_Out_ PLUID LogonId,_Out_ PUNICODE_STRING AccountName,_Out_ PNTSTATUS SubStatus)
BOOL None None.WlxInitialize(_In_ LPWSTR lpWinsta,_In_ HANDLE hWlx,_In_ PVOID pvReserved,_In_ PVOID pWinlogonFunctions,_Out_ PVOID *pWlxContext)
LONG WINAPI winscard.SCardListCards(_In_ SCARDCONTEXT hContext,_In_opt_ LPCBYTE pbAtr,_In_ LPCGUID rgguidInterfaces,_In_ DWORD cguidInterfaceCount,_Out_ LPTSTR mszCards,_Inout_ LPDWORD pcchCards)
LONG WINAPI winscard.SCardListCardsW(_In_ SCARDCONTEXT hContext,_In_opt_ LPCBYTE pbAtr,_In_ LPCGUID rgguidInterfaces,_In_ DWORD cguidInterfaceCount,_Out_ LPTSTR mszCards,_Inout_ LPDWORD pcchCards)
LONG WINAPI winscard.SCardListCardsA(_In_ SCARDCONTEXT hContext,_In_opt_ LPCBYTE pbAtr,_In_ LPCGUID rgguidInterfaces,_In_ DWORD cguidInterfaceCount,_Out_ LPTSTR mszCards,_Inout_ LPDWORD pcchCards)
NTSTATUS None None.CallPackageEx(_In_ PUNICODE_STRING AuthenticationPackage,_In_ PVOID ClientBufferBase,_In_ PVOID ProtocolSubmitBuffer,_In_ ULONG SubmitBufferLength,_Out_ PVOID *ProtocolReturnBuffer,_Out_ PULONG ReturnBufferLength,_Out_ PNTSTATUS ProtocolStatus)
NTSTATUS None None.SpAddCredentials(_In_ LSA_SEC_HANDLE CredentialHandle,_In_ PUNICODE_STRING PrincipalName,_In_ PUNICODE_STRING Package,_In_ ULONG CredentialUseFlags,_In_ PVOID AuthorizationData,_In_ PVOID GetKeyFunction,_In_ PVOID GetKeyArgument,_Out_ PTimeStamp ExpirationTime)
BOOL None None.WlxInitialize(_In_ LPWSTR lpWinsta,_In_ HANDLE hWlx,_In_ PVOID pvReserved,_In_ PVOID pWinlogonFunctions,_Out_ PVOID *pWlxContext)
DWORD WINAPI credui.CredUICmdLinePromptForCredentials(_In_ PCTSTR pszTargetName,_In_ PCtxtHandle Reserved,_In_opt_ DWORD dwAuthError,_Inout_ PTSTR pszUserName,_In_ ULONG ulUserNameMaxChars,_Inout_ PTSTR pszPassword,_In_ ULONG ulPasswordMaxChars,_Inout_ PBOOL pfSave,_In_ DWORD dwFlags)
DWORD WINAPI credui.CredUICmdLinePromptForCredentialsW(_In_ PCTSTR pszTargetName,_In_ PCtxtHandle Reserved,_In_opt_ DWORD dwAuthError,_Inout_ PTSTR pszUserName,_In_ ULONG ulUserNameMaxChars,_Inout_ PTSTR pszPassword,_In_ ULONG ulPasswordMaxChars,_Inout_ PBOOL pfSave,_In_ DWORD dwFlags)
DWORD WINAPI credui.CredUICmdLinePromptForCredentialsA(_In_ PCTSTR pszTargetName,_In_ PCtxtHandle Reserved,_In_opt_ DWORD dwAuthError,_Inout_ PTSTR pszUserName,_In_ ULONG ulUserNameMaxChars,_Inout_ PTSTR pszPassword,_In_ ULONG ulPasswordMaxChars,_Inout_ PBOOL pfSave,_In_ DWORD dwFlags)
NTSTATUS NTAPI None.SpQueryMetaDataFn(_In_ LSA_SEC_HANDLE CredentialHandle,_In_opt_ PUNICODE_STRING TargetName,_In_ ULONG ContextRequirements,_Out_ ULONG MetaDataLength,_Out_ PUCHAR MetaData,_Inout_ PLSA_SEC_HANDLE ContextHandle)
DWORD None None.NPFormatNetworkName(_In_ LPTSTR lpRemoteName,_Out_ LPTSTR lpFormattedName,_Inout_ LPDWORD lpnLength,_In_ DWORD dwFlags,_In_ DWORD dwAveCharPerLine)
BOOL None None.WlxQueryClientCredentials(_Out_ PWLX_CLIENT_CREDENTIALS_INFO_V1_0 pCred)
NTSTATUS NTAPI None.CrediRead(_In_ PLUID LogonId,_In_ ULONG CredFlags,_In_ LPWSTR TargetName,_In_ ULONG Type,_In_ ULONG Flags,_Out_ PENCRYPTED_CREDENTIALW *Credential)
BOOL CALLBACK None.EnumDateFormatsProcEx(_In_ LPTSTR lpDateFormatString,_In_ CALID CalendarID)
BOOL WINAPI user32.UnregisterPowerSettingNotification(_In_ HPOWERNOTIFY Handle)
BOOL None shlwapi.PathIsUNCServer(_In_ LPCTSTR pszPath)
BOOL None shlwapi.PathIsUNCServerW(_In_ LPCTSTR pszPath)
BOOL None shlwapi.PathIsUNCServerA(_In_ LPCTSTR pszPath)
HPOWERNOTIFY WINAPI user32.RegisterSuspendResumeNotification(_In_ HANDLE hRecipient,_In_ DWORD Flags)
NTSTATUS None None.SpFreeCredentialsHandle(_In_ LSA_SEC_HANDLE CredentialHandle)
NTSTATUS None advapi32.LsaSetInformationPolicy(_In_ LSA_HANDLE PolicyHandle,_In_ POLICY_INFORMATION_CLASS InformationClass,_In_ PVOID Buffer)
HRESULT None oleaut32.VarCySub(_In_ CY cyLeft,_In_ CY cyRight,_Out_ LPCY pcyResult)
LONG WINAPI winscard.SCardForgetCardType(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCardName)
LONG WINAPI winscard.SCardForgetCardTypeW(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCardName)
LONG WINAPI winscard.SCardForgetCardTypeA(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCardName)
SECURITY_STATUS SEC_Entry secur32.ImportSecurityContext(_In_ PSECURITY_STRING *pszPackage,_In_ PSecBuffer pPackedContext,_In_opt_ HANDLE pToken,_Out_ PCtxtHandle phContext)
SECURITY_STATUS SEC_Entry secur32.ImportSecurityContextW(_In_ PSECURITY_STRING *pszPackage,_In_ PSecBuffer pPackedContext,_In_opt_ HANDLE pToken,_Out_ PCtxtHandle phContext)
SECURITY_STATUS SEC_Entry secur32.ImportSecurityContextA(_In_ PSECURITY_STRING *pszPackage,_In_ PSecBuffer pPackedContext,_In_opt_ HANDLE pToken,_Out_ PCtxtHandle phContext)
void None shlwapi.PathRemoveBlanks(_Inout_ LPTSTR lpszString)
void None shlwapi.PathRemoveBlanksW(_Inout_ LPTSTR lpszString)
void None shlwapi.PathRemoveBlanksA(_Inout_ LPTSTR lpszString)
DWORD None None.NPGetCaps(_In_ DWORD nIndex)
NTSTATUS NTAPI advapi32.LsaQueryForestTrustInformation(_In_ LSA_HANDLE PolicyHandle,_In_ PLSA_UNICODE_STRING TrustedDomainName,_Out_ PLSA_FOREST_TRUST_INFORMATION *ForestTrustInfo)
NTSTATUS NTAPI None.Msv1_0SubAuthenticationRoutine(_In_ NETLOGON_LOGON_INFO_CLASS LogonLevel,_In_ PVOID LogonInformation,_In_ ULONG Flags,_In_ PUSER_ALL_INFORMATION UserAll,_Out_ PULONG WhichFields,_Out_ PULONG UserFlags,_Out_ PBOOLEAN Authoritative,_Out_ PLARGE_INTEGER LogoffTime,_Out_ PLARGE_INTEGER KickoffTime)
DWORD None None.NPGetPropertyText(_In_ DWORD iButton,_In_ DWORD nPropSel,_In_ LPTSTR lpName,_Out_ LPTSTR lpButtonName,_Inout_ DWORD nButtonNameLen,_In_ DWORD nType)
LONG WINAPI winscard.SCardIntroduceCardType(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCardName,_In_opt_ LPCGUID pguidPrimaryProvider,_In_opt_ LPCGUID rgguidInterfaces,_In_ DWORD dwInterfaceCount,_In_ LPCBYTE pbAtr,_In_ LPCBYTE pbAtrMask,_In_ DWORD cbAtrLen)
LONG WINAPI winscard.SCardIntroduceCardTypeW(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCardName,_In_opt_ LPCGUID pguidPrimaryProvider,_In_opt_ LPCGUID rgguidInterfaces,_In_ DWORD dwInterfaceCount,_In_ LPCBYTE pbAtr,_In_ LPCBYTE pbAtrMask,_In_ DWORD cbAtrLen)
LONG WINAPI winscard.SCardIntroduceCardTypeA(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCardName,_In_opt_ LPCGUID pguidPrimaryProvider,_In_opt_ LPCGUID rgguidInterfaces,_In_ DWORD dwInterfaceCount,_In_ LPCBYTE pbAtr,_In_ LPCBYTE pbAtrMask,_In_ DWORD cbAtrLen)
BOOLEAN WINAPI powrprof.SetActivePwrScheme(_In_ UINT uiID,_In_opt_ PGLOBAL_POWER_POLICY lpGlobalPowerPolicy,_In_opt_ PPOWER_POLICY lpPowerPolicy)
HRESULT None oleaut32.VarDiv(_In_ LPVARIANT pvarLeft,_In_ LPVARIANT pvarRight,_Out_ LPVARIANT pvarResult)
HRESULT None None.GetBuffer(UINT Buffer None,[in] REFIID riid,[out] void **ppSurface)
DWORD WINAPI powrprof.DevicePowerSetDeviceState(_In_ LPCWSTR DeviceDescription,_In_ ULONG SetFlags,_In_ PCVOID SetData)
DWORD WINAPI powrprof.PowerRestoreDefaultPowerSchemes(void None None)
NTSTATUS NTAPI advapi32.LsaGetAppliedCAPIDs(_In_opt_ PLSA_UNICODE_STRING SystemName,_Out_ PSID **CAPIDs,_Out_ PULONG CAPIDCount)
LONG WINAPI winscard.SCardReconnect(_In_ SCARDHANDLE hCard,_In_ DWORD dwShareMode,_In_ DWORD dwPreferredProtocols,_In_ DWORD dwInitialization,_Out_opt_ LPDWORD pdwActiveProtocol)
NTSTATUS NTAPI advapi32.LsaSetForestTrustInformation(_In_ LSA_HANDLE PolicyHandle,_In_ PLSA_UNICODE_STRING TrustedDomainName,_In_ PLSA_FOREST_TRUST_INFORMATION ForestTrustInfo,_In_ BOOLEAN CheckOnly,_Out_ PLSA_FOREST_TRUST_COLLISION_INFORMATION *CollisionInfo)
HRESULT None shlwapi.UrlCanonicalize(_In_ PCTSTR pszUrl,_Out_ PTSTR pszCanonicalized,_Inout_ DWORD *pcchCanonicalized,DWORD dwFlags None)
HRESULT None shlwapi.UrlCanonicalizeW(_In_ PCTSTR pszUrl,_Out_ PTSTR pszCanonicalized,_Inout_ DWORD *pcchCanonicalized,DWORD dwFlags None)
HRESULT None shlwapi.UrlCanonicalizeA(_In_ PCTSTR pszUrl,_Out_ PTSTR pszCanonicalized,_Inout_ DWORD *pcchCanonicalized,DWORD dwFlags None)
HRESULT None None.FinishCommandList(BOOL RestoreDeferredContextState None,[out None None,optional] ID3D11CommandList **ppCommandList)
HRESULT None None.SetUpdateOptions([in] DWORD dwUpdateOpt)
HRESULT None oleaut32.VarCyNeg(_In_ CY cyIn,_Out_ LPCY pcyResult)
BOOL None shlwapi.PathIsFileSpec(_In_ LPCTSTR lpszPath)
BOOL None shlwapi.PathIsFileSpecW(_In_ LPCTSTR lpszPath)
BOOL None shlwapi.PathIsFileSpecA(_In_ LPCTSTR lpszPath)
HRESULT None oleaut32.VarCyMulI8(_In_ CY cyLeft,_In_ LONG64 lRight,_Out_ LPCY pcyResult)
BOOLEAN WINAPI powrprof.ReadGlobalPwrPolicy(_Out_ PGLOBAL_POWER_POLICY pGlobalPowerPolicy)
SECURITY_STATUS WINAPI schannel.SslGetServerIdentity(_In_ PBYTE ClientHello,_In_ DWORD ClientHelloSize,_Out_ PBYTE *ServerIdentity,_Out_ PDWORD ServerIdentitySize,_In_ DWORD Flags)
HRESULT None oleaut32.VarCyAdd(_In_ CY cyLeft,_In_ CY cyRight,_Out_ LPCY pcyResult)
SECURITY_STATUS None sspicli.SspiPrepareForCredRead(_In_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE AuthIdentity,_In_ PCWSTR pszTargetName,_Out_ PULONG pCredmanCredentialType,_Out_ PCWSTR *ppszCredmanTargetName)
NTSTATUS None None.CancelNotification(_In_ HANDLE NotifyHandle)
POWER_PLATFORM_ROLE WINAPI powrprof.PowerDeterminePlatformRole(void None None)
ULONG None None.ldap_open_fast_bind_session(LPTSTR pHostName None,PLDAP pSession None)
BOOLEAN WINAPI powrprof.WriteProcessorPwrScheme(_In_ UINT ID,_In_ PMACHINE_PROCESSOR_POWER_POLICY pMachineProcessorPowerPolicy)
HRESULT None None.SetRect([in] LPRECT prcView)
HRESULT None None.Open([in] IOleParentUndoUnit *pPUU)
HRESULT None None.Add([in] IOleUndoUnit *pUU)
SECURITY_STATUS SEC_Entry secur32.EncryptMessage(_In_ PCtxtHandle phContext,_In_ ULONG fQOP,_Inout_ PSecBufferDesc pMessage,_In_ ULONG MessageSeqNo)
BOOL None shlwapi.UrlIsNoHistory(_In_ PCTSTR pszURL)
BOOL None shlwapi.UrlIsNoHistoryW(_In_ PCTSTR pszURL)
BOOL None shlwapi.UrlIsNoHistoryA(_In_ PCTSTR pszURL)
BOOL WINAPI kernel32.SetSystemPowerState(_In_ BOOL fSuspend,_In_ BOOL fForce)
HRESULT None None.GetData([in] FORMATETC *pformatetcIn,[out] STGMEDIUM *pmedium)
BOOL None gdi32.DeleteObject(_In_ HGDIOBJ hObject)
BOOL None gdi32.DeleteObjectW(_In_ HGDIOBJ hObject)
NTSTATUS None None.SpApplyControlToken(_In_ LSA_SEC_HANDLE ContextHandle,_In_ PSecBufferDesc ControlToken)
VOID None None.FreeSharedMemory(_In_ PVOID SharedMem,_In_ PVOID Memory)
HRESULT None oleaut32.VarDecAdd(_In_ LPDECIMAL pdecLeft,_In_ LPDECIMAL pdecRight,_Out_ LPDECIMAL pdecResult)
DWORD None None.NPCloseEnum(_In_ HANDLE hEnum)
DWORD WINAPI powrprof.PowerReplaceDefaultPowerSchemes(void None None)
HRESULT None None.GetBuffer(UINT Buffer None,[in] REFIID riid,[out] void **ppSurface)
SECURITY_STATUS None sspicli.SspiGetTargetHostName(_In_ PCWSTR pszTargetName,_Out_ PWSTR *pszHostName)
HRESULT None oleaut32.VarDiv(_In_ LPVARIANT pvarLeft,_In_ LPVARIANT pvarRight,_Out_ LPVARIANT pvarResult)
NTSTATUS None None.ImpersonateClient(void None None)
VOID None None.WlxDisplayLockedNotice(_In_ PVOID pWlxContext)
LONG WINAPI winscard.SCardCancel(_In_ SCARDCONTEXT hContext)
BOOL None shlwapi.PathSearchAndQualify(_In_ LPCTSTR pcszPath,_Out_ LPTSTR pszFullyQualifiedPath,_In_ UINT cchFullyQualifiedPath)
BOOL None shlwapi.PathSearchAndQualifyW(_In_ LPCTSTR pcszPath,_Out_ LPTSTR pszFullyQualifiedPath,_In_ UINT cchFullyQualifiedPath)
BOOL None shlwapi.PathSearchAndQualifyA(_In_ LPCTSTR pcszPath,_Out_ LPTSTR pszFullyQualifiedPath,_In_ UINT cchFullyQualifiedPath)
HPOWERNOTIFY WINAPI user32.RegisterPowerSettingNotification(_In_ HANDLE hRecipient,_In_ LPCGUID PowerSettingGuid,_In_ DWORD Flags)
HRESULT None None.Open([in] IOleParentUndoUnit *pPUU)
LONG WINAPI winscard.SCardGetAttrib(_In_ SCARDHANDLE hCard,_In_ DWORD dwAttrId,_Out_ LPBYTE pbAttr,_Inout_ LPDWORD pcbAttrLen)
NTSTATUS None None.SpVerifySignature(_In_ LSA_SEC_HANDLE ContextHandle,_In_ PSecBufferDesc MessageBuffers,_In_ ULONG MessageSequenceNumber,_Out_ PULONG QualityOfProtection)
int None None.WlxDialogBoxIndirect(_In_ HANDLE hWlx,_In_ HANDLE hInst,_In_ LPCDLGTEMPLATE hDialogTemplate,_In_ HWND hwndOwner,_In_ DLGPROC dlgprc)
VOID None None.WlxDisplayLockedNotice(_In_ PVOID pWlxContext)
HRESULT None None.GetMiscStatus([in] DWORD dwAspect,[out] DWORD *pdwStatus)
HRESULT None None.GetLastPresentCount([out] UINT *pLastPresentCount)
SECURITY_STATUS None secur32.DeleteSecurityPackage(_In_ LPTSTR pszPackageName)
SECURITY_STATUS None secur32.DeleteSecurityPackageW(_In_ LPTSTR pszPackageName)
SECURITY_STATUS None secur32.DeleteSecurityPackageA(_In_ LPTSTR pszPackageName)
int None None.WlxDialogBox(_In_ HANDLE hWlx,_In_ HANDLE hInst,_In_ LPWSTR lpszTemplate,_In_ HWND hwndOwner,_In_ DLGPROC dlgprc)
LONG None scarddlg.GetOpenCardName(_In_ LPOPENCARDNAME pDlgStruc)
LONG None scarddlg.GetOpenCardNameW(_In_ LPOPENCARDNAME pDlgStruc)
LONG None scarddlg.GetOpenCardNameA(_In_ LPOPENCARDNAME pDlgStruc)
LONG WINAPI winscard.SCardConnect(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReader,_In_ DWORD dwShareMode,_In_ DWORD dwPreferredProtocols,_Out_ LPSCARDHANDLE phCard,_Out_ LPDWORD pdwActiveProtocol)
LONG WINAPI winscard.SCardConnectW(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReader,_In_ DWORD dwShareMode,_In_ DWORD dwPreferredProtocols,_Out_ LPSCARDHANDLE phCard,_Out_ LPDWORD pdwActiveProtocol)
LONG WINAPI winscard.SCardConnectA(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReader,_In_ DWORD dwShareMode,_In_ DWORD dwPreferredProtocols,_Out_ LPSCARDHANDLE phCard,_Out_ LPDWORD pdwActiveProtocol)
NTSTATUS None None.SpGetUserInfo(_In_ PLUID LogonId,_In_ ULONG Flags,_Out_ PSecurityUserData *UserData)
DWORD WINAPI powrprof.PowerSettingRegisterNotification(_In_ LPCGUID SettingGuid,_In_ DWORD Flags,_In_ HANDLE Recipient,_Out_ PHPOWERNOTIFY RegistrationHandle)
HRESULT None ole32.DestroyElement([in] wchar *pwcsName)
NTSTATUS None secur32.LsaCallAuthenticationPackage(_In_ HANDLE LsaHandle,_In_ ULONG AuthenticationPackage,_In_ PVOID ProtocolSubmitBuffer,_In_ ULONG SubmitBufferLength,_Out_ PVOID *ProtocolReturnBuffer,_Out_ PULONG *ReturnBufferLength,_Out_ PNTSTATUS ProtocolStatus)
NTSTATUS None None.OpenSamUser(_In_ PSECURITY_STRING Name,_In_ SECPKG_NAME_TYPE NameType,_In_ PSECURITY_STRING Prefix,_In_ BOOLEAN AllowGuest,_In_ ULONG Reserved,_Out_ PVOID *UserHandle)
LONG WINAPI None.SCardListReadersWithDeviceInstanceId(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szDeviceInstanceId,_Out_opt_ LPTSTR mszReaders,_Inout_ LPDWORD pcchReaders)
NTSTATUS None None.SpFormatCredentials(_In_ PSecBuffer Credentials,_Out_ PSecBuffer FormattedCredentials)
BOOL WINAPI None.PeekConsoleInput(_In_ HANDLE hConsoleInput,_Out_ PINPUT_RECORD lpBuffer,_In_ DWORD nLength,_Out_ LPDWORD lpNumberOfEventsRead)
BOOL WINAPI None.PeekConsoleInputW(_In_ HANDLE hConsoleInput,_Out_ PINPUT_RECORD lpBuffer,_In_ DWORD nLength,_Out_ LPDWORD lpNumberOfEventsRead)
BOOL WINAPI None.PeekConsoleInputA(_In_ HANDLE hConsoleInput,_Out_ PINPUT_RECORD lpBuffer,_In_ DWORD nLength,_Out_ LPDWORD lpNumberOfEventsRead)
HRESULT None None.GetPrivateData([in] REFGUID Name,[in None None,out] UINT *pDataSize,[out] void *pData)
SECURITY_STATUS SEC_ENTRY secur32.SaslGetProfilePackage(_In_ LPTSTR ProfileName,_Out_ PSecPkgInfo *PackageInfo)
SECURITY_STATUS SEC_ENTRY secur32.SaslGetProfilePackageW(_In_ LPTSTR ProfileName,_Out_ PSecPkgInfo *PackageInfo)
SECURITY_STATUS SEC_ENTRY secur32.SaslGetProfilePackageA(_In_ LPTSTR ProfileName,_Out_ PSecPkgInfo *PackageInfo)
BOOL None advapi32.LogonUser(_In_ LPTSTR lpszUsername,_In_opt_ LPTSTR lpszDomain,_In_opt_ LPTSTR lpszPassword,_In_ DWORD dwLogonType,_In_ DWORD dwLogonProvider,_Out_ PHANDLE phToken)
BOOL None advapi32.LogonUserW(_In_ LPTSTR lpszUsername,_In_opt_ LPTSTR lpszDomain,_In_opt_ LPTSTR lpszPassword,_In_ DWORD dwLogonType,_In_ DWORD dwLogonProvider,_Out_ PHANDLE phToken)
BOOL None advapi32.LogonUserA(_In_ LPTSTR lpszUsername,_In_opt_ LPTSTR lpszDomain,_In_opt_ LPTSTR lpszPassword,_In_ DWORD dwLogonType,_In_ DWORD dwLogonProvider,_Out_ PHANDLE phToken)
BOOL None shlwapi.PathIsRelative(_In_ LPCTSTR lpszPath)
BOOL None shlwapi.PathIsRelativeW(_In_ LPCTSTR lpszPath)
BOOL None shlwapi.PathIsRelativeA(_In_ LPCTSTR lpszPath)
LONG WINAPI winscard.SCardForgetReader(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReaderName)
LONG WINAPI winscard.SCardForgetReaderW(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReaderName)
LONG WINAPI winscard.SCardForgetReaderA(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReaderName)
SECURITY_STATUS SEC_Entry secur32.VerifySignature(_In_ PCtxtHandle phContext,_In_ PSecBufferDesc pMessage,_In_ ULONG MessageSeqNo,_Out_ PULONG pfQOP)
NTSTATUS None None.SpExportSecurityContext(_In_ LSA_SEC_HANDLE phContext,_In_ ULONG fFlags,_Out_ PSecBuffer pPackedContext,_Out_ PHANDLE pToken)
NTSTATUS WINAPI advapi32.LsaQueryCAPs(PSID *CAPIDs None,_In_ ULONG CAPIDCount,_Out_ PCENTRAL_ACCESS_POLICY *CAPs,_Out_ PULONG CAPCount)
NTSTATUS None None.LsaApInitializePackage(_In_ ULONG AuthenticationPackageId,_In_ PLSA_DISPATCH_TABLE LsaDispatchTable,_In_opt_ PLSA_STRING Database,_In_opt_ PLSA_STRING Confidentiality,_Out_ PLSA_STRING *AuthenticationPackageName)
BOOLEAN WINAPI powrprof.WriteGlobalPwrPolicy(_In_ PGLOBAL_POWER_POLICY pGlobalPowerPolicy)
void NTAPI None.FreePrivateHeap(_In_ PVOID Base)
NTSTATUS None None.DuplicateHandle(_In_ HANDLE SourceHandle,_Out_ PHANDLE DestinationHandle)
HRESULT None shlwapi.UrlGetPart(_In_ PCTSTR pszIn,_Out_ PTSTR pszOut,_Inout_ DWORD *pcchOut,DWORD dwPart None,DWORD dwFlags None)
HRESULT None shlwapi.UrlGetPartW(_In_ PCTSTR pszIn,_Out_ PTSTR pszOut,_Inout_ DWORD *pcchOut,DWORD dwPart None,DWORD dwFlags None)
HRESULT None shlwapi.UrlGetPartA(_In_ PCTSTR pszIn,_Out_ PTSTR pszOut,_Inout_ DWORD *pcchOut,DWORD dwPart None,DWORD dwFlags None)
void None shlwapi.PathRemoveArgs(_Inout_ LPTSTR pszPath)
void None shlwapi.PathRemoveArgsW(_Inout_ LPTSTR pszPath)
void None shlwapi.PathRemoveArgsA(_Inout_ LPTSTR pszPath)
void None shlwapi.PathRemoveExtension(_Inout_ LPTSTR pszPath)
void None shlwapi.PathRemoveExtensionW(_Inout_ LPTSTR pszPath)
void None shlwapi.PathRemoveExtensionA(_Inout_ LPTSTR pszPath)
int None shlwapi.UrlCompare(_In_ PCTSTR psz1,_In_ PCTSTR psz2,BOOL fIgnoreSlash None)
int None shlwapi.UrlCompareW(_In_ PCTSTR psz1,_In_ PCTSTR psz2,BOOL fIgnoreSlash None)
int None shlwapi.UrlCompareA(_In_ PCTSTR psz1,_In_ PCTSTR psz2,BOOL fIgnoreSlash None)
BOOL None kernel32.PowerClearRequest(_In_ HANDLE PowerRequest,_In_ POWER_REQUEST_TYPE RequestType)
DWORD None None.WlxQueryTerminalServicesData(_In_ HANDLE hWlx,_Out_ PWLX_TERMINAL_SERVICES_DATA pTSData,_In_ WCHAR *UserName,_In_ WCHAR *Domain)
HRESULT None None.Scroll([in] SIZE scrollExtant)
void None shlwapi.PathSetDlgItemPath(_In_ HWND hDlg,_In_ int id,_In_ LPCSTR pszPath)
void None shlwapi.PathSetDlgItemPathW(_In_ HWND hDlg,_In_ int id,_In_ LPCSTR pszPath)
void None shlwapi.PathSetDlgItemPathA(_In_ HWND hDlg,_In_ int id,_In_ LPCSTR pszPath)
PCHAR WINAPI iphlpapi.if_indextoname(_In_ NET_IFINDEX InterfaceIndex,_Out_ PCHAR InterfaceName)
HRESULT None None.ApplyViewState([in] LPSTREAM pstm)
void WINAPI winscard.SCardReleaseStartedEvent(void None None)
SEC_ENTRY None None.GetCredentialKey(_In_ PVOID ProviderHandle,_In_opt_ PLUID LogonId,_In_opt_ PVOID AuthBuffer,_In_ ULONG AuthBufferSize,_In_ ULONG Reserved,_Out_ PUNICODE_STRING CredentialKey)
HRESULT None None.GetSourceDisplayName([out] LPOLESTR *ppszDisplayName)
HRESULT None None.Close([in] DWORD dwSaveOption)
DWORD WINAPI powrprof.PowerImportPowerScheme(_In_ HKEY RootPowerKey,_In_ LPCWSTR ImportFileNamePath,_Inout_ GUID **DestinationSchemeGuid)
BOOL None shlwapi.PathRenameExtension(_Inout_ LPTSTR pszPath,_In_ LPCTSTR pszExt)
BOOL None shlwapi.PathRenameExtensionW(_Inout_ LPTSTR pszPath,_In_ LPCTSTR pszExt)
BOOL None shlwapi.PathRenameExtensionA(_Inout_ LPTSTR pszPath,_In_ LPCTSTR pszExt)
HRESULT None oleaut32.VarDecMul(_In_ LPDECIMAL pdecLeft,_In_ LPDECIMAL pdecRight,_Out_ LPDECIMAL pdecResult)
DWORD APIENTRY None.AddConnectNotify(_Inout_ LPNOTIFYINFO lpNotifyInfo,_In_ LPNOTIFYADD lpAddInfo)
BOOL None None.WlxRemoveStatusMessage(_In_ PVOID pWlxContext)
NTSTATUS NTAPI None.SpUpdateCredentialsFn(_In_ LSA_SEC_HANDLE ContextHandle,_In_ GUID *CredType,_In_ ULONG FlatCredUIContextLength,PUCHAR FlatCredUIContext None)
HRESULT None shlwapi.UrlEscape(_In_ PCTSTR pszURL,_Out_ PTSTR pszEscaped,_Inout_ DWORD *pcchEscaped,DWORD dwFlags None)
HRESULT None shlwapi.UrlEscapeW(_In_ PCTSTR pszURL,_Out_ PTSTR pszEscaped,_Inout_ DWORD *pcchEscaped,DWORD dwFlags None)
HRESULT None shlwapi.UrlEscapeA(_In_ PCTSTR pszURL,_Out_ PTSTR pszEscaped,_Inout_ DWORD *pcchEscaped,DWORD dwFlags None)
DWORD WINAPI powrprof.PowerRegisterSuspendResumeNotification(_In_ DWORD Flags,_In_ HANDLE Recipient,_Out_ PHPOWERNOTIFY RegistrationHandle)
BOOL None shlwapi.PathUnmakeSystemFolder(_In_ LPTSTR pszPath)
BOOL None shlwapi.PathUnmakeSystemFolderW(_In_ LPTSTR pszPath)
BOOL None shlwapi.PathUnmakeSystemFolderA(_In_ LPTSTR pszPath)
LONG WINAPI winscard.SCardFreeMemory(_In_ SCARDCONTEXT hContext,_In_ LPCVOID pvMem)
BOOL None advapi32.CredEnumerate(_In_ LPCTSTR Filter,_In_ DWORD Flags,_Out_ DWORD *Count,_Out_ PCREDENTIAL **Credentials)
BOOL None advapi32.CredEnumerateW(_In_ LPCTSTR Filter,_In_ DWORD Flags,_Out_ DWORD *Count,_Out_ PCREDENTIAL **Credentials)
BOOL None advapi32.CredEnumerateA(_In_ LPCTSTR Filter,_In_ DWORD Flags,_Out_ DWORD *Count,_Out_ PCREDENTIAL **Credentials)
LONG WINAPI winscard.SCardSetAttrib(_In_ SCARDHANDLE hCard,_In_ DWORD dwAttrId,_In_ LPCBYTE pbAttr,_In_ DWORD cbAttrLen)
LONG WINAPI winscard.SCardFreeMemory(_In_ SCARDCONTEXT hContext,_In_ LPCVOID pvMem)
HANDLE None None.CreateThread(_In_ SEC_ATTRS SecurityAttributes,_In_ ULONG StackSize,_In_ SEC_THREAD_START StartFunction,_In_ PVOID ThreadParameter,_In_ ULONG CreationFlags,_Out_ PULONG ThreadId)
HRESULT None None.FindUnit([in] IOleUndoUnit *pUU)
HRESULT None ole32.EnumElements([in] DWORD reserved1,[in] void *reserved2,[in] DWORD reserved3,[out] IEnumSTATSTG **ppenum)
void None shlwapi.PathRemoveExtension(_Inout_ LPTSTR pszPath)
void None shlwapi.PathRemoveExtensionW(_Inout_ LPTSTR pszPath)
void None shlwapi.PathRemoveExtensionA(_Inout_ LPTSTR pszPath)
HRESULT None oleaut32.VarCyMulI4(_In_ CY cyLeft,_In_ long lRight,_Out_ LPCY pcyResult)
HRESULT WINAPI dxgi.DXGIDeclareAdapterRemovalSupport(void None None)
VOID None sspicli.SspiLocalFree(_In_ PVOID DataBuffer)
BOOL None None.WlxGetOption(_In_ HANDLE hWlx,_In_ DWORD Option,_Out_ ULONG_PTR *Value)
HRESULT None ole32.CreateDataAdviseHolder(_Out_ LPDATAADVISEHOLDER *ppDAHolder)
NTSTATUS None None.SpGetExtendedInformation(_In_ SECPKG_EXTENDED_INFORMATION_CLASS Class,_Out_ PSECPKG_EXTENDED_INFORMATION *ppInformation)
DWORD None None.NPPropertyDialog(_In_ HWND hwndParent,_In_ DWORD iButtonDlg,_In_ DWORD nPropSel,_In_ LPTSTR lpFileName,_In_ DWORD nType)
HRESULT None None.QueryGetData([in] FORMATETC *pformatetc)
NTSTATUS None None.SpAcceptLsaModeContext(_In_ LSA_SEC_HANDLE CredentialHandle,_In_ LSA_SEC_HANDLE ContextHandle,_In_ PSecBufferDesc InputBuffer,_In_ ULONG ContextRequirements,_In_ ULONG TargetDataRep,_Out_ PLSA_SEC_HANDLE NewContextHandle,_Out_ PSecBufferDesc OutputBuffer,_Out_ PULONG ContextAttributes,_Out_ PTimeStamp ExpirationTime,_Out_ PBOOLEAN MappedContext,_Out_ PSecBuffer ContextData)
BOOLEAN WINAPI powrprof.WritePwrScheme(_In_ PUINT puiID,_In_ LPWSTR lpszName,_In_opt_ LPWSTR lpszDescription,_In_ PPOWER_POLICY pPowerPolicy)
BOOL None shlwapi.PathIsHTMLFile(_In_ LPCTSTR pszFile)
BOOL None shlwapi.PathIsHTMLFileW(_In_ LPCTSTR pszFile)
BOOL None shlwapi.PathIsHTMLFileA(_In_ LPCTSTR pszFile)
HRESULT None None.GetDisplaySurfaceData([in] IDXGISurface *pDestination)
BOOL None None.WlxDisconnect(void None None)
HRESULT None None.GetDC([in] LPCRECT pRect,[in] DWORD grfFlags,[out] HDC *phDC)
HRESULT None oleaut32.VarCyCmp(_In_ CY cyLeft,_In_ CY cyRight)
HRESULT None None.SetClientSite([in] IOleClientSite *pClientSite)
LONG WINAPI winscard.SCardDisconnect(_In_ SCARDHANDLE hCard,_In_ DWORD dwDisposition)
BOOL None None.WlxScreenSaverNotify(_In_ PVOID pWlxContext,_Inout_ BOOL *pSecure)
HRESULT None oleaut32.VarCyCmpR8(_In_ CY cyLeft,_In_ double dblRight)
NTSTATUS None None.SpGetContextToken(_In_ LSA_SEC_HANDLE ContextHandle,_Out_ PHANDLE ImpersonationToken)
SECURITY_STATUS SEC_ENTRY secur32.SaslGetProfilePackage(_In_ LPTSTR ProfileName,_Out_ PSecPkgInfo *PackageInfo)
SECURITY_STATUS SEC_ENTRY secur32.SaslGetProfilePackageW(_In_ LPTSTR ProfileName,_Out_ PSecPkgInfo *PackageInfo)
SECURITY_STATUS SEC_ENTRY secur32.SaslGetProfilePackageA(_In_ LPTSTR ProfileName,_Out_ PSecPkgInfo *PackageInfo)
NTSTATUS None None.SpInitLsaModeContext(_In_ LSA_SEC_HANDLE CredentialHandle,_In_ LSA_SEC_HANDLE ContextHandle,_In_ PUNICODE_STRING TargetName,_In_ ULONG ContextRequirements,_In_ ULONG TargetDataRep,_In_ PSecBufferDesc InputBuffers,_Out_ PLSA_SEC_HANDLE NewContextHandle,_Out_ PSecBufferDesc OutputBuffers,_Out_ PULONG ContextAttributes,_Out_ PTimeStamp ExpirationTime,_Out_ PBOOLEAN MappedContext,_Out_ PSecBuffer ContextData)
LPTSTR None shlwapi.PathAddBackslash(_Inout_ LPTSTR lpszPath)
LPTSTR None shlwapi.PathAddBackslashW(_Inout_ LPTSTR lpszPath)
LPTSTR None shlwapi.PathAddBackslashA(_Inout_ LPTSTR lpszPath)
BOOL WINAPI credui.CredUnPackAuthenticationBuffer(_In_ DWORD dwFlags,_In_ PVOID pAuthBuffer,_In_ DWORD cbAuthBuffer,_Out_ LPTSTR pszUserName,_Inout_ DWORD *pcchMaxUserName,_Out_ LPTSTR pszDomainName,_Inout_ DWORD *pcchMaxDomainname,_Out_ LPTSTR pszPassword,_Inout_ DWORD *pcchMaxPassword)
BOOL WINAPI credui.CredUnPackAuthenticationBufferW(_In_ DWORD dwFlags,_In_ PVOID pAuthBuffer,_In_ DWORD cbAuthBuffer,_Out_ LPTSTR pszUserName,_Inout_ DWORD *pcchMaxUserName,_Out_ LPTSTR pszDomainName,_Inout_ DWORD *pcchMaxDomainname,_Out_ LPTSTR pszPassword,_Inout_ DWORD *pcchMaxPassword)
BOOL WINAPI credui.CredUnPackAuthenticationBufferA(_In_ DWORD dwFlags,_In_ PVOID pAuthBuffer,_In_ DWORD cbAuthBuffer,_Out_ LPTSTR pszUserName,_Inout_ DWORD *pcchMaxUserName,_Out_ LPTSTR pszDomainName,_Inout_ DWORD *pcchMaxDomainname,_Out_ LPTSTR pszPassword,_Inout_ DWORD *pcchMaxPassword)
HRESULT None None.GetParentState([out] DWORD *pdwState)
HRESULT None None.SaveViewState([in] LPSTREAM pstm)
NTSTATUS WINAPI advapi32.CredMarshalTargetInfo(_In_ PCREDENTIAL_TARGET_INFORMATIONW InTargetInfo,_Out_ PUSHORT *Buffer,PULONG BufferSize None)
HRESULT None None.SetSourceMoniker([in] IMoniker *pmk,[in] REFCLSID rclsid)
SECURITY_STATUS SEC_ENTRY secur32.SaslGetProfilePackage(_In_ LPTSTR ProfileName,_Out_ PSecPkgInfo *PackageInfo)
SECURITY_STATUS SEC_ENTRY secur32.SaslGetProfilePackageW(_In_ LPTSTR ProfileName,_Out_ PSecPkgInfo *PackageInfo)
SECURITY_STATUS SEC_ENTRY secur32.SaslGetProfilePackageA(_In_ LPTSTR ProfileName,_Out_ PSecPkgInfo *PackageInfo)
HOLEMENU None ole32.OleCreateMenuDescriptor(_In_ HMENU hmenuCombined,_In_ LPOLEMENUGROUPWIDTHS lpMenuWidths)
BOOL None shlwapi.PathFileExists(_In_ LPCTSTR pszPath)
BOOL None shlwapi.PathFileExistsW(_In_ LPCTSTR pszPath)
BOOL None shlwapi.PathFileExistsA(_In_ LPCTSTR pszPath)
SECURITY_STATUS SEC_Entry secur32.InitializeSecurityContext(_In_opt_ PCredHandle phCredential,_In_opt_ PCtxtHandle phContext,_In_opt_ SEC_CHAR *pszTargetName,_In_ ULONG fContextReq,_In_ ULONG Reserved1,_In_ ULONG TargetDataRep,_In_opt_ PSecBufferDesc pInput,_In_ ULONG Reserved2,_Inout_opt_ PCtxtHandle phNewContext,_Inout_opt_ PSecBufferDesc pOutput,_Out_ PULONG pfContextAttr,_Out_opt_ PTimeStamp ptsExpiry)
SECURITY_STATUS SEC_Entry secur32.InitializeSecurityContextW(_In_opt_ PCredHandle phCredential,_In_opt_ PCtxtHandle phContext,_In_opt_ SEC_CHAR *pszTargetName,_In_ ULONG fContextReq,_In_ ULONG Reserved1,_In_ ULONG TargetDataRep,_In_opt_ PSecBufferDesc pInput,_In_ ULONG Reserved2,_Inout_opt_ PCtxtHandle phNewContext,_Inout_opt_ PSecBufferDesc pOutput,_Out_ PULONG pfContextAttr,_Out_opt_ PTimeStamp ptsExpiry)
SECURITY_STATUS SEC_Entry secur32.InitializeSecurityContextA(_In_opt_ PCredHandle phCredential,_In_opt_ PCtxtHandle phContext,_In_opt_ SEC_CHAR *pszTargetName,_In_ ULONG fContextReq,_In_ ULONG Reserved1,_In_ ULONG TargetDataRep,_In_opt_ PSecBufferDesc pInput,_In_ ULONG Reserved2,_Inout_opt_ PCtxtHandle phNewContext,_Inout_opt_ PSecBufferDesc pOutput,_Out_ PULONG pfContextAttr,_Out_opt_ PTimeStamp ptsExpiry)
PSecurityFunctionTable SEC_Entry secur32.InitSecurityInterface(void None None)
PSecurityFunctionTable SEC_Entry secur32.InitSecurityInterfaceW(void None None)
PSecurityFunctionTable SEC_Entry secur32.InitSecurityInterfaceA(void None None)
SECURITY_STATUS SEC_Entry secur32.FreeCredentialsHandle(_In_ PCredHandle phCredential)
NTSTATUS WINAPI powrprof.CallNtPowerInformation(_In_ POWER_INFORMATION_LEVEL InformationLevel,_In_ PVOID lpInputBuffer,_In_ ULONG nInputBufferSize,_Out_ PVOID lpOutputBuffer,_In_ ULONG nOutputBufferSize)
NTSTATUS NTAPI advapi32.LsaSetDomainInformationPolicy(_In_ LSA_HANDLE PolicyHandle,_In_ POLICY_DOMAIN_INFORMATION_CLASS InformationClass,_In_ PVOID Buffer)
HRESULT None activeds.SetOption(LONG lnOption None,VARIANT vValue None)
DWORD None userenv.ProcessGroupPolicyCompletedEx(_In_ REFGPEXTENSIONID extensionId,_In_ ASYNCCOMPLETIONHANDLE pAsyncHandle,_In_ DWORD dwStatus,_In_ HRESULT RsopStatus)
BOOL None shlwapi.PathIsDirectory(_In_ LPCTSTR pszPath)
BOOL None shlwapi.PathIsDirectoryW(_In_ LPCTSTR pszPath)
BOOL None shlwapi.PathIsDirectoryA(_In_ LPCTSTR pszPath)
HRESULT None ole32.Stat([out] STATSTG *pstatstg,[in] DWORD grfStatFlag)
PTSTR None shlwapi.PathFindExtension(_In_ PTSTR pszPath)
PTSTR None shlwapi.PathFindExtensionW(_In_ PTSTR pszPath)
PTSTR None shlwapi.PathFindExtensionA(_In_ PTSTR pszPath)
BOOL None shlwapi.PathIsDirectory(_In_ LPCTSTR pszPath)
BOOL None shlwapi.PathIsDirectoryW(_In_ LPCTSTR pszPath)
BOOL None shlwapi.PathIsDirectoryA(_In_ LPCTSTR pszPath)
HRESULT None None.EnumAdvise([out] IEnumSTATDATA **ppenumAdvise)
BOOLEAN WINAPI powrprof.GetCurrentPowerPolicies(_Out_ PGLOBAL_POWER_POLICY pGlobalPowerPolicy,_Out_ PPOWER_POLICY pPowerPolicy)
DWORD None None.NPGetConnection(_In_ LPTSTR lpLocalName,_Out_ LPTSTR lpRemoteName,_Inout_ LPDWORD lpBufferSize)
HRESULT None None.UIActivate([in] BOOL fUIActivate)
DWORD None None.NPSearchDialog(_In_ HWND hParent,_In_ LPNETRESOURCE lpNetResource,_Out_ LPVOID lpBuffer,_Out_ DWORD cbBuffer,_In_ LPDWORD lpnFlags)
LONG WINAPI winscard.SCardListReaderGroups(_In_ SCARDCONTEXT hContext,_Out_ LPTSTR mszGroups,_Inout_ LPDWORD pcchGroups)
LONG WINAPI winscard.SCardListReaderGroupsW(_In_ SCARDCONTEXT hContext,_Out_ LPTSTR mszGroups,_Inout_ LPDWORD pcchGroups)
LONG WINAPI winscard.SCardListReaderGroupsA(_In_ SCARDCONTEXT hContext,_Out_ LPTSTR mszGroups,_Inout_ LPDWORD pcchGroups)
LONG WINAPI winscard.SCardGetStatusChange(_In_ SCARDCONTEXT hContext,_In_ DWORD dwTimeout,_Inout_ LPSCARD_READERSTATE rgReaderStates,_In_ DWORD cReaders)
LONG WINAPI winscard.SCardGetStatusChangeW(_In_ SCARDCONTEXT hContext,_In_ DWORD dwTimeout,_Inout_ LPSCARD_READERSTATE rgReaderStates,_In_ DWORD cReaders)
LONG WINAPI winscard.SCardGetStatusChangeA(_In_ SCARDCONTEXT hContext,_In_ DWORD dwTimeout,_Inout_ LPSCARD_READERSTATE rgReaderStates,_In_ DWORD cReaders)
void None shlwapi.PathStripPath(_Inout_ LPTSTR pszPath)
void None shlwapi.PathStripPathW(_Inout_ LPTSTR pszPath)
void None shlwapi.PathStripPathA(_Inout_ LPTSTR pszPath)
BOOL None shlwapi.PathStripToRoot(_Inout_ LPTSTR szRoot)
BOOL None shlwapi.PathStripToRootW(_Inout_ LPTSTR szRoot)
BOOL None shlwapi.PathStripToRootA(_Inout_ LPTSTR szRoot)
int WINAPI user32.MessageBox(_In_opt_ HWND hWnd,_In_opt_ LPCTSTR lpText,_In_opt_ LPCTSTR lpCaption,_In_ UINT uType)
int WINAPI user32.MessageBoxW(_In_opt_ HWND hWnd,_In_opt_ LPCTSTR lpText,_In_opt_ LPCTSTR lpCaption,_In_ UINT uType)
int WINAPI user32.MessageBoxA(_In_opt_ HWND hWnd,_In_opt_ LPCTSTR lpText,_In_opt_ LPCTSTR lpCaption,_In_ UINT uType)
LONG WINAPI winscard.SCardIntroduceReader(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReaderName,_In_ LPCTSTR szDeviceName)
LONG WINAPI winscard.SCardIntroduceReaderW(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReaderName,_In_ LPCTSTR szDeviceName)
LONG WINAPI winscard.SCardIntroduceReaderA(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReaderName,_In_ LPCTSTR szDeviceName)
BOOL WINAPI advapi32.CredProtect(_In_ BOOL fAsSelf,_In_ LPTSTR pszCredentials,_In_ DWORD cchCredentials,_Out_ LPTSTR pszProtectedCredentials,_Inout_ DWORD *pcchMaxChars,_Out_ CRED_PROTECTION_TYPE *ProtectionType)
BOOL WINAPI advapi32.CredProtectW(_In_ BOOL fAsSelf,_In_ LPTSTR pszCredentials,_In_ DWORD cchCredentials,_Out_ LPTSTR pszProtectedCredentials,_Inout_ DWORD *pcchMaxChars,_Out_ CRED_PROTECTION_TYPE *ProtectionType)
BOOL WINAPI advapi32.CredProtectA(_In_ BOOL fAsSelf,_In_ LPTSTR pszCredentials,_In_ DWORD cchCredentials,_Out_ LPTSTR pszProtectedCredentials,_Inout_ DWORD *pcchMaxChars,_Out_ CRED_PROTECTION_TYPE *ProtectionType)
NTSTATUS NTAPI None.OpenTokenByLogonId(_In_ PLUID LogonId,_Out_ HANDLE *RetTokenHandle)
HRESULT None None.GetExtent([in] DWORD dwDrawAspect,[out] SIZEL *psizel)
NTSTATUS NTAPI None.CrediWrite(_In_ PLUID LogonId,_In_ ULONG CredFlags,_In_ PENCRYPTED_CREDENTIALW Credential,_In_ ULONG Flags)
HRESULT None None.GetMoniker([in] DWORD dwAssign,[in] DWORD dwWhichMoniker,[out] IMoniker **ppmk)
HOLEMENU None ole32.OleCreateMenuDescriptor(_In_ HMENU hmenuCombined,_In_ LPOLEMENUGROUPWIDTHS lpMenuWidths)
LONG WINAPI winscard.SCardLocateCards(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR mszCards,_Inout_ LPSCARD_READERSTATE rgReaderStates,_In_ DWORD cReaders)
LONG WINAPI winscard.SCardLocateCardsW(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR mszCards,_Inout_ LPSCARD_READERSTATE rgReaderStates,_In_ DWORD cReaders)
LONG WINAPI winscard.SCardLocateCardsA(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR mszCards,_Inout_ LPSCARD_READERSTATE rgReaderStates,_In_ DWORD cReaders)
HRESULT None dxgi.CreateDXGIFactory1(REFIID riid None,_Out_ void **ppFactory)
LONG WINAPI winscard.SCardLocateCards(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR mszCards,_Inout_ LPSCARD_READERSTATE rgReaderStates,_In_ DWORD cReaders)
LONG WINAPI winscard.SCardLocateCardsW(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR mszCards,_Inout_ LPSCARD_READERSTATE rgReaderStates,_In_ DWORD cReaders)
LONG WINAPI winscard.SCardLocateCardsA(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR mszCards,_Inout_ LPSCARD_READERSTATE rgReaderStates,_In_ DWORD cReaders)
DWORD None winhttp.WinHttpCreateProxyResolver(_In_ HINTERNET hSession,_Out_ HINTERNET *phResolver)
DWORD WINAPI credui.CredUIPromptForWindowsCredentials(_In_opt_ PCREDUI_INFO pUiInfo,_In_ DWORD dwAuthError,_Inout_ ULONG *pulAuthPackage,_In_opt_ LPCVOID pvInAuthBuffer,_In_ ULONG ulInAuthBufferSize,_Out_ LPVOID *ppvOutAuthBuffer,_Out_ ULONG *pulOutAuthBufferSize,_Inout_opt_ BOOL *pfSave,_In_ DWORD dwFlags)
DWORD WINAPI credui.CredUIPromptForWindowsCredentialsW(_In_opt_ PCREDUI_INFO pUiInfo,_In_ DWORD dwAuthError,_Inout_ ULONG *pulAuthPackage,_In_opt_ LPCVOID pvInAuthBuffer,_In_ ULONG ulInAuthBufferSize,_Out_ LPVOID *ppvOutAuthBuffer,_Out_ ULONG *pulOutAuthBufferSize,_Inout_opt_ BOOL *pfSave,_In_ DWORD dwFlags)
DWORD WINAPI credui.CredUIPromptForWindowsCredentialsA(_In_opt_ PCREDUI_INFO pUiInfo,_In_ DWORD dwAuthError,_Inout_ ULONG *pulAuthPackage,_In_opt_ LPCVOID pvInAuthBuffer,_In_ ULONG ulInAuthBufferSize,_Out_ LPVOID *ppvOutAuthBuffer,_Out_ ULONG *pulOutAuthBufferSize,_Inout_opt_ BOOL *pfSave,_In_ DWORD dwFlags)
VOID None ole32.OleDestroyMenuDescriptor(_In_ HOLEMENU holemenu)
HRESULT None None.BindToSource([in] DWORD bindflags,[in] IBindCtx *pbc)
HRESULT None ole32.CreateDataCache(_In_ LPUNKNOWN pUnkOuter,_In_ REFCLSID rclsid,_In_ REFIID iid,_Out_ LPVOID *ppv)
HRESULT None None.FinishCommandList(BOOL RestoreDeferredContextState None,[out None None,optional] ID3D11CommandList **ppCommandList)
LONG WINAPI winscard.SCardEstablishContext(_In_ DWORD dwScope,_In_ LPCVOID pvReserved1,_In_ LPCVOID pvReserved2,_Out_ LPSCARDCONTEXT phContext)
BOOL None shlwapi.PathAddExtension(_Inout_ LPTSTR pszPath,_In_opt_ LPCTSTR pszExtension)
BOOL None shlwapi.PathAddExtensionW(_Inout_ LPTSTR pszPath,_In_opt_ LPCTSTR pszExtension)
BOOL None shlwapi.PathAddExtensionA(_Inout_ LPTSTR pszPath,_In_opt_ LPCTSTR pszExtension)
void None shlwapi.PathUnquoteSpaces(_Inout_ LPTSTR lpsz)
void None shlwapi.PathUnquoteSpacesW(_Inout_ LPTSTR lpsz)
void None shlwapi.PathUnquoteSpacesA(_Inout_ LPTSTR lpsz)
HRESULT None shlwapi.UrlCombine(_In_ PCTSTR pszBase,_In_ PCTSTR pszRelative,_Out_opt_ PTSTR pszCombined,_Inout_ DWORD *pcchCombined,DWORD dwFlags None)
HRESULT None shlwapi.UrlCombineW(_In_ PCTSTR pszBase,_In_ PCTSTR pszRelative,_Out_opt_ PTSTR pszCombined,_Inout_ DWORD *pcchCombined,DWORD dwFlags None)
HRESULT None shlwapi.UrlCombineA(_In_ PCTSTR pszBase,_In_ PCTSTR pszRelative,_Out_opt_ PTSTR pszCombined,_Inout_ DWORD *pcchCombined,DWORD dwFlags None)
HRESULT None shlwapi.UrlApplyScheme(_In_ PCTSTR pszIn,_Out_ PTSTR pszOut,_Inout_ DWORD *pcchOut,DWORD dwFlags None)
HRESULT None shlwapi.UrlApplySchemeW(_In_ PCTSTR pszIn,_Out_ PTSTR pszOut,_Inout_ DWORD *pcchOut,DWORD dwFlags None)
HRESULT None shlwapi.UrlApplySchemeA(_In_ PCTSTR pszIn,_Out_ PTSTR pszOut,_Inout_ DWORD *pcchOut,DWORD dwFlags None)
SECURITY_STATUS None sspicli.SspiCopyAuthIdentity(_In_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE AuthData,_Out_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE *AuthDataCopy)
BOOLEAN WINAPI powrprof.ReadProcessorPwrScheme(_In_ UINT uiID,_Out_ PMACHINE_PROCESSOR_POWER_POLICY pMachineProcessorPowerPolicy)
HRESULT None None.GetInPlaceSite([out] IOleInPlaceSite **ppIPSite)
HRESULT None None.EnumAdvise([out] IEnumSTATDATA **ppenumAdvise)
HRESULT None ole32.RevokeDragDrop(_In_ HWND hwnd)
BOOL None shlwapi.PathMakePretty(_Inout_ LPTSTR lpPath)
BOOL None shlwapi.PathMakePrettyW(_Inout_ LPTSTR lpPath)
BOOL None shlwapi.PathMakePrettyA(_Inout_ LPTSTR lpPath)
NTSTATUS NTAPI secur32.LsaEnumerateLogonSessions(_Out_ PULONG LogonSessionCount,_Out_ PLUID *LogonSessionList)
BOOL None None.WlxSetOption(_In_ HANDLE hWlx,_In_ DWORD Option,_In_ ULONG_PTR Value,_Out_ ULONG_PTR *OldValue)
BOOL None None.WlxActivateUserShell(_In_ PVOID pWlxContext,_In_ PWSTR pszDesktopName,_In_ PWSTR pszMprLogonScript,_In_ PVOID pEnvironment)
DWORD WINAPI powrprof.PowerUnregisterSuspendResumeNotification(_Inout_ HPOWERNOTIFY RegistrationHandle)
HRESULT None None.EnumAdvise([out] IEnumSTATDATA **ppenumAdvise)
HRESULT None None.DiscardFrom([in] IOleUndoUnit *pUU)
DWORD WINAPI powrprof.DevicePowerSetDeviceState(_In_ LPCWSTR DeviceDescription,_In_ ULONG SetFlags,_In_ PCVOID SetData)
DWORD None None.NPAddConnection(_In_ LPNETRESOURCE lpNetResource,_In_ LPTSTR lpPassword,_In_ LPTSTR lpUserName)
LONG WINAPI winscard.SCardBeginTransaction(_In_ SCARDHANDLE hCard)
DWORD None None.NPAddConnection(_In_ LPNETRESOURCE lpNetResource,_In_ LPTSTR lpPassword,_In_ LPTSTR lpUserName)
void None None.RSGetViewports([in None None,out] UINT *pNumViewports,[out None None,optional] D3D11_VIEWPORT *pViewports)
LONG WINAPI None.SCardGetReaderDeviceInstanceId(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReaderName,_Out_opt_ LPTSTR szDeviceInstanceId,_Inout_ LPDWORD cchDeviceInstanceId)
int None None.WlxLoggedOutSAS(_In_ PVOID pWlxContext,_In_ DWORD dwSasType,_Out_ PLUID pAuthenticationId,_Inout_ PSID pLogonSid,_Out_ PDWORD pdwOptions,_Out_ PHANDLE phToken,_Out_ PWLX_MPR_NOTIFY_INFO pNprNotifyInfo,_Out_ PVOID *pProfile)
BOOL WINAPI kernel32.SetCommMask(_In_ HANDLE hFile,_In_ DWORD dwEvtMask)
LONG WINAPI None.SCardGetReaderIcon(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReaderName,_Out_ LPBYTE pbIcon,_Inout_ LPDWORD pcbIcon)
DWORD None advapi32.UninstallApplication(_In_ WCHAR *ProductCode,_In_ DWORD dwStatus)
BOOL None shlwapi.PathUnExpandEnvStrings(_In_ LPCTSTR pszPath,_Out_ LPTSTR pszBuf,_In_ UINT cchBuf)
BOOL None shlwapi.PathUnExpandEnvStringsW(_In_ LPCTSTR pszPath,_Out_ LPTSTR pszBuf,_In_ UINT cchBuf)
BOOL None shlwapi.PathUnExpandEnvStringsA(_In_ LPCTSTR pszPath,_Out_ LPTSTR pszBuf,_In_ UINT cchBuf)
NTSTATUS None None.SpMakeSignature(_In_ LSA_SEC_HANDLE ContextHandle,_In_ ULONG QualityOfProtection,_Inout_ PSecBufferDesc MessageBuffers,_In_ ULONG MessageSequenceNumber)
HRESULT None None.TakeOwnership([in] IUnknown *pDevice,BOOL Exclusive None)
HRESULT None None.Unadvise([in] DWORD dwConnection)
HRESULT None ole32.Commit([in] DWORD grfCommitFlags)
HANDLE None None.RegisterNotification(_In_ SEC_THREAD_START StartFunction,_In_ PVOID Parameter,_In_ ULONG NotificationType,_In_ ULONG NotificationClass,_In_ ULONG NotificationFlags,_In_ ULONG IntervalMinutes,_In_ HANDLE WaitEvent)
HRESULT None None.GetRect([out] LPRECT prcView)
DWORD None None.NPDirectoryNotify(_In_ HWND hwnd,_In_ LPTSTR lpDir,_In_ DWORD dwOper)
HRESULT None None.CloseView([in] DWORD dwReserved)
PTSTR None shlwapi.PathSkipRoot(_In_ PTSTR pszPath)
PTSTR None shlwapi.PathSkipRootW(_In_ PTSTR pszPath)
PTSTR None shlwapi.PathSkipRootA(_In_ PTSTR pszPath)
SEC_ENTRY None None.DeleteConnectedIdentity(_In_ PVOID ProviderHandle,_In_opt_ HANDLE UserToken,_In_ PSID UserSid,_In_ PWSTR IdentityUserName)
BOOL None shlwapi.PathIsContentType(_In_ LPCTSTR pszPath,_In_ LPCTSTR pszContentType)
BOOL None shlwapi.PathIsContentTypeW(_In_ LPCTSTR pszPath,_In_ LPCTSTR pszContentType)
BOOL None shlwapi.PathIsContentTypeA(_In_ LPCTSTR pszPath,_In_ LPCTSTR pszContentType)
HRESULT None shlwapi.PathCreateFromUrl(_In_ PCTSTR pszUrl,_Out_ PTSTR pszPath,_Inout_ DWORD *pcchPath,DWORD dwFlags None)
HRESULT None shlwapi.PathCreateFromUrlW(_In_ PCTSTR pszUrl,_Out_ PTSTR pszPath,_Inout_ DWORD *pcchPath,DWORD dwFlags None)
HRESULT None shlwapi.PathCreateFromUrlA(_In_ PCTSTR pszUrl,_Out_ PTSTR pszPath,_Inout_ DWORD *pcchPath,DWORD dwFlags None)
HRESULT None None.Update([in] IBindCtx *pbc)
void None None.DSGetShader([out] ID3D11DomainShader **ppDomainShader,[out None None,optional] ID3D11ClassInstance **ppClassInstances,[in None None,out None None,optional] UINT *pNumClassInstances)
NTSTATUS None advapi32.LsaQueryInformationPolicy(_In_ LSA_HANDLE PolicyHandle,_In_ POLICY_INFORMATION_CLASS InformationClass,_Out_ PVOID *Buffer)
HRESULT None None.UndoTo([in] IOleUndoUnit *pUU)
HRESULT None None.GetCoreWindow([in] REFIID refiid,[out] void **ppUnk)
NTSTATUS None None.SpCompleteAuthToken(_In_ LSA_SEC_HANDLE ContextHandle,_In_ PSecBufferDesc InputBuffer)
POWER_PLATFORM_ROLE WINAPI powrprof.PowerDeterminePlatformRoleEx(_In_ ULONG Version)
HRESULT None None.Save([in] IStorage *pStgSave,[in] BOOL fSameAsLoad)
PTSTR None shlwapi.PathGetArgs(_In_ PTSTR pszPath)
PTSTR None shlwapi.PathGetArgsW(_In_ PTSTR pszPath)
PTSTR None shlwapi.PathGetArgsA(_In_ PTSTR pszPath)
HRESULT None None.GetUserType([in] DWORD dwFormOfType,[out] LPOLESTR *pszUserType)
SECURITY_STATUS None credui.SspiUpdateCredentials(_In_ HANDLE ContextHandle,_In_ GUID *CredType,_In_ ULONG FlatCredUIContextLength,_In_ PUCHAR FlatCredUIContext)
int None None.WlxDialogBoxIndirectParam(_In_ HANDLE hWlx,_In_ HANDLE hInst,_In_ LPCDLGTEMPLATE hDialogTemplate,_In_ HWND hwndOwner,_In_ DLGPROC dlgprc,_In_ LPARAM dwInitParam)
BOOL WINAPI advapi32.CredUnprotect(_In_ BOOL fAsSelf,_In_ LPTSTR pszProtectedCredentials,_In_ DWORD cchCredentials,_Out_ LPTSTR pszCredentials,_Inout_ DWORD *pcchMaxChars)
BOOL WINAPI advapi32.CredUnprotectW(_In_ BOOL fAsSelf,_In_ LPTSTR pszProtectedCredentials,_In_ DWORD cchCredentials,_Out_ LPTSTR pszCredentials,_Inout_ DWORD *pcchMaxChars)
BOOL WINAPI advapi32.CredUnprotectA(_In_ BOOL fAsSelf,_In_ LPTSTR pszProtectedCredentials,_In_ DWORD cchCredentials,_Out_ LPTSTR pszCredentials,_Inout_ DWORD *pcchMaxChars)
SECURITY_STATUS None sspicli.SspiExcludePackage(_In_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE AuthIdentity,_In_ PCWSTR pszPackageName,_Out_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE *ppNewAuthIdentity)
LPTSTR None shlwapi.PathRemoveBackslash(_Inout_ LPTSTR lpszPath)
LPTSTR None shlwapi.PathRemoveBackslashW(_Inout_ LPTSTR lpszPath)
LPTSTR None shlwapi.PathRemoveBackslashA(_Inout_ LPTSTR lpszPath)
LONG WINAPI winscard.SCardLocateCardsByATR(_In_ SCARDCONTEXT hContext,_In_ LPSCARD_ATRMASK rgAtrMasks,_In_ DWORD cAtrs,_Inout_ LPSCARD_READERSTATE rgReaderStates,_In_ DWORD cReaders)
LONG WINAPI winscard.SCardLocateCardsByATRW(_In_ SCARDCONTEXT hContext,_In_ LPSCARD_ATRMASK rgAtrMasks,_In_ DWORD cAtrs,_Inout_ LPSCARD_READERSTATE rgReaderStates,_In_ DWORD cReaders)
LONG WINAPI winscard.SCardLocateCardsByATRA(_In_ SCARDCONTEXT hContext,_In_ LPSCARD_ATRMASK rgAtrMasks,_In_ DWORD cAtrs,_Inout_ LPSCARD_READERSTATE rgReaderStates,_In_ DWORD cReaders)
BOOL WINAPI advapi32.CredFindBestCredential(_In_ LPCTSTR TargetName,_In_ DWORD Type,_In_ DWORD Flags,_Out_ PCREDENTIAL *Credential)
BOOL WINAPI advapi32.CredFindBestCredentialW(_In_ LPCTSTR TargetName,_In_ DWORD Type,_In_ DWORD Flags,_Out_ PCREDENTIAL *Credential)
BOOL WINAPI advapi32.CredFindBestCredentialA(_In_ LPCTSTR TargetName,_In_ DWORD Type,_In_ DWORD Flags,_Out_ PCREDENTIAL *Credential)
SECURITY_STATUS SEC_Entry secur32.AcceptSecurityContext(_In_opt_ PCredHandle phCredential,_Inout_opt_ PCtxtHandle phContext,_In_opt_ PSecBufferDesc pInput,_In_ ULONG fContextReq,_In_ ULONG TargetDataRep,_Inout_opt_ PCtxtHandle phNewContext,_Inout_opt_ PSecBufferDesc pOutput,_Out_ PULONG pfContextAttr,_Out_opt_ PTimeStamp ptsTimeStamp)
BOOLEAN WINAPI powrprof.GetPwrDiskSpindownRange(_Out_ PUINT RangeMax,_Out_ PUINT RangeMin)
BOOLEAN WINAPI powrprof.DevicePowerEnumDevices(_In_ ULONG QueryIndex,_In_ ULONG QueryInterpretationFlags,_In_ ULONG QueryFlags,_Out_opt_ PBYTE pReturnBuffer,_Inout_ PULONG pBufferSize)
HRESULT None None.EnumDAdvise([out] IEnumSTATDATA **ppenumAdvise)
int None None.WlxLoggedOutSAS(_In_ PVOID pWlxContext,_In_ DWORD dwSasType,_Out_ PLUID pAuthenticationId,_Inout_ PSID pLogonSid,_Out_ PDWORD pdwOptions,_Out_ PHANDLE phToken,_Out_ PWLX_MPR_NOTIFY_INFO pNprNotifyInfo,_Out_ PVOID *pProfile)
SECURITY_STATUS SEC_Entry secur32.FreeContextBuffer(_In_ PVOID pvContextBuffer)
NTSTATUS None None.SpQueryCredentialsAttributes(_In_ LSA_SEC_HANDLE CredentialHandle,_In_ ULONG CredentialAttribute,_Out_ PVOID Buffer)
NTSTATUS None None.SpGetInfo(_Out_ PSecPkgInfo PackageInfo)
BOOL WINAPI kernel32.GetSystemPowerStatus(_Out_ LPSYSTEM_POWER_STATUS lpSystemPowerStatus)
BOOL None None.WlxDisplayStatusMessage(_In_ PVOID pWlxContext,_In_ HDESK hDesktop,_In_ DWORD dwOptions,_In_ PWSTR pTitle,_In_ PWSTR pMessage)
HRESULT None gpedit.DeleteGPOLink(_In_ LPOLESTR lpGPO,_In_ LPOLESTR lpContainer)
LPTSTR None shlwapi.PathBuildRoot(_Out_ LPTSTR szRoot,_In_ int iDrive)
LPTSTR None shlwapi.PathBuildRootW(_Out_ LPTSTR szRoot,_In_ int iDrive)
LPTSTR None shlwapi.PathBuildRootA(_Out_ LPTSTR szRoot,_In_ int iDrive)
SECURITY_STATUS WINAPI secur32.QueryContextAttributesEx(_In_ PCtxtHandle phContext,_In_ ULONG ulAttribute,_Out_ PVOID pBuffer,_In_ ULONG cbBuffer)
SECURITY_STATUS WINAPI secur32.QueryContextAttributesExW(_In_ PCtxtHandle phContext,_In_ ULONG ulAttribute,_Out_ PVOID pBuffer,_In_ ULONG cbBuffer)
SECURITY_STATUS WINAPI secur32.QueryContextAttributesExA(_In_ PCtxtHandle phContext,_In_ ULONG ulAttribute,_Out_ PVOID pBuffer,_In_ ULONG cbBuffer)
BOOL None advapi32.LogonUserEx(_In_ LPTSTR lpszUsername,_In_opt_ LPTSTR lpszDomain,_In_opt_ LPTSTR lpszPassword,_In_ DWORD dwLogonType,_In_ DWORD dwLogonProvider,_Out_opt_ PHANDLE phToken,_Out_opt_ PSID *ppLogonSid,_Out_opt_ PVOID *ppProfileBuffer,_Out_opt_ LPDWORD pdwProfileLength,_Out_opt_ PQUOTA_LIMITS pQuotaLimits)
BOOL None advapi32.LogonUserExW(_In_ LPTSTR lpszUsername,_In_opt_ LPTSTR lpszDomain,_In_opt_ LPTSTR lpszPassword,_In_ DWORD dwLogonType,_In_ DWORD dwLogonProvider,_Out_opt_ PHANDLE phToken,_Out_opt_ PSID *ppLogonSid,_Out_opt_ PVOID *ppProfileBuffer,_Out_opt_ LPDWORD pdwProfileLength,_Out_opt_ PQUOTA_LIMITS pQuotaLimits)
BOOL None advapi32.LogonUserExA(_In_ LPTSTR lpszUsername,_In_opt_ LPTSTR lpszDomain,_In_opt_ LPTSTR lpszPassword,_In_ DWORD dwLogonType,_In_ DWORD dwLogonProvider,_Out_opt_ PHANDLE phToken,_Out_opt_ PSID *ppLogonSid,_Out_opt_ PVOID *ppProfileBuffer,_Out_opt_ LPDWORD pdwProfileLength,_Out_opt_ PQUOTA_LIMITS pQuotaLimits)
HRESULT None ole32.OleCreateLinkToFile(_In_ LPCOLESTR lpszFileName,_In_ REFIID riid,_In_ DWORD renderopt,_In_ LPFORMATETC lpFormatEtc,_In_ LPOLECLIENTSITE pClientSite,_In_ LPSTORAGE pStg,_Out_ LPVOID *ppvObj)
DWORD None None.NPFMXGetPermHelp(_In_ LPTSTR lpDriveName,_In_ DWORD nType,_In_ BOOL fDirectory,_Inout_ LPVOID lpBuffer,_Inout_ LPDWORD lpBufferSize,_Out_ LPDWORD lpnHelpContext)
SECURITY_STATUS SEC_ENTRY secur32.SaslEnumerateProfiles(_Out_ LPTSTR *ProfileList,_Out_ ULONG *ProfileCount)
SECURITY_STATUS SEC_ENTRY secur32.SaslEnumerateProfilesW(_Out_ LPTSTR *ProfileList,_Out_ ULONG *ProfileCount)
SECURITY_STATUS SEC_ENTRY secur32.SaslEnumerateProfilesA(_Out_ LPTSTR *ProfileList,_Out_ ULONG *ProfileCount)
HRESULT None shlwapi.PathMatchSpecEx(_In_ LPCTSTR pszFile,_In_ LPCTSTR pszSpec,_In_ DWORD dwFlags)
HRESULT None shlwapi.PathMatchSpecExW(_In_ LPCTSTR pszFile,_In_ LPCTSTR pszSpec,_In_ DWORD dwFlags)
HRESULT None shlwapi.PathMatchSpecExA(_In_ LPCTSTR pszFile,_In_ LPCTSTR pszSpec,_In_ DWORD dwFlags)
BOOL None userenv.RefreshPolicy(_In_ BOOL bMachine)
SECURITY_STATUS SEC_Entry secur32.AcceptSecurityContext(_In_opt_ PCredHandle phCredential,_Inout_ PCtxtHandle phContext,_In_opt_ PSecBufferDesc pInput,_In_ ULONG fContextReq,_In_ ULONG TargetDataRep,_Inout_opt_ PCtxtHandle phNewContext,_Inout_opt_ PSecBufferDesc pOutput,_Out_ PULONG pfContextAttr,_Out_opt_ PTimeStamp ptsTimeStamp)
BOOLEAN WINAPI powrprof.IsPwrSuspendAllowed(void None None)
HRESULT None ole32.CreateOleAdviseHolder(_Out_ LPOLEADVISEHOLDER *ppOAHolder)
BOOL None shlwapi.PathCompactPathEx(_Out_ LPTSTR pszOut,_In_ LPCTSTR pszSrc,_In_ UINT cchMax,_Reserved_ DWORD dwFlags)
BOOL None shlwapi.PathCompactPathExW(_Out_ LPTSTR pszOut,_In_ LPCTSTR pszSrc,_In_ UINT cchMax,_Reserved_ DWORD dwFlags)
BOOL None shlwapi.PathCompactPathExA(_Out_ LPTSTR pszOut,_In_ LPCTSTR pszSrc,_In_ UINT cchMax,_Reserved_ DWORD dwFlags)
NTSTATUS None secur32.LsaLookupAuthenticationPackage(_In_ HANDLE LsaHandle,_In_ PLSA_STRING PackageName,_Out_ PULONG AuthenticationPackage)
HRESULT None None.DuplicateOutput([in] IUnknown *pDevice,[out] IDXGIOutputDuplication **ppOutputDuplication)
HRESULT None ole32.OleCreateFromFile(_In_ REFCLSID rclsid,_In_ LPCOLESTR lpszFileName,_In_ REFIID riid,_In_ DWORD renderopt,_In_ LPFORMATETC lpFormatEtc,_In_ LPOLECLIENTSITE pClientSite,_In_ LPSTORAGE pStg,_Out_ LPVOID *ppvObj)
BOOL None shlwapi.PathFindOnPath(_Inout_ LPTSTR pszFile,_In_opt_ LPCTSTR *ppszOtherDirs)
BOOL None shlwapi.PathFindOnPathW(_Inout_ LPTSTR pszFile,_In_opt_ LPCTSTR *ppszOtherDirs)
BOOL None shlwapi.PathFindOnPathA(_Inout_ LPTSTR pszFile,_In_opt_ LPCTSTR *ppszOtherDirs)
HRESULT None ole32.SetStateBits([in] DWORD grfStateBits,[in] DWORD grfMask)
SECURITY_STATUS None secur32.AddSecurityPackage(_In_ LPTSTR pszPackageName,_In_ PSECURITY_PACKAGE_OPTIONS pOptions)
SECURITY_STATUS None secur32.AddSecurityPackageW(_In_ LPTSTR pszPackageName,_In_ PSECURITY_PACKAGE_OPTIONS pOptions)
SECURITY_STATUS None secur32.AddSecurityPackageA(_In_ LPTSTR pszPackageName,_In_ PSECURITY_PACKAGE_OPTIONS pOptions)
HRESULT None ole32.OleCreateFromDataEx(_In_ LPDATAOBJECT pSrcDataObj,_In_ REFIID riid,_In_ DWORD dwFlags,_In_ DWORD renderopt,_In_ ULONG cFormats,_In_ DWORD *rgAdvf,_In_ LPFORMATETC rgFormatEtc,_In_ IAdviseSink *lpAdviseSink,_Out_ DWORD *rgdwConnection,_In_ LPOLECLIENTSITE pClientSite,_In_ LPSTORAGE pStg,_Out_ LPVOID *ppvObj)
void None None.PSGetShader([out] ID3D11PixelShader **ppPixelShader,[out None None,optional] ID3D11ClassInstance **ppClassInstances,[in None None,out None None,optional] UINT *pNumClassInstances)
void None None.RSGetState([out] ID3D11RasterizerState **ppRasterizerState)
BOOLEAN WINAPI powrprof.DevicePowerClose(void None None)
BOOL None shlwapi.PathIsLFNFileSpec(_In_ LPCTSTR pszName)
BOOL None shlwapi.PathIsLFNFileSpecW(_In_ LPCTSTR pszName)
BOOL None shlwapi.PathIsLFNFileSpecA(_In_ LPCTSTR pszName)
HRESULT None None.Unadvise([in] DWORD dwConnection)
SECURITY_STATUS SEC_Entry secur32.ImpersonateSecurityContext(_In_ PCtxtHandle phContext)
HRESULT None None.GetBoundSource([out] IUnknown **ppunk)
HRESULT None None.GetLastUndoDescription([out] BSTR *pBstr)
HRESULT None activeds.AbandonSearch([in] ADS_SEARCH_HANDLE hSearchHandle)
BOOL None None.WlxCloseUserDesktop(_In_ HANDLE hWlx,_In_ PWLX_DESKTOP pDesktop,_In_ HANDLE hToken)
WINHTTP_STATUS_CALLBACK WINAPI winhttp.WinHttpSetStatusCallback(_In_ HINTERNET hInternet,_In_ WINHTTP_STATUS_CALLBACK lpfnInternetCallback,_In_ DWORD dwNotificationFlags,_Reserved_ DWORD_PTR dwReserved)
void None None.OMGetRenderTargetsAndUnorderedAccessViews([in] UINT NumRTVs,[out None None,optional] ID3D11RenderTargetView **ppRenderTargetViews,[out None None,optional] ID3D11DepthStencilView **ppDepthStencilView,[in] UINT UAVStartSlot,[in] UINT NumUAVs,[out None None,optional] ID3D11UnorderedAccessView **ppUnorderedAccessViews)
HRESULT None ole32.OleCreateLinkToFileEx(_In_ LPCOLESTR lpszFileName,_In_ REFIID riid,_In_ DWORD dwFlags,_In_ DWORD renderopt,_In_ ULONG cFormats,_In_ DWORD *rgAdvf,_In_ LPFORMATETC rgFormatEtc,_In_ IAdviseSink *lpAdviseSink,_Out_ DWORD *rgdwConnection,_In_ LPOLECLIENTSITE pClientSite,_In_ LPSTORAGE pStg,_Out_ LPVOID *ppvObj)
BOOL None oledlg.OleUICanConvertOrActivateAs(_In_ REFCLSID rClsid,_In_ BOOL fIsLinkedObject,_In_ WORD wFormat)
SECURITY_STATUS SEC_Entry secur32.CompleteAuthToken(_In_ PCtxtHandle phContext,_In_ PSecBufferDesc pToken)
DWORD CALLBACK None.ProcessGroupPolicy(_In_ DWORD dwFlags,_In_ HANDLE hToken,_In_ HKEY hKeyRoot,_In_ PGROUP_POLICY_OBJECT pDeletedGPOList,_In_ PGROUP_POLICY_OBJECT pChangedGPOList,_In_ ASYNCCOMPLETIONHANDLE pHandle,_In_ BOOL *pbAbort,_In_ PFNSTATUSMESSAGECALLBACK pStatusCallback)
HRESULT None ole32.OleInitialize(_In_ LPVOID pvReserved)
NTSTATUS WINAPI certpoleng.PstGetCertificates(_In_ PUNICODE_STRING pTargetName,_In_ DWORD cCriteria,_In_opt_ PCCERT_SELECT_CRITERIA rgpCriteria,_In_ BOOL bIsClient,_Out_ PDWORD pdwCertChainContextCount,_Out_ PCCERT_CHAIN_CONTEXT **ppCertChainContexts)
LONG WINAPI winscard.SCardWriteCache(_In_ SCARDCONTEXT hContext,_In_ UUID *CardIdentifier,_In_ DWORD FreshnessCounter,_In_ LPTSTR LookupName,_In_ PBYTE Data,_In_ DWORD DataLen)
LONG WINAPI winscard.SCardWriteCacheW(_In_ SCARDCONTEXT hContext,_In_ UUID *CardIdentifier,_In_ DWORD FreshnessCounter,_In_ LPTSTR LookupName,_In_ PBYTE Data,_In_ DWORD DataLen)
LONG WINAPI winscard.SCardWriteCacheA(_In_ SCARDCONTEXT hContext,_In_ UUID *CardIdentifier,_In_ DWORD FreshnessCounter,_In_ LPTSTR LookupName,_In_ PBYTE Data,_In_ DWORD DataLen)
HRESULT None shlwapi.UrlUnescape(_Inout_ PTSTR pszURL,_Out_opt_ PTSTR pszUnescaped,_Inout_opt_ DWORD *pcchUnescaped,DWORD dwFlags None)
HRESULT None shlwapi.UrlUnescapeW(_Inout_ PTSTR pszURL,_Out_opt_ PTSTR pszUnescaped,_Inout_opt_ DWORD *pcchUnescaped,DWORD dwFlags None)
HRESULT None shlwapi.UrlUnescapeA(_Inout_ PTSTR pszURL,_Out_opt_ PTSTR pszUnescaped,_Inout_opt_ DWORD *pcchUnescaped,DWORD dwFlags None)
SECURITY_STATUS SEC_Entry secur32.DecryptMessage(_In_ PCtxtHandle phContext,_Inout_ PSecBufferDesc pMessage,_In_ ULONG MessageSeqNo,_Out_ PULONG pfQOP)
HRESULT None ole32.OleCreateLinkToFile(_In_ LPCOLESTR lpszFileName,_In_ REFIID riid,_In_ DWORD renderopt,_In_ LPFORMATETC lpFormatEtc,_In_ LPOLECLIENTSITE pClientSite,_In_ LPSTORAGE pStg,_Out_ LPVOID *ppvObj)
HRESULT None None.SetRectComplex([in] LPRECT prcView,[in] LPRECT prcHScroll,[in] LPRECT prcVScroll,[in] LPRECT prcSizeBox)
BOOL WINAPI kernel32.SetCommState(_In_ HANDLE hFile,_In_ LPDCB lpDCB)
BOOL None shlwapi.PathMakeSystemFolder(_In_ LPTSTR pszPath)
BOOL None shlwapi.PathMakeSystemFolderW(_In_ LPTSTR pszPath)
BOOL None shlwapi.PathMakeSystemFolderA(_In_ LPTSTR pszPath)
DWORD WINAPI powrprof.PowerGetActiveScheme(_In_opt_ HKEY UserRootPowerKey,_Out_ GUID **ActivePolicyGuid)
HRESULT None None.LockContainer([in] BOOL fLock)
BOOL None shlwapi.PathIsUNCServerShare(_In_ LPCTSTR pszPath)
BOOL None shlwapi.PathIsUNCServerShareW(_In_ LPCTSTR pszPath)
BOOL None shlwapi.PathIsUNCServerShareA(_In_ LPCTSTR pszPath)
BOOL None None.WlxGetStatusMessage(_In_ PVOID pWlxContext,_Out_ DWORD *pdwOptions,_Out_ PWSTR pMessage,_In_ DWORD dwBufferSize)
BOOL None shlwapi.PathIsDirectoryEmpty(_In_ LPCTSTR pszPath)
BOOL None shlwapi.PathIsDirectoryEmptyW(_In_ LPCTSTR pszPath)
BOOL None shlwapi.PathIsDirectoryEmptyA(_In_ LPCTSTR pszPath)
NTSTATUS None None.SpSetExtendedInformation(_In_ SECPKG_EXTENDED_INFORMATION_CLASS Class,_In_ PSECPKG_EXTENDED_INFORMATION Info)
BOOL None advapi32.CredMarshalCredential(_In_ CRED_MARSHAL_TYPE CredType,_In_ PVOID Credential,_Out_ LPTSTR *MarshaledCredential)
BOOL None advapi32.CredMarshalCredentialW(_In_ CRED_MARSHAL_TYPE CredType,_In_ PVOID Credential,_Out_ LPTSTR *MarshaledCredential)
BOOL None advapi32.CredMarshalCredentialA(_In_ CRED_MARSHAL_TYPE CredType,_In_ PVOID Credential,_Out_ LPTSTR *MarshaledCredential)
BOOL WINAPI kernel32.IsSystemResumeAutomatic(void None None)
HRESULT None dxgi.GetDesc3([out] DXGI_ADAPTER_DESC3 *pDesc)
int None shlwapi.PathCommonPrefix(_In_ LPCTSTR pszFile1,_In_ LPCTSTR pszFile2,_Out_opt_ LPTSTR pszPath)
int None shlwapi.PathCommonPrefixW(_In_ LPCTSTR pszFile1,_In_ LPCTSTR pszFile2,_Out_opt_ LPTSTR pszPath)
int None shlwapi.PathCommonPrefixA(_In_ LPCTSTR pszFile1,_In_ LPCTSTR pszFile2,_Out_opt_ LPTSTR pszPath)
HRESULT None None.CreateSoftwareAdapter(HMODULE Module None,[out] IDXGIAdapter **ppAdapter)
BOOL None shlwapi.PathIsURL(_In_ LPCTSTR pszPath)
BOOL None shlwapi.PathIsURLW(_In_ LPCTSTR pszPath)
BOOL None shlwapi.PathIsURLA(_In_ LPCTSTR pszPath)
HRESULT None shlwapi.UrlHash(_In_ PCTSTR pszURL,_Out_ BYTE *pbHash,DWORD cbHash None)
HRESULT None shlwapi.UrlHashW(_In_ PCTSTR pszURL,_Out_ BYTE *pbHash,DWORD cbHash None)
HRESULT None shlwapi.UrlHashA(_In_ PCTSTR pszURL,_Out_ BYTE *pbHash,DWORD cbHash None)
SECURITY_STATUS None credui.SspiUnmarshalCredUIContext(_In_ PUCHAR MarshaledCredUIContext,_In_ ULONG MarshaledCredUIContextLength,_Out_ PSEC_WINNT_CREDUI_CONTEXT *CredUIContext)
void WINAPI secur32.LsaManageSidNameMapping(_In_ LSA_SID_NAME_MAPPING_OPERATION_TYPE OpType,_In_ PLSA_SID_NAME_MAPPING_OPERATION_INPUT OpInput,_Out_ PLSA_SID_NAME_MAPPING_OPERATION_OUTPUT *OpOutput)
VOID WINAPI winhttp.WinHttpFreeProxyResult(_Inout_ WINHTTP_PROXY_RESULT *pProxyResult)
int None None.WlxWkstaLockedSAS(_In_ PVOID pWlxContext,_In_ DWORD dwSasType)
HRESULT None None.GetDocument([out] IUnknown **ppunk)
HRESULT None None.OnViewStatusChange([in] DWORD dwViewStatus)
HRESULT None oleaut32.OleCreateFontIndirect(_In_ LPFONTDESC lpFontDesc,_In_ REFIID riid,_Out_ LPVOID *lplpvObj)
LONG WINAPI winscard.SCardTransmit(_In_ SCARDHANDLE hCard,_In_ LPCSCARD_IO_REQUEST pioSendPci,_In_ LPCBYTE pbSendBuffer,_In_ DWORD cbSendLength,_Inout_opt_ LPSCARD_IO_REQUEST pioRecvPci,_Out_ LPBYTE pbRecvBuffer,_Inout_ LPDWORD pcbRecvLength)
HRESULT None None.EnumUndoable([out] IEnumOleUndoUnits **ppEnum)
BOOL None None.WlxIsLockOk(_In_ PVOID pWlxContext)
HRESULT None None.Clone([in] IOleInPlaceSite *pIPSiteNew,[out] IOleDocumentView **ppViewNew)
HRESULT None None.EnumObjects([in] DWORD grfFlags,[out] IEnumUnknown **ppenum)
BOOL None kernel32.PowerSetRequest(_In_ HANDLE PowerRequest,_In_ POWER_REQUEST_TYPE RequestType)
UINT None oledlg.OleUIEditLinks(_In_ LPOLEUIEDITLINKS lpEL)
UINT None oledlg.OleUIEditLinksW(_In_ LPOLEUIEDITLINKS lpEL)
UINT None oledlg.OleUIEditLinksA(_In_ LPOLEUIEDITLINKS lpEL)
HRESULT None ole32.OleCreateLink(_In_ LPMONIKER pmkLinkSrc,_In_ REFIID riid,_In_ DWORD renderopt,_In_ LPFORMATETC lpFormatEtc,_In_ LPOLECLIENTSITE pClientSite,_In_ LPSTORAGE pStg,_Out_ LPVOID *ppvObj)
int None shlwapi.UrlCompare(_In_ PCTSTR psz1,_In_ PCTSTR psz2,BOOL fIgnoreSlash None)
int None shlwapi.UrlCompareW(_In_ PCTSTR psz1,_In_ PCTSTR psz2,BOOL fIgnoreSlash None)
int None shlwapi.UrlCompareA(_In_ PCTSTR psz1,_In_ PCTSTR psz2,BOOL fIgnoreSlash None)
BOOL None shlwapi.PathIsLFNFileSpec(_In_ LPCTSTR pszName)
BOOL None shlwapi.PathIsLFNFileSpecW(_In_ LPCTSTR pszName)
BOOL None shlwapi.PathIsLFNFileSpecA(_In_ LPCTSTR pszName)
void None None.proc1(void None None)
VOID None advapi32.CredFree(_In_ PVOID Buffer)
BOOL None shlwapi.UrlIsFileUrl(LPCTSTR pszUrl None)
BOOL None shlwapi.UrlIsFileUrlW(LPCTSTR pszUrl None)
BOOL None shlwapi.UrlIsFileUrlA(LPCTSTR pszUrl None)
HRESULT None ole32.OleCreate(_In_ REFCLSID rclsid,_In_ REFIID riid,_In_ DWORD renderopt,_In_ LPFORMATETC pFormatEtc,_In_ LPOLECLIENTSITE pClientSite,_In_ LPSTORAGE pStg,_Out_ LPVOID *ppvObj)
DWORD None userenv.GetAppliedGPOList(_In_ DWORD dwFlags,_In_ LPCTSTR pMachineName,_In_ PSID pSidUser,_In_ GUID *pGuidExtension,_Out_ PGROUP_POLICY_OBJECT *ppGPOList)
DWORD None userenv.GetAppliedGPOListW(_In_ DWORD dwFlags,_In_ LPCTSTR pMachineName,_In_ PSID pSidUser,_In_ GUID *pGuidExtension,_Out_ PGROUP_POLICY_OBJECT *ppGPOList)
DWORD None userenv.GetAppliedGPOListA(_In_ DWORD dwFlags,_In_ LPCTSTR pMachineName,_In_ PSID pSidUser,_In_ GUID *pGuidExtension,_Out_ PGROUP_POLICY_OBJECT *ppGPOList)
PVOID None None.AllocateLsaHeap(_In_ ULONG Length)
void None ole32.ReleaseStgMedium(_In_ LPSTGMEDIUM pMedium)
BOOL None userenv.GetGPOList(_In_ HANDLE hToken,_In_ LPCTSTR lpName,_In_ LPCTSTR lpHostName,_In_ LPCTSTR lpComputerName,_In_ DWORD dwFlags,_Out_ PGROUP_POLICY_OBJECT *pGPOList)
BOOL None userenv.GetGPOListW(_In_ HANDLE hToken,_In_ LPCTSTR lpName,_In_ LPCTSTR lpHostName,_In_ LPCTSTR lpComputerName,_In_ DWORD dwFlags,_Out_ PGROUP_POLICY_OBJECT *pGPOList)
BOOL None userenv.GetGPOListA(_In_ HANDLE hToken,_In_ LPCTSTR lpName,_In_ LPCTSTR lpHostName,_In_ LPCTSTR lpComputerName,_In_ DWORD dwFlags,_Out_ PGROUP_POLICY_OBJECT *pGPOList)
BOOL None shlwapi.PathIsSameRoot(_In_ LPCTSTR pszPath1,_In_ LPCTSTR pszPath2)
BOOL None shlwapi.PathIsSameRootW(_In_ LPCTSTR pszPath1,_In_ LPCTSTR pszPath2)
BOOL None shlwapi.PathIsSameRootA(_In_ LPCTSTR pszPath1,_In_ LPCTSTR pszPath2)
NTSTATUS None None.AuditAccountLogon(_In_ ULONG AuditId,_In_ BOOLEAN Success,_In_ PUNICODE_STRING Source,_In_ PUNICODE_STRING ClientName,_In_ PUNICODE_STRING MappedName,_In_ NTSTATUS Status)
VOID WINAPI sas.SendSAS(_In_ BOOL AsUser)
BOOL None shlwapi.PathIsNetworkPath(_In_ LPCTSTR pszPath)
BOOL None shlwapi.PathIsNetworkPathW(_In_ LPCTSTR pszPath)
BOOL None shlwapi.PathIsNetworkPathA(_In_ LPCTSTR pszPath)
HRESULT None None.EnumAdvise([out] IEnumSTATDATA **ppenumAdvise)
HRESULT None oleaut32.OleCreatePictureIndirect(_In_ LPPICTDESC lpPictDesc,_In_ REFIID riid,_In_ BOOL fOwn,_Out_ LPVOID *lplpvObj)
HRESULT None ole32.OleCreateLinkFromData(_In_ LPDATAOBJECT pSrcDataObj,_In_ REFIID riid,_In_ DWORD renderopt,_In_ LPFORMATETC pFormatEtc,_In_ LPOLECLIENTSITE pClientSite,_In_ LPSTORAGE pStg,_Out_ LPVOID *ppvObj)
HRESULT None dxgi.CreateDXGIFactory2(UINT Flags None,REFIID riid None,_Out_ void **ppFactory)
HRESULT None gpedit.BrowseForGPO(_Inout_ LPGPOBROWSEINFO lpBrowseInfo)
HRESULT None None.GetUserClassID([out] CLSID *pClsid)
HRESULT None ole32.OleSetClipboard(_In_ LPDATAOBJECT pDataObj)
VOID WINAPI winhttp.WinHttpFreeProxyResult(_Inout_ WINHTTP_PROXY_RESULT *pProxyResult)
UINT None shlwapi.PathGetCharType(_In_ TUCHAR ch)
UINT None shlwapi.PathGetCharTypeW(_In_ TUCHAR ch)
UINT None shlwapi.PathGetCharTypeA(_In_ TUCHAR ch)
UINT None oledlg.OleUIBusy(_In_ LPOLEUIBUSY lpBZ)
UINT None oledlg.OleUIBusyW(_In_ LPOLEUIBUSY lpBZ)
UINT None oledlg.OleUIBusyA(_In_ LPOLEUIBUSY lpBZ)
NTSTATUS None None.SpGetExtendedInformation(_In_ SECPKG_EXTENDED_INFORMATION_CLASS Class,_Out_ PSECPKG_EXTENDED_INFORMATION *ppInformation)
void None None.FreeReturnBuffer(_In_ PVOID Base)
HRESULT None None.Do([in] IOleUndoManager *pUndoManager)
HRESULT None None.Cache([in] FORMATETC *pformatetc,[in] DWORD advf,[out] DWORD *pdwConnection)
LPTSTR None shlwapi.PathCombine(_Out_ LPTSTR pszPathOut,_In_opt_ LPCTSTR pszPathIn,_In_ LPCTSTR pszMore)
LPTSTR None shlwapi.PathCombineW(_Out_ LPTSTR pszPathOut,_In_opt_ LPCTSTR pszPathIn,_In_ LPCTSTR pszMore)
LPTSTR None shlwapi.PathCombineA(_Out_ LPTSTR pszPathOut,_In_opt_ LPCTSTR pszPathIn,_In_ LPCTSTR pszMore)
HRESULT WINAPI d3d12.D3D12CreateDevice(_In_opt_ IUnknown *pAdapter,D3D_FEATURE_LEVEL MinimumFeatureLevel None,_In_ REFIID riid,_Out_opt_ void **ppDevice)
HRESULT None ole32.OleCreateEx(_In_ REFCLSID rclsid,_In_ REFIID riid,_In_ DWORD dwFlags,_In_ DWORD renderopt,_In_ ULONG cFormats,_In_ DWORD *rgAdvf,_In_ LPFORMATETC rgFormatEtc,_In_ IAdviseSink *lpAdviseSink,_Out_ DWORD *rgdwConnection,_In_ LPOLECLIENTSITE pClientSite,_In_ LPSTORAGE pStg,_Out_ LPVOID *ppvObj)
HRESULT None None.GetLastUndoDescription([out] BSTR *pBstr)
PVOID None None.AllocateHeap(_In_ ULONG Length)
void None None.VSGetShaderResources([in] UINT StartSlot,[in] UINT NumViews,[out None None,optional] ID3D11ShaderResourceView **ppShaderResourceViews)
BOOLEAN WINAPI powrprof.GetPwrCapabilities(_Out_ PSYSTEM_POWER_CAPABILITIES lpSystemPowerCapabilities)
FLOAT None None.GetResourceMinLOD([in] ID3D11Resource *pResource)
SECURITY_STATUS SEC_Entry secur32.ApplyControlToken(_In_ PCtxtHandle phContext,_In_ PSecBufferDesc pInput)
HRESULT None shlwapi.PathCreateFromUrlAlloc(_In_ PCWSTR pszIn,_Out_ PWSTR *ppszOut,DWORD dwFlags None)
PTSTR None shlwapi.PathFindFileName(_In_ PTSTR pPath)
PTSTR None shlwapi.PathFindFileNameW(_In_ PTSTR pPath)
PTSTR None shlwapi.PathFindFileNameA(_In_ PTSTR pPath)
HANDLE None ole32.OleDuplicateData(_In_ HANDLE hSrc,_In_ CLIPFORMAT cfFormat,_In_ UINT uiFlags)
HRESULT None activeds.FreeColumn([in] PADS_SEARCH_COLUMN pSearchColumn)
int None shlwapi.PathGetDriveNumber(_In_ LPCTSTR lpsz)
int None shlwapi.PathGetDriveNumberW(_In_ LPCTSTR lpsz)
int None shlwapi.PathGetDriveNumberA(_In_ LPCTSTR lpsz)
NTSTATUS None None.DeleteCredential(_In_ PLUID LogonId,_In_ ULONG AuthenticationPackage,_In_ PLSA_STRING PrimaryKeyValue)
DWORD WINAPI credui.CredUIConfirmCredentials(_In_ PCTSTR pszTargetName,_In_ BOOL bConfirm)
DWORD WINAPI credui.CredUIConfirmCredentialsW(_In_ PCTSTR pszTargetName,_In_ BOOL bConfirm)
DWORD WINAPI credui.CredUIConfirmCredentialsA(_In_ PCTSTR pszTargetName,_In_ BOOL bConfirm)
int None shlwapi.PathParseIconLocation(_Inout_ LPTSTR pszIconFile)
int None shlwapi.PathParseIconLocationW(_Inout_ LPTSTR pszIconFile)
int None shlwapi.PathParseIconLocationA(_Inout_ LPTSTR pszIconFile)
BOOL None shlwapi.PathCanonicalize(_Out_ LPTSTR lpszDst,_In_ LPCTSTR lpszSrc)
BOOL None shlwapi.PathCanonicalizeW(_Out_ LPTSTR lpszDst,_In_ LPCTSTR lpszSrc)
BOOL None shlwapi.PathCanonicalizeA(_Out_ LPTSTR lpszDst,_In_ LPCTSTR lpszSrc)
HRESULT None None.GetSharedResourceAdapterLuid([in] HANDLE hResource,[out] LUID *pLuid)
NTSTATUS None None.DeleteCredential(_In_ PLUID LogonId,_In_ ULONG AuthenticationPackage,_In_ PLSA_STRING PrimaryKeyValue)
DWORD None None.NPGetConnectionPerformance(_In_ LPTSTR lpRemoteName,_Out_ LPNETCONNECTINFOSTRUCT lpNetConnectInfo)
DWORD None advapi32.InstallApplication(_In_ PINSTALLDATA *pInstallInfo)
DWORD WINAPI winhttp.WinHttpGetProxyResult(_In_ HINTERNET hResolver,_Out_ WINHTTP_PROXY_RESULT *pProxyResult)
BOOL None schannel.SslCrackCertificate(_In_ PUCHAR pbCertificate,_In_ DWORD dwCertificate,_In_ DWORD dwFlags,_Out_ PX509Certificate *ppCertificate)
SECURITY_STATUS SEC_ENTRY secur32.SaslIdentifyPackage(_In_ PSecBufferDesc pInput,_Out_ PSecPkgInfo *PackageInfo)
SECURITY_STATUS SEC_ENTRY secur32.SaslIdentifyPackageW(_In_ PSecBufferDesc pInput,_Out_ PSecPkgInfo *PackageInfo)
SECURITY_STATUS SEC_ENTRY secur32.SaslIdentifyPackageA(_In_ PSecBufferDesc pInput,_Out_ PSecPkgInfo *PackageInfo)
HRESULT None ole32.OleCreateDefaultHandler(_In_ REFCLSID clsid,_In_ LPUNKNOWN pUnkOuter,_In_ REFIID riid,_Out_ LPVOID *lplpObj)
BOOL None shlwapi.PathAppend(_Inout_ LPTSTR pszPath,_In_ LPCTSTR pszMore)
BOOL None shlwapi.PathAppendW(_Inout_ LPTSTR pszPath,_In_ LPCTSTR pszMore)
BOOL None shlwapi.PathAppendA(_Inout_ LPTSTR pszPath,_In_ LPCTSTR pszMore)
DWORD None advapi32.InstallApplication(_In_ PINSTALLDATA *pInstallInfo)
BOOL WINAPI kernel32.SetCommBreak(_In_ HANDLE hFile)
BOOL None shlwapi.UrlIs(_In_ PCTSTR pszUrl,URLIS UrlIs None)
BOOL None shlwapi.UrlIsW(_In_ PCTSTR pszUrl,URLIS UrlIs None)
BOOL None shlwapi.UrlIsA(_In_ PCTSTR pszUrl,URLIS UrlIs None)
DWORD WINAPI credui.CredUIPromptForCredentials(_In_opt_ PCREDUI_INFO pUiInfo,_In_ PCTSTR pszTargetName,_In_ PCtxtHandle Reserved,_In_opt_ DWORD dwAuthError,_Inout_ PCTSTR pszUserName,_In_ ULONG ulUserNameMaxChars,_Inout_ PCTSTR pszPassword,_In_ ULONG ulPasswordMaxChars,_Inout_ PBOOL pfSave,_In_ DWORD dwFlags)
DWORD WINAPI credui.CredUIPromptForCredentialsW(_In_opt_ PCREDUI_INFO pUiInfo,_In_ PCTSTR pszTargetName,_In_ PCtxtHandle Reserved,_In_opt_ DWORD dwAuthError,_Inout_ PCTSTR pszUserName,_In_ ULONG ulUserNameMaxChars,_Inout_ PCTSTR pszPassword,_In_ ULONG ulPasswordMaxChars,_Inout_ PBOOL pfSave,_In_ DWORD dwFlags)
DWORD WINAPI credui.CredUIPromptForCredentialsA(_In_opt_ PCREDUI_INFO pUiInfo,_In_ PCTSTR pszTargetName,_In_ PCtxtHandle Reserved,_In_opt_ DWORD dwAuthError,_Inout_ PCTSTR pszUserName,_In_ ULONG ulUserNameMaxChars,_Inout_ PCTSTR pszPassword,_In_ ULONG ulPasswordMaxChars,_Inout_ PBOOL pfSave,_In_ DWORD dwFlags)
void None None.WlxUseCtrlAltDel(_In_ HANDLE hWlx)
DWORD WINAPI credui.CredUIPromptForCredentials(_In_opt_ PCREDUI_INFO pUiInfo,_In_ PCTSTR pszTargetName,_In_ PCtxtHandle Reserved,_In_opt_ DWORD dwAuthError,_Inout_ PCTSTR pszUserName,_In_ ULONG ulUserNameMaxChars,_Inout_ PCTSTR pszPassword,_In_ ULONG ulPasswordMaxChars,_Inout_ PBOOL pfSave,_In_ DWORD dwFlags)
DWORD WINAPI credui.CredUIPromptForCredentialsW(_In_opt_ PCREDUI_INFO pUiInfo,_In_ PCTSTR pszTargetName,_In_ PCtxtHandle Reserved,_In_opt_ DWORD dwAuthError,_Inout_ PCTSTR pszUserName,_In_ ULONG ulUserNameMaxChars,_Inout_ PCTSTR pszPassword,_In_ ULONG ulPasswordMaxChars,_Inout_ PBOOL pfSave,_In_ DWORD dwFlags)
DWORD WINAPI credui.CredUIPromptForCredentialsA(_In_opt_ PCREDUI_INFO pUiInfo,_In_ PCTSTR pszTargetName,_In_ PCtxtHandle Reserved,_In_opt_ DWORD dwAuthError,_Inout_ PCTSTR pszUserName,_In_ ULONG ulUserNameMaxChars,_Inout_ PCTSTR pszPassword,_In_ ULONG ulPasswordMaxChars,_Inout_ PBOOL pfSave,_In_ DWORD dwFlags)
DWORD None None.NPGetResourceInformation(_In_ LPNETRESOURCE lpNetResource,_Out_ LPVOID lpBuffer,_Inout_ LPDWORD lpcbBuffer,_Out_ LPTSTR *lplpSystem)
DWORD WINAPI winhttp.WinHttpWebSocketShutdown(_In_ HINTERNET hWebSocket,_In_ USHORT usStatus,_In_opt_ PVOID pvReason,_In_ DWORD dwReasonLength)
HRESULT None ole32.OleTranslateAccelerator(_In_ LPOLEINPLACEFRAME lpFrame,_In_ LPOLEINPLACEFRAMEINFO lpFrameInfo,_In_ LPMSG lpmsg)
HRESULT None ole32.OleCreateFromData(_In_ LPDATAOBJECT pSrcDataObj,_In_ REFIID riid,_In_ DWORD renderopt,_In_ LPFORMATETC pFormatEtc,_In_ LPOLECLIENTSITE pClientSite,_In_ LPSTORAGE pStg,_Out_ LPVOID *ppvObj)
BOOL None shlwapi.PathIsDirectory(_In_ LPCTSTR pszPath)
BOOL None shlwapi.PathIsDirectoryW(_In_ LPCTSTR pszPath)
BOOL None shlwapi.PathIsDirectoryA(_In_ LPCTSTR pszPath)
LONG WINAPI winscard.SCardAudit(_In_ SCARDCONTEXT hContext,_In_ DWORD dwEvent)
BOOLEAN None None.DeleteSharedMemory(_In_ PVOID SharedMem)
BOOL None shlwapi.PathMatchSpec(_In_ LPCSTR pszFile,_In_ LPCSTR pszSpec)
BOOL None shlwapi.PathMatchSpecW(_In_ LPCSTR pszFile,_In_ LPCSTR pszSpec)
BOOL None shlwapi.PathMatchSpecA(_In_ LPCSTR pszFile,_In_ LPCSTR pszSpec)
HRESULT None None.SetActiveObject([in] IOleInPlaceActiveObject *pActiveObject,[in] LPCOLESTR pszObjName)
DWORD WINAPI credui.CredUIPromptForCredentials(_In_opt_ PCREDUI_INFO pUiInfo,_In_ PCTSTR pszTargetName,_In_ PCtxtHandle Reserved,_In_opt_ DWORD dwAuthError,_Inout_ PCTSTR pszUserName,_In_ ULONG ulUserNameMaxChars,_Inout_ PCTSTR pszPassword,_In_ ULONG ulPasswordMaxChars,_Inout_ PBOOL pfSave,_In_ DWORD dwFlags)
DWORD WINAPI credui.CredUIPromptForCredentialsW(_In_opt_ PCREDUI_INFO pUiInfo,_In_ PCTSTR pszTargetName,_In_ PCtxtHandle Reserved,_In_opt_ DWORD dwAuthError,_Inout_ PCTSTR pszUserName,_In_ ULONG ulUserNameMaxChars,_Inout_ PCTSTR pszPassword,_In_ ULONG ulPasswordMaxChars,_Inout_ PBOOL pfSave,_In_ DWORD dwFlags)
DWORD WINAPI credui.CredUIPromptForCredentialsA(_In_opt_ PCREDUI_INFO pUiInfo,_In_ PCTSTR pszTargetName,_In_ PCtxtHandle Reserved,_In_opt_ DWORD dwAuthError,_Inout_ PCTSTR pszUserName,_In_ ULONG ulUserNameMaxChars,_Inout_ PCTSTR pszPassword,_In_ ULONG ulPasswordMaxChars,_Inout_ PBOOL pfSave,_In_ DWORD dwFlags)
DWORD None None.GenerateGroupPolicy(_In_ DWORD dwFlags,_In_ BOOL *pbAbort,_In_ WCHAR *pwszSite,_In_ PRSOP_TARGET pComputerTarget,_In_ PRSOP_TARGET pUserTarget)
void None shlwapi.PathRemoveExtension(_Inout_ LPTSTR pszPath)
void None shlwapi.PathRemoveExtensionW(_Inout_ LPTSTR pszPath)
void None shlwapi.PathRemoveExtensionA(_Inout_ LPTSTR pszPath)
int None wldap32.LdapUnicodeToUTF8(_In_ LPCWSTR lpSrcStr,_In_ int cchSrc,_Out_ LPSTR lpDestStr,_In_ int cchDest)
LONG WINAPI winscard.SCardListReaders(_In_ SCARDCONTEXT hContext,_In_opt_ LPCTSTR mszGroups,_Out_ LPTSTR mszReaders,_Inout_ LPDWORD pcchReaders)
LONG WINAPI winscard.SCardListReadersW(_In_ SCARDCONTEXT hContext,_In_opt_ LPCTSTR mszGroups,_Out_ LPTSTR mszReaders,_Inout_ LPDWORD pcchReaders)
LONG WINAPI winscard.SCardListReadersA(_In_ SCARDCONTEXT hContext,_In_opt_ LPCTSTR mszGroups,_Out_ LPTSTR mszReaders,_Inout_ LPDWORD pcchReaders)
SECURITY_STATUS SEC_Entry secur32.ExportSecurityContext(_In_ PCtxtHandle phContext,_In_ Ulong fFlags,_Out_ PSecBuffer pPackedContext,_Out_opt_ HANDLE *pToken)
NTSTATUS None None.UpdateCredentials(_In_ PSECPKG_PRIMARY_CRED PrimaryCredentials,_In_opt_ PSECPKG_SUPPLEMENTAL_CRED_ARRAY Credentials)
void NTAPI None.LsaUnprotectMemory(_Inout_ PVOID Buffer,_In_ ULONG BufferSize)
NTSTATUS None None.SpSealMessage(_In_ LSA_SEC_HANDLE ContextHandle,_In_ ULONG QualityOfProtection,_Inout_ PSecBufferDesc MessageBuffers,_In_ ULONG MessageSequenceNumber)
void None None.GetDesc([out] D3D11_RASTERIZER_DESC *pDesc)
void None ole32.OleUninitialize(void None None)
PVOID None None.AllocateSharedMemory(_In_ PVOID SharedMem,_In_ ULONG Size)
void None None.GSGetShader([out] ID3D11GeometryShader **ppGeometryShader,[out None None,optional] ID3D11ClassInstance **ppClassInstances,[in None None,out None None,optional] UINT *pNumClassInstances)
UINT None oledlg.OleUIConvert(_In_ LPOLEUICONVERT lpCV)
UINT None oledlg.OleUIConvertW(_In_ LPOLEUICONVERT lpCV)
UINT None oledlg.OleUIConvertA(_In_ LPOLEUICONVERT lpCV)
NTSTATUS None None.DeleteLogonSession(_In_ PLUID LogonId)
int None None.WlxDialogBoxParam(_In_ HANDLE hWlx,_In_ HANDLE hInst,_In_ LPWSTR lpszTemplate,_In_ HWND hwndOwner,_In_ DLGPROC dlgprc,_In_ LPARAM dwInitParam)
HRESULT None oleaut32.OleCreateFontIndirect(_In_ LPFONTDESC lpFontDesc,_In_ REFIID riid,_Out_ LPVOID *lplpvObj)
NTSTATUS WINAPI certpoleng.PstValidate(_In_opt_ PUNICODE_STRING pTargetName,_In_ BOOL bIsClient,_In_opt_ CERT_USAGE_MATCH *pRequestedIssuancePolicy,_In_opt_ HCERTSTORE *phAdditionalCertStore,_In_ PCCERT_CONTEXT pCert,_Out_opt_ GUID *pProvGUID)
LONG WINAPI winscard.SCardListInterfaces(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCard,_Out_ LPGUID pguidInterfaces,_Inout_ LPDWORD pcguidInterfaces)
LONG WINAPI winscard.SCardListInterfacesW(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCard,_Out_ LPGUID pguidInterfaces,_Inout_ LPDWORD pcguidInterfaces)
LONG WINAPI winscard.SCardListInterfacesA(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCard,_Out_ LPGUID pguidInterfaces,_Inout_ LPDWORD pcguidInterfaces)
HRESULT None ole32.OleCreateLinkEx(_In_ LPMONIKER pmkLinkSrc,_In_ REFIID riid,_In_ DWORD dwFlags,_In_ DWORD renderopt,_In_ ULONG cFormats,_In_ DWORD *rgAdvf,_In_ LPFORMATETC rgFormatEtc,_In_ IAdviseSink *lpAdviseSink,_Out_ DWORD *rgdwConnection,_In_ LPOLECLIENTSITE pClientSite,_In_ LPSTORAGE pStg,_Out_ LPVOID *ppvObj)
EXECUTION_STATE WINAPI kernel32.SetThreadExecutionState(_In_ EXECUTION_STATE esFlags)
HRESULT None shlwapi.UrlCreateFromPath(_In_ PCTSTR pszPath,_Out_ PTSTR pszUrl,_Inout_ DWORD *pcchUrl,DWORD dwFlags None)
HRESULT None shlwapi.UrlCreateFromPathW(_In_ PCTSTR pszPath,_Out_ PTSTR pszUrl,_Inout_ DWORD *pcchUrl,DWORD dwFlags None)
HRESULT None shlwapi.UrlCreateFromPathA(_In_ PCTSTR pszPath,_Out_ PTSTR pszUrl,_Inout_ DWORD *pcchUrl,DWORD dwFlags None)
void None None.IID_PPV_ARGS(T **pType None)
HRESULT None None.EnumUndoable([out] IEnumOleUndoUnits **ppEnum)
DWORD APIENTRY None.NPLogonNotify(_In_ PLUID lpLogon,_In_ LPCWSTR lpAuthentInfoType,_In_ LPVOID lpAuthentInfo,_In_ LPCWSTR lpPreviousAuthentInfoType,_In_ LPVOID lpPreviousAuthentInfo,_In_ LPWSTR lpStationName,_In_ LPVOID StationHandle,_Out_ LPWSTR *lpLogonScript)
NTSTATUS None None.SpSaveCredentials(_In_ LSA_SEC_HANDLE CredentialHandle,_In_ PSecBuffer Credentials)
HRESULT None ole32.OleRun(_In_ LPUNKNOWN pUnknown)
BOOL None shlwapi.PathQuoteSpaces(_Inout_ LPTSTR lpsz)
BOOL None shlwapi.PathQuoteSpacesW(_Inout_ LPTSTR lpsz)
BOOL None shlwapi.PathQuoteSpacesA(_Inout_ LPTSTR lpsz)
DWORD WINAPI powrprof.PowerReportThermalEvent(_In_ PTHERMAL_EVENT Event)
DWORD WINAPI winhttp.WinHttpWebSocketReceive(_In_ HINTERNET hWebSocket,_Out_ PVOID pvBuffer,_In_ DWORD dwBufferLength,_Out_ DWORD *pdwBytesRead,_Out_ WINHTTP_WEB_SOCKET_BUFFER_TYPE *peBufferType)
UINT None oledlg.OleUIInsertObject(_In_ LPOLEUIINSERTOBJECT lpIO)
UINT None oledlg.OleUIInsertObjectW(_In_ LPOLEUIINSERTOBJECT lpIO)
UINT None oledlg.OleUIInsertObjectA(_In_ LPOLEUIINSERTOBJECT lpIO)
HRESULT None None.CreateDecodeSwapChainForCompositionSurfaceHandle([in] IUnknown *pDevice,[in None None,optional] HANDLE hSurface,[in] DXGI_DECODE_SWAP_CHAIN_DESC *pDesc,[in] IDXGIResource *pYuvDecodeBuffers,[in None None,optional] IDXGIOutput *pRestrictToOutput,[out] IDXGIDecodeSwapChain **ppSwapChain)
NTSTATUS WINAPI certpoleng.PstGetTrustAnchors(_In_ PUNICODE_STRING pTargetName,_In_ DWORD cCriteria,_In_opt_ PCCERT_SELECT_CRITERIA rgpCriteria,_Out_ PSecPkgContext_IssuerListInfoEx *ppTrustedIssuers)
HINTERNET WINAPI winhttp.WinHttpOpenRequest(_In_ HINTERNET hConnect,_In_ LPCWSTR pwszVerb,_In_ LPCWSTR pwszObjectName,_In_ LPCWSTR pwszVersion,_In_ LPCWSTR pwszReferrer,_In_ LPCWSTR *ppwszAcceptTypes,_In_ DWORD dwFlags)
LONG WINAPI winscard.SCardSetCardTypeProviderName(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCardName,_In_ DWORD dwProviderId,_In_ LPCTSTR szProvider)
LONG WINAPI winscard.SCardSetCardTypeProviderNameW(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCardName,_In_ DWORD dwProviderId,_In_ LPCTSTR szProvider)
LONG WINAPI winscard.SCardSetCardTypeProviderNameA(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCardName,_In_ DWORD dwProviderId,_In_ LPCTSTR szProvider)
HRESULT None ole32.OleQueryLinkFromData(_In_ LPDATAOBJECT pSrcDataObject)
void None None.ExecuteCommandList([in] ID3D11CommandList *pCommandList,BOOL RestoreContextState None)
BOOL None None.WlxIsLogoffOk(_In_ PVOID pWlxContext)
UINT None oledlg.OleUIPasteSpecial(_In_ LPOLEUIPASTESPECIAL lpPS)
UINT None oledlg.OleUIPasteSpecialW(_In_ LPOLEUIPASTESPECIAL lpPS)
UINT None oledlg.OleUIPasteSpecialA(_In_ LPOLEUIPASTESPECIAL lpPS)
BOOL WINAPI winhttp.WinHttpGetIEProxyConfigForCurrentUser(_Inout_ WINHTTP_CURRENT_USER_IE_PROXY_CONFIG *pProxyConfig)
BOOL WINAPI kernel32.TransmitCommChar(_In_ HANDLE hFile,_In_ char cChar)
HRESULT None ole32.OleSaveToStream(_In_ LPPERSISTSTREAM pPStm,_In_ LPSTREAM pStm)
BOOL None shlwapi.PathCompactPath(_In_ HDC hDC,_Inout_ LPTSTR lpszPath,_In_ UINT dx)
BOOL None shlwapi.PathCompactPathW(_In_ HDC hDC,_Inout_ LPTSTR lpszPath,_In_ UINT dx)
BOOL None shlwapi.PathCompactPathA(_In_ HDC hDC,_Inout_ LPTSTR lpszPath,_In_ UINT dx)
USHORT None None.EventDescGetTask([in] PEVENT_DESCRIPTOR EventDescriptor)
HRESULT None shlwapi.UrlCreateFromPath(_In_ PCTSTR pszPath,_Out_ PTSTR pszUrl,_Inout_ DWORD *pcchUrl,DWORD dwFlags None)
HRESULT None shlwapi.UrlCreateFromPathW(_In_ PCTSTR pszPath,_Out_ PTSTR pszUrl,_Inout_ DWORD *pcchUrl,DWORD dwFlags None)
HRESULT None shlwapi.UrlCreateFromPathA(_In_ PCTSTR pszPath,_Out_ PTSTR pszUrl,_Inout_ DWORD *pcchUrl,DWORD dwFlags None)
NTSTATUS WINAPI certpoleng.PstMapCertificate(_In_ PCCERT_CONTEXT pCert,_Out_ LSA_TOKEN_INFORMATION_TYPE *pTokenInformationType,_Out_ PVOID *ppTokenInformation)
HRESULT None ole32.OleSave(_In_ LPPERSISTSTORAGE pPS,_In_ LPSTORAGE pStg,_In_ BOOL fSameAsLoad)
BOOL WINAPI kernel32.EscapeCommFunction(_In_ HANDLE hFile,_In_ DWORD dwFunc)
void None shlwapi.PathUndecorate(_Inout_ LPTSTR pszPath)
void None shlwapi.PathUndecorateW(_Inout_ LPTSTR pszPath)
void None shlwapi.PathUndecorateA(_Inout_ LPTSTR pszPath)
HWND WINAPI user32.CreateDialog(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc)
HWND WINAPI user32.CreateDialogW(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc)
HWND WINAPI user32.CreateDialogA(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc)
SECURITY_STATUS None sspicli.SspiCompareAuthIdentities(_In_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE AuthIdentity1,_In_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE AuthIdentity2,_Out_ PBOOLEAN SameSuppliedUser,_Out_ PBOOLEAN SameSuppliedIdentity)
HRESULT None ole32.OleLockRunning(_In_ LPUNKNOWN pUnknown,_In_ BOOL fLock,_In_ BOOL fLastUnlockCloses)
HRESULT None ole32.OleRegEnumVerbs(_In_ REFCLSID clsid,_Out_ LPENUMOLEVERB *ppenum)
HRESULT None ole32.OleCreateStaticFromData(_In_ LPDATAOBJECT pSrcDataObj,_In_ REFIID iid,_In_ DWORD renderopt,_In_ LPFORMATETC pFormatEtc,_In_ LPOLECLIENTSITE pClientSite,_In_ LPSTORAGE pStg,_Out_ LPVOID *ppvObj)
BOOL WINAPI winhttp.WinHttpGetDefaultProxyConfiguration(_Inout_ WINHTTP_PROXY_INFO *pProxyInfo)
HRESULT None ole32.OleCreateLinkFromDataEx(_In_ LPDATAOBJECT pSrcDataObj,_In_ REFIID riid,_In_ DWORD dwFlags,_In_ DWORD renderopt,_In_ ULONG cFormats,_In_ DWORD *rgAdvf,_In_ LPFORMATETC rgFormatEtc,_In_ IAdviseSink *lpAdviseSink,_Inout_ DWORD *rgdwConnection,_In_ LPOLECLIENTSITE pClientSite,_In_ LPSTORAGE pStg,_Out_ LPVOID *ppvObj)
NTSTATUS None None.RegisterCallback(_In_ ULONG CallbackId,_In_ PLSA_CALLBACK_FUNCTION Callback)
void None None.Begin([in] ID3D11Asynchronous *pAsync)
BOOL None userenv.RegisterGPNotification(_In_ HANDLE hEvent,_In_ BOOL bMachine)
PEVENT_DESCRIPTOR None None.EventDescSetChannel([in] PEVENT_DESCRIPTOR EventDescriptor,[in] UCHAR Channel)
BOOL WINAPI winhttp.WinHttpCrackUrl(_In_ LPCWSTR pwszUrl,_In_ DWORD dwUrlLength,_In_ DWORD dwFlags,_Inout_ LPURL_COMPONENTS lpUrlComponents)
NTSTATUS NTAPI None.ExpandAuthDataForDomain(_In_ PUCHAR UserAuthData,_In_ ULONG UserAuthDataSize,_In_ PVOID Reserved,_Out_ PUCHAR *ExpandedAuthData,_Out_ PULONG ExpandedAuthDataSize)
HRESULT None ole32.OleCreateEmbeddingHelper(_In_ REFCLSID clsid,_In_ LPUNKNOWN pUnkOuter,_In_ DWORD flags,_In_ LPCLASSFACTORY pCF,_In_ REFIID riid,_Out_ LPVOID *lplpObj)
void None None.CSGetSamplers([in] UINT StartSlot,[in] UINT NumSamplers,[out None None,optional] ID3D11SamplerState **ppSamplers)
HRESULT None ole32.OleLoad(_In_ LPSTORAGE pStg,_In_ REFIID riid,_In_ LPOLECLIENTSITE pClientSite,_Out_ LPVOID *ppvObj)
NTSTATUS None None.CallPackage(_In_ PUNICODE_STRING AuthenticationPackage,_In_ PVOID ProtocolSubmitBuffer,_In_ ULONG SubmitBufferLength,_Out_ PVOID *ProtocolReturnBuffer,_Out_ PULONG ReturnBufferLength,_Out_ PNTSTATUS ProtocolStatus)
HINTERNET WINAPI winhttp.WinHttpConnect(_In_ HINTERNET hSession,_In_ LPCWSTR pswzServerName,_In_ INTERNET_PORT nServerPort,_Reserved_ DWORD dwReserved)
BOOL WINAPI kernel32.GetDevicePowerState(_In_ HANDLE hDevice,_Out_ BOOL *pfOn)
NTSTATUS NTAPI advapi32.LsaQueryDomainInformationPolicy(_In_ LSA_HANDLE PolicyHandle,_In_ POLICY_DOMAIN_INFORMATION_CLASS InformationClass,_Out_ PVOID *Buffer)
NTSTATUS None None.SpSaveCredentials(_In_ LSA_SEC_HANDLE CredentialHandle,_In_ PSecBuffer Credentials)
BOOL None None.WlxStartApplication(_In_ PVOID pWlxContext,_In_ PWSTR pszDesktopName,_In_ PVOID pEnvironment,_In_ PWSTR pszCmdLine)
HRESULT None gpedit.ImportRSoPData(_In_ LPOLESTR lpNameSpace,_In_ LPOLESTR lpFileName)
HRESULT None None.RegisterStereoStatusWindow([in] HWND WindowHandle,[in] UINT wMsg,[out] DWORD *pdwCookie)
BOOL None advapi32.CredUnmarshalCredential(_In_ LPCTSTR MarshaledCredential,_Out_ PCRED_MARSHAL_TYPE CredType,_Out_ PVOID *Credential)
BOOL None advapi32.CredUnmarshalCredentialW(_In_ LPCTSTR MarshaledCredential,_Out_ PCRED_MARSHAL_TYPE CredType,_Out_ PVOID *Credential)
BOOL None advapi32.CredUnmarshalCredentialA(_In_ LPCTSTR MarshaledCredential,_Out_ PCRED_MARSHAL_TYPE CredType,_Out_ PVOID *Credential)
HRESULT None userenv.RSoPFileAccessCheck(_In_ LPWSTR pszFileName,_In_ PRSOPTOKEN pRsopToken,_In_ DWORD dwDesiredAccessMask,_Out_ LPDWORD pdwGrantedAccessMask,_Out_ LPBOOL pbAccessStatus)
LPCTSTR None shlwapi.UrlGetLocation(_In_ PCTSTR pszURL)
LPCTSTR None shlwapi.UrlGetLocationW(_In_ PCTSTR pszURL)
LPCTSTR None shlwapi.UrlGetLocationA(_In_ PCTSTR pszURL)
BOOL None shlwapi.PathIsUNC(_In_ LPCTSTR pszPath)
BOOL None shlwapi.PathIsUNCW(_In_ LPCTSTR pszPath)
BOOL None shlwapi.PathIsUNCA(_In_ LPCTSTR pszPath)
NTSTATUS None None.SpSaveCredentials(_In_ LSA_SEC_HANDLE CredentialHandle,_In_ PSecBuffer Credentials)
BOOLEAN WINAPI powrprof.IsPwrSuspendAllowed(void None None)
int __cdecl oledlg.OleUIPromptUser(_In_ int nTemplate,_In_ HWND hwndParent,_In_ ... None)
int __cdecl oledlg.OleUIPromptUserW(_In_ int nTemplate,_In_ HWND hwndParent,_In_ ... None)
int __cdecl oledlg.OleUIPromptUserA(_In_ int nTemplate,_In_ HWND hwndParent,_In_ ... None)
BOOL None advapi32.CredDelete(_In_ LPCTSTR TargetName,_In_ DWORD Type,_In_ DWORD Flags)
BOOL None advapi32.CredDeleteW(_In_ LPCTSTR TargetName,_In_ DWORD Type,_In_ DWORD Flags)
BOOL None advapi32.CredDeleteA(_In_ LPCTSTR TargetName,_In_ DWORD Type,_In_ DWORD Flags)
HRESULT None ole32.OleGetClipboardWithEnterpriseInfo(_Out_ IDATAOBJECT **dataObject,_Out_ PWSTR *dataEnterpriseId,_Out_ PWSTR *sourceDescription,_Out_ PWSTR *targetDescription,_Out_ PWSTR *dataDescription)
SECURITY_STATUS SEC_ENTRY secur32.SaslSetContextOption(_In_ PCtxtHandle ContextHandle,_In_ ULONG Option,_In_ PVOID Value,_In_ ULONG Size)
DWORD None advapi32.GetManagedApplicationCategories(_Out_ DWORD dwReserved,_Out_ APPCATEGORYINFOLIST *pAppCategory)
BOOL WINAPI kernel32.BuildCommDCB(_In_ LPCTSTR lpDef,_Out_ LPDCB lpDCB)
BOOL WINAPI kernel32.BuildCommDCBW(_In_ LPCTSTR lpDef,_Out_ LPDCB lpDCB)
BOOL WINAPI kernel32.BuildCommDCBA(_In_ LPCTSTR lpDef,_Out_ LPDCB lpDCB)
NTSTATUS None None.ConvertAuthDataToToken(_In_ PVOID UserAuthData,_In_ ULONG UserAuthDataSize,_In_ SECURITY_IMPERSONATION_LEVEL ImpersonationLevel,_In_ PTOKEN_SOURCE TokenSource,_In_ SECURITY_LOGON_TYPE LogonType,_In_ PUNICODE_STRING AuthorityName,_Out_ PHANDLE Token,_Out_ PLUID LogonId,_Out_ PUNICODE_STRING AccountName,_Out_ PNTSTATUS SubStatus)
HRESULT None None.GetClassID([out] CLSID *pClassID)
void None None.DrawInstanced([in] UINT VertexCountPerInstance,[in] UINT InstanceCount,[in] UINT StartVertexLocation,[in] UINT StartInstanceLocation)
BOOL None shlwapi.PathIsContentType(_In_ LPCTSTR pszPath,_In_ LPCTSTR pszContentType)
BOOL None shlwapi.PathIsContentTypeW(_In_ LPCTSTR pszPath,_In_ LPCTSTR pszContentType)
BOOL None shlwapi.PathIsContentTypeA(_In_ LPCTSTR pszPath,_In_ LPCTSTR pszContentType)
int None kernel32.MultiByteToWideChar(_In_ UINT CodePage,_In_ DWORD dwFlags,_In_ LPCSTR lpMultiByteStr,_In_ int cbMultiByte,_Out_opt_ LPWSTR lpWideCharStr,_In_ int cchWideChar)
BOOL WINAPI winhttp.WinHttpSetTimeouts(_In_ HINTERNET hInternet,_In_ int dwResolveTimeout,_In_ int dwConnectTimeout,_In_ int dwSendTimeout,_In_ int dwReceiveTimeout)
HRESULT None ole32.OleCreateFromDataEx(_In_ LPDATAOBJECT pSrcDataObj,_In_ REFIID riid,_In_ DWORD dwFlags,_In_ DWORD renderopt,_In_ ULONG cFormats,_In_ DWORD *rgAdvf,_In_ LPFORMATETC rgFormatEtc,_In_ IAdviseSink *lpAdviseSink,_Out_ DWORD *rgdwConnection,_In_ LPOLECLIENTSITE pClientSite,_In_ LPSTORAGE pStg,_Out_ LPVOID *ppvObj)
BOOL None userenv.RefreshPolicyEx(_In_ BOOL bMachine,_In_ DWORD dwOptions)
HRESULT None ole32.OleNoteObjectVisible(_In_ LPUNKNOWN pUnknown,_In_ BOOL fVisible)
DWORD None None.NPGetConnectionPerformance(_In_ LPTSTR lpRemoteName,_Out_ LPNETCONNECTINFOSTRUCT lpNetConnectInfo)
BOOLEAN WINAPI powrprof.GetActivePwrScheme(_Out_ PUINT puiID)
BOOL None oledlg.OleUIUpdateLinks(_In_ LPOLEUILINKCONTAINERW lpOleUILinkCntr,_In_ HWND hwndParent,_In_ LPTSTR lpszTitle,_In_ int cLinks)
BOOL None oledlg.OleUIUpdateLinksW(_In_ LPOLEUILINKCONTAINERW lpOleUILinkCntr,_In_ HWND hwndParent,_In_ LPTSTR lpszTitle,_In_ int cLinks)
BOOL None oledlg.OleUIUpdateLinksA(_In_ LPOLEUILINKCONTAINERW lpOleUILinkCntr,_In_ HWND hwndParent,_In_ LPTSTR lpszTitle,_In_ int cLinks)
DWORD None None.NPFMXGetPermCaps(_In_ LPTSTR lpDriveName)
NTSTATUS None None.LsaApLogonUserEx2(_In_ PLSA_CLIENT_REQUEST ClientRequest,_In_ SECURITY_LOGON_TYPE LogonType,_In_ PVOID ProtocolSubmitBuffer,_In_ PVOID ClientBufferBase,_In_ ULONG SubmitBufferSize,_Out_ PVOID *ProfileBuffer,_Out_ PULONG ProfileBufferSize,_Out_ PLUID LogonId,_Out_ PNTSTATUS SubStatus,_Out_ PLSA_TOKEN_INFORMATION_TYPE TokenInformationType,_Out_ PVOID *TokenInformation,_Out_ PUNICODE_STRING *AccountName,_Out_ PUNICODE_STRING *AuthenticatingAuthority,_Out_ PUNICODE_STRING *MachineName,_Out_ PSECPKG_PRIMARY_CRED PrimaryCredentials,_Out_ PSECPKG_SUPPLEMENTAL_CRED_ARRAY *SupplementalCredentials)
DWORD CALLBACK None.ProcessGroupPolicyEx(_In_ DWORD dwFlags,_In_ HANDLE hToken,_In_ HKEY hKeyRoot,_In_ PGROUP_POLICY_OBJECT pDeletedGPOList,_In_ PGROUP_POLICY_OBJECT pChangedGPOList,_In_ ASYNCCOMPLETIONHANDLE pHandle,_In_ BOOL *pbAbort,_In_ PFNSTATUSMESSAGECALLBACK pStatusCallback,_In_ IWbemServices *pWbemServices,_Out_ HRESULT *pRsopStatus)
HRESULT None shlwapi.PathMatchSpecEx(_In_ LPCTSTR pszFile,_In_ LPCTSTR pszSpec,_In_ DWORD dwFlags)
HRESULT None shlwapi.PathMatchSpecExW(_In_ LPCTSTR pszFile,_In_ LPCTSTR pszSpec,_In_ DWORD dwFlags)
HRESULT None shlwapi.PathMatchSpecExA(_In_ LPCTSTR pszFile,_In_ LPCTSTR pszSpec,_In_ DWORD dwFlags)
HRESULT None ole32.OleSetContainedObject(_In_ LPUNKNOWN pUnknown,_In_ BOOL fContained)
DWORD WINAPI powrprof.PowerUnregisterSuspendResumeNotification(_Inout_ HPOWERNOTIFY RegistrationHandle)
BOOL WINAPI winhttp.WinHttpSetOption(_In_ HINTERNET hInternet,_In_ DWORD dwOption,_In_ LPVOID lpBuffer,_In_ DWORD dwBufferLength)
HRESULT None ole32.CreateOleAdviseHolder(_Out_ LPOLEADVISEHOLDER *ppOAHolder)
void None None.CopyStructureCount([in] ID3D11Buffer *pDstBuffer,[in] UINT DstAlignedByteOffset,[in] ID3D11UnorderedAccessView *pSrcView)
void None None.OMGetBlendState([out None None,optional] ID3D11BlendState **ppBlendState,[out None None,optional] FLOAT BlendFactor[4],[out None None,optional] UINT *pSampleMask)
BOOLEAN WINAPI powrprof.DevicePowerOpen(ULONG Flags None)
DWORD None None.NPGetResourceParent(_In_ LPNETRESOURCE lpNetResource,_Out_ LPVOID lpBuffer,_Inout_ LPDWORD lpcbBuffer)
BOOL None shlwapi.PathIsSystemFolder(_In_opt_ LPCTSTR pszPath,_In_ DWORD dwAttrb)
BOOL None shlwapi.PathIsSystemFolderW(_In_opt_ LPCTSTR pszPath,_In_ DWORD dwAttrb)
BOOL None shlwapi.PathIsSystemFolderA(_In_opt_ LPCTSTR pszPath,_In_ DWORD dwAttrb)
int None None.WlxSwitchDesktopToWinlogon(_In_ HANDLE hWlx)
INT_PTR WINAPI user32.DialogBox(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc)
INT_PTR WINAPI user32.DialogBoxW(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc)
INT_PTR WINAPI user32.DialogBoxA(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc)
BOOL None shlwapi.PathRelativePathTo(_Out_ LPTSTR pszPath,_In_ LPCTSTR pszFrom,_In_ DWORD dwAttrFrom,_In_ LPCTSTR pszTo,_In_ DWORD dwAttrTo)
BOOL None shlwapi.PathRelativePathToW(_Out_ LPTSTR pszPath,_In_ LPCTSTR pszFrom,_In_ DWORD dwAttrFrom,_In_ LPCTSTR pszTo,_In_ DWORD dwAttrTo)
BOOL None shlwapi.PathRelativePathToA(_Out_ LPTSTR pszPath,_In_ LPCTSTR pszFrom,_In_ DWORD dwAttrFrom,_In_ LPCTSTR pszTo,_In_ DWORD dwAttrTo)
HRESULT None shlwapi.UrlEscapeSpaces(_In_ LPCTSTR pszURL,_Out_ LPTSTR pszEscaped,_Out_ LPDWORD pcchEscaped)
HGLOBAL None ole32.OleMetafilePictFromIconAndLabel(_In_ HICON hIcon,_In_ LPOLESTR lpszLabel,_In_ LPOLESTR lpszSourceFile,_In_ UINT iIconIndex)
BOOL WINAPI winhttp.WinHttpCloseHandle(_In_ HINTERNET hInternet)
DWORD None None.NPAddConnection3(_In_ HWND hwndOwner,_In_ LPNETRESOURCE lpNetResource,_In_ LPTSTR lpPassword,_In_ LPTSTR lpUserName,_In_ DWORD dwFlags)
HRESULT None ole32.DoDragDrop(_In_ LPDATAOBJECT pDataObj,_In_ LPDROPSOURCE pDropSource,_In_ DWORD dwOKEffects,_Out_ LPDWORD pdwEffect)
HRESULT None shlwapi.UrlUnescapeInPlace(_Inout_ LPTSTR pszURL,_In_ DWORD dwFlags)
HRESULT None ole32.OleSetMenuDescriptor(_In_ HOLEMENU holemenu,_In_ HWND hwndFrame,_In_ HWND hwndActiveObject,_In_ LPOLEINPLACEFRAME lpFrame,_In_ LPOLEINPLACEACTIVEOBJECT lpActiveObj)
PTSTR None shlwapi.PathFindNextComponent(_In_ PTSTR pszPath)
PTSTR None shlwapi.PathFindNextComponentW(_In_ PTSTR pszPath)
PTSTR None shlwapi.PathFindNextComponentA(_In_ PTSTR pszPath)
BOOLEAN WINAPI powrprof.IsPwrShutdownAllowed(void None None)
HRESULT None None.GetDisplaySurfaceData1([in] IDXGIResource *pDestination)
HRESULT None ole32.OleQueryCreateFromData(_In_ LPDATAOBJECT pSrcDataObject)
BOOL WINAPI winhttp.WinHttpReceiveResponse(_In_ HINTERNET hRequest,_Reserved_ LPVOID lpReserved)
BOOL None shlwapi.PathIsRoot(_In_ LPCTSTR pPath)
BOOL None shlwapi.PathIsRootW(_In_ LPCTSTR pPath)
BOOL None shlwapi.PathIsRootA(_In_ LPCTSTR pPath)
HRESULT None ole32.OleFlushClipboard(void None None)
SECURITY_STATUS None credui.SspiGetCredUIContext(_In_ HANDLE ContextHandle,_In_ GUID *CredType,_In_ LUID *LogonId,_Out_ PSEC_WINNT_CREDUI_CONTEXT_VECTOR *CredUIContexts,_Out_ HANDLE *TokenHandle)
void None None.IASetPrimitiveTopology([in] D3D11_PRIMITIVE_TOPOLOGY Topology)
BOOL WINAPI winhttp.WinHttpReadData(_In_ HINTERNET hRequest,_Out_ LPVOID lpBuffer,_In_ DWORD dwNumberOfBytesToRead,_Out_ LPDWORD lpdwNumberOfBytesRead)
SECURITY_STATUS None credui.SspiPromptForCredentials(_In_ PCTSTR pszTargetName,_In_ PCREDUI_INFOW pUiInfo,_In_ DWORD dwAuthError,_In_ PCTSTR pszPackage,_In_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE pInputAuthIdentity,_Out_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE *ppAuthIdentity,_Inout_opt_ BOOL *pfSave,_In_ DWORD dwFlags)
SECURITY_STATUS None credui.SspiPromptForCredentialsW(_In_ PCTSTR pszTargetName,_In_ PCREDUI_INFOW pUiInfo,_In_ DWORD dwAuthError,_In_ PCTSTR pszPackage,_In_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE pInputAuthIdentity,_Out_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE *ppAuthIdentity,_Inout_opt_ BOOL *pfSave,_In_ DWORD dwFlags)
SECURITY_STATUS None credui.SspiPromptForCredentialsA(_In_ PCTSTR pszTargetName,_In_ PCREDUI_INFOW pUiInfo,_In_ DWORD dwAuthError,_In_ PCTSTR pszPackage,_In_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE pInputAuthIdentity,_Out_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE *ppAuthIdentity,_Inout_opt_ BOOL *pfSave,_In_ DWORD dwFlags)
HRESULT None ole32.OleDraw(_In_ LPUNKNOWN pUnknown,_In_ DWORD dwAspect,_In_ HDC hdcDraw,_In_ LPCRECT lprcBounds)
HRESULT None None.Map([out] DXGI_MAPPED_RECT *pLockedRect,UINT MapFlags None)
LONG WINAPI winscard.SCardAddReaderToGroup(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReaderName,_In_ LPCTSTR szGroupName)
LONG WINAPI winscard.SCardAddReaderToGroupW(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReaderName,_In_ LPCTSTR szGroupName)
LONG WINAPI winscard.SCardAddReaderToGroupA(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReaderName,_In_ LPCTSTR szGroupName)
DWORD None mpr.WNetAddConnection3(_In_ HWND hwndOwner,_In_ LPNETRESOURCE lpNetResource,_In_ LPTSTR lpPassword,_In_ LPTSTR lpUserName,_In_ DWORD dwFlags)
DWORD None mpr.WNetAddConnection3W(_In_ HWND hwndOwner,_In_ LPNETRESOURCE lpNetResource,_In_ LPTSTR lpPassword,_In_ LPTSTR lpUserName,_In_ DWORD dwFlags)
DWORD None mpr.WNetAddConnection3A(_In_ HWND hwndOwner,_In_ LPNETRESOURCE lpNetResource,_In_ LPTSTR lpPassword,_In_ LPTSTR lpUserName,_In_ DWORD dwFlags)
void None None.PSGetShaderResources([in] UINT StartSlot,[in] UINT NumViews,[out None None,optional] ID3D11ShaderResourceView **ppShaderResourceViews)
DWORD WINAPI credui.CredUIPromptForCredentials(_In_opt_ PCREDUI_INFO pUiInfo,_In_ PCTSTR pszTargetName,_In_ PCtxtHandle Reserved,_In_opt_ DWORD dwAuthError,_Inout_ PCTSTR pszUserName,_In_ ULONG ulUserNameMaxChars,_Inout_ PCTSTR pszPassword,_In_ ULONG ulPasswordMaxChars,_Inout_ PBOOL pfSave,_In_ DWORD dwFlags)
DWORD WINAPI credui.CredUIPromptForCredentialsW(_In_opt_ PCREDUI_INFO pUiInfo,_In_ PCTSTR pszTargetName,_In_ PCtxtHandle Reserved,_In_opt_ DWORD dwAuthError,_Inout_ PCTSTR pszUserName,_In_ ULONG ulUserNameMaxChars,_Inout_ PCTSTR pszPassword,_In_ ULONG ulPasswordMaxChars,_Inout_ PBOOL pfSave,_In_ DWORD dwFlags)
DWORD WINAPI credui.CredUIPromptForCredentialsA(_In_opt_ PCREDUI_INFO pUiInfo,_In_ PCTSTR pszTargetName,_In_ PCtxtHandle Reserved,_In_opt_ DWORD dwAuthError,_Inout_ PCTSTR pszUserName,_In_ ULONG ulUserNameMaxChars,_Inout_ PCTSTR pszPassword,_In_ ULONG ulPasswordMaxChars,_Inout_ PBOOL pfSave,_In_ DWORD dwFlags)
void None None.Dispatch([in] UINT ThreadGroupCountX,[in] UINT ThreadGroupCountY,[in] UINT ThreadGroupCountZ)
UINT None oledlg.OleUIObjectProperties(_In_ LPOLEUIOBJECTPROPS lpOF)
UINT None oledlg.OleUIObjectPropertiesW(_In_ LPOLEUIOBJECTPROPS lpOF)
UINT None oledlg.OleUIObjectPropertiesA(_In_ LPOLEUIOBJECTPROPS lpOF)
HRESULT None userenv.RSoPAccessCheckByType(_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_ PSID pPrincipalSelfSid,_In_ PRSOPTOKEN pRsopToken,_In_ DWORD dwDesiredAccessMask,_In_ POBJECT_TYPE_LIST pObjectTypeList,_In_ DWORD ObjectTypeListLength,_In_ PGENERIC_MAPPING pGenericMapping,_In_ PPRIVILEGE_SET pPrivilegeSet,_In_ LPDWORD pdwPrivilegeSetLength,_Out_ LPDWORD pdwGrantedAccessMask,_Out_ LPBOOL pbAccessStatus)
BOOL WINAPI winhttp.WinHttpDetectAutoProxyConfigUrl(_In_ DWORD dwAutoDetectFlags,_Out_ LPWSTR *ppwszAutoConfigUrl)
UINT None oledlg.OleUIChangeIcon(_In_ LPOLEUICHANGEICON lpCI)
UINT None oledlg.OleUIChangeIconW(_In_ LPOLEUICHANGEICON lpCI)
UINT None oledlg.OleUIChangeIconA(_In_ LPOLEUICHANGEICON lpCI)
LONG WINAPI winscard.SCardGetProviderId(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCard,_Out_ LPGUID pguidProviderId)
LONG WINAPI winscard.SCardGetProviderIdW(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCard,_Out_ LPGUID pguidProviderId)
LONG WINAPI winscard.SCardGetProviderIdA(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCard,_Out_ LPGUID pguidProviderId)
HRESULT None None.SetMatrixTransform(const DXGI_MATRIX_3X2_F *pMatrix)
void None None.HSGetConstantBuffers([in] UINT StartSlot,[in] UINT NumBuffers,[out None None,optional] ID3D11Buffer **ppConstantBuffers)
UCHAR None None.EventDescGetOpcode([in] PEVENT_DESCRIPTOR EventDescriptor)
HRESULT None combase.RoRegisterActivationFactories(_In_ HSTRING *activatableClassIds,_In_ PFNGETACTIVATIONFACTORY *activationFactoryCallbacks,_In_ UINT32 count,_Out_ RO_REGISTRATION_COOKIE *cookie)
HRESULT None urlmon.CreateFormatEnumerator(_In_ UINT cfmtetc,_In_ FORMATETC *rgfmtetc,_Out_ IEnumFORMATETC **ppenumfmtetc)
HRESULT None ole32.OleRegEnumFormatEtc(_In_ REFCLSID clsid,_In_ DWORD dwDirection,_Out_ LPENUMFORMATETC *ppenum)
HRESULT None None.GetData([in] ID3D11Asynchronous *pAsync,[out None None,optional] void *pData,[in] UINT DataSize,[in] UINT GetDataFlags)
SECURITY_STATUS None sspicli.SspiEncodeStringsAsAuthIdentity(_In_ PCWSTR pszUserName,_In_ PCWSTR pszDomainName,_In_ PCWSTR pszPackedCredentialsString,_Out_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE *ppAuthIdentity)
void None None.PSGetConstantBuffers([in] UINT StartSlot,[in] UINT NumBuffers,[out None None,optional] ID3D11Buffer **ppConstantBuffers)
HRESULT None dxgidebug.PushDenyAllRetrievalFilter([in] DXGI_DEBUG_ID Producer)
BOOLEAN WINAPI powrprof.DeletePwrScheme(_In_ UINT uiIndex)
HRESULT None None.GetGammaControlCapabilities([out] DXGI_GAMMA_CONTROL_CAPABILITIES *pGammaCaps)
HRESULT None None.GetDisplayModeList1(DXGI_FORMAT EnumFormat None,UINT Flags None,[in None None,out] UINT *pNumModes,[out None None,optional] DXGI_MODE_DESC1 *pDesc)
BOOL WINAPI winhttp.WinHttpGetProxyForUrl(_In_ HINTERNET hSession,_In_ LPCWSTR lpcwszUrl,_In_ WINHTTP_AUTOPROXY_OPTIONS *pAutoProxyOptions,_Out_ WINHTTP_PROXY_INFO *pProxyInfo)
void None None.IASetIndexBuffer([in None None,optional] ID3D11Buffer *pIndexBuffer,[in] DXGI_FORMAT Format,[in] UINT Offset)
BOOL WINAPI winhttp.WinHttpCreateUrl(_In_ LPURL_COMPONENTS lpUrlComponents,_In_ DWORD dwFlags,_Out_ LPWSTR pwszUrl,_Inout_ LPDWORD lpdwUrlLength)
void None None.DispatchIndirect([in] ID3D11Buffer *pBufferForArgs,[in] UINT AlignedByteOffsetForArgs)
HRESULT None None.EnumVerbs([out] IEnumOLEVERB **ppEnumOleVerb)
NTSTATUS WINAPI None.Msv1_0SubAuthenticationRoutineEx(_In_ NETLOGON_LOGON_INFO_CLASS LogonLevel,_In_ PVOID LogonInformation,_In_ ULONG Flags,_In_ PUSER_ALL_INFORMATION UserAll,_In_ SAM_HANDLE UserHandle,_Inout_ PMSV1_0_VALIDATION_INFO ValidationInfo,_Out_ PULONG ActionsPerformed)
BOOL WINAPI kernel32.GetCommTimeouts(_In_ HANDLE hFile,_Out_ LPCOMMTIMEOUTS lpCommTimeouts)
void None None.HSGetConstantBuffers([in] UINT StartSlot,[in] UINT NumBuffers,[out None None,optional] ID3D11Buffer **ppConstantBuffers)
void None None.GSGetSamplers([in] UINT StartSlot,[in] UINT NumSamplers,[out None None,optional] ID3D11SamplerState **ppSamplers)
void None None.GSGetShaderResources([in] UINT StartSlot,[in] UINT NumViews,[out None None,optional] ID3D11ShaderResourceView **ppShaderResourceViews)
HRESULT None None.GetSourceSize([out] UINT *pWidth,[out] UINT *pHeight)
HRESULT None None.SetSite([in] IUnknown *pUnkSite)
HRESULT None ole32.OleCreateFromFileEx(_In_ REFCLSID rclsid,_In_ LPCOLESTR lpszFileName,_In_ REFIID riid,_In_ DWORD dwFlags,_In_ DWORD renderopt,_In_ ULONG cFormats,_In_ DWORD *rgAdvf,_In_ LPFORMATETC rgFormatEtc,_In_ IAdviseSink *lpAdviseSink,_Out_ DWORD *rgdwConnection,_In_ LPOLECLIENTSITE pClientSite,_In_ LPSTORAGE pStg,_Out_ LPVOID *ppvObj)
HRESULT None None.GetDesc([out] DXGI_ADAPTER_DESC *pDesc)
HRESULT None ole32.OleSaveToStream(_In_ LPPERSISTSTREAM pPStm,_In_ LPSTREAM pStm)
PEVENT_DESCRIPTOR None None.EventDescSetVersion([in] PEVENT_DESCRIPTOR EventDescriptor,[in] UCHAR Version)
void None None.CSGetUnorderedAccessViews([in] UINT StartSlot,[in] UINT NumUAVs,[out None None,optional] ID3D11UnorderedAccessView **ppUnorderedAccessViews)
BOOL WINAPI user32.SetDlgItemText(_In_ HWND hDlg,_In_ int nIDDlgItem,_In_ LPCTSTR lpString)
BOOL WINAPI user32.SetDlgItemTextW(_In_ HWND hDlg,_In_ int nIDDlgItem,_In_ LPCTSTR lpString)
BOOL WINAPI user32.SetDlgItemTextA(_In_ HWND hDlg,_In_ int nIDDlgItem,_In_ LPCTSTR lpString)
BOOL None userenv.UnregisterGPNotification(_In_ HANDLE hEvent)
BOOL WINAPI kernel32.WaitCommEvent(_In_ HANDLE hFile,_Out_ LPDWORD lpEvtMask,_In_ LPOVERLAPPED lpOverlapped)
BOOL WINAPI winhttp.WinHttpQueryHeaders(_In_ HINTERNET hRequest,_In_ DWORD dwInfoLevel,_In_opt_ LPCWSTR pwszName,_Out_ LPVOID lpBuffer,_Inout_ LPDWORD lpdwBufferLength,_Inout_ LPDWORD lpdwIndex)
INT_PTR WINAPI user32.DialogBox(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc)
INT_PTR WINAPI user32.DialogBoxW(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc)
INT_PTR WINAPI user32.DialogBoxA(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc)
HRESULT None ole32.OleLoadFromStream(_In_ LPSTREAM pStm,_In_ REFIID iidInterface,_Out_ LPVOID *ppvObj)
DWORD None mpr.MultinetGetConnectionPerformance(_In_ LPNETRESOURCE lpNetResource,_Out_ LPNETCONNECTINFOSTRUCT lpNetConnectInfoStruct)
DWORD None mpr.MultinetGetConnectionPerformanceW(_In_ LPNETRESOURCE lpNetResource,_Out_ LPNETCONNECTINFOSTRUCT lpNetConnectInfoStruct)
DWORD None mpr.MultinetGetConnectionPerformanceA(_In_ LPNETRESOURCE lpNetResource,_Out_ LPNETCONNECTINFOSTRUCT lpNetConnectInfoStruct)
void None None.CopyResource([in] ID3D11Resource *pDstResource,[in] ID3D11Resource *pSrcResource)
HINTERNET WINAPI winhttp.WinHttpOpen(_In_opt_ LPCWSTR pwszUserAgent,_In_ DWORD dwAccessType,_In_ LPCWSTR pwszProxyName,_In_ LPCWSTR pwszProxyBypass,_In_ DWORD dwFlags)
BOOL WINAPI winhttp.WinHttpSendRequest(_In_ HINTERNET hRequest,_In_opt_ LPCWSTR pwszHeaders,_In_ DWORD dwHeadersLength,_In_opt_ LPVOID lpOptional,_In_ DWORD dwOptionalLength,_In_ DWORD dwTotalLength,_In_ DWORD_PTR dwContext)
BOOL WINUSERAPI user32.UnregisterSuspendResumeNotification(_Inout_ HPOWERNOTIFY RegistrationHandle)
SECURITY_STATUS WINAPI ncrypt.SslDecryptPacket(_In_ NCRYPT_PROV_HANDLE hSslProvider,_Inout_ NCRYPT_KEY_HANDLE hKey,_In_ PBYTE *pbInput,_In_ DWORD cbInput,_Out_ PBYTE pbOutput,_In_ DWORD cbOutput,_Out_ DWORD *pcbResult,_In_ ULONGLONG SequenceNumber,_In_ DWORD dwFlags)
HRESULT None oleaut32.OleLoadPictureEx(_In_ LPSTREAM lpstream,_In_ LONG lSize,_In_ BOOL fRunmode,_In_ REFIID riid,_In_ DWORD xSizeDesired,_In_ DWORD ySizeDesired,_In_ DWORD dwFlags,_Out_ LPVOID *lplpvObj)
BOOL WINAPI winhttp.WinHttpWriteData(_In_ HINTERNET hRequest,_In_ LPCVOID lpBuffer,_In_ DWORD dwNumberOfBytesToWrite,_Out_ LPDWORD lpdwNumberOfBytesWritten)
DWORD None winhttp.WinHttpGetProxyForUrlEx(_In_ HINTERNET hResolver,_In_ PCWSTR pcwszUrl,_In_ WINHTTP_AUTOPROXY_OPTIONS *pAutoProxyOptions,_In_ DWORD_PTR pContext)
void None None.Draw([in] UINT VertexCount,[in] UINT StartVertexLocation)
HRESULT None None.SetMenu([in] HMENU hmenuShared,[in] HOLEMENU holemenu,[in] HWND hwndActiveObject)
HRESULT None None.TranslateAccelerator([in] LPMSG lpmsg,[in] WORD wID)
void None None.VSGetShader([out] ID3D11VertexShader **ppVertexShader,[out None None,optional] ID3D11ClassInstance **ppClassInstances,[in None None,out None None,optional] UINT *pNumClassInstances)
void None None.HSGetSamplers([in] UINT StartSlot,[in] UINT NumSamplers,[out None None,optional] ID3D11SamplerState **ppSamplers)
HINTERNET WINAPI winhttp.WinHttpWebSocketCompleteUpgrade(_In_ HINTERNET hRequest,_In_opt_ DWORD_PTR pContext)
PEVENT_DESCRIPTOR None None.EventDescOrKeyword([in] PEVENT_DESCRIPTOR EventDescriptor,[in] ULONGLONG Keyword)
HRESULT None ole32.RegisterDragDrop(_In_ HWND hwnd,_In_ LPDROPTARGET pDropTarget)
HRESULT None ole32.OleRegEnumFormatEtc(_In_ REFCLSID clsid,_In_ DWORD dwDirection,_Out_ LPENUMFORMATETC *ppenum)
void None None.DrawIndexedInstancedIndirect([in] ID3D11Buffer *pBufferForArgs,[in] UINT AlignedByteOffsetForArgs)
HRESULT None None.SetDisplaySurface([in] IDXGISurface *pScanoutSurface)
DWORD None None.StatusMessageCallback(_In_ BOOL bVerbose,_In_ LPWSTR lpMessage)
INT_PTR WINAPI user32.DialogBoxIndirect(_In_opt_ HINSTANCE hInstance,_In_ LPCDLGTEMPLATE lpTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc)
INT_PTR WINAPI user32.DialogBoxIndirectW(_In_opt_ HINSTANCE hInstance,_In_ LPCDLGTEMPLATE lpTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc)
INT_PTR WINAPI user32.DialogBoxIndirectA(_In_opt_ HINSTANCE hInstance,_In_ LPCDLGTEMPLATE lpTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc)
void None None.OMSetDepthStencilState([in None None,optional] ID3D11DepthStencilState *pDepthStencilState,[in] UINT StencilRef)
HRESULT None None.Map([in] ID3D11Resource *pResource,[in] UINT Subresource,[in] D3D11_MAP MapType,[in] UINT MapFlags,[out None None,optional] D3D11_MAPPED_SUBRESOURCE *pMappedResource)
void None None.IASetInputLayout([in None None,optional] ID3D11InputLayout *pInputLayout)
void None None.VSGetSamplers([in] UINT StartSlot,[in] UINT NumSamplers,[out None None,optional] ID3D11SamplerState **ppSamplers)
void None None.VSGetConstantBuffers([in] UINT StartSlot,[in] UINT NumBuffers,[out None None,optional] ID3D11Buffer **ppConstantBuffers)
void None None.DSGetConstantBuffers([in] UINT StartSlot,[in] UINT NumBuffers,[out None None,optional] ID3D11Buffer **ppConstantBuffers)
BOOL WINAPI winhttp.WinHttpTimeToSystemTime(_In_ LPCWSTR pwszTime,_Out_ SYSTEMTIME *pst)
UCHAR None None.EventDescGetOpcode([in] PEVENT_DESCRIPTOR EventDescriptor)
void None None.DrawInstancedIndirect([in] ID3D11Buffer *pBufferForArgs,[in] UINT AlignedByteOffsetForArgs)
HRESULT None None.SetMoniker([in] DWORD dwWhichMoniker,[in] IMoniker *pmk)
void None None.GenerateMips([in] ID3D11ShaderResourceView *pShaderResourceView)
PEVENT_DESCRIPTOR None None.EventDescSetOpcode([in] PEVENT_DESCRIPTOR EventDescriptor,[in] UCHAR Opcode)
void None None.GenerateMips([in] ID3D11ShaderResourceView *pShaderResourceView)
void None None.DrawIndexedInstanced([in] UINT IndexCountPerInstance,[in] UINT InstanceCount,[in] UINT StartIndexLocation,[in] INT BaseVertexLocation,[in] UINT StartInstanceLocation)
HRESULT None shlwapi.UrlCreateFromPath(_In_ PCTSTR pszPath,_Out_ PTSTR pszUrl,_Inout_ DWORD *pcchUrl,DWORD dwFlags None)
HRESULT None shlwapi.UrlCreateFromPathW(_In_ PCTSTR pszPath,_Out_ PTSTR pszUrl,_Inout_ DWORD *pcchUrl,DWORD dwFlags None)
HRESULT None shlwapi.UrlCreateFromPathA(_In_ PCTSTR pszPath,_Out_ PTSTR pszUrl,_Inout_ DWORD *pcchUrl,DWORD dwFlags None)
LONG WINAPI winscard.SCardGetCardTypeProviderName(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCardName,_In_ DWORD dwProviderId,_Out_ LPTSTR szProvider,_Inout_ LPDWORD pcchProvider)
LONG WINAPI winscard.SCardGetCardTypeProviderNameW(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCardName,_In_ DWORD dwProviderId,_Out_ LPTSTR szProvider,_Inout_ LPDWORD pcchProvider)
LONG WINAPI winscard.SCardGetCardTypeProviderNameA(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCardName,_In_ DWORD dwProviderId,_Out_ LPTSTR szProvider,_Inout_ LPDWORD pcchProvider)
HANDLE None userenv.EnterCriticalPolicySection(_In_ BOOL bMachine)
BOOL None userenv.UnregisterGPNotification(_In_ HANDLE hEvent)
HRESULT None None.EnableModeless([in] BOOL fEnable)
INT_PTR CALLBACK None.DialogProc(_In_ HWND hwndDlg,_In_ UINT uMsg,_In_ WPARAM wParam,_In_ LPARAM lParam)
DWORD WINAPI winhttp.WinHttpWebSocketQueryCloseStatus(_In_ HINTERNET hWebSocket,_Out_ USHORT *pusStatus,_Out_ PVOID pvReason,_In_ DWORD dwReasonLength,_Out_ DWORD *pdwReasonLengthConsumed)
void None dxgidebug.ClearStorageFilter([in] DXGI_DEBUG_ID Producer)
void None None.HSGetShaderResources([in] UINT StartSlot,[in] UINT NumViews,[out None None,optional] ID3D11ShaderResourceView **ppShaderResourceViews)
void None None.OMGetDepthStencilState([out None None,optional] ID3D11DepthStencilState **ppDepthStencilState,[out None None,optional] UINT *pStencilRef)
void None None.DSGetSamplers([in] UINT StartSlot,[in] UINT NumSamplers,[out None None,optional] ID3D11SamplerState **ppSamplers)
HRESULT None ole32.OleSave(_In_ LPPERSISTSTORAGE pPS,_In_ LPSTORAGE pStg,_In_ BOOL fSameAsLoad)
void None None.Unmap([in] ID3D11Resource *pResource,[in] UINT Subresource)
NTSTATUS NTAPI None.SpQueryMetaDataFn(_In_ LSA_SEC_HANDLE CredentialHandle,_In_opt_ PUNICODE_STRING TargetName,_In_ ULONG ContextRequirements,_Out_ ULONG MetaDataLength,_Out_ PUCHAR MetaData,_Inout_ PLSA_SEC_HANDLE ContextHandle)
DWORD None userenv.ProcessGroupPolicyCompleted(_In_ REFGPEXTENSIONID extensionId,_In_ ASYNCCOMPLETIONHANDLE pAsyncHandle,_In_ DWORD dwStatus)
DWORD None None.NPFormatNetworkName(_In_ LPTSTR lpRemoteName,_Out_ LPTSTR lpFormattedName,_Inout_ LPDWORD lpnLength,_In_ DWORD dwFlags,_In_ DWORD dwAveCharPerLine)
HRESULT None None.GetMaximumFrameLatency([out] UINT *pMaxLatency)
void None None.End([in] ID3D11Asynchronous *pAsync)
BOOL WINAPI kernel32.CommConfigDialog(_In_ LPCTSTR lpszName,_In_ HWND hWnd,_Inout_ LPCOMMCONFIG lpCC)
BOOL WINAPI kernel32.CommConfigDialogW(_In_ LPCTSTR lpszName,_In_ HWND hWnd,_Inout_ LPCOMMCONFIG lpCC)
BOOL WINAPI kernel32.CommConfigDialogA(_In_ LPCTSTR lpszName,_In_ HWND hWnd,_Inout_ LPCOMMCONFIG lpCC)
void None None.IAGetIndexBuffer([out None None,optional] ID3D11Buffer **pIndexBuffer,[out None None,optional] DXGI_FORMAT *Format,[out None None,optional] UINT *Offset)
DWORD None None.NPFMXEditPerm(_In_ LPTSTR lpDriveName,_In_ HWND hwndFMX,_In_ DWORD nType)
void None None.GetDesc([out] DXGI_OUTDUPL_DESC *pDesc)
void None None.PSGetSamplers([in] UINT StartSlot,[in] UINT NumSamplers,[out None None,optional] ID3D11SamplerState **ppSamplers)
void None None.HSGetShader([out] ID3D11HullShader **ppHullShader,[out None None,optional] ID3D11ClassInstance **ppClassInstances,[in None None,out None None,optional] UINT *pNumClassInstances)
void None None.SetResourceMinLOD([in] ID3D11Resource *pResource,FLOAT MinLOD None)
BOOL WINAPI kernel32.PurgeComm(_In_ HANDLE hFile,_In_ DWORD dwFlags)
HRESULT None mfplat.MFCreateAMMediaTypeFromMFMediaType(IMFMediaType *pMFType None,GUID guidFormatBlockType None,AM_MEDIA_TYPE **ppAMType None)
HRESULT None None.Advise([in] IAdviseSink *pAdvSink,[out] DWORD *pdwConnection)
void None None.RSGetScissorRects([in None None,out] UINT *pNumRects,[out None None,optional] D3D11_RECT *pRects)
SECURITY_STATUS None credui.SspiPromptForCredentials(_In_ PCTSTR pszTargetName,_In_ PCREDUI_INFOW pUiInfo,_In_ DWORD dwAuthError,_In_ PCTSTR pszPackage,_In_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE pInputAuthIdentity,_Out_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE *ppAuthIdentity,_Inout_opt_ BOOL *pfSave,_In_ DWORD dwFlags)
SECURITY_STATUS None credui.SspiPromptForCredentialsW(_In_ PCTSTR pszTargetName,_In_ PCREDUI_INFOW pUiInfo,_In_ DWORD dwAuthError,_In_ PCTSTR pszPackage,_In_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE pInputAuthIdentity,_Out_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE *ppAuthIdentity,_Inout_opt_ BOOL *pfSave,_In_ DWORD dwFlags)
SECURITY_STATUS None credui.SspiPromptForCredentialsA(_In_ PCTSTR pszTargetName,_In_ PCREDUI_INFOW pUiInfo,_In_ DWORD dwAuthError,_In_ PCTSTR pszPackage,_In_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE pInputAuthIdentity,_Out_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE *ppAuthIdentity,_Inout_opt_ BOOL *pfSave,_In_ DWORD dwFlags)
SECURITY_STATUS SEC_Entry secur32.AcquireCredentialsHandle(_In_ SEC_CHAR *pszPrincipal,_In_ SEC_CHAR *pszPackage,_In_ ULONG fCredentialUse,_In_ PLUID pvLogonID,_In_ PVOID pAuthData,_In_ SEC_GET_KEY_FN pGetKeyFn,_In_ PVOID pvGetKeyArgument,_Out_ PCredHandle phCredential,_Out_ PTimeStamp ptsExpiry)
SECURITY_STATUS SEC_Entry secur32.AcquireCredentialsHandleW(_In_ SEC_CHAR *pszPrincipal,_In_ SEC_CHAR *pszPackage,_In_ ULONG fCredentialUse,_In_ PLUID pvLogonID,_In_ PVOID pAuthData,_In_ SEC_GET_KEY_FN pGetKeyFn,_In_ PVOID pvGetKeyArgument,_Out_ PCredHandle phCredential,_Out_ PTimeStamp ptsExpiry)
SECURITY_STATUS SEC_Entry secur32.AcquireCredentialsHandleA(_In_ SEC_CHAR *pszPrincipal,_In_ SEC_CHAR *pszPackage,_In_ ULONG fCredentialUse,_In_ PLUID pvLogonID,_In_ PVOID pAuthData,_In_ SEC_GET_KEY_FN pGetKeyFn,_In_ PVOID pvGetKeyArgument,_Out_ PCredHandle phCredential,_Out_ PTimeStamp ptsExpiry)
void None dxgidebug.PopStorageFilter([in] DXGI_DEBUG_ID Producer)
void None None.IAGetVertexBuffers([in] UINT StartSlot,[in] UINT NumBuffers,[out None None,optional] ID3D11Buffer **ppVertexBuffers,[out None None,optional] UINT *pStrides,[out None None,optional] UINT *pOffsets)
BOOL WINAPI None.GetConsoleScreenBufferInfoEx(_In_ HANDLE hConsoleOutput,_Out_ PCONSOLE_SCREEN_BUFFER_INFOEX lpConsoleScreenBufferInfoEx)
HRESULT None shlwapi.SHReleaseThreadRef(void None None)
PEVENT_DESCRIPTOR None None.EventDescSetTask([in] PEVENT_DESCRIPTOR EventDescriptor,[in] USHORT Task)
HRESULT None ole32.OleQueryCreateFromData(_In_ LPDATAOBJECT pSrcDataObject)
BOOL WINAPI winhttp.WinHttpWriteData(_In_ HINTERNET hRequest,_In_ LPCVOID lpBuffer,_In_ DWORD dwNumberOfBytesToWrite,_Out_ LPDWORD lpdwNumberOfBytesWritten)
DWORD None mpr.WNetRestoreConnectionW(_In_ HWND hwndParent,_In_ LPCWSTR lpDevice,BOOL fUseUI None)
void None None.DSGetShaderResources([in] UINT StartSlot,[in] UINT NumViews,[out None None,optional] ID3D11ShaderResourceView **ppShaderResourceViews)
BOOL None userenv.FreeGPOList(_In_ PGROUP_POLICY_OBJECT pGPOList)
BOOL None userenv.FreeGPOListW(_In_ PGROUP_POLICY_OBJECT pGPOList)
BOOL None userenv.FreeGPOListA(_In_ PGROUP_POLICY_OBJECT pGPOList)
HWND WINAPI user32.GetDlgItem(_In_opt_ HWND hDlg,_In_ int nIDDlgItem)
BOOL WINAPI winhttp.WinHttpAddRequestHeaders(_In_ HINTERNET hRequest,_In_ LPCWSTR pwszHeaders,_In_ DWORD dwHeadersLength,_In_ DWORD dwModifiers)
NTSTATUS None secur32.LsaDeregisterLogonProcess(_In_ HANDLE LsaHandle)
BOOL WINAPI user32.SetDlgItemText(_In_ HWND hDlg,_In_ int nIDDlgItem,_In_ LPCTSTR lpString)
BOOL WINAPI user32.SetDlgItemTextW(_In_ HWND hDlg,_In_ int nIDDlgItem,_In_ LPCTSTR lpString)
BOOL WINAPI user32.SetDlgItemTextA(_In_ HWND hDlg,_In_ int nIDDlgItem,_In_ LPCTSTR lpString)
DWORD None winhttp.WinHttpResetAutoProxy(_In_ HINTERNET hSession,_In_ DWORD dwFlags)
void None None.EventDescZero([out] PEVENT_DESCRIPTOR EventDescriptor)
INT_PTR WINAPI user32.DialogBoxIndirectParam(_In_opt_ HINSTANCE hInstance,_In_ LPCDLGTEMPLATE hDialogTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc,_In_ LPARAM dwInitParam)
INT_PTR WINAPI user32.DialogBoxIndirectParamW(_In_opt_ HINSTANCE hInstance,_In_ LPCDLGTEMPLATE hDialogTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc,_In_ LPARAM dwInitParam)
INT_PTR WINAPI user32.DialogBoxIndirectParamA(_In_opt_ HINSTANCE hInstance,_In_ LPCDLGTEMPLATE hDialogTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc,_In_ LPARAM dwInitParam)
void None None.EventDescCreate([out] PEVENT_DESCRIPTOR EventDescriptor,[in] USHORT Id,[in] UCHAR Version,[in] UCHAR Channel,[in] UCHAR Level,[in] USHORT Task,[in] UCHAR Opcode,[in] ULONGLONG Keyword)
BOOL WINAPI kernel32.BuildCommDCBAndTimeouts(_In_ LPCTSTR lpDef,_Out_ LPDCB lpDCB,_Out_ LPCOMMTIMEOUTS lpCommTimeouts)
BOOL WINAPI kernel32.BuildCommDCBAndTimeoutsW(_In_ LPCTSTR lpDef,_Out_ LPDCB lpDCB,_Out_ LPCOMMTIMEOUTS lpCommTimeouts)
BOOL WINAPI kernel32.BuildCommDCBAndTimeoutsA(_In_ LPCTSTR lpDef,_Out_ LPDCB lpDCB,_Out_ LPCOMMTIMEOUTS lpCommTimeouts)
void None None.SetPredication([in None None,optional] ID3D11Predicate *pPredicate,[in] BOOL PredicateValue)
void None None.IAGetPrimitiveTopology([out] D3D11_PRIMITIVE_TOPOLOGY *pTopology)
LRESULT CALLBACK None.KeyboardProc(_In_ int code,_In_ WPARAM wParam,_In_ LPARAM lParam)
void None None.HSGetShader([out] ID3D11HullShader **ppHullShader,[out None None,optional] ID3D11ClassInstance **ppClassInstances,[in None None,out None None,optional] UINT *pNumClassInstances)
void None None.IAGetVertexBuffers([in] UINT StartSlot,[in] UINT NumBuffers,[out None None,optional] ID3D11Buffer **ppVertexBuffers,[out None None,optional] UINT *pStrides,[out None None,optional] UINT *pOffsets)
void None None.ClearDepthStencilView([in] ID3D11DepthStencilView *pDepthStencilView,[in] UINT ClearFlags,[in] FLOAT Depth,[in] UINT8 Stencil)
void None None.GetImmediateContext3([out] ID3D11DeviceContext3 **ppImmediateContext)
VOID WINAPI kernel32.RaiseFailFastException(_In_opt_ PEXCEPTION_RECORD pExceptionRecord,_In_opt_ PCONTEXT pContextRecord,_In_ DWORD dwFlags)
HRESULT None None.GetFrameStatisticsMedia([out] DXGI_FRAME_STATISTICS_MEDIA *pStats)
HRESULT None gpedit.DeleteAllGPOLinks(_In_ LPOLESTR lpContainer)
HRESULT None None.CreateDeferredContext2(UINT ContextFlags None,[out None None,optional] ID3D11DeviceContext2 **ppDeferredContext)
DWORD WINAPI winhttp.WinHttpWebSocketClose(_In_ HINTERNET hWebSocket,_In_ USHORT usStatus,_In_opt_ PVOID pvReason,_In_ DWORD dwReasonLength)
BOOL WINAPI winhttp.WinHttpQueryOption(_In_ HINTERNET hInternet,_In_ DWORD dwOption,_Out_ LPVOID lpBuffer,_Inout_ LPDWORD lpdwBufferLength)
BOOL WINAPI winhttp.WinHttpQueryAuthSchemes(_In_ HINTERNET hRequest,_Out_ LPDWORD lpdwSupportedSchemes,_Out_ LPDWORD lpdwFirstScheme,_Out_ LPDWORD pdwAuthTarget)
BOOL WINAPI kernel32.GetCommModemStatus(_In_ HANDLE hFile,_Out_ LPDWORD lpModemStat)
void None None.GetDesc([out] D3D11_BUFFER_DESC *pDesc)
void None None.CSGetConstantBuffers([in] UINT StartSlot,[in] UINT NumBuffers,[out None None,optional] ID3D11Buffer **ppConstantBuffers)
HRESULT None ole32.DoDragDrop(_In_ LPDATAOBJECT pDataObj,_In_ LPDROPSOURCE pDropSource,_In_ DWORD dwOKEffects,_Out_ LPDWORD pdwEffect)
HRESULT None None.GetData([in] ID3D11Asynchronous *pAsync,[out None None,optional] void *pData,[in] UINT DataSize,[in] UINT GetDataFlags)
HRESULT None mfplat.MFInitVideoFormat_RGB(_In_ MFVIDEOFORMAT *pVideoFormat,_In_ DWORD dwWidth,_In_ DWORD dwHeight,_In_ DWORD D3Dfmt)
void None None.CSGetShader([out] ID3D11ComputeShader **ppComputeShader,[out None None,optional] ID3D11ClassInstance **ppClassInstances,[in None None,out None None,optional] UINT *pNumClassInstances)
void None None.DrawIndexed([in] UINT IndexCount,[in] UINT StartIndexLocation,[in] INT BaseVertexLocation)
HRESULT None shlwapi.IStream_WritePidl(_In_ IStream* pstm,_In_ PCUIDLIST_RELATIVE pidlWrite)
HRESULT None None.SetNPatchMode([in] float nSegments)
SECURITY_STATUS WINAPI ncrypt.SslComputeFinishedHash(_In_ NCRYPT_PROV_HANDLE hSslProvider,_In_ NCRYPT_KEY_HANDLE hMasterKey,_In_ NCRYPT_HASH_HANDLE hHandshakeHash,_Out_ PBYTE pbOutput,_In_ DWORD cbOutput,_In_ DWORD dwFlags)
BOOL None shlwapi.IsInternetESCEnabled(void None None)
HRESULT None dxgidebug.PushDenyAllStorageFilter([in] DXGI_DEBUG_ID Producer)
BOOL WINAPI kernel32.InitAtomTable(_In_ DWORD nSize)
LRESULT WINAPI user32.CallNextHookEx(_In_opt_ HHOOK hhk,_In_ int nCode,_In_ WPARAM wParam,_In_ LPARAM lParam)
HRESULT None None.GetScissorRect([out] RECT *pRect)
BOOL WINAPI kernel32.ClearCommBreak(_In_ HANDLE hFile)
NTSTATUS None None.SpInitialize(_In_ ULONG_PTR PackageId,_In_ PSECPKG_PARAMETERS Parameters,_In_ PLSA_SECPKG_FUNCTION_TABLE FunctionTable)
LONG WINAPI winscard.SCardIntroduceReaderGroup(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szGroupName)
LONG WINAPI winscard.SCardIntroduceReaderGroupW(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szGroupName)
LONG WINAPI winscard.SCardIntroduceReaderGroupA(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szGroupName)
void None None.IAGetVertexBuffers([in] UINT StartSlot,[in] UINT NumBuffers,[out None None,optional] ID3D11Buffer **ppVertexBuffers,[out None None,optional] UINT *pStrides,[out None None,optional] UINT *pOffsets)
void None None.RSSetState([in None None,optional] ID3D11RasterizerState *pRasterizerState)
void None None.SOGetTargets([in] UINT NumBuffers,[out None None,optional] ID3D11Buffer **ppSOTargets)
NET_API_STATUS None netapi32.NetDfsRemove(_In_ LPWSTR DfsEntryPath,_In_opt_ LPWSTR ServerName,_In_opt_ LPWSTR ShareName)
LRESULT CALLBACK None.JournalRecordProc(_In_ int code,WPARAM wParam None,_In_ LPARAM lParam)
ATOM WINAPI kernel32.FindAtom(_In_ LPCTSTR lpString)
ATOM WINAPI kernel32.FindAtomW(_In_ LPCTSTR lpString)
ATOM WINAPI kernel32.FindAtomA(_In_ LPCTSTR lpString)
ATOM WINAPI kernel32.DeleteAtom(_In_ ATOM nAtom)
void None None.GSGetConstantBuffers([in] UINT StartSlot,[in] UINT NumBuffers,[out None None,optional] ID3D11Buffer **ppConstantBuffers)
LRESULT CALLBACK None.JournalPlaybackProc(_In_ int code,WPARAM wParam None,_In_ LPARAM lParam)
void None None.IAGetVertexBuffers([in] UINT StartSlot,[in] UINT NumBuffers,[out None None,optional] ID3D11Buffer **ppVertexBuffers,[out None None,optional] UINT *pStrides,[out None None,optional] UINT *pOffsets)
void None None.OMGetRenderTargets([in] UINT NumViews,[out None None,optional] ID3D11RenderTargetView **ppRenderTargetViews,[out None None,optional] ID3D11DepthStencilView **ppDepthStencilView)
HRESULT None mfplat.MFTGetInfo(_In_ CLSID clsidMFT,_Out_ LPWSTR *pszName,_Out_ MFT_REGISTER_TYPE_INFO **ppInputTypes,_Out_ UINT32 *pcInputTypes,_Out_ MFT_REGISTER_TYPE_INFO **ppOutputTypes,_Out_ UINT32 *pcOutputTypes,_Out_ IMFAttributes **ppAttributes)
BOOL WINAPI user32.AppendMenu(_In_ HMENU hMenu,_In_ UINT uFlags,_In_ UINT_PTR uIDNewItem,_In_opt_ LPCTSTR lpNewItem)
BOOL WINAPI user32.AppendMenuW(_In_ HMENU hMenu,_In_ UINT uFlags,_In_ UINT_PTR uIDNewItem,_In_opt_ LPCTSTR lpNewItem)
BOOL WINAPI user32.AppendMenuA(_In_ HMENU hMenu,_In_ UINT uFlags,_In_ UINT_PTR uIDNewItem,_In_opt_ LPCTSTR lpNewItem)
typedef None None.HRESULT(CALLBACK *PDXVAHDSW_SetVideoProcessBltState None)
HRESULT None mf.MFCreateSequencerSource(IUnknown *pReserved None,IMFSequencerSource **ppSequencerSource None)
HRESULT None None.SetIndices([in] IDirect3DIndexBuffer9 *pIndexData)
HRESULT None mfplat.MFGetPluginControl(_Out_ IMFPluginControl **ppPluginControl)
PEVENT_DESCRIPTOR None None.EventDescSetTask([in] PEVENT_DESCRIPTOR EventDescriptor,[in] USHORT Task)
HRESULT None mfplat.MFPutWorkItem2(_In_ DWORD dwQueue,_In_ LONG Priority,_In_ IMFAsyncCallback *pCallback,_In_ IUnknown *pState)
void None None.IAGetInputLayout([out] ID3D11InputLayout **ppInputLayout)
PEVENT_DESCRIPTOR None None.EventDescSetLevel([in] PEVENT_DESCRIPTOR EventDescriptor,[in] UCHAR Level)
HRESULT None mf.MFCreateASFIndexerByteStream(_In_ IMFByteStream *pIContentByteStream,_In_ QWORD cbIndexStartOffset,_Out_ IMFByteStream **pIIndexByteStream)
BOOL WINAPI winhttp.WinHttpSendRequest(_In_ HINTERNET hRequest,_In_opt_ LPCWSTR pwszHeaders,_In_ DWORD dwHeadersLength,_In_opt_ LPVOID lpOptional,_In_ DWORD dwOptionalLength,_In_ DWORD dwTotalLength,_In_ DWORD_PTR dwContext)
void None None.IAGetVertexBuffers([in] UINT StartSlot,[in] UINT NumBuffers,[out None None,optional] ID3D11Buffer **ppVertexBuffers,[out None None,optional] UINT *pStrides,[out None None,optional] UINT *pOffsets)
void None None.Draw([in] UINT VertexCount,[in] UINT StartVertexLocation)
HRESULT None mfreadwrite.MFCreateSinkWriterFromMediaSink(_In_ IMFMediaSink *pMediaSink,_In_ IMFAttributes *pAttributes,_Out_ IMFSinkWriter **ppSinkWriter)
HRESULT None None.GetLightEnable([in] DWORD Index,[out None None,retval] BOOL *pEnable)
HRESULT None None.Advise([in] IAdviseSink *pAdvSink,[out] DWORD *pdwConnection)
HRESULT None None.CreateVertexBuffer([in] UINT Length,[in] DWORD Usage,[in] DWORD FVF,[in] D3DPOOL Pool,[out None None,retval] IDirect3DVertexBuffer9 **ppVertexBuffer,[in] HANDLE *pSharedHandle)
DWORD None None.NPGetConnection(_In_ LPTSTR lpLocalName,_Out_ LPTSTR lpRemoteName,_Inout_ LPDWORD lpBufferSize)
BOOL WINAPI dnsapi.DnsRecordCompare(_In_ PDNS_RECORD pRecord1,_In_ PDNS_RECORD pRecord2)
HRESULT None None.GetClipStatus([out] D3DCLIPSTATUS9 *pClipStatus)
LONG WINAPI winscard.SCardLocateCardsByATR(_In_ SCARDCONTEXT hContext,_In_ LPSCARD_ATRMASK rgAtrMasks,_In_ DWORD cAtrs,_Inout_ LPSCARD_READERSTATE rgReaderStates,_In_ DWORD cReaders)
LONG WINAPI winscard.SCardLocateCardsByATRW(_In_ SCARDCONTEXT hContext,_In_ LPSCARD_ATRMASK rgAtrMasks,_In_ DWORD cAtrs,_Inout_ LPSCARD_READERSTATE rgReaderStates,_In_ DWORD cReaders)
LONG WINAPI winscard.SCardLocateCardsByATRA(_In_ SCARDCONTEXT hContext,_In_ LPSCARD_ATRMASK rgAtrMasks,_In_ DWORD cAtrs,_Inout_ LPSCARD_READERSTATE rgReaderStates,_In_ DWORD cReaders)
HRESULT None mfplat.MFCreateEventQueue(IMFMediaEventQueue **ppMediaEventQueue None)
HRESULT None None.GetPixelShaderConstantI([in] UINT StartRegister,[in None None,out] int *pConstantData,[in] UINT Vector4iCount)
HRESULT None None.GetVertexShaderConstantB([in] UINT StartRegister,[in None None,out] BOOL *pConstantData,[in] UINT BoolCount)
BOOL None None.ShowCursor([in] BOOL bShow)
BOOL WINAPI kernel32.DeviceIoControl(_In_ HANDLE hDevice,_In_ DWORD dwIoControlCode,_In_opt_ LPVOID lpInBuffer,_In_ DWORD nInBufferSize,_Out_opt_ LPVOID lpOutBuffer,_In_ DWORD nOutBufferSize,_Out_opt_ LPDWORD lpBytesReturned,_Inout_opt_ LPOVERLAPPED lpOverlapped)
HRESULT None dxgidebug.AddApplicationMessage([in] DXGI_INFO_QUEUE_MESSAGE_SEVERITY Severity,[in] LPCSTR pDescription)
HRESULT None mfplat.MFPutWaitingWorkItem(_In_ HANDLE hEvent,_In_ LONG Priority,_In_ IMFAsyncResult *pResult,_Out_ MFWORKITEM_KEY *pKey)
HRESULT None None.CreateCubeTexture([in] UINT EdgeLength,[in] UINT Levels,[in] DWORD Usage,[in] D3DFORMAT Format,[in] D3DPOOL Pool,[out None None,retval] IDirect3DCubeTexture9 **ppCubeTexture,[in] HANDLE *pSharedHandle)
DWORD None mpr.WNetEnumResource(_In_ HANDLE hEnum,_Inout_ LPDWORD lpcCount,_Out_ LPVOID lpBuffer,_Inout_ LPDWORD lpBufferSize)
DWORD None mpr.WNetEnumResourceW(_In_ HANDLE hEnum,_Inout_ LPDWORD lpcCount,_Out_ LPVOID lpBuffer,_Inout_ LPDWORD lpBufferSize)
DWORD None mpr.WNetEnumResourceA(_In_ HANDLE hEnum,_Inout_ LPDWORD lpcCount,_Out_ LPVOID lpBuffer,_Inout_ LPDWORD lpBufferSize)
HRESULT None mfplat.MFUnwrapMediaType(IMFMediaType *pWrap None,IMFMediaType **ppOrig None)
DWORD WINAPI winhttp.WinHttpWebSocketSend(_In_ HINTERNET hWebSocket,_In_ WINHTTP_WEB_SOCKET_BUFFER_TYPE eBufferType,_In_ PVOID pvBuffer,_In_ DWORD dwBufferLength)
LONG WINAPI winscard.SCardListInterfaces(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCard,_Out_ LPGUID pguidInterfaces,_Inout_ LPDWORD pcguidInterfaces)
LONG WINAPI winscard.SCardListInterfacesW(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCard,_Out_ LPGUID pguidInterfaces,_Inout_ LPDWORD pcguidInterfaces)
LONG WINAPI winscard.SCardListInterfacesA(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCard,_Out_ LPGUID pguidInterfaces,_Inout_ LPDWORD pcguidInterfaces)
void None None.OMSetDepthStencilState([in None None,optional] ID3D11DepthStencilState *pDepthStencilState,[in] UINT StencilRef)
BOOL None None.WlxSetOption(_In_ HANDLE hWlx,_In_ DWORD Option,_In_ ULONG_PTR Value,_Out_ ULONG_PTR *OldValue)
HRESULT None mfplat.MFUnregisterPlatformFromMMCSS(void None None)
HRESULT None None.GetDirect3D([out None None,retval] IDirect3D9 **ppD3D9)
HRESULT None mfplat.MFCreateSample(IMFSample **ppIMFSample None)
HRESULT None None.CreateDeferredContext(UINT ContextFlags None,[out None None,optional] ID3D11DeviceContext **ppDeferredContext)
PVOID WINAPI kernel32.AddVectoredContinueHandler(_In_ ULONG FirstHandler,_In_ PVECTORED_EXCEPTION_HANDLER VectoredHandler)
LRESULT CALLBACK None.ShellProc(_In_ int nCode,_In_ WPARAM wParam,_In_ LPARAM lParam)
PPERF_COUNTERSET_INSTANCE None advapi32.PerfQueryInstance(_In_ HANDLE hProvider,_In_ LPCGUID CounterSetGuid,_In_ LPCWSTR szInstance,_In_ ULONG dwInstance)
DWORD CALLBACK None.ForegroundIdleProc(_In_ int code,DWORD wParam None,LONG lParam None)
HRESULT None activeds.SetObjectAttributes([in] PADS_ATTR_INFO pAttributeEntries,[in] DWORD dwNumberAttributes,[out] DWORD *pdwNumAttributesModified)
HRESULT None mfplat.MFScheduleWorkItem(_In_ IMFAsyncCallback *pCallback,_In_ IUnknown *pState,_In_ INT64 Timeout,_Out_ MFWORKITEM_KEY *pKey)
STDAPI None mfplat.MFCreateContentProtectionDevice(_In_ REFGUID ProtectionSystemId,_Out_ IMFContentProtectionDevice **ContentProtectionDevice)
HRESULT None None.CheckPresentDurationSupport(UINT DesiredPresentDuration None,[out] UINT *pClosestSmallerPresentDuration,[out] UINT *pClosestLargerPresentDuration)
void None None.OMGetRenderTargets([in] UINT NumViews,[out] ID3D10RenderTargetView **ppRenderTargetViews,[out] ID3D10DepthStencilView **ppDepthStencilView)
void None dxgi.UnregisterHardwareContentProtectionTeardownStatus([in] DWORD dwCookie)
NTSTATUS None None.UpdateCredentials(_In_ PSECPKG_PRIMARY_CRED PrimaryCredentials,_In_opt_ PSECPKG_SUPPLEMENTAL_CRED_ARRAY Credentials)
HRESULT None None.UpdateTexture([in] IDirect3DBaseTexture9 *pSourceTexture,[in] IDirect3DBaseTexture9 *pDestinationTexture)
SECURITY_STATUS None sspicli.SspiPrepareForCredRead(_In_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE AuthIdentity,_In_ PCWSTR pszTargetName,_Out_ PULONG pCredmanCredentialType,_Out_ PCWSTR *ppszCredmanTargetName)
HRESULT None None.DrawIndexedPrimitive([in] D3DPRIMITIVETYPE Type,[in] INT BaseVertexIndex,[in] UINT MinIndex,[in] UINT NumVertices,[in] UINT StartIndex,[in] UINT PrimitiveCount)
HRESULT None mf.MFCreateASFContentInfo(IMFASFContentInfo **ppIContentInfo None)
HRESULT None mfplat.MFCreateMediaExtensionActivate(_In_ PCWSTR szActivatableClassId,_In_ IUnknown *pConfiguration,_In_ REFIID riid,_Out_ LPVOID *ppvObject)
void None None.GetPredication([out None None,optional] ID3D11Predicate **ppPredicate,[out None None,optional] BOOL *pPredicateValue)
void None None.GenerateMips([in] ID3D11ShaderResourceView *pShaderResourceView)
LRESULT CALLBACK None.DebugProc(_In_ int nCode,_In_ WPARAM wParam,_In_ LPARAM lParam)
HRESULT None None.CheckFeatureSupport(DXGI_FEATURE Feature None,[in None None,out] void *pFeatureSupportData,UINT FeatureSupportDataSize None)
HRESULT None None.ReleaseDC([in None None,optional] RECT *pDirtyRect)
HRESULT None None.SetSoftwareVertexProcessing([in] BOOL bSoftware)
HRESULT None mfplat.MFGetPlaneSize(_In_ DWORD format,_In_ DWORD dwWidth,_In_ DWORD dwHeight,_Out_ DWORD *pdwPlaneSize)
STDAPI None mf.MFGetSystemId(_Out_ IMFSystemId **ppId)
void None None.HSGetSamplers([in] UINT StartSlot,[in] UINT NumSamplers,[out None None,optional] ID3D11SamplerState **ppSamplers)
HRESULT None None.SetFVF([in] DWORD FVF)
void None None.End([in] ID3D11Asynchronous *pAsync)
void None None.IAGetInputLayout([out] ID3D11InputLayout **ppInputLayout)
NTSTATUS None None.SpCompleteAuthToken(_In_ LSA_SEC_HANDLE ContextHandle,_In_ PSecBufferDesc InputBuffer)
HRESULT None oleaut32.VarCyInt(_In_ CY cyIn,_Out_ LPCY pcyResult)
LONG WINAPI winscard.SCardForgetCardType(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCardName)
LONG WINAPI winscard.SCardForgetCardTypeW(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCardName)
LONG WINAPI winscard.SCardForgetCardTypeA(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCardName)
HRESULT None mfplat.MFCreatePathFromURL(_In_opt_ LPCWSTR pwszFileURL,_Out_ LPWSTR *ppwszFilePath)
BOOL None oledlg.OleUIAddVerbMenu(_In_opt_ LPOLEOBJECT lpOleObj,_In_opt_ LPCTSTR lpszShortType,_In_ HMENU hMenu,_In_ UINT uPos,_In_ UINT uIDVerbMin,_In_ UINT uIDVerbMax,_In_ BOOL bAddConvert,_In_ UINT idConvert,_Out_ HMENU *lphMenu)
BOOL None oledlg.OleUIAddVerbMenuW(_In_opt_ LPOLEOBJECT lpOleObj,_In_opt_ LPCTSTR lpszShortType,_In_ HMENU hMenu,_In_ UINT uPos,_In_ UINT uIDVerbMin,_In_ UINT uIDVerbMax,_In_ BOOL bAddConvert,_In_ UINT idConvert,_Out_ HMENU *lphMenu)
BOOL None oledlg.OleUIAddVerbMenuA(_In_opt_ LPOLEOBJECT lpOleObj,_In_opt_ LPCTSTR lpszShortType,_In_ HMENU hMenu,_In_ UINT uPos,_In_ UINT uIDVerbMin,_In_ UINT uIDVerbMax,_In_ BOOL bAddConvert,_In_ UINT idConvert,_Out_ HMENU *lphMenu)
DWORD None None.NPAddConnection3(_In_ HWND hwndOwner,_In_ LPNETRESOURCE lpNetResource,_In_ LPTSTR lpPassword,_In_ LPTSTR lpUserName,_In_ DWORD dwFlags)
HRESULT WINAPI None.MFCreateSensorGroup(LPCWSTR SensorGroupSymbolicLink None,_Out_ IMFSensorGroup **ppSensorGroup)
HRESULT None None.SetRenderTarget([in] DWORD RenderTargetIndex,[in] IDirect3DSurface9 *pRenderTarget)
void None None.OMGetDepthStencilState([out None None,optional] ID3D11DepthStencilState **ppDepthStencilState,[out None None,optional] UINT *pStencilRef)
HRESULT None mfplat.MFCreateMFByteStreamOnStreamEx(_In_ IUnknown punkStream,_Out_ IMFByteStream **ppByteStream)
LPTSTR None None.MAKEINTATOM(WORD wInteger None)
HRESULT None None.GetDepthStencilSurface([out None None,retval] IDirect3DSurface9 **ppZStencilSurface)
HRESULT None mfcaptureengine.MFCreateCaptureEngine(_Out_ IMFCaptureEngine **ppCaptureEngine)
HRESULT None dxgidebug.GetStorageFilter([in] DXGI_DEBUG_ID Producer,[out None None,optional] DXGI_INFO_QUEUE_FILTER *pFilter,[in None None,out] SIZE_T *pFilterByteLength)
HRESULT None shlwapi.IStream_Read(_In_ IStream *pstm,_Out_ VOID *pv,_In_ ULONG cb)
HRESULT None mfplat.MFInitVideoFormat_RGB(_In_ MFVIDEOFORMAT *pVideoFormat,_In_ DWORD dwWidth,_In_ DWORD dwHeight,_In_ DWORD D3Dfmt)
HRESULT None mfreadwrite.MFCreateSinkWriterFromMediaSink(_In_ IMFMediaSink *pMediaSink,_In_ IMFAttributes *pAttributes,_Out_ IMFSinkWriter **ppSinkWriter)
HRESULT None None.DrawPrimitive([in] D3DPRIMITIVETYPE PrimitiveType,[in] UINT StartVertex,[in] UINT PrimitiveCount)
NET_API_STATUS None netapi32.NetDfsRemove(_In_ LPWSTR DfsEntryPath,_In_opt_ LPWSTR ServerName,_In_opt_ LPWSTR ShareName)
void None shlwapi.IUnknown_AtomicRelease(_Inout_opt_ void **ppunk)
BOOL WINAPI user32.CallMsgFilter(_In_ LPMSG lpMsg,_In_ int nCode)
BOOL WINAPI user32.CallMsgFilterW(_In_ LPMSG lpMsg,_In_ int nCode)
BOOL WINAPI user32.CallMsgFilterA(_In_ LPMSG lpMsg,_In_ int nCode)
UINT WINAPI kernel32.GetAtomName(_In_ ATOM nAtom,_Out_ LPTSTR lpBuffer,_In_ int nSize)
UINT WINAPI kernel32.GetAtomNameW(_In_ ATOM nAtom,_Out_ LPTSTR lpBuffer,_In_ int nSize)
UINT WINAPI kernel32.GetAtomNameA(_In_ ATOM nAtom,_Out_ LPTSTR lpBuffer,_In_ int nSize)
HRESULT None mf.MFCreateAudioRenderer(_In_ IMFAttributes *pAudioAttributes,_Out_ IMFMediaSink **ppSink)
BOOL WINAPI winhttp.WinHttpQueryDataAvailable(_In_ HINTERNET hRequest,_Out_ LPDWORD lpdwNumberOfBytesAvailable)
SECURITY_STATUS WINAPI ncrypt.SslEnumCipherSuites(_In_ NCRYPT_PROV_HANDLE hSslProvider,_In_opt_ NCRYPT_KEY_HANDLE hPrivateKey,_Out_ NCRYPT_SSL_CIPHER_SUITE **ppCipherSuite,_Inout_ PVOID *ppEnumState,_In_ DWORD dwFlags)
HRESULT None mf.MFCreateMPEG4MediaSink(_In_ IMFByteStream *pIByteStream,_In_ IMFMediaType *pVideoMediaType,_In_ IMFMediaType *pAudioMediaType,_Out_ IMFMediaSink **ppIMediaSink)
HRESULT None None.ValidateDevice([out None None,retval] DWORD *pNumPasses)
NET_API_STATUS NET_API_FUNCTION netapi32.NetDfsRemoveRootTarget(_In_ LPWSTR pDfsPath,_In_opt_ LPWSTR pTargetPath,_In_ ULONG Flags)
HRESULT None mf.MFCreateNetSchemePlugin(_In_ REFIID riid,_Out_ LPVOID *ppvHandler)
HRESULT __stdcall None.MFCreateMP3ByteStreamPlugin(_In_ REFIID riid,_Out_ LPVOID *ppvHandler)
BOOL WINAPI kernel32.SetCommConfig(_In_ HANDLE hCommDev,_In_ LPCOMMCONFIG lpCC,_In_ DWORD dwSize)
HRESULT None mfplat.MFBeginRegisterWorkQueueWithMMCSSEx(_In_ DWORD dwWorkQueueId,_In_ LPCWSTR wszClass,_In_ DWORD dwTaskId,_In_ LONG lPriority,_In_ IMFAsyncCallback *pDoneCallback,_In_ IUnknown *pDoneState)
ULONG None advapi32.PerfStartProvider(_In_ LPGUID ProviderGuid,_In_opt_ PERFLIBREQUEST ControlCallback,_Out_ HANDLE *phProvider)
NTSTATUS None None.DeleteCredential(_In_ PLUID LogonId,_In_ ULONG AuthenticationPackage,_In_ PLSA_STRING PrimaryKeyValue)
HRESULT None mfplat.MFBeginRegisterWorkQueueWithMMCSSEx(_In_ DWORD dwWorkQueueId,_In_ LPCWSTR wszClass,_In_ DWORD dwTaskId,_In_ LONG lPriority,_In_ IMFAsyncCallback *pDoneCallback,_In_ IUnknown *pDoneState)
LRESULT CALLBACK None.LowLevelMouseProc(_In_ int nCode,_In_ WPARAM wParam,_In_ LPARAM lParam)
void None mfplat.MFHeapFree(_In_ void *pv)
BOOL WINAPI kernel32.GetCommProperties(_In_ HANDLE hFile,_Out_ LPCOMMPROP lpCommProp)
PDNS_RECORD WINAPI dnsapi.DnsRecordSetCopyEx(_In_ PDNS_RECORD pRecordSet,_In_ DNS_CHARSET CharSetIn,_In_ DNS_CHARSET CharSetOut)
HRESULT None None.SetSamplerState([in] DWORD Sampler,[in] D3DSAMPLERSTATETYPE Type,[in] DWORD Value)
DWORD None advapi32.GetManagedApplications(_In_ GUID *pCategory,_In_ DWORD dwQueryFlags,_In_ DWORD dwInfoLevel,_Out_ LPDWORD pdwApps,_Out_ PMANAGEDAPPLICATION *prgManagedApps)
STDAPI None mf.MFCreateProtectedEnvironmentAccess(_Out_ IMFProtectedEnvironmentAccess **ppAccess)
BOOL None userenv.FreeGPOList(_In_ PGROUP_POLICY_OBJECT pGPOList)
BOOL None userenv.FreeGPOListW(_In_ PGROUP_POLICY_OBJECT pGPOList)
BOOL None userenv.FreeGPOListA(_In_ PGROUP_POLICY_OBJECT pGPOList)
HRESULT None None.CreateIndexBuffer([in] UINT Length,[in] DWORD Usage,[in] D3DFORMAT Format,[in] D3DPOOL Pool,[out None None,retval] IDirect3DIndexBuffer9 **ppIndexBuffer,[in] HANDLE *pSharedHandle)
HRESULT None None.SetCurrentTexturePalette([in] UINT PaletteNumber)
HRESULT None None.CreateDeferredContext2(UINT ContextFlags None,[out None None,optional] ID3D11DeviceContext2 **ppDeferredContext)
HHOOK WINAPI user32.SetWindowsHookEx(_In_ int idHook,_In_ HOOKPROC lpfn,_In_ HINSTANCE hMod,_In_ DWORD dwThreadId)
HHOOK WINAPI user32.SetWindowsHookExW(_In_ int idHook,_In_ HOOKPROC lpfn,_In_ HINSTANCE hMod,_In_ DWORD dwThreadId)
HHOOK WINAPI user32.SetWindowsHookExA(_In_ int idHook,_In_ HOOKPROC lpfn,_In_ HINSTANCE hMod,_In_ DWORD dwThreadId)
HRESULT None mfplat.MFGetStrideForBitmapInfoHeader(_In_ DWORD format,_In_ DWORD dwWidth,_Out_ LONG *pStride)
HRESULT None mfplat.MFPutWorkItemEx2(_In_ DWORD dwQueue,_In_ LONG Priority,_In_ IMFAsyncResult *pResult)
BOOL None advapi32.CredDelete(_In_ LPCTSTR TargetName,_In_ DWORD Type,_In_ DWORD Flags)
BOOL None advapi32.CredDeleteW(_In_ LPCTSTR TargetName,_In_ DWORD Type,_In_ DWORD Flags)
BOOL None advapi32.CredDeleteA(_In_ LPCTSTR TargetName,_In_ DWORD Type,_In_ DWORD Flags)
UCHAR None None.EventDescGetChannel([in] PEVENT_DESCRIPTOR EventDescriptor)
NTSTATUS None secur32.LsaLookupAuthenticationPackage(_In_ HANDLE LsaHandle,_In_ PLSA_STRING PackageName,_Out_ PULONG AuthenticationPackage)
HRESULT None shlwapi.SHCreateThreadRef(_In_ LONG *pcRef,_Out_ IUnknown **ppunk)
ATOM WINAPI kernel32.FindAtom(_In_ LPCTSTR lpString)
ATOM WINAPI kernel32.FindAtomW(_In_ LPCTSTR lpString)
ATOM WINAPI kernel32.FindAtomA(_In_ LPCTSTR lpString)
HRESULT None None.SetRenderState([in] D3DRENDERSTATETYPE State,[in] DWORD Value)
HRESULT None None.GetTextureStageState([in] DWORD Stage,[in] D3DTEXTURESTAGESTATETYPE Type,[out None None,retval] DWORD *pValue)
HRESULT None mfreadwrite.MFCreateSourceReaderFromMediaSource(_In_ IMFMediaSource *pMediaSource,_In_ IMFAttributes *pAttributes,_Out_ IMFSourceReader **ppSourceReader)
HRESULT None dxgidebug.PushEmptyStorageFilter([in] DXGI_DEBUG_ID Producer)
HRESULT None None.GetTexture([in] DWORD Stage,[out None None,retval] IDirect3DBaseTexture9 **ppTexture)
HRESULT None None.GetStreamSource([in] UINT StreamNumber,[in None None,out] IDirect3DVertexBuffer9 **ppStreamData,[out] UINT *pOffsetInBytes,[out] UINT *pStride)
HWND WINAPI None.CreateWindow(_In_opt_ LPCTSTR lpClassName,_In_opt_ LPCTSTR lpWindowName,_In_ DWORD dwStyle,_In_ int x,_In_ int y,_In_ int nWidth,_In_ int nHeight,_In_opt_ HWND hWndParent,_In_opt_ HMENU hMenu,_In_opt_ HINSTANCE hInstance,_In_opt_ LPVOID lpParam)
HWND WINAPI None.CreateWindowW(_In_opt_ LPCTSTR lpClassName,_In_opt_ LPCTSTR lpWindowName,_In_ DWORD dwStyle,_In_ int x,_In_ int y,_In_ int nWidth,_In_ int nHeight,_In_opt_ HWND hWndParent,_In_opt_ HMENU hMenu,_In_opt_ HINSTANCE hInstance,_In_opt_ LPVOID lpParam)
HWND WINAPI None.CreateWindowA(_In_opt_ LPCTSTR lpClassName,_In_opt_ LPCTSTR lpWindowName,_In_ DWORD dwStyle,_In_ int x,_In_ int y,_In_ int nWidth,_In_ int nHeight,_In_opt_ HWND hWndParent,_In_opt_ HMENU hMenu,_In_opt_ HINSTANCE hInstance,_In_opt_ LPVOID lpParam)
HRESULT None None.GetPaletteEntries([in] UINT PaletteNumber,[in None None,out] PALETTEENTRY *pEntries)
HRESULT None None.SetDepthStencilSurface([in] IDirect3DSurface9 *pNewZStencil)
HRESULT None mfplat.MFCreateMediaBufferFromMediaType(_In_ IMFMediaType *pMediaType,_In_ LONGLONG llDuration,_In_ DWORD dwMinLength,_In_ DWORD dwMinAlignment,_Out_ IMFMediaBuffer **ppBuffer)
HRESULT None mfplat.MFCreateWICBitmapBuffer(_In_ REFIID riid,_In_ IUnknown *punkSurface,_Out_ IMFMediaBuffer **ppBuffer)
BOOL WINAPI winhttp.WinHttpQueryDataAvailable(_In_ HINTERNET hRequest,_Out_ LPDWORD lpdwNumberOfBytesAvailable)
PDH_STATUS None pdh.PdhGetDefaultPerfObject(_In_ LPCTSTR szDataSource,_In_ LPCTSTR szMachineName,_Out_ LPTSTR szDefaultObjectName,_Inout_ LPDWORD pcchBufferSize)
PDH_STATUS None pdh.PdhGetDefaultPerfObjectW(_In_ LPCTSTR szDataSource,_In_ LPCTSTR szMachineName,_Out_ LPTSTR szDefaultObjectName,_Inout_ LPDWORD pcchBufferSize)
PDH_STATUS None pdh.PdhGetDefaultPerfObjectA(_In_ LPCTSTR szDataSource,_In_ LPCTSTR szMachineName,_Out_ LPTSTR szDefaultObjectName,_Inout_ LPDWORD pcchBufferSize)
UINT WINAPI kernel32.GetSystemWindowsDirectory(_Out_ LPTSTR lpBuffer,_In_ UINT uSize)
UINT WINAPI kernel32.GetSystemWindowsDirectoryW(_Out_ LPTSTR lpBuffer,_In_ UINT uSize)
UINT WINAPI kernel32.GetSystemWindowsDirectoryA(_Out_ LPTSTR lpBuffer,_In_ UINT uSize)
HRESULT None mf.MFCreateASFIndexer(IMFASFIndexer **ppIIndexer None)
LRESULT CALLBACK None.CallWndRetProc(_In_ int nCode,_In_ WPARAM wParam,_In_ LPARAM lParam)
LRESULT CALLBACK None.LowLevelKeyboardProc(_In_ int nCode,_In_ WPARAM wParam,_In_ LPARAM lParam)
HRESULT None None.GetBackgroundColor([out] DXGI_RGBA *pColor)
BOOL WINAPI advapi32.CredFindBestCredential(_In_ LPCTSTR TargetName,_In_ DWORD Type,_In_ DWORD Flags,_Out_ PCREDENTIAL *Credential)
BOOL WINAPI advapi32.CredFindBestCredentialW(_In_ LPCTSTR TargetName,_In_ DWORD Type,_In_ DWORD Flags,_Out_ PCREDENTIAL *Credential)
BOOL WINAPI advapi32.CredFindBestCredentialA(_In_ LPCTSTR TargetName,_In_ DWORD Type,_In_ DWORD Flags,_Out_ PCREDENTIAL *Credential)
HRESULT WINAPI None.MFCreateSensorStream(DWORD StreamId None,_In_opt_ IMFAttributes *pAttributes,_In_ IMFCollection *pMediaTypeCollection,_Out_ IMFSensorStream **ppStream)
HRESULT None evr.MFCreateVideoMixer(IUnknown *pOwner None,REFIID riidDevice None,REFIID riid None,void **ppVideoMixer None)
BOOL WINAPI kernel32.SetCommConfig(_In_ HANDLE hCommDev,_In_ LPCOMMCONFIG lpCC,_In_ DWORD dwSize)
HRESULT None mf.MFCreateASFMediaSink(IMFByteStream *pIByteStream None,IMFMediaSink **ppIMediaSink None)
int WINAPI user32.GetMenuItemCount(_In_opt_ HMENU hMenu)
HRESULT None None.GetDeviceCaps([out] D3DCAPS9 *pCaps)
HRESULT None None.CreateVolumeTexture([in] UINT Width,[in] UINT Height,[in] UINT Depth,[in] UINT Levels,[in] DWORD Usage,[in] D3DFORMAT Format,[in] D3DPOOL Pool,[out None None,retval] IDirect3DVolumeTexture9 **ppVolumeTexture,[in] HANDLE *pSharedHandle)
void WINAPI None.CounterCleanup(void None None)
HRESULT None mfplat.MFFrameRateToAverageTimePerFrame(_In_ UINT32 unNumerator,_In_ UINT32 unDenominator,_Out_ UINT64 *punAverageTimePerFrame)
VOID WINAPI kernel32.RtlCaptureContext(_Out_ PCONTEXT ContextRecord)
ULONG None advapi32.PerfSetCounterSetInfo(_In_ HANDLE hProvider,_In_ PPERF_COUNTERSET_INFO pTemplate,_In_ ULONG dwTemplateSize)
void None None.GSGetShader([out] ID3D10GeometryShader **ppGeometryShader)
HRESULT None mfplat.CreatePropertyStore(_Out_ IPropertyStore **ppStore)
BOOL WINAPI user32.PeekMessage(_Out_ LPMSG lpMsg,_In_opt_ HWND hWnd,_In_ UINT wMsgFilterMin,_In_ UINT wMsgFilterMax,_In_ UINT wRemoveMsg)
BOOL WINAPI user32.PeekMessageW(_Out_ LPMSG lpMsg,_In_opt_ HWND hWnd,_In_ UINT wMsgFilterMin,_In_ UINT wMsgFilterMax,_In_ UINT wRemoveMsg)
BOOL WINAPI user32.PeekMessageA(_Out_ LPMSG lpMsg,_In_opt_ HWND hWnd,_In_ UINT wMsgFilterMin,_In_ UINT wMsgFilterMax,_In_ UINT wRemoveMsg)
BOOL WINAPI user32.UnhookWindowsHookEx(_In_ HHOOK hhk)
BOOLEAN WINAPI kernel32.RtlAddFunctionTable(_In_ PRUNTIME_FUNCTION FunctionTable,_In_ DWORD EntryCount,_In_ DWORD64 BaseAddress,_In_ ULONGLONG TargetGp)
NET_API_STATUS NET_API_FUNCTION netapi32.NetDfsSetClientInfo(_In_ LPWSTR DfsEntryPath,_In_opt_ LPWSTR ServerName,_In_opt_ LPWSTR ShareName,_In_ DWORD Level,_In_ LPBYTE Buffer)
void None None.ResolveSubresource([in] ID3D11Resource *pDstResource,[in] UINT DstSubresource,[in] ID3D11Resource *pSrcResource,[in] UINT SrcSubresource,[in] DXGI_FORMAT Format)
HRESULT None mfplat.MFInvokeCallback(IMFAsyncResult *pAsyncResult None)
void None dxgidebug.SetMuteDebugOutput([in] DXGI_DEBUG_ID Producer,[in] BOOL bMute)
HRESULT None mfplat.MFUnlockWorkQueue(_In_ DWORD dwWorkQueue)
HRESULT None dxgidebug.AddApplicationMessage([in] DXGI_INFO_QUEUE_MESSAGE_SEVERITY Severity,[in] LPCSTR pDescription)
ATOM WINAPI kernel32.GlobalFindAtom(_In_ LPCTSTR lpString)
ATOM WINAPI kernel32.GlobalFindAtomW(_In_ LPCTSTR lpString)
ATOM WINAPI kernel32.GlobalFindAtomA(_In_ LPCTSTR lpString)
PDH_STATUS None pdh.PdhAddEnglishCounter(_In_ PDH_HQUERY hQuery,_In_ LPCTSTR szFullCounterPath,_In_ DWORD_PTR dwUserData,_Out_ PDH_HCOUNTER *phCounter)
PDH_STATUS None pdh.PdhAddEnglishCounterW(_In_ PDH_HQUERY hQuery,_In_ LPCTSTR szFullCounterPath,_In_ DWORD_PTR dwUserData,_Out_ PDH_HCOUNTER *phCounter)
PDH_STATUS None pdh.PdhAddEnglishCounterA(_In_ PDH_HQUERY hQuery,_In_ LPCTSTR szFullCounterPath,_In_ DWORD_PTR dwUserData,_Out_ PDH_HCOUNTER *phCounter)
HRESULT None None.CreateStateBlock([in] D3DSTATEBLOCKTYPE Type,[out None None,retval] IDirect3DStateBlock9 **ppSB)
HRESULT None None.SetVertexDeclaration([in] IDirect3DVertexDeclaration9 *pDecl)
HRESULT None mf.MFCreate3GPMediaSink(_In_ IMFByteStream *pIByteStream,_In_ IMFMediaType *pVideoMediaType,_In_ IMFMediaType *pAudioMediaType,_Out_ IMFMediaSink **ppIMediaSink)
HRESULT None dxgidebug.GetMessage([in] DXGI_DEBUG_ID Producer,[in] UINT64 MessageIndex,[out None None,optional] DXGI_INFO_QUEUE_MESSAGE *pMessage,[in None None,out] SIZE_T *pMessageByteLength)
BOOL WINAPI winhttp.WinHttpSetDefaultProxyConfiguration(_In_ WINHTTP_PROXY_INFO *pProxyInfo)
STDAPI None mfplat.MFCreateTrackedSample(_Out_ IMFTrackedSample **ppMFSample)
HRESULT None mfplat.MFCreateVideoMediaTypeFromVideoInfoHeader2(const KS_VIDEOINFOHEADER2 *pVideoInfoHeader,DWORD cbVideoInfoHeader None,QWORD AdditionalVideoFlags None,const GUID *pSubtype,IMFVideoMediaType **ppIVideoMediaType None)
SECURITY_STATUS SEC_Entry secur32.DecryptMessage(_In_ PCtxtHandle phContext,_Inout_ PSecBufferDesc pMessage,_In_ ULONG MessageSeqNo,_Out_ PULONG pfQOP)
HRESULT None None.CreateQuery([in] D3DQUERYTYPE Type,[out None None,retval] IDirect3DQuery9 **ppQuery)
UCHAR None None.EventDescGetLevel([in] PEVENT_DESCRIPTOR EventDescriptor)
HRESULT None mfreadwrite.MFCreateSourceReaderFromMediaSource(_In_ IMFMediaSource *pMediaSource,_In_ IMFAttributes *pAttributes,_Out_ IMFSourceReader **ppSourceReader)
HRESULT None None.GetPixelShaderConstantB([in] UINT StartRegister,[in None None,out] BOOL *pConstantData,[in] UINT BoolCount)
HRESULT WINAPI mfplat.MFCreateMediaTypeFromProperties(_In_ IUnknown *punkStream,_Out_ IMFMediaType **ppMediaType)
LRESULT WINAPI user32.SendDlgItemMessage(_In_ HWND hDlg,_In_ int nIDDlgItem,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
LRESULT WINAPI user32.SendDlgItemMessageW(_In_ HWND hDlg,_In_ int nIDDlgItem,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
LRESULT WINAPI user32.SendDlgItemMessageA(_In_ HWND hDlg,_In_ int nIDDlgItem,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
HRESULT None shlwapi.IStream_Size(_In_ IStream *pstm,_Out_ ULARGE_INTEGER *pui)
HRESULT None None.PresentBuffer(UINT BufferToPresent None,UINT SyncInterval None,UINT Flags None)
BOOL WINAPI winhttp.WinHttpSetDefaultProxyConfiguration(_In_ WINHTTP_PROXY_INFO *pProxyInfo)
HWINEVENTHOOK WINAPI user32.SetWinEventHook(_In_ UINT eventMin,_In_ UINT eventMax,_In_ HMODULE hmodWinEventProc,_In_ WINEVENTPROC lpfnWinEventProc,_In_ DWORD idProcess,_In_ DWORD idThread,_In_ UINT dwflags)
HRESULT None None.GetIndices([out] IDirect3DIndexBuffer9 **ppIndexData,[out] UINT *pBaseVertexIndex)
HRESULT None None.GetVertexShaderConstantF([in] UINT StartRegister,[in None None,out] float *pConstantData,[in] UINT Vector4fCount)
const DXVA2_Fixed32 None.DXVA2_Fixed32OpaqueAlpha(void None None)
HRESULT None mfplat.MFCreatePresentationDescriptor(DWORD cStreamDescriptors None,IMFStreamDescriptor **apStreamDescriptors None,IMFPresentationDescriptor **ppPresentationDescriptor None)
HRESULT None mfplat.MFUnlockDXGIDeviceManager(void None None)
PDH_STATUS None pdh.PdhSetDefaultRealTimeDataSource(_In_ DWORD dwDataSourceId)
HRESULT None None.GetRasterStatus([in] UINT iSwapChain,[out] D3DRASTER_STATUS *pRasterStatus)
HRESULT None None.SetCursorProperties([in] UINT XHotSpot,[in] UINT YHotSpot,[in] IDirect3DSurface9 *pCursorBitmap)
HRESULT None None.MFSetAttributeRatio(_In_ IMFAttributes *pAttributes,_In_ REFGUID guidKey,_In_ UINT32 unNumerator,_In_ UINT32 unDenominator)
void None None.GetDesc([out] D3D11_SHADER_RESOURCE_VIEW_DESC *pDesc)
void None None.IAGetVertexBuffers([in] UINT StartSlot,[in] UINT NumBuffers,[out None None,optional] ID3D11Buffer **ppVertexBuffers,[out None None,optional] UINT *pStrides,[out None None,optional] UINT *pOffsets)
void None None.GetDesc([out] D3D11_DEPTH_STENCIL_DESC *pDesc)
HRESULT None None.CreateClassLinkage([out] ID3D11ClassLinkage **ppLinkage)
HRESULT None dxgidebug.AddStorageFilterEntries([in] DXGI_DEBUG_ID Producer,[in] DXGI_INFO_QUEUE_FILTER *pFilter)
HRESULT None None.LightEnable([in] DWORD LightIndex,[in] BOOL bEnable)
HRESULT None shlwapi.IUnknown_SetSite(_In_ IUnknown *punk,_In_ IUnknown *punkSite)
HRESULT None dxgidebug.PushEmptyRetrievalFilter([in] DXGI_DEBUG_ID Producer)
HRESULT None None.SetTextureStageState([in] DWORD Stage,[in] D3DTEXTURESTAGESTATETYPE Type,[in] DWORD Value)
HRESULT None mfplat.MFPutWaitingWorkItem(_In_ HANDLE hEvent,_In_ LONG Priority,_In_ IMFAsyncResult *pResult,_Out_ MFWORKITEM_KEY *pKey)
typedef None None.HRESULT(CALLBACK *PDXVAHDSW_GetVideoProcessorFilterRange None)
HRESULT None evr.MFCreateVideoMixerAndPresenter(_In_ IUnknown *pMixerOwner,_In_ IUnknown *pPresenterOwner,_In_ REFIID riidMixer,_Out_ void **ppvVideoMixer,_In_ REFIID riidPresenter,_Out_ void **ppvVideoPresenter)
void None None.ResolveSubresource([in] ID3D11Resource *pDstResource,[in] UINT DstSubresource,[in] ID3D11Resource *pSrcResource,[in] UINT SrcSubresource,[in] DXGI_FORMAT Format)
UINT64 None dxgidebug.GetNumStoredMessagesAllowedByRetrievalFilters([in] DXGI_DEBUG_ID Producer)
HRESULT None None.GetCurrentTexturePalette([out None None,retval] UINT *pPaletteNumber)
void None None.GetGammaRamp([in] UINT iSwapChain,[in None None,out] D3DGAMMARAMP *pRamp)
BOOL WINAPI winhttp.WinHttpSetDefaultProxyConfiguration(_In_ WINHTTP_PROXY_INFO *pProxyInfo)
PSecurityFunctionTable SEC_Entry secur32.InitSecurityInterface(void None None)
PSecurityFunctionTable SEC_Entry secur32.InitSecurityInterfaceW(void None None)
PSecurityFunctionTable SEC_Entry secur32.InitSecurityInterfaceA(void None None)
HRESULT None mfplat.MFRegisterLocalSchemeHandler(_In_ PCWSTR szScheme,_In_ IMFActivate *pActivate)
HRESULT None mfplat.MFGetContentProtectionSystemCLSID(_In_ REFGUID guidProtectionSystemID,_Out_ CLSID *pclsid)
HRESULT None None.MFGetAttributeSize(_In_ IMFAttributes *pAttributes,_In_ REFGUID guidKey,_Out_ UINT32 *punWidth,_Out_ UINT32 *punHeight)
HRESULT None mfplat.MFLockSharedWorkQueue(_In_ PCWSTR wszClass,_In_ LONG BasePriority,_Inout_ DWORD *pdwTaskId,_Out_ DWORD *pID)
HRESULT None dxgidebug.AddMessage([in] DXGI_DEBUG_ID Producer,[in] DXGI_INFO_QUEUE_MESSAGE_CATEGORY Category,[in] DXGI_INFO_QUEUE_MESSAGE_SEVERITY Severity,[in] DXGI_INFO_QUEUE_MESSAGE_ID ID,[in] LPCSTR pDescription)
double None None.MFGetAttributeDouble(_In_ IMFAttributes *pAttributes,_In_ REFGUID guidKey,_In_ double fDefault)
HRESULT None None.GetViewport([out] D3DVIEWPORT9 *pViewport)
void None None.CopyResource([in] ID3D10Resource *pDstResource,[in] ID3D10Resource *pSrcResource)
HRESULT None mfplat.MFEndUnregisterWorkQueueWithMMCSS(_In_ IMFAsyncResult *pResult)
HRESULT None dxgidebug.SetMessageCountLimit([in] DXGI_DEBUG_ID Producer,[in] UINT64 MessageCountLimit)
void None None.PSGetSamplers([in] UINT StartSlot,[in] UINT NumSamplers,[out] ID3D10SamplerState **ppSamplers)
BOOL None pdh.PdhIsRealTimeQuery(_In_ PDH_HQUERY hQuery)
HRESULT None mf.MFCreateTopologyNode(_In_ MF_TOPOLOGY_TYPE NodeType,_Out_ IMFTopologyNode **ppNode)
HRESULT None None.CheckFormatSupport([in] DXGI_FORMAT Format,[out] UINT *pFormatSupport)
HRESULT None mf.MFCreateTopoLoader(IMFTopoLoader **ppObj None)
void None None.UnpackSize([in] UINT64 unPacked,[out] UINT32 *punWidth,[out] UINT32 *punHeight)
HRESULT None None.GetDesc([out] D3DVERTEXBUFFER_DESC *pDesc)
HRESULT None mfplat.MFAllocateWorkQueue(_Out_ DWORD *pdwWorkQueue)
HRESULT None mfreadwrite.MFCreateSourceReaderFromURL(_In_ LPCWSTR pwszURL,_In_ IMFAttributes *pAttributes,_Out_ IMFSourceReader **ppSourceReader)
BOOL None shlwapi.IsOS(_In_ DWORD dwOS)
UINT None dxgidebug.GetStorageFilterStackSize([in] DXGI_DEBUG_ID Producer)
UINT64 None dxgidebug.GetNumStoredMessages([in] DXGI_DEBUG_ID Producer)
UINT None dxgidebug.GetRetrievalFilterStackSize([in] DXGI_DEBUG_ID Producer)
HRESULT None shlwapi.SHGetThreadRef(_In_ IUnknown **ppunk)
UCHAR None None.EventDescGetLevel([in] PEVENT_DESCRIPTOR EventDescriptor)
void None None.DrawIndexedInstanced([in] UINT IndexCountPerInstance,[in] UINT InstanceCount,[in] UINT StartIndexLocation,[in] INT BaseVertexLocation,[in] UINT StartInstanceLocation)
HHOOK WINAPI user32.SetWindowsHookEx(_In_ int idHook,_In_ HOOKPROC lpfn,_In_ HINSTANCE hMod,_In_ DWORD dwThreadId)
HHOOK WINAPI user32.SetWindowsHookExW(_In_ int idHook,_In_ HOOKPROC lpfn,_In_ HINSTANCE hMod,_In_ DWORD dwThreadId)
HHOOK WINAPI user32.SetWindowsHookExA(_In_ int idHook,_In_ HOOKPROC lpfn,_In_ HINSTANCE hMod,_In_ DWORD dwThreadId)
LPTSTR None None.MAKEINTATOM(WORD wInteger None)
HRESULT None None.CreateTexture([in] UINT Width,[in] UINT Height,[in] UINT Levels,[in] DWORD Usage,[in] D3DFORMAT Format,[in] D3DPOOL Pool,[out None None,retval] IDirect3DTexture9 **ppTexture,[in] HANDLE *pSharedHandle)
LONG WINAPI winscard.SCardGetProviderId(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCard,_Out_ LPGUID pguidProviderId)
LONG WINAPI winscard.SCardGetProviderIdW(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCard,_Out_ LPGUID pguidProviderId)
LONG WINAPI winscard.SCardGetProviderIdA(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCard,_Out_ LPGUID pguidProviderId)
void None None.RSGetViewports([in None None,out] UINT *NumViewports,[out] D3D10_VIEWPORT *pViewports)
HRESULT None None.AcquireNextFrame([in] UINT TimeoutInMilliseconds,[out] DXGI_OUTDUPL_FRAME_INFO *pFrameInfo,[out] IDXGIResource **ppDesktopResource)
BOOL WINAPI winhttp.WinHttpSetDefaultProxyConfiguration(_In_ WINHTTP_PROXY_INFO *pProxyInfo)
HRESULT None mf.MFCreateASFProfile(IMFASFProfile **ppIProfile None)
HRESULT None None.GetDesc1([out] DXGI_SWAP_CHAIN_DESC1 *pDesc)
HRESULT None dxgidebug.PushStorageFilter([in] DXGI_DEBUG_ID Producer,[in] DXGI_INFO_QUEUE_FILTER *pFilter)
HRESULT None mfplat.MFAllocateWorkQueueEx(_In_ MFASYNC_WORKQUEUE_TYPE WorkQueueType,_Out_ DWORD *pdwWorkQueue)
HRESULT None None.SetStreamSource([in] UINT StreamNumber,[in] IDirect3DVertexBuffer9 *pStreamData,[in] UINT OffsetInBytes,[in] UINT Stride)
HRESULT None shlwapi.IStream_Read(_In_ IStream *pstm,_Out_ VOID *pv,_In_ ULONG cb)
typedef None None.HRESULT(CALLBACK *PDXVAHDSW_GetVideoProcessBltStatePrivate None)
HRESULT None shlwapi.IStream_ReadPidl(_In_ IStream* pstm,_Out_ PIDLIST_RELATIVE* ppidlOut)
HRESULT None None.Reset([in None None,out] D3DPRESENT_PARAMETERS *pPresentationParameters)
HRESULT None None.MFGetAttribute2UINT32asUINT64(_In_ IMFAttributes *pAttributes,_In_ REFGUID guidKey,_Out_ UINT32 *punHigh32,_Out_ UINT32 *punLow32)
HRESULT None None.GetSamplerState([in] DWORD Sampler,[in] D3DSAMPLERSTATETYPE Type,[out] DWORD *pValue)
HRESULT None mf.MFTranscodeGetAudioOutputAvailableTypes(_In_ REFGUID guidSubType,_In_ DWORD dwMFTFlags,_In_ IMFAttributes *pCodecConfig,_Out_ IMFCollection **ppAvailableTypes)
HRESULT None mfplat.MFCreate2DMediaBuffer(_In_ DWORD dwWidth,_In_ DWORD dwHeight,_In_ DWORD dwFourCC,_In_ BOOL fBottomUp,_Out_ IMFMediaBuffer **ppBuffer)
NET_API_STATUS None netapi32.NetDfsGetFtContainerSecurity(_In_ LPWSTR DomainName,_In_ SECURITY_INFORMATION SecurityInformation,_Out_ PSECURITY_DESCRIPTOR *ppSecurityDescriptor,_Out_ LPDWORD lpcbSecurityDescriptor)
HRESULT None mfplat.MFLockWorkQueue(_In_ DWORD dwWorkQueue)
HRESULT None shlwapi.IStream_Read(_In_ IStream *pstm,_Out_ VOID *pv,_In_ ULONG cb)
void None None.SOGetTargets([in] UINT NumBuffers,[out None None,optional] ID3D11Buffer **ppSOTargets)
HRESULT None None.GetBackBuffer([in] UINT iSwapChain,[in] UINT BackBuffer,[in] D3DBACKBUFFER_TYPE Type,[out None None,retval] IDirect3DSurface9 **ppBackBuffer)
HRESULT None None.GetRenderTargetData([in] IDirect3DSurface9 *pRenderTarget,[in] IDirect3DSurface9 *pDestSurface)
HRESULT None mf.MFCreateMuxSink(_In_ GUID guidOutputSubType,_In_ IMFAttributes *pOutputAttributes,_In_ IMFByteStream *pOutputByteStream,_Out_ IMFMediaSink **ppMuxSink)
HRESULT None None.GetPixelShaderConstantF([in] UINT StartRegister,[in None None,out] float *pConstantData,[in] UINT Vector4fCount)
HRESULT None None.CreateDepthStencilSurface([in] UINT Width,[in] UINT Height,[in] D3DFORMAT Format,[in] D3DMULTISAMPLE_TYPE MultiSample,[in] DWORD MultisampleQuality,[in] BOOL Discard,[out None None,retval] IDirect3DSurface9 **ppSurface,[in] HANDLE *pSharedHandle)
HRESULT None None.GetParameters([out] DWORD *pdwFlags,[out] DWORD *pdwQueue)
void None None.ClearDepthStencilView([in] ID3D10DepthStencilView *pDepthStencilView,[in] UINT ClearFlags,[in] FLOAT Depth,[in] UINT8 Stencil)
void None shlwapi.IUnknown_AtomicRelease(_Inout_opt_ void **ppunk)
BOOL WINAPI user32.CallMsgFilter(_In_ LPMSG lpMsg,_In_ int nCode)
BOOL WINAPI user32.CallMsgFilterW(_In_ LPMSG lpMsg,_In_ int nCode)
BOOL WINAPI user32.CallMsgFilterA(_In_ LPMSG lpMsg,_In_ int nCode)
void WINAPI dnsapi.DnsFree(_Inout_ PVOID pData,_In_ DNS_FREE_TYPE FreeType)
HRESULT None None.SetRenderTarget([in] DWORD RenderTargetIndex,[in] IDirect3DSurface9 *pRenderTarget)
typedef None None.HRESULT(CALLBACK *PDXVAHDSW_DestroyDevice None)
HRESULT None mfplat.MFShutdown(void None None)
HRESULT None mfplat.MFEndCreateFile(_In_ IMFAsyncResult *pResult,_Out_ IMFByteStream **ppFile)
HRESULT None mf.MFCreateMP3MediaSink(_In_ IMFByteStream *pTargetByteStream,_Out_ IMFMediaSink **ppMediaSink)
HRESULT None d3dcompiler_47.GetResourceBindingDescByName([in] LPCSTR Name,[out] D3D11_SHADER_INPUT_BIND_DESC *pDesc)
HRESULT None mfplat.MFBeginUnregisterWorkQueueWithMMCSS(_In_ DWORD dwWorkQueueId,_In_ IMFAsyncCallback *pDoneCallback,_In_ IUnknown *pDoneState)
HRESULT None mfplat.MFGetWorkQueueMMCSSClass(_In_ DWORD dwWorkQueueId,_Out_ LPWSTR pwszClass,_Inout_ DWORD *pcchClass)
void None None.GetImmediateContext2([out] ID3D11DeviceContext2 **ppImmediateContext)
HRESULT None mf.MFCreateWMVEncoderActivate(IMFMediaType *pMediaType None,IPropertyStore *pEncodingConfigurationProperties None,IMFActivate **ppActivate None)
HRESULT None None.GetVertexShaderConstantI([in] UINT StartRegister,[in None None,out] int *pConstantData,[in] UINT Vector4iCount)
HRESULT None mf.MFCreateTranscodeTopologyFromByteStream(_In_ IMFMediaSource *pSrc,_In_ IMFByteStream *pOutputStream,_In_ IMFTranscodeProfile *pProfile,_Out_ IMFTopology **ppTranscodeTopo)
HRESULT None mfplat.MFBeginUnregisterWorkQueueWithMMCSS(_In_ DWORD dwWorkQueueId,_In_ IMFAsyncCallback *pDoneCallback,_In_ IUnknown *pDoneState)
typedef None None.HRESULT(CALLBACK *PDXVAHDSW_DestroyDevice None)
HRESULT None None.GetTexture([in] DWORD Stage,[out None None,retval] IDirect3DBaseTexture9 **ppTexture)
ULONG None advapi32.PerfIncrementULongLongCounterValue(_In_ HANDLE hProvider,_In_ PPERF_COUNTERSET_INSTANCE pInstance,_In_ ULONG CounterId,_In_ ULONGLONG llValue)
HRESULT None mf.MFCreateSampleCopierMFT(_Out_ IMFTransform **ppCopierMFT)
HRESULT None mfplat.MFBeginUnregisterWorkQueueWithMMCSS(_In_ DWORD dwWorkQueueId,_In_ IMFAsyncCallback *pDoneCallback,_In_ IUnknown *pDoneState)
HRESULT None mfplat.MFEndRegisterWorkQueueWithMMCSS(_In_ IMFAsyncResult *pResult,_In_ DWORD *pdwTaskId)
HRESULT None None.DrawIndexedPrimitive([in] D3DPRIMITIVETYPE Type,[in] INT BaseVertexIndex,[in] UINT MinIndex,[in] UINT NumVertices,[in] UINT StartIndex,[in] UINT PrimitiveCount)
BOOL WINAPI user32.WaitMessage(void None None)
HRESULT None mfplat.MFCreateMFVideoFormatFromMFMediaType(_In_ IMFMediaType *pMFType,_Out_ MFVIDEOFORMAT **ppMFVF,_Out_ UINT32 *pcbSize)
BOOL WINAPI user32.RegisterHotKey(_In_opt_ HWND hWnd,_In_ int id,_In_ UINT fsModifiers,_In_ UINT vk)
SECURITY_STATUS WINAPI ncrypt.SslHashHandshake(_In_ NCRYPT_PROV_HANDLE hSslProvider,_Inout_ NCRYPT_HASH_HANDLE hHandshakeHash,_Out_ PBYTE pbInput,_In_ DWORD cbInput,_In_ DWORD dwFlags)
HRESULT WINAPI mf.MFCreateFMPEG4MediaSink(_In_ IMFByteStream *pIByteStream,_In_ IMFMediaType *pVideoMediaType,_In_ IMFMediaType *pAudioMediaType,_Out_ IMFMediaSink **ppIMediaSink)
HRESULT None userenv.RSoPSetPolicySettingStatus(_In_ DWORD dwFlags,_In_ IWbemServices *pServices,_In_ IWbemClassObject *pSettingInstance,_In_ DWORD nInfo,_In_ POLICYSETTINGSTATUSINFO *pStatus)
HRESULT None None.GetBackBuffer([in] UINT iSwapChain,[in] UINT BackBuffer,[in] D3DBACKBUFFER_TYPE Type,[out None None,retval] IDirect3DSurface9 **ppBackBuffer)
void None dxgidebug.ClearRetrievalFilter([in] DXGI_DEBUG_ID Producer)
HRESULT None None.GetBackBuffer([in] UINT iSwapChain,[in] UINT BackBuffer,[in] D3DBACKBUFFER_TYPE Type,[out None None,retval] IDirect3DSurface9 **ppBackBuffer)
HRESULT None None.ProcessVertices([in] UINT SrcStartIndex,[in] UINT DestIndex,[in] UINT VertexCount,[in] IDirect3DVertexBuffer9 *pDestBuffer,[in] IDirect3DVertexDeclaration9 *pVertexDecl,[in] DWORD Flags)
HRESULT STDMETHODCALLTYPE rpcrt4.CStdStubBuffer_Connect(_In_ IRpcStubBuffer *This,_In_ IUnknown *pUnkServer)
HRESULT None mfplat.MFCreateMFVideoFormatFromMFMediaType(_In_ IMFMediaType *pMFType,_Out_ MFVIDEOFORMAT **ppMFVF,_Out_ UINT32 *pcbSize)
void None None.InterlockedCompareStore(in R dest,in T compare_value,in T value)
HRESULT None mf.MFCreateMuxSink(_In_ GUID guidOutputSubType,_In_ IMFAttributes *pOutputAttributes,_In_ IMFByteStream *pOutputByteStream,_Out_ IMFMediaSink **ppMuxSink)
DWORD None loadperf.LoadPerfCounterTextStrings(_In_ LPCTSTR commandLine,_In_ BOOL bQuietModeArg)
DWORD None loadperf.LoadPerfCounterTextStringsW(_In_ LPCTSTR commandLine,_In_ BOOL bQuietModeArg)
DWORD None loadperf.LoadPerfCounterTextStringsA(_In_ LPCTSTR commandLine,_In_ BOOL bQuietModeArg)
HRESULT None mfplat.MFEndCreateFile(_In_ IMFAsyncResult *pResult,_Out_ IMFByteStream **ppFile)
HRESULT None mfplat.MFEndCreateFile(_In_ IMFAsyncResult *pResult,_Out_ IMFByteStream **ppFile)
NET_API_STATUS None netapi32.NetDfsSetStdContainerSecurity(_In_ LPWSTR MachineName,_In_ SECURITY_INFORMATION SecurityInformation,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor)
HRESULT None None.GetTransform([in] D3DTRANSFORMSTATETYPE State,[out] D3DMATRIX *pMatrix)
void None None.DrawIndexed([in] UINT IndexCount,[in] UINT StartIndexLocation,[in] INT BaseVertexLocation)
PDH_STATUS None pdh.PdhGetDllVersion(_Out_ LPDWORD lpdwVersion)
HRESULT None mfplat.MFEndCreateFile(_In_ IMFAsyncResult *pResult,_Out_ IMFByteStream **ppFile)
HRESULT None dxgidebug.PushCopyOfStorageFilter([in] DXGI_DEBUG_ID Producer)
void None None.GSGetSamplers([in] UINT StartSlot,[in] UINT NumSamplers,[out] ID3D10SamplerState **ppSamplers)
HRESULT None None.GetBackBuffer([in] UINT iSwapChain,[in] UINT BackBuffer,[in] D3DBACKBUFFER_TYPE Type,[out None None,retval] IDirect3DSurface9 **ppBackBuffer)
HRESULT None None.GetPrivateData([in] REFGUID guid,[in None None,out] UINT *pDataSize,[out] void *pData)
HRESULT None None.SetDialogBoxMode([in] BOOL bEnableDialogs)
UINT64 None None.PackSize([in] UINT32 unWidth,[in] UINT32 unHeight)
HRESULT None mf.MFCreateMuxSink(_In_ GUID guidOutputSubType,_In_ IMFAttributes *pOutputAttributes,_In_ IMFByteStream *pOutputByteStream,_Out_ IMFMediaSink **ppMuxSink)
HRESULT None mfplat.MFBeginUnregisterWorkQueueWithMMCSS(_In_ DWORD dwWorkQueueId,_In_ IMFAsyncCallback *pDoneCallback,_In_ IUnknown *pDoneState)
HRESULT None mfreadwrite.MFCreateSourceReaderFromMediaSource(_In_ IMFMediaSource *pMediaSource,_In_ IMFAttributes *pAttributes,_Out_ IMFSourceReader **ppSourceReader)
HRESULT None mf.MFCreateMuxSink(_In_ GUID guidOutputSubType,_In_ IMFAttributes *pOutputAttributes,_In_ IMFByteStream *pOutputByteStream,_Out_ IMFMediaSink **ppMuxSink)
HRESULT None None.SetRotation([in] DXGI_MODE_ROTATION Rotation)
HRESULT None None.GetTransform([in] D3DTRANSFORMSTATETYPE State,[out] D3DMATRIX *pMatrix)
UINT None oleacc.GetRoleText(_In_ DWORD dwRole,_Out_ LPTSTR lpszRole,_In_ UINT cchRoleMax)
UINT None oleacc.GetRoleTextW(_In_ DWORD dwRole,_Out_ LPTSTR lpszRole,_In_ UINT cchRoleMax)
UINT None oleacc.GetRoleTextA(_In_ DWORD dwRole,_Out_ LPTSTR lpszRole,_In_ UINT cchRoleMax)
PDH_STATUS None pdh.PdhBrowseCounters(_In_ PPDH_BROWSE_DLG_CONFIG pBrowseDlgData)
PDH_STATUS None pdh.PdhBrowseCountersW(_In_ PPDH_BROWSE_DLG_CONFIG pBrowseDlgData)
PDH_STATUS None pdh.PdhBrowseCountersA(_In_ PPDH_BROWSE_DLG_CONFIG pBrowseDlgData)
ULONG None advapi32.PerfStopProvider(_In_ HANDLE hProvider)
HRESULT None None.GetTransform([in] D3DTRANSFORMSTATETYPE State,[out] D3DMATRIX *pMatrix)
HRESULT None None.GetTransform([in] D3DTRANSFORMSTATETYPE State,[out] D3DMATRIX *pMatrix)
void None None.GSSetShaderResources([in] UINT StartSlot,[in] UINT NumViews,[in] ID3D10ShaderResourceView *ppShaderResourceViews)
HRESULT None mfplat.MFCreateMFVideoFormatFromMFMediaType(_In_ IMFMediaType *pMFType,_Out_ MFVIDEOFORMAT **ppMFVF,_Out_ UINT32 *pcbSize)
HRESULT None mf.MFCreateMuxSink(_In_ GUID guidOutputSubType,_In_ IMFAttributes *pOutputAttributes,_In_ IMFByteStream *pOutputByteStream,_Out_ IMFMediaSink **ppMuxSink)
HRESULT None mfplat.MFEndCreateFile(_In_ IMFAsyncResult *pResult,_Out_ IMFByteStream **ppFile)
HRESULT None None.GetTexture([in] DWORD Stage,[out None None,retval] IDirect3DBaseTexture9 **ppTexture)
HRESULT None mfplat.MFEndCreateFile(_In_ IMFAsyncResult *pResult,_Out_ IMFByteStream **ppFile)
HRESULT None mf.MFCreatePMPMediaSession(DWORD dwCreationFlags None,IMFAttributes *pConfiguration None,IMFMediaSession **ppMediaSession None,IMFActivate **ppEnablerActivate None)
HRESULT None mf.MFCreateTranscodeTopologyFromByteStream(_In_ IMFMediaSource *pSrc,_In_ IMFByteStream *pOutputStream,_In_ IMFTranscodeProfile *pProfile,_Out_ IMFTopology **ppTranscodeTopo)
PPERF_COUNTERSET_INSTANCE None advapi32.PerfQueryInstance(_In_ HANDLE hProvider,_In_ LPCGUID CounterSetGuid,_In_ LPCWSTR szInstance,_In_ ULONG dwInstance)
HRESULT None mfplat.MFShutdown(void None None)
STDAPI None oleacc.AccessibleObjectFromEvent(_In_ HWND hwnd,_In_ DWORD dwObjectID,_In_ DWORD dwChildID,_Out_ IAccessible **ppacc,_Out_ VARIANT *pvarChild)
HRESULT None mfplat.MFEndRegisterWorkQueueWithMMCSS(_In_ IMFAsyncResult *pResult,_In_ DWORD *pdwTaskId)
typedef None None.HRESULT(CALLBACK *PDXVAHDSW_SetVideoProcessStreamState None)
STDAPI None evr.MFCreateVideoSampleAllocator(_In_ REFIID riid,_Out_ void** ppSampleAllocator)
HRESULT None mfreadwrite.MFCreateSinkWriterFromURL(_In_ LPCWSTR pwszOutputURL,_In_ IMFByteStream *pByteStream,_In_ IMFAttributes *pAttributes,_Out_ IMFSinkWriter **ppSinkWriter)
HRESULT None None.GetTransform([in] D3DTRANSFORMSTATETYPE State,[out] D3DMATRIX *pMatrix)
DWORD APIENTRY None.NPLogonNotify(_In_ PLUID lpLogon,_In_ LPCWSTR lpAuthentInfoType,_In_ LPVOID lpAuthentInfo,_In_ LPCWSTR lpPreviousAuthentInfoType,_In_ LPVOID lpPreviousAuthentInfo,_In_ LPWSTR lpStationName,_In_ LPVOID StationHandle,_Out_ LPWSTR *lpLogonScript)
HRESULT None mf.MFCreatePMPMediaSession(DWORD dwCreationFlags None,IMFAttributes *pConfiguration None,IMFMediaSession **ppMediaSession None,IMFActivate **ppEnablerActivate None)
HRESULT None mf.MFCreateRemoteDesktopPlugin(IMFRemoteDesktopPlugin **ppPlugin None)
HRESULT None mf.MFCreatePMPMediaSession(DWORD dwCreationFlags None,IMFAttributes *pConfiguration None,IMFMediaSession **ppMediaSession None,IMFActivate **ppEnablerActivate None)
HRESULT None None.GetTransform([in] D3DTRANSFORMSTATETYPE State,[out] D3DMATRIX *pMatrix)
PDH_STATUS None pdh.PdhEnumLogSetNames(_In_ LPCTSTR szDataSource,_Out_ LPTSTR mszLogSetNameList,_Inout_ LPDWORD pcchBufferLength)
PDH_STATUS None pdh.PdhEnumLogSetNamesW(_In_ LPCTSTR szDataSource,_Out_ LPTSTR mszLogSetNameList,_Inout_ LPDWORD pcchBufferLength)
PDH_STATUS None pdh.PdhEnumLogSetNamesA(_In_ LPCTSTR szDataSource,_Out_ LPTSTR mszLogSetNameList,_Inout_ LPDWORD pcchBufferLength)
void None None.OMGetDepthStencilState([out] ID3D10DepthStencilState **ppDepthStencilState,[out] UINT *pStencilRef)
HRESULT None mfplat.MFCreateMFVideoFormatFromMFMediaType(_In_ IMFMediaType *pMFType,_Out_ MFVIDEOFORMAT **ppMFVF,_Out_ UINT32 *pcbSize)
UINT64 None dxgidebug.GetNumMessagesAllowedByStorageFilter([in] DXGI_DEBUG_ID Producer)
HRESULT None None.CreateOffscreenPlainSurface([in] UINT Width,[in] UINT Height,[in] D3DFORMAT Format,[in] D3DPOOL Pool,[out None None,retval] IDirect3DSurface9 **ppSurface,[in] HANDLE *pSharedHandle)
PDH_STATUS None pdh.PdhLookupPerfNameByIndex(_In_ LPCTSTR szMachineName,_In_ DWORD dwNameIndex,_Out_ LPTSTR szNameBuffer,_Inout_ LPDWORD pcchNameBufferSize)
PDH_STATUS None pdh.PdhLookupPerfNameByIndexW(_In_ LPCTSTR szMachineName,_In_ DWORD dwNameIndex,_Out_ LPTSTR szNameBuffer,_Inout_ LPDWORD pcchNameBufferSize)
PDH_STATUS None pdh.PdhLookupPerfNameByIndexA(_In_ LPCTSTR szMachineName,_In_ DWORD dwNameIndex,_Out_ LPTSTR szNameBuffer,_Inout_ LPDWORD pcchNameBufferSize)
HRESULT None mfplat.MFShutdown(void None None)
HRESULT None mf.MFCreateADTSMediaSink(_In_ IMFByteStream *pTargetByteStream,_In_ IMFMediaType *pAudioMediaType,_Out_ IMFMediaSink **ppMediaSink)
HRESULT None None.SetPixelShader([in] IDirect3DPixelShader9 *pShader)
UINT64 None None.PackSize([in] UINT32 unWidth,[in] UINT32 unHeight)
HRESULT None mfplat.MFCreateMFByteStreamOnStream(_In_ IStream *pStream,_Out_ IMFByteStream **ppByteStream)
HPALETTE None gdi32.SelectPalette(_In_ HDC hdc,_In_ HPALETTE hpal,_In_ BOOL bForceBackground)
SECURITY_STATUS WINAPI ncrypt.SslEncryptPacket(_In_ NCRYPT_PROV_HANDLE hSslProvider,_Inout_ NCRYPT_KEY_HANDLE hKey,_In_ PBYTE *pbInput,_In_ DWORD cbInput,_Out_ PBYTE pbOutput,_In_ DWORD cbOutput,_Out_ DWORD *pcbResult,_In_ ULONGLONG SequenceNumber,_In_ DWORD dwContentType,_In_ DWORD dwFlags)
HRESULT None None.GetPrivateData([in] REFGUID guid,[in None None,out] UINT *pDataSize,[out None None,optional] void *pData)
BOOL None evr.MFIsFormatYUV(_In_ DWORD Format)
HRESULT None None.GetVideoProcessorFilterRange([in] DXVAHD_FILTER Filter,[out] DXVAHD_FILTER_RANGE_DATA *pRange)
void None None.PSGetSamplers([in] UINT StartSlot,[in] UINT NumSamplers,[out] ID3D10SamplerState **ppSamplers)
void None None.GSGetConstantBuffers([in] UINT StartSlot,[in] UINT NumBuffers,[out] ID3D10Buffer **ppConstantBuffers)
HRESULT None mf.MFCreateMuxSink(_In_ GUID guidOutputSubType,_In_ IMFAttributes *pOutputAttributes,_In_ IMFByteStream *pOutputByteStream,_Out_ IMFMediaSink **ppMuxSink)
HRESULT None mfplat.MFCreateSourceResolver(_Out_ IMFSourceResolver **ppISourceResolver)
HRESULT None None.Reset([in None None,out] D3DPRESENT_PARAMETERS *pPresentationParameters)
HRESULT None None.CreateIndexBuffer([in] UINT Length,[in] DWORD Usage,[in] D3DFORMAT Format,[in] D3DPOOL Pool,[out None None,retval] IDirect3DIndexBuffer9 **ppIndexBuffer,[in] HANDLE *pSharedHandle)
PDH_STATUS None pdh.PdhReadRawLogRecord(_In_ PDH_HLOG hLog,_In_ FILETIME ftRecord,_Out_ PPDH_RAW_LOG_RECORD pRawLogRecord,_In_ LPDWORD pdwBufferLength)
HRESULT None mfplat.MFGetAttributesAsBlobSize(_In_ IMFAttributes *pAttributes,_Out_ UINT32 *pcbBufSize)
DWORD WINAPI kernel32.GetVersion(void None None)
HRESULT None None.CreateRenderTarget([in] UINT Width,[in] UINT Height,[in] D3DFORMAT Format,[in] D3DMULTISAMPLE_TYPE MultiSample,[in] DWORD MultisampleQuality,[in] BOOL Lockable,[out None None,retval] IDirect3DSurface9 **ppSurface,[in] HANDLE *pSharedHandle)
BOOL WINAPI kernel32.GetCommConfig(_In_ HANDLE hCommDev,_Out_ LPCOMMCONFIG lpCC,_Inout_ LPDWORD lpdwSize)
HRESULT None mf.MFCreateASFMediaSinkActivate(LPCWSTR pwszFileName None,IMFASFContentInfo *pContentInfo None,IMFActivate **ppIActivate None)
BOOL WINAPI user32.UnhookWindowsHookEx(_In_ HHOOK hhk)
HRESULT None dxgidebug.AddRetrievalFilterEntries([in] DXGI_DEBUG_ID Producer,[in] DXGI_INFO_QUEUE_FILTER *pFilter)
HRESULT None None.GetLight([in] DWORD Index,[out] D3DLight9 *pLight)
HRESULT WINAPI None.MFCreateSensorActivityMonitor(_In_ IMFSensorActivitiesReportCallback *pCallback,_Out_ IMFSensorActivityMonitor **ppActivityMonitor)
HRESULT None None.GetVertexShader([out None None,retval] IDirect3DVertexShader9 **ppShader)
void None None.VSGetShaderResources([in] UINT StartSlot,[in] UINT NumViews,[out] ID3D10ShaderResourceView **ppShaderResourceViews)
HRESULT None None.GetPixelShader([out None None,retval] IDirect3DPixelShader9 **ppShader)
void None None.PSSetShader([in] ID3D10PixelShader *pPixelShader)
LRESULT WINAPI user32.SendMessageTimeout(_In_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam,_In_ UINT fuFlags,_In_ UINT uTimeout,_Out_opt_ PDWORD_PTR lpdwResult)
LRESULT WINAPI user32.SendMessageTimeoutW(_In_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam,_In_ UINT fuFlags,_In_ UINT uTimeout,_Out_opt_ PDWORD_PTR lpdwResult)
LRESULT WINAPI user32.SendMessageTimeoutA(_In_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam,_In_ UINT fuFlags,_In_ UINT uTimeout,_Out_opt_ PDWORD_PTR lpdwResult)
HRESULT None None.ResetEx([in None None,out] D3DPRESENT_PARAMETERS *pPresentationParameters,[in None None,out] D3DDISPLAYMODEEX *pFullscreenDisplayMode)
typedef None None.void(CALLBACK *WINHTTP_STATUS_CALLBACK None)
PDH_STATUS None pdh.PdhCollectQueryData(_Inout_ PDH_HQUERY hQuery)
HRESULT None shlwapi.IStream_ReadStr(_In_ IStream *pstm,_Out_ PWSTR *ppsz)
SECURITY_STATUS WINAPI ncrypt.SslGetProviderProperty(_In_ NCRYPT_PROV_HANDLE hSslProvider,_In_ LPCWSTR pszProperty,_Out_ PBYTE ppbOutput,_Out_ DWORD *pcbOutput,_Inout_ PVOID *ppEnumState,_In_ DWORD dwFlags)
HRESULT None shlwapi.SHCreateStreamOnFileEx(_In_ LPCWSTR pszFile,_In_ DWORD grfMode,_In_ DWORD dwAttributes,_In_ BOOL fCreate,_Reserved_ IStream *pstmTemplate,_Out_ IStream **ppstm)
HRESULT None mfplat.MFCreateMFByteStreamWrapper(_In_ IMFByteStream *pStream,_In_ IMFByteStream **ppStreamWrapper)
HRESULT None None.GetRenderState([in] D3DRENDERSTATETYPE State,[out None None,retval] DWORD *pValue)
HRESULT None None.GetAllResponseHeaders([out] WCHAR **ppwszHeaders)
SECURITY_STATUS WINAPI ncrypt.SslGetCipherSuitePRFHashAlgorithm(_In_ NCRYPT_PROV_HANDLE hSslProvider,_In_ DWORD dwProtocol,_In_ DWORD dwCipherSuite,_In_ DWORD dwKeyType,_Out_ WCHAR szPRFHash[NCRYPT_SSL_MAX_NAME_SIZE],_In_ DWORD dwFlags)
DWORD APIENTRY None.OpenPerformanceData(LPWSTR pContext None)
LRESULT CALLBACK None.GetMsgProc(_In_ int code,_In_ WPARAM wParam,_In_ LPARAM lParam)
HRESULT None None.DeletePatch([in] UINT Handle)
HRESULT None dxgidebug.GetRetrievalFilter([in] DXGI_DEBUG_ID Producer,[out None None,optional] DXGI_INFO_QUEUE_FILTER *pFilter,[in None None,out] SIZE_T *pFilterByteLength)
HRESULT None mf.MFCreateASFProfileFromPresentationDescriptor(IMFPresentationDescriptor *pIPD None,IMFASFProfile **ppIProfile None)
void None None.IAGetPrimitiveTopology([out] D3D10_PRIMITIVE_TOPOLOGY *pTopology)
void None None.IASetInputLayout([in] ID3D10InputLayout *pInputLayout)
HRESULT None d3dcompiler_47.GetDesc([out] D3D11_SHADER_DESC *pDesc)
NET_API_STATUS None netapi32.NetDfsRemoveStdRoot(_In_ LPWSTR ServerName,_In_ LPWSTR RootShare,_In_ DWORD Flags)
HRESULT None None.GetMaterial([out] D3DMATERIAL9 *pMaterial)
HRESULT None mfplat.MFTUnregisterLocalByCLSID(_In_ CLSID clsidMFT)
HRESULT None None.GetLight([in] DWORD Index,[out] D3DLight9 *pLight)
typedef None None.HRESULT(CALLBACK *PDXVAHDSW_Plugin None)
HRESULT None None.GetCreationParameters([out] D3DDEVICE_CREATION_PARAMETERS *pParameters)
DNS_STATUS WINAPI dnsapi.DnsQuery(_In_ PCTSTR lpstrName,_In_ WORD wType,_In_ DWORD Options,_Inout_opt_ PVOID pExtra,_Out_opt_ PDNS_RECORD *ppQueryResultsSet,_Out_opt_ PVOID *pReserved)
DNS_STATUS WINAPI dnsapi.DnsQuery_W(_In_ PCTSTR lpstrName,_In_ WORD wType,_In_ DWORD Options,_Inout_opt_ PVOID pExtra,_Out_opt_ PDNS_RECORD *ppQueryResultsSet,_Out_opt_ PVOID *pReserved)
DNS_STATUS WINAPI dnsapi.DnsQuery_A(_In_ PCTSTR lpstrName,_In_ WORD wType,_In_ DWORD Options,_Inout_opt_ PVOID pExtra,_Out_opt_ PDNS_RECORD *ppQueryResultsSet,_Out_opt_ PVOID *pReserved)
NET_API_STATUS None netapi32.NetDfsRemoveFtRoot(_In_ LPWSTR ServerName,_In_ LPWSTR RootShare,_In_ LPWSTR FtDfsName,_Reserved_ DWORD Flags)
HRESULT None mfplat.MFCreateTransformActivate(_Out_ IMFActivate **ppActivate)
LRESULT WINAPI user32.SendMessage(_In_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
LRESULT WINAPI user32.SendMessageW(_In_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
LRESULT WINAPI user32.SendMessageA(_In_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
HRESULT None dxgidebug.PushRetrievalFilter([in] DXGI_DEBUG_ID Producer,[in] DXGI_INFO_QUEUE_FILTER *pFilter)
DWORD None loadperf.UnloadPerfCounterTextStrings(_In_ LPCTSTR commandLine,_In_ BOOL bQuietModeArg)
DWORD None loadperf.UnloadPerfCounterTextStringsW(_In_ LPCTSTR commandLine,_In_ BOOL bQuietModeArg)
DWORD None loadperf.UnloadPerfCounterTextStringsA(_In_ LPCTSTR commandLine,_In_ BOOL bQuietModeArg)
BOOL WINAPI user32.GetMenuInfo(_In_ HMENU hmenu,_Inout_ LPMENUINFO lpcmi)
HRESULT None None.EndStateBlock([in None None,retval] IDirect3DStateBlock9 **ppSB)
HRESULT None mfplat.MFCreateStreamOnMFByteStreamEx(_In_ IMFByteStream *pByteStream,_In_ REFIID riid,_Out_ void **ppv)
HRESULT WINAPI None.RoGetErrorReportingFlags(_Out_ UINT32 *pflags)
HRESULT None None.GetClipPlane([in] DWORD Index,[out] float *pPlane)
HRESULT None None.GetFullscreenDesc([out] DXGI_SWAP_CHAIN_FULLSCREEN_DESC *pDesc)
typedef None None.HRESULT(CALLBACK *PDXVAHDSW_GetVideoProcessorCustomRates None)
NET_API_STATUS None netapi32.NetDfsGetInfo(_In_ LPWSTR DfsEntryPath,_In_opt_ LPWSTR ServerName,_In_opt_ LPWSTR ShareName,_In_ DWORD Level,_Out_ LPBYTE *Buffer)
HRESULT None mfplat.MFGetTimerPeriodicity(_Out_ DWORD *Periodicity)
UINT64 None dxgidebug.GetMessageCountLimit([in] DXGI_DEBUG_ID Producer)
HRESULT None mf.MFCreateWMAEncoderActivate(IMFMediaType *pMediaType None,IPropertyStore *pEncodingConfigurationProperties None,IMFActivate **ppActivate None)
HRESULT None mfplat.MFSerializePresentationDescriptor(IMFPresentationDescriptor *pPD None,DWORD *pcbData None,BYTE **ppbData None)
HRESULT None mfplat.MFCalculateImageSize(_In_ REFGUID guidSubtype,_In_ UINT32 unWidth,_In_ UINT32 unHeight,_Out_ UINT32 *pcbImageSize)
LRESULT CALLBACK None.MessageProc(_In_ int code,WPARAM wParam None,_In_ LPARAM lParam)
void None None.GSGetShaderResources([in] UINT StartSlot,[in] UINT NumViews,[out] ID3D10ShaderResourceView **ppShaderResourceViews)
HRESULT None mfplat.MFAverageTimePerFrameToFrameRate(_In_ UINT64 unAverageTimePerFrame,_Out_ UINT32 *punNumerator,_Out_ UINT32 *punDenominator)
void None dxgidebug.PopRetrievalFilter([in] DXGI_DEBUG_ID Producer)
NET_API_STATUS NET_API_FUNCTION netapi32.NetDfsAddRootTarget(_In_ LPWSTR pDfsPath,_In_opt_ LPWSTR pTargetPath,_In_ ULONG MajorVersion,_In_opt_ LPWSTR pComment,_In_ ULONG Flags)
HRESULT None mfplat.MFAllocateSerialWorkQueue(_In_ DWORD dwWorkQueue,_Out_ DWORD *pdwWorkQueue)
HRESULT None None.GetLight([in] DWORD Index,[out] D3DLight9 *pLight)
HRESULT None None.Invoke([in] IMFAsyncResult *pAsyncResult)
HRESULT None mf.MFEnumDeviceSources(_In_ IMFAttributes *pAttributes,_Out_ IMFActivate ***pppSourceActivate,_Out_ UINT32 *pcSourceActivate)
HRESULT None None.GetVertexShader([out None None,retval] IDirect3DVertexShader9 **ppShader)
HRESULT None None.CreateAdditionalSwapChain([in None None,out] D3DPRESENT_PARAMETERS *pPresentationParameters,[out None None,retval] IDirect3DSwapChain9 **ppSwapChain)
HRESULT None d3dcompiler_47.GetPatchConstantParameterDesc([in] UINT ParameterIndex,[out] D3D11_SIGNATURE_PARAMETER_DESC *pDesc)
void None None.OMSetDepthStencilState([in] ID3D10DepthStencilState *pDepthStencilState,[in] UINT StencilRef)
HRESULT None mfplat.MFDeserializeAttributesFromStream(IMFAttributes *pAttr None,DWORD dwOptions None,IStream *pStm None)
HRESULT None shlwapi.IStream_Size(_In_ IStream *pstm,_Out_ ULARGE_INTEGER *pui)
PDH_STATUS None pdh.PdhOpenLog(_In_ LPCTSTR szLogFileName,_In_ DWORD dwAccessFlags,_In_ LPDWORD lpdwLogType,_In_ PDH_HQUERY hQuery,_In_ DWORD dwMaxSize,_In_ LPCTSTR szUserCaption,_Out_ PDH_HLOG *phLog)
PDH_STATUS None pdh.PdhOpenLogW(_In_ LPCTSTR szLogFileName,_In_ DWORD dwAccessFlags,_In_ LPDWORD lpdwLogType,_In_ PDH_HQUERY hQuery,_In_ DWORD dwMaxSize,_In_ LPCTSTR szUserCaption,_Out_ PDH_HLOG *phLog)
PDH_STATUS None pdh.PdhOpenLogA(_In_ LPCTSTR szLogFileName,_In_ DWORD dwAccessFlags,_In_ LPDWORD lpdwLogType,_In_ PDH_HQUERY hQuery,_In_ DWORD dwMaxSize,_In_ LPCTSTR szUserCaption,_Out_ PDH_HLOG *phLog)
SECURITY_STATUS WINAPI ncrypt.SslFreeBuffer(_In_ PVOID pvInput)
typedef None None.HRESULT(CALLBACK *PDXVAHDSW_CreateVideoProcessor None)
DNS_STATUS WINAPI dnsapi.DnsGetProxyInformation(_In_ PCWSTR hostName,_Inout_ DNS_PROXY_INFORMATION *proxyInformation,_Inout_opt_ DNS_PROXY_INFORMATION *defaultProxyInformation,_In_opt_ DNS_PROXY_COMPLETION_ROUTINE completionRoutine,_In_opt_ void *completionContext)
HRESULT None shlwapi.IStream_Reset(_In_ IStream *pstm)
ULONGLONG None None.EventDescGetKeyword([in] PEVENT_DESCRIPTOR EventDescriptor)
HRESULT None mfplat.MFRemovePeriodicCallback(_In_ DWORD dwKey)
HRESULT None None.GetFrontBufferData([in] UINT iSwapChain,[in] IDirect3DSurface9 *pDestSurface)
HRESULT None None.MFSetAttribute2UINT32asUINT64(_In_ IMFAttributes *pAttributes,_In_ REFGUID guidKey,_In_ UINT32 unHigh32,_In_ UINT32 unLow32)
PDH_STATUS None pdh.PdhEnumObjectItems(_In_ LPCTSTR szDataSource,_In_ LPCTSTR szMachineName,_In_ LPCTSTR szObjectName,_Out_ LPTSTR mszCounterList,_Inout_ LPDWORD pcchCounterListLength,_Out_ LPTSTR mszInstanceList,_Inout_ LPDWORD pcchInstanceListLength,_In_ DWORD dwDetailLevel,_In_ DWORD dwFlags)
PDH_STATUS None pdh.PdhEnumObjectItemsW(_In_ LPCTSTR szDataSource,_In_ LPCTSTR szMachineName,_In_ LPCTSTR szObjectName,_Out_ LPTSTR mszCounterList,_Inout_ LPDWORD pcchCounterListLength,_Out_ LPTSTR mszInstanceList,_Inout_ LPDWORD pcchInstanceListLength,_In_ DWORD dwDetailLevel,_In_ DWORD dwFlags)
PDH_STATUS None pdh.PdhEnumObjectItemsA(_In_ LPCTSTR szDataSource,_In_ LPCTSTR szMachineName,_In_ LPCTSTR szObjectName,_Out_ LPTSTR mszCounterList,_Inout_ LPDWORD pcchCounterListLength,_Out_ LPTSTR mszInstanceList,_Inout_ LPDWORD pcchInstanceListLength,_In_ DWORD dwDetailLevel,_In_ DWORD dwFlags)
HRESULT None None.GetSourceRect([out] RECT *pRect)
BOOL None dxgidebug.GetBreakOnID([in] DXGI_DEBUG_ID Producer,[in] DXGI_INFO_QUEUE_MESSAGE_ID ID)
HRESULT None mf.MFCreateAC3MediaSink(_In_ IMFByteStream *pTargetByteStream,_In_ IMFMediaType *pAudioMediaType,_Out_ IMFMediaSink **ppMediaSink)
HRESULT None mfplat.MFCancelCreateFile(_In_ IUnknown *pCancelCookie)
HRESULT None None.SetVertexShader([in] IDirect3DVertexShader9 *pShader)
void None None.RSGetState([out] ID3D10RasterizerState **ppRasterizerState)
void None dxgidebug.ClearRetrievalFilter([in] DXGI_DEBUG_ID Producer)
LWSTDAPI None api-ms-win-shcore-thread-l1-1-0.GetProcessReference(_Out_ IUnknown **punk)
HRESULT None None.GetRenderState([in] D3DRENDERSTATETYPE State,[out None None,retval] DWORD *pValue)
void None None.InterlockedOr(in R dest,in T value,out T original_value)
HRESULT None mf.MFCreateSampleGrabberSinkActivate(IMFMediaType *pIMFMediaType None,IMFSampleGrabberSinkCallback *pIMFSampleGrabberSinkCallback None,IMFActivate **ppIActivate None)
HRESULT None mfreadwrite.MFCreateSourceReaderFromByteStream(_In_ IMFByteStream *pByteStream,_In_ IMFAttributes *pAttributes,_Out_ IMFSourceReader **ppSourceReader)
HRESULT None mfplat.MFRegisterLocalByteStreamHandler(_In_ PCWSTR szFileExtension,_In_ PCWSTR szMimeType,_In_ IMFActivate *pActivate)
SECURITY_STATUS WINAPI ncrypt.SslDecrementProviderReferenceCount(_In_ NCRYPT_PROV_HANDLE hSslProvider)
BOOL None dxgidebug.GetMuteDebugOutput([in] DXGI_DEBUG_ID Producer)
HRESULT None shlwapi.IUnknown_GetWindow(_In_ IUnknown *punk,_Out_ HWND *phwnd)
BOOL WINAPI kernel32.QueryPerformanceFrequency(_Out_ LARGE_INTEGER *lpFrequency)
HRESULT None mfplat.MFCreateAsyncResult(IUnknown *punkObject None,IMFAsyncCallback *pCallback None,IUnknown *punkState None,IMFAsyncResult **ppAsyncResult None)
HRESULT None mfplat.MFGetWorkQueueMMCSSTaskId(_In_ DWORD dwWorkQueueId,_Out_ LPDWORD pdwTaskId)
HRESULT None mfplat.MFCancelWorkItem(_In_ MFWORKITEM_KEY Key)
HRESULT None mf.MFCreateDeviceSource(_In_ IMFAttributes *pAttributes,_Out_ IMFMediaSource **ppSource)
NTSTATUS WINAPI ntdll.NtQuerySystemInformation(_In_ SYSTEM_INFORMATION_CLASS SystemInformationClass,_Inout_ PVOID SystemInformation,_In_ ULONG SystemInformationLength,_Out_opt_ PULONG ReturnLength)
HRESULT None mfplat.MFTUnregisterLocal(_In_ IClassFactory *pClassFactory)
HRESULT None mf.MFCreateASFSplitter(IMFASFSplitter **ppISplitter None)
HRESULT None mfplat.MFCreateDXGISurfaceBuffer(_In_ REFIID riid,_In_ IUnknown *punkSurface,_In_ UINT uSubresourceIndex,_In_ BOOL fBottomUpWhenLinear,_Out_ IMFMediaBuffer **ppBuffer)
HRESULT None evr.MFCreateVideoSampleFromSurface(_In_ IUnknown *pUnkSurface,_Out_ IMFSample **ppSample)
HRESULT None mf.MFGetSupportedSchemes(_Out_ PROPVARIANT *pPropVarSchemeArray)
BOOL WINAPI kernel32.SetComputerName(_In_ LPCTSTR lpComputerName)
BOOL WINAPI kernel32.SetComputerNameW(_In_ LPCTSTR lpComputerName)
BOOL WINAPI kernel32.SetComputerNameA(_In_ LPCTSTR lpComputerName)
BOOL None wininet.InternetCanonicalizeUrl(_In_ LPCTSTR lpszUrl,_Out_ LPTSTR lpszBuffer,_Inout_ LPDWORD lpdwBufferLength,_In_ DWORD dwFlags)
BOOL None wininet.InternetCanonicalizeUrlW(_In_ LPCTSTR lpszUrl,_Out_ LPTSTR lpszBuffer,_Inout_ LPDWORD lpdwBufferLength,_In_ DWORD dwFlags)
BOOL None wininet.InternetCanonicalizeUrlA(_In_ LPCTSTR lpszUrl,_Out_ LPTSTR lpszBuffer,_Inout_ LPDWORD lpdwBufferLength,_In_ DWORD dwFlags)
HRESULT None mf.MFCreateCredentialCache(IMFNetCredentialCache **ppCache None)
HRESULT None mfplat.MFLockDXGIDeviceManager(_Out_ UINT *pResetToken,_Out_ IMFDXGIDeviceManager **ppManager)
HRESULT None mfplat.MFAllocateWorkQueueEx(_In_ MFASYNC_WORKQUEUE_TYPE WorkQueueType,_Out_ DWORD *pdwWorkQueue)
STDAPI None mf.MFCreateDeviceSourceActivate(_In_ IMFAttributes *pAttributes,_Out_ IMFActivate **ppActivate)
HRESULT None None.GetVertexDeclaration([out] IDirect3DVertexDeclaration9 **ppDecl)
PDH_STATUS None pdh.PdhBrowseCountersH(_In_ PPDH_BROWSE_DLG_CONFIG pBrowseDlgData)
PDH_STATUS None pdh.PdhBrowseCountersHW(_In_ PPDH_BROWSE_DLG_CONFIG pBrowseDlgData)
PDH_STATUS None pdh.PdhBrowseCountersHA(_In_ PPDH_BROWSE_DLG_CONFIG pBrowseDlgData)
void None None.IAGetInputLayout([out] ID3D10InputLayout **ppInputLayout)
HRESULT WINAPI None.WindowsCompareStringOrdinal(_In_ HSTRING string1,_In_ HSTRING string2,_Out_ INT32 *result)
HRESULT None mfplat.MFAddPeriodicCallback(_In_ MFPERIODICCALLBACK Callback,_In_ IUnknown *pContext,_Out_ DWORD *pdwKey)
void None None.DrawIndexedInstanced([in] UINT IndexCountPerInstance,[in] UINT InstanceCount,[in] UINT StartIndexLocation,[in] INT BaseVertexLocation,[in] UINT StartInstanceLocation)
BOOL None dxgidebug.GetBreakOnCategory([in] DXGI_DEBUG_ID Producer,[in] DXGI_INFO_QUEUE_MESSAGE_CATEGORY Category)
HINTERNET None wininet.InternetConnect(_In_ HINTERNET hInternet,_In_ LPCTSTR lpszServerName,_In_ INTERNET_PORT nServerPort,_In_ LPCTSTR lpszUsername,_In_ LPCTSTR lpszPassword,_In_ DWORD dwService,_In_ DWORD dwFlags,_In_ DWORD_PTR dwContext)
HINTERNET None wininet.InternetConnectW(_In_ HINTERNET hInternet,_In_ LPCTSTR lpszServerName,_In_ INTERNET_PORT nServerPort,_In_ LPCTSTR lpszUsername,_In_ LPCTSTR lpszPassword,_In_ DWORD dwService,_In_ DWORD dwFlags,_In_ DWORD_PTR dwContext)
HINTERNET None wininet.InternetConnectA(_In_ HINTERNET hInternet,_In_ LPCTSTR lpszServerName,_In_ INTERNET_PORT nServerPort,_In_ LPCTSTR lpszUsername,_In_ LPCTSTR lpszPassword,_In_ DWORD dwService,_In_ DWORD dwFlags,_In_ DWORD_PTR dwContext)
HRESULT None mfplat.MFCreateTempFile(MF_FILE_ACCESSMODE AccessMode None,MF_FILE_OPENMODE OpenMode None,MF_FILE_FLAGS fFlags None,IMFByteStream **ppIByteStream None)
PDH_STATUS None pdh.PdhExpandWildCardPathH(_In_ PDH_HLOG hDataSource,_In_ LPCTSTR szWildCardPath,_Out_ LPTSTR mszExpandedPathList,_Inout_ LPDWORD pcchPathListLength,_In_ DWORD dwFlags)
PDH_STATUS None pdh.PdhExpandWildCardPathHW(_In_ PDH_HLOG hDataSource,_In_ LPCTSTR szWildCardPath,_Out_ LPTSTR mszExpandedPathList,_Inout_ LPDWORD pcchPathListLength,_In_ DWORD dwFlags)
PDH_STATUS None pdh.PdhExpandWildCardPathHA(_In_ PDH_HLOG hDataSource,_In_ LPCTSTR szWildCardPath,_Out_ LPTSTR mszExpandedPathList,_Inout_ LPDWORD pcchPathListLength,_In_ DWORD dwFlags)
PDH_STATUS None pdh.PdhCloseLog(_In_ PDH_HLOG hLog,_In_ DWORD dwFlags)
void None None.GenerateMips([in] ID3D10ShaderResourceView *pShaderResourceView)
HRESULT None None.SetSamplerState([in] DWORD Sampler,[in] D3DSAMPLERSTATETYPE Type,[in] DWORD Value)
BOOL WINAPI user32.GetMessage(_Out_ LPMSG lpMsg,_In_opt_ HWND hWnd,_In_ UINT wMsgFilterMin,_In_ UINT wMsgFilterMax)
BOOL WINAPI user32.GetMessageW(_Out_ LPMSG lpMsg,_In_opt_ HWND hWnd,_In_ UINT wMsgFilterMin,_In_ UINT wMsgFilterMax)
BOOL WINAPI user32.GetMessageA(_Out_ LPMSG lpMsg,_In_opt_ HWND hWnd,_In_ UINT wMsgFilterMin,_In_ UINT wMsgFilterMax)
ULONG None advapi32.PerfDecrementULongCounterValue(_In_ HANDLE hProvider,_In_ PPERF_COUNTERSET_INSTANCE pInstance,_In_ ULONG CounterId,_In_ ULONG lValue)
PDH_STATUS None pdh.PdhUpdateLog(_In_ PDH_HLOG hLog,_In_ LPCTSTR szUserString)
PDH_STATUS None pdh.PdhUpdateLogW(_In_ PDH_HLOG hLog,_In_ LPCTSTR szUserString)
PDH_STATUS None pdh.PdhUpdateLogA(_In_ PDH_HLOG hLog,_In_ LPCTSTR szUserString)
typedef None None.HRESULT(CALLBACK *PDXVAHDSW_GetVideoProcessorInputFormats None)
void None dxgidebug.ClearStoredMessages([in] DXGI_DEBUG_ID Producer)
HRESULT None mf.MFCreateSequencerSegmentOffset(_In_ MFSequencerElementId dwId,_In_ MFTIME hnsOffset,_Out_ PROPVARIANT *pvarSegmentOffset)
ULONG WINAPI advapi32.PerfCloseQueryHandle(_In_ HANDLE hQuery)
HRESULT None mfplat.MFCreateMemoryBuffer(DWORD cbMaxLength None,IMFMediaBuffer **ppBuffer None)
HRESULT None mfplat.MFInitMediaTypeFromWaveFormatEx(IMFMediaType *pMFType None,const WAVEFORMATEX *pWaveFormat,UINT32 cbBufSize None)
PDH_STATUS None pdh.PdhGetCounterInfo(_In_ PDH_HCOUNTER hCounter,_In_ BOOLEAN bRetrieveExplainText,_Inout_ LPDWORD pdwBufferSize,_Out_ PPDH_COUNTER_INFO lpBuffer)
PDH_STATUS None pdh.PdhGetCounterInfoW(_In_ PDH_HCOUNTER hCounter,_In_ BOOLEAN bRetrieveExplainText,_Inout_ LPDWORD pdwBufferSize,_Out_ PPDH_COUNTER_INFO lpBuffer)
PDH_STATUS None pdh.PdhGetCounterInfoA(_In_ PDH_HCOUNTER hCounter,_In_ BOOLEAN bRetrieveExplainText,_Inout_ LPDWORD pdwBufferSize,_Out_ PPDH_COUNTER_INFO lpBuffer)
const DXVA2_Fixed32 None.DXVA2_Fixed32TransparentAlpha(void None None)
BOOL None mfplat.MFCompareFullToPartialMediaType(IMFMediaType *pMFTypeFull None,IMFMediaType *pMFTypePartial None)
void None None.Draw([in] UINT VertexCount,[in] UINT StartVertexLocation)
UINT64 None None.MFGetAttributeUINT64(_In_ IMFAttributes *pAttributes,_In_ REFGUID guidKey,_In_ UINT64 unDefault)
HRESULT None mfplat.MFCreateSystemTimeSource(IMFPresentationTimeSource **ppSystemTimeSource None)
HRESULT None None.MFSetAttributeSize(_In_ IMFAttributes *pAttributes,_In_ REFGUID guidKey,_In_ UINT32 unWidth,_In_ UINT32 unHeight)
typedef None None.HRESULT(CALLBACK *PDXVAHDSW_DestroyVideoProcessor None)
HRESULT None mfplat.MFCreateMediaType(IMFMediaType **ppMFType None)
ULONG None advapi32.PerfDecrementULongLongCounterValue(_In_ HANDLE hProvider,_In_ PPERF_COUNTERSET_INSTANCE pInstance,_In_ ULONG CounterId,_In_ ULONGLONG llValue)
HRESULT None mfplat.MFLockPlatform(void None None)
STDAPI None oleacc.AccessibleObjectFromPoint(_In_ POINT ptScreen,_Out_ IAccessible **ppacc,_Out_ VARIANT *pvarChild)
void None None.SetCursorPosition([in] INT X,[in] INT Y,[in] DWORD Flags)
HRESULT None mf.MFCreatePMPServer(_In_ DWORD dwCreationFlags,_Out_ IMFPMPServer **ppPMPServer)
void None None.IAGetVertexBuffers([in] UINT StartSlot,[in] UINT NumBuffers,[out] ID3D10Buffer **ppVertexBuffers,[out] UINT *pStrides,[out] UINT *pOffsets)
HRESULT None mfplat.MFCreateDXGIDeviceManager(_Out_ UINT *pResetToken,_Out_ IMFDXGIDeviceManager **ppDXVAManager)
HRESULT None None.SetTexture([in] DWORD Sampler,[in] IDirect3DBaseTexture9 *pTexture)
void None None.GetTextFilterSize(UINT *Width None,UINT *Height None)
HRESULT None mfplat.MFBeginCreateFile(_In_ MF_FILE_ACCESSMODE AccessMode,_In_ MF_FILE_OPENMODE OpenMode,_In_ MF_FILE_FLAGS fFlags,_In_ LPCWSTR pwszFilePath,_In_ IMFAsyncCallback *pCallback,_In_ IUnknown *pState,_Out_ IUnknown **ppCancelCookie)
HRESULT None mf.MFGetService(IUnknown *punkObject None,REFGUID guidService None,REFIID riid None,LPVOID *ppvObject None)
PDH_STATUS __stdcall None.CounterPathCallBack(_In_ DWORD_PTR dwArg)
HRESULT None mfplat.MFInitVideoFormat(_Out_ MFVIDEOFORMAT *pVideoFormat,_In_ MFStandardVideoFormat type)
PDH_STATUS None pdh.PdhEnumMachinesH(_In_ PDH_HLOG hDataSource,_Out_ LPTSTR mszMachineNameList,_Inout_ LPDWORD pcchBufferLength)
PDH_STATUS None pdh.PdhEnumMachinesHW(_In_ PDH_HLOG hDataSource,_Out_ LPTSTR mszMachineNameList,_Inout_ LPDWORD pcchBufferLength)
PDH_STATUS None pdh.PdhEnumMachinesHA(_In_ PDH_HLOG hDataSource,_Out_ LPTSTR mszMachineNameList,_Inout_ LPDWORD pcchBufferLength)
void RPC_ENTRY rpcrt4.NdrServerCallAll(PRPC_MESSAGE pRpcMsg None)
PDH_STATUS None pdh.PdhOpenQueryH(_In_ PDH_HLOG hDataSource,_In_ DWORD_PTR dwUserData,_Out_ PDH_HQUERY *phQuery)
typedef None None.void(*MFPERIODICCALLBACK None None)
UINT64 None None.Pack2UINT32AsUINT64(_In_ UINT32 unHigh,_In_ UINT32 unLow)
HRESULT None mfplat.MFCreateMediaBufferWrapper(_In_ IMFMediaBuffer *pBuffer,_In_ DWORD cbOffset,_In_ DWORD dwLength,_Out_ IMFMediaBuffer **ppBuffer)
HRESULT None None.MFGetAttributeRatio(_In_ IMFAttributes *pAttributes,_In_ REFGUID guidKey,_Out_ UINT32 *pnNumerator,_Out_ UINT32 *punDenominator)
HRESULT None mfplat.MFUnlockPlatform(void None None)
UINT None gdi32.GetPaletteEntries(_In_ HPALETTE hpal,_In_ UINT iStartIndex,_In_ UINT nEntries,_Out_ LPPALETTEENTRY lppe)
HRESULT None mf.MFCreateAggregateSource(_In_ IMFCollection *pSourceCollection,_Out_ IMFMediaSource **ppAggSource)
HRESULT None mfplat.MFTEnum(_In_ GUID guidCategory,_In_ UINT32 Flags,_In_ MFT_REGISTER_TYPE_INFO *pInputType,_In_ MFT_REGISTER_TYPE_INFO *pOutputType,_In_ IMFAttributes *pAttributes,_Out_ CLSID **ppclsidMFT,_Out_ UINT32 *pcMFTs)
PDH_STATUS None pdh.PdhEnumObjects(_In_ LPCTSTR szDataSource,_In_ LPCTSTR szMachineName,_Out_ LPTSTR mszObjectList,_Inout_ LPDWORD pcchBufferLength,_In_ DWORD dwDetailLevel,_In_ BOOL bRefresh)
PDH_STATUS None pdh.PdhEnumObjectsW(_In_ LPCTSTR szDataSource,_In_ LPCTSTR szMachineName,_Out_ LPTSTR mszObjectList,_Inout_ LPDWORD pcchBufferLength,_In_ DWORD dwDetailLevel,_In_ BOOL bRefresh)
PDH_STATUS None pdh.PdhEnumObjectsA(_In_ LPCTSTR szDataSource,_In_ LPCTSTR szMachineName,_Out_ LPTSTR mszObjectList,_Inout_ LPDWORD pcchBufferLength,_In_ DWORD dwDetailLevel,_In_ BOOL bRefresh)
BOOL WINAPI user32.EnableWindow(_In_ HWND hWnd,_In_ BOOL bEnable)
HRESULT None mfplat.MFCreateStreamOnMFByteStream(_In_ IMFByteStream *pByteStream,_Out_ IStream **ppStream)
LRESULT CALLBACK None.GetMsgProc(_In_ int code,_In_ WPARAM wParam,_In_ LPARAM lParam)
UINT64 None None.Pack2UINT32AsUINT64(_In_ UINT32 unHigh,_In_ UINT32 unLow)
DWORD STDAPI mfplat.MFMapDXGIFormatToDX9Format(_In_ DXGI_FORMAT dx11)
STDAPI None mf.MFLoadSignedLibrary(_In_ LPCWSTR pszName,_Out_ IMFSignedLibrary **ppLib)
DWORD STDAPI mfplat.MFMapDXGIFormatToDX9Format(_In_ DXGI_FORMAT dx11)
BOOL None cabinet.CloseCompressor(_In_ COMPRESSOR_HANDLE CompressorHandle)
UINT64 None None.PackRatio([in] UINT32 nNumerator,[in] UINT32 unDenominator)
PDH_STATUS None pdh.PdhGetRawCounterValue(_In_ PDH_HCOUNTER hCounter,_Out_ LPDWORD lpdwType,_Out_ PPDH_RAW_COUNTER pValue)
typedef None None.HRESULT(CALLBACK *PDXVAHDSW_ProposeVideoPrivateFormat None)
DWORD STDAPI mfplat.MFMapDXGIFormatToDX9Format(_In_ DXGI_FORMAT dx11)
int None None.WlxSwitchDesktopToWinlogon(_In_ HANDLE hWlx)
HRESULT None mf.MFCreateASFStreamingMediaSinkActivate(IMFActivate *pByteStreamActivate None,IMFASFContentInfo *pContentInfo None,IMFActivate **ppIActivate None)
void None None.IASetIndexBuffer([in] ID3D10Buffer *pIndexBuffer,[in] DXGI_FORMAT Format,[in] UINT Offset)
UINT64 None None.Pack2UINT32AsUINT64(_In_ UINT32 unHigh,_In_ UINT32 unLow)
HRESULT None None.GetViewport([out] D3DVIEWPORT9 *pViewport)
BOOL WINAPI user32.LockSetForegroundWindow(_In_ UINT uLockCode)
void None None.Unmap([in] UINT Subresource)
HRESULT None mfplat.MFScheduleWorkItemEx(_In_ IMFAsyncResult *pResult,_In_ INT64 Timeout,_Out_ MFWORKITEM_KEY *pKey)
HRESULT None mfplat.MFScheduleWorkItemEx(_In_ IMFAsyncResult *pResult,_In_ INT64 Timeout,_Out_ MFWORKITEM_KEY *pKey)
HRESULT None mf.MFGetService(IUnknown *punkObject None,REFGUID guidService None,REFIID riid None,LPVOID *ppvObject None)
HRESULT None winhttp.Send([in None None,optional] VARIANT Body)
HRESULT None oleacc.get_accKeyboardShortcut([in] VARIANT varID,[out None None,retval] BSTR *pszKeyboardShortcut)
UINT64 None None.Pack2UINT32AsUINT64(_In_ UINT32 unHigh,_In_ UINT32 unLow)
HRESULT None None.SetExceptionMode([in] UINT RaiseFlags)
void None None.CheckCounterInfo([out] D3D10_COUNTER_INFO *pCounterInfo)
HRESULT None None.CreateDevice([in] UINT Adapter,[in] D3DDEVTYPE DeviceType,[in] HWND hFocusWindow,[in] DWORD BehaviorFlags,[in None None,out] D3DPRESENT_PARAMETERS *pPresentationParameters,[out None None,retval] IDirect3DDevice9 **ppReturnedDeviceInterface)
HRESULT None None.GetGPUThreadPriority(INT *pPriority None)
BOOL None wininet.InternetQueryDataAvailable(_In_ HINTERNET hFile,_Out_ LPDWORD lpdwNumberOfBytesAvailable,_In_ DWORD dwFlags,_In_ DWORD_PTR dwContext)
HRESULT None None.Map([in] UINT Subresource,[in] D3D10_MAP MapType,[in] UINT MapFlags,[out] void **ppData)
void None None.GetPredication([out] ID3D10Predicate **ppPredicate,[out] BOOL *pPredicateValue)
HRESULT None mf.MFCreatePresentationClock(IMFPresentationClock **ppPresentationClock None)
HRESULT None mf.MFGetTopoNodeCurrentType(IMFTopologyNode *pNode None,DWORD dwStreamIndex None,BOOL fOutput None,_Out_ IMFMediaType **ppType)
HRESULT None None.D3DXCreateTextureFromResourceEx(_In_ LPDIRECT3DDEVICE9 pDevice,_In_ HMODULE hSrcModule,_In_ LPCTSTR pSrcResource,_In_ UINT Width,_In_ UINT Height,_In_ UINT MipLevels,_In_ DWORD Usage,_In_ D3DFORMAT Format,_In_ D3DPOOL Pool,_In_ DWORD Filter,_In_ DWORD MipFilter,_In_ D3DCOLOR ColorKey,_Inout_ D3DXIMAGE_INFO *pSrcInfo,_Out_ PALETTEENTRY *pPalette,_Out_ LPDIRECT3DTEXTURE9 *ppTexture)
UINT None gdi32.SetSystemPaletteUse(_In_ HDC hdc,_In_ UINT uUsage)
HRESULT None mf.MFGetService(IUnknown *punkObject None,REFGUID guidService None,REFIID riid None,LPVOID *ppvObject None)
DWORD STDAPI mfplat.MFMapDXGIFormatToDX9Format(_In_ DXGI_FORMAT dx11)
HRESULT None mfplat.MFCreateMFByteStreamOnStream(_In_ IStream *pStream,_Out_ IMFByteStream **ppByteStream)
void None None.IASetIndexBuffer([in] ID3D10Buffer *pIndexBuffer,[in] DXGI_FORMAT Format,[in] UINT Offset)
HRESULT None mf.CreateNamedPropertyStore(_Out_ INamedPropertyStore **ppStore)
UINT64 None None.Pack2UINT32AsUINT64(_In_ UINT32 unHigh,_In_ UINT32 unLow)
HRESULT None mfplat.MFScheduleWorkItemEx(_In_ IMFAsyncResult *pResult,_In_ INT64 Timeout,_Out_ MFWORKITEM_KEY *pKey)
HRESULT None mf.MFCreateASFStreamingMediaSink(IMFByteStream *pIByteStream None,IMFMediaSink **ppIMediaSink None)
DNS_STATUS WINAPI dnsapi.DnsReplaceRecordSet(_In_ PDNS_RECORD pNewSet,_In_ DWORD Options,_In_opt_ HANDLE hContext,_Inout_opt_ PVOID pExtraInfo,_Inout_opt_ PVOID pReserved)
DNS_STATUS WINAPI dnsapi.DnsReplaceRecordSetA(_In_ PDNS_RECORD pNewSet,_In_ DWORD Options,_In_opt_ HANDLE hContext,_Inout_opt_ PVOID pExtraInfo,_Inout_opt_ PVOID pReserved)
DNS_STATUS WINAPI dnsapi.DnsReplaceRecordSetW(_In_ PDNS_RECORD pNewSet,_In_ DWORD Options,_In_opt_ HANDLE hContext,_Inout_opt_ PVOID pExtraInfo,_Inout_opt_ PVOID pReserved)
HRESULT None mfplat.MFCreateStreamOnMFByteStream(_In_ IMFByteStream *pByteStream,_Out_ IStream **ppStream)
PDH_STATUS None pdh.PdhRemoveCounter(_In_ PDH_HCOUNTER hCounter)
void None None.SetTextFilterSize([in] UINT Width,[in] UINT Height)
ULONG None advapi32.PerfIncrementULongCounterValue(_In_ HANDLE hProvider,_In_ PPERF_COUNTERSET_INSTANCE pInstance,_In_ ULONG CounterId,_In_ ULONG lValue)
HRESULT None None.GetRenderTarget([in] DWORD RenderTargetIndex,[out] IDirect3DSurface9 **ppRenderTarget)
HRESULT None mf.MFCreatePresentationDescriptorFromASFProfile(IMFASFProfile *pIProfile None,IMFPresentationDescriptor **ppIPD None)
HRESULT None mfplat.MFInitMediaTypeFromMFVideoFormat(IMFMediaType *pMFType None,const MFVIDEOFORMAT *pMFVF,UINT32 cbBufSize None)
PDH_STATUS None pdh.PdhExpandCounterPath(_In_ LPCTSTR szWildCardPath,_Out_ LPTSTR mszExpandedPathList,_Inout_ LPDWORD pcchPathListLength)
PDH_STATUS None pdh.PdhExpandCounterPathW(_In_ LPCTSTR szWildCardPath,_Out_ LPTSTR mszExpandedPathList,_Inout_ LPDWORD pcchPathListLength)
PDH_STATUS None pdh.PdhExpandCounterPathA(_In_ LPCTSTR szWildCardPath,_Out_ LPTSTR mszExpandedPathList,_Inout_ LPDWORD pcchPathListLength)
HRESULT None mfplat.MFCreateVideoSampleAllocatorEx(_In_ REFIID riid,_Out_ void** ppSampleAllocator)
HRESULT None None.GetDisplayMode([in] UINT iSwapChain,[out] D3DDISPLAYMODE *pMode)
HRESULT None mfplat.MFCreateAttributes(_Out_ IMFAttributes **ppMFAttributes,_In_ UINT32 cInitialSize)
HRESULT None None.GetSwapChain([in] UINT iSwapChain,[in] IDirect3DSwapChain9 **ppSwapChain)
float None None.ddy_coarse(in float value)
ULONG WINAPI advapi32.PerfEnumerateCounterSet(_In_opt_ LPCWSTR szMachine,_Out_opt_ LPGUID pCounterSetIds,DWORD cCounterSetIds None,_Out_ LPDWORD pcCounterSetIdsActual)
BOOLAPI None wininet.UnlockUrlCacheEntryStream(_In_ HANDLE hUrlCacheStream,_In_ DWORD dwReserved)
BOOL WINAPI kernel32.GetProcessMemoryInfo(_In_ HANDLE Process,_Out_ PPROCESS_MEMORY_COUNTERS ppsmemCounters,_In_ DWORD cb)
BOOL None shlwapi.SHCreateThread(_In_ LPTHREAD_START_ROUTINE pfnThreadProc,_In_opt_ void *pData,_In_ SHCT_FLAGS dwFlags,_In_opt_ LPTHREAD_START_ROUTINE pfnCallback)
PDH_STATUS None pdh.PdhEnumObjectsH(_In_ PDH_HLOG hDataSource,_In_ LPCTSTR szMachineName,_Out_ LPTSTR mszObjectList,_Inout_ LPDWORD pcchBufferLength,_In_ DWORD dwDetailLevel,_In_ BOOL bRefresh)
PDH_STATUS None pdh.PdhEnumObjectsHW(_In_ PDH_HLOG hDataSource,_In_ LPCTSTR szMachineName,_Out_ LPTSTR mszObjectList,_Inout_ LPDWORD pcchBufferLength,_In_ DWORD dwDetailLevel,_In_ BOOL bRefresh)
PDH_STATUS None pdh.PdhEnumObjectsHA(_In_ PDH_HLOG hDataSource,_In_ LPCTSTR szMachineName,_Out_ LPTSTR mszObjectList,_Inout_ LPDWORD pcchBufferLength,_In_ DWORD dwDetailLevel,_In_ BOOL bRefresh)
ULONG WINAPI advapi32.PerfEnumerateCounterSet(_In_opt_ LPCWSTR szMachine,_Out_opt_ LPGUID pCounterSetIds,DWORD cCounterSetIds None,_Out_ LPDWORD pcCounterSetIdsActual)
ULONG None advapi32.PerfSetULongCounterValue(_In_ HANDLE hProvider,_In_ PPERF_COUNTERSET_INSTANCE pInstance,_In_ ULONG CounterId,_In_ ULONG lValue)
PDH_STATUS None pdh.PdhExpandCounterPath(_In_ LPCTSTR szWildCardPath,_Out_ LPTSTR mszExpandedPathList,_Inout_ LPDWORD pcchPathListLength)
PDH_STATUS None pdh.PdhExpandCounterPathW(_In_ LPCTSTR szWildCardPath,_Out_ LPTSTR mszExpandedPathList,_Inout_ LPDWORD pcchPathListLength)
PDH_STATUS None pdh.PdhExpandCounterPathA(_In_ LPCTSTR szWildCardPath,_Out_ LPTSTR mszExpandedPathList,_Inout_ LPDWORD pcchPathListLength)
UINT WINAPI kernel32.GetSystemWow64Directory(_Out_ LPTSTR lpBuffer,_In_ UINT uSize)
UINT WINAPI kernel32.GetSystemWow64DirectoryW(_Out_ LPTSTR lpBuffer,_In_ UINT uSize)
UINT WINAPI kernel32.GetSystemWow64DirectoryA(_Out_ LPTSTR lpBuffer,_In_ UINT uSize)
ULONG None advapi32.PerfStartProviderEx(_In_ LPGUID ProviderGuid,_In_opt_ PPERF_PROVIDER_CONTEXT ProviderContext,_Out_ HANDLE *phProvider)
PDH_STATUS None pdh.PdhSetQueryTimeRange(_In_ PDH_HQUERY hQuery,_In_ PPDH_TIME_INFO pInfo)
int None None.GET_X_LPARAM(LPARAM lParam None)
HRESULT None mf.MFCreateStandardQualityManager(_Out_ IMFQualityManager **ppQualityManager)
void None None.OMGetBlendState([out] ID3D10BlendState **ppBlendState,[out] FLOAT BlendFactor[4],[out] UINT *pSampleMask)
HRESULT None None.SetStreamSourceFreq([in] UINT StreamNumber,[in] UINT FrequencyParameter)
void None None.HSSetShader(ID3D11HullShader *pHullShader None,ID3D11ClassInstance *const *ppClassInstances,UINT NumClassInstances None)
PDH_STATUS None pdh.PdhGetFormattedCounterArray(_In_ PDH_HCOUNTER hCounter,_In_ DWORD dwFormat,_Inout_ LPDWORD lpdwBufferSize,_Out_ LPDWORD lpdwBufferCount,_Out_ PPDH_FMT_COUNTERVALUE_ITEM ItemBuffer)
PDH_STATUS None pdh.PdhGetFormattedCounterArrayW(_In_ PDH_HCOUNTER hCounter,_In_ DWORD dwFormat,_Inout_ LPDWORD lpdwBufferSize,_Out_ LPDWORD lpdwBufferCount,_Out_ PPDH_FMT_COUNTERVALUE_ITEM ItemBuffer)
PDH_STATUS None pdh.PdhGetFormattedCounterArrayA(_In_ PDH_HCOUNTER hCounter,_In_ DWORD dwFormat,_Inout_ LPDWORD lpdwBufferSize,_Out_ LPDWORD lpdwBufferCount,_Out_ PPDH_FMT_COUNTERVALUE_ITEM ItemBuffer)
ULONG WINAPI advapi32.PerfDeleteCounters(_In_ HANDLE hQuery,_Inout_ PPERF_COUNTER_IDENTIFIER pCounters,DWORD cbCounters None)
BOOL None dxgidebug.GetBreakOnSeverity([in] DXGI_DEBUG_ID Producer,[in] DXGI_INFO_QUEUE_MESSAGE_SEVERITY Severity)
void None None.InterlockedCompareExchange(in R dest,in T compare_value,in T value,out T original_value)
BOOL WINAPI kernel32.IsProcessorFeaturePresent(_In_ DWORD ProcessorFeature)
ULONG WINAPI advapi32.PerfOpenQueryHandle(_In_opt_ LPCWSTR szMachine,_Out_ HANDLE hQuery)
HRESULT None mf.MFCreateTopology(IMFTopology **ppTopo None)
LONGLONG WINAPI mfplat.MFllMulDiv(LONGLONG a None,LONGLONG b None,LONGLONG c None,LONGLONG d None)
PDH_STATUS None pdh.PdhParseInstanceName(_In_ LPCTSTR szInstanceString,_Out_ LPTSTR szInstanceName,_Inout_ LPDWORD pcchInstanceNameLength,_Out_ LPTSTR szParentName,_Inout_ LPDWORD pcchParentNameLength,_Out_ LPDWORD lpIndex)
PDH_STATUS None pdh.PdhParseInstanceNameW(_In_ LPCTSTR szInstanceString,_Out_ LPTSTR szInstanceName,_Inout_ LPDWORD pcchInstanceNameLength,_Out_ LPTSTR szParentName,_Inout_ LPDWORD pcchParentNameLength,_Out_ LPDWORD lpIndex)
PDH_STATUS None pdh.PdhParseInstanceNameA(_In_ LPCTSTR szInstanceString,_Out_ LPTSTR szInstanceName,_Inout_ LPDWORD pcchInstanceNameLength,_Out_ LPTSTR szParentName,_Inout_ LPDWORD pcchParentNameLength,_Out_ LPDWORD lpIndex)
HRESULT None None.CreateHullShader(const void *pShaderBytecode,SIZE_T BytecodeLength None,ID3D11ClassLinkage *pClassLinkage None,ID3D11HullShader **ppHullShader None)
HRESULT None None.GetSurfacePitch(IDirect3DSurface9 *pSrcSurface None,UINT *pSurfacePitch None)
void None None.PSGetShaderResources([in] UINT StartSlot,[in] UINT NumViews,[out] ID3D10ShaderResourceView **ppShaderResourceViews)
PDH_STATUS None pdh.PdhGetDataSourceTimeRange(_In_ LPCTSTR szDataSource,_Out_ LPDWORD pdwNumEntries,_Out_ PPDH_TIME_INFO pInfo,_In_ LPDWORD pdwBufferSize)
PDH_STATUS None pdh.PdhGetDataSourceTimeRangeW(_In_ LPCTSTR szDataSource,_Out_ LPDWORD pdwNumEntries,_Out_ PPDH_TIME_INFO pInfo,_In_ LPDWORD pdwBufferSize)
PDH_STATUS None pdh.PdhGetDataSourceTimeRangeA(_In_ LPCTSTR szDataSource,_Out_ LPDWORD pdwNumEntries,_Out_ PPDH_TIME_INFO pInfo,_In_ LPDWORD pdwBufferSize)
PDH_STATUS None pdh.PdhCollectQueryDataEx(_In_ PDH_HQUERY hQuery,_In_ DWORD dwIntervalTime,_In_ HANDLE hNewDataEvent)
void None None.RSSetState([in] ID3D10RasterizerState *pRasterizerState)
PDH_STATUS None pdh.PdhUpdateLogFileCatalog(_In_ PDH_HLOG hLog)
NET_API_STATUS None netapi32.NetDfsSetInfo(_In_ LPWSTR DfsEntryPath,_In_opt_ LPWSTR ServerName,_In_opt_ LPWSTR ShareName,_In_ DWORD Level,_In_ LPBYTE Buffer)
HRESULT None mf.MFCreateTranscodeProfile(_Out_ IMFTranscodeProfile **ppTranscodeProfile)
HRESULT None d3d11sdklayers.CreateShaderTrace([in] IUnknown *pShader,[in] D3D11_SHADER_TRACE_DESC *pTraceDesc,[out] ID3D11ShaderTrace **ppShaderTrace)
HRESULT None None.GetFVF([out] DWORD *pFVF)
void None None.VSGetSamplers([in] UINT StartSlot,[in] UINT NumSamplers,[out] ID3D10SamplerState **ppSamplers)
BOOL WINAPI user32.InsertMenuItem(_In_ HMENU hMenu,_In_ UINT uItem,_In_ BOOL fByPosition,_In_ LPCMENUITEMINFO lpmii)
BOOL WINAPI user32.InsertMenuItemW(_In_ HMENU hMenu,_In_ UINT uItem,_In_ BOOL fByPosition,_In_ LPCMENUITEMINFO lpmii)
BOOL WINAPI user32.InsertMenuItemA(_In_ HMENU hMenu,_In_ UINT uItem,_In_ BOOL fByPosition,_In_ LPCMENUITEMINFO lpmii)
SECURITY_STATUS WINAPI ncrypt.SslGetKeyProperty(_In_ NCRYPT_KEY_HANDLE hKey,_In_ LPCWSTR pszProperty,_Out_ PBYTE ppbOutput,_Out_ DWORD *pcbOutput,_In_ DWORD dwFlags)
BOOL WINAPI user32.SendMessageCallback(_In_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam,_In_ SENDASYNCPROC lpCallBack,_In_ ULONG_PTR dwData)
BOOL WINAPI user32.SendMessageCallbackW(_In_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam,_In_ SENDASYNCPROC lpCallBack,_In_ ULONG_PTR dwData)
BOOL WINAPI user32.SendMessageCallbackA(_In_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam,_In_ SENDASYNCPROC lpCallBack,_In_ ULONG_PTR dwData)
BOOLAPI None wininet.InternetUnlockRequestFile(_In_ HANDLE hLockRequestInfo)
HRESULT None ole32.Seek([in] LARGE_INTEGER dlibMove,[in] DWORD dwOrigin,[out] ULARGE_INTEGER *plibNewPosition)
ULONG WINAPI advapi32.PerfQueryCounterInfo(_In_ HANDLE hQuery,_Out_opt_ PPERF_COUNTER_IDENTIFIER pCounters,DWORD cbCounters None,_Out_ LPDWORD pcbCountersActual)
HRESULT None mfplat.MFRegisterPlatformWithMMCSS(_In_ PCWSTR wszClass,_Inout_ DWORD *pdwTaskId,_In_ LONG lPriority)
LPVOID CALLBACK None.AllocateMemory(_In_ SIZE_T AllocSize,_In_ LPVOID pContext)
HRESULT None evr.MFCreateVideoPresenter(_In_ IUnknown *pOwner,_In_ REFIID riidDevice,_In_ REFIID riid,_Out_ void **ppvVideoPresenter)
NET_API_STATUS None netapi32.NetDfsSetSecurity(_In_ LPWSTR DfsEntryPath,_In_ SECURITY_INFORMATION SecurityInformation,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor)
SECURITY_STATUS WINAPI ncrypt.SslVerifySignature(_In_ NCRYPT_PROV_HANDLE hSslProvider,_In_ NCRYPT_KEY_HANDLE hPublicKey,_In_ PBYTE pbHashValue,_In_ DWORD cbHashValue,_In_ PBYTE pbSignature,_In_ DWORD cbSignature,_In_ DWORD dwFlags)
HRESULT None mfplat.MFGetWorkQueueMMCSSPriority(_In_ DWORD dwWorkQueueId,_Out_ LONG *lPriority)
void None None.PSGetShaderResources([in] UINT StartSlot,[in] UINT NumViews,[out] ID3D10ShaderResourceView **ppShaderResourceViews)
void None None.RSGetScissorRects([in None None,out] UINT *NumRects,[out] D3D10_RECT *pRects)
HRESULT None mf.MFCreateSimpleTypeHandler(_Out_ IMFMediaTypeHandler **ppHandler)
HRESULT None mfplat.MFCreateVideoMediaTypeFromVideoInfoHeader(const KS_VIDEOINFOHEADER *pVideoInfoHeader,DWORD cbVideoInfoHeader None,DWORD dwPixelAspectRatioX None,DWORD dwPixelAspectRatioY None,MFVideoInterlaceMode InterlaceMode None,QWORD VideoFlags None,const GUID *pSubtype,IMFVideoMediaType **ppIVideoMediaType None)
HRESULT None mfplat.MFCreateURLFromPath(_In_opt_ LPCWSTR pwszFilePath,_Out_ LPWSTR *ppwszFileURL)
PDH_STATUS None pdh.PdhMakeCounterPath(_In_ PDH_COUNTER_PATH_ELEMENTS *pCounterPathElements,_Out_ LPTSTR szFullPathBuffer,_Inout_ LPDWORD pcchBufferSize,_In_ DWORD dwFlags)
PDH_STATUS None pdh.PdhMakeCounterPathW(_In_ PDH_COUNTER_PATH_ELEMENTS *pCounterPathElements,_Out_ LPTSTR szFullPathBuffer,_Inout_ LPDWORD pcchBufferSize,_In_ DWORD dwFlags)
PDH_STATUS None pdh.PdhMakeCounterPathA(_In_ PDH_COUNTER_PATH_ELEMENTS *pCounterPathElements,_Out_ LPTSTR szFullPathBuffer,_Inout_ LPDWORD pcchBufferSize,_In_ DWORD dwFlags)
PDH_STATUS None pdh.PdhEnumObjectItemsH(_In_ PDH_HLOG hDataSource,_In_ LPCTSTR szMachineName,_In_ LPCTSTR szObjectName,_Out_ LPTSTR mszCounterList,_Inout_ LPDWORD pcchCounterListLength,_Out_ LPTSTR mszInstanceList,_Inout_ LPDWORD pcchInstanceListLength,_In_ DWORD dwDetailLevel,_In_ DWORD dwFlags)
PDH_STATUS None pdh.PdhEnumObjectItemsHW(_In_ PDH_HLOG hDataSource,_In_ LPCTSTR szMachineName,_In_ LPCTSTR szObjectName,_Out_ LPTSTR mszCounterList,_Inout_ LPDWORD pcchCounterListLength,_Out_ LPTSTR mszInstanceList,_Inout_ LPDWORD pcchInstanceListLength,_In_ DWORD dwDetailLevel,_In_ DWORD dwFlags)
PDH_STATUS None pdh.PdhEnumObjectItemsHA(_In_ PDH_HLOG hDataSource,_In_ LPCTSTR szMachineName,_In_ LPCTSTR szObjectName,_Out_ LPTSTR mszCounterList,_Inout_ LPDWORD pcchCounterListLength,_Out_ LPTSTR mszInstanceList,_Inout_ LPDWORD pcchInstanceListLength,_In_ DWORD dwDetailLevel,_In_ DWORD dwFlags)
PDH_STATUS None pdh.PdhGetDefaultPerfCounter(_In_ LPCTSTR szDataSource,_In_ LPCTSTR szMachineName,_In_ LPCTSTR szObjectName,_Out_ LPTSTR szDefaultCounterName,_Inout_ LPDWORD pcchBufferSize)
PDH_STATUS None pdh.PdhGetDefaultPerfCounterW(_In_ LPCTSTR szDataSource,_In_ LPCTSTR szMachineName,_In_ LPCTSTR szObjectName,_Out_ LPTSTR szDefaultCounterName,_Inout_ LPDWORD pcchBufferSize)
PDH_STATUS None pdh.PdhGetDefaultPerfCounterA(_In_ LPCTSTR szDataSource,_In_ LPCTSTR szMachineName,_In_ LPCTSTR szObjectName,_Out_ LPTSTR szDefaultCounterName,_Inout_ LPDWORD pcchBufferSize)
HRESULT None winhttp.Open([in] BSTR Method,[in] BSTR Url,[in None None,optional] VARIANT Async)
void None None.VSGetConstantBuffers([in] UINT StartSlot,[in] UINT NumBuffers,[out] ID3D10Buffer **ppConstantBuffers)
void None None.unpackratio([in] UINT64 unPacked,[out] UINT32 *pnNumerator,[out] UINT32 *punDenominator)
void None shlwapi.IUnknown_Set(_Inout_ IUnknown **ppunk,_In_opt_ IUnknown *punk)
LRESULT WINAPI user32.SendMessageTimeout(_In_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam,_In_ UINT fuFlags,_In_ UINT uTimeout,_Out_opt_ PDWORD_PTR lpdwResult)
LRESULT WINAPI user32.SendMessageTimeoutW(_In_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam,_In_ UINT fuFlags,_In_ UINT uTimeout,_Out_opt_ PDWORD_PTR lpdwResult)
LRESULT WINAPI user32.SendMessageTimeoutA(_In_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam,_In_ UINT fuFlags,_In_ UINT uTimeout,_Out_opt_ PDWORD_PTR lpdwResult)
HRESULT None None.CheckMultisampleQualityLevels([in] DXGI_FORMAT Format,[in] UINT SampleCount,[out] UINT *pNumQualityLevels)
HRESULT None shlwapi.ParseURL(_In_ LPCTSTR pcszUrl,_Inout_ PARSEDURL *ppu)
HRESULT None shlwapi.ParseURLW(_In_ LPCTSTR pcszUrl,_Inout_ PARSEDURL *ppu)
HRESULT None shlwapi.ParseURLA(_In_ LPCTSTR pcszUrl,_Inout_ PARSEDURL *ppu)
HRESULT None shlwapi.ParseURL(_In_ LPCTSTR pcszUrl,_Inout_ PARSEDURL *ppu)
HRESULT None shlwapi.ParseURLW(_In_ LPCTSTR pcszUrl,_Inout_ PARSEDURL *ppu)
HRESULT None shlwapi.ParseURLA(_In_ LPCTSTR pcszUrl,_Inout_ PARSEDURL *ppu)
PDH_STATUS None pdh.PdhValidatePath(_In_ LPCTSTR szFullCounterPath)
PDH_STATUS None pdh.PdhValidatePathW(_In_ LPCTSTR szFullCounterPath)
PDH_STATUS None pdh.PdhValidatePathA(_In_ LPCTSTR szFullCounterPath)
SECURITY_STATUS WINAPI ncrypt.SslCreateClientAuthHash(_In_ NCRYPT_PROV_HANDLE hSslProvider,_Out_ NCRYPT_HASH_HANDLE *phHandshakeHash,_In_ DWORD dwProtocol,_In_ DWORD dwCipherSuite,_In_ LPCWSTR pszHashAlgId,_In_ DWORD dwFlags)
void None None.errorf(string format None,argument ... None)
HRESULT None shlwapi.IUnknown_GetWindow(_In_ IUnknown *punk,_Out_ HWND *phwnd)
SECURITY_STATUS WINAPI ncrypt.SslCreateClientAuthHash(_In_ NCRYPT_PROV_HANDLE hSslProvider,_Out_ NCRYPT_HASH_HANDLE *phHandshakeHash,_In_ DWORD dwProtocol,_In_ DWORD dwCipherSuite,_In_ LPCWSTR pszHashAlgId,_In_ DWORD dwFlags)
PDH_STATUS None pdh.PdhOpenQuery(_In_ LPCTSTR szDataSource,_In_ DWORD_PTR dwUserData,_Out_ PDH_HQUERY *phQuery)
PDH_STATUS None pdh.PdhOpenQueryW(_In_ LPCTSTR szDataSource,_In_ DWORD_PTR dwUserData,_Out_ PDH_HQUERY *phQuery)
PDH_STATUS None pdh.PdhOpenQueryA(_In_ LPCTSTR szDataSource,_In_ DWORD_PTR dwUserData,_Out_ PDH_HQUERY *phQuery)
HRESULT None None.ReleaseDC([in] HDC hdc)
HRESULT None None.GetDevice([out None None,retval] IDirect3DDevice9 **ppDevice)
DNS_STATUS WINAPI dnsapi.DnsExtractRecordsFromMessage_W(_In_ PDNS_MESSAGE_BUFFER pDnsBuffer,_In_ WORD wMessageLength,_Out_ PDNS_RECORD *ppRecord)
HRESULT None mfplat.MFUnwrapMediaType(IMFMediaType *pWrap None,IMFMediaType **ppOrig None)
PDH_STATUS None pdh.PdhValidatePath(_In_ LPCTSTR szFullCounterPath)
PDH_STATUS None pdh.PdhValidatePathW(_In_ LPCTSTR szFullCounterPath)
PDH_STATUS None pdh.PdhValidatePathA(_In_ LPCTSTR szFullCounterPath)
ULONG WINAPI advapi32.PerfEnumerateCounterSetInstances(_In_opt_ LPCWSTR szMachine,_In_ LPCGUID pCounterSetId,_Out_opt_ PPERF_INSTANCE_HEADER pInstances,DWORD cbInstances None,_Out_ LPDWORD pcbInstancesActual)
HRESULT None mfplat.MFBeginRegisterWorkQueueWithMMCSS(_In_ DWORD dwWorkQueueId,_In_ LPCWSTR wszClass,_In_ DWORD dwTaskId,_In_ IMFAsyncCallback *pDoneCallback,_In_ IUnknown *pDoneState)
UINT64 None dxgidebug.GetMessageCountLimit([in] DXGI_DEBUG_ID Producer)
HRESULT None mfplat.MFRegisterLocalByteStreamHandler(_In_ PCWSTR szFileExtension,_In_ PCWSTR szMimeType,_In_ IMFActivate *pActivate)
double None None.asdouble(in uint lowbits,in uint highbits)
HDWP WINAPI user32.DeferWindowPos(_In_ HDWP hWinPosInfo,_In_ HWND hWnd,_In_opt_ HWND hWndInsertAfter,_In_ int x,_In_ int y,_In_ int cx,_In_ int cy,_In_ UINT uFlags)
BOOL None jsproxy.InternetGetProxyInfo(_In_ LPCSTR lpszUrl,_In_ DWORD dwUrlLength,_In_ LPSTR lpszUrlHostName,_In_ DWORD dwUrlHostNameLength,_Out_ LPSTR *lplpszProxyHostName,_Out_ LPDWORD lpdwProxyHostNameLength)
float2 None None.GetSamplePosition(in int sampleindex)
PDH_STATUS None pdh.PdhBindInputDataSource(_Out_ PDH_HLOG *phDataSource,_In_ LPCTSTR szLogFileNameList)
PDH_STATUS None pdh.PdhBindInputDataSourceW(_Out_ PDH_HLOG *phDataSource,_In_ LPCTSTR szLogFileNameList)
PDH_STATUS None pdh.PdhBindInputDataSourceA(_Out_ PDH_HLOG *phDataSource,_In_ LPCTSTR szLogFileNameList)
ULONG NTAPI ntdll.RtlGetSuiteMask(void None None)
DWORD None wininet.InternetAttemptConnect(_In_ DWORD dwReserved)
HRESULT None dxgidebug.SetBreakOnID([in] DXGI_DEBUG_ID Producer,[in] DXGI_INFO_QUEUE_MESSAGE_ID ID,[in] BOOL bEnable)
HRESULT None shlwapi.DllInstall(BOOL bInstall None,_In_opt_ PCWSTR pszCmdLine)
HRESULT None mfplat.MFSerializeAttributesToStream(IMFAttributes *pAttr None,DWORD dwOptions None,IStream *pStm None)
void None None.ProcessIsolineTessFactors(in float RawDetailFactor,in float RawDensityFactor,out float RoundedDetailFactor,out float RoundedDensityFactor)
ULONG None advapi32.PerfDeleteInstance(_In_ HANDLE hProvider,_In_ PPERF_COUNTERSET_INSTANCE InstanceBlock)
HRESULT None mf.MFRequireProtectedEnvironment(_In_ IMFPresentationDescriptor *pPresentationDescriptor)
BOOLEAN WINAPI secur32.GetComputerObjectName(_In_ EXTENDED_NAME_FORMAT NameFormat,_Out_ LPTSTR lpNameBuffer,_Inout_ PULONG lpnSize)
BOOLEAN WINAPI secur32.GetComputerObjectNameW(_In_ EXTENDED_NAME_FORMAT NameFormat,_Out_ LPTSTR lpNameBuffer,_Inout_ PULONG lpnSize)
BOOLEAN WINAPI secur32.GetComputerObjectNameA(_In_ EXTENDED_NAME_FORMAT NameFormat,_Out_ LPTSTR lpNameBuffer,_Inout_ PULONG lpnSize)
void None None.PSGetConstantBuffers([in] UINT StartSlot,[in] UINT NumBuffers,[out] ID3D10Buffer **ppConstantBuffers)
void None None.Process2DQuadTessFactorsMax(in float4 RawEdgeFactors,in float2 InsideScale,out float4 RoundedEdgeTessFactors,out float2 RoundedInsideTessFactors,out float2 UnroundedInsideTessFactors)
void None None.SOGetTargets([in] UINT NumBuffers,[out] ID3D10Buffer **ppSOTargets,[out] UINT *pOffsets)
BOOLAPI None wininet.UnlockUrlCacheEntryFile(_In_ LPCTSTR lpszUrlName,_In_ DWORD dwReserved)
BOOLAPI None wininet.UnlockUrlCacheEntryFileW(_In_ LPCTSTR lpszUrlName,_In_ DWORD dwReserved)
BOOLAPI None wininet.UnlockUrlCacheEntryFileA(_In_ LPCTSTR lpszUrlName,_In_ DWORD dwReserved)
PDH_STATUS None pdh.PdhOpenQuery(_In_ LPCTSTR szDataSource,_In_ DWORD_PTR dwUserData,_Out_ PDH_HQUERY *phQuery)
PDH_STATUS None pdh.PdhOpenQueryW(_In_ LPCTSTR szDataSource,_In_ DWORD_PTR dwUserData,_Out_ PDH_HQUERY *phQuery)
PDH_STATUS None pdh.PdhOpenQueryA(_In_ LPCTSTR szDataSource,_In_ DWORD_PTR dwUserData,_Out_ PDH_HQUERY *phQuery)
PDH_STATUS None pdh.PdhCalculateCounterFromRawValue(_In_ PDH_HCOUNTER hCounter,_In_ DWORD dwFormat,_In_ PPDH_RAW_COUNTER rawValue1,_In_ PPDH_RAW_COUNTER rawValue2,_Out_ PPDH_FMT_COUNTERVALUE fmtValue)
typedef None None.HRESULT(CALLBACK *PDXVAHDSW_GetVideoProcessorDeviceCaps None)
HRESULT WINAPI mf.MFCreateAVIMediaSink(_In_ IMFByteStream *pIByteStream,_In_ IMFMediaType *pVideoMediaType,_In_opt_ IMFMediaType *pAudioMediaType,_Out_ IMFMediaSink **ppIMediaSink)
HRESULT None mfplat.MFValidateMediaTypeSize(_In_ GUID FormatType,_In_ UINT8 *pBlock,_In_ UINT32 cbSize)
LRESULT CALLBACK None.WindowProc(_In_ HWND hwnd,_In_ UINT uMsg,_In_ WPARAM wParam,_In_ LPARAM lParam)
HRESULT None None.GetPrivateData([in] REFGUID refguid,[in None None,out] void *pData,[in None None,out] DWORD *pSizeOfData)
BOOL WINAPI kernel32.QueryPerformanceCounter(_Out_ LARGE_INTEGER *lpPerformanceCount)
WINAPI None mf.MFCreateWAVEMediaSink(_In_ IMFByteStream *pTargetByteStream,_In_ IMFMediaType *pAudioMediaType,_Out_ IMFMediaSink **ppMediaSink)
HRESULT None mfplat.MFConvertColorInfoFromDXVA(_Inout_ MFVIDEOFORMAT *pToFormat,_In_ DWORD dwFromDXVA)
PDH_STATUS None pdh.PdhParseCounterPath(_In_ LPCTSTR szFullPathBuffer,_Out_ PDH_COUNTER_PATH_ELEMENTS *pCounterPathElements,_Inout_ LPDWORD pdwBufferSize,DWORD dwFlags None)
PDH_STATUS None pdh.PdhParseCounterPathW(_In_ LPCTSTR szFullPathBuffer,_Out_ PDH_COUNTER_PATH_ELEMENTS *pCounterPathElements,_Inout_ LPDWORD pdwBufferSize,DWORD dwFlags None)
PDH_STATUS None pdh.PdhParseCounterPathA(_In_ LPCTSTR szFullPathBuffer,_Out_ PDH_COUNTER_PATH_ELEMENTS *pCounterPathElements,_Inout_ LPDWORD pdwBufferSize,DWORD dwFlags None)
HRESULT None shlwapi.SHSetThreadRef(_In_opt_ IUnknown *punk)
fVector None None.dst(in fVector src0,in fVector src1)
HRESULT None None.FreePrivateData([in] REFGUID refguid)
BOOL WINAPI kernel32.SetComputerName(_In_ LPCTSTR lpComputerName)
BOOL WINAPI kernel32.SetComputerNameW(_In_ LPCTSTR lpComputerName)
BOOL WINAPI kernel32.SetComputerNameA(_In_ LPCTSTR lpComputerName)
HRESULT None mfplat.MFCreateLegacyMediaBufferOnMFMediaBuffer(IMFSample *pIMFSample None,IMFMediaBuffer *pIMFMediaBuffer None,DWORD cbOffset None,IMediaBuffer **ppIMediaBuffer None)
void None None.SetPredication([in] ID3D10Predicate *pPredicate,[in] BOOL PredicateValue)
float None None.ddx_coarse(in float value)
void None None.ProcessQuadTessFactorsMin(in float4 RawEdgeFactors,in float InsideScale,out float4 RoundedEdgeTessFactors,out float2 RoundedInsideTessFactors,out float2 UnroundedInsideTessFactors)
PDH_STATUS None pdh.PdhGetLogFileSize(_In_ PDH_HLOG hLog,_Out_ LONGLONG *llSize)
HRESULT None mfplat.MFTRegister(_In_ CLSID clsidMFT,_In_ GUID guidCategory,_In_ LPWSTR pszName,_In_ UINT32 Flags,_In_ UINT32 cInputTypes,_In_ MFT_REGISTER_TYPE_INFO *pInputTypes,_In_ UINT32 cOutputTypes,_In_ MFT_REGISTER_TYPE_INFO *pOutputTypes,_In_ IMFAttributes *pAttributes)
void None None.IASetPrimitiveTopology([in] D3D10_PRIMITIVE_TOPOLOGY Topology)
HRESULT None mfplat.MFGetAttributesAsBlob(_In_ IMFAttributes *pAttributes,_Out_ UINT8 *pBuf,_In_ UINT cbBufSize)
HRESULT None None.OpenSharedResource([in] HANDLE hResource,[in] REFIID ReturnedInterface,[out] void **ppResource)
BOOLAPI None wininet.RetrieveUrlCacheEntryFile(_In_ LPCTSTR lpszUrlName,_Out_ LPINTERNET_CACHE_ENTRY_INFO lpCacheEntryInfo,_Inout_ LPDWORD lpcbCacheEntryInfo,_In_ DWORD dwReserved)
BOOLAPI None wininet.RetrieveUrlCacheEntryFileW(_In_ LPCTSTR lpszUrlName,_Out_ LPINTERNET_CACHE_ENTRY_INFO lpCacheEntryInfo,_Inout_ LPDWORD lpcbCacheEntryInfo,_In_ DWORD dwReserved)
BOOLAPI None wininet.RetrieveUrlCacheEntryFileA(_In_ LPCTSTR lpszUrlName,_Out_ LPINTERNET_CACHE_ENTRY_INFO lpCacheEntryInfo,_Inout_ LPDWORD lpcbCacheEntryInfo,_In_ DWORD dwReserved)
int None None.firstbithigh(in int value)
PDH_STATUS None pdh.PdhConnectMachine(_In_ LPCTSTR szMachineName)
PDH_STATUS None pdh.PdhConnectMachineW(_In_ LPCTSTR szMachineName)
PDH_STATUS None pdh.PdhConnectMachineA(_In_ LPCTSTR szMachineName)
void None None.OnError([in] long ErrorNumber,[in] BSTR ErrorDescription)
HRESULT None None.D3DXCreateTextureFromFileInMemoryEx(_In_ LPDIRECT3DDEVICE9 pDevice,_In_ LPCVOID pSrcData,_In_ UINT SrcDataSize,_In_ UINT Width,_In_ UINT Height,_In_ UINT MipLevels,_In_ DWORD Usage,_In_ D3DFORMAT Format,_In_ D3DPOOL Pool,_In_ DWORD Filter,_In_ DWORD MipFilter,_In_ D3DCOLOR ColorKey,_Inout_ D3DXIMAGE_INFO *pSrcInfo,_Out_ PALETTEENTRY *pPalette,_Out_ LPDIRECT3DTEXTURE9 *ppTexture)
typedef None None.HRESULT(CALLBACK *PDXVAHDSW_CreateDevice None)
HRESULT None mf.MFCreateASFStreamSelector(IMFASFProfile *pIASFProfile None,IMFASFStreamSelector **ppSelector None)
PDH_STATUS None pdh.PdhGetDataSourceTimeRangeH(_In_ PDH_HLOG hDataSource,_Out_ LPDWORD pdwNumEntries,_Out_ PPDH_TIME_INFO pInfo,_In_ LPDWORD pdwBufferSize)
BOOL WINAPI user32.RemoveMenu(_In_ HMENU hMenu,_In_ UINT uPosition,_In_ UINT uFlags)
HRESULT None shlwapi.QISearch(_In_ void *that,_In_ LPCQITAB pqit,_In_ REFIID riid,_Out_ void **ppv)
void None None.VSGetShader([out] ID3D10VertexShader **ppVertexShader)
BOOL None wininet.InternetCreateUrl(_In_ LPURL_COMPONENTS lpUrlComponents,_In_ DWORD dwFlags,_Out_ LPTSTR lpszUrl,_Inout_ LPDWORD lpdwUrlLength)
BOOL None wininet.InternetCreateUrlW(_In_ LPURL_COMPONENTS lpUrlComponents,_In_ DWORD dwFlags,_Out_ LPTSTR lpszUrl,_Inout_ LPDWORD lpdwUrlLength)
BOOL None wininet.InternetCreateUrlA(_In_ LPURL_COMPONENTS lpUrlComponents,_In_ DWORD dwFlags,_Out_ LPTSTR lpszUrl,_Inout_ LPDWORD lpdwUrlLength)
HANDLE None wininet.FindFirstUrlCacheEntry(_In_ LPCTSTR lpszUrlSearchPattern,_Out_ LPINTERNET_CACHE_ENTRY_INFO lpFirstCacheEntryInfo,_Inout_ LPDWORD lpcbCacheEntryInfo)
HANDLE None wininet.FindFirstUrlCacheEntryW(_In_ LPCTSTR lpszUrlSearchPattern,_Out_ LPINTERNET_CACHE_ENTRY_INFO lpFirstCacheEntryInfo,_Inout_ LPDWORD lpcbCacheEntryInfo)
HANDLE None wininet.FindFirstUrlCacheEntryA(_In_ LPCTSTR lpszUrlSearchPattern,_Out_ LPINTERNET_CACHE_ENTRY_INFO lpFirstCacheEntryInfo,_Inout_ LPDWORD lpcbCacheEntryInfo)
HRESULT None mfplat.MFCreateVideoMediaTypeFromBitMapInfoHeader(const BITMAPINFOHEADER *pbmihBitMapInfoHeader,DWORD dwPixelAspectRatioX None,DWORD dwPixelAspectRatioY None,MFVideoInterlaceMode InterlaceMode None,QWORD VideoFlags None,QWORD qwFramesPerSecondNumerator None,QWORD qwFramesPerSecondDenominator None,DWORD dwMaxBitRate None,IMFVideoMediaType **ppIVideoMediaType None)
STDAPI None mfplat.MFCheckContentProtectionDevice(_In_ REFGUID ProtectionSystemId)
SECURITY_STATUS WINAPI ncrypt.SslImportMasterKey(_In_ NCRYPT_PROV_HANDLE hSslProvider,_In_ NCRYPT_KEY_HANDLE hPrivateKey,_Out_ NCRYPT_KEY_HANDLE *phMasterKey,_In_ DWORD dwProtocol,_In_ DWORD dwCipherSuite,_In_ PNCryptBufferDesc pParameterList,_In_ PBYTE pbEncryptedKey,_In_ DWORD cbEncryptedKey,_In_ DWORD dwFlags)
BOOL WINAPI kernel32.GetComputerNameEx(_In_ COMPUTER_NAME_FORMAT NameType,_Out_ LPTSTR lpBuffer,_Inout_ LPDWORD lpnSize)
BOOL WINAPI kernel32.GetComputerNameExW(_In_ COMPUTER_NAME_FORMAT NameType,_Out_ LPTSTR lpBuffer,_Inout_ LPDWORD lpnSize)
BOOL WINAPI kernel32.GetComputerNameExA(_In_ COMPUTER_NAME_FORMAT NameType,_Out_ LPTSTR lpBuffer,_Inout_ LPDWORD lpnSize)
PDH_STATUS None pdh.PdhFormatFromRawValue(_In_ DWORD dwCounterType,_In_ DWORD dwFormat,_In_ LONGLONG *pTimeBase,_In_ PPDH_RAW_COUNTER rawValue1,_In_ PPDH_RAW_COUNTER rawValue2,_Out_ PPDH_FMT_COUNTERVALUE fmtValue)
void None None.ProcessTriTessFactorsAvg(in float3 RawEdgeFactors,in float InsideScale,out float3 RoundedEdgeTessFactors,out float RoundedInsideTessFactor,out float UnroundedInsideTessFactor)
ULONG WINAPI advapi32.PerfQueryCounterSetRegistrationInfo(_In_opt_ LPCWSTR szMachine,_In_ LPCGUID pCounterSetId,PerfRegInfoType requestCode None,DWORD requestLangId None,_Out_opt_ LPBYTE pbRegInfo,DWORD cbRegInfo None,_Out_ LPDWORD pcbRegInfoActual)
PDH_STATUS None pdh.PdhCollectQueryDataWithTime(_Inout_ PDH_HQUERY hQuery,_Out_ LONGLONG *pllTimeStamp)
HRESULT None oleacc.accHitTest([in] long xLeft,[in] long yTop,[out None None,retval] VARIANT *pvarID)
HRESULT None None.D3DXCreateVolumeTextureFromFileEx(_In_ LPDIRECT3DDEVICE9 pDevice,_In_ LPCTSTR pSrcFile,_In_ UINT Width,_In_ UINT Height,_In_ UINT Depth,_In_ UINT MipLevels,_In_ DWORD Usage,D3DFORMAT Format None,_In_ D3DPOOL Pool,_In_ DWORD Filter,_In_ DWORD MipFilter,_In_ D3DCOLOR ColorKey,_Inout_ D3DXIMAGE_INFO *pSrcInfo,_Out_ PALETTEENTRY *pPalette,_Out_ LPDIRECT3DVOLUMETEXTURE9 *ppTexture)
Bool WINAPI wininet.GetUrlCacheConfigInfo(_Inout_ LPINTERNET_CACHE_CONFIG_INFO lpCacheConfigInfo,_Reserved_ LPDWORD lpcbCacheConfigInfo,_In_ DWORD dwFieldControl)
Bool WINAPI wininet.GetUrlCacheConfigInfoW(_Inout_ LPINTERNET_CACHE_CONFIG_INFO lpCacheConfigInfo,_Reserved_ LPDWORD lpcbCacheConfigInfo,_In_ DWORD dwFieldControl)
Bool WINAPI wininet.GetUrlCacheConfigInfoA(_Inout_ LPINTERNET_CACHE_CONFIG_INFO lpCacheConfigInfo,_Reserved_ LPDWORD lpcbCacheConfigInfo,_In_ DWORD dwFieldControl)
HRESULT None mf.MFCreateProxyLocator(_In_ LPCWSTR pszProtocol,_In_ IPropertyStore *pProxyConfig,_Out_ IMFNetProxyLocator **ppProxyLocator)
HRESULT None d3d11sdklayers.CreateShaderTrace([in] IUnknown *pShader,[in] D3D11_SHADER_TRACE_DESC *pTraceDesc,[out] ID3D11ShaderTrace **ppShaderTrace)
MFTIME None mfplat.MFGetSystemTime(void None None)
HRESULT __stdcall None.MFCreateMP3ByteStreamPlugin(_In_ REFIID riid,_Out_ LPVOID *ppvHandler)
HRESULT None mfplat.MFCreateCollection(_Out_ IMFCollection **ppIMFCollection)
BOOL None wininet.InternetFindNextFile(_In_ HINTERNET hFind,_Out_ LPVOID lpvFindData)
BOOL None wininet.InternetFindNextFileW(_In_ HINTERNET hFind,_Out_ LPVOID lpvFindData)
BOOL None wininet.InternetFindNextFileA(_In_ HINTERNET hFind,_Out_ LPVOID lpvFindData)
BOOL None wininet.HttpSendRequest(_In_ HINTERNET hRequest,_In_ LPCTSTR lpszHeaders,_In_ DWORD dwHeadersLength,_In_ LPVOID lpOptional,_In_ DWORD dwOptionalLength)
BOOL None wininet.HttpSendRequestW(_In_ HINTERNET hRequest,_In_ LPCTSTR lpszHeaders,_In_ DWORD dwHeadersLength,_In_ LPVOID lpOptional,_In_ DWORD dwOptionalLength)
BOOL None wininet.HttpSendRequestA(_In_ HINTERNET hRequest,_In_ LPCTSTR lpszHeaders,_In_ DWORD dwHeadersLength,_In_ LPVOID lpOptional,_In_ DWORD dwOptionalLength)
PDH_STATUS None pdh.PdhLookupPerfIndexByName(_In_ LPCTSTR szMachineName,_In_ LPCTSTR szNameBuffer,_Out_ LPDWORD pdwIndex)
PDH_STATUS None pdh.PdhLookupPerfIndexByNameW(_In_ LPCTSTR szMachineName,_In_ LPCTSTR szNameBuffer,_Out_ LPDWORD pdwIndex)
PDH_STATUS None pdh.PdhLookupPerfIndexByNameA(_In_ LPCTSTR szMachineName,_In_ LPCTSTR szNameBuffer,_Out_ LPDWORD pdwIndex)
HRESULT None oleaut32.CreateTypeLib2(SYSKIND syskind None,LPCOLESTR szFile None,ICreateTypeLib2 **ppctlib None)
void None None.InterlockedExchange(in R dest,in T value,out T original_value)
BOOL None wininet.FtpRemoveDirectory(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszDirectory)
BOOL None wininet.FtpRemoveDirectoryW(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszDirectory)
BOOL None wininet.FtpRemoveDirectoryA(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszDirectory)
STDAPI None mfplat.MFIsContentProtectionDeviceSupported(_In_ REFGUID ProtectionSystemId,_Out_ BOOL *isSupported)
BOOLAPI None wininet.CreateUrlCacheEntry(_In_ LPCTSTR lpszUrlName,_In_ DWORD dwExpectedFileSize,_In_ LPCTSTR lpszFileExtension,_Out_ LPTSTR lpszFileName,_Reserved_ DWORD dwReserved)
BOOLAPI None wininet.CreateUrlCacheEntryW(_In_ LPCTSTR lpszUrlName,_In_ DWORD dwExpectedFileSize,_In_ LPCTSTR lpszFileExtension,_Out_ LPTSTR lpszFileName,_Reserved_ DWORD dwReserved)
BOOLAPI None wininet.CreateUrlCacheEntryA(_In_ LPCTSTR lpszUrlName,_In_ DWORD dwExpectedFileSize,_In_ LPCTSTR lpszFileExtension,_Out_ LPTSTR lpszFileName,_Reserved_ DWORD dwReserved)
SECURITY_STATUS WINAPI ncrypt.SslOpenPrivateKey(_In_ NCRYPT_PROV_HANDLE hSslProvider,_Out_ NCRYPT_KEY_HANDLE *phPrivateKey,_In_ PCCERT_CONTEXT pCertContext,_In_ DWORD dwFlags)
HRESULT None None.EnumAdapterModes([in] UINT Adapter,[in] D3DFORMAT Format,[in] UINT Mode,[out] D3DDISPLAYMODE *pMode)
void None None.Unpack2UINT32AsUINT64([in] UINT64 unPacked,[out] UINT32 *punHigh,[out] UINT32 *punLow)
void WINAPI kernel32.GetNativeSystemInfo(_Out_ LPSYSTEM_INFO lpSystemInfo)
HRESULT None mfplat.MFCreateStreamDescriptor(DWORD dwStreamIdentifier None,DWORD cMediaTypes None,IMFMediaType **apMediaTypes None,IMFStreamDescriptor **ppDescriptor None)
BOOL None wininet.SetUrlCacheGroupAttribute(_In_ GROUPID gid,_In_ DWORD dwFlags,_In_ DWORD dwAttributes,_In_ LPINTERNET_CACHE_GROUP_INFO lpGroupInfo,_Inout_ LPVOID lpReserved)
BOOL None wininet.SetUrlCacheGroupAttributeW(_In_ GROUPID gid,_In_ DWORD dwFlags,_In_ DWORD dwAttributes,_In_ LPINTERNET_CACHE_GROUP_INFO lpGroupInfo,_Inout_ LPVOID lpReserved)
BOOL None wininet.SetUrlCacheGroupAttributeA(_In_ GROUPID gid,_In_ DWORD dwFlags,_In_ DWORD dwAttributes,_In_ LPINTERNET_CACHE_GROUP_INFO lpGroupInfo,_Inout_ LPVOID lpReserved)
long WINAPI user32.BroadcastSystemMessageEx(_In_ DWORD dwFlags,_Inout_opt_ LPDWORD lpdwRecipients,_In_ UINT uiMessage,_In_ WPARAM wParam,_In_ LPARAM lParam,_Out_opt_ PBSMINFO pBSMInfo)
long WINAPI user32.BroadcastSystemMessageExW(_In_ DWORD dwFlags,_Inout_opt_ LPDWORD lpdwRecipients,_In_ UINT uiMessage,_In_ WPARAM wParam,_In_ LPARAM lParam,_Out_opt_ PBSMINFO pBSMInfo)
long WINAPI user32.BroadcastSystemMessageExA(_In_ DWORD dwFlags,_Inout_opt_ LPDWORD lpdwRecipients,_In_ UINT uiMessage,_In_ WPARAM wParam,_In_ LPARAM lParam,_Out_opt_ PBSMINFO pBSMInfo)
HRESULT None None.D3DXGetImageInfoFromFileInMemory(_In_ LPCVOID pSrcData,_In_ UINT SrcDataSize,_In_ D3DXIMAGE_INFO *pSrcInfo)
SECURITY_STATUS WINAPI ncrypt.SslChangeNotify(_In_ HANDLE hEvent,_In_ DWORD dwFlags)
PDH_STATUS None pdh.PdhSetCounterScaleFactor(_In_ PDH_HCOUNTER hCounter,_In_ LONG lFactor)
HRESULT None mfplat.MFCreateStreamDescriptor(DWORD dwStreamIdentifier None,DWORD cMediaTypes None,IMFMediaType **apMediaTypes None,IMFStreamDescriptor **ppDescriptor None)
HINTERNET None wininet.FtpFindFirstFile(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszSearchFile,_Out_ LPWIN32_FIND_DATA lpFindFileData,_In_ DWORD dwFlags,_In_ DWORD_PTR dwContext)
HINTERNET None wininet.FtpFindFirstFileW(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszSearchFile,_Out_ LPWIN32_FIND_DATA lpFindFileData,_In_ DWORD dwFlags,_In_ DWORD_PTR dwContext)
HINTERNET None wininet.FtpFindFirstFileA(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszSearchFile,_Out_ LPWIN32_FIND_DATA lpFindFileData,_In_ DWORD dwFlags,_In_ DWORD_PTR dwContext)
HRESULT None mfplat.MFCreateMediaEvent(MediaEventType met None,REFGUID guidExtendedType None,HRESULT hrStatus None,const PROPVARIANT *pvValue,IMFMediaEvent **ppEvent None)
PDH_STATUS None pdh.PdhCloseQuery(_In_ PDH_HQUERY hQuery)
HRESULT None mf.MFGetSupportedMimeTypes(_Out_ PROPVARIANT *pPropVarMimeTypeArray)
HRESULT None None.GetDesc([out] D3DVOLUME_DESC *pDesc)
ULONG WINAPI None.CounterInitialize(void None None)
STDAPI None mfplat.MFIsContentProtectionDeviceSupported(_In_ REFGUID ProtectionSystemId,_Out_ BOOL *isSupported)
SECURITY_STATUS WINAPI ncrypt.SslLookupCipherSuiteInfo(_In_ NCRYPT_PROV_HANDLE hSslProvider,_In_ DWORD dwProtocol,_In_ DWORD dwCipherSuite,_In_ DWORD dwKeyType,_Out_ NCRYPT_SSL_CIPHER_SUITE *pCipherSuite,_In_ DWORD dwFlags)
UINT32 None None.MFGetAttributeUINT32(_In_ IMFAttributes *pAttributes,_In_ REFGUID guidKey,_In_ UINT32 unDefault)
NET_API_STATUS None netapi32.NetDfsSetFtContainerSecurity(_In_ LPWSTR DomainName,_In_ SECURITY_INFORMATION SecurityInformation,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor)
void None None.Unpack2UINT32AsUINT64([in] UINT64 unPacked,[out] UINT32 *punHigh,[out] UINT32 *punLow)
HRESULT None mfplay.MFPCreateMediaPlayer(_In_ LPCWSTR pwszURL,_In_ BOOL fStartPlayback,_In_ MFP_CREATION_OPTIONS creationOptions,_In_ IMFPMediaPlayerCallback *pCallback,_In_ HWND hWnd,_Out_ IMFPMediaPlayer **ppMediaPlayer)
typedef None None.HRESULT(CALLBACK *PDXVAHDSW_VideoProcessBltHD None)
PDH_STATUS None pdh.PdhSelectDataSource(_In_ HWND hWndOwner,_In_ DWORD dwFlags,_Out_ LPTSTR szDataSource,_Inout_ LPDWORD pcchBufferLength)
PDH_STATUS None pdh.PdhSelectDataSourceW(_In_ HWND hWndOwner,_In_ DWORD dwFlags,_Out_ LPTSTR szDataSource,_Inout_ LPDWORD pcchBufferLength)
PDH_STATUS None pdh.PdhSelectDataSourceA(_In_ HWND hWndOwner,_In_ DWORD dwFlags,_Out_ LPTSTR szDataSource,_Inout_ LPDWORD pcchBufferLength)
DWORD WINAPI user32.CheckMenuItem(_In_ HMENU hmenu,_In_ UINT uIDCheckItem,_In_ UINT uCheck)
double None None.asdouble(in uint lowbits,in uint highbits)
PDH_STATUS None pdh.PdhAddCounter(_In_ PDH_HQUERY hQuery,_In_ LPCTSTR szFullCounterPath,_In_ DWORD_PTR dwUserData,_Out_ PDH_HCOUNTER *phCounter)
PDH_STATUS None pdh.PdhAddCounterW(_In_ PDH_HQUERY hQuery,_In_ LPCTSTR szFullCounterPath,_In_ DWORD_PTR dwUserData,_Out_ PDH_HCOUNTER *phCounter)
PDH_STATUS None pdh.PdhAddCounterA(_In_ PDH_HQUERY hQuery,_In_ LPCTSTR szFullCounterPath,_In_ DWORD_PTR dwUserData,_Out_ PDH_HCOUNTER *phCounter)
HRESULT None mfplat.MFCreateMediaTypeFromRepresentation(_In_ GUID guidRepresentation,_In_ LPVOID pvRepresentation,_Out_ IMFMediaType **ppIMediaType)
HRESULT None mf.MFCreateTranscodeSinkActivate(_Out_ **ppActivate None)
BOOL WINAPI user32.DrawMenuBar(_In_ HWND hWnd)
HRESULT None mfplat.MFPutWorkItemEx(_In_ DWORD dwQueue,_In_ IMFAsyncResult *pResult)
BOOL None wininet.InternetSetOption(_In_ HINTERNET hInternet,_In_ DWORD dwOption,_In_ LPVOID lpBuffer,_In_ DWORD dwBufferLength)
BOOL None wininet.InternetSetOptionW(_In_ HINTERNET hInternet,_In_ DWORD dwOption,_In_ LPVOID lpBuffer,_In_ DWORD dwBufferLength)
BOOL None wininet.InternetSetOptionA(_In_ HINTERNET hInternet,_In_ DWORD dwOption,_In_ LPVOID lpBuffer,_In_ DWORD dwBufferLength)
HRESULT None None.Lock([in] UINT OffsetToLock,[in] UINT SizeToLock,[out] VOID **ppbData,[in] DWORD Flags)
HRESULT None mf.MFShutdownObject(IUnknown *pUnk None)
HRESULT None None.D3DXCreateTextureFromResource(_In_ LPDIRECT3DDEVICE9 pDevice,_In_ HMODULE hSrcModule,_In_ LPCTSTR pSrcResource,_Out_ LPDIRECT3DTEXTURE9 *ppTexture)
BOOL None wininet.InternetTimeToSystemTime(_In_ LPCTSTR lpszTime,_Out_ SYSTEMTIME *pst,_In_ DWORD dwReserved)
BOOL None wininet.InternetTimeToSystemTimeW(_In_ LPCTSTR lpszTime,_Out_ SYSTEMTIME *pst,_In_ DWORD dwReserved)
BOOL None wininet.InternetTimeToSystemTimeA(_In_ LPCTSTR lpszTime,_Out_ SYSTEMTIME *pst,_In_ DWORD dwReserved)
PDH_STATUS None pdh.PdhValidatePathEx(_In_opt_ PDH_HLOG hDataSource,_In_ LPCTSTR szFullPathBuffer)
PDH_STATUS None pdh.PdhValidatePathExW(_In_opt_ PDH_HLOG hDataSource,_In_ LPCTSTR szFullPathBuffer)
PDH_STATUS None pdh.PdhValidatePathExA(_In_opt_ PDH_HLOG hDataSource,_In_ LPCTSTR szFullPathBuffer)
PDH_STATUS None pdh.PdhExpandWildCardPath(_In_ LPCTSTR szDataSource,_In_ LPCTSTR szWildCardPath,_Out_ LPTSTR mszExpandedPathList,_Inout_ LPDWORD pcchPathListLength,_In_ DWORD dwFlags)
PDH_STATUS None pdh.PdhExpandWildCardPathW(_In_ LPCTSTR szDataSource,_In_ LPCTSTR szWildCardPath,_Out_ LPTSTR mszExpandedPathList,_Inout_ LPDWORD pcchPathListLength,_In_ DWORD dwFlags)
PDH_STATUS None pdh.PdhExpandWildCardPathA(_In_ LPCTSTR szDataSource,_In_ LPCTSTR szWildCardPath,_Out_ LPTSTR mszExpandedPathList,_Inout_ LPDWORD pcchPathListLength,_In_ DWORD dwFlags)
void None None.DrawInstanced([in] UINT VertexCountPerInstance,[in] UINT InstanceCount,[in] UINT StartVertexLocation,[in] UINT StartInstanceLocation)
DWORD None wininet.InternetErrorDlg(_In_ HWND hWnd,_Inout_ HINTERNET hRequest,_In_ DWORD dwError,_In_ DWORD dwFlags,_Inout_ LPVOID *lppvData)
void None None.DeviceMemoryBarrier(void None None)
PDH_STATUS None pdh.PdhGetCounterTimeBase(_In_ PDH_HCOUNTER hCounter,_Out_ LONGLONG *pTimeBase)
void None None.asuint(in double value,out uint lowbits,out uint highbits)
ULONG WINAPI advapi32.PerfAddCounters(_In_ HANDLE hQuery,_Inout_ PPERF_COUNTER_IDENTIFIER pCounters,DWORD cbCounters None)
PPERF_COUNTERSET_INSTANCE None advapi32.PerfCreateInstance(_In_ HANDLE hProvider,_In_ LPCGUID CounterSetGuid,_In_ LPCWSTR szInstanceName,_In_ ULONG dwInstance)
void None None.ProcessTriTessFactorsMax(in float3 RawEdgeFactors,in float InsideScale,out float3 RoundedEdgeTessFactors,out float RoundedInsideTessFactor,out float UnroundedInsideTessFactor)
HRESULT None mf.CreateNamedPropertyStore(_Out_ INamedPropertyStore **ppStore)
DWORD WINAPI wininet.PrivacyGetZonePreferenceW(_In_ DWORD dwZone,_In_ DWORD dwType,_Out_opt_ LPDWORD pdwTemplate,_Out_opt_ LPWSTR *pszBuffer,_Inout_opt_ LPDWORD pdwBufferLength)
DWORD WINAPI wininet.PrivacyGetZonePreferenceW(_In_ DWORD dwZone,_In_ DWORD dwType,_Out_opt_ LPDWORD pdwTemplate,_Out_opt_ LPWSTR *pszBuffer,_Inout_opt_ LPDWORD pdwBufferLength)
HRESULT None None.GetDevice([out None None,retval] IDirect3DDevice9 **ppDevice)
BOOL WINAPI kernel32.IsNativeVhdBoot(_Out_ PBOOL *NativeVhdBoot)
DWORD None wininet.InternetSetFilePointer(_In_ HINTERNET hFile,_In_ LONG lDistanceToMove,_Inout_ PLONG lpDistanceToMoveHigh,_In_ DWORD dwMoveMethod,_In_ DWORD_PTR dwContext)
PDH_STATUS None pdh.PdhGetDefaultPerfObjectH(_In_ PDH_HLOG hDataSource,_In_ LPCTSTR szMachineName,_Out_ LPTSTR szDefaultObjectName,_Inout_ LPDWORD pcchBufferSize)
PDH_STATUS None pdh.PdhGetDefaultPerfObjectHW(_In_ PDH_HLOG hDataSource,_In_ LPCTSTR szMachineName,_Out_ LPTSTR szDefaultObjectName,_Inout_ LPDWORD pcchBufferSize)
PDH_STATUS None pdh.PdhGetDefaultPerfObjectHA(_In_ PDH_HLOG hDataSource,_In_ LPCTSTR szMachineName,_Out_ LPTSTR szDefaultObjectName,_Inout_ LPDWORD pcchBufferSize)
HRESULT None mfplat.MFTEnum(_In_ GUID guidCategory,_In_ UINT32 Flags,_In_ MFT_REGISTER_TYPE_INFO *pInputType,_In_ MFT_REGISTER_TYPE_INFO *pOutputType,_In_ IMFAttributes *pAttributes,_Out_ CLSID **ppclsidMFT,_Out_ UINT32 *pcMFTs)
HINTERNET None wininet.GopherOpenFile(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszLocator,_In_ LPCTSTR lpszView,_In_ DWORD dwFlags,_In_ DWORD_PTR dwContext)
HINTERNET None wininet.GopherOpenFileW(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszLocator,_In_ LPCTSTR lpszView,_In_ DWORD dwFlags,_In_ DWORD_PTR dwContext)
HINTERNET None wininet.GopherOpenFileA(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszLocator,_In_ LPCTSTR lpszView,_In_ DWORD dwFlags,_In_ DWORD_PTR dwContext)
HRESULT None None.GetValue([out] PROPVARIANT *pvValue)
HRESULT None None.D3DXCreateVolumeTextureFromFile(_In_ LPDIRECT3DDEVICE9 pDevice,_In_ LPCTSTR pSrcFile,_Out_ LPDIRECT3DVOLUMETEXTURE9 *ppVolumeTexture)
BOOL None None.GopherAttributeEnumerator(LPGOPHER_ATTRIBUTE_TYPE lpAttributeInfo None,DWORD dwError None)
PDH_STATUS None pdh.PdhEnumMachines(_In_ LPCTSTR szDataSource,_Out_ LPTSTR mszMachineNameList,_Inout_ LPDWORD pcchBufferLength)
PDH_STATUS None pdh.PdhEnumMachinesW(_In_ LPCTSTR szDataSource,_Out_ LPTSTR mszMachineNameList,_Inout_ LPDWORD pcchBufferLength)
PDH_STATUS None pdh.PdhEnumMachinesA(_In_ LPCTSTR szDataSource,_Out_ LPTSTR mszMachineNameList,_Inout_ LPDWORD pcchBufferLength)
ULONG None advapi32.PerfSetULongLongCounterValue(_In_ HANDLE hProvider,_In_ PPERF_COUNTERSET_INSTANCE pInstance,_In_ ULONG CounterId,_In_ ULONGLONG llValue)
HRESULT None None.D3DXCreateTextureFromFileEx(_In_ LPDIRECT3DDEVICE9 pDevice,_In_ LPCTSTR pSrcFile,_In_ UINT Width,_In_ UINT Height,_In_ UINT MipLevels,_In_ DWORD Usage,_In_ D3DFORMAT Format,_In_ D3DPOOL Pool,_In_ DWORD Filter,_In_ DWORD MipFilter,_In_ D3DCOLOR ColorKey,_Inout_ D3DXIMAGE_INFO *pSrcInfo,_Out_ PALETTEENTRY *pPalette,_Out_ LPDIRECT3DTEXTURE9 *ppTexture)
uint None None.reversebits(in uint value)
HRESULT None mfplat.MFDeserializePresentationDescriptor(DWORD cbData None,BYTE *pbData None,IMFPresentationDescriptor **ppPD None)
BOOL None wininet.FtpSetCurrentDirectory(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszDirectory)
BOOL None wininet.FtpSetCurrentDirectoryW(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszDirectory)
BOOL None wininet.FtpSetCurrentDirectoryA(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszDirectory)
DWORD None wininet.InternetHangUp(_In_ DWORD_PTR dwConnection,_In_ DWORD dwReserved)
INT None oleaut32.VariantTimeToDosDateTime(_In_ DOUBLE vtime,_Out_ USHORT *pwDosDate,_Out_ USHORT *pwDosTime)
BOOL None wininet.SetUrlCacheGroupAttribute(_In_ GROUPID gid,_In_ DWORD dwFlags,_In_ DWORD dwAttributes,_In_ LPINTERNET_CACHE_GROUP_INFO lpGroupInfo,_Inout_ LPVOID lpReserved)
BOOL None wininet.SetUrlCacheGroupAttributeW(_In_ GROUPID gid,_In_ DWORD dwFlags,_In_ DWORD dwAttributes,_In_ LPINTERNET_CACHE_GROUP_INFO lpGroupInfo,_Inout_ LPVOID lpReserved)
BOOL None wininet.SetUrlCacheGroupAttributeA(_In_ GROUPID gid,_In_ DWORD dwFlags,_In_ DWORD dwAttributes,_In_ LPINTERNET_CACHE_GROUP_INFO lpGroupInfo,_Inout_ LPVOID lpReserved)
BOOLAPI None wininet.CommitUrlCacheEntryA(_In_ LPCSTR lpszUrlName,_In_ LPCSTR lpszLocalFileName,_In_ FILETIME ExpireTime,_In_ FILETIME LastModifiedTime,_In_ DWORD CacheEntryType,_In_ LPBYTE lpHeaderInfo,_In_ DWORD cchHeaderInfo,_Reserved_ LPCSTR lpszFileExtension,_In_ LPCSTR lpszOriginalUrl)
float None None.f16tof32(in uint value)
virtual HRESULT oleacc.put_accName([in None None,optional] VARIANT varChild,[in] BSTR szName)
int None None.firstbitlow(in int value)
INTERNET_STATUS_CALLBACK None wininet.InternetSetStatusCallback(_In_ HINTERNET hInternet,_In_ INTERNET_STATUS_CALLBACK lpfnInternetCallback)
HANDLE None wininet.FindFirstUrlCacheEntryEx(_In_ LPCTSTR lpszUrlSearchPattern,_In_ DWORD dwFlags,_In_ DWORD dwFilter,_In_ GROUPID GroupId,_Out_ LPINTERNET_CACHE_ENTRY_INFO lpFirstCacheEntryInfo,_Inout_ LPDWORD lpdwEntryInfo,_Reserved_ LPVOID lpGroupAttributes,_Reserved_ LPDWORD lpcbGroupAttributes,_Reserved_ LPVOID lpReserved)
HANDLE None wininet.FindFirstUrlCacheEntryExW(_In_ LPCTSTR lpszUrlSearchPattern,_In_ DWORD dwFlags,_In_ DWORD dwFilter,_In_ GROUPID GroupId,_Out_ LPINTERNET_CACHE_ENTRY_INFO lpFirstCacheEntryInfo,_Inout_ LPDWORD lpdwEntryInfo,_Reserved_ LPVOID lpGroupAttributes,_Reserved_ LPDWORD lpcbGroupAttributes,_Reserved_ LPVOID lpReserved)
HANDLE None wininet.FindFirstUrlCacheEntryExA(_In_ LPCTSTR lpszUrlSearchPattern,_In_ DWORD dwFlags,_In_ DWORD dwFilter,_In_ GROUPID GroupId,_Out_ LPINTERNET_CACHE_ENTRY_INFO lpFirstCacheEntryInfo,_Inout_ LPDWORD lpdwEntryInfo,_Reserved_ LPVOID lpGroupAttributes,_Reserved_ LPDWORD lpcbGroupAttributes,_Reserved_ LPVOID lpReserved)
void None None.PSGetShader([out] ID3D10PixelShader **ppPixelShader)
HRESULT None None.AddEncryptionAttributes(_In_ IMFSample* pSample,_In_ bool fIsEncrypted)
HRESULT None None.UnlockAsyncMFT(IMFTransform *pMFT None)
HINTERNET None wininet.InternetOpen(_In_ LPCTSTR lpszAgent,_In_ DWORD dwAccessType,_In_ LPCTSTR lpszProxyName,_In_ LPCTSTR lpszProxyBypass,_In_ DWORD dwFlags)
HINTERNET None wininet.InternetOpenW(_In_ LPCTSTR lpszAgent,_In_ DWORD dwAccessType,_In_ LPCTSTR lpszProxyName,_In_ LPCTSTR lpszProxyBypass,_In_ DWORD dwFlags)
HINTERNET None wininet.InternetOpenA(_In_ LPCTSTR lpszAgent,_In_ DWORD dwAccessType,_In_ LPCTSTR lpszProxyName,_In_ LPCTSTR lpszProxyBypass,_In_ DWORD dwFlags)
HRESULT None None.D3DXCreateVolumeTexture(_In_ LPDIRECT3DDEVICE9 pDevice,_In_ UINT Width,_In_ UINT Height,_In_ UINT Depth,_In_ UINT MipLevels,_In_ DWORD Usage,_In_ D3DFORMAT Format,_In_ D3DPOOL Pool,_Out_ LPDIRECT3DVOLUMETEXTURE9 *ppVolumeTexture)
DWORD APIENTRY None.CollectPerformanceData(LPWSTR pQuery None,LPVOID *pData None,LPDWORD pcbData None,LPDWORD pObjectsReturned None)
DWORD STDAPI mfplat.MFMapDXGIFormatToDX9Format(_In_ DXGI_FORMAT dx11)
void None None.InterlockedAnd(in R dest,in T value,out T original_value)
BOOL None wininet.FtpGetFile(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszRemoteFile,_In_ LPCTSTR lpszNewFile,_In_ BOOL fFailIfExists,_In_ DWORD dwFlagsAndAttributes,_In_ DWORD dwFlags,_In_ DWORD_PTR dwContext)
BOOL None wininet.FtpGetFileW(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszRemoteFile,_In_ LPCTSTR lpszNewFile,_In_ BOOL fFailIfExists,_In_ DWORD dwFlagsAndAttributes,_In_ DWORD dwFlags,_In_ DWORD_PTR dwContext)
BOOL None wininet.FtpGetFileA(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszRemoteFile,_In_ LPCTSTR lpszNewFile,_In_ BOOL fFailIfExists,_In_ DWORD dwFlagsAndAttributes,_In_ DWORD dwFlags,_In_ DWORD_PTR dwContext)
BOOL None wininet.FtpGetCurrentDirectory(_In_ HINTERNET hConnect,_Out_ LPTSTR lpszCurrentDirectory,_Inout_ LPDWORD lpdwCurrentDirectory)
BOOL None wininet.FtpGetCurrentDirectoryW(_In_ HINTERNET hConnect,_Out_ LPTSTR lpszCurrentDirectory,_Inout_ LPDWORD lpdwCurrentDirectory)
BOOL None wininet.FtpGetCurrentDirectoryA(_In_ HINTERNET hConnect,_Out_ LPTSTR lpszCurrentDirectory,_Inout_ LPDWORD lpdwCurrentDirectory)
CLIENT_CALL_RETURN None rpcrt4.NdrDcomAsyncClientCall(_In_ PMIDL_STUB_DESC pStubDescriptor,_In_ PFORMAT_STRING pFormat,_Inout_ ... None)
BOOLAPI None wininet.DeleteUrlCacheEntry(_In_ LPCTSTR lpszUrlName)
BOOLAPI None wininet.DeleteUrlCacheEntryW(_In_ LPCTSTR lpszUrlName)
BOOLAPI None wininet.DeleteUrlCacheEntryA(_In_ LPCTSTR lpszUrlName)
numeric None None.mad(in numeric mvalue,in numeric avalue,in numeric bvalue)
DWORD WINAPI wininet.PrivacySetZonePreferenceW(_In_ DWORD dwZone,_In_ DWORD dwType,_In_ DWORD dwTemplate,_In_opt_ LPCWSTR pszPreference)
DWORD WINAPI wininet.PrivacySetZonePreferenceW(_In_ DWORD dwZone,_In_ DWORD dwType,_In_ DWORD dwTemplate,_In_opt_ LPCWSTR pszPreference)
HRESULT None evr.MFCreateDXSurfaceBuffer(_In_ REFIID riid,_In_ IUnknown *punkSurface,_In_ BOOL fBottomUpWhenLinear,_Out_ IMFMediaBuffer **ppBuffer)
BOOL None wininet.ResumeSuspendedDownload(_In_ HINTERNET hRequest,_In_ DWORD dwResultCode)
numeric None None.mad(in numeric mvalue,in numeric avalue,in numeric bvalue)
DWORD None wininet.InternetConfirmZoneCrossing(_In_ HWND hWnd,_In_ LPTSTR szUrlPrev,_In_ LPTSTR szUrlNew,_In_ BOOL bPost)
DWORD None wininet.InternetConfirmZoneCrossingW(_In_ HWND hWnd,_In_ LPTSTR szUrlPrev,_In_ LPTSTR szUrlNew,_In_ BOOL bPost)
DWORD None wininet.InternetConfirmZoneCrossingA(_In_ HWND hWnd,_In_ LPTSTR szUrlPrev,_In_ LPTSTR szUrlNew,_In_ BOOL bPost)
BOOL None jsproxy.InternetDeInitializeAutoProxyDll(_In_ LPSTR lpszMime,_In_ DWORD dwReserved)
HINTERNET None wininet.FtpOpenFile(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszFileName,_In_ DWORD dwAccess,_In_ DWORD dwFlags,_In_ DWORD_PTR dwContext)
HINTERNET None wininet.FtpOpenFileW(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszFileName,_In_ DWORD dwAccess,_In_ DWORD dwFlags,_In_ DWORD_PTR dwContext)
HINTERNET None wininet.FtpOpenFileA(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszFileName,_In_ DWORD dwAccess,_In_ DWORD dwFlags,_In_ DWORD_PTR dwContext)
BOOL None wininet.InternetLockRequestFile(_In_ HINTERNET hInternet,_Out_ HANDLE *lphLockReqHandle)
HRESULT None None.D3DXGetImageInfoFromResource(_In_ HMODULE hSrcModule,_In_ LPCTSTR pSrcFile,_In_ D3DXIMAGE_INFO *pSrcInfo)
HRESULT None None.MFGetAttributeString(_In_ IMFAttributes *pAttributes,_In_ REFGUID guidKey,_Out_ PWSTR *ppsz)
HRESULT None mf.MFCreateMediaSession(IMFAttributes *pConfiguration None,IMFMediaSession **ppMS None)
SECURITY_STATUS WINAPI ncrypt.SslCreateEphemeralKey(_In_ NCRYPT_PROV_HANDLE hSslProvider,_Out_ NCRYPT_KEY_HANDLE *phEphemeralKey,_In_ DWORD dwProtocol,_In_ DWORD dwCipherSuite,_In_ DWORD dwKeyType,_In_ DWORD dwKeyBitLen,_In_ PBYTE pbParams,_In_ DWORD cbParams,_In_ DWORD dwFlags)
void CALLBACK None.FreeMemory(_In_ LPVOID pBuffer,_In_ LPVOID pContext)
HRESULT None oleaut32.VarDateFromUdateEx(_In_ UDATE *pudateIn,_In_ LCID lcid,_In_ ULONG dwFlags,_Out_ DATE *pdateOut)
BOOL None wininet.InternetGoOnline(_In_ LPTSTR lpszURL,_In_ HWND hwndParent,_In_ DWORD dwFlags)
BOOL None wininet.InternetGoOnlineW(_In_ LPTSTR lpszURL,_In_ HWND hwndParent,_In_ DWORD dwFlags)
BOOL None wininet.InternetGoOnlineA(_In_ LPTSTR lpszURL,_In_ HWND hwndParent,_In_ DWORD dwFlags)
BOOL None wininet.InternetGetConnectedStateEx(_Out_ LPDWORD lpdwFlags,_Out_ LPTSTR lpszConnectionName,_In_ DWORD dwNameLen,_In_ DWORD dwReserved)
BOOL None wininet.InternetGetConnectedStateExW(_Out_ LPDWORD lpdwFlags,_Out_ LPTSTR lpszConnectionName,_In_ DWORD dwNameLen,_In_ DWORD dwReserved)
BOOL None wininet.InternetGetConnectedStateExA(_Out_ LPDWORD lpdwFlags,_Out_ LPTSTR lpszConnectionName,_In_ DWORD dwNameLen,_In_ DWORD dwReserved)
void None None.DeviceMemoryBarrierWithGroupSync(void None None)
HRESULT None None.GetSourceDuration(IMFMediaSource *pSource None,MFTIME *pDuration None)
int None None.asint(in value None)
HRESULT None mf.MFCreateVideoRenderer(_In_ REFIID riidRenderer,_Out_ void **ppVideoRenderer)
HRESULT None mf.MFCreateVideoRendererActivate(_In_ HWND hwndVideo,_Out_ IMFActivate **ppActivate)
void None None.printf(string format None,argument ... None)
HRESULT None mfplat.MFPutWorkItem(_In_ DWORD dwQueue,_In_ IMFAsyncCallback *pCallback,_In_ IUnknown *pState)
void None None.InterlockedMax(in R dest,in T value,out T original_value)
HRESULT None None.GetFrontBufferData([in None None,out] IDirect3DSurface9 *pDestSurface)
HRESULT None mfplat.MFTUnregister(_In_ CLSID clsidMFT)
HWND WINAPI user32.GetLastActivePopup(_In_ HWND hWnd)
HRESULT None mf.MFCreateASFMultiplexer(IMFASFMultiplexer **ppIMultiplexer None)
BOOL None wininet.InternetGetLastResponseInfo(_Out_ LPDWORD lpdwError,_Out_ LPTSTR lpszBuffer,_Inout_ LPDWORD lpdwBufferLength)
BOOL None wininet.InternetGetLastResponseInfoW(_Out_ LPDWORD lpdwError,_Out_ LPTSTR lpszBuffer,_Inout_ LPDWORD lpdwBufferLength)
BOOL None wininet.InternetGetLastResponseInfoA(_Out_ LPDWORD lpdwError,_Out_ LPTSTR lpszBuffer,_Inout_ LPDWORD lpdwBufferLength)
DWORD None wininet.InternetSetCookieEx(_In_ LPCTSTR lpszURL,_In_ LPCTSTR lpszCookieName,_In_ LPCTSTR lpszCookieData,_In_ DWORD dwFlags,_In_ DWORD_PTR dwReserved)
DWORD None wininet.InternetSetCookieExW(_In_ LPCTSTR lpszURL,_In_ LPCTSTR lpszCookieName,_In_ LPCTSTR lpszCookieData,_In_ DWORD dwFlags,_In_ DWORD_PTR dwReserved)
DWORD None wininet.InternetSetCookieExA(_In_ LPCTSTR lpszURL,_In_ LPCTSTR lpszCookieName,_In_ LPCTSTR lpszCookieData,_In_ DWORD dwFlags,_In_ DWORD_PTR dwReserved)
float None None.ddx_fine(in float value)
DWORD APIENTRY None.ClosePerformanceData(void None None)
PDH_STATUS None pdh.PdhValidatePath(_In_ LPCTSTR szFullCounterPath)
PDH_STATUS None pdh.PdhValidatePathW(_In_ LPCTSTR szFullCounterPath)
PDH_STATUS None pdh.PdhValidatePathA(_In_ LPCTSTR szFullCounterPath)
HRESULT WINAPI mfplat.MFCreatePropertiesFromMediaType(_In_ IMFMediaType *pMediaType,_In_ REFIID riid,_Out_ void **ppv)
BOOL None wininet.DetectAutoProxyUrl(_Inout_ LPSTR lpszAutoProxyUrl,_In_ DWORD dwAutoProxyUrlLength,_In_ DWORD dwDetectFlags)
HRESULT None None.D3DXCreateCubeTextureFromResource(_In_ LPDIRECT3DDEVICE9 pDevice,_In_ HMODULE hSrcModule,_In_ LPCTSTR pSrcResource,_Out_ LPDIRECT3DCUBETEXTURE9 *ppCubeTexture)
virtual HRESULT oleacc.put_accName([in None None,optional] VARIANT varChild,[in] BSTR szName)
BOOLAPI None wininet.SetUrlCacheEntryInfo(_In_ LPCTSTR lpszUrlName,_In_ LPINTERNET_CACHE_ENTRY_INFO lpCacheEntryInfo,_In_ DWORD dwFieldControl)
BOOLAPI None wininet.SetUrlCacheEntryInfoW(_In_ LPCTSTR lpszUrlName,_In_ LPINTERNET_CACHE_ENTRY_INFO lpCacheEntryInfo,_In_ DWORD dwFieldControl)
BOOLAPI None wininet.SetUrlCacheEntryInfoA(_In_ LPCTSTR lpszUrlName,_In_ LPINTERNET_CACHE_ENTRY_INFO lpCacheEntryInfo,_In_ DWORD dwFieldControl)
uint None None.countbits(in uint value)
HRESULT None None.D3DXCreateTextureFromFileInMemory(_In_ LPDIRECT3DDEVICE9 pDevice,_In_ LPCVOID pSrcData,_In_ UINT SrcDataSize,_Out_ LPDIRECT3DTEXTURE9 *ppTexture)
BOOL None jsproxy.InternetInitializeAutoProxyDll(_In_ DWORD dwReserved)
typedef None None.HRESULT(CALLBACK *PDXVAHDSW_GetVideoProcessorCaps None)
HINTERNET None wininet.InternetOpenUrl(_In_ HINTERNET hInternet,_In_ LPCTSTR lpszUrl,_In_ LPCTSTR lpszHeaders,_In_ DWORD dwHeadersLength,_In_ DWORD dwFlags,_In_ DWORD_PTR dwContext)
HINTERNET None wininet.InternetOpenUrlW(_In_ HINTERNET hInternet,_In_ LPCTSTR lpszUrl,_In_ LPCTSTR lpszHeaders,_In_ DWORD dwHeadersLength,_In_ DWORD dwFlags,_In_ DWORD_PTR dwContext)
HINTERNET None wininet.InternetOpenUrlA(_In_ HINTERNET hInternet,_In_ LPCTSTR lpszUrl,_In_ LPCTSTR lpszHeaders,_In_ DWORD dwHeadersLength,_In_ DWORD dwFlags,_In_ DWORD_PTR dwContext)
void None None.GroupMemoryBarrierWithGroupSync(void None None)
HRESULT None None.D3DXCheckVolumeTextureRequirements(_In_ LPDIRECT3DDEVICE9 pDevice,_Inout_ UINT *pWidth,_Inout_ UINT *pHeight,_Inout_ UINT *pDepth,_Inout_ UINT *pNumMipLevels,_In_ DWORD Usage,_Inout_ D3DFORMAT *pFormat,_In_ D3DPOOL Pool)
void None None.ProcessQuadTessFactorsMax(in float4 RawEdgeFactors,in float InsideScale,out float4 RoundedEdgeTessFactors,out float2 RoundedInsideTessFactors,out float2 UnroundedInsideTessFactors)
HRESULT None mfplat.MFCreateFile(MF_FILE_ACCESSMODE AccessMode None,MF_FILE_OPENMODE OpenMode None,MF_FILE_FLAGS fFlags None,LPCWSTR pwszFileURL None,IMFByteStream **ppIByteStream None)
public void None.UpdateTimelineProperties(SystemMediaTransportControlsTimelineProperties timelineProperties None)
void None None.GroupMemoryBarrier(void None None)
HINTERNET None wininet.HttpOpenRequest(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszVerb,_In_ LPCTSTR lpszObjectName,_In_ LPCTSTR lpszVersion,_In_ LPCTSTR lpszReferer,_In_ LPCTSTR *lplpszAcceptTypes,_In_ DWORD dwFlags,_In_ DWORD_PTR dwContext)
HINTERNET None wininet.HttpOpenRequestW(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszVerb,_In_ LPCTSTR lpszObjectName,_In_ LPCTSTR lpszVersion,_In_ LPCTSTR lpszReferer,_In_ LPCTSTR *lplpszAcceptTypes,_In_ DWORD dwFlags,_In_ DWORD_PTR dwContext)
HINTERNET None wininet.HttpOpenRequestA(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszVerb,_In_ LPCTSTR lpszObjectName,_In_ LPCTSTR lpszVersion,_In_ LPCTSTR lpszReferer,_In_ LPCTSTR *lplpszAcceptTypes,_In_ DWORD dwFlags,_In_ DWORD_PTR dwContext)
uint None None.f32tof16(in float value)
BOOL None wininet.CreateMD5SSOHash(_In_ PWSTR pszChallengeInfo,_In_ PWSTR pwszRealm,_In_ PWSTR pwszTarget,_Out_ PBYTE pbHexHash)
HRESULT None None.SetUINT64([in] REFGUID guidKey,[in] UINT64 unValue)
LONGLONG WINAPI mfplat.MFllMulDiv(LONGLONG a None,LONGLONG b None,LONGLONG c None,LONGLONG d None)
BOOLAPI None wininet.GetUrlCacheEntryInfoEx(_In_ LPCTSTR lpszUrl,_Inout_opt_ LPINTERNET_CACHE_ENTRY_INFO lpCacheEntryInfo,_Inout_opt_ LPDWORD lpcbCacheEntryInfo,_Reserved_ LPTSTR lpszRedirectUrl,_Reserved_ LPDWORD lpcbRedirectUrl,_Reserved_ LPVOID lpReserved,_In_ DWORD dwFlags)
BOOLAPI None wininet.GetUrlCacheEntryInfoExW(_In_ LPCTSTR lpszUrl,_Inout_opt_ LPINTERNET_CACHE_ENTRY_INFO lpCacheEntryInfo,_Inout_opt_ LPDWORD lpcbCacheEntryInfo,_Reserved_ LPTSTR lpszRedirectUrl,_Reserved_ LPDWORD lpcbRedirectUrl,_Reserved_ LPVOID lpReserved,_In_ DWORD dwFlags)
BOOLAPI None wininet.GetUrlCacheEntryInfoExA(_In_ LPCTSTR lpszUrl,_Inout_opt_ LPINTERNET_CACHE_ENTRY_INFO lpCacheEntryInfo,_Inout_opt_ LPDWORD lpcbCacheEntryInfo,_Reserved_ LPTSTR lpszRedirectUrl,_Reserved_ LPDWORD lpcbRedirectUrl,_Reserved_ LPVOID lpReserved,_In_ DWORD dwFlags)
BOOL WINAPI user32.AllowSetForegroundWindow(_In_ DWORD dwProcessId)
HRESULT None oleacc.get_accParent([out None None,retval] IDispatch **ppdispParent)
BOOL None wininet.HttpQueryInfo(_In_ HINTERNET hRequest,_In_ DWORD dwInfoLevel,_Inout_ LPVOID lpvBuffer,_Inout_ LPDWORD lpdwBufferLength,_Inout_ LPDWORD lpdwIndex)
BOOL None wininet.HttpQueryInfoW(_In_ HINTERNET hRequest,_In_ DWORD dwInfoLevel,_Inout_ LPVOID lpvBuffer,_Inout_ LPDWORD lpdwBufferLength,_Inout_ LPDWORD lpdwIndex)
BOOL None wininet.HttpQueryInfoA(_In_ HINTERNET hRequest,_In_ DWORD dwInfoLevel,_Inout_ LPVOID lpvBuffer,_Inout_ LPDWORD lpdwBufferLength,_Inout_ LPDWORD lpdwIndex)
typedef None None.HRESULT(CALLBACK *PDXVAHDSW_GetVideoProcessStreamStatePrivate None)
DWORD None wininet.InternetDial(_In_ HWND hwndParent,_In_ LPTSTR pszEntryName,_In_ DWORD dwFlags,_Out_ DWORD_PTR *lpdwConnection,_In_ DWORD dwReserved)
DWORD None wininet.InternetDialW(_In_ HWND hwndParent,_In_ LPTSTR pszEntryName,_In_ DWORD dwFlags,_Out_ DWORD_PTR *lpdwConnection,_In_ DWORD dwReserved)
DWORD None wininet.InternetDialA(_In_ HWND hwndParent,_In_ LPTSTR pszEntryName,_In_ DWORD dwFlags,_Out_ DWORD_PTR *lpdwConnection,_In_ DWORD dwReserved)
BOOL None wininet.GetUrlCacheGroupAttribute(_In_ GROUPID gid,_Reserved_ DWORD dwFlags,_In_ DWORD dwAttributes,_Out_ LPINTERNET_CACHE_GROUP_INFO lpGroupInfo,_Inout_ LPDWORD lpdwGroupInfo,_Reserved_ LPVOID lpReserved)
BOOL None wininet.GetUrlCacheGroupAttributeW(_In_ GROUPID gid,_Reserved_ DWORD dwFlags,_In_ DWORD dwAttributes,_Out_ LPINTERNET_CACHE_GROUP_INFO lpGroupInfo,_Inout_ LPDWORD lpdwGroupInfo,_Reserved_ LPVOID lpReserved)
BOOL None wininet.GetUrlCacheGroupAttributeA(_In_ GROUPID gid,_Reserved_ DWORD dwFlags,_In_ DWORD dwAttributes,_Out_ LPINTERNET_CACHE_GROUP_INFO lpGroupInfo,_Inout_ LPDWORD lpdwGroupInfo,_Reserved_ LPVOID lpReserved)
HRESULT STDMETHODCALLTYPE ole32.CStdAsyncStubBuffer_Invoke(_In_ IRpcStubBuffer *pthis,_In_ RPCOLEMESSAGE *_prpcmsg,_In_ IRpcChannelBuffer *_pRpcChannelBuffer)
HRESULT None None.D3DXCreateVolumeTextureFromFileInMemoryEx(_In_ LPDIRECT3DDEVICE9 pDevice,_In_ LPCVOID pSrcData,_In_ UINT SrcDataSize,_In_ UINT Width,_In_ UINT Height,_In_ UINT Depth,_In_ UINT MipLevels,_In_ DWORD Usage,_In_ D3DFORMAT Format,_In_ D3DPOOL Pool,_In_ DWORD Filter,_In_ DWORD MipFilter,_In_ D3DCOLOR ColorKey,_Inout_ D3DXIMAGE_INFO *pSrcInfo,_Out_ PALETTEENTRY *pPalette,_Out_ LPDIRECT3DVOLUMETEXTURE9 *ppVolumeTexture)
HRESULT None mf.MFCreateAudioRendererActivate(_Out_ IMFActivate **ppActivate)
GROUPID None wininet.CreateUrlCacheGroup(_In_ DWORD dwFlags,_Reserved_ LPVOID lpReserved)
void None None.Process2DQuadTessFactorsMin(in float4 RawEdgeFactors,in float2 InsideScale,out float4 RoundedEdgeTessFactors,out float2 RoundedInsideTessFactors,out float2 UnroundedInsideTessFactors)
HRESULT None mfplat.MFCreateAlignedMemoryBuffer(DWORD cbMaxLength None,DWORD fAlignmentFlags None,IMFMediaBuffer **ppBuffer None)
void None None.InterlockedMin(in R dest,in T value,out T original_value)
BOOL WINAPI wininet.InternetClearAllPerSiteCookieDecisions(void None None)
void None None.AllMemoryBarrier(void None None)
BOOL None wininet.InternetAutodial(_In_ DWORD dwFlags,_In_ HWND hwndParent)
HRESULT None dxva2.DXVA2CreateDirect3DDeviceManager9(_Out_ UINT *pResetToken,_Out_ IDirect3DDeviceManager9 **ppDXVAManager)
typedef None None.HRESULT(CALLBACK *PDXVAHDSW_GetVideoProcessorOutputFormats None)
STDAPI None mfplat.MFCreateContentDecryptorContext(_In_ REFGUID guidMediaProtectionSystemId,_In_opt_ IMFDXGIDeviceManager *pD3DManager,_In_ IMFContentProtectionDevice *pContentProtectionDevice,_Out_ IMFContentDecryptorContext **ppContentDecryptorContext)
HRESULT None mfplat.MFWrapMediaType(IMFMediaType *pOrig None,REFGUID MajorType None,REFGUID SubType None,IMFMediaType **ppWrap None)
HRESULT None dxva2.DXVA2CreateVideoService(IDirect3DDevice9 *pDD None,REFIID riid None,void **ppService None)
HRESULT None None.D3DXCreateTextureFromFile(_In_ LPDIRECT3DDEVICE9 pDevice,_In_ LPCTSTR pSrcFile,_Out_ LPDIRECT3DTEXTURE9 *ppTexture)
BOOL None wininet.InternetReadFile(_In_ HINTERNET hFile,_Out_ LPVOID lpBuffer,_In_ DWORD dwNumberOfBytesToRead,_Out_ LPDWORD lpdwNumberOfBytesRead)
void None None.ProcessTriTessFactorsMin(in float3 RawEdgeFactors,in float InsideScale,out float3 RoundedEdgeTessFactors,out float RoundedInsideTessFactors,out float UnroundedInsideTessFactors)
PDH_STATUS None pdh.PdhComputeCounterStatistics(_In_ PDH_HCOUNTER hCounter,_In_ DWORD dwFormat,_In_ DWORD dwFirstEntry,_In_ DWORD dwNumEntries,_In_ PPDH_RAW_COUNTER lpRawValueArray,_Out_ PPDH_STATISTICS data)
BOOL None wininet.InternetSetCookie(_In_ LPCTSTR lpszUrl,_In_ LPCTSTR lpszCookieName,_In_ LPCTSTR lpszCookieData)
BOOL None wininet.InternetSetCookieW(_In_ LPCTSTR lpszUrl,_In_ LPCTSTR lpszCookieName,_In_ LPCTSTR lpszCookieData)
BOOL None wininet.InternetSetCookieA(_In_ LPCTSTR lpszUrl,_In_ LPCTSTR lpszCookieName,_In_ LPCTSTR lpszCookieData)
DXGI_FORMAT STDAPI mfplat.MFMapDX9FormatToDXGIFormat(_In_ DWORD dx9)
bool None None.CheckAccessFullyMapped(in uint_only status)
BOOL None wininet.FtpRenameFile(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszExisting,_In_ LPCTSTR lpszNew)
BOOL None wininet.FtpRenameFileW(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszExisting,_In_ LPCTSTR lpszNew)
BOOL None wininet.FtpRenameFileA(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszExisting,_In_ LPCTSTR lpszNew)
STDAPI None mf.MFCreateTranscodeTopology(_In_ IMFMediaSource *pSrc,_In_ LPCWSTR pwszOutputFilePath,_In_ IMFTranscodeProfile *pProfile,_Out_ IMFTopology **ppTranscodeTopo)
BOOL None wininet.InternetCombineUrl(_In_ LPCTSTR lpszBaseUrl,_In_ LPCTSTR lpszRelativeUrl,_Out_ LPTSTR lpszBuffer,_Inout_ LPDWORD lpdwBufferLength,_In_ DWORD dwFlags)
BOOL None wininet.InternetCombineUrlW(_In_ LPCTSTR lpszBaseUrl,_In_ LPCTSTR lpszRelativeUrl,_Out_ LPTSTR lpszBuffer,_Inout_ LPDWORD lpdwBufferLength,_In_ DWORD dwFlags)
BOOL None wininet.InternetCombineUrlA(_In_ LPCTSTR lpszBaseUrl,_In_ LPCTSTR lpszRelativeUrl,_Out_ LPTSTR lpszBuffer,_Inout_ LPDWORD lpdwBufferLength,_In_ DWORD dwFlags)
BOOLAPI None wininet.FindNextUrlCacheEntry(_In_ HANDLE hEnumHandle,_Out_ LPINTERNET_CACHE_ENTRY_INFO lpNextCacheEntryInfo,_Inout_ LPDWORD lpcbCacheEntryInfo)
BOOLAPI None wininet.FindNextUrlCacheEntryW(_In_ HANDLE hEnumHandle,_Out_ LPINTERNET_CACHE_ENTRY_INFO lpNextCacheEntryInfo,_Inout_ LPDWORD lpcbCacheEntryInfo)
BOOLAPI None wininet.FindNextUrlCacheEntryA(_In_ HANDLE hEnumHandle,_Out_ LPINTERNET_CACHE_ENTRY_INFO lpNextCacheEntryInfo,_Inout_ LPDWORD lpcbCacheEntryInfo)
BOOL None wininet.GopherCreateLocator(_In_ LPCTSTR lpszHost,_In_ INTERNET_PORT nServerPort,_In_ LPCTSTR lpszDisplayString,_In_ LPCTSTR lpszSelectorString,_In_ DWORD dwGopherType,_Out_ LPTSTR lpszLocator,_Inout_ LPDWORD lpdwBufferLength)
BOOL None wininet.GopherCreateLocatorW(_In_ LPCTSTR lpszHost,_In_ INTERNET_PORT nServerPort,_In_ LPCTSTR lpszDisplayString,_In_ LPCTSTR lpszSelectorString,_In_ DWORD dwGopherType,_Out_ LPTSTR lpszLocator,_Inout_ LPDWORD lpdwBufferLength)
BOOL None wininet.GopherCreateLocatorA(_In_ LPCTSTR lpszHost,_In_ INTERNET_PORT nServerPort,_In_ LPCTSTR lpszDisplayString,_In_ LPCTSTR lpszSelectorString,_In_ DWORD dwGopherType,_Out_ LPTSTR lpszLocator,_Inout_ LPDWORD lpdwBufferLength)
BOOL None wininet.InternetAutodialHangup(_In_ DWORD dwReserved)
BOOL None wininet.FtpCommand(_In_ HINTERNET hConnect,_In_ BOOL fExpectResponse,_In_ DWORD dwFlags,_In_ LPCTSTR lpszCommand,_In_ DWORD_PTR dwContext,_Out_ HINTERNET *phFtpCommand)
BOOL None wininet.FtpCommandW(_In_ HINTERNET hConnect,_In_ BOOL fExpectResponse,_In_ DWORD dwFlags,_In_ LPCTSTR lpszCommand,_In_ DWORD_PTR dwContext,_Out_ HINTERNET *phFtpCommand)
BOOL None wininet.FtpCommandA(_In_ HINTERNET hConnect,_In_ BOOL fExpectResponse,_In_ DWORD dwFlags,_In_ LPCTSTR lpszCommand,_In_ DWORD_PTR dwContext,_Out_ HINTERNET *phFtpCommand)
float None None.ddy_fine(in float value)
BOOL WINAPI wininet.InternetSetPerSiteCookieDecision(_In_ LPCTSTR pchHostName,_In_ DWORD dwDecision)
BOOL WINAPI wininet.InternetSetPerSiteCookieDecisionW(_In_ LPCTSTR pchHostName,_In_ DWORD dwDecision)
BOOL WINAPI wininet.InternetSetPerSiteCookieDecisionA(_In_ LPCTSTR pchHostName,_In_ DWORD dwDecision)
HINTERNET None wininet.GopherFindFirstFile(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszLocator,_In_ LPCTSTR lpszSearchString,_Out_ LPGOPHER_FIND_DATA lpFindData,_In_ DWORD dwFlags,_In_ DWORD_PTR dwContext)
HINTERNET None wininet.GopherFindFirstFileW(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszLocator,_In_ LPCTSTR lpszSearchString,_Out_ LPGOPHER_FIND_DATA lpFindData,_In_ DWORD dwFlags,_In_ DWORD_PTR dwContext)
HINTERNET None wininet.GopherFindFirstFileA(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszLocator,_In_ LPCTSTR lpszSearchString,_Out_ LPGOPHER_FIND_DATA lpFindData,_In_ DWORD dwFlags,_In_ DWORD_PTR dwContext)
int WINAPI None.EnumerateCacheOld(HWND hX None)
BOOL None wininet.InternetWriteFile(_In_ HINTERNET hFile,_In_ LPCVOID lpBuffer,_In_ DWORD dwNumberOfBytesToWrite,_Out_ LPDWORD lpdwNumberOfBytesWritten)
HRESULT None oleacc.get_accChildCount([out None None,retval] long *pcountChildren)
HRESULT None None.D3DXFillTextureTX(_Inout_ LPDIRECT3DTEXTURE9 pTexture,_In_ LPD3DXTEXTURESHADER pTextureShader)
HRESULT None None.D3DXGetImageInfoFromFile(_In_ LPCSTR pSrcFile,_In_ D3DXIMAGE_INFO *pSrcInfo)
BOOL None wininet.GopherGetLocatorType(_In_ LPCTSTR lpszLocator,_Out_ LPDWORD lpdwGopherType)
BOOL None wininet.GopherGetLocatorTypeW(_In_ LPCTSTR lpszLocator,_Out_ LPDWORD lpdwGopherType)
BOOL None wininet.GopherGetLocatorTypeA(_In_ LPCTSTR lpszLocator,_Out_ LPDWORD lpdwGopherType)
HRESULT None None.GetSourceFlags(IMFSourceReader *pReader None,ULONG *pulFlags None)
HANDLE None wininet.FindFirstUrlCacheGroup(_Reserved_ DWORD dwFlags,_In_ DWORD dwFilter,_Reserved_ LPVOID lpSearchCondition,_Reserved_ DWORD dwSearchCondition,_Out_ GROUPID *lpGroupId,_Reserved_ LPVOID lpReserved)
BOOLAPI None wininet.SetUrlCacheEntryGroup(_In_ LPCTSTR lpszUrlName,_In_ DWORD dwFlags,_In_ GROUPID GroupId,_In_ LPBYTE pbGroupAttributes,_In_ DWORD cbGroupAttributes,_In_ LPVOID lpReserved)
BOOLAPI None wininet.SetUrlCacheEntryGroupW(_In_ LPCTSTR lpszUrlName,_In_ DWORD dwFlags,_In_ GROUPID GroupId,_In_ LPBYTE pbGroupAttributes,_In_ DWORD cbGroupAttributes,_In_ LPVOID lpReserved)
BOOLAPI None wininet.SetUrlCacheEntryGroupA(_In_ LPCTSTR lpszUrlName,_In_ DWORD dwFlags,_In_ GROUPID GroupId,_In_ LPBYTE pbGroupAttributes,_In_ DWORD cbGroupAttributes,_In_ LPVOID lpReserved)
HRESULT None None.GetCount([out] UINT32 *pcItems)
BOOL None wininet.HttpAddRequestHeaders(_In_ HINTERNET hRequest,_In_ LPCTSTR lpszHeaders,_In_ DWORD dwHeadersLength,_In_ DWORD dwModifiers)
BOOL None wininet.HttpAddRequestHeadersW(_In_ HINTERNET hRequest,_In_ LPCTSTR lpszHeaders,_In_ DWORD dwHeadersLength,_In_ DWORD dwModifiers)
BOOL None wininet.HttpAddRequestHeadersA(_In_ HINTERNET hRequest,_In_ LPCTSTR lpszHeaders,_In_ DWORD dwHeadersLength,_In_ DWORD dwModifiers)
HRESULT None mfplat.MFInitMediaTypeFromAMMediaType(IMFMediaType *pMFType None,const AM_MEDIA_TYPE *pAMType)
HRESULT None oleaut32.GetRecordInfoFromTypeInfo(_In_ ITypeInfo *pTypeInfo,_Out_ IRecordInfo **ppRecInfo)
SECURITY_STATUS WINAPI ncrypt.SslSignHash(_In_ NCRYPT_PROV_HANDLE hSslProvider,_In_ NCRYPT_KEY_HANDLE hPrivateKey,_In_ PBYTE pbHashValue,_In_ DWORD cbHashValue,_Out_ PBYTE pbSignature,_In_ DWORD cbSignature,_Out_ DWORD *pcbResult,_In_ DWORD dwFlags)
HRESULT None None.MFSetAttribute2UINT32asUINT64(_In_ IMFAttributes *pAttributes,_In_ REFGUID guidKey,_In_ UINT32 unHigh32,_In_ UINT32 unLow32)
HRESULT None oleacc.get_accValue([in] VARIANT varID,[out None None,retval] BSTR *pszValue)
ULONG WINAPI advapi32.PerfQueryCounterData(_In_ HANDLE hQuery,_Out_opt_ PPERF_DATA_HEADER pCounterBlock,DWORD cbCounterBlock None,_Out_ LPDWORD pcbCounterBlockActual)
HRESULT None mfplat.MFCalculateImageSize(_In_ REFGUID guidSubtype,_In_ UINT32 unWidth,_In_ UINT32 unHeight,_Out_ UINT32 *pcbImageSize)
BOOL None wininet.InternetQueryOption(_In_ HINTERNET hInternet,_In_ DWORD dwOption,_Out_ LPVOID lpBuffer,_Inout_ LPDWORD lpdwBufferLength)
BOOL None wininet.InternetQueryOptionW(_In_ HINTERNET hInternet,_In_ DWORD dwOption,_Out_ LPVOID lpBuffer,_Inout_ LPDWORD lpdwBufferLength)
BOOL None wininet.InternetQueryOptionA(_In_ HINTERNET hInternet,_In_ DWORD dwOption,_Out_ LPVOID lpBuffer,_Inout_ LPDWORD lpdwBufferLength)
HRESULT None None.D3DXCreateCubeTexture(_In_ LPDIRECT3DDEVICE9 pDevice,_In_ UINT Size,_In_ UINT MipLevels,_In_ DWORD Usage,_In_ D3DFORMAT Format,_In_ D3DPOOL Pool,_Out_ LPDIRECT3DCUBETEXTURE9 *ppCubeTexture)
void None None.InterlockedXor(in R dest,in T value,out T original_value)
DWORD None wininet.FtpGetFileSize(_In_ HINTERNET hFile,_Out_ LPDWORD lpdwFileSizeHigh)
BOOL None wininet.HttpEndRequest(_In_ HINTERNET hRequest,_Out_opt_ LPINTERNET_BUFFERS lpBuffersOut,_In_ DWORD dwFlags,_In_opt_ DWORD_PTR dwContext)
BOOL None wininet.HttpEndRequestW(_In_ HINTERNET hRequest,_Out_opt_ LPINTERNET_BUFFERS lpBuffersOut,_In_ DWORD dwFlags,_In_opt_ DWORD_PTR dwContext)
BOOL None wininet.HttpEndRequestA(_In_ HINTERNET hRequest,_Out_opt_ LPINTERNET_BUFFERS lpBuffersOut,_In_ DWORD dwFlags,_In_opt_ DWORD_PTR dwContext)
BOOLAPI None wininet.ReadUrlCacheEntryStream(_In_ HANDLE hUrlCacheStream,_In_ DWORD dwLocation,_Inout_ LPVOID lpBuffer,_Inout_ LPDWORD lpdwLen,_In_ DWORD dwReserved)
HRESULT None mfplat.MFInitAMMediaTypeFromMFMediaType(IMFMediaType *pMFType None,GUID guidFormatBlockType None,AM_MEDIA_TYPE *pAMType None)
void None None.Process2DQuadTessFactorsMax(in float4 RawEdgeFactors,in float2 InsideScale,out float4 RoundedEdgeTessFactors,out float2 RoundedInsideTessFactors,out float2 UnroundedInsideTessFactors)
HRESULT None mfplat.MFEndRegisterWorkQueueWithMMCSS(_In_ IMFAsyncResult *pResult,_In_ DWORD *pdwTaskId)
void None None.InterlockedAdd(in R dest,in T value,out T original_value)
HRESULT None None.GetCount([out] UINT32 *pcItems)
HRESULT None oleacc.get_accDefaultAction([in] VARIANT varID,[out None None,retval] BSTR *pszDefaultAction)
MFVideoArea None None.MakeArea(float x None,float y None,DWORD width None,DWORD height None)
HRESULT None None.SetGeometricAperture(IMFMediaType *pMediaType None,const MFVideoArea area)
HRESULT None oleacc.get_accState([in] VARIANT varID,[out None None,retval] VARIANT *pvarState)
HRESULT None oleacc.accNavigate([in] long navDir,[in] VARIANT varStart,[out None None,retval] VARIANT *pvarEnd)
tex None None.t(n None None)
HRESULT None None.CopyAllItems([in] IMFAttributes *pDest)
HRESULT None None.IsCameraInUse(_In_z_ LPCWSTR symbolicName,_Out_ BOOL* pfInUse)
void None None.Unpack2UINT32AsUINT64([in] UINT64 unPacked,[out] UINT32 *punHigh,[out] UINT32 *punLow)
void CALLBACK None.InternetStatusCallback(_In_ HINTERNET hInternet,_In_ DWORD_PTR dwContext,_In_ DWORD dwInternetStatus,_In_ LPVOID lpvStatusInformation,_In_ DWORD dwStatusInformationLength)
BOOL None wininet.FtpDeleteFile(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszFileName)
BOOL None wininet.FtpDeleteFileW(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszFileName)
BOOL None wininet.FtpDeleteFileA(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszFileName)
HRESULT None None.GetUINT64([in] REFGUID guidKey,[out] UINT64 *punValue)
void None None.abort( None None)
void None None.ProcessQuadTessFactorsAvg(in float4 RawEdgeFactors,in float InsideScale,out float4 RoundedEdgeTessFactors,out float2 RoundedInsideTessFactors,out float2 UnroundedInsideTessFactors)
BOOLAPI None wininet.CommitUrlCacheEntryW(_In_ LPCWSTR lpszUrlName,_In_ LPCWSTR lpszLocalFileName,_In_ FILETIME ExpireTime,_In_ FILETIME LastModifiedTime,_In_ DWORD CacheEntryType,_In_ LPCWSTR lpHeaderInfo,_In_ DWORD cchHeaderInfo,_Reserved_ LPCWSTR lpszFileExtension,_In_ LPCWSTR lpszOriginalUrl)
BOOL None wininet.GopherGetAttribute(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszLocator,_In_ LPCTSTR lpszAttributeName,_Out_ LPBYTE lpBuffer,_In_ DWORD dwBufferLength,_Out_ LPDWORD lpdwCharactersReturned,_In_ GOPHER_ATTRIBUTE_ENUMERATOR lpfnEnumerator,_In_ DWORD_PTR dwContext)
BOOL None wininet.GopherGetAttributeW(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszLocator,_In_ LPCTSTR lpszAttributeName,_Out_ LPBYTE lpBuffer,_In_ DWORD dwBufferLength,_Out_ LPDWORD lpdwCharactersReturned,_In_ GOPHER_ATTRIBUTE_ENUMERATOR lpfnEnumerator,_In_ DWORD_PTR dwContext)
BOOL None wininet.GopherGetAttributeA(_In_ HINTERNET hConnect,_In_ LPCTSTR lpszLocator,_In_ LPCTSTR lpszAttributeName,_Out_ LPBYTE lpBuffer,_In_ DWORD dwBufferLength,_Out_ LPDWORD lpdwCharactersReturned,_In_ GOPHER_ATTRIBUTE_ENUMERATOR lpfnEnumerator,_In_ DWORD_PTR dwContext)
void None None.AllMemoryBarrierWithGroupSync(void None None)
HRESULT None None.QueryHeader([in] PCWSTR szHeaderName,[in] DWORD dwIndex,[out] PWSTR *ppszHeaderValue)
PDH_STATUS None pdh.PdhGetDefaultPerfCounterH(_In_ PDH_HLOG hDataSource,_In_ LPCTSTR szMachineName,_In_ LPCTSTR szObjectName,_Out_ LPTSTR szDefaultCounterName,_Inout_ LPDWORD pcchBufferSize)
PDH_STATUS None pdh.PdhGetDefaultPerfCounterHW(_In_ PDH_HLOG hDataSource,_In_ LPCTSTR szMachineName,_In_ LPCTSTR szObjectName,_Out_ LPTSTR szDefaultCounterName,_Inout_ LPDWORD pcchBufferSize)
PDH_STATUS None pdh.PdhGetDefaultPerfCounterHA(_In_ PDH_HLOG hDataSource,_In_ LPCTSTR szMachineName,_In_ LPCTSTR szObjectName,_Out_ LPTSTR szDefaultCounterName,_Inout_ LPDWORD pcchBufferSize)
BOOL None wininet.FindNextUrlCacheGroup(_In_ HANDLE hFind,_Out_ GROUPID *lpGroupId,_Reserved_ LPVOID lpReserved)
tex None None.t(n None None)
BOOL None wininet.InternetReadFileEx(_In_ HINTERNET hFile,_Out_ LPINTERNET_BUFFERS lpBuffersOut,_In_ DWORD dwFlags,_In_ DWORD_PTR dwContext)
BOOL None wininet.InternetReadFileExW(_In_ HINTERNET hFile,_Out_ LPINTERNET_BUFFERS lpBuffersOut,_In_ DWORD dwFlags,_In_ DWORD_PTR dwContext)
BOOL None wininet.InternetReadFileExA(_In_ HINTERNET hFile,_Out_ LPINTERNET_BUFFERS lpBuffersOut,_In_ DWORD dwFlags,_In_ DWORD_PTR dwContext)
HRESULT None None.SetPlaybackOptimizations(IMFTopology *pTopology None,HWND hwnd None)
HRESULT None None.GetAllocatedString([in] REFGUID guidKey,[out] LPWSTR *ppwszValue,[out] UINT32 *pcchLength)
ULONG STDMETHODCALLTYPE rpcrt4.IUnknown_AddRef_Proxy(IUnknown __RPC_FAR *This)
HRESULT None None.CreateObjectByCLSID([in] REFCLSID clsid,[in] REFIID riid,[out] void **ppObject)
HRESULT None None.DeselectStream([in] DWORD dwDescriptorIndex)
HRESULT None None.GetUINT32([in] REFGUID guidKey,[out] UINT32 *punValue)
PDH_STATUS None pdh.PdhGetRawCounterArray(_In_ PDH_HCOUNTER hCounter,_Inout_ LPDWORD lpdwBufferSize,_Out_ LPDWORD lpdwItemCount,_Out_ PPDH_RAW_COUNTER_ITEM ItemBuffer)
PDH_STATUS None pdh.PdhGetRawCounterArrayW(_In_ PDH_HCOUNTER hCounter,_Inout_ LPDWORD lpdwBufferSize,_Out_ LPDWORD lpdwItemCount,_Out_ PPDH_RAW_COUNTER_ITEM ItemBuffer)
PDH_STATUS None pdh.PdhGetRawCounterArrayA(_In_ PDH_HCOUNTER hCounter,_Inout_ LPDWORD lpdwBufferSize,_Out_ LPDWORD lpdwItemCount,_Out_ PPDH_RAW_COUNTER_ITEM ItemBuffer)
HRESULT None None.GetStreamingState([out] BOOL *pfStreaming)
HRESULT None None.SetUnknown([in] REFGUID guidKey,[in] IUnknown *pUnknown)
void None None.ProcessQuadTessFactorsAvg(in float4 RawEdgeFactors,in float InsideScale,out float4 RoundedEdgeTessFactors,out float2 RoundedInsideTessFactors,out float2 UnroundedInsideTessFactors)
tex None None.t(n None None)
HRESULT None None.BeginConvertHNSToTimecode([in] MFTIME hnsTime,[in] IMFAsyncCallback *pCallback,[in] IUnknown *punkState)
HRESULT None None.GetClientCertificate([in] LPCWSTR pszURL,[out] BYTE **ppbData,[out] DWORD *pcbData)
HRESULT None None.SetUINT32([in] REFGUID guidKey,[in] UINT32 unValue)
HRESULT None None.GetCorrelatedTime([in] DWORD dwReserved,[out] LONGLONG *pllClockTime,[out] MFTIME *phnsSystemTime)
HRESULT None None.GetCurrentMediaType([in] DWORD dwStreamIndex,[out] IMFMediaType **ppMediaType)
HRESULT None None.GetBuffer([in] UINT BufferType,[out] void **ppBuffer,[out] UINT *pBufferSize)
CLIENT_CALL_RETURN RPC_VAR_ENTRY rpcrt4.NdrClientCall2(_In_ PMIDL_STUB_DESC pStubDescriptor,_In_ PFORMAT_STRING pFormat,_Inout_ ... None)
HRESULT None None.EndFrame([out] HANDLE *pHandleComplete)
HRESULT None None.BeginCreateObjectFromByteStream([in] IMFByteStream *pByteStream,[in] LPCWSTR pwszURL,[in] DWORD dwFlags,[in] IPropertyStore *pProps,[out] IUnknown **ppIUnknownCancelCookie,[in] IMFAsyncCallback *pCallback,[in] IUnknown *punkState)
HRESULT None None.SetMixerSourceRect(IMFTransform *pMixer None,const MFVideoNormalizedRect nrcSource)
HRESULT None None.DisplaySAMIStyleNames(IMFPresentationDescriptor *pPD None)
BOOL None None.IsTransformAsync(IMFTransform *pMFT None)
HRESULT None None.GetSampleTime([out] LONGLONG *phnsSampleTime)
HRESULT None None.SetBufferSizeBits([in] ULONG ulBufferSize)
CLIENT_CALL_RETURN None rpcrt4.NdrMesProcEncodeDecode2(handle_t Handle None,const MIDL_STUB_DESC *pStubDesc,PFORMAT_STRING pFormatString None,... None None)
int None None.AecDecodeVAD(short *pOutput None)
BOOL None None.TransformCopiesSampleAttributes(IMFTransform *pMFT None)
texcrd None None.r(m None None)
HRESULT None None.EndSave([in] IMFAsyncResult *pResult)
ULONG STDMETHODCALLTYPE ole32.CStdAsyncStubBuffer_AddRef(_In_ IRpcStubBuffer *pthis)
MFOffset None None.MakeOffset(float v None)
HRESULT None None.LookupService([in] MF_SERVICE_LOOKUP_TYPE Type,[in] DWORD dwIndex,[in] REFGUID guidService,[in] REFIID riid,[out] LPVOID *ppvObjects,[in None None,out] DWORD *pnObjects)
inline BOOL None.IsRandomAccessPoint(IMFSample *pSample None)
HRESULT None None.SetGUID([in] REFGUID guidKey,[in] REFGUID guidValue)
HRESULT None None.GetStreamAttribute([in] DWORD dwStreamIndex,[in] REFGUID guidMFAttribute,[out] PROPVARIANT *pvValue)
HRESULT None None.RemoveAllEffects([in] DWORD dwSourceStreamIndex)
HRESULT None None.EndSave([in] IMFAsyncResult *pResult)
HRESULT None None.GetProgress([out] DWORD *pdwPercentComplete)
HRESULT None None.GetPlaftormWorkQueueMMCSSClass([in] DWORD dwPlatformWorkQueueId,[out] LPWSTR pwszClass,[in None None,out] DWORD *pcchClass)
HRESULT None None.Seek([in] MFBYTESTREAM_SEEK_ORIGIN SeekOrigin,[in] LONGLONG qwSeekOffset,[in] DWORD dwSeekFlags,[out] QWORD *pqwCurrentPosition)
HRESULT None None.EndUnregisterTopologyWorkQueuesWithMMCSS([in] IMFAsyncResult *pResult)
HRESULT None None.GetOutputMutex([in] DWORD dwOutputNum,[in] DWORD dwMutexNum,[out] IUnknown **ppMutex)
HRESULT None None.GetShutdownStatus([out] MFSHUTDOWN_STATUS *pStatus)
HRESULT None None.ConnectOutput([in] DWORD dwOutputIndex,[in] IMFTopologyNode *pDownstreamNode,[in] DWORD dwInputIndexOnDownstreamNode)
HRESULT None None.CreateInstance([in] DWORD dwFlags,[in] IMFAttributes *pAttr,[out] IMFMediaEngine **ppPlayer)
HRESULT None None.GetNodeByID([in] TOPOID qwTopoNodeID,[out] IMFTopologyNode **ppNode)
HRESULT None None.GetName([out] LPCWSTR *ppName)
void STDMETHODCALLTYPE rpcrt4.CStdStubBuffer_Disconnect(_In_ IRpcStubBuffer *This)
HRESULT None None.ActivateObject([in] REFIID riid,[out] void **ppv)
HRESULT None None.SetTopoNodeID([in] TOPOID llTopoID)
HRESULT None None.PlaceMarker([in] DWORD dwStreamIndex,[in] LPVOID pvContext)
HRESULT None None.CreateInstance([in] DWORD dwFlags,[in] IMFAttributes *pAttr,[out] IMFMediaEngine **ppPlayer)
HRESULT None None.EndRegisterPlatformWorkQueueWithMMCSS([in] IMFAsyncResult *pResult,[out] DWORD *pdwTaskId)
void None None.OnMediaPlayerEvent([in] MFP_EVENT_HEADER *pEventHeader)
HRESULT None None.GeneratePresentationDescriptor([out] IMFPresentationDescriptor **ppIPresentationDescriptor)
HRESULT None None.CreateMediaKeys2([in] BSTR keySystem,[in] BSTR defaultCdmStorePath,[in None None,optional] BSTR inprivateCdmStorePath,[out] IMFMediaKeys **ppKeys)
HRESULT None None.EndRegisterTopologyWorkQueuesWithMMCSS([in] IMFAsyncResult *pResult)
HRESULT None propsys.PSCreateMemoryPropertyStore(_In_ REFIID riid,_Out_ void **ppv)
HRESULT None None.SetInputPrefType([in] DWORD dwInputIndex,[in] IMFMediaType *pType)
HRESULT STDMETHODCALLTYPE ole32.CStdStubBuffer2_QueryInterface(_In_ IRpcStubBuffer *This,_In_ REFIID riid,_Out_ void **ppvObject)
HRESULT None None.GetGUID([in] REFGUID guidKey,[out] GUID *pguidValue)
HRESULT None None.DisconnectOutput([in] DWORD dwOutputIndex)
HRESULT None None.GetInputPrefType([in] DWORD dwInputIndex,[out] IMFMediaType **ppType)
SECURITY_STATUS WINAPI ncrypt.NCryptTranslateHandle(_Out_opt_ NCRYPT_PROV_HANDLE *phProvider,_Out_ NCRYPT_KEY_HANDLE *phKey,_In_ HCRYPTPROV hLegacyProv,_In_opt_ HCRYPTKEY hLegacyKey,_In_opt_ DWORD dwLegacyKeySpec,_In_ DWORD dwFlags)
HRESULT None None.GetService([in] REFGUID guidService,[in] REFIID riid,[out] LPVOID *ppvObject)
virtual HRESULT mfplat.GetPrivateDataByteCount([out] DWORD *PrivateInputByteCount,[out] DWORD *PrivateOutputByteCount)
HRESULT None None.SetRotation(MF_VIDEO_PROCESSOR_ROTATION eRotation None)
HRESULT None None.GetTopoNodeID([out] TOPOID *pID)
HRESULT None propsys.PSSetPropertyValue(_In_ IPropertyStore *pps,_In_ IPropertyDescription *ppd,_In_ REFPROPVARIANT propvar)
HRESULT None ole32.CoGetMarshalSizeMax(_Out_ ULONG *pulSize,_In_ REFIID riid,_In_ LPUNKNOWN pUnk,_In_ DWORD dwDestContext,_In_opt_ LPVOID pvDestContext,_In_ DWORD mshlflags)
ULONG STDMETHODCALLTYPE rpcrt4.NdrCStdStubBuffer2_Release(_In_ IRpcStubBuffer *This,_In_ IPSFactoryBuffer *pPSF)
HRESULT None None.BeginRegisterPlatformWorkQueueWithMMCSS([in] DWORD dwPlatformWorkQueue,[in] LPCWSTR wszClass,[in] DWORD dwTaskId,[in] IMFAsyncCallback *pCallback,[in] IUnknown *pState)
HRESULT None None.GetInputCount([out] DWORD *pcInputs)
HRESULT WINOLEAPI combase.CoDecodeProxy(_In_ DWORD dwClientPid,_In_ UINT64 ui64ProxyAddress,_Out_ ServerInformation pServerInformation)
SECURITY_STATUS WINAPI ncrypt.NCryptGetProperty(_In_ NCRYPT_HANDLE hObject,_In_ LPCWSTR pszProperty,_Out_ PBYTE pbOutput,_In_ DWORD cbOutput,_Out_ DWORD *pcbResult,_In_ DWORD dwFlags)
HRESULT None None.GetString([in] REFGUID guidKey,[out] LPWSTR pwszValue,[in] UINT32 cchBufSize,[out] UINT32 *pcchLength)
HRESULT None None.GetAvailableMonitors([out] VMR9MonitorInfo *pInfo,[in] DWORD dwMaxInfoArraySize,[out] DWORD *pdwNumDevices)
HRESULT None None.GetClockCharacteristics([out] DWORD *pdwCharacteristics)
HRESULT None None.GetIconPath([out] LPWSTR *pszPath)
HRESULT None None.OnEvent([in] IMFMediaEvent *pEvent)
HRESULT None None.GetStringLength([in] REFGUID guidKey,[out] UINT32 *pcchLength)
HRESULT None None.GetClockCharacteristics([out] DWORD *pdwCharacteristics)
HRESULT None None.GetOutputCount([out] DWORD *pcOutputs)
HRESULT None None.Compare([in] IMFAttributes *pTheirs,[in] MF_ATTRIBUTES_MATCH_TYPE MatchType,[out] BOOL *pbResult)
HRESULT None None.CompareItem([in] REFGUID guidKey,[in] REFPROPVARIANT Value,[out] BOOL *pbResult)
HRESULT None None.GetBufferProgress(IMFMediaSession *pSession None,DWORD *pProgress None)
HRESULT None propsys.PSGetPropertyValue(_In_ IPropertyStore *pps,_In_ IPropertyDescription *ppd,_Out_ PROPVARIANT *ppropvar)
SECURITY_STATUS WINAPI ncrypt.NCryptExportKey(_In_ NCRYPT_KEY_HANDLE hKey,_In_opt_ NCRYPT_KEY_HANDLE hExportKey,_In_ LPCWSTR pszBlobType,_In_opt_ NCryptBufferDesc *pParameterList,_Out_opt_ PBYTE pbOutput,_In_ DWORD cbOutput,_Out_ DWORD *pcbResult,_In_ DWORD dwFlags)
HRESULT STDMETHODCALLTYPE rpcrt4.CStdStubBuffer_Invoke(_In_ IRpcStubBuffer *This,_In_ RPCOLEMESSAGE *pRpcMsg,_In_ IRpcChannelBuffer *pRpcChannelBuffer)
HRESULT None shell32.SHGetPropertyStoreForWindow(_In_ HWND hwnd,_In_ REFIID riid,_Out_ void **ppv)
void None None.DisplayType(LPTSTR label None,const AM_MEDIA_TYPE *pmtIn)
HRESULT None None.GetUnknown([in] REFGUID guidKey,[in] REFIID riid,[out] LPVOID *ppv)
HRESULT None None.GetInput([in] DWORD dwInputIndex,[out] IMFTopologyNode **ppUpstreamNode,[out] DWORD *pdwOutputIndexOnUpstreamNode)
HRESULT None None.GetString([in] REFGUID guidKey,[out] LPWSTR pwszValue,[in] UINT32 cchBufSize,[out] UINT32 *pcchLength)
SECURITY_STATUS WINAPI ncrypt.NCryptIsAlgSupported(_In_ NCRYPT_PROV_HANDLE hProvider,_In_ LPCWSTR pszAlgId,_In_ DWORD dwFlags)
HRESULT None None.ResetDevice([in] IUnknown *pUnkDevice,[in] UINT resetToken)
HRESULT None None.SetObject([in] IUnknown *pObject)
PSSTDAPI None propsys.PSGetPropertyDescription(_In_ REFPROPERTYKEY propkey,_In_ REFIID riid,_Out_ void **ppv)
HRESULT None ole32.CoGetStdMarshalEx(_In_ LPUNKNOWN pUnkOuter,_In_ DWORD smexflags,_Out_ LPUNKNOWN *ppUnkInner)
HRESULT None ole32.CoCreateFreeThreadedMarshaler(_In_ LPUNKNOWN punkOuter,_Out_ LPUNKNOWN *ppunkMarshal)
HRESULT STDMETHODCALLTYPE rpcrt4.CStdStubBuffer_DebugServerQueryInterface(_In_ IRpcStubBuffer *This,_Out_ void **ppv)
HRESULT None propsys.PSFormatPropertyValue(_In_ IPropertyStore *pps,_In_ IPropertyDescription *ppd,_In_ PROPDESC_FORMAT_FLAGS pdff,_Out_ LPWSTR *ppszDisplay)
HRESULT None None.StopRecord([in] BOOL bFinalize,[in] BOOL bFlushUnprocessedSamples)
void RPC_ENTRY rpcrt4.NdrOleFree(_In_ void *NodeToFree)
HRESULT None None.GetDouble([in] REFGUID guidKey,[out] double *pfValue)
HRESULT None combase.RoGetActivationFactory(_In_ HSTRING activatableClassId,_In_ REFIID iid,_Out_ void **factory)
int None shell32.PifMgr_GetProperties(_In_opt_ HANDLE hProps,_In_opt_ PCSTR pszGroup,_Out_opt_ void *lpProps,int cbProps None,UINT flOpt None)
HRESULT None None.ProcessInput([in] DWORD dwInputStreamID,[in] IMFSample *pSample,[in] DWORD dwFlags)
HRESULT None propsys.PSStringFromPropertyKey(_In_ REFPROPERTYKEY pkey,_Out_ LPWSTR psz,_In_ UINT cch)
HRESULT None shell32.SHGetPropertyStoreFromParsingName(_In_ PCWSTR pszPath,_In_opt_ IBindCtx *pbc,_In_ GETPROPERTYSTOREFLAGS flags,_In_ REFIID riid,_Out_ void **ppv)
HRESULT None None.GetOutputPrefType([in] DWORD dwOutputIndex,[out] IMFMediaType **ppType)
HRESULT None None.GetObject([out] IUnknown **ppObject)
STDAPI None propsys.PSCreateMemoryPropertyStoreMarshalByValue(_In_ REFIID riid,_Out_ void **ppv)
HRESULT None None.AdviseTime([in] REFERENCE_TIME rtBaseTime,[in] REFERENCE_TIME rtStreamTime,[in] HEVENT hEvent,[out] DWORD_PTR *pdwAdviseCookie)
HRESULT None None.GetSourceDuration(IMFMediaSource *pSource None,MFTIME *pDuration None)
HRESULT None propsys.PSSetPropertyValue(_In_ IPropertyStore *pps,_In_ IPropertyDescription *ppd,_In_ REFPROPVARIANT propvar)
HRESULT None None.SetDouble([in] REFGUID guidKey,[in] double fValue)
PSSTDAPI None propsys.PSGetPropertyDescription(_In_ REFPROPERTYKEY propkey,_In_ REFIID riid,_Out_ void **ppv)
HRESULT None None.SetInputType([in] DWORD dwInputStreamID,[in] IMFMediaType *pType,[in] DWORD dwFlags)
HRESULT None None.GetVideoProcessorService(IDirect3DDeviceManager9 *pDeviceManager None,IDirectXVideoProcessorService **ppVPService None)
HRESULT None None.GetTime([out] REFERENCE_TIME *pTime)
HRESULT None ole32.CoGetTreatAsClass(_In_ REFCLSID clsidOld,_Out_ LPCLSID pClsidNew)
HRESULT None None.CloseDeviceHandle([in] HANDLE hDevice)
CLIENT_CALL_RETURN None rpcrt4.NdrClientCall4(_In_ PMIDL_STUB_DESC pStubDescriptor,_In_ PFORMAT_STRING pFormat,_Inout_ ... None)
SECURITY_STATUS WINAPI ncrypt.NCryptIsAlgSupported(_In_ NCRYPT_PROV_HANDLE hProvider,_In_ LPCWSTR pszAlgId,_In_ DWORD dwFlags)
HRESULT None None.QueueEventParamUnk([in] MediaEventType met,[in] REFGUID guidExtendedType,[in] HRESULT hrStatus,[in] IUnknown *pUnk)
HRESULT None propsys.PSUnregisterPropertySchema(_In_ PCWSTR pszPath)
PSSTDAPI None propsys.PSGetItemPropertyHandlerWithCreateObject(_In_ IUnknown *punkItem,_In_ BOOL fReadWrite,_In_ IUnknown *punkCreateObject,_In_ REFIID riid,_Out_ void **ppv)
HRESULT None None.put_FixedUDPPort(long FixedUDPPort None)
void None None.DisplayDeviceInformation(IEnumMoniker *pEnum None)
HRESULT None propsys.PropVariantGetUInt32Elem(_In_ REFPROPVARIANT propvar,_In_ ULONG iElem,_Out_ ULONG *pnVal)
LONG None propsys.PropVariantToInt32WithDefault(_In_ REFPROPVARIANT propvarIn,_In_ LONG lDefault)
HRESULT None None.GetProcAmpRange([in] UINT ProcAmpCap,[out] DXVA2_ValueRange *pRange)
HRESULT None None.InitVariantFromUInt16(_In_ USHORT uiVal,_Out_ VARIANT *pvar)
int None shell32.PifMgr_CloseProperties(_In_ HANDLE hProps,_In_ UINT flOpt)
HRESULT None propsys.PSRegisterPropertySchema(_In_ PCWSTR pszPath)
HRESULT None None.OnSessionDisconnected([in] AudioSessionDisconnectReason DisconnectReason)
HRESULT None propsys.PSCreateAdapterFromPropertyStore(_In_ IPropertyStore *pps,_In_ REFIID riid,_Out_ void **ppv)
PSSTDAPI None propsys.PSGetPropertyDescriptionListFromString(_In_ LPCWSTR pszPropList,_In_ REFIID riid,_Out_ void **ppv)
HRESULT None None.put_EnableUDP(VARIANT_BOOL EnableUDP None)
HRESULT None None.GetStreamLimits([out] DWORD *pdwInputMinimum,[out] DWORD *pdwInputMaximum,[out] DWORD *pdwOutputMinimum,[out] DWORD *pdwOutputMaximum)
HRESULT None shell32.SHGetPropertyStoreFromIDList(_In_ PCIDLIST_ABSOLUTE pidl,_In_ GETPROPERTYSTOREFLAGS flags,_In_ REFIID riid,_Out_ void **ppv)
HRESULT None None.GetTopologyFromEvent(IMFMediaEvent *pEvent None,IMFTopology **ppTopology None)
HRESULT None None.GetTime([out] MFTIME *phnsClockTime)
HRESULT None propsys.VariantGetBooleanElem(_In_ REFVARIANT var,_In_ ULONG iElem,_Out_ BOOL *pfVal)
HRESULT None None.InitializeDevice([in] DWORD_PTR dwUserID,[in] VMR9AllocationInfo *lpAllocInfo,[in None None,out] DWORD *lpNumBuffers)
HRESULT None None.GetIdealVideoSize([out] SIZE *pszMin,[out] SIZE *pszMax)
HRESULT None None.BeginFrame([in] IDirect3DSurface9 *pRenderTarget,[in] void *pvPVPData)
HRESULT None None.GetOutputPrefType([in] DWORD dwOutputIndex,[out] IMFMediaType **ppType)
HRESULT None None.GetVideoProcessorService([out] IDirectXVideoProcessorService **ppAccelServices)
HRESULT None propsys.PropVariantGetFileTimeElem(_In_ REFPROPVARIANT propvar,_In_ ULONG iElem,_Out_ FILETIME *pftVal)
ULONG STDMETHODCALLTYPE rpcrt4.CStdStubBuffer_CountRefs(_In_ IRpcStubBuffer *This)
HRESULT None propsys.PSPropertyKeyFromString(_In_ LPCWSTR pszString,_Out_ PROPERTYKEY *pkey)
HRESULT None None.GetItem([in] REFGUID guidKey,[in None None,out] PROPVARIANT *pValue)
long RPC_ENTRY rpcrt4.NdrStubCall3(void *pThis None,void *pChannel None,PRPC_MESSAGE pRpcMsg None,unsigned long *pdwStubPhase)
HRESULT None None.GetCurrentPadding([out] UINT32 *pNumPaddingFrames)
HRESULT None None.UnlockAsyncMFT(IMFTransform *pMFT None)
HRESULT None propsys.PropVariantToInt32VectorAlloc(_In_ REFPROPVARIANT propvar,_Out_ LONG **pprgn,_Out_ ULONG *pcElem)
PSSTDAPI None propsys.PSGetPropertySystem(_In_ REFIID riid,_Out_ void **ppv)
CLIENT_CALL_RETURN RPC_VAR_ENTRY rpcrt4.Ndr64AsyncClientCall(MIDL_STUBLESS_PROXY_INFO *pProxyInfo None,unsigned long nProcNum,void *pReturnValue None,_Inout_ ... None)
HRESULT None None.OnSimpleVolumeChanged([in] float NewVolume,[in] BOOL NewMute,[in] LPCGUID EventContext)
HRESULT None propsys.VariantToUInt16Array(_In_ REFVARIANT var,_Out_ USHORT *prgn,_In_ ULONG crgn,_Out_ ULONG *pcElem)
HRESULT None propsys.PSCreatePropertyStoreFromObject(_In_ IUnknown *punk,_In_ DWORD grfMode,_In_ REFIID riid,_Out_ void **ppv)
HRESULT None propsys.VariantToUInt16(_In_ REFVARIANT varIn,_Out_ USHORT *puiRet)
HRESULT None None.CreateSurface([in] UINT Width,[in] UINT Height,[in] UINT BackBuffers,[in] D3DFORMAT Format,[in] D3DPOOL Pool,[in] DWORD Usage,[in] DWORD DxvaType,[out] IDirect3DSurface9 **ppSurface,[in None None,out] HANDLE *pSharedHandle)
PSSTDAPI None propsys.PSGetPropertyDescriptionByName(_In_ LPCWSTR pszCanonicalName,_In_ REFIID riid,_Out_ void **ppv)
HRESULT None None.OnDisplayChange([in] ULONG ulBitsPerPixel,[in] ULONG ulScreenWidth,[in] ULONG ulScreenHeight)
HRESULT None None.QueryId([out] LPWSTR *Id)
HRESULT None propsys.InitVariantFromResource(_In_ HINSTANCE hinst,_In_ UINT id,_Out_ VARIANT *pvar)
HRESULT STDMETHODCALLTYPE rpcrt4.CStdStubBuffer_QueryInterface(_In_ IRpcStubBuffer *This,_In_ REFIID riid,_Out_ void **ppvObject)
BOOL None None.IsVarTypeUnsignedInteger(_In_ VARTYPE vt)
ULONG STDMETHODCALLTYPE ole32.CStdStubBuffer2_CountRefs(_In_ IRpcStubBuffer *pthis)
HRESULT None None.InitPropVariantFromGUIDAsBuffer(_In_ REFGUID guid,_Out_ PROPVARIANT *ppropvar)
HRESULT None None.InitPropVariantFromInt16(_In_ SHORT nVal,_Out_ PROPVARIANT *ppropvar)
HRESULT None None.SetMediaStopDynamic(IMFMediaSession *pSession None,IMFTopology *pTopology None,const LONGLONG stop)
HRESULT None None.get_UseFixedUDPPort(VARIANT_BOOL *pUseFixedUDPPort None)
DOUBLE None propsys.PropVariantToDoubleWithDefault(_In_ REFPROPVARIANT propvarIn,_In_ DOUBLE dblDefault)
HRESULT None propsys.VariantToBuffer(_In_ REFVARIANT varIn,_Out_ VOID *pv,_In_ UINT cb)
HRESULT None None.get_ConnectionInfo([in] DWORD dwIndex,[out] KSTOPOLOGY_CONNECTION *pConnectionInfo)
HRESULT None None.GetTimeSource([out] IMFPresentationTimeSource **ppTimeSource)
SECURITY_STATUS WINAPI ncrypt.NCryptEnumStorageProviders(_Out_ DWORD *pdwProviderCount,_Out_ NCryptProviderName **ppProviderList,_In_ DWORD dwFlags)
SHORT None propsys.PropVariantToInt16WithDefault(_In_ REFPROPVARIANT propvarIn,_In_ SHORT iDefault)
HRESULT PSSTDAPI propsys.PropVariantToWinRTPropertyValue(_In_ REFPROPVARIANT propvar,_In_ REFIID riid,_Out_ void **ppv)
HRESULT None propsys.PropVariantToUInt16VectorAlloc(_In_ REFPROPVARIANT propvar,_Out_ USHORT **pprgn,_Out_ ULONG *pcElem)
ULONG None propsys.PropVariantToUInt32WithDefault(_In_ REFPROPVARIANT propvarIn,_In_ ULONG ulDefault)
HRESULT None None.GetBufferSize([out] UINT32 *pNumBufferFrames)
PSSTDAPI None propsys.PSEnumeratePropertyDescriptions(_In_ PROPDESC_ENUMFILTER filterOn,_In_ REFIID riid,_Out_ void **ppv)
HRESULT None propsys.PropVariantGetBooleanElem(_In_ REFPROPVARIANT propvar,_In_ ULONG iElem,_Out_ BOOL *pfVal)
HRESULT None propsys.PSCreateMultiplexPropertyStore(_In_ IUnknown **prgpunkStores,_In_ DWORD cStores,_In_ REFIID riid,_Out_ void **ppv)
HRESULT None propsys.PSCreateAdapterFromPropertyStore(_In_ IPropertyStore *pps,_In_ REFIID riid,_Out_ void **ppv)
HRESULT None None.GetAttributes([out] IMFAttributes **pAttributes)
HRESULT None None.GetStreamLatency([out] REFERENCE_TIME *phnsLatency)
HRESULT None propsys.PropVariantGetInt16Elem(_In_ REFPROPVARIANT propvar,_In_ ULONG iElem,_Out_ SHORT *pnVal)
HRESULT None propsys.PSCreatePropertyStoreFromPropertySetStorage(_In_ IPropertySetStorage *ppss,_In_ DWORD grfMode,_In_ REFIID riid,_Out_ void **ppv)
ULONGLONG None propsys.PropVariantToUInt64WithDefault(_In_ REFPROPVARIANT propvarIn,_In_ ULONGLONG ullDefault)
BOOL None None.IsVarTypeInteger(_In_ VARTYPE vt)
void RPC_ENTRY rpcrt4.NdrProxyFreeBuffer(_In_ void *This,_Inout_ MIDL_STUB_MESSAGE *pStubMsg)
HRESULT None None.CreateSessionManager(IAudioSessionManager2** ppSessionManager None)
HRESULT None None.CompositeImage([in] IUnknown *pD3DDevice,[in] IDirect3DSurface9 *pddsRenderTarget,[in] AM_MEDIA_TYPE *pmtRenderTarget,[in] REFERENCE_TIME rtStart,[in] REFERENCE_TIME rtEnd,[in] D3DCOLOR dwClrBkGnd,[in] VMR9VideoStreamInfo *pVideoStreamInfo,[in] UINT cStreams)
HRESULT None None.InitVariantFromInt32(_In_ LONG lVal,_Out_ VARIANT *pvar)
HRESULT None propsys.PSGetNameFromPropertyKey(_In_ REFPROPERTYKEY propkey,_Out_ PWSTR *ppszCanonicalName)
HRESULT None None.GetBuffer([in None None,out] RPCOLEMESSAGE *pMessage,[in] REFIID riid)
PSSTDAPI None propsys.PSGetItemPropertyHandler(_In_ IUnknown *punkItem,_In_ BOOL fReadWrite,_In_ REFIID riid,_Out_ void **ppv)
HRESULT None None.RemoveClockStateSink([in] IMFClockStateSink *pStateSink)
BOOL None None.IsPropVariantString(_In_ REFPROPVARIANT propvar)
HRESULT None None.SetVolume([in] float flVolume)
HRESULT None None.SetEventHandle([in] HANDLE eventHandle)
HRESULT None propsys.PSFormatForDisplay(_In_ REFPROPERTYKEY propkey,_In_ REFPROPVARIANT propvar,_In_ PROPDESC_FORMAT_FLAGS pdfFlags,_Out_ LPWSTR pwszText,_In_ DWORD cchText)
HRESULT None propsys.InitPropVariantFromUInt32(_In_ ULONG ulVal,_Out_ PROPVARIANT *ppropvar)
HRESULT None propsys.VariantToUInt32(_In_ REFVARIANT varIn,_Out_ ULONG *pulRet)
SECURITY_STATUS WINAPI ncrypt.NCryptEncrypt(_In_ NCRYPT_KEY_HANDLE hKey,_In_ PBYTE pbInput,_In_ DWORD cbInput,_In_opt_ VOID *pPaddingInfo,_Out_ PBYTE pbOutput,_In_ DWORD cbOutput,_Out_ DWORD *pcbResult,_In_ DWORD dwFlags)
HRESULT None propsys.InitVariantFromVariantArrayElem(_In_ REFVARIANT varIn,_In_ ULONG iElem,_Out_ VARIANT *pvar)
HRESULT None None.RemoveEffect([in] IUnknown *pEffect)
HRESULT None propsys.VariantToUInt32(_In_ REFVARIANT varIn,_Out_ ULONG *pulRet)
HRESULT None propsys.VariantToUInt32(_In_ REFVARIANT varIn,_Out_ ULONG *pulRet)
HRESULT None None.CompositeImage([in] IUnknown *pD3DDevice,[in] IDirect3DSurface9 *pddsRenderTarget,[in] AM_MEDIA_TYPE *pmtRenderTarget,[in] REFERENCE_TIME rtStart,[in] REFERENCE_TIME rtEnd,[in] D3DCOLOR dwClrBkGnd,[in] VMR9VideoStreamInfo *pVideoStreamInfo,[in] UINT cStreams)
HRESULT None propsys.PSFormatForDisplayAlloc(_In_ REFPROPERTYKEY key,_In_ REFPROPVARIANT propvar,_In_ PROPDESC_FORMAT_FLAGS pdfFlags,_Out_ PWSTR *ppszDisplay)
HRESULT None None.InitPropVariantFromInt32(_In_ LONG lVal,_Out_ PROPVARIANT *ppropvar)
HRESULT None None.InitPropVariantFromDouble(_In_ DOUBLE dblVal,_Out_ PROPVARIANT *ppropvar)
HRESULT None propsys.PropVariantToGUID(_In_ REFPROPVARIANT propvarIn,_Out_ GUID *pguid)
HRESULT None None.GetStreamIDs([in] DWORD dwInputIDArraySize,[out] DWORD *pdwInputIDs,[in] DWORD dwOutputIDArraySize,[out] DWORD *pdwOutputIDs)
BOOL None propsys.PropVariantToBooleanWithDefault(_In_ REFPROPVARIANT propvarIn,_In_ BOOL fDefault)
HRESULT None None.SetDeinterlaceMode([in] AMVP_MODE mode)
HRESULT None None.GetTitleAttributes([in] ULONG ulTitle,[out] DVD_MenuAttributes *pMenu,[out] DVD_TitleAttributes *pTitle)
HRESULT None None.GetInputAvailableType([in] DWORD dwInputStreamID,[in] DWORD dwTypeIndex,[out] IMFMediaType **ppType)
HRESULT None None.AddInputStreams([in] DWORD cStreams,[in] DWORD *adwStreamIDs)
ULONG None propsys.VariantGetElementCount(_In_ REFVARIANT varIn)
HRESULT None None.GetJackSinkInformation([out] KSJACK_SINK_INFORMATION *pJackSinkInformation)
PSSTDAPI None propsys.PSGetNamedPropertyFromPropertyStorage(_In_ PCUSERIALIZEDPROPSTORAGE psps,_In_ DWORD cb,_In_ LPCWSTR pszName,_Out_ PROPVARIANT *ppropvar)
BOOL None None.IsVarTypeFloat(_In_ VARTYPE vt)
HRESULT None None.get_EnableAutoProxy(VARIANT_BOOL *pEnableAutoProxy None)
HRESULT None None.get_BufferingProgress(long *pBufferingProgress None)
LONGLONG None propsys.PropVariantToInt64WithDefault(_In_ REFPROPVARIANT propvarIn,_In_ LONGLONG llDefault)
HRESULT None propsys.VariantToStringAlloc(_In_ REFVARIANT varIn,_Out_ PWSTR ppszBuf)
HRESULT None None.QueryVersion(LONG *pVersion None)
HRESULT None None.AllocateSurface([in] DWORD_PTR dwUserID,[in] VMRALLOCATIONINFO *lpAllocInfo,[in] DWORD *lpdwActualBuffers,[out] LPDIRECTDRAWSURFACE7 *lplpSurface)
HRESULT None None.SetPlayMode([in] WMT_PLAY_MODE Mode)
HRESULT None propsys.InitPropVariantFromResource(_In_ HINSTANCE hinst,_In_ UINT id,_Out_ PROPVARIANT *ppropvar)
HRESULT None None.VariantGetElem(_In_ REFVARIANT varIn,_In_ ULONG iElem,_Out_ VARIANT *pvar)
HRESULT None None.get_EnableMulticast(VARIANT_BOOL *pEnableMulticast None)
HRESULT None None.GetVMGAttributes([out] DVD_MenuAttributes *pATR)
HRESULT None propsys.InitPropVariantFromStringVector(_In_ PCWSTR *prgsz,_In_ ULONG cElems,_Out_ PROPVARIANT *ppropvar)
HRESULT None None.SetPolicy([in] IMFOutputPolicy **ppPolicy,[in] DWORD nPolicy,[out] BYTE **ppbTicket,[out] DWORD *pcbTicket)
HRESULT None propsys.PropVariantToFileTime(_In_ REFPROPVARIANT propvar,_In_ PSTIME_FLAGS pstfOut,_Out_ FILETIME *pftOut)
HRESULT None propsys.VariantToBoolean(_In_ REFVARIANT varIn,_Out_ BOOL *pfRet)
HRESULT None None.InitPropVariantFromInt64(_In_ LONGLONG llVal,_Out_ PROPVARIANT *ppropvar)
HRESULT None propsys.VariantToBoolean(_In_ REFVARIANT varIn,_Out_ BOOL *pfRet)
HRESULT None propsys.VariantToBooleanArrayAlloc(_In_ REFVARIANT var,_Out_ BOOL **pprgf,_Out_ ULONG *pcElem)
VOID None propsys.ClearPropVariantArray(_In_ PROPVARIANT *rgPropVar,_In_ UINT cVars)
PSSTDAPI None propsys.PSGetPropertyFromPropertyStorage(_In_ PCUSERIALIZEDPROPSTORAGE psps,_In_ DWORD cb,_In_ REFPROPERTYKEY rpkey,_Out_ PROPVARIANT **ppropvar)
HRESULT None None.ConnectedTo([out] IPin **ppPin)
HRESULT None propsys.VariantGetUInt64Elem(_In_ REFVARIANT var,_In_ ULONG iElem,_Out_ ULONGLONG *pnVal)
HRESULT None propsys.PropVariantToInt64Vector(_In_ REFPROPVARIANT propvar,_Out_ LONGLONG *prgn,_In_ ULONG crgn,_Out_ ULONG *pcElem)
PSSTDAPI None propsys.PSLookupPropertyHandlerCLSID(_In_ PCWSTR pszFilePath,_Out_ CLSID *pclsid)
HRESULT None None.GetBalance([out] float *pflBalance)
VOID None propsys.ClearVariantArray(_In_ VARIANT *pvars,_In_ UINT cVars)
HRESULT None None.GetOutputStreamInfo([in] DWORD dwOutputStreamID,[out] MFT_OUTPUT_STREAM_INFO *pStreamInfo)
HRESULT None None.GetAspectRatioMode([out] DWORD *pdwAspectRatioMode)
HRESULT None None.GetBorderColor([out] COLORREF *pClr)
HRESULT None None.EndGetEvent([in] IMFAsyncResult *pResult,[out] IMFMediaEvent **ppEvent)
HRESULT None propsys.PropVariantToString(_In_ REFPROPVARIANT propvar,_Out_ PWSTR psz,_In_ UINT cch)
void RPC_ENTRY rpcrt4.NdrAsyncServerCall(PRPC_MESSAGE pRpcMsg None)
HRESULT None None.GetDvdInterface([in] REFIID riid,[out] void **ppvIF)
HRESULT None None.SetDeinterlaceMode([in] AMVP_MODE mode)
HRESULT None None.ShowDialog([in] int iDialog,[in] HWND hwnd)
ULONG None propsys.PropVariantGetElementCount(_In_ REFPROPVARIANT propvar)
BOOL None None.IsVarTypeNumber(_In_ VARTYPE vt)
HRESULT None None.CreateVideoDeviceSource(IMFMediaSource **ppSource None)
HRESULT None None.SetOutputBounds(LONGLONG hnsLowerBound None,LONGLONG hnsUpperBound None)
HRESULT None None.Activate([in] REFIID iid,[in] DWORD dwClsCtx,[in] PROPVARIANT *pActivationParams,[out] void **ppInterface)
PCWSTR None propsys.VariantToStringWithDefault(_In_ REFVARIANT varIn,_In_ LPCWSTR pszDefault)
HRESULT None None.InitVariantFromDosDateTime(_In_ WORD wDate,_In_ WORD wTime,_Out_ VARIANT *pvar)
HRESULT None None.SetPlayMode([in] WMT_PLAY_MODE Mode)
HRESULT None None.StopPresenting([in] DWORD_PTR dwUserID)
HRESULT None propsys.PropVariantToFileTimeVector(_In_ REFPROPVARIANT propvar,_Out_ FILETIME *prgft,_In_ ULONG crgft,_Out_ ULONG *pcElem)
PSSTDAPI None propsys.PSGetPropertyDescriptionByName(_In_ LPCWSTR pszCanonicalName,_In_ REFIID riid,_Out_ void **ppv)
HRESULT None None.SetOutputType([in] DWORD dwOutputStreamID,[in] IMFMediaType *pType,[in] DWORD dwFlags)
HRESULT None None.GetInputStreamAttributes([in] DWORD dwInputStreamID,[out] IMFAttributes **ppAttributes)
HRESULT None propsys.InitPropVariantFromPropVariantVectorElem(_In_ REFPROPVARIANT propvarIn,_In_ ULONG iElem,_Out_ PROPVARIANT *ppropvar)
INT None propsys.VariantCompare(_In_ REFVARIANT var1,_In_ REFVARIANT var2)
HRESULT None None.GetOutputAvailableType([in] DWORD dwOutputStreamID,[in] DWORD dwTypeIndex,[out] IMFMediaType **ppType)
HRESULT None propsys.PSCreateSimplePropertyChange(_In_ PKA_FLAGS flags,_In_ REFPROPERTYKEY key,_In_ REFPROPVARIANT propvar,_In_ REFIID riid,_Out_ void **ppv)
HRESULT None propsys.PSPropertyBag_WriteSHORT(_In_ IPropertyBag *propBag,_In_ LPCWSTR propName,_In_ SHORT value)
HRESULT None None.BeginGetEvent([in] IMFAsyncCallback *pCallback,[in] IUnknown *punkState)
HRESULT None None.GetBuffer([out] BYTE **buffer,[out] UINT32 *bufferLength)
HRESULT None None.GetDownloadProgress([out] DWORD *pdwPercent,[out] QWORD *pqwBytesDownloaded,[out] QWORD *pcnsDownload)
HRESULT None propsys.VariantToInt16Array(_In_ REFVARIANT var,_Out_ SHORT *prgn,_In_ ULONG crgn,_Out_ ULONG *pcElem)
HRESULT None propsys.VariantToFileTime(_In_ REFVARIANT varIn,_In_ PSTIME_FLAGS stfOut,_Out_ FILETIME *pftOut)
HRESULT None None.GetMute([out] BOOL *pfMute)
HRESULT None None.put_CountryCode([in] long lCountryCode)
HRESULT None None.GetTimecode([out] TIMECODE_SAMPLE *pTimecodeSample)
HRESULT None None.GetMediaItem([out] IMFPMediaItem **ppIMFPMediaItem)
HRESULT None propsys.PropVariantToUInt32Vector(_In_ REFPROPVARIANT propvar,_Out_ ULONG *prgn,_In_ ULONG crgn,_Out_ ULONG *pcElem)
HRESULT None propsys.VariantToUInt32Array(_In_ REFVARIANT var,_Out_ ULONG *prgn,_In_ ULONG crgn,_Out_ ULONG *pcElem)
HRESULT None propsys.PropVariantToInt16VectorAlloc(_In_ REFPROPVARIANT propvar,_Out_ SHORT **pprgn,_Out_ ULONG *pcElem)
HRESULT None None.ShowDialog([in] int iDialog,[in] HWND hwnd)
PCWSTR None propsys.PropVariantToStringWithDefault(_In_ REFPROPVARIANT propvarIn,_In_ LPCWSTR pszDefault)
HRESULT None None.ActivateSpatialAudioMetadataItems([in] UINT16 maxItemCount,[in] UINT16 frameCount,[out None None,optional] ISpatialAudioMetadataItemsBuffer **metadataItemsBuffer,[out] ISpatialAudioMetadataItems **metadataItems)
HRESULT None None.GetAllSettings([in] IStream *pStream)
HRESULT None None.GetStatistics([in None None,out] WM_READER_STATISTICS *pStatistics)
HRESULT None None.ProcessOutput([in] DWORD dwFlags,[in] DWORD cOutputBufferCount,[in None None,out] MFT_OUTPUT_DATA_BUFFER *pOutputSamples,[out] DWORD *pdwStatus)
HRESULT None None.AddPlaybackEffect(REFGUID clsid None,IMFPMediaPlayer *pPlayer None)
HRESULT None propsys.PropVariantToInt32(_In_ REFPROPVARIANT propvarIn,_Out_ LONG *plRet)
HRESULT None propsys.PropVariantGetUInt16Elem(_In_ REFPROPVARIANT propvar,_In_ ULONG iElem,_Out_ USHORT *pnVal)
HRESULT None propsys.PropVariantToUInt64VectorAlloc(_In_ REFPROPVARIANT propvar,_Out_ ULONGLONG **pprgn,_Out_ ULONG *pcElem)
HRESULT None None.InitVariantFromGUIDAsBuffer(_In_ REFGUID guid,_Out_ VARIANT *pvar)
HRESULT None None.GetProtocolName([out] WCHAR *pwszProtocol,[in None None,out] DWORD *pcchProtocol)
HRESULT None None.GetOutputSetting([in] DWORD dwOutputNum,[in] LPCWSTR pszName,[out] WMT_ATTR_DATATYPE *pType,[out] BYTE *pValue,[in None None,out] WORD *pcbLength)
HRESULT None shell32.SHAddDefaultPropertiesByExt(_In_ PCWSTR pszExt,_In_ IPropertyStore *pPropStore)
HRESULT None propsys.VariantToBooleanArray(_In_ REFVARIANT var,_Out_ BOOL *prgf,_In_ ULONG crgn,_Out_ ULONG *pcElem)
HRESULT None propsys.VariantGetInt32Elem(_In_ REFVARIANT var,_In_ ULONG iElem,_Out_ LONG *pnVal)
BOOL None None.IsVariantArray(_In_ REFVARIANT var)
HRESULT None propsys.PropVariantToUInt64Vector(_In_ REFPROPVARIANT propvar,_Out_ ULONGLONG *prgn,_In_ ULONG crgn,_Out_ ULONG *pcElem)
DOUBLE None propsys.VariantToDoubleWithDefault(_In_ REFVARIANT varIn,_In_ DOUBLE dblDefault)
HRESULT None propsys.InitPropVariantFromStrRet(_Inout_ STRRET *pstrret,_In_ PCUITEMID_CHILD pidl,_Out_ PROPVARIANT *ppropvar)
HRESULT None propsys.PropVariantGetInt32Elem(_In_ REFPROPVARIANT propvar,_In_ ULONG iElem,_Out_ LONG *pnVal)
HRESULT None None.DeliverTime([in] QWORD cnsTime)
HRESULT None propsys.VariantToInt64(_In_ REFVARIANT varIn,_Out_ LONGLONG *pllRet)
HRESULT None None.InitVariantFromDispatch(_In_ IDispatch *pdisp,_Out_ VARIANT *pvar)
void None None.SetAspectRatioMode([in] DWORD dwAspectRatioMode)
HRESULT None None.GetPlayMode([out] WMT_PLAY_MODE *pMode)
HRESULT None propsys.PSPropertyBag_ReadInt(_In_ IPropertyBag *propBag,_In_ LPCWSTR propName,_Out_ int *value)
HRESULT None None.get_ReceptionQuality(long *pReceptionQuality None)
HRESULT None None.GetMaxOutputSampleSize([in] DWORD dwOutput,[out] DWORD *pcbMax)
HRESULT None None.CanUseScanLine(long *UseScanLine None)
HRESULT None None.get_Channel([out] long *plChannel,[out] long *plVideoSubChannel,[out] long *plAudioSubChannel)
HRESULT None propsys.InitVariantFromStringArray(_In_ PCWSTR *prgsz,_In_ ULONG cElems,_Out_ VARIANT *pvar)
HRESULT None None.CreateMediaItemFromObject([in] IUnknown *pIUnknownObj,[in] BOOL fSync,[in] DWORD_PTR dwUserData,[out] IMFPMediaItem **ppMediaItem)
HRESULT None ole32.FreePropVariantArray(_In_ ULONG cVariants,_Inout_ PROPVARIANT *rgvars)
HRESULT None propsys.PropVariantGetUInt64Elem(_In_ REFPROPVARIANT propvar,_In_ ULONG iElem,_Out_ ULONGLONG *pnVal)
HRESULT None None.EnumerateCaptureFormats(IMFMediaSource *pSource None)
HRESULT None propsys.PropVariantToFileTimeVectorAlloc(_In_ REFPROPVARIANT propvar,_Out_ FILETIME **pprgft,_Out_ ULONG *pcElem)
HRESULT None None.InitVariantFromInt16(_In_ SHORT iVal,_Out_ VARIANT *pvar)
HRESULT None propsys.PropVariantToInt16Vector(_In_ REFPROPVARIANT propvar,_Out_ SHORT *prgn,_In_ ULONG crgn,_Out_ ULONG *pcElem)
HRESULT None None.InitPropVariantFromUInt16(_In_ USHORT uiVal,_Out_ PROPVARIANT *ppropvar)
HRESULT None None.GetTypeInfo([in] UINT iTInfo,[in] LCID lcid,[out] ITypeInfo **ppTInfo)
HRESULT None None.GetServiceState([out] AM_WST_STATE *lpState)
HRESULT None None.SetNumberOfStreams([in] DWORD dwMaxStreams)
HRESULT None None.ProcessEvent([in] DWORD dwInputStreamID,[in] IMFMediaEvent *pEvent)
HRESULT None propsys.PropVariantToUInt32VectorAlloc(_In_ REFPROPVARIANT propvar,_Out_ ULONG **pprgn,_Out_ ULONG *pcElem)
DWORD None None.ModeFlags(DWORD AudioMode None)
HRESULT None propsys.PSPropertyBag_WriteSHORT(_In_ IPropertyBag *propBag,_In_ LPCWSTR propName,_In_ SHORT value)
HANDLE None shell32.PifMgr_OpenProperties(_In_ PCWSTR pszApp,_In_opt_ PCWSTR lpszPIF,UINT hInf None,UINT flOpt None)
HRESULT None None.ProcessEvent([in] DWORD dwInputStreamID,[in] IMFMediaEvent *pEvent)
HRESULT None None.InitVariantFromBoolean(_In_ BOOL fVal,_Out_ VARIANT *pvar)
HRESULT None None.SetVideoPortID([in] DWORD dwVideoPortID)
HRESULT None propsys.PropVariantGetInt64Elem(_In_ REFPROPVARIANT propvar,_In_ ULONG iElem,_Out_ LONGLONG *pnVal)
HRESULT None None.SetRate([in] float flRate)
HRESULT None propsys.PropVariantGetInt64Elem(_In_ REFPROPVARIANT propvar,_In_ ULONG iElem,_Out_ LONGLONG *pnVal)
HRESULT None None.GetInputCurrentType([in] DWORD dwInputStreamID,[out] IMFMediaType **ppType)
HRESULT None propsys.VariantToFileTime(_In_ REFVARIANT varIn,_In_ PSTIME_FLAGS stfOut,_Out_ FILETIME *pftOut)
HRESULT None propsys.WinRTPropertyValueToPropVariant(_In_opt_ IUnknown *propertyValue,_Out_ PROPVARIANT *convertedValue)
DWORD None None.ICAbout(hic None None,hwnd None None)
SHORT None propsys.VariantToInt16WithDefault(_In_ REFVARIANT varIn,_In_ SHORT iDefault)
HRESULT None None.SetClientInfo([in] WM_READER_CLIENTINFO *pClientInfo)
HRESULT None None.GetFiltergraph([out] IGraphBuilder **ppGB)
HRESULT None None.BuildFromXML([in] IGraphBuilder *pGraph,[in] IXMLElement *pxml)
HRESULT None propsys.VariantToInt16ArrayAlloc(_In_ REFVARIANT var,_Out_ SHORT **pprgn,_Out_ ULONG *pcElem)
ULONGLONG None propsys.VariantToUInt64WithDefault(_In_ REFVARIANT varIn,_In_ ULONGLONG ullDefault)
HRESULT None None.IsModeEnabled([in] long Mode)
HRESULT None propsys.PropVariantToUInt64(_In_ REFPROPVARIANT propvarIn,_Out_ ULONGLONG *pullRet)
HRESULT None None.SignalPresent([out] long *plSignalStrength)
HRESULT None None.GetNativeVideoSize([out] SIZE *pszVideo,[out] SIZE *pszARVideo)
HRESULT None propsys.PropVariantToStringAlloc(_In_ REFPROPVARIANT propvar,_Out_ PWSTR *ppszOut)
HRESULT None propsys.PropVariantToBuffer(_In_ REFPROPVARIANT propvar,_Out_ VOID *pv,_In_ UINT cb)
HRESULT None None.GetConnectInfo([in None None,out] DWORD *pdwNumConnectInfo,[in None None,out] DDVIDEOPORTCONNECT *pddVPConnectInfo)
HRESULT None None.GetStreamCount([out] DWORD *pcInputStreams,[out] DWORD *pcOutputStreams)
HRESULT None None.GetValueByIndex([in] long lIndex,[out] BSTR *szName,[out] long *lCount,[out] double *dLast,[out] double *dAverage,[out] double *dStdDev,[out] double *dMin,[out] double *dMax)
HRESULT None None.SetProcAmpControl([in] DWORD dwStreamID,[in] VMR9ProcAmpControl *lpClrControl)
HRESULT None None.OpenStream([in] IStream *pStream,[in] IWMReaderCallback *pCallback,[in] void *pvContext)
HRESULT None None.SetRenderingMode([in] DWORD Mode)
HRESULT None None.SetSourcePosition([in] long Left,[in] long Top,[in] long Width,[in] long Height)
HRESULT None None.CreateMediaItemFromURL([in] LPCWSTR pwszURL,[in] BOOL fSync,[in] DWORD_PTR dwUserData,[out] IMFPMediaItem **ppMediaItem)
BOOL None None.IsVarTypeSignedInteger(_In_ VARTYPE vt)
HRESULT None None.GetEnabled([out] BOOL *pbEnabled)
HRESULT None None.SetDDSurfaceKernelHandles([in] DWORD cHandles,[in] ULONG_PTR *rgDDKernelHandles)
HRESULT None None.SetUserProvidedClock([in] BOOL fUserClock)
HRESULT None propsys.VariantToUInt64ArrayAlloc(_In_ REFVARIANT var,_Out_ ULONGLONG **pprgn,_Out_ ULONG *pcElem)
HRESULT None propsys.VariantGetUInt16Elem(_In_ REFVARIANT var,_In_ ULONG iElem,_Out_ USHORT *pnVal)
HRESULT None propsys.PSCoerceToCanonicalValue(_In_ REFPROPERTYKEY key,_Inout_ PROPVARIANT *ppropvar)
HRESULT None None.SetVideoFormat([in] DWORD dwChosenEntry)
HRESULT None None.EnumSessions(IAudioSessionManager2* pSessionManager None)
HRESULT None propsys.PSPropertyBag_WriteInt(_In_ IPropertyBag *propBag,_In_ LPCWSTR propName,_In_ int value)
HRESULT None propsys.VariantGetInt16Elem(_In_ REFVARIANT var,_In_ ULONG iElem,_Out_ SHORT *pnVal)
HRESULT None None.GetSaveAsProgress([out] DWORD *pdwPercent)
HRESULT None propsys.VariantGetDoubleElem(_In_ REFVARIANT var,_In_ ULONG iElem,_Out_ DOUBLE *pnVal)
HRESULT None None.GetInputStreamInfo([in] DWORD dwInputStreamID,[out] MFT_INPUT_STREAM_INFO *pStreamInfo)
HRESULT None propsys.PSPropertyBag_ReadStrAlloc(_In_ IPropertyBag *propBag,_In_ LPCWSTR propName,_Out_ PWSTR *value)
HRESULT None None.get_DestinationTop([out] long *pDestinationTop)
HRESULT None ole32.PropVariantClear(_Inout_ PROPVARIANT *pvar)
HRESULT None None.GetAllVolumes([in] UINT32 dwCount,[out] float *pfVolumes)
HRESULT None None.InitPropVariantFromBoolean(_In_ BOOL fVal,_Out_ PROPVARIANT *ppropvar)
HRESULT None None.InitVariantFromDouble(_In_ DOUBLE dblVal,_Out_ VARIANT *pvar)
HRESULT None None.PropVariantToCLSID(_In_ REFPROPVARIANT propvar,_Out_ CLSID *pclsid)
HRESULT None None.QueryInternalConnections([out] IPin **apPin,[in None None,out] ULONG *nPin)
HRESULT None propsys.VariantToStringArrayAlloc(_In_ REFVARIANT var,_Out_ PWSTR **pprgsz,_In_ ULONG crgsz,_Out_ ULONG *pcElem)
HRESULT None propsys.VariantToUInt64Array(_In_ REFVARIANT var,_Out_ ULONGLONG *prgn,_In_ ULONG crgn,_Out_ ULONG *pcElem)
HRESULT None None.get_ReceivedPackets(long *pReceivedPackets None)
HRESULT None propsys.PropVariantToInt64(_In_ REFPROPVARIANT propvarIn,_Out_ LONGLONG *pllRet)
HRESULT None None.InsertEffect([in] IUnknown *pEffect,[in] BOOL fOptional)
HRESULT None None.GetDVDTextStringAsNative([in] ULONG ulLangIndex,[in] ULONG ulStringIndex,[out] BYTE *pchBuffer,[in] ULONG ulMaxBufferSize,[out] ULONG *pulActualSize,[out] DVD_TextStringType *pType)
BOOL None None.IsPropVariantVector(_In_ REFPROPVARIANT propvar)
HRESULT None propsys.VariantGetInt64Elem(_In_ REFVARIANT var,_In_ ULONG iElem,_Out_ LONGLONG *pnVal)
HRESULT None None.SetFocusWindow([in] HWND hWnd,[in] BOOL bMixingOnOrOff)
HRESULT None None.GetRate([out] float *pflRate)
HRESULT None propsys.PSPropertyBag_ReadULONGLONG(_In_ IPropertyBag *propBag,_In_ LPCWSTR propName,_Out_ ULONGLONG value)
HRESULT None None.InitPropVariantFromString(_In_ PCWSTR psz,_Out_ PROPVARIANT *ppropvar)
HRESULT None None.GetOverlayFX([out] DWORD *lpdwOverlayFX)
HRESULT None None.GetMixFormat([out] WAVEFORMATEX **ppDeviceFormat)
HRESULT None None.SetServiceState([in] AM_WST_STATE State)
HRESULT None None.GetDestinationPosition([out] long *pLeft,[out] long *pTop,[out] long *pWidth,[out] long *pHeight)
HRESULT None propsys.InitVariantFromStrRet(_In_ STRRET *pstrret,_In_ PCUITEMID_CHILD pidl,_Out_ VARIANT *pvar)
HRESULT None None.SetStreamsSelected([in] WORD cStreamCount,[in] WORD *pwStreamNumbers,[in] WMT_STREAM_SELECTION *pSelections)
HRESULT None None.GetRedrawAlways([out] LPBOOL lpbOption)
HRESULT None propsys.PropVariantToInt32Vector(_In_ REFPROPVARIANT propvar,_Out_ LONG *prgn,_In_ ULONG crgn,_Out_ ULONG *pcElem)
HRESULT None propsys.PropVariantToUInt32(_In_ REFPROPVARIANT propvarIn,_Out_ ULONG *pulRet)
HRESULT None propsys.VariantToStringArray(_In_ REFVARIANT var,_Out_ PWSTR *prgsz,_In_ ULONG crgsz,_Out_ ULONG *pcElem)
HRESULT None propsys.VariantToInt32Array(_In_ REFVARIANT var,_Out_ LONG *prgn,_In_ ULONG crgn,_Out_ ULONG *pcElem)
HRESULT None propsys.PSPropertyBag_Delete(_In_ IPropertyBag *propBag,_In_ LPCWSTR propName)
HRESULT None propsys.InitPropVariantFromStringAsVector(_In_ PCWSTR psz,_Out_ PROPVARIANT *ppropvar)
HRESULT None None.SetBorderColor([in] COLORREF Clr)
HRESULT None None.InitVariantFromInt64(_In_ LONGLONG llVal,_Out_ VARIANT *pvar)
HRESULT None propsys.VariantToInt32ArrayAlloc(_In_ REFVARIANT var,_Out_ LONG **pprgn,_Out_ ULONG *pcElem)
HRESULT None None.GetCount([out] UINT *pCount)
HRESULT None None.ChannelMinMax([out] long *lChannelMin,[out] long *lChannelMax)
HRESULT None None.GetDecoderLevel([out] AM_WST_LEVEL *lpLevel)
HRESULT None propsys.PSPropertyBag_ReadPOINTS(_In_ IPropertyBag *propBag,_In_ LPCWSTR propName,_Out_ POINTS *value)
HRESULT None propsys.PSPropertyBag_WriteBSTR(_In_ IPropertyBag *propBag,_In_ LPCWSTR propName,_In_ BSTR value)
HRESULT None None.GetOutputStatus([out] DWORD *pdwFlags)
HRESULT None None.get_MediaParameterName(long EntryNum None,long Index None,BSTR *pbstrName None)
HRESULT None None.GetVolume([out] float *pflVolume)
HRESULT None propsys.InitPropVariantFromCLSID(_In_ REFCLSID clsid,_Out_ PROPVARIANT *ppropvar)
HRESULT None propsys.PropVariantToStringVector(_In_ REFPROPVARIANT propvar,_Out_ PWSTR *prgsz,_In_ ULONG crgsz,_Out_ ULONG *pcElem)
HRESULT None propsys.VariantToString(_In_ REFVARIANT varIn,_Out_ PWSTR pszBuf,_In_ UINT cchBuf)
HRESULT None None.SetAcceleratorTable([in] HWND hwnd,[in] HACCEL hAccel)
HRESULT None None.SetNumberOfStreams([in] DWORD dwMaxStreams)
HRESULT None propsys.PSPropertyBag_ReadSHORT(_In_ IPropertyBag *propBag,_In_ LPCWSTR propName,_Out_ SHORT *value)
HRESULT None propsys.PropVariantGetStringElem(_In_ REFPROPVARIANT propvar,_In_ ULONG iElem,_Out_ PWSTR *ppszVal)
HRESULT PSSTDAPI propsys.PropVariantToWinRTPropertyValue(_In_ REFPROPVARIANT propvar,_In_ REFIID riid,_Out_ void **ppv)
HRESULT None None.get_ConnectInput([out] long *plIndex)
HRESULT None None.get_SourceHeight([out] long *pSourceHeight)
HRESULT None propsys.PSPropertyBag_ReadBSTR(_In_ IPropertyBag *propBag,_In_ LPCWSTR propName,_Out_ BSTR *value)
unsigned short propsys.PropVariantToUInt16WithDefault(_In_ REFPROPVARIANT propvarIn,_In_ USHORT uiDefault)
HRESULT None None.RegisterControlChangeNotify([in] IAudioEndpointVolumeCallback *pNotify)
HRESULT None None.GetSession([in] int SessionCount,[out] IAudioSessionControl **Session)
LONGLONG None propsys.VariantToInt64WithDefault(_In_ REFVARIANT varIn,_In_ LONGLONG llDefault)
HRESULT None None.GetHardwareSupportedTVAudioModes([out] long *plModes)
HRESULT None propsys.PropVariantToDoubleVector(_In_ REFPROPVARIANT propvar,_Out_ DOUBLE *prgn,_In_ ULONG crgn,_Out_ ULONG *pcElem)
HRESULT None None.InitCompositionDevice([in] IUnknown *pD3DDevice)
HRESULT None propsys.PSPropertyBag_ReadType(_In_ IPropertyBag *propBag,_In_ LPCWSTR propName,_Out_ VARIANT *var,_Out_ VARTYPE *type)
HRESULT None None.BuildFromXML([in] IGraphBuilder *pGraph,[in] IXMLElement *pxml)
HRESULT None None.GetButtonRect([in] ULONG ulButton,[out] RECT *pRect)
HRESULT None None.GetActivateResult([out] HRESULT *activateResult,[out] IUnknown **activatedInterface)
HRESULT None None.GetOutputRect([in] DWORD dwStreamID,[out] VMR9NormalizedRect *pRect)
HRESULT None None.SetLogClientID([in] BOOL fLogClientID)
HRESULT None propsys.PSPropertyBag_ReadPOINTL(_In_ IPropertyBag *propBag,_In_ LPCWSTR propName,_Out_ POINTL *value)
HRESULT None propsys.PropVariantToUInt16(_In_ REFPROPVARIANT propvarIn,_Out_ USHORT *puiRet)
HRESULT None None.RegisterService([in] REFGUID guidService,[in] IUnknown *pUnkObject)
HRESULT None None.GetProcessId([out] DWORD *pRetVal)
HRESULT None propsys.InitPropVariantFromCLSID(_In_ REFCLSID clsid,_Out_ PROPVARIANT *ppropvar)
HRESULT None None.PlayChapterInTitle([in] ULONG ulTitle,[in] ULONG ulChapter,[in] DWORD dwFlags,[out] IDvdCmd **ppCmd)
HRESULT None None.GetProcAmpControlRange([in] DWORD dwStreamID,[in None None,out] VMR9ProcAmpControlRange *lpClrControl)
HRESULT None None.SetMediaItem([in] IMFPMediaItem *pIMFPMediaItem)
HRESULT None None.SetBorderColor([in] COLORREF Clr)
HRESULT None None.InitVariantFromBoolean(_In_ BOOL fVal,_Out_ VARIANT *pvar)
HRESULT None None.SetDestinationPosition([in] long Left,[in] long Top,[in] long Width,[in] long Height)
HRESULT None None.InitPropVariantFromInt16(_In_ SHORT nVal,_Out_ PROPVARIANT *ppropvar)
HRESULT None propsys.InitPropVariantFromGUIDAsString(_In_ REFGUID guid,_Out_ PROPVARIANT *ppropvar)
HRESULT None None.GetOutputSizeInfo(DWORD dwOutputStreamIndex None,[out] DWORD *pcbSize,[out] DWORD *pcbAlignment)
HRESULT None propsys.VariantToInt16(_In_ REFVARIANT varIn,_Out_ SHORT *piRet)
HRESULT None propsys.PropVariantGetDoubleElem(_In_ REFPROPVARIANT propvar,_In_ ULONG iElem,_Out_ DOUBLE *pnVal)
HRESULT None None.SetMute(BOOL fMute None)
HRESULT None propsys.PSPropertyBag_WriteBOOL(_In_ IPropertyBag *propBag,_In_ LPCWSTR propName,_In_ BOOL value)
HRESULT None None.get_FramesDrawn(int *pcFramesDrawn None)
HRESULT None propsys.PropVariantToDoubleVectorAlloc(_In_ REFPROPVARIANT propvar,_Out_ DOUBLE **pprgn,_Out_ ULONG *pcElem)
HRESULT None propsys.PropVariantToInt64VectorAlloc(_In_ REFPROPVARIANT propvar,_Out_ LONGLONG **pprgn,_Out_ ULONG *pcElem)
HRESULT None None.SetVideoFormat([in] DWORD dwChosenEntry)
HRESULT None propsys.PSPropertyBag_WriteUnknown(_In_ IPropertyBag *propBag,_In_ LPCWSTR propName,_In_ IUnknown *punk)
HRESULT None propsys.VariantGetStringElem(_In_ REFVARIANT var,_In_ ULONG iElem,_Out_ PWSTR *ppszVal)
HRESULT None None.GetDirectDraw(LPDIRECTDRAW *ppDirectDraw None)
HRESULT None propsys.PropVariantToBSTR(_In_ REFPROPVARIANT propvar,_Out_ BSTR *pbstrOut)
HRESULT None None.put_SourceNodeId([in] DWORD dwPinId)
HRESULT None None.SetDecimationImageSize([in] long lWidth,[in] long lHeight)
HRESULT None None.GetRenderingMode([out] DWORD *pMode)
HRESULT None None.get_ReceivedPackets(long *pReceivedPackets None)
HRESULT None propsys.VariantToDosDateTime(_In_ REFVARIANT varIn,_Out_ WORD *pwDate,_Out_ WORD *pwTime)
HRESULT None propsys.PropVariantGetUInt64Elem(_In_ REFPROPVARIANT propvar,_In_ ULONG iElem,_Out_ ULONGLONG *pnVal)
HRESULT None propsys.VariantToInt64ArrayAlloc(_In_ REFVARIANT var,_Out_ LONGLONG **pprgn,_Out_ ULONG *pcElem)
HRESULT None None.GetColorKey([out] COLORREF *lpClr)
INT None None.PropVariantCompare(_In_ REFPROPVARIANT propvar1,_In_ REFPROPVARIANT propvar2)
HRESULT None propsys.VariantToDoubleArray(_In_ REFVARIANT var,_Out_ DOUBLE *prgn,_In_ ULONG crgn,_Out_ ULONG *pcElem)
HRESULT None propsys.PropVariantToBooleanVectorAlloc(_In_ REFPROPVARIANT propvar,_Out_ BOOL **pprgf,_Out_ ULONG *pcElem)
HRESULT None propsys.VariantToDoubleArrayAlloc(_In_ REFVARIANT var,_Out_ DOUBLE **pprgn,_Out_ ULONG *pcElem)
HRESULT None None.GetDuration([in] REFGUID guidPositionType,[out] PROPVARIANT *pvDurationValue)
HRESULT None None.SetDrawBackgroundMode([in] AM_WST_DRAWBGMODE Mode)
HRESULT None None.Unadvise([in] DWORD_PTR dwAdviseCookie)
HRESULT None propsys.PSPropertyBag_ReadBOOL(_In_ IPropertyBag *propBag,_In_ LPCWSTR propName,_Out_ BOOL *value)
HRESULT None propsys.VariantToUInt64(_In_ REFVARIANT varIn,_Out_ ULONGLONG *pullRet)
HRESULT None None.GetHardwareSupportedTVAudioModes([out] long *plModes)
HRESULT None None.GetSubpictureLanguage([in] ULONG ulStream,[out] LCID *pLanguage)
HRESULT None None.UseScanLine(long UseScanLine None)
HRESULT None None.GetEffectsList([out] ppEffectsIds *LPGUID,[out] UINT *pcEffects,[in] HANDLE Event)
BOOL None propsys.VariantToBooleanWithDefault(_In_ REFVARIANT varIn,_In_ BOOL fDefault)
HRESULT None None.SetAcceleratedStreamingDuration([in] QWORD cnsAccelDuration)
HRESULT None None.GetColorKey([out] DDCOLORKEY *pclr)
HRESULT None None.GetDiscID([in] LPCWSTR pszwPath,[out] ULONGLONG *pullDiscID)
HRESULT None propsys.PropVariantToDouble(_In_ REFPROPVARIANT propvarIn,_Out_ DOUBLE *pdblRet)
HRESULT None propsys.PSPropertyBag_ReadRECTL(_In_ IPropertyBag *propBag,_In_ LPCWSTR propName,_Out_ RECTL *value)
HRESULT None propsys.VariantToDouble(_In_ REFVARIANT varIn,_Out_ DOUBLE *pdblRet)
HRESULT None propsys.PropVariantToStrRet(_In_ REFPROPVARIANT propvar,_Out_ STRRET *pstrret)
HRESULT None None.InitVariantFromUInt64(_In_ ULONGLONG ullVal,_Out_ VARIANT *pvar)
HRESULT None propsys.VariantGetUInt32Elem(_In_ REFVARIANT var,_In_ ULONG iElem,_Out_ ULONG *pnVal)
HRESULT None propsys.VariantToInt32(_In_ REFVARIANT varIn,_Out_ LONG *plRet)
HRESULT None None.SetFocus([in] IUnknown *pFocusObject)
HRESULT None None.GetCurrentMode([out] long *pMode)
HRESULT None propsys.PropVariantToBooleanVector(_In_ REFPROPVARIANT propvar,_Out_ BOOL *prgf,_In_ ULONG crgf,_Out_ ULONG *pcElem)
HRESULT None propsys.PSPropertyBag_WriteDWORD(_In_ IPropertyBag *propBag,_In_ LPCWSTR propName,_In_ DWORD value)
HRESULT None None.GetState([out] MFP_MEDIAPLAYER_STATE *peState)
HRESULT None None.get_AutoShow([out] long *AutoShow)
HRESULT None None.SetRedrawAlways([in] BOOL bOption)
HRESULT None propsys.VariantToGUID(_In_ REFVARIANT varIn,_Out_ GUID *pguid)
HRESULT None None.InitPropVariantFromUInt64(_In_ ULONGLONG ullVal,_Out_ PROPVARIANT *ppropvar)
HRESULT None propsys.InitPropVariantVectorFromPropVariant(_In_ REFPROPVARIANT propvarSingle,_Out_ PROPVARIANT *ppropvarVector)
HRESULT None None.GetSessionInstanceIdentifier([out] LPWSTR *pRetVal)
HRESULT None propsys.PSPropertyBag_ReadUnknown(_In_ IPropertyBag *propBag,_In_ LPCWSTR propName,_In_ REFIID riid,_Out_ void **ppv)
HRESULT None None.SetHoldPage([in] BOOL bHoldPage)
HRESULT None propsys.PropVariantToBoolean(_In_ REFPROPVARIANT propvarIn,_Out_ BOOL *pfRet)
LONG None propsys.VariantToInt32WithDefault(_In_ REFVARIANT varIn,_In_ LONG lDefault)
HRESULT None None.CancelRequest([in] LONG idResource,[in] IResourceConsumer *pConsumer)
HRESULT None None.get_BufferingCount(long *pBufferingCount None)
HRESULT None None.Next([in] ULONG cRequest,[in None None,out] STREAM_ID_MAP *pStreamIdMap,[out] ULONG *pcReceived)
HRESULT None None.Register([in] LPCWSTR pName,[in] LONG cResource,[out] LONG *plToken)
HRESULT None None.VolumeStepDown([in] LPCGUID pguidEventContext)
HRESULT None None.SetRenderingMode([in] DWORD Mode)
HRESULT None propsys.PropVariantChangeType(_Out_ PROPVARIANT *ppropvarDest,_In_ REFPROPVARIANT propvarSrc,_In_ PROPVAR_CHANGE_FLAGS flags,_In_ VARTYPE vt)
HRESULT None None.GetAudioLanguage([in] ULONG ulStream,[out] LCID *pLanguage)
HRESULT None None.SetAutoReconnectLimit([in] DWORD dwAutoReconnectLimit)
HRESULT None None.GetPropertyType([out] VARTYPE *pvartype)
HRESULT None propsys.InitVariantFromStrRet(_In_ STRRET *pstrret,_In_ PCUITEMID_CHILD pidl,_Out_ VARIANT *pvar)
HRESULT None None.SetRenderingPrefs([in] DWORD dwRenderFlags)
ULONG None propsys.VariantToUInt32WithDefault(_In_ REFVARIANT varIn,_In_ ULONG ulDefault)
HRESULT None None.PlayAtTime([in] DVD_HMSF_TIMECODE *pTime,[in] DWORD dwFlags,[out] IDvdCmd **ppCmd)
HRESULT None None.GetVideoWindow([out] HWND *phwndVideo)
HRESULT None propsys.VariantToStrRet(_In_ REFVARIANT varIn,_Out_ STRRET *pstrret)
HRESULT None propsys.InitVariantFromGUIDAsString(_In_ REFGUID guid,_Out_ VARIANT *pvar)
HRESULT None None.QueryDecimationUsage([out] DECIMATION_USAGE *lpUsage)
HRESULT None None.Reconfigure([in] IGraphConfigCallback *pCallback,[in] PVOID pvContext,[in] DWORD dwFlags,[in] HANDLE hAbortEvent)
HRESULT None None.GetOutputSizeInfo(DWORD dwOutputStreamIndex None,[out] DWORD *pcbSize,[out] DWORD *pcbAlignment)
HRESULT None propsys.PropVariantToUInt16Vector(_In_ REFPROPVARIANT propvar,_Out_ USHORT *prgn,_In_ ULONG crgn,_Out_ ULONG *pcElem)
HRESULT None None.SetTransportVideoParameters([in] long Param,[in] long Value)
HRESULT None propsys.VariantToUInt32ArrayAlloc(_In_ REFVARIANT var,_Out_ ULONG **pprgn,_Out_ ULONG *pcElem)
HRESULT None None.GetPropertyCount([out] DWORD *pdwCount)
HRESULT None propsys.PSPropertyBag_WriteULONGLONG(_In_ IPropertyBag *propBag,_In_ LPCWSTR propName,_In_ ULONGLONG value)
HRESULT None propsys.VariantToInt64Array(_In_ REFVARIANT var,_Out_ LONGLONG *prgn,_In_ ULONG crgn,_Out_ ULONG *pcElem)
HRESULT None None.SetRenderingPrefs([in] DWORD dwRenderFlags)
HRESULT None propsys.VariantGetUInt64Elem(_In_ REFVARIANT var,_In_ ULONG iElem,_Out_ ULONGLONG *pnVal)
HRESULT None None.GetMaxNetPacketSize([out] DWORD *pdwMaxNetPacketSize)
HRESULT None None.KsQueryMediums([out] KSMULTIPLE_ITEM **ppmi)
HRESULT None None.GetClipFactor([out] long *pClipFactor)
HRESULT None None.GetChannelCount([out] UINT *pnChannelCount)
HRESULT None propsys.PropVariantToInt16(_In_ REFPROPVARIANT propvarIn,_Out_ SHORT *piRet)
HRESULT None None.SetChannelVolumeLevel([in] UINT nChannel,[in] float fLevelDB,[in] LPCGUID pguidEventContext)
HRESULT None None.GetCurrentDomain([out] DVD_DOMAIN *pDomain)
HRESULT None None.GetModeInfo([in] long Mode,[out] long *pWidth,[out] long *pHeight,[out] long *pDepth)
HRESULT None None.get_AntiClogControl([out] long *pEnabled)
HRESULT None propsys.PSPropertyBag_ReadStr(_In_ IPropertyBag *propBag,_In_ LPCWSTR propName,_Out_ LPCWSTR value,_Out_ int characterCount)
HRESULT None None.GetEnableResends([out] BOOL *pfEnableResends)
HRESULT None None.GetVideoSourceRect([out] MFVideoNormalizedRect *pnrcSource)
HRESULT None None.InitVariantFromUInt32(_In_ ULONG ulVal,_Out_ VARIANT *pvar)
unsigned short propsys.PropVariantToUInt16WithDefault(_In_ REFPROPVARIANT propvarIn,_In_ USHORT uiDefault)
HRESULT None None.SetZOrder([in] DWORD dwStreamID,[in] DWORD dwZ)
HRESULT None None.get_BitRate([out] long *pBitRate)
HRESULT None None.FindProxyForURL([in] BSTR bstrProtocol,[in] BSTR bstrHost,[out] BOOL *pfProxyEnabled,[out] BSTR *pbstrProxyServer,[out] DWORD *pdwProxyPort,[in None None,out] DWORD *pdwProxyContext)
HRESULT None propsys.VariantToUInt16ArrayAlloc(_In_ REFVARIANT var,_Out_ USHORT **pprgn,_Out_ ULONG *pcElem)
HRESULT None None.GetSessionIdentifier([out] LPWSTR *pRetVal)
HRESULT None None.GetEnableFastCache([out] BOOL *pfEnableFastCache)
HRESULT None None.GetSubpictureAttributes([in] ULONG ulStream,[out] DVD_SubpictureAttributes *pAttributes)
BOOL None None.IsVariantString(_In_ REFVARIANT var)
HRESULT None None.Reconfigure([in] IGraphConfigCallback *pCallback,[in] PVOID pvContext,[in] DWORD dwFlags,[in] HANDLE hAbortEvent)
BOOL None gdi32.GetBrushOrgEx(_In_ HDC hdc,_Out_ LPPOINT lppt)
INT None propsys.PropVariantCompareEx(_In_ REFPROPVARIANT propvar1,_In_ REFPROPVARIANT propvar2,_In_ PROPVAR_COMPARE_UNIT unit,_In_ PROPVAR_COMPARE_FLAGS flags)
HRESULT None None.RequestResource([in] LONG idResource,[in] IUnknown *pFocusObject,[in] IResourceConsumer *pConsumer)
HRESULT None None.AcceptParentalLevelChange([in] BOOL bAccept)
HRESULT None None.get_ErrorCode([out] long *pErrorCode)
HRESULT None None.InitVariantFromUInt64(_In_ ULONGLONG ullVal,_Out_ VARIANT *pvar)
HRESULT None None.GetNumberOfChapters([in] ULONG ulTitle,[out] ULONG *pulNumOfChapters)
HRESULT None None.GetStatistics([in] WORD wStreamNum,[out] WM_WRITER_STATISTICS *pStats)
HRESULT None None.SetEnabled([in] long Mode,[in] long bEnabled)
HRESULT None None.SetDVDDirectory([in] LPCWSTR pszwPath)
HRESULT None None.GetCurrentButton([out] ULONG *pulButtonsAvailable,[out] ULONG *pulCurrentButton)
HRESULT None None.OnDisplayNameChanged([in] LPCWSTR NewDisplayName,[in] LPCGUID EventContext)
INT None propsys.PropVariantCompareEx(_In_ REFPROPVARIANT propvar1,_In_ REFPROPVARIANT propvar2,_In_ PROPVAR_COMPARE_UNIT unit,_In_ PROPVAR_COMPARE_FLAGS flags)
HRESULT None None.get_BitRate([out] long *pBitRate)
HRESULT None None.GetDuration([in] REFGUID guidPositionType,[out] PROPVARIANT *pvDurationValue)
HRESULT None None.GetTotalTitleTime([out] DVD_HMSF_TIMECODE *pTotalTime,[out] ULONG *pulTimeCodeFlags)
HRESULT None None.SetMasterStream([in] LONG iStream)
HRESULT None None.put_DestinationHeight([in] long DestinationHeight)
HRESULT None None.put_SourceWidth([in] long SourceWidth)
HRESULT None None.get_MoreInfoText(BSTR *pbstrMoreInfoText None)
HRESULT None None.GetState([out] IDvdState **pStateData)
HRESULT None None.get_AuthorName(BSTR *pbstrAuthorName None)
HRESULT None None.put_Height([in] long Height)
HRESULT None None.EnumAudioEndpoints([in] EDataFlow dataFlow,[in] DWORD dwStateMask,[out] IMMDeviceCollection **ppDevices)
HRESULT None None.get_LostPackets(long *pLostPackets None)
HRESULT None None.SetEditProperty([in] long EditID,[in] long Param,[in] long Value)
HRESULT None None.get_ExSeekCapabilities([out] long *pExCapabilities)
HRESULT None None.GetChannelVolumeLevel([in] UINT nChannel,[out] float *pfLevelDB)
HRESULT None None.PropVariantGetElem(_In_ REFPROPVARIANT propvarIn,_In_ ULONG iElem,_Out_ PROPVARIANT *ppropvar)
HRESULT None None.SetSubpictureState([in] BOOL bState,[in] DWORD dwFlags,[out] IDvdCmd **ppCmd)
HRESULT None None.SetFilterFlags([in] IBaseFilter *pFilter,[in] DWORD dwFlags)
HRESULT None None.GetMonitor([out] long *Monitor)
HRESULT None None.get_HasError(VARIANT_BOOL *pHasError None)
HRESULT None propsys.PSPropertyBag_WriteStream(_In_ IPropertyBag *propBag,_In_ LPCWSTR propName,_In_ IStream *value)
HRESULT None None.GetVolumeStepInfo([out] UINT *pnStep,[out] UINT *pnStepCount)
HRESULT None None.GetKaraokeAttributes([in] ULONG ulStream,[out] DVD_KaraokeAttributes *pATR)
HRESULT None None.GetEnableResends([out] BOOL *pfEnableResends)
HRESULT None None.SetLiveSource([in] BOOL fIsLiveSource)
HRESULT None None.GetMixingPrefs([out] DWORD *pdwMixerPrefs)
HRESULT None None.OnChannelVolumeChanged([in] DWORD ChannelCount,[in] float NewChannelVolumeArray[],[in] DWORD ChangedChannel,[in] LPCGUID EventContext)
HRESULT None None.SelectAngle([in] ULONG ulAngle,[in] DWORD dwFlags,[out] IDvdCmd **ppCmd)
HRESULT None None.SetDuckingPreference([in] BOOL optOut)
HRESULT None None.put_MediaState([in] long State)
HRESULT None None.InitVariantFromUInt32(_In_ ULONG ulVal,_Out_ VARIANT *pvar)
HRESULT None None.get_DestinationLeft([out] long *pDestinationLeft)
HRESULT None None.GetMode([out] DWORD *dwFlags)
HRESULT None None.Clone([out] IEnumPins **ppEnum)
HRESULT None None.SetTCDisplayEnable([in] long State)
HRESULT None None.get_MoreInfoBannerURL(BSTR *pbstrMoreInfoBannerURL None)
HRESULT None propsys.InitVariantFromString(_In_ PCWSTR psz,_Out_ VARIANT *pvar)
HRESULT None None.GetDecoderCaps([out] DVD_DECODER_CAPS *pCaps)
HRESULT None None.GetDVDDirectory([out] LPWSTR pszwPath,[in] ULONG ulMaxSize,[out] ULONG *pulActualSize)
HRESULT None None.SetCaption([in] BSTR strCaption)
HRESULT None None.Resume([in] DWORD dwFlags,[out] IDvdCmd **ppCmd)
HRESULT None None.get_MediaState([out] long *pState)
HRESULT None None.InitVariantFromInt64(_In_ LONGLONG llVal,_Out_ VARIANT *pvar)
HRESULT None propsys.PropVariantToStringVectorAlloc(_In_ REFPROPVARIANT propvar,_Out_ PWSTR **pprgsz,_Out_ ULONG *pcElem)
HRESULT None None.ShowMenu([in] DVD_MENU_ID MenuID,[in] DWORD dwFlags,[out] IDvdCmd **ppCmd)
HRESULT None None.RegisterGroup([in] LPCWSTR pName,[in] LONG cResource,[in] LONG *palTokens,[out] LONG *plToken)
HRESULT None None.GetEmulatedCaps(DDCAPS *pCaps None)
USHORT None propsys.VariantToUInt16WithDefault(_In_ REFVARIANT varIn,_In_ USHORT uiDefault)
HRESULT None None.GetPresentationAttribute([in] REFGUID guidMFAttribute,[out] PROPVARIANT *pvValue)
HRESULT None None.put_WindowSize([in] DWORDLONG WindowSize)
HRESULT None None.SelectAndActivateButton([in] ULONG ulButton)
HRESULT None None.GetBitrate([out] DWORD *pdwBitrate)
HRESULT None None.get_TrebleRange([out] double *pRange)
HRESULT None None.get_Rate([out] double *pdblRate)
HRESULT None None.get_VideoHeight([out] long *pVideoHeight)
HRESULT None None.GetButtonAtPosition([in] POINT point,[out] ULONG *puButtonIndex)
HRESULT None None.GetButtonAtPosition([in] POINT point,[out] ULONG *puButtonIndex)
HRESULT None None.put_DestinationLeft([in] long DestinationLeft)
HRESULT None None.HasAudio([out] BOOL *pfHasAudio,[out] BOOL *pfSelected)
HRESULT None None.GetAllSPRMs([out] SPRMARRAY *pRegisterArray)
HRESULT None None.put_AutoShow([in] long AutoShow)
HRESULT None None.PlayForwards([in] double dwSpeed,[in] DWORD dwFlags,[out] IDvdCmd **ppCmd)
virtual HRESULT None.GetCert([in] DWORD dwIndex,[out] BYTE **ppbCertData)
HRESULT None None.SetOption([in] DVD_OPTION_FLAG flag,[in] BOOL bEnable)
HRESULT None None.AdviseTime([in] REFERENCE_TIME rtBaseTime,[in] REFERENCE_TIME rtStreamTime,[in] HEVENT hEvent,[out] DWORD *pdwAdviseCookie)
HRESULT None None.GetMasterVolumeLevel([out] float *pfLevelDB)
HRESULT None None.BeginUpdatingAudioObjects([out] UINT32 *availableDynamicObjectCount,[out] UINT32 *frameCountPerBuffer)
HRESULT None None.GetPushSourceFlags([out] ULONG *pFlags)
HRESULT None None.GetCurrentLocation([out] DVD_PLAYBACK_LOCATION2 *pLocation)
HRESULT None None.GetDVDVolumeInfo([out] ULONG *pulNumOfVolumes,[out] ULONG *pulVolume,[out] DVD_DISC_SIDE *pSide,[out] ULONG *pulNumOfTitles)
HRESULT None None.get_Enable([out] BOOL *pfEnable)
HRESULT None None.SelectParentalCountry([in] BYTE country_region[2])
HRESULT None None.GetServiceState(AM_LINE21_CCSTATE *lpState None)
HRESULT None None.get_SourceWidth([out] long *pSourceWidth)
HRESULT None wmvcore.WMCreateWriterNetworkSink(_Out_ IWMWriterNetworkSink **ppSink)
HRESULT None None.put_Mode([in] long Mode)
HRESULT None None.get_Rating(BSTR *pbstrRating None)
HRESULT None None.SetCredentials([in] BSTR bstrRealm,[in] BSTR bstrName,[in] BSTR bstrPassword,[in] BOOL fPersist,[in] BOOL fConfirmedGood)
HRESULT None None.SelectVideoModePreference([in] ULONG ulPreferredDisplayMode)
HRESULT None None.SelectDefaultMenuLanguage(LCID Language None)
HRESULT None None.GetDefaultSubpictureLanguage([out] LCID *pLanguage,[out] DVD_SUBPICTURE_LANG_EXT *pSubpictureExtension)
HRESULT None None.GetSinkCount([out] DWORD *pcSinks)
HRESULT None None.SetMode([in] DWORD dwFlags)
HRESULT None None.SetEditPropertySet([in None None,out] long *pEditID,[in] long State)
HRESULT None None.GetStreamNumber([out] WORD *pwStreamNum)
HRESULT None None.PlayNextChapter([in] DWORD dwFlags,[out] IDvdCmd **ppCmd)
HRESULT None None.get_TrebleRange([out] double *pRange)
HRESULT None None.CanUseOverlayStretch(long *UseOverlayStretch None)
HRESULT None None.GetChase([out] long *pEnabled,[out] long *pOffset,[out] HEVENT *phEvent)
HRESULT None None.OpenStream([in] IStream *pStream)
HRESULT None None.SetStreamName([in] WCHAR *pwszStreamName)
HRESULT None None.GetMediaType([out] WM_MEDIA_TYPE *pType,[in None None,out] DWORD *pcbType)
HRESULT None None.SetBufferWindow([in] DWORD msBufferWindow)
HRESULT None None.get_Visible([out] long *pVisible)
HRESULT None None.GetCurrentUOPS([out] ULONG *pulUOPs)
HRESULT None None.get_DestinationHeight([out] long *pDestinationHeight)
HRESULT None None.CreateNewStream([in] REFGUID guidStreamType,[out] IWMStreamConfig **ppConfig)
HRESULT None None.PlayChapter([in] ULONG ulChapter,[in] DWORD dwFlags,[out] IDvdCmd **ppCmd)
HRESULT None None.GetMode([out] DWORD *dwFlags)
HRESULT None None.GetPlayerParentalLevel([out] ULONG *pulParentalLevel,[out] BYTE pulCountryCode[2])
HRESULT None None.put_BackgroundPalette([in] long BackgroundPalette)
HRESULT None wmvcore.WMValidateData(_In_ BYTE *pbData,_Inout_ DWORD *pdwDataSize)
HRESULT None None.OnStatus([in] WMT_STATUS Status,[in] HRESULT hr,[in] WMT_ATTR_DATATYPE dwType,[in] BYTE *pValue,[in] void *pvContext)
HRESULT None None.put_LocalControl([in] long State)
HRESULT None None.SelectButton([in] ULONG ulButton)
HRESULT None None.get_Description(BSTR *pbstrDescription None)
HRESULT None None.GetBorderColor([out] COLORREF *lpClr)
HRESULT None None.GetTransportAudioParameters([in] long Param,[out] long *pValue)
HRESULT None None.SetMixingPrefs([in] DWORD dwMixerPrefs)
HRESULT None propsys.PSPropertyBag_WriteStream(_In_ IPropertyBag *propBag,_In_ LPCWSTR propName,_In_ IStream *value)
HRESULT None None.get_BitErrorRate([out] long *pBitErrorRate)
HRESULT None None.put_Owner([in] OAHWND Owner)
HRESULT None wmvcore.WMCreateEditor(_Out_ IWMMetadataEditor **ppEditor)
HRESULT None None.GetCurrentImage([in None None,out] long *pBufferSize,[out] long *pDIBImage)
HRESULT None None.SetBump([in] long Speed,[in] long Duration)
HRESULT None None.ActivateAtPosition([in] POINT point)
HRESULT None None.put_CurrentPosition([in] REFTIME llTime)
HRESULT None None.GetStatus([in] long StatusItem,[in None None,out] long *pValue)
HRESULT None None.get_VideoWidth([out] long *pVideoWidth)
HRESULT None None.get_SourceLeft([out] long *pSourceLeft)
HRESULT None None.GetTitleParentalLevels([in] ULONG ulTitle,[out] ULONG *pulParentalLevels)
HRESULT None None.SetAllocateForStream([in] WORD wStreamNum,[in] IWMReaderAllocatorEx *pAllocator)
HRESULT None None.SetPushSourceFlags([in] ULONG Flags)
HRESULT None None.SetDrawBackgroundMode(AM_LINE21_DRAWBGMODE Mode None)
HRESULT None None.GetTransportBasicParameters([in] long Param,[in None None,out] long *pValue,[in None None,out] LPOLESTR *ppszData)
HRESULT None None.GetCurrentAudio([out] ULONG *pulStreamsAvailable,[out] ULONG *pulCurrentStream)
HRESULT None None.put_SourceLeft([in] long SourceLeft)
HRESULT None None.put_EditStart([in] long Value)
HRESULT None None.get_Iris([out] long *pValue,[out] long *pFlags)
HRESULT None None.ReturnFromSubmenu([in] DWORD dwFlags,[out] IDvdCmd **ppCmd)
HRESULT None None.GetDefaultAudioLanguage([out] LCID *pLanguage,DVD_AUDIO_LANG_EXT *pAudioExtension None)
HRESULT None None.PlayPrevChapter([in] DWORD dwFlags,[out] IDvdCmd **ppCmd)
HRESULT None None.SetCredentialsEx2([in] BSTR bstrRealm,[in] BSTR bstrUrl,[in] BOOL fProxy,[in] BSTR bstrName,[in] BSTR bstrPassword,[in] BOOL fPersist,[in] BOOL fConfirmedGood,[in] BOOL fClearTextAuthentication)
HRESULT None None.GetPriorityRecords([out] WM_STREAM_PRIORITY_RECORD *pRecordArray,[in None None,out] WORD *pcRecords)
HRESULT None None.Notify([in] long EventCode,[in] LONG_PTR EventParam1,[in] LONG_PTR EventParam2)
HRESULT None None.SetRedrawAlways(BOOL bOption None)
HRESULT None None.SelectSubpictureStream(ULONG ulSubPicture None,[in] DWORD dwFlags,[out] IDvdCmd **ppCmd)
HRESULT None None.get_Saturation([out] long *pValue,[out] long *pFlags)
HRESULT None None.PlayBackwards([in] double dwSpeed,[in] DWORD dwFlags,[out] IDvdCmd **ppCmd)
HRESULT None None.RegisterProxyFailure([in] HRESULT hrParam,[in] DWORD dwProxyContext)
virtual HRESULT None.WMSC_Encrypt([in] BYTE *pbData,[in] DWORD cbData)
HRESULT None None.GetDefaultMenuLanguage([out] LCID *pLanguage)
HRESULT None None.IsSubpictureStreamEnabled([in] ULONG ulStreamNum,[out] BOOL *pbEnabled)
HRESULT None None.put_SourceTop([in] long SourceTop)
HRESULT None None.SetString([in] REFGUID guidKey,[in] LPCWSTR wszValue)
HRESULT None None.LoadProfileByID([in] REFGUID guidProfile,[out] IWMProfile **ppProfile)
HRESULT None None.GetInputCount([out] DWORD *pcInputs)
HRESULT None None.put_MessageDrain([in] OAHWND Drain)
HRESULT None None.put_Top([in] long Top)
HRESULT None None.SetStreamName([in] WCHAR *pwszStreamName)
HRESULT None None.GetNumberOfStreams([out] DWORD *pdwStreamCount)
HRESULT None None.GetBump([out] long *pSpeed,[out] long *pDuration)
HRESULT None None.GetDVDTextNumberOfLanguages([out] ULONG *pulNumOfLangs)
HRESULT None wmvcore.WMCreateReader(_In_ IUnknown *pUnkReserved,_In_ DWORD dwRights,_Out_ IWMReader **ppReader)
HRESULT None None.GetSyncSource([out] IReferenceClock **pClock)
HRESULT None None.GetNetworkProtocol([out] WMT_NET_PROTOCOL *pProtocol)
HRESULT None None.GetCmdFromEvent([in] LONG_PTR lParam1,[out] IDvdCmd **ppCmdObj)
HRESULT None None.GetDVDTextLanguageInfo([in] ULONG ulLangIndex,[out] ULONG *pulNumOfStrings,[out] LCID pLangCode,[out] DVD_TextCharSet *pbCharacterSet)
HRESULT None None.SetVideoClippingWindow([in] HWND hwnd)
HRESULT None None.GetEditProperty([in] long EditID,[in] long Param,[out] long *pValue)
HRESULT None None.GetBorderColor([out] COLORREF *lpClr)
HRESULT None None.CreateNewStream([in] REFGUID guidStreamType,[out] IWMStreamConfig **ppConfig)
HRESULT None None.Configure([in] WORD wStreamNum,[in] WMT_INDEXER_TYPE nIndexerType,[in] void *pvInterval,[in] void *pvIndexType)
HRESULT None None.GetCapability([in] long Capability,[out] long *pValue,[out] double *pdblValue)
HRESULT None None.PlayChaptersAutoStop([in] ULONG ulTitle,[in] ULONG ulChapter,[in] ULONG ulChaptersToPlay,[in] DWORD dwFlags,[out] IDvdCmd **ppCmd)
HRESULT STDMETHODCALLTYPE None.WMCreateSecureChannel_Certified(IWMSecureChannel **ppChannel None)
LRESULT CALLBACK None.WindowProc(HWND hwnd None,UINT uMsg None,WPARAM wParam None,LPARAM lParam None)
HRESULT None None.get_IrisRelative([out] long *pValue,[out] long *pFlags)
HRESULT None None.GetVideoSize([out] long *pWidth,[out] long *pHeight)
HRESULT None wmvcore.WMCreateDeviceRegistration(_Out_ IWMDeviceRegistration **ppDevReg)
HRESULT None None.get_Left([out] long *pLeft)
HRESULT None None.getRange_Gain([out] long *pMin,[out] long *pMax,[out] long *pSteppingDelta,[out] long *pDefault,[out] long *pCapsFlag)
HRESULT None None.SetState([in] IDvdState *pState,[in] DWORD dwFlags,[out] IDvdCmd **ppCmd)
HRESULT None wmvcore.WMIsAvailableOffline(_In_ LPCWSTR pwszURL,_In_ LPCWSTR pwszLanguage,_Out_ BOOL *pfIsAvailableOffline)
HRESULT None None.IsRealTime([out] BOOL *pfRealTime)
HRESULT None None.SelectDefaultAudioLanguage([in] LCID Language,[in] DVD_AUDIO_LANG_EXT audioExtension)
HRESULT None None.get_Left([out] long *pLeft)
HRESULT None None.GetObject([out] IUnknown **ppIUnknown)
HRESULT None None.SetBitrate([in] DWORD dwBitrate)
HRESULT None None.get_Contrast([out] long *pValue,[out] long *pFlags)
HRESULT None None.get_Owner([out] OAHWND *pOwner)
HRESULT None None.SetGPRM([in] ULONG ulIndex,[in] WORD wValue,[in] DWORD dwFlags,[out] IDvdCmd **ppCmd)
HRESULT None None.put_Gamma([in] long Value,[in] long Flags)
HRESULT None None.get_WindowState([out] long *WindowState)
HRESULT None None.get_EditStart([out] long *pValue)
HRESULT None None.get_Top([out] long *pTop)
HRESULT None None.Skip([in] ULONG cPins)
HRESULT None None.GetVideoPosition([out] RECT *pSourceRect,[in] RECT *pDestinationRect)
HRESULT None None.GetRestorePosition([out] long *pLeft,[out] long *pTop,[out] long *pWidth,[out] long *pHeight)
HRESULT None None.SetMaxKeyFrameSpacing([in] LONGLONG llTime)
HRESULT None None.put_MixLevel([in] double Level)
HRESULT None None.get_Loudness([out] BOOL *pfLoudness)
HRESULT None None.get_Width([out] long *pWidth)
HRESULT None None.SetStreamNumber([in] WORD wStreamNum)
HRESULT None None.get_BorderColor([out] long *pColor)
HRESULT None None.OnDeviceStateChanged([in] LPCWSTR pwstrDeviceId,[in] DWORD dwNewState)
HRESULT None None.GetStreamGroupName([out] WCHAR *pwszName,[in None None,out] WORD *pcchName)
HRESULT None None.SelectAtPosition([in] POINT point)
HRESULT None None.SetBump([in] long Speed,[in] long Duration)
HRESULT None None.GetOutputSetting([in] DWORD dwOutputNum,[in] LPCWSTR pszName,[out] WMT_ATTR_DATATYPE *pType,[out] BYTE *pValue,[in None None,out] WORD *pcbLength)
HRESULT None None.GetSyncTolerance([in] DWORD *pmsWindow)
HRESULT None None.SetOption([in] DVD_OPTION_FLAG flag,[in] BOOL bEnable)
HRESULT None None.GetWindowPosition([out] long *pLeft,[out] long *pTop,[out] long *pWidth,[out] long *pHeight)
HRESULT None None.GetAllocateForOutput([in] DWORD dwOutputNum,[out] IWMReaderAllocatorEx **ppAllocator)
HRESULT None None.GetBandwidth([out] DWORD *pdwBitrate,[out] DWORD *pmsBufferWindow)
HRESULT None None.get_WhiteBalanceComponent([out] long *pValue1,[out] long *pValue2,[in None None,out] long *pFlags)
HRESULT None None.get_MessageDrain([in] OAHWND *Drain)
HRESULT None None.SetSinksForStatus(IWMWriter* pWriter None,IWMStatusCallback* pStatus None)
HRESULT None None.CanSeekForward([out] LONG *pCanSeekForward)
HRESULT None None.GetEditPropertySet([in] long EditID,[out] long *pState)
HRESULT None None.GetMutualExclusion([in] DWORD dwMEIndex,[out] IWMMutualExclusion **ppME)
HRESULT None propsys.PropVariantToDoubleVector(_In_ REFPROPVARIANT propvar,_Out_ DOUBLE *prgn,_In_ ULONG crgn,_Out_ ULONG *pcElem)
HRESULT None None.SetStreamSelection([in] DWORD dwStreamIndex,[in] BOOL fEnabled)
HRESULT None None.SelectParentalLevel(ULONG ulParentalLevel None)
HRESULT None None.GetRecordCount([out] WORD *pwRecordCount)
HRESULT None None.SetRange([in] QWORD cnsStartTime,[in] LONGLONG cnsDuration)
HRESULT None None.get_Mode([out] long *pMode)
HRESULT None None.put_ExposureRelative([in] long Value,[in] long Flags)
HRESULT None None.GetAudioAttributes([in] ULONG ulStream,[out] DVD_AudioAttributes *pATR)
HRESULT None None.OverrideFrameSize([in] long FrameNumber,[in] long Size)
HRESULT None None.get_WindowStyle([out] long *pWindowStyle)
HRESULT None None.ReleaseBuffer([in] UINT32 NumFramesRead)
HRESULT None None.GetCurrentImage([out] BYTE **lpDib)
HRESULT None None.SetDefaultTimerResolution([in] REFERENCE_TIME timerResolution)
HRESULT None wmvcore.WMCreateBackupRestorer(_In_ IUnknown *pCallback,_Out_ IWMLicenseBackup **ppBackup)
HRESULT None None.get_Caption([out] BSTR *strCaption)
HRESULT None None.IsCursorHidden([out] long *CursorHidden)
HRESULT None None.put_Loudness([in] BOOL fLoudness)
HRESULT None None.IsRealTime([out] BOOL *pfRealTime)
HRESULT None None.GetDVDDirectory([out] LPWSTR pszwPath,[in] ULONG ulMaxSize,[out] ULONG *pulActualSize)
HRESULT None None.put_Width([in] long Width)
HRESULT None None.getRange_Saturation([out] long *pMin,[out] long *pMax,[out] long *pSteppingDelta,[out] long *pDefault,[out] long *pCapsFlag)
HRESULT None None.SetType([in] REFGUID guidType)
HRESULT None None.get_BackgroundPalette([out] long *pBackgroundPalette)
HRESULT None None.JoinFilterGraph([in] IFilterGraph *pGraph,[in] LPCWSTR pName)
HRESULT None None.GetCurrentVideoAttributes([out] DVD_VideoAttributes *pATR)
HRESULT None None.GetOutputFormatCount([in] DWORD dwOutputNumber,[out] DWORD *pcFormats)
HRESULT None None.GetStreamSelected([in] WORD wStreamNum,[out] WMT_STREAM_SELECTION *pSelection)
HRESULT None None.GetDescription([out] WCHAR *pwszDescription,[in None None,out] DWORD *pcchDescription)
HRESULT None None.getRange_ExposureRelative([out] long *pMin,[out] long *pMax,[out] long *pSteppingDelta,[out] long *pDefault,[out] long *pCapsFlag)
HRESULT None None.get_SourceLeft([out] long *pSourceLeft)
HRESULT None None.RepaintVideo([in] HWND hwnd,[in] HDC hdc)
ULONG None propsys.VariantToUInt32WithDefault(_In_ REFVARIANT varIn,_In_ ULONG ulDefault)
HRESULT None None.get_DestinationHeight([out] long *pDestinationHeight)
HRESULT None None.GetMediaType([out] WM_MEDIA_TYPE *pType,[in None None,out] DWORD *pcbType)
HRESULT None None.GetCurrentAngle([out] ULONG *pulAnglesAvailable,[out] ULONG *pulCurrentAngle)
HRESULT None None.SetTransportAudioParameters([in] long Param,[in] long Value)
HRESULT None None.GetFirstRegisteredDevice([in] DWORD dwRegisterType,[out] IWMRegisteredDevice **ppDevice)
HRESULT None None.Pause([in] BOOL bState)
HRESULT None None.put_Caption([in] BSTR strCaption)
HRESULT None None.GetCurrentImage([in None None,out] long *pBufferSize,[out] long *pDIBImage)
LONG None propsys.VariantToInt32WithDefault(_In_ REFVARIANT varIn,_In_ LONG lDefault)
HRESULT None None.getRange_PowerlineFrequency([out] long *pMin,[out] long *pMax,[out] long *pSteppingDelta,[out] long *pDefault,[out] long *pCapsFlag)
HRESULT None propsys.PropVariantChangeType(_Out_ PROPVARIANT *ppropvarDest,_In_ REFPROPVARIANT propvarSrc,_In_ PROPVAR_CHANGE_FLAGS flags,_In_ VARTYPE vt)
HRESULT None None.GetAccessEntryEx([in] WM_AETYPE aeType,[in] DWORD dwEntryNum,[out] BSTR *pbstrAddress,[out] BSTR *pbstrMask)
HRESULT None None.GetVideoPortIndex([out] DWORD *pdwVideoPortIndex)
HRESULT None None.GetDVDTextNumberOfLanguages([out] ULONG *pulNumOfLangs)
HRESULT None propsys.PropVariantToDouble(_In_ REFPROPVARIANT propvarIn,_Out_ DOUBLE *pdblRet)
HRESULT None None.UnregisterDevice([in] DWORD dwRegisterType,[in] BYTE *pbCertificate,[in] DWORD cbCertificate,[in] DRM_VAL16 SerialNumber)
HRESULT None None.GetSyncSource([out] IReferenceClock **pClock)
HRESULT None None.getRange_Hue([out] long *pMin,[out] long *pMax,[out] long *pSteppingDelta,[out] long *pDefault,[out] long *pCapsFlag)
HRESULT None None.GetStreamSelected([in] WORD wStreamNum,[out] WMT_STREAM_SELECTION *pSelection)
HRESULT None None.GetNativeVideoSize([out] LONG *lpWidth,[out] LONG *lpHeight,[out] LONG *lpARWidth,[out] LONG *lpARHeight)
HRESULT None None.SelectKaraokeAudioPresentationMode([in] ULONG ulMode)
HRESULT None None.put_WindowStyleEx([in] long WindowStyleEx)
HRESULT None None.RemoveStreamByNumber([in] WORD wStreamNum)
HRESULT None None.PlayTitle(ULONG uiTitle None,[in] DWORD dwFlags,[out] IDvdCmd **ppCmd)
HRESULT None None.put_Gain([in] long Value,[in] long Flags)
HRESULT None None.SetWindowForeground(long Focus None)
HRESULT None None.InitPlaylistBurn([in] DWORD cFiles,[in] WCHAR **pwszFilenames,[in] IWMStatusCallback *pCallback,[in] void *pvContext)
HRESULT None None.GetVideoPosition([out] RECT *pSourceRect,[in] RECT *pDestinationRect)
HRESULT None wmvcore.WMCreateBackupRestorer(_In_ IUnknown *pCallback,_Out_ IWMLicenseBackup **ppBackup)
HRESULT None None.getRange_Roll([out] long *pMin,[out] long *pMax,[out] long *pSteppingDelta,[out] long *pDefault,[out] long *pCapsFlag)
HRESULT None None.GetAllGPRMs([out] GPRMARRAY *pRegisterArray)
HRESULT None None.GetDeviceSerialNumber([out] DRM_VAL16 *pSerialNumber)
HRESULT None None.GetCmdFromEvent([in] LONG_PTR lParam1,[out] IDvdCmd **ppCmdObj)
HRESULT None None.GetAllGPRMs([out] GPRMARRAY *pRegisterArray)
HRESULT None wmvcore.WMCreateWriterFileSink(_Out_ IWMWriterFileSink **ppSink)
HRESULT None None.SetAllocateForOutput([in] DWORD dwOutputNum,[in] BOOL fAllocate)
HRESULT None None.GetCodecInfoCount([out] DWORD *pcCodecInfos)
HRESULT None None.GetAllGPRMs([out] GPRMARRAY *pRegisterArray)
HRESULT None None.Notify([in] DWORD dwOutputNum,[in] WM_MEDIA_TYPE *pSubtype)
HRESULT None None.GetUserProvidedClock([out] BOOL *pfUserClock)
HRESULT None None.getRange_Sharpness([out] long *pMin,[out] long *pMax,[out] long *pSteppingDelta,[out] long *pDefault,[out] long *pCapsFlag)
HRESULT None None.GetStreamByNumber([in] WORD wStreamNum,[out] IWMStreamConfig **ppConfig)
HRESULT None None.SelectAudioStream([in] ULONG ulAudio,[in] DWORD dwFlags,[out] IDvdCmd **ppCmd)
HRESULT None None.GetAllGPRMs([out] GPRMARRAY *pRegisterArray)
HRESULT None None.GetMaxIdealImageSize([out] long *pWidth,[out] long *pHeight)
HRESULT None None.getRange_Exposure([out] long *pMin,[out] long *pMax,[out] long *pSteppingDelta,[out] long *pDefault,[out] long *pCapsFlag)
HRESULT None None.GetProperty([in] LPCWSTR pszName,[out] WMT_ATTR_DATATYPE *pType,[out] BYTE *pValue,[in None None,out] DWORD *pdwSize)
HRESULT None None.Advise([in] IWMStatusCallback *pCallback,[in] void *pvContext)
HRESULT None None.get_FullScreenMode([out] long *FullScreenMode)
HRESULT None None.GetBandwidth([out] DWORD *pdwBitrate,[out] DWORD *pmsBufferWindow)
HRESULT None None.SetRange([in] QWORD cnsStartTime,[in] LONGLONG cnsDuration)
HRESULT None None.GetMarkerCount([out] WORD *pcMarkers)
HRESULT None None.SetMinPacketSize([in] DWORD dwMinPacketSize)
HRESULT None None.get_WindowStyleEx([out None None,retval] long *pWindowStyleEx)
HRESULT None None.SetAspectRatioMode([in] DWORD AspectRatioMode)
HRESULT None None.GetAttributeByName([in None None,out] WORD *pwStreamNum,[in] LPCWSTR pszName,[out] WMT_ATTR_DATATYPE *pType,[out] BYTE *pValue,[in None None,out] WORD *pcbLength)
HRESULT None None.put_Contrast([in] long Value,[in] long Flags)
HRESULT None None.get_StopTime([out] REFTIME *pllTime)
HRESULT None None.get_Rate([out] double *pdRate)
HRESULT None None.SetRangeByTimecode([in] WORD wStreamNum,[in] WMT_TIMECODE_EXTENSION_DATA *pStart,[in] WMT_TIMECODE_EXTENSION_DATA *pEnd)
HRESULT None None.SelectRelativeButton(DVD_RELATIVE_BUTTON buttonDir None)
HRESULT None None.GetName([out] WCHAR *pwszName,[in None None,out] DWORD *pcchName)
int None shlwapi.StrCmpI(_In_ PCTSTR psz1,_In_ PCTSTR psz2)
int None shlwapi.StrCmpIW(_In_ PCTSTR psz1,_In_ PCTSTR psz2)
HRESULT None None.GetReceiveStreamSamples([in] WORD wStreamNum,[out] BOOL *pfReceiveStreamSamples)
HRESULT None None.GetMaxOutputSampleSize([in] DWORD dwOutput,[out] DWORD *pcbMax)
HRESULT None wmvcore.WMCreateDRMTranscryptor(_Out_ IWMDRMTranscryptor **ppTranscryptor)
HRESULT None None.NotifyEvent([in] LONG EventCode,[in] LONG_PTR Param1,[in] LONG_PTR Param2)
HRESULT None None.put_Width([in] long Width)
HRESULT None None.GetAllGPRMs([out] GPRMARRAY *pRegisterArray)
HRESULT None None.RemoveSink([in] IWMWriterSink *pSink)
HRESULT None None.SetReceiveSelectionCallbacks([in] BOOL fGetCallbacks)
HRESULT None None.SetBufferingTime([in] QWORD cnsBufferingTime)
HRESULT None None.GetName([out] WCHAR *pwszName,[in None None,out] WORD *pcchName)
HRESULT None None.get_Sharpness([out] long *pValue,[out] long *pFlags)
HRESULT None None.put_Mono([in] BOOL fMono)
HRESULT None None.put_RollRelative([in] long Value,[in] long Flags)
HRESULT None None.GetAspectRatioMode([out] DWORD *lpAspectRatioMode)
HRESULT None None.SetTransportBasicParameters([in] long Param,[in] long Value,[in] LPCOLESTR pszData)
HRESULT None shell32.GetDisplayNameOf([in] PCUITEMID_CHILD pidl,[in] SHGDNF uFlags,[out] STRRET *pName)
HRESULT None wmvcore.WMIsAvailableOffline(_In_ LPCWSTR pwszURL,_In_ LPCWSTR pwszLanguage,_Out_ BOOL *pfIsAvailableOffline)
HRESULT None None.get_Brightness([out] long *pValue,[out] long *pFlags)
HRESULT None None.getRange_TiltRelative([out] long *pMin,[out] long *pMax,[out] long *pSteppingDelta,[out] long *pDefault,[out] long *pCapsFlag)
HRESULT None None.GetMutualExclusionCount([out] DWORD *pcME)
HRESULT None None.GetAudioAttributes([in] ULONG ulStream,[out] DVD_AudioAttributes *pATR)
HRESULT None None.GetLanguageDetails([in] WORD wIndex,[out] WCHAR *pwszLanguageString,[in None None,out] WORD *pcchLanguageStringLength)
HRESULT None None.NotifyOwnerMessage([in] OAHWND hwnd,[in] long uMsg,[in] LONG_PTR wParam,[in] LONG_PTR lParam)
HRESULT None None.IsDisabled([in] REFCLSID clsid)
HRESULT None None.getRange_Focus([out] long *pMin,[out] long *pMax,[out] long *pSteppingDelta,[out] long *pDefault,[out] long *pCapsFlag)
HRESULT None None.get_FocalLengths([out] long *plOcularFocalLength,[out] long *plObjectiveFocalLengthMin,[out] long *plObjectiveFocalLengthMax)
HRESULT None None.put_TiltRelative([in] long Value,[in] long Flags)
HRESULT None wmvcore.WMCreateLicenseRevocationAgent(_In_ IUnknown *pCallback,_Out_ IWMLicenseRevocationAgent **ppLicenseRevocationAgent)
HRESULT None None.GetInfo([out] WCHAR *pszVersion,[in None None,out] int *pcbVersion,[out] LPWSTR pszDescription,[in None None,out] int *pcbDescription,[out] long *pDefaultKeyFrameRate,[out] long *pDefaultPFramesPerKey,[out] double *pDefaultQuality,[out] long *pCapabilities)
HRESULT None None.OnHeader([in] INSSBuffer *pHeader)
HRESULT None None.GetOutputFormatCount([in] DWORD dwOutputNum,[out] DWORD *pcFormats)
HRESULT None None.put_Width([in] long Width)
HRESULT None None.get_ScanMode([out] long *pValue,[out] long *pFlags)
HRESULT None None.AddSink([in] IWMWriterSink *pSink)
HRESULT None None.HideCursor([in] long HideCursor)
HRESULT None None.get_Height([out] long *pHeight)
HRESULT None None.get_SourceTop([out] long *pSourceTop)
HRESULT None None.get_DigitalMultiplier([out] long *pValue,[out] long *pFlags)
HRESULT None None.get_Pan([out] long *pValue,[out] long *pFlags)
BOOL None propsys.VariantToBooleanWithDefault(_In_ REFVARIANT varIn,_In_ BOOL fDefault)
HRESULT None None.AddLanguageByRFC1766String([in] LPWSTR pwszLanguageString,[out] WORD *pwIndex)
HRESULT None None.getRange_Roll([out] long *pMin,[out] long *pMax,[out] long *pSteppingDelta,[out] long *pDefault,[out] long *pCapsFlag)
HRESULT None None.GetLRBChallenge([in] BYTE *pMachineID,[in] DWORD dwMachineIDLength,[in] BYTE *pChallenge,[in] DWORD dwChallengeLength,[out] BYTE *pChallengeOutput,[out] DWORD *pdwChallengeOutputLength)
HRESULT None None.getRange_FocusRelative([out] long *pMin,[out] long *pMax,[out] long *pSteppingDelta,[out] long *pDefault,[out] long *pCapsFlag)
HRESULT None None.getRange_Gamma([out] long *pMin,[out] long *pMax,[out] long *pSteppingDelta,[out] long *pDefault,[out] long *pCapsFlag)
HRESULT None None.put_PanTiltRelative([in] long PanValue,[in] long TiltValue,[in] long Flags)
HRESULT None propsys.InitPropVariantVectorFromPropVariant(_In_ REFPROPVARIANT propvarSingle,_Out_ PROPVARIANT *ppropvarVector)
HRESULT None None.GetMaxPacketSize([out] DWORD *pdwMaxPacketSize)
HRESULT None None.PreprocessSample([in] DWORD dwInputNum,[in] QWORD cnsSampleTime,[in] DWORD dwFlags,[in] INSSBuffer *pSample)
HRESULT None None.GetAudioAttributes([in] ULONG ulStream,[out] DVD_AudioAttributes *pATR)
HRESULT None None.SetStreamsSelected([in] WORD cStreamCount,[in] WORD *pwStreamNumbers,[in] WMT_STREAM_SELECTION *pSelections)
HRESULT None None.Init(REFCLSID clsidDMO None,REFCLSID catDMO None)
HRESULT None None.put_Rate([in] double dblRate)
HRESULT None None.IsLegacyDisabled([in] LPCWSTR dllName)
HRESULT None None.GetDeviceIdConnectedTo([out] LPWSTR *ppwstrDeviceId)
HRESULT None None.get_Gain([out] long *pValue,[out] long *pFlags)
HRESULT None None.GetLanguageCount([out] WORD *pwCount)
HRESULT None None.RemoveScript([in] WORD wIndex)
HRESULT None None.put_FullScreenMode([in] long FullScreenMode)
HRESULT None None.get_Focus([out] long *pValue,[out] long *pFlags)
HRESULT STDMETHODCALLTYPE None.WMCreateSecureChannel_DES(IWMSecureChannel **ppChannel None)
HRESULT None None.GetAspectRatioMode([out] DWORD *lpAspectRatioMode)
HRESULT None None.Start([in] QWORD cnsStart,[in] QWORD cnsDuration,[in] float fRate,[in] void *pvContext)
HRESULT None None.put_Hue([in] long Value,[in] long Flags)
HRESULT None None.GetStream([in] DWORD dwStreamIndex,[out] IWMStreamConfig **ppConfig)
HRESULT None None.getRange_Tilt([out] long *pMin,[out] long *pMax,[out] long *pSteppingDelta,[out] long *pDefault,[out] long *pCapsFlag)
HRESULT None None.getRange_BacklightCompensation([out] long *pMin,[out] long *pMax,[out] long *pSteppingDelta,[out] long *pDefault,[out] long *pCapsFlag)
HRESULT None None.get_Exposure([out] long *pValue,[out] long *pFlags)
HRESULT None None.GetSupportedProtocolName([in] DWORD dwProtocolNum,[out] WCHAR *pwszProtocolName,[in None None,out] DWORD *pcchProtocolName)
HRESULT None None.SetEnableHTTP([in] BOOL fEnableHTTP)
HRESULT None None.GetHostURL([out] WCHAR *pwszURL,[in None None,out] DWORD *pcchURL)
HRESULT None None.GetHoldPage([out] BOOL *pbHoldPage)
HRESULT None None.put_WindowStyleEx([in] long WindowStyleEx)
HRESULT None None.put_WindowStyleEx([in] long WindowStyleEx)
HRESULT None None.getRange_Iris([out] long *pMin,[out] long *pMax,[out] long *pSteppingDelta,[out] long *pDefault,[out] long *pCapsFlag)
HRESULT None None.AddMutualExclusion([in] IWMMutualExclusion *pME)
HRESULT None None.put_IrisRelative([in] long Value,[in] long Flags)
HRESULT None None.put_FocusRelative([in] long Value,[in] long Flags)
HRESULT None None.SetVideoPortIndex([in] DWORD dwVideoPortIndex)
HRESULT None None.AllocateForStream([in] WORD wStreamNum,[in] DWORD cbBuffer,[out] INSSBuffer **ppBuffer,[in] void *pvContext)
HRESULT None None.get_PrivacyMode([out] long *pValue,[out] long *pFlags)
HRESULT None None.RepaintVideo([in] HWND hwnd,[in] HDC hdc)
HRESULT None None.put_WindowStyle([in] long WindowStyle)
HRESULT None None.SetAllocateForOutput([in] DWORD dwOutputNum,[in] IWMReaderAllocatorEx *pAllocator)
HRESULT None None.AllocateSample([in] DWORD dwSampleSize,[out] INSSBuffer **ppSample)
HRESULT None None.GetVideoPortIndex([out] DWORD *pdwVideoPortIndex)
HRESULT None None.ActivateAtPosition([in] POINT point)
HRESULT None None.GetAllGPRMs([out] GPRMARRAY *pRegisterArray)
HRESULT None None.getRange_ExposureRelative([out] long *pMin,[out] long *pMax,[out] long *pSteppingDelta,[out] long *pDefault,[out] long *pCapsFlag)
HRESULT None propsys.InitVariantFromString(_In_ PCWSTR psz,_Out_ VARIANT *pvar)
HRESULT None None.put_WhiteBalance([in] long Value,[in] long Flags)
HRESULT None None.GetAttributeCount([out] DWORD *pcAttributes)
HRESULT None None.GetCredentialFlags([out] DWORD *lpdwFlags)
HRESULT None None.put_Loudness([in] BOOL fLoudness)
HRESULT None None.CanSaveFileAs([out] BOOL *pfCanSave)
HRESULT None None.GetOutputFormat(LPBITMAPINFOHEADER lpbmih None)
virtual HRESULT None.WMSC_AddSignature([in] BYTE *pbCertSig,[in] DWORD cbCertSig)
HRESULT None wmvcore.WMCreateSyncReader(_In_ IUnknown *pUnkCert,_In_ DWORD dwRights,_Out_ IWMSyncReader **ppSyncReader)
HRESULT None None.GetAllGPRMs([out] GPRMARRAY *pRegisterArray)
HRESULT None None.get_CurrentPosition([out] REFTIME *pllTime)
HRESULT None None.InitPropVariantFromUInt64(_In_ ULONGLONG ullVal,_Out_ PROPVARIANT *ppropvar)
HRESULT None propsys.VariantToInt32(_In_ REFVARIANT varIn,_Out_ LONG *plRet)
HRESULT None None.put_IrisRelative([in] long Value,[in] long Flags)
HRESULT None None.GetPreferredClsid([in] REFGUID subType,[out] CLSID *clsid)
HRESULT None None.put_WindowStyleEx([in] long WindowStyleEx)
HRESULT None None.getRange_IrisRelative([out] long *pMin,[out] long *pMax,[out] long *pSteppingDelta,[out] long *pDefault,[out] long *pCapsFlag)
HRESULT None None.put_Width([in] long Width)
HRESULT None None.SetGroupingParam([in] LPCGUID Grouping,[in] LPCGUID EventContext)
HRESULT None None.put_Bass([in] double Bass)
HRESULT None None.Pause([in] BOOL bState)
HRESULT None None.get_PanTilt([out] long *pPanValue,[out] long *pTiltValue,[out] long *pFlags)
HRESULT None None.put_DigitalMultiplier([in] long Value,[in] long Flags)
HRESULT None None.put_WindowStyleEx([in] long WindowStyleEx)
HRESULT None None.SetChase([in] long Enable,[in] long Offset,[in] HEVENT hEvent)
HRESULT None None.GetAllGPRMs([out] GPRMARRAY *pRegisterArray)
HRESULT None None.BackupLicenses([in] DWORD dwFlags,[in] IWMStatusCallback *pCallback)
HRESULT None None.GetAttributeByIndex([in] WORD wIndex,[in] WORD *pwStreamNum,[out] WCHAR *pwszName,[in None None,out] WORD *pcchNameLen,[out] WMT_ATTR_DATATYPE *pType,[out] BYTE *pValue,[in None None,out] WORD *pcbLength)
HRESULT None None.put_Rate([in] double dRate)
HRESULT None None.put_MessageDrain([in] OAHWND Drain)
HRESULT None None.put_BacklightCompensation([in] long Value,[in] long Flags)
HRESULT None None.SetManualStreamSelection([in] BOOL fSelection)
HRESULT None None.put_WindowState([in] long WindowState)
HRESULT None None.AllocateForOutputEx([in] DWORD dwOutputNum,[in] DWORD cbBuffer,[out] INSSBuffer **ppBuffer,[in] DWORD dwFlags,[in] QWORD cnsSampleTime,[in] QWORD cnsSampleDuration,[in] void *pvContext)
HRESULT None None.get_PFramesPerKeyFrame([out] long *pPFramesPerKeyFrame)
HRESULT None None.GetDisabledByIndex([in] DWORD index,[out] CLSID *clsid)
HRESULT None None.GetMarker([in] WORD wIndex,[out] WCHAR *pwszMarkerName,[in] WORD *pcchMarkerNameLen,[out] QWORD *pcnsMarkerTime)
HRESULT None None.GetAttributeCount([in] WORD wStreamNum,[out] WORD *pcAttributes)
HRESULT None None.GetDrawBackgroundMode([out] AM_WST_DRAWBGMODE *lpMode)
HRESULT None None.getRange_WhiteBalanceComponent([out] long *pMin,[out] long *pMax,[out] long *pSteppingDelta,[out] long *pDefault,[in None None,out] long *pCapsFlag)
HRESULT None None.GetPreferredClsidByIndex([in] DWORD index,[out] GUID *subType,[out] CLSID *clsid)
HRESULT None None.put_Sharpness([in] long Value,[in] long Flags)
HRESULT None None.UnregisterDevice([in] DWORD dwRegisterType,[in] BYTE *pbCertificate,[in] DWORD cbCertificate,[in] DRM_VAL16 SerialNumber)
HRESULT None None.put_Gain([in] long Value,[in] long Flags)
HRESULT None None.RemoveStreamByNumber([in] WORD wStreamNum)
HRESULT None None.RegisterDevice([in] DWORD dwRegisterType,[in] BYTE *pbCertificate,[in] DWORD cbCertificate,[in] DRM_VAL16 SerialNumber,[out] IWMRegisteredDevice **ppDevice)
HRESULT None None.SetSyncSource([in] IReferenceClock *pClock)
HRESULT None None.GetRegistrationStats([in] DWORD dwRegisterType,[out] DWORD *pcRegisteredDevices)
HRESULT None None.GetRegisteredDeviceByID([in] DWORD dwRegisterType,[in] BYTE *pbCertificate,[in] DWORD cbCertificate,[in] DRM_VAL16 SerialNumber,[out] IWMRegisteredDevice **ppDevice)
PTSTR None shlwapi.StrRChr(_In_ PTSTR pszStart,_In_opt_ PCTSTR pszEnd,TCHAR wMatch None)
PTSTR None shlwapi.StrRChrW(_In_ PTSTR pszStart,_In_opt_ PCTSTR pszEnd,TCHAR wMatch None)
PTSTR None shlwapi.StrRChrA(_In_ PTSTR pszStart,_In_opt_ PCTSTR pszEnd,TCHAR wMatch None)
HRESULT None None.SetNotifyWindow([in] OAHWND hwnd,[in] long lMsg,[in] LONG_PTR lInstanceData)
HRESULT None None.get_Hue([out] long *pValue,[out] long *pFlags)
HRESULT None None.GetProperty([in] LPCWSTR pszName,[out] WMT_ATTR_DATATYPE *pType,[out] BYTE *pValue,[in None None,out] DWORD *pdwSize)
HRESULT None None.RemoveStream([in] IWMStreamConfig *pConfig)
HRESULT None None.GetName([out] LPWSTR *ppwstrName)
HRESULT None None.SelectKaraokeAudioPresentationMode([in] ULONG ulMode)
HRESULT None None.get_PowerlineFrequency([out] long *pValue,[out] long *pFlags)
HRESULT None None.put_Iris([in] long Value,[in] long Flags)
HRESULT None None.GetAllocateForStream([in] WORD wStreamNum,[out] BOOL *pfAllocate)
HRESULT None None.GetMinIdealImageSize([out] long *pWidth,[out] long *pHeight)
HRESULT None None.GetPalette([out] DWORD *pdwColors,[out] PALETTEENTRY **ppPalette)
HRESULT None None.PlayAtTimeInTitle([in] ULONG uiTitle,[in] DVD_HMSF_TIMECODE *pTime,[in] DWORD dwFlags,[out] IDvdCmd **ppCmd)
HRESULT None None.GetStreamSelected([in] WORD wStreamNum,[out] WMT_STREAM_SELECTION *pSelection)
HRESULT None None.IsAudioStreamEnabled([in] ULONG ulStreamNum,[out] BOOL *pbEnabled)
HRESULT None None.SetCredentialsEx([in] BSTR bstrRealm,[in] BSTR bstrUrl,[in] BOOL fProxy,[in] BSTR bstrName,[in] BSTR bstrPassword,[in] BOOL fPersist,[in] BOOL fConfirmedGood)
HRESULT None None.SetAllocateForStream([in] WORD wStreamNum,[in] BOOL fAllocate)
HRESULT None None.GetMaxStreamSampleSize([in] WORD wStream,[out] DWORD *pcbMax)
HRESULT None None.KsEvent([in None None,optional] PKSEVENT Event,[in] ULONG EventLength,[in None None,out] LPVOID EventData,[in] ULONG DataLength,[in None None,out] ULONG *BytesReturned)
HRESULT None None.SetReadStreamSamples([in] WORD wStreamNum,[in] BOOL fCompressed)
HRESULT None None.SetName([in] WCHAR *pwszName)
BOOL None shlwapi.StrToInt64Ex(_In_ PCTSTR pszString,STIF_FLAGS dwFlags None,_Out_ LONGLONG *pllRet)
BOOL None shlwapi.StrToInt64ExW(_In_ PCTSTR pszString,STIF_FLAGS dwFlags None,_Out_ LONGLONG *pllRet)
BOOL None shlwapi.StrToInt64ExA(_In_ PCTSTR pszString,STIF_FLAGS dwFlags None,_Out_ LONGLONG *pllRet)
HRESULT None None.SetAllocateForOutput([in] DWORD dwOutputNum,[in] BOOL fAllocate)
HRESULT None None.SetWindowForeground(long Focus None)
HRESULT None None.GetCurrentSubpicture([out] ULONG *pulStreamsAvailable,[out] ULONG *pulCurrentStream,[out] BOOL *pbIsDisabled)
HRESULT None None.get_Gamma([out] long *pValue,[out] long *pFlags)
HRESULT None None.put_WhiteBalance([in] long Value,[in] long Flags)
HRESULT None None.GetDVDTextStringAsUnicode([in] ULONG ulLangIndex,[in] ULONG ulStringIndex,[out] WCHAR *pchBuffer,[in] ULONG ulMaxBufferSize,[out] ULONG *pulActualSize,[out] DVD_TextStringType *pType)
HRESULT None None.GetLanguageCount([out] WORD *pwCount)
HRESULT None None.SetProxyBypassForLocal([in] LPCWSTR pwszProtocol,[in] BOOL fBypassForLocal)
HRESULT None None.SetStreamsSelected([in] WORD cStreamCount,[in] WORD *pwStreamNumbers,[in] WMT_STREAM_SELECTION *pSelections)
HRESULT None None.put_WindowStyleEx([in] long WindowStyleEx)
HRESULT None None.put_IrisRelative([in] long Value,[in] long Flags)
HRESULT None None.ProcessLRB([in] BYTE *pSignedLRB,[in] DWORD dwSignedLRBLength,[out] BYTE *pSignedACK,[out] DWORD *pdwSignedACKLength)
HRESULT None None.get_PanRelative([out] long *pValue,[out] long *pFlags)
HRESULT None wmvcore.WMCreateIndexer(_Out_ IWMIndexer **ppIndexer)
HRESULT None None.put_PrivacyMode([in] long Value,[in] long Flags)
HRESULT None None.put_Width([in] long Width)
HRESULT None None.RemoveScript([in] WORD wIndex)
HRESULT None None.put_Tilt([in] long Value,[in] long Flags)
HRESULT None None.put_Pan([in] long Value,[in] long Flags)
HRESULT None None.UnregisterControlChangeCallback([in] IControlChangeNotify *pNotify)
HRESULT None None.GetProxyPort([in] LPCWSTR pwszProtocol,[out] DWORD *pdwPort)
HRESULT None None.GetEnableTCP([out] BOOL *pfEnableTCP)
HRESULT None None.put_PrerollTime([in] REFTIME llTime)
HRESULT None None.getRange_Exposure([out] long *pMin,[out] long *pMax,[out] long *pSteppingDelta,[out] long *pDefault,[out] long *pCapsFlag)
HRESULT None None.GetLanguage([in] DWORD dwOutputNum,[in] WORD wLanguage,[out] WCHAR *pwszLanguageString,[in None None,out] WORD *pcchLanguageStringLength)
HRESULT None None.AddMarker([in] WCHAR *pwszMarkerName,[in] QWORD cnsMarkerTime)
HRESULT None None.get_RollRelative([out] long *pValue,[out] long *pFlags)
int None shlwapi.StrFromTimeInterval(_Out_ PTSTR pszOut,UINT cchMax None,DWORD dwTimeMS None,int digits None)
int None shlwapi.StrFromTimeIntervalW(_Out_ PTSTR pszOut,UINT cchMax None,DWORD dwTimeMS None,int digits None)
int None shlwapi.StrFromTimeIntervalA(_Out_ PTSTR pszOut,UINT cchMax None,DWORD dwTimeMS None,int digits None)
HRESULT None None.UseWhenFullScreen(long UseWhenFullScreen None)
HRESULT None None.get_PanTiltRelative([out] long *pPanValue,[out] long *pTiltValue,[out] long *pFlags)
HRESULT None None.getRange_WhiteBalance([out] long *pMin,[out] long *pMax,[out] long *pSteppingDelta,[out] long *pDefault,[out] long *pCapsFlag)
HRESULT None None.RemoveMutualExclusion([in] IWMMutualExclusion *pME)
HRESULT None None.get_Zoom([out] long *pValue,[out] long *pFlags)
HRESULT None None.SetEnableMulticast([in] BOOL fEnableMulticast)
HRESULT None None.GetPostViewFormat([in] WORD wStreamNumber,[in] DWORD dwFormatNumber,[out] IWMMediaProps **ppProps)
HRESULT None None.GetMenuLanguages([out] LCID *pLanguages,[in] ULONG ulMaxLanguages,[out] ULONG *puActualLanguages)
HRESULT None None.SetBorderColor([in] COLORREF clrBorder)
HRESULT None None.put_Focus([in] long Value,[in] long Flags)
HRESULT None None.GetOutputCount([out] DWORD *pcOutputs)
HRESULT None None.AddLoggingUrl([in] LPCWSTR pwszUrl)
HRESULT None shlwapi.StrRetToStr(_Inout_ STRRET *pstr,_In_opt_ PCUITEMID_CHILD pidl,_Out_ LPTSTR *ppszName)
HRESULT None shlwapi.StrRetToStrW(_Inout_ STRRET *pstr,_In_opt_ PCUITEMID_CHILD pidl,_Out_ LPTSTR *ppszName)
HRESULT None shlwapi.StrRetToStrA(_Inout_ STRRET *pstr,_In_opt_ PCUITEMID_CHILD pidl,_Out_ LPTSTR *ppszName)
HRESULT None None.GetNumProtocolsSupported([out] DWORD *pcProtocols)
HRESULT None None.GetAttributeByIndex([in] WORD wIndex,[in] WORD *pwStreamNum,[out] WCHAR *pwszName,[in None None,out] WORD *pcchNameLen,[out] WMT_ATTR_DATATYPE *pType,[out] BYTE *pValue,[in None None,out] WORD *pcbLength)
HRESULT None None.getRange_Pan([out] long *pMin,[out] long *pMax,[out] long *pSteppingDelta,[out] long *pDefault,[out] long *pCapsFlag)
HRESULT None None.OnStreamSelection([in] WORD wStreamCount,[in] WORD *pStreamNumbers,[in] WMT_STREAM_SELECTION *pSelections,[in] void *pvContext)
HRESULT None None.put_ZoomRelative([in] long Value,[in] long Flags)
HRESULT None None.GetAllGPRMs([out] GPRMARRAY *pRegisterArray)
HRESULT None None.getRange_Contrast([out] long *pMin,[out] long *pMax,[out] long *pSteppingDelta,[out] long *pDefault,[out] long *pCapsFlag)
HRESULT None None.getRange_PanRelative([out] long *pMin,[out] long *pMax,[out] long *pSteppingDelta,[out] long *pDefault,[out] long *pCapsFlag)
virtual HRESULT None.GetCertCount([out] DWORD *pcCerts)
HRESULT None None.PreProcess(IWMWriter* pWriter None,DWORD dwInputNum None)
HRESULT None None.put_Roll([in] long Value,[in] long Flags)
HRESULT None None.put_Brightness([in] long Value,[in] long Flags)
HRESULT None None.put_Zoom([in] long Value,[in] long Flags)
HRESULT None None.Stop([in] QWORD cnsStopTime)
HRESULT None None.get_TiltRelative([out] long *pValue,[out] long *pFlags)
BOOL None shlwapi.StrToIntEx(_In_ PCTSTR pszString,STIF_FLAGS dwFlags None,_Out_ int *piRet)
BOOL None shlwapi.StrToIntExW(_In_ PCTSTR pszString,STIF_FLAGS dwFlags None,_Out_ int *piRet)
BOOL None shlwapi.StrToIntExA(_In_ PCTSTR pszString,STIF_FLAGS dwFlags None,_Out_ int *piRet)
HRESULT None None.AdviseSurfaceAllocator([in] DWORD_PTR dwUserID,[in] IVMRSurfaceAllocator *lpIVMRSurfaceAllocator)
HRESULT None None.GetNextSample([in] WORD wStreamNum,[out] INSSBuffer **ppSample,[out] QWORD *pcnsSampleTime,[out] QWORD *pcnsDuration,[out] DWORD *pdwFlags,[out] DWORD *pdwOutputNum,[out] WORD *pwStreamNum)
HRESULT None None.SetBorderColor([in] COLORREF Clr)
HRESULT None None.get_BacklightCompensation([out] long *pValue,[out] long *pFlags)
HRESULT None None.GetType([out] GUID *pguidType)
HRESULT None None.put_Exposure([in] long Value,[in] long Flags)
HRESULT None None.SetAllocateForPostView([in] WORD wStreamNumber,[in] BOOL fAllocate)
HRESULT None None.GetReceivePostViewSamples([in] WORD wStreamNum,[out] BOOL *pfReceivePostViewSamples)
HRESULT None None.get_Roll([out] long *pValue,[out] long *pFlags)
HRESULT None wmvcore.WMCreateProfileManager(_Out_ IWMProfileManager **ppProfileManager)
HRESULT None None.get_ColorEnable([out] long *pValue,[out] long *pFlags)
HRESULT None None.GetGroupingParam([out] GUID *pRetVal)
HRESULT None None.GetProxyBypassForLocal([in] LPCWSTR pwszProtocol,[out] BOOL *pfBypassForLocal)
HRESULT None None.GetEnableUDP([out] BOOL *pfEnableUDP)
HRESULT None None.getRange_ColorEnable([out] long *pMin,[out] long *pMax,[out] long *pSteppingDelta,[out] long *pDefault,[out] long *pCapsFlag)
HRESULT None None.get_WhiteBalance([out] long *pValue,[out] long *pFlags)
HRESULT None None.GetConnectedTo([out] IConnector **ppConTo)
HRESULT None None.get_Duration([out] REFTIME *plength)
HRESULT None None.SetCurrentService(AM_LINE21_CCSERVICE Service None)
HRESULT None None.GetOutputProps([in] DWORD dwOutputNum,[out] IWMOutputMediaProps **ppOutput)
HRESULT None None.GetURL(WCHAR *pwszURL None,[in] DWORD *pcchURL)
HRESULT None None.SetDDrawDevice([in] LPDIRECTDRAW7 lpDirectDrawDevice,[in] HMONITOR hMonitor)
HRESULT None None.GetScriptCount([out] WORD *pcScripts)
HRESULT None None.GetEvent([out] long *lEventCode,[out] LONG_PTR *lParam1,[out] LONG_PTR *lParam2,[in] long msTimeout)
HRESULT None None.GetLoggingUrl([in] DWORD dwIndex,[out] LPWSTR pwszUrl,[in None None,out] DWORD *pcchUrl)
HRESULT None None.GetAllocateForPostView([in] WORD wStreamNumber,[out] BOOL *pfAllocate)
HRESULT None None.EnumPartsOutgoing([out] IPartsList **ppParts)
HRESULT None None.CanSeekBackward([out] LONG *pCanSeekBackward)
HRESULT None None.GetBandwidthSharingCount([out] DWORD *pcBS)
HRESULT None None.GetCodecInfo([in] DWORD wIndex,[in None None,out] WORD *pcchName,[out] WCHAR *pwszName,[in None None,out] WORD *pcchDescription,[out] WCHAR *pwszDescription,[out] WMT_CODEC_INFO_TYPE *pCodecType,[in None None,out] WORD *pcbCodecInfo,[out] BYTE *pbCodecInfo)
HRESULT None None.ChangeDDrawDevice([in] LPDIRECTDRAW7 lpDirectDrawDevice,[in] HMONITOR hMonitor)
HRESULT None None.GetCredentialsEx([in] BSTR bstrRealm,[in] BSTR bstrUrl,[in] BOOL fProxy,[out] NETSOURCE_URLCREDPOLICY_SETTINGS *pdwUrlPolicy,[out] BSTR *pbstrName,[out] BSTR *pbstrPassword,[out] BOOL *pfConfirmedGood)
HRESULT None None.AddScript([in] WCHAR *pwszType,[in] WCHAR *pwszCommand,[in] QWORD cnsScriptTime)
HRESULT None None.GetAllocateForOutput([in] DWORD dwOutputNum,[out] BOOL *pfAllocate)
HRESULT None None.GetLanguageCount([in] DWORD dwOutputNum,[out] WORD *pwLanguageCount)
HRESULT None None.GetCredentials([in] BSTR bstrRealm,[out] BSTR *pbstrName,[out] BSTR *pbstrPassword,[out] BOOL *pfConfirmedGood)
HRESULT None None.IsUsingFastCache([out] BOOL *pfUsingFastCache)
HRESULT None None.GetNextRegisteredDevice([out] IWMRegisteredDevice **ppDevice)
HRESULT None None.SetDisabled([in] REFCLSID clsid,[in] BOOL disabled)
HRESULT None None.GetMaxPreprocessingPasses([in] DWORD dwInputNum,[in] DWORD dwFlags,[out] DWORD *pdwMaxNumPasses)
HRESULT None None.OnStreamSample([in] WORD wStreamNum,[in] QWORD cnsSampleTime,[in] QWORD cnsSampleDuration,[in] DWORD dwFlags,[in] INSSBuffer *pSample,[in] void *pvContext)
HRESULT None None.put_Contrast([in] long Value,[in] long Flags)
HRESULT STDMETHODCALLTYPE None.WMCreateDRMTranscryptionManager(IWMDRMTranscryptionManager ppTranscryptionManager None)
HRESULT None None.SetCredentialFlags([in] DWORD dwFlags)
HRESULT STDMETHODCALLTYPE None.WMCreateSecureChannel_DES(IWMSecureChannel **ppChannel None)
HRESULT None None.getRange_Brightness([out] long *pMin,[out] long *pMax,[out] long *pSteppingDelta,[out] long *pDefault,[out] long *pCapsFlag)
HRESULT None None.get_PrerollTime([out] REFTIME *pllTime)
HRESULT None None.get_Tilt([out] long *pValue,[out] long *pFlags)
HRESULT None None.HideCursor([in] long HideCursor)
BOOL None shlwapi.IntlStrEqN(_In_ LPCTSTR pszStr1,_In_ LPCTSTR pszStr2,_In_ int nChar)
BOOL None shlwapi.IntlStrEqNW(_In_ LPCTSTR pszStr1,_In_ LPCTSTR pszStr2,_In_ int nChar)
BOOL None shlwapi.IntlStrEqNA(_In_ LPCTSTR pszStr1,_In_ LPCTSTR pszStr2,_In_ int nChar)
HRESULT None None.getRange_DigitalMultiplier([out] long *pMin,[out] long *pMax,[out] long *pSteppingDelta,[out] long *pDefault,[out] long *pCapsFlag)
HRESULT None None.SetReceivePostViewSamples([in] WORD wStreamNum,[in] BOOL fReceivePostViewSamples)
HRESULT None None.put_ScanMode([in] long Value,[in] long Flags)
HRESULT None None.SetMediaType([in] WM_MEDIA_TYPE *pType)
HRESULT None None.AllocateForStream([in] WORD wStreamNum,[in] DWORD cbBuffer,[out] INSSBuffer **ppBuffer,[in] void *pvContext)
HRESULT None None.SetAnswerMode([in] BOOL bAnswer)
HRESULT None None.GetScript([in] WORD wIndex,[out] WCHAR *pwszType,[in None None,out] WORD *pcchTypeLen,[out] WCHAR *pwszCommand,[in None None,out] WORD *pcchCommandLen,[out] QWORD *pcnsScriptTime)
HRESULT None None.GetMaxSpeedFactor([out] double *pdblFactor)
HRESULT None None.put_Tilt([in] long Value,[in] long Flags)
HRESULT None None.GetBorderColor([out] COLORREF *lpClr)
HRESULT None None.GetTimecodeRangeBounds([in] WORD wStreamNum,[in] WORD wRangeNum,[out] DWORD *pStartTimecode,[out] DWORD *pEndTimecode)
HRESULT None None.GetAttributeByName([in] BSTR bstrName,[out] BSTR *pbstrValue)
HRESULT None None.GetRecordName([in] WORD wRecordNumber,[out] WCHAR *pwszRecordName,[in None None,out] WORD *pcchRecordName)
PTSTR None shlwapi.StrStr(_In_ PTSTR pszFirst,_In_ PCTSTR pszSrch)
PTSTR None shlwapi.StrStrW(_In_ PTSTR pszFirst,_In_ PCTSTR pszSrch)
PTSTR None shlwapi.StrStrA(_In_ PTSTR pszFirst,_In_ PCTSTR pszSrch)
HRESULT None None.GetStreamPrioritization([out] IWMStreamPrioritization **ppSP)
HRESULT None None.put_Tilt([in] long Value,[in] long Flags)
HRESULT None None.GetReceiveSelectionCallbacks([out] BOOL *pfGetCallbacks)
HRESULT None None.put_Zoom([in] long Value,[in] long Flags)
HRESULT None None.getRange_Roll([out] long *pMin,[out] long *pMax,[out] long *pSteppingDelta,[out] long *pDefault,[out] long *pCapsFlag)
HRESULT None None.DeleteCredentialsEx([in] BSTR bstrRealm,[in] BSTR bstrUrl,[in] BOOL fProxy)
HRESULT None None.put_Zoom([in] long Value,[in] long Flags)
HRESULT None None.GetType([out] GUID *pguidType)
HRESULT None None.SetMaxPacketSize([in] DWORD dwMaxPacketSize)
HRESULT None None.get_PanTilt([out] long *pPanValue,[out] long *pTiltValue,[out] long *pFlags)
HRESULT None None.GetManualStreamSelection([out] BOOL *pfSelection)
HRESULT None None.OnSample([in] DWORD dwOutputNum,[in] QWORD cnsSampleTime,[in] QWORD cnsSampleDuration,[in] DWORD dwFlags,[in] INSSBuffer *pSample,[in] void *pvContext)
int None shlwapi.StrCSpn(_In_ PCTSTR pszStr,_In_ PCTSTR pszSet)
int None shlwapi.StrCSpnW(_In_ PCTSTR pszStr,_In_ PCTSTR pszSet)
int None shlwapi.StrCSpnA(_In_ PCTSTR pszStr,_In_ PCTSTR pszSet)
HRESULT None shlwapi.SHLoadIndirectString(_In_ PCWSTR pszSource,_Out_ PWSTR pszOutBuf,_In_ UINT cchOutBuf,_Reserved_ void **ppvReserved)
HRESULT None None.get_FocusRelative([out] long *pValue,[out] long *pFlags)
int None shlwapi.StrCSpn(_In_ PCTSTR pszStr,_In_ PCTSTR pszSet)
int None shlwapi.StrCSpnW(_In_ PCTSTR pszStr,_In_ PCTSTR pszSet)
int None shlwapi.StrCSpnA(_In_ PCTSTR pszStr,_In_ PCTSTR pszSet)
HRESULT None None.getRange_BacklightCompensation([out] long *pMin,[out] long *pMax,[out] long *pSteppingDelta,[out] long *pDefault,[out] long *pCapsFlag)
HRESULT None None.get_Pan([out] long *pValue,[out] long *pFlags)
HRESULT None None.getRange_Pan([out] long *pMin,[out] long *pMax,[out] long *pSteppingDelta,[out] long *pDefault,[out] long *pCapsFlag)
HRESULT None None.SetControlStream([in] WORD wStreamNumber,[in] BOOL fShouldControlStartAndStop)
HRESULT None None.put_PanTiltRelative([in] long PanValue,[in] long TiltValue,[in] long Flags)
HRESULT None None.getRange_DigitalMultiplier([out] long *pMin,[out] long *pMax,[out] long *pSteppingDelta,[out] long *pDefault,[out] long *pCapsFlag)
HRESULT None None.getRange_DigitalMultiplier([out] long *pMin,[out] long *pMax,[out] long *pSteppingDelta,[out] long *pDefault,[out] long *pCapsFlag)
HRESULT None None.OnDataUnitEx([in] WMT_FILESINK_DATA_UNIT *pFileSinkDataUnit)
HRESULT None None.getRange_DigitalMultiplier([out] long *pMin,[out] long *pMax,[out] long *pSteppingDelta,[out] long *pDefault,[out] long *pCapsFlag)
HRESULT None None.AllocateForPostView([in] WORD wStreamNum,[in] DWORD cbBuffer,[out] INSSBuffer **ppBuffer,[in] void *pvContext)
HRESULT None None.getRange_DigitalMultiplier([out] long *pMin,[out] long *pMax,[out] long *pSteppingDelta,[out] long *pDefault,[out] long *pCapsFlag)
PTSTR None shlwapi.StrCat(_Inout_ PTSTR psz1,_In_ PCTSTR psz2)
PTSTR None shlwapi.StrCatW(_Inout_ PTSTR psz1,_In_ PCTSTR psz2)
HRESULT None None.put_BacklightCompensation([in] long Value,[in] long Flags)
HRESULT None None.GetNextRegisteredDevice([out] IWMRegisteredDevice **ppDevice)
HRESULT None shlwapi.StrRetToBSTR(_Inout_ STRRET *pstr,_In_ PCUITEMID_CHILD pidl,_Out_ BSTR *pbstr)
HRESULT None shlwapi.StrRetToBSTR(_Inout_ STRRET *pstr,_In_ PCUITEMID_CHILD pidl,_Out_ BSTR *pbstr)
HRESULT None None.SetDisabled([in] REFCLSID clsid,[in] BOOL disabled)
HRESULT None None.put_FullScreenMode([in] long FullScreenMode)
PTSTR None shlwapi.StrChrI(_In_ PTSTR pszStart,TCHAR wMatch None)
PTSTR None shlwapi.StrChrIW(_In_ PTSTR pszStart,TCHAR wMatch None)
PTSTR None shlwapi.StrChrIA(_In_ PTSTR pszStart,TCHAR wMatch None)
PTSTR None shlwapi.StrCat(_Inout_ PTSTR psz1,_In_ PCTSTR psz2)
PTSTR None shlwapi.StrCatW(_Inout_ PTSTR psz1,_In_ PCTSTR psz2)
HRESULT None None.put_PrivacyMode([in] long Value,[in] long Flags)
HRESULT None None.getRange_DigitalMultiplier([out] long *pMin,[out] long *pMax,[out] long *pSteppingDelta,[out] long *pDefault,[out] long *pCapsFlag)
PTSTR None shlwapi.StrRChr(_In_ PTSTR pszStart,_In_opt_ PCTSTR pszEnd,TCHAR wMatch None)
PTSTR None shlwapi.StrRChrW(_In_ PTSTR pszStart,_In_opt_ PCTSTR pszEnd,TCHAR wMatch None)
PTSTR None shlwapi.StrRChrA(_In_ PTSTR pszStart,_In_opt_ PCTSTR pszEnd,TCHAR wMatch None)
HRESULT None None.GetProxyPort([in] LPCWSTR pwszProtocol,[out] DWORD *pdwPort)
HRESULT None None.ShutdownProxyContext([in] DWORD dwProxyContext)
HRESULT None None.getRange_DigitalMultiplier([out] long *pMin,[out] long *pMax,[out] long *pSteppingDelta,[out] long *pDefault,[out] long *pCapsFlag)
HRESULT None None.GetBufferingTime([out] QWORD *pcnsBufferingTime)
PTSTR None shlwapi.StrChr(_In_ PTSTR pszStart,TCHAR wMatch None)
PTSTR None shlwapi.StrChrW(_In_ PTSTR pszStart,TCHAR wMatch None)
PTSTR None shlwapi.StrChrA(_In_ PTSTR pszStart,TCHAR wMatch None)
int None shlwapi.StrCmpNI(_In_ PCTSTR psz1,_In_ PCTSTR psz2,_In_ int nChar)
int None shlwapi.StrCmpNIW(_In_ PCTSTR psz1,_In_ PCTSTR psz2,_In_ int nChar)
int None shlwapi.StrCmpNIA(_In_ PCTSTR psz1,_In_ PCTSTR psz2,_In_ int nChar)
PTSTR None shlwapi.StrChr(_In_ PTSTR pszStart,TCHAR wMatch None)
PTSTR None shlwapi.StrChrW(_In_ PTSTR pszStart,TCHAR wMatch None)
PTSTR None shlwapi.StrChrA(_In_ PTSTR pszStart,TCHAR wMatch None)
HRESULT None None.getRange_DigitalMultiplier([out] long *pMin,[out] long *pMax,[out] long *pSteppingDelta,[out] long *pDefault,[out] long *pCapsFlag)
HRESULT None None.AddLoggingUrl([in] LPCWSTR pwszUrl)
HRESULT None None.get_Gain([out] long *pValue,[out] long *pFlags)
BOOL None shlwapi.IntlStrEqWorker(_In_ BOOL fCaseSens,_In_ LPCTSTR pszStr1,_In_ LPCTSTR pszStr2,_In_ int nChar)
BOOL None shlwapi.IntlStrEqWorkerW(_In_ BOOL fCaseSens,_In_ LPCTSTR pszStr1,_In_ LPCTSTR pszStr2,_In_ int nChar)
BOOL None shlwapi.IntlStrEqWorkerA(_In_ BOOL fCaseSens,_In_ LPCTSTR pszStr1,_In_ LPCTSTR pszStr2,_In_ int nChar)
HRESULT None None.WriteSample([in] DWORD dwInputNum,[in] QWORD cnsSampleTime,[in] DWORD dwFlags,[in] INSSBuffer *pSample)
int None shlwapi.StrCmpNI(_In_ PCTSTR psz1,_In_ PCTSTR psz2,_In_ int nChar)
int None shlwapi.StrCmpNIW(_In_ PCTSTR psz1,_In_ PCTSTR psz2,_In_ int nChar)
int None shlwapi.StrCmpNIA(_In_ PCTSTR psz1,_In_ PCTSTR psz2,_In_ int nChar)
HRESULT None None.getRange_Gamma([out] long *pMin,[out] long *pMax,[out] long *pSteppingDelta,[out] long *pDefault,[out] long *pCapsFlag)
HRESULT None None.GetProxyExceptionList([in] LPCWSTR pwszProtocol,[out] WCHAR *pwszExceptionList,[in None None,out] DWORD *pcchExceptionList)
HRESULT None None.AddLoggingUrl([in] LPCWSTR pwszUrl)
HRESULT None None.getRange_Focus([out] long *pMin,[out] long *pMax,[out] long *pSteppingDelta,[out] long *pDefault,[out] long *pCapsFlag)
int None shlwapi.wnsprintf(_Out_ PTSTR pszDest,_In_ int cchDest,_In_ PCTSTR pszFmt,_In_ ... None)
int None shlwapi.wnsprintfW(_Out_ PTSTR pszDest,_In_ int cchDest,_In_ PCTSTR pszFmt,_In_ ... None)
int None shlwapi.wnsprintfA(_Out_ PTSTR pszDest,_In_ int cchDest,_In_ PCTSTR pszFmt,_In_ ... None)
HRESULT None None.GetConnector([in] UINT nIndex,[out] IConnector **ppConnector)
HRESULT None None.GetProxyExceptionList([in] LPCWSTR pwszProtocol,[out] WCHAR *pwszExceptionList,[in None None,out] DWORD *pcchExceptionList)
BOOL None shlwapi.IntlStrEqWorker(_In_ BOOL fCaseSens,_In_ LPCTSTR pszStr1,_In_ LPCTSTR pszStr2,_In_ int nChar)
BOOL None shlwapi.IntlStrEqWorkerW(_In_ BOOL fCaseSens,_In_ LPCTSTR pszStr1,_In_ LPCTSTR pszStr2,_In_ int nChar)
BOOL None shlwapi.IntlStrEqWorkerA(_In_ BOOL fCaseSens,_In_ LPCTSTR pszStr1,_In_ LPCTSTR pszStr2,_In_ int nChar)
HRESULT None None.put_Sharpness([in] long Value,[in] long Flags)
HRESULT None None.put_Exposure([in] long Value,[in] long Flags)
HRESULT None None.GetProxyExceptionList([in] LPCWSTR pwszProtocol,[out] WCHAR *pwszExceptionList,[in None None,out] DWORD *pcchExceptionList)
int None shlwapi.wnsprintf(_Out_ PTSTR pszDest,_In_ int cchDest,_In_ PCTSTR pszFmt,_In_ ... None)
int None shlwapi.wnsprintfW(_Out_ PTSTR pszDest,_In_ int cchDest,_In_ PCTSTR pszFmt,_In_ ... None)
int None shlwapi.wnsprintfA(_Out_ PTSTR pszDest,_In_ int cchDest,_In_ PCTSTR pszFmt,_In_ ... None)
HRESULT None None.get_DigitalMultiplier([out] long *pValue,[out] long *pFlags)
PTSTR None shlwapi.StrDup(PCTSTR pszSrch None)
PTSTR None shlwapi.StrDupW(PCTSTR pszSrch None)
PTSTR None shlwapi.StrDupA(PCTSTR pszSrch None)
HRESULT None None.getRange_DigitalMultiplier([out] long *pMin,[out] long *pMax,[out] long *pSteppingDelta,[out] long *pDefault,[out] long *pCapsFlag)
HRESULT None None.getRange_IrisRelative([out] long *pMin,[out] long *pMax,[out] long *pSteppingDelta,[out] long *pDefault,[out] long *pCapsFlag)
PSTR None shlwapi.StrFormatByteSizeA(DWORD dw None,_Out_ PSTR pszBuf,UINT cchBuf None)
HRESULT None None.GetEnableTCP([out] BOOL *pfEnableTCP)
HRESULT None None.ConnectTo([in] IConnector *pConnectTo)
HRESULT None None.getRange_PanRelative([out] long *pMin,[out] long *pMax,[out] long *pSteppingDelta,[out] long *pDefault,[out] long *pCapsFlag)
PTSTR None shlwapi.StrDup(PCTSTR pszSrch None)
PTSTR None shlwapi.StrDupW(PCTSTR pszSrch None)
PTSTR None shlwapi.StrDupA(PCTSTR pszSrch None)
HRESULT None None.getRange_PanRelative([out] long *pMin,[out] long *pMax,[out] long *pSteppingDelta,[out] long *pDefault,[out] long *pCapsFlag)
HRESULT None None.getRange_PanRelative([out] long *pMin,[out] long *pMax,[out] long *pSteppingDelta,[out] long *pDefault,[out] long *pCapsFlag)
PSTR None shlwapi.StrFormatByteSizeA(DWORD dw None,_Out_ PSTR pszBuf,UINT cchBuf None)
int None shlwapi.StrSpn(_In_ PCTSTR psz,_In_ PCTSTR pszSet)
int None shlwapi.StrSpnW(_In_ PCTSTR psz,_In_ PCTSTR pszSet)
int None shlwapi.StrSpnA(_In_ PCTSTR psz,_In_ PCTSTR pszSet)
HRESULT None None.put_Width([in] long Width)
HRESULT None None.getRange_PanRelative([out] long *pMin,[out] long *pMax,[out] long *pSteppingDelta,[out] long *pDefault,[out] long *pCapsFlag)
HRESULT None None.getRange_PanRelative([out] long *pMin,[out] long *pMax,[out] long *pSteppingDelta,[out] long *pDefault,[out] long *pCapsFlag)
int None shlwapi.StrCmpLogicalW(_In_ PCWSTR psz1,_In_ PCWSTR psz2)
int None shlwapi.StrCmpLogicalW(_In_ PCWSTR psz1,_In_ PCWSTR psz2)
HRESULT None None.AddLogParam([in] LPCWSTR wszNameSpace,[in] LPCWSTR wszName,[in] LPCWSTR wszValue)
HRESULT None None.GetType([out] GUID *pguidType)
HRESULT None None.IsClosed([out] BOOL *pfClosed)
HRESULT None None.get_ExposureRelative([out] long *pValue,[out] long *pFlags)
HRESULT None None.UseOverlayStretch(long UseOverlayStretch None)
HRESULT None None.SetPostViewCallback([in] IWMWriterPostViewCallback *pCallback,[in] void *pvContext)
HRESULT None None.GetNativeVideoSize([out] LONG *lpWidth,[out] LONG *lpHeight,[out] LONG *lpARWidth,[out] LONG *lpARHeight)
HRESULT None None.getRange_ZoomRelative([out] long *pMin,[out] long *pMax,[out] long *pSteppingDelta,[out] long *pDefault,[out] long *pCapsFlag)
PSTR None shlwapi.StrFormatByteSize64(LONGLONG qdw None,_Out_ PSTR pszBuf,UINT cchBuf None)
PSTR None shlwapi.StrFormatByteSize64A(LONGLONG qdw None,_Out_ PSTR pszBuf,UINT cchBuf None)
BOOL None shlwapi.StrToIntEx(_In_ PCTSTR pszString,STIF_FLAGS dwFlags None,_Out_ int *piRet)
BOOL None shlwapi.StrToIntExW(_In_ PCTSTR pszString,STIF_FLAGS dwFlags None,_Out_ int *piRet)
BOOL None shlwapi.StrToIntExA(_In_ PCTSTR pszString,STIF_FLAGS dwFlags None,_Out_ int *piRet)
HRESULT None None.GetTimecodeRangeCount([in] WORD wStreamNum,[out] WORD *pwRangeCount)
HRESULT None None.IsAudioStreamEnabled([in] ULONG ulStreamNum,[out] BOOL *pbEnabled)
HRESULT None None.GetPhysicalType([out] long *pType,[out] LPOLESTR *ppszType)
HRESULT None None.GetAttributeByIndexEx([in] WORD wStreamNum,[in] WORD wIndex,[out] LPWSTR pwszName,[in None None,out] WORD *pwNameLen,[out] WMT_ATTR_DATATYPE *pType,[out] WORD *pwLangIndex,[out] BYTE *pValue,[in None None,out] DWORD *pdwDataLength)
PTSTR None shlwapi.StrFormatKBSize(LONGLONG qdw None,_Out_ PTSTR pszBuf,UINT cchBuf None)
PTSTR None shlwapi.StrFormatKBSizeW(LONGLONG qdw None,_Out_ PTSTR pszBuf,UINT cchBuf None)
PTSTR None shlwapi.StrFormatKBSizeA(LONGLONG qdw None,_Out_ PTSTR pszBuf,UINT cchBuf None)
PSTR None shlwapi.StrFormatByteSize64(LONGLONG qdw None,_Out_ PSTR pszBuf,UINT cchBuf None)
PSTR None shlwapi.StrFormatByteSize64A(LONGLONG qdw None,_Out_ PSTR pszBuf,UINT cchBuf None)
HRESULT None None.SetWMDRMNetEncryption([in] BOOL fSamplesEncrypted,[in] BYTE *pbKeyID,[in] DWORD cbKeyID)
HRESULT None None.SetAllocateForStream([in] WORD wStreamNum,[in] BOOL fAllocate)
HRESULT None None.SetDDrawDevice([in] LPDIRECTDRAW7 lpDirectDrawDevice,[in] HMONITOR hMonitor)
HRESULT None None.GetLoggingUrl([in] DWORD dwIndex,[out] LPWSTR pwszUrl,[in None None,out] DWORD *pcchUrl)
HRESULT None None.put_IrisRelative([in] long Value,[in] long Flags)
HRESULT None None.GetClipList([out] RECT *pSourceRect,[in] RECT *pDestinationRect,[out] RGNDATA **ppRgnData)
HRESULT None None.CancelDefaultHandling(long lEvCode None)
int None shlwapi.StrSpn(_In_ PCTSTR psz,_In_ PCTSTR pszSet)
int None shlwapi.StrSpnW(_In_ PCTSTR psz,_In_ PCTSTR pszSet)
int None shlwapi.StrSpnA(_In_ PCTSTR psz,_In_ PCTSTR pszSet)
VOID None None.StreamClassStreamNotification(_In_ STREAM_MINIDRIVER_STREAM_NOTIFICATION_TYPE NotificationType,_In_ PHW_STREAM_OBJECT StreamObject,PHW_STREAM_REQUEST_BLOCK pSrb None,PKSEVENT_ENTRY EventEntry None,GUID *EventSet None,ULONG EventId None)
HRESULT None None.get_Gamma([out] long *pValue,[out] long *pFlags)
HRESULT None None.get_Gamma([out] long *pValue,[out] long *pFlags)
HRESULT None None.GetControlInterface([in] UINT nIndex,[out] IControlInterface **ppFunction)
HRESULT None None.get_Gamma([out] long *pValue,[out] long *pFlags)
HRESULT None None.GetPostViewFormatCount([in] WORD wStreamNumber,[out] DWORD *pcFormats)
HRESULT None None.DeleteCredentials([in] BSTR bstrRealm)
HRESULT None None.SetForceRerunAutoProxyDetection([in] BOOL fForceRerunDetection)
HRESULT None None.get_Gamma([out] long *pValue,[out] long *pFlags)
HRESULT None None.IsWmdrmCompliant([out] BOOL *pfCompliant)
HRESULT None None.SetUDPPortRanges([in] WM_PORT_NUMBER_RANGE *pRangeArray,[in] DWORD cRanges)
HRESULT None None.GetSystemProfileVersion(WMT_VERSION *pdwVersion None)
int None shlwapi.StrToInt(_In_ PCTSTR pszSrc)
int None shlwapi.StrToIntW(_In_ PCTSTR pszSrc)
int None shlwapi.StrToIntA(_In_ PCTSTR pszSrc)
HRESULT None None.SetUDPPortRanges([in] WM_PORT_NUMBER_RANGE *pRangeArray,[in] DWORD cRanges)
HRESULT None None.GetDefaultColorKey([out] COLORKEY *pColorKey)
HRESULT None None.AllocateForOutput([in] DWORD dwOutputNum,[in] DWORD cbBuffer,[out] INSSBuffer **ppBuffer,[in] void *pvContext)
HRESULT None None.getRange_PanRelative([out] long *pMin,[out] long *pMax,[out] long *pSteppingDelta,[out] long *pDefault,[out] long *pCapsFlag)
HRESULT None None.GetProxyPort([in] LPCWSTR pwszProtocol,[out] DWORD *pdwPort)
HRESULT None None.UnregisterFilterInstance([in] CLSID MRId)
HRESULT None None.get_Gamma([out] long *pValue,[out] long *pFlags)
int None shlwapi.StrCmpLogicalW(_In_ PCWSTR psz1,_In_ PCWSTR psz2)
int None shlwapi.StrCmpLogicalW(_In_ PCWSTR psz1,_In_ PCWSTR psz2)
HRESULT None None.get_ZoomRelative([out] long *pValue,[out] long *pFlags)
HRESULT None None.get_Gamma([out] long *pValue,[out] long *pFlags)
int None shlwapi.StrToInt(_In_ PCTSTR pszSrc)
int None shlwapi.StrToIntW(_In_ PCTSTR pszSrc)
int None shlwapi.StrToIntA(_In_ PCTSTR pszSrc)
int None shlwapi.StrCmpIC(_In_ LPCTSTR lpStr1,_In_ LPCTSTR lpStr2)
int None shlwapi.StrCmpICW(_In_ LPCTSTR lpStr1,_In_ LPCTSTR lpStr2)
int None shlwapi.StrCmpICA(_In_ LPCTSTR lpStr1,_In_ LPCTSTR lpStr2)
HRESULT None None.EnumPartsIncoming([out] IPartsList **ppParts)
HRESULT None None.SetUDPPortRanges([in] WM_PORT_NUMBER_RANGE *pRangeArray,[in] DWORD cRanges)
BOOL None None.IsDigitalEndpoint(IMMDevice *pDevice None)
HRESULT None None.get_Gamma([out] long *pValue,[out] long *pFlags)
HRESULT None None.getRange_Brightness([out] long *pMin,[out] long *pMax,[out] long *pSteppingDelta,[out] long *pDefault,[out] long *pCapsFlag)
HRESULT None None.OnPostViewSample([in] WORD wStreamNumber,[in] QWORD cnsSampleTime,[in] QWORD cnsSampleDuration,[in] DWORD dwFlags,[in] INSSBuffer *pSample,[in] void *pvContext)
PTSTR None shlwapi.StrCpyN(_Out_ PTSTR pszDst,_In_ PCTSTR pszSrc,int cchMax None)
PTSTR None shlwapi.StrCpyNW(_Out_ PTSTR pszDst,_In_ PCTSTR pszSrc,int cchMax None)
HRESULT None None.AcquireCredentials([in] WCHAR *pwszRealm,[in] WCHAR *pwszSite,[in None None,out] WCHAR *pwszUser,[in] DWORD cchUser,[in None None,out] WCHAR *pwszPassword,[in] DWORD cchPassword,[in] HRESULT hrStatus,[in None None,out] DWORD *pdwFlags)
BOOL None shlwapi.IntlStrEqN(_In_ LPCTSTR pszStr1,_In_ LPCTSTR pszStr2,_In_ int nChar)
BOOL None shlwapi.IntlStrEqNW(_In_ LPCTSTR pszStr1,_In_ LPCTSTR pszStr2,_In_ int nChar)
BOOL None shlwapi.IntlStrEqNA(_In_ LPCTSTR pszStr1,_In_ LPCTSTR pszStr2,_In_ int nChar)
HRESULT None None.getRange_Brightness([out] long *pMin,[out] long *pMax,[out] long *pSteppingDelta,[out] long *pDefault,[out] long *pCapsFlag)
HRESULT None None.GetIID([out] GUID *pIID)
HRESULT None None.SetEnableMulticast([in] BOOL fEnableMulticast)
HRESULT None None.get_FullScreenMode([out] long *FullScreenMode)
HRESULT None None.put_AntiClogControl([in] long Enable)
HRESULT None None.ShutdownProxyContext([in] DWORD dwProxyContext)
HRESULT None None.GetProxyPort([in] LPCWSTR pwszProtocol,[out] DWORD *pdwPort)
HRESULT None None.getRange_ColorEnable([out] long *pMin,[out] long *pMax,[out] long *pSteppingDelta,[out] long *pDefault,[out] long *pCapsFlag)
HRESULT None None.get_Gamma([out] long *pValue,[out] long *pFlags)
PTSTR None shlwapi.StrStrI(_In_ PTSTR pszFirst,_In_ PCTSTR pszSrch)
PTSTR None shlwapi.StrStrIW(_In_ PTSTR pszFirst,_In_ PCTSTR pszSrch)
PTSTR None shlwapi.StrStrIA(_In_ PTSTR pszFirst,_In_ PCTSTR pszSrch)
HRESULT None None.put_StopTime([in] REFTIME llTime)
HRESULT None None.GetDataUnitExtension([in] WORD wDataUnitExtensionNumber,[out] GUID *pguidExtensionSystemID,[out] WORD *pcbExtensionDataSize,[out] BYTE *pbExtensionSystemInfo,[in None None,out] DWORD *pcbExtensionSystemInfo)
HRESULT None None.FindInputFormat(IWMWriter* pWriter None,DWORD dwInput None,GUID guidSubType None,IWMInputMediaProps** ppProps None)
HRESULT None None.GetNetSourceAdminInterface([in] LPCWSTR pszStreamName,[out] VARIANT *pVal)
HRESULT None None.WillUseFullScreen(long *UseWhenFullScreen None)
BOOL None shlwapi.StrIsIntlEqual(BOOL fCaseSens None,_In_ PCTSTR pszString1,_In_ PCTSTR pszString2,int nChar None)
BOOL None shlwapi.StrIsIntlEqualW(BOOL fCaseSens None,_In_ PCTSTR pszString1,_In_ PCTSTR pszString2,int nChar None)
BOOL None shlwapi.StrIsIntlEqualA(BOOL fCaseSens None,_In_ PCTSTR pszString1,_In_ PCTSTR pszString2,int nChar None)
HRESULT None None.GetMinIdealImageSize([out] long *pWidth,[out] long *pHeight)
HRESULT None None.GetStreamsForRecord([in] WORD wRecordNumber,[out] WORD *pwStreamNumArray,[in None None,out] WORD *pcStreams)
BOOL None shlwapi.StrTrim(_Inout_ PTSTR psz,_In_ PCTSTR pszTrimChars)
BOOL None shlwapi.StrTrimW(_Inout_ PTSTR psz,_In_ PCTSTR pszTrimChars)
BOOL None shlwapi.StrTrimA(_Inout_ PTSTR psz,_In_ PCTSTR pszTrimChars)
HRESULT None None.get_ExposureRelative([out] long *pValue,[out] long *pFlags)
PWSTR None shlwapi.StrChrNIW(_In_ PCWSTR pszStart,WCHAR wMatch None,UINT cchMax None)
HRESULT None None.GetMaxDynamicObjectCount([out] UINT32 *value)
VOID None None.StreamClassStreamNotification(_In_ STREAM_MINIDRIVER_STREAM_NOTIFICATION_TYPE NotificationType,_In_ PHW_STREAM_OBJECT StreamObject,PHW_STREAM_REQUEST_BLOCK pSrb None,PKSEVENT_ENTRY EventEntry None,GUID *EventSet None,ULONG EventId None)
HRESULT None None.GetMaxSpeedFactor([out] double *pdblFactor)
HRESULT None None.GetProxyHostName([in] LPCWSTR pwszProtocol,[out] WCHAR *pwszHostName,[in None None,out] DWORD *pcchHostName)
HRESULT None None.RegisterControlChangeCallback([in] REFGUID riid,[in] IControlChangeNotify *pNotify)
HRESULT None None.SetReceiveStreamSamples([in] WORD wStreamNum,[in] BOOL fReceiveStreamSamples)
HRESULT None None.GetProxySettings([in] LPCWSTR pwszProtocol,[out] WMT_PROXY_SETTINGS *pProxySetting)
HRESULT None None.UseWhenFullScreen(long UseWhenFullScreen None)
HRESULT None None.GetProxyHostName([in] LPCWSTR pwszProtocol,[out] WCHAR *pwszHostName,[in None None,out] DWORD *pcchHostName)
HRESULT None None.ConnectTo([in] IConnector *pConnectTo)
HRESULT None None.PreProcess(IWMWriter* pWriter None,DWORD dwInputNum None)
HRESULT None None.Approve([in] BOOL fApprove)
PWSTR None shlwapi.StrChrNIW(_In_ PCWSTR pszStart,WCHAR wMatch None,UINT cchMax None)
HRESULT None None.GetPinCategory(IPin *pPin None,GUID *pPinCategory None)
HRESULT None None.GetWindowHandle([out] HWND *pHwnd)
HRESULT None None.GetBackgroundColor(DWORD *pdwPhysColor None)
HRESULT None None.GetMenuLanguages([out] LCID *pLanguages,[in] ULONG ulMaxLanguages,[out] ULONG *puActualLanguages)
HRESULT None None.get_PowerlineFrequency([out] long *pValue,[out] long *pFlags)
HRESULT None None.RenderFile([in] LPCWSTR lpwstrFile,[in] LPCWSTR lpwstrPlayList)
HRESULT None None.GetPartType([out] PartType *pPartType)
HRESULT None None.AllocateForPostView([in] WORD wStreamNum,[in] DWORD cbBuffer,[out] INSSBuffer **ppBuffer,[in] void *pvContext)
HRESULT None None.GetTimecodeRangeBounds([in] WORD wStreamNum,[in] WORD wRangeNum,[out] DWORD *pStartTimecode,[out] DWORD *pEndTimecode)
HRESULT None None.GetBandwidthSharing([in] DWORD dwBSIndex,[out] IWMBandwidthSharing **ppBS)
HRESULT None None.GetAttributeByIndexEx([in] WORD wStreamNum,[in] WORD wIndex,[out] LPWSTR pwszName,[in None None,out] WORD *pwNameLen,[out] WMT_ATTR_DATATYPE *pType,[out] WORD *pwLangIndex,[out] BYTE *pValue,[in None None,out] DWORD *pdwDataLength)
BOOL None shlwapi.IsCharSpace(_In_ TCHAR wch)
BOOL None shlwapi.IsCharSpaceW(_In_ TCHAR wch)
BOOL None shlwapi.IsCharSpaceA(_In_ TCHAR wch)
HRESULT None None.GetStorageFormat([out] WMT_STORAGE_FORMAT *pnStorageFormat)
HRESULT None None.ChangeDDrawDevice([in] LPDIRECTDRAW7 lpDirectDrawDevice,[in] HMONITOR hMonitor)
HRESULT None None.GetEventHandle([out] OAEVENT *hEvent)
HRESULT None None.GetCredentialsEx2([in] BSTR bstrRealm,[in] BSTR bstrUrl,[in] BOOL fProxy,[in] BOOL fClearTextAuthentication,[out] NETSOURCE_URLCREDPOLICY_SETTINGS *pdwUrlPolicy,[out] BSTR *pbstrName,[out] BSTR *pbstrPassword,[out] BOOL *pfConfirmedGood)
HRESULT None None.GetSystemProfileVersion(WMT_VERSION *pdwVersion None)
HRESULT None None.RemoveStreamForRecord([in] WORD wRecordNumber,[in] WORD wStreamNumber)
HRESULT None None.SetNumPreprocessingPasses([in] DWORD dwInputNum,[in] DWORD dwFlags,[in] DWORD dwNumPasses)
HRESULT None None.GetSignalPath([in] IPart *pIPartFrom,[in] IPart *pIPartTo,[in] BOOL bRejectMixedPaths,[out] IPartsList **ppParts)
int None shlwapi.StrCmp(_In_ PCTSTR psz1,_In_ PCTSTR psz2)
int None shlwapi.StrCmpW(_In_ PCTSTR psz1,_In_ PCTSTR psz2)
HRESULT None None.SetInputProps([in] DWORD dwInputNum,[in] IWMInputMediaProps *pInput)
HRESULT None None.Activate([in] DWORD dwClsContext,[in] REFIID refiid,[out] void **ppvObject)
int None shlwapi.StrCmpN(_In_ PCTSTR psz1,_In_ PCTSTR psz2,_In_ int nChar)
int None shlwapi.StrCmpNW(_In_ PCTSTR psz1,_In_ PCTSTR psz2,_In_ int nChar)
int None shlwapi.StrCmpNA(_In_ PCTSTR psz1,_In_ PCTSTR psz2,_In_ int nChar)
HRESULT None None.CancelDefaultHandling(long lEvCode None)
HRESULT None None.put_Saturation([in] long Value,[in] long Flags)
DWORD None shlwapi.StrCatChainW(_Out_ PWSTR pszDst,DWORD cchDst None,DWORD ichAt None,_In_ PCWSTR pszSrc)
DWORD None shlwapi.StrCatChainW(_Out_ PWSTR pszDst,DWORD cchDst None,DWORD ichAt None,_In_ PCWSTR pszSrc)
HRESULT None None.put_PanTilt([in] long PanValue,[in] long TiltValue,[in] long Flags)
HRESULT None None.GetDataUnitExtension([in] WORD wDataUnitExtensionNumber,[out] GUID *pguidExtensionSystemID,[out] WORD *pcbExtensionDataSize,[out] BYTE *pbExtensionSystemInfo,[in None None,out] DWORD *pcbExtensionSystemInfo)
HRESULT None None.SetEnableUDP([in] BOOL fEnableUDP)
HRESULT None None.AddCodecInfo([in] WCHAR *pwszName,[in] WCHAR *pwszDescription,[in] WMT_CODEC_INFO_TYPE codecType,[in] WORD cbCodecInfo,[in] BYTE *pbCodecInfo)
HRESULT None None.GetFileSize([out] QWORD *pcbFile)
HRESULT None None.ForwardScan([in] double dwSpeed)
int None shlwapi.wvnsprintf(_Out_ PTSTR pszDest,_In_ int cchDest,_In_ PCTSTR pszFmt,_In_ va_list arglist)
int None shlwapi.wvnsprintfW(_Out_ PTSTR pszDest,_In_ int cchDest,_In_ PCTSTR pszFmt,_In_ va_list arglist)
int None shlwapi.wvnsprintfA(_Out_ PTSTR pszDest,_In_ int cchDest,_In_ PCTSTR pszFmt,_In_ va_list arglist)
HRESULT None None.GetEnableMulticast([out] BOOL *pfEnableMulticast)
PWSTR None shlwapi.StrFormatByteSizeW(LONGLONG qdw None,_Out_ PWSTR pszBuf,UINT cchBuf None)
PWSTR None shlwapi.StrFormatByteSizeW(LONGLONG qdw None,_Out_ PWSTR pszBuf,UINT cchBuf None)
HRESULT None None.SetRangeByFrame([in] WORD wStreamNum,[in] QWORD qwFrameNumber,[in] LONGLONG cFramesToRead)
HRESULT None None.SetStorageFormat([in] WMT_STORAGE_FORMAT nStorageFormat)
HRESULT None None.put_ColorEnable([in] long Value,[in] long Flags)
HRESULT None None.WillUseFullScreen(long *UseWhenFullScreen None)
HRESULT None wmvcore.WMCreateCertificate(_Out_ IUnknown **pUnkCert)
HRESULT None None.GetMaxStreamSampleSize([in] WORD wStream,[out] DWORD *pcbMax)
HRESULT None None.SetProxyPort([in] LPCWSTR pwszProtocol,[in] DWORD dwPort)
HRESULT None None.GetEnableHTTP([out] BOOL *pfEnableHTTP)
HRESULT None None.put_WhiteBalanceComponent([in] long Value1,[in] long Value2,[in] long Flags)
HRESULT None None.GetBandwidthSharing([in] DWORD dwBSIndex,[out] IWMBandwidthSharing **ppBS)
HRESULT None None.SetProxySettings([in] LPCWSTR pwszProtocol,[in] WMT_PROXY_SETTINGS ProxySetting)
HRESULT None shlwapi.StrRetToBuf(_Inout_ STRRET *pstr,_In_ PCUITEMID_CHILD pidl,_Out_ LPTSTR pszBuf,_In_ UINT cchBuf)
HRESULT None shlwapi.StrRetToBufW(_Inout_ STRRET *pstr,_In_ PCUITEMID_CHILD pidl,_Out_ LPTSTR pszBuf,_In_ UINT cchBuf)
HRESULT None shlwapi.StrRetToBufA(_Inout_ STRRET *pstr,_In_ PCUITEMID_CHILD pidl,_Out_ LPTSTR pszBuf,_In_ UINT cchBuf)
HRESULT None None.SetProxyHostName([in] LPCWSTR pwszProtocol,[in] LPCWSTR pwszHostName)
HRESULT None None.getRange_Zoom([out] long *pMin,[out] long *pMax,[out] long *pSteppingDelta,[out] long *pDefault,[out] long *pCapsFlag)
HRESULT None None.GetForceRerunAutoProxyDetection([out] BOOL *pfForceRerunDetection)
HRESULT None None.SetEnableTCP([in] BOOL fEnableTCP)
HRESULT None None.GetConnectionBandwidth([out] DWORD *pdwConnectionBandwidth)
int None shlwapi.StrCmpC(_Out_ LPCTSTR lpStr1,_Out_ LPCTSTR lpStr2)
int None shlwapi.StrCmpCW(_Out_ LPCTSTR lpStr1,_Out_ LPCTSTR lpStr2)
int None shlwapi.StrCmpCA(_Out_ LPCTSTR lpStr1,_Out_ LPCTSTR lpStr2)
PTSTR None shlwapi.StrRStrI(_In_ PTSTR pszSource,_In_opt_ PCTSTR pszLast,_In_ PCTSTR pszSrch)
PTSTR None shlwapi.StrRStrIW(_In_ PTSTR pszSource,_In_opt_ PCTSTR pszLast,_In_ PCTSTR pszSrch)
PTSTR None shlwapi.StrRStrIA(_In_ PTSTR pszSource,_In_opt_ PCTSTR pszLast,_In_ PCTSTR pszSrch)
int None shlwapi.StrCSpnI(_In_ PCTSTR pszStr,_In_ PCTSTR pszSet)
int None shlwapi.StrCSpnIW(_In_ PCTSTR pszStr,_In_ PCTSTR pszSet)
int None shlwapi.StrCSpnIA(_In_ PCTSTR pszStr,_In_ PCTSTR pszSet)
HRESULT None None.GetMinIdealVideoSize([out] LONG *lpWidth,[out] LONG *lpHeight)
HRESULT None None.SetEnableUDP([in] BOOL fEnableUDP)
HRESULT None None.SetProxyExceptionList([in] LPCWSTR pwszProtocol,[in] LPCWSTR pwszExceptionList)
HRESULT None None.AcquireCredentials([in] WCHAR *pwszRealm,[in] WCHAR *pwszSite,[in None None,out] WCHAR *pwszUser,[in] DWORD cchUser,[in None None,out] WCHAR *pwszPassword,[in] DWORD cchPassword,[in] HRESULT hrStatus,[in None None,out] DWORD *pdwFlags)
BOOL None shell32.StrRetToStrN(_Out_ LPTSTR pszOut,_In_ UINT cchOut,_Inout_ LPSTRRET pStrRet,_In_ LPCITEMIDLIST pidl)
HRESULT None None.WriteStreamSample([in] WORD wStreamNum,[in] QWORD cnsSampleTime,[in] DWORD msSampleSendTime,[in] QWORD cnsSampleDuration,[in] DWORD dwFlags,[in] INSSBuffer *pSample)
HRESULT None None.put_PowerlineFrequency([in] long Value,[in] long Flags)
BOOL None shlwapi.IntlStrEqNI(_In_ LPCTSTR pszStr1,_In_ LPCTSTR pszStr2,_In_ int nChar)
BOOL None shlwapi.IntlStrEqNIW(_In_ LPCTSTR pszStr1,_In_ LPCTSTR pszStr2,_In_ int nChar)
BOOL None shlwapi.IntlStrEqNIA(_In_ LPCTSTR pszStr1,_In_ LPCTSTR pszStr2,_In_ int nChar)
HRESULT None shlwapi.StrFormatByteSizeEx(ULONGLONG ull None,SFBS_FLAGS flags None,_Out_ PWSTR pszBuf,UINT cchBuf None)
PTSTR None shlwapi.StrCatBuff(_Inout_ PTSTR pszDest,_In_ PCTSTR pszSrc,int cchDestBuffSize None)
PTSTR None shlwapi.StrCatBuffW(_Inout_ PTSTR pszDest,_In_ PCTSTR pszSrc,int cchDestBuffSize None)
PTSTR None shlwapi.StrCatBuffA(_Inout_ PTSTR pszDest,_In_ PCTSTR pszSrc,int cchDestBuffSize None)
HRESULT None None.EndPreprocessingPass([in] DWORD dwInputNum,[in] DWORD dwFlags)
HRESULT STDMETHODCALLTYPE None.WMCreateDRMTranscryptionManager(IWMDRMTranscryptionManager ppTranscryptionManager None)
HRESULT None None.SetProfileByID([in] REFGUID guidProfile)
HRESULT None None.getRange_PanRelative([out] long *pMin,[out] long *pMax,[out] long *pSteppingDelta,[out] long *pDefault,[out] long *pCapsFlag)
HRESULT None None.SetConnectionBandwidth([in] DWORD dwConnectionBandwidth)
bool None None.IsDXVASubtype(AM_MEDIA_TYPE * pmt)
HRESULT None None.GetProperty([in] GUID guidBufferProperty,[out] void *pvBufferProperty,[in None None,out] DWORD *pdwBufferPropertySize)
HRESULT None None.SelectDefaultSubpictureLanguage([in] LCID Language,[in] DVD_SUBPICTURE_LANG_EXT subpictureExtension)
public void None.OverrideToMatch(IEnumerableResourceQualifier result None)
HRESULT None None.RestoreLicenses([in] DWORD dwFlags,[in] IWMStatusCallback *pCallback)
PTSTR None shlwapi.StrPBrk(_In_ PTSTR psz,_In_ PCTSTR pszSet)
PTSTR None shlwapi.StrPBrkW(_In_ PTSTR psz,_In_ PCTSTR pszSet)
PTSTR None shlwapi.StrPBrkA(_In_ PTSTR psz,_In_ PCTSTR pszSet)
HRESULT None None.CanSeekBackward([out] LONG *pCanSeekBackward)
HRESULT None None.Skip([in] ULONG celt)
HRESULT None None.getRange_Zoom([out] long *pMin,[out] long *pMax,[out] long *pSteppingDelta,[out] long *pDefault,[out] long *pCapsFlag)
HRESULT None None.GetDataUnitExtensionCount([out] WORD *pcDataUnitExtensions)
HRESULT None None.GetDeviceCertificate([out] INSSBuffer **ppCertificate)
int None shlwapi.StrCmpNIC(_In_ LPCTSTR pszStr1,_In_ LPCTSTR pszStr2,int nChar None)
int None shlwapi.StrCmpNICW(_In_ LPCTSTR pszStr1,_In_ LPCTSTR pszStr2,int nChar None)
int None shlwapi.StrCmpNICA(_In_ LPCTSTR pszStr1,_In_ LPCTSTR pszStr2,int nChar None)
HRESULT None None.SetFiltergraph([in] IGraphBuilder *pfg)
PTSTR None shlwapi.StrCpy(_Out_ PTSTR psz1,_In_ PCTSTR psz2)
PTSTR None shlwapi.StrCpyW(_Out_ PTSTR psz1,_In_ PCTSTR psz2)
HRESULT None None.RemoveMarker([in] WORD wIndex)
HRESULT None None.KaraokeAudioPresentationModeChange([in] ULONG ulMode)
BOOL None shlwapi.StrIsIntlEqual(BOOL fCaseSens None,_In_ PCTSTR pszString1,_In_ PCTSTR pszString2,int nChar None)
BOOL None shlwapi.StrIsIntlEqualW(BOOL fCaseSens None,_In_ PCTSTR pszString1,_In_ PCTSTR pszString2,int nChar None)
BOOL None shlwapi.StrIsIntlEqualA(BOOL fCaseSens None,_In_ PCTSTR pszString1,_In_ PCTSTR pszString2,int nChar None)
HRESULT None None.GetUDPPortRanges([out] WM_PORT_NUMBER_RANGE *pRangeArray,[in None None,out] DWORD *pcRanges)
int None shlwapi.StrToInt(_In_ PCTSTR pszSrc)
int None shlwapi.StrToIntW(_In_ PCTSTR pszSrc)
int None shlwapi.StrToIntA(_In_ PCTSTR pszSrc)
HRESULT None None.TimePlay(ULONG uiTitle None,ULONG bcdTime None)
HRESULT None None.getRange_Contrast([out] long *pMin,[out] long *pMax,[out] long *pSteppingDelta,[out] long *pDefault,[out] long *pCapsFlag)
HRESULT None None.MenuLanguageSelect(LCID LanguageCode None)
HRESULT None None.ParseLicenseRequestMsg([in] BYTE *pbLicenseRequestMsg,[in] DWORD cbLicenseRequestMsg,[out] INSSBuffer **ppDeviceCert,[out] DRM_VAL16 *pDeviceSerialNumber,[out] BSTR *pbstrAction)
HRESULT None None.MenuCall([in] DVD_MENU_ID MenuID)
PTSTR None shlwapi.StrCat(_Inout_ PTSTR psz1,_In_ PCTSTR psz2)
PTSTR None shlwapi.StrCatW(_Inout_ PTSTR psz1,_In_ PCTSTR psz2)
HRESULT None None.GetFourCCCodes(DWORD *pCount None,DWORD *pCodes None)
HRESULT None None.AddStream([in] IWMStreamConfig *pConfig)
HRESULT None None.GetStreamNumberForOutput([in] DWORD dwOutput,[out] WORD *pwStreamNum)
HRESULT None None.AddScript([in] WCHAR *pwszType,[in] WCHAR *pwszCommand,[in] QWORD cnsScriptTime)
BOOL None shlwapi.ChrCmpI(_In_ TCHAR w1,_In_ TCHAR w2)
BOOL None shlwapi.ChrCmpIW(_In_ TCHAR w1,_In_ TCHAR w2)
BOOL None shlwapi.ChrCmpIA(_In_ TCHAR w1,_In_ TCHAR w2)
PTSTR None shlwapi.StrNCat(_Inout_ PTSTR psz1,PCTSTR psz2 None,int cchMax None)
PTSTR None shlwapi.StrNCatW(_Inout_ PTSTR psz1,PCTSTR psz2 None,int cchMax None)
PTSTR None shlwapi.StrNCatA(_Inout_ PTSTR psz1,PCTSTR psz2 None,int cchMax None)
HRESULT None None.NotifyLateDelivery([in] QWORD cnsLateness)
HRESULT None None.GetTopologyObject([out] IDeviceTopology **ppTopology)
int None shlwapi.StrToInt(_In_ PCTSTR pszSrc)
int None shlwapi.StrToIntW(_In_ PCTSTR pszSrc)
int None shlwapi.StrToIntA(_In_ PCTSTR pszSrc)
HRESULT None shlwapi.StrRetToBSTR(_Inout_ STRRET *pstr,_In_ PCUITEMID_CHILD pidl,_Out_ BSTR *pbstr)
HRESULT None None.AllocateForStreamEx([in] WORD wStreamNum,[in] DWORD cbBuffer,[out] INSSBuffer **ppBuffer,[in] DWORD dwFlags,[in] QWORD cnsSampleTime,[in] QWORD cnsSampleDuration,[in] void *pvContext)
HRESULT None None.GetEnableTCP([out] BOOL *pfEnableTCP)
HRESULT None wmvcore.WMCreateWriter(_In_ IUnknown *pUnkReserved,_Out_ IWMWriter **ppWriter)
HRESULT None wmvcore.WMCreateWriter(_In_ IUnknown *pUnkReserved,_Out_ IWMWriter **ppWriter)
HRESULT None None.SetWMDRMNetEncryption([in] BOOL fSamplesEncrypted,[in] BYTE *pbKeyID,[in] DWORD cbKeyID)
PWSTR None shlwapi.StrChrNW(_In_ PWSTR pszStart,WCHAR wMatch None,UINT cchMax None)
HRESULT None None.put_Visible([in] long Visible)
HRESULT None None.SetRangeByFrame([in] WORD wStreamNum,[in] QWORD qwFrameNumber,[in] LONGLONG cFramesToRead)
HRESULT None None.TitlePlay(ULONG uiTitle None)
HRESULT None None.get_Gamma([out] long *pValue,[out] long *pFlags)
HRESULT None None.ButtonSelectAndActivate([in] ULONG uiButton)
HRESULT None shlwapi.SHStrDup(_In_ LPCTSTR pszSource,_Out_ LPTSTR *ppwsz)
HRESULT None shlwapi.SHStrDupW(_In_ LPCTSTR pszSource,_Out_ LPTSTR *ppwsz)
HRESULT None shlwapi.SHStrDupA(_In_ LPCTSTR pszSource,_Out_ LPTSTR *ppwsz)
BOOL None shlwapi.IsCharSpace(_In_ TCHAR wch)
BOOL None shlwapi.IsCharSpaceW(_In_ TCHAR wch)
BOOL None shlwapi.IsCharSpaceA(_In_ TCHAR wch)
HRESULT None None.put_Tilt([in] long Value,[in] long Flags)
HRESULT None None.GetDRMProperty([in] LPCWSTR pwstrName,[out] WMT_ATTR_DATATYPE *pdwType,[out] BYTE *pValue,[out] WORD *pcbLength)
HRESULT None None.GetSubunitCount([out] UINT *pCount)
BOOL None shlwapi.StrTrim(_Inout_ PTSTR psz,_In_ PCTSTR pszTrimChars)
BOOL None shlwapi.StrTrimW(_Inout_ PTSTR psz,_In_ PCTSTR pszTrimChars)
BOOL None shlwapi.StrTrimA(_Inout_ PTSTR psz,_In_ PCTSTR pszTrimChars)
HRESULT None None.CreateNewBandwidthSharing([out] IWMBandwidthSharing **ppBS)
HRESULT None None.SetEnableUDP([in] BOOL fEnableUDP)
HRESULT None None.SetProfileByID([in] REFGUID guidProfile)
HRESULT None None.TimeSearch(ULONG bcdTime None)
HRESULT None None.GetMinIdealVideoSize([out] LONG *lpWidth,[out] LONG *lpHeight)
HRESULT None None.MouseActivate([in] POINT point)
PTSTR None shlwapi.StrRChrI(_In_ PTSTR pszStart,_In_opt_ PCTSTR pszEnd,TCHAR wMatch None)
PTSTR None shlwapi.StrRChrIW(_In_ PTSTR pszStart,_In_opt_ PCTSTR pszEnd,TCHAR wMatch None)
PTSTR None shlwapi.StrRChrIA(_In_ PTSTR pszStart,_In_opt_ PCTSTR pszEnd,TCHAR wMatch None)
HRESULT None None.SetProxyPort([in] LPCWSTR pwszProtocol,[in] DWORD dwPort)
HRESULT None None.AddBandwidthSharing([in] IWMBandwidthSharing *pBS)
HRESULT None shlwapi.GetAcceptLanguages(_Out_ LPTSTR pszLanguages,_Inout_ DWORD *pcchLanguages)
HRESULT None shlwapi.GetAcceptLanguagesW(_Out_ LPTSTR pszLanguages,_Inout_ DWORD *pcchLanguages)
HRESULT None shlwapi.GetAcceptLanguagesA(_Out_ LPTSTR pszLanguages,_Inout_ DWORD *pcchLanguages)
int None shlwapi.StrCmpNC(_In_ LPCTSTR pszStr1,_In_ LPCTSTR pszStr2,int nChar None)
int None shlwapi.StrCmpNCW(_In_ LPCTSTR pszStr1,_In_ LPCTSTR pszStr2,int nChar None)
int None shlwapi.StrCmpNCA(_In_ LPCTSTR pszStr1,_In_ LPCTSTR pszStr2,int nChar None)
HRESULT None None.OnEvent([in] AMTVAudioEventType Event)
HRESULT None None.MouseSelect([in] POINT point)
HRESULT None None.SetRoot([in] LPCWSTR pszPath)
HRESULT None quartz.ParentalLevelSelect(ULONG ulParentalLevel None)
HRESULT None None.ParentalCountrySelect([in] WORD wCountry)
int None shlwapi.StrCmpNC(_In_ LPCTSTR pszStr1,_In_ LPCTSTR pszStr2,int nChar None)
int None shlwapi.StrCmpNCW(_In_ LPCTSTR pszStr1,_In_ LPCTSTR pszStr2,int nChar None)
int None shlwapi.StrCmpNCA(_In_ LPCTSTR pszStr1,_In_ LPCTSTR pszStr2,int nChar None)
HRESULT None None.GetAttributeIndices([in] WORD wStreamNum,[in] LPCWSTR pwszName,[in] WORD *pwLangIndex,[out] WORD *pwIndices,[in None None,out] WORD *pwCount)
int None shlwapi.wvnsprintf(_Out_ PTSTR pszDest,_In_ int cchDest,_In_ PCTSTR pszFmt,_In_ va_list arglist)
int None shlwapi.wvnsprintfW(_Out_ PTSTR pszDest,_In_ int cchDest,_In_ PCTSTR pszFmt,_In_ va_list arglist)
int None shlwapi.wvnsprintfA(_Out_ PTSTR pszDest,_In_ int cchDest,_In_ PCTSTR pszFmt,_In_ va_list arglist)
HRESULT None None.Start([in] QWORD cnsStartTime)
HRESULT None None.SubpictureStreamChange(ULONG nSubPicture None,BOOL bDisplay None)
HRESULT None None.MouseActivate([in] POINT point)
HRESULT None None.DeleteAttribute([in] WORD wStreamNum,[in] WORD wIndex)
HRESULT None shlwapi.GetAcceptLanguages(_Out_ LPTSTR pszLanguages,_Inout_ DWORD *pcchLanguages)
HRESULT None shlwapi.GetAcceptLanguagesW(_Out_ LPTSTR pszLanguages,_Inout_ DWORD *pcchLanguages)
HRESULT None shlwapi.GetAcceptLanguagesA(_Out_ LPTSTR pszLanguages,_Inout_ DWORD *pcchLanguages)
HRESULT None None.VideoModePreferrence([in] ULONG ulPreferredDisplayMode)
HRESULT None None.GetFileDuration([out] QWORD *pcnsDuration)
HRESULT None None.ForwardScan([in] double dwSpeed)
HRESULT None None.BuildGraph(IGraphBuilder *pGraph None,const WCHAR *wFileName)
HRESULT None None.GetTransportType([out] WMT_TRANSPORT_TYPE *pnTransportType)
HRESULT None None.GetAttributeCountEx([in] WORD wStreamNum,[out] WORD *pcAttributes)
PTSTR None shlwapi.StrRChrI(_In_ PTSTR pszStart,_In_opt_ PCTSTR pszEnd,TCHAR wMatch None)
PTSTR None shlwapi.StrRChrIW(_In_ PTSTR pszStart,_In_opt_ PCTSTR pszEnd,TCHAR wMatch None)
PTSTR None shlwapi.StrRChrIA(_In_ PTSTR pszStart,_In_opt_ PCTSTR pszEnd,TCHAR wMatch None)
HRESULT None None.StringCbVPrintf(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszFormat,_In_ va_list argList)
HRESULT None None.StringCbVPrintfW(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszFormat,_In_ va_list argList)
HRESULT None None.StringCbVPrintfA(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszFormat,_In_ va_list argList)
HRESULT None None.SetEnableUDP([in] BOOL fEnableUDP)
HRESULT None None.ChapterSearch(ULONG Chapter None)
HRESULT None None.AngleChange([in] ULONG ulAngle)
HRESULT None None.GetStreamNumberForOutput([in] DWORD dwOutput,[out] WORD *pwStreamNum)
HRESULT None None.IsStopped([out] BOOL *pfStopped)
HRESULT None None.AudioStreamChange([in] ULONG nAudio)
HRESULT None None.TimeSearch(ULONG bcdTime None)
HRESULT None None.GetLoggingUrlCount([out] DWORD *pdwUrlCount)
HRESULT None None.AddDataUnitExtension([in] GUID guidExtensionSystemID,[in] WORD cbExtensionDataSize,[in] BYTE *pbExtensionSystemInfo,[in] DWORD cbExtensionSystemInfo)
HRESULT None None.ChapterPlay([in] ULONG uiTitle,[in] ULONG uiChapter)
HRESULT None None.GetFileSize([out] QWORD *pcbFile)
HRESULT None None.AddStream([in] IWMStreamConfig *pConfig)
HRESULT None None.BackwardScan([in] double dwSpeed)
HRESULT None None.AddCodecInfo([in] WCHAR *pwszName,[in] WCHAR *pwszDescription,[in] WMT_CODEC_INFO_TYPE codecType,[in] WORD cbCodecInfo,[in] BYTE *pbCodecInfo)
HRESULT None None.SetTransportType([in] WMT_TRANSPORT_TYPE nTransportType)
HRESULT None None.ChapterPlayAutoStop([in] ULONG ulTitle,[in] ULONG ulChapter,[in] ULONG ulChaptersToPlay)
HRESULT None None.GetDevId([out] DWORD *pdwDevId)
HRESULT None None.SelectDefaultSubpictureLanguage([in] LCID Language,[in] DVD_SUBPICTURE_LANG_EXT subpictureExtension)
HRESULT None None.GetConnectionBandwidth([out] DWORD *pdwConnectionBandwidth)
HRESULT None None.RemoveBandwidthSharing([in] IWMBandwidthSharing *pBS)
HRESULT None None.GetFileDuration([out] QWORD *pcnsDuration)
HRESULT None None.Next([in] ULONG cFilters,[out] REGFILTER **apRegFilter,[out] ULONG *pcFetched)
HRESULT None None.RestoreLicenses([in] DWORD dwFlags,[in] IWMStatusCallback *pCallback)
HRESULT None None.ParseLicenseRequestMsg([in] BYTE *pbLicenseRequestMsg,[in] DWORD cbLicenseRequestMsg,[out] INSSBuffer **ppDeviceCert,[out] DRM_VAL16 *pDeviceSerialNumber,[out] BSTR *pbstrAction)
HRESULT None None.SetOutputProps([in] DWORD dwOutputNum,[in] IWMOutputMediaProps *pOutput)
HRESULT None None.GetCaps(DDCAPS *pCaps None)
HRESULT None None.SetSyncTolerance([in] DWORD msWindow)
HRESULT None None.AddFilter([in] IBaseFilter *pFilter,[in] LPCWSTR pName)
HRESULT None None.Clone([out] IEnumRegFilters **ppEnum)
HRESULT None None.OnEvent([in] AMTunerEventType Event)
HRESULT None None.GetInputSetting([in] DWORD dwInputNum,[in] LPCWSTR pszName,[out] WMT_ATTR_DATATYPE *pType,[out] BYTE *pValue,[in None None,out] WORD *pcbLength)
HRESULT None None.GetInputProps([in] DWORD dwInputNum,[out] IWMInputMediaProps **ppInput)
HRESULT None None.UnregisterControlChangeNotify([in] IAudioEndpointVolumeCallback *pNotify)
HRESULT None None.SetConnectionName([in] WCHAR *pwszInputName)
HRESULT None None.GetGlobalId([out] LPWSTR *ppwstrGlobalId)
HRESULT None None.GetWriterTime([out] QWORD *pcnsCurrentTime)
HRESULT STDMETHODCALLTYPE None.WMCreateSecureChannel_DES(IWMSecureChannel **ppChannel None)
HRESULT None None.SetRateToMostForward(IKsPropertySet *pIKsPropertySet None,double dRate None,REFERENCE_TIME *prtStartTime None)
HRESULT None quartz.ParentalLevelSelect(ULONG ulParentalLevel None)
HRESULT None None.StringCbCat(_Inout_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc)
HRESULT None None.StringCbCatW(_Inout_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc)
HRESULT None None.StringCbCatA(_Inout_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc)
HRESULT None None.GetDevMemoryObject([out] IUnknown **ppUnkInner,[in] IUnknown *pUnkOuter)
HRESULT None None.IsValid([out] BOOL *pfValid)
PTSTR None shlwapi.StrPBrk(_In_ PTSTR psz,_In_ PCTSTR pszSet)
PTSTR None shlwapi.StrPBrkW(_In_ PTSTR psz,_In_ PCTSTR pszSet)
PTSTR None shlwapi.StrPBrkA(_In_ PTSTR psz,_In_ PCTSTR pszSet)
HRESULT None None.GetOutputFormat([in] DWORD dwOutputNumber,[in] DWORD dwFormatNumber,[out] IWMOutputMediaProps **ppProps)
HRESULT None None.GetNamesForInputs(IWMWriter* pWriter None)
HRESULT None None.GetDefaultAudioEndpoint([in] EDataFlow dataFlow,[in] ERole role,[out] IMMDevice **ppDevice)
HRESULT None None.TimePlay(ULONG uiTitle None,ULONG bcdTime None)
HRESULT None None.GetForceRerunAutoProxyDetection([out] BOOL *pfForceRerunDetection)
HRESULT None None.GetCurrentImage([out] BYTE **lpDib)
HRESULT None None.SetStreamPrioritization([in] IWMStreamPrioritization *pSP)
HRESULT None None.GetExpectedPacketCount([in] QWORD msDuration,[out] QWORD *pcPackets)
PWSTR None shlwapi.StrChrNW(_In_ PWSTR pszStart,WCHAR wMatch None,UINT cchMax None)
HRESULT None None.StringCbVPrintf(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszFormat,_In_ va_list argList)
HRESULT None None.StringCbVPrintfW(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszFormat,_In_ va_list argList)
HRESULT None None.StringCbVPrintfA(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszFormat,_In_ va_list argList)
HRESULT None None.StringCchCopy(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc)
HRESULT None None.StringCchCopyW(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc)
HRESULT None None.StringCchCopyA(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc)
HRESULT None shlwapi.GetAcceptLanguages(_Out_ LPTSTR pszLanguages,_Inout_ DWORD *pcchLanguages)
HRESULT None shlwapi.GetAcceptLanguagesW(_Out_ LPTSTR pszLanguages,_Inout_ DWORD *pcchLanguages)
HRESULT None shlwapi.GetAcceptLanguagesA(_Out_ LPTSTR pszLanguages,_Inout_ DWORD *pcchLanguages)
HRESULT None None.GetWriterTime([out] QWORD *pcnsCurrentTime)
HRESULT None None.UnregisterEndpointNotificationCallback([in] IMMNotificationClient *pNotify)
BOOL None shlwapi.ChrCmpI(_In_ TCHAR w1,_In_ TCHAR w2)
BOOL None shlwapi.ChrCmpIW(_In_ TCHAR w1,_In_ TCHAR w2)
BOOL None shlwapi.ChrCmpIA(_In_ TCHAR w1,_In_ TCHAR w2)
HRESULT None None.GetCurrentImage([out] BYTE **lpDib)
HRESULT None None.GetConnectionName([out] WCHAR *pwszName,[in None None,out] WORD *pcchName)
HRESULT None None.StringCbLength(_In_ LPCTSTR psz,_In_ size_t cbMax,_Out_ size_t *pcb)
HRESULT None None.StringCbLengthW(_In_ LPCTSTR psz,_In_ size_t cbMax,_Out_ size_t *pcb)
HRESULT None None.StringCbLengthA(_In_ LPCTSTR psz,_In_ size_t cbMax,_Out_ size_t *pcb)
HRESULT None None.GetOutputFormat([in] DWORD dwOutputNumber,[in] DWORD dwFormatNumber,[out] IWMOutputMediaProps **ppProps)
HRESULT None None.StringCchLength(_In_ LPCTSTR psz,_In_ size_t cchMax,_Out_ size_t *pcch)
HRESULT None None.StringCchLengthW(_In_ LPCTSTR psz,_In_ size_t cchMax,_Out_ size_t *pcch)
HRESULT None None.StringCchLengthA(_In_ LPCTSTR psz,_In_ size_t cchMax,_Out_ size_t *pcch)
BOOL None shlwapi.IntlStrEqNI(_In_ LPCTSTR pszStr1,_In_ LPCTSTR pszStr2,_In_ int nChar)
BOOL None shlwapi.IntlStrEqNIW(_In_ LPCTSTR pszStr1,_In_ LPCTSTR pszStr2,_In_ int nChar)
BOOL None shlwapi.IntlStrEqNIA(_In_ LPCTSTR pszStr1,_In_ LPCTSTR pszStr2,_In_ int nChar)
HRESULT None shlwapi.StrRetToBuf(_Inout_ STRRET *pstr,_In_ PCUITEMID_CHILD pidl,_Out_ LPTSTR pszBuf,_In_ UINT cchBuf)
HRESULT None shlwapi.StrRetToBufW(_Inout_ STRRET *pstr,_In_ PCUITEMID_CHILD pidl,_Out_ LPTSTR pszBuf,_In_ UINT cchBuf)
HRESULT None shlwapi.StrRetToBufA(_Inout_ STRRET *pstr,_In_ PCUITEMID_CHILD pidl,_Out_ LPTSTR pszBuf,_In_ UINT cchBuf)
HRESULT None None.CreateEmptyProfile([in] WMT_VERSION dwVersion,[out] IWMProfile **ppProfile)
HRESULT None None.GetVolumeRange([out] float *pfLevelMinDB,[out] float *pfLevelMaxDB,[out] float *pfVolumeIncrementDB)
HRESULT None None.StringCchCopy(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc)
HRESULT None None.StringCchCopyW(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc)
HRESULT None None.StringCchCopyA(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc)
HRESULT None None.SetRoot([in] LPCWSTR pszPath)
HRESULT None None.StringCchGetsEx(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCchGetsExW(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCchGetsExA(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCchGets(_Out_ LPTSTR pszDest,_In_ size_t cchDest)
HRESULT None None.StringCchGetsW(_Out_ LPTSTR pszDest,_In_ size_t cchDest)
HRESULT None None.StringCchGetsA(_Out_ LPTSTR pszDest,_In_ size_t cchDest)
HRESULT None None.UnalignedStringCbLength(_In_ LPCTSTR psz,_In_ size_t cbMax,_Out_opt_ size_t *pcbLength)
HRESULT None None.UnalignedStringCbLengthW(_In_ LPCTSTR psz,_In_ size_t cbMax,_Out_opt_ size_t *pcbLength)
HRESULT None None.StringCbLengthA(_In_ LPCTSTR psz,_In_ size_t cbMax,_Out_opt_ size_t *pcbLength)
HRESULT None None.StringCchLength(_In_ LPCTSTR psz,_In_ size_t cchMax,_Out_ size_t *pcch)
HRESULT None None.StringCchLengthW(_In_ LPCTSTR psz,_In_ size_t cchMax,_Out_ size_t *pcch)
HRESULT None None.StringCchLengthA(_In_ LPCTSTR psz,_In_ size_t cchMax,_Out_ size_t *pcch)
HRESULT None None.StringCchCatNEx(_Inout_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_In_ size_t cchMaxAppend,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCchCatNExW(_Inout_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_In_ size_t cchMaxAppend,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCchCatNExA(_Inout_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_In_ size_t cchMaxAppend,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
HRESULT None None.GetCodecNames(IWMCodecInfo3* pCodecInfo None)
HRESULT None None.SaveProfile([in] IWMProfile *pProfile,[in] WCHAR *pwszProfile,[in None None,out] DWORD *pdwLength)
HRESULT None None.StringCbVPrintf_l(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ va_list argList)
HRESULT None None.StringCbVPrintf_lW(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ va_list argList)
HRESULT None None.StringCbVPrintf_lA(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ va_list argList)
HRESULT None None.StringCchGetsEx(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCchGetsExW(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCchGetsExA(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
int None None.feof(FILE *stream None)
HRESULT None None.StringCbVPrintf_l(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ va_list argList)
HRESULT None None.StringCbVPrintf_lW(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ va_list argList)
HRESULT None None.StringCbVPrintf_lA(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ va_list argList)
HRESULT None None.StringCbVPrintf_l(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ va_list argList)
HRESULT None None.StringCbVPrintf_lW(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ va_list argList)
HRESULT None None.StringCbVPrintf_lA(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ va_list argList)
HRESULT None None.StringCbVPrintf_l(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ va_list argList)
HRESULT None None.StringCbVPrintf_lW(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ va_list argList)
HRESULT None None.StringCbVPrintf_lA(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ va_list argList)
HRESULT None None.StringCbLength(_In_ LPCTSTR psz,_In_ size_t cbMax,_Out_ size_t *pcb)
HRESULT None None.StringCbLengthW(_In_ LPCTSTR psz,_In_ size_t cbMax,_Out_ size_t *pcb)
HRESULT None None.StringCbLengthA(_In_ LPCTSTR psz,_In_ size_t cbMax,_Out_ size_t *pcb)
HRESULT None None.UnalignedStringCbLength(_In_ LPCTSTR psz,_In_ size_t cbMax,_Out_opt_ size_t *pcbLength)
HRESULT None None.UnalignedStringCbLengthW(_In_ LPCTSTR psz,_In_ size_t cbMax,_Out_opt_ size_t *pcbLength)
HRESULT None None.StringCbLengthA(_In_ LPCTSTR psz,_In_ size_t cbMax,_Out_opt_ size_t *pcbLength)
HRESULT None None.StringCbVPrintf_l(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ va_list argList)
HRESULT None None.StringCbVPrintf_lW(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ va_list argList)
HRESULT None None.StringCbVPrintf_lA(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszFormat,_In_ _locale_t locale,_In_ va_list argList)
HRESULT None None.StringCchCat(_Inout_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc)
HRESULT None None.StringCchCatW(_Inout_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc)
HRESULT None None.StringCchCatA(_Inout_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc)
LPTSTR WINAPI user32.CharPrev(_In_ LPCTSTR lpszStart,_In_ LPCTSTR lpszCurrent)
LPTSTR WINAPI user32.CharPrevW(_In_ LPCTSTR lpszStart,_In_ LPCTSTR lpszCurrent)
LPTSTR WINAPI user32.CharPrevA(_In_ LPCTSTR lpszStart,_In_ LPCTSTR lpszCurrent)
HRESULT None None.StringCbGets(_Out_ LPTSTR pszDest,_In_ size_t cbDest)
HRESULT None None.StringCbGetsW(_Out_ LPTSTR pszDest,_In_ size_t cbDest)
HRESULT None None.StringCbGetsA(_Out_ LPTSTR pszDest,_In_ size_t cbDest)
HRESULT None None.StringCchCopyEx(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCchCopyExW(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCchCopyExA(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
DWORD WINAPI user32.CharUpperBuff(_Inout_ LPTSTR lpsz,_In_ DWORD cchLength)
DWORD WINAPI user32.CharUpperBuffW(_Inout_ LPTSTR lpsz,_In_ DWORD cchLength)
DWORD WINAPI user32.CharUpperBuffA(_Inout_ LPTSTR lpsz,_In_ DWORD cchLength)
DWORD WINAPI None.ThreadProc(LPVOID lpParameter None)
int None None.ferror(FILE *stream None)
void None None.perror(const char *string)
int WINAPI kernel32.lstrlen(_In_ LPCTSTR lpString)
int WINAPI kernel32.lstrlenW(_In_ LPCTSTR lpString)
int WINAPI kernel32.lstrlenA(_In_ LPCTSTR lpString)
int None None.feof(FILE *stream None)
HRESULT None None.StringCchCopyEx(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCchCopyExW(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCchCopyExA(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCbGets(_Out_ LPTSTR pszDest,_In_ size_t cbDest)
HRESULT None None.StringCbGetsW(_Out_ LPTSTR pszDest,_In_ size_t cbDest)
HRESULT None None.StringCbGetsA(_Out_ LPTSTR pszDest,_In_ size_t cbDest)
HRESULT None None.StringCbGets(_Out_ LPTSTR pszDest,_In_ size_t cbDest)
HRESULT None None.StringCbGetsW(_Out_ LPTSTR pszDest,_In_ size_t cbDest)
HRESULT None None.StringCbGetsA(_Out_ LPTSTR pszDest,_In_ size_t cbDest)
HRESULT None None.StringCbGets(_Out_ LPTSTR pszDest,_In_ size_t cbDest)
HRESULT None None.StringCbGetsW(_Out_ LPTSTR pszDest,_In_ size_t cbDest)
HRESULT None None.StringCbGetsA(_Out_ LPTSTR pszDest,_In_ size_t cbDest)
HRESULT None None.StringCbGets(_Out_ LPTSTR pszDest,_In_ size_t cbDest)
HRESULT None None.StringCbGetsW(_Out_ LPTSTR pszDest,_In_ size_t cbDest)
HRESULT None None.StringCbGetsA(_Out_ LPTSTR pszDest,_In_ size_t cbDest)
HRESULT None None.StringCbGets(_Out_ LPTSTR pszDest,_In_ size_t cbDest)
HRESULT None None.StringCbGetsW(_Out_ LPTSTR pszDest,_In_ size_t cbDest)
HRESULT None None.StringCbGetsA(_Out_ LPTSTR pszDest,_In_ size_t cbDest)
HRESULT None None.GetCodecNames(IWMCodecInfo3* pCodecInfo None)
HRESULT None None.StringCchCopyEx(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCchCopyExW(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCchCopyExA(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
int None None._eof(int fd None)
HRESULT None None.StringCchCopyEx(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCchCopyExW(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCchCopyExA(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCbGets(_Out_ LPTSTR pszDest,_In_ size_t cbDest)
HRESULT None None.StringCbGetsW(_Out_ LPTSTR pszDest,_In_ size_t cbDest)
HRESULT None None.StringCbGetsA(_Out_ LPTSTR pszDest,_In_ size_t cbDest)
HRESULT None None.StringCbGets(_Out_ LPTSTR pszDest,_In_ size_t cbDest)
HRESULT None None.StringCbGetsW(_Out_ LPTSTR pszDest,_In_ size_t cbDest)
HRESULT None None.StringCbGetsA(_Out_ LPTSTR pszDest,_In_ size_t cbDest)
HRESULT None None.StringCbGets(_Out_ LPTSTR pszDest,_In_ size_t cbDest)
HRESULT None None.StringCbGetsW(_Out_ LPTSTR pszDest,_In_ size_t cbDest)
HRESULT None None.StringCbGetsA(_Out_ LPTSTR pszDest,_In_ size_t cbDest)
LPTSTR WINAPI user32.CharNext(_In_ LPCTSTR lpsz)
LPTSTR WINAPI user32.CharNextW(_In_ LPCTSTR lpsz)
LPTSTR WINAPI user32.CharNextA(_In_ LPCTSTR lpsz)
HRESULT None None.StringCchCopyEx(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCchCopyExW(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCchCopyExA(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCbGets(_Out_ LPTSTR pszDest,_In_ size_t cbDest)
HRESULT None None.StringCbGetsW(_Out_ LPTSTR pszDest,_In_ size_t cbDest)
HRESULT None None.StringCbGetsA(_Out_ LPTSTR pszDest,_In_ size_t cbDest)
HRESULT None None.StringCchCopyEx(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCchCopyExW(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCchCopyExA(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCchCopyEx(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCchCopyExW(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCchCopyExA(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCchCopyEx(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCchCopyExW(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCchCopyExA(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCbGets(_Out_ LPTSTR pszDest,_In_ size_t cbDest)
HRESULT None None.StringCbGetsW(_Out_ LPTSTR pszDest,_In_ size_t cbDest)
HRESULT None None.StringCbGetsA(_Out_ LPTSTR pszDest,_In_ size_t cbDest)
HRESULT None None.StringCchCopyEx(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCchCopyExW(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCchCopyExA(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCchCopyEx(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCchCopyExW(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCchCopyExA(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
int None None.ferror(FILE *stream None)
HRESULT None None.StringCchCatNEx(_Inout_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_In_ size_t cchMaxAppend,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCchCatNExW(_Inout_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_In_ size_t cchMaxAppend,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCchCatNExA(_Inout_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_In_ size_t cchMaxAppend,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
int WINAPI kernel32.lstrlen(_In_ LPCTSTR lpString)
int WINAPI kernel32.lstrlenW(_In_ LPCTSTR lpString)
int WINAPI kernel32.lstrlenA(_In_ LPCTSTR lpString)
int None None.feof(FILE *stream None)
int None None.fseek(FILE *stream None,long offset None,int origin None)
LPTSTR WINAPI kernel32.lstrcpyn(_Out_ LPTSTR lpString1,_In_ LPCTSTR lpString2,_In_ int iMaxLength)
LPTSTR WINAPI kernel32.lstrcpynW(_Out_ LPTSTR lpString1,_In_ LPCTSTR lpString2,_In_ int iMaxLength)
LPTSTR WINAPI kernel32.lstrcpynA(_Out_ LPTSTR lpString1,_In_ LPCTSTR lpString2,_In_ int iMaxLength)
errno_t None None.freopen(FILE** pFile None,const char *path,const char *mode,FILE *stream None)
int None None.vsnprintf(char *buffer None,size_t count None,const char *format,va_list argptr None)
int None None.fgetpos(FILE *stream None,fpos_t *pos None)
LPTSTR WINAPI user32.CharPrev(_In_ LPCTSTR lpszStart,_In_ LPCTSTR lpszCurrent)
LPTSTR WINAPI user32.CharPrevW(_In_ LPCTSTR lpszStart,_In_ LPCTSTR lpszCurrent)
LPTSTR WINAPI user32.CharPrevA(_In_ LPCTSTR lpszStart,_In_ LPCTSTR lpszCurrent)
HRESULT None None.StringCchCopyEx(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCchCopyExW(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCchCopyExA(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCchCopyEx(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCchCopyExW(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCchCopyExA(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCchCopyEx(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCchCopyExW(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCchCopyExA(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
BOOL WINAPI user32.OemToCharBuff(_In_ LPCSTR lpszSrc,_Out_ LPTSTR lpszDst,_In_ DWORD cchDstLength)
BOOL WINAPI user32.OemToCharBuffW(_In_ LPCSTR lpszSrc,_Out_ LPTSTR lpszDst,_In_ DWORD cchDstLength)
BOOL WINAPI user32.OemToCharBuffA(_In_ LPCSTR lpszSrc,_Out_ LPTSTR lpszDst,_In_ DWORD cchDstLength)
void None None.rewind(FILE *stream None)
BOOL WINAPI user32.CharToOem(_In_ LPCTSTR lpszSrc,_Out_ LPSTR lpszDst)
BOOL WINAPI user32.CharToOemW(_In_ LPCTSTR lpszSrc,_Out_ LPSTR lpszDst)
BOOL WINAPI user32.CharToOemA(_In_ LPCTSTR lpszSrc,_Out_ LPSTR lpszDst)
int WINAPI kernel32.lstrcmp(_In_ LPCTSTR lpString1,_In_ LPCTSTR lpString2)
int WINAPI kernel32.lstrcmpW(_In_ LPCTSTR lpString1,_In_ LPCTSTR lpString2)
int WINAPI kernel32.lstrcmpA(_In_ LPCTSTR lpString1,_In_ LPCTSTR lpString2)
BOOL WINAPI user32.CharToOem(_In_ LPCTSTR lpszSrc,_Out_ LPSTR lpszDst)
BOOL WINAPI user32.CharToOemW(_In_ LPCTSTR lpszSrc,_Out_ LPSTR lpszDst)
BOOL WINAPI user32.CharToOemA(_In_ LPCTSTR lpszSrc,_Out_ LPSTR lpszDst)
int None None.feof(FILE *stream None)
BOOL WINAPI None.RegisterDialogClasses(hInst None None)
int None None.feof(FILE *stream None)
HRESULT None None.StringCchCopyEx(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCchCopyExW(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCchCopyExA(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCchCopyEx(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCchCopyExW(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCchCopyExA(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCchCopyEx(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCchCopyExW(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCchCopyExA(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
BOOL WINAPI user32.CharToOem(_In_ LPCTSTR lpszSrc,_Out_ LPSTR lpszDst)
BOOL WINAPI user32.CharToOemW(_In_ LPCTSTR lpszSrc,_Out_ LPSTR lpszDst)
BOOL WINAPI user32.CharToOemA(_In_ LPCTSTR lpszSrc,_Out_ LPSTR lpszDst)
int None None.fputs(const char *str,FILE *stream None)
HRESULT None None.StringCchCopyEx(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCchCopyExW(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCchCopyExA(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCchCopyEx(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCchCopyExW(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCchCopyExA(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCchCopyEx(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCchCopyExW(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCchCopyExA(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
int None None.fseek(FILE *stream None,long offset None,int origin None)
HRESULT None None.StringCchCopyEx(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCchCopyExW(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCchCopyExA(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
errno_t None None.tmpnam_s(char * str,size_t sizeInChars None)
int None None._eof(int fd None)
DWORD WINAPI user32.CharUpperBuff(_Inout_ LPTSTR lpsz,_In_ DWORD cchLength)
DWORD WINAPI user32.CharUpperBuffW(_Inout_ LPTSTR lpsz,_In_ DWORD cchLength)
DWORD WINAPI user32.CharUpperBuffA(_Inout_ LPTSTR lpsz,_In_ DWORD cchLength)
int None None._rmtmp(void None None)
HRESULT None None.StringCbGets(_Out_ LPTSTR pszDest,_In_ size_t cbDest)
HRESULT None None.StringCbGetsW(_Out_ LPTSTR pszDest,_In_ size_t cbDest)
HRESULT None None.StringCbGetsA(_Out_ LPTSTR pszDest,_In_ size_t cbDest)
BOOL WINAPI user32.IsCharUpper(_In_ TCHAR ch)
BOOL WINAPI user32.IsCharUpperW(_In_ TCHAR ch)
BOOL WINAPI user32.IsCharUpperA(_In_ TCHAR ch)
BOOL WINAPI user32.IsCharAlphaNumeric(_In_ TCHAR ch)
BOOL WINAPI user32.IsCharAlphaNumericW(_In_ TCHAR ch)
BOOL WINAPI user32.IsCharAlphaNumericA(_In_ TCHAR ch)
HKEY_CURRENT_USER SOFTWARE None.Clients(Default None None)
HRESULT None shell32.SetIDList([in] PCIDLIST_ABSOLUTE pidl)
HRESULT None None.LaunchAdvancedAssociationUI([in] LPCWSTR pszAppRegName)
int None None.feof(FILE *stream None)
HRESULT None shell32.GetIconLocation(LPTSTR pszIconPath None,int cchIconPath None,int *piIcon None)
int None None.feof(FILE *stream None)
errno_t None None.freopen(FILE** pFile None,const char *path,const char *mode,FILE *stream None)
void None None.rewind(FILE *stream None)
type None None.va_arg(va_list arg_ptr None,type None None)
long None None.ftell(FILE *stream None)
int None None.fputs(const char *str,FILE *stream None)
int None None.vsnprintf_s(char *buffer None,size_t sizeOfBuffer None,size_t count None,const char *format,va_list argptr None)
int None None._open(const char *filename,int oflag [,int pmode] None)
int None None.ferror(FILE *stream None)
int None None.fseek(FILE *stream None,long offset None,int origin None)
errno_t None None.freopen(FILE** pFile None,const char *path,const char *mode,FILE *stream None)
HRESULT None shell32.SetPath(LPCTSTR pszFile None)
errno_t None None.strerror_s(char *buffer None,size_t numberOfElements None,int errnum None)
HRESULT None shell32.GetIDList([out] PIDLIST_ABSOLUTE *ppidl)
errno_t None None.tmpnam_s(char * str,size_t sizeInChars None)
HRESULT None shell32.GetWorkingDirectory(LPTSTR pszDir None,int cchMaxPath None)
errno_t None None.tmpnam_s(char * str,size_t sizeInChars None)
int None None.fseek(FILE *stream None,long offset None,int origin None)
int None None.feof(FILE *stream None)
errno_t None None.freopen(FILE** pFile None,const char *path,const char *mode,FILE *stream None)
int None None._fileno(FILE *stream None)
HRESULT None shell32.GetDescription(LPTSTR pszName None,int cchMaxName None)
HRESULT None shell32.SetOptions([in] DWORD dwFlag)
BOOL WINAPI user32.CharToOem(_In_ LPCTSTR lpszSrc,_Out_ LPSTR lpszDst)
BOOL WINAPI user32.CharToOemW(_In_ LPCTSTR lpszSrc,_Out_ LPSTR lpszDst)
BOOL WINAPI user32.CharToOemA(_In_ LPCTSTR lpszSrc,_Out_ LPSTR lpszDst)
HRESULT None shell32.SetIDList([in] PCIDLIST_ABSOLUTE pidl)
long None None.ftell(FILE *stream None)
int None None.vsnprintf_s(char *buffer None,size_t sizeOfBuffer None,size_t count None,const char *format,va_list argptr None)
int None None._open(const char *filename,int oflag [,int pmode] None)
int None None.feof(FILE *stream None)
HRESULT None shell32.GetShowCmd(int *piShowCmd None)
int None None.fseek(FILE *stream None,long offset None,int origin None)
void None None.rewind(FILE *stream None)
int None None._matherr(struct _exception *except)
int None None.vsnprintf_s(char *buffer None,size_t sizeOfBuffer None,size_t count None,const char *format,va_list argptr None)
int None None._rmtmp(void None None)
public None None.FileStream(string path None,FileMode mode None)
int None None.ferror(FILE *stream None)
int None None.ferror(FILE *stream None)
type None None.va_arg(va_list arg_ptr None,type None None)
errno_t None None.freopen(FILE** pFile None,const char *path,const char *mode,FILE *stream None)
errno_t None None._get_errno(int * pValue)
int None None.fputs(const char *str,FILE *stream None)
int None None.feof(FILE *stream None)
int None None._umask(int pmode None)
int None None._rmtmp(void None None)
int None None._sopen(const char *filename,int oflag None,int shflag [,int pmode ])
int None None._eof(int fd None)
long None None.ftell(FILE *stream None)
type None None.va_arg(va_list arg_ptr None,type None None)
int None None.fclose(FILE *stream None)
HRESULT None shell32.SetIconLocation(LPCTSTR pszIconPath None,int iIcon None)
HRESULT None shell32.Resolve(HWND hwnd None,DWORD fFlags None)
errno_t None None.tmpfile_s(FILE** pFilePtr None)
int None None._fseek_nolock(FILE *stream None,long offset None,int origin None)
int None None.ferror(FILE *stream None)
HRESULT None shell32.GetArguments([out] LPTSTR pszArgs,[in] int cchMaxPath)
int None None._eof(int fd None)
int None None.vfprintf(FILE *stream None,const char *format,va_list argptr None)
errno_t None None.freopen(FILE** pFile None,const char *path,const char *mode,FILE *stream None)
long None None._lseek(int fd None,long offset None,int origin None)
void None None.rewind(FILE *stream None)
int None None._open(const char *filename,int oflag [,int pmode] None)
int None None._rmtmp(void None None)
HRESULT None None.Show([in None None,optional] HWND hwndOwner)
HRESULT None shell32.SetWorkingDirectory(LPCTSTR pszDir None)
int None None._setmode(int fd None,int mode None)
BOOL WINAPI comdlg32.GetSaveFileName(_Inout_ LPOPENFILENAME lpofn)
BOOL WINAPI comdlg32.GetSaveFileNameW(_Inout_ LPOPENFILENAME lpofn)
BOOL WINAPI comdlg32.GetSaveFileNameA(_Inout_ LPOPENFILENAME lpofn)
errno_t None None.freopen(FILE** pFile None,const char *path,const char *mode,FILE *stream None)
void None None.rewind(FILE *stream None)
errno_t None None._sopen_s(int* pfh None,const char *filename,int oflag None,int shflag None,int pmode None)
HRESULT None shell32.Resolve(HWND hwnd None,DWORD fFlags None)
errno_t None None.freopen(FILE** pFile None,const char *path,const char *mode,FILE *stream None)
void None None.perror(const char *string)
int None None._sopen(const char *filename,int oflag None,int shflag [,int pmode ])
int None None.feof(FILE *stream None)
int None None._creat(const char *filename,int pmode None)
HRESULT None shell32.SetOptions([in] DWORD dwFlag)
int None None._close(int fd None)
HRESULT None None.GetWindow([out] HWND *phwnd)
int None None.ferror(FILE *stream None)
BOOL WINAPI user32.CharToOem(_In_ LPCTSTR lpszSrc,_Out_ LPSTR lpszDst)
BOOL WINAPI user32.CharToOemW(_In_ LPCTSTR lpszSrc,_Out_ LPSTR lpszDst)
BOOL WINAPI user32.CharToOemA(_In_ LPCTSTR lpszSrc,_Out_ LPSTR lpszDst)
LPITEMIDLIST None None.PidlBrowse(HWND hwnd None,int nCSIDL None,LPSTR pszDisplayName None)
HRESULT None None.SetFolder([in] IShellItem *psi)
int None None.fgetpos(FILE *stream None,fpos_t *pos None)
errno_t None None._set_doserrno(int value None)
int None None._sopen(const char *filename,int oflag None,int shflag [,int pmode ])
void None None.clearerr(FILE *stream None)
void None None.perror(const char *string)
int None None.fsetpos(FILE *stream None,const fpos_t *pos)
BOOL WINAPI comdlg32.GetOpenFileName(_Inout_ LPOPENFILENAME lpofn)
BOOL WINAPI comdlg32.GetOpenFileNameW(_Inout_ LPOPENFILENAME lpofn)
BOOL WINAPI comdlg32.GetOpenFileNameA(_Inout_ LPOPENFILENAME lpofn)
int None None.fseek(FILE *stream None,long offset None,int origin None)
int None None.fclose(FILE *stream None)
errno_t None None.tmpnam_s(char * str,size_t sizeInChars None)
void None None.clearerr(FILE *stream None)
HRESULT None shell32.SetHotkey(WORD wHotkey None)
int None None._fileno(FILE *stream None)
HRESULT None shell32.SetDescription(LPCTSTR pszName None)
void None None.rewind(FILE *stream None)
int None None._fileno(FILE *stream None)
HRESULT None shell32.GetPath([out] LPTSTR pszFile,[in] int cchMaxPath,[in None None,out] WIN32_FIND_DATA *pfd,[in] DWORD fFlags)
errno_t None None._get_doserrno(int * pValue)
int None None._matherr(struct _exception *except)
errno_t None None._get_errno(int * pValue)
void None None.perror(const char *string)
HRESULT None shell32.SetPath(LPCTSTR pszFile None)
void None None.clearerr(FILE *stream None)
int None None.fseek(FILE *stream None,long offset None,int origin None)
errno_t None None._set_errno(int value None)
int None None._open(const char *filename,int oflag [,int pmode] None)
long None None.ftell(FILE *stream None)
int None None.fseek(FILE *stream None,long offset None,int origin None)
errno_t None None.freopen(FILE** pFile None,const char *path,const char *mode,FILE *stream None)
HRESULT None None.SetClientGuid([in] REFGUID guid)
int None None.fseek(FILE *stream None,long offset None,int origin None)
int None None.fclose(FILE *stream None)
long None None.ftell(FILE *stream None)
int None None._setmode(int fd None,int mode None)
int None None.fclose(FILE *stream None)
int None None._fileno(FILE *stream None)
int None None._open(const char *filename,int oflag [,int pmode] None)
HRESULT None None.Advise([in] IFileDialogEvents *pfde,[out] DWORD *pdwCookie)
HRESULT None None.Unadvise([in] DWORD dwCookie)
HRESULT None shell32.SetWorkingDirectory(LPCTSTR pszDir None)
HRESULT None None.SetOptions([in] FILEOPENDIALOGOPTIONS fos)
int None None._fileno(FILE *stream None)
int None None.fsetpos(FILE *stream None,const fpos_t *pos)
int None None._CrtSetReportMode(int reportType None,int reportMode None)
size_t None None._CrtSetDebugFillThreshold(size_t _NewThreshold None)
HRESULT None None.OnFileOk([in] IFileDialog *pfd)
type None None.va_arg(va_list arg_ptr None,type None None)
int None None.ferror(FILE *stream None)
HRESULT None shell32.SetArguments([in] LPCTSTR pszArgs)
HRESULT None shell32.SetArguments([in] LPCTSTR pszArgs)
errno_t None None._get_errno(int * pValue)
HRESULT None shell32.SetDescription(LPCTSTR pszName None)
errno_t None None._get_fmode(int * pmode)
int None None._setmbcp(int codepage None)
HRESULT None None.SetSaveAsItem([in] IShellItem *psi)
type None None.va_arg(va_list arg_ptr None,type None None)
int None None.fputs(const char *str,FILE *stream None)
errno_t None None._get_fmode(int * pmode)
HRESULT None shell32.InvokeCommand(LPCMINVOKECOMMANDINFO pici None)
HRESULT None shell32.SetShowCmd(int iShowCmd None)
HRESULT None shell32.GetHotkey(WORD *pwHotkey None)
void None None.rewind(FILE *stream None)
HRESULT None None.GetResults([out] IShellItemArray **ppenum)
HRESULT None shell32.SetHotkey(WORD wHotkey None)
HRESULT None shell32.GetIconLocation(LPTSTR pszIconPath None,int cchIconPath None,int *piIcon None)
HRESULT None shell32.GetDescription(LPTSTR pszName None,int cchMaxName None)
int None None.fclose(FILE *stream None)
long None None._lseek(int fd None,long offset None,int origin None)
int None None.vsnprintf_s(char *buffer None,size_t sizeOfBuffer None,size_t count None,const char *format,va_list argptr None)
int None None.fputs(const char *str,FILE *stream None)
int None None._open(const char *filename,int oflag [,int pmode] None)
public None None.FileStream(string path None,FileMode mode None)
HRESULT None None.LaunchAdvancedAssociationUI([in] LPCWSTR pszAppRegName)
void None None.rewind(FILE *stream None)
int None None.ferror(FILE *stream None)
HRESULT None shell32.GetHotkey(WORD *pwHotkey None)
void None None.rewind(FILE *stream None)
type None None.va_arg(va_list arg_ptr None,type None None)
size_t None None._CrtSetDebugFillThreshold(size_t _NewThreshold None)
errno_t None None._set_fmode(int mode None)
int None None.fputs(const char *str,FILE *stream None)
int None None.vsnprintf_s(char *buffer None,size_t sizeOfBuffer None,size_t count None,const char *format,va_list argptr None)
long None None.ftell(FILE *stream None)
int None None.fputs(const char *str,FILE *stream None)
errno_t None None.freopen(FILE** pFile None,const char *path,const char *mode,FILE *stream None)
errno_t None None._set_fmode(int mode None)
int None None._open(const char *filename,int oflag [,int pmode] None)
int None None.ferror(FILE *stream None)
HRESULT None shell32.SetRelativePath(LPCTSTR pszPathRel None,DWORD dwReserved None)
int None None._chmod(const char *filename,int pmode None)
errno_t None None.freopen(FILE** pFile None,const char *path,const char *mode,FILE *stream None)
int None None.fputs(const char *str,FILE *stream None)
int None None._creat(const char *filename,int pmode None)
errno_t None None._set_errno(int value None)
public None None.FileStream(SafeFileHandle handle None,FileAccess access None)
void None None.perror(const char *string)
public None None.FileStream(string path None,FileMode mode None)
int None None.feof(FILE *stream None)
int None None._setmode(int fd None,int mode None)
HRESULT None shell32.SetArguments([in] LPCTSTR pszArgs)
type None None.va_arg(va_list arg_ptr None,type None None)
int None None.ferror(FILE *stream None)
HRESULT None shell32.GetHotkey(WORD *pwHotkey None)
public None None.FileStream(SafeFileHandle handle None,FileAccess access None,int bufferSize None,bool isAsync None)
int None None._locking(int fd None,int mode None,long nbytes None)
errno_t None None.strerror_s(char *buffer None,size_t numberOfElements None,int errnum None)
int None None._set_error_mode(int modeval None)
int None None.fsetpos(FILE *stream None,const fpos_t *pos)
int None None._matherr(struct _exception *except)
void None None.rewind(FILE *stream None)
errno_t None None._get_errno(int * pValue)
void None None.rewind(FILE *stream None)
long None None.ftell(FILE *stream None)
void None None.rewind(FILE *stream None)
long None None._lseek(int fd None,long offset None,int origin None)
int None None.ferror(FILE *stream None)
HRESULT None shell32.SetOptions([in] DWORD dwFlag)
HRESULT None None.GetResult([out] IShellItem **ppsi)
int None None.vsnprintf_s(char *buffer None,size_t sizeOfBuffer None,size_t count None,const char *format,va_list argptr None)
int None None._chsize(int fd None,long size None)
HRESULT None shell32.SetRelativePath(LPCTSTR pszPathRel None,DWORD dwReserved None)
int None None.puts(const char *str)
int None None.fseek(FILE *stream None,long offset None,int origin None)
HRESULT None shell32.SetDescription(LPCTSTR pszName None)
HRESULT None shell32.Initialize([in] PCIDLIST_ABSOLUTE pidlFolder,[in] IDataObject *pdtobj,[in] HKEY hkeyProgID)
UINT_PTR CALLBACK None.FRHookProc(_In_ HWND hdlg,_In_ UINT uiMsg,_In_ WPARAM wParam,_In_ LPARAM lParam)
int None None._dup(int fd None)
size_t None None._CrtSetDebugFillThreshold(size_t _NewThreshold None)
errno_t None None._set_fmode(int mode None)
int None None.fputs(const char *str,FILE *stream None)
int None None.ferror(FILE *stream None)
int None None.fseek(FILE *stream None,long offset None,int origin None)
void None None.rewind(FILE *stream None)
errno_t None None._get_doserrno(int * pValue)
int None None._stat(const char *path,struct _stat *buffer)
int None None._getmbcp(void None None)
int None None.fsetpos(FILE *stream None,const fpos_t *pos)
int None None._set_error_mode(int modeval None)
int None None.fsetpos(FILE *stream None,const fpos_t *pos)
errno_t None None.tmpnam_s(char * str,size_t sizeInChars None)
BOOL WINAPI user32.OemToChar(_In_ LPCSTR lpszSrc,_Out_ LPTSTR lpszDst)
BOOL WINAPI user32.OemToCharW(_In_ LPCSTR lpszSrc,_Out_ LPTSTR lpszDst)
BOOL WINAPI user32.OemToCharA(_In_ LPCSTR lpszSrc,_Out_ LPTSTR lpszDst)
errno_t None None._get_doserrno(int * pValue)
errno_t None None._get_errno(int * pValue)
errno_t None None._set_doserrno(int value None)
errno_t None None._set_errno(int value None)
int None None._setmode(int fd None,int mode None)
HRESULT None None.OnSelectionChange([in] IFileDialog *pfd)
HRESULT None shell32.InvokeCommand(LPCMINVOKECOMMANDINFO pici None)
HRESULT None None.GetFolderIds([out] KNOWNFOLDERID **ppKFId,[in None None,out] UINT *pCount)
int None None._set_error_mode(int modeval None)
HRESULT None shlwapi.SHAutoComplete(_In_ HWND hwndEdit,DWORD dwFlags None)
HRESULT None None.EnumSubCommands([out] IEnumExplorerCommand **ppEnum)
BOOL WINAPI user32.IsCharAlphaNumeric(_In_ TCHAR ch)
BOOL WINAPI user32.IsCharAlphaNumericW(_In_ TCHAR ch)
BOOL WINAPI user32.IsCharAlphaNumericA(_In_ TCHAR ch)
HRESULT None shell32.GetDefaultColumnState([in] UINT iColumn,[out] SHCOLSTATEF *pcsFlags)
HRESULT None None.SetAppAsDefaultAll([in] LPCWSTR pszAppRegistryName)
errno_t None None.clearerr_s(FILE *stream None)
errno_t None None._get_errno(int * pValue)
int None None.vfprintf(FILE *stream None,const char *format,va_list argptr None)
int None None.fsetpos(FILE *stream None,const fpos_t *pos)
errno_t None None.fopen_s(FILE** pFile None,const char *filename,const char *mode)
int None None._fileno(FILE *stream None)
HRESULT None None.AddPlace([in] IShellItem *psi,[in] FDAP fdap)
UINT_PTR CALLBACK None.CFHookProc(_In_ HWND hdlg,_In_ UINT uiMsg,_In_ WPARAM wParam,_In_ LPARAM lParam)
int None None._setmbcp(int codepage None)
errno_t None None.strerror_s(char *buffer None,size_t numberOfElements None,int errnum None)
int None None._creat(const char *filename,int pmode None)
errno_t None None._sopen_s(int* pfh None,const char *filename,int oflag None,int shflag None,int pmode None)
public None None.FileStream(string path None,FileMode mode None)
errno_t None None._sopen_s(int* pfh None,const char *filename,int oflag None,int shflag None,int pmode None)
int None None.fclose(FILE *stream None)
HRESULT None None.AddPlace([in] IShellItem *psi,[in] FDAP fdap)
void None None.perror(const char *string)
int None None.vfprintf_s(FILE *stream None,const char *format,va_list argptr None)
int None None._matherr(struct _exception *except)
int None None._locking(int fd None,int mode None,long nbytes None)
int None None._creat(const char *filename,int pmode None)
void None None.clearerr(FILE *stream None)
errno_t None None._get_tzname(size_t* pReturnValue None,char* timeZoneName None,size_t sizeInBytes None,int index None)
errno_t None None.strerror_s(char *buffer None,size_t numberOfElements None,int errnum None)
HRESULT None None.SetFileNameLabel([in] LPCWSTR pszLabel)
HRESULT None shell32.SetArguments([in] LPCTSTR pszArgs)
public None None.FileStream(string path None,FileMode mode None)
int None None._umask(int pmode None)
errno_t None None._sopen_s(int* pfh None,const char *filename,int oflag None,int shflag None,int pmode None)
int None None._open(const char *filename,int oflag [,int pmode] None)
int None None._fseek_nolock(FILE *stream None,long offset None,int origin None)
long None None._lseek(int fd None,long offset None,int origin None)
public None None.FileStream(string path None,FileMode mode None,FileAccess access None,FileShare share None,int bufferSize None)
void None None.rewind(FILE *stream None)
int None None._ismbbpunct(unsigned int c)
errno_t None None._set_fmode(int mode None)
errno_t None None._sopen_s(int* pfh None,const char *filename,int oflag None,int shflag None,int pmode None)
int None None.fclose(FILE *stream None)
int None None._umask(int pmode None)
type None None.va_arg(va_list arg_ptr None,type None None)
errno_t None None.strncat_s(char *strDest None,size_t numberOfElements None,const char *strSource,size_t count None)
short WINAPI comdlg32.GetFileTitle(_In_ LPCTSTR lpszFile,_Out_ LPTSTR lpszTitle,_In_ WORD cchSize)
short WINAPI comdlg32.GetFileTitleW(_In_ LPCTSTR lpszFile,_Out_ LPTSTR lpszTitle,_In_ WORD cchSize)
short WINAPI comdlg32.GetFileTitleA(_In_ LPCTSTR lpszFile,_Out_ LPTSTR lpszTitle,_In_ WORD cchSize)
HRESULT None None.AddPlace([in] IShellItem *psi,[in] FDAP fdap)
int None None._fileno(FILE *stream None)
int None None._creat(const char *filename,int pmode None)
int None None.setjmp(jmp_buf env None)
UINT_PTR CALLBACK None.PagePaintHook(_In_ HWND hdlg,_In_ UINT uiMsg,_In_ WPARAM wParam,_In_ LPARAM lParam)
void None None.assert(int expression None)
function None shell32.EnumUsers(Volume_Label None None)
BOOL WINAPI comdlg32.ChooseFont(_Inout_ LPCHOOSEFONT lpcf)
BOOL WINAPI comdlg32.ChooseFontW(_Inout_ LPCHOOSEFONT lpcf)
BOOL WINAPI comdlg32.ChooseFontA(_Inout_ LPCHOOSEFONT lpcf)
errno_t None None._set_doserrno(int value None)
int None None.fclose(FILE *stream None)
HRESULT None None.EnumSubCommands([out] IEnumExplorerCommand **ppEnum)
int None None._sopen(const char *filename,int oflag None,int shflag [,int pmode ])
int None None.fputs(const char *str,FILE *stream None)
UINT_PTR CALLBACK None.PageSetupHook(_In_ HWND hdlg,_In_ UINT uiMsg,_In_ WPARAM wParam,_In_ LPARAM lParam)
errno_t None None._set_errno(int value None)
public None None.FileStream(SafeFileHandle handle None,FileAccess access None)
int None None.vsnprintf(char *buffer None,size_t count None,const char *format,va_list argptr None)
HRESULT None None.Unadvise([in] DWORD dwCookie)
errno_t None None._get_fmode(int * pmode)
HKEY_CLASSES_ROOT None None.alert(Default None None)
int None None._umask(int pmode None)
int None None._creat(const char *filename,int pmode None)
HRESULT None None.OnTypeChange([in] IFileDialog *pfd)
int None None.putc(int c None,FILE *stream None)
HRESULT None None.GetFlags([out] EXPCMDFLAGS *pFlags)
errno_t None None._set_fmode(int mode None)
HRESULT None None.QueryAppIsDefault([in] LPCWSTR pszQuery,[in] ASSOCIATIONTYPE atQueryType,[in] ASSOCIATIONLEVEL alQueryLevel,[in] LPCWSTR pszAppRegistryName,[out] BOOL *pfDefault)
public None None.FileStream(string path None,FileMode mode None,FileSystemRights rights None,FileShare share None,int bufferSize None,FileOptions options None,FileSecurity fileSecurity None)
int None None.fsetpos(FILE *stream None,const fpos_t *pos)
int None None.vsnprintf_s(char *buffer None,size_t sizeOfBuffer None,size_t count None,const char *format,va_list argptr None)
errno_t None None.getenv_s(size_t *pReturnValue None,char* buffer None,size_t numberOfElements None,const char *varname)
long None None._lseek(int fd None,long offset None,int origin None)
int None None.vprintf(const char *format,va_list argptr None)
HRESULT None None.SetFileName([in] LPCWSTR pszName)
int None None.fflush(FILE *stream None)
HRESULT None shell32.GetOptions([out] DWORD *pdwFlag)
error_t None None._get_daylight(int* hours None)
type None None.va_arg(va_list arg_ptr None,type None None)
HRESULT None None.GetFolder([out] IShellItem **ppsi)
int None None._stat(const char *path,struct _stat *buffer)
int None None.fsetpos(FILE *stream None,const fpos_t *pos)
int None None._set_error_mode(int modeval None)
errno_t None None._get_doserrno(int * pValue)
HRESULT None None.OnOverwrite([in] IFileDialog *pfd,[in] IShellItem *psi,[out] FDE_SHAREVIOLATION_RESPONSE *pResponse)
HRESULT None shlwapi.IUnknown_GetSite(_In_ IUnknown *punk,_In_ REFIID riid,_Out_ VOID **ppvSite)
void None None.assert(int expression None)
HRESULT None shell32.GetFolder([in] REFKNOWNFOLDERID rfid,[out] IKnownFolder **ppkf)
int None None._open(const char *filename,int oflag [,int pmode] None)
errno_t None None._set_fmode(int mode None)
int None None._setmode(int fd None,int mode None)
HRESULT None None.SetOkButtonLabel([in] LPCWSTR pszText)
int None None._mkdir(const char *dirname)
int None None._setmaxstdio(int newmax None)
errno_t None None._umask_s(int mode None,int * pOldMode)
int None None._setmode(int fd None,int mode None)
errno_t None None._mbsnbset_s(unsigned char *str,size_t size None,unsigned int c,size_t count None)
int None None._close(int fd None)
int None None.fclose(FILE *stream None)
errno_t None None._get_errno(int * pValue)
errno_t None None.strerror_s(char *buffer None,size_t numberOfElements None,int errnum None)
long None None._lseek(int fd None,long offset None,int origin None)
errno_t None None._get_fmode(int * pmode)
int None None._getmbcp(void None None)
int None None.puts(const char *str)
int None None._commit(int fd None)
errno_t None None.strncat_s(char *strDest None,size_t numberOfElements None,const char *strSource,size_t count None)
errno_t None None._putenv_s(const char *name,const char *value)
errno_t None None._get_tzname(size_t* pReturnValue None,char* timeZoneName None,size_t sizeInBytes None,int index None)
errno_t None None._get_doserrno(int * pValue)
LPSTR WINAPI user32.CharPrevExA(_In_ WORD CodePage,_In_ LPCSTR lpStart,_In_ LPCSTR lpCurrentChar,_In_ DWORD dwFlags)
LPSTR WINAPI user32.CharPrevExA(_In_ WORD CodePage,_In_ LPCSTR lpStart,_In_ LPCSTR lpCurrentChar,_In_ DWORD dwFlags)
HRESULT None None.OnShareViolation([in] IFileDialog *pfd,[in] IShellItem *psi,[out] FDE_SHAREVIOLATION_RESPONSE *pResponse)
HRESULT None shlwapi.IStream_Copy(_In_ IStream *pstmFrom,_In_ IStream *pstmTo,_In_ DWORD cb)
HRESULT None shell32.GetDefaultColumn([in] DWORD dwReserved,[out] ULONG *pSort,[out] ULONG *pDisplay)
error_t None None._get_daylight(int* hours None)
errno_t None None._set_fmode(int mode None)
int None None.vsnprintf(char *buffer None,size_t count None,const char *format,va_list argptr None)
long None None._lseek(int fd None,long offset None,int origin None)
UINT_PTR CALLBACK None.SetupHookProc(_In_ HWND hdlg,_In_ UINT uiMsg,_In_ WPARAM wParam,_In_ LPARAM lParam)
public None None.BinaryReader(Stream input None)
HRESULT None shell32.SetRelativePath(LPCTSTR pszPathRel None,DWORD dwReserved None)
int None None._dup(int fd None)
long None None._tell(int handle None)
int None None._access(const char *path,int mode None)
public None None.DirectoryNotFoundException(string message None)
size_t None None.mbstowcs(wchar_t *wcstr None,const char *mbstr,size_t count None)
errno_t None None._get_fmode(int * pmode)
double None None.pow(double x None,double y None)
errno_t None None._set_fmode(int mode None)
int None None.puts(const char *str)
int None None._umask(int pmode None)
errno_t None None.wcstombs_s(size_t *pReturnValue None,char *mbstr None,size_t sizeInBytes None,const wchar_t *wcstr,size_t count None)
HRESULT None None.GetFileName([out] WCHAR **pszName)
public None None.FileStream(SafeFileHandle handle None,FileAccess access None,int bufferSize None,bool isAsync None)
int None None._stat(const char *path,struct _stat *buffer)
int None None.putc(int c None,FILE *stream None)
int None None.isspace(int c None)
BOOL WINAPI comdlg32.PrintDlg(_Inout_ LPPRINTDLG lppd)
BOOL WINAPI comdlg32.PrintDlgW(_Inout_ LPPRINTDLG lppd)
BOOL WINAPI comdlg32.PrintDlgA(_Inout_ LPPRINTDLG lppd)
double None None.erf(double x None)
int None None._dup(int fd None)
public None None.FileStream(string path None,FileMode mode None,FileSystemRights rights None,FileShare share None,int bufferSize None,FileOptions options None,FileSecurity fileSecurity None)
errno_t None None.wcstombs_s(size_t *pReturnValue None,char *mbstr None,size_t sizeInBytes None,const wchar_t *wcstr,size_t count None)
int None None._chmod(const char *filename,int pmode None)
error_t None None._get_dstbias(int* seconds None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
int None None.fputc(int c None,FILE *stream None)
UINT_PTR CALLBACK None.CCHookProc(_In_ HWND hdlg,_In_ UINT uiMsg,_In_ WPARAM wParam,_In_ LPARAM lParam)
int None None._close(int fd None)
DWORD WINAPI comdlg32.CommDlgExtendedError(void None None)
errno_t None None._sopen_s(int* pfh None,const char *filename,int oflag None,int shflag None,int pmode None)
int None None._sopen(const char *filename,int oflag None,int shflag [,int pmode ])
int None None._fileno(FILE *stream None)
errno_t None None._set_doserrno(int value None)
int None None._getmbcp(void None None)
errno_t None None._get_errno(int * pValue)
protected None None.IOException(SerializationInfo info None,StreamingContext context None)
void None None.abort(void None None)
void None None.rewind(FILE *stream None)
long None None._lseek(int fd None,long offset None,int origin None)
errno_t None None._itoa_s(int value None,char *buffer None,size_t sizeInCharacters None,int radix None)
HRESULT None None.GetFileTypeIndex([out] UINT *piFileType)
int None None._chsize(int fd None,long size None)
public int None.ShiftAndWrap(int value None,int positions None)
errno_t None None.mbstowcs_s(size_t *pReturnValue None,wchar_t *wcstr None,size_t sizeInWords None,const char *mbstr,size_t count None)
SCODE None None.GetChunk([out] STAT_CHUNK *pStat)
int None None._open(const char *filename,int oflag [,int pmode] None)
public None None.EventLogTraceListener(string source None)
error_t None None._get_dstbias(int* seconds None)
void None None.assert(int expression None)
void None None.assert(int expression None)
INT_PTR CALLBACK None.DlgProc(HWND hDlg None,UINT message None,WPARAM wParam None,LPARAM lParam None)
UINT_PTR CALLBACK None.PrintHookProc(_In_ HWND hdlg,_In_ UINT uiMsg,_In_ WPARAM wParam,_In_ LPARAM lParam)
UINT_PTR CALLBACK None.OFNHookProc(_In_ HWND hdlg,_In_ UINT uiMsg,_In_ WPARAM wParam,_In_ LPARAM lParam)
HRESULT None shlwapi.AssocCreate(_In_ CLSID clsid,_In_ REFIID riid,_Out_ void *ppv)
int None None.mbtowc(wchar_t *wchar None,const char *mbchar,size_t count None)
protected None None.NotSupportedException(SerializationInfo info None,StreamingContext context None)
int None None._ismbbkalnum(unsigned int c)
errno_t None None._access_s(const char *path,int mode None)
int None None._close(int fd None)
HRESULT None shell32.EnumSearches(IEnumExtraSearch **ppEnum None)
long None None._lseek(int fd None,long offset None,int origin None)
UINT_PTR CALLBACK None.FRHookProc(_In_ HWND hdlg,_In_ UINT uiMsg,_In_ WPARAM wParam,_In_ LPARAM lParam)
int None None.fsetpos(FILE *stream None,const fpos_t *pos)
int None None._creat(const char *filename,int pmode None)
uint None None.ToUInt32(IFormatProvider provider None)
int None None._mkdir(const char *dirname)
int None None._close(int fd None)
int None None._chmod(const char *filename,int pmode None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
long None None._lseek(int fd None,long offset None,int origin None)
public None None.UIPermission(UIPermissionWindow windowFlag None)
void None None.setbuf(FILE *stream None,char *buffer None)
error_t None None._get_dstbias(int* seconds None)
errno_t None None.fopen_s(FILE** pFile None,const char *filename,const char *mode)
int None None._unlink(const char *filename)
public long None.Seek(long offset None,SeekOrigin origin None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
int None None._putch_nolock(int c None)
errno_t None None._chsize_s(int fd None,__int64 size None)
errno_t None None._strset_s(char *str None,size_t numberOfElements None,int c None)
int None None._fputc_nolock(int c None,FILE *stream None)
int None None.fputc(int c None,FILE *stream None)
int None None.isxdigit(int c None)
error_t None None._get_dstbias(int* seconds None)
int None None._getmaxstdio(void None None)
public None None.EventLogTraceListener(string source None)
int None None.fclose(FILE *stream None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
long double None.strtold(const char *nptr,char **endptr None)
SerializableAttribute FlagsAttribute None.ComVisibleAttribute(true None None)
errno_t None None.strncpy_s(char *strDest None,size_t numberOfElements None,const char *strSource,size_t count None)
errno_t None None.mbstowcs_s(size_t *pReturnValue None,wchar_t *wcstr None,size_t sizeInWords None,const char *mbstr,size_t count None)
UINT_PTR CALLBACK None.CCHookProc(_In_ HWND hdlg,_In_ UINT uiMsg,_In_ WPARAM wParam,_In_ LPARAM lParam)
SerializableAttribute None None.ComVisibleAttribute(true None None)
int None None.islower(int c None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
int None None.tolower(int c None)
errno_t None None.mbstowcs_s(size_t *pReturnValue None,wchar_t *wcstr None,size_t sizeInWords None,const char *mbstr,size_t count None)
public void None.MoveTo(string destDirName None)
public void None.Write(byte[] array None,int offset None,int count None)
int None None._putenv(const char *envstring)
int None None.isdigit(int c None)
errno_t None None._access_s(const char *path,int mode None)
HRESULT None shlwapi.AssocQueryStringByKey(_In_ ASSOCF flags,_In_ ASSOCSTR str,_In_ HKEY hkAssoc,_In_opt_ LPCTSTR pszExtra,_Out_opt_ LPTSTR pszOut,_Inout_ DWORD *pcchOut)
HRESULT None shlwapi.AssocQueryStringByKeyW(_In_ ASSOCF flags,_In_ ASSOCSTR str,_In_ HKEY hkAssoc,_In_opt_ LPCTSTR pszExtra,_Out_opt_ LPTSTR pszOut,_Inout_ DWORD *pcchOut)
HRESULT None shlwapi.AssocQueryStringByKeyA(_In_ ASSOCF flags,_In_ ASSOCSTR str,_In_ HKEY hkAssoc,_In_opt_ LPCTSTR pszExtra,_Out_opt_ LPTSTR pszOut,_Inout_ DWORD *pcchOut)
public None None.FileStream(string path None,FileMode mode None)
protected None None.ArgumentException(SerializationInfo info None,StreamingContext context None)
int None None._ismbbgraph(unsigned int c)
public FileInfo None.CopyTo(string destFileName None)
public None None.FileStream(string path None,FileMode mode None)
UINT_PTR CALLBACK None.SetupHookProc(_In_ HWND hdlg,_In_ UINT uiMsg,_In_ WPARAM wParam,_In_ LPARAM lParam)
SerializableAttribute None None.ComVisibleAttribute(true None None)
errno_t None None._strupr_s(char *str None,size_t numberOfElements None)
int None None.strcmp(const char *string1,const char *string2)
public None None.FileStream(string path None,FileMode mode None,FileAccess access None,FileShare share None)
int None None._chmod(const char *filename,int pmode None)
public None None.ArgumentException(string message None,string paramName None,Exception innerException None)
public None None.BinaryReader(Stream input None)
HWND WINAPI comdlg32.FindText(_In_ LPFINDREPLACE lpfr)
HWND WINAPI comdlg32.FindTextW(_In_ LPFINDREPLACE lpfr)
HWND WINAPI comdlg32.FindTextA(_In_ LPFINDREPLACE lpfr)
int None None.isspace(int c None)
public None None.FileStream(string path None,FileMode mode None)
long None None._lseek(int fd None,long offset None,int origin None)
errno_t None None.strncpy_s(char *strDest None,size_t numberOfElements None,const char *strSource,size_t count None)
int None None.vfprintf_s(FILE *stream None,const char *format,va_list argptr None)
unsigned int None._mbctolower(unsigned int c)
int None None._putw(int binint None,FILE *stream None)
unsigned int None._clear87(void None None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
int None None._strncoll(const char *string1,const char *string2,size_t count None)
int None None._putenv(const char *envstring)
void None None.GetTypeInfo(uint iTInfo None,uint lcid None,IntPtr ppTInfo None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
errno_t None None._sopen_s(int* pfh None,const char *filename,int oflag None,int shflag None,int pmode None)
protected None None.ArgumentException(SerializationInfo info None,StreamingContext context None)
Function None shell32.Find(dqc None None,name None None)
int None None._set_SSE2_enable(int flag None)
int None None.strcoll(const char *string1,const char *string2)
public void None.MoveTo(string destFileName None)
SerializableAttribute FlagsAttribute None.ComVisibleAttribute(true None None)
HWND WINAPI comdlg32.ReplaceText(_Inout_ LPFINDREPLACE lpfr)
HWND WINAPI comdlg32.ReplaceTextW(_Inout_ LPFINDREPLACE lpfr)
HWND WINAPI comdlg32.ReplaceTextA(_Inout_ LPFINDREPLACE lpfr)
BOOL WINAPI user32.EndDialog(_In_ HWND hDlg,_In_ INT_PTR nResult)
int None None.ComparisonT(T x None,T y None)
public None None.DirectoryNotFoundException(string message None)
errno_t None None.strcat_s(char *strDestination None,size_t numberOfElements None,const char *strSource)
int None None.iscntrl(int c None)
size_t None None._aligned_msize_dbg(void *memblock None,size_t alignment None,size_t offset None)
size_t None None.fread(void *buffer None,size_t size None,size_t count None,FILE *stream None)
public string None.ToString(string format None,IFormatProvider provider None)
typedef None None.void(*_se_translator_function None None)
terminate_function None None.set_terminate(terminate_function termFunction None)
int None None._CrtDumpMemoryLeaks(void None None)
size_t None None.fread(void *buffer None,size_t size None,size_t count None,FILE *stream None)
public void None.Write(Object value None)
void None None._free_dbg(void *userData None,int blockType None)
string None None.ToString(string format None,IFormatProvider formatProvider None)
long None None._tell(int handle None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
uint None None.ToUInt32(IFormatProvider provider None)
LSTATUS None shlwapi.SHRegGetPath(_In_ HKEY hkey,_In_ LPCTSTR pszSubkey,_In_ LPCTSTR pszValue,_Out_ LPTSTR pszPath,DWORD dwFlags None)
LSTATUS None shlwapi.SHRegGetPathW(_In_ HKEY hkey,_In_ LPCTSTR pszSubkey,_In_ LPCTSTR pszValue,_Out_ LPTSTR pszPath,DWORD dwFlags None)
LSTATUS None shlwapi.SHRegGetPathA(_In_ HKEY hkey,_In_ LPCTSTR pszSubkey,_In_ LPCTSTR pszValue,_Out_ LPTSTR pszPath,DWORD dwFlags None)
int None None.memcmp(const void *buf1,const void *buf2,size_t count None)
double None None.atof(const char *str)
int None None._strnicmp(const char *string1,const char *string2,size_t count None)
int None None._strncoll(const char *string1,const char *string2,size_t count None)
public None None.FileNotFoundException(string message None,string fileName None,Exception innerException None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
protected None None.ArgumentException(SerializationInfo info None,StreamingContext context None)
int None None.mbsinit(const mbstate_t* ps)
void None None.DumpClientFunction(void *userPortion None,size_t blockSize None)
string None None.ToString(string format None,IFormatProvider formatProvider None)
size_t None None.fread(void *buffer None,size_t size None,size_t count None,FILE *stream None)
void None None.GetTypeInfo(uint iTInfo None,uint lcid None,IntPtr ppTInfo None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
int None None.fputc(int c None,FILE *stream None)
void None None.DumpClientFunction(void *userPortion None,size_t blockSize None)
int None None.isupper(int c None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
HRESULT None None.GetDiacriticSensitivity([out None None,retval] BOOL *pfDiacriticSensitive)
int None None._atodbl(_CRT_DOUBLE * value,char * str)
public None None.RegistryPermission(RegistryPermissionAccess access None,string pathList None)
int None None._getmaxstdio(void None None)
public None None.IOException(string message None,int hresult None)
int None None.CommDlg_OpenSave_GetFolderPath(hwnd None None,lparam None None,wparam None None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
size_t None None.wcstombs(char *mbstr None,const wchar_t *wcstr,size_t count None)
int None None.strcmp(const char *string1,const char *string2)
void None None.DumpClientFunction(void *userPortion None,size_t blockSize None)
public FileInfo None.CopyTo(string destFileName None)
int None None.vsprintf(char *buffer None,const char *format,va_list argptr None)
uint None None.ToUInt32(IFormatProvider provider None)
int None None.islower(int c None)
unsigned long None.strtoul(const char *nptr,char **endptr None,int base None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
int None None._ismbclower(unsigned int c)
public void None.FromXml(SecurityElement esd None)
int None None._getmaxstdio(void None None)
size_t None None._msize(void *memblock None,size_t alignment None,size_t offset None)
public None None.FileNotFoundException(string message None,string fileName None,Exception innerException None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
unsigned long None.strtoul(const char *nptr,char **endptr None,int base None)
Display using None.current(en-us None None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
public None None.NotSupportedException(string message None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
protected None None.ArgumentException(SerializationInfo info None,StreamingContext context None)
int None None.isspace(int c None)
int None None._ismbcgraph(unsigned int c)
public None None.RegistryPermission(RegistryPermissionAccess access None,string pathList None)
int None None.tolower(int c None)
double None None._j0(double x None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
int None None._strnicmp(const char *string1,const char *string2,size_t count None)
size_t None None.fread(void *buffer None,size_t size None,size_t count None,FILE *stream None)
int None None.fputc(int c None,FILE *stream None)
LSTATUS None shlwapi.SHEnumValue(_In_ HKEY hkey,_In_ DWORD dwIndex,LPTSTR pszValueName None,_Inout_opt_ LPDWORD pcchValueName,_Out_opt_ LPDWORD pdwType,LPVOID pvData None,_Inout_opt_ LPDWORD pcbData)
LSTATUS None shlwapi.SHEnumValueW(_In_ HKEY hkey,_In_ DWORD dwIndex,LPTSTR pszValueName None,_Inout_opt_ LPDWORD pcchValueName,_Out_opt_ LPDWORD pdwType,LPVOID pvData None,_Inout_opt_ LPDWORD pcbData)
LSTATUS None shlwapi.SHEnumValueA(_In_ HKEY hkey,_In_ DWORD dwIndex,LPTSTR pszValueName None,_Inout_opt_ LPDWORD pcchValueName,_Out_opt_ LPDWORD pdwType,LPVOID pvData None,_Inout_opt_ LPDWORD pcbData)
SerializableAttribute None None.ComVisibleAttribute(true None None)
size_t None None._msize(void *memblock None,size_t alignment None,size_t offset None)
int None None.feholdexcept(fenv_t *penv None)
float None None.ToSingle(IFormatProvider provider None)
errno_t None None.fopen_s(FILE** pFile None,const char *filename,const char *mode)
static void None.ReadText(TextReader textReader None)
public decimal None.ReadDecimal(long position None)
void None None.DumpClientFunction(void *userPortion None,size_t blockSize None)
long None None.ToInt64(IFormatProvider provider None)
int None None.vfprintf_s(FILE *stream None,const char *format,va_list argptr None)
errno_t None None.strncat_s(char *strDest None,size_t numberOfElements None,const char *strSource,size_t count None)
int None None._atodbl(_CRT_DOUBLE * value,char * str)
protected void None.Dispose(boolean disposing None)
public void None.Remove(TraceListener listener None)
int None None._ismbcgraph(unsigned int c)
public void None.MoveTo(string destDirName None)
IPermission None None.Union(IPermission target None)
size_t None None.wcstombs(char *mbstr None,const wchar_t *wcstr,size_t count None)
size_t None None.strxfrm(char *strDest None,const char *strSource,size_t count None)
int None None.vsprintf(char *buffer None,const char *format,va_list argptr None)
public void None.MoveTo(string destDirName None)
HWND WINAPI comdlg32.ReplaceText(_Inout_ LPFINDREPLACE lpfr)
HWND WINAPI comdlg32.ReplaceTextW(_Inout_ LPFINDREPLACE lpfr)
HWND WINAPI comdlg32.ReplaceTextA(_Inout_ LPFINDREPLACE lpfr)
int None None._stricoll(const char *string1,const char *string2)
errno_t None None.strncpy_s(char *strDest None,size_t numberOfElements None,const char *strSource,size_t count None)
public None None.NotSupportedException(string message None)
public ObjRef None.CreateObjRef(Type requestedType None)
unsigned long None.strtoul(const char *nptr,char **endptr None,int base None)
int None None.vsprintf_s(char *buffer None,size_t numberOfElements None,const char *format,va_list argptr None)
size_t None None.strlen(const char *str)
int None None._putch_nolock(int c None)
int None None.tolower(int c None)
int None None._strnicmp(const char *string1,const char *string2,size_t count None)
int None None.vfprintf_s(FILE *stream None,const char *format,va_list argptr None)
public string None.ToString(string format None,IFormatProvider provider None)
IPermission None None.Union(IPermission target None)
int None None.tolower(int c None)
public None None.FileStream(string path None,FileMode mode None,FileAccess access None,FileShare share None)
void None None._free_dbg(void *userData None,int blockType None)
public None None.DirectoryNotFoundException(string message None,Exception innerException None)
public string None.ToString(string format None,IFormatProvider formatProvider None)
int None None.putc(int c None,FILE *stream None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
size_t None None.fread(void *buffer None,size_t size None,size_t count None,FILE *stream None)
public DateTimeOffset None.AddMonths(int months None)
int None None.isleadbyte(int c None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
size_t None None.strxfrm(char *strDest None,const char *strSource,size_t count None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
int None None.fputc(int c None,FILE *stream None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
public None None.DriveNotFoundException(string message None)
static char None.GetFirstCharacter(String s None)
int None None.tolower(int c None)
public None None.FileNotFoundException(string message None,string fileName None,Exception innerException None)
size_t None None.strspn(const char *str,const char *strCharSet)
public void None.Remove(TraceListener listener None)
HRESULT None None.BreakText([in] TEXT_SOURCE *pTextSource,[in] IWordSink *pWordSink,[in] IPhraseSink *pPhraseSink)
HRESULT None None.SerializePropVariantAsString(const PROPVARIANT *ppropvar,PWSTR *pszOut None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
public bool None.ReadBoolean(long position None)
public string None.ToString(string format None)
BOOL None None.AfxCheckMemory( None None)
static void None.WriteObjectInfo(object testObject None)
int None None.strcmp(const char *string1,const char *string2)
public void None.Write(byte[] array None,int offset None,int count None)
public function None.GetPathList(access : FileIOPermissionAccess)
protected void None.Dispose(boolean disposing None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
size_t None None.strcspn(const char *str,const char *strCharSet)
double None None._j0(double x None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
int None None._pclose(FILE *stream None)
HRESULT None None.GenerateForLeaf([in] IConditionFactory *pConditionFactory,[in None None,unique] LPCWSTR pszPropertyName,[in] CONDITION_OPERATION op,[in None None,unique] LPCWSTR pszValueType,[in] LPCWSTR pszValue,[in None None,unique] LPCWSTR pszValue2,[in] IRichChunk *pPropertyNameTerm,[in] IRichChunk *pOperationTerm,[in] IRichChunk *pValueTerm,[in] BOOL automaticWildcard,[out] BOOL *pNoStringQuery,[out None None,retval] ICondition **ppQueryExpression)
SerializableAttribute None None.ComVisibleAttribute(true None None)
LSTATUS None shlwapi.SHQueryInfoKey(_In_ HKEY hkey,_Out_opt_ LPDWORD pcSubKeys,_Out_opt_ LPDWORD pcchMaxSubKeyLen,_Out_opt_ LPDWORD pcValues,_Out_opt_ LPDWORD pcchMaxValueNameLen)
LSTATUS None shlwapi.SHQueryInfoKeyW(_In_ HKEY hkey,_Out_opt_ LPDWORD pcSubKeys,_Out_opt_ LPDWORD pcchMaxSubKeyLen,_Out_opt_ LPDWORD pcValues,_Out_opt_ LPDWORD pcchMaxValueNameLen)
LSTATUS None shlwapi.SHQueryInfoKeyA(_In_ HKEY hkey,_Out_opt_ LPDWORD pcSubKeys,_Out_opt_ LPDWORD pcchMaxSubKeyLen,_Out_opt_ LPDWORD pcValues,_Out_opt_ LPDWORD pcchMaxValueNameLen)
HWND WINAPI user32.GetNextDlgTabItem(_In_ HWND hDlg,_In_opt_ HWND hCtl,_In_ BOOL bPrevious)
size_t None None.strspn(const char *str,const char *strCharSet)
int None None.ftol_ambient(double d None)
IPermission None None.Union(IPermission target None)
static void None.WriteObjectInfo(object testObject None)
LSTATUS None shlwapi.SHRegCreateUSKey(_In_ LPCTSTR pszPath,_In_ REGSAM samDesired,_In_opt_ HUSKEY hRelativeUSKey,_Out_ PHUSKEY phNewUSKey,_In_ DWORD dwFlags)
LSTATUS None shlwapi.SHRegCreateUSKeyW(_In_ LPCTSTR pszPath,_In_ REGSAM samDesired,_In_opt_ HUSKEY hRelativeUSKey,_Out_ PHUSKEY phNewUSKey,_In_ DWORD dwFlags)
LSTATUS None shlwapi.SHRegCreateUSKeyA(_In_ LPCTSTR pszPath,_In_ REGSAM samDesired,_In_opt_ HUSKEY hRelativeUSKey,_Out_ PHUSKEY phNewUSKey,_In_ DWORD dwFlags)
int None None.toupper(int c None)
public IAsyncResult None.BeginRead(byte[] array None,int offset None,int numBytes None,AsyncCallback userCallback None,Object stateObject None)
public void None.DrawVisualStyleElementWindowCloseButton1(PaintEventArgs e None)
public string None.ToString(string format None,IFormatProvider provider None)
public None None.FileStream(string path None,FileMode mode None,FileAccess access None,FileShare share None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
byte None None.ToByte(IFormatProvider provider None)
int None None._strnicmp(const char *string1,const char *string2,size_t count None)
static void None.ReadText(TextReader textReader None)
SerializableAttribute None None.AttributeUsageAttribute(AttributeTargets.Assembly|AttributeTargets.Class|AttributeTargets.Struct|AttributeTargets.Constructor|AttributeTargets.Method None None,AllowMultiple=true None None,Inherited=false None None)
public None None.NotSupportedException(string message None)
public bool None.Equals(DateTimeOffset other None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
public None None.DirectoryNotFoundException(string message None,Exception innerException None)
public ObjRef None.CreateObjRef(Type requestedType None)
public None None.FileNotFoundException(string message None,string fileName None,Exception innerException None)
static void None.ReadText(TextReader textReader None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
int None None._locking(int fd None,int mode None,long nbytes None)
public boolean None.Match(Object obj None)
object None None.GetFormat(Type formatType None)
public None None.StreamingContext(StreamingContextStates state None,object additional None)
int None None._strncoll(const char *string1,const char *string2,size_t count None)
public None None.EventLog(string logName None)
int None None.getc(FILE *stream None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
public None None.SerialPort(IContainer container None)
LSTATUS None shlwapi.SHRegOpenUSKey(_In_ LPCTSTR pszPath,_In_ REGSAM samDesired,_In_opt_ HUSKEY hRelativeUSKey,_Out_ PHUSKEY phNewUSKey,_In_ BOOL fIgnoreHKCU)
LSTATUS None shlwapi.SHRegOpenUSKeyW(_In_ LPCTSTR pszPath,_In_ REGSAM samDesired,_In_opt_ HUSKEY hRelativeUSKey,_Out_ PHUSKEY phNewUSKey,_In_ BOOL fIgnoreHKCU)
LSTATUS None shlwapi.SHRegOpenUSKeyA(_In_ LPCTSTR pszPath,_In_ REGSAM samDesired,_In_opt_ HUSKEY hRelativeUSKey,_Out_ PHUSKEY phNewUSKey,_In_ BOOL fIgnoreHKCU)
public string None.ToString(string format None,IFormatProvider provider None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
public ObjRef None.CreateObjRef(Type requestedType None)
static void None.DisplayFileSystemInfoAttributes(FileSystemInfo fsi None)
public void None.DrawVisualStyleElementWindowCloseButton1(PaintEventArgs e None)
void None None._free_dbg(void *userData None,int blockType None)
public None None.DuplicateWaitObjectException(string message None,Exception innerException None)
public boolean None.Equals(Object obj None)
public None None.FileStream(string path None,FileMode mode None)
SerializableAttribute None None.ClassInterfaceAttribute(ClassInterfaceType.None None None)
public None None.StreamingContext(StreamingContextStates state None,Object additional None)
public None None.FileNotFoundException(string message None,string fileName None,Exception innerException None)
public DateTimeOffset None.AddMonths(int months None)
public boolean None.Match(Object obj None)
public None None.CultureInfo(string name None,bool useUserOverride None)
public object None.Deserialize(Stream stream None)
HRESULT None None.Clone([out] IEnumUnknown **ppenum)
SerializableAttribute None None.ComVisibleAttribute(true None None)
int None None._strnicmp(const char *string1,const char *string2,size_t count None)
int None None._matherr(struct _exception *except)
error_t None None._get_timezone(long* seconds None)
public void None.DrawVisualStyleElementWindowCloseButton1(PaintEventArgs e None)
int None None.vsprintf_s(char *buffer None,size_t numberOfElements None,const char *format,va_list argptr None)
int None None._CrtCheckMemory(void None None)
int None None._vcprintf(const char* format,va_list argptr None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
int None None._getpid(void None None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
errno_t None None.strncat_s(char *strDest None,size_t numberOfElements None,const char *strSource,size_t count None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
int None None.strncmp(const char *string1,const char *string2,size_t count None)
public None None.FileStream(string path None,FileMode mode None,FileAccess access None,FileShare share None)
static void None.DisplayFileSystemInfoAttributes(FileSystemInfo fsi None)
errno_t None None.strncpy_s(char *strDest None,size_t numberOfElements None,const char *strSource,size_t count None)
int None None.ComparisonT(T x None,T y None)
static void None.WriteObjectInfo(System.Windows.Controls.TextBlock outputBlock None,object testObject None)
public ObjRef None.CreateObjRef(Type requestedType None)
HWND WINAPI user32.GetNextDlgTabItem(_In_ HWND hDlg,_In_opt_ HWND hCtl,_In_ BOOL bPrevious)
double None None.atof(const char *str)
public string None.ToString(string format None)
public None None.DateTime(int year None,int month None,int day None,int hour None,int minute None,int second None)
LSTATUS None shlwapi.SHRegEnumUSKey(_In_ HUSKEY hUSKey,_In_ DWORD dwIndex,_Out_ LPTSTR pszName,_Inout_ LPDWORD pcchName,_In_ SHREGENUM_FLAGS enumRegFlags)
LSTATUS None shlwapi.SHRegEnumUSKeyW(_In_ HUSKEY hUSKey,_In_ DWORD dwIndex,_Out_ LPTSTR pszName,_Inout_ LPDWORD pcchName,_In_ SHREGENUM_FLAGS enumRegFlags)
LSTATUS None shlwapi.SHRegEnumUSKeyA(_In_ HUSKEY hUSKey,_In_ DWORD dwIndex,_Out_ LPTSTR pszName,_Inout_ LPDWORD pcchName,_In_ SHREGENUM_FLAGS enumRegFlags)
public None None.CultureInfo(string name None)
public None None.Task(Funcobject None None, TResult function None,object state None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
public None None.FileNotFoundException(string message None,string fileName None,Exception innerException None)
double None None.ToDouble(IFormatProvider provider None)
public void None.CopyTo(DataKey[] array None,int index None)
int None None.strncmp(const char *string1,const char *string2,size_t count None)
public string None.ToString(string format None,IFormatProvider provider None)
public None None.EventLog(string logName None)
static char None.GetFirstCharacter(String s None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
public string None.ToString(string format None)
public string None.ToString(string format None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
static char None.GetFirstCharacter(String s None)
static void None.DisplayFileSystemInfoAttributes(FileSystemInfo fsi None)
public void None.DrawVisualStyleElementWindowCloseButton1(PaintEventArgs e None)
void None None.GetObjectData(SerializationInfo info None,StreamingContext context None)
LSTATUS None shlwapi.SHEnumKeyEx(_In_ HKEY hkey,DWORD dwIndex None,LPTSTR pszName None,_In_ LPDWORD pcchName)
LSTATUS None shlwapi.SHEnumKeyExW(_In_ HKEY hkey,DWORD dwIndex None,LPTSTR pszName None,_In_ LPDWORD pcchName)
LSTATUS None shlwapi.SHEnumKeyExA(_In_ HKEY hkey,DWORD dwIndex None,LPTSTR pszName None,_In_ LPDWORD pcchName)
public None None.FileNotFoundException(string message None,string fileName None,Exception innerException None)
bool None None.ToBoolean(IFormatProvider provider None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
double None None.ceil(double x None)
LSTATUS None shlwapi.SHRegSetPath(_In_ HKEY hkey,_In_ LPCTSTR pszSubkey,_In_ LPCTSTR pszValue,_In_ LPCTSTR pszPath,DWORD dwFlags None)
LSTATUS None shlwapi.SHRegSetPathW(_In_ HKEY hkey,_In_ LPCTSTR pszSubkey,_In_ LPCTSTR pszValue,_In_ LPCTSTR pszPath,DWORD dwFlags None)
LSTATUS None shlwapi.SHRegSetPathA(_In_ HKEY hkey,_In_ LPCTSTR pszSubkey,_In_ LPCTSTR pszValue,_In_ LPCTSTR pszPath,DWORD dwFlags None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
int None None._kbhit(void None None)
LSTATUS None shlwapi.SHDeleteEmptyKey(_In_ HKEY hkey,_In_opt_ LPCTSTR pszSubKey)
LSTATUS None shlwapi.SHDeleteEmptyKeyW(_In_ HKEY hkey,_In_opt_ LPCTSTR pszSubKey)
LSTATUS None shlwapi.SHDeleteEmptyKeyA(_In_ HKEY hkey,_In_opt_ LPCTSTR pszSubKey)
SerializableAttribute None None.ComVisibleAttribute(true None None)
int None None._utime(const char *filename,struct _utimbuf *times)
public void None.CopyTo(DataKey[] array None,int index None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
public int None.EndRead(IAsyncResult asyncResult None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
public None None.ConditionalAttribute(string conditionString None)
public void None.Lock(long position None,long length None)
Private Sub None.SerializeDataSet(filename As String)
public string None.ToString(string format None,IFormatProvider formatProvider None)
object None None.GetFormat(Type formatType None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
public void None.Delete(bool recursive None)
HKEY None shlwapi.SHRegDuplicateHKey(_In_ HKEY hkey)
int None None.strcmp(const char *string1,const char *string2)
SerializableAttribute None None.ComVisibleAttribute(true None None)
size_t None None.strxfrm(char *strDest None,const char *strSource,size_t count None)
int None None._futime(int fd None,struct _utimbuf *filetime)
LSTATUS None shlwapi.SHRegSetUSValue(_In_ LPCTSTR pszSubKey,_In_ LPCTSTR pszValue,_In_ DWORD dwType,_In_opt_ LPVOID *pvData,_In_opt_ DWORD cbData,_In_opt_ DWORD dwFlags)
LSTATUS None shlwapi.SHRegSetUSValueW(_In_ LPCTSTR pszSubKey,_In_ LPCTSTR pszValue,_In_ DWORD dwType,_In_opt_ LPVOID *pvData,_In_opt_ DWORD cbData,_In_opt_ DWORD dwFlags)
LSTATUS None shlwapi.SHRegSetUSValueA(_In_ LPCTSTR pszSubKey,_In_ LPCTSTR pszValue,_In_ DWORD dwType,_In_opt_ LPVOID *pvData,_In_opt_ DWORD cbData,_In_opt_ DWORD dwFlags)
int None None._getpid(void None None)
long None None.atol(const char *str)
static void None.DisplayFileSystemInfoAttributes(FileSystemInfo fsi None)
public void None.AddValue(string name None,float value None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
int None None.ComparisonT(T x None,T y None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
public None None.ArgumentOutOfRangeException(string paramName None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
static void None.ReadText(TextReader textReader None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
SerializableAttribute FlagsAttribute None.ComVisibleAttribute(true None None)
int None None._atodbl(_CRT_DOUBLE * value,char * str)
SerializableAttribute None None.ComVisibleAttribute(true None None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
delegate int None.del(int i None)
public bool None.Wait(int millisecondsTimeout None,CancellationToken cancellationToken None)
static void None.DisplayFileSystemInfoAttributes(FileSystemInfo fsi None)
public boolean None.Equals(Object obj None)
public None None.ExternalException(string message None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
sbyte None None.ToSByte(IFormatProvider provider None)
public IEnumerableDirectoryInfo None.EnumerateDirectories(string searchPattern None)
public boolean None.Equals(Object obj None)
public None None.ExternalException(string message None)
public None None.FileStream(string path None,FileMode mode None,FileAccess access None,FileShare share None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
public Object None.CreateInstanceAndUnwrap(string assemblyName None,string typeName None,Object[] activationAttributes None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
public None None.DateTime(int year None,int month None,int day None,int hour None,int minute None,int second None,DateTimeKind kind None)
protected void None.OnDeleted(FileSystemEventArgs e None)
public None None.DateTime(int year None,int month None,int day None,int hour None,int minute None,int second None)
public None None.InvalidEnumArgumentException(string argumentName None,int invalidValue None,Type enumClass None)
static void None.ReadText(TextReader textReader None)
static char None.GetFirstCharacter(String s None)
SerializableAttribute None None.AttributeUsageAttribute(AttributeTargets.All None None,Inherited=true None None,AllowMultiple=false None None)
public None None.InvalidEnumArgumentException(string message None,Exception innerException None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
int None None._stricmp(const char *string1,const char *string2)
public TaskTResult None.ContinueWithTResult(FuncTask None None, object None None, TResult continuationFunction None,object state None,TaskContinuationOptions continuationOptions None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
Object None None.GetFormat(Type formatType None)
public None None.ArgumentException(string message None,Exception innerException None)
SerializableAttribute None None.AttributeUsageAttribute(AttributeTargets.Assembly|AttributeTargets.Class|AttributeTargets.Struct|AttributeTargets.Constructor|AttributeTargets.Method None None,AllowMultiple=true None None,Inherited=false None None)
public void None.CopyTo(DataKey[] array None,int index None)
public None None.PathTooLongException(string message None,Exception innerException None)
size_t None None._CrtSetDebugFillThreshold(size_t _NewThreshold None)
unsigned int None._mbctohira(unsigned int c)
SerializableAttribute None None.ComVisibleAttribute(true None None)
double None None.exp(double x None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
public void None.AddValue(string name None,float value None)
static void None.DisplayFileSystemInfoAttributes(FileSystemInfo fsi None)
public None None.EventLog(string logName None)
public int None.LastIndexOf(string value None,int startIndex None)
public None None.EntryWrittenEventArgs(EventLogEntry entry None)
public None None.DateTime(int year None,int month None,int day None,int hour None,int minute None,int second None)
public None None.EventLog(string logName None)
int None None.CompareTo(object obj None)
public None None.UriBuilder(Uri uri None)
protected None None.ArgumentOutOfRangeException(SerializationInfo info None,StreamingContext context None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
public int None.CompareTo(bool value None)
static void None.ReadText(TextReader textReader None)
public FieldInfo None.GetField(string name None)
public None None.EventLog(string logName None)
public None None.InvalidEnumArgumentException(string message None,Exception innerException None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
public string None.ToString(string format None,IFormatProvider provider None)
public None None.ArgumentOutOfRangeException(string message None,Exception innerException None)
static void None.DisplayFileSystemInfoAttributes(FileSystemInfo fsi None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
SerializableAttribute None None.AttributeUsageAttribute(AttributeTargets.Assembly|AttributeTargets.Class|AttributeTargets.Struct|AttributeTargets.Constructor|AttributeTargets.Method None None,AllowMultiple=true None None,Inherited=false None None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
static void None.DisplayFileSystemInfoAttributes(FileSystemInfo fsi None)
DWORD None shlwapi.SHQueryValueEx(_In_ HKEY hkey,_In_opt_ LPCTSTR pszValue,LPDWORD pdwReserved None,_Out_opt_ LPDWORD pdwType,_Out_opt_ LPVOID pvData,_Inout_opt_ LPDWORD pcbData)
DWORD None shlwapi.SHQueryValueExW(_In_ HKEY hkey,_In_opt_ LPCTSTR pszValue,LPDWORD pdwReserved None,_Out_opt_ LPDWORD pdwType,_Out_opt_ LPVOID pvData,_Inout_opt_ LPDWORD pcbData)
DWORD None shlwapi.SHQueryValueExA(_In_ HKEY hkey,_In_opt_ LPCTSTR pszValue,LPDWORD pdwReserved None,_Out_opt_ LPDWORD pdwType,_Out_opt_ LPVOID pvData,_Inout_opt_ LPDWORD pcbData)
SerializableAttribute None None.ComVisibleAttribute(true None None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
public string None.ToString(string format None,IFormatProvider provider None)
static void None.DisplayFileSystemInfoAttributes(FileSystemInfo fsi None)
int None None._memicmp(const void *buf1,const void *buf2,size_t count None)
int None None.isleadbyte(int c None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
public Uri None.MakeRelativeUri(Uri uri None)
SerializableAttribute None None.ClassInterfaceAttribute(ClassInterfaceType.AutoDual None None)
SerializableAttribute None None.ComVisibleAttribute(false None None)
ulong None None.ToUInt64(IFormatProvider provider None)
static void None.DisplayFileSystemInfoAttributes(FileSystemInfo fsi None)
public None None.EventLog(string logName None)
public None None.ContentPropertyAttribute(string name None)
public int None.LastIndexOf(string value None,int startIndex None,int count None,StringComparison comparisonType None)
public None None.PathTooLongException(string message None,Exception innerException None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
size_t None None.strcspn(const char *str,const char *strCharSet)
SerializableAttribute None None.ComVisibleAttribute(true None None)
LSTATUS None shlwapi.SHRegEnumUSValue(_In_ HUSKEY hUSKey,_In_ DWORD dwIndex,_Out_ LPTSTR pszValueName,_Inout_ LPDWORD pcchValueNameLen,_Out_opt_ LPDWORD pdwType,_Out_opt_ void *pvData,_Inout_opt_ LPDWORD pcbData,_In_ SHREGENUM_FLAGS enumRegFlags)
LSTATUS None shlwapi.SHRegEnumUSValueW(_In_ HUSKEY hUSKey,_In_ DWORD dwIndex,_Out_ LPTSTR pszValueName,_Inout_ LPDWORD pcchValueNameLen,_Out_opt_ LPDWORD pdwType,_Out_opt_ void *pvData,_Inout_opt_ LPDWORD pcbData,_In_ SHREGENUM_FLAGS enumRegFlags)
LSTATUS None shlwapi.SHRegEnumUSValueA(_In_ HUSKEY hUSKey,_In_ DWORD dwIndex,_Out_ LPTSTR pszValueName,_Inout_ LPDWORD pcchValueNameLen,_Out_opt_ LPDWORD pdwType,_Out_opt_ void *pvData,_Inout_opt_ LPDWORD pcbData,_In_ SHREGENUM_FLAGS enumRegFlags)
public Task None.ContinueWith(ActionTaskTResult None None, object continuationAction None,object state None,TaskContinuationOptions continuationOptions None)
public None None.InvalidOperationException(string message None)
static void None.DisplayFileSystemInfoAttributes(FileSystemInfo fsi None)
sbyte None None.ToSByte(IFormatProvider provider None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
Object None None.GetFormat(Type formatType None)
int None None.isprint(int c None)
static void None.DisplayFileSystemInfoAttributes(FileSystemInfo fsi None)
public None None.SqlMoney(int value None)
public void None.WriteEntry(string message None,EventLogEntryType type None,int eventID None)
public string None.Insert(int startIndex None,string value None)
int None None.ToInt32(IFormatProvider provider None)
public None None.ArgumentOutOfRangeException(string message None,Exception innerException None)
public int None.CompareTo(object value None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
public Object None.CreateInstanceAndUnwrap(string assemblyName None,string typeName None,Object[] activationAttributes None)
SerializableAttribute FlagsAttribute None.ComVisibleAttribute(true None None)
LSTATUS None shlwapi.SHRegCloseUSKey(_In_ HUSKEY hUSKey)
SerializableAttribute None None.ComVisibleAttribute(true None None)
int None None.ComparisonT(T x None,T y None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
public string None.ToString(string format None,IFormatProvider provider None)
public None None.InvalidEnumArgumentException(string message None,Exception innerException None)
public string None.ToString(string format None,IFormatProvider provider None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
public None None.EventLog(string logName None)
errno_t None None._mbsnbset_s(unsigned char *str,size_t size None,unsigned int c,size_t count None)
size_t None None.strnlen(const char *str,size_t numberOfElements None)
static void None.EndReadCallback(IAsyncResult asyncResult None)
static void None.DisplayFileSystemInfoAttributes(FileSystemInfo fsi None)
public Task None.ContinueWith(ActionTask continuationAction None)
public None None.CultureInfo(int culture None,bool useUserOverride None)
public None None.EventLog(string logName None)
public int None.LastIndexOf(string value None,int startIndex None,int count None,StringComparison comparisonType None)
public string None.TrimEnd(params char[] trimChars)
bool None None.__uncaught_exception( None None)
public Uri None.MakeRelativeUri(Uri uri None)
size_t None None.mbstowcs(wchar_t *wcstr None,const char *mbstr,size_t count None)
public string None.Insert(int startIndex None,string value None)
HRESULT None None.GetErrors([in] REFIID riid,[out None None,retval] void **ppParseErrors)
object None None.InvokeMember(string name None,BindingFlags invokeAttr None,Binder binder None,object target None,object[] args None,ParameterModifier[] modifiers None,CultureInfo culture None,string[] namedParameters None)
errno_t None None._strlwr_s(char *str None,size_t numberOfElements None)
public None None.SqlMoney(int value None)
LSTATUS None shlwapi.SHRegCloseUSKey(_In_ HUSKEY hUSKey)
protected void None.OkToInteger_Click(object sender None,EventArgs e None)
public boolean None.ContainsKey(Object key None)
public None None.Task(Funcobject None None, TResult function None,object state None,CancellationToken cancellationToken None,TaskCreationOptions creationOptions None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
public TimeSpan None.GetUtcOffset(DateTime dateTime None)
protected void None.SetHandle(IntPtr handle None)
public boolean None.Contains(Object key None)
protected short None.BaseGetIndex(object ctl None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
public string None.GetEraName(int era None)
int None None.ToInt32(IFormatProvider provider None)
static char None.GetFirstCharacter(String s None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
int None None.ComparisonT(T x None,T y None)
int None None.ComparisonT(T x None,T y None)
public string None.ToString(string format None,IFormatProvider provider None)
If None None.TypeOf(arg None None)
public void None.WriteEntry(string message None,EventLogEntryType type None)
public int None.CompareTo(object value None)
public TimeSpan None.GetUtcOffset(DateTime dateTime None)
private void None.FindInDictionary(string symbol None)
public None None.CultureInfo(int culture None)
public None None.Task(FuncObject None None,TResult function None,Object state None,CancellationToken cancellationToken None,TaskCreationOptions creationOptions None)
public None None.ArgumentOutOfRangeException(string message None,Exception innerException None)
SerializableAttribute None None.ClassInterfaceAttribute(ClassInterfaceType.None None None)
LSTATUS None shlwapi.SHSetValue(_In_ HKEY hkey,_In_opt_ LPCTSTR pszSubKey,_In_opt_ LPCTSTR pszValue,_In_ DWORD dwType,_In_opt_ LPCVOID pvData,_In_ DWORD cbData)
LSTATUS None shlwapi.SHSetValueW(_In_ HKEY hkey,_In_opt_ LPCTSTR pszSubKey,_In_opt_ LPCTSTR pszValue,_In_ DWORD dwType,_In_opt_ LPCVOID pvData,_In_ DWORD cbData)
LSTATUS None shlwapi.SHSetValueA(_In_ HKEY hkey,_In_opt_ LPCTSTR pszSubKey,_In_opt_ LPCTSTR pszValue,_In_ DWORD dwType,_In_opt_ LPCVOID pvData,_In_ DWORD cbData)
protected short None.BaseGetIndex(object ctl None)
static void None.Main(string[] args None)
errno_t None None.strcpy_s(char *strDestination None,size_t numberOfElements None,const char *strSource)
public string None.ToString(string format None,IFormatProvider provider None)
errno_t None None._mbsnbset_s(unsigned char *str,size_t size None,unsigned int c,size_t count None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
public None None.ArgumentOutOfRangeException(string paramName None,object actualValue None,string message None)
public None None.FileStream(string path None,FileMode mode None,FileAccess access None,FileShare share None,int bufferSize None,bool useAsync None)
public None None.SafeFileHandle(IntPtr preexistingHandle None,bool ownsHandle None)
public object None.GetFormat(Type formatType None)
public Task None.ContinueWith(ActionTask continuationAction None)
public void None.WriteEntry(string message None,EventLogEntryType type None)
char None None.ToChar(IFormatProvider provider None)
public bool None.StartsWith(string value None)
int None None._getch_nolock(void None None)
ulong None None.ToUInt64(IFormatProvider provider None)
decimal None None.ToDecimal(IFormatProvider provider None)
Object None None.GetFormat(Type formatType None)
string None None.Format(string format None,Object arg None,IFormatProvider formatProvider None)
LSTATUS None shlwapi.SHRegDeleteEmptyUSKey(_In_ HUSKEY hUSKey,_In_ LPCSTR pszValue,_In_ SHREGDEL_FLAGS delRegFlags)
LSTATUS None shlwapi.SHRegDeleteEmptyUSKeyW(_In_ HUSKEY hUSKey,_In_ LPCSTR pszValue,_In_ SHREGDEL_FLAGS delRegFlags)
LSTATUS None shlwapi.SHRegDeleteEmptyUSKeyA(_In_ HUSKEY hUSKey,_In_ LPCSTR pszValue,_In_ SHREGDEL_FLAGS delRegFlags)
SerializableAttribute None None.ComVisibleAttribute(true None None)
public int None.LastIndexOf(string value None,int startIndex None,int count None,StringComparison comparisonType None)
public None None.FileStream(string path None,FileMode mode None,FileAccess access None,FileShare share None,int bufferSize None,bool useAsync None)
int None None.CompareTo(Object obj None)
public None None.CultureNotFoundException(string message None,int invalidCultureId None,Exception innerException None)
int None None.mbtowc(wchar_t *wchar None,const char *mbchar,size_t count None)
public object None.GetFormat(Type formatType None)
public int None.ShiftAndWrap(int value None,int positions None)
public string None.TrimEnd(params char[] trimChars)
errno_t None None.strcat_s(char *strDestination None,size_t numberOfElements None,const char *strSource)
protected void None.SetHandle(IntPtr handle None)
public int None.LastIndexOf(String source None,char value None,int startIndex None,int count None)
private void None.Form1_Load(object sender None,System.EventArgs e None)
public None None.ArgumentOutOfRangeException(string paramName None,object actualValue None,string message None)
decimal None None.ToDecimal(IFormatProvider provider None)
public None None.Decimal(int[] bits None)
public TimeSpan None.GetUtcOffset(DateTime dateTime None)
static void None.DisplayFileSystemInfoAttributes(FileSystemInfo fsi None)
static char None.GetFirstCharacter(String s None)
ushort None None.ToUInt16(IFormatProvider provider None)
static void None.DisplayFileSystemInfoAttributes(FileSystemInfo fsi None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
static void None.Main(string[] args None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
char None None.ToChar(IFormatProvider provider None)
public void None.CopyTo(int sourceIndex None,char[] destination None,int destinationIndex None,int count None)
static void None.EndReadCallback(IAsyncResult asyncResult None)
protected boolean None.KeyEquals(Object item None,Object key None)
static void None.Main(string[] args None)
private void None.FindInDictionary(string symbol None)
public None None.CultureInfo(int culture None,bool useUserOverride None)
int None None.sprintf_s(char *buffer None,size_t sizeOfBuffer None,const char *format,... None None)
public bool None.StartsWith(string value None,bool ignoreCase None,CultureInfo culture None)
public bool None.ContainsKey(TKey key None)
public TimeSpan None.GetUtcOffset(DateTimeOffset dateTimeOffset None)
private void None.OutputLabels(DataTable dt None)
public bool None.Signal(int signalCount None)
public None None.CultureInfo(string name None,bool useUserOverride None)
public None None.ArgumentOutOfRangeException(string paramName None,Object actualValue None,string message None)
public DateTime None.AddTicks(long value None)
DateTime None None.ToDateTime(IFormatProvider provider None)
public string None.ToString(string format None)
static void None.Main(string[] args None)
public None None.DateTime(int year None,int month None,int day None,int hour None,int minute None,int second None,int millisecond None,Calendar calendar None)
public DirectorySecurity None.GetAccessControl(AccessControlSections includeSections None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
object None None.ToType(Type conversionType None,IFormatProvider provider None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
public void None.SetAccessControl(DirectorySecurity directorySecurity None)
public DateTime None.AddMilliseconds(double value None)
protected Object None.GetService(Type service None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
int None None.CompareTo(Object obj None)
protected void None.OkToLong_Click(object sender None,EventArgs e None)
object None None.GetFormat(Type formatType None)
static bool None.IsFileURI(String path None)
public int None.ShiftAndWrap(int value None,int positions None)
private void None.Form1_Load(object sender None,System.EventArgs e None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
static char None.GetFirstCharacter(String s None)
ulong None None.ToUInt64(IFormatProvider provider None)
static void None.Main(string[] args None)
public None None.Dictionary(IDictionaryTKey None None, TValue dictionary None,IEqualityComparerTKey comparer None)
uint None None.ToUInt32(IFormatProvider provider None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
public int None.ShiftAndWrap(int value None,int positions None)
public None None.CultureInfo(int culture None,bool useUserOverride None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
protected Object None.GetService(Type service None)
decimal None None.ToDecimal(IFormatProvider provider None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
static void None.EndWriteCallback(IAsyncResult asyncResult None)
public None None.DateTime(int year None,int month None,int day None,int hour None,int minute None,int second None)
public int None.LastIndexOf(string value None)
int None None.islower(int c None)
public bool None.ContainsKey(TKey key None)
int None None.mbtowc(wchar_t *wchar None,const char *mbchar,size_t count None)
SerializableAttribute None None.AttributeUsageAttribute(AttributeTargets.Assembly|AttributeTargets.Class|AttributeTargets.Struct|AttributeTargets.Constructor|AttributeTargets.Method|AttributeTargets.Delegate None None,AllowMultiple=true None None,Inherited=false None None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
DateTime None None.ToDateTime(IFormatProvider provider None)
string None None.Format(string format None,Object arg None,IFormatProvider formatProvider None)
static void None.Main(string[] args None)
void None None.formatMarginsMenuItem_Click(object sender None,RoutedEventArgs e None)
private void None.Form1_Load(object sender None,System.EventArgs e None)
public int None.FindIndex(PredicateT match None)
static void None.Main(string[] args None)
public None None.ArgumentOutOfRangeException(string paramName None,Object actualValue None,string message None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
public string None.ToString(IFormatProvider formatProvider None)
protected void None.SetHandle(IntPtr handle None)
public string None.ToString(string format None)
static void None.Main(string[] args None)
public DateTime None.AddMinutes(double value None)
void None None.Remove(IComponent component None)
public int None.ShiftAndWrap(int value None,int positions None)
SerializableAttribute None None.ClassInterfaceAttribute(ClassInterfaceType.None None None)
public void None.DefaultAuthentication_OnAuthenticate(object sender None,DefaultAuthenticationEventArgs args None)
int None None.ComparisonT(T x None,T y None)
public int None.ShiftAndWrap(int value None,int positions None)
public void None.SetPublicKeyToken(byte[] publicKeyToken None)
public DateTime None.Add(TimeSpan value None)
public int None.IndexOfAny(char[] anyOf None)
static int None.Main(string[] args None)
public None None.DateTime(int year None,int month None,int day None,int hour None,int minute None,int second None)
public int None.CompareTo(object value None)
public None None.CultureInfo(int culture None,bool useUserOverride None)
string None None.ToString(string format None,IFormatProvider formatProvider None)
void None None.CopyTo(Array array None,int index None)
public void None.Insert(int index None,T item None)
public string None.ToString(string format None,IFormatProvider provider None)
public void None.SetAccessControl(DirectorySecurity directorySecurity None)
public bool None.CaptureTouch(TouchDevice touchDevice None)
static bool None.IsFileURI(String path None)
static bool None.IsFileURI(String path None)
public int None.GetEra(string eraName None)
static char None.GetFirstCharacter(String s None)
public None None.UriBuilder(Uri uri None)
public string None.ToString(string format None,IFormatProvider provider None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
public bool None.TryGetValue(TKey key None,out TValue value)
SerializableAttribute None None.ComVisibleAttribute(true None None)
public bool None.ContainsValue(TValue value None)
static char None.GetFirstCharacter(String s None)
public int None.FindIndex(PredicateT match None)
public None None.UriBuilder(Uri uri None)
static void None.CreateEventSourceSample1(string messageFile None)
public bool None.IsNormalized(NormalizationForm normalizationForm None)
public None None.Task(FuncTResult function None,CancellationToken cancellationToken None)
public void None.RemoveAt(int index None)
static char None.GetFirstCharacter(String s None)
SerializableAttribute None None.ClassInterfaceAttribute(ClassInterfaceType.AutoDispatch None None)
public bool None.Equals(bool obj None)
public string None.ToString(string format None,IFormatProvider provider None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
public string None.ToString(string format None,IFormatProvider provider None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
public None None.CultureInfo(int culture None,bool useUserOverride None)
public None None.CultureInfo(int culture None)
static char None.GetFirstCharacter(String s None)
static char None.GetFirstCharacter(String s None)
ushort None None.ToUInt16(IFormatProvider provider None)
public int None.ShiftAndWrap(int value None,int positions None)
static char None.GetFirstCharacter(String s None)
public bool None.Wait(TimeSpan timeout None)
public object None.ConvertFromInvariantString(ITypeDescriptorContext context None,string text None)
public bool None.Equals(CancellationToken other None)
public StringBuilder None.AppendFormat(string format None,object arg0 None)
string None None.Format(string format None,Object arg None,IFormatProvider formatProvider None)
public int None.IndexOf(PropertyDescriptor value None)
int None None.ComparisonT(T x None,T y None)
public void None.DefaultAuthentication_OnAuthenticate(object sender None,DefaultAuthenticationEventArgs args None)
public int None.ShiftAndWrap(int value None,int positions None)
protected MarshalByRefObject None.MemberwiseClone(bool cloneIdentity None)
public bool None.CanConvertFrom(Type sourceType None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
public string None.Insert(int startIndex None,string value None)
public string None.GetAbbreviatedDayName(DayOfWeek dayofweek None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
public void None.DrawVisualStyleElementHeaderItem1(PaintEventArgs e None)
public None None.UriBuilder(Uri uri None)
public DateTime None.AddYears(int value None)
static bool None.IsFileURI(String path None)
public int None.LastIndexOfAny(char[] anyOf None)
public None None.AssemblySignatureKeyAttribute(string publicKey None,string countersignature None)
public int None.IndexOfAny(char[] anyOf None)
long None None.ToInt64(IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
private void None.Form1_Load(object sender None,EventArgs e None)
public None None.EventLog(string logName None,string machineName None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
public StringBuilder None.AppendFormat(string format None,params Object[] args)
SerializableAttribute None None.ComVisibleAttribute(true None None)
public None None.DateTime(long ticks None)
public StringBuilder None.AppendFormat(string format None,object arg0 None)
public None None.AggregateException(string message None)
public void None.PushRange(T[] items None)
public None None.UriBuilder(Uri uri None)
public None None.HMACSHA1(byte[] key None)
public int None.ShiftAndWrap(int value None,int positions None)
public string None.ConvertToString(object value None)
public string None.ToString(string format None,IFormatProvider provider None)
public DateTime None.AddSeconds(double value None)
private void None.MaskedTextBox1_IsOverwriteModeChanged(Object sender None,EventArgs e None)
public string None.ToString(string format None,IFormatProvider provider None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
public None None.HMACSHA1(byte[] key None)
public int None.IndexOf(PropertyDescriptor value None)
public void None.PushRange(T[] items None)
public string None.ConvertToString(object value None)
public DateTime None.AddYears(int value None)
public string None.Remove(int startIndex None)
public None None.HMACSHA1(byte[] key None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
public XNamespace None.GetNamespaceOfPrefix(string prefix None)
public bool None.Equals(string value None)
string None None.Format(string format None,object arg None,IFormatProvider formatProvider None)
void None None.CopyTo(Array array None,int index None)
public DateTime None.AddMinutes(double value None)
public string None.Insert(int startIndex None,string value None)
public string None.ToString(IFormatProvider provider None)
static bool None.IsFileURI(String path None)
public None None.String(char[] value None)
static char None.GetFirstCharacter(String s None)
public void None.Rollback(IDictionary savedState None)
public None None.AggregateException(string message None)
public int None.IndexOf(string value None,int startIndex None)
static char None.GetFirstCharacter(String s None)
public string None.ToString(string format None,IFormatProvider provider None)
static bool None.IsFileURI(String path None)
public void None.PushRange(T[] items None)
public int None.LastIndexOfAny(char[] anyOf None)
public DateTime None.AddMinutes(double value None)
public string None.GetAbbreviatedEraName(int era None)
public void None.DrawVisualStyleElementExplorerBarHeaderBackground1(PaintEventArgs e None)
public string None.ToString(string format None)
public bool None.Equals(double obj None)
public None None.String(char c None,int count None)
static bool None.IsFileURI(String path None)
public DateTime None.AddMinutes(double value None)
public void None.Sort(ComparisonT comparison None)
static bool None.IsFileURI(String path None)
public None None.DateTime(int year None,int month None,int day None)
public StringBuilder None.Append(int value None)
public void None.AddEventHandler(Object target None,Delegate handler None)
static int None.Main(string[] args None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
private void None.TextBoxBase1_HideSelectionChanged(Object sender None,EventArgs e None)
public string None.Normalize(NormalizationForm normalizationForm None)
SerializableAttribute None None.ClassInterfaceAttribute(ClassInterfaceType.None None None)
static char None.GetFirstCharacter(String s None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
public None None.String(char c None,int count None)
public string None.ToString(IFormatProvider provider None)
static char None.GetFirstCharacter(String s None)
static char None.GetFirstCharacter(String s None)
public int None.IndexOf(char value None)
private void None.Control1_StyleChanged(Object sender None,EventArgs e None)
public int None.IndexOfAny(char[] anyOf None,int startIndex None)
static int None.Main(string[] args None)
public string None.Substring(int startIndex None)
public int None.CompareTo(DateTime value None)
public string None.PadRight(int totalWidth None)
public None None.XDocumentType(string name None,string publicId None,string systemId None,string internalSubset None)
public string None.Insert(int startIndex None,string value None)
public string None.ToString(string format None,IFormatProvider provider None)
public DateTime None.AddMonths(int months None)
protected None None.ResourceReferenceKeyNotFoundException(SerializationInfo info None,StreamingContext context None)
public None None.String(char c None,int count None)
public string None.ToString(string format None)
public void None.Invalidate(Rectangle rc None)
public PropertyDescriptorCollection None.GetProperties(ITypeDescriptorContext context None,object value None)
protected void None.UpdateBounds(int x None,int y None,int width None,int height None)
static bool None.IsFileURI(String path None)
static bool None.IsFileURI(String path None)
public void None.Remove(DataRow row None)
public bool None.IsBefore(XNode node None)
private void None.CommonClickHandler(object sender None,RoutedEventArgs e None)
int None None.ispunct(int c None)
public None None.ArgumentOutOfRangeException(string message None,Exception innerException None)
public None None.CultureInfo(string name None)
public StringBuilder None.AppendFormat(string format None,object arg0 None)
public bool None.Contains(PropertyDescriptor value None)
private void None.Splitter1_SplitterMoving(Object sender None,SplitterEventArgs e None)
public string None.ToString(string format None,IFormatProvider provider None)
static bool None.IsFileURI(String path None)
public bool None.Equals(object x None,object y None)
static bool None.IsFileURI(String path None)
public DateTime None.Subtract(TimeSpan value None)
public string None.Replace(char oldChar None,char newChar None)
int None None.ispunct(int c None)
byte None None.ToByte(IFormatProvider provider None)
public string None.Insert(int startIndex None,string value None)
public DateTime None.AddHours(double value None)
protected None None.EventDescriptor(MemberDescriptor descr None)
public string None.ToString(IFormatProvider provider None)
public int None.CompareTo(object obj None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
public void None.ConvertDoubleByte(double doubleVal None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
protected void None.OnPagePreLoad(Object sender None,EventArgs e None)
public void None.ReportProgress(int percentProgress None)
public void None.ConvertDoubleDecimal(decimal decimalVal None)
bool None None.Equals(object x None,object y None)
private void None.ToolStripRenderer1_RenderSplitButtonBackground(Object sender None,ToolStripItemRenderEventArgs e None)
private void None.backgroundWorker1_DoWork(object sender None,DoWorkEventArgs e None)
public object None.Deserialize(Stream serializationStream None)
void None None.SetData(string format None,bool autoConvert None,object data None)
public string None.ToTitleCase(string str None)
int None None.ispunct(int c None)
static bool None.IsFileURI(String path None)
static bool None.IsFileURI(String path None)
public string None.ToString(string format None)
private void None.Form1_Load(object sender None,System.EventArgs e None)
public int None.LogicalToDeviceUnits(int value None)
private void None.comboBox1_SelectedIndexChanged(Object sender None,EventArgs e None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
Display using None.current(en-us None None)
void None None.EventHandler(object sender None,EventNameEventArgs e None)
static char None.GetFirstCharacter(String s None)
public void None.CopyTo(int sourceIndex None,char[] destination None,int destinationIndex None,int count None)
public string None.ToString(string format None)
public int None.CompareTo(object obj None)
static bool None.IsFileURI(String path None)
public string None.GetAbbreviatedEraName(int era None)
public int None.CompareTo(object obj None)
public string None.Substring(int startIndex None)
public bool None.Equals(TimeSpan obj None)
private void None.comboBox1_SelectedIndexChanged(Object sender None,EventArgs e None)
public None None.XElement(XName name None,object content None)
int None None.ispunct(int c None)
public None None.XAttribute(XName name None,object value None)
public void None.ConvertDoubleByte(double doubleVal None)
public TimeSpan None.Subtract(DateTime value None)
public string None.ToString(IFormatProvider provider None)
public int None.CompareTo(object obj None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
public int None.IndexOf(string value None,int startIndex None,int count None)
static bool None.IsFileURI(String path None)
public int None.LastIndexOf(string value None,int startIndex None,int count None,StringComparison comparisonType None)
public string None.Remove(int startIndex None,int count None)
public None None.DateTime(int year None,int month None,int day None,int hour None,int minute None,int second None,Calendar calendar None)
public void None.ConvertDoubleDecimal(decimal decimalVal None)
public string None.GetAbbreviatedEraName(int era None)
private void None.currencyTextBox_TextChanged(object sender None,EventArgs e None)
public None None.Task(Actionobject action None,object state None)
public string None.ToUpper(CultureInfo culture None)
public string None.Insert(int startIndex None,string value None)
public string None.ToString(string format None,IFormatProvider provider None)
public int None.CompareTo(object obj None)
public string None.ToString(string format None,IFormatProvider provider None)
public DateTime None.Subtract(TimeSpan value None)
private void None.textBox1_Validating(object sender None,System.ComponentModel.CancelEventArgs e None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
public int None.CompareTo(Object value None)
public void None.ConvertDoubleByte(double doubleVal None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
public void None.AddAfterSelf(object content None)
public int None.GetDayOfMonth(DateTime time None)
byte None None.ToByte(IFormatProvider provider None)
protected void None.OnPageIndexChanged(DataGridPageChangedEventArgs e None)
decimal None None.ToDecimal(IFormatProvider provider None)
private void None.SplitContainer1_SplitterMoving(Object sender None,SplitterCancelEventArgs e None)
public None None.Task(Actionobject action None,object state None)
public string None.ToString(IFormatProvider provider None)
public void None.AddFirst(params object[] content)
public void None.ApplyAnimationClock(DependencyProperty dp None,AnimationClock clock None)
public None None.XElement(XName name None,params object[] content)
public None None.XAttribute(XName name None,object value None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public TimeSpan None.Subtract(DateTime value None)
private void None.changeThickness(object sender None,SelectionChangedEventArgs args None)
static bool None.IsFileURI(String path None)
public None None.BigInteger(long value None)
protected void None.OnLostFocus(EventArgs e None)
public None None.DateTime(int year None,int month None,int day None,int hour None,int minute None,int second None,Calendar calendar None)
public int None.CompareTo(object obj None)
public void None.CopyTo(Stream destination None)
public DateTime None.AddDays(double value None)
public None None.XAttribute(XName name None,object value None)
public IEnumerableXElement None.ElementsBeforeSelf(XName name None)
public None None.Localizable(true None None)
private void None.MaskedTextBox1_MaskInputRejected(Object sender None,MaskInputRejectedEventArgs e None)
public int None.CompareTo(Object obj None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public None None.BigInteger(long value None)
public int None.CompareTo(object value None)
private void None.textBox1_Validating(object sender None,System.ComponentModel.CancelEventArgs e None)
public int None.CompareTo(float value None)
public void None.SetBounds(int x None,int y None,int width None,int height None,BoundsSpecified specified None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
public int None.IndexOfAny(char[] anyOf None,int startIndex None,int count None)
protected void None.OkToDouble_Click(object sender None,EventArgs e None)
public string None.ToString(IFormatProvider provider None)
public void None.SetMethodBody(byte[] il None,int maxStack None,byte[] localSignature None,IEnumerableExceptionHandler exceptionHandlers None,IEnumerableint tokenFixups None)
protected void None.OnIsKeyboardFocusWithinChanged(DependencyPropertyChangedEventArgs e None)
public None None.DateTime(int year None,int month None,int day None,int hour None,int minute None,int second None,int millisecond None,Calendar calendar None,DateTimeKind kind None)
public None None.BigInteger(long value None)
private void None.currencyTextBox_TextChanged(object sender None,EventArgs e None)
private void None.AboutDialog_Load(object sender None,EventArgs e None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
private void None.Control1_GotFocus(Object sender None,EventArgs e None)
public object None.ConvertFromString(string text None)
short None None.ToInt16(IFormatProvider provider None)
public void None.CopyTo(int index None,T[] array None,int arrayIndex None,int count None)
public None None.String(char[] value None,int startIndex None,int length None)
public int None.IndexOfAny(char[] anyOf None,int startIndex None)
public string None.ToString(string format None,IFormatProvider provider None)
public void None.ConvertDoubleByte(double doubleVal None)
public TaskTResult None.ContinueWithTResult(FuncTask None None, TResult continuationFunction None,CancellationToken cancellationToken None,TaskContinuationOptions continuationOptions None,TaskScheduler scheduler None)
void None None.textbox1_StylusDown(object sender None,StylusDownEventArgs e None)
public bool None.Wait(TimeSpan timeout None)
protected void None.InvokeOnClick(Control toInvoke None,EventArgs e None)
sbyte None None.ToSByte(IFormatProvider provider None)
public DateTime None.Subtract(TimeSpan value None)
public bool None.Equals(TimeSpan obj None)
private void None.Button_Click(object sender None,RoutedEventArgs e None)
protected void None.OnIsStylusCapturedChanged(DependencyPropertyChangedEventArgs e None)
private void None.changeThickness(object sender None,SelectionChangedEventArgs args None)
public int None.LastIndexOfAny(char[] anyOf None,int startIndex None)
protected void None.OnPreviewStylusButtonDown(StylusButtonEventArgs e None)
public double None.GetDouble(string name None)
public boolean None.IsLeapDay(int year None,int month None,int day None)
public int None.IndexOf(string value None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public TaskTResult None.ContinueWithTResult(FuncTask None None, object None None, TResult continuationFunction None,object state None,TaskScheduler scheduler None)
public None None.String(char[] value None)
public string None.ToString(string format None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
public string None.ToString(IFormatProvider provider None)
public Object None.ConvertFromString(string text None)
public string None.ToString(string format None,IFormatProvider provider None)
public int None.LastIndexOf(string value None,int startIndex None,int count None)
public int None.CompareTo(Object value None)
char None None.ToChar(IFormatProvider provider None)
public None None.String(char[] value None,int startIndex None,int length None)
protected void None.OnItemDeleted(FormViewDeletedEventArgs e None)
public None None.DateTime(int year None,int month None,int day None,int hour None,int minute None,int second None,int millisecond None,Calendar calendar None,DateTimeKind kind None)
public string None.ToString(string format None,IFormatProvider provider None)
private void None.AboutDialog_Load(object sender None,EventArgs e None)
public int None.IndexOf(char value None)
static bool None.IsFileURI(String path None)
int None None.vsprintf(char *buffer None,const char *format,va_list argptr None)
private void None.Control1_ClientSizeChanged(Object sender None,EventArgs e None)
public None None.DateTime(int year None,int month None,int day None,int hour None,int minute None,int second None,int millisecond None,Calendar calendar None,DateTimeKind kind None)
void None None.textbox1_PreviewStylusOutOfRange(object sender None,StylusEventArgs e None)
protected void None.OnInit(EventArgs e None)
public int None.LastIndexOf(char value None,int startIndex None)
protected void None.OkToDouble_Click(object sender None,EventArgs e None)
private void None.textBox1_Enter(object sender None,System.EventArgs e None)
public bool None.Equals(TimeSpan obj None)
public string None.ToString(string format None,IFormatProvider provider None)
DateTime None None.ToDateTime(IFormatProvider provider None)
public string None.ToUpper(CultureInfo culture None)
object None None.ToType(Type conversionType None,IFormatProvider provider None)
public void None.SetValue(object value None,int index1 None,int index2 None,int index3 None)
private void None.currencyTextBox_TextChanged(object sender None,EventArgs e None)
public string None.Trim(params char[] trimChars)
public int None.IndexOf(string value None)
public int None.IndexOfAny(char[] anyOf None)
public int None.IndexOf(char value None)
public DateTime None.AddDays(double value None)
public None None.OutOfMemoryException(string message None)
public string None.ToString(string format None,IFormatProvider provider None)
public None None.CancellationTokenSource(TimeSpan delay None)
static bool None.IsFileURI(String path None)
public int None.LastIndexOf(string value None,int startIndex None,int count None)
int None None.vsprintf(char *buffer None,const char *format,va_list argptr None)
private void None.cancelAsyncButton_Click(System.Object sender None,System.EventArgs e None)
public string None.Normalize(NormalizationForm normalizationForm None)
Object None None.ToType(Type conversionType None,IFormatProvider provider None)
void None None.OnClickMoveToStart(object sender None,RoutedEventArgs e None)
public int None.LastIndexOf(string value None,int startIndex None,StringComparison comparisonType None)
private void None.Control1_BackgroundImageLayoutChanged(Object sender None,EventArgs e None)
public boolean None.Equals(Object obj None)
public None None.DateTime(int year None,int month None,int day None,int hour None,int minute None,int second None,int millisecond None,Calendar calendar None,DateTimeKind kind None)
public None None.DateTime(int year None,int month None,int day None,int hour None,int minute None,int second None,int millisecond None,Calendar calendar None,DateTimeKind kind None)
private void None.Control1_ClientSizeChanged(Object sender None,EventArgs e None)
static bool None.IsFileURI(String path None)
public Point None.PointFromScreen(Point point None)
bool None None.Equals(object other None)
private void None.AboutDialog_Load(object sender None,EventArgs e None)
public object None.GetEditedFormattedValue(int rowIndex None,DataGridViewDataErrorContexts context None)
protected void None.OnFreezablePropertyChanged(DependencyObject oldValue None,DependencyObject newValue None,DependencyProperty property None)
private void None.textBox1_Enter(object sender None,System.EventArgs e None)
public CancellationTokenRegistration None.Register(Actionobject callback None,object state None,bool useSynchronizationContext None)
IImmutableListT None None.Replace(T oldValue None,T newValue None,IEqualityComparerT equalityComparer None)
void None None.AddButton(object sender None,MouseButtonEventArgs e None)
public string None.ToString(string format None,IFormatProvider provider None)
public void None.ApplyAnimationClock(DependencyProperty dp None,AnimationClock clock None,HandoffBehavior handoffBehavior None)
protected void None.OnFreezablePropertyChanged(DependencyObject oldValue None,DependencyObject newValue None,DependencyProperty property None)
public int None.IndexOf(string value None)
static bool None.IsFileURI(String path None)
public Point None.PointToScreen(Point point None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
public string None.Substring(int startIndex None,int length None)
private void None.Control1_BackgroundImageLayoutChanged(Object sender None,EventArgs e None)
public DateTime None.AddDays(double value None)
static void None.WriteTerminatedEventArgs(string eventDescription None,TrackingWorkflowTerminatedEventArgs terminatedEventArgs None,DateTime eventDataTime None)
private void None.currencyTextBox_TextChanged(object sender None,EventArgs e None)
public int None.IndexOf(string value None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.Normalize(NormalizationForm normalizationForm None)
static bool None.IsFileURI(String path None)
private void None.dataGridView1_CellBeginEdit(object sender None,DataGridViewCellCancelEventArgs e None)
public bool None.Equals(long other None)
public void None.PerformLayout(Control affectedControl None,string affectedProperty None)
static bool None.IsFileURI(String path None)
public Point None.PointToScreen(Point p None)
private void None.Button1_Click(object sender None,EventArgs MyEventArgs None)
public GeneralTransform None.TransformToVisual(Visual visual None)
private void None.currencyTextBox_TextChanged(object sender None,EventArgs e None)
private void None.Control1_ClientSizeChanged(Object sender None,EventArgs e None)
private void None.ListDragTarget_DragEnter(object sender None,System.Windows.Forms.DragEventArgs e None)
public int None.LastIndexOf(string value None,StringComparison comparisonType None)
private void None.MakeProgressBar(object sender None,RoutedEventArgs e None)
private void None.dataGridView1_CellMouseEnter(object sender None,DataGridViewCellEventArgs e None)
static bool None.IsFileURI(String path None)
public void None.DrawVisualStyleElementRebarChevron1(PaintEventArgs e None)
bool None None.Equals(object other None)
static bool None.IsFileURI(String path None)
public int None.IndexOf(string value None,int startIndex None,int count None,StringComparison comparisonType None)
public string None.ToString(string format None)
public void None.ClearValue(DependencyPropertyKey key None)
private void None.AboutDialog_Load(object sender None,EventArgs e None)
public void None.ResumeLayout(bool performLayout None)
protected void None.OnBackgroundImageLayoutChanged(EventArgs e None)
private void None.buttonNewCustomer_Click(object sender None,EventArgs e None)
public string None.ToString(string format None,IFormatProvider provider None)
private void None.dataGridView1_CellBeginEdit(object sender None,DataGridViewCellCancelEventArgs e None)
protected void None.BuildProfileTree(string parentId None,bool calcViewState None)
void None None.Page_Load(object sender None,System.EventArgs e None)
private void None.Control1_BackgroundImageLayoutChanged(Object sender None,EventArgs e None)
public void None.DrawVisualStyleElementRebarChevron1(PaintEventArgs e None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
bool None None.Equals(object other None)
public string None.ToString(string format None,IFormatProvider provider None)
public int None.IndexOf(char value None,int startIndex None,int count None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
private void None.currencyTextBox_TextChanged(object sender None,EventArgs e None)
public bool None.Equals(long other None)
static bool None.IsFileURI(String path None)
bool None None.Equals(Object other None)
protected ContentAlignment None.RtlTranslateAlignment(ContentAlignment align None)
protected void None.OnEnter(EventArgs e None)
public string None.ToString(string format None,IFormatProvider provider None)
private void None.getLayoutSlot1(object sender None,System.Windows.RoutedEventArgs e None)
public None None.CultureInfo(string name None)
public string None.ToString(IFormatProvider provider None)
public PropertyDescriptorCollection None.GetChildProperties(object instance None)
public LoopExpression None.Update(LabelTarget breakLabel None,LabelTarget continueLabel None,Expression body None)
private void None.Control1_ClientSizeChanged(Object sender None,EventArgs e None)
public void None.CopyTo(Array array None,int index None)
public None None.XmlSerializer(Type type None,string defaultNamespace None)
protected void None.ContactsListView_ItemCanceling(object sender None,ListViewCancelEventArgs e None)
private void None.ListDragTarget_DragOver(object sender None,System.Windows.Forms.DragEventArgs e None)
static bool None.IsFileURI(String path None)
protected void None.OnMouseRightButtonUp(MouseButtonEventArgs e None)
public void None.ApplyStyleSheetSkin(Page page None)
public PropertyDescriptorCollection None.GetChildProperties(Object instance None)
protected void None.InvokeGotFocus(Control toInvoke None,EventArgs e None)
public int None.LastIndexOf(char value None)
public LoopExpression None.Update(LabelTarget breakLabel None,LabelTarget continueLabel None,Expression body None)
public int None.GetYear(DateTime time None)
public void None.Serialize(XmlWriter xmlWriter None,object o None,XmlSerializerNamespaces namespaces None,string encodingStyle None)
private void None.ListDragSource_QueryContinueDrag(object sender None,System.Windows.Forms.QueryContinueDragEventArgs e None)
public None None.ContractNamespaceAttribute(string contractNamespace None)
protected void None.OnIsKeyboardFocusedChanged(DependencyPropertyChangedEventArgs e None)
void None None.Page_Load(object sender None,System.EventArgs e None)
public void None.Measure(Size availableSize None)
public None None.XmlSerializer(Type type None,string defaultNamespace None)
protected None None.DataSourceView(IDataSource owner None,string viewName None)
private void None.ListDragTarget_DragOver(object sender None,System.Windows.Forms.DragEventArgs e None)
private void None.dataGridView1_CellMouseEnter(object sender None,DataGridViewCellEventArgs e None)
public string None.ToString(string format None,IFormatProvider provider None)
protected void None.CurrentRowTextBox_OnTextChanged(object sender None,EventArgs e None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public None None.AppDomainSetup(ActivationContext activationContext None)
public object None.CreateInstance(IDictionary propertyValues None)
private void None.dataGridView1_CellClick(object sender None,DataGridViewCellEventArgs e None)
private void None.OnPredictFocus(object sender None,RoutedEventArgs e None)
public string None.PadRight(int totalWidth None)
void None None.Page_Init(object sender None,EventArgs e None)
void None None.textbox1_PreviewStylusButtonDown(object sender None,StylusButtonEventArgs e None)
public void None.ConvertStringDecimal(string stringVal None)
private void None.changeWidth(object sender None,SelectionChangedEventArgs args None)
protected void None.RemoveVisualChild(Visual child None)
private void None.WebBrowser1_DocumentCompleted(Object sender None,WebBrowserDocumentCompletedEventArgs e None)
public string None.ToString(string format None,IFormatProvider provider None)
public void None.CoerceValue(DependencyProperty dp None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public function None.ToCharArray(startIndex : int,length : int)
public void None.Serialize(XmlWriter xmlWriter None,Object o None,XmlSerializerNamespaces namespaces None,string encodingStyle None)
public string None.PadRight(int totalWidth None)
protected void None.CloneCore(Freezable sourceFreezable None)
public string None.PadRight(int totalWidth None)
public string None.ToTitleCase(string str None)
private void None.WebBrowser1_DocumentCompleted(Object sender None,WebBrowserDocumentCompletedEventArgs e None)
public void None.CoerceValue(DependencyProperty dp None)
public void None.Invalidate(Region region None)
private void None.ListDragSource_QueryContinueDrag(object sender None,System.Windows.Forms.QueryContinueDragEventArgs e None)
public int None.LastIndexOfAny(char[] anyOf None,int startIndex None,int count None)
public bool None.Contains(string value None)
protected void None.InvokeGotFocus(Control toInvoke None,EventArgs e None)
public int None.IndexOf(string value None,int startIndex None,StringComparison comparisonType None)
public string None.Insert(int startIndex None,string value None)
protected void None.EndRenderTracing(TextWriter writer None,object traceObject None)
private void None.Form1_Resize(object sender None,System.EventArgs e None)
static bool None.IsFileURI(String path None)
public bool None.Contains(string value None)
static bool None.IsFileURI(String path None)
public string None.ResolveUrl(string relativeUrl None)
public None None.XmlSerializer(Type type None,string defaultNamespace None)
void None None.RestoreDefaultProperties(object sender None,RoutedEventArgs e None)
protected void None.RemoveVisualChild(Visual child None)
public boolean None.IsInstanceOfType(Object o None)
protected void None.SetAutoSizeMode(AutoSizeMode mode None)
protected void None.RaiseMouseEvent(object key None,MouseEventArgs e None)
public object None.CreateInstanceFromAndUnwrap(string assemblyName None,string typeName None)
public void None.SetDesktopBounds(int x None,int y None,int width None,int height None)
public object None.ConvertTo(object value None,Type destinationType None)
public string None.PadRight(int totalWidth None)
public int None.GetMinute(DateTime time None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
public void None.ConvertDoubleBool(double doubleVal None)
private void None.ListDragSource_QueryContinueDrag(object sender None,System.Windows.Forms.QueryContinueDragEventArgs e None)
public PropertyDescriptorCollection None.GetChildProperties(Attribute[] filter None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
protected object None.CreateInstance(Type type None)
protected void None.RaiseBubbleEvent(object source None,EventArgs args None)
public int None.IndexOf(string value None,int startIndex None,StringComparison comparisonType None)
public None None.String(char[] value None)
public int None.LastIndexOf(char value None,int startIndex None,int count None)
public Object None.ConvertTo(Object value None,Type destinationType None)
public string None.PadRight(int totalWidth None)
static String None.IsFileURI(String path None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
void None None.PrintText(object sender None,SelectionChangedEventArgs args None)
private void None.ListDragSource_QueryContinueDrag(object sender None,System.Windows.Forms.QueryContinueDragEventArgs e None)
private void None.Form1_Load(object sender None,EventArgs e None)
protected void None.RemoveVisualChild(Visual child None)
public None None.XmlSerializer(Type type None,string defaultNamespace None)
public string None.Replace(string oldValue None,string newValue None)
public None None.ControlParameter(string name None,string controlID None)
public void None.ConvertDoubleBool(double doubleVal None)
public boolean None.IsInstanceOfType(Object o None)
public string None.GetUniqueIDRelativeTo(Control control None)
public object None.CreateInstanceFromAndUnwrap(string assemblyName None,string typeName None)
public string None.ResolveUrl(string relativeUrl None)
public object None.Deserialize(XmlReader xmlReader None)
public int None.LastIndexOf(char value None,int startIndex None,int count None)
public string None.ToString(string format None,IFormatProvider provider None)
public double None.GetMilliseconds(DateTime time None)
public string None.ToString(string format None,IFormatProvider provider None)
public bool None.Contains(string value None)
protected Size None.MeasureOverride(Size availableSize None)
public object None.FindResource(object resourceKey None)
private void None.ListDragSource_QueryContinueDrag(object sender None,System.Windows.Forms.QueryContinueDragEventArgs e None)
protected void None.InvokeLostFocus(Control toInvoke None,EventArgs e None)
private void None.Menu_Copy(System.Object sender None,System.EventArgs e None)
private void None.Control1_QueryContinueDrag(Object sender None,QueryContinueDragEventArgs e None)
private void None.ListDragSource_QueryContinueDrag(object sender None,System.Windows.Forms.QueryContinueDragEventArgs e None)
private void None.MyForm_Layout(object sender None,System.Windows.Forms.LayoutEventArgs e None)
public string None.Remove(int startIndex None,int count None)
public string None.PadRight(int totalWidth None,char paddingChar None)
public void None.ControlSetFocus(Control control None)
public void None.CopyTo(int sourceIndex None,char[] destination None,int destinationIndex None,int count None)
private void None.OnButtonKeyDown(object sender None,KeyEventArgs e None)
public string None.Substring(int startIndex None,int length None)
public string None.GetRouteUrl(object routeParameters None)
public int None.GetMinute(DateTime time None)
public string None.ToString(string format None)
public object None.ReadLocalValue(DependencyProperty dp None)
public string None.ToString(string format None,IFormatProvider provider None)
public bool None.EndsWith(string value None,bool ignoreCase None,CultureInfo culture None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public bool None.Contains(string value None)
public string None.PadRight(int totalWidth None,char paddingChar None)
public object None.FindResource(object resourceKey None)
public string None.ToString(string format None)
void None None.browserFrame_FragmentNavigation(object sender None,FragmentNavigationEventArgs e None)
public string None.ResolveUrl(string relativeUrl None)
public int None.GetWeekOfYear(DateTime time None,CalendarWeekRule rule None,DayOfWeek firstDayOfWeek None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
private void None.Control1_SystemColorsChanged(Object sender None,EventArgs e None)
public boolean None.IsInstanceOfType(Object o None)
public string None.ToString(string format None,IFormatProvider provider None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
private void None.MyForm_Layout(object sender None,System.Windows.Forms.LayoutEventArgs e None)
public int None.CompareTo(object value None)
private void None.Control1_QueryContinueDrag(Object sender None,QueryContinueDragEventArgs e None)
public string None.ToString(string format None,IFormatProvider provider None)
protected void None.InvokeLostFocus(Control toInvoke None,EventArgs e None)
public object None.GetFormat(Type formatType None)
private void None.DataGridView1_ColumnDividerDoubleClick(Object sender None,DataGridViewColumnDividerDoubleClickEventArgs e None)
private void None.Form1_Load(object sender None,EventArgs e None)
void None None.browserFrame_FragmentNavigation(object sender None,FragmentNavigationEventArgs e None)
public bool None.IsAncestorOf(DependencyObject descendant None)
public string None.ResolveUrl(string relativeUrl None)
private void None.MyForm_Layout(object sender None,System.Windows.Forms.LayoutEventArgs e None)
public int None.GetMinute(DateTime time None)
public string None.ToString(string format None,IFormatProvider provider None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
public string None.ToString(string format None,IFormatProvider provider None)
void None None.OpenCmdExecuted(object target None,ExecutedRoutedEventArgs e None)
public Object None.FindResource(Object resourceKey None)
public bool None.IsAncestorOf(DependencyObject descendant None)
private void None.Bold_Checked(object sender None,RoutedEventArgs e None)
public Object None.FindResource(Object resourceKey None)
public string None.ResolveUrl(string relativeUrl None)
public GeneralTransform None.TransformToDescendant(Visual descendant None)
private void None.MyForm_Layout(object sender None,System.Windows.Forms.LayoutEventArgs e None)
public bool None.EndsWith(string value None)
public bool None.Equals(string value None,StringComparison comparisonType None)
public int None.IndexOf(string value None,StringComparison comparisonType None)
private void None.CommonClickHandler(object sender None,RoutedEventArgs e None)
public int None.CompareTo(string strB None)
private void None.Control1_Invalidated(Object sender None,InvalidateEventArgs e None)
private void None.ListDragSource_QueryContinueDrag(object sender None,System.Windows.Forms.QueryContinueDragEventArgs e None)
public Object None.FindResource(Object resourceKey None)
public bool None.IsAncestorOf(DependencyObject descendant None)
public string None.ToString(string format None)
protected void None.SetDisplayRectLocation(int x None,int y None)
private void None.OnKeyDownHandler(object sender None,KeyEventArgs e None)
void None None.SetOwnerControl(Control owner None)
private void None.Control1_TabStopChanged(Object sender None,EventArgs e None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public int None.LastIndexOf(string value None,int startIndex None,StringComparison comparisonType None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public int None.IndexOfAny(char[] anyOf None,int startIndex None,int count None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public bool None.IsValidValue(object value None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
public Control None.LoadControl(string virtualPath None)
public int None.Next(int minValue None,int maxValue None)
short None None.ToInt16(IFormatProvider provider None)
void None None.browserFrame_FragmentNavigation(object sender None,FragmentNavigationEventArgs e None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public int None.GetHour(DateTime time None)
public void None.ScrollControlIntoView(Control activeControl None)
public Object None.FindResource(Object resourceKey None)
public string None.ToString(string format None,IFormatProvider provider None)
private void None.MyForm_Layout(object sender None,System.Windows.Forms.LayoutEventArgs e None)
public Task None.StartNew(Actionobject action None,object state None)
public Rect None.MakeVisible(Visual visual None,Rect rectangle None)
private void None.OnUIReady(object sender None,System.EventArgs e None)
public void None.ScrollControlIntoView(Control activeControl None)
short None None.ToInt16(IFormatProvider provider None)
void None None.SetDesignModeState(IDictionary data None)
public int None.IndexOfAny(char[] anyOf None,int startIndex None,int count None)
public string None.ToLower(CultureInfo culture None)
public object None.GetAnimationBaseValue(DependencyProperty dp None)
protected void None.OnPreviewGiveFeedback(GiveFeedbackEventArgs e None)
public string None.ToString(string format None,IFormatProvider provider None)
public int None.IndexOfAny(char[] anyOf None,int startIndex None,int count None)
private void None.MyForm_Layout(object sender None,System.Windows.Forms.LayoutEventArgs e None)
Dim None None.arrZ(-1 None None)
private void None.Page_Load(object sender None,System.EventArgs e None)
protected PropertyDescriptorCollection None.SortProperties(PropertyDescriptorCollection props None,string[] names None)
public void None.ScrollControlIntoView(Control activeControl None)
private void None.ListDragSource_QueryContinueDrag(object sender None,System.Windows.Forms.QueryContinueDragEventArgs e None)
public int None.IndexOfAny(char[] anyOf None,int startIndex None,int count None)
private void None.MouseDownHandler(object sender None,MouseButtonEventArgs e None)
public int None.IndexOfAny(char[] anyOf None,int startIndex None,int count None)
private void None.MyForm_Layout(object sender None,System.Windows.Forms.LayoutEventArgs e None)
public int None.IndexOf(string value None,int startIndex None,int count None)
public void None.ScrollControlIntoView(Control activeControl None)
public string None.ToString(string format None)
public string None.TrimStart(params char[] trimChars)
public Task None.FromAsync(FuncAsyncCallback None None, object None None, IAsyncResult beginMethod None,ActionIAsyncResult endMethod None,object state None)
private void None.Control1_RegionChanged(Object sender None,EventArgs e None)
public int None.IndexOf(string value None,StringComparison comparisonType None)
public string None.GetRouteUrl(string routeName None,object routeParameters None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public Task None.StartNew(Actionobject action None,object state None)
private void None.ListDragSource_QueryContinueDrag(object sender None,System.Windows.Forms.QueryContinueDragEventArgs e None)
private void None.textBox1_Validating(object sender None,System.ComponentModel.CancelEventArgs e None)
public void None.SetRenderMethodDelegate(RenderMethod renderMethod None)
public Control None.LoadControl(string virtualPath None)
private void None.DataGridView1_CellMouseClick(Object sender None,DataGridViewCellMouseEventArgs e None)
public Task None.StartNew(Actionobject action None,object state None)
public int None.IndexOf(string value None,int startIndex None,int count None)
public int None.CompareTo(string strB None)
public int None.IndexOfAny(char[] anyOf None,int startIndex None,int count None)
private void None.ScrollableControl1_Scroll(Object sender None,ScrollEventArgs e None)
private void None.Control1_RegionChanged(Object sender None,EventArgs e None)
public int None.LastIndexOf(string value None,int startIndex None,StringComparison comparisonType None)
public void None.ScrollControlIntoView(Control activeControl None)
public string None.GetRouteUrl(RouteValueDictionary routeParameters None)
public Task None.StartNew(ActionObject action None,Object state None)
public Rect None.MakeVisible(Visual visual None,Rect rectangle None)
public void None.Invoke(Action callback None,DispatcherPriority priority None,CancellationToken cancellationToken None)
private void None.MyForm_Layout(object sender None,System.Windows.Forms.LayoutEventArgs e None)
public Task None.StartNew(Actionobject action None,object state None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
double None None.ToDouble(IFormatProvider provider None)
public None None.DefaultAutoFieldGenerator(MetaTable table None)
private void None.AboutDialog_Load(object sender None,EventArgs e None)
protected void None.OnMouseEnter(EventArgs e None)
public object None.ReadLocalValue(DependencyProperty dp None)
void None None.AddParsedSubObject(object obj None)
public string None.ToString(string format None,IFormatProvider provider None)
public object None.Invoke(Delegate method None,TimeSpan timeout None,DispatcherPriority priority None,params object[] args)
public int None.CompareTo(string strB None)
public string None.ToString(string format None)
public Task None.StartNew(Actionobject action None,object state None)
protected void None.CopyProperties(DataControlField newField None)
public int None.CompareTo(long other None)
public void None.ScrollControlIntoView(Control activeControl None)
public string None.ToLower(CultureInfo culture None)
static bool None.IsFileURI(String path None)
protected void None.OnContextMenuOpening(ContextMenuEventArgs e None)
public string None.Remove(int startIndex None)
private void None.treeView1_KeyDown(object sender None,KeyEventArgs e None)
private void None.MyForm_Layout(object sender None,System.Windows.Forms.LayoutEventArgs e None)
private void None.TextBoxGotKeyboardFocus(object sender None,KeyboardFocusChangedEventArgs e None)
static void None.Main(string[] args None)
protected void None.OnMouseEnter(EventArgs e None)
private void None.AddDropDownListAfterCurrentNode(SiteMapNodeItem item None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
static void None.Main(string[] args None)
public TaskTResult None.StartNewTResult(Funcobject None None, TResult function None,object state None,CancellationToken cancellationToken None)
public int None.CompareTo(string strB None)
public int None.CompareTo(string strB None)
public int None.LastIndexOf(string value None,int startIndex None,StringComparison comparisonType None)
public int None.CompareTo(float value None)
private void None.AboutDialog_Load(object sender None,EventArgs e None)
public void None.ScrollControlIntoView(Control activeControl None)
public void None.ControlSelect(Control control None)
private void None.Control1_MouseClick(Object sender None,MouseEventArgs e None)
public int None.LastIndexOf(char value None,int startIndex None,int count None)
public Task None.FromAsync(IAsyncResult asyncResult None,ActionIAsyncResult endMethod None)
public int None.IndexOf(char value None,int startIndex None)
private void None.AboutDialog_Load(object sender None,EventArgs e None)
private void None.ListDragSource_QueryContinueDrag(object sender None,System.Windows.Forms.QueryContinueDragEventArgs e None)
protected void None.OnNotifyMessage(Message m None)
void None None.PrintText(object sender None,SelectionChangedEventArgs args None)
public string None.GetRouteUrl(RouteValueDictionary routeParameters None)
static bool None.IsFileURI(String path None)
public int None.CompareTo(string strB None)
float None None.ToSingle(IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public int None.CompareTo(string strB None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
float None None.ToSingle(IFormatProvider provider None)
static bool None.IsFileURI(String path None)
public string None.Remove(int startIndex None)
public Object None.GetValue(DependencyProperty dp None)
public Control None.GetChildAtPoint(Point pt None,GetChildAtPointSkip skipValue None)
private void None.TestDocument(string filename None,Type objType None)
public int None.CompareTo(string strB None)
public string None.PadLeft(int totalWidth None)
public VirtualPathData None.GetVirtualPath(RequestContext requestContext None,RouteValueDictionary values None)
public void None.AddSectionGroupInfo(ConfigurationSectionGroup sectionGroup None,StringBuilder listString None)
public int None.CompareTo(string strB None)
private void None.CommonClickHandler(object sender None,RoutedEventArgs e None)
public void None.DrawVisualStyleElementToolTipStandardTitle1(PaintEventArgs e None)
public string None.ToString(string format None,IFormatProvider provider None)
public int None.LastIndexOf(char value None,int startIndex None,int count None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
private void None.Button_Click(object sender None,RoutedEventArgs e None)
protected void None.EndRenderTracing(TextWriter writer None,object traceObject None)
protected Size None.ArrangeOverride(Size finalSize None)
private void None.ListDragSource_QueryContinueDrag(object sender None,System.Windows.Forms.QueryContinueDragEventArgs e None)
public string None.Remove(int startIndex None)
public void None.RegisterName(string name None,object scopedElement None)
protected void None.OnMove(EventArgs e None)
public int None.IndexOf(char value None,int startIndex None)
public DependencyObject None.FindCommonVisualAncestor(DependencyObject otherVisual None)
float None None.ToSingle(IFormatProvider provider None)
public string None.PadLeft(int totalWidth None)
static bool None.IsFileURI(String path None)
public string None.ToString(IFormatProvider provider None)
private void None.AboutDialog_Load(object sender None,EventArgs e None)
void None None.Page_Load(object sender None,System.EventArgs e None)
public void None.Serialize(TextWriter textWriter None,object o None,XmlSerializerNamespaces namespaces None)
static bool None.IsFileURI(String path None)
public int None.CompareTo(float value None)
public VirtualPathData None.GetVirtualPath(RequestContext requestContext None,RouteValueDictionary values None)
private void None.AddDropDownListAfterCurrentNode(SiteMapNodeItem item None)
public bool None.Equals(string value None,StringComparison comparisonType None)
public int None.CompareTo(float value None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
private void None.ListDragSource_QueryContinueDrag(object sender None,System.Windows.Forms.QueryContinueDragEventArgs e None)
public int None.CompareTo(string strB None)
public VirtualPathData None.GetVirtualPath(RequestContext requestContext None,RouteValueDictionary values None)
public int None.CompareTo(string strB None)
private void None.ListDragSource_QueryContinueDrag(object sender None,System.Windows.Forms.QueryContinueDragEventArgs e None)
public int None.CompareTo(float value None)
private void None.ValidateByRow(Object sender None,DataGridViewCellCancelEventArgs data None)
static bool None.IsFileURI(String path None)
private void None.dataGridView1_CellMouseEnter(object sender None,DataGridViewCellEventArgs e None)
public string None.PadLeft(int totalWidth None,char paddingChar None)
public void None.ClearValue(DependencyProperty dp None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public None None.XmlSerializer(XmlTypeMapping xmlTypeMapping None)
private void None.AddDropDownListAfterCurrentNode(SiteMapNodeItem item None)
private void None.menuItemHelpAbout_Click(object sender None,EventArgs e None)
public string None.ToString(string format None,IFormatProvider provider None)
public boolean None.CanDeserialize(XmlReader xmlReader None)
public VirtualPathData None.GetVirtualPath(RequestContext requestContext None,RouteValueDictionary values None)
public object None.Invoke(Delegate method None)
public DependencyObject None.FindCommonVisualAncestor(DependencyObject otherVisual None)
public bool None.Equals(string value None,StringComparison comparisonType None)
public string None.Remove(int startIndex None)
public void None.Draw(Graphics g None,Rectangle targetRect None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
public string None.ToString(string format None,IFormatProvider provider None)
void None None.inkCanvas1_StylusInRange(object sender None,StylusEventArgs e None)
static String None.IsFileURI(String path None)
bool None None.ToBoolean(IFormatProvider provider None)
public VirtualPathData None.GetVirtualPath(RequestContext requestContext None,RouteValueDictionary values None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
static bool None.IsFileURI(String path None)
int None None.CompareTo(T other None)
private void None.Button1_MouseDoubleClick(Object sender None,MouseEventArgs e None)
public string None.PadLeft(int totalWidth None)
private void None.ShowStringTrimming(PaintEventArgs e None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
private void None.currencyTextBox_TextChanged(object sender None,EventArgs e None)
protected void None.Render(HtmlTextWriter output None)
public boolean None.CanDeserialize(XmlReader xmlReader None)
public bool None.Equals(BigInteger other None)
public string None.Remove(int startIndex None)
public None None.XmlSerializer(XmlTypeMapping xmlTypeMapping None)
public bool None.SelectNextControl(Control ctl None,bool forward None,bool tabStopOnly None,bool nested None,bool wrap None)
public int None.IndexOf(string value None,int startIndex None,StringComparison comparisonType None)
void None None.EventHandler(object sender None,EventNameEventArgs e None)
void None None.textbox1_PreviewStylusMove(object sender None,StylusEventArgs e None)
string None None.ToString(string format None,IFormatProvider formatProvider None)
public int None.LastIndexOf(char value None,int startIndex None)
private void None.OnLoad(object sender None,RoutedEventArgs e None)
public VirtualPathData None.GetVirtualPath(RequestContext requestContext None,RouteValueDictionary values None)
static bool None.IsFileURI(String path None)
private void None.DataGridView1_DataBindingComplete(Object sender None,DataGridViewBindingCompleteEventArgs e None)
void None None.textbox1_PreviewStylusSystemGesture(object sender None,StylusSystemGestureEventArgs e None)
private void None.Button1_Click(object sender None,EventArgs MyEventArgs None)
public void None.SetAutoScrollMargin(int x None,int y None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
private void None.TreeView1_NodeMouseHover(Object sender None,TreeNodeMouseHoverEventArgs e None)
public string None.TrimEnd(params char[] trimChars)
public string None.Replace(string oldValue None,string newValue None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
static bool None.IsFileURI(String path None)
public int None.IndexOf(string value None,int startIndex None)
void None None.inkCanvas1_StylusInRange(object sender None,StylusEventArgs e None)
public bool None.Equals(BigInteger other None)
void None None.inkCanvas1_StylusInRange(object sender None,StylusEventArgs e None)
private void None.Control1_HandleCreated(Object sender None,EventArgs e None)
int None None.CompareTo(T other None)
public IAsyncResult None.BeginInvoke(Delegate method None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
public int None.IndexOf(char value None,int startIndex None)
public void None.Serialize(XmlWriter xmlWriter None,object o None,XmlSerializerNamespaces namespaces None)
private void None.Button1_Click(object sender None,System.EventArgs e None)
protected void None.OnLoad(EventArgs e None)
public string None.ToString(string format None,IFormatProvider provider None)
public void None.ClearValue(DependencyProperty dp None)
public string None.PadLeft(int totalWidth None)
public void None.Serialize(Stream stream None,object o None)
static bool None.IsFileURI(String path None)
public string None.Trim(params char[] trimChars)
private void None.DataGridView1_ColumnAdded(Object sender None,DataGridViewColumnEventArgs e None)
public Rectangle None.RectangleToScreen(Rectangle r None)
public string None.Remove(int startIndex None)
public void None.RewritePath(string path None)
public int None.LastIndexOf(string value None,StringComparison comparisonType None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.GetActionPath(string action None,object row None,string path None)
public string None.Remove(int startIndex None)
public string None.PadLeft(int totalWidth None,char paddingChar None)
static bool None.IsFileURI(String path None)
protected void None.Page_Load(object sender None,EventArgs e None)
public void None.SetTraceData(object traceDataKey None,object traceDataValue None)
public void None.BeginStoryboard(Storyboard storyboard None)
public DependencyObject None.FindCommonVisualAncestor(DependencyObject otherVisual None)
public string None.TrimEnd(params char[] trimChars)
public int None.LastIndexOf(string value None,StringComparison comparisonType None)
public bool None.IsNormalized(NormalizationForm normalizationForm None)
static bool None.IsFileURI(String path None)
public bool None.StartsWith(string value None,bool ignoreCase None,CultureInfo culture None)
public void None.InsertAuthor(String au_id None,String au_lname None,String au_fname None,String au_phone None)
public void None.RewritePath(string path None)
private void None.ToolStrip1_RendererChanged(Object sender None,EventArgs e None)
void None None.ChangeFontWeight(object sender None,RoutedEventArgs e None)
public string None.Replace(string oldValue None,string newValue None)
private void None.ToolStripRenderer1_RenderGrip(Object sender None,ToolStripGripRenderEventArgs e None)
public void None.RewritePath(string path None)
public bool None.SelectNextControl(Control ctl None,bool forward None,bool tabStopOnly None,bool nested None,bool wrap None)
async Task None.TestWriter(Stream stream None)
public void None.SetRenderMethodDelegate(RenderMethod renderMethod None)
public string None.ToString(string format None,IFormatProvider provider None)
private void None.Button1_Click(object sender None,System.EventArgs e None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.GetUniqueIDRelativeTo(Control control None)
public bool None.StartsWith(string value None,bool ignoreCase None,CultureInfo culture None)
public bool None.EndsWith(string value None,bool ignoreCase None,CultureInfo culture None)
public void None.RewritePath(string path None)
public void None.SetBounds(int x None,int y None,int width None,int height None)
public string None.ResolveClientUrl(string relativeUrl None)
public Point None.PointToClient(Point p None)
public int None.Add(Style style None)
public void None.ExportContract(WsdlExporter exporter None,WsdlContractConversionContext context None)
public int None.LastIndexOf(string value None,int startIndex None,int count None)
public void None.AddHandler(RoutedEvent routedEvent None,Delegate handler None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
void None None.OnClick1(object sender None,RoutedEventArgs e None)
public string None.GetRouteUrl(object routeParameters None)
public string None.ToString(string format None,IFormatProvider provider None)
static bool None.IsFileURI(String path None)
public string None.Replace(string oldValue None,string newValue None)
public bool None.StartsWith(string value None,bool ignoreCase None,CultureInfo culture None)
public int None.LastIndexOf(string value None,StringComparison comparisonType None)
public void None.InsertAuthor(String au_id None,String au_lname None,String au_fname None,String au_phone None)
protected void None.OnSelecting(SqlDataSourceSelectingEventArgs e None)
void None None.ChangeFontWeight(object sender None,RoutedEventArgs e None)
public bool None.StartsWith(string value None,bool ignoreCase None,CultureInfo culture None)
protected void None.Page_Load(object sender None,EventArgs e None)
static bool None.IsFileURI(String path None)
private void None.button1_Click(object sender None,System.EventArgs e None)
public string None.ToString(string format None,IFormatProvider provider None)
static bool None.IsFileURI(String path None)
public void None.SetBounds(int x None,int y None,int width None,int height None)
void None None.textbox1_LostStylusCapture(object sender None,StylusEventArgs e None)
public PropertyEntry None.GetFilteredProperty(string filter None,string name None)
private void None.DataGridView1_RowHeadersWidthSizeModeChanged(Object sender None,DataGridViewAutoSizeModeEventArgs e None)
private void None.PrintDataTableColumnInfo(DataTable table None)
protected void None.OnInvalidated(InvalidateEventArgs e None)
public void None.SetBounds(int x None,int y None,int width None,int height None)
public ICollection None.GetPropertyAllFilters(string name None)
public string None.Replace(char oldChar None,char newChar None)
public None None.RouteValueDictionary(object values None)
public int None.LastIndexOfAny(char[] anyOf None,int startIndex None,int count None)
public void None.InsertAuthor(String au_id None,String au_lname None,String au_fname None,String au_phone None)
void None None.inkCanvas1_StylusInRange(object sender None,StylusEventArgs e None)
private void None.Button_HideLabel(object sender None,EventArgs e None)
private void None.Control1_Invalidated(Object sender None,InvalidateEventArgs e None)
public string None.ToString(string format None,IFormatProvider provider None)
public Stream None.GetBufferlessInputStream(bool disableMaxRequestLength None)
public string None.ResolveClientUrl(string relativeUrl None)
public None None.String(char[] value None,int startIndex None,int length None)
public void None.ClearValue(DependencyPropertyKey key None)
public void None.SetBounds(int x None,int y None,int width None,int height None)
private void None.Control1_ChangeUICues(Object sender None,UICuesEventArgs e None)
public bool None.StartsWith(string value None,bool ignoreCase None,CultureInfo culture None)
public string None.ToString(IFormatProvider provider None)
private void None.Control1_MouseDoubleClick(Object sender None,MouseEventArgs e None)
private void None.Button1_Click(object sender None,EventArgs MyEventArgs None)
public bool None.IsDescendantOf(DependencyObject ancestor None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
private void None.PrintValues(DataTable table None)
protected void None.AccessibilityNotifyClients(AccessibleEvents accEvent None,int objectID None,int childID None)
private void None.PlayMedia(object sender None,MouseButtonEventArgs args None)
void None None.textbox1_LostStylusCapture(object sender None,StylusEventArgs e None)
void None None.Application_Start(object sender None,EventArgs e None)
void None None.SetDesignModeState(IDictionary data None)
IQueryable None None.CreateQuery(Expression expression None)
private void None.Button_HideLabel(object sender None,EventArgs e None)
private void None.WhatIsChecked_Click(object sender None,System.EventArgs e None)
public string None.Replace(char oldChar None,char newChar None)
protected void None.OnInvalidated(InvalidateEventArgs e None)
static bool None.IsFileURI(String path None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
protected void None.BuildProfileTree(string parentId None,bool calcViewState None)
private void None.AddSorting(object sender None,RoutedEventArgs args None)
private void None.Button1_Click(object sender None,EventArgs MyEventArgs None)
public void None.SetTraceData(object tracedObject None,object traceDataKey None,object traceDataValue None)
public Point None.TranslatePoint(Point point None,UIElement relativeTo None)
IQueryable None None.CreateQuery(Expression expression None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
void None None.ChangeFontStretch(object sender None,RoutedEventArgs e None)
public string None.Replace(char oldChar None,char newChar None)
protected void None.AddAttributesToRender(HtmlTextWriter writer None)
private void None.WhatIsChecked_Click(object sender None,System.EventArgs e None)
public void None.WriteXml(TextWriter writer None,XmlWriteMode mode None)
static bool None.IsFileURI(String path None)
private void None.button1_Click(object sender None,System.EventArgs e None)
protected void None.AddLogicalChild(Object child None)
public void None.WriteXml(XmlWriter writer None,XmlWriteMode mode None,bool writeHierarchy None)
public None None.HttpRequest(string filename None,string url None,string queryString None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
void None None.OnClick1(object sender None,RoutedEventArgs e None)
private void None.Button1_Click(object sender None,EventArgs MyEventArgs None)
protected Exception None.GetConvertFromException(object value None)
protected void None.RemoveLogicalChild(Object child None)
private void None.textBox1_Enter(object sender None,System.EventArgs e None)
public int None.IndexOf(Object value None)
protected void None.AddParsedSubObject(Object obj None)
private void None.myButton_Click(object sender None,System.EventArgs e None)
public void None.WriteXml(Stream stream None,XmlWriteMode mode None)
public string None.GetRouteUrl(string routeName None,RouteValueDictionary routeParameters None)
public string None.ToString(string format None,IFormatProvider provider None)
protected void None.AddVisualChild(Visual child None)
IQueryableTElement None None.CreateQueryTElement(Expression expression None)
static bool None.IsFileURI(String path None)
public void None.RemoveHandler(RoutedEvent routedEvent None,Delegate handler None)
public Control None.GetChildAtPoint(Point pt None)
void None None.textbox1_PreviewStylusInRange(object sender None,StylusEventArgs e None)
public void None.CopyBaseAttributes(WebControl controlSrc None)
public None None.HttpRequest(string filename None,string url None,string queryString None)
protected void None.SetStyle(ControlStyles flag None,bool value None)
public IAsyncResult None.BeginInvoke(Delegate method None,params object[] args)
static bool None.IsFileURI(String path None)
public object None.ConvertFromString(string text None)
void None None.textbox1_StylusDown(object sender None,StylusDownEventArgs e None)
public string None.PadLeft(int totalWidth None)
private void None.changeWidth(object sender None,SelectionChangedEventArgs args None)
void None None.textbox1_PreviewStylusInRange(object sender None,StylusEventArgs e None)
void None None.OnClick1(object sender None,RoutedEventArgs e None)
public void None.RaiseUnsupportedCapabilitiesError(DataSourceView view None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
private void None.myRectangleLoaded(object sender None,RoutedEventArgs e None)
public void None.RegisterPostBackControl(Control control None)
public void None.DrawVisualStyleElementScrollBarThumbButtonVertical1(PaintEventArgs e None)
private void None.textBox1_Validating(object sender None,System.ComponentModel.CancelEventArgs e None)
public void None.RaiseUnsupportedCapabilitiesError(DataSourceView view None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
public void None.Measure(Size availableSize None)
public void None.CoerceValue(DependencyProperty dp None)
protected void None.OnInit(EventArgs e None)
public BindingExpression None.GetBindingExpression(DependencyProperty dp None)
public PropertyDescriptorCollection None.GetProperties(object value None)
void None None.Window_InertiaStarting(object sender None,ManipulationInertiaStartingEventArgs e None)
private void None.button1_Click(object sender None,System.EventArgs e None)
private void None.ComboBox1_SelectedIndexChanged(System.Object sender None,System.EventArgs e None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public void None.Invoke(Action callback None)
public void None.ControlSelect(Control control None)
public void None.CoerceValue(DependencyProperty dp None)
public string None.ToString(string format None,IFormatProvider provider None)
public void None.Commit(IDictionary savedState None)
public string None.ToString(string format None,IFormatProvider provider None)
private void None.getLayoutSlot1(object sender None,System.Windows.RoutedEventArgs e None)
public void None.Add(TKey key None,TValue value None)
private void None.button1_Click(object sender None,System.EventArgs e None)
public void None.BeginAnimation(DependencyProperty dp None,AnimationTimeline animation None)
public PropertyDescriptorCollection None.GetProperties(object value None)
public bool None.EndsWith(string value None)
public None None.Font(FontFamily family None,float emSize None,FontStyle style None,GraphicsUnit unit None,byte gdiCharSet None)
protected void None.InvokePaintBackground(Control c None,PaintEventArgs e None)
public bool None.IsParameterTrue(string paramName None)
void None None.textbox1_StylusDown(object sender None,StylusDownEventArgs e None)
void None None.Window_ManipulationStarting(object sender None,ManipulationStartingEventArgs e None)
public void None.SetValue(DependencyProperty dp None,object value None)
public int None.LastIndexOf(string value None,int startIndex None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public void None.ControlSelect(Control control None)
public bool None.Equals(string value None)
public bool None.EndsWith(string value None)
void None None.inkCanvas1_StrokeErased(object sender None,RoutedEventArgs e None)
public TResult None.InvokeTResult(FuncTResult callback None,DispatcherPriority priority None,CancellationToken cancellationToken None)
protected HorizontalAlignment None.RtlTranslateAlignment(HorizontalAlignment align None)
void None None.textbox1_StylusDown(object sender None,StylusDownEventArgs e None)
int None None.ToInt32(IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public int None.LastIndexOf(string value None,int startIndex None)
public void None.ControlSelect(Control control None)
private void None.ListDragSource_GiveFeedback(object sender None,System.Windows.Forms.GiveFeedbackEventArgs e None)
public bool None.Contains(Vector3DKeyFrame keyFrame None)
void None None.ChangeForeground(object sender None,RoutedEventArgs e None)
private void None.OnKeyDownHandler(object sender None,KeyEventArgs e None)
private void None.UpdateStates(bool useTransitions None)
public string None.ToString(string format None,IFormatProvider provider None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
public void None.BeginAnimation(DependencyProperty dp None,AnimationTimeline animation None)
public void None.MergeStyle(Style s None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public bool None.Contains(Vector3DKeyFrame keyFrame None)
protected void None.LinqDataSource_Inserting(object sender None,LinqDataSourceInsertEventArgs e None)
public int None.LastIndexOf(string value None,int startIndex None,StringComparison comparisonType None)
public BindingExpression None.SetBinding(DependencyProperty dp None,string path None)
public void None.DrawVisualStyleElementHeaderSortArrow2(PaintEventArgs e None)
void None None.SetOwnerControl(Control owner None)
private void None.ListDragSource_GiveFeedback(object sender None,System.Windows.Forms.GiveFeedbackEventArgs e None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public int None.LastIndexOf(string value None,int startIndex None,StringComparison comparisonType None)
public bool None.FillContains(Geometry geometry None,double tolerance None,ToleranceType type None)
public void None.Measure(Size availableSize None)
public bool None.IsItemItsOwnContainer(object item None)
void None None.SetOwnerControl(Control owner None)
public GeneralTransform3DTo2D None.TransformToAncestor(Visual ancestor None)
protected void None.EntityDataSource2_ContextDisposing(object sender None,EntityDataSourceContextDisposingEventArgs e None)
void None None.SetOwnerControl(Control owner None)
void None None.AddParsedSubObject(Object obj None)
public string None.ToString(string format None,IFormatProvider provider None)
void None None.textbox1_StylusDown(object sender None,StylusDownEventArgs e None)
private void None.OnKeyDownHandler(object sender None,KeyEventArgs e None)
public Point None.PointToScreen(Point point None)
protected None None.ToolStripDropDownItem(string text None,Image image None,params ToolStripItem[] dropDownItems)
public bool None.ReleaseTouchCapture(TouchDevice touchDevice None)
protected void None.EntityDataSource2_ContextDisposing(object sender None,EntityDataSourceContextDisposingEventArgs e None)
public void None.CopyTo(AnalysisWarning[] array None,int index None)
public None None.PathGeometry(IEnumerablePathFigure figures None,FillRule fillRule None,Transform transform None)
private void None.ListDragSource_GiveFeedback(object sender None,System.Windows.Forms.GiveFeedbackEventArgs e None)
public None None.PathGeometry(IEnumerablePathFigure figures None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public object None.FindResource(object resourceKey None)
public int None.LastIndexOf(string value None,int startIndex None,StringComparison comparisonType None)
public string None.TrimStart(params char[] trimChars)
private void None.ToolStripRenderer1_RenderArrow(Object sender None,ToolStripArrowRenderEventArgs e None)
protected None None.ToolStripDropDownItem(string text None,Image image None,params ToolStripItem[] dropDownItems)
public int None.LastIndexOf(string value None)
public bool None.CaptureTouch(TouchDevice touchDevice None)
private void None.ToolStripItem1_AvailableChanged(Object sender None,EventArgs e None)
protected int None.ExecuteUpdate(IDictionary keys None,IDictionary values None,IDictionary oldValues None)
public int None.LastIndexOf(string value None,int startIndex None,StringComparison comparisonType None)
private void None.ToolStripItem1_TextChanged(Object sender None,EventArgs e None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
protected void None.EntityDataSource2_ContextDisposing(object sender None,EntityDataSourceContextDisposingEventArgs e None)
private void None.setColors(object sender None,RoutedEventArgs e None)
protected void None.OnFreezablePropertyChanged(DependencyObject oldValue None,DependencyObject newValue None)
public int None.LastIndexOf(string value None,int startIndex None,StringComparison comparisonType None)
protected void None.EntityDataSource2_ContextDisposing(object sender None,EntityDataSourceContextDisposingEventArgs e None)
private void None.ListDragSource_GiveFeedback(object sender None,System.Windows.Forms.GiveFeedbackEventArgs e None)
protected None None.ToolStripDropDownItem(string text None,Image image None,params ToolStripItem[] dropDownItems)
private void None.ListDragSource_GiveFeedback(object sender None,System.Windows.Forms.GiveFeedbackEventArgs e None)
private void None.TreeView1_NodeMouseHover(Object sender None,TreeNodeMouseHoverEventArgs e None)
private void None.ToolStripItem1_TextChanged(Object sender None,EventArgs e None)
public None None.Int32Animation(int toValue None,Duration duration None)
public int None.LastIndexOf(string value None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
private void None.ListDragSource_GiveFeedback(object sender None,System.Windows.Forms.GiveFeedbackEventArgs e None)
private void None.TreeView1_NodeMouseHover(Object sender None,TreeNodeMouseHoverEventArgs e None)
private void None.ListDragTarget_DragOver(object sender None,System.Windows.Forms.DragEventArgs e None)
private void None.changeWidth(object sender None,SelectionChangedEventArgs args None)
public void None.DrawVisualStyleElementWindowSmallMaxCaption1(PaintEventArgs e None)
private void None.ListView1_ItemMouseHover(Object sender None,ListViewItemMouseHoverEventArgs e None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public void None.ApplyAnimationClock(DependencyProperty dp None,AnimationClock clock None,HandoffBehavior handoffBehavior None)
protected void None.RaiseBubbleEvent(object source None,EventArgs args None)
private void None.CaptureMouseCommandExecuted(object sender None,ExecutedRoutedEventArgs e None)
public void None.BeginAnimation(DependencyProperty dp None,AnimationTimeline animation None,HandoffBehavior handoffBehavior None)
public string None.ToString(string format None,IFormatProvider provider None)
private void None.changeWidth(object sender None,SelectionChangedEventArgs args None)
private void None.ListView1_ItemMouseHover(Object sender None,ListViewItemMouseHoverEventArgs e None)
public string None.ToString(string format None,IFormatProvider provider None)
public void None.DrawVisualStyleElementWindowSmallMaxCaption1(PaintEventArgs e None)
protected void None.RaiseBubbleEvent(object source None,EventArgs args None)
public bool None.IsAncestorOf(DependencyObject descendant None)
public string None.ToString(string format None,IFormatProvider provider None)
public void None.BeginAnimation(DependencyProperty dp None,AnimationTimeline animation None,HandoffBehavior handoffBehavior None)
public string None.ToString(string format None,IFormatProvider provider None)
void None None.submit_Click(object sender None,RoutedEventArgs e None)
public void None.BeginAnimation(DependencyProperty dp None,AnimationTimeline animation None,HandoffBehavior handoffBehavior None)
void None None.inkCanvas1_StrokeErasing(object sender None,InkCanvasStrokeErasingEventArgs e None)
protected void None.OnClick(DesignerRegionMouseEventArgs e None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public ListViewHitTestInfo None.HitTest(int x None,int y None)
public object None.GetValue(DependencyProperty dp None)
private void None.MouseDownHandler(object sender None,MouseButtonEventArgs e None)
void None None.textbox1_PreviewStylusButtonUp(object sender None,StylusButtonEventArgs e None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
public void None.BeginAnimation(DependencyProperty dp None,AnimationTimeline animation None)
public void None.RaiseAutomationEvent(AutomationEvents eventId None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
private void None.Button_Click(object sender None,RoutedEventArgs e None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public int None.LastIndexOfAny(char[] anyOf None,int startIndex None)
public bool None.StartsWith(string value None)
SerializableAttribute None None.ComVisibleAttribute(true None None)
void None None.inkCanvas1_EditingModeInvertedChanged(object sender None,EventArgs e None)
void None None.ChangeForeground(object sender None,RoutedEventArgs e None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public void None.DrawVisualStyleElementHeaderItemLeft1(PaintEventArgs e None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
void None None.IsTabStop(object sender None,RoutedEventArgs e None)
public void None.RaisePropertyChangedEvent(AutomationProperty property None,object oldValue None,object newValue None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public int None.LastIndexOf(char value None)
void None None.IsTabStop(object sender None,RoutedEventArgs e None)
protected void None.RemoveVisualChild(Visual child None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.Prompt(string message None,string defaultInputValue None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public None None.String(char[] value None,int startIndex None,int length None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public int None.IndexOf(string value None,int startIndex None,int count None,StringComparison comparisonType None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
SerializableAttribute None None.ComVisibleAttribute(false None None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public int None.IndexOf(char value None,int startIndex None,int count None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
private void None.ellipse_DragOver(object sender None,DragEventArgs e None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
private void None.InstanceRectangleIntersection(PaintEventArgs e None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
private void None.TextBoxGotKeyboardFocus(object sender None,KeyboardFocusChangedEventArgs e None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public IListSqlTrackingWorkflowInstance None.GetWorkflows(SqlTrackingQueryOptions options None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public void None.DrawVisualStyleElementStartPanelUserPane1(PaintEventArgs e None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider provider None)
public string None.ToString(string format None,IFormatProvider