BOOL WINAPI kernel32.CopyFile(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName,_In_ BOOL bFailIfExists)
BOOL WINAPI kernel32.CopyFileW(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName,_In_ BOOL bFailIfExists)
BOOL WINAPI kernel32.CopyFileA(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName,_In_ BOOL bFailIfExists)
BOOL WINAPI kernel32.CopyFileTransacted(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName,_In_opt_ LPPROGRESS_ROUTINE lpProgressRoutine,_In_opt_ LPVOID lpData,_In_opt_ LPBOOL pbCancel,_In_ DWORD dwCopyFlags,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.CopyFileTransactedW(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName,_In_opt_ LPPROGRESS_ROUTINE lpProgressRoutine,_In_opt_ LPVOID lpData,_In_opt_ LPBOOL pbCancel,_In_ DWORD dwCopyFlags,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.CopyFileTransactedA(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName,_In_opt_ LPPROGRESS_ROUTINE lpProgressRoutine,_In_opt_ LPVOID lpData,_In_opt_ LPBOOL pbCancel,_In_ DWORD dwCopyFlags,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.SetFileBandwidthReservation(_In_ HANDLE hFile,_In_ DWORD nPeriodMilliseconds,_In_ DWORD nBytesPerPeriod,_In_ BOOL bDiscardable,_Out_ LPDWORD lpTransferSize,_Out_ LPDWORD lpNumOutstandingRequests)
BOOL WINAPI kernel32.CancelIoEx(_In_ HANDLE hFile,_In_opt_ LPOVERLAPPED lpOverlapped)
BOOL WINAPI advapi32.EncryptionDisable(_In_ LPCWSTR DirPath,_In_ BOOL Disable)
BOOL WINAPI kernel32.FindNextStreamW(_In_ HANDLE hFindStream,_Out_ LPVOID lpFindStreamData)
BOOL WINAPI kernel32.CreateHardLinkTransacted(_In_ LPCTSTR lpFileName,_In_ LPCTSTR lpExistingFileName,_Reserved_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.CreateHardLinkTransactedW(_In_ LPCTSTR lpFileName,_In_ LPCTSTR lpExistingFileName,_Reserved_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.CreateHardLinkTransactedA(_In_ LPCTSTR lpFileName,_In_ LPCTSTR lpExistingFileName,_Reserved_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ HANDLE hTransaction)
HANDLE WINAPI kernel32.FindFirstFile(_In_ LPCTSTR lpFileName,_Out_ LPWIN32_FIND_DATA lpFindFileData)
HANDLE WINAPI kernel32.FindFirstFileW(_In_ LPCTSTR lpFileName,_Out_ LPWIN32_FIND_DATA lpFindFileData)
HANDLE WINAPI kernel32.FindFirstFileA(_In_ LPCTSTR lpFileName,_Out_ LPWIN32_FIND_DATA lpFindFileData)
BOOL WINAPI kernel32.GetQueuedCompletionStatus(_In_ HANDLE CompletionPort,_Out_ LPDWORD lpNumberOfBytes,_Out_ PULONG_PTR lpCompletionKey,_Out_ LPOVERLAPPED *lpOverlapped,_In_ DWORD dwMilliseconds)
BOOL WINAPI kernel32.DeleteFileTransacted(_In_ LPCTSTR lpFileName,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.DeleteFileTransactedW(_In_ LPCTSTR lpFileName,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.DeleteFileTransactedA(_In_ LPCTSTR lpFileName,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.SetFileIoOverlappedRange(_In_ HANDLE FileHandle,_In_ PUCHAR OverlappedRangeStart,_In_ ULONG Length)
HRESULT WINAPI wofutil.WofIsExternalFile(_In_ LPCWSTR FilePath,_Out_opt_ PBOOL IsExternalFile,_Out_opt_ PULONG Provider,_Out_opt_ PVOID ExternalFileInfo,_Inout_opt_ PULONG BufferLength)
INT WINAPI lz32.LZRead(_In_ INT hFile,_Out_ LPSTR lpBuffer,_In_ INT cbRead)
HRESULT WINAPI wofutil.WofWimRemoveEntry(_In_ PCWSTR VolumeName,_In_ LARGE_INTEGER DataSourceId)
DWORD WINAPI advapi32.SetUserFileEncryptionKey(_In_ PENCRYPTION_CERTIFICATE pEncryptionCertificate)
BOOL WINAPI kernel32.WriteFile(_In_ HANDLE hFile,_In_ LPCVOID lpBuffer,_In_ DWORD nNumberOfBytesToWrite,_Out_opt_ LPDWORD lpNumberOfBytesWritten,_Inout_opt_ LPOVERLAPPED lpOverlapped)
BOOL WINAPI advapi32.EncryptFile(_In_ LPCTSTR lpFileName)
BOOL WINAPI advapi32.EncryptFileW(_In_ LPCTSTR lpFileName)
BOOL WINAPI advapi32.EncryptFileA(_In_ LPCTSTR lpFileName)
BOOL WINAPI kernel32.FindClose(_Inout_ HANDLE hFindFile)
BOOLEAN WINAPI kernel32.Wow64EnableWow64FsRedirection(_In_ BOOLEAN Wow64FsEnableRedirection)
BOOL WINAPI kernel32.GetFileBandwidthReservation(_In_ HANDLE hFile,_Out_ LPDWORD lpPeriodMilliseconds,_Out_ LPDWORD lpBytesPerPeriod,_Out_ LPBOOL pDiscardable,_Out_ LPDWORD lpTransferSize,_Out_ LPDWORD lpNumOutstandingRequests)
BOOL WINAPI kernel32.GetFileAttributesTransacted(_In_ LPCTSTR lpFileName,_In_ GET_FILEEX_INFO_LEVELS fInfoLevelId,_Out_ LPVOID lpFileInformation,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.GetFileAttributesTransactedW(_In_ LPCTSTR lpFileName,_In_ GET_FILEEX_INFO_LEVELS fInfoLevelId,_Out_ LPVOID lpFileInformation,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.GetFileAttributesTransactedA(_In_ LPCTSTR lpFileName,_In_ GET_FILEEX_INFO_LEVELS fInfoLevelId,_Out_ LPVOID lpFileInformation,_In_ HANDLE hTransaction)
DWORD WINAPI kernel32.GetFileType(_In_ HANDLE hFile)
BOOL WINAPI kernel32.MoveFileEx(_In_ LPCTSTR lpExistingFileName,_In_opt_ LPCTSTR lpNewFileName,_In_ DWORD dwFlags)
BOOL WINAPI kernel32.MoveFileExW(_In_ LPCTSTR lpExistingFileName,_In_opt_ LPCTSTR lpNewFileName,_In_ DWORD dwFlags)
BOOL WINAPI kernel32.MoveFileExA(_In_ LPCTSTR lpExistingFileName,_In_opt_ LPCTSTR lpNewFileName,_In_ DWORD dwFlags)
BOOL WINAPI kernel32.Wow64RevertWow64FsRedirection(_In_ PVOID OldValue)
DWORD WINAPI kernel32.GetShortPathName(_In_ LPCTSTR lpszLongPath,_Out_ LPTSTR lpszShortPath,_In_ DWORD cchBuffer)
DWORD WINAPI kernel32.GetShortPathNameW(_In_ LPCTSTR lpszLongPath,_Out_ LPTSTR lpszShortPath,_In_ DWORD cchBuffer)
DWORD WINAPI kernel32.GetShortPathNameA(_In_ LPCTSTR lpszLongPath,_Out_ LPTSTR lpszShortPath,_In_ DWORD cchBuffer)
VOID CALLBACK None.FileIOCompletionRoutine(_In_ DWORD dwErrorCode,_In_ DWORD dwNumberOfBytesTransfered,_Inout_ LPOVERLAPPED lpOverlapped)
DWORD WINAPI kernel32.GetFullPathNameTransacted(_In_ LPCTSTR lpFileName,_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer,_Out_ LPTSTR *lpFilePart,_In_ HANDLE hTransaction)
DWORD WINAPI kernel32.GetFullPathNameTransactedW(_In_ LPCTSTR lpFileName,_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer,_Out_ LPTSTR *lpFilePart,_In_ HANDLE hTransaction)
DWORD WINAPI kernel32.GetFullPathNameTransactedA(_In_ LPCTSTR lpFileName,_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer,_Out_ LPTSTR *lpFilePart,_In_ HANDLE hTransaction)
DWORD WINAPI kernel32.GetFileAttributes(_In_ LPCTSTR lpFileName)
DWORD WINAPI kernel32.GetFileAttributesW(_In_ LPCTSTR lpFileName)
DWORD WINAPI kernel32.GetFileAttributesA(_In_ LPCTSTR lpFileName)
BOOL WINAPI kernel32.CancelIo(_In_ HANDLE hFile)
DWORD WINAPI advapi32.OpenEncryptedFileRaw(_In_ LPCTSTR lpFileName,_In_ ULONG ulFlags,_Out_ PVOID *pvContext)
DWORD WINAPI advapi32.OpenEncryptedFileRawW(_In_ LPCTSTR lpFileName,_In_ ULONG ulFlags,_Out_ PVOID *pvContext)
DWORD WINAPI advapi32.OpenEncryptedFileRawA(_In_ LPCTSTR lpFileName,_In_ ULONG ulFlags,_Out_ PVOID *pvContext)
BOOL WINAPI kernel32.FlushFileBuffers(_In_ HANDLE hFile)
BOOL WINAPI kernel32.PostQueuedCompletionStatus(_In_ HANDLE CompletionPort,_In_ DWORD dwNumberOfBytesTransferred,_In_ ULONG_PTR dwCompletionKey,_In_opt_ LPOVERLAPPED lpOverlapped)
DWORD WINAPI advapi32.QueryUsersOnEncryptedFile(_In_ LPCWSTR lpFileName,_Out_ PENCRYPTION_CERTIFICATE_HASH_LIST *pUsers)
BOOL WINAPI kernel32.ReadFile(_In_ HANDLE hFile,_Out_ LPVOID lpBuffer,_In_ DWORD nNumberOfBytesToRead,_Out_opt_ LPDWORD lpNumberOfBytesRead,_Inout_opt_ LPOVERLAPPED lpOverlapped)
DWORD WINAPI kernel32.GetFinalPathNameByHandle(_In_ HANDLE hFile,_Out_ LPTSTR lpszFilePath,_In_ DWORD cchFilePath,_In_ DWORD dwFlags)
DWORD WINAPI kernel32.GetFinalPathNameByHandleW(_In_ HANDLE hFile,_Out_ LPTSTR lpszFilePath,_In_ DWORD cchFilePath,_In_ DWORD dwFlags)
DWORD WINAPI kernel32.GetFinalPathNameByHandleA(_In_ HANDLE hFile,_Out_ LPTSTR lpszFilePath,_In_ DWORD cchFilePath,_In_ DWORD dwFlags)
DWORD WINAPI kernel32.GetFileSize(_In_ HANDLE hFile,_Out_opt_ LPDWORD lpFileSizeHigh)
BOOL WINAPI kernel32.MoveFileTransacted(_In_ LPCTSTR lpExistingFileName,_In_opt_ LPCTSTR lpNewFileName,_In_opt_ LPPROGRESS_ROUTINE lpProgressRoutine,_In_opt_ LPVOID lpData,_In_ DWORD dwFlags,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.MoveFileTransactedW(_In_ LPCTSTR lpExistingFileName,_In_opt_ LPCTSTR lpNewFileName,_In_opt_ LPPROGRESS_ROUTINE lpProgressRoutine,_In_opt_ LPVOID lpData,_In_ DWORD dwFlags,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.MoveFileTransactedA(_In_ LPCTSTR lpExistingFileName,_In_opt_ LPCTSTR lpNewFileName,_In_opt_ LPPROGRESS_ROUTINE lpProgressRoutine,_In_opt_ LPVOID lpData,_In_ DWORD dwFlags,_In_ HANDLE hTransaction)
HRESULT WINAPI wofutil.WofWimUpdateEntry(_In_ PCWSTR VolumeName,_In_ LARGE_INTEGER DataSourceId,_In_ PCWSTR NewWimPath)
HANDLE WINAPI kernel32.ReOpenFile(_In_ HANDLE hOriginalFile,_In_ DWORD dwDesiredAccess,_In_ DWORD dwShareMode,_In_ DWORD dwFlags)
BOOL WINAPI kernel32.LockFile(_In_ HANDLE hFile,_In_ DWORD dwFileOffsetLow,_In_ DWORD dwFileOffsetHigh,_In_ DWORD nNumberOfBytesToLockLow,_In_ DWORD nNumberOfBytesToLockHigh)
BOOL WINAPI kernel32.SetFileAttributesTransacted(_In_ LPCTSTR lpFileName,_In_ DWORD dwFileAttributes,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.SetFileAttributesTransactedW(_In_ LPCTSTR lpFileName,_In_ DWORD dwFileAttributes,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.SetFileAttributesTransactedA(_In_ LPCTSTR lpFileName,_In_ DWORD dwFileAttributes,_In_ HANDLE hTransaction)
DWORD WINAPI advapi32.AddUsersToEncryptedFile(_In_ LPCWSTR lpFileName,_In_ PENCRYPTION_CERTIFICATE_LIST pUsers)
HANDLE WINAPI kernel32.FindFirstFileEx(_In_ LPCTSTR lpFileName,_In_ FINDEX_INFO_LEVELS fInfoLevelId,_Out_ LPVOID lpFindFileData,_In_ FINDEX_SEARCH_OPS fSearchOp,_Reserved_ LPVOID lpSearchFilter,_In_ DWORD dwAdditionalFlags)
HANDLE WINAPI kernel32.FindFirstFileExW(_In_ LPCTSTR lpFileName,_In_ FINDEX_INFO_LEVELS fInfoLevelId,_Out_ LPVOID lpFindFileData,_In_ FINDEX_SEARCH_OPS fSearchOp,_Reserved_ LPVOID lpSearchFilter,_In_ DWORD dwAdditionalFlags)
HANDLE WINAPI kernel32.FindFirstFileExA(_In_ LPCTSTR lpFileName,_In_ FINDEX_INFO_LEVELS fInfoLevelId,_Out_ LPVOID lpFindFileData,_In_ FINDEX_SEARCH_OPS fSearchOp,_Reserved_ LPVOID lpSearchFilter,_In_ DWORD dwAdditionalFlags)
BOOL WINAPI kernel32.FindNextFile(_In_ HANDLE hFindFile,_Out_ LPWIN32_FIND_DATA lpFindFileData)
BOOL WINAPI kernel32.FindNextFileW(_In_ HANDLE hFindFile,_Out_ LPWIN32_FIND_DATA lpFindFileData)
BOOL WINAPI kernel32.FindNextFileA(_In_ HANDLE hFindFile,_Out_ LPWIN32_FIND_DATA lpFindFileData)
HANDLE WINAPI kernel32.FindFirstFileNameW(_In_ LPCWSTR lpFileName,_In_ DWORD dwFlags,_Inout_ LPDWORD StringLength,_Inout_ PWCHAR LinkName)
DWORD CALLBACK None.CopyProgressRoutine(_In_ LARGE_INTEGER TotalFileSize,_In_ LARGE_INTEGER TotalBytesTransferred,_In_ LARGE_INTEGER StreamSize,_In_ LARGE_INTEGER StreamBytesTransferred,_In_ DWORD dwStreamNumber,_In_ DWORD dwCallbackReason,_In_ HANDLE hSourceFile,_In_ HANDLE hDestinationFile,_In_opt_ LPVOID lpData)
BOOL WINAPI kernel32.Wow64DisableWow64FsRedirection(_Out_ PVOID *OldValue)
DWORD WINAPI kernel32.SetFilePointer(_In_ HANDLE hFile,_In_ LONG lDistanceToMove,_Inout_opt_ PLONG lpDistanceToMoveHigh,_In_ DWORD dwMoveMethod)
BOOL WINAPI kernel32.SetFilePointerEx(_In_ HANDLE hFile,_In_ LARGE_INTEGER liDistanceToMove,_Out_opt_ PLARGE_INTEGER lpNewFilePointer,_In_ DWORD dwMoveMethod)
BOOL WINAPI kernel32.DeleteFile(_In_ LPCTSTR lpFileName)
BOOL WINAPI kernel32.DeleteFileW(_In_ LPCTSTR lpFileName)
BOOL WINAPI kernel32.DeleteFileA(_In_ LPCTSTR lpFileName)
BOOL WINAPI kernel32.GetFileInformationByHandleEx(_In_ HANDLE hFile,_In_ FILE_INFO_BY_HANDLE_CLASS FileInformationClass,_Out_ LPVOID lpFileInformation,_In_ DWORD dwBufferSize)
BOOL WINAPI kernel32.ReadFileScatter(_In_ HANDLE hFile,_In_ FILE_SEGMENT_ELEMENT aSegmentArray[],_In_ DWORD nNumberOfBytesToRead,_Reserved_ LPDWORD lpReserved,_Inout_ LPOVERLAPPED lpOverlapped)
HANDLE WINAPI kernel32.FindFirstFileTransacted(_In_ LPCTSTR lpFileName,_In_ FINDEX_INFO_LEVELS fInfoLevelId,_Out_ LPVOID lpFindFileData,_In_ FINDEX_SEARCH_OPS fSearchOp,_Reserved_ LPVOID lpSearchFilter,_In_ DWORD dwAdditionalFlags,_In_ HANDLE hTransaction)
HANDLE WINAPI kernel32.FindFirstFileTransactedW(_In_ LPCTSTR lpFileName,_In_ FINDEX_INFO_LEVELS fInfoLevelId,_Out_ LPVOID lpFindFileData,_In_ FINDEX_SEARCH_OPS fSearchOp,_Reserved_ LPVOID lpSearchFilter,_In_ DWORD dwAdditionalFlags,_In_ HANDLE hTransaction)
HANDLE WINAPI kernel32.FindFirstFileTransactedA(_In_ LPCTSTR lpFileName,_In_ FINDEX_INFO_LEVELS fInfoLevelId,_Out_ LPVOID lpFindFileData,_In_ FINDEX_SEARCH_OPS fSearchOp,_Reserved_ LPVOID lpSearchFilter,_In_ DWORD dwAdditionalFlags,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.SetFileAttributes(_In_ LPCTSTR lpFileName,_In_ DWORD dwFileAttributes)
BOOL WINAPI kernel32.SetFileAttributesW(_In_ LPCTSTR lpFileName,_In_ DWORD dwFileAttributes)
BOOL WINAPI kernel32.SetFileAttributesA(_In_ LPCTSTR lpFileName,_In_ DWORD dwFileAttributes)
DWORD WINAPI None.ExportCallback(_In_ PBYTE pbData,_In_opt_ PVOID pvCallbackContext,_In_ ULONG ulLength)
BOOL WINAPI kernel32.SetFileCompletionNotificationModes(_In_ HANDLE FileHandle,_In_ UCHAR Flags)
BOOL WINAPI kernel32.CancelSynchronousIo(_In_ HANDLE hThread)
BOOL WINAPI kernel32.SetFileValidData(_In_ HANDLE hFile,_In_ LONGLONG ValidDataLength)
HRESULT WINAPI wofutil.WofWimAddEntry(_In_ PCWSTR VolumeName,_In_ PCWSTR WimPath,_In_ DWORD WimType,_In_ DWORD WimIndex,_Out_ PLARGE_INTEGER DataSourceId)
DWORD WINAPI kernel32.GetCompressedFileSizeTransacted(_In_ LPCTSTR lpFileName,_Out_opt_ LPDWORD lpFileSizeHigh,_In_ HANDLE hTransaction)
DWORD WINAPI kernel32.GetCompressedFileSizeTransactedW(_In_ LPCTSTR lpFileName,_Out_opt_ LPDWORD lpFileSizeHigh,_In_ HANDLE hTransaction)
DWORD WINAPI kernel32.GetCompressedFileSizeTransactedA(_In_ LPCTSTR lpFileName,_Out_opt_ LPDWORD lpFileSizeHigh,_In_ HANDLE hTransaction)
HRESULT WINAPI wofutil.WofEnumEntries(_In_ PCWSTR VolumeName,_In_ ULONG Provider,_In_ WofEnumEntryProc EnumProc,_In_opt_ PVOID UserData)
HANDLE WINAPI kernel32.FindFirstStreamTransactedW(_In_ LPCWSTR lpFileName,_In_ STREAM_INFO_LEVELS InfoLevel,_Out_ LPVOID lpFindStreamData,_Reserved_ DWORD dwFlags,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.WriteFileGather(_In_ HANDLE hFile,_In_ FILE_SEGMENT_ELEMENT aSegmentArray[],_In_ DWORD nNumberOfBytesToWrite,_Reserved_ LPDWORD lpReserved,_Inout_ LPOVERLAPPED lpOverlapped)
BOOL WINAPI wofutil.WofShouldCompressBinaries(_In_ LPCWSTR Volume,_Out_ PULONG Algorithm)
BOOL WINAPI kernel32.GetFileSizeEx(_In_ HANDLE hFile,_Out_ PLARGE_INTEGER lpFileSize)
HANDLE WINAPI kernel32.FindFirstFileNameTransactedW(_In_ LPCWSTR lpFileName,_In_ DWORD dwFlags,_Inout_ LPDWORD StringLength,_Inout_ PWCHAR LinkName,_In_opt_ HANDLE hTransaction)
HANDLE WINAPI kernel32.OpenFileById(_In_ HANDLE hFile,_In_ LPFILE_ID_DESCRIPTOR lpFileID,_In_ DWORD dwDesiredAccess,_In_ DWORD dwShareMode,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ DWORD dwFlags)
INT WINAPI lz32.LZOpenFile(_In_ LPTSTR lpFileName,_Out_ LPOFSTRUCT lpReOpenBuf,_In_ WORD wStyle)
INT WINAPI lz32.LZOpenFileW(_In_ LPTSTR lpFileName,_Out_ LPOFSTRUCT lpReOpenBuf,_In_ WORD wStyle)
INT WINAPI lz32.LZOpenFileA(_In_ LPTSTR lpFileName,_Out_ LPOFSTRUCT lpReOpenBuf,_In_ WORD wStyle)
DWORD WINAPI advapi32.RemoveUsersFromEncryptedFile(_In_ LPCWSTR lpFileName,_In_ PENCRYPTION_CERTIFICATE_HASH_LIST pHashes)
BOOL WINAPI kernel32.CopyFileEx(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName,_In_opt_ LPPROGRESS_ROUTINE lpProgressRoutine,_In_opt_ LPVOID lpData,_In_opt_ LPBOOL pbCancel,_In_ DWORD dwCopyFlags)
BOOL WINAPI kernel32.CopyFileExW(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName,_In_opt_ LPPROGRESS_ROUTINE lpProgressRoutine,_In_opt_ LPVOID lpData,_In_opt_ LPBOOL pbCancel,_In_ DWORD dwCopyFlags)
BOOL WINAPI kernel32.CopyFileExA(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName,_In_opt_ LPPROGRESS_ROUTINE lpProgressRoutine,_In_opt_ LPVOID lpData,_In_opt_ LPBOOL pbCancel,_In_ DWORD dwCopyFlags)
HANDLE WINAPI kernel32.CreateFile2(_In_ LPCWSTR lpFileName,_In_ DWORD dwDesiredAccess,_In_ DWORD dwShareMode,_In_ DWORD dwCreationDisposition,_In_opt_ LPCREATEFILE2_EXTENDED_PARAMETERS pCreateExParams)
BOOL WINAPI kernel32.GetBinaryType(_In_ LPCTSTR lpApplicationName,_Out_ LPDWORD lpBinaryType)
BOOL WINAPI kernel32.GetBinaryTypeW(_In_ LPCTSTR lpApplicationName,_Out_ LPDWORD lpBinaryType)
BOOL WINAPI kernel32.GetBinaryTypeA(_In_ LPCTSTR lpApplicationName,_Out_ LPDWORD lpBinaryType)
DWORD WINAPI kernel32.GetLongPathName(_In_ LPCTSTR lpszShortPath,_Out_ LPTSTR lpszLongPath,_In_ DWORD cchBuffer)
DWORD WINAPI kernel32.GetLongPathNameW(_In_ LPCTSTR lpszShortPath,_Out_ LPTSTR lpszLongPath,_In_ DWORD cchBuffer)
DWORD WINAPI kernel32.GetLongPathNameA(_In_ LPCTSTR lpszShortPath,_Out_ LPTSTR lpszLongPath,_In_ DWORD cchBuffer)
INT WINAPI lz32.GetExpandedName(_In_ LPTSTR lpszSource,_Out_ LPTSTR lpszBuffer)
INT WINAPI lz32.GetExpandedNameW(_In_ LPTSTR lpszSource,_Out_ LPTSTR lpszBuffer)
INT WINAPI lz32.GetExpandedNameA(_In_ LPTSTR lpszSource,_Out_ LPTSTR lpszBuffer)
DWORD WINAPI advapi32.WriteEncryptedFileRaw(_In_ PFE_IMPORT_FUNC pfImportCallback,_In_opt_ PVOID pvCallbackContext,_In_ PVOID pvContext)
DWORD WINAPI kernel32.GetFullPathName(_In_ LPCTSTR lpFileName,_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer,_Out_ LPTSTR *lpFilePart)
DWORD WINAPI kernel32.GetFullPathNameW(_In_ LPCTSTR lpFileName,_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer,_Out_ LPTSTR *lpFilePart)
DWORD WINAPI kernel32.GetFullPathNameA(_In_ LPCTSTR lpFileName,_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer,_Out_ LPTSTR *lpFilePart)
BOOL WINAPI kernel32.CreateHardLink(_In_ LPCTSTR lpFileName,_In_ LPCTSTR lpExistingFileName,_Reserved_ LPSECURITY_ATTRIBUTES lpSecurityAttributes)
BOOL WINAPI kernel32.CreateHardLinkW(_In_ LPCTSTR lpFileName,_In_ LPCTSTR lpExistingFileName,_Reserved_ LPSECURITY_ATTRIBUTES lpSecurityAttributes)
BOOL WINAPI kernel32.CreateHardLinkA(_In_ LPCTSTR lpFileName,_In_ LPCTSTR lpExistingFileName,_Reserved_ LPSECURITY_ATTRIBUTES lpSecurityAttributes)
HRESULT WINAPI wofutil.WofSetFileDataLocation(_In_ HANDLE FileHandle,_In_ ULONG Provider,_In_ PVOID ExternalFileInfo,_In_ ULONG Length)
BOOL WINAPI kernel32.ReadFileEx(_In_ HANDLE hFile,_Out_opt_ LPVOID lpBuffer,_In_ DWORD nNumberOfBytesToRead,_Inout_ LPOVERLAPPED lpOverlapped,_In_ LPOVERLAPPED_COMPLETION_ROUTINE lpCompletionRoutine)
HRESULT WINAPI wofutil.WofFileEnumFiles(_In_ PCWSTR VolumeName,_In_ ULONG Algorithm,_In_ WofEnumFilesProc EnumProc,_In_opt_ PVOID UserData)
BOOL WINAPI kernel32.UnlockFile(_In_ HANDLE hFile,_In_ DWORD dwFileOffsetLow,_In_ DWORD dwFileOffsetHigh,_In_ DWORD nNumberOfBytesToUnlockLow,_In_ DWORD nNumberOfBytesToUnlockHigh)
BOOL WINAPI kernel32.SetFileInformationByHandle(_In_ HANDLE hFile,_In_ FILE_INFO_BY_HANDLE_CLASS FileInformationClass,_In_ LPVOID lpFileInformation,_In_ DWORD dwBufferSize)
HRESULT WINAPI wofutil.WofGetDriverVersion(_In_ HANDLE FileOrVolumeHandle,_In_ ULONG Provider,_Out_ PULONG WofVersion)
BOOL WINAPI kernel32.CopyFile(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName,_In_ BOOL bFailIfExists)
BOOL WINAPI kernel32.CopyFileW(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName,_In_ BOOL bFailIfExists)
BOOL WINAPI kernel32.CopyFileA(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName,_In_ BOOL bFailIfExists)
BOOL WINAPI kernel32.CheckNameLegalDOS8Dot3(_In_ LPCTSTR lpName,_Out_opt_ LPSTR lpOemName,_In_ DWORD OemNameSize,_Out_opt_ PBOOL pbNameContainsSpaces,_Out_ PBOOL pbNameLegal)
BOOL WINAPI kernel32.CheckNameLegalDOS8Dot3W(_In_ LPCTSTR lpName,_Out_opt_ LPSTR lpOemName,_In_ DWORD OemNameSize,_Out_opt_ PBOOL pbNameContainsSpaces,_Out_ PBOOL pbNameLegal)
BOOL WINAPI kernel32.CheckNameLegalDOS8Dot3A(_In_ LPCTSTR lpName,_Out_opt_ LPSTR lpOemName,_In_ DWORD OemNameSize,_Out_opt_ PBOOL pbNameContainsSpaces,_Out_ PBOOL pbNameLegal)
DWORD WINAPI advapi32.ReadEncryptedFileRaw(_In_ PFE_EXPORT_FUNC pfExportCallback,_In_opt_ PVOID pvCallbackContext,_In_ PVOID pvContext)
DWORD WINAPI kernel32.SearchPath(_In_opt_ LPCTSTR lpPath,_In_ LPCTSTR lpFileName,_In_opt_ LPCTSTR lpExtension,_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer,_Out_opt_ LPTSTR *lpFilePart)
DWORD WINAPI kernel32.SearchPathW(_In_opt_ LPCTSTR lpPath,_In_ LPCTSTR lpFileName,_In_opt_ LPCTSTR lpExtension,_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer,_Out_opt_ LPTSTR *lpFilePart)
DWORD WINAPI kernel32.SearchPathA(_In_opt_ LPCTSTR lpPath,_In_ LPCTSTR lpFileName,_In_opt_ LPCTSTR lpExtension,_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer,_Out_opt_ LPTSTR *lpFilePart)
BOOL WINAPI kernel32.MoveFileWithProgress(_In_ LPCTSTR lpExistingFileName,_In_opt_ LPCTSTR lpNewFileName,_In_opt_ LPPROGRESS_ROUTINE lpProgressRoutine,_In_opt_ LPVOID lpData,_In_ DWORD dwFlags)
BOOL WINAPI kernel32.MoveFileWithProgressW(_In_ LPCTSTR lpExistingFileName,_In_opt_ LPCTSTR lpNewFileName,_In_opt_ LPPROGRESS_ROUTINE lpProgressRoutine,_In_opt_ LPVOID lpData,_In_ DWORD dwFlags)
BOOL WINAPI kernel32.MoveFileWithProgressA(_In_ LPCTSTR lpExistingFileName,_In_opt_ LPCTSTR lpNewFileName,_In_opt_ LPPROGRESS_ROUTINE lpProgressRoutine,_In_opt_ LPVOID lpData,_In_ DWORD dwFlags)
BOOL WINAPI kernel32.FindNextFileNameW(_In_ HANDLE hFindStream,_Inout_ LPDWORD StringLength,_Inout_ PWCHAR LinkName)
HANDLE WINAPI kernel32.CreateFile(_In_ LPCTSTR lpFileName,_In_ DWORD dwDesiredAccess,_In_ DWORD dwShareMode,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ DWORD dwCreationDisposition,_In_ DWORD dwFlagsAndAttributes,_In_opt_ HANDLE hTemplateFile)
HANDLE WINAPI kernel32.CreateFileW(_In_ LPCTSTR lpFileName,_In_ DWORD dwDesiredAccess,_In_ DWORD dwShareMode,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ DWORD dwCreationDisposition,_In_ DWORD dwFlagsAndAttributes,_In_opt_ HANDLE hTemplateFile)
HANDLE WINAPI kernel32.CreateFileA(_In_ LPCTSTR lpFileName,_In_ DWORD dwDesiredAccess,_In_ DWORD dwShareMode,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ DWORD dwCreationDisposition,_In_ DWORD dwFlagsAndAttributes,_In_opt_ HANDLE hTemplateFile)
DWORD WINAPI kernel32.GetTempPath(_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer)
DWORD WINAPI kernel32.GetTempPathW(_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer)
DWORD WINAPI kernel32.GetTempPathA(_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer)
INT WINAPI lz32.LZInit(_In_ INT hfSource)
HRESULT WINAPI wofutil.WofWimSuspendEntry(_In_ PCWSTR VolumeName,_In_ LARGE_INTEGER DataSourceId)
BOOL WINAPI kernel32.SetFileShortName(_In_ HANDLE hFile,_In_ LPCTSTR lpShortName)
BOOL WINAPI kernel32.SetFileShortNameW(_In_ HANDLE hFile,_In_ LPCTSTR lpShortName)
BOOL WINAPI kernel32.SetFileShortNameA(_In_ HANDLE hFile,_In_ LPCTSTR lpShortName)
BOOL WINAPI kernel32.GetFileInformationByHandle(_In_ HANDLE hFile,_Out_ LPBY_HANDLE_FILE_INFORMATION lpFileInformation)
BOOL WINAPI kernel32.GetFileAttributesEx(_In_ LPCTSTR lpFileName,_In_ GET_FILEEX_INFO_LEVELS fInfoLevelId,_Out_ LPVOID lpFileInformation)
BOOL WINAPI kernel32.GetFileAttributesExW(_In_ LPCTSTR lpFileName,_In_ GET_FILEEX_INFO_LEVELS fInfoLevelId,_Out_ LPVOID lpFileInformation)
BOOL WINAPI kernel32.GetFileAttributesExA(_In_ LPCTSTR lpFileName,_In_ GET_FILEEX_INFO_LEVELS fInfoLevelId,_Out_ LPVOID lpFileInformation)
BOOLEAN WINAPI kernel32.CreateSymbolicLinkTransacted(_In_ LPTSTR lpSymlinkFileName,_In_ LPTSTR lpTargetFileName,_In_ DWORD dwFlags,_In_ HANDLE hTransaction)
BOOLEAN WINAPI kernel32.CreateSymbolicLinkTransactedW(_In_ LPTSTR lpSymlinkFileName,_In_ LPTSTR lpTargetFileName,_In_ DWORD dwFlags,_In_ HANDLE hTransaction)
BOOLEAN WINAPI kernel32.CreateSymbolicLinkTransactedA(_In_ LPTSTR lpSymlinkFileName,_In_ LPTSTR lpTargetFileName,_In_ DWORD dwFlags,_In_ HANDLE hTransaction)
BOOL WINAPI advapi32.FileEncryptionStatus(_In_ LPCTSTR lpFileName,_Out_ LPDWORD lpStatus)
BOOL WINAPI advapi32.FileEncryptionStatusW(_In_ LPCTSTR lpFileName,_Out_ LPDWORD lpStatus)
BOOL WINAPI advapi32.FileEncryptionStatusA(_In_ LPCTSTR lpFileName,_Out_ LPDWORD lpStatus)
UINT WINAPI kernel32.GetTempFileName(_In_ LPCTSTR lpPathName,_In_ LPCTSTR lpPrefixString,_In_ UINT uUnique,_Out_ LPTSTR lpTempFileName)
UINT WINAPI kernel32.GetTempFileNameW(_In_ LPCTSTR lpPathName,_In_ LPCTSTR lpPrefixString,_In_ UINT uUnique,_Out_ LPTSTR lpTempFileName)
UINT WINAPI kernel32.GetTempFileNameA(_In_ LPCTSTR lpPathName,_In_ LPCTSTR lpPrefixString,_In_ UINT uUnique,_Out_ LPTSTR lpTempFileName)
BOOL WINAPI kernel32.LockFileEx(_In_ HANDLE hFile,_In_ DWORD dwFlags,_Reserved_ DWORD dwReserved,_In_ DWORD nNumberOfBytesToLockLow,_In_ DWORD nNumberOfBytesToLockHigh,_Inout_ LPOVERLAPPED lpOverlapped)
HANDLE WINAPI kernel32.FindFirstStreamW(_In_ LPCWSTR lpFileName,_In_ STREAM_INFO_LEVELS InfoLevel,_Out_ LPVOID lpFindStreamData,_Reserved_ DWORD dwFlags)
BOOL WINAPI kernel32.GetQueuedCompletionStatusEx(_In_ HANDLE CompletionPort,_Out_ LPOVERLAPPED_ENTRY lpCompletionPortEntries,_In_ ULONG ulCount,_Out_ PULONG ulNumEntriesRemoved,_In_ DWORD dwMilliseconds,_In_ BOOL fAlertable)
BOOL WINAPI kernel32.MoveFile(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName)
BOOL WINAPI kernel32.MoveFileW(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName)
BOOL WINAPI kernel32.MoveFileA(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName)
BOOLEAN WINAPI kernel32.CreateSymbolicLink(_In_ LPTSTR lpSymlinkFileName,_In_ LPTSTR lpTargetFileName,_In_ DWORD dwFlags)
BOOLEAN WINAPI kernel32.CreateSymbolicLinkW(_In_ LPTSTR lpSymlinkFileName,_In_ LPTSTR lpTargetFileName,_In_ DWORD dwFlags)
BOOLEAN WINAPI kernel32.CreateSymbolicLinkA(_In_ LPTSTR lpSymlinkFileName,_In_ LPTSTR lpTargetFileName,_In_ DWORD dwFlags)
HRESULT WINAPI kernel32.CopyFile2(_In_ PCWSTR pwszExistingFileName,_In_ PCWSTR pwszNewFileName,_In_opt_ COPYFILE2_EXTENDED_PARAMETERS *pExtendedParameters)
HFILE WINAPI kernel32.OpenFile(_In_ LPCSTR lpFileName,_Out_ LPOFSTRUCT lpReOpenBuff,_In_ UINT uStyle)
LONG WINAPI lz32.LZSeek(_In_ INT hFile,_In_ LONG lOffset,_In_ INT iOrigin)
DWORD WINAPI advapi32.QueryRecoveryAgentsOnEncryptedFile(_In_ LPCWSTR lpFileName,_Out_ PENCRYPTION_CERTIFICATE_HASH_LIST *pRecoveryAgents)
DWORD WINAPI kernel32.GetCompressedFileSize(_In_ LPCTSTR lpFileName,_Out_opt_ LPDWORD lpFileSizeHigh)
DWORD WINAPI kernel32.GetCompressedFileSizeW(_In_ LPCTSTR lpFileName,_Out_opt_ LPDWORD lpFileSizeHigh)
DWORD WINAPI kernel32.GetCompressedFileSizeA(_In_ LPCTSTR lpFileName,_Out_opt_ LPDWORD lpFileSizeHigh)
BOOL WINAPI kernel32.WriteFileEx(_In_ HANDLE hFile,_In_opt_ LPCVOID lpBuffer,_In_ DWORD nNumberOfBytesToWrite,_Inout_ LPOVERLAPPED lpOverlapped,_In_ LPOVERLAPPED_COMPLETION_ROUTINE lpCompletionRoutine)
BOOL WINAPI advapi32.DecryptFile(_In_ LPCTSTR lpFileName,_Reserved_ DWORD dwReserved)
BOOL WINAPI advapi32.DecryptFileW(_In_ LPCTSTR lpFileName,_Reserved_ DWORD dwReserved)
BOOL WINAPI advapi32.DecryptFileA(_In_ LPCTSTR lpFileName,_Reserved_ DWORD dwReserved)
BOOL WINAPI kernel32.SetEndOfFile(_In_ HANDLE hFile)
HANDLE WINAPI kernel32.CreateIoCompletionPort(_In_ HANDLE FileHandle,_In_opt_ HANDLE ExistingCompletionPort,_In_ ULONG_PTR CompletionKey,_In_ DWORD NumberOfConcurrentThreads)
BOOL WINAPI kernel32.SetFileBandwidthReservation(_In_ HANDLE hFile,_In_ DWORD nPeriodMilliseconds,_In_ DWORD nBytesPerPeriod,_In_ BOOL bDiscardable,_Out_ LPDWORD lpTransferSize,_Out_ LPDWORD lpNumOutstandingRequests)
HANDLE WINAPI ktmw32.CreateTransaction(_In_opt_ LPSECURITY_ATTRIBUTES lpTransactionAttributes,_In_opt_ LPGUID UOW,_In_opt_ DWORD CreateOptions,_In_opt_ DWORD IsolationLevel,_In_opt_ DWORD IsolationFlags,_In_opt_ DWORD Timeout,_In_opt_ LPWSTR Description)
BOOL WINAPI kernel32.GetOverlappedResult(_In_ HANDLE hFile,_In_ LPOVERLAPPED lpOverlapped,_Out_ LPDWORD lpNumberOfBytesTransferred,_In_ BOOL bWait)
BOOL WINAPI kernel32.CloseHandle(_In_ HANDLE hObject)
BOOL WINAPI kernel32.GetFileAttributesTransacted(_In_ LPCTSTR lpFileName,_In_ GET_FILEEX_INFO_LEVELS fInfoLevelId,_Out_ LPVOID lpFileInformation,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.GetFileAttributesTransactedW(_In_ LPCTSTR lpFileName,_In_ GET_FILEEX_INFO_LEVELS fInfoLevelId,_Out_ LPVOID lpFileInformation,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.GetFileAttributesTransactedA(_In_ LPCTSTR lpFileName,_In_ GET_FILEEX_INFO_LEVELS fInfoLevelId,_Out_ LPVOID lpFileInformation,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.CopyFileTransacted(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName,_In_opt_ LPPROGRESS_ROUTINE lpProgressRoutine,_In_opt_ LPVOID lpData,_In_opt_ LPBOOL pbCancel,_In_ DWORD dwCopyFlags,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.CopyFileTransactedW(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName,_In_opt_ LPPROGRESS_ROUTINE lpProgressRoutine,_In_opt_ LPVOID lpData,_In_opt_ LPBOOL pbCancel,_In_ DWORD dwCopyFlags,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.CopyFileTransactedA(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName,_In_opt_ LPPROGRESS_ROUTINE lpProgressRoutine,_In_opt_ LPVOID lpData,_In_opt_ LPBOOL pbCancel,_In_ DWORD dwCopyFlags,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.CloseHandle(_In_ HANDLE hObject)
HANDLE WINAPI kernel32.CreateFileTransacted(_In_ LPCTSTR lpFileName,_In_ DWORD dwDesiredAccess,_In_ DWORD dwShareMode,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ DWORD dwCreationDisposition,_In_ DWORD dwFlagsAndAttributes,_In_opt_ HANDLE hTemplateFile,_In_ HANDLE hTransaction,_In_opt_ PUSHORT pusMiniVersion,_Reserved_ PVOID pExtendedParameter)
HANDLE WINAPI kernel32.CreateFileTransactedW(_In_ LPCTSTR lpFileName,_In_ DWORD dwDesiredAccess,_In_ DWORD dwShareMode,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ DWORD dwCreationDisposition,_In_ DWORD dwFlagsAndAttributes,_In_opt_ HANDLE hTemplateFile,_In_ HANDLE hTransaction,_In_opt_ PUSHORT pusMiniVersion,_Reserved_ PVOID pExtendedParameter)
HANDLE WINAPI kernel32.CreateFileTransactedA(_In_ LPCTSTR lpFileName,_In_ DWORD dwDesiredAccess,_In_ DWORD dwShareMode,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ DWORD dwCreationDisposition,_In_ DWORD dwFlagsAndAttributes,_In_opt_ HANDLE hTemplateFile,_In_ HANDLE hTransaction,_In_opt_ PUSHORT pusMiniVersion,_Reserved_ PVOID pExtendedParameter)
BOOL WINAPI kernel32.DeleteFileTransacted(_In_ LPCTSTR lpFileName,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.DeleteFileTransactedW(_In_ LPCTSTR lpFileName,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.DeleteFileTransactedA(_In_ LPCTSTR lpFileName,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.GetVolumeInformation(_In_opt_ LPCTSTR lpRootPathName,_Out_opt_ LPTSTR lpVolumeNameBuffer,_In_ DWORD nVolumeNameSize,_Out_opt_ LPDWORD lpVolumeSerialNumber,_Out_opt_ LPDWORD lpMaximumComponentLength,_Out_opt_ LPDWORD lpFileSystemFlags,_Out_opt_ LPTSTR lpFileSystemNameBuffer,_In_ DWORD nFileSystemNameSize)
BOOL WINAPI kernel32.GetVolumeInformationW(_In_opt_ LPCTSTR lpRootPathName,_Out_opt_ LPTSTR lpVolumeNameBuffer,_In_ DWORD nVolumeNameSize,_Out_opt_ LPDWORD lpVolumeSerialNumber,_Out_opt_ LPDWORD lpMaximumComponentLength,_Out_opt_ LPDWORD lpFileSystemFlags,_Out_opt_ LPTSTR lpFileSystemNameBuffer,_In_ DWORD nFileSystemNameSize)
BOOL WINAPI kernel32.GetVolumeInformationA(_In_opt_ LPCTSTR lpRootPathName,_Out_opt_ LPTSTR lpVolumeNameBuffer,_In_ DWORD nVolumeNameSize,_Out_opt_ LPDWORD lpVolumeSerialNumber,_Out_opt_ LPDWORD lpMaximumComponentLength,_Out_opt_ LPDWORD lpFileSystemFlags,_Out_opt_ LPTSTR lpFileSystemNameBuffer,_In_ DWORD nFileSystemNameSize)
BOOL WINAPI advapi32.EncryptionDisable(_In_ LPCWSTR DirPath,_In_ BOOL Disable)
BOOL WINAPI kernel32.UnlockFileEx(_In_ HANDLE hFile,_Reserved_ DWORD dwReserved,_In_ DWORD nNumberOfBytesToUnlockLow,_In_ DWORD nNumberOfBytesToUnlockHigh,_Inout_ LPOVERLAPPED lpOverlapped)
LONG WINAPI lz32.LZCopy(_In_ INT hfSource,_In_ INT hfDest)
BOOL WINAPI kernel32.ReplaceFile(_In_ LPCTSTR lpReplacedFileName,_In_ LPCTSTR lpReplacementFileName,_In_opt_ LPCTSTR lpBackupFileName,_In_ DWORD dwReplaceFlags,_Reserved_ LPVOID lpExclude,_Reserved_ LPVOID lpReserved)
BOOL WINAPI kernel32.ReplaceFileW(_In_ LPCTSTR lpReplacedFileName,_In_ LPCTSTR lpReplacementFileName,_In_opt_ LPCTSTR lpBackupFileName,_In_ DWORD dwReplaceFlags,_Reserved_ LPVOID lpExclude,_Reserved_ LPVOID lpReserved)
BOOL WINAPI kernel32.ReplaceFileA(_In_ LPCTSTR lpReplacedFileName,_In_ LPCTSTR lpReplacementFileName,_In_opt_ LPCTSTR lpBackupFileName,_In_ DWORD dwReplaceFlags,_Reserved_ LPVOID lpExclude,_Reserved_ LPVOID lpReserved)
BOOL WINAPI kernel32.CreateHardLinkTransacted(_In_ LPCTSTR lpFileName,_In_ LPCTSTR lpExistingFileName,_Reserved_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.CreateHardLinkTransactedW(_In_ LPCTSTR lpFileName,_In_ LPCTSTR lpExistingFileName,_Reserved_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.CreateHardLinkTransactedA(_In_ LPCTSTR lpFileName,_In_ LPCTSTR lpExistingFileName,_Reserved_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ HANDLE hTransaction)
HRESULT WINAPI wofutil.WofWimEnumFiles(_In_ PCWSTR VolumeName,_In_ LARGE_INTEGER DataSourceId,_In_ WofEnumFilesProc EnumProc,_In_opt_ PVOID UserData)
BOOL WINAPI kernel32.FindNextStreamW(_In_ HANDLE hFindStream,_Out_ LPVOID lpFindStreamData)
BOOL WINAPI kernel32.SetSearchPathMode(_In_ DWORD Flags)
DWORD WINAPI kernel32.GetLongPathNameTransacted(_In_ LPCTSTR lpszShortPath,_Out_ LPTSTR lpszLongPath,_In_ DWORD cchBuffer,_In_ HANDLE hTransaction)
DWORD WINAPI kernel32.GetLongPathNameTransactedW(_In_ LPCTSTR lpszShortPath,_Out_ LPTSTR lpszLongPath,_In_ DWORD cchBuffer,_In_ HANDLE hTransaction)
DWORD WINAPI kernel32.GetLongPathNameTransactedA(_In_ LPCTSTR lpszShortPath,_Out_ LPTSTR lpszLongPath,_In_ DWORD cchBuffer,_In_ HANDLE hTransaction)
VOID CALLBACK None.FileIOCompletionRoutine(_In_ DWORD dwErrorCode,_In_ DWORD dwNumberOfBytesTransfered,_Inout_ LPOVERLAPPED lpOverlapped)
DWORD WINAPI kernel32.GetFileAttributes(_In_ LPCTSTR lpFileName)
DWORD WINAPI kernel32.GetFileAttributesW(_In_ LPCTSTR lpFileName)
DWORD WINAPI kernel32.GetFileAttributesA(_In_ LPCTSTR lpFileName)
BOOL WINAPI kernel32.DefineDosDevice(_In_ DWORD dwFlags,_In_ LPCTSTR lpDeviceName,_In_opt_ LPCTSTR lpTargetPath)
BOOL WINAPI kernel32.DefineDosDeviceW(_In_ DWORD dwFlags,_In_ LPCTSTR lpDeviceName,_In_opt_ LPCTSTR lpTargetPath)
BOOL WINAPI kernel32.DefineDosDeviceA(_In_ DWORD dwFlags,_In_ LPCTSTR lpDeviceName,_In_opt_ LPCTSTR lpTargetPath)
BOOL WINAPI kernel32.GetVolumeNameForVolumeMountPoint(_In_ LPCTSTR lpszVolumeMountPoint,_Out_ LPTSTR lpszVolumeName,_In_ DWORD cchBufferLength)
BOOL WINAPI kernel32.GetVolumeNameForVolumeMountPointW(_In_ LPCTSTR lpszVolumeMountPoint,_Out_ LPTSTR lpszVolumeName,_In_ DWORD cchBufferLength)
BOOL WINAPI kernel32.GetVolumeNameForVolumeMountPointA(_In_ LPCTSTR lpszVolumeMountPoint,_Out_ LPTSTR lpszVolumeName,_In_ DWORD cchBufferLength)
DWORD WINAPI None.ImportCallback(_In_ PBYTE pbData,_In_opt_ PVOID pvCallbackContext,_Inout_ PULONG ulLength)
BOOL WINAPI kernel32.RemoveDirectoryTransacted(_In_ LPCTSTR lpPathName,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.RemoveDirectoryTransactedW(_In_ LPCTSTR lpPathName,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.RemoveDirectoryTransactedA(_In_ LPCTSTR lpPathName,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.GetFileInformationByHandleEx(_In_ HANDLE hFile,_In_ FILE_INFO_BY_HANDLE_CLASS FileInformationClass,_Out_ LPVOID lpFileInformation,_In_ DWORD dwBufferSize)
BOOL WINAPI kernel32.GetDiskFreeSpace(_In_ LPCTSTR lpRootPathName,_Out_ LPDWORD lpSectorsPerCluster,_Out_ LPDWORD lpBytesPerSector,_Out_ LPDWORD lpNumberOfFreeClusters,_Out_ LPDWORD lpTotalNumberOfClusters)
BOOL WINAPI kernel32.GetDiskFreeSpaceW(_In_ LPCTSTR lpRootPathName,_Out_ LPDWORD lpSectorsPerCluster,_Out_ LPDWORD lpBytesPerSector,_Out_ LPDWORD lpNumberOfFreeClusters,_Out_ LPDWORD lpTotalNumberOfClusters)
BOOL WINAPI kernel32.GetDiskFreeSpaceA(_In_ LPCTSTR lpRootPathName,_Out_ LPDWORD lpSectorsPerCluster,_Out_ LPDWORD lpBytesPerSector,_Out_ LPDWORD lpNumberOfFreeClusters,_Out_ LPDWORD lpTotalNumberOfClusters)
DWORD WINAPI kernel32.FormatMessage(_In_ DWORD dwFlags,_In_opt_ LPCVOID lpSource,_In_ DWORD dwMessageId,_In_ DWORD dwLanguageId,_Out_ LPTSTR lpBuffer,_In_ DWORD nSize,_In_opt_ va_list *Arguments)
DWORD WINAPI kernel32.FormatMessageW(_In_ DWORD dwFlags,_In_opt_ LPCVOID lpSource,_In_ DWORD dwMessageId,_In_ DWORD dwLanguageId,_Out_ LPTSTR lpBuffer,_In_ DWORD nSize,_In_opt_ va_list *Arguments)
DWORD WINAPI kernel32.FormatMessageA(_In_ DWORD dwFlags,_In_opt_ LPCVOID lpSource,_In_ DWORD dwMessageId,_In_ DWORD dwLanguageId,_Out_ LPTSTR lpBuffer,_In_ DWORD nSize,_In_opt_ va_list *Arguments)
HANDLE WINAPI kernel32.FindFirstFileEx(_In_ LPCTSTR lpFileName,_In_ FINDEX_INFO_LEVELS fInfoLevelId,_Out_ LPVOID lpFindFileData,_In_ FINDEX_SEARCH_OPS fSearchOp,_Reserved_ LPVOID lpSearchFilter,_In_ DWORD dwAdditionalFlags)
HANDLE WINAPI kernel32.FindFirstFileExW(_In_ LPCTSTR lpFileName,_In_ FINDEX_INFO_LEVELS fInfoLevelId,_Out_ LPVOID lpFindFileData,_In_ FINDEX_SEARCH_OPS fSearchOp,_Reserved_ LPVOID lpSearchFilter,_In_ DWORD dwAdditionalFlags)
HANDLE WINAPI kernel32.FindFirstFileExA(_In_ LPCTSTR lpFileName,_In_ FINDEX_INFO_LEVELS fInfoLevelId,_Out_ LPVOID lpFindFileData,_In_ FINDEX_SEARCH_OPS fSearchOp,_Reserved_ LPVOID lpSearchFilter,_In_ DWORD dwAdditionalFlags)
BOOL None kernel32.SetThreadErrorMode(_In_ DWORD dwNewMode,_Out_ LPDWORD lpOldMode)
BOOL WINAPI kernel32.ReadFileEx(_In_ HANDLE hFile,_Out_opt_ LPVOID lpBuffer,_In_ DWORD nNumberOfBytesToRead,_Inout_ LPOVERLAPPED lpOverlapped,_In_ LPOVERLAPPED_COMPLETION_ROUTINE lpCompletionRoutine)
BOOL WINAPI kernel32.WritePrivateProfileString(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ LPCTSTR lpString,_In_ LPCTSTR lpFileName)
BOOL WINAPI kernel32.WritePrivateProfileStringW(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ LPCTSTR lpString,_In_ LPCTSTR lpFileName)
BOOL WINAPI kernel32.WritePrivateProfileStringA(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ LPCTSTR lpString,_In_ LPCTSTR lpFileName)
BOOL WINAPI kernel32.MoveFileTransacted(_In_ LPCTSTR lpExistingFileName,_In_opt_ LPCTSTR lpNewFileName,_In_opt_ LPPROGRESS_ROUTINE lpProgressRoutine,_In_opt_ LPVOID lpData,_In_ DWORD dwFlags,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.MoveFileTransactedW(_In_ LPCTSTR lpExistingFileName,_In_opt_ LPCTSTR lpNewFileName,_In_opt_ LPPROGRESS_ROUTINE lpProgressRoutine,_In_opt_ LPVOID lpData,_In_ DWORD dwFlags,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.MoveFileTransactedA(_In_ LPCTSTR lpExistingFileName,_In_opt_ LPCTSTR lpNewFileName,_In_opt_ LPPROGRESS_ROUTINE lpProgressRoutine,_In_opt_ LPVOID lpData,_In_ DWORD dwFlags,_In_ HANDLE hTransaction)
PEXCEPTION_ROUTINE WINAPI kernel32.RtlVirtualUnwind(_In_ HandlerType None,_In_ ImageBase None,_In_ ControlPC None,_In_ FunctionEntry None,_Inout_ ContextRecord None,_Out_ InFunction None,_Out_ EstablisherFrame None,_Inout_opt_ ContextPointers None)
HANDLE WINAPI kernel32.CreateIoCompletionPort(_In_ HANDLE FileHandle,_In_opt_ HANDLE ExistingCompletionPort,_In_ ULONG_PTR CompletionKey,_In_ DWORD NumberOfConcurrentThreads)
HRESULT None None.HRESULT_FROM_WIN32(DWORD x None)
BOOL None ktmw32.PrePrepareEnlistment(_In_ HANDLE EnlistmentHandle,_In_ PLARGE_INTEGER TmVirtualClock)
USHORT WINAPI kernel32.CaptureStackBackTrace(_In_ ULONG FramesToSkip,_In_ ULONG FramesToCapture,_Out_ PVOID *BackTrace,_Out_opt_ PULONG BackTraceHash)
DWORD WINAPI kernel32.GetFileType(_In_ HANDLE hFile)
DWORD WINAPI kernel32.GetCurrentDirectory(_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer)
DWORD WINAPI kernel32.GetCurrentDirectoryW(_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer)
DWORD WINAPI kernel32.GetCurrentDirectoryA(_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer)
DWORD WINAPI advapi32.ReadEncryptedFileRaw(_In_ PFE_EXPORT_FUNC pfExportCallback,_In_opt_ PVOID pvCallbackContext,_In_ PVOID pvContext)
DWORD WINAPI kernel32.GetFileSize(_In_ HANDLE hFile,_Out_opt_ LPDWORD lpFileSizeHigh)
BOOL WINAPI ktmw32.SetTransactionInformation(_In_ HANDLE TransactionHandle,_In_opt_ DWORD IsolationLevel,_In_opt_ DWORD IsolationFlags,_In_opt_ DWORD Timeout,_In_opt_ LPWSTR Description)
BOOL WINAPI kernel32.UnmapViewOfFile(_In_ LPCVOID lpBaseAddress)
BOOL WINAPI kernel32.GetVolumePathName(_In_ LPCTSTR lpszFileName,_Out_ LPTSTR lpszVolumePathName,_In_ DWORD cchBufferLength)
BOOL WINAPI kernel32.GetVolumePathNameW(_In_ LPCTSTR lpszFileName,_Out_ LPTSTR lpszVolumePathName,_In_ DWORD cchBufferLength)
BOOL WINAPI kernel32.GetVolumePathNameA(_In_ LPCTSTR lpszFileName,_Out_ LPTSTR lpszVolumePathName,_In_ DWORD cchBufferLength)
HANDLE WINAPI ktmw32.OpenTransactionManagerById(_In_ LPGUID TransactionManagerId,_In_ ACCESS_MASK DesiredAccess,_In_opt_ ULONG OpenOptions)
BOOL WINAPI ktmw32.CommitTransactionAsync(_In_ HANDLE TransactionHandle)
BOOL WINAPI kernel32.GetPrivateProfileStruct(_In_ LPCTSTR lpszSection,_In_ LPCTSTR lpszKey,_Out_ LPVOID lpStruct,_In_ UINT uSizeStruct,_In_ LPCTSTR szFile)
BOOL WINAPI kernel32.GetPrivateProfileStructW(_In_ LPCTSTR lpszSection,_In_ LPCTSTR lpszKey,_Out_ LPVOID lpStruct,_In_ UINT uSizeStruct,_In_ LPCTSTR szFile)
BOOL WINAPI kernel32.GetPrivateProfileStructA(_In_ LPCTSTR lpszSection,_In_ LPCTSTR lpszKey,_Out_ LPVOID lpStruct,_In_ UINT uSizeStruct,_In_ LPCTSTR szFile)
BOOL WINAPI user32.FlashWindowEx(_In_ PFLASHWINFO pfwi)
BOOL WINAPI kernel32.UnlockFileEx(_In_ HANDLE hFile,_Reserved_ DWORD dwReserved,_In_ DWORD nNumberOfBytesToUnlockLow,_In_ DWORD nNumberOfBytesToUnlockHigh,_Inout_ LPOVERLAPPED lpOverlapped)
INT None mswsock.RIONotify(_In_ RIO_CQ CQ)
BOOL WINAPI ktmw32.GetNotificationResourceManager(_In_ HANDLE ResourceManagerHandle,_Out_ PTRANSACTION_NOTIFICATION TransactionNotification,_In_ ULONG NotificationLength,_In_opt_ DWORD dwMilliseconds,_Out_opt_ PULONG ReturnLength)
PSLIST_ENTRY WINAPI ntdll.RtlFirstEntrySList(_In_ PSLIST_HEADER ListHead)
BOOL WINAPI kernel32.SetCommTimeouts(_In_ HANDLE hFile,_In_ LPCOMMTIMEOUTS lpCommTimeouts)
DWORD None None.SCODE_SEVERITY(SCODE sc None)
HLOCAL WINAPI kernel32.LocalFree(_In_ HLOCAL hMem)
DWORD WINAPI None.ExportCallback(_In_ PBYTE pbData,_In_opt_ PVOID pvCallbackContext,_In_ ULONG ulLength)
BOOL None mswsock.AcceptEx(_In_ SOCKET sListenSocket,_In_ SOCKET sAcceptSocket,_In_ PVOID lpOutputBuffer,_In_ DWORD dwReceiveDataLength,_In_ DWORD dwLocalAddressLength,_In_ DWORD dwRemoteAddressLength,_Out_ LPDWORD lpdwBytesReceived,_In_ LPOVERLAPPED lpOverlapped)
HANDLE WINAPI kernel32.FindFirstVolume(_Out_ LPTSTR lpszVolumeName,_In_ DWORD cchBufferLength)
HANDLE WINAPI kernel32.FindFirstVolumeW(_Out_ LPTSTR lpszVolumeName,_In_ DWORD cchBufferLength)
HANDLE WINAPI kernel32.FindFirstVolumeA(_Out_ LPTSTR lpszVolumeName,_In_ DWORD cchBufferLength)
LONG WINAPI advapi32.RegCloseKey(_In_ HKEY hKey)
PSLIST_ENTRY WINAPI kernel32.InterlockedPushEntrySList(_Inout_ PSLIST_HEADER ListHead,_Inout_ PSLIST_ENTRY ListEntry)
BOOL None None.SUCCEEDED(HRESULT hr None)
WORD None None.SCODE_FACILITY(SCODE sc None)
DWORD WINAPI kernel32.GetProfileString(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ LPCTSTR lpDefault,_Out_ LPTSTR lpReturnedString,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetProfileStringW(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ LPCTSTR lpDefault,_Out_ LPTSTR lpReturnedString,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetProfileStringA(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ LPCTSTR lpDefault,_Out_ LPTSTR lpReturnedString,_In_ DWORD nSize)
BOOL WINAPI kernel32.ReadDirectoryChangesExW(_In_ HANDLE hDirectory,_Out_ LPVOID lpBuffer,_In_ DWORD nBufferLength,_In_ BOOL bWatchSubtree,_In_ DWORD dwNotifyFilter,_Out_opt_ LPDWORD lpBytesReturned,_Inout_opt_ LPOVERLAPPED lpOverlapped,_In_opt_ LPOVERLAPPED_COMPLETION_ROUTINE lpCompletionRoutine,_In_ READ_DIRECTORY_NOTIFY_INFORMATION_CLASS ReadDirectoryNotifyInformationClass)
LONG WINAPI advapi32.RegOpenKey(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_Out_ PHKEY phkResult)
LONG WINAPI advapi32.RegOpenKeyW(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_Out_ PHKEY phkResult)
LONG WINAPI advapi32.RegOpenKeyA(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_Out_ PHKEY phkResult)
HANDLE WINAPI kernel32.FindFirstVolumeMountPoint(_In_ LPTSTR lpszRootPathName,_Out_ LPTSTR lpszVolumeMountPoint,_In_ DWORD cchBufferLength)
HANDLE WINAPI kernel32.FindFirstVolumeMountPointW(_In_ LPTSTR lpszRootPathName,_Out_ LPTSTR lpszVolumeMountPoint,_In_ DWORD cchBufferLength)
HANDLE WINAPI kernel32.FindFirstVolumeMountPointA(_In_ LPTSTR lpszRootPathName,_Out_ LPTSTR lpszVolumeMountPoint,_In_ DWORD cchBufferLength)
BOOL None None.HasOverlappedIoCompleted(LPOVERLAPPED lpOverlapped None)
BOOL WINAPI kernel32.CopyFileEx(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName,_In_opt_ LPPROGRESS_ROUTINE lpProgressRoutine,_In_opt_ LPVOID lpData,_In_opt_ LPBOOL pbCancel,_In_ DWORD dwCopyFlags)
BOOL WINAPI kernel32.CopyFileExW(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName,_In_opt_ LPPROGRESS_ROUTINE lpProgressRoutine,_In_opt_ LPVOID lpData,_In_opt_ LPBOOL pbCancel,_In_ DWORD dwCopyFlags)
BOOL WINAPI kernel32.CopyFileExA(_In_ LPCTSTR lpExistingFileName,_In_ LPCTSTR lpNewFileName,_In_opt_ LPPROGRESS_ROUTINE lpProgressRoutine,_In_opt_ LPVOID lpData,_In_opt_ LPBOOL pbCancel,_In_ DWORD dwCopyFlags)
BOOL WINAPI kernel32.GetHandleInformation(_In_ HANDLE hObject,_Out_ LPDWORD lpdwFlags)
BOOL WINAPI ktmw32.GetCurrentClockTransactionManager(_In_ HANDLE TransactionManagerHandle,_Out_ PLARGE_INTEGER TmVirtualClock)
LONG WINAPI advapi32.RegSetValue(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_ DWORD dwType,_In_ LPCTSTR lpData,_In_ DWORD cbData)
LONG WINAPI advapi32.RegSetValueW(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_ DWORD dwType,_In_ LPCTSTR lpData,_In_ DWORD cbData)
LONG WINAPI advapi32.RegSetValueA(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_ DWORD dwType,_In_ LPCTSTR lpData,_In_ DWORD cbData)
HANDLE WINAPI ktmw32.OpenTransaction(_In_ DWORD dwDesiredAccess,_In_ LPGUID TransactionId)
BOOL WINAPI ktmw32.GetEnlistmentId(_In_ HANDLE EnlistmentHandle,_Out_ LPGUID EnlistmentId)
UINT WINAPI kernel32.GetDriveType(_In_opt_ LPCTSTR lpRootPathName)
UINT WINAPI kernel32.GetDriveTypeW(_In_opt_ LPCTSTR lpRootPathName)
UINT WINAPI kernel32.GetDriveTypeA(_In_opt_ LPCTSTR lpRootPathName)
LONG WINAPI advapi32.RegSaveKey(_In_ HKEY hKey,_In_ LPCTSTR lpFile,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes)
LONG WINAPI advapi32.RegSaveKeyW(_In_ HKEY hKey,_In_ LPCTSTR lpFile,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes)
LONG WINAPI advapi32.RegSaveKeyA(_In_ HKEY hKey,_In_ LPCTSTR lpFile,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes)
BOOL WINAPI kernel32.RemoveDirectoryTransacted(_In_ LPCTSTR lpPathName,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.RemoveDirectoryTransactedW(_In_ LPCTSTR lpPathName,_In_ HANDLE hTransaction)
BOOL WINAPI kernel32.RemoveDirectoryTransactedA(_In_ LPCTSTR lpPathName,_In_ HANDLE hTransaction)
BOOLEAN WINAPI kernel32.TryAcquireSRWLockExclusive(_Inout_ PSRWLOCK SRWLock)
BOOL WINAPI kernel32.SetVolumeLabel(_In_opt_ LPCTSTR lpRootPathName,_In_opt_ LPCTSTR lpVolumeName)
BOOL WINAPI kernel32.SetVolumeLabelW(_In_opt_ LPCTSTR lpRootPathName,_In_opt_ LPCTSTR lpVolumeName)
BOOL WINAPI kernel32.SetVolumeLabelA(_In_opt_ LPCTSTR lpRootPathName,_In_opt_ LPCTSTR lpVolumeName)
BOOL WINAPI kernel32.ReadFileScatter(_In_ HANDLE hFile,_In_ FILE_SEGMENT_ELEMENT aSegmentArray[],_In_ DWORD nNumberOfBytesToRead,_Reserved_ LPDWORD lpReserved,_Inout_ LPOVERLAPPED lpOverlapped)
BOOL WINAPI ktmw32.GetTransactionInformation(_In_ HANDLE TransactionHandle,_Out_opt_ PDWORD Outcome,_Out_opt_ PDWORD IsolationLevel,_Out_opt_ PDWORD IsolationFlags,_Out_opt_ PDWORD Timeout,_In_ DWORD BufferLength,_Out_opt_ LPWSTR Description)
BOOL WINAPI kernel32.CloseHandle(_In_ HANDLE hObject)
BOOL WINAPI kernel32.HeapQueryInformation(_In_opt_ HANDLE HeapHandle,_In_ HEAP_INFORMATION_CLASS HeapInformationClass,_Out_ PVOID HeapInformation,_In_ SIZE_T HeapInformationLength,_Out_opt_ PSIZE_T ReturnLength)
BOOL WINAPI kernel32.FindNextVolume(_In_ HANDLE hFindVolume,_Out_ LPTSTR lpszVolumeName,_In_ DWORD cchBufferLength)
BOOL WINAPI kernel32.FindNextVolumeW(_In_ HANDLE hFindVolume,_Out_ LPTSTR lpszVolumeName,_In_ DWORD cchBufferLength)
BOOL WINAPI kernel32.FindNextVolumeA(_In_ HANDLE hFindVolume,_Out_ LPTSTR lpszVolumeName,_In_ DWORD cchBufferLength)
BOOL WINAPI kernel32.DeleteVolumeMountPoint(_In_ LPCTSTR lpszVolumeMountPoint)
BOOL WINAPI kernel32.DeleteVolumeMountPointW(_In_ LPCTSTR lpszVolumeMountPoint)
BOOL WINAPI kernel32.DeleteVolumeMountPointA(_In_ LPCTSTR lpszVolumeMountPoint)
HANDLE WINAPI ktmw32.CreateResourceManager(_In_opt_ LPSECURITY_ATTRIBUTES lpResourceManagerAttributes,_In_ LPGUID ResourceManagerID,_In_opt_ DWORD CreateOptions,_In_ HANDLE TmHandle,_In_opt_ LPWSTR Description)
WORD None None.HRESULT_CODE(HRESULT hr None)
NET_API_STATUS None netapi32.NetDfsSetStdContainerSecurity(_In_ LPWSTR MachineName,_In_ SECURITY_INFORMATION SecurityInformation,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor)
BOOL WINAPI kernel32.SetFileAttributes(_In_ LPCTSTR lpFileName,_In_ DWORD dwFileAttributes)
BOOL WINAPI kernel32.SetFileAttributesW(_In_ LPCTSTR lpFileName,_In_ DWORD dwFileAttributes)
BOOL WINAPI kernel32.SetFileAttributesA(_In_ LPCTSTR lpFileName,_In_ DWORD dwFileAttributes)
DWORD WINAPI kernel32.GetPrivateProfileString(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ LPCTSTR lpDefault,_Out_ LPTSTR lpReturnedString,_In_ DWORD nSize,_In_ LPCTSTR lpFileName)
DWORD WINAPI kernel32.GetPrivateProfileStringW(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ LPCTSTR lpDefault,_Out_ LPTSTR lpReturnedString,_In_ DWORD nSize,_In_ LPCTSTR lpFileName)
DWORD WINAPI kernel32.GetPrivateProfileStringA(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ LPCTSTR lpDefault,_Out_ LPTSTR lpReturnedString,_In_ DWORD nSize,_In_ LPCTSTR lpFileName)
INT WSAAPI ws2_32.WSAEnumNameSpaceProviders(_Inout_ LPDWORD lpdwBufferLength,_Out_ LPWSANAMESPACE_INFO lpnspBuffer)
INT WSAAPI ws2_32.WSAEnumNameSpaceProvidersW(_Inout_ LPDWORD lpdwBufferLength,_Out_ LPWSANAMESPACE_INFO lpnspBuffer)
INT WSAAPI ws2_32.WSAEnumNameSpaceProvidersA(_Inout_ LPDWORD lpdwBufferLength,_Out_ LPWSANAMESPACE_INFO lpnspBuffer)
BOOL WINAPI ktmw32.GetTransactionManagerId(_In_ HANDLE TransactionManagerHandle,_Out_ LPGUID TransactionManagerId)
BOOL WINAPI kernel32.CreateTimerQueueTimer(_Out_ PHANDLE phNewTimer,_In_opt_ HANDLE TimerQueue,_In_ WAITORTIMERCALLBACK Callback,_In_opt_ PVOID Parameter,_In_ DWORD DueTime,_In_ DWORD Period,_In_ ULONG Flags)
NET_API_STATUS None netapi32.NetDfsSetSecurity(_In_ LPWSTR DfsEntryPath,_In_ SECURITY_INFORMATION SecurityInformation,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor)
UINT WINAPI kernel32.SetErrorMode(_In_ UINT uMode)
HRESULT WINAPI wofutil.WofWimUpdateEntry(_In_ PCWSTR VolumeName,_In_ LARGE_INTEGER DataSourceId,_In_ PCWSTR NewWimPath)
BOOL None None.DisconnectEx(_In_ SOCKET hSocket,_In_ LPOVERLAPPED lpOverlapped,_In_ DWORD dwFlags,_In_ DWORD reserved)
LONG WINAPI advapi32.RegSaveKeyEx(_In_ HKEY hKey,_In_ LPCTSTR lpFile,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ DWORD Flags)
LONG WINAPI advapi32.RegSaveKeyExW(_In_ HKEY hKey,_In_ LPCTSTR lpFile,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ DWORD Flags)
LONG WINAPI advapi32.RegSaveKeyExA(_In_ HKEY hKey,_In_ LPCTSTR lpFile,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ DWORD Flags)
BOOL WINAPI kernel32.UnregisterWaitEx(_In_ HANDLE WaitHandle,_In_opt_ HANDLE CompletionEvent)
ULONG WINAPI ntdll.RtlNtStatusToDosErrorNoTeb(_In_ NTSTATUS Status)
ULONG WINAPI ntdll.RtlNtStatusToDosError(_In_ NTSTATUS Status)
HRESULT WINAPI wofutil.WofWimAddEntry(_In_ PCWSTR VolumeName,_In_ PCWSTR WimPath,_In_ DWORD WimType,_In_ DWORD WimIndex,_Out_ PLARGE_INTEGER DataSourceId)
BOOL WINAPI kernel32.WaitCommEvent(_In_ HANDLE hFile,_Out_ LPDWORD lpEvtMask,_In_ LPOVERLAPPED lpOverlapped)
BOOL WINAPI ktmw32.SinglePhaseReject(_In_ HANDLE EnlistmentHandle,_In_ PLARGE_INTEGER TmVirtualClock)
BOOL WINAPI kernel32.DuplicateHandle(_In_ HANDLE hSourceProcessHandle,_In_ HANDLE hSourceHandle,_In_ HANDLE hTargetProcessHandle,_Out_ LPHANDLE lpTargetHandle,_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ DWORD dwOptions)
UINT WINAPI kernel32.GlobalFlags(_In_ HGLOBAL hMem)
INT WSPAPI ws2_32.WSAEnumNameSpaceProvidersEx(_Inout_ LPDWORD lpdwBufferLength,_Out_ LPWSANAMESPACE_INFOEX lpnspBuffer)
INT WSPAPI ws2_32.WSAEnumNameSpaceProvidersExW(_Inout_ LPDWORD lpdwBufferLength,_Out_ LPWSANAMESPACE_INFOEX lpnspBuffer)
INT WSPAPI ws2_32.WSAEnumNameSpaceProvidersExA(_Inout_ LPDWORD lpdwBufferLength,_Out_ LPWSANAMESPACE_INFOEX lpnspBuffer)
BOOL WINAPI kernel32.FindNextVolumeMountPoint(_In_ HANDLE hFindVolumeMountPoint,_Out_ LPTSTR lpszVolumeMountPoint,_In_ DWORD cchBufferLength)
BOOL WINAPI kernel32.FindNextVolumeMountPointW(_In_ HANDLE hFindVolumeMountPoint,_Out_ LPTSTR lpszVolumeMountPoint,_In_ DWORD cchBufferLength)
BOOL WINAPI kernel32.FindNextVolumeMountPointA(_In_ HANDLE hFindVolumeMountPoint,_Out_ LPTSTR lpszVolumeMountPoint,_In_ DWORD cchBufferLength)
WORD None None.HRESULT_FACILITY(HRESULT hr None)
HRESULT None ole32.CoGetClassObject(_In_ REFCLSID rclsid,_In_ DWORD dwClsContext,_In_opt_ COSERVERINFO *pServerInfo,_In_ REFIID riid,_Out_ LPVOID *ppv)
BOOL WINAPI ktmw32.RollbackComplete(_In_ HANDLE EnlistmentHandle,_In_ PLARGE_INTEGER TmVirtualClock)
BOOL WINAPI ktmw32.GetTransactionId(_In_ HANDLE TransactionHandle,_Out_ LPGUID TransactionId)
BOOL WINAPI kernel32.SetPriorityClass(_In_ HANDLE hProcess,_In_ DWORD dwPriorityClass)
VOID WINAPI kernel32.InitializeConditionVariable(_Out_ PCONDITION_VARIABLE ConditionVariable)
DWORD WINAPI kernel32.GetPrivateProfileSectionNames(_Out_ LPTSTR lpszReturnBuffer,_In_ DWORD nSize,_In_ LPCTSTR lpFileName)
DWORD WINAPI kernel32.GetPrivateProfileSectionNamesW(_Out_ LPTSTR lpszReturnBuffer,_In_ DWORD nSize,_In_ LPCTSTR lpFileName)
DWORD WINAPI kernel32.GetPrivateProfileSectionNamesA(_Out_ LPTSTR lpszReturnBuffer,_In_ DWORD nSize,_In_ LPCTSTR lpFileName)
HANDLE WINAPI ktmw32.CreateEnlistment(_In_opt_ LPSECURITY_ATTRIBUTES lpEnlistmentrAttributes,_In_ HANDLE ResourceManagerHandle,_In_ HANDLE TransactionHandle,_In_ NOTIFICATION_MASK NotificationMask,_In_opt_ DWORD CreateOptions,_In_opt_ PVOID EnlistmentKey)
BOOL WINAPI authz.AuthzAddSidsToContext(_In_ AUTHZ_CLIENT_CONTEXT_HANDLE OrigClientContext,_In_ PSID_AND_ATTRIBUTES Sids,_In_ DWORD SidCount,_In_ PSID_AND_ATTRIBUTES RestrictedSids,_In_ DWORD RestrictedSidCount,_Out_ PAUTHZ_CLIENT_CONTEXT_HANDLE pNewClientContext)
UINT WINAPI kernel32.GetProfileInt(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ INT nDefault)
UINT WINAPI kernel32.GetProfileIntW(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ INT nDefault)
UINT WINAPI kernel32.GetProfileIntA(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ INT nDefault)
HANDLE WINAPI ktmw32.OpenEnlistment(_In_ DWORD dwDesiredAccess,_In_ ResourceManagerHandle None,_In_ LPGUID EnlistmentId)
DWORD WINAPI kernel32.GetLogicalDriveStrings(_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer)
DWORD WINAPI kernel32.GetLogicalDriveStringsW(_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer)
DWORD WINAPI kernel32.GetLogicalDriveStringsA(_In_ DWORD nBufferLength,_Out_ LPTSTR lpBuffer)
BOOL WINAPI ktmw32.GetTransactionManagerId(_In_ HANDLE TransactionManagerHandle,_Out_ LPGUID TransactionManagerId)
BOOL WINAPI kernel32.ResetEvent(_In_ HANDLE hEvent)
NET_API_STATUS None netapi32.NetDfsAddStdRoot(_In_ LPWSTR ServerName,_In_ LPWSTR RootShare,_In_opt_ LPWSTR Comment,_In_ DWORD Flags)
RoInitializeWrapper None None.initialize(RO_INIT_MULTITHREADED None None)
LONG WINAPI advapi32.RegQueryValue(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_Out_opt_ LPTSTR lpValue,_Inout_opt_ PLONG lpcbValue)
LONG WINAPI advapi32.RegQueryValueW(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_Out_opt_ LPTSTR lpValue,_Inout_opt_ PLONG lpcbValue)
LONG WINAPI advapi32.RegQueryValueA(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_Out_opt_ LPTSTR lpValue,_Inout_opt_ PLONG lpcbValue)
BOOL WINAPI ktmw32.RollbackTransactionAsync(_In_ HANDLE TransactionHandle)
LONG WINAPI advapi32.RegDeleteKeyValue(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_opt_ LPCTSTR lpValueName)
LONG WINAPI advapi32.RegDeleteKeyValueW(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_opt_ LPCTSTR lpValueName)
LONG WINAPI advapi32.RegDeleteKeyValueA(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_opt_ LPCTSTR lpValueName)
LONG WINAPI advapi32.RegOpenUserClassesRoot(_In_ HANDLE hToken,_Reserved_ DWORD dwOptions,_In_ REGSAM samDesired,_Out_ PHKEY phkResult)
BOOL WINAPI kernel32.ReleaseSemaphore(_In_ HANDLE hSemaphore,_In_ LONG lReleaseCount,_Out_opt_ LPLONG lpPreviousCount)
BOOL WINAPI kernel32.VirtualLock(_In_ LPVOID lpAddress,_In_ SIZE_T dwSize)
DWORD WINAPI kernel32.QueryDosDevice(_In_opt_ LPCTSTR lpDeviceName,_Out_ LPTSTR lpTargetPath,_In_ DWORD ucchMax)
DWORD WINAPI kernel32.QueryDosDeviceW(_In_opt_ LPCTSTR lpDeviceName,_Out_ LPTSTR lpTargetPath,_In_ DWORD ucchMax)
DWORD WINAPI kernel32.QueryDosDeviceA(_In_opt_ LPCTSTR lpDeviceName,_Out_ LPTSTR lpTargetPath,_In_ DWORD ucchMax)
BOOL WINAPI kernel32.WritePrivateProfileSection(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpString,_In_ LPCTSTR lpFileName)
BOOL WINAPI kernel32.WritePrivateProfileSectionW(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpString,_In_ LPCTSTR lpFileName)
BOOL WINAPI kernel32.WritePrivateProfileSectionA(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpString,_In_ LPCTSTR lpFileName)
UINT WINAPI kernel32.GetPrivateProfileInt(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ INT nDefault,_In_ LPCTSTR lpFileName)
UINT WINAPI kernel32.GetPrivateProfileIntW(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ INT nDefault,_In_ LPCTSTR lpFileName)
UINT WINAPI kernel32.GetPrivateProfileIntA(_In_ LPCTSTR lpAppName,_In_ LPCTSTR lpKeyName,_In_ INT nDefault,_In_ LPCTSTR lpFileName)
LONG WINAPI advapi32.RegQueryReflectionKey(_In_ HKEY hBase,_Out_ BOOL *bIsReflectionDisabled)
BOOL WINAPI ktmw32.SetResourceManagerCompletionPort(_In_ HANDLE ResourceManagerHandle,_In_ HANDLE IoCompletionPortHandle,_In_ ULONG_PTR CompletionKey)
NTSTATUS None None.FltFsControlFile(_In_ PFLT_INSTANCE Instance,_In_ PFILE_OBJECT FileObject,_In_ ULONG FsControlCode,_In_opt_ PVOID InputBuffer,_In_ ULONG InputBufferLength,_Out_opt_ PVOID OutputBuffer,_In_ ULONG OutputBufferLength,_Out_opt_ PULONG LengthReturned)
BOOL WINAPI ktmw32.GetEnlistmentRecoveryInformation(_In_ HANDLE EnlistmentHandle,_In_ ULONG BufferSize,_Out_ PVOID Buffer,_Out_opt_ PULONG BufferUsed)
INT None mswsock.GetTypeByName(_In_ LPTSTR lpServiceName,_Inout_ PGUID lpServiceType)
INT None mswsock.GetTypeByNameW(_In_ LPTSTR lpServiceName,_Inout_ PGUID lpServiceType)
INT None mswsock.GetTypeByNameA(_In_ LPTSTR lpServiceName,_Inout_ PGUID lpServiceType)
BOOLEAN WINAPI kernel32.TryAcquireSRWLockShared(_Inout_ PSRWLOCK SRWLock)
HRESULT None ole32.StringFromCLSID(_In_ REFCLSID rclsid,_Out_ LPOLESTR *lplpsz)
VOID WINAPI kernel32.DeleteBoundaryDescriptor(_In_ HANDLE BoundaryDescriptor)
HRESULT None ole32.CreateItemMoniker(_In_ LPCOLESTR lpszDelim,_In_ LPCOLESTR lpszItem,_Out_ LPMONIKER *ppmk)
LONG WINAPI advapi32.RegOpenKeyEx(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_ DWORD ulOptions,_In_ REGSAM samDesired,_Out_ PHKEY phkResult)
LONG WINAPI advapi32.RegOpenKeyExW(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_ DWORD ulOptions,_In_ REGSAM samDesired,_Out_ PHKEY phkResult)
LONG WINAPI advapi32.RegOpenKeyExA(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_ DWORD ulOptions,_In_ REGSAM samDesired,_Out_ PHKEY phkResult)
LPVOID WINAPI kernel32.VirtualAlloc(_In_opt_ LPVOID lpAddress,_In_ SIZE_T dwSize,_In_ DWORD flAllocationType,_In_ DWORD flProtect)
BOOL WINAPI ktmw32.CommitComplete(_In_ HANDLE EnlistmentHandle,_In_ PLARGE_INTEGER TmVirtualClock)
BOOL WINAPI ktmw32.CommitTransaction(_In_ HANDLE TransactionHandle)
BOOL None mswsock.RIOSend(_In_ RIO_RQ SocketQueue,_In_ PRIO_BUF pData,_In_ ULONG DataBufferCount,_In_ DWORD Flags,_In_ PVOID RequestContext)
LONG WINAPI advapi32.RegNotifyChangeKeyValue(_In_ HKEY hKey,_In_ BOOL bWatchSubtree,_In_ DWORD dwNotifyFilter,_In_opt_ HANDLE hEvent,_In_ BOOL fAsynchronous)
BOOL WINAPI ktmw32.RollbackEnlistment(_In_ HANDLE EnlistmentHandle,_In_ PLARGE_INTEGER TmVirtualClock)
VOID CALLBACK None.WaitOrTimerCallback(_In_ PVOID lpParameter,_In_ BOOLEAN TimerOrWaitFired)
BOOL WINAPI ktmw32.PrepareComplete(_In_ HANDLE EnlistmentHandle,_In_ PLARGE_INTEGER TmVirtualClock)
LONG WINAPI advapi32.RegQueryValueEx(_In_ HKEY hKey,_In_opt_ LPCTSTR lpValueName,_Reserved_ LPDWORD lpReserved,_Out_opt_ LPDWORD lpType,_Out_opt_ LPBYTE lpData,_Inout_opt_ LPDWORD lpcbData)
LONG WINAPI advapi32.RegQueryValueExW(_In_ HKEY hKey,_In_opt_ LPCTSTR lpValueName,_Reserved_ LPDWORD lpReserved,_Out_opt_ LPDWORD lpType,_Out_opt_ LPBYTE lpData,_Inout_opt_ LPDWORD lpcbData)
LONG WINAPI advapi32.RegQueryValueExA(_In_ HKEY hKey,_In_opt_ LPCTSTR lpValueName,_Reserved_ LPDWORD lpReserved,_Out_opt_ LPDWORD lpType,_Out_opt_ LPBYTE lpData,_Inout_opt_ LPDWORD lpcbData)
BOOL WINAPI kernel32.GetCommState(_In_ HANDLE hFile,_Inout_ LPDCB lpDCB)
BOOL WINAPI kernel32.InitOnceExecuteOnce(_Inout_ PINIT_ONCE InitOnce,_In_ PINIT_ONCE_FN InitFn,_Inout_opt_ PVOID Parameter,_Out_opt_ LPVOID *Context)
LRESULT CALLBACK atlthunk.AtlThunk(_In_ HWND hwnd,_In_ UINT uMsg,_In_ WPARAM wParam,_In_ LPARAM lParam)
LONG WINAPI advapi32.RegLoadMUIString(_In_ HKEY hKey,_In_opt_ LPCTSTR pszValue,_Out_opt_ LPTSTR pszOutBuf,_In_ DWORD cbOutBuf,_Out_opt_ LPDWORD pcbData,_In_ DWORD Flags,_In_opt_ LPCTSTR pszDirectory)
LONG WINAPI advapi32.RegLoadMUIStringW(_In_ HKEY hKey,_In_opt_ LPCTSTR pszValue,_Out_opt_ LPTSTR pszOutBuf,_In_ DWORD cbOutBuf,_Out_opt_ LPDWORD pcbData,_In_ DWORD Flags,_In_opt_ LPCTSTR pszDirectory)
LONG WINAPI advapi32.RegLoadMUIStringA(_In_ HKEY hKey,_In_opt_ LPCTSTR pszValue,_Out_opt_ LPTSTR pszOutBuf,_In_ DWORD cbOutBuf,_Out_opt_ LPDWORD pcbData,_In_ DWORD Flags,_In_opt_ LPCTSTR pszDirectory)
NET_API_STATUS NET_API_FUNCTION netapi32.NetDfsAddRootTarget(_In_ LPWSTR pDfsPath,_In_opt_ LPWSTR pTargetPath,_In_ ULONG MajorVersion,_In_opt_ LPWSTR pComment,_In_ ULONG Flags)
BOOL WINAPI advapi32.LookupPrivilegeName(_In_opt_ LPCTSTR lpSystemName,_In_ PLUID lpLuid,_Out_opt_ LPTSTR lpName,_Inout_ LPDWORD cchName)
BOOL WINAPI advapi32.LookupPrivilegeNameW(_In_opt_ LPCTSTR lpSystemName,_In_ PLUID lpLuid,_Out_opt_ LPTSTR lpName,_Inout_ LPDWORD cchName)
BOOL WINAPI advapi32.LookupPrivilegeNameA(_In_opt_ LPCTSTR lpSystemName,_In_ PLUID lpLuid,_Out_opt_ LPTSTR lpName,_Inout_ LPDWORD cchName)
BOOL WINAPI ktmw32.SetEnlistmentRecoveryInformation(_In_ HANDLE EnlistmentHandle,_In_ ULONG BufferSize,_In_ PVOID Buffer)
INT None ws2_32.WSAInstallServiceClass(_In_ LPWSASERVICECLASSINFO lpServiceClassInfo)
INT None ws2_32.WSAInstallServiceClassW(_In_ LPWSASERVICECLASSINFO lpServiceClassInfo)
INT None ws2_32.WSAInstallServiceClassA(_In_ LPWSASERVICECLASSINFO lpServiceClassInfo)
HANDLE WINAPI kernel32.CreateWaitableTimer(_In_opt_ LPSECURITY_ATTRIBUTES lpTimerAttributes,_In_ BOOL bManualReset,_In_opt_ LPCTSTR lpTimerName)
HANDLE WINAPI kernel32.CreateWaitableTimerW(_In_opt_ LPSECURITY_ATTRIBUTES lpTimerAttributes,_In_ BOOL bManualReset,_In_opt_ LPCTSTR lpTimerName)
HANDLE WINAPI kernel32.CreateWaitableTimerA(_In_opt_ LPSECURITY_ATTRIBUTES lpTimerAttributes,_In_ BOOL bManualReset,_In_opt_ LPCTSTR lpTimerName)
PVOID WINAPI kernel32.MapViewOfFileFromApp(_In_ HANDLE hFileMappingObject,_In_ ULONG DesiredAccess,_In_ ULONG64 FileOffset,_In_ SIZE_T NumberOfBytesToMap)
LONG WINAPI advapi32.RegQueryMultipleValues(_In_ HKEY hKey,_Out_ PVALENT val_list,_In_ DWORD num_vals,_Out_opt_ LPTSTR lpValueBuf,_Inout_opt_ LPDWORD ldwTotsize)
LONG WINAPI advapi32.RegQueryMultipleValuesW(_In_ HKEY hKey,_Out_ PVALENT val_list,_In_ DWORD num_vals,_Out_opt_ LPTSTR lpValueBuf,_Inout_opt_ LPDWORD ldwTotsize)
LONG WINAPI advapi32.RegQueryMultipleValuesA(_In_ HKEY hKey,_Out_ PVALENT val_list,_In_ DWORD num_vals,_Out_opt_ LPTSTR lpValueBuf,_Inout_opt_ LPDWORD ldwTotsize)
LONG WINAPI advapi32.RegDeleteKeyTransacted(_In_ HKEY hKey,_In_ LPCTSTR lpSubKey,_In_ REGSAM samDesired,_Reserved_ DWORD Reserved,_In_ HANDLE hTransaction,_Reserved_ PVOID pExtendedParameter)
LONG WINAPI advapi32.RegDeleteKeyTransactedW(_In_ HKEY hKey,_In_ LPCTSTR lpSubKey,_In_ REGSAM samDesired,_Reserved_ DWORD Reserved,_In_ HANDLE hTransaction,_Reserved_ PVOID pExtendedParameter)
LONG WINAPI advapi32.RegDeleteKeyTransactedA(_In_ HKEY hKey,_In_ LPCTSTR lpSubKey,_In_ REGSAM samDesired,_Reserved_ DWORD Reserved,_In_ HANDLE hTransaction,_Reserved_ PVOID pExtendedParameter)
LPVOID WINAPI kernel32.MapViewOfFileExNuma(_In_ HANDLE hFileMappingObject,_In_ DWORD dwDesiredAccess,_In_ DWORD dwFileOffsetHigh,_In_ DWORD dwFileOffsetLow,_In_ SIZE_T dwNumberOfBytesToMap,_In_opt_ LPVOID lpBaseAddress,_In_ DWORD nndPreferred)
HRESULT WINAPI None.Initialize(RO_INIT_TYPE initType None)
PVOID WINAPI kernel32.VirtualAllocFromApp(_In_opt_ PVOID BaseAddress,_In_ SIZE_T Size,_In_ ULONG AllocationType,_In_ ULONG Protection)
VOID CALLBACK None.CleanupGroupCancelCallback(_Inout_opt_ PVOID ObjectContext,_Inout_opt_ PVOID CleanupContext)
BOOL WINAPI kernel32.QueryInformationJobObject(_In_opt_ HANDLE hJob,_In_ JOBOBJECTINFOCLASS JobObjectInfoClass,_Out_ LPVOID lpJobObjectInfo,_In_ DWORD cbJobObjectInfoLength,_Out_opt_ LPDWORD lpReturnLength)
HANDLE WINAPI ktmw32.CreateTransactionManager(_In_opt_ LPSECURITY_ATTRIBUTES lpTransactionAttributes,_In_opt_ LPWSTR LogFileName,_In_opt_ ULONG CreateOptions,_In_opt_ ULONG CommitStrength)
HRESULT None ole32.CoSetCancelObject(_In_opt_ IUnknown *pUnk)
BOOL WINAPI kernel32.IsBadCodePtr(_In_ FARPROC lpfn)
WNDPROC __stdcall atlthunk.AtlThunk_DataToCode(AtlThunkData_t * None)
BOOL WINAPI kernel32.WritePrivateProfileStruct(_In_ LPCTSTR lpszSection,_In_ LPCTSTR lpszKey,_In_ LPVOID lpStruct,_In_ UINT uSizeStruct,_In_ LPCTSTR szFile)
BOOL WINAPI kernel32.WritePrivateProfileStructW(_In_ LPCTSTR lpszSection,_In_ LPCTSTR lpszKey,_In_ LPVOID lpStruct,_In_ UINT uSizeStruct,_In_ LPCTSTR szFile)
BOOL WINAPI kernel32.WritePrivateProfileStructA(_In_ LPCTSTR lpszSection,_In_ LPCTSTR lpszKey,_In_ LPVOID lpStruct,_In_ UINT uSizeStruct,_In_ LPCTSTR szFile)
BOOL WINAPI kernel32.SetCommMask(_In_ HANDLE hFile,_In_ DWORD dwEvtMask)
LONG WINAPI advapi32.RegCreateKey(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_Out_ PHKEY phkResult)
LONG WINAPI advapi32.RegCreateKeyW(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_Out_ PHKEY phkResult)
LONG WINAPI advapi32.RegCreateKeyA(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_Out_ PHKEY phkResult)
HANDLE WINAPI kernel32.OpenMutex(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpName)
HANDLE WINAPI kernel32.OpenMutexW(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpName)
HANDLE WINAPI kernel32.OpenMutexA(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpName)
HRESULT None None.MAKE_HRESULT(WORD sev None,WORD fac None,WORD code None)
ULONG WINAPI ntdll.RtlNtStatusToDosError(_In_ NTSTATUS Status)
BOOL WINAPI ktmw32.ReadOnlyEnlistment(_In_ HANDLE EnlistmentHandle,_In_ PLARGE_INTEGER TmVirtualClock)
LONG WINAPI advapi32.RegDeleteTree(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey)
LONG WINAPI advapi32.RegDeleteTreeW(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey)
LONG WINAPI advapi32.RegDeleteTreeA(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey)
BOOL WINAPI kernel32.VirtualProtect(_In_ LPVOID lpAddress,_In_ SIZE_T dwSize,_In_ DWORD flNewProtect,_Out_ PDWORD lpflOldProtect)
BOOL WINAPI advapi32.DecryptFile(_In_ LPCTSTR lpFileName,_Reserved_ DWORD dwReserved)
BOOL WINAPI advapi32.DecryptFileW(_In_ LPCTSTR lpFileName,_Reserved_ DWORD dwReserved)
BOOL WINAPI advapi32.DecryptFileA(_In_ LPCTSTR lpFileName,_Reserved_ DWORD dwReserved)
BOOL WINAPI user32.IsImmersiveProcess(_In_ HANDLE hProcess)
HRESULT None ole32.CoRevokeInitializeSpy(_In_ ULARGE_INTEGER uliCookie)
DWORD WINAPI advapi32.GetNamedSecurityInfo(_In_ LPTSTR pObjectName,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_Out_opt_ PSID *ppsidOwner,_Out_opt_ PSID *ppsidGroup,_Out_opt_ PACL *ppDacl,_Out_opt_ PACL *ppSacl,_Out_opt_ PSECURITY_DESCRIPTOR *ppSecurityDescriptor)
DWORD WINAPI advapi32.GetNamedSecurityInfoW(_In_ LPTSTR pObjectName,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_Out_opt_ PSID *ppsidOwner,_Out_opt_ PSID *ppsidGroup,_Out_opt_ PACL *ppDacl,_Out_opt_ PACL *ppSacl,_Out_opt_ PSECURITY_DESCRIPTOR *ppSecurityDescriptor)
DWORD WINAPI advapi32.GetNamedSecurityInfoA(_In_ LPTSTR pObjectName,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_Out_opt_ PSID *ppsidOwner,_Out_opt_ PSID *ppsidGroup,_Out_opt_ PACL *ppDacl,_Out_opt_ PACL *ppSacl,_Out_opt_ PSECURITY_DESCRIPTOR *ppSecurityDescriptor)
VOID WINAPI kernel32.CloseThreadpoolCleanupGroupMembers(_Inout_ PTP_CLEANUP_GROUP ptpcg,_In_ BOOL fCancelPendingCallbacks,_Inout_opt_ PVOID pvCleanupContext)
UINT WINAPI kernel32.LocalSize(_In_ HLOCAL hMem)
PVOID None None.SecureZeroMemory(_In_ PVOID ptr,_In_ SIZE_T cnt)
LPVOID WINAPI kernel32.CreateFiber(_In_ SIZE_T dwStackSize,_In_ LPFIBER_START_ROUTINE lpStartAddress,_In_opt_ LPVOID lpParameter)
INT None mswsock.GetAddressByName(_In_ DWORD dwNameSpace,_In_ LPGUID lpServiceType,_In_opt_ LPTSTR lpServiceName,_In_opt_ LPINT lpiProtocols,_In_ DWORD dwResolution,_In_opt_ LPSERVICE_ASYNC_INFO lpServiceAsyncInfo,_Out_ LPVOID lpCsaddrBuffer,_Inout_ LPDWORD lpdwBufferLength,_Inout_ LPTSTR lpAliasBuffer,_Inout_ LPDWORD lpdwAliasBufferLength)
INT None mswsock.GetAddressByNameW(_In_ DWORD dwNameSpace,_In_ LPGUID lpServiceType,_In_opt_ LPTSTR lpServiceName,_In_opt_ LPINT lpiProtocols,_In_ DWORD dwResolution,_In_opt_ LPSERVICE_ASYNC_INFO lpServiceAsyncInfo,_Out_ LPVOID lpCsaddrBuffer,_Inout_ LPDWORD lpdwBufferLength,_Inout_ LPTSTR lpAliasBuffer,_Inout_ LPDWORD lpdwAliasBufferLength)
INT None mswsock.GetAddressByNameA(_In_ DWORD dwNameSpace,_In_ LPGUID lpServiceType,_In_opt_ LPTSTR lpServiceName,_In_opt_ LPINT lpiProtocols,_In_ DWORD dwResolution,_In_opt_ LPSERVICE_ASYNC_INFO lpServiceAsyncInfo,_Out_ LPVOID lpCsaddrBuffer,_Inout_ LPDWORD lpdwBufferLength,_Inout_ LPTSTR lpAliasBuffer,_Inout_ LPDWORD lpdwAliasBufferLength)
BOOL WINAPI kernel32.TryEnterCriticalSection(_Inout_ LPCRITICAL_SECTION lpCriticalSection)
DWORD WINAPI kernel32.DiscardVirtualMemory(_In_ PVOID VirtualAddress,_In_ SIZE_T Size)
PSLIST_ENTRY FASTCALL kernel32.InterlockedPushListSList(_Inout_ PSLIST_HEADER ListHead,_Inout_ PSLIST_ENTRY List,_Inout_ PSLIST_ENTRY ListEnd,_In_ ULONG Count)
BOOL WINAPI kernel32.GetSystemFileCacheSize(_Out_ PSIZE_T lpMinimumFileCacheSize,_Out_ PSIZE_T lpMaximumFileCacheSize,_Out_ PDWORD lpFlags)
BOOL WINAPI ktmw32.RecoverResourceManager(_In_ HANDLE ResourceManagerHandle)
LONG WINAPI advapi32.RegLoadKey(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_ LPCTSTR lpFile)
LONG WINAPI advapi32.RegLoadKeyW(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_ LPCTSTR lpFile)
LONG WINAPI advapi32.RegLoadKeyA(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_ LPCTSTR lpFile)
LONG WINAPI advapi32.RegOpenKeyTransacted(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_ DWORD ulOptions,_In_ REGSAM samDesired,_Out_ PHKEY phkResult,_In_ HANDLE hTransaction,_Reserved_ PVOID pExtendedParameter)
LONG WINAPI advapi32.RegOpenKeyTransactedW(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_ DWORD ulOptions,_In_ REGSAM samDesired,_Out_ PHKEY phkResult,_In_ HANDLE hTransaction,_Reserved_ PVOID pExtendedParameter)
LONG WINAPI advapi32.RegOpenKeyTransactedA(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_ DWORD ulOptions,_In_ REGSAM samDesired,_Out_ PHKEY phkResult,_In_ HANDLE hTransaction,_Reserved_ PVOID pExtendedParameter)
DWORD WINAPI kernel32.OfferVirtualMemory(_In_ PVOID VirtualAddress,_In_ SIZE_T Size,_In_ OFFER_PRIORITY Priority)
HANDLE WINAPI ktmw32.OpenResourceManager(_In_ DWORD dwDesiredAccess,_In_ TmHandle None,_In_ LPGUID RmGuid)
HRESULT None ole32.CoUnmarshalHresult(_In_ LPSTREAM pstm,_Out_ HRESULT *phresult)
LPVOID WINAPI kernel32.HeapReAlloc(_In_ HANDLE hHeap,_In_ DWORD dwFlags,_In_ LPVOID lpMem,_In_ SIZE_T dwBytes)
HANDLE WINAPI ktmw32.CreateEnlistment(_In_opt_ LPSECURITY_ATTRIBUTES lpEnlistmentrAttributes,_In_ HANDLE ResourceManagerHandle,_In_ HANDLE TransactionHandle,_In_ NOTIFICATION_MASK NotificationMask,_In_opt_ DWORD CreateOptions,_In_opt_ PVOID EnlistmentKey)
LONG WINAPI advapi32.RegConnectRegistry(_In_opt_ LPCTSTR lpMachineName,_In_ HKEY hKey,_Out_ PHKEY phkResult)
LONG WINAPI advapi32.RegConnectRegistryW(_In_opt_ LPCTSTR lpMachineName,_In_ HKEY hKey,_Out_ PHKEY phkResult)
LONG WINAPI advapi32.RegConnectRegistryA(_In_opt_ LPCTSTR lpMachineName,_In_ HKEY hKey,_Out_ PHKEY phkResult)
LONG WINAPI advapi32.RegCreateKeyEx(_In_ HKEY hKey,_In_ LPCTSTR lpSubKey,_Reserved_ DWORD Reserved,_In_opt_ LPTSTR lpClass,_In_ DWORD dwOptions,_In_ REGSAM samDesired,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_Out_ PHKEY phkResult,_Out_opt_ LPDWORD lpdwDisposition)
LONG WINAPI advapi32.RegCreateKeyExW(_In_ HKEY hKey,_In_ LPCTSTR lpSubKey,_Reserved_ DWORD Reserved,_In_opt_ LPTSTR lpClass,_In_ DWORD dwOptions,_In_ REGSAM samDesired,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_Out_ PHKEY phkResult,_Out_opt_ LPDWORD lpdwDisposition)
LONG WINAPI advapi32.RegCreateKeyExA(_In_ HKEY hKey,_In_ LPCTSTR lpSubKey,_Reserved_ DWORD Reserved,_In_opt_ LPTSTR lpClass,_In_ DWORD dwOptions,_In_ REGSAM samDesired,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_Out_ PHKEY phkResult,_Out_opt_ LPDWORD lpdwDisposition)
FARPROC WINAPI kernel32.GetProcAddress(_In_ HMODULE hModule,_In_ LPCSTR lpProcName)
LONG WINAPI advapi32.RegFlushKey(_In_ HKEY hKey)
HANDLE WINAPI kernel32.CreateEvent(_In_opt_ LPSECURITY_ATTRIBUTES lpEventAttributes,_In_ BOOL bManualReset,_In_ BOOL bInitialState,_In_opt_ LPCTSTR lpName)
HANDLE WINAPI kernel32.CreateEventW(_In_opt_ LPSECURITY_ATTRIBUTES lpEventAttributes,_In_ BOOL bManualReset,_In_ BOOL bInitialState,_In_opt_ LPCTSTR lpName)
HANDLE WINAPI kernel32.CreateEventA(_In_opt_ LPSECURITY_ATTRIBUTES lpEventAttributes,_In_ BOOL bManualReset,_In_ BOOL bInitialState,_In_opt_ LPCTSTR lpName)
BOOL WINAPI kernel32.CheckTokenCapability(_In_opt_ HANDLE TokenHandle,_In_ PSID CapabilitySidToCheck,_Out_ PBOOL HasCapability)
VOID WINAPI kernel32.WakeByAddressAll(_In_ PVOID Address)
INT None ws2_32.WSALookupServiceBegin(_In_ LPWSAQUERYSET lpqsRestrictions,_In_ DWORD dwControlFlags,_Out_ LPHANDLE lphLookup)
INT None ws2_32.WSALookupServiceBeginW(_In_ LPWSAQUERYSET lpqsRestrictions,_In_ DWORD dwControlFlags,_Out_ LPHANDLE lphLookup)
INT None ws2_32.WSALookupServiceBeginA(_In_ LPWSAQUERYSET lpqsRestrictions,_In_ DWORD dwControlFlags,_Out_ LPHANDLE lphLookup)
BOOL None ws2_32.WSASetEvent(_In_ WSAEVENT hEvent)
LPTSTR WINAPI advapi32.GetTrusteeName(_In_ PTRUSTEE pTrustee)
LPTSTR WINAPI advapi32.GetTrusteeNameW(_In_ PTRUSTEE pTrustee)
LPTSTR WINAPI advapi32.GetTrusteeNameA(_In_ PTRUSTEE pTrustee)
BOOL WINAPI kernel32.DeleteTimerQueueEx(_In_ HANDLE TimerQueue,_In_opt_ HANDLE CompletionEvent)
BOOL WINAPI advapi32.ImpersonateSelf(_In_ SECURITY_IMPERSONATION_LEVEL ImpersonationLevel)
LONG WINAPI advapi32.RegDeleteKey(_In_ HKEY hKey,_In_ LPCTSTR lpSubKey)
LONG WINAPI advapi32.RegDeleteKeyW(_In_ HKEY hKey,_In_ LPCTSTR lpSubKey)
LONG WINAPI advapi32.RegDeleteKeyA(_In_ HKEY hKey,_In_ LPCTSTR lpSubKey)
BOOL WINAPI ktmw32.PrePrepareComplete(_In_ HANDLE EnlistmentHandle,_In_ PLARGE_INTEGER TmVirtualClock)
BOOL WINAPI kernel32.HeapSetInformation(_In_opt_ HANDLE HeapHandle,_In_ HEAP_INFORMATION_CLASS HeapInformationClass,_In_ PVOID HeapInformation,_In_ SIZE_T HeapInformationLength)
INT WSAAPI ws2_32.WSAAddressToString(_In_ LPSOCKADDR lpsaAddress,_In_ DWORD dwAddressLength,_In_opt_ LPWSAPROTOCOL_INFO lpProtocolInfo,_Inout_ LPTSTR lpszAddressString,_Inout_ LPDWORD lpdwAddressStringLength)
INT WSAAPI ws2_32.WSAAddressToStringW(_In_ LPSOCKADDR lpsaAddress,_In_ DWORD dwAddressLength,_In_opt_ LPWSAPROTOCOL_INFO lpProtocolInfo,_Inout_ LPTSTR lpszAddressString,_Inout_ LPDWORD lpdwAddressStringLength)
INT WSAAPI ws2_32.WSAAddressToStringA(_In_ LPSOCKADDR lpsaAddress,_In_ DWORD dwAddressLength,_In_opt_ LPWSAPROTOCOL_INFO lpProtocolInfo,_Inout_ LPTSTR lpszAddressString,_Inout_ LPDWORD lpdwAddressStringLength)
BOOLEAN CALLBACK None.SecureMemoryCacheCallback(_In_ PVOID Addr,_In_ SIZE_T Range)
NET_API_STATUS NET_API_FUNCTION netapi32.NetDfsSetClientInfo(_In_ LPWSTR DfsEntryPath,_In_opt_ LPWSTR ServerName,_In_opt_ LPWSTR ShareName,_In_ DWORD Level,_In_ LPBYTE Buffer)
BOOL WINAPI kernel32.InitializeCriticalSectionEx(_Out_ LPCRITICAL_SECTION lpCriticalSection,_In_ DWORD dwSpinCount,_In_ DWORD Flags)
BOOL WINAPI kernel32.HeapWalk(_In_ HANDLE hHeap,_Inout_ LPPROCESS_HEAP_ENTRY lpEntry)
BOOL CALLBACK None.Geo_EnumNameProc(_In_ PWSTR GeoName,LPARAM data None)
VOID CALLBACK None.TimerAPCProc(_In_opt_ LPVOID lpArgToCompletionRoutine,_In_ DWORD dwTimerLowValue,_In_ DWORD dwTimerHighValue)
DWORD WINAPI kernelbase.SleepEx(_In_ DWORD dwMilliseconds,_In_ BOOL bAlertable)
LONG WINAPI advapi32.RegDisableReflectionKey(_In_ HKEY hBase)
BOOL WINAPI kernel32.QueryProcessCycleTime(_In_ HANDLE ProcessHandle,_Out_ PULONG64 CycleTime)
INT WSAAPI ws2_32.InetPton(_In_ INT Family,_In_ PCTSTR pszAddrString,_Out_ PVOID pAddrBuf)
INT WSAAPI ws2_32.InetPtonW(_In_ INT Family,_In_ PCTSTR pszAddrString,_Out_ PVOID pAddrBuf)
INT WSAAPI ws2_32.InetPtonA or inet_pton(_In_ INT Family,_In_ PCTSTR pszAddrString,_Out_ PVOID pAddrBuf)
HRESULT WINOLEAPI ole32.CoAllowUnmarshalerCLSID(_In_ REFCLSID clsid)
BOOL WINAPI kernel32.InitializeCriticalSectionAndSpinCount(_Out_ LPCRITICAL_SECTION lpCriticalSection,_In_ DWORD dwSpinCount)
BOOL WINAPI kernel32.DeviceIoControl(_In_ HANDLE hDevice,_In_ DWORD dwIoControlCode,_In_opt_ LPVOID lpInBuffer,_In_ DWORD nInBufferSize,_Out_opt_ LPVOID lpOutBuffer,_In_ DWORD nOutBufferSize,_Out_opt_ LPDWORD lpBytesReturned,_Inout_opt_ LPOVERLAPPED lpOverlapped)
BOOL WINAPI kernel32.BuildCommDCB(_In_ LPCTSTR lpDef,_Out_ LPDCB lpDCB)
BOOL WINAPI kernel32.BuildCommDCBW(_In_ LPCTSTR lpDef,_Out_ LPDCB lpDCB)
BOOL WINAPI kernel32.BuildCommDCBA(_In_ LPCTSTR lpDef,_Out_ LPDCB lpDCB)
BOOL WINAPI kernel32.GetNumaAvailableMemoryNode(_In_ UCHAR Node,_Out_ PULONGLONG AvailableBytes)
HRESULT None ole32.IIDFromString(_In_ LPCOLESTR lpsz,_Out_ LPIID lpiid)
HGLOBAL WINAPI kernel32.GlobalReAlloc(_In_ HGLOBAL hMem,_In_ SIZE_T dwBytes,_In_ UINT uFlags)
HGLOBAL WINAPI kernel32.GlobalAlloc(_In_ UINT uFlags,_In_ SIZE_T dwBytes)
BOOL WINAPI kernel32.WriteFileGather(_In_ HANDLE hFile,_In_ FILE_SEGMENT_ELEMENT aSegmentArray[],_In_ DWORD nNumberOfBytesToWrite,_Reserved_ LPDWORD lpReserved,_Inout_ LPOVERLAPPED lpOverlapped)
BOOL None mswsock.RIOSendEx(_In_ RIO_RQ SocketQueue,_In_ PRIO_BUF pData,_In_ ULONG DataBufferCount,_In_ PRIO_BUF pLocalAddress,_In_ PRIO_BUF pRemoteAddress,_In_ PRIO_BUF pControlContext,_In_ PRIO_BUF pFlags,_In_ DWORD Flags,_In_ PVOID RequestContext)
HANDLE WINAPI kernel32.CreateJobObject(_In_opt_ LPSECURITY_ATTRIBUTES lpJobAttributes,_In_opt_ LPCTSTR lpName)
HANDLE WINAPI kernel32.CreateJobObjectW(_In_opt_ LPSECURITY_ATTRIBUTES lpJobAttributes,_In_opt_ LPCTSTR lpName)
HANDLE WINAPI kernel32.CreateJobObjectA(_In_opt_ LPSECURITY_ATTRIBUTES lpJobAttributes,_In_opt_ LPCTSTR lpName)
BOOL WINAPI kernel32.LocalUnlock(_In_ HLOCAL hMem)
DWORD WINAPI kernel32.WaitForSingleObjectEx(_In_ HANDLE hHandle,_In_ DWORD dwMilliseconds,_In_ BOOL bAlertable)
HANDLE WINAPI kernel32.CreateEventEx(_In_opt_ LPSECURITY_ATTRIBUTES lpEventAttributes,_In_opt_ LPCTSTR lpName,_In_ DWORD dwFlags,_In_ DWORD dwDesiredAccess)
HANDLE WINAPI kernel32.CreateEventExW(_In_opt_ LPSECURITY_ATTRIBUTES lpEventAttributes,_In_opt_ LPCTSTR lpName,_In_ DWORD dwFlags,_In_ DWORD dwDesiredAccess)
HANDLE WINAPI kernel32.CreateEventExA(_In_opt_ LPSECURITY_ATTRIBUTES lpEventAttributes,_In_opt_ LPCTSTR lpName,_In_ DWORD dwFlags,_In_ DWORD dwDesiredAccess)
LONG WINAPI advapi32.RegRestoreKey(_In_ HKEY hKey,_In_ LPCTSTR lpFile,_In_ DWORD dwFlags)
LONG WINAPI advapi32.RegRestoreKeyW(_In_ HKEY hKey,_In_ LPCTSTR lpFile,_In_ DWORD dwFlags)
LONG WINAPI advapi32.RegRestoreKeyA(_In_ HKEY hKey,_In_ LPCTSTR lpFile,_In_ DWORD dwFlags)
VOID WINAPI kernel32.AcquireSRWLockExclusive(_Inout_ PSRWLOCK SRWLock)
BOOL WINAPI kernel32.UnmapViewOfFileEx(_In_ LPCVOID lpBaseAddress,_In_ DWORD UnmapFlags)
LPVOID WINAPI kernel32.GlobalLock(_In_ HGLOBAL hMem)
LPVOID WINAPI kernel32.VirtualAllocExNuma(_In_ HANDLE hProcess,_In_opt_ LPVOID lpAddress,_In_ SIZE_T dwSize,_In_ DWORD flAllocationType,_In_ DWORD flProtect,_In_ DWORD nndPreferred)
HRESULT None ole32.OleRegGetUserType(_In_ REFCLSID clsid,_In_ DWORD dwFormOfType,_Out_ LPOLESTR *pszUserType)
BOOL WINAPI user32.MessageBeep(_In_ UINT uType)
LONG WINAPI advapi32.RegSaveKeyEx(_In_ HKEY hKey,_In_ LPCTSTR lpFile,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ DWORD Flags)
LONG WINAPI advapi32.RegSaveKeyExW(_In_ HKEY hKey,_In_ LPCTSTR lpFile,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ DWORD Flags)
LONG WINAPI advapi32.RegSaveKeyExA(_In_ HKEY hKey,_In_ LPCTSTR lpFile,_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,_In_ DWORD Flags)
LONG WINAPI advapi32.RegSetKeyValue(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_opt_ LPCTSTR lpValueName,_In_ DWORD dwType,_In_opt_ LPCVOID lpData,_In_ DWORD cbData)
LONG WINAPI advapi32.RegSetKeyValueW(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_opt_ LPCTSTR lpValueName,_In_ DWORD dwType,_In_opt_ LPCVOID lpData,_In_ DWORD cbData)
LONG WINAPI advapi32.RegSetKeyValueA(_In_ HKEY hKey,_In_opt_ LPCTSTR lpSubKey,_In_opt_ LPCTSTR lpValueName,_In_ DWORD dwType,_In_opt_ LPCVOID lpData,_In_ DWORD cbData)
u_long WSAAPI ws2_32.ntohl(_In_ u_long netlong)
BOOL None kernel32.SetThreadInformation(_In_ HANDLE hThread,_In_ THREAD_INFORMATION_CLASS ThreadInformationClass,_In_reads_bytes_ ThreadInformation None,_In_ DWORD ThreadInformationSize)
HRESULT None ole32.CreateFileMoniker(_In_ LPCOLESTR lpszPathName,_Out_ LPMONIKER *ppmk)
BOOL WINAPI kernel32.PurgeComm(_In_ HANDLE hFile,_In_ DWORD dwFlags)
DWORD WINAPI kernel32.QueueUserAPC(_In_ PAPCFUNC pfnAPC,_In_ HANDLE hThread,_In_ ULONG_PTR dwData)
BOOL WINAPI ktmw32.RollbackTransaction(_In_ HANDLE TransactionHandle)
BOOL WINAPI kernel32.SetEvent(_In_ HANDLE hEvent)
HRESULT None urlmon.CreateAsyncBindCtx(_In_ DWORD reserved,_In_ IBindStatusCallback *pBSCb,_In_ IEnumFORMATETC *pEFetc,_Out_ IBindCtx **ppBC)
BOOL WINAPI kernel32.GetPhysicallyInstalledSystemMemory(_Out_ PULONGLONG TotalMemoryInKilobytes)
BOOL None ktmw32.RollforwardTransactionManager(_In_ HANDLE TransactionManagerHandle,_In_ PLARGE_INTEGER TmVirtualClock)
BOOL None mswsock.RIOReceiveEx(_In_ RIO_RQ SocketQueue,_In_ PRIO_BUF pData,_In_ ULONG DataBufferCount,_In_ PRIO_BUF pLocalAddress,_In_ PRIO_BUF pRemoteAddress,_In_ PRIO_BUF pControlContext,_In_ PRIO_BUF pFlags,_In_ DWORD Flags,_In_ PVOID RequestContext)
LONG WINAPI advapi32.RegQueryInfoKey(_In_ HKEY hKey,_Out_opt_ LPTSTR lpClass,_Inout_opt_ LPDWORD lpcClass,_Reserved_ LPDWORD lpReserved,_Out_opt_ LPDWORD lpcSubKeys,_Out_opt_ LPDWORD lpcMaxSubKeyLen,_Out_opt_ LPDWORD lpcMaxClassLen,_Out_opt_ LPDWORD lpcValues,_Out_opt_ LPDWORD lpcMaxValueNameLen,_Out_opt_ LPDWORD lpcMaxValueLen,_Out_opt_ LPDWORD lpcbSecurityDescriptor,_Out_opt_ PFILETIME lpftLastWriteTime)
LONG WINAPI advapi32.RegQueryInfoKeyW(_In_ HKEY hKey,_Out_opt_ LPTSTR lpClass,_Inout_opt_ LPDWORD lpcClass,_Reserved_ LPDWORD lpReserved,_Out_opt_ LPDWORD lpcSubKeys,_Out_opt_ LPDWORD lpcMaxSubKeyLen,_Out_opt_ LPDWORD lpcMaxClassLen,_Out_opt_ LPDWORD lpcValues,_Out_opt_ LPDWORD lpcMaxValueNameLen,_Out_opt_ LPDWORD lpcMaxValueLen,_Out_opt_ LPDWORD lpcbSecurityDescriptor,_Out_opt_ PFILETIME lpftLastWriteTime)
LONG WINAPI advapi32.RegQueryInfoKeyA(_In_ HKEY hKey,_Out_opt_ LPTSTR lpClass,_Inout_opt_ LPDWORD lpcClass,_Reserved_ LPDWORD lpReserved,_Out_opt_ LPDWORD lpcSubKeys,_Out_opt_ LPDWORD lpcMaxSubKeyLen,_Out_opt_ LPDWORD lpcMaxClassLen,_Out_opt_ LPDWORD lpcValues,_Out_opt_ LPDWORD lpcMaxValueNameLen,_Out_opt_ LPDWORD lpcMaxValueLen,_Out_opt_ LPDWORD lpcbSecurityDescriptor,_Out_opt_ PFILETIME lpftLastWriteTime)
VOID None mswsock.RIODeregisterBuffer(_In_ RIO_BUFFERID BufferId)
BOOL WINAPI advapi32.ObjectOpenAuditAlarm(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ LPTSTR ObjectTypeName,_In_opt_ LPTSTR ObjectName,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_ HANDLE ClientToken,_In_ DWORD DesiredAccess,_In_ DWORD GrantedAccess,_In_opt_ PPRIVILEGE_SET Privileges,_In_ BOOL ObjectCreation,_In_ BOOL AccessGranted,_Out_ LPBOOL GenerateOnClose)
BOOL WINAPI advapi32.ObjectOpenAuditAlarmW(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ LPTSTR ObjectTypeName,_In_opt_ LPTSTR ObjectName,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_ HANDLE ClientToken,_In_ DWORD DesiredAccess,_In_ DWORD GrantedAccess,_In_opt_ PPRIVILEGE_SET Privileges,_In_ BOOL ObjectCreation,_In_ BOOL AccessGranted,_Out_ LPBOOL GenerateOnClose)
BOOL WINAPI advapi32.ObjectOpenAuditAlarmA(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ LPTSTR ObjectTypeName,_In_opt_ LPTSTR ObjectName,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_ HANDLE ClientToken,_In_ DWORD DesiredAccess,_In_ DWORD GrantedAccess,_In_opt_ PPRIVILEGE_SET Privileges,_In_ BOOL ObjectCreation,_In_ BOOL AccessGranted,_Out_ LPBOOL GenerateOnClose)
BOOL None ole32.CoIsOle1Class(_In_ REFCLSID rclsid)
DWORD WINAPI advapi32.GetAuditedPermissionsFromAcl(_In_ PACL pacl,_In_ PTRUSTEE pTrustee,_Out_ PACCESS_MASK pSuccessfulAuditedRights,_Out_ PACCESS_MASK pFailedAuditRights)
DWORD WINAPI advapi32.GetAuditedPermissionsFromAclW(_In_ PACL pacl,_In_ PTRUSTEE pTrustee,_Out_ PACCESS_MASK pSuccessfulAuditedRights,_Out_ PACCESS_MASK pFailedAuditRights)
DWORD WINAPI advapi32.GetAuditedPermissionsFromAclA(_In_ PACL pacl,_In_ PTRUSTEE pTrustee,_Out_ PACCESS_MASK pSuccessfulAuditedRights,_Out_ PACCESS_MASK pFailedAuditRights)
BOOL WINAPI kernel32.AddIntegrityLabelToBoundaryDescriptor(_Inout_ HANDLE *BoundaryDescriptor,_In_ PSID IntegrityLabel)
BOOL WINAPI kernel32.InitializeSynchronizationBarrier(_Out_ LPSYNCHRONIZATION_BARRIER lpBarrier,_In_ LONG lTotalThreads,_In_ LONG lSpinCount)
BOOL WINAPI kernel32.FlushViewOfFile(_In_ LPCVOID lpBaseAddress,_In_ SIZE_T dwNumberOfBytesToFlush)
HANDLE WINAPI kernel32.OpenWaitableTimer(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpTimerName)
HANDLE WINAPI kernel32.OpenWaitableTimerW(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpTimerName)
HANDLE WINAPI kernel32.OpenWaitableTimerA(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpTimerName)
BOOL WINAPI kernel32.GlobalUnlock(_In_ HGLOBAL hMem)
INT None ws2_32.WSALookupServiceNext(_In_ HANDLE hLookup,_In_ DWORD dwControlFlags,_Inout_ LPDWORD lpdwBufferLength,_Out_ LPWSAQUERYSET lpqsResults)
INT None ws2_32.WSALookupServiceNextW(_In_ HANDLE hLookup,_In_ DWORD dwControlFlags,_Inout_ LPDWORD lpdwBufferLength,_Out_ LPWSAQUERYSET lpqsResults)
INT None ws2_32.WSALookupServiceNextA(_In_ HANDLE hLookup,_In_ DWORD dwControlFlags,_Inout_ LPDWORD lpdwBufferLength,_Out_ LPWSAQUERYSET lpqsResults)
BOOL None ole32.IsEqualIID(_In_ REFGUID riid1,_In_ REFGUID riid2)
BOOL WINAPI kernel32.CancelWaitableTimer(_In_ HANDLE hTimer)
WINAPI None kernel32.UnmapViewOfFile2(_In_ HANDLE ProcessHandle,_In_ PVOID BaseAddress,_In_ ULONG UnmapFlags)
LPVOID None ole32.CoTaskMemRealloc(_In_opt_ LPVOID pv,_In_ SIZE_T cb)
LPVOID WINAPI kernel32.MapViewOfFileEx(_In_ HANDLE hFileMappingObject,_In_ DWORD dwDesiredAccess,_In_ DWORD dwFileOffsetHigh,_In_ DWORD dwFileOffsetLow,_In_ SIZE_T dwNumberOfBytesToMap,_In_opt_ LPVOID lpBaseAddress)
LONG WINAPI advapi32.RegCopyTree(_In_ HKEY hKeySrc,_In_opt_ LPCTSTR lpSubKey,_In_ HKEY hKeyDest)
LONG WINAPI advapi32.RegCopyTreeW(_In_ HKEY hKeySrc,_In_opt_ LPCTSTR lpSubKey,_In_ HKEY hKeyDest)
LONG WINAPI advapi32.RegCopyTreeA(_In_ HKEY hKeySrc,_In_opt_ LPCTSTR lpSubKey,_In_ HKEY hKeyDest)
BOOL WINAPI advapi32.SetSecurityDescriptorDacl(_Inout_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_ BOOL bDaclPresent,_In_opt_ PACL pDacl,_In_ BOOL bDaclDefaulted)
BOOL WINAPI kernel32.GetMemoryErrorHandlingCapabilities(_Out_ PULONG Capabilities)
BOOL WINAPI kernel32.VirtualFreeEx(_In_ HANDLE hProcess,_In_ LPVOID lpAddress,_In_ SIZE_T dwSize,_In_ DWORD dwFreeType)
LONG WINAPI advapi32.RegOpenCurrentUser(_In_ REGSAM samDesired,_Out_ PHKEY phkResult)
VOID WINAPI kernel32.WakeByAddressSingle(_In_ PVOID Address)
BOOL WINAPI kernel32.GetNumaProximityNode(_In_ ULONG ProximityId,_Out_ PUCHAR NodeNumber)
PSLIST_ENTRY WINAPI ntdll.RtlInterlockedFlushSList(_In_ PSLIST_HEADER ListHead)
HANDLE WINAPI kernel32.OpenFileMappingFromApp(_In_ ULONG DesiredAccess,_In_ BOOL InheritHandle,_In_ PCWSTR Name)
WSAEVENT None None.WPUCompleteOverlappedRequest(_In_ SOCKET s,_In_ LPWSAOVERLAPPED lpOverlapped,_In_ DWORD dwError,_In_ DWORD cbTransferred,_Out_ LPINT lpErrno)
VOID None kernel32.GetCurrentProcessorNumberEx(_Out_ PPROCESSOR_NUMBER ProcNumber)
BOOL WINAPI authz.AuthzInitializeObjectAccessAuditEvent2(_In_ DWORD Flags,_In_ AUTHZ_AUDIT_EVENT_TYPE_HANDLE hAuditEventType,_In_ PWSTR szOperationType,_In_ PWSTR szObjectType,_In_ PWSTR szObjectName,_In_ PWSTR szAdditionalInfo,_In_ PWSTR szAdditionalInfo2,_Out_ PAUTHZ_AUDIT_EVENT_HANDLE phAuditEvent,_In_ DWORD dwAdditionalParameterCount)
BOOL WINAPI kernel32.CreateUmsThreadContext(_Out_ PUMS_CONTEXT *lpUmsThread)
BOOL None ole32.CoDosDateTimeToFileTime(_In_ WORD nDosDate,_In_ WORD nDosTime,_Out_ FILETIME *lpFileTime)
PSLIST_ENTRY WINAPI kernel32.InterlockedPopEntrySList(_Inout_ PSLIST_HEADER ListHead)
BOOL WINAPI kernel32.EnterSynchronizationBarrier(_Inout_ LPSYNCHRONIZATION_BARRIER lpBarrier,_In_ DWORD dwFlags)
BOOL None ws2_32.WSAGetQOSByName(_In_ SOCKET s,_Inout_ LPWSABUF lpQOSName,_Out_ LPQOS lpQOS)
HRESULT None ole32.MonikerRelativePathTo(_In_ LPMONIKER pmkSrc,_In_ LPMONIKER pmkDest,_Out_ LPMONIKER *ppmkRelPath,_In_ BOOL dwReserved)
BOOL WINAPI advapi32.AllocateLocallyUniqueId(_Out_ PLUID Luid)
BOOL WINAPI advapi32.SetPrivateObjectSecurity(_In_ SECURITY_INFORMATION SecurityInformation,_In_ PSECURITY_DESCRIPTOR ModificationDescriptor,_Inout_ PSECURITY_DESCRIPTOR *ObjectsSecurityDescriptor,_In_ PGENERIC_MAPPING GenericMapping,_In_opt_ HANDLE Token)
BOOL WINAPI kernel32.PulseEvent(_In_ HANDLE hEvent)
BOOL None mswsock.RIOResizeRequestQueue(_In_ RIO_RQ RQ,_In_ DWORD MaxOutstandingReceive,_In_ DWORD MaxOutstandingSend)
VOID WINAPI kernel32.ReleaseSemaphoreWhenCallbackReturns(_Inout_ PTP_CALLBACK_INSTANCE pci,_In_ HANDLE sem,_In_ DWORD crel)
BOOL WINAPI kernel32.GlobalMemoryStatusEx(_Inout_ LPMEMORYSTATUSEX lpBuffer)
BOOL None kernel32.QueryIdleProcessorCycleTimeEx(_In_ USHORT Group,_Inout_ PULONG BufferLength,_Out_ PULONG64 ProcessorIdleCycleTime)
VOID None None.InitializeThreadpoolEnvironment(_Out_ PTP_CALLBACK_ENVIRON pcbe)
INT None ws2_32.WSAGetServiceClassNameByClassId(_In_ LPGUID lpServiceClassId,_Out_ LPTSTR lpszServiceClassName,_Inout_ LPDWORD lpdwBufferLength)
INT None ws2_32.WSAGetServiceClassNameByClassIdW(_In_ LPGUID lpServiceClassId,_Out_ LPTSTR lpszServiceClassName,_Inout_ LPDWORD lpdwBufferLength)
INT None ws2_32.WSAGetServiceClassNameByClassIdA(_In_ LPGUID lpServiceClassId,_Out_ LPTSTR lpszServiceClassName,_Inout_ LPDWORD lpdwBufferLength)
BOOL WINAPI kernel32.QueryThreadCycleTime(_In_ HANDLE ThreadHandle,_Out_ PULONG64 CycleTime)
BOOL WINAPI kernel32.RegisterWaitForSingleObject(_Out_ PHANDLE phNewWaitObject,_In_ HANDLE hObject,_In_ WAITORTIMERCALLBACK Callback,_In_opt_ PVOID Context,_In_ ULONG dwMilliseconds,_In_ ULONG dwFlags)
BOOLEAN WINAPI kernel32.ClosePrivateNamespace(_In_ HANDLE Handle,_In_ ULONG Flags)
BOOL WINAPI kernel32.GetNumaNodeProcessorMask(_In_ UCHAR Node,_Out_ PULONGLONG ProcessorMask)
DWORD WINAPI kernel32.WaitForSingleObject(_In_ HANDLE hHandle,_In_ DWORD dwMilliseconds)
HRESULT None ole32.CoDisconnectContext(_In_ DWORD dwTimeout)
RIO_RQ None mswsock.RIOCreateRequestQueue(_In_ SOCKET Socket,_In_ ULONG MaxOutstandingReceive,_In_ ULONG MaxReceiveDataBuffers,_In_ ULONG MaxOutstandingSend,_In_ ULONG MaxSendDataBuffers,_In_ RIO_CQ ReceiveCQ,_In_ RIO_CQ SendCQ,_In_ PVOID SocketContext)
PSLIST_ENTRY WINAPI ntdll.RtlInterlockedPopEntrySList(_In_ PSLIST_HEADER ListHead)
HRESULT None ole32.CoGetInterfaceAndReleaseStream(_In_ LPSTREAM pStm,_In_ REFIID iid,_Out_ LPVOID *ppv)
HRESULT None ole32.CoQueryClientBlanket(_Out_opt_ DWORD *pAuthnSvc,_Out_opt_ DWORD *pAuthzSvc,_Out_opt_ OLECHAR **pServerPrincName,_Out_opt_ DWORD *pAuthnLevel,_Out_opt_ DWORD *pImpLevel,_Out_opt_ RPC_AUTHZ_HANDLE *pPrivs,_Inout_opt_ DWORD *pCapabilities)
BOOL None ws2_32.WSACloseEvent(_In_ WSAEVENT hEvent)
VOID None mswsock.RIOCloseCompletionQueue(_In_ RIO_CQ CQ)
BOOL WINAPI kernel32.MapUserPhysicalPages(_In_ PVOID lpAddress,_In_ ULONG_PTR NumberOfPages,_In_ PULONG_PTR UserPfnArray)
BOOL WINAPI kernel32.AddSecureMemoryCacheCallback(_In_ PSECURE_MEMORY_CACHE_CALLBACK pfnCallBack)
USHORT WINAPI kernel32.QueryDepthSList(_In_ PSLIST_HEADER ListHead)
VOID WINAPI kernel32.DeleteFiber(_In_ LPVOID lpFiber)
LCID None nlsmap.DownlevelGetParentLocaleLCID(_In_ LCID Locale)
BOOL WINAPI kernel32.ReleaseMutex(_In_ HANDLE hMutex)
HANDLE WINAPI kernel32.HeapCreate(_In_ DWORD flOptions,_In_ SIZE_T dwInitialSize,_In_ SIZE_T dwMaximumSize)
VOID WINAPI kernel32.WakeAllConditionVariable(_Inout_ PCONDITION_VARIABLE ConditionVariable)
SIZE_T WINAPI kernel32.VirtualQuery(_In_opt_ LPCVOID lpAddress,_Out_ PMEMORY_BASIC_INFORMATION lpBuffer,_In_ SIZE_T dwLength)
BOOL WINAPI kernel.GetDisplayAutoRotationPreferences(_Out_ ORIENTATION_PREFERENCE *pOrientation)
BOOL WINAPI kernel32.RemoveSecureMemoryCacheCallback(_In_ PSECURE_MEMORY_CACHE_CALLBACK pfnCallBack)
BOOL WINAPI kernel32.DeleteTimerQueueTimer(_In_opt_ HANDLE TimerQueue,_In_ HANDLE Timer,_In_opt_ HANDLE CompletionEvent)
INT None mswsock.GetNameByType(_In_ LPGUID lpServiceType,_Out_ LPTSTR lpServiceName,_In_ DWORD dwNameLength)
INT None mswsock.GetNameByTypeW(_In_ LPGUID lpServiceType,_Out_ LPTSTR lpServiceName,_In_ DWORD dwNameLength)
INT None mswsock.GetNameByTypeA(_In_ LPGUID lpServiceType,_Out_ LPTSTR lpServiceName,_In_ DWORD dwNameLength)
INT None mswsock.EnumProtocols(_In_opt_ LPINT lpiProtocols,_Out_ LPVOID lpProtocolBuffer,_Inout_ LPDWORD lpdwBufferLength)
INT None mswsock.EnumProtocolsW(_In_opt_ LPINT lpiProtocols,_Out_ LPVOID lpProtocolBuffer,_Inout_ LPDWORD lpdwBufferLength)
INT None mswsock.EnumProtocolsA(_In_opt_ LPINT lpiProtocols,_Out_ LPVOID lpProtocolBuffer,_Inout_ LPDWORD lpdwBufferLength)
VOID WINAPI kernel32.GetCurrentThreadStackLimits(_Out_ PULONG_PTR LowLimit,_Out_ PULONG_PTR HighLimit)
BOOL WINAPI kernel32.MapUserPhysicalPagesScatter(_In_ PVOID *VirtualAddresses,_In_ ULONG_PTR NumberOfPages,_In_ PULONG_PTR PageArray)
HRESULT WINAPI dssec.DSEditSecurity(_In_ HWND hwndOwner,_In_ LPCWSTR pwszObjectPath,_In_opt_ LPCWSTR pwszObjectClass,_In_ DWORD dwFlags,_In_opt_ LPCWSTR *pwszCaption,_In_opt_ PFNREADOBJECTSECURITY pfnReadSD,_In_opt_ PFNWRITEOBJECTSECURITY pfnWriteSD,_In_ LPARAM lpContext)
HRESULT None ole32.CoGetMalloc(_In_ DWORD dwMemContext,_Out_ LPMALLOC *ppMalloc)
HRESULT None ole32.OleSetAutoConvert(_In_ REFCLSID clsidOld,_In_ REFCLSID clsidNew)
HRESULT None ole32.CoUnmarshalInterface(_In_ LPSTREAM pStm,_In_ REFIID riid,_Out_ LPVOID *ppv)
HRESULT None ole32.GetRunningObjectTable(_In_ DWORD reserved,_Out_ LPRUNNINGOBJECTTABLE *pprot)
TRUSTEE_TYPE WINAPI advapi32.GetTrusteeType(_In_opt_ PTRUSTEE pTrustee)
TRUSTEE_TYPE WINAPI advapi32.GetTrusteeTypeW(_In_opt_ PTRUSTEE pTrustee)
TRUSTEE_TYPE WINAPI advapi32.GetTrusteeTypeA(_In_opt_ PTRUSTEE pTrustee)
DWORD WINAPI kernel32.FlsAlloc(_In_ PFLS_CALLBACK_FUNCTION lpCallback)
BOOL WINAPI kernel32.CallbackMayRunLong(_Inout_ PTP_CALLBACK_INSTANCE pci)
BOOL WINAPI kernel32.DeleteSynchronizationBarrier(_Inout_ LPSYNCHRONIZATION_BARRIER lpBarrier)
HRESULT None ole32.CLSIDFromProgID(_In_ LPCOLESTR lpszProgID,_Out_ LPCLSID lpclsid)
BOOL WINAPI kernel32.HeapValidate(_In_ HANDLE hHeap,_In_ DWORD dwFlags,_In_opt_ LPCVOID lpMem)
STDMETHODIMP None None.CheckFileSystem(PCWSTR pcwszDrive None)
BOOL WINAPI kernel32.PrefetchVirtualMemory(_In_ HANDLE hProcess,_In_ ULONG_PTR NumberOfEntries,_In_ PWIN32_MEMORY_RANGE_ENTRY VirtualAddresses,_In_ ULONG Flags)
INT None ws2_32.WSASetService(_In_ LPWSAQUERYSET lpqsRegInfo,_In_ WSAESETSERVICEOP essOperation,_In_ DWORD dwControlFlags)
INT None ws2_32.WSASetServiceW(_In_ LPWSAQUERYSET lpqsRegInfo,_In_ WSAESETSERVICEOP essOperation,_In_ DWORD dwControlFlags)
INT None ws2_32.WSASetServiceA(_In_ LPWSAQUERYSET lpqsRegInfo,_In_ WSAESETSERVICEOP essOperation,_In_ DWORD dwControlFlags)
BOOL WINAPI kernel32.ExecuteUmsThread(_Inout_ PUMS_CONTEXT UmsThread)
PVOID WINAPI kernel32.RtlLookupFunctionEntry(_In_ ULONGLONG ControlPc,_Out_ PULONGLONG ImageBase,_Out_ PULONGLONG TargetGp)
PSLIST_ENTRY WINAPI ntdll.RtlInterlockedPushEntrySList(_In_ PSLIST_HEADER ListHead,_In_ PSLIST_ENTRY ListEntry)
PSLIST_ENTRY WINAPI kernel32.InterlockedFlushSList(_Inout_ PSLIST_HEADER ListHead)
LONG WINAPI advapi32.RegOverridePredefKey(_In_ HKEY hKey,_In_opt_ HKEY hNewHKey)
SIZE_T WINAPI kernel32.VirtualQueryEx(_In_ HANDLE hProcess,_In_opt_ LPCVOID lpAddress,_Out_ PMEMORY_BASIC_INFORMATION lpBuffer,_In_ SIZE_T dwLength)
HANDLE WINAPI kernel32.CreateMutexEx(_In_opt_ LPSECURITY_ATTRIBUTES lpMutexAttributes,_In_opt_ LPCTSTR lpName,_In_ DWORD dwFlags,_In_ DWORD dwDesiredAccess)
HANDLE WINAPI kernel32.CreateMutexExW(_In_opt_ LPSECURITY_ATTRIBUTES lpMutexAttributes,_In_opt_ LPCTSTR lpName,_In_ DWORD dwFlags,_In_ DWORD dwDesiredAccess)
HANDLE WINAPI kernel32.CreateMutexExA(_In_opt_ LPSECURITY_ATTRIBUTES lpMutexAttributes,_In_opt_ LPCTSTR lpName,_In_ DWORD dwFlags,_In_ DWORD dwDesiredAccess)
HANDLE WINAPI kernel32.OpenJobObject(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandles,_In_ LPCTSTR lpName)
HANDLE WINAPI kernel32.OpenJobObjectW(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandles,_In_ LPCTSTR lpName)
HANDLE WINAPI kernel32.OpenJobObjectA(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandles,_In_ LPCTSTR lpName)
BOOL WINAPI advapi32.CreatePrivateObjectSecurityWithMultipleInheritance(_In_opt_ PSECURITY_DESCRIPTOR ParentDescriptor,_In_opt_ PSECURITY_DESCRIPTOR CreatorDescriptor,_Out_ PSECURITY_DESCRIPTOR *NewDescriptor,_In_opt_ GUID **ObjectTypes,_In_ ULONG GuidCount,_In_ BOOL IsContainerObject,_In_ ULONG AutoInheritFlags,_In_opt_ HANDLE Token,_In_ PGENERIC_MAPPING GenericMapping)
HRESULT None ole32.CoRegisterSurrogate(_In_ LPSURROGATE pSurrogate)
BOOL WINAPI advapi32.DuplicateTokenEx(_In_ HANDLE hExistingToken,_In_ DWORD dwDesiredAccess,_In_opt_ LPSECURITY_ATTRIBUTES lpTokenAttributes,_In_ SECURITY_IMPERSONATION_LEVEL ImpersonationLevel,_In_ TOKEN_TYPE TokenType,_Out_ PHANDLE phNewToken)
UINT WINAPI kernel32.ResetWriteWatch(_In_ LPVOID lpBaseAddress,_In_ SIZE_T dwRegionSize)
HRESULT None ole32.CLSIDFromProgIDEx(_In_ LPCOLESTR lpszProgID,_Out_ LPCLSID lpclsid)
PTP_WAIT WINAPI kernel32.CreateThreadpoolWait(_In_ PTP_WAIT_CALLBACK pfnwa,_Inout_opt_ PVOID pv,_In_opt_ PTP_CALLBACK_ENVIRON pcbe)
VOID FORCEINLINE None.TpSetCallbackCleanupGroup(_Inout_ PTP_CALLBACK_ENVIRON CallbackEnviron,_In_ PTP_CLEANUP_GROUP CleanupGroup,_In_opt_ PTP_CLEANUP_GROUP_CANCEL_CALLBACK CleanupGroupCancelCallback)
BOOL WINAPI kernel32.SleepConditionVariableSRW(_Inout_ PCONDITION_VARIABLE ConditionVariable,_Inout_ PSRWLOCK SRWLock,_In_ DWORD dwMilliseconds,_In_ ULONG Flags)
BOOL WINAPI advapi32.AddAccessDeniedObjectAce(_Inout_ PACL pAcl,_In_ DWORD dwAceRevision,_In_ DWORD AceFlags,_In_ DWORD AccessMask,_In_opt_ GUID *ObjectTypeGuid,_In_opt_ GUID *InheritedObjectTypeGuid,_In_ PSID pSid)
HGLOBAL WINAPI kernel32.GlobalFree(_In_ HGLOBAL hMem)
BOOL WINAPI kernel32.SetInformationJobObject(_In_ HANDLE hJob,_In_ JOBOBJECTINFOCLASS JobObjectInfoClass,_In_ LPVOID lpJobObjectInfo,_In_ DWORD cbJobObjectInfoLength)
DWORD WINAPI kernel32.GetProcessId(_In_ HANDLE Process)
DWORD WINAPI kernel32.SignalObjectAndWait(_In_ HANDLE hObjectToSignal,_In_ HANDLE hObjectToWaitOn,_In_ DWORD dwMilliseconds,_In_ BOOL bAlertable)
DWORD WINAPI kernel32.ResumeThread(_In_ HANDLE hThread)
BOOL WINAPI kernel32.SleepConditionVariableCS(_Inout_ PCONDITION_VARIABLE ConditionVariable,_Inout_ PCRITICAL_SECTION CriticalSection,_In_ DWORD dwMilliseconds)
INT WSPAPI ws2_32.WSCEnumNameSpaceProviders32(_Inout_ LPDWORD lpdwBufferLength,_Out_ LPWSANAMESPACE_INFOW lpnspBuffer)
BOOL WINAPI kernel32.UnregisterBadMemoryNotification(_In_ PVOID RegistrationHandle)
INT None mswsock.GetService(_In_ DWORD dwNameSpace,_In_ PGUID lpGuid,_In_ LPTSTR lpServiceName,_In_ DWORD dwProperties,_Out_ LPVOID lpBuffer,_Inout_ LPDWORD lpdwBufferSize,_In_opt_ LPSERVICE_ASYNC_INFO lpServiceAsyncInfo)
INT None mswsock.GetServiceW(_In_ DWORD dwNameSpace,_In_ PGUID lpGuid,_In_ LPTSTR lpServiceName,_In_ DWORD dwProperties,_Out_ LPVOID lpBuffer,_Inout_ LPDWORD lpdwBufferSize,_In_opt_ LPSERVICE_ASYNC_INFO lpServiceAsyncInfo)
INT None mswsock.GetServiceA(_In_ DWORD dwNameSpace,_In_ PGUID lpGuid,_In_ LPTSTR lpServiceName,_In_ DWORD dwProperties,_Out_ LPVOID lpBuffer,_Inout_ LPDWORD lpdwBufferSize,_In_opt_ LPSERVICE_ASYNC_INFO lpServiceAsyncInfo)
u_long WSAAPI ws2_32.htonl(_In_ u_long hostlong)
VOID WINAPI kernel32.InitOnceInitialize(_Out_ PINIT_ONCE InitOnce)
BOOL WINAPI kernel32.GetThreadIOPendingFlag(_In_ HANDLE hThread,_Inout_ PBOOL lpIOIsPending)
BOOL None kernel32.EnumLanguageGroupLocales(_In_ LANGGROUPLOCALE_ENUMPROC lpLangGroupLocaleEnumProc,_In_ LGRPID LanguageGroup,_In_ DWORD dwFlags,_In_ LONG_PTR lParam)
BOOL None kernel32.EnumLanguageGroupLocalesW(_In_ LANGGROUPLOCALE_ENUMPROC lpLangGroupLocaleEnumProc,_In_ LGRPID LanguageGroup,_In_ DWORD dwFlags,_In_ LONG_PTR lParam)
BOOL None kernel32.EnumLanguageGroupLocalesA(_In_ LANGGROUPLOCALE_ENUMPROC lpLangGroupLocaleEnumProc,_In_ LGRPID LanguageGroup,_In_ DWORD dwFlags,_In_ LONG_PTR lParam)
BOOL None kernel32.EnumCalendarInfoEx(_In_ CALINFO_ENUMPROCEX pCalInfoEnumProcEx,_In_ LCID Locale,_In_ CALID Calendar,_In_ CALTYPE CalType)
BOOL None kernel32.EnumCalendarInfoExW(_In_ CALINFO_ENUMPROCEX pCalInfoEnumProcEx,_In_ LCID Locale,_In_ CALID Calendar,_In_ CALTYPE CalType)
BOOL None kernel32.EnumCalendarInfoExA(_In_ CALINFO_ENUMPROCEX pCalInfoEnumProcEx,_In_ LCID Locale,_In_ CALID Calendar,_In_ CALTYPE CalType)
BOOL WINAPI advapi32.GetTokenInformation(_In_ HANDLE TokenHandle,_In_ TOKEN_INFORMATION_CLASS TokenInformationClass,_Out_opt_ LPVOID TokenInformation,_In_ DWORD TokenInformationLength,_Out_ PDWORD ReturnLength)
HRESULT None ole32.CoAllowSetForegroundWindow(_In_ IUnknown *pUnk,_In_ LPVOID lpvReserved)
BOOLEAN WINAPI advapi32.AuditSetSecurity(_In_ SECURITY_INFORMATION SecurityInformation,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor)
BOOL WINAPI kernel32.DeleteTimerQueue(_In_ HANDLE TimerQueue)
BOOL None kernel32.SetThreadpoolStackInformation(_Inout_ PTP_POOL ptpp,_In_ PTP_POOL_STACK_INFORMATION ptpsi)
HANDLE WINAPI kernel32.CreateBoundaryDescriptor(_In_ LPCTSTR Name,_In_ ULONG Flags)
HANDLE WINAPI kernel32.CreateBoundaryDescriptorW(_In_ LPCTSTR Name,_In_ ULONG Flags)
HANDLE WINAPI kernel32.CreateBoundaryDescriptorA(_In_ LPCTSTR Name,_In_ ULONG Flags)
BOOL WINAPI kernel32.InitOnceComplete(_Inout_ LPINIT_ONCE lpInitOnce,_In_ DWORD dwFlags,_In_opt_ LPVOID lpContext)
BOOL WINAPI kernel32.LoadStringByReference(_In_ DWORD Flags,_In_opt_ PCWSTR Language,_In_ PCWSTR SourceString,_Out_opt_ PWSTR Buffer,_In_ ULONG cchBuffer,_In_opt_ PCWSTR Directory,_Out_opt_ PULONG pcchBufferOut)
LSTATUS None shlwapi.SHDeleteKey(_In_ HKEY hkey,_In_opt_ LPCTSTR pszSubKey)
LSTATUS None shlwapi.SHDeleteKeyW(_In_ HKEY hkey,_In_opt_ LPCTSTR pszSubKey)
LSTATUS None shlwapi.SHDeleteKeyA(_In_ HKEY hkey,_In_opt_ LPCTSTR pszSubKey)
BOOL WINAPI kernel32.HeapUnlock(_In_ HANDLE hHeap)
LPVOID WINAPI kernel32.LocalLock(_In_ HLOCAL hMem)
BOOL CALLBACK None.InitOnceCallback(_Inout_ PINIT_ONCE InitOnce,_Inout_opt_ PVOID Parameter,_Out_opt_ PVOID *Context)
BOOL WINAPI advapi32.DeleteAce(_Inout_ PACL pAcl,_In_ DWORD dwAceIndex)
LPVOID WINAPI kernel32.ConvertThreadToFiber(_In_opt_ LPVOID lpParameter)
DWORD WINAPI advapi32.BuildSecurityDescriptor(_In_opt_ PTRUSTEE pOwner,_In_opt_ PTRUSTEE pGroup,_In_ ULONG cCountOfAccessEntries,_In_opt_ PEXPLICIT_ACCESS pListOfAccessEntries,_In_ ULONG cCountOfAuditEntries,_In_opt_ PEXPLICIT_ACCESS pListOfAuditEntries,_In_opt_ PSECURITY_DESCRIPTOR pOldSD,_Out_ PULONG pSizeNewSD,_Out_ PSECURITY_DESCRIPTOR *pNewSD)
DWORD WINAPI advapi32.BuildSecurityDescriptorW(_In_opt_ PTRUSTEE pOwner,_In_opt_ PTRUSTEE pGroup,_In_ ULONG cCountOfAccessEntries,_In_opt_ PEXPLICIT_ACCESS pListOfAccessEntries,_In_ ULONG cCountOfAuditEntries,_In_opt_ PEXPLICIT_ACCESS pListOfAuditEntries,_In_opt_ PSECURITY_DESCRIPTOR pOldSD,_Out_ PULONG pSizeNewSD,_Out_ PSECURITY_DESCRIPTOR *pNewSD)
DWORD WINAPI advapi32.BuildSecurityDescriptorA(_In_opt_ PTRUSTEE pOwner,_In_opt_ PTRUSTEE pGroup,_In_ ULONG cCountOfAccessEntries,_In_opt_ PEXPLICIT_ACCESS pListOfAccessEntries,_In_ ULONG cCountOfAuditEntries,_In_opt_ PEXPLICIT_ACCESS pListOfAuditEntries,_In_opt_ PSECURITY_DESCRIPTOR pOldSD,_Out_ PULONG pSizeNewSD,_Out_ PSECURITY_DESCRIPTOR *pNewSD)
INT None ws2_32.WSAGetServiceClassInfo(_In_ LPGUID lpProviderId,_In_ LPGUID lpServiceClassId,_Inout_ LPDWORD lpdwBufferLength,_Out_ LPWSASERVICECLASSINFO lpServiceClassInfo)
INT None ws2_32.WSAGetServiceClassInfoW(_In_ LPGUID lpProviderId,_In_ LPGUID lpServiceClassId,_Inout_ LPDWORD lpdwBufferLength,_Out_ LPWSASERVICECLASSINFO lpServiceClassInfo)
INT None ws2_32.WSAGetServiceClassInfoA(_In_ LPGUID lpProviderId,_In_ LPGUID lpServiceClassId,_Inout_ LPDWORD lpdwBufferLength,_Out_ LPWSASERVICECLASSINFO lpServiceClassInfo)
ULONG None mswsock.RIODequeueCompletion(_In_ RIO_CQ CQ,_Out_ PRIORESULT Array,_In_ ULONG ArraySize)
BOOL WINAPI kernel32.TerminateProcess(_In_ HANDLE hProcess,_In_ UINT uExitCode)
VOID None None.SetThreadpoolCallbackPool(_Inout_ PTP_CALLBACK_ENVIRON pcbe,_In_ PTP_POOL ptpp)
HANDLE WINAPI kernel32.CreateSemaphore(_In_opt_ LPSECURITY_ATTRIBUTES lpSemaphoreAttributes,_In_ LONG lInitialCount,_In_ LONG lMaximumCount,_In_opt_ LPCTSTR lpName)
HANDLE WINAPI kernel32.CreateSemaphoreW(_In_opt_ LPSECURITY_ATTRIBUTES lpSemaphoreAttributes,_In_ LONG lInitialCount,_In_ LONG lMaximumCount,_In_opt_ LPCTSTR lpName)
HANDLE WINAPI kernel32.CreateSemaphoreA(_In_opt_ LPSECURITY_ATTRIBUTES lpSemaphoreAttributes,_In_ LONG lInitialCount,_In_ LONG lMaximumCount,_In_opt_ LPCTSTR lpName)
BOOL WINAPI advapi32.GetWindowsAccountDomainSid(_In_ PSID pSid,_Out_opt_ PSID ppDomainSid,_Inout_ DWORD *cbSid)
BOOL WINAPI kernel32.VirtualProtectEx(_In_ HANDLE hProcess,_In_ LPVOID lpAddress,_In_ SIZE_T dwSize,_In_ DWORD flNewProtect,_Out_ PDWORD lpflOldProtect)
VOID WINAPI kernel32.WaitForThreadpoolTimerCallbacks(_Inout_ PTP_TIMER pti,_In_ BOOL fCancelPendingCallbacks)
NTSTATUS NTAPI ntdll.NtCompareTokens(_In_ HANDLE FirstTokenHandle,_In_ HANDLE SecondTokenHandle,_Out_ PBOOLEAN Equal)
DWORD WINAPI kernel32.SetThreadIdealProcessor(_In_ HANDLE hThread,_In_ DWORD dwIdealProcessor)
BOOL WINAPI advapi32.AccessCheckByTypeResultList(_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_opt_ PSID PrincipalSelfSid,_In_ HANDLE ClientToken,_In_ DWORD DesiredAccess,_Inout_opt_ POBJECT_TYPE_LIST ObjectTypeList,_In_ DWORD ObjectTypeListLength,_Out_ PGENERIC_MAPPING GenericMapping,_Out_opt_ PPRIVILEGE_SET PrivilegeSet,_Inout_ LPDWORD PrivilegeSetLength,_Out_ LPDWORD GrantedAccessList,_Out_ LPDWORD AccessStatusList)
BOOL WINAPI avrt.AvRtCreateThreadOrderingGroup(_Out_ PHANDLE Context,_In_ PLARGE_INTEGER Period,_Inout_ GUID *ThreadOrderingGuid,_In_opt_ PLARGE_INTEGER Timeout)
BOOL WINAPI advapi32.AddAccessDeniedAceEx(_Inout_ PACL pAcl,_In_ DWORD dwAceRevision,_In_ DWORD AceFlags,_In_ DWORD AccessMask,_In_ PSID pSid)
BOOL WINAPI aclui.EditSecurity(_In_ HWND hwndOwner,_In_ LPSECURITYINFO psi)
BOOL WINAPI advapi32.AddAccessDeniedAceEx(_Inout_ PACL pAcl,_In_ DWORD dwAceRevision,_In_ DWORD AceFlags,_In_ DWORD AccessMask,_In_ PSID pSid)
VOID WINAPI kernel32.WaitForThreadpoolIoCallbacks(_Inout_ PTP_IO pio,_In_ BOOL fCancelPendingCallbacks)
BOOL WINAPI user32.AttachThreadInput(_In_ DWORD idAttach,_In_ DWORD idAttachTo,_In_ BOOL fAttach)
BOOL WINAPI kernel32.ChangeTimerQueueTimer(_In_opt_ HANDLE TimerQueue,_Inout_ HANDLE Timer,_In_ ULONG DueTime,_In_ ULONG Period)
BOOL WINAPI advapi32.SetSecurityDescriptorGroup(_Inout_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_opt_ PSID pGroup,_In_ BOOL bGroupDefaulted)
VOID None None.DestroyThreadpoolEnvironment(_Inout_ PTP_CALLBACK_ENVIRON pcbe)
LPVOID WINAPI kernel32.ConvertThreadToFiberEx(_In_opt_ LPVOID lpParameter,_In_ DWORD dwFlags)
WORD WINAPI ntdll.RtlQueryDepthSList(_In_ PSLIST_HEADER ListHead)
HRESULT None ole32.OleRegGetUserType(_In_ REFCLSID clsid,_In_ DWORD dwFormOfType,_Out_ LPOLESTR *pszUserType)
BOOL None kernel32.IsValidLanguageGroup(_In_ LGRPID LanguageGroup,_In_ DWORD dwFlags)
SOCKET None None.WPUModifyIFSHandle(_In_ DWORD dwCatalogEntryId,_In_ SOCKET ProposedHandle,_Out_ LPINT lpErrno)
BOOL WINAPI kernel32.VirtualProtectFromApp(_In_ PVOID Address,_In_ SIZE_T Size,_In_ ULONG NewProtection,_Out_ PULONG OldProtection)
UINT WINAPI kernel32.WinExec(_In_ LPCSTR lpCmdLine,_In_ UINT uCmdShow)
SIZE_T WINAPI kernel32.HeapCompact(_In_ HANDLE hHeap,_In_ DWORD dwFlags)
LONG WINAPI advapi32.RegSetKeySecurity(_In_ HKEY hKey,_In_ SECURITY_INFORMATION SecurityInformation,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor)
HLOCAL WINAPI kernel32.LocalReAlloc(_In_ HLOCAL hMem,_In_ SIZE_T uBytes,_In_ UINT uFlags)
PSLIST_ENTRY WINAPI kernel32.InterlockedPushListSListEx(_Inout_ PSLIST_HEADER ListHead,_Inout_ PSLIST_ENTRY List,_Inout_ PSLIST_ENTRY ListEnd,_In_ ULONG Count)
HRESULT None ole32.CoRevokeClassObject(_In_ DWORD dwRegister)
VOID WINAPI kernel32.ReleaseSRWLockExclusive(_Inout_ PSRWLOCK SRWLock)
VOID FORCEINLINE None.TpInitializeCallbackEnviron(_Out_ PTP_CALLBACK_ENVIRON CallbackEnviron)
BOOL WINAPI kernel32.QueryProcessAffinityUpdateMode(_In_ HANDLE ProcessHandle,_Out_opt_ DWORD lpdwFlags)
HANDLE WINAPI kernel32.OpenPrivateNamespace(_In_ LPVOID lpBoundaryDescriptor,_In_ LPCTSTR lpAliasPrefix)
HANDLE WINAPI kernel32.OpenPrivateNamespaceW(_In_ LPVOID lpBoundaryDescriptor,_In_ LPCTSTR lpAliasPrefix)
HANDLE WINAPI kernel32.OpenPrivateNamespaceA(_In_ LPVOID lpBoundaryDescriptor,_In_ LPCTSTR lpAliasPrefix)
BOOL WINAPI advapi32.IsTokenRestricted(_In_ HANDLE TokenHandle)
BOOL CALLBACK None.EnumCalendarInfoProc(_In_ LPTSTR lpCalendarInfoString)
HRESULT WINAPI kernel32.SetThreadDescription(_In_ HANDLE hThread,_In_ PCWSTR lpThreadDescription)
HRESULT None ole32.CoGetTreatAsClass(_In_ REFCLSID clsidOld,_Out_ LPCLSID pClsidNew)
BOOL WINAPI kernel32.SetProcessPriorityBoost(_In_ HANDLE hProcess,_In_ BOOL DisablePriorityBoost)
BOOL None kernel32.IsNLSDefinedString(_In_ NLS_FUNCTION Function,_In_ DWORD dwFlags,_In_ LPNLSVERSIONINFO lpVersionInformation,_In_ LPCWSTR lpString,_In_ INT cchStr)
BOOL WINAPI advapi32.AddAccessAllowedObjectAce(_Inout_ PACL pAcl,_In_ DWORD dwAceRevision,_In_ DWORD AceFlags,_In_ DWORD AccessMask,_In_opt_ GUID *ObjectTypeGuid,_In_opt_ GUID *InheritedObjectTypeGuid,_In_ PSID pSid)
HRESULT WINOLEAPI combase.CoWaitForMultipleObjects(_In_ DWORD dwFlags,_In_ DWORD dwTimeout,_In_ ULONG cHandles,_In_ LPHANDLE pHandles,_Out_ LPDWORD lpdwIndex)
VOID WINAPI kernel32.GetStartupInfo(_Out_ LPSTARTUPINFO lpStartupInfo)
VOID WINAPI kernel32.GetStartupInfoW(_Out_ LPSTARTUPINFO lpStartupInfo)
VOID WINAPI kernel32.GetStartupInfoA(_Out_ LPSTARTUPINFO lpStartupInfo)
BOOL WINAPI kernel32.SetProcessDEPPolicy(_In_ DWORD dwFlags)
LPVOID WINAPI kernel32.HeapAlloc(_In_ HANDLE hHeap,_In_ DWORD dwFlags,_In_ SIZE_T dwBytes)
BOOL WINAPI kernel32.GetProcessPriorityBoost(_In_ HANDLE hProcess,_Out_ PBOOL pDisablePriorityBoost)
BOOLEAN WINAPI advapi32.AuditSetSystemPolicy(_In_ PCAUDIT_POLICY_INFORMATION pAuditPolicy,_In_ ULONG PolicyCount)
BOOL WINAPI kernel32.QueryMemoryResourceNotification(_In_ HANDLE ResourceNotificationHandle,_Out_ PBOOL ResourceState)
PUCHAR WINAPI advapi32.GetSidSubAuthorityCount(_In_ PSID pSid)
BOOL WINAPI kernel32.AllocateUserPhysicalPages(_In_ HANDLE hProcess,_Inout_ PULONG_PTR NumberOfPages,_Out_ PULONG_PTR UserPfnArray)
BOOL WINAPI kernel32.ClearCommBreak(_In_ HANDLE hFile)
BOOL None ole32.CoFileTimeToDosDateTime(_In_ FILETIME *lpFileTime,_Out_ LPWORD lpDosDate,_Out_ LPWORD lpDosTime)
HRESULT None ole32.CoCreateFreeThreadedMarshaler(_In_ LPUNKNOWN punkOuter,_Out_ LPUNKNOWN *ppunkMarshal)
DWORD None kernel32.GetMaximumProcessorCount(_In_ WORD GroupNumber)
DWORD WINAPI kernel32.Wow64SuspendThread(_In_ HANDLE hThread)
DWORD WINAPI user32.GetGuiResources(_In_ HANDLE hProcess,_In_ DWORD uiFlags)
BOOL WINAPI advapi32.ImpersonateNamedPipeClient(_In_ HANDLE hNamedPipe)
BOOL None kernel32.GetCalendarSupportedDateRange(_In_ CALID Calendar,_Out_ LPCALDATETIME lpCalMinDateTime,_Out_ LPCALDATETIME lpCalMaxDateTime)
BOOL WINAPI authz.AuthzInstallSecurityEventSource(_In_ DWORD dwFlags,_In_ PAUTHZ_SOURCE_SCHEMA_REGISTRATION pRegistration)
BOOL WINAPI user32.SetUserObjectSecurity(_In_ HANDLE hObj,_In_ PSECURITY_INFORMATION pSIRequested,_In_ PSECURITY_DESCRIPTOR pSID)
DWORD WINAPI advapi32.FreeInheritedFromArray(_In_ PINHERITED_FROM pInheritArray,_In_ USHORT AceCnt,_In_opt_ PFN_OBJECT_MGR_FUNCTS pfnArray)
BOOL WINAPI kernel32.AddSIDToBoundaryDescriptor(_Inout_ HANDLE *BoundaryDescriptor,_In_ PSID RequiredSid)
HRESULT WINAPI dssec.DSCreateSecurityPage(_In_ LPCWSTR pwszObjectPath,_In_opt_ LPCWSTR pwszObjectClass,_In_ DWORD dwFlags,_Out_ HPROPSHEETPAGE *phPage,_In_opt_ PFNREADOBJECTSECURITY pfnReadSD,_In_opt_ PFNWRITEOBJECTSECURITY pfnWriteSD,_In_ LPARAM lpContext)
BOOL WINAPI kernel32.BindIoCompletionCallback(_In_ HANDLE FileHandle,_In_ LPOVERLAPPED_COMPLETION_ROUTINE Function,_In_ ULONG Flags)
VOID CALLBACK None.TimerCallback(_Inout_ PTP_CALLBACK_INSTANCE Instance,_Inout_opt_ PVOID Context,_Inout_ PTP_TIMER Timer)
BOOL WINAPI advapi32.GetKernelObjectSecurity(_In_ HANDLE Handle,_In_ SECURITY_INFORMATION RequestedInformation,_Out_opt_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_ DWORD nLength,_Out_ LPDWORD lpnLengthNeeded)
HRESULT None shlwapi.AssocQueryString(_In_ ASSOCF flags,_In_ ASSOCSTR str,_In_ LPCTSTR pszAssoc,_In_opt_ LPCTSTR pszExtra,_Out_opt_ LPTSTR pszOut,_Inout_ DWORD *pcchOut)
HRESULT None shlwapi.AssocQueryStringW(_In_ ASSOCF flags,_In_ ASSOCSTR str,_In_ LPCTSTR pszAssoc,_In_opt_ LPCTSTR pszExtra,_Out_opt_ LPTSTR pszOut,_Inout_ DWORD *pcchOut)
HRESULT None shlwapi.AssocQueryStringA(_In_ ASSOCF flags,_In_ ASSOCSTR str,_In_ LPCTSTR pszAssoc,_In_opt_ LPCTSTR pszExtra,_Out_opt_ LPTSTR pszOut,_Inout_ DWORD *pcchOut)
INT None ws2_32.WSARemoveServiceClass(_In_ LPGUID lpServiceClassId)
DWORD WINAPI kernel32.SetCriticalSectionSpinCount(_Inout_ LPCRITICAL_SECTION lpCriticalSection,_In_ DWORD dwSpinCount)
DWORD WINAPI kernel32.GetProcessVersion(_In_ DWORD ProcessId)
HRESULT None ole32.CoRegisterPSClsid(_In_ REFIID riid,_In_ REFCLSID rclsid)
DWORD WINAPI kernel32.GetEnvironmentVariable(_In_opt_ LPCTSTR lpName,_Out_opt_ LPTSTR lpBuffer,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetEnvironmentVariableW(_In_opt_ LPCTSTR lpName,_Out_opt_ LPTSTR lpBuffer,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetEnvironmentVariableA(_In_opt_ LPCTSTR lpName,_Out_opt_ LPTSTR lpBuffer,_In_ DWORD nSize)
BOOL CALLBACK None.AuthzFreeCentralAccessPolicyCallback(_In_ PVOID pCentralAccessPolicy)
void CALLBACK ws2_32.CompletionROUTINE(IN DWORD dwError,IN DWORD cbTransferred,IN LPWSAOVERLAPPED lpOverlapped,IN DWORD dwFlags)
RIO_BUFFERID None mswsock.RIORegisterBuffer(_In_ PCHAR DataBuffer,_In_ DWORD DataLength)
BOOL WINAPI authz.AuthzReportSecurityEventFromParams(_In_ DWORD dwFlags,_In_ AUTHZ_SECURITY_EVENT_PROVIDER_HANDLE hEventProvider,_In_ DWORD dwAuditId,_In_opt_ PSID pUserSid,_In_ PAUDIT_PARAMS pParams)
BOOL CALLBACK None.EnumCalendarInfoProcEx(_In_ LPTSTR lpCalendarInfoString,_In_ CALID Calendar)
BOOL CALLBACK None.EnumCalendarInfoProcExW(_In_ LPTSTR lpCalendarInfoString,_In_ CALID Calendar)
BOOL CALLBACK None.EnumCalendarInfoProcExA(_In_ LPTSTR lpCalendarInfoString,_In_ CALID Calendar)
VOID WINAPI kernel32.FreeLibraryWhenCallbackReturns(_Inout_ PTP_CALLBACK_INSTANCE pci,_In_ HMODULE mod)
BOOL CALLBACK None.EnumLocalesProcEx(_In_ LPWSTR lpLocaleString,_In_ DWORD dwFlags,_In_ LPARAM lParam)
HRESULT None ole32.CoInstall(_In_ IBindCtx *pbc,_In_ DWORD dwFlags,_In_ uCLSSPEC *pClassSpec,_In_ QUERYCONTEXT *pQuery,_In_ LPWSTR pszCodeBase)
VOID WINAPI kernel32.InitializeSRWLock(_Out_ PSRWLOCK SRWLock)
BOOL WINAPI advapi32.LookupAccountName(_In_opt_ LPCTSTR lpSystemName,_In_ LPCTSTR lpAccountName,_Out_opt_ PSID Sid,_Inout_ LPDWORD cbSid,_Out_opt_ LPTSTR ReferencedDomainName,_Inout_ LPDWORD cchReferencedDomainName,_Out_ PSID_NAME_USE peUse)
BOOL WINAPI advapi32.LookupAccountNameW(_In_opt_ LPCTSTR lpSystemName,_In_ LPCTSTR lpAccountName,_Out_opt_ PSID Sid,_Inout_ LPDWORD cbSid,_Out_opt_ LPTSTR ReferencedDomainName,_Inout_ LPDWORD cchReferencedDomainName,_Out_ PSID_NAME_USE peUse)
BOOL WINAPI advapi32.LookupAccountNameA(_In_opt_ LPCTSTR lpSystemName,_In_ LPCTSTR lpAccountName,_Out_opt_ PSID Sid,_Inout_ LPDWORD cbSid,_Out_opt_ LPTSTR ReferencedDomainName,_Inout_ LPDWORD cchReferencedDomainName,_Out_ PSID_NAME_USE peUse)
BOOL WINAPI advapi32.GetPrivateObjectSecurity(_In_ PSECURITY_DESCRIPTOR ObjectDescriptor,_In_ SECURITY_INFORMATION SecurityInformation,_Out_opt_ PSECURITY_DESCRIPTOR ResultantDescriptor,_In_ DWORD DescriptorLength,_Out_ PDWORD ReturnLength)
VOID WINAPI kernel32.ReleaseSRWLockShared(_Inout_ PSRWLOCK SRWLock)
BOOL WINAPI kernel32.GetSystemCpuSetInformation(_Out_opt_ PSYSTEM_CPU_SET_INFORMATION Information,_In_ ULONG BufferLength,_Out_ PULONG ReturnedLength,_In_opt_ HANDLE Process,_Reserved_ ULONG Flags)
BOOL WINAPI user32.UserHandleGrantAccess(_In_ HANDLE hUserHandle,_In_ HANDLE hJob,_In_ BOOL bGrant)
BOOL WINAPI kernel32.SetProtectedPolicy(_In_ LPCGUID PolicyGuid,_In_ ULONG_PTR PolicyValue,_Out_ PULONG_PTR OldPolicyValue)
HRESULT None ole32.BindMoniker(_In_ LPMONIKER pmk,_In_ DWORD grfOpt,_In_ REFIID iidResult,_Out_ LPVOID *ppvResult)
BOOL None kernel32.GetNLSVersion(_In_ NLS_FUNCTION Function,_In_ LCID Locale,_Inout_ LPNLSVERSIONINFO lpVersionInformation)
BOOL WINAPI kernel32.VirtualUnlock(_In_ LPVOID lpAddress,_In_ SIZE_T dwSize)
LCID None nlsmap.DownlevelLocaleNameToLCID(_In_ LPWSTR lpName,_In_ DWORD dwFlags)
BOOL WINAPI kernel32.EnterUmsSchedulingMode(_In_ PUMS_SCHEDULER_STARTUP_INFO SchedulerStartupInfo)
BOOL None kernel32.GetAppContainerNamedObjectPath(_In_opt_ HANDLE Token,_In_opt_ PSID AppContainerSid,_In_ ULONG ObjectPathLength,_Out_opt_ LPWSTR ObjectPath,_Out_ PULONG ReturnLength)
VOID WINAPI advapi32.BuildTrusteeWithName(_Inout_ PTRUSTEE pTrustee,_In_opt_ LPTSTR pName)
VOID WINAPI advapi32.BuildTrusteeWithNameW(_Inout_ PTRUSTEE pTrustee,_In_opt_ LPTSTR pName)
VOID WINAPI advapi32.BuildTrusteeWithNameA(_Inout_ PTRUSTEE pTrustee,_In_opt_ LPTSTR pName)
BOOL WINAPI kernel32.GetNumaProcessorNode(_In_ UCHAR Processor,_Out_ PUCHAR NodeNumber)
u_short WSAAPI ws2_32.ntohs(_In_ u_short netshort)
BOOL WINAPI kernel32.SetThreadStackGuarantee(_Inout_ PULONG StackSizeInBytes)
HRESULT None ole32.CoCreateInstance(_In_ REFCLSID rclsid,_In_ LPUNKNOWN pUnkOuter,_In_ DWORD dwClsContext,_In_ REFIID riid,_Out_ LPVOID *ppv)
VOID CALLBACK None.IoCompletionCallback(_Inout_ PTP_CALLBACK_INSTANCE Instance,_Inout_opt_ PVOID Context,_Inout_opt_ PVOID Overlapped,_In_ ULONG IoResult,_In_ ULONG_PTR NumberOfBytesTransferred,_Inout_ PTP_IO Io)
BOOL None ws2_32.WSAResetEvent(_In_ WSAEVENT hEvent)
BOOL WINAPI kernel32.GetLogicalProcessorInformation(_Out_ PSYSTEM_LOGICAL_PROCESSOR_INFORMATION Buffer,_Inout_ PDWORD ReturnLength)
HRESULT WINAPI coremessaging.CreateDispatcherQueueController(_In_ DispatcherQueueOptions options,_Out_ DispatcherQueueController dispatcherQueueController)
HRESULT None ole32.CoRegisterInitializeSpy(_In_ LPINITIALIZESPY pSpy,_Out_ ULARGE_INTEGER *puliCookie)
DWORD WINAPI kernel32.QueryIoRateControlInformationJobObject(_In_opt_ HANDLE hJob,_In_opt_ PCWSTR VolumeName,_Out_ JOBOBJECT_IO_RATE_CONTROL_INFORMATION **InfoBlocks,_Out_ ULONG *InfoBlockCount)
BOOL WINAPI kernel32.IsWow64Process2(_In_ HANDLE hProcess,_Out_ USHORT *pProcessMachine,_Out_opt_ USHORT *pNativeMachine)
BOOL CALLBACK None.AuthzComputeGroupsCallback(_In_ AUTHZ_CLIENT_CONTEXT_HANDLE hAuthzClientContext,_In_ PVOID Args,_Out_ PSID_AND_ATTRIBUTES *pSidAttrArray,_Out_ PDWORD pSidCount,_Out_ PSID_AND_ATTRIBUTES *pRestrictedSidAttrArray,_Out_ PDWORD pRestrictedSidCount)
BOOL WINAPI kernel32.DequeueUmsCompletionListItems(_In_ PUMS_COMPLETION_LIST UmsCompletionList,_In_ DWORD WaitTimeOut,_Out_ PUMS_CONTEXT *UmsThreadList)
BOOL WINAPI kernel32.SetThreadpoolWaitEx(_Inout_ PTP_WAIT pwa,_In_opt_ HANDLE h,_In_opt_ PFILETIME pftTimeout,_Reserved_ PVOID Reserved)
BOOL None ole32.CoIsHandlerConnected(_In_ LPUNKNOWN pUnk)
HRESULT None ole32.CoWaitForMultipleHandles(_In_ DWORD dwFlags,_In_ DWORD dwTimeout,_In_ ULONG cHandles,_In_ LPHANDLE pHandles,_Out_ LPDWORD lpdwindex)
BOOL None kernel32.EnumSystemLocales(_In_ LOCALE_ENUMPROC lpLocaleEnumProc,_In_ DWORD dwFlags)
BOOL None kernel32.EnumSystemLocalesW(_In_ LOCALE_ENUMPROC lpLocaleEnumProc,_In_ DWORD dwFlags)
BOOL None kernel32.EnumSystemLocalesA(_In_ LOCALE_ENUMPROC lpLocaleEnumProc,_In_ DWORD dwFlags)
BOOL WINAPI kernel32.DeleteUmsCompletionList(_In_ PUMS_COMPLETION_LIST UmsCompletionList)
BOOL WINAPI authz.AuthzGetInformationFromContext(_In_ AUTHZ_CLIENT_CONTEXT_HANDLE hAuthzClientContext,_In_ AUTHZ_CONTEXT_INFORMATION_CLASS InfoClass,_In_ DWORD BufferSize,_Out_ PDWORD pSizeRequired,_Out_ PVOID Buffer)
BOOL WSAAPI ws2_32.WSAGetOverlappedResult(_In_ SOCKET s,_In_ LPWSAOVERLAPPED lpOverlapped,_Out_ LPDWORD lpcbTransfer,_In_ BOOL fWait,_Out_ LPDWORD lpdwFlags)
BOOL WINAPI kernel32.TerminateThread(_Inout_ HANDLE hThread,_In_ DWORD dwExitCode)
BOOL None advapi32.ConvertSidToStringSid(_In_ PSID Sid,_Out_ LPTSTR *StringSid)
BOOL None advapi32.ConvertSidToStringSidW(_In_ PSID Sid,_Out_ LPTSTR *StringSid)
BOOL None advapi32.ConvertSidToStringSidA(_In_ PSID Sid,_Out_ LPTSTR *StringSid)
BOOL None kernel32.GetThreadGroupAffinity(_In_ HANDLE hThread,_Out_ PGROUP_AFFINITY GroupAffinity)
VOID None None.SetThreadpoolCallbackRunsLong(_Inout_ PTP_CALLBACK_ENVIRON pcbe)
BOOL CALLBACK None.EnumGeoInfoProc(_In_ GEOID GeoId)
HRESULT None ole32.CoRegisterActivationFilter(_In_ IActivationFilter *pActivationFilter)
HRESULT None ole32.CoInitialize(_In_opt_ LPVOID pvReserved)
DWORD WINAPI advapi32.SetEntriesInAcl(_In_ ULONG cCountOfExplicitEntries,_In_opt_ PEXPLICIT_ACCESS pListOfExplicitEntries,_In_opt_ PACL OldAcl,_Out_ PACL *NewAcl)
DWORD WINAPI advapi32.SetEntriesInAclW(_In_ ULONG cCountOfExplicitEntries,_In_opt_ PEXPLICIT_ACCESS pListOfExplicitEntries,_In_opt_ PACL OldAcl,_Out_ PACL *NewAcl)
DWORD WINAPI advapi32.SetEntriesInAclA(_In_ ULONG cCountOfExplicitEntries,_In_opt_ PEXPLICIT_ACCESS pListOfExplicitEntries,_In_opt_ PACL OldAcl,_Out_ PACL *NewAcl)
BOOL WINAPI kernel32.DeleteUmsThreadContext(_In_ PUMS_CONTEXT UmsThread)
INT WSAAPI ws2_32.WSAStringToAddress(_In_ LPTSTR AddressString,_In_ INT AddressFamily,_In_opt_ LPWSAPROTOCOL_INFO lpProtocolInfo,_Out_ LPSOCKADDR lpAddress,_Inout_ LPINT lpAddressLength)
INT WSAAPI ws2_32.WSAStringToAddressW(_In_ LPTSTR AddressString,_In_ INT AddressFamily,_In_opt_ LPWSAPROTOCOL_INFO lpProtocolInfo,_Out_ LPSOCKADDR lpAddress,_Inout_ LPINT lpAddressLength)
INT WSAAPI ws2_32.WSAStringToAddressA(_In_ LPTSTR AddressString,_In_ INT AddressFamily,_In_opt_ LPWSAPROTOCOL_INFO lpProtocolInfo,_Out_ LPSOCKADDR lpAddress,_Inout_ LPINT lpAddressLength)
BOOL WINAPI authz.AuthzOpenObjectAudit(_In_ DWORD Flags,_In_ AUTHZ_CLIENT_CONTEXT_HANDLE hAuthzClientContext,_In_ PAUTHZ_ACCESS_REQUEST pRequest,_In_ AUTHZ_AUDIT_EVENT_HANDLE hAuditEvent,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_ PSECURITY_DESCRIPTOR *SecurityDescriptorArray,_In_ DWORD SecurityDescriptorCount,_In_ PAUTHZ_ACCESS_REPLY pReply)
HRESULT WINOLEAPI None.CoSetMessageDispatcher(_In_opt_ *pMessageDispatcher None)
INT None ws2_32.WSALookupServiceEnd(_In_ HANDLE hLookup)
BOOL WINAPI avrt.AvQuerySystemResponsiveness(_In_ HANDLE AvrtHandle,_Out_ PULONG SystemResponsivenessValue)
HANDLE WINAPI kernel32.OpenProcess(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ DWORD dwProcessId)
HANDLE WINAPI kernel32.OpenFileMapping(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpName)
HANDLE WINAPI kernel32.OpenFileMappingW(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpName)
HANDLE WINAPI kernel32.OpenFileMappingA(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpName)
BOOL WINAPI advapi32.SetPrivateObjectSecurityEx(_In_ SECURITY_INFORMATION SecurityInformation,_In_ PSECURITY_DESCRIPTOR ModificationDescriptor,_Inout_ PSECURITY_DESCRIPTOR *ObjectsSecurityDescriptor,_In_ ULONG AutoInheritFlags,_In_ PGENERIC_MAPPING GenericMapping,_In_opt_ HANDLE Token)
HANDLE WINAPI kernel32.CreateWaitableTimerEx(_In_opt_ LPSECURITY_ATTRIBUTES lpTimerAttributes,_In_opt_ LPCTSTR lpTimerName,_In_ DWORD dwFlags,_In_ DWORD dwDesiredAccess)
HANDLE WINAPI kernel32.CreateWaitableTimerExW(_In_opt_ LPSECURITY_ATTRIBUTES lpTimerAttributes,_In_opt_ LPCTSTR lpTimerName,_In_ DWORD dwFlags,_In_ DWORD dwDesiredAccess)
HANDLE WINAPI kernel32.CreateWaitableTimerExA(_In_opt_ LPSECURITY_ATTRIBUTES lpTimerAttributes,_In_opt_ LPCTSTR lpTimerName,_In_ DWORD dwFlags,_In_ DWORD dwDesiredAccess)
VOID WINAPI kernel32.WakeConditionVariable(_Inout_ PCONDITION_VARIABLE ConditionVariable)
BOOL WINAPI kernelbase.TlsSetValue(_In_ DWORD dwTlsIndex,_In_opt_ LPVOID lpTlsValue)
BOOL WINAPI kernel32.GetUmsCompletionListEvent(_In_ PUMS_COMPLETION_LIST UmsCompletionList,_Inout_ PHANDLE UmsCompletionEvent)
BOOL WINAPI advapi32.AreAnyAccessesGranted(_In_ DWORD GrantedAccess,_In_ DWORD DesiredAccess)
VOID WINAPI kernel32.Sleep(_In_ DWORD dwMilliseconds)
BOOL PASCAL None.TransmitPackets(SOCKET hSocket None,LPTRANSMIT_PACKETS_ELEMENT lpPacketArray None,DWORD nElementCount None,DWORD nSendSize None,LPOVERLAPPED lpOverlapped None,DWORD dwFlags None)
BOOL WINAPI kernel32.GetThreadPriorityBoost(_In_ HANDLE hThread,_Out_ PBOOL pDisablePriorityBoost)
HRESULT None ole32.CoDisableCallCancellation(_In_opt_ LPVOID pReserved)
BOOL WINAPI kernel32.DeriveCapabilitySidsFromName(_In_ LPCWSTR CapName,_Out_ PSID **CapabilityGroupSids,_Out_ DWORD *CapabilityGroupSidCount,_Out_ PSID **CapabilitySids,_Out_ DWORD *CapabilitySidCount)
BOOL WINAPI kernel32.GetProcessHandleCount(_In_ HANDLE hProcess,_Inout_ PDWORD pdwHandleCount)
BOOL WINAPI kernel32.HeapDestroy(_In_ HANDLE hHeap)
HRESULT None ole32.CreateAntiMoniker(_Out_ LPMONIKER *ppmk)
BOOL None kernel32.SetCalendarInfo(_In_ LCID Locale,_In_ CALID Calendar,_In_ CALTYPE CalType,_In_ LPCTSTR lpCalData)
BOOL None kernel32.SetCalendarInfoW(_In_ LCID Locale,_In_ CALID Calendar,_In_ CALTYPE CalType,_In_ LPCTSTR lpCalData)
BOOL None kernel32.SetCalendarInfoA(_In_ LCID Locale,_In_ CALID Calendar,_In_ CALTYPE CalType,_In_ LPCTSTR lpCalData)
BOOL CALLBACK None.EnumCodePagesProc(_In_ LPTSTR lpCodePageString)
BOOL None ole32.IsEqualCLSID(_In_ REFCLSID rclsid1,_In_ REFCLSID rclsid2)
BOOL WINAPI kernel32.SetProcessShutdownParameters(_In_ DWORD dwLevel,_In_ DWORD dwFlags)
BOOL WINAPI kernel32.SetProcessAffinityMask(_In_ HANDLE hProcess,_In_ DWORD_PTR dwProcessAffinityMask)
HRESULT None ole32.CoRegisterMessageFilter(_In_opt_ LPMESSAGEFILTER lpMessageFilter,_Out_opt_ LPMESSAGEFILTER *lplpMessageFilter)
BOOL WINAPI authz.AuthzRegisterCapChangeNotification(_Out_ PAUTHZ_CAP_CHANGE_SUBSCRIPTION_HANDLE phCapChangeSubscription,_In_ LPTHREAD_START_ROUTINE pfnCapChangeCallback,_In_opt_ PVOID pCallbackContext)
BOOL None kernel32.GetCPInfo(_In_ UINT CodePage,_Out_ LPCPINFO lpCPInfo)
BOOL WINAPI kernel32.SetThreadpoolTimerEx(_Inout_ PTP_TIMER pti,_In_opt_ PFILETIME pftDueTime,_In_ DWORD msPeriod,_In_opt_ DWORD msWindowLength)
BOOL WINAPI kernel32.AddResourceAttributeAce(_Inout_ PACL pAcl,_In_ DWORD dwAceRevision,_In_ DWORD AceFlags,_In_ DWORD AccessMask,_In_ PSID pSid,_In_ PCLAIM_SECURITY_ATTRIBUTES_INFORMATION pAttributeInfo,_Out_ PDWORD pReturnLength)
DWORD WINAPI advapi32.LookupSecurityDescriptorParts(_Out_opt_ PTRUSTEE *pOwner,_Out_opt_ PTRUSTEE *pGroup,_Out_opt_ PULONG cCountOfAccessEntries,_Out_opt_ PEXPLICIT_ACCESS *pListOfAccessEntries,_Out_opt_ PULONG cCountOfAuditEntries,_Out_opt_ PEXPLICIT_ACCESS *pListOfAuditEntries,_In_ PSECURITY_DESCRIPTOR pSD)
DWORD WINAPI advapi32.LookupSecurityDescriptorPartsW(_Out_opt_ PTRUSTEE *pOwner,_Out_opt_ PTRUSTEE *pGroup,_Out_opt_ PULONG cCountOfAccessEntries,_Out_opt_ PEXPLICIT_ACCESS *pListOfAccessEntries,_Out_opt_ PULONG cCountOfAuditEntries,_Out_opt_ PEXPLICIT_ACCESS *pListOfAuditEntries,_In_ PSECURITY_DESCRIPTOR pSD)
DWORD WINAPI advapi32.LookupSecurityDescriptorPartsA(_Out_opt_ PTRUSTEE *pOwner,_Out_opt_ PTRUSTEE *pGroup,_Out_opt_ PULONG cCountOfAccessEntries,_Out_opt_ PEXPLICIT_ACCESS *pListOfAccessEntries,_Out_opt_ PULONG cCountOfAuditEntries,_Out_opt_ PEXPLICIT_ACCESS *pListOfAuditEntries,_In_ PSECURITY_DESCRIPTOR pSD)
HRESULT WINAPI dssec.DSCreateISecurityInfoObjectEx(_In_ LPCWSTR pwszObjectPath,_In_ LPCWSTR pwszObjectClass,_In_ LPCWSTR pwszServer,_In_ LPCWSTR pwszUserName,_In_ LPCWSTR pwszPassword,_In_ DWORD dwFlags,_Out_ LPSECURITYINFO *ppSI,_In_opt_ PFNREADOBJECTSECURITY pfnReadSD,_In_opt_ PFNWRITEOBJECTSECURITY pfnWriteSD,_In_ LPARAM lpContext)
HANDLE WINAPI kernel32.CreateFileMapping(_In_ HANDLE hFile,_In_opt_ LPSECURITY_ATTRIBUTES lpAttributes,_In_ DWORD flProtect,_In_ DWORD dwMaximumSizeHigh,_In_ DWORD dwMaximumSizeLow,_In_opt_ LPCTSTR lpName)
HANDLE WINAPI kernel32.CreateFileMappingW(_In_ HANDLE hFile,_In_opt_ LPSECURITY_ATTRIBUTES lpAttributes,_In_ DWORD flProtect,_In_ DWORD dwMaximumSizeHigh,_In_ DWORD dwMaximumSizeLow,_In_opt_ LPCTSTR lpName)
HANDLE WINAPI kernel32.CreateFileMappingA(_In_ HANDLE hFile,_In_opt_ LPSECURITY_ATTRIBUTES lpAttributes,_In_ DWORD flProtect,_In_ DWORD dwMaximumSizeHigh,_In_ DWORD dwMaximumSizeLow,_In_opt_ LPCTSTR lpName)
VOID WINAPI kernel32.FreeMemoryJobObject(_In_ VOID *Buffer)
HRESULT WINAPI combase.CoGetSystemSecurityPermissions(_In_ COMSD comSDType,_Out_ PSECURITY_DESCRIPTOR *ppSD)
BOOL WINAPI advapi32.AddAccessDeniedAce(_Inout_ PACL pAcl,_In_ DWORD dwAceRevision,_In_ DWORD AccessMask,_In_ PSID pSid)
HANDLE WINAPI kernel32.CreatePrivateNamespace(_In_opt_ LPSECURITY_ATTRIBUTES lpPrivateNamespaceAttributes,_In_ LPVOID lpBoundaryDescriptor,_In_ LPCTSTR lpAliasPrefix)
HANDLE WINAPI kernel32.CreatePrivateNamespaceW(_In_opt_ LPSECURITY_ATTRIBUTES lpPrivateNamespaceAttributes,_In_ LPVOID lpBoundaryDescriptor,_In_ LPCTSTR lpAliasPrefix)
HANDLE WINAPI kernel32.CreatePrivateNamespaceA(_In_opt_ LPSECURITY_ATTRIBUTES lpPrivateNamespaceAttributes,_In_ LPVOID lpBoundaryDescriptor,_In_ LPCTSTR lpAliasPrefix)
BOOL WINAPI kernel32.UmsThreadYield(_In_ PVOID SchedulerParam)
VOID WINAPI kernel32.StartThreadpoolIo(_Inout_ PTP_IO pio)
BOOL WINAPI kernel32.QueryIdleProcessorCycleTime(_Inout_ PULONG BufferLength,_Out_ PULONG64 ProcessorIdleCycleTime)
HRESULT None ole32.CoInitializeEx(_In_opt_ LPVOID pvReserved,_In_ DWORD dwCoInit)
BOOL WINAPI kernel32.QueueUserWorkItem(_In_ LPTHREAD_START_ROUTINE Function,_In_opt_ PVOID Context,_In_ ULONG Flags)
VOID FORCEINLINE None.TpSetCallbackLongFunction(_Inout_ PTP_CALLBACK_ENVIRON CallbackEnviron)
DWORD WINAPI advapi32.GetEffectiveRightsFromAcl(_In_ PACL pacl,_In_ PTRUSTEE pTrustee,_Out_ PACCESS_MASK pAccessRights)
DWORD WINAPI advapi32.GetEffectiveRightsFromAclW(_In_ PACL pacl,_In_ PTRUSTEE pTrustee,_Out_ PACCESS_MASK pAccessRights)
DWORD WINAPI advapi32.GetEffectiveRightsFromAclA(_In_ PACL pacl,_In_ PTRUSTEE pTrustee,_Out_ PACCESS_MASK pAccessRights)
HRESULT None ole32.MonikerCommonPrefixWith(_In_ LPMONIKER pmkThis,_In_ LPMONIKER pmkOther,_Out_ LPMONIKER *ppmkCommon)
HANDLE WINAPI kernel32.OpenEvent(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpName)
HANDLE WINAPI kernel32.OpenEventW(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpName)
HANDLE WINAPI kernel32.OpenEventA(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpName)
VOID WINAPI kernel32.CloseThreadpoolCleanupGroup(_Inout_ PTP_CLEANUP_GROUP ptpcg)
DWORD WINAPI advapi32.SetSecurityInfo(_In_ HANDLE handle,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_In_opt_ PSID psidOwner,_In_opt_ PSID psidGroup,_In_opt_ PACL pDacl,_In_opt_ PACL pSacl)
RIO_CQ None mswsock.RIOCreateCompletionQueue(_In_ DWORD QueueSize,_In_opt_ RIO_NOTIFICATION_COMPLETION NotificationCompletion)
PVOID WINAPI advapi32.FreeSid(_In_ PSID pSid)
BOOL WINAPI advapi32.CreateRestrictedToken(_In_ HANDLE ExistingTokenHandle,_In_ DWORD Flags,_In_ DWORD DisableSidCount,_In_opt_ PSID_AND_ATTRIBUTES SidsToDisable,_In_ DWORD DeletePrivilegeCount,_In_opt_ PLUID_AND_ATTRIBUTES PrivilegesToDelete,_In_ DWORD RestrictedSidCount,_In_opt_ PSID_AND_ATTRIBUTES SidsToRestrict,_Out_ PHANDLE NewTokenHandle)
BOOL WINAPI advapi32.AddAuditAccessAce(_Inout_ PACL pAcl,_In_ DWORD dwAceRevision,_In_ DWORD dwAccessMask,_In_ PSID pSid,_In_ BOOL bAuditSuccess,_In_ BOOL bAuditFailure)
BOOL WINAPI authz.AuthzAccessCheck(_In_ DWORD flags,_In_ AUTHZ_CLIENT_CONTEXT_HANDLE hAuthzClientContext,_In_ PAUTHZ_ACCESS_REQUEST pRequest,_In_opt_ AUTHZ_AUDIT_EVENT_HANDLE AuditEvent,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_opt_ PSECURITY_DESCRIPTOR *OptionalSecurityDescriptorArray,_In_opt_ DWORD OptionalSecurityDescriptorCount,_Inout_ PAUTHZ_ACCESS_REPLY pReply,_Out_opt_ PAUTHZ_ACCESS_CHECK_RESULTS_HANDLE phAccessCheckResults)
BOOL WINAPI authz.AuthzInitializeRemoteResourceManager(_In_ PAUTHZ_RPC_INIT_INFO_CLIENT pRpcInitInfo,_Out_ PAUTHZ_RESOURCE_MANAGER_HANDLE phAuthzResourceManager)
BOOL None kernel32.GetProcessGroupAffinity(_In_ HANDLE hProcess,_Inout_ PUSHORT GroupCount,_Out_ PUSHORT GroupArray)
BOOL WINAPI kernel32.GetNumaHighestNodeNumber(_Out_ PULONG HighestNodeNumber)
DWORD WINAPI advapi32.GetSidLengthRequired(_In_ UCHAR nSubAuthorityCount)
VOID WINAPI kernel32.AcquireSRWLockShared(_Inout_ PSRWLOCK SRWLock)
BOOL WINAPI kernel32.CreateUmsCompletionList(_Out_ PUMS_COMPLETION_LIST *UmsCompletionList)
BOOL WINAPI advapi32.ObjectPrivilegeAuditAlarm(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ HANDLE ClientToken,_In_ DWORD DesiredAccess,_In_ PPRIVILEGE_SET Privileges,_In_ BOOL AccessGranted)
BOOL WINAPI advapi32.ObjectPrivilegeAuditAlarmW(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ HANDLE ClientToken,_In_ DWORD DesiredAccess,_In_ PPRIVILEGE_SET Privileges,_In_ BOOL AccessGranted)
BOOL WINAPI advapi32.ObjectPrivilegeAuditAlarmA(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ HANDLE ClientToken,_In_ DWORD DesiredAccess,_In_ PPRIVILEGE_SET Privileges,_In_ BOOL AccessGranted)
BOOL WINAPI kernel32.FlsFree(_In_ DWORD dwFlsIndex)
BOOL WINAPI kernel32.SetThreadpoolThreadMinimum(_Inout_ PTP_POOL ptpp,_In_ DWORD cthrdMic)
DWORD WINAPI advapi32.GetExplicitEntriesFromAcl(_In_ PACL pacl,_Out_ PULONG pcCountOfExplicitEntries,_Out_ PEXPLICIT_ACCESS *pListOfExplicitEntries)
DWORD WINAPI advapi32.GetExplicitEntriesFromAclW(_In_ PACL pacl,_Out_ PULONG pcCountOfExplicitEntries,_Out_ PEXPLICIT_ACCESS *pListOfExplicitEntries)
DWORD WINAPI advapi32.GetExplicitEntriesFromAclA(_In_ PACL pacl,_Out_ PULONG pcCountOfExplicitEntries,_Out_ PEXPLICIT_ACCESS *pListOfExplicitEntries)
BOOL WINAPI advapi32.EqualPrefixSid(_In_ PSID pSid1,_In_ PSID pSid2)
VOID FORCEINLINE None.TpSetCallbackPersistent(_Inout_ PTP_CALLBACK_ENVIRON CallbackEnviron)
VOID WINAPI None.BadMemoryCallbackRoutine(VOID None None)
BOOL WINAPI advapi32.AddAccessAllowedAceEx(_Inout_ PACL pAcl,_In_ DWORD dwAceRevision,_In_ DWORD AceFlags,_In_ DWORD AccessMask,_In_ PSID pSid)
VOID WINAPI kernel32.DeleteProcThreadAttributeList(_Inout_ LPPROC_THREAD_ATTRIBUTE_LIST lpAttributeList)
BOOL WINAPI kernel32.UnregisterWait(_In_ HANDLE WaitHandle)
BOOL None kernel32.GetCalendarSupportedDateRange(_In_ CALID Calendar,_Out_ LPCALDATETIME lpCalMinDateTime,_Out_ LPCALDATETIME lpCalMaxDateTime)
BOOL WINAPI kernel32.AllocateUserPhysicalPagesNuma(_In_ HANDLE hProcess,_Inout_ PULONG_PTR NumberOfPages,_Out_ PULONG_PTR PageArray,_In_ DWORD nndPreferred)
VOID WINAPI kernel32.ExitProcess(_In_ UINT uExitCode)
BOOLEAN WINAPI advapi32.AuditLookupCategoryGuidFromCategoryId(_In_ POLICY_AUDIT_EVENT_TYPE AuditCategoryId,_Out_ GUID *pAuditCategoryGuid)
HANDLE WINAPI kernel32.CreateSemaphoreEx(_In_opt_ LPSECURITY_ATTRIBUTES lpSemaphoreAttributes,_In_ LONG lInitialCount,_In_ LONG lMaximumCount,_In_opt_ LPCTSTR lpName,_Reserved_ DWORD dwFlags,_In_ DWORD dwDesiredAccess)
HANDLE WINAPI kernel32.CreateSemaphoreExW(_In_opt_ LPSECURITY_ATTRIBUTES lpSemaphoreAttributes,_In_ LONG lInitialCount,_In_ LONG lMaximumCount,_In_opt_ LPCTSTR lpName,_Reserved_ DWORD dwFlags,_In_ DWORD dwDesiredAccess)
HANDLE WINAPI kernel32.CreateSemaphoreExA(_In_opt_ LPSECURITY_ATTRIBUTES lpSemaphoreAttributes,_In_ LONG lInitialCount,_In_ LONG lMaximumCount,_In_opt_ LPCTSTR lpName,_Reserved_ DWORD dwFlags,_In_ DWORD dwDesiredAccess)
BOOL WINAPI advapi32.CheckTokenMembership(_In_opt_ HANDLE TokenHandle,_In_ PSID SidToCheck,_Out_ PBOOL IsMember)
BOOL WINAPI advapi32.ImpersonateLoggedOnUser(_In_ HANDLE hToken)
VOID None None.SetThreadpoolCallbackLibrary(_Inout_ PTP_CALLBACK_ENVIRON pcbe,_In_ PVOID mod)
BOOL WINAPI advapi32.AddAuditAccessObjectAce(_Inout_ PACL pAcl,_In_ DWORD dwAceRevision,_In_ DWORD AceFlags,_In_ DWORD AccessMask,_In_opt_ GUID *ObjectTypeGuid,_In_opt_ GUID *InheritedObjectTypeGuid,_In_ PSID pSid,_In_ BOOL bAuditSuccess,_In_ BOOL bAuditFailure)
HANDLE WINAPI kernel32.CreateFileMappingFromApp(_In_ HANDLE hFile,_In_opt_ PSECURITY_ATTRIBUTES SecurityAttributes,_In_ ULONG PageProtection,_In_ ULONG64 MaximumSize,_In_opt_ PCWSTR Name)
VOID FORCEINLINE None.TpSetCallbackThreadpool(_Inout_ PTP_CALLBACK_ENVIRON CallbackEnviron,_In_ PTP_POOL Pool)
HANDLE WINAPI kernel32.OpenSemaphore(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpName)
HANDLE WINAPI kernel32.OpenSemaphoreW(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpName)
HANDLE WINAPI kernel32.OpenSemaphoreA(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ LPCTSTR lpName)
HANDLE WINAPI avrt.AvSetMmThreadCharacteristics(_In_ LPCTSTR TaskName,_Inout_ LPDWORD TaskIndex)
HANDLE WINAPI avrt.AvSetMmThreadCharacteristicsW(_In_ LPCTSTR TaskName,_Inout_ LPDWORD TaskIndex)
HANDLE WINAPI avrt.AvSetMmThreadCharacteristicsA(_In_ LPCTSTR TaskName,_Inout_ LPDWORD TaskIndex)
BOOL WINAPI kernel32.SetEnvironmentVariable(_In_ LPCTSTR lpName,_In_opt_ LPCTSTR lpValue)
BOOL WINAPI kernel32.SetEnvironmentVariableW(_In_ LPCTSTR lpName,_In_opt_ LPCTSTR lpValue)
BOOL WINAPI kernel32.SetEnvironmentVariableA(_In_ LPCTSTR lpName,_In_opt_ LPCTSTR lpValue)
BOOL None kernel32.GetProcessorSystemCycleTime(_In_ USHORT Group,_Out_ PSYSTEM_PROCESSOR_CYCLE_TIME_INFORMATION Buffer,_Inout_ PDWORD ReturnedLength)
BOOL None kernel32.SetThreadIdealProcessorEx(_In_ HANDLE hThread,_In_ PPROCESSOR_NUMBER lpIdealProcessor,_Out_opt_ PPROCESSOR_NUMBER lpPreviousIdealProcessor)
BOOL WINAPI advapi32.OpenProcessToken(_In_ HANDLE ProcessHandle,_In_ DWORD DesiredAccess,_Out_ PHANDLE TokenHandle)
HRESULT WINAPI aclui.EditSecurityAdvanced(_In_ HWND hwndOwner,_In_ LPSECURITYINFO psi,_In_ SI_PAGE_TYPE uSIPage)
BOOL WINAPI advapi32.AdjustTokenPrivileges(_In_ HANDLE TokenHandle,_In_ BOOL DisableAllPrivileges,_In_opt_ PTOKEN_PRIVILEGES NewState,_In_ DWORD BufferLength,_Out_opt_ PTOKEN_PRIVILEGES PreviousState,_Out_opt_ PDWORD ReturnLength)
LONG NTAPI ntdll.RtlIpv4StringToAddress(_In_ PCTSTR S,_In_ BOOLEAN Strict,_Out_ LPCTSTR *Terminator,_Out_ IN_ADDR *Addr)
LONG NTAPI ntdll.RtlIpv4StringToAddressW(_In_ PCTSTR S,_In_ BOOLEAN Strict,_Out_ LPCTSTR *Terminator,_Out_ IN_ADDR *Addr)
LONG NTAPI ntdll.RtlIpv4StringToAddressA(_In_ PCTSTR S,_In_ BOOLEAN Strict,_Out_ LPCTSTR *Terminator,_Out_ IN_ADDR *Addr)
VOID WINAPI kernel32.SwitchToFiber(_In_ LPVOID lpFiber)
HANDLE WINAPI kernel32.OpenThread(_In_ DWORD dwDesiredAccess,_In_ BOOL bInheritHandle,_In_ DWORD dwThreadId)
BOOL WINAPI advapi32.AddAuditAccessAceEx(_Inout_ PACL pAcl,_In_ DWORD dwAceRevision,_In_ DWORD AceFlags,_In_ DWORD dwAccessMask,_In_ PSID pSid,_In_ BOOL bAuditSuccess,_In_ BOOL bAuditFailure)
VOID WINAPI advapi32.MapGenericMask(_Inout_ PDWORD AccessMask,_In_ PGENERIC_MAPPING GenericMapping)
VOID WINAPI kernel32.CloseThreadpool(_Inout_ PTP_POOL ptpp)
BOOL WINAPI kernel32.FlsSetValue(_In_ DWORD dwFlsIndex,_In_opt_ PVOID lpFlsData)
BOOL WINAPI kernel32.IsThreadpoolTimerSet(_Inout_ PTP_TIMER pti)
VOID CALLBACK None.SimpleCallback(_Inout_ PTP_CALLBACK_INSTANCE Instance,_Inout_opt_ PVOID Context)
BOOL WINAPI advapi32.GetSecurityDescriptorOwner(_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_Out_ PSID *pOwner,_Out_ LPBOOL lpbOwnerDefaulted)
BOOL WINAPI kernel32.TrySubmitThreadpoolCallback(_In_ PTP_SIMPLE_CALLBACK pfns,_Inout_opt_ PVOID pv,_In_opt_ PTP_CALLBACK_ENVIRON pcbe)
NTSTATUS WINAPI ntdll.ZwQueryInformationProcess(_In_ HANDLE ProcessHandle,_In_ PROCESSINFOCLASS ProcessInformationClass,_Out_ PVOID ProcessInformation,_In_ ULONG ProcessInformationLength,_Out_opt_ PULONG ReturnLength)
VOID WINAPI kernel32.DeleteFiber(_In_ LPVOID lpFiber)
HANDLE WINAPI kernel32.CreateMutex(_In_opt_ LPSECURITY_ATTRIBUTES lpMutexAttributes,_In_ BOOL bInitialOwner,_In_opt_ LPCTSTR lpName)
HANDLE WINAPI kernel32.CreateMutexW(_In_opt_ LPSECURITY_ATTRIBUTES lpMutexAttributes,_In_ BOOL bInitialOwner,_In_opt_ LPCTSTR lpName)
HANDLE WINAPI kernel32.CreateMutexA(_In_opt_ LPSECURITY_ATTRIBUTES lpMutexAttributes,_In_ BOOL bInitialOwner,_In_opt_ LPCTSTR lpName)
BOOL WINAPI advapi32.GetSecurityDescriptorGroup(_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_Out_ PSID *pGroup,_Out_ LPBOOL lpbGroupDefaulted)
VOID WINAPI kernel32.SetThreadpoolWait(_Inout_ PTP_WAIT pwa,_In_opt_ HANDLE h,_In_opt_ PFILETIME pftTimeout)
BOOL WINAPI kernel32.GetThreadTimes(_In_ HANDLE hThread,_Out_ LPFILETIME lpCreationTime,_Out_ LPFILETIME lpExitTime,_Out_ LPFILETIME lpKernelTime,_Out_ LPFILETIME lpUserTime)
BOOL WINAPI kernel32.GetExitCodeThread(_In_ HANDLE hThread,_Out_ LPDWORD lpExitCode)
BOOL WINAPI advapi32.DestroyPrivateObjectSecurity(_Inout_ PSECURITY_DESCRIPTOR *ObjectDescriptor)
HGLOBAL None ole32.OleGetIconOfClass(_In_ REFCLSID rclsid,_In_opt_ LPOLESTR lpszLabel,_In_ BOOL fUseTypeAsLabel)
BOOL None kernel32.GetNLSVersionEx(_In_ NLS_FUNCTION function,_In_opt_ LPCWSTR lpLocaleName,_Inout_ LPNLSVERSIONINFOEX lpVersionInformation)
BOOL None kernel32.IsValidLocale(_In_ LCID Locale,_In_ DWORD dwFlags)
BOOL WINAPI kernel32.IsWow64Process(_In_ HANDLE hProcess,_Out_ PBOOL Wow64Process)
BOOL WINAPI kernel32.SetUmsThreadInformation(_In_ PUMS_CONTEXT UmsThread,_In_ UMS_THREAD_INFO_CLASS UmsThreadInfoClass,_In_ PVOID UmsThreadInformation,_In_ ULONG UmsThreadInformationLength)
HRESULT WINAPI dssec.DSCreateISecurityInfoObject(_In_ LPCWSTR pwszObjectPath,_In_ LPCWSTR pwszObjectClass,_In_ DWORD dwFlags,_Out_ LPSECURITYINFO *ppSI,_In_opt_ PFNREADOBJECTSECURITY pfnReadSD,_In_opt_ PFNWRITEOBJECTSECURITY pfnWriteSD,_In_ LPARAM lpContext)
BOOL WINAPI kernel32.NotifyUILanguageChange(_In_ DWORD dwFlags,_In_opt_ PCWSTR pcwstrNewLanguage,_In_opt_ PCWSTR pcwstrPreviousLanguage,_In_ DWORD dwReserved,_Out_opt_ PDWORD pdwStatusRtrn)
BOOL WINAPI kernel32.GetThreadSelectedCpuSets(_In_ HANDLE Thread,_Out_opt_ PULONG CpuSetIds,_In_ ULONG CpuSetIdCount,_Out_ PULONG RequiredIdCount)
BOOL None kernel32.GetNumaNodeProcessorMaskEx(_In_ USHORT Node,_Out_ PGROUP_AFFINITY ProcessorMask)
DWORD WINAPI user32.GetWindowThreadProcessId(_In_ HWND hWnd,_Out_opt_ LPDWORD lpdwProcessId)
VOID WINAPI kernel32.CloseThreadpoolWork(_Inout_ PTP_WORK pwk)
VOID WINAPI kernel32.CancelThreadpoolIo(_Inout_ PTP_IO pio)
BOOL WINAPI authz.AuthzModifyClaims(_In_ AUTHZ_CLIENT_CONTEXT_HANDLE hAuthzClientContext,_In_ AUTHZ_CONTEXT_INFORMATION_CLASS ClaimClass,_In_ PAUTHZ_SECURITY_ATTRIBUTE_OPERATION pClaimOperations,_In_opt_ PAUTHZ_SECURITY_ATTRIBUTES_INFORMATION pClaims)
BOOL None kernel32.QueryThreadpoolStackInformation(_In_ PTP_POOL ptpp,_Out_ PTP_POOL_STACK_INFORMATION ptpsi)
DWORD None iphlpapi.GetUdpStatisticsEx2(_Out_ PMIB_UDPSTATS2 Statistics,_In_ ULONG Family)
UINT WINAPI kernel32.GetWindowsDirectory(_Out_ LPTSTR lpBuffer,_In_ UINT uSize)
UINT WINAPI kernel32.GetWindowsDirectoryW(_Out_ LPTSTR lpBuffer,_In_ UINT uSize)
UINT WINAPI kernel32.GetWindowsDirectoryA(_Out_ LPTSTR lpBuffer,_In_ UINT uSize)
BOOL WINAPI advapi32.SetTokenInformation(_In_ HANDLE TokenHandle,_In_ TOKEN_INFORMATION_CLASS TokenInformationClass,_In_ LPVOID TokenInformation,_In_ DWORD TokenInformationLength)
BOOL WINAPI kernel32.GetProcessWorkingSetSizeEx(_In_ HANDLE hProcess,_Out_ PSIZE_T lpMinimumWorkingSetSize,_Out_ PSIZE_T lpMaximumWorkingSetSize,_Out_ PDWORD Flags)
HMODULE WINAPI kernel32.LoadLibrary(_In_ LPCTSTR lpFileName)
HMODULE WINAPI kernel32.LoadLibraryW(_In_ LPCTSTR lpFileName)
HMODULE WINAPI kernel32.LoadLibraryA(_In_ LPCTSTR lpFileName)
BOOL WINAPI kernel32.SetProcessWorkingSetSizeEx(_In_ HANDLE hProcess,_In_ SIZE_T dwMinimumWorkingSetSize,_In_ SIZE_T dwMaximumWorkingSetSize,_In_ DWORD Flags)
BOOLEAN WINAPI advapi32.AuditQuerySecurity(_In_ SECURITY_INFORMATION SecurityInformation,_Out_ PSECURITY_DESCRIPTOR *ppSecurityDescriptor)
BOOL WINAPI advapi32.ConvertToAutoInheritPrivateObjectSecurity(_In_opt_ PSECURITY_DESCRIPTOR ParentDescriptor,_In_ PSECURITY_DESCRIPTOR CurrentSecurityDescriptor,_Out_ PSECURITY_DESCRIPTOR *NewSecurityDescriptor,_In_opt_ GUID *ObjectType,_In_ BOOLEAN IsDirectoryObject,_In_ PGENERIC_MAPPING GenericMapping)
BOOL WINAPI authz.AuthzModifySecurityAttributes(_In_ AUTHZ_CLIENT_CONTEXT_HANDLE hAuthzClientContext,_In_ PAUTHZ_SECURITY_ATTRIBUTE_OPERATION pOperations,_In_ PAUTHZ_SECURITY_ATTRUBUTES_INFORMATION pAttributes)
HANDLE None kernel32.CreateRemoteThreadEx(_In_ HANDLE hProcess,_In_opt_ LPSECURITY_ATTRIBUTES lpThreadAttributes,_In_ SIZE_T dwStackSize,_In_ LPTHREAD_START_ROUTINE lpStartAddress,_In_opt_ LPVOID lpParameter,_In_ DWORD dwCreationFlags,_In_opt_ LPPROC_THREAD_ATTRIBUTE_LIST lpAttributeList,_Out_opt_ LPDWORD lpThreadId)
VOID FORCEINLINE None.TpDestroyCallbackEnviron(_In_ PTP_CALLBACK_ENVIRON CallbackEnviron)
HRESULT None activeds.ADsGetLastError(_Out_ LPDWORD lpError,_Out_ LPWSTR lpErrorBuf,_In_ DWORD dwErrorBufLen,_Out_ LPWSTR lpNameBuf,_In_ DWORD dwNameBufLen)
HRESULT None ole32.CoCopyProxy(_In_ IUnknown *pProxy,_Out_ IUnknown **ppCopy)
BOOL WINAPI ntdll.IsProcessCritical(_In_ HANDLE hProcess,_Out_ PBOOL Critical)
HRESULT None ole32.CreatePointerMoniker(_In_opt_ LPUNKNOWN punk,_Out_ LPMONIKER *ppmk)
BOOL WINAPI advapi32.QueryServiceObjectSecurity(_In_ SC_HANDLE hService,_In_ SECURITY_INFORMATION dwSecurityInformation,_Out_opt_ PSECURITY_DESCRIPTOR lpSecurityDescriptor,_In_ DWORD cbBufSize,_Out_ LPDWORD pcbBytesNeeded)
DWORD WINAPI advapi32.GetSecurityDescriptorLength(_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor)
VOID FORCEINLINE None.TpSetCallbackNoActivationContext(_Inout_ PTP_CALLBACK_ENVIRON CallbackEnviron)
BOOL None None.WPUResetEvent(_In_ WSAEVENT hEvent,_Out_ LPINT lpErrno)
BOOL WINAPI kernel32.GetProcessDefaultCpuSets(_In_ HANDLE Process,_Out_opt_ PULONG CpuSetIds,_In_ ULONG CpuSetIdCount,_Out_ PULONG RequiredIdCount)
BOOL None kernel32.EnumDateFormatsEx(_In_ DATEFMT_ENUMPROCEX lpDateFmtEnumProcEx,_In_ LCID Locale,_In_ DWORD dwFlags)
BOOL None kernel32.EnumDateFormatsExW(_In_ DATEFMT_ENUMPROCEX lpDateFmtEnumProcEx,_In_ LCID Locale,_In_ DWORD dwFlags)
BOOL None kernel32.EnumDateFormatsExA(_In_ DATEFMT_ENUMPROCEX lpDateFmtEnumProcEx,_In_ LCID Locale,_In_ DWORD dwFlags)
BOOL WINAPI advapi32.AddConditionalAce(_Inout_ PACL pAcl,_In_ DWORD dwAceRevision,_In_ DWORD AceFlags,_In_ UCHAR AceType,_In_ DWORD AccessMask,_In_ PSID pSid,_In_ PWCHAR ConditionStr,_Out_ DWORD *ReturnLength)
BOOL WINAPI authz.AuthzFreeContext(_In_ AUTHZ_CLIENT_CONTEXT_HANDLE AuthzClientContext)
HCURSOR None oleaut32.OleIconToCursor(_In_ HINSTANCE hinstExe,_In_ HICON hIcon)
DWORD_PTR WINAPI kernel32.SetThreadAffinityMask(_In_ HANDLE hThread,_In_ DWORD_PTR dwThreadAffinityMask)
BOOL WINAPI advapi32.FindFirstFreeAce(_In_ PACL pAcl,_Out_ LPVOID *pAce)
PTP_IO WINAPI kernel32.CreateThreadpoolIo(_In_ HANDLE fl,_In_ PTP_WIN32_IO_CALLBACK pfnio,_Inout_opt_ PVOID pv,_In_opt_ PTP_CALLBACK_ENVIRON pcbe)
PVOID WINAPI kernel32.FlsGetValue(_In_ DWORD dwFlsIndex)
BOOL WINAPI advapi32.CreatePrivateObjectSecurityEx(_In_opt_ PSECURITY_DESCRIPTOR ParentDescriptor,_In_opt_ PSECURITY_DESCRIPTOR CreatorDescriptor,_Out_ PSECURITY_DESCRIPTOR *NewDescriptor,_In_opt_ GUID *ObjectType,_In_ BOOL IsContainerObject,_In_ ULONG AutoInheritFlags,_In_opt_ HANDLE Token,_In_ PGENERIC_MAPPING GenericMapping)
LPVOID WINAPI kernelbase.TlsGetValue(_In_ DWORD dwTlsIndex)
BOOL WINAPI kernel32.GetUmsSystemThreadInformation(_In_ HANDLE ThreadHandle,_Inout_ PUMS_SYSTEM_THREAD_INFORMATION SystemThreadInfo)
BOOL WINAPI kernel.GetDisplayAutoRotationPreferences(_Out_ PAR_STATE pState)
BOOL WINAPI advapi32.AccessCheckAndAuditAlarm(_In_ LPCTSTR SubsystemName,_In_opt_ LPVOID HandleId,_In_ LPTSTR ObjectTypeName,_In_opt_ LPTSTR ObjectName,_In_ PSECURITY_DESCRIPTOR SecurityDescriptor,_In_ DWORD DesiredAccess,_In_ PGENERIC_MAPPING GenericMapping,_In_ BOOL ObjectCreation,_Out_ LPDWORD GrantedAccess,_Out_ LPBOOL AccessStatus,_Out_ LPBOOL pfGenerateOnClose)
BOOL WINAPI advapi32.AccessCheckAndAuditAlarmW(_In_ LPCTSTR SubsystemName,_In_opt_ LPVOID HandleId,_In_ LPTSTR ObjectTypeName,_In_opt_ LPTSTR ObjectName,_In_ PSECURITY_DESCRIPTOR SecurityDescriptor,_In_ DWORD DesiredAccess,_In_ PGENERIC_MAPPING GenericMapping,_In_ BOOL ObjectCreation,_Out_ LPDWORD GrantedAccess,_Out_ LPBOOL AccessStatus,_Out_ LPBOOL pfGenerateOnClose)
BOOL WINAPI advapi32.AccessCheckAndAuditAlarmA(_In_ LPCTSTR SubsystemName,_In_opt_ LPVOID HandleId,_In_ LPTSTR ObjectTypeName,_In_opt_ LPTSTR ObjectName,_In_ PSECURITY_DESCRIPTOR SecurityDescriptor,_In_ DWORD DesiredAccess,_In_ PGENERIC_MAPPING GenericMapping,_In_ BOOL ObjectCreation,_Out_ LPDWORD GrantedAccess,_Out_ LPBOOL AccessStatus,_Out_ LPBOOL pfGenerateOnClose)
BOOL WINAPI kernel32.GetProcessAffinityMask(_In_ HANDLE hProcess,_Out_ PDWORD_PTR lpProcessAffinityMask,_Out_ PDWORD_PTR lpSystemAffinityMask)
BOOL WINAPI avrt.AvRtWaitOnThreadOrderingGroup(_In_ HANDLE Context)
VOID CALLBACK None.WaitCallback(_Inout_ PTP_CALLBACK_INSTANCE Instance,_Inout_opt_ PVOID Context,_Inout_ PTP_WAIT Wait,_In_ TP_WAIT_RESULT WaitResult)
BOOL WINAPI kernel32.QueryProtectedPolicy(_In_ LPCGUID PolicyGuid,_Out_ PULONG_PTR PolicyValue)
BOOL WINAPI advapi32.AccessCheckByTypeResultListAndAuditAlarm(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ LPCTSTR ObjectTypeName,_In_opt_ LPCTSTR ObjectName,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_opt_ PSID PrincipalSelfSid,_In_ DWORD DesiredAccess,_In_ AUDIT_EVENT_TYPE AuditType,_In_ DWORD Flags,_Inout_opt_ POBJECT_TYPE_LIST ObjectTypeList,_In_ DWORD ObjectTypeListLength,_In_ PGENERIC_MAPPING GenericMapping,_In_ BOOL ObjectCreation,_Out_ LPDWORD GrantedAccess,_Out_ LPDWORD AccessStatusList,_Out_ LPBOOL pfGenerateOnClose)
BOOL WINAPI advapi32.AccessCheckByTypeResultListAndAuditAlarmW(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ LPCTSTR ObjectTypeName,_In_opt_ LPCTSTR ObjectName,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_opt_ PSID PrincipalSelfSid,_In_ DWORD DesiredAccess,_In_ AUDIT_EVENT_TYPE AuditType,_In_ DWORD Flags,_Inout_opt_ POBJECT_TYPE_LIST ObjectTypeList,_In_ DWORD ObjectTypeListLength,_In_ PGENERIC_MAPPING GenericMapping,_In_ BOOL ObjectCreation,_Out_ LPDWORD GrantedAccess,_Out_ LPDWORD AccessStatusList,_Out_ LPBOOL pfGenerateOnClose)
BOOL WINAPI advapi32.AccessCheckByTypeResultListAndAuditAlarmA(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ LPCTSTR ObjectTypeName,_In_opt_ LPCTSTR ObjectName,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_opt_ PSID PrincipalSelfSid,_In_ DWORD DesiredAccess,_In_ AUDIT_EVENT_TYPE AuditType,_In_ DWORD Flags,_Inout_opt_ POBJECT_TYPE_LIST ObjectTypeList,_In_ DWORD ObjectTypeListLength,_In_ PGENERIC_MAPPING GenericMapping,_In_ BOOL ObjectCreation,_Out_ LPDWORD GrantedAccess,_Out_ LPDWORD AccessStatusList,_Out_ LPBOOL pfGenerateOnClose)
VOID None None.UmsSchedulerProc(_In_ UMS_SCHEDULER_REASON Reason,_In_ ULONG_PTR ActivationPayload,_In_ PVOID SchedulerParam)
DWORD WINAPI advapi32.GetSecurityDescriptorRMControl(_In_ PSECURITY_DESCRIPTOR SecurityDescriptor,_Out_ PUCHAR RMControl)
BOOLEAN WINAPI advapi32.AuditEnumeratePerUserPolicy(_Out_ PPOLICY_AUDIT_SID_ARRAY *ppAuditSidArray)
BOOL WINAPI advapi32.AddAccessAllowedAce(_Inout_ PACL pAcl,_In_ DWORD dwAceRevision,_In_ DWORD AccessMask,_In_ PSID pSid)
VOID WINAPI kernel32.SetEventWhenCallbackReturns(_Inout_ PTP_CALLBACK_INSTANCE pci,_In_ HANDLE evt)
BOOL WINAPI authz.AuthzCachedAccessCheck(_In_ DWORD Flags,_In_ AUTHZ_ACCESS_CHECK_RESULTS_HANDLE AuthzHandle,_In_ PAUTHZ_ACCESS_REQUEST pRequest,_In_ AUTHZ_AUDIT_EVENT_HANDLE AuditInfo,_Out_ PAUTHZ_ACCESS_REPLY pReply)
BOOL WINAPI advapi32.AccessCheck(_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_ HANDLE ClientToken,_In_ DWORD DesiredAccess,_In_ PGENERIC_MAPPING GenericMapping,_Out_opt_ PPRIVILEGE_SET PrivilegeSet,_Inout_ LPDWORD PrivilegeSetLength,_Out_ LPDWORD GrantedAccess,_Out_ LPBOOL AccessStatus)
DWORD None iphlpapi.GetIpForwardTable(_Out_ PMIB_IPFORWARDTABLE pIpForwardTable,_Inout_ PULONG pdwSize,_In_ BOOL bOrder)
BOOL WINAPI authz.AuthzEnumerateSecurityEventSources(_In_ DWORD dwFlags,_Out_ PAUTHZ_SOURCE_SCHEMA_REGISTRATION Buffer,_Out_ PDWORD pdwCount,_Inout_ PDWORD pdwLength)
HRESULT None ole32.CoTreatAsClass(_In_ REFCLSID clsidOld,_In_ REFCLSID clsidNew)
BOOL WINAPI kernel32.SetProcessMitigationPolicy(_In_ PROCESS_MITIGATION_POLICY MitigationPolicy,_In_ PVOID lpBuffer,_In_ SIZE_T dwLength)
BOOL WINAPI authz.AuthzInitializeResourceManager(_In_ DWORD flags,_In_opt_ PFN_AUTHZ_DYNAMIC_ACCESS_CHECK pfnAccessCheck,_In_opt_ PFN_AUTHZ_COMPUTE_DYNAMIC_GROUPS pfnComputeDynamicGroups,_In_opt_ PFN_AUTHZ_FREE_DYNAMIC_GROUPS pfnFreeDynamicGroups,_In_ PCWSTR szResourceManagerName,_Out_ PAUTHZ_RESOURCE_MANAGER_HANDLE phAuthzResourceManager)
DWORD WINAPI advapi32.SetSecurityDescriptorRMControl(_Inout_ PSECURITY_DESCRIPTOR SecurityDescriptor,_In_opt_ PUCHAR RMControl)
BOOL WINAPI authz.AuthzFreeAuditEvent(_In_ AUTHZ_AUDIT_EVENT_HANDLE pAuditEventInfo)
BOOL WINAPI avrt.AvRevertMmThreadCharacteristics(_In_ HANDLE AvrtHandle)
DWORD WINAPI None.ThreadProc(_In_ LPVOID lpParameter)
BOOL WINAPI advapi32.MakeAbsoluteSD(_In_ PSECURITY_DESCRIPTOR pSelfRelativeSD,_Out_opt_ PSECURITY_DESCRIPTOR pAbsoluteSD,_Inout_ LPDWORD lpdwAbsoluteSDSize,_Out_opt_ PACL pDacl,_Inout_ LPDWORD lpdwDaclSize,_Out_opt_ PACL pSacl,_Inout_ LPDWORD lpdwSaclSize,_Out_opt_ PSID pOwner,_Inout_ LPDWORD lpdwOwnerSize,_Out_opt_ PSID pPrimaryGroup,_Inout_ LPDWORD lpdwPrimaryGroupSize)
BOOL WINAPI kernel32.GetProcessIoCounters(_In_ HANDLE hProcess,_Out_ PIO_COUNTERS lpIoCounters)
BOOL WINAPI kernel32.GetProcessWorkingSetSize(_In_ HANDLE hProcess,_Out_ PSIZE_T lpMinimumWorkingSetSize,_Out_ PSIZE_T lpMaximumWorkingSetSize)
BOOL WINAPI advapi32.ConvertStringSecurityDescriptorToSecurityDescriptor(_In_ LPCTSTR StringSecurityDescriptor,_In_ DWORD StringSDRevision,_Out_ PSECURITY_DESCRIPTOR *SecurityDescriptor,_Out_ PULONG SecurityDescriptorSize)
BOOL WINAPI advapi32.ConvertStringSecurityDescriptorToSecurityDescriptorW(_In_ LPCTSTR StringSecurityDescriptor,_In_ DWORD StringSDRevision,_Out_ PSECURITY_DESCRIPTOR *SecurityDescriptor,_Out_ PULONG SecurityDescriptorSize)
BOOL WINAPI advapi32.ConvertStringSecurityDescriptorToSecurityDescriptorA(_In_ LPCTSTR StringSecurityDescriptor,_In_ DWORD StringSDRevision,_Out_ PSECURITY_DESCRIPTOR *SecurityDescriptor,_Out_ PULONG SecurityDescriptorSize)
BOOL WINAPI kernel32.TerminateJobObject(_In_ HANDLE hJob,_In_ UINT uExitCode)
BOOL WINAPI advapi32.IsValidSid(_In_ PSID pSid)
VOID None None.SetThreadpoolCallbackCleanupGroup(_Inout_ PTP_CALLBACK_ENVIRON pcbe,_In_ PTP_CLEANUP_GROUP ptpcg,_In_opt_ PTP_CLEANUP_GROUP_CANCEL_CALLBACK pfng)
BOOL WINAPI advapi32.ObjectCloseAuditAlarm(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ BOOL GenerateOnClose)
BOOL WINAPI advapi32.ObjectCloseAuditAlarmW(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ BOOL GenerateOnClose)
BOOL WINAPI advapi32.ObjectCloseAuditAlarmA(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ BOOL GenerateOnClose)
BOOL WINAPI authz.AuthzInitializeObjectAccessAuditEvent(_In_ DWORD Flags,_In_ AUTHZ_AUDIT_EVENT_TYPE_HANDLE hAuditEventType,_In_ PWSTR szOperationType,_In_ PWSTR szObjectType,_In_ PWSTR szObjectName,_In_ PWSTR szAdditionalInfo,_Out_ PAUTHZ_AUDIT_EVENT_HANDLE phAuditEvent,_In_ DWORD dwAdditionalParamCount)
BOOL WINAPI avrt.AvRtJoinThreadOrderingGroup(_Out_ PHANDLE Context,_In_ GUID *ThreadOrderingGuid,_In_ BOOL Before)
BOOL WINAPI advapi32.ObjectDeleteAuditAlarm(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ BOOL GenerateOnClose)
BOOL WINAPI advapi32.ObjectDeleteAuditAlarmW(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ BOOL GenerateOnClose)
BOOL WINAPI advapi32.ObjectDeleteAuditAlarmA(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ BOOL GenerateOnClose)
PTP_TIMER WINAPI kernel32.CreateThreadpoolTimer(_In_ PTP_TIMER_CALLBACK pfnti,_Inout_opt_ PVOID pv,_In_opt_ PTP_CALLBACK_ENVIRON pcbe)
DWORD WINAPI user32.WaitForInputIdle(_In_ HANDLE hProcess,_In_ DWORD dwMilliseconds)
BOOL WINAPI authz.AuthzInitializeResourceManagerEx(_In_opt_ DWORD Flags,_In_opt_ PVOID pAuthzInitInfo,_Out_ PAUTHZ_RESOURCE_MANAGER_HANDLE phAuthzResourceManager)
VOID WINAPI kernel32.LeaveCriticalSectionWhenCallbackReturns(_Inout_ PTP_CALLBACK_INSTANCE pci,_Inout_ PCRITICAL_SECTION pcs)
BOOL WINAPI kernel32.CreateProcess(_In_opt_ LPCTSTR lpApplicationName,_Inout_opt_ LPTSTR lpCommandLine,_In_opt_ LPSECURITY_ATTRIBUTES lpProcessAttributes,_In_opt_ LPSECURITY_ATTRIBUTES lpThreadAttributes,_In_ BOOL bInheritHandles,_In_ DWORD dwCreationFlags,_In_opt_ LPVOID lpEnvironment,_In_opt_ LPCTSTR lpCurrentDirectory,_In_ LPSTARTUPINFO lpStartupInfo,_Out_ LPPROCESS_INFORMATION lpProcessInformation)
BOOL WINAPI kernel32.CreateProcessW(_In_opt_ LPCTSTR lpApplicationName,_Inout_opt_ LPTSTR lpCommandLine,_In_opt_ LPSECURITY_ATTRIBUTES lpProcessAttributes,_In_opt_ LPSECURITY_ATTRIBUTES lpThreadAttributes,_In_ BOOL bInheritHandles,_In_ DWORD dwCreationFlags,_In_opt_ LPVOID lpEnvironment,_In_opt_ LPCTSTR lpCurrentDirectory,_In_ LPSTARTUPINFO lpStartupInfo,_Out_ LPPROCESS_INFORMATION lpProcessInformation)
BOOL WINAPI kernel32.CreateProcessA(_In_opt_ LPCTSTR lpApplicationName,_Inout_opt_ LPTSTR lpCommandLine,_In_opt_ LPSECURITY_ATTRIBUTES lpProcessAttributes,_In_opt_ LPSECURITY_ATTRIBUTES lpThreadAttributes,_In_ BOOL bInheritHandles,_In_ DWORD dwCreationFlags,_In_opt_ LPVOID lpEnvironment,_In_opt_ LPCTSTR lpCurrentDirectory,_In_ LPSTARTUPINFO lpStartupInfo,_Out_ LPPROCESS_INFORMATION lpProcessInformation)
HANDLE WINAPI kernel32.CreateRemoteThread(_In_ HANDLE hProcess,_In_ LPSECURITY_ATTRIBUTES lpThreadAttributes,_In_ SIZE_T dwStackSize,_In_ LPTHREAD_START_ROUTINE lpStartAddress,_In_ LPVOID lpParameter,_In_ DWORD dwCreationFlags,_Out_ LPDWORD lpThreadId)
VOID WINAPI kernel32.CloseThreadpoolIo(_Inout_ PTP_IO pio)
BOOL WINAPI advapi32.ConvertSecurityDescriptorToStringSecurityDescriptor(_In_ PSECURITY_DESCRIPTOR SecurityDescriptor,_In_ DWORD RequestedStringSDRevision,_In_ SECURITY_INFORMATION SecurityInformation,_Out_ LPTSTR *StringSecurityDescriptor,_Out_ PULONG StringSecurityDescriptorLen)
BOOL WINAPI advapi32.ConvertSecurityDescriptorToStringSecurityDescriptorW(_In_ PSECURITY_DESCRIPTOR SecurityDescriptor,_In_ DWORD RequestedStringSDRevision,_In_ SECURITY_INFORMATION SecurityInformation,_Out_ LPTSTR *StringSecurityDescriptor,_Out_ PULONG StringSecurityDescriptorLen)
BOOL WINAPI advapi32.ConvertSecurityDescriptorToStringSecurityDescriptorA(_In_ PSECURITY_DESCRIPTOR SecurityDescriptor,_In_ DWORD RequestedStringSDRevision,_In_ SECURITY_INFORMATION SecurityInformation,_Out_ LPTSTR *StringSecurityDescriptor,_Out_ PULONG StringSecurityDescriptorLen)
BOOL None kernel32.GetThreadIdealProcessorEx(_In_ HANDLE hThread,_Out_ PPROCESSOR_NUMBER lpIdealProcessor)
BOOL WINAPI kernel.SetDisplayAutoRotationPreferences(_In_ ORIENTATION_PREFERENCE *pOrientation)
BOOL None kernel32.GetNumaAvailableMemoryNodeEx(_In_ USHORT Node,_Out_ PULONGLONG AvailableBytes)
BOOL WINAPI advapi32.LookupPrivilegeDisplayName(_In_opt_ LPCTSTR lpSystemName,_In_ LPCTSTR lpName,_Out_opt_ LPTSTR lpDisplayName,_Inout_ LPDWORD cchDisplayName,_Out_ LPDWORD lpLanguageId)
BOOL WINAPI advapi32.LookupPrivilegeDisplayNameW(_In_opt_ LPCTSTR lpSystemName,_In_ LPCTSTR lpName,_Out_opt_ LPTSTR lpDisplayName,_Inout_ LPDWORD cchDisplayName,_Out_ LPDWORD lpLanguageId)
BOOL WINAPI advapi32.LookupPrivilegeDisplayNameA(_In_opt_ LPCTSTR lpSystemName,_In_ LPCTSTR lpName,_Out_opt_ LPTSTR lpDisplayName,_Inout_ LPDWORD cchDisplayName,_Out_ LPDWORD lpLanguageId)
BOOL WINAPI kernelbase.TlsFree(_In_ DWORD dwTlsIndex)
HRESULT None ole32.CreateObjrefMoniker(_In_opt_ LPUNKNOWN punk,_Out_ LPMONIKER *ppmk)
BOOL None None.WSPGetQOSByName(_In_ SOCKET s,_Inout_ LPWSABUF lpQOSName,_Out_ LPQOS lpQOS,_Out_ LPINT lpErrno)
BOOL WINAPI authz.AuthzModifySids(_In_ AUTHZ_CLIENT_CONTEXT_HANDLE hAuthzClientContext,_In_ AUTHZ_CONTEXT_INFORMATION_CLASS SidClass,_In_ PAUTHZ_SID_OPERATION pSidOperations,_In_opt_ PTOKEN_GROUPS pSids)
BOOL WINAPI kernel32.FreeEnvironmentStrings(_In_ LPTCH lpszEnvironmentBlock)
BOOL WINAPI kernel32.FreeEnvironmentStringsW(_In_ LPTCH lpszEnvironmentBlock)
BOOL WINAPI kernel32.FreeEnvironmentStringsA(_In_ LPTCH lpszEnvironmentBlock)
NTSTATUS WINAPI ntdll.NtQueryInformationProcess(_In_ HANDLE ProcessHandle,_In_ PROCESSINFOCLASS ProcessInformationClass,_Out_ PVOID ProcessInformation,_In_ ULONG ProcessInformationLength,_Out_opt_ PULONG ReturnLength)
PUMS_CONTEXT WINAPI kernel32.GetNextUmsListItem(_Inout_ PUMS_CONTEXT UmsContext)
HANDLE WINAPI avrt.AvSetMmMaxThreadCharacteristics(_In_ LPCTSTR FirstTask,_In_ LPCTSTR SecondTask,_Inout_ LPDWORD TaskIndex)
HANDLE WINAPI avrt.AvSetMmMaxThreadCharacteristicsW(_In_ LPCTSTR FirstTask,_In_ LPCTSTR SecondTask,_Inout_ LPDWORD TaskIndex)
HANDLE WINAPI avrt.AvSetMmMaxThreadCharacteristicsA(_In_ LPCTSTR FirstTask,_In_ LPCTSTR SecondTask,_Inout_ LPDWORD TaskIndex)
BOOL WINAPI kernel32.SetThreadPriorityBoost(_In_ HANDLE hThread,_In_ BOOL DisablePriorityBoost)
VOID WINAPI kernel32.DisassociateCurrentThreadFromCallback(_Inout_ PTP_CALLBACK_INSTANCE pci)
BOOL WINAPI kernel.GetDisplayAutoRotationPreferencesByProcessId(_In_ DWORD *dwProcessId,_Out_ ORIENTATION_PREFERENCE *pOrientation,_Out_ BOOL *fRotateScreen)
BOOL WINAPI advapi32.AccessCheckByType(_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_opt_ PSID PrincipalSelfSid,_In_ HANDLE ClientToken,_In_ DWORD DesiredAccess,_Inout_opt_ POBJECT_TYPE_LIST ObjectTypeList,_In_ DWORD ObjectTypeListLength,_In_ PGENERIC_MAPPING GenericMapping,_Out_opt_ PPRIVILEGE_SET PrivilegeSet,_Inout_ LPDWORD PrivilegeSetLength,_Out_ LPDWORD GrantedAccess,_Out_ LPBOOL AccessStatus)
BOOL WINAPI authz.AuthzSetAppContainerInformation(_In_ AUTHZ_CLIENT_CONTEXT_HANDLE hAuthzClientContext,_In_ PSID pAppContainerSid,_In_ DWORD CapabilityCount,_In_opt_ PSID_AND_ATTRIBUTES pCapabilitySids[CapabilityCount])
VOID WINAPI kernel32.ExitThread(_In_ DWORD dwExitCode)
BOOL WINAPI advapi32.IsWellKnownSid(_In_ PSID pSid,_In_ WELL_KNOWN_SID_TYPE WellKnownSidType)
BOOL WINAPI advapi32.CreateWellKnownSid(_In_ WELL_KNOWN_SID_TYPE WellKnownSidType,_In_opt_ PSID DomainSid,_Out_opt_ PSID pSid,_Inout_ DWORD *cbSid)
HRESULT None ole32.CoRegisterClassObject(_In_ REFCLSID rclsid,_In_ LPUNKNOWN pUnk,_In_ DWORD dwClsContext,_In_ DWORD flags,_Out_ LPDWORD lpdwRegister)
LCID None kernel32.ConvertDefaultLocale(_In_ LCID Locale)
BOOL None kernel32.GetLogicalProcessorInformationEx(_In_ LOGICAL_PROCESSOR_RELATIONSHIP RelationshipType,_Out_opt_ PSYSTEM_LOGICAL_PROCESSOR_INFORMATION_EX Buffer,_Inout_ PDWORD ReturnedLength)
BOOL WINAPI advapi32.ImpersonateAnonymousToken(_In_ HANDLE ThreadHandle)
DWORD WINAPI kernel32.SetIoRateControlInformationJobObject(_In_ HANDLE hJob,_In_ JOBOBJECT_IO_RATE_CONTROL_INFORMATION *IoRateControlInfo)
BOOLEAN WINAPI advapi32.AuditEnumerateCategories(_Out_ GUID **ppAuditCategoriesArray,_Out_ PULONG pCountReturned)
BOOL CALLBACK None.EnumDateFormatsProc(_In_ LPTSTR lpDateFormatString)
BOOL WINAPI authz.AuthzUnregisterCapChangeNotification(_In_ AUTHZ_CAP_CHANGE_SUBSCRIPTION_HANDLE hCapChangeSubscription)
PCTSTR WSAAPI ws2_32.InetNtop(_In_ INT Family,_In_ PVOID pAddr,_Out_ PTSTR pStringBuf,_In_ size_t StringBufSize)
PCTSTR WSAAPI ws2_32.InetNtopW(_In_ INT Family,_In_ PVOID pAddr,_Out_ PTSTR pStringBuf,_In_ size_t StringBufSize)
PCTSTR WSAAPI ws2_32.InetNtopA or inet_ntop(_In_ INT Family,_In_ PVOID pAddr,_Out_ PTSTR pStringBuf,_In_ size_t StringBufSize)
BOOL WINAPI advapi32.GetSecurityDescriptorDacl(_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_Out_ LPBOOL lpbDaclPresent,_Out_ PACL *pDacl,_Out_ LPBOOL lpbDaclDefaulted)
BOOL WINAPI advapi32.InitializeSecurityDescriptor(_Out_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_ DWORD dwRevision)
NETIOAPI_API None iphlpapi.GetTeredoPort(_Out_ USHORT *Port)
HRESULT None ole32.StringFromIID(_In_ REFIID rclsid,_Out_ LPOLESTR *lplpsz)
BOOL WINAPI advapi32.SetSecurityDescriptorControl(_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_ SECURITY_DESCRIPTOR_CONTROL ControlBitsOfInterest,_In_ SECURITY_DESCRIPTOR_CONTROL ControlBitsToSet)
HINSTANCE None ole32.CoLoadLibrary(_In_ LPOLESTR lpszLibName,_In_ BOOL bAutoFree)
BOOL WINAPI advapi32.GetFileSecurity(_In_ LPCTSTR lpFileName,_In_ SECURITY_INFORMATION RequestedInformation,_Out_opt_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_ DWORD nLength,_Out_ LPDWORD lpnLengthNeeded)
BOOL WINAPI advapi32.GetFileSecurityW(_In_ LPCTSTR lpFileName,_In_ SECURITY_INFORMATION RequestedInformation,_Out_opt_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_ DWORD nLength,_Out_ LPDWORD lpnLengthNeeded)
BOOL WINAPI advapi32.GetFileSecurityA(_In_ LPCTSTR lpFileName,_In_ SECURITY_INFORMATION RequestedInformation,_Out_opt_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_ DWORD nLength,_Out_ LPDWORD lpnLengthNeeded)
VOID WINAPI kernel32.SetThreadpoolThreadMaximum(_Inout_ PTP_POOL ptpp,_In_ DWORD cthrdMost)
VOID CALLBACK None.WorkCallback(_Inout_ PTP_CALLBACK_INSTANCE Instance,_Inout_opt_ PVOID Context,_Inout_ PTP_WORK Work)
BOOL WINAPI kernel32.SetProcessWorkingSetSize(_In_ HANDLE hProcess,_In_ SIZE_T dwMinimumWorkingSetSize,_In_ SIZE_T dwMaximumWorkingSetSize)
BOOL CALLBACK None.EnumLocalesProc(_In_ LPTSTR lpLocaleString)
HGLOBAL None ole32.OleGetIconOfFile(_In_ LPOLESTR lpszPath,_In_ BOOL fUseFileAsLabel)
BOOL WINAPI kernel32.QueryUmsThreadInformation(_In_ PUMS_CONTEXT UmsThread,_In_ UMS_THREAD_INFO_CLASS UmsThreadInfoClass,_Out_ PVOID UmsThreadInformation,_In_ ULONG UmsThreadInformationLength,_Out_opt_ PULONG ReturnLength)
DWORD WINAPI advapi32.GetLengthSid(_In_ PSID pSid)
DWORD WINAPI kernel32.GetProcessIdOfThread(_In_ HANDLE Thread)
HRESULT None ole32.CLSIDFromString(_In_ LPCOLESTR lpsz,_Out_ LPCLSID pclsid)
DWORD WINAPI advapi32.SetNamedSecurityInfo(_In_ LPTSTR pObjectName,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_In_opt_ PSID psidOwner,_In_opt_ PSID psidGroup,_In_opt_ PACL pDacl,_In_opt_ PACL pSacl)
DWORD WINAPI advapi32.SetNamedSecurityInfoW(_In_ LPTSTR pObjectName,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_In_opt_ PSID psidOwner,_In_opt_ PSID psidGroup,_In_opt_ PACL pDacl,_In_opt_ PACL pSacl)
DWORD WINAPI advapi32.SetNamedSecurityInfoA(_In_ LPTSTR pObjectName,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_In_opt_ PSID psidOwner,_In_opt_ PSID psidGroup,_In_opt_ PACL pDacl,_In_opt_ PACL pSacl)
VOID WINAPI None.FlsCallback(_In_ PVOID lpFlsData)
HRESULT None ole32.CoDisableCallCancellation(_In_opt_ LPVOID pReserved)
BOOL APIENTRY kernel32.CheckTokenMembershipEx(_In_opt_ HANDLE TokenHandle,_In_ PSID SidToCheck,_In_ DWORD Flags,_Out_ PBOOL IsMember)
BOOL CALLBACK None.EnumLanguageGroupLocalesProc(_In_ LGRPID LanguageGroup,_In_ LCID Locale,_In_ LPTSTR lpLocaleString,_In_ LONG_PTR lParam)
HRESULT None ole32.CoGetCallerTID(_Out_ LPDWORD lpdwTID)
BOOL None kernel32.GetNumaProximityNodeEx(_In_ ULONG ProximityId,_Out_ PUSHORT NodeNumber)
BOOL WINAPI advapi32.GetAce(_In_ PACL pAcl,_In_ DWORD dwAceIndex,_Out_ LPVOID *pAce)
BOOL WINAPI authz.AuthzFreeHandle(_In_ AUTHZ_ACCESS_CHECK_RESULTS_HANDLE AuthzHandle)
BOOL WINAPI authz.AuthzInitializeContextFromToken(_In_ DWORD Flags,_In_ HANDLE TokenHandle,_In_ AUTHZ_RESOURCE_MANAGER_HANDLE hAuthzResourceManager,_In_opt_ PLARGE_INTEGER pExpirationTime,_In_ LUID Identifier,_In_opt_ PVOID DynamicGroupArgs,_Out_ PAUTHZ_CLIENT_CONTEXT_HANDLE phAuthzClientContext)
PDWORD WINAPI advapi32.GetSidSubAuthority(_In_ PSID pSid,_In_ DWORD nSubAuthority)
BOOL WINAPI authz.AuthzInitializeContextFromAuthzContext(_In_ DWORD flags,_In_ AUTHZ_CLIENT_CONTEXT_HANDLE hAuthzClientContext,_In_opt_ PLARGE_INTEGER pExpirationTime,_In_ LUID Identifier,_In_ PVOID DynamicGroupArgs,_Out_ PAUTHZ_CLIENT_CONTEXT_HANDLE phNewAuthzClientContext)
BOOL WINAPI kernel32.SetUserGeoName(_In_ PWSTR geoName)
BOOL None kernel32.AdjustCalendarDate(_Inout_ LPCALDATETIME lpCalDateTime,_In_ CALDATETIME_DATEUNIT calUnit,_Out_ INT amount)
BOOL WINAPI authz.AuthzUnregisterSecurityEventSource(_In_ DWORD dwFlags,_Inout_ PAUTHZ_SECURITY_EVENT_PROVIDER_HANDLE phEventProvider)
BOOL None kernel32.IsValidLocaleName(_In_ LPCWSTR lpLocaleName)
BOOL WINAPI advapi32.CreateProcessWithLogonW(_In_ LPCWSTR lpUsername,_In_opt_ LPCWSTR lpDomain,_In_ LPCWSTR lpPassword,_In_ DWORD dwLogonFlags,_In_opt_ LPCWSTR lpApplicationName,_Inout_opt_ LPWSTR lpCommandLine,_In_ DWORD dwCreationFlags,_In_opt_ LPVOID lpEnvironment,_In_opt_ LPCWSTR lpCurrentDirectory,_In_ LPSTARTUPINFOW lpStartupInfo,_Out_ LPPROCESS_INFORMATION lpProcessInfo)
DWORD WINAPI kernel32.GetThreadId(_In_ HANDLE Thread)
u_short WSAAPI ws2_32.htons(_In_ u_short hostshort)
UINT WINAPI kernel32.GetWriteWatch(_In_ DWORD dwFlags,_In_ PVOID lpBaseAddress,_In_ SIZE_T dwRegionSize,_Out_ PVOID *lpAddresses,_Inout_ PULONG_PTR lpdwCount,_Out_ PULONG lpdwGranularity)
BOOL WINAPI kernel32.GetProcessShutdownParameters(_Out_ LPDWORD lpdwLevel,_Out_ LPDWORD lpdwFlags)
VOID CALLBACK None.FiberProc(_In_ PVOID lpParameter)
BOOL None kernel32.SetUserGeoID(_In_ GEOID GeoId)
VOID WINAPI kernel32.CloseThreadpoolWait(_Inout_ PTP_WAIT pwa)
BOOL WINAPI kernel32.FreeLibrary(_In_ HMODULE hModule)
DWORD None iphlpapi.DeleteProxyArpEntry(_In_ DWORD dwAddress,_In_ DWORD dwMask,_In_ DWORD dwIfIndex)
VOID WINAPI kernel32.WaitForThreadpoolWorkCallbacks(_Inout_ PTP_WORK pwk,_In_ BOOL fCancelPendingCallbacks)
BOOL WINAPI advapi32.InitializeSid(_Out_ PSID Sid,_In_ PSID_IDENTIFIER_AUTHORITY pIdentifierAuthority,_In_ BYTE nSubAuthorityCount)
BOOL WINAPI authz.AuthzInitializeCompoundContext(_In_ AUTHZ_CLIENT_CONTEXT_HANDLE UserContext,_In_ AUTHZ_CLIENT_CONTEXT_HANDLE DeviceContext,_Out_ PAUTHZ_CLIENT_CONTEXT_HANDLE phCompoundContext)
BOOL WINAPI advapi32.IsValidAcl(_In_ PACL pAcl)
BOOL CALLBACK None.EnumCalendarInfoProcExEx(_In_ LPWSTR lpCalendarInfoString,_In_ CALID Calendar,_In_ LPWSTR lpReserved,_In_ LPARAM lParam)
BOOLEAN WINAPI advapi32.AuditSetGlobalSacl(_In_ PCWSTR ObjectTypeName,_In_opt_ PACL Acl)
BOOLEAN WINAPI advapi32.AuditSetGlobalSaclW(_In_ PCWSTR ObjectTypeName,_In_opt_ PACL Acl)
BOOLEAN WINAPI advapi32.AuditSetGlobalSaclA(_In_ PCWSTR ObjectTypeName,_In_opt_ PACL Acl)
BOOL WINAPI avrt.AvRtDeleteThreadOrderingGroup(_In_ HANDLE Context)
BOOL CALLBACK None.AuthzAccessCheckCallback(_In_ AUTHZ_CLIENT_CONTEXT_HANDLE hAuthzClientContext,_In_ PACE_HEADER pAce,_In_opt_ PVOID pArgs,_Inout_ PBOOL pbAceApplicable)
BOOL WINAPI user32.AdjustWindowRect(_Inout_ LPRECT lpRect,_In_ DWORD dwStyle,_In_ BOOL bMenu)
BOOLEAN WINAPI advapi32.AuditQueryGlobalSacl(_In_ PCWSTR ObjectTypeName,_Out_ PACL *Acl)
BOOLEAN WINAPI advapi32.AuditQueryGlobalSaclW(_In_ PCWSTR ObjectTypeName,_Out_ PACL *Acl)
BOOLEAN WINAPI advapi32.AuditQueryGlobalSaclA(_In_ PCWSTR ObjectTypeName,_Out_ PACL *Acl)
BOOL WINAPI avrt.AvSetMmThreadPriority(_In_ HANDLE AvrtHandle,_In_ AVRT_PRIORITY Priority)
BOOL WINAPI advapi32.AddMandatoryAce(_Inout_ PACL pAcl,_In_ DWORD dwAceRevision,_In_ DWORD AceFlags,_In_ DWORD MandatoryPolicy,_In_ PSID pLabelSid)
HRESULT None ole32.CoQueryAuthenticationServices(_Out_ DWORD *pcAuthSvc,_Out_ SOLE_AUTHENTICATION_SERVICE **asAuthSvc)
VOID None None.SetThreadpoolCallbackPriority(_Inout_ PTP_CALLBACK_ENVIRON pcbe,_In_ TP_CALLBACK_PRIORITY Priority)
BOOL WINAPI advapi32.EqualDomainSid(_In_ PSID pSid1,_In_ PSID pSid2,_Out_ BOOL *pfEqual)
BOOL WINAPI kernel32.EnumSystemGeoNames(_In_ GEOCLASS geoClass,_In_ GEO_ENUMNAMEPROC geoEnumProc,_In_opt_ LPARAM data)
BOOL None kernel32.SetThreadLocale(_In_ LCID Locale)
VOID FORCEINLINE None.TpSetCallbackFinalizationCallback(_Inout_ PTP_CALLBACK_ENVIRON CallbackEnviron,_In_ PTP_SIMPLE_CALLBACK FinalizationCallback)
BOOL WINAPI kernel32.NeedCurrentDirectoryForExePath(_In_ LPCTSTR ExeName)
BOOL WINAPI kernel32.NeedCurrentDirectoryForExePathW(_In_ LPCTSTR ExeName)
BOOL WINAPI kernel32.NeedCurrentDirectoryForExePathA(_In_ LPCTSTR ExeName)
VOID FORCEINLINE None.TpSetCallbackPriority(_Inout_ PTP_CALLBACK_ENVIRON CallbackEnviron,_In_ TP_CALLBACK_PRIORITY Priority)
HRESULT WINAPI kernel32.GetThreadDescription(_In_ HANDLE hThread,_Out_ PWSTR *threadDescription)
DWORD None iphlpapi.DeleteIpForwardEntry(_In_ PMIB_IPFORWARDROW pRoute)
INT WSPAPI ws2_32.WSCEnumNameSpaceProvidersEx32(_Inout_ LPDWORD lpdwBufferLength,_Out_ LPWSANAMESPACE_INFOEXW lpnspBuffer)
BOOL WINAPI authz.AuthzReportSecurityEvent(_In_ DWORD dwFlags,_Inout_ AUTHZ_SECURITY_EVENT_PROVIDER_HANDLE hEventProvider,_In_ DWORD dwAuditId,_In_opt_ PSID pUserSid,_In_ DWORD dwCount,_In_ ... None)
BOOL None kernel32.EnumCalendarInfo(_In_ CALINFO_ENUMPROC pCalInfoEnumProc,_In_ LCID Locale,_In_ CALID Calendar,_In_ CALTYPE CalType)
BOOL None kernel32.EnumCalendarInfoW(_In_ CALINFO_ENUMPROC pCalInfoEnumProc,_In_ LCID Locale,_In_ CALID Calendar,_In_ CALTYPE CalType)
BOOL None kernel32.EnumCalendarInfoA(_In_ CALINFO_ENUMPROC pCalInfoEnumProc,_In_ LCID Locale,_In_ CALID Calendar,_In_ CALTYPE CalType)
BOOL None kernel32.GetThreadInformation(_In_ HANDLE hThread,_In_ THREAD_INFORMATION_CLASS ThreadInformationClass,_Out_writes_bytes_ ThreadInformation None,_In_ DWORD ThreadInformationSize)
BOOL CALLBACK None.EnumTimeFormatsProc(_In_ LPTSTR lpTimeFormatString)
BOOL WINAPI kernel32.QueryFullProcessImageName(_In_ HANDLE hProcess,_In_ DWORD dwFlags,_Out_ LPTSTR lpExeName,_Inout_ PDWORD lpdwSize)
BOOL WINAPI kernel32.QueryFullProcessImageNameW(_In_ HANDLE hProcess,_In_ DWORD dwFlags,_Out_ LPTSTR lpExeName,_Inout_ PDWORD lpdwSize)
BOOL WINAPI kernel32.QueryFullProcessImageNameA(_In_ HANDLE hProcess,_In_ DWORD dwFlags,_Out_ LPTSTR lpExeName,_Inout_ PDWORD lpdwSize)
BOOL WINAPI advapi32.SetSecurityDescriptorOwner(_Inout_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_opt_ PSID pOwner,_In_ BOOL bOwnerDefaulted)
BOOL WINAPI authz.AuthzInitializeContextFromSid(_In_ DWORD Flags,_In_ PSID UserSid,_In_opt_ AUTHZ_RESOURCE_MANAGER_HANDLE hAuthzResourceManager,_In_ PLARGE_INTEGER pExpirationTime,_In_ LUID Identifier,_In_opt_ PVOID DynamicGroupArgs,_Out_ PAUTHZ_CLIENT_CONTEXT_HANDLE pAuthzClientContext)
BOOL WINAPI user32.SetProcessRestrictionExemption(BOOL fEnableExemption None)
BOOL WINAPI advapi32.SetServiceObjectSecurity(_In_ SC_HANDLE hService,_In_ SECURITY_INFORMATION dwSecurityInformation,_In_ PSECURITY_DESCRIPTOR lpSecurityDescriptor)
BOOL WINAPI kernel32.GetProcessTimes(_In_ HANDLE hProcess,_Out_ LPFILETIME lpCreationTime,_Out_ LPFILETIME lpExitTime,_Out_ LPFILETIME lpKernelTime,_Out_ LPFILETIME lpUserTime)
BOOL WINAPI advapi32.GetSecurityDescriptorControl(_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_Out_ PSECURITY_DESCRIPTOR_CONTROL pControl,_Out_ LPDWORD lpdwRevision)
BOOL WINAPI advapi32.AddAce(_Inout_ PACL pAcl,_In_ DWORD dwAceRevision,_In_ DWORD dwStartingAceIndex,_In_ LPVOID pAceList,_In_ DWORD nAceListLength)
BOOL WINAPI advapi32.MakeSelfRelativeSD(_In_ PSECURITY_DESCRIPTOR pAbsoluteSD,_Out_opt_ PSECURITY_DESCRIPTOR pSelfRelativeSD,_Inout_ LPDWORD lpdwBufferLength)
BOOL WINAPI advapi32.GetAclInformation(_In_ PACL pAcl,_Out_ LPVOID pAclInformation,_In_ DWORD nAclInformationLength,_In_ ACL_INFORMATION_CLASS dwAclInformationClass)
BOOL WINAPI advapi32.LookupAccountSid(_In_ PSID lpSid,_Out_opt_ LPTSTR lpName,_Inout_ LPDWORD cchName,_Out_opt_ LPTSTR lpReferencedDomainName,_Inout_ LPDWORD cchReferencedDomainName,_Out_ PSID_NAME_USE peUse)
BOOL WINAPI advapi32.LookupAccountSidLocalW(_In_ PSID lpSid,_Out_opt_ LPTSTR lpName,_Inout_ LPDWORD cchName,_Out_opt_ LPTSTR lpReferencedDomainName,_Inout_ LPDWORD cchReferencedDomainName,_Out_ PSID_NAME_USE peUse)
BOOL WINAPI advapi32.LookupAccountSidLocalA(_In_ PSID lpSid,_Out_opt_ LPTSTR lpName,_Inout_ LPDWORD cchName,_Out_opt_ LPTSTR lpReferencedDomainName,_Inout_ LPDWORD cchReferencedDomainName,_Out_ PSID_NAME_USE peUse)
BOOL WINAPI avrt.AvRtCreateThreadOrderingGroupEx(_Out_ PHANDLE Context,_In_ PLARGE_INTEGER Period,_Inout_ GUID *ThreadOrderingGuid,_In_opt_ PLARGE_INTEGER Timeout,_In_ LPCTSTR TaskName)
BOOL WINAPI avrt.AvRtCreateThreadOrderingGroupExW(_Out_ PHANDLE Context,_In_ PLARGE_INTEGER Period,_Inout_ GUID *ThreadOrderingGuid,_In_opt_ PLARGE_INTEGER Timeout,_In_ LPCTSTR TaskName)
BOOL WINAPI avrt.AvRtCreateThreadOrderingGroupExA(_Out_ PHANDLE Context,_In_ PLARGE_INTEGER Period,_Inout_ GUID *ThreadOrderingGuid,_In_opt_ PLARGE_INTEGER Timeout,_In_ LPCTSTR TaskName)
DWORD WINAPI kernel32.GetPriorityClass(_In_ HANDLE hProcess)
BOOL WINAPI kernel32.GetExitCodeProcess(_In_ HANDLE hProcess,_Out_ LPDWORD lpExitCode)
HRESULT None ole32.CoGetPSClsid(_In_ REFIID riid,_Out_ CLSID *pClsid)
BOOL CALLBACK None.AuthzGetCentralAccessPolicyCallback(_In_ AUTHZ_CLIENT_CONTEXT_HANDLE hAuthzClientContext,_In_ PSID capid,_In_opt_ PVOID pArgs,_Out_ PBOOL pCentralAccessPolicyApplicable,_Out_ PVOID ppCentralAccessPolicy)
VOID WINAPI kernel32.DeleteProcThreadAttributeList(_Inout_ LPPROC_THREAD_ATTRIBUTE_LIST lpAttributeList)
PTP_WORK WINAPI kernel32.CreateThreadpoolWork(_In_ PTP_WORK_CALLBACK pfnwk,_Inout_opt_ PVOID pv,_In_opt_ PTP_CALLBACK_ENVIRON pcbe)
BOOL WINAPI kernel32.InitializeProcThreadAttributeList(_Out_opt_ LPPROC_THREAD_ATTRIBUTE_LIST lpAttributeList,_In_ DWORD dwAttributeCount,_Reserved_ DWORD dwFlags,_Inout_ PSIZE_T lpSize)
BOOL WINAPI advapi32.AreAllAccessesGranted(_In_ DWORD GrantedAccess,_In_ DWORD DesiredAccess)
VOID WINAPI kernel32.SubmitThreadpoolWork(_Inout_ PTP_WORK pwk)
BOOL WINAPI authz.AuthzFreeResourceManager(_In_ AUTHZ_RESOURCE_MANAGER_HANDLE AuthzResourceManager)
BOOL WINAPI advapi32.OpenThreadToken(_In_ HANDLE ThreadHandle,_In_ DWORD DesiredAccess,_In_ BOOL OpenAsSelf,_Out_ PHANDLE TokenHandle)
BOOL WINAPI authz.AuthzUninstallSecurityEventSource(_In_ DWORD dwFlags,_In_ PCWSTR szEventSourceName)
VOID WINAPI kernel32.CloseThreadpoolTimer(_Inout_ PTP_TIMER pti)
PTP_POOL WINAPI kernel32.CreateThreadpool(_Reserved_ PVOID reserved)
BOOL WINAPI advapi32.AccessCheckByTypeAndAuditAlarm(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ LPCTSTR ObjectTypeName,_In_opt_ LPCTSTR ObjectName,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_opt_ PSID PrincipalSelfSid,_In_ DWORD DesiredAccess,_In_ AUDIT_EVENT_TYPE AuditType,_In_ DWORD Flags,_Inout_opt_ POBJECT_TYPE_LIST ObjectTypeList,_In_ DWORD ObjectTypeListLength,_In_ PGENERIC_MAPPING GenericMapping,_In_ BOOL ObjectCreation,_Out_ LPDWORD GrantedAccess,_Out_ LPBOOL AccessStatus,_Out_ LPBOOL pfGenerateOnClose)
BOOL WINAPI advapi32.AccessCheckByTypeAndAuditAlarmW(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ LPCTSTR ObjectTypeName,_In_opt_ LPCTSTR ObjectName,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_opt_ PSID PrincipalSelfSid,_In_ DWORD DesiredAccess,_In_ AUDIT_EVENT_TYPE AuditType,_In_ DWORD Flags,_Inout_opt_ POBJECT_TYPE_LIST ObjectTypeList,_In_ DWORD ObjectTypeListLength,_In_ PGENERIC_MAPPING GenericMapping,_In_ BOOL ObjectCreation,_Out_ LPDWORD GrantedAccess,_Out_ LPBOOL AccessStatus,_Out_ LPBOOL pfGenerateOnClose)
BOOL WINAPI advapi32.AccessCheckByTypeAndAuditAlarmA(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ LPCTSTR ObjectTypeName,_In_opt_ LPCTSTR ObjectName,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_opt_ PSID PrincipalSelfSid,_In_ DWORD DesiredAccess,_In_ AUDIT_EVENT_TYPE AuditType,_In_ DWORD Flags,_Inout_opt_ POBJECT_TYPE_LIST ObjectTypeList,_In_ DWORD ObjectTypeListLength,_In_ PGENERIC_MAPPING GenericMapping,_In_ BOOL ObjectCreation,_Out_ LPDWORD GrantedAccess,_Out_ LPBOOL AccessStatus,_Out_ LPBOOL pfGenerateOnClose)
TRUSTEE_FORM WINAPI advapi32.GetTrusteeForm(_In_ PTRUSTEE pTrustee)
TRUSTEE_FORM WINAPI advapi32.GetTrusteeFormW(_In_ PTRUSTEE pTrustee)
TRUSTEE_FORM WINAPI advapi32.GetTrusteeFormA(_In_ PTRUSTEE pTrustee)
BOOL WINAPI avrt.AvRtLeaveThreadOrderingGroup(_In_ HANDLE Context)
BOOL WINAPI advapi32.SetAclInformation(_Inout_ PACL pAcl,_In_ LPVOID pAclInformation,_In_ DWORD nAclInformationLength,_In_ ACL_INFORMATION_CLASS dwAclInformationClass)
HRESULT None ole32.CoGetObjectContext(_In_ REFIID riid,_Out_ LPVOID *ppv)
BOOL WINAPI advapi32.AdjustTokenGroups(_In_ HANDLE TokenHandle,_In_ BOOL ResetToDefault,_In_opt_ PTOKEN_GROUPS NewState,_In_ DWORD BufferLength,_Out_opt_ PTOKEN_GROUPS PreviousState,_Out_opt_ PDWORD ReturnLength)
BOOL None kernel32.EnumSystemLanguageGroups(_In_ LANGUAGEGROUP_ENUMPROC lpLanguageGroupEnumProc,_In_ DWORD dwFlags,_In_ LONG_PTR lParam)
BOOL None kernel32.EnumSystemLanguageGroupsW(_In_ LANGUAGEGROUP_ENUMPROC lpLanguageGroupEnumProc,_In_ DWORD dwFlags,_In_ LONG_PTR lParam)
BOOL None kernel32.EnumSystemLanguageGroupsA(_In_ LANGUAGEGROUP_ENUMPROC lpLanguageGroupEnumProc,_In_ DWORD dwFlags,_In_ LONG_PTR lParam)
BOOL WINAPI advapi32.PrivilegeCheck(_In_ HANDLE ClientToken,_Inout_ PPRIVILEGE_SET RequiredPrivileges,_Out_ LPBOOL pfResult)
BOOL WINAPI advapi32.EqualSid(_In_ PSID pSid1,_In_ PSID pSid2)
BOOL None kernel32.GetNumaProcessorNodeEx(_In_ PPROCESSOR_NUMBER Processor,_Out_ PUSHORT NodeNumber)
BOOL WINAPI advapi32.AllocateAndInitializeSid(_In_ PSID_IDENTIFIER_AUTHORITY pIdentifierAuthority,_In_ BYTE nSubAuthorityCount,_In_ DWORD dwSubAuthority0,_In_ DWORD dwSubAuthority1,_In_ DWORD dwSubAuthority2,_In_ DWORD dwSubAuthority3,_In_ DWORD dwSubAuthority4,_In_ DWORD dwSubAuthority5,_In_ DWORD dwSubAuthority6,_In_ DWORD dwSubAuthority7,_Out_ PSID *pSid)
BOOL WINAPI advapi32.LookupPrivilegeValue(_In_opt_ LPCTSTR lpSystemName,_In_ LPCTSTR lpName,_Out_ PLUID lpLuid)
BOOL WINAPI advapi32.LookupPrivilegeValueW(_In_opt_ LPCTSTR lpSystemName,_In_ LPCTSTR lpName,_Out_ PLUID lpLuid)
BOOL WINAPI advapi32.LookupPrivilegeValueA(_In_opt_ LPCTSTR lpSystemName,_In_ LPCTSTR lpName,_Out_ PLUID lpLuid)
DWORD None kernel32.GetActiveProcessorCount(_In_ WORD GroupNumber)
BOOL WINAPI advapi32.SetSecurityDescriptorSacl(_Inout_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_ BOOL bSaclPresent,_In_opt_ PACL pSacl,_In_ BOOL bSaclDefaulted)
BOOL WINAPI authz.AuthzRegisterSecurityEventSource(_In_ DWORD dwFlags,_In_ PCWSTR szEventSourceName,_Out_ PAUTHZ_SECURITY_EVENT_PROVIDER_HANDLE phEventProvider)
BOOL None None.WSPGetOverlappedResult(_In_ SOCKET s,_In_ LPWSAOVERLAPPED lpOverlapped,_Out_ LPDWORD lpcbTransfer,_In_ BOOL fWait,_Out_ LPDWORD lpdwFlags,_Out_ LPINT lpErrno)
HRESULT None ole32.CreateClassMoniker(_In_ REFCLSID rclsid,_Out_ LPMONIKER *ppmk)
BOOL WINAPI kernel32.AssignProcessToJobObject(_In_ HANDLE hJob,_In_ HANDLE hProcess)
HRESULT None ole32.CoFileTimeNow(_Out_ FILETIME *lpFileTime)
BOOL WINAPI advapi32.GetSecurityDescriptorSacl(_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_Out_ LPBOOL lpbSaclPresent,_Out_ PACL *pSacl,_Out_ LPBOOL lpbSaclDefaulted)
DWORD None iphlpapi.CreateIpNetEntry(_In_ PMIB_IPNETROW pArpEntry)
BOOL WINAPI advapi32.SetFileSecurity(_In_ LPCTSTR lpFileName,_In_ SECURITY_INFORMATION SecurityInformation,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor)
BOOL WINAPI advapi32.SetFileSecurityW(_In_ LPCTSTR lpFileName,_In_ SECURITY_INFORMATION SecurityInformation,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor)
BOOL WINAPI advapi32.SetFileSecurityA(_In_ LPCTSTR lpFileName,_In_ SECURITY_INFORMATION SecurityInformation,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor)
BOOL WINAPI advapi32.CreateProcessAsUser(_In_opt_ HANDLE hToken,_In_opt_ LPCTSTR lpApplicationName,_Inout_opt_ LPTSTR lpCommandLine,_In_opt_ LPSECURITY_ATTRIBUTES lpProcessAttributes,_In_opt_ LPSECURITY_ATTRIBUTES lpThreadAttributes,_In_ BOOL bInheritHandles,_In_ DWORD dwCreationFlags,_In_opt_ LPVOID lpEnvironment,_In_opt_ LPCTSTR lpCurrentDirectory,_In_ LPSTARTUPINFO lpStartupInfo,_Out_ LPPROCESS_INFORMATION lpProcessInformation)
BOOL WINAPI advapi32.CreateProcessAsUserW(_In_opt_ HANDLE hToken,_In_opt_ LPCTSTR lpApplicationName,_Inout_opt_ LPTSTR lpCommandLine,_In_opt_ LPSECURITY_ATTRIBUTES lpProcessAttributes,_In_opt_ LPSECURITY_ATTRIBUTES lpThreadAttributes,_In_ BOOL bInheritHandles,_In_ DWORD dwCreationFlags,_In_opt_ LPVOID lpEnvironment,_In_opt_ LPCTSTR lpCurrentDirectory,_In_ LPSTARTUPINFO lpStartupInfo,_Out_ LPPROCESS_INFORMATION lpProcessInformation)
BOOL WINAPI advapi32.CreateProcessAsUserA(_In_opt_ HANDLE hToken,_In_opt_ LPCTSTR lpApplicationName,_Inout_opt_ LPTSTR lpCommandLine,_In_opt_ LPSECURITY_ATTRIBUTES lpProcessAttributes,_In_opt_ LPSECURITY_ATTRIBUTES lpThreadAttributes,_In_ BOOL bInheritHandles,_In_ DWORD dwCreationFlags,_In_opt_ LPVOID lpEnvironment,_In_opt_ LPCTSTR lpCurrentDirectory,_In_ LPSTARTUPINFO lpStartupInfo,_Out_ LPPROCESS_INFORMATION lpProcessInformation)
VOID WINAPI kernel32.WaitForThreadpoolWaitCallbacks(_Inout_ PTP_WAIT pwa,_In_ BOOL fCancelPendingCallbacks)
BOOL WINAPI advapi32.LookupAccountSid(_In_opt_ LPCTSTR lpSystemName,_In_ PSID lpSid,_Out_opt_ LPTSTR lpName,_Inout_ LPDWORD cchName,_Out_opt_ LPTSTR lpReferencedDomainName,_Inout_ LPDWORD cchReferencedDomainName,_Out_ PSID_NAME_USE peUse)
BOOL WINAPI advapi32.LookupAccountSidW(_In_opt_ LPCTSTR lpSystemName,_In_ PSID lpSid,_Out_opt_ LPTSTR lpName,_Inout_ LPDWORD cchName,_Out_opt_ LPTSTR lpReferencedDomainName,_Inout_ LPDWORD cchReferencedDomainName,_Out_ PSID_NAME_USE peUse)
BOOL WINAPI advapi32.LookupAccountSidA(_In_opt_ LPCTSTR lpSystemName,_In_ PSID lpSid,_Out_opt_ LPTSTR lpName,_Inout_ LPDWORD cchName,_Out_opt_ LPTSTR lpReferencedDomainName,_Inout_ LPDWORD cchReferencedDomainName,_Out_ PSID_NAME_USE peUse)
NTSTATUS WINAPI ntdll.RtlConvertSidToUnicodeString(_Out_ PUNICODE_STRING UnicodeString,_In_ PSID Sid,_In_ BOOLEAN AllocateDestinationString)
HPROPSHEETPAGE WINAPI aclui.CreateSecurityPage(_In_ LPSECURITYINFO psi)
HRESULT __stdcall None.DllGetClassObject(_In_ REFCLSID rclsid,_In_ REFIID riid,_Out_ LPVOID *ppv)
DWORD None iphlpapi.GetAdaptersInfo(_Out_ PIP_ADAPTER_INFO pAdapterInfo,_Inout_ PULONG pOutBufLen)
BOOL WINAPI kernel32.IsProcessInJob(_In_ HANDLE ProcessHandle,_In_opt_ HANDLE JobHandle,_Out_ PBOOL Result)
BOOL WINAPI advapi32.CreateProcessWithTokenW(_In_ HANDLE hToken,_In_ DWORD dwLogonFlags,_In_opt_ LPCWSTR lpApplicationName,_Inout_opt_ LPWSTR lpCommandLine,_In_ DWORD dwCreationFlags,_In_opt_ LPVOID lpEnvironment,_In_opt_ LPCWSTR lpCurrentDirectory,_In_ LPSTARTUPINFOW lpStartupInfo,_Out_ LPPROCESS_INFORMATION lpProcessInfo)
BOOL WINAPI advapi32.ConvertStringSidToSid(_In_ LPCTSTR StringSid,_Out_ PSID *Sid)
BOOL WINAPI advapi32.ConvertStringSidToSidW(_In_ LPCTSTR StringSid,_Out_ PSID *Sid)
BOOL WINAPI advapi32.ConvertStringSidToSidA(_In_ LPCTSTR StringSid,_Out_ PSID *Sid)
BOOL WINAPI kernel32.GetComputerName(_Out_ LPTSTR lpBuffer,_Inout_ LPDWORD lpnSize)
BOOL WINAPI kernel32.GetComputerNameW(_Out_ LPTSTR lpBuffer,_Inout_ LPDWORD lpnSize)
BOOL WINAPI kernel32.GetComputerNameA(_Out_ LPTSTR lpBuffer,_Inout_ LPDWORD lpnSize)
DWORD WINAPI advapi32.GetSecurityInfo(_In_ HANDLE handle,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_Out_opt_ PSID *ppsidOwner,_Out_opt_ PSID *ppsidGroup,_Out_opt_ PACL *ppDacl,_Out_opt_ PACL *ppSacl,_Out_opt_ PSECURITY_DESCRIPTOR *ppSecurityDescriptor)
BOOL WINAPI kernel32.GetProcessMitigationPolicy(_In_ HANDLE hProcess,_In_ PROCESS_MITIGATION_POLICY MitigationPolicy,_Out_ PVOID lpBuffer,_In_ SIZE_T dwLength)
HGLOBAL None ole32.OleGetIconOfClass(_In_ REFCLSID rclsid,_In_opt_ LPOLESTR lpszLabel,_In_ BOOL fUseTypeAsLabel)
VOID WINAPI advapi32.SetSecurityAccessMask(_In_ SECURITY_INFORMATION SecurityInformation,_Out_ LPDWORD DesiredAccess)
DWORD None iphlpapi.GetNetworkParams(_Out_ PFIXED_INFO pFixedInfo,_In_ PULONG pOutBufLen)
NTSTATUS WINAPI ntdll.NtQueryInformationThread(_In_ HANDLE ThreadHandle,_In_ THREADINFOCLASS ThreadInformationClass,_Inout_ PVOID ThreadInformation,_In_ ULONG ThreadInformationLength,_Out_opt_ PULONG ReturnLength)
NETIOAPI_API None iphlpapi.FlushIpNetTable2(_In_ ADDRESS_FAMILY Family,_In_ NET_IFINDEX InterfaceIndex)
DWORD WINAPI kernel32.SuspendThread(_In_ HANDLE hThread)
VOID WINAPI advapi32.AuditFree(_In_ PVOID Buffer)
BOOL None kernel32.EnumTimeFormats(_In_ TIMEFMT_ENUMPROC lpTimeFmtEnumProc,_In_ LCID Locale,_In_ DWORD dwFlags)
BOOL None kernel32.EnumTimeFormatsW(_In_ TIMEFMT_ENUMPROC lpTimeFmtEnumProc,_In_ LCID Locale,_In_ DWORD dwFlags)
BOOL None kernel32.EnumTimeFormatsA(_In_ TIMEFMT_ENUMPROC lpTimeFmtEnumProc,_In_ LCID Locale,_In_ DWORD dwFlags)
BOOL WINAPI advapi32.SetThreadToken(_In_opt_ PHANDLE Thread,_In_opt_ HANDLE Token)
NETIOAPI_API None iphlpapi.GetMulticastIpAddressTable(_In_ ADDRESS_FAMILY Family,_Out_ PMIB_MULTICASTIPADDRESS_TABLE *Table)
VOID None None.SetThreadpoolCallbackPersistent(_Inout_ PTP_CALLBACK_ENVIRON pcbe)
BOOL WINAPI advapi32.IsValidSecurityDescriptor(_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor)
GEOID None kernel32.GetUserGeoID(_In_ GEOCLASS GeoClass)
HRESULT None ole32.CoCancelCall(_In_ DWORD dwThreadId,_In_ ULONG ulTimeout)
BOOL WINAPI authz.AuthzModifySids(_In_ AUTHZ_CLIENT_CONTEXT_HANDLE hAuthzClientContext,_In_ AUTHZ_CONTEXT_INFORMATION_CLASS SidClass,_In_ PAUTHZ_SID_OPERATION pSidOperations,_In_opt_ PTOKEN_GROUPS pSids)
BOOL None kernel32.EnumCalendarInfoExEx(_In_ CALINFO_ENUMPROCEXEX pCalInfoEnumProcExEx,_In_opt_ LPCWSTR lpLocaleName,_In_ CALID Calendar,_In_opt_ LPCWSTR lpReserved,_In_ CALTYPE CalType,_In_ LPARAM lParam)
BOOL WINAPI kernel32.SetProcessAffinityUpdateMode(_In_ HANDLE ProcessHandle,_In_ DWORD dwFlags)
BOOL WINAPI kernel32.SetComputerNameEx(_In_ COMPUTER_NAME_FORMAT NameType,_In_ LPCTSTR lpBuffer)
BOOL WINAPI kernel32.SetComputerNameExW(_In_ COMPUTER_NAME_FORMAT NameType,_In_ LPCTSTR lpBuffer)
BOOL WINAPI kernel32.SetComputerNameExA(_In_ COMPUTER_NAME_FORMAT NameType,_In_ LPCTSTR lpBuffer)
BOOL WINAPI kernel32.QueueUserWorkItem(_In_ LPTHREAD_START_ROUTINE Function,_In_opt_ PVOID Context,_In_ ULONG Flags)
HRESULT WINAPI ole32.CoGetApartmentType(_Out_ APTTYPE *pAptType,_Out_ APTTYPEQUALIFIER *pAptQualifier)
LONG WINAPI advapi32.RegGetKeySecurity(_In_ HKEY hKey,_In_ SECURITY_INFORMATION SecurityInformation,_Out_opt_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_Inout_ LPDWORD lpcbSecurityDescriptor)
DWORD WINAPI advapi32.GetInheritanceSource(_In_ LPTSTR pObjectName,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_In_ BOOL Container,_In_opt_ GUID **pObjectClassGuids,_In_ DWORD GuidCount,_In_ PACL pAcl,_In_opt_ PFN_OBJECT_MGR_FUNCTS pfnArray,_In_ PGENERIC_MAPPING pGenericMapping,_Out_ PINHERITED_FROM pInheritArray)
DWORD WINAPI advapi32.GetInheritanceSourceW(_In_ LPTSTR pObjectName,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_In_ BOOL Container,_In_opt_ GUID **pObjectClassGuids,_In_ DWORD GuidCount,_In_ PACL pAcl,_In_opt_ PFN_OBJECT_MGR_FUNCTS pfnArray,_In_ PGENERIC_MAPPING pGenericMapping,_Out_ PINHERITED_FROM pInheritArray)
DWORD WINAPI advapi32.GetInheritanceSourceA(_In_ LPTSTR pObjectName,_In_ SE_OBJECT_TYPE ObjectType,_In_ SECURITY_INFORMATION SecurityInfo,_In_ BOOL Container,_In_opt_ GUID **pObjectClassGuids,_In_ DWORD GuidCount,_In_ PACL pAcl,_In_opt_ PFN_OBJECT_MGR_FUNCTS pfnArray,_In_ PGENERIC_MAPPING pGenericMapping,_Out_ PINHERITED_FROM pInheritArray)
VOID WINAPI advapi32.BuildExplicitAccessWithName(_Inout_ PEXPLICIT_ACCESS pExplicitAccess,_In_opt_ LPTSTR pTrusteeName,_In_ DWORD AccessPermissions,_In_ ACCESS_MODE AccessMode,_In_ DWORD Inheritance)
VOID WINAPI advapi32.BuildExplicitAccessWithNameW(_Inout_ PEXPLICIT_ACCESS pExplicitAccess,_In_opt_ LPTSTR pTrusteeName,_In_ DWORD AccessPermissions,_In_ ACCESS_MODE AccessMode,_In_ DWORD Inheritance)
VOID WINAPI advapi32.BuildExplicitAccessWithNameA(_Inout_ PEXPLICIT_ACCESS pExplicitAccess,_In_opt_ LPTSTR pTrusteeName,_In_ DWORD AccessPermissions,_In_ ACCESS_MODE AccessMode,_In_ DWORD Inheritance)
BOOL WINAPI advapi32.DuplicateToken(_In_ HANDLE ExistingTokenHandle,_In_ SECURITY_IMPERSONATION_LEVEL ImpersonationLevel,_Out_ PHANDLE DuplicateTokenHandle)
DWORD None iphlpapi.SetIpForwardEntry(_In_ PMIB_IPFORWARDROW pRoute)
HRESULT None combase.CoGetInstanceFromFile(_In_opt_ COSERVERINFO *pServerInfo,_In_opt_ CLSID *pClsid,_In_opt_ IUnknown *punkOuter,_In_ DWORD dwClsCtx,_In_ DWORD grfMode,_In_ OLECHAR *pwszName,_In_ DWORD dwCount,_Inout_ MULTI_QI *pResults)
BOOL WINAPI kernel32.SetProcessDefaultCpuSets(_In_ HANDLE Process,_In_opt_ ULONG CpuSetIds,_In_ ULONG CpuSetIdCound)
NETIO_STATUS WINAPI iphlpapi.ConvertIpv4MaskToLength(_In_ ULONG Mask,_Out_ PUINT8 MaskLength)
NETIOAPI_API None iphlpapi.NotifyTeredoPortChange(_In_ PTEREDO_PORT_CHANGE_CALLBACK Callback,_In_ PVOID CallerContext,_In_ BOOLEAN InitialNotification,_Inout_ HANDLE *NotificationHandle)
BOOL WINAPI kernel32.AddScopedPolicyIDAce(_Inout_ PACL pAcl,_In_ DWORD dwAceRevision,_In_ DWORD AceFlags,_In_ DWORD AccessMask,_In_ PSID pSid)
NETIOAPI_API None iphlpapi.NotifyIpInterfaceChange(_In_ ADDRESS_FAMILY Family,_In_ PIPINTERFACE_CHANGE_CALLBACK Callback,_In_ PVOID CallerContext,_In_ BOOLEAN InitialNotification,_Inout_ HANDLE *NotificationHandle)
BOOL WINAPI advapi32.PrivilegedServiceAuditAlarm(_In_ LPCTSTR SubsystemName,_In_ LPCTSTR ServiceName,_In_ HANDLE ClientToken,_In_ PPRIVILEGE_SET Privileges,_In_ BOOL AccessGranted)
BOOL WINAPI advapi32.PrivilegedServiceAuditAlarmW(_In_ LPCTSTR SubsystemName,_In_ LPCTSTR ServiceName,_In_ HANDLE ClientToken,_In_ PPRIVILEGE_SET Privileges,_In_ BOOL AccessGranted)
BOOL WINAPI advapi32.PrivilegedServiceAuditAlarmA(_In_ LPCTSTR SubsystemName,_In_ LPCTSTR ServiceName,_In_ HANDLE ClientToken,_In_ PPRIVILEGE_SET Privileges,_In_ BOOL AccessGranted)
ULONG WINAPI iphlpapi.DeletePersistentTcpPortReservation(_In_ USHORT StartPort,_In_ USHORT NumberOfPorts)
HRESULT None ole32.CoCreateGuid(_Out_ GUID *pguid)
HRESULT None ole32.CoLockObjectExternal(_In_ LPUNKNOWN pUnk,_In_ BOOL fLock,_In_ BOOL fLastUnlockReleases)
ULONG WINAPI iphlpapi.SetPerTcp6ConnectionEStats(PMIB_TCP6ROW Row None,TCP_ESTATS_TYPE EstatsType None,PUCHAR Rw None,ULONG RwVersion None,ULONG RwSize None,ULONG Offset None)
BOOL WINAPI user32.GetUserObjectSecurity(_In_ HANDLE hObj,_In_ PSECURITY_INFORMATION pSIRequested,_Inout_opt_ PSECURITY_DESCRIPTOR pSD,_In_ DWORD nLength,_Out_ LPDWORD lpnLengthNeeded)
VOID CALLBACK None.APCProc(_In_ ULONG_PTR dwParam)
WSAEVENT None None.WPUCreateEvent(_Out_ LPINT lpErrno)
BOOL None kernel32.EnumTimeFormatsEx(_In_ TIMEFMT_ENUMPROCEX lpTimeFmtEnumProcEx,_In_opt_ LPCWSTR lpLocaleName,_In_ DWORD dwFlags,_In_ LPARAM lParam)
DWORD None iphlpapi.GetIpStatisticsEx(_Out_ PMIB_IPSTATS pStats,_In_ DWORD dwFamily)
BOOL WINAPI advapi32.CopySid(_In_ DWORD nDestinationSidLength,_Out_ PSID pDestinationSid,_In_ PSID pSourceSid)
HRESULT None ole32.CoGetMarshalSizeMax(_Out_ ULONG *pulSize,_In_ REFIID riid,_In_ LPUNKNOWN pUnk,_In_ DWORD dwDestContext,_In_opt_ LPVOID pvDestContext,_In_ DWORD mshlflags)
VOID None iphlpapi.InitializeIpForwardEntry(_Out_ PMIB_IPFORWARD_ROW2 Row)
BOOL WINAPI user32.LogicalToPhysicalPoint(_In_ HWND hWnd,_Inout_ LPPOINT lpPoint)
VOID FORCEINLINE None.TpSetCallbackRaceWithDll(_Inout_ PTP_CALLBACK_ENVIRON CallbackEnviron,_In_ PVOID DllHandle)
LPVOID WINAPI kernel32.CreateFiberEx(_In_ SIZE_T dwStackCommitSize,_In_ SIZE_T dwStackReserveSize,_In_ DWORD dwFlags,_In_ LPFIBER_START_ROUTINE lpStartAddress,_In_opt_ LPVOID lpParameter)
HRESULT None ole32.CoGetPSClsid(_In_ REFIID riid,_Out_ CLSID *pClsid)
HANDLE WINAPI kernel32.CreateThread(_In_opt_ LPSECURITY_ATTRIBUTES lpThreadAttributes,_In_ SIZE_T dwStackSize,_In_ LPTHREAD_START_ROUTINE lpStartAddress,_In_opt_ LPVOID lpParameter,_In_ DWORD dwCreationFlags,_Out_opt_ LPDWORD lpThreadId)
NETIOAPI_API None iphlpapi.GetIfEntry2Ex(_In_ MIB_IF_ENTRY_LEVEL Level,_Inout_ PMIB_IF_ROW2 Row)
BOOL WINAPI advapi32.AccessCheckByTypeResultListAndAuditAlarmByHandle(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ HANDLE ClientToken,_In_ LPCTSTR ObjectTypeName,_In_opt_ LPCTSTR ObjectName,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_opt_ PSID PrincipalSelfSid,_In_ DWORD DesiredAccess,_In_ AUDIT_EVENT_TYPE AuditType,_In_ DWORD Flags,_Inout_opt_ POBJECT_TYPE_LIST ObjectTypeList,_In_ DWORD ObjectTypeListLength,_In_ PGENERIC_MAPPING GenericMapping,_In_ BOOL ObjectCreation,_Out_ LPDWORD GrantedAccess,_Out_ LPDWORD AccessStatusList,_Out_ LPBOOL pfGenerateOnClose)
BOOL WINAPI advapi32.AccessCheckByTypeResultListAndAuditAlarmByHandleW(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ HANDLE ClientToken,_In_ LPCTSTR ObjectTypeName,_In_opt_ LPCTSTR ObjectName,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_opt_ PSID PrincipalSelfSid,_In_ DWORD DesiredAccess,_In_ AUDIT_EVENT_TYPE AuditType,_In_ DWORD Flags,_Inout_opt_ POBJECT_TYPE_LIST ObjectTypeList,_In_ DWORD ObjectTypeListLength,_In_ PGENERIC_MAPPING GenericMapping,_In_ BOOL ObjectCreation,_Out_ LPDWORD GrantedAccess,_Out_ LPDWORD AccessStatusList,_Out_ LPBOOL pfGenerateOnClose)
BOOL WINAPI advapi32.AccessCheckByTypeResultListAndAuditAlarmByHandleA(_In_ LPCTSTR SubsystemName,_In_ LPVOID HandleId,_In_ HANDLE ClientToken,_In_ LPCTSTR ObjectTypeName,_In_opt_ LPCTSTR ObjectName,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_opt_ PSID PrincipalSelfSid,_In_ DWORD DesiredAccess,_In_ AUDIT_EVENT_TYPE AuditType,_In_ DWORD Flags,_Inout_opt_ POBJECT_TYPE_LIST ObjectTypeList,_In_ DWORD ObjectTypeListLength,_In_ PGENERIC_MAPPING GenericMapping,_In_ BOOL ObjectCreation,_Out_ LPDWORD GrantedAccess,_Out_ LPDWORD AccessStatusList,_Out_ LPBOOL pfGenerateOnClose)
SECURITY_STATUS SEC_Entry sspicli.EnumerateSecurityPackages(_In_ PULONG pcPackages,_In_ PSecPkgInfo *ppPackageInfo)
SECURITY_STATUS SEC_Entry sspicli.EnumerateSecurityPackagesW(_In_ PULONG pcPackages,_In_ PSecPkgInfo *ppPackageInfo)
SECURITY_STATUS SEC_Entry sspicli.EnumerateSecurityPackagesA(_In_ PULONG pcPackages,_In_ PSecPkgInfo *ppPackageInfo)
VOID WINAPI kernel32.StartThreadpoolIo(_Inout_ PTP_IO pio)
PSID_IDENTIFIER_AUTHORITY WINAPI advapi32.GetSidIdentifierAuthority(_In_ PSID pSid)
DWORD None iphlpapi.RestoreMediaSense(OVERLAPPED *pOverlapped None,LPDWORD lpdwEnableCount None)
VOID WINAPI advapi32.QuerySecurityAccessMask(_In_ SECURITY_INFORMATION SecurityInformation,_Out_ LPDWORD DesiredAccess)
DWORD None iphlpapi.DeleteIPAddress(_In_ ULONG NTEContext)
HRESULT None ole32.CoInvalidateRemoteMachineBindings(_In_ LPOLESTR pszMachineName)
VOID WINAPI advapi32.BuildTrusteeWithSid(_Inout_ PTRUSTEE pTrustee,_In_opt_ PSID pSid)
VOID WINAPI advapi32.BuildTrusteeWithSidW(_Inout_ PTRUSTEE pTrustee,_In_opt_ PSID pSid)
VOID WINAPI advapi32.BuildTrusteeWithSidA(_Inout_ PTRUSTEE pTrustee,_In_opt_ PSID pSid)
VOID WINAPI kernel32.ReleaseMutexWhenCallbackReturns(_Inout_ PTP_CALLBACK_INSTANCE pci,_In_ HANDLE mut)
DWORD WINAPI iphlpapi.SetIpStatisticsEx(_In_ PMIB_IPSTATS pIpStats,ULONG Family None)
HRESULT None ole32.CoCreateInstanceEx(_In_ REFCLSID rclsid,_In_ IUnknown *punkOuter,_In_ DWORD dwClsCtx,_In_ COSERVERINFO *pServerInfo,_In_ DWORD dwCount,_Inout_ MULTI_QI *pResults)
HRESULT WINOLEAPI combase.CoRegisterChannelHook(_In_ REFGUID ExtensionUuid,_In_ IChannelHook *pChannelHook)
BOOL WINAPI advapi32.GetAce(_In_ PACL pAcl,_In_ DWORD dwAceIndex,_Out_ LPVOID *pAce)
DWORD None iphlpapi.SetTcpEntry(_In_ PMIB_TCPROW pTcpRow)
HRESULT None ole32.CoGetCurrentLogicalThreadId(_Out_ GUID *pguid)
DWORD None iphlpapi.GetIcmpStatisticsEx(_Out_ PMIB_ICMP_EX pStats,_In_ DWORD dwFamily)
HRESULT None ole32.OleRegGetMiscStatus(_In_ REFCLSID clsid,_In_ DWORD dwAspect,_Out_ DWORD *pdwStatus)
BOOL CALLBACK None.EnumTimeFormatsProcEx(_In_ LPWSTR lpTimeFormatString,_In_ LPARAM lParam)
BOOL WINAPI user32.AdjustWindowRect(_Inout_ LPRECT lpRect,_In_ DWORD dwStyle,_In_ BOOL bMenu)
BOOL WINAPI kernel32.UpdateProcThreadAttribute(_Inout_ LPPROC_THREAD_ATTRIBUTE_LIST lpAttributeList,_In_ DWORD dwFlags,_In_ DWORD_PTR Attribute,_In_ PVOID lpValue,_In_ SIZE_T cbSize,_Out_opt_ PVOID lpPreviousValue,_In_opt_ PSIZE_T lpReturnSize)
ULONG WINAPI iphlpapi.GetUdp6Table(_Out_ PMIB_UDP6TABLE Udp6Table,_Inout_ PULONG SizePointer,_In_ BOOL Order)
HRESULT None ole32.CoRegisterMallocSpy(_In_ LPMALLOCSPY pMallocSpy)
BOOL WINAPI advapi32.InitializeAcl(_Out_ PACL pAcl,_In_ DWORD nAclLength,_In_ DWORD dwAclRevision)
DWORD None iphlpapi.GetOwnerModuleFromTcpEntry(_In_ PMIB_TCPROW_OWNER_MODULE pTcpEntry,_In_ TCPIP_OWNER_MODULE_INFO_CLASS Class,_Out_ PVOID Buffer,_Inout_ PDWORD pdwSize)
UINT WINAPI kernel32.LocalFlags(_In_ HLOCAL hMem)
DWORD None iphlpapi.SetIfEntry(_In_ PMIB_IFROW pIfRow)
NETIOAPI_API None iphlpapi.GetIpNetEntry2(_Inout_ PMIB_IPNET_ROW2 Row)
BOOL CALLBACK None.EnumDateFormatsProcEx(_In_ LPTSTR lpDateFormatString,_In_ CALID CalendarID)
DWORD WINAPI iphlpapi.GetTcpTable(_Out_ PMIB_TCPTABLE pTcpTable,_Inout_ PDWORD pdwSize,_In_ BOOL bOrder)
BOOL None kernel32.RtlIsValidLocaleName(_In_ LPCWSTR LocaleName,_In_ ULONG Flags)
HINSTANCE None shell32.ShellExecute(_In_opt_ HWND hwnd,_In_opt_ LPCTSTR lpOperation,_In_ LPCTSTR lpFile,_In_opt_ LPCTSTR lpParameters,_In_opt_ LPCTSTR lpDirectory,_In_ INT nShowCmd)
HINSTANCE None shell32.ShellExecuteW(_In_opt_ HWND hwnd,_In_opt_ LPCTSTR lpOperation,_In_ LPCTSTR lpFile,_In_opt_ LPCTSTR lpParameters,_In_opt_ LPCTSTR lpDirectory,_In_ INT nShowCmd)
HINSTANCE None shell32.ShellExecuteA(_In_opt_ HWND hwnd,_In_opt_ LPCTSTR lpOperation,_In_ LPCTSTR lpFile,_In_opt_ LPCTSTR lpParameters,_In_opt_ LPCTSTR lpDirectory,_In_ INT nShowCmd)
DWORD None iphlpapi.GetIfTable(_Out_ PMIB_IFTABLE pIfTable,_Inout_ PULONG pdwSize,_In_ BOOL bOrder)
NETIOAPI_API None iphlpapi.GetIpInterfaceEntry(_Inout_ PMIB_IPINTERFACE_ROW Row)
VOID CALLBACK None.WaitCallback(_Inout_ PTP_CALLBACK_INSTANCE Instance,_Inout_opt_ PVOID Context,_Inout_ PTP_WAIT Wait,_In_ TP_WAIT_RESULT WaitResult)
DWORD WINAPI iphlpapi.NotifySecurityHealthChange(PHANDLE pHandle None,LPOVERLAPPED pOverLapped None,PULONG SecurityHealthFlags None)
VOID WINAPI kernel32.SetThreadpoolTimer(_Inout_ PTP_TIMER pti,_In_opt_ PFILETIME pftDueTime,_In_ DWORD msPeriod,_In_opt_ DWORD msWindowLength)
BOOL None mswsock.RIOReceive(_In_ RIO_RQ SocketQueue,_In_ PRIO_BUF pData,_In_ ULONG DataBufferCount,_In_ DWORD Flags,_In_ PVOID RequestContext)
BOOL None kernel32.EnumDateFormats(_In_ DATEFMT_ENUMPROC lpDateFmtEnumProc,_In_ LCID Locale,_In_ DWORD dwFlags)
BOOL None kernel32.EnumDateFormatsW(_In_ DATEFMT_ENUMPROC lpDateFmtEnumProc,_In_ LCID Locale,_In_ DWORD dwFlags)
BOOL None kernel32.EnumDateFormatsA(_In_ DATEFMT_ENUMPROC lpDateFmtEnumProc,_In_ LCID Locale,_In_ DWORD dwFlags)
BOOL WINAPI advapi32.AddAce(_Inout_ PACL pAcl,_In_ DWORD dwAceRevision,_In_ DWORD dwStartingAceIndex,_In_ LPVOID pAceList,_In_ DWORD nAceListLength)
BOOL None kernel32.GetNumaNodeNumberFromHandle(_In_ HANDLE hFile,_Out_ PUSHORT NodeNumber)
HRESULT None ole32.MkParseDisplayName(_In_ LPBC pbc,_In_ LPCOLESTR szUserName,_Out_ ULONG *pchEaten,_Out_ LPMONIKER *ppmk)
HRESULT None ole32.OleGetAutoConvert(_In_ REFCLSID clsidOld,_Out_ LPCLSID pClsidNew)
DWORD None iphlpapi.IcmpParseReplies(_In_ LPVOID ReplyBuffer,_In_ DWORD ReplySize)
BOOL CALLBACK None.EnumLanguageGroupsProc(_In_ LGRPID LanguageGroup,_In_ LPTSTR lpLanguageGroupString,_In_ LPTSTR lpLanguageGroupNameString,_In_ DWORD dwFlags,_In_ LONG_PTR lParam)
NETIO_STATUS WINAPI iphlpapi.ConvertInterfaceIndexToLuid(_In_ NET_IFINDEX InterfaceIndex,_Out_ PNET_LUID InterfaceLuid)
BOOL WINAPI user32.PhysicalToLogicalPoint(_In_ HWND hWnd,_Inout_ LPPOINT lpPoint)
SECURITY_STATUS SEC_Entry secur32.EncryptMessage(_In_ PCtxtHandle phContext,_In_ ULONG fQOP,_Inout_ PSecBufferDesc pMessage,_In_ ULONG MessageSeqNo)
DWORD None iphlpapi.CreateIpNetEntry(_In_ PMIB_IPNETROW pArpEntry)
LONG WINAPI winscard.SCardForgetReaderGroup(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szGroupName)
LONG WINAPI winscard.SCardForgetReaderGroupW(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szGroupName)
LONG WINAPI winscard.SCardForgetReaderGroupA(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szGroupName)
DWORD None iphlpapi.DeleteIpNetEntry(_In_ PMIB_IPNETROW pArpEntry)
HRESULT None shell32.GetCurrentProcessExplicitAppUserModelID(_Out_ PWSTR *AppID)
LPSTR WINAPI user32.CharPrevExA(_In_ WORD CodePage,_In_ LPCSTR lpStart,_In_ LPCSTR lpCurrentChar,_In_ DWORD dwFlags)
LPSTR WINAPI user32.CharPrevExA(_In_ WORD CodePage,_In_ LPCSTR lpStart,_In_ LPCSTR lpCurrentChar,_In_ DWORD dwFlags)
BOOL WINAPI advapi32.LookupAccountSid(_In_opt_ LPCTSTR lpSystemName,_In_ PSID lpSid,_Out_opt_ LPTSTR lpName,_Inout_ LPDWORD cchName,_Out_opt_ LPTSTR lpReferencedDomainName,_Inout_ LPDWORD cchReferencedDomainName,_Out_ PSID_NAME_USE peUse)
BOOL WINAPI advapi32.LookupAccountSidW(_In_opt_ LPCTSTR lpSystemName,_In_ PSID lpSid,_Out_opt_ LPTSTR lpName,_Inout_ LPDWORD cchName,_Out_opt_ LPTSTR lpReferencedDomainName,_Inout_ LPDWORD cchReferencedDomainName,_Out_ PSID_NAME_USE peUse)
BOOL WINAPI advapi32.LookupAccountSidA(_In_opt_ LPCTSTR lpSystemName,_In_ PSID lpSid,_Out_opt_ LPTSTR lpName,_Inout_ LPDWORD cchName,_Out_opt_ LPTSTR lpReferencedDomainName,_Inout_ LPDWORD cchReferencedDomainName,_Out_ PSID_NAME_USE peUse)
DWORD None iphlpapi.GetUdpStatistics(_Out_ PMIB_UDPSTATS pStats)
HWND WINAPI user32.FindWindow(_In_opt_ LPCTSTR lpClassName,_In_opt_ LPCTSTR lpWindowName)
HWND WINAPI user32.FindWindowW(_In_opt_ LPCTSTR lpClassName,_In_opt_ LPCTSTR lpWindowName)
HWND WINAPI user32.FindWindowA(_In_opt_ LPCTSTR lpClassName,_In_opt_ LPCTSTR lpWindowName)
LPTSTR WINAPI user32.CharNext(_In_ LPCTSTR lpsz)
LPTSTR WINAPI user32.CharNextW(_In_ LPCTSTR lpsz)
LPTSTR WINAPI user32.CharNextA(_In_ LPCTSTR lpsz)
HRESULT None ole32.CoCancelCall(_In_ DWORD dwThreadId,_In_ ULONG ulTimeout)
LONG NTAPI ntdll.RtlIpv6StringToAddressEx(_In_ PCTSTR AddressString,_Out_ IN6_ADDR *Address,_Out_ PULONG ScopeId,_Out_ PUSHORT Port)
LONG NTAPI ntdll.RtlIpv6StringToAddressExW(_In_ PCTSTR AddressString,_Out_ IN6_ADDR *Address,_Out_ PULONG ScopeId,_Out_ PUSHORT Port)
LONG NTAPI ntdll.RtlIpv6StringToAddressEx(_In_ PCTSTR AddressString,_Out_ IN6_ADDR *Address,_Out_ PULONG ScopeId,_Out_ PUSHORT Port)
NTSTATUS NTAPI None.CrediFreeCredentials(_In_ ULONG Count,_Inout_ PENCRYPTED_CREDENTIALW *Credentials)
DWORD None iphlpapi.GetIpStatistics(_Out_ PMIB_IPSTATS pStats)
HRESULT None None.StringCbPrintf(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszFormat,_In_ ... None)
HRESULT None None.StringCbPrintfW(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszFormat,_In_ ... None)
HRESULT None None.StringCbPrintfA(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszFormat,_In_ ... None)
DWORD WINAPI iphlpapi.UnenableRouter(OVERLAPPED *pOverlapped None,_Out_opt_ LPDWORD lpdwEnableCount)
DWORD None iphlpapi.GetIcmpStatistics(_Out_ PMIB_ICMP pStats)
ULONG WINAPI iphlpapi.CreatePersistentTcpPortReservation(_In_ USHORT StartPort,_In_ USHORT NumberOfPorts,_Out_ PULONG64 Token)
BOOL WINAPI user32.GetWindowDisplayAffinity(_In_ HWND hWnd,_Out_ DWORD *dwAffinity)
BOOL WINAPI user32.EnumWindows(_In_ WNDENUMPROC lpEnumFunc,_In_ LPARAM lParam)
DWORD WINAPI iphlpapi.AllocateAndGetTcpExTableFromStack(_Out_ PVOID *ppTcpTable,_In_ BOOL bOrder,_In_ HANDLE hHeap,_In_ DWORD dwFlags,_In_ DWORD dwFamily)
NETIOAPI_API None iphlpapi.NotifyUnicastIpAddressChange(_In_ ADDRESS_FAMILY Family,_In_ PUNICAST_IPADDRESS_CHANGE_CALLBACK Callback,_In_ PVOID CallerContext,_In_ BOOLEAN InitialNotification,_Inout_ HANDLE *NotificationHandle)
DWORD None iphlpapi.IcmpSendEcho(_In_ HANDLE IcmpHandle,_In_ IPAddr DestinationAddress,_In_ LPVOID RequestData,_In_ WORD RequestSize,_In_opt_ PIP_OPTION_INFORMATION RequestOptions,_Out_ LPVOID ReplyBuffer,_In_ DWORD ReplySize,_In_ DWORD Timeout)
HWND WINAPI user32.GetWindow(_In_ HWND hWnd,_In_ UINT uCmd)
DWORD None iphlpapi.GetUdpStatisticsEx(_Out_ PMIB_UDPSTATS pStats,_In_ DWORD dwFamily)
BOOL None kernel32.IsValidCodePage(_In_ UINT CodePage)
DWORD None iphlpapi.GetIfEntry(_Inout_ PMIB_IFROW pIfRow)
DWORD None None.NPGetDirectoryType(_In_ LPTSTR lpName,_In_ LPINT lpType,_In_ BOOL bFlushCache)
BOOL CALLBACK None.EnumWindowsProc(_In_ HWND hwnd,_In_ LPARAM lParam)
DWORD None iphlpapi.GetUdpTable(_Out_ PMIB_UDPTABLE pUdpTable,_Inout_ PDWORD pdwSize,_In_ BOOL bOrder)
BOOL WINAPI user32.EnumThreadWindows(_In_ DWORD dwThreadId,_In_ WNDENUMPROC lpfn,_In_ LPARAM lParam)
NETIOAPI_API None iphlpapi.GetUnicastIpAddressEntry(_Inout_ PMIB_UNICASTIPADDRESS_ROW Row)
DWORD WINAPI iphlpapi.SetIpStatistics(_In_ PMIB_IPSTATS pIpStats)
DWORD None iphlpapi.GetOwnerModuleFromTcp6Entry(_In_ PMIB_TCP6ROW_OWNER_MODULE pTcpEntry,_In_ TCPIP_OWNER_MODULE_INFO_CLASS Class,_Out_ PVOID Buffer,_Inout_ PDWORD pdwSize)
DWORD None iphlpapi.GetAdapterIndex(_In_ LPWSTR AdapterName,_Inout_ PULONG IfIndex)
DWORD None iphlpapi.NotifyAddrChange(_Out_ PHANDLE Handle,_In_ LPOVERLAPPED overlapped)
BOOL WINAPI user32.AdjustWindowRectEx(_Inout_ LPRECT lpRect,_In_ DWORD dwStyle,_In_ BOOL bMenu,_In_ DWORD dwExStyle)
VOID NETIOAPI iphlpapi.InitializeUnicastIpAddressEntry(_Out_ PMIB_UNICASTIPADDRESS_ROW Row)
ULONG WINAPI iphlpapi.GetTcp6Table(_Out_ PMIB_TCP6TABLE TcpTable,_Inout_ PULONG SizePointer,_In_ BOOL Order)
DWORD None iphlpapi.GetUniDirectionalAdapterInfo(_Out_ PIP_UNIDIRECTIONAL_ADAPTER_ADDRESS pIPIfInfo,_Out_ PULONG dwOutBufLen)
DWORD None iphlpapi.AddIPAddress(_In_ IPAddr Address,_In_ IPMask IpMask,_In_ DWORD IfIndex,_Out_ PULONG NTEContext,_Out_ PULONG NTEInstance)
HRESULT None ole32.CreateBindCtx(_In_ DWORD reserved,_Out_ LPBC *ppbc)
DWORD None iphlpapi.IpReleaseAddress(_In_ PIP_ADAPTER_INDEX_MAP AdapterInfo)
DWORD None iphlpapi.GetFriendlyIfIndex(_In_ DWORD IfIndex)
DWORD None iphlpapi.GetIpErrorString(_In_ IP_STATUS ErrorCode,_Out_ PWCHAR Buffer,_Inout_ PDWORD Size)
NETIOAPI_API None iphlpapi.GetAnycastIpAddressEntry(_Inout_ PMIB_ANYCASTIPADDRESS_ROW Row)
BOOL None kernel32.EnumSystemCodePages(_In_ CODEPAGE_ENUMPROC lpCodePageEnumProc,_In_ DWORD dwFlags)
BOOL None kernel32.EnumSystemCodePagesW(_In_ CODEPAGE_ENUMPROC lpCodePageEnumProc,_In_ DWORD dwFlags)
BOOL None kernel32.EnumSystemCodePagesA(_In_ CODEPAGE_ENUMPROC lpCodePageEnumProc,_In_ DWORD dwFlags)
ULONG WINAPI iphlpapi.CreatePersistentUdpPortReservation(_In_ USHORT StartPort,_In_ USHORT NumberOfPorts,_Out_ PULONG64 Token)
BOOL WINAPI advapi32.SetKernelObjectSecurity(_In_ HANDLE Handle,_In_ SECURITY_INFORMATION SecurityInformation,_In_ PSECURITY_DESCRIPTOR SecurityDescriptor)
DWORD None iphlpapi.IpRenewAddress(_In_ PIP_ADAPTER_INDEX_MAP AdapterInfo)
DWORD None kernel32.IsValidNLSVersion(_In_ NLS_FUNCTION function,_In_opt_ LPCWSTR lpLocaleName,_In_ LPNLSVERSIONINFOEX lpVersionInformation)
BOOL None iphlpapi.GetRTTAndHopCount(_In_ IPAddr DestIpAddress,_Out_ PULONG HopCount,_In_ ULONG MaxHops,_Out_ PULONG RTT)
PCHAR WINAPI iphlpapi.if_indextoname(_In_ NET_IFINDEX InterfaceIndex,_Out_ PCHAR InterfaceName)
NETIOAPI_API None iphlpapi.GetMulticastIpAddressEntry(_Inout_ PMIB_MULTICASTIPADDRESS_ROW Row)
DWORD None iphlpapi.SendARP(_In_ IPAddr DestIP,_In_ IPAddr SrcIP,_Out_ PULONG pMacAddr,_Inout_ PULONG PhyAddrLen)
NETIOAPI_API None iphlpapi.GetAnycastIpAddressTable(_In_ ADDRESS_FAMILY Family,_Out_ PMIB_ANYCASTIPADDRESS_TABLE *Table)
DWORD None iphlpapi.GetTcpStatisticsEx(_Out_ PMIB_TCPSTATS pStats,_In_ DWORD dwFamily)
DWORD None iphlpapi.GetBestRoute(_In_ DWORD dwDestAddr,_In_ DWORD dwSourceAddr,_Out_ PMIB_IPFORWARDROW pBestRoute)
BOOL WINAPI user32.IsCharLower(_In_ TCHAR ch)
BOOL WINAPI user32.IsCharLowerA(_In_ TCHAR ch)
HRESULT None None.StringCbLength(_In_ LPCTSTR psz,_In_ size_t cbMax,_Out_ size_t *pcb)
HRESULT None None.StringCbLengthW(_In_ LPCTSTR psz,_In_ size_t cbMax,_Out_ size_t *pcb)
HRESULT None None.StringCbLengthA(_In_ LPCTSTR psz,_In_ size_t cbMax,_Out_ size_t *pcb)
UINT WINAPI user32.ArrangeIconicWindows(_In_ HWND hWnd)
HRESULT None ole32.CoGetStandardMarshal(_In_ REFIID riid,_In_ LPUNKNOWN pUnk,_In_ DWORD dwDestContext,_In_opt_ LPVOID pvDestContext,_In_ DWORD mshlflags,_Out_ LPMARSHAL *ppMarshal)
HRESULT None ole32.CoGetContextToken(_Out_ ULONG_PTR *pToken)
BOOL None iphlpapi.IcmpCloseHandle(_In_ HANDLE IcmpHandle)
BOOL WINAPI user32.AnimateWindow(_In_ HWND hwnd,_In_ DWORD dwTime,_In_ DWORD dwFlags)
DWORD None iphlpapi.FlushIpNetTable(_In_ DWORD dwIfIndex)
BOOL WINAPI user32.OemToCharBuff(_In_ LPCSTR lpszSrc,_Out_ LPTSTR lpszDst,_In_ DWORD cchDstLength)
BOOL WINAPI user32.OemToCharBuffW(_In_ LPCSTR lpszSrc,_Out_ LPTSTR lpszDst,_In_ DWORD cchDstLength)
BOOL WINAPI user32.OemToCharBuffA(_In_ LPCSTR lpszSrc,_Out_ LPTSTR lpszDst,_In_ DWORD cchDstLength)
HWND WINAPI user32.RealChildWindowFromPoint(_In_ HWND hwndParent,_In_ POINT ptParentClientCoords)
DWORD None iphlpapi.GetIpAddrTable(_Out_ PMIB_IPADDRTABLE pIpAddrTable,_Inout_ PULONG pdwSize,_In_ BOOL bOrder)
DWORD None iphlpapi.GetTcpStatisticsEx2(_Out_ PMIB_TCPSTATS2 pStats,_In_ DWORD dwFamily)
NETIOAPI_API None iphlpapi.GetIfTable2(_Out_ PMIB_IF_TABLE2 *Table)
NETIOAPI_API None iphlpapi.GetUnicastIpAddressTable(_In_ ADDRESS_FAMILY Family,_Out_ PMIB_UNICASTIPADDRESS_TABLE *Table)
PUIDLIST_RELATIVE None shell32.ILGetNext(_In_opt_ PCUIDLIST_RELATIVE pidl)
LONG NTAPI ntdll.RtlIpv4StringToAddressEx(_In_ PCTSTR AddressString,_In_ BOOLEAN Strict,_Out_ IN_ADDR *Address,_Out_ PUSHORT Port)
LONG NTAPI ntdll.RtlIpv4StringToAddressExW(_In_ PCTSTR AddressString,_In_ BOOLEAN Strict,_Out_ IN_ADDR *Address,_Out_ PUSHORT Port)
LONG NTAPI ntdll.RtlIpv4StringToAddressEx(_In_ PCTSTR AddressString,_In_ BOOLEAN Strict,_Out_ IN_ADDR *Address,_Out_ PUSHORT Port)
DWORD None iphlpapi.GetOwnerModuleFromUdpEntry(_In_ PMIB_UDPROW_OWNER_MODULE pUdpEntry,_In_ TCPIP_OWNER_MODULE_INFO_CLASS Class,_Out_ PVOID Buffer,_Inout_ PDWORD pdwSize)
NETIO_STATUS WINAPI iphlpapi.ConvertLengthToIpv4Mask(_In_ ULONG MaskLength,_Out_ PULONG Mask)
DWORD None iphlpapi.GetExtendedTcpTable(_Out_ PVOID pTcpTable,_Inout_ PDWORD pdwSize,_In_ BOOL bOrder,_In_ ULONG ulAf,_In_ TCP_TABLE_CLASS TableClass,_In_ ULONG Reserved)
LONG NTAPI ntdll.RtlEthernetStringToAddress(_In_ PCTSTR S,_Out_ PCTSTR *Terminator,_Out_ DL_EUI48 *Addr)
LONG NTAPI ntdll.RtlEthernetStringToAddressW(_In_ PCTSTR S,_Out_ PCTSTR *Terminator,_Out_ DL_EUI48 *Addr)
LONG NTAPI ntdll.RtlEthernetStringToAddressA(_In_ PCTSTR S,_Out_ PCTSTR *Terminator,_Out_ DL_EUI48 *Addr)
BOOL WINAPI user32.IsHungAppWindow(_In_ HWND hWnd)
BOOL None None.WlxQueryClientCredentials(_Out_ PWLX_CLIENT_CREDENTIALS_INFO_V1_0 pCred)
SOCKET None None.WPUCreateSocketHandle(_In_ DWORD dwCatalogEntryId,_In_ DWORD_PTR dwContext,_Out_ LPINT lpErrno)
NETIOAPI_API None iphlpapi.NotifyStableUnicastIpAddressTable(_In_ ADDRESS_FAMILY Family,_Inout_ PMIB_UNICASTIPADDRESS_TABLE *Table,_In_ PSTABLE_UNICAST_IPADDRESS_TABLE_CALLBACK CallerCallback,_In_ PVOID CallerContext,_Inout_ HANDLE *NotificationHandle)
HWND WINAPI user32.WindowFromPoint(_In_ POINT Point)
DWORD None iphlpapi.NotifyRouteChange(_Out_ PHANDLE Handle,_In_ LPOVERLAPPED overlapped)
ULONG WINAPI iphlpapi.ResolveNeighbor(_In_ SOCKADDR *NetworkAddress,_Out_ PVOID PhysicalAddress,_Inout_ PULONG PhysicalAddressLength)
NETIOAPI_API None iphlpapi.GetIpPathTable(_In_ ADDRESS_FAMILY Family,_Out_ PMIB_IPPATH_TABLE *Table)
LONG NTAPI ntdll.RtlIpv6StringToAddress(_In_ PCTSTR S,_Out_ PCTSTR *Terminator,_Out_ IN6_ADDR *Addr)
LONG NTAPI ntdll.RtlIpv6StringToAddressW(_In_ PCTSTR S,_Out_ PCTSTR *Terminator,_Out_ IN6_ADDR *Addr)
LONG NTAPI ntdll.RtlIpv6StringToAddressA(_In_ PCTSTR S,_Out_ PCTSTR *Terminator,_Out_ IN6_ADDR *Addr)
NTSTATUS NTAPI None.SpLsaModeInitialize(_In_ ULONG LsaVersion,_Out_ PULONG PackageVersion,_Out_ PSECPKG_FUNCTION_TABLE *ppTables,_Out_ PULONG pcTables)
VOID None None.LsaApLogonTerminated(_In_ PLUID LogonId)
NETIOAPI_API None iphlpapi.GetIfStackTable(_Out_ PMIB_IFSTACK_TABLE *Table)
HRESULT None ole32.CoReleaseMarshalData(_In_ LPSTREAM pStm)
HRESULT None ole32.CoSetProxyBlanket(_In_ IUnknown *pProxy,_In_ DWORD dwAuthnSvc,_In_ DWORD dwAuthzSvc,_In_opt_ OLECHAR *pServerPrincName,_In_ DWORD dwAuthnLevel,_In_ DWORD dwImpLevel,_In_opt_ RPC_AUTH_IDENTITY_HANDLE pAuthInfo,_In_ DWORD dwCapabilities)
NETIOAPI_API None iphlpapi.GetIpInterfaceTable(_In_ ADDRESS_FAMILY Family,_Out_ PMIB_IPINTERFACE_TABLE *Table)
VOID NETIOAPI_API_ iphlpapi.FreeMibTable(_In_ PVOID Memory)
DWORD None iphlpapi.SetIpNetEntry(_In_ PMIB_IPNETROW pArpEntry)
NETIOAPI_API None iphlpapi.GetIpForwardTable2(_In_ ADDRESS_FAMILY Family,_Out_ PMIB_IPFORWARD_TABLE2 *Table)
DWORD None iphlpapi.GetOwnerModuleFromUdp6Entry(_In_ PMIB_UDP6ROW_OWNER_MODULE pUdpEntry,_In_ TCPIP_OWNER_MODULE_INFO_CLASS Class,_Out_ PVOID Buffer,_Inout_ PDWORD pdwSize)
BOOL None shell32.ILIsEqual(_In_ PCIDLIST_ABSOLUTE pidl1,_In_ PCIDLIST_ABSOLUTE pidl2)
DWORD WINAPI iphlpapi.AllocateAndGetUdpExTableFromStack(_Out_ PVOID *ppUDPTable,_In_ BOOL bOrder,_In_ HANDLE hHeap,_In_ DWORD dwFlags,_In_ DWORD dwFamily)
NETIOAPI_API None iphlpapi.GetIpForwardEntry2(_Inout_ PMIB_IPFORWARD_ROW2 Row)
BOOL WINAPI userenv.CreateEnvironmentBlock(_Out_ LPVOID *lpEnvironment,_In_opt_ HANDLE hToken,_In_ BOOL bInherit)
DWORD WINAPI iphlpapi.IcmpSendEcho2(_In_ HANDLE IcmpHandle,_In_opt_ HANDLE Event,_In_opt_ PIO_APC_ROUTINE ApcRoutine,_In_opt_ PVOID ApcContext,_In_ IPAddr DestinationAddress,_In_ LPVOID RequestData,_In_ WORD RequestSize,_In_opt_ PIP_OPTION_INFORMATION RequestOptions,_Out_ LPVOID ReplyBuffer,_In_ DWORD ReplySize,_In_ DWORD Timeout)
NETIOAPI_API None iphlpapi.NotifyRouteChange2(_In_ ADDRESS_FAMILY Family,_In_ PIPFORWARD_CHANGE_CALLBACK Callback,_In_ PVOID CallerContext,_In_ BOOLEAN InitialNotification,_Inout_ HANDLE *NotificationHandle)
DWORD None credui.CredUIReadSSOCredW(_In_ PCWSTR pszRealm,_Out_ PWSTR *ppszUsername)
NTSTATUS None None.SpInitialize(_In_ ULONG_PTR PackageId,_In_ PSECPKG_PARAMETERS Parameters,_In_ PLSA_SECPKG_FUNCTION_TABLE FunctionTable)
NTSTATUS None advapi32.LsaQueryInformationPolicy(_In_ LSA_HANDLE PolicyHandle,_In_ POLICY_INFORMATION_CLASS InformationClass,_Out_ PVOID *Buffer)
DWORD None iphlpapi.SetIpTTL(_In_ UINT nTTL)
HANDLE None None.RegisterNotification(_In_ SEC_THREAD_START StartFunction,_In_ PVOID Parameter,_In_ ULONG NotificationType,_In_ ULONG NotificationClass,_In_ ULONG NotificationFlags,_In_ ULONG IntervalMinutes,_In_ HANDLE WaitEvent)
DWORD None iphlpapi.GetTcpStatistics(_Out_ PMIB_TCPSTATS pStats)
NETIOAPI_API None iphlpapi.SetIpInterfaceEntry(_Inout_ PMIB_IPINTERFACE_ROW Row)
NET_IFINDEX WINAPI iphlpapi.if_nametoindex(_In_ PCSTR InterfaceName)
LONG WINAPI winscard.SCardCancel(_In_ SCARDCONTEXT hContext)
VOID None iphlpapi.InitializeIpInterfaceEntry(_Inout_ PMIB_IPINTERFACE_ROW Row)
DWORD None iphlpapi.GetIpNetTable(_Out_ PMIB_IPNETTABLE pIpNetTable,_Inout_ PULONG pdwSize,_In_ BOOL bOrder)
DWORD WINAPI iphlpapi.EnableRouter(HANDLE *pHandle None,OVERLAPPED *pOverlapped None)
ULONG WINAPI iphlpapi.GetPerTcp6ConnectionEStats(PMIB_TCP6ROW Row None,TCP_ESTATS_TYPE EstatsType None,_Out_ PUCHAR Rw,ULONG RwVersion None,ULONG RwSize None,_Out_ PUCHAR Ros,ULONG RosVersion None,ULONG RosSize None,_Out_ PUCHAR Rod,ULONG RodVersion None,ULONG RodSize None)
LONG WINAPI winscard.SCardLocateCardsByATR(_In_ SCARDCONTEXT hContext,_In_ LPSCARD_ATRMASK rgAtrMasks,_In_ DWORD cAtrs,_Inout_ LPSCARD_READERSTATE rgReaderStates,_In_ DWORD cReaders)
LONG WINAPI winscard.SCardLocateCardsByATRW(_In_ SCARDCONTEXT hContext,_In_ LPSCARD_ATRMASK rgAtrMasks,_In_ DWORD cAtrs,_Inout_ LPSCARD_READERSTATE rgReaderStates,_In_ DWORD cReaders)
LONG WINAPI winscard.SCardLocateCardsByATRA(_In_ SCARDCONTEXT hContext,_In_ LPSCARD_ATRMASK rgAtrMasks,_In_ DWORD cAtrs,_Inout_ LPSCARD_READERSTATE rgReaderStates,_In_ DWORD cReaders)
LONG WINAPI None.SCardGetReaderIcon(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReaderName,_Out_ LPBYTE pbIcon,_Inout_ LPDWORD pcbIcon)
NETIOAPI_API None iphlpapi.GetIpPathEntry(_Inout_ PMIB_IPPATH_ROW Row)
DWORD None iphlpapi.GetInterfaceInfo(_Out_ PIP_INTERFACE_INFO pIfTable,_Inout_ PULONG dwOutBufLen)
NTSTATUS None None.CallPackagePassthrough(_In_ PUNICODE_STRING AuthenticationPackage,_In_ PVOID ClientBufferBase,_In_ PVOID ProtocolSubmitBuffer,_In_ ULONG SubmitBufferLength,_Out_ PVOID *ProtocolReturnBuffer,_Out_ PULONG ReturnBufferLength,_Out_ PNTSTATUS ProtocolStatus)
SECURITY_STATUS SEC_Entry secur32.FreeContextBuffer(_In_ PVOID pvContextBuffer)
NTSTATUS None None.SpVerifySignature(_In_ LSA_SEC_HANDLE ContextHandle,_In_ PSecBufferDesc MessageBuffers,_In_ ULONG MessageSequenceNumber,_Out_ PULONG QualityOfProtection)
VOID WINAPI sas.SendSAS(_In_ BOOL AsUser)
DWORD APIENTRY None.NPLogonNotify(_In_ PLUID lpLogon,_In_ LPCWSTR lpAuthentInfoType,_In_ LPVOID lpAuthentInfo,_In_ LPCWSTR lpPreviousAuthentInfoType,_In_ LPVOID lpPreviousAuthentInfo,_In_ LPWSTR lpStationName,_In_ LPVOID StationHandle,_Out_ LPWSTR *lpLogonScript)
NETIOAPI_API None iphlpapi.GetIpNetTable2(_In_ ADDRESS_FAMILY Family,_Out_ PMIB_IPNET_TABLE2 *Table)
NTSTATUS NTAPI advapi32.LsaQueryForestTrustInformation(_In_ LSA_HANDLE PolicyHandle,_In_ PLSA_UNICODE_STRING TrustedDomainName,_Out_ PLSA_FOREST_TRUST_INFORMATION *ForestTrustInfo)
HWND WINAPI user32.GetAncestor(_In_ HWND hwnd,_In_ UINT gaFlags)
DWORD None None.NPFMXGetPermHelp(_In_ LPTSTR lpDriveName,_In_ DWORD nType,_In_ BOOL fDirectory,_Inout_ LPVOID lpBuffer,_Inout_ LPDWORD lpBufferSize,_Out_ LPDWORD lpnHelpContext)
HRESULT None None.StringCbCatNEx(_Inout_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc,_In_ size_t cbMaxAppend,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCbCatNExW(_Inout_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc,_In_ size_t cbMaxAppend,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCbCatNExA(_Inout_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc,_In_ size_t cbMaxAppend,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags)
SECURITY_STATUS None credui.SspiPromptForCredentials(_In_ PCTSTR pszTargetName,_In_ PCREDUI_INFOW pUiInfo,_In_ DWORD dwAuthError,_In_ PCTSTR pszPackage,_In_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE pInputAuthIdentity,_Out_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE *ppAuthIdentity,_Inout_opt_ BOOL *pfSave,_In_ DWORD dwFlags)
SECURITY_STATUS None credui.SspiPromptForCredentialsW(_In_ PCTSTR pszTargetName,_In_ PCREDUI_INFOW pUiInfo,_In_ DWORD dwAuthError,_In_ PCTSTR pszPackage,_In_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE pInputAuthIdentity,_Out_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE *ppAuthIdentity,_Inout_opt_ BOOL *pfSave,_In_ DWORD dwFlags)
SECURITY_STATUS None credui.SspiPromptForCredentialsA(_In_ PCTSTR pszTargetName,_In_ PCREDUI_INFOW pUiInfo,_In_ DWORD dwAuthError,_In_ PCTSTR pszPackage,_In_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE pInputAuthIdentity,_Out_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE *ppAuthIdentity,_Inout_opt_ BOOL *pfSave,_In_ DWORD dwFlags)
BOOL WINAPI advapi32.CredProtect(_In_ BOOL fAsSelf,_In_ LPTSTR pszCredentials,_In_ DWORD cchCredentials,_Out_ LPTSTR pszProtectedCredentials,_Inout_ DWORD *pcchMaxChars,_Out_ CRED_PROTECTION_TYPE *ProtectionType)
BOOL WINAPI advapi32.CredProtectW(_In_ BOOL fAsSelf,_In_ LPTSTR pszCredentials,_In_ DWORD cchCredentials,_Out_ LPTSTR pszProtectedCredentials,_Inout_ DWORD *pcchMaxChars,_Out_ CRED_PROTECTION_TYPE *ProtectionType)
BOOL WINAPI advapi32.CredProtectA(_In_ BOOL fAsSelf,_In_ LPTSTR pszCredentials,_In_ DWORD cchCredentials,_Out_ LPTSTR pszProtectedCredentials,_Inout_ DWORD *pcchMaxChars,_Out_ CRED_PROTECTION_TYPE *ProtectionType)
ULONG WINAPI iphlpapi.GetTcpTable2(_Out_ PMIB_TCPTABLE2 TcpTable,_Inout_ PULONG SizePointer,_In_ BOOL Order)
LONG WINAPI winscard.SCardAudit(_In_ SCARDCONTEXT hContext,_In_ DWORD dwEvent)
LONG WINAPI winscard.SCardListReaders(_In_ SCARDCONTEXT hContext,_In_opt_ LPCTSTR mszGroups,_Out_ LPTSTR mszReaders,_Inout_ LPDWORD pcchReaders)
LONG WINAPI winscard.SCardListReadersW(_In_ SCARDCONTEXT hContext,_In_opt_ LPCTSTR mszGroups,_Out_ LPTSTR mszReaders,_Inout_ LPDWORD pcchReaders)
LONG WINAPI winscard.SCardListReadersA(_In_ SCARDCONTEXT hContext,_In_opt_ LPCTSTR mszGroups,_Out_ LPTSTR mszReaders,_Inout_ LPDWORD pcchReaders)
LONG WINAPI winscard.SCardListReaderGroups(_In_ SCARDCONTEXT hContext,_Out_ LPTSTR mszGroups,_Inout_ LPDWORD pcchGroups)
LONG WINAPI winscard.SCardListReaderGroupsW(_In_ SCARDCONTEXT hContext,_Out_ LPTSTR mszGroups,_Inout_ LPDWORD pcchGroups)
LONG WINAPI winscard.SCardListReaderGroupsA(_In_ SCARDCONTEXT hContext,_Out_ LPTSTR mszGroups,_Inout_ LPDWORD pcchGroups)
DWORD None None.NPCloseEnum(_In_ HANDLE hEnum)
BOOL WINAPI iphlpapi.CancelSecurityHealthChangeNotify(LPOVERLAPPED notifyOverlapped None)
DWORD None iphlpapi.IcmpParseReplies(_In_ LPVOID ReplyBuffer,_In_ DWORD ReplySize)
HRESULT None ole32.CoEnableCallCancellation(_In_opt_ LPVOID pReserved)
DWORD None iphlpapi.CreateProxyArpEntry(_In_ DWORD dwAddress,_In_ DWORD dwMask,_In_ DWORD dwIfIndex)
BOOL WINAPI user32.IsChild(_In_ HWND hWndParent,_In_ HWND hWnd)
BOOL None advapi32.LogonUserEx(_In_ LPTSTR lpszUsername,_In_opt_ LPTSTR lpszDomain,_In_opt_ LPTSTR lpszPassword,_In_ DWORD dwLogonType,_In_ DWORD dwLogonProvider,_Out_opt_ PHANDLE phToken,_Out_opt_ PSID *ppLogonSid,_Out_opt_ PVOID *ppProfileBuffer,_Out_opt_ LPDWORD pdwProfileLength,_Out_opt_ PQUOTA_LIMITS pQuotaLimits)
BOOL None advapi32.LogonUserExW(_In_ LPTSTR lpszUsername,_In_opt_ LPTSTR lpszDomain,_In_opt_ LPTSTR lpszPassword,_In_ DWORD dwLogonType,_In_ DWORD dwLogonProvider,_Out_opt_ PHANDLE phToken,_Out_opt_ PSID *ppLogonSid,_Out_opt_ PVOID *ppProfileBuffer,_Out_opt_ LPDWORD pdwProfileLength,_Out_opt_ PQUOTA_LIMITS pQuotaLimits)
BOOL None advapi32.LogonUserExA(_In_ LPTSTR lpszUsername,_In_opt_ LPTSTR lpszDomain,_In_opt_ LPTSTR lpszPassword,_In_ DWORD dwLogonType,_In_ DWORD dwLogonProvider,_Out_opt_ PHANDLE phToken,_Out_opt_ PSID *ppLogonSid,_Out_opt_ PVOID *ppProfileBuffer,_Out_opt_ LPDWORD pdwProfileLength,_Out_opt_ PQUOTA_LIMITS pQuotaLimits)
HRESULT None None.StringCchCatEx(_Inout_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCchCatExW(_Inout_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCchCatExA(_Inout_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
NETIOAPI_API None iphlpapi.GetIfEntry2(PMIB_IF_ROW2 Row None)
DWORD None iphlpapi.GetPerAdapterInfo(_In_ ULONG IfIndex,_Out_ PIP_PER_ADAPTER_INFO pPerAdapterInfo,_In_ PULONG pOutBufLen)
BOOL WINAPI user32.EnumChildWindows(_In_opt_ HWND hWndParent,_In_ WNDENUMPROC lpEnumFunc,_In_ LPARAM lParam)
DWORD None iphlpapi.GetExtendedUdpTable(_Out_ PVOID pUdpTable,_Inout_ PDWORD pdwSize,_In_ BOOL bOrder,_In_ ULONG ulAf,_In_ UDP_TABLE_CLASS TableClass,_In_ ULONG Reserved)
DWORD None None.NPFMXGetPermCaps(_In_ LPTSTR lpDriveName)
LONG WINAPI winscard.SCardWriteCache(_In_ SCARDCONTEXT hContext,_In_ UUID *CardIdentifier,_In_ DWORD FreshnessCounter,_In_ LPTSTR LookupName,_In_ PBYTE Data,_In_ DWORD DataLen)
LONG WINAPI winscard.SCardWriteCacheW(_In_ SCARDCONTEXT hContext,_In_ UUID *CardIdentifier,_In_ DWORD FreshnessCounter,_In_ LPTSTR LookupName,_In_ PBYTE Data,_In_ DWORD DataLen)
LONG WINAPI winscard.SCardWriteCacheA(_In_ SCARDCONTEXT hContext,_In_ UUID *CardIdentifier,_In_ DWORD FreshnessCounter,_In_ LPTSTR LookupName,_In_ PBYTE Data,_In_ DWORD DataLen)
ULONG WINAPI iphlpapi.GetAdaptersAddresses(_In_ ULONG Family,_In_ ULONG Flags,_In_ PVOID Reserved,_Inout_ PIP_ADAPTER_ADDRESSES AdapterAddresses,_Inout_ PULONG SizePointer)
BOOL None advapi32.CredGetSessionTypes(_In_ DWORD MaximumPersistCount,_Out_ LPDWORD MaximumPersist)
NETIOAPI_API None iphlpapi.GetIfTable2Ex(_In_ MIB_IF_TABLE_LEVEL Level,_Out_ PMIB_IF_TABLE2 *Table)
LONG WINAPI winscard.SCardRemoveReaderFromGroup(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReaderName,_In_ LPCTSTR szGroupName)
LONG WINAPI winscard.SCardRemoveReaderFromGroupW(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReaderName,_In_ LPCTSTR szGroupName)
LONG WINAPI winscard.SCardRemoveReaderFromGroupA(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReaderName,_In_ LPCTSTR szGroupName)
HRESULT None ole32.CoInvalidateRemoteMachineBindings(_In_ LPOLESTR pszMachineName)
BOOL None advapi32.CredUnmarshalCredential(_In_ LPCTSTR MarshaledCredential,_Out_ PCRED_MARSHAL_TYPE CredType,_Out_ PVOID *Credential)
BOOL None advapi32.CredUnmarshalCredentialW(_In_ LPCTSTR MarshaledCredential,_Out_ PCRED_MARSHAL_TYPE CredType,_Out_ PVOID *Credential)
BOOL None advapi32.CredUnmarshalCredentialA(_In_ LPCTSTR MarshaledCredential,_Out_ PCRED_MARSHAL_TYPE CredType,_Out_ PVOID *Credential)
SECURITY_STATUS SEC_Entry secur32.ExportSecurityContext(_In_ PCtxtHandle phContext,_In_ Ulong fFlags,_Out_ PSecBuffer pPackedContext,_Out_opt_ HANDLE *pToken)
DWORD None iphlpapi.CreateIpForwardEntry(_In_ PMIB_IPFORWARDROW pRoute)
DWORD None None.NPGetConnectionPerformance(_In_ LPTSTR lpRemoteName,_Out_ LPNETCONNECTINFOSTRUCT lpNetConnectInfo)
SEC_ENTRY None None.GetCredentialKey(_In_ PVOID ProviderHandle,_In_opt_ PLUID LogonId,_In_opt_ PVOID AuthBuffer,_In_ ULONG AuthBufferSize,_In_ ULONG Reserved,_Out_ PUNICODE_STRING CredentialKey)
LONG WINAPI winscard.SCardConnect(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReader,_In_ DWORD dwShareMode,_In_ DWORD dwPreferredProtocols,_Out_ LPSCARDHANDLE phCard,_Out_ LPDWORD pdwActiveProtocol)
LONG WINAPI winscard.SCardConnectW(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReader,_In_ DWORD dwShareMode,_In_ DWORD dwPreferredProtocols,_Out_ LPSCARDHANDLE phCard,_Out_ LPDWORD pdwActiveProtocol)
LONG WINAPI winscard.SCardConnectA(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReader,_In_ DWORD dwShareMode,_In_ DWORD dwPreferredProtocols,_Out_ LPSCARDHANDLE phCard,_Out_ LPDWORD pdwActiveProtocol)
SECURITY_STATUS WINAPI secur32.QueryContextAttributesEx(_In_ PCtxtHandle phContext,_In_ ULONG ulAttribute,_Out_ PVOID pBuffer,_In_ ULONG cbBuffer)
SECURITY_STATUS WINAPI secur32.QueryContextAttributesExW(_In_ PCtxtHandle phContext,_In_ ULONG ulAttribute,_Out_ PVOID pBuffer,_In_ ULONG cbBuffer)
SECURITY_STATUS WINAPI secur32.QueryContextAttributesExA(_In_ PCtxtHandle phContext,_In_ ULONG ulAttribute,_Out_ PVOID pBuffer,_In_ ULONG cbBuffer)
DWORD WINAPI iphlpapi.IcmpSendEcho2Ex(_In_ HANDLE IcmpHandle,_In_opt_ HANDLE Event,_In_opt_ PIO_APC_ROUTINE ApcRoutine,_In_opt_ PVOID ApcContext,_In_ IPAddr SourceAddress,_In_ IPAddr DestinationAddress,_In_ LPVOID RequestData,_In_ WORD RequestSize,_In_opt_ PIP_OPTION_INFORMATION RequestOptions,_Out_ LPVOID ReplyBuffer,_In_ DWORD ReplySize,_In_ DWORD Timeout)
NTSTATUS None None.AuditAccountLogon(_In_ ULONG AuditId,_In_ BOOLEAN Success,_In_ PUNICODE_STRING Source,_In_ PUNICODE_STRING ClientName,_In_ PUNICODE_STRING MappedName,_In_ NTSTATUS Status)
SECURITY_STATUS None sspicli.SspiExcludePackage(_In_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE AuthIdentity,_In_ PCWSTR pszPackageName,_Out_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE *ppNewAuthIdentity)
HRESULT None None.StringCchVPrintfEx(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags,_In_ LPCTSTR pszFormat,_In_ va_list argList)
HRESULT None None.StringCchVPrintfExW(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags,_In_ LPCTSTR pszFormat,_In_ va_list argList)
HRESULT None None.StringCchVPrintfExA(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags,_In_ LPCTSTR pszFormat,_In_ va_list argList)
SECURITY_STATUS WINAPI schannel.SslGetServerIdentity(_In_ PBYTE ClientHello,_In_ DWORD ClientHelloSize,_Out_ PBYTE *ServerIdentity,_Out_ PDWORD ServerIdentitySize,_In_ DWORD Flags)
SECURITY_STATUS None sspicli.SspiCopyAuthIdentity(_In_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE AuthData,_Out_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE *AuthDataCopy)
BOOL WINAPI user32.SetForegroundWindow(_In_ HWND hWnd)
DWORD None iphlpapi.NhpAllocateAndGetInterfaceInfoFromStack(IP_INTERFACE_NAME_INFO ppTable None,PDWORD pdwCount None,BOOL bOrder None,HANDLE hHeap None,DWORD dwFlags None)
NTSTATUS NTAPI advapi32.LsaSetForestTrustInformation(_In_ LSA_HANDLE PolicyHandle,_In_ PLSA_UNICODE_STRING TrustedDomainName,_In_ PLSA_FOREST_TRUST_INFORMATION ForestTrustInfo,_In_ BOOLEAN CheckOnly,_Out_ PLSA_FOREST_TRUST_COLLISION_INFORMATION *CollisionInfo)
HRESULT None None.StringCbCatEx(_Inout_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCbCatExW(_Inout_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCbCatExA(_Inout_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags)
NTSTATUS None None.SpFreeCredentialsHandle(_In_ LSA_SEC_HANDLE CredentialHandle)
SECURITY_STATUS SEC_Entry secur32.AcquireCredentialsHandle(_In_ SEC_CHAR *pszPrincipal,_In_ SEC_CHAR *pszPackage,_In_ ULONG fCredentialUse,_In_ PLUID pvLogonID,_In_ PVOID pAuthData,_In_ SEC_GET_KEY_FN pGetKeyFn,_In_ PVOID pvGetKeyArgument,_Out_ PCredHandle phCredential,_Out_ PTimeStamp ptsExpiry)
SECURITY_STATUS SEC_Entry secur32.AcquireCredentialsHandleW(_In_ SEC_CHAR *pszPrincipal,_In_ SEC_CHAR *pszPackage,_In_ ULONG fCredentialUse,_In_ PLUID pvLogonID,_In_ PVOID pAuthData,_In_ SEC_GET_KEY_FN pGetKeyFn,_In_ PVOID pvGetKeyArgument,_Out_ PCredHandle phCredential,_Out_ PTimeStamp ptsExpiry)
SECURITY_STATUS SEC_Entry secur32.AcquireCredentialsHandleA(_In_ SEC_CHAR *pszPrincipal,_In_ SEC_CHAR *pszPackage,_In_ ULONG fCredentialUse,_In_ PLUID pvLogonID,_In_ PVOID pAuthData,_In_ SEC_GET_KEY_FN pGetKeyFn,_In_ PVOID pvGetKeyArgument,_Out_ PCredHandle phCredential,_Out_ PTimeStamp ptsExpiry)
LPTSTR WINAPI user32.CharLower(_Inout_ LPTSTR lpsz)
LPTSTR WINAPI user32.CharLowerW(_Inout_ LPTSTR lpsz)
LPTSTR WINAPI user32.CharLowerA(_Inout_ LPTSTR lpsz)
SECURITY_STATUS SEC_ENTRY secur32.SaslGetContextOption(_In_ PCtxtHandle ContextHandle,_In_ ULONG Option,_Out_ PVOID Value,_Out_ ULONG Size,_Out_opt_ PULONG Needed)
ULONG WINAPI iphlpapi.GetTcp6Table2(_Out_ PMIB_TCP6TABLE2 TcpTable,_Inout_ PULONG SizePointer,_In_ BOOL Order)
NTSTATUS None advapi32.LsaOpenPolicy(_In_ PLSA_UNICODE_STRING SystemName,_In_ PLSA_OBJECT_ATTRIBUTES ObjectAttributes,_In_ ACCESS_MASK DesiredAccess,_Inout_ PLSA_HANDLE PolicyHandle)
LONG WINAPI winscard.SCardGetStatusChange(_In_ SCARDCONTEXT hContext,_In_ DWORD dwTimeout,_Inout_ LPSCARD_READERSTATE rgReaderStates,_In_ DWORD cReaders)
LONG WINAPI winscard.SCardGetStatusChangeW(_In_ SCARDCONTEXT hContext,_In_ DWORD dwTimeout,_Inout_ LPSCARD_READERSTATE rgReaderStates,_In_ DWORD cReaders)
LONG WINAPI winscard.SCardGetStatusChangeA(_In_ SCARDCONTEXT hContext,_In_ DWORD dwTimeout,_Inout_ LPSCARD_READERSTATE rgReaderStates,_In_ DWORD cReaders)
HRESULT None azroles.get_UserDn([out] BSTR *pbstrProp)
SECURITY_STATUS SEC_ENTRY secur32.SaslEnumerateProfiles(_Out_ LPTSTR *ProfileList,_Out_ ULONG *ProfileCount)
SECURITY_STATUS SEC_ENTRY secur32.SaslEnumerateProfilesW(_Out_ LPTSTR *ProfileList,_Out_ ULONG *ProfileCount)
SECURITY_STATUS SEC_ENTRY secur32.SaslEnumerateProfilesA(_Out_ LPTSTR *ProfileList,_Out_ ULONG *ProfileCount)
DWORD None iphlpapi.Icmp6ParseReplies(_In_ LPVOID ReplyBuffer,_In_ DWORD ReplySize)
DWORD None None.NPPropertyDialog(_In_ HWND hwndParent,_In_ DWORD iButtonDlg,_In_ DWORD nPropSel,_In_ LPTSTR lpFileName,_In_ DWORD nType)
SECURITY_STATUS None sspicli.SspiEncodeStringsAsAuthIdentity(_In_ PCWSTR pszUserName,_In_ PCWSTR pszDomainName,_In_ PCWSTR pszPackedCredentialsString,_Out_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE *ppAuthIdentity)
HWND WINAPI user32.GetParent(_In_ HWND hWnd)
BOOL None advapi32.CredMarshalCredential(_In_ CRED_MARSHAL_TYPE CredType,_In_ PVOID Credential,_Out_ LPTSTR *MarshaledCredential)
BOOL None advapi32.CredMarshalCredentialW(_In_ CRED_MARSHAL_TYPE CredType,_In_ PVOID Credential,_Out_ LPTSTR *MarshaledCredential)
BOOL None advapi32.CredMarshalCredentialA(_In_ CRED_MARSHAL_TYPE CredType,_In_ PVOID Credential,_Out_ LPTSTR *MarshaledCredential)
ULONG WINAPI iphlpapi.LookupPersistentUdpPortReservation(_In_ USHORT StartPort,_In_ USHORT NumberOfPorts,_Out_ PULONG64 Token)
BOOL WINAPI user32.ChangeWindowMessageFilter(_In_ UINT message,_In_ DWORD dwFlag)
LONG WINAPI winscard.SCardTransmit(_In_ SCARDHANDLE hCard,_In_ LPCSCARD_IO_REQUEST pioSendPci,_In_ LPCBYTE pbSendBuffer,_In_ DWORD cbSendLength,_Inout_opt_ LPSCARD_IO_REQUEST pioRecvPci,_Out_ LPBYTE pbRecvBuffer,_Inout_ LPDWORD pcbRecvLength)
NETIOAPI_API None iphlpapi.GetInvertedIfStackTable(_Out_ PMIB_INVERTEDIFSTACK_TABLE *Table)
SECURITY_STATUS None credui.SspiUnmarshalCredUIContext(_In_ PUCHAR MarshaledCredUIContext,_In_ ULONG MarshaledCredUIContextLength,_Out_ PSEC_WINNT_CREDUI_CONTEXT *CredUIContext)
BOOL None None.WlxIsLogoffOk(_In_ PVOID pWlxContext)
DWORD WINAPI credui.CredUIConfirmCredentials(_In_ PCTSTR pszTargetName,_In_ BOOL bConfirm)
DWORD WINAPI credui.CredUIConfirmCredentialsW(_In_ PCTSTR pszTargetName,_In_ BOOL bConfirm)
DWORD WINAPI credui.CredUIConfirmCredentialsA(_In_ PCTSTR pszTargetName,_In_ BOOL bConfirm)
BOOL None None.WlxStartApplication(_In_ PVOID pWlxContext,_In_ PWSTR pszDesktopName,_In_ PVOID pEnvironment,_In_ PWSTR pszCmdLine)
UINT None shell32.DragQueryFile(_In_ HDROP hDrop,_In_ UINT iFile,_Out_ LPTSTR lpszFile,UINT cch None)
UINT None shell32.DragQueryFileW(_In_ HDROP hDrop,_In_ UINT iFile,_Out_ LPTSTR lpszFile,UINT cch None)
UINT None shell32.DragQueryFileA(_In_ HDROP hDrop,_In_ UINT iFile,_Out_ LPTSTR lpszFile,UINT cch None)
BOOL None None.WlxGetSourceDesktop(_In_ HANDLE hWlx,_Out_ PWLX_DESKTOP *ppDesktop)
BOOL None shell32.DragQueryPoint(_In_ HDROP hDrop,_Out_ POINT *lppt)
typedef VOID iphlpapi.WINAPI(*PIO_APC_ROUTINE None None)
BOOL WINAPI user32.AllowSetForegroundWindow(_In_ DWORD dwProcessId)
NTSTATUS None None.RegisterCallback(_In_ ULONG CallbackId,_In_ PLSA_CALLBACK_FUNCTION Callback)
HRESULT None None.StringCbCopy(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc)
HRESULT None None.StringCbCopyW(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc)
HRESULT None None.StringCbCopyA(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc)
HRESULT WINAPI userenv.DeriveRestrictedAppContainerSidFromAppContainerSidAndRestrictedName(_In_ PSID psidAppContainerSid,_In_ PCWSTR pszRestrictedAppContainerName,_Out_ PSID *ppsidRestrictedAppContainerSid)
BOOL WINAPI user32.OpenIcon(_In_ HWND hWnd)
BOOL None shell32.SHGetPathFromIDListEx(_In_ PCIDLIST_ABSOLUTE pidl,_Out_ PWSTR pszPath,DWORD cchPath None,GPFIDL_FLAGS uOpts None)
SECURITY_STATUS None sspicli.SspiEncodeAuthIdentityAsStrings(_In_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE pAuthIdentity,_Out_ PCWSTR *ppszUserName,_Out_ PCWSTR *ppszDomainName,_Out_ PCWSTR *ppszPackedCredentialsString)
SECURITY_STATUS None sspicli.SspiEncodeAuthIdentityAsStringsW(_In_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE pAuthIdentity,_Out_ PCWSTR *ppszUserName,_Out_ PCWSTR *ppszDomainName,_Out_ PCWSTR *ppszPackedCredentialsString)
SECURITY_STATUS None sspicli.SspiEncodeAuthIdentityAsStringsA(_In_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE pAuthIdentity,_Out_ PCWSTR *ppszUserName,_Out_ PCWSTR *ppszDomainName,_Out_ PCWSTR *ppszPackedCredentialsString)
LONG WINAPI winscard.SCardGetCardTypeProviderName(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCardName,_In_ DWORD dwProviderId,_Out_ LPTSTR szProvider,_Inout_ LPDWORD pcchProvider)
LONG WINAPI winscard.SCardGetCardTypeProviderNameW(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCardName,_In_ DWORD dwProviderId,_Out_ LPTSTR szProvider,_Inout_ LPDWORD pcchProvider)
LONG WINAPI winscard.SCardGetCardTypeProviderNameA(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCardName,_In_ DWORD dwProviderId,_Out_ LPTSTR szProvider,_Inout_ LPDWORD pcchProvider)
NTSTATUS None None.SpInstanceInit(_In_ ULONG Version,_In_ PSECPKG_DLL_FUNCTIONS FunctionTable,_Out_ PVOID *UserFunctions)
PIDLIST_RELATIVE None shell32.ILClone(_In_ PCUIDLIST_RELATIVE pidl)
NTSTATUS None None.CreateLogonSession(_In_ PLUID LogonId)
uint32 None wfascim.Rename([in] string NewName)
HRESULT WINAPI ole32.CoDecrementMTAUsage(_In_ CO_MTA_USAGE_COOKIE Cookie)
HRESULT None shell32.SHGetNameFromIDList(_In_ PCIDLIST_ABSOLUTE pidl,_In_ SIGDN sigdnName,_Out_ PWSTR *ppszName)
HWND WINAPI user32.GetLastActivePopup(_In_ HWND hWnd)
BOOL None advapi32.CredRead(_In_ LPCTSTR TargetName,_In_ DWORD Type,_In_ DWORD Flags,_Out_ PCREDENTIAL *Credential)
BOOL None advapi32.CredReadW(_In_ LPCTSTR TargetName,_In_ DWORD Type,_In_ DWORD Flags,_Out_ PCREDENTIAL *Credential)
BOOL None advapi32.CredReadA(_In_ LPCTSTR TargetName,_In_ DWORD Type,_In_ DWORD Flags,_Out_ PCREDENTIAL *Credential)
NTSTATUS NTAPI None.SpExchangeMetaDataFn(_In_ LSA_SEC_HANDLE CredentialHandle,_In_opt_ PUNICODE_STRING TargetName,_In_ ULONG ContextRequirements,_In_ ULONG MetaDataLength,_In_ PUCHAR MetaData,_Inout_ PLSA_SEC_HANDLE ContextHandle)
ULONG WINAPI iphlpapi.SetPerTcpConnectionEStats(PMIB_TCPROW Row None,TCP_ESTATS_TYPE EstatsType None,PUCHAR Rw None,ULONG RwVersion None,ULONG RwSize None,ULONG Offset None)
HRESULT None url.TranslateURL(PCTSTR pcszURL None,DWORD dwInFlags None,_Out_ PTSTR *ppszTranslatedURL)
HRESULT None url.TranslateURLW(PCTSTR pcszURL None,DWORD dwInFlags None,_Out_ PTSTR *ppszTranslatedURL)
HRESULT None url.TranslateURLA(PCTSTR pcszURL None,DWORD dwInFlags None,_Out_ PTSTR *ppszTranslatedURL)
NTSTATUS NTAPI None.Msv1_0SubAuthenticationRoutine(_In_ NETLOGON_LOGON_INFO_CLASS LogonLevel,_In_ PVOID LogonInformation,_In_ ULONG Flags,_In_ PUSER_ALL_INFORMATION UserAll,_Out_ PULONG WhichFields,_Out_ PULONG UserFlags,_Out_ PBOOLEAN Authoritative,_Out_ PLARGE_INTEGER LogoffTime,_Out_ PLARGE_INTEGER KickoffTime)
BOOL WINAPI userenv.GetAllUsersProfileDirectory(_Out_opt_ LPTSTR lpProfileDir,_Inout_ LPDWORD lpcchSize)
BOOL WINAPI userenv.GetAllUsersProfileDirectoryW(_Out_opt_ LPTSTR lpProfileDir,_Inout_ LPDWORD lpcchSize)
BOOL WINAPI userenv.GetAllUsersProfileDirectoryA(_Out_opt_ LPTSTR lpProfileDir,_Inout_ LPDWORD lpcchSize)
BOOL None shell32.ILRemoveLastID(_Inout_opt_ PUIDLIST_RELATIVE pidl)
DWORD None None.NPDeviceMode(_In_ HWND hParent)
BOOL WINAPI advapi32.CredIsProtected(_In_ LPTSTR pszProtectedCredentials,_Out_ CRED_PROTECTION_TYPE *pProtectionType)
BOOL WINAPI advapi32.CredIsProtectedW(_In_ LPTSTR pszProtectedCredentials,_Out_ CRED_PROTECTION_TYPE *pProtectionType)
BOOL WINAPI advapi32.CredIsProtectedA(_In_ LPTSTR pszProtectedCredentials,_Out_ CRED_PROTECTION_TYPE *pProtectionType)
DWORD None None.NPSearchDialog(_In_ HWND hParent,_In_ LPNETRESOURCE lpNetResource,_Out_ LPVOID lpBuffer,_Out_ DWORD cbBuffer,_In_ LPDWORD lpnFlags)
BOOL None None.WlxSetReturnDesktop(_In_ HANDLE hWlx,_In_ PWLX_DESKTOP pDesktop)
SECURITY_STATUS SEC_Entry secur32.InitializeSecurityContext(_In_opt_ PCredHandle phCredential,_In_opt_ PCtxtHandle phContext,_In_opt_ SEC_CHAR *pszTargetName,_In_ ULONG fContextReq,_In_ ULONG Reserved1,_In_ ULONG TargetDataRep,_In_opt_ PSecBufferDesc pInput,_In_ ULONG Reserved2,_Inout_opt_ PCtxtHandle phNewContext,_Inout_opt_ PSecBufferDesc pOutput,_Out_ PULONG pfContextAttr,_Out_opt_ PTimeStamp ptsExpiry)
SECURITY_STATUS SEC_Entry secur32.InitializeSecurityContextW(_In_opt_ PCredHandle phCredential,_In_opt_ PCtxtHandle phContext,_In_opt_ SEC_CHAR *pszTargetName,_In_ ULONG fContextReq,_In_ ULONG Reserved1,_In_ ULONG TargetDataRep,_In_opt_ PSecBufferDesc pInput,_In_ ULONG Reserved2,_Inout_opt_ PCtxtHandle phNewContext,_Inout_opt_ PSecBufferDesc pOutput,_Out_ PULONG pfContextAttr,_Out_opt_ PTimeStamp ptsExpiry)
SECURITY_STATUS SEC_Entry secur32.InitializeSecurityContextA(_In_opt_ PCredHandle phCredential,_In_opt_ PCtxtHandle phContext,_In_opt_ SEC_CHAR *pszTargetName,_In_ ULONG fContextReq,_In_ ULONG Reserved1,_In_ ULONG TargetDataRep,_In_opt_ PSecBufferDesc pInput,_In_ ULONG Reserved2,_Inout_opt_ PCtxtHandle phNewContext,_Inout_opt_ PSecBufferDesc pOutput,_Out_ PULONG pfContextAttr,_Out_opt_ PTimeStamp ptsExpiry)
DWORD None iphlpapi.GetBestInterface(_In_ IPAddr dwDestAddr,_Out_ PDWORD pdwBestIfIndex)
BOOL None None.WPUSetEvent(_In_ WSAEVENT hEvent,_Out_ LPINT lpErrno)
NTSTATUS None None.CrackSingleName(_In_ ULONG FormatOffered,_In_ BOOLEAN PerformAtGC,_In_ PUNICODE_STRING NameInput,_In_opt_ PUNICODE_STRING Prefix,_In_ ULONG RequestedFormat,_Out_ PUNICODE_STRING CrackedName,_Out_ PUNICODE_STRING DnsDomainName,_Out_ PULONG SubStatus)
NTSTATUS WINAPI certpoleng.PstAcquirePrivateKey(_In_ PCCERT_CONTEXT pCert)
SECURITY_STATUS SEC_Entry secur32.QueryCredentialsAttributes(_In_ PCredHandle phCredential,_In_ ULONG ulAttribute,_Out_ PVOID pBuffer)
SECURITY_STATUS SEC_Entry secur32.QueryCredentialsAttributesW(_In_ PCredHandle phCredential,_In_ ULONG ulAttribute,_Out_ PVOID pBuffer)
SECURITY_STATUS SEC_Entry secur32.QueryCredentialsAttributesA(_In_ PCredHandle phCredential,_In_ ULONG ulAttribute,_Out_ PVOID pBuffer)
NT_STATUS None None.SspiDecryptAuthIdentityEx(_In_ ULONG Options,_Inout_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE EncryptedAuthData)
NTSTATUS None None.CancelNotification(_In_ HANDLE NotifyHandle)
NTSTATUS None secur32.LsaRegisterLogonProcess(_In_ PLSA_STRING LogonProcessName,_Out_ PHANDLE LsaHandle,_Out_ PLSA_OPERATIONAL_MODE SecurityMode)
BOOLEAN None sspicli.SspiIsAuthIdentityEncrypted(_In_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE EncryptedAuthData)
NTSTATUS None None.ClientCallback(_In_ PCHAR Callback,_In_ ULONG_PTR Argument1,_In_ ULONG_PTR Argument2,_In_ PSecBuffer Input,_Out_ PSecBuffer Output)
DWORD None None.NPFMXEditPerm(_In_ LPTSTR lpDriveName,_In_ HWND hwndFMX,_In_ DWORD nType)
NTSTATUS None None.LsaApCallPackage(_In_ PLSA_CLIENT_REQUEST ClientRequest,_In_ PVOID ProtocolSubmitBuffer,_In_ PVOID ClientBufferBase,_In_ ULONG SubmitBufferLength,_Out_ PVOID *ProtocolReturnBuffer,_Out_ PULONG ReturnBufferLength,_Out_ PNTSTATUS ProtocolStatus)
PVOID NTAPI None.CreateSharedMemory(_In_ ULONG MaxSize,_In_ ULONG InitialSize)
LONG WINAPI winscard.SCardIsValidContext(_In_ SCARDCONTEXT hContext)
BOOL None None.WlxCreateUserDesktop(_In_ HANDLE hWlx,_In_ HANDLE hToken,_In_ DWORD Flags,_In_ PWSTR pszDesktopName,_Out_ PWLX_DESKTOP *ppDesktop)
LONG WINAPI None.SCardListReadersWithDeviceInstanceId(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szDeviceInstanceId,_Out_opt_ LPTSTR mszReaders,_Inout_ LPDWORD pcchReaders)
SECURITY_STATUS None sspicli.SspiPrepareForCredWrite(_In_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE AuthIdentity,_In_ PCWSTR pszTargetName,_Out_ PULONG pCredmanCredentialType,_Out_ PCWSTR *ppszCredmanTargetName,_Out_ PCWSTR *ppszCredmanUserName,_Out_ PUCHAR *ppCredentialBlob,_Out_ PULONG pCredentialBlobSize)
BOOL None None.WlxRemoveStatusMessage(_In_ PVOID pWlxContext)
VOID None None.WlxDisplayLockedNotice(_In_ PVOID pWlxContext)
LONG WINAPI winscard.SCardGetTransmitCount(_In_ SCARDHANDLE hCard,_Out_ LPDWORD pcTransmitCount)
LONG WINAPI scarddlg.SCardUIDlgSelectCard(_In_ LPOPENCARDNAME_EX pDlgStruc)
LONG WINAPI scarddlg.SCardUIDlgSelectCardW(_In_ LPOPENCARDNAME_EX pDlgStruc)
LONG WINAPI scarddlg.SCardUIDlgSelectCardA(_In_ LPOPENCARDNAME_EX pDlgStruc)
NTSTATUS None None.SpImportSecurityContext(_In_ PSecBuffer pPackedContext,_In_ HANDLE Token,_Out_ PLSA_SEC_HANDLE phContext)
NTSTATUS None None.CloseSamUser(_In_ PVOID UserHandle)
DWORD None None.WlxQueryConsoleSwitchCredentials(_Out_ PWLX_CONSOLESWITCH_CREDENTIALS_INFO_V1_0 pCred)
BOOL None user32.WinHelp(HWND hWndMain None,LPCTSTR lpszHelp None,UINT uCommand None,ULONG_PTR dwData None)
BOOL None user32.WinHelpW(HWND hWndMain None,LPCTSTR lpszHelp None,UINT uCommand None,ULONG_PTR dwData None)
BOOL None user32.WinHelpA(HWND hWndMain None,LPCTSTR lpszHelp None,UINT uCommand None,ULONG_PTR dwData None)
NTSTATUS None secur32.LsaDeregisterLogonProcess(_In_ HANDLE LsaHandle)
LONG WINAPI winscard.SCardEndTransaction(_In_ SCARDHANDLE hCard,_In_ DWORD dwDisposition)
BOOL None None.WlxDisplayStatusMessage(_In_ PVOID pWlxContext,_In_ HDESK hDesktop,_In_ DWORD dwOptions,_In_ PWSTR pTitle,_In_ PWSTR pMessage)
STDAPI None shcore.RevokeScaleChangeNotifications(_In_ DISPLAY_DEVICE_TYPE displayDevice,_In_ DWORD dwCookie)
NTSTATUS NTAPI secur32.LsaGetLogonSessionData(_In_ PLUID LogonId,_Out_ PSECURITY_LOGON_SESSION_DATA *ppLogonSessionData)
LONG WINAPI winscard.SCardStatus(_In_ SCARDHANDLE hCard,_Out_ LPTSTR szReaderName,_Inout_opt_ LPDWORD pcchReaderLen,_Out_opt_ LPDWORD pdwState,_Out_opt_ LPDWORD pdwProtocol,_Out_ LPBYTE pbAtr,_Inout_opt_ LPDWORD pcbAtrLen)
LONG WINAPI winscard.SCardStatusW(_In_ SCARDHANDLE hCard,_Out_ LPTSTR szReaderName,_Inout_opt_ LPDWORD pcchReaderLen,_Out_opt_ LPDWORD pdwState,_Out_opt_ LPDWORD pdwProtocol,_Out_ LPBYTE pbAtr,_Inout_opt_ LPDWORD pcbAtrLen)
LONG WINAPI winscard.SCardStatusA(_In_ SCARDHANDLE hCard,_Out_ LPTSTR szReaderName,_Inout_opt_ LPDWORD pcchReaderLen,_Out_opt_ LPDWORD pdwState,_Out_opt_ LPDWORD pdwProtocol,_Out_ LPBYTE pbAtr,_Inout_opt_ LPDWORD pcbAtrLen)
NTSTATUS None advapi32.LsaSetInformationPolicy(_In_ LSA_HANDLE PolicyHandle,_In_ POLICY_INFORMATION_CLASS InformationClass,_In_ PVOID Buffer)
BOOL None None.WlxQueryInetConnectorCredentials(_Out_ PWLX_CLIENT_CREDENTIALS_INFO_V1_0 pCred)
VOID None None.FreeLsaHeap(_In_ PVOID Base)
DWORD None None.NPCancelConnection(_In_ LPTSTR lpName,_In_ BOOL fForce)
HRESULT None shell32.SHAssocEnumHandlers(_In_ PCWSTR pszExtra,_In_ ASSOC_FILTER afFilter,_Out_ IEnumAssocHandlers **ppEnumHandler)
NTSTATUS None None.SpFormatCredentials(_In_ PSecBuffer Credentials,_Out_ PSecBuffer FormattedCredentials)
NTSTATUS NTAPI None.SpUpdateCredentialsFn(_In_ LSA_SEC_HANDLE ContextHandle,_In_ GUID *CredType,_In_ ULONG FlatCredUIContextLength,PUCHAR FlatCredUIContext None)
NTSTATUS None None.CallPackageEx(_In_ PUNICODE_STRING AuthenticationPackage,_In_ PVOID ClientBufferBase,_In_ PVOID ProtocolSubmitBuffer,_In_ ULONG SubmitBufferLength,_Out_ PVOID *ProtocolReturnBuffer,_Out_ PULONG ReturnBufferLength,_Out_ PNTSTATUS ProtocolStatus)
NTSTATUS WINAPI advapi32.CredMarshalTargetInfo(_In_ PCREDENTIAL_TARGET_INFORMATIONW InTargetInfo,_Out_ PUSHORT *Buffer,PULONG BufferSize None)
NTSTATUS None None.SpAcceptLsaModeContext(_In_ LSA_SEC_HANDLE CredentialHandle,_In_ LSA_SEC_HANDLE ContextHandle,_In_ PSecBufferDesc InputBuffer,_In_ ULONG ContextRequirements,_In_ ULONG TargetDataRep,_Out_ PLSA_SEC_HANDLE NewContextHandle,_Out_ PSecBufferDesc OutputBuffer,_Out_ PULONG ContextAttributes,_Out_ PTimeStamp ExpirationTime,_Out_ PBOOLEAN MappedContext,_Out_ PSecBuffer ContextData)
NTSTATUS None None.ConvertAuthDataToToken(_In_ PVOID UserAuthData,_In_ ULONG UserAuthDataSize,_In_ SECURITY_IMPERSONATION_LEVEL ImpersonationLevel,_In_ PTOKEN_SOURCE TokenSource,_In_ SECURITY_LOGON_TYPE LogonType,_In_ PUNICODE_STRING AuthorityName,_Out_ PHANDLE Token,_Out_ PLUID LogonId,_Out_ PUNICODE_STRING AccountName,_Out_ PNTSTATUS SubStatus)
LONG WINAPI winscard.SCardDisconnect(_In_ SCARDHANDLE hCard,_In_ DWORD dwDisposition)
NTSTATUS NTAPI None.SpGetCredUIContextFn(_In_ LSA_SEC_HANDLE ContextHandle,_In_ GUID *CredType,_Out_ PULONG FlatCredUIContextLength,_Out_ PUCHAR *FlatCredUIContext)
NTSTATUS NTAPI advapi32.LsaGetAppliedCAPIDs(_In_opt_ PLSA_UNICODE_STRING SystemName,_Out_ PSID **CAPIDs,_Out_ PULONG CAPIDCount)
SECURITY_STATUS None sspicli.SspiPrepareForCredRead(_In_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE AuthIdentity,_In_ PCWSTR pszTargetName,_Out_ PULONG pCredmanCredentialType,_Out_ PCWSTR *ppszCredmanTargetName)
NTSTATUS None None.SpInitLsaModeContext(_In_ LSA_SEC_HANDLE CredentialHandle,_In_ LSA_SEC_HANDLE ContextHandle,_In_ PUNICODE_STRING TargetName,_In_ ULONG ContextRequirements,_In_ ULONG TargetDataRep,_In_ PSecBufferDesc InputBuffers,_Out_ PLSA_SEC_HANDLE NewContextHandle,_Out_ PSecBufferDesc OutputBuffers,_Out_ PULONG ContextAttributes,_Out_ PTimeStamp ExpirationTime,_Out_ PBOOLEAN MappedContext,_Out_ PSecBuffer ContextData)
NTSTATUS None None.CopyFromClientBuffer(_In_ PLSA_CLIENT_REQUEST ClientRequest,_In_ ULONG Length,_In_ PVOID BufferToCopy,_In_ PVOID ClientBaseAddress)
DWORD WINAPI credui.CredUICmdLinePromptForCredentials(_In_ PCTSTR pszTargetName,_In_ PCtxtHandle Reserved,_In_opt_ DWORD dwAuthError,_Inout_ PTSTR pszUserName,_In_ ULONG ulUserNameMaxChars,_Inout_ PTSTR pszPassword,_In_ ULONG ulPasswordMaxChars,_Inout_ PBOOL pfSave,_In_ DWORD dwFlags)
DWORD WINAPI credui.CredUICmdLinePromptForCredentialsW(_In_ PCTSTR pszTargetName,_In_ PCtxtHandle Reserved,_In_opt_ DWORD dwAuthError,_Inout_ PTSTR pszUserName,_In_ ULONG ulUserNameMaxChars,_Inout_ PTSTR pszPassword,_In_ ULONG ulPasswordMaxChars,_Inout_ PBOOL pfSave,_In_ DWORD dwFlags)
DWORD WINAPI credui.CredUICmdLinePromptForCredentialsA(_In_ PCTSTR pszTargetName,_In_ PCtxtHandle Reserved,_In_opt_ DWORD dwAuthError,_Inout_ PTSTR pszUserName,_In_ ULONG ulUserNameMaxChars,_Inout_ PTSTR pszPassword,_In_ ULONG ulPasswordMaxChars,_Inout_ PBOOL pfSave,_In_ DWORD dwFlags)
SECURITY_STATUS SEC_Entry secur32.VerifySignature(_In_ PCtxtHandle phContext,_In_ PSecBufferDesc pMessage,_In_ ULONG MessageSeqNo,_Out_ PULONG pfQOP)
LONG WINAPI winscard.SCardListCards(_In_ SCARDCONTEXT hContext,_In_opt_ LPCBYTE pbAtr,_In_ LPCGUID rgguidInterfaces,_In_ DWORD cguidInterfaceCount,_Out_ LPTSTR mszCards,_Inout_ LPDWORD pcchCards)
LONG WINAPI winscard.SCardListCardsW(_In_ SCARDCONTEXT hContext,_In_opt_ LPCBYTE pbAtr,_In_ LPCGUID rgguidInterfaces,_In_ DWORD cguidInterfaceCount,_Out_ LPTSTR mszCards,_Inout_ LPDWORD pcchCards)
LONG WINAPI winscard.SCardListCardsA(_In_ SCARDCONTEXT hContext,_In_opt_ LPCBYTE pbAtr,_In_ LPCGUID rgguidInterfaces,_In_ DWORD cguidInterfaceCount,_Out_ LPTSTR mszCards,_Inout_ LPDWORD pcchCards)
DWORD None None.NPGetConnection(_In_ LPTSTR lpLocalName,_Out_ LPTSTR lpRemoteName,_Inout_ LPDWORD lpBufferSize)
PCUIDLIST_RELATIVE None None.ILSkip(_In_ PCUIDLIST_RELATIVE pidl,UINT cb None)
LONG None scarddlg.GetOpenCardName(_In_ LPOPENCARDNAME pDlgStruc)
LONG None scarddlg.GetOpenCardNameW(_In_ LPOPENCARDNAME pDlgStruc)
LONG None scarddlg.GetOpenCardNameA(_In_ LPOPENCARDNAME pDlgStruc)
LONG WINAPI winscard.SCardGetAttrib(_In_ SCARDHANDLE hCard,_In_ DWORD dwAttrId,_Out_ LPBYTE pbAttr,_Inout_ LPDWORD pcbAttrLen)
SECURITY_STATUS SEC_Entry secur32.ImportSecurityContext(_In_ PSECURITY_STRING *pszPackage,_In_ PSecBuffer pPackedContext,_In_opt_ HANDLE pToken,_Out_ PCtxtHandle phContext)
SECURITY_STATUS SEC_Entry secur32.ImportSecurityContextW(_In_ PSECURITY_STRING *pszPackage,_In_ PSecBuffer pPackedContext,_In_opt_ HANDLE pToken,_Out_ PCtxtHandle phContext)
SECURITY_STATUS SEC_Entry secur32.ImportSecurityContextA(_In_ PSECURITY_STRING *pszPackage,_In_ PSecBuffer pPackedContext,_In_opt_ HANDLE pToken,_Out_ PCtxtHandle phContext)
HRESULT None shell32.SHGetNameFromPropertyKey(_In_ REFPROPERTYKEY propkey,_Out_ PWSTR *ppszCanonicalName)
DWORD None None.NPFormatNetworkName(_In_ LPTSTR lpRemoteName,_Out_ LPTSTR lpFormattedName,_Inout_ LPDWORD lpnLength,_In_ DWORD dwFlags,_In_ DWORD dwAveCharPerLine)
HANDLE None shell32.SHChangeNotification_Lock(_In_ HANDLE hChange,DWORD dwProcId None,_Out_opt_ PIDLIST_ABSOLUTE **pppidl,_Out_opt_ LONG *plEvent)
BOOL None shell32.SHGetDiskFreeSpaceEx(_In_ LPCTSTR pszDirectoryName,_Out_opt_ ULARGE_INTEGER *pulFreeBytesAvailableToCaller,_Out_opt_ ULARGE_INTEGER *pulTotalNumberOfBytes,_Out_opt_ ULARGE_INTEGER *pulTotalNumberOfFreeBytes)
BOOL None shell32.SHGetDiskFreeSpaceExW(_In_ LPCTSTR pszDirectoryName,_Out_opt_ ULARGE_INTEGER *pulFreeBytesAvailableToCaller,_Out_opt_ ULARGE_INTEGER *pulTotalNumberOfBytes,_Out_opt_ ULARGE_INTEGER *pulTotalNumberOfFreeBytes)
BOOL None shell32.SHGetDiskFreeSpaceExA(_In_ LPCTSTR pszDirectoryName,_Out_opt_ ULARGE_INTEGER *pulFreeBytesAvailableToCaller,_Out_opt_ ULARGE_INTEGER *pulTotalNumberOfBytes,_Out_opt_ ULARGE_INTEGER *pulTotalNumberOfFreeBytes)
LONG WINAPI winscard.SCardForgetReader(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReaderName)
LONG WINAPI winscard.SCardForgetReaderW(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReaderName)
LONG WINAPI winscard.SCardForgetReaderA(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReaderName)
HRESULT None shell32.SHIsFileAvailableOffline(_In_ PCWSTR pszPath,_Out_opt_ LPDWORD pdwStatus)
VOID None None.FreeSharedMemory(_In_ PVOID SharedMem,_In_ PVOID Memory)
BOOL None advapi32.CredEnumerate(_In_ LPCTSTR Filter,_In_ DWORD Flags,_Out_ DWORD *Count,_Out_ PCREDENTIAL **Credentials)
BOOL None advapi32.CredEnumerateW(_In_ LPCTSTR Filter,_In_ DWORD Flags,_Out_ DWORD *Count,_Out_ PCREDENTIAL **Credentials)
BOOL None advapi32.CredEnumerateA(_In_ LPCTSTR Filter,_In_ DWORD Flags,_Out_ DWORD *Count,_Out_ PCREDENTIAL **Credentials)
SECURITY_STATUS SEC_Entry secur32.FreeCredentialsHandle(_In_ PCredHandle phCredential)
BOOL WINAPI credui.CredUnPackAuthenticationBuffer(_In_ DWORD dwFlags,_In_ PVOID pAuthBuffer,_In_ DWORD cbAuthBuffer,_Out_ LPTSTR pszUserName,_Inout_ DWORD *pcchMaxUserName,_Out_ LPTSTR pszDomainName,_Inout_ DWORD *pcchMaxDomainname,_Out_ LPTSTR pszPassword,_Inout_ DWORD *pcchMaxPassword)
BOOL WINAPI credui.CredUnPackAuthenticationBufferW(_In_ DWORD dwFlags,_In_ PVOID pAuthBuffer,_In_ DWORD cbAuthBuffer,_Out_ LPTSTR pszUserName,_Inout_ DWORD *pcchMaxUserName,_Out_ LPTSTR pszDomainName,_Inout_ DWORD *pcchMaxDomainname,_Out_ LPTSTR pszPassword,_Inout_ DWORD *pcchMaxPassword)
BOOL WINAPI credui.CredUnPackAuthenticationBufferA(_In_ DWORD dwFlags,_In_ PVOID pAuthBuffer,_In_ DWORD cbAuthBuffer,_Out_ LPTSTR pszUserName,_Inout_ DWORD *pcchMaxUserName,_Out_ LPTSTR pszDomainName,_Inout_ DWORD *pcchMaxDomainname,_Out_ LPTSTR pszPassword,_Inout_ DWORD *pcchMaxPassword)
HANDLE None None.CreateThread(_In_ SEC_ATTRS SecurityAttributes,_In_ ULONG StackSize,_In_ SEC_THREAD_START StartFunction,_In_ PVOID ThreadParameter,_In_ ULONG CreationFlags,_Out_ PULONG ThreadId)
LONG WINAPI winscard.SCardLocateCards(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR mszCards,_Inout_ LPSCARD_READERSTATE rgReaderStates,_In_ DWORD cReaders)
LONG WINAPI winscard.SCardLocateCardsW(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR mszCards,_Inout_ LPSCARD_READERSTATE rgReaderStates,_In_ DWORD cReaders)
LONG WINAPI winscard.SCardLocateCardsA(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR mszCards,_Inout_ LPSCARD_READERSTATE rgReaderStates,_In_ DWORD cReaders)
NTSTATUS None None.CopyToClientBuffer(_In_ PLSA_CLIENT_REQUEST ClientRequest,_In_ ULONG Length,_In_ PVOID ClientBaseAddress,_In_ PVOID BufferToCopy)
NTSTATUS None None.SpGetInfo(_Out_ PSecPkgInfo PackageInfo)
LONG WINAPI winscard.SCardGetDeviceTypeId(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReaderName,_Inout_ LPDWORD pdwDeviceTypeId)
LONG WINAPI winscard.SCardGetDeviceTypeIdW(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReaderName,_Inout_ LPDWORD pdwDeviceTypeId)
LONG WINAPI winscard.SCardGetDeviceTypeIdA(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReaderName,_Inout_ LPDWORD pdwDeviceTypeId)
SECURITY_STATUS None secur32.DeleteSecurityPackage(_In_ LPTSTR pszPackageName)
SECURITY_STATUS None secur32.DeleteSecurityPackageW(_In_ LPTSTR pszPackageName)
SECURITY_STATUS None secur32.DeleteSecurityPackageA(_In_ LPTSTR pszPackageName)
LONG WINAPI winscard.SCardBeginTransaction(_In_ SCARDHANDLE hCard)
NTSTATUS None None.SpGetExtendedInformation(_In_ SECPKG_EXTENDED_INFORMATION_CLASS Class,_Out_ PSECPKG_EXTENDED_INFORMATION *ppInformation)
HRESULT None url.MIMEAssociationDialog(HWND hwndParent None,DWORD dwInFlags None,PCTSTR pcszFile None,PCTSTR pcszMIMEContentType None,_Out_ PTSTR pszAppBuf,UINT ucAppBufLen None)
HRESULT None url.MIMEAssociationDialogW(HWND hwndParent None,DWORD dwInFlags None,PCTSTR pcszFile None,PCTSTR pcszMIMEContentType None,_Out_ PTSTR pszAppBuf,UINT ucAppBufLen None)
HRESULT None url.MIMEAssociationDialogA(HWND hwndParent None,DWORD dwInFlags None,PCTSTR pcszFile None,PCTSTR pcszMIMEContentType None,_Out_ PTSTR pszAppBuf,UINT ucAppBufLen None)
SECURITY_STATUS None sspicli.SspiGetTargetHostName(_In_ PCWSTR pszTargetName,_Out_ PWSTR *pszHostName)
SECURITY_STATUS SEC_Entry secur32.QueryContextAttributes(_In_ PCtxtHandle phContext,_In_ ULONG ulAttribute,_Out_ PVOID pBuffer)
SECURITY_STATUS SEC_Entry secur32.QueryContextAttributesW(_In_ PCtxtHandle phContext,_In_ ULONG ulAttribute,_Out_ PVOID pBuffer)
SECURITY_STATUS SEC_Entry secur32.QueryContextAttributesA(_In_ PCtxtHandle phContext,_In_ ULONG ulAttribute,_Out_ PVOID pBuffer)
DWORD None None.WlxQueryTerminalServicesData(_In_ HANDLE hWlx,_Out_ PWLX_TERMINAL_SERVICES_DATA pTSData,_In_ WCHAR *UserName,_In_ WCHAR *Domain)
NTSTATUS None None.LsaApInitializePackage(_In_ ULONG AuthenticationPackageId,_In_ PLSA_DISPATCH_TABLE LsaDispatchTable,_In_opt_ PLSA_STRING Database,_In_opt_ PLSA_STRING Confidentiality,_Out_ PLSA_STRING *AuthenticationPackageName)
NTSTATUS None None.SpQueryCredentialsAttributes(_In_ LSA_SEC_HANDLE CredentialHandle,_In_ ULONG CredentialAttribute,_Out_ PVOID Buffer)
NTSTATUS WINAPI advapi32.LsaQueryCAPs(PSID *CAPIDs None,_In_ ULONG CAPIDCount,_Out_ PCENTRAL_ACCESS_POLICY *CAPs,_Out_ PULONG CAPCount)
BOOL WINAPI user32.PeekMessage(_Out_ LPMSG lpMsg,_In_opt_ HWND hWnd,_In_ UINT wMsgFilterMin,_In_ UINT wMsgFilterMax,_In_ UINT wRemoveMsg)
BOOL WINAPI user32.PeekMessageW(_Out_ LPMSG lpMsg,_In_opt_ HWND hWnd,_In_ UINT wMsgFilterMin,_In_ UINT wMsgFilterMax,_In_ UINT wRemoveMsg)
BOOL WINAPI user32.PeekMessageA(_Out_ LPMSG lpMsg,_In_opt_ HWND hWnd,_In_ UINT wMsgFilterMin,_In_ UINT wMsgFilterMax,_In_ UINT wRemoveMsg)
NTSTATUS None None.OpenSamUser(_In_ PSECURITY_STRING Name,_In_ SECPKG_NAME_TYPE NameType,_In_ PSECURITY_STRING Prefix,_In_ BOOLEAN AllowGuest,_In_ ULONG Reserved,_Out_ PVOID *UserHandle)
NTSTATUS NTAPI None.CrediWrite(_In_ PLUID LogonId,_In_ ULONG CredFlags,_In_ PENCRYPTED_CREDENTIALW Credential,_In_ ULONG Flags)
NTSTATUS None None.SpSetExtendedInformation(_In_ SECPKG_EXTENDED_INFORMATION_CLASS Class,_In_ PSECPKG_EXTENDED_INFORMATION Info)
NTSTATUS None None.SpGetContextToken(_In_ LSA_SEC_HANDLE ContextHandle,_Out_ PHANDLE ImpersonationToken)
DWORD APIENTRY None.AddConnectNotify(_Inout_ LPNOTIFYINFO lpNotifyInfo,_In_ LPNOTIFYADD lpAddInfo)
PCUITEMID_CHILD None None.ILCloneChild(_In_ PCUITEMID_CHILD pidl)
LONG WINAPI winscard.SCardSetAttrib(_In_ SCARDHANDLE hCard,_In_ DWORD dwAttrId,_In_ LPCBYTE pbAttr,_In_ DWORD cbAttrLen)
NTSTATUS NTAPI secur32.LsaEnumerateLogonSessions(_Out_ PULONG LogonSessionCount,_Out_ PLUID *LogonSessionList)
SECURITY_STATUS SEC_Entry secur32.AcquireCredentialsHandle(_In_ SEC_CHAR *pszPrincipal,_In_ SEC_CHAR *pszPackage,_In_ ULONG fCredentialUse,_In_ PLUID pvLogonID,_In_ PVOID pAuthData,_In_ SEC_GET_KEY_FN pGetKeyFn,_In_ PVOID pvGetKeyArgument,_Out_ PCredHandle phCredential,_Out_ PTimeStamp ptsExpiry)
SECURITY_STATUS SEC_Entry secur32.AcquireCredentialsHandleW(_In_ SEC_CHAR *pszPrincipal,_In_ SEC_CHAR *pszPackage,_In_ ULONG fCredentialUse,_In_ PLUID pvLogonID,_In_ PVOID pAuthData,_In_ SEC_GET_KEY_FN pGetKeyFn,_In_ PVOID pvGetKeyArgument,_Out_ PCredHandle phCredential,_Out_ PTimeStamp ptsExpiry)
SECURITY_STATUS SEC_Entry secur32.AcquireCredentialsHandleA(_In_ SEC_CHAR *pszPrincipal,_In_ SEC_CHAR *pszPackage,_In_ ULONG fCredentialUse,_In_ PLUID pvLogonID,_In_ PVOID pAuthData,_In_ SEC_GET_KEY_FN pGetKeyFn,_In_ PVOID pvGetKeyArgument,_Out_ PCredHandle phCredential,_Out_ PTimeStamp ptsExpiry)
HRESULT WINAPI shell32.SHGetFolderPathEx(_In_ REFKNOWNFOLDERID rfid,_In_ DWORD dwFlags,_In_opt_ HANDLE hToken,_Out_ LPWSTR pszPath,_In_ UINT cchPath)
DWORD None None.NPDirectoryNotify(_In_ HWND hwnd,_In_ LPTSTR lpDir,_In_ DWORD dwOper)
NTSTATUS None None.SpApplyControlToken(_In_ LSA_SEC_HANDLE ContextHandle,_In_ PSecBufferDesc ControlToken)
HRESULT None shell32.SHCreateShellItemArray(_In_ PCIDLIST_ABSOLUTE pidlParent,_In_ IShellFolder *psf,_In_ UINT cidl,_In_ PCUITEMID_CHILD_ARRAY ppidl,_Out_ IShellItemArray **ppsiItemArray)
HRESULT None shell32.SHSetTemporaryPropertyForItem(_In_ IShellItem *psi,_In_ REFPROPERTYKEY propkey,_In_ REFPROPVARIANT propvar)
uint32 None mgmtprovider.GetServerServiceDetail([in] string Services[],[in] uint32 BatchSize,[out] MSFT_ServerServiceDetail cmdletOutput[])
NTSTATUS NTAPI advapi32.LsaSetDomainInformationPolicy(_In_ LSA_HANDLE PolicyHandle,_In_ POLICY_DOMAIN_INFORMATION_CLASS InformationClass,_In_ PVOID Buffer)
NTSTATUS None None.CreateToken(_In_ PLUID LogonId,_In_ PTOKEN_SOURCE TokenSource,_In_ SECURITY_LOGON_TYPE LogonType,_In_ SECURITY_IMPERSONATION_LEVEL ImpersonationLevel,_In_ LSA_TOKEN_INFORMATION_TYPE TokenInformationType,_In_ PVOID TokenInformation,_In_ PTOKEN_GROUPS TokenGroups,_In_ PUNICODE_STRING AccountName,_In_ PUNICODE_STRING AuthorityName,_In_ PUNICODE_STRING Workstation,_In_ PUNICODE_STRING ProfilePath,_Out_ PHANDLE Token,_Out_ PNTSTATUS SubStatus)
SECURITY_STATUS None sspicli.SspiValidateAuthIdentity(_In_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE AuthData)
SECURITY_STATUS None sspicli.SspiEncryptAuthIdentity(_Inout_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE AuthData)
LONG WINAPI winscard.SCardFreeMemory(_In_ SCARDCONTEXT hContext,_In_ LPCVOID pvMem)
NTSTATUS None None.LsaApCallPackageUntrusted(_In_ PLSA_CLIENT_REQUEST ClientRequest,_In_ PVOID ProtocolSubmitBuffer,_In_ PVOID ClientBufferBase,_In_ ULONG SubmitBufferLength,_Out_ PVOID *ProtocolReturnBuffer,_Out_ PULONG ReturnBufferLength,_Out_ PNTSTATUS ProtocolStatus)
NTSTATUS None None.DeleteCredential(_In_ PLUID LogonId,_In_ ULONG AuthenticationPackage,_In_ PLSA_STRING PrimaryKeyValue)
BOOL None None.ILIsEmpty(_In_ PCUID_RELATIVE pidl)
HRESULT None shell32.SHSetUnreadMailCount(_In_ LPCTSTR pszMailAddress,DWORD dwCount None,_In_ LPCTSTR pszShellExecuteCommand)
HRESULT None shell32.SHSetUnreadMailCountW(_In_ LPCTSTR pszMailAddress,DWORD dwCount None,_In_ LPCTSTR pszShellExecuteCommand)
VOID None None.WlxSasNotify(_In_ HANDLE hWlx,_In_ DWORD dwSasType)
BOOL WINAPI user32.GetTitleBarInfo(_In_ HWND hwnd,_Inout_ PTITLEBARINFO pti)
BOOL None None.WlxScreenSaverNotify(_In_ PVOID pWlxContext,_Inout_ BOOL *pSecure)
DWORD WINAPI credui.CredUIPromptForWindowsCredentials(_In_opt_ PCREDUI_INFO pUiInfo,_In_ DWORD dwAuthError,_Inout_ ULONG *pulAuthPackage,_In_opt_ LPCVOID pvInAuthBuffer,_In_ ULONG ulInAuthBufferSize,_Out_ LPVOID *ppvOutAuthBuffer,_Out_ ULONG *pulOutAuthBufferSize,_Inout_opt_ BOOL *pfSave,_In_ DWORD dwFlags)
DWORD WINAPI credui.CredUIPromptForWindowsCredentialsW(_In_opt_ PCREDUI_INFO pUiInfo,_In_ DWORD dwAuthError,_Inout_ ULONG *pulAuthPackage,_In_opt_ LPCVOID pvInAuthBuffer,_In_ ULONG ulInAuthBufferSize,_Out_ LPVOID *ppvOutAuthBuffer,_Out_ ULONG *pulOutAuthBufferSize,_Inout_opt_ BOOL *pfSave,_In_ DWORD dwFlags)
DWORD WINAPI credui.CredUIPromptForWindowsCredentialsA(_In_opt_ PCREDUI_INFO pUiInfo,_In_ DWORD dwAuthError,_Inout_ ULONG *pulAuthPackage,_In_opt_ LPCVOID pvInAuthBuffer,_In_ ULONG ulInAuthBufferSize,_Out_ LPVOID *ppvOutAuthBuffer,_Out_ ULONG *pulOutAuthBufferSize,_Inout_opt_ BOOL *pfSave,_In_ DWORD dwFlags)
DWORD WINAPI credui.CredUIParseUserName(_In_ PCTSTR pszUserName,_Out_ PTSTR pszUser,_In_ ULONG ulUserMaxChars,_Out_ PTSTR pszDomain,_In_ ULONG ulDomainMaxChars)
DWORD WINAPI credui.CredUIParseUserNameW(_In_ PCTSTR pszUserName,_Out_ PTSTR pszUser,_In_ ULONG ulUserMaxChars,_Out_ PTSTR pszDomain,_In_ ULONG ulDomainMaxChars)
DWORD WINAPI credui.CredUIParseUserNameA(_In_ PCTSTR pszUserName,_Out_ PTSTR pszUser,_In_ ULONG ulUserMaxChars,_Out_ PTSTR pszDomain,_In_ ULONG ulDomainMaxChars)
SEC_ENTRY None None.DeleteConnectedIdentity(_In_ PVOID ProviderHandle,_In_opt_ HANDLE UserToken,_In_ PSID UserSid,_In_ PWSTR IdentityUserName)
BOOL None None.WlxNetworkProviderLoad(_In_ PVOID pWlxContext,_Out_ PWLX_MPR_NOTIFY_INFO pNprNotifyInfo)
BOOL WINAPI user32.GetLayeredWindowAttributes(_In_ HWND hwnd,_Out_opt_ COLORREF *pcrKey,_Out_opt_ BYTE *pbAlpha,_Out_opt_ DWORD *pdwFlags)
DWORD None None.NPEnumResource(_In_ HANDLE hEnum,_Inout_ LPDWORD lpcCount,_Out_ LPVOID lpBuffer,_Inout_ LPDWORD lpBufferSize)
NTSTATUS WINAPI certpoleng.PstGetUserNameForCertificate(_In_ PCCERT_CONTEXT pCertContext,_Out_ PUNICODE_STRING UserName)
BOOL None advapi32.CredWrite(_In_ PCREDENTIAL Credential,_In_ DWORD Flags)
BOOL None advapi32.CredWriteW(_In_ PCREDENTIAL Credential,_In_ DWORD Flags)
BOOL None advapi32.CredWriteA(_In_ PCREDENTIAL Credential,_In_ DWORD Flags)
SECURITY_STATUS None credui.SspiUpdateCredentials(_In_ HANDLE ContextHandle,_In_ GUID *CredType,_In_ ULONG FlatCredUIContextLength,_In_ PUCHAR FlatCredUIContext)
NTSTATUS WINAPI certpoleng.PstGetCertificates(_In_ PUNICODE_STRING pTargetName,_In_ DWORD cCriteria,_In_opt_ PCCERT_SELECT_CRITERIA rgpCriteria,_In_ BOOL bIsClient,_Out_ PDWORD pdwCertChainContextCount,_Out_ PCCERT_CHAIN_CONTEXT **ppCertChainContexts)
DWORD None credui.CredUIStoreSSOCredW(_In_ PCWSTR pszRealm,_In_ PCWSTR pszUsername,_In_ PCWSTR pszPassword,_In_ BOOL bPersist)
HRESULT None shell32.SHOpenFolderAndSelectItems(_In_ PCIDLIST_ABSOLUTE pidlFolder,UINT cidl None,_In_opt_ PCUITEMID_CHILD_ARRAY apidl,DWORD dwFlags None)
BOOL None None.ILIsAligned(_In_ PCUIDLIST_RELATIVE pidl)
BOOL None None.WlxGetOption(_In_ HANDLE hWlx,_In_ DWORD Option,_Out_ ULONG_PTR *Value)
HRESULT WINAPI userenv.DeriveAppContainerSidFromAppContainerName(_In_ PCWSTR pszAppContainerName,_Out_ PSID *ppsidAppContainerSid)
BOOL None advapi32.CredWriteDomainCredentials(_In_ PCREDENTIAL_TARGET_INFORMATION TargetInfo,_In_ PCREDENTIAL Credential,_In_ DWORD Flags)
BOOL None advapi32.CredWriteDomainCredentialsW(_In_ PCREDENTIAL_TARGET_INFORMATION TargetInfo,_In_ PCREDENTIAL Credential,_In_ DWORD Flags)
BOOL None advapi32.CredWriteDomainCredentialsA(_In_ PCREDENTIAL_TARGET_INFORMATION TargetInfo,_In_ PCREDENTIAL Credential,_In_ DWORD Flags)
NTSTATUS None None.SpSealMessage(_In_ LSA_SEC_HANDLE ContextHandle,_In_ ULONG QualityOfProtection,_Inout_ PSecBufferDesc MessageBuffers,_In_ ULONG MessageSequenceNumber)
NTSTATUS None None.SpSaveCredentials(_In_ LSA_SEC_HANDLE CredentialHandle,_In_ PSecBuffer Credentials)
NTSTATUS None secur32.LsaLogonUser(_In_ HANDLE LsaHandle,_In_ PLSA_STRING OriginName,_In_ SECURITY_LOGON_TYPE LogonType,_In_ ULONG AuthenticationPackage,_In_ PVOID AuthenticationInformation,_In_ ULONG AuthenticationInformationLength,_In_opt_ PTOKEN_GROUPS LocalGroups,_In_ PTOKEN_SOURCE SourceContext,_Out_ PVOID *ProfileBuffer,_Out_ PULONG ProfileBufferLength,_Out_ PLUID LogonId,_Out_ PHANDLE Token,_Out_ PQUOTA_LIMITS Quotas,_Out_ PNTSTATUS SubStatus)
SECURITY_STATUS None sspicli.SspiFreeAuthIdentity(_In_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE AuthData)
SECURITY_STATUS SEC_Entry secur32.RevertSecurityContext(_In_ PCtxtHandle phContext)
BOOL WINAPI credui.CredPackAuthenticationBuffer(_In_ DWORD dwFlags,_In_ LPTSTR pszUserName,_In_ LPTSTR pszPassword,_Out_ PBYTE pPackedCredentials,_Inout_ DWORD *pcbPackedCredentials)
BOOL WINAPI credui.CredPackAuthenticationBufferW(_In_ DWORD dwFlags,_In_ LPTSTR pszUserName,_In_ LPTSTR pszPassword,_Out_ PBYTE pPackedCredentials,_Inout_ DWORD *pcbPackedCredentials)
BOOL WINAPI credui.CredPackAuthenticationBufferA(_In_ DWORD dwFlags,_In_ LPTSTR pszUserName,_In_ LPTSTR pszPassword,_Out_ PBYTE pPackedCredentials,_Inout_ DWORD *pcbPackedCredentials)
BOOL None None.WlxGetStatusMessage(_In_ PVOID pWlxContext,_Out_ DWORD *pdwOptions,_Out_ PWSTR pMessage,_In_ DWORD dwBufferSize)
SECURITY_STATUS None sspicli.SspiDecryptAuthIdentity(_Inout_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE EncryptedAuthData)
VOID None sspicli.SspiLocalFree(_In_ PVOID DataBuffer)
BOOL None advapi32.CredGetTargetInfo(_In_ LPCTSTR TargetName,_In_ DWORD Flags,_Out_ PCREDENTIAL_TARGET_INFORMATION *TargetInfo)
BOOL None advapi32.CredGetTargetInfoW(_In_ LPCTSTR TargetName,_In_ DWORD Flags,_Out_ PCREDENTIAL_TARGET_INFORMATION *TargetInfo)
BOOL None advapi32.CredGetTargetInfoA(_In_ LPCTSTR TargetName,_In_ DWORD Flags,_Out_ PCREDENTIAL_TARGET_INFORMATION *TargetInfo)
DWORD None None.NPGetResourceInformation(_In_ LPNETRESOURCE lpNetResource,_Out_ LPVOID lpBuffer,_Inout_ LPDWORD lpcbBuffer,_Out_ LPTSTR *lplpSystem)
BOOL None None.WlxInitialize(_In_ LPWSTR lpWinsta,_In_ HANDLE hWlx,_In_ PVOID pvReserved,_In_ PVOID pWinlogonFunctions,_Out_ PVOID *pWlxContext)
SEC_ENTRY None None.OnProfileLoaded(_In_ PVOID ProviderHandle,_In_ HANDLE UserToken,_In_ BOOLEAN Loaded)
SECURITY_STATUS SEC_Entry secur32.ImpersonateSecurityContext(_In_ PCtxtHandle phContext)
PIDLIST_ABSOLUTE None shell32.ILCreateFromPath(_In_ PCTSTR pszPath)
PIDLIST_ABSOLUTE None shell32.ILCreateFromPathW(_In_ PCTSTR pszPath)
PIDLIST_ABSOLUTE None shell32.ILCreateFromPathA(_In_ PCTSTR pszPath)
NTSTATUS NTAPI None.ExpandAuthDataForDomain(_In_ PUCHAR UserAuthData,_In_ ULONG UserAuthDataSize,_In_ PVOID Reserved,_Out_ PUCHAR *ExpandedAuthData,_Out_ PULONG ExpandedAuthDataSize)
BOOL None None.WlxActivateUserShell(_In_ PVOID pWlxContext,_In_ PWSTR pszDesktopName,_In_ PWSTR pszMprLogonScript,_In_ PVOID pEnvironment)
PVOID None None.AllocateLsaHeap(_In_ ULONG Length)
DWORD None None.NPGetCaps(_In_ DWORD nIndex)
DWORD None None.NPAddConnection(_In_ LPNETRESOURCE lpNetResource,_In_ LPTSTR lpPassword,_In_ LPTSTR lpUserName)
DWORD None None.NPGetUser(_In_ LPTSTR lpName,_Out_ LPTSTR lpUserName,_Inout_ LPDWORD lpBufferSize)
BOOL WINAPI advapi32.CredFindBestCredential(_In_ LPCTSTR TargetName,_In_ DWORD Type,_In_ DWORD Flags,_Out_ PCREDENTIAL *Credential)
BOOL WINAPI advapi32.CredFindBestCredentialW(_In_ LPCTSTR TargetName,_In_ DWORD Type,_In_ DWORD Flags,_Out_ PCREDENTIAL *Credential)
BOOL WINAPI advapi32.CredFindBestCredentialA(_In_ LPCTSTR TargetName,_In_ DWORD Type,_In_ DWORD Flags,_Out_ PCREDENTIAL *Credential)
DWORD None None.NPOpenEnum(_In_ DWORD dwScope,_In_ DWORD dwType,_In_ DWORD dwUsage,_In_ LPNETRESOURCE lpNetResource,_Out_ LPHANDLE lphEnum)
NTSTATUS SEC_ENTRY None.SpUserModeInitialize(_In_ ULONG LsaVersion,_Out_ PULONG PackageVersion,_Out_ PSECPKG_USER_FUNCTION_TABLE *ppTables,_Out_ PULONG pcTables)
LONG WINAPI winscard.SCardReleaseContext(_In_ SCARDCONTEXT hContext)
UINT_PTR None shell32.SHAppBarMessage(_In_ DWORD dwMessage,_Inout_ PAPPBARDATA pData)
PVOID None None.AllocateSharedMemory(_In_ PVOID SharedMem,_In_ ULONG Size)
DWORD None None.NPGetPropertyText(_In_ DWORD iButton,_In_ DWORD nPropSel,_In_ LPTSTR lpName,_Out_ LPTSTR lpButtonName,_Inout_ DWORD nButtonNameLen,_In_ DWORD nType)
SECURITY_STATUS None sspicli.SspiZeroAuthIdentity(_In_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE AuthData)
NTSTATUS WINAPI None.Msv1_0SubAuthenticationRoutineEx(_In_ NETLOGON_LOGON_INFO_CLASS LogonLevel,_In_ PVOID LogonInformation,_In_ ULONG Flags,_In_ PUSER_ALL_INFORMATION UserAll,_In_ SAM_HANDLE UserHandle,_Inout_ PMSV1_0_VALIDATION_INFO ValidationInfo,_Out_ PULONG ActionsPerformed)
NTSTATUS None None.SpDeleteContext(_In_ LSA_SEC_HANDLE ContextHandle)
NTSTATUS None None.LsaApLogonUser(_In_ PLSA_CLIENT_REQUEST ClientRequest,_In_ SECURITY_LOGON_TYPE LogonType,_In_ PVOID AuthenticationInformation,_In_ PVOID ClientAuthenticationBase,_In_ ULONG AuthenticationInformationLength,_Out_ PVOID *ProfileBuffer,_Out_ PULONG ProfileBufferLength,_Out_ PLUID LogonId,_Out_ PNTSTATUS SubStatus,_Out_ PLSA_TOKEN_INFORMATION_TYPE TokenInformationType,_Out_ PVOID *TokenInformation,_Out_ PLSA_UNICODE_STRING *AccountName,_Out_ PLSA_UNICODE_STRING *AuthenticatingAuthority)
BOOL None user32.SetMenuContextHelpId(HMENU hmenu None,DWORD dwContextHelpId None)
PVOID WINAPI None.AllocatePrivateHeap(_In_ SIZE_T Length)
NTSTATUS None secur32.LsaCallAuthenticationPackage(_In_ HANDLE LsaHandle,_In_ ULONG AuthenticationPackage,_In_ PVOID ProtocolSubmitBuffer,_In_ ULONG SubmitBufferLength,_Out_ PVOID *ProtocolReturnBuffer,_Out_ PULONG *ReturnBufferLength,_Out_ PNTSTATUS ProtocolStatus)
VOID None advapi32.CredFree(_In_ PVOID Buffer)
BOOL None None.WlxNegotiate(_In_ DWORD dwWinLogonVersion,_Out_ PDWORD pdwDllVersion)
NTSTATUS None None.CallPackage(_In_ PUNICODE_STRING AuthenticationPackage,_In_ PVOID ProtocolSubmitBuffer,_In_ ULONG SubmitBufferLength,_Out_ PVOID *ProtocolReturnBuffer,_Out_ PULONG ReturnBufferLength,_Out_ PNTSTATUS ProtocolStatus)
LONG WINAPI winscard.SCardListInterfaces(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCard,_Out_ LPGUID pguidInterfaces,_Inout_ LPDWORD pcguidInterfaces)
LONG WINAPI winscard.SCardListInterfacesW(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCard,_Out_ LPGUID pguidInterfaces,_Inout_ LPDWORD pcguidInterfaces)
LONG WINAPI winscard.SCardListInterfacesA(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCard,_Out_ LPGUID pguidInterfaces,_Inout_ LPDWORD pcguidInterfaces)
NTSTATUS WINAPI None.Msv1_0SubAuthenticationRoutineGeneric(PVOID SubmitBuffer None,ULONG SubmitBufferLength None,_Out_ PULONG ReturnBufferLength,_Out_ PVOID *ReturnBuffer)
uint32 None None.QuiesceDevice([in] boolean Quiesce)
HRESULT None shell32.SHDoDragDrop(_In_ HWND hwnd,_In_ IDataObject *pdtobj,_In_ IDropSource *pdsrc,_In_ DWORD dwEffect,_Out_ DWORD *pdwEffect)
NTSTATUS WINAPI certpoleng.PstGetTrustAnchors(_In_ PUNICODE_STRING pTargetName,_In_ DWORD cCriteria,_In_opt_ PCCERT_SELECT_CRITERIA rgpCriteria,_Out_ PSecPkgContext_IssuerListInfoEx *ppTrustedIssuers)
LONG WINAPI None.SCardGetReaderDeviceInstanceId(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReaderName,_Out_opt_ LPTSTR szDeviceInstanceId,_Inout_ LPDWORD cchDeviceInstanceId)
BOOLEAN None None.GetCallInfo(_Out_ PSECPKG_CALL_INFO Info)
UINT WINAPI shcore.GetDpiForShellUiComponent(_In_ SHELL_UI_COMPONENT component)
NTSTATUS WINAPI certpoleng.PstMapCertificate(_In_ PCCERT_CONTEXT pCert,_Out_ LSA_TOKEN_INFORMATION_TYPE *pTokenInformationType,_Out_ PVOID *ppTokenInformation)
BOOL None advapi32.CredRename(_In_ LPCTSTR OldTargetName,_In_ LPCTSTR NewTargetName,_In_ DWORD Type,_In_ DWORD Flags)
BOOL None advapi32.CredRenameW(_In_ LPCTSTR OldTargetName,_In_ LPCTSTR NewTargetName,_In_ DWORD Type,_In_ DWORD Flags)
BOOL None advapi32.CredRenameA(_In_ LPCTSTR OldTargetName,_In_ LPCTSTR NewTargetName,_In_ DWORD Type,_In_ DWORD Flags)
HRESULT None shell32.SHCLSIDFromString(_In_ PCWSTR psz,_Out_ CLSID *pcClsid)
BOOL None None.WlxSetTimeout(_In_ HANDLE hWlx,_In_ DWORD Timeout)
BOOL None shell32.SHChangeNotification_Unlock(_In_ HANDLE hLock)
NTSTATUS None None.GetCredentials(_In_ PLUID LogonId,_In_ ULONG AuthenticationPackage,_Inout_ PULONG QueryContext,_In_ BOOLEAN RetrieveAllCredentials,_Inout_ PLSA_STRING PrimaryKeyValue,_Out_ PULONG PrimaryKeyLength,_Out_ PLSA_STRING Credentials)
BOOLEAN None None.DeleteSharedMemory(_In_ PVOID SharedMem)
DWORD None None.NPGetUniversalName(_In_ LPCTSTR lpLocalPath,_In_ DWORD dwInfoLevel,_Out_ LPVOID lpBuffer,_Inout_ LPDWORD lpBufferSize)
LONG WINAPI winscard.SCardGetProviderId(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCard,_Out_ LPGUID pguidProviderId)
LONG WINAPI winscard.SCardGetProviderIdW(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCard,_Out_ LPGUID pguidProviderId)
LONG WINAPI winscard.SCardGetProviderIdA(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCard,_Out_ LPGUID pguidProviderId)
NTSTATUS None None.AllocateClientBuffer(_In_ PLSA_CLIENT_REQUEST ClientRequest,_In_ ULONG LengthRequired,_Out_ PVOID *ClientBaseAddress)
BOOL None None.ILIsChild(_In_ PCUIDLIST_RELATIVE pidl)
NTSTATUS None None.GetUserAuthData(_In_ PVOID UserHandle,_Out_ PUCHAR *UserAuthData,_Out_ PULONG UserAuthDataSize)
NTSTATUS None None.MapBuffer(_In_ PSecBuffer InputBuffer,_Out_ PSecBuffer OutputBuffer)
LONG WINAPI winscard.SCardSetCardTypeProviderName(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCardName,_In_ DWORD dwProviderId,_In_ LPCTSTR szProvider)
LONG WINAPI winscard.SCardSetCardTypeProviderNameW(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCardName,_In_ DWORD dwProviderId,_In_ LPCTSTR szProvider)
LONG WINAPI winscard.SCardSetCardTypeProviderNameA(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCardName,_In_ DWORD dwProviderId,_In_ LPCTSTR szProvider)
SECURITY_STATUS SEC_Entry secur32.ApplyControlToken(_In_ PCtxtHandle phContext,_In_ PSecBufferDesc pInput)
NTSTATUS None None.GetClientInfo(_Out_ PSECPKG_CLIENT_INFO ClientInfo)
NTSTATUS NTAPI None.Msv1_0SubAuthenticationFilter(_In_ NETLOGON_LOGON_INFO_CLASS LogonLevel,_In_ PVOID LogonInformation,_In_ ULONG Flags,_In_ PUSER_ALL_INFORMATION UserAll,_Out_ PULONG WhichFields,_Out_ PULONG UserFlags,_Out_ PBOOLEAN Authoritative,_Out_ PLARGE_INTEGER LogoffTime,_Out_ PLARGE_INTEGER KickoffTime)
DWORD APIENTRY None.CancelConnectNotify(_Inout_ LPNOTIFYINFO lpNotifyInfo,_In_ LPNOTIFYCANCEL lpCancelInfo)
BOOL None shell32.SHTestTokenMembership(_In_opt_ HANDLE hToken,ULONG ulRID None)
NTSTATUS None None.SpMarshallSupplementalCreds(_In_ ULONG CredentialSize,_In_ PUCHAR Credentials,_Out_ PULONG MarshalledCredSize,_Out_ PVOID *MarshalledCreds)
NTSTATUS WINAPI certpoleng.PstAcquirePrivateKey(_In_ PCCERT_CONTEXT pCert)
BOOL WINAPI user32.EndDeferWindowPos(_In_ HDWP hWinPosInfo)
NTSTATUS None None.LsaApCallPackagePassthrough(_In_ PLSA_CLIENT_REQUEST ClientRequest,_In_ PVOID ProtocolSubmitBuffer,_In_ PVOID ClientBufferBase,_In_ ULONG SubmitBufferLength,_Out_ PVOID *ProtocolReturnBuffer,_Out_ PULONG ReturnBufferLength,_Out_ PNTSTATUS ProtocolStatus)
NTSTATUS None None.SpGetCredentials(_In_ LSA_SEC_HANDLE CredentialHandle,_Out_ PSecBuffer Credentials)
SECURITY_STATUS SEC_ENTRY secur32.SaslGetProfilePackage(_In_ LPTSTR ProfileName,_Out_ PSecPkgInfo *PackageInfo)
SECURITY_STATUS SEC_ENTRY secur32.SaslGetProfilePackageW(_In_ LPTSTR ProfileName,_Out_ PSecPkgInfo *PackageInfo)
SECURITY_STATUS SEC_ENTRY secur32.SaslGetProfilePackageA(_In_ LPTSTR ProfileName,_Out_ PSecPkgInfo *PackageInfo)
BOOL None comctl32.RemoveWindowSubclass(_In_ HWND hWnd,_In_ SUBCLASSPROC pfnSubclass,_In_ UINT_PTR uIdSubclass)
SECURITY_STATUS SEC_Entry secur32.DecryptMessage(_In_ PCtxtHandle phContext,_Inout_ PSecBufferDesc pMessage,_In_ ULONG MessageSeqNo,_Out_ PULONG pfQOP)
HRESULT None ntshrui.ShowShareFolderUI(_In_ HWND hwndParent,_In_ LPCWSTR pszPath)
HRESULT None ntshrui.ShowShareFolderUIW(_In_ HWND hwndParent,_In_ LPCWSTR pszPath)
PIDLIST_RELATIVE None shell32.ILAppendID(_In_opt_ PIDLIST_RELATIVE pidl,_In_ LPSHITEMID pmkid,BOOL fAppend None)
BOOL None comctl32.SetWindowSubclass(_In_ HWND hWnd,_In_ SUBCLASSPROC pfnSubclass,_In_ UINT_PTR uIdSubclass,_In_ DWORD_PTR dwRefData)
NTSTATUS None None.AddCredential(_In_ PLUID LogonId,_In_ ULONG AuthenticationPackage,_In_ PLSA_STRING PrimaryKeyValue,_In_ PLSA_STRING Credentials)
NTSTATUS None secur32.LsaConnectUntrusted(_Out_ PHANDLE LsaHandle)
VOID None None.AuditLogon(_In_ NTSTATUS Status,_In_ NTSTATUS SubStatus,_In_ PUNICODE_STRING AccountName,_In_ PUNICODE_STRING AuthenticatingAuthority,_In_ PUNICODE_STRING WorkstationName,_In_opt_ PSID UserSid,_In_ SECURITY_LOGON_TYPE LogonType,_In_ PTOKEN_SOURCE TokenSource,_In_ PLUID LogonId)
NTSTATUS NTAPI None.CrediRead(_In_ PLUID LogonId,_In_ ULONG CredFlags,_In_ LPWSTR TargetName,_In_ ULONG Type,_In_ ULONG Flags,_Out_ PENCRYPTED_CREDENTIALW *Credential)
NTSTATUS None None.SpUnsealMessage(_In_ LSA_SEC_HANDLE ContextHandle,_In_ PSecBufferDesc MessageBuffers,_In_ ULONG MessageSequenceNumber,_Out_ PULONG QualityOfProtection)
NTSTATUS None None.DuplicateHandle(_In_ HANDLE SourceHandle,_Out_ PHANDLE DestinationHandle)
NTSTATUS None None.SpCompleteAuthToken(_In_ LSA_SEC_HANDLE ContextHandle,_In_ PSecBufferDesc InputBuffer)
NTSTATUS None None.SpGetUserInfo(_In_ PLUID LogonId,_In_ ULONG Flags,_Out_ PSecurityUserData *UserData)
PITEMID_CHILD None shell32.ILCloneFirst(_In_ PCUIDLIST_RELATIVE pidl)
BOOL WINAPI None.WlxGetConsoleSwitchCredentials(_In_ PVOID pWlxContext,_Out_ PVOID pInfo)
NTSTATUS None None.SpAcceptCredentials(_In_ SECURITY_LOGON_TYPE LogonType,_In_ PUNICODE_STRING AccountName,_In_ PSECPKG_PRIMARY_CRED PrimaryCredentials,_In_ PSECPKG_SUPPLEMENTAL_CRED SupplementalCredentials)
NTSTATUS None None.SpAcquireCredentialsHandle(_In_ PUNICODE_STRING PrincipalName,_In_ ULONG CredentialUseFlags,_In_ PLUID LogonId,_In_ PVOID AuthorizationData,_In_ PVOID GetKeyFunction,_In_ PVOID GetKeyArgument,_Out_ PLSA_SEC_HANDLE CredentialHandle,_Out_ PTimeStamp ExpirationTime)
NTSTATUS None None.SpAddCredentials(_In_ LSA_SEC_HANDLE CredentialHandle,_In_ PUNICODE_STRING PrincipalName,_In_ PUNICODE_STRING Package,_In_ ULONG CredentialUseFlags,_In_ PVOID AuthorizationData,_In_ PVOID GetKeyFunction,_In_ PVOID GetKeyArgument,_Out_ PTimeStamp ExpirationTime)
PIDLIST_ABSOLUTE None shell32.ILCombine(_In_ PCIDLIST_ABSOLUTE pidl1,_In_ PCUIDLIST_RELATIVE pidl2)
SECURITY_STATUS None credui.SspiGetCredUIContext(_In_ HANDLE ContextHandle,_In_ GUID *CredType,_In_ LUID *LogonId,_Out_ PSEC_WINNT_CREDUI_CONTEXT_VECTOR *CredUIContexts,_Out_ HANDLE *TokenHandle)
BOOL WINAPI advapi32.LogonUserExExW(_In_ LPTSTR lpszUsername,_In_opt_ LPTSTR lpszDomain,_In_opt_ LPTSTR lpszPassword,_In_ DWORD dwLogonType,_In_ DWORD dwLogonProvider,_In_opt_ PTOKEN_GROUPS pTokenGroups,_Out_opt_ PHANDLE phToken,_Out_opt_ PSID *ppLogonSid,_Out_opt_ PVOID *ppProfileBuffer,_Out_opt_ LPDWORD pdwProfileLength,_Out_opt_ PQUOTA_LIMITS pQuotaLimits)
LONG WINAPI winscard.SCardIntroduceCardType(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCardName,_In_opt_ LPCGUID pguidPrimaryProvider,_In_opt_ LPCGUID rgguidInterfaces,_In_ DWORD dwInterfaceCount,_In_ LPCBYTE pbAtr,_In_ LPCBYTE pbAtrMask,_In_ DWORD cbAtrLen)
LONG WINAPI winscard.SCardIntroduceCardTypeW(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCardName,_In_opt_ LPCGUID pguidPrimaryProvider,_In_opt_ LPCGUID rgguidInterfaces,_In_ DWORD dwInterfaceCount,_In_ LPCBYTE pbAtr,_In_ LPCBYTE pbAtrMask,_In_ DWORD cbAtrLen)
LONG WINAPI winscard.SCardIntroduceCardTypeA(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCardName,_In_opt_ LPCGUID pguidPrimaryProvider,_In_opt_ LPCGUID rgguidInterfaces,_In_ DWORD dwInterfaceCount,_In_ LPCBYTE pbAtr,_In_ LPCBYTE pbAtrMask,_In_ DWORD cbAtrLen)
SECURITY_STATUS None secur32.AddSecurityPackage(_In_ LPTSTR pszPackageName,_In_ PSECURITY_PACKAGE_OPTIONS pOptions)
SECURITY_STATUS None secur32.AddSecurityPackageW(_In_ LPTSTR pszPackageName,_In_ PSECURITY_PACKAGE_OPTIONS pOptions)
SECURITY_STATUS None secur32.AddSecurityPackageA(_In_ LPTSTR pszPackageName,_In_ PSECURITY_PACKAGE_OPTIONS pOptions)
NTSTATUS None None.LsaApLogonUserEx(_In_ PLSA_CLIENT_REQUEST ClientRequest,_In_ SECURITY_LOGON_TYPE LogonType,_In_ PVOID AuthenticationInformation,_In_ PVOID ClientAuthenticationBase,_In_ ULONG AuthenticationInformationLength,_Out_ PVOID *ProfileBuffer,_Out_ PULONG ProfileBufferLength,_Out_ PLUID LogonId,_Out_ PNTSTATUS SubStatus,_Out_ PLSA_TOKEN_INFORMATION_TYPE TokenInformationType,_Out_ PVOID *TokenInformation,_Out_ PUNICODE_STRING *AccountName,_Out_ PUNICODE_STRING *AuthenticatingAuthority,_Out_ PUNICODE_STRING *MachineName)
NTSTATUS None cscapi.CscSearchApiGetInterface(_In_ ULONG Version,_In_ ULONG Cookie,_Out_ CCscSearchApiInterface **Interface)
LONG WINAPI winscard.SCardIntroduceReader(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReaderName,_In_ LPCTSTR szDeviceName)
LONG WINAPI winscard.SCardIntroduceReaderW(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReaderName,_In_ LPCTSTR szDeviceName)
LONG WINAPI winscard.SCardIntroduceReaderA(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReaderName,_In_ LPCTSTR szDeviceName)
SECURITY_STATUS SEC_Entry secur32.QuerySecurityContextToken(_In_ PCtxtHandle phContext,_Out_ HANDLE *phToken)
SECURITY_STATUS SEC_Entry secur32.QuerySecurityPackageInfo(_In_ SEC_CHAR *pszPackageName,_Out_ PSecPkgInfo *ppPackageInfo)
SECURITY_STATUS SEC_Entry secur32.QuerySecurityPackageInfoW(_In_ SEC_CHAR *pszPackageName,_Out_ PSecPkgInfo *ppPackageInfo)
SECURITY_STATUS SEC_Entry secur32.QuerySecurityPackageInfoA(_In_ SEC_CHAR *pszPackageName,_Out_ PSecPkgInfo *ppPackageInfo)
BOOL None None.WlxIsLockOk(_In_ PVOID pWlxContext)
NTSTATUS None None.SpInitUserModeContext(_In_ LSA_SEC_HANDLE ContextHandle,_In_ PSecBuffer PackedContext)
NTSTATUS NTAPI None.CrediUnmarshalandDecodeString(_In_ LPWSTR MarshaledString,_Out_ LPBYTE *Blob,_Out_ ULONG *BlobSize,_Out_ BOOLEAN *IsFailureFatal)
HRESULT None shell32.SHSetDefaultProperties(_In_opt_ HWND hwnd,_In_ IShellItem *psi,DWORD dwFileOpFlags None,_In_opt_ IFileOperationProgressSink *pfops)
BOOL None schannel.SslEmptyCache(_In_ LPSTR pszTargetName,_In_ DWORD dwFlags)
BOOL None schannel.SslEmptyCacheW(_In_ LPSTR pszTargetName,_In_ DWORD dwFlags)
BOOL None schannel.SslEmptyCacheA(_In_ LPSTR pszTargetName,_In_ DWORD dwFlags)
HRESULT None shell32.SHSetKnownFolderPath(_In_ REFKNOWNFOLDERID rfid,_In_ DWORD dwFlags,_In_ HANDLE hToken,_In_ PCWSTR pszPath)
NTSTATUS None None.SpDeleteCredentials(_In_ LSA_SEC_HANDLE CredentialHandle,_In_ PSecBuffer Key)
VOID None None.WlxSetContextPointer(_In_ HANDLE hWlx,_In_ PVOID pWlxContext)
VOID None None.FreeHeap(_Inout_ PVOID Base)
NTSTATUS None None.SpQueryContextAttributes(_In_ LSA_SEC_HANDLE ContextHandle,_In_ ULONG ContextAttribute,_Out_ PVOID Buffer)
BOOL None advapi32.CredReadDomainCredentials(_In_ PCREDENTIAL_TARGET_INFORMATION TargetInfo,_In_ DWORD Flags,_Out_ DWORD *Count,_Out_ PCREDENTIAL **Credentials)
BOOL None advapi32.CredReadDomainCredentialsW(_In_ PCREDENTIAL_TARGET_INFORMATION TargetInfo,_In_ DWORD Flags,_Out_ DWORD *Count,_Out_ PCREDENTIAL **Credentials)
BOOL None advapi32.CredReadDomainCredentialsA(_In_ PCREDENTIAL_TARGET_INFORMATION TargetInfo,_In_ DWORD Flags,_Out_ DWORD *Count,_Out_ PCREDENTIAL **Credentials)
SECURITY_STATUS SEC_ENTRY secur32.SaslSetContextOption(_In_ PCtxtHandle ContextHandle,_In_ ULONG Option,_In_ PVOID Value,_In_ ULONG Size)
DWORD None None.NPGetResourceParent(_In_ LPNETRESOURCE lpNetResource,_Out_ LPVOID lpBuffer,_Inout_ LPDWORD lpcbBuffer)
SECURITY_STATUS None sspicli.SspiCompareAuthIdentities(_In_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE AuthIdentity1,_In_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE AuthIdentity2,_Out_ PBOOLEAN SameSuppliedUser,_Out_ PBOOLEAN SameSuppliedIdentity)
BOOL WINAPI userenv.ExpandEnvironmentStringsForUser(_In_opt_ HANDLE hToken,_In_ LPCTSTR lpSrc,_Out_ LPTSTR lpDest,_In_ DWORD dwSize)
BOOL WINAPI userenv.ExpandEnvironmentStringsForUserW(_In_opt_ HANDLE hToken,_In_ LPCTSTR lpSrc,_Out_ LPTSTR lpDest,_In_ DWORD dwSize)
BOOL WINAPI userenv.ExpandEnvironmentStringsForUserA(_In_opt_ HANDLE hToken,_In_ LPCTSTR lpSrc,_Out_ LPTSTR lpDest,_In_ DWORD dwSize)
NTSTATUS NTAPI None.OpenTokenByLogonId(_In_ PLUID LogonId,_Out_ HANDLE *RetTokenHandle)
LONG WINAPI winscard.SCardAddReaderToGroup(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReaderName,_In_ LPCTSTR szGroupName)
LONG WINAPI winscard.SCardAddReaderToGroupW(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReaderName,_In_ LPCTSTR szGroupName)
LONG WINAPI winscard.SCardAddReaderToGroupA(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReaderName,_In_ LPCTSTR szGroupName)
LONG WINAPI winscard.SCardIntroduceReaderGroup(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szGroupName)
LONG WINAPI winscard.SCardIntroduceReaderGroupW(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szGroupName)
LONG WINAPI winscard.SCardIntroduceReaderGroupA(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szGroupName)
DWORD_PTR None shell32.SHGetFileInfo(_In_ LPCTSTR pszPath,DWORD dwFileAttributes None,_Inout_ SHFILEINFO *psfi,UINT cbFileInfo None,UINT uFlags None)
DWORD_PTR None shell32.SHGetFileInfoW(_In_ LPCTSTR pszPath,DWORD dwFileAttributes None,_Inout_ SHFILEINFO *psfi,UINT cbFileInfo None,UINT uFlags None)
DWORD_PTR None shell32.SHGetFileInfoA(_In_ LPCTSTR pszPath,DWORD dwFileAttributes None,_Inout_ SHFILEINFO *psfi,UINT cbFileInfo None,UINT uFlags None)
DWORD APIENTRY None.NPPasswordChangeNotify(_In_ LPCWSTR lpAuthentInfoType,_In_ LPVOID lpAuthentInfo,_In_ LPCWSTR lpPreviousAuthentInfoType,_In_ LPVOID lpPreviousAuthentInfo,_In_ LPWSTR lpStationName,_In_ LPVOID StationHandle,_In_ DWORD dwChangeInfo)
HICON None shell32.DuplicateIcon(_Reserved_ HINSTANCE hInst,_In_ HICON hIcon)
LONG WINAPI winscard.SCardControl(_In_ SCARDHANDLE hCard,_In_ DWORD dwControlCode,_In_ LPCVOID lpInBuffer,_In_ DWORD nInBufferSize,_Out_ LPVOID lpOutBuffer,_In_ DWORD nOutBufferSize,_Out_ LPDWORD lpBytesReturned)
BOOL None user32.SetWindowContextHelpId(HWND hwnd None,DWORD dwContextHelpId None)
LONG WINAPI winscard.SCardForgetCardType(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCardName)
LONG WINAPI winscard.SCardForgetCardTypeW(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCardName)
LONG WINAPI winscard.SCardForgetCardTypeA(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szCardName)
PUIDLIST_RELATIVE None None.ILSkip(_In_ PUIDLIST_RELATIVE pidl,UINT cb None)
NTSTATUS NTAPI None.SpQueryMetaDataFn(_In_ LSA_SEC_HANDLE CredentialHandle,_In_opt_ PUNICODE_STRING TargetName,_In_ ULONG ContextRequirements,_Out_ ULONG MetaDataLength,_Out_ PUCHAR MetaData,_Inout_ PLSA_SEC_HANDLE ContextHandle)
NTSTATUS None secur32.LsaLookupAuthenticationPackage(_In_ HANDLE LsaHandle,_In_ PLSA_STRING PackageName,_Out_ PULONG AuthenticationPackage)
PVOID None None.AllocateHeap(_In_ ULONG Length)
BOOL None advapi32.CredDelete(_In_ LPCTSTR TargetName,_In_ DWORD Type,_In_ DWORD Flags)
BOOL None advapi32.CredDeleteW(_In_ LPCTSTR TargetName,_In_ DWORD Type,_In_ DWORD Flags)
BOOL None advapi32.CredDeleteA(_In_ LPCTSTR TargetName,_In_ DWORD Type,_In_ DWORD Flags)
DWORD None shdocvw.SoftwareUpdateMessageBox(_In_opt_ HWND hWnd,_In_ PCWSTR pszDistUnit,DWORD dwFlags None,_Out_opt_ LPSOFTDISTINFO psdi)
SECURITY_STATUS SEC_Entry secur32.QueryContextAttributes(_In_ PCtxtHandle phContext,_In_ ULONG ulAttribute,_Out_ PVOID pBuffer)
SECURITY_STATUS SEC_Entry secur32.QueryContextAttributesW(_In_ PCtxtHandle phContext,_In_ ULONG ulAttribute,_Out_ PVOID pBuffer)
SECURITY_STATUS SEC_Entry secur32.QueryContextAttributesA(_In_ PCtxtHandle phContext,_In_ ULONG ulAttribute,_Out_ PVOID pBuffer)
BOOL None None.SHQueueUserWorkItem(LPTHREAD_START_ROUTINE pfnCallback None,LPVOID pContext None,LONG lPriority None,DWORD_PTR dwTag None,DWORD_PTR * pdwId,LPCSTR pszModule None,DWORD dwFlags None)
VOID None None.FreeLsaHeap(_In_ PVOID Base)
SECURITY_STATUS SEC_Entry secur32.MakeSignature(_In_ PCtxtHandle phContext,_In_ ULONG fQOP,_Inout_ PSecBufferDesc pMessage,_In_ ULONG MessageSeqNo)
STDAPI None shcore.UnregisterScaleChangeEvent(_In_ DWORD_PTR dwCookie)
BOOL None shell32.SHChangeNotifyDeregister(ULONG ulID None)
NTSTATUS None None.LsaApLogonUserEx2(_In_ PLSA_CLIENT_REQUEST ClientRequest,_In_ SECURITY_LOGON_TYPE LogonType,_In_ PVOID ProtocolSubmitBuffer,_In_ PVOID ClientBufferBase,_In_ ULONG SubmitBufferSize,_Out_ PVOID *ProfileBuffer,_Out_ PULONG ProfileBufferSize,_Out_ PLUID LogonId,_Out_ PNTSTATUS SubStatus,_Out_ PLSA_TOKEN_INFORMATION_TYPE TokenInformationType,_Out_ PVOID *TokenInformation,_Out_ PUNICODE_STRING *AccountName,_Out_ PUNICODE_STRING *AuthenticatingAuthority,_Out_ PUNICODE_STRING *MachineName,_Out_ PSECPKG_PRIMARY_CRED PrimaryCredentials,_Out_ PSECPKG_SUPPLEMENTAL_CRED_ARRAY *SupplementalCredentials)
HRESULT None shlwapi.SHGetInverseCMAP(_Out_ BYTE *pbMap,_In_ ULONG cbMap)
NTSTATUS None None.DeleteLogonSession(_In_ PLUID LogonId)
DWORD None None.NPAddConnection3(_In_ HWND hwndOwner,_In_ LPNETRESOURCE lpNetResource,_In_ LPTSTR lpPassword,_In_ LPTSTR lpUserName,_In_ DWORD dwFlags)
DWORD WINAPI credui.CredUIPromptForCredentials(_In_opt_ PCREDUI_INFO pUiInfo,_In_ PCTSTR pszTargetName,_In_ PCtxtHandle Reserved,_In_opt_ DWORD dwAuthError,_Inout_ PCTSTR pszUserName,_In_ ULONG ulUserNameMaxChars,_Inout_ PCTSTR pszPassword,_In_ ULONG ulPasswordMaxChars,_Inout_ PBOOL pfSave,_In_ DWORD dwFlags)
DWORD WINAPI credui.CredUIPromptForCredentialsW(_In_opt_ PCREDUI_INFO pUiInfo,_In_ PCTSTR pszTargetName,_In_ PCtxtHandle Reserved,_In_opt_ DWORD dwAuthError,_Inout_ PCTSTR pszUserName,_In_ ULONG ulUserNameMaxChars,_Inout_ PCTSTR pszPassword,_In_ ULONG ulPasswordMaxChars,_Inout_ PBOOL pfSave,_In_ DWORD dwFlags)
DWORD WINAPI credui.CredUIPromptForCredentialsA(_In_opt_ PCREDUI_INFO pUiInfo,_In_ PCTSTR pszTargetName,_In_ PCtxtHandle Reserved,_In_opt_ DWORD dwAuthError,_Inout_ PCTSTR pszUserName,_In_ ULONG ulUserNameMaxChars,_Inout_ PCTSTR pszPassword,_In_ ULONG ulPasswordMaxChars,_Inout_ PBOOL pfSave,_In_ DWORD dwFlags)
NTSTATUS None None.SpExportSecurityContext(_In_ LSA_SEC_HANDLE phContext,_In_ ULONG fFlags,_Out_ PSecBuffer pPackedContext,_Out_ PHANDLE pToken)
NTSTATUS NTAPI advapi32.LsaQueryDomainInformationPolicy(_In_ LSA_HANDLE PolicyHandle,_In_ POLICY_DOMAIN_INFORMATION_CLASS InformationClass,_Out_ PVOID *Buffer)
SECURITY_STATUS SEC_ENTRY secur32.SaslIdentifyPackage(_In_ PSecBufferDesc pInput,_Out_ PSecPkgInfo *PackageInfo)
SECURITY_STATUS SEC_ENTRY secur32.SaslIdentifyPackageW(_In_ PSecBufferDesc pInput,_Out_ PSecPkgInfo *PackageInfo)
SECURITY_STATUS SEC_ENTRY secur32.SaslIdentifyPackageA(_In_ PSecBufferDesc pInput,_Out_ PSecPkgInfo *PackageInfo)
NTSTATUS WINAPI certpoleng.PstValidate(_In_opt_ PUNICODE_STRING pTargetName,_In_ BOOL bIsClient,_In_opt_ CERT_USAGE_MATCH *pRequestedIssuancePolicy,_In_opt_ HCERTSTORE *phAdditionalCertStore,_In_ PCCERT_CONTEXT pCert,_Out_opt_ GUID *pProvGUID)
HRESULT None shell32.SHParseDisplayName(_In_ LPCWSTR pszName,_In_opt_ IBindCtx *pbc,_Out_ PIDLIST_ABSOLUTE *ppidl,_In_ SFGAOF sfgaoIn,_Out_opt_ SFGAOF *psfgaoOut)
NTSTATUS None None.UpdateCredentials(_In_ PSECPKG_PRIMARY_CRED PrimaryCredentials,_In_opt_ PSECPKG_SUPPLEMENTAL_CRED_ARRAY Credentials)
BOOL WINAPI advapi32.CredUnprotect(_In_ BOOL fAsSelf,_In_ LPTSTR pszProtectedCredentials,_In_ DWORD cchCredentials,_Out_ LPTSTR pszCredentials,_Inout_ DWORD *pcchMaxChars)
BOOL WINAPI advapi32.CredUnprotectW(_In_ BOOL fAsSelf,_In_ LPTSTR pszProtectedCredentials,_In_ DWORD cchCredentials,_Out_ LPTSTR pszCredentials,_Inout_ DWORD *pcchMaxChars)
BOOL WINAPI advapi32.CredUnprotectA(_In_ BOOL fAsSelf,_In_ LPTSTR pszProtectedCredentials,_In_ DWORD cchCredentials,_Out_ LPTSTR pszCredentials,_Inout_ DWORD *pcchMaxChars)
HRESULT WINAPI userenv.GetAppContainerFolderPath(_In_ PCWSTR pszAppContainerSid,_Out_ PWSTR *ppszPath)
LONG WINAPI winscard.SCardEstablishContext(_In_ DWORD dwScope,_In_ LPCVOID pvReserved1,_In_ LPCVOID pvReserved2,_Out_ LPSCARDCONTEXT phContext)
HRESULT None shell32.SHGetTemporaryPropertyForItem(_In_ IShellItem *psi,REFPROPERTYKEY pk None,_Out_ PROPVARIANT *ppropvarInk)
DWORD None shell32.DoEnvironmentSubst(_Inout_ LPTSTR pszSrc,UINT cchSrc None)
DWORD None shell32.DoEnvironmentSubstW(_Inout_ LPTSTR pszSrc,UINT cchSrc None)
DWORD None shell32.DoEnvironmentSubstA(_Inout_ LPTSTR pszSrc,UINT cchSrc None)
BOOL None shell32.SHInvokePrinterCommand(_In_opt_ HWND hwnd,UINT uAction None,_In_ LPCTSTR lpBuf1,_In_opt_ LPCTSTR lpBuf2,BOOL fModal None)
BOOL None shell32.SHInvokePrinterCommandW(_In_opt_ HWND hwnd,UINT uAction None,_In_ LPCTSTR lpBuf1,_In_opt_ LPCTSTR lpBuf2,BOOL fModal None)
BOOL None shell32.SHInvokePrinterCommandA(_In_opt_ HWND hwnd,UINT uAction None,_In_ LPCTSTR lpBuf1,_In_opt_ LPCTSTR lpBuf2,BOOL fModal None)
BOOL None shell32.ShellExecuteEx(_Inout_ SHELLEXECUTEINFO *pExecInfo)
BOOL None shell32.ShellExecuteExW(_Inout_ SHELLEXECUTEINFO *pExecInfo)
BOOL None shell32.ShellExecuteExA(_Inout_ SHELLEXECUTEINFO *pExecInfo)
HRESULT None shell32.SHCreateShellItemArrayFromIDLists(_In_ UINT cidl,_In_ PCIDLIST_ABSOLUTE_ARRAY rgpidl,_Out_ IShellItemArray **ppsiItemArray)
uint32 None dnsserverpsprovider.SetByZone([in] boolean PassThru,[in] string ComputerName,[in] string ZoneScope,[in] string ZoneName,[in] string ClientSubnet,[in] string Condition,[in] string Fqdn,[in] string InternetProtocol,[in] string Name,[in] uint32 ProcessingOrder,[in] string QType,[in] string ServerInterfaceIP,[in] string TimeOfDay,[in] string TransportProtocol,[out] DnsServerPolicy cmdletOutput)
void None None.VoidFunc1(void None None)
HRESULT None shell32.SHGetTemporaryPropertyForItem(_In_ IShellItem *psi,REFPROPERTYKEY pk None,_Out_ PROPVARIANT *ppropvarInk)
HRESULT None shell32.SHGetDesktopFolder(_Out_ IShellFolder **ppshf)
SECURITY_STATUS SEC_Entry secur32.DeleteSecurityContext(_In_ PCtxtHandle phContext)
SECURITY_STATUS None None.SspiEncryptAuthIdentityEx(_In_ ULONG Options,_Inout_ PSEC_WINNT_AUTH_IDENTITY_OPAQUE AuthData)
BOOL None None.WlxQueryTsLogonCredentials(_Out_ PWLX_CLIENT_CREDENTIALS_INFO_V2_0 pCred)
HRESULT None shlwapi.UrlFixupW(_In_ PCWSTR pcszUrl,_Out_ PWSTR pszTranslatedUrl,DWORD cchMax None)
HRESULT None shlwapi.UrlFixupW(_In_ PCWSTR pcszUrl,_Out_ PWSTR pszTranslatedUrl,DWORD cchMax None)
HRESULT None shell32.SHGetStockIconInfo(SHSTOCKICONID siid None,UINT uFlags None,_Inout_ SHSTOCKICONINFO *psii)
BOOL None shell32.SHGetPathFromIDList(_In_ PCIDLIST_ABSOLUTE pidl,_Out_ LPTSTR pszPath)
BOOL None shell32.SHGetPathFromIDListW(_In_ PCIDLIST_ABSOLUTE pidl,_Out_ LPTSTR pszPath)
BOOL None shell32.SHGetPathFromIDListA(_In_ PCIDLIST_ABSOLUTE pidl,_Out_ LPTSTR pszPath)
LONG WINAPI winscard.SCardReadCache(_In_ SCARDCONTEXT hContext,_In_ UUID *CardIdentifier,_In_ DWORD FreshnessCounter,_In_ LPTSTR LookupName,_Out_ PBYTE Data,_Out_ DWORD *DataLen)
LONG WINAPI winscard.SCardReadCacheW(_In_ SCARDCONTEXT hContext,_In_ UUID *CardIdentifier,_In_ DWORD FreshnessCounter,_In_ LPTSTR LookupName,_Out_ PBYTE Data,_Out_ DWORD *DataLen)
LONG WINAPI winscard.SCardReadCacheA(_In_ SCARDCONTEXT hContext,_In_ UUID *CardIdentifier,_In_ DWORD FreshnessCounter,_In_ LPTSTR LookupName,_Out_ PBYTE Data,_Out_ DWORD *DataLen)
HRESULT None shell32.AssocGetDetailsOfPropKey(_In_ IShellFolder *psf,_In_ PCUITEMID_CHILD pidl,_In_ PROPERTYKEY *pkey,_Out_ VARIANT *pv,_Out_ BOOL *pfFoundPropKey)
BOOL None shell32.ILIsParent(_In_ PCIDLIST_ABSOLUTE pidl1,_In_ PCIDLIST_ABSOLUTE pidl2,_In_ BOOL fImmediate)
BOOL None shell32.SHGetNewLinkInfo(_In_ LPCTSTR pszLinkTo,_In_ LPCTSTR pszDir,_Out_ LPTSTR pszName,_Out_ BOOL *pfMustCopy,_In_ UINT uFlags)
BOOL None shell32.SHGetNewLinkInfoW(_In_ LPCTSTR pszLinkTo,_In_ LPCTSTR pszDir,_Out_ LPTSTR pszName,_Out_ BOOL *pfMustCopy,_In_ UINT uFlags)
BOOL None shell32.SHGetNewLinkInfoA(_In_ LPCTSTR pszLinkTo,_In_ LPCTSTR pszDir,_Out_ LPTSTR pszName,_Out_ BOOL *pfMustCopy,_In_ UINT uFlags)
HRESULT None None.SHLocalStrDup(PCTSTR psz None,_Out_opt_ PTSTR *ppsz)
HRESULT None None.SHLocalStrDupW(PCTSTR psz None,_Out_opt_ PTSTR *ppsz)
HRESULT None None.SHLocalStrDupA(PCTSTR psz None,_Out_opt_ PTSTR *ppsz)
BOOL None schannel.SslCrackCertificate(_In_ PUCHAR pbCertificate,_In_ DWORD dwCertificate,_In_ DWORD dwFlags,_Out_ PX509Certificate *ppCertificate)
VOID None shell32.DragAcceptFiles(HWND hWnd None,BOOL fAccept None)
HRESULT None shell32.SHRemoveLocalizedName(_In_ PCWSTR pszPath)
HRESULT None None.SetOwner(IUnknown *punkOwner None)
PWSTR None shell32.StrStrNIW(_In_ PWSTR pszFirst,_In_ PCWSTR pszSrch,UINT cchMax None)
HRESULT None shell32.SHCreateDefaultPropertiesOp(_In_ IShellItem *psi,_Out_ IFileOperation **ppFileOp)
BOOL WINAPI userenv.GetProfileType(_Out_ DWORD *pdwFlags)
HRESULT None shell32.SHGetRealIDL(_In_ IShellFolder *psf,_In_ PCUITEMID_CHILD pidlSimple,_Out_ PITEMID_CHILD *ppidlReal)
LRESULT None shell32.SHShellFolderView_Message(_In_ HWND hwndMain,UINT uMsg None,LPARAM lParam None)
HRESULT None None.ILLoadFromStreamEx(_In_ IStream *pstm,_Out_ PITEMID_CHILD *ppidl)
HRESULT WINAPI userenv.CreateAppContainerProfile(_In_ PCWSTR pszAppContainerName,_In_ PCWSTR pszDisplayName,_In_ PCWSTR pszDescription,_In_ PSID_AND_ATTRIBUTES pCapabilities,_In_ DWORD dwCapabilityCount,_Out_ PSID *ppSidAppContainerSid)
BOOL None shell32.PathYetAnotherMakeUniqueName(_Out_ PWSTR pszUniqueName,_In_ PCWSTR pszPath,_In_opt_ PCWSTR pszShort,_In_opt_ PCWSTR pszFileSpec)
LPVOID None shell32.SHAlloc(_In_ SIZE_T cb)
HRESULT None shell32.SHGetInstanceExplorer(_Out_ IUnknown **ppunk)
NTSTATUS WINAPI None.SpValidateTargetInfoFn(_In_opt_ PLSA_CLIENT_REQUEST ClientRequest,_In_ PVOID ProtocolSubmitBuffer,_In_ PVOID ClientBufferBase,_In_ ULONG SubmitBufferLength,_In_ PSECPKG_TARGETINFO TargetInfo)
HRESULT None shell32.SHBindToParent(_In_ PCIDLIST_ABSOLUTE pidl,_In_ REFIID riid,_Out_ VOID **ppv,_Out_ PCUITEMID_CHILD *ppidlLast)
LONG WINAPI winscard.SCardReconnect(_In_ SCARDHANDLE hCard,_In_ DWORD dwShareMode,_In_ DWORD dwPreferredProtocols,_In_ DWORD dwInitialization,_Out_opt_ LPDWORD pdwActiveProtocol)
uint32 None dnsserverpsprovider.AddByZone([in] string ComputerName,[in] boolean PassThru,[in] string TransportProtocol,[in] string TimeOfDay,[in] string ServerInterfaceIP,[in] uint32 ProcessingOrder,[in] string ClientSubnet,[in] boolean Disable,[in] string InternetProtocol,[in] string Name,[in] string Condition,[in] string ZoneName,[in] string Action,[out] DnsServerPolicy cmdletOutput)
HRESULT None shell32.SHLimitInputEdit(_In_opt_ HWND hwndEdit,_In_ IShellFolder *psf)
BOOL WINAPI userenv.GetDefaultUserProfileDirectory(_Out_opt_ LPTSTR lpProfileDir,_Inout_ LPDWORD lpcchSize)
BOOL WINAPI userenv.GetDefaultUserProfileDirectoryW(_Out_opt_ LPTSTR lpProfileDir,_Inout_ LPDWORD lpcchSize)
BOOL WINAPI userenv.GetDefaultUserProfileDirectoryA(_Out_opt_ LPTSTR lpProfileDir,_Inout_ LPDWORD lpcchSize)
HRESULT None shell32.SHMultiFileProperties(_In_ IDataObject *pdtobj,DWORD dwFlags None)
DWORD None shlwapi.CharUpperBuffWrapW(_In_ LPWSTR pch,_In_ DWORD cchLength)
HRESULT None shell32.SHCreateQueryCancelAutoPlayMoniker(_Out_ IMoniker **ppmoniker)
BOOL None shlwapi.MLFreeLibrary(_In_ HMODULE hModule)
TCHAR None shlwapi.SHStripMneumonic(_Inout_ LPTSTR *pszMenu)
TCHAR None shlwapi.SHStripMneumonicW(_Inout_ LPTSTR *pszMenu)
TCHAR None shlwapi.SHStripMneumonicA(_Inout_ LPTSTR *pszMenu)
HRESULT None shell32.SetCurrentProcessExplicitAppUserModelID(_In_ PCWSTR AppID)
BOOL None shell32.DAD_SetDragImage(HIMAGELIST him None,POINT *pptOffset None)
BOOL None shell32.SHFindFiles(_In_opt_ PCIDLIST_ABSOLUTE pidlFolder,_In_opt_ PCIDLIST_ABSOLUTE pidlSaveFile)
BOOL WINAPI userenv.UnloadUserProfile(_In_ HANDLE hToken,_In_ HANDLE hProfile)
uint32 None dnsserverpsprovider.RemoveByZone([in] boolean PassThru,[in] string Name,[in] string ComputerName,[in] boolean Force,[in] string ZoneName,[out] DnsServerPolicy cmdletOutput)
DWORD None shell32.DoEnvironmentSubst(_Inout_ LPTSTR pszSrc,UINT cchSrc None)
DWORD None shell32.DoEnvironmentSubstW(_Inout_ LPTSTR pszSrc,UINT cchSrc None)
DWORD None shell32.DoEnvironmentSubstA(_Inout_ LPTSTR pszSrc,UINT cchSrc None)
BOOL None shell32.SHObjectProperties(_In_ HWND hwnd,_In_ DWORD shopObjectType,_In_ PCWSTR pszObjectName,_In_ PCWSTR pszPropertyPage)
uint32 None dnsserverpsprovider.AddByFileForwardLookupZone([in] boolean LoadExisting,[in] string MasterServers[],[in] string ComputerName,[in] boolean UseRecursion,[in] string Name,[in] uint32 ForwarderTimeout,[in] boolean PassThru,[out] DnsServerConditionalForwarderZone cmdletOutput)
HRESULT None shell32.SHILCreateFromPath(_In_ PCWSTR pszPath,_Out_ PIDLIST_ABSOLUTE *ppidl,_Inout_opt_ DWORD *rgflnOut)
HRESULT None shell32.SHGetKnownFolderPath(_In_ REFKNOWNFOLDERID rfid,_In_ DWORD dwFlags,_In_opt_ HANDLE hToken,_Out_ PWSTR *ppszPath)
HRESULT WINAPI userenv.DeleteAppContainerProfile(_In_ PCWSTR pszAppContainerName)
NTSTATUS NTAPI None.SpQueryMetaDataFn(_In_ LSA_SEC_HANDLE CredentialHandle,_In_opt_ PUNICODE_STRING TargetName,_In_ ULONG ContextRequirements,_Out_ ULONG MetaDataLength,_Out_ PUCHAR MetaData,_Inout_ PLSA_SEC_HANDLE ContextHandle)
LPWSTR None shlwapi.CharLowerWrapW(_Inout_ LPWSTR pch)
uint32 None smiscsitargetprov.ConvertSyncTypeToReplicationType([in] uint16 SyncType,[in] uint16 Mode,[in] uint16 LocalOrRemote,[out] uint16 SupportedReplicationTypes)
NTSTATUS None secur32.LsaLookupAuthenticationPackage(_In_ HANDLE LsaHandle,_In_ PLSA_STRING PackageName,_Out_ PULONG AuthenticationPackage)
NTSTATUS None None.SpGetCredentials(_In_ LSA_SEC_HANDLE CredentialHandle,_Out_ PSecBuffer Credentials)
STDAPI None shcore.GetScaleFactorForMonitor(_In_ HMONITOR hMon,_Out_ DEVICE_SCALE_FACTOR *pScale)
DWORD None shell32.SHRestricted(RESTRICTIONS rest None)
BOOL None None.WlxSetOption(_In_ HANDLE hWlx,_In_ DWORD Option,_In_ ULONG_PTR Value,_Out_ ULONG_PTR *OldValue)
SECURITY_STATUS SEC_Entry secur32.DecryptMessage(_In_ PCtxtHandle phContext,_Inout_ PSecBufferDesc pMessage,_In_ ULONG MessageSeqNo,_Out_ PULONG pfQOP)
SECURITY_STATUS SEC_Entry secur32.AcceptSecurityContext(_In_opt_ PCredHandle phCredential,_Inout_ PCtxtHandle phContext,_In_opt_ PSecBufferDesc pInput,_In_ ULONG fContextReq,_In_ ULONG TargetDataRep,_Inout_opt_ PCtxtHandle phNewContext,_Inout_opt_ PSecBufferDesc pOutput,_Out_ PULONG pfContextAttr,_Out_opt_ PTimeStamp ptsTimeStamp)
NTSTATUS None None.SpMakeSignature(_In_ LSA_SEC_HANDLE ContextHandle,_In_ ULONG QualityOfProtection,_Inout_ PSecBufferDesc MessageBuffers,_In_ ULONG MessageSequenceNumber)
SECURITY_STATUS SEC_Entry secur32.CompleteAuthToken(_In_ PCtxtHandle phContext,_In_ PSecBufferDesc pToken)
HRESULT None None.StringCchCopyEx(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCchCopyExW(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCchCopyExA(_Out_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcchRemaining,_In_ DWORD dwFlags)
BOOL None shell32.WriteCabinetState(_In_ CABINETSTATE *pcs)
BOOL WINAPI userenv.CreateUserProfileEx(_In_ PSID pSid,_In_ LPCTSTR lpUserName,_In_opt_ LPCTSTR lpUserHive,_Out_opt_ LPTSTR lpProfileDir,_In_ DWORD dwDirSize,_In_ BOOL bWin9xUpg)
BOOL WINAPI userenv.CreateUserProfileExW(_In_ PSID pSid,_In_ LPCTSTR lpUserName,_In_opt_ LPCTSTR lpUserHive,_Out_opt_ LPTSTR lpProfileDir,_In_ DWORD dwDirSize,_In_ BOOL bWin9xUpg)
BOOL WINAPI userenv.CreateUserProfileExA(_In_ PSID pSid,_In_ LPCTSTR lpUserName,_In_opt_ LPCTSTR lpUserHive,_Out_opt_ LPTSTR lpProfileDir,_In_ DWORD dwDirSize,_In_ BOOL bWin9xUpg)
HRESULT None shell32.SHLoadInProc(_In_ REFCLSID rclsid)
NTSTATUS None secur32.LsaFreeReturnBuffer(_In_ PVOID Buffer)
LONG WINAPI winscard.SCardIntroduceReader(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReaderName,_In_ LPCTSTR szDeviceName)
LONG WINAPI winscard.SCardIntroduceReaderW(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReaderName,_In_ LPCTSTR szDeviceName)
LONG WINAPI winscard.SCardIntroduceReaderA(_In_ SCARDCONTEXT hContext,_In_ LPCTSTR szReaderName,_In_ LPCTSTR szDeviceName)
SECURITY_STATUS SEC_ENTRY secur32.SaslSetContextOption(_In_ PCtxtHandle ContextHandle,_In_ ULONG Option,_In_ PVOID Value,_In_ ULONG Size)
HRESULT None None.ILLoadFromStreamEx(_In_ IStream *pstm,_Out_ PIDLIST_ABSOLUTE *ppidl)
HRESULT None shell32.SHGetSetFolderCustomSettings(_Inout_ LPSHFOLDERCUSTOMSETTINGS pfcs,_In_ PCTSTR pszPath,DWORD dwReadWrite None)
HRESULT WINAPI userenv.CreateProfile(_In_ LPCWSTR pszUserSid,_In_ LPCWSTR pszUserName,_Out_ LPWSTR pszProfilePath,_In_ DWORD cchProfilePath)
BOOL None shell32.GUIDFromString(_In_ LPCTSTR psz,_Out_ LPGUID pguid)
BOOL None shell32.GUIDFromStringW(_In_ LPCTSTR psz,_Out_ LPGUID pguid)
BOOL None shell32.GUIDFromStringA(_In_ LPCTSTR psz,_Out_ LPGUID pguid)
BOOL None shell32.Shell_GetImageLists(_In_ HIMAGELIST *phiml,_In_ HIMAGELIST *phimlSmall)
HRESULT None shell32.CIDLData_CreateFromIDArray(_In_ PCIDLIST_ABSOLUTE pidlFolder,_In_ UINT cidl,_In_ PCUIDLIST_RELATIVE_ARRAY apidl,_Out_ IDataObject **ppdtobj)
ULONG None twinapi.core.RegisterAppStateChangeNotification(_In_ PAPPSTATE_CHANGE_ROUTINE Routine,_In_opt_ PVOID Context,_Out_ PAPPSTATE_REGISTRATION *Registration)
HRESULT None shlwapi.SHIsChildOrSelf(_In_ HWND hwndParent,_In_ HWND hwnd)
BOOL WINAPI userenv.LoadUserProfile(_In_ HANDLE hToken,_Inout_ LPPROFILEINFO lpProfileInfo)
BOOL WINAPI userenv.LoadUserProfileW(_In_ HANDLE hToken,_Inout_ LPPROFILEINFO lpProfileInfo)
BOOL WINAPI userenv.LoadUserProfileA(_In_ HANDLE hToken,_Inout_ LPPROFILEINFO lpProfileInfo)
HRESULT None shell32.ILLoadFromStream(_In_ IStream *pstm,_Out_ PIDLIST_RELATIVE *pidl)
STDAPI None ntshrui.CanShareFolderW(_In_ LPCWSTR pszPath)
STDAPI None ntshrui.CanShareFolderW(_In_ LPCWSTR pszPath)
HINSTANCE None shlwapi.MLLoadLibrary(_In_ LPCTSTR lpszLibFileName,_In_ HMODULE hModule,_In_ DWORD dwCrossCodePage)
HINSTANCE None shlwapi.MLLoadLibraryW(_In_ LPCTSTR lpszLibFileName,_In_ HMODULE hModule,_In_ DWORD dwCrossCodePage)
HINSTANCE None shlwapi.MLLoadLibraryA(_In_ LPCTSTR lpszLibFileName,_In_ HMODULE hModule,_In_ DWORD dwCrossCodePage)
PIDLIST_ABSOLUTE None shell32.SHBrowseForFolder(_In_ LPBROWSEINFO lpbi)
PIDLIST_ABSOLUTE None shell32.SHBrowseForFolderW(_In_ LPBROWSEINFO lpbi)
PIDLIST_ABSOLUTE None shell32.SHBrowseForFolderA(_In_ LPBROWSEINFO lpbi)
HICON None shell32.ExtractAssociatedIconEx(_Reserved_ HINSTANCE hInst,_Inout_ LPTSTR lpIconPath,_Inout_ LPWORD lpiIconIndex,_Inout_ LPWORD lpiIconId)
HICON None shell32.ExtractAssociatedIconExW(_Reserved_ HINSTANCE hInst,_Inout_ LPTSTR lpIconPath,_Inout_ LPWORD lpiIconIndex,_Inout_ LPWORD lpiIconId)
HICON None shell32.ExtractAssociatedIconExA(_Reserved_ HINSTANCE hInst,_Inout_ LPTSTR lpIconPath,_Inout_ LPWORD lpiIconIndex,_Inout_ LPWORD lpiIconId)
BOOL None shell32.SHCreateProcessAsUserW(_Inout_ PSHCREATEPROCESSINFOW pscpi)
BOOL None shell32.SHCreateProcessAsUserW(_Inout_ PSHCREATEPROCESSINFOW pscpi)
BOOL None shell32.Win32DeleteFile(_In_ PCWSTR pszFileName)
UINT None shell32.SHReplaceFromPropSheetExtArray(_In_ HPSXA hpsxa,UINT uPageID None,_In_ LPFNADDPROPSHEETPAGE lpfnReplaceWith,LPARAM lParam None)
BOOL __inline None.IDListContainerIsConsistent(_In_ PCUIDLIST_RELATIVE pidl,_In_ UINT cbAlloc)
uint32 None smiscsitargetprov.GetSupportedGroupOperations([in] uint16 ReplicationType,[out] uint16 SupportedGroupOperations[])
DWORD None shell32.SHFormatDrive(_In_ HWND hwnd,UINT drive None,UINT fmtID None,UINT options None)
HRESULT None shell32.SHLoadOLE(_In_ LPARAM lParam)
BOOL None shell32.FileIconInit(_In_ BOOL fRestoreCache)
BOOL None shell32.SHValidateUNC(_In_opt_ HWND hwndOwner,_Inout_ PWSTR pszFile,UINT fConnect None)
HRESULT None shell32.SHQueryUserNotificationState(_Out_ QUERY_USER_NOTIFICATION_STATE *pquns)
BOOL None shell32.DAD_DragMove(POINT pt None)
UINT None shell32.Shell_MergeMenus(_In_ HMENU hmDst,_In_ HMENU hmSrc,UINT uInsert None,UINT uIDAdjust None,UINT uIDAdjustMax None,ULONG uFlags None)
SECURITY_STATUS SEC_Entry secur32.AcceptSecurityContext(_In_opt_ PCredHandle phCredential,_Inout_ PCtxtHandle phContext,_In_opt_ PSecBufferDesc pInput,_In_ ULONG fContextReq,_In_ ULONG TargetDataRep,_Inout_opt_ PCtxtHandle phNewContext,_Inout_opt_ PSecBufferDesc pOutput,_Out_ PULONG pfContextAttr,_Out_opt_ PTimeStamp ptsTimeStamp)
PCUIDLIST_RELATIVE None None.ILNext(_In_ PCUIDLIST_RELATIVE pidl)
BOOL WINAPI userenv.DeleteProfile(_In_ LPCTSTR lpSidString,_In_opt_ LPCTSTR lpProfilePath,_In_opt_ LPCTSTR lpComputerName)
BOOL WINAPI userenv.DeleteProfileW(_In_ LPCTSTR lpSidString,_In_opt_ LPCTSTR lpProfilePath,_In_opt_ LPCTSTR lpComputerName)
BOOL WINAPI userenv.DeleteProfileA(_In_ LPCTSTR lpSidString,_In_opt_ LPCTSTR lpProfilePath,_In_opt_ LPCTSTR lpComputerName)
uint32 None None.OnlineDevice([in] boolean Online)
HRESULT None shell32.SHGetIDListFromObject(_In_ IUnknown *punk,_Out_ PIDLIST_ABSOLUTE *ppidl)
LPVOID None ole32.CoTaskMemAlloc(_In_ SIZE_T cb)
PIDLIST_ABSOLUTE None shell32.SHBrowseForFolder(_In_ LPBROWSEINFO lpbi)
PIDLIST_ABSOLUTE None shell32.SHBrowseForFolderW(_In_ LPBROWSEINFO lpbi)
PIDLIST_ABSOLUTE None shell32.SHBrowseForFolderA(_In_ LPBROWSEINFO lpbi)
HRESULT None None.Clone([out] IEnumSyncMgrSyncItems **ppenum)
PIDLIST_ABSOLUTE None None.ILCloneFull(_In_ PCUIDLIST_ABSOLUTE pidl)
HPSXA None shell32.SHCreatePropSheetExtArray(_In_ HKEY hkey,_In_opt_ PCWSTR pszSubkey,UINT max_iface None)
HRESULT None shell32.SHGetMalloc(LPMALLOC *ppMalloc None)
LONG None shlwapi.SHRegGetValueFromHKCUHKLM(_In_ PCWSTR pwszKey,_In_ PCWSTR pwszValue,_In_ SRRF srrfFlags,_Out_ DWORD *pdwType,_In_ LPCVOID pvData,_Inout_ DWORD *pcbData)
LSTATUS None shlwapi.SHRegGetValue(_In_ HKEY hkey,_In_ LPCTSTR pszSubKey,_In_ LPCTSTR pszValue,_In_ SRRF srrfFlags,_Inout_ LPDWORD pdwType,_Out_ LPVOID pvData,_Inout_ LPDWORD pcbData)
LSTATUS None shlwapi.SHRegGetValueW(_In_ HKEY hkey,_In_ LPCTSTR pszSubKey,_In_ LPCTSTR pszValue,_In_ SRRF srrfFlags,_Inout_ LPDWORD pdwType,_Out_ LPVOID pvData,_Inout_ LPDWORD pcbData)
LSTATUS None shlwapi.SHRegGetValueA(_In_ HKEY hkey,_In_ LPCTSTR pszSubKey,_In_ LPCTSTR pszValue,_In_ SRRF srrfFlags,_Inout_ LPDWORD pdwType,_Out_ LPVOID pvData,_Inout_ LPDWORD pcbData)
HRESULT None url.URLAssociationDialog(HWND hwndParent None,DWORD dwInFlags None,PTCSTR pcszFile None,PTCSTR pcszURL None,_Out_ PTSTR pszAppBuf,UINT ucAppBufLen None)
HRESULT None url.URLAssociationDialogW(HWND hwndParent None,DWORD dwInFlags None,PTCSTR pcszFile None,PTCSTR pcszURL None,_Out_ PTSTR pszAppBuf,UINT ucAppBufLen None)
HRESULT None url.URLAssociationDialogA(HWND hwndParent None,DWORD dwInFlags None,PTCSTR pcszFile None,PTCSTR pcszURL None,_Out_ PTSTR pszAppBuf,UINT ucAppBufLen None)
uint32 None smiscsitargetprov.GetSupportedCopyStates([in] uint16 ReplicationType,[out] uint16 SupportedCopyStates[],[out] boolean HostAccessible[])
HRESULT None ole32.CoMarshalInterface(_In_ LPSTREAM pStm,_In_ REFIID riid,_In_ LPUNKNOWN pUnk,_In_ DWORD dwDestContext,_In_opt_ LPVOID pvDestContext,_In_ DWORD mshlflags)
HRESULT None shell32.ILLoadFromStreamEx(_In_ IStream *pstm,_Out_ PIDLIST_RELATIVE *pidl)
BOOL None shell32.DAD_ShowDragImage(BOOL fShow None)
PIDLIST_ABSOLUTE None shell32.SHSimpleIDListFromPath(_In_ PCWSTR pszPath)
BOOL None shlwapi.SHFreeShared(_In_ HANDLE hData,_In_ DWORD dwProcessId)
HRESULT None ole32.OleSetClipboard(_In_ LPDATAOBJECT pDataObj)
HRESULT None shell32.Resolve(HWND hwnd None,DWORD fFlags None)
uint32 None smiscsitargetprov.GetDefaultReplicationSettingData([in] uint16 ReplicationType,[out] string DefaultInstance)
HRESULT None None.GetTime([out] FILETIME *pfCreationTime)
HRESULT None shell32.SHGetAttributesFromDataObject(_In_opt_ IDataObject *pdo,DWORD dwAttributeMask None,_Out_opt_ DWORD *pdwAttributes,_Out_opt_ UINT *pcItems)
BOOL None shell32.GetFileNameFromBrowse(_In_opt_ HWND hwnd,_Inout_ PWSTR pszFilePath,UINT cchFilePath None,_In_opt_ PCWSTR pszWorkingDir,_In_ PCWSTR pszDefExt,_In_opt_ PCWSTR pszFilters,_In_opt_ PCWSTR szTitle)
STDAPI None shcore.RegisterScaleChangeNotifications(_In_ DISPLAY_DEVICE_TYPE displayDevice,_In_ HWND hwndNotify,_In_ UINT uMsgNotify,_Out_ DWORD *pdwCookie)
HRESULT None shlwapi.ConnectToConnectionPoint(_In_opt_ IUnknown *punk,_In_ REFIID riidEvent,BOOL fConnect None,_In_ IUnknown *punkTarget,_Out_ DWORD *pdwCookie,_Out_opt_ IConnectionPoint **ppcpOut)
NTSTATUS None None.LsapChangeBlankPasswordRestriction(_In_ BOOLEAN Enable)
BOOL None shell32.PathIsExe(_In_ PCWSTR szfile)
BOOL None shlwapi.IsCharAlphaNumericWrapW(_In_ WCHAR ch)
BOOL None shell32.PathIsSlow(_In_ LPCTSTR pszFile,DWORD dwFileAttr None)
BOOL None shell32.PathIsSlowW(_In_ LPCTSTR pszFile,DWORD dwFileAttr None)
BOOL None shell32.PathIsSlowA(_In_ LPCTSTR pszFile,DWORD dwFileAttr None)
BOOL None shell32.SHRegGetBoolValueFromHKCUHKLM(PCWSTR pszKey None,_In_ PCWSTR pszValue,_In_ BOOL fDefault)
PUIDLIST_RELATIVE None shell32.ILFindChild(_In_ PCIDLIST_ABSOLUTE pidlParent,_In_ PCIDLIST_ABSOLUTE pidlChild)
BOOL None comctl32.GetWindowSubclass(_In_ HWND hWnd,_In_ SUBCLASSPROC pfnSubclass,_In_ UINT_PTR uIdSubclass,_Out_ DWORD_PTR *pdwRefData)
not running shell32.STDMETHOD(CancelAsyncSearch None None)
BOOL None shell32.UpdateAllDesktopSubscriptions(IADesktopP2 *padp2 None)
HRESULT None winshfhc.EstimateFileRiskLevel(_In_ LPCWSTR pszFilePath,_In_ LPCWSTR pszExt,_In_ LPCWSTR pszHandler,_Out_ FILE_RISK_LEVEL *pfrlEstimate)
HRESULT None None.StringCbCopyEx(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCbCopyExW(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags)
HRESULT None None.StringCbCopyExA(_Out_ LPTSTR pszDest,_In_ size_t cbDest,_In_ LPCTSTR pszSrc,_Out_opt_ LPTSTR *ppszDestEnd,_Out_opt_ size_t *pcbRemaining,_In_ DWORD dwFlags)
LRESULT None comctl32.DefSubclassProc(_In_ HWND hWnd,_In_ UINT uMsg,_In_ WPARAM WPARAM,_In_ LPARAM LPARAM)
VOID None ole32.OleDestroyMenuDescriptor(_In_ HOLEMENU holemenu)
HRESULT None ole32.OleSetContainedObject(_In_ LPUNKNOWN pUnknown,_In_ BOOL fContained)
HRESULT None None.MyFunction([in] short count)
HRESULT None ole32.OleSaveToStream(_In_ LPPERSISTSTREAM pPStm,_In_ LPSTREAM pStm)
HRESULT None None.GetFieldDescriptorCount([out] DWORD *pdwCount)
HRESULT None ole32.OleCreateStaticFromData(_In_ LPDATAOBJECT pSrcDataObj,_In_ REFIID iid,_In_ DWORD renderopt,_In_ LPFORMATETC pFormatEtc,_In_ LPOLECLIENTSITE pClientSite,_In_ LPSTORAGE pStg,_Out_ LPVOID *ppvObj)
HRESULT None shell32.SHGetKnownFolderIDList(_In_ REFKNOWNFOLDERID rfid,_In_ DWORD dwFlags,_In_ HANDLE hToken,_Out_ PIDLIST_ABSOLUTE *ppidl)
HRESULT None ole32.OleLoad(_In_ LPSTORAGE pStg,_In_ REFIID riid,_In_ LPOLECLIENTSITE pClientSite,_Out_ LPVOID *ppvObj)
HRESULT None ole32.OleGetClipboard(_Out_ LPDATAOBJECT *ppDataObj)
BOOL None shell32.SHGetDiskFreeSpace(LPCTSTR pszVolume None,ULARGE_INTEGER *pqwFreeCaller None,ULARGE_INTEGER *pqwTot None,ULARGE_INTEGER *pqwFree None)
HRESULT None ole32.RevokeDragDrop(_In_ HWND hwnd)
HRESULT None shell32.OnViewWindowActive(IShellView *ppshv None)
HRESULT None None.GetLinkReference([out] LPWSTR *ppszLinkReference)
HRESULT None None.MyMethod([out None None,retval] InMyFace** ReturnVal)
HRESULT None shlwapi.SHCreateStreamOnFile(_In_ LPCTSTR pszFile,_In_ DWORD grfMode,_Out_ IStream **ppstm)
HRESULT None shlwapi.SHCreateStreamOnFileW(_In_ LPCTSTR pszFile,_In_ DWORD grfMode,_Out_ IStream **ppstm)
HRESULT None shlwapi.SHCreateStreamOnFileA(_In_ LPCTSTR pszFile,_In_ DWORD grfMode,_Out_ IStream **ppstm)
HRESULT None ole32.OleDraw(_In_ LPUNKNOWN pUnknown,_In_ DWORD dwAspect,_In_ HDC hdcDraw,_In_ LPCRECT lprcBounds)
HRESULT None ole32.OleCreateFromDataEx(_In_ LPDATAOBJECT pSrcDataObj,_In_ REFIID riid,_In_ DWORD dwFlags,_In_ DWORD renderopt,_In_ ULONG cFormats,_In_ DWORD *rgAdvf,_In_ LPFORMATETC rgFormatEtc,_In_ IAdviseSink *lpAdviseSink,_Out_ DWORD *rgdwConnection,_In_ LPOLECLIENTSITE pClientSite,_In_ LPSTORAGE pStg,_Out_ LPVOID *ppvObj)
HRESULT None shell32.SetToolbarItems(LPTBBUTTONSB lpButtons None,UINT nButtons None,UINT uFlags None)
HRESULT None ole32.OleCreateDefaultHandler(_In_ REFCLSID clsid,_In_ LPUNKNOWN pUnkOuter,_In_ REFIID riid,_Out_ LPVOID *lplpObj)
UINT None shell32.ILGetSize(_In_opt_ PCUIDLIST_RELATIVE pidl)
BOOL None shell32.SignalFileOpen(_In_ PCIDLIST_ABSOLUTE pidl)
HRESULT None shell32.GetId([out] KNOWNFOLDERID *pkfid)
HRESULT None shell32.GetAppInfo([out] APPINFODATA *pInfo)
HRESULT None ole32.OleCreateFromFile(_In_ REFCLSID rclsid,_In_ LPCOLESTR lpszFileName,_In_ REFIID riid,_In_ DWORD renderopt,_In_ LPFORMATETC lpFormatEtc,_In_ LPOLECLIENTSITE pClientSite,_In_ LPSTORAGE pStg,_Out_ LPVOID *ppvObj)
BOOL None oledlg.OleUICanConvertOrActivateAs(_In_ REFCLSID rClsid,_In_ BOOL fIsLinkedObject,_In_ WORD wFormat)
HINSTANCE None shell32.FindExecutable(_In_ LPCTSTR lpFile,_In_opt_ LPCTSTR lpDirectory,_Out_ LPTSTR lpResult)
HINSTANCE None shell32.FindExecutableW(_In_ LPCTSTR lpFile,_In_opt_ LPCTSTR lpDirectory,_Out_ LPTSTR lpResult)
HINSTANCE None shell32.FindExecutableA(_In_ LPCTSTR lpFile,_In_opt_ LPCTSTR lpDirectory,_Out_ LPTSTR lpResult)
UINT None shell32.SHAddFromPropSheetExtArray(_In_ HPSXA hpsxa,_In_ LPFNADDPROPSHEETPAGE lpfnAddPage,LPARAM lParam None)
void None None.MyUpdateImage(LPCWSTR pszHashItem None,int iIndex None,UINT uFlags None,int iImageIndex None)
uint32 None dnsserverpsprovider.Get([in] string ComputerName,[out] DnsServer cmdletOutput)
BOOL None oledlg.OleUIAddVerbMenu(_In_opt_ LPOLEOBJECT lpOleObj,_In_opt_ LPCTSTR lpszShortType,_In_ HMENU hMenu,_In_ UINT uPos,_In_ UINT uIDVerbMin,_In_ UINT uIDVerbMax,_In_ BOOL bAddConvert,_In_ UINT idConvert,_Out_ HMENU *lphMenu)
BOOL None oledlg.OleUIAddVerbMenuW(_In_opt_ LPOLEOBJECT lpOleObj,_In_opt_ LPCTSTR lpszShortType,_In_ HMENU hMenu,_In_ UINT uPos,_In_ UINT uIDVerbMin,_In_ UINT uIDVerbMax,_In_ BOOL bAddConvert,_In_ UINT idConvert,_Out_ HMENU *lphMenu)
BOOL None oledlg.OleUIAddVerbMenuA(_In_opt_ LPOLEOBJECT lpOleObj,_In_opt_ LPCTSTR lpszShortType,_In_ HMENU hMenu,_In_ UINT uPos,_In_ UINT uIDVerbMin,_In_ UINT uIDVerbMax,_In_ BOOL bAddConvert,_In_ UINT idConvert,_Out_ HMENU *lphMenu)
void None None.MyUpdateImage(LPCWSTR pszHashItem None,int iIndex None,UINT uFlags None,int iImageIndex None)
HRESULT None shell32.GetFlags([out] DWORD *pdwFlags)
HRESULT None shell32.GetAsyncMode([out] BOOL *pfIsOpAsync)
HRESULT None None.GetItemID([out] LPWSTR *ppszItemID)
DWORD None user32.GetWindowContextHelpId(HWND hwnd None)
HRESULT None None.GetPublishedAppInfo([out] PUBAPPINFO *pInfo)
HRESULT None shell32.InsertMenusSB(HMENU hmenuShared None,LPOLEMENUGROUPWIDTHS lpMenuWidths None)
uint32 None dnsserverpsprovider.AddByFileForwardLookupZone([in] string ResponsiblePerson,[in] string DynamicUpdate,[in] boolean LoadExisting,[in] string ComputerName,[in] string Name,[in] string ZoneFile,[in] boolean PassThru,[out] DnsServerPrimaryZone cmdletOutput)
PUITEMID_CHILD None shell32.ILFindLastID(_In_ PCUIDLIST_RELATIVE pidl)
HRESULT None None.get_FolderFlags([out] DWORD *pdwFlags)
HRESULT None shell32.InOperation([out] BOOL *pfInAsyncOp)
HRESULT None None.GetFileTypeIndex([out] UINT *piFileType)
HRESULT None ole32.OleSave(_In_ LPPERSISTSTORAGE pPS,_In_ LPSTORAGE pStg,_In_ BOOL fSameAsLoad)
UINT None oledlg.OleUIBusy(_In_ LPOLEUIBUSY lpBZ)
UINT None oledlg.OleUIBusyW(_In_ LPOLEUIBUSY lpBZ)
UINT None oledlg.OleUIBusyA(_In_ LPOLEUIBUSY lpBZ)
HRESULT None None.MyFunc([in None None,optional] VARIANT Param1,[out None None,optional] VARIANT Param2)
uint32 None dnsserverpsprovider.AddByADReverseLookupZone([in] string ResponsiblePerson,[in] string DynamicUpdate,[in] boolean LoadExisting,[in] string NetworkID,[in] string ComputerName,[in] string DirectoryPartitionName,[in] string ReplicationScope,[in] boolean PassThru,[out] DnsServerPrimaryZone cmdletOutput[])
RESULT None shell32.SetMenuSB(HMENU hmenuShared None,HOLEMENU holemenuRes None,HWND hwndActiveObject None)
HRESULT None ole32.OleSetMenuDescriptor(_In_ HOLEMENU holemenu,_In_ HWND hwndFrame,_In_ HWND hwndActiveObject,_In_ LPOLEINPLACEFRAME lpFrame,_In_ LPOLEINPLACEACTIVEOBJECT lpActiveObj)
UINT None oledlg.OleUIChangeIcon(_In_ LPOLEUICHANGEICON lpCI)
UINT None oledlg.OleUIChangeIconW(_In_ LPOLEUICHANGEICON lpCI)
UINT None oledlg.OleUIChangeIconA(_In_ LPOLEUICHANGEICON lpCI)
UINT None oledlg.OleUIEditLinks(_In_ LPOLEUIEDITLINKS lpEL)
UINT None oledlg.OleUIEditLinksW(_In_ LPOLEUIEDITLINKS lpEL)
UINT None oledlg.OleUIEditLinksA(_In_ LPOLEUIEDITLINKS lpEL)
void None None.MyProcedure_notify_flag(boolean __MIDL_NotifyFlag None)
HRESULT None ole32.DoDragDrop(_In_ LPDATAOBJECT pDataObj,_In_ LPDROPSOURCE pDropSource,_In_ DWORD dwOKEffects,_Out_ LPDWORD pdwEffect)
HRESULT None shell32.SHEmptyRecycleBin(_In_opt_ HWND hwnd,_In_opt_ LPCTSTR pszRootPath,DWORD dwFlags None)
HRESULT None shell32.SHEmptyRecycleBinW(_In_opt_ HWND hwnd,_In_opt_ LPCTSTR pszRootPath,DWORD dwFlags None)
HRESULT None shell32.SHEmptyRecycleBinA(_In_opt_ HWND hwnd,_In_opt_ LPCTSTR pszRootPath,DWORD dwFlags None)
void None None.MyProcedure_notify(void None None)
HRESULT None oleaut32.OleLoadPicture(_In_ LPSTREAM lpstream,_In_ LONG lSize,_In_ BOOL fRunmode,_In_ REFIID riid,_Out_ LPVOID *lplpvObj)
HRESULT None ole32.OleCreateLinkFromDataEx(_In_ LPDATAOBJECT pSrcDataObj,_In_ REFIID riid,_In_ DWORD dwFlags,_In_ DWORD renderopt,_In_ ULONG cFormats,_In_ DWORD *rgAdvf,_In_ LPFORMATETC rgFormatEtc,_In_ IAdviseSink *lpAdviseSink,_Inout_ DWORD *rgdwConnection,_In_ LPOLECLIENTSITE pClientSite,_In_ LPSTORAGE pStg,_Out_ LPVOID *ppvObj)
HRESULT None ole32.OleInitialize(_In_ LPVOID pvReserved)
HRESULT None shell32.SHCreateShellItem(_In_opt_ PCIDLIST_ABSOLUTE pidlParent,_In_opt_ IShellFolder *psfParent,_In_ PCUITEMID_CHILD pidl,_Out_ IShellItem **ppsi)
HRESULT None ole32.OleCreateLinkToFileEx(_In_ LPCOLESTR lpszFileName,_In_ REFIID riid,_In_ DWORD dwFlags,_In_ DWORD renderopt,_In_ ULONG cFormats,_In_ DWORD *rgAdvf,_In_ LPFORMATETC rgFormatEtc,_In_ IAdviseSink *lpAdviseSink,_Out_ DWORD *rgdwConnection,_In_ LPOLECLIENTSITE pClientSite,_In_ LPSTORAGE pStg,_Out_ LPVOID *ppvObj)
LSTATUS None shlwapi.SHSetValue(_In_ HKEY hkey,_In_opt_ LPCTSTR pszSubKey,_In_opt_ LPCTSTR pszValue,_In_ DWORD dwType,_In_opt_ LPCVOID pvData,_In_ DWORD cbData)
LSTATUS None shlwapi.SHSetValueW(_In_ HKEY hkey,_In_opt_ LPCTSTR pszSubKey,_In_opt_ LPCTSTR pszValue,_In_ DWORD dwType,_In_opt_ LPCVOID pvData,_In_ DWORD cbData)
LSTATUS None shlwapi.SHSetValueA(_In_ HKEY hkey,_In_opt_ LPCTSTR pszSubKey,_In_opt_ LPCTSTR pszValue,_In_ DWORD dwType,_In_opt_ LPCVOID pvData,_In_ DWORD cbData)
UINT None oledlg.OleUIChangeSource(_In_ LPOLEUICHANGESOURCE lpCS)
UINT None oledlg.OleUIChangeSourceW(_In_ LPOLEUICHANGESOURCE lpCS)
UINT None oledlg.OleUIChangeSourceA(_In_ LPOLEUICHANGESOURCE lpCS)
BOOL None shell32.Shell_NotifyIcon(_In_ DWORD dwMessage,_In_ PNOTIFYICONDATA lpdata)
BOOL None shell32.Shell_NotifyIconW(_In_ DWORD dwMessage,_In_ PNOTIFYICONDATA lpdata)
BOOL None shell32.Shell_NotifyIconA(_In_ DWORD dwMessage,_In_ PNOTIFYICONDATA lpdata)
HRESULT None None.GetSourceViewSizePreference([out] APPLICATION_VIEW_SIZE_PREFERENCE *sourceSizeAfterLaunch)
midl_pragma None None.warning(warning_option : message_list)
HRESULT None ole32.OleIsCurrentClipboard(_In_ LPDATAOBJECT pDataObj)
HRESULT None None.GetFolderType([out] FOLDERTYPEID *pftid)
HRESULT None ole32.OleCreateEx(_In_ REFCLSID rclsid,_In_ REFIID riid,_In_ DWORD dwFlags,_In_ DWORD renderopt,_In_ ULONG cFormats,_In_ DWORD *rgAdvf,_In_ LPFORMATETC rgFormatEtc,_In_ IAdviseSink *lpAdviseSink,_Out_ DWORD *rgdwConnection,_In_ LPOLECLIENTSITE pClientSite,_In_ LPSTORAGE pStg,_Out_ LPVOID *ppvObj)
HRESULT None ole32.RegisterDragDrop(_In_ HWND hwnd,_In_ LPDROPTARGET pDropTarget)
HRESULT None None.Method3([in None None,readonly] int iMmutable)
HRESULT None oleaut32.OleCreatePictureIndirect(_In_ LPPICTDESC lpPictDesc,_In_ REFIID riid,_In_ BOOL fOwn,_Out_ LPVOID *lplpvObj)
HRESULT None ole32.CreateDataAdviseHolder(_Out_ LPDATAADVISEHOLDER *ppDAHolder)
uint32 None dnsserverpsprovider.Set([in] string ComputerName,[in] string ZoneName,[in] string NodeName,[in] boolean Recurse,[in] boolean Force)
HRESULT None shell32.SetPath(LPCTSTR pszFile None)
HRESULT None None.Proc3([in] short Arr[MAX_SIZE])
HWND None None.GetContractDelegateWindow(_In_ HWND hwndSource)
HRESULT None None.GetUserClassID([out] CLSID *pClsid)
HRESULT None shell32.GetColumnInfo(DWORD dwIndex None,[out] SHCOLUMNINFO *psci)
HRESULT WINAPI userenv.GetAppContainerRegistryLocation(_In_ REGSAM desiredAccess,_Out_ PHKEY phAppContainerKey)
HRESULT None shell32.SHStartNetConnectionDialog(_In_opt_ HWND hwnd,_In_opt_ LPCTSTR pszRemoteName,DWORD dwType None)
HRESULT None shell32.SHStartNetConnectionDialogW(_In_opt_ HWND hwnd,_In_opt_ LPCTSTR pszRemoteName,DWORD dwType None)
HRESULT None shell32.SHStartNetConnectionDialogA(_In_opt_ HWND hwnd,_In_opt_ LPCTSTR pszRemoteName,DWORD dwType None)
HRESULT None ole32.OleNoteObjectVisible(_In_ LPUNKNOWN pUnknown,_In_ BOOL fVisible)
HOLEMENU None ole32.OleCreateMenuDescriptor(_In_ HMENU hmenuCombined,_In_ LPOLEMENUGROUPWIDTHS lpMenuWidths)
HRESULT None ole32.OleLoadFromStream(_In_ LPSTREAM pStm,_In_ REFIID iidInterface,_Out_ LPVOID *ppvObj)
BOOL None shell32.Shell_NotifyIcon(_In_ DWORD dwMessage,_In_ PNOTIFYICONDATA lpdata)
BOOL None shell32.Shell_NotifyIconW(_In_ DWORD dwMessage,_In_ PNOTIFYICONDATA lpdata)
BOOL None shell32.Shell_NotifyIconA(_In_ DWORD dwMessage,_In_ PNOTIFYICONDATA lpdata)
HRESULT None shell32.SHGetDriveMedia(_In_ PCWSTR pszDrive,_Out_ DWORD *pdwMediaContent)
HRESULT None ole32.OleCreateFromData(_In_ LPDATAOBJECT pSrcDataObj,_In_ REFIID riid,_In_ DWORD renderopt,_In_ LPFORMATETC pFormatEtc,_In_ LPOLECLIENTSITE pClientSite,_In_ LPSTORAGE pStg,_Out_ LPVOID *ppvObj)
HRESULT None shell32.GetCheckState([out] BOOL *pbCheck)
HRESULT None ole32.OleTranslateAccelerator(_In_ LPOLEINPLACEFRAME lpFrame,_In_ LPOLEINPLACEFRAMEINFO lpFrameInfo,_In_ LPMSG lpmsg)
HRESULT None None.EnumAdvise([out] IEnumSTATDATA **ppenumAdvise)
BOOL None gdi32.GetBrushOrgEx(_In_ HDC hdc,_Out_ LPPOINT lppt)
HRESULT None ole32.OleCreateLinkFromData(_In_ LPDATAOBJECT pSrcDataObj,_In_ REFIID riid,_In_ DWORD renderopt,_In_ LPFORMATETC pFormatEtc,_In_ LPOLECLIENTSITE pClientSite,_In_ LPSTORAGE pStg,_Out_ LPVOID *ppvObj)
uint32 None dnsserverpsprovider.Set([in] string ComputerName,[in] string ZoneName,[in] string NodeName,[in] boolean Recurse,[in] boolean Force)
HRESULT None None.GetLastUndoDescription([out] BSTR *pBstr)
HRESULT None shell32.GetIDList([out] PIDLIST_ABSOLUTE *ppidl)
HRESULT None None.GetPresenterNextStep([out] SYNCMGR_PRESENTER_NEXT_STEP *pnPresenterNextStep)
HWND WINAPI user32.ChildWindowFromPoint(_In_ HWND hWndParent,_In_ POINT Point)
HRESULT None None.GetClientSite([out] IOleClientSite **ppClientSite)
LRESULT CALLBACK None.MainWndProc(HWND hwnd None,UINT uMsg None,WPARAM wParam None,LPARAM lParam None)
HRESULT None shell32.CompareIDs(LPARAM lParam None,PCUIDLIST_RELATIVE pidl1 None,PCUIDLIST_RELATIVE pidl2 None)
HRESULT None None.GetSerialization([out] CREDENTIAL_PROVIDER_GET_SERIALIZATION_RESPONSE *pcpgsr,[out] CREDENTIAL_PROVIDER_CREDENTIAL_SERIALIZATION *pcpcs,[out] LPWSTR *ppszOptionalStatusText,[out] CREDENTIAL_PROVIDER_STATUS_ICON *pcpsiOptionalStatusIcon)
UINT None oledlg.OleUIInsertObject(_In_ LPOLEUIINSERTOBJECT lpIO)
UINT None oledlg.OleUIInsertObjectW(_In_ LPOLEUIINSERTOBJECT lpIO)
UINT None oledlg.OleUIInsertObjectA(_In_ LPOLEUIINSERTOBJECT lpIO)
HRESULT None None.Method3([in None None,readonly] int iMmutable)
HRESULT None None.GetIterationInfo([out] UINT *pnCurrentConflict,[out] UINT *pcConflicts,[out] UINT *pcRemainingForApplyToAll)
HRESULT None ole32.CreateDataCache(_In_ LPUNKNOWN pUnkOuter,_In_ REFCLSID rclsid,_In_ REFIID iid,_Out_ LPVOID *ppv)
BOOL None comctl32.ImageList_Destroy(_In_opt_ HIMAGELIST himl)
BOOL None user32.DrawFrameControl(_In_ HDC hdc,_In_ LPRECT lprc,_In_ UINT uType,_In_ UINT uState)
HRESULT None None.SetSelected([out] BOOL *pbAutoLogon)
HRESULT None authui.GetAccountOptions([out] CREDENTIAL_PROVIDER_ACCOUNT_OPTIONS *credentialProviderAccountOptions)
BOOL None ole32.OleIsRunning(_In_ LPOLEOBJECT pObject)
HRESULT None shell32.GetHotkey(WORD *pwHotkey None)
HRESULT None ole32.CreateDataAdviseHolder(_Out_ LPDATAADVISEHOLDER *ppDAHolder)
BOOL CALLBACK None.EnumThreadWndProc(_In_ HWND hwnd,_In_ LPARAM lParam)
BOOL None user32.InvalidateRgn(_In_ HWND hWnd,_In_ HRGN hRgn,_In_ BOOL bErase)
HRESULT None shell32.TranslateAcceleratorSB(LPMSG lpmsg None,WORD wID None)
HRESULT None shell32.SetRelativePath(LPCTSTR pszPathRel None,DWORD dwReserved None)
HRESULT None None.GetTypeAttr([out] TYPEATTR **ppTypeAttr)
HRESULT None shlwapi.StrFormatByteSizeEx(ULONGLONG ull None,SFBS_FLAGS flags None,_Out_ PWSTR pszBuf,UINT cchBuf None)
HRESULT None ole32.CreateOleAdviseHolder(_Out_ LPOLEADVISEHOLDER *ppOAHolder)
HRESULT None ole32.OleQueryCreateFromData(_In_ LPDATAOBJECT pSrcDataObject)
IStream None None.v_GetViewStream(LPCITEMIDLIST pidl None,DWORD grfMode None,LPCWSTR pwszName None)
HRESULT None shlwapi.AssocGetPerceivedType(_In_ PCWSTR pszExt,_Out_ PERCEIVED *ptype,_Out_ PERCEIVEDFLAG *pflag,_Out_opt_ PWSTR *ppszType)
HRESULT None ole32.OleCreateLinkEx(_In_ LPMONIKER pmkLinkSrc,_In_ REFIID riid,_In_ DWORD dwFlags,_In_ DWORD renderopt,_In_ ULONG cFormats,_In_ DWORD *rgAdvf,_In_ LPFORMATETC rgFormatEtc,_In_ IAdviseSink *lpAdviseSink,_Out_ DWORD *rgdwConnection,_In_ LPOLECLIENTSITE pClientSite,_In_ LPSTORAGE pStg,_Out_ LPVOID *ppvObj)
BOOL None shell32.SHRunControlPanel(_In_ PCWSTR lpcszCmdLine,_In_opt_ HWND hwndMsgParent)
UINT None oledlg.OleUIConvert(_In_ LPOLEUICONVERT lpCV)
UINT None oledlg.OleUIConvertW(_In_ LPOLEUICONVERT lpCV)
UINT None oledlg.OleUIConvertA(_In_ LPOLEUICONVERT lpCV)
HRESULT None ole32.OleRegEnumFormatEtc(_In_ REFCLSID clsid,_In_ DWORD dwDirection,_Out_ LPENUMFORMATETC *ppenum)
BOOL WINAPI user32.CloseWindow(_In_ HWND hWnd)
HRESULT None None.GetViewWindow([out] HWND *phwndView)
BOOL WINAPI user32.GetProcessDefaultLayout(_Out_ DWORD *pdwDefaultLayout)
HRESULT None None.GetAllCustData([out] CUSTDATA *pCustData)
HRESULT None ole32.OleCreate(_In_ REFCLSID rclsid,_In_ REFIID riid,_In_ DWORD renderopt,_In_ LPFORMATETC pFormatEtc,_In_ LPOLECLIENTSITE pClientSite,_In_ LPSTORAGE pStg,_Out_ LPVOID *ppvObj)
HRESULT None shlwapi.SHSetThreadRef(_In_opt_ IUnknown *punk)
HRESULT None None.GetContainingTypeLib([out] ITypeLib **ppTLib,[out] UINT *pIndex)
HRESULT None None.GetHandlerInfo([out] ISyncMgrHandlerInfo **ppHandlerInfo)
PWSTR None shlwapi.StrChrNW(_In_ PWSTR pszStart,WCHAR wMatch None,UINT cchMax None)
HRESULT None ole32.OleQueryLinkFromData(_In_ LPDATAOBJECT pSrcDataObject)
HRESULT None ole32.OleCreateFromFileEx(_In_ REFCLSID rclsid,_In_ LPCOLESTR lpszFileName,_In_ REFIID riid,_In_ DWORD dwFlags,_In_ DWORD renderopt,_In_ ULONG cFormats,_In_ DWORD *rgAdvf,_In_ LPFORMATETC rgFormatEtc,_In_ IAdviseSink *lpAdviseSink,_Out_ DWORD *rgdwConnection,_In_ LPOLECLIENTSITE pClientSite,_In_ LPSTORAGE pStg,_Out_ LPVOID *ppvObj)
UINT None oledlg.OleUIObjectProperties(_In_ LPOLEUIOBJECTPROPS lpOF)
UINT None oledlg.OleUIObjectPropertiesW(_In_ LPOLEUIOBJECTPROPS lpOF)
UINT None oledlg.OleUIObjectPropertiesA(_In_ LPOLEUIOBJECTPROPS lpOF)
HRESULT None None.GetRedirectionCapabilities([out] KF_REDIRECTION_CAPABILITIES *pCapabilities)
HRESULT None ole32.RegisterDragDrop(_In_ HWND hwnd,_In_ LPDROPTARGET pDropTarget)
HRESULT None None.EnumVerbs([out] IEnumOLEVERB **ppEnumOleVerb)
HRESULT None None.GetLastRedoDescription([out] BSTR *pBstr)
HRESULT None ole32.OleRegEnumVerbs(_In_ REFCLSID clsid,_Out_ LPENUMOLEVERB *ppenum)
HRESULT None ole32.OleCreateEmbeddingHelper(_In_ REFCLSID clsid,_In_ LPUNKNOWN pUnkOuter,_In_ DWORD flags,_In_ LPCLASSFACTORY pCF,_In_ REFIID riid,_Out_ LPVOID *lplpObj)
HICON None shell32.ExtractAssociatedIcon(_Reserved_ HINSTANCE hInst,_Inout_ LPTSTR lpIconPath,_Inout_ LPWORD lpiIcon)
HICON None shell32.ExtractAssociatedIconW(_Reserved_ HINSTANCE hInst,_Inout_ LPTSTR lpIconPath,_Inout_ LPWORD lpiIcon)
HICON None shell32.ExtractAssociatedIconA(_Reserved_ HINSTANCE hInst,_Inout_ LPTSTR lpIconPath,_Inout_ LPWORD lpiIcon)
HRESULT None shell32.SHQueryRecycleBin(_In_opt_ LPCTSTR pszRootPath,_Inout_ LPSHQUERYRBINFO pSHQueryRBInfo)
HRESULT None shell32.SHQueryRecycleBinW(_In_opt_ LPCTSTR pszRootPath,_Inout_ LPSHQUERYRBINFO pSHQueryRBInfo)
HRESULT None shell32.SHQueryRecycleBinA(_In_opt_ LPCTSTR pszRootPath,_Inout_ LPSHQUERYRBINFO pSHQueryRBInfo)
HRESULT None None.GetOptions([out] EXPLORER_BROWSER_OPTIONS *pdwFlag)
HGLOBAL None ole32.OleMetafilePictFromIconAndLabel(_In_ HICON hIcon,_In_ LPOLESTR lpszLabel,_In_ LPOLESTR lpszSourceFile,_In_ UINT iIconIndex)
BOOL None shlwapi.StrTrim(_Inout_ PTSTR psz,_In_ PCTSTR pszTrimChars)
BOOL None shlwapi.StrTrimW(_Inout_ PTSTR psz,_In_ PCTSTR pszTrimChars)
BOOL None shlwapi.StrTrimA(_Inout_ PTSTR psz,_In_ PCTSTR pszTrimChars)
BOOL WINAPI user32.IsGUIThread(_In_ BOOL bConvert)
HRESULT None oleaut32.OleCreateFontIndirect(_In_ LPFONTDESC lpFontDesc,_In_ REFIID riid,_Out_ LPVOID *lplpvObj)
UINT None oledlg.OleUIPasteSpecial(_In_ LPOLEUIPASTESPECIAL lpPS)
UINT None oledlg.OleUIPasteSpecialW(_In_ LPOLEUIPASTESPECIAL lpPS)
UINT None oledlg.OleUIPasteSpecialA(_In_ LPOLEUIPASTESPECIAL lpPS)
DWORD WINAPI shlwapi.ThreadProc(LPVOID pData None)
UINT WINAPI user32.GetWindowModuleFileName(_In_ HWND hwnd,_Out_ LPTSTR lpszFileName,_In_ UINT cchFileNameMax)
UINT WINAPI user32.GetWindowModuleFileNameW(_In_ HWND hwnd,_Out_ LPTSTR lpszFileName,_In_ UINT cchFileNameMax)
UINT WINAPI user32.GetWindowModuleFileNameA(_In_ HWND hwnd,_Out_ LPTSTR lpszFileName,_In_ UINT cchFileNameMax)
BOOL WINAPI user32.IsWindowUnicode(_In_ HWND hWnd)
HRESULT None ole32.OleGetClipboardWithEnterpriseInfo(_Out_ IDATAOBJECT **dataObject,_Out_ PWSTR *dataEnterpriseId,_Out_ PWSTR *sourceDescription,_Out_ PWSTR *targetDescription,_Out_ PWSTR *dataDescription)
VOID None shell32.DragFinish(HDROP hDrop None)
HRESULT None None.GetWindowContext([out] PREVIEWHANDLERFRAMEINFO *pinfo)
HRESULT None twinapi.GetApplicationViewOrientation([out] APPLICATION_VIEW_ORIENTATION *viewOrientation)
BOOL CALLBACK None.EnumChildProc(_In_ HWND hwnd,_In_ LPARAM lParam)
UINT WINAPI user32.RealGetWindowClass(_In_ HWND hwnd,_Out_ LPTSTR pszType,_In_ UINT cchType)
UINT WINAPI user32.RealGetWindowClassW(_In_ HWND hwnd,_Out_ LPTSTR pszType,_In_ UINT cchType)
HWND WINAPI user32.ChildWindowFromPointEx(_In_ HWND hwndParent,_In_ POINT pt,_In_ UINT uFlags)
BOOL WINAPI user32.BringWindowToTop(_In_ HWND hWnd)
HRESULT None shlwapi.IStream_ReadPidl(_In_ IStream* pstm,_Out_ PIDLIST_RELATIVE* ppidlOut)
LSTATUS None shlwapi.SHDeleteValue(HKEY hkey None,LPCTSTR pszSubKey None,LPCTSTR pszValue None)
LSTATUS None shlwapi.SHDeleteValueW(HKEY hkey None,LPCTSTR pszSubKey None,LPCTSTR pszValue None)
LSTATUS None shlwapi.SHDeleteValueA(HKEY hkey None,LPCTSTR pszSubKey None,LPCTSTR pszValue None)
HWND None None.GetContractDelegateWindow(_In_ HWND hwndSource)
BOOL WINAPI user32.IsWindowVisible(_In_ HWND hWnd)
HRESULT None oleaut32.OleLoadPictureEx(_In_ LPSTREAM lpstream,_In_ LONG lSize,_In_ BOOL fRunmode,_In_ REFIID riid,_In_ DWORD xSizeDesired,_In_ DWORD ySizeDesired,_In_ DWORD dwFlags,_Out_ LPVOID *lplpvObj)
HRESULT None None.GetFont([out] LOGFONTW *plf)
BOOL WINAPI user32.DestroyWindow(_In_ HWND hWnd)
HANDLE None ole32.OleDuplicateData(_In_ HANDLE hSrc,_In_ CLIPFORMAT cfFormat,_In_ UINT uiFlags)
HRESULT None shell32.QueryContextMenu(HMENU hmenu None,UINT indexMenu None,UINT idCmdFirst None,UINT idCmdLast None,UINT uFlags None)
HRESULT None shell32.GetItemObject(UINT uItem None,REFIID riid None,LPVOID *ppv None)
HRESULT None None.GetComment([out] LPWSTR *ppszComment)
BOOL WINAPI user32.UpdateLayeredWindow(_In_ HWND hwnd,_In_opt_ HDC hdcDst,_In_opt_ POINT *pptDst,_In_opt_ SIZE *psize,_In_opt_ HDC hdcSrc,_In_opt_ POINT *pptSrc,_In_ COLORREF crKey,_In_opt_ BLENDFUNCTION *pblend,_In_ DWORD dwFlags)
BOOL WINAPI user32.IsWindow(_In_opt_ HWND hWnd)
HRESULT None shell32.SHStartNetConnectionDialog(_In_opt_ HWND hwnd,_In_opt_ LPCTSTR pszRemoteName,DWORD dwType None)
HRESULT None shell32.SHStartNetConnectionDialogW(_In_opt_ HWND hwnd,_In_opt_ LPCTSTR pszRemoteName,DWORD dwType None)
HRESULT None shell32.SHStartNetConnectionDialogA(_In_opt_ HWND hwnd,_In_opt_ LPCTSTR pszRemoteName,DWORD dwType None)
PWSTR None shell32.StrStrNW(_In_ PWSTR pszFirst,_In_ PCWSTR pszSrch,UINT cchMax None)
HRESULT None None.GetCapabilities([out] SYNCMGR_HANDLER_CAPABILITIES *pmCapabilities)
HRESULT None mobsync.GetHandlerInfo([out] SYNCMGRHANDLERINFO **ppSyncMgrHandlerInfo)
HRESULT None None.GetName([out] LPWSTR *ppszName)
HRESULT None None.GetPolicies([out] SYNCMGR_HANDLER_POLICIES *pmPolicies)
HRESULT None shlwapi.IUnknown_GetSite(_In_ IUnknown *punk,_In_ REFIID riid,_Out_ VOID **ppvSite)
BOOL None shlwapi.StrToInt64Ex(_In_ PCTSTR pszString,STIF_FLAGS dwFlags None,_Out_ LONGLONG *pllRet)
BOOL None shlwapi.StrToInt64ExW(_In_ PCTSTR pszString,STIF_FLAGS dwFlags None,_Out_ LONGLONG *pllRet)
BOOL None shlwapi.StrToInt64ExA(_In_ PCTSTR pszString,STIF_FLAGS dwFlags None,_Out_ LONGLONG *pllRet)
PTSTR None shlwapi.StrStr(_In_ PTSTR pszFirst,_In_ PCTSTR pszSrch)
PTSTR None shlwapi.StrStrW(_In_ PTSTR pszFirst,_In_ PCTSTR pszSrch)
PTSTR None shlwapi.StrStrA(_In_ PTSTR pszFirst,_In_ PCTSTR pszSrch)
HRESULT None None.EnumCache([out] IEnumSTATDATA **ppenumSTATDATA)
PSTR None shlwapi.StrFormatByteSize64(LONGLONG qdw None,_Out_ PSTR pszBuf,UINT cchBuf None)
PSTR None shlwapi.StrFormatByteSize64A(LONGLONG qdw None,_Out_ PSTR pszBuf,UINT cchBuf None)
PTSTR None shlwapi.StrRChr(_In_ PTSTR pszStart,_In_opt_ PCTSTR pszEnd,TCHAR wMatch None)
PTSTR None shlwapi.StrRChrW(_In_ PTSTR pszStart,_In_opt_ PCTSTR pszEnd,TCHAR wMatch None)
PTSTR None shlwapi.StrRChrA(_In_ PTSTR pszStart,_In_opt_ PCTSTR pszEnd,TCHAR wMatch None)
PWSTR None shlwapi.StrFormatByteSizeW(LONGLONG qdw None,_Out_ PWSTR pszBuf,UINT cchBuf None)
PWSTR None shlwapi.StrFormatByteSizeW(LONGLONG qdw None,_Out_ PWSTR pszBuf,UINT cchBuf None)
HRESULT None shell32.UIActivate(UINT uState None)
PTSTR None shlwapi.StrRChrI(_In_ PTSTR pszStart,_In_opt_ PCTSTR pszEnd,TCHAR wMatch None)
PTSTR None shlwapi.StrRChrIW(_In_ PTSTR pszStart,_In_opt_ PCTSTR pszEnd,TCHAR wMatch None)
PTSTR None shlwapi.StrRChrIA(_In_ PTSTR pszStart,_In_opt_ PCTSTR pszEnd,TCHAR wMatch None)
HRESULT None shell32.GetItemObject(UINT uItem None,REFIID riid None,LPVOID *ppv None)
BOOL WINAPI user32.DestroyIcon(_In_ HICON hIcon)
HRESULT None shlwapi.IStream_Read(_In_ IStream *pstm,_Out_ VOID *pv,_In_ ULONG cb)
HRESULT None None.GetInPlaceSite([out] IOleInPlaceSite **ppIPSite)
HRESULT None None.GetSelectedItems([out] IShellItemArray **psiaitems)
HRESULT None None.Clone([out] IEnumOLEVERB **ppenum)
HRESULT None shell32.GetCommandString(UINT_PTR idCmd None,UINT uFlags None,UINT *pwReserved None,LPSTR pszName None,UINT cchMax None)
HRESULT None shlwapi.IStream_Copy(_In_ IStream *pstmFrom,_In_ IStream *pstmTo,_In_ DWORD cb)
HRESULT None None.get_KeepOriginalFormat([out] BOOL *pKeep)
HRESULT None shlwapi.HashData(_In_ BYTE *pbData,DWORD cbData None,_Out_ BYTE *pbHash,DWORD cbHash None)
HRESULT None None.GetOptions([out] EXPLORER_BROWSER_OPTIONS *pdwFlag)
DWORD None shlwapi.StrCatChainW(_Out_ PWSTR pszDst,DWORD cchDst None,DWORD ichAt None,_In_ PCWSTR pszSrc)
DWORD None shlwapi.StrCatChainW(_Out_ PWSTR pszDst,DWORD cchDst None,DWORD ichAt None,_In_ PCWSTR pszSrc)
HRESULT None shlwapi.SHCreateThreadRef(_In_ LONG *pcRef,_Out_ IUnknown **ppunk)
HRESULT None None.GetAllCustData([out] CUSTDATA *pCustData)
HWND WINAPI user32.WindowFromPhysicalPoint(_In_ POINT Point)
HDC None user32.GetWindowDC(_In_ HWND hWnd)
HRESULT None None.GetUsage([out] FILE_USAGE_TYPE *pfut)
HRESULT None shell32.Skip(ULONG celt None)
PWSTR None shlwapi.StrChrNIW(_In_ PCWSTR pszStart,WCHAR wMatch None,UINT cchMax None)
HRESULT None ole32.OleRun(_In_ LPUNKNOWN pUnknown)
HRESULT None shell32.GetCurrentViewMode([out] UINT *pViewMode)
UINT WINAPI user32.RealGetWindowClass(_In_ HWND hwnd,_Out_ LPTSTR pszType,_In_ UINT cchType)
UINT WINAPI user32.RealGetWindowClassW(_In_ HWND hwnd,_Out_ LPTSTR pszType,_In_ UINT cchType)
HRESULT None shdocvw._NewEnum([out None None,retval] IUnknown **ppunk)
BOOL None shlwapi.ChrCmpI(_In_ TCHAR w1,_In_ TCHAR w2)
BOOL None shlwapi.ChrCmpIW(_In_ TCHAR w1,_In_ TCHAR w2)
BOOL None shlwapi.ChrCmpIA(_In_ TCHAR w1,_In_ TCHAR w2)
BOOL None None.RegisterDialogClasses(HANDLE hInst None)
HRESULT None shlwapi.StrRetToStr(_Inout_ STRRET *pstr,_In_opt_ PCUITEMID_CHILD pidl,_Out_ LPTSTR *ppszName)
HRESULT None shlwapi.StrRetToStrW(_Inout_ STRRET *pstr,_In_opt_ PCUITEMID_CHILD pidl,_Out_ LPTSTR *ppszName)
HRESULT None shlwapi.StrRetToStrA(_Inout_ STRRET *pstr,_In_opt_ PCUITEMID_CHILD pidl,_Out_ LPTSTR *ppszName)
HRESULT None None.GetWindowContext([out] PREVIEWHANDLERFRAMEINFO *pinfo)
BOOL WINAPI user32.InsertMenu(_In_ HMENU hMenu,_In_ UINT uPosition,_In_ UINT uFlags,_In_ UINT_PTR uIDNewItem,_In_opt_ LPCTSTR lpNewItem)
BOOL WINAPI user32.InsertMenuW(_In_ HMENU hMenu,_In_ UINT uPosition,_In_ UINT uFlags,_In_ UINT_PTR uIDNewItem,_In_opt_ LPCTSTR lpNewItem)
BOOL WINAPI user32.InsertMenuA(_In_ HMENU hMenu,_In_ UINT uPosition,_In_ UINT uFlags,_In_ UINT_PTR uIDNewItem,_In_opt_ LPCTSTR lpNewItem)
DWORD WINAPI shlwapi.ThreadProc(LPVOID pData None)
BOOL WINAPI user32.InsertMenuItem(_In_ HMENU hMenu,_In_ UINT uItem,_In_ BOOL fByPosition,_In_ LPCMENUITEMINFO lpmii)
BOOL WINAPI user32.InsertMenuItemW(_In_ HMENU hMenu,_In_ UINT uItem,_In_ BOOL fByPosition,_In_ LPCMENUITEMINFO lpmii)
BOOL WINAPI user32.InsertMenuItemA(_In_ HMENU hMenu,_In_ UINT uItem,_In_ BOOL fByPosition,_In_ LPCMENUITEMINFO lpmii)
COLORREF None None.TreeView_GetTextColor(HWND hwndTV None)
BOOL WINAPI user32.GetWindowRect(_In_ HWND hWnd,_Out_ LPRECT lpRect)
HRESULT None None.GetTypeLabel([out] LPWSTR *ppszTypeLabel)
HRESULT None shell32.InvokeCommand(LPCMINVOKECOMMANDINFO pici None)
ULONGLONG None None.MAKEDLLVERULL(WORD wMajorVersion None,WORD wMinorVersion None,WORD wBuild None,WORD wSP None)
HRESULT None None.EnumRedoable([out] IEnumOleUndoUnits **ppEnum)
HRESULT None shell32.SetDescription(LPCTSTR pszName None)
HRESULT None shlwapi.IStream_WriteStr(_In_ IStream *pstm,_In_ PCWSTR psz)
PTSTR None shlwapi.StrPBrk(_In_ PTSTR psz,_In_ PCTSTR pszSet)
PTSTR None shlwapi.StrPBrkW(_In_ PTSTR psz,_In_ PCTSTR pszSet)
PTSTR None shlwapi.StrPBrkA(_In_ PTSTR psz,_In_ PCTSTR pszSet)
HRESULT None None.GetTargetViewSizePreference([out] APPLICATION_VIEW_SIZE_PREFERENCE *targetSizeOnLaunch)
PTSTR None shlwapi.StrCpy(_Out_ PTSTR psz1,_In_ PCTSTR psz2)
PTSTR None shlwapi.StrCpyW(_Out_ PTSTR psz1,_In_ PCTSTR psz2)
BOOL WINAPI user32.SetWindowText(_In_ HWND hWnd,_In_opt_ LPCTSTR lpString)
BOOL WINAPI user32.SetWindowTextW(_In_ HWND hWnd,_In_opt_ LPCTSTR lpString)
BOOL WINAPI user32.SetWindowTextA(_In_ HWND hWnd,_In_opt_ LPCTSTR lpString)
PTSTR None shlwapi.StrCat(_Inout_ PTSTR psz1,_In_ PCTSTR psz2)
PTSTR None shlwapi.StrCatW(_Inout_ PTSTR psz1,_In_ PCTSTR psz2)
INT_PTR CALLBACK None.DlgProc(HWND hDlg None,UINT message None,WPARAM wParam None,LPARAM lParam None)
int CALLBACK None.CompareFunc(LPARAM lParam1 None,LPARAM lParam2 None,LPARAM lParamSort None)
HRESULT None shlwapi.StrRetToBuf(_Inout_ STRRET *pstr,_In_ PCUITEMID_CHILD pidl,_Out_ LPTSTR pszBuf,_In_ UINT cchBuf)
HRESULT None shlwapi.StrRetToBufW(_Inout_ STRRET *pstr,_In_ PCUITEMID_CHILD pidl,_Out_ LPTSTR pszBuf,_In_ UINT cchBuf)
HRESULT None shlwapi.StrRetToBufA(_Inout_ STRRET *pstr,_In_ PCUITEMID_CHILD pidl,_Out_ LPTSTR pszBuf,_In_ UINT cchBuf)
PTSTR None shlwapi.StrRStrI(_In_ PTSTR pszSource,_In_opt_ PCTSTR pszLast,_In_ PCTSTR pszSrch)
PTSTR None shlwapi.StrRStrIW(_In_ PTSTR pszSource,_In_opt_ PCTSTR pszLast,_In_ PCTSTR pszSrch)
PTSTR None shlwapi.StrRStrIA(_In_ PTSTR pszSource,_In_opt_ PCTSTR pszLast,_In_ PCTSTR pszSrch)
HRESULT None shlwapi.IStream_WritePidl(_In_ IStream* pstm,_In_ PCUIDLIST_RELATIVE pidlWrite)
BOOL None shlwapi.IsOS(_In_ DWORD dwOS)
PSTR None shlwapi.StrFormatByteSizeA(DWORD dw None,_Out_ PSTR pszBuf,UINT cchBuf None)
BOOL WINAPI user32.SetProcessDefaultLayout(_In_ DWORD dwDefaultLayout)
HRESULT None ole32.OleLockRunning(_In_ LPUNKNOWN pUnknown,_In_ BOOL fLock,_In_ BOOL fLastUnlockCloses)
HRESULT None shlwapi.StrRetToBSTR(_Inout_ STRRET *pstr,_In_ PCUITEMID_CHILD pidl,_Out_ BSTR *pbstr)
PTSTR None shlwapi.StrFormatKBSize(LONGLONG qdw None,_Out_ PTSTR pszBuf,UINT cchBuf None)
PTSTR None shlwapi.StrFormatKBSizeW(LONGLONG qdw None,_Out_ PTSTR pszBuf,UINT cchBuf None)
PTSTR None shlwapi.StrFormatKBSizeA(LONGLONG qdw None,_Out_ PTSTR pszBuf,UINT cchBuf None)
BOOL WINAPI user32.RegisterShellHookWindow(_In_ HWND hWnd)
HRESULT None shell32.SetWorkingDirectory(LPCTSTR pszDir None)
BOOL WINAPI user32.LockSetForegroundWindow(_In_ UINT uLockCode)
HMENU WINAPI user32.LoadMenu(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpMenuName)
HMENU WINAPI user32.LoadMenuW(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpMenuName)
HMENU WINAPI user32.LoadMenuA(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpMenuName)
BOOL WINAPI user32.GetGUIThreadInfo(_In_ DWORD idThread,_Inout_ LPGUITHREADINFO lpgui)
PTSTR None shlwapi.StrDup(PCTSTR pszSrch None)
PTSTR None shlwapi.StrDupW(PCTSTR pszSrch None)
PTSTR None shlwapi.StrDupA(PCTSTR pszSrch None)
BOOL WINAPI user32.EnableWindow(_In_ HWND hWnd,_In_ BOOL bEnable)
HTREEITEM None None.TreeView_MapAccIDToHTREEITEM(HWND hwnd None,UINT id None)
COLOREF None None.TreeView_GetLineColor(HWND hwndTV None)
HRESULT None shlwapi.SHStrDup(_In_ LPCTSTR pszSource,_Out_ LPTSTR *ppwsz)
HRESULT None shlwapi.SHStrDupW(_In_ LPCTSTR pszSource,_Out_ LPTSTR *ppwsz)
HRESULT None shlwapi.SHStrDupA(_In_ LPCTSTR pszSource,_Out_ LPTSTR *ppwsz)
BOOL None shell32.StrRetToStrN(_Out_ LPTSTR pszOut,_In_ UINT cchOut,_Inout_ LPSTRRET pStrRet,_In_ LPCITEMIDLIST pidl)
HRESULT None shlwapi.SHAutoComplete(_In_ HWND hwndEdit,DWORD dwFlags None)
HMENU WINAPI user32.GetSystemMenu(_In_ HWND hWnd,_In_ BOOL bRevert)
PTSTR None shlwapi.StrStrI(_In_ PTSTR pszFirst,_In_ PCTSTR pszSrch)
PTSTR None shlwapi.StrStrIW(_In_ PTSTR pszFirst,_In_ PCTSTR pszSrch)
PTSTR None shlwapi.StrStrIA(_In_ PTSTR pszFirst,_In_ PCTSTR pszSrch)
BOOL WINAPI user32.ChangeWindowMessageFilterEx(_In_ HWND hWnd,_In_ UINT message,_In_ DWORD action,_Inout_opt_ PCHANGEFILTERSTRUCT pChangeFilterStruct)
PTSTR None shlwapi.StrChr(_In_ PTSTR pszStart,TCHAR wMatch None)
PTSTR None shlwapi.StrChrW(_In_ PTSTR pszStart,TCHAR wMatch None)
PTSTR None shlwapi.StrChrA(_In_ PTSTR pszStart,TCHAR wMatch None)
HRESULT None shell32.SetHotkey(WORD wHotkey None)
COLORREF None None.TreeView_SetLineColor(HWND hwndTV None,COLORREF clrLine None)
HWND WINAPI user32.GetTopWindow(_In_opt_ HWND hWnd)
HRESULT None urlmon.CreateFormatEnumerator(_In_ UINT cfmtetc,_In_ FORMATETC *rgfmtetc,_Out_ IEnumFORMATETC **ppenumfmtetc)
BOOL WINAPI user32.GetWindowInfo(_In_ HWND hwnd,_Inout_ PWINDOWINFO pwi)
HRESULT None shlwapi.IStream_Size(_In_ IStream *pstm,_Out_ ULARGE_INTEGER *pui)
ULONGLONG None None.MAKEDLLVERULL(WORD wMajorVersion None,WORD wMinorVersion None,WORD wBuild None,WORD wSP None)
PTSTR None shlwapi.StrChrI(_In_ PTSTR pszStart,TCHAR wMatch None)
PTSTR None shlwapi.StrChrIW(_In_ PTSTR pszStart,TCHAR wMatch None)
PTSTR None shlwapi.StrChrIA(_In_ PTSTR pszStart,TCHAR wMatch None)
BOOL WINAPI userenv.GetProfilesDirectory(_Out_ LPTSTR lpProfilesDir,_Inout_ LPDWORD lpcchSize)
BOOL WINAPI userenv.GetProfilesDirectoryW(_Out_ LPTSTR lpProfilesDir,_Inout_ LPDWORD lpcchSize)
BOOL WINAPI userenv.GetProfilesDirectoryA(_Out_ LPTSTR lpProfilesDir,_Inout_ LPDWORD lpcchSize)
HRESULT None None.StringCchCatN(_Inout_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_In_ size_t cchMaxAppend)
HRESULT None None.StringCchCatNW(_Inout_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_In_ size_t cchMaxAppend)
HRESULT None None.StringCchCatNA(_Inout_ LPTSTR pszDest,_In_ size_t cchDest,_In_ LPCTSTR pszSrc,_In_ size_t cchMaxAppend)
DWORD WINAPI None.ThreadProc(LPVOID lpParameter None)
HANDLE WINAPI user32.SetClipboardData(_In_ UINT uFormat,_In_opt_ HANDLE hMem)
HWND None None.TreeView_EditLabel(HWND hwndTV None,HTREEITEM hitem None)
STDAPI None shcore.RegisterScaleChangeEvent(_In_ HANDLE hEvent,_Out_ DWORD_PTR *pdwCookie)
VOID WINAPI user32.SwitchToThisWindow(_In_ HWND hWnd,_In_ BOOL fAltTab)
BOOL WINAPI user32.SetProcessDefaultLayout(_In_ DWORD dwDefaultLayout)
HRESULT None None.EnumDAdvise([out] IEnumSTATDATA **ppenumAdvise)
HWND WINAPI user32.SetParent(_In_ HWND hWndChild,_In_opt_ HWND hWndNewParent)
BOOL WINAPI user32.SetMenuItemInfo(_In_ HMENU hMenu,_In_ UINT uItem,_In_ BOOL fByPosition,_In_ LPMENUITEMINFO lpmii)
BOOL WINAPI user32.SetMenuItemInfoW(_In_ HMENU hMenu,_In_ UINT uItem,_In_ BOOL fByPosition,_In_ LPMENUITEMINFO lpmii)
BOOL WINAPI user32.SetMenuItemInfoA(_In_ HMENU hMenu,_In_ UINT uItem,_In_ BOOL fByPosition,_In_ LPMENUITEMINFO lpmii)
BOOL WINAPI user32.SetWindowDisplayAffinity(_In_ HWND hWnd,_In_ DWORD dwAffinity)
BOOL WINAPI user32.ChangeWindowMessageFilterEx(_In_ HWND hWnd,_In_ UINT message,_In_ DWORD action,_Inout_opt_ PCHANGEFILTERSTRUCT pChangeFilterStruct)
BOOL WINAPI user32.ShowOwnedPopups(_In_ HWND hWnd,_In_ BOOL fShow)
DWORD None user32.GetMenuContextHelpId(HMENU hmenu None)
BOOL WINAPI user32.IsZoomed(_In_ HWND hWnd)
BOOL WINAPI user32.HiliteMenuItem(_In_ HWND hwnd,_In_ HMENU hmenu,_In_ UINT uItemHilite,_In_ UINT uHilite)
COLORREF None None.TreeView_SetInsertMarkColor(HWND hwndTV None,COLORREF clrInsertMark None)
UINT None None.TreeView_SetCheckState(HWND hwndTV None,HTREEITEM hItem None,BOOL fCheck None)
BOOL WINAPI user32.IsIconic(_In_ HWND hWnd)
HWND WINAPI user32.FindWindowEx(_In_opt_ HWND hwndParent,_In_opt_ HWND hwndChildAfter,_In_opt_ LPCTSTR lpszClass,_In_opt_ LPCTSTR lpszWindow)
HWND WINAPI user32.FindWindowExW(_In_opt_ HWND hwndParent,_In_opt_ HWND hwndChildAfter,_In_opt_ LPCTSTR lpszClass,_In_opt_ LPCTSTR lpszWindow)
HWND WINAPI user32.FindWindowExA(_In_opt_ HWND hwndParent,_In_opt_ HWND hwndChildAfter,_In_opt_ LPCTSTR lpszClass,_In_opt_ LPCTSTR lpszWindow)
LONG None None.CPlApplet(HWND hwndCPl None,UINT uMsg None,LPARAM lParam1 None,LPARAM lParam2 None)
BOOL None None.TreeView_SetUnicodeFormat(HWND hwnd None,BOOL fUnicode None)
BOOL WINAPI userenv.DestroyEnvironmentBlock(_In_ LPVOID lpEnvironment)
BOOL WINAPI user32.DeregisterShellHookWindow(_In_ HWND hWnd)
HRESULT None None.EnumRunning([out] IEnumMoniker **ppenumMoniker)
BOOL WINAPI user32.GetGUIThreadInfo(_In_ DWORD idThread,_Inout_ LPGUITHREADINFO lpgui)
HTREEITEM None None.TreeView_GetLastVisible(HWND hwndTV None)
HRESULT None ole32.OleQueryLinkFromData(_In_ LPDATAOBJECT pSrcDataObject)
HRESULT None shlwapi.StrRetToBuf(_Inout_ STRRET *pstr,_In_ PCUITEMID_CHILD pidl,_Out_ LPTSTR pszBuf,_In_ UINT cchBuf)
HRESULT None shlwapi.StrRetToBufW(_Inout_ STRRET *pstr,_In_ PCUITEMID_CHILD pidl,_Out_ LPTSTR pszBuf,_In_ UINT cchBuf)
HRESULT None shlwapi.StrRetToBufA(_Inout_ STRRET *pstr,_In_ PCUITEMID_CHILD pidl,_Out_ LPTSTR pszBuf,_In_ UINT cchBuf)
HRESULT CALLBACK shell32.DllGetVersion(DLLVERSIONINFO *pdvi None)
BOOL None shlwapi.IsCharSpace(_In_ TCHAR wch)
BOOL None shlwapi.IsCharSpaceW(_In_ TCHAR wch)
BOOL None shlwapi.IsCharSpaceA(_In_ TCHAR wch)
BOOL None None.TreeView_SortChildrenCB(HWND hwndTV None,LPTVSORTCB psort None,BOOL fRecurse None)
UINT None None.TreeView_GetCount(HWND hwndTV None)
HRESULT None None.TreeView_SetExtendedStyle(HWND hwnd None,DWORD dw None,UINT mask None)
BOOL None None.TreeView_GetItem(HWND hwndTV None,LPTVITEM pitem None)
BOOL None None.TreeView_Expand(HWND hwndTV None,HTREEITEM hItem None,UINT flag None)
function None shell32.EnumUsers(Volume_Label None None)
BOOL WINAPI user32.GetWindowPlacement(_In_ HWND hWnd,_Inout_ WINDOWPLACEMENT *lpwndpl)
HRESULT None None.GetTypeKind([out] TYPEKIND *pTypeKind)
UINT None None.TreeView_GetScrollTime(HWND hwndTV None)
BOOL None gdi32.GetCharABCWidths(_In_ HDC hdc,_In_ UINT uFirstChar,_In_ UINT uLastChar,_Out_ LPABC lpabc)
BOOL None gdi32.GetCharABCWidthsW(_In_ HDC hdc,_In_ UINT uFirstChar,_In_ UINT uLastChar,_Out_ LPABC lpabc)
BOOL None gdi32.GetCharABCWidthsA(_In_ HDC hdc,_In_ UINT uFirstChar,_In_ UINT uLastChar,_Out_ LPABC lpabc)
HTREEITEM None None.TreeView_GetFirstVisible(HWND hwndTV None)
HRESULT None ole32.OleRun(_In_ LPUNKNOWN pUnknown)
COLORREF None None.TreeView_GetBkColor(HWND hwndTV None)
BOOL None None.TreeView_SelectDropTarget(HWND hwndTV None,HTREEITEM hitem None)
HTREEITEM None None.TreeView_GetRoot(HWND hwndTV None)
BOOL WINAPI user32.EndTask(_In_ HWND hWnd,_In_ BOOL fShutDown,_In_ BOOL fForce)
HTREEITEM None None.TreeView_GetSelection(HWND hwndTV None)
HWND None None.TreeView_SetToolTips(HWND hwndTV None,HWND hwndTooltip None)
HWND WINAPI None.GetNextWindow(_In_ HWND hWnd,_In_ UINT wCmd)
BOOL None None.TreeView_SetIndent(HWND hwndTV None,INT indent None)
COLOREF None None.TreeView_GetLineColor(HWND hwndTV None)
BOOL None None.TreeView_SelectSetFirstVisible(HWND hwndTV None,HTREEITEM hitem None)
BOOL None None.TreeView_SetInsertMark(HWND hwndTV None,HTREEITEM htiInsert None,BOOL fAfter None)
HRESULT None None.GetIDList([out] PIDLIST_ABSOLUTE *ppidl)
BOOL None None.ComboBox_GetDroppedState(HWND hwndCtl None)
HWND WINAPI user32.GetTopWindow(_In_opt_ HWND hWnd)
BOOL WINAPI user32.AddClipboardFormatListener(_In_ HWND hwnd)
HIMAGELIST None None.TreeView_SetImageList(HWND hwndTV None,HIMAGELIST himl None,INT iImage None)
BOOL None None.TreeView_DeleteItem(HWND hwndTV None,HTREEITEM hitem None)
BOOL None None.Edit_SetReadOnly(HWND hwndCtl None,BOOL fReadOnly None)
LRESULT None None.TreeView_SetHot(HWND hwndTV None,HTREEITEM hitem None)
HRESULT None shell32.GetDefaultSpacing([out] POINT *ppt)
UINT None None.TreeView_GetItemState(HWND hwndTV None,HTREEITEM hItem None,UINT stateMask None)
UINT None None.TreeView_MapHTREEITEMtoAccID(HWND hwnd None,HTREEITEM htreeitem None)
HRESULT None None.PathCchAddExtension(_Inout_ PWSTR pszPath,_In_ size_t cchPath,_In_ PCWSTR pszExt)
HANDLE WINAPI user32.SetClipboardData(_In_ UINT uFormat,_In_opt_ HANDLE hMem)
BOOL None shlwapi.PathIsHTMLFile(_In_ LPCTSTR pszFile)
BOOL None shlwapi.PathIsHTMLFileW(_In_ LPCTSTR pszFile)
BOOL None shlwapi.PathIsHTMLFileA(_In_ LPCTSTR pszFile)
UINT WINAPI user32.GetMenuDefaultItem(_In_ HMENU hMenu,_In_ UINT fByPos,_In_ UINT gmdiFlags)
HRESULT None shlwapi.GetAcceptLanguages(_Out_ LPTSTR pszLanguages,_Inout_ DWORD *pcchLanguages)
HRESULT None shlwapi.GetAcceptLanguagesW(_Out_ LPTSTR pszLanguages,_Inout_ DWORD *pcchLanguages)
HRESULT None shlwapi.GetAcceptLanguagesA(_Out_ LPTSTR pszLanguages,_Inout_ DWORD *pcchLanguages)
DWORD WINAPI None.ThreadProc(LPVOID lpParameter None)
BOOL None None.TreeView_DeleteAllItems(HWND hwndTV None)
BOOL None shlwapi.PathStripToRoot(_Inout_ LPTSTR szRoot)
BOOL None shlwapi.PathStripToRootW(_Inout_ LPTSTR szRoot)
BOOL None shlwapi.PathStripToRootA(_Inout_ LPTSTR szRoot)
BOOL None shlwapi.PathQuoteSpaces(_Inout_ LPTSTR lpsz)
BOOL None shlwapi.PathQuoteSpacesW(_Inout_ LPTSTR lpsz)
BOOL None shlwapi.PathQuoteSpacesA(_Inout_ LPTSTR lpsz)
HTREEITEM None None.TreeView_GetNextVisible(HWND hwndTV None,HTREEITEM hitem None)
BOOL None shlwapi.UrlIsNoHistory(_In_ PCTSTR pszURL)
BOOL None shlwapi.UrlIsNoHistoryW(_In_ PCTSTR pszURL)
BOOL None shlwapi.UrlIsNoHistoryA(_In_ PCTSTR pszURL)
BOOL None None.TreeView_SetItem(HWND hwndTV None,LPTVITEM pitem None)
HRESULT None shlwapi.PathCreateFromUrl(_In_ PCTSTR pszUrl,_Out_ PTSTR pszPath,_Inout_ DWORD *pcchPath,DWORD dwFlags None)
HRESULT None shlwapi.PathCreateFromUrlW(_In_ PCTSTR pszUrl,_Out_ PTSTR pszPath,_Inout_ DWORD *pcchPath,DWORD dwFlags None)
HRESULT None shlwapi.PathCreateFromUrlA(_In_ PCTSTR pszUrl,_Out_ PTSTR pszPath,_Inout_ DWORD *pcchPath,DWORD dwFlags None)
BOOL WINAPI user32.TranslateMDISysAccel(_In_ HWND hWndClient,_In_ LPMSG lpMsg)
COLORREF None None.TreeView_GetInsertMarkColor(HWND hwndTV None)
WORD None None.LOWORD(DWORD dwValue None)
HRESULT None None.GetUpdateOptions([out] DWORD *pdwUpdateOpt)
UINT None None.TreeView_SetScrollTime(HWND hwndTV None,UINT uMaxScrollTime None)
EDITWORDBREAKPROC None None.Edit_GetWordBreakProc(HWND hwndCtl None)
HTREEITEM None None.TreeView_GetPrevSibling(HWND hwndTV None,HTREEITEM hitem None)
BOOL None None.TreeView_GetUnicodeFormat(HWND hwnd None)
BOOL WINAPI user32.GetMenuInfo(_In_ HMENU hmenu,_Inout_ LPMENUINFO lpcmi)
HTREEITEM None None.TreeView_GetNextItem(HWND hwndTV None,HTREEITEM hitem None,UINT flag None)
BOOL WINAPI user32.GetClientRect(_In_ HWND hWnd,_Out_ LPRECT lpRect)
HANDLE WINAPI user32.GetClipboardData(_In_ UINT uFormat)
HRESULT None None.Clone([out] IEnumMoniker **ppenum)
LONG None None.ScreenSaverProc(HWND hWnd None,UINT message None,WPARAM wParam None,LPARAM lParam None)
HRESULT None shlwapi.PathMatchSpecEx(_In_ LPCTSTR pszFile,_In_ LPCTSTR pszSpec,_In_ DWORD dwFlags)
HRESULT None shlwapi.PathMatchSpecExW(_In_ LPCTSTR pszFile,_In_ LPCTSTR pszSpec,_In_ DWORD dwFlags)
HRESULT None shlwapi.PathMatchSpecExA(_In_ LPCTSTR pszFile,_In_ LPCTSTR pszSpec,_In_ DWORD dwFlags)
BOOL None shlwapi.PathIsRoot(_In_ LPCTSTR pPath)
BOOL None shlwapi.PathIsRootW(_In_ LPCTSTR pPath)
BOOL None shlwapi.PathIsRootA(_In_ LPCTSTR pPath)
BOOL None None.MonthCal_GetCalendarGridInfo(HWND hmc None,MCGRIDINFO *pmcGridInfo None)
UINT None None.TreeView_SetItemState(HWND hwndTV None,HTREEITEM hItem None,UINT state None,UINT stateMask None)
DWORD None None.TreeView_ShowInfoTip(HWND hwnd None,HITEM hitem None)
BOOL None shlwapi.UrlIsOpaque(_In_ PCTSTR pszURL)
BOOL None shlwapi.UrlIsOpaqueW(_In_ PCTSTR pszURL)
BOOL None shlwapi.UrlIsOpaqueA(_In_ PCTSTR pszURL)
HTREEITEM None None.TreeView_InsertItem(HWND hwndTV None,LPTVINSERTSTRUCT lpis None)
BOOL None shlwapi.PathIsContentType(_In_ LPCTSTR pszPath,_In_ LPCTSTR pszContentType)
BOOL None shlwapi.PathIsContentTypeW(_In_ LPCTSTR pszPath,_In_ LPCTSTR pszContentType)
BOOL None shlwapi.PathIsContentTypeA(_In_ LPCTSTR pszPath,_In_ LPCTSTR pszContentType)
LRESULT None None.TreeView_SetAutoScrollInfo(HWND hwnd None,UINT uPixPerSec None,UINT uUpdateTime None)
HWND None None.TreeView_GetToolTips(HWND hwndTV None)
BOOL None shlwapi.PathIsDirectoryEmpty(_In_ LPCTSTR pszPath)
BOOL None shlwapi.PathIsDirectoryEmptyW(_In_ LPCTSTR pszPath)
BOOL None shlwapi.PathIsDirectoryEmptyA(_In_ LPCTSTR pszPath)
HRESULT None ole32.OleCreateLink(_In_ LPMONIKER pmkLinkSrc,_In_ REFIID riid,_In_ DWORD renderopt,_In_ LPFORMATETC lpFormatEtc,_In_ LPOLECLIENTSITE pClientSite,_In_ LPSTORAGE pStg,_Out_ LPVOID *ppvObj)
BOOL None None.TreeView_GetItemPartRect(HWND hwnd None,HTREEITEM hitem None,RECT *prc None,TVITEMPART *partid None)
BOOL None None.ScreenSaverConfigureDialog(HWND hDlg None,UINT message None,WPARAM wParam None,LPARAM lParam None)
BOOL None None.TreeView_Select(HWND hwndTV None,HTREEITEM hitem None,UINT flag None)
BOOL None shlwapi.PathCompactPath(_In_ HDC hDC,_Inout_ LPTSTR lpszPath,_In_ UINT dx)
BOOL None shlwapi.PathCompactPathW(_In_ HDC hDC,_Inout_ LPTSTR lpszPath,_In_ UINT dx)
BOOL None shlwapi.PathCompactPathA(_In_ HDC hDC,_Inout_ LPTSTR lpszPath,_In_ UINT dx)
BOOL None None.TreeView_EndEditLabelNow(HWND hwndTV None,BOOL fCancel None)
COLORREF None None.TreeView_SetTextColor(HWND hwndTV None,COLORREF clrText None)
HIMAGELIST None None.TreeView_GetImageList(HWND hwndTV None,INT iImage None)
BOOL None None.TreeView_SelectItem(HWND hwndTV None,HTREEITEM hitem None)
COLORREF None None.TreeView_SetBkColor(HWND hwndTV None,COLORREF clrBk None)
BOOL None shlwapi.PathIsURL(_In_ LPCTSTR pszPath)
BOOL None shlwapi.PathIsURLW(_In_ LPCTSTR pszPath)
BOOL None shlwapi.PathIsURLA(_In_ LPCTSTR pszPath)
BOOL None shlwapi.PathRelativePathTo(_Out_ LPTSTR pszPath,_In_ LPCTSTR pszFrom,_In_ DWORD dwAttrFrom,_In_ LPCTSTR pszTo,_In_ DWORD dwAttrTo)
BOOL None shlwapi.PathRelativePathToW(_Out_ LPTSTR pszPath,_In_ LPCTSTR pszFrom,_In_ DWORD dwAttrFrom,_In_ LPCTSTR pszTo,_In_ DWORD dwAttrTo)
BOOL None shlwapi.PathRelativePathToA(_Out_ LPTSTR pszPath,_In_ LPCTSTR pszFrom,_In_ DWORD dwAttrFrom,_In_ LPCTSTR pszTo,_In_ DWORD dwAttrTo)
UINT None None.TreeView_GetVisibleCount(HWND hwndTV None)
BOOL None shlwapi.PathIsFileSpec(_In_ LPCTSTR lpszPath)
BOOL None shlwapi.PathIsFileSpecW(_In_ LPCTSTR lpszPath)
BOOL None shlwapi.PathIsFileSpecA(_In_ LPCTSTR lpszPath)
BOOL WINAPI user32.RemoveMenu(_In_ HMENU hMenu,_In_ UINT uPosition,_In_ UINT uFlags)
BOOL WINAPI user32.OpenClipboard(_In_opt_ HWND hWndNewOwner)
LRESULT None None.MonthCal_SetCALID(HWND hmc None,UINT calid None)
HRESULT None shell32.SHEvaluateSystemCommandTemplate(_In_ PCWSTR pszCmdTemplate,_Out_ PWSTR *ppszApplication,_Out_opt_ PWSTR *ppszCommandLine,_Out_opt_ PWSTR *ppszParameters)
BOOL None shlwapi.PathIsNetworkPath(_In_ LPCTSTR pszPath)
BOOL None shlwapi.PathIsNetworkPathW(_In_ LPCTSTR pszPath)
BOOL None shlwapi.PathIsNetworkPathA(_In_ LPCTSTR pszPath)
UINT None None.TreeView_GetCheckState(HWND hwndTV None,HTREEITEM hItem None)
HTREEITEM None None.TreeView_GetParent(HWND hwndTV None,HTREEITEM hitem None)
BOOL None None.Edit_Enable(HWND hwndCtl None,BOOL fEnable None)
HRESULT None None.GetRegisteredSink([out] ICallFrameEvents **ppsink)
INT None None.ComboBox_GetMinVisible(HWND hwnd None)
DWORD None None.TreeView_GetExtendedStyle(HWND hwnd None)
HTREEITEM None None.TreeView_GetChild(HWND hwndTV None,HTREEITEM hitem None)
BOOL None shlwapi.PathCanonicalize(_Out_ LPTSTR lpszDst,_In_ LPCTSTR lpszSrc)
BOOL None shlwapi.PathCanonicalizeW(_Out_ LPTSTR lpszDst,_In_ LPCTSTR lpszSrc)
BOOL None shlwapi.PathCanonicalizeA(_Out_ LPTSTR lpszDst,_In_ LPCTSTR lpszSrc)
BOOL None shlwapi.PathIsUNC(_In_ LPCTSTR pszPath)
BOOL None shlwapi.PathIsUNCW(_In_ LPCTSTR pszPath)
BOOL None shlwapi.PathIsUNCA(_In_ LPCTSTR pszPath)
HTREEITEM None None.TreeView_HitTest(HWND hwndTV None,LPTVHITTESTINFO lpht None)
BOOL None None.TreeView_GetItemRect(HWND hwndTV None,HTREEITEM hitem None,LPRECT prc None,BOOL fItemRect None)
HIMAGELIST None None.TreeView_CreateDragImage(HWND hwndTV None,HTREEITEM hitem None)
BOOL None shlwapi.PathRemoveFileSpec(_Inout_ LPTSTR pszPath)
BOOL None shlwapi.PathRemoveFileSpecW(_Inout_ LPTSTR pszPath)
BOOL None shlwapi.PathRemoveFileSpecA(_Inout_ LPTSTR pszPath)
HRESULT None None.GetRegisteredSink([out] ICallFrameEvents **ppsink)
HWND None None.TreeView_GetToolTips(HWND hwndTV None)
BOOL WINAPI user32.ShowOwnedPopups(_In_ HWND hWnd,_In_ BOOL fShow)
BOOL None None.TreeView_SortChildren(HWND hwndTV None,HTREEITEM hitem None,BOOL fRecurse None)
WORD None None.HIWORD(DWORD dwValue None)
BOOL None shlwapi.PathUnExpandEnvStrings(_In_ LPCTSTR pszPath,_Out_ LPTSTR pszBuf,_In_ UINT cchBuf)
BOOL None shlwapi.PathUnExpandEnvStringsW(_In_ LPCTSTR pszPath,_Out_ LPTSTR pszBuf,_In_ UINT cchBuf)
BOOL None shlwapi.PathUnExpandEnvStringsA(_In_ LPCTSTR pszPath,_Out_ LPTSTR pszBuf,_In_ UINT cchBuf)
BOOL None comctl32.ImageList_DragLeave(HWND hwndLock None)
UINT None None.TreeView_GetCount(HWND hwndTV None)
INT None None.MonthCal_SetMonthDelta(HWND hwndMC None,INT iDelta None)
UINT None shlwapi.PathGetCharType(_In_ TUCHAR ch)
UINT None shlwapi.PathGetCharTypeW(_In_ TUCHAR ch)
UINT None shlwapi.PathGetCharTypeA(_In_ TUCHAR ch)
BOOL WINAPI user32.CheckMenuRadioItem(_In_ HMENU hmenu,_In_ UINT idFirst,_In_ UINT idLast,_In_ UINT idCheck,_In_ UINT uFlags)
BOOL WINAPI user32.RemoveMenu(_In_ HMENU hMenu,_In_ UINT uPosition,_In_ UINT uFlags)
PUIDLIST_RELATIVE None None.ILNext(_In_ PUIDLIST_RELATIVE pidl)
BOOL None shlwapi.PathIsDirectory(_In_ LPCTSTR pszPath)
BOOL None shlwapi.PathIsDirectoryW(_In_ LPCTSTR pszPath)
BOOL None shlwapi.PathIsDirectoryA(_In_ LPCTSTR pszPath)
BOOL None shlwapi.PathMakePretty(_Inout_ LPTSTR lpPath)
BOOL None shlwapi.PathMakePrettyW(_Inout_ LPTSTR lpPath)
BOOL None shlwapi.PathMakePrettyA(_Inout_ LPTSTR lpPath)
BOOL None shlwapi.PathIsUNCServerShare(_In_ LPCTSTR pszPath)
BOOL None shlwapi.PathIsUNCServerShareW(_In_ LPCTSTR pszPath)
BOOL None shlwapi.PathIsUNCServerShareA(_In_ LPCTSTR pszPath)
BOOL None shlwapi.PathFindOnPath(_Inout_ LPTSTR pszFile,_In_opt_ LPCTSTR *ppszOtherDirs)
BOOL None shlwapi.PathFindOnPathW(_Inout_ LPTSTR pszFile,_In_opt_ LPCTSTR *ppszOtherDirs)
BOOL None shlwapi.PathFindOnPathA(_Inout_ LPTSTR pszFile,_In_opt_ LPCTSTR *ppszOtherDirs)
HWND None None.TreeView_GetEditControl(HWND hwndTV None)
BOOL None shlwapi.UrlIsFileUrl(LPCTSTR pszUrl None)
BOOL None shlwapi.UrlIsFileUrlW(LPCTSTR pszUrl None)
BOOL None shlwapi.UrlIsFileUrlA(LPCTSTR pszUrl None)
HIMAGELIST None None.TreeView_CreateDragImage(HWND hwndTV None,HTREEITEM hitem None)
HRESULT None shlwapi.UrlHash(_In_ PCTSTR pszURL,_Out_ BYTE *pbHash,DWORD cbHash None)
HRESULT None shlwapi.UrlHashW(_In_ PCTSTR pszURL,_Out_ BYTE *pbHash,DWORD cbHash None)
HRESULT None shlwapi.UrlHashA(_In_ PCTSTR pszURL,_Out_ BYTE *pbHash,DWORD cbHash None)
BOOL None None.Edit_ScrollCaret(HWND hwndCtl None)
BOOL WINAPI user32.DestroyMenu(_In_ HMENU hMenu)
BOOL WINAPI None.OnContextMenu(HWND hwnd None,int x None,int y None)
BOOL None None.Edit_SetCueBannerTextFocused(HWND hwnd None,LPCWSTR lpcwText None,BOOL fDrawFocused None)
BOOL None shlwapi.PathIsUNCServer(_In_ LPCTSTR pszPath)
BOOL None shlwapi.PathIsUNCServerW(_In_ LPCTSTR pszPath)
BOOL None shlwapi.PathIsUNCServerA(_In_ LPCTSTR pszPath)
void None None.LabelTrackbarsWithBuddies(HWND hDlg None)
BOOL None shlwapi.PathMatchSpec(_In_ LPCSTR pszFile,_In_ LPCSTR pszSpec)
BOOL None shlwapi.PathMatchSpecW(_In_ LPCSTR pszFile,_In_ LPCSTR pszSpec)
BOOL None shlwapi.PathMatchSpecA(_In_ LPCSTR pszFile,_In_ LPCSTR pszSpec)
BOOL None None.Edit_HideBalloonTip(HWND hwnd None)
HTREEITEM None None.TreeView_GetNextSibling(HWND hwndTV None,HTREEITEM hitem None)
BOOL None shlwapi.UrlIs(_In_ PCTSTR pszUrl,URLIS UrlIs None)
BOOL None shlwapi.UrlIsW(_In_ PCTSTR pszUrl,URLIS UrlIs None)
BOOL None shlwapi.UrlIsA(_In_ PCTSTR pszUrl,URLIS UrlIs None)
BOOL None shlwapi.PathFileExists(_In_ LPCTSTR pszPath)
BOOL None shlwapi.PathFileExistsW(_In_ LPCTSTR pszPath)
BOOL None shlwapi.PathFileExistsA(_In_ LPCTSTR pszPath)
BOOL None None.MonthCal_GetSelRange(HWND hwndMC None,LPSYSTEMTIME lprgSysTimeArray None)
BOOL None uxtheme.UpdatePanningFeedback(_In_ HWND hwnd,_In_ LONG lTotalOverpanOffsetX,_In_ LONG lTotalOverpanOffsetY,_In_ BOOL fInInertia)
BOOL None None.TreeView_GetISearchString(HWND hwndTV None,LPTSTR lpsz None)
BOOL None shlwapi.PathAppend(_Inout_ LPTSTR pszPath,_In_ LPCTSTR pszMore)
BOOL None shlwapi.PathAppendW(_Inout_ LPTSTR pszPath,_In_ LPCTSTR pszMore)
BOOL None shlwapi.PathAppendA(_Inout_ LPTSTR pszPath,_In_ LPCTSTR pszMore)
TCHAR None None.Edit_GetPasswordChar(HWND hwndCtl None)
HRESULT None shlwapi.UrlGetPart(_In_ PCTSTR pszIn,_Out_ PTSTR pszOut,_Inout_ DWORD *pcchOut,DWORD dwPart None,DWORD dwFlags None)
HRESULT None shlwapi.UrlGetPartW(_In_ PCTSTR pszIn,_Out_ PTSTR pszOut,_Inout_ DWORD *pcchOut,DWORD dwPart None,DWORD dwFlags None)
HRESULT None shlwapi.UrlGetPartA(_In_ PCTSTR pszIn,_Out_ PTSTR pszOut,_Inout_ DWORD *pcchOut,DWORD dwPart None,DWORD dwFlags None)
PTSTR None shlwapi.PathSkipRoot(_In_ PTSTR pszPath)
PTSTR None shlwapi.PathSkipRootW(_In_ PTSTR pszPath)
PTSTR None shlwapi.PathSkipRootA(_In_ PTSTR pszPath)
BOOL WINAPI user32.PostThreadMessage(_In_ DWORD idThread,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
BOOL WINAPI user32.PostThreadMessageW(_In_ DWORD idThread,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
BOOL WINAPI user32.PostThreadMessageA(_In_ DWORD idThread,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
HTREEITEM None None.TreeView_GetPrevVisible(HWND hwndTV None,HTREEITEM hitem None)
PTSTR None shlwapi.PathFindFileName(_In_ PTSTR pPath)
PTSTR None shlwapi.PathFindFileNameW(_In_ PTSTR pPath)
PTSTR None shlwapi.PathFindFileNameA(_In_ PTSTR pPath)
HDC None uxtheme.GetBufferedPaintTargetDC(HPAINTBUFFER hBufferedPaint None)
BOOL None None.ScreenSaverConfigureDialog(HWND hDlg None,UINT message None,WPARAM wParam None,LPARAM lParam None)
HRESULT None shell32.SHEvaluateSystemCommandTemplate(_In_ PCWSTR pszCmdTemplate,_Out_ PWSTR *ppszApplication,_Out_opt_ PWSTR *ppszCommandLine,_Out_opt_ PWSTR *ppszParameters)
BOOL None None.MonthCal_SetMaxSelCount(HWND hwndMC None,UINT iMax None)
BOOL WINAPI user32.ModifyMenu(_In_ HMENU hMnu,_In_ UINT uPosition,_In_ UINT uFlags,_In_ UINT_PTR uIDNewItem,_In_opt_ LPCTSTR lpNewItem)
BOOL WINAPI user32.ModifyMenuW(_In_ HMENU hMnu,_In_ UINT uPosition,_In_ UINT uFlags,_In_ UINT_PTR uIDNewItem,_In_opt_ LPCTSTR lpNewItem)
BOOL WINAPI user32.ModifyMenuA(_In_ HMENU hMnu,_In_ UINT uPosition,_In_ UINT uFlags,_In_ UINT_PTR uIDNewItem,_In_opt_ LPCTSTR lpNewItem)
INT None None.MonthCal_GetMonthRange(HWND hwndMC None,DWORD dwFlag None,LPSYSTEMTIME lprgSysTimeArray None)
BOOL None None.TreeView_SelectItem(HWND hwndTV None,HTREEITEM hitem None)
HTREEITEM None None.TreeView_GetNextSelected(HWND hwnd None,HTREEITEM *hitem None)
UINT None None.TreeView_GetIndent(HWND hwndTV None)
BOOL WINAPI user32.GetClientRect(_In_ HWND hWnd,_Out_ LPRECT lpRect)
HTREEITEM None None.TreeView_GetDropHilight(HWND hwndTV None)
BOOL None shlwapi.PathSearchAndQualify(_In_ LPCTSTR pcszPath,_Out_ LPTSTR pszFullyQualifiedPath,_In_ UINT cchFullyQualifiedPath)
BOOL None shlwapi.PathSearchAndQualifyW(_In_ LPCTSTR pcszPath,_Out_ LPTSTR pszFullyQualifiedPath,_In_ UINT cchFullyQualifiedPath)
BOOL None shlwapi.PathSearchAndQualifyA(_In_ LPCTSTR pcszPath,_Out_ LPTSTR pszFullyQualifiedPath,_In_ UINT cchFullyQualifiedPath)
HRESULT None shlwapi.UrlCanonicalize(_In_ PCTSTR pszUrl,_Out_ PTSTR pszCanonicalized,_Inout_ DWORD *pcchCanonicalized,DWORD dwFlags None)
HRESULT None shlwapi.UrlCanonicalizeW(_In_ PCTSTR pszUrl,_Out_ PTSTR pszCanonicalized,_Inout_ DWORD *pcchCanonicalized,DWORD dwFlags None)
HRESULT None shlwapi.UrlCanonicalizeA(_In_ PCTSTR pszUrl,_Out_ PTSTR pszCanonicalized,_Inout_ DWORD *pcchCanonicalized,DWORD dwFlags None)
BOOL None shlwapi.PathMakeSystemFolder(_In_ LPTSTR pszPath)
BOOL None shlwapi.PathMakeSystemFolderW(_In_ LPTSTR pszPath)
BOOL None shlwapi.PathMakeSystemFolderA(_In_ LPTSTR pszPath)
BOOL WINAPI user32.GetMenuBarInfo(_In_ HWND hwnd,_In_ LONG idObject,_In_ LONG idItem,_Inout_ PMENUBARINFO pmbi)
LPTSTR None shlwapi.PathCombine(_Out_ LPTSTR pszPathOut,_In_opt_ LPCTSTR pszPathIn,_In_ LPCTSTR pszMore)
LPTSTR None shlwapi.PathCombineW(_Out_ LPTSTR pszPathOut,_In_opt_ LPCTSTR pszPathIn,_In_ LPCTSTR pszMore)
LPTSTR None shlwapi.PathCombineA(_Out_ LPTSTR pszPathOut,_In_opt_ LPCTSTR pszPathIn,_In_ LPCTSTR pszMore)
LRESULT WINAPI user32.SendMessage(_In_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
LRESULT WINAPI user32.SendMessageW(_In_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
LRESULT WINAPI user32.SendMessageA(_In_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
BOOL None shlwapi.PathAddExtension(_Inout_ LPTSTR pszPath,_In_opt_ LPCTSTR pszExtension)
BOOL None shlwapi.PathAddExtensionW(_Inout_ LPTSTR pszPath,_In_opt_ LPCTSTR pszExtension)
BOOL None shlwapi.PathAddExtensionA(_Inout_ LPTSTR pszPath,_In_opt_ LPCTSTR pszExtension)
HRESULT None shlwapi.UrlApplyScheme(_In_ PCTSTR pszIn,_Out_ PTSTR pszOut,_Inout_ DWORD *pcchOut,DWORD dwFlags None)
HRESULT None shlwapi.UrlApplySchemeW(_In_ PCTSTR pszIn,_Out_ PTSTR pszOut,_Inout_ DWORD *pcchOut,DWORD dwFlags None)
HRESULT None shlwapi.UrlApplySchemeA(_In_ PCTSTR pszIn,_Out_ PTSTR pszOut,_Inout_ DWORD *pcchOut,DWORD dwFlags None)
BOOL None None.Button_Enable(HWND hwndCtl None,BOOL fEnable None)
HRESULT None shlwapi.UrlEscapeSpaces(_In_ LPCTSTR pszURL,_Out_ LPTSTR pszEscaped,_Out_ LPDWORD pcchEscaped)
HRESULT None shlwapi.UrlUnescapeInPlace(_Inout_ LPTSTR pszURL,_In_ DWORD dwFlags)
LRESULT WINAPI user32.DefWindowProc(_In_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
LRESULT WINAPI user32.DefWindowProcW(_In_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
LRESULT WINAPI user32.DefWindowProcA(_In_ HWND hWnd,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
BOOL WINAPI user32.SetMenuItemBitmaps(_In_ HMENU hMenu,_In_ UINT uPosition,_In_ UINT uFlags,_In_opt_ HBITMAP hBitmapUnchecked,_In_opt_ HBITMAP hBitmapChecked)
WORD None None.MAKEWORD(BYTE bLow None,BYTE bHigh None)
BOOL WINAPI user32.EnableMenuItem(_In_ HMENU hMenu,_In_ UINT uIDEnableItem,_In_ UINT uEnable)
HLOCAL None None.Edit_GetHandle(HWND hwndCtl None)
BOOL None None.Edit_ShowBalloonTip(HWND hwnd None,PEDITBALLOONTIP peditballoontip None)
COLORREF None None.Pager_SetBkColor(HWND hwndPager None,COLORREF clrBk None)
BOOL None shlwapi.PathIsLFNFileSpec(_In_ LPCTSTR pszName)
BOOL None shlwapi.PathIsLFNFileSpecW(_In_ LPCTSTR pszName)
BOOL None shlwapi.PathIsLFNFileSpecA(_In_ LPCTSTR pszName)
VOID None None.Pager_ForwardMouse(HWND hwndPager None,BOOL bForward None)
BOOL None None.Edit_GetCueBannerText(HWND hwnd None,LPCWSTR lpcwText None,LONG cchText None)
BOOL None None.TabCtrl_SetUnicodeFormat(HWND hwnd None,BOOL fUnicode None)
HIMAGELIST None comctl32.ImageList_Read(LPSTREAM pstm None)
BOOL None None.MonthCal_SetRange(HWND hwndMC None,DWORD fWhichLimit None,LPSYSTEMTIME lprgSysTimeArray None)
DWORD None None.Edit_NoSetFocus(HWND hwndEdit None)
HRESULT None comctl32.GetDragImage([out] POINT *ppt,[out] POINT *pptHotspot,[out] REFIID riid,[out] PVOID *ppv)
BOOL None comctl32.ImageList_DragShowNolock(BOOL fShow None)
BOOL None None.MonthCal_SetSelRange(HWND hwndMC None,LPSYSTEMTIME lprgSysTimeArray None)
BOOL None shlwapi.PathIsSystemFolder(_In_opt_ LPCTSTR pszPath,_In_ DWORD dwAttrb)
BOOL None shlwapi.PathIsSystemFolderW(_In_opt_ LPCTSTR pszPath,_In_ DWORD dwAttrb)
BOOL None shlwapi.PathIsSystemFolderA(_In_opt_ LPCTSTR pszPath,_In_ DWORD dwAttrb)
BOOL None None.Edit_ScrollCaret(HWND hwndCtl None)
HWND None None.DateTime_GetMonthCal(HWND hwndDP None)
BOOL None None.MonthCal_SetUnicodeFormat(HWND hwnd None,BOOL fUnicode None)
BOOL WINAPI user32.SetMenuInfo(_In_ HMENU hmenu,_In_ LPCMENUINFO lpcmi)
INT_PTR WINAPI user32.DialogBox(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc)
INT_PTR WINAPI user32.DialogBoxW(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc)
INT_PTR WINAPI user32.DialogBoxA(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc)
BOOL None None.Edit_HideBalloonTip(HWND hwnd None)
PTSTR None shlwapi.PathFindNextComponent(_In_ PTSTR pszPath)
PTSTR None shlwapi.PathFindNextComponentW(_In_ PTSTR pszPath)
PTSTR None shlwapi.PathFindNextComponentA(_In_ PTSTR pszPath)
LPARAM WINAPI user32.SetMessageExtraInfo(_In_ LPARAM lParam)
VOID None None.TabCtrl_AdjustRect(HWND hwnd None,BOOL fLarger None,RECT *prc None)
COLORREF None None.Pager_GetBkColor(HWND hwndPager None)
HRESULT None shlwapi.UrlEscape(_In_ PCTSTR pszURL,_Out_ PTSTR pszEscaped,_Inout_ DWORD *pcchEscaped,DWORD dwFlags None)
HRESULT None shlwapi.UrlEscapeW(_In_ PCTSTR pszURL,_Out_ PTSTR pszEscaped,_Inout_ DWORD *pcchEscaped,DWORD dwFlags None)
HRESULT None shlwapi.UrlEscapeA(_In_ PCTSTR pszURL,_Out_ PTSTR pszEscaped,_Inout_ DWORD *pcchEscaped,DWORD dwFlags None)
DWORD None None.TabCtrl_SetExtendedStyle(HWND hwndTab None,DWORD dwExStyle None)
LPTSTR None shlwapi.PathRemoveBackslash(_Inout_ LPTSTR lpszPath)
LPTSTR None shlwapi.PathRemoveBackslashW(_Inout_ LPTSTR lpszPath)
LPTSTR None shlwapi.PathRemoveBackslashA(_Inout_ LPTSTR lpszPath)
HRESULT None uxtheme.GetBufferedPaintTargetRect(HPAINTBUFFER hBufferedPaint None,_Out_ RECT *prc)
HFONT None None.DateTime_GetMonthCalFont(HWND hwndDP None)
BOOL WINAPI user32.IsClipboardFormatAvailable(_In_ UINT format)
HWND WINAPI user32.SetFocus(_In_opt_ HWND hWnd)
DWORD None None.MonthCal_GetCalendarBorder(HWND hmc None)
BOOL None None.TabCtrl_SetImageList(HWND hwnd None,HIMAGELIST himl None)
WPARAM None None.MAKEWPARAM(WORD wLow None,WORD wHigh None)
BOOL WINAPI user32.DeleteMenu(_In_ HMENU hMenu,_In_ UINT uPosition,_In_ UINT uFlags)
BOOL None shlwapi.PathUnmakeSystemFolder(_In_ LPTSTR pszPath)
BOOL None shlwapi.PathUnmakeSystemFolderW(_In_ LPTSTR pszPath)
BOOL None shlwapi.PathUnmakeSystemFolderA(_In_ LPTSTR pszPath)
DWORD None None.Edit_TakeFocus(HWND hwndEdit None)
INT_PTR WINAPI user32.DialogBoxIndirectParam(_In_opt_ HINSTANCE hInstance,_In_ LPCDLGTEMPLATE hDialogTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc,_In_ LPARAM dwInitParam)
INT_PTR WINAPI user32.DialogBoxIndirectParamW(_In_opt_ HINSTANCE hInstance,_In_ LPCDLGTEMPLATE hDialogTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc,_In_ LPARAM dwInitParam)
INT_PTR WINAPI user32.DialogBoxIndirectParamA(_In_opt_ HINSTANCE hInstance,_In_ LPCDLGTEMPLATE hDialogTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc,_In_ LPARAM dwInitParam)
BOOL None comctl32.DestroyPropertySheetPage(HPROPSHEETPAGE hPSPage None)
BOOL None None.TreeView_EnsureVisible(HWND hwndTV None,HTREEITEM hitem None)
BOOL WINAPI user32.BlockInput(_In_ BOOL fBlockIt)
BOOL None None.Edit_Undo(HWND hwndCtl None)
INT None None.MonthCal_GetMonthRange(HWND hwndMC None,DWORD dwFlag None,LPSYSTEMTIME lprgSysTimeArray None)
BOOL None shlwapi.PathRenameExtension(_Inout_ LPTSTR pszPath,_In_ LPCTSTR pszExt)
BOOL None shlwapi.PathRenameExtensionW(_Inout_ LPTSTR pszPath,_In_ LPCTSTR pszExt)
BOOL None shlwapi.PathRenameExtensionA(_Inout_ LPTSTR pszPath,_In_ LPCTSTR pszExt)
BOOL WINAPI user32.SetMenuInfo(_In_ HMENU hmenu,_In_ LPCMENUINFO lpcmi)
BOOL WINAPI user32.IsMenu(_In_ HMENU hMenu)
PTSTR None shlwapi.PathFindExtension(_In_ PTSTR pszPath)
PTSTR None shlwapi.PathFindExtensionW(_In_ PTSTR pszPath)
PTSTR None shlwapi.PathFindExtensionA(_In_ PTSTR pszPath)
HRESULT None comctl32.ImageList_WriteEx(_In_ HIMAGELIST himl,_In_ DWORD dwFlags,_In_ LPSTREAM pstm)
BOOL None None.MonthCal_SetCurrentView(HWND hmc None,DWORD dwNewView None)
DWORD None None.Edit_GetSel(HWND hwndCtl None)
BOOL WINAPI user32.GetMenuItemInfo(_In_ HMENU hMenu,_In_ UINT uItem,_In_ BOOL fByPosition,_Inout_ LPMENUITEMINFO lpmii)
BOOL WINAPI user32.GetMenuItemInfoW(_In_ HMENU hMenu,_In_ UINT uItem,_In_ BOOL fByPosition,_Inout_ LPMENUITEMINFO lpmii)
BOOL WINAPI user32.GetMenuItemInfoA(_In_ HMENU hMenu,_In_ UINT uItem,_In_ BOOL fByPosition,_Inout_ LPMENUITEMINFO lpmii)
DWORD None None.DateTime_GetSystemtime(HWND hwndDP None,LPSYSTEMTIME lpSysTime None)
BOOL WINAPI userenv.GetUserProfileDirectory(_In_ HANDLE hToken,_Out_opt_ LPTSTR lpProfileDir,_Inout_ LPDWORD lpcchSize)
BOOL WINAPI userenv.GetUserProfileDirectoryW(_In_ HANDLE hToken,_Out_opt_ LPTSTR lpProfileDir,_Inout_ LPDWORD lpcchSize)
BOOL WINAPI userenv.GetUserProfileDirectoryA(_In_ HANDLE hToken,_Out_opt_ LPTSTR lpProfileDir,_Inout_ LPDWORD lpcchSize)
BOOL None None.ComboBox_SetCueBannerText(HWND hwnd None,LPCWSTR lpcwText None)
HTHEME None uxtheme.OpenThemeData(_In_ HWND hwnd,_In_ LPCWSTR pszClassList)
BOOL None shlwapi.PathCompactPathEx(_Out_ LPTSTR pszOut,_In_ LPCTSTR pszSrc,_In_ UINT cchMax,_Reserved_ DWORD dwFlags)
BOOL None shlwapi.PathCompactPathExW(_Out_ LPTSTR pszOut,_In_ LPCTSTR pszSrc,_In_ UINT cchMax,_Reserved_ DWORD dwFlags)
BOOL None shlwapi.PathCompactPathExA(_Out_ LPTSTR pszOut,_In_ LPCTSTR pszSrc,_In_ UINT cchMax,_Reserved_ DWORD dwFlags)
HBITMAP None user32.LoadBitmap(_In_ HINSTANCE hInstance,_In_ LPCTSTR lpBitmapName)
HBITMAP None user32.LoadBitmapW(_In_ HINSTANCE hInstance,_In_ LPCTSTR lpBitmapName)
HBITMAP None user32.LoadBitmapA(_In_ HINSTANCE hInstance,_In_ LPCTSTR lpBitmapName)
HIMAGELIST None comctl32.ImageList_GetDragImage(POINT *ppt None,POINT *pptHotspot None)
COLORREF None comctl32.ImageList_SetBkColor(_In_ HIMAGELIST himl,_In_ COLORREF clrBk)
HRESULT None uxtheme.BufferedPaintStopAllAnimations(HWND hwnd None)
DWORD WINAPI user32.OemKeyScan(_In_ WORD wOemChar)
PTSTR None shlwapi.PathGetArgs(_In_ PTSTR pszPath)
PTSTR None shlwapi.PathGetArgsW(_In_ PTSTR pszPath)
PTSTR None shlwapi.PathGetArgsA(_In_ PTSTR pszPath)
BOOL None None.Edit_GetModify(HWND hwndCtl None)
BOOL None uxtheme.IsThemeDialogTextureEnabled(_In_ HWND hwnd)
VOID None None.TabCtrl_DeselectAll(HWND hwndTab None,UINT fExcludeFocus None)
HDC None uxtheme.GetBufferedPaintDC(HPAINTBUFFER hBufferedPaint None)
UINT None None.ComboBox_GetExtendedUI(HWND hwndCtl None)
BOOL None shlwapi.PathIsSameRoot(_In_ LPCTSTR pszPath1,_In_ LPCTSTR pszPath2)
BOOL None shlwapi.PathIsSameRootW(_In_ LPCTSTR pszPath1,_In_ LPCTSTR pszPath2)
BOOL None shlwapi.PathIsSameRootA(_In_ LPCTSTR pszPath1,_In_ LPCTSTR pszPath2)
BOOL None uxtheme.BeginPanningFeedback(_In_ HWND hwnd)
LPCTSTR None shlwapi.UrlGetLocation(_In_ PCTSTR pszURL)
LPCTSTR None shlwapi.UrlGetLocationW(_In_ PCTSTR pszURL)
LPCTSTR None shlwapi.UrlGetLocationA(_In_ PCTSTR pszURL)
HRESULT None shlwapi.PathCreateFromUrlAlloc(_In_ PCWSTR pszIn,_Out_ PWSTR *ppszOut,DWORD dwFlags None)
HRESULT None uxtheme.EnableThemeDialogTexture(_In_ HWND hwnd,_In_ DWORD dwFlags)
CALID None None.MonthCal_GetCALID(HWND hmc None)
HRESULT None shlwapi.UrlCreateFromPath(_In_ PCTSTR pszPath,_Out_ PTSTR pszUrl,_Inout_ DWORD *pcchUrl,DWORD dwFlags None)
HRESULT None shlwapi.UrlCreateFromPathW(_In_ PCTSTR pszPath,_Out_ PTSTR pszUrl,_Inout_ DWORD *pcchUrl,DWORD dwFlags None)
HRESULT None shlwapi.UrlCreateFromPathA(_In_ PCTSTR pszPath,_Out_ PTSTR pszUrl,_Inout_ DWORD *pcchUrl,DWORD dwFlags None)
BOOL WINAPI user32.DrawMenuBar(_In_ HWND hWnd)
HWND WINAPI user32.CreateDialog(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc)
HWND WINAPI user32.CreateDialogW(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc)
HWND WINAPI user32.CreateDialogA(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc)
HRESULT None uxtheme.EndBufferedPaint(HPAINTBUFFER hBufferedPaint None,BOOL fUpdateTarget None)
BOOL WINAPI user32.GetMenuItemRect(_In_opt_ HWND hWnd,_In_ HMENU hMenu,_In_ UINT uItem,_Out_ LPRECT lprcItem)
HRESULT None uxtheme.EnableTheming(_In_ BOOL fEnable)
BOOL WINAPI None.DllMain(_In_ HINSTANCE hinstDLL,_In_ DWORD fdwReason,_In_ LPVOID lpvReserved)
HWND WINAPI user32.CreateDialogIndirect(_In_opt_ HINSTANCE hInstance,_In_ LPCDLGTEMPLATE lpTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc)
HWND WINAPI user32.CreateDialogIndirectW(_In_opt_ HINSTANCE hInstance,_In_ LPCDLGTEMPLATE lpTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc)
HWND WINAPI user32.CreateDialogIndirectA(_In_opt_ HINSTANCE hInstance,_In_ LPCDLGTEMPLATE lpTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc)
HRESULT None uxtheme.EndBufferedPaint(HPAINTBUFFER hBufferedPaint None,BOOL fUpdateTarget None)
BOOL WINAPI user32.AppendMenu(_In_ HMENU hMenu,_In_ UINT uFlags,_In_ UINT_PTR uIDNewItem,_In_opt_ LPCTSTR lpNewItem)
BOOL WINAPI user32.AppendMenuW(_In_ HMENU hMenu,_In_ UINT uFlags,_In_ UINT_PTR uIDNewItem,_In_opt_ LPCTSTR lpNewItem)
BOOL WINAPI user32.AppendMenuA(_In_ HMENU hMenu,_In_ UINT uFlags,_In_ UINT_PTR uIDNewItem,_In_opt_ LPCTSTR lpNewItem)
HTHEME None uxtheme.OpenThemeDataEx(_In_ HWND hwnd,_In_ LPCWSTR pszClassIdList,_In_ DWORD dwFlags)
DWORD CALLBACK None.EditStreamCallback(_In_ DWORD_PTR dwCookie,_In_ LPBYTE pbBuff,_In_ LONG cb,_In_ LONG *pcb)
COLORREF None comctl32.ImageList_SetBkColor(_In_ HIMAGELIST himl,_In_ COLORREF clrBk)
LRESULT WINAPI user32.DefDlgProc(_In_ HWND hDlg,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
LRESULT WINAPI user32.DefDlgProcW(_In_ HWND hDlg,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
BOOL WINAPI user32.SetMenuDefaultItem(_In_ HMENU hMenu,_In_ UINT uItem,_In_ UINT fByPos)
BOOL WINAPI user32.UnregisterClass(_In_ LPCTSTR lpClassName,_In_opt_ HINSTANCE hInstance)
BOOL WINAPI user32.UnregisterClassW(_In_ LPCTSTR lpClassName,_In_opt_ HINSTANCE hInstance)
BOOL WINAPI user32.UnregisterClassA(_In_ LPCTSTR lpClassName,_In_opt_ HINSTANCE hInstance)
DWORD None None.MonthCal_GetMaxSelCount(HWND hwndMC None)
HRESULT None shlwapi.UrlCombine(_In_ PCTSTR pszBase,_In_ PCTSTR pszRelative,_Out_opt_ PTSTR pszCombined,_Inout_ DWORD *pcchCombined,DWORD dwFlags None)
HRESULT None shlwapi.UrlCombineW(_In_ PCTSTR pszBase,_In_ PCTSTR pszRelative,_Out_opt_ PTSTR pszCombined,_Inout_ DWORD *pcchCombined,DWORD dwFlags None)
HRESULT None shlwapi.UrlCombineA(_In_ PCTSTR pszBase,_In_ PCTSTR pszRelative,_Out_opt_ PTSTR pszCombined,_Inout_ DWORD *pcchCombined,DWORD dwFlags None)
UINT WINAPI user32.GetMenuState(_In_ HMENU hMenu,_In_ UINT uId,_In_ UINT uFlags)
BOOL None uxtheme.BufferedPaintRenderAnimation(HWND hwnd None,HDC hdcTarget None)
BOOL None None.MonthCal_GetMinReqRect(HWND hwndMC None,LPRECT lpRectInfo None)
HRESULT None shlwapi.UrlUnescape(_Inout_ PTSTR pszURL,_Out_opt_ PTSTR pszUnescaped,_Inout_opt_ DWORD *pcchUnescaped,DWORD dwFlags None)
HRESULT None shlwapi.UrlUnescapeW(_Inout_ PTSTR pszURL,_Out_opt_ PTSTR pszUnescaped,_Inout_opt_ DWORD *pcchUnescaped,DWORD dwFlags None)
HRESULT None shlwapi.UrlUnescapeA(_Inout_ PTSTR pszURL,_Out_opt_ PTSTR pszUnescaped,_Inout_opt_ DWORD *pcchUnescaped,DWORD dwFlags None)
HRESULT None uxtheme.EndBufferedAnimation(HANIMATIONBUFFER hbpAnimation None,BOOL fUpdateTarget None)
BOOL None None.Edit_CanUndo(HWND hwndCtl None)
BOOL None uxtheme.BufferedPaintRenderAnimation(HWND hwnd None,HDC hdcTarget None)
BOOL None None.ListView_SetTextColor(HWND hwnd None,COLORREF clrText None)
HRESULT None uxtheme.EnableThemeDialogTexture(_In_ HWND hwnd,_In_ DWORD dwFlags)
HRESULT None comctl32.GetBkColor([out] COLORREF *pclr)
INT None None.ListView_SetHotItem(HWND hwndLV None,INT iIndex None)
BOOL None uxtheme.EndPanningFeedback(_In_ HWND hwnd,_In_ BOOL fAnimateBack)
INT None None.ListView_GetHotItem(HWND hwndLV None)
BOOL WINAPI user32.ChangeClipboardChain(_In_ HWND hWndRemove,_In_ HWND hWndNewNext)
HMENU WINAPI user32.GetMenu(_In_ HWND hWnd)
CALID None None.MonthCal_GetCALID(HWND hmc None)
BOOL None None.MonthCal_GetToday(HWND hwndMC None,LPSYSTEMTIME lpToday None)
BOOL WINAPI user32.MapDialogRect(_In_ HWND hDlg,_Inout_ LPRECT lpRect)
BOOL WINAPI api-ms-win-core-libraryloader-l1-1-1.QueryOptionalDelayLoadedAPI(_In_ HMODULE hParentModule,_In_ LPCSTR lpDllName,_In_ LPCSTR lpProcName,_Reserved_ DWORD Reserved)
LRESULT WINAPI user32.DefDlgProc(_In_ HWND hDlg,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
LRESULT WINAPI user32.DefDlgProcW(_In_ HWND hDlg,_In_ UINT Msg,_In_ WPARAM wParam,_In_ LPARAM lParam)
COLORREF None None.ListView_GetInsertMarkColor(HWND hwnd None)
VOID WINAPI user32.keybd_event(_In_ BYTE bVk,_In_ BYTE bScan,_In_ DWORD dwFlags,_In_ ULONG_PTR dwExtraInfo)
BOOL None None.TabCtrl_GetUnicodeFormat(HWND hwnd None)
BOOL None None.ComboBox_SetMinVisible(HWND hwnd None,INT iMinVisible None)
BOOL None None.ListView_GetBkImage(HWND hwndLV None,LPLVBKIMAGE plvbki None)
DWORD CALLBACK None.EditStreamCallback(_In_ DWORD_PTR dwCookie,_In_ LPBYTE pbBuff,_In_ LONG cb,_In_ LONG *pcb)
BOOL WINAPI comdlg32.ChooseFont(_Inout_ LPCHOOSEFONT lpcf)
BOOL WINAPI comdlg32.ChooseFontW(_Inout_ LPCHOOSEFONT lpcf)
BOOL WINAPI comdlg32.ChooseFontA(_Inout_ LPCHOOSEFONT lpcf)
HWND WINAPI user32.CreateDialogIndirectParam(_In_opt_ HINSTANCE hInstance,_In_ LPCDLGTEMPLATE lpTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc,_In_ LPARAM lParamInit)
HWND WINAPI user32.CreateDialogIndirectParamW(_In_opt_ HINSTANCE hInstance,_In_ LPCDLGTEMPLATE lpTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc,_In_ LPARAM lParamInit)
HWND WINAPI user32.CreateDialogIndirectParamA(_In_opt_ HINSTANCE hInstance,_In_ LPCDLGTEMPLATE lpTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc,_In_ LPARAM lParamInit)
BOOL WINAPI kernel32.DisableThreadLibraryCalls(_In_ HMODULE hModule)
BOOL WINAPI user32.DrawMenuBar(_In_ HWND hWnd)
DLL_DIRECTORY_COOKIE WINAPI kernel32.AddDllDirectory(_In_ PCWSTR NewDirectory)
COLORREF None comctl32.ImageList_GetBkColor(_In_ HIMAGELIST himl)
HKL WINAPI user32.ActivateKeyboardLayout(_In_ HKL hkl,_In_ UINT Flags)
BOOL WINAPI comdlg32.GetOpenFileName(_Inout_ LPOPENFILENAME lpofn)
BOOL WINAPI comdlg32.GetOpenFileNameW(_Inout_ LPOPENFILENAME lpofn)
BOOL WINAPI comdlg32.GetOpenFileNameA(_Inout_ LPOPENFILENAME lpofn)
INT_PTR WINAPI user32.DialogBoxIndirect(_In_opt_ HINSTANCE hInstance,_In_ LPCDLGTEMPLATE lpTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc)
INT_PTR WINAPI user32.DialogBoxIndirectW(_In_opt_ HINSTANCE hInstance,_In_ LPCDLGTEMPLATE lpTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc)
INT_PTR WINAPI user32.DialogBoxIndirectA(_In_opt_ HINSTANCE hInstance,_In_ LPCDLGTEMPLATE lpTemplate,_In_opt_ HWND hWndParent,_In_opt_ DLGPROC lpDialogFunc)
BOOL None None.ListView_SetBkColor(HWND hwnd None,COLORREF clrBk None)
BOOL None comctl32.ImageList_Write(HIMAGELIST himl None,LPSTREAM pstm None)
COLORREF None None.RGB(BYTE byRed None,BYTE byGreen None,BYTE byBlue None)
BOOL WINAPI user32.GetKeyboardState(_Out_ PBYTE lpKeyState)
COLORREF None None.MonthCal_GetColor(HWND hwndMC None,INT iColor None)
DLL_DIRECTORY_COOKIE WINAPI kernel32.AddDllDirectory(_In_ PCWSTR NewDirectory)
HCURSOR None None.ListView_GetHotCursor(HWND hwndLV None)
BOOL None None.ListView_SetInfoTip(HWND hwnd None,PLVSETINFOTIP plvSetInfoTip None)
COLORREF None None.PALETTEINDEX(WORD wPaletteIndex None)
BOOL WINAPI user32.GetKeyboardLayoutName(_Out_ LPTSTR pwszKLID)
BOOL WINAPI user32.GetKeyboardLayoutNameW(_Out_ LPTSTR pwszKLID)
BOOL WINAPI user32.GetKeyboardLayoutNameA(_Out_ LPTSTR pwszKLID)
BYTE None None.GetRValue(DWORD rgb None)
HRESULT None uxtheme.SetWindowTheme(_In_ HWND hwnd,_In_ LPCWSTR pszSubAppName,_In_ LPCWSTR pszSubIdList)
int CALLBACK None.CompareFunc(LPARAM lParam1 None,LPARAM lParam2 None,LPARAM lParamSort None)
BOOL None None.MonthCal_GetCurSel(HWND hwndMC None,LPSYSTEMTIME lpSysTime None)
HTHEME None uxtheme.GetWindowTheme(_In_ HWND hWnd)
INT None None.ListView_SubItemHitTest(HWND hwndLV None,LPLVHITTESTINFO pInfo None)
BOOL None None.ListView_SetTileInfo(HWND hwnd None,PLVTILEINFO plvtinfo None)
COLORREF None comctl32.ImageList_GetBkColor(_In_ HIMAGELIST himl)
UINT None None.ListView_MapIndexToID(HWND hwnd None,UINT index None)
LPTSTR None shlwapi.PathAddBackslash(_Inout_ LPTSTR lpszPath)
LPTSTR None shlwapi.PathAddBackslashW(_Inout_ LPTSTR lpszPath)
LPTSTR None shlwapi.PathAddBackslashA(_Inout_ LPTSTR lpszPath)
BOOL WINAPI user32.UnloadKeyboardLayout(_In_ HKL hkl)
HRESULT None uxtheme.EndBufferedAnimation(HANIMATIONBUFFER hbpAnimation None,BOOL fUpdateTarget None)
HIMAGELIST None comctl32.ImageList_Duplicate(HIMAGELIST himl None)
BOOL WINAPI comdlg32.GetSaveFileName(_Inout_ LPOPENFILENAME lpofn)
BOOL WINAPI comdlg32.GetSaveFileNameW(_Inout_ LPOPENFILENAME lpofn)
BOOL WINAPI comdlg32.GetSaveFileNameA(_Inout_ LPOPENFILENAME lpofn)
UINT WINAPI user32.GetMenuState(_In_ HMENU hMenu,_In_ UINT uId,_In_ UINT uFlags)
HWND None None.ListView_GetHeader(HWND hwndLV None)
UINT_PTR CALLBACK None.SetupHookProc(_In_ HWND hdlg,_In_ UINT uiMsg,_In_ WPARAM wParam,_In_ LPARAM lParam)
BOOL None None.ListView_SetCallbackMask(HWND hwnd None,UINT mask None)
UINT None None.ListView_MapIDToIndex(HWND hwnd None,UINT id None)
LRESULT CALLBACK None.EditDlgProc(HWND hwndDlg None,UINT uMsg None,WPARAM wParam None,LPARAM lParam None)
UINT_PTR CALLBACK None.CFHookProc(_In_ HWND hdlg,_In_ UINT uiMsg,_In_ WPARAM wParam,_In_ LPARAM lParam)
UINT WINAPI user32.MapVirtualKey(_In_ UINT uCode,_In_ UINT uMapType)
UINT WINAPI user32.MapVirtualKeyW(_In_ UINT uCode,_In_ UINT uMapType)
UINT WINAPI user32.MapVirtualKeyA(_In_ UINT uCode,_In_ UINT uMapType)
HRESULT None None.GetWindow([out] HWND *phwnd)
LRESULT CALLBACK None.WindowProc(HWND hwnd None,WM_IME_COMPOSITION None None,WPARAM wParam None,LPARAM lParam None)
BOOL None None.ListView_InsertMarkHitTest(HWND hwnd None,LPPOINT point None,PLVINSERTMARK plvim None)
COLORREF None None.ListView_GetInsertMarkColor(HWND hwnd None)
SHORT WINAPI user32.VkKeyScan(_In_ TCHAR ch)
SHORT WINAPI user32.VkKeyScanW(_In_ TCHAR ch)
SHORT WINAPI user32.VkKeyScanA(_In_ TCHAR ch)
HWND WINAPI user32.GetNextDlgTabItem(_In_ HWND hDlg,_In_opt_ HWND hCtl,_In_ BOOL bPrevious)
BOOL None None.ListView_SortItems(HWND hwnd None,PFNLVCOMPARE pfnCompare None,LPARAM lParamSort None)
BOOL None None.TabCtrl_HighlightItem(HWND hwndTab None,INT idItem None,WORD fHighlight None)
BOOL None None.ListView_GetOrigin(HWND hwnd None,LPPOINT lpptOrg None)
BOOL WINAPI kernel32.SetDefaultDllDirectories(_In_ DWORD DirectoryFlags)
HWND None None.ListView_GetToolTips(HWND hwnd None)
BOOL None None.ListView_SortItemsEx(HWND hwnd None,PFNLVCOMPARE pfnCompare None,LPARAM lParamSort None)
UINT_PTR CALLBACK None.FRHookProc(_In_ HWND hdlg,_In_ UINT uiMsg,_In_ WPARAM wParam,_In_ LPARAM lParam)
BOOL None None.ListView_SetTileViewInfo(HWND hwnd None,PLVTILEVIEWINFO plvtvinfo None)
DWORD None None.MonthCal_GetCurrentView(HWND hmc None)
UINT None None.ListView_MapIDToIndex(HWND hwnd None,UINT id None)
UINT None None.ListView_GetCallbackMask(HWND hwnd None)
COLORREF None None.MonthCal_SetColor(HWND hwndMC None,INT iColor None,COLORREF clr None)
HWND None None.ListView_SetToolTips(HWND hwnd None,HWND hwndToolTip None)
HWND WINAPI user32.GetNextDlgGroupItem(_In_ HWND hDlg,_In_opt_ HWND hCtl,_In_ BOOL bPrevious)
INT None None.ListView_GetHotItem(HWND hwndLV None)
DWORD None None.ListView_GetItemSpacing(HWND hwnd None,BOOL fSmall None)
COLORREF None None.ListView_GetTextColor(HWND hwnd None)
UINT None None.ListView_GetSelectedCount(HWND hwnd None)
DWORD None None.ListView_GetExtendedListViewStyle(HWND hwndLV None)
BOOL None None.ListView_IsGroupViewEnabled(HWND hwnd None)
COLORREF None None.ListView_SetOutlineColor(HWND hwnd None,COLORREF color None)
BOOL None None.ListView_GetInsertMark(HWND hwnd None,PLVINSERTMARK plvim None)
BOOL None None.ListView_SetTextBkColor(HWND hwnd None,COLORREF clrText None)
int CALLBACK None.CompareFunc(LPARAM lParam1 None,LPARAM lParam2 None,LPARAM lParamSort None)
DWORD None None.ListView_GetView(HWND hwnd None)
BOOL None None.ListView_Arrange(HWND hwnd None,UINT code None)
UINT WINAPI user32.MapVirtualKeyEx(_In_ UINT uCode,_In_ UINT uMapType,_Inout_opt_ HKL dwhkl)
UINT WINAPI user32.MapVirtualKeyExW(_In_ UINT uCode,_In_ UINT uMapType,_Inout_opt_ HKL dwhkl)
UINT WINAPI user32.MapVirtualKeyExA(_In_ UINT uCode,_In_ UINT uMapType,_Inout_opt_ HKL dwhkl)
BOOL None comctl32.ImageList_DrawIndirect(IMAGELISTDRAWPARAMS *pimldp None)
int CALLBACK None.CompareFunc(LPARAM lParam1 None,LPARAM lParam2 None,LPARAM lParamSort None)
BOOL None None.ListView_GetViewRect(HWND hwnd None,RECT *prc None)
COLORREF None None.ListView_GetOutlineColor(HWND hwnd None)
COLORREF None None.ListView_GetTextBkColor(HWND hwnd None)
BOOL None None.ListView_SetUnicodeFormat(HWND hwnd None,BOOL fUnicode None)
BOOL None None.ListView_GetItem(HWND hwnd None,LPLVITEM pitem None)
BOOL None None.ListView_GetUnicodeFormat(HWND hwnd None)
HWND None None.ListView_GetEditControl(HWND hwnd None)
COLORREF None None.ListView_SetInsertMarkColor(HWND hwnd None,COLORREF color None)
UINT None None.ListView_GetSelectedColumn(HWND hwnd None)
BOOL None None.ListView_SetBkImage(HWND hwndLV None,LPLVBKIMAGE plvbki None)
DWORD None None.MonthCal_GetCalendarCount(HWND hmc None)
BOOL None None.ListView_DeleteAllItems(HWND hwnd None)
LRESULT CALLBACK None.WindowProc(HWND hwnd None,UINT uMsg None,WPARAM wParam None,LPARAM lParam None)
BOOL None None.TabCtrl_HighlightItem(HWND hwndTab None,INT idItem None,WORD fHighlight None)
BOOL None None.MonthCal_SetCurSel(HWND hwndMC None,LPSYSTEMTIME lpSysTime None)
BOOL None None.ComboBox_ShowDropdown(HWND hwndCtl None,BOOL fShow None)
COLORREF None None.MonthCal_SetColor(HWND hwndMC None,INT iColor None,COLORREF clr None)
HIMAGELIST None None.TabCtrl_GetImageList(HWND hwnd None)
HMODULE WINAPI kernel32.LoadLibraryEx(_In_ LPCTSTR lpFileName,_Reserved_ HANDLE hFile,_In_ DWORD dwFlags)
HMODULE WINAPI kernel32.LoadLibraryExW(_In_ LPCTSTR lpFileName,_Reserved_ HANDLE hFile,_In_ DWORD dwFlags)
HMODULE WINAPI kernel32.LoadLibraryExA(_In_ LPCTSTR lpFileName,_Reserved_ HANDLE hFile,_In_ DWORD dwFlags)
BOOL None None.TabCtrl_DeleteAllItems(HWND hwnd None)
INT None None.ListView_SetSelectionMark(HWND hwndLV None,INT iIndex None)
BOOL None user32.UpdateWindow(_In_ HWND hWnd)
BOOL None wtsapi32.WTSRegisterSessionNotification(_In_ HWND hWnd,_In_ DWORD dwFlags)
DWORD None None.ListView_GetHoverTime(HWND hwndLV None)
DWORD None None.MonthCal_GetFirstDayOfWeek(HWND hwndMC None)
BOOL None None.ListView_GetISearchString(HWND hwnd None,LPSTR lpsz None)
BOOL WINAPI user32.EndDialog(_In_ HWND hDlg,_In_ INT_PTR nResult)
INT None None.ListView_SubItemHitTestEx(HWND hwnd None,LPLVHITTESTINFO plvhti None)
VOID WINAPI kernel32.GetSystemTimePreciseAsFileTime(_Out_ LPFILETIME lpSystemTimeAsFileTime)
HCURSOR None None.ListView_SetHotCursor(HWND hwndLV None,HCURSOR hCursor None)
HANDLE None wtsapi32.WTSVirtualChannelOpenEx(_In_ DWORD SessionId,_In_ LPSTR pVirtualName,_In_ DWORD flags)
COLORREF None None.ListView_GetBkColor(HWND hwnd None)
HRESULT WINAPI gamingtcui.ProcessPendingGameUI(_In_ BOOL waitForCompletion)
SHORT WINAPI user32.VkKeyScanEx(_In_ TCHAR ch,_In_ HKL dwhkl)
SHORT WINAPI user32.VkKeyScanExW(_In_ TCHAR ch,_In_ HKL dwhkl)
SHORT WINAPI user32.VkKeyScanExA(_In_ TCHAR ch,_In_ HKL dwhkl)
LRESULT CALLBACK None.WindowProc(_In_ HWND hwnd,_In_ UINT uMsg,_In_ WPARAM wParam,_In_ LPARAM lParam)
BOOL None None.MonthCal_SetDayState(HWND hwndMC None,INT iMonths None,LPMONTHDAYSTATE lpDayStateArray None)
HWND None None.ListView_GetToolTips(HWND hwnd None)
HRESULT WINAPI comdlg32.PrintDlgEx(_Inout_ LPPRINTDLGEX lppd)
HRESULT WINAPI comdlg32.PrintDlgExW(_Inout_ LPPRINTDLGEX lppd)
HRESULT WINAPI comdlg32.PrintDlgExA(_Inout_ LPPRINTDLGEX lppd)
LPCWSTR WINAPI user32.MB_GetString(UINT wBtn None)
DWORD None None.MonthCal_GetRange(HWND hwndMC None,LPSYSTEMTIME lprgSysTimeArray None)
BOOL None wtsapi32.WTSTerminateProcess(_In_ HANDLE hServer,_In_ DWORD ProcessId,_In_ DWORD ExitCode)
BOOL WINAPI kernel32.TzSpecificLocalTimeToSystemTime(_In_opt_ LPTIME_ZONE_INFORMATION lpTimeZoneInformation,_In_ LPSYSTEMTIME lpLocalTime,_Out_ LPSYSTEMTIME lpUniversalTime)
BOOL None wtsapi32.WTSVirtualChannelPurgeOutput(_In_ HANDLE hChannelHandle)
BOOL None None.ListView_GetNumberOfWorkAreas(HWND hwndLV None,LPUINT lpuWorkAreas None)
DWORD None None.MonthCal_HitTest(HWND hwndMC None,PMCHITTESTINFO pMCHitTest None)
INT None None.ListView_GetSelectionMark(HWND hwndLV None)
BOOL None None.ListView_SetInsertMark(HWND hwnd None,PLVINSERTMARK plvim None)
BOOL None None.MonthCal_GetUnicodeFormat(HWND hwnd None)
UINT None None.INDEXTOOVERLAYMASK(UINT iOverlay None)
DWORD WINAPI mstlsapi.TLSLicenseEnumEnd(_In_ TLS_HANDLE hHandle,_Out_ PDWORD pdwErrCode)
BOOL None kernel32.ProcessIdToSessionId(_In_ DWORD dwProcessId,_Out_ DWORD *pSessionId)
UINT None None.ListView_GetSelectedColumn(HWND hwnd None)
VOID WINAPI wtsapi32.WTSCloseServer(_In_ HANDLE hServer)
BOOL None wtsapi32.WTSVirtualChannelPurgeInput(_In_ HANDLE hChannelHandle)
BOOL None wtsapi32.WTSQueryUserToken(_In_ ULONG SessionId,_Out_ PHANDLE phToken)
UINT_PTR CALLBACK None.PagePaintHook(_In_ HWND hdlg,_In_ UINT uiMsg,_In_ WPARAM wParam,_In_ LPARAM lParam)
BOOL WINAPI wtsapi32.WTSIsChildSessionsEnabled(_Out_ BOOL *pbEnabled)
BOOL WINAPI wtsapi32.WTSCreateListener(_In_ HANDLE hServer,_In_ PVOID pReserved,_In_ DWORD Reserved,_In_ LPTSTR pListenerName,_In_ PWTSLISTENERCONFIG pBuffer,_In_ DWORD flag)
BOOL WINAPI wtsapi32.WTSCreateListenerW(_In_ HANDLE hServer,_In_ PVOID pReserved,_In_ DWORD Reserved,_In_ LPTSTR pListenerName,_In_ PWTSLISTENERCONFIG pBuffer,_In_ DWORD flag)
BOOL WINAPI wtsapi32.WTSCreateListenerA(_In_ HANDLE hServer,_In_ PVOID pReserved,_In_ DWORD Reserved,_In_ LPTSTR pListenerName,_In_ PWTSLISTENERCONFIG pBuffer,_In_ DWORD flag)
BOOL WINAPI wtsapi32.WTSConnectSession(_In_ ULONG LogonId,_In_ ULONG TargetLogonId,_In_ PTSTR pPassword,_In_ BOOL bWait)
BOOL WINAPI wtsapi32.WTSConnectSessionW(_In_ ULONG LogonId,_In_ ULONG TargetLogonId,_In_ PTSTR pPassword,_In_ BOOL bWait)
BOOL WINAPI wtsapi32.WTSConnectSessionA(_In_ ULONG LogonId,_In_ ULONG TargetLogonId,_In_ PTSTR pPassword,_In_ BOOL bWait)
HRESULT WINAPI kernel32.ConvertAuxiliaryCounterToPerformanceCounter(_In_ ULONGLONG ullAuxiliaryCounterValue,_Out_ PULONGLONG lpPerformanceCounterValue,_Out_opt_ PULONGLONG lpConversionError)
BOOL WINAPI wtsapi32.WTSEnumerateSessionsEx(_In_ HANDLE hServer,_Inout_ DWORD *pLevel,_In_ DWORD Filter,_Out_ PWTS_SESSION_INFO_1 *ppSessionInfo,_Out_ DWORD *pCount)
BOOL WINAPI wtsapi32.WTSEnumerateSessionsExW(_In_ HANDLE hServer,_Inout_ DWORD *pLevel,_In_ DWORD Filter,_Out_ PWTS_SESSION_INFO_1 *ppSessionInfo,_Out_ DWORD *pCount)
BOOL WINAPI wtsapi32.WTSEnumerateSessionsExA(_In_ HANDLE hServer,_Inout_ DWORD *pLevel,_In_ DWORD Filter,_Out_ PWTS_SESSION_INFO_1 *ppSessionInfo,_Out_ DWORD *pCount)
TLS_HANDLE WINAPI mstlsapi.TLSConnectToLsServer(_In_ LPTSTR pszLsServer)
DWORD WINAPI kernel32.GetDynamicTimeZoneInformation(_Out_ PDYNAMIC_TIME_ZONE_INFORMATION pTimeZoneInformation)
BOOL WINAPI kernel32.GetFileTime(_In_ HANDLE hFile,_Out_opt_ LPFILETIME lpCreationTime,_Out_opt_ LPFILETIME lpLastAccessTime,_Out_opt_ LPFILETIME lpLastWriteTime)
BOOL WINAPI wtsapi32.WTSStartRemoteControlSession(_In_ LPTSTR pTargetServerName,_In_ ULONG TargetLogonId,_In_ BYTE HotkeyVk,_In_ USHORT HotkeyModifiers)
BOOL WINAPI wtsapi32.WTSStartRemoteControlSessionW(_In_ LPTSTR pTargetServerName,_In_ ULONG TargetLogonId,_In_ BYTE HotkeyVk,_In_ USHORT HotkeyModifiers)
BOOL WINAPI wtsapi32.WTSStartRemoteControlSessionA(_In_ LPTSTR pTargetServerName,_In_ ULONG TargetLogonId,_In_ BYTE HotkeyVk,_In_ USHORT HotkeyModifiers)
BOOL WINAPI kernel32.GetSystemTimeAdjustment(_Out_ PDWORD lpTimeAdjustment,_Out_ PDWORD lpTimeIncrement,_Out_ PBOOL lpTimeAdjustmentDisabled)
BOOL None wtsapi32.WTSSetUserConfig(_In_ LPTSTR pServerName,_In_ LPTSTR pUserName,_In_ WTS_CONFIG_CLASS WTSConfigClass,_In_ LPTSTR pBuffer,_In_ DWORD DataLength)
BOOL None wtsapi32.WTSSetUserConfigW(_In_ LPTSTR pServerName,_In_ LPTSTR pUserName,_In_ WTS_CONFIG_CLASS WTSConfigClass,_In_ LPTSTR pBuffer,_In_ DWORD DataLength)
BOOL None wtsapi32.WTSSetUserConfigA(_In_ LPTSTR pServerName,_In_ LPTSTR pUserName,_In_ WTS_CONFIG_CLASS WTSConfigClass,_In_ LPTSTR pBuffer,_In_ DWORD DataLength)
BOOL None wtsapi32.WTSRegisterSessionNotificationEx(_In_ HANDLE hServer,_In_ HWND hWnd,_In_ DWORD dwFlags)
BOOL WINAPI kernel32.TzSpecificLocalTimeToSystemTime(_In_opt_ LPTIME_ZONE_INFORMATION lpTimeZoneInformation,_In_ LPSYSTEMTIME lpLocalTime,_Out_ LPSYSTEMTIME lpUniversalTime)
DWORD WINAPI mstlsapi.TLSGetServerCertificate(_In_ TLS_HANDLE hHandle,_In_ BOOL bSignCert,_Out_ LPBYTE *ppbCertBlob,_Out_ LPDWORD lpdwCertBlobLen,_Out_ PDWORD pdwErrCode)
BOOL None None.ListView_SetUnicodeFormat(HWND hwnd None,BOOL fUnicode None)
BOOLEAN WINAPI ntdll.RtlTimeToSecondsSince1970(_In_ PLARGE_INTEGER Time,_Out_ PULONG ElapsedSeconds)
BOOL None wtsapi32.WTSEnumerateProcesses(_In_ HANDLE hServer,_In_ DWORD Reserved,_In_ DWORD Version,_Out_ PWTS_PROCESS_INFO *ppProcessInfo,_Out_ DWORD *pCount)
BOOL None wtsapi32.WTSEnumerateProcessesW(_In_ HANDLE hServer,_In_ DWORD Reserved,_In_ DWORD Version,_Out_ PWTS_PROCESS_INFO *ppProcessInfo,_Out_ DWORD *pCount)
BOOL None wtsapi32.WTSEnumerateProcessesA(_In_ HANDLE hServer,_In_ DWORD Reserved,_In_ DWORD Version,_Out_ PWTS_PROCESS_INFO *ppProcessInfo,_Out_ DWORD *pCount)
BOOL None wtsapi32.WTSVirtualChannelWrite(_In_ HANDLE hChannelHandle,_In_ PCHAR Buffer,_In_ ULONG Length,_Out_ PULONG pBytesWritten)
BOOL WINAPI kernel32.SystemTimeToTzSpecificLocalTime(_In_opt_ LPTIME_ZONE_INFORMATION lpTimeZone,_In_ LPSYSTEMTIME lpUniversalTime,_Out_ LPSYSTEMTIME lpLocalTime)
BOOL None wtsapi32.WTSWaitSystemEvent(_In_ HANDLE hServer,_In_ DWORD EventMask,_Out_ DWORD *pEventFlags)
BOOL None wtsapi32.WTSSendMessage(_In_ HANDLE hServer,_In_ DWORD SessionId,_In_ LPTSTR pTitle,_In_ DWORD TitleLength,_In_ LPTSTR pMessage,_In_ DWORD MessageLength,_In_ DWORD Style,_In_ DWORD Timeout,_Out_ DWORD *pResponse,_In_ BOOL bWait)
BOOL None wtsapi32.WTSSendMessageW(_In_ HANDLE hServer,_In_ DWORD SessionId,_In_ LPTSTR pTitle,_In_ DWORD TitleLength,_In_ LPTSTR pMessage,_In_ DWORD MessageLength,_In_ DWORD Style,_In_ DWORD Timeout,_Out_ DWORD *pResponse,_In_ BOOL bWait)
BOOL None wtsapi32.WTSSendMessageA(_In_ HANDLE hServer,_In_ DWORD SessionId,_In_ LPTSTR pTitle,_In_ DWORD TitleLength,_In_ LPTSTR pMessage,_In_ DWORD MessageLength,_In_ DWORD Style,_In_ DWORD Timeout,_Out_ DWORD *pResponse,_In_ BOOL bWait)
BOOL WINAPI user32.SystemParametersInfo(_In_ UINT uiAction,_In_ UINT uiParam,_Inout_ PVOID pvParam,_In_ UINT fWinIni)
BOOL WINAPI user32.SystemParametersInfoW(_In_ UINT uiAction,_In_ UINT uiParam,_Inout_ PVOID pvParam,_In_ UINT fWinIni)
BOOL WINAPI user32.SystemParametersInfoA(_In_ UINT uiAction,_In_ UINT uiParam,_Inout_ PVOID pvParam,_In_ UINT fWinIni)
DWORD WINAPI mstlsapi.TLSLicenseEnumNext(_In_ TLS_HANDLE hHandle,_In_ LSLicense *lpLicense,_Out_ PDWORD pdwErrCode)
BOOL WINAPI wtsapi32.WTSStopRemoteControlSession(_In_ ULONG LogonId)
BOOL None wtsapi32.WTSVirtualChannelClose(_In_ HANDLE hChannelHandle)
NTSTATUS WINAPI ntdll.NtQuerySystemTime(_Out_ PLARGE_INTEGER SystemTime)
BOOL None wtsapi32.WTSEnumerateSessions(_In_ HANDLE hServer,_In_ DWORD Reserved,_In_ DWORD Version,_Out_ PWTS_SESSION_INFO *ppSessionInfo,_Out_ DWORD *pCount)
BOOL None wtsapi32.WTSEnumerateSessionsW(_In_ HANDLE hServer,_In_ DWORD Reserved,_In_ DWORD Version,_Out_ PWTS_SESSION_INFO *ppSessionInfo,_Out_ DWORD *pCount)
BOOL None wtsapi32.WTSEnumerateSessionsA(_In_ HANDLE hServer,_In_ DWORD Reserved,_In_ DWORD Version,_Out_ PWTS_SESSION_INFO *ppSessionInfo,_Out_ DWORD *pCount)
BOOL None wtsapi32.WTSUnRegisterSessionNotification(_In_ HWND hWnd)
HRESULT WINAPI kernel32.QueryAuxiliaryCounterFrequency(_Out_ PULONGLONG lpAuxiliaryCounterFrequency)
BOOL WINAPI wtsapi32.WTSEnableChildSessions(BOOL bEnable None)
BOOL WINAPI user32.GetClassInfo(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpClassName,_Out_ LPWNDCLASS lpWndClass)
BOOL WINAPI user32.GetClassInfoW(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpClassName,_Out_ LPWNDCLASS lpWndClass)
BOOL WINAPI user32.GetClassInfoA(_In_opt_ HINSTANCE hInstance,_In_ LPCTSTR lpClassName,_Out_ LPWNDCLASS lpWndClass)
BOOL WINAPI wtsapi32.WTSGetListenerSecurity(_In_ HANDLE hServer,_In_ PVOID pReserved,_In_ DWORD Reserved,_In_ LPTSTR pListenerName,_In_ SECURITY_INFORMATION SecurityInformation,_Out_opt_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_ DWORD nLength,_Out_ LPDWORD lpnLengthNeeded)
BOOL WINAPI wtsapi32.WTSGetListenerSecurityW(_In_ HANDLE hServer,_In_ PVOID pReserved,_In_ DWORD Reserved,_In_ LPTSTR pListenerName,_In_ SECURITY_INFORMATION SecurityInformation,_Out_opt_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_ DWORD nLength,_Out_ LPDWORD lpnLengthNeeded)
BOOL WINAPI wtsapi32.WTSGetListenerSecurityA(_In_ HANDLE hServer,_In_ PVOID pReserved,_In_ DWORD Reserved,_In_ LPTSTR pListenerName,_In_ SECURITY_INFORMATION SecurityInformation,_Out_opt_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_ DWORD nLength,_Out_ LPDWORD lpnLengthNeeded)
BOOL WINAPI wtsapi32.WTSFreeMemoryEx(_In_ WTS_TYPE_CLASS WTSTypeClass,_In_ PVOID pMemory,_In_ ULONG NumberOfEntries)
BOOL WINAPI wtsapi32.WTSFreeMemoryExW(_In_ WTS_TYPE_CLASS WTSTypeClass,_In_ PVOID pMemory,_In_ ULONG NumberOfEntries)
BOOL WINAPI wtsapi32.WTSFreeMemoryExA(_In_ WTS_TYPE_CLASS WTSTypeClass,_In_ PVOID pMemory,_In_ ULONG NumberOfEntries)
INT None comctl32.LVGroupCompare(_In_ INT Group1_ID,_In_ INT Group2_ID,_In_ VOID *pvData)
DWORD WINAPI mstlsapi.TLSKeyPackEnumEnd(_In_ TLS_HANDLE hHandle,_Out_ PDWORD pdwErrCode)
HRESULT WINAPI gamingtcui.CheckGamingPrivilegeSilently(_In_ UINT32 privilegeId,_In_ HSTRING scope,_In_ HSTRING policy,_Out_ BOOL *hasPrivilege)
VOID WINAPI wtsapi32.WTSCloseServer(_In_ HANDLE hServer)
BOOL WINAPI wtsapi32.WTSGetChildSessionId(_Out_ ULONG *pSessionId)
BOOL WINAPI wtsapi32.WTSEnumerateProcessesEx(_In_ HANDLE hServer,_Inout_ DWORD *pLevel,_In_ DWORD SessionID,_Out_ LPTSTR *ppProcessInfo,_Out_ DWORD *pCount)
BOOL WINAPI wtsapi32.WTSEnumerateProcessesExW(_In_ HANDLE hServer,_Inout_ DWORD *pLevel,_In_ DWORD SessionID,_Out_ LPTSTR *ppProcessInfo,_Out_ DWORD *pCount)
BOOL WINAPI wtsapi32.WTSEnumerateProcessesExA(_In_ HANDLE hServer,_Inout_ DWORD *pLevel,_In_ DWORD SessionID,_Out_ LPTSTR *ppProcessInfo,_Out_ DWORD *pCount)
BOOL None wtsapi32.WTSUnRegisterSessionNotificationEx(_In_ HANDLE hServer,_In_ HWND hWnd)
BOOL WINAPI kernel32.SetSystemTimeAdjustment(_In_ DWORD dwTimeAdjustment,_In_ BOOL bTimeAdjustmentDisabled)
BOOL WINAPI kernel32.GetFileTime(_In_ HANDLE hFile,_Out_opt_ LPFILETIME lpCreationTime,_Out_opt_ LPFILETIME lpLastAccessTime,_Out_opt_ LPFILETIME lpLastWriteTime)
BOOL None wtsapi32.WTSVirtualChannelQuery(_In_ HANDLE hChannelHandle,_In_ WTS_VIRTUAL_CLASS WtsVirtualClass,_Out_ PVOID *ppBuffer,_Out_ DWORD *pBytesReturned)
BOOL WINAPI kernel32.DosDateTimeToFileTime(_In_ WORD wFatDate,_In_ WORD wFatTime,_Out_ LPFILETIME lpFileTime)
HANDLE WINAPI wtsapi32.WTSOpenServerEx(_In_ LPTSTR pServerName)
HANDLE WINAPI wtsapi32.WTSOpenServerExW(_In_ LPTSTR pServerName)
HANDLE WINAPI wtsapi32.WTSOpenServerExA(_In_ LPTSTR pServerName)
DWORD WINAPI mstlsapi.TLSLicenseEnumBegin(_In_ TLS_HANDLE hHandle,_In_ DWORD dwSearchParm,_In_ BOOL bMatchAll,_In_ LSLicense *lpSearchParm,_Out_ PDWORD pdwErrCode)
BOOL None wtsapi32.WTSQueryUserConfig(_In_ LPTSTR pServerName,_In_ LPTSTR pUserName,_In_ WTS_CONFIG_CLASS WTSConfigClass,_Out_ LPTSTR *ppBuffer,_Out_ DWORD *pBytesReturned)
BOOL None wtsapi32.WTSQueryUserConfigW(_In_ LPTSTR pServerName,_In_ LPTSTR pUserName,_In_ WTS_CONFIG_CLASS WTSConfigClass,_Out_ LPTSTR *ppBuffer,_Out_ DWORD *pBytesReturned)
BOOL None wtsapi32.WTSQueryUserConfigA(_In_ LPTSTR pServerName,_In_ LPTSTR pUserName,_In_ WTS_CONFIG_CLASS WTSConfigClass,_Out_ LPTSTR *ppBuffer,_Out_ DWORD *pBytesReturned)
HRESULT WINAPI kernel32.ConvertPerformanceCounterToAuxiliaryCounter(_In_ ULONGLONG ullPerformanceCounterValue,_Out_ PULONGLONG lpAuxiliaryCounterValue,_Out_opt_ PULONGLONG lpConversionError)
DWORD WINAPI mstlsapi.TLSKeyPackEnumBegin(_In_ TLS_HANDLE hHandle,_In_ DWORD dwSearchParm,_In_ BOOL bMatchAll,_In_ LSKeyPack *lpSearchParm,_Out_ PDWORD pdwErrCode)
BOOL WINAPI user32.TrackMouseEvent(_Inout_ LPTRACKMOUSEEVENT lpEventTrack)
BOOL WINAPI kernel32.GetTimeZoneInformationForYear(_In_ USHORT wYear,_In_opt_ PDYNAMIC_TIME_ZONE_INFORMATION pdtzi,_Out_ LPTIME_ZONE_INFORMATION ptzi)
HRESULT WINAPI kernel32.ConvertAuxiliaryCounterToPerformanceCounter(_In_ ULONGLONG ullAuxiliaryCounterValue,_Out_ PULONGLONG lpPerformanceCounterValue,_Out_opt_ PULONGLONG lpConversionError)
BOOL WINAPI user32.HideCaret(_In_opt_ HWND hWnd)
BOOL WINAPI wtsapi32.WTSEnumerateListeners(_In_ HANDLE hServer,_In_ PVOID pReserved,_In_ DWORD Reserved,_Out_opt_ PWTSLISTENERNAME pListeners,_Inout_ DWORD *pCount)
BOOL WINAPI wtsapi32.WTSEnumerateListenersW(_In_ HANDLE hServer,_In_ PVOID pReserved,_In_ DWORD Reserved,_Out_opt_ PWTSLISTENERNAME pListeners,_Inout_ DWORD *pCount)
BOOL WINAPI wtsapi32.WTSEnumerateListenersA(_In_ HANDLE hServer,_In_ PVOID pReserved,_In_ DWORD Reserved,_Out_opt_ PWTSLISTENERNAME pListeners,_Inout_ DWORD *pCount)
BOOL None wtsapi32.WTSVirtualChannelRead(_In_ HANDLE hChannelHandle,_In_ ULONG TimeOut,_Out_ PCHAR Buffer,_In_ ULONG BufferSize,_Out_ PULONG pBytesRead)
DWORD WINAPI kernel32.GetTimeZoneInformation(_Out_ LPTIME_ZONE_INFORMATION lpTimeZoneInformation)
BOOL None wtsapi32.WTSShutdownSystem(_In_ HANDLE hServer,_In_ DWORD ShutdownFlag)
POINTS None None.MAKEPOINTS(DWORD dwValue None)
BOOL None user32.GetMonitorInfo(_In_ HMONITOR hMonitor,_Out_ LPMONITORINFO lpmi)
BOOL None user32.GetMonitorInfoW(_In_ HMONITOR hMonitor,_Out_ LPMONITORINFO lpmi)
BOOL None user32.GetMonitorInfoA(_In_ HMONITOR hMonitor,_Out_ LPMONITORINFO lpmi)
DWORD WINAPI mstlsapi.TLSKeyPackEnumNext(_In_ TLS_HANDLE hHandle,_In_ LsKeyPack *lpKeyPack,_Out_ PDWORD pdwErrCode)
BOOL None wtsapi32.WTSLogoffSession(_In_ HANDLE hServer,_In_ DWORD SessionId,_In_ BOOL bWait)
Sub None msftedit.AttributeCopy(r1 As ITextRange,r2 As ITextRange)
BOOL WINAPI comdlg32.PageSetupDlg(_Inout_ LPPAGESETUPDLG lppsd)
BOOL WINAPI comdlg32.PageSetupDlgW(_Inout_ LPPAGESETUPDLG lppsd)
BOOL WINAPI comdlg32.PageSetupDlgA(_Inout_ LPPAGESETUPDLG lppsd)
VOID None kernel32.QueryInterruptTime(_Out_ PULONGLONG lpInterruptTime)
VOID None kernel32.QueryUnbiasedInterruptTimePrecise(_Out_ PULONGLONG lpUnbiasedInterruptTimePrecise)
LPARAM WINAPI None.MAKELPARAM(WORD wLow None,WORD wHigh None)
BOOL WINAPI gdi32.CheckColorsInGamut(HDC hDC None,LPVOID lpRGBTriples None,LPVOID lpBuffer None,UINT nCount None)
BOOL WINAPI kernel32.GetSystemTimes(_Out_opt_ LPFILETIME lpIdleTime,_Out_opt_ LPFILETIME lpKernelTime,_Out_opt_ LPFILETIME lpUserTime)
BOOL WINAPI wtsapi32.WTSSetListenerSecurity(_In_ HANDLE hServer,_In_ PVOID pReserved,_In_ DWORD Reserved,_In_ LPTSTR pListenerName,_In_ SECURITY_INFORMATION SecurityInformation,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor)
BOOL WINAPI wtsapi32.WTSSetListenerSecurityW(_In_ HANDLE hServer,_In_ PVOID pReserved,_In_ DWORD Reserved,_In_ LPTSTR pListenerName,_In_ SECURITY_INFORMATION SecurityInformation,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor)
BOOL WINAPI wtsapi32.WTSSetListenerSecurityA(_In_ HANDLE hServer,_In_ PVOID pReserved,_In_ DWORD Reserved,_In_ LPTSTR pListenerName,_In_ SECURITY_INFORMATION SecurityInformation,_In_ PSECURITY_DESCRIPTOR pSecurityDescriptor)
BOOL WINAPI kernel32.QueryPerformanceFrequency(_Out_ LARGE_INTEGER *lpFrequency)
HANDLE None wtsapi32.WTSVirtualChannelOpen(_In_ HANDLE hServer,_In_ DWORD SessionId,_In_ LPSTR pVirtualName)
DWORD WINAPI kernel32.GetDynamicTimeZoneInformation(_Out_ PDYNAMIC_TIME_ZONE_INFORMATION pTimeZoneInformation)
BOOL None wtsapi32.WTSEnumerateServers(_In_ LPTSTR pDomainName,_In_ DWORD Reserved,_In_ DWORD Version,PWTS_SERVER_INFO *ppServerInfo None,DWORD *pCount None)
BOOL None wtsapi32.WTSEnumerateServersW(_In_ LPTSTR pDomainName,_In_ DWORD Reserved,_In_ DWORD Version,PWTS_SERVER_INFO *ppServerInfo None,DWORD *pCount None)
BOOL None wtsapi32.WTSEnumerateServersA(_In_ LPTSTR pDomainName,_In_ DWORD Reserved,_In_ DWORD Version,PWTS_SERVER_INFO *ppServerInfo None,DWORD *pCount None)
BOOL None wtsapi32.WTSDisconnectSession(_In_ HANDLE hServer,_In_ DWORD SessionId,_In_ BOOL bWait)
BOOL WINAPI user32.SystemParametersInfo(_In_ UINT uiAction,_In_ UINT uiParam,_Inout_ PVOID pvParam,_In_ UINT fWinIni)
BOOL WINAPI user32.SystemParametersInfoW(_In_ UINT uiAction,_In_ UINT uiParam,_Inout_ PVOID pvParam,_In_ UINT fWinIni)
BOOL WINAPI user32.SystemParametersInfoA(_In_ UINT uiAction,_In_ UINT uiParam,_Inout_ PVOID pvParam,_In_ UINT fWinIni)
BOOL WINAPI wtsapi32.WTSQueryListenerConfig(_In_ HANDLE hServer,_In_ PVOID pReserved,_In_ DWORD Reserved,_In_ LPTSTR pListenerName,_Out_ PWTSLISTENERCONFIG pBuffer)
BOOL WINAPI wtsapi32.WTSQueryListenerConfigW(_In_ HANDLE hServer,_In_ PVOID pReserved,_In_ DWORD Reserved,_In_ LPTSTR pListenerName,_Out_ PWTSLISTENERCONFIG pBuffer)
BOOL WINAPI wtsapi32.WTSQueryListenerConfigA(_In_ HANDLE hServer,_In_ PVOID pReserved,_In_ DWORD Reserved,_In_ LPTSTR pListenerName,_Out_ PWTSLISTENERCONFIG pBuffer)
BOOL WINAPI comdlg32.ChooseColor(_Inout_ LPCHOOSECOLOR lpcc)
BOOL WINAPI comdlg32.ChooseColorW(_Inout_ LPCHOOSECOLOR lpcc)
BOOL WINAPI comdlg32.ChooseColorA(_Inout_ LPCHOOSECOLOR lpcc)
UINT WINAPI kernel32.GetSystemWow64Directory(_Out_ LPTSTR lpBuffer,_In_ UINT uSize)
UINT WINAPI kernel32.GetSystemWow64DirectoryW(_Out_ LPTSTR lpBuffer,_In_ UINT uSize)
UINT WINAPI kernel32.GetSystemWow64DirectoryA(_Out_ LPTSTR lpBuffer,_In_ UINT uSize)
HANDLE None wtsapi32.WTSOpenServer(_In_ LPTSTR pServerName)
HANDLE None wtsapi32.WTSOpenServerW(_In_ LPTSTR pServerName)
HANDLE None wtsapi32.WTSOpenServerA(_In_ LPTSTR pServerName)
HANDLE None wtsapi32.WTSVirtualChannelOpen(_In_ HANDLE hServer,_In_ DWORD SessionId,_In_ LPSTR pVirtualName)
BOOL None wtsapi32.WTSQuerySessionInformation(_In_ HANDLE hServer,_In_ DWORD SessionId,_In_ WTS_INFO_CLASS WTSInfoClass,_Out_ LPTSTR *ppBuffer,_Out_ DWORD *pBytesReturned)
BOOL None wtsapi32.WTSQuerySessionInformationW(_In_ HANDLE hServer,_In_ DWORD SessionId,_In_ WTS_INFO_CLASS WTSInfoClass,_Out_ LPTSTR *ppBuffer,_Out_ DWORD *pBytesReturned)
BOOL None wtsapi32.WTSQuerySessionInformationA(_In_ HANDLE hServer,_In_ DWORD SessionId,_In_ WTS_INFO_CLASS WTSInfoClass,_Out_ LPTSTR *ppBuffer,_Out_ DWORD *pBytesReturned)
DWORD None None.MAKELONG(WORD wLow None,WORD wHigh None)
uint32 None rdms.SchedulePatch([in] DATETIME StartTime,[in] DATETIME ForceLogOffTime,[in] string JobInputXml)
DWORD None None.MonthCal_GetMaxTodayWidth(HWND hwndMC None)
BOOL None kernel32.QueryUnbiasedInterruptTime(_Out_ PULONGLONG lpUnbiasedInterruptTime)
NTSTATUS WINAPI ntdll.RtlLocalTimeToSystemTime(_In_ PLARGE_INTEGER LocalTime,_Out_ PLARGE_INTEGER SystemTime)
BOOL WINAPI kernel32.QueryPerformanceCounter(_Out_ LARGE_INTEGER *lpPerformanceCount)
DWORD WINAPI kernel32.GetFirmwareEnvironmentVariable(_In_ LPCTSTR lpName,_In_ LPCTSTR lpGuid,_Out_ PVOID pBuffer,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetFirmwareEnvironmentVariableW(_In_ LPCTSTR lpName,_In_ LPCTSTR lpGuid,_Out_ PVOID pBuffer,_In_ DWORD nSize)
DWORD WINAPI kernel32.GetFirmwareEnvironmentVariableA(_In_ LPCTSTR lpName,_In_ LPCTSTR lpGuid,_Out_ PVOID pBuffer,_In_ DWORD nSize)
UINT WINAPI kernel32.GetSystemDirectory(_Out_ LPTSTR lpBuffer,_In_ UINT uSize)
UINT WINAPI kernel32.GetSystemDirectoryW(_Out_ LPTSTR lpBuffer,_In_ UINT uSize)
UINT WINAPI kernel32.GetSystemDirectoryA(_Out_ LPTSTR lpBuffer,_In_ UINT uSize)
PDH_STATUS None pdh.PdhAddCounter(_In_ PDH_HQUERY hQuery,_In_ LPCTSTR szFullCounterPath,_In_ DWORD_PTR dwUserData,_Out_ PDH_HCOUNTER *phCounter)
PDH_STATUS None pdh.PdhAddCounterW(_In_ PDH_HQUERY hQuery,_In_ LPCTSTR szFullCounterPath,_In_ DWORD_PTR dwUserData,_Out_ PDH_HCOUNTER *phCounter)
PDH_STATUS None pdh.PdhAddCounterA(_In_ PDH_HQUERY hQuery,_In_ LPCTSTR szFullCounterPath,_In_ DWORD_PTR dwUserData,_Out_ PDH_HCOUNTER *phCounter)
VOID None kernel32.QueryInterruptTimePrecise(_Out_ PULONGLONG lpInterruptTimePrecise)
BOOL WINAPI kernel32.DosDateTimeToFileTime(_In_ WORD wFatDate,_In_ WORD wFatTime,_Out_ LPFILETIME lpFileTime)
BOOL WINAPI wtsapi32.WTSConnectSession(_In_ ULONG LogonId,_In_ ULONG TargetLogonId,_In_ PTSTR pPassword,_In_ BOOL bWait)
BOOL WINAPI wtsapi32.WTSConnectSessionW(_In_ ULONG LogonId,_In_ ULONG TargetLogonId,_In_ PTSTR pPassword,_In_ BOOL bWait)
BOOL WINAPI wtsapi32.WTSConnectSessionA(_In_ ULONG LogonId,_In_ ULONG TargetLogonId,_In_ PTSTR pPassword,_In_ BOOL bWait)
BOOL WINAPI kernel32.SetSystemTimeAdjustment(_In_ DWORD dwTimeAdjustment,_In_ BOOL bTimeAdjustmentDisabled)
BOOL WINAPI kernel32.SetComputerName(_In_ LPCTSTR lpComputerName)
BOOL WINAPI kernel32.SetComputerNameW(_In_ LPCTSTR lpComputerName)
BOOL WINAPI kernel32.SetComputerNameA(_In_ LPCTSTR lpComputerName)
HWND WINAPI user32.SetCapture(_In_ HWND hWnd)
UINT_PTR CALLBACK None.PageSetupHook(_In_ HWND hdlg,_In_ UINT uiMsg,_In_ WPARAM wParam,_In_ LPARAM lParam)
BOOL None kernel32.EnumUILanguages(_In_ UILANGUAGE_ENUMPROC lpUILanguageEnumProc,_In_ DWORD dwFlags,_In_ LONG_PTR lParam)
BOOL None kernel32.EnumUILanguagesW(_In_ UILANGUAGE_ENUMPROC lpUILanguageEnumProc,_In_ DWORD dwFlags,_In_ LONG_PTR lParam)
BOOL None kernel32.EnumUILanguagesA(_In_ UILANGUAGE_ENUMPROC lpUILanguageEnumProc,_In_ DWORD dwFlags,_In_ LONG_PTR lParam)
BOOL None kernel32.GetSystemPreferredUILanguages(_In_ DWORD dwFlags,_Out_ PULONG pulNumLanguages,_Out_opt_ PZZWSTR pwszLanguagesBuffer,_Inout_ PULONG pcchLanguagesBuffer)
BOOL WINAPI wtsapi32.WTSGetListenerSecurity(_In_ HANDLE hServer,_In_ PVOID pReserved,_In_ DWORD Reserved,_In_ LPTSTR pListenerName,_In_ SECURITY_INFORMATION SecurityInformation,_Out_opt_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_ DWORD nLength,_Out_ LPDWORD lpnLengthNeeded)
BOOL WINAPI wtsapi32.WTSGetListenerSecurityW(_In_ HANDLE hServer,_In_ PVOID pReserved,_In_ DWORD Reserved,_In_ LPTSTR pListenerName,_In_ SECURITY_INFORMATION SecurityInformation,_Out_opt_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_ DWORD nLength,_Out_ LPDWORD lpnLengthNeeded)
BOOL WINAPI wtsapi32.WTSGetListenerSecurityA(_In_ HANDLE hServer,_In_ PVOID pReserved,_In_ DWORD Reserved,_In_ LPTSTR pListenerName,_In_ SECURITY_INFORMATION SecurityInformation,_Out_opt_ PSECURITY_DESCRIPTOR pSecurityDescriptor,_In_ DWORD nLength,_Out_ LPDWORD lpnLengthNeeded)
BOOL None wtsapi32.WTSEnumerateServers(_In_ LPTSTR pDomainName,_In_ DWORD Reserved,_In_ DWORD Version,PWTS_SERVER_INFO *ppServerInfo None,DWORD *pCount None)
BOOL None wtsapi32.WTSEnumerateServersW(_In_ LPTSTR pDomainName,_In_ DWORD Reserved,_In_ DWORD Version,PWTS_SERVER_INFO *ppServerInfo None,DWORD *pCount None)
BOOL None wtsapi32.WTSEnumerateServersA(_In_ LPTSTR pDomainName,_In_ DWORD Reserved,_In_ DWORD Version,PWTS_SERVER_INFO *ppServerInfo None,DWORD *pCount None)
Sub None msftedit.AttributeCopy(r1 As ITextRange,r2 As ITextRange)
BOOL WINAPI user32.SetDoubleClickTime(_In_ UINT uInterval)
UINT_PTR CALLBACK None.PrintHookProc(_In_ HWND hdlg,_In_ UINT uiMsg,_In_ WPARAM wParam,_In_ LPARAM lParam)
BOOL WINAPI kernel32.IsNativeVhdBoot(_Out_ PBOOL *NativeVhdBoot)
BOOL WINAPI kernel32.GetComputerNameEx(_In_ COMPUTER_NAME_FORMAT NameType,_Out_ LPTSTR lpBuffer,_Inout_ LPDWORD lpnSize)
BOOL WINAPI kernel32.GetComputerNameExW(_In_ COMPUTER_NAME_FORMAT NameType,_Out_ LPTSTR lpBuffer,_Inout_ LPDWORD lpnSize)
BOOL WINAPI kernel32.GetComputerNameExA(_In_ COMPUTER_NAME_FORMAT NameType,_Out_ LPTSTR lpBuffer,_Inout_ LPDWORD lpnSize)
UINT WINAPI kernel32.EnumSystemFirmwareTables(_In_ DWORD FirmwareTableProviderSignature,_Out_ PVOID pFirmwareTableBuffer,_In_ DWORD BufferSize)
BOOLEAN WINAPI secur32.GetUserNameEx(_In_ EXTENDED_NAME_FORMAT NameFormat,_Out_ LPTSTR lpNameBuffer,_Inout_ PULONG lpnSize)
BOOLEAN WINAPI secur32.GetUserNameExW(_In_ EXTENDED_NAME_FORMAT NameFormat,_Out_ LPTSTR lpNameBuffer,_Inout_ PULONG lpnSize)
BOOLEAN WINAPI secur32.GetUserNameExA(_In_ EXTENDED_NAME_FORMAT NameFormat,_Out_ LPTSTR lpNameBuffer,_Inout_ PULONG lpnSize)
ULONG None advapi32.PerfStopProvider(_In_ HANDLE hProvider)
VOID None kernel32.QueryInterruptTimePrecise(_Out_ PULONGLONG lpInterruptTimePrecise)
LARGE_INTEGER None hal.KeQueryPerformanceCounter(_Out_opt_ PLARGE_INTEGER PerformanceFrequency)
BOOL WINAPI kernel32.GetFirmwareType(_Inout_ PFIRMWARE_TYPE FirmwareType)
BOOL WINAPI comctl32._TrackMouseEvent(_Inout_ LPTRACKMOUSEEVENT lpEventTrack)
HRESULT None msftedit.GetImmContext([out None None,retval] __int64 *pContext)
MMRESULT None winmm.timeBeginPeriod(UINT uPeriod None)
DWORD WINAPI kernel32.ExpandEnvironmentStrings(_In_ LPCTSTR lpSrc,_Out_opt_ LPTSTR lpDst,_In_ DWORD nSize)
DWORD WINAPI kernel32.ExpandEnvironmentStringsW(_In_ LPCTSTR lpSrc,_Out_opt_ LPTSTR lpDst,_In_ DWORD nSize)
DWORD WINAPI kernel32.ExpandEnvironmentStringsA(_In_ LPCTSTR lpSrc,_Out_opt_ LPTSTR lpDst,_In_ DWORD nSize)
BOOL None kernel32.GetFileMUIPath(_In_ DWORD dwFlags,_In_ PCWSTR pcwszFilePath,_Inout_opt_ PWSTR pwszLanguage,_Inout_ PULONG pcchLanguage,_Out_opt_ PWSTR pwszFileMUIPath,_Inout_ PULONG pcchFileMUIPath,_Inout_ PULONGLONG pululEnumerator)
ULONG None advapi32.PerfSetULongCounterValue(_In_ HANDLE hProvider,_In_ PPERF_COUNTERSET_INSTANCE pInstance,_In_ ULONG CounterId,_In_ ULONG lValue)
DWORD WINAPI kernel32.ExpandEnvironmentStrings(_In_ LPCTSTR lpSrc,_Out_opt_ LPTSTR lpDst,_In_ DWORD nSize)
DWORD WINAPI kernel32.ExpandEnvironmentStringsW(_In_ LPCTSTR lpSrc,_Out_opt_ LPTSTR lpDst,_In_ DWORD nSize)
DWORD WINAPI kernel32.ExpandEnvironmentStringsA(_In_ LPCTSTR lpSrc,_Out_opt_ LPTSTR lpDst,_In_ DWORD nSize)
PDH_STATUS None pdh.PdhGetLogFileSize(_In_ PDH_HLOG hLog,_Out_ LONGLONG *llSize)
uint32 None rdms.Join([in] string NodeFQDN,[in] string NodeSID)
PDH_STATUS None pdh.PdhGetRawCounterArray(_In_ PDH_HCOUNTER hCounter,_Inout_ LPDWORD lpdwBufferSize,_Out_ LPDWORD lpdwItemCount,_Out_ PPDH_RAW_COUNTER_ITEM ItemBuffer)
PDH_STATUS None pdh.PdhGetRawCounterArrayW(_In_ PDH_HCOUNTER hCounter,_Inout_ LPDWORD lpdwBufferSize,_Out_ LPDWORD lpdwItemCount,_Out_ PPDH_RAW_COUNTER_ITEM ItemBuffer)
PDH_STATUS None pdh.PdhGetRawCounterArrayA(_In_ PDH_HCOUNTER hCounter,_Inout_ LPDWORD lpdwBufferSize,_Out_ LPDWORD lpdwItemCount,_Out_ PPDH_RAW_COUNTER_ITEM ItemBuffer)
BOOL WINAPI comctl32._TrackMouseEvent(_Inout_ LPTRACKMOUSEEVENT lpEventTrack)
PDH_STATUS None pdh.PdhCalculateCounterFromRawValue(_In_ PDH_HCOUNTER hCounter,_In_ DWORD dwFormat,_In_ PPDH_RAW_COUNTER rawValue1,_In_ PPDH_RAW_COUNTER rawValue2,_Out_ PPDH_FMT_COUNTERVALUE fmtValue)
DWORD None user32.GetListBoxInfo(_In_ HWND hwnd)
ULONG WINAPI advapi32.PerfAddCounters(_In_ HANDLE hQuery,_Inout_ PPERF_COUNTER_IDENTIFIER pCounters,DWORD cbCounters None)
ULONG None advapi32.PerfDeleteInstance(_In_ HANDLE hProvider,_In_ PPERF_COUNTERSET_INSTANCE InstanceBlock)
PPERF_COUNTERSET_INSTANCE None advapi32.PerfQueryInstance(_In_ HANDLE hProvider,_In_ LPCGUID CounterSetGuid,_In_ LPCWSTR szInstance,_In_ ULONG dwInstance)
NTSTATUS WINAPI ntdll.RtlLocalTimeToSystemTime(_In_ PLARGE_INTEGER LocalTime,_Out_ PLARGE_INTEGER SystemTime)
BYTE None None.HIBYTE(WORD wValue None)
ULONG WINAPI advapi32.PerfQueryCounterInfo(_In_ HANDLE hQuery,_Out_opt_ PPERF_COUNTER_IDENTIFIER pCounters,DWORD cbCounters None,_Out_ LPDWORD pcbCountersActual)
BOOL CALLBACK None.EnumUILanguagesProc(_In_ LPTSTR lpUILanguageString,_In_ LONG_PTR lParam)
BOOLEAN WINAPI secur32.GetComputerObjectName(_In_ EXTENDED_NAME_FORMAT NameFormat,_Out_ LPTSTR lpNameBuffer,_Inout_ PULONG lpnSize)
BOOLEAN WINAPI secur32.GetComputerObjectNameW(_In_ EXTENDED_NAME_FORMAT NameFormat,_Out_ LPTSTR lpNameBuffer,_Inout_ PULONG lpnSize)
BOOLEAN WINAPI secur32.GetComputerObjectNameA(_In_ EXTENDED_NAME_FORMAT NameFormat,_Out_ LPTSTR lpNameBuffer,_Inout_ PULONG lpnSize)
HRESULT None msftedit.GetStoryRanges2([out None None,retval] ITextStoryRanges2 **ppStories)
HRESULT None msftedit.GetDuplicate(ITextPara **ppPara None)
BOOL None kernel32.SetThreadPreferredUILanguages(_In_ DWORD dwFlags,_In_opt_ PCZZWSTR pwszLanguagesBuffer,_Out_opt_ PULONG pulNumLanguages)
uint32 None rdms.ProvisioningEnumerateJobs([in] uint32 JobType,[in] string CollectionAlias,[out] string JobGuids[])
ULONG None advapi32.PerfSetCounterSetInfo(_In_ HANDLE hProvider,_In_ PPERF_COUNTERSET_INFO pTemplate,_In_ ULONG dwTemplateSize)
UINT WINAPI kernel32.GetSystemWindowsDirectory(_Out_ LPTSTR lpBuffer,_In_ UINT uSize)
UINT WINAPI kernel32.GetSystemWindowsDirectoryW(_Out_ LPTSTR lpBuffer,_In_ UINT uSize)
UINT WINAPI kernel32.GetSystemWindowsDirectoryA(_Out_ LPTSTR lpBuffer,_In_ UINT uSize)
uint32 None rdms.ProvisioningJobGetReport([in] string JobGuid,[out] string JobReportXml)
BOOL None kernel32.GetProcessPreferredUILanguages(_In_ DWORD dwFlags,_Out_ PULONG pulNumLanguages,_Out_opt_ PZZWSTR pwszLanguagesBuffer,_Inout_ PULONG pcchLanguagesBuffer)
PDH_STATUS None pdh.PdhGetDllVersion(_Out_ LPDWORD lpdwVersion)
DWORD None loadperf.UnloadPerfCounterTextStrings(_In_ LPCTSTR commandLine,_In_ BOOL bQuietModeArg)
DWORD None loadperf.UnloadPerfCounterTextStringsW(_In_ LPCTSTR commandLine,_In_ BOOL bQuietModeArg)
DWORD None loadperf.UnloadPerfCounterTextStringsA(_In_ LPCTSTR commandLine,_In_ BOOL bQuietModeArg)
HRESULT None msftedit.GetWindow([out None None,retval] __int64 *pHwnd)
UINT_PTR CALLBACK None.OFNHookProcOldStyle(_In_ HWND hdlg,_In_ UINT uiMsg,_In_ WPARAM wParam,_In_ LPARAM lParam)
uint32 None rdms.GetJoinedNodeCount([in] uint32 roleType,[out] uint32 Count)
BOOL WINAPI user32.DragDetect(_In_ HWND hwnd,_In_ POINT pt)
PDH_STATUS None pdh.PdhCloseQuery(_In_ PDH_HQUERY hQuery)
uint32 None rdms.ProvisioningJobExecute([in] string JobInputXml,[out] string JobGuid)
BOOL None kernel32.GetThreadPreferredUILanguages(_In_ DWORD dwFlags,_Out_ PULONG pulNumLanguages,_Out_opt_ PZZWSTR pwszLanguagesBuffer,_Inout_ PULONG pcchLanguagesBuffer)
BOOL None comctl32.MakeDragList(HWND hLB None)
BOOL None None.ListBox_Enable(HWND hwndCtl None,BOOL fEnable None)
BOOL None kernel32.EnumUILanguages(_In_ UILANGUAGE_ENUMPROC lpUILanguageEnumProc,_In_ DWORD dwFlags,_In_ LONG_PTR lParam)
BOOL None kernel32.EnumUILanguagesW(_In_ UILANGUAGE_ENUMPROC lpUILanguageEnumProc,_In_ DWORD dwFlags,_In_ LONG_PTR lParam)
BOOL None kernel32.EnumUILanguagesA(_In_ UILANGUAGE_ENUMPROC lpUILanguageEnumProc,_In_ DWORD dwFlags,_In_ LONG_PTR lParam)
BOOL WINAPI kernel32.IsNativeVhdBoot(_Out_ PBOOL *NativeVhdBoot)
DWORD None None.MonthCal_GetMaxTodayWidth(HWND hwndMC None)
ULONG None advapi32.PerfStartProviderEx(_In_ LPGUID ProviderGuid,_In_opt_ PPERF_PROVIDER_CONTEXT ProviderContext,_Out_ HANDLE *phProvider)
PDH_STATUS None pdh.PdhExpandCounterPath(_In_ LPCTSTR szWildCardPath,_Out_ LPTSTR mszExpandedPathList,_Inout_ LPDWORD pcchPathListLength)
PDH_STATUS None pdh.PdhExpandCounterPathW(_In_ LPCTSTR szWildCardPath,_Out_ LPTSTR mszExpandedPathList,_Inout_ LPDWORD pcchPathListLength)
PDH_STATUS None pdh.PdhExpandCounterPathA(_In_ LPCTSTR szWildCardPath,_Out_ LPTSTR mszExpandedPathList,_Inout_ LPDWORD pcchPathListLength)
PDH_STATUS None pdh.PdhOpenLog(_In_ LPCTSTR szLogFileName,_In_ DWORD dwAccessFlags,_In_ LPDWORD lpdwLogType,_In_ PDH_HQUERY hQuery,_In_ DWORD dwMaxSize,_In_ LPCTSTR szUserCaption,_Out_ PDH_HLOG *phLog)
PDH_STATUS None pdh.PdhOpenLogW(_In_ LPCTSTR szLogFileName,_In_ DWORD dwAccessFlags,_In_ LPDWORD lpdwLogType,_In_ PDH_HQUERY hQuery,_In_ DWORD dwMaxSize,_In_ LPCTSTR szUserCaption,_Out_ PDH_HLOG *phLog)
PDH_STATUS None pdh.PdhOpenLogA(_In_ LPCTSTR szLogFileName,_In_ DWORD dwAccessFlags,_In_ LPDWORD lpdwLogType,_In_ PDH_HQUERY hQuery,_In_ DWORD dwMaxSize,_In_ LPCTSTR szUserCaption,_Out_ PDH_HLOG *phLog)
WORD None None.GET_MOUSEORKEY_LPARAM(LPARAM lParam None)
ULONG WINAPI advapi32.PerfEnumerateCounterSet(_In_opt_ LPCWSTR szMachine,_Out_opt_ LPGUID pCounterSetIds,DWORD cCounterSetIds None,_Out_ LPDWORD pcCounterSetIdsActual)
HWND WINAPI user32.SetCapture(_In_ HWND hWnd)
BOOL WINBASEAPI kernel32.SetFirmwareEnvironmentVariableEx(_In_ LPCTSTR lpName,_In_ LPCTSTR lpGuid,_In_ PVOID pValue,_In_ DWORD nSize,_In_ DWORD dwAttributes)
BOOL WINBASEAPI kernel32.SetFirmwareEnvironmentVariableExW(_In_ LPCTSTR lpName,_In_ LPCTSTR lpGuid,_In_ PVOID pValue,_In_ DWORD nSize,_In_ DWORD dwAttributes)
BOOL WINBASEAPI kernel32.SetFirmwareEnvironmentVariableExA(_In_ LPCTSTR lpName,_In_ LPCTSTR lpGuid,_In_ PVOID pValue,_In_ DWORD nSize,_In_ DWORD dwAttributes)
ULONG WINAPI None.ControlCallback(_In_ ULONG RequestCode,_In_ PVOID Buffer,_In_ ULONG BufferSize)
uint32 None rdms.AddVirtualDesktop([in] string VMName)
ULONG None advapi32.PerfSetCounterRefValue(_In_ HANDLE hProvider,_In_ PPERF_COUNTERSET_INSTANCE pInstance,_In_ ULONG CounterId,_In_ PVOID lpAddr)
ULONG WINAPI None.CounterInitialize(__in_opt PERFLIBREQUEST NotificationCallback,__in_opt PERF_MEM_ALLOC MemoryAllocationFunction,__in_opt PERF_MEM_FREE MemoryFreeFunction,__inout_opt PVOID MemoryFunctionContext)
UINT WINAPI user32.RegisterWindowMessage(_In_ LPCTSTR lpString)
UINT WINAPI user32.RegisterWindowMessageW(_In_ LPCTSTR lpString)
UINT WINAPI user32.RegisterWindowMessageA(_In_ LPCTSTR lpString)
BOOL WINAPI kernel32.GetProductInfo(_In_ DWORD dwOSMajorVersion,_In_ DWORD dwOSMinorVersion,_In_ DWORD dwSpMajorVersion,_In_ DWORD dwSpMinorVersion,_Out_ PDWORD pdwReturnedProductType)
BOOL WINAPI kernel32.DnsHostnameToComputerName(_In_ LPCTSTR Hostname,_Out_ LPTSTR ComputerName,_Inout_ LPDWORD nSize)
BOOL WINAPI kernel32.DnsHostnameToComputerNameW(_In_ LPCTSTR Hostname,_Out_ LPTSTR ComputerName,_Inout_ LPDWORD nSize)
BOOL WINAPI kernel32.DnsHostnameToComputerNameA(_In_ LPCTSTR Hostname,_Out_ LPTSTR ComputerName,_Inout_ LPDWORD nSize)
HINSTANCE None None.LoadMUILibrary(_In_ LPCTSTR pszFullModuleName,_In_ DWORD dwLangConvention,_In_ LANGID LangID)
HINSTANCE None None.LoadMUILibraryW(_In_ LPCTSTR pszFullModuleName,_In_ DWORD dwLangConvention,_In_ LANGID LangID)
HINSTANCE None None.LoadMUILibraryA(_In_ LPCTSTR pszFullModuleName,_In_ DWORD dwLangConvention,_In_ LANGID LangID)
PDH_STATUS None pdh.PdhCollectQueryData(_Inout_ PDH_HQUERY hQuery)
BOOLEAN WINAPI secur32.TranslateName(_In_ LPCTSTR lpAccountName,_In_ EXTENDED_NAME_FORMAT AccountNameFormat,_In_ EXTENDED_NAME_FORMAT DesiredNameFormat,_Out_ LPTSTR lpTranslatedName,_Inout_ PULONG nSize)
BOOLEAN WINAPI secur32.TranslateNameW(_In_ LPCTSTR lpAccountName,_In_ EXTENDED_NAME_FORMAT AccountNameFormat,_In_ EXTENDED_NAME_FORMAT DesiredNameFormat,_Out_ LPTSTR lpTranslatedName,_Inout_ PULONG nSize)
BOOLEAN WINAPI secur32.TranslateNameA(_In_ LPCTSTR lpAccountName,_In_ EXTENDED_NAME_FORMAT AccountNameFormat,_In_ EXTENDED_NAME_FORMAT DesiredNameFormat,_Out_ LPTSTR lpTranslatedName,_Inout_ PULONG nSize)
HRESULT None msftedit.GetDocumentFont([out None None,retval] ITextFont2 **ppFont)
PDH_STATUS None pdh.PdhRemoveCounter(_In_ PDH_HCOUNTER hCounter)
LPVOID CALLBACK None.AllocateMemory(_In_ SIZE_T AllocSize,_In_ LPVOID pContext)
LANGID None kernel32.SetThreadUILanguage(_In_ LANGID LangId)
UINT WINAPI kernel32.GetSystemFirmwareTable(_In_ DWORD FirmwareTableProviderSignature,_In_ DWORD FirmwareTableID,_Out_ PVOID pFirmwareTableBuffer,_In_ DWORD BufferSize)
HRESULT WINAPI None.IsWow64GuestMachineSupported(_In_ USHORT WowGuestMachine,_Out_ BOOLEAN *MachineIsSupported)
PDH_STATUS None pdh.PdhBrowseCounters(_In_ PPDH_BROWSE_DLG_CONFIG pBrowseDlgData)
PDH_STATUS None pdh.PdhBrowseCountersW(_In_ PPDH_BROWSE_DLG_CONFIG pBrowseDlgData)
PDH_STATUS None pdh.PdhBrowseCountersA(_In_ PPDH_BROWSE_DLG_CONFIG pBrowseDlgData)
PDH_STATUS None pdh.PdhEnumLogSetNames(_In_ LPCTSTR szDataSource,_Out_ LPTSTR mszLogSetNameList,_Inout_ LPDWORD pcchBufferLength)
PDH_STATUS None pdh.PdhEnumLogSetNamesW(_In_ LPCTSTR szDataSource,_Out_ LPTSTR mszLogSetNameList,_Inout_ LPDWORD pcchBufferLength)
PDH_STATUS None pdh.PdhEnumLogSetNamesA(_In_ LPCTSTR szDataSource,_Out_ LPTSTR mszLogSetNameList,_Inout_ LPDWORD pcchBufferLength)
PDH_STATUS None pdh.PdhLookupPerfIndexByName(_In_ LPCTSTR szMachineName,_In_ LPCTSTR szNameBuffer,_Out_ LPDWORD pdwIndex)
PDH_STATUS None pdh.PdhLookupPerfIndexByNameW(_In_ LPCTSTR szMachineName,_In_ LPCTSTR szNameBuffer,_Out_ LPDWORD pdwIndex)
PDH_STATUS None pdh.PdhLookupPerfIndexByNameA(_In_ LPCTSTR szMachineName,_In_ LPCTSTR szNameBuffer,_Out_ LPDWORD pdwIndex)
PDH_STATUS None pdh.PdhGetCounterInfo(_In_ PDH_HCOUNTER hCounter,_In_ BOOLEAN bRetrieveExplainText,_Inout_ LPDWORD pdwBufferSize,_Out_ PPDH_COUNTER_INFO lpBuffer)
PDH_STATUS None pdh.PdhGetCounterInfoW(_In_ PDH_HCOUNTER hCounter,_In_ BOOLEAN bRetrieveExplainText,_Inout_ LPDWORD pdwBufferSize,_Out_ PPDH_COUNTER_INFO lpBuffer)
PDH_STATUS None pdh.PdhGetCounterInfoA(_In_ PDH_HCOUNTER hCounter,_In_ BOOLEAN bRetrieveExplainText,_Inout_ LPDWORD pdwBufferSize,_Out_ PPDH_COUNTER_INFO lpBuffer)
ULONG WINAPI advapi32.PerfOpenQueryHandle(_In_opt_ LPCWSTR szMachine,_Out_ HANDLE hQuery)
BOOL WINAPI kernel32.VerifyVersionInfo(_In_ LPOSVERSIONINFOEX lpVersionInfo,_In_ DWORD dwTypeMask,_In_ DWORDLONG dwlConditionMask)
BOOL WINAPI kernel32.VerifyVersionInfoW(_In_ LPOSVERSIONINFOEX lpVersionInfo,_In_ DWORD dwTypeMask,_In_ DWORDLONG dwlConditionMask)
BOOL WINAPI kernel32.VerifyVersionInfoA(_In_ LPOSVERSIONINFOEX lpVersionInfo,_In_ DWORD dwTypeMask,_In_ DWORDLONG dwlConditionMask)
HRESULT None msftedit.GetDuplicate(ITextFont **ppFont None)
ULONG WINAPI advapi32.PerfQueryCounterSetRegistrationInfo(_In_opt_ LPCWSTR szMachine,_In_ LPCGUID pCounterSetId,PerfRegInfoType requestCode None,DWORD requestLangId None,_Out_opt_ LPBYTE pbRegInfo,DWORD cbRegInfo None,_Out_ LPDWORD pcbRegInfoActual)
HRESULT None msftedit.GetText(BSTR *pbstr None)
ULONG None advapi32.PerfSetULongLongCounterValue(_In_ HANDLE hProvider,_In_ PPERF_COUNTERSET_INSTANCE pInstance,_In_ ULONG CounterId,_In_ ULONGLONG llValue)
DWORD None loadperf.LoadPerfCounterTextStrings(_In_ LPCTSTR commandLine,_In_ BOOL bQuietModeArg)
DWORD None loadperf.LoadPerfCounterTextStringsW(_In_ LPCTSTR commandLine,_In_ BOOL bQuietModeArg)
DWORD None loadperf.LoadPerfCounterTextStringsA(_In_ LPCTSTR commandLine,_In_ BOOL bQuietModeArg)
HRESULT None msftedit.GetDuplicate2([out None None,retval] ITextRange2 **ppRange)
PDH_STATUS None pdh.PdhOpenQuery(_In_ LPCTSTR szDataSource,_In_ DWORD_PTR dwUserData,_Out_ PDH_HQUERY *phQuery)
PDH_STATUS None pdh.PdhOpenQueryW(_In_ LPCTSTR szDataSource,_In_ DWORD_PTR dwUserData,_Out_ PDH_HQUERY *phQuery)
PDH_STATUS None pdh.PdhOpenQueryA(_In_ LPCTSTR szDataSource,_In_ DWORD_PTR dwUserData,_Out_ PDH_HQUERY *phQuery)
PDH_STATUS None pdh.PdhGetFormattedCounterValue(_In_ PDH_HCOUNTER hCounter,_In_ DWORD dwFormat,_Out_ LPDWORD lpdwType,_Out_ PPDH_FMT_COUNTERVALUE pValue)
PDH_STATUS None pdh.PdhUpdateLogFileCatalog(_In_ PDH_HLOG hLog)
ULONGLONG WINAPI kernel32.VerSetConditionMask(_In_ ULONGLONG dwlConditionMask,_In_ DWORD dwTypeBitMask,_In_ BYTE dwConditionMask)
WORD None None.GET_DEVICE_LPARAM(LPARAM lParam None)
BOOL None kernel32.GetUILanguageInfo(_In_ DWORD dwFlags,_In_ PCZZWSTR pwmszLanguage,_Out_opt_ PZZWSTR pwszFallbackLanguages,_Inout_opt_ PDWORD pcchFallbackLanguages,_Out_ PDWORD pdwAttributes)
PDH_STATUS None pdh.PdhOpenQueryH(_In_ PDH_HLOG hDataSource,_In_ DWORD_PTR dwUserData,_Out_ PDH_HQUERY *phQuery)
PDH_STATUS None pdh.PdhMakeCounterPath(_In_ PDH_COUNTER_PATH_ELEMENTS *pCounterPathElements,_Out_ LPTSTR szFullPathBuffer,_Inout_ LPDWORD pcchBufferSize,_In_ DWORD dwFlags)
PDH_STATUS None pdh.PdhMakeCounterPathW(_In_ PDH_COUNTER_PATH_ELEMENTS *pCounterPathElements,_Out_ LPTSTR szFullPathBuffer,_Inout_ LPDWORD pcchBufferSize,_In_ DWORD dwFlags)
PDH_STATUS None pdh.PdhMakeCounterPathA(_In_ PDH_COUNTER_PATH_ELEMENTS *pCounterPathElements,_Out_ LPTSTR szFullPathBuffer,_Inout_ LPDWORD pcchBufferSize,_In_ DWORD dwFlags)
PDH_STATUS None pdh.PdhComputeCounterStatistics(_In_ PDH_HCOUNTER hCounter,_In_ DWORD dwFormat,_In_ DWORD dwFirstEntry,_In_ DWORD dwNumEntries,_In_ PPDH_RAW_COUNTER lpRawValueArray,_Out_ PPDH_STATISTICS data)
PDH_STATUS None pdh.PdhLookupPerfNameByIndex(_In_ LPCTSTR szMachineName,_In_ DWORD dwNameIndex,_Out_ LPTSTR szNameBuffer,_Inout_ LPDWORD pcchNameBufferSize)
PDH_STATUS None pdh.PdhLookupPerfNameByIndexW(_In_ LPCTSTR szMachineName,_In_ DWORD dwNameIndex,_Out_ LPTSTR szNameBuffer,_Inout_ LPDWORD pcchNameBufferSize)
PDH_STATUS None pdh.PdhLookupPerfNameByIndexA(_In_ LPCTSTR szMachineName,_In_ DWORD dwNameIndex,_Out_ LPTSTR szNameBuffer,_Inout_ LPDWORD pcchNameBufferSize)
BOOL WINAPI kernel32.IsProcessorFeaturePresent(_In_ DWORD ProcessorFeature)
ULONG WINAPI advapi32.PerfQueryCounterData(_In_ HANDLE hQuery,_Out_opt_ PPERF_DATA_HEADER pCounterBlock,DWORD cbCounterBlock None,_Out_ LPDWORD pcbCounterBlockActual)
HRESULT None msftedit.GetRow([out None None,retval] ITextRow **ppRow)
ULONG None advapi32.PerfDecrementULongLongCounterValue(_In_ HANDLE hProvider,_In_ PPERF_COUNTERSET_INSTANCE pInstance,_In_ ULONG CounterId,_In_ ULONGLONG llValue)
ULONG WINAPI None.CounterInitialize(__in_opt PERFLIBREQUEST NotificationCallback,__in_opt PERF_MEM_ALLOC MemoryAllocationFunction,__in_opt PERF_MEM_FREE MemoryFreeFunction,__inout_opt PVOID MemoryFunctionContext)
NTSTATUS WINAPI ntdll.NtQuerySystemInformation(_In_ SYSTEM_INFORMATION_CLASS SystemInformationClass,_Inout_ PVOID SystemInformation,_In_ ULONG SystemInformationLength,_Out_opt_ PULONG ReturnLength)
PDH_STATUS None pdh.PdhValidatePath(_In_ LPCTSTR szFullCounterPath)
PDH_STATUS None pdh.PdhValidatePathW(_In_ LPCTSTR szFullCounterPath)
PDH_STATUS None pdh.PdhValidatePathA(_In_ LPCTSTR szFullCounterPath)
HRESULT None msftedit.GetCallManager([out None None,retval] IUnknown **ppVoid)
PDH_STATUS None pdh.PdhGetDataSourceTimeRange(_In_ LPCTSTR szDataSource,_Out_ LPDWORD pdwNumEntries,_Out_ PPDH_TIME_INFO pInfo,_In_ LPDWORD pdwBufferSize)
PDH_STATUS None pdh.PdhGetDataSourceTimeRangeW(_In_ LPCTSTR szDataSource,_Out_ LPDWORD pdwNumEntries,_Out_ PPDH_TIME_INFO pInfo,_In_ LPDWORD pdwBufferSize)
PDH_STATUS None pdh.PdhGetDataSourceTimeRangeA(_In_ LPCTSTR szDataSource,_Out_ LPDWORD pdwNumEntries,_Out_ PPDH_TIME_INFO pInfo,_In_ LPDWORD pdwBufferSize)
PDH_STATUS None pdh.PdhExpandWildCardPathH(_In_ PDH_HLOG hDataSource,_In_ LPCTSTR szWildCardPath,_Out_ LPTSTR mszExpandedPathList,_Inout_ LPDWORD pcchPathListLength,_In_ DWORD dwFlags)
PDH_STATUS None pdh.PdhExpandWildCardPathHW(_In_ PDH_HLOG hDataSource,_In_ LPCTSTR szWildCardPath,_Out_ LPTSTR mszExpandedPathList,_Inout_ LPDWORD pcchPathListLength,_In_ DWORD dwFlags)
PDH_STATUS None pdh.PdhExpandWildCardPathHA(_In_ PDH_HLOG hDataSource,_In_ LPCTSTR szWildCardPath,_Out_ LPTSTR mszExpandedPathList,_Inout_ LPDWORD pcchPathListLength,_In_ DWORD dwFlags)
PDH_STATUS None pdh.PdhFormatFromRawValue(_In_ DWORD dwCounterType,_In_ DWORD dwFormat,_In_ LONGLONG *pTimeBase,_In_ PPDH_RAW_COUNTER rawValue1,_In_ PPDH_RAW_COUNTER rawValue2,_Out_ PPDH_FMT_COUNTERVALUE fmtValue)
PDH_STATUS None pdh.PdhEnumMachines(_In_ LPCTSTR szDataSource,_Out_ LPTSTR mszMachineNameList,_Inout_ LPDWORD pcchBufferLength)
PDH_STATUS None pdh.PdhEnumMachinesW(_In_ LPCTSTR szDataSource,_Out_ LPTSTR mszMachineNameList,_Inout_ LPDWORD pcchBufferLength)
PDH_STATUS None pdh.PdhEnumMachinesA(_In_ LPCTSTR szDataSource,_Out_ LPTSTR mszMachineNameList,_Inout_ LPDWORD pcchBufferLength)
PDH_STATUS None pdh.PdhParseCounterPath(_In_ LPCTSTR szFullPathBuffer,_Out_ PDH_COUNTER_PATH_ELEMENTS *pCounterPathElements,_Inout_ LPDWORD pdwBufferSize,DWORD dwFlags None)
PDH_STATUS None pdh.PdhParseCounterPathW(_In_ LPCTSTR szFullPathBuffer,_Out_ PDH_COUNTER_PATH_ELEMENTS *pCounterPathElements,_Inout_ LPDWORD pdwBufferSize,DWORD dwFlags None)
PDH_STATUS None pdh.PdhParseCounterPathA(_In_ LPCTSTR szFullPathBuffer,_Out_ PDH_COUNTER_PATH_ELEMENTS *pCounterPathElements,_Inout_ LPDWORD pdwBufferSize,DWORD dwFlags None)
DWORD APIENTRY None.CollectPerformanceData(LPWSTR pQuery None,LPVOID *pData None,LPDWORD pcbData None,LPDWORD pObjectsReturned None)
ULONG WINAPI None.ControlCallback(_In_ ULONG RequestCode,_In_ PVOID Buffer,_In_ ULONG BufferSize)
PDH_STATUS None pdh.PdhBindInputDataSource(_Out_ PDH_HLOG *phDataSource,_In_ LPCTSTR szLogFileNameList)
PDH_STATUS None pdh.PdhBindInputDataSourceW(_Out_ PDH_HLOG *phDataSource,_In_ LPCTSTR szLogFileNameList)
PDH_STATUS None pdh.PdhBindInputDataSourceA(_Out_ PDH_HLOG *phDataSource,_In_ LPCTSTR szLogFileNameList)
PDH_STATUS None pdh.PdhBrowseCountersH(_In_ PPDH_BROWSE_DLG_CONFIG pBrowseDlgData)
PDH_STATUS None pdh.PdhBrowseCountersHW(_In_ PPDH_BROWSE_DLG_CONFIG pBrowseDlgData)
PDH_STATUS None pdh.PdhBrowseCountersHA(_In_ PPDH_BROWSE_DLG_CONFIG pBrowseDlgData)
uint32 None rdms.GetInt32Property([in] string Key,[out] sint32 Value)
BOOL WINAPI advapi32.GetCurrentHwProfile(_Out_ LPHW_PROFILE_INFO lpHwProfileInfo)
BOOL WINAPI advapi32.GetCurrentHwProfileW(_Out_ LPHW_PROFILE_INFO lpHwProfileInfo)
BOOL WINAPI advapi32.GetCurrentHwProfileA(_Out_ LPHW_PROFILE_INFO lpHwProfileInfo)
PDH_STATUS None pdh.PdhGetDataSourceTimeRangeH(_In_ PDH_HLOG hDataSource,_Out_ LPDWORD pdwNumEntries,_Out_ PPDH_TIME_INFO pInfo,_In_ LPDWORD pdwBufferSize)
PDH_STATUS None pdh.PdhConnectMachine(_In_ LPCTSTR szMachineName)
PDH_STATUS None pdh.PdhConnectMachineW(_In_ LPCTSTR szMachineName)
PDH_STATUS None pdh.PdhConnectMachineA(_In_ LPCTSTR szMachineName)
PDH_STATUS None pdh.PdhReadRawLogRecord(_In_ PDH_HLOG hLog,_In_ FILETIME ftRecord,_Out_ PPDH_RAW_LOG_RECORD pRawLogRecord,_In_ LPDWORD pdwBufferLength)
PDH_STATUS None pdh.PdhCollectQueryDataWithTime(_Inout_ PDH_HQUERY hQuery,_Out_ LONGLONG *pllTimeStamp)
ULONG None advapi32.PerfDecrementULongCounterValue(_In_ HANDLE hProvider,_In_ PPERF_COUNTERSET_INSTANCE pInstance,_In_ ULONG CounterId,_In_ ULONG lValue)
PDH_STATUS None pdh.PdhEnumObjects(_In_ LPCTSTR szDataSource,_In_ LPCTSTR szMachineName,_Out_ LPTSTR mszObjectList,_Inout_ LPDWORD pcchBufferLength,_In_ DWORD dwDetailLevel,_In_ BOOL bRefresh)
PDH_STATUS None pdh.PdhEnumObjectsW(_In_ LPCTSTR szDataSource,_In_ LPCTSTR szMachineName,_Out_ LPTSTR mszObjectList,_Inout_ LPDWORD pcchBufferLength,_In_ DWORD dwDetailLevel,_In_ BOOL bRefresh)
PDH_STATUS None pdh.PdhEnumObjectsA(_In_ LPCTSTR szDataSource,_In_ LPCTSTR szMachineName,_Out_ LPTSTR mszObjectList,_Inout_ LPDWORD pcchBufferLength,_In_ DWORD dwDetailLevel,_In_ BOOL bRefresh)
BOOL WINAPI kernel32.SetFirmwareEnvironmentVariable(_In_ LPCTSTR lpName,_In_ LPCTSTR lpGuid,_In_ PVOID pBuffer,_In_ DWORD nSize)
BOOL WINAPI kernel32.SetFirmwareEnvironmentVariableW(_In_ LPCTSTR lpName,_In_ LPCTSTR lpGuid,_In_ PVOID pBuffer,_In_ DWORD nSize)
BOOL WINAPI kernel32.SetFirmwareEnvironmentVariableA(_In_ LPCTSTR lpName,_In_ LPCTSTR lpGuid,_In_ PVOID pBuffer,_In_ DWORD nSize)
DWORD APIENTRY None.OpenPerformanceData(LPWSTR pContext None)
PDH_STATUS None pdh.PdhParseInstanceName(_In_ LPCTSTR szInstanceString,_Out_ LPTSTR szInstanceName,_Inout_ LPDWORD pcchInstanceNameLength,_Out_ LPTSTR szParentName,_Inout_ LPDWORD pcchParentNameLength,_Out_ LPDWORD lpIndex)
PDH_STATUS None pdh.PdhParseInstanceNameW(_In_ LPCTSTR szInstanceString,_Out_ LPTSTR szInstanceName,_Inout_ LPDWORD pcchInstanceNameLength,_Out_ LPTSTR szParentName,_Inout_ LPDWORD pcchParentNameLength,_Out_ LPDWORD lpIndex)
PDH_STATUS None pdh.PdhParseInstanceNameA(_In_ LPCTSTR szInstanceString,_Out_ LPTSTR szInstanceName,_Inout_ LPDWORD pcchInstanceNameLength,_Out_ LPTSTR szParentName,_Inout_ LPDWORD pcchParentNameLength,_Out_ LPDWORD lpIndex)
PDH_STATUS None pdh.PdhEnumObjectItems(_In_ LPCTSTR szDataSource,_In_ LPCTSTR szMachineName,_In_ LPCTSTR szObjectName,_Out_ LPTSTR mszCounterList,_Inout_ LPDWORD pcchCounterListLength,_Out_ LPTSTR mszInstanceList,_Inout_ LPDWORD pcchInstanceListLength,_In_ DWORD dwDetailLevel,_In_ DWORD dwFlags)
PDH_STATUS None pdh.PdhEnumObjectItemsW(_In_ LPCTSTR szDataSource,_In_ LPCTSTR szMachineName,_In_ LPCTSTR szObjectName,_Out_ LPTSTR mszCounterList,_Inout_ LPDWORD pcchCounterListLength,_Out_ LPTSTR mszInstanceList,_Inout_ LPDWORD pcchInstanceListLength,_In_ DWORD dwDetailLevel,_In_ DWORD dwFlags)
PDH_STATUS None pdh.PdhEnumObjectItemsA(_In_ LPCTSTR szDataSource,_In_ LPCTSTR szMachineName,_In_ LPCTSTR szObjectName,_Out_ LPTSTR mszCounterList,_Inout_ LPDWORD pcchCounterListLength,_Out_ LPTSTR mszInstanceList,_Inout_ LPDWORD pcchInstanceListLength,_In_ DWORD dwDetailLevel,_In_ DWORD dwFlags)
ULONG None advapi32.PerfIncrementULongLongCounterValue(_In_ HANDLE hProvider,_In_ PPERF_COUNTERSET_INSTANCE pInstance,_In_ ULONG CounterId,_In_ ULONGLONG llValue)
PDH_STATUS __stdcall None.CounterPathCallBack(_In_ DWORD_PTR dwArg)
PDH_STATUS None pdh.PdhSetQueryTimeRange(_In_ PDH_HQUERY hQuery,_In_ PPDH_TIME_INFO pInfo)
PPERF_COUNTERSET_INSTANCE None advapi32.PerfCreateInstance(_In_ HANDLE hProvider,_In_ LPCGUID CounterSetGuid,_In_ LPCWSTR szInstanceName,_In_ ULONG dwInstance)
PDH_STATUS None pdh.PdhGetDefaultPerfCounterH(_In_ PDH_HLOG hDataSource,_In_ LPCTSTR szMachineName,_In_ LPCTSTR szObjectName,_Out_ LPTSTR szDefaultCounterName,_Inout_ LPDWORD pcchBufferSize)
PDH_STATUS None pdh.PdhGetDefaultPerfCounterHW(_In_ PDH_HLOG hDataSource,_In_ LPCTSTR szMachineName,_In_ LPCTSTR szObjectName,_Out_ LPTSTR szDefaultCounterName,_Inout_ LPDWORD pcchBufferSize)
PDH_STATUS None pdh.PdhGetDefaultPerfCounterHA(_In_ PDH_HLOG hDataSource,_In_ LPCTSTR szMachineName,_In_ LPCTSTR szObjectName,_Out_ LPTSTR szDefaultCounterName,_Inout_ LPDWORD pcchBufferSize)
PDH_STATUS None pdh.PdhExpandWildCardPath(_In_ LPCTSTR szDataSource,_In_ LPCTSTR szWildCardPath,_Out_ LPTSTR mszExpandedPathList,_Inout_ LPDWORD pcchPathListLength,_In_ DWORD dwFlags)
PDH_STATUS None pdh.PdhExpandWildCardPathW(_In_ LPCTSTR szDataSource,_In_ LPCTSTR szWildCardPath,_Out_ LPTSTR mszExpandedPathList,_Inout_ LPDWORD pcchPathListLength,_In_ DWORD dwFlags)
PDH_STATUS None pdh.PdhExpandWildCardPathA(_In_ LPCTSTR szDataSource,_In_ LPCTSTR szWildCardPath,_Out_ LPTSTR mszExpandedPathList,_Inout_ LPDWORD pcchPathListLength,_In_ DWORD dwFlags)
BOOL WINAPI kernel32.GetSystemRegistryQuota(_Out_opt_ PDWORD pdwQuotaAllowed,_Out_opt_ PDWORD pdwQuotaUsed)
PDH_STATUS None pdh.PdhEnumObjectsH(_In_ PDH_HLOG hDataSource,_In_ LPCTSTR szMachineName,_Out_ LPTSTR mszObjectList,_Inout_ LPDWORD pcchBufferLength,_In_ DWORD dwDetailLevel,_In_ BOOL bRefresh)
PDH_STATUS None pdh.PdhEnumObjectsHW(_In_ PDH_HLOG hDataSource,_In_ LPCTSTR szMachineName,_Out_ LPTSTR mszObjectList,_Inout_ LPDWORD pcchBufferLength,_In_ DWORD dwDetailLevel,_In_ BOOL bRefresh)
PDH_STATUS None pdh.PdhEnumObjectsHA(_In_ PDH_HLOG hDataSource,_In_ LPCTSTR szMachineName,_Out_ LPTSTR mszObjectList,_Inout_ LPDWORD pcchBufferLength,_In_ DWORD dwDetailLevel,_In_ BOOL bRefresh)
PDH_STATUS None pdh.PdhSelectDataSource(_In_ HWND hWndOwner,_In_ DWORD dwFlags,_Out_ LPTSTR szDataSource,_Inout_ LPDWORD pcchBufferLength)
PDH_STATUS None pdh.PdhSelectDataSourceW(_In_ HWND hWndOwner,_In_ DWORD dwFlags,_Out_ LPTSTR szDataSource,_Inout_ LPDWORD pcchBufferLength)
PDH_STATUS None pdh.PdhSelectDataSourceA(_In_ HWND hWndOwner,_In_ DWORD dwFlags,_Out_ LPTSTR szDataSource,_Inout_ LPDWORD pcchBufferLength)
BOOL WINBASEAPI kernel32.GetFirmwareEnvironmentVariableEx(LPCSTR lpName None,LPCSTR lpGuid None,PVOID pValue None,DWORD nSize None,PDWORD pdwAttributes None)
BOOL WINBASEAPI kernel32.GetFirmwareEnvironmentVariableExW(LPCSTR lpName None,LPCSTR lpGuid None,PVOID pValue None,DWORD nSize None,PDWORD pdwAttributes None)
BOOL WINBASEAPI kernel32.GetFirmwareEnvironmentVariableExA(LPCSTR lpName None,LPCSTR lpGuid None,PVOID pValue None,DWORD nSize None,PDWORD pdwAttributes None)
PDH_STATUS None pdh.PdhGetDefaultPerfObjectH(_In_ PDH_HLOG hDataSource,_In_ LPCTSTR szMachineName,_Out_ LPTSTR szDefaultObjectName,_Inout_ LPDWORD pcchBufferSize)
PDH_STATUS None pdh.PdhGetDefaultPerfObjectHW(_In_ PDH_HLOG hDataSource,_In_ LPCTSTR szMachineName,_Out_ LPTSTR szDefaultObjectName,_Inout_ LPDWORD pcchBufferSize)
PDH_STATUS None pdh.PdhGetDefaultPerfObjectHA(_In_ PDH_HLOG hDataSource,_In_ LPCTSTR szMachineName,_Out_ LPTSTR szDefaultObjectName,_Inout_ LPDWORD pcchBufferSize)
PDH_STATUS None pdh.PdhGetCounterTimeBase(_In_ PDH_HCOUNTER hCounter,_Out_ LONGLONG *pTimeBase)
PDH_STATUS None pdh.PdhGetRawCounterValue(_In_ PDH_HCOUNTER hCounter,_Out_ LPDWORD lpdwType,_Out_ PPDH_RAW_COUNTER pValue)
BOOL None kernel32.GetUserPreferredUILanguages(_In_ DWORD dwFlags,_Out_ PULONG pulNumLanguages,_Out_opt_ PZZWSTR pwszLanguagesBuffer,_Inout_ PULONG pcchLanguagesBuffer)
PDH_STATUS None pdh.PdhValidatePathEx(_In_opt_ PDH_HLOG hDataSource,_In_ LPCTSTR szFullPathBuffer)
PDH_STATUS None pdh.PdhValidatePathExW(_In_opt_ PDH_HLOG hDataSource,_In_ LPCTSTR szFullPathBuffer)
PDH_STATUS None pdh.PdhValidatePathExA(_In_opt_ PDH_HLOG hDataSource,_In_ LPCTSTR szFullPathBuffer)
PDH_STATUS None pdh.PdhSetCounterScaleFactor(_In_ PDH_HCOUNTER hCounter,_In_ LONG lFactor)
PDH_STATUS None pdh.PdhCollectQueryDataEx(_In_ PDH_HQUERY hQuery,_In_ DWORD dwIntervalTime,_In_ HANDLE hNewDataEvent)
PDH_STATUS None pdh.PdhEnumMachinesH(_In_ PDH_HLOG hDataSource,_Out_ LPTSTR mszMachineNameList,_Inout_ LPDWORD pcchBufferLength)
PDH_STATUS None pdh.PdhEnumMachinesHW(_In_ PDH_HLOG hDataSource,_Out_ LPTSTR mszMachineNameList,_Inout_ LPDWORD pcchBufferLength)
PDH_STATUS None pdh.PdhEnumMachinesHA(_In_ PDH_HLOG hDataSource,_Out_ LPTSTR mszMachineNameList,_Inout_ LPDWORD pcchBufferLength)
ULONG WINAPI advapi32.PerfEnumerateCounterSetInstances(_In_opt_ LPCWSTR szMachine,_In_ LPCGUID pCounterSetId,_Out_opt_ PPERF_INSTANCE_HEADER pInstances,DWORD cbInstances None,_Out_ LPDWORD pcbInstancesActual)
BOOL None pdh.PdhIsRealTimeQuery(_In_ PDH_HQUERY hQuery)
ULONG None advapi32.PerfIncrementULongCounterValue(_In_ HANDLE hProvider,_In_ PPERF_COUNTERSET_INSTANCE pInstance,_In_ ULONG CounterId,_In_ ULONG lValue)
HRESULT None msftedit.GetFont(ITextFont **ppFont None)
PDH_STATUS None pdh.PdhGetLogFileSize(_In_ PDH_HLOG hLog,_Out_ LONGLONG *llSize)
HRESULT None msftedit.GetName(BSTR *pbstr None)
PDH_STATUS None pdh.PdhEnumObjectItemsH(_In_ PDH_HLOG hDataSource,_In_ LPCTSTR szMachineName,_In_ LPCTSTR szObjectName,_Out_ LPTSTR mszCounterList,_Inout_ LPDWORD pcchCounterListLength,_Out_ LPTSTR mszInstanceList,_Inout_ LPDWORD pcchInstanceListLength,_In_ DWORD dwDetailLevel,_In_ DWORD dwFlags)
PDH_STATUS None pdh.PdhEnumObjectItemsHW(_In_ PDH_HLOG hDataSource,_In_ LPCTSTR szMachineName,_In_ LPCTSTR szObjectName,_Out_ LPTSTR mszCounterList,_Inout_ LPDWORD pcchCounterListLength,_Out_ LPTSTR mszInstanceList,_Inout_ LPDWORD pcchInstanceListLength,_In_ DWORD dwDetailLevel,_In_ DWORD dwFlags)
PDH_STATUS None pdh.PdhEnumObjectItemsHA(_In_ PDH_HLOG hDataSource,_In_ LPCTSTR szMachineName,_In_ LPCTSTR szObjectName,_Out_ LPTSTR mszCounterList,_Inout_ LPDWORD pcchCounterListLength,_Out_ LPTSTR mszInstanceList,_Inout_ LPDWORD pcchInstanceListLength,_In_ DWORD dwDetailLevel,_In_ DWORD dwFlags)
DWORD None ntdsapi.DsCrackNames(_In_ HANDLE hDS,_In_ DS_NAME_FLAGS flags,_In_ DS_NAME_FORMAT formatOffered,_In_ DS_NAME_FORMAT formatDesired,_In_ DWORD cNames,_In_ LPCTSTR *rpNames,_Out_ PDS_NAME_RESULT *ppResult)
DWORD None ntdsapi.DsCrackNamesW(_In_ HANDLE hDS,_In_ DS_NAME_FLAGS flags,_In_ DS_NAME_FORMAT formatOffered,_In_ DS_NAME_FORMAT formatDesired,_In_ DWORD cNames,_In_ LPCTSTR *rpNames,_Out_ PDS_NAME_RESULT *ppResult)
DWORD None ntdsapi.DsCrackNamesA(_In_ HANDLE hDS,_In_ DS_NAME_FLAGS flags,_In_ DS_NAME_FORMAT formatOffered,_In_ DS_NAME_FORMAT formatDesired,_In_ DWORD cNames,_In_ LPCTSTR *rpNames,_Out_ PDS_NAME_RESULT *ppResult)
HRESULT None msftedit.GetDocumentPara([out None None,retval] ITextPara2 **ppPara)
HRESULT None msftedit.Cut(VARIANT *pVar None)
DWORD64 None None.UnsignedMultiplyExtract128(_In_ DWORD64 Multiplier,_In_ DWORD64 Multiplicand,_In_ BYTE Shift)
HRESULT None msftedit.SaveCompleted(LONG iob None,LPSTORAGE lpstg None)
BOOL None ntdsapi.DsCrackUnquotedMangledRdn(_In_ LPCTSTR pszRDN,_In_ DWORD cchRDN,_Out_opt_ GUID *pGuid,_Out_opt_ DS_MANGLE_FOR *peDsMangleFor)
BOOL None ntdsapi.DsCrackUnquotedMangledRdnW(_In_ LPCTSTR pszRDN,_In_ DWORD cchRDN,_Out_opt_ GUID *pGuid,_Out_opt_ DS_MANGLE_FOR *peDsMangleFor)
BOOL None ntdsapi.DsCrackUnquotedMangledRdnA(_In_ LPCTSTR pszRDN,_In_ DWORD cchRDN,_Out_opt_ GUID *pGuid,_Out_opt_ DS_MANGLE_FOR *peDsMangleFor)
PDH_STATUS None pdh.PdhParseCounterPath(_In_ LPCTSTR szFullPathBuffer,_Out_ PDH_COUNTER_PATH_ELEMENTS *pCounterPathElements,_Inout_ LPDWORD pdwBufferSize,DWORD dwFlags None)
PDH_STATUS None pdh.PdhParseCounterPathW(_In_ LPCTSTR szFullPathBuffer,_Out_ PDH_COUNTER_PATH_ELEMENTS *pCounterPathElements,_Inout_ LPDWORD pdwBufferSize,DWORD dwFlags None)
PDH_STATUS None pdh.PdhParseCounterPathA(_In_ LPCTSTR szFullPathBuffer,_Out_ PDH_COUNTER_PATH_ELEMENTS *pCounterPathElements,_Inout_ LPDWORD pdwBufferSize,DWORD dwFlags None)
BOOL WINBASEAPI kernel32.GetFirmwareEnvironmentVariableEx(LPCSTR lpName None,LPCSTR lpGuid None,PVOID pValue None,DWORD nSize None,PDWORD pdwAttributes None)
BOOL WINBASEAPI kernel32.GetFirmwareEnvironmentVariableExW(LPCSTR lpName None,LPCSTR lpGuid None,PVOID pValue None,DWORD nSize None,PDWORD pdwAttributes None)
BOOL WINBASEAPI kernel32.GetFirmwareEnvironmentVariableExA(LPCSTR lpName None,LPCSTR lpGuid None,PVOID pValue None,DWORD nSize None,PDWORD pdwAttributes None)
HRESULT WINAPI None.IsWow64GuestMachineSupported(_In_ USHORT WowGuestMachine,_Out_ BOOLEAN *MachineIsSupported)
PDH_STATUS None pdh.PdhEnumMachines(_In_ LPCTSTR szDataSource,_Out_ LPTSTR mszMachineNameList,_Inout_ LPDWORD pcchBufferLength)
PDH_STATUS None pdh.PdhEnumMachinesW(_In_ LPCTSTR szDataSource,_Out_ LPTSTR mszMachineNameList,_Inout_ LPDWORD pcchBufferLength)
PDH_STATUS None pdh.PdhEnumMachinesA(_In_ LPCTSTR szDataSource,_Out_ LPTSTR mszMachineNameList,_Inout_ LPDWORD pcchBufferLength)
HRESULT None None.GetDisplay([out None None,retval] IUnknown **ppDisplay)
HRESULT None msftedit.GetDisplays([out None None,retval] ITextDisplays **ppDisplays)
BOOL WINAPI advapi32.GetUserName(_Out_ LPTSTR lpBuffer,_Inout_ LPDWORD lpnSize)
BOOL WINAPI advapi32.GetUserNameW(_Out_ LPTSTR lpBuffer,_Inout_ LPDWORD lpnSize)
BOOL WINAPI advapi32.GetUserNameA(_Out_ LPTSTR lpBuffer,_Inout_ LPDWORD lpnSize)
BOOL None msimg32.GradientFill(_In_ HDC hdc,_In_ PTRIVERTEX pVertex,_In_ ULONG nVertex,_In_ PVOID pMesh,_In_ ULONG nMesh,_In_ ULONG ulMode)
HRESULT None msftedit.GetDuplicate(ITextRange **ppRange None)
HRESULT None msftedit.ActivateAs(REFCLSID rclsid None,REFCLSID rclsidAs None)
PDH_STATUS None pdh.PdhParseInstanceName(_In_ LPCTSTR szInstanceString,_Out_ LPTSTR szInstanceName,_Inout_ LPDWORD pcchInstanceNameLength,_Out_ LPTSTR szParentName,_Inout_ LPDWORD pcchParentNameLength,_Out_ LPDWORD lpIndex)
PDH_STATUS None pdh.PdhParseInstanceNameW(_In_ LPCTSTR szInstanceString,_Out_ LPTSTR szInstanceName,_Inout_ LPDWORD pcchInstanceNameLength,_Out_ LPTSTR szParentName,_Inout_ LPDWORD pcchParentNameLength,_Out_ LPDWORD lpIndex)
PDH_STATUS None pdh.PdhParseInstanceNameA(_In_ LPCTSTR szInstanceString,_Out_ LPTSTR szInstanceName,_Inout_ LPDWORD pcchInstanceNameLength,_Out_ LPTSTR szParentName,_Inout_ LPDWORD pcchParentNameLength,_Out_ LPDWORD lpIndex)
HRESULT None msftedit.GetPara(ITextPara **ppPara None)
HRESULT None msftedit.GetFont2([out None None,retval] ITextFont2 **ppFont)
HRESULT None msftedit.GetEmbeddedObject(IUnknown **ppObject None)
PDH_STATUS None pdh.PdhGetFormattedCounterArray(_In_ PDH_HCOUNTER hCounter,_In_ DWORD dwFormat,_Inout_ LPDWORD lpdwBufferSize,_Out_ LPDWORD lpdwBufferCount,_Out_ PPDH_FMT_COUNTERVALUE_ITEM ItemBuffer)
PDH_STATUS None pdh.PdhGetFormattedCounterArrayW(_In_ PDH_HCOUNTER hCounter,_In_ DWORD dwFormat,_Inout_ LPDWORD lpdwBufferSize,_Out_ LPDWORD lpdwBufferCount,_Out_ PPDH_FMT_COUNTERVALUE_ITEM ItemBuffer)
PDH_STATUS None pdh.PdhGetFormattedCounterArrayA(_In_ PDH_HCOUNTER hCounter,_In_ DWORD dwFormat,_Inout_ LPDWORD lpdwBufferSize,_Out_ LPDWORD lpdwBufferCount,_Out_ PPDH_FMT_COUNTERVALUE_ITEM ItemBuffer)
ULONG None advapi32.PerfStartProvider(_In_ LPGUID ProviderGuid,_In_opt_ PERFLIBREQUEST ControlCallback,_Out_ HANDLE *phProvider)
BOOL WINAPI api-ms-win-core-apiquery-l1-1-0.ApiSetQueryApiSetPresence(_In_ PCUNICODE_STRING Namespace,_Out_ PBOOLEAN Present)
PDH_STATUS None pdh.PdhCloseLog(_In_ PDH_HLOG hLog,_In_ DWORD dwFlags)
HRESULT None msftedit.GetActiveStory([out None None,retval] ITextStory **ppStory)
DWORD None ntdsapi.DsBindWithSpn(_In_opt_ LPCTSTR DomainControllerName,_In_opt_ LPCTSTR DnsDomainName,_In_opt_ RPC_AUTH_IDENTITY_HANDLE AuthIdentity,_In_opt_ LPCTSTR ServicePrincipalName,_Out_ HANDLE *phDS)
DWORD None ntdsapi.DsBindWithSpnW(_In_opt_ LPCTSTR DomainControllerName,_In_opt_ LPCTSTR DnsDomainName,_In_opt_ RPC_AUTH_IDENTITY_HANDLE AuthIdentity,_In_opt_ LPCTSTR ServicePrincipalName,_Out_ HANDLE *phDS)
DWORD None ntdsapi.DsBindWithSpnA(_In_opt_ LPCTSTR DomainControllerName,_In_opt_ LPCTSTR DnsDomainName,_In_opt_ RPC_AUTH_IDENTITY_HANDLE AuthIdentity,_In_opt_ LPCTSTR ServicePrincipalName,_Out_ HANDLE *phDS)
PDH_STATUS None pdh.PdhExpandWildCardPath(_In_ LPCTSTR szDataSource,_In_ LPCTSTR szWildCardPath,_Out_ LPTSTR mszExpandedPathList,_Inout_ LPDWORD pcchPathListLength,_In_ DWORD dwFlags)
PDH_STATUS None pdh.PdhExpandWildCardPathW(_In_ LPCTSTR szDataSource,_In_ LPCTSTR szWildCardPath,_Out_ LPTSTR mszExpandedPathList,_Inout_ LPDWORD pcchPathListLength,_In_ DWORD dwFlags)
PDH_STATUS None pdh.PdhExpandWildCardPathA(_In_ LPCTSTR szDataSource,_In_ LPCTSTR szWildCardPath,_Out_ LPTSTR mszExpandedPathList,_Inout_ LPDWORD pcchPathListLength,_In_ DWORD dwFlags)
HRESULT None msftedit.GetMainStory([out None None,retval] ITextStory **ppStory)
PDH_STATUS None pdh.PdhGetDefaultPerfObject(_In_ LPCTSTR szDataSource,_In_ LPCTSTR szMachineName,_Out_ LPTSTR szDefaultObjectName,_Inout_ LPDWORD pcchBufferSize)
PDH_STATUS None pdh.PdhGetDefaultPerfObjectW(_In_ LPCTSTR szDataSource,_In_ LPCTSTR szMachineName,_Out_ LPTSTR szDefaultObjectName,_Inout_ LPDWORD pcchBufferSize)
PDH_STATUS None pdh.PdhGetDefaultPerfObjectA(_In_ LPCTSTR szDataSource,_In_ LPCTSTR szMachineName,_Out_ LPTSTR szDefaultObjectName,_Inout_ LPDWORD pcchBufferSize)
LONG64 WINAPI None.Multiply128(_In_ LONG64 Multiplier,_In_ LONG64 Multiplicand,_Out_ LONG64 *HighProduct)
PDH_STATUS None pdh.PdhSetDefaultRealTimeDataSource(_In_ DWORD dwDataSourceId)
PDH_STATUS None pdh.PdhGetDefaultPerfCounter(_In_ LPCTSTR szDataSource,_In_ LPCTSTR szMachineName,_In_ LPCTSTR szObjectName,_Out_ LPTSTR szDefaultCounterName,_Inout_ LPDWORD pcchBufferSize)
PDH_STATUS None pdh.PdhGetDefaultPerfCounterW(_In_ LPCTSTR szDataSource,_In_ LPCTSTR szMachineName,_In_ LPCTSTR szObjectName,_Out_ LPTSTR szDefaultCounterName,_Inout_ LPDWORD pcchBufferSize)
PDH_STATUS None pdh.PdhGetDefaultPerfCounterA(_In_ LPCTSTR szDataSource,_In_ LPCTSTR szMachineName,_In_ LPCTSTR szObjectName,_Out_ LPTSTR szDefaultCounterName,_Inout_ LPDWORD pcchBufferSize)
HRESULT None msftedit.GetURL([out None None,retval] BSTR *pbstr)
BOOL None msimg32.GradientFill(_In_ HDC hdc,_In_ PTRIVERTEX pVertex,_In_ ULONG nVertex,_In_ PVOID pMesh,_In_ ULONG nMesh,_In_ ULONG ulMode)
HRESULT None msftedit.GetPara2([out None None,retval] ITextPara2 **ppPara)
ULONG WINAPI advapi32.PerfCloseQueryHandle(_In_ HANDLE hQuery)
DWORD64 None None.ShiftLeft128(DWORD64 LowPart None,DWORD64 HighPart None,BYTE Shift None)
PDH_STATUS None pdh.PdhUpdateLog(_In_ PDH_HLOG hLog,_In_ LPCTSTR szUserString)
PDH_STATUS None pdh.PdhUpdateLogW(_In_ PDH_HLOG hLog,_In_ LPCTSTR szUserString)
PDH_STATUS None pdh.PdhUpdateLogA(_In_ PDH_HLOG hLog,_In_ LPCTSTR szUserString)
HRESULT None msftedit.GetStrings([out] ITextStrings **ppStrs)
HRESULT None None.Initialize([out] DWORD *PluginCapabilities)
HRESULT None None.get_Weight([out] SHORT *pWeight)
NTSTATUS WINAPI ntdll.ZwQuerySystemInformation(_In_ SYSTEM_INFORMATION_CLASS SystemInformationClass,_Inout_ PVOID SystemInformation,_In_ ULONG SystemInformationLength,_Out_opt_ PULONG ReturnLength)
HRESULT None msftedit.Copy(VARIANT *pVar None)
HRESULT None msftedit.GetSelection2([out None None,retval] ITextSelection2 **ppSel)
DWORD None ntdsapi.DsRemoveDsDomain(_In_ HANDLE hDs,_In_ LPTSTR DomainDN)
DWORD None ntdsapi.DsRemoveDsDomainW(_In_ HANDLE hDs,_In_ LPTSTR DomainDN)
DWORD None ntdsapi.DsRemoveDsDomainA(_In_ HANDLE hDs,_In_ LPTSTR DomainDN)
PDH_STATUS None pdh.PdhReadRawLogRecord(_In_ PDH_HLOG hLog,_In_ FILETIME ftRecord,_Out_ PPDH_RAW_LOG_RECORD pRawLogRecord,_In_ LPDWORD pdwBufferLength)
ULONG None advapi32.PerfStartProvider(_In_ LPGUID ProviderGuid,_In_opt_ PERFLIBREQUEST ControlCallback,_Out_ HANDLE *phProvider)
ULONG WINAPI advapi32.PerfDeleteCounters(_In_ HANDLE hQuery,_Inout_ PPERF_COUNTER_IDENTIFIER pCounters,DWORD cbCounters None)
DWORD None ntdsapi.DsUnBind(_In_ HANDLE *phDS)
DWORD None ntdsapi.DsUnBindW(_In_ HANDLE *phDS)
DWORD None ntdsapi.DsUnBindA(_In_ HANDLE *phDS)
Sub None msftedit.PrintNumbers(r As ITextRange)
DWORD None ntdsapi.DsMapSchemaGuids(_In_ HANDLE hDs,_In_ DWORD cGuids,_In_ GUID *rGuids,_Out_ DS_SCHEMA_GUID_MAP **ppGuidMap)
DWORD None ntdsapi.DsMapSchemaGuidsW(_In_ HANDLE hDs,_In_ DWORD cGuids,_In_ GUID *rGuids,_Out_ DS_SCHEMA_GUID_MAP **ppGuidMap)
DWORD None ntdsapi.DsMapSchemaGuidsA(_In_ HANDLE hDs,_In_ DWORD cGuids,_In_ GUID *rGuids,_Out_ DS_SCHEMA_GUID_MAP **ppGuidMap)
ULONG WINAPI advapi32.PerfQueryCounterSetRegistrationInfo(_In_opt_ LPCWSTR szMachine,_In_ LPCGUID pCounterSetId,PerfRegInfoType requestCode None,DWORD requestLangId None,_Out_opt_ LPBYTE pbRegInfo,DWORD cbRegInfo None,_Out_ LPDWORD pcbRegInfoActual)
HRESULT None msftedit.GetFormattedText(ITextRange **ppRange None)
DWORD WINAPI ntdsapi.DsGetRdnW(_Inout_ LPCWCH *ppDN,_Inout_ DWORD *pcDN,_Out_ LPCWCH *ppKey,_Out_ DWORD *pcKey,_Out_ LPCWCH *ppVal,_Out_ DWORD *pcVal)
DWORD None ntdsapi.DsListSites(_In_ HANDLE hDs,_Out_ PDS_NAME_RESULT *ppSites)
DWORD None ntdsapi.DsListSitesW(_In_ HANDLE hDs,_Out_ PDS_NAME_RESULT *ppSites)
DWORD None ntdsapi.DsListSitesA(_In_ HANDLE hDs,_Out_ PDS_NAME_RESULT *ppSites)
HRESULT None None.get_Strikethrough([out] BOOL *pStrikethrough)
PDH_STATUS None pdh.PdhAddEnglishCounter(_In_ PDH_HQUERY hQuery,_In_ LPCTSTR szFullCounterPath,_In_ DWORD_PTR dwUserData,_Out_ PDH_HCOUNTER *phCounter)
PDH_STATUS None pdh.PdhAddEnglishCounterW(_In_ PDH_HQUERY hQuery,_In_ LPCTSTR szFullCounterPath,_In_ DWORD_PTR dwUserData,_Out_ PDH_HCOUNTER *phCounter)
PDH_STATUS None pdh.PdhAddEnglishCounterA(_In_ PDH_HQUERY hQuery,_In_ LPCTSTR szFullCounterPath,_In_ DWORD_PTR dwUserData,_Out_ PDH_HCOUNTER *phCounter)
DWORD None ntdsapi.DsListDomainsInSite(_In_ HANDLE hDs,_In_ LPTSTR site,_Out_ PDS_NAME_RESULT *ppDomains)
DWORD None ntdsapi.DsListDomainsInSiteW(_In_ HANDLE hDs,_In_ LPTSTR site,_Out_ PDS_NAME_RESULT *ppDomains)
DWORD None ntdsapi.DsListDomainsInSiteA(_In_ HANDLE hDs,_In_ LPTSTR site,_Out_ PDS_NAME_RESULT *ppDomains)
PDH_STATUS None pdh.PdhGetDefaultPerfObject(_In_ LPCTSTR szDataSource,_In_ LPCTSTR szMachineName,_Out_ LPTSTR szDefaultObjectName,_Inout_ LPDWORD pcchBufferSize)
PDH_STATUS None pdh.PdhGetDefaultPerfObjectW(_In_ LPCTSTR szDataSource,_In_ LPCTSTR szMachineName,_Out_ LPTSTR szDefaultObjectName,_Inout_ LPDWORD pcchBufferSize)
PDH_STATUS None pdh.PdhGetDefaultPerfObjectA(_In_ LPCTSTR szDataSource,_In_ LPCTSTR szMachineName,_Out_ LPTSTR szDefaultObjectName,_Inout_ LPDWORD pcchBufferSize)
BOOL None None.SyncUpdateProc(LPVOID pData None,PDS_REPSYNCALL_UPDATE pUpdate None)
BOOL None None.IS_POINTER_NEW_WPARAM(WPARAM wParam None)
DWORD None ntdsapi.DsQuerySitesByCost(_In_ HANDLE hDS,_In_ LPTSTR pwszFromSite,_In_ LPTSTR *rgwszToSites,_In_ DWORD cToSites,_In_ DWORD dwFlags,_Out_ PDS_SITE_COST_INFO *prgSiteInfo)
DWORD None ntdsapi.DsQuerySitesByCostW(_In_ HANDLE hDS,_In_ LPTSTR pwszFromSite,_In_ LPTSTR *rgwszToSites,_In_ DWORD cToSites,_In_ DWORD dwFlags,_Out_ PDS_SITE_COST_INFO *prgSiteInfo)
DWORD None ntdsapi.DsQuerySitesByCostA(_In_ HANDLE hDS,_In_ LPTSTR pwszFromSite,_In_ LPTSTR *rgwszToSites,_In_ DWORD cToSites,_In_ DWORD dwFlags,_Out_ PDS_SITE_COST_INFO *prgSiteInfo)
HRESULT None msftedit.GetDuplicate(ITextRange **ppRange None)
HRESULT None msftedit.GetMainStory([out None None,retval] ITextStory **ppStory)
Sub None msftedit.PrintComments(r As ITextRange)
BOOL None None.ListBox_ResetContent(HWND hwndCtl None)
DWORD None ntdsapi.DsServerRegisterSpn(_In_ DS_SPN_WRITE_OP Operation,_In_ LPCTSTR ServiceClass,_In_opt_ LPCTSTR UserObjectDN)
DWORD None ntdsapi.DsServerRegisterSpnW(_In_ DS_SPN_WRITE_OP Operation,_In_ LPCTSTR ServiceClass,_In_opt_ LPCTSTR UserObjectDN)
DWORD None ntdsapi.DsServerRegisterSpnA(_In_ DS_SPN_WRITE_OP Operation,_In_ LPCTSTR ServiceClass,_In_opt_ LPCTSTR UserObjectDN)
DWORD None ntdsapi.DsListInfoForServer(_In_ HANDLE hDs,_In_ LPTSTR server,_Out_ PDS_NAME_RESULT *ppInfo)
DWORD None ntdsapi.DsListInfoForServerW(_In_ HANDLE hDs,_In_ LPTSTR server,_Out_ PDS_NAME_RESULT *ppInfo)
DWORD None ntdsapi.DsListInfoForServerA(_In_ HANDLE hDs,_In_ LPTSTR server,_Out_ PDS_NAME_RESULT *ppInfo)
HRESULT None None.get_Underline([out] BOOL *pUnderline)
PDH_STATUS None pdh.PdhEnumObjectItemsH(_In_ PDH_HLOG hDataSource,_In_ LPCTSTR szMachineName,_In_ LPCTSTR szObjectName,_Out_ LPTSTR mszCounterList,_Inout_ LPDWORD pcchCounterListLength,_Out_ LPTSTR mszInstanceList,_Inout_ LPDWORD pcchInstanceListLength,_In_ DWORD dwDetailLevel,_In_ DWORD dwFlags)
PDH_STATUS None pdh.PdhEnumObjectItemsHW(_In_ PDH_HLOG hDataSource,_In_ LPCTSTR szMachineName,_In_ LPCTSTR szObjectName,_Out_ LPTSTR mszCounterList,_Inout_ LPDWORD pcchCounterListLength,_Out_ LPTSTR mszInstanceList,_Inout_ LPDWORD pcchInstanceListLength,_In_ DWORD dwDetailLevel,_In_ DWORD dwFlags)
PDH_STATUS None pdh.PdhEnumObjectItemsHA(_In_ PDH_HLOG hDataSource,_In_ LPCTSTR szMachineName,_In_ LPCTSTR szObjectName,_Out_ LPTSTR mszCounterList,_Inout_ LPDWORD pcchCounterListLength,_Out_ LPTSTR mszInstanceList,_Inout_ LPDWORD pcchInstanceListLength,_In_ DWORD dwDetailLevel,_In_ DWORD dwFlags)
HRESULT None None.CueStream(IXMLDOMElement* pPlaylistEntry None)
DWORD None ntdsapi.DsListRoles(_In_ HANDLE hDs,_Out_ PDS_NAME_RESULTW *ppRoles)
DWORD None ntdsapi.DsListRolesW(_In_ HANDLE hDs,_Out_ PDS_NAME_RESULTW *ppRoles)
DWORD None ntdsapi.DsListRolesA(_In_ HANDLE hDs,_Out_ PDS_NAME_RESULTW *ppRoles)
PDH_STATUS None pdh.PdhGetDefaultPerfCounter(_In_ LPCTSTR szDataSource,_In_ LPCTSTR szMachineName,_In_ LPCTSTR szObjectName,_Out_ LPTSTR szDefaultCounterName,_Inout_ LPDWORD pcchBufferSize)
PDH_STATUS None pdh.PdhGetDefaultPerfCounterW(_In_ LPCTSTR szDataSource,_In_ LPCTSTR szMachineName,_In_ LPCTSTR szObjectName,_Out_ LPTSTR szDefaultCounterName,_Inout_ LPDWORD pcchBufferSize)
PDH_STATUS None pdh.PdhGetDefaultPerfCounterA(_In_ LPCTSTR szDataSource,_In_ LPCTSTR szMachineName,_In_ LPCTSTR szObjectName,_Out_ LPTSTR szDefaultCounterName,_Inout_ LPDWORD pcchBufferSize)
HRESULT None msftedit.GetFormattedText2([out None None,retval] ITextRange2 **ppRange)
VOID WINAPI ntdsapi.DsFreePasswordCredentials(_In_ RPC_AUTH_IDENTITY_HANDLE AuthIdentity)
HRESULT None None.get_hFont([out] HFONT *phFont)
HRESULT None mstscax.get_AdvancedSettings9([out None None,retval] IMsRdpClientAdvancedSettings8 **ppAdvSettings)
DWORD None ntdsapi.DsBindWithSpnEx(_In_opt_ LPCTSTR DomainControllerName,_In_opt_ LPCTSTR DnsDomainName,_In_opt_ RPC_AUTH_IDENTITY_HANDLE AuthIdentity,_In_opt_ LPCTSTR ServicePrincipalName,_In_opt_ DWORD BindFlags,_Out_ HANDLE *phDS)
DWORD None ntdsapi.DsBindWithSpnExW(_In_opt_ LPCTSTR DomainControllerName,_In_opt_ LPCTSTR DnsDomainName,_In_opt_ RPC_AUTH_IDENTITY_HANDLE AuthIdentity,_In_opt_ LPCTSTR ServicePrincipalName,_In_opt_ DWORD BindFlags,_Out_ HANDLE *phDS)
DWORD None ntdsapi.DsBindWithSpnExA(_In_opt_ LPCTSTR DomainControllerName,_In_opt_ LPCTSTR DnsDomainName,_In_opt_ RPC_AUTH_IDENTITY_HANDLE AuthIdentity,_In_opt_ LPCTSTR ServicePrincipalName,_In_opt_ DWORD BindFlags,_Out_ HANDLE *phDS)
DWORD None ntdsapi.DsClientMakeSpnForTargetServer(_In_ LPCTSTR ServiceClass,_In_ LPCTSTR ServiceName,_Inout_ DWORD *pcSpnLength,_Out_ LPTSTR pszSpn)
DWORD None ntdsapi.DsClientMakeSpnForTargetServerW(_In_ LPCTSTR ServiceClass,_In_ LPCTSTR ServiceName,_Inout_ DWORD *pcSpnLength,_Out_ LPTSTR pszSpn)
DWORD None ntdsapi.DsClientMakeSpnForTargetServerA(_In_ LPCTSTR ServiceClass,_In_ LPCTSTR ServiceName,_Inout_ DWORD *pcSpnLength,_Out_ LPTSTR pszSpn)
DWORD WINAPI ntdsapi.DsBindToISTG(_In_opt_ LPCTSTR SiteName,_Out_ HANDLE *phDS)
DWORD WINAPI ntdsapi.DsBindToISTGW(_In_opt_ LPCTSTR SiteName,_Out_ HANDLE *phDS)
DWORD WINAPI ntdsapi.DsBindToISTGA(_In_opt_ LPCTSTR SiteName,_Out_ HANDLE *phDS)
DWORD WINAPI ntdsapi.DsInheritSecurityIdentity(_In_ HANDLE hDS,_In_ DWORD Flags,_In_ LPCTSTR SrcPrincipal,_In_ LPCTSTR DstPrincipal)
DWORD WINAPI ntdsapi.DsInheritSecurityIdentityW(_In_ HANDLE hDS,_In_ DWORD Flags,_In_ LPCTSTR SrcPrincipal,_In_ LPCTSTR DstPrincipal)
DWORD WINAPI ntdsapi.DsInheritSecurityIdentityA(_In_ HANDLE hDS,_In_ DWORD Flags,_In_ LPCTSTR SrcPrincipal,_In_ LPCTSTR DstPrincipal)
HRESULT None None.get_Italic([out] BOOL *pItalic)
HRESULT None None.get_Bold([out] BOOL *pBold)
BOOL None None.IS_POINTER_INRANGE_WPARAM(WPARAM wParam None)
DWORD None ntdsapi.DsReplicaDel(_In_ HANDLE hDS,_In_ LPCTSTR NameContext,_In_ LPCTSTR DsaSrc,_In_ ULONG Options)
DWORD None ntdsapi.DsReplicaDelW(_In_ HANDLE hDS,_In_ LPCTSTR NameContext,_In_ LPCTSTR DsaSrc,_In_ ULONG Options)
DWORD None ntdsapi.DsReplicaDelA(_In_ HANDLE hDS,_In_ LPCTSTR NameContext,_In_ LPCTSTR DsaSrc,_In_ ULONG Options)
BOOL None None.IS_POINTER_SECONDBUTTON_WPARAM(WPARAM wParam None)
BOOL None None.IS_POINTER_CANCELED_WPARAM(WPARAM wParam None)
DWORD None ntdsapi.DsBindWithCred(_In_opt_ LPCTSTR DomainControllerName,_In_opt_ LPCTSTR DnsDomainName,_In_opt_ RPC_AUTH_IDENTITY_HANDLE AuthIdentity,_Out_ HANDLE *phDS)
DWORD None ntdsapi.DsBindWithCredW(_In_opt_ LPCTSTR DomainControllerName,_In_opt_ LPCTSTR DnsDomainName,_In_opt_ RPC_AUTH_IDENTITY_HANDLE AuthIdentity,_Out_ HANDLE *phDS)
DWORD None ntdsapi.DsBindWithCredA(_In_opt_ LPCTSTR DomainControllerName,_In_opt_ LPCTSTR DnsDomainName,_In_opt_ RPC_AUTH_IDENTITY_HANDLE AuthIdentity,_Out_ HANDLE *phDS)
HRESULT None msftedit.GetDuplicate2([out None None,retval] ITextFont2 **ppFont)
VOID WINAPI ntdsapi.DsFreeDomainControllerInfo(_In_ DWORD InfoLevel,_In_ DWORD cInfo,_In_ VOID *pInfo)
VOID WINAPI ntdsapi.DsFreeDomainControllerInfoW(_In_ DWORD InfoLevel,_In_ DWORD cInfo,_In_ VOID *pInfo)
VOID WINAPI ntdsapi.DsFreeDomainControllerInfoA(_In_ DWORD InfoLevel,_In_ DWORD cInfo,_In_ VOID *pInfo)
DWORD None ntdsapi.DsRemoveDsServer(_In_ HANDLE hDs,_In_ LPTSTR ServerDN,_In_opt_ LPTSTR DomainDN,_Out_opt_ BOOL *fLastDcInDomain,_In_ BOOL fCommit)
DWORD None ntdsapi.DsRemoveDsServerW(_In_ HANDLE hDs,_In_ LPTSTR ServerDN,_In_opt_ LPTSTR DomainDN,_Out_opt_ BOOL *fLastDcInDomain,_In_ BOOL fCommit)
DWORD None ntdsapi.DsRemoveDsServerA(_In_ HANDLE hDs,_In_ LPTSTR ServerDN,_In_opt_ LPTSTR DomainDN,_Out_opt_ BOOL *fLastDcInDomain,_In_ BOOL fCommit)
HRESULT None None.get_TargetLoad([out None None,retval] DWORD *pTargetLoad)
Now None None.TraceInformation(tempStr None None)
DWORD None ntdsapi.DsListServersInSite(_In_ HANDLE hDs,_In_ LPTSTR site,_Out_ PDS_NAME_RESULT *ppServers)
DWORD None ntdsapi.DsListServersInSiteW(_In_ HANDLE hDs,_In_ LPTSTR site,_Out_ PDS_NAME_RESULT *ppServers)
DWORD None ntdsapi.DsListServersInSiteA(_In_ HANDLE hDs,_In_ LPTSTR site,_Out_ PDS_NAME_RESULT *ppServers)
DWORD None ntdsapi.DsCrackSpn(_In_ LPCTSTR pszSPN,_Inout_opt_ DWORD *pcServiceClass,_Out_opt_ LPTSTR ServiceClass,_Inout_opt_ DWORD *pcServiceName,_Out_opt_ LPTSTR ServiceName,_Inout_opt_ DWORD *pcInstanceName,_Out_opt_ LPTSTR InstanceName,_Out_opt_ USHORT *pInstancePort)
DWORD None ntdsapi.DsCrackSpnW(_In_ LPCTSTR pszSPN,_Inout_opt_ DWORD *pcServiceClass,_Out_opt_ LPTSTR ServiceClass,_Inout_opt_ DWORD *pcServiceName,_Out_opt_ LPTSTR ServiceName,_Inout_opt_ DWORD *pcInstanceName,_Out_opt_ LPTSTR InstanceName,_Out_opt_ USHORT *pInstancePort)
DWORD None ntdsapi.DsCrackSpnA(_In_ LPCTSTR pszSPN,_Inout_opt_ DWORD *pcServiceClass,_Out_opt_ LPTSTR ServiceClass,_Inout_opt_ DWORD *pcServiceName,_Out_opt_ LPTSTR ServiceName,_Inout_opt_ DWORD *pcInstanceName,_Out_opt_ LPTSTR InstanceName,_Out_opt_ USHORT *pInstancePort)
DWORD WINAPI ntdsapi.DsAddSidHistory(_In_ HANDLE hDS,_In_ DWORD Flags,_In_ LPCTSTR SrcDomain,_In_ LPCTSTR SrcPrincipal,_In_ LPCTSTR SrcDomainController,_In_ RPC_AUTH_IDENTITY_HANDLE SrcDomainCreds,_In_ LPCTSTR DstDomain,_In_ LPCTSTR DstPrincipal)
DWORD WINAPI ntdsapi.DsAddSidHistoryW(_In_ HANDLE hDS,_In_ DWORD Flags,_In_ LPCTSTR SrcDomain,_In_ LPCTSTR SrcPrincipal,_In_ LPCTSTR SrcDomainController,_In_ RPC_AUTH_IDENTITY_HANDLE SrcDomainCreds,_In_ LPCTSTR DstDomain,_In_ LPCTSTR DstPrincipal)
DWORD WINAPI ntdsapi.DsAddSidHistoryA(_In_ HANDLE hDS,_In_ DWORD Flags,_In_ LPCTSTR SrcDomain,_In_ LPCTSTR SrcPrincipal,_In_ LPCTSTR SrcDomainController,_In_ RPC_AUTH_IDENTITY_HANDLE SrcDomainCreds,_In_ LPCTSTR DstDomain,_In_ LPCTSTR DstPrincipal)
DWORD None ntdsapi.DsGetDomainControllerInfo(_In_ HANDLE hDs,_In_ LPTSTR DomainName,_In_ DWORD InfoLevel,_Out_ DWORD *pcOut,_Out_ VOID **ppInfo)
DWORD None ntdsapi.DsGetDomainControllerInfoW(_In_ HANDLE hDs,_In_ LPTSTR DomainName,_In_ DWORD InfoLevel,_Out_ DWORD *pcOut,_Out_ VOID **ppInfo)
DWORD None ntdsapi.DsGetDomainControllerInfoA(_In_ HANDLE hDs,_In_ LPTSTR DomainName,_In_ DWORD InfoLevel,_Out_ DWORD *pcOut,_Out_ VOID **ppInfo)
DWORD None ntdsapi.DsListServersForDomainInSite(_In_ HANDLE hDs,_In_ LPTSTR domain,_In_ LPTSTR site,_Out_ PDS_NAME_RESULT *ppServers)
DWORD None ntdsapi.DsListServersForDomainInSiteW(_In_ HANDLE hDs,_In_ LPTSTR domain,_In_ LPTSTR site,_Out_ PDS_NAME_RESULT *ppServers)
DWORD None ntdsapi.DsListServersForDomainInSiteA(_In_ HANDLE hDs,_In_ LPTSTR domain,_In_ LPTSTR site,_Out_ PDS_NAME_RESULT *ppServers)
BOOL None None.IS_POINTER_PRIMARYBUTTON_WPARAM(WPARAM wParam None)
DWORD None ntdsapi.DsQuoteRdnValue(_In_ DWORD cUnquotedRdnValueLength,_In_ LPCTCH psUnquotedRdnValue,_Inout_ DWORD *pcQuotedRdnValueLength,_Out_ LPTCH psQuotedRdnValue)
DWORD None ntdsapi.DsQuoteRdnValueW(_In_ DWORD cUnquotedRdnValueLength,_In_ LPCTCH psUnquotedRdnValue,_Inout_ DWORD *pcQuotedRdnValueLength,_Out_ LPTCH psQuotedRdnValue)
DWORD None ntdsapi.DsQuoteRdnValueA(_In_ DWORD cUnquotedRdnValueLength,_In_ LPCTCH psUnquotedRdnValue,_Inout_ DWORD *pcQuotedRdnValueLength,_Out_ LPTCH psQuotedRdnValue)
BOOL None ntdsapi.DsIsMangledDn(_In_ LPCTSTR pszDn,_In_ DS_MANGLE_FOR eDsMangleFor)
BOOL None ntdsapi.DsIsMangledDnW(_In_ LPCTSTR pszDn,_In_ DS_MANGLE_FOR eDsMangleFor)
BOOL None ntdsapi.DsIsMangledDnA(_In_ LPCTSTR pszDn,_In_ DS_MANGLE_FOR eDsMangleFor)
DWORD None ntdsapi.DsMakePasswordCredentials(_In_ LPCTSTR User,_In_ LPCTSTR Domain,_In_ LPCTSTR Password,_Out_ RPC_AUTH_IDENTITY_HANDLE *pAuthIdentity)
DWORD None ntdsapi.DsMakePasswordCredentialsW(_In_ LPCTSTR User,_In_ LPCTSTR Domain,_In_ LPCTSTR Password,_Out_ RPC_AUTH_IDENTITY_HANDLE *pAuthIdentity)
DWORD None ntdsapi.DsMakePasswordCredentialsA(_In_ LPCTSTR User,_In_ LPCTSTR Domain,_In_ LPCTSTR Password,_Out_ RPC_AUTH_IDENTITY_HANDLE *pAuthIdentity)
HRESULT None activeds.SetOption(LONG lnOption None,VARIANT vValue None)
VOID WINAPI ntdsapi.DsQuerySitesFree(_In_ PDS_SITE_COST_INFO rgSiteInfo)
HRESULT None mstscax.get_RemoteMonitorCount([out None None,retval] ULONG *pcRemoteMonitors)
HRESULT None None.get_NestedPlaylist(IXMLDOMElement* pPlaylistEntry None,IWMSPlaylist** ppPlaylist None)
VOID WINAPI ntdsapi.DsFreeSchemaGuidMap(_In_ PDS_SCHEMA_GUID_MAP pGuidMap)
VOID WINAPI ntdsapi.DsFreeSchemaGuidMapW(_In_ PDS_SCHEMA_GUID_MAP pGuidMap)
VOID WINAPI ntdsapi.DsFreeSchemaGuidMapA(_In_ PDS_SCHEMA_GUID_MAP pGuidMap)
HRESULT None mstscax.get_RemoteProgram2([out None None,retval] ITSRemoteProgram2 **ppRemoteProgram)
HRESULT None mstscax.get_AdvancedSettings([out] IMsTscAdvancedSettings **ppAdvSettings)
DWORD None ntdsapi.DsUnquoteRdnValue(_In_ DWORD cQuotedRdnValueLength,_In_ LPCTCH psQuotedRdnValue,_Inout_ DWORD *pcUnquotedRdnValueLength,_Out_ LPTCH psUnquotedRdnValue)
DWORD None ntdsapi.DsUnquoteRdnValueW(_In_ DWORD cQuotedRdnValueLength,_In_ LPCTCH psQuotedRdnValue,_Inout_ DWORD *pcUnquotedRdnValueLength,_Out_ LPTCH psUnquotedRdnValue)
DWORD None ntdsapi.DsUnquoteRdnValueA(_In_ DWORD cQuotedRdnValueLength,_In_ LPCTCH psQuotedRdnValue,_Inout_ DWORD *pcUnquotedRdnValueLength,_Out_ LPTCH psUnquotedRdnValue)
UINT None gdi32.SetTextAlign(_In_ HDC hdc,_In_ UINT fMode)
HRESULT None mstscax.get_CipherStrength([out] LONG *pCipherStrength)
HRESULT None None.get_CurrentCounters(IWMSServerCurrentCounters** pVal None)
BOOL None ntdsapi.DsIsMangledRdnValue(_In_ LPCTSTR pszRdn,_In_ DWORD cRdn,_In_ DS_MANGLE_FOR eDsMangleForDesired)
BOOL None ntdsapi.DsIsMangledRdnValueW(_In_ LPCTSTR pszRdn,_In_ DWORD cRdn,_In_ DS_MANGLE_FOR eDsMangleForDesired)
BOOL None ntdsapi.DsIsMangledRdnValueA(_In_ LPCTSTR pszRdn,_In_ DWORD cRdn,_In_ DS_MANGLE_FOR eDsMangleForDesired)
HRESULT None mstscax.get_RemoteMonitorLayoutMatchesLocal([out None None,retval] VARIANT_BOOL *pfRemoteMatchesLocal)
HRESULT None mstscax.get_RemoteProgram([out] ITSRemoteProgram **ppRemoteProgram)
HRESULT None None.get_Actions([out None None,retval] IRemoteDesktopClientActions **actions)
DWORD None ntdsapi.DsListDomainsInSite(_In_ HANDLE hDs,_In_ LPTSTR site,_Out_ PDS_NAME_RESULT *ppDomains)
DWORD None ntdsapi.DsListDomainsInSiteW(_In_ HANDLE hDs,_In_ LPTSTR site,_Out_ PDS_NAME_RESULT *ppDomains)
DWORD None ntdsapi.DsListDomainsInSiteA(_In_ HANDLE hDs,_In_ LPTSTR site,_Out_ PDS_NAME_RESULT *ppDomains)
DWORD None ntdsapi.DsBindWithCred(_In_opt_ LPCTSTR DomainControllerName,_In_opt_ LPCTSTR DnsDomainName,_In_opt_ RPC_AUTH_IDENTITY_HANDLE AuthIdentity,_Out_ HANDLE *phDS)
DWORD None ntdsapi.DsBindWithCredW(_In_opt_ LPCTSTR DomainControllerName,_In_opt_ LPCTSTR DnsDomainName,_In_opt_ RPC_AUTH_IDENTITY_HANDLE AuthIdentity,_Out_ HANDLE *phDS)
DWORD None ntdsapi.DsBindWithCredA(_In_opt_ LPCTSTR DomainControllerName,_In_opt_ LPCTSTR DnsDomainName,_In_opt_ RPC_AUTH_IDENTITY_HANDLE AuthIdentity,_Out_ HANDLE *phDS)
DWORD None ntdsapi.DsWriteAccountSpn(_In_ HANDLE hDS,_In_ DS_SPN_WRITE_OP Operation,_In_ LPCTSTR pszAccount,_In_ DWORD cSpn,_In_ LPCTSTR *rpszSpn)
DWORD None ntdsapi.DsWriteAccountSpnW(_In_ HANDLE hDS,_In_ DS_SPN_WRITE_OP Operation,_In_ LPCTSTR pszAccount,_In_ DWORD cSpn,_In_ LPCTSTR *rpszSpn)
DWORD None ntdsapi.DsWriteAccountSpnA(_In_ HANDLE hDS,_In_ DS_SPN_WRITE_OP Operation,_In_ LPCTSTR pszAccount,_In_ DWORD cSpn,_In_ LPCTSTR *rpszSpn)
HRESULT None mstscax.get_TransportSettings3([out None None,retval] IMsRdpClientTransportSettings3 **ppXportSet3)
DWORD None ntdsapi.DsBindingSetTimeout(_In_ HANDLE hDS,_In_ ULONG cTimeoutSecs)
HRESULT None None.get_Players(IWMSPlayers** pVal None)
HRESULT None mstscax.get_TransportSettings2([out] IMsRdpClientTransportSettings2 **ppXportSet2)
HRESULT None None.get_Size([out] CY *pSize)
HRESULT None None.get_Authenticators(IWMSPlugins** pVal None)
HRESULT None mstscax.get_SecuredSettingsEnabled([out] BOOL *pSecuredSettingsEnabled)
HRESULT None None.GetFlags(long* pFlags None)
public void None.InitializePlugin(IWMSContext pServerContext None,WMSNamedValues pNamedValues None,IWMSClassObject pClassFactory None)
HRESULT None None.get_PlaylistParsers(IWMSPlugins** pVal None)
HRESULT None mstscax.get_Version([out] BSTR *pVersion)
HRESULT None None.put_DefaultPluginLoadType(WMS_PLUGIN_LOAD_TYPE val None)
HRESULT None mstscax.get_AdvancedSettings8([out None None,retval] IMsRdpClientAdvancedSettings7 **ppAdvSettings)
HRESULT None mstscax.get_SecuredSettings([out] IMsTscSecuredSettings **ppSecuredSettings)
DWORD None ntdsapi.DsListServersForDomainInSite(_In_ HANDLE hDs,_In_ LPTSTR domain,_In_ LPTSTR site,_Out_ PDS_NAME_RESULT *ppServers)
DWORD None ntdsapi.DsListServersForDomainInSiteW(_In_ HANDLE hDs,_In_ LPTSTR domain,_In_ LPTSTR site,_Out_ PDS_NAME_RESULT *ppServers)
DWORD None ntdsapi.DsListServersForDomainInSiteA(_In_ HANDLE hDs,_In_ LPTSTR domain,_In_ LPTSTR site,_Out_ PDS_NAME_RESULT *ppServers)
HRESULT None mstscax.get_AdvancedSettings2([out] IMsRdpClientAdvancedSettings **ppAdvSettings)
HRESULT None None.put_FECPacketSpan(long Val None)
HRESULT None None.CreatePlaylist(IXMLDOMDocument** ppPlaylist None)
void None None.OnRemoteDesktopSizeChanged(LONG width None,LONG height None)
HRESULT None None.get_Version(BSTR* pbstrVal None)
HRESULT None None.ApplySettings([in] BSTR rdpFileContents)
HRESULT None None.get_PublishingPoints(IWMSPublishingPoints** pVal None)
HRESULT None None.get_UnicastDataSinks(IWMSPlugins** pVal None)
DWORD None ntdsapi.DsReplicaGetInfo2(_In_ HANDLE hDS,_In_ DS_REPL_INFO_TYPE InfoType,_In_opt_ LPCWSTR pszObject,_In_opt_ UUID *puuidForSourceDsaObjGuid,_In_opt_ LPCWSTR pszAttributeName,_In_opt_ LPCWSTR pszValue,_In_ DWORD dwFlags,_In_ DWORD dwEnumerationContext,_Out_ VOID **ppInfo)
DWORD None ntdsapi.DsReplicaGetInfo2W(_In_ HANDLE hDS,_In_ DS_REPL_INFO_TYPE InfoType,_In_opt_ LPCWSTR pszObject,_In_opt_ UUID *puuidForSourceDsaObjGuid,_In_opt_ LPCWSTR pszAttributeName,_In_opt_ LPCWSTR pszValue,_In_ DWORD dwFlags,_In_ DWORD dwEnumerationContext,_Out_ VOID **ppInfo)
HRESULT None mstscax.get_SecuredSettings([out] IMsTscSecuredSettings **ppSecuredSettings)
HRESULT None None.put_DefaultPath(BSTR newVal None)
BOOL None None.IS_POINTER_PRIMARYBUTTON_WPARAM(WPARAM wParam None)
HRESULT None None.RetrieveSettings([out None None,retval] BSTR *rdpFileContents)
HRESULT None None.get_Properties(IWMSNamedValues** pVal None)
HRESULT None mstscax.get_AuthenticationType([out] UINT *puiAuthType)
HRESULT None None.get_CPUUtilization(long* pVal None)
HRESULT None None.put_PerOutgoingDistributionConnectionBandwidth(long newVal None)
HRESULT None None.put_OutgoingDistributionBandwidth(long newVal None)
HRESULT None mstscax.RequestClose([out] ControlCloseStatus *pCloseStatus)
HRESULT None None.GetStringValue(LPCWSTR pstrName None,long lNameHint None,LPWSTR* pstrValue None,long lOptions None)
HRESULT None mstscax.get_SecuredSettings([out] IMsTscSecuredSettings **ppSecuredSettings)
HRESULT None None.get_Charset([out] SHORT *pCharset)
HRESULT None None.GetAndQueryIUnknownValue(LPCWSTR pstrName None,long lNameKey None,REFIID riid None,IUnknown** pResult None,long lOptions None)
HRESULT None None.GetFilterPluginStore([out] ITsSbFilterPluginStore **ppStore)
HRESULT None None.get_CacheProxy(IWMSPlugins** pVal None)
HRESULT None None.GetContextType(WMS_CONTEXT_TYPE* pType None)
HRESULT None None.get_EnableReverseProxyMode(VARIANT_BOOL* pVal None)
HRESULT None None.get_DefaultPluginLoadType(WMS_PLUGIN_LOAD_TYPE* pVal None)
HRESULT None None.put_PerPlayerRapidStartBandwidth(long newVal None)
HRESULT None None.get_AllowClientsToConnect(VARIANT_BOOL* pVal None)
public void None.EnablePlugin(ref int plFlags,ref int plHeartbeatPeriod)
HRESULT None None.get_PerOutgoingDistributionConnectionBandwidth(long* pVal None)
HRESULT None None.get_AvailableIPAddresses(IWMSAvailableIPAddresses** ppIPAddrList None)
HRESULT None None.get_OutgoingDistributionBandwidth(long* pVal None)
HRESULT None None.SetValue(LPCWSTR pstrName None,long lNameHint None,VARIANT Value None,long lOptions None)
HRESULT None None.put_PerPlayerConnectionBandwidth(long newVal None)
HRESULT None None.get_Limits(IWMSServerLimits** pVal None)
HRESULT None None.SetRdpProperty([in] BSTR propertyName,[in] VARIANT value)
HRESULT None None.get_ConnectedPlayers(long* pVal None)
HRESULT None None.put_PlayerCacheDeliveryRate(long Val None)
HRESULT None None.get_ConnectedPlayers(long* pVal None)
HRESULT None None.get_MonikerName(BSTR* pbstrVal None)
HRESULT None None.put_AllowClientsToConnect(VARIANT_BOOL newVal None)
HRESULT None None.GetIndexedValue(long lIndex None,LPWSTR* pstrName None,long* plNameHint None,VARIANT* pValue None,long* plResultOptions None,long lOptions None)
HRESULT None None.GetRdpProperty([in] BSTR propertyName,[out None None,retval] VARIANT *pValue)
HRESULT None None.SetLongValue(LPCWSTR pstrName None,long lNameHint None,long lValue None,long lOptions None)
HRESULT None None.get_FileDescriptions(BSTR path None,WMS_FILE_TYPE Type None,IWMSFileDescriptions** pVal None)
HRESULT None None.get_PerPlayerConnectionBandwidth(long* pVal None)
HRESULT None None.get_FileType(BSTR path None,WMS_FILE_TYPE* pVal None)
BOOL None None.GET_POINTERID_WPARAM(WPARAM wParam None)
HRESULT None None.put_EnableReverseProxyMode(VARIANT_BOOL val None)
HRESULT None None.SetStringValue(LPCWSTR pstrName None,long lNameHint None,LPCWSTR pstrValue None,long lOptions None)
HRESULT None None.GetPlaylistGenerationID(DWORD* pdwID None)
HRESULT None None.get_Name(BSTR* pVal None)
HRESULT None None.DownloadContent(BSTR bstrSrcURL None,BSTR bstrDestFile None,long lContentSizeLow None,long lContentSizeHigh None,long lBitRate None)
HRESULT None None.get_OutgoingDistributionAllocatedBandwidth(long* pVal None)
HRESULT None None.get_MediaParsers(IWMSPlugins** pVal None)
HRESULT None None.get_StreamingPlayers(long* pVal None)
HRESULT None None.SetPlaylistGenerationID(DWORD dwID None)
HRESULT None None.get_UDPResendRequests(long* pVal None)
HRESULT None None.put_PlayerBandwidth(long newVal None)
HRESULT None None.get_Status(WMS_SERVER_STATUS* pVal None)
HRESULT None None.GetIntegerAttribute(DWORD dwAttributeId None,DWORD* pdwAttribute None)
HRESULT None None.get_FileDescriptions(BSTR RelativePath None,IWMSFileDescriptions** pVal None)
HRESULT None None.get_DataSources(IWMSPlugins** pVal None)
HRESULT None None.get_StreamFilters(IWMSPlugins** pVal None)
HRESULT None None.get_Status(WMS_CLIENT_STATUS* pVal None)
HRESULT None None.get_PlayerCacheDeliveryRate(long* pVal None)
HRESULT None None.get_UDPResendRequests(long* pVal None)
HRESULT None None.get_StreamingPlayers(long* pVal None)
HRESULT None None.get_UDPResendsSentRate(long* pVal None)
HRESULT None None.ExportXML(BSTR bstrXMLFileName None)
HRESULT None None.GetCommandResponse(IWMSContext** ppProps None)
HRESULT None None.get_EventHandlers(IWMSPlugins** pVal None)
HRESULT None None.get_OutgoingDistributionConnections(IWMSOutgoingDistributionConnections** pVal None)
HRESULT None None.get_ConnectedPlayers(long* pVal None)
HRESULT None None.GetFormat(GUID* pFormat None)
HRESULT None None.SetFormat(GUID Format None)
HRESULT None None.SetStreamType(GUID StreamType None)
HRESULT None None.get_Count(long* pVal None)
HRESULT None None.SetExtendedAttribute(DWORD dwValueName None,VARIANT VariantValue None)
HRESULT None None.GetLength(DWORD* pdwLength None)
HRESULT None None.get_LateSendRate(long* pVal None)
HRESULT None None.get_UDPResendRequestsRate(long* pVal None)
HRESULT None None.GetExtendedAttribute(DWORD dwValueName None,VARIANT* pVariantValue None)
HRESULT None None.get_CPUUtilizationDuringConnection(long* pVal None)
HRESULT None None.OnGetStreamInfo(HRESULT hr None,IWMSStreamHeaderList* pHeaderList None,IWMSContentDescriptionList* pContentDescription None,QWORD qwContext None)
HRESULT None None.get_EnableFEC(VARIANT_BOOL* pVal None)
HRESULT None None.get_StreamingHTTPPlayers(long* pVal None)
HRESULT None None.GetCredentials(IWMSContext* pUserContext None,BSTR bstrRealm None,BSTR bstrURL None,BSTR* pbstrName None,BSTR* pbstrPassword None)
HRESULT None None.put_Path(BSTR newVal None)
HRESULT None None.get_DefaultPath(BSTR* pVal None)
HRESULT None None.get_IsDistributionPasswordSet(VARIANT_BOOL* pVal None)
HRESULT None None.get_LateSendRate(long* pVal None)
HRESULT None None.get_StreamingMMSPlayers(long* pVal None)
HRESULT None None.EnablePlugin(long* plFlags None,long* plHeartbeatPeriod None)
HRESULT None None.get_OutgoingDistributionConnections(IWMSOutgoingDistributionConnections** pVal None)
HRESULT None None.ReadPlaylist(INSSBuffer* pBuffer None,IXMLDOMDocument* pPlaylist None,IWMSPlaylistParserCallback* pCallback None,QWORD qwContext None)
HRESULT None None.SetAttribute(DWORD ValueName None,DWORD dwValue None)
NET_API_STATUS None netapi32.NetGroupAdd(_In_ LPCWSTR servername,_In_ DWORD level,_In_ LPBYTE buf,_Out_ LPDWORD parm_err)
HRESULT None None.get_WrapperPath(BSTR* pVal None)
HRESULT None None.CreateInstance(REFIID riid None,void** ppunk None)
HRESULT None None.get_ConnectionQueue(long* pVal None)
HRESULT None None.GetAllPackets(DWORD dwFirstPacket None,DWORD dwMaxNumPackets None,WMSPACKETDESC* pPacketDesc None,IWMSPacket** ppPacket None,DWORD* pdwDescNum None,DWORD dwExFlags None)
HRESULT None None.get_FileReadRate(long* pVal None)
HRESULT None None.put_Name(BSTR newVal None)
NET_API_STATUS None netapi32.NetServerEnum(_In_opt_ LPCWSTR servername,_In_ DWORD level,_Out_ LPBYTE *bufptr,_In_ DWORD prefmaxlen,_Out_ LPDWORD entriesread,_Out_ LPDWORD totalentries,_In_ DWORD servertype,_In_opt_ LPCWSTR domain,_Inout_opt_ LPDWORD resume_handle)
NET_API_STATUS None netapi32.NetUnjoinDomain(_In_ LPCWSTR lpServer,_In_ LPCWSTR lpAccount,_In_ LPCWSTR lpPassword,_In_ DWORD fUnjoinOptions)
HRESULT None None.get_OutgoingDistributionSendRate(long* pVal None)
HRESULT None None.get_ConnectedPlayers(long* pVal None)
HRESULT None None.get_StreamErrorRate(long* pVal None)
HRESULT None None.put_WrapperPath(BSTR newVal None)
NET_API_STATUS None netapi32.NetLocalGroupDel(_In_ LPCWSTR servername,_In_ LPCWSTR groupname)
NET_API_STATUS None netapi32.NetUserChangePassword(_In_ LPCWSTR domainname,_In_ LPCWSTR username,_In_ LPCWSTR oldpassword,_In_ LPCWSTR newpassword)
HRESULT None None.AllocatePageSizeBuffer(DWORD dwMaxBufferSize None,INSSBuffer** ppBuffer None)
HRESULT None None.put_CacheProxyExpiration(long newVal None)
HRESULT None None.get_LateReadRate(long* pVal None)
BOOL WINAPI crypt32.CertSetCertificateContextPropertiesFromCTLEntry(_In_ PCCERT_CONTEXT pCertContext,_In_ PCTL_ENTRY pCtlEntry,_In_ DWORD dwFlags)
HRESULT None certadm.CertSrvBackupTruncateLogs(_In_ HCSBC hbc)
NET_API_STATUS None netapi32.NetServerGetInfo(_In_ LPWSTR servername,_In_ DWORD level,_Out_ LPBYTE *bufptr)
NET_API_STATUS None netapi32.NetUseEnum(_In_ LMSTR UncServerName,_In_ DWORD Level,_Out_ LPBYTE *BufPtr,_In_ DWORD PreferedMaximumSize,_Out_ LPDWORD EntriesRead,_Out_ LPDWORD TotalEntries,_Inout_ LPDWORD ResumeHandle)
BOOL WINAPI mssign32.GetCryptProvFromCert(_In_ HWND hwnd,_In_ PCCERT_CONTEXT pCert,_Out_ HCRYPTPROV *phCryptProv,_Out_ DWORD *pdwKeySpec,_In_ BOOL *pfDidCryptAcquire,_Out_opt_ LPWSTR *ppwszTmpContainer,_Out_opt_ LPWSTR *ppwszProviderName,_Out_ DWORD *pdwProviderType)
NET_API_STATUS None netapi32.NetUseAdd(_In_ LMSTR UncServerName,_In_ DWORD Level,_In_ LPBYTE Buf,_Out_ LPDWORD ParmError)
BOOL WINAPI crypt32.CertSerializeCTLStoreElement(_In_ PCCTL_CONTEXT pCtlContext,_In_ DWORD dwFlags,_Out_ BYTE *pbElement,_Inout_ DWORD *pcbElement)
PCERT_RDN_ATTR WINAPI crypt32.CertFindRDNAttr(_In_ LPCSTR pszObjId,_In_ PCERT_NAME_INFO pName)
NET_API_STATUS None netapi32.NetRemoveAlternateComputerName(_In_opt_ LPCWSTR Server,_In_ LPCWSTR AlternateName,_In_opt_ LPCWSTR DomainAccount,_In_opt_ LPCWSTR DomainAccountPassword,_In_ ULONG Reserved)
DWORD WINAPI crypt32.CertNameToStr(_In_ DWORD dwCertEncodingType,_In_ PCERT_NAME_BLOB pName,_In_ DWORD dwStrType,_Out_ LPTSTR psz,_In_ DWORD csz)
DWORD WINAPI crypt32.CertNameToStrW(_In_ DWORD dwCertEncodingType,_In_ PCERT_NAME_BLOB pName,_In_ DWORD dwStrType,_Out_ LPTSTR psz,_In_ DWORD csz)
DWORD WINAPI crypt32.CertNameToStrA(_In_ DWORD dwCertEncodingType,_In_ PCERT_NAME_BLOB pName,_In_ DWORD dwStrType,_Out_ LPTSTR psz,_In_ DWORD csz)
BOOL WINAPI None.CertStoreProvDeleteCRLCallback(_In_ HCERTSTOREPROV hStoreProv,_In_ PCCRL_CONTEXT pCrlContext,_In_ DWORD dwFlags)
LONG WINAPI wintrust.WTHelperGetFileHash(_In_ LPCWSTR pwszFilename,_In_ DWORD dwFlags,_Inout_opt_ PVOID pvReserved,_Out_opt_ BYTE *pbFileHash,_Inout_opt_ DWORD *pcbFileHash,_Out_opt_ ALG_ID *pHashAlgid)
HRESULT None None.get_CountersStartTime(DATE* pVal None)
BOOL WINAPI crypt32.CertDeleteCRLFromStore(_In_ PCCRL_CONTEXT pCrlContext)
HRESULT None None.get_CacheProxyExpiration(long* pVal None)
NET_API_STATUS None netapi32.NetGroupSetUsers(_In_ LPCWSTR servername,_In_ LPCWSTR groupname,_In_ DWORD level,_In_ LPBYTE buf,_In_ DWORD totalentries)
NET_API_STATUS None netapi32.NetValidatePasswordPolicy(_In_ LPCWSTR ServerName,_In_ LPVOID Qualifier,_In_ NET_VALIDATE_PASSWORD_TYPE ValidationType,_In_ LPVOID InputArg,_Out_ LPVOID OutputArg)
BOOL WINAPI crypt32.CryptUpdateProtectedState(_In_ PSID pOldSid,_In_ LPCWSTR pwszOldPassword,_In_ DWORD dwFlags,_Out_ DWORD *pdwSuccessCount,_Out_ DWORD *pdwFailureCount)
NET_API_STATUS None netapi32.NetUserAdd(_In_ LMSTR servername,_In_ DWORD level,_In_ LPBYTE buf,_Out_ LPDWORD parm_err)
NET_API_STATUS None netapi32.NetGroupEnum(_In_ LPCWSTR servername,_In_ DWORD level,_Out_ LPBYTE *bufptr,_In_ DWORD prefmaxlen,_Out_ LPDWORD entriesread,_Out_ LPDWORD totalentries,_Inout_ PDWORD_PTR resume_handle)
NET_API_STATUS None netapi32.NetApiBufferReallocate(_In_ LPVOID OldBuffer,_In_ DWORD NewByteCount,_Out_ LPVOID *NewBuffer)
HRESULT None mstask.GetNetScheduleAccountInformation(_In_ LPCWSTR pwszServerName,_In_ DWORD ccAccount,_Out_ WCHAR wszAccount[])
NET_API_STATUS None netapi32.NetLocalGroupAddMembers(_In_ LPCWSTR servername,_In_ LPCWSTR groupname,_In_ DWORD level,_In_ LPBYTE buf,_In_ DWORD totalentries)
HRESULT None wintrust.WinVerifyTrustEx(_In_ HWND hwnd,_In_ GUID *pgActionID,_In_ WINTRUST_DATA *pWinTrustData)
NET_API_STATUS None netapi32.NetRemoteComputerSupports(_In_ LPCWSTR UncServerName,_In_ DWORD OptionsWanted,_Out_ LPDWORD OptionsSupported)
NET_API_STATUS None netapi32.NetScheduleJobDel(_In_opt_ LPCWSTR Servername,_In_ DWORD MinJobId,_In_ DWORD MaxJobId)
NET_API_STATUS None netapi32.NetGetDisplayInformationIndex(_In_ LPCWSTR ServerName,_In_ DWORD Level,_In_ LPCWSTR Prefix,_Out_ LPDWORD Index)
BOOL WINAPI None.CertStoreProvReadCertCallback(_In_ HCERTSTOREPROV hStoreProv,_In_ PCCERT_CONTEXT pStoreCertContext,_In_ DWORD dwFlags,_Out_ PCCERT_CONTEXT *ppProvCertContext)
BOOLEAN None advapi32.RtlGenRandom(_Out_ PVOID RandomBuffer,_In_ ULONG RandomBufferLength)
NET_API_STATUS None netapi32.NetRemoteTOD(_In_ LPCWSTR UncServerName,_Out_ LPBYTE *BufferPtr)
DWORD WINAPI crypt32.CertOIDToAlgId(_In_ LPCSTR pszObjId)
BOOL WINAPI crypt32.CryptSIPCreateIndirectData(_In_ SIP_SUBJECTINFO *pSubjectInfo,_Inout_ DWORD *pcbIndirectData,_Out_ SIP_INDIRECT_DATA *pIndirectData)
BOOL WINAPI advapi32.CryptContextAddRef(_In_ HCRYPTPROV hProv,_In_ DWORD *pdwReserved,_In_ DWORD dwFlags)
BOOL WINAPI advapi32.CryptSetProvider(_In_ LPCTSTR pszProvName,_In_ DWORD dwProvType)
BOOL WINAPI advapi32.CryptSetProviderW(_In_ LPCTSTR pszProvName,_In_ DWORD dwProvType)
BOOL WINAPI advapi32.CryptSetProviderA(_In_ LPCTSTR pszProvName,_In_ DWORD dwProvType)
NET_API_STATUS None netapi32.NetWkstaGetInfo(_In_ LPWSTR servername,_In_ DWORD level,_Out_ LPBYTE *bufptr)
BOOL WINAPI crypt32.CertGetIntendedKeyUsage(_In_ DWORD dwCertEncodingType,_In_ PCERT_INFO pCertInfo,_Out_ BYTE *pbKeyUsage,_In_ DWORD cbKeyUsage)
HRESULT None None.get_ErrorCode(long* pVal None)
NET_API_STATUS None netapi32.NetGetDCName(_In_ LPCWSTR servername,_In_ LPCWSTR domainname,_Out_ LPBYTE *bufptr)
BOOL WINAPI crypt32.CertGetEnhancedKeyUsage(_In_ PCCERT_CONTEXT pCertContext,_In_ DWORD dwFlags,_Out_ PCERT_ENHKEY_USAGE pUsage,_Inout_ DWORD *pcbUsage)
BOOL WINAPI advapi32.CryptHashSessionKey(_In_ HCRYPTHASH hHash,_In_ HCRYPTKEY hKey,_In_ DWORD dwFlags)
BOOL WINAPI advapi32.CryptGetKeyParam(_In_ HCRYPTKEY hKey,_In_ DWORD dwParam,_Out_ BYTE *pbData,_Inout_ DWORD *pdwDataLen,_In_ DWORD dwFlags)
PCCTL_CONTEXT WINAPI crypt32.CertEnumCTLsInStore(_In_ HCERTSTORE hCertStore,_In_ PCCTL_CONTEXT pPrevCtlContext)
BOOL WINAPI advapi32.CryptDestroyHash(_In_ HCRYPTHASH hHash)
BOOL WINAPI advapi32.CryptVerifySignature(_In_ HCRYPTHASH hHash,_In_ BYTE *pbSignature,_In_ DWORD dwSigLen,_In_ HCRYPTKEY hPubKey,_In_ LPCTSTR sDescription,_In_ DWORD dwFlags)
BOOL WINAPI advapi32.CryptVerifySignatureW(_In_ HCRYPTHASH hHash,_In_ BYTE *pbSignature,_In_ DWORD dwSigLen,_In_ HCRYPTKEY hPubKey,_In_ LPCTSTR sDescription,_In_ DWORD dwFlags)
BOOL WINAPI advapi32.CryptVerifySignatureA(_In_ HCRYPTHASH hHash,_In_ BYTE *pbSignature,_In_ DWORD dwSigLen,_In_ HCRYPTKEY hPubKey,_In_ LPCTSTR sDescription,_In_ DWORD dwFlags)
NET_API_STATUS None netapi32.NetServerComputerNameDel(_In_ LPWSTR ServerName,_In_ LPWSTR EmulatedServerName)
BOOL WINAPI crypt32.CertGetCertificateChain(_In_opt_ HCERTCHAINENGINE hChainEngine,_In_ PCCERT_CONTEXT pCertContext,_In_opt_ LPFILETIME pTime,_In_ HCERTSTORE hAdditionalStore,_In_ PCERT_CHAIN_PARA pChainPara,_In_ DWORD dwFlags,_In_ LPVOID pvReserved,_Out_ PCCERT_CHAIN_CONTEXT *ppChainContext)
BOOL WINAPI crypt32.CertVerifyValidityNesting(_In_ PCERT_INFO pSubjectInfo,_In_ PCERT_INFO pIssuerInfo)
PCCERT_CONTEXT WINAPI wintrust.WTHelperCertFindIssuerCertificate(_In_ PCCERT_CONTEXT pChildContext,_In_ DWORD chStores,_In_ HCERTSTORE *pahStores,_In_ FILETIME *psftVerifyAsOf,_In_ DWORD dwEncoding,_Out_opt_ DWORD *pdwConfidence,_Out_ DWORD *dwError)
BOOL WINAPI crypt32.PFXExportCertStore(_In_ HCERTSTORE hStore,_Inout_ CRYPT_DATA_BLOB *pPFX,_In_ LPCWSTR szPassword,_In_ DWORD dwFlags)
BOOL WINAPI crypt32.CryptUnprotectMemory(_Inout_ LPVOID pData,_In_ DWORD cbData,_In_ DWORD dwFlags)
BOOL WINAPI advapi32.CryptSetProviderEx(_In_ LPCTSTR pszProvName,_In_ DWORD dwProvType,_In_ DWORD *pdwReserved,_In_ DWORD dwFlags)
BOOL WINAPI advapi32.CryptSetProviderExW(_In_ LPCTSTR pszProvName,_In_ DWORD dwProvType,_In_ DWORD *pdwReserved,_In_ DWORD dwFlags)
BOOL WINAPI advapi32.CryptSetProviderExA(_In_ LPCTSTR pszProvName,_In_ DWORD dwProvType,_In_ DWORD *pdwReserved,_In_ DWORD dwFlags)
BOOL WINAPI crypt32.CertSetEnhancedKeyUsage(_In_ PCCERT_CONTEXT pCertContext,_In_ PCERT_ENHKEY_USAGE pUsage)
BOOL WINAPI crypt32.CertFreeCTLContext(_In_ PCCTL_CONTEXT pCtlContext)
BOOL WINAPI advapi32.CryptGenKey(_In_ HCRYPTPROV hProv,_In_ ALG_ID Algid,_In_ DWORD dwFlags,_Out_ HCRYPTKEY *phKey)
BOOL WINAPI crypt32.CryptMsgGetAndVerifySigner(_In_ HCRYPTMSG hCryptMsg,_In_ DWORD cSignerStore,_In_opt_ HCERTSTORE *rghSignerStore,_In_ DWORD dwFlags,_Out_opt_ PCCERT_CONTEXT *ppSigner,_Inout_opt_ DWORD *pdwSignerIndex)
BOOL WINAPI advapi32.CryptSignHash(_In_ HCRYPTHASH hHash,_In_ DWORD dwKeySpec,_In_ LPCTSTR sDescription,_In_ DWORD dwFlags,_Out_ BYTE *pbSignature,_Inout_ DWORD *pdwSigLen)
BOOL WINAPI advapi32.CryptSignHashW(_In_ HCRYPTHASH hHash,_In_ DWORD dwKeySpec,_In_ LPCTSTR sDescription,_In_ DWORD dwFlags,_Out_ BYTE *pbSignature,_Inout_ DWORD *pdwSigLen)
BOOL WINAPI advapi32.CryptSignHashA(_In_ HCRYPTHASH hHash,_In_ DWORD dwKeySpec,_In_ LPCTSTR sDescription,_In_ DWORD dwFlags,_Out_ BYTE *pbSignature,_Inout_ DWORD *pdwSigLen)
HRESULT WINAPI cryptxml.CryptXmlImportPublicKey(DWORD dwFlags None,_In_ CRYPT_XML_KEY_VALUE *pKeyValue,_Out_ BCRYPT_KEY_HANDLE *phKey)
HRESULT WINAPI mssign32.SignerSignEx(_In_ DWORD dwFlags,_In_ SIGNER_SUBJECT_INFO *pSubjectInfo,_In_ SIGNER_CERT *pSignerCert,_In_ SIGNER_SIGNATURE_INFO *pSignatureInfo,_In_opt_ SIGNER_PROVIDER_INFO *pProviderInfo,_In_opt_ LPCWSTR pwszHttpTimeStamp,_In_opt_ PCRYPT_ATTRIBUTES psRequest,_In_opt_ LPVOID pSipData,_Out_ SIGNER_CONTEXT **ppSignerContext)
BOOL WINAPI crypt32.CertCompareIntegerBlob(_In_ PCRYPT_INTEGER_BLOB pInt1,_In_ PCRYPT_INTEGER_BLOB pInt2)
NET_API_STATUS None netapi32.NetUserSetInfo(_In_ LPCWSTR servername,_In_ LPCWSTR username,_In_ DWORD level,_In_ LPBYTE buf,_Out_ LPDWORD parm_err)
HRESULT WINAPI cryptxml.CryptXmlGetStatus(HCRYPTXML hCryptXml None,CRYPT_XML_STATUS *pStatus None)
DWORD None cryptdlg.GetFriendlyNameOfCert(_In_ PCCERT_CONTEXT pccert,_Out_ LPTSTR pchBuffer,_In_ DWORD cchBuffer)
DWORD None cryptdlg.GetFriendlyNameOfCertW(_In_ PCCERT_CONTEXT pccert,_Out_ LPTSTR pchBuffer,_In_ DWORD cchBuffer)
DWORD None cryptdlg.GetFriendlyNameOfCertA(_In_ PCCERT_CONTEXT pccert,_Out_ LPTSTR pchBuffer,_In_ DWORD cchBuffer)
BOOL WINAPI crypt32.CryptSIPVerifyIndirectData(_In_ SIP_SUBJECTINFO *pSubjectInfo,_In_ SIP_INDIRECT_DATA *pIndirectData)
BOOL WINAPI crypt32.CertFreeCertificateContext(_In_ PCCERT_CONTEXT pCertContext)
NET_API_STATUS None netapi32.NetWkstaUserSetInfo(LPWSTR reserved None,_In_ DWORD level,_In_ LPBYTE buf,_Out_ LPDWORD parm_err)
BOOL WINAPI advapi32.CryptEncrypt(_In_ HCRYPTKEY hKey,_In_ HCRYPTHASH hHash,_In_ BOOL Final,_In_ DWORD dwFlags,_Inout_ BYTE *pbData,_Inout_ DWORD *pdwDataLen,_In_ DWORD dwBufLen)
NET_API_STATUS None netapi32.NetLocalGroupAdd(_In_ LPCWSTR servername,_In_ DWORD level,_In_ LPBYTE buf,_Out_ LPDWORD parm_err)
BOOL WINAPI crypt32.CryptSIPGetCaps(_In_ SIP_SUBJECTINFO *pSubjInfo,_Inout_ SIP_CAP_SET *pCaps)
BOOL WINAPI crypt32.CryptRegisterOIDFunction(_In_ DWORD dwEncodingType,_In_ LPCSTR pszFuncName,_In_ LPCSTR pszOID,_In_ LPCWSTR pwszDll,_In_ LPCSTR pszOverrideFuncName)
PCERT_EXTENSION WINAPI crypt32.CertFindExtension(_In_ LPCSTR pszObjId,_In_ DWORD cExtensions,_In_ CERT_EXTENSION rgExtensions[])
NET_API_STATUS None netapi32.NetServerTransportAddEx(_In_ LPWSTR servername,_In_ DWORD level,_In_ LPBYTE bufptr)
DWORD WINAPI crypt32.CertRDNValueToStr(_In_ DWORD dwValueType,_In_ PCERT_RDN_VALUE_BLOB pValue,_Out_ LPTSTR psz,_In_ DWORD csz)
DWORD WINAPI crypt32.CertRDNValueToStrW(_In_ DWORD dwValueType,_In_ PCERT_RDN_VALUE_BLOB pValue,_Out_ LPTSTR psz,_In_ DWORD csz)
DWORD WINAPI crypt32.CertRDNValueToStrA(_In_ DWORD dwValueType,_In_ PCERT_RDN_VALUE_BLOB pValue,_Out_ LPTSTR psz,_In_ DWORD csz)
BOOL None wintrust.WintrustAddActionID(_In_ GUID *pgActionID,_In_ DWORD fdwFlags,_In_ CRYPT_REGISTER_ACTIONID *psProvInfo)
BOOL WINAPI advapi32.CryptImportKey(_In_ HCRYPTPROV hProv,_In_ BYTE *pbData,_In_ DWORD dwDataLen,_In_ HCRYPTKEY hPubKey,_In_ DWORD dwFlags,_Out_ HCRYPTKEY *phKey)
BOOL WINAPI advapi32.CryptEnumProviders(_In_ DWORD dwIndex,_In_ DWORD *pdwReserved,_In_ DWORD dwFlags,_Out_ DWORD *pdwProvType,_Out_ LPTSTR pszProvName,_Inout_ DWORD *pcbProvName)
BOOL WINAPI advapi32.CryptEnumProvidersW(_In_ DWORD dwIndex,_In_ DWORD *pdwReserved,_In_ DWORD dwFlags,_Out_ DWORD *pdwProvType,_Out_ LPTSTR pszProvName,_Inout_ DWORD *pcbProvName)
BOOL WINAPI advapi32.CryptEnumProvidersA(_In_ DWORD dwIndex,_In_ DWORD *pdwReserved,_In_ DWORD dwFlags,_Out_ DWORD *pdwProvType,_Out_ LPTSTR pszProvName,_Inout_ DWORD *pcbProvName)
BOOL WINAPI crypt32.CertCloseStore(_In_ HCERTSTORE hCertStore,_In_ DWORD dwFlags)
BOOL WINAPI cryptui.CryptUIWizImport(_In_ DWORD dwFlags,_In_ HWND hwndParent,_In_ LPCWSTR pwszWizardTitle,_In_ PCCRYPTUI_WIZ_IMPORT_SRC_INFO pImportSrc,_In_ HCERTSTORE hDestCertStore)
HRESULT WINAPI cryptxml.CryptXmlGetTransforms(_Out_ PCRYPT_XML_TRANSFORM_CHAIN_CONFIG **pConfig)
HRESULT WINAPI mssign32.SignerFreeSignerContext(_In_ SIGNER_CONTEXT *pSignerContext)
HRESULT None certadm.CertSrvRestoreGetDatabaseLocations(_In_ HCSBC hbc,_Out_ WCHAR **ppwszzDatabaseLocationList,_Out_ DWORD *pcbSize)
HRESULT None certadm.CertSrvRestoreGetDatabaseLocationsW(_In_ HCSBC hbc,_Out_ WCHAR **ppwszzDatabaseLocationList,_Out_ DWORD *pcbSize)
HCRYPTMSG WINAPI crypt32.CryptMsgOpenToDecode(_In_ DWORD dwMsgEncodingType,_In_ DWORD dwFlags,_In_ DWORD dwMsgType,_In_ HCRYPTPROV_LEGACY hCryptProv,_In_ PCERT_INFO pRecipientInfo,_In_opt_ PCMSG_STREAM_INFO pStreamInfo)
DWORD WINAPI crypt32.CertGetPublicKeyLength(_In_ DWORD dwCertEncodingType,_In_ PCERT_PUBLIC_KEY_INFO pPublicKey)
HRESULT WINAPI wintrust.WTHelperCertCheckValidSignature(CRYPT_PROVIDER_DATA *pProvData None)
HRESULT WINAPI mssign32.SignerTimeStampEx3(_In_ DWORD dwFlags,_In_ DWORD dwIndex,_In_ SIGNER_SUBJECT_INFO *pSubjectInfo,_In_ PCWSTR pwszHttpTimeStamp,_In_ PCWSTR pszAlgorithmOid,_In_opt_ PCRYPT_ATTRIBUTES psRequest,_In_opt_ PVOID pSipData,_Out_ SIGNER_CONTEXT **ppSignerContext,_In_opt_ PCERT_STRONG_SIGN_PARA pCryptoPolicy,_Reserved_ PVOID pReserved)
BOOL WINAPI crypt32.CertAddCertificateLinkToStore(_In_ HCERTSTORE hCertStore,_In_ PCCERT_CONTEXT pCertContext,_In_ DWORD dwAddDisposition,_Out_opt_ PCCERT_CONTEXT *ppStoreContext)
BOOL WINAPI crypt32.CryptSIPRemoveSignedDataMsg(_In_ SIP_SUBJECTINFO *pSubjectInfo,_In_ DWORD dwIndex)
NET_API_STATUS None netapi32.NetUserSetGroups(_In_ LPCWSTR servername,_In_ LPCWSTR username,_In_ DWORD level,_In_ LPBYTE buf,_In_ DWORD num_entries)
HRESULT None mstask.SetNetScheduleAccountInformation(_In_ LPCWSTR pwszServerName,_In_ LPCWSTR pwszAccount,_In_ LPCWSTR pwszPassword)
NET_API_STATUS None netapi32.NetWkstaUserEnum(_In_ LPWSTR servername,_In_ DWORD level,_Out_ LPBYTE *bufptr,_In_ DWORD prefmaxlen,_Out_ LPDWORD entriesread,_Out_ LPDWORD totalentries,_Inout_ LPDWORD resumehandle)
NET_API_STATUS None netapi32.NetUserModalsGet(_In_opt_ LPCWSTR servername,_In_ DWORD level,_Out_ LPBYTE *bufptr)
BOOL WINAPI crypt32.PFXIsPFXBlob(_In_ CRYPT_DATA_BLOB *pPFX)
BOOL WINAPI cryptnet.CryptGetObjectUrl(_In_ LPCSTR pszUrlOid,_In_ LPVOID pvPara,_In_ DWORD dwFlags,_Out_ PCRYPT_URL_ARRAY pUrlArray,_Inout_ DWORD *pcbUrlArray,_Out_ PCRYPT_URL_INFO pUrlInfo,_Inout_ DWORD *pcbUrlInfo,_Reserved_ LPVOID pvReserved)
BOOL WINAPI crypt32.CryptVerifyMessageHash(_In_ PCRYPT_HASH_MESSAGE_PARA pHashPara,_In_ BYTE *pbHashedBlob,_In_ DWORD cbHashedBlob,_Out_ BYTE *pbToBeHashed,_Inout_ DWORD *pcbToBeHashed,_Out_opt_ BYTE *pbComputedHash,_Inout_opt_ DWORD *pcbComputedHash)
NET_API_STATUS None netapi32.NetUserEnum(_In_ LPCWSTR servername,_In_ DWORD level,_In_ DWORD filter,_Out_ LPBYTE *bufptr,_In_ DWORD prefmaxlen,_Out_ LPDWORD entriesread,_Out_ LPDWORD totalentries,_Inout_ LPDWORD resume_handle)
HRESULT None certadm.CertSrvBackupGetDynamicFileList(_In_ HCSBC hbc,_Out_ WCHAR **ppwszzFileList,_Out_ DWORD *pcbSize)
HRESULT None certadm.CertSrvBackupGetDynamicFileListW(_In_ HCSBC hbc,_Out_ WCHAR **ppwszzFileList,_Out_ DWORD *pcbSize)
LPCSTR WINAPI crypt32.CertAlgIdToOID(_In_ DWORD dwAlgId)
PCRYPT_ATTRIBUTE WINAPI crypt32.CertFindAttribute(_In_ LPCSTR pszObjId,_In_ DWORD cAttr,_In_ CRYPT_ATTRIBUTE rgAttr[])
VOID WINAPI crypt32.CertCloseServerOcspResponse(_In_ HCERT_SERVER_OCSP_RESPONSE hServerOcspResponse,_In_ DWORD dwFlags)
BOOL WINAPI crypt32.CryptSIPRetrieveSubjectGuid(_In_ LPCWSTR FileName,_In_opt_ HANDLE hFileIn,_Out_ GUID *pgSubject)
HCRYPTMSG WINAPI crypt32.CryptMsgDuplicate(_In_ HCRYPTMSG hCryptMsg)
NET_API_STATUS None netapi32.NetLocalGroupSetMembers(_In_ LPCWSTR servername,_In_ LPCWSTR groupname,_In_ DWORD level,_In_ LPBYTE buf,_In_ DWORD totalentries)
BOOL WINAPI crypt32.CryptMsgSignCTL(_In_ DWORD dwMsgEncodingType,_In_ BYTE *pbCtlContent,_In_ DWORD cbCtlContent,_In_ PCMSG_SIGNED_ENCODE_INFO pSignInfo,_In_ DWORD dwFlags,_Out_ BYTE *pbEncoded,_Inout_ DWORD *pcbEncoded)
NET_API_STATUS None netapi32.NetLocalGroupSetInfo(_In_ LPCWSTR servername,_In_ LPCWSTR groupname,_In_ DWORD level,_In_ LPBYTE buf,_Out_ LPDWORD parm_err)
NET_API_STATUS None netapi32.NetGroupAddUser(_In_ LPCWSTR servername,_In_ LPCWSTR GroupName,_In_ LPCWSTR username)
BOOL WINAPI cryptui.CryptUIDlgViewSignerInfo(_In_ CRYPTUI_VIEWSIGNERINFO_STRUCT *pcvsi)
BOOL WINAPI cryptui.CryptUIDlgViewSignerInfoW(_In_ CRYPTUI_VIEWSIGNERINFO_STRUCT *pcvsi)
BOOL WINAPI cryptui.CryptUIDlgViewSignerInfoA(_In_ CRYPTUI_VIEWSIGNERINFO_STRUCT *pcvsi)
PCCRL_CONTEXT WINAPI crypt32.CertDuplicateCRLContext(_In_ PCCRL_CONTEXT pCrlContext)
BOOL None wintrust.CryptCATAdminRemoveCatalog(_In_ HCATADMIN hCatAdmin,_In_ LPCWSTR pwszCatalogFile,_In_ DWORD dwFlags)
BOOL WINAPI advapi32.CryptHashData(_In_ HCRYPTHASH hHash,_In_ BYTE *pbData,_In_ DWORD dwDataLen,_In_ DWORD dwFlags)
NET_API_STATUS None netapi32.NetServerSetInfo(_In_ LPWSTR servername,_In_ DWORD level,_In_ LPBYTE buf,_Out_ LPDWORD ParmError)
NET_API_STATUS None netapi32.NetMessageNameAdd(_In_ LPCWSTR servername,_In_ LPCWSTR msgname)
BOOL WINAPI crypt32.CryptExportPublicKeyInfo(_In_ HCRYPTPROV_OR_NCRYPT_KEY_HANDLE hCryptProvOrNCryptKey,_In_ DWORD dwKeySpec,_In_ DWORD dwCertEncodingType,_Out_ PCERT_PUBLIC_KEY_INFO pInfo,_Inout_ DWORD *pcbInfo)
VOID WINAPI crypt32.CertFreeCertificateChain(_In_ PCCERT_CHAIN_CONTEXT pChainContext)
NET_API_STATUS None netapi32.NetGetAnyDCName(_In_ LPCWSTR servername,_In_ LPCWSTR domainname,_Out_ LPBYTE *bufptr)
BOOL WINAPI crypt32.CertIsRDNAttrsInCertificateName(_In_ DWORD dwCertEncodingType,_In_ DWORD dwFlags,_In_ PCERT_NAME_BLOB pCertName,_In_ PCERT_RDN pRDN)
HANDLE WINAPI wintrust.CryptCATHandleFromStore(_In_ CRYPTCATSTORE *pCatStore)
HRESULT WINAPI mssign32.SignerSign(_In_ SIGNER_SUBJECT_INFO *pSubjectInfo,_In_ SIGNER_CERT *pSignerCert,_In_ SIGNER_SIGNATURE_INFO *pSignatureInfo,_In_opt_ SIGNER_PROVIDER_INFO *pProviderInfo,_In_opt_ LPCWSTR pwszHttpTimeStamp,_In_opt_ PCRYPT_ATTRIBUTES psRequest,_In_opt_ LPVOID pSipData)
PCCERT_CONTEXT WINAPI crypt32.CertGetIssuerCertificateFromStore(_In_ HCERTSTORE hCertStore,_In_ PCCERT_CONTEXT pSubjectContext,_In_opt_ PCCERT_CONTEXT pPrevIssuerContext,_Inout_ DWORD *pdwFlags)
HCATINFO None wintrust.CryptCATAdminAddCatalog(_In_ HCATADMIN hCatAdmin,_In_ WCHAR *pwszCatalogFile,_In_ WCHAR *pwszSelectBaseName,_In_ DWORD dwFlags)
BOOL WINAPI advapi32.CryptDecrypt(_In_ HCRYPTKEY hKey,_In_ HCRYPTHASH hHash,_In_ BOOL Final,_In_ DWORD dwFlags,_Inout_ BYTE *pbData,_Inout_ DWORD *pdwDataLen)
HRESULT None certadm.CertSrvBackupEnd(_In_ HCSBC hbc)
LPVOID WINAPI crypt32.CryptMemAlloc(_In_ ULONG cbSize)
NET_API_STATUS WINAPI netapi32.NetRequestProvisioningPackageInstall(_In_ BYTE *pPackageBinData,_In_ DWORD dwPackageBinDataSize,_In_ DWORD dwProvisionOptions,_In_ LPCWSTR lpWindowsPath,_Reserved_ PVOID pvReserved)
BOOL None wintrust.CryptCATCatalogInfoFromContext(_In_ HCATINFO hCatInfo,_Inout_ CATALOG_INFO *psCatInfo,_In_ DWORD dwFlags)
BOOL None wintrust.CryptCATAdminReleaseContext(_In_ HCATADMIN hCatAdmin,_In_ DWORD dwFlags)
NET_API_STATUS None netapi32.NetUserSetInfo(_In_ LPCWSTR servername,_In_ LPCWSTR username,_In_ DWORD level,_In_ LPBYTE buf,_Out_ LPDWORD parm_err)
BOOL WINAPI crypt32.CertAddCTLContextToStore(_In_ HCERTSTORE hCertStore,_In_ PCCTL_CONTEXT pCtlContext,_In_ DWORD dwAddDisposition,_Out_opt_ PCCTL_CONTEXT *ppStoreContext)
NET_API_STATUS None netapi32.NetGroupGetUsers(_In_ LPCWSTR servername,_In_ LPCWSTR groupname,_In_ DWORD level,_Out_ LPBYTE *bufptr,_In_ DWORD prefmaxlen,_Out_ LPDWORD entriesread,_Out_ LPDWORD totalentries,_Inout_ PDWORD_PTR ResumeHandle)
DWORD WINAPI crypt32.CertGetPublicKeyLength(_In_ DWORD dwCertEncodingType,_In_ PCERT_PUBLIC_KEY_INFO pPublicKey)
BOOL WINAPI wintrust.CryptCATCDFClose(_In_ CRYPTCATCDF *pCDF)
BOOL None wintrust.CryptCATAdminCalcHashFromFileHandle(_In_ HANDLE hFile,_Inout_ DWORD *pcbHash,_In_ BYTE *pbHash,_In_ DWORD dwFlags)
HRESULT None certadm.CertSrvRestoreRegisterComplete(_In_ HCSBC hbc,_In_ HRESULT hrRestoreState)
BOOL WINAPI crypt32.CryptMsgClose(_In_ HCRYPTMSG hCryptMsg)
NET_API_STATUS WINAPI netapi32.NetCreateProvisioningPackage(_In_ PNETSETUP_PROVISIONING_PARAMS pProvisioningParams,_Out_opt_ PBYTE *pPackageBinData,_Out_opt_ DWORD *pdwPackageBinDataSize,_Out_opt_ LPWSTR *pPackageTextData)
WINAPI None crypt32.CertFreeServerOcspResponseContext(_In_ PCCERT_SERVER_OCSP_RESPONSE_CONTEXT pServerOcspResponseContext)
BOOL WINAPI None.PFNCMFILTERPROC(_In_ PCCERT_CONTEXT pCertContext,_In_ DWORD lCustData,_In_ DWORD dwFlags,_In_ DWORD dwDisplayWell)
BOOL WINAPI crypt32.CertAddCTLLinkToStore(_In_ HCERTSTORE hCertStore,_In_ PCCTL_CONTEXT pCtlContext,_In_ DWORD dwAddDisposition,_Out_opt_ PCCTL_CONTEXT *ppStoreContext)
BOOL WINAPI advapi32.CryptReleaseContext(_In_ HCRYPTPROV hProv,_In_ DWORD dwFlags)
BOOL WINAPI cryptui.CryptUIWizFreeDigitalSignContext(_In_ PCCRYPTUI_WIZ_DIGITAL_SIGN_CONTEXT pSignContext)
BOOL WINAPI crypt32.CertIsStrongHashToSign(_In_ PCCERT_STRONG_SIGN_PARA pStrongSignPara,_In_ LPCWSTR pwszCNGHashAlgid,_In_opt_ PCCERT_CONTEXT pSigningCert)
BOOL WINAPI crypt32.CertVerifyCRLRevocation(_In_ DWORD dwCertEncodingType,_In_ PCERT_INFO pCertId,_In_ DWORD cCrlInfo,_In_ PCRL_INFO rgpCrlInfo[])
BOOL WINAPI None.CertStoreProvReadCTL(_In_ HCERTSTOREPROV hStoreProv,_In_ PCCTL_CONTEXT pStoreCtlContext,_In_ DWORD dwFlags,_Out_ PCCTL_CONTEXT *ppProvCtlContext)
VOID WINAPI crypt32.CertAddRefServerOcspResponseContext(_In_ PCCERT_SERVER_OCSP_RESPONSE_CONTEXT pServerOcspResponseContext)
HANDLE None wintrust.CryptCATOpen(_In_ LPWSTR pwszFileName,_In_ DWORD fdwOpenFlags,_In_ HCRYPTPROV hProv,_In_ DWORD dwPublicVersion,_In_ DWORD dwEncodingType)
BOOL WINAPI advapi32.CryptGetHashParam(_In_ HCRYPTHASH hHash,_In_ DWORD dwParam,_Out_ BYTE *pbData,_Inout_ DWORD *pdwDataLen,_In_ DWORD dwFlags)
LPVOID WINAPI crypt32.CryptMemRealloc(_In_ LPVOID pv,_In_ ULONG cbSize)
BOOL WINAPI crypt32.CryptMsgCountersign(_Inout_ HCRYPTMSG hCryptMsg,_In_ DWORD dwIndex,_In_ DWORD cCountersigners,_In_ PCMSG_SIGNER_ENCODE_INFO rgCountersigners)
BOOL WINAPI crypt32.CertComparePublicKeyInfo(_In_ DWORD dwCertEncodingType,_In_ PCERT_PUBLIC_KEY_INFO pPublicKey1,_In_ PCERT_PUBLIC_KEY_INFO pPublicKey2)
BOOL None wintrust.CryptCATClose(_In_ HANDLE hCatalog)
BOOL WINAPI crypt32.CertCompareCertificateName(_In_ DWORD dwCertEncodingType,_In_ PCERT_NAME_BLOB pCertName1,_In_ PCERT_NAME_BLOB pCertName2)
BOOL WINAPI crypt32.CryptUnregisterOIDFunction(_In_ DWORD dwEncodingType,_In_ LPCSTR pszFuncName,_In_ LPCSTR pszOID)
BOOL WINAPI crypt32.CertAddCRLContextToStore(_In_ HCERTSTORE hCertStore,_In_ PCCRL_CONTEXT pCrlContext,_In_ DWORD dwAddDisposition,_Out_opt_ PCCRL_CONTEXT *ppStoreContext)
BOOL WINAPI crypt32.CertAddCRLLinkToStore(_In_ HCERTSTORE hCertStore,_In_ PCCRL_CONTEXT pCrlContext,_In_ DWORD dwAddDisposition,_Out_opt_ PCCRL_CONTEXT *ppStoreContext)
BOOL WINAPI crypt32.CryptStringToBinary(_In_ LPCTSTR pszString,_In_ DWORD cchString,_In_ DWORD dwFlags,_In_ BYTE *pbBinary,_Inout_ DWORD *pcbBinary,_Out_ DWORD *pdwSkip,_Out_ DWORD *pdwFlags)
BOOL WINAPI crypt32.CryptStringToBinaryW(_In_ LPCTSTR pszString,_In_ DWORD cchString,_In_ DWORD dwFlags,_In_ BYTE *pbBinary,_Inout_ DWORD *pcbBinary,_Out_ DWORD *pdwSkip,_Out_ DWORD *pdwFlags)
BOOL WINAPI crypt32.CryptStringToBinaryA(_In_ LPCTSTR pszString,_In_ DWORD cchString,_In_ DWORD dwFlags,_In_ BYTE *pbBinary,_Inout_ DWORD *pcbBinary,_Out_ DWORD *pdwSkip,_Out_ DWORD *pdwFlags)
BOOL WINAPI crypt32.CryptSIPPutSignedDataMsg(_In_ SIP_SUBJECTINFO *pSubjectInfo,_In_ DWORD dwEncodingType,_Out_ DWORD *pdwIndex,_In_ DWORD cbSignedDataMsg,_In_ BYTE *pbSignedDataMsg)
BOOL WINAPI crypt32.CertCreateCertificateChainEngine(_In_ PCERT_CHAIN_ENGINE_CONFIG pConfig,_Out_ HCERTCHAINENGINE *phChainEngine)
BOOL WINAPI None.CertStoreProvWriteCTL(_In_ HCERTSTOREPROV hStoreProv,_In_ PCCTL_CONTEXT pCtlContext,_In_ DWORD dwFlags)
PCCRL_CONTEXT WINAPI crypt32.CertEnumCRLsInStore(_In_ HCERTSTORE hCertStore,_In_ PCCRL_CONTEXT pPrevCrlContext)
BOOL WINAPI advapi32.CryptEnumProviderTypes(_In_ DWORD dwIndex,_In_ DWORD *pdwReserved,_In_ DWORD dwFlags,_Out_ DWORD *pdwProvType,_Out_ LPTSTR pszTypeName,_Inout_ DWORD *pcbTypeName)
BOOL WINAPI advapi32.CryptEnumProviderTypesW(_In_ DWORD dwIndex,_In_ DWORD *pdwReserved,_In_ DWORD dwFlags,_Out_ DWORD *pdwProvType,_Out_ LPTSTR pszTypeName,_Inout_ DWORD *pcbTypeName)
BOOL WINAPI advapi32.CryptEnumProviderTypesA(_In_ DWORD dwIndex,_In_ DWORD *pdwReserved,_In_ DWORD dwFlags,_Out_ DWORD *pdwProvType,_Out_ LPTSTR pszTypeName,_Inout_ DWORD *pcbTypeName)
HCERTSTORE WINAPI crypt32.CertDuplicateStore(_In_ HCERTSTORE hCertStore)
BOOL WINAPI advapi32.CryptDeriveKey(_In_ HCRYPTPROV hProv,_In_ ALG_ID Algid,_In_ HCRYPTHASH hBaseData,_In_ DWORD dwFlags,_Inout_ HCRYPTKEY *phKey)
DWORD WINAPI crypt32.CertEnumCTLContextProperties(_In_ PCCTL_CONTEXT pCtlContext,_In_ DWORD dwPropId)
NTSTATUS None advapi32.RtlEncryptMemory(_Inout_ PVOID Memory,_In_ ULONG MemoryLength,_In_ ULONG OptionFlags)
DWORD WINAPI crypt32.CertEnumCRLContextProperties(_In_ PCCRL_CONTEXT pCrlContext,_In_ DWORD dwPropId)
BOOL WINAPI mssign32.PvkPrivateKeyAcquireContextFromMemory(_In_ LPCWSTR pwszProvName,_In_ DWORD dwProvType,_In_ BYTE *pbData,_In_ DWORD cbData,_In_ HWND hwndOwner,_In_ LPCWSTR pwszKeyName,_Inout_opt_ DWORD *pdwKeySpec,_Out_ HCRYPTPROV *phCryptProv,_Out_ LPTSTR *ppwszTmpContainer)
BOOL WINAPI crypt32.CryptFreeOIDFunctionAddress(_In_ HCRYPTOIDFUNCADDR hFuncAddr,_In_ DWORD dwFlags)
HRESULT None certadm.CertSrvBackupClose(_In_ HCSBC hbc)
BOOL WINAPI crypt32.CertSelectCertificateChains(_In_opt_ LPCGUID pSelectionContext,_In_ DWORD dwFlags,_In_opt_ PCCERT_SELECT_CHAIN_PARA pChainParameters,_In_ DWORD cCriteria,_In_opt_ PCCERT_SELECT_CRITERIA rgpCriteria,_In_ HCERTSTORE hStore,_Out_ PDWORD pcSelection,_Out_ PCCERT_CHAIN_CONTEXT **pprgpSelection)
BOOL WINAPI crypt32.CertAddEnhancedKeyUsageIdentifier(_In_ PCCERT_CONTEXT pCertContext,_In_ LPCSTR pszUsageIdentifier)
BOOL WINAPI advapi32.CryptGenRandom(_In_ HCRYPTPROV hProv,_In_ DWORD dwLen,_Inout_ BYTE *pbBuffer)
PCCERT_CONTEXT WINAPI crypt32.CertCreateSelfSignCertificate(_In_opt_ HCRYPTPROV_OR_NCRYPT_KEY_HANDLE hCryptProvOrNCryptKey,_In_ PCERT_NAME_BLOB pSubjectIssuerBlob,_In_ DWORD dwFlags,_In_opt_ PCRYPT_KEY_PROV_INFO pKeyProvInfo,_In_opt_ PCRYPT_ALGORITHM_IDENTIFIER pSignatureAlgorithm,_In_opt_ PSYSTEMTIME pStartTime,_In_opt_ PSYSTEMTIME pEndTime,PCERT_EXTENSIONS pExtensions None)
VOID WINAPI crypt32.CertFreeCertificateChainList(_In_ PCCERT_CHAIN_CONTEXT *prgpSelection)
BOOL WINAPI wintrust.OpenPersonalTrustDBDialogEx(_In_opt_ HWND hwndParent,_In_ DWORD dwFlags,_Inout_opt_ PVOID *pvReserved)
BOOL __cdecl instrsa5.GetEncSChannel(_Out_ BYTE **pData,_Out_ DWORD *dwDecSize)
HRESULT WINAPI mssign32.PvkGetCryptProv(_In_ HWND hwnd,_In_ LPCWSTR pwszCaption,_In_ LPCWSTR pwszCapiProvider,_In_ DWORD dwProviderType,_In_ LPCWSTR pwszPvkFile,_In_ LPCWSTR pwszKeyContainerName,_Out_ DWORD *pdwKeySpec,_Out_opt_ LPWSTR *ppwszTmpContainer,_Out_ HCRYPTPROV *phCryptProv)
HRESULT WINAPI cryptxml.CryptXmlClose(_In_ HXML hCryptXml)
BOOL WINAPI crypt32.CryptGetOIDFunctionValue(_In_ DWORD dwEncodingType,_In_ LPCSTR pszFuncName,_In_ LPCSTR pszOID,_In_ LPCWSTR pwszValueName,_Out_ DWORD *pdwValueType,_Out_ BYTE *pbValueData,_Inout_ DWORD *pcbValueData)
BOOL WINAPI crypt32.CryptHashPublicKeyInfo(_In_ HCRYPTPROV_LEGACY hCryptProv,_In_ ALG_ID Algid,_In_ DWORD dwFlags,_In_ DWORD dwCertEncodingType,_In_ PCERT_PUBLIC_KEY_INFO pInfo,_Out_ BYTE *pbComputedHash,_Inout_ DWORD *pcbComputedHash)
BOOL WINAPI advapi32.CryptExportKey(_In_ HCRYPTKEY hKey,_In_ HCRYPTKEY hExpKey,_In_ DWORD dwBlobType,_In_ DWORD dwFlags,_Out_ BYTE *pbData,_Inout_ DWORD *pdwDataLen)
PCCTL_CONTEXT WINAPI crypt32.CertDuplicateCTLContext(_In_ PCCTL_CONTEXT pCtlContext)
NET_API_STATUS None netapi32.NetLocalGroupEnum(_In_ LPCWSTR servername,_In_ DWORD level,_Out_ LPBYTE *bufptr,_In_ DWORD prefmaxlen,_Out_ LPDWORD entriesread,_Out_ LPDWORD totalentries,_Inout_ PDWORD_PTR resumehandle)
NET_API_STATUS None netapi32.NetUseDel(_In_ LMSTR UncServerName,_In_ LMSTR UseName,_In_ DWORD ForceCond)
BOOL WINAPI crypt32.CryptMsgCountersignEncoded(_In_ DWORD dwEncodingType,_In_ PBYTE pbSignerInfo,_In_ DWORD cbSignerInfo,_In_ DWORD cCountersigners,_In_ PCMSG_SIGNER_ENCODE_INFO rgCountersigners,_Out_ PBYTE pbCountersignature,_Inout_ PDWORD pcbCountersignature)
BOOL WINAPI mssign32.PvkPrivateKeySave(_In_ HCRYPTPROV hCryptProv,_In_ HANDLE hFile,_In_ DWORD dwKeySpec,_In_ HWND hwndOwner,_In_ LPCWSTR pwszKeyName,_In_ DWORD dwFlags)
LONG WINAPI crypt32.CertVerifyCRLTimeValidity(_In_ LPFILETIME pTimeToVerify,_In_ PCRL_INFO pCrlInfo)
NET_API_STATUS None netapi32.NetUserGetInfo(_In_ LPCWSTR servername,_In_ LPCWSTR username,_In_ DWORD level,_Out_ LPBYTE *bufptr)
BOOL WINAPI crypt32.CertSerializeCRLStoreElement(_In_ PCCRL_CONTEXT pCrlContext,_In_ DWORD dwFlags,_Out_ BYTE *pbElement,_Inout_ DWORD *pcbElement)
HRESULT WINAPI cryptxml.CryptXmlVerifySignature(_In_ HCRYPTXML hSignature,_In_opt_ BCRYPT_KEY_HANDLE hKey,DWORD dwFlags None)
BOOL WINAPI cryptui.CryptUIDlgCertMgr(_In_ PCCRYPTUI_CERT_MGR_STRUCT pCryptUICertMgr)
BOOL None cryptdlg.CertViewProperties(_In_ CERT_VIEWPROPERTIES_STRUCT *pCertViewInfo)
BOOL None cryptdlg.CertViewPropertiesW(_In_ CERT_VIEWPROPERTIES_STRUCT *pCertViewInfo)
BOOL None cryptdlg.CertViewPropertiesA(_In_ CERT_VIEWPROPERTIES_STRUCT *pCertViewInfo)
HCRYPTOIDFUNCSET WINAPI crypt32.CryptInitOIDFunctionSet(_In_ LPCSTR pszFuncName,_In_ DWORD dwFlags)
BOOL WINAPI cryptui.CryptUIWizDigitalSign(_In_ DWORD dwFlags,_In_opt_ HWND hwndParent,_In_opt_ LPCWSTR pwszWizardTitle,_In_ PCCRYPTUI_WIZ_DIGITAL_SIGN_INFO pDigitalSignInfo,_Out_opt_ PCCRYPTUI_WIZ_DIGITAL_SIGN_CONTEXT *ppSignContext)
BOOL WINAPI crypt32.CryptMsgVerifyCountersignatureEncoded(_In_ HCRYPTPROV_LEGACY hCryptProv,_In_ DWORD dwEncodingType,_In_ PBYTE pbSignerInfo,_In_ DWORD cbSignerInfo,_In_ PBYTE pbSignerInfoCountersignature,_In_ DWORD cbSignerInfoCountersignature,_In_ PCERT_INFO pciCountersigner)
PCCERT_CONTEXT WINAPI crypt32.CertDuplicateCertificateContext(_In_ PCCERT_CONTEXT pCertContext)
PCCERT_CHAIN_CONTEXT WINAPI crypt32.CertDuplicateCertificateChain(_In_ PCCERT_CHAIN_CONTEXT pChainContext)
BOOL WINAPI crypt32.CryptRegisterDefaultOIDFunction(_In_ DWORD dwEncodingType,_In_ LPCSTR pszFuncName,_In_ DWORD dwIndex,_In_ LPCWSTR pwszDll)
BOOL WINAPI advapi32.CryptDuplicateHash(_In_ HCRYPTHASH hHash,_In_ DWORD *pdwReserved,_In_ DWORD dwFlags,_Out_ HCRYPTHASH *phHash)
HRESULT WINAPI cryptxml.CryptXmlDigestReference(_In_ HCRYPTXML hReference,DWORD dwFlags None,_In_ CRYPT_XML_DATA_PROVIDER *pDataProviderIn)
BOOL WINAPI crypt32.CertDeleteCTLFromStore(_In_ PCCTL_CONTEXT pCtlContext)
BOOL WINAPI crypt32.CryptUnregisterDefaultOIDFunction(_In_ DWORD dwEncodingType,_In_ LPCSTR pszFuncName,_In_ LPCWSTR pwszDll)
HRESULT WINAPI cryptxml.CryptXmlOpenToEncode(_In_opt_ CRYPT_XML_TRANSFORM_CHAIN_CONFIG *pConfig,DWORD dwFlags None,_In_opt_ LPCWSTR wszId,_In_ CRYPT_XML_PROPERTY *rgProperty,_In_ ULONG cProperty,_In_opt_ CRYPT_XML_BLOB *pEncoded,HCRYPTXML *phSignature None)
VOID NET_API_FUNCTION netapi32.NetFreeAadJoinInformation(_In_opt_ PDSREG_JOIN_INFO pJoinInfo)
BOOL WINAPI None.CertStoreProvReadCRLCallback(_In_ HCERTSTOREPROV hStoreProv,_In_ PCCRL_CONTEXT pStoreCrlContext,_In_ DWORD dwFlags,_Out_ PCCRL_CONTEXT *ppProvCrlContext)
BOOL WINAPI crypt32.CryptInstallOIDFunctionAddress(_In_ HMODULE hModule,_In_ DWORD dwEncodingType,_In_ LPCSTR pszFuncName,_In_ DWORD cFuncEntry,_In_ CRYPT_OID_FUNC_ENTRY rgFuncEntry[],_In_ DWORD dwFlags)
BOOL None crypt32.CryptSIPAddProvider(_In_ SIP_ADD_NEWPROVIDER *psNewProv)
BOOL WINAPI advapi32.CryptGetUserKey(_In_ HCRYPTPROV hProv,_In_ DWORD dwKeySpec,_Out_ HCRYPTKEY *phUserKey)
BOOL WINAPI crypt32.CertResyncCertificateChainEngine(_In_opt_ HCERTCHAINENGINE hChainEngine)
BOOL WINAPI crypt32.CertVerifySubjectCertificateContext(_In_ PCCERT_CONTEXT pSubject,_In_opt_ PCCERT_CONTEXT pIssuer,_Inout_ DWORD *pdwFlags)
ULONG None None.RKeyPFXInstall(_In_ KEYSVCC_HANDLE hKeySvcCli,_In_ PKEYSVC_BLOB pPFX,_In_ PKEYSVC_UNICODE_STRING pPassword,_In_ ULONG ulFlags)
BOOL WINAPI crypt32.CertDeleteCertificateFromStore(_In_ PCCERT_CONTEXT pCertContext)
BOOL WINAPI wintrust.WintrustSetRegPolicyFlags(_In_ DWORD dwPolicyFlags)
HCERTSTORE WINAPI crypt32.PFXImportCertStore(_In_ CRYPT_DATA_BLOB *pPFX,_In_ LPCWSTR szPassword,_In_ DWORD dwFlags)
BOOL WINAPI kernel32.VirtualFree(_In_ LPVOID lpAddress,_In_ SIZE_T dwSize,_In_ DWORD dwFreeType)
BOOL WINAPI cryptdlg.CertSelectCertificate(_Inout_ PCERT_SELECT_STRUCT_W pCertSelectInfo)
NET_API_STATUS None netapi32.NetGroupDel(_In_ LPCWSTR servername,_In_ LPCWSTR groupname)
PCCERT_SERVER_OCSP_RESPONSE_CONTEXT WINAPI crypt32.CertGetServerOcspResponseContext(_In_ HCERT_SERVER_OCSP_RESPONSE hServerOcspResponse,_In_ DWORD dwFlags,_Reserved_ LPVOID pvReserved)
DWORD WINAPI crypt32.CertEnumCertificateContextProperties(_In_ PCCERT_CONTEXT pCertContext,_In_ DWORD dwPropId)
HCERTSTORE WINAPI crypt32.CertOpenSystemStore(_In_ HCRYPTPROV_LEGACY hprov,_In_ LPTCSTR szSubsystemProtocol)
HCERTSTORE WINAPI crypt32.CertOpenSystemStoreW(_In_ HCRYPTPROV_LEGACY hprov,_In_ LPTCSTR szSubsystemProtocol)
HCERTSTORE WINAPI crypt32.CertOpenSystemStoreA(_In_ HCRYPTPROV_LEGACY hprov,_In_ LPTCSTR szSubsystemProtocol)
BOOL WINAPI crypt32.CertFreeCRLContext(_In_ PCCRL_CONTEXT pCrlContext)
LPCWSTR WINAPI crypt32.CryptFindLocalizedName(_In_ LPCWSTR pwszCryptName)
BOOL WINAPI advapi32.CryptCreateHash(_In_ HCRYPTPROV hProv,_In_ ALG_ID Algid,_In_ HCRYPTKEY hKey,_In_ DWORD dwFlags,_Out_ HCRYPTHASH *phHash)
BOOL WINAPI cryptui.CryptUIDlgViewCertificate(_In_ PCCRYPTUI_VIEWCERTIFICATE_STRUCTW pCertViewInfo,_Out_ BOOL *pfPropertiesChanged)
BOOL WINAPI cryptui.CryptUIDlgViewCertificateW(_In_ PCCRYPTUI_VIEWCERTIFICATE_STRUCTW pCertViewInfo,_Out_ BOOL *pfPropertiesChanged)
BOOL WINAPI cryptui.CryptUIDlgViewCertificateA(_In_ PCCRYPTUI_VIEWCERTIFICATE_STRUCTW pCertViewInfo,_Out_ BOOL *pfPropertiesChanged)
HRESULT None certadm.CertSrvRestoreEnd(_In_ HCSBC hbc)
HCATINFO None wintrust.CryptCATAdminEnumCatalogFromHash(_In_ HCATADMIN hCatAdmin,_In_ BYTE *pbHash,_In_ DWORD cbHash,_In_ DWORD dwFlags,_In_ HCATINFO *phPrevCatInfo)
BOOL WINAPI wintrust.OpenPersonalTrustDBDialog(_In_opt_ HWND hwndParent)
PCCERT_CONTEXT WINAPI crypt32.CertGetSubjectCertificateFromStore(_In_ HCERTSTORE hCertStore,_In_ DWORD dwCertEncodingType,_In_ PCERT_INFO pCertId)
PCCERT_CONTEXT WINAPI crypt32.CertEnumCertificatesInStore(_In_ HCERTSTORE hCertStore,_In_ PCCERT_CONTEXT pPrevCertContext)
BOOL WINAPI crypt32.CryptUnprotectData(_In_ DATA_BLOB *pDataIn,_Out_opt_ LPWSTR *ppszDataDescr,_In_opt_ DATA_BLOB *pOptionalEntropy,_Reserved_ PVOID pvReserved,_In_opt_ CRYPTPROTECT_PROMPTSTRUCT *pPromptStruct,_In_ DWORD dwFlags,_Out_ DATA_BLOB *pDataOut)
BOOL WINAPI crypt32.CryptSIPGetSignedDataMsg(_In_ SIP_SUBJECTINFO *pSubjectInfo,_Out_ DWORD *pdwEncodingType,_In_ DWORD dwIndex,_Inout_ DWORD *pcbSignedDataMsg,_Out_ BYTE *pbSignedDataMsg)
CRYPTCATMEMBER WINAPI wintrust.CryptCATEnumerateMember(_In_ HANDLE hCatalog,_In_ CRYPTCATMEMBER *pPrevMember)
LPWSTR WINAPI wintrust.CryptCATCDFEnumMembersByCDFTagEx(_In_ CRYPTCATCDF *pCDF,_Inout_ LPWSTR pwszPrevCDFTag,_In_ PFN_CDF_PARSE_ERROR_CALLBACK pfnParseError,_In_ CRYPTCATMEMBER **ppMember,_In_ BOOL fContinueOnError,_In_ LPVOID pvReserved)
LONG WINAPI wintrust.WinVerifyTrust(_In_ HWND hWnd,_In_ GUID *pgActionID,_In_ LPVOID pWVTData)
PCCERT_CONTEXT WINAPI cryptui.CryptUIDlgSelectCertificate(_In_ PCCRYPTUI_SELECTCERTIFICATE_STRUCT pcsc)
PCCERT_CONTEXT WINAPI cryptui.CryptUIDlgSelectCertificateW(_In_ PCCRYPTUI_SELECTCERTIFICATE_STRUCT pcsc)
PCCERT_CONTEXT WINAPI cryptui.CryptUIDlgSelectCertificateA(_In_ PCCRYPTUI_SELECTCERTIFICATE_STRUCT pcsc)
HRESULT None certadm.CertSrvBackupRead(_In_ HCSBC hbc,_Out_ VOID *pvBuffer,_In_ DWORD cbBuffer,_Out_ DWORD *pcbRead)
BOOL WINAPI crypt32.CryptGetDefaultOIDDllList(_In_ HCRYPTOIDFUNCSET hFuncSet,_In_ DWORD dwEncodingType,_Out_ LPWSTR pwszDllList,_Inout_ DWORD *pcchDllList)
BOOL None wintrust.CryptCATAdminReleaseCatalogContext(_In_ HCATADMIN hCatAdmin,_In_ HCATINFO hCatInfo,_In_ DWORD dwFlags)
BOOL WINAPI advapi32.CryptGetProvParam(_In_ HCRYPTPROV hProv,_In_ DWORD dwParam,_Out_ BYTE *pbData,_Inout_ DWORD *pdwDataLen,_In_ DWORD dwFlags)
BOOL None wintrust.WintrustLoadFunctionPointers(_In_ GUID *pgActionID,_Out_ CRYPT_PROVIDER_FUNCTIONS *pPfns)
BOOL WINAPI None.CryptGetLocalKeyLimits(_In_ ALG_ID algId,_In_ DWORD dwFlags,_Out_ PCRYPT_KEY_LIMITS pLimits,_Inout_ LPDWORD cbLimitLength)
BOOL WINAPI crypt32.CertSerializeCRLStoreElement(_In_ PCCRL_CONTEXT pCrlContext,_In_ DWORD dwFlags,_Out_ BYTE *pbElement,_Inout_ DWORD *pcbElement)
BOOL WINAPI crypt32.CryptProtectData(_In_ DATA_BLOB *pDataIn,_In_opt_ LPCWSTR szDataDescr,_In_opt_ DATA_BLOB *pOptionalEntropy,_Reserved_ PVOID pvReserved,_In_opt_ CRYPTPROTECT_PROMPTSTRUCT *pPromptStruct,_In_ DWORD dwFlags,_Out_ DATA_BLOB *pDataOut)
BOOL WINAPI crypt32.CertVerifyCertificateChainPolicy(_In_ LPCSTR pszPolicyOID,_In_ PCCERT_CHAIN_CONTEXT pChainContext,_In_ PCERT_CHAIN_POLICY_PARA pPolicyPara,_Inout_ PCERT_CHAIN_POLICY_STATUS pPolicyStatus)
BOOL WINAPI crypt32.CryptProtectMemory(_Inout_ LPVOID pData,_In_ DWORD cbData,_In_ DWORD dwFlags)
BOOL WINAPI None.CertStoreProvWriteCertCallback(_In_ HCERTSTOREPROV hStoreProv,_In_ PCCERT_CONTEXT pCertContext,_In_ DWORD dwFlags)
BOOL WINAPI advapi32.CryptDestroyKey(_In_ HCRYPTKEY hKey)
BOOL WINAPI None.CertStoreProvDeleteCTL(_In_ HCERTSTOREPROV hStoreProv,_In_ PCCTL_CONTEXT pCtlContext,_In_ DWORD dwFlags)
BOOL WINAPI None.CertStoreProvWriteCRLCallback(_In_ HCERTSTOREPROV hStoreProv,_In_ PCCRL_CONTEXT pCrlContext,_In_ DWORD dwFlags)
PCCRL_CONTEXT WINAPI crypt32.CertGetCRLFromStore(_In_ HCERTSTORE hCertStore,_In_opt_ PCCERT_CONTEXT pIssuerContext,_In_ PCCRL_CONTEXT pPrevCrlContext,_Inout_ DWORD *pdwFlags)
BOOL None crypt32.CryptSIPRemoveProvider(_In_ GUID *pgProv)
BOOL None wintrust.WintrustRemoveActionID(_In_ GUID *pgActionID)
BOOL WINAPI advapi32.CryptGetDefaultProvider(_In_ DWORD dwProvType,_In_ DWORD *pdwReserved,_In_ DWORD dwFlags,_Out_ LPTSTR pszProvName,_Inout_ DWORD *pcbProvName)
BOOL WINAPI advapi32.CryptGetDefaultProviderW(_In_ DWORD dwProvType,_In_ DWORD *pdwReserved,_In_ DWORD dwFlags,_Out_ LPTSTR pszProvName,_Inout_ DWORD *pcbProvName)
BOOL WINAPI advapi32.CryptGetDefaultProviderA(_In_ DWORD dwProvType,_In_ DWORD *pdwReserved,_In_ DWORD dwFlags,_Out_ LPTSTR pszProvName,_Inout_ DWORD *pcbProvName)
BOOL WINAPI cryptnet.CryptGetTimeValidObject(_In_ LPCSTR pszTimeValidOid,_In_ LPVOID pvPara,_In_ PCCERT_CONTEXT pIssuer,_In_opt_ LPFILETIME pftValidFor,_In_ DWORD dwFlags,_In_ DWORD dwTimeout,_Out_opt_ LPVOID *ppvObject,_In_opt_ PCRYPT_CREDENTIALS pCredentials,_Inout_opt_ PCRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO pExtraInfo)
BOOL WINAPI wintrust.CryptCATAdminResolveCatalogPath(_In_ HCATADMIN hCatAdmin,_In_ WCHAR *pwszCatalogFile,_Inout_ CATALOG_INFO *psCatInfo,_In_ DWORD dwFlags)
BOOL WINAPI crypt32.CryptUnregisterOIDInfo(_In_ PCCRYPT_OID_INFO pInfo)
BOOL WINAPI crypt32.CertAddStoreToCollection(_In_ HCERTSTORE hCollectionStore,_In_opt_ HCERTSTORE hSiblingStore,_In_ DWORD dwUpdateFlag,_In_ DWORD dwPriority)
BOOL WINAPI crypt32.CertVerifyRevocation(_In_ DWORD dwEncodingType,_In_ DWORD dwRevType,_In_ DWORD cContext,_In_ PVOID rgpvContext[],_In_ DWORD dwFlags,_In_opt_ PCERT_REVOCATION_PARA pRevPara,_Inout_ PCERT_REVOCATION_STATUS pRevStatus)
HCERT_SERVER_OCSP_RESPONSE WINAPI crypt32.CertOpenServerOcspResponse(_In_ PCCERT_CHAIN_CONTEXT pChainContext,_In_ DWORD dwFlags,_Reserved_ LPVOID pvReserved)
BOOL WINAPI advapi32.CryptDuplicateKey(_In_ HCRYPTKEY hKey,_In_ DWORD *pdwReserved,_In_ DWORD dwFlags,_Out_ HCRYPTKEY *phKey)
NTSTATUS None advapi32.RtlDecryptMemory(_Inout_ PVOID Memory,_In_ ULONG MemoryLength,_In_ ULONG OptionFlags)
BOOL WINAPI cryptnet.CryptRetrieveObjectByUrl(_In_ LPCTSTR pszUrl,_In_ LPCSTR pszObjectOid,_In_ DWORD dwRetrievalFlags,_In_ DWORD dwTimeout,_Out_ LPVOID *ppvObject,_In_ HCRYPTASYNC hAsyncRetrieve,_In_opt_ PCRYPT_CREDENTIALS pCredentials,_In_opt_ LPVOID pvVerify,_In_ PCRYPT_RETRIEVE_AUX_INFO pAuxInfo)
BOOL WINAPI cryptnet.CryptRetrieveObjectByUrlW(_In_ LPCTSTR pszUrl,_In_ LPCSTR pszObjectOid,_In_ DWORD dwRetrievalFlags,_In_ DWORD dwTimeout,_Out_ LPVOID *ppvObject,_In_ HCRYPTASYNC hAsyncRetrieve,_In_opt_ PCRYPT_CREDENTIALS pCredentials,_In_opt_ LPVOID pvVerify,_In_ PCRYPT_RETRIEVE_AUX_INFO pAuxInfo)
BOOL WINAPI cryptnet.CryptRetrieveObjectByUrlA(_In_ LPCTSTR pszUrl,_In_ LPCSTR pszObjectOid,_In_ DWORD dwRetrievalFlags,_In_ DWORD dwTimeout,_Out_ LPVOID *ppvObject,_In_ HCRYPTASYNC hAsyncRetrieve,_In_opt_ PCRYPT_CREDENTIALS pCredentials,_In_opt_ LPVOID pvVerify,_In_ PCRYPT_RETRIEVE_AUX_INFO pAuxInfo)
HRESULT WINAPI mssign32.SignerTimeStamp(_In_ SIGNER_SUBJECT_INFO *pSubjectInfo,_In_ LPCWSTR pwszHttpTimeStamp,_In_opt_ PCRYPT_ATTRIBUTES psRequest,_In_opt_ LPVOID pSipData)
BOOL WINAPI crypt32.CertSerializeCertificateStoreElement(_In_ PCCERT_CONTEXT pCertContext,_In_ DWORD dwFlags,_Out_ BYTE *pbElement,_Inout_ DWORD *pcbElement)
BOOL WINAPI crypt32.CertRemoveEnhancedKeyUsageIdentifier(_In_ PCCERT_CONTEXT pCertContext,_In_ LPCSTR pszUsageIdentifier)
BOOL WINAPI None.CertStoreProvDeleteCertCallback(_In_ HCERTSTOREPROV hStoreProv,_In_ PCCERT_CONTEXT pCertContext,_In_ DWORD dwFlags)
BOOL WINAPI advapi32.CryptAcquireContext(_Out_ HCRYPTPROV *phProv,_In_ LPCTSTR pszContainer,_In_ LPCTSTR pszProvider,_In_ DWORD dwProvType,_In_ DWORD dwFlags)
BOOL WINAPI advapi32.CryptAcquireContextW(_Out_ HCRYPTPROV *phProv,_In_ LPCTSTR pszContainer,_In_ LPCTSTR pszProvider,_In_ DWORD dwProvType,_In_ DWORD dwFlags)
BOOL WINAPI advapi32.CryptAcquireContextA(_Out_ HCRYPTPROV *phProv,_In_ LPCTSTR pszContainer,_In_ LPCTSTR pszProvider,_In_ DWORD dwProvType,_In_ DWORD dwFlags)
BOOL WINAPI crypt32.CryptVerifyCertificateSignature(_In_ HCRYPTPROV_LEGACY hCryptProv,_In_ DWORD dwCertEncodingType,_In_ BYTE *pbEncoded,_In_ DWORD cbEncoded,_In_ PCERT_PUBLIC_KEY_INFO pPublicKey)
HRESULT WINAPI mssign32.SignerSignEx2(_In_ DWORD dwFlags,_In_ SIGNER_SUBJECT_INFO *pSubjectInfo,_In_ SIGNER_CERT *pSignerCert,_In_ SIGNER_SIGNATURE_INFO *pSignatureInfo,_In_opt_ SIGNER_PROVIDER_INFO *pProviderInfo,_In_opt_ DWORD dwTimestampFlags,_In_opt_ PCSTR pszTimestampAlgorithmOid,_In_opt_ PCWSTR pwszHttpTimeStamp,_In_opt_ PCRYPT_ATTRIBUTES psRequest,_In_opt_ PVOID pSipData,_Out_ SIGNER_CONTEXT **ppSignerContext,_In_opt_ PCERT_STRONG_SIGN_PARA pCryptoPolicy,_Reserved_ PVOID pReserved)
BOOL WINAPI crypt32.PFXVerifyPassword(_In_ CRYPT_DATA_BLOB *pPFX,_In_ LPCWSTR szPassword,_In_ DWORD dwFlags)
BOOL WINAPI crypt32.CryptImportPublicKeyInfo(_In_ HCRYPTPROV hCryptProv,_In_ DWORD dwCertEncodingType,_In_ PCERT_PUBLIC_KEY_INFO pInfo,_Out_ HCRYPTKEY *phKey)
BOOL WINAPI ncrypt.NCryptIsKeyHandle(_In_ NCRYPT_KEY_HANDLE hKey)
HRESULT WINAPI mssign32.SignerTimeStampEx2(_Reserved_ DWORD dwFlags,_In_ SIGNER_SUBJECT_INFO *pSubjectInfo,_In_ LPCWSTR pwszHttpTimeStamp,_In_ ALG_ID dwAlgId,_In_ PCRYPT_ATTRIBUTES psRequest,_In_ LPVOID pSipData,_Out_ SIGNER_CONTEXT **ppSignerContext)
BOOL WINAPI crypt32.CertAddCertificateContextToStore(_In_ HCERTSTORE hCertStore,_In_ PCCERT_CONTEXT pCertContext,_In_ DWORD dwAddDisposition,_Out_opt_ PCCERT_CONTEXT *ppStoreContext)
BOOL WINAPI wintrust.CryptCATPersistStore(_In_ HANDLE hCatalog)
HRESULT WINAPI mssign32.SignerTimeStampEx(_Reserved_ DWORD dwFlags,_In_ SIGNER_SUBJECT_INFO *pSubjectInfo,_In_ LPCWSTR pwszHttpTimeStamp,_In_ PCRYPT_ATTRIBUTES psRequest,_In_ LPVOID pSipData,_Out_ SIGNER_CONTEXT **ppSignerContext)
BOOL WINAPI wintrust.WTHelperCertIsSelfSigned(_In_ DWORD dwEncoding,_In_ CERT_INFO *pCert)
BOOL WINAPI crypt32.CryptMsgEncodeAndSignCTL(_In_ DWORD dwMsgEncodingType,_In_ PCTL_INFO pCtlInfo,_In_ PCMSG_SIGNED_ENCODE_INFO pSignInfo,_In_ DWORD dwFlags,_Out_ BYTE *pbEncoded,_Inout_ DWORD *pcbEncoded)
BOOL WINAPI crypt32.CryptMsgCountersign(_Inout_ HCRYPTMSG hCryptMsg,_In_ DWORD dwIndex,_In_ DWORD cCountersigners,_In_ PCMSG_SIGNER_ENCODE_INFO rgCountersigners)
BOOL WINAPI crypt32.CryptFreeOIDFunctionAddress(_In_ HCRYPTOIDFUNCADDR hFuncAddr,_In_ DWORD dwFlags)
NET_API_STATUS None netapi32.NetServerTransportAdd(_In_ LPWSTR servername,_In_ DWORD level,_In_ LPBYTE bufptr)
NET_API_STATUS None netapi32.NetAlertRaise(_In_ LPCWSTR AlertEventName,_In_ LPVOID Buffer,_In_ DWORD BufferSize)
BOOL WINAPI crypt32.CryptRegisterOIDInfo(_In_ PCCRYPT_OID_INFO pInfo,_In_ DWORD dwFlags)
BOOL WINAPI wintrust.IsCatalogFile(_In_opt_ HANDLE hFile,_In_opt_ WCHAR *pwszFileName)
LONG WINAPI crypt32.CertVerifyTimeValidity(_In_ LPFILETIME pTimeToVerify,_In_ PCERT_INFO pCertInfo)
BOOL WINAPI crypt32.CertAddStoreToCollection(_In_ HCERTSTORE hCollectionStore,_In_opt_ HCERTSTORE hSiblingStore,_In_ DWORD dwUpdateFlag,_In_ DWORD dwPriority)
BOOL WINAPI wintrust.WintrustSetRegPolicyFlags(_In_ DWORD dwPolicyFlags)
BOOL WINAPI crypt32.CryptVerifyCertificateSignature(_In_ HCRYPTPROV_LEGACY hCryptProv,_In_ DWORD dwCertEncodingType,_In_ BYTE *pbEncoded,_In_ DWORD cbEncoded,_In_ PCERT_PUBLIC_KEY_INFO pPublicKey)
BOOL WINAPI None.CertStoreProvDeleteCertCallback(_In_ HCERTSTOREPROV hStoreProv,_In_ PCCERT_CONTEXT pCertContext,_In_ DWORD dwFlags)
SECURITY_STATUS WINAPI ncrypt.NCryptKeyDerivation(_In_ NCRYPT_KEY_HANDLE hKey,_In_ NCryptBufferDesc *pParameterList,_Out_ PUCHAR pbDerivedKey,_In_ DWORD cbDerivedKey,_Out_ DWORD *pcbResult,_In_ ULONG dwFlags)
BOOL WINAPI cryptui.CryptUIWizDigitalSign(_In_ DWORD dwFlags,_In_opt_ HWND hwndParent,_In_opt_ LPCWSTR pwszWizardTitle,_In_ PCCRYPTUI_WIZ_DIGITAL_SIGN_INFO pDigitalSignInfo,_Out_opt_ PCCRYPTUI_WIZ_DIGITAL_SIGN_CONTEXT *ppSignContext)
SECURITY_STATUS WINAPI ncrypt.NCryptImportKey(_In_ NCRYPT_PROV_HANDLE hProvider,_In_opt_ NCRYPT_KEY_HANDLE hImportKey,_In_ LPCWSTR pszBlobType,_In_opt_ NCryptBufferDesc *pParameterList,_Out_ NCRYPT_KEY_HANDLE *phKey,_In_ PBYTE pbData,_In_ DWORD cbData,_In_ DWORD dwFlags)
NET_API_STATUS None netapi32.NetLocalGroupGetMembers(_In_ LPCWSTR servername,_In_ LPCWSTR localgroupname,_In_ DWORD level,_Out_ LPBYTE *bufptr,_In_ DWORD prefmaxlen,_Out_ LPDWORD entriesread,_Out_ LPDWORD totalentries,_Inout_ PDWORD_PTR resumehandle)
NET_API_STATUS None netapi32.NetGetJoinInformation(_In_ LPCWSTR lpServer,_Out_ LPWSTR *lpNameBuffer,_Out_ PNETSETUP_JOIN_STATUS BufferType)
BOOL WINAPI crypt32.CryptSIPRetrieveSubjectGuidForCatalogFile(_In_ LPCWSTR FileName,_In_opt_ HANDLE hFileIn,_Out_ GUID *pgSubject)
NET_API_STATUS None netapi32.NetUserGetGroups(_In_ LPCWSTR servername,_In_ LPCWSTR username,_In_ DWORD level,_Out_ LPBYTE *bufptr,_In_ DWORD prefmaxlen,_Out_ LPDWORD entriesread,_Out_ LPDWORD totalentries)
NET_API_STATUS None netapi32.NetServerTransportAdd(_In_ LPWSTR servername,_In_ DWORD level,_In_ LPBYTE bufptr)
NET_API_STATUS None netapi32.NetMessageBufferSend(_In_ LPCWSTR servername,_In_ LPCWSTR msgname,_In_ LPCWSTR fromname,_In_ LPBYTE buf,_In_ DWORD buflen)
SECURITY_STATUS WINAPI ncrypt.NCryptEnumKeys(_In_ NCRYPT_PROV_HANDLE hProvider,_In_opt_ LPCWSTR pszScope,_Out_ NCryptKeyName **ppKeyName,_Inout_ PVOID *ppEnumState,_In_ DWORD dwFlags)
HRESULT None certcli.GetLastStatus([out] LONG *pStatus)
SECURITY_STATUS WINAPI ncrypt.NCryptSetProperty(_In_ NCRYPT_HANDLE hObject,_In_ LPCWSTR pszProperty,_In_ PBYTE pbInput,_In_ DWORD cbInput,_In_ DWORD dwFlags)
HRESULT None certadm.CertSrvBackupGetDatabaseNames(_In_ HCSBC hbc,_Out_ WCHAR **ppwszzAttachmentInformation,_Out_ DWORD *pcbSize)
HRESULT None certadm.CertSrvBackupGetDatabaseNamesW(_In_ HCSBC hbc,_Out_ WCHAR **ppwszzAttachmentInformation,_Out_ DWORD *pcbSize)
NET_API_STATUS None netapi32.NetServerTransportEnum(_In_ LPWSTR servername,_In_ DWORD level,_Out_ LPBYTE *bufptr,_In_ DWORD prefmaxlen,_Out_ LPDWORD entriesread,_Out_ LPDWORD totalentries,_Inout_ LPDWORD resumehandle)
SECURITY_STATUS WINAPI ncrypt.NCryptOpenStorageProvider(_Out_ NCRYPT_PROV_HANDLE *phProvider,_In_opt_ LPCWSTR pszProviderName,_In_ DWORD dwFlags)
NTSTATUS WINAPI netapi32.NetLogonSetServiceBits(_In_ LPWSTR ServerName,_In_ DWORD ServiceBitsOfInterest,_In_ DWORD ServiceBits)
NET_API_STATUS None netapi32.NetLocalGroupGetInfo(_In_ LPCWSTR servername,_In_ LPCWSTR groupname,_In_ DWORD level,_Out_ LPBYTE *bufptr)
SECURITY_STATUS WINAPI ncrypt.NCryptEncrypt(_In_ NCRYPT_KEY_HANDLE hKey,_In_ PBYTE pbInput,_In_ DWORD cbInput,_In_opt_ VOID *pPaddingInfo,_Out_ PBYTE pbOutput,_In_ DWORD cbOutput,_Out_ DWORD *pcbResult,_In_ DWORD dwFlags)
SECURITY_STATUS WINAPI ncrypt.NCryptOpenKey(_In_ NCRYPT_PROV_HANDLE hProvider,_Out_ NCRYPT_KEY_HANDLE *phKey,_In_ LPCWSTR pszKeyName,_In_ DWORD dwLegacyKeySpec,_In_ DWORD dwFlags)
NET_API_STATUS None netapi32.NetFileGetInfo(_In_ LMSTR servername,_In_ DWORD fileid,_In_ DWORD level,_Out_ LPBYTE *bufptr)
HRESULT None certadm.get_OCSPCAConfigurationCollection([out] IOCSPCAConfigurationCollection **pVal)
LRESULT CALLBACK None.HookProc(int nCode None,WPARAM wParam None,LPARAM lParam None)
SECURITY_STATUS WINAPI ncrypt.NCryptEnumAlgorithms(_In_ NCRYPT_PROV_HANDLE hProvider,_In_ DWORD dwAlgOperations,_Out_ DWORD *pdwAlgCount,_Out_ NCryptAlgorithmName **ppAlgList,_In_ DWORD dwFlags)
SECURITY_STATUS WINAPI ncrypt.NCryptDeriveKey(_In_ NCRYPT_SECRET_HANDLE hSharedSecret,_In_ LPCWSTR pwszKDF,_In_opt_ NCryptBufferDesc *pParameterList,_Out_opt_ PBYTE pbDerivedKey,_In_ DWORD cbDerivedKey,_Out_ DWORD *pcbResult,_In_ ULONG dwFlags)
NET_API_STATUS None netapi32.NetGroupGetInfo(_In_ LPCWSTR servername,_In_ LPCWSTR groupname,_In_ DWORD level,_Out_ LPBYTE *bufptr)
HRESULT None certenc.Encode([out] BSTR *pbstrBinary)
NET_API_STATUS None netapi32.NetUserModalsSet(_In_ LPCWSTR servername,_In_ DWORD level,_In_ LPBYTE buf,_Out_ LPDWORD parm_err)
SECURITY_STATUS WINAPI ncrypt.NCryptEnumStorageProviders(_Out_ DWORD *pdwProviderCount,_Out_ NCryptProviderName **ppProviderList,_In_ DWORD dwFlags)
PCCERT_CONTEXT None None.GetSignerCert(HCERTSTORE hCertStore None)
BOOL WINAPI crypt32.CertCompareCertificate(_In_ DWORD dwCertEncodingType,_In_ PCERT_INFO pCertId1,_In_ PCERT_INFO pCertId2)
SECURITY_STATUS WINAPI ncrypt.NCryptFreeObject(_In_ NCRYPT_HANDLE hObject)
SECURITY_STATUS WINAPI ncrypt.NCryptTranslateHandle(_Out_opt_ NCRYPT_PROV_HANDLE *phProvider,_Out_ NCRYPT_KEY_HANDLE *phKey,_In_ HCRYPTPROV hLegacyProv,_In_opt_ HCRYPTKEY hLegacyKey,_In_opt_ DWORD dwLegacyKeySpec,_In_ DWORD dwFlags)
NET_API_STATUS None netapi32.NetScheduleJobAdd(_In_opt_ LPCWSTR Servername,_In_ LPBYTE Buffer,_Out_ LPDWORD JobId)
NET_API_STATUS None netapi32.NetMessageNameEnum(_In_ LPCWSTR servername,_In_ DWORD level,_Out_ LPBYTE *bufptr,_In_ DWORD prefmaxlen,_Out_ LPDWORD entriesread,_Out_ LPDWORD totalentries,_Inout_ LPDWORD resume_handle)
SECURITY_STATUS WINAPI ncrypt.NCryptCreatePersistedKey(_In_ NCRYPT_PROV_HANDLE hProvider,_Out_ NCRYPT_KEY_HANDLE *phKey,_In_ LPCWSTR pszAlgId,_In_opt_ LPCWSTR pszKeyName,_In_ DWORD dwLegacyKeySpec,_In_ DWORD dwFlags)
NET_API_STATUS None netapi32.NetSessionGetInfo(_In_ LPWSTR servername,_In_ LPWSTR UncClientName,_In_ LPWSTR username,_In_ DWORD level,_Out_ LPBYTE *bufptr)
NET_API_STATUS None netapi32.NetRenameMachineInDomain(_In_ LPCWSTR lpServer,_In_ LPCWSTR lpNewMachineName,_In_ LPCWSTR lpAccount,_In_ LPCWSTR lpPassword,_In_ DWORD fRenameOptions)
HRESULT None certcli.GetRefreshPolicy([out None None,retval] VARIANT_BOOL *pValue)
SECURITY_STATUS WINAPI ncrypt.NCryptNotifyChangeKey(_In_ NCRYPT_PROV_HANDLE hProvider,_Inout_ HANDLE *phEvent,_In_ DWORD dwFlags)
NET_API_STATUS None netapi32.NetWkstaSetInfo(_In_ LPWSTR servername,_In_ DWORD level,_In_ LPBYTE buffer,_Out_ LPDWORD parm_err)
NET_API_STATUS None netapi32.NetEnumerateComputerNames(_In_opt_ LPCWSTR Server,_In_ NET_COMPUTER_NAME_TYPE NameType,_In_ ULONG Reserved,_Out_ PDWORD EntryCount,_Out_ LPWSTR **ComputerNames)
SECURITY_STATUS WINAPI ncrypt.NCryptFreeBuffer(_In_ PVOID pvInput)
SECURITY_STATUS WINAPI ncrypt.NCryptImportKey(_In_ NCRYPT_PROV_HANDLE hProvider,_In_opt_ NCRYPT_KEY_HANDLE hImportKey,_In_ LPCWSTR pszBlobType,_In_opt_ NCryptBufferDesc *pParameterList,_Out_ NCRYPT_KEY_HANDLE *phKey,_In_ PBYTE pbData,_In_ DWORD cbData,_In_ DWORD dwFlags)
NET_API_STATUS None netapi32.NetJoinDomain(_In_ LPCWSTR lpServer,_In_ LPCWSTR lpDomain,_In_ LPCWSTR lpAccountOU,_In_ LPCWSTR lpAccount,_In_ LPCWSTR lpPassword,_In_ DWORD fJoinOptions)
NET_API_STATUS None netapi32.NetApiBufferFree(_In_ LPVOID Buffer)
SECURITY_STATUS WINAPI ncrypt.NCryptExportKey(_In_ NCRYPT_KEY_HANDLE hKey,_In_opt_ NCRYPT_KEY_HANDLE hExportKey,_In_ LPCWSTR pszBlobType,_In_opt_ NCryptBufferDesc *pParameterList,_Out_opt_ PBYTE pbOutput,_In_ DWORD cbOutput,_Out_ DWORD *pcbResult,_In_ DWORD dwFlags)
NET_API_STATUS None netapi32.NetMessageBufferSend(_In_ LPCWSTR servername,_In_ LPCWSTR msgname,_In_ LPCWSTR fromname,_In_ LPBYTE buf,_In_ DWORD buflen)
NET_API_STATUS None netapi32.NetProvisionComputerAccount(_In_ LPCWSTR lpDomain,_In_ LPCWSTR lpMachineName,_In_opt_ LPCWSTR lpMachineAccountOU,_In_opt_ LPCWSTR lpDcName,_In_ DWORD dwOptions,_Out_opt_ PBYTE *pProvisionBinData,_Out_opt_ DWORD *pdwProvisionBinDataSize,_Out_opt_ LPWSTR *pProvisionTextData)
SECURITY_STATUS WINAPI ncrypt.NCryptVerifySignature(_In_ NCRYPT_KEY_HANDLE hKey,_In_opt_ VOID *pPaddingInfo,_In_ PBYTE pbHashValue,_In_ DWORD cbHashValue,_In_ PBYTE pbSignature,_In_ DWORD cbSignature,_In_ DWORD dwFlags)
NET_API_STATUS None netapi32.NetServerComputerNameAdd(_In_ LPWSTR ServerName,_In_ LPWSTR EmulatedDomainName,_In_ LPWSTR EmulatedServerName)
NET_API_STATUS None netapi32.NetMessageNameGetInfo(_In_ LPCWSTR servername,_In_ LPCWSTR msgname,_In_ DWORD level,_Out_ LPBYTE *bufptr)
NET_API_STATUS None netapi32.NetAddAlternateComputerName(_In_opt_ LPCWSTR Server,_In_ LPCWSTR AlternateName,_In_opt_ LPCWSTR DomainAccount,_In_opt_ LPCWSTR DomainAccountPassword,_In_ ULONG Reserved)
SECURITY_STATUS WINAPI ncrypt.NCryptSignHash(_In_ NCRYPT_KEY_HANDLE hKey,_In_opt_ VOID *pPaddingInfo,_In_ PBYTE pbHashValue,_In_ DWORD cbHashValue,_Out_ PBYTE pbSignature,_In_ DWORD cbSignature,_Out_ DWORD *pcbResult,_In_ DWORD dwFlags)
LPBYTE None None.ALERT_OTHER_INFO(LPBYTE x None)
NET_API_STATUS None netapi32.NetApiBufferAllocate(_In_ DWORD ByteCount,_Out_ LPVOID *Buffer)
NET_API_STATUS None netapi32.NetApiBufferSize(_In_ LPVOID Buffer,_Out_ LPDWORD ByteCount)
NET_API_STATUS None netapi32.NetEnumerateComputerNames(_In_opt_ LPCWSTR Server,_In_ NET_COMPUTER_NAME_TYPE NameType,_In_ ULONG Reserved,_Out_ PDWORD EntryCount,_Out_ LPWSTR **ComputerNames)
NET_API_STATUS None netapi32.NetValidatePasswordPolicyFree(_In_ LPVOID *OutputArg)
HRESULT None certenc.Encode([out] BSTR *pbstrBinary)
HRESULT None None.GetManageModule([out] ICertManageModule **ppManageModule)
NET_API_STATUS None netapi32.NetGroupSetInfo(_In_ LPCWSTR servername,_In_ LPCWSTR groupname,_In_ DWORD level,_In_ LPBYTE buf,_Out_ LPDWORD parm_err)
NET_API_STATUS None netapi32.NetAlertRaiseEx(_In_ LPCWSTR AlertEventName,_In_ LPVOID VariableInfo,_In_ DWORD VariableInfoSize,_In_ LPCWSTR ServiceName)
PCCERT_CONTEXT None None.GetSignerCert(HCERTSTORE hCertStore None)
NET_API_STATUS None netapi32.NetLocalGroupDelMembers(_In_ LPCWSTR servername,_In_ LPCWSTR groupname,_In_ DWORD level,_In_ LPBYTE buf,_In_ DWORD totalentries)
NET_API_STATUS None netapi32.NetScheduleJobEnum(_In_opt_ LPCWSTR Servername,_Out_ LPBYTE *PointerToBuffer,_In_ DWORD PreferredMaximumLength,_Out_ LPDWORD EntriesRead,_Out_ LPDWORD TotalEntries,_Inout_ LPDWORD ResumeHandle)
NET_API_STATUS None netapi32.NetGroupDelUser(_In_ LPCWSTR servername,_In_ LPCWSTR GroupName,_In_ LPCWSTR Username)
HRESULT NET_API_FUNCTION netapi32.NetGetAadJoinInformation(_In_opt_ LPCWSTR pcszTenantId,_Out_ PDSREG_JOIN_INFO *ppJoinInfo)
NET_API_STATUS None netapi32.NetServerTransportDel(_In_ LPWSTR servername,_In_ DWORD level,_In_ LPBYTE bufptr)
NET_API_STATUS None netapi32.NetWkstaTransportEnum(_In_ LPWSTR servername,_In_ DWORD level,_Out_ LPBYTE *bufptr,_In_ DWORD prefmaxlen,_Out_ LPDWORD entriesread,_Out_ LPDWORD totalentries,_Inout_ LPDWORD resumehandle)
NET_API_STATUS None netapi32.NetQueryDisplayInformation(_In_ LPCWSTR ServerName,_In_ DWORD Level,_In_ DWORD Index,_In_ DWORD EntriesRequested,_In_ DWORD PreferredMaximumLength,_Out_ LPDWORD ReturnedEntryCount,_Out_ PVOID *SortedBuffer)
NET_API_STATUS None netapi32.NetUseGetInfo(_In_ LMSTR UncServerName,_In_ LMSTR UseName,_In_ DWORD Level,_Out_ LPBYTE *BufPtr)
NET_API_STATUS None netapi32.NetRequestOfflineDomainJoin(_In_ BYTE *pProvisionBinData,_In_ DWORD cbProvisionBinDataSize,_In_ DWORD dwOptions,_In_ LPCWSTR lpWindowsPath)
BOOL WINAPI crypt32.CertSerializeCertificateStoreElement(_In_ PCCERT_CONTEXT pCertContext,_In_ DWORD dwFlags,_Out_ BYTE *pbElement,_Inout_ DWORD *pcbElement)
NET_API_STATUS None netapi32.NetUserGetLocalGroups(_In_ LPCWSTR servername,_In_ LPCWSTR username,_In_ DWORD level,_In_ DWORD flags,_Out_ LPBYTE *bufptr,_In_ DWORD prefmaxlen,_Out_ LPDWORD entriesread,_Out_ LPDWORD totalentries)
NET_API_STATUS None netapi32.NetWkstaUserGetInfo(LPWSTR reserved None,_In_ DWORD level,_Out_ LPBYTE *bufptr)
NET_API_STATUS None netapi32.NetSetPrimaryComputerName(_In_opt_ LPCWSTR Server,_In_ LPCWSTR PrimaryName,_In_opt_ LPCWSTR DomainAccount,_In_opt_ LPCWSTR DomainAccountPassword,_In_ ULONG Reserved)
NET_API_STATUS None netapi32.NetValidateName(_In_ LPCWSTR lpServer,_In_ LPCWSTR lpName,_In_ LPCWSTR lpAccount,_In_ LPCWSTR lpPassword,_In_ NETSETUP_NAME_TYPE NameType)
HRESULT None certadm.GetDisplayName([out] BSTR *pstrOut)
HRESULT None certadm.Next([out] LONG *pIndex)
BSTR None oleaut32.SysAllocStringByteLen(_In_opt_ LPCSTR psz,_In_ UINT len)
HRESULT None certadm.IsIndexed([out] LONG *pIndexed)
ULONG None None.RKeyPFXInstall(_In_ KEYSVCC_HANDLE hKeySvcCli,_In_ PKEYSVC_BLOB pPFX,_In_ PKEYSVC_UNICODE_STRING pPassword,_In_ ULONG ulFlags)
HRESULT None certadm.get_ErrorCode([out] ULONG *pVal)
NET_API_STATUS None netapi32.NetMessageNameDel(_In_ LPCWSTR servername,_In_ LPCWSTR msgname)
NET_API_STATUS None netapi32.NetGetJoinableOUs(_In_ LPCWSTR lpServer,_In_ LPCWSTR lpDomain,_In_ LPCWSTR lpAccount,_In_ LPCWSTR lpPassword,_Out_ DWORD *OUCount,_Out_ LPWSTR **OUs)
NET_API_STATUS None netapi32.NetScheduleJobGetInfo(_In_opt_ LPCWSTR Servername,_In_ DWORD JobId,_Out_ LPBYTE *PointerToBuffer)
NET_API_STATUS None netapi32.NetLocalGroupDelMembers(_In_ LPCWSTR servername,_In_ LPCWSTR groupname,_In_ DWORD level,_In_ LPBYTE buf,_In_ DWORD totalentries)
NET_API_STATUS None netapi32.NetUserDel(_In_ LPCWSTR servername,_In_ LPCWSTR username)
NET_API_STATUS None netapi32.NetGroupDelUser(_In_ LPCWSTR servername,_In_ LPCWSTR GroupName,_In_ LPCWSTR Username)
BOOL WINAPI crypt32.CryptUnprotectData(_In_ DATA_BLOB *pDataIn,_Out_opt_ LPWSTR *ppszDataDescr,_In_opt_ DATA_BLOB *pOptionalEntropy,_Reserved_ PVOID pvReserved,_In_opt_ CRYPTPROTECT_PROMPTSTRUCT *pPromptStruct,_In_ DWORD dwFlags,_Out_ DATA_BLOB *pDataOut)
BOOL WINAPI crypt32.CertAddCertificateContextToStore(_In_ HCERTSTORE hCertStore,_In_ PCCERT_CONTEXT pCertContext,_In_ DWORD dwAddDisposition,_Out_opt_ PCCERT_CONTEXT *ppStoreContext)
NTSTATUS None advapi32.LsaEnumerateTrustedDomainsEx(_In_ LSA_HANDLE PolicyHandle,_In_ PLSA_ENUMERATION_HANDLE EnumerationContext,_Out_ PVOID *Buffer,_In_ ULONG PreferredMaximumLength,_Out_ PULONG CountReturned)
UINT None oleaut32.SysStringLen(_In_opt_ BSTR bstr)
HRESULT None certadm.GetName([out] BSTR *pstrOut)
HRESULT None certadm.GetMaxLength([out] LONG *pMaxLength)
HRESULT None certadm.get_CSPName([out] BSTR *pVal)
NTSTATUS None advapi32.LsaEnumerateTrustedDomainsEx(_In_ LSA_HANDLE PolicyHandle,_In_ PLSA_ENUMERATION_HANDLE EnumerationContext,_Out_ PVOID *Buffer,_In_ ULONG PreferredMaximumLength,_Out_ PULONG CountReturned)
HRESULT None certadm.GetRevocationReason([out] LONG *pReason)
NTSTATUS WINAPI bcrypt.BCryptCreateContext(_In_ ULONG dwTable,_In_ LPCWSTR pszContext,_In_opt_ PCRYPT_CONTEXT_CONFIG pConfig)
HRESULT None certadm.get_Modified([out] VARIANT_BOOL *pVal)
BOOL WINAPI crypt32.CryptImportPublicKeyInfo(_In_ HCRYPTPROV hCryptProv,_In_ DWORD dwCertEncodingType,_In_ PCERT_PUBLIC_KEY_INFO pInfo,_Out_ HCRYPTKEY *phKey)
BOOL WINAPI crypt32.PFXVerifyPassword(_In_ CRYPT_DATA_BLOB *pPFX,_In_ LPCWSTR szPassword,_In_ DWORD dwFlags)
HRESULT None certadm.Next([out] LONG *pIndex)
HRESULT None certadm.get_KeySpec([out] ULONG *pVal)
HRESULT None certadm.Next([out] LONG *pIndex)
NTSTATUS None advapi32.LsaQueryTrustedDomainInfoByName(_In_ LSA_HANDLE PolicyHandle,_In_ PLSA_UNICODE_STRING TrustedDomainName,_In_ TRUSTED_INFORMATION_CLASS InformationClass,_Out_ PVOID *Buffer)
NTSTATUS None advapi32.LsaDeleteTrustedDomain(_In_ LSA_HANDLE PolicyHandle,_In_ PSID TrustedDomainSid)
NTSTATUS None advapi32.LsaStorePrivateData(_In_ LSA_HANDLE PolicyHandle,_In_ PLSA_UNICODE_STRING KeyName,_In_ PLSA_UNICODE_STRING PrivateData)
BSTR None oleaut32.SysAllocStringByteLen(_In_opt_ LPCSTR psz,_In_ UINT len)
NTSTATUS None advapi32.LsaLookupSids2(_In_ LSA_HANDLE PolicyHandle,_In_ ULONG LookupOptions,_In_ ULONG Count,_In_ PSID *Sids,_Out_ PLSA_REFERENCED_DOMAIN_LIST *ReferencedDomains,_Out_ PLSA_TRANSLATED_NAME *Names)
NTSTATUS WINAPI bcrypt.BCryptConfigureContext(_In_ ULONG dwTable,_In_ LPCWSTR pszContext,_In_ PCRYPT_CONTEXT_CONFIG pConfig)
NTSTATUS WINAPI netapi32.NetIsServiceAccount(_In_opt_ LPWSTR ServerName,_In_ LPWSTR AccountName,_Out_ BOOL *IsService)
HRESULT None scrdenrl.enroll(LONG dwFlags None)
BOOL WINAPI advapi32.SaferRecordEventLogEntry(_In_ SAFER_LEVEL_HANDLE hLevel,_In_ LPCWSTR szTargetPath,_Reserved_ LPVOID lpReserved)
HRESULT None certocm.get_ErrorString([out] BSTR *pVal)
HRESULT None certcli.GetRequestIdString([out None None,retval] BSTR *pstrRequestId)
HRESULT None certadm.OpenView([out] IEnumCERTVIEWROW **ppenum)
BOOL WINAPI advapi32.SaferGetLevelInformation(_In_ SAFER_LEVEL_HANDLE LevelHandle,_In_ SAFER_OBJECT_INFO_CLASS dwInfoType,_Out_opt_ LPVOID lpQueryBuffer,_In_ DWORD dwInBufferSize,_Out_ LPDWORD lpdwOutBufferSize)
NTSTATUS None advapi32.LsaSetTrustedDomainInfoByName(_In_ LSA_HANDLE PolicyHandle,_In_ PLSA_UNICODE_STRING TrustedDomainName,_In_ TRUSTED_INFORMATION_CLASS InformationClass,_In_ PVOID Buffer)
NTSTATUS WINAPI bcrypt.BCryptQueryContextFunctionProperty(_In_ ULONG dwTable,_In_ LPCWSTR pszContext,_In_ ULONG dwInterface,_In_ LPCWSTR pszFunction,_In_ LPCWSTR pszProperty,_Inout_ ULONG *pcbValue,_Inout_ PUCHAR *ppbValue)
SCESTATUS WINAPI None.SceSvcAttachmentAnalyze(_In_ PSCESVC_CALLBACK_INFO pSceCbInfo)
NTSTATUS WINAPI bcrypt.BCryptAddContextFunction(_In_ ULONG dwTable,_In_ LPCWSTR pszContext,_In_ ULONG dwInterface,_In_ LPCWSTR pszFunction,_In_ ULONG dwPosition)
NTSTATUS WINAPI bcrypt.BCryptUnregisterConfigChangeNotify(_In_ HANDLE hEvent)
BOOL WINAPI advapi32.SaferComputeTokenFromLevel(_In_ SAFER_LEVEL_HANDLE LevelHandle,_In_opt_ HANDLE InAccessToken,_Out_ PHANDLE OutAccessToken,_In_ DWORD dwFlags,_Inout_opt_ LPVOID lpReserved)
HRESULT None certadm.get_Identifier([out] BSTR *pVal)
HRESULT None certcli.EnumerateAttributes([out] BSTR *pstrAttributeName)
NTSTATUS None advapi32.LsaRemoveAccountRights(_In_ LSA_HANDLE PolicyHandle,_In_ PSID AccountSid,_In_ BOOLEAN AllRights,_In_ PLSA_UNICODE_STRING UserRights,_In_ ULONG CountOfRights)
NTSTATUS None None.PasswordChangeNotify(_In_ PUNICODE_STRING UserName,_In_ ULONG RelativeId,_In_ PUNICODE_STRING NewPassword)
NTSTATUS None advapi32.LsaSetTrustedDomainInformation(_In_ LSA_HANDLE PolicyHandle,_In_ PSID TrustedDomainSid,_In_ TRUSTED_INFORMATION_CLASS InformationClass,_In_ PVOID Buffer)
HRESULT None certadm.get_CACertificate([out] VARIANT *pVal)
BOOL WINAPI advapi32.SaferGetPolicyInformation(_In_ DWORD dwScopeId,_In_ SAFER_POLICY_INFO_CLASS SaferPolicyInfoClass,_In_ DWORD InfoBufferSize,_Out_ PVOID InfoBuffer,_Out_ PDWORD InfoBufferRetSize,_Reserved_ LPVOID lpReserved)
SECURITY_STATUS WINAPI ncrypt.SslGenerateMasterKey(_In_ NCRYPT_PROV_HANDLE hSslProvider,_In_ NCRYPT_KEY_HANDLE hPrivateKey,_In_ NCRYPT_KEY_HANDLE hPublicKey,_Out_ NCRYPT_KEY_HANDLE *phMasterKey,_In_ DWORD dwProtocol,_In_ DWORD dwCipherSuite,_In_ PNCryptBufferDesc pParameterList,_Out_ PBYTE pbOutput,_In_ DWORD cbOutput,_Out_ DWORD *pcbResult,_In_ DWORD dwFlags)
NTSTATUS WINAPI bcrypt.BCryptVerifySignature(_In_ BCRYPT_KEY_HANDLE hKey,_In_opt_ VOID *pPaddingInfo,_In_ PUCHAR pbHash,_In_ ULONG cbHash,_In_ PUCHAR pbSignature,_In_ ULONG cbSignature,_In_ ULONG dwFlags)
BOOL WINAPI advapi32.SaferIdentifyLevel(_In_ DWORD dwNumProperties,_In_opt_ PSAFER_CODE_PROPERTIES pCodeProperties,_Out_ SAFER_LEVEL_HANDLE *pLevelHandle,_Reserved_ LPVOID lpReserved)
NTSTATUS None secur32.LsaUnregisterPolicyChangeNotification(_In_ POLICY_NOTIFICATION_INFORMATION_CLASS InformationClass,_In_ HANDLE NotificationEventHandle)
BOOL WINAPI crypt32.CryptRegisterOIDInfo(_In_ PCCRYPT_OID_INFO pInfo,_In_ DWORD dwFlags)
HRESULT WINAPI srpapi.srpInheritOriginClaim(_In_ Handle OriginToken,_In_ Handle InheritingToken,Handle ResultToken None)
NTSTATUS None advapi32.LsaStorePrivateData(_In_ LSA_HANDLE PolicyHandle,_In_ PLSA_UNICODE_STRING KeyName,_In_ PLSA_UNICODE_STRING PrivateData)
NTSTATUS None advapi32.LsaRetrievePrivateData(_In_ LSA_HANDLE PolicyHandle,_In_ PLSA_UNICODE_STRING KeyName,_Out_ PLSA_UNICODE_STRING *PrivateData)
SCESTATUS WINAPI None.SceSvcAttachmentConfig(_In_ PSCESVC_CALLBACK_INFO pSceCbInfo)
NTSTATUS WINAPI bcrypt.BCryptEnumContextFunctions(_In_ ULONG dwTable,_In_ LPCWSTR pszContext,_In_ ULONG dwInterface,_Inout_ ULONG *pcbBuffer,_Inout_ PCRYPT_CONTEXT_FUNCTIONS *ppBuffer)
NTSTATUS None advapi32.LsaOpenTrustedDomainByName(_In_ LSA_HANDLE PolicyHandle,_In_ PLSA_UNICODE_STRING TrustedDomainName,_In_ ACCESS_MASK DesiredAccess,_Out_ PLSA_HANDLE TrustedDomainHandle)
SECURITY_STATUS WINAPI ncrypt.SslGetKeyProperty(_In_ NCRYPT_KEY_HANDLE hKey,_In_ LPCWSTR pszProperty,_Out_ PBYTE ppbOutput,_Out_ DWORD *pcbOutput,_In_ DWORD dwFlags)
BOOL WINAPI advapi32.SaferCreateLevel(_In_ DWORD dwScopeId,_In_ DWORD dwLevelId,_In_ DWORD OpenFlags,_Out_ SAFER_LEVEL_HANDLE *pLevelHandle,_Reserved_ LPVOID lpReserved)
NTSTATUS None advapi32.LsaEnumerateAccountsWithUserRight(_In_ LSA_HANDLE PolicyHandle,_In_ PLSA_UNICODE_STRING UserRights,_Out_ PVOID *EnumerationBuffer,_Out_ PULONG CountReturned)
BOOL None advapi32.SaferiIsExecutableFileType(_In_ LPCWSTR szFullPath,_In_ BOOLEAN bFromShellExecute)
NTSTATUS WINAPI advapi32.LsaLookupPrivilegeValue(LSA_HANDLE PolicyHandle None,PUNICODE_STRING Name None,PLUID Value None)
NTSTATUS None advapi32.LsaQueryTrustedDomainInfo(_In_ LSA_HANDLE PolicyHandle,_In_ PSID TrustedDomainSid,_In_ TRUSTED_INFORMATION_CLASS InformationClass,_Out_ PVOID *Buffer)
NTSTATUS WINAPI netapi32.NetAddServiceAccount(_In_opt_ LPWSTR ServerName,_In_ LPWSTR AccountName,_In_ LPWSTR Reserved,_In_ DWORD Flags)
NTSTATUS None advapi32.LsaLookupSids(_In_ LSA_HANDLE PolicyHandle,_In_ ULONG Count,_In_ PSID *Sids,_Out_ PLSA_REFERENCED_DOMAIN_LIST *ReferencedDomains,_Out_ PLSA_TRANSLATED_NAME *Names)
BOOL WINAPI advapi32.SaferCloseLevel(_In_ SAFER_LEVEL_HANDLE hLevelHandle)
BOOLEAN None None.PasswordFilter(_In_ PUNICODE_STRING AccountName,_In_ PUNICODE_STRING FullName,_In_ PUNICODE_STRING Password,_In_ BOOLEAN SetOperation)
SCESTATUS WINAPI None.SceSvcAttachmentUpdate(_In_ PSCESVC_CALLBACK_INFO pSceCbInfo,_In_ SCESVC_CONFIGURATION_INFO *ServiceInfo)
NTSTATUS None advapi32.LsaLookupNames(_In_ LSA_HANDLE PolicyHandle,_In_ ULONG Count,_In_ PLSA_UNICODE_STRING Names,_Out_ PLSA_REFERENCED_DOMAIN_LIST *ReferencedDomains,_Out_ PLSA_TRANSLATED_SID *Sids)
NTSTATUS WINAPI bcrypt.BCryptExportKey(_In_ BCRYPT_KEY_HANDLE hKey,_In_ BCRYPT_KEY_HANDLE hExportKey,_In_ LPCWSTR pszBlobType,_Out_ PUCHAR pbOutput,_In_ ULONG cbOutput,_Out_ ULONG *pcbResult,_In_ ULONG dwFlags)
ULONG None advapi32.LsaNtStatusToWinError(_In_ NTSTATUS Status)
NTSTATUS None advapi32.LsaEnumerateTrustedDomains(_In_ LSA_HANDLE PolicyHandle,_In_ PLSA_ENUMERATION_HANDLE EnumerationContext,_Out_ PVOID *Buffer,_In_ ULONG PreferedMaximumLength,_Out_ PULONG CountReturned)
NTSTATUS None advapi32.LsaClose(_In_ LSA_HANDLE ObjectHandle)
BOOL WINAPI advapi32.SaferIdentifyLevel(_In_ DWORD dwNumProperties,_In_opt_ PSAFER_CODE_PROPERTIES pCodeProperties,_Out_ SAFER_LEVEL_HANDLE *pLevelHandle,_Reserved_ LPVOID lpReserved)
HRESULT None certadm.get_Modified([out] VARIANT_BOOL *pVal)
NTSTATUS None advapi32.LsaClose(_In_ LSA_HANDLE ObjectHandle)
BOOL None advapi32.SaferiIsExecutableFileType(_In_ LPCWSTR szFullPath,_In_ BOOLEAN bFromShellExecute)
NTSTATUS WINAPI bcrypt.BCryptSignHash(_In_ BCRYPT_KEY_HANDLE hKey,_In_opt_ VOID *pPaddingInfo,_In_ PBYTE pbInput,_In_ DWORD cbInput,_Out_ PBYTE pbOutput,_In_ DWORD cbOutput,_Out_ DWORD *pcbResult,_In_ ULONG dwFlags)
NTSTATUS None advapi32.LsaEnumerateAccountRights(_In_ LSA_HANDLE PolicyHandle,_In_ PSID AccountSid,_Out_ PLSA_UNICODE_STRING *UserRights,_Out_ PULONG CountOfRights)
BOOL WINAPI advapi32.SaferSetLevelInformation(_In_ SAFER_LEVEL_HANDLE LevelHandle,_In_ SAFER_OBJECT_INFO_CLASS dwInfoType,_In_ LPVOID lpQueryBuffer,_In_ DWORD dwInBufferSize)
NTSTATUS WINAPI bcrypt.BCryptEnumRegisteredProviders(_Inout_ ULONG *pcbBuffer,_Inout_ PCRYPT_PROVIDERS *ppBuffer)
NTSTATUS WINAPI netapi32.NetEnumerateServiceAccounts(_In_opt_ LPWSTR ServerName,_In_ DWORD Flags,_Out_ DWORD *AccountsCount,_Out_ PZPWSTR *Accounts)
NTSTATUS None secur32.LsaRegisterPolicyChangeNotification(_In_ POLICY_NOTIFICATION_INFORMATION_CLASS InformationClass,_In_ HANDLE NotificationEventHandle)
SECURITY_STATUS WINAPI ncrypt.SslEncryptPacket(_In_ NCRYPT_PROV_HANDLE hSslProvider,_Inout_ NCRYPT_KEY_HANDLE hKey,_In_ PBYTE *pbInput,_In_ DWORD cbInput,_Out_ PBYTE pbOutput,_In_ DWORD cbOutput,_Out_ DWORD *pcbResult,_In_ ULONGLONG SequenceNumber,_In_ DWORD dwContentType,_In_ DWORD dwFlags)
NTSTATUS WINAPI bcrypt.BCryptDestroyKey(_Inout_ BCRYPT_KEY_HANDLE hKey)
HRESULT None certcli.EnumerateAttributes([out] BSTR *pstrAttributeName)
HRESULT None xenroll.GetSupportedKeySpec([out] LONG *pdwKeySpec)
SECURITY_STATUS WINAPI ncrypt.SslHashHandshake(_In_ NCRYPT_PROV_HANDLE hSslProvider,_Inout_ NCRYPT_HASH_HANDLE hHandshakeHash,_Out_ PBYTE pbInput,_In_ DWORD cbInput,_In_ DWORD dwFlags)
BOOL WINAPI advapi32.SaferSetPolicyInformation(_In_ DWORD dwScopeId,_In_ SAFER_POLICY_INFO_CLASS SaferPolicyInfoClass,_In_ DWORD InfoBufferSize,_In_ PVOID InfoBuffer,_Reserved_ LPVOID lpReserved)
NTSTATUS WINAPI bcrypt.BCryptHash(BCRYPT_ALG_HANDLE hAlgorithm None,PUCHAR pbSecret None,ULONG cbSecret None,PUCHAR pbInput None,ULONG cbInput None,PUCHAR pbOutput None,ULONG cbOutput None)
NTSTATUS WINAPI bcrypt.BCryptExportKey(_In_ BCRYPT_KEY_HANDLE hKey,_In_ BCRYPT_KEY_HANDLE hExportKey,_In_ LPCWSTR pszBlobType,_Out_ PUCHAR pbOutput,_In_ ULONG cbOutput,_Out_ ULONG *pcbResult,_In_ ULONG dwFlags)
NTSTATUS WINAPI bcrypt.BCryptDeriveKey(_In_ BCRYPT_SECRET_HANDLE hSharedSecret,_In_ LPCWSTR pwszKDF,_In_opt_ BCryptBufferDesc *pParameterList,_Out_opt_ PUCHAR pbDerivedKey,_In_ ULONG cbDerivedKey,_Out_ ULONG *pcbResult,_In_ ULONG dwFlags)
NTSTATUS WINAPI None.LsaLookupPrivilegeValue(LSA_HANDLE PolicyHandle None,PUNICODE_STRING Name None,PLUID Value None)
NTSTATUS WINAPI bcrypt.BCryptQueryProviderRegistration(_In_ LPCWSTR pszProvider,_In_ ULONG dwMode,_In_ ULONG dwInterface,_Inout_ ULONG *pcbBuffer,_Inout_ PCRYPT_PROVIDER_REG *ppBuffer)
NTSTATUS WINAPI bcrypt.BCryptHashData(_Inout_ BCRYPT_HASH_HANDLE hHash,_In_ PUCHAR pbInput,_In_ ULONG cbInput,_In_ ULONG dwFlags)
NTSTATUS None advapi32.LsaEnumerateAccountsWithUserRight(_In_ LSA_HANDLE PolicyHandle,_In_ PLSA_UNICODE_STRING UserRights,_Out_ PVOID *EnumerationBuffer,_Out_ PULONG CountReturned)
HRESULT None certcli.EnumerateAttributes([out] BSTR *pstrAttributeName)
NTSTATUS None advapi32.LsaCreateTrustedDomainEx(_In_ LSA_HANDLE PolicyHandle,_In_ PTRUSTED_DOMAIN_INFORMATION_EX TrustedDomainInformation,_In_ PTRUSTED_DOMAIN_AUTH_INFORMATION AuthenticationInformation,_In_ ACCESS_MASK DesiredAccess,_Out_ PLSA_HANDLE TrustedDomainHandle)
NTSTATUS None advapi32.LsaLookupNames(_In_ LSA_HANDLE PolicyHandle,_In_ ULONG Count,_In_ PLSA_UNICODE_STRING Names,_Out_ PLSA_REFERENCED_DOMAIN_LIST *ReferencedDomains,_Out_ PLSA_TRANSLATED_SID *Sids)
NTSTATUS WINAPI netapi32.NetRemoveServiceAccount(_In_opt_ LPWSTR ServerName,_In_ LPWSTR AccountName,_In_ DWORD Flags)
NTSTATUS NTAPI None.GetServiceAccountPassword(_In_ PUNICODE_STRING AccountName,_In_opt_ PUNICODE_STRING DomainName,_In_ CRED_FETCH CredFetch,_Inout_opt_ FILETIME *FileTimeExpiry,_Out_ PUNICODE_STRING CurrentPassword,_Out_ PUNICODE_STRING PreviousPassword,_Out_opt_ FILETIME *FileTimeCurrPwdValidForOutbound)
NTSTATUS None advapi32.LsaSetTrustedDomainInformation(_In_ LSA_HANDLE PolicyHandle,_In_ PSID TrustedDomainSid,_In_ TRUSTED_INFORMATION_CLASS InformationClass,_In_ PVOID Buffer)
HRESULT None scrdenrl.enroll(LONG dwFlags None)
NTSTATUS None advapi32.LsaAddAccountRights(_In_ LSA_HANDLE PolicyHandle,_In_ PSID AccountSid,_In_ PLSA_UNICODE_STRING UserRights,_In_ ULONG CountOfRights)
SECURITY_STATUS WINAPI ncrypt.SslGetKeyProperty(_In_ NCRYPT_KEY_HANDLE hKey,_In_ LPCWSTR pszProperty,_Out_ PBYTE ppbOutput,_Out_ DWORD *pcbOutput,_In_ DWORD dwFlags)
NTSTATUS WINAPI netapi32.NetQueryServiceAccount(_In_opt_ LPWSTR ServerName,_In_ LPWSTR AccountName,_In_ DWORD InfoLevel,_Out_ PBYTE *Buffer)
NTSTATUS WINAPI bcrypt.BCryptRegisterConfigChangeNotify(_In_ PRKEVENT phEvent)
NTSTATUS WINAPI bcrypt.BCryptDeriveKey(_In_ BCRYPT_SECRET_HANDLE hSharedSecret,_In_ LPCWSTR pwszKDF,_In_opt_ BCryptBufferDesc *pParameterList,_Out_opt_ PUCHAR pbDerivedKey,_In_ ULONG cbDerivedKey,_Out_ ULONG *pcbResult,_In_ ULONG dwFlags)
NTSTATUS WINAPI bcrypt.BCryptDecrypt(_Inout_ BCRYPT_KEY_HANDLE hKey,_In_ PUCHAR pbInput,_In_ ULONG cbInput,_In_opt_ VOID *pPaddingInfo,_Inout_opt_ PUCHAR pbIV,_In_ ULONG cbIV,_Out_opt_ PUCHAR pbOutput,_In_ ULONG cbOutput,_Out_ ULONG *pcbResult,_In_ ULONG dwFlags)
NTSTATUS WINAPI bcrypt.BCryptGenRandom(_Inout_ BCRYPT_ALG_HANDLE hAlgorithm,_Inout_ PUCHAR pbBuffer,_In_ ULONG cbBuffer,_In_ ULONG dwFlags)
HRESULT None certcli.GetCertificateExtensionFlags([out] LONG *pExtFlags)
SCESTATUS WINAPI None.SceSvcAttachmentConfig(IN PSCESVC_CALLBACK_INFO pSceCbInfo)
NTSTATUS WINAPI bcrypt.BCryptConfigureContextFunction(_In_ ULONG dwTable,_In_ LPCWSTR pszContext,_In_ ULONG dwInterface,_In_ LPCWSTR pszFunction,_In_ PCRYPT_CONTEXT_FUNCTION_CONFIG pConfig)
NET_API_STATUS None netapi32.NetShareEnum(_In_ LPWSTR servername,_In_ DWORD level,_Out_ LPBYTE *bufptr,_In_ DWORD prefmaxlen,_Out_ LPDWORD entriesread,_Out_ LPDWORD totalentries,_Inout_ LPDWORD resume_handle)
BOOL WINAPI advapi32.SaferSetLevelInformation(_In_ SAFER_LEVEL_HANDLE LevelHandle,_In_ SAFER_OBJECT_INFO_CLASS dwInfoType,_In_ LPVOID lpQueryBuffer,_In_ DWORD dwInBufferSize)
NTSTATUS None advapi32.LsaEnumerateAccountRights(_In_ LSA_HANDLE PolicyHandle,_In_ PSID AccountSid,_Out_ PLSA_UNICODE_STRING *UserRights,_Out_ PULONG CountOfRights)
NTSTATUS WINAPI bcrypt.BCryptGetProperty(_In_ BCRYPT_HANDLE hObject,_In_ LPCWSTR pszProperty,_Out_ PUCHAR pbOutput,_In_ ULONG cbOutput,_Out_ ULONG *pcbResult,_In_ ULONG dwFlags)
NTSTATUS WINAPI bcrypt.BCryptEnumContexts(_In_ ULONG dwTable,_Inout_ ULONG *pcbBuffer,_Inout_ PCRYPT_CONTEXTS *ppBuffer)
HRESULT None certadm.get_Modified([out] VARIANT_BOOL *pVal)
HRESULT None certcli.EnumerateAttributes([out] BSTR *pstrAttributeName)
NTSTATUS WINAPI bcrypt.BCryptGenerateSymmetricKey(_Inout_ BCRYPT_ALG_HANDLE hAlgorithm,_Out_ BCRYPT_KEY_HANDLE *phKey,_Out_opt_ PUCHAR pbKeyObject,_In_ ULONG cbKeyObject,_In_ PUCHAR pbSecret,_In_ ULONG cbSecret,_In_ ULONG dwFlags)
SECURITY_STATUS WINAPI ncrypt.SslFreeObject(_In_ NCRYPT_HANDLE hObject,_In_ DWORD dwFlags)
SECURITY_STATUS WINAPI ncrypt.SslIncrementProviderReferenceCount(_In_ NCRYPT_PROV_HANDLE hSslProvider)
NTSTATUS WINAPI bcrypt.BCryptSecretAgreement(_In_ BCRYPT_KEY_HANDLE hPrivKey,_In_ BCRYPT_KEY_HANDLE hPubKey,_Out_ BCRYPT_SECRET_HANDLE *phSecret,_In_ ULONG dwFlags)
NTSTATUS WINAPI bcrypt.BCryptQueryContextFunctionConfiguration(_In_ ULONG dwTable,_In_ LPCWSTR pszContext,_In_ ULONG dwInterface,_In_ LPCWSTR pszFunction,_Inout_ ULONG *pcbBuffer,_Inout_ PCRYPT_CONTEXT_FUNCTION_CONFIG *ppBuffer)
NTSTATUS WINAPI bcrypt.BCryptFinalizeKeyPair(_Inout_ BCRYPT_KEY_HANDLE hKey,_In_ ULONG dwFlags)
NTSTATUS WINAPI bcrypt.BCryptEnumProviders(_In_ LPCWSTR pszAlgId,_Out_ ULONG *pImplCount,_Out_ BCRYPT_PROVIDER_NAME **ppImplList,_In_ ULONG dwFlags)
SECURITY_STATUS WINAPI ncrypt.SslEnumCipherSuites(_In_ NCRYPT_PROV_HANDLE hSslProvider,_In_opt_ NCRYPT_KEY_HANDLE hPrivateKey,_Out_ NCRYPT_SSL_CIPHER_SUITE **ppCipherSuite,_Inout_ PVOID *ppEnumState,_In_ DWORD dwFlags)
NTSTATUS WINAPI bcrypt.BCryptKeyDerivation(_In_ BCRYPT_KEY_HANDLE hKey,_In_opt_ BCryptBufferDesc *pParameterList,_Out_ PUCHAR pbDerivedKey,_In_ ULONG cbDerivedKey,_Out_ ULONG *pcbResult,_In_ ULONG dwFlags)
BOOL None None.GetAccountDomainInfo(LSA_HANDLE PolicyHandle None)
NTSTATUS WINAPI bcrypt.BCryptDestroySecret(_In_ BCRYPT_SECRET_HANDLE hSecret)
HRESULT None certadm.get_Name([out] BSTR *pVal)
SECURITY_STATUS WINAPI ncrypt.SslExportKeyingMaterial(_In_ NCRYPT_PROV_HANDLE hSslProvider,_In_ NCRYPT_KEY_HANDLE hMasterKey,_In_ PCHAR sLabel,_In_ PBYTE pbRandoms,_In_ DWORD cbRandoms,_In_opt_ PBYTE pbContextValue,_In_ WORD cbContextValue,_Out_ PBYTE pbOutput,_In_ DWORD cbOutput,_In_ DWORD dwFlags)
NTSTATUS WINAPI bcrypt.BCryptRegisterConfigChangeNotify(_Out_ HANDLE *phEvent)
SECURITY_STATUS WINAPI tokenbinding.TokenBindingGetKeyTypesClient(_Out_ TOKENBINDING_KEY_TYPES **keyTypes)
HRESULT None certcli.EnumerateExtensions([out] BSTR *pstrExtensionName)
SCESTATUS WINAPI None.SceSvcAttachmentUpdate(IN PSCESVC_CALLBACK_INFO pSceCbInfo,IN SCESVC_CONFIGURATION_INFO *ServiceInfo)
NTSTATUS None advapi32.LsaLookupNames2(_In_ LSA_HANDLE PolicyHandle,_In_ ULONG Flags,_In_ ULONG Count,_In_ PLSA_UNICODE_STRING Names,_Out_ PLSA_REFERENCED_DOMAIN_LIST *ReferencedDomains,_Out_ PLSA_TRANSLATED_SID2 *Sids)
NTSTATUS WINAPI bcrypt.BCryptQueryContextConfiguration(_In_ ULONG dwTable,_In_ LPCWSTR pszContext,_Inout_ ULONG *pcbBuffer,_Inout_ PCRYPT_CONTEXT_CONFIG *ppBuffer)
SECURITY_STATUS WINAPI ncrypt.SslExportKey(_In_ NCRYPT_PROV_HANDLE hSslProvider,_In_ NCRYPT_KEY_HANDLE hKey,_In_ LPCWSTR pszBlobType,_Out_opt_ PBYTE pbOutput,_In_ DWORD cbOutput,_Out_ DWORD *pcbResult,_In_ DWORD dwFlags)
HRESULT None activeds.ADsOpenObject(_In_ LPCWSTR lpszPathName,_In_ LPCWSTR lpszUserName,_In_ LPCWSTR lpszPassword,_In_ DWORD dwReserved,_In_ REFIID riid,_Out_ VOID **ppObject)
NTSTATUS WINAPI bcrypt.BCryptGetFipsAlgorithmMode(_Out_ BOOLEAN *pfEnabled)
SECURITY_STATUS WINAPI ncrypt.SslOpenPrivateKey(_In_ NCRYPT_PROV_HANDLE hSslProvider,_Out_ NCRYPT_KEY_HANDLE *phPrivateKey,_In_ PCCERT_CONTEXT pCertContext,_In_ DWORD dwFlags)
HRESULT None certcli.EnumerateAttributes([out] BSTR *pstrAttributeName)
SECURITY_STATUS WINAPI ncrypt.SslComputeClientAuthHash(_In_ NCRYPT_PROV_HANDLE hSslProvider,_In_ NCRYPT_KEY_HANDLE hMasterKey,_In_ NCRYPT_HASH_HANDLE hHandshakeHash,_In_ LPCWSTR pszAlgId,_Out_ PBYTE pbOutput,_In_ DWORD cbOutput,_Out_ DWORD *pcbResult,_In_ DWORD dwFlags)
SECURITY_STATUS WINAPI ncrypt.SslImportMasterKey(_In_ NCRYPT_PROV_HANDLE hSslProvider,_In_ NCRYPT_KEY_HANDLE hPrivateKey,_Out_ NCRYPT_KEY_HANDLE *phMasterKey,_In_ DWORD dwProtocol,_In_ DWORD dwCipherSuite,_In_ PNCryptBufferDesc pParameterList,_In_ PBYTE pbEncryptedKey,_In_ DWORD cbEncryptedKey,_In_ DWORD dwFlags)
NTSTATUS WINAPI bcrypt.BCryptFinishHash(_Inout_ BCRYPT_HASH_HANDLE hHash,_Out_ PUCHAR pbOutput,_In_ ULONG cbOutput,_In_ ULONG dwFlags)
HRESULT None certadm.get_OCSPServiceProperties([out] IOCSPPropertyCollection **ppVal)
SECURITY_STATUS WINAPI tokenbinding.TokenBindingDeleteBinding(_In_ PCWSTR targetURL)
NTSTATUS WINAPI bcrypt.BCryptResolveProviders(_In_opt_ LPCWSTR pszContext,_In_opt_ DWORD dwInterface,_In_opt_ LPCWSTR pszFunction,_In_opt_ LPCWSTR pszProvider,_In_ DWORD dwMode,_In_ DWORD dwFlags,_Inout_ PDWORD pcbBuffer,_Inout_ PCRYPT_PROVIDER_REFS *ppBuffer)
NTSTATUS WINAPI bcrypt.BCryptImportKeyPair(_In_ BCRYPT_ALG_HANDLE hAlgorithm,_Inout_ BCRYPT_KEY_HANDLE hImportKey,_In_ LPCWSTR pszBlobType,_Out_ BCRYPT_KEY_HANDLE *phKey,_In_ PUCHAR pbInput,_In_ ULONG cbInput,_In_ ULONG dwFlags)
NTSTATUS None advapi32.LsaFreeMemory(_In_ PVOID Buffer)
HRESULT None certcli.GetDispositionMessage([out] BSTR *pstrDispositionMessage)
SECURITY_STATUS WINAPI ncrypt.SslFreeBuffer(_In_ PVOID pvInput)
HRESULT None certcli.GetCertificateExtensionFlags([out] LONG *pExtFlags)
NTSTATUS WINAPI bcrypt.BCryptEncrypt(_Inout_ BCRYPT_KEY_HANDLE hKey,_In_ PUCHAR pbInput,_In_ ULONG cbInput,_In_opt_ VOID *pPaddingInfo,_Inout_opt_ PUCHAR pbIV,_In_ ULONG cbIV,_Out_opt_ PUCHAR pbOutput,_In_ ULONG cbOutput,_Out_ ULONG *pcbResult,_In_ ULONG dwFlags)
SCESTATUS WINAPI None.SceSvcAttachmentUpdate(IN PSCESVC_CALLBACK_INFO pSceCbInfo,IN SCESVC_CONFIGURATION_INFO *ServiceInfo)
HRESULT None certcli.EnumerateExtensions([out] BSTR *pstrExtensionName)
VOID None activeds.ADsSetLastError(_In_ DWORD dwErr,_In_ LPWSTR pszError,_In_ LPWSTR pszProvider)
SECURITY_STATUS WINAPI ncrypt.SslGetProviderProperty(_In_ NCRYPT_PROV_HANDLE hSslProvider,_In_ LPCWSTR pszProperty,_Out_ PBYTE ppbOutput,_Out_ DWORD *pcbOutput,_Inout_ PVOID *ppEnumState,_In_ DWORD dwFlags)
SCESTATUS WINAPI None.SceSvcAttachmentAnalyze(IN PSCESVC_CALLBACK_INFO pSceCbInfo)
SECURITY_STATUS WINAPI ncrypt.SslImportKey(_In_ NCRYPT_PROV_HANDLE hSslProvider,_Out_ NCRYPT_KEY_HANDLE *phKey,_In_ LPCWSTR pszBlobType,_In_ PBYTE pbKeyBlob,_In_ DWORD cbKeyBlob,_In_ DWORD dwFlags)
LPVOID None activeds.AllocADsMem(_In_ DWORD cb)
NTSTATUS WINAPI bcrypt.BCryptImportKey(_In_ BCRYPT_ALG_HANDLE hAlgorithm,_In_opt_ BCRYPT_KEY_HANDLE hImportKey,_In_ LPCWSTR pszBlobType,_Out_ BCRYPT_KEY_HANDLE *phKey,_Out_opt_ PUCHAR pbKeyObject,_In_ ULONG cbKeyObject,_In_ PUCHAR pbInput,_In_ ULONG cbInput,_In_ ULONG dwFlags)
NTSTATUS WINAPI bcrypt.BCryptDeleteContext(_In_ ULONG dwTable,_In_ LPCWSTR pszContext)
HRESULT None taskschd.GetSecurityDescriptor(LONG securityInformation None,[out None None,retval] BSTR *pSddl)
HRESULT None taskschd.get_Type([out] TASK_TRIGGER_TYPE2 *pType)
NTSTATUS WINAPI bcrypt.BCryptEnumAlgorithms(_In_ ULONG dwAlgOperations,_Out_ ULONG *pAlgCount,_Out_ BCRYPT_ALGORITHM_IDENTIFIER **ppAlgList,_In_ ULONG dwFlags)
SECURITY_STATUS WINAPI ncrypt.SslComputeEapKeyBlock(_In_ NCRYPT_PROV_HANDLE hSslProvider,_In_ NCRYPT_KEY_HANDLE hMasterKey,_In_ PBYTE pbRandoms,_In_ DWORD cbRandoms,_Out_opt_ PBYTE pbOutput,_In_ DWORD cbOutput,_Out_ DWORD *pcbResult,_In_ DWORD dwFlags)
DWORD None mpr.WNetGetConnection(_In_ LPCTSTR lpLocalName,_Out_ LPTSTR lpRemoteName,_Inout_ LPDWORD lpnLength)
DWORD None mpr.WNetGetConnectionW(_In_ LPCTSTR lpLocalName,_Out_ LPTSTR lpRemoteName,_Inout_ LPDWORD lpnLength)
DWORD None mpr.WNetGetConnectionA(_In_ LPCTSTR lpLocalName,_Out_ LPTSTR lpRemoteName,_Inout_ LPDWORD lpnLength)
SECURITY_STATUS WINAPI ncrypt.SslCreateHandshakeHash(_In_ NCRYPT_PROV_HANDLE hSslProvider,_Out_ NCRYPT_HASH_HANDLE *phHandshakeHash,_In_ DWORD dwProtocol,_In_ DWORD dwCipherSuite,_In_ DWORD dwFlags)
SECURITY_STATUS WINAPI ncrypt.SslGetCipherSuitePRFHashAlgorithm(_In_ NCRYPT_PROV_HANDLE hSslProvider,_In_ DWORD dwProtocol,_In_ DWORD dwCipherSuite,_In_ DWORD dwKeyType,_Out_ WCHAR szPRFHash[NCRYPT_SSL_MAX_NAME_SIZE],_In_ DWORD dwFlags)
NTSTATUS WINAPI bcrypt.BCryptSetProperty(_Inout_ BCRYPT_HANDLE hObject,_In_ LPCWSTR pszProperty,_In_ PUCHAR pbInput,_In_ ULONG cbInput,_In_ ULONG dwFlags)
HRESULT None certcli.GetCertificateExtensionFlags([out] LONG *pExtFlags)
SECURITY_STATUS WINAPI ncrypt.SslEnumProtocolProviders(_Out_ DWORD *pdwProviderCount,_Out_ NCryptProviderName **ppProviderList,_In_ DWORD dwFlags)
SECURITY_STATUS WINAPI ncrypt.SslOpenProvider(_Out_ NCRYPT_PROV_HANDLE *phSslProvider,_In_ LPCWSTR pszProviderName,_In_ DWORD dwFlags)
NTSTATUS WINAPI bcrypt.BCryptGenerateKeyPair(_Inout_ BCRYPT_ALG_HANDLE hAlgorithm,_Out_ BCRYPT_KEY_HANDLE *phKey,_In_ ULONG dwLength,_In_ ULONG dwFlags)
SECURITY_STATUS WINAPI ncrypt.SslChangeNotify(_In_ HANDLE hEvent,_In_ DWORD dwFlags)
NET_API_STATUS None netapi32.NetShareDel(_In_ LMSTR servername,_In_ LMSTR netname,DWORD reserved None)
HRESULT None taskschd.get_Type([out] TASK_ACTION_TYPE *pType)
HRESULT None taskschd.get__NewEnum([out] IUnknown **ppEnum)
NET_API_STATUS None netapi32.NetSessionEnum(_In_ LPWSTR servername,_In_ LPWSTR UncClientName,_In_ LPWSTR username,_In_ DWORD level,_Out_ LPBYTE *bufptr,_In_ DWORD prefmaxlen,_Out_ LPDWORD entriesread,_Out_ LPDWORD totalentries,_Inout_ LPDWORD resume_handle)
SECURITY_STATUS WINAPI tokenbinding.TokenBindingGetKeyTypesServer(_Out_ TOKENBINDING_KEY_TYPES **keyTypes)
SECURITY_STATUS WINAPI ncrypt.SslDecryptPacket(_In_ NCRYPT_PROV_HANDLE hSslProvider,_Inout_ NCRYPT_KEY_HANDLE hKey,_In_ PBYTE *pbInput,_In_ DWORD cbInput,_Out_ PBYTE pbOutput,_In_ DWORD cbOutput,_Out_ DWORD *pcbResult,_In_ ULONGLONG SequenceNumber,_In_ DWORD dwFlags)
NTSTATUS WINAPI bcrypt.BCryptDuplicateHash(_In_ BCRYPT_HASH_HANDLE hHash,_Out_ BCRYPT_HASH_HANDLE *phNewHash,_Out_ PUCHAR pbHashObject,_In_ ULONG cbHashObject,_In_ ULONG dwFlags)
NTSTATUS WINAPI bcrypt.BCryptCreateHash(_Inout_ BCRYPT_ALG_HANDLE hAlgorithm,_Out_ BCRYPT_HASH_HANDLE *phHash,_Out_ PUCHAR pbHashObject,_In_opt_ ULONG cbHashObject,_In_opt_ PUCHAR pbSecret,_In_ ULONG cbSecret,_In_ ULONG dwFlags)
HRESULT None taskschd.get__NewEnum([out] IUnknown **ppEnum)
SECURITY_STATUS WINAPI ncrypt.SslCreateEphemeralKey(_In_ NCRYPT_PROV_HANDLE hSslProvider,_Out_ NCRYPT_KEY_HANDLE *phEphemeralKey,_In_ DWORD dwProtocol,_In_ DWORD dwCipherSuite,_In_ DWORD dwKeyType,_In_ DWORD dwKeyBitLen,_In_ PBYTE pbParams,_In_ DWORD cbParams,_In_ DWORD dwFlags)
HRESULT None taskschd.get_NextRunTime([out] DATE *pNextRunTime)
HRESULT None taskschd.get_NumberOfMissedRuns([out] DWORD *pNumberOfMissedRuns)
SECURITY_STATUS WINAPI ncrypt.SslSignHash(_In_ NCRYPT_PROV_HANDLE hSslProvider,_In_ NCRYPT_KEY_HANDLE hPrivateKey,_In_ PBYTE pbHashValue,_In_ DWORD cbHashValue,_Out_ PBYTE pbSignature,_In_ DWORD cbSignature,_Out_ DWORD *pcbResult,_In_ DWORD dwFlags)
HRESULT None activeds.SecurityDescriptorToBinarySD(_In_ VARIANT vVarSecDes,_Out_ PSECURITY_DESCRIPTOR *ppSecurityDescriptor,_Out_ PDWORD pdwSDLength,_In_ LPCWSTR pszServerName,_In_ LPCWSTR userName,_In_ LPCWSTR passWord,_In_ DWORD dwFlags)
NTSTATUS WINAPI bcrypt.BCryptDeleteContext(_In_ ULONG dwTable,_In_ LPCWSTR pszContext)
HRESULT None taskschd.get_Type([out] TASK_TRIGGER_TYPE2 *pType)
SECURITY_STATUS WINAPI ncrypt.SslLookupCipherLengths(_In_ NCRYPT_PROV_HANDLE hSslProvider,_In_ DWORD dwProtocol,_In_ DWORD dwCipherSuite,_In_ DWORD dwKeyType,_Out_ NCRYPT_SSL_CIPHER_LENGTHS *pCipherLengths,_In_ DWORD cbCipherLengths,_In_ DWORD dwFlags)
DWORD None mpr.WNetGetNetworkInformation(_In_ LPCTSTR lpProvider,_Out_ LPNETINFOSTRUCT lpNetInfoStruct)
DWORD None mpr.WNetGetNetworkInformationW(_In_ LPCTSTR lpProvider,_Out_ LPNETINFOSTRUCT lpNetInfoStruct)
DWORD None mpr.WNetGetNetworkInformationA(_In_ LPCTSTR lpProvider,_Out_ LPNETINFOSTRUCT lpNetInfoStruct)
DWORD None mpr.WNetEnumResource(_In_ HANDLE hEnum,_Inout_ LPDWORD lpcCount,_Out_ LPVOID lpBuffer,_Inout_ LPDWORD lpBufferSize)
DWORD None mpr.WNetEnumResourceW(_In_ HANDLE hEnum,_Inout_ LPDWORD lpcCount,_Out_ LPVOID lpBuffer,_Inout_ LPDWORD lpBufferSize)
DWORD None mpr.WNetEnumResourceA(_In_ HANDLE hEnum,_Inout_ LPDWORD lpcCount,_Out_ LPVOID lpBuffer,_Inout_ LPDWORD lpBufferSize)
HRESULT None taskschd.get__NewEnum([out] IUnknown **ppEnum)
DWORD None mpr.WNetOpenEnum(_In_ DWORD dwScope,_In_ DWORD dwType,_In_ DWORD dwUsage,_In_ LPNETRESOURCE lpNetResource,_Out_ LPHANDLE lphEnum)
DWORD None mpr.WNetOpenEnumW(_In_ DWORD dwScope,_In_ DWORD dwType,_In_ DWORD dwUsage,_In_ LPNETRESOURCE lpNetResource,_Out_ LPHANDLE lphEnum)
DWORD None mpr.WNetOpenEnumA(_In_ DWORD dwScope,_In_ DWORD dwType,_In_ DWORD dwUsage,_In_ LPNETRESOURCE lpNetResource,_Out_ LPHANDLE lphEnum)
HRESULT None taskschd.get__NewEnum([out] IUnknown **ppEnum)
DWORD None mpr.WNetAddConnection3(_In_ HWND hwndOwner,_In_ LPNETRESOURCE lpNetResource,_In_ LPTSTR lpPassword,_In_ LPTSTR lpUserName,_In_ DWORD dwFlags)
DWORD None mpr.WNetAddConnection3W(_In_ HWND hwndOwner,_In_ LPNETRESOURCE lpNetResource,_In_ LPTSTR lpPassword,_In_ LPTSTR lpUserName,_In_ DWORD dwFlags)
DWORD None mpr.WNetAddConnection3A(_In_ HWND hwndOwner,_In_ LPNETRESOURCE lpNetResource,_In_ LPTSTR lpPassword,_In_ LPTSTR lpUserName,_In_ DWORD dwFlags)
HRESULT None taskschd.get_Definition([out] ITaskDefinition **ppDefinition)
HRESULT None taskschd.get_State([out] TASK_STATE *pState)
DWORD None mpr.WNetGetConnection(_In_ LPCTSTR lpLocalName,_Out_ LPTSTR lpRemoteName,_Inout_ LPDWORD lpnLength)
DWORD None mpr.WNetGetConnectionW(_In_ LPCTSTR lpLocalName,_Out_ LPTSTR lpRemoteName,_Inout_ LPDWORD lpnLength)
DWORD None mpr.WNetGetConnectionA(_In_ LPCTSTR lpLocalName,_Out_ LPTSTR lpRemoteName,_Inout_ LPDWORD lpnLength)
HRESULT None taskschd.get_Name([out] BSTR *pName)
SECURITY_STATUS WINAPI ncrypt.SslGenerateSessionKeys(_In_ NCRYPT_PROV_HANDLE hSslProvider,_In_ NCRYPT_KEY_HANDLE hMasterKey,_Out_ NCRYPT_KEY_HANDLE *phReadKey,_Out_ NCRYPT_KEY_HANDLE *phWriteKey,_In_ PNCryptBufferDesc pParameterList,_In_ DWORD dwFlags)
HRESULT None activeds.Status([out] IDispatch **ppObject)
NTSTATUS WINAPI bcrypt.BCryptDuplicateKey(_In_ BCRYPT_KEY_HANDLE hKey,_Out_ BCRYPT_KEY_HANDLE *phNewKey,_Out_ PUCHAR pbKeyObject,_In_ ULONG cbKeyObject,_In_ ULONG dwFlags)
SECURITY_STATUS WINAPI ncrypt.SslCreateEphemeralKey(_In_ NCRYPT_PROV_HANDLE hSslProvider,_Out_ NCRYPT_KEY_HANDLE *phEphemeralKey,_In_ DWORD dwProtocol,_In_ DWORD dwCipherSuite,_In_ DWORD dwKeyType,_In_ DWORD dwKeyBitLen,_In_ PBYTE pbParams,_In_ DWORD cbParams,_In_ DWORD dwFlags)
HRESULT None taskschd.get_Name([out] BSTR *pName)
SECURITY_STATUS WINAPI ncrypt.SslComputeFinishedHash(_In_ NCRYPT_PROV_HANDLE hSslProvider,_In_ NCRYPT_KEY_HANDLE hMasterKey,_In_ NCRYPT_HASH_HANDLE hHandshakeHash,_Out_ PBYTE pbOutput,_In_ DWORD cbOutput,_In_ DWORD dwFlags)
HRESULT None taskschd.get_LastTaskResult([out] HRESULT *pLastTaskResult)
DWORD None mpr.WNetGetResourceInformation(_In_ LPNETRESOURCE lpNetResource,_Out_ LPVOID lpBuffer,_Inout_ LPDWORD lpcbBuffer,_Out_ LPTSTR *lplpSystem)
DWORD None mpr.WNetGetResourceInformationW(_In_ LPNETRESOURCE lpNetResource,_Out_ LPVOID lpBuffer,_Inout_ LPDWORD lpcbBuffer,_Out_ LPTSTR *lplpSystem)
DWORD None mpr.WNetGetResourceInformationA(_In_ LPNETRESOURCE lpNetResource,_Out_ LPVOID lpBuffer,_Inout_ LPDWORD lpcbBuffer,_Out_ LPTSTR *lplpSystem)
HRESULT None taskschd.get_LastRunTime([out] DATE *pLastRunTime)
HRESULT None taskschd.get_Xml([out] BSTR *pXml)
DWORD None mpr.WNetCancelConnection2(_In_ LPCTSTR lpName,_In_ DWORD dwFlags,_In_ BOOL fForce)
DWORD None mpr.WNetCancelConnection2W(_In_ LPCTSTR lpName,_In_ DWORD dwFlags,_In_ BOOL fForce)
DWORD None mpr.WNetCancelConnection2A(_In_ LPCTSTR lpName,_In_ DWORD dwFlags,_In_ BOOL fForce)
HRESULT None activeds.Resources([out] IADsCollection **ppResources)
SECURITY_STATUS WINAPI ncrypt.SslSignHash(_In_ NCRYPT_PROV_HANDLE hSslProvider,_In_ NCRYPT_KEY_HANDLE hPrivateKey,_In_ PBYTE pbHashValue,_In_ DWORD cbHashValue,_Out_ PBYTE pbSignature,_In_ DWORD cbSignature,_Out_ DWORD *pcbResult,_In_ DWORD dwFlags)
HRESULT None taskschd.get__NewEnum([out] IUnknown **ppEnum)
SECURITY_STATUS WINAPI ncrypt.SslCreateClientAuthHash(_In_ NCRYPT_PROV_HANDLE hSslProvider,_Out_ NCRYPT_HASH_HANDLE *phHandshakeHash,_In_ DWORD dwProtocol,_In_ DWORD dwCipherSuite,_In_ LPCWSTR pszHashAlgId,_In_ DWORD dwFlags)
HRESULT None taskschd.GetInstances(LONG flags None,[out] IRunningTaskCollection **ppRunningTasks)
HRESULT None activeds.PrintJobs([out] IADsCollection **ppPrintJobs)
HRESULT None mstask.GetWorkItemData([out] WORD *pcBytes,[out] BYTE **ppBytes)
HRESULT None mstask.SetCreator(LPCWSTR pwszCreator None)
NTSTATUS WINAPI bcrypt.BCryptDestroyHash(_Inout_ BCRYPT_HASH_HANDLE hHash)
HRESULT None mstask.GetIdleWait([out] WORD *pwIdleMinutes,[out] WORD *pwDeadlineMinutes)
SECURITY_STATUS WINAPI ncrypt.SslDecrementProviderReferenceCount(_In_ NCRYPT_PROV_HANDLE hSslProvider)
SECURITY_STATUS WINAPI ncrypt.SslGenerateSessionKeys(_In_ NCRYPT_PROV_HANDLE hSslProvider,_In_ NCRYPT_KEY_HANDLE hMasterKey,_Out_ NCRYPT_KEY_HANDLE *phReadKey,_Out_ NCRYPT_KEY_HANDLE *phWriteKey,_In_ PNCryptBufferDesc pParameterList,_In_ DWORD dwFlags)
HRESULT None taskschd.get__NewEnum([out] IUnknown **ppEnum)
DWORD None mpr.WNetAddConnection2(_In_ LPNETRESOURCE lpNetResource,_In_ LPCTSTR lpPassword,_In_ LPCTSTR lpUsername,_In_ DWORD dwFlags)
DWORD None mpr.WNetAddConnection2W(_In_ LPNETRESOURCE lpNetResource,_In_ LPCTSTR lpPassword,_In_ LPCTSTR lpUsername,_In_ DWORD dwFlags)
DWORD None mpr.WNetAddConnection2A(_In_ LPNETRESOURCE lpNetResource,_In_ LPCTSTR lpPassword,_In_ LPCTSTR lpUsername,_In_ DWORD dwFlags)
HRESULT None taskschd.get_Path([out] BSTR *pPath)
public Object None.Invoke(String methodName None,Object[] args None)
NTSTATUS WINAPI bcrypt.BCryptDestroyHash(_Inout_ BCRYPT_HASH_HANDLE hHash)
HRESULT None mstask.GetComment([out] LPWSTR *ppwszComment)
HRESULT None mstask.GetNextRunTime([out] SYSTEMTIME *pstNextRun)
HRESULT None mstask.GetTriggerCount([out] WORD *plCount)
HRESULT None mstask.GetStatus([out] HRESULT *phrStatus)
HRESULT None taskschd.get_Enabled([out] VARIANT_BOOL *pEnabled)
HRESULT None mstask.GetCreator([out] LPWSTR *ppwszCreator)
DWORD None mpr.WNetCloseEnum(_In_ HANDLE hEnum)
HRESULT None mstask.GetFlags([out] DWORD *pdwFlags)
SECURITY_STATUS WINAPI ncrypt.SslVerifySignature(_In_ NCRYPT_PROV_HANDLE hSslProvider,_In_ NCRYPT_KEY_HANDLE hPublicKey,_In_ PBYTE pbHashValue,_In_ DWORD cbHashValue,_In_ PBYTE pbSignature,_In_ DWORD cbSignature,_In_ DWORD dwFlags)
HRESULT None mstask.GetErrorRetryCount([out] WORD *pwRetryCount)
DWORD None mpr.WNetDisconnectDialog(_In_ HWND hwnd,_In_ DWORD dwType)
HRESULT None mstask.GetAccountInformation([out] LPWSTR *ppwszAccountName)
HRESULT None mstask.GetExitCode([out] DWORD *pdwExitCode)
DWORD None mpr.WNetGetLastError(_Out_ LPDWORD lpError,_Out_ LPTSTR lpErrorBuf,_In_ DWORD nErrorBufSize,_Out_ LPTSTR lpNameBuf,_In_ DWORD nNameBufSize)
DWORD None mpr.WNetGetLastErrorW(_Out_ LPDWORD lpError,_Out_ LPTSTR lpErrorBuf,_In_ DWORD nErrorBufSize,_Out_ LPTSTR lpNameBuf,_In_ DWORD nNameBufSize)
DWORD None mpr.WNetGetLastErrorA(_Out_ LPDWORD lpError,_Out_ LPTSTR lpErrorBuf,_In_ DWORD nErrorBufSize,_Out_ LPTSTR lpNameBuf,_In_ DWORD nNameBufSize)
public int None.CompareTo(Object obj None)
HRESULT None mstask.SetFlags(DWORD dwFlags None)
protected void None.SetItem(int index None,T item None)
HRESULT None mstask.SetErrorRetryInterval(WORD wRetryInterval None)
public None None.RSACryptoServiceProvider(CspParameters parameters None)
HRESULT None mstask.GetErrorRetryInterval([out] WORD *pwRetryInterval)
HRESULT None mstask.SetErrorRetryCount(WORD wRetryCount None)
UInt64 None None.ToUInt64(IFormatProvider provider None)
public void None.AddRange(Object[] items None)
public String None.Insert(int startIndex None,String value None)
public ResourceSet None.GetResourceSet(CultureInfo culture None,boolean createIfNotExists None,boolean tryParents None)
SerializableAttribute None None.ClassInterfaceAttribute(ClassInterfaceType.None None None)
protected void None.LinqDataSource_Updating(object sender None,LinqDataSourceUpdateEventArgs e None)
public None None.Decimal(int lo None,int mid None,int hi None,boolean isNegative None,byte scale None)
public None None.Decimal(int lo None,int mid None,int hi None,boolean isNegative None,byte scale None)
public None None.Decimal(int lo None,int mid None,int hi None,boolean isNegative None,byte scale None)
public None None.Decimal(int lo None,int mid None,int hi None,boolean isNegative None,byte scale None)
public None None.XamlParseException(String message None,Exception innerException None)
delegate void None.TestDelegate(string s None)
public T None.GetValueOrDefault(T defaultValue None)
public None None.Decimal(int lo None,int mid None,int hi None,boolean isNegative None,byte scale None)
public DateTime None.AddSeconds(double value None)
boolean None None.ToBoolean(IFormatProvider provider None)
static String None.IsFileURI(String path None)
public ArrayList None.GetRange(int index None,int count None)
static String None.IsFileURI(String path None)
public None None.StreamingContext(StreamingContextStates state None,Object additional None)
public DateTime None.AddSeconds(double value None)
public void None.EnsureVisible(int index None)
float None None.ToSingle(IFormatProvider provider None)
public Object None.Invoke(DispatcherPriority priority None,TimeSpan timeout None,Delegate method None)
Dim None None.prices(3 None None,4 None None,5 None None)
public void None.EnsureVisible(int index None)
Object None None.GetFormat(Type formatType None)
public void None.AddRange(Object[] items None)
public void None.EnsureVisible(int index None)
public void None.CopyTo(int sourceIndex None,char[] destination None,int destinationIndex None,int count None)
public boolean None.Match(Object obj None)
public None None.InstallerTypeAttribute(String typeName None)
private void None.button1_Click(Object sender None,System.EventArgs e None)
public void None.EnsureVisible(int index None)
private void None.CopyWithProgress(String fileNames[] None)
private void None.button1_Click(Object sender None,System.EventArgs e None)
VOID WINAPI kernel32.Sleep(_In_ DWORD dwMilliseconds)
protected void None.button1_Click(Object sender None,System.EventArgs e None)
private void None.SelectNode(TreeNode node None)
public String None.ToString(String format None)
public void None.ReadXmlSchema(Stream stream None)
SerializableAttribute None None.TypeConverterAttribute(System.Windows.Forms.ListViewGroupConverter None None)
protected void None.OnPaint(PaintEventArgs e None)
async Task None.TestWriter(Stream stream None)
private void None.myButton_Click(Object sender None,EventArgs e None)
void None None.Remove(Object value None)
protected void None.OnDragOver(DragEventArgs drgevent None)
public void None.ReadXmlSchema(Stream stream None)
public None None.Employee(string name None,string alias None)
void None None.Add(TKey key None,TValue value None)
public void None.Lock(long position None,long length None)
public void None.ReadXmlSchema(Stream stream None)
public String None.GetAbbreviatedMonthName(int month None)
private void None.Button1_Click(Object sender None,EventArgs e None)
protected void None.InvokePaintBackground(Control c None,PaintEventArgs e None)
private void None.listDragTarget_DragDrop(Object sender None,System.Windows.Forms.DragEventArgs e None)
public Rectangle None.PositionEditingPanel(Rectangle cellBounds None,Rectangle cellClip None,DataGridViewCellStyle cellStyle None,boolean singleVerticalBorderAdded None,boolean singleHorizontalBorderAdded None,boolean isFirstDisplayedColumn None,boolean isFirstDisplayedRow None)
protected boolean None.MouseUpUnsharesRow(DataGridViewCellMouseEventArgs e None)
private void None.Button_HideLabel(Object sender None,EventArgs e None)
public int None.SetValue(UInt32 value None)
short None None.ToInt16(IFormatProvider provider None)
public int None.GetEra(DateTime time None)
private void None.Button_HideLabel(Object sender None,EventArgs e None)
UInt32 None None.ToUInt32(IFormatProvider provider None)
public void None.MoveTo(String destFileName None)
public void None.SetError(Control control None,String value None)
public int None.ToFourDigitYear(int year None)
public DateTime None.AddHours(DateTime time None,int hours None)
private void None.treeView1_KeyDown(Object sender None,KeyEventArgs e None)
protected void None.RaiseCellContentDoubleClick(DataGridViewCellEventArgs e None)
public int None.GetHour(DateTime time None)
public String None.Replace(String oldValue None,String newValue None)
private void None.currencyTextBox_TextChanged(Object sender None,EventArgs e None)
public int None.IndexOf(String value None)
protected void None.OnDragDrop(DragEventArgs drgevent None)
public void None.RemoveByKey(String key None)
public void None.SetIconPadding(Control control None,int padding None)
protected boolean None.ProcessMnemonic(char charCode None)
protected None None.NotSupportedException(SerializationInfo info None,StreamingContext context None)
private void None.button1_Click(Object sender None,System.EventArgs e None)
boolean None None.Equals(T other None)
private void None.myButton_Click(Object sender None,EventArgs e None)
protected boolean None.ProcessMnemonic(char charCode None)
public DayOfWeek None.GetDayOfWeek(DateTime time None)
public void None.Save(String filename None)
public void None.Send(Object obj None)
protected boolean None.ProcessMnemonic(char charCode None)
protected void None.OnPrint(PaintEventArgs e None)
protected boolean None.ProcessMnemonic(char charCode None)
private void None.myButton_Click(Object sender None,EventArgs e None)
SerializableAttribute None None.TypeConverterAttribute(System.Windows.Forms.ListViewItemConverter None None)
public DayOfWeek None.GetDayOfWeek(DateTime time None)
protected void None.OnVisibleChanged(EventArgs e None)
public void None.Send(Object obj None)
